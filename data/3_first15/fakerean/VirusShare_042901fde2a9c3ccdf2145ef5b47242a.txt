and
adc
inc
adc
pop
adc
jno
popa
add
popa
add
adc
aam
popa
add
adc
add
popa
add
adc
cmp
popa
add
popa
add
popa
add
add
add
popa
add
adc
rcll
popa
add
adc
notl
popa
add
adc
adc
adc
cmp
popa
add
popa
add
popa
add
popa
add
adc
scas
adc
ret
add
adc
fstl
popa
add
adc
or
popa
add
adc
dec
adc
adc
adcl
popa
add
adc
lret
adc
loop
popa
add
adc
unpcklps
daa
adc
add
popa
add
popa
add
popa
add
popa
add
adc
add
popa
add
adc
add
adc
add
adc
popa
add
adc
popa
add
popa
add
popa
add
adc
popa
add
adc
add
add
add
loopne
popa
add
adc
popa
add
push
popa
add
push
popa
add
popa
add
popa
add
popa
add
push
popa
add
push
popa
add
push
popa
add
push
popa
add
push
popa
add
push
popa
add
pop
popa
add
pop
popa
add
pop
popa
add
popa
add
add
popa
add
pop
popa
add
pop
popa
add
pop
popa
add
pop
popa
add
sbb
adc
sbb
cmp
popa
add
popa
add
popa
add
popa
add
sbb
lods
sbb
mov
sbb
in
popa
add
sbb
or
popa
add
sbb
and
popa
add
sbb
dec
sbb
pop
sbb
jno
popa
add
sbb
test
sbb
lret
add
sbb
out
popa
add
sbb
add
sbb
xor
popa
add
popa
add
add
popa
add
popa
add
popa
add
sbb
xlat
sbb
in
popa
add
sbb
add
popa
add
sbb
pop
sbb
xor
popa
add
popa
add
popa
add
popa
add
sbb
movb
shll
add
frstor
inc
mov
adc
orb
push
repnz
jo
dec
mov
nop
xchg
in
lock
xchg
jne
push
and
jne
xor
fildl
addr16
mov
inc
jmp
inc
loopne
cmpsl
jecxz
xchg
mov
dec
sub
fidivrl
cmpsb
sbbb
push
enter
or
stos
xchg
sbb
fs
flds
mov
inc
dec
cmp
push
dec
add
fucomi
mov
jge
pop
pushl
ja
add
sbb
fld
inc
inc
addl
int
push
flds
mov
rcrb
cmp
inc
test
mov
xchg
data16
mov
inc
push
push
fsubl
divl
fimull
jl
and
mov
jbe
xchg
xchg
ret
push
cli
icebp
clc
fsubl
dec
pop
jns
lahf
sbb
xchg
mov
push
scas
pop
dec
fadds
cmp
xor
cli
mov
pop
xchg
mov
lods
test
lods
movsl
lcall
adc
mov
data16
ss
loop
xchg
or
jle
sub
jp
inc
lahf
add
inc
insb
mov
ss
or
xchg
stos
mov
dec
in
aam
aaa
cltd
je
cmp
pop
push
sahf
clc
std
push
cld
cmp
push
les
and
push
stos
xlat
push
pushf
pop
xor
test
sbb
dec
aaa
pop
lea
inc
ja
inc
lods
ss
pop
xchg
ficompl
cmp
fimull
pop
das
or
call
fstps
dec
adc
xchg
dec
add
push
and
lret
xchg
icebp
cmpsl
popa
xor
xor
xchg
std
sub
pushf
pop
cmp
dec
and
and
pusha
mov
ljmp
mov
addl
ror
dec
dec
cwtl
das
mov
mov
xlat
pop
and
pop
inc
push
sub
jge
mov
and
movsb
jg
das
mov
add
sbb
into
cli
sbb
das
sbb
lods
je
lret
dec
dec
xor
sbb
inc
jmp
push
inc
outsb
cli
add
add
pop
adc
cmp
mov
xchg
lea
mov
push
outsl
xor
adc
cwtl
jp
imul
mull
loop
pextrw
xchg
sahf
test
bound
je
fucomip
pop
jl
dec
sub
jp
or
jp
dec
cmp
popa
scas
cmp
inc
cmp
je
and
incb
bound
dec
data16
xchg
mov
stos
pop
xorb
sub
cmp
xchg
mov
test
repz
cmpsl
ret
fdivrl
mov
lcall
xor
mov
or
mov
sub
movsb
scas
lret
push
in
sub
cmp
xchg
xchg
icebp
lods
mov
inc
in
push
pop
popf
xchg
mov
gs
jns
push
je
pusha
mov
xor
push
loope
mov
pushf
dec
push
mov
jecxz
dec
mov
mov
xchg
inc
push
lahf
adc
push
in
mov
insb
and
jp
jo
and
in
sbb
pop
inc
mov
std
add
mov
adc
or
jl
stc
and
ret
xor
push
sarb
test
jecxz
loope
adc
add
stos
lret
adc
fcoml
dec
xor
test
pop
xchg
mov
or
fsub
and
fstpt
scas
push
dec
test
inc
add
pop
jb
xchg
leave
xchg
inc
mov
jne
stc
push
lods
mov
in
or
in
xchg
or
mov
test
call
xor
inc
mov
fnstsw
jmp
shrb
aaa
lret
fadds
hlt
mov
call
dec
cld
or
mov
fsts
mov
jp
xchg
and
jmp
imul
fstpt
sub
test
or
or
js
notl
push
lret
push
xchg
xchg
pop
jae
mov
int
pop
jne
sti
adc
push
inc
adc
popf
into
imul
lret
insl
push
push
fisubs
inc
lds
iret
loop
mov
dec
mov
dec
sub
pop
mov
outsl
leave
stc
adc
push
ljmp
out
fstpl
xlat
add
shll
in
cmp
push
scas
fistpll
jb
sub
lcall
push
add
pop
push
stc
outsb
xchg
lods
mov
adc
outsb
aaa
jnp
cmpb
loope
sub
and
test
shll
push
sbb
ret
leave
sub
fidivrl
push
sahf
mov
fwait
insb
pop
cli
insl
jb
pop
sbb
mov
jecxz
dec
mov
cmovae
mov
pusha
test
mov
add
jl
jle
test
cmpsb
call
test
xor
pop
dec
sbb
sub
int
fmuls
adc
les
fsub
jecxz
xchg
mov
lahf
cmp
push
out
lods
mov
jmp
subb
jge
call
fidivl
popa
lahf
sub
aas
or
jmp
mov
dec
shlb
shlb
test
jle
lret
jg
icebp
mov
jmp
outsb
lds
pop
ljmp
dec
cmp
imul
pop
push
add
mov
lds
cli
dec
mov
imul
cli
dec
or
fildll
lods
aaa
repz
imul
lcall
or
imul
sbb
pop
xchg
xchg
pop
je
sbb
xchg
sbbl
sbb
xchg
test
push
jg
je
sarb
inc
and
das
dec
mov
mov
lahf
imul
je
or
sbb
jno
mov
sub
xchg
fs
mov
in
loope
inc
mov
adc
cmp
roll
xchg
sti
push
mov
add
sub
sti
xchg
push
lods
pop
sub
inc
fisttpl
dec
xchg
cmp
ss
inc
inc
stos
das
divl
pop
mov
in
xor
mov
cmp
aad
jle
jle
jmp
in
aas
or
xor
or
jp
push
outsb
jae
lods
mov
cmp
mov
xlat
push
xor
addr16
and
stos
lret
xorl
aaa
and
jbe
ficompl
xor
dec
fbld
or
add
lret
icebp
xor
lods
test
push
mov
mov
mov
xor
and
aad
int
and
pop
in
loop
or
inc
push
sub
sub
cmp
cli
mov
jl
lret
pop
popa
movb
cmpsl
std
dec
sub
sbb
sbb
pusha
stos
int
cltd
stc
into
mov
cmpsb
ljmp
pop
out
cmp
imul
fucomp
mov
dec
in
in
arpl
std
stc
outsb
inc
inc
mov
cmpsb
movsl
es
lds
fisttpll
add
dec
lahf
add
and
les
fsubs
mov
cmp
stos
pop
mov
xor
mov
pop
scas
cmc
mov
ret
pop
movsb
sarl
insb
aaa
leave
insb
adc
jb
and
loope
test
or
push
imul
cmc
cmp
data16
inc
loope
xchg
adc
daa
push
aaa
dec
repz
rcr
mov
enter
cmpsb
divl
sbb
fcmovbe
mov
mov
das
push
je
mov
mov
pop
add
add
inc
icebp
mov
xchg
fnstsw
or
aam
inc
sbbb
rcll
inc
mov
addr16
pop
mov
dec
dec
sbb
and
pop
sub
adc
rclb
bound
adc
out
in
push
ret
cli
xor
lock
imul
sub
daa
or
cld
fwait
in
out
xor
pop
cmpsl
push
xchg
sub
pushf
xor
ss
add
lock
xchg
loopne
dec
xor
sbb
jne
jl
sbb
or
cld
mov
clc
mov
cli
add
imul
cld
mulb
in
fs
fwait
mov
sub
mov
sbb
sbbb
cwtl
test
xlat
stos
cld
rcr
lds
or
test
out
pop
xor
out
test
aam
xor
fbld
fsts
sbb
ss
mov
arpl
mov
push
aam
xlat
pop
repnz
sbb
push
fs
mov
loopne
in
xor
mov
mov
add
leave
mov
icebp
add
lahf
cmpl
cmpsl
jae
daa
into
movsl
mov
sub
cli
mov
adc
dec
in
aaa
jge
cmpsl
mov
push
cmp
loope,pt
xor
mov
ljmp
test
xor
pop
sub
jmp
cwtl
vmread
dec
push
and
jmp
adc
push
aad
pop
mov
je
daa
loop
out
outsl
mov
cmp
mov
jae
mov
in
or
scas
stc
aad
rorl
cmp
into
mov
pop
xor
jae
mov
ret
les
aaa
inc
sysenter
iret
xchg
inc
push
sti
cmp
fsubl
data16
jbe
adc
or
movsb
popf
cltd
xchg
xchg
dec
cmp
jo
stc
xchg
sbb
pop
xorl
scas
push
adcb
insl
icebp
popf
mov
icebp
fcmovnbe
mov
xor
push
loopne
adc
lret
aam
sub
mov
inc
ficoms
cmpsl
cmp
xchg
mov
mov
pop
adc
xor
inc
pop
mov
adc
lea
pop
add
test
stos
mov
fs
cli
out
mov
test
sbb
inc
adc
test
mov
sub
int3
pop
xor
mov
das
aaa
addl
hlt
clc
insl
in
xor
sub
inc
add
or
jl
cwtl
out
mov
jg
xchg
adc
je
and
jl
iret
arpl
add
aaa
ss
jmp
orb
xchg
pop
int3
imul
pop
add
dec
push
push
js
and
in
ret
fdivrs
mov
mov
add
psraw
adc
add
sbb
pop
and
lock
ret
mov
mov
out
inc
ret
fs
mov
jne
xor
imul
xor
out
pop
push
adc
nop
or
add
mov
mov
negl
daa
xor
loopne
xor
imull
or
push
mov
push
js
mov
pop
and
pop
movsl
mov
xlat
sub
jbe
add
mov
add
cmp
clc
pusha
ja
ret
scas
inc
adc
jecxz
and
cmp
mov
aad
fisubrl
pop
mov
lcall
fstps
jle
push
push
or
popa
add
popf
insl
lea
jmp
fldl
das
out
outsl
xor
je
sti
pop
sub
and
mov
insl
out
xlat
dec
mov
pop
push
cmp
rcrb
dec
inc
push
bound
movsb
pop
cmc
adc
push
add
repnz
push
mov
cmp
rclb
xchg
fisubrs
jns
ljmp
shlb
mov
sbb
repz
pusha
add
sub
sub
aaa
adc
mov
and
scas
test
stc
add
mov
dec
push
lea
xor
lea
dec
xchg
mov
std
mov
mov
sub
xor
mov
loopne
lods
pop
loop
fbstp
outsl
imul
sbb
lret
push
fdiv
dec
or
xlat
pop
mov
ret
stc
add
xchg
call
inc
jle
cli
mov
cmc
jns
aam
lock
test
loop
xchg
inc
push
or
push
lods
movsl
mov
xchg
push
xchg
bound
lock
cmp
fistpl
jp
push
cltd
daa
xchg
xchg
xchg
cmp
lods
shr
clc
mov
adc
jge
dec
std
sbb
addr16
jmp
test
cmp
cmpsb
inc
icebp
push
lcall
sti
jp
push
push
pushf
add
lret
idivb
ret
xchg
sub
cmp
lds
pop
or
push
std
out
mov
sbb
adc
adc
pop
or
xorl
mov
jns
sti
ss
jbe
outsb
cs
or
pop
cmpsl
ds
in
push
jbe
stos
jo
xchg
fnstenv
sarl
cmp
pop
pop
mov
fwait
insl
lahf
notl
pop
test
jl
jmp
or
js
imul
push
es
adcb
aaa
fimuls
pop
mov
mov
xchg
xchg
enter
mov
adc
pushf
daa
loope
data16
pop
arpl
stc
sbb
cli
nop
mov
jl
inc
push
shrl
mov
inc
mov
and
lock
lea
cmp
inc
stos
dec
jns
adc
dec
cmc
stos
mov
gs
inc
ds
in
imul
push
cmp
int3
call
pop
in
dec
stc
fistpll
xchg
out
out
subl
mov
sub
cmpsl
xchg
sahf
lret
dec
push
inc
dec
pop
outsl
ljmp
in
push
inc
or
inc
adc
pop
cwtl
xor
inc
lds
psubd
mov
ds
cltd
lods
inc
jecxz
sti
sar
push
int3
sahf
mov
arpl
xchg
cli
xchg
in
dec
test
mov
scas
sbb
jle
adcb
push
dec
scas
movsl
sub
and
mov
push
pushf
jo
xchg
int
pop
fnclex
cmp
sub
mov
fsubs
sbb
add
xor
ss
jnp
inc
mov
inc
jnp
pop
push
out
mov
and
mov
in
jno
push
inc
std
ficomps
fcomip
loop
push
lock
stos
mov
cld
std
cmpsb
jb
clc
out
sub
mov
jge
jb
imull
pop
out
in
xchg
dec
pop
je
mov
roll
enter
out
sbb
xor
push
fwait
cmp
pop
cmp
pusha
hlt
xorb
cmpsl
mov
sub
jne
iret
inc
mov
pop
xor
das
fwait
xchg
ret
clc
dec
aad
dec
rolb
out
fidivrl
fsubrl
insb
lods
mov
push
push
xchg
inc
dec
sub
jmp
and
mov
dec
sbb
notl
pushf
and
cltd
dec
cmpsb
mov
cmp
outsb
xchg
xchg
mov
lea
and
jge
fidivl
cmp
pop
aam
jge
push
push
pop
test
or
lea
gs
add
pop
cltd
jg
mov
nop
cmp
int
test
in
movsb
inc
les
push
je
into
lret
sbb
mov
add
out
int
lods
loope
adc
cld
inc
cwtl
xor
sti
and
and
insl
pop
fucomip
mov
pop
into
in
rorl
adc
mov
dec
or
loopne
nop
leave
push
xchg
cmp
push
pop
or
push
outsb
inc
fs
jge
xor
out
shrb
sahf
rorl
mov
insl
insb
push
push
pop
push
inc
mov
fcmovu
mov
jmp
jl
divl
stos
lds
test
sti
xchg
in
xchg
xchg
aam
add
aas
pusha
add
ret
mov
inc
fs
jl
sub
jns
fildl
push
jecxz
mov
adc
cwtl
rcll
nop
cmp
pop
call
pop
or
sub
lods
in
mov
and
scas
sub
cld
fadds
pop
das
sbb
fcmovu
xlat
dec
sub
mov
jb
mov
jp
adc
cmp
lods
jne
inc
test
int3
lret
bts
test
inc
and
sbb
into
pop
mov
xchg
xchg
btc
cmp
arpl
pusha
lods
test
pop
sbb
repz
pop
cltd
push
cmp
add
sbb
jmp
adc
jae
dec
fldt
mov
mov
stc
pop
test
adc
add
mov
sub
cmpsb
push
push
sub
repnz
cmp
jb
loop
lock
fwait
hlt
xor
push
mov
cmp
xchg
loope
xchg
or
hlt
dec
in
adc
push
fildl
xchg
or
sub
shrb
loop
iret
stc
sbb
dec
fs
and
jb
adc
movsl
pop
imul
sbb
mov
sahf
inc
orb
iret
cmpsb
push
xlat
dec
fadds
fidivl
mov
inc
lds
dec
mov
inc
sti
fnstsw
pop
cld
insl
jno
lods
rorl
and
pop
mov
and
cmpsb
cmc
rclb
fsubr
movsl
pusha
fildll
int
push
pusha
dec
stos
cltd
movsb
jmp
cmp
xor
pusha
lds
sub
dec
fnsave
xchg
dec
stos
mov
push
jl
lods
add
sbb
bound
ljmp
pusha
loope
mov
lods
fildll
cmp
incl
lret
hlt
fsincos
pop
or
fsubl
cmp
xor
fisubrl
ja
mov
jecxz
pop
daa
pop
inc
mov
iret
out
or
dec
jmp
stos
mov
mov
int3
shll
outsl
xor
add
fstl
mov
mov
notb
xchg
push
jp
mov
cmp
scas
or
and
mov
dec
outsb
xchg
sbb
xor
repnz
pop
inc
sti
xchg
mov
icebp
lock
jmp
mov
mov
push
hlt
mov
aas
pusha
insl
lcall
sbb
pop
xchg
push
mov
jae
cli
adc
xor
enter
lret
lahf
jmp
ret
fldt
mov
int
pop
inc
lret
add
jo
in
addr16
psllw
mov
int3
add
xor
mov
xchg
push
push
cmp
cli
mov
clc
cmc
in
xchg
arpl
xor
inc
roll
xor
daa
int
int
push
je
dec
or
push
mov
rorb
rol
adc
imul
jns
lds
mov
ja,pt
mov
xor
lahf
push
push
ret
xchg
sub
mov
in
data16
imul
lods
stc
or
and
pop
rorb
imul
stos
jns
in
push
pop
repnz
jg
xchg
ja
nop
xchg
stc
test
lcall
popa
or
dec
mov
mov
dec
vpmullw
aad
jg
repnz
xchg
xor
lret
jae
jmp
inc
mov
dec
mov
xchg
or
enter
dec
dec
xchg
push
sub
dec
out
pop
xor
xor
mov
xchg
dec
movsb
aam
call
push
jg
outsl
nop
mov
and
out
add
mov
push
inc
inc
popa
iret
xor
pop
mov
shrl
stos
xchg
jecxz
inc
fldt
je
negl
mov
pop
jbe
jae
lcall
mov
mov
mov
shrb
adcb
test
push
js
and
test
test
cmp
stos
xor
ljmp
mov
ss
jnp
jns
pop
int
jns
popf
dec
imul
fdivl
mov
std
lret
int3
push
inc
mov
and
xchg
insb
push
inc
mov
adc
adc
popa
mov
mov
test
loop
or
lea
mov
frstor
or
xor
test
loop
es
hlt
ja
add
incb
mov
mov
mov
in
clc
push
sbb
add
dec
mov
hlt
cmp
push
gs
shll
mov
mov
xchg
xchg
clc
dec
and
shl
fstps
xor
sbb
add
out
mov
popf
mov
cwtl
jg
mov
push
leave
push
cmc
fiaddl
leave
dec
sahf
cmp
aam
mov
inc
jmp
lahf
sub
mov
add
ret
stos
movsl
dec
iret
sbb
and
aam
mov
bnd
gs
jle
test
je
dec
loope
push
and
push
insl
in
int
jle
inc
xchg
cmovg
fwait
mov
addr16
pop
sub
cs
imul
xor
sub
fsubrs
add
xor
xor
pop
fisttps
mov
jno
leave
pop
mov
jmp
sarb
mov
pusha
mov
into
xor
hlt
sub
mov
sahf
adc
int3
stc
aad
cmp
pop
ljmp
lods
test
popf
cmp
or
testb
cmc
lods
dec
stos
xor
cmp
scas
cwtl
jmp
or
fwait
aaa
and
fsubl
push
insl
mov
int
inc
dec
jge
loopne,pt
sub
pop
dec
xchg
or
insl
ss
and
or
pusha
jne
pusha
adc
pop
cmpsb
loope
pop
pop
push
in
mov
imul
dec
in
cmp
icebp
fnstenv
xor
cmp
or
lahf
mov
mov
lcall
jmp
sbb
loopne
arpl
orb
sub
push
loope
int3
cld
orb
cmp
mov
cld
in
mov
mov
cmpps
shr
jp
movsl
xchg
or
test
dec
jmp
or
out
xchg
out
repz
movsl
inc
shlb
imul
jp
cld
jg
and
out
pop
and
jmp
enter
mov
xchg
xchg
or
ljmp
mov
push
and
in
test
mov
in
lahf
int3
cmc
cli
fs
lds
daa
sub
fucomp
jne
jmp
cmp
mov
stos
ja
cld
sub
stos
cmp
icebp
in
shr
sub
mulb
inc
js
cmc
sbb
mov
stos
dec
addr16
pop
cmc
out
add
xchg
mov
xor
adc
fs
arpl
push
sahf
aaa
xor
mov
scas
dec
das
int
rorl
jb
mov
mov
leave
les
std
arpl
rorl
test
push
mov
push
adc
sbb
icebp
test
cli
dec
mov
rorb
mov
fldenv
aas
fisttps
mov
mov
jae
adc
mov
or
je
shrb
bound
int
push
xor
dec
cwtl
xchg
jle
pop
push
push
scas
ds
outsb
lods
pop
js
mov
cmp
pusha
xor
out
ja
add
sbb
aaa
lods
and
lods
inc
lods
je
sub
aaa
or
jns
icebp
inc
jae
in
nop
fisttps
cwtl
cld
xchg
pop
js
leave
or
std
mov
jge
or
jnp
cmp
mov
movsl
mov
icebp
inc
adc
mov
xor
iret
cld
dec
jl
rcrl
fcoml
mov
lods
xor
jb
cld
inc
pop
sbbl
repnz
lock
inc
mov
lret
adc
lds
cmp
popa
inc
sbb
sbb
inc
mov
jbe
aad
sbb
xor
xor
pop
push
dec
mov
rcrl
ss
and
push
sahf
pop
mov
push
icebp
push
mov
ljmp
fdivrl
fimull
outsb
test
or
or
repnz
add
das
mov
pop
mov
pop
mov
add
pop
fldlg2
dec
mov
mov
ljmp
jecxz
popf
jnp
xor
sbb
aam
loope
mov
cwtl
icebp
popf
fs
dec
flds
lods
cmp
cmc
cs
lahf
cmc
les
int3
jp
push
xor
dec
push
lahf
push
stos
jge
cmp
and
jbe
xor
imul
int3
hlt
and
jge
test
and
test
cmp
mov
or
cmpsb
jmp
xor
sub
rcl
mov
inc
mov
add
xlat
ret
addr16
or
mov
std
pop
andb
fnstenv
mov
shlb
jae
pop
mov
inc
imul
xor
jecxz
adc
inc
sbb
sbb
outsl
xor
cmp
xor
push
sub
jp
jne
inc
fsubrs
add
iret
or
sbb
mov
pop
xchg
inc
jnp
pop
imul
cwtl
dec
fstl
jl
lcall
or
xor
xchg
sub
adc
jnp
into
push
loop
call
icebp
data16
dec
mov
pop
push
dec
xor
into
pop
cmpb
cld
cmp
lret
push
sub
scas
pop
cs
push
ficoml
les
divb
xlat
cli
sbb
stos
mov
pop
sub
or
std
cmpsb
sti
lods
ds
int3
jb
add
dec
mov
xchg
aam
test
jg
jecxz
ficoms
push
pop
cmc
shll
xor
ror
add
incb
jmp
sub
jmp
mov
adc
adc
outsl
aam
sbb
mov
and
dec
rorl
dec
pop
rcr
shrb
mov
dec
aad
mov
inc
add
jne
lea
inc
in
add
sbb
inc
inc
dec
movsl
stos
pop
inc
dec
into
test
sub
add
dec
jle
popf
cli
arpl
inc
jg
scas
rolb
xor
lods
imul
adc
lods
push
aaa
stos
icebp
orb
fmulp
mov
cmp
jne
and
js
test
or
inc
hlt
cmpsl
aad
imul
adc
sbb
jne
popf
mov
or
push
jg
mov
push
cmp
push
out
xchg
or
push
cmp
fildll
faddp
stos
dec
sbb
jmp
int
mov
adc
movsb
or
lods
hlt
mov
xor
mov
add
add
mov
cwtl
mov
sub
sbb
xchg
bound
mov
pop
add
mov
mov
inc
mov
bound
xchg
mov
xchg
mov
mov
lea
loop
out
inc
xchg
int
mov
adc
lock
leave
sub
fstpl
mov
cmpb
inc
imul
cmp
andl
rcrl
jo
jnp
cmpsb
inc
cmpsl
rorl
and
ret
inc
push
pop
push
adc
pop
aaa
orb
fstpl
push
or
fucomip
inc
mov
mov
fildll
out
js
xchg
shr
test
push
jnp
pop
jl
push
add
sbb
and
je
sbb
xor
fwait
fs
mov
lcall
shll
sbb
into
mov
mov
cwtl
xor
stos
data16
pop
dec
mov
shr
and
jecxz
enter
popf
fstp
xchg
cmp
inc
lret
fst
sarl
call
inc
fsts
or
xchg
cmp
pushf
pop
cltd
adc
bound
iret
mov
movsb
or
adc
cmp
or
lahf
pusha
out
mov
adc
mov
or
sub
add
je
and
loope
icebp
cwtl
pop
xchg
mov
sbbb
imul
pop
push
cltd
xchg
bound
fadd
jmp
fmuls
js
outsl
lods
inc
fildl
add
inc
sub
xorl
add
gs
sbb
fisubs
aam
inc
leave
cmpsb
push
ret
add
insl
cmp
je
jnp
insl
insl
xchg
nop
push
nop
xchg
jp
daa
jbe
xchg
dec
fnsave
popf
push
loopne
lea
loope
out
xor
sub
jb
xchg
outsl
ret
push
das
mov
dec
ss
into
xor
xchg
mov
xchg
mov
cmp
jg
push
add
jo
adc
or
mov
insl
in
aas
ss
push
out
mov
mov
ja
push
push
ds
sbb
js
and
arpl
xor
cltd
scas
dec
insb
mov
fwait
pop
mov
mov
inc
push
pop
pop
js
stc
shlb
jg
dec
pop
scas
stc
mov
dec
cli
jmp
out
mov
test
mov
mov
lods
sbb
rorl
jmp
cmp
je
andl
mov
popf
mov
push
inc
cwtl
pop
lock
push
mov
mov
xchg
push
adc
inc
jmp
pop
jmp
pop
dec
cmp
test
jmp
into
mov
ss
pop
mov
add
jge
mov
fistpl
xor
pop
mov
xchg
adc
xchg
loop
lea
xchg
or
js
out
rcrl
div
xchg
pop
push
repz
bnd
push
push
mov
idivl
sub
and
jle
in
fists
aam
cmp
mov
cwtl
xchg
fwait
pop
xchg
test
aam
lret
in
ror
push
pop
cmp
mov
aas
scas
inc
in
idiv
bound
mul
xchg
push
mov
xchg
repz
push
adc
and
nop
adc
lret
inc
sub
xchg
jl
les
fs
enter
rorb
icebp
fs
sub
idivb
dec
aam
pop
inc
push
sahf
pop
lret
dec
mov
repz
lea
inc
jo
fbstp
jb
andl
jbe
ficoml
sbb
std
mov
fisubs
jecxz
mov
loop
mov
push
in
out
int3
clc
clc
sar
subb
out
cld
dec
ficoml
cltd
jbe
mov
mov
mov
sub
lods
and
int3
test
push
fildll
stc
xchg
xchg
mov
in
fstp
pop
push
xchg
mov
push
mov
xchg
int3
div
inc
int
imul
pop
cld
in
rcll
mov
test
inc
pop
pop
xchg
das
fs
ljmp
loop
xor
loopne
popa
aaa
mov
cli
sbb
popf
bswap
lret
push
lcall
ds
pushf
jae
cmc
lods
in
std
arpl
or
mov
mov
sbb
pop
fsts
incb
inc
mov
lea
loop
fadds
test
nop
adc
push
pop
rcll
outsb
xchg
mov
or
das
and
fisubrl
mov
jnp
jmp
sbb
shl
ss
and
divb
iret
aam
cmp
mov
pop
dec
into
mov
stos
ja
fstpl
and
scas
data16
sub
cli
test
push
jge
or
aad
dec
ret
push
and
outsl
scas
inc
jnp
pushf
sub
in
jnp
mov
push
addr16
jl
and
gs
dec
adc
push
push
cmp
icebp
fs
ficompl
aaa
cmp
dec
adc
xchg
out
sahf
inc
sub
pop
movsb
jns
pop
and
add
add
fcomps
fstpl
in
or
push
adc
ljmp
lret
pop
dec
cltd
in
inc
enter
jmp
cltd
loopne
mov
nop
dec
jbe
sbb
mov
insb
and
scas
push
movsl
test
mov
and
scas
xor
or
xlat
sbb
jo
les
ficomps
cmpsl
jecxz
jb
fwait
pop
xor
scas
hlt
add
ret
sub
xor
call
jae
cmpl
xchg
push
pop
jge
adcb
sub
out
mov
mov
movsl
or
pop
test
loop
in
xor
imul
int
sbbl
mov
ss
rcrb
push
cmp
xchg
pop
ret
adc
daa
cmc
or
push
mov
or
call
cmpsl
push
jmp
add
lea
leave
cld
sahf
movsl
dec
int
test
cmp
sub
push
dec
push
cmp
cld
mov
xor
pop
adc
xlat
or
sub
in
add
dec
and
ja
divb
or
out
cwtl
stos
sti
out
loop
outsl
repz
adc
jae
fdivrs
sbb
cmp
mov
dec
pop
jecxz
mov
fldt
pop
and
jo,pn
sub
inc
xor
sbb
into
movb
adc
xchg
pop
mov
insl
dec
cltd
test
clc
js
push
cwtl
aas
ja
sub
dec
int3
sub
add
xor
cmp
pop
pop
xchg
sub
push
mov
hlt
negb
pop
clc
pop
dec
outsb
sub
mov
mov
xor
xor
mov
cmp
pop
xor
movsb
fmull
cld
jo
outsl
arpl
adc
jmp
cmpsl
jp
sbb
jnp
call
mov
dec
fsubp
mov
and
push
fisttpl
adc
lcall
mov
xlat
cs
sahf
inc
lcall
andl
dec
jb
jae
in
cld
sbb
idivl
insb
aam
stos
outsb
xor
push
mov
leave
or
cmp
std
and
sub
idivb
pop
or
or
mov
ljmp
rolb
addr16
and
shl
xchg
adc
mov
mov
leave
jbe
jg
push
fs
nopl
outsl
aaa
pop
pop
enter
out
inc
and
inc
gs
jno
aad
sbb
sub
or
daa
sbb
sub
or
mov
cmc
loopne
neg
xor
test
xchg
das
and
mov
les
ficomps
imul
push
out
or
sarb
mov
push
sbb
and
pmullw
jp
xor
sbb
mov
loope
inc
inc
lret
aad
mov
cli
sub
pop
push
es
mov
add
xor
cli
aad
pusha
mov
test
or
sbb
adc
lods
jl
sbb
push
in
jge
dec
sahf
or
repz
fldcw
mov
adc
test
gs
hlt
mov
cmc
scas
stc
or
mov
pushl
shrl
jle
xlat
int3
mov
js
cmp
arpl
mov
adc
dec
les
xchg
aam
mov
jb
rcr
addb
push
fstpt
pusha
scas
outsl
aad
sbb
jl
adc
cmpb
jo
fisubrs
out
test
fimuls
in
cmpsb
cmp
xchg
mov
pop
cld
cmc
aaa
fadd
push
adc
mov
shl
sub
mov
outsl
sub
sbb
lds
sub
push
pop
sbb
je
shlb
xchg
enter
cld
fadds
movsb
sbb
pop
mov
adc
rcrl
inc
jecxz
push
jg
mov
mov
xchg
cli
or
cmp
dec
jbe
inc
enter
mov
iret
sbbl
sub
stos
xchg
dec
xchg
sbb
jecxz
sahf
ret
xor
push
adc
scas
adcl
hlt
or
jb
add
add
dec
or
or
push
es
je
cltd
lods
push
mov
fwait
pop
fdivr
jg
loop
sbb
cmp
pop
scas
and
dec
adc
mov
mov
cmp
mov
test
bound
mov
inc
mov
or
in
in
dec
stc
mov
jne
add
and
movsb
nop
out
push
loopne
lock
sub
leave
jmp
leave
pusha
fwait
jle
aad
push
pop
add
test
out
dec
lret
mov
movsl
push
fimull
mov
jo
adc
fidivl
std
or
sbb
add
fcompl
pop
jl
inc
push
push
movsb
add
idivl
push
lods
xchg
pop
popf
and
fldenv
ja
rclb
xchg
addr16
sub
dec
or
fcomps
push
push
mov
add
jb
ja
inc
std
inc
in
add
jo
cmpsl
pusha
jnp
add
mov
out
sbb
movsl
repz
dec
nop
lcall
cli
jge
mov
int3
xchg
pop
mov
addr16
mov
mov
in
mov
mov
adc
xchg
outsb
or
sub
idivb
xor
negl
xor
mov
fisttpl
xor
mov
daa
xchg
and
mov
or
insb
imul
in
loop
jmp
ljmp
jmp
and
popf
jp
test
loope
out
std
leave
mov
js
aad
lods
out
call
inc
stos
adc
and
and
test
and
mov
sti
adc
push
sbb
adc
test
xchg
mov
mov
lods
add
stos
and
test
or
mulb
pop
out
inc
push
test
mov
fs
inc
mov
mov
in
mov
lret
aam
push
out
or
push
aas
mov
loope
clc
pop
or
hlt
jle
dec
fiadds
mov
add
icebp
sti
push
xor
jl
jae
cmp
cmp
pop
jmp
in
sub
adcl
icebp
in
adc
cmpsb
mov
out
xchg
mov
mov
jl
cltd
pop
add
and
pushf
fmuls
sub
test
cmc
jno
out
insb
into
sarl
shl
push
cmc
xorl
mov
lahf
insb
xor
jne
sub
fiadds
xchg
movsl
mov
sbb
inc
push
mov
cmpsl
mov
and
fwait
aam
xchg
hlt
mov
mov
inc
push
decb
inc
push
loop
push
jns
inc
push
or
test
or
lret
or
cs
and
jnp
xor
pop
pop
daa
inc
cld
stc
and
mov
lods
mov
pop
xchg
jg
stc
jb
pop
aaa
pop
jl
outsb
jge
sarl
inc
sbb
mov
insb
xor
adc
gs
cmp
sti
outsl
mov
mov
ljmp
sbb
mov
pushf
clc
enter
xchg
jg
mov
adcb
add
std
mov
stc
nop
das
shrb
mov
sbb
push
push
shrb
jae
aaa
xor
push
in
dec
pusha
cmp
imul
iret
jb
in
repz
xchg
xchg
inc
std
inc
xchg
ja
movl
cmp
sahf
call
sub
shll
hlt
jae
sub
fcompl
fists
pop
imul
repnz
shlb
faddl
or
cmp
pop
jge
and
fwait
xor
mov
adc
or
pop
aas
jp
xor
das
push
aaa
cmpsb
sub
dec
push
jb
mov
je
jno
scas
pop
mov
pop
pop
clc
jns
je
clc
jb
pop
mov
jmp
inc
add
in
sub
fnstsw
sbb
aaa
or
xchg
fistl
int3
mov
cmc
xchg
dec
pop
sti
pop
or
sub
mov
push
ror
mov
aam
sub
aad
sub
push
xchg
cmp
fs
popf
icebp
xchg
mov
out
sahf
pusha
xlat
int
jmp
xchg
inc
push
push
mov
outsb
rol
jbe
sub
sub
dec
or
xchg
fs
ja
ljmp
lcall
and
mov
sti
scas
loop
jl
or
add
inc
adcl
mov
inc
cli
shlb
push
sbb
pop
loope
xchg
push
out
test
push
inc
inc
pop
push
push
fidivl
pop
lret
mov
push
cmp
mov
adc
or
insl
mov
dec
pusha
dec
hlt
cltd
fiaddl
ret
clc
cmp
or
jl
cld
push
rcrl
repnz
mov
lss
sub
mov
mov
and
sbb
and
xchg
scas
jl
pop
cmpsl
leave
cwtl
mov
cmc
cmpsl
enter
bsf
mov
ss
mov
enter
repz
push
push
cmpsl
fincstp
sbb
repnz
sub
mov
out
sbb
and
or
movb
stc
outsl
pop
push
in
mov
cld
lahf
mov
jne
ds
cs
mov
lock
mov
and
dec
xchg
jb
cltd
mov
mov
das
jno
sbb
pop
clc
jp
lret
mov
mov
lahf
mov
cmpsl
test
cmp
sbb
xchg
push
movb
dec
addb
ficompl
mov
xchg
jge
xchg
faddl
cwtl
adc
mov
int
inc
mov
push
and
push
jnp
and
adc
test
push
cltd
and
movsb
cmp
outsb
push
call
sub
adc
cmp
sbb
icebp
stos
inc
stos
inc
xor
icebp
xchg
adc
or
mov
jge
stos
dec
adc
xchg
ja
cmp
test
pusha
mov
pop
test
sbb
ds
ljmp
sbb
int
jbe
pop
inc
test
cli
push
hlt
xor
cmp
push
in
cltd
sti
xor
jp
test
arpl
push
aas
xchg
lcall
jno
ja
push
enter
or
mov
add
in
nop
push
rclb
mov
idiv
sbb
aad
xor
add
add
movsb
sbb
push
nop
sbb
mov
push
and
dec
add
lds
mov
setb
dec
insb
lret
rol
outsb
mov
xor
repz
or
jno
sub
mov
into
xor
mov
in
fnsave
shrl
enter
mov
hlt
sahf
pop
mov
data16
jb
pop
pop
loop
mov
fs
mov
int3
push
iret
fsts
push
sbb
pop
int
sub
push
and
pop
sub
jg
jae
xor
lcall
xlat
jno
scas
loope
iret
lea
loope
daa
js
gs
ficoml
lcall
data16
jb
add
rorl
scas
loopne
push
sub
or
xchg
xchg
lret
mov
ljmp
sbb
in
mov
adc
push
mov
movsl
imul
mov
fdivs
and
mov
or
scas
daa
adc
inc
jne
and
lcall
dec
fsubrl
push
sbb
pusha
cli
xchg
stos
ja
jge
sub
hlt
dec
icebp
jb
int
cmpsl
xor
dec
test
les
outsb
lods
adc
jle
xchg
flds
lcall
in
cmp
pushf
push
jp
lods
mov
push
les
cmp
cmc
popa
ss
cmp
and
in
mov
jns
push
sarl
mov
stos
mov
xor
insl
cmp
xor
xchg
ficoms
add
or
out
loopne
pop
or
hlt
jno
fcomps
dec
jae
test
jle
push
jge
movsl
pop
in
orb
jbe
movsl
add
and
in
adc
lods
setne
lret
ljmp
fbstp
mov
sub
loopne
ror
loop
mov
es
xor
and
sub
xchg
fcoms
xchg
data16
add
sub
cmpsl
js
scas
ret
mov
outsl
std
cmc
imul
call
jo
enter
dec
pop
or
mulb
je
data16
pop
out
adcl
test
ja
push
hlt
mov
pop
repnz
pop
cmpl
enter
pop
cs
outsb
in
sub
add
nop
pop
ss
add
scas
stos
outsl
or
jge
and
jno
shll
les
cld
fidivrs
mov
push
outsb
sub
insb
pop
mov
divl
mov
and
lahf
mov
adcb
movsb
scas
mov
and
xor
adc
inc
sbb
sbb
dec
test
sahf
addl
adc
mov
adc
mov
stc
mov
or
jmp
in
jo
sbb
repnz
ljmp
pop
nop
test
cltd
testl
std
pop
mov
scas
pop
adc
dec
in
xor
dec
test
jp
movsb
pushl
movsl
call
mov
ss
cwtl
xchg
dec
inc
into
or
fisttpl
pushf
dec
outsb
xor
ds
rcr
in
je
mov
sbb
jnp
lret
sub
push
bound
lret
dec
movsl
je
js
arpl
bound
call
push
aam
sub
sub
sidtl
cmp
ja
cmc
aad
cmp
xor
testl
repz
es
stc
insl
andl
jns
lret
outsl
lahf
mov
ret
mov
pushf
decb
adc
add
jle
iret
cmc
clc
rcrl
cmp
insl
inc
out
pop
imul
adc
cmpl
push
mov
xchg
mov
out
dec
sahf
inc
clc
xor
nop
mov
orl
into
outsb
sub
xor
push
icebp
stos
faddp
fsubrl
lret
jge
or
dec
gs
adc
dec
jmp
pop
or
inc
xor
out
sbb
nop
or
jl
sti
add
dec
imul
mov
pop
addr16
shrb
add
add
push
jo
mov
cmp
outsb
ret
xor
ds
lea
fisubs
divl
inc
das
mov
and
xchg
popf
popf
out
fiadds
popf
xchg
aas
andl
add
add
movsl
fcmovnbe
inc
shl
ja
or
enter
dec
test
outsb
push
and
sbb
mov
pop
aas
jecxz
mov
movl
add
out
daa
sub
jae
ret
jns
adc
dec
jle
pop
mov
sbb
enter
cmp
mov
aaa
mov
mov
xor
add
int
and
shlb
inc
pop
mov
jb
xchg
sub
push
hlt
xor
mov
mov
jne
aas
xchg
jmp
repnz
xchg
mov
popw
cld
testl
cmp
lret
sub
repnz
mov
mov
cmp
icebp
mov
cld
or
jo
repnz
outsl
lds
aam
adc
or
add
popa
and
jge
and
mov
xor
or
mov
test
sub
testl
nop
test
outsl
jb
imul
pop
dec
xchg
adc
adc
adc
push
dec
pop
mov
cwtl
ret
adc
cwtl
push
inc
push
ds
fisubs
sub
or
lea
icebp
ret
jle
mov
xchg
out
inc
fldl
std
stos
into
inc
and
hlt
pop
leave
rcrl
imul
out
cwtl
popa
sbb
mov
mov
add
loope
mov
mov
call
fcompl
mov
cmp
add
js
dec
jp
ljmp
mov
pusha
jge
fcmovnbe
repz
adc
mov
inc
inc
mov
roll
repz
out
lcall
shll
jne
std
xor
cmp
fwait
leave
mov
cmpsb
lahf
cmpsl
ret
ljmp
ljmp
jns
cs
and
test
sbbb
js
inc
jecxz
dec
inc
mov
bnd
ret
gs
or
mov
popa
clc
call
pop
sahf
pop
aaa
push
mov
push
jmp
das
nop
cmc
in
unpckhps
lahf
fst
pusha
imul
outsl
push
mov
lds
and
sti
inc
adc
push
fcompl
bound
sub
fnstsw
pop
in
pop
and
loope
add
mov
rcr
insl
les
mov
mov
test
fdivrl
push
jecxz
adcb
jnp
subb
cmpsb
call
add
pop
xor
outsl
sbb
cmpsb
int
fadds
sub
pop
mov
mov
jg
push
int3
rcrl
mov
mov
jns
nop
jo
movzbl
pop
fadds
cld
jns
arpl
in
sbb
dec
aas
jbe
cmpsb
dec
lahf
shl
stos
or
in
or
movsl
mov
pop
xchg
aad
scas
xor
inc
push
mov
xchg
jnp
fmuls
mov
outsl
pop
int3
mov
fwait
sbb
lret
in
clc
dec
popf
fs
and
mov
xor
mov
and
dec
insb
and
ja
or
aad
push
xlat
lcall
call
mov
xchg
ja
pop
mov
cmp
mov
or
pop
push
mov
xor
icebp
gs
sbb
stos
and
jbe
jge
xchg
test
lcall
push
jge
std
and
and
fidivrs
sbbb
shlb
in
ljmp
pop
jb
test
insl
dec
neg
adc
xchg
stos
add
sub
cwtl
sarb
xlat
sbb
inc
jne
sbb
cmp
xor
push
and
pop
mov
inc
mov
add
fisttpll
mov
es
xor
mov
stos
lods
sub
or
js
shlb
xchg
mov
daa
cmp
cwtl
add
push
sub
xor
mov
lret
dec
iret
inc
jg
push
cmp
inc
je
cmp
xor
sahf
ljmp
pushf
int3
sub
aaa
gs
aas
add
cs
mov
xlat
push
enter
jg
cmp
sbb
xchg
addr16
jp
xchg
aas
dec
mov
lahf
enter
in
cli
adc
mov
loope
fstps
lret
or
inc
stos
test
and
fistps
subb
outsb
push
into
stos
jbe
loopne
popf
push
lret
js
xor
ficoml
sbb
adc
adc
mov
lock
dec
imul
das
sahf
cmp
adc
negl
sbb
add
repz
jbe
push
lds
xor
mov
testl
dec
jae
push
out
shll
adc
addr16
shlb
loop
add
mov
ljmp
push
fnsave
testl
push
fs
std
and
loop
pop
cld
fwait
adc
or
push
sbb
xchg
push
mov
pop
pop
iret
mov
mov
mov
inc
push
xor
addb
scas
test
aad
sub
dec
cmp
in
pop
pop
into
push
and
mov
xchg
mov
bound
sbb
aaa
and
mov
sub
push
mov
dec
cmp
cmpsb
psubd
mov
lods
outsb
jae
inc
fdivrl
add
sub
and
loopne
or
xlat
push
aaa
rcrb
movsl
or
fcoms
inc
fs
jmp
test
cmp
mov
popf
call
roll
lret
or
pop
jns
lret
push
add
push
pop
insl
nop
cs
xchg
sbbb
loopne
xchg
fwait
shlb
imul
cmp
cli
xor
sbb
aas
fwait
ds
xchg
in
mov
movsb
jb
iret
sahf
div
or
xor
jmp
sub
imul
xchg
jnp
jae
test
and
clc
pop
sahf
test
in
ret
xchg
into
push
cmp
iret
cmpsw
jne
rep
sub
and
mov
pop
inc
xor
mov
fdivrs
mov
xchg
sahf
or
lret
rorl
adc
into
addr16
in
mov
jns
xor
adc
jae
sbb
mov
scas
test
pop
pop
lds
es
sbb
fs
adc
ja
aad
jp
push
pushf
sbb
and
out
xlat
fs
add
mov
mov
jge
inc
jno
data16
sub
jge
push
les
push
and
add
incb
shrb
mov
loope
pop
add
in
mov
outsb
popa
icebp
cmp
call
add
aaa
repz
sub
fildl
test
rclb
test
subl
and
fdivp
testb
pushf
repz
xchg
push
jne
movsb
mov
mov
or
sbb
jae
loop
mov
sub
cmp
sbb
movsb
iret
arpl
cli
nop
sbbb
stos
add
add
mov
test
hlt
les
mov
xor
pushf
lret
lods
rcr
xchg
lock
and
mov
sbb
cmpsl
data16
jns
es
mov
rolb
in
stos
arpl
outsb
xchg
fdivrs
stos
xor
pop
xorl
inc
push
nop
popl
push
mov
xor
pop
sub
xchg
fmuls
xchg
in
dec
cmp
sbb
sbb
popf
bound
repz
sahf
ficoml
fs
add
aas
mov
inc
loopne
inc
jp
dec
lock
sbb
stos
pop
movsl
mov
mov
gs
sbb
sub
mov
and
add
fs
ret
adc
inc
push
mov
nop
xor
inc
sbb
sbb
pop
clc
add
daa
jmp
sbb
cmp
js
add
insb
rcrb
cmp
ja
inc
add
nop
pop
sub
and
int
outsb
stc
push
stc
mov
inc
dec
icebp
mov
push
xchg
out
insb
sub
or
mov
leave
arpl
stos
pop
aas
push
dec
mov
movsb
xchg
mul
in
pop
in
orb
arpl
inc
mov
mov
in
fnstsw
or
lret
insl
es
insl
inc
in
jno
add
xor
gs
mov
adc
jno
xor
pop
sbb
enter
jge
repz
ja
loopne
stos
loop
xlat
pop
std
and
daa
loop
mov
lods
ret
es
cs
push
out
push
stos
cmc
push
lret
add
or
mov
jp
and
mov
xor
xor
das
mov
out
jp
and
movsl
jg
pop
stos
jg
cmp
adc
stos
jnp
dec
cld
aam
scas
mov
xchg
jmp
les
aas
ret
out
pop
jnp
shll
push
nop
stc
jbe
jnp
sub
jnp
pop
sub
fucom
mov
pushf
add
shll
cli
dec
ds
mov
gs
les
les
clc
inc
xor
mov
cmp
cmpsb
repz
xchg
adc
aad
sbb
add
sub
xor
mov
pop
aam
cmp
mull
and
sahf
adc
sbb
jl
xchg
cmp
lcall
ret
lods
jnp
mov
mov
jecxz
jne
rcll
in
lods
popf
add
lcall
dec
pmuludq
lods
pop
xchg
pop
jno
mov
xchg
mov
in
and
fs
lcall
popa
leave
sub
xlat
mov
shll
nop
xchg
jg
xchg
jp
xor
adc
jmp
inc
sub
cmp
jbe
push
sub
mov
loopne
mov
cwtl
push
xor
dec
xchg
movsl
inc
mov
pop
cwtl
xchg
popf
add
jbe
pop
add
outsb
hlt
test
movsb
enter
add
cmp
fisubs
lret
cmp
push
ret
sub
xchg
xlat
lcall
lcall
or
mov
mov
cs
out
mov
iret
mov
scas
push
ss
xor
xlat
sbb
cmp
push
sub
gs
inc
ffreep
mov
xlat
xchg
in
jmp
popf
or
incl
cmp
cmp
dec
xchg
sub
mov
push
loopne
or
jno
pop
mov
xor
loop
mov
push
xchg
xchg
daa
lahf
repz
mov
out
rcrl
out
cwtl
jae
sahf
mov
cmpsb
cmp
cmpl
sbb
fdivrs
adc
sbb
testl
pop
cmpsl
stc
js
add
xor
cmp
mov
scas
push
mov
or
ljmp
pop
add
mov
mov
cs
ret
pop
pushf
jns
das
sub
lods
jmp
cmp
sbbl
mov
mov
insl
cmp
cmp
fmul
lods
add
push
dec
push
inc
mov
and
lret
xchg
ljmp
test
xchg
mov
sbb
push
lret
pop
xchg
es
and
repz
sbb
ffreep
cmc
in
mov
or
dec
je
pop
mov
xchg
stos
std
add
cs
push
nop
push
push
cmp
sahf
mov
jl
push
pushf
repnz
mov
jae
push
ljmp
js
fistpll
pop
mov
cwtl
ja
test
repz
jl
icebp
std
push
xor
pop
push
inc
mov
xchg
mov
shlb
mov
or
pop
pop
jle,pt
mov
mov
pushl
leave
mov
aam
loop
push
cmp
mov
sbb
popf
add
pop
test
mov
call
push
lret
outsl
cltd
pop
xchg
aam
fs
fstpt
mov
rorb
xor
cltd
mov
jg
jnp
sub
mov
je
mov
mov
out
push
xor
mov
sub
cmpsl
ds
xchg
xorb
sahf
xor
pop
cmc
lds
movb
sarl
jbe
cli
js
out
xchg
and
in
or
cmpsb
or
icebp
lret
or
cs
gs
push
adc
push
sub
sub
xchg
popa
bound
out
int3
ret
cli
push
aam
mov
mov
push
pusha
gs
mov
dec
mov
sub
icebp
or
inc
sbb
sbb
scas
insl
jae
sbb
or
cwtl
xchg
lods
sbb
push
out
adc
pop
roll
xchg
sub
sbb
in
cmp
sbb
or
lahf
cli
cmp
cmpsb
mov
test
push
lret
xchg
jbe
leavew
ret
sub
in
aad
jae
xchg
xor
dec
dec
push
leave
pusha
test
scas
and
pop
ds
sbb
dec
loope
cmp
sbb
stc
jle
add
sbb
xor
sbb
mov
nop
aas
pop
mov
pop
mov
ja
cltd
adc
pop
cmpsb
or
movsl
pop
cmp
mov
or
xchg
das
jno
or
jg
lods
mov
sub
cmp
push
add
pop
cmp
leave
in
adc
icebp
adc
dec
jl
inc
ret
lret
divl
pushf
xchg
xlat
dec
mov
mov
mov
lahf
int
in
js
repnz
inc
ljmp
push
incb
adc
out
jmp
and
cmc
lds
mov
sub
mov
shr
mov
mov
out
pop
test
outsl
sub
push
cmp
cmc
fistl
or
mov
setns
bound
and
stos
jg
lock
insb
arpl
and
jp
in
popa
jbe
jl
ds
js
push
fbld
outsb
jo
test
push
sbb
xor
jl
add
lret
mov
mov
mov
dec
cltd
fadds
test
dec
stos
fildll
mov
or
mov
movsb
out
cli
scas
lods
jne
pushf
aad
repnz
mov
jge
and
rcr
xor
dec
data16
orl
jge
pop
adc
jnp
xchg
mov
pop
popa
xor
mov
adc
cmpsl
outsl
sub
test
jmp
dec
xor
mov
ja
repnz
mov
mov
sub
shrb
test
test
jae
ljmp
cmc
inc
cmpsb
push
push
aam
xor
hlt
fcoml
pop
mov
cmp
mov
aam
mov
dec
push
das
dec
jg
jg
inc
arpl
xor
push
test
or
jg
add
push
lds
das
shrl
and
call
xchg
xchg
inc
jge
hlt
mov
xor
inc
or
imul
insb
or
add
out
jecxz
inc
jns
mov
ljmp
cmp
std
or
sbb
xorb
jne
and
ds
push
orb
test
jo
adcb
sbb
adc
mov
and
xchg
dec
out
jnp
adc
fldl2e
sub
fs
in
and
lds
or
sub
add
inc
mov
pop
test
das
dec
jl
inc
mov
mov
dec
mov
cmpsb
clc
inc
sbb
das
jb
out
or
cmp
fdivrs
mov
shll
test
xchg
and
test
push
mov
jb
jmp
repz
xor
out
aam
jnp
stc
jbe
add
push
mov
jmp
mov
imul
hlt
pop
cmp
xchg
jl
aaa
or
or
bound
cmpsl
test
ss
xchg
push
push
stos
mov
mov
sahf
outsl
fcoml
cmpb
mov
insl
jno
mov
popa
movsl
aaa
lcall
add
cld
mov
scas
adc
cmpsl
roll
sbb
pop
and
cmp
movsl
jge
psrld
sbbl
xchg
arpl
mov
mov
xor
test
mov
mov
and
lds
mov
push
xchg
push
mov
movsb
ret
sub
fisttpl
stos
jg
xchg
xor
sbb
dec
ss
mov
push
sti
add
pop
fcmovbe
ds
jnp
push
mov
imul
mov
enter
adc
pushf
cmp
jbe
jns
jmp
in
and
in
pusha
lock
fcmovb
or
push
data16
mov
pop
cmp
popf
es
negb
iret
xlat
and
xor
mov
or
push
inc
push
insl
jns
sbb
mov
mov
jnp
sub
lret
das
sub
repnz
lret
movsl
in
push
dec
scas
sbb
jmp
cmpsl
imul
xor
mov
jg
fnsave
repz
cwtl
fcoml
sbb
sarl
sbb
mov
xchg
xchg
test
push
mov
mov
jmp
icebp
xor
loopne
push
outsl
scas
mov
pop
pop
dec
mov
jnp
cmp
stos
push
sub
dec
test
cmpb
std
mov
pop
mov
mov
out
mov
adc
push
fisttpl
push
jg
shlb
xchg
divb
leave
fwait
imul
loopne
pushf
pop
cmp
mov
pop
pop
rcll
inc
pop
inc
xchg
inc
test
out
scas
mov
mov
aam
cmp
mov
in
jo
bound
fistpll
int
movsl
xchg
adc
outsb
jns
mov
test
int
addr16
aaa
add
xor
js
jge
data16
sbb
cwtl
sbb
out
notl
cs
push
pop
push
xchg
ljmp
pop
push
cwtl
call
sub
lock
cmp
xchg
lret
push
pop
test
add
xor
cmpl
dec
cld
fadd
push
jl
lds
jg
addr16
pop
fisubrl
sahf
or
cs
fisttpll
lcall
mov
fsubrs
mov
xor
js
xchg
fildll
std
adc
mov
fsts
jmp
jp
enter
jl
push
je
jecxz
xchg
lods
out
push
es
cmp
mov
xor
dec
lds
inc
test
and
adc
sbb
mov
adc
and
add
adc
and
outsb
fistpl
xchg
ret
insl
lret
dec
mov
mov
mov
sti
adc
stc
xorb
or
mov
js
int3
and
xchg
xor
jne
adcl
jg
clc
rcll
jns
insb
or
das
out
int
adcb
pop
or
aam
inc
dec
testl
cmp
hlt
lcall
jno
pop
ret
or
cmc
cmpsl
xor
add
mov
cmc
les
nop
cmp
add
out
int3
xor
mov
mov
push
jecxz
outsl
sub
mov
jmp
lods
popf
xor
enter
ret
sbb
mov
scas
dec
enter
mov
stc
cld
rcl
aad
mov
xor
leave
outsb
xor
icebp
push
sub
int3
les
ljmp
insb
or
pushf
in
sub
jmp
lods
divb
sub
inc
mov
jp
jbe
sbb
jecxz
sbb
fs
pop
out
push
shlb
mov
outsl
je
and
push
push
pop
push
insb
push
xor
das
mov
lock
push
push
aas
ret
push
xchg
outsb
and
mov
mov
xchg
or
jb
shrb
cmp
or
in
and
ljmp
cmp
sub
mov
cmpsb
stos
ds
pusha
adc
loopne
jle
jno
sbb
add
dec
mov
jg
out
in
arpl
inc
inc
inc
adcb
out
mov
nop
mov
mov
movsl
out
iret
out
lock
fnstsw
sahf
mov
adcb
adc
out
or
dec
add
jmp
int3
aas
xchg
cmpsb
jmp
enter
sar
out
mov
xor
lret
and
or
xchg
xchg
jno
dec
ret
xor
jnp
inc
and
enter
movsl
mov
lea
addr16
subb
mov
adc
pusha
cmpl
jecxz
out
insl
jae
mov
ficompl
mov
inc
lret
xor
mov
mov
push
mov
sub
and
jmp
adc
xor
xchg
sbb
in
mov
shrl
cmp
inc
lret
cmp
in
movsl
mov
inc
mov
jg
push
jl
cmp
push
test
xchg
das
mov
mov
cs
fcoml
fadds
lahf
mov
test
rcrb
test
fstps
mov
adc
mov
fwait
shlb
pop
xchg
mov
xorb
xchg
test
pop
push
daa
outsb
dec
lahf
dec
into
dec
out
and
jae
mov
fsub
xchg
clc
mov
inc
cwtl
mov
in
andb
sub
mov
lea
int3
push
sbb
xchg
jmp
jbe
pop
pushf
decb
fildl
daa
or
dec
test
mov
cwtl
or
xor
sahf
outsb
scas
fs
add
les
jns
jnp
xor
mov
gs
mov
out
inc
sub
jb
inc
add
mov
pop
rorb
sbb
xor
hlt
fwait
push
adc
sbb
xor
adc
test
cmp
loopne
insb
xchg
or
cmp
add
mov
cmpl
outsl
or
dec
lds
ficoml
shlb
dec
inc
jns
adcb
pop
jg
mov
dec
and
stc
and
xlat
sahf
ret
jge
pop
in
adc
add
cmp
fsubl
sub
imul
fdivr
sahf
subl
sub
lock
pop
inc
lcall
mov
fisubrl
or
adc
mov
lahf
mov
xchg
sub
fcmovb
into
xchg
xchg
outsl
push
jle
cld
out
je
int3
in
enter
clc
mov
fists
cmp
inc
inc
mull
rorb
mov
out
mov
or
dec
and
and
mov
and
pop
std
stos
mov
sub
ljmp
idivb
or
push
pop
movsl
xor
test
icebp
fs
lods
out
pusha
lcall
or
mov
jnp
jmp
sarl
es
and
jmp
stc
test
push
dec
fistpll
rolb
jo
sub
out
cld
jae
hlt
leave
and
jbe
xor
rorb
loope
lea
xchg
add
fwait
aad
sbb
xchg
stos
add
pop
jne
mov
xchg
dec
pop
add
les
add
ret
insl
pop
jne
pop
xchg
shrb
pop
jl
pusha
adc
into
mov
test
mov
lods
and
cmp
jmp
dec
ret
rcr
add
sti
cs
xchg
sahf
cld
iret
xchg
enter
cmpsb
cwtl
xchg
addr16
mov
dec
scas
adc
lret
mov
inc
sbb
jle
test
popa
push
sub
cltd
test
cwtl
std
aaa
mov
addl
sarl
ds
stos
push
and
inc
push
lahf
push
mov
lcall
mov
sbb
mov
insl
hlt
xchg
lret
shlw
jbe
mov
cmp
in
out
dec
add
mov
stos
inc
push
mov
xchg
aad
vrcpss
xchg
dec
and
aas
xchg
xchg
mov
sahf
pop
dec
in
aad
mov
mov
xor
enter
jb
jbe
scas
pop
sbb
repnz
jge
cmpb
mov
cmpsl
cmp
mov
jg
rorb
mov
mov
fwait
push
icebp
mov
sub
cmpl
sub
mov
xor
ret
lahf
jbe
pushf
mov
xor
mov
adc
adc
out
push
fcomp
pop
sub
enter
add
jmp
pop
ljmp
ds
pushf
sbb
push
mov
mov
mov
sub
sti
xor
loopne
mov
in
ds
adc
pop
xor
adc
aad
fstpl
push
mov
enter
shlb
or
std
out
gs
xchg
test
mov
jno
adc
into
xchg
push
xor
xor
xchg
flds
out
or
add
mov
out
adc
sbb
rcr
xchg
push
mov
xchg
pusha
ds
or
sbb
xor
jp
lods
or
sub
inc
lret
sarb
iret
fsubr
xchg
in
sbb
dec
je
inc
sti
and
or
mov
push
jo
lods
push
negl
shlb
pop
je
lcall
and
push
out
aas
sbb
xor
outsl
outsb
pop
test
cmpsb
rorl
ja
mov
in
imul
aas
inc
add
jae
inc
and
inc
fdivrs
mov
lods
sbb
sub
push
push
stos
sbb
push
test
jmp
iret
jo
xor
je
sub
push
lock
pop
lock
in
xchg
lahf
adc
ja
or
xor
hlt
call
idivb
mov
mov
inc
leave
hlt
mov
testb
insb
sbb
xchg
lahf
aam
je
das
cli
fcompl
jae
jno
stos
leave
jae
sbb
fsubr
fmul
stc
or
leave
mov
in
xchg
push
lahf
imul
pop
adc
mov
rorl
test
je
test
fwait
roll
ljmp
nop
sti
sbbl
sub
cmc
cmp
lods
xor
mov
xchg
test
scas
frstor
fsubr
aas
out
je
add
dec
nop
add
adc
nop
stos
sbb
into
xorl
push
mov
xor
arpl
adc
mov
sub
ljmp
add
cltd
or
enterw
jne
hlt
mov
movl
les
aas
adc
adc
cmp
mov
mov
lods
pop
sbb
movsl
int
add
out
stos
jecxz
pusha
mov
inc
pushf
mov
mov
pop
mov
jmp
inc
inc
aaa
scas
stc
sbb
mov
adc
data16
gs
movsb
or
das
enter
rorl
mov
pop
xchg
dec
pop
sub
imul
int3
outsl
or
xchg
nop
adc
adc
dec
addr16
pop
ss
adc
adc
arpl
push
mov
je
dec
loop
jl
lcall
add
mov
orb
xchg
push
jnp
inc
mov
adc
jg
xor
aad
pop
mov
mov
mov
loopne
adc
sahf
mov
push
mov
dec
outsb
xor
xor
mov
insl
loopne
sub
test
in
sub
and
cs
xchg
sahf
mov
or
mov
and
iret
daa
pop
mov
adc
xlat
mov
test
xor
cs
outsl
pop
sbb
adc
ret
movsb
cwtl
outsl
xlat
jle
lds
test
pop
jmp
cmp
pop
test
mov
push
mov
mov
pop
lcall
pop
push
shl
in
xchg
pop
push
jmp
adc
add
pop
push
mov
cwtl
out
lret
pop
cmpsb
gs
xchg
lock
loopne
sti
fsubs
out
mov
outsb
sahf
jge
js
push
repz
inc
lahf
jne
or
or
adc
jb
in
jmp
pop
or
cwtl
inc
lods
jae
loope
dec
daa
int3
in
jle
and
adc
or
lea
lret
dec
mov
out
jle
push
addr16
xchg
sub
pop
sub
clc
test
mov
xor
ja
rcll
fisubrs
push
sbb
mov
out
mov
pop
les
pminub
test
inc
cmp
loop
jmp
pusha
js
lahf
inc
int
lcall
scas
outsl
mov
das
subl
mov
push
jo
sub
mov
or
mov
mov
mov
test
cmp
in
xabort
dec
mov
loope
adc
or
jns
push
mov
enter
dec
movsl
or
and
inc
cwtl
jl
les
mov
inc
dec
lods
call
sub
in
in
dec
push
out
mov
sub
push
adc
mov
push
dec
jo
push
cwtl
push
lea
inc
int3
dec
es
iret
sub
roll
sbb
stos
inc
inc
dec
aad
sub
nop
and
cmc
sub
jecxz
mov
sbb
fcmovbe
jns
fcom
lahf
push
add
xchg
popl
fwait
jecxz
subl
in
pop
mov
aaa
inc
fwait
mov
sbb
xchg
dec
shr
mov
sub
lea
adc
call
ljmp
adc
imul
or
repnz
pop
out
lods
nopl
cmp
ja
or
lcall
addr16
hlt
jge
scas
daa
repnz
mov
mov
pop
clc
pushf
push
inc
xchg
and
sub
out
dec
pop
add
mov
or
mov
jge
sub
push
cs
or
sahf
xchg
mov
fsubrs
or
sti
pop
jno
or
inc
clc
xchg
int
xchg
dec
xor
loope
sti
jno
sub
std
aam
dec
mov
popa
jecxz
and
cmp
movb
fdivs
repz
clc
sub
adc
test
jle
jmp
xchg
pop
add
es
push
pop
jbe
int3
insb
mov
cwtl
ljmp
out
mov
in
arpl
ljmp
push
int
pop
adc
int3
adc
subb
dec
loope
dec
rorb
mov
rol
pushf
push
hlt
mov
bswap
jmp
ret
dec
pop
push
jl
and
lds
mov
popf
cmp
in
mov
fadds
mov
pop
loopne
sahf
mov
xor
inc
pusha
push
mov
jno
in
sbb
cld
aad
xchg
pop
fwait
sbb
mov
out
notl
insl
xchg
xor
sub
jge
sti
iret
das
das
sbb
xchg
push
fs
mov
xchg
pop
ret
loopne
daa
pusha
rolb
sarb
mov
movsl
sbb
and
out
mov
sbb
ja
syscall
lahf
xor
and
jp
jae
sti
jecxz
or
in
push
sub
xchg
dec
mov
sbb
out
mov
repnz
lods
dec
and
xor
xchg
in
sbb
loop
inc
rorl
ret
leave
cmc
shll
adc
lock
mov
lret
addl
xlat
mov
in
sub
sub
dec
xchg
or
insl
and
fiadds
xor
mov
into
mov
imul
mov
ficomps
xchg
arpl
sub
add
jp
rcrb
inc
cli
and
jno
push
add
rcrb
and
mov
mov
out
add
xchg
aaa
mov
arpl
mov
sbb
cmp
in
mov
jmp
and
jno
and
enter
push
jns
jae
cmp
fs
mov
add
inc
or
mov
push
cmp
add
loope
jbe
add
test
mov
xchg
and
mov
jl
sub
test
dec
adc
adc
test
push
lock
inc
push
cwtl
sti
adc
mov
mov
push
es
js
mov
mull
jb
stos
jae
cmp
in
out
outsl
icebp
add
loop,pn
xchg
fcoms
pop
xor
xor
lcall
std
inc
imul
jmp
cmp
rcrl
push
lds
inc
movsb
rcrb
arpl
ljmp
inc
mov
ja
lret
inc
adc
divl
adc
aam
into
pop
push
xchg
add
mov
xlat
int3
aaa
aaa
rcrb
jle
dec
loop
mov
or
jg
xchg
dec
mov
push
pop
cwtl
push
xchg
enter
jecxz
push
add
mov
pop
dec
inc
pop
popa
loopne
in
adc
mov
lret
lret
fwait
xchg
fcmovnbe
mov
lahf
jbe
mov
pop
xchg
add
sahf
loopne
adc
pop
pop
test
std
pop
cmpsl
push
and
inc
fs
add
lods
push
rclb
into
repz
jno
mov
dec
rorb
inc
push
imul
xchg
inc
test
xor
cltd
xchg
add
test
pop
mov
xchg
je
push
stc
sub
ss
mov
sar
aam
cmpsb
rolb
jne
and
jmp
popf
xor
lock
hlt
xchg
inc
leave
push
vpacksswb
xchg
cmp
dec
mull
xor
sahf
jge
fidivrs
xchg
loopne
mov
ret
aaa
andb
ret
xchg
add
mov
outsl
sub
add
inc
in
lea
lret
push
test
std
mov
mov
lds
mulb
mov
sbbl
js
add
dec
lds
rcrb
sbb
lcall
out
jae
sbb
push
in
popa
int
ret
mov
push
pop
push
fdivs
add
lret
and
sub
xor
mov
lods
out
jns
xlat
inc
pop
out
xor
mov
mov
fsubl
xorb
mov
fistps
or
stos
jmp
adc
scas
repnz
dec
in
jl
jg
jns
rcrl
sub
js
sub
pop
icebp
ss
mov
ljmp
mov
adc
pop
int3
addr16
test
imul
dec
push
iret
xchg
sbb
sahf
cmp
nop
mov
mov
mov
enter
shlb
sbb
out
or
loope
mov
shlb
mov
pop
shll
jl
lret
lods
fidivs
add
scas
or
gs
xchg
gs
sub
ja
dec
dec
sub
insb
lret
and
jmp
insl
rclb
cltd
xchg
mov
xchg
insl
fstpl
stc
rolb
sbb
mov
sbb
sub
or
negb
or
in
in
addl
cwtl
xchg
mov
mov
dec
cmc
ds
das
mov
jl
and
inc
sbb
and
insb
sub
subb
jl
sub
popa
sarl
cltd
repz
mov
cwtl
shll
cli
repz
mov
mov
lret
mov
leave
lret
js
ljmp
and
mov
sbb
lods
push
add
xor
nop
mov
je
lcall
and
leave
mov
jecxz
and
std
lds
jae
xchg
cmp
les
and
in
notb
xchg
pusha
mov
cmp
les
sbb
mov
scas
test
xchg
fsub
inc
push
add
call
imul
mov
sbb
imul
xor
mov
test
xchg
imul
push
sbb
lods
rclb
push
jle
and
pop
fwait
mov
ja
inc
mov
add
test
cs
es
adcb
jnp
mov
stos
adc
lret
loopne
mov
inc
in
int
jg
xchg
sahf
lret
mov
and
imul
push
add
adc
imul
mov
cmpsl
movsb
jle
mov
ret
cmp
pop
xlat
xor
outsl
repnz
outsb
icebp
sbbb
inc
cmpsb
mov
mov
mov
adc
fs
sub
mov
out
pop
mov
popa
clc
mov
negb
mov
pop
xchg
das
jbe
bswap
mov
xchg
je
movsl
jae
mov
sub
repz
cwtl
mov
inc
push
fidivs
insb
sub
jl
rclb
pop
mov
and
mov
inc
fwait
cmp
xchg
mov
pop
jnp
in
mov
shl
adc
adc
jo
inc
ret
pop
dec
fcmovne
xlat
push
cmpsb
adc
jmp
lret
jecxz
movsl
ljmp
cmp
jmp
sub
dec
daa
test
fmull
int
add
lds
pop
xchg
repnz
pusha
cmp
loope
push
repz
inc
daa
inc
jmp
ret
jge
out
ret
xchg
fwait
pusha
cmp
out
ret
mov
mov
cmp
notl
je
xor
push
fists
cmp
repnz
pop
pop
sub
jp
mov
mov
push
outsl
xchg
in
cmp
xor
pusha
aaa
lret
jbe
mov
push
xor
cmc
js
hlt
ljmp
mov
stc
outsb
dec
and
sahf
fwait
pop
iret
adc
mov
lock
sub
in
lret
adc
lret
inc
cmpsb
jbe
fisttpll
fbstp
add
out
imul
and
jecxz
mov
sub
xor
aad
mov
lret
mov
fwait
or
inc
call
and
cmp
pop
jmp
aaa
fwait
pop
loopne
xchg
adc
les
push
push
dec
xor
jnp
adc
dec
vsqrtps
inc
std
or
dec
xor
lea
jmp
cwtl
aam
mov
xchg
mov
movsl
push
sarb
dec
js
xlat
lahf
dec
mov
jle
push
sbb
push
js
jmp
imul
int
stc
add
aas
gs
add
js
out
fucomp
or
fisubs
adc
sub
call
sub
fbld
mov
mov
push
inc
in
cli
arpl
mov
loop
jae
push
dec
mov
movsl
push
sbb
pop
mov
adc
jne
jnp
xchg
inc
mov
and
push
dec
adc
adc
pop
xchg
data16
in
in
pop
outsl
mov
and
inc
xlat
faddl
sahf
popa
cmp
dec
adc
ficomps
into
xchg
push
call
push
xor
mov
pmaddwd
sbb
fnstcw
icebp
mov
loopne
bound
and
mov
scas
and
cmp
insb
jecxz
arpl
pop
std
cmp
sub
pop
ds
sub
into
pop
add
xor
pushf
xchg
dec
inc
or
sbb
js
mov
jge
movsb
aad
add
adc
add
imul
xchg
inc
xchg
scas
mov
push
fwait
aas
fisttpl
or
movsb
dec
pop
push
int3
loopne
cwtl
dec
movsl
in
and
sahf
sub
xchg
or
es
jns
xor
in
daa
xchg
push
das
cmp
ret
push
mov
rorl
pusha
xlat
lahf
jge
leave
mov
mov
scas
loope
cwtl
xor
push
push
or
aad
sbb
add
adc
pop
or
pop
push
adc
xor
pop
push
xlat
add
mov
xchg
fcoms
mov
push
cmp
iret
adc
out
fisttps
lcall
xor
pop
or
pop
lds
insb
mov
xor
or
push
xor
xor
repnz
dec
lods
xor
inc
fcomi
dec
add
adc
xchg
daa
lahf
push
call
cmp
adc
in
inc
filds
int
mov
inc
aaa
lods
mov
add
test
nop
add
adc
inc
or
pop
pusha
xchg
add
mov
and
out
sub
or
lahf
sti
xlat
jmp
repnz
xor
add
popf
cmp
jg
lds
test
outsl
cld
nop
cltd
xorl
and
push
xchg
std
push
je
sub
ficomps
inc
loope
pusha
ror
xor
mov
and
out
ljmp
xchg
jno
inc
xchg
dec
cld
adc
nop
mov
icebp
test
push
enter
ss
aaa
fcompp
jns
mov
loop
daa
out
inc
sub
adc
mov
cwtl
add
daa
mov
xor
in
repnz
frstor
fists
dec
mov
pop
pop
mov
loope
add
rcrl
inc
cmp
mov
sbb
sti
mov
xor
add
test
test
pushf
sbb
xchg
xor
or
sarb
scas
adc
adc
sbb
pop
inc
icebp
es
push
inc
js
call
pop
cs
jmp
pushf
adc
loopne
bound
lods
popf
xchg
mov
pusha
and
cmc
push
hlt
fdivrl
cmp
sub
push
test
out
and
sahf
lods
popf
bound
out
and
push
or
out
shlb
push
inc
sub
test
mov
out
lock
adc
dec
adc
jge
lret
xchg
pop
or
mov
and
ja
push
enter
andl
adc
add
xchg
lcall
aad
rcr
inc
inc
xor
subl
lret
sbb
adc
in
cmp
icebp
and
mov
mov
lahf
aam
push
mov
jmp
fsub
push
jle
mov
cmp
adc
out
jb
aaa
and
and
jmp
sbb
inc
dec
cli
subb
sub
ss
push
cmp
jo
mov
enter
xchg
orb
dec
lret
or
stc
aam
stc
or
icebp
cmp
jmp
fwait
insb
repnz
jmp
ret
cmpsl
push
jno
sub
cld
sti
je
pop
pop
add
popa
push
adc
push
mov
adc
loope
icebp
ret
mov
xchg
jnp
ljmp
js
out
lahf
xchg
and
sbb
imul
xchg
imul
addl
fiadds
sbb
push
shrb
ja
hlt
fistl
and
aas
jne
addr16
cmp
or
bound
xchg
shll
fucom
aaa
jo
lea
push
mov
cmp
rcll
mov
gs
je
arpl
insb
mov
inc
fistpll
push
dec
sub
xor
cltd
pop
jne
sbb
stos
mov
rolb
lahf
cli
rcrl
cltd
add
gs
adc
mov
xor
fidivs
in
insl
inc
jnp
and
fwait
and
mov
jge
std
or
into
cmp
pop
out
lret
jbe
cmp
cmc
or
mov
xchg
sbb
adc
iret
icebp
fisubl
nop
add
sub
jge
or
mov
int
add
push
mov
addr16
jae
loopne
mov
outsb
das
push
add
sub
lock
push
sbb
dec
sub
ss
dec
adc
and
jb
popf
lods
movsl
rolb
ds
aad
jmp
pusha
ret
jmp
pop
pop
mov
test
dec
xchg
adc
jnp
lret
xlat
dec
lret
leave
adc
sub
cmp
add
mov
push
outsl
xchg
and
xor
repz
mov
xor
flds
jnp
and
sbb
bound
in
fsubl
cmc
mov
out
ds
xchg
loopne
sub
mov
and
out
xlat
sub
stc
test
enter
out
push
movsb
es
mov
xor
dec
arpl
xor
shlb
mov
and
out
daa
push
into
cmpsb
jns
push
enter
pop
dec
inc
or
add
sbb
jecxz
jg
movsb
dec
sbb
repnz
or
les
lret
jns
test
incl
and
and
scas
rorb
loop
adc
mov
ror
cmp
repz
adc
sub
xor
sbb
sbb
add
ja
rol
stc
jno
inc
rcrl
dec
pop
ljmp
jne
pop
sub
jns
mov
sbb
or
inc
sbb
fucomi
movsl
ds
scas
test
fwait
outsl
jge
sub
std
mov
and
push
jg
mov
inc
xchg
fwait
xchg
mov
mov
ljmp
cmp
adc
cmpb
icebp
lods
adc
cs
sti
pop
push
add
data16
lock
sbb
cwtl
cmpb
xor
cmp
outsl
lret
lahf
jne
cmp
aam
shl
cmp
or
cld
xor
and
jmp
sbb
pop
lahf
pop
gs
jp
shrl
int3
sti
xor
outsb
in
dec
push
cmp
cwtl
stos
jp
dec
inc
jge
ja
or
push
jb
iret
imul
popf
clc
aaa
sub
call
pop
adc
imul
mov
dec
push
or
mov
sub
sbb
jo
xorl
ret
dec
cmp
repz
fs
enter
js
imul
lret
repz
pop
and
lret
movsb
arpl
adc
ds
push
ljmp
cmpsb
jl
push
xor
or
xchg
lret
sbb
out
outsb
xor
jns
jl
inc
mov
push
pushf
and
loopne
mov
mov
outsb
add
sbb
dec
insb
xor
jg
xor
cld
fidivs
mov
pop
inc
mov
js
push
inc
sahf
ret
test
dec
insl
xchg
in
jge
out
sub
out
data16
repnz
jo
push
lret
shl
mov
xchg
mov
cmc
add
insl
cwtl
ss
das
or
negl
out
sti
mov
mov
mov
aad
int
jg
sub
mov
mov
mov
pop
inc
dec
push
in
inc
push
push
in
push
and
cmp
jge
jl
insb
fisubrl
jns
in
daa
cs
and
imul
cmp
xchg
lea
mov
dec
cmp
mov
ret
cmpsl
stos
xchg
cwtl
or
mov
rol
and
movsb
adc
mov
loope
or
iret
and
pop
sub
sbb
fcomip
loop
leave
cmpsl
outsl
add
repz
ss
and
call
dec
sarb
xchg
fisttpl
in
xor
xor
dec
mov
xchg
dec
sarl
xor
sti
in
cmpsl
inc
xchg
sub
or
les
push
dec
and
int3
movsl
cmp
push
pop
mov
shl
es
adc
mov
adc
rcrl
loopne
into
test
sbb
cli
sahf
adc
jae
and
dec
sbb
sbb
jle
sub
mov
push
lahf
dec
hlt
sbb
mov
xor
cs
mov
mov
fstpl
xchg
jl
test
imul
pop
push
mov
roll
test
push
push
push
out
dec
inc
outsb
enter
ja
sub
je
jno
in
rcr
mov
out
dec
xor
outsl
pusha
add
pop
jl
jg
iret
mov
xor
out
ljmp
adc
loope
outsb
dec
mov
fs
xor
add
jmp
cmc
cmpsb
sbb
jnp
dec
sub
sbb
outsl
sbb
out
mov
pop
sbb
push
fmuls
lret
and
xchg
sub
test
jp
or
dec
push
xchg
bound
ret
pop
pop
pushf
mov
jae
mov
cs
jb
jecxz,pt
and
or
cli
cmp
and
insl
negl
mov
mov
mov
stos
or
jl
in
sar
push
mov
inc
mov
jo
xor
enter
push
xor
pminsw
dec
mov
add
cmp
cmpsl
adc
mov
fisttpl
push
pop
xchg
out
xor
adc
jnp
mov
out
outsl
out
inc
ds
push
cwtl
ret
cltd
inc
aas
mov
adc
fnstenv
pushf
fmul
or
pop
icebp
or
xchg
pop
in
mov
xor
push
push
stos
mov
enter
fldenv
adc
jecxz
cmp
mov
mov
sbb
cmp
insb
push
sbb
mov
or
ja
push
repnz
test
mov
lock
jb
iret
inc
add
cmp
icebp
adc
cmp
mov
scas
mov
cmc
jge
cwtl
imul
shrb
fs
push
jne
and
lahf
dec
and
imul
les
shl
daa
or
dec
stos
push
push
inc
or
dec
scas
cltd
sbb
subl
xor
aam
lds
mov
movsl
cmp
fistl
in
jge
dec
adc
mov
pop
cmpsl
lret
sub
inc
or
aam
xor
xor
mov
shld
xlat
add
and
lock
sbb
pop
xor
dec
push
dec
fwait
xchg
or
out
insb
xchg
mov
sub
mov
mov
ds
xor
xchg
mov
in
fstps
dec
roll
ret
mov
sbb
push
subb
pop
add
rorl
jns
das
push
aaa
sarl
sub
imul
sub
or
adc
push
sub
rcll
sub
or
clc
fistps
das
inc
das
push
aam
jp
jp
dec
cmpl
mov
addr16
dec
sbb
and
test
mov
out
add
scas
pop
mov
mov
pop
dec
or
sub
xchg
andb
mov
mov
and
fwait
push
notb
ljmp
inc
fiaddl
mov
loope
je
dec
bswap
fstl
inc
fs
jno
xchg
fmull
pop
dec
xor
divl
jno
and
mov
cmp
popa
pop
sbb
mov
lret
popa
mov
mov
je
addr16
xchg
add
add
adc
mov
stos
ret
xchg
les
daa
mov
push
scas
push
jecxz
mov
cmp
outsb
mov
das
daa
mov
in
mov
sbb
and
mov
out
pop
and
js
jle
sub
inc
outsl
rcrl
pop
sub
int3
inc
stos
and
inc
cwtl
dec
fs
in
aas
in
ljmp
jmp
add
mov
inc
dec
scas
sub
pop
xlat
mov
mov
enter
mov
jle
dec
pusha
cmc
mov
jb
dec
bound
leave
cmp
fadd
xor
mov
sub
adc
mov
adc
lea
enter
sahf
cmc
movsb
mov
rclb
push
add
scas
fildl
jbe
cmp
dec
ret
pop
cwtl
sub
mov
cmp
jmp
cmp
insl
mov
and
jl
bound
dec
inc
dec
xor
ja
sbb
cmp
dec
inc
lea
mov
sbb
lock
ds
sbb
iret
jp
out
mov
pop
pop
loope
dec
dec
mov
enter
pop
fbstp
sub
dec
push
addr16
es
in
fldcw
add
js
ja
dec
mov
jb
in
leave
shlb
add
call
imul
pop
inc
ficompl
js,pt
jno
stc
xchg
pop
sahf
test
iret
mov
dec
jb
push
jecxz
shrl
movsl
aad
push
outsb
cmpsl
jp
xchg
mov
xchg
js
in
cmp
push
mov
scas
sub
and
push
dec
es
sbb
push
sub
push
dec
lcall
xchg
es
adc
hlt
xlat
imulb
cmp
xchg
push
inc
pushf
jne
es
pop
js
out
fwait
in
dec
jns
pop
dec
mov
jns
call
mov
mov
in
popa
xchg
sar
fnstcw
mov
out
arpl
add
xchg
pop
pop
ds
sub
and
lods
mov
jb
cmp
xchg
xlat
xor
outsb
jbe
push
add
test
mov
call
popa
lret
dec
jne
sub
sbb
daa
leave
push
stos
adc
aad
push
loopne
adc
inc
mov
lds
popa
mov
gs
scas
xor
push
test
sahf
sbbl
inc
cmp
mov
sbb
adc
mov
xlat
lcall
xlat
push
sahf
and
and
scas
add
repz
cmp
mov
and
lods
push
push
ror
xor
aaa
inc
jo
imul
es
inc
xor
pushf
inc
and
aaa
dec
xlat
in
cld
push
les
dec
pop
mov
test
je
xor
and
inc
pop
cmpsb
push
mov
pop
scas
mov
pop
mov
shl
test
mov
xchg
push
cmp
hlt
adc
pop
push
loopne
add
xchg
lea
popf
in
xchg
nop
add
push
push
mov
mov
add
xchg
mov
adc
xchg
outsl
test
mov
pusha
pusha
mov
adc
inc
lahf
repnz
jle
dec
adc
jns
mov
cmc
mov
adc
imul
adc
ret
xchg
aaa
jl
cmp
push
mov
pushf
dec
jl
inc
data16
jl
iret
pop
mov
in
mov
stc
and
sub
insb
push
add
fnsave
dec
pop
xchg
das
mov
inc
in
and
cmpsl
sub
pushf
or
jb,pn
sbb
dec
es
jl,pn
and
xor
jns
bound
and
push
mov
xchg
dec
xor
clc
rcrl
cmp
push
cltd
mov
sub
adc
out
mov
and
adc
scas
inc
and
sub
fistl
lcall
shlb
clc
lods
std
aam
mov
mov
or
test
dec
addr16
lcall
inc
lret
or
mov
mov
in
jge
mov
incb
mov
cli
out
fiadds
pop
adc
push
jg
shrb
cmp
mov
repz
mov
or
es
or
mov
das
int
mov
add
hlt
dec
pushf
xchg
sbb
out
ret
repz
daa
inc
and
hlt
dec
call
jg
or
mov
xlat
insb
xor
adc
jecxz
rcrb
pusha
ds
push
cmpsb
cmp
ja
xor
dec
rorb
mov
cmp
stos
leave
in
add
in
jb
icebp
adc
repnz
cld
sub
adc
lods
push
push
jmp
sbb
cmp
push
or
inc
sub
in
out
and
adc
rol
xor
loop
mov
popa
jno
repz
jmp
jne
and
rcll
add
lahf
push
mov
addr16
push
fsubs
mov
add
pushl
sbb
inc
xor
decl
insl
sub
jae
mov
jb
je
mov
in
movsl
sti
jne,pn
inc
mov
imul
push
out
mov
sub
jo
addl
fistl
je
push
popa
jnp
movsl
rorb
cmp
adc
gs
xor
dec
rol
mov
adc
ljmp
mov
pop
cmpl
repz
sub
ja
outsb
sarl
rolb
jbe
push
popa
ret
pop
sbb
inc
xchg
jle
xchg
test
mov
push
cmp
dec
sub
sub
push
xor
xchg
dec
stos
sub
aaa
test
jns
rorl
xor
mov
in
movsl
cmp
in
ss
mov
cmp
test
mov
cmp
mov
pop
mov
jmp
repnz
inc
add
sbb
sub
out
pop
sub
push
popf
imull
hlt
inc
stc
pop
mov
mov
leave
aam
lock
dec
dec
sub
mov
sbb
inc
aam
xchg
add
loop
cmp
movsb
push
jle
sahf
cwtl
hlt
das
movsb
subl
clc
lret
loope
inc
mov
dec
sub
mov
jg
js
push
or
ljmp
ret
push
push
sub
enter
inc
push
pop
aam
xor
dec
xchg
repnz
sbb
inc
inc
imul
inc
inc
add
stos
pop
pop
pop
in
jno
gs
stos
es
xor
nop
dec
andb
cmc
int3
mov
aam
mov
pop
push
popa
mov
repz
ljmpw
cmp
xchg
push
mov
cmp
jl
cs
sub
mov
or
js
orb
inc
cmp
rorb
mov
shlb
out
and
int
dec
rcll
mov
xchg
or
xor
pop
lods
pop
mov
aad
fisubrl
cli
dec
icebp
hlt
inc
les
cmp
jns
adc
or
hlt
pop
cmpsb
iret
dec
mov
dec
clc
mov
fucomp
pop
addr16
push
mov
pop
test
scas
mov
sub
fldt
inc
adc
inc
pop
dec
and
das
jg
sub
mov
adcl
push
add
js
lock
dec
cwtl
int
movsb
xor
bound
movsl
push
rcrl
stos
and
jl
push
sbb
mov
movsb
xchg
fisttpl
mov
addb
cli
mov
iret
xor
test
in
add
sbb
std
xchg
pusha
cmpsl
loop
adc
ss
mov
popf
pop
xchg
jecxz
inc
pop
jmp
repz
movb
fs
das
aam
shrl
int3
fs
mov
out
sti
aad
cmp
stc
push
ljmp
insb
out
out
dec
sbb
sub
dec
push
outsl
push
adc
push
andb
lret
icebp
das
sbb
mov
adc
lods
sahf
mov
outsb
mov
inc
xchg
or
orb
stc
mov
pop
fsubs
inc
push
sub
push
lahf
mov
mov
cmc
ret
add
xor
jl
aam
insl
popf
push
je
fiadds
lar
les
pop
pop
aam
add
or
xorl
add
mov
dec
jb
or
outsl
xlat
sub
push
jb
push
xlat
inc
push
or
adc
jb
push
in
pushl
mov
mov
add
dec
xor
jo
dec
add
cmpsl
rolb
pop
mov
pop
call
lock
cs
pop
cmpsb
jno
dec
cs
sub
push
xchg
imul
xor
fsubp
inc
jle
dec
sahf
jae
pop
or
icebp
xchg
adc
add
lods
xchg
jne
or
ss
sbb
dec
ljmp
jg
xor
inc
push
sti
dec
in
sub
cmpsl
insb
or
dec
std
inc
xorb
and
ret
iret
sub
out
xchg
repz
xchg
in
jg
push
les
mov
cmp
sub
push
jnp
ljmp
sarb
adc
mov
in
push
mov
sarb
push
mov
popf
and
shll
inc
pop
sbb
loopne
cmpsl
repnz
test
nop
out
inc
pop
jecxz
clc
push
inc
arpl
pop
fadd
and
dec
jecxz
pop
std
pop
inc
mov
cmp
stc
clc
or
aas
sbb
ljmp
xchg
mov
fwait
das
in
xchg
jnp
add
push
arpl
jbe
call
sub
and
push
fiaddl
mov
out
ja
inc
je
fdivl
ficompl
clc
push
ficoml
rorl
fs
jl
icebp
and
adc
fstpt
gs
add
nop
xor
out
ret
nop
inc
negl
adcb
test
sbb
loope
cs
fbld
sbb
xor
mov
pop
js
lock
cmp
ljmp
dec
mov
into
out
pop
data16
testl
mov
cmp
lock
xchg
test
mov
faddl
fisubrl
loopne
repnz
cs
pop
dec
sub
stc
stos
clc
mov
nop
mov
pushf
jecxz,pt
and
inc
xchg
xchg
dec
je
pop
repnz
cmp
or
out
mov
loope
mov
lds
sub
jae
jbe
dec
inc
cmpb
xchg
sub
les
lea
xchg
fldenv
jecxz
mov
andb
int3
inc
fcmovnu
cltd
cs
popf
pop
sub
rcll
mov
popa
jp
sbb
pop
lahf
push
aam
mov
xor
movsl
in
loope
je
inc
or
leave
mov
push
mov
push
add
mov
dec
jo
mov
scas
jne
fcompl
mov
mov
inc
push
add
iret
jns
cmp
das
pop
adc
fsubp
mov
push
mov
lds
hlt
fs
data16
or
cltd
into
cli
sbb
xor
popa
mov
inc
or
imul
out
pushf
ret
cli
in
xor
push
mov
or
repnz
jae
adc
js
call
mov
or
sbb
dec
fwait
ds
inc
les
addr16
sbb
call
mov
xor
cmp
and
mov
or
notb
fstpt
cmc
mov
incb
jns
in
push
jns
rcrb
mov
movsb
adc
push
std
push
pop
lcall
pop
loope
out
jecxz
and
jbe
cli
out
cmpsb
xchg
xchg
mov
dec
fcomps
arpl
xadd
in
in
push
daa
adcl
mov
outsb
dec
push
or
and
mov
setno
popa
loopne
pop
scas
cmp
test
call
ljmp
jno
mov
cs
ja
mov
std
in
outsl
repnz
and
lahf
and
bound
stc
ds
push
aas
xor
std
push
aaa
pushf
push
and
xlat
sub
add
jl
clc
mov
lret
ja
adc
popf
inc
ret
subl
pop
pushf
mov
or
xchg
clc
sahf
ret
sub
mov
or
dec
loop
out
or
mov
push
and
ja
inc
add
and
cli
sbb
mov
movsb
repz
sarl
inc
mov
das
arpl
mov
mov
test
fwait
addr16
pop
jle
push
xlat
jae
sub
pop
add
andl
rcll
cld
jno
dec
push
xchg
leave
or
fmuls
jae
mov
sub
dec
shrb
mov
test
bt
dec
fistpl
sbb
push
stos
ret
cli
pop
lods
loop
nop
lds
call
jecxz
insb
ds
dec
lea
dec
sub
adc
or
sub
pop
xchg
or
xchg
call
test
jmp
mov
hlt
ja
mov
loop
mov
sub
aam
pusha
cmp
cmp
or
push
sbb
js
call
clc
popf
jae
push
add
addr16
push
cltd
xor
ljmp
cmc
xchg
fdivrs
sbb
mov
ret
out
dec
pop
cmc
cmp
mov
push
push
in
sbb
pop
loope
mov
jb
repz
fwait
xor
jne
xor
arpl
inc
mov
push
orb
jno
cltd
push
iret
in
pop
mov
icebp
out
inc
je
xor
mov
scas
ds
dec
sub
inc
xor
nop
mov
dec
pop
out
inc
in
out
pushf
fdivp
xchg
lcall
inc
push
leave
add
xor
cmp
insl
pop
out
imul
mov
or
cld
filds
inc
addb
les
jle
push
negl
push
movsb
cmp
fildl
jle
fcoms
jmp
adc
jae
sahf
jp
rcrb
sahf
jg
xchg
jp
cs
mov
int3
popf
add
addr16
lods
cld
int3
xor
push
and
jb
adc
pop
inc
add
push
mov
out
fsubrl
adc
out
lods
aas
mov
nop
xor
or
clc
daa
stos
or
cld
pusha
or
call
shll
jo
push
mov
inc
add
and
add
mov
inc
sub
addb
cld
sub
ljmp
jo
aam
jle
dec
mov
push
push
aaa
or
add
xchg
jge
inc
rol
jnp
jae
push
cmp
in
mov
clc
jne
inc
lods
rcll
add
out
xor
js
shll
or
cmp
inc
push
lds
insl
push
xchg
std
sub
mov
inc
pop
fadds
nop
stos
in
and
fstpl
sub
inc
sub
xchg
icebp
push
adc
adc
movsl
fcoml
ret
andl
leave
jno
js
orb
data16
insb
mov
jmp
push
insb
out
adc
xor
scas
and
ret
adc
mov
hlt
mov
or
mov
and
shlb
ss
push
rorl
and
mov
clc
push
or
xchg
nop
cs
xor
jae
jl
movsb
jg
xor
icebp
mov
xor
push
int
push
and
das
lea
pop
jl
jae
and
push
popf
cmc
lret
pop
push
sub
idivl
jae
lret
ds
outsb
jae
cmpsb
lods
adc
pusha
push
mov
aad
add
mov
push
notl
add
sahf
and
loop
jmp
in
cmp
and
cmpsl
lock
shlb
xchg
adc
pop
fbstp
and
loop
fmull
xor
sar
ret
push
popf
push
adc
adcb
mov
aas
out
push
add
popa
frstor
rcrl
in
mov
icebp
cmpsl
jno
out
xchg
outsb
sub
adcl
lcall
pop
add
lret
std
pop
pmuludq
bound
jl
cmpsl
xchg
or
and
insb
mov
cmpsb
add
push
cmc
jo
xchg
pop
aaa
cwtl
xchg
shll
add
std
xor
inc
mov
mov
or
mov
mov
mov
cmc
sub
mov
aad
jmp
rcll
mov
popf
loop
mov
inc
fbld
lea
sbb
cmpsl
mov
push
pop
push
add
xchg
push
jp
in
push
xlat
sub
mov
sub
xchg
sti
xchg
mov
xor
arpl
sub
mov
dec
lods
sahf
mov
scas
lahf
shll
je
pop
faddl
test
outsb
jg
sub
in
movsb
out
in
push
mov
cltd
fcomps
push
lock
ss
sarl
pop
into
movb
mov
dec
outsb
fdivl
jp
or
sub
sub
jnp
dec
xor
jmp
ret
jns
iret
cmp
xchg
mov
cltd
stos
mov
and
lret
and
or
mov
fidivl
movsb
mov
rolb
jae
mov
jp
aaa
xchg
and
mov
push
inc
scas
lea
pop
je
ss
in
pushf
lret
repz
sbb
sbb
imul
jmp
jle
add
inc
enter
push
rsqrtps
inc
ljmp
jecxz
pop
xchg
push
movmskps
ljmp
sti
fstl
push
add
and
scas
loope
sbb
cmp
mov
cmp
sub
pop
inc
cmp
adc
sbb
xchg
xlat
jnp
xor
loopne
sbb
cli
call
scas
scas
or
pop
xchg
repnz
and
enter
xchg
xor
push
cmp
sarb
pop
mov
inc
iret
mov
mov
movsb
leave
adc
shll
test
and
pop
xor
cmp
cltd
enter
jmp
in
out
jmp
and
loope
mov
aaa
rcrl
jge
sbb
loopne
sbb
rcll
cmp
push
loope
adc
lret
loopne
push
sub
aam
sub
adc
dec
push
popl
sahf
shll
cmpsl
xchg
sbb
push
ss
and
dec
in
dec
jmp
leave
sbb
data16
mov
mov
xor
or
ja
arpl
pop
dec
fisttpll
xchg
mov
dec
and
sub
roll
fcmovnu
cmp
sub
fcoml
mov
pusha
cs
inc
movsl
je
aad
xor
test
mov
stos
idiv
ficoml
ret
xchg
loopne
out
dec
int
pushl
pop
xchg
call
jg
fildl
mov
scas
scas
push
rcr
inc
fdivrl
xchg
in
cltd
adc
sub
cwtl
mov
dec
leave
int3
add
add
insl
out
cltd
pop
sbb
xchg
aad
scas
pop
lahf
cmp
inc
jp
add
adc
test
dec
pop
shlb
out
xchg
mov
xor
sub
cmp
inc
sbb
into
hlt
push
cwtl
mov
push
jbe
out
mov
arpl
imull
pcmpeqd
sub
pusha
in
xorl
das
movsb
or
or
push
aad
sub
push
fistpll
dec
movsl
dec
lcall
adc
pop
std
push
ljmp
mov
xchg
push
ret
aam
jnp
subb
jg
bound
jle
loop
jnp
xchg
xor
popf
and
pop
mov
cld
or
inc
jg
xchg
sti
add
scas
adc
mov
jge
les
mov
rcl
or
jmp
popa
mov
push
xchg
push
or
jae
lock
dec
xchg
pop
add
sahf
ss
lods
push
cltd
and
cmp
push
pop
add
insb
xor
in
mov
inc
push
jle
sbb
mov
mov
icebp
les
mov
mov
push
mov
mov
nop
pop
cld
mov
dec
shlb
outsb
inc
push
sub
jo
rcrl
mov
push
and
cltd
push
jp
lds
lret
cli
push
sub
movl
sub
outsb
data16
in
mov
lret
cli
push
jae
fsubl
lahf
adc
xchg
loop
dec
mov
cmp
cmp
adc
pop
call
dec
loop
adc
nop
push
mov
jbe
loop
leave
jb
or
enter
test
mov
aaa
sahf
or
imul
scas
and
inc
xor
xor
cli
les
dec
xor
mov
inc
inc
ret
cmp
rcrb
jmp
or
mov
sub
mov
xchg
aam
icebp
dec
push
mov
dec
cmp
ror
nop
mov
shrb
cmpsb
cmpsl
cmpxchg
push
data16
pushf
stos
push
std
sarl
jb
clc
push
pushf
dec
mov
pop
aad
or
xchg
add
mov
mov
lahf
nop
sbb
xchg
inc
inc
cwtl
cmpsb
shlb
mov
and
stos
js
xor
inc
xor
imul
or
sub
xchg
push
xor
imul
xchg
filds
or
pop
add
fists
scas
mov
jnp
popa
js
cmp
add
faddl
xor
xor
mov
jbe
in
mov
leave
test
adcb
ja
pop
movsl
xchg
repz
add
ds
sbb
aad
rorl
stos
sub
xor
das
xor
mov
sbb
test
mov
lcall
int
cli
xchg
xchg
test
push
fcoms
sbb
pop
pop
inc
push
xor
adc
fs
repnz
ss
mov
adc
clc
popa
fcmovnb
pop
inc
and
mov
and
or
push
cmp
or
sbb
out
push
call
push
cmp
das
cltd
add
sub
pop
cmp
outsb
iret
push
xor
fstpl
mov
mov
jnp
icebp
sbb
mov
pop
adc
int3
sarl
fadd
mov
cmp
jmp
xchg
dec
cmp
jns
aas
inc
clc
jb
clc
adc
push
mov
push
dec
idivb
inc
push
and
scas
xchg
pop
test
jge
cmpsb
mov
push
xchg
shrl
xchg
rcrl
dec
scas
xchg
push
xchg
mov
xor
and
xchg
std
in
adc
jbe
mov
pop
icebp
dec
adc
mov
xlat
xor
loope
cwtl
insb
into
adc
out
adc
aad
clc
aad
pop
in
rclb
cmpsb
stos
xchg
cmc
leave
iret
test
dec
in
sbb
into
jnp
xlat
mov
outsl
data16
xor
xor
sbb
lea
sbb
pushf
lahf
mov
push
xchg
pop
frstpm(287
arpl
push
cltd
xchg
int
stos
inc
inc
sbb
data16
push
fldcw
cmp
xchg
mov
popf
dec
adc
and
mov
pushf
add
add
mov
das
cli
jmp
push
sbb
cmpsb
or
xchg
icebp
push
push
mov
mov
test
sub
sbb
movsb
inc
xor
rorl
push
xchg
or
adc
insb
in
orb
adc
sbb
add
ljmp
fimull
push
cmp
scas
mov
pop
icebp
repz
sarl
xchg
sub
int
sti
add
lcall
arpl
or
sbb
lret
scas
adc
icebp
ret
bound
cmpsl
pop
xchg
je
imul
jp
inc
lret
add
sbb
scas
rorl
push
lock
cwtl
add
cmp
jb
jne
cmp
and
mov
push
pop
iret
pop
jp
inc
jecxz
fs
sub
sub
push
cmpl
pop
cltd
xchg
fisubrl
mov
test
push
lcall
mov
jbe
dec
cmp
dec
push
and
icebp
adc
cmpsb
js
pop
cmp
ljmp
add
cs
push
add
into
sbb
pop
mov
leave
xchg
arpl
mov
sti
sarb
cltd
or
sti
sub
mov
mov
push
sbb
mov
mov
out
push
xchg
xor
cwtl
orb
mov
jg
idivb
push
enter
sbbb
mov
push
cmp
mov
aad
out
sahf
pop
int3
mov
pop
xlat
enterw
dec
xlat
popa
push
add
pop
sahf
inc
shrb
loop
or
sbb
sbb
in
fsubs
and
inc
ljmp
and
push
jbe
mov
sar
pop
cmp
xchg
adc
inc
cmp
je
fldl
jno
add
lret
imul
mov
shrl
lcall
test
int
sti
popf
push
jo
nop
fbld
jmp
cmpsl
sbb
pop
jnp
push
lcall
sbb
lahf
out
xchg
cld
dec
xor
or
testb
mov
push
dec
adc
lock
xchg
inc
sub
mov
jne
lahf
into
xor
cld
ret
in
mov
pop
repz
cs
push
outsb
repnz
xor
int3
das
xlat
xchg
inc
hlt
xor
cmpb
adc
sub
push
fcmovb
inc
call
clc
fildll
loop
mul
push
imul
mov
nop
cwtl
dec
push
mov
mov
negl
sbb
pop
out
jbe
mov
aaa
sahf
add
or
repz
push
xchg
pop
lds
xchg
mov
cmp
jecxz
push
xchg
test
mov
mov
vandps
push
lods
mov
dec
inc
xchg
and
adc
pop
fwait
xchg
int3
aas
popf
fidivrl
mov
mov
out
pop
aaa
sbb
rol
dec
push
inc
jnp
int
fmuls
dec
mov
mov
jp
mov
leave
mov
out
push
sbb
sub
lea
mov
cld
dec
mov
dec
add
jnp
mov
mov
dec
sti
repz
add
jbe
sbb
xor
ret
insb
in
test
xchg
outsl
dec
jae
push
ss
sub
movsb
push
add
mov
insb
sarb
jge
test
xlat
iret
js
mov
aaa
or
sbb
mov
int3
inc
nop
outsb
push
or
mov
cli
sub
pusha
addr16
sbb
les
fmull
fstpt
jle
and
sbb
int
insl
push
and
std
jb
or
rcll
popa
test
ret
xor
aad
add
repz
out
into
popa
aas
daa
mov
push
punpckhbw
daa
cmpsb
clc
cmp
sahf
mov
sub
inc
mov
in
cltd
ljmp
int
out
arpl
push
xchg
pop
sub
dec
xor
push
adc
sub
mov
sub
les
mov
sub
sbb
mov
aaa
pop
push
es
arpl
jbe
sbb
fwait
out
sub
movb
and
inc
sbb
push
psadbw
adc
pop
push
jg
inc
repz
and
clc
inc
cmp
cmp
mov
lock
hlt
and
cs
movsl
mov
add
jbe
mov
fwait
divb
mov
in
in
mov
add
popa
pop
adc
push
adc
jbe
pop
adc
stc
jno
mov
dec
int3
adc
adc
addl
out
push
ret
mov
cmp
jb
or
rolb
in
addr16
repz
xchg
data16
rcr
push
fldenv
cmp
inc
xchg
in
fwait
test
pop
das
pop
lret
mov
push
lahf
xor
testl
push
pop
lret
mov
int
dec
shll
in
mov
sbb
and
dec
inc
mov
pop
sbb
or
test
sbb
adc
out
rclb
xchg
cmpsb
cwtl
es
push
and
dec
in
nop
movsb
jg
fdivs
lods
loop
dec
hlt
cld
dec
xchg
cli
dec
mov
cmp
mov
and
push
cmpsl
push
lea
xor
adc
xor
idivb
loopne
jb
je
das
popf
scas
sub
adc
or
sub
divl
push
sub
and
xchg
out
divl
sub
inc
sbb
aas
subl
enter
ret
adc
push
add
mov
xchg
mov
inc
jno
in
nop
mov
mov
push
sub
loop
xchg
pop
cld
int
and
jmp
and
push
repz
cli
imull
mov
adc
lods
in
cmp
popa
outsb
mov
dec
pop
rcl
xchg
lds
pushl
fsubrs
dec
xchg
jnp
jl
dec
jae
add
rcr
push
xor
add
and
pop
jb
repz
data16
sub
or
xor
sub
xor
inc
iret
rcrl
xchg
pop
pusha
jae
scas
cmp
sbb
lret
sysexit
and
ret
inc
fld
cmpsl
push
xchg
and
ficomps
scas
stc
mov
jb
jmp
aad
lods
pop
mov
cmp
adc
xor
in
add
test
sbb
sub
jmp
adc
fists
addr16
das
or
and
outsl
and
cmp
and
daa
es
add
lock
push
push
scas
dec
mov
mov
notl
subl
repz
arpl
rcrb
xchg
pusha
lods
mov
mov
sahf
xor
sbb
cmpsb
mov
push
adc
sti
pop
into
pusha
jl
pop
sbb
shl
xor
sub
jg
mov
pop
cmp
std
leave
rcrl
fs
loopne
xchg
jl
std
sahf
fwait
sbb
push
pushf
sbb
push
jo
mov
mov
rcrb
and
cmp
jl
in
mov
fwait
dec
or
roll
pop
sbb
xchg
lret
inc
dec
mov
sbb
clc
dec
rclb
mov
test
movsb
fmull
pop
cmpsl
cltd
mov
adc
stos
or
inc
cmp
xor
add
push
aad
xchg
sub
or
push
orl
xchg
mov
push
add
inc
jne
jg
push
leave
push
subl
xor
jle
iret
lds
pop
pop
sbb
setno
sbb
fwait
test
pushf
dec
popf
pusha
and
in
fstpt
loope
jge
jl
and
push
cmp
sti
movsb
gs
cmp
sbb
fs
fnstsw
lret
out
dec
test
jle
dec
fs
xchg
das
fisttpll
cwtl
mov
clc
sub
pop
in
and
dec
adc
mov
mov
push
push
xchg
rclb
adc
jmp
in
cld
push
loope
in
stos
insl
idiv
fdiv
inc
jnp
cmp
outsl
es
inc
inc
inc
dec
cld
scas
push
inc
aas
das
arpl
in
das
jo
repnz
xor
cld
add
add
je
test
pop
mov
out
mov
popa
shrb
in
je
movsb
mov
pop
repz
xchg
push
daa
outsb
xchg
xor
mov
addr16
pop
jg
ret
and
add
insb
out
jb
or
sbb
xchg
jnp
or
sbbb
test
vucomiss
fidivs
jle
clc
dec
in
cmp
test
adc
ret
mov
adc
ds
jae
cmp
popa
dec
ds
inc
leave
sub
mov
sbb
fistl
aaa
inc
cs
int
jmp
movsb
aaa
out
mov
push
push
mov
or
pop
outsb
jecxz
sbb
xor
cli
aas
and
xchg
pop
pop
stc
repz
or
insb
mov
cmp
xchg
fidivl
pop
inc
and
js
out
push
pop
mov
cwtl
xchg
cwtl
in
iret
push
pmullw
lods
fldt
jl
inc
push
shl
aas
mov
xchg
push
lods
stc
inc
lods
bound
mov
mov
cwtl
pop
dec
aad
sbb
mov
jnp
cmp
jle
dec
pop
dec
imul
push
xchg
mov
lods
test
dec
mov
in
rcrb
cs
cli
std
and
std
in
xor
adc
movsb
cmpsl
roll
out
bound
aaa
mov
mov
cmc
or
inc
jle
lret
out
xchg
cmp
push
or
dec
adc
xchg
addr16
orl
pop
loop
mov
jbe
neg
xchg
sbb
fst
test
mov
repnz
testl
mov
push
cmp
out
jbe
add
sarl
imul
int
adcb
loope
lock
adc
mov
adc
lods
push
outsb
cmp
sbb
mov
lock
in
or
xchg
mov
push
dec
lds
push
aas
pop
aam
mov
imul
test
scas
push
push
mov
sub
in
repz
in
loop
and
imul
test
jmp
shrb
lcall
mov
mov
or
stc
xchg
or
scas
push
dec
dec
jns
sti
sub
aam
out
in
int
sbb
sbb
cmc
xchg
neg
aad
sub
loopne
add
jno
xor
out
jg
adc
iret
cmc
cli
outsl
cwtl
cmp
dec
or
mov
jb
bound
mov
inc
or
es
or
test
pop
xchg
test
pusha
dec
cmp
jmp
jle
cmpsb
test
inc
xor
cli
mov
xchg
negb
pushf
dec
cld
cli
mov
insl
mov
mov
or
out
and
xchg
jb
mov
sub
fsubrl
or
or
and
stos
cli
mov
xor
xchg
adc
xchg
loop
adc
out
test
mull
mov
out
addl
push
das
imul
insb
jle
add
stos
push
mov
aaa
mov
push
cmc
pushf
push
ffreep
clc
push
mov
mov
xor
mov
lahf
movsb
xlat
repnz
jb
clc
sbb
clc
call
nop
aaa
add
and
jge
push
push
enter
xor
mov
cmp
lcall
aad
incb
fdiv
cs
fisttpll
push
mov
fldenv
out
call
out
jl
push
or
insl
out
dec
jecxz
cmpsl
scas
fisubs
pop
add
xor
or
out
push
aad
call
mov
mov
int3
imul
cmc
fucomi
pop
sbb
pop
movsl
inc
andb
xlat
sbb
mov
outsb
jne
mov
sub
pusha
and
ror
cli
stc
div
js
mov
test
xor
add
sbb
jp
sbb
inc
inc
xchg
cmp
lret
push
pop
or
cwtl
push
outsl
inc
movsl
lods
in
xor
imul
idivb
rcrl
or
mov
int
xor
lods
mov
dec
mov
ljmp
xchg
ja
cwtl
inc
pop
shlb
in
and
mov
push
cmp
and
xchg
sub
push
or
sub
in
xor
cltd
int3
xchg
pop
in
fs
adc
jns
adc
call
imul
or
roll
xor
mov
pop
fisubrl
lcall
or
outsl
es
mulb
out
je
fidivs
xchg
movsl
sahf
and
addr16
xor
push
mov
adc
stos
push
add
push
out
bound
bound
cs
and
sarb
or
dec
pop
push
leave
jo
add
adc
jge
jg
inc
insb
mov
cmp
loop
out
sahf
lock
sub
mov
stc
aad
ljmp
push
mov
jnp
push
xchg
lods
fildll
sahf
call
adc
jb
sub
jb
adc
xchg
ljmp
ret
mov
sbb
test
or
dec
mov
push
shll
jmp
sbb
pop
sub
mov
mov
pop
mov
cmp
pop
in
inc
pop
xchg
insb
or
add
xor
xchg
cmpl
xchg
loop
je
je
cmp
push
loope
add
inc
sbbb
mov
mov
pop
enter
or
popa
es
data16
or
sub
jle
add
sub
or
ret
mov
sub
in
push
sbb
push
dec
sbb
fs
cmpsb
fcompl
xor
mov
ficoms
mov
cmp
std
iret
mov
mov
push
call
and
add
push
mov
pop
mov
sub
andb
sbbl
pusha
inc
pusha
cmpsb
push
mov
les
jne
jae
add
add
test
jae
inc
cmpl
adc
stc
ja
xor
test
push
xchg
mov
inc
xor
push
cwtl
rclb
lcall
imul
mov
test
push
dec
aad
or
test
mov
iret
push
call
mul
add
arpl
pop
inc
mov
xacquire
bound
incb
sub
jge
in
xorl
pop
es
add
mov
arpl
sub
xchg
scas
xor
mov
push
sub
nop
ljmp
cs
cwtl
hlt
ret
call
inc
or
sbb
decl
iret
add
sbb
call
call
cmp
jmp
outsl
jnp
mov
mov
mov
pop
faddl
mov
jns
notb
movsl
xor
stos
jb
inc
inc
or
arpl
loope
inc
inc
mov
or
push
mov
jbe
push
mov
xor
add
mov
push
mov
jbe
adc
scas
sahf
lret
adc
adc
into
loopne
cmp
cltd
fnop
cwtl
cmp
cmc
arpl
mov
mov
out
test
add
cmp
sarb
mov
fwait
aam
loop
and
adc
pop
xchg
jmp
iret
fldcw
push
mov
mov
cmpsb
mov
pop
rclb
pop
loope
insl
cmpsl
mov
mov
jl
cmc
daa
fisubl
shlb
in
inc
xchg
jno
mov
outsl
loope
out
loopne
mov
jno
mov
lret
shll
les
adc
push
loope
push
test
sbb
sub
cmp
xor
xor
mov
xchg
cmp
and
sbb
pop
insb
add
repz
lock
jns
mov
xchg
jne
movsb
inc
out
imul
pop
ljmp
pop
cmc
jbe
mov
lret
and
dec
popf
inc
and
sub
leave
sahf
test
adc
loope
fcomps
or
cmp
shl
arpl
lods
lock
sbb
xlat
xchg
cwtl
xchg
jae
mov
frstor
out
je
push
mov
push
mov
aas
jp
ss
adc
jmp
lahf
ss
addb
in
mov
mov
jl
mov
sbb
xor
pop
out
aad
mov
in
call
dec
addb
jge
push
mov
pushf
and
test
xlat
add
pop
shrl
inc
cmp
je
fwait
sub
ja
in
and
sti
int
and
jmp
sbb
jns
leave
into
fstl
es
xlat
mov
data16
mov
pusha
gs
inc
mov
add
jge
not
loopne
push
ucomiss
push
mov
xor
aam
fwait
jne
icebp
out
xlat
clc
ja
cmp
arpl
or
iret
jae
sub
test
out
rol
sbb
sbb
stos
adc
insb
ficompl
sub
pop
jno
insl
mov
popf
mov
jb
insl
ret
stos
aad
pushf
push
mov
or
ds
dec
rorl
movsb
jae
mov
js
push
xchg
lret
sbb
mov
jne
dec
lock
mov
inc
pop
data16
pop
in
cs
jbe
aaa
cmp
mov
mov
ss
mov
and
xor
and
sti
enter
cmp
add
xchg
mov
daa
loope
xor
adc
add
sahf
les
jne
jge
or
loop
in
xchg
xchg
xor
xchg
mov
imul
mov
loop
rorl
es
jecxz
adc
xor
sub
ficomps
in
clc
jg
sub
aad
pop
jae
cmpsb
sahf
mov
sbb
dec
sbb
push
aas
out
insb
inc
dec
clc
lea
addr16
pop
dec
pop
movsb
ljmp
cmp
mov
push
adc
and
fwait
cmp
jae
fisubs
out
mov
cwtl
mov
mov
fisttpl
push
pop
mov
gs
cmp
es
aam
mov
sub
xchg
and
jno
lods
aaa
or
testb
dec
add
sbb
xchg
cwtl
fsubs
push
in
and
test
mov
subb
gs
add
cld
mov
ss
nop
push
scas
jbe
popa
inc
movsb
push
insl
mov
sti
std
fs
test
ret
cld
mov
enter
fimuls
or
add
xor
sbb
sub
popf
cs
add
int
push
lret
pop
jge
in
lods
loop
out
jb
fxtract
xchg
call
aad
ret
test
dec
jb
xor
and
or
jne
repnz
sub
mov
adc
push
or
stc
in
aam
test
push
fucomp
fildl
cwtl
ss
inc
pushf
flds
jne
xor
mov
and
loop
fwait
mov
shl
idiv
xor
imul
sti
dec
sub
iret
hlt
rdpmc
orl
pop
push
add
into
arpl
pop
xor
pop
xor
sbb
jle
mov
movsb
or
xor
movd
mov
in
inc
xor
movsl
dec
and
sti
addb
fs
ds
and
sti
fwait
inc
inc
mov
les
cmp
out
stc
mov
push
mov
mov
xor
dec
add
inc
cmp
popa
dec
xstore-rng
cmpsl
ret
test
xor
dec
sbb
scas
jno
lea
push
mov
stos
sub
push
stos
sarb
xchg
out
je
inc
inc
loope
adc
popa
subl
pushf
jbe
mov
cli
adc
cli
adc
push
push
add
push
inc
jl
je
movd
sbb
mov
inc
dec
ja
mov
rcl
aas
xor
pop
jb
push
add
xchg
xchg
divb
mov
and
mov
inc
pop
dec
clc
mov
jg
sbb
mov
idiv
daa
in
outsl
jb
in
xchg
sahf
rcl
dec
mov
push
inc
cmp
aad
les
xlat
aam
cltd
mov
ret
sub
nop
out
mov
repz
or
mov
pop
movsl
push
lock
clc
bound
imul
lock
dec
loop
sub
sub
sub
xchg
sbb
xor
stos
mov
jp
das
icebp
ret
loope
mov
add
test
cli
je
cltd
rorl
iret
sub
fldenv
jo
mov
push
sub
push
push
in
into
aas
or
mov
xorb
or
inc
aam
and
add
data16
mov
lds
stos
icebp
xchg
loop
mov
ds
cmc
add
add
fcomps
push
mov
mov
pushf
jne
adc
adc
cmpsb
pop
xchg
push
dec
cs
roll
fdivrl
outsb
fdivs
dec
iret
inc
pop
stos
or
insl
mov
push
jno
in
lods
push
ja
aas
cmp
mov
notb
fsubrl
ret
mov
xor
out
jg
cmpsb
imul
roll
and
fwait
adc
jo
insl
push
and
xor
push
xor
or
xchg
mov
cli
repz
lcall
inc
dec
arpl
mov
mov
pop
aaa
ret
enter
orl
fwait
lock
adc
and
cwtl
or
or
push
or
shlb
sub
dec
sub
lahf
and
push
int3
stc
mov
mov
mov
movsb
das
mov
inc
xchg
sub
mov
aad
mov
fwait
outsb
fimull
les
push
fsubrl
inc
outsl
insl
mov
or
and
push
push
xchg
dec
xor
clc
mov
fdivs
mov
xor
add
pop
into
movsb
repz
fwait
push
push
pop
sbb
hlt
les
push
mov
repnz
std
daa
in
bound
pop
mov
outsl
std
adc
arpl
adc
push
popa
leave
and
imul
mov
test
repz
fdivs
push
out
gs
lock
xorl
aaa
inc
dec
iret
mov
dec
call
jne
ljmp
lods
fs
rolb
mov
inc
mov
daa
cmpsl
repnz
in
inc
adc
jno
sub
or
push
lds
rcrb
cld
hlt
mov
lahf
outsb
in
andb
mov
xor
or
pop
bound
mov
shlb
iret
xor
dec
in
movaps
fiaddl
lea
icebp
mov
adc
mov
pop
in
in
add
arpl
cmc
inc
cmp
mov
outsb
add
jbe
imul
jmp
jmp
fbstp
jns
pop
push
mov
negl
pusha
adc
stos
xchg
call
inc
mov
xorb
push
mov
daa
int
xchg
dec
mov
inc
mov
cmp
fiaddl
lcall
push
cli
sub
mov
xchg
jne
pushl
in
xchg
mov
stos
cltd
movb
orl
push
or
imul
fisttps
sub
rcr
jmp
test
pop
adc
mov
inc
out
jns
pushf
loope
rorb
add
shlb
sub
lds
dec
mov
shll
dec
add
or
in
aaa
mov
ret
cli
inc
adc
sbb
out
cs
imul
dec
push
loopne
adc
icebp
rolb
icebp
sbb
divl
cwtl
pop
lock
fcmovnb
xchg
jns
pop
out
push
js
loopne
jns
pop
fs
mov
adc
sti
push
mov
push
clc
mov
jl
dec
mov
xchg
jno
dec
push
mov
in
mov
add
mov
or
popf
inc
jp
jg
stos
jae
nop
ljmp
push
js
filds
int
sub
mov
lcall
xor
shlb
addr16
ret
out
pushf
push
mov
sub
fcoms
adc
loop
mov
or
adc
lret
shll
clc
fildl
in
pop
push
hlt
push
push
dec
push
hlt
insb
push
fdivrs
fnstcw
out
in
inc
aaa
adc
or
push
out
fmul
ja
out
out
and
or
in
aas
loope
rolb
out
push
cmp
mov
movsl
mov
cmp
jl
pop
test
fsubrs
daa
lret
inc
jl
xor
mov
xor
popa
leave
ja
xor
add
or
add
and
dec
dec
ja
loope
xor
mov
shll
mov
outsl
mov
faddl
pop
xchg
in
aaa
pop
push
xor
cmp
mov
adc
adc
sarl
inc
lods
cmp
pop
in
push
out
xor
xchg
xchg
ret
xchg
test
jo
push
hlt
loopne
mov
test
test
pop
repz
iret
inc
sbb
or
xchg
iret
dec
rcl
int3
js
out
test
jmp
jne
ljmp
fdivrl
stos
and
cmpsb
jns
add
push
jnp
adc
lcall
aam
icebp
into
lock
addr16
mov
aad
add
test
mull
dec
sub
mov
adc
out
mov
movsb
out
insl
add
inc
pusha
adc
inc
jp
jge
mov
add
dec
push
pop
ss
push
bound
sbb
mov
mov
adc
xor
jl
xchg
jge
pop
test
fs
inc
loop
sbb
dec
and
jmp
ds
adc
lds
popl
sbb
adc
and
fcomi
aas
mul
xchg
xchg
mov
mov
sbb
out
and
scas
dec
rcr
arpl
add
ret
xchg
xor
test
repz
scas
mov
mov
mov
add
repz
dec
movsb
mov
sub
dec
push
dec
sub
je
addb
or
roll
pop
mov
sahf
add
and
mov
mov
push
lock
mov
jnp
mov
aaa
xchg
mov
ret
mov
or
les
ss
push
sub
xorb
icebp
lock
cmc
or
and
dec
sub
lds
les
imul
sar
or
or
into
push
cwtl
out
add
arpl
sti
int3
adc
incb
fistpl
xlat
jle
cmpsb
ja
push
cmpsb
sub
out
push
xor
add
notl
movsl
out
test
and
dec
xchg
das
das
jg
xchg
lock
mov
xchg
cmc
rcll
imul
jecxz
push
loopne
test
hlt
test
jge
mov
fs
cmp
sub
pop
add
pop
icebp
test
cmp
ficomps
dec
cmpsl
aas
aaa
jmp
nop
sbb
push
cwtl
ljmp
jp
ja
mov
pop
je
push
cmp
ficoml
fistps
pop
sti
in
scas
mov
mov
loope
out
stos
jne
test
test
jmp
and
aad
fabs
xor
xchg
shlb
mov
xor
and
mov
pop
imul
mov
xor
lea
ret
sahf
int
and
aam
pop
lcall
gs
push
pop
ficoms
inc
cmp
mov
sbb
push
les
pusha
imul
loop
clc
fmull
inc
loopne
inc
es
loopne
fnstenv
mov
or
movsb
repnz
mov
cld
xchg
cmp
mov
add
mov
jb
inc
dec
fnstcw
push
lea
push
mov
pop
outsl
jp
cmp
jecxz
lret
adc
cmp
pop
add
sub
aas
push
in
pop
addr16
sti
imul
sbb
mov
push
ret
sahf
mov
in
sbb
sbb
pop
inc
add
add
lcall
xor
dec
mov
out
or
js
mov
lahf
jno
mov
mov
out
xchg
mov
xchg
cmc
bound
test
sub
shrb
ds
ja
push
int3
xor
lock
and
fistps
data16
aad
inc
cltd
mov
cltd
add
in
sub
nop
inc
push
push
lahf
cltd
xchg
out
and
lcall
pop
xor
aas
push
mov
mov
cmp
xchg
sub
mov
mov
lea
out
jp
inc
jl
and
inc
test
mov
popa
pusha
in
mov
ret
push
or
cmp
xor
ss
inc
inc
movsl
in
inc
cmovl
pop
xor
inc
jb
push
pop
lock
add
icebp
addr16
out
jno
jmp
push
stos
cmp
fmuls
out
ja
hlt
add
xchg
ja
cld
mov
imul
test
push
pop
inc
jbe
fwait
add
pop
mov
out
inc
inc
xorb
cwtl
outsb
adc
cmpsl
pusha
mov
adc
cmp
bound
movsl
outsl
xor
cmp
int3
or
jo
jbe
je
mov
jp
mov
xor
sub
sub
rcrl
incb
mov
push
nop
sub
lahf
aam
push
inc
push
in
insb
lods
mov
pusha
push
ja
mov
jnp
inc
inc
mov
jne
mov
fxam
fdivp
sub
mov
stos
jg
and
cmp
xlat
inc
ret
xchg
rol
hlt
pop
jl
pop
mov
xor
loope
lret
lds
arpl
mov
xor
fwait
inc
pop
mov
enter
lods
mov
and
cmc
adc
dec
jbe
fcoml
mov
adc
js
adc
dec
add
aad
mov
sub
mov
shlb
daa
fisubrs
insb
repnz
outsb
mov
jg
addr16
js
push
test
js
jmp
xchg
pop
out
sub
adc
jle
jg
aad
mov
ficoml
xor
xor
nop
packssdw
mov
lahf
mov
xor
into
push
nop
xor
daa
cmc
mov
xor
mov
inc
pop
or
aaa
movsl
rcr
jnp
xchg
push
nop
push
inc
push
cmp
pusha
shlb
test
in
xchg
cld
pusha
cwtl
clc
or
dec
fs
and
scas
in
lcall
je
pop
rcrl
ss
or
sbb
mov
out
sbb
es
dec
in
and
cs
cmp
mov
fmuls
mov
xor
dec
inc
cmp
clc
imul
daa
sub
xorl
icebp
test
cwtl
arpl
and
test
cmpsb
rcrl
adc
adc
xchg
cmp
push
or
subb
stos
xor
push
jns
popl
mull
and
cmc
and
sub
lds
adc
push
mov
or
and
fcmovnu
cli
push
dec
adc
mov
out
ja
jg
int
cmp
lds
sbb
mov
mov
ror
push
mov
or
dec
out
cs
mov
dec
push
and
cwtl
jecxz
pop
in
out
repnz
loop
lret
mov
dec
and
add
push
jae
addr16
jne
mov
mov
es
lret
cmp
rcll
dec
fdivl
pop
adc
sbb
out
scas
and
xchg
incb
insb
lahf
in
aam
je
inc
aad
in
cmpsb
mov
imul
mov
leave
mov
sarb
cmp
mov
xchg
xchg
ficompl
pop
jns
jns
xchg
inc
mov
sti
pop
loop
push
mov
data16
push
sbb
lea
mov
mov
aas
aas
sub
mov
fidivl
push
mov
jge,pn
cmp
fdiv
xchg
mov
daa
dec
dec
rep
dec
test
mov
lods
pop
xchg
ret
push
sub
mov
xlat
es
inc
dec
lods
fidivl
test
inc
lea
pop
pushl
push
mov
mov
adc
sbb
les
shl
cmp
adc
leave
push
cld
xchg
push
push
jne
stos
and
lcall
dec
mov
jp
icebp
cli
dec
sarl
ficomps
out
push
loope
mov
std
imul
xchg
imul
ret
add
fwait
shlb
shlb
fsin
imul
hlt
bound
stos
shrb
fsubs
adc
sbb
pop
push
pop
xchg
push
adc
shr
inc
mov
lea
loope
cmp
aam
pop
stos
xchg
imulb
xchg
push
es
mov
xchg
push
bound
push
imull
std
pop
sub
adc
adc
cmpsb
xchg
xor
or
adc
mov
sub
or
cmp
and
add
adc
cmp
subl
jg
gs
in
or
sub
movsl
push
or
stos
push
push
cmp
push
xor
or
cmp
int
jae
mov
pop
xchg
cmp
pop
out
mov
outsl
mov
popf
add
enter
out
mov
jmp
add
dec
inc
out
mov
out
bound
je
lock
test
div
andl
lcall
lods
es
mov
fadd
andb
push
mov
cmp
mov
mov
lds
push
dec
loop
mov
lea
call
movsb
mov
mov
sub
inc
cmp
push
and
loop
cwtl
data16
and
add
hlt
add
jae
aad
cs
std
sbbb
mov
adc
mov
pop
sub
mov
dec
ficomps
adc
cmp
push
xchg
mov
andb
cs
pop
outsb
movsb
sbb
pop
daa
andl
push
fstps
in
fsubrp
or
insl
lret
mov
fistpll
pop
sahf
or
arpl
cmp
orl
fnstcw
adc
pop
sarb
push
popa
mov
jnp
iret
insl
push
or
mov
jnp
xor
mov
push
mov
int
sbb
aam
test
xor
xor
in
out
ja
fisubrl
jbe
jl
lds
in
inc
iret
sub
sbb
call
int3
cmp
push
push
jl
or
inc
push
push
outsb
in
xchg
shrl
stos
jnp
inc
add
xor
not
and
fildll
jne
arpl
fsubrs
repz
dec
loopne
mov
outsl
test
cld
fistpl
mov
xchg
scas
and
inc
imul
mov
popa
test
sti
mov
ret
mov
jmp
mov
inc
jo
jne
dec
sub
jb
sti
xchg
sbb
icebp
cmpsb
sub
mov
fs
push
push
sub
cli
lock
out
add
loop
xchg
dec
fsubrs
mov
jo
scas
das
cmp
test
pop
scas
outsb
imul
xor
sbb
dec
ljmp
inc
fstl
aam
shrb
or
xor
xchg
out
fcomp
adc
jecxz
movnti
jg
jb
jne
xchg
push
push
pop
sub
sub
shlb
or
cmp
jmp
pop
les
outsl
sbb
sub
pushf
pop
inc
add
insl
out
or
xchg
daa
jecxz
outsl
push
out
mov
xor
call
and
fs
jno
fimull
out
pop
scas
pop
cmp
fisubl
or
test
pop
mov
cmp
jl
fdiv
and
je
mov
in
sbb
pop
ret
rcrb
cmp
push
lret
or
dec
sbb
mov
arpl
pushf
mov
int
outsl
mov
mov
push
jo
aad
pop
test
inc
insb
daa
dec
mov
xchg
mov
sahf
ret
mov
arpl
stos
lcall
outsb
pop
aaa
in
outsl
ret
and
cld
fcoms
mov
pushl
adc
addr16
popa
push
mov
adc
jb
aaa
mov
push
loop
repnz
ret
in
imul
fists
mov
add
test
cmc
jno
rorb
loope
popa
or
fwait
pop
mov
loop
adc
pop
hlt
xchg
mov
les
jo
fs
cwtl
pop
xchg
scas
sub
dec
and
ljmp
imul
pop
xchg
jo
push
pop
lret
mov
lret
jo
dec
add
sbb
insb
jo
gs
dec
lods
aad
nop
or
scas
cld
xchg
mov
push
pop
enter
filds
ret
inc
sbb
mov
ljmp
xchg
jnp
pop
adc
xchg
fdivs
mov
xlat
mov
lea
outsb
sbb
fldenv
push
je
mov
cmpsl
push
add
clc
scas
call
mov
sub
lds
xchg
cmp
sub
mov
xor
sub
pushf
inc
shl
jge
fisttps
add
mov
cmc
ljmp
sub
xchg
out
push
call
sub
in
insb
mov
inc
insl
fnstcw
daa
ja
outsb
mov
cmc
push
jne
dec
cwtl
stos
bnd
scas
fdivr
mov
daa
ljmp
add
push
js
cmpsb
repz
mov
pop
dec
fmuls
sbb
arpl
fwait
adc
jge
bound
jb
mov
popa
imul
pop
cmp
scas
fcoms
jo
lahf
cmp
inc
sbb
mov
sub
filds
mov
in
and
loope
jmp
jmp
test
jge
mov
inc
pop
decl
adc
dec
mov
push
lret
fnstenv
add
stos
lcall
movsb
mov
je
mov
ret
fdivs
loopne
jno
ret
jne
fistpl
hlt
dec
fstpt
jo
out
sbb
pop
fbstp
aam
sub
fs
mov
jg
in
adcb
jno
mov
in
pop
cltd
out
les
adc
push
pop
mov
cmp
sbb
push
loope
hlt
push
add
sbb
lcall
arpl
push
sarl
je
mov
mov
xor
sub
hlt
mov
dec
imul
mov
xchg
mov
pop
cmpsb
dec
pop
inc
add
push
jge
test
mov
lock
cmp
xchg
sbbl
xchg
mov
fcomps
insb
cwtl
mov
adc
push
inc
shrb
mov
enter
jecxz
popa
ljmp
mov
test
pop
insl
jmp
cltd
add
and
out
mov
sbb
in
pop
sbb
insl
jns
pop
ljmp
iret
loop
add
insl
jns
fninit
pop
test
jge
cmp
push
enter
mov
daa
rcll
jb
pop
test
lahf
outsl
and
icebp
js
imul
in
mov
inc
subb
lods
cld
fwait
cs
jae
shrl
sub
in
adc
jns
dec
rcr
inc
push
xchg
into
push
pop
in
enter
mov
lock
shr
sbb
pushf
inc
add
cltd
pop
imul
stc
pop
xchg
call
inc
and
pusha
cmpsb
out
fsubs
inc
mov
dec
jmp
sahf
mov
lahf
mov
adc
scas
adc
cmp
test
loope
inc
fldt
cmpsl
or
icebp
andb
mov
jne
pop
add
xor
jo
jnp
pop
mov
push
ret
lds
or
loopne
bound
ja
push
cld
push
icebp
inc
loopne
mov
mov
cmc
push
adc
mov
jne
test
inc
roll
pop
push
outsl
xchg
adc
repz
adc
pop
inc
pop
push
sub
jp
mov
movsl
push
mov
dec
movsl
cmpsb
jge
fidivrl
push
or
sub
push
fstpl
sub
sahf
fisttpll
push
mov
ljmp
adc
cmc
imul
jmp
dec
xlat
lds
xor
lock
jne
mov
mov
outsb
pop
dec
inc
cmp
imul
and
loopne
bound
aad
rcl
sbb
mov
cmpsl
push
ss
mov
jnp
cmp
jno
rolb
daa
aam
sub
fsubs
pusha
xchg
add
shll
test
inc
movb
nop
outsl
dec
sub
xchg
mov
push
cli
pop
sub
pop
popa
pop
push
and
jne
fdivrs
mov
mov
mov
inc
insb
xor
inc
mov
mov
cmp
shrb
jmp
shlb
fmuls
repz
or
cli
xchg
sbb
jmp
bound
mov
iret
inc
call
test
cmp
inc
mov
sub
and
shlb
adc
pop
popa
setg
mov
add
subb
shlb
daa
dec
stos
and
jbe
fldenv
test
push
mov
jp
fistl
push
pop
dec
shr
out
pop
jmp
mov
dec
mov
mov
fwait
outsl
mov
loop
sub
xchg
or
jge
jbe
sub
loope
add
aad
mov
adc
push
jmp
mov
xchg
gs
lods
js
push
inc
mov
cmpsl
andb
cltd
push
push
inc
mov
jmp
in
dec
mov
jo
in
sti
or
xchg
jecxz
fcoml
sub
repnz
test
cmp
push
add
enter
jo
jae
add
cmp
cli
or
cltd
subl
loop
scas
fisubrs
loopne
push
mov
push
push
movsb
aaa
xbegin
and
jge
lret
cmpsb
adc
and
in
std
mov
or
mov
mov
sti
xchg
xor
mov
mov
ffree
popa
fcmove
add
inc
shlb
fmull
ret
or
iret
stos
call
aam
push
lock
lods
xchg
jo
dec
shl
test
arpl
in
adc
mov
lcall
push
pop
addr16
jp
mov
pop
mov
cs
xor
or
aaa
lret
pop
pop
cmpsb
cmp
push
sbb
clc
fidivrl
jnp
in
jle
jecxz
lcall
cmp
push
popf
xor
roll
jae
sub
and
sub
jno
xchg
movsb
ja
out
test
pop
xchg
shll
mov
stos
cmc
cld
mov
shrl
inc
pop
and
lods
mov
inc
loop
movaps
xchg
leave
add
inc
outsl
test
mov
xor
mov
push
loop
int3
xchg
outsb
cmp
adc
mov
pushf
push
lcall
jmp
cmp
ds
or
iret
add
je
sub
aas
jne
out
lea
jge
je
popa
fisttpl
adcl
sti
mov
ds
sbb
mov
lahf
sub
es
inc
sub
call
idiv
inc
add
jg
xchg
dec
adcb
dec
and
jae
add
lods
xchg
cmpsb
pop
sti
mov
popa
stos
jb
imul
cmp
adc
pop
imul
fisttps
dec
je
inc
cld
imul
jl
mov
push
aad
mov
scas
inc
mov
push
arpl
jmp
dec
xlat
jae
lret
lret
jle
mov
scas
ss
mov
shrb
jbe
loopne
fwait
mov
in
pop
pusha
ds
pushf
push
in
inc
gs
sahf
adc
cmp
inc
sarl
xor
adc
lret
add
push
insl
push
push
sbb
outsb
lret
mov
cmp
or
ss
jns
pusha
repz
es
popa
ljmp
call
adc
pop
pop
stos
cmc
push
gs
pop
pop
inc
dec
inc
sub
lea
pop
mov
daa
jmp
aad
int
add
fcoml
mov
cmp
mov
pusha
cmp
icebp
fwait
outsb
mov
repz
push
cmpsl
notb
jg
xor
call
or
aam
add
lahf
sahf
loopne
push
int
scas
fildl
xchg
pop
dec
rorb
stos
pop
sub
pop
jbe
daa
jle
nop
or
inc
lods
stos
dec
jno
stos
mov
clc
aad
or
sbb
in
je
jns,pt
dec
xchg
nop
ror
mov
mov
in
clc
out
pop
icebp
mov
sbb
shlb
stos
pop
bts
dec
pop
aaa
adc
js
iret
in
cld
dec
movsl
fstpl
pop
adc
loope
sub
jg
adc
dec
cmp
add
cwtl
cmpsb
pop
ret
fisubs
add
popa
jmp
xchg
popf
jno
mov
fsubrl
push
pop
lods
test
sbb
popf
int3
and
xchg
or
add
inc
ljmp
push
shrb
ja
xchg
xor
and
stos
and
popa
and
movsl
adc
xchg
mov
adc
test
outsb
push
mov
dec
push
cmpsl
pop
insl
mov
fistl
pop
or
xchg
dec
iret
push
out
mov
hlt
jno
das
stc
xchg
adc
dec
inc
adc
push
xchg
mov
movsl
push
mov
into
out
out
adc
inc
imul
iret
lret
inc
das
leave
xchg
lods
in
jo
adc
aaa
adc
cmp
fcoml
or
sbb
out
push
push
clc
mov
lods
pop
int
bound
cli
inc
cmp
in
add
xchg
cmp
inc
das
cmp
pusha
in
test
mov
mov
and
std
lret
inc
mov
out
mov
xchg
bound
push
jge
es
adc
add
mov
popf
inc
xchg
add
shrb
lret
add
loope
jg
filds
rcrb
jo
iret
mov
out
into
sub
mov
lock
mov
fidivl
frstor
jbe
pop
push
jmp
jecxz
aaa
es
adc
or
pusha
ljmp
xchg
push
out
sub
push
push
cmp
pushf
fistpll
cmpsl
push
dec
lcall
cmpb
mov
movsl
out
inc
or
outsb
mov
enter
lods
loopne
scas
xchg
jge
outsl
loope
cli
lods
lcall
stc
pop
popa
into
ret
popa
jg
scas
call
in
fsubl
cmp
push
mov
icebp
loope
outsl
pop
into
add
sbb
pop
jne
pusha
fisubrl
add
dec
loop
cld
jecxz
stc
mov
and
lahf
pand
into
inc
leave
addr16
in
xor
pop
push
scas
dec
jae
xchg
pop
mov
sbb
adc
inc
out
shll
jmp
or
push
pop
imull
int
add
flds
rcll
adc
xor
xchg
stos
and
rcll
pop
jb
sub
mov
cwtl
dec
push
jmp
loopne
sub
outsb
cli
loop
aam
dec
and
jbe
or
popa
mov
mov
cs
les
rolb
inc
stc
xor
pop
adc
jl
jns
cwtl
cmp
pop
xchg
pop
and
jne
dec
lahf
mov
sbb
std
dec
out
out
movl
das
sub
jbe
adc
jne
fs
xor
push
jne
test
cmp
xor
stos
xchg
fisttpl
int
cmp
sarl
mov
push
cmp
in
adc
call
subb
das
push
out
mov
cmp
dec
xchg
aam
loop
in
fsubrs
ficoml
and
sub
ret
cmpsb
pop
hlt
loop
mov
in
ljmp
lahf
das
inc
cwtl
dec
push
sbb
mov
dec
fldenv
mov
xlat
aad
pop
bound
adc
lcall
loop
enter
sti
mov
xor
rorb
pop
repz
mov
mov
aaa
push
das
outsl
sub
in
lds
sti
mov
xchg
movsb
scas
mov
test
push
int
dec
lret
sub
push
mov
jno
sbb
or
cmc
cmp
sbb
lea
or
xchg
pushl
add
lea
gs
je
mov
inc
fdivrl
jb
out
lahf
sub
lret
push
repnz
pop
lret
push
pop
xor
and
push
mov
inc
in
test
pop
sbb
and
nop
out
mov
inc
push
pop
ds
dec
shl
xchg
cmp
push
lcall
loop
js
sbb
push
xchg
popa
cmp
sbbl
cld
faddl
test
sbb
xchg
jne
fistl
iret
jne
sub
xchg
popf
cmp
insb
adc
imul
pop
jbe
leave
fisubl
xlat
add
mov
lcall
addr16
push
lea
stc
ja
jae
arpl
cmc
call
cmpsb
in
sub
jle
jb
and
in
pop
push
jmp
paddsb
int
test
jns
orb
mov
add
dec
inc
es
and
imul
pusha
movsb
sbbb
outsb
push
and
out
push
sub
stos
and
cs
push
shll
repz
mov
push
loopne
mov
es
mov
ds
sub
dec
fmuls
call
nop
hlt
mov
or
push
jl
sbb
ficoms
into
or
jns
gs
lahf
mov
fs
or
test
test
mov
sub
sbb
xor
pop
jl
dec
loope
imulb
enter
lds
fst
rorl
pushf
jnp
dec
jecxz
cmp
es
in
push
dec
dec
sbb
outsl
mov
inc
dec
or
in
loopne
call
add
sahf
clc
xchg
mov
add
iret
outsl
jno
sub
enter
xor
fisubs
add
sub
addr16
rolb
mov
idiv
repz
mov
sbb
sahf
sub
adc
mov
nop
pop
into
jge
cmp
sbb
fidivl
nop
dec
mov
ja
hlt
popa
inc
or
dec
push
xor
push
fsub
imul
sub
rcpps
pop
cltd
push
mov
lret
scas
outsb
push
ja
xchg
sub
mov
xchg
in
ret
jecxz
and
sbb
mov
mulb
mov
xchg
cmp
inc
ljmp
aam
xchg
pop
loopne
in
pop
jo
mov
lods
xor
and
cmc
aad
cmp
sbb
rorl
cmp
pop
dec
xchg
hlt
mov
mov
or
pop
push
lds
pop
cs
jnp
in
or
mov
fwait
arpl
mov
xor
cwtl
or
les
movb
cmp
leave
adc
idivl
lods
sbb
mov
xchg
enter
sub
adc
int3
cmpsl
pusha
push
mov
mov
ret
ret
lahf
mov
xor
push
dec
mov
jmp
pop
mov
adc
mov
mov
push
int3
addr16
adc
je
cmpsb
lret
pop
jp
insl
xchg
imul
repnz
mov
xor
test
stos
mov
ja
jp
adc
js
int
mov
jb
push
push
push
scas
out
xor
std
dec
cmpsb
int3
xor
fsts
inc
pop
jle
mov
mov
dec
iret
loopne
push
lds
rcrb
mov
sbb
int
sub
or
pop
addr16
adc
mov
and
test
pusha
rcrl
pop
dec
sbb
sub
inc
shll
push
pop
push
dec
mov
loopne
push
and
xor
push
in
in
cld
push
jmp
jo
adc
or
out
mov
sub
mov
mov
hlt
test
mov
or
pop
and
cmc
imul
inc
out
push
jl
clc
fs
or
stos
dec
test
jbe
or
push
add
push
cwtl
inc
adc
int3
sbb
dec
clc
repnz
jne
sahf
movsl
adc
rcrb
hlt
stc
fistl
sub
cmp
outsb
add
sbb
sub
pop
mov
inc
arpl
out
hlt
sbb
adc
daa
xchg
mov
shr
push
mov
adc
or
inc
cs
insb
lret
pop
or
ja
js
mov
fs
shl
insb
pop
into
mov
in
ret
xchg
mov
mov
out
icebp
inc
test
mov
test
cmp
hlt
rcll
hlt
punpckhdq
lret
mov
xor
dec
testl
mov
mov
cltd
xchg
push
pop
stc
out
mov
in
dec
lds
pop
imul
stos
push
sbbl
ja
movsb
loopne
jge
mov
push
outsb
pop
stc
clc
add
xor
mov
or
xor
out
push
pusha
mov
jg
mov
cmp
arpl
push
cmpsb
xchg
int3
mov
in
faddl
push
loope
ja
scas
mov
pop
jl
cli
test
xor
sub
dec
sub
cmp
subl
test
mov
sbb
dec
fs
cld
xchg
cmp
adc
mov
inc
push
test
push
into
pop
dec
pop
fisubs
sbb
push
adc
push
xchg
or
fisubl
int
call
push
sarb
insb
daa
cmpsl
cmc
mov
xchg
iret
and
push
shlb
sahf
dec
cmp
jns
mov
test
data16
mov
fs
jecxz
mov
mov
scas
loop
in
int3
mov
repz
out
jae
sub
push
sahf
ret
push
mov
out
xchg
cmpl
cmc
jne
cmp
dec
rolb
das
enter
push
leave
mov
stos
lret
pop
dec
sbb
adc
out
mov
sub
addr16
push
into
js
mov
adc
push
jl
dec
jmp
sbb
pop
stc
out
sar
aam
inc
mov
xchg
lret
mov
js
andb
lret
lods
sub
and
in
cmp
imul
mov
stos
popf
inc
add
aaa
cmp
inc
mov
scas
sti
push
imul
sbb
jle,pn
rcrw
xor
popa
jle
or
bound
je
pop
lea
add
sbb
fildll
fbstp
cwtl
mov
shl
sub
or
xchg
cmp
mov
mov
mov
cld
test
fs
fs
int3
add
sub
sahf
pop
pop
add
imul
and
fwait
cmp
iret
cltd
inc
sbb
pop
mov
xor
ss
mov
addl
mov
or
dec
in
jmp
sub
lock
xor
out
xchg
fiaddl
rolb
movsl
sub
fldenv
cmc
jo
idivl
mov
mov
xlat
jns
mov
sbb
pop
mov
xor
mov
push
test
cli
push
fwait
and
or
mov
xchg
jecxz
push
ds
insb
mov
mov
ret
out
icebp
pop
aam
data16
in
in
shll
lret
xchg
cmp
push
pop
jmp
ds
jnp
jle
pop
adc
cmc
test
adc
adcw
mov
jp
int3
push
jp
imul
imul
adc
cmpsl
and
sahf
ret
push
aam
push
loopne
lahf
push
jle
inc
hlt
jmp
xor
dec
add
ja
cltd
sbb
mov
out
adc
mov
ja
dec
inc
xor
add
mov
mov
add
jo
jmp
stos
or
out
in
mov
sbb
fstl
sub
mov
jp
push
ja
and
pop
sub
cmpsw
mov
or
mov
sub
mov
pusha
jecxz
push
inc
stos
xor
and
adc
push
adc
or
fisubl
int
jo
fsubl
out
adc
cld
inc
rcrb
pop
je
out
cmc
cmpsl
mov
mov
push
xchg
cld
mov
adc
es
shll
cmp
mov
ror
mov
xchg
mov
pop
pop
ja
mov
dec
shrb
adc
dec
loope
daa
lahf
cs
dec
imul
cmp
ljmp
jp
sbb
std
sahf
sub
jne
pop
lret
out
das
aas
sbb
push
add
popa
adc
pusha
inc
pop
cs
loop
sbb
xor
sbb
sbb
shl
push
pop
sbb
dec
sbb
inc
nop
add
push
and
pop
shrl
pop
push
enter
stos
cli
andl
cmpsl
insb
xor
adc
addr16
pop
int
pop
popa
enter
jnp
repnz
ficoml
inc
xchg
adc
mov
ja
add
push
sbb
mov
in
cmp
mov
cmp
adc
pop
mov
cmp
cmpsb
inc
cmp
cmc
insb
or
aad
insl
arpl
sbb
push
shlb
push
leave
mov
fdivs
mov
xlat
test
xor
inc
jnp
inc
ret
insb
imul
xor
and
sbb
pop
stc
cmp
pop
xor
sahf
dec
sub
shrl
xlat
lcall
test
xor
lcall
dec
mov
rcll
into
xchg
mov
popa
and
mov
mov
outsl
lahf
mov
je
mov
dec
pop
gs
imul
addr16
les
jne
lcall
push
inc
imul
mov
mov
bound
mov
movsl
pop
popf
cmp
aad
add
out
mov
adc
pop
cwtl
into
inc
xor
mov
mov
lods
fildll
dec
add
mov
fnsave
pop
mov
packuswb
sbb
inc
dec
push
jae
subb
and
insb
out
mov
xchg
cmpsb
push
xchg
adc
push
and
pusha
jnp
sub
xchg
aam
sub
adc
les
xor
xchg
sbb
jns
and
ffreep
xchg
pop
cmpb
divl
push
cmc
push
ret
imul
push
mov
je
inc
into
in
inc
cmc
push
pop
mov
cmp
es
mov
sbb
pop
push
lcall
test
sub
adc
pop
insl
cmp
cmp
push
sub
cmpsl
arpl
test
pop
insl
out
mov
push
test
mov
lea
xor
jp
std
xlat
out
imul
scas
xchg
stos
cwtl
pop
add
lods
add
movsb
dec
ficoml
pop
nop
sahf
jg
mov
mov
mov
sbb
mov
add
dec
stc
cmp
jg
push
sub
clc
lods
jb
adc
jmp
popf
int
pop
test
push
jmp
pop
xor
fsub
ficoml
cmp
and
dec
mov
push
xlat
mov
adc
cmp
mov
dec
sub
lahf
sbb
push
mov
mov
mov
aaa
call
shlb
fld
fimuls
sbb
fldln2
out
mov
stc
call
pop
jbe
mov
sbb
call
lcall
or
testl
packuswb
sub
inc
and
jle
pushf
addr16
int3
pushf
ljmp
shr
jb
clc
adc
pop
hlt
cmp
roll
fidivrs
arpl
ljmp
out
xor
lcall
popa
inc
and
dec
aaa
push
pop
adc
sub
test
repnz
mov
in
dec
loope
imul
jns
xchg
xchg
mov
and
out
adc
mov
movsb
and
andl
jg
clc
sahf
add
mov
loop
mov
stos
mov
rcr
lahf
lods
rcll
mov
sub
popw
cli
js
cltd
inc
and
loop
mov
in
ret
and
push
into
pop
and
xchg
cmp
test
inc
mov
xchg
outsb
cs
lods
pop
cmpb
fidivs
mov
ret
sbbl
insb
dec
dec
cmp
pushf
int
xor
jbe
dec
xchg
rclb
rcrb
icebp
sbb
dec
cmpsl
in
xchg
adc
mov
clc
xchg
data16
jb
add
data16
add
cld
call
sub
adc
hlt
hlt
repz
inc
mov
or
inc
ljmp
lret
add
out
xchg
push
or
cs
sbb
mov
int3
sub
sbb
xchg
subb
jnp
enter
mov
jbe
data16
lcall
xor
in
xchg
popf
xor
jp
lods
mov
movsl
xchg
cmpsb
push
sbb
or
mov
icebp
daa
xchg
addr16
rorl
xchg
outsb
sbb
cltd
jo
inc
xchg
int3
jg
inc
pushf
add
ret
or
or
jp
jmp
mov
daa
outsl
das
insb
inc
cmp
cmp
dec
add
xor
popa
ret
pop
ret
mov
repnz
sbb
xor
dec
nop
pop
sub
mov
arpl
add
push
enter
lret
jo
dec
testl
jp
and
pop
icebp
and
pop
push
add
push
cmp
test
imul
mov
mov
push
push
ljmp
mov
push
popf
sub
dec
outsl
mov
arpl
fwait
iret
lods
fwait
push
xchg
mov
fsub
or
mov
mov
cs
pop
rorl
and
push
fnsave
push
movups
inc
js
push
mov
cmp
mov
pusha
jmp
sub
cs
push
dec
xchg
shlb
sbb
jmp
push
mov
icebp
or
add
pop
mov
sbb
or
out
in
dec
xor
inc
mov
movl
mov
adc
movsl
pop
fbstp
out
inc
in
ds
adc
js
xor
mov
and
fisttpl
shlb
shlb
mov
mov
xchg
xchg
popa
xchg
addr16
daa
push
xchg
mov
mov
cmp
add
nop
mov
aam
dec
addl
add
jg
test
test
pop
push
fcmovnb
adc
mov
sub
add
in
sbb
cwtl
movsb
xor
mov
test
cmp
inc
pop
xchg
cmpsl
pop
cmpsl
dec
jle
insb
sub
aas
arpl
in
and
stc
pop
outsl
testb
and
push
jae
inc
xchg
cmc
dec
mov
jne
in
inc
adc
push
xlat
in
mov
push
and
cmp
enter
cmpsb
mov
in
repnz
cmpsb
xor
or
dec
sti
mov
inc
xchg
fcomps
test
adc
out
jns
rolw
or
adc
fdivl
test
mov
shlb
push
rcll
cs
sti
mov
icebp
inc
pop
lods
test
dec
repz
jle
fnstenv
les
adc
les
jl
cmp
mov
push
movsb
inc
mov
outsl
movb
mov
out
jae
addr16
adc
xchg
addl
add
xchg
jle
jo
fwait
or
ja
insl
sbb
xchg
xor
popa
lret
ficoms
dec
add
es
xor
mov
mov
sar
lret
jno
adc
out
lea
enter
ss
cmp
mov
sarb
les
out
xchg
pop
rcr
mov
dec
ficompl
pop
jb
mov
out
pop
enter
mov
sbb
xor
scas
repnz
push
aam
fdivrs
or
ret
not
adc
pop
rcrb
jno
ficoms
mov
xchg
pop
mov
pop
mov
mov
sbb
push
aad
fsubl
ficomps
shlb
fndisi(8087
or
jb
cmp
sub
add
movsb
cmc
dec
leave
or
shl
xor
pop
dec
mov
sti
cs
xchg
iret
clc
xchg
xchg
out
aaa
out
push
jg
into
xor
outsl
and
mov
or
xchg
loop
xlat
lahf
sub
pop
roll
insb
pop
push
pop
shl
jecxz
mov
inc
mov
roll
mov
mov
fstpl
cmp
adc
cmpsl
pop
inc
pop
cmp
sub
push
sbb
testl
push
into
pop
jecxz
into
add
jle
rcrb
xchg
hlt
outsb
shll
jb
lcall
pop
addr16
push
cld
fcoms
xor
pushf
insb
dec
aas
rclw
iret
dec
mov
mov
xchg
jecxz
and
sbb
xchg
outsl
jl
xor
andb
out
jne
adc
stos
push
outsl
xchg
add
adc
mov
and
loope
ds
movsl
outsl
imul
test
xchg
jbe
mov
sbb
dec
insl
cmp
sub
sti
cmp
lds
gs
pop
xor
mov
adc
aas
in
out
pop
xor
mov
jl
ja
andl
mov
mov
mov
bound
cmpsl
cmp
out
mov
int3
lret
mov
cmp
or
adc
dec
push
lret
movsb
aam
movsb
xchg
and
dec
xorb
test
es
push
fsubp
mov
stos
or
mov
dec
fisubs
sub
fwait
inc
mov
mov
mov
and
scas
scas
inc
sarb
inc
movsl
jmp
out
jl
js
pushf
dec
cmpsl
xchg
int
es
adc
xrelease
stc
cmp
jnp
xchg
sbbl
rcll
testb
stos
sbb
leave
push
inc
dec
lret
rclb
xchg
cs
push
fs
xchg
pop
mov
jbe
les
pusha
sahf
mov
inc
cs
dec
push
adc
xor
cmp
add
xchg
inc
je
mov
sbb
pop
and
xchg
jmp
or
jecxz
lods
in
fcmovu
lods
fbstp
mov
das
movsb
js
mov
dec
test
xor
pop
and
cli
lea
testb
ss
lods
lret
loopne
xchg
popa
jae
xor
popf
xor
xor
xchg
or
and
inc
push
inc
negb
mov
fdivrl
mov
inc
out
or
pop
mov
imul
jl
bound
pushf
jb
cli
jge
and
in
lcall
or
adc
add
pop
adc
jmp
inc
xchg
sbbb
pop
movsl
jp
sub
and
test
mov
lcall
jne,pn
movsl
xor
mov
js
adc
push
dec
les
mov
xorl
hlt
arpl
out
mov
popa
repz
or
push
mov
aad
jmp
xor
push
add
push
lock
mov
adc
add
push
loope
and
push
pop
cwtl
and
cli
mov
fsts
rorl
sti
jnp
ret
fcmovnb
scas
pushf
pushf
adc
sbb
push
xchg
mov
mov
push
aaa
xor
mov
hlt
inc
lods
fsubrl
pushf
jns
lds
xor
inc
inc
or
xchg
or
filds
mov
push
loop
inc
fwait
xchg
daa
mov
loopne
xchg
cmpsl
enter
sbb
insl
movsl
sub
sarb
mov
dec
lahf
mov
mov
stos
inc
jae
jo
in
out
xchg
jae
pop
jl
jb
addb
fcomip
sub
loopne
push
mov
popa
push
dec
cltd
mov
sub
and
fnstsw
and
aas
mov
cmp
jmp
pusha
sbb
stc
pop
pop
jno
adcb
inc
inc
mov
sub
cmp
roll
iret
clc
fdivp
mov
test
insb
jg
add
mov
faddl
rorl
pop
jo
faddl
xor
xor
or
dec
sahf
mov
jle
pop
scas
push
jns
jecxz
cmp
out
dec
xor
cmp
cmp
xor
jmp
mov
push
in
int3
or
lcall
lret
add
addl
mov
cwtl
rolb
dec
and
pop
cli
add
sub
jl
sbb
add
test
sbb
mov
test
adc
or
jno
pop
ds
xor
aaa
pop
cwtl
jecxz
outsl
cmp
pop
and
inc
test
mull
push
ret
movsl
xor
inc
add
sti
gs
iret
int3
lcall
call
cmp
in
xchg
in
fidivs
roll
sbb
loopne
gs
iret
popf
dec
pushf
jg
mov
mov
mov
pop
cmp
pop
push
pop
cmp
pop
jl
aaa
hlt
jne
shll
sar
in
and
out
sbb
xor
xchg
ret
cltd
mov
insl
xchg
movsb
out
jno
mov
cmp
mov
lret
and
pusha
sub
out
les
mov
xor
pushf
dec
fstpt
jae
cltd
and
out
mov
aad
push
push
jnp
jg
push
frstpm(287
cmp
xor
pop
outsl
cli
stos
and
stos
push
dec
inc
shrb
mov
mov
imul
int
push
lods
xchg
xor
push
mov
adc
sub
push
pop
mov
mov
pusha
iret
mov
aad
sbb
xchg
bound
rclb
idivl
fdivl
mov
jno
stos
sbb
mov
sbb
mov
ljmp
xor
jno
jo
mov
imul
pop
xor
mov
sbb
popf
push
fstl
pop
cld
daa
inc
mov
shrb
jbe
into
adcl
push
js
push
push
clc
fwait
mov
ficomps
mov
aam
mov
mov
adc
sub
addr16
aas
sub
xchg
xchg
int
inc
jmp
add
xlat
or
sub
pushf
test
sub
ja
add
insl
mov
sbb
inc
pusha
stos
dec
xor
xor
mov
int
jo
notb
pop
cmp
call
lods
jae
xor
mov
add
xor
loope
cmp
jno
mov
data16
sahf
daa
dec
je
call
jns
lret
sahf
xchg
fisubrl
xchg
bnd
mov
push
scas
or
sub
and
push
lret
inc
jae
daa
pop
out
dec
pop
lea
test
push
xchg
adc
leave
into
fwait
mov
xchg
jecxz
sti
aas
push
sti
mov
loopne
fnsetpm(287
adc
push
adc
mov
push
inc
or
push
adc
pusha
lahf
mov
cwtl
pop
testl
pushf
sbb
and
das
jnp
hlt
xor
xchg
rclb
push
sbb
pop
cmp
cmp
lcall
js
rorl
rorl
sub
call
icebp
sahf
sub
xlat
sti
adc
sti
sar
jbe
mov
out
xor
rcrb
xchg
notb
mov
pop
ret
add
fcomps
stc
js
push
push
nop
xchg
out
aam
jmp
sbb
mov
cmpsb
addb
xor
daa
mov
push
insl
sbbl
add
sub
pop
or
sbb
dec
into
jne
mov
je
aas
aas
push
xor
loopne
xor
dec
pusha
enter
and
pop
sbb
cmpsb
and
stos
or
dec
mov
sub
pushf
add
xor
and
fcomps
adc
fdivl
mov
xchg
pop
jo
ljmp
push
fadds
inc
cli
xlat
sbb
out
push
mov
cmp
push
jmp
lahf
into
sarl
and
push
cmp
aad
xchg
pop
and
hlt
pop
sbb
imul
outsb
repnz
out
mov
int
popf
insb
and
and
pop
jl
loop
faddl
repnz
sub
inc
aad
sbb
insb
dec
cwtl
mov
cmp
js
jne
cmpb
shr
xor
cltd
push
out
or
dec
mov
xchg
insl
push
popa
adc
jbe
mov
mov
adc
pusha
dec
imul
cmpsl
or
cld
cmpsb
xorl
sub
test
dec
clc
stc
rorb
lcall
xorb
movsl
push
sub
push
pop
das
jne
cmc
add
pop
cwtl
ljmp
shl
sbb
fldl
cmpsl
or
ss
sti
push
xchg
fdiv
and
pop
mov
mov
jb
cmp
cmp
sarb
je
sub
mov
jne
mov
clc
insb
push
mov
cmpsl
mov
ja
lahf
sbb
push
mov
cltd
pop
dec
in
inc
and
or
loopne
ret
imul
sub
insl
imull
in
pop
xchg
mov
inc
rol
ss
cmpsl
mov
mov
jae
imul
outsb
jae
in
mov
dec
add
dec
mov
mov
and
js
mov
inc
jl
jmp
dec
xor
clc
out
les
sub
push
cmp
test
data16
cmpb
divl
cmpsb
xor
jecxz
adc
movsl
inc
adc
adc
lret
adc
dec
sbb
lods
and
or
and
pop
mov
sbb
std
xchg
inc
sub
outsl
jnp
xor
adc
imul
sub
push
jno
pushf
pop
jnp
rep
stos
addr16
insb
mov
js
mov
cld
ds
jl
adc
out
pop
mov
cli
divb
std
pop
mov
movsb
mov
pop
xchg
sub
out
pop
mov
push
in
pop
mov
sbb
cmpb
out
and
aad
in
jbe
mov
push
add
xor
cmp
mov
lods
mov
cmp
js
pop
mull
jbe
jp
push
lcall
inc
subl
or
jnp
repz
xchg
sub
imul
xor
iret
and
add
inc
add
push
cmp
sub
mov
in
mov
dec
mov
imul
ffree
or
push
hlt
js
pop
xchg
sahf
inc
push
in
jl
fisttpl
cli
jmp
xor
cmc
mov
lods
dec
mov
ret
mov
or
and
mov
push
adc
loopne
stc
xor
mov
sti
or
sub
mov
push
enter
std
arpl
xchg
aaa
iret
call
jnp
lcall
xacquire
or
pop
fcoms
cmp
idivb
popa
testl
add
mov
add
inc
xchg
leave
xchg
push
cwtl
jne
addr16
sub
lods
pop
pop
sub
in
repz
mov
fstpl
xor
out
jecxz
mov
imul
jno
inc
std
mov
nop
lcall
imull
jno
repz
dec
push
jle
lcall
mov
or
cmp
andl
cmc
fldpi
sub
rorl
shll
mov
rolb
jae
addr16
mov
inc
pusha
xor
std
xor
pop
pop
mov
push
jl
pop
dec
or
adc
jns
mov
xchg
fists
out
dec
mov
xchg
psrlq
in
xchg
mov
and
sahf
out
movsb
xchg
sbbb
mov
cmp
jle
push
push
pop
inc
mov
cmc
rcll
fld
xor
hlt
fisttpl
xchg
and
sahf
lahf
fwait
sub
adc
mov
lods
dec
xor
ret
and
insl
cli
in
mov
cmp
push
movsl
iret
addr16
mov
xor
sub
xor
sub
cmp
pop
xor
int3
sub
fstps
pop
inc
lods
pop
and
push
adc
pop
or
mov
stc
aaa
jmp
test
or
bound
sbb
mov
xor
and
inc
mov
jnp
das
addr16
cmp
lret
rorl
jno
add
sbb
cmp
inc
insb
movd
cmp
jno
lds
inc
xor
mov
cmpsl
fcomps
xlat
imul
sub
movsl
adc
jl
cmp
jmp
push
pop
cli
repz
mov
and
rcrl
lods
pusha
pop
and
data16
dec
inc
ficompl
imul
hlt
cmp
dec
icebp
jo
push
inc
and
icebp
in
jmp
xchg
rcll
ror
aam
orb
jne,pn
jg
mov
aad
idivl
adc
cmp
mov
xchg
fimull
cmp
sub
popl
arpl
adc
and
gs
mov
jo
or
inc
jge
sbb
lcall
lcall
stos
sarb
push
xchg
or
daa
imul
sbbb
leave
loopne
mov
pop
sub
jp
add
loope
or
std
sti
xorb
mov
xchg
cmp
lret
hlt
data16
int3
mov
pop
ret
popf
in
pop
mov
aam
lock
sbb
pop
nop
xchg
adc
das
std
xlat
sbb
and
loope
test
aas
mov
orl
pop
pop
cli
mov
aad
cmp
jo
daa
insb
xchg
pavgb
fiadds
lret
in
mov
sub
cmp
jp
add
je
std
sbb
out
push
push
mov
fxch
ret
xor
mov
lcall
dec
sbb
mov
add
mov
sbb
lock
hlt
jp
or
sbb
xchg
aam
jge
cmpsl
fidivs
push
cmp
push
cmp
cs
ret
lds
mov
sarl
mov
sub
mov
out
int3
adc
enter
dec
mov
testb
or
mov
push
fcmovnu
push
adc
cmp
pop
stc
cs
mov
clc
icebp
cmp
and
xor
mov
jl
rorb
jb
stc
movsl
aaa
adc
sub
leave
jbe
nop
sbb
loop
movsb
icebp
inc
xor
dec
jmp
xchg
shl
test
inc
mov
mov
pop
ror
inc
mov
jge
inc
jne
ret
pop
cmp
xor
fiaddl
jg
push
xor
xchg
daa
add
int3
clc
dec
and
mov
leave
lds
rclb
xchg
cmc
in
push
cmp
jmp
test
data16
iret
pop
pop
fnstsw
popf
lret
aad
dec
sub
xchg
enter
pop
mov
push
std
mov
imul
mov
add
inc
jecxz
mov
or
dec
lds
cltd
ds
jnp
shrl
jnp
mov
fdivs
js
in
xchg
mov
sub
lret
ds
hlt
enter
pop
mov
sbb
push
xor
sub
addr16
dec
jmp
stc
rcrl
push
insb
jmp
pop
mov
repz
insb
in
cmp
aaa
lret
test
pop
push
cmp
sbb
les
mov
push
push
dec
cltd
lds
insl
push
sub
repnz
or
dec
rcr
xchg
jg
jmp
sbb
jle
cmp
add
arpl
xchg
lret
mov
or
call
sbb
mov
push
xchg
dec
pushf
xorps
insb
gs
lods
pushf
inc
stos
cmpsl
xlat
push
pop
cmc
dec
sbb
pop
cmp
inc
add
and
inc
cs
xchg
lret
cs
mov
ds
jg
fsub
pusha
mov
mov
ljmp
iret
adcl
mov
repz
mov
dec
shlb
cmp
inc
popf
mov
sbb
imulb
mov
pop
add
inc
test
pop
in
popf
mov
sbb
jg
push
out
jmp
and
lock
lods
jne
xchg
jns
cmp
hlt
mov
push
jmp
lahf
pop
push
xor
popf
mov
pop
aaa
inc
pop
adc
dec
mov
cmpsl
jnp
popf
cs
xchg
add
or
xchg
inc
cmp
mov
lods
sti
sti
dec
cmp
lods
adc
inc
mov
lret
rcl
mov
jnp
test
pushf
sbbb
mov
out
iret
fistpl
jp
jle
cmpsl
jo
mul
jne
popa
mov
sub
stos
out
loop
rep
xlat
ss
out
shl
jnp
nop
sahf
mulb
es
mov
inc
pop
hlt
pushf
jb
out
jmp
or
xor
xor
jmp
dec
dec
pop
stc
push
push
pop
mov
sbb
jmp
inc
jp
push
cld
mov
test
mov
loop
jle
adc
xchg
loope
add
sub
movsl
test
dec
fnstsw
adc
and
or
ja
jbe
fsubl
nop
dec
xor
sarl
test
mov
jg
cmp
nop
inc
in
lock
sbb
xchg
cltd
xlat
mov
mov
out
mov
insl
xor
test
add
cmp
jae
mov
push
inc
test
leave
sub
push
stc
pop
lock
adc
push
xchg
mov
les
jo
inc
cmc
scas
fistl
xchg
xor
dec
pop
and
xor
mov
cmp
pop
adc
adc
sub
cmp
or
adc
mov
push
jge
sub
in
jg
push
push
xchg
jge
in
add
fadds
leave
rcrl
mov
fsub
lods
nop
ss
stc
adc
int3
and
xchg
mov
sub
cli
pop
rclb
aad
pop
xor
add
or
outsl
aaa
or
dec
pop
daa
and
lahf
test
add
jnp
insl
dec
or
pop
std
mov
mov
inc
test
sub
ja
mov
cwtl
les
or
dec
xor
push
mov
pop
shll
adc
test
stos
arpl
lock
inc
jo
int3
or
cmp
iret
push
mov
mov
dec
fsubrl
and
ljmp
mov
jnp
inc
inc
sbb
mov
push
insb
js
test
sub
mov
dec
cmc
cltd
lods
orl
out
jecxz
ficoms
dec
jl
jbe
mov
and
jle
sarl
shrb
popf
mov
add
xchg
in
jnp
icebp
and
int3
xchg
aam
fcoml
movsl
mov
cmpsl
mov
fstps
mov
or
popa
mov
lahf
pop
shll
mov
ret
mov
or
cmp
cmpsb
test
inc
popa
xor
dec
mov
push
sub
jnp
push
mov
scas
imul
fbstp
aas
test
pop
filds
pop
pop
sbb
vfmadd132pd
mov
test
pop
mov
or
out
cmpsb
mov
jge,pn
cmc
stc
jnp
push
out
es
lea
mov
stc
inc
rcrl
pop
pushf
iret
push
jg
iret
out
iret
add
cmp
mov
ds
stos
jle
in
pop
push
lds
dec
iret
adc
sub
sub
inc
out
inc
cmp
mov
popf
inc
rclb
mov
iret
fnstenv
and
pop
mov
js
sti
push
movsl
cld
and
jmp
jae
xchg
hlt
sbb
int3
push
aas
mov
push
push
or
bsr
orb
and
pop
cltd
adc
push
rorl
mov
inc
ds
scas
outsb
mov
mov
adc
inc
negb
sahf
iret
cli
ljmp
imulb
sub
loope
fistpl
pop
les
sar
and
out
fcmovnu
cli
cmp
inc
jo
mov
call
fiadds
aam
aad
fsubp
mov
xchg
add
aam
fldcw
lds
mov
popa
sbb
mov
mov
aaa
enter
jo
repz
adc
and
or
sub
lret
inc
scas
inc
inc
lock
lret
push
dec
cmp
test
movsl
shr
xchg
or
sub
push
push
jl
in
test
rorb
jmp
jg
pushl
sbb
stc
js
fmuls
movsl
jno
mov
aaa
sbb
push
xchg
inc
mov
cmc
arpl
sbb
sbb
xchg
xor
pop
les
mov
mov
jb
xchg
adc
ret
push
or
out
sub
repz
mov
stc
sub
inc
push
lahf
jl
fdivl
lret
pop
lahf
mov
dec
push
in
jo
mov
or
adc
xor
pop
lock
dec
cmc
jo
sti
inc
lea
jecxz
xchg
cmp
outsl
sub
mov
addb
cld
int3
in
nop
call
ficomps
pushf
push
stos
cmp
mov
arpl
sti
jmp
jmp
js
ret
and
cmpsl
ja
lret
xchg
gs
mov
mov
cwtl
add
jnp
ret
rcll
imul
jge
mov
mov
dec
mov
dec
mov
test
jae
mov
push
js
mov
or
sbb
xor
push
loop
and
out
cmp
and
cmpsl
add
mov
xchg
fstl
inc
xchg
clc
lcall
inc
insl
lahf
icebp
cs
imul
pop
xor
cmpsl
andb
xor
jb
push
mov
pop
xchg
std
inc
xor
mov
pop
out
movsl
xlat
insl
mov
adc
shlb
and
jo
push
pop
push
adc
jmp
mov
jmp
dec
mov
sub
mov
mov
add
cld
shrl
or
loopne
ljmp
pusha
xlat
adc
xchg
push
pushf
inc
jge
scas
mov
in
pop
out
jo
insb
ds
hlt
and
add
mov
arpl
into
cmpsb
sub
popa
scas
cmp
mov
ss
mov
icebp
and
std
or
jmp
fcoms
jg
add
ja
je
push
lods
sbb
inc
jp
lds
pop
mov
shlb
xchg
test
jecxz
jbe
outsl
pop
shlb
clc
push
push
jmp
xchg
dec
fwait
shlb
fcmove
xorb
daa
xor
xchg
pop
xchg
iret
xchg
movsb
testb
sbb
mov
dec
push
xorl
out
push
add
sbb
adc
dec
or
iret
in
adc
out
jbe
lods
pop
cmpsb
and
outsl
popa
rorl
in
test
push
insl
lea
jb
lret
mov
aas
and
pusha
cs
pop
rcll
mov
fiaddl
pop
pmuludq
pushl
xchg
arpl
push
cli
or
push
sti
call
pop
cmpb
xchg
cmpsb
mov
stos
mov
cmc
push
push
jnp
jge
aad
iret
movsl
xchg
inc
mov
push
imul
lret
dec
popa
es
dec
mov
pushf
push
xor
rclb
dec
ss
outsl
cmp
mov
xchg
mov
dec
jp
push
push
xor
test
repz
jmp
dec
stos
mov
add
rorl
mov
imul
inc
pop
negb
stos
sub
sti
add
and
mov
mov
mov
push
nop
cmp
dec
aas
je
repnz
xor
mov
je
hlt
mov
js
mov
adcb
loopne
jl
and
inc
daa
and
orb
into
dec
jo
bound
and
mov
or
sbb
cmp
or
xor
push
add
inc
and
stos
orb
int3
and
mov
sbb
mov
pop
adc
test
cltd
xor
in
dec
mov
cltd
push
push
and
mov
das
cmpsl
dec
jns
lahf
mov
lret
mov
mov
mov
cmp
inc
mov
push
xchg
add
inc
fisubrs
pop
push
ss
mov
mov
sbb
pop
insb
dec
adc
pusha
iret
mov
mov
lods
jmp
jge
cli
and
pop
addr16
dec
add
mov
js
pop
les
cltd
hlt
arpl
dec
incb
sbb
xchg
outsb
push
cmc
dec
out
fldt
inc
sbb
aad
in
cli
mov
xchg
loop
test
pop
popf
mov
sahf
stc
inc
mov
mov
rclb
das
jns
push
addr16
out
pop
dec
fldt
popf
mov
jbe
fwait
push
cmp
inc
mov
out
mov
mov
jp
mov
stos
andb
xor
jecxz
mov
jnp
push
jge
ljmp
or
ja
popl
rorl
call
add
jecxz
push
pop
mov
rcrl
pop
inc
push
push
ret
fwait
push
icebp
or
mov
xchg
xacquire
pop
and
fmuls
xor
xchg
std
sbb
movsb
mov
js
dec
pop
inc
pop
sub
rorb
test
mov
test
jns
adc
or
cwtl
lret
stos
mov
test
mov
mov
or
dec
stc
inc
inc
sbb
mov
or
or
rol
xor
lock
fisubl
mov
mov
jno
xchg
mov
les
sub
insl
imul
repnz
lds
sbb
rorl
pusha
je
cmpsl
fistps
icebp
push
inc
inc
add
sti
pop
fildll
xchg
cmp
fbstp
inc
shlb
insb
sbb
or
sbb
sahf
shl
aam
call
and
sti
int
out
push
mov
push
adc
adc
mov
in
das
cmp
stc
xchg
lods
rcl
xor
lret
in
inc
cld
pop
inc
mov
pusha
mov
outsb
add
and
pop
xchg
cwtl
stos
cmpsl
out
push
and
std
mov
xor
fs
sbb
cmp
cmp
cli
and
ficomps
je
xor
xor
xchg
in
lret
sub
mov
cmp
shrl
xchg
addr16
scas
int
mov
push
inc
int3
loopne
shl
add
nop
sub
pusha
mov
inc
mov
sub
jg
add
inc
push
sti
cmp
mov
in
inc
lret
push
mov
jmp
mov
lds
cwtl
sub
cmp
fpatan
or
cli
mov
mov
stos
and
add
sar
cmp
test
stc
mov
addr16
ret
fists
sbb
test
jbe
std
sbb
adc
loope
jl
fcmovb
pop
jnp
pop
lret
out
and
loop
in
shlb
test
mov
out
push
fisttps
aas
sbb
mov
cmpsl
sti
clc
sarl
pop
cld
cmp
call
cmp
shll
push
pop
test
test
fldenv
and
int
xchg
aas
sub
test
inc
or
faddp
cmpb
pop
shrb
int3
jg
fldcw
adcb
mov
bound
push
shrb
sub
adcl
push
loopne
sbb
xchg
movb
out
jle
iret
lods
push
jns
add
cmc
push
mov
xchg
and
iret
iret
push
pop
jp
aaa
pop
sbb
mov
push
in
cmp
in
popf
and
jecxz
out
push
sbb
das
notb
mov
mov
pop
pop
js
sbb
dec
repz
mov
addr16
dec
pop
sti
xchg
ficomps
cmc
cmpsb
push
arpl
cmc
sti
sbb
push
cmp
adc
jb
inc
cmp
loope
xchg
gs
inc
stc
ja
jmp
push
and
frstor
out
in
and
mov
test
js
scas
sub
lret
nop
repz
fstps
xlat
push
hlt
out
fdivr
cld
bound
pushf
xchg
or
aas
or
int3
sbb
lret
inc
test
add
lahf
mov
dec
ret
sub
test
imul
mov
sti
pop
cmp
dec
roll
push
loop
push
sub
cmp
add
xor
cmpsl
pop
add
cltd
sbb
or
mov
or
dec
cmc
xchg
push
outsb
int
dec
leave
insl
adc
jne
sub
adc
mov
adc
shll
addr16
sub
push
imul
xor
mov
xor
andb
lcall
pop
cmp
jbe
outsb
in
adc
dec
sub
cmp
mov
out
out
sub
mov
fmuls
cwtl
mov
lea
lret
out
inc
cvtdq2ps
add
lret
movups
xor
mov
insb
mov
jae
fs
mov
jle
pop
cltd
idivl
xchg
sarl
adc
loope
icebp
cmp
ja
idivb
inc
mov
shll
lock
mov
nop
loope
data16
leave
es
dec
in
sub
add
sbb
pushf
add
jmp
cmp
lahf
fcmovu
and
imul
xor
inc
outsl
roll
mov
das
mov
mov
pop
mov
dec
sahf
sbb
push
ljmp
repz
es
in
sahf
mov
adc
lods
inc
cwtl
sbb
test
cmp
outsb
push
fildll
pop
add
dec
xor
xchg
nop
popa
outsb
add
in
movsb
repnz
lret
mov
test
out
into
xor
mov
xchg
mov
fmuls
or
aaa
sbb
cmpb
ficoms
cli
cs
dec
cs
movl
push
es
xchg
mov
cwtl
mov
mov
push
sbb
lods
dec
int
push
int
xor
clc
or
mov
inc
mov
sub
cli
inc
lods
int
push
shlb
fiaddl
sub
rcr
popa
and
or
xchg
pop
jle
pop
out
mov
dec
vphadddq
fldz
mov
iret
arpl
pop
push
xor
add
popf
and
dec
inc
inc
pop
xchg
mov
adc
sbb
unpcklps
dec
repnz
enter
hlt
cmpsl
lods
test
daa
mov
adc
adc
dec
out
fcoml
xlat
mov
das
popa
int3
mov
inc
push
cmp
fidivrs
stos
mov
add
scas
cld
leave
fcmovnu
call
mov
in
int3
or
pop
mov
lods
mov
adc
or
or
jnp
mov
mov
pusha
clc
jne
jb
jecxz
cli
fmuls
and
shlb
dec
hlt
sbb
insb
ret
int3
xchg
jp
pop
or
ret
test
xor
pop
outsl
jge
std
jle
mov
imul
in
pop
pmaxub
dec
add
xchg
jmp
sbb
inc
pusha
sub
xor
dec
stos
inc
xchg
js
call
jnp
mov
rcll
add
jae
push
cmp
test
or
or
lahf
push
push
mulb
stc
dec
icebp
stos
inc
sbb
mov
fwait
insl
fdivl
pop
pop
das
idivl
jle
jns
cmpl
pop
subb
fistpl
leave
cmpsl
xor
std
lret
and
mov
sbb
pop
repz
cmp
sbb
lahf
jl
unpckhps
andb
fs
mov
mov
popf
popf
inc
jo
xor
loop,pn
mov
fiadds
add
inc
addr16
xor
fdivr
mov
inc
lret
cmp
mov
mov
xchg
aaa
mov
xlat
pushf
and
push
in
stos
and
lahf
sbb
fisttpl
aas
inc
sub
cltd
shll
mov
cld
movsl
in
das
mov
ficoms
sub
mov
sbb
jne
cltd
pop
push
dec
fistl
push
in
inc
xchg
add
lret
xor
lods
add
cltd
gs
jmp
xchg
mov
inc
and
xchg
xor
mov
cmpsl
aaa
lcall
fld
sbbb
sub
xchg
inc
outsl
nop
xor
pop
or
dec
push
xstore-rng
cmpsl
add
jb
jns
lahf
cmp
in
movsb
stos
dec
in
repz
and
or
push
mov
into
mov
or
outsl
or
fiadds
aad
pop
adc
ljmp
sbb
xchg
movsl
xchg
jne
push
loope
aaa
cwtl
iret
jne
adc
dec
push
dec
icebp
sub
imul
adc
jo
in
xchg
ret
cmpsb
sub
pop
add
stos
mov
loopne
pop
xchg
xchg
das
or
sub
pop
push
adc
and
jae
pop
dec
xor
mov
dec
xor
push
mull
mov
test
xchg
push
ss
inc
jg
mov
mov
push
sbb
subb
test
lea
icebp
cmp
mov
dec
push
inc
lahf
sbb
xor
dec
sahf
iret
pushf
movsl
nop
aaa
and
insl
in
xor
xor
inc
add
je
aas
mov
testl
nop
xchg
sbb
add
aas
push
aas
mov
leave
iret
mov
push
das
adc
std
push
repz
dec
or
bound
dec
sahf
aam
sub
orl
in
sub
dec
test
dec
ficompl
sti
and
xor
cmp
sub
pop
ljmp
fistpll
xchg
push
xor
fwait
lods
jg
out
pushf
dec
adc
mov
inc
call
adc
dec
adc
lds
aas
push
push
sbb
or
scas
add
bound
push
je
push
pusha
dec
js
mov
lahf
arpl
xor
pushf
dec
jae
cmp
cmpl
add
mov
out
mov
dec
sbb
shrl
adc
and
stc
mov
fs
or
cltd
loope
aas
dec
divb
inc
adc
fcomps
jbe
cmp
push
in
inc
sbb
xchg
jle
scas
xchg
outsl
rorb
push
mov
aas
rcl
pop
fists
test
subl
sbb
test
aam
ss
bound
out
and
lods
adc
int
jbe
pop
and
fs
adc
sbb
push
mov
stc
mov
fxch
add
sbb
scas
xor
and
scas
pop
xor
and
lcall
and
or
sbb
daa
insl
rcll
jmp
xor
cmp
mov
push
add
rorb
into
jmp
sbb
xchg
dec
repz
push
sub
jle
sti
or
push
mov
push
mov
mov
xorb
jno
and
js
mov
push
sub
xchg
inc
out
popa
insl
inc
scas
cmp
shll
test
jl
jmp
add
dec
cmp
xchg
adc
inc
scas
das
lret
cmpsl
mov
push
fwait
repz
cmpsb
lea
or
subb
sub
cmpsl
mov
shlb
daa
enter
sarl
ret
popf
cltd
xor
aas
jbe
sub
sub
jbe
call
push
adc
xchg
subl
sub
arpl
std
nop
cld
add
adc
mov
sahf
nop
dec
pop
jmp
outsl
call
and
cltd
and
in
mov
adc
cmpb
les
out
cmp
fcompl
pop
add
sub
inc
dec
mov
arpl
xor
inc
mov
in
mov
and
in
add
stos
into
inc
jmp
aad
shl
in
pop
adc
mov
and
int3
testb
and
pop
in
mov
pop
iret
mov
jge
jecxz
and
ljmp
icebp
push
add
xchg
pop
jle
cmp
pusha
push
fistps
add
xchg
pop
jl
mov
cmp
sbb
mov
fiadds
ret
and
mov
in
push
rcll
jmp
ret
imul
push
xchg
and
cmp
dec
fidivrs
scas
lahf
pop
fs
jmp
add
mov
push
and
mov
xchg
jle
btl
mov
leave
ss
mov
mov
stos
aam
mov
rcrl
mov
in
out
inc
adc
xorl
adc
out
and
jecxz
push
jne
push
mov
add
mov
stos
pop
aad
sahf
lcall
xor
lahf
cmp
arpl
fs
xchg
popf
pop
shll
jne
xor
bound
lcall
movsl
iret
cmc
pop
iret
pop
pop
dec
inc
test
pop
mov
jnp
xorl
push
cmp
xchg
xchg
jns
sub
xor
push
mov
int3
cmp
jl
out
mov
mov
pop
or
pop
jno
add
test
jb
jmp
xchg
test
int3
dec
insl
sti
mov
jp
cmovo
push
lods
sbb
inc
pop
stos
mov
xchg
iret
stos
out
fdivr
popa
fs
imul
ds
add
imulb
add
adc
stc
or
lahf
rcll
test
imul
sbb
stos
add
or
hlt
mov
call
enter
mov
fdivs
lret
jae
hlt
pop
cmc
das
dec
jbe
ja
mov
call
cli
mov
dec
lods
adc
adc
mov
and
div
adcl
pusha
fisubs
mov
inc
add
popf
jae
inc
ss
xlat
mov
ja
imul
and
ret
leave
mov
cmp
fidivrs
xchg
cmpsl
inc
popf
or
int
cmp
repz
or
jo
ror
xlat
fcompl
imul
cmp
xchg
jp
imul
xchg
fwait
rcr
insl
lret
cmp
xchg
js
pop
out
push
cwtl
jmp
out
jecxz
add
sub
dec
dec
push
jp
xchg
lret
push
cltd
jg
push
mov
arpl
pushf
add
pop
sbb
lds
sub
lret
ja
xorl
jb
inc
loope
jmp
dec
mov
std
int
or
rclb
stc
fsts
xlat
shll
insl
loopne
clc
in
xor
adcl
in
movsl
aas
popf
dec
push
mov
aaa
xor
mov
js
in
je
or
int
mov
es
sub
andb
pop
lldt
dec
mull
roll
pop
in
cmp
pop
jne
fs
cmp
xor
sbb
iret
jg
xchg
popf
dec
repz
repnz
mov
xchg
add
cmpsl
outsl
dec
xor
shrl
sbb
mov
sbb
aas
inc
and
nop
adc
jge
add
or
xor
mov
in
lret
ja
movsl
add
movsb
mov
add
fsubl
jmp
insl
mov
jmp
lcall
out
dec
xor
dec
xchg
sub
and
aas
std
sub
mov
or
dec
adc
mov
cmp
out
call
into
xchg
or
jb
adcb
cmpsb
pop
repz
mov
dec
and
testl
popf
jle
imul
cmp
mov
pop
fs
xor
incb
inc
push
jae
jp
clc
pop
push
add
sub
jle
add
repz
add
xor
rcr
and
push
or
mov
jmp
fdiv
inc
into
lods
mov
mov
nop
or
lret
pushf
xchg
stos
and
loop
pushf
aad
add
imul
xchg
jnp
mov
adc
sarb
xchg
mov
fildll
dec
call
pop
icebp
jb
lcall
bound
stc
cmpsb
sub
sub
mov
xchg
call
inc
xchg
fwait
adc
cmp
mov
jbe
xor
dec
or
cs
aam
rclb
inc
imul
push
and
pop
mov
pop
data16
loop
into
lret
mov
xchg
hlt
jge
mov
jmp
stos
adc
xor
mov
pop
push
jbe
sub
and
mov
andl
sbb
mov
fucomi
xchg
and
icebp
clc
lds
lds
xchg
push
lcall
clc
out
xchg
cltd
stos
jo
cmp
insl
aad
mov
push
sub
xor
mov
lret
cwtl
mov
test
inc
adc
imul
cmp
je
inc
addr16
fs
sub
pop
fsubrs
data16
cld
jmp
push
mov
in
mov
xor
mov
push
movsl
rcl
mov
adc
adc
push
and
push
fwait
sahf
mov
cmpsl
xor
arpl
ljmp
pop
cmp
aad
sti
push
xchg
enter
jge
int3
push
add
test
lock
pop
fwait
fs
push
je
call
stos
or
push
cmp
ds
lock
nop
test
mov
rcrb
xchg
ret
iret
ljmp
loope
dec
fs
iret
out
push
sub
fldl
jne
xchg
testb
mov
mov
sbb
push
push
jb
imul
cmpsb
adc
inc
lahf
jno
fidivs
adc
lds
cli
into
jnp
mov
imulb
dec
xchg
ja
je
packssdw
cwtl
jmp
adc
mov
lahf
test
mov
rol
or
sub
orb
pop
dec
shlb
push
call
inc
ret
cld
or
mov
inc
movsb
jg
fcmovnbe
dec
xchg
inc
dec
xchg
lods
cmpsb
add
and
dec
push
clc
xchg
xchg
ret
xchg
mov
jl
sbb
jg
loop
test
int
jp
pop
cmp
cmp
jns
icebp
rorb
xor
push
inc
pop
and
jbe
std
aas
add
sub
fstpt
mov
inc
outsb
popf
ret
mov
jno
lea
daa
dec
cld
mov
int3
xchg
std
repz
dec
fcompl
lods
jae
fnstsw
and
scas
inc
push
mov
cmp
sar
pop
and
cmp
fadds
into
int
cli
dec
rolb
aam
push
ljmp
fidivrl
sub
cwtl
mov
dec
sub
sbb
lods
scas
push
fcoms
mov
sub
je
push
aas
xlat
jnp
mov
jne
jns
cltd
fistpl
sbb
add
xlat
push
sarl
sbb
inc
stos
stos
jae
imul
jp
fwait
lcall
add
inc
or
int3
nop
mov
ds
sub
test
into
pop
sbb
mov
xchg
pop
xor
out
into
fsubrs
xchg
je
adc
mov
stos
mov
mov
sbb
rcll
xor
hlt
inc
mov
add
or
dec
xor
arpl
and
mov
ljmp
xchg
in
lahf
push
jnp
nop
or
push
repz
in
xchg
loope
data16
ja
jmp
cmpsl
mov
inc
dec
cmp
aas
xor
dec
add
lcall
ja
insl
lods
imul
or
shlb
in
or
nop
mov
mov
mov
and
pop
add
mov
ret
outsl
xchg
stos
int3
xchg
or
push
mov
sbb
ficoms
ja
sbb
push
stc
jp
out
daa
outsl
jne
or
in
mov
mov
pushf
cmp
mov
scas
xchg
mov
lret
add
mov
outsl
leave
mov
iret
inc
push
xchg
sub
and
loopne
mov
pop
mov
push
fxch
cmp
jg
mov
jecxz
adcb
jae
mov
xor
sbb
dec
lcall
sbb
fdivs
mov
idivb
repnz
xchg
ljmp
imul
jg
pop
pop
pop
lret
cmp
cmp
inc
lahf
inc
mov
outsl
popa
adc
cs
adc
mov
negl
cmpsl
lret
xchg
pusha
shlb
xchg
lret
mov
andb
pop
jge
cmc
sarl
pusha
lahf
hlt
out
mull
push
and
or
call
inc
icebp
and
push
or
jle
push
pop
rcl
xchg
scas
mov
insb
out
inc
repz
mov
fiaddl
cltd
test
bnd
rcrb
sbb
pop
loop
mov
sbb
fwait
repz
into
daa
das
sbb
lea
adc
popf
cmpsl
sbb
mov
adc
pop
cmp
movsb
call
ljmp
pop
sbb
lods
mov
sahf
mov
sti
dec
es
repz
int3
xor
loopne
mov
in
imul
xchg
fsubrl
repnz
in
loop
ficoms
cld
adc
inc
pop
jp
inc
push
xchg
jne
inc
add
mov
ror
pusha
cld
pop
lods
push
movsb
inc
in
inc
xor
mov
mov
cmp
js
mov
lea
cltd
adcb
push
mov
add
je
shrb
jne
and
pop
xchg
rcr
lods
adc
lcall
ja
jl
fidivrl
jbe
push
xor
hlt
xchg
stos
sub
rcll
mov
sbb
dec
sub
in
lods
shrb
push
mov
push
adc
imul
mov
sub
insb
mov
cmpl
sub
xlat
lret
pop
dec
adc
lock
push
push
pusha
pop
add
ret
lock
call
add
xchg
adc
repz
jmp
push
hlt
mov
dec
jbe
pop
ja
dec
les
leave
jmp
and
popf
add
or
cmc
jns
mov
incb
cmp
out
adc
imul
dec
jmp
xchg
lahf
leave
sub
enter
adc
sub
push
js
inc
fldl
cmc
add
cmp
xchg
ret
sbb
loope
xchg
or
lret
fistps
test
mov
mov
paddd
pop
inc
aam
jnp
in
lcall
add
adc
test
push
and
mov
rcrl
sub
shll
mov
mov
add
or
pop
add
hlt
push
inc
inc
cmp
dec
fstpl
sub
push
into
call
lods
loope
gs
mov
nopl
jo
inc
aam
out
sar
or
mov
mov
sarb
mov
add
mov
dec
cmp
cmp
fcoml
inc
fiadds
inc
test
gs
cmp
cmp
pushf
adc
dec
daa
mov
xchg
das
ret
ljmp
mov
jae
mov
les
inc
inc
out
adc
jmp
add
sbb
sbb
mov
inc
movsb
mov
mov
cltd
sbbb
sbb
imul
mov
testl
fldenv
jp
outsl
loopne
icebp
mov
adc
pop
mov
fldcw
call
outsb
in
sub
fldenv
fcmovb
aaa
ret
ret
das
add
mov
popf
scas
minps
sahf
xor
pop
mov
jl
rcr
dec
leave
fcoml
shll
scas
cmp
mov
cmpsl
imul
inc
dec
ret
inc
shlb
mov
mov
loopne
stos
mov
push
add
rolb
mulb
push
lock
iret
pop
jp
test
test
das
shlb
mov
lods
inc
xchg
and
push
and
lret
repnz
out
jno
mov
mov
mov
inc
xchg
adc
xchg
mov
sti
jl
stc
push
test
mov
addl
cmc
fwait
push
in
es
jp
popl
and
push
mov
das
lret
rcll
sbb
stos
push
jle
push
mov
cmp
dec
subb
cs
mov
pop
cmpsl
call
or
or
pop
jbe
mov
adc
jbe
cmc
mov
stc
rorb
xchg
scas
test
addl
lret
int3
jp
push
xchg
icebp
dec
inc
inc
out
xor
repnz
mov
pop
aaa
imul
mov
jbe
loope
and
idivl
dec
arpl
or
pop
notb
cs
test
mov
clc
add
sbb
jmp
xchg
std
mov
imull
cwtl
inc
push
mov
xchg
fistpll
jae
stc
loop
cmp
enter
push
ljmp
hlt
addr16
adc
dec
jae
inc
int
adc
lods
lea
sub
mov
and
repz
lret
pop
cmpsb
mulb
cs
lods
out
icebp
movsb
pop
mov
adc
fld
add
imul
out
jp
jecxz
dec
mov
mov
push
and
mov
or
jae
mov
cmp
sbb
xor
adc
test
lcall
jne
add
ljmp
dec
lock
lds
psllq
sahf
xorl
arpl
xor
iret
cmp
pop
pop
push
and
add
leave
adc
xor
xchg
cmc
mov
pop
xlat
loop
pop
lret
lret
out
mov
mov
testl
xor
add
ret
fisubrl
popa
adc
in
ficoms
flds
subb
adcl
lods
sbb
cmp
jnp
and
mov
shrb
lret
or
mov
mov
mov
nop
add
enter
out
xor
adcl
lret
push
icebp
cld
or
in
adc
adc
mov
fildll
std
pop
aaa
sbb
or
inc
and
adc
pop
sti
jb
rcrb
stos
adc
mov
adc
jne
cltd
sbb
mov
imull
and
aas
sbbb
repz
gs
jle
out
ja
mov
push
popa
pushf
into
icebp
adc
mov
loope
mov
cmp
push
out
add
mov
jnp
lods
ror
jle
int3
lahf
jo
cmpl
pushf
ret
and
pop
addb
mov
jmp
pushf
stc
mov
jge
sub
sbb
loope
jmp
jp
mov
insb
mov
call
or
xor
xor
or
aam
and
pop
out
pop
push
call
out
cmp
clc
pop
xor
lods
xorb
adc
push
scas
int
jns
push
mov
pop
jp
orl
repnz
rolb
xchg
adcl
insl
insb
mov
xchg
and
cmp
out
repnz
bound
mov
aas
fwait
dec
cmpsb
xor
mov
mov
loope
xor
lea
mov
movsl
cs
or
imul
pop
in
jbe
adc
mov
xchg
sub
ljmp
loope
leave
es
pop
dec
push
sub
xchg
push
push
mov
push
push
lods
pop
and
dec
push
rcrl
adc
subl
inc
mov
aam
lds
ss
clc
cwtl
push
test
gs
mov
adc
xor
inc
push
leave
in
int3
xlat
call
dec
inc
mov
jbe
cmp
test
jle
mov
inc
adc
mov
ds
add
pop
scas
cmp
jnp
and
int3
and
cmp
adc
leave
mov
xchg
xchg
or
les
enter
in
inc
pushf
jg
sub
lcall
add
mov
jnp
jg
mov
adc
imul
mov
rolb
pop
nop
dec
cmp
movsl
outsl
outsl
sub
mov
iret
inc
mov
es
xor
mov
loopne
aaa
pop
rcll
jecxz
sub
out
into
push
add
arpl
addr16
mov
xor
cwtl
dec
mov
pop
jo
cmpsb
mov
les
dec
mov
push
arpl
pop
test
mov
sub
jnp
cmp
push
xor
lret
pop
lock
mov
jnp
mov
es
into
loopne
movsb
mov
mov
jecxz
push
movsl
movsb
mov
outsb
cwtl
out
xor
jo
aam
int
call
jns
push
hlt
jp
in
das
xchg
nop
shlw
jle
scas
mov
int3
jae
std
adc
ret
push
add
mov
mov
in
mov
inc
clc
mov
xor
push
jge
dec
sti
lret
popa
adc
add
cmp
add
xor
jno
adc
shlb
dec
pop
arpl
pop
test
sbb
push
pushf
loop
pushf
sbb
test
movsl
fimull
jae
nop
dec
push
mov
sbb
dec
aas
or
push
in
add
dec
xor
mov
xor
push
xchg
arpl
lcall
mov
pop
push
shl
xor
cltd
inc
xchg
push
shrb
loope
pushf
loop
ljmp
repz
push
or
mov
adc
aas
mov
and
inc
mov
lds
out
mov
xchg
sub
arpl
cmp
ljmp
out
je
lods
and
mov
dec
xor
gs
andb
inc
std
bound
mov
int3
xchg
adc
xor
loopne
sbb
sub
and
adc
mov
js
in
cld
jne
cmp
lods
outsl
jg
test
add
inc
fwait
sub
pop
sub
cli
sub
and
xor
mov
sbb
add
mov
arpl
mov
sbb
mov
and
adc
pop
lds
mov
adc
add
popa
jbe
xor
inc
and
mov
ja
cmpsl
sub
push
js
pop
mov
sahf
pop
ret
mov
cmp
push
pop
jno
xchg
push
ja
stos
and
lahf
sub
out
gs
cmpsl
enter
pop
mov
push
js
out
pop
xchg
or
inc
and
push
mov
test
lret
jmp
in
add
xchg
shr
repnz
sahf
rorb
pop
jp
call
add
mov
ss
popf
push
sbb
adc
adc
inc
push
bound
xorb
rclb
out
add
mov
jbe
movsl
mov
sbb
lahf
sub
mov
ds
push
sub
cmp
sub
rorb
push
fbld
push
subb
jl
popa
test
fdivrp
nop
lea
sub
test
scas
cwtl
int3
int3
push
mov
cli
and
ret
jmp
outsb
push
ljmp
testb
adc
jmp
push
scas
push
ljmp
fbld
aad
imull
jo
loop
cmp
lret
popf
out
sbbb
and
nop
mov
in
jmp
mov
rclb
mov
imul
mov
dec
sbb
and
xchg
dec
push
outsl
clc
ret
mov
jg
push
mov
cmp
in
push
push
dec
pushf
xchg
orb
cltd
int3
dec
aaa
dec
aam
sub
arpl
xor
shll
jne
jns
addl
inc
xor
out
ret
into
cmpsb
pop
mov
or
push
push
rolb
insb
cmp
pusha
pop
fstpl
add
and
cmp
call
imul
std
popa
mov
nop
fld
fwait
popf
icebp
in
insl
pop
shrd
in
push
scas
sahf
fsubrl
xor
lret
fs
idivl
ficompl
cmp
call
dec
icebp
test
sub
ljmp
mov
cmpsl
add
stc
adc
xor
sarb
popf
xchg
jns
cmc
mov
fcoml
je
movsb
xor
xor
jp
dec
popf
lds
data16
cmpxchg
adc
mov
ret
mov
or
test
and
clc
roll
dec
test
imul
jp
xchg
add
adc
ds
cmp
aas
scas
mov
mov
shrl
adc
adc
push
bound
push
dec
sahf
jnp
cmp
je
or
ror
test
ret
hlt
xlat
mov
and
inc
addr16
push
jae
icebp
mul
rol
mov
imul
out
mov
popa
lods
push
clc
sbb
or
jb
into
divl
das
adc
and
fs
pop
jmp
fwait
rcl
adc
cli
lcall
mov
mov
gs
dec
sbb
jle
mov
push
jnp
inc
mov
data16
repnz
push
and
cli
xchg
sbb
pusha
cltd
fildll
cmp
fcomps
stos
push
outsl
jb
faddl
enter
cmpsb
cmpsb
add
adc
fwait
sti
pop
ljmp
mov
test
popf
clc
orl
shll
sbb
adc
mov
cmc
pop
inc
mov
subb
rolb
outsb
aas
mov
add
mov
lds
outsl
fiaddl
outsl
cmp
fmuls
mov
cmc
mov
scas
xor
lret
xchg
mov
sbb
cmp
inc
inc
pop
in
adc
dec
shlb
gs
xchg
nop
fiadds
xor
jne
lea
lahf
test
sub
cmp
rcll
pop
pop
fistl
lcall
jl
pop
pop
dec
cmpsb
and
ds
dec
xchg
test
add
insb
es
stc
shld
pop
outsb
repz
call
popf
mov
sub
jnp
mov
xchg
loopne
mov
dec
xchg
scas
inc
inc
mov
xlat
ds
and
cmp
scas
adc
cvttps2pi
cmp
jb
add
xchg
add
xor
pop
cmp
das
cmp
or
xchg
sbb
lods
fdivrs
add
testb
aam
subl
insb
fmul
pushf
sub
push
sarl
and
xor
mov
sbb
sbb
xchg
mov
sbb
or
shlb
nop
push
xor
cmp
sti
sbb
mov
popa
dec
fnsave
inc
imul
cmp
cmpsl
pop
aad
clc
repnz
fbld
addb
jg
andb
out
mov
into
lea
lds
sub
sub
lds
xchg
add
adc
lret
std
pop
outsl
dec
xchg
mov
xor
adc
push
xchg
test
or
addl
push
js
fisubrl
mov
inc
bnd
aas
sub
stos
outsl
pop
mov
nop
inc
out
lret
and
add
iret
inc
and
and
dec
in
sti
adc
outsb
aam
sbb
stos
adc
fdivrl
lea
in
inc
jbe
fisubs
clc
mov
sahf
lret
test
lcall
mov
pop
test
sub
and
jne
in
xor
fdivs
pusha
or
jae
sbbl
jl
xor
push
orl
push
arpl
clc
call
mov
divl
pop
ss
fistps
jle
rcrl
xchg
fwait
dec
lock
add
xchg
fisubrl
int
mov
lods
lret
out
pop
ja
repz
jae
ss
sbb
icebp
ds
push
dec
sbb
lcall
bnd
add
test
popf
cmp
inc
loopne
inc
insl
dec
xor
sbb
lcall
cmp
pusha
add
arpl
js
out
movsl
sub
sbb
stc
xchg
les
mov
xor
stos
push
xchg
cmp
incl
adc
test
stos
mov
jge
ss
popa
es
pop
gs
xor
std
mov
iret
jp
les
ss
jnp
xchg
decl
sub
ret
push
lds
stos
sbb
aad
imul
repz
sub
imul
ja
fildl
fnstcw
ret
in
cmpl
cmp
insb
mov
or
inc
negl
clc
lds
xchg
mov
adc
adc
pop
sahf
mov
sub
mov
lret
cld
xor
dec
dec
icebp
adc
jo
or
das
testb
adc
mov
xchg
rol
test
xor
pop
mov
mov
in
adc
fsubrs
push
inc
inc
push
or
jb
mov
mov
loopne
jne
jg
jg
xorb
rep
int
jecxz
xor
out
lds
adc
pop
popf
add
int3
pandn
cli
mov
dec
shl
cmp
or
sbb
push
scas
jne
mov
xor
xchg
or
mov
icebp
ffreep
inc
ja
sub
insl
mov
and
bound
pop
jmp
insl
mov
jb
int3
std
sub
jno
lds
sub
pop
adc
inc
mov
xchg
or
mov
mov
ret
sbb
lret
movsb
xor
out
imul
push
lods
sbb
mov
jp
test
divl
push
sahf
insb
cmp
in
mov
cmc
insl
stc
push
inc
cmc
push
xchg
fucomi
shlb
daa
dec
sbb
mov
sbb
and
sub
fwait
cli
inc
mov
pop
cs
pop
call
or
dec
inc
lcall
loop
push
push
jg
stos
das
sub
mov
jbe
cmp
jmp
mov
nop
rcrl
pushf
fnstsw
xchg
in
mov
into
push
lret
outsb
cmp
inc
popa
inc
add
js
call
push
xchg
arpl
and
xchg
mov
xchg
fldlg2
test
sarb
xchg
push
jge
pop
pop
aad
fldz
sbb
cmc
sbb
pusha
faddp
icebp
mov
inc
andl
nop
sbb
xchg
sub
cmp
sub
pop
cmpsl
pop
dec
repnz
ja
sub
int3
inc
push
jg
je
les
xor
inc
das
jle
inc
loopne
int
push
popa
mov
xchg
rclb
mov
addr16
pop
lret
and
scas
js
or
lcall
rorb
or
xlat
addb
mov
mov
cmp
add
daa
push
cmp
or
dec
loop
adcb
stc
and
dec
pusha
out
stos
or
test
imulb
cmp
xchg
sub
sub
out
dec
inc
push
push
movsl
xchg
cltd
sub
out
mov
xor
push
cmp
adcb
add
push
jns
and
shlb
nop
xor
cmp
pushf
xor
loopne
jmp
fldl
add
aam
and
mov
stos
push
dec
or
dec
call
out
mov
mov
rol
orb
in
test
xchg
and
sarb
mov
stos
js
cmp
into
xor
movsl
mov
xchg
mov
sub
out
adc
aam
mov
push
loopne
mov
lods
mov
out
mov
and
pushf
movsl
int
rcrb
dec
dec
pop
push
mov
sbbl
insb
inc
xchg
sti
adc
lahf
clc
dec
mov
jecxz
and
sub
imul
mov
mov
mov
dec
int3
movsl
decb
jecxz
adc
lret
aad
sbb
mov
jb
xchg
cmp
lret
test
pop
mov
dec
sbb
das
adc
mov
movl
cli
lods
pop
push
and
lods
adc
push
jg
cwtl
insl
and
sub
fldenv
mov
xchg
xchg
xor
int3
and
jns
insl
push
and
push
dec
iret
fidivl
or
out
sbb
inc
jno
push
bound
rcll
xchg
test
movsb
outsb
in
insb
js
cmc
push
clc
sbb
in
mov
inc
scas
insb
int
loop
cld
jb
xor
inc
aad
jno
adc
fildl
jbe
mov
bound
jmp
jg
lcall
lea
dec
dec
jno
xchg
dec
scas
inc
mov
cli
jecxz
pusha
into
mov
sub
jno
inc
and
scas
iret
pop
sbb
dec
jecxz
popa
gs
mov
cmp
insb
mov
inc
cmpsl
adc
shll
out
hlt
hlt
dec
andl
pop
lea
lds
andl
push
mov
dec
adc
jl
push
std
jge
movsl
xlat
das
mov
daa
cmc
divl
cmp
jae
rol
mov
fsubrp
mov
push
mov
filds
repz
dec
push
or
ja
pop
xchg
cmp
pop
test
sbb
push
shlb
rcrl
dec
jmp
in
movsl
arpl
cmp
xchg
and
rorb
into
mull
das
pop
mov
mov
push
mov
xlat
mov
mov
or
jg
and
je
mov
and
inc
jne
jle
jb
sub
insl
out
sbb
lcall
lret
je
shll
aas
pop
or
adc
bound
rcr
jmp
lcall
pushf
aam
movsb
mov
adc
popf
shr
cmp
xchg
mov
lcall
shlb
pusha
pushf
mov
outsb
clc
dec
mov
xor
pop
xchg
mov
adc
lcall
xchg
aad
sar
fwait
pop
add
cmpsl
in
cld
push
jae
lods
fmull
adc
addr16
test
and
jae
mov
or
out
imul
dec
xchg
and
stos
sub
dec
mov
insb
loopne
jmp
cwtl
xchg
out
jge
add
int
pop
lret
jg
jg
adc
mov
adc
jae
inc
fcmovu
incb
mov
dec
lods
inc
movsb
mov
int
adc
lret
push
andl
rolb
ror
enter
fwait
mov
inc
loopne
test
cmpsl
push
mov
pop
arpl
fildl
and
sub
imul
push
dec
mov
imul
fcmovnu
dec
dec
pop
xor
sub
pop
dec
test
add
cld
fs
rcrl
jo
fstpl
mov
scas
xor
adc
aas
fidivs
pop
movsl
out
sti
push
push
repz
lock
jp
inc
and
loopne
add
lock
pusha
adc
pusha
jb
adc
cmp
fistpll
in
mov
cmp
call
sbb
call
lret
insl
stos
mov
xor
loop
insl
inc
mov
xor
pop
notb
xchg
inc
xor
push
push
lret
subl
insb
adc
shrl
adc
adc
aam
je
call
imul
dec
jne
dec
and
push
xchg
leave
dec
jl
insl
dec
inc
mov
outsb
imul
frndint
lods
sti
push
loope
mov
enter
outsl
push
jle
nop
mov
les
sti
enter
lret
call
inc
or
andl
pop
jp
mov
xchg
mov
shrb
xchg
cmp
dec
mov
inc
jae
mov
pusha
dec
dec
or
fisttpll
add
lcall
add
popf
int3
dec
add
xchg
cmp
cmpsb
in
popf
push
mov
lcall
movsb
frndint
push
jae
pop
repz
popa
jno
cmp
add
dec
or
les
and
sbb
xor
loop
divb
imul
xchg
sbb
xlat
inc
add
xor
pop
push
bound
xorb
shlb
out
in
add
in
sub
mov
mov
jne
mov
xchg
inc
lret
iret
inc
in
or
push
stos
xlat
rorl
jl
adc
sti
sub
mov
dec
data16
and
lcall
cld
lea
ljmp
pop
das
push
stos
fidivs
add
out
popl
mull
dec
add
fdivl
hlt
mov
inc
xchg
jbe
fmuls
push
imul
push
inc
dec
sub
cmpsl
data16
lcall
adc
sub
mov
sbb
and
das
lcall
das
jp
push
jnp
cmpsb
jno
sub
sarl
sbb
movsb
add
ja
das
negl
inc
bound
xchg
ljmp
mov
scas
popa
pop
mov
movsl
imul
scas
sbb
mov
mov
dec
ja
out
pusha
or
mov
sub
and
test
xchg
mul
les
cmp
mov
fcom
ljmp
shll
sbb
or
xor
out
outsl
scas
lock
jae
andb
xor
xor
lret
in
shll
in
mov
pop
dec
in
lock
sarl
lahf
xorl
repnz
dec
cmc
xchg
add
lea
int3
addr16
mov
jnp
loope
push
sahf
xchg
lock
shll
mov
daa
lock
inc
push
sbbb
fcompl
and
ds
dec
out
mov
cmp
ret
jmp
cmpsb
push
sbb
mov
and
or
stos
leave
daa
and
pop
or
and
xchg
insb
sahf
mov
mov
sub
popf
jns
fildll
pop
cmp
lret
lods
int
ffreep
lock
adc
jecxz
cmc
or
int
ja
inc
adc
mov
push
adcl
enter
leave
movsb
xor
scas
int3
call
bound
jae
je
xchg
ss
sbbl
mov
movsl
pop
movsl
push
lods
mov
push
pop
xchg
sti
add
aaa
mov
cmc
add
mov
sbb
nop
mov
dec
mov
or
jmp
mov
inc
test
mov
loop
clc
ret
pop
fldt
mov
ret
stos
hlt
dec
jecxz
mov
xor
adc
pushf
insb
sub
push
ljmp
repnz
pop
add
lods
jae,pn
jno
inc
mov
cmp
mov
push
add
in
iret
testb
rolb
jg
test
mov
mov
out
ret
iret
mov
adc
bound
and
push
dec
cld
xlat
out
mov
pop
aam
inc
and
sti
ljmp
push
cmp
mov
xchg
repnz
dec
nop
jo
cwtl
hlt
in
pop
jl
dec
inc
adc
fisubs
dec
lods
push
mov
aam
into
test
add
sub
adc
outsb
mov
push
and
mov
xchg
enter
mov
pusha
addr16
xchg
pop
lds
mov
adc
js
add
cmp
addr16
mov
stos
mov
and
inc
jmp
lock
ucomiss
mov
xchg
fisttpll
mov
rep
push
lahf
fwait
or
mov
sti
outsl
xchg
mov
pop
jge
mov
lcall
flds
adc
adc
mov
jbe
imul
xchg
pop
lahf
mull
dec
popf
fcmovbe
mov
jge
mov
mov
sbb
vmovaps
sbbl
fildll
shr
jp
push
xorb
push
push
xchg
cmp
lds
in
sub
fdivs
mov
mov
sub
fcmovnb
cmp
xchg
cmpb
arpl
mov
stc
pop
imul
adc
or
sbb
mov
int
push
aad
int
outsb
fistpll
testl
and
inc
jg
push
mov
das
xlat
in
jmp
repz
inc
dec
jecxz
frstor
xchg
jns
push
or
mov
cwtl
xchg
or
sub
aas
mov
push
cmp
mov
sbbb
add
aas
popa
repnz
push
arpl
sub
add
jg
cmpsl
movb
pop
ljmp
cld
inc
inc
xchg
cld
cmpsb
mov
sbb
dec
shlb
loopne
out
mov
mov
lods
inc
mov
lea
inc
sahf
sbb
cmpsl
jo
int
mov
lahf
inc
dec
vpmulhuw
fisubrl
fildl
mov
sub
xchg
mov
pop
test
adc
xor
sub
jl
call
daa
sbb
into
js
xor
add
sar
cmc
push
push
jnp
shrl
push
push
out
push
cmpsl
mov
lcall
push
les
jbe
mov
mov
xchg
in
xchg
and
dec
out
cmp
mov
faddl
lock
fidivrl
push
out
dec
add
int
inc
aas
pop
inc
js
shlb
xchg
dec
fcompl
lea
leave
mov
inc
test
sbb
sahf
aam
add
fs
or
add
adcb
inc
jmp
ja
pop
add
jmp
jl
imul
jbe
arpl
mov
mov
cmpsb
hlt
dec
xlat
xor
adc
dec
test
push
lret
lds
sbb
aad
test
mov
clc
push
jecxz
cmp
sub
push
add
cwtl
out
dec
xchg
mov
sti
rorb
rorb
ficoml
mov
daa
or
lret
insl
fwait
adc
dec
cmp
mov
imul
mov
ja
dec
mov
and
pop
xlat
lods
int3
mov
sbb
push
pop
jo
dec
les
dec
xchg
out
das
cmpsb
pop
sbb
mov
sbb
cmpsb
subl
sahf
shl
xchg
pusha
popf
jge
adc
out
movsl
sub
bound
adc
fildl
inc
cmp
lods
clc
out
movsb
shrl
jge
mov
stos
sbb
pop
cmc
lret
xchg
add
add
fildl
or
push
fs
outsl
lret
mov
lret
sub
stos
mov
xchg
mov
into
fwait
xchg
dec
mov
jle
and
test
lods
push
das
testl
scas
jecxz
jmp
hlt
dec
and
and
jne
push
push
sub
outsb
or
dec
inc
adcb
dec
arpl
pop
pop
aad
les
ret
shll
cmpl
rclb
pop
scas
adc
add
adcl
pushf
loope
cmp
adc
lods
xor
in
pop
sub
or
test
mov
mov
movsl
pop
cli
adc
mov
std
dec
stc
repz
cmpsb
push
xor
add
xchg
outsb
iret
and
in
int
sub
imul
jl
jb
sahf
mov
ret
into
push
push
xor
inc
lods
jbe
mov
and
popf
push
mov
mov
xchg
loop
push
mov
mov
arpl
loopne
cmpsl
dec
push
mov
movsl
faddp
imul
adc
fldcw
jle
in
aaa
lea
js
das
jns
cmc
jo
call
test
sub
cwtl
mov
jl
jle
inc
repz
pushf
add
jns
add
jge
out
xchg
repnz
test
inc
push
negb
push
fsubl
test
add
cld
out
xor
scas
out
adcb
mov
sub
fnsetpm(287
ret
xor
mov
in
add
not
nop
das
stos
js
fnsave
push
rcrb
xor
mov
sbb
pop
mov
mov
pop
hlt
aaa
sub
enter
jle
adc
ja
cmp
iret
adc
pushf
es
mov
mov
inc
adcb
in
cs
mov
xor
mov
jnp
out
jnp
adc
leave
lret
lahf
repnz
lcall
push
xor
push
fisubrl
aad
push
mov
xor
mov
movsb
cmc
push
loopne
dec
lea
xchg
mov
ja
repz
div
test
iret
cmp
mov
xlat
shlb
addr16
dec
inc
xchg
add
mov
or
enter
cld
iret
mov
jb
cwtl
or
sbb
repz
test
mov
mov
jmp
cwtl
lods
push
xor
jno
dec
cs
xchg
xor
repz
scas
mov
xor
loop
sub
js
sub
pop
cmc
push
out
jne
sbbl
pop
jp
jge
push
or
xor
pop
dec
iret
adc
scas
addr16
mov
clc
fcompl
loop
inc
mov
and
lods
int3
sti
jb
les
fildl
dec
ret
fldenv
fidivl
xchg
jbe
rolb
pushl
add
cmp
cmp
test
xor
pop
jle
mov
aam
lea
jl
dec
or
enter
lods
mov
jb
xchg
adc
outsb
inc
nop
insl
cmp
in
xor
pop
test
lock
imul
mov
test
xor
xor
shlb
pop
mov
push
loope
xchg
xchg
mov
fwait
leave
mov
cli
sub
fsubr
adcb
xchg
adc
outsl
mov
pop
adc
cmpsl
sahf
mull
and
mov
loopne
push
aaa
leave
and
ljmp
jg
mov
stos
push
popa
xor
push
hlt
jmp
and
andl
sbb
rorb
outsb
sub
jb
cwtl
mov
inc
popa
outsb
pop
js
xchg
adc
filds
mov
mov
test
fistl
xchg
aaa
mov
push
out
and
int3
arpl
dec
in
jbe
add
xchg
mov
arpl
fwait
mov
stos
imulb
mov
int
daa
adc
xor
mov
popf
xchg
ss
cmpl
lcall
push
inc
data16
push
mov
push
mov
mov
filds
and
inc
stos
movlps
sti
out
mov
push
dec
xor
bound
leave
outsb
sub
jne
mov
mov
xor
xchg
shlb
stos
mov
insl
repz
mov
xor
mov
cwtl
cmc
xchg
out
sub
dec
in
cmp
adc
xor
jb
decb
and
push
dec
push
jne
pop
mov
pop
or
cmp
or
in
adc
test
and
pop
cltd
jmp
mov
or
jl
pop
out
add
pop
inc
out
cwtl
add
inc
pushf
pop
jno
adc
push
std
jp
icebp
arpl
mov
loopne
or
push
pop
filds
mov
mov
ret
data16
mov
dec
mov
lds
mov
jl
leave
xor
sub
cwtl
push
and
lds
loop
in
out
inc
aas
fcmovb
push
das
dec
add
test
or
stos
fildll
bound
and
add
mov
and
scas
jbe
inc
push
sbb
arpl
jnp
inc
ret
xchg
dec
out
dec
out
inc
sbb
iret
enter
out
in
inc
fadd
mov
in
mov
dec
test
int3
cld
ss
push
sbb
es
mov
push
cmp
jl
adc
rcr
icebp
stc
inc
mov
hlt
test
jbe
stc
pop
jbe
jg
test
das
sub
dec
lcall
push
out
scas
pop
iret
inc
dec
jle
sbb
cmp
pop
pop
test
or
jne
jle
into
mov
stos
lock
iret
ret
stos
pop
ljmp
inc
jnp
ror
xchg
lahf
pcmpgtb
out
xor
js
jecxz
scas
aam
movsl
bound
es
pop
std
mov
je
add
cwtl
dec
call
sub
xor
inc
inc
add
fwait
mov
and
aam
repz
js
dec
jb
popf
mov
outsb
or
and
movsl
inc
je
jns
movd
imul
dec
inc
cmp
addr16
add
lds
xchg
or
dec
cli
sub
or
jns
out
sub
jle
push
and
pop
outsb
add
lret
dec
leave
iret
xor
add
adc
aad
adc
cmp
jmp
lods
lcall
pop
faddl
lods
push
push
loop
rclb
push
out
inc
loope
sbb
icebp
mov
add
and
hlt
and
cwtl
outsl
pusha
sbb
mov
mov
fnstcw
pop
push
idivb
jae
xchg
test
pop
xchg
cli
adc
jl
call
pop
xor
pop
cmc
ja
jp
ret
and
lret
mov
ljmp
scas
fmull
and
sbb
xchg
jmp
inc
out
mov
adc
fisubs
outsb
sub
stos
cli
mov
dec
mov
in
mov
repnz
jae
nop
xor
rcrl
or
pop
jnp
repz
in
mov
jp
retw
push
inc
push
pop
push
loop
push
or
mov
sbb
divb
jmp
dec
dec
dec
pop
divl
int
jbe
jne
ds
sub
movsb
push
ret
sub
shrl
push
int
cmp
jnp
out
aam
pop
sbb
sub
fmull
pop
scas
mov
xchg
pop
and
neg
test
mov
movsb
out
call
xchg
fwait
pop
mov
in
stc
or
ja
cmp
xchg
lcall
mov
les
mov
je
and
cs
push
xor
cmp
or
xchg
imul
loope
mov
arpl
out
jecxz
insb
imul
mov
sub
dec
mov
sbb
aam
leave
lods
push
mov
xchg
scas
adc
or
and
das
mov
scas
sar
sar
jp
rolb
jl
repnz
mov
mov
or
jl
sar
divl
or
push
insl
ret
mov
out
adc
sub
mov
sti
les
cltd
pop
or
bound
adcl
xchg
adc
lret
inc
fwait
ja
clc
sbb
or
cmp
dec
push
pop
xchg
mov
mov
add
adc
jno
insb
roll
rclb
aad
pop
xor
sbb
insl
fcomi
mov
arpl
pop
mov
push
push
xchg
aad
cmpsl
push
add
movsl
inc
sbb
mov
clc
xchg
mov
xchg
lock
sahf
bound
jnp
push
gs
into
or
xlat
arpl
adc
mov
pop
mov
pop
pop
addr16
xor
jl
or
dec
mov
shrl
test
dec
jecxz
jge
aas
pop
enter
cltd
pop
jnp
loope
push
jmp
xor
mov
add
bound
mov
xor
push
pushf
stc
pop
sub
sub
jge
bound
xchg
mov
sub
adc
jns
test
fildl
push
xorb
cmpsl
inc
push
or
lds
orl
add
movsl
testb
into
popf
mov
and
test
or
in
pushfw
mov
das
sub
test
std
sub
orb
or
sbb
adc
xchg
mov
mov
pop
and
sbb
jecxz
jl
dec
mov
outsb
mov
fwait
xor
in
mov
jne
out
stos
mov
push
scas
pop
loopne
arpl
jecxz
or
lahf
xor
inc
adc
in
xchg
ds
dec
ret
jmp
sbb
stc
mov
mov
repnz
sahf
push
ret
arpl
mov
sbb
jp
fidivrs
sahf
enter
dec
into
daa
jle
adc
mov
mov
lret
loope
push
mov
mov
xor
out
cwtl
sub
cmpsb
jle
push
in
hlt
inc
cld
out
dec
mov
test
add
shrl
mov
into
les
adc
neg
dec
pop
scas
pop
lcall
and
out
into
gs
add
jne
jns
pop
mov
lds
fsubs
clc
rcrl
ljmp
xchg
lods
data16
fcom
jb
xorl
insb
aas
push
inc
pop
sbb
fisttpl
pop
fiadds
repz
and
push
mov
cmc
std
mov
push
mov
cmpsl
and
lret
mov
and
jno
xchg
pop
out
leave
xchg
push
push
pusha
mov
test
jo
adc
gs
jp
xor
imul
ret
add
pop
mov
popa
xchg
jne
xor
les
push
subl
leave
jns
daa
cmpsl
xor
movb
or
lea
cmpsb
push
shlb
cmc
out
mov
xchg
pushf
xchg
hlt
add
pop
lret
mov
mov
push
mov
sub
inc
fldt
cmp
pop
push
mov
inc
jecxz
mov
roll
push
test
cmp
pushf
push
add
jns
repz
dec
or
xchg
popf
test
iret
push
je
cwtl
xor
add
add
movsb
xor
push
scas
in
jnp
dec
cltd
mov
in
ds
and
pop
subl
fdivrl
dec
adc
sub
mov
jne
jge
scas
enter
or
pop
ja
pop
out
or
movsl
aam
fstl
cmpsb
lahf
cmp
cmp
cmc
jno
jo
sub
mov
dec
enter
arpl
and
test
pop
repz
orb
shr
jo
mov
mov
sbb
insb
ret
jle
sbb
or
pop
mov
sbb
jle
dec
aaa
adc
inc
cltd
mov
aas
in
jb
mov
adc
xchg
stos
mov
mov
icebp
sub
push
aam
sbb
sub
pop
mov
scas
out
mov
ret
or
shrl
lret
or
adc
xor
jecxz
ss
mov
lods
roll
in
mov
push
js,pn
mov
test
fists
pop
cmp
xlat
dec
xchg
outsb
mov
bound
mov
adc
jno
or
les
repz
ret
in
fwait
repnz
addb
lods
notb
outsl
ja
in
cmp
test
adc
push
jp
mov
jbe
pushf
inc
xor
fwait
pop
stc
adcl
fiadds
push
cli
mov
mov
pop
inc
insb
push
std
insl
lock
daa
aaa
mov
dec
pop
lods
push
aad
pushf
adc
jecxz
sbb
xchg
lock
cmp
lock
push
push
sub
pop
sbb
jo
scas
pop
lahf
orb
fstps
xchg
fnsave
jmp
test
pop
cmp
mov
sub
js
in
cmp
sub
mov
jae
into
or
jecxz
fldt
std
or
inc
xor
sbb
repz
popl
roll
ret
in
ret
clc
out
repz
xor
or
push
cmp
test
mov
xlat
lds
outsb
mov
adc
clc
fimull
mov
nop
xor
ret
push
pop
or
mov
push
cmp
dec
stos
outsb
dec
mov
repnz
xor
aad
sub
int
ja
cs
xchg
dec
lock
je
inc
ss
jecxz
jnp
mov
jmp
push
pop
cmp
loop
xchg
xor
lods
cmpsb
jae
xchg
inc
in
outsb
mov
mov
out
stc
or
std
xorb
push
negb
dec
scas
inc
or
in
pop
movsl
sub
out
loopne
sub
sub
pop
mov
or
cmpsb
stc
pushf
pop
loope
inc
mov
test
sub
cmp
inc
push
aad
cltd
gs
lcall
cmpsb
adc
dec
outsb
dec
add
mov
sub
mov
mulb
and
jge
sub
cmp
sub
repnz
rcll
aaa
jg
outsl
scas
iret
jne
aaa
mov
add
in
jmp
outsb
jno
lods
insb
push
pushf
xchg
out
push
or
mov
push
loopne
mov
js
xor
inc
mov
ds
scas
jmp
sbb
lcall
rcll
sub
mov
lea
inc
add
fidivrl
sahf
dec
xlat
mov
adc
stos
popa
cltd
mov
popa
lret
jne
or
loopne
or
pop
sub
in
jae
mov
dec
add
sbb
scas
xchg
sbb
pop
mov
enter
cs
sub
int3
in
pop
scas
push
push
je
out
dec
loope
jbe
fwait
sub
and
outsb
mov
mov
and
popf
or
pop
sbb
mov
xchg
jle
loope
cmp
xchg
xlat
pop
cmp
in
add
sbb
and
fbstp
sbbl
xor
xchg
mov
rolb
and
sub
iret
xchg
and
pop
pop
ja
mov
sbb
cld
mov
adc
cli
jae
adc
inc
sahf
push
cli
das
add
ja
sub
and
sub
mov
adc
mov
mov
xor
testb
and
dec
sub
jae
repnz
stc
lock
lea
cmpsb
and
clc
cmp
out
mov
cli
cmc
fnstenv
sub
in
dec
push
imul
addr16
aad
shlb
jmp
filds
rcll
in
dec
pushf
cmp
push
cmp
mov
jle
mov
ret
popa
lcall
lods
xor
bound
mov
mov
inc
ficomps
dec
cmpsb
je
lahf
sub
int
bound
pop
iret
in
add
inc
push
and
in
dec
jmp
and
enter
loop
push
mov
xor
into
jne
in
mov
pop
lock
out
clc
inc
leave
mov
ret
gs
jno
insb
les
xor
fidivl
jle
add
in
adc
sbb
dec
rorb
aad
aas
outsl
xchg
dec
gs
insl
fistpl
xor
xchg
loopne
sahf
dec
in
mov
ljmp
sti
mov
xchg
in
inc
stos
cmp
mov
adc
push
stos
jp
cmp
inc
inc
jge
pop
adc
jo
loopne
jae
push
push
pop
aam
add
jecxz
leave
adc
std
je
pop
pushf
lock
out
cli
movsb
mov
les
mov
jbe
cmpsl
inc
mov
ret
imul
int
jl
fs
push
sbb
sar
mov
jle
push
or
shl
aaa
jb
cwtl
jne
faddp
nop
push
sbb
andl
stos
fcmovnu
xchg
cmp
fisubrl
cmp
cmp
sbb
mov
xchg
clc
xchg
mov
popa
push
push
out
stc
aad
mov
xchg
imul
and
pusha
pop
pop
add
lret
rol
in
cld
sti
mull
jb
faddl
cmpsb
jnp
popa
pop
shlb
inc
add
fisubrs
adc
inc
cltd
sub
fcompl
pop
imul
xchg
inc
and
mov
icebp
mov
inc
mov
stc
xor
repnz
or
jns
jae
fnstenv
fisubrl
sahf
inc
xchg
mov
lret
add
inc
mov
jns
mov
aas
sub
not
scas
stos
outsl
jnp,pt
mov
mov
push
fldl
dec
out
pushf
into
pop
pop
xchg
rcll
cmc
xorl
fucomip
cs
mov
sub
jbe
jns
and
pop
fistps
data16
clc
jmp
pop
xchg
inc
repz
fsubrp
leave
fcom
mov
sbb
add
mov
enter
int3
cli
pushf
insl
sub
mov
and
or
xchg
mov
dec
pop
or
incb
and
mov
orl
les
testb
xchg
stos
and
movb
mov
les
sub
fbstp
push
test
push
mov
iret
bound
jb
push
test
std
pop
sub
jne
sub
out
push
cmp
cmp
fimuls
in
pop
inc
mov
out
lods
sub
stc
and
lods
jbe
repnz
and
mov
lock
cmp
nop
ds
repz
lahf
mov
leave
pop
lret
xor
xor
and
xchg
dec
jecxz
ljmp
mov
cmc
dec
inc
imul
xlat
out
stos
mov
fs
lahf
adc
clc
fwait
xchg
jg
pop
ljmp
jp
decb
clc
mov
aam
push
fcompl
mov
jmp
xor
or
data16
aam
testb
lcall
sub
sarl
and
mov
repnz
or
scas
rorb
jl
nop
andb
jnp
mov
xor
pop
inc
femms
add
shll
cmp
fcmovu
dec
cs
xchg
xor
out
dec
scas
xchg
sub
popf
xlat
sbb
inc
testb
scas
mov
sub
or
xor
fidivs
testb
test
call
into
mov
ficoml
dec
mov
push
insl
sub
std
mov
pushf
aam
insb
out
jbe
shll
les
movsb
lahf
mov
insb
or
cmpps
push
fwait
rcrb
mov
pop
dec
sbb
cmp
cli
call
aam
stc
ds
mov
call
mov
mov
out
lret
and
push
stos
inc
fdivr
hlt
aam
mov
cld
xchg
popa
cmp
push
or
cmpsl
out
xor
xchg
repz
out
sbb
adc
pop
inc
fdivrl
cmc
xchg
out
adc
or
cltd
and
push
iret
mov
adc
loop
jno
dec
sub
and
jnp
and
cltd
pop
sbb
jns
imul
mov
jl
inc
cmc
lret
subl
push
int
aaa
cmp
mov
stos
mov
jecxz
add
les
and
dec
sarb
push
out
cwtl
shl
icebp
loope
pushl
je
pop
pop
scas
shlb
dec
scas
insb
pop
cmpsb
lcall
ss
loopne
inc
push
jge
mov
mov
adc
hlt
cmc
aad
dec
xor
cmp
sahf
or
sub
push
or
xchg
jae
cmc
mov
icebp
inc
mul
jge
sbb
add
jp
hlt
cmp
xor
cmp
pop
mov
dec
das
test
add
aaa
pop
push
mov
jnp
and
clc
mov
pop
inc
xchg
inc
fwait
adc
mov
pop
ljmp
mov
test
dec
movsb
xchg
out
jno
aam
daa
jo
lods
or
fs
mov
add
mov
ds
and
imul
loopne
dec
out
cwtl
push
mov
fcmovnb
nop
aad
jge
mov
jo
and
or
xor
in
fstps
movsl
mov
into
mov
pop
out
xchg
jl
pop
bound
bswap
push
mov
jae
hlt
sub
test
fisubs
jmp
or
inc
jl
add
out
insb
mov
xchg
xor
test
jecxz
jne
cmp
mov
cmpsb
insb
pop
or
jae
mov
or
int3
pop
cli
mov
xor
pop
data16
fs
pop
and
and
in
out
leave
xchg
into
jp
push
ja
jp
cmp
cs
or
push
test
push
pop
cwtl
cmp
xor
addr16
jnp
pop
adc
call
gs
enter
jl
add
adc
cltd
loopne
rorl
push
subl
mov
pop
or
jmp
mov
into
pop
or
sti
xor
test
cmp
lods
stos
mov
fbstp
mov
sub
fs
sti
add
testb
xor
fisubrs
and
sarb
xor
push
idiv
inc
imul
rcr
test
int
add
mov
xchg
cmp
cli
lret
jecxz
xchg
aam
mov
movsb
push
jg
outsb
in
jmp
mov
lea
ljmp
lods
and
and
mov
xchg
cmpsb
adc
jnp
popf
ljmp
mov
fwait
pop
movsl
lcall
mov
jecxz
mov
cld
popf
mov
xor
lahf
inc
mov
lods
jns
and
cmp
in
imul
fdivp
pop
mov
addr16
aas
dec
add
xchg
out
mov
les
insl
xchg
push
xor
and
hlt
xor
mov
filds
mov
loope
dec
icebp
jbe
fsubp
push
out
pusha
jp
lret
mov
call
xor
cld
cwtl
int
jno,pt
sbb
sbb
jns
pop
pusha
lahf
pop
pop
outsb
int3
cwtl
lds
mov
popa
dec
push
aam
add
idivb
mov
mov
gs
test
das
imul
fiaddl
inc
leave
dec
fst
pop
stos
lahf
je
push
sub
mov
ds
sbb
clc
cltd
into
xor
hlt
scas
ficomps
or
pop
aaa
std
aam
shl
xchg
imul
sbb
sub
cmp
cmpb
jmp
xor
pusha
sub
das
xlat
lahf
clc
pop
jne
outsl
adc
dec
popa
or
cmp
jecxz
or
stos
cmp
imul
enter
or
mov
lea
fs
mov
xor
sub
sub
mov
push
mov
ljmp
mov
sti
mov
jbe
adc
in
pop
pop
pusha
outsl
push
dec
xor
and
shl
add
das
repz
aad
imul
popf
out
sbb
mov
pop
or
icebp
pushl
loope
add
outsl
inc
ss
dec
aaa
icebp
and
imul
cmp
cmp
out
movsl
jmp
test
das
test
push
bound
cmc
pop
mov
xlat
mov
sbb
repnz
mov
or
pusha
fcompl
insl
mov
pop
ljmp
or
xchg
xchg
jae
loopne
mov
out
xor
sbb
or
lods
xchg
mov
movsb
dec
push
mov
sahf
inc
in
adcb
mov
and
out
mov
das
loopne
roll
pushf
sbb
stc
jb
icebp
ja
cmp
fcmovbe
pop
xchg
in
dec
add
mov
xor
inc
imul
mov
adc
or
adc
js
push
inc
arpl
jecxz
jno
test
mov
sub
std
push
dec
xchg
cmovge
lods
fwait
dec
lods
push
inc
ljmp
mov
cli
sbb
inc
fcomp
inc
sbb
je
fsubr
mov
jo
cmp
fildll
jnp
push
sub
sahf
out
push
les
dec
add
das
mov
test
in
cmc
popf
mov
mov
pop
xchg
dec
or
cmp
cmpsb
or
lahf
xor
gs
pop
in
into
or
adc
hlt
inc
or
pop
xor
pusha
push
jg
dec
cmc
inc
xchg
lret
ss
fidivrl
je
aad
mov
stos
cs
pop
push
leave
or
dec
xchg
lahf
sub
mov
sbb
call
jle
jnp
fidivrl
enter
jns
jo
inc
xor
lock
ret
in
ljmp
out
mov
addb
mov
lea
mov
lds
imul
jle
cmp
leave
std
cmp
ljmp
sti
mov
scas
mov
adc
lcall
int3
test
xchg
ret
repnz
push
cmp
mov
push
push
daa
cmpsb
jge
movsb
dec
mov
cwtl
push
ret
cmp
addr16
cmpl
push
xchg
sahf
xor
push
cmp
mov
sub
push
lock
xor
inc
lret
sub
mov
sub
cmpsb
lds
inc
adcb
stc
or
cli
dec
pop
pop
clc
fucomp
push
in
inc
fwait
inc
xchg
pop
call
xchg
mov
enter
sub
inc
subb
lea
dec
pop
xchg
sbb
scas
or
xor
out
movsl
in
dec
xchg
scas
enter
nop
hlt
into
dec
es
and
loopne
inc
adc
sub
nop
jne
ss
adc
das
mov
push
xchg
xlat
push
lret
xchg
pop
xor
mov
fsubrs
xor
push
mov
dec
pop
xchg
into
bound
pushf
add
push
and
sbb
test
orl
xor
pop
add
jmp
out
das
dec
out
stos
cmp
add
test
ffree
add
inc
loopne
pop
cmc
push
mov
jns
xchg
je
data16
pop
lcall
dec
mov
add
push
mov
mov
in
inc
sarl
in
mov
aad
push
or
pop
sub
cmp
daa
decl
icebp
pop
xchg
ja
jg
dec
mov
filds
mov
ret
ficoms
loopne
imul
pop
cmpsb
xor
adc
aas
mov
mov
push
inc
lret
lahf
push
cs
or
xor
js
jbe
cld
and
out
adc
addl
xlat
pusha
rolb
sub
xor
inc
xchg
or
int
and
cli
lea
jbe
cmc
pop
sbb
pop
mov
in
cmp
test
sub
pop
and
shll
dec
push
pop
out
shr
ja
sti
cmp
lds
pop
andb
sbb
adc
fmull
sub
mov
pop
mov
and
sub
in
scas
fsts
les
dec
and
xor
jb
aas
addl
xorl
xchg
jnp
mov
sete
fldz
notl
sbb
frstor
dec
and
mov
jecxz
add
mov
data16
and
or
inc
test
mov
inc
stos
push
xor
clc
inc
lret
arpl
mov
adc
lret
adc
add
inc
into
ljmp
popa
pop
cltd
leave
push
or
push
mov
call
inc
mov
dec
cmp
mov
adc
mov
dec
inc
pop
add
sub
ds
mov
je
lock
outsb
aas
xchg
jbe
repz
inc
std
mov
stos
push
std
xor
xchg
clc
sbb
or
mov
lds
roll
sbb
mov
xor
jg
addb
and
adc
sub
add
iret
pop
xor
popf
dec
leave
or
fisubrl
mov
fnstcw
jbe
into
mov
out
dec
int
cmp
xchg
clc
repz
addb
adc
cmp
pop
repnz
mov
in
mov
lea
mov
lock
or
pop
and
cmpsb
sub
mov
loope
inc
je
lods
xchg
jnp
jl
sbb
pop
adc
sbb
aaa
pusha
ret
icebp
outsl
in
cmp
fstpt
js
mov
dec
lahf
and
push
loopne
jmp
movsb
xlat
push
cli
leave
cmp
adc
clc
outsl
out
xor
dec
cld
xchg
sbb
dec
add
lret
jle
pop
inc
xor
ret
ffreep
fstpl
xchg
cmp
lret
push
mov
bound
and
xchg
les
in
aad
pushf
fnstcw
push
lcall
sub
adc
stos
dec
mov
movsl
mov
sub
xlat
push
sbbb
xchg
sbb
dec
jns
cltd
jmp
adc
loopne
fwait
dec
sbb
xchg
fistl
gs
arpl
sahf
mov
pusha
xchg
std
leave
gs
xchg
jne
ret
adc
xor
subl
mov
sub
enter
fistps
xor
insl
ljmp
xor
in
pop
jge
or
mov
cwtl
or
push
pop
rolb
add
imul
mov
pop
rcrb
or
out
pop
fldl
or
jnp
or
je
pop
mov
push
mov
xor
and
push
sbb
nop
push
and
mov
sbb
cmpsl
xchg
sti
add
mov
fnstenv
ss
push
out
fmuls
pop
leave
call
dec
cmp
mov
xchg
mov
mov
inc
dec
or
inc
or
daa
mov
sub
sbb
push
mov
or
and
popa
push
out
sub
roll
pop
lret
ds
in
cltd
pushf
adc
push
inc
xor
sub
sahf
imul
pop
cmp
and
cmpsl
aam
mov
int
pop
jae
cmp
cmp
push
mov
and
jmp
clc
pop
xchg
daa
test
test
xchg
and
movsb
rcrl
gs
jnp
mov
cs
jae
sbb
clc
fdivl
mov
sbb
rorb
inc
push
aas
andb
imul
fisttps
and
xorl
fmuls
aas
shlb
fisubrs
out
push
and
cmp
addl
sbb
shrb
jo
inc
cs
push
lahf
push
divl
and
sub
movsb
xchg
and
fwait
jne
cmpsl
in
xor
int
ret
out
int
movsl
push
jle
rcrb
dec
adc
xchg
ja
mov
cmc
test
mov
xchg
imul
jp
aad
cmpsb
add
adc
enter
cwtl
push
xchg
lahf
add
mov
bound
pop
fsubs
sbb
mov
push
cmp
adc
xor
fistps
add
xor
outsb
jb
fs
ret
xchg
fs
jge
fistpll
cmp
mov
xchg
andb
add
push
dec
cmpsl
mov
movsl
adc
movsb
repnz
imul
int3
push
mov
or
xchg
lock
clc
xchg
orb
inc
out
mov
mov
ds
shrb
repz
in
xlat
test
push
xchg
sbb
daa
ret
dec
xchg
movsw
sbb
and
sbb
pop
mov
mov
pop
mov
xor
or
outsb
es
stos
inc
scas
inc
cmpl
bnd
sub
movb
incl
lcall
mov
fisubrl
dec
in
xchg
inc
lret
loopne
mov
mov
cld
stos
pop
add
sahf
dec
push
cmp
add
jns
flds
xchg
mov
mov
into
mov
nop
xor
iret
mov
pop
arpl
aas
js
aaa
in
cs
sar
bound
pop
adc
mov
nop
insb
mov
xchg
ret
fnclex
inc
mov
sbb
push
and
hlt
mov
and
and
mov
xor
dec
sub
push
testb
out
xor
cld
mov
mov
mov
hlt
mov
cmpsb
mov
push
jnp
mov
out
popf
loope
pop
pusha
cmp
ret
push
gs
jo
xor
and
xor
jbe
or
aaa
jo
mov
insl
and
in
jle
loope
jp
popf
jmp
and
out
not
scas
mov
insl
mov
fstpl
ret
cltd
adc
iret
hlt
leave
mov
push
inc
push
sarl
fldcw
inc
int
adc
sub
mov
in
xor
jecxz
ftst
jne
sahf
mov
pop
scas
or
sbb
fidivrl
or
lret
xchg
aam
rolb
ja
push
ljmp
dec
dec
mov
test
mov
adc
outsb
loopne
xlat
inc
cmp
mov
insb
inc
lcall
push
mull
adc
push
fsub
adc
mov
fcoms
fwait
lds
out
jecxz
subl
test
or
aam
jae
push
test
test
dec
pop
sub
leave
cld
mov
divl
and
pop
imul
shrl
test
xlat
jge
fstpl
adc
lret
jg
sub
add
lret
pushf
int
push
int3
mov
sarb
aam
fmull
out
jl
jne
hlt
mov
in
or
scas
cmp
xchg
fs
add
int
mov
add
add
stos
cld
jb
xchg
loop
cld
stc
lock
mov
add
push
lcall
lahf
pop
leave
aas
add
jmp
push
pop
add
orb
sub
ret
std
fsubrp
dec
sub
and
jecxz
mov
adc
icebp
jle
cltd
adc
inc
dec
fs
lret
pusha
fwait
mov
adc
mov
rorl
pop
in
fnstcw
jns
jnp
jl
adc
in
jg
outsb
sub
inc
pushf
in
imul
das
adcb
mov
ds
cmpsl
dec
lock
push
icebp
adc
lock
xchg
xor
sub
fisttps
jle
push
nop
mov
and
xor
mov
push
cwtl
shl
pop
and
data16
insb
and
outsb
mov
and
adc
cmpsb
adc
xchg
imul
push
sub
jbe
cmpb
and
adc
imul
cltd
or
std
out
cmp
cld
push
sub
jle
adc
mov
cmp
mov
dec
subb
ja
xchg
cmp
clc
loopne
cmc
xlat
jge
imul
cmpsb
mov
ds
or
sahf
negl
and
sbb
in
push
shr
scas
mov
bound
pusha
aaa
cmpsb
ja
test
mulb
add
cld
mov
mov
sbb
aaa
clc
call
jl
call
sbb
ret
sahf
pop
xchg
cmpl
jle
outsb
jae
shll
push
ds
fwait
out
mov
sub
inc
outsl
push
add
stos
xchg
insb
inc
mov
inc
lea
add
mov
mov
inc
aaa
jnp
ret
cmp
cltd
jmp
xchg
rcrl
lret
mov
jge
xchg
mov
xor
mov
lds
add
sub
sub
push
rcrb
jg
dec
inc
mov
nop
aaa
xor
cmp
xchg
jl
mov
jne
xchg
jo
adc
in
sub
or
ret
js
ljmp
lcall
mov
push
jb
sbb
fdivr
push
mov
push
jg
adc
xchg
cli
mov
cmp
shlb
imul
dec
icebp
stos
aam
jle
arpl
jmp
sahf
sbbl
int
lea
jbe
movsl
jp
lret
xchg
into
xchg
mov
jno
pop
hlt
pop
leave
push
pop
or
aas
out
mov
xchg
xchg
jnp
pop
push
insb
cld
test
aam
mov
xchg
xchg
mov
pop
sti
das
cmpsb
inc
or
adc
fisubs
repnz
mov
repnz
movsl
add
aas
ficompl
push
imul
stos
push
or
mov
cmpsb
in
sub
daa
pop
jle
ss
loope
add
xchg
ja
mov
sub
push
pop
lods
mov
dec
in
int3
mov
cmc
push
xchg
mov
imul
sub
imul
stos
jb
cltd
decb
lret
nop
std
pop
add
xor
aam
push
mov
ffreep
and
jmp
into
xchg
scas
cmpsb
pop
mov
sti
mov
out
fmull
sbb
imul
pop
fwait
ret
ljmp
into
sub
notb
les
sub
int
out
pop
push
std
sbb
popa
addr16
sbb
stc
jnp
call
sbb
cmp
cmc
iret
rcl
push
icebp
testb
sub
xchg
pusha
test
jno
sarl
daa
test
add
andl
cld
add
adc
in
mov
push
pop
mov
ret
inc
stos
fldl
lods
roll
sbb
dec
stc
inc
sub
ds
mov
push
lret
and
jmp
jns
test
loopne
cmp
lods
pop
mov
clc
or
loope
xlat
xor
cmp
xor
push
cmpsl
push
sub
and
rolb
mov
or
loop
cmp
mov
std
cmp
mov
fwait
xor
les
js
test
out
lcall
xor
scas
mov
sub
pop
jno
in
das
sbb
aad
cltd
push
rclb
push
ret
fwait
sbb
push
loop
push
and
inc
fcomps
call
add
sbb
pop
ret
xor
or
mov
out
fs
or
dec
jp
in
sub
mov
add
out
mov
jp
inc
ljmp
cmp
pop
lahf
lcall
addr16
lods
xlat
adc
movsb
add
cmp
cmp
xor
mov
xlat
push
push
jecxz
imul
loop
push
jb
out
scas
bound
ljmp
dec
aas
repnz
sub
add
add
jnp
imul
jnp
lret
dec
lahf
insl
mov
jecxz
mov
or
jl
lcall
cli
insl
mov
out
fwait
loop
lcall
aam
fldenv
fwait
inc
push
repz
mov
in
mov
push
mov
outsb
inc
dec
or
popa
push
push
inc
repnz
mov
adc
mov
mov
mov
ja
pop
lods
mov
cmp
mov
scas
inc
xor
stc
add
xor
and
lock
jns
mov
mov
nop
std
rcll
xchg
mov
outsl
jl
push
rcl
sub
jp
adc
fucom
lock
fwait
jnp
lock
pop
add
jl
adc
inc
push
mov
mov
aad
fcompl
fcoml
rolb
call
cmp
lods
or
jle
add
std
faddl
mov
xor
leave
sub
inc
jnp
inc
jmp
or
push
mov
shl
and
ljmp
inc
imull
pushf
repz
mov
ret
pop
es
push
inc
nop
js
xchg
or
cld
xor
jo
movsl
push
fistpll
xchg
sbbb
imul
and
pop
hlt
and
mov
testl
mov
dec
xor
aad
sbb
int
xor
lcall
xor
jne
andl
mov
call
xlat
and
cmpl
loop
hlt
jle
ss
adc
jns
push
aad
jne
loop
or
mov
or
out
pop
icebp
rorb
stc
sub
sub
xchg
ljmp
push
adc
rorl
push
loop
fwait
xor
sub
jmp
mov
ja
out
add
adc
mov
dec
push
dec
sub
in
pop
cmp
pop
std
cwtl
sahf
adc
jno
mov
sub
mov
mov
enter
fwait
xchg
shlb
and
jae
cmpsl
test
jmp
xchg
icebp
sbb
jp
and
popa
cmp
dec
test
repnz
or
std
jle
arpl
aaa
in
push
mov
dec
mov
inc
scas
push
sti
mov
fsubs
xchg
mov
clc
clc
mov
hlt
mov
lahf
das
push
outsb
hlt
es
mov
js
or
jge
pusha
bound
rcll
bswap
insb
inc
jge
int
sbb
movsb
inc
push
adc
das
mov
mov
aad
jns
push
cmp
jae
outsb
clc
jecxz
push
mov
es
and
mov
xor
lock
fbld
sarb
sbb
insl
pop
pop
movsl
and
xlat
cmp
lret
adcl
xchg
fnstcw
nop
je
loope
stos
and
or
add
aas
mov
call
or
push
iret
and
les
xchg
into
xchg
add
add
or
xor
mov
sub
sub
push
sahf
inc
jnp
mov
movsb
xchg
lahf
ss
xor
flds
lds
and
loope
cbtw
lret
pop
leave
mov
inc
jmp
and
cli
lds
cltd
mov
in
repnz
ret
jp
rolb
mov
mov
cmp
int3
mov
pop
sahf
rcrl
sub
outsl
and
add
rcr
adcb
mov
jmp
lahf
and
mov
dec
divl
pop
jge
outsl
and
or
inc
int
lret
mov
orl
scas
mov
dec
xchg
pop
outsl
imul
int
jne
cmp
push
sub
sub
jnp
or
dec
lods
cld
push
and
sti
test
ficomps
inc
cmpl
inc
or
mov
push
insb
mov
fbld
in
sub
lods
out
fmull
aam
cmc
adc
push
sbb
mov
xlat
dec
jno
call
push
std
pop
or
repz
mov
add
jge
sbb
fisttpll
add
dec
jbe
mov
jno
fs
nop
repz
or
aas
test
es
cltd
mov
xchg
push
xlat
insl
lret
movl
into
fs
mov
shl
cmc
push
inc
sbb
fistpl
iret
dec
ss
xor
mov
pop
sbb
jbe
imul
lods
pushf
repz
into
faddp
rorb
iret
popa
repz
stos
jns
lret
data16
ja
xchg
push
lock
ficomps
xlat
jmp
adc
fldt
test
push
and
int
lods
stos
mov
and
or
xchg
xor
aaa
pop
jno
pop
or
arpl
xchg
push
fwait
es
inc
xchg
stc
sub
lret
push
xchg
mov
movsb
nop
jecxz
rcrb
xchg
ds
adc
into
mov
or
cmp
aas
xchg
or
movsb
int
sub
push
cmp
popf
cltd
orl
test
mov
push
ja
mov
loop
test
or
aam
jecxz
adc
movb
rcr
cwtl
sbb
and
adc
test
cli
cmp
mov
lahf
nopl
jge
adcl
pushf
push
or
das
add
or
into
or
xor
lret
inc
sub
fcomip
jmp
jge
mov
in
jl
push
xchg
add
xor
addr16
mov
mov
repnz
xor
nop
outsl
call
enter
or
jge
dec
popa
addl
sbb
cmpsl
pop
aam
in
xorl
cmp
insb
in
and
add
jmp
push
das
xlat
jne
mov
iret
push
gs
cld
jl
lcall
or
adc
xchg
dec
push
sarb
in
ret
xchg
sbb
xchg
repnz
int3
addr16
jp
sbb
std
inc
or
outsl
jne
add
daa
cli
mov
test
xchg
push
icebp
out
mov
cmp
pushf
xor
test
mov
pushf
xor
lahf
adc
fisttpll
popa
jb
enter
loope
daa
push
jg
jge
int3
adc
add
inc
cmp
sbb
pop
divb
cmp
les
sarb
xchg
lahf
loopne
lock
nop
orb
das
or
stos
mov
movsb
test
out
or
js
or
pop
insl
mov
sbb
sti
aad
dec
popa
stos
lea
jge
sbb
inc
sarl
aad
lret
xorl
mov
outsl
pop
mov
loop
int
xchg
inc
or
push
cmp
rorl
fnsave
decb
mov
mov
jae
and
cmp
lds
xor
lock
movsb
and
movsb
sub
sbb
push
decb
cmp
shlb
mov
sub
stc
xchg
outsb
mov
cmp
or
idivb
imull
mov
enter
xlat
mov
jbe
adc
adc
xor
dec
sbb
cmp
mov
inc
in
in
jge
dec
lret
xor
rcr
addr16
or
mov
pop
pop
mov
mov
jle
or
push
mov
xchg
call
movsl
jae
xchg
cli
jp
or
pop
sub
lret
mov
mov
icebp
aas
xchg
addr16
cmp
or
or
push
or
and
mov
push
mov
scas
test
pushf
mov
jl
mov
mov
ret
mov
in
pop
notb
xchg
push
mov
shlb
sub
imul
lods
sbb
fcmovnu
in
shrl
lcall
adc
xchg
sub
cmp
orb
daa
fsubr
repz
lcall
lret
ss
shrl
popa
or
mov
out
subl
pop
inc
mov
push
jp
jmp
add
aas
cmp
jne
pop
mov
cmp
cmp
pop
pop
adc
sbb
xchg
divl
in
inc
faddl
sub
mov
cmp
in
arpl
popf
mov
xchg
or
sbb
daa
sub
and
add
inc
daa
lahf
xchg
adc
dec
lcall
subb
jle,pn
inc
dec
jmp
arpl
or
xor
cmp
jno
push
rolb
test
jle
mov
hlt
cmc
jle
push
and
xchg
in
xor
ja
fisttps
sbb
mov
push
adc
cmp
inc
dec
mov
movsl
gs
mov
ds
cld
es
jmp
xchg
sarb
lods
or
pop
mov
stc
ret
adc
ja
jmp
sub
xor
dec
in
imul
imul
lret
fsub
bnd
clc
push
ljmp
out
pop
sub
pop
ss
mov
sub
cmp
push
daa
add
movsb
push
push
dec
cmp
dec
in
cmc
or
xor
adc
clc
sarb
push
out
mov
shrb
dec
arpl
sub
or
loopne
lea
sub
pushf
jmp
fs
xchg
test
ss
stos
mov
lods
mov
test
lahf
cmp
lds
rolb
inc
outsl
xchg
in
add
xchg
outsl
or
mov
pusha
sub
xor
loope
jae
nop
sti
dec
jp
add
cmp
lahf
fistpl
adc
clc
push
fsubrs
imul
push
lcall
scas
push
pop
sahf
jb
xchg
lahf
mov
int3
add
into
sbb
fistpl
mov
add
or
loopne
ljmp
and
repz
mov
xchg
movsl
sahf
test
lods
mov
aaa
adc
jl
fisttpl
push
push
out
add
or
psrad
dec
js
jns
sbb
add
test
aas
in
out
sbb
jb
adc
jae
cmc
or
fmull
cmc
pop
loop
inc
dec
xor
in
pop
xchg
mov
stc
idivl
fs
and
int
dec
xchg
xchg
and
loop
shll
pop
das
mov
pop
xchg
sub
jmp
rorb
lcall
dec
enter
and
out
jle
adc
mov
cmc
sarb
push
insb
in
aad
mov
adc
inc
ds
mov
pushl
pop
jmp
call
push
lods
pop
xchg
cld
shrl
jmp
faddp
xor
adc
sub
jle
dec
pop
sbb
pop
cmp
xchg
mov
pop
mov
std
and
jge
ror
xchg
push
data16
cmp
test
lcall
sub
int3
xchg
inc
sbb
mov
insb
in
sbb
inc
or
int
out
cmp
mov
cmp
lds
mov
dec
mov
xchg
mov
test
mov
sti
xor
daa
sub
gs
ret
jp
mov
ds
and
mov
outsl
inc
add
add
push
push
lods
imul
orl
bound
ret
add
mov
jmp
mov
enter
insl
mov
jl
ret
lds
inc
lahf
lret
jno
rcll
cmc
mov
test
daa
cmpsl
hlt
aaa
les
push
jecxz
push
mov
push
xrelease
popf
mov
sub
and
dec
xchg
sbb
push
call
inc
push
xchg
jae
cmp
lock
push
popf
inc
shll
jo
xrstors
jae
xchg
out
pop
pop
sub
push
int3
pop
repnz
orb
dec
cmp
xlat
out
movsl
fs
jae
push
or
out
mov
ljmp
imul
cmp
sbb
sti
popf
dec
adc
mov
add
scas
std
pop
push
push
shlb
sbbl
ja
lock
adcb
aad
ret
lret
mov
mov
sub
add
testl
js
or
rcrb
dec
xlat
loopne
xlat
push
and
inc
push
inc
cwtl
loopne
jne
cld
in
lcall
movsl
mov
hlt
cmp
mov
shll
fadd
xchg
inc
aad
cli
xchg
cltd
sub
or
lcall
movsl
cmc
lods
int
mov
enter
imul
sbb
adc
cli
shl
out
movsb
ret
fiadds
and
clc
inc
push
fwait
subl
cmpsb
jl
sbb
mov
leave
fistl
in
fildl
jae
xor
jae
xor
test
mov
sbb
xor
inc
jbe
aad
inc
and
loopne,pn
sarl
adc
and
fldl
mov
cmp
pop
xchg
filds
mov
sbb
mov
dec
xor
in
aad
mov
aad
repnz
ror
jle
mov
jns
adc
cmp
adc
lea
loopne
ja
sub
aas
outsl
lea
adc
ds
mov
out
movsb
mov
pop
lret
or
ljmp
loopne
lea
jno
scas
aas
mov
nop
jl
jg
mov
stos
dec
xchg
push
or
pop
xchg
jns
push
neg
outsb
imul
js
xchg
pop
fwait
int3
jg
lock
lahf
adc
pop
test
cld
mov
mov
and
stc
add
mov
mov
inc
mull
fildl
mov
sub
aad
ss
stos
xchg
push
lea
stc
mov
xor
sbb
xchg
aas
leave
imul
enter
mov
mov
scas
ret
test
xchg
lds
lea
xchg
bound
in
aad
ds
mov
inc
mov
hlt
shrl
or
xchg
ljmp
insb
dec
in
xchg
adc
mov
mov
or
das
imul
call
dec
cli
fcomps
cmp
dec
rcrb
lret
add
scas
adc
jg
mov
mov
into
sub
and
ljmp
xor
lea
notb
add
sub
pop
jp
js
mov
add
lcall
adc
push
xor
ficoms
shl
clc
sub
std
fisttpll
in
mov
fcompl
inc
movsb
mov
fnstenv
mov
out
xchg
pop
out
cli
cli
xchg
mov
orl
popa
mov
sub
lret
adc
enter
pop
shll
jecxz
outsl
sbb
or
mov
daa
jns
f2xm1
dec
cmp
gs
ds
mov
jecxz
xorl
mov
fwait
jb
pop
cmpsl
pop
xchg
push
pusha
mov
xchg
aas
inc
cmpsb
inc
add
idivl
jns
cmc
int
mov
cwtl
jg
jp
add
jnp
xor
loopne
mov
iret
pop
fldt
inc
rclb
imul
jno
popa
pop
or
and
mov
daa
scas
loope
cld
sbb
add
cmp
xchg
out
or
jl
jmp
out
add
sti
inc
mov
fistl
cli
fdivl
imul
fmul
ljmp
das
xchg
pop
rorl
mov
lret
xchg
jg
out
loopne
adc
mov
xchg
pop
jb
add
xorl
jo
shrl
jne
imul
push
je
repnz
add
nop
imul
fldcw
cwtl
or
out
pusha
ret
dec
lahf
in
leave
pop
adcl
cmp
or
mov
push
mov
loopne
lret
call
ljmp
test
jge
cld
push
push
pop
ja
adc
dec
dec
sbb
xor
push
push
aad
sarl
xchg
or
sbb
faddl
insl
into
adc
in
mov
push
cmp
jns
mov
lock
call
push
outsb
push
push
push
inc
sub
sbb
nop
xchg
xchg
jae
adc
insl
shrl
divb
inc
jg
mov
mov
shlb
adc
les
sub
sbb
and
push
lret
push
pop
pop
jge
sahf
sub
mov
fiadds
in
ja
outsb
cli
mov
fs
call
push
imul
sbb
ds
inc
adc
mov
xchg
mov
mov
push
xchg
inc
sbb
sbb
add
sbb
inc
fsts
or
ds
pop
decl
mov
or
mov
and
cs
xchg
cwtl
sbb
adc
mov
cmpsb
and
bound
aam
call
jno
xchg
sub
jne
out
out
loopne
ja
jg
fsubs
loope
jp
pop
mov
bound
xor
in
jmp
and
jle
mov
in
int
jo
imul
xchg
sbb
mov
out
ja
test
movsl
aaa
xor
jle
sbb
out
subl
out
ss
ss
outsb
add
mov
cmp
sarl
pop
jae
xlat
andl
lcall
dec
test
sbb
push
mov
push
bound
out
rolb
or
unpcklps
fidivl
adc
dec
lea
cld
mov
negb
mov
in
into
xchg
out
xor
jne
into
es
push
inc
xchg
test
cmpsb
out
ret
adc
xor
lret
out
sub
push
and
add
xchg
push
icebp
cmp
dec
sub
es
in
out
fnstsw
cmp
stc
pop
sbbl
xchg
fdivrl
mov
inc
push
dec
shlb
or
pop
shlb
pop
lock
imul
add
shlb
mov
adc
stos
lcall
push
insb
mov
and
aam
outsl
mov
add
or
ret
jp
add
adc
iret
lea
mov
mov
sub
and
mov
sbb
sahf
test
adc
push
mov
or
cmp
adc
stos
popf
data16
insl
or
or
aaa
push
dec
push
pusha
cmc
inc
xchg
mov
sub
mov
lret
in
cmp
fxch
xor
inc
push
add
mov
insl
rcll
xlat
xor
lods
xchg
mov
shll
or
repz
mov
lahf
out
xor
sarb
shl
scas
cs
js,pn
or
mov
mov
cs
clc
inc
iret
pushl
push
dec
add
testl
mov
call
dec
jbe
xor
mov
mov
jnp
jbe
dec
into
pop
pop
test
mov
or
dec
jge
xchg
mov
dec
nop
push
mov
pop
xor
test
dec
sbb
mov
jecxz
mov
in
in
enter
fiaddl
fisubrs
mov
out
loope
jnp
mov
cltd
test
shrd
hlt
jo
mov
and
or
sbb
test
sub
sub
jp
inc
stos
adc
add
pop
sti
insb
lea
adc
pop
cmpsb
fnsave
xchg
ret
out
sbb
daa
and
nop
add
mov
shlb
cmpsl
dec
pop
rcrb
in
je
or
repz
das
fadd
sub
nop
cmp
cmpsb
pusha
rclb
outsl
jmp
movsl
cli
mov
loopne
sub
lahf
jmp
or
add
xor
iret
cs
fimuls
repnz
xchg
ret
es
mov
push
adc
lret
insl
sarb
inc
das
jle
movsl
mov
pusha
push
popa
test
adc
add
pop
arpl
lahf
mov
imul
jle
inc
shl
out
cwtl
adc
add
pop
movsl
mov
sahf
and
add
dec
iret
push
decb
sbb
xor
xchg
lds
xchg
pop
in
call
stc
xchg
and
mov
out
test
inc
insl
pop
push
push
pushf
test
xlat
mov
test
mov
and
and
add
jmp
fisttpll
add
xchg
jo
cmpsl
mov
xchg
mov
shrb
enter
sar
stc
clc
cld
cmp
aaa
sub
sbb
es
imul
mov
daa
jae
dec
push
push
push
into
mov
cmp
out
xor
test
jo
flds
ret
lds
cmp
cmp
popf
add
sub
icebp
cmp
adc
pop
push
jecxz
test
dec
aad
ljmp
inc
rep
divb
adc
test
shll
mov
push
mov
xchg
jp
mov
inc
dec
cs
jo
shr
cmp
dec
lret
inc
adc
popl
mov
push
add
mov
pusha
out
lcall
add
js
dec
out
dec
std
out
or
push
inc
scas
sahf
test
pushf
xchg
cld
pusha
cltd
push
repnz
pop
stos
das
pop
or
add
test
lret
xor
inc
sbb
fsubs
pushf
das
out
mov
insb
adc
jns
sub
inc
movsl
add
shl
xchg
nop
adc
push
cmp
cmpsb
mov
loopne
mov
add
shr
mov
aad
les
pop
rolb
test
mov
les
sti
lret
test
cmpsb
dec
int3
ret
lea
dec
lock
xchg
jp
inc
aaa
cltd
test
adc
sahf
adc
test
cmpsb
cltd
sbbb
shll
shr
cmp
loope
xor
pop
out
icebp
lods
inc
pushf
push
data16
jb
outsb
push
or
shll
sub
hlt
inc
shrb
imul
aam
ret
adc
xchg
jp
add
adc
or
adc
inc
push
xchg
mov
ds
inc
xchg
xchg
inc
mov
aad
cmpl
xor
and
xchg
movsb
shrl
jmp
jne
dec
cmp
mov
lods
imul
cwtl
pop
pop
out
sti
ret
addr16
addr16
daa
dec
mov
cltd
into
cld
aaa
or
cmp
fldcw
inc
fisttpll
inc
or
cld
add
inc
pop
or
clc
cmp
sub
hlt
mov
gs
scas
push
lea
xchg
popa
nop
adc
lea
aad
jo
mov
imul
leave
icebp
mov
mov
xchg
lods
sbb
int
mov
xchg
pop
das
ret
cmpsb
adc
xchg
jns
mov
cmp
pop
cmp
xchg
gs
sbb
loop
dec
int3
rol
pushf
push
push
jecxz
add
pop
aaa
jns
imul
mov
rsm
push
or
xchg
nop
xlat
repnz
pop
mov
clc
dec
mov
fxch
movsl
mov
mov
push
loopne
orl
or
push
mov
cmp
sbbl
and
fwait
push
add
jo
mov
jbe
push
mov
xchg
adc
jb
pop
xor
cltd
cmp
adc
jae
mov
js
jg
sub
or
push
adc
test
push
dec
lods
or
xchg
mov
jnp
imul
mull
icebp
je
sub
clc
jl
insl
fwait
push
xchg
call
pop
fbstp
push
push
cmp
cmp
xchg
je
lahf
orb
and
mov
ss
and
sbb
push
mov
loope
pop
das
imul
sbb
xor
imul
inc
push
aad
xor
cmc
mov
in
jp
aas
fisttpl
arpl
dec
outsl
mov
ss
lret
cli
mov
call
int
stos
push
aam
sub
xchg
incb
inc
mov
lea
xchg
inc
cmp
lock
cmp
xchg
and
clc
cld
push
loope
pop
popf
mov
sarb
gs
add
xchg
push
pop
hlt
pop
mov
adc
repz
ret
push
cmp
pusha
xor
neg
pop
lcall
ret
fisubrs
gs
sbb
ret
clc
insb
nop
jne
in
repz
shrl
js
in
stc
mov
cs
push
and
out
das
xor
xchg
imul
hlt
and
add
cs
cmp
dec
pop
imul
mov
or
mov
ret
clc
push
cmpb
adcb
inc
cmp
repz
fnsave
daa
sti
and
dec
sahf
je
adc
pop
add
loope
cmpsb
repnz
adc
sub
push
mov
pop
movsl
mov
jmp
lret
in
xchg
inc
pop
mov
fnstcw
mov
push
cld
shrb
lods
cmpsb
gs
cltd
mov
dec
and
pushf
xchg
vfrczpd
jo
sti
daa
cld
movsl
mov
rolb
inc
and
add
pop
add
sbb
fwait
lahf
add
xor
mov
js
nop
or
or
out
or
mov
and
inc
mov
je
push
icebp
xchg
loop
xor
fisubs
pop
aad
sarl
je
and
mov
sbb
dec
fistps
mov
xchg
xor
mov
push
or
aas
dec
jl
mov
mov
add
outsl
sbb
pop
shrb
cmp
mov
nop
lock
jnp
or
lods
pop
jns
movsb
jl
pop
in
cmp
add
cmp
lds
jns
inc
xor
fs
add
xchg
push
xchg
xor
cmpsb
cmc
xchg
dec
push
call
mov
sbb
lcall
push
out
pop
mov
ret
xchg
in
add
sbb
dec
cmp
aas
loope
add
sti
lea
inc
lret
xchg
loop
loopne
xor
push
test
cmp
out
and
mov
push
or
ds
dec
mov
sub
sbb
cmp
das
in
mov
xchg
aaa
push
cmp
lock
sti
iret
test
sub
cmpsl
xor
inc
add
fstpt
cltd
dec
bound
mov
mov
or
inc
lods
jbe
add
out
mov
pop
out
xchg
sub
sbb
pop
loope
sbb
das
push
rorb
lret
mov
push
hlt
pusha
out
sbb
adc
roll
pusha
lahf
call
repz
cmp
testb
rclb
xchg
mov
imul
sbb
out
cmp
add
dec
dec
pusha
push
pop
js
test
push
jae
sbb
bound
sbb
dec
icebp
sbb
sub
rcll
xchg
js
and
lret
scas
cmp
xchg
out
cwtl
inc
sti
je
stos
push
sub
outsb
push
cmp
in
into
adc
mov
cmpsl
jg
outsb
pop
add
loop
outsl
lods
jge
lea
xchg
divb
dec
loop
out
daa
push
sbb
xchg
lahf
adc
lods
cli
repz
int
out
xchg
cmp
mov
repnz
sahf
or
cmp
ljmp
and
mov
insl
adc
lret
xchg
ljmp
and
pusha
sbb
cmp
inc
jo
mov
femms
cmc
mov
xchg
jae
inc
push
adc
or
aad
fstps
pop
mul
mov
sbb
adcl
je
jmp
sub
test
negb
push
push
in
mov
mov
aaa
in
lods
jle
add
dec
sbb
inc
xchg
push
ret
mov
dec
fstpl
loopne
in
lret
gs
or
adc
mov
icebp
fdivs
cmp
jle
loope
push
imul
int3
jns
fs
xchg
sub
mov
push
out
arpl
push
mov
add
ljmp
divb
sub
js
shrb
sub
jle
xchg
fidivs
dec
or
fsubs
and
pop
cld
and
sub
mov
push
mov
xchg
sub
fs
divl
lods
nop
push
nop
mov
pop
leave
inc
js,pn
in
add
push
cmpsb
adc
push
popf
shlb
adc
pop
mov
cmp
loope
pop
imul
loop
add
xchg
loop
ror
cmp
movsl
inc
scas
ja
mov
or
push
adc
das
mov
test
enter
inc
aaa
adc
dec
shll
add
ja
cmpsb
in
jg
fdivr
inc
jp
cltd
ds
or
jbe
adc
jge
mov
dec
ret
xor
out
xchg
sbb
jl
xor
loop
sub
sub
mov
je
adc
xor
inc
rclb
lds
shlb
mov
gs
inc
movsb
shrl
cmp
inc
ror
nop
imul
lea
pusha
lahf
add
lods
push
push
mov
cmp
icebp
add
mov
lret
test
ret
out
inc
mov
fistpll
loopne
cld
push
xor
xchg
or
pop
scas
icebp
daa
stos
ret
and
into
push
std
arpl
cli
or
dec
out
std
imul
je
mov
insl
mov
fstp
and
and
adc
push
add
inc
add
xchg
and
nop
or
dec
mov
mov
adc
add
stos
inc
sbb
je
mov
cmpsb
xchg
js
pop
pop
rcrl
lods
sub
test
xchg
adc
add
aas
xchg
push
out
and
jbe
xchg
pop
mov
in
push
mov
sub
jo
mov
mov
jge
push
dec
mov
push
adc
js
stc
mov
mov
and
add
sahf
or
sbb
jnp
push
adc
add
fcoms
rolb
mov
out
jl
shrb
js
aad
scas
pop
rcl
and
hlt
dec
jo
ret
jns
jne
in
mov
popa
dec
shrd
dec
es
lea
cmp
loopne
jb
aas
aam
sbb
jl
shlb
std
mov
dec
push
push
cmpsl
out
inc
hlt
mov
rcll
aam
sbb
fldenv
sbb
insl
inc
xor
mov
cmp
mov
imul
mov
fimull
mov
cltd
lret
pop
add
jb
out
adc
xlat
xlat
and
cwtl
pop
pop
fmul
jecxz
imul
icebp
test
xchg
push
cltd
xor
sti
push
lcall
sbb
and
cmp
movsl
inc
inc
in
mov
pop
js
pop
mov
inc
std
xor
mov
jp
aas
dec
fstl
mov
imul
or
clc
lcall
divl
and
add
xchg
sbb
fisttpl
stos
sti
les
lcall
stos
jge
mov
cmp
dec
jge
jb
pop
mov
iret
call
mov
inc
sub
fimull
test
insl
lea
hlt
push
mov
and
cltd
add
out
mov
xchg
dec
outsb
xchg
push
add
or
mov
inc
out
sbb
bound
sub
dec
and
mov
and
inc
or
gs
mov
add
arpl
test
imul
pop
loope
mov
cli
jmp
outsb
inc
xchg
nop
ja
ss
add
push
shrl
in
bound
adc
mov
stos
add
pop
int3
xor
pop
sbb
or
sbbb
jo
and
dec
add
data16
adc
xor
mull
push
inc
jmp
adc
bound
pop
mov
xor
mov
push
cli
xor
leave
aam
aaa
iret
mov
fs
ss
mov
adc
scas
ja
or
enter
xor
adc
lds
lods
sub
add
test
push
xchg
pop
out
rcl
mov
or
mov
lret
es
cli
jbe
mov
loop
insb
push
dec
cltd
loopne
pop
call
push
pop
sub
and
jo
out
lret
cli
lock
lret
cmp
pop
cld
jne
sti
xchg
stos
pop
push
dec
fmuls
add
sub
rorb
push
pop
xchg
mov
cmp
ja
mov
xorb
pop
xor
mov
xor
rcrb
xchg
add
mov
lock
cmp
mov
ret
jns
push
jp
xor
int
lds
dec
testl
gs
cmp
les
out
movsl
cmpsl
ret
sub
ja
inc
jl
andb
push
mov
cmpsl
pushf
mov
out
roll
int3
mov
or
loop
je
mov
insb
pop
push
push
sbb
jnp
xchg
pop
mov
pop
jnp
data16
pop
mov
add
and
cwtl
and
movsb
push
out
push
or
push
and
lea
dec
loop
cmp
sub
pop
and
js
push
ljmp
testb
and
xor
hlt
pop
add
sub
cmp
add
add
idiv
mov
fsubs
scas
lret
mov
push
aam
scas
movsl
lret
and
repnz
pop
adc
dec
xchg
add
cmpsl
inc
cwtl
stos
jmp
lret
xor
dec
ror
nop
pop
push
lea
inc
dec
cmpsl
jae
jne
lods
popa
dec
push
push
in
imul
add
or
xchg
out
mov
jno
out
mov
call
ss
xor
jne
gs
test
xchg
add
out
ror
push
mov
cmp
mov
xchg
mov
cmp
or
jo
add
mov
movsb
mov
sbb
push
lods
divl
mov
mov
adc
cld
xor
mov
jne
js
cli
cmp
test
addb
loope
je
nop
aam
adc
rorb
les
mov
and
je
xchg
in
rol
dec
data16
loop
dec
xlat
xchg
adc
gs
sar
push
ljmp
and
cmpsb
popf
cmpb
into
addb
add
fcomps
orl
icebp
xchg
push
inc
push
cmp
pop
mov
push
inc
cmp
rorb
lock
jge
aaa
out
lods
pop
adc
sahf
aam
test
jbe
in
mov
in
add
sbb
into
out
repz
ss
mov
xchg
mov
add
xor
loope
test
xchg
call
test
inc
push
jle
cli
push
push
xor
jb
sbb
in
fsub
inc
cli
imul
lock
data16
mov
ljmp
and
and
faddl
ds
aas
cmpsl
xor
or
test
cmp
mov
jmp
mov
mov
xchg
aas
mov
push
mov
xchg
push
jb
add
and
mov
cmp
faddl
push
inc
mov
fucom
cmp
mov
dec
std
popf
stos
rol
sub
movsb
push
test
stos
rorb
andb
out
js
xchg
cmpb
fs
pop
in
lods
fistpll
pop
int3
int3
sub
inc
mov
sahf
gs
ss
or
rcrl
mov
mov
mov
ss
in
or
dec
ljmp
sahf
mov
sti
out
mov
scas
mov
icebp
sbb
adc
cmp
enter
fldenv
addl
int
push
push
and
and
fwait
pop
cmpsb
enter
arpl
cmc
jmp
fwait
hlt
gs
iret
cmpsb
loop
and
int
pop
fwait
test
xor
jno
sbb
mov
adc
and
mov
clc
lock
pop
pop
cs
adcl
in
pusha
push
sarl
pop
mov
movsb
push
repz
mov
xchg
xchg
dec
sub
loope
xchg
mov
test
sub
mulb
loope
cli
test
adc
xchg
movb
das
add
inc
movsl
aam
mov
cli
and
sahf
push
sub
push
inc
sub
movsl
xor
mov
jl
ljmp
push
insl
and
inc
movsl
aam
inc
jp
dec
mov
cmpsl
pop
in
mov
fldenv
fsts
sub
add
mov
aam
daa
mov
insl
insb
adc
sbb
xchg
cmp
data16
xchg
outsb
scas
xor
mov
arpl
and
adc
repnz
adc
cmp
andb
aas
or
lahf
mov
test
push
inc
lahf
cmp
sbbl
mov
fdivrs
cmp
jge
stos
insb
xor
pop
lret
xlat
xor
dec
rcl
fistps
cmp
clc
xor
imul
inc
out
mov
xor
sbbl
lahf
xor
push
mov
sub
into
mov
fildll
pop
or
add
cwtl
mov
ja
push
mov
mov
imul
and
cli
sub
jl
in
in
cmp
out
mov
or
jb
mov
in
aas
push
push
xor
notl
push
jge
inc
leave
stos
shrl
add
in
mov
cmp
cwtl
sub
adc
pop
sahf
mov
sbb
cmc
loopne
jbe
xchg
fnstcw
push
jge
fidivrs
push
cmp
sbb
inc
aad
push
jmp
orl
xor
lods
dec
fistl
sbb
fadd
in
dec
imul
and
push
pop
pop
pushf
cli
push
loopne
rcr
lret
sbb
pop
sbb
inc
fs
cmpsl
fwait
movsl
cmp
sbb
inc
add
mov
jl
int
mov
ret
inc
mov
push
jp
inc
jns
orl
pop
clc
pop
test
mov
js
idivl
push
sub
dec
popa
pop
mov
xor
int3
pop
or
ds
leave
in
aas
sbb
out
cmpsl
mov
ret
int3
test
sbb
or
xlat
mov
fiaddl
shrb
xchg
mov
pushf
sub
cmp
xchg
popa
insb
push
lcall
pop
and
sbb
cmp
cmp
out
cs
cmp
adc
mov
outsb
jne
orb
mov
push
out
xchg
movsb
enter
cltd
pop
sub
xor
enter
ljmp
mov
int
jg
lcall
repz
jnp
sbb
cmpsb
pop
push
ret
mov
loopne
call
mov
pop
or
xor
das
xchg
dec
nop
test
aaa
pop
mov
inc
mov
push
fstpl
iret
push
cld
pop
mov
pop
out
jmp
xchg
add
arpl
and
adc
pop
cli
daa
mov
xor
cmp
jecxz
psubusb
mov
dec
pushf
loop
adc
popa
cmpsl
daa
inc
fs
lret
push
sarl
cmp
cmpb
fld
sarl
movl
lods
push
cmc
sahf
xchg
ja
xor
pop
scas
iret
jecxz
inc
mov
sbb
cld
dec
in
mov
ficoml
dec
out
imul
and
clc
mov
adc
iret
jb
or
adc
cmp
ljmp
shr
clc
mov
mov
leave
cmpsb
fdivs
insb
adc
bound
scas
fwait
jg
mov
sarl
subl
fs
div
cmp
jle
mov
lock
inc
fucomp
shlb
push
lcall
xchg
sbb
inc
mov
pop
or
fimuls
dec
loopne
pop
ret
cmpsl
adc
and
aad
adc
sarb
sbb
stc
fdivrs
add
jno
mov
repz
imul
mov
cwtl
inc
cli
mov
int
mov
popf
out
inc
push
test
aad
fsubrl
nop
xlat
adc
jno
jb
icebp
in
mov
fistpll
or
inc
aas
xor
das
adc
loope
cmp
test
add
jno
sub
jae
mov
push
sub
test
mov
jg
sub
adc
incb
int3
cltd
sub
imul
test
mov
repnz
dec
xor
insl
adc
nop
and
ficoml
jl
aas
in
push
lahf
inc
jecxz
pop
jno
imul
ljmp
fs
adc
mov
pusha
push
fimuls
inc
cmp
shrl
adc
test
and
out
movsl
cmc
jl
pop
repz
and
lea
inc
pop
loop
out
out
dec
dec
cli
cmpsl
push
pop
pop
push
add
jmp
mov
repnz
inc
lods
setae
jbe
ja
xchg
adc
pop
inc
mov
insb
fcoml
add
mov
rol
into
sar
dec
sub
sub
jns
push
dec
push
or
fidivrs
push
pop
add
adc
inc
mov
pop
insl
cltd
aam
sub
rolb
cwtl
nop
mov
arpl
movb
mov
push
xor
ret
lds
push
add
aas
adc
popf
jmp
fsts
bound
and
jg
jnp
test
xchg
push
cmp
dec
xor
xor
dec
int
xchg
hlt
sub
cmp
sub
push
dec
and
lcall
adc
mov
dec
out
fucomp
ror
call
inc
jmp
dec
adc
aad
push
aam
lds
movsb
push
loope
mov
push
clc
loopne
ja
int
dec
jle
aad
jbe
xor
int3
pushf
pop
mov
mov
push
aam
inc
or
mov
cli
hlt
pinsrw
cs
inc
ja
es
xchg
leave
push
mov
data16
sub
mov
js
sub
pop
hlt
cltd
iret
pop
and
fwait
or
sbb
mov
test
mov
cld
in
repz
or
mov
lds
jge
jo
jg
leave
cmpsl
fisttpll
insb
filds
xchg
sahf
jno
fstpl
jae
jl
xchg
mov
negl
int3
pusha
xchg
imul
mov
pop
inc
jo
pop
inc
pop
push
push
orb
jl
mov
sub
mov
pop
inc
add
insb
add
add
js
mov
or
push
pop
and
dec
mov
add
xchg
push
imul
in
stos
push
ret
mov
icebp
cmp
push
mov
sub
mov
cltd
push
cltd
sbb
adc
mov
adcl
ds
cmp
push
mov
movsb
stos
xchg
test
add
in
out
jmp
or
or
das
ret
stos
mov
pop
sti
test
cmp
into
xchg
fbld
push
out
pop
in
cmpsl
pop
addl
sub
push
mov
cmp
jmp
stos
jg
test
test
and
rcl
mov
cmpsb
fs
sub
jae
mov
push
or
adc
stos
lods
out
and
jp
xchg
push
pop
jg
mov
mov
push
enter
ret
add
es
pop
subb
cld
sbb
cli
sti
aas
or
sbb
test
aas
arpl
gs
fwait
mov
xchg
add
hlt
cmp
daa
xor
clc
iret
cmp
add
popa
addr16
icebp
push
or
je
out
sbb
and
rorl
cmp
dec
and
cmp
inc
push
pusha
cmpsl
fistpl
sahf
sub
push
mov
add
cli
push
mov
and
inc
fldt
xchg
ds
loope
pop
imul
stos
jo
cmc
xchg
mov
stos
xchg
dec
fwait
ja
dec
ljmp
xor
outsl
ds
mov
mov
push
mov
pop
lret
shlb
aas
imul
jle
jns
out
sbb
xor
out
push
cmpsl
mov
in
inc
fiadds
mov
jge
movsl
int
adc
mov
jns
add
cmp
pop
cwtl
mov
jg
iret
cmp
movsb
xor
xorl
rclb
or
xchg
sub
dec
sbb
jp
mov
sti
jl
mov
mov
mov
dec
rorl
and
or
pop
dec
or
test
les
jmp
pop
inc
mov
sti
clc
ret
hlt
addr16
not
js
lods
pop
arpl
mov
shlb
int3
popf
fwait
cwtl
xor
cld
test
jg
test
dec
cmp
mov
lods
dec
pop
jne
cld
outsb
xchg
sarl
loope
pop
daa
cmc
out
sbb
push
jo
insb
or
jne
lret
jle
ret
mov
stos
push
pop
sub
cld
mov
lret
push
push
daa
push
adc
sub
fsubr
add
pusha
mov
insb
dec
mov
jnp
cmp
bound
xchg
aas
sbb
or
shll
paddw
inc
xchg
xchg
inc
cmp
mulb
cmpl
out
pusha
pusha
orl
lret
sbb
popa
jnp
fldt
and
cmp
mov
jp
mov
xor
cmp
ljmp
ljmp
rcll
nop
repz
jle
mov
inc
pop
cmp
mov
lock
mov
add
arpl
or
add
xchg
lahf
out
sbb
mov
push
hlt
cmc
pop
jnp
fistl
pop
mov
push
test
mov
stos
pushf
fldenv
mov
pop
xchg
lahf
jae
pop
loop
mov
aad
into
inc
xor
pusha
jne
clc
mov
jge
dec
or
cmpsb
pop
nop
adc
jmp
jb
in
mov
insb
xchg
mov
mov
sahf
cmpsl
popf
rol
lods
leave
ret
jbe
xor
sub
and
xchg
pop
dec
or
push
scas
adc
mov
cli
sub
sti
jl
shlb
pop
scas
dec
enter
les
push
add
std
pop
inc
fisubs
xchg
xor
stc
dec
mov
inc
sub
and
push
and
xchg
test
mov
es
inc
pop
adc
ds
ffree
mov
jl
loopne
sbb
push
mov
fldt
call
lret
lea
and
out
mov
sarb
sub
in
or
jnp
push
arpl
enter
jle
lods
add
sti
and
popf
sub
lods
pop
fnstcw
xchg
inc
popf
fwait
mov
sbb
es
adc
xor
stos
or
imul
add
or
mov
or
inc
data16
push
mov
insl
shrl
out
push
push
enter
outsb
jns
pop
out
test
cmp
xor
xor
sbb
pop
outsb
mov
xor
lahf
mov
out
push
out
xor
ficomps
ja
pop
adc
pop
mov
and
dec
jp
inc
aam
mov
sbb
xchg
aam
ret
fsubrs
lret
imul
popf
mov
and
int
cli
mov
or
stos
fcoms
test
inc
bound
pop
outsb
and
xchg
mov
or
les
in
ror
adc
lods
addr16
mov
xor
cmc
mov
test
fdivrp
push
and
addl
outsl
cli
stos
xorb
add
pop
sub
push
mov
xchg
inc
xor
or
cltd
fimuls
pop
add
xor
adc
rolb
sub
adc
xchg
jle
push
leave
dec
cltd
jb
in
out
dec
push
add
out
sar
je
lds
push
sahf
push
stc
and
mov
cli
xchg
adc
fildll
loope
adc
push
outsl
in
mov
int
cmpsl
stos
adc
dec
std
scas
std
leave
adcb
pusha
daa
mov
mov
cmc
cli
test
jae
in
inc
negl
add
arpl
add
ret
jns
into
sub
cmp
je
inc
dec
mov
bnd
jmp
cmp
in
ret
and
ret
ljmp
nop
jb
jno
ficoml
mov
or
mov
pop
xchg
jle
push
push
dec
or
push
inc
jp
and
imul
sub
sbb
adc
movsb
movsb
lods
lret
xor
test
rclb
mov
add
fprem
add
cltd
leave
or
ds
push
je
mov
scas
mov
pop
hlt
push
cwtl
fcompp
sbb
dec
xor
inc
and
mov
into
sub
divb
add
jge
xor
sbb
lods
push
inc
xor
fwait
test
jmp
sti
cli
mov
mov
lock
xchg
mov
std
push
fcoms
xchg
cli
fstpt
hlt
rorl
aad
pop
push
inc
mov
pop
xor
mov
jle
out
jmp
mov
dec
adc
adcb
fstps
adc
or
xor
es
lret
out
mov
call
das
loopne
add
inc
cs
xor
or
xchg
insl
mov
lods
add
cld
int3
out
test
out
cmp
xchg
mov
sub
das
hlt
icebp
stos
and
loopne
lds
sarl
int3
mov
call
jmp
ret
push
adc
fmull
pop
popf
adcb
stos
data16
fcompl
loopne
rorb
adc
mov
push
inc
xchg
add
xchg
loopne
scas
xchg
xchg
aam
lock
ror
pop
jl
add
lods
movsl
fstps
and
dec
or
imul
xorb
mov
js
jo
sub
dec
outsl
mov
data16
lret
mov
addr16
adc
ja
cmp
cld
movsb
or
inc
add
fiaddl
jmp
popa
xchg
add
fdivl
sub
test
fwait
gs
push
movsb
push
ror
rcrl
popf
mov
fwait
sub
inc
add
mov
adc
lahf
cmp
or
stos
pop
rol
fcoms
les
pusha
xchg
dec
clc
lds
add
fcoms
adc
fldt
sbb
xor
fisttpl
cmc
fisttps
popl
ja
sub
adc
sahf
movsb
fadd
sub
xor
inc
cmp
jnp
insb
flds
pop
fidivrl
shlb
sub
ljmp
out
inc
into
jnp
add
iret
test
adc
sbb
std
sarb
pop
sub
bound
adc
jns
stos
xchg
mov
daa
scas
inc
hlt
les
mov
bound
ret
jp
out
ret
pcmpeqd
mov
jg
imul
sti
adc
movsl
or
mov
cmp
popa
jg
jp
pop
xor
or
and
mov
imull
mov
je
daa
pop
mov
icebp
adc
incb
in
mov
or
rol
pop
scas
dec
pusha
movsb
in
add
out
in
fdiv
and
sub
inc
or
stos
test
xchg
pop
test
cmc
jmp
into
clc
add
push
push
fs
jl
fstps
dec
movsb
ds
and
inc
lods
mov
faddl
ljmp
in
into
repnz
push
lods
mov
mov
into
add
pop
aad
add
clc
jge
add
arpl
xlat
std
pop
jge
nop
dec
xor
dec
cltd
icebp
pop
mov
subb
sbb
subl
je
xor
pop
fidivrs
ljmp
jle
ja
jecxz
leave
dec
fsubr
fsubrs
sbb
gs
mov
mov
stos
lret
outsl
pop
jmp
mov
nop
pop
xchg
in
addr16
mov
xor
push
mov
data16
pop
pusha
popa
push
mov
jmp
sti
push
in
jae
int3
cli
setb
in
test
push
push
jo
adc
shl
push
xchg
test
aaa
aad
es
sti
xor
add
jl
fbstp
mov
ret
ljmp
sahf
or
cmpsb
dec
cmp
push
into
inc
push
jno
test
jecxz
cmp
int
in
je
scas
and
cmp
rcrl
icebp
sbb
test
dec
xchg
cmp
das
pop
es
idivb
fdivrl
cltd
lcall
mov
push
loop
and
mov
pop
add
add
jge,pn
xchg
xchg
shll
dec
pop
mov
lahf
imul
xchg
jae
bound
xor
sar
movsb
cmpsb
in
jle
icebp
fwait
inc
pop
repnz
pop
add
jecxz
dec
and
lret
pop
fidivl
popf
test
mulb
sahf
loope
cltd
mov
push
lock
jg
pop
mov
and
pop
sub
cs
enter
and
push
imul
loop
push
mov
and
sbb
jbe
mov
gs
push
add
popa
nop
out
dec
push
sub
loopne
insl
jo
mov
cmp
push
pop
inc
imul
les
mov
stc
lods
jp
fadds
jne
xor
push
inc
or
scas
adc
pop
lahf
mov
or
push
int3
or
adc
scas
iret
inc
xchg
xchg
add
ss
or
jo
xorl
mov
test
and
shlb
fsubp
push
pop
gs
jns
negb
outsb
fsubrl
mull
movsl
add
jno
xor
ljmp
sbb
aam
in
lret
mov
or
repz
iret
cmp
adc
pushf
sub
aaa
xor
sbb
int
push
xchg
hlt
push
pop
aaa
xchg
filds
xchg
xor
cmp
push
sub
jb
adc
inc
movb
jb
sahf
fmulp
in
cmpb
dec
and
xchg
imull
lds
movsb
test
push
push
inc
fisttpll
mov
sub
jnp
mov
aas
xchg
je
mov
pop
push
push
cmpsb
xor
in
test
mov
rorb
sbb
out
mov
daa
ljmp
jge
pop
fsubrl
enter
mov
push
pusha
cltd
jmp
or
and
test
mov
mov
adc
cli
adc
jp
xor
stos
sbb
pop
xchg
lret
cli
addr16
sbbl
xchg
cmp
fsubr
test
enter
and
out
cs
xchg
mov
stos
xchg
lea
stc
cwtl
lcall
pop
mov
les
int3
cmp
push
adc
pop
and
xchg
lahf
cli
vmread
sbb
insl
lcall
das
cltd
fnsave
jne
bound
mov
lcall
adc
mov
jp
sub
ret
sub
adc
fninit
and
jns
jmp
push
push
push
sub
out
adc
fst
jl
iret
push
pop
pop
lahf
cmc
int
mov
mov
xchg
lods
ret
not
imul
orb
lods
cli
in
pop
cmp
mov
addb
into
fcomps
fsub
xorl
sub
jae
pop
mov
pop
enter
clc
icebp
inc
pop
mov
aas
sbb
and
or
xorl
cmp
out
mov
sbb
movsb
xor
lods
lret
mov
int3
repz
loopne
mov
push
movsl
cli
pop
jl
pop
add
ja
cmpb
scas
push
mov
cmp
fimuls
push
fs
xor
pop
loope
mov
jo
repz
or
and
xor
or
pop
cmc
pop
lret
adc
das
adc
jp
insb
sbb
mov
insb
subl
and
pop
cmp
in
fcmovnbe
push
lds
adc
outsl
lahf
xchg
adc
mov
cmp
inc
inc
in
xchg
sarb
mov
movsl
mov
loope
or
call
nop
rol
inc
inc
dec
adc
nop
fidivl
pop
cmp
xlat
cltd
insb
dec
lea
inc
inc
cmc
cmp
nop
sub
pop
loope
jge
cld
sahf
cld
or
sahf
pop
mov
adc
push
pop
jns
lret
insl
sbb
mov
and
or
inc
lret
shll
dec
jecxz
mov
outsb
lret
push
xchg
test
je
std
cli
pushf
ljmp
jae
movsl
or
jo
cmc
fiaddl
jge
data16
xchg
cmp
stos
mov
fcmovbe
mov
movsl
mov
je
pop
arpl
fisubrs
notb
loope
mov
and
mov
loope
jecxz
xchg
pop
add
sbb
or
shll
and
sarl
mov
fcmovne
cli
shl
mov
mov
fcompl
mov
xor
aaa
and
bound
mov
jae
scas
in
dec
outsl
icebp
fdivrl
and
pop
lds
sub
or
dec
jb
data16
hlt
imul
call
adc
into
xor
push
call
push
adc
loop
fiadds
cli
loope
lods
push
push
loop
in
scas
sar
stc
push
xchg
out
into
cmp
pop
inc
cmp
mov
rorl
cmp
cwtl
mov
adc
or
data16
lods
stc
movsb
cmpsl
push
xlat
inc
mov
orb
daa
dec
es
das
arpl
jg,pn
xor
lahf
inc
adc
inc
push
xor
add
rcrl
xchg
dec
test
bound
fcmove
pop
scas
push
sbb
xor
cmp
mov
sbb
mov
bound
dec
dec
je
out
push
daa
int3
sub
stc
fldcw
lcall
dec
jg
jae
jecxz
ss
adc
inc
xor
out
daa
pusha
mov
out
dec
jbe
xchg
inc
into
pop
xchg
adc
lea
add
push
rol
cmp
vprotd
test
adc
imul
adc
push
repz
stc
mov
cli
ret
add
jle
stos
jno
cli
pop
dec
fsubl
dec
jno
fs
fcomps
inc
rclb
fsqrt
subl
mov
jns
add
push
aad
bound
fimull
imul
fnstcw
lcall
das
outsb
xor
shlb
jnp
lods
cld
dec
fmuls
mov
aaa
andb
repnz
ret
aaa
out
jecxz
jmp
lock
and
addl
mov
sub
fs
jo
out
or
inc
lcall
mov
iret
xlat
cmp
fsts
and
fsub
pcmpeqd
enter
pop
adc
adc
das
les
mov
fs
lcall
pop
int3
aas
mov
push
out
xor
lock
ret
fisubrs
xchg
test
ss
mov
js
imul
adc
adc
push
xor
shlb
xchg
enter
mov
cltd
and
shr
or
movsl
pop
mov
add
xchg
je
mov
mov
mov
mov
sbb
cwtl
inc
xor
adc
rcl
ret
movsl
int3
cmpb
in
cmpsl
push
icebp
push
jge
mov
nop
mov
push
fidivs
jne
std
stos
and
insl
movsb
aam
es
inc
jge
inc
push
pop
das
insb
push
lcall
mov
mov
orb
lret
jecxz
push
std
nop
movsb
mov
imul
aas
lcall
mov
movsl
inc
subb
push
popa
or
pop
mov
shlb
ljmp
shrl
inc
mov
movsl
addr16
negb
push
fsts
into
or
jp
sub
sbb
mov
sti
jl
scas
in
xor
lock
push
push
and
push
mov
inc
inc
in
pop
hlt
mov
lcall
dec
movsb
fdiv
lahf
fs
or
cld
mov
aad
fcoms
jne
cmp
adc
xlat
cwtl
jns
pop
mov
cltd
mov
stos
sub
push
imul
add
in
xchg
rcrb
loopne
jp
jnp
addr16
imull
fmull
mov
inc
jnp
or
pop
mov
dec
cmpsl
test
cltd
out
sti
ficomps
sub
sub
outsb
sbb
or
mov
push
xor
xor
gs
pop
ret
pusha
fnstenv
lret
push
pop
and
js
xor
or
xchg
push
cwtl
in
sti
iret
and
pop
jns
mov
notl
mov
imull
cmp
or
movlps
adc
lea
xchg
scas
int
stos
psubd
cmp
cwtl
lret
mov
mov
cmp
clc
xchg
dec
cmpsb
xor
pop
and
xorb
cmp
test
test
sahf
lcall
add
mov
pushf
je
or
in
lahf
nop
inc
sti
mov
sbb
dec
add
push
loope
inc
adc
aad
fistpl
out
adc
dec
shlb
or
cmpl
shrl
adcb
jecxz
movsb
les
xchg
push
and
or
mov
adc
ret
fcmovnu
mov
jbe
testb
in
adc
add
push
mov
sbb
out
adc
mov
ja
dec
ss
aam
sbb
lds
jns
xor
mov
dec
dec
imul
inc
mov
fldl
adc
sub
enter
sub
sub
jno
mov
rolb
je
out
fdivp
fstl
and
jns
out
cmp
push
loop
push
and
fdivl
xor
ja
mov
push
dec
xchg
mov
pushf
in
inc
cmpsb
in
arpl
les
mov
test
sbbl
into
push
jmp
inc
sub
into
fldenv
xor
xchg
jbe
and
es
aaa
and
dec
popa
iret
cmp
sbb
sti
push
adc
xor
pop
lods
pop
mov
mov
shrb
fildl
cmp
push
lods
sbb
cmp
jmp
jecxz
mov
push
xor
jne
inc
inc
clc
aam
int
repnz
cmp
ret
stos
mov
sahf
add
inc
repz
lret
rcll
shl
iret
js
push
bound
push
dec
add
daa
in
das
sbb
adc
sbb
xchg
ret
add
xor
sbb
push
je
mov
ljmp
pop
mov
inc
xor
sub
mov
stc
insb
enter
stc
jl
jne
and
jb
and
int3
int3
inc
or
sub
fidivrs
ds
xor
xchg
adc
std
push
push
sub
add
lock
pop
mov
mov
xlat
lods
push
cli
lahf
idiv
push
fnstsw
sbb
fs
inc
xor
mov
outsb
int3
xor
add
lock
xor
out
jmpw
mov
lds
fwait
std
mov
out
xchg
call
cld
sub
arpl
mov
fs
out
lahf
cs
push
div
leave
mov
jne
mov
pop
mov
jmp
jnp
dec
xchg
sahf
out
pop
sub
stos
repz
push
jp
or
js
xor
sub
cmp
fistps
ljmp
add
or
dec
fcom
repnz
jmp
mov
pop
and
clc
sbb
xchg
mov
or
mov
mov
out
xchg
fisttps
mov
xchg
and
cli
mov
adcl
int
out
cs
jno
shrl
add
in
add
jno
or
jle
int
aam
rcll
sub
out
and
outsl
mov
xorb
dec
lcall
mov
loop
lahf
repz
lret
jne
jg
lcall
aas
adc
cmc
je
jl
jnp
pop
lcall
ss
sbb
mov
les
mov
imul
fnstenv
aad
cmpsb
mov
mov
imulb
xchg
jae
mov
jno
sub
popa
arpl
lret
and
rcl
push
xchg
nop
mov
sbb
add
imul
pusha
hlt
jae
in
inc
mov
clc
sub
jnp
or
sti
pop
xorl
pop
sbb
push
push
test
add
or
sbb
stc
or
push
popa
lahf
ja
and
push
fs
dec
jae
mov
dec
add
shl
aam
sarl
inc
xchg
je
fs
adc
mov
mov
int
aas
lock
lahf
in
add
leave
xchg
and
cmp
js
sar
pop
push
sti
enter
in
js
movsb
cmp
xor
call
dec
jbe
cwtl
push
es
neg
lret
stc
ss
in
push
jne
cltd
in
mov
add
xor
cmp
xor
lahf
clc
and
add
test
in
in
mov
test
lret
cli
enter
cmp
mov
and
rorl
imul
shrl
divl
push
sub
stos
sub
pop
subl
push
cld
pop
mov
xor
jge
pop
std
aaa
and
jg
mov
movsb
inc
orb
and
das
dec
pop
fmul
jbe
mov
jmp
cld
les
push
push
fldl
clc
jne
pop
pop
insl
xor
test
out
push
xor
sbb
jo
enterw
or
add
fistps
repnz
xchg
test
push
iret
pop
push
int3
pop
mov
js
dec
out
pushf
or
adc
mov
cmc
or
lds
push
xor
push
jg
test
les
inc
incl
lahf
sbb
cmc
popf
xchg
add
lret
pop
lcall
loop
xlat
dec
jno
or
hlt
adcl
jmp
repnz
inc
loope
or
mov
xchg
dec
testb
lret
jns
out
sbb
ljmp
out
inc
aas
push
jns
or
inc
sti
pop
in
lods
imul
rcrl
int
cmpsb
ss
jnp
jl
inc
pop
std
mov
mov
pop
lods
imul
mov
jbe
icebp
pop
dec
leave
jo
rorl
nop
enter
dec
and
gs
sbb
add
loop
xchg
gs
sbb
mov
adc
jbe
sbb
imul
jne
or
mov
xchg
lcall
and
pop
xchg
push
pusha
mov
dec
xchg
push
adc
int3
mov
mov
lock
or
and
sbb
xchg
xlat
cld
mov
mov
sbb
mov
loopne
je
aaa
xlat
xor
or
in
sub
or
imul
ret
jl
sahf
pop
push
cmc
lea
xchg
sub
and
shrl
stos
push
cmpsb
addl
mov
cmp
xlat
sub
or
je
xor
aaa
sub
psllw
push
xchg
hlt
fyl2xp1
test
lret
pop
les
jnp
rcrb
inc
push
rol
arpl
scas
das
cmp
loope
jge
mov
mov
loop
jbe
adc
js
cwtl
push
cli
idivb
dec
dec
jge
das
rcrl
sbb
repnz
imul
add
pop
int3
lods
ret
xor
and
push
cmp
loopne
mov
mov
pop
call
lods
dec
dec
adc
jge
ds
cld
stos
mov
imul
inc
fwait
jno
imul
ja
xchg
into
add
test
cmpsb
loope
inc
inc
sti
add
dec
mov
mov
mov
jo
insl
out
jbe
addr16
push
fwait
add
xchg
and
in
pushf
jae
jne
jo
pop
cltd
ja
fcoms
das
hlt
test
dec
addr16
arpl
pop
adc
outsb
popl
sub
push
ss
jecxz
jne
cmp
push
dec
pop
xor
test
or
cwtl
loop
cwtl
jno
in
movsl
in
and
xor
and
gs
loopne
or
scas
fnstcw
mov
pop
xor
inc
test
aam
arpl
and
push
adcb
push
cmp
rorl
push
popa
in
jmp
test
dec
inc
mov
push
xchg
mov
xor
push
mov
int
jmp
pop
xchg
cmc
jle
lods
push
mov
push
andb
push
or
cmpl
movsb
repnz
fimuls
stos
jb
xchg
in
or
mov
sub
in
add
mov
mov
mov
jmp
sbb
xchg
cltd
ljmp
xor
cmp
inc
jle
imul
neg
mov
dec
jg
cmp
dec
sbb
and
pop
xchg
in
dec
sub
mov
mov
lods
ja
jge
lock
mov
pop
scas
stc
push
cs
add
jl
pop
adc
bound
xor
inc
stos
or
adc
and
or
je
popf
fisttps
push
cmp
test
sub
mov
mov
xor
dec
test
cmp
xchg
test
sub
aam
mov
or
add
mov
dec
in
shll
push
loope
in
idivb
jbe
sbb
es
inc
push
push
or
std
ja
fildl
inc
stos
sarb
loopne
iret
mov
jbe
stos
dec
adc
xor
fisubrl
clc
inc
stos
dec
clc
int
std
pushf
es
or
xchg
mov
insb
and
cs
fsub
push
push
ljmp
adc
popf
cld
jp
cs
add
pop
xor
mull
jne
inc
inc
aaa
and
cmpsl
mov
lds
int
ret
cs
test
fistl
pop
jl
jg
ss
ret
push
loopew
test
nop
nop
sti
sbb
in
add
mov
dec
cmpsb
ss
adc
xchg
inc
mov
sub
pop
icebp
leave
sbb
std
out
dec
dec
bound
js
dec
mov
out
aaa
in
jno
inc
mov
into
jle
jb
loope
fcompl
adc
adc
movsl
repnz
and
or
add
cld
dec
jl
negl
sbb
mov
xor
xor
rcll
out
inc
pop
push
out
shlb
adc
out
mov
mov
ss
jge
enter
pop
push
pop
insb
pop
sahf
fmul
mov
call
pop
mov
cs
scas
ljmp
loope
xlat
in
test
adc
ret
repnz
cld
in
add
and
mov
iret
pop
jae
mov
dec
and
clc
fwait
sub
imul
and
xchg
adc
add
rcrl
sub
addr16
sub
fnstenv
jmp
in
loope
xchg
dec
pop
fs
shr
mov
ret
mov
ret
jmp
mov
data16
push
pop
adc
lds
inc
clc
jo
aaa
notl
xor
scas
rorl
pop
loopne
dec
or
andb
adc
or
sti
test
xchg
leave
fcoml
addr16
push
jg
dec
mov
rorb
pop
mov
sahf
cwtl
cld
call
scas
icebp
stos
xchg
imul
scas
imul
loope
repnz
fldl
cmp
pop
push
xchg
add
aas
inc
dec
stos
push
fidivl
or
mov
cmp
sub
jno
cli
lods
or
xchg
outsl
inc
cmp
int3
push
test
inc
int
xor
data16
cmpsl
add
mov
ja
mov
jb
enter
xor
mov
outsl
lock
jne
stc
ret
leave
lds
or
cli
inc
in
out
pop
sbb
or
loop
sbb
rorb
mov
call
jl
shrl
out
cmpsb
packsswb
mov
incb
mov
or
lahf
repz
rolb
decb
outsb
enter
std
jmp
scas
sbb
cld
sbb
xchg
test
adc
jae
imul
std
adc
outsb
jl
test
movsb
rorb
in
sarl
lods
pusha
in
mov
es
add
pusha
xchg
js
flds
lret
jns
dec
or
fcoml
lahf
jle
xchg
push
add
jnp
mov
movsb
pop
add
testb
sub
dec
push
fsubrs
jno
xchg
push
mov
sub
fistl
sarb
inc
mov
dec
gs
push
cmp
mov
adc
cld
lea
sub
push
push
xchg
mov
cmp
and
mov
fstpl
xor
gs
sub
pusha
jo
loop
xchg
dec
in
xor
mov
cmpsb
stos
mov
aas
out
aas
dec
add
jp
in
push
push
rclb
fwait
xor
xor
std
push
xor
arpl
and
and
push
and
cmpb
fdivr
dec
aas
cmpb
pushf
ret
popf
mov
pop
or
inc
add
cmp
adc
mov
ja
push
out
jmp
inc
neg
out
xorb
cwtl
outsl
add
pop
lds
inc
psubq
dec
in
fimuls
out
mov
test
aaa
ss
sbb
ret
push
add
or
mov
push
xor
cs
orb
out
repnz
aam
sub
into
jns
daa
mov
jne
adc
mov
xor
fdivp
xlat
push
sbb
pushf
mov
std
mov
mov
rclb
shll
add
inc
cmp
cmp
and
in
push
mov
mov
int3
in
and
ds
das
outsb
push
clc
rcrb
adc
add
addr16
add
ss
sbb
or
fs
dec
sbb
fwait
xor
mov
iret
xor
addr16
aad
cmp
push
loope
mov
shll
hlt
fstpl
mov
adc
mov
cmpsl
adc
mov
data16
jecxz
lahf
hlt
scas
xchg
in
jle
in
in
cld
xchg
ficomps
mov
insb
aaa
ds
pushf
xchg
jo
cmpsb
and
repz
loope
cmp
push
cmpsl
movsb
test
loope
pop
inc
jb
pop
fs
xor
nop
sbb
xchg
adc
movsb
jl
mov
fsubrl
iret
test
push
daa
and
xchg
mov
jbe
setnp
xor
stc
cmp
jp
adc
pop
cmp
lret
pushf
and
iret
cltd
cmc
jle
ljmp
cmp
pushl
adc
frstor
push
sub
cmp
mov
mov
push
hlt
addr16
std
jbe
xor
cli
icebp
cwtl
cmp
les
rcrl
shlb
fs
rcr
jmp
push
xchg
pop
mov
not
cltd
das
mov
add
jo
les
rcl
test
jnp
test
pop
mov
mov
mov
inc
cwtl
xorb
sub
shll
xchg
jmp
arpl
add
ret
pop
stos
xchg
idivb
adc
loop
mov
add
aaa
sti
je
or
xchg
mov
mov
push
inc
popa
dec
test
fwait
notl
scas
addl
sub
and
pop
push
xchg
push
add
jl
xor
sbb
pop
shll
popa
lcall
sbb
mov
stos
mov
test
gs
fwait
scas
notb
cwtl
sbb
or
mov
and
sub
fwait
mov
inc
lahf
xchg
fwait
in
fucomip
push
ret
fcmove
aam
pop
shrb
sbb
shlb
scas
movsb
adc
dec
mov
inc
fsubrl
cmp
adc
ljmp
test
cltd
loop
orb
mov
mov
pop
add
xor
pop
int
cmc
mov
daa
xlat
mov
insl
jns
dec
ret
mov
loop
lock
dec
xchg
or
inc
xchg
lcall
pop
push
sub
and
cmp
cltd
lods
std
push
push
sub
or
mov
jle
mov
std
sbb
test
cmp
lahf
call
mov
xchg
sar
adc
icebp
push
lock
mov
jne
sbb
stc
xchg
cwtl
pop
mov
sub
and
adc
cmp
xor
es
sarb
and
jmp
outsl
mov
in
leave
and
cmp
inc
nop
fstl
push
jne
jnp
and
sbb
sahf
inc
cmc
cmp
dec
push
sub
pop
loope
popa
pop
jge
push
or
xchg
push
mov
frstor
xchg
push
cmp
sti
mov
adc
fisttpl
daa
cmpsl
daa
inc
jp
imul
negb
enter
addr16
pop
push
cld
loop
nop
and
lock
xchg
or
into
cs
xchg
push
pop
jmp
pushf
aam
xor
bound
and
mov
movsl
pop
and
mov
cs
jbe
stos
pop
cmpsl
pop
or
xlat
or
fs
dec
cmpsb
mov
jne
in
sub
dec
pop
out
rep
jns,pt
or
jmp
imul
std
xor
cmp
pop
mov
aad
xlat
mov
test
pop
ret
mov
ss
push
xchg
pop
fcomip
add
pop
adc
andb
dec
inc
test
lahf
gs
mov
mov
add
mov
scas
in
inc
lea
xor
lods
adc
sbb
sbb
jb
aad
icebp
jl
cmc
add
in
inc
inc
addr16
dec
scas
adc
mov
or
ss
dec
sarl
in
imul
imull
aad
pop
jp
sbb
jg
sub
sub
stc
addr16
push
inc
aam
xor
or
subl
lret
push
movsl
stc
cmp
inc
fstpl
ljmp
push
and
pop
push
pop
clc
lods
mov
fst
into
pop
das
pop
fidivrl
repnz
mov
and
stc
aaa
mov
nop
imul
rorl
pusha
xchg
add
aad
dec
jb
jge
mov
mov
jl
cmp
adc
scas
xchg
ss
mov
movsb
lret
and
cmp
ret
xor
loop
in
out
sbb
int3
push
mov
push
out
inc
and
ds
int
xchg
or
cmc
mov
aad
adc
sub
pop
and
cld
jno
pop
dec
mov
iret
fildll
imul
lahf
sub
adc
aaa
rcll
lret
jmp
sub
test
mov
les
into
std
jecxz
adc
fwait
dec
pop
jno
ljmp
cmp
mov
cmp
imull
push
xchg
fwait
mov
mov
and
test
xor
dec
push
stos
test
sbb
fsts
inc
int
daa
mov
mov
add
mov
jmp
push
push
outsb
pushf
pop
sbb
push
scas
mov
into
mov
cmpsl
adc
adc
notb
jo
xor
xchg
lods
push
adc
ss
rorl
stos
in
in
movsb
push
cmp
or
outsb
fldenv
mov
rorb
add
jecxz
jo
mov
jno
inc
inc
mov
loopne
outsb
dec
stos
iret
lcall
add
jle
dec
outsb
fimuls
jmp
cmpsl
movsb
sbb
jle
std
push
jbe
shrb
pushf
lock
add
and
popa
add
call
mov
enter
add
mov
mov
inc
cmpsb
pop
xor
mov
mov
loop
xor
xchg
and
cmpsb
cmp
xor
mov
jecxz
adc
icebp
outsb
cmp
and
int
in
fisttps
stc
mov
inc
lea
mov
push
mov
pop
aas
and
mov
pop
push
jecxz
ja
lods
mov
add
mov
inc
xchg
movsb
stos
test
xchg
jecxz
xchg
mov
pop
mov
pmuludq
xchg
hlt
je
inc
mov
pop
sahf
mov
mov
jecxz
repz
popf
cmp
mov
lods
jnp
aam
test
imul
orb
rorl
outsl
xchg
and
cwtl
mov
cmp
loopnew
jp
enter
dec
lods
or
lcall
mov
mov
loope
jecxz
mov
enter
xchg
fisubrs
cmp
jl
pop
movl
mov
int
xchg
leave
out
and
aas
lcall
imul
sahf
push
iret
pop
lret
mov
lea
aad
je
cmp
roll
sti
cmpl
xchg
inc
out
mov
jnp
add
cmp
or
and
or
xchg
cmp
add
push
ss
andl
fidivrl
mov
shl
inc
test
pop
mov
lcall
mov
add
sbbl
int3
popf
in
rolb
pushf
cmpsb
sti
pusha
xor
xlat
adc
outsl
sbb
lahf
int3
jle
pop
cli
rcll
or
sub
fs
xchg
shrb
sub
cmp
loop
adc
and
jle
inc
cmp
aaa
sub
addr16
in
jl
add
jo
imul
imulb
movsl
fldenv
repz
or
lods
test
jno
push
push
or
mov
lret
sub
mov
xor
cmp
dec
lahf
add
js
hlt
aad
lahf
jbe
shr
jl
das
sahf
jmp
insw
arpl
pusha
add
mov
pop
adc
bound
adc
imul
fnstenv
sbb
cmp
stos
mov
fisubs
jnp
imul
pop
cltd
in
fdivl
cwtl
inc
ret
rcrb
cmpsb
cmc
test
lcall
jmp
lods
decl
jnp
lahf
jge
loop
movsl
lret
adc
out
pop
shl
les
jle
inc
xor
cli
mov
adc
adc
push
adc
or
add
int
ljmp
add
scas
popf
ret
adc
clc
mov
and
sbb
mov
lret
push
pop
adc
insl
push
mov
js
or
test
lahf
into
sub
inc
and
imul
sbb
not
mov
sub
pop
jmp
dec
cmpsl
pop
movsb
hlt
arpl
cwtl
push
call
sub
inc
sbb
das
in
shrl
push
fs
sbb
add
cmpsb
pushf
sub
in
sbb
mov
add
sbb
mov
dec
push
sbb
clc
pop
xor
insb
add
mov
or
pop
mov
xchg
dec
cmp
nop
xor
cld
sbb
lods
mov
push
xchg
rorb
mov
into
movsb
jp
push
les
jno
mov
gs
orl
test
fidivs
sahf
cmp
mov
cli
sbb
cmp
leave
clc
mov
lret
mov
and
pop
and
dec
in
jbe
arpl
fucomi
aam
xchg
mov
lea
aam
sub
xor
xchg
or
repnz
jb
roll
lret
les
xlat
das
stc
lret
pop
fwait
dec
lods
shlb
outsl
and
cli
test
mov
fwait
fs
push
mov
inc
push
daa
mov
sbb
fwait
aas
dec
inc
cltd
inc
dec
adc
iret
cs
decl
addr16
or
ret
out
sbb
loopne
fmul
inc
arpl
sti
test
adc
in
pop
push
push
sahf
push
lock
pop
pop
or
insb
es
or
mov
pop
push
xlat
nop
fiaddl
push
int
or
jns
or
jecxz
dec
sti
adc
sarb
call
out
cwtl
pusha
out
fstps
lods
out
xchg
stos
in
cmp
cmp
and
xchg
jmp
scas
gs
lret
pop
leave
in
fstpt
pop
lock
out
dec
jo
insb
imul
mov
push
daa
xor
mov
les
loope
dec
adc
dec
push
pop
insl
ljmp
fdivl
cmp
mov
xchg
mov
add
cmp
push
inc
cmp
mov
sub
mov
imul
jecxz
cmp
hlt
mov
dec
sub
popf
mov
lret
adc
adc
add
int3
add
fmull
hlt
sub
xchg
xchg
ret
pop
dec
push
dec
mov
notl
js
scas
xor
inc
js
or
xchg
fs
push
sbb
pushf
ds
sbb
lahf
add
std
adc
imul
cmp
ret
mov
mov
adc
out
pop
jp
or
in
subl
aad
negb
adc
pop
or
sbbl
fiaddl
pop
sub
dec
ret
out
aaa
mov
xor
outsb
xor
repnz
lret
into
roll
mov
jge
inc
mov
jbe
cld
pop
outsw
inc
xchg
imul
adc
sub
pop
or
mov
xchg
enter
pop
push
pop
mov
ljmp
in
dec
shl
xlat
loop
xchg
cs
jae
rorb
xor
dec
xchg
cld
rcll
inc
das
stos
jge
xor
movsl
iret
cli
push
rorb
mov
fwait
cmpb
add
xor
out
jo
inc
cs
adc
inc
test
ja
mov
cmpb
or
fisubl
out
pop
scas
call
push
xor
rcrb
jae
ret
pop
inc
xchg
mov
inc
out
lods
cmpl
call
fcomp
push
fldpi
xchg
xchg
adc
sbb
fwait
jecxz
dec
repz
daa
push
push
jnp
dec
mov
add
test
xor
pop
jg
xchg
dec
add
or
cmp
mov
shl
and
psadbw
out
adc
rcrb
add
aaa
mov
rolb
ljmp
aas
aaa
cmp
ja
loop
inc
shll
mov
in
cli
mov
xchg
jns
out
and
mov
fs
lret
push
int3
adc
aas
rorb
jl
dec
inc
jo
iret
and
jbe
push
mov
lods
mov
push
xor
dec
or
jecxz
mov
jae
xchg
outsb
pop
rolb
xor
xor
in
mov
dec
inc
mov
faddl
jns
adcb
xor
lcall
mov
adc
xlat
movb
mov
inc
cmp
xchg
movsl
push
xchg
rorb
xor
fsubrl
cmp
sub
jle
push
loopne
xchg
movsl
jl
or
pop
addr16
xor
pop
inc
lahf
sub
add
and
mov
push
jl
sbb
jo
jg
mov
in
push
push
loop
sbb
or
and
ret
jge
push
sub
orl
ljmp
sbb
push
sub
sahf
and
sahf
sbb
dec
adc
cmp
aas
fldt
sahf
imul
xor
lcall
mov
int
mov
xor
cmp
fucomi
lahf
lock
out
push
mov
sub
adc
dec
sbb
ljmp
or
sbb
jo
sti
mov
loope
push
fmuls
test
ss
xchg
add
hlt
mul
shll
push
mov
dec
sti
adc
mov
xchg
add
pop
xchg
inc
cmp
test
mov
dec
leave
stos
pop
xor
bound
sarb
push
jbe
push
imul
mov
adc
je
adc
repnz
insl
sub
in
leave
in
ljmp
mov
out
add
shl
mov
jno
pop
loopne
push
sbb
out
push
inc
or
dec
mov
mov
aaa
jbe
movsb
bound
and
xchg
sub
leave
jle
add
rcrb
adc
cmpsl
cld
and
arpl
in
mov
outsb
lock
inc
inc
dec
outsb
call
fstpt
push
sbb
fcoml
das
nop
lcall
mov
out
mov
inc
xor
cmp
xor
das
xchg
mov
cmp
test
pop
imul
call
mov
lret
sub
sarb
enter
add
sbb
fcoml
mov
dec
or
outsb
call
xchg
cmpl
in
jne
std
movsb
xchg
push
dec
mov
or
ss
xlat
xchg
push
xor
or
repz
mov
and
jb
lods
pop
cmpsb
outsb
fsubrl
dec
jae
enter
loop
and
lcall
ljmp
lea
jge
mov
ljmp
loopne
in
shl
stos
push
dec
add
ret
pop
icebp
lret
in
call
mov
dec
mov
push
test
sbb
ror
mov
scas
ja
inc
dec
cltd
mov
mov
xchg
out
out
jge
push
mov
pop
mov
jbe
aas
pop
dec
xor
ret
shl
pop
idivb
jmp
mov
push
leave
popf
stc
adc
int3
clc
fcompl
arpl
or
push
testl
movsb
in
dec
dec
fidivl
xchg
das
or
push
jne
xchg
test
mov
into
sahf
push
jns
ret
jno
imul
ljmp
adc
scas
sarl
mov
adc
pop
push
popa
imul
hlt
icebp
outsl
mov
add
xchg
arpl
xlat
fbld
bound
js
lret
mov
inc
cs
pop
mov
jecxz
jo
push
inc
xlat
sbb
mov
insb
in
mov
cmp
xchg
and
cmpsl
mov
xor
sub
mov
push
or
push
mov
cltd
iret
jle
or
iret
lret
pop
mov
je
dec
sahf
mov
xchg
mov
jno
ret
and
test
clc
or
add
dec
into
push
mov
stc
fbstp
std
pop
pop
in
sub
adc
mov
pop
pushf
adc
sbb
gs
mov
call
mov
jge
hlt
leave
dec
sub
or
clc
pusha
aas
or
in
add
adc
jns
sbb
lods
sbb
sti
cmp
add
jle
pop
adc
add
adc
mov
lahf
call
lret
or
rclb
jbe
xor
add
fadds
out
ret
movsb
dec
test
mov
pop
mov
loope
xchg
mov
rcll
sub
inc
xchg
into
out
popf
pusha
mov
lock
xor
in
pop
and
or
insb
pusha
mov
pop
xor
repnz
test
or
fwait
jae
outsb
pop
sub
fwait
push
scas
mov
add
aam
cmp
dec
jbe
jmp
jb
inc
add
mov
mov
xor
iret
dec
or
js
inc
inc
xor
pop
clc
ja
sub
fwait
les
stos
pop
shr
and
fs
fwait
je
aad
aas
loope
out
mov
or
std
es
jp
adc
jecxz
pop
popa
es
nop
lcall
sahf
or
or
jl
push
push
ret
jno
mov
mov
fbstp
xchg
int3
in
jo
pop
fsts
mov
orl
and
add
cltd
inc
dec
cmp
push
imulb
cmp
mov
push
dec
pop
movsl
scas
nop
sub
adc
dec
add
jecxz
inc
jbe
inc
cmp
fisubl
adc
dec
push
inc
inc
mov
mov
cmp
and
rcrb
pushf
inc
add
dec
scas
stos
in
xor
mov
cld
cli
xor
mov
xchg
enter
outsl
jb
pop
lret
xchg
jp
js
inc
psubw
lods
push
sti
sub
test
cld
call
jle
xchg
out
enter
cmp
out
mov
jnp
adc
loop
pop
jge
addr16
or
pop
das
int3
int3
pop
or
dec
out
lcall
jo
lock
rcr
int
cmpsl
loopne
or
das
or
call
fldt
je
into
dec
lret
fwait
shrl
mov
xor
jnp
or
and
stc
dec
movsl
mov
cmc
test
mul
add
fistl
loopne
sbb
or
pop
mov
sub
test
add
cmpsb
orb
sar
inc
frstor
xlat
out
or
cmpsb
inc
sbb
mov
pop
pop
xchg
pop
push
aaa
mov
loope
movntps
or
mov
mov
add
sbb
and
jecxz
push
inc
test
lcall
addl
jb
fwait
cmp
icebp
xchg
mov
sub
shrl
push
icebp
imul
push
jl
xor
shrl
pop
movl
jle
ret
push
dec
mov
call
repz
or
and
ds
mov
jo
mov
mov
stos
cmc
pushaw
lcall
add
enter
enter
push
pushf
icebp
mov
rcll
lods
sti
clc
sbb
adc
bound
iret
push
movsl
push
mov
push
or
out
jmp
mov
stc
daa
push
loopne
imul
xor
js
mov
cltd
int
push
outsl
jl
sbb
clc
out
xor
push
into
sbb
imul
cmc
sub
xor
cmp
lcall
in
sbb
xor
pop
mov
sbbb
test
popa
xor
xor
cmpsb
das
mov
shlb
jmp
mov
mov
mov
xor
fbstp
fiaddl
fbld
mov
push
je
call
pop
dec
outsb
mov
mov
cmp
std
je
sub
mov
jp
xchg
ljmp
jb
xor
mov
adc
or
push
mov
jns
inc
or
xchg
inc
stos
lahf
pop
movsb
jo
loope
roll
stos
shl
enter
mov
loopne
ret
pop
cld
pop
or
sub
mov
sbb
cmp
ljmp
mov
mov
xor
xchg
call
sub
sbb
sbb
ret
rorb
out
sbb
cmpsl
ficoms
in
cltd
data16
mov
add
fcomp
cmc
pop
dec
xor
jmp
sub
movsb
push
mov
dec
sbb
xlat
or
cmp
daa
dec
ret
cld
inc
push
pop
mov
in
mov
mov
scas
pop
xor
or
lahf
outsb
fstpl
aam
lret
cmp
jg
dec
sbb
clc
cmpsb
jns
rolb
imul
dec
jne
dec
mov
or
jecxz
out
or
mov
inc
cmc
je
adc
or
xchg
je
xchg
movsb
inc
incl
loopne
jne
rorl
add
push
ljmp
xchg
or
mov
pop
cli
sbb
jle
fisttpll
xchg
or
leave
adc
xlat
pop
cmp
adc
movsb
pop
pop
imul
xlat
int
mov
shlb
inc
jns
sahf
xor
mov
aaa
addr16
or
lret
clc
xchg
pop
dec
popa
pop
lods
jmp
aaa
mov
jle
add
or
movsl
aas
pop
clc
xor
mov
pop
imul
mov
inc
or
xor
cwtl
sbb
mov
and
inc
xor
cmp
xchg
jb
outsl
mov
aad
adc
test
or
cmp
mov
jg
xchg
or
sbb
pop
xor
cli
dec
insl
ja
xchg
int
dec
push
mov
js
xchg
cli
lods
sbbb
xchg
popf
in
push
or
inc
lea
fcomip
push
fs
mov
sub
test
mov
pop
mov
add
xchg
popf
mov
pop
add
mov
pop
sbb
inc
icebp
mov
jl
push
ljmp
xor
xchg
add
xchg
dec
mov
lcall
fisubrs
out
sub
loopne
inc
fcoms
dec
je
mov
inc
dec
push
test
cmp
cmpsl
inc
ret
pushf
mov
mov
push
repnz
jmp
cld
pop
dec
xor
negb
cmp
in
pop
pusha
cmc
idivb
xchg
in
xor
outsl
in
pop
shlb
cmpsl
ret
loopne
fstps
clc
or
fldcw
sub
gs
gs
mov
jno
mov
inc
mov
es
sbb
pop
xor
or
movsl
dec
movb
addl
test
push
cmp
sbb
das
mov
aaa
lods
adc
rcrb
lret
jg
jle
loopne
mov
push
inc
adc
cmp
or
pop
shll
test
inc
and
aaa
int
pop
sub
pushf
js
data16
je
sbb
cmp
jmp
sub
xchg
shll
call
jne
cmc
jae
mov
aad
mov
test
push
mov
mov
test
outsb
out
and
push
fcomi
inc
test
hlt
add
scas
mov
into
lret
out
test
adc
push
sub
cltd
dec
xchg
fldcw
iret
je
push
std
imul
fucomi
pop
les
repnz
xlat
mov
jp
jle
and
out
aad
pop
movsb
mov
inc
lahf
or
push
lods
push
fimuls
aad
and
jnp
and
pandn
inc
cmpsl
adc
fimull
in
or
into
fs
loop
jmp
ds
lea
xchg
mov
xchg
imul
dec
mov
or
jo
push
fs
inc
dec
hlt
cmpsl
mov
jb
test
sbbb
xor
shl
cmp
pop
cmc
cmp
lret
sub
or
sub
xor
jecxz
popa
add
xchg
stos
push
cmp
idiv
adc
mov
mov
jmp
fcoml
lock
dec
cmpsl
sarb
fsts
mov
cs
jnp
dec
xor
in
cmp
pop
sub
mov
pop
test
xorl
in
fs
jmp
roll
andl
push
fs
push
mull
inc
insb
in
fiaddl
ret
js
sbb
add
into
dec
xchg
pop
test
push
out
inc
hlt
push
dec
aam
jecxz
adc
mov
fdivrl
int3
rclb
out
cld
inc
xchg
push
subl
mov
cli
cmp
jg
add
mov
jne
mov
sub
in
fdivr
dec
popf
add
scas
aas
push
pusha
cltd
dec
inc
adc
icebp
pop
js
mov
lcall
scas
pop
scas
sbb
fs
dec
movsl
sbb
lcall
jle
jne
shlb
push
sub
leave
in
in
out
cli
push
lret
iret
lret
inc
push
test
lods
sub
jg
mov
adc
iret
cmpsb
sub
xchg
insb
sbb
inc
nop
xchg
je
notb
ror
mov
std
pop
inc
dec
test
in
sarl
jle
or
xor
sub
lea
int3
lods
stos
rorl
add
adc
and
in
inc
mov
aas
mov
movsb
nop
push
pop
jns
sahf
shl
jge
movsl
ss
pop
push
inc
xchg
test
mov
mov
push
jns
mov
or
subb
and
mov
shrb
push
push
mov
xchg
rsqrtps
inc
fildl
add
imul
int3
jnp
pop
gs
mov
push
ret
inc
jecxz
lcall
push
loop
ss
push
fcmovb
fmuls
fwait
mov
push
cli
test
mov
push
and
stc
pop
pushf
pushl
pop
bound
mov
xor
inc
cwtl
xchg
xchg
ja
jmp
jnp
test
ret
add
sbb
jmp
push
ljmp
sbb
mov
mov
loopne
aaa
test
sbb
sbbl
filds
jecxz
jmp
cmpsb
call
fmull
in
vmovq
add
mov
cmp
daa
movsl
or
push
out
pop
outsl
jecxz
in
imul
add
jp,pt
add
inc
inc
stos
push
jg
test
jno
jb
js
lret
xor
and
test
xor
out
sbb
push
pusha
jns
xor
aas
xor
jns
fcmovnu
adc
push
mov
out
dec
gs
in
insb
jne
lds
imul
dec
popf
insb
sbb
lea
repnz
push
aad
popa
test
pop
inc
sbb
sbb
lahf
movsb
shlb
sahf
arpl
mov
xchg
and
xlat
push
or
dec
fs
dec
mov
in
mov
push
jno
stc
rolb
push
sub
inc
pop
xchg
mov
loopne
movsb
std
mov
daa
xchg
or
scas
outsb
clc
subl
inc
adc
pop
loope
cli
repz
cmpsb
and
fldcw
xor
clc
inc
sbb
inc
cmp
xor
inc
or
mov
xchg
dec
stos
push
sbb
jo
mov
rcrl
mov
scas
inc
push
cmpsb
daa
pushf
inc
pusha
push
popf
mov
rolb
cmpsl
lods
pop
cmp
imul
cld
dec
pop
outsb
in
inc
out
roll
pop
shll
iret
shrl
or
xor
insb
dec
inc
lret
pop
mov
jp
fbstp
sub
lea
out
shlb
push
add
fbstp
js
stos
push
out
dec
xchg
test
lock
jge
cmp
or
popa
and
jb
add
lock
cmp
insb
adc
add
lahf
mov
jb
sub
xchg
xchg
jl
pop
popl
dec
mov
orl
lods
mov
mov
popf
scas
call
sbb
or
rcrb
cs
aaa
inc
xchg
mov
pop
popa
push
arpl
dec
jno
pop
test
out
shl
add
mov
inc
fcomip
xor
rorl
push
out
loope
in
mov
mov
mov
or
xchg
dec
pop
inc
roll
ss
dec
or
sbb
sbb
inc
scas
xor
mov
dec
movsb
mov
or
jne
imul
jle
pop
sub
out
mov
int
ja
ret
mov
and
xorb
flds
mov
push
add
out
jbe
or
iret
mov
fs
xor
divb
cmp
bound
sbb
sub
aas
inc
sbb
ljmp
ja
xor
in
out
jg
jne
cmpsb
loope
clc
mov
fwait
adc
call
rclb
stos
fucomi
push
sbb
dec
popa
orl
pop
scas
mov
push
les
pop
and
push
cs
push
push
add
in
mov
loope
xchg
push
fildl
sbb
scas
popa
inc
pop
stos
cmpb
pop
cmp
xchg
stos
shlb
test
pop
lret
push
lea
cmc
or
cmpb
jns
into
nop
sub
icebp
jle
dec
pop
mov
mov
sarb
cmp
pop
xor
arpl
add
out
add
jns
or
out
push
mov
xchg
test
outsl
and
mov
dec
adcl
out
jecxz
push
sub
sbb
flds
xchg
fwait
inc
cli
int3
adc
xchg
ljmp
andl
bound
push
push
loop
cmpsb
ret
lcall
or
lods
jno
les
jbe
idivb
test
imul
mov
pop
cld
insb
mov
clc
push
fwait
into
sbb
shll
mov
sbb
nop
xor
lds
sbb
mov
out
loopne
or
in
pop
dec
jnp
ret
insb
aas
dec
stc
inc
adc
loopne
cmpl
mov
call
enter
adc
push
add
sub
jo
cmp
out
insb
jns
push
cmc
inc
jb
fsts
clc
in
int
push
fldl
xchg
cmp
mov
faddl
push
inc
xor
xchg
adc
lcall
ret
int
xchg
sbb
lods
or
xchg
rclb
mov
mov
add
fs
mov
rclb
fldt
sbb
push
and
push
xchg
mov
xchg
push
idiv
test
push
out
and
push
mov
aad
ljmp
pop
pmulhuw
or
aam
push
andb
scas
test
lret
scas
add
sub
test
push
pop
movsb
and
xchg
add
icebp
test
mov
push
jb
aam
jne
cld
shl
lea
add
sbb
xchg
add
imul
mov
lock
nop
inc
inc
and
fldt
xor
fisttpll
cltd
add
mov
xchg
inc
clc
push
pop
mov
cmp
out
dec
add
push
rolb
mov
adc
push
mov
inc
jne
add
fbstp
out
fisubrs
imul
out
std
push
pop
loopne
js
push
stc
mov
popl
nop
cmp
sub
cli
adc
daa
xchg
xchg
test
ja
or
xchg
fstl
jl
dec
xor
adcl
add
into
add
cmp
sti
rorb
jne
stos
mov
shrl
lods
inc
prefetchw
ljmp
cmpsl
int
inc
jecxz
push
dec
mov
into
cmp
js
icebp
cld
sub
nop
addr16
xchg
and
punpckldq
movsl
mov
jne
adc
lret
mov
push
mov
js
mov
xchg
and
xchg
push
insb
into
jmp
repnz
sbb
dec
je
jbe
dec
mov
divl
scas
dec
mov
dec
arpl
cwtl
xlat
pop
push
dec
out
xor
loop
fwait
pop
push
xchg
je
scas
flds
vunpckhps
mov
sub
mov
mov
pop
push
fwait
jl
gs
fucomp
sub
dec
int
stos
repnz
call
sub
lea
push
sti
cld
or
sub
int3
sbb
mov
jbe
and
das
push
aaa
aam
mov
mov
aad
cmp
push
sarl
sbb
jo
fidivs
jne
jo
fstpl
add
mov
push
fiaddl
repz
sub
mov
out
vmwrite
pop
mov
mov
lret
mov
inc
jbe
pushf
inc
push
lahf
xchg
jmp
cld
stc
negb
push
call
cmp
bnd
xor
pop
aam
xchg
mov
addr16
loopne
mov
icebp
jno
stos
push
push
dec
fnstsw
sub
cmp
iret
sbb
xchg
shll
cwtl
movsl
push
mov
push
sti
push
test
rorb
scas
sbb
ljmp
add
enter
mov
push
jo
adc
inc
loope
mov
lods
xor
xor
and
sbb
mov
pop
lcall
push
xchg
movsl
sub
push
add
mov
pop
or
lea
lock
pop
inc
or
inc
movsb
add
daa
mov
incl
and
xchg
dec
stos
xor
ret
xchg
dec
jmp
das
mov
aaa
add
xchg
cmp
ljmp
push
push
mov
sub
and
lea
mov
jns
mov
xor
adc
or
sbb
cmp
lods
arpl
push
xchg
adc
jge
das
sahf
sub
jno
inc
dec
sub
mov
iret
or
lret
popa
out
xchg
mov
lods
sbb
inc
test
test
outsb
dec
out
adc
or
and
or
or
jmp
mov
test
lret
xor
aaa
int3
outsb
cmp
iret
es
adc
cmpsb
push
cmp
mov
or
filds
dec
jg
pop
movsl
add
pushf
jge
jmp
fs
sbb
and
mov
aaa
in
mov
gs
jge
mov
push
jns
pop
mov
lret
es
call
push
daa
aam
addr16
addr16
pop
sbb
outsb
add
idiv
icebp
inc
stos
adc
lcall
and
stos
out
mov
aas
jnp
int3
loop
dec
imul
pop
inc
or
sub
inc
mov
imul
and
jne
sub
push
and
ds
xor
or
lods
mov
fs
and
lods
mov
mov
lcall
jg
jbe
arpl
incb
test
adc
out
mov
jg
jp
xchg
arpl
cmpsl
imul
add
das
push
rep
add
pop
mov
pop
fstps
test
das
jbe
inc
movsb
repz
cmc
inc
dec
jne
aas
xlat
cwtl
jp
dec
add
sub
fisttpll
jno
sbb
push
mov
push
cmc
xchg
pop
fs
mov
repnz
xor
les
bound
dec
xchg
xchg
es
add
xorl
push
adc
out
scas
cmc
nop
xlat
pop
in
in
stos
jge
aad
out
es
adc
jecxz
test
stos
je
xchg
sbb
test
push
push
repz
cwtl
aaa
movsb
outsl
sti
inc
test
or
mov
clc
fwait
fwait
cmp
xor
fcmove
cmp
inc
sahf
movsb
inc
test
es
aam
cli
jge
loopne
jmp
fildl
insb
xchg
cmp
and
mov
sbb
sub
iret
push
adc
pop
push
fsubrp
mov
push
int
scas
mov
ficompl
cmp
inc
leave
aad
dec
mov
stos
dec
in
xor
daa
scas
or
pop
push
cmpsl
jp
jno
cmp
es
xchg
or
aaa
xlat
pop
dec
loop
lods
lret
adc
add
repz
add
in
mov
or
sub
mov
lcall
and
bswap
pop
lret
sarb
add
pop
sahf
xchg
in
dec
mov
inc
pop
test
and
ftst
arpl
scas
push
inc
adc
test
lcall
jge
fs
sub
pop
jmp
xor
fists
pop
sub
jno
pop
nop
scas
fcompl
mov
sbb
test
fnstsw
loop
push
fstps
push
sti
les
lahf
bound
xchg
fimull
aaa
das
orb
push
rclb
add
xor
push
cltd
sbb
xchg
and
jl
xor
xor
dec
cmc
pop
add
loop
inc
sbb
and
ja
dec
xor
sbb
xchg
in
inc
or
pusha
imul
mov
jp
jp
insb
cmp
mov
mov
and
out
fs
lret
popa
cli
icebp
imul
cltd
sbb
cltd
rorl
jmp
xor
sti
movsl
test
loope
call
inc
pop
int
movsl
daa
fcomp
bound
aaa
je
adcb
lods
in
sub
push
aad
mov
insb
icebp
mov
imul
dec
sti
test
adc
pop
mov
divl
rcrb
fs
push
mov
pop
xchg
jmp
jb
cmc
xchg
cmpsb
fisttpll
add
aam
xor
or
je
paddb
aas
fcomp
or
es
cmp
push
lods
or
outsl
mov
lea
test
repnz
add
fdivrl
daa
in
push
in
test
rol
jmp
adc
pop
inc
imul
or
xlat
cli
jae
xor
ljmp
cmp
rclb
dec
sub
lods
adc
jae
sbb
rcl
xchg
test
mov
sahf
out
imul
scas
mov
stc
jle
idivb
sub
fdivrp
dec
bound
adc
inc
mov
xchg
icebp
and
mov
push
loopne
mov
add
dec
lret
mov
and
push
mov
lock
cwtl
lret
loop
xchg
mov
int
sbb
push
movsb
jle
jae
jge
sbb
lret
stos
sbb
or
lret
ja
cmp
fwait
hlt
pop
inc
xchg
mov
xchg
add
xchg
push
leave
pop
into
adc
ljmp
add
mov
shrl
test
mov
into
outsl
loope
mov
sub
mov
loope
xchg
jnp
mov
sbb
push
inc
sbb
xor
pop
leave
dec
push
das
arpl
es
xchg
pop
sub
cltd
data16
movsb
lods
lahf
push
add
or
jle
push
cmc
sub
adc
sub
scas
xor
outsl
inc
jle
sub
xchg
mov
fimuls
dec
jmp
pop
cmp
mov
xchg
cli
adc
outsb
cmp
int3
scas
sbb
push
in
addr16
pop
in
daa
test
dec
pop
adc
sub
adc
in
addl
jbe
mov
and
movsb
push
jb
xchg
out
xchg
es
add
std
push
cmpsl
inc
sarl
pop
add
or
lods
std
jnp
arpl
iret
les
mov
fwait
xchg
out
repnz
pop
clc
mov
out
mov
int
lods
xchg
add
orb
mov
in
das
bnd
cmp
out
lds
movsb
pop
xchg
in
mov
pop
pop
cld
cmpsb
pop
lock
sub
aas
orl
ja
inc
push
xor
pop
shll
jno
lea
mov
dec
jmp
mov
mov
jg
push
mov
cld
sbb
cmp
test
cmc
cmp
lret
mov
mov
pop
add
dec
das
stos
aas
pop
mov
and
lods
call
testl
lahf
fsubs
sbb
xor
aad
dec
jno
mov
lcall
mov
mov
or
lret
push
and
jb
popf
aas
mov
or
loop
cmpsb
fdivr
or
mov
je
fs
or
test
rorl
dec
sbb
jp
add
pop
test
jbe
jb
mov
outsl
clc
lock
add
jmp
mov
xchg
js
xor
stc
and
sub
xchg
adc
cmp
fcmovnu
mov
int3
mov
int
rorb
pop
into
inc
cmp
insl
aaa
inc
jecxz
sub
movl
aaa
repnz
adc
test
pop
leave
cmp
adcl
andl
push
out
xchg
icebp
pop
test
pop
loope
or
insl
mov
push
sub
mov
cmp
outsb
jno
push
jb
cmp
jl
adc
mov
xchg
push
inc
xchg
addl
aaa
push
lahf
or
mov
stc
pop
int3
in
enter
cli
push
fcompl
adcl
aaa
cwtl
dec
xchg
test
inc
repnz
push
cmc
sub
dec
mov
outsl
fcomi
loop
cltd
push
and
adc
leave
sbb
ss
xchg
mov
sbb
lahf
out
pushf
arpl
mov
xor
aaa
inc
addr16
fnstsw
cltd
mov
ds
test
lea
or
pushf
mov
xor
ja
sub
cmc
repz
jg,pt
adc
imul
or
in
mov
in
mov
xor
push
jg
xor
add
add
adc
cmpsl
xchg
mov
sub
sarl
std
add
sbb
repz
push
and
adc
cwtl
or
dec
imul
jg
adc
and
sti
gs
xor
into
shll
scas
mov
pop
das
and
jno
stos
mov
mov
jns
mov
filds
jmp
jg
jmp
data16
sub
ss
pop
test
call
xchg
mov
adc
push
cmp
test
ds
xor
cs
xchg
dec
jmp
insl
adc
inc
sub
sahf
imul
lret
xchg
cli
adc
fs
icebp
test
sub
mov
dec
jecxz
adc
push
fs
mov
xor
push
xor
sub
mov
push
icebp
pop
push
xchg
movsl
insb
jo
mov
faddl
fistpll
jnp
and
push
sbb
sub
mov
dec
inc
or
push
jb
dec
cmp
leave
mov
shll
sbb
inc
xor
aas
sarb
sarb
add
pmaddwd
ss
mov
mov
mov
pop
fstl
popa
lahf
or
orb
test
cmc
sub
push
jp
shrb
dec
ljmp
stos
dec
lock
loopne
sub
and
mov
ja
mov
out
fisttpl
jbe
test
inc
mov
pop
push
loop
mov
in
cmpl
dec
adc
testl
add
inc
dec
push
in
xchg
pop
dec
or
rol
shll
adc
adc
repz
js
movsb
or
adc
jmp
dec
push
add
std
mov
cltd
insl
out
into
pop
inc
int
sub
mov
xlat
adc
push
scas
fiadds
movsl
xor
mov
pop
sahf
and
sub
mov
xchg
jnp
xor
add
test
mov
inc
ret
aam
sbb
mov
mov
dec
xchg
xchg
scas
cmp
lock
ret
sbb
mov
ret
jmp
xchg
aas
xorb
or
cwtl
sub
mov
es
mov
shrb
and
cld
cltd
mov
nop
rclb
or
shl
sbbb
lahf
mov
es
add
je
movsl
outsb
jle
xchg
adc
aam
sbb
dec
xchg
and
hlt
call
movsb
jnp
pop
and
int3
or
insl
mov
xchg
adc
arpl
sub
das
inc
sbb
ds
jmp
mov
xor
mov
lea
cmp
fcoml
shl
out
add
inc
lods
pop
jp
je
ds
adc
aaa
andl
xor
sub
loop
fcmovnb
or
add
movsb
stos
jbe
fsubr
pop
das
xchg
clc
popf
jae
sbb
imul
in
mov
aam
mov
repnz
xorb
jbe
aas
push
mov
and
or
jecxz
sub
xchg
in
je
or
jo
add
mov
dec
sbb
xor
add
jp
inc
scas
mov
adc
dec
cmpsb
inc
ljmp
dec
aaa
pop
pop
jnp
std
aam
xchg
rcrl
cmc
in
aad
add
fistpl
push
cmpsb
push
pop
test
sbb
std
xchg
push
cmp
xor
sti
sti
mov
imul
daa
jp
jb
sub
add
aaa
testb
mov
xlat
in
adc
sbb
add
popf
imul
fs
add
or
fisttps
adc
lahf
xor
flds
jo
addr16
into
mov
dec
int
cli
fdiv
xor
shrb
inc
fucomi
xchg
xor
in
fwait
loop
clc
ljmp
xchg
sbb
test
mov
sub
dec
cmp
in
lea
jae
out
data16
cwtl
addl
into
and
add
enter
insl
inc
push
pop
adc
pop
inc
ret
mov
cld
loopne
sbbl
rcr
loop
xor
adc
sbb
icebp
inc
or
negb
cmovo
imul
xor
and
inc
lods
enter
xchg
mov
jl
sarb
ljmp
inc
movsl
xor
repz
icebp
mov
cwtl
adc
mov
ror
dec
sbb
adc
mov
sub
ret
push
nop
std
xchg
scas
xchg
push
nop
sahf
xchg
pop
xchg
rorl
mov
in
mov
jo
sbb
shl
mov
jne
mov
ss
cmp
jmp
pop
out
pop
inc
sbb
int
or
outsb
jb
and
gs
mov
cs
imul
mov
mov
pop
mov
iret
and
call
lea
lods
xor
in
pop
jmp
push
outsb
imul
push
xchg
out
mov
or
jb
or
xchg
xchg
lret
adcb
add
add
push
pop
fs
ret
pop
inc
jb
xor
jmp
mov
xor
xchg
scas
mov
cmp
pushf
sbb
push
ja
xor
jmp
mov
lcall
jl
lcall
daa
cmp
scas
xchg
call
imul
mov
test
addr16
lods
push
xchg
iret
sbb
shrb
shrl
mov
push
mov
xchg
fcompl
popf
dec
icebp
pop
sbb
or
lods
dec
xchg
jae
shl
cmpsl
in
cmpsl
cmp
add
push
pop
cmc
mov
lahf
in
dec
addb
add
andb
fdivp
jp
fwait
add
xchg
mov
in
mov
lods
iret
ret
es
gs
lods
pop
loop
imul
aaa
imul
xchg
dec
lock
das
cld
pop
jo
stos
jecxz
dec
push
or
jmp
xor
in
dec
scas
pusha
xor
pop
mov
mov
dec
dec
jg
cmpsl
jp
into
mov
jae
xchg
cmc
pusha
adc
adc
lret
mov
push
cmp
sbb
cmp
fidivrs
mov
repnz
lret
dec
add
lret
mov
sub
cmp
or
dec
bound
ret
mov
mov
pop
and
lret
hlt
dec
in
stos
push
push
and
lds
into
mov
mov
mov
jns
dec
test
pop
repz
xor
movsb
add
push
out
mov
jle
mov
mov
cmp
and
enter
in
inc
sub
sub
int3
and
fwait
iret
ds
dec
mov
cwtl
xlat
icebp
dec
cmp
loope
leave
test
push
inc
lock
xchg
jge
mov
xor
popa
incb
mov
pop
test
adc
ds
dec
jl
inc
jns
mov
leave
lahf
ret
cmpsl
jmp
scas
loopne
add
out
add
aam
cld
jno
aas
sahf
daa
ror
sub
push
xchg
icebp
and
loop
pusha
mov
movsb
gs
pushl
out
or
in
cmpsl
and
fidivrl
xor
push
call
aad
jg
mov
inc
cwtl
aaa
jno
cmp
sti
stc
pop
mov
lods
sbb
mov
mov
in
sub
lahf
add
pop
sub
mov
add
xor
xchg
pushf
test
xchg
adcl
or
shlb
pop
or
sbb
subb
adc
ficompl
in
cmpsl
lcall
dec
pop
jne
dec
cmp
shlb
or
lds
out
pop
xchg
sub
adc
xor
add
outsl
mov
bound
jl
out
shll
sub
and
sbb
aad
loope
mov
inc
ds
mov
and
in
xchg
sarl
shrl
arpl
rcrb
xchg
adc
sub
xchg
sti
jecxz
pop
mov
mov
fistps
cmpsb
lods
jnp
pop
ljmp
inc
test
in
jo
test
divb
roll
mov
shrb
cltd
in
inc
jg
adc
dec
in
lret
adc
loop
stc
sti
int
jmp
push
dec
arpl
xor
jo
adc
pop
sbb
shlb
outsb
mov
push
pop
mov
ja
scas
call
mov
mov
leave
sub
test
lods
iret
test
mov
sub
or
add
mov
sub
fwait
orl
xor
int3
add
pop
xchg
fimuls
nop
les
inc
or
push
mov
fucom
test
aas
aam
fistps
sub
xor
rorb
imul
fildl
mov
mov
test
ds
loopne
dec
jbe
cli
sbbl
negb
insl
insb
imul
pushf
cmp
adc
cwtl
mov
fsubl
and
insb
adc
pop
enter
das
fistps
lods
pop
sub
inc
dec
out
xchg
es
cmp
pop
repnz
nop
dec
iret
in
cmpsb
adc
pop
xchg
fxam
outsl
dec
dec
dec
push
pop
imul
adc
arpl
mov
mov
sahf
fs
mov
xchg
enter
and
mov
mov
xlat
insb
fs
sbb
fwait
in
jno
sbb
arpl
in
mov
xor
or
in
cmpsl
xchg
and
push
cmp
cmc
pop
xchg
mov
inc
lahf
push
std
test
pop
xchg
ret
mov
cmp
inc
enter
cmp
xor
cmc
jmp
push
inc
mov
inc
mov
mov
jmp
or
out
mov
mov
fcompl
inc
cmc
rorl
pop
out
das
jno
lock
repnz
xchg
sub
cli
xchg
and
movsb
fwait
js
ret
mov
rclb
and
mov
mov
cli
pop
scas
out
adcl
pop
dec
xchg
add
std
stc
cmp
add
int
push
iret
mov
push
jp
and
sti
cmp
pushf
push
cmp
sbb
pop
popa
mov
fldl
mov
xchg
fs
xchg
orl
outsl
addr16
cld
and
loopne
nop
lds
movsb
add
inc
pop
or
bound
test
sti
adc
outsl
loopne
fistpll
es
mov
cmp
movsl
pop
ret
push
pop
mov
push
fildl
mov
fsub
insb
movsb
cld
and
lcall
movsb
dec
mov
jo
cmp
lret
cwtl
dec
sbb
jnp
aad
test
cmpsl
imul
sub
rorl
mov
lods
dec
adc
inc
mov
mov
es
bound
pop
xchg
xchg
pop
pop
movsl
int3
jecxz
and
addr16
xlat
incb
loop
mov
xchg
fsubrl
repnz
daa
out
xchg
bound
popa
push
icebp
pusha
mov
pop
pop
add
das
imul
pop
loope
xchg
xor
xor
jle
sbb
inc
or
or
ret
jae
pop
scas
in
mov
adc
dec
mov
fcompl
stos
lds
sub
loope
inc
rcll
mov
xlat
js
mov
lret
je
je
push
push
scas
outsl
sbb
stos
test
fnstcw
mov
cmp
out
enter
xor
push
jb
jnp
inc
sub
pop
lret
addl
repnz
or
cmp
push
pop
dec
sbb
aaa
lret
fiadds
fists
and
add
xchg
insb
das
or
adc
std
es
adc
mov
lahf
pop
inc
mov
sahf
and
sub
cmp
mov
stc
mov
test
mov
int3
cmp
pop
push
push
test
add
add
push
cmp
jp
push
xchg
cltd
pop
sub
xor
das
fnsave
loop
stos
iret
nop
lea
out
or
xchg
jb
and
cmp
rol
mov
push
in
dec
cmp
jmp
jno
lahf
sti
popa
bound
jmp
xor
jge
stos
lea
push
ret
movsl
adc
movsb
stos
mov
aad
sarl
je
lds
ficompl
fs
imul
xor
xchg
cwtl
adc
and
movsb
xor
cmp
ret
mov
xchg
daa
dec
and
or
push
aaa
push
imul
mov
adc
arpl
and
sahf
aaa
xor
stos
cmpl
inc
test
or
call
xchg
mov
movsb
mov
in
clc
clc
loopne
xchg
inc
dec
mov
mov
dec
adc
push
out
mov
mov
aas
pop
pop
fistps
xlat
xor
and
push
js
out
xlat
cli
push
push
in
ja
mov
cmpb
cld
xchg
and
mov
mov
mov
xchg
stc
push
imul
sti
jno
leave
mov
xor
sahf
add
adc
xchg
add
mov
roll
addr16
cltd
loop
pop
xor
sub
cmp
cli
mov
mulb
mov
jp
dec
pushl
shlb
cltd
aad
xchg
adc
mov
gs
je
adc
cli
popa
lcall
mov
ret
push
sub
pop
nop
sub
test
mov
hlt
inc
out
dec
add
ret
dec
sti
adc
dec
jns
push
dec
ds
xor
cmp
js
mov
mov
pop
icebp
add
push
js
sbb
loopne
dec
insb
sub
mov
jno
repnz
out
adcb
in
ljmp
cmp
fldenv
mov
xchg
mov
dec
dec
pop
arpl
inc
fwait
es
sti
fsubp
pop
push
insl
popl
cmp
xchg
sbb
scas
lcall
mov
mov
or
ret
int3
call
xchg
jb
add
daa
and
data16
out
fs
push
xlat
ja
inc
jp
shl
in
sarb
pusha
mov
mov
arpl
test
pop
js
jo
cwtl
jnp
out
jbe
inc
sub
mov
inc
in
sbb
pop
and
push
fwait
cwtl
inc
in
xor
test
dec
mov
pop
adc
xor
in
adc
push
mov
scas
out
mov
rcl
add
sub
inc
sub
adc
sbb
mov
and
ljmp
inc
es
cmp
mov
mov
cmp
notl
fidivl
mov
test
outsl
fisubrs
js
add
xchg
stos
xchg
stos
fbstp
pop
sarl
out
inc
dec
and
inc
fcmovnb
pop
dec
mov
mov
lret
pop
adc
pop
xchg
mov
or
shrl
movsb
sti
pop
sahf
sbb
mov
test
add
loope
mov
mov
lret
rcrb
fsubr
adc
pushf
fbld
daa
mov
pop
es
inc
and
sub
add
xor
xchg
jge
mov
jecxz
test
shll
ret
adc
out
lods
fistps
xchg
jg
js
mov
mov
aam
mov
and
push
and
pop
add
xchg
or
sbb
jo
mov
sbb
pop
dec
xorl
lret
das
or
dec
test
add
mov
scas
mov
mov
ss
stos
xchg
dec
das
mov
or
out
clc
push
out
xchg
scas
enter
add
fisttpll
dec
lods
arpl
or
orb
jmp
inc
pop
arpl
or
pop
mov
repz
dec
add
into
pop
in
mov
and
rcrb
sub
cld
jo
and
jb
loopne
adcl
inc
jo
aaa
mov
or
mov
sub
cmp
xadd
inc
test
jbe
enter
ljmp
sub
jge
pop
add
push
xchg
xchg
lea
sbb
mov
mov
adc
lods
push
sub
movsb
push
lahf
orb
out
lret
test
aam
jge
push
test
test
xor
fs
stos
fdivl
dec
fidivs
jg
fstpt
push
sub
push
add
or
xor
outsl
inc
fbstp
rcrb
jl
lahf
lret
ja
nop
xchg
add
in
mov
xchg
ds
sub
add
aas
add
arpl
add
cmp
lock
jg
mov
popf
iret
jo
mov
mov
daa
mov
outsl
outsl
xchg
cmp
ja
insl
xchg
dec
mov
hlt
ror
lock
clc
rorl
data16
in
add
pop
test
sub
mov
inc
es
stc
cmp
pop
mov
xsaves
cmp
mov
add
push
push
test
leave
stc
jl
ja
or
aas
fnstsw
mov
jmp
popaw
ja
mov
push
push
orl
ds
jb
mov
test
push
sub
mov
sar
and
leave
mov
lds
lret
popf
ret
xchg
aad
mov
cmpsb
add
jb
jno
ja,pn
adc
push
push
push
cmp
fwait
and
popa
ss
repz
push
es
iret
arpl
std
jl
fwait
pop
clc
push
fists
cld
or
rclb
pop
std
xchg
mov
outsb
jp
mov
aaa
pushf
cmp
and
inc
dec
lahf
or
filds
add
xchg
fprem1
negb
aam
leave
push
ss
or
or
mov
cmpsb
lret
push
xor
out
test
mov
xor
and
and
mov
xchg
out
aam
cmpsw
jp
mov
hlt
lahf
sbb
xchg
xchg
adc
sub
insb
push
xor
inc
cmp
mov
ss
push
scas
icebp
xorb
mov
cmpsl
jne
cwtl
ja
imul
lret
imul
push
mov
fdivrl
sbb
pop
or
sbb
and
sbb
shlb
and
sbb
add
iret
in
dec
outsl
aad
xor
or
jno
hlt
add
mov
dec
bound
inc
xchg
movsb
dec
mov
jge
push
cltd
pushw
lds
rcrb
shlb
jns
imul
mov
push
es
or
jl
add
shll
test
mov
cs
sub
xchg
xchg
jbe
arpl
lods
in
ja
cltd
and
jmp
add
into
pop
xchg
mov
mul
cltd
stos
xor
jecxz
movsb
cmp
xchg
out
es
ja
sub
daa
jmp
push
jns
in
sbb
movsl
test
std
push
cmp
dec
cli
pushf
popf
jmp
je
cmpsb
cltd
xchg
push
adc
adc
push
push
dec
inc
inc
push
inc
jge
popf
mov
pop
push
scas
xchg
push
mov
leave
mov
add
mov
inc
movsb
add
in
cli
cld
lods
test
add
sets
push
hlt
clc
lret
iret
inc
sahf
inc
rcrb
jbe
sub
out
mov
push
stos
sub
pusha
mov
push
lcall
mov
push
lahf
gs
out
xor
ljmp
pop
dec
mov
xor
test
ss
inc
addb
das
out
jl
ja
push
sub
hlt
pop
int
subl
mov
mov
sbb
cmpsl
arpl
lcall
xor
add
jbe
mov
pop
ja
push
in
push
packsswb
and
sbb
jg
adc
inc
or
jne
pop
mov
dec
push
ds
fcoms
mov
mov
enter
jo
mov
push
and
int3
mov
data16
cmc
mov
bound
shlb
add
daa
lods
add
repnz
sbb
jo
mov
lahf
sbb
stos
mov
imul
jno
pop
stos
insb
ret
sbb
mov
insb
jp
inc
leave
adc
jne
rcll
dec
sub
jno
cmp
mov
and
xchg
mov
repz
pop
stos
push
jg
sbbb
mov
out
pop
hlt
mov
xchg
insl
and
rorb
enter
mov
jbe
out
movsb
mov
out
push
or
in
cld
hlt
jne
test
sbb
sbb
xchg
mov
add
in
pop
call
push
subl
mov
jnp
and
add
pop
mov
faddp
mov
jo
into
out
push
scas
cmp
jo
cs
xchg
outsb
outsb
arpl
mov
imul
into
sbb
sub
pop
push
cmp
mov
pop
adcb
push
inc
dec
sub
push
incb
inc
inc
mov
clc
and
push
cmpsl
out
pushf
or
xor
out
dec
dec
or
movsl
xchg
ret
and
xchg
outsl
lret
pop
lock
mov
iret
stos
inc
ret
insl
mov
dec
sti
cmp
in
arpl
movl
and
mov
test
test
push
mov
das
std
dec
cmp
stos
icebp
pusha
mov
test
stos
mov
aam
and
push
and
fdivr
outsb
and
adcb
mov
sahf
aam
loopne
mov
int3
pop
jo
sub
jne
cmpsb
repz
mov
test
sub
dec
lcall
hlt
imul
cltd
cmp
leave
fsubrl
test
jmp
into
rclb
pop
mov
or
stc
subb
mov
pusha
mov
jp
jae
xor
fldcw
push
sub
in
xor
xlat
lahf
and
bound
call
xchg
inc
lods
int
inc
xor
in
add
insb
popa
xchg
jbe
shlb
lock
sbb
fstps
jb
mov
ja
mov
or
cld
jecxz
cltd
fisubl
mov
fiaddl
outsl
lods
lahf
xchg
pop
aad
cmp
sbb
imulb
add
mov
sbb
xor
cmpsb
in
lcall
movntq
out
lret
and
and
addl
test
dec
jne
out
sbb
sbb
pushf
adc
lahf
mov
xor
jg
mov
pushf
cs
jo
insb
sti
icebp
sti
int3
sarb
add
mov
sti
push
jg
in
mov
and
dec
jno
lods
cmc
push
sbb
mov
mov
arpl
xchg
popa
fisubs
mov
cmp
andl
test
aam
jmp
xlat
mov
inc
aam
shlb
mov
arpl
mov
loop
fsubrs
aas
add
adc
xor
test
fmuls
inc
call
lea
insl
and
les
aas
jb
or
int
or
insb
mov
push
cmovp
pop
outsb
in
xor
xor
mov
cmpl
sahf
movsl
test
push
or
adc
imul
popa
and
dec
adc
mov
mov
add
ret
rcr
push
push
adc
ja
mov
xor
sub
xchg
mov
hlt
xchg
and
jge
cmpsb
loopne
pop
fisttps
pop
repnz
cmp
xchg
stc
push
dec
xor
mov
pop
and
pop
jns
stos
test
sbb
xchg
ss
mov
dec
jg
dec
sahf
push
xchg
pop
and
sub
push
or
in
cld
xor
mov
scas
iret
cli
or
add
sbb
rcll
aam
enter
rcrb
or
lock
test
bound
pop
aam
shl
fldt
sub
cltd
arpl
js
mov
xor
or
xlat
inc
sbb
inc
mov
sbb
jl
cmpsb
sbb
addr16
jo
nop
ret
aad
pop
call
stos
movb
out
pop
pop
adc
cmpb
nop
sahf
dec
mov
or
lret
jo
mov
sti
jbe
add
sbb
inc
pop
xor
movsl
adc
fs
and
adc
clc
lret
ret
mov
es
outsb
xor
leave
and
sbb
push
xchg
mov
mov
push
movsl
pop
mov
and
mov
and
insb
movsb
dec
fstl
mov
adc
jp
sti
dec
sub
push
inc
or
out
out
into
popa
jge
jp
gs
bound
dec
insb
test
jbe
add
jecxz
pushf
mov
loopne
mov
insb
cmp
ficompl
test
push
cmp
mov
insb
push
inc
lock
xchg
fmuls
mov
mov
adc
lahf
sbb
inc
xlat
pushf
sbb
out
bound
mov
add
dec
lea
sub
xor
pop
jo
push
in
and
push
jo
jmp
mov
push
or
xchg
push
cmp
adc
pop
mov
fsubrs
cld
mov
mov
jae
pop
scas
je
imul
dec
push
mov
xchg
mov
sbb
jno
or
out
fmul
mov
xchg
je
loope
inc
push
popa
repnz
adc
lods
cmp
fs
sub
xchg
mov
arpl
lock
dec
shlb
andl
mov
test
lock
ljmp
lahf
add
pop
jmp
daa
icebp
test
xor
mov
or
clc
adc
popa
out
popa
lods
lahf
inc
enter
scas
adc
mov
ja
icebp
ljmp
outsb
sti
dec
bound
lea
sbb
bound
jno
push
push
xor
jns
stos
pop
xor
dec
and
push
pop
nop
sbb
arpl
pushf
ds
js
cmp
ss
sti
popf
mov
xlat
sub
fpatan
inc
mov
inc
sub
pop
adc
repz
mov
xor
jmp
fidivl
in
mov
icebp
adc
imul
xchg
xchg
and
addr16
pop
sahf
jbe
nop
scas
cmc
mov
lcall
xchg
dec
xor
aaa
loop
sbb
test
inc
psubd
cmp
inc
sbb
xor
sbb
jge
cmp
gs
add
clc
call
popf
ret
loop
or
imul
sub
out
daa
out
ffreep
jnp
cltd
in
shlb
pop
cmp
outsl
les
sarb
dec
mov
incb
mov
xchg
dec
inc
lahf
sbb
xor
jne
push
mov
movmskps
ficoms
ret
push
xor
sub
popa
rcrl
and
mov
and
xor
push
sbb
aas
cli
mov
adc
insl
repz
lods
dec
sbb
push
jg
loop
ljmp
jle
adc
dec
insl
xlat
addr16
push
xchg
fs
ficoml
sbb
pop
or
add
sub
xor
xor
ret
bound
lds
movsb
in
call
fucomip
inc
stos
dec
mov
rcl
xchg
leave
jno
lods
scas
xor
imul
xchg
sub
inc
inc
mov
fisubs
ret
add
aad
leave
push
push
xor
and
loope
inc
icebp
cmp
aaa
jle
roll
dec
in
std
jo
sbb
jae
cld
or
xchg
pop
mov
das
pop
pop
cmp
inc
femms
stc
cld
xor
push
out
scas
xchg
jmp
out
xor
cmp
sbbb
cmp
lock
cwtl
jle
mov
inc
inc
lcall
idivl
push
sahf
ja
xchg
call
cltd
add
fnstsw
jecxz
xchg
cmp
rclb
imul
dec
stos
mov
test
xchg
or
sbb
ret
cmp
popa
es
sti
mov
adc
imul
shrl
push
push
repnz
ret
imul
loop
sbb
jne
and
popa
mov
xchg
imul
repz
sti
mov
push
xchg
inc
sub
mov
pop
jl
cmp
addr16
stos
test
outsl
cli
into
sub
xchg
popl
sbb
push
loop
pop
int3
jl
inc
jnp
cmp
xchg
enter
xor
out
jge
mov
das
jg
mov
adc
ds
inc
xchg
in
add
jecxz
dec
xorl
sti
imul
jnp
xchg
sbb
mov
fchs
nop
mov
jmp
add
adc
xchg
cmp
pop
inc
fwait
addr16
jno
les
aaa
mov
mov
jle
or
mov
or
xchg
cmp
filds
mov
pop
mov
arpl
ret
inc
xor
xor
push
mov
lahf
mov
adc
les
adc
outsl
fsts
push
shll
hlt
divl
xchg
imul
int3
push
and
push
cmpsb
ljmp
jne
push
or
pop
repnz
cwtl
sbb
cmpsl
or
dec
add
xchg
jno
call
rcr
sbb
xchg
fwait
xor
hlt
outsl
sub
in
dec
mov
popa
mov
fldl
pop
add
jg
mov
inc
adc
fs
add
mov
cmpsb
sahf
mov
icebp
and
test
clc
pop
inc
sub
push
pop
dec
or
push
jmp
nop
jns
jbe
push
fstl
sub
popf
out
ds
imul
add
daa
cli
mov
cmp
int3
fnstenv
mov
adc
push
movsl
pusha
mov
and
adc
pop
push
or
mov
xor
and
adc
cmp
sahf
cmp
call
xchg
pop
mov
xlat
dec
test
dec
sahf
adc
mov
aaa
inc
stc
push
dec
jbe
adc
repz
nop
sub
push
inc
dec
int3
ret
inc
repnz
rcrl
mov
ret
xchg
dec
cmc
or
cltd
decl
mov
add
jg
aam
and
in
mov
adc
mov
dec
dec
or
jb
out
xchg
shll
xor
and
addr16
or
push
loopne
jb
cmpsb
sbb
sub
aad
xchg
push
fidivs
enter
scas
adc
imul
adc
incl
jg
cmpsb
lods
lret
cmp
pop
dec
out
add
mov
mov
cmpsl
xor
pop
in
rcr
inc
mov
ss
cmpsl
mov
call
push
andl
maxps
mov
xor
xor
ret
inc
js
inc
in
sub
pop
or
imul
add
lods
jbe
fidivl
add
gs
in
xlat
sub
imul
jae
xor
in
add
mov
pop
call
adc
push
aad
imul
repz
in
sub
rorb
and
daa
and
push
fwait
mov
sbb
xchg
mov
scas
out
dec
push
hlt
or
enter
mov
cmp
lret
adc
ds
stc
lods
daa
mov
insb
fstps
jae
into
sbb
jmp
jge
icebp
cmpsl
lds
push
mov
mov
pop
into
icebp
outsb
fwait
out
outsl
iret
repz
xor
add
in
sub
add
xlat
addr16
dec
or
jne
jne
push
pop
sti
or
push
cli
dec
dec
hlt
jo
or
push
shll
and
or
notb
xchg
dec
popf
xor
lea
push
cmpsb
dec
xchg
pusha
push
cmpl
or
add
lcall
jp
shll
ret
sub
jge
sub
outsl
sbb
jbe
lods
shrl
fiadds
out
mull
dec
das
mov
in
outsb
mov
dec
push
xor
sbb
decl
push
imul
jno
cmc
int
ret
push
lahf
ret
mov
aaa
sti
lret
pop
mov
pcmpgtw
dec
sar
mov
and
test
test
jl
nop
dec
imul
pop
jle
add
rcl
mov
push
sbb
xchg
or
pop
push
lds
cs
test
mov
cmc
vaddsd
imul
adc
mov
dec
dec
into
xchg
fdiv
add
jne
out
xor
sbb
mov
mov
and
stos
push
loopne
push
sbb
inc
mov
loope
or
cmpl
decl
ja
pop
inc
dec
andb
push
shl
lods
mov
jae
and
and
pop
fistpll
xchg
cmp
bound
xor
jmp
fnsave
sub
jns
lods
pusha
int
sub
sbb
add
add
loop
movsl
push
xor
add
push
test
cld
bound
or
jno
sahf
pop
imulb
lock
outsb
mov
shll
scas
test
popf
pusha
cs
enter
dec
cmp
enter
mov
add
lock
pop
xor
out
sbb
or
leave
adc
mov
btr
adc
or
mov
popl
or
pop
iret
in
push
je
or
xchg
pop
test
lahf
cmp
outsl
cld
pop
inc
cmc
adc
push
iret
mov
addr16
sbb
insb
or
add
mov
ja
ds
push
adc
jae
mov
mov
cmp
mov
aas
mov
adc
mov
or
outsb
cld
scas
lock
fbstp
inc
jnp
or
nop
negl
push
and
rcll
cmp
add
andb
and
xchg
gs
inc
xor
cs
jmp
jg
jle
cs
movsb
or
sti
jp
push
clts
or
lods
dec
mov
mov
jns
cmp
stos
dec
shll
adc
rclb
and
ret
fwait
leave
ds
pop
arpl
or
sub
push
ret
call
ret
sti
lea
mov
dec
ret
sarl
ds
xor
mov
inc
inc
mov
push
cli
dec
adc
and
xchg
cmp
out
lcall
adc
jae
xor
xchg
mov
daa
xchg
mov
or
enter
pop
xchg
sub
pop
sbb
inc
div
scas
es
sar
std
or
sbb
inc
gs
out
sbb
adc
or
rolb
sahf
out
fdivl
imul
pop
or
dec
xor
push
mov
in
je
or
pop
imul
xchg
jle
in
loop
into
lcall
outsl
movsb
mov
stos
out
ret
addr16
xor
scas
pop
push
and
imul
out
sbb
cmp
lock
testl
cwtl
push
xchg
mov
fistl
pop
iret
jne
lods
adc
or
inc
pop
dec
cmp
sub
stos
dec
ret
push
dec
xor
aas
or
ja
jge
fisttpl
rcr
jns
pop
jmp
pop
mov
subb
sahf
add
and
dec
cld
lods
pop
out
out
jmp
cmpsb
mov
pop
inc
cmp
out
sti
mov
mov
cmp
ja
push
mov
and
adc
dec
dec
cltd
popa
jo
rclb
inc
and
add
or
push
js
push
das
sbb
push
outsb
iret
lods
sti
int3
fucomp
popa
cs
popa
xchg
fistpl
push
push
js
int
and
push
xchg
add
mov
test
adc
push
aad
xchg
pusha
sbb
mov
test
xchg
mov
jae
test
enter
push
gs
add
lea
xchg
fcmovb
sbb
enter
into
int
clc
xor
aad
add
add
mov
dec
aas
fisubrs
scas
in
lret
mov
mov
aam
popl
loope
adc
test
pop
adc
pop
pop
pop
ljmp
dec
arpl
xchg
fidivs
clc
int3
fsubrp
pop
push
data16
movsb
outsb
adc
ja
adc
cmp
nop
lret
data16
loope
outsl
lds
icebp
jae
sbbb
sbb
add
data16
out
bound
pop
inc
xchg
sbb
jl
and
dec
movsl
das
loopne
xor
imul
mov
fs
jp
aam
xchg
out
adc
rcll
mov
mov
jmp
jb
mov
testb
outsl
jecxz
adcb
xchg
lret
push
push
xor
mov
stc
mov
pop
pop
cmp
lahf
mov
jo
inc
bound
fwait
pop
cmp
dec
pop
adc
and
adc
jmp
popf
test
jno
sub
shrb
jb
push
or
loop
pop
cmp
inc
loopne
or
dec
fdivrp
lods
mov
fsts
mov
xchg
not
js
add
mov
cli
outsb
das
mov
movl
ja
mov
inc
repnz
test
add
int3
aas
fsubl
xchg
add
enter
xchg
inc
fs
adc
sub
mov
shr
dec
insl
push
push
mov
hlt
and
jmp
int
dec
sbb
andb
jno
mov
loop
cmp
sar
mov
adc
fstps
js
clc
xchg
push
dec
movsl
or
xor
or
sub
incl
orb
cmpsl
and
dec
mov
in
sub
orb
push
fldenv
sub
sub
or
test
push
mov
sti
xchg
and
out
cs
cmpsb
test
sbb
in
dec
adc
jle
outsl
jo
fstpt
jp
jne
lret
cmp
test
and
stos
and
xor
js
cmp
push
decb
pop
xchg
dec
test
daa
mov
rclb
or
jae
lock
pop
lock
xchg
jmp
or
cmpl
inc
orb
xor
sahf
repnz
cmpsl
dec
ds
cmp
push
hlt
and
adc
ja
ja
and
in
sti
lods
sarb
xchg
push
orl
lods
inc
mov
js
xchg
add
lcall
je
out
push
out
xchg
xor
or
scas
ret
xchg
mov
mov
mov
rorl
adc
adc
or
scas
pop
push
dec
insl
cmp
insb
mov
sub
xchg
or
lret
negl
fisttpll
mov
incl
xor
sub
pushf
sub
ret
mov
push
xchg
out
in
repz
sub
push
pop
scas
cmp
dec
pop
clc
mov
cmp
out
adc
sub
out
shr
insb
cld
xlat
add
test
jmp
jle
sub
fsubrl
aam
or
es
loopne
inc
adc
stos
pusha
cs
mov
jae
jo
pop
push
mov
adc
outsb
nop
stos
fcomps
push
cmp
outsb
imul
mov
popl
dec
test
lea
jnp
or
loope
inc
dec
jp
js,pn
adc
mov
xchg
in
ds
adc
das
adc
mov
push
push
lret
hlt
dec
push
fwait
add
leave
xor
ds
add
and
push
pop
sbb
aas
add
mov
adc
test
lret
push
aas
xlat
sbb
movd
mov
mov
testl
stc
mov
push
jp
fmull
jge
pushf
and
ret
adc
and
pop
add
lds
fs
adc
push
lods
scas
xchg
iret
pop
jle
stos
inc
into
mov
mov
or
sbb
dec
lods
mov
or
in
inc
pop
imulb
pusha
call
add
int
cmp
pusha
cs
inc
xchg
sahf
xchg
pop
cmpsl
inc
mov
pop
push
push
dec
jle
hlt
mov
insb
xor
jae
inc
fcmovnbe
pop
insb
std
loopne
movsl
pop
mov
test
mov
inc
cmpsb
xchg
roll
jecxz
aas
xor
mov
clc
add
xor
out
pop
push
or
pop
loop
das
pop
add
or
outsb
mov
popf
xchg
je
sahf
test
push
sbb
scas
or
adc
mov
popf
sbb
inc
cltd
test
hlt
xchg
pusha
mov
xor
sub
aaa
mov
jp
push
ss
mov
lcall
ljmp
in
aam
testb
dec
jb
sbb
pusha
sbb
loope
dec
pop
pop
mov
popa
push
out
jo
lcall
xchg
mov
ret
scas
out
mov
and
nop
mov
das
push
popf
xchg
or
push
cmp
jl
neg
frstor
cmp
push
push
insl
repz
mov
addr16
test
enter
xchg
jne
in
jp
in
flds
inc
lcall
sbb
pop
das
xor
loopne
ds
sub
shr
or
fcompl
std
pop
sub
cmp
xorl
push
arpl
loop
test
mov
insb
xor
test
fbstp
and
mov
or
adc
xchg
fnstcw
jbe
pushf
es
dec
cmpsb
in
xor
push
mov
and
dec
inc
loopne
mov
xchg
or
mov
dec
cmp
in
jnp
sub
in
fstpl
sbb
lods
xor
scas
outsl
inc
mov
out
mov
push
subl
nop
adc
dec
loop
ret
mov
cvttps2pi
dec
fwait
pop
pop
mov
jmp
and
push
pop
nop
leave
imul
or
stos
jp
and
push
rorl
das
idiv
test
pop
notl
outsb
imul
mov
lahf
xchg
scas
enter
in
cmpb
mov
pop
xor
in
push
mov
testl
sbb
jbe
loopne
test
adc
divl
aaa
es
adc
fcoms
mov
mov
push
cld
out
jge
push
jp
sub
dec
jo
sbb
pop
imul
les
dec
sub
push
pop
pop
mov
jae
lea
dec
dec
dec
aaa
ss
imul
fadd
mov
dec
mov
add
cli
cmp
mov
ja
fisubs
shl
popa
lahf
es
push
pop
mov
in
sub
fcomi
fmul
jb
aam
repnz
and
push
mov
push
stos
cmp
loop
cmpl
fldl
dec
dec
mov
sub
shll
pop
xor
or
lock
out
mov
scas
xchg
cs
daa
dec
je
mov
mov
mov
adc
push
lret
cli
test
pop
push
clc
dec
movb
outsl
pop
cli
aad
leave
jl
add
inc
push
fiaddl
loope
ret
dec
std
icebp
je
pop
mov
adc
sbb
and
mov
popf
insb
pop
fbstp
cmpsb
xlat
dec
and
jle
push
or
and
jbe
sbb
add
call
js
repz
fdivrs
nop
add
push
int3
outsl
iret
xchg
inc
imul
aaa
pop
pop
mov
lds
dec
adc
dec
das
xlat
cmc
inc
push
call
aas
bound
rcrb
loop
add
cmp
out
outsl
out
rep
inc
mov
sbb
push
push
jl
fwait
jnp
stc
fimuls
stc
xorl
sub
mov
pop
and
mov
and
push
and
lock
inc
lock
sub
enter
popa
lods
fs
or
test
stos
sub
cmpsb
push
lds
fs
fimull
cmp
cli
inc
jns
popa
mov
mov
sti
out
cli
cmp
or
enter
not
push
or
ljmp
xlat
jmp
jno
loope
cli
das
or
je
cwtl
xor
movsl
mov
jle
xchg
sahf
lret
imul
adc
in
repz
mov
jp
pop
mov
aas
push
pop
add
cltd
mov
push
inc
push
pop
mov
test
in
pop
jmp
push
adc
mov
jns
idivb
fnstenv
inc
jns
ds
push
xchg
int
dec
stc
xchg
gs
push
mov
dec
insb
jl
movsl
sub
inc
fucomp
sub
loopne
lcall
or
adc
ret
mov
cmp
xor
or
popf
aaa
les
pop
mov
xor
sbb
mov
fs
std
xchg
ljmp
fsub
cmp
je
js
jge
stos
aad
ss
insb
fcmove
pushf
mov
icebp
fcmovbe
push
addl
ljmp
daa
pop
fnsave
or
int3
je
int3
add
ret
xor
adc
shlb
xor
sub
and
cmp
lahf
nop
jae
std
fsubs
shrl
mov
outsl
or
outsl
push
mov
dec
add
mov
leave
push
xchg
or
push
xor
cld
out
testl
fmul
xchg
lret
data16
cmpsb
insl
negb
ds
scas
mov
xchg
pop
out
mov
push
push
mov
les
mov
imul
cmp
pop
ror
fsub
pop
insb
repz
int3
pop
adc
lret
sahf
jecxz
lret
and
push
clc
shlb
adc
push
xchg
xor
add
and
or
xchg
add
jge
fistl
mov
push
cmp
rcrl
stos
aam
scas
ret
push
inc
mov
xchg
sbb
pop
pop
sbb
xor
clc
shr
mov
scas
xor
mov
mov
or
xchg
pop
iret
hlt
nop
mov
jno
sub
and
mov
xor
xor
inc
sbb
push
inc
sub
add
rolb
mov
popa
in
clc
repz
outsl
push
test
pop
pslld
push
lcall
es
lret
std
mov
lret
out
les
adc
pusha
push
popf
and
pop
jecxz
cwtl
sbb
cld
lds
pop
pop
cmp
mov
xchg
jns
loopne
push
lods
and
xchg
sub
mov
lret
jne
or
mov
cld
idivb
xchg
stos
cs
shll
movsl
stc
pop
cltd
add
pop
pop
xchg
or
sahf
jb
addr16
pop
pop
push
test
mov
mov
xchg
or
push
xchg
xchg
xchg
lcall
leave
pop
sub
cmp
icebp
xchg
adc
fidivs
mov
pop
mov
rcrl
test
push
pop
inc
lret
test
pop
orb
sub
xor
adc
adc
xor
loope
mov
loope
xchg
or
subl
xchg
daa
shl
jns
jns
xchg
stc
xchg
ret
jnp
movsb
nop
cmc
stos
lret
sub
adc
or
xchg
mov
sbb
xchg
mov
cmpsl
hlt
nop
jg
pusha
jle
gs
dec
push
pop
pop
mov
dec
xchg
and
cwtl
pop
xlat
adc
mov
lds
roll
mov
sbb
sub
cld
dec
loopne
dec
adc
jb
adc
jns
xchg
subl
jecxz
sub
imull
test
sbb
gs
loopne
jg
cmp
xorl
mov
fiadds
cmp
shlb
repnz
add
push
jne
mov
mov
adc
clc
imul
mov
adc
mov
xchg
ja
lods
xchg
data16
mov
in
cs
and
inc
stos
mov
leave
inc
lahf
xor
icebp
popa
sarl
cmp
cmpb
cli
dec
lcall
adc
ret
mov
fs
popf
sbb
mov
xor
cmpl
loopne
mov
xchg
test
push
lahf
mov
mov
cli
bound
adc
sbb
adc
je
addl
icebp
insb
and
in
add
xor
repz
and
mov
inc
xor
ja
sbb
dec
or
aas
adc
push
movsb
arpl
jl
or
aaa
fdivrp
jge
pop
lcall
cmp
insb
cmp
hlt
jle
and
xor
xor
push
sbb
cmp
add
pop
xchg
rorl
aas
push
pop
call
fwait
xchg
repz
incl
push
cmp
xchg
lret
jb
push
lcall
xchg
adc
fbld
add
loop
mov
cmp
in
xchg
faddl
xchg
int
lds
adc
sub
jmp
mov
out
ljmp
scas
xchg
mov
and
mov
sbb
push
out
adc
cld
xchg
scas
and
push
sub
fscale
adc
cld
loope
push
roll
xchg
insl
je
es
gs
cmp
out
push
inc
cmp
inc
mov
sbb
mov
adc
loopne
call
stos
lods
ljmp
jb
ret
or
cmp
push
cmpsl
sbb
bound
icebp
cld
out
test
std
adc
xor
xchg
jae
mov
ret
cmpsl
mov
inc
pop
pop
sti
push
call
xchg
js
and
add
in
ret
mov
adc
in
js
out
pop
movsl
insb
pop
movsl
xor
xor
test
xchg
sub
iret
mov
mov
cmp
fisttpll
jl
pop
push
inc
inc
push
mov
jb
and
jmp
into
in
pop
sub
adc
mov
xor
xchg
out
ror
movsl
popf
jmp
outsl
xchg
jae
cmc
lahf
xchg
leave
lcall
xchg
mov
mov
aaa
xor
sbbl
aas
aaa
jl
imul
mov
mov
shl
repz
lods
ret
ss
pop
outsb
jl
int3
jae
daa
mov
pop
add
aad
inc
fstl
aad
cmp
inc
cltd
jge
jp
aaa
pop
bound
or
pop
mov
in
call
scas
jmp
es
inc
dec
add
cs
mov
jo
popa
xchg
jbe
shr
sub
sbb
inc
lods
and
mov
in
leave
call
cmp
scas
jbe
add
jle
add
scas
rcl
push
fldl
inc
ljmp
gs
jbe
popf
jo
ficomps
enter
inc
jg
mov
or
std
into
cld
pop
rclb
adc
cltd
mov
push
cmp
call
sti
das
sbb
jmp
mov
test
mov
sub
push
ljmp
pop
loopne
aaa
cltd
fdivrs
ja
lahf
cvtps2pd
and
mov
movb
jmp
push
fisubl
sub
popl
cmp
sub
xor
pop
cmc
mov
lahf
ret
repz
imul
mov
imul
sbb
les
cmpsb
xchg
jge
jg
fs
arpl
test
daa
stos
lcall
adc
in
cwtl
fs
mov
pop
insl
movsl
stc
stos
cld
sub
pop
sub
mov
pop
sub
jae
dec
stos
xchg
shlb
cmpsl
inc
cli
adc
or
cwtl
aas
lods
repz
cmc
es
mov
stos
out
and
xchg
pusha
mov
sbb
add
add
aad
or
cli
inc
jmp
mov
mov
sbbb
mov
insl
jecxz
jbe
dec
adc
pushf
mov
jge
dec
or
std
movsb
and
adc
cli
cmpl
in
mov
bound
mov
xor
mov
pop
push
jnp
iret
ja
mov
stos
and
sub
cmpsl
pop
ds
outsb
popa
mov
and
fisttpll
sub
fldenv
hlt
cwtl
mov
das
lcall
pop
jg
sbb
fstps
mov
adc
aam
xlat
dec
dec
cmp
mov
lret
leave
mov
sub
insb
xchg
jo
sub
dec
in
arpl
outsb
cmp
lahf
cmpsl
pop
or
fidivl
cwtl
mov
ja
fdivr
data16
sar
out
sub
mov
xor
lods
mov
data16
dec
mov
mov
movsl
push
repz
add
jle
cwtl
mov
dec
and
bound
cs
xchg
xlat
fsubrl
add
fidivrs
nop
jns
pusha
repnz
dec
mov
aaa
test
jnp
push
inc
jns
sti
push
ret
dec
movsb
aam
std
jl
dec
roll
stos
aam
jb
mov
sbb
cmp
inc
imul
into
rcl
mov
add
mov
addr16
mov
cwtl
shlb
mov
out
daa
dec
mov
mov
push
insb
imul
sbb
cmp
gs
dec
ffree
lahf
mov
jae
xchg
pop
dec
repz
roll
dec
dec
ss
stos
push
push
mov
add
jbe
testb
cmpsl
sub
inc
jmp
jl
out
jno
dec
lods
outsl
push
dec
dec
xor
cmp
or
xchg
pop
mov
xchg
movsl
pop
mov
in
cmpsb
add
jp
adc
jmp
int
in
test
icebp
popa
jnp
cmpsl
push
push
vmovlps
mov
push
mov
mov
sbb
add
xlat
ficoml
ret
mov
inc
ss
icebp
xor
xchg
inc
loopne
fcoml
pop
cmp
fistpll
jb
inc
out
daa
fidivs
mov
jnp
adc
jo
lret
sbb
or
aam
add
pop
sub
loope
notb
pop
pop
pop
mov
and
fisubrs
andl
dec
mov
outsl
daa
shll
bound
out
rcrl
addb
push
popf
lods
mov
xchg
aad
pop
jg
stos
lret
push
xchg
stos
lods
pop
inc
push
xor
sbb
cmp
pop
adc
lahf
fistpll
jge
icebp
or
mov
cli
outsl
sbbb
inc
int3
out
push
push
lds
cmpsl
and
jns
xor
mov
aam
sbb
jnp
rol
out
imul
xchg
mov
ss
jp
jp
repz
add
inc
jle
jne
aad
mov
jns
ficoml
pop
fidivl
aam
cltd
cmpsl
pop
pop
mov
pop
in
aas
sub
cmp
test
sbb
sahf
or
pop
out
add
fwait
jmp
enter
scas
std
push
jne
xlat
ds
and
or
sarb
cs
cmp
push
dec
rcrl
mov
fsts
adc
mov
xchg
add
cmc
andl
call
cs
movsl
pop
fiadds
and
push
and
lds
dec
es
dec
cmc
in
mov
mov
jmp
fisttps
and
nop
sub
push
sbb
pop
cmp
gs
adc
cmpsb
insl
add
cmpb
ret
shrb
imul
fdivrl
cltd
xor
mov
sbb
out
in
pushf
dec
lds
jns
aam
scas
or
ja
add
jl
xlat
sti
pop
popf
dec
pop
push
rcrb
or
mov
lods
push
out
pop
scas
adc
add
cwtl
pop
or
lret
push
out
mov
leave
sub
push
pop
inc
std
ja
popa
fisubs
mov
into
test
xor
lods
mov
insl
dec
outsb
xchg
sub
clc
out
or
jle
xchg
movsl
add
inc
cmp
fidivs
aam
int
jnp
sbb
shlb
filds
adc
sub
mov
xchg
push
andb
ds
mov
push
cmp
outsb
sbb
xor
sahf
inc
inc
outsl
jl
push
lcall
mov
adc
xchg
or
dec
in
adc
jno
imul
mov
jecxz
cmc
xor
outsl
lock
das
popf
jl
xor
add
sub
adc
les
inc
pop
or
lods
scas
jne
repz
push
jge
xor
pop
lret
pop
lods
ret
jle
jg
ljmp
push
mov
adc
cs
nop
out
dec
stos
cs
mov
mov
and
fmul
lods
nop
pop
shrb
mov
loop
test
fldt
pop
pop
mov
popf
dec
mov
das
cmp
fnstcw
inc
out
popa
rcrl
mov
pop
sub
aas
out
pop
dec
loope
mov
addr16
mov
mov
fcoms
mov
shlb
in
stos
push
cmpsb
cmc
mov
icebp
pop
repz
mov
push
clc
cmp
fisubrs
add
jbe
or
pop
inc
rcll
inc
sub
push
sti
dec
or
pusha
inc
and
cld
mov
cmp
fs
xchg
adc
fwait
sbb
pop
ret
xchg
in
and
push
rorl
add
xor
movsl
jp
fstps
fistps
xchg
push
popf
into
shrl
iret
je
pop
jo
dec
inc
add
sub
cmp
and
mov
aas
ja
stos
js
mov
in
add
pop
jge
stos
adc
scas
lret
jae,pn
mov
dec
inc
add
std
daa
jecxz
dec
stos
xor
xlat
imulb
ss
and
imul
in
fwait
lods
or
jno
pop
push
stc
mov
les
scas
in
data16
xor
sub
aaa
push
test
loop
cmpl
sub
adc
cli
das
aam
mov
test
pushf
mov
das
mov
or
pop
adc
ds
jg
mov
into
sub
xlat
dec
ja
adc
jmp
xor
jecxz
das
and
cli
sub
push
push
dec
adc
test
les
xchg
imul
das
bound
ret
dec
lcall
dec
leave
add
xor
fistpl
orl
push
fldt
in
xchg
mov
mov
sbb
cmc
movsb
mov
pop
les
push
int3
cmpsl
popa
divl
aas
shlb
mov
push
mov
sub
jb
xor
cmp
jp
jns
aaa
test
mov
jns
out
cmpsb
loopne
lea
es
int3
push
and
leave
clc
add
fnstcw
or
jecxz
fs
adc
outsb
mov
push
add
ss
js
sbb
mov
mull
icebp
inc
add
adc
cmpsb
pop
in
cld
add
xchg
inc
inc
popf
test
mov
mov
call
push
imul
mov
mov
mov
insl
fadds
insb
jp
mov
shlb
jmp
subb
fdivl
pop
loopne
hlt
das
add
rorb
pop
iret
lea
xor
incl
xor
jmp
fbld
ja
sbb
scas
dec
fwait
push
xchg
sbb
push
push
loopne
stos
sbb
add
out
movsb
ljmp
inc
pop
push
outsb
push
mov
clc
and
pop
inc
rcr
jbe
in
sbb
mov
pop
enter
repz
sbb
imul
imul
dec
sbb
test
mov
ds
xor
sarb
push
icebp
xor
xchg
insl
fimull
pop
or
xchg
jnp
int3
mov
leave
push
dec
cld
loopne
jnp
rcrl
mov
inc
jg
push
dec
aam
push
jnp
outsl
jbe
repz
cmp
adc
push
pop
out
bound
je
lret
push
pop
push
sar
aas
mov
or
jno
and
fbld
jl
outsb
sbbb
dec
outsb
mov
cmp
and
dec
and
jge
movsl
jmp
sub
push
xchg
lock
mov
or
aas
movsl
xchg
cmp
test
inc
mov
adc
popa
mov
out
int3
aam
xor
jbe
sbb
addb
cli
sub
in
rcrl
and
pop
fldt
lods
cld
sub
leave
stos
or
inc
dec
popa
aaa
fdivrl
cmpsl
out
sbb
dec
movsl
outsb
mov
cmp
inc
push
insl
lods
pushf
in
les
push
std
in
bound
inc
test
mov
jbe
and
mov
aad
negl
cld
push
jl
iret
movb
push
mov
cmp
push
mov
ret
mov
inc
rcrl
mov
mov
pop
dec
dec
or
test
adc
sub
std
add
ffree
pop
in
inc
or
insl
jge
aaa
pop
leave
xchg
lds
cwtl
xchg
std
aam
int3
lcall
xchg
xor
mov
cmpl
pop
std
pop
stc
adc
xchg
int
cmp
pop
add
xor
es
nop
es
xchg
xor
inc
leave
call
push
dec
mov
shlb
add
xor
pop
dec
jnp
push
jp
stc
in
inc
test
js
add
jb
int3
call
movsb
int
repz
pop
sbb
popf
orb
out
popa
ficompl
dec
fwait
xchg
inc
xor
mov
cs
ds
or
and
lret
mov
fs
cs
mov
cmp
imul
lods
lock
add
add
clc
adc
test
mov
sbb
inc
hlt
push
fwait
jmp
aam
mov
push
inc
pop
mov
ret
dec
mov
inc
ficoms
cwtl
clc
imul
aam
add
add
push
in
fisubs
jmp
rolb
mov
lds
mov
jo
popf
in
movsl
jmp
filds
popa
popa
bnd
inc
stos
mov
scas
mov
inc
inc
fabs
xchg
leave
leave
insl
add
call
fstpt
pop
mov
int3
popa
pop
xchg
push
push
mov
fdivs
mov
jl
xchg
or
pop
into
int3
test
rolb
jle
pushf
jns
jbe
outsl
dec
ljmp
or
ja
rolb
icebp
or
enter
sahf
sub
movsb
xchg
lea
adc
mov
jbe
dec
lahf
pushf
add
out
cld
push
mov
mov
rclb
cltd
jo
xor
xchg
jns
insl
xor
xor
xor
in
xor
adc
stc
inc
lahf
nop
into
sbb
push
xchg
pop
and
sbb
pusha
popf
fwait
popf
sbb
in
pop
dec
ja
roll
mov
adc
cmovnp
jb
cld
mov
int
mov
adc
arpl
outsl
ja
das
dec
adc
xchg
mov
adc
cld
aam
or
xchg
cltd
and
mov
mov
mov
sti
arpl
add
push
jae
xchg
jp
mov
rorl
lock
int3
icebp
arpl
aam
aaa
aas
arpl
fdiv
sub
popf
aas
cmp
xchg
stc
lds
fistps
insl
jnp
jns
cli
sub
mov
in
lahf
gs
into
ficompl
cmp
jle
fs
pop
mov
sbb
cmp
push
sarb
into
cmp
mov
fnstcw
ljmp
xchg
in
mov
rep
orb
sbb
bound
out
push
outsb
cmp
loopne
lods
fmull
adc
jno
cmp
mov
aaa
lahf
cmp
pop
ljmp
mov
loope
fisttpl
imul
dec
stos
push
add
loopne
push
fisubl
int3
xchg
sti
cmpsl
in
dec
fmull
mov
lret
aam
out
fsubl
pop
and
xchg
je
imul
or
sbb
and
jecxz
mov
pop
jnp
mov
test
dec
cmpsb
notl
mov
sbb
sarl
aam
mov
rclb
xchg
test
and
fs
mov
xor
add
daa
add
sub
jbe
iret
xchg
mov
call
push
or
xchg
in
mov
mov
mov
cmp
mov
outsl
mov
insl
jne
mov
ret
fistpll
aad
ret
sub
cmpsl
stos
loope
inc
push
sub
lea
sub
popa
mov
adc
movsl
scas
mov
dec
cmp
fsts
push
pop
sti
jmp
mov
ret
mov
lods
xchg
rcrl
sbb
mov
andb
cmp
cmc
iret
lods
loopne
pop
inc
ljmp
cmpsl
pop
repnz
insl
clc
enter
jo
xor
jp
cltd
xor
add
jg
outsl
incl
addb
fisubrl
jmp
sbb
cmc
jmp
cmp
insb
xchg
inc
mov
sarl
dec
out
popa
lock
fistpll
outsb
sub
ficompl
testl
aas
jo
or
dec
dec
addr16
fidivs
xchg
shl
pop
fnsave
mov
sbb
test
xor
cwtl
add
insl
add
jo
arpl
das
les
shrl
push
test
dec
sbb
jo
je
cmpsb
push
dec
xchg
fistl
cwtl
and
iret
cmp
cli
xor
loope
decb
je
jno
xchg
scas
sub
aad
dec
mov
add
ds
aad
jno
inc
sub
mov
pop
jp
xchg
cmp
xor
enter
test
xchg
test
mov
data16
or
repz
call
adc
mov
cmpsb
cmp
ffree
mov
fstp
cmc
std
lahf
pop
sbb
jp
inc
gs
cmp
cmp
int
fwait
jp
cmp
inc
andl
scas
mov
xchg
mov
pop
dec
xchg
inc
mov
and
xor
jns
xchg
je
inc
mov
fidivs
sti
in
popf
popf
es
ret
adc
sub
push
ss
push
push
add
aas
insl
inc
sahf
jecxz
pop
mov
sbb
xchg
out
xchg
aas
dec
xor
cmp
or
enter
fistpl
mov
sub
loop
or
jge
loop
or
push
ljmp
out
sub
sbb
inc
mov
pop
xchg
leave
mov
jb
popa
dec
ja
outsb
outsl
xchg
mov
fwait
jnp
mov
mov
push
jl
loop
pop
jno
lock
mov
call
xor
cli
mov
sub
popf
add
xchg
fucomip
out
out
dec
clc
push
insl
sbb
mov
push
pop
lret
ss
cmp
jb
pop
mov
push
xorl
pop
cmp
xchg
inc
jno
jb
pusha
out
mov
aad
adc
jp
out
enter
sahf
popa
push
cmpsb
loope
and
fs
add
js
fwait
xchg
mov
pop
fwait
les
stc
imul
sbb
insb
adc
push
lea
adc
add
push
adc
mov
dec
xor
or
push
ret
jecxz
mov
lds
adcb
xlat
outsb
jbe
or
clc
jb
jge
les
bound
adc
scas
jns
sbb
jecxz
jnp
jne
mov
pop
cs
mov
pusha
jp
cmp
call
inc
jge
flds
pop
lds
ret
pop
test
fisubs
xor
lock
js
popa
and
dec
xchg
mov
stos
mov
lcall
sbb
dec
pop
popf
xchg
addb
roll
mov
pushf
sbb
pop
imul
into
je
adc
stc
in
lcall
filds
push
or
js
mov
into
push
inc
subb
repz
aaa
pop
push
and
bound
sub
fldenv
js
shll
fidivrl
xchg
mov
dec
sahf
ds
cmpsl
jp
into
dec
cmp
add
push
stos
daa
popf
jecxz
sarl
popl
push
sub
lods
sahf
sub
imul
aas
loopne
and
jbe
mov
in
cwtl
mov
cmpsb
mov
insb
sarl
pop
dec
xor
jg
and
jecxz
cmp
aam
push
icebp
mov
popa
cmp
adc
xchg
arpl
dec
jle
sahf
in
inc
xchg
rclb
movsl
lock
pop
stos
idivb
xor
psrad
aas
js
or
dec
push
push
lock
jmp
fsqrt
sbb
mov
and
mov
lcall
adc
fildl
insb
daa
std
call
int
push
stos
xor
xchg
push
vmwrite
enter
mov
nop
mov
les
fidivrl
push
jnp
clc
dec
push
xlat
shlb
cmp
outsl
pop
mov
sub
sarl
in
loope
cs
mov
iret
mov
lods
xchg
gs
cli
mov
addl
imul
cmp
mov
fsubr
dec
sub
pop
mov
and
add
sub
loope
and
mov
mov
cli
or
inc
jmp
push
dec
dec
outsl
adc
test
test
loop
push
je
or
push
xchg
xchg
shll
xchg
inc
mov
dec
xor
test
xchg
mov
lea
stc
sub
leave
adc
js
ret
mov
push
inc
push
scas
jmp
lods
fiaddl
inc
loope
test
dec
lock
mov
movsb
insl
cmc
sub
dec
mov
mov
inc
mov
dec
mov
mov
cmp
scas
lds
push
mov
dec
adc
adc
scas
cmp
xchg
push
mov
jle
push
push
subb
mov
jo
inc
mov
cmp
pushf
gs
sbb
scas
shlb
jno
mov
test
minps
and
insl
mov
icebp
xor
imull
loopne
and
jb
adc
cld
cld
jb
cmp
adc
pop
push
bound
push
cmc
repz
adc
jp
and
pop
push
in
jmp
and
mov
rcll
pop
push
lcall
dec
inc
xorb
push
sbb
stos
sbb
mov
add
mov
mov
std
and
je
sub
xorb
sub
or
push
adc
sub
stos
push
imul
jae
pop
fisttpll
mov
mov
xchg
sbb
repz
cwtl
and
bound
or
les
jmp
test
loope
movsb
mull
sbb
mov
mov
sbbl
vpmulhuw
cmp
pop
mov
in
pushl
movsb
inc
add
loopne
mov
and
mov
push
fucomip
dec
dec
ds
push
add
xchg
mov
mov
cld
adc
sbb
cwtd
test
lock
adc
fisubs
or
sbb
xchg
lock
sbb
or
xchg
push
call
out
ljmp
sub
sbb
push
sub
fs
inc
lret
sub
or
pop
out
dec
jnp
fcmovbe
dec
pop
xchg
inc
pop
add
pushf
std
imull
mov
cmpsb
sbb
std
jl
push
pop
mov
dec
out
push
pop
bound
inc
mov
mov
add
stos
test
jno
xchg
pop
test
mov
repz
xchg
fwait
in
mov
inc
push
mov
cmp
fstpl
sub
int
mov
push
push
fdivrs
lods
in
repz
add
inc
jnp
popf
aam
ss
lret
aaa
out
lds
shrb
inc
and
out
mov
ret
jle
sarl
xchg
int
int3
pop
or
test
testb
xchg
and
out
pop
mul
cvtdq2ps
jp
pop
out
inc
jge
fdivp
xor
iret
cmpxchg
cmp
mov
cmp
in
ja
roll
xlat
or
enter
dec
pop
sbb
jg
out
jns
in
lcall
jno
es
sbb
cmc
shr
xor
jno
in
jne
clc
lcall
mov
pusha
lcall
push
mov
fcmovbe
divl
push
add
pop
pop
and
arpl
cmp
xor
cmpsl
call
mov
gs
dec
test
pop
ss
loopne
enter
and
mov
add
pop
sar
pop
in
dec
push
mov
clc
ret
dec
sbb
sbb
ret
data16
stc
ficomps
imul
xchg
iret
adc
lret
lret
addr16
pop
sbb
je
in
hlt
pop
mov
aam
add
insb
push
int3
mov
into
test
in
pop
in
aad
add
cmpsl
push
push
inc
rorb
cmp
fmul
xor
adc
xchg
into
mov
mov
arpl
enter
add
mov
sarl
sbb
ret
mov
test
mov
and
jmp
mov
das
stc
cmp
dec
rclb
js
addr16
mov
lcall
test
outsl
fstpl
daa
pop
sub
pop
mov
xor
xor
xchg
adc
mov
in
sarl
inc
jge
cwtl
cltd
jb
scas
cmpsl
mov
pop
pop
ret
inc
add
leave
insb
xchg
push
nop
inc
insl
clc
mov
xor
jg
mov
add
das
and
mov
add
and
jecxz
mov
push
pusha
fs
push
pop
pop
std
add
scas
test
mov
dec
lods
mov
in
repnz
fnsave
loopne
mov
push
dec
mov
fimuls
mov
fimuls
adc
inc
pop
xchg
icebp
sub
rolb
ja
cmp
int3
cmp
imul
cmp
pop
fstp
or
mov
or
mov
rorb
jbe
psrlw
and
dec
int
add
mov
dec
ret
xor
xor
addr16
add
cmp
inc
cli
das
jle
cmp
adc
or
mov
add
fisttpll
jp
in
sti
cmpsb
pop
fldt
scas
jnp
jbe
push
sti
aam
lock
sti
dec
sub
std
xlat
or
icebp
rcll
sbb
jae
xor
movsl
mov
xchg
movsl
out
loopne
xchg
cli
sbb
cmc
scas
mov
cmp
sbb
clc
sbb
insb
sahf
mov
xchg
jp
mov
cltd
push
pop
sbb
fcmovb
dec
inc
int
in
push
sub
sti
ds
ret
shrb
ds
jl
inc
xchg
adc
sub
pop
mov
test
into
nop
movsl
ss
pop
push
lret
ss
popa
adc
cmp
sbbl
dec
test
pop
rolb
arpl
push
hlt
data16
movsb
mov
cmc
ja
pop
lock
scas
dec
sbb
repz
fistl
insb
inc
xchg
pop
cmc
pop
rcll
push
scas
cmpsb
sub
negb
test
pop
xor
inc
mov
push
sub
mov
cmc
popa
mov
sbb
ss
pop
sbb
ljmp
and
aaa
push
xorb
push
dec
repnz
sub
pusha
sbb
inc
mov
in
repnz
outsb
es
out
testb
bound
inc
mov
std
mov
mov
cltd
dec
xchg
jnp
cltd
cmpsb
scas
or
shlb
fildll
sub
xchg
jg
sahf
lea
in
fsts
mov
cmp
and
pop
mov
sub
popf
rcrb
negl
outsl
lock
sub
cmpsl
xchg
arpl
sbb
bnd
stc
stc
jecxz
shlb
xor
inc
xor
inc
test
insl
lret
dec
mov
adc
insb
test
lcall
cmpb
cmpsl
in
mov
cli
sub
mulb
xor
decb
ss
repz
mov
mov
test
nopl
ss
add
cmpsl
push
add
pop
icebp
sub
sbb
jo
out
sbb
lret
or
ret
in
test
cltd
lahf
xor
stc
sub
movq
loope
pop
movsb
sti
ljmp
test
or
xchg
inc
into
add
add
in
scas
hlt
mov
fidivl
xchg
or
push
inc
in
inc
scas
mov
repz
iret
lret
jle
jge
and
sub
mov
push
pop
or
sbbl
xor
aam
cmp
jp
ds
mov
push
add
inc
add
iret
mov
dec
inc
jl
sar
and
push
cld
aaa
dec
movsl
clc
mov
hlt
and
mov
inc
push
add
dec
out
je
pop
pop
sub
and
pushf
stos
fadds
lcall
aas
sbb
sub
imul
fs
je
mov
dec
mov
fcmove
and
xor
xor
add
jge
ss
stc
mov
jne
daa
rcll
and
cltd
dec
bound
aad
fs
stos
lret
enter
in
int
stos
inc
sbbb
ds
xor
adc
adc
push
lcall
andl
imul
cltd
in
movsb
pushf
int3
cltd
inc
scas
xchg
test
fwait
scas
xchg
fs
mov
pop
dec
adc
adc
cmc
dec
add
push
dec
inc
cmp
jns
push
loop
pushf
xchg
xchg
mov
divl
pushf
mov
cmc
adc
int
int
dec
xchg
stc
pop
aam
out
repz
dec
stc
sub
nop
sbb
mov
ret
add
fs
mov
shr
pushf
fdivr
ja
jecxz
mov
or
mov
aaa
aaa
cmpsb
cltd
mov
pop
loop
xchg
pop
mov
lods
fcomps
mov
subb
daa
hlt
mov
mov
pop
jge
out
xor
cwtl
fdivs
mov
imul
adc
popa
mov
cwtl
xchg
or
aas
fsubrs
inc
outsl
aad
cmpsb
js
mov
stc
xchg
jbe
insb
out
in
or
pop
sub
cs
or
mov
jg
push
push
enter
mov
ljmp
and
and
mov
add
scas
popa
int3
loope
jo
mov
push
jl
scas
fwait
and
mov
inc
push
dec
cmp
xchg
push
lret
fucomp
push
and
icebp
jl
dec
outsb
lret
pusha
dec
cwtl
mov
sub
jo
mov
adc
arpl
repnz
fmul
or
xchg
xchg
adc
adc
push
mov
gs
or
lds
popa
cli
xchg
lret
inc
inc
out
push
push
push
ds
aad
jle
lcall
jmp
fldenv
mov
pop
jo
xchg
or
shrb
mov
in
hlt
cwtl
enter
jo
popa
jo
aad
mov
sub
xor
push
icebp
imul
cmp
inc
push
in
pushl
hlt
cmp
adc
nop
xchg
and
movsb
out
dec
xchg
popf
imull
in
inc
push
adc
repnz
jo
movsb
sub
daa
pop
and
insb
cld
add
mov
add
add
sbb
add
push
sbb
pop
pop
sar
and
ficoml
orl
mov
push
dec
mov
inc
push
sub
or
mov
lods
jbe
pop
cltd
out
les
lret
sbb
jecxz
lea
mov
push
test
cli
ret
int3
xor
mov
imull
flds
cld
bound
mov
clc
xor
out
pop
mov
or
pushf
or
cld
mov
xor
or
sarl
out
fdiv
test
dec
xchg
icebp
test
mov
cmp
jno
cli
pop
pop
call
sbb
fs
jo
jo
mov
dec
insl
mov
jnp
add
mov
cmc
dec
sbb
lds
sarb
inc
mov
out
scas
imull
sahf
pop
aaa
xorl
imul
dec
xchg
fcoml
imul
sbb
push
mov
cs
stc
loope
into
nop
fs
insl
push
lret
testl
icebp
in
push
insb
jns
test
in
popa
adc
cmpsb
mov
js
imul
ja
lock
sub
dec
mov
repz
lahf
inc
pusha
jbe
addb
and
jne
mov
jb
xor
or
mov
adcb
push
xorb
dec
sub
sub
test
stc
xor
roll
xor
inc
imul
pop
andb
or
xchg
sub
icebp
mov
pop
jo
das
mov
fwait
loope,pn
sbb
out
xchg
pop
dec
sub
cmpsl
clc
push
xchg
mov
incb
ret
cmp
mov
mov
push
inc
gs
cmp
aad
fs
mov
iret
adc
ljmp
xchg
mov
pop
icebp
xor
dec
jmp
mov
shlb
mov
inc
pop
mov
add
xchg
lea
shlb
inc
leave
das
aaa
out
cmp
das
sub
pop
xchg
or
mov
lcall
mov
sbb
xchg
hlt
shrb
rcll
inc
ds
ret
je
in
adc
xor
lods
jbe
mov
cmp
push
lret
out
arpl
or
jmp
push
jecxz
push
push
xlat
sbb
test
or
xor
ja
test
loope
mov
xor
fstp
je
jnp
jb
es
imul
jne
ficompl
mov
xlat
fwait
cmpsl
mov
js
cmc
xchg
mov
mov
dec
push
pop
popf
mov
jns
pop
or
xor
mov
dec
dec
les
adc
outsl
stos
mov
fisttps
xchg
push
cmpl
stos
aas
push
push
lock
int
mov
les
sahf
pop
ss
mov
in
cs
cmpsb
aas
sbb
jbe
xor
ficomps
cmp
imul
sbb
push
into
fimuls
sub
ja
pop
mov
pop
mov
inc
sub
into
push
sbb
pop
mov
xchg
sahf
cmp
cld
outsb
push
and
repz
imul
xor
ds
and
scas
bound
ss
movsb
les
test
clc
xchg
pushf
ret
mov
jo
aad
push
cmp
daa
or
lock
lret
imul
push
xchg
dec
lds
adc
cmp
aas
mov
insb
bound
mov
insb
enter
jo
xor
pop
sbb
jnp
xchg
mov
inc
int3
js
mov
mov
mov
inc
dec
or
cs
loope
mov
jo
popf
sub
cmp
xchg
fcmovnu
shll
lds
inc
inc
mov
pusha
rol
jb
jbe
jl
mov
in
ret
xchg
mov
sbb
jecxz
mov
pop
cmpsl
fdivs
out
inc
pop
fisubrs
mov
mov
inc
dec
data16
mov
iret
mov
fdivp
cmp
out
mov
mov
add
or
pop
xor
imul
popa
sub
sub
inc
repz
jecxz
lods
fdivs
incb
add
ficoml
mov
insl
aaa
inc
push
jle
mov
or
movsl
xor
xchg
test
out
repnz
jns
mov
mov
std
ja
jecxz
dec
jae
xor
insl
inc
cmpsb
inc
icebp
and
add
aad
xor
int3
mov
add
xchg
mov
jle
imul
fistpll
jne
mov
test
lret
jo
push
or
shlb
xlat
fistpll
call
mov
lcall
pmulhuw
jmp
dec
pop
push
push
iret
clc
xorl
in
aas
scas
sub
push
scas
adc
push
and
mov
jo
sub
mov
mov
aas
or
les
pop
mov
nop
popl
sarb
adc
mov
or
sub
pop
aad
mov
push
sub
jg
xchg
cli
add
adc
mov
dec
add
xchg
pop
sub
sub
mov
fbld
xor
mov
icebp
sbb
popf
sub
xchg
cmpxchg
sub
push
loop
loop
xchg
xchg
movsb
dec
enter
xchg
rcrb
scas
je
xor
sahf
scas
pop
add
pop
mov
scas
loope
adc
mov
inc
orl
nop
ret
out
or
lahf
adc
lea
inc
cmp
inc
repnz
mov
mov
movsl
push
sub
popf
insb
mov
sbb
push
outsl
pop
jae
imul
negb
mov
inc
iret
xor
mov
sub
lock
sar
sub
movsb
cmp
mov
push
sbbl
adc
add
mov
mov
pop
xor
in
mov
mov
gs
adc
push
repz
fs
dec
push
push
mov
popa
jmp
test
mov
pop
pop
xchg
mov
loope
adcl
push
pop
clc
loop
pop
mov
pop
push
mov
js
inc
or
scas
xchg
sbb
sarl
cmp
xor
cmpsb
call
test
inc
sbbl
mov
addr16
imul
dec
insb
push
adc
jmp
and
xchg
loope
jns
in
mov
pop
into
mov
cmpsb
int
jno
out
aam
pop
add
cmp
andl
in
pop
inc
pusha
je
cmp
repnz
push
push
xor
cmc
mov
nop
lcall
xchg
cmpsb
in
cmp
icebp
pop
cmpsl
insb
sub
fcomps
and
sub
lret
in
jg
add
sarb
mov
in
mov
dec
mov
gs
bound
fdivrl
pushf
ss
dec
jns
push
std
push
scas
adc
fbstp
add
ror
pop
ror
inc
ljmp
sbb
pop
mov
imul
loope
fsubl
scas
pop
fnstenv
pop
pop
test
ret
or
ret
push
push
cmc
sbbl
je
mov
adc
pop
sarl
clc
popf
push
jmp
xlat
lods
stc
popf
fisubs
dec
mov
lods
push
push
lret
push
xchg
pop
inc
or
shlb
or
fdivrl
jmp
mov
sbb
xchg
fbld
pop
mov
loope
stos
pushf
js
andl
std
jg
lds
shlb
push
xor
cli
add
sbb
xchg
add
mov
lret
cmp
loop
or
int
out
stos
xor
ljmp
test
lds
mov
mov
xchg
shll
or
nopl
inc
add
add
sahf
rcrl
movsl
mov
pop
mov
out
addl
idiv
and
mov
js
fsubrl
popa
xor
sbb
cmp
in
icebp
lret
jecxz
jge
or
fnstenv
call
cwtl
loope
inc
cmp
scas
xchg
mov
imul
push
pop
iret
sahf
rorb
cmp
lcall
dec
into
sbb
or
or
cmp
aaa
push
dec
outsb
je
xchg
out
sahf
mov
pop
push
bound
arpl
xor
roll
into
dec
xor
in
cmpb
icebp
fldln2
fwait
iret
sub
push
push
or
gs
adc
cmp
jnp
adc
push
jns
gs
and
jns
or
mov
jp
lods
sbb
or
mov
outsl
repz
dec
mov
fisttpll
test
aam
lahf
rcrb
arpl
cmp
mov
in
mov
out
sub
js
sbb
cmp
push
cmpsb
ficoms
pop
icebp
enter
movsb
dec
xor
and
push
sbb
adc
cmpsl
out
jl
or
sub
imul
bound
add
xchg
pop
add
xor
mov
insl
dec
pop
cmp
mov
mov
stos
cmp
ja
in
sub
mov
sbb
mov
es
les
push
lret
rcrb
dec
push
call
mov
xchg
inc
test
ror
ljmp
push
pop
loopne
jmp
xor
pop
sar
adc
ret
loop
repz
mov
test
rorl
in
pop
movsb
lods
or
hlt
scas
cwtl
movsl
insb
xchg
lahf
dec
push
roll
mov
fs
cmpsb
sub
insl
iret
fs
push
xor
mov
push
cmc
inc
pop
xchg
std
pop
lahf
xchg
mov
imul
mov
adc
push
dec
pop
pop
ficoms
decl
inc
divb
dec
stos
lea
xchg
xchg
fdivrs
sar
mov
lret
adc
cli
arpl
inc
sub
push
ficoml
repz
pop
lcall
dec
fiaddl
fldenv
mov
or
sbb
push
inc
in
xor
fucomip
jmp
and
popa
dec
shrl
mov
cmp
sbb
or
and
push
or
nop
jg
popa
pop
jge
mov
sbb
cmc
cltd
das
push
ficoml
adc
pop
lock
fs
sbb
push
icebp
aad
in
divps
test
jl
sub
and
mov
roll
xchg
push
jge
aaa
push
and
aaa
dec
inc
xchg
in
in
cmc
lea
add
jb
mov
jmp
ss
test
push
lods
sub
cltd
add
cmp
call
jp
push
and
stc
into
and
mov
loope
out
mov
inc
dec
adc
pusha
xchg
lret
xchg
loop
insb
push
sub
push
xor
mov
in
push
mov
test
cwtl
push
and
mov
lcall
scas
dec
aam
or
test
sbb
repnz
int
outsl
aas
inc
lock
out
sub
mov
or
das
loop
ret
aas
pusha
loopne
mov
movsb
icebp
leave
sbb
es
jns
inc
ds
pusha
inc
dec
jge
sub
or
adc
mov
cmpsl
or
lcall
or
test
push
sarl
ret
mov
shlb
subl
fistl
and
nop
scas
imul
xor
test
loope
add
mov
out
shlb
sbb
fstps
jge
pop
xchg
fmulp
xchg
sbb
aas
std
stos
lods
mov
pop
mov
adcl
sbbl
jg
jnp
aaa
jae
and
mov
mov
sbb
hlt
inc
dec
pop
mov
pop
mov
sti
xor
aaa
aad
xor
rol
jno
ljmp
push
leave
inc
add
test
jne
mov
shrl
int
nop
dec
push
cs
or
test
and
loope
int
pop
jb
leave
mov
xor
jno
mov
xchg
lret
jmpw
stos
into
data16
push
xchg
popl
sub
and
lcall
lods
scas
mov
pop
les
out
inc
rolb
lret
push
jg
divl
dec
push
adc
cmp
mov
xor
fisubrl
cmp
enter
insb
addr16
loop
test
int
addl
or
pop
mov
imul
and
aas
cmp
shrb
lahf
int
imul
stos
adc
xlat
clc
and
lcall
push
pop
aas
mov
mov
nop
xor
and
ret
jb
sub
icebp
push
jmp
icebp
jae
scas
push
fs
lods
sbb
fisubrs
jle
aam
addr16
in
dec
push
cmp
test
jno
inc
xor
cmpb
dec
sbb
mov
lods
loopne
imul
lcall
xor
cmpsb
push
jge
inc
movsb
jg
mov
int
push
mov
mov
pop
mov
sbb
sub
lods
icebp
lret
pop
gs
mov
gs
or
fwait
aaa
mov
cld
movsl
out
loope
xor
fs
fstl
dec
xor
repz
pop
add
aas
in
mov
mov
xchg
lahf
and
ret
cmp
xchg
icebp
push
lret
in
pop
and
lcall
add
aas
jecxz
pop
dec
inc
add
add
push
sub
pop
loopne
mov
xchg
sbbl
mov
xchg
ljmp
adc
dec
xor
sbb
mov
mov
jnp
rolb
popa
jge
mov
inc
dec
sub
fbstp
sbb
jp
sarb
or
ss
push
es
lret
imul
es
mov
cmp
rcrl
xor
xchg
sbb
das
mov
mov
pop
inc
push
mov
roll
mov
mov
test
rcl
out
ret
bound
mov
xchg
packsswb
shll
hlt
js
in
iret
and
iret
jo
sbb
jmp
add
ljmp
mov
xor
test
jne
mov
popa
or
aaa
popf
data16
pop
lock
movsl
hlt
jbe
in
mov
rclb
jno
loope
cltd
mov
adc
repz
cmp
fisttpll
jnp
mov
lods
sbb
mov
data16
in
data16
inc
add
test
and
jae
mov
dec
mov
loope
test
lret
push
out
int3
pop
xor
mov
pop
shrb
mov
cmc
inc
or
jo
bound
popa
jle
sbb
adc
add
in
shlb
adc
imul
popf
dec
inc
and
add
das
push
adc
pusha
inc
rorb
mov
inc
in
dec
test
movsl
test
cld
scas
jecxz
pop
sub
pop
mov
mov
lret
xchg
xor
shll
cmp
lods
in
cmp
xlat
outsl
mov
mov
cmp
xchg
mov
dec
enter
ss
lods
add
adc
dec
dec
sub
dec
cmp
dec
sarl
in
dec
push
out
loopne
stc
stos
loope
mov
mov
mov
mov
adc
xor
mov
pop
push
mov
mov
inc
arpl
fadd
pop
mov
lahf
cmp
add
jg
sbbl
test
bound
pop
rorl
and
mov
ljmp
popa
xor
dec
les
cmp
mov
and
cmp
sbb
jmp
sub
mov
out
test
nop
jle
dec
xchg
mov
insl
ljmp
push
inc
mov
repz
cmp
mov
pop
stos
mov
or
cmp
dec
xor
jmp
and
sub
and
sti
sub
jle
xchg
mov
daa
icebp
cmpsl
pop
mov
sub
pop
addl
sar
mov
outsb
mov
sbb
jnp
xor
xor
cmp
sbb
inc
into
mov
mov
mov
jae
lds
cmp
dec
or
faddp
pop
lods
std
popf
cmp
daa
cmc
sub
inc
add
adc
pop
outsl
mov
cmp
pop
shll
inc
clc
pusha
cmpsb
pop
and
mov
cld
fstpt
cmp
jae
sub
adc
mov
xchg
fcomip
lods
mov
stos
cwtl
push
mov
testb
mov
or
push
inc
lret
xchg
xor
aam
cmpsb
cmp
sbb
movsl
mov
mov
fidivs
dec
cld
fs
lea
sub
movsb
mov
pushf
in
cmpsb
xor
orl
adc
imulb
push
cmpsl
or
test
repz
xor
pop
adc
sub
push
mov
cmp
or
mov
mov
sti
cmc
cs
pop
sbb
sbb
adc
fsubrp
out
cmp
popf
inc
stos
cmpsl
mov
xor
clc
aam
cmpsl
push
pop
jg
inc
push
shll
jmp
cmp
xchg
sarb
mov
jae
aad
sti
mov
mov
mov
and
sub
jb
hlt
sub
jp
cli
lret
imulb
maskmovq
idivl
push
mov
fsqrt
xor
jl
add
popf
pushf
loope
cmpsb
sti
lea
and
adc
mov
mov
cmc
and
push
pop
notb
repz
dec
mov
ret
xchg
xor
leave
hlt
add
lods
stos
inc
cmp
adc
mov
xor
fwait
mov
fwait
xor
clc
adc
xchg
inc
iret
das
pop
add
sbb
push
int3
mov
inc
and
enter
xchg
or
iret
cmpsl
or
mov
push
pop
or
out
out
ret
mov
cmp
mov
cwtl
mov
mov
in
adc
or
xor
xor
fcomps
arpl
or
dec
sbb
jo
bound
xorb
sbb
adc
mov
mul
cmp
adc
or
mov
arpl
inc
cmp
push
mov
jnp
or
cmp
jecxz
fwait
mov
insl
les
shl
or
pusha
sbbl
push
cmpsl
mov
sbb
xor
in
xchg
repz
jecxz
and
mov
push
daa
dec
rorb
jle
leave
mov
call
mov
ja
mov
cmc
cmp
stos
push
sti
adc
fld
lret
mov
xchg
ret
add
xchg
and
sub
or
jecxz
pop
xchg
xchg
loope
cmp
loopne
mov
popa
in
mov
or
cld
or
stos
jns
fcmovb
push
orl
jmp
fs
xor
gs
test
xor
push
pop
and
push
jmp
sbb
pusha
cli
jne
stos
xor
ret
push
in
jmp
lea
pop
lods
stos
xor
lds
cmpsb
cmpl
sub
or
or
mov
xchg
sti
es
xor
inc
arpl
push
mov
out
bound
aas
or
scas
mov
das
aaa
gs
cli
xchg
cmp
out
cmp
xlat
sti
push
and
mov
lret
xor
mov
lret
jne
mov
mov
stc
loop
adc
fdivrl
xor
outsb
inc
xchg
jg
stc
mov
ret
push
ficoml
add
mov
mov
jg
xchg
fadds
pop
sahf
mov
push
addr16
pop
pop
push
adc
push
jno
cmp
push
and
xor
push
jbe
jle
or
xor
leave
push
out
adc
inc
fstp
add
sti
jae
ljmp
out
rcl
mov
imul
fwait
cmp
dec
call
pop
std
shl
out
stos
mov
loopne
mov
imul
mov
popa
mov
mov
pop
arpl
mov
ljmp
dec
mov
and
push
adc
pop
dec
out
mov
mov
adc
mov
push
lahf
xor
mov
xchg
adc
ficoml
inc
fstl
sub
repz
inc
bnd
inc
xchg
arpl
bound
shlb
jne
lret
dec
xor
xor
mov
aad
rorl
xor
and
in
mov
mov
cs
mulb
jmp
inc
push
repz
pop
inc
push
mov
int
or
push
dec
fwait
loope
lret
cmp
ret
and
push
add
cmpsl
inc
js
fdivrs
pop
cmp
mov
cltd
lock
xchg
inc
mov
scas
mov
sti
pop
push
in
cmc
cmpsl
push
xor
mov
pop
mov
fcomp
and
outsb
nop
sbb
imul
push
mov
jnp
mov
pop
xchg
adc
jp
push
inc
sbb
sarl
jg
outsl
cwtl
aad
fdivrp
scas
mov
sbb
xor
pop
sbb
pop
sub
pop
xchg
mov
test
sbb
daa
jbe
pop
repnz
scas
inc
adc
xchg
sub
pop
rol
sbb
subb
add
mov
adc
push
xchg
dec
rclb
pop
jo
in
pushf
stos
push
inc
dec
jo
xor
mov
pop
arpl
inc
jp
fcom
notb
fs
mov
xchg
pop
daa
push
mov
or
cmpsl
add
adc
lahf
int
mov
rcrl
mov
daa
idivb
cmp
fwait
cwtl
push
or
rolb
adc
push
fisttpll
in
add
dec
xchg
nop
jl
push
lea
roll
dec
xchg
cmp
xchg
popf
mov
jg
pop
fsubs
hlt
icebp
lods
lcall
popa
pop
sbb
mov
outsb
jg
aas
xlat
jle
jbe
pop
jg
xchg
xchg
cltd
shlb
adc
pop
shll
loopne
mov
and
sbb
cltd
jge
jl
std
iret
das
and
lret
add
pop
in
sub
jo
xor
mov
fdiv
cmpl
in
sbb
es
ficoms
and
aam
and
xor
sub
xlat
sub
insb
fldl
cmp
orb
mov
adc
aaa
and
jmp
push
cltd
jmp
js
out
test
jne
mov
mov
enter
test
inc
sub
xor
or
loopne
adc
cwtl
pop
jg
sub
jp
adc
xchg
mov
jbe
xchg
loope
xor
data16
push
cmp
jno
mov
jb
sar
xorl
sub
lods
inc
push
push
cmp
or
jbe
ds
call
and
movsb
xor
es
push
jne
movsl
fsubl
cmp
outsb
pop
push
sub
sbb
cmc
in
out
jne
call
test
leave
bound
out
xchg
and
insl
fwait
mov
push
mov
mov
jp
fisttpl
adc
imul
mov
inc
inc
pop
lret
jns
pop
pop
or
cmc
and
adc
out
and
cs
dec
adc
enter
cmc
or
je
stos
cwtl
dec
mov
mov
pop
sbb
aad
inc
in
in
and
outsl
dec
scas
push
and
popf
insl
popa
fiadds
addr16
test
arpl
test
cli
dec
sub
orb
xchg
inc
pop
imul
sub
jge
rorl
jmp
test
stos
jp
cmovle
pop
or
adc
test
inc
lods
cmp
iret
xchg
imul
cmp
gs
js
ds
out
aad
orb
ret
jg
cmpsb
call
out
movsl
inc
xchg
inc
inc
loope
roll
cmp
js
ss
sbb
das
xor
jns
fidivl
shl
in
outsl
shlb
jno
adc
cmc
pop
push
and
xchg
daa
mov
add
mov
scas
mov
lods
js
xor
cmp
rolb
pop
mov
stc
cmp
fdivrl
xchg
pop
lret
outsb
inc
in
pop
int
test
mov
pop
inc
movsb
add
add
movsl
xchg
pop
mov
in
bound
andb
pop
cmp
lret
shll
pushf
pop
cmc
fiaddl
sub
add
jae
inc
pop
and
sarb
stc
aaa
inc
cli
pop
dec
fmulp
or
popa
pop
push
in
dec
es
cmp
push
pop
jecxz
ficompl
into
jb
aaa
stos
mov
mov
xchg
repz
mov
arpl
les
push
push
xor
lret
rclb
stc
sbb
pop
mov
mov
jp
add
rclb
adc
adc
sbb
mov
cs
cmpsb
mov
insb
push
cmp
mov
lcall
test
out
xchg
sbb
cmc
std
and
push
sarl
pop
roll
xlat
xchg
cli
adc
insl
fdivrs
les
dec
adc
sbb
and
or
insb
mov
add
mov
adc
push
icebp
test
js
push
popf
jns
aad
sbb
cs
aam
sbb
inc
jmp
or
leave
retw
shll
dec
mov
push
push
push
jne
cltd
adc
outsb
movsb
out
stc
inc
aam
xchg
lret
pop
dec
mov
jl
lret
inc
push
dec
movsb
sbb
pop
adc
mov
adc
in
dec
inc
outsb
scas
mov
sbb
mov
mov
xchg
cmpl
xor
jns
in
or
fcomps
and
xor
mulb
ja
fiaddl
sbb
cmp
push
hlt
mov
xchg
dec
push
xor
inc
inc
fistps
mov
or
filds
std
lods
mov
inc
enter
shrl
popa
xor
mov
or
bound
pop
mov
mov
push
mov
and
jle
aaa
mov
scas
add
mov
mov
jp
jge
add
outsb
sbb
push
out
sub
sbb
inc
sbb
mov
imul
xor
sti
lret
jl
iret
mov
movhps
movsl
pop
push
icebp
mov
sub
pop
ss
not
in
pop
pop
xor
insb
fcmovne
out
jnp
fisubs
cmp
jl
loope
pop
xchg
lock
mov
ret
pop
cmpsb
push
test
sbb
mov
ja
mov
lds
push
shlb
xchg
pusha
sbb
xor
shrb
in
in
mov
xchg
hlt
jg
pop
sbb
stc
ror
sub
cli
push
test
jle
loope
loope
aad
push
out
lahf
jnp
xchg
sbb
stc
lret
mov
cmp
imul
jns
mov
sbb
xor
lods
dec
push
xchg
adc
xchg
and
aam
sub
xor
adc
sub
mov
lret
sbb
js
imul
jno
jns
loop
xchg
xchg
in
sbb
lock
mov
or
divl
jne
lods
sbbb
outsb
push
dec
inc
sbb
clc
adc
arpl
jge
rcll
inc
filds
xchg
sbb
in
ds
inc
shll
data16
xor
inc
ljmp
sbbl
stc
pop
mov
scas
test
sbb
cwtl
xchg
movsb
mov
mov
je
or
xor
and
inc
cld
push
ficomps
push
popf
jp
sub
push
xor
jo
dec
stc
push
inc
lods
mov
mov
in
add
dec
lods
mov
xor
iret
out
cltd
cmp
je
sub
rcrb
cmp
mov
pop
mov
mov
push
adc
fsubr
loope
cmp
js
sbb
sbb
sbbl
or
fidivrs
inc
add
mov
push
adc
xor
sti
push
pop
jmp
xchg
ret
mov
addr16
lret
cmpsl
dec
mov
inc
in
and
mov
or
out
daa
mov
or
es
push
dec
mov
jl
sub
and
mov
cmp
iret
lods
cmp
sub
movsb
push
ror
cmp
fisubrs
stc
aas
adc
lahf
inc
pop
add
aad
xchg
imul
adc
jmp
push
mov
outsb
mov
push
jle
jb
out
pop
pop
fwait
cmp
fwait
in
addr16
icebp
mov
ja
pop
aas
mov
push
cmpsb
inc
sbb
test
push
notl
in
add
mov
roll
lret
sub
xchg
in
out
jae
pop
les
insl
jnp
out
sbb
stos
movl
cmp
cmp
hlt
xchg
jne
mov
xor
mov
xchg
notl
shll
jae,pn
xchg
testb
fadds
mov
fistpl
insb
cmp
fwait
add
imull
xor
mov
scas
in
sub
xchg
sub
inc
dec
mov
mov
fisttpll
or
in
inc
xchg
repz
push
and
std
cmc
or
jge
mov
je
clc
xor
rcll
divb
cmpsl
enter
mov
pop
mov
lcall
inc
enter
aad
dec
inc
aaa
fsubrl
push
cld
es
sub
cmpsb
loop
mov
adc
sbb
and
test
mov
pop
imul
insl
jecxz
divb
mov
stos
daa
test
fldcw
out
push
push
icebp
scas
lock
scas
xor
aas
test
mov
lcall
cmp
jo
inc
stos
xchg
sarl
stc
lret
shrl
fwait
push
mov
pusha
daa
aad
xlat
xchg
call
add
mov
lock
xor
mul
fisttpll
mov
inc
enter
movsb
shll
mov
cltd
popf
and
sbb
out
adc
sub
inc
sbb
xor
jne
push
out
adcl
aaa
pop
data16
or
pusha
aas
insb
xchg
out
cmp
or
imul
jbe
and
idivb
jp
fbstp
lahf
dec
dec
scas
shl
sahf
mov
leave
cmp
sbb
xlat
adc
scas
pop
cld
mov
fdivs
jb
out
mov
sti
sahf
xor
push
test
mov
add
in
mov
je
aad
jmp
pop
xchg
cmp
bound
push
mov
repz
popa
stos
mov
add
dec
scas
and
sarl
xchg
pop
cmc
sbb
mov
mov
jg
dec
push
aas
xor
xor
mov
dec
into
nop
adc
sbb
jle
cld
sub
scas
dec
push
adc
xor
popf
mov
cwtl
xchg
mov
cmp
aam
mov
mov
out
sub
imul
inc
dec
push
sahf
or
cmpsl
sbb
hlt
lret
cmp
divl
mov
or
adc
jecxz
dec
cmp
pop
shlb
shrb
dec
stc
call
push
push
mov
inc
fs
orl
jecxz
dec
jno
hlt
sbb
pop
jb
scas
mov
popa
cmp
lea
popf
lea
fimuls
xor
loopne
adc
jne
insb
lcall
addr16
pop
and
pop
loop
out
decl
mov
arpl
test
adc
enter
mov
adc
imul
mov
push
fcoml
loopne
hlt
push
mov
jmp
dec
xchg
mov
adc
push
repz
or
adc
out
test
or
lods
mov
orl
js
mov
negl
add
and
and
adc
pop
xor
popl
and
fisubs
jo
lods
jnp
xchg
inc
sahf
xor
jne
cmp
cmpsl
sti
lods
sbb
push
xchg
outsb
jns
pop
dec
out
sub
imul
je
and
add
inc
xor
nop
ds
lcall
push
xorl
inc
shlb
sbb
push
lret
push
jg
cmpsb
xor
mov
mov
movsb
inc
jo
push
cli
roll
popa
mov
hlt
mov
sbb
in
cmc
mov
shrb
cld
and
and
inc
sub
frstor
adc
push
aad
dec
outsb
add
icebp
daa
push
mov
int3
sub
shlb
test
hlt
push
jl
inc
lods
movsl
cmp
cmpsb
push
jbe
mov
icebp
jge
jmp
fnstsw
aas
fisubrl
xchg
std
sbb
psubb
movsb
cmp
shll
or
xor
sub
sbb
popa
jge
mov
ljmp
fistps
sub
sbb
pop
int
pop
jae
pushf
mov
icebp
jo
bound
sbb
cs
push
sbb
cmp
les
lcall
daa
into
adc
sub
push
aaa
repz
lea
push
xchg
inc
push
sti
addr16
es
gs
xor
sahf
test
cmp
insb
xchg
popf
aam
dec
sbb
cltd
je
iret
cwtl
add
dec
adc
enter
xchg
push
fimull
add
lods
pop
and
jecxz
cs
inc
mov
sub
mov
dec
or
push
and
adc
inc
fldt
dec
ss
std
lds
jnp
stos
xchg
cmp
imul
push
sbb
popf
je
push
jle
jmp
mov
xchg
mov
and
jnp
xchg
imull
push
xlat
mov
adc
into
rcr
adc
jae
pop
lea
or
push
jo
inc
xor
dec
and
adc
or
mov
xchg
jo
test
clc
xchg
lods
mov
mov
jo
insl
js
mulb
incl
aaa
mov
sub
adcb
icebp
mov
mov
mov
xchg
adc
movsl
push
xor
loopne
or
inc
mov
jmp
sti
xor
call
or
cmp
pusha
push
push
and
mov
addr16
lcall
pop
das
loope
push
or
xchg
add
mov
push
cmc
loopne
mov
sbb
daa
inc
jle
cmc
mov
ja
cmp
popf
popa
andl
add
jg
push
inc
push
add
pop
loope
jecxz
movsl
es
inc
mov
lea
push
in
pop
lret
mov
pop
pop
jns
push
imul
dec
fadds
pop
push
call
mov
loop
data16
outsl
mov
xchg
into
mov
daa
std
mov
adc
outsb
push
push
shrl
lea
push
cmpsb
in
pop
movsb
nop
and
daa
dec
sbb
push
sub
fstpl
popa
xlat
clc
add
jns
pop
xchg
iret
pop
into
sbb
scas
ret
fidivs
mov
xchg
shrb
cmp
cmpsb
jb
pop
xor
xlat
stos
adc
sbb
lcall
ljmp
imul
mov
pop
mov
lea
dec
sbb
inc
adc
sub
mov
out
mov
sub
pop
mov
push
xchg
leave
pushf
mov
or
xchg
add
adc
popa
sbb
fnstenv
push
xchg
stos
adcb
cs
iret
lods
notl
js
daa
add
movsb
pushf
jle
popf
aad
call
xchg
push
or
jns
aad
dec
or
cld
hlt
pop
dec
and
push
xor
push
fisttpll
pop
enter
stos
push
aad
or
mov
addr16
pop
inc
cld
jmp
lock
sahf
cmpb
lock
push
xchg
xor
stos
inc
xchg
movsb
data16
ljmp
jle
ret
int3
mov
sbb
jl
iret
cmp
cli
shll
in
aam
xor
push
es
add
adc
lahf
mov
adc
jns
or
mov
imul
cmp
jl
fwait
stc
pop
pop
xchg
xchg
push
jl
push
leave
push
lds
std
bound
pop
pop
sahf
xchg
and
jle
or
into
shl
icebp
adc
mov
xchg
in
popa
sahf
rol
movsl
scas
add
rcrb
popf
add
inc
jno
add
cmc
iret
mov
ficoms
pop
lahf
cld
and
pop
mov
mov
clc
mov
std
andb
jecxz
pop
aam
scas
scas
loopne
xchg
xor
dec
xor
or
pop
mov
push
jge
imul
jge
std
mov
movsb
jae
jmp
out
adc
insb
cltd
inc
adc
jp
out
xchg
js
push
mov
adc
push
test
cltd
pop
fmul
mov
in
aam
fdivl
pushf
es
andl
xchg
mov
and
jl
scas
loope
aam
xchg
mov
enter
pop
ret
add
outsl
and
das
aas
push
decb
sub
aaa
test
mov
xlat
imul
cmp
mov
out
jge
cmpsl
ret
mov
inc
mov
les
mov
in
xchg
lods
lods
arpl
lahf
adc
jle
xchg
repz
pop
rcr
inc
dec
cltd
punpckhbw
popf
iret
aaa
cli
sbb
mov
mov
push
xor
shlb
repz
xchg
mov
rol
adc
mov
clc
loopne
mov
mov
xchg
pop
ret
cmpsb
dec
cmp
icebp
fmul
inc
pop
sahf
adc
test
nop
dec
imul
push
in
dec
push
out
add
ljmp
cmp
pop
aaa
add
and
cmpsb
jno
cmp
cs
dec
imul
and
pop
lret
shrb
add
inc
outsl
arpl
push
push
jp
hlt
movsl
jle
ret
cmp
lock
mov
ret
int
xchg
es
sbb
adc
cwtd
mov
leave
loopne
repz
in
push
fwait
sbb
jns
sub
xchg
or
fisttpl
mov
sarl
adc
incb
jecxz
jo
lea
popa
sub
xlat
inc
adcl
mov
ret
push
xchg
push
push
testl
sbb
inc
ror
in
or
cmp
mov
xor
lahf
loop
sub
test
testl
cmp
mov
adc
lret
movsl
mov
inc
xor
imul
movl
jl
cmp
xchg
and
xchg
cmp
sbb
mov
xchg
repz
int3
mov
cmc
mov
loop
in
pop
pushf
inc
jbe
enter
daa
jl
push
xor
mov
push
insb
popa
loop
test
xchg
inc
sbb
aaa
cmc
add
sbb
mov
lahf
and
sub
jge
clc
mov
into
pop
push
mov
sahf
xor
xchg
test
jb
mov
mov
or
cmpsl
sub
test
or
aad
hlt
ret
popl
add
push
jb
add
inc
cmpsb
pop
rclb
rcrb
icebp
fmul
cld
lahf
fisttps
punpcklbw
mov
xchg
inc
rolb
push
mov
cltd
push
sti
into
mov
imul
mov
xchg
push
inc
adc
push
mov
jno
sub
adc
cld
js
fstpt
mov
mov
xchg
mov
xor
push
or
pop
xchg
pop
jns
jmp
mov
add
push
adc
cmp
movsl
mov
cmp
mov
mov
ret
nop
pop
mov
xlat
inc
pusha
cwtl
mov
int3
add
scas
jnp
inc
lods
fcoms
rol
lds
ja
pop
push
push
xchg
pop
loope
iret
mov
test
and
adc
mov
test
stc
fbld
insl
inc
add
out
inc
cmp
movsb
stc
and
jo
pop
loopne
inc
push
cmp
push
test
sub
outsl
loopne
mov
dec
vpmaxub
scas
add
icebp
in
stc
push
add
pop
jp
fwait
pop
xchg
cwtl
jg
xor
dec
mov
mov
mov
xchg
xchg
ss
fucom
mov
fsubrs
ds
ds
or
push
aam
movsl
xor
or
push
cld
mov
stos
popf
fmul
push
lods
pop
fdivl
cmp
xor
mov
ds
arpl
int
push
faddl
mov
or
mov
and
inc
int3
and
xchg
sub
sbb
jle
lods
jno
adcl
lods
ss
sti
cs
cmp
pop
adc
pop
or
cmpsl
and
scas
popa
mov
dec
mov
pop
jle
sbb
jg
mov
pop
in
sti
sbb
or
out
rcrl
aam
aam
gs
stos
sti
loop
daa
insb
cmpsb
or
outsb
mov
stos
shrb
inc
xchg
dec
mov
pop
mov
pop
shrl
repz
test
test
lret
xor
xor
ret
pop
add
fstpl
or
dec
adc
in
jl
push
jne
repz
iret
mov
iret
add
leave
xor
enter
leave
pop
cmc
fadds
lea
pusha
push
lods
xor
jbe
and
cmp
sbb
jl
insl
mov
test
nop
and
je
lods
fidivrl
data16
hlt
pop
enter
filds
insb
xor
andl
inc
outsb
push
loope
pop
je
orb
jno
inc
adc
outsb
testb
pop
mov
adc
mov
sbb
jnp
mov
cltd
aad
jae
push
dec
in
add
scas
pop
daa
push
popa
popa
das
pushw
orl
rcrb
push
fsin
pop
mov
sbb
cmp
decl
addl
pop
pop
outsl
push
lods
adc
out
scas
mov
out
mov
or
into
in
cmpsb
dec
mov
inc
xchg
push
enter
mov
imul
pop
mov
or
sbb
aas
xor
adc
popf
rorl
popa
inc
insb
lea
clc
lret
sbb
dec
jae
adc
xchg
adc
pop
adc
int
push
movl
mov
pushf
and
int3
dec
push
push
rorl
inc
pushf
and
lret
ss
mov
arpl
pushl
adc
mov
bound
ja
mov
or
data16
jmp
push
cmp
xchg
pop
dec
push
push
in
mov
dec
testl
mov
or
cmp
fcoml
dec
es
mov
sahf
rcrl
cli
ficompl
adc
lea
jecxz
into
add
lods
pop
push
or
or
push
fwait
bound
xlat
xchg
int3
or
pushf
popa
add
dec
inc
and
mov
dec
out
push
push
and
lcall
pushf
fcomps
and
and
dec
cmp
mov
popa
and
pop
sub
aam
jmp
adc
testl
loope
add
fistpll
shl
fldenv
mov
out
xchg
pop
scas
lea
test
push
and
les
repz
sbb
fstpt
jmp
or
xor
jbe
add
mov
mov
divb
test
imul
es
ja
cmc
lcall
dec
jno
pop
jno
jle
add
sbb
push
sbb
dec
ret
pop
mov
sbb
pop
imul
imul
pop
pusha
mov
imul
jns
loope
dec
loope
adc
loope
rol
jge
xchg
out
insl
push
push
sub
cmpsb
inc
mov
xchg
add
jae
idivl
cmp
call
sbb
sub
mov
in
jo
dec
cmp
fildl
sbb
or
mov
cmpsl
fldenv
mov
xchg
lea
je
insb
or
or
mov
inc
fidivrl
neg
outsb
fisttpll
in
jno
rol
rolb
cmp
ja
xor
sbb
xchg
div
int3
gs
mov
scas
inc
and
sub
mov
cmpb
xchg
xorb
pop
ss
xor
dec
xchg
loopne
mov
clc
mov
dec
cmp
mov
and
jg
fldl
mov
ds
or
into
movsb
movsb
xor
or
lret
test
xchg
push
aaa
pop
pop
xchg
and
iret
aad
sub
push
addr16
or
cwtl
aam
icebp
dec
ja
out
sbb
push
mov
mov
sbb
pop
pop
loop
imul
jo
xchg
movsb
cmc
xchg
lock
inc
fisttpl
test
in
addr16
nop
outsb
adc
fadds
lds
mov
int
fdiv
fmull
lock
push
adc
mov
jae
fisttps
sub
fsubrl
sub
rcll
dec
pop
test
and
jle
or
and
push
daa
adc
and
inc
xor
mov
cltd
enter
iret
ja
lret
adc
xor
adc
add
pop
and
sbb
enter
mov
cmp
fscale
dec
jp
push
pop
lds
pop
fnstenv
mov
aam
dec
adc
lret
repnz
add
dec
aas
enter
cmpsl
mov
mov
xor
inc
lahf
sbb
call
xor
jecxz
insb
stos
out
jecxz
roll
jo
movsb
ja
lods
imul
xor
jnp
mov
cmp
push
push
out
test
lret
xchg
sbbb
stos
jnp
mov
rcr
dec
sub
add
jmp
fsubs
cmc
mov
lods
std
dec
mov
and
cmc
mov
scas
inc
ljmp
xchg
add
dec
aaa
pop
fistps
cmpl
mov
mov
push
cmp
movsl
insb
add
hlt
std
rorl
push
fisubl
xor
nop
js
push
test
shll
jmp
push
js
lds
mov
jne
iret
sub
pushf
cmp
mov
cmp
iret
outsl
or
loopne
fmul
addr16
cmp
cmp
decl
sahf
out
push
push
inc
xor
jg
int3
mov
cmp
repz
test
cwtl
daa
and
jmp
inc
mov
leave
bound
call
fldcw
cmpsb
fbstp
sub
int3
jb
jmp
or
xchg
sub
cmp
nop
dec
mov
aam
je
xchg
cltd
mov
outsb
call
stos
xchg
dec
push
add
hlt
hlt
push
mov
push
test
mov
push
leave
fwait
sub
lods
sti
mov
dec
fisttpll
int
xchg
arpl
cmpsl
jno
push
cli
es
addr16
xchg
cmpsl
push
cmp
aaa
loop
sub
popf
xlat
pop
mov
inc
gs
leave
pusha
mov
xchg
pop
add
fmul
lods
pop
icebp
or
inc
inc
flds
imulb
inc
insl
in
and
mov
push
pop
lds
test
leave
jno
pop
mov
fldt
pop
pop
and
stc
andb
ja
jle
lahf
pop
imul
bound
movsb
jg
neg
mov
jnp
cmpsb
andb
lret
ret
mov
inc
divb
lahf
mov
sbb
sti
ror
cmp
icebp
pslld
out
xor
mov
xchg
pushf
xlat
pop
mov
pusha
xlat
lods
aad
inc
sarb
jno,pt
xor
fistpll
lea
push
mov
jbe,pt
rcrl
in
mov
cmp
mov
xchg
pop
lods
adc
cld
aas
pop
push
test
dec
popa
inc
cmp
or
popf
mov
xchg
shrl
or
lods
cmp
cs
ss
enter
pop
js
mul
add
jno
xchg
cs
rcll
insb
stos
out
add
jg
mov
popf
rcl
push
fwait
imul
sbb
mov
jnp
pusha
add
test
aad
jbe
ds
loopne
adc
outsl
popa
push
notb
adc
pop
xchg
cs
cmp
movsl
push
inc
das
js
aas
fidivs
mov
les
lcall
cmp
inc
dec
jb
popf
mov
dec
inc
ds
ja
aam
sbb
pop
mov
iret
cmp
in
shll
pushf
sbb
push
mov
les
dec
sbb
jo
dec
stc
pushf
adcl
pop
out
adc
sub
sub
roll
fnstsw
lcall
push
and
mov
inc
xor
fptan
mov
in
test
xchg
cmp
push
aas
pop
std
add
incl
ret
jecxz
jg
stos
inc
dec
cwtl
icebp
negl
mov
adc
jecxz
dec
ret
notb
adc
aas
xor
sbb
int
xlat
add
cmc
add
jb
enter
mov
jp
sbb
shrb
divb
pop
cmp
adcl
hlt
adc
sub
stos
fcmovnbe
cmp
aaa
adc
push
je
and
xchg
or
sti
out
xchg
cmc
fildl
pop
sbb
ja
mov
jne
cmpsl
jl
es
cwtl
cmp
mov
push
addl
fisubs
clc
add
inc
mov
add
inc
decb
ret
popf
repz
jp
push
push
sbb
ds
pop
inc
lods
ds
shufps
arpl
fs
pop
pop
imul
inc
pop
sbb
cmpsl
dec
cltd
fdivr
js
xchg
mov
adc
inc
bound
mov
scas
into
jnp
aam
mov
or
add
mov
adc
mov
fwait
das
xchg
ss
pop
mov
adc
loope
les
leave
inc
dec
xchg
push
sub
aas
out
scas
push
mov
sbb
sarb
cltd
rolb
push
add
imul
dec
cmpl
mov
popa
ja
xchg
jp
dec
mov
pop
pop
xor
mov
jl
aaa
mov
jge
mov
xchg
xchg
add
xorb
or
adc
movsb
outsb
xchg
push
or
lds
push
and
test
cmp
cmp
fadds
add
test
sbb
sub
roll
mov
dec
pop
inc
inc
pop
fnstsw
pop
jnp
rcrl
mov
movsb
inc
pop
sbb
mov
cwtl
shll
sub
fs
std
adc
roll
inc
in
cld
negb
call
aad
cmpsl
pop
rorl
pop
cmp
ficompl
cmpsb
or
aam
jns
inc
sar
fsubrl
sub
mov
insb
jge
mov
xchg
xchg
dec
push
or
adc
mov
cmpsl
xorl
out
pop
xlat
arpl
movsl
lods
mull
and
jge
inc
add
pop
jns
cmp
jb
push
popa
pop
call
loope
adc
es
dec
adc
xor
cmp
or
mov
hlt
push
shll
sub
push
sub
mov
sub
out
cmpsl
mov
loope
cmp
mov
ficoms
push
andl
sub
fucomi
xchg
leave
or
in
out
inc
inc
xlat
cwtl
dec
sbb
in
jnp
dec
adc
mov
out
mov
mov
pusha
aas
das
mov
ret
inc
add
popf
xlat
scas
cs
and
pop
into
jb
pop
mov
pop
mov
xlat
mov
icebp
int3
test
push
lds
inc
sar
cmpsl
xor
hlt
push
mov
fwait
cltd
sbb
lods
add
mov
adc
int3
popa
pop
repnz
sbb
test
dec
pusha
jmp
sbbb
mov
xchg
pushf
aaa
mov
repnz
sub
dec
rorb
and
dec
test
xchg
aam
mov
pop
add
fcompl
ds
adc
adc
addr16
or
xlat
jae
mov
mov
mov
xchg
fistl
shlb
in
push
cli
and
aas
or
iret
hlt
ds
lods
xchg
into
cwtl
inc
push
movsl
mov
push
aam
push
jge
sbb
ja
pop
lds
ljmp
sti
sbb
jp
aam
add
push
dec
xor
jmp
insl
push
iret
cmp
mov
push
sbb
jge
mov
movsl
mov
push
jmp
imul
pop
enter
mov
or
inc
ret
push
aas
lock
xchg
mov
jmp
cmpl
roll
cltd
arpl
call
adc
add
bound
es
sbb
mov
fs
sahf
push
sbb
lock
inc
push
mov
ret
cmp
stos
xor
add
push
pop
int3
adc
nop
add
jb
mov
sarb
ja
inc
lock
lea
xchg
inc
push
shr
xor
xor
pop
xor
fs
invd
mov
push
incb
imulb
xor
ffreep
cltd
sub
or
inc
lods
jl
push
dec
push
push
adc
mov
sarb
das
leave
arpl
sbb
ljmp
mov
imull
imul
mov
or
cmc
pop
jecxz
and
icebp
stos
or
cld
mov
stos
nop
jle
enter
inc
ss
xchg
fisttps
or
dec
and
mov
dec
cmpsl
adc
jp
outsb
ds
push
movsl
xor
lods
fdivrl
call
in
test
shll
jnp
cmp
jo
std
inc
adc
and
pop
sub
mov
pandn
arpl
iret
inc
test
ret
iret
mov
add
cmpsl
test
add
xchg
je
in
lods
jp
mov
add
sub
das
cmovne
jmp
dec
jmp
jg
nop
test
cld
sub
pop
sbb
or
inc
xor
dec
xor
in
mov
adc
pushf
aas
in
sahf
push
and
xor
sbb
ja
mov
sub
dec
push
push
mov
fs
out
loop
sub
adc
into
sub
test
jge
movsl
aas
into
ljmp
test
les
pop
sbb
sbb
jl
movsb
clc
xchg
repnz
stos
jmp
ret
cmp
pop
xor
je
sub
dec
mov
cmp
popf
divl
and
ficoml
insb
cld
sti
dec
push
xchg
pop
lret
rorl
xchg
ja
scas
push
jae
sahf
add
jae
and
inc
xchg
fsub
push
pop
daa
cmp
test
mov
xchg
adc
fmull
ror
xchg
inc
and
movsl
incb
push
in
inc
ret
fs
mov
aam
in
cmc
and
pop
and
cmpsb
pop
mov
xchg
es
cmp
xor
sbb
mov
pop
cmp
push
cmp
sbb
or
adc
add
ret
add
filds
push
dec
icebp
cmpl
push
clc
jl
jle
xor
in
leave
add
scas
ret
push
and
sub
adc
mov
cwtl
outsb
dec
pusha
js
cmpsl
les
test
insb
mov
das
cwtl
pop
xor
lahf
push
jl
push
sbb
push
push
pop
adc
movsl
mov
inc
or
add
insl
push
xor
into
in
cmp
mov
pop
jg
sub
push
adc
jno
dec
sbb
adc
call
jecxz
or
imul
lods
mov
xchg
mov
or
and
enter
into
mov
test
cld
insl
xor
mov
fwait
cmp
lret
mov
jo
js
aas
mov
mov
cmpsl
popf
jl
or
mov
fadds
js
mov
sbb
movsb
fs
add
lock
dec
hlt
xor
int3
mov
pop
lods
call
pop
pop
jnp
lock
shlb
test
fmul
mov
ffreep
daa
add
mov
pop
xchg
cmp
fldl
xchg
dec
cli
stos
rorb
cltd
je
ds
mov
sti
into
sti
icebp
popa
sbb
fiadds
push
stc
xor
cmp
fdivl
je
rorb
cltd
imul
test
call
or
outsl
pop
and
mov
jae
sub
xchg
mov
sub
dec
lcall
ljmp
push
shr
xlat
out
sbb
andb
and
daa
jnp
nop
mov
js
mov
inc
cmc
xor
popf
sti
add
fisttpl
xchg
repnz
push
loope,pn
lret
into
sbb
sbb
jecxz,pn
gs
inc
mov
sarl
cmp
mov
add
divl
lahf
sub
jg
dec
rcrl
jb
xor
pop
pop
xor
fisubrs
push
sbb
lret
inc
jo
insb
xchg
pushf
mov
jl
out
cmp
ljmp
aam
sahf
cmp
fsubs
push
pop
mov
dec
cmp
push
fisubl
popa
mov
mov
pop
sub
pop
scas
adc
xchg
mov
fwait
cmp
stos
and
mov
popa
lcall
hlt
mov
js
mov
sub
popf
add
sbb
dec
xchg
push
icebp
or
inc
test
xchg
jl
dec
lods
mov
mov
adc
in
mov
add
popf
les
test
add
cmp
cmc
call
cwtl
out
push
in
adc
dec
pop
mov
pop
nop
pop
loop
push
xor
inc
fsubl
aad
jnp
pop
popa
and
sahf
mov
mov
aad
mov
repnz
movl
add
xchg
sahf
jecxz
push
cmp
pop
out
fisubrs
orb
push
setbe
mov
xchg
shll
cmp
push
lahf
jmp
mov
xchg
in
imul
das
sbb
movsl
sbb
stos
adc
pushf
pop
mov
mov
stc
fs
pusha
push
adc
sub
pop
cmp
ret
push
addr16
push
inc
bound
hlt
dec
mov
out
jecxz
push
mov
not
cmpsl
or
int3
shll
data16
daa
mov
cwtl
mov
push
in
loopne
xor
das
mov
out
hlt
jmp
jbe
das
mov
test
dec
push
mov
dec
push
mov
repnz
jne
sub
ja
mov
jecxz
push
push
ret
or
stc
push
or
push
lods
jl
mull
cld
mov
xchg
popa
mov
xchg
cmpsl
jae
shll
xchg
mov
inc
sub
sbb
jecxz
adc
cmp
mov
mov
ret
rcrb
rcrl
cld
add
mov
dec
jae
xchg
mov
sbb
fwait
pop
sarl
int3
mov
pushf
adc
loope,pn
push
mov
jno
mov
loope
mov
test
int3
emms
mov
call
loope
pop
cmp
or
jp
decl
adc
push
sbb
or
jmp
adc
dec
jns
dec
push
mov
inc
fcmovu
cmp
das
lcall
enter
popf
pusha
add
insb
mov
or
push
ljmp
mov
xorl
in
aad
xchg
jecxz
stos
jl
cmp
xchg
outsb
jno
aad
mov
jmp
in
loop
fistps
cmpsb
jo
arpl
lcall
idivl
lds
in
int
jo
mov
xor
stos
popf
mov
jno
data16
xchg
dec
mov
lret
dec
push
daa
xchg
mov
iret
je
mov
arpl
dec
ss
lret
enter
movsl
adc
cmc
and
xchg
data16
sub
cwtl
mov
mov
cmc
mov
mov
hlt
fdivl
mov
mov
mov
repnz
orl
or
mov
dec
ja
mov
in
mov
add
pop
je
int3
movsl
mov
imul
push
rclb
daa
lret
aad
push
in
adc
mov
in
popf
xchg
daa
stc
test
pop
das
jecxz
mov
dec
out
outsl
jge
ljmp
sbb
enter
or
xor
push
ret
leave
or
mov
push
out
dec
movsl
out
mov
jmp
mov
mov
lods
ljmp
sbb
loope
pop
and
imul
loope
pop
and
dec
mov
cmpsb
lea
loope
add
stos
or
mov
push
gs
cmp
sbb
shr
or
sbb
and
dec
nop
fildll
and
lcall
cmc
inc
and
lret
popf
jns
xchg
mov
jp
outsl
mov
mov
mov
push
jecxz
jecxz
repnz
xor
lods
int3
inc
stos
mov
pop
sahf
data16
lods
test
fsub
sbb
sbb
adc
xchg
mov
out
xlat
adc
fucomp
or
aam
fs
xlat
je
ffree
add
xor
mov
bound
sub
cmp
push
adc
adc
lds
and
jne
xlat
test
cmp
lahf
pop
jl
popa
popf
lret
repnz
mov
out
lcall
imul
push
daa
cmp
ja
int3
bound
sub
sahf
or
sub
roll
dec
adc
nop
lds
add
jns
lock
push
pop
addr16
lahf
test
push
int
pop
fwait
pop
dec
stos
pop
jmp
push
fldl
andl
popf
lcall
iret
jne
inc
push
jge
pop
mov
xchg
das
mov
stc
fiadds
add
jge
mov
pmulhuw
xor
scas
flds
jae
inc
sub
daa
les
push
sti
std
mov
adc
fcompl
call
ret
lds
xor
add
jb
testl
outsl
subb
cmp
in
jg
dec
or
aad
insl
shlb
cmpsl
mov
push
ret
adc
outsl
test
inc
nop
mov
and
or
ds
adc
and
pop
xchg
sti
inc
mov
lods
sarb
bound
push
mov
mov
cmc
jp
nop
mov
jnp
clc
pushf
ficompl
mov
mov
inc
aaa
or
pusha
mov
in
int3
sbbl
push
lds
scas
push
inc
mov
add
orl
sbb
ja
lret
or
mov
je
andb
jno
jae
es
inc
pop
in
adc
and
pop
or
adc
inc
js
or
mov
jmp
loop
inc
xchg
fnstenv
fsubl
in
sub
js
pop
lea
jp
pop
jmp
je
sbb
rclb
jb
and
call
jp
mov
and
xorl
loopne
or
loopne
popa
pop
adc
or
dec
subb
push
pushf
std
cmp
in
fwait
imul
jmp
dec
call
push
or
repnz
mov
sarl
cmp
mov
test
pop
pusha
xchg
int
stos
and
sub
inc
sbb
sub
push
lods
jg
lret
ss
push
popf
icebp
sub
xchg
test
inc
jae
sti
sbb
rclb
inc
push
push
ss
push
pushf
testb
cli
arpl
addr16
or
sbb
and
add
xchg
pop
mov
out
inc
out
fwait
clc
inc
mov
inc
shl
nop
movsb
enter
cmpsl
push
lahf
pop
lret
mov
out
jmp
mov
or
scas
mov
sub
jns
out
sub
push
xor
jo
repz
pusha
mov
xchg
xlat
ss
je
xor
pushf
insb
and
lea
fldcw
sbb
xchg
loopne
push
test
cmc
add
adc
cmp
adc
fists
xor
scas
pop
loope
ret
movsb
lret
xchg
jge,pn
dec
rol
lahf
adc
in
inc
or
xor
xor
jecxz
jg
cmp
pop
xor
push
call
shl
js
clc
and
rorb
sbb
roll
mov
test
xchg
es
push
imul
cmp
hlt
add
adc
pop
js
stos
gs
push
xor
insb
ret
dec
clc
cwtl
xchg
sub
jp
pop
and
adc
out
jae
fdivrs
loop
mov
jmp
dec
pop
outsl
or
push
arpl
sub
dec
sub
pop
cld
fcmovu
icebp
xchg
cmp
pop
in
sbb
aam
movb
add
adc
cmp
pop
inc
push
add
lahf
sbb
dec
out
in
jmp
cltd
dec
adc
ja
cmc
sbb
push
sub
sbb
push
adc
out
arpl
push
lods
fwait
adc
lcall
loop
xor
xor
orb
arpl
and
mov
lods
pop
cld
insl
cmp
stc
cmp
dec
ret
rcrb
stos
sub
xchg
das
pop
dec
in
pop
push
fs
or
push
mov
cvtpi2ps
jge
call
orl
cmp
rorb
fdivrs
iret
mov
dec
int
mov
adc
cmp
jnp
adcl
test
cmc
xchg
xor
insb
fs
in
pushf
mov
cmp
or
aaa
data16
test
pushf
loope
test
inc
sbb
push
sahf
jo
test
out
xchg
xchg
cmp
cmp
cmc
push
cs
subb
mov
jle
cld
push
aas
sub
pop
mov
or
ret
outsl
das
mov
xor
and
xor
pusha
cmp
xchg
in
lahf
insb
fistpll
xor
into
out
mov
mov
jg
adc
add
xor
outsb
and
pusha
xor
dec
xchg
mov
mov
and
sub
adc
cwtl
inc
sub
mov
jl
sarl
cmp
or
shrl
mov
xor
and
cs
add
xor
jo
xor
cs
out
pop
popa
gs
inc
sbb
mov
lods
insb
roll
ret
cmp
pop
xchg
jmp
sbb
stos
push
testb
dec
js
add
cmp
in
imul
je
inc
in
jecxz
jno
xchg
dec
cltd
or
and
xor
repz
pop
outsb
push
dec
orb
sbb
loop
xor
clc
out
jns
push
outsb
negl
daa
pop
push
les
aas
addr16
mov
jo
mov
mov
add
mov
sbb
jmp
cmc
faddl
out
add
ja
xchg
add
shlw
sarb
aam
pop
sub
sub
fwait
inc
out
fs
pop
mov
movb
arpl
dec
jp
add
pop
xor
mov
arpl
pop
pop
lds
out
xchg
into
fistpll
jmp
shl
int
cmp
add
jns
test
lret
mov
test
add
mov
adc
out
xchg
js
mov
inc
es
mov
fistpll
push
or
clc
les
test
pushf
xor
add
jp
sbb
fisttpl
xor
push
sub
rep
mov
sbb
lret
aam
repz
sub
ljmp
add
imul
lods
shlb
push
adc
shll
stos
cmc
pop
push
xor
pop
sub
std
out
xchg
fucomp
lret
into
fs
xor
popa
or
or
les
nop
dec
mov
mov
lret
movsb
aam
cwtl
push
adc
and
test
js
addl
inc
cmp
fwait
xchg
shr
push
in
sub
aad
fistl
mov
adc
js
sub
in
sti
xchg
ds
ljmp
cltd
sub
mov
enter
jecxz
xchg
outsl
cmp
lods
cmp
sub
cmpsl
out
xor
inc
pop
xchg
mov
lcall
addl
pop
cwtl
push
xlat
jnp
mov
lahf
cmpb
push
xchg
add
inc
dec
jb
out
xor
insl
dec
adc
data16
loope
sub
fidivrs
add
mov
fs
mov
bound
mov
jmp
bound
bound
fisubrl
sbb
jp
pop
rcll
add
lods
cmp
pop
push
cmp
fstp
mov
ljmp
stc
dec
addl
aas
aad
inc
lret
sahf
popl
data16
mov
lret
and
in
ljmp
scas
dec
inc
inc
adc
pop
fisttpl
jmp
test
inc
arpl
jo,pt
xor
nop
push
jp
pusha
iret
push
ds
mov
adc
add
mov
loope
xchg
pop
cwtl
cmpsl
jns
out
loopne
push
pop
pop
imul
xchg
mov
adc
rclb
sub
and
adc
cmp
and
dec
imulb
sub
cltd
xchg
imul
mov
pop
or
jb
jne
std
std
xor
out
push
in
mov
pop
cmc
mov
push
inc
icebp
or
int
fnstsw
xchg
and
and
push
je
and
popf
mov
divb
test
add
inc
jnp
push
test
sbb
inc
enter
mov
iret
sahf
xchg
test
mov
stos
cmp
and
mov
push
addr16
sub
and
dec
mov
adc
or
hlt
adcl
dec
sub
push
sub
xchg
mov
jbe
test
int
adc
ss
fnsave
jmp
pop
imul
jmp
das
and
daa
xlat
fsubr
inc
dec
scas
fbstp
sub
es
mov
gs
mov
sbb
mov
push
or
adc
mov
mov
pop
sub
sub
pusha
ds
adc
popf
pop
xchg
jl
pop
arpl
sbb
icebp
inc
push
dec
push
stos
dec
pop
lock
stc
pop
push
fwait
dec
out
cli
shr
test
stc
cmp
notw
mov
jge
push
add
xchg
sub
push
pop
add
sub
xchg
dec
lahf
call
sahf
pusha
or
dec
or
iret
xor
xlat
mov
js
cmp
add
nop
push
cmpsl
lahf
and
mov
jnp
sbb
mov
lret
xor
mov
or
jb
adc
cmp
adc
test
xor
sbb
inc
mov
outsl
stos
and
movsb
sbb
xchg
das
add
push
mov
sbb
loope
and
mov
or
jmp
pushl
and
xor
add
inc
roll
or
test
shl
ljmp
dec
cli
test
mov
mul
inc
into
push
sub
inc
mov
cmp
cmp
sti
xchg
scas
sbb
dec
hlt
xchg
fidivs
ret
stc
aam
in
jmp
nop
add
mov
adcb
ljmp
xchg
pop
mov
daa
call
lret
cmp
cmp
cmp
xchg
jno
sbb
lods
out
mov
cmp
cmpsl
subb
movsl
dec
daa
adc
mov
push
pop
dec
and
data16
mov
enter
aaa
mov
jmp
cmp
stos
mov
insl
jp
sbb
lds
out
sub
cwtl
bound
xor
mov
shrl
ret
lods
pop
loope
push
mov
pop
xchg
mov
sbb
mov
popf
fadds
mov
sub
sub
xchg
mov
fwait
xor
xor
rorl
negb
pusha
mov
mov
and
mov
xchg
ljmp
in
dec
mov
popf
wbinvd
into
loopne
cmpsb
jbe
mov
cmpsb
shrl
lahf
js
jmp
dec
xchg
fmuls
lret
push
lds
in
and
jnp
aas
cltd
insb
out
jns
jge
sbb
adc
aaa
outsb
in
data16
sbb
push
int3
scas
test
imul
mov
and
ror
pop
sbb
cwtl
jge
mov
or
jne
outsl
es
scas
loopne
mov
push
mov
inc
push
push
movsb
mov
or
adc
mov
jbe
dec
fcompl
jl
inc
aad
movsb
jnp
fidivl
or
rcll
ret
dec
icebp
mov
int3
ret
mov
ljmp
xorb
mov
fisttpll
mull
sub
adc
pop
fidivrl
jno
out
lret
jg
ror
pushf
fistpll
stc
mov
jo
sbb
mov
sbb
mov
shl
rcrb
pop
in
mov
scas
sbb
pop
scas
sub
push
lcall
je
adc
cmp
mov
das
pop
push
lcall
dec
rclb
mov
sub
jl
inc
inc
cmp
xor
add
add
aas
add
popa
pop
inc
dec
mov
cs
inc
out
or
add
sbb
or
cmp
dec
xchg
aaa
mov
testb
xchg
sub
push
test
xchg
out
cvtps2pi
cmc
loop
test
popa
sub
movsb
rcl
cltd
add
or
mov
fstps
loope
mov
jns
in
and
call
stos
pop
das
jbe
jle
loopne
sbb
mov
movsl
cld
dec
ja
or
sub
std
es
pop
jno
ljmp
fsub
pop
push
fadds
cmp
pop
jno
pop
inc
in
jbe
orl
pop
mov
sub
iret
ja
test
pop
dec
data16
cmp
jno
aad
jge
mov
aam
inc
fidivs
icebp
test
sub
cwtl
pop
sub
pop
ret
sbb
mov
jmp
js
cltd
test
movsl
mov
cltd
fcompl
addr16
fnop
xor
push
call
std
sub
hlt
xchg
daa
mov
dec
or
cwtl
in
mov
xchg
insl
cmc
push
cmp
inc
mov
adcb
cmp
test
scas
mov
fcompl
cmp
das
in
mov
out
xchg
xchg
sbb
imul
repnz
or
test
cwtl
dec
icebp
not
icebp
mov
popl
pop
xchg
dec
stc
push
cmpsl
int
insl
int
icebp
fcmovnbe
leave
mov
daa
arpl
xlat
repz
dec
push
jnp
sbb
data16
dec
add
sbb
dec
out
xchg
pop
negb
shll
pop
movsl
out
xlat
insl
insb
hlt
cmp
or
cmp
jge
scas
pushf
cvtps2pd
add
nop
daa
xlat
jl
mov
fidivs
xchg
out
lcall
xor
fisttpll
pop
pop
mov
mov
jmp
mov
mov
aam
jae
outsb
pushf
mov
aam
xchg
ss
jns,pn
test
push
push
add
lahf
je
test
mov
fucomp
pop
dec
stos
jle
xchg
ret
sbb
push
mov
sub
std
dec
repz
call
data16
inc
add
or
stos
push
jnp
jno
cli
pop
and
cwtl
enter
xchg
mulb
inc
mov
cmp
in
stc
aad
dec
lock
outsl
sbb
loop
adc
lea
cmpb
push
xchg
sub
adc
psadbw
pop
addr16
int3
dec
out
sbb
ret
cmp
call
dec
out
sub
rorl
out
cmpsl
fcmovnbe
xchg
aad
mov
imull
pop
bound
leave
cmp
xor
pop
stos
xchg
ss
inc
dec
repnz
int3
nop
or
loop
sbb
add
sbb
push
lahf
insb
ret
stos
adc
cmp
mov
mov
and
daa
push
addr16
test
int
xchg
leave
push
lods
mov
pop
adc
sub
call
in
mov
push
popa
loopne
out
rolb
fs
sbb
stos
sbb
daa
sub
dec
push
test
ret
xchg
sbb
insl
cmp
lds
push
adcl
mov
lds
fcomps
adc
adc
pusha
dec
or
nop
clc
jl
lea
push
loopne
imul
push
sbb
test
xor
inc
mov
push
jnp
sarb
sbb
sti
push
or
adc
repnz
mov
in
push
pop
out
mov
inc
loopne
adc
jecxz
pop
sbb
faddl
sub
dec
test
movnti
jge
adc
mov
pop
dec
popf
lret
mov
cmp
mov
push
push
push
jp
insb
stos
sbb
cmp
frstor
xorl
rorb
or
mov
ret
mov
fwait
movsl
inc
and
adc
sahf
sbb
ljmp
and
push
loope
daa
mov
mov
test
int
xchg
out
or
push
inc
adc
jle
js
inc
cs
xchg
shrl
fsubrs
pushf
and
mov
pop
sbb
sub
pop
lea
mov
add
data16
int3
scas
cmp
outsl
mul
pop
shlb
dec
test
call
inc
es
nop
sub
incl
jmp
sbb
clc
test
hlt
jb
cmp
mov
hlt
xorl
imull
enter
mov
add
jle
sub
stos
fwait
enter
cwtl
imul
mov
xchg
aas
push
into
mov
and
je
shlb
hlt
sti
cmp
dec
mov
adc
push
test
mov
dec
not
add
adc
aam
out
scas
cmp
inc
scas
lods
and
test
sbb
or
xor
dec
pop
scas
cmp
dec
jp
mov
cmp
or
mov
push
ror
repnz
das
cmp
pop
xor
adc
push
cmp
in
jne
mov
or
dec
pslld
xlat
out
dec
fidivrs
hlt
je
in
inc
lret
enter
js
and
cwtl
fdivrl
insb
lahf
inc
inc
jmp
loope
inc
push
jo
fldenv
and
ds
sub
and
ljmp
jnp
mov
loopne
hlt
das
inc
xor
lock
sbb
mov
xchg
outsl
inc
adc
push
call
sbb
test
cmp
stos
movsl
cs
or
lock
jnp
add
insb
dec
int
mov
jo
adc
xchg
sub
xor
cmc
cwtl
movsl
ret
mov
mov
fstpl
ds
and
mov
test
ret
mov
leave
pop
cmp
nop
mov
jge
mov
cmc
pusha
pop
mov
into
shl
leave
test
inc
fwait
adc
int
mov
cli
call
pop
add
addb
jle
das
xchg
adc
out
pop
rcrl
aam
repnz
mov
fs
rol
inc
repz
add
inc
fdiv
jbe
xor
imull
push
jo
dec
add
pushf
push
rorl
sbb
out
out
aad
push
outsb
pop
andl
lods
jge
rcll
cltd
dec
ds
adc
jne
and
xchg
negb
das
push
jns
clc
aaa
jo
in
rorb
jg
je
cs
sub
adc
jnp
mov
push
insb
fldt
mov
shll
lds
mov
mov
icebp
adc
xor
xchg
push
jl
inc
xchg
stos
push
lods
sti
or
inc
ljmp
sub
daa
mov
cli
cwtl
hlt
sub
jl
mov
fs
pop
insl
cli
fcompl
xor
mov
mov
insb
shl
jns
xor
adc
fidivl
cmp
sub
fstpt
adc
add
xor
xor
cmp
inc
sbb
and
sbb
add
pop
sbb
daa
cmp
jge
shll
vminpd
test
int3
dec
imul
popf
push
idivl
lea
rorb
lea
sub
cmpsb
push
aas
cli
rcrb
mov
push
icebp
inc
cmp
xchg
lahf
andb
jo
and
sub
push
mov
pop
jle
lds
adc
dec
push
mov
popa
add
dec
test
push
sbb
xchg
cli
push
lods
in
lods
xor
jge
push
fxch
fs
cmp
pop
cmp
mov
adc
popa
dec
push
dec
xor
inc
add
adc
inc
cmp
and
test
int
scas
jne
push
cmp
mov
pop
clc
sub
inc
xchg
sub
push
or
pop
insl
in
adc
call
jecxz
inc
jmp
adc
inc
inc
pop
cmpsl
fsubrp
ja
pop
xchg
ds
andb
and
push
pop
jns
andl
and
imul
cli
push
push
out
lahf
out
call
out
dec
push
jns
shl
adc
lret
pop
xchg
inc
popf
jo
push
cmp
cmp
inc
test
sbb
call
xchg
pop
call
mov
add
inc
mov
or
ret
iret
pusha
repz
push
adc
cwtl
jmp
dec
in
stc
cwtl
sbb
test
sbb
jno
dec
inc
loop
mov
jbe
sub
adc
ret
ljmp
sub
sub
cmp
cmp
nop
jecxz
jl
mov
jg
xchg
jae
jge
in
jo
leave
adc
dec
gs
iret
or
xor
push
add
shll
shlb
shrl
inc
out
jl
jl
mov
sbb
int3
sbb
dec
xchg
xlat
test
imul
dec
pop
mov
xchg
xchg
xchg
or
cwtl
mov
xchg
movsl
rcrb
pop
test
sub
test
adc
mov
ja
or
rcrl
xchg
test
or
aas
incl
popa
ljmp
popf
neg
imul
js
adc
movsb
jno
into
les
inc
imul
mov
rcl
fcomps
test
mov
adcb
int
mov
pop
cltd
jns
btc
jae
shlb
fisttpl
push
test
pop
mov
mov
iret
fdivs
adc
icebp
lea
jne
sub
fsubs
mov
xchg
adc
sbb
xlat
jno
lcall
ss
pusha
andb
dec
mov
xor
sbb
push
jne
cmp
jno
rclb
dec
or
arpl
sub
cmp
inc
adc
test
test
cs
pop
mov
cs
and
pop
inc
lret
ljmp
sbb
mov
sbb
faddl
push
data16
dec
lock
adc
divl
lods
add
test
jecxz
jge
mov
and
cmpsb
out
sarl
push
shr
sub
xchg
dec
xchg
aam
and
mov
iret
and
popa
mov
ret
loop
mov
mov
inc
and
adcl
xchg
fisttps
fldt
je
cwtl
lds
das
and
daa
in
popa
mov
and
scas
pop
pop
sub
aaa
push
mov
fsts
sub
jne
and
sbb
cltd
sub
fdivrl
xchg
push
push
fs
add
fsubl
push
mov
push
std
pop
sub
inc
loopne
paddd
in
fisttpll
mov
daa
lret
mov
lock
lret
je
inc
push
jp
or
or
sbb
mov
lcall
bound
fnstsw
sbb
cmp
inc
dec
add
fwait
cld
negl
into
mov
clc
cmpsb
cmpsb
push
mov
lret
xor
or
loop
xor
and
leave
push
sarb
rorb
adc
push
jnp
dec
scas
stos
pop
dec
dec
cwtl
orb
fs
xor
cli
ret
lods
cwtl
enter
aaa
ret
dec
push
mov
fdivr
inc
sbb
cld
sbb
xor
or
cmp
inc
cmc
and
xlat
xor
aad
das
push
mov
cmp
push
cmp
mov
mov
movsb
stos
out
mov
ret
loope
sub
and
fists
jo
push
xchg
int3
pushf
sub
sbb
fstl
ljmp
int
divb
int3
inc
xor
ret
sub
push
and
mov
push
dec
sbb
jle
ds
adc
and
aad
add
or
jne
xor
jo
stos
testl
xor
dec
and
sub
outsl
and
jae
bound
stc
mov
push
dec
aad
or
pop
movsb
mov
setl
fcoms
popa
dec
cmp
fbstp
pushl
je
mov
in
mov
lret
add
xchg
test
sbb
xchg
add
sub
inc
outsb
in
pop
out
adc
xor
jb
shl
or
nop
mov
sub
push
pop
sbb
pop
inc
rol
rcr
in
xorb
add
lea
stc
add
push
push
add
sbb
add
inc
pop
nop
add
mov
lock
push
add
aad
imul
pop
js
sub
mov
fcom
ret
adcl
sahf
pop
sub
lret
or
dec
pop
lcall
rcl
inc
pop
out
xchg
pusha
push
negb
inc
test
outsb
add
dec
enter
inc
mov
in
rclb
add
cltd
jae
fcoms
push
xchg
pushf
popf
clc
cmc
subl
fistps
arpl
std
jnp
mov
add
and
sbb
dec
push
xor
inc
loope
lods
add
mov
lret
je
enter
les
xchg
int3
and
sarb
ret
mov
ja
push
call
and
mov
sub
enter
xor
mov
pop
icebp
test
dec
das
adc
mov
das
outsb
jp
mov
loop
jmp
iret
imul
add
cmpsl
adc
ja
fidivs
and
xchg
dec
add
push
in
es
in
mov
add
hlt
mov
mov
cmp
loop
xor
je
cmp
jmp
dec
xchg
aaa
jnp
jnp
push
test
or
add
repnz
cwtl
fs
arpl
jl
push
cs
in
stos
adc
outsb
or
mov
push
mov
rclb
idivl
in
pop
and
push
cmp
dec
outsb
mov
scas
pop
call
mov
fs
shll
xchg
add
jno
out
scas
dec
adc
nop
push
outsb
clc
enter
out
pop
cld
mov
push
test
es
rcr
inc
pop
repnz
xor
mov
xchg
mov
and
mov
jle
cmpsb
push
cmpl
loop
fcoms
aaa
jl
les
lcall
xor
lds
lret
das
mov
test
fnsave
push
mov
or
pop
dec
or
push
jle
push
hlt
xchg
sar
and
push
loope
mov
cld
or
cmp
ja
daa
mov
sahf
pop
mov
mov
out
loope
mov
ret
dec
les
pushf
js
movsl
mov
cmp
pushf
out
push
outsb
nop
push
inc
lods
sbb
cmp
push
ret
lret
jbe
adc
jp
mov
inc
fcoms
mov
cmp
addr16
into
gs
fdivrp
sbb
scas
pop
adc
bound
and
jp
fiadds
xchg
jle
lcall
mov
mov
std
jb
sub
mov
rcrb
mov
or
repnz
xchg
sti
ljmp
stos
inc
clc
fcompl
xchg
popa
clc
push
mov
fistpll
mov
aad
add
and
push
call
lahf
mov
xchg
inc
xor
ljmp
adc
mov
fstpl
out
leave
and
lahf
jle
sub
testl
daa
push
in
mov
lock
cmp
ret
xchg
scas
dec
inc
sbb
sti
aaa
pop
ss
push
jmp
clc
in
and
test
xor
mov
cmc
sahf
test
push
cmpsb
ficoml
fmull
cmpsl
aas
sub
xor
push
jmp
icebp
jl
ljmp
jb
in
hlt
cmp
and
sub
push
dec
mov
mov
clc
mov
les
xor
out
inc
adc
das
pop
dec
mov
dec
cmp
pop
das
inc
xlat
pop
dec
divb
enter
mov
testb
jp
jp
mov
inc
push
or
outsb
ljmp
cmp
jl
jp
dec
mov
push
sbb
cmpsb
inc
inc
dec
in
mov
xchg
test
inc
xchg
mov
stc
or
popa
vandnpd
add
adc
pop
or
loop
adc
cmp
mov
pandn
cmp
aad
or
sarl
inc
addr16
pusha
lahf
inc
sub
xchg
imul
cmp
jnp
mov
push
mov
adc
add
cs
mov
push
push
jge
loopne
hlt
mov
lds
clc
outsb
or
xor
dec
lds
xorl
jle
nop
ja
hlt
test
mov
pop
cmc
sub
push
and
daa
pop
push
sahf
adc
int3
les
pop
sti
cmp
and
dec
dec
gs
test
mov
mov
loop
psubq
mov
divb
dec
fcomps
pop
ret
jecxz
shrb
jnp
or
sub
fcomps
shr
xlat
dec
rolb
xchg
bsr
pop
xchg
push
in
pop
repnz
inc
jg
mov
jno
xchg
inc
sahf
das
fld
mov
imul
dec
xchg
sarb
cmp
and
rsqrtps
jp
and
push
and
call
test
or
imul
fstpt
cmp
xor
sub
push
cwtl
sub
xchg
insb
mov
shl
lret
std
mov
mov
adc
test
nop
xchg
cld
jle
cmpsb
pop
in
jae
xlat
loop
lds
jno
test
xor
inc
leave
mov
jae
xchg
push
mov
jp
mov
add
dec
pop
jno
notl
repz
in
jg
aaa
out
dec
adc
xchg
scas
int3
sub
repz
pop
das
inc
jl
into
rolb
mov
jp
or
add
dec
inc
popf
cmc
out
je
loope
xor
in
ret
mov
in
adc
sbb
jae
out
xchg
xor
fisttpl
fldl
jb
pop
add
ljmp
pop
mov
mov
out
shll
incb
sti
sub
sub
pop
std
adc
pop
mov
hlt
jl
movsb
pop
fsubrl
js
add
and
scas
sbb
jb
ds
inc
mov
les
lds
push
pushl
filds
xorl
cltd
stos
xor
dec
sbb
das
out
push
pop
inc
pop
lret
inc
movl
push
push
cmp
mov
xor
aad
mov
push
mov
xchg
sub
cmc
arpl
cmp
xchg
sub
lret
lahf
arpl
sti
xchg
repnz
movsl
push
cmp
xor
push
test
inc
orl
fistpll
sub
bound
test
test
pusha
aas
daa
lret
ja
mov
nop
in
fwait
xor
add
inc
shll
test
int3
jl
xchg
or
fidivrl
cld
repnz
mov
lods
and
xchg
sub
cmp
sub
out
mov
jae
xlat
mov
stos
jge
aam
inc
jae
pop
push
lods
call
test
aas
cwtl
subl
or
repz
sbb
out
push
and
mov
jo
xor
adc
and
fbstp
mov
movb
test
xchg
or
cli
sbb
sbb
jmp
mov
lods
jb
lret
ficompl
pop
mov
push
fldenv
testl
add
aad
ret
data16
sub
lods
and
mov
ret
dec
push
int
add
push
inc
popf
sbb
mov
jg
test
add
lahf
cmpsb
cwtl
movsl
cmp
pop
fnsave
movsl
lock
test
arpl
mov
mov
mov
mov
mov
shrb
out
scas
ds
lds
cmp
mov
fwait
dec
fwait
lcall
daa
cmpb
add
dec
or
cltd
fnstcw
clc
mov
sbb
add
lods
cltd
popf
sbbb
and
sub
fwait
addr16
jl
cwtl
fmul
xor
jg
fwait
mov
push
or
and
fs
mov
call
lea
test
mov
pushf
jg
pop
xor
int
and
adc
push
shl
rcrb
inc
push
pop
pop
inc
leave
adcb
cmp
outsl
xchg
das
push
pop
faddl
mov
sub
ss
and
pop
mov
out
inc
dec
cli
cmp
dec
cmp
cmovbe
pop
je
aam
pop
scas
ret
test
sarl
out
arpl
js
cmp
adc
addr16
enter
fsubs
inc
push
mov
push
int
rcrb
test
push
jl
dec
movsb
xor
dec
push
push
push
lods
mov
cmpsb
jae
jne
in
mov
push
fwait
xchg
mov
sbb
xlat
cmp
jb
jbe
sbb
jle
pusha
daa
xchg
jl
jmp
movsl
mov
xchg
pop
ret
clc
mov
pop
fwait
ret
mov
fwait
adc
sarl
lcall
test
or
sbb
inc
sti
jecxz
sub
pop
orl
mov
and
imul
out
mov
push
mov
shlb
jne
cmp
rolb
les
sub
add
lock
fiadds
add
push
adc
adc
in
mov
sbb
loop
sbb
pushf
in
mov
enter
sub
adc
jmp
push
lock
sub
ret
outsb
shll
jbe
popf
xor
fildll
mov
add
inc
js
into
xchg
adc
js
and
mov
pop
cld
out
inc
sbb
cmpsb
pop
mov
pop
xor
les
lret
int3
mov
cs
movsb
rcll
xchg
add
mov
dec
push
xchg
stc
pop
imull
aas
xor
aad
sbb
sbb
push
and
orb
pusha
jp
cmp
jge
jge
out
cmp
pop
jo
imul
sbb
insl
mov
repnz
push
bound
repnz
dec
scas
shll
sahf
aad
in
jmp
push
mov
sti
mov
adc
mov
cwtl
pop
push
les
mov
mov
popf
lahf
and
rcll
pop
inc
adc
fcomps
outsl
or
test
xor
jl
gs
fmul
cli
or
or
faddp
sbb
pop
jne
out
sbb
aam
pushf
cmp
gs
xchg
movsb
mov
xchg
pop
pusha
jecxz
mov
or
cmpsl
sub
push
push
movb
xchg
pop
xchg
cwtl
rcrb
into
js
addr16
inc
int
dec
add
and
inc
daa
push
xchg
dec
cs
add
test
pop
lret
popf
inc
sub
cmpsl
hlt
loopne
pushf
jecxz
insl
ljmp
insl
repnz
not
push
sbb
leave
mov
push
lret
mov
mov
test
aad
sub
pop
shlb
das
inc
inc
xchg
addr16
arpl
test
les
and
cs
es
inc
aas
jbe
es
out
scas
mov
xor
out
mov
iret
cli
loopne
push
test
outsl
dec
hlt
xor
repz
add
pop
sub
pop
push
add
insb
inc
gs
mov
aas
pop
inc
adc
fwait
inc
jo
bound
ret
dec
in
lret
in
in
push
movsl
pop
mov
test
pop
mov
and
mov
test
or
jae
inc
push
adc
or
cli
sub
cwtl
dec
pop
pop
lret
mov
push
jno
mov
test
sti
jp
leave
push
pop
pop
sbb
jmp
insb
loop
je
mov
sub
sbb
rcll
or
push
cs
imul
ds
lret
roll
aad
mov
mov
insl
or
fidivrs
pop
push
xchg
cli
bound
das
aad
inc
andb
push
insl
vpmacssdd
ljmp
adc
xchg
and
xchg
sub
in
or
jbe
inc
adc
adc
inc
pop
imul
lds
push
out
jo
imull
mov
aas
arpl
mov
in
fcoms
inc
push
mov
lea
shlb
dec
lcall
sbb
icebp
enter
xlat
adc
cwtl
fprem
sub
sbb
lock
dec
into
sarl
in
xor
inc
jbe
push
fcoms
add
fbld
push
out
fldt
cltd
push
mov
mov
and
int
jg
sbb
mov
mov
sub
xor
xor
cmp
repnz
mov
xor
add
cmp
mov
xor
repnz
pop
mov
lahf
pushf
push
and
test
aad
fisttpll
jbe
inc
je
arpl
jge
jle
int3
add
inc
cmp
inc
inc
pop
repz
cmp
mov
dec
pop
sub
adc
in
aas
pop
daa
push
xlat
jnp
das
inc
into
jl
insb
adc
adc
and
sub
xorb
sahf
enter
pusha
imul
adc
xor
test
mov
fisubrs
in
sahf
aad
idiv
sub
ret
mov
adcb
pushf
and
mov
negl
mov
dec
xor
pop
jmp
pushf
mov
cmpsb
and
sbb
xchg
mov
lahf
jne
adc
inc
xchg
scas
pop
icebp
mov
bound
test
fdiv
flds
es
jae
xchg
lods
cltd
sbb
shrl
inc
fisubrs
outsl
fcoml
hlt
push
xor
fldcw
js
lea
arpl
in
ds
inc
std
xchg
pop
mov
mov
pop
les
fstpt
mov
frstor
cmp
iret
cmp
xchg
flds
aam
adc
inc
orb
pop
test
inc
pop
and
add
lret
decl
lcall
dec
frstor
out
pop
sti
stos
xchg
test
dec
xchg
jge
ret
xchg
insl
dec
testl
js
mov
dec
iret
imul
or
jl
dec
call
sahf
adc
in
fiaddl
into
inc
jecxz
imul
cs
jecxz
in
xchg
ss
mov
sub
je
pop
add
stc
sbb
sbb
aaa
sbb
repnz
jl
into
aam
scas
divl
shll
push
imul
mov
sbb
push
inc
scas
xor
cmp
lock
pop
shll
sub
push
ljmp
fildl
bound
aaa
cwtl
loop
xor
loopne
adc
push
and
dec
dec
xchg
scas
aaa
rcrb
dec
in
fwait
dec
adc
dec
out
in
pop
cmp
jg
xchg
jl
jae
pop
jne
dec
or
add
dec
sbb
push
ja
les
add
orb
ret
adcl
mov
loopne
jno
test
shll
shl
dec
cltd
add
mov
or
mov
mov
add
adc
sbb
stos
test
stos
and
inc
dec
mov
inc
mov
mov
xchg
mov
lock
cwtl
movsb
mov
adc
xor
sub
xor
sub
imul
enter
pusha
jmp
int
popa
fs
xchg
cmp
cmp
jne
mov
cmp
sbb
mov
push
push
inc
test
cmp
mov
into
ret
pop
out
xlat
lret
xchg
xor
aam
ret
icebp
scas
mov
roll
push
fnstsw
je
or
fcmovu
xor
aas
js
dec
or
jg
mov
loopne
push
dec
jb
xchg
mov
popa
pusha
ds
dec
leave
data16
rcrb
fcoml
cmpb
inc
adc
in
mov
mov
push
hlt
inc
push
cld
pop
cld
and
fadds
mov
xchg
cmpb
cwtl
out
ret
loope
xorl
mov
or
test
shll
outsl
xor
scas
sbb
or
mulb
leave
jo
and
mov
xor
ljmp
pop
out
xchg
icebp
mov
push
icebp
roll
adc
rclb
lret
repnz
xchg
push
pop
sbb
cmp
sub
add
mov
xchg
and
cli
or
inc
xchg
mov
pop
push
jne
or
jp
add
add
js
not
mov
loope
cld
repnz
in
sbb
xchg
lcall
mov
sti
scas
push
fs
cmp
in
dec
lahf
mov
mov
xchg
inc
loop
push
jl
and
iret
aaa
enter
out
xor
stos
arpl
inc
imul
mov
jmp
push
adc
xchg
clc
es
xor
orps
movb
sarb
ret
push
jg
xchg
movsb
jno
mov
sbb
xchg
lcall
pusha
mov
mov
outsl
insl
jmp
pusha
lods
dec
lret
push
xchg
ja
xchg
adc
pop
cld
add
inc
jg
sub
andl
inc
xchg
xor
xchg
push
cli
add
je
xchg
js
insb
mov
imul
aam
fsubrs
jecxz
or
and
jp
inc
fnstenv
mov
fisttpl
shll
inc
lds
mov
test
add
pop
adc
adc
or
je
jne
jmp
es
mov
adc
sub
push
push
pop
cmp
jnp
mov
add
adc
cmp
pop
imull
mov
daa
lods
add
and
fidivs
paddusw
movzwl
xchg
repnz
lods
popa
mov
mov
jge
mov
mov
cmp
mov
aaa
mov
jge
lcall
fimull
cmpsb
adc
push
movsb
shll
aaa
xor
idivl
push
repz
mov
sbb
adc
call
cmc
xchg
mov
hlt
xorl
add
call
ds
sub
sti
push
iret
sti
aam
push
outsb
mov
xchg
push
gs
ficoml
daa
mov
pop
and
xchg
orb
sti
leave
add
and
fidivrl
sub
test
jge
dec
or
pop
and
es
sbb
jb
test
ret
test
inc
aam
mov
lcall
mov
or
aad
nop
inc
aaa
arpl
shlb
test
sbb
aas
and
cltd
cmpsb
and
loopne
sub
add
incl
mov
imul
sub
and
sub
std
fistpl
cmpsl
jl
xor
lds
sbb
mov
pop
in
mov
and
insb
sti
xor
das
cmp
jl
fmuls
xchg
jecxz
push
jge
mov
sub
and
jnp
dec
xchg
or
imul
sbb
mov
rol
mov
sahf
sar
ss
and
push
and
call
mov
addr16
pop
stos
sub
lock
sbb
sub
xchg
inc
movsl
ud0
mov
punpckldq
ja
push
adc
data16
push
jg
jl
ss
repnz
mov
in
shlb
and
or
xor
leave
sbb
leave
add
repnz
cmp
in
pop
add
jnp
xor
loope
push
xor
in
push
stos
fadds
lcall
pop
dec
xor
pop
lods
inc
xchg
jno
call
sbb
data16
jmp
mov
pop
xchg
loope
fs
inc
das
xor
sete
lret
xchg
sub
push
and
rcr
add
cmp
ds
sub
pop
test
inc
fsubl
inc
imul
jne,pt
xchg
aaa
into
push
es
push
mov
xor
push
cmpsl
inc
dec
mov
ret
fstp
shlb
mov
loope
fs
push
rclb
or
xchg
loop
jmp
lds
pop
lret
ret
pop
imul
jle
jge
aas
rorl
pop
add
sub
hlt
xchg
and
cmc
cmc
push
test
mov
out
mov
pop
popf
pop
adc
pop
inc
sbb
das
loopne
mov
outsl
jnp
sbb
xor
popa
pop
xor
push
adc
push
mov
insb
ljmp
xchg
mov
lahf
jge
test
cli
adc
mov
js
pop
mov
imul
sub
mov
cwtl
adc
mov
insb
daa
push
lock
xchg
dec
add
mov
inc
inc
dec
ja
dec
and
outsl
in
mov
popa
cltd
je
popa
pop
in
or
mov
iret
cld
xor
cli
xchg
mov
jg
aas
loopne
ljmp
add
lret
dec
and
cmp
sub
push
push
and
push
punpckhbw
lret
mov
push
cmp
mov
nop
xchg
and
jge
mov
daa
inc
scas
pop
hlt
cmp
xlat
xchg
ds
mov
pop
jge
xchg
ljmp
popa
cmpb
orl
sbb
aaa
mov
mov
and
xchg
pop
lock
out
xor
mov
and
int
push
fnsave
das
imul
ret
pop
push
fmul
cmp
rcl
addr16
std
mov
mov
cmp
cmc
sub
xchg
daa
push
mov
popa
cmc
mov
push
hlt
sbb
mov
repnz
roll
pop
mov
sbb
adc
pusha
push
sbb
cwtl
sub
ret
sub
out
mov
push
mov
add
in
es
and
ret
jae
outsl
sarb
cld
outsl
push
mov
sub
dec
mov
stos
mov
repnz
pop
cmp
das
dec
xor
mov
test
ret
daa
push
test
xchg
xor
jmp
cli
stos
pop
in
add
mov
jns
pop
jp
or
cmp
adc
nop
cmp
adc
xor
adc
mov
pop
jl
jno
sub
pop
dec
jecxz
mov
sbb
push
inc
mov
out
lods
xchg
stc
jp
fldln2
mov
insb
jns
scas
xlat
push
or
popf
dec
mov
scas
add
lret
lods
xchg
inc
andl
dec
daa
test
push
in
adc
add
clc
jns
negb
push
rclb
push
test
dec
popa
js
mov
sarl
pushf
icebp
fstpl
add
cs
mov
loope
mov
testb
frstor
daa
movsl
and
xor
and
sub
stc
fcmovnu
mov
dec
push
or
xor
pop
push
and
and
mov
adc
in
dec
sub
xor
pop
inc
loope
mov
pop
xor
test
lods
or
add
lods
pop
mov
lret
js
insl
dec
sub
ljmp
insb
mov
ja
mov
data16
add
sbb
mov
or
xor
push
inc
fisubrl
xchg
lahf
dec
inc
gs
mov
enter
dec
cli
cmpsl
orl
mov
mov
jo
adc
insl
gs
rolb
cmc
rcrl
mov
daa
movsl
cld
loopne
xchg
xchg
test
mov
adc
int3
cld
xlat
inc
xor
pop
jo
icebp
dec
stc
insb
aad
loop
jae
lahf
js
ljmp
cmp
push
push
icebp
scas
lds
pop
xor
in
mov
leave
cmp
fwait
mov
lahf
pop
test
adc
test
dec
add
mov
jno
fidivrs
jg
nop
loop
jg
aam
in
scas
push
cmp
fdivrs
adc
or
mov
lcall
sub
lahf
adc
pop
pop
mov
flds
and
cmp
xchg
nop
jb
inc
push
adc
cmpsb
inc
sub
adc
xchg
outsl
sub
leave
rorb
mov
jecxz
outsb
xchg
rclb
jo
nop
adc
pushf
mov
jo
cmp
test
mov
notb
adc
imul
pop
xchg
outsb
out
or
adc
xor
insb
icebp
loope
popf
mov
lahf
jmp
inc
dec
hlt
sub
ficompl
jns
notb
mov
pop
dec
or
sub
in
cmp
cmp
dec
aaa
lret
mov
sbb
mov
cmp
inc
and
mov
add
sub
pop
ja
mov
ds
int
xor
repz
dec
push
mov
or
test
loopne
nop
stos
add
mov
jp
js
loope
loopne
or
xchg
shll
mov
pop
push
add
mov
jp
xor
insl
sbb
testb
and
cmp
enter
sub
push
js
ja
xchg
jo
dec
std
int3
jbe
lods
jae
pop
out
mov
inc
idivl
sub
in
xchg
ds
mov
mov
pop
mov
push
scas
shl
out
shlb
test
xlat
scas
mov
push
jmp
xor
xchg
out
fs
hlt
xor
pop
ds
popa
hlt
pushf
lea
fstpl
out
xor
push
sbb
xchg
rcrl
xor
adc
imul
mov
cmp
stos
daa
jns
mov
xchg
aas
dec
das
imul
push
sbb
xor
mov
out
insl
pop
insl
pop
jne
pop
xor
movsb
clc
mov
jge
stc
mov
pop
push
push
and
sarl
sbb
sti
mov
jmp
loop
or
enter
and
xor
fcomps
and
xchg
inc
inc
push
or
pop
pop
push
add
inc
sbb
xchg
xchg
inc
xchg
lea
pop
mov
fldenv
decl
xchg
test
adc
fwait
sub
ficompl
pop
jb
pop
push
roll
push
pop
mov
adc
dec
cmp
repnz
int3
mov
stos
xor
or
aaa
mov
in
add
dec
fstp
int3
das
sahf
push
cmp
mov
jb
dec
push
cli
mov
ja
data16
push
xchg
int3
bound
mov
inc
push
jmp
mov
pop
outsb
sub
jne
pusha
in
in
aam
insl
into
fsubs
mov
push
mov
mov
out
mov
addr16
std
out
add
cmc
andl
jb
imul
adc
pop
adc
movsl
aas
sub
addr16
repz
ret
mov
andl
inc
sarb
xchg
or
push
inc
jge
cwtl
in
rol
rcll
dec
xor
fstps
icebp
sahf
cld
push
pusha
stos
clc
mov
icebp
arpl
xor
rcll
aam
outsl
ret
addr16
fwait
dec
test
shlb
dec
inc
jp
pop
jmp
push
inc
dec
aaa
out
pop
lods
push
add
arpl
pop
mov
sbb
sbb
in
fwait
cmp
dec
iret
mov
popa
cwtl
dec
insb
pop
dec
jae
fwait
orl
pop
cmc
out
lock
xchg
push
into
xor
jbe
mov
jge
sub
cmp
fldenv
push
int3
pusha
fcoms
mov
out
cmc
sahf
mov
fildl
mov
call
out
jecxz
xor
mov
xor
gs
les
pop
pop
aas
stos
outsl
cmp
pop
fstp
mov
pop
or
imul
sbb
aam
je
push
add
mov
popf
pop
dec
jae
test
mov
xchg
sbb
aaa
pop
fidivrl
pushf
clc
fsubl
inc
xchg
adc
inc
out
call
cmp
stos
aad
adcb
loop
cmpsl
push
adc
js
ret
pop
pop
ja
ret
aam
or
pop
push
cmp
cwtl
mov
adc
adc
sti
dec
push
cltd
sahf
les
push
cli
lods
jae
and
mov
add
sub
scas
xchg
dec
pushl
or
pop
sbbl
jp
mov
cmpsl
fldl
mov
cmp
fs
div
pop
rcll
test
and
pop
jp
pop
xchg
sub
leave
js,pn
add
in
and
ret
adc
xlat
aam
pusha
out
lds
clc
lods
mov
pusha
shrl
cs
sysenter
jle
mov
stos
stos
repz
popa
rorb
sbb
pop
or
xlat
pop
mov
enter
or
or
popa
lock
das
or
xchg
dec
xchg
push
shrl
xchg
shll
loop
test
stos
push
jle
mov
pushf
stc
hlt
or
xchg
push
seto
aad
sti
sub
test
jge
enter
ja
inc
stc
imul
mov
mul
fcomps
inc
jmp
xchg
popa
bound
lods
jp
cmp
xchg
dec
pop
out
mov
sub
sub
jne
sbb
xor
test
push
lret
mov
or
inc
daa
out
add
ja
pushf
jge
jl
cs
cli
popa
xchg
mov
pop
mov
popa
and
repz
mov
add
dec
pop
cmp
sub
data16
xor
mov
daa
pop
lahf
ret
pusha
sub
shll
in
scas
into
pop
std
xchg
xchg
movb
aad
xchg
push
dec
mov
mov
lods
nop
xor
int
mov
push
sahf
jmp
sub
push
xchg
xchg
shrb
mov
jp
inc
mov
mov
xchg
mov
nop
stos
or
push
or
ret
push
inc
cli
mov
aaa
inc
nop
fwait
push
xor
jp
jl
stos
mov
lods
lret
in
add
add
add
scas
sub
or
push
adc
mov
cli
orl
push
mov
pop
lea
push
imul
nop
and
into
pop
dec
mov
or
cmc
dec
xor
xor
xchg
test
faddp
lods
push
shll
xor
mov
or
and
int3
shll
int
std
inc
je
sub
je
mov
dec
dec
xchg
sub
clc
mov
mov
mov
mov
scas
out
dec
sub
push
mov
push
dec
push
push
punpckhwd
leave
mov
or
or
mov
adc
bound
mov
sub
stos
mov
pop
push
pop
lods
adc
adc
movsb
addr16
pusha
pop
mov
sbb
or
popf
and
in
pop
mov
push
out
xchg
jle
lock
shll
mov
call
enter
addr16
adc
sbb
mov
jle
out
xchg
iret
adc
push
push
mov
js
cmp
mov
fucomip
arpl
ficomps
nop
xor
push
xchg
jmp
mov
push
xchg
push
cltd
and
mov
add
popa
ja
pop
xor
pop
cwtl
idiv
sub
mov
adc
jge
lock
or
ss
inc
xchg
sub
cmp
mov
inc
jp
and
push
imul
sub
dec
xchg
test
push
ror
fwait
xchg
mov
movsl
pop
jecxz
sub
arpl
sbb
cld
pop
scas
inc
sti
dec
and
ret
lea
shr
push
sub
push
clc
mov
int
out
sbb
sbb
insl
mov
shlb
jns
test
xchg
xlat
mov
and
fidivl
mov
xchg
cmpb
insl
popa
or
mov
sbb
or
xchg
jns
stos
jne
lods
push
adcl
popf
and
mov
pop
fsubrl
xchg
push
mov
pop
lret
ja
and
fistps
pop
sarb
leave
movsb
out
or
adc
inc
sub
and
push
imul
xchg
mov
xchg
test
pop
imul
xor
mov
ret
ficoml
scas
cmp
lahf
cmp
xchg
dec
pop
mov
das
cs
cmp
pop
dec
jmp
aad
mov
adc
adc
xor
add
sub
cmc
add
or
adc
fsub
and
jo
fstp
inc
in
out
sbb
inc
jl
pop
adc
mov
out
mov
jns
push
enter
push
cmp
imul
and
cmp
push
add
dec
jge
cld
arpl
lret
xchg
sbb
insl
jns
jle
xor
les
push
rolb
cltd
jecxz
imul
mov
popa
mov
mov
clc
das
sti
daa
mov
dec
and
push
or
jecxz
jns
mov
cmpsl
in
scas
jne
inc
jno
movsl
sarl
fdivl
jg
add
adc
icebp
and
jbe
imul
mov
aam
xchg
jo
or
push
test
movsl
nop
lods
pop
sbb
sarl
addr16
sub
sti
xchg
inc
dec
dec
das
mov
popf
inc
sub
insl
ljmp
sbb
insb
outsl
mov
div
insl
sbb
cmpsl
pop
adc
stos
sbb
stos
lods
fdivl
jmp
data16
testb
mov
movsb
adc
loopne
lods
jns
inc
lock
jge
sub
xchg
jge
ja
and
inc
dec
imul
fadds
das
push
pop
ja
scas
arpl
or
sahf
mov
mov
mov
xchg
es
movsb
lcall
out
push
mov
adc
xor
push
inc
mov
les
pusha
jge
fiaddl
sub
inc
fistpll
push
in
xchg
ss
mov
jge
mov
ja
cmp
push
mov
push
fsubs
push
nop
aas
scas
dec
sbb
adcb
sub
sti
mov
jo
mov
popf
push
push
sub
push
mov
push
push
clc
cmp
lret
out
popa
sti
pop
hlt
out
shlb
call
mov
push
mov
mov
ss
popf
insb
and
pop
mov
aam
nop
add
lods
cmp
jbe
icebp
es
mov
and
dec
lret
je
adcb
xchg
or
ret
cmp
testb
xor
das
pushf
add
fdivrl
aaa
pop
push
orb
jbe
lods
dec
or
mov
les
repz
inc
mov
cmpsb
inc
popa
jp
repz
adcb
rorb
fwait
emms
cmp
aam
jnp
aaa
test
arpl
or
lret
cmp
imul
sarl
sbb
adc
out
idiv
jae
add
or
mov
xchg
xchg
icebp
mov
and
xchg
jno
repz
mov
mov
cmc
leave
and
inc
dec
loopne
or
dec
stos
cld
mov
xor
fidivl
adc
inc
jmp
dec
sbbb
pop
test
push
push
in
pop
lret
clc
inc
mov
or
test
lret
dec
addr16
cmpb
xchg
rcrl
jge
add
call
cli
scas
mov
into
gs
lds
inc
pop
pop
repnz
and
pusha
lds
iret
mov
xor
cld
push
roll
out
adc
imul
sbb
movsl
sub
inc
shl
fdiv
in
xchg
mov
pop
jb
sub
lods
jne
push
push
jbe
popa
es
lea
push
mov
pop
jecxz
mov
cld
mov
inc
popf
mov
inc
ds
push
jg
pusha
xor
push
mov
pop
mov
insb
hlt
andb
jbe
mov
cmpsl
movsl
stos
xchg
sti
fisubs
movsb
pop
jb
leave
sbb
jns
sub
sarb
gs
cmp
xchg
sbb
add
mov
sarl
js
xchg
je
ja
or
into
and
outsl
out
pop
push
sub
jg
divb
cs
sbb
lret
push
out
fldt
inc
mov
arpl
sahf
in
fwait
rclb
cltd
mov
sub
lds
int3
push
push
jl
mov
sbb
xor
pop
dec
jb
enter
lahf
cwtl
and
and
mov
push
fadds
nop
orb
push
lret
xor
add
fstl
dec
add
or
or
mov
rcll
jnp
movsb
inc
dec
shr
mov
jge
pusha
inc
pop
fdivrs
clc
or
in
pop
jl
cmpsb
pop
mov
testb
jp
sbb
adc
jp
pop
outsb
mov
xlat
inc
xor
push
test
loop
lods
cwtl
mov
inc
incb
nop
mov
jmp
push
movsl
aam
stos
dec
lds
clc
fwait
xor
mov
xor
sbb
xor
or
sarl
sbbl
inc
push
add
scas
ret
ficomps
arpl
adc
inc
xor
test
roll
add
mov
cwtl
enter
pop
fcom
test
inc
daa
and
ret
add
call
cmp
adc
jne
mov
add
nop
iret
test
shrb
ss
sarl
mov
push
jno
mov
fwait
mov
xorb
in
es
repz
cmp
sbb
jo
add
rclb
xlat
pop
lds
fbstp
push
push
pushw
pop
mov
out
int
xchg
and
addb
xchg
pop
psubw
popf
pop
jg
sbb
and
fmulp
mov
mov
ljmp
or
mov
cmp
add
out
insl
add
sub
mov
mov
hlt
pushl
xchg
mov
aaa
push
subl
shlb
mov
mov
leave
adc
or
mov
pushw
cmp
out
mov
dec
xchg
aaa
fwait
xor
stos
pop
xchg
cmpsb
inc
popf
and
rorb
or
popa
scas
incl
adc
loope
fbstp
shrb
mov
and
icebp
mov
test
adc
stc
fisttpll
stos
nop
jbe
jnp
lcall
cmc
int
adc
ljmp
jno
mov
add
and
lock
ret
in
and
mov
pop
cmp
imul
pop
xor
cli
fwait
xchg
mov
xor
adc
mov
clc
pop
lods
mulb
push
je
adc
and
pushl
mov
test
jo
lahf
idivb
bound
ret
cmpsb
xor
aaa
dec
push
sahf
cs
push
ljmp
mov
dec
mov
int3
inc
or
dec
jl
xor
ret
call
in
dec
jge
sbb
loop
sub
cmp
insl
icebp
pop
pop
sbb
scas
jle
test
fld
fiadds
out
in
xchg
aaa
xchg
jo
test
xchg
add
dec
lcall
xor
in
or
xor
and
or
or
jp
lods
mov
jl
mov
ror
inc
dec
loopne
xor
outsb
inc
cmpb
sbb
test
test
es
lock
push
push
jno
addb
out
xchg
loopne
movsb
stos
fnsave
mov
fisttpll
stc
loop
sub
outsb
hlt
fsts
jne
xchg
rcrb
movsl
lret
ja
lea
and
mov
out
aaa
popa
lcall
hlt
push
dec
repnz
xor
repz
mov
scas
xchg
add
lods
cli
in
dec
addr16
inc
pop
or
cmc
test
fadds
dec
mov
xchg
jb
sub
sbb
aaa
fwait
in
sbb
jbe
in
mov
pop
fcoms
pop
pop
jl
xchg
cmp
mov
int3
jne
mov
ja
cmp
lahf
rcrl
sub
aad
cmp
orl
push
jmp
pop
mov
rorl
mov
jp
outsb
into
sub
dec
sbb
in
aad
add
icebp
lret
sub
pop
and
mov
add
jnp
push
in
push
push
sub
push
roll
mov
or
xor
sbb
icebp
pop
jae
inc
and
test
adcb
pop
xchg
ljmp
mov
clc
xchg
imul
andl
dec
inc
enter
mov
and
ss
lcall
pop
das
sbb
movsl
and
cltd
xchg
inc
jne
or
mov
pop
dec
jmp
push
sbb
push
lds
cmp
sbb
movsb
mov
enter
xchg
dec
fwait
clc
jmp
rcr
xchg
add
dec
lcall
jp
cmp
sbb
mov
scas
jo
testb
lods
repnz
repz
lea
mov
push
cmp
xor
inc
test
jb
and
fadd
lcall
fucomp
lahf
fdivrl
xchg
push
lea
ret
loope
roll
push
repz
xor
mov
lods
and
mov
jne
pop
enter
popa
mov
mov
cmp
pop
in
arpl
cmc
test
aas
jle
shrl
leave
aas
in
jnp
sar
pop
sbb
xor
lret
sbb
aas
int3
and
pop
add
sbb
fldt
xchg
cmp
sub
or
or
shr
out
into
lock
test
das
popf
cs
pop
stos
sub
call
lahf
pop
mov
adc
out
pop
and
out
jmp
dec
push
fcmovb
icebp
je
xchg
pusha
icebp
pop
dec
es
dec
int
push
push
mov
cld
cmp
ror
leave
mov
arpl
and
mov
dec
mov
aas
cmp
rcrl
xchg
stos
xchg
inc
mov
push
mov
out
clc
ret
icebp
and
imul
nop
test
hlt
pop
ja
pop
pop
out
sbb
int
inc
icebp
sub
or
test
aaa
sub
or
ja
mov
mov
popf
mov
push
out
and
in
inc
movsb
sub
adcb
lcall
pop
or
div
inc
mov
xchg
adc
xchg
cmp
and
mov
jg
divl
pop
mov
arpl
xchg
or
push
and
mov
mov
outsl
jl
sub
imul
inc
push
mov
in
je
fld
xor
jno
in
push
jp
test
sbb
xchg
cmp
cmc
out
cltd
lcall
adc
cmp
ficompl
push
fld
cmc
pop
push
popl
out
stos
fucomp
push
jb
insl
lock
pop
mov
rcll
xchg
jbe
imul
addl
lock
imul
mov
icebp
in
xchg
jne
aaa
push
pop
sub
and
jbe
push
and
mov
dec
mov
lea
psubsw
and
mov
fists
gs
dec
pop
lret
pushf
ja
inc
out
lea
mov
pop
pop
sbbl
cmp
cmpsb
leave
push
sub
popf
aad
adc
repz
xchg
scas
jmp
sub
leave
addr16
cmp
add
dec
es
jne
enter
orl
jb
mov
into
dec
fisubrs
andb
push
retw
mov
in
or
push
jecxz
cmp
cmp
lods
test
out
mov
mov
mov
jae
xor
mov
mov
or
outsb
in
pop
fs
inc
add
mov
mov
ds
push
aas
push
or
lods
sbb
sbbb
inc
xchg
fcompl
pop
jecxz
pop
mov
dec
sti
and
out
xchg
pop
enter
dec
or
mov
popw
mov
ret
out
adc
cs
inc
add
or
inc
adc
in
mull
imul
push
ret
xchg
mov
dec
cmp
add
into
dec
insl
std
adc
movsw
inc
add
das
xchg
jae,pt
pop
add
mov
mov
repnz
xor
cwtl
popf
mov
jo
ja
cmp
jmp
lret
mov
xor
ficoml
xchg
bound
push
and
outsl
xchg
mov
xlat
flds
sbb
cmp
lret
push
push
ret
inc
lods
dec
add
mov
data16
add
imul
push
ret
adc
xor
popf
inc
xor
xchg
or
lea
xor
adcb
repz
mov
mov
pop
pop
bound
cmp
fldcw
xchg
lods
lcall
leave
cli
repnz
rcrb
cmp
repnz
pop
push
stc
out
pop
push
test
subb
jp
dec
adcb
mov
xor
xor
mov
std
aad
xchg
stos
pusha
fs
sbb
inc
cmc
loop
add
add
jo
sbbl
xor
jg
lods
arpl
push
mov
mov
mov
mov
pop
jne
addr16
jbe
jp,pt
mov
sbb
push
loop
cmp
xor
nop
adc
mov
les
inc
insl
sbb
adc
mov
dec
cmpsl
mov
and
into
xor
jnp,pn
aad
or
pop
push
mov
jne
cmp
inc
ret
repz
rcrl
dec
outsb
dec
or
add
cli
push
sbb
mov
xor
adc
in
inc
pop
dec
scas
xor
mov
sub
dec
sub
jl
and
hlt
add
stos
pop
fdivrl
xor
repz
mov
cmpl
leave
ja
aad
pop
rcrb
push
subb
and
cmpsb
cli
addr16
fistps
xchg
push
pop
bound
pop
movaps
adc
cmp
jns
and
repz
or
or
into
iret
inc
jnp
ds
ret
vcvtps2pd
mov
mov
flds
xchg
xchg
in
or
push
and
dec
mov
pop
jno
mov
pusha
aam
mov
inc
push
add
mov
stos
cmp
sbb
call
scas
rclb
jp
xchg
mov
sub
stos
sbb
mov
stos
out
insl
jnp
pop
aam
mov
cmp
js
repnz
outsb
sub
mov
inc
dec
mov
sbb
sti
data16
js
sub
popf
mov
xchg
add
or
sahf
stc
mov
xlat
mov
lods
jmp
mov
jne
mov
out
xchg
test
xlat
rclb
mov
popa
insb
out
mov
push
mov
cmpsl
test
push
xor
icebp
cwtl
movsb
push
nop
inc
cmp
in
es
cmp
pushf
rcrb
fstpt
cmp
in
cmc
es
in
cmp
jg
call
xor
sbb
pop
pop
test
daa
test
mov
cltd
adc
xor
jb
sub
sbb
and
shlb
xchg
orl
stc
xor
jecxz
jge
pop
loop
push
leave
enter
cli
outsb
repz
shll
ret
aaa
lds
and
xchg
sbb
xor
in
stc
inc
aaa
adc
and
and
xor
add
xchg
mov
int
xchg
mov
cwtl
inc
push
fsubp
push
mov
dec
f2xm1
pop
imull
sbb
xor
xchg
int3
or
mov
cwtl
inc
shll
loop
aad
lahf
xchg
mov
xor
xchg
rcrb
xchg
push
js
xor
push
int
mov
loopne
mov
pop
xor
out
stos
jae
sbb
xchg
mov
sbb
adc
adc
jne
loopne
xor
inc
int
inc
jg
jl
xchg
sbb
xchg
mov
add
mov
fildll
jbe
sbb
mov
fs
fcomi
imul
xor
outsb
xchg
push
dec
mov
mov
jp
in
cmovno
mov
sbb
push
decb
xor
sbb
adc
xor
test
jp
gs
fldl
and
cwtl
add
add
or
push
imul
ja
into
push
xor
jmp
push
popf
jmp
call
bound
inc
fimuls
push
inc
addb
sub
xchg
cmp
add
icebp
mov
jmp
pop
xchg
sti
sub
xchg
push
lahf
loopne
ror
pop
mov
outsl
rorb
pusha
popa
inc
popf
cmpsl
sbb
incl
fldenv
xchg
xchg
movl
cmc
mov
pop
cmp
data16
cmp
xchg
ficoml
outsb
sub
jl
add
cmp
in
out
mov
push
dec
mov
pop
repnz
js
rorl
sub
cmpsb
cs
ret
xchg
dec
xchg
mov
imul
push
dec
xor
out
xor
add
pop
cli
js
inc
jecxz
mov
ds
daa
fs
ud2
pop
ljmp
cmc
mov
xor
mov
ret
sub
pop
movsb
jbe
mulb
cmp
xor
mov
add
xchg
dec
fnstcw
not
push
shll
outsb
out
sub
rclb
out
dec
and
sub
push
xchg
sub
sbb
mov
or
mov
inc
dec
inc
jno
mov
pop
lret
shrb
mov
stc
testb
pop
sbb
and
xlat
outsb
mov
dec
jno
aam
fldenv
sub
pop
lods
data16
sub
out
jbe
into
mov
lea
mov
add
adc
enter
lock
xchg
sbb
dec
mov
lcall
mov
fwait
mov
jmp
jo
shl
push
adc
in
mov
jle
and
jmp
xchg
and
scas
stos
jmp
cmp
mov
push
jle
mov
sub
sbb
cltd
add
scas
mov
xchg
xchg
pusha
jns
and
mov
js
xchg
mov
cmp
xchg
cmp
les
sub
movsl
mov
pop
int3
mov
and
add
adc
cwtl
mul
and
mov
pop
dec
int
xchg
outsb
lds
das
addl
sbb
and
cmpsb
inc
in
xor
and
mov
fsin
das
xor
or
cmp
mov
imul
xorb
jne
cs
dec
lcall
outsb
jecxz
add
loope
ljmp
fwait
mov
mov
cmp
mov
test
outsl
or
dec
fistps
dec
mov
ret
cld
daa
mov
push
sbb
jle
xor
mov
pop
mov
lahf
sbb
push
pop
into
js
jae
jle
sahf
data16
xchg
arpl
ds
push
iret
faddl
std
repnz
xlat
out
sbb
aaa
pop
out
jmp
mov
pop
jl
ja
xchg
out
mov
ss
insb
mov
cli
pop
inc
stos
add
fstpl
mov
clc
mov
xchg
or
pop
xchg
cwtl
xchg
clc
test
push
sbb
or
imul
ret
xlat
stos
mov
push
cs
push
sub
mov
and
cld
add
nop
pop
push
add
or
jno
push
shr
jle
ja
imul
and
stos
movsl
xchg
lods
pop
push
cmp
cmpsl
pop
pop
pop
ljmp
push
push
xchg
ljmp
jnp
sbb
jp
aad
pop
test
push
dec
xchg
adc
jg
fiaddl
lret
push
loop
test
or
sti
rorb
pop
inc
daa
std
jne
mov
and
out
in
dec
push
pusha
sbb
push
popa
nop
push
shlb
scas
add
ja
mov
mov
sti
pop
add
sub
ret
les
cmpsl
xchg
mov
sbb
fbstp
scas
adcb
inc
idivl
dec
mov
movsl
add
mov
shlb
sub
test
and
cmp
dec
insl
test
push
sbb
xchg
outsl
pop
mov
sbb
mov
xor
pushf
or
xor
insb
xchg
push
push
clc
out
or
pop
stos
adc
in
fsubp
inc
flds
jge,pt
repz
rclb
add
fwait
cltd
out
cmpsb
sub
sbb
sbb
movsbl
xchg
mov
mov
add
mov
bound
add
test
inc
rorl
pop
jp
sub
xchg
jmp
cmp
jbe
add
fbld
jb
imul
sub
icebp
add
lret
sub
cmc
out
mov
stos
lds
pop
and
cmp
shr
xchg
shlb
mov
or
subl
ret
jge
das
jg
cmpsb
lcall
mov
sti
loop
push
faddl
mov
mov
jge
aam
cmp
fwait
dec
scas
lret
pop
arpl
pop
jns
cmc
xchg
out
fimuls
hlt
leave
pusha
pusha
jecxz
ljmp
cmp
xor
push
dec
or
add
shll
testb
lods
je
xchg
or
les
jmp
xor
push
xlat
iret
lret
mov
cli
and
mov
jbe
imul
jb
mov
and
js
push
push
mov
fs
inc
sar
movsl
sub
pop
cmp
aaa
aam
adc
mov
repz
in
sub
push
adc
add
cld
jp
lods
and
int3
push
pop
xchg
pop
repz
sbb
loop
imul
mov
add
adc
shr
sub
add
out
push
pop
mov
dec
xchg
adc
subl
mov
gs
inc
push
std
in
clc
xor
or
cs
adc
sub
sub
cli
les
pop
pushf
sub
xor
pop
repnz
and
lret
pop
push
or
movsb
sbb
xchg
out
es
aad
jg
sbb
rolb
push
jae
rcr
dec
cltd
icebp
and
add
mov
and
add
int
dec
loope
push
adc
lret
pop
dec
adc
or
push
ja
popf
add
jbe
movsl
push
inc
out
dec
repz
xor
loope
movsb
jb
add
xchg
out
cli
mov
add
pop
dec
inc
xor
int
daa
sub
call
inc
sub
stos
in
ss
das
je
dec
out
arpl
test
in
xchg
and
dec
push
jb
test
int3
mov
pushf
push
sub
xchg
std
fs
cmp
mov
adc
mov
loopne
repnz
es
popf
lea
popf
imul
ret
jecxz
push
movsb
mov
inc
sub
inc
loop
push
rcrl
inc
in
out
mov
pop
pusha
iret
mov
mov
ja
cmp
pop
push
pop
mov
jo
inc
inc
aaa
adc
or
jns
scas
mov
and
or
outsl
and
xchg
push
cmpsl
fiadds
rep
insl
push
cmpsl
leave
test
pop
test
pop
and
sti
add
xlat
mov
sub
or
sahf
xor
mov
xchg
push
fidivs
inc
push
addr16
adc
inc
dec
cmp
daa
mov
and
jne
mov
ret
cmp
repz
test
mov
stos
int
push
leave
addr16
jmp
sbb
jns
push
dec
dec
loope
repnz
jns
cs
testl
lock
or
bound
push
pop
mov
incl
call
mov
cld
pop
xchg
jbe
test
xor
stos
or
shll
push
dec
inc
push
add
or
insb
lods
inc
or
pushw
jae
xor
loop
aaa
jmp
sub
in
fildl
cmpsl
adc
jo
add
adc
xchg
xchg
mov
add
jl
pop
mov
and
pop
dec
ljmp
mov
or
xchg
dec
fcoml
das
jge
inc
sbb
cs
or
lcall
cwtl
das
pop
daa
stos
mov
outsl
test
aaa
mov
scas
dec
dec
add
popf
add
in
mov
adc
shrb
inc
inc
into
ret
testb
xlat
bound
mov
cs
cmp
jb
adc
cltd
or
clc
dec
mov
outsb
test
mov
jg
mov
lods
cmp
mov
and
mov
cs
mov
jnp
sbb
push
rcl
sti
jns
scas
push
mov
sbb
mov
push
orb
cmp
hlt
cmp
aaa
scas
xor
cmc
dec
sahf
pushf
pop
push
movsb
stos
adc
insl
cltd
pop
sub
rclb
xchg
cs
jge
add
sub
mov
lret
enter
add
or
cmp
ja
jno
dec
push
int
jne
mov
data16
xlat
int
rcl
fdivrl
je
sbb
call
shl
lea
add
pop
xchg
sahf
sbb
push
into
dec
out
xor
jae
adc
sbb
sbb
movsl
fistpl
int
inc
xchg
jl
xlat
sahf
insl
test
jl
scas
fxch
fldl
dec
push
xchg
push
cmpsb
in
and
jp
icebp
sbb
pop
je
pusha
gs
insl
xlat
jecxz
sti
xchg
mov
dec
in
sbb
loopw
gs
mov
cmc
loop
mov
stc
add
push
cmpsb
sahf
fmull
int3
fldcw
pusha
xlat
sub
or
cli
imul
lods
aad
adc
outsl
mov
adc
cwtl
rcll
ljmp
arpl
xchg
fucomp
ror
inc
int
ret
aad
shlb
fistps
in
outsl
and
ret
aas
dec
adc
or
rcr
dec
lods
mov
sbb
lock
sub
sbb
sarl
insb
cmpsl
pop
sahf
stc
ss
mov
out
nop
mov
jg
aad
mov
int3
mov
sub
bound
or
mov
addr16
push
add
lods
jne
xor
es
and
bound
pop
jle
or
loop
addr16
or
sbb
stos
push
cmp
adc
jbe
andl
leave
outsb
mov
push
adc
in
mov
inc
mov
add
mov
jns
mov
icebp
outsb
mov
lock
sbb
dec
mov
inc
ja
push
jecxz
dec
mov
imul
outsl
cmp
or
adc
sbb
outsb
das
lar
ljmp
das
adc
or
inc
movsl
jle
cmpb
in
xor
push
mov
in
add
lea
sbb
sub
dec
sub
dec
jns
call
mov
jp
jae
les
insl
pop
xor
aas
inc
push
xor
cmp
xor
into
jl
pop
fisttpl
pop
sahf
xor
xor
sar
lods
je
or
and
fmull
xchg
push
outsb
ss
mov
xlat
out
xor
std
clc
testl
jbe
arpl
test
jo
inc
add
dec
mov
pusha
mov
pop
lods
bnd
xchg
aad
sahf
jge
movsb
in
jg
lea
pop
mov
lret
lcall
je
inc
fcmovnu
or
mov
inc
sbb
cmpsb
push
mov
mov
clc
aad
cs
lret
mov
popa
outsl
adc
inc
jp
lods
inc
and
jp
iret
pop
jl
xor
outsl
cmpsb
pushf
sbb
or
cld
lcall
dec
cmpsl
cli
cmp
mov
lea
pop
sbb
fcompl
sti
hlt
or
and
hlt
dec
repz
push
pop
in
add
leave
mov
fs
jo
sbb
pop
leave
inc
ror
and
sbb
pop
ljmp
mov
cmp
add
xchg
pop
dec
or
xor
ja
cmp
xor
insb
jle
xchg
fbld
testl
or
repnz
andb
xor
cltd
jge
and
sbb
cmpsb
pop
cmpsb
jbe
es
jo
sbb
xchg
push
cmp
stos
xchg
cmp
and
loope
mov
sbb
icebp
rcrl
test
fistpl
ljmp
aad
das
imull
mov
test
call
sbb
outsb
sbb
imul
roll
iret
pop
cmc
jnp
pop
xlat
pop
adc
std
and
aaa
cmpl
and
mov
cmp
shrl
cmp
rorb
mov
sub
pslld
repz
mov
jle
clc
aam
cmp
dec
and
sbb
jp
jnp
ret
jmp
cltd
fistl
jo
mov
divl
mov
jg
pop
sub
xchg
inc
or
jno
xchg
cmp
sub
jns
dec
mov
out
shrb
add
sti
pop
aad
outsb
pop
pop
cs
leave
mov
lahf
jle
call
pop
mov
into
jbe
adc
push
popa
sub
sbb
dec
loop
sub
jp
mov
sub
push
push
mov
sbb
outsl
enter
add
fucomi
or
mov
add
fstpt
mov
js
fwait
pop
decb
or
inc
inc
jae
cld
mulb
mov
out
mov
cld
push
adc
push
das
add
sbb
lret
pop
sub
out
mov
jnp
mov
int
in
insl
sbbl
push
imul
loope
mov
cmp
pop
lahf
mov
or
and
lds
xor
jle
stos
push
xchg
mov
outsb
imulb
or
mov
imul
xor
cld
data16
sub
testl
jge
dec
fsubrs
sub
movsl
pusha
movsl
jne
pop
xchg
popa
xor
rorb
mov
lock
jns
add
sbb
cli
fsubl
popa
mov
cmc
mov
cmc
cli
popa
lahf
pop
xor
dec
data16
jmp
jo
stos
loop
loopne
push
jns
stos
enter
xchg
aas
push
xor
adc
rcll
sbb
sbb
adc
scas
fstps
in
shrl
sahf
stos
stc
xor
jg
jnp
mov
dec
in
movsl
xchg
out
jge
out
sbb
movsl
adc
dec
mov
push
gs
sahf
out
dec
dec
nop
or
das
andl
and
fstl
out
mov
popa
jecxz
or
jne
dec
test
cmc
sbb
ljmp
jnp
sub
mov
fiaddl
jp
sbb
sbb
inc
xor
mov
fsts
sub
in
mov
adc
jge
fldl
dec
fidivrs
add
inc
loop
lods
sbb
sbb
push
push
movb
pop
mov
push
mov
clc
fdivl
mov
push
popa
mov
es
cmpsb
popf
ja
movzbl
insl
cmp
or
or
push
mov
les
test
cmp
mov
fimuls
or
push
sbb
mov
sbb
fimuls
mov
mov
lock
clc
mov
popf
repz
mov
xor
test
sbb
outsl
cmp
pushf
dec
xchg
xchg
repnz
xchg
xchg
xchg
lahf
jae
clc
mov
sbb
sti
popa
frstor
push
push
or
mov
add
cli
cmpsl
lock
xor
mov
aad
pop
xchg
inc
cmpb
pop
mov
push
mov
push
repnz
loope
push
pop
inc
cmp
or
out
pop
dec
mov
les
fldl
cmp
test
xor
in
cwtl
and
push
jg
ljmp
lret
fistpl
xlat
aas
mov
push
ja
push
push
fadd
push
test
mov
jl
add
rcl
adc
cmp
cwtl
push
inc
pcmpeqw
insb
pop
decl
or
js
sbb
dec
cltd
jno
shrl
ds
test
cmpsb
push
out
adc
mov
jmp
scas
inc
stos
popa
cmpsb
dec
xor
shrl
sub
ja
dec
sub
movsl
repz
sbb
jl
out
mov
loop
pop
cmp
idivl
jno
mov
addr16
lcall
jge
mov
leave
insb
jp
mov
pop
sub
scas
pop
jb
ds
sub
sub
imul
mov
dec
fimuls
sbb
pop
int3
mov
mov
lods
aas
sub
xor
testl
repnz
mov
movsb
andl
mov
sub
sub
bound
outsl
xchg
cltd
shlb
push
xchg
mov
fwait
je
mov
lea
gs
into
sbb
in
xchg
outsl
mov
fldenv
cmpsb
aas
ja
mov
add
cs
sbb
inc
aaa
cmp
std
imul
and
xchg
inc
or
shl
jne
mov
add
inc
jns
pop
les
lcall
pop
mov
mov
outsl
mov
out
adc
fcoms
das
mov
add
jmp
ljmp
fwait
mov
es
adc
add
or
fnstsw
push
mov
adc
mov
shl
addl
jp
out
aas
pop
pop
sub
popf
adc
xchg
adc
repnz
xchg
inc
cmpsl
mov
aas
add
je
cltd
jecxz
adc
xor
inc
call
xchg
push
rorb
xchg
dec
cmp
pop
js
or
lea
mov
clc
ret
das
lret
arpl
jne
adcb
addb
rolb
mov
xchg
lods
leave
mov
out
sub
adc
sarl
sbb
xchg
push
mov
xlat
mov
inc
stos
cmp
jg
cmp
shr
dec
push
and
mov
movsb
and
mov
cmp
insl
jp
out
cmp
cltd
mov
aaa
push
cmpb
adc
lret
fs
or
dec
icebp
jg
movsl
adc
xor
and
jo
ret
xchg
lock
push
ja
and
movsl
pop
or
mov
lods
cmp
mov
flds
andl
push
and
fbld
push
mov
dec
adc
inc
inc
add
add
push
mov
call
push
jl
std
mov
dec
inc
push
cltd
inc
jmp
xor
or
outsl
adc
cmp
sub
add
xlat
repz
pop
int3
mov
add
cld
rol
gs
sbb
fimull
push
ror
xchg
test
dec
pop
sahf
in
mov
and
repnz
filds
jbe
leave
jle
lahf
sub
dec
push
jmp
repnz
xor
imul
and
fidivrs
push
popf
xchg
scas
or
and
sub
fildll
mov
add
stos
mov
mov
mov
dec
stos
add
add
insb
mov
add
call
mov
jns
movsb
fsub
outsl
xor
jnp
fldt
pushf
mov
call
and
mov
mov
jle
fst
rolb
jp
and
lea
xchg
or
sub
sti
scas
sbb
sub
jb
sbb
sub
xor
add
in
sti
dec
xchg
or
ss
push
bound
test
dec
and
mov
push
inc
sub
add
cmp
jmp
dec
inc
xchg
inc
jno
xchg
jne
out
inc
jbe
rcrl
lock
cmp
loopne
mov
lret
pop
je
cwtl
test
insb
pushf
rcrb
fnstenv
in
fistps
int
xchg
fsubl
sub
pop
xor
out
adc
dec
leave
jo
push
xor
pop
scas
in
scas
jns
add
fnstenv
xor
dec
or
mov
mov
sub
dec
and
pop
and
sub
outsb
jg
insl
jp
adc
jecxz
mov
add
dec
or
cmp
sub
pop
lds
cmc
testl
fdiv
incl
xchg
mov
and
testb
mov
insl
mov
inc
fisubl
and
fisubs
mov
addr16
jnp
cmc
jmp
push
divl
xchg
mov
xchg
test
not
sub
and
lret
js
leave
popa
jg
rol
inc
cltd
mov
jecxz
fsts
cmp
push
mov
xchg
popa
aad
mov
adc
or
xchg
add
pop
mov
cmp
xor
add
imul
repz
mov
and
stc
sub
ljmp
aaa
lods
in
fdivrs
jbe
leave
lea
add
movb
imul
adc
xchg
add
imul
jge
je
xchg
ja
push
push
ret
jns
out
xor
in
scas
repnz
mov
aad
push
dec
popf
std
int
jg
daa
sub
cmp
mov
mov
or
subb
and
xchg
inc
inc
aad
inc
cld
push
getsec
clc
mov
int
leave
mov
cmp
lods
and
in
mov
xchg
xabort
xor
mov
int
gs
push
int3
inc
sub
aas
jg
aad
loopne
sbb
jbe
shl
out
jg
dec
lea
inc
js
pop
dec
adc
lcall
cld
mov
aad
inc
shlb
stos
aad
mov
inc
mov
nop
inc
test
pusha
cltd
dec
loopne
lret
adc
rcrl
and
mov
test
push
xchg
and
mov
movsl
mov
xadd
dec
lret
loope
cmpsb
xchg
push
xchg
dec
dec
push
push
lea
jns
lods
push
mov
push
cmpsl
sti
cltd
adc
mov
cltd
dec
test
sahf
xor
cmc
scas
mov
dec
push
adc
sahf
xlat
icebp
dec
notb
mov
ja
std
lock
clc
push
adc
inc
sbbl
lods
cmpsb
cmpsl
out
xor
xor
push
add
xor
lcall
filds
push
addb
xor
cmp
addr16
lcall
push
dec
mov
mov
test
jno
xlat
out
dec
push
push
ficoml
int
pop
vmulsd
lret
push
loopne
cmpsb
jnp
jle
mov
sub
xchg
loop
mov
jnp
cmp
jle
mov
mul
lods
es
xchg
cld
and
popl
mov
pop
add
or
cwtl
scas
push
ja
sbb
add
sbb
lret
pop
pop
xchg
cpuid
pop
sub
and
cwtl
frstor
sbb
or
sti
inc
mov
test
nopl
xchg
addr16
pop
iret
mov
ret
scas
sub
cmpsb
mov
addb
sti
add
clc
cmp
int
int
aaa
loopne
pop
in
cwtl
neg
insb
sub
sub
pop
clc
call
addr16
repnz
inc
adc
xchg
cwtl
mov
and
in
push
add
mov
stos
mov
repnz
int3
andl
lcall
xchg
popf
xor
push
aam
ds
inc
rcll
sub
pusha
jge
or
push
ja
pop
imul
cmp
fsub
aad
add
sub
cmp
scas
dec
or
push
out
shrb
mov
movsl
jecxz
adc
add
xchg
mov
push
shrb
sbb
rclb
lock
daa
inc
inc
pop
in
add
jle
push
mov
sub
cmp
pop
xchg
jp
in
ljmp
out
xor
push
test
sub
push
jmp
and
pop
sub
sbb
sbb
in
sub
lret
mov
add
push
faddl
and
pop
and
cli
jnp
dec
jno
xchg
cwtl
sbb
leave
icebp
stos
in
or
mov
mov
and
enter
mov
mov
inc
test
push
lock
adc
xchg
repz
aad
je
add
stos
or
mov
inc
add
inc
adcb
mov
add
xor
into
movsb
xor
mov
out
mov
jl
sbb
aas
subl
cmp
ret
hlt
push
mov
push
rclb
push
fst
sub
cmp
mov
gs
or
imul
imul
jecxz
add
jmp
ret
pop
popf
loopne
push
inc
test
scas
jnp
xchg
mov
dec
sbb
mov
test
fwait
cli
rclb
rorl
mov
pop
or
test
call
mov
add
jl
lods
mov
enter
dec
inc
add
jge
mov
shrl
nop
int
aaa
iret
mov
popf
lahf
test
sub
jae
and
inc
rcll
arpl
fld
pop
jb
in
stc
cmpsb
xchg
and
xchg
ja
fstpl
jb
sti
dec
mov
rclb
xchg
pop
sbb
jg
out
inc
cld
push
es
xor
mov
in
loop
out
pop
or
repnz
push
sub
xchg
int3
or
lods
cmp
xor
insl
jne
pushf
cmp
imul
aaa
mov
mov
sbb
in
or
outsb
or
outsb
test
push
sahf
lock
jae
xorl
xor
out
or
xor
and
clc
in
jmp
dec
ret
scas
aaa
in
stc
das
xor
mov
xchg
xorl
cli
sbb
xchg
push
bound
xchg
hlt
dec
shrb
sahf
pusha
test
or
inc
insb
jnp
dec
push
insl
loope
enter
loop
xchg
mov
mov
dec
fcmovnu
xor
jns
dec
shrb
pop
or
data16
popf
pusha
mov
mov
pop
cmpb
mov
movsb
and
les
in
mov
aas
pop
xchg
and
mov
cmp
adc
cmp
mov
inc
jno
cmp
xor
test
cmp
ret
xchg
pop
cwtl
ljmp
inc
lahf
stos
add
mov
push
dec
pop
jae
sbb
fildll
ja
jo
in
add
into
push
dec
lret
pop
inc
pop
js
adc
jl
rclb
jg
jb
loope
shlb
and
cmc
mov
loop
outsl
jg
xchg
jecxz
movsb
clc
sub
dec
idivl
xlat
scas
pushf
xor
loopne
inc
adc
add
lock
jg,pn
mov
and
mov
xchg
xor
xchg
lret
int
sub
push
movsl
sti
ljmpw
js
loopne
call
xor
add
adc
test
int
shl
xchg
push
sub
nop
jne
scas
out
mov
dec
push
xor
xor
or
add
mov
or
jnp
inc
mov
xchg
fwait
add
dec
sub
pop
jl
inc
aad
jns
icebp
and
stos
mov
sub
and
addr16
jae
fnstcw
daa
xor
pop
data16
jno
dec
repz
ret
in
jp
lret
pop
ljmp
and
pop
stos
jge
sub
cmp
xor
imul
mov
loop
xchg
or
pop
pop
xchg
addr16
xchg
jo
rorb
stos
or
mov
stos
rol
mov
lods
mov
addb
stos
bound
adc
jo
and
popf
mov
adc
iret
lea
adc
adc
inc
inc
fisttps
cld
push
imul
mov
scas
aam
mov
imul
cs
dec
rorl
nop
adc
mov
add
push
mov
popa
in
xchg
mov
stc
sbb
cwtl
test
push
in
adc
std
mull
and
sub
or
jmp
xor
int
data16
test
xor
jecxz
mov
pop
andb
cmp
fidivl
mov
push
test
mov
sub
repnz
mov
jbe
popa
imull
int
and
inc
aad
sub
daa
dec
mov
push
push
imull
pop
or
xchg
xchg
test
or
aaa
sub
outsl
push
aad
dec
or
int3
jae
cmpsl
ret
dec
lea
and
mov
mov
loop
sbb
ds
adc
cli
adc
mov
out
pushf
dec
dec
aas
xor
adc
sbb
hlt
jbe
cmc
loop
mov
mov
mov
mov
in
iret
aas
jb
lret
imul
shlb
jns
mov
pusha
mov
or
mov
cmp
pop
push
sub
cld
scas
fwait
outsw
and
lahf
sarl
jb
bnd
insl
adc
sub
aaa
idiv
mov
test
lret
out
push
loop
jo
inc
dec
icebp
jge
xchg
addr16
xor
push
subb
mov
sbb
sbb
cld
pop
je
hlt
outsl
adc
lods
and
mov
add
movntq
push
icebp
fnstenv
cmp
adc
and
jb
movsb
in
aas
scas
xchg
cltd
dec
mov
mov
mov
into
pop
push
xchg
sub
shrb
int3
gs
cwtl
popa
test
inc
cli
mov
ljmp
inc
rcl
jle
mov
jmp
jo
lahf
cli
mov
mov
or
mov
xchg
repz
adc
inc
and
push
lods
shl
pop
fldt
lcall
popa
aam
adc
lcall
out
push
int
cld
push
adc
loopne
sarb
stos
lods
stc
adc
int3
ret
mov
or
insb
mov
jb
sbb
ss
pop
int3
mov
ret
shrl
aaa
mov
sti
in
push
pop
lods
shll
cltd
adc
or
iret
ss
inc
divl
fidivs
andl
enter
mov
xchg
hlt
leave
push
loop
mov
mov
and
outsl
mov
aaa
addr16
and
gs
xchg
add
add
dec
mov
hlt
lahf
fildl
pop
loope
cmc
dec
pop
push
shrl
cmc
mov
enter
xlat
mov
inc
push
add
sub
lret
pop
aad
mov
mov
jbe
repz
sbbl
outsb
fcoms
mov
mov
jne
mov
out
pop
movsl
and
daa
add
mov
sub
and
jnp
inc
shl
mov
sti
insl
fs
insl
rcl
stc
insb
mov
sub
pusha
and
xor
test
sbb
aam
out
mov
aaa
out
push
cmp
das
cmp
ffreep
xchg
push
loop
cmp
scas
pop
push
push
test
dec
pop
pop
outsl
adc
ret
push
xchg
test
ja
adc
jno
out
jg
imul
mov
and
inc
testl
push
push
inc
mov
mov
stc
push
and
test
jbe
dec
jge
mov
or
scas
jo
aad
arpl
in
iret
cmpsl
idivb
ljmp
mov
lock
fmull
push
mov
xchg
adc
cmp
fists
inc
push
push
xor
sahf
add
jns
cmc
dec
cmp
or
push
pushf
adc
sub
fidivs
lock
mov
xchg
ret
sub
inc
push
cmp
loopne
fwait
pop
xlat
xchg
scas
ss
testb
and
popa
leave
add
adc
push
lahf
mov
jmp
add
dec
lea
lods
sahf
jmp
cmp
mov
pop
les
das
sub
sub
adc
cs
jne
les
aad
and
scas
in
mov
jae
loopne
psubusb
js
pop
mov
jbe
xchg
addr16
js
repnz
aam
repz
inc
mov
mov
push
pop
mov
cli
nop
aam
jo
jo
pusha
dec
fidivs
push
mov
mov
das
pop
cwtl
sbb
inc
popf
ret
pushf
in
adc
jmp
mov
lcall
scas
jg
xchg
fnstsw
jg
jo
pop
imul
mov
imulb
shrl
aam
push
and
inc
add
add
jecxz
cmp
mov
outsl
sbb
stos
ret
sbbl
fiaddl
movsb
aad
mov
push
pop
gs
and
pop
enter
ja
out
cmp
icebp
or
cwtl
aas
enter
enter
pop
mov
add
popf
adc
mov
inc
imul
ret
sbb
inc
dec
and
cmp
xchg
out
add
and
lret
or
cwtl
mov
jmp
cmp
outsl
fisttpll
setp
arpl
sub
cmpsb
loope
frndint
push
js
push
mov
jmp
les
ret
aad
out
mov
dec
mov
mov
cmp
in
or
outsb
or
sarl
stos
dec
fucomi
cmovbe
push
stos
add
xchg
add
in
rcr
jp
mov
lock
sub
gs
xchg
sub
mov
add
push
cmp
imul
fdivrl
lret
push
sbb
mov
movl
sbb
adc
aam
mov
mov
pop
lea
jmp
cld
jnp
xor
mov
xor
mov
aad
adc
lods
cmc
stos
xor
data16
ficoml
mov
out
dec
dec
in
cmp
xchg
xchg
jl
gs
std
pop
jmp
dec
imul
cmpsb
lods
push
jp
mov
loope
test
adc
adc
rorb
xlat
or
popf
mov
dec
lds
mov
aas
shr
dec
lea
inc
aam
add
push
push
arpl
pusha
cmp
dec
mov
into
add
mov
filds
hlt
sub
popf
pop
popf
shlb
push
scas
sbb
pop
iret
leave
mov
pop
pop
jmp
out
stos
outsb
pop
in
jne
xchg
xchg
mov
pop
imul
push
adc
pop
pop
mov
pop
lds
mov
push
and
inc
cmp
cli
leave
xchg
mov
pop
out
push
outsl
leave
insl
popa
push
loop
and
cmpsb
mov
or
and
popf
inc
sbb
cmp
jnp
cwtl
in
or
cmp
cmc
xchg
adc
outsl
cmc
or
es
mov
into
iret
xor
xchg
ret
std
in
dec
cmp
adc
or
adc
xchg
sti
aaa
xchg
xchg
mov
out
jbe
icebp
ret
imul
pop
shl
pop
adc
jb
jne
xor
jno
in
das
scas
inc
or
and
int3
add
sub
or
mov
and
jle
xor
jno
pushf
xchg
or
sbb
jae
inc
pop
lds
adc
push
mov
mov
mov
dec
jno
inc
pop
add
ret
and
out
rep
jae
xchg
and
sub
lahf
mov
mov
lahf
repz
dec
movsb
push
push
push
sahf
jnp
test
dec
push
push
add
xchg
imulb
mov
sub
insl
xor
adc
imul
adc
bound
rorl
add
xchg
testb
cmc
lds
in
or
sub
mov
dec
mov
loop
or
lds
or
nop
push
sbb
push
out
cmc
fmull
stos
mov
sbb
push
fnstsw
fcoms
pop
nop
into
in
push
pop
lods
sub
mov
mov
sbb
sbb
popa
mov
lods
cmp
mov
jge
add
mov
adc
jecxz
nop
scas
pop
sub
mov
mov
jb
fisttpll
cmp
and
and
cmp
jno
popf
pop
pop
jnp
popa
andl
mov
cld
dec
push
add
es
icebp
add
scas
mov
mov
into
repz
jno
mov
sbb
push
popf
inc
movsb
xchg
cld
xlat
insb
xchg
movsb
xor
js
test
add
inc
out
cmpsb
js
adc
mov
popa
sub
inc
inc
testb
inc
adc
push
cmc
add
pop
adc
aam
inc
adc
loopne
scas
sbb
and
outsl
aaa
cmpsl
push
xchg
das
mov
dec
xor
std
mov
ja
loop
shl
fdiv
sub
adc
xor
imul
scas
adc
push
fwait
pop
loopne
pop
dec
mov
pushf
pushf
cmpb
sub
jmp
xchg
xchg
sbb
pop
xlat
push
xchg
and
and
xor
mov
fimuls
fstpt
pop
cs
cmpl
repnz
jno
mov
in
xchg
adc
xor
fldt
xlat
push
cmpsl
sbbb
out
push
add
fcmovbe
mov
mov
sbb
sbb
inc
cmpsl
and
xor
ja
jns
jnp
pop
push
mov
das
pop
ret
push
jecxz
mov
cld
mov
cmc
fwait
imul
jb
sub
inc
inc
lock
lock
sarl
push
lea
enter
mov
lods
cmp
fs
inc
aam
jo
mov
pop
sub
loop
adc
fildl
fwait
cwtl
add
xchg
push
jne
mov
int3
jl
sbb
sub
mov
mov
fadds
aas
inc
xchg
cld
push
and
mov
fld
pop
stos
ret
mov
adc
mov
and
add
sbbl
sbb
jge
fdivrl
repz
mov
mov
mov
mov
jmp
cli
xchg
sbb
jbe
adc
mov
nop
out
imul
dec
outsb
mov
mov
pop
scas
push
xor
dec
pop
pop
repnz
jg
mov
add
jno
cwtl
stc
ror
cwtl
mov
ljmp
popl
jge
sub
popa
and
push
xchg
xor
dec
and
push
adc
mov
push
add
call
js
or
jbe
jge
sti
addr16
iret
enter
pop
push
fwait
dec
daa
or
aas
stos
mov
pop
jge
jno
inc
mov
push
scas
xchg
movsb
push
jno
dec
xor
xchg
fcompl
insb
add
mov
xchg
cli
adc
dec
lds
das
fdivrl
outsl
pop
push
add
lret
stc
stos
add
xadd
hlt
cmpsb
jnp
pop
arpl
shrl
out
loope
mov
cmpl
sub
loopne
or
sbb
stc
push
sbb
jnp
cmp
sub
dec
sbb
loope
jo
in
mov
nop
sbb
xor
mov
jl,pt
add
les
mov
mov
inc
scas
pushf
pop
push
pop
pop
stc
test
cmp
cwtl
mov
xchg
xor
rcrl
rcll
push
xchg
xor
mov
inc
decl
push
daa
cltd
and
sub
lahf
imul
out
sti
loop
xchg
push
mov
jns
xchg
mov
scas
or
mov
cmp
dec
sub
in
negl
fildl
js
clc
aas
pop
adc
ss
mov
repnz
adc
jle
mov
add
int3
mov
lods
test
pop
cmp
into
pop
rolb
icebp
jmp
jge
dec
stos
and
es
arpl
push
pop
dec
push
push
psrlw
sbb
push
cmp
inc
dec
push
daa
push
cmp
push
shll
adc
push
lret
cmp
lods
jne
or
aas
cmp
rorb
and
mov
lods
xor
jl
push
ret
mov
pop
sbb
cmp
xchg
movsb
and
fstpl
pusha
frstor
in
mov
or
imul
xlat
mov
cmpsl
sbb
sub
addl
push
movl
xchg
inc
addl
jg
inc
lea
pop
pop
xor
adc
out
add
hlt
std
pop
cmpsb
push
divps
jbe
xor
pushf
jmp
ds
in
jne
sbb
sbb
push
ja
inc
stos
mov
xchg
lret
pusha
mov
out
sbb
popf
mov
or
lret
aad
xor
push
mov
js
ds
add
cmp
pop
rcl
lcall
push
push
push
int3
imul
popf
fxch
jge
jp
mov
mov
add
repnz
stos
aad
inc
jae
pop
lcall
daa
xlat
jnp
stos
or
test
movsb
cmpsl
imulb
or
scas
or
mov
cmp
mov
or
inc
es
or
cmp
mov
xor
push
dec
mov
shlb
jno
cwtl
dec
insb
repz
in
sbb
mov
pop
push
and
pop
iret
mov
push
inc
add
aaa
push
jmp
mov
fbld
test
fcomp
imul
dec
mov
jecxz
stos
inc
mov
fbld
push
mov
pop
jbe
dec
push
andl
or
add
jle
sub
push
loop
dec
cmpsl
jae
clc
mov
enter
lret
gs
xchg
int
cmp
xchg
mov
dec
stos
add
xchg
jecxz,pn
xchg
push
or
cmp
test
clc
sub
or
js,pt
ds
pop
adc
mov
mov
adc
and
mov
iret
sbb
repnz
aas
ljmp
inc
mov
xor
cmp
les
popa
jecxz
sbbb
icebp
sti
fildl
aas
lods
addr16
popa
adc
shr
inc
push
pop
inc
xchg
into
fistpll
daa
movsl
stos
or
sub
add
shlb
jb
movsl
xchg
inc
mov
pushf
mulb
mul
clc
lcall
dec
pop
mov
dec
fcmovnb
xchg
xchg
pop
imul
shlb
test
xchg
rolb
cs
ret
mov
js
ds
mov
jnp
adc
jnp
lea
xor
lcall
scas
mov
inc
sbb
dec
cli
out
push
mov
push
pop
adcl
outsb
inc
bound
shlb
adc
lods
aad
and
lods
mov
xor
movl
sahf
cmp
cmp
adc
mov
xor
lahf
adcl
fucomip
vmovmskps
loope
or
jmp
fsubrp
sub
imul
inc
cmp
inc
mov
test
xchg
xor
pop
std
or
push
mov
subb
sub
mov
mov
call
outsb
push
aas
decl
imul
jl
sub
imul
ljmp
out
lods
in
addr16
aad
add
mov
push
add
pop
mov
movsl
dec
arpl
movb
fs
jle
dec
aad
mov
repz
movsl
shl
mov
mov
sub
mov
scas
enter
nop
loope
cmpsl
add
pop
dec
mov
iret
out
pop
xchg
shrb
xor
and
mov
repz
xlat
lods
out
pop
jne
mov
add
int
jnp
gs
repz
ds
mov
sbb
add
xchg
inc
or
int3
incl
adc
jbe
cmp
sbb
insl
lahf
inc
mov
fs
xchg
mov
lods
bound
dec
mov
fldcw
jbe
cmpsb
data16
hlt
mov
and
ret
loop
or
outsb
nop
popf
xor
ret
inc
sbb
mov
cmpsb
push
push
mov
mov
mov
mov
neg
negb
cltd
fcmovbe
stc
enter
jmp
jmp
cmp
mov
cmp
andl
clc
or
mov
ds
xor
int3
pop
cmc
imul
aad
jmp
cmp
mov
dec
push
inc
mov
jmp
pop
cmpsl
sbb
cmp
xchg
stc
mov
scas
xor
scas
jbe
push
pop
adc
and
cmp
int
popf
cmpsl
pop
inc
imul
cmpsb
adc
mov
cltd
xor
cmpsl
sbb
fildl
adc
cmpsb
inc
les
inc
dec
inc
out
mov
xchg
xorl
sbb
bound
hlt
mov
fwait
inc
mov
loope
clc
outsb
xor
pop
mov
add
add
xchg
jmp
imul
adc
inc
dec
push
mov
cs
mov
and
lahf
test
iret
mov
arpl
and
adc
mov
cs
xchg
mov
stos
cmp
ror
fcomi
lret
cmc
sub
and
push
mov
and
mov
scas
ret
push
mov
xor
aas
pop
insl
pop
mov
and
rol
cmp
push
test
or
pop
pusha
pop
ss
stos
push
sbb
cmp
paddusw
pop
outsb
jmp
int3
es
loopne
inc
push
xlat
or
lods
xchg
pop
popf
push
test
mov
insl
ds
or
lods
xchg
mov
cs
jns
pop
inc
gs
dec
mov
adc
lock
mov
xchg
mov
or
mov
jae
fwait
ret
dec
push
cmpsl
sub
repz
dec
test
mov
jno
stos
and
xchg
sahf
mov
aad
dec
mov
cli
mov
adc
push
aad
add
loopne
sub
in
xlat
pop
mov
gs
push
bound
dec
bound
out
pusha
stc
mov
outsl
jle
mov
or
jo
cld
aam
xchg
jecxz
test
mov
test
cmp
jnp
addr16
mov
jmp
pop
popa
jne
jp
sub
mov
out
mov
int3
sbb
sub
in
lds
mov
xchg
xlat
addb
dec
inc
ds
lret
scas
mov
std
in
movsb
jecxz
sub
orb
add
sti
aam
xlat
iret
add
add
mov
shrd
mov
into
mov
dec
mov
mov
sbb
fcompl
movsl
stc
stc
popa
cltd
mov
arpl
mov
out
cmc
pop
xchg
pusha
sub
lock
pop
mov
pop
rep
mov
dec
inc
xchg
mov
or
jns
sbb
dec
push
insb
lock
inc
add
insb
push
or
ret
mov
mov
sub
cltd
subb
scas
adc
idiv
popf
pop
inc
fisubl
push
subb
sar
test
gs
jnp
and
sbb
cltd
sub
imul
jecxz
mov
out
mov
outsl
sub
stos
push
inc
repz
mov
das
jne
jmp
jle
xorl
scas
push
mov
xchg
sub
insb
and
scas
ret
aaa
dec
out
les
inc
out
in
xchg
or
sub
jns
pop
and
lahf
cli
pusha
stos
das
fcomps
into
mov
popf
push
and
pop
ljmp
jp
andb
pop
xor
addb
mov
daa
fldl2e
xor
and
cwtl
call
mov
rcrb
imul
xchg
add
repnz
push
sbb
out
test
dec
push
in
ret
fldl
movsb
or
and
adc
mov
iret
ficomps
js
pop
cltd
pop
add
inc
mov
mov
mov
stos
test
notl
nop
clc
jae
adc
mov
push
cmp
sub
andb
xor
or
ret
push
dec
in
out
ret
sbb
pop
int
push
or
arpl
cmp
push
push
sub
adcl
sbbl
ret
jmp
popf
dec
jp
inc
xchg
int3
jnp
fadds
fldenv
scas
movsl
jle
inc
test
adc
jl
pop
push
pushf
adc
push
test
inc
fldenv
or
dec
in
jnp
or
fwait
pop
cs
out
add
cwtl
pop
mov
les
jbe
jg
out
sub
sub
dec
and
nop
in
sti
xor
lea
mov
scas
bnd
pop
dec
lahf
xlat
clc
inc
pop
push
test
lds
int
fiaddl
out
out
mov
mov
sub
test
mov
sbb
les
bound
hlt
imul
dec
mov
inc
imul
popa
push
jge
ret
imul
enter
enter
mov
or
push
push
jae
loopne
pop
mov
sbb
lock
addb
or
push
and
pop
lret
add
xor
stos
dec
mov
in
xor
jb
sbb
inc
xor
frstor
xor
pop
lret
imul
mov
cld
arpl
shll
inc
lods
inc
dec
mov
dec
lea
jae
xchg
xchg
sbb
out
pop
stos
dec
mov
test
xchg
mov
xchg
adc
gs
call
aad
and
cli
xchg
sti
jbe
mov
mov
mov
sahf
lret
stos
push
inc
in
mov
arpl
pop
mov
lcall
add
data16
call
orl
xchg
cmp
pop
ljmp
aad
insb
sbb
mov
mov
into
adc
push
mov
or
test
jmp
jecxz
fsubl
cmp
add
sub
dec
lock
xchg
adc
xchg
or
into
gs
daa
sub
and
hlt
test
into
jecxz
dec
gs
roll
adc
mov
mov
adc
mov
adc
fnstcw
int3
ss
mov
push
jecxz
dec
mov
shll
fnstsw
movsl
mov
cmp
push
inc
into
mov
xchg
mov
daa
push
icebp
std
insb
xor
ja
out
movsb
and
cmp
and
ret
jl
push
mov
push
cmpsb
outsl
jmp
sub
dec
jns
cli
xchg
mov
mov
pop
cmc
sbb
outsl
dec
mov
daa
xchg
fwait
jae
ljmp
mov
jmp
xor
lret
jmp
pop
adc
je
or
xlat
test
out
lret
push
aas
sbb
adc
cmp
mov
insl
cmpsl
sub
imul
mov
les
inc
xor
loopne
sbb
stos
stos
pop
cli
mov
dec
inc
lods
jl
sbb
dec
idiv
xchg
ss
xchg
mov
stos
pushf
fsts
mov
dec
ss
cltd
lret
int3
iret
into
notb
fbstp
mov
sub
xchg
sahf
push
push
lods
push
pop
outsl
ss
xorl
cmpsl
add
mov
push
test
adcb
inc
mov
push
addr16
xchg
outsl
add
inc
cmpl
inc
lods
pop
out
out
pop
out
inc
jle
push
in
call
popa
jmp
sarl
sub
sbb
clc
sbb
hlt
bound
loope
fs
adc
enter
xchg
push
mov
sbb
mov
scas
mov
scas
push
jmp
sub
mov
sub
lahf
shll
push
test
xchg
int
dec
sarl
lcall
ljmp
dec
shr
pop
stos
adc
xchg
stos
test
sub
iret
hlt
and
filds
shll
push
pop
mov
mov
pop
adc
lds
jb
mov
fstps
lret
xchg
xchg
arpl
sub
stc
fcoml
sbb
pop
mov
sbb
cmpsb
jp
mov
dec
push
cld
push
xlat
mov
rorb
incl
xchg
scas
cmp
ret
movsl
dec
sbb
mov
pushf
hlt
xchg
movsl
ja
adc
jle
test
push
inc
popa
pusha
jge
adc
fcoml
lods
push
push
mov
mov
gs
and
lcall
popf
cmp
fnsave
das
jmp
lods
mov
movb
jns
rcr
jb
inc
inc
add
cmp
aaa
xor
inc
call
pop
jmp
inc
and
mov
psubusw
sub
adc
or
sbb
xchg
ss
lds
imul
mov
outsb
push
mov
fld
dec
cmp
pop
dec
pushf
push
aas
push
push
cli
inc
rclb
imul
hlt
aad
mov
subl
lds
adc
int3
std
jmp
ja
cld
push
test
lret
stos
ss
pop
mov
jle
int
add
data16
mov
add
add
lcall
cmp
mov
hlt
cmp
int3
pushf
mov
adc
rcl
dec
nop
dec
pushl
adc
mov
js
sbbl
ljmp
or
mov
or
sbb
out
mov
adc
push
add
mov
outsb
adc
pop
roll
add
add
div
push
xchg
cmp
and
dec
dec
xor
add
outsl
mov
and
js
dec
popa
add
in
add
jecxz
mov
hlt
inc
jl
int
cmp
mov
test
fcmovne
xchg
rcll
out
add
je
push
and
adc
adc
repnz
out
pop
adc
pusha
lret
cmp
call
xchg
fs
enter
and
pop
sub
mov
adc
shll
and
fistps
inc
jle
cmp
dec
and
push
pop
cmpsl
ds
add
add
sub
ds
es
dec
and
inc
xchg
jno
pop
imul
andl
xchg
push
sub
fnstenv
cmpsb
pop
sbb
jecxz
mov
push
fmuls
add
int
pop
in
jl
mov
push
pop
aad
sub
loopne
ret
dec
mov
lcall
xchg
movsb
test
xchg
adc
ret
mov
movl
fsts
jl
lea
xlat
mov
sub
mov
push
jmp
stos
push
sbb
stos
into
adc
and
cmp
push
cmp
in
scas
mov
test
mov
div
and
add
push
jp
pop
xchg
adc
mov
outsb
adc
xlat
nop
mov
fsub
scas
mov
and
mov
dec
or
loop
loope
aaa
ja
test
ja
and
mov
rol
imul
cmp
jns
dec
repz
jmp
cmp
add
cmp
xor
mov
cmp
mov
or
mov
or
cmpsb
inc
dec
jge
push
daa
in
hlt
cs
dec
add
arpl
pop
mov
inc
pop
pop
aas
sahf
jg
lods
cwtl
jnp
push
hlt
jnp
shrb
pop
mov
add
mov
xchg
jle
mov
and
push
jg
xchg
inc
mov
sti
sub
fisubs
jno
addr16
ret
or
pusha
jae
sbb
cmp
lret
mov
iret
outsb
add
xchg
push
adcb
pop
or
cmp
mov
insl
sbb
repnz
add
cwtl
dec
out
pop
call
push
lock
scas
xchg
lods
inc
inc
mov
jne
cmpl
pop
mov
xor
mov
push
mov
xor
xchg
sahf
or
xorb
sbbl
arpl
dec
sbb
xchg
or
push
and
jle
jnp
test
ss
jno
int3
sbb
push
lahf
inc
jge
mov
xor
mov
jbe
dec
add
stos
add
xchg
cmp
inc
test
push
adc
and
popa
xchg
sahf
mov
es
cmc
hlt
pop
dec
cmp
sbb
dec
cmp
sbb
jo
push
xor
int3
mov
xchg
mov
js
jp
push
pusha
shl
fsts
mov
xor
mov
push
stos
shlb
addr16
scas
cmp
cmp
sbb
sbbl
popa
movsb
lods
mov
sti
fsubr
mov
in
dec
mov
and
mov
xor
sbb
loop
test
sbbl
sarl
xor
push
add
lret
in
imul
pushf
mov
adc
cmp
rolb
lods
mov
stos
jns
nop
out
mov
jmp
popf
mov
subl
push
sub
cmpsl
cmpl
mov
insl
push
push
cwtl
std
and
add
hlt
aam
dec
mov
mov
mov
fisubrl
xchg
fisubl
lock
sbb
jl
std
dec
lret
and
dec
outsb
out
pop
mov
jp
mov
jp
push
or
cmc
jnp
arpl
sub
dec
cmp
fidivs
pop
jnp
inc
mov
mov
gs
pop
fsubrs
mov
leave
xorb
out
bound
add
nopl
cmpsb
addr16
shll
jb
loopne
dec
push
dec
jo
cld
jno
test
sahf
and
dec
add
loopne
mov
scas
mov
in
mov
jae
les
incl
xlat
sbb
stc
stc
shl
push
push
and
lahf
test
fcmovnbe
xchg
mov
sbb
xor
adc
pop
mov
pop
mov
and
lock
cli
pop
mov
jmp
sub
mov
dec
jns
or
add
jecxz
push
mov
mul
cmp
in
jmp
jb
leave
in
or
lods
lcall
xchg
sbb
in
cmp
adc
test
dec
and
mov
xor
pop
repnz
orl
stc
dec
cmp
arpl
call
into
and
loope
pusha
cmp
jno
inc
jp
pusha
xchg
mov
repnz
popf
loop
jp
xor
fisubrl
imul
movsb
sti
or
fiaddl
std
mov
in
ja
or
adc
bt
jle
mov
scas
ret
pop
pop
sub
lret
mov
aaa
popa
dec
imul
outsl
sbb
xchg
push
jno
adc
adc
inc
out
pop
and
lcall
ret
iret
clc
sub
pop
leave
int
repz
test
jne
push
enter
popa
mov
and
call
into
mov
loopne
aas
pop
repz
loope
fcoms
mov
xchg
xor
xchg
sub
addl
iret
mov
in
lea
xchg
imul
out
and
mov
pusha
and
mov
jne
add
incl
aas
movsb
mov
adc
jns
cmp
int
xchg
js
add
lods
and
cmp
jl
and
push
xor
rcll
stos
fyl2x
test
add
inc
test
movsb
std
inc
sbb
xchg
lret
push
mov
inc
addl
jbe
lret
sub
cld
and
test
and
jne
pop
pushf
or
push
inc
dec
into
js
insl
push
pop
aaa
arpl
pushf
jp
enter
mov
scas
dec
jnp
adcb
inc
xchg
repz
mov
mov
fnsave
hlt
hlt
cltd
xor
sub
cmp
int
jmp
cmp
insl
jne
mov
mov
mov
in
out
jp
sub
adc
sbbb
xchg
mov
mov
popa
jge
addb
pop
and
or
aas
loopne
aaa
sbb
sar
xchg
sub
adc
shlb
loope
shrb
adc
sbb
sbb
adc
sbb
sbbb
or
xchg
test
xor
jmp
lret
push
stos
cltd
pop
jle
jo
mov
rcl
xor
mov
in
fwait
inc
xchg
popa
or
mov
imul
popa
mov
cs
out
push
lret
mov
mov
xorl
or
data16
sbb
pushf
fisubrl
push
incl
bound
inc
pop
sub
push
push
mov
lret
stos
xchg
sbb
pop
rolb
cmpsb
jb
stos
mov
xchg
xor
daa
outsl
aas
es
loopne
xchg
pop
adc
rcll
dec
mov
fs
jnp
dec
jae
fistps
push
dec
addb
ret
lods
movsb
test
push
nop
fisttpl
iret
neg
push
addl
pop
iret
scas
add
das
mov
add
mov
fmull
dec
out
xor
in
loop
shlb
aam
pop
shr
enter
jae
xchg
aaa
popa
mov
xchg
mov
stos
inc
loopne
dec
xchg
mov
inc
jo
bound
cli
dec
mov
sub
idivl
xchg
cld
addr16
icebp
outsb
xchg
stc
aam
jmp
lods
mov
call
ret
jo
shll
mov
daa
xchg
or
or
sub
lcall
xor
mov
or
iret
xor
test
xchg
sbb
mov
ss
out
iret
jecxz
mov
or
jae
jns
mov
pop
nop
lcall
in
test
adc
xchg
mov
xchg
lds
and
std
xchg
rcr
ret
pop
xchg
mov
jnp
ljmp
ret
stos
dec
rorb
cwtl
arpl
sbb
add
mov
sub
pop
sbb
sbb
inc
xor
int3
ja
test
movsb
pop
or
outsb
imul
pop
jmp
adc
aad
popa
das
int
lret
mov
fwait
xor
shlb
inc
aam
mov
mov
xor
cs
mov
jl
push
addr16
loop
push
inc
loop
push
shr
in
push
jmp
cmp
lcall
das
faddp
rcll
sub
mov
aad
adc
jl
inc
pop
in
and
adc
popf
cmc
mov
loop
cwtl
test
mulb
test
add
or
sub
cmpsl
hlt
fisttpl
inc
xlat
cs
decl
outsl
xor
or
push
fnsave
sub
cli
lods
jl
xchg
jg
sti
pop
rclb
sub
mov
out
xchg
les
fcomps
add
sub
outsb
sbb
fldcw
push
loope
outsb
cmpl
xchg
sub
das
add
mov
adc
push
cmp
cltd
lcall
dec
add
push
repz
mov
and
or
sbb
push
cmp
icebp
mov
leave
mov
sbb
pop
or
jmp
xchg
sub
push
fistps
rcrb
mov
ljmp
and
int3
sub
push
cmp
jns
add
adc
xchg
jle
ja
in
aad
xor
fstpl
push
sbb
lcall
add
and
jb
inc
inc
shrl
jbe
ds
shlb
cmpb
pop
cmpsl
mov
xchg
daa
push
stos
xchg
mov
popa
or
test
mov
jmp
jbe
repnz
pop
lahf
xor
aas
inc
cmpsb
pusha
mov
shll
xchg
pop
mov
icebp
add
lds
jbe
int
mov
repnz
mov
stc
xor
xchg
xchg
push
add
popa
jl
mov
negb
scas
jl
or
mov
pop
jns
sarb
inc
test
push
push
add
das
hlt
inc
in
mov
jge
cs
ja
cmp
add
push
xor
int3
mov
sbb
push
pop
cli
jg
out
test
prefetch
or
adc
dec
cld
adc
rclb
mov
bound
lods
mov
insl
fsubrl
xchg
sub
and
sub
fs
dec
lret
mov
jmp
popa
fisubrs
inc
push
push
std
xlat
out
pop
inc
jnp
je
repnz
mov
cmp
pusha
lret
lret
es
cmpsl
cmp
in
add
arpl
and
rcl
in
sub
add
xchg
mov
scas
sub
cmp
inc
sbb
shll
or
into
scas
jae
gs
pusha
sbb
sub
push
jnp
pusha
cmc
nop
cltd
imul
mov
sbb
and
mov
dec
or
stos
mov
pop
adc
push
pop
jmp
cltd
push
inc
pop
xchg
lock
xchg
jnp
dec
imul
cwtl
gs
out
mov
aad
stos
lahf
sbb
push
xchg
inc
loope
test
movb
sbb
cmp
pop
xchg
add
dec
arpl
sub
mov
or
lock
add
push
in
int
incb
rol
dec
insl
stos
dec
dec
jmp
stos
or
jae
popa
xchg
inc
or
cmpl
inc
inc
stos
add
cmpsl
mov
fistl
dec
adc
mov
lea
and
jl
ds
mov
dec
mov
jge
adc
in
jmp
adc
or
test
in
jle
push
or
jmp
cmc
dec
pushl
je
xchg
adc
cmpb
int
popf
loop
cld
push
dec
and
or
mov
mov
loope
out
imulb
scas
daa
cs
shrl
imul
mov
lcall
dec
dec
mov
pop
adc
ss
adc
fs
cmc
mov
into
push
mov
les
xchg
in
jp
cld
inc
adc
movsb
lret
push
aaa
mov
fdivrp
dec
mov
xchg
jp
fcoms
aad
js
push
mov
je
xchg
test
xchg
repz
ljmp
out
and
cmp
cli
ret
xorl
fs
dec
push
lods
gs
xchg
je
scas
or
push
pushf
mov
imul
adc
mov
lds
cmp
and
jle
pop
mov
or
push
push
cmpl
rol
sub
adc
pop
stos
jae
and
movsb
push
dec
fwait
sahf
lcall
shrl
xor
mov
daa
out
shlb
rclb
push
jecxz
mov
aad
fsub
push
mov
pop
xlat
fidivs
outsb
pop
mov
lods
in
push
popf
in
in
mov
sbb
jg
js
sub
pop
rolb
pop
fisttpll
hlt
imul
fmull
or
insl
sbb
cmpl
jle
jo
mov
xor
cmpps
and
xchg
ret
adc
testb
push
cmp
stos
das
jns
inc
mov
jecxz
inc
xchg
or
test
outsl
mov
into
jl
inc
jae
jmp
inc
push
and
test
jne
sahf
fs
or
jl
cmp
dec
out
cmp
and
jae
fs
xchg
test
jo
cmp
fisubs
sti
std
lret
cli
sub
jge
dec
lods
cld
popa
and
xchg
cmp
leave
and
fidivl
cmc
push
icebp
popf
imul
negl
ficoms
mov
and
cmp
xchg
cmp
popf
inc
shll
mov
in
fpatan
xchg
dec
adc
mov
out
ret
jne
inc
dec
popf
clc
stos
push
xchg
jne
inc
xchg
popf
adc
lds
bound
mov
out
cmc
mov
imul
test
push
lea
sbb
loope
xchg
mov
sub
pop
out
fcomi
sub
clc
mov
jmp
or
adc
mov
or
aaa
and
stos
loop
and
inc
movsb
bound
xor
in
lret
xchg
jno
xchg
popa
cmpsl
dec
movsb
mov
xchg
nop
add
add
jg
xor
je
dec
adc
into
inc
push
and
mov
cmp
jo
cld
mov
psubb
inc
push
les
mov
cld
lods
js
push
cmp
lret
and
cmp
add
ljmp
neg
jge
out
mov
jne
fisubl
pop
leave
adc
enter
jne
fidivrl
test
xor
loopne
std
std
in
fisubrl
insb
pop
fdivp
pusha
pushf
inc
jmp
inc
jo
call
shll
pushf
fcmovbe
mov
clc
fcomps
xchg
je
insl
and
push
ja
icebp
mov
xchg
pop
sub
dec
or
icebp
jae
out
xchg
out
pop
sti
jae
push
out
movsl
int
jns
aam
sub
mov
cmp
jo
sub
or
dec
cmpsl
pop
ret
std
fwait
push
flds
cld
adcl
popf
cld
jp
arpl
aaa
pop
cmp
cmp
mov
out
cmp
push
xchg
insl
ja
jl
xor
call
psubusw
inc
pop
dec
mov
and
or
int
test
ja
loopne
leave
mov
mov
cli
or
jbe
and
mov
jbe
xorl
pop
add
movsb
push
mov
push
xchg
xor
add
sub
scas
negb
pop
lcall
es
pop
popf
ss
adc
inc
pop
aaa
mov
add
add
jno
insb
jle
arpl
pop
in
xor
and
mov
or
rcrb
dec
sbb
fbstp
paddusw
push
jle
stc
mov
mov
stc
scas
mov
inc
mov
xlat
jle
pop
inc
xlat
inc
mov
pop
inc
lahf
in
cmp
mov
cmpsl
mov
shlb
dec
pop
mov
sbb
in
or
inc
or
sub
push
sarb
rcl
es
out
rolb
out
push
dec
int
jecxz
add
xchg
fs
xor
mov
stos
cmpsb
jg
push
lsl
jns
dec
mov
adc
mov
pop
mov
popa
les
push
loope
cmpsb
dec
dec
lea
cmp
test
lret
xchg
aas
or
push
into
jb
add
ret
mov
pop
push
push
aaa
bound
mov
test
repnz
add
push
fbld
inc
fistpll
cmp
jl
xchg
pop
xchg
out
jo
rcll
and
in
int3
sarb
inc
mov
into
ljmp
adc
leave
cld
mov
or
jg
mov
add
in
stos
outsb
in
pop
les
jecxz
push
mov
test
xchg
sub
scas
pop
gs
xchg
int3
adc
aas
test
mov
push
mov
out
mov
xchg
mov
push
notb
add
std
dec
fisttps
or
stos
in
dec
repnz
into
inc
push
mov
bound
int
out
bswap
js
popa
dec
push
fsubp
loopne
jb
mov
fwait
pushf
fucom
mov
lcall
repnz
lock
jne
push
xor
adc
mov
xchg
in
push
sarl
fwait
mov
test
sbb
push
sub
ds
xchg
add
add
es
fs
stc
sbb
data16
and
or
aam
lds
inc
loope
sbb
icebp
xchg
data16
inc
ret
mov
scas
aam
lahf
adc
enter
xor
out
test
jg
hlt
pop
stos
adc
mov
or
push
loop
lods
imulb
repnz
mov
dec
lods
adc
sbb
mov
lods
xlat
sbb
outsb
addl
dec
outsl
xor
jmp
mov
lock
dec
es
mov
ss
mov
mov
fxch
xchg
sbb
mov
or
arpl
push
fldenv
mov
push
mov
arpl
sahf
xchg
cmpsb
mov
and
aaa
fstl
sub
scas
push
lret
xor
es
xchg
aas
sarb
adc
add
ja
dec
jo
fs
loopne
xorl
shrl
jg
imul
cmpsb
insb
leave
mov
fbld
pop
cmp
push
aam
sub
xchg
fnsave
push
scas
pop
cmp
xlat
and
outsl
mov
adc
lea
push
jg
test
cmpsl
ret
mov
ror
lahf
inc
and
test
push
stc
shll
roll
out
mov
add
adc
movsl
rcrb
adcb
movsb
sub
daa
sbb
sub
lea
inc
outsb
shrl
push
cs
mov
xorb
dec
lods
shl
cli
scas
xchg
or
insl
push
jno
xchg
jne
fadd
pop
adc
xor
adc
aas
lcall
popf
cltd
lcall
lods
cld
jno
pushf
sub
ficomps
sbb
lds
adcl
xor
movsl
rep
fildll
popf
loope
jns
pop
cld
jb,pn
dec
xchg
or
mov
inc
insb
pop
stc
scas
jl
loop
aas
mov
push
cmp
sbb
int
movsl
inc
push
int3
xor
nop
faddl
and
inc
pushf
xor
arpl
loop
imul
jl
je
xor
push
outsb
sub
xchg
mov
xchg
and
pusha
dec
push
xor
xchg
cld
jnp
clc
and
sub
stos
in
sbb
hlt
stos
movsl
pop
enter
dec
iret
mov
lods
fs
das
scas
xor
orl
sti
aaa
adc
push
icebp
shll
das
jns
xchg
daa
js,pn
jb
push
jae
js
stc
adc
push
push
daa
xabort
add
sub
mov
mov
ficoml
sub
fs
xchg
push
dec
pop
imul
pop
add
sarb
dec
leave
and
pop
push
xchg
jne
inc
loopne
xchg
inc
fisttpl
push
mov
out
mov
push
mov
push
xchg
repz
mov
testb
mov
or
addr16
fbstp
dec
aaa
jb
pop
or
repz
xchg
sub
mov
inc
xor
sub
adc
into
mov
dec
bnd
in
xlat
jae
pop
inc
mov
out
inc
orl
cmpsl
mov
fnstcw
pop
and
inc
xor
adc
cmp
pop
cmp
add
push
dec
and
jl
daa
jp
mov
shrl
inc
mov
outsl
jp
ror
lods
sbb
lcall
add
aaa
movsb
fs
popf
and
pop
inc
mov
leave
rcl
bound
mov
and
pop
adcl
push
fdivl
js
xor
sti
rcrb
cmp
cmp
clc
rorb
push
cmp
jno
push
loope
inc
cmc
inc
dec
orl
lcall
sbb
test
lds
rcrb
int3
mov
push
cmp
pop
pusha
sbb
xor
mov
rol
les
rcrl
or
out
orl
nop
movsb
jnp
jecxz
add
cwtl
out
mov
sub
in
mov
pop
into
cmp
pop
mov
cmp
in
push
jb
lahf
aam
sbbl
sbb
in
mov
sbb
stos
in
imul
cmp
inc
pop
push
mov
jnp
cmp
test
arpl
in
mov
shl
dec
or
gs
int3
sbbb
out
pop
pop
in
cmp
pop
xor
jmp
and
pop
jb
dec
pusha
jg
mov
jae
push
jecxz
lahf
cmp
adc
adc
inc
ljmp
mov
dec
mov
stc
inc
inc
mov
mov
test
in
or
out
sbb
mov
jl
mov
pop
mov
aam
mov
mov
mov
or
fs
shrl
push
adc
ret
mov
and
mov
dec
and
dec
sbb
pop
lret
std
adcb
add
iret
mov
test
inc
lods
lret
stos
in
ljmp
dec
adc
inc
decb
shll
add
mov
jmp
gs
adcb
or
in
ja
cmp
int
insl
add
sbb
inc
or
mov
clc
xor
inc
adc
call
pop
jmp
push
xor
dec
jbe
mov
test
pop
addr16
cmp
pop
inc
out
in
roll
and
mov
cmpsl
cmp
mov
out
arpl
push
mov
lcall
cmp
test
ljmp
jo
pop
lret
hlt
or
ret
es
int
push
in
xchg
in
add
inc
test
call
jmp
mull
loope
or
xchg
jb
loope
in
lcall
cmp
jno
loop
rcrb
pop
push
xor
xor
mov
scas
mov
call
fwait
cmpsb
mov
and
pop
and
cmpsb
movsl
into
sbb
push
sub
ljmp
or
bound
push
inc
dec
cmp
cmpsb
sub
dec
xchg
lret
addl
xchg
lock
sub
jg
pop
movl
mov
loope
mov
xchg
push
and
add
xchg
cmc
pop
test
and
xor
cwtl
inc
out
xchg
xor
mov
jp
jge
fldcw
pusha
pop
mov
cmc
xchg
inc
das
leave
adc
fcomps
jb
cmp
stos
add
cmp
ds
jno
insl
cmp
sub
out
mov
test
cmp
out
in
testl
sbbb
testb
cwtl
adc
pop
or
push
lds
add
push
fisubl
es
aaa
dec
inc
scas
or
es
xor
push
ret
in
jne
cmp
roll
dec
lock
or
and
push
adc
adc
push
sbb
dec
aaa
movsl
repz
sub
xor
fildll
stos
mov
mov
push
lcall
xchg
sub
cli
mov
inc
es
jle
dec
xchg
push
push
push
in
sbb
out
and
add
or
mov
fucomip
mov
sub
inc
mov
xchg
sbb
aam
cmpsb
dec
std
mov
test
imul
lret
pshuflw
push
dec
insl
rorb
xor
icebp
cmc
lret
cli
adc
push
mov
push
xchg
inc
imul
push
dec
lret
push
mov
mov
push
cmc
and
test
jge
inc
scas
cmp
push
fsubl
outsb
adc
lock
int3
jl
test
pusha
mov
sbb
hlt
data16
jp
mov
js
xor
pop
xor
or
into
mov
xchg
and
add
fmul
addr16
sahf
mov
inc
sub
int
adc
sub
jnp
push
sub
mov
mov
add
popa
ljmp
sub
out
cld
shl
stc
shl
aaa
push
adc
or
stos
repz
cmp
call
sub
and
pop
insb
jle
popf
imul
cld
add
test
dec
adc
sbb
cli
inc
test
sub
negb
push
xchg
add
mov
bound
push
mov
sbb
cs
pop
fldcw
adc
jo
pusha
mov
or
inc
ret
xor
sub
sub
hlt
or
addr16
jnp
ss
xchg
loopne
xorl
pop
and
inc
scas
cmp
loope
aaa
movsl
mov
adc
jo
mov
sub
sub
sub
scas
sub
mov
test
fsubs
aas
ret
pop
cli
mov
xchg
shll
ja
sub
fldt
stos
dec
sbb
jmp
adc
es
sbb
out
xchg
push
xchg
xchg
movsb
flds
je
sbb
xor
xor
add
and
xchg
mov
and
sbb
mov
mov
sbb
xchg
or
xor
mov
fisubrl
jge
mov
push
lcall
pusha
dec
cmp
mov
pushf
aas
xchg
jno
fistl
mov
movsl
das
ja
into
pop
in
fucom
cltd
frstor
dec
arpl
jp
jge
lock
push
fbstp
pop
add
push
fwait
add
cwtl
int
xchg
or
push
int
inc
pop
xor
rcrl
dec
mov
inc
sub
adc
add
shl
and
pop
sub
cli
push
lods
outsb
add
scas
mov
enter
jge
inc
mov
mov
inc
lds
xor
lea
jle
dec
rolb
xor
jae
insb
ret
fmuls
ljmp
dec
lock
cld
xlat
pushf
mov
cld
imul
add
fwait
cmp
push
aam
in
ja
hlt
mov
test
aam
into
mov
js
adc
cmp
cmc
movsb
push
sbb
pop
les
sub
pop
cmp
int3
loopne
add
xchg
add
pop
je
pop
jo
into
fs
test
xor
cmc
push
push
pop
aaa
repnz
lock
lods
and
mov
xlat
sub
dec
sub
cmp
ss
out
sub
shl
pop
ds
decb
fidivs
movsl
mov
mov
leave
lock
enter
cwtl
fs
push
shrb
xchg
sub
mov
jg
dec
and
dec
and
jae
jbe
mov
cmp
test
mov
repz
and
mov
rcl
jns
and
cmpsb
ficoml
in
add
mov
push
push
shlb
sbb
mov
adc
push
and
adc
mov
cmc
and
dec
in
in
jmp
decl
xchg
inc
add
testb
sbb
add
xlat
pusha
pop
mov
cmp
sbb
jno
aaa
mov
leave
in
jle
les
push
scas
inc
je
xor
testb
bound
push
xor
pop
mov
rorw
xchg
lods
push
adc
icebp
mov
lahf
push
shlb
or
or
mov
xchg
shrl
mov
pop
lahf
out
dec
pushf
leave
push
sub
dec
pop
idiv
ficompl
jb
imul
inc
adc
push
push
ret
ret
jecxz
lahf
movsb
mov
push
mov
xchg
cmpsl
int
sahf
push
adc
repz
jae
push
mov
enter
push
mov
xchg
xchg
les
xchg
out
test
adc
sbb
or
mov
mov
pop
sar
fcmovb
mov
sub
cmp
lret
sbb
test
xchg
sbb
push
inc
stos
xchg
sti
mov
fsubrs
fdivl
xor
jg
sarb
adc
out
ja
sar
cmp
out
adc
loopne
mov
mov
inc
pop
aaa
sbb
ja
cwtl
je
mov
mov
push
movsl
hlt
fisttpl
push
adc
and
mov
mov
sbb
push
pop
pop
mov
sbb
xchg
dec
je
jge
aam
cmp
push
push
repz
xchg
hlt
out
mov
nop
jecxz
pop
xchg
and
xchg
dec
movsb
ret
ffree
mov
dec
push
adc
mov
dec
mov
push
insb
arpl
popf
movsl
inc
fidivl
mov
inc
fldt
pop
or
fxch
fs
sbb
movsb
in
fs
es
mov
ja
jmp
lcall
cmpsb
aam
ds
repnz
or
sub
cmp
jae
popf
cmpsl
xchg
mov
lahf
jb
shlb
cld
aaa
pop
lods
lret
cmp
pusha
rorb
sub
fmul
fstps
push
in
cmp
jp
mov
gs
and
dec
jns
sar
movsl
adc
jp
and
imul
andb
idivl
in
rclb
aas
inc
add
dec
mov
lock
dec
es
fidivrs
adc
pop
loop
xchg
pop
sahf
jle
test
jbe
int3
test
mov
xchg
add
fcmovbe
in
cmp
mov
lea
daa
mov
mov
cs
ss
lock
push
iret
daa
loope
fdivrl
lret
push
movsl
rol
xchg
push
mov
mov
pop
data16
push
test
lock
rcl
adc
sub
or
add
aam
insb
jnp
imul
sbb
repnz
mov
std
jp,pn
sti
daa
xor
sbb
imul
aad
add
add
xor
cmc
iret
lahf
push
and
test
sub
xor
mov
fimuls
clc
or
lods
push
xor
ret
repnz
addr16
adc
cmpsb
cmp
cmc
clc
and
push
jmp
xor
add
dec
and
sub
scas
mov
ljmp
or
sub
add
cmp
adc
icebp
jo
push
inc
cmp
mov
inc
mov
and
xchg
push
filds
sub
sbb
inc
push
arpl
xor
cmc
popf
push
push
in
sub
inc
mov
mov
std
xlat
mov
lret
mov
adc
sbb
test
out
out
popf
pop
add
xchg
xchg
push
lea
cmp
xchg
push
sbb
xor
sub
je
ja
test
adcb
pushf
or
aaa
bnd
inc
das
icebp
out
cld
stc
pop
mov
fdivrl
fsts
push
jno
inc
push
gs
pushf
jne
cmp
ret
in
sbb
sahf
xchg
clc
sahf
xor
pop
addb
push
push
pusha
fwait
xchg
mov
scas
and
mov
sbb
push
ret
popa
dec
inc
cld
scas
and
in
push
rcrl
or
mov
sub
cmp
mov
fisttpl
shll
ds
repnz
jnp
mov
cmp
ret
sti
mov
dec
push
sbb
shrl
andb
pop
imul
in
imul
pop
sbb
lods
push
sub
and
out
shl
and
pop
push
int
lods
scas
xchg
push
hlt
out
cmp
sub
and
incb
or
cmp
mov
or
xor
and
jno
pop
sbb
mov
loopne
rcrb
jmp
pop
inc
dec
in
or
mov
and
mov
xor
std
inc
popf
jge
xor
push
je
xlat
pop
fsubrs
iret
fxch
mov
xchg
jge
cmc
rolb
enter
jle
mov
out
mov
and
mov
cltd
jg
cmp
fsubrs
lahf
or
jecxz
aam
push
out
xchg
xor
add
xchg
stc
mov
das
adc
mov
mov
sbb
fidivl
les
outsl
dec
push
pop
lcall
and
aas
ss
mov
push
testb
adc
mov
adc
push
add
cmp
cmpl
pop
sbb
xchg
mov
iret
cmp
mov
ret
ja
cld
mov
mov
fiaddl
and
cmpsl
pop
lcall
loope
xorb
movsl
fimull
add
out
cwtl
cmp
bound
xor
xor
or
jno
scas
popf
shrb
dec
in
inc
es
mov
test
cmp
dec
aaa
outsl
popf
push
push
or
cmp
out
mov
popf
les
faddp
xor
pop
pop
dec
mov
and
in
dec
and
mov
fs
jg
mov
ds
xor
stc
int
imul
ja
clc
jbe
push
shlb
mov
cmpb
cmp
out
outsb
xor
stos
ret
sbb
sub
js
mov
mov
js
sbb
push
loop
notl
mov
add
or
mov
popf
push
std
in
js
data16
fs
xlat
mov
mov
mov
pop
outsl
scas
mov
cmp
hlt
stos
sahf
push
pop
das
push
sbb
test
scas
pop
test
inc
cmp
addl
inc
ja
mov
daa
mov
push
mov
jno
out
clc
xchg
in
jno
int
popf
lds
out
mov
xor
outsb
rcll
pop
xchg
aam
xor
pushf
sbb
outsl
imul
jae
mov
cli
outsb
fmull
sub
dec
jg
xchg
in
addr16
adc
test
sub
imul
hlt
sbb
jg
inc
adcb
cli
aad
aam
or
sbb
mov
mov
shl
pop
pop
cmp
cs
cmp
mov
test
xchg
dec
jo
ds
push
cmpsb
sub
in
pop
cmp
add
sbb
ret
insl
sub
xchg
xchg
jle
sbb
cmp
inc
push
cmp
dec
cld
outsl
mov
pop
or
loope
push
scas
xor
jnp
arpl
lock
std
jecxz
ss
add
roll
cld
xchg
xchg
mov
xchg
jmp
sahf
jg
fwait
call
add
xlat
test
into
pop
xchg
cld
idivl
mov
mov
dec
sbb
pop
pop
out
repnz
mov
jnp
pop
adc
jno
add
cmp
sahf
cmp
or
add
add
pop
jg
mov
push
mov
dec
or
dec
cmc
push
repz
fcmovu
rorl
aas
xorb
in
and
mov
aas
xor
mov
inc
sub
das
std
xor
inc
pop
sti
je
fdivrs
sarl
rclb
cld
sbb
test
imul
in
sahf
bound
das
add
stc
jg
outsl
idivb
out
fidivs
sbb
imul
xor
mov
fucomip
mov
fsubs
mov
push
pop
out
pop
inc
outsb
repnz
jmp
inc
shrb
adc
sbb
subb
cmc
push
adc
dec
push
out
jp
shr
out
les
xchg
and
push
jne
jne
push
shlb
iret
stc
push
daa
and
cmc
fcomps
push
jmp
sti
xchg
andb
jno
xor
insl
xchg
lods
aaa
leave
daa
into
aad
mov
enter
push
mov
adc
hlt
push
lret
addl
outsb
popf
test
cmp
popa
out
insb
rcrb
scas
and
sub
fistpll
mov
mov
nop
xor
aad
mov
mov
mov
lods
icebp
push
rclb
shrl
mov
in
or
pop
mov
mov
dec
mov
js
sbb
mov
lock
pop
adc
sbb
dec
ret
ret
jbe
enter
addr16
or
rorl
push
mov
cmpsl
daa
in
mov
push
and
jg
dec
test
jnp
jg
iret
bound
inc
push
or
insl
dec
jge
into
je
mov
or
jg
test
or
aaa
popf
push
ret
movsl
push
out
loop
xor
mov
lahf
out
in
xchg
ds
aad
xchg
ljmp
mov
and
mov
push
add
push
xor
jo,pn
int
int
cwtl
mov
aaa
sub
mov
mov
jns
mov
jg
cmp
into
imul
icebp
pop
xlat
sub
out
pop
mov
daa
or
adc
leave
shlb
sub
test
push
add
mov
add
fdivl
stos
daa
das
stc
lahf
call
ljmp
imul
mov
aam
cmpb
ret
imul
or
inc
jg
lods
push
cmc
adc
jp
pop
icebp
movhps
das
push
add
insl
pop
inc
nop
mov
sar
stos
mov
cwtl
push
push
imul
xchg
faddp
addr16
jae
push
jle
lods
shlb
sub
sub
lea
add
xlat
pusha
push
sbbl
inc
orb
or
pop
mov
xchg
cs
mov
pop
and
pop
jle
insl
pop
inc
cmp
lods
in
rcrl
les
fmull
roll
nop
subb
ficoms
push
out
out
je
mov
cmp
scas
roll
mov
out
push
scas
out
dec
dec
aam
jecxz
pop
shrb
testb
arpl
sub
lea
std
add
or
pop
inc
roll
popf
cld
or
fcomps
xchg
bound
repz
sbb
mov
mov
mov
arpl
cmc
xor
adc
movsb
and
cwtl
xor
aam
dec
sub
int3
pop
adc
dec
out
and
jb
jnp
sbb
movsb
pop
adc
movsl
mov
jp
push
sub
in
arpl
push
mov
inc
sub
dec
inc
hlt
aaa
adc
cltd
sbb
and
test
sbb
dec
add
lods
mov
rorl
cld
jmp
lds
cmp
add
adc
push
adc
cmp
xor
dec
xlat
mov
pop
sbbl
sub
aam
mov
push
repnz
sub
ret
xor
roll
jns
and
fdivrl
sub
clc
rcrb
jge
or
sub
lods
shll
mov
pop
pop
sub
ss
call
push
inc
in
cmpsl
jno
add
popf
adc
mov
xor
or
sbb
fldcw
cmp
iret
mov
movsl
and
pop
in
dec
pop
test
jbe
cmpsl
xor
cmpsl
dec
cli
shrl
dec
int
out
rorl
inc
sbb
aas
repz
xor
int3
jnp
lahf
popa
xchg
adc
or
int
mov
cmp
adc
push
adc
ficomps
ja
dec
fdivrp
sub
aam
mov
fst
aas
sub
test
leave
iret
sbb
fildl
adc
sbb
pusha
nop
xor
xor
lret
cmpxchg
push
bound
inc
sub
dec
add
push
scas
out
mov
xlat
sub
mov
faddl
push
call
mov
sub
mov
xchg
adc
adc
mov
ret
negb
ja
and
add
and
xlat
sti
jno
jle
pop
mov
popf
push
fiadds
incl
cmp
ds
mov
dec
stos
sub
adc
jp
or
cmp
pop
roll
push
add
popa
mov
adcb
je
dec
incb
fistps
cmp
mov
sbb
int
sbb
mov
jno
cld
pusha
xchg
mov
loop
jae
sbb
fxch
into
fsubr
inc
inc
mov
pop
jns
sarl
jbe
and
fldcw
movsl
pop
gs
push
out
sbb
mov
mov
mov
out
cmc
bound
in
stos
mov
pop
out
mov
fcmovnb
pop
xlat
xchg
and
loopne
jmp
xlat
nop
test
add
mov
bound
pop
mov
das
sti
pop
sarl
rcl
stos
mov
rcll
test
mov
xchg
pop
jne
cmpsl
sub
in
sbb
js
fs
je
mov
mov
out
in
aaa
fnsave
mov
or
in
mov
xor
into
out
cmpsb
or
mov
fidivs
lea
mov
mov
mulb
jno
insb
jae
lods
mov
lods
enter
or
xchg
and
inc
int3
push
lods
or
jp
sub
adc
xchg
add
lea
cwtl
lret
mov
inc
popf
imul
pop
mov
and
out
cmp
inc
or
xchg
and
xchg
imul
hlt
xchg
mov
add
xchg
outsb
jle
adc
push
ja
lret
adc
in
loop
mov
push
pop
enter
add
cwtl
jle
xor
push
cmp
mov
lahf
ret
ret
icebp
mov
pop
jnp
or
iret
int3
test
jmp
lcall
les
popa
or
mov
dec
ret
rolb
add
and
inc
add
loope
xor
nop
lret
xchg
aam
fiadds
mov
mov
mov
cmp
out
xor
loop
and
sub
addb
ss
popa
pop
jmp
imul
ljmp
and
ss
sub
rcl
jg
and
jnp
arpl
cmp
push
mulb
jne
mov
mov
jno
push
add
cmpsb
scas
ror
popf
out
mov
cmp
test
data16
mov
lahf
jmp
push
mov
xchg
cld
inc
xlat
lahf
inc
cmpsl
pop
mov
sub
add
int3
or
test
add
push
jecxz
and
push
pop
adc
cli
add
sub
mov
into
push
scas
popa
fistl
mov
jnp
sbb
lcall
xchg
xchg
testb
inc
adc
dec
push
aas
sbb
push
hlt
xor
mov
out
cltd
inc
loop
jl
cld
jg
jo
popa
inc
jne
mov
jo
idiv
mov
in
or
fcmovbe
or
fcompl
test
rolb
cmpb
push
jo
jno
sahf
aad
loope
movsb
adc
cmpsb
and
roll
std
sbb
ja
lahf
daa
sti
and
dec
inc
lock
leave
cmp
pop
movsl
inc
pop
fisubs
inc
dec
pop
xchg
push
testb
inc
jl
xchg
ds
bound
pop
popf
loope
push
xlat
adc
mov
add
push
bnd
cs
loope
mov
mov
mov
int3
ds
ror
negl
mov
mov
dec
mov
mov
cmp
aaa
cltd
sub
js
push
push
inc
cs
fcom
inc
icebp
push
or
mov
test
lret
or
and
push
daa
bnd
xchg
xchg
fdivs
adc
jge
bound
mov
sub
inc
mov
es
adc
scas
jnp
adc
mov
push
adc
scas
inc
add
aad
int3
scas
fdivrl
push
sbb
cwtl
sub
pop
daa
iret
xor
add
popa
cmpsl
dec
jo
pop
pop
xor
push
sbb
mov
shlb
lahf
cmpsb
shll
push
mov
stos
push
lea
sbb
push
push
es
pop
jnp
cld
ja
mov
cltd
jecxz
mov
insl
inc
in
dec
push
and
mov
hlt
out
mov
mov
movsl
aas
xor
cmpsb
or
ds
sub
iret
sti
xor
cmp
inc
lcall
test
out
mov
push
add
popf
sbb
jmp
lods
jb
pop
sub
fcompl
and
jno
fidivrs
or
sbb
cs
stos
dec
sbb
adc
push
jl
imul
push
fs
ret
shrb
pop
adc
mov
stos
mov
iret
sti
scas
test
loop
dec
pop
jle
leave
mov
push
sub
push
pop
stos
cmp
stos
test
or
mov
cld
mov
lcall
mov
test
inc
add
sub
push
aaa
daa
jmp
fcmovu
mov
std
mov
xor
nop
shrb
sub
adc
nop
push
repnz
push
sub
int
xchg
push
push
add
xor
or
std
dec
push
mov
je
push
dec
mov
push
fnsave
jne
xchg
fsts
and
jno
pop
xor
jb
adcb
mov
mov
mov
js
jecxz
adc
fidivrs
test
sbb
pop
es
lahf
test
in
sbb
int
add
cmp
cwtl
subb
adc
shll
imul
xor
sub
lahf
add
mov
cltd
shrl
in
add
fld
cmc
push
mov
mov
or
dec
shll
jmp
lret
imul
test
xor
or
fstpt
shrl
ss
inc
shll
push
mov
ljmp
mov
xor
pop
jne
stos
jne
mov
mov
insl
xchg
xchg
sarl
jmp
test
pusha
les
lds
dec
sbb
in
lea
xor
adc
push
nop
fimuls
fdivrl
lahf
lock
mov
arpl
fucomp
jno
inc
lock
and
inc
ljmp
iret
cmp
jle
popf
pop
add
sub
lods
sbb
ret
popf
inc
btr
and
rcll
sub
inc
lret
cwtl
call
cmpsb
mov
cmpsl
jmp
jecxz
pop
jl
fwait
sti
jle
and
or
add
out
inc
clc
inc
inc
rol
push
cmc
adc
stc
and
frstor
scas
sbb
mov
call
movsb
fstps
xlat
dec
jg
sbb
pop
jmp
loope
xchg
outsl
aas
in
ja
mov
jge
inc
hlt
fwait
or
or
addl
test
pop
stos
into
adc
push
lds
mov
imul
adc
xor
out
pop
test
ret
push
cmp
adc
mov
mov
mov
jo
fimuls
sbb
lods
in
mov
rorb
lret
fcom
repz
ret
jg
pop
shll
push
lock
cmc
jecxz
dec
popf
icebp
test
jg
es
push
and
fisttpl
rorb
dec
loop
inc
push
aaa
leave
cmp
movsl
mov
dec
fcoml
in
mov
lock
sub
aam
repz
jno
dec
mov
notl
fs
jb
sub
cli
aam
push
loope
cli
cmpsl
faddl
adc
mov
pop
sbb
and
ja
jg
and
sarl
jp
lods
add
pop
push
mov
ror
out
sub
inc
loope
out
aam
fildl
push
jmp
mov
fidivs
aaa
cmp
mov
out
jmp
jecxz
xchg
or
dec
int3
or
mov
aad
mov
jle
add
loop
add
fnstsw
aaa
loopne
or
push
test
testb
adc
xchg
call
shll
sbb
mov
jae
aad
push
add
outsl
insb
repz
insl
aas
clc
push
and
fidivrs
jle
inc
add
xchg
leave
cwtl
aaa
inc
jge
pusha
addb
fnsave
inc
les
outsb
ret
inc
inc
fisttpll
les
cmp
gs
insb
lods
or
add
xlat
std
mov
mov
stc
xor
test
jmp
push
mov
xor
cmpsb
fdivrl
dec
sub
push
lods
rcrl
jae
dec
cs
mov
push
std
iret
mov
mov
xor
dec
adc
sbb
xorl
jge
push
xlat
inc
jb
call
jb
scas
pushf
stos
push
stos
sti
test
fs
fs
sub
mov
xchg
inc
xor
mov
jecxz
cmpsb
pop
insl
xlat
inc
stc
or
cltd
mov
dec
mov
mov
or
push
or
mov
js
xchg
gs
xchg
push
xor
icebp
adc
push
pop
test
dec
cmp
loopne
pop
cmpb
into
loopne
add
out
dec
jb
loope
or
out
jp
push
add
push
lret
mov
xchg
jle
fimuls
cmp
sub
fildl
popf
push
push
mov
aad
and
xchg
xchg
xor
mov
mov
int3
inc
mov
cmp
shrb
lds
cli
cmp
loopne
notl
jae
fcompl
push
repz
inc
aad
mov
stc
in
mov
mov
nop
adc
sbb
mov
xor
jb
xorl
xor
lsl
nop
mov
arpl
push
fstps
jecxz
repz
hlt
mov
int3
xor
mov
imul
jmp
ljmp
jl
pop
in
loope
aam
jb
pop
out
popf
mov
jb
stos
xchg
adc
sbb
pop
lods
push
push
arpl
mov
mov
and
sbb
nop
push
add
imul
adc
xchg
inc
repz
in
cmpsb
icebp
sbb
test
jle
daa
pop
mov
movsb
pusha
les
test
leave
pop
dec
sbb
xor
into
outsl
sub
push
inc
clc
xchg
jp
shl
mov
ss
inc
sbb
xchg
cmp
cmc
rorl
pop
int
das
outsl
push
leave
cmp
insb
pop
call
cli
mov
and
mov
push
mul
push
sub
or
mov
shlb
jbe
xchg
mov
mov
fdivl
sarb
mov
or
xor
dec
dec
or
insb
shl
mov
shrl
shrl
lea
fwait
fwait
sarl
mov
sub
mov
jecxz
lret
cmp
pop
mov
sbbl
sub
sub
jp
xchg
mov
mov
sub
add
xchg
sbb
jns
sub
ljmp
mov
push
mov
pop
cltd
mov
pop
cld
shll
in
pop
call
add
dec
push
ds
sbb
dec
pop
jmp
fisubrl
in
xor
loope
mov
sub
cmp
sub
mov
and
adc
movsb
xor
pop
gs
lds
jne
in
stos
dec
cli
shlb
clc
dec
decb
lcall
movsb
mov
repnz
pop
push
push
mov
mov
sub
into
mov
or
shl
dec
scas
cmc
xor
icebp
test
jmp
bnd
paddsw
cli
dec
fsubs
sbb
pop
loop
sub
adc
enter
xchg
mov
xchg
enter
xchg
and
inc
pushf
adc
mov
cmc
push
add
fsts
and
jb
or
rcrb
xchg
cld
lods
inc
leave
cmp
mov
inc
sti
insl
jge
pop
lea
repnz
xor
xor
scas
movsl
por
xor
push
mov
mov
xchg
jge
outsl
cmp
rol
sahf
mov
pop
mov
pop
or
aaa
insb
in
ss
ss
stc
jmp
mov
ljmp
mov
inc
xchg
ljmp
mov
mov
test
out
call
pop
mov
lds
int3
enter
jge
or
mov
xor
dec
popf
cmp
iret
adc
sbb
push
scas
mov
in
test
dec
inc
test
ss
pop
mov
or
iret
ret
in
add
imul
dec
and
fs
pop
pop
pusha
jle
rcrb
ficoms
repnz
shll
jmp
xor
out
add
fsubr
xchg
les
and
push
pop
sti
test
fiaddl
mov
mov
lods
mov
hlt
xchg
xchg
shrl
adc
inc
mov
xchg
stos
pop
movsb
dec
and
sub
xor
imul
xor
mov
xor
sbb
cltd
push
push
es
mov
add
roll
outsl
imul
dec
fsubrs
cmc
rcr
stos
push
popa
and
mov
or
mov
xchg
ret
push
bound
fldt
or
aam
inc
sub
aam
das
dec
sarb
mov
push
cmp
out
lahf
or
mov
and
xor
stos
cmp
sbbb
pop
lret
xchg
xchg
mov
sub
jmp
sbb
push
adc
aaa
or
sub
cmp
adc
loope
or
sub
outsl
stos
cwtl
jno
xchg
ljmp
xlat
ret
or
mov
nop
ja
fsubrs
mov
cmp
mov
pop
loope
call
addb
inc
loop
jmp
mov
or
cmpl
cli
daa
incl
cwtl
cmc
aaa
ja
aaa
inc
in
pop
lds
jns
cmp
int3
addb
and
cld
sarl
es
or
in
testb
push
push
or
push
incl
lcall
popa
lock
aas
cld
inc
add
pop
add
enter
xchg
sti
cltd
rcll
fimuls
lahf
mov
repz
jne
push
repnz
pop
test
xchg
dec
bound
push
fistps
add
loopne
aad
xchg
ret
xchg
mov
inc
add
xchg
push
test
ja
int
pop
lods
inc
dec
xor
movsl
jg
mov
arpl
push
mov
add
push
daa
jnp
iret
sbb
repz
lea
adc
xchg
xorl
hlt
mov
inc
push
movsb
cs
in
jle
mov
imul
popf
pop
cmpsb
call
out
sbb
dec
cwtl
iret
adc
pop
mov
idivl
mov
dec
sub
insb
hlt
pop
cmp
mov
loope
inc
ds
pop
lret
pop
mov
aam
aam
push
jns
jae
push
pushf
int3
push
mov
xchg
notl
push
jl
xor
cmp
sub
mov
int
test
jmp
mov
xlat
in
xchg
sbb
dec
sub
jno
dec
repnz
push
nop
adc
mov
push
mov
pushf
dec
push
out
inc
jg
push
mov
outsb
js
pop
in
or
xchg
pop
xor
dec
sbb
sub
call
es
mov
decb
jmp
test
out
sub
shlb
sub
dec
dec
shrb
orl
jb
mov
mov
sarl
fs
or
rol
inc
xor
aam
fs
imul
int
divb
iret
mov
push
das
cmp
inc
pop
popf
jne
inc
or
xchg
mov
cld
push
lods
dec
pop
loope
inc
adc
push
lods
ss
pushf
test
imul
inc
into
in
pushf
push
inc
pop
fsubl
jle,pn
mov
je
or
or
cmp
xlat
push
xchg
adc
bnd
mov
xchg
imul
out
sub
xchg
and
lock
aaa
lret
inc
or
mov
leave
xchg
addr16
mov
pop
cmp
je
mov
jle
jmp
out
lahf
lods
and
or
push
cmp
lcall
jmp
cmpsb
icebp
jb
pop
in
push
adc
or
sbb
inc
out
cltd
inc
test
out
ja
repnz
repz
jge
pop
out
inc
rol
jnp
mov
mull
lds
adc
mov
pop
call
and
dec
xchg
jg
xor
lea
cmpsl
dec
or
push
nop
add
jnp
call
cmpsb
xor
jns
leave
test
inc
jle
es
mov
std
scas
or
shrl
ret
into
hlt
mov
aas
add
lret
push
jb
into
sub
aaa
pop
dec
imul
lahf
xor
lods
cmp
rorl
stos
test
call
fucomip
data16
push
push
jno
ficompl
xchg
fadds
movl
shrl
xor
fildl
imulb
popf
pop
cmpsl
push
pop
clc
in
in
mov
mov
sbb
jg
fucomi
imul
inc
arpl
pop
dec
or
ljmp
mov
popa
icebp
int
cmp
mov
pop
test
jne
stc
xor
xor
outsl
mov
sub
repz
daa
mov
push
rcll
out
andb
popa
mov
insl
repnz
test
adc
xor
shrl
fiaddl
subb
cmp
repz
sti
ret
cltd
push
mov
mov
lcall
cs
pop
sub
dec
mov
inc
push
rcll
dec
or
cmp
lahf
mov
addr16
or
pop
ljmp
xor
push
xchg
pop
mov
mov
inc
pop
lahf
cld
sahf
xchg
rcll
hlt
enter
push
cmp
inc
pushf
std
sub
adc
insb
into
or
lock
call
jae
push
lods
int3
stos
cmpsl
rcrl
dec
push
fidivrs
adcl
js
sbb
inc
js
lea
mov
fs
mov
leave
mov
sub
and
fs
ja
dec
inc
mov
sbb
ja
adc
cmp
stos
clc
idivb
xchg
xchg
das
xchg
cmp
dec
movsl
and
je
insl
xchg
imul
mov
mov
out
inc
hlt
ror
sti
sub
lahf
es
daa
gs
shl
or
adc
test
mov
and
jg
frstor
rolb
and
mov
sbb
xor
test
push
ljmp
out
or
popa
cmp
pushl
dec
mov
inc
daa
push
mov
repnz
ljmp
clc
push
je
jmp
dec
pop
pop
add
pop
mov
mov
test
and
hlt
loope
pushf
addr16
xlat
int3
dec
or
dec
loop
sub
daa
icebp
lahf
add
add
repnz
pop
mov
mov
enter
dec
loope
lds
sahf
mov
and
out
fisubrs
adc
lea
stos
sbb
or
push
and
jae
and
cmp
arpl
xor
decb
sbb
cwtl
out
pop
sub
in
inc
shr
fmull
clc
add
dec
and
adc
mov
jmp
cmp
cmp
adc
rorl
rcr
mov
jmp
sets
jae
mov
mov
pop
ljmp
cli
xchg
stc
mov
call
xor
aad
arpl
mov
mov
xchg
adcb
sbb
fstl
push
inc
loop
sbb
xor
mov
dec
mov
cmp
fdivl
adc
neg
cltd
test
inc
jb
repnz
xchg
dec
cmp
push
in
pop
adc
mov
stos
jb
and
xor
xchg
imul
push
daa
in
push
push
in
mov
or
jo
fistps
fldcw
adc
xchg
xchg
push
aas
xlat
xchg
mov
aam
insb
clc
xorl
and
in
push
mov
cltd
mov
adc
adc
push
js
in
push
stos
adc
sahf
lret
popf
xor
sbb
xchg
mov
rol
adc
mov
std
pop
leave
mov
test
pusha
repz
lea
inc
je
mov
stc
loope
test
mov
cmp
enter
js
std
mov
in
icebp
cmp
movsb
sbb
cmp
outsl
pop
and
repnz
fildll
xchg
xchg
incl
je
pop
dec
popa
add
aam
sbb
push
test
cmpb
js
pushf
cmp
aas
dec
iret
in
cwtl
sbb
sub
test
pop
jecxz
lock
sub
test
stc
aas
and
stos
cmpsl
call
lret
mov
xchg
mov
gs
cwtl
insl
mov
fdivrs
mov
add
sub
test
cmp
mov
je
nop
lods
push
jp
fwait
shrl
lds
out
out
fwait
test
add
and
fnstenv
mov
cli
xorl
data16
mov
loopne,pt
push
lret
jne
push
sti
cld
je
jae
inc
adc
fistpll
inc
jg
mov
adc
xor
push
mov
arpl
mov
jp,pt
dec
lock
xorb
roll
dec
or
imul
stos
inc
insb
aad
jno
cmp
adc
push
pusha
jae
dec
fcmovnu
cmp
aam
dec
pop
lahf
sub
pop
lods
xchg
add
or
dec
cmc
or
lods
jns
mov
int3
or
mov
xchg
cmp
xorl
cmp
divb
mov
sub
jbe
xchg
ja
sti
je
mov
lahf
ror
lcall
or
and
mov
or
fwait
dec
mulb
xor
mov
fnstenv
scas
outsb
hlt
nop
push
call
jno
sti
sub
fdivr
mov
ret
cmpb
sub
push
push
cmpsb
mov
addr16
inc
rcrb
push
fsubr
ret
or
push
or
jne
pop
push
lret
pop
mov
int
int
fwait
adc
mov
and
mov
sub
jnp
push
and
mov
lock
xchg
gs
dec
clc
cld
cs
mov
loop
inc
shll
sub
and
imul
or
jbe
sbb
mov
push
lret
or
and
nop
cltd
mov
adc
push
jle
stos
jg
lea
js
adcb
imul
cmp
mov
sbb
sarb
mov
sub
inc
push
cmp
call
hlt
lret
lods
pop
ss
add
lock
mov
lods
xor
pop
out
and
out
xchg
mov
mov
mov
jmp
sub
mov
fwait
dec
pop
in
dec
and
andl
inc
pop
and
out
mov
adc
lds
ret
test
lods
testl
rolb
dec
ja
cmp
scas
in
pop
idiv
sbb
sbb
dec
cld
rcr
sub
xchg
int
jle
lock
sbb
push
in
fs
push
mov
in
add
into
xchg
popa
or
cmp
ffree
sub
lahf
outsb
fcompl
out
cli
test
mov
cmc
clc
dec
cmp
push
fwait
popa
and
sub
scas
sbb
mov
sub
jb
lods
jb
mov
pushf
add
aam
sarb
jne
sti
xor
and
movsl
lods
xor
xchg
mov
fwait
xchg
jns
inc
mov
jge
add
in
sbb
int3
shll
ja
pop
orl
mov
stc
pop
push
mov
lock
cmp
icebp
das
sbb
lret
adc
mov
jne
inc
test
push
sub
sti
popa
mov
lods
or
or
mov
push
xchg
out
nop
push
sub
jge
pop
sahf
inc
arpl
test
jl
subb
sub
adcl
xchg
je
dec
xchg
dec
and
mov
iret
stos
addr16
lods
sbb
sarl
jle
or
adc
ljmp
sub
out
repnz
inc
call
xchg
nop
and
push
data16
movsb
jp
movsb
add
add
ret
rorl
jmp
mull
lods
hlt
dec
loopne
xor
insl
jge
out
mov
and
push
mov
mov
add
cmp
lcall
fildll
push
out
jmp
scas
sbb
popf
clc
mov
shlb
ret
push
xchg
sbb
xor
sbb
xchg
cld
popf
jno
fsub
lods
xchg
xor
pop
aad
jge
and
jmp
lds
std
mov
inc
iret
or
aam
les
mov
pop
jmp
mov
push
pop
sub
psubusw
lds
and
push
scas
std
sub
into
cmp
dec
fimull
inc
insl
out
inc
call
xor
xchg
sahf
sbb
inc
adcb
in
push
fisubrs
subl
sub
popf
out
stos
jnp
out
or
movsb
mov
jns
cmovbe
cwtl
sub
ja
leave
inc
mov
dec
lret
ss
daa
loop
mov
xchg
mov
insl
cmc
call
imul
mov
fsubrl
adc
mov
sbb
popa
adcb
push
arpl
xor
int3
jmp
fs
int
repnz
mov
test
jg
fistl
push
xor
outsl
call
mov
push
lods
lea
mov
js
jg
add
and
test
rorb
sbb
sahf
addr16
popf
jge
sub
mov
daa
pop
or
or
mov
js
pop
in
lods
sti
jmp
sbb
mov
or
and
cmpsb
sbb
push
mov
arpl
sub
shlb
lods
jae
iret
dec
mov
scas
je
xor
xchg
movsb
fs
push
inc
stc
dec
pop
xchg
inc
sub
fs
pushf
add
and
adc
out
test
sbb
jne
inc
loope
xor
cs
mov
mov
cmpsb
rorb
shrb
les
xor
push
push
or
push
sbb
jae
push
push
repnz
loopne
mov
inc
decl
pushf
inc
sbb
sbb
sub
or
xor
jecxz
lods
mov
popa
dec
jle
xchg
push
mov
sti
xor
sbb
adc
fwait
testl
and
leave
inc
cli
dec
push
xor
sahf
cmpsb
push
adc
cmp
push
cltd
and
mov
adc
xchg
int3
loop
outsb
mov
pushf
stos
cmp
cmp
outsl
mov
lea
mov
in
add
and
pop
in
xchg
cmpsl
addr16
push
mov
mov
sbb
into
outsl
or
inc
sbb
les
insl
push
popa
fmulp
xchg
cli
test
test
adcb
push
push
sbb
cmp
mov
ret
repnz
xchg
addr16
arpl
jns
inc
mov
nop
adc
dec
push
add
dec
mov
sub
movsb
loop
mov
adc
stos
xorl
or
cmpsb
aam
ljmp
xor
jnp
insb
hlt
fisttps
mov
fimull
mov
pop
scas
adc
cs
lods
dec
cltd
rorb
mov
jns
imul
dec
clc
adc
jl
jl
js
data16
mov
pushf
pop
mov
and
cli
sbb
sbb
int
testb
jae
leave
scas
ret
incl
in
xor
inc
pop
popa
mov
sbb
pcmpgtw
mov
xchg
cmp
mov
mov
xchg
mov
lahf
mov
int3
ja
push
int3
out
xor
inc
jg
loopne
inc
xchg
gs
cmpsb
les
orl
sub
mov
or
fstps
mov
not
mov
pop
pop
lea
mov
pop
aaa
mov
std
sahf
adc
cmpsl
cmp
popa
adc
es
imul
aas
iret
inc
xlat
jmp
clc
mov
adc
and
rcll
rorb
inc
add
pusha
fwait
cmc
or
jo
fldt
les
and
sub
insl
add
adcb
push
adc
andb
pop
xchg
jmp
call
dec
ret
data16
mov
or
mov
jo
add
mov
pop
cmp
mov
cmpsb
sub
in
insl
iret
mov
jl
pop
push
mov
jp
mov
leave
or
pop
or
jnp
ja
xchg
push
jmp
adc
sbb
pushf
es
shlb
ds
imul
sbb
pop
in
push
push
repz
add
pop
icebp
sbb
sbb
je
popa
add
repnz
insb
mov
ljmp
dec
sub
xchg
jmp
repnz
push
jae
in
push
sub
aad
ficoms
out
mov
push
into
mov
push
pop
fadd
rcrl
rol
sbb
and
xchg
psrad
cld
paddq
or
mov
sub
js
jb
enter
into
xchg
pop
scas
iret
sub
dec
mov
pop
jmp
mov
dec
std
orps
mov
mov
popa
test
clc
xchg
nop
js,pn
sbb
inc
and
sbb
or
push
rorb
ljmp
jle
imul
scas
sub
cmpsl
add
test
scas
add
lds
xchg
jae
inc
test
insl
out
andb
adc
add
lods
je
sbb
fsts
das
fnstcw
sbb
jge
jle
dec
ja
in
cmp
mov
jp
xchg
cmp
mov
mov
cmp
cmp
cs
imul
cmp
das
mov
ja
testl
ljmp
jmp
pop
sbb
mov
cltd
repz
fidivl
test
test
push
daa
push
fmull
das
enter
jge
cmp
and
addr16
mov
xor
ds
xchg
pop
sahf
push
cmp
add
ret
pop
jmp
xchg
and
int3
mov
lock
call
lcall
cmp
sbb
dec
das
xor
push
outsb
sub
cmp
or
std
rcrl
loope
mov
clc
pop
xchg
int3
fwait
les
scas
stos
push
movl
aad
in
fsubs
sbb
out
shr
cmpsl
xlat
movsl
mov
fistps
sahf
push
cmp
xchg
pop
adc
and
inc
pop
inc
mov
rorl
add
mov
imul
sub
dec
addb
mov
shlb
or
jae
out
sub
in
push
fdivrp
cltd
ja
test
and
scas
pcmpeqb
imul
in
scas
enter
or
vhsubps
repnz
ljmp
aas
daa
lret
movsl
imul
mov
lahf
adc
mov
and
sbb
insb
ficomps
sub
test
das
fsubl
loope
mov
push
xchg
mov
mov
ret
pop
dec
ret
stc
imul
mov
test
sbb
adc
scas
scas
ret
push
stc
push
push
add
push
jge
lods
adc
sbb
testb
rorl
out
imul
pop
pop
in
pop
jno
insb
inc
je
and
fwait
mov
xor
and
push
xor
xor
dec
mov
loop
orl
mov
lahf
adc
sub
cld
mov
jbe
rcrl
bound
pop
mov
mov
popa
xlat
aas
pop
xchg
daa
pop
and
pop
add
hlt
jb
jb
popf
lea
pusha
push
in
mov
out
inc
inc
jp
stos
scas
and
cmp
sub
or
sub
jae
imull
loop
sub
mov
lea
push
out
sbb
mov
cmc
scas
imul
xor
dec
aam
add
scas
sub
mov
out
and
push
and
jecxz
and
neg
and
mov
popf
scas
gs
add
sbb
lcall
add
cmp
out
ret
mov
fidivl
jno
icebp
sbb
aas
cs
mov
jle
mov
mov
ja
faddl
ds
jecxz
mov
mov
outsb
sub
cwtl
icebp
mov
ja
dec
cmp
dec
cmpsl
sub
pop
test
pusha
xlat
int3
lret
cltd
cmc
or
jecxz
dec
push
jp
scas
jae
inc
in
repnz
cmp
push
dec
mov
mov
in
cmp
sub
mov
push
lea
cmp
xchg
xchg
sub
addl
popa
inc
movsl
inc
mov
jg
mov
add
fcompl
call
ret
pop
fdivs
mov
xchg
les
mov
insl
jl
or
and
into
jmp
inc
adc
push
scas
addr16
mov
add
outsl
mov
add
data16
gs
data16
cmovl
inc
pop
punpckhwd
mov
ret
pop
vpor
ret
inc
and
out
shlb
aam
imul
test
cmpb
or
hlt
push
stc
push
xor
sti
jb
jmp
pop
dec
lcall
xor
add
js
push
sbb
insb
sub
push
lahf
xchg
mov
sub
push
add
push
pop
lret
ja
inc
pop
sub
cmp
imul
insb
std
lods
aaa
insb
out
mov
fldenv
dec
jge
jbe
cltd
jne
cmpsb
lahf
cmp
ja
jb
mov
repz
filds
push
pusha
add
mov
loopne
inc
sahf
aas
push
aam
repnz
sti
nop
sahf
fwait
das
sub
out
push
mov
fildl
dec
sub
xor
es
sti
jge
sub
xchg
leave
imul
rcrl
inc
imul
test
ja
in
repnz
and
xchg
loopne
in
mulb
sbb
movsbl
or
insl
push
dec
std
bound
nop
inc
cmp
jle
adc
imul
xlat
into
mov
nop
outsl
jp
fwait
outsb
sbb
push
shl
negb
xor
push
mov
fcoml
xchg
mov
cmp
add
add
push
jnp
mov
and
or
movsb
or
mov
push
sub
shrb
outsb
out
push
and
or
in
scas
inc
imul
test
sahf
ret
adc
outsl
ret
push
sbb
in
lahf
pop
cs
push
jg
aas
mov
pop
sub
mov
mov
cmp
out
jge
and
je
jne
jecxz
and
ljmp
push
sbb
cmp
mov
popf
loop
ja
jne
cwtl
xor
jmp
insl
in
mov
scas
mov
xchg
sarl
xchg
xchg
sbb
push
leave
jl
lds
jmp
js
scas
mov
jg
mov
and
push
sub
mov
pop
dec
cmpb
push
ss
jno
adc
cmpsl
pop
sub
cli
rcrl
mov
mov
inc
xor
push
and
dec
jb
or
in
ret
push
add
gs
sti
mov
push
cltd
and
insl
adc
lcall
mov
mov
cld
jl
and
inc
popa
dec
aad
stos
arpl
andb
and
fiadds
adc
fwait
pop
in
xor
jb,pt
xor
add
xchg
add
clc
cmpsl
cmp
push
aam
call
gs
mov
mov
push
or
dec
lds
pusha
sbb
or
lcall
loop
mov
and
add
push
sahf
push
fistpll
mov
add
mov
cli
adc
fsts
pop
mov
inc
xchg
insl
hlt
add
cmpsb
jp
in
lret
fldt
fmull
mov
into
jns
std
outsl
imul
aad
lret
pop
sub
fcmovbe
pop
mov
call
into
iret
sub
cmp
hlt
xchg
in
addr16
inc
dec
lahf
jnp
sub
sub
jno
adc
out
in
sub
xor
pop
daa
jp
jmp
push
xor
mov
xchg
sbb
cwtl
jmp
lea
adc
popa
mov
out
test
pop
pop
and
das
xchg
incl
jb
adc
mov
pop
pusha
loop
xchg
adc
jecxz
insb
mov
jbe
sub
mov
inc
push
not
jb
icebp
outsb
mulb
scas
out
or
sub
jo
aad
push
mov
jecxz
cmpsb
imul
std
and
enter
sub
xchg
add
and
xor
or
fildll
and
dec
jnp
arpl
add
mov
inc
outsl
bnd
pop
in
mov
imul
sbb
frstor
ss
sahf
jnp
xchg
cwtl
pop
cmp
push
or
jno
push
xor
inc
push
pop
aas
xchg
test
push
mov
bound
jo
jmp
adc
jmp
or
add
sbb
mov
test
loope
andl
ret
or
add
push
sti
mov
adc
pop
shll
adc
out
push
inc
mov
xchg
in
and
out
movsl
cmp
add
push
jmp
mov
mov
inc
inc
xchg
hlt
mov
cmc
inc
in
test
scas
ss
xchg
mov
mov
push
arpl
rcll
mov
std
mov
mov
xchg
ret
pushf
add
ss
call
push
sub
inc
loopne
mov
pop
fdivs
push
adc
cld
jle
and
cwtl
loope
mov
xchg
jb
pop
scas
imul
mov
daa
sub
vpcmpgtb
ret
lret
mov
cmp
in
in
leave
addr16
stos
push
inc
inc
negl
js
shrl
sub
fistpll
mov
cmp
adc
sbb
sbb
test
mov
push
dec
in
or
dec
mov
push
and
sbb
inc
xor
and
ljmp
out
inc
ret
mov
cwtl
add
fdivrl
ljmp
rol
add
lods
add
xor
bswap
stos
xchg
lret
xor
cmc
mov
dec
ja
notl
lret
or
cs
jmp
stos
into
xchg
pop
xor
je
cmpsb
xchg
iret
arpl
icebp
jp
dec
xchg
jge
mov
adc
mov
les
push
lahf
pop
loope
mov
arpl
mov
jmp
jo
cmp
xor
out
cmp
sub
mov
push
pop
fwait
mov
test
subb
adc
jnp
enter
loop
add
mov
add
cld
dec
imul
fcoms
mov
inc
incl
mov
inc
mov
adc
jg
adc
inc
mov
loopne
mov
sahf
dec
sub
and
push
daa
mov
mov
push
scas
jecxz
rolb
shlb
out
push
fisttps
add
js
mov
dec
dec
popa
subl
scas
ret
aad
pushf
mov
xchg
lcall
and
and
jno
mov
and
in
fisubrs
xchg
andb
pop
rcrl
xchg
push
and
inc
jbe
jb
pop
or
enter
int3
addr16
enter
loop
sub
adc
jne
push
sahf
subb
jg
add
ret
sub
movhps
mov
pop
shl
shrb
lods
mov
cmp
enter
inc
sub
es
jb
fcoml
fmull
mov
mov
jbe
sbbl
sbb
push
xor
push
mov
pop
dec
jmp
pop
ret
movsl
mov
rolb
jo
lods
add
cmp
imul
sub
and
jp
mov
mov
test
shlb
fisubs
das
push
mov
inc
int
dec
lds
push
adc
test
jns
fwait
add
sbb
shl
pop
lock
out
ret
idivb
gs
test
push
ret
mov
hlt
arpl
popf
dec
sbb
shr
test
arpl
movsl
mov
inc
scas
xchg
subl
std
mov
xorl
dec
add
xor
xor
sarb
dec
xorb
addr16
sbb
popa
rcl
sbb
add
jo
push
add
outsb
scas
pop
call
mov
inc
pop
lret
sti
xchg
mov
sbb
daa
cli
aas
sub
adc
mov
inc
push
js
loope
fwait
add
inc
aas
dec
imul
outsb
add
mov
inc
pop
mov
and
jge
mov
scas
movsl
adc
jmp
or
jmp
mov
insb
adc
je
add
or
sbb
xchg
imul
pop
lret
jo
leave
pushf
and
fidivrs
sahf
cmpsl
jno
cli
andl
movsl
out
int3
inc
xchg
into
cmp
mov
in
adc
test
mov
jns
mov
lahf
sbb
sub
mov
xchg
and
out
sub
xor
and
sub
cli
mov
shrb
movsb
push
jb
imul
leave
insb
pushf
pop
sub
sbb
idivl
cld
mov
into
imul
out
mov
jecxz
adc
ret
push
test
stos
push
xlat
test
push
loopne
js
cmpsb
data16
pop
dec
cmp
cwtl
test
pop
inc
enter
and
xchg
mov
mov
out
lahf
mov
and
test
pushf
pop
xchg
popf
gs
out
mov
cmc
pop
and
jns
shlb
xor
inc
mov
add
fadd
out
gs
lahf
xchg
loop
popa
in
pop
sub
sbb
roll
inc
aas
sub
orb
hlt
or
sbb
lcall
hlt
sub
jg
sbbl
sbb
pop
ja
jecxz
repnz
xor
push
rclb
jp
stos
xor
xchg
mov
lcall
imul
dec
in
pusha
rorb
adc
mov
mov
or
cwtl
inc
jbe
dec
inc
cmpsb
dec
fsubrs
mov
mov
lods
mov
push
shrb
js
pop
cs
xchg
lea
das
mov
jb
lock
sbb
call
in
jecxz
aam
xlat
sarb
cs
or
jecxz,pt
jle
cmp
or
mov
jmp
aaa
push
testl
add
cmp
lods
mov
or
leave
pop
xor
or
movsl
pop
mov
jno
testb
pop
pop
cmp
mov
mov
sahf
push
dec
jno
xor
mov
ljmp
sarb
cmp
bound
sub
xor
out
cmp
notb
jbe
mov
cmpsb
lahf
jmp
out
cmp
lahf
sar
loop
arpl
stos
ret
icebp
sbb
sti
push
add
pop
arpl
or
xchg
imul
cltd
or
mov
lret
js
ja
and
xchg
jge
or
adc
xchg
push
stos
mov
mov
mov
repz
das
pop
xchg
push
repz
push
repz
jmp
fstps
sbb
or
inc
popf
mov
push
dec
cmp
out
pop
add
and
les
xor
pop
adc
cmpsb
scas
xchg
jb
mov
lret
shl
adc
mov
repnz
aad
movsb
sti
push
mov
inc
pop
fmuls
sbb
xchg
js
lds
std
push
mov
xor
fcomi
inc
pop
out
sbb
scas
xchg
fwait
mov
icebp
dec
das
mov
clc
mov
lea
test
push
lret
inc
js
data16
gs
aas
lods
jno
sti
outsl
cmp
and
arpl
and
jo
and
cmpsl
push
or
int
mov
dec
add
push
stos
fs
mov
xor
fisubs
jmp
jns
shlb
xchg
cmp
dec
and
movsb
lea
movsl
int
popa
pop
cmp
sti
mov
dec
xor
aad
repz
xor
fstpt
shlb
mov
push
lock
jmp
jecxz
fxch
loop
in
ficoml
in
clc
in
fcoml
out
xchg
adc
sbb
xchg
arpl
scas
pop
nop
and
inc
je
mov
jbe
mov
dec
mov
scas
add
int3
sbb
mov
es
rolb
stc
stc
lods
or
xchg
xor
fcompl
jne
sarl
jle
aas
data16
mov
mov
imul
sub
pop
mov
jp
jmp
lcall
cltd
add
fidivs
xchg
add
call
mov
dec
aaa
xchg
inc
jg
orl
lahf
lret
add
jecxz
es
cmp
pop
or
dec
and
jecxz
mov
scas
gs
shlb
cmp
add
addl
call
ret
push
and
pop
dec
je
push
or
out
xor
pop
js
fwait
push
mov
mov
pushf
jle
xchg
adc
mov
adc
mov
clc
stos
stos
push
push
fistpl
iret
into
popf
adc
ljmp
xchg
xchg
sub
adc
out
daa
mov
lret
repnz
scas
adc
adc
mov
sub
inc
pop
in
aas
mov
mov
dec
sbb
aam
mov
push
out
jb
out
lret
leave
sub
mov
cwtl
adc
adc
dec
mov
dec
fxch
ret
dec
idivb
mov
rclb
es
pushf
jecxz
mov
fidivrl
push
into
cwtl
arpl
xor
mov
mov
es
inc
daa
mov
aaa
and
pop
test
pop
adc
inc
int3
xlat
inc
or
incl
pop
enter
jnp
loopne
xchg
rorl
int
cmp
out
xchg
dec
repz
sub
nop
xchg
rol
in
sbb
in
xchg
sbb
push
mov
pop
dec
cli
lcall
xchg
xor
movsb
pop
dec
loopne
ds
jne
popf
ljmp
subl
xor
push
fcmovnb
push
or
xchg
outsb
lods
test
lahf
std
sub
xor
jno
stos
and
mov
cmc
xchg
and
test
imul
dec
inc
xchg
mov
jge
pop
loopne
jno
xor
push
pop
push
and
sbb
or
inc
cmp
subb
mov
imul
lcall
in
push
jae
or
mov
xchg
je
or
pop
rorl
push
push
pop
xchg
push
inc
cmp
jp
add
bound
aam
ss
jl
cmpsb
dec
cmp
lods
insb
dec
xchg
cmp
into
lock
scas
cmp
lock
cmpsl
sbb
into
adc
mov
sub
pop
test
mov
cmc
add
lret
mov
std
mov
lcall
dec
mov
lahf
xor
mov
jae
push
jg
in
mov
sbb
loop
mov
cmp
lcall
mov
das
shrl
in
std
mov
push
and
xlat
jne
arpl
gs
pop
orb
jg
push
fs
xchg
adc
dec
bound
or
fidivs
repnz
jp
mov
test
ja
bound
xchg
je
mov
and
mov
jge
sbb
xchg
enter
rolb
das
push
pusha
push
mov
lret
pop
mov
femms
shrl
aad
andl
pop
fldenv
cs
dec
test
sbb
sbb
movsb
mov
out
add
dec
divl
adc
sub
xor
fidivrs
xchg
in
test
dec
push
mov
jae
adc
loop
mov
imul
sub
les
cmp
test
xchg
ljmp
mov
add
js
sti
adc
lret
add
stos
mov
sbb
dec
flds
add
or
dec
scas
jnp
stos
mov
movb
sub
xlat
movsl
adc
cmp
movsl
sub
sub
ret
int
int3
nop
gs
jbe
testl
icebp
popf
loop
add
xchg
adc
dec
test
mov
jmp
lret
aaa
lods
jecxz
lds
ret
inc
pop
inc
daa
dec
push
lcall
addr16
sbb
xchg
cli
addb
push
xchg
pop
xor
push
jge
test
jp
mov
insb
gs
sbb
and
xchg
iret
loope
or
sub
push
add
xor
mov
or
mov
push
rol
mov
ljmp
add
out
add
adc
mov
sub
popf
mov
lds
pop
sbb
xor
push
xor
jmp
out
cmp
cmp
cmp
mov
mov
scas
jno
push
imul
sbb
sbb
pop
cmpl
scas
push
bnd
mov
dec
and
xor
loop
xchg
test
imul
out
inc
test
in
aad
mov
xor
mov
gs
insb
aas
lods
ret
sub
sbb
daa
mov
and
dec
add
in
bound
into
push
xchg
aam
cmp
cmp
enter
inc
call
or
stos
jp
das
xchg
rol
adcb
pop
jge
aaa
insl
jge
xlat
inc
scas
adc
pop
or
xchg
adc
icebp
fucomp
xor
insb
dec
scas
js
jg
lods
pusha
mov
xor
xchg
mov
movlps
dec
je
fldl
leave
cmp
sub
xor
cmc
popf
je
cmp
and
loopne
sub
push
push
sub
jbe
push
mov
add
je
movsb
cmp
sbb
movb
arpl
je
or
sbb
ret
fists
push
push
or
mov
adc
sbbb
sahf
fbld
jmp
push
cmpsb
in
fcomp
cltd
aaa
rorl
cmpsb
fs
leave
xchg
mov
shrl
inc
pop
stos
in
sub
xchg
pop
sti
lret
addr16
fnstenv
lock
test
and
inc
pop
mov
shrl
push
test
cltd
mov
adc
scas
jmp
dec
enter
stos
les
dec
cvtps2pd
mov
and
xchg
dec
add
xchg
fcomps
aaa
aad
sahf
mov
adc
mov
mov
pop
ret
dec
adc
sbbb
pop
shll
cmpsb
movsb
jbe
scas
aas
push
jmp
xor
fidivl
fiaddl
add
sub
sbb
scas
aad
and
and
scas
sbb
pushf
rcll
loope
pop
out
pop
adc
adc
pop
iret
cmp
jge
pop
xchg
dec
or
int3
lret
push
mov
or
fadd
jp
bound
cwtd
mov
push
icebp
cs
pop
jbe
mov
out
fldl
jmp
lods
mov
mov
mov
jge
es
int
adc
je
jecxz
lds
sub
insb
xor
mov
xchg
outsb
push
in
popf
fidivl
scas
sti
dec
mov
xor
pop
inc
jmp
adc
adc
jnp,pn
push
mov
stos
xchg
imul
lods
jmp
or
adc
stos
xor
jno
mov
aam
adc
cmp
mov
mov
scas
subl
pop
xor
xor
xor
addl
pop
mov
stos
xchg
xor
aam
pop
or
mov
decb
cmp
cmp
sub
sub
fs
mov
jl
daa
outsl
insl
jbe
or
pop
xchg
int
push
test
nop
inc
pop
mov
sti
sub
out
aaa
adcl
xchg
lods
shrb
mov
cli
cli
xor
pop
rcl
ffree
xchg
loopne
pop
or
xor
test
xor
in
ja
xchg
jno
in
lret
inc
inc
or
test
sbb
push
popw
fstpl
lods
pop
pop
sub
es
xor
mov
out
jg
jmp
sti
addr16
sub
arpl
jl,pt
cltd
sbb
lds
loopne
sarb
jb
inc
fldl
shrb
xor
jmp
sti
stos
mov
push
pop
jmp
ficoms
cmp
and
sti
xor
mov
push
daa
xchg
or
fidivl
in
xor
lea
dec
or
fsts
sbb
cwtl
ficoml
inc
out
popw
xor
jmp
push
sub
jg
dec
push
mov
cmp
push
add
and
popf
push
xchg
adc
inc
and
test
xchg
cmp
cmpsb
inc
and
outsl
adc
cmp
xor
adcl
or
sub
popa
mov
xchg
inc
mov
mov
push
sbb
addr16
iret
imul
std
lds
adc
arpl
and
jns
les
and
push
fwait
aad
jnp
mov
sbb
pushf
cmp
push
push
sbb
cwtl
ret
xchg
mov
dec
cld
popa
pop
push
mov
ss
lds
or
cltd
sbb
mov
sbb
mov
sub
inc
iret
pop
mov
fildl
sub
das
stos
cmpsb
popf
hlt
outsl
adc
imul
aam
loop
mov
sbb
rcrl
call
mov
add
aam
imul
mov
mov
clc
inc
xchg
stc
push
mov
dec
adc
aaa
sub
dec
cmp
mov
jle
mov
ja
jae
dec
push
je
inc
call
sbb
mov
cmc
xlat
xchg
aam
test
sti
scas
bnd
sbb
pop
adc
loop
adc
push
mov
or
cmpsb
mov
sahf
push
mov
popf
cli
je
inc
jle
and
jp
xor
ja
push
adc
cmp
cmpl
addr16
aas
push
xchg
int
addr16
cmpsb
movsl
push
push
xor
outsb
ds
clc
cmp
sub
out
or
xor
in
cmpsb
aam
jl
sbb
pop
dec
enter
in
inc
mov
xorl
cmp
mov
mov
mov
rclb
mov
loopne
sbb
adc
fldt
mov
fnstcw
xlat
test
imul
data16
sub
push
bound
and
mov
mov
push
das
loop
sti
loop
push
inc
cmp
xchg
shll
test
popf
ljmpw
push
inc
push
xchg
in
mov
lods
jge
jb
inc
jno
sub
add
cmpsb
jmp
mov
fiadds
inc
xor
sbb
pmulhw
jne
sbb
lock
or
cmp
test
nop
mov
and
aaa
mov
scas
dec
lret
jle
add
inc
and
dec
xchg
gs
mov
ja
mov
or
daa
cmp
aas
hlt
mov
xchg
lods
mov
mov
sbb
cmp
mov
mov
call
dec
sti
pop
jbe
dec
dec
pop
sbb
mov
push
lcall
dec
push
lods
sub
sbb
sbb
jnp
lods
mov
rorl
mov
inc
dec
mov
hlt
enter
pop
push
jmpw
in
pushf
cmp
leave
rol
push
jmp
mov
or
ret
enter
je,pt
cwtl
or
xor
fs
insb
jae
and
dec
mov
sub
or
xor
ja
jg
adc
mov
sub
xor
push
jp
addr16
xchg
pop
add
pop
dec
in
lods
fwait
or
xor
dec
outsl
inc
pop
jbe
jmp
lret
mov
add
pop
pop
lock
pushl
out
mov
sbb
push
cs
mov
pop
popa
xor
popa
mov
pop
jbe
mov
insl
cmp
fcompp
sti
xchg
call
int
lret
test
and
sub
fs
mov
add
lods
sub
mov
stos
add
mov
mov
and
bnd
adcb
imul
add
sti
mov
push
pop
push
push
mov
mov
dec
jg
rol
push
xchg
aas
pop
xor
mov
int3
pop
jno
js
cmp
mov
mov
mov
cmp
mov
mov
cmc
mov
xchg
mov
cmp
xor
push
scas
pop
adc
pop
gs
stos
push
imul
push
xchg
fistpl
fimull
xchg
cld
mov
lcall
shlb
pop
rorb
pop
xchg
orl
cmp
sub
in
push
cmp
pop
and
push
lea
mov
test
cs
mov
adc
adc
or
adc
arpl
cmp
dec
adc
out
gs
in
fiaddl
int3
pop
cwtl
mov
or
mov
mov
out
std
inc
insl
jmp
adc
lcall
ficompl
mov
in
push
xchg
fsubs
imul
jmp
cmp
aas
mov
out
sub
mov
pop
inc
jne
mov
cwtd
dec
push
xchg
dec
jmp
jne
adc
push
jmp
insl
addl
loopne
adcb
pop
or
mov
inc
aad
push
loop
mov
andb
cli
xchg
cmp
pop
push
enter
pop
and
into
loopne
into
cmp
dec
push
movsb
repnz
cmc
jmp
das
jp
jnp
fdivrs
push
mov
and
or
in
cli
ret
cmp
shrl
dec
orb
in
adc
jl
sub
mov
sub
sahf
imul
js
cmp
dec
jmp
imul
cmp
in
xlat
add
arpl
xchg
and
or
jbe
mov
push
lahf
sbb
or
and
mov
hlt
push
sbb
mov
adc
xchg
sub
mov
nop
xor
and
jnp
ret
inc
pop
pop
push
fiaddl
loope
add
aas
xchg
enter
mov
adc
icebp
cmc
mov
stc
jecxz
add
push
and
js
dec
lahf
inc
pop
ja
mov
ret
in
adc
pushf
mov
mov
adc
jmp
je
mov
and
jns
pop
into
push
inc
mov
push
sarl
iret
aaa
scas
aas
dec
mov
and
call
xchg
cmp
pop
pop
mov
mov
cltd
mov
call
fisttpll
and
adc
jb
jmp
pop
push
xchg
push
incb
jnp
js
les
push
jecxz
sbb
rorb
and
hlt
xor
fsubrl
scas
adc
add
mov
icebp
je
shr
mov
jmp
lds
jb
lcall
xor
cmpsl
push
dec
jge
jne
les
ljmp
add
test
pop
push
jo
imul
pop
push
mov
jno
mov
leave
cld
add
add
dec
pop
jmp
rcrb
movl
pop
mov
movsl
aad
sub
fcomps
inc
mov
and
cwtl
enter
lea
cmp
lcall
insl
lret
add
add
and
push
and
or
add
outsl
mov
xlat
push
outsb
push
fs
push
idivb
bound
icebp
movsb
pusha
insb
fidivl
js
int3
dec
cli
sbb
testb
mov
jmp
rorl
push
and
pop
imul
test
sub
imul
xor
repz
push
mov
ret
cmc
xchg
scas
ret
imulb
cmpsl
iret
rcrb
std
leave
rorb
inc
fadd
cld
xchg
sbb
loopne
outsb
mov
fwait
mov
pop
arpl
sbb
push
orb
jo
ljmp
jbe
jle
add
ret
push
add
jbe
addl
inc
pop
adc
mov
iret
cmp
xchg
sti
mov
in
dec
xor
cmpsb
divb
out
lea
rorb
jae
add
xlat
enter
pop
inc
loopne
fwait
dec
mov
inc
cmp
std
dec
jnp
mov
jp
adc
out
jno
sub
lcall
add
arpl
lcall
sbb
inc
lods
aad
push
sbb
pop
push
jo
sub
add
das
xor
xchg
ret
icebp
lock
gs
dec
out
xlat
stc
sub
or
adc
js
lods
mov
jmp
xchg
dec
sbb
sub
inc
rcrl
xor
out
cmp
das
add
cwtl
gs
es
dec
cmp
add
ret
inc
pop
dec
fsin
mov
jp
cmp
aaa
lock
lds
in
mov
fwait
dec
popf
jb,pn
leave
loop
mov
sbb
out
decl
cmp
clc
and
stc
sbb
xchg
mov
cmpsl
mov
mov
mov
test
xor
sahf
les
pop
or
cmp
outsl
jle
sub
pushf
rorb
inc
fists
in
pop
loopne
popf
push
and
or
pop
fnstsw
mov
jno
add
jo
mov
test
push
inc
sbb
xor
outsb
mov
dec
sub
testl
test
mov
cmpsb
stos
inc
mov
hlt
aad
push
enter
ret
jle
test
mov
xor
cmc
push
push
gs
jns
pusha
mov
jbe
xchg
in
push
insb
pop
fiaddl
and
int
xor
movsb
mov
scas
sbb
test
es
mov
push
dec
movups
or
pop
jge
push
dec
fistpl
sbb
icebp
cmp
inc
dec
push
cmp
in
cmp
xorb
call
push
lea
dec
adc
cmp
repnz
mov
scas
jle
xor
cltd
out
fs
dec
cld
mov
enter
jmp
add
mov
scas
pusha
sub
push
nop
cmp
push
cmp
aam
jge
jl
cld
cltd
sub
jle
movsl
loop
iret
fimuls
rorb
jg
and
sub
ds
and
pop
int3
pop
std
mov
adcl
cwtl
sub
mov
add
pushf
scas
enter
jmp
pop
push
jge
aam
push
sbbl
push
pop
and
sub
mov
push
lret
cmp
sub
std
cmp
xor
outsb
sub
shrb
adc
inc
ret
or
pop
cmp
pop
dec
addr16
sbb
dec
scas
jo
les
cmp
out
adc
dec
mov
ljmp
divl
cli
scas
aas
jbe
popf
sub
cli
xor
daa
dec
inc
push
adc
ljmp
es
xchg
repz
jp
cmp
xor
mov
stc
icebp
into
jecxz
jg
jp
xchg
xchg
jnp
daa
mov
repz
std
xchg
cld
fsubr
xor
xor
cmp
addb
sbb
adc
mov
scas
and
mov
push
mov
popf
stos
pop
add
lret
xchg
xchg
ret
inc
xor
mov
push
mov
cmp
lret
stos
mov
cmp
mov
push
ret
pop
test
imull
negb
inc
lea
gs
popa
loope
iret
or
popf
pop
add
in
sahf
test
stc
sti
jb
xor
test
in
sbb
or
fldcw
mov
jne
mov
ffree
insb
or
aam
out
pop
and
rcrb
push
hlt
out
dec
imul
jb
lahf
fsincos
stos
sahf
push
cli
ficomps
ret
test
test
inc
mov
insl
cmp
xor
or
cmp
inc
aas
clc
test
stos
cmp
enter
xlat
lock
xor
push
dec
int3
adc
mov
xchg
repnz
scas
sub
add
inc
ficoml
fimuls
out
mov
dec
stc
add
cwtl
pop
pop
xor
mov
sahf
gs
arpl
xchg
add
sbb
loope
mov
mov
pusha
popa
jl
pop
das
dec
mov
mov
xor
push
ja
add
jle
mov
jo
test
ljmp
test
rorb
push
lahf
ds
jne
xor
je
cmp
popa
stos
cmp
xchg
pop
adc
bound
bound
test
repz
scas
shll
popf
or
aaa
pop
outsl
cld
pop
sti
shlb
fisttps
mov
scas
mov
pop
lods
call
test
mov
jle
in
and
ss
fldl
mov
and
jne
outsb
pop
and
push
mov
mov
sbb
adc
sub
jge
lods
aad
nop
jle
enter
scas
or
int3
and
push
ss
xchg
dec
xchg
pop
push
shll
sbb
sub
ret
or
mov
imull
push
dec
fisubl
push
dec
adc
call
mov
ficoml
fucomp
mov
jb
stc
leave
xchg
mov
pop
hlt
mov
mov
mov
sahf
movsl
call
add
inc
dec
cmc
lods
stos
ror
cmc
test
mov
inc
addr16
jo
push
inc
push
mov
jmp
cli
shrb
or
inc
push
jmp
xchg
loopne
push
ret
cmpb
jg
outsb
pop
pop
ret
xchg
xchg
and
lods
aad
adc
stos
test
lcall
addl
add
jno
mov
cmc
in
sahf
mov
and
cmp
lcall
loope
rorb
dec
xor
jae
movsl
rcrb
or
add
ror
femms
fwait
sbb
sub
jg
ljmp
xor
hlt
mov
adc
fbstp
das
movsl
push
ss
jge
imul
ficomps
and
outsb
mov
jbe
jae
repz
dec
imull
enter
cwtl
jo
shl
addl
push
out
std
rcrb
mov
push
dec
in
pushf
sarb
test
xchg
pop
xchg
out
dec
fistl
js
push
jecxz
mov
ret
js
add
shl
mov
or
in
mov
fisttps
xor
adcb
and
xchg
mov
xor
jl
pop
je
add
fcmovbe
add
mov
mov
bound
dec
inc
stc
and
cwtl
xchg
lcall
les
out
mov
mov
sub
jb
aad
adc
and
mov
or
add
jp
xchg
test
leave
aaa
pop
sbb
ljmp
in
mov
adc
sub
xchg
into
adc
push
cmp
inc
sbb
rcrb
inc
imul
pop
pop
fs
cli
cld
push
cmp
sub
fnstsw
pop
push
cs
pusha
outsb
or
push
ss
sbb
popa
fisttpll
int
stc
xchg
clc
sub
and
xorl
std
pushf
xor
gs
inc
lcall
jl
dec
movsb
ffreep
lea
sahf
xchg
mov
jae
add
mov
in
sarl
pop
add
mov
xchg
jnp
lock
dec
add
cmpsl
arpl
adc
jnp
jno
sbb
shlb
fs
pop
in
mov
pop
pop
or
xchg
jbe
dec
je
cmp
or
das
test
add
jo
leave
and
sub
mov
xor
scas
call
test
inc
dec
sub
adc
mov
mov
lahf
push
imul
add
shrb
cmc
jmp
add
call
fsubs
ljmp
cmpb
pop
add
aad
popf
lahf
and
jb
lea
fcoms
in
inc
insb
enter
xor
inc
push
xchg
in
mov
sbb
xor
test
pop
cmpsl
cmc
mov
lea
add
ret
int3
mov
ds
movsl
mov
imul
adc
subb
rcll
mov
jmp
repz
stos
push
sbb
or
jnp
sub
jno
test
adc
outsb
out
pop
xor
ret
int
pusha
shrl
cs
aaa
pop
xor
or
push
adc
cmpsb
jae
pushf
fstps
jmp
push
pop
jbe,pn
inc
adc
mov
xchg
mov
adc
jae
cltd
xchg
add
dec
jae
mov
add
jae
out
sahf
into
fisttpl
mov
inc
ds
lahf
rorl
loopne
lcall
test
mov
scas
gs
pop
in
fstps
lret
xchg
cmpsb
add
scas
imul
jp
sub
ds
fnstenv
push
sub
pop
mov
and
jo
ret
adcb
or
outsl
enter
ja
and
lret
in
lock
loope
sbb
pop
and
jns
jo
andb
sbb
std
cmp
cmc
mov
inc
iret
outsb
xor
loope
faddl
cmpsb
lahf
lods
push
out
lret
inc
adc
sar
adc
cmp
push
ficoml
jbe
stos
fiaddl
cmp
aad
pop
cltd
sub
cmp
lods
je
xor
and
mov
pop
out
xlat
pop
adc
dec
dec
out
fiaddl
sub
jno
sbb
xor
push
pop
rol
inc
js
ret
xor
movsb
mov
call
push
xorl
ret
lcall
ds
add
mov
mov
clc
scas
push
xchg
sti
push
in
pop
ljmp
mov
out
sub
xorb
pop
xchg
and
mov
subb
popa
cmp
fldt
adc
xor
imul
fs
xchg
sub
adc
dec
cltd
rcrb
clc
bndstx
xchg
mov
or
loope
shr
hlt
rolb
add
test
and
jns
fs
xlat
sahf
jnp
je
lret
dec
ret
push
fwait
mov
lahf
fisubrs
fdivr
lret
dec
andb
inc
mov
cltd
out
cltd
inc
cmp
cmc
orl
pop
int3
push
mov
jo
xor
or
add
add
inc
cld
jae
and
popl
aas
int
dec
nop
int3
or
xor
mov
jb
xacquire
sub
incb
addr16
scas
push
xor
pop
jmp
push
je
outsb
push
pop
iret
dec
insl
cltd
mov
popf
aam
adc
les
jl
jmp
and
lods
ds
jg
push
sbb
fists
add
xor
out
shrb
mov
sbb
sub
std
add
je
in
jae
mov
jbe
cmpsl
jae
test
dec
sub
mov
insl
aam
add
iret
test
jg
sbb
dec
push
lcall
subb
cmc
mov
sahf
movsl
cmp
mov
lock
fildl
xor
fimull
sbb
js
mov
fdivrs
pusha
cwtl
sar
jl
jns
cmp
cmpsl
and
xor
xchg
xor
fs
in
movsb
xor
daa
push
insl
les
aaa
sbb
mov
stos
mov
jecxz
mov
adc
sub
push
int3
cmc
xor
rcrb
mov
and
fwait
test
rorl
mov
scas
lods
in
ljmp
clc
or
rcrl
inc
sub
mov
mov
xor
jge
xlat
pop
test
mov
mov
stc
out
popf
and
sahf
hlt
add
mov
jne
shr
sbb
dec
or
fsubr
ret
das
cmpsb
test
xchg
jl
add
xchg
in
pop
sbb
pop
mov
xchg
jno
inc
in
or
faddl
adc
add
sbb
fsubrp
shll
bnd
je
pop
repnz
lcall
jmp
cmp
shrb
sub
arpl
adc
inc
test
jnp
aas
lods
lock
mov
into
fldl
test
pop
and
xchg
mov
inc
ds
les
xchg
icebp
les
mov
leave
cmp
stc
push
jnp
and
and
daa
aaa
out
or
xor
rorl
dec
push
sub
mov
jne
or
inc
in
push
lahf
out
sahf
mov
xor
dec
pop
fldt
adc
aam
pop
adc
jg
mov
pop
cwtl
test
sbb
loopne
decb
mov
aas
gs
shrb
or
enter
sub
aad
in
aad
cmp
jnp
loop
mov
insl
sub
jne
shrl
sbbb
leave
or
out
push
js
loopne
arpl
ret
adcl
mov
dec
test
sub
fsts
cwtl
inc
xchg
mov
aaa
cmp
rclb
pop
fmuls
sub
mov
add
cwtl
mov
loop
and
mov
push
inc
test
sti
xchg
insb
mov
fldenv
sti
sti
pop
bound
sbb
mov
shrl
rcrb
inc
pop
outsb
int
jecxz
adc
mov
xchg
ss
xor
or
mov
cmp
sbb
cmp
int
push
jbe
jbe
push
jecxz
mov
jle
imull
add
and
fnstenv
dec
in
xor
popa
pushf
sbb
test
inc
out
fwait
xchg
and
daa
mov
xchg
xor
sub
add
cmc
jnp
mov
out
js
negb
dec
pusha
sub
add
mov
adc
lea
cmp
int
outsl
sub
daa
inc
jo
add
jbe
punpckhbw
call
mov
int3
dec
dec
mov
mov
or
sbb
imul
cltd
mov
mov
mov
lods
fidivl
jle
add
jle
add
and
jmp
mov
inc
lock
jmp
add
xchg
bound
cmp
xchg
push
xchg
push
cmp
add
out
andb
adcb
fistpl
push
mov
repz
cltd
push
push
mov
fists
push
jbe
repz
lods
xchg
stos
push
shlb
ret
mov
jl
fprem
mov
cmp
pop
popl
mov
mov
pop
cmp
cs
sbb
jnp
cs
jmp
stc
test
jecxz
jl
sbb
test
leave
sbb
mov
push
mov
notl
loopne
jbe
loop
je
lcall
and
sbb
sbb
nop
or
aam
jne
sbb
std
mov
cmp
loop
and
lock
addr16
shll
mov
xchg
ret
jle
mov
jecxz
add
mov
push
incl
cmp
es
rcrl
repnz
adc
sarl
pop
idivl
cmpsb
enter
cmc
jo
push
pop
cmpsl
or
jle
loopne
scas
sub
movb
cltd
inc
subl
pop
sahf
arpl
gs
sarb
lcall
fdivrs
xor
dec
pop
or
and
mov
cltd
mov
xor
pop
push
lret
dec
das
inc
sahf
jl
mov
addb
in
sub
hlt
jbe
jle
lock
aaa
lcall
pop
push
xchg
add
subb
or
fdivs
jae
sub
cltd
push
adc
test
lds
js
scas
sub
scas
xor
jo
inc
lock
nop
xchg
xlat
jne
push
add
dec
ja
cs
movsl
mov
jns
or
rcrb
fsts
push
jecxz
cmp
pop
jne
cmp
push
mov
xchg
inc
cmp
jne
daa
out
fs
mov
pop
jp
das
enter
adc
jnp
inc
les
sub
jae
pop
xchg
mov
fidivrs
jmp
push
push
or
lods
mov
mov
sub
dec
cltd
xor
xor
cmp
add
test
push
jb
jp,pt
movsb
cli
ret
cmpsl
scas
mov
push
cmp
mov
mov
pop
push
ja
jmp
sub
stos
sbb
mov
mov
cmp
mov
fwait
add
pop
idivb
enter
lds
sbb
stos
mov
arpl
daa
push
sahf
in
lods
sbb
mov
sbb
push
and
push
daa
cmp
push
popf
divb
mov
dec
xlat
jecxz
stc
test
mov
dec
ja
sbb
xchg
lret
in
popf
rolb
shrb
repz
int
mov
dec
int
or
lea
decb
rcrb
loopne
in
pop
jge
clc
add
or
sbb
or
sub
fisubrs
push
xor
push
mov
fsubl
mov
loopne
in
testb
stos
sbb
sub
xorb
pop
push
cwtl
xlat
mov
fmul
dec
dec
je
xchg
xor
sarl
add
scas
hlt
dec
xrelease
adc
jl
sbb
enter
leave
mov
pop
imul
imul
mov
or
cld
ret
cmp
xor
mov
mov
popf
mov
mov
mov
xor
jne
popf
dec
push
pop
icebp
ror
push
dec
test
push
lcall
les
mov
push
cli
les
inc
popf
in
sbb
sub
sbb
inc
loope
mov
out
lea
in
movlps
pop
lret
sar
or
mov
push
xor
lcall
out
xor
mov
push
xchg
jbe
add
ds
inc
ds
jb
test
movsl
ljmp
dec
std
xor
rcl
dec
jns
push
jge
push
cmp
push
stos
jno
jo
push
xchg
insb
stos
dec
mov
or
mov
clc
std
inc
add
cmpl
adc
daa
aam
lock
dec
ss
jnp
mov
in
int
and
pop
and
xor
clc
stc
adc
dec
lret
aas
xor
xchg
pop
xor
xor
fsubs
mov
insb
test
pushf
dec
int3
gs
push
cmc
inc
in
cmp
xor
mov
rcll
sub
xchg
xchg
cltd
subb
push
sbb
mov
fcmove
mov
or
xor
notl
jp
aaa
cwtl
lcall
andb
cmp
imul
or
xchg
jl
jae
sub
mov
push
test
enter
leave
jle
xchg
ret
push
xchg
push
je
rolb
clc
inc
lar
add
sub
fs
inc
cld
insl
in
xchg
adc
xorl
pop
mov
neg
enter
or
or
imul
inc
cmp
and
pop
in
add
xchg
in
sub
mov
push
jnp
mov
lods
cltd
and
sbbl
push
mull
mov
rcrb
testb
inc
ljmp
xchg
or
cli
pop
or
jnp
adc
iret
and
xor
mov
mov
sub
add
jne
lods
fisubrs
loopne
cmc
push
loope
lcall
test
aaa
cmpsb
scas
lcall
pop
popf
xor
cmpsb
inc
test
icebp
jg
mov
arpl
pushf
jo
mov
mov
push
jnp
f2xm1
jg
xchg
mov
pop
sbb
adc
mov
push
dec
push
mov
insb
and
jnp
mov
scas
sahf
mov
lret
xchg
and
fwait
xlat
pushf
out
cmp
cltd
aad
enter
xor
pop
jb
xor
fnsave
xor
in
push
in
sub
mov
mov
or
mov
aam
pop
cmp
mov
pushf
ret
cmp
pop
inc
add
les
pminub
ss
les
pop
enter
xorb
in
xchg
dec
pop
fisubs
pushf
nop
aad
adc
daa
xchg
jno
pushf
bound
cltd
mov
lcall
xor
inc
arpl
ljmp
inc
and
jmp
push
popl
stos
inc
mov
sti
mov
dec
xchg
sbb
mov
jl
pushf
adc
jb
fdivs
stc
scas
push
hlt
sahf
mov
adc
push
scas
int
stos
jne
outsl
jae
or
sub
repnz
pop
xchg
bsf
or
idivb
stos
xchg
movsb
orb
pop
dec
es
or
test
in
xor
xlat
xchg
or
jno
adc
fld
cmpsl
mov
ds
xlat
and
mov
sub
loop
mov
subb
aas
or
frstor
push
and
fmull
in
loopne
repz
aaa
push
jbe
adc
mov
pop
in
pop
cmc
mov
push
and
loope
and
jne
movsb
orb
mov
inc
mov
clc
scas
outsl
hlt
clc
jbe
leave
nop
sub
adc
loop
jns
jle
rcrl
shlb
mov
out
push
and
or
rorb
ja
mov
adc
dec
inc
push
or
pop
aas
sbb
dec
push
dec
fdivrs
pop
ss
pop
jbe
enter
push
mov
addl
imul
xchg
push
cmc
xor
jl
in
mov
stos
ficomps
push
xchg
fldlg2
adc
push
dec
aad
xor
pop
insl
out
and
imul
fs
loope
and
adc
jge
adc
mov
clc
mov
aam
and
adc
xchg
or
cmp
cmp
icebp
pop
ds
enter
test
dec
mov
pushf
int
shrl
jnp
lret
jg
adc
test
call
jmp
fildl
ja
and
cld
or
sub
testl
xchg
jle
sbb
xchg
cmp
jl
pop
out
adc
mov
xchg
push
test
mov
ror
outsb
add
jl
lcall
lret
cmpsb
push
sbb
cli
test
js
dec
pop
orl
das
or
flds
not
jae
cltd
inc
push
dec
pop
jmp
bound
or
dec
mov
loopne
pop
lret
popf
loopne
call
jle
jge
out
popf
test
lods
push
orl
xchg
push
pop
jo
loop
stos
ret
xchg
lods
push
add
adc
dec
in
and
jo
cmpsb
mov
pusha
push
sarb
test
ret
inc
pop
push
and
lahf
push
xor
in
pop
test
cmpl
cmp
pop
pop
fadds
ds
out
dec
add
cltd
mov
mov
addl
mov
mov
in
mov
dec
sub
in
dec
pop
movsl
pop
jns
mov
jnp
push
popa
call
cmp
ljmp
push
leave
outsl
je
out
int3
pop
pop
pop
sbb
push
mov
and
cmpsl
loopne
fldl
outsb
je
mov
fsubr
inc
repz
sti
cmc
adc
fs
dec
hlt
lock
sub
mov
cld
js
sbb
jge
lods
fsubr
add
int
or
pop
sbb
and
lret
xor
shl
inc
sti
gs
lret
outsl
divl
push
add
clc
lea
push
repz
pop
sbbb
add
lea
xchg
shll
frstor
loop
fidivs
xchg
sbb
or
out
xor
outsl
sbb
nop
and
repz
ja
lock
sbb
scas
mov
sub
jp
cmp
and
imul
pusha
dec
aas
inc
gs
dec
jb
add
test
jno
mov
xor
fistps
in
sbb
push
jge
cmc
mov
xchg
pop
mov
adc
jae
fisttps
out
push
adc
hlt
js
cmp
pusha
cmp
xchg
or
and
test
dec
xor
adc
pop
dec
loope
lret
inc
and
ds
mov
mov
sub
aaa
mov
push
mov
mov
out
mov
xor
xor
jb
cmp
mov
mov
or
xchg
lahf
fdivs
in
test
lret
nop
testb
idivb
push
movsl
push
addr16
push
in
ljmp
pushf
push
int3
jnp
jne
int3
inc
dec
dec
push
pop
and
data16
sbb
ret
dec
out
push
or
inc
mov
dec
in
repnz
arpl
dec
inc
adc
loope
fldl
jecxz
push
sub
add
dec
sbb
cmpsb
inc
add
mov
and
mov
pop
push
shrb
aas
jnp
cmpsl
adc
ficoms
mov
loopne
cmc
adc
rol
add
and
mov
stos
test
aaa
cltd
nop
jmp
iret
in
adc
jge
cmpsl
outsl
adc
and
xchg
mov
jmp
jl
cmp
scas
xor
cmp
add
pop
clc
xchg
fcompl
cltd
pop
mov
mov
nop
movsb
sub
xor
dec
adc
sub
push
xor
hlt
mov
pushf
into
add
loope
test
inc
dec
cmp
xchg
imul
loope
pop
movsl
sub
jl
jp
mov
sbb
cltd
dec
and
je
adc
sub
bound
xor
xchg
mov
jns
subb
sub
sbb
sbb
dec
shlb
fidivrl
in
sbb
xchg
xchg
cmp
xor
dec
popa
mov
movsb
hlt
mov
sahf
mov
jle
and
mov
ffreep
pop
and
inc
xor
xchg
or
mov
addl
jns
mov
jbe
enter
std
sub
adc
jns
mov
push
test
pop
push
add
bswap
lods
adc
push
loopne
je
ljmp
mov
int3
std
mov
icebp
cld
sub
mov
test
xchg
ret
mov
cltd
jle
enter
dec
fldl2e
testb
rclb
insl
sbb
xchg
lcall
inc
inc
mov
mov
adc
add
inc
cs
inc
mov
imul
adc
fwait
decb
mov
sbb
rcll
sub
sbb
lods
and
in
aam
std
cmp
mov
jecxz
pop
rorb
xchg
cmp
pop
addl
fwait
insl
or
int3
jmp
pop
inc
cmc
and
les
call
sub
fisubs
adc
call
jl
movsl
xchg
mov
dec
xchg
lcall
roll
lock
mov
cwtl
jp
inc
mov
cmp
mov
jne
mov
cmc
das
ret
lock
data16
mov
aas
std
mov
pop
idivl
adc
mov
in
xor
ljmp
lea
add
shl
fisubs
xor
jle
into
xchg
jbe
and
imul
scas
into
cmpsb
cmp
int3
movsl
push
add
aaa
icebp
push
lea
push
jbe
out
push
je
test
ret
outsb
jno
jb
lods
lods
jmp
lods
mov
aas
ds
popfw
mov
push
hlt
lcall
xchg
xor
dec
fwait
mov
outsl
jmp
sub
push
and
sbb
dec
add
enter
sbb
bound
pop
xchg
xchg
adc
popf
lahf
ret
icebp
and
shlb
scas
lods
or
loopne
in
clc
clc
or
mov
sub
xchg
and
cmpsb
sub
fsubp
jns
sbb
ret
inc
insb
sbb
mov
push
jo
les
push
int
faddl
sub
mov
push
dec
test
sub
and
sahf
enter
rcrl
add
sub
jmp
fstps
scas
mov
js
mov
jne
iret
lret
xor
out
jge
dec
call
mov
inc
daa
lods
mov
outsb
xchg
loopne
fldenv
cmp
gs
fs
mov
mov
cmp
push
fsts
stc
scas
xor
out
and
inc
jecxz
mov
mov
add
insb
inc
insl
cmpsb
xchg
cmp
fldenv
cmp
pushf
insl
sahf
lret
cmc
mov
enter
mov
fldcw
jne
xor
jmp
iret
out
adc
sub
sbb
daa
jns
movsl
int
mov
mov
jb
stc
scas
bound
mov
fdivrs
ljmp
xorb
outsb
rclb
jmp
ss
mov
push
pop
xor
mov
fildl
fs
ljmp
xchg
or
dec
or
je
and
push
lods
xor
iret
xchg
sete
mov
and
clc
sbb
add
data16
sbb
adc
mov
subl
cmpsl
outsl
daa
jno
in
shrl
xchg
add
fnstenv
hlt
xor
clc
jmp
test
mov
lods
aas
push
mov
mov
cmp
fsubp
pop
push
mov
ss
adc
xor
xor
cmpsb
dec
mov
repnz
xor
cmpsb
cli
mov
adc
sub
sbb
nop
push
cmp
test
and
adc
imul
xchg
cmp
or
mov
inc
pop
fidivrs
outsl
es
ret
cltd
push
pop
mov
fistps
mov
lock
scas
call
sub
mov
jmp
xorb
jmp
pop
or
cmp
cwtl
les
sub
pop
sub
dec
push
sbb
mov
jo
sbb
hlt
scas
add
aaa
mov
hlt
inc
rcrl
hlt
popa
jecxz
dec
popa
lret
jno
or
inc
mov
int
and
dec
or
inc
scas
imul
push
xlat
mov
mov
insb
stos
lahf
pop
add
pop
mov
dec
imul
adc
dec
adc
xor
mov
cmp
or
nop
or
pop
repnz
and
xchg
mov
push
mov
rcrl
in
jge
cmc
pop
mov
cltd
push
xchg
pop
jp
sahf
mov
sar
xchg
aaa
xor
pop
cmp
xor
sbb
sbb
lea
inc
int3
xor
adc
pop
clc
lret
adc
or
jg
xchg
adc
and
add
in
add
pop
hlt
and
jo
jl
das
enter
gs
leave
enter
minps
mov
and
xchg
in
pop
xor
lea
mov
xchg
pop
lods
mov
popf
inc
mov
mov
push
inc
jns
out
lcall
mov
add
adc
mov
jl
pushf
mov
insb
insl
andb
pop
setno
and
jge
dec
cmc
jg
roll
sub
xchg
add
cmp
imul
jle
movsb
shl
mov
repnz
outsb
je
fsubl
push
mov
fs
bound
add
adc
pop
push
stc
lret
dec
add
pop
pop
sahf
pop
jno
cmc
mov
gs
or
jbe
xchg
call
lret
js
jmp
mov
mov
push
outsb
xchg
jecxz
push
test
cmp
mov
das
fs
ret
mov
adc
and
mov
push
loop
sbb
test
sub
push
aam
push
test
les
xchg
aad
mov
xchg
gs
sub
cwtl
jno
stos
pop
rcr
aas
fsub
mov
decl
xchg
mov
std
jnp
std
in
pop
clc
jecxz
push
or
lcall
jp
or
and
hlt
sarb
xor
jo
sbb
mov
int3
ret
adc
or
test
js
jg
mov
test
cmp
lret
pop
or
xchg
dec
lcall
incl
and
sarb
adc
add
jecxz
int
movsl
and
and
leave
cmp
pop
pop
sub
adcl
mov
or
push
repnz
mov
ret
jecxz
push
jae
pop
dec
lahf
adc
sub
sbb
xor
das
push
repz
int
xor
test
sbb
cli
sbb
pop
xchg
push
int3
jge
int3
js
out
das
mov
jae
pop
fyl2x
mov
imul
push
aaa
sub
inc
mov
data16
and
popa
push
add
adc
inc
lds
add
lret
in
and
xchg
sbb
or
pop
cmp
testl
jbe
ljmp
push
xchg
push
adc
stc
pop
out
jl
pop
xor
mov
or
stos
xlat
dec
in
dec
or
ss
or
in
mov
cmpsb
add
jl
add
incb
incb
cmp
xchg
dec
cmp
in
push
sub
add
mov
xchg
inc
xchg
icebp
push
xchg
rorl
jp
adc
daa
in
inc
subl
loop
and
bound
pop
popf
mov
jmp
lock
jge,pt
insb
pop
or
mov
shl
and
dec
mov
cmp
test
mov
rcrl
sbb
jmp
pop
xlat
roll
insb
fs
mov
cmc
pop
cs
dec
loop
scas
fstpl
inc
sahf
or
xchg
and
lea
and
roll
je
push
adc
enter
shr
xchg
lods
add
ffree
jmp
cmp
lds
mov
push
inc
sbb
push
and
push
aas
push
push
loopne
push
movsl
jp
fmulp
cmc
test
xor
xchg
dec
bound
fs
push
fwait
mov
mov
jge
sub
xchg
mul
xlat
jmp
push
pop
lret
mov
imul
dec
mov
in
push
jp,pn
insb
dec
jg
fdivrs
sbb
xor
xchg
movsb
loop
jge
add
pop
mov
std
cld
loop
push
lds
repnz
jecxz
loop
hlt
push
fs
cld
jp
xchg
sub
or
jns
jnp
and
mov
mov
xchg
mov
pop
or
insl
jle
push
jmp
cmpsl
das
fisttpll
or
jbe
jle
inc
lret
xor
test
pop
or
cwtl
or
xchg
dec
sbb
sub
jb
push
es
in
mov
mov
into
leave
push
cmp
mov
out
adc
mov
pop
out
inc
dec
add
xor
testb
jg
xorb
cmp
shlb
add
iret
xchg
push
popf
dec
mov
aam
cmpsl
mov
xchg
mov
push
mov
or
unpckhps
pop
jle
and
lret
xchg
lret
xor
fxam
jle
das
jl
insl
sbb
cmp
shll
cwtl
jmp
mov
mov
fcomps
inc
lea
in
adc
iret
sti
sub
mov
sbb
sti
push
cmpl
mov
push
scas
rcl
outsl
lcall
aad
dec
test
cmp
popf
in
cmp
xor
movsb
push
push
add
and
push
inc
pop
fsubr
jnp
or
mov
es
ds
push
pop
and
ljmp
imul
or
mov
imul
shlb
xor
cmpsl
mov
add
inc
push
lcall
add
or
incb
dec
mov
mov
fwait
and
mov
dec
arpl
movb
test
popl
jle
daa
mov
sbb
seto
push
pop
sub
inc
int3
jg
fcmovb
sub
les
arpl
xor
xchg
sbb
xchg
sub
and
pop
or
sahf
push
mov
lret
arpl
mov
hlt
mov
imul
pop
adcl
pop
adc
pop
mov
dec
ret
loopne
inc
sbb
sub
rcrl
mov
add
and
pop
mov
inc
enter
ret
xor
xor
inc
mov
in
aaa
push
sbb
dec
inc
fs
in
pop
sahf
fnstsw
inc
jecxz
pop
sahf
xchg
cmpsb
cmp
push
sti
xchg
xchg
add
jmp
add
mov
push
stc
das
iret
arpl
cmp
out
mov
frstor
lea
arpl
stos
adcb
daa
lods
push
xchg
cld
xorb
mov
inc
cmp
sbb
dec
stc
gs
sbb
dec
in
or
das
xorl
gs
push
or
mov
pop
xor
hlt
in
outsl
std
bound
adc
fdecstp
pop
popa
dec
repnz
clc
add
or
test
out
std
iret
mov
add
xchg
jmp
insl
enter
das
inc
mov
sahf
fdivl
out
les
push
xchg
add
out
sahf
mov
fdivrl
pop
fwait
push
xor
je
push
in
dec
xor
divb
cmpsl
sub
xor
push
dec
sub
jae
push
loopne
scas
ds
adc
fcomi
xor
fnstcw
jecxz
inc
std
push
nop
test
add
mov
cltd
test
mov
sub
pop
ljmp
xchg
ljmp
sub
xor
int
movsb
add
mov
pushf
rcl
xor
jb
xchg
cmp
cmp
sbb
ret
sub
gs
sub
mov
cwtl
das
out
mov
or
fs
ds
cli
lret
or
xchg
jo,pn
jecxz
and
jge
push
jnp
jl
fnsave
in
sub
xor
jae
cmp
call
mov
test
pop
mov
ljmp
xor
es
and
aad
scas
dec
je
lods
mov
cmpsb
mov
dec
xchg
repz
in
xchg
clc
xchg
xchg
cmp
outsl
stc
fwait
arpl
imull
xchg
in
insb
cmp
pop
pop
push
dec
push
xor
add
mov
sub
sahf
pop
cmp
cmpsb
adc
fists
setl
fcoms
sub
mov
iret
xchg
sbb
jecxz
inc
int3
mov
jl
mov
cs
leave
inc
aam
add
or
mov
mov
fidivs
imul
add
mov
dec
jbe
push
mov
pop
fcmovnbe
add
subb
xchg
out
pushf
sbb
mul
push
test
addb
shlb
stos
fs
jb
cwtl
or
push
push
outsl
repz
xlat
incl
adc
pop
add
leave
lcall
imul
clc
aad
lods
scas
fisttpl
pop
push
fwait
pop
jl
or
icebp
lds
or
or
push
add
inc
xor
fists
out
jle
scas
add
push
cmpsb
jbe
subl
xchg
or
add
mov
fwait
ret
fimuls
xor
push
xchg
stos
mov
rolb
js
mov
jns
rcrb
jne
or
repnz
xor
add
insb
pushf
pop
dec
jmp
jne
push
pop
aaa
pop
pop
mov
mov
ret
pop
jge
sbb
jo
ret
popa
leave
or
sbb
lods
cmpsl
inc
icebp
imull
fadd
addr16
leave
mov
daa
adc
xchg
and
cli
jmp
cltd
ds
or
cmp
xchg
dec
rolb
test
dec
xchg
mov
or
or
addr16
int
sbb
add
loop
push
scas
ds
sbb
xchg
and
call
nop
pop
ret
sub
rorl
out
pop
push
lods
or
pop
loope
icebp
in
fs
or
lcall
sub
lcall
adc
add
mov
add
mov
jl
arpl
mov
and
add
adc
mov
fistpl
mov
sbb
xor
push
cmp
xchg
test
jg
out
dec
cmp
jmp
pop
cmp
pop
lret
test
xchg
and
into
jne
hlt
ret
pop
mov
repz
arpl
xor
ror
cmp
sub
push
fwait
in
push
push
repz
inc
scas
push
pop
scas
sub
and
inc
cmp
mov
pop
xchg
es
ret
xor
mov
xor
clc
ret
dec
push
jns
add
inc
test
sbbb
sub
stos
lahf
addr16
mov
test
lret
movsb
subl
mov
mov
rcll
inc
or
or
andl
inc
call
enter
mov
dec
xchg
cmc
jle
mov
ret
fmull
fwait
sbb
lock
or
jns
xchg
push
dec
push
pop
mov
add
sub
pop
cmpsb
or
sub
ret
adc
sub
and
mov
ljmp
int
jle
movsl
shlb
add
pop
mov
scas
rorb
cmp
outsb
in
shll
dec
jl
mov
pop
add
mov
lcall
lods
jnp
repnz
rcll
mov
lret
test
cmc
dec
movsl
test
fndisi(8087
rcl
movsl
fisubl
inc
stos
adc
add
xor
push
in
or
jge
movsl
les
sbb
das
inc
push
jmp
idivb
dec
or
xlat
mov
add
or
cmpsl
push
stos
test
sub
mov
mov
mov
ljmp
dec
add
in
and
test
adc
push
lret
dec
xchg
jnp
clc
push
jle
push
xchg
fsubl
icebp
pop
push
pop
hlt
xor
in
daa
and
test
or
lds
out
pop
ljmp
cltd
jnp
loop
xchg
test
cmp
dec
xor
gs
mov
mov
inc
gs
jo
jp
hlt
jmp
scas
arpl
fwait
lret
or
out
test
inc
mov
mov
inc
mov
mov
and
inc
filds
cmc
icebp
popa
mov
das
sti
jnp
cld
stc
adc
clc
or
pop
inc
test
dec
push
movsl
iret
clc
mov
mov
xchg
jnp
or
fldenv
aas
inc
lea
gs
data16
mov
insl
and
jecxz
fimuls
rorl
aaa
lods
xlat
sbb
in
imul
pushf
clc
pop
stc
sub
test
sbb
aas
or
jne
outsl
pop
lods
push
lahf
xor
adcb
fs
das
cmp
lea
movb
test
xchg
out
ret
lods
addr16
sbb
push
mov
leave
clc
adc
fstpl
pop
sub
mov
ficomps
test
dec
leave
adc
pop
fcmovnbe
pop
mov
push
dec
mov
loop
test
fcmovne
jp
arpl
inc
test
push
in
push
jae
pop
lock
mov
rcl
inc
cmpb
clc
push
xchg
fistps
mov
xor
out
imul
add
aam
scas
xchg
xchg
lret
lods
and
mov
mov
pop
mov
adc
cld
push
fcoms
push
jecxz
sarb
popf
in
mov
je
imul
xor
pop
add
jbe
adc
fisubl
ficoml
bound
jno
and
fldt
inc
push
out
push
inc
xor
out
xlat
mov
dec
clc
xchg
xchg
movsb
mov
jecxz
pop
push
and
shlb
dec
cmp
cmc
ljmp
xor
repnz
xchg
mov
pop
xchg
adc
or
push
andl
aas
adc
ljmp
nop
sbb
lea
mov
and
subb
mov
jns
sub
jecxz
or
cmc
arpl
and
js
sbb
inc
enterw
test
and
gs
cld
scas
lret
stos
xor
push
mov
movsl
loopne
data16
mov
hlt
int3
aas
cli
mov
in
sbb
jo
insb
ja
and
inc
mov
int3
and
call
sarb
loopne
xchg
lods
inc
insl
lret
pop
jecxz
xor
inc
lret
adc
fst
jmp
mov
mov
movsb
cmpsb
and
fistpll
cmp
and
mov
add
and
jb
imul
inc
and
or
sub
xchg
les
dec
jmp
aad
sub
and
ss
fistpl
mov
mov
outsl
push
push
mov
fldt
fnstsw
cmp
ret
imul
pop
and
nop
cmp
pop
mov
fstl
adc
adc
cmp
test
lds
xor
xchg
push
int3
push
rcll
addr16
mov
fadds
imul
push
xlat
fisubs
pop
xlat
pop
jp
daa
adc
movb
outsl
jecxz
dec
push
xor
cmpsb
pop
int
jl
stc
outsb
ja
cmpsb
add
dec
lcall
mov
out
and
scas
mov
in
popa
pop
xor
jle
cld
sbb
jmp
js
outsb
sbb
lret
dec
xchg
enter
push
shrb
pop
sbb
or
in
int
cmp
pop
imul
es
sbb
in
jno
xor
sbb
xchg
push
movsl
aaa
pop
cmpsl
jecxz
fistl
lock
test
sar
test
mov
scas
cltd
dec
jle
sahf
repnz
push
daa
insb
dec
mov
add
pop
push
cmp
icebp
repz
stos
mov
sub
fstpl
loopne
cltd
cmp
adc
cmp
push
adc
out
daa
pop
jne
shrl
mov
jmp
iret
iret
mov
sbb
nopl
sahf
adc
inc
jbe
out
inc
into
ret
sub
xor
pushf
lods
fnstsw
adc
outsl
mov
pop
mov
jg
push
sti
mov
mov
or
pop
push
lds
test
mov
and
add
dec
sub
movsb
iret
or
pop
mov
lea
sub
lea
sub
call
imul
ja
sub
imul
sbb
xchg
movl
ret
xchg
mov
or
mov
mov
mov
pop
mov
adc
pop
push
scas
adc
dec
testl
lahf
mov
int3
cmp
shl
cld
loope
in
bound
adc
lds
in
test
adc
data16
inc
jp
pop
stos
shlb
mov
into
xor
xor
lahf
cmp
cmp
add
ss
cwtl
xor
mov
faddl
icebp
cmp
aas
and
popf
jne
rorb
push
data16
adc
dec
pop
mov
dec
pop
ja
adc
inc
stos
inc
faddl
les
es
pop
xchg
mov
mov
jns
icebp
iret
ficomps
mov
mov
fsubr
push
rcll
movsl
xorl
xchg
dec
stos
adc
cwtl
stc
out
xchg
insl
mov
ret
sar
mov
in
sub
outsl
adc
mov
data16
aad
stos
fisubl
mov
push
jle
and
push
repnz
cmpsl
mov
mov
push
cmpb
push
stos
mov
in
jg
pop
jmp
pop
sarb
mov
fisttps
xor
insb
fs
stc
sahf
cmp
scas
pop
lock
out
sbb
jge
pushf
pop
jecxz
mov
loopne
add
add
enter
xchg
jbe
test
shlb
lock
lret
push
push
adc
out
and
add
mulw
push
xchg
xchg
int
adc
jp
bound
pop
sub
xor
sbb
idivb
ret
cli
lods
cmpsb
mov
std
shl
or
cltd
push
cmp
iret
cmpsb
and
push
je
ja
fbstp
add
int3
in
std
cmp
add
dec
mov
outsl
aas
add
and
mov
cmp
xchg
pop
out
out
pop
sbb
mov
scas
fldl
xor
mov
push
movsb
add
xor
mov
or
ret
xchg
sarl
dec
mov
sbbl
push
cmpsl
out
push
daa
push
push
test
cmc
push
lods
adc
movsb
jo
sbb
pop
lret
mov
xchg
loope
mov
xchg
xchg
sbb
push
daa
and
loop
jo
lods
ret
lret
mov
mov
in
dec
imul
xchg
adc
aam
jg
dec
sbbb
dec
movsb
inc
out
xchg
insl
mov
xchg
mov
daa
pop
xor
sti
cmpsl
outsb
add
cli
test
and
in
stos
adc
dec
lods
fs
adc
mov
mov
pop
and
es
jno
ja
jge
fwait
xor
jbe
rol
ss
repnz
pop
fs
fidivl
xchg
icebp
cli
inc
push
lods
clc
sbbb
inc
fnstcw
out
lea
add
popf
adc
inc
adc
mov
incb
mov
movsl
ds
add
stc
mov
push
inc
adc
aaa
mov
sbb
dec
adc
arpl
dec
icebp
mov
and
imul
push
mov
jbe
xchg
imul
lcall
loopne
xchg
dec
pusha
dec
or
movsb
mov
ret
fcompl
fists
stos
ljmp
jnp
test
sub
and
fldcw
addr16
mov
lods
test
stos
hlt
cmp
pop
cmpsb
repz
loope
enter
imul
les
imul
dec
push
ret
inc
push
and
adc
outsb
dec
mov
xchg
or
cmp
std
stc
mov
pop
push
mov
mov
sbb
pop
push
in
push
pop
stc
inc
xor
cmpb
scas
and
outsb
xchg
push
hlt
sbb
mov
les
stos
cmpsl
or
mov
lret
repnz
cmp
movl
shlb
xchg
push
and
je
mov
mov
jmp
stos
stos
out
and
sbb
pusha
xor
xor
or
jno
dec
lods
pop
in
add
bound
insb
jnp
pop
mov
data16
test
xchg
xchg
jge
xchg
stos
push
push
sti
xchg
imul
insb
insl
add
and
aaa
std
push
pop
out
sub
notl
adc
or
cli
ja
mov
xchg
add
pop
jl
cld
sbb
add
jge
call
mov
push
cld
inc
pop
cpuid
jo
xchg
data16
and
pop
inc
fdivr
xor
imul
stc
out
and
jb
rcll
mov
sub
sub
mov
cwtl
jge
xlat
out
mov
daa
mov
sbb
xor
in
jo
or
xchg
xchg
sbb
arpl
fwait
pusha
adc
scas
pop
pop
mov
mov
roll
dec
in
xchg
xchg
and
lods
adc
push
das
sub
pop
jb
out
inc
sbb
fsts
pop
jne
clc
dec
movsb
lret
mov
inc
jecxz
cmc
mov
or
mov
stos
lret
inc
in
jno
pusha
mov
out
and
push
dec
sub
movsl
mov
cld
inc
pop
bound
test
int
loopne
cld
cmp
inc
adc
leave
pop
push
and
jne
sub
scas
jmp
sub
enter
jmp
jecxz
es
pop
ficomps
cmc
fsts
out
push
dec
call
dec
sbb
jge
cmpsl
jne
mov
mov
jmp
aad
movsb
or
cwtl
push
in
cwtl
sub
jle
repnz
test
and
insl
cmpsb
xor
jae
les
sub
ja
or
mov
addl
sub
sub
lock
sub
ss
loope
cmpsl
adc
mov
push
ret
adc
mov
iret
jge
pop
lea
fsubs
and
adc
mov
stc
adc
testb
nop
jge
mov
inc
push
in
adc
mov
ds
fiaddl
mov
lea
test
pop
mov
das
mov
repz
rclb
mov
jb
cmpsb
sbb
mov
jae
dec
fdivs
xor
rolb
call
shlb
mov
sbb
add
loopne
adc
jl
xor
lds
fwait
and
sbb
out
jb
jnp
mov
xchg
dec
add
pop
mov
rcrb
mov
sbb
ds
mov
pop
add
mov
test
or
push
push
push
adc
aad
add
inc
adc
or
or
repnz
jnp
sub
mov
cmc
popf
in
stc
jl
dec
imul
dec
or
mov
fstl
sbb
push
xchg
in
mov
call
ja
addr16
xor
ss
cmpsb
stc
je
enter
shrb
jnp
rcl
push
adc
sbb
inc
dec
adc
or
cmp
out
js
push
shrb
dec
icebp
and
outsl
push
sbb
mov
int3
test
mov
dec
mov
mov
push
imul
push
sti
jns
fbstp
mov
pop
or
or
iret
outsb
std
call
enter
cmp
shl
xor
stos
cmp
or
cltd
mov
shrb
inc
pop
adc
popf
les
sub
pmuludq
cs
dec
pop
add
push
out
push
ror
lock
push
xor
cld
mov
out
xchg
cmp
xor
push
test
pop
xlat
xchg
jae
addr16
sti
cmp
mov
stos
sbb
fisttpl
adc
dec
push
mov
mov
dec
je
dec
mov
mov
outsb
repnz
out
cmp
add
push
fidivrl
pusha
shlb
sahf
inc
inc
pusha
add
jg
add
fwait
sarl
xchg
stos
pop
and
loop
fnstenv
mov
divb
mov
jae
test
and
fdivrp
out
dec
daa
push
les
hlt
hlt
sbb
mov
dec
call
lds
sbb
jb
ss
out
cmc
bound
mov
adc
in
jp
mov
mov
xchg
cld
push
dec
cmp
jae
fs
daa
test
mov
fnstenv
cmp
xor
pop
pop
or
xchg
inc
mov
ss
icebp
mov
add
cmpb
dec
adc
sbb
fstl
cltd
cmp
mov
dec
ljmp
and
inc
pop
mov
or
or
cs
sub
dec
mov
lea
add
adc
jecxz
repz
jnp
jae
push
test
push
icebp
mov
addr16
outsl
pop
iret
push
xlat
inc
data16
subb
scas
int3
iret
leave
ret
loopne
int3
mov
mov
mov
jecxz
xchg
sub
nop
xchg
in
dec
sub
mov
sub
or
fldt
cmp
outsl
fs
sub
aad
sti
jle
jno
sub
mov
call
ljmp
adc
pop
jnp
pop
mov
or
mov
hlt
pop
lcall
int
les
inc
or
std
push
push
sub
loopne
dec
arpl
aam
inc
add
push
in
fidivrl
iret
je
or
pusha
scas
mov
push
pop
sbb
ja
inc
ds
aam
adc
adc
movsl
jbe
cwtl
add
dec
dec
rcr
mov
cmc
xchg
popf
icebp
mov
jo
in
mov
or
pushf
repz
push
lahf
xor
and
push
jle
cmpl
jo
stos
aad
out
std
or
loop
lcall
pop
mov
and
sahf
adc
push
int3
xor
mov
test
lds
out
push
mov
test
test
push
je
aaa
sbb
outsl
fsubrs
je
fisttps
ja
and
xlat
into
mov
dec
push
cmp
cli
push
movsl
shlb
aas
ja
mov
and
mov
bound
xchg
test
mov
rol
hlt
fsubr
cltd
mov
mov
sub
sahf
leave
push
jne
cwtl
sbb
loopne
xchg
add
xchg
jno
pop
and
es
dec
std
mov
cmp
jecxz
jns
xlat
xchg
jno
xor
cmpsl
mov
cmp
enter
mov
mov
adc
fsubrl
lock
dec
add
les
jl
movsl
and
fs
inc
fisttpl
icebp
lcall
and
mov
sub
mov
jge
mov
adcl
rclb
stos
pop
cmp
imul
xchg
enter
bound
popf
cmp
dec
mov
shlb
jmp
xchg
push
cmp
inc
mov
xor
mov
push
adc
xchg
cmpsl
dec
hlt
das
jbe
push
jge
test
or
push
sub
cld
cmp
or
xor
sarb
sti
stc
add
outsb
test
dec
inc
bound
push
xor
mov
jg
xchg
mov
lods
xchg
mov
lock
icebp
test
je
xchg
outsl
xor
cltd
sbb
mov
lods
cs
out
imul
push
test
ljmp
dec
xchg
mov
adc
fwait
sahf
fimull
add
add
xchg
loope
pop
out
insb
imul
xor
stos
or
xchg
and
andb
daa
insl
movsl
mov
fdivrs
pop
jo
mov
mov
dec
imull
mov
mov
pop
dec
ss
cld
enter
daa
fcomps
pop
cmp
mov
dec
sub
dec
fs
cmpsb
mov
jl
filds
insl
pop
cmp
test
cmc
out
sub
push
aad
add
xlat
fldenv
lret
movsb
push
pinsrw
sbb
add
pop
jb
inc
test
or
adc
push
xor
stos
fidivrl
lds
dec
clc
cmpsl
push
xor
or
dec
movsb
jno
push
adc
jmp
in
mov
pop
lea
lahf
add
pop
outsb
and
jle
popa
sub
shl
or
push
sub
xchg
inc
and
test
push
mov
sbb
sub
dec
pop
scas
daa
mov
add
pushf
add
inc
cld
cmp
jmp
xchg
mov
pop
mov
pop
push
or
imul
es
or
pop
mov
ficompl
push
xchg
jle
inc
je
lret
cmpsl
loop
lods
pop
lock
sbb
in
jbe
es
mull
pop
sub
sub
imul
sbb
push
xor
loopne
pop
add
mov
mov
lret
popf
pop
push
add
push
and
add
xor
and
inc
pop
mov
push
dec
in
lods
or
or
in
fstpl
sbb
in
clc
xor
push
xchg
adc
test
sbb
cmp
adc
loope
or
or
dec
xchg
xor
sbb
lock
fld
pop
stos
xor
inc
xchg
sbb
lods
rolb
push
mov
jb
out
iret
fsubrs
add
cmp
xor
dec
jmp
sub
sbb
push
in
add
push
xchg
inc
add
cli
into
jae
in
enter
and
outsl
stos
add
add
cmc
icebp
and
mov
dec
add
add
int3
fdivl
insb
rcrl
xor
push
sbb
xchg
jle
loope
push
loope
xchg
pop
shll
and
sahf
mov
mov
imul
fisttpll
nop
pop
iret
sarl
pop
gs
mov
push
jb
ret
mov
cld
push
das
adc
dec
or
in
adcb
in
or
xor
test
jg
ja
sub
push
xchg
int3
inc
add
lcall
push
hlt
ficoml
jl
adc
ljmp
lahf
mov
sub
mov
mov
add
cli
pop
dec
mov
sub
mov
xor
repz
inc
xor
sbb
push
push
iret
push
outsb
xor
mov
xchg
sub
aas
add
sub
cmp
cmp
aas
pop
sub
mov
mov
popf
loop
testl
scas
ljmp
stc
je
pop
test
xor
cmpsl
add
pop
das
nop
jmp
enter
mov
push
out
mov
stos
xchg
pop
pop
mov
pop
adc
outsl
pop
in
fimull
mov
push
or
movl
add
loope
pop
lret
sbb
xchg
mov
aaa
xchg
xchg
mov
or
mov
inc
inc
in
out
ljmp
fcoml
push
cmpsb
mov
out
dec
xchg
dec
xchg
adc
fadds
repnz
movsb
inc
icebp
adc
xor
xor
cli
mov
sti
mov
popf
ficomps
cli
inc
clc
popa
pusha
xor
in
cli
sbb
xlat
pop
dec
cmp
sbb
lcall
nop
xchg
xor
xchg
fwait
nop
pop
fs
jbe
ret
dec
icebp
jbe
adc
jns
in
pop
add
pop
sub
jne
jg
repz
into
iret
mov
add
rorl
cltd
dec
fistl
xor
push
ficoml
insb
call
cmp
addl
inc
gs
cmp
jmp
jns
ds
mov
mov
sbb
dec
pushl
and
out
mov
aaa
sbb
sub
mov
and
fisttpll
sub
or
cmpb
dec
and
inc
int
aas
and
std
adc
jb
out
outsb
test
fwait
add
cwtl
out
iret
pusha
dec
pop
arpl
pop
and
sbb
add
test
push
pushf
xchg
cvtdq2ps
jae
roll
rcrb
outsb
cli
mov
lret
mov
repz
xorb
test
pop
sbb
mov
dec
push
jnp
in
push
xlat
test
pop
push
in
jl
rorl
fsubs
je
cld
divl
test
xchg
mov
dec
adc
pop
out
sbb
out
xchg
jns
je
push
aad
or
add
adc
sub
jmp
std
hlt
inc
jecxz
and
xor
cmp
imul
xor
imul
xchg
fdivrs
sbb
jg
mov
xor
fists
pop
ljmp
adc
leave
sbb
dec
lret
cmp
shrl
rcll
call
or
stc
aad
dec
cmc
movsb
fstpl
pop
mov
dec
mov
sbb
xorb
and
add
les
adc
lea
push
pop
in
adc
movsb
xor
push
in
inc
sbbb
fidivrs
in
inc
dec
popf
scas
cwtl
hlt
mov
sbb
repz
mov
dec
mov
adc
int3
add
imul
popa
leave
dec
insb
mov
sub
mov
inc
sbb
arpl
dec
jno
ss
mov
pop
xchg
cmpsb
xor
movsl
pop
out
and
jns
jno
shlb
in
ficoml
jne
sub
sbb
mov
loopne
jmp
ret
das
ret
cmp
stos
andb
gs
xchg
add
bound
mov
cld
outsl
addr16
daa
jge
ficomps
xchg
arpl
out
jne
cmc
cli
mov
jge
cmp
fdivr
jne
repnz
out
leave
add
cld
and
sbb
orb
inc
aaa
mov
mov
dec
fiadds
xchg
iret
dec
or
outsl
scas
aam
push
adc
daa
mov
and
mov
fidivl
bound
xor
stos
mov
into
sub
movlps
scas
pop
fcmovne
in
sub
movl
and
xchg
repz
lahf
mov
loope
jp
push
sbb
pop
and
jns
adc
iret
repnz
jle
popa
push
sbb
mov
mov
xor
mov
mov
sbb
adc
mov
inc
iret
or
rcll
and
mov
mov
mov
jmp
sahf
jmp
adc
shrb
dec
mov
mov
sbb
js
xor
mov
inc
jp
popa
pushf
xchg
arpl
mov
mov
and
xchg
xchg
cmpsb
pusha
fidivrl
inc
push
cmovnp
lods
add
mov
mov
jl
cmp
movb
repz
outsl
pushf
sub
cli
adc
scas
sub
je
cli
imul
popa
adc
ja
jae
lahf
ja
cmp
popf
jns
push
mov
in
adc
inc
inc
sti
in
and
test
lahf
sbbb
aas
addb
xchg
add
into
ds
dec
xchg
lods
stc
push
sbb
test
and
pop
cmp
fistl
push
push
jns
dec
dec
jns
fadd
frstor
ljmp
push
xor
cld
add
xchg
push
dec
aas
rorb
and
xor
and
fmuls
inc
push
in
inc
pop
inc
cmp
gs
clc
push
sti
xor
iret
cmpsl
pop
subb
pop
scas
jmp
loopne
je
mov
je
pop
jl
and
lods
int3
rorb
fldt
in
jecxz
loop
lds
jbe
inc
push
dec
sahf
sub
or
push
mulb
fdiv
push
jl
dec
arpl
je
xchg
cwtl
push
xchg
ror
cmp
add
js
outsb
and
pop
imul
push
sbb
int3
aaa
int
adc
ds
pop
cwtl
les
outsl
testl
out
loope
xor
mov
cld
mov
inc
mov
dec
xchg
negl
push
jnp
out
cmp
push
push
fld
inc
mov
ljmp
lcall
aad
jecxz
pushf
xor
push
push
or
lcall
sbb
inc
ja
fildll
ror
mov
push
jl
inc
cli
xor
jg
pushl
xchg
out
inc
inc
es
pop
cmc
ja
popf
aaa
xchg
dec
test
dec
fs
addr16
je
cmp
and
mov
or
nop
xor
or
adcb
and
pop
rcl
pop
add
pop
adc
cwtl
adc
push
sub
pop
jne
fs
inc
test
mov
loope
in
and
aad
into
pop
cs
pop
loop
dec
ja
imul
je
into
popl
fcmovbe
test
sbb
mov
jg
cwtl
xchg
iret
sbb
xlat
push
test
push
adc
cltd
inc
adc
bound
inc
inc
jo
mov
sarl
nop
push
xchg
cs
arpl
test
push
test
and
aaa
lods
or
leave
scas
pop
dec
jb
movsl
pop
xor
pushf
aaa
or
cmpsl
mov
and
cld
fsubl
dec
adc
or
jb
iret
sub
test
add
lds
xchg
xchg
mov
push
stos
subb
or
gs
sub
outsl
jp
hlt
sti
pop
pop
xor
pop
cs
and
inc
mov
adc
inc
dec
sub
out
xchg
xor
lahf
scas
jns
push
aas
repz
cwtl
ja
imul
sub
xchg
xor
stos
mov
out
cs
cld
xchg
gs
mov
dec
mov
mov
cmp
imull
add
stos
xor
sbbb
outsb
out
mov
cmpsb
les
pop
iret
mov
dec
xor
and
mov
add
adc
mov
cmpsl
fistpl
orb
mov
inc
cmpsl
shrb
ja
ret
clc
insl
xlat
or
fidivs
mov
jp
mov
aam
out
ja
fcomps
xchg
faddp
pop
mov
ret
movsl
sbb
pop
mov
add
pop
add
movsl
filds
xchg
sbb
call
nop
cmp
aas
movsl
repnz
jg
sub
push
inc
je
jne
pop
mov
inc
or
stos
sub
pop
stc
lods
xor
lret
cwtl
sbb
mov
cmpsl
sub
or
lret
lret
inc
jle
enter
xchg
int
mov
jae
pop
lea
seta
call
ds
repz
mov
push
xchg
mov
call
push
and
das
fs
and
xchg
inc
int3
and
mov
and
inc
cmc
push
xchg
dec
clc
movsl
inc
pop
movsl
mov
out
adc
rorb
mov
or
dec
adc
mov
xor
xchg
pop
or
adc
aam
sub
jo
sub
mov
cmp
cltd
push
adc
shrl
lock
push
inc
out
xchg
dec
push
pop
mov
movsb
sahf
xchg
cmpsl
aad
bound
cmp
mov
xor
mov
cmp
fildl
mov
subb
popf
dec
fcomps
or
pop
push
push
dec
push
jg
cs
insb
push
sbb
or
subl
ret
fwait
sahf
push
sti
mov
frstor
int3
add
inc
mov
int
lods
push
lret
insl
adc
call
sub
pushf
cmc
sahf
popa
cmpsb
loope
outsl
xchg
mov
mov
or
enter
xchg
fwait
xchg
fildl
lret
lahf
lock
aad
fldcw
push
shlb
das
mov
jg
fwait
dec
inc
popa
xor
es
rorl
sub
sub
lret
adc
imul
sbb
subb
gs
fcmovb
sbb
pop
mov
int3
fs
insl
rorl
mov
push
pop
push
popa
hlt
jb
out
ror
scas
pop
mov
or
pop
scas
js
and
sub
inc
rcrb
pop
xor
or
push
addl
test
mov
xchg
lret
push
inc
mov
lcall
loop
call
sbb
mov
add
cmp
add
cmc
mov
and
add
add
xchg
sub
xchg
insb
int3
inc
pushf
pop
dec
insb
and
cmp
std
push
xchg
lahf
in
dec
mov
test
pushf
or
push
jo
iret
push
dec
mov
insl
push
loop
nop
in
daa
scas
dec
stos
and
jmp
push
std
inc
cmp
add
and
mov
lea
push
sbb
push
xor
mov
dec
pop
mov
daa
ret
loopne
daa
pop
arpl
jp
fnstsw
xchg
out
fsubrs
jo
push
sti
jg
icebp
inc
arpl
xchg
add
rolb
xchg
lock
dec
pop
es
jae
pop
les
mov
jnp
inc
popa
xor
sub
outsl
cmc
enter
mov
test
lret
inc
jo
push
rcll
push
and
fcomps
or
jecxz
sub
mov
mov
sub
fmul
cmp
add
or
stc
mov
aaa
mov
jb
movd
inc
mov
int
xchg
sub
and
and
mov
hlt
lea
sbb
stos
mov
fisubl
xor
xchg
push
xchg
je
fisttpll
add
xor
movsl
in
rolw
or
pushf
scas
sbb
xchg
dec
fsubs
std
xchg
mov
and
pop
fldenv
adc
and
lcall
pop
or
bound
add
cmp
jmp
outsl
popa
add
xchg
test
ret
or
je
adcl
mov
sarl
fdivrs
and
lea
xor
add
push
mov
sbb
cmpsl
add
and
mov
xchg
adc
and
sbb
cld
or
sub
xchg
or
add
xchg
and
pop
pop
pop
mov
sub
xchg
mov
or
ret
in
in
or
fnstcw
cmp
mov
cli
sub
aad
xor
repz
frstor
fwait
negl
out
sbb
fcoml
idivl
je
pop
jne
imul
sub
cwtl
push
int3
nop
cwtl
jne
in
shll
push
push
push
out
outsl
loop
inc
iret
popf
outsb
int3
inc
xor
cmc
cld
xor
lcall
je
scas
dec
push
int
loope
pop
test
js
mov
inc
cs
or
sbb
sti
adc
adc
cmp
adc
lock
outsb
cmc
mov
out
sub
dec
dec
xchg
leave
fwait
push
xchg
jle
repnz
jb
sub
dec
std
sbb
pop
xor
roll
push
mov
lods
and
push
push
cmc
imul
xchg
outsl
mov
enter
das
inc
xchg
pop
cli
lods
fisubl
lock
mov
gs
push
xchg
jno
repnz
xchg
sub
jno
repz
push
es
nop
faddp
out
dec
dec
andb
lahf
mov
add
pop
test
sub
fistpll
fcmovu
js
scas
dec
xor
std
lret
scas
cmp
xchg
push
rcrb
jmp
js
pop
lcall
push
sub
in
jns
fs
dec
loope
pxor
pop
ret
push
mov
lods
and
xor
cmpsl
fimull
dec
inc
xor
aas
push
cmp
cmp
push
sarb
xchg
out
aas
setno
jnp
insl
push
mov
and
mov
inc
cmp
jp
filds
dec
test
xchg
pop
dec
cmp
aad
repnz
aad
mov
and
aad
fstl
hlt
pop
adc
lods
add
dec
sub
dec
shrb
sub
push
std
sbb
insb
mov
sbb
fld
mov
fnstenv
mov
test
cli
mov
loopne
aas
test
lahf
loop
push
mov
leave
call
or
cmc
mov
add
dec
in
adc
aaa
lcall
jle
pushf
adc
iret
mov
leave
adc
lea
in
xchg
and
push
xchg
aam
add
in
push
test
nop
cld
push
fdivl
mov
sub
xor
pop
jmp
jl
scas
xchg
ljmp
add
jbe
mov
mov
mov
and
int3
sub
cwtl
and
cmpsb
enter
pop
jge
push
mov
xor
cld
or
push
mov
push
sub
add
inc
pop
test
mov
and
jbe
mov
lret
mov
cs
inc
mov
mov
push
lds
outsb
pop
arpl
mov
sub
xor
add
dec
sbb
push
in
fidivrs
sahf
mov
fimull
ss
mov
pop
push
es
movsb
push
jecxz
mov
cmp
mov
test
aad
jns
int
movsb
negb
xchg
lods
sbb
rcr
inc
pop
cwtl
jns
inc
dec
out
int
sub
mov
or
push
push
or
jmp
dec
lock
sub
jl
cmpsb
mov
fisubl
cmp
fwait
test
add
outsb
or
cld
test
dec
inc
mov
sbb
mov
loop
pop
and
push
es
movsl
inc
ret
inc
pop
addr16
fsubrs
mov
repnz
fcoms
call
dec
ljmp
inc
mov
loope
push
jp
pop
stos
test
ljmp
movsb
and
mov
pop
loopne
jo
xchg
jp
xor
iret
jg
mov
filds
mov
dec
iret
mov
push
pop
cmpsl
out
jo
jae
add
jne
fidivrl
mov
scas
push
mov
ror
mov
jl
scas
or
shrb
fnstsw
lret
and
cmp
cmpsl
mov
mov
mov
jg
lods
push
mov
iret
jl
fisubs
out
fs
or
mov
mov
push
rcrb
jne
cmp
lods
leave
shl
push
cmp
dec
add
pop
mov
jns
push
gs
imul
lret
xor
in
pop
pop
cmp
loope
shll
sub
shlb
push
pop
dec
push
mov
cmp
lahf
scas
data16
mov
jb
out
fsubrs
inc
cmp
push
pop
xor
jle
xor
mov
jmp
call
out
movb
addr16
fcmovnb
stos
lcall
fnsave
roll
pop
xchg
fwait
mov
sti
cmp
out
repnz
mov
xchg
jo
out
lods
mov
mov
xor
lret
push
aam
arpl
inc
dec
jnp
xchg
xchg
pop
cltd
leave
out
jp
jle
ret
push
addr16
loop
push
dec
mov
adc
mov
add
sbb
adc
insb
aaa
jp
stos
push
rcll
notb
sub
stos
popf
ret
cmpb
repnz
inc
cmp
add
nop
in
jge
sub
xor
insb
inc
cmpsl
ret
or
xchg
mov
lret
jmp
cmpsl
push
fistl
or
sbb
fidivrs
and
push
imul
jge
mov
cmp
mov
pop
ficoml
loop
shlb
dec
mov
jb
ljmp
dec
ljmp
mov
inc
fs
mov
mov
mov
stc
sbb
jne
arpl
sub
push
mov
lahf
add
ss
aad
pop
aam
xchg
pop
lods
pop
xor
mov
cmp
or
shl
cmpsl
fldenv
sbb
movsl
push
sbb
leave
pop
pop
outsl
out
add
test
leave
mov
sub
rolb
sarl
mov
mov
lahf
add
enter
inc
cs
push
xchg
test
xchg
gs
inc
push
xchg
adc
push
sub
pop
cmpsl
inc
call
push
adc
outsb
inc
mov
inc
fdivrp
sahf
shr
push
push
sub
loope
fnstsw
cmp
adc
jne
push
mov
push
int3
daa
xchg
sub
movsl
mov
nop
push
xchg
jne
xchg
sahf
push
cmpsl
outsb
ret
scas
jp
mov
sbb
push
push
adc
fsub
and
pop
push
mov
inc
lcall
and
lods
das
lcall
psrlq
xchg
add
lea
dec
push
in
sti
movsb
lret
sub
push
add
and
add
mov
mov
das
push
ljmp
dec
sub
mov
or
xor
dec
and
out
xor
jecxz
call
adc
hlt
loop
mov
daa
inc
fbstp
mov
mov
inc
popf
leave
dec
mov
push
loop
pop
mov
psrlw
fs
add
dec
pop
adc
mov
jno
jb
pop
loopne
inc
inc
lock
jae
mov
out
dec
in
daa
imul
adc
sbb
andl
notl
mov
jmp
imul
or
mov
pop
mov
in
leave
js
shrl
inc
push
add
leave
call
and
popf
rcrl
icebp
pop
mov
pop
enter
push
cmp
push
xor
sub
rcrl
jmp
call
stos
popa
cmp
cmpsl
icebp
aam
in
pop
dec
inc
cmpsb
adc
gs
jp
adc
adc
sub
mov
stc
enter
cmpsl
stc
incl
jns
je
stos
xchg
shl
fsubrl
repnz
dec
sbb
xchg
or
and
jg
mov
push
mov
lods
xchg
fldt
cmpsl
xchg
inc
inc
pop
mov
or
ds
js
mov
and
sbb
call
mov
xchg
subl
or
pop
stc
sbb
xchg
loop
jnp
shl
aad
mov
xor
push
in
loope
mov
and
ja
xor
inc
enterw
mov
out
jne,pt
mov
mov
sbb
addr16
or
mov
jb
xchg
mov
mov
mov
or
ljmp
repz
jge
fmull
xor
nop
data16
loope
mov
aad
andl
pop
jo
fsts
sbb
mov
outsl
scas
and
ljmp
pushf
sub
daa
addr16
cmpsl
sub
divb
insl
pop
xchg
mov
xor
es
mov
adc
xor
test
decb
or
or
sar
jns
push
mov
xchg
pop
pop
fidivrs
cmc
jge
adc
sbb
aas
lds
pop
pop
sarl
sub
push
mov
std
movsl
jg
inc
jp
stos
ljmp
popf
stos
sub
sub
sbb
in
cli
xor
push
xor
xchg
loop
sbb
daa
maskmovq
notl
cs
jle
mov
dec
mov
aad
int
inc
ljmp
jb
jg
shll
or
cwtl
add
cmc
test
outsl
cmp
int3
rcrb
fs
or
push
mov
bound
shl
aad
and
mov
pop
sub
sub
dec
aas
notb
jg
mov
lahf
into
int
out
or
lock
inc
dec
push
popa
cmp
push
lret
pusha
faddp
hlt
test
lahf
repnz
push
adc
out
movsl
imul
stos
cli
inc
in
test
lds
jmp
pop
into
enter
mov
dec
mov
pusha
push
sbb
addr16
or
stos
sti
or
js
ljmp
mov
mov
mov
rcll
or
pop
adc
es
pop
fmull
mov
pop
scas
test
pop
ja
or
je
aas
push
add
je
arpl
add
add
aam
lret
sti
inc
ret
lods
cwtl
lea
cmp
bound
cmpsb
mov
scas
push
testl
push
ss
inc
xor
fnstcw
icebp
mov
aas
mov
test
sbb
out
dec
mov
lret
dec
mov
lock
push
jecxz
arpl
stos
imul
movsb
adc
lods
stos
push
xchg
cmp
ljmp
icebp
lcall
cmpsb
insl
and
andl
nop
xor
insb
adc
hlt
js
int
stos
push
add
scas
icebp
or
aad
mov
mov
aas
lods
rclb
insl
out
mov
dec
jg
lret
dec
stos
fistpl
add
test
mov
test
adc
test
test
dec
in
jecxz
fcmove
jle
jmp
sbb
lcall
dec
jne
dec
mov
pop
pop
push
pop
into
xlat
std
test
test
hlt
daa
mov
mov
jnp
ficoml
mov
add
fcmovne
shrb
les
push
mov
sub
mov
in
out
lcall
pop
xor
aas
push
repnz
mov
pop
add
js
leave
ret
fs
or
and
lahf
lds
sbb
inc
adc
shll
or
jp
dec
stos
shl
xchg
bound
shl
sti
pop
cmpsl
mov
movsl
and
icebp
xor
cmpsb
lcall
xlat
or
mov
sti
adc
xchg
pop
stc
imul
lds
push
push
cmpsl
sbb
jp
shrb
cmp
xchg
push
andb
mov
rorb
jb
jno
fcmovbe
in
insl
push
aam
repz
cld
cwtl
jmp
mov
mov
jle
adc
out
jmp
mov
jnp
push
xchg
push
aad
out
shl
rolb
jg
jae
lcall
mov
rol
pushf
dec
push
push
inc
push
dec
pop
loop
push
sti
movsl
push
cli
enter
dec
nop
clc
lea
or
jns
insb
addr16
lods
lcall
popf
push
inc
loope
pop
sahf
lcall
in
into
je
xor
dec
mov
mov
push
out
out
je
push
push
and
popf
in
xchg
inc
mov
inc
sub
mov
xchg
dec
and
add
xchg
lock
shlb
fxch
lret
pop
js
sbb
cli
lock
int
mov
aad
fisttpll
inc
mov
pop
imul
cmpsl
adc
xchg
jecxz
loope
or
fsubs
fdivs
in
lret
sbb
mov
fsubl
out
pop
inc
cwtl
or
mov
xor
movsb
lea
adcb
add
les
stos
mov
sbb
mov
inc
and
rol
mov
adc
jmp
out
sti
push
adc
loope
pop
stos
daa
mov
arpl
mov
leave
in
sub
loopne
roll
jmp
and
cmp
pop
inc
add
xchg
sub
dec
ljmp
push
cli
rcll
pop
xor
dec
fisttpl
movsl
and
int3
mov
cmp
push
inc
dec
bound
or
sti
jecxz
mov
out
push
pushf
and
bound
ja
jg
xchg
mov
jl
addr16
lret
xchg
jg
mov
ds
pop
popa
push
xchg
pusha
xchg
pop
sbb
mov
mov
stc
frstor
insb
or
fisttps
add
inc
xchg
jmp
pop
push
popf
jecxz
add
int
dec
push
mov
imulb
test
jb
popf
imul
lods
push
lock
adc
jne
insb
in
lcall
mov
xor
fdivs
xchg
fcomi
fs
in
push
mov
xchg
xor
cmc
aad
fsubrs
cltd
test
inc
or
shll
adc
popa
loopne
and
mov
loope
jne
mov
sbb
fldl
sbb
mov
mov
pop
sbbb
xor
pop
cltd
cmp
pop
aad
out
aas
int3
shrl
out
cli
xchg
jl
stos
insb
ret
inc
loope
daa
std
dec
xorl
xlat
push
xor
jmp
repz
jmp
mov
pop
cmpsl
aam
imul
xor
add
xchg
js
mov
add
mov
loopne
iret
sub
mov
push
push
xchg
cmc
out
jns
andb
jp
cld
xchg
fwait
mov
xor
mov
xor
or
not
pop
cli
adc
idiv
outsb
push
mov
sbb
aaa
out
faddl
xchg
sub
rcll
out
leave
imul
push
sti
and
pusha
push
idivl
pop
mov
xchg
test
dec
mov
inc
lock
mov
inc
push
adc
dec
dec
ja
in
out
imul
mov
xor
or
sub
fdivs
rol
sahf
int
sub
fildl
mov
and
adc
and
psadbw
mull
hlt
adc
cmp
dec
inc
mov
shlb
psubusw
fcomip
pop
popf
inc
inc
iret
sbb
arpl
xor
mov
mov
or
jo
mov
outsl
mov
dec
add
cmp
xchg
mov
out
sub
sbb
push
or
std
nop
cli
push
sbb
xchg
faddp
mov
addl
sbb
aas
cmp
test
add
xor
and
jns
out
add
pop
mov
sbb
or
push
notl
xor
sub
push
std
xor
mov
xchg
into
sbb
test
push
scas
clc
aas
push
add
ss
sub
lods
pop
ret
cmp
adc
outsb
mov
lea
inc
aam
pop
or
lock
or
xchg
dec
into
push
clc
icebp
and
jbe
mov
ds
mov
mov
xorl
sbb
pop
imul
inc
notl
jnp
mov
fnstcw
and
cli
jecxz
push
inc
pop
call
mov
out
ss
push
push
pop
and
aas
or
outsb
or
ja
shll
cmpsl
dec
stos
mov
jae
je
aam
arpl
ror
lods
lods
icebp
pop
aas
sahf
sub
add
jno
xor
sub
or
push
dec
inc
jae
jns
dec
sbb
mov
scas
pusha
or
jne
andl
lds
mov
push
mov
loop
pushf
mov
xchg
test
add
and
cmpsb
and
push
das
jmp
test
mov
in
ss
outsl
leave
mov
inc
pushf
jae
adc
mov
lea
js
push
cmc
and
in
push
aad
pop
adc
popf
aam
cli
das
push
inc
outsl
mov
mov
xchg
jmp
fwait
cmp
dec
push
xchg
jbe
test
into
cmpsb
sub
cltd
xchg
add
pop
mov
sbb
aas
lock
adc
fisttps
int3
push
in
cmpsb
gs
jle
xchg
loop
movsb
mov
mov
stos
sub
sahf
shl
cld
and
lcall
ficomps
sar
pop
push
mov
popa
cs
sar
mov
inc
data16
mov
mov
loop
enter
jo
pop
or
mov
icebp
test
mov
pop
je
ja
xor
stc
cmp
mov
cs
cmpsl
mov
dec
arpl
push
fmull
push
outsl
xchg
pop
adc
jmp
call
fsts
loop
sub
xor
sbb
or
sub
iret
inc
push
push
sub
pop
out
sbb
fsubrs
test
mov
lods
adc
lcall
orl
and
add
sbb
rcrb
dec
sbb
pusha
mov
add
dec
repz
mov
in
xchg
xchg
push
sbb
push
lcall
ss
or
or
pop
mov
lock
xchg
sub
ds
adc
mov
pushf
out
les
mov
test
mov
movsb
int3
ret
cmp
inc
cwtl
sbb
rclb
and
mov
loopne
hlt
sub
imul
mov
gs
and
dec
lahf
mov
mov
imul
gs
ljmp
pop
in
jp
popf
and
cld
shrl
outsb
push
adc
arpl
push
pop
aas
gs
pop
cmp
out
dec
aas
out
mov
loop
or
mov
ud0
not
in
sub
cmpsl
mov
fistpl
loope
pusha
in
pop
inc
or
sbb
push
mov
sub
pop
adc
insl
loopne
mov
sahf
xsave
xlat
cwtl
push
sub
push
mov
insl
push
add
outsb
jns
es
rcrl
fdivrl
cli
lock
divb
pusha
into
shll
sub
jg
ja
movsl
movsb
mov
rol
adc
arpl
cmp
je
pusha
xchg
movsb
and
sarl
jle
imul
jnp
jae
inc
dec
pop
mov
std
stos
dec
sbb
fadd
xchg
jb
push
mov
lods
xchg
js
lods
cmpsl
mov
pop
lods
and
and
outsl
adc
mov
lret
jmp
xor
sub
or
lret
sbb
mov
in
inc
mov
push
or
addr16
icebp
or
cmc
ja
xchg
sbb
iret
sub
pusha
push
pop
cmp
cli
cmp
or
mov
sub
push
fwait
aam
inc
cld
sbb
decb
push
mov
data16
popa
lea
out
imul
movsb
mov
jns
fwait
adc
mov
push
loope
and
imul
pop
arpl
rorl
and
dec
insb
mov
popa
imul
dec
imul
loope
or
jl
dec
sub
mov
xchg
fcomp
test
inc
add
pop
mov
mov
aas
and
hlt
mov
nop
dec
or
ret
fmuls
push
jmp
sbb
pop
ret
enter
pop
jo
push
mov
mov
ret
stos
pop
rorl
int3
mulb
les
push
jnp
dec
fldcw
not
mov
call
jne
outsl
sbbl
mov
fstpl
inc
inc
rcl
push
inc
fldt
in
push
lods
cmpsb
dec
and
xchg
xchg
addl
es
aam
jne
push
xorl
fsubrs
jecxz
in
adc
add
scas
inc
fildl
js
push
dec
shl
stc
jg
sarb
aas
cmp
mov
add
lahf
sarb
mov
mov
sti
xchg
add
in
pop
mov
mov
mov
dec
dec
pop
inc
pop
pop
jmp
xchg
push
push
mov
push
push
repz
icebp
int
pop
pop
mov
mov
cmc
xchg
mov
mov
scas
pop
es
or
xchg
cmc
stc
pop
or
adc
cmp
mov
sbb
in
clc
xor
je
xchg
mov
into
ficompl
sarb
mov
jnp
push
jbe
sbb
fwait
aad
popf
xchg
and
inc
ret
loopne
xor
dec
cs
es
pusha
inc
testb
inc
mov
or
dec
lret
pushf
stc
testl
fwait
sbb
jne
jp
xchg
sbb
sbbb
sub
jg
jb
outsl
in
or
mov
loope
insb
out
sar
movsb
stc
aaa
int
dec
sbb
add
jno
stc
jb
rolb
mov
cmp
mov
or
push
sbb
insb
mov
jg
xchg
rcrl
xchg
add
test
cltd
push
xchg
aas
repz
addr16
insb
and
sbb
mov
xchg
cmp
or
push
outsl
aad
aad
aas
orb
lahf
cmp
std
int3
mov
jle
sub
lods
lock
out
pop
cmpsb
and
mov
mov
or
ljmp
lds
sub
cmp
loop
sub
sub
nop
shlb
sub
pop
and
arpl
test
sub
das
daa
aad
mov
push
mov
fwait
push
outsl
inc
dec
xchg
scas
je
lods
lods
push
cld
insl
call
fcomps
data16
and
cli
xchg
fdivrs
test
test
dec
jne
pop
movb
in
dec
push
lcall
xchg
in
push
adcb
outsb
sti
lods
out
pusha
mov
adc
jae
cli
push
add
mov
stos
push
js
push
adc
cmp
aaa
jne
aam
cmp
inc
rcrb
lret
or
pop
adc
in
push
mov
xlat
icebp
ljmp
push
or
repnz
aam
hlt
push
aad
push
and
mov
jnp
sahf
lea
mov
sub
out
or
mov
cmc
cwtl
add
sti
and
jae
aaa
and
mov
xchg
mov
sti
sbb
jb
addr16
fcomi
idivl
xchg
cltd
cmp
mov
test
repz
test
es
mov
and
cmp
adc
je
fsub
pop
xor
out
cmp
call
cmc
jp
mov
and
cmp
loope
sub
xor
pushf
jle
cs
mov
in
jl
cli
push
xchg
ds
adc
cwtl
loope
loope
cltd
mov
rol
je
jne
lds
push
xor
push
ret
inc
test
sbb
orl
push
pop
pop
clc
push
xchg
mov
mov
orb
ffree
fists
mov
pop
or
xchg
mov
dec
out
adc
mov
loopne
test
lahf
leave
popf
shr
jp
pop
mov
mov
and
push
cmp
pop
mov
les
dec
jp
adc
push
xor
rcrb
push
sub
out
out
lods
fdivs
ds
rorb
xor
aas
add
bound
push
mov
test
jno
test
push
mov
mov
out
adc
fistps
sub
push
mov
and
jecxz
int3
xchg
clc
icebp
sub
rcll
dec
jl
shufps
pop
fstpl
and
adc
push
cltd
push
inc
repnz
mov
add
cs
das
outsb
adc
xor
jl
scas
ret
adcb
jp
mov
mov
push
mov
xchg
out
fstps
mov
prefetch
or
das
inc
push
imul
in
popa
test
push
loop
push
add
mov
out
inc
jnp
pop
rcll
mov
sub
fistpl
ret
es
xchg
push
ror
jne
adc
inc
adc
mov
inc
dec
in
shrd
pop
dec
mov
adc
mov
fidivs
xchg
leave
mov
push
mov
push
push
mov
mov
sub
fisttps
fsts
iret
lahf
dec
test
pop
pop
mov
cmp
inc
adc
dec
sbb
leave
xchg
ljmp
out
cli
add
fdivs
fdivs
out
xlat
orl
pop
xchg
mov
inc
inc
cmp
subl
mov
mov
lret
or
pop
es
jecxz
nop
cmp
push
mov
enter
push
repz
aad
nop
popl
pop
cmc
sub
mov
lds
push
jp
lods
mov
aaa
mov
fstpl
rcl
push
in
push
scas
mov
lods
in
push
fcomps
sub
data16
jno
add
divb
mov
gs
fcmovnb
scas
outsl
dec
xor
enter
pop
and
inc
pusha
mov
sub
jle
fisubs
loop
xchg
xlat
sarl
les
xchg
cmp
popf
scas
mov
cltd
mov
popf
int3
test
nop
fucomip
dec
jg
or
cli
push
test
fnstenv
pop
ljmp
mov
xor
dec
test
cld
pop
push
fs
jo
stos
push
inc
mov
mov
cmp
loope
push
ja
imul
stos
or
aad
shll
lret
loop
dec
shll
cmp
cmpsl
xchg
js
inc
and
outsb
jl
les
fstl
sbbl
sub
jns
in
fisubl
iret
dec
jbe
loopne
mov
and
les
imul
xchg
push
out
pop
dec
or
xchg
cld
lods
push
or
jle
js
inc
mov
mov
je
fsubl
mov
sub
jbe
ror
or
mov
int
xchg
cs
popf
pop
xor
das
and
stc
pop
mov
push
or
pop
inc
cmp
mov
dec
daa
push
stos
shll
mov
mov
sub
sbb
lods
mov
lods
pop
mov
clc
mov
mov
jno
sbb
hlt
dec
cli
shr
adc
cmp
mov
cmp
xchg
add
jbe
sub
outsl
xor
addl
sub
mov
mov
pop
dec
imul
mov
es
jno
lods
sub
fs
fs
jo
cmpsb
lds
pop
add
add
inc
dec
inc
xlat
add
mov
pop
test
adc
inc
fwait
xchg
inc
xchg
xchg
adc
jl
jo
aaa
daa
xchg
enter
iret
or
inc
test
fdivl
xor
push
adc
adc
or
lds
mov
in
xchg
pop
outsl
or
cmpsl
push
xor
xlat
push
std
mov
movsl
mov
push
add
enter
mov
out
xchg
scas
shrb
popf
push
sub
test
popa
dec
repz
push
sahf
or
in
leave
push
push
rcrb
or
cwtl
mov
pusha
push
scas
shrl
inc
add
inc
rcll
lds
test
xchg
push
dec
push
xor
repnz
adc
lea
popf
sub
cmpsl
ljmp
stos
aam
mov
icebp
loop
bound
sbb
je
mov
mov
xchg
ret
leave
xchg
clc
lret
add
cmp
mov
push
int
sub
push
cs
iret
cmp
test
hlt
or
sbb
aad
mov
ss
in
in
lea
sub
push
loop
sub
mov
shrb
repnz
dec
les
add
ffree
jge
ficomps
add
fsubs
daa
dec
jns
cli
sbb
pop
lret
lcall
test
fistl
push
xchg
sti
aam
adc
jno
and
sbb
stos
notl
test
das
lods
test
dec
imul
mov
sbb
or
xchg
sti
iret
imul
sub
sbb
push
sarb
scas
push
incb
mov
enter
shll
fidivs
lock
xchg
loope
aas
movsb
out
jge
cmpsl
adc
aad
out
call
mov
lcall
cmp
mov
xorb
xchg
and
adc
cltd
pop
fistpll
lea
xchg
ds
or
mov
add
not
mov
push
mov
mov
jg
pop
cs
inc
adc
inc
jmp
dec
dec
mov
jb
xchg
imul
mov
ret
pop
mov
push
pop
test
and
dec
fucomi
adc
imul
push
cmp
sbb
lds
aad
jp
fndisi(8087
add
ret
inc
pushf
shrb
ja
sub
das
stos
subb
ret
mov
sbbb
sahf
cwtl
repnz
insb
or
adc
add
push
mov
loop
in
loop
in
int
dec
cld
push
jno
stc
xchg
jnp
ret
gs
dec
jnp
jae
cmp
test
in
cmp
jl,pn
out
push
jo
das
hlt
mov
cmp
lret
jge
sbb
sub
lods
or
mov
mov
pop
jns
mov
xchg
pop
push
adc
mov
ljmp
jl
cmc
cmp
enter
lods
and
nop
ret
cli
mov
adc
pand
cltd
add
stc
or
xlat
sub
cmp
jnp
push
cmpsb
out
movsb
xchg
pop
divl
daa
lret
es
negb
jnp
cld
ljmp
in
jno
mov
popa
lods
es
stos
jmp
daa
jecxz
pop
bound
lods
inc
test
ljmp
imul
mov
idivl
xor
sbb
mov
lods
and
push
dec
inc
loop
out
push
jg
xor
pop
popf
cmp
ret
mov
or
aas
test
lahf
fmull
push
jge
out
pop
aam
fsin
or
or
scas
ss
inc
stos
adc
mov
stos
cmp
and
cli
or
sub
push
pushf
les
in
test
iret
lods
adc
pop
mov
out
jno
jb
iret
mul
sahf
addr16
jle
jbe
or
mov
mov
sub
pusha
cmc
insl
push
push
pop
jl
pop
loop
repz
mov
mov
popf
in
cmp
mov
imul
mov
mov
mov
mov
sub
jno
les
in
fisttps
lds
dec
es
test
fstp
stos
lcall
in
xchg
fs
sub
mov
push
movsl
jae
loop
fidivrs
rorb
inc
dec
loope
fdivrs
icebp
scas
mov
insl
lods
daa
push
cmpl
lahf
mov
sbb
mov
lock
push
adc
xchg
cmp
loopne
jae
cmp
jmp
ficoml
inc
push
sarl
add
mull
and
push
stos
outsl
push
ss
movsb
dec
or
sub
lret
sbbl
xchg
lods
xchg
fldcw
aam
xor
cmpsl
mov
insb
pop
rolb
js
inc
fisubl
sub
mov
je
pop
adcl
and
add
scas
ret
sub
push
mov
add
popa
cmp
sarl
adc
jmp
data16
int3
cmp
int3
movsl
shll
pushf
inc
vphadduwd
add
mov
jb
inc
addl
sub
push
sti
sbbb
mov
mov
inc
pop
mov
mov
outsl
icebp
mov
repz
cmpl
jp
mov
pushf
les
cli
in
cld
test
inc
mov
dec
data16
add
pop
sub
lods
scas
mov
mov
or
or
popf
call
add
lea
js
mov
ret
int3
add
loop
cmp
pop
inc
push
or
push
popa
jb
inc
inc
pop
xchg
or
mov
aas
fldl
add
das
push
sbb
jo
push
leave
xor
cmp
inc
mov
adc
dec
jg
data16
jecxz
loop
cmpsb
cltd
and
sub
sub
sahf
or
xchg
das
mov
inc
ret
sbb
mov
pop
adc
rcll
mov
dec
pushf
cwtl
push
mov
loop
pop
sub
mov
jecxz
mov
push
pusha
movsl
and
sub
or
adc
pushl
xor
cwtl
enter
mov
xchg
shr
lret
leave
dec
stos
mov
adc
xchg
jle
pop
jne
inc
mov
jne
cmpsl
push
and
mov
xchg
fwait
aaa
stc
or
push
adc
sbb
gs
cld
dec
jmp
mov
addr16
sub
pushl
add
add
negl
jle
lock
push
pop
sub
push
fdiv
inc
movl
js
cltd
mov
push
and
mov
scas
into
inc
xorl
mov
cmp
ret
cmp
mov
inc
and
cmpsl
popa
jl
adc
out
lret
leave
mov
lahf
xchg
and
pop
pushf
aaa
xchg
inc
sbb
inc
outsb
mov
push
ret
push
inc
sbb
sub
je
xchg
lock
ret
leave
cmc
test
mov
xchg
hlt
bound
cmp
pop
fiadds
cmpsb
or
xchg
mov
sbb
jbe
xor
xchg
in
fucom
cli
out
fsubs
jecxz
scas
or
and
pop
dec
xchg
push
lock
test
ret
sbb
xor
int
mov
pusha
add
lahf
repz
ja
push
imul
mov
in
mov
xor
add
fstp
push
mov
aas
dec
adc
dec
in
dec
push
push
or
dec
mov
mov
mov
rol
js
adc
push
outsb
sbb
int
mov
clc
or
shrl
push
das
dec
push
outsl
je
lret
mov
mov
adc
sbb
rcrl
cmp
adc
xchg
mov
mov
pop
cli
insb
mov
xchg
lock
xor
mov
mull
mov
adc
sub
clc
int
movsl
jo
xor
stc
sbb
cmpl
fmuls
lds
out
xchg
sar
movsl
fwait
out
aas
lret
mov
neg
sub
idiv
int3
mov
ret
push
cwtl
lods
inc
decl
adc
xor
ret
int
or
aad
das
xor
gs
sahf
fs
pop
or
push
mov
pop
cmp
arpl
pop
push
cwtl
ss
inc
lret
jp
fldln2
xlat
daa
hlt
jl
push
jecxz
add
test
aas
stos
or
pop
nop
cmp
sub
mov
dec
lret
icebp
js
pop
nop
or
cmp
push
sbb
lods
or
xor
sub
loop
push
pusha
or
mov
sbb
movsl
add
mov
adc
js
daa
or
add
add
mov
cltd
cs
fcoms
mov
jnp
adc
push
inc
mov
inc
mov
dec
pop
inc
bound
xor
mov
dec
out
mov
jp
lods
and
popa
push
pop
out
movsb
xchg
cmp
dec
pushf
and
add
int3
and
popa
ret
mov
adc
addr16
xor
push
ret
cmc
push
xchg
ficompl
add
adc
add
out
scas
cmp
mov
das
mov
mov
mov
stc
orl
test
adc
adc
paddsb
testl
cmpsb
mov
nop
aas
enter
pop
xor
ret
sbb
dec
mov
add
leave
pusha
push
in
sbbb
fs
sbb
dec
lock
and
and
les
cs
sub
leave
mov
out
inc
int
fwait
and
inc
stos
insl
xlat
loope
out
mov
xchg
in
xlat
inc
jl
setge
sbb
sbb
int3
inc
jl
incl
gs
shr
xchg
lea
lcall
imul
cwtl
subb
xchg
imul
push
jns
push
rol
adc
pop
cmp
cmp
call
cmp
fcoms
mov
xor
addb
mulb
jb
out
pop
enter
dec
mov
in
cld
xorl
sub
fmuls
sub
xor
push
fists
cwtl
inc
movsl
cltd
adc
sbb
fistps
inc
push
sbb
movsl
xor
mov
push
push
sub
in
cmp
call
or
pop
movsl
fcoml
jnp
dec
test
scas
clc
pusha
jne
add
mov
jns
fiaddl
adc
xchg
cmp
mov
test
jb
loopne
or
leave
fs
scas
scas
daa
and
inc
pop
sbb
in
fisubrl
mov
cmp
cmp
xor
mov
shrb
sahf
or
les
push
pop
cmp
adc
lcall
xchg
lret
scas
mov
fmuls
xchg
dec
xor
and
leave
cmpl
popf
mov
and
aam
adc
je
jl
in
inc
xchg
movsb
xor
sub
scas
dec
pushf
fs
pop
xlat
out
lcall
sahf
loop
jno
mov
lret
pop
inc
fsubs
xor
lahf
inc
dec
xlat
cld
das
cmc
add
lods
mov
add
and
mov
mov
sbb
push
xchg
dec
xorb
mov
pop
test
jo
loop
bound
into
leave
xchg
xchg
mov
clc
out
mov
fists
mov
mov
lds
xchg
or
jne
fsub
dec
mov
cmc
repnz
pushf
push
or
cmc
sarb
jbe
dec
aam
xchg
adc
xor
dec
jb
pop
fidivrl
fwait
inc
jge
cmp
daa
sub
stos
push
xchg
das
cmp
jp
cli
xor
cmp
mov
push
jg
jp
out
pushf
mov
sahf
je
lret
add
aas
shlb
ja
cs
faddp
js
sub
fistpl
inc
dec
xchg
cmc
das
push
cmp
or
pop
xchg
mov
test
adc
mov
cmpsl
aam
andb
sbb
mov
mov
dec
aam
jle
cs
jno
push
push
dec
pop
push
mov
push
lcall
inc
cli
ret
sub
sub
or
jmp
jp
sbb
mov
dec
sub
fisttpll
fisttps
aad
adc
fisubs
push
fists
fimuls
sub
adcb
pusha
mov
test
sub
xchg
sti
fst
aas
mov
int
fsincos
mov
xchg
loopne
test
mov
out
jecxz
xor
inc
xchg
or
adc
xor
pop
push
lahf
clc
pushf
add
lea
cmp
pop
push
mov
sahf
mov
pop
mov
sti
fadds
div
and
es
rcll
jnp
mov
sbb
dec
cmp
pusha
ss
mov
test
fsts
movsb
mulb
push
push
loope
jg
lods
and
jb
mov
repnz
mov
sub
cltd
out
push
xor
lock
ja
aaa
jb
bnd
shll
dec
aad
into
xchg
and
test
and
aaa
mov
pop
aad
mov
int3
cmp
fsubl
push
push
push
sub
pop
push
ja
xchg
call
jbe
or
mov
lds
ja
jg
mov
pop
enter
out
arpl
sub
out
clc
in
sub
ret
xchg
aaa
add
rorb
mov
jmp
mov
movsb
and
push
adc
sar
adc
push
sub
std
lea
jb
pop
int3
iret
sbb
sub
or
insl
mov
je
adc
push
xor
mov
cwtl
test
add
jge
and
fstps
add
xlat
test
fwait
push
adc
lock
xchg
test
sti
mov
in
add
cmp
mov
shr
les
dec
lods
xor
rcr
jns
mov
jo
sbb
mov
xchg
aad
adcb
cmp
jge
mov
inc
orb
lods
ficompl
es
pop
xorl
insl
mov
cld
ljmp
out
xor
addw
push
push
int3
ljmp
in
das
test
rcrb
pop
out
fists
loop
cmp
dec
pop
movsl
fbld
shlb
cmp
push
icebp
hlt
push
adc
popa
mov
loop
xchg
push
into
push
jbe
pop
jle
outsl
arpl
pop
pop
mov
stos
roll
fidivs
jno
je,pn
out
jno
fwait
push
mov
in
cmc
xchg
decl
adc
stos
mov
fistps
sbb
out
bts
repz
add
jge
or
inc
lret
mov
imul
sarl
in
dec
mov
dec
adc
push
sbb
xchg
lcall
shrb
in
sbb
jbe
add
adc
lahf
lods
adc
std
and
andb
xchg
fsubr
lods
test
xchg
out
jnp
xor
push
jge
add
insl
push
cmp
adc
or
orl
sbb
cwtl
int3
xchg
repnz
hlt
shll
lods
cmp
sbb
dec
lcall
lea
lock
into
inc
sbb
rcrl
test
into
repz
mov
in
inc
daa
cmp
xchg
cmc
inc
adc
jmp
inc
pop
mov
out
pop
mov
inc
scas
sub
adc
mov
push
or
mov
pop
xor
xchg
or
or
jmp
test
xchg
pop
jb
xor
fnsave
sbb
andl
leave
add
sbb
subl
and
ret
leave
pop
addr16
sti
add
lods
sbb
mov
push
mov
push
xlat
out
xchg
sub
insb
ss
cmpsl
int
test
sbb
jmp
insb
and
popa
pop
repz
ss
jmp
sbb
mov
jl
daa
push
inc
pop
shl
xchg
pop
mov
cmpsb
cmp
iret
jecxz
popa
mov
pop
daa
jmp
adc
inc
test
dec
xor
and
lcall
jecxz
sub
cli
ljmp
cs
cs
push
fistpl
mov
fistpl
pop
lret
xor
or
addl
ret
push
dec
sub
testl
adc
fwait
lret
xor
push
imul
test
cwtl
stos
cmp
imul
int
or
enter
cld
sbb
enter
test
sarb
or
inc
jmp
lea
adc
fidivs
fst
pop
sbb
inc
mov
mov
adc
loope
rolb
lods
arpl
pop
push
add
pop
fildll
fwait
mov
stc
dec
inc
popa
dec
ss
mov
mov
and
lret
push
loop
dec
in
pop
add
andl
push
push
cmp
adc
push
jno
pop
jne
mov
lods
sbbl
out
adc
pushf
pop
jle
mov
mov
pop
mov
pop
dec
lds
and
jmp
clc
sbb
aad
scas
je
dec
mov
xlat
push
test
int
sub
cmp
push
sub
cmp
xor
orb
cmp
push
xchg
movsl
xlat
inc
push
sbb
xlat
dec
loope
inc
mov
pop
lods
test
imul
aaa
stos
cli
push
iret
shrb
test
inc
jo
into
xchg
dec
in
or
dec
iret
pop
not
add
push
sbb
push
ds
test
add
jl
push
jo
in
adc
sub
cmpsl
cli
cmp
inc
lds
lea
shlb
inc
sbb
pushf
lea
mov
ret
inc
pop
loope
scas
ljmp
and
les
push
pop
xor
les
insl
pop
cs
and
lods
dec
in
adc
iret
insb
nop
jge
insb
aas
pop
rcrb
data16
popa
jg
aaa
add
mov
je
sub
pop
int3
inc
jl
int
and
xchg
adc
into
sub
rcrl
aam
je
leave
jge
repz
shll
sbb
or
adc
ja
ja
div
frstor
cmp
int3
je
xchg
jno
mov
adcl
sub
sbb
clc
call
and
mov
xchg
nop
dec
xlat
lcall
jl
in
mov
fildll
pop
xchg
or
call
jg
adc
push
add
sub
lcall
fwait
aaa
inc
pop
or
insl
pop
cmp
mov
lock
sub
inc
jg
sub
push
fisttpll
jl
push
fwait
jecxz
dec
pushf
jecxz
outsb
sub
dec
lea
push
insb
data16
xor
es
xchg
movsb
push
and
andb
mov
or
mov
movsl
js
xor
sarl
xchg
add
mov
into
in
xor
sub
daa
rol
out
cmpsb
mov
gs
mov
ret
cmova
shlb
mov
or
pop
push
xor
test
jbe
mov
xor
insl
push
into
push
xor
adc
inc
stos
in
inc
int
loopne
jge
nop
aad
std
and
xchg
pop
mov
add
inc
cmp
ja
jns
mov
repz
or
ret
inc
push
in
adc
mov
ret
mov
adc
cmpsb
punpcklbw
add
mov
scas
rclb
je
mov
std
sbbl
out
xchg
ss
push
xor
fstpl
push
in
push
sbb
into
mov
arpl
insl
jl
jbe
pop
int3
pusha
mov
and
jmp
shlb
into
inc
cltd
sbb
test
rcrb
adc
mov
fists
test
lea
xchg
xchg
icebp
clc
cmp
sbb
xor
stc
xchg
mov
inc
or
mov
jo
scas
and
jae
data16
jne
xor
sub
add
fldl
cmp
and
les
in
fwait
mov
sti
in
lods
sbb
cmpb
xlat
dec
cmp
ss
sub
das
ss
jecxz
push
ljmp
out
mov
sub
jbe
lcall
enter
test
cmp
sub
std
push
mov
sarb
sti
sti
sub
dec
daa
push
daa
inc
add
mov
mov
enter
sbb
add
pop
xor
adc
repz
push
fwait
ss
ret
push
fs
pop
nop
sbb
hlt
sub
inc
ficoms
pop
ds
sbb
aam
jno
data16
pop
in
pushf
imul
lods
pop
mov
or
or
scas
stos
scas
clc
xchg
aad
fsubl
enter
dec
jne
js
mov
mul
addr16
inc
adcl
sbb
roll
ret
xor
cltd
icebp
sbb
inc
cld
jo
mov
inc
aaa
sbb
or
fistpll
mov
mov
addl
imul
cmp
xchg
jnp
adc
mov
xchg
and
inc
icebp
pop
loop
mov
ficomps
jne
loope
push
mov
inc
cmp
pop
sub
ss
pusha
into
xchg
dec
int
push
idivb
js
mov
xchg
xchg
push
nop
jo
jle
and
xchg
mov
xor
fndisi(8087
aad
addl
sbb
or
cmpsl
mov
mov
mov
mov
or
cmpb
add
ss
orb
sub
ret
mov
jb
pusha
pop
pop
dec
je
mov
xchg
hlt
in
iret
fdivs
lock
inc
jns
add
jns
fwait
and
jle
insb
cmp
xchg
imul
or
xor
jns
ret
cwtl
je
pop
pop
out
fisttps
inc
and
scas
xor
mov
fistps
or
and
push
push
inc
pop
or
inc
loopne
or
cmp
jno
pop
popa
pop
jmp
jmp
pop
imulb
in
mulb
push
adc
aaa
bound
cvtps2pd
scas
lds
mov
lret
pusha
movsl
pop
lods
mov
mov
hlt
mov
dec
adc
xchg
repz
shl
aam
or
lcall
cmp
stos
daa
lods
addr16
test
mov
fistpll
inc
test
subb
mov
dec
sti
movsl
mov
lods
and
shll
xchg
or
mov
data16
and
rcrl
aam
jnp
sbbb
in
or
minps
cmp
into
cld
cmp
mov
adc
aad
int3
inc
mov
push
lds
and
js
enter
dec
pop
imul
aam
jae
js
cmc
jno
in
add
aas
loopne
jae
pop
cmp
inc
into
dec
movsl
cmp
idivl
jbe
and
xor
and
adc
cltd
mov
clc
pop
mov
cmp
push
jg
stos
out
pop
out
mov
mov
lret
cmp
pop
push
sar
adc
out
inc
sub
ret
gs
mov
in
mov
clc
fmull
mov
mov
in
andb
jecxz
incl
imul
test
arpl
xchg
cmpsb
lret
pop
and
inc
xchg
sar
lods
shl
inc
repnz
xor
lret
int3
jno
push
mov
mov
clc
insb
adc
lahf
scas
jle
les
cld
mov
sub
into
jecxz
mov
repnz
cmp
pusha
mov
cltd
ss
sahf
insl
call
into
test
sbb
ret
sbb
mov
inc
cmp
pushf
dec
xchg
dec
inc
loopne
popf
out
packsswb
xor
sub
popl
add
frstor
inc
idivl
jle
pop
cmc
jns
enter
xchg
jo
add
mov
dec
and
jo
xchg
push
xor
gs
enter
mov
add
call
and
les
mov
test
test
cld
fdivrl
addl
jle
jns
enter
nop
mov
push
jge
and
out
lret
pop
int
ret
xchg
and
and
loopne
cld
shll
xchg
test
mov
sar
fmul
gs
fldl2e
pop
cmp
lea
cld
in
xchg
mov
fdivs
repz
push
mov
push
push
dec
xchg
xor
mov
xor
out
sub
xchg
out
jns
mov
mov
ds
mov
jge
divl
arpl
mov
push
cmp
gs
rcr
mov
outsl
andb
stos
inc
sbb
mov
xlat
xor
inc
mov
pop
add
insl
je,pt
mov
inc
in
jmp
adc
or
outsl
xor
add
mov
and
mov
inc
call
cmp
sub
inc
or
out
dec
inc
add
testb
mov
sahf
mov
movsl
xor
mov
je
mov
imul
loop
jge
mov
adc
inc
out
push
cmp
inc
into
sbb
popa
mov
push
aam
pop
stc
stc
pusha
mov
pop
sbb
jb
pushf
mov
rcl
inc
fiaddl
pop
loop
aam
faddp
sub
xor
lahf
lcall
dec
dec
adc
mov
cltd
test
pop
push
inc
jmp
jns
dec
mov
push
jmp
mov
jle
xor
and
adc
push
or
xor
xor
into
xchg
adc
loopne
jecxz
seto
scas
dec
cs
or
pop
pushf
cmpsb
xchg
sbb
mov
scas
cmc
jmp
mov
push
out
lret
mov
testb
data16
push
stc
std
lods
jmp
fldt
xchg
pop
pusha
mull
pop
imul
push
and
mov
jmp
outsb
iret
fucomi
sbbb
xchg
xchg
lods
lret
sbb
and
xor
pop
jmp
sbb
sub
pop
lods
test
add
aas
add
insb
rorb
and
data16
mov
and
movsb
andb
pop
lahf
xchg
outsb
pop
fcomps
shlb
and
lahf
pop
mov
adc
loopne
pusha
loop
outsb
push
test
das
push
ror
jl
sub
mov
imul
adc
sub
jmp
add
dec
cmp
fbstp
push
add
movsl
test
out
insl
pop
popf
in
jp
inc
ljmp
out
andb
jp
aaa
enter
gs
cmp
cmp
and
mov
xchg
cld
push
cli
pop
popf
xor
out
insl
adc
pop
dec
cmp
call
xchg
addr16
mov
sbb
xchg
push
adc
jmp
sbb
mov
inc
testb
lahf
aaa
push
fpatan
xor
pop
sahf
outsb
jmp
jg
dec
int3
repz
cmp
popa
scas
hlt
or
call
adc
jl
and
popa
push
mov
cld
int3
fwait
test
lea
xchg
lcall
sbb
jbe
stc
orb
test
sub
xor
stos
lahf
mov
addr16
mov
adc
mov
icebp
push
fidivrl
bound
mov
push
inc
pop
ret
inc
pop
std
outsb
mov
repnz
cld
push
shr
int3
sbb
mov
pop
call
bound
fidivs
inc
add
fnstsw
fmull
push
lret
sub
dec
inc
mov
stos
adc
sub
stos
rclb
sbb
lea
imul
cmpsl
xor
jo
add
mov
addr16
cmpsl
rcl
xchg
xchg
jge
dec
rorb
pushl
in
mov
pop
scas
lret
mov
pop
adc
and
repz
fisubl
repnz
mov
ljmp
cmc
xor
loopne
dec
aad
sub
pop
idivl
mov
add
pop
mov
lds
sub
sbb
int3
arpl
shll
in
cmc
seta
jnp
jmp
push
mov
pushf
mov
movsb
inc
and
dec
in
push
into
dec
aas
stos
sbb
std
sub
mov
cmp
rcrb
aaa
mov
and
in
xchg
testb
les
mov
es
mov
fnstsw
rcrl
push
push
arpl
lods
inc
popf
test
mov
nop
cld
les
and
jbe
gs
jo
jnp
mov
or
push
fldenv
loop
xchg
cmp
in
mov
aam
cltd
mov
jbe
es
loope
repz
arpl
call
sub
jp
push
push
or
shrb
pop
mov
outsl
inc
fidivrl
jo
ds
dec
addr16
in
jl
adc
pop
push
fstpl
sbb
scas
fimuls
mov
jns
not
scas
lret
xchg
pop
cwtl
imul
or
scas
xor
scas
cli
lods
jecxz
clc
cmpsl
outsl
mov
aaa
mov
pop
mov
loope
cs
or
pusha
sti
mov
mov
ficoms
add
jl
rclb
cmp
xlat
es
mov
xor
jo
or
in
push
cwtl
dec
xchg
insl
ljmp
mov
cmp
pusha
mov
das
movsb
rcl
loop
inc
xchg
movsb
sahf
shrl
push
push
cmp
outsb
add
bound
mov
pop
arpl
stc
sbbl
push
jo
scas
jb
sbb
out
test
lret
sbb
push
loop
mov
outsb
int
mov
lods
cwtl
enter
lods
pop
xchg
outsl
xor
xchg
mov
inc
sub
pop
pop
pop
ret
fnsave
ds
mov
xchg
dec
mov
cmp
and
mov
fiadds
insl
icebp
mov
ror
sbb
pop
jb
mov
ret
cmp
dec
addl
fcoml
push
mov
mov
shrb
ja
dec
ret
mov
cmpsb
push
mov
shll
or
sub
popa
jb
test
dec
lds
cld
mov
sub
fucomip
popa
inc
mov
or
mov
adc
push
cmp
jmp
jg
dec
leave
outsl
repnz
add
and
or
xchg
orl
jns
out
push
fbstp
cld
ja
xorl
adc
sub
jl
addb
jns
mov
sub
cmp
pop
in
adc
loopne
mov
xchg
ja
add
scas
gs
push
add
jl
mov
notb
push
pop
jle
sti
shll
sti
mov
into
andb
pop
enter
sbb
add
or
pop
jo
jmp
cld
xlat
push
test
loop
dec
subl
jp
out
mov
mov
xor
sbb
cmp
push
add
push
ret
stos
lret
mov
dec
ffreep
out
popl
sub
bound
sub
dec
inc
int
js
pusha
jnp
xor
add
jno
mov
lahf
test
dec
add
sbb
jnp
addr16
loop
push
jno
mov
fisttpll
sub
mov
popf
dec
roll
decb
jb
sbb
sarl
rol
mov
lock
jno
xlat
xor
sub
mov
and
xchg
xchg
sbb
xchg
jle
or
clc
sbb
jl
xor
mov
add
push
sbb
xor
inc
push
mov
int3
fildl
pusha
cmp
ja
sub
xor
lods
mov
aam
sub
sbb
sub
hlt
push
mov
shrl
cltd
mov
sub
es
dec
mov
mov
lret
pushf
dec
fstl
add
fcmovb
and
dec
cltd
cmp
sbb
or
adc
cmp
and
xor
mov
lds
loope
mov
mov
fstpt
push
fisubs
testl
loop
lcall
pop
andb
and
rol
cmpsl
xor
std
flds
movsl
and
jg
cmpsl
mov
xchg
daa
pop
imul
push
push
push
mov
add
lds
sahf
and
bound
mov
fstpt
push
sbb
dec
addb
bound
lock
add
jecxz
scas
push
leave
pop
loopne
mov
jae
inc
xchg
mov
out
or
mov
or
or
ret
adc
pop
mov
or
lahf
clc
addr16
mov
inc
dec
int3
popf
mov
push
das
arpl
xchg
mov
dec
push
sub
and
repnz
inc
int3
mov
addl
aas
mov
sbb
bound
or
jg
mov
mov
mov
mov
ror
xchg
lods
xchg
stos
mov
test
sub
into
inc
fwait
hlt
sahf
outsl
cmp
xchg
cld
pop
inc
cs
dec
and
jecxz
xchg
or
xchg
es
cmp
pop
dec
jmp
adc
xchg
loopne
mov
or
mov
loop
test
fldl
jo
faddl
xchg
inc
test
daa
push
jne
inc
dec
fidivrs
scas
lret
cmp
push
pushf
out
iret
push
sbb
rclb
pop
imul
inc
adc
insb
cmp
push
fcoms
movsl
or
out
sar
push
cmp
pushl
aaa
inc
lock
sub
jns
pop
sub
or
daa
jnp
adc
cmp
xchg
xor
repz
pop
out
lret
cli
mov
mov
test
fisubrs
mov
xchg
lret
mov
fimull
shrl
sbb
pop
jnp
ljmp
pop
push
out
and
mov
or
sub
imul
loopne
arpl
dec
jg
cmp
push
xlat
stc
out
mov
pop
imul
inc
and
jb
int
in
xchg
jmp
loope
mov
adc
scas
mov
loop
pop
jl
popf
or
aaa
and
add
jnp
jecxz
or
cmp
scas
xor
push
sub
mov
pusha
into
and
push
xor
push
xor
xchg
std
addb
daa
cmp
fdiv
ja
testb
pop
ds
mov
adc
fildll
fldenv
and
push
jae
fimull
dec
pop
imul
or
push
filds
sbbb
mov
nop
out
stc
and
pop
sub
or
fstpl
lcall
or
or
push
in
stos
push
in
shll
imul
cmp
hlt
mov
mov
int3
jnp
mov
xor
mov
shl
rorb
or
int
pop
lods
cmp
jmp
popa
mov
sub
sahf
fisttpl
mov
cmp
push
jg
jne
push
jns
pop
into
pop
mov
ret
dec
adc
dec
jns
or
nop
inc
dec
lock
jge
sbb
dec
mov
imul
shrl
xor
mov
jle
movb
jp
mov
mov
fldl
lcall
and
push
jge
lret
cmp
or
test
movsb
pop
adc
add
imul
jbe
lahf
sar
fcomip
or
xor
mov
or
jmp
mov
mov
movsl
push
or
in
mov
sarl
jne
sbb
fldt
xor
mov
mov
pushf
adcb
pop
jnp
jns,pn
mov
pushf
mov
loop
lret
sar
cmpb
imulb
outsl
sub
fcoml
mov
sbb
mov
enter
out
lods
add
es
push
out
push
ljmp
and
pop
dec
aaa
addr16
xchg
jno
movl
idiv
sub
adc
mov
mov
push
jnp
out
mov
decb
push
xchg
in
ljmp
andl
push
stc
and
sbb
les
or
insl
mov
push
lcall
sub
daa
insl
dec
les
add
hlt
out
and
call
test
stc
jbe
int3
xor
frstor
fs
int3
inc
inc
lock
dec
fwait
pop
pop
andl
and
ficomps
test
dec
mov
push
dec
or
cmpsl
hlt
dec
or
mov
iret
push
cli
cmp
ja
sbb
mov
loopne
fsubr
dec
jmp
arpl
xchg
femms
repnz
sbbb
lahf
in
loopne
inc
dec
dec
out
icebp
sub
fsubrl
add
jnp
push
std
mov
sub
clc
mov
xor
in
call
inc
dec
pop
cld
in
mov
pop
xor
popa
imulb
mov
test
inc
push
xor
jle
adc
fidivs
movsl
xchg
stos
clc
push
add
outsl
push
xlat
dec
fsubrp
dec
xchg
xchg
pop
inc
jb
mov
sar
stc
shll
imul
shlb
mov
adc
xor
cmpsb
test
pop
lret
lods
enter
jmp
arpl
test
cmp
cs
push
je
fldenv
loop
jns
mov
aas
pop
out
mov
jmp
sbb
inc
or
pop
incb
pop
arpl
or
outsl
push
push
cltd
add
add
lds
xor
push
mov
pop
jns
sub
out
add
mov
jbe
dec
sbb
pop
mov
popf
sbb
mov
dec
mov
insl
pop
push
ret
adc
jae
out
adc
jae
cmp
xchg
push
fstps
and
inc
push
sbb
cmp
out
jb
add
mov
popf
outsl
push
std
push
or
xchg
sbb
mov
jecxz
pop
and
scas
in
pop
out
cmpsl
fs
mov
xchg
cmp
call
icebp
fmull
mov
ret
notb
bnd
cltd
daa
scas
mov
lea
and
mov
add
sbb
enter
lods
and
mov
lods
cld
shrl
xrelease
and
jo
iret
insb
mov
mov
aas
jl
ret
stos
sub
mov
test
iret
mov
adc
pop
lahf
mov
xor
aad
jp
in
in
jg
jg
pop
jae
push
fmuls
dec
jae
movb
dec
divl
inc
mov
push
test
add
cmc
mov
notl
cli
mov
rep
xchg
lahf
shl
xor
std
mov
dec
mov
cwtl
dec
pushf
sub
das
lahf
mov
jp
cmp
rolb
jbe
or
notl
inc
pop
test
pop
pop
loopne
gs
jo
pop
insb
push
pop
or
loopne
scas
adc
inc
adc
push
push
loop
fstpl
mov
movsl
in
int
adc
push
sahf
or
pusha
xchg
adc
cmp
insl
clc
rcrb
mov
js
push
out
popa
and
jne
xorb
stos
push
pushl
sarb
popa
sub
ja
test
ret
pusha
hlt
outsb
xchg
xor
mov
mov
adc
fcompl
js
cmp
add
mov
xor
sbbl
inc
decl
jecxz
mov
arpl
incl
iret
inc
mov
int
push
lods
mov
xchg
popa
ja
das
jnp
cmp
ss
add
and
sbb
dec
insl
mov
scas
popa
mov
jp
dec
or
xchg
adc
call
out
or
push
inc
dec
in
push
lock
cmc
nop
shlb
push
and
fsubrs
dec
int3
test
jmp
sub
dec
add
dec
test
mov
loopne
lock
mov
or
daa
popa
mov
les
adcl
or
dec
ret
mov
cmovae
xchg
sub
in
sub
push
inc
in
dec
dec
mov
loope
sbb
mov
stc
and
xor
jns
pop
mov
push
aas
sbb
notb
das
sub
cs
jecxz
and
mov
sti
adc
loope
pop
cmovs
or
push
into
add
mov
dec
jp
inc
cmp
sub
sub
cmp
sub
test
clc
out
inc
mov
jnp
inc
daa
push
cmp
aas
cmp
adcl
fcomps
andl
add
stc
repnz
out
sub
insb
push
shr
sub
cmp
and
shlb
or
aad
addr16
push
test
fdivl
test
mov
jbe
cmp
enter
sbb
pop
ret
fsubrl
out
push
mov
cmp
nop
daa
test
adc
std
adcl
add
in
fcoms
xor
rcrb
scas
add
fidivl
rorb
add
lahf
mov
test
enter
aad
mov
mov
xchg
pop
repz
push
jne
pop
lods
mov
mov
fisttps
pop
loop
jmp
add
addb
sbb
add
insb
xor
mov
xor
lret
push
cmp
push
mov
cmp
jle
out
loopne
cmpsb
fmuls
cmp
sbbl
cmpsw
idivl
add
xlat
mov
movsl
jp
and
mov
mov
mov
pop
outsb
mov
jnp
mov
mov
lret
incl
or
mov
cmp
ds
push
ljmp
pop
loop
mov
sbbb
add
sbb
push
ljmp
js
jne
mov
or
jle
dec
mov
adc
mov
push
mov
ds
ja
sub
aad
fwait
jae
xchg
and
and
popl
pop
cmp
jb
dec
in
leave
cmp
jmp
aas
and
popa
popa
repnz
lcall
push
aas
push
js
shll
mov
push
jbe
and
and
leave
repnz
loop
leave
shr
rorl
pop
rolb
sbb
lea
pop
hlt
adc
cmpsb
bound
sar
fimull
lea
mov
xchg
pusha
lds
mov
pushl
out
stc
xchg
stos
int
call
jb,pt
pop
fsubr
adc
jge,pn
sar
shrl
fisttpll
sbb
cld
or
daa
fistl
ret
jb
lds
pop
and
or
dec
icebp
mov
mov
cmp
fldl
test
movsl
fwait
outsb
jecxz
adc
pushf
insb
fcomp
and
cmpsb
xor
jmp
mov
mov
push
inc
aam
mov
and
cmp
xor
pop
add
dec
int
or
ja
adc
xchg
inc
shlb
loopne
lods
add
inc
adc
insl
jb
adc
pop
cmp
inc
mov
cmc
clc
adc
pop
adc
jns
push
or
xor
adc
pop
pop
xchg
imul
nop/reserved
mov
stos
mov
inc
sub
add
adc
js
fs
popl
adc
sbb
fldenv
add
shl
inc
lret
sub
mov
jae
dec
lods
call
roll
mov
and
pop
repz
dec
fldln2
cmp
add
mov
jmp
ss
icebp
rcrb
test
lock
int
data16
shrl
or
loopne
fs
lock
cmp
dec
push
lahf
add
imulb
stos
push
push
sub
dec
dec
push
sbb
adc
repnz
xor
incl
xor
ret
std
cld
sbb
mov
jo
xchg
cmpsb
mov
lcall
mov
xchg
xor
sbb
out
fiaddl
mov
leave
pop
mov
rcr
inc
sbb
jecxz
adc
add
jmp
call
push
cli
rorl
pop
leave
inc
cmp
mov
push
and
out
xchg
pop
das
pop
lods
and
jle
mov
fiaddl
data16
and
mov
and
inc
cld
add
push
xchg
popf
xor
jecxz
mov
cmpb
xchg
xorl
mov
les
mov
sbb
add
adc
add
cmp
pusha
adc
in
mov
jge
mov
fisttpll
sub
sub
push
ja
in
mov
xor
fiadds
cmp
fwait
fs
sub
xor
add
sbb
loop
vshufps
outsl
mov
fwait
adc
jno
pop
ljmp
adc
adcb
das
mov
pushf
cmp
push
xor
mov
cmpsb
shll
movb
mov
pop
cltd
mov
mov
js
rclb
loop
sbb
mov
inc
push
adc
sbb
add
test
das
mov
daa
xor
imul
pop
push
addb
testl
pop
inc
movsb
lea
push
fidivrl
lock
jg
dec
out
dec
xor
mov
jns
add
push
sub
imul
repz
mov
or
jge
mov
aaa
inc
cli
adc
repnz
fists
out
jl
dec
stos
cwtl
push
lret
shl
loop
dec
add
mov
or
push
iret
jle
push
js
sub
xchg
js
movsb
aam
int
lahf
gs
in
fs
mov
flds
mov
dec
imul
inc
orl
mov
nop
xor
imul
test
cmp
std
push
sbb
dec
sbb
repnz
inc
xor
test
rol
pop
in
lods
cmp
inc
stc
imul
push
test
or
mov
sub
leave
ljmp
dec
icebp
inc
lret
jge
mov
or
xchg
jb
stos
mov
or
or
out
jno
cmp
and
pusha
add
mov
inc
and
xchg
ficomps
sbb
push
das
or
pop
push
sahf
test
xchg
ret
push
lcall
pop
sub
or
mov
mov
aam
add
mov
int
jmp
push
scas
xlat
sub
jo
mov
das
mov
decb
clc
xlat
dec
jl
fnstcw
xor
mov
in
lcall
pop
push
sub
xor
int
fcomps
addr16
mov
ret
out
dec
divb
mov
jecxz
push
sti
xor
pop
nop
rclb
dec
dec
insb
push
jge
xor
in
mulb
and
mov
sub
push
xchg
daa
mov
dec
jb
jnp
mov
movsb
add
test
loopne
lods
in
mov
notl
mov
push
gs
push
pop
or
in
prefetch
loope
inc
lcall
cmpsl
imul
sbb
out
loop
rcl
into
and
jb
jmp
push
nop
mov
orl
xor
iret
dec
lahf
pop
out
popf
and
xchg
push
shl
imul
cmp
daa
push
push
add
rcr
out
adc
sub
jge
outsl
push
aas
sub
ds
xchg
sti
daa
rcll
adc
dec
imul
mov
stos
test
push
jb
das
fwait
and
xor
jnp
in
lret
insb
sbb
repnz
ret
inc
pop
gs
rclb
mov
std
shlb
ret
loop
push
in
cmc
adcl
xchg
into
jbe
cmp
push
imul
fdivs
scas
cltd
mov
jecxz
mov
add
test
xor
xlat
nop
cwtl
jmp
in
or
dec
add
aad
cmp
pusha
or
aad
test
data16
popf
cmp
jmp
xor
or
test
cli
pop
cs
xorl
arpl
mov
push
jecxz
mov
cmp
in
pop
scas
mov
lcall
xorl
mov
cmp
insb
es
push
xchg
adc
and
paddusw
jmp
or
jno
xor
pop
ljmp
daa
std
cmp
mov
and
xchg
andb
sbb
add
sub
sbb
cmp
sub
test
ficoms
sbb
push
pop
sbb
inc
sub
jge
dec
sbb
in
add
mov
jl
pop
popa
lods
fndisi(8087
push
or
pop
pop
ja
push
mov
fldenv
cmpsl
cmc
mov
and
mov
ss
jle
cmp
js
cmpsb
inc
aas
lret
addb
enter
mov
xchg
xchg
clc
pop
xchg
sti
test
push
ja
adc
xchg
add
test
in
js
push
inc
mov
loopne
xchg
xchg
xchg
scas
sub
push
sbb
xchg
push
push
shrl
dec
jl
js
pop
dec
loop
pop
pop
inc
mov
test
mov
pop
lods
mov
mov
mov
ficompl
and
sahf
sahf
sub
fnsave
mov
enter
push
add
mov
es
aas
push
adc
push
pop
xor
cwtl
adc
adc
mov
shll
cmp
sbb
pop
adc
rolb
xor
add
imul
ret
fwait
or
jb
xchg
pop
jns
mov
rcrb
inc
fs
mov
out
xor
loope
in
dec
lds
shll
cmp
popa
xchg
popf
int
insb
mov
jnp
cmpsl
cmp
clc
je
int3
cltd
int3
cmp
lods
xchg
rol
shrl
mov
pop
rcrl
add
mov
ja
addr16
out
xor
jge
clc
mov
mov
jnp
jae
xor
cmp
inc
popl
xor
fsubs
sbbb
repz
popa
aad
ss
sar
mov
sbb
aas
push
pop
fadds
stc
mov
dec
nop
pop
in
pop
jae
out
lods
shrb
popf
add
push
cmp
sahf
adc
int3
pushf
push
mov
pusha
leave
sarb
outsl
mov
decb
movsl
xlat
psadbw
push
sbbl
sub
and
imul
push
or
mov
sbb
iret
dec
imul
ljmp
mov
hlt
push
out
adc
jl
or
xchg
ret
nop
xor
mov
daa
xchg
ret
xor
lcall
stos
xor
mov
mov
daa
and
outsb
mov
rcrb
mov
and
sbb
leave
cmp
ds
and
xor
xchg
aam
outsb
xor
xor
insl
ret
je
dec
fmulp
sub
bound
lahf
fistpll
xor
outsl
push
sbb
dec
lret
cltd
cmp
lret
push
push
inc
fcmovnbe
repnz
and
int
mov
call
jae
xor
cs
jmp
pop
push
sub
loopne
hlt
adc
scas
jbe
pushf
lret
dec
push
out
ret
lahf
pop
popf
sahf
jge
scas
adc
lcall
pop
xchg
mov
push
jae
lds
insl
xchg
mov
int3
or
idivb
push
sbb
lea
jns
jbe
fidivrs
js
sbb
lea
adc
loopne
gs
fstpt
cmpsb
iret
aad
sarb
mov
inc
call
mov
add
pop
add
jecxz
mov
aad
jmp
cmpsl
xchg
sbbl
jbe
add
xchg
sbb
push
and
rcrl
xor
xchg
not
sbb
mov
jle
inc
adc
in
or
pop
sub
dec
cs
sbb
mov
push
or
and
imul
sbb
mov
mov
shrl
sbb
inc
fnstsw
test
je
fists
or
leave
lock
mov
xchg
outsl
inc
shrb
mov
xor
push
imul
xchg
cmp
rorb
sbb
iret
das
stos
push
xor
sbb
repz
sar
sub
lods
dec
xlat
call
sub
mov
or
and
sub
xor
imul
ss
iret
jbe
and
pop
test
push
mov
jle
nop
jle
mov
push
lds
popa
jae
jmp
cmc
shlb
in
arpl
aas
lock
or
sub
out
push
jnp
inc
fwait
sub
lret
repz
scas
sbb
mov
push
test
out
sbb
lret
cmp
shl
fldenv
lcall
fcmovu
fwait
mov
and
ljmp
shlb
cltd
jg
shll
or
xor
pusha
stos
scas
adc
pop
aad
jno
jp
adc
shll
sbb
push
int
fnstenv
xorb
mov
add
xchg
and
test
iret
xorl
xchg
push
in
jb
xchg
fldl
fcompl
push
cmc
sub
int
popf
sbb
aas
daa
lock
out
dec
push
mov
imul
cmp
scas
aaa
es
mov
movsb
sub
cmpsl
loope
cmpb
pushf
adc
mov
push
ret
subl
pop
mov
jne
test
jb
je
xchg
leave
flds
jns
aas
cltd
popl
lret
fisubl
pop
xor
mov
jns
popf
xlat
into
inc
push
jns
or
pusha
enter
xchg
loope
decb
cmpsb
repnz
sbb
cmpsl
outsl
and
icebp
int3
lea
xchg
dec
imul
arpl
sti
push
js
icebp
int3
adc
dec
aam
dec
sbb
dec
cmp
sub
scas
sbb
sti
dec
mov
inc
hlt
daa
mov
mov
lds
inc
ss
sub
jo
pop
xchg
add
adc
stos
jle
or
test
pop
pop
adc
xchg
out
stos
mov
loope
push
pop
int
out
dec
pusha
bound
lret
adc
push
rolb
xchg
pop
inc
daa
js
rorb
ret
test
or
nop
rcll
jo
divl
call
add
mov
out
out
rcrl
aaa
cmp
rclb
popf
cmpsl
mov
test
push
clc
xchg
dec
xchg
test
out
std
mov
jp
ficompl
mov
adc
sti
test
cmpsl
repz
push
imul
add
push
mov
mov
fists
fsub
xchg
xchg
mov
mov
jns
adc
scas
mov
adc
and
mov
mov
ja
rorb
xchg
sti
cmp
jg
push
mov
or
imul
pop
xor
lret
add
cltd
pop
and
mov
sti
mov
fwait
int
lods
mov
mov
int
jo
jmp
clc
mov
inc
inc
dec
or
and
cmp
cwtl
aaa
sbb
xchg
mov
fistps
mov
out
andl
jo
mov
mov
and
xlat
fnop
sub
and
cltd
shll
sub
jmp
mov
pop
roll
pusha
push
cmp
sub
inc
mov
xor
jmp
xchg
in
mov
ja
insb
fisttpl
stc
pop
adc
xchg
shll
cmp
aam
movsb
aas
popf
out
push
add
lahf
mov
sbb
cld
inc
add
repz
lods
out
repz
shll
cmp
jnp
cltd
jl
dec
fidivrs
and
push
adc
mov
imul
push
inc
jg
ret
pop
scas
ffree
les
jmp
lret
sbb
aam
or
sub
mov
sahf
mov
mov
xlat
push
dec
cmp
mov
out
iret
adc
loopne
imul
iret
and
adc
xchg
lret
xchg
int3
xchg
scas
iret
int3
or
xchg
lcall
stos
mov
mov
cmc
lea
mov
sub
cmpsl
push
push
js
inc
adc
jecxz
out
xor
js
into
xchg
pop
lret
cmp
cmpl
les
and
rcrb
inc
clc
xchg
sbb
xchg
sbb
pop
push
xchg
lods
outsl
ror
lods
sub
cli
fnsave
mov
dec
xchg
jecxz
test
ja
jae
fs
mov
imul
test
sub
in
sub
scas
mov
notb
lods
jp
lret
xchg
push
inc
dec
loopne
xchg
dec
mov
cmp
int
or
pop
pop
stos
lahf
and
sub
int
int3
neg
sbb
or
mov
jecxz
adc
stos
sbbb
leave
add
roll
or
cmp
lods
dec
sbb
xor
jne
test
ja
sbb
xor
mov
insb
push
mov
bound
push
popa
ret
push
das
mov
push
pop
fbld
ss
add
jecxz
cmp
out
xchg
outsl
cld
daa
fsubrp
iret
xor
xor
sbb
lock
mov
cmp
dec
adc
sub
inc
js
cmpsb
divl
push
shrl
movsl
lret
fucomp
mov
aaa
ljmp
je
sub
cmp
je
ja
outsb
push
sbb
cmpsl
mov
sub
push
mov
push
dec
in
xchg
into
add
jnp
cmp
test
js
add
pusha
outsb
pop
sub
pusha
repz
aas
rcrl
pop
and
dec
std
xlat
or
dec
jl
incb
sub
pop
fbld
cltd
mov
repz
mov
and
adc
inc
es
mov
adc
xor
xchg
loope
xchg
fnstcw
cmp
je
sub
ret
add
shrl
cmp
inc
or
xor
ljmp
sbb
pop
sbb
mov
rorl
mov
aad
dec
and
lret
pop
lcall
mov
es
loope
rcr
les
and
add
push
adc
sti
cmpsb
fcoms
sub
jp
popa
pop
mov
ja
jo
stc
mov
xor
inc
add
clc
mov
jne
dec
ret
mov
pop
mov
push
sbb
sbb
cmpb
outsb
mov
jne
aas
push
fcmovu
shlb
add
inc
jle
xor
rcrl
inc
jmp
pop
pusha
xchg
out
clc
scas
dec
jle
or
test
mov
pop
sub
setbe
out
push
lret
inc
add
mov
dec
inc
ss
push
inc
xor
pushaw
nop
xlat
add
es
nop
xorl
cmp
lea
xchg
or
in
jns
popf
outsb
inc
in
shlb
pop
lcall
or
inc
dec
cli
mov
imul
dec
adc
pop
gs
call
fsubl
or
bound
cmp
lock
enter
inc
push
adc
fwait
dec
mov
scas
cmp
into
dec
movsl
cld
or
lods
mov
mov
jle
aad
das
mov
adc
inc
xchg
in
cmc
mov
adc
inc
ret
dec
jb
jo
jne
in
sti
test
pop
mov
adc
test
xchg
or
adc
mov
movsb
insb
insl
mov
outsl
icebp
ljmp
aas
lods
xor
test
cmp
sti
mov
rcr
add
ret
popa
addb
cmpsb
insl
ljmp
cmc
ja
dec
test
jl
mov
sbb
jg
test
addr16
insb
sahf
fcomi
mov
in
push
repnz
cmp
aas
mov
sti
mov
push
adc
daa
or
test
movsl
mov
hlt
cltd
dec
fnstcw
popf
mov
pop
lds
jle
ds
shrb
bound
outsb
push
pop
sub
xor
fbld
outsl
je
push
aaa
mov
xchg
jecxz
mulb
or
mov
adc
mov
and
dec
lea
or
xchg
aad
pop
out
pop
cmpsb
xchg
push
or
loop
ljmp
mov
jae
sbb
icebp
icebp
and
dec
lret
cmp
jge
ret
jnp
fnstsw
js
mov
pop
push
fidivl
mov
mov
add
push
lret
je
push
ds
or
mov
mov
stc
sbb
xlat
hlt
loopne
sbb
jo
pop
inc
notl
call
les
dec
mov
pop
movsl
leave
ret
jo
rol
lea
test
mov
repz
and
xchg
loope
xor
cmp
mov
mov
xor
or
int
push
and
dec
les
movl
jmp
int
mov
pusha
out
in
add
jnp
add
inc
int3
sahf
xor
inc
adc
test
add
mov
insb
jp
mov
xor
push
mov
add
js
loopne
push
adc
test
push
sub
test
inc
inc
nop
mov
inc
pop
dec
mov
popl
pop
pushf
aas
mov
push
in
add
out
xchg
sbb
jl
dec
add
add
xor
add
mov
fwait
push
test
jg
cmp
pop
lea
cmp
mov
mov
cmp
pop
add
cmpsl
fdivrs
test
cli
pop
movsb
or
imul
push
xlat
and
xlat
inc
or
loop
into
sbb
mov
jnp
and
mov
imul
jae
jp
dec
mov
fs
lds
dec
or
lock
or
inc
xor
cmp
imul
scas
in
adc
jmp
inc
pop
push
mov
rclb
ficomps
pop
add
fsubrl
je
sbb
add
xorb
add
in
out
jae
pop
mov
movsl
loope
inc
or
jnp
pop
ret
into
dec
sub
xchg
xor
mov
int3
shll
ret
dec
fisubl
and
fs
ds
mov
inc
or
jno
mov
pop
stos
jns
mov
xchg
leave
es
dec
ret
cs
dec
sarb
stos
dec
and
add
mov
test
adc
adc
imul
xor
mov
add
push
sbb
or
movsb
lahf
scas
and
sub
outsl
cwtl
bound
mov
out
nop
dec
dec
mov
aad
pop
addr16
lret
stos
dec
or
add
jl
mov
push
in
dec
xor
push
fnstsw
fisubs
xchg
dec
sbb
dec
push
jp
jae
cs
lds
ss
mov
icebp
call
fwait
mov
pop
push
aas
mov
enter
fimull
mov
pop
sbb
jns
sub
insb
fidivl
dec
data16
mov
add
sbb
out
movsb
mov
xor
jle
movsb
loope
jl
icebp
push
in
jge
sub
sbb
shlb
loopne
jle
inc
mov
test
mov
add
fnsetpm(287
xor
push
add
lret
adc
xor
mov
test
sub
add
or
pop
nop
setnp
stos
out
movsb
adc
adc
mov
ss
into
gs
jecxz
fsubrs
and
xchg
in
pop
lret
pop
fdivs
and
jmp
outsl
std
into
xlat
jge
cs
inc
sub
stos
cli
lcall
xchg
in
cmp
xchg
add
int3
sti
cmp
pop
jbe
fisubs
into
push
mov
pop
add
in
mov
jo
add
lds
inc
push
and
fildl
mov
jle
inc
sbb
cwtl
jecxz
xlat
inc
in
sub
pop
lret
arpl
inc
lods
or
divb
mov
inc
fdivrs
sahf
arpl
adc
testl
sub
popa
movsb
xor
cmp
mov
jl
stc
sti
out
dec
mov
scas
mov
xchg
adc
inc
mov
sbb
movsl
pop
adcl
inc
xor
sub
sar
jo
push
ljmp
in
and
ret
je
ret
cmpsb
xchg
fwait
sbb
mov
cmc
data16
xchg
push
lret
jecxz
in
lods
fisttpl
stos
fidivs
lahf
not
dec
add
rcll
dec
sbb
inc
jo
jl
push
insl
jnp
mov
jle
add
jae
or
je
lock
adc
bound
mov
and
cmp
xor
fcmovbe
scas
sub
pushf
push
jge
sbb
lahf
les
cmpsb
int3
push
ss
mov
in
pusha
dec
in
adcb
xchg
jno
sub
xlat
add
xor
insl
adc
push
jmp
pusha
repnz
clc
nop
inc
cwtl
pop
aam
int
das
mov
dec
cld
push
xor
mov
mov
xor
add
inc
fimuls
mov
push
dec
sub
mov
testb
insb
pop
fldenv
jno
movsl
jg
lret
jp
sbb
outsb
cmp
repz
mov
xor
aad
ja
push
call
rcll
mov
jnp
inc
cmp
mov
cld
cmpsl
mov
pop
rcrb
xor
jmp
mov
leave
and
pop
push
push
leave
fisttpll
sub
pop
adc
sub
sbb
gs
push
mov
xchg
out
and
rol
inc
xchg
popf
mov
or
sub
sub
sub
stos
insl
jno
lcall
mov
cmpsl
shll
std
leave
icebp
mov
mov
mov
and
leave
adc
fucomp
in
rolb
sti
nop
ret
add
mov
jno
xchg
leave
push
or
ss
xchg
mov
jl
sub
daa
hlt
add
pop
push
xor
scas
xor
jne
das
movsl
xor
pop
jmp
push
jmp
ja
inc
outsl
add
add
inc
inc
pop
les
mov
shl
and
inc
add
push
cmp
sbb
jns
ja
ror
mov
int3
lock
stc
adc
sbb
sahf
sbb
push
and
fimull
xor
stos
sarb
dec
add
xor
cmpsb
mov
dec
sti
repnz
adc
and
cmc
pushf
cmp
jo
mov
jle
push
inc
loopne
outsb
dec
inc
push
cmp
fisubrs
imul
pop
sub
test
int
push
xorb
xor
and
subl
xchg
inc
jp
lcall
out
lea
sbb
pop
pop
movsb
scas
fistl
pop
xor
xchg
inc
push
js
out
sbb
insl
inc
aas
sub
mov
lret
std
xchg
xorl
or
sbb
into
das
sbb
lock
in
out
and
aam
xor
mov
adc
mov
mov
mov
out
roll
mov
loope
call
js
push
or
mov
or
scas
xchg
bound
popf
xor
add
sub
scas
mov
push
xchg
nop
js
imul
jnp
pushf
inc
in
dec
mov
cs
aas
jl
mov
and
mov
cmpsl
xchg
in
dec
enter
in
or
leave
shr
dec
lcall
xor
bound
call
and
bound
inc
mov
ffree
xchg
cmp
and
pop
enter
or
sub
lret
pop
cmp
mov
out
loop
fadd
mov
xchg
push
and
test
mov
jp
or
inc
mov
sub
lods
ret
or
dec
test
pop
xchg
stc
pusha
mov
inc
mov
sub
stos
inc
negb
pushf
push
loope
adc
xchg
fs
testb
jb
lods
repnz
mov
mov
xchg
shrb
xchg
lret
mov
inc
stc
icebp
es
nop
in
and
loope
fcomp
sahf
xor
xchg
mov
nop
jg
repnz
xchg
gs
cmp
jle
dec
or
pusha
sub
xor
out
repnz
or
loopne
andb
into
ljmp
test
pop
mov
pusha
fwait
lcall
dec
lret
hlt
and
inc
dec
daa
inc
int3
adc
andb
add
iret
xchg
pop
jle
lock
lea
push
inc
hlt
sar
push
mov
test
sub
inc
shl
repz
push
xlat
mov
jae
ja
fldt
push
call
sbb
hlt
or
hlt
push
insb
incl
lret
pop
iret
repz
movsl
cmp
lods
out
and
shl
popf
in
jae
add
adc
les
mov
jmp
mov
aaa
lret
xchg
add
push
int3
lret
fwait
test
in
mov
sub
jbe
dec
push
and
loop
lods
mov
js
push
icebp
cltd
and
jno
pop
mov
shll
repnz
xchg
push
or
les
mov
call
cmp
mov
dec
aad
cld
mov
inc
pop
in
subb
das
pop
arpl
adc
mov
pop
xchg
jmp
add
push
cmp
test
dec
imul
ror
lahf
jns
and
push
stos
push
sbb
mov
lcall
aam
dec
pusha
xorb
ljmp
mov
jg
adc
mov
sub
push
fwait
scas
xchg
push
subl
outsl
dec
and
add
insb
mov
jae
hlt
fisttps
cmp
popa
sub
out
cmp
mov
jb
and
mov
xchg
or
push
vpor
xchg
xchg
cmp
dec
in
pusha
mov
jl
adc
out
mov
popf
jmp
aam
xor
adc
cmpl
inc
pop
cmpsl
sub
ret
push
jmp
cmp
ljmp
fildl
in
dec
fwait
xchg
sub
push
insl
cmp
xchg
lock
cmp
dec
jle
loope
cmp
sub
stos
int3
mov
shrb
arpl
cmp
push
leave
ljmp
ficompl
std
add
clc
daa
push
repnz
fwait
sbb
scas
cli
adc
ss
repz
das
sarl
movsb
or
rcll
xchg
fists
mov
arpl
fisttpll
imul
sarl
out
or
stos
fisttpll
lock
mov
pop
ffree
popa
frstpm(287
pop
sub
lahf
inc
cmp
mov
adc
int3
lods
sub
lret
test
mov
xchg
xchg
sbb
mov
xor
inc
pushf
in
mov
scas
mov
xchg
cmpsl
repnz
xchg
mov
icebp
das
sub
adc
cli
ss
test
ret
in
push
pop
dec
insb
andl
xor
lret
pop
fimuls
hlt
jo
mov
sbb
push
xor
xor
xor
sbb
xchg
or
sbb
sbb
push
push
out
mov
jp
loopne
loope
dec
call
test
inc
sub
out
push
scas
fucom
fnstsw
pop
es
dec
push
inc
and
add
pusha
add
rcrb
imull
mov
mov
xor
test
out
pop
lods
sub
mov
or
cld
lock
loope
ja
xor
imul
mov
mov
or
les
jp
cli
dec
cmp
mov
stos
pushf
imul
lret
ja
fbld
dec
or
bound
xchg
loopne
leave
jo
or
pop
xor
lcall
jno
lcall
xorl
lea
in
and
xor
jmp
push
mov
or
xchg
aad
dec
js
add
test
xchg
es
fcmovnbe
das
adcl
xacquire
lahf
dec
loope
jg
jp
xchg
rcll
ret
lea
inc
sbb
dec
xchg
mov
pop
sahf
lods
mov
into
push
or
repz
fwait
or
shll
shrl
xchg
cli
arpl
jbe
dec
shl
inc
inc
jnp
push
jae
in
sub
es
jle
sub
add
out
imul
ljmp
sbb
adc
adc
pop
xor
push
stos
rorl
dec
cld
dec
or
lahf
push
clc
inc
or
jg
ret
test
fldenv
es
cs
pusha
add
sub
jle
pop
and
mov
dec
outsl
xchg
sub
outsb
addr16
mov
add
mov
inc
call
dec
cs
xor
inc
sbb
rclb
adc
in
mov
inc
pop
scas
mov
xor
int3
xor
imul
lock
fcompl
adc
adc
jge
iret
data16
push
aam
daa
fbstp
and
pop
rclb
mov
mov
sbb
sbb
xor
or
mov
add
jae
ds
mov
xchg
sub
sub
and
jne
daa
cmp
and
mov
rorl
test
push
mov
bound
pop
push
aaa
pop
insb
push
pop
imul
pop
out
out
xor
outsl
mov
vcvtsi2sdl
in
push
xchg
adc
mov
stos
or
imul
and
cmc
std
sub
lahf
aas
push
adc
push
jo
adc
int
adc
or
pop
ds
mov
dec
xchg
movsl
mov
lcall
shr
test
jne
jg
daa
add
addr16
jp
mov
les
jbe
push
sub
and
jp
and
jp
stos
in
jge
add
push
repz
dec
dec
add
and
das
out
xchg
movsb
jmp
or
push
cmpsb
ljmp
fisubl
repnz
mov
pop
or
and
ficoms
rcl
jb
aaa
jb
or
aam
jmp
and
popa
dec
imul
enter
addr16
test
pop
and
call
cld
dec
mov
fcmovne
jae
xchg
mov
mov
into
mov
inc
push
or
es
cmp
inc
loope
lods
and
in
add
pusha
mov
sbb
out
mov
stos
cmp
add
daa
into
mov
pop
xchg
lret
push
xchg
inc
mov
sbb
cmp
lods
xchg
cmp
lcall
aam
xor
sub
add
sub
mov
adc
out
cwtl
inc
jle
push
cltd
lret
std
adc
out
dec
pop
mov
outsb
dec
inc
add
cmp
sbb
or
or
call
jp
cmpsb
icebp
mov
in
inc
cmpsl
jbe
inc
ficoms
rorl
cmpsl
pop
fcoml
cwtl
shlb
push
sbb
sbb
mov
movsb
ss
mov
cmp
jb
push
incb
test
pushf
andb
mov
mov
pop
inc
adc
xchg
jmp
jecxz
test
sub
scas
les
cmp
push
dec
les
ficompl
pop
and
das
pop
xchg
mov
push
nop
mov
ljmp
or
addl
pushf
int3
cwtl
xor
je
xor
or
jle
into
bnd
sbb
sti
add
sbb
fcompl
sbb
cmpsl
or
and
mov
jmp
das
addr16
fisubs
shrb
inc
adc
xchg
aaa
adc
mov
lods
test
lret
inc
notb
mov
jnp
loope
aam
sub
add
dec
int3
scas
pop
inc
lahf
fimull
aas
adc
fs
adc
add
psubusw
push
xchg
cld
lock
lods
mov
inc
adc
xchg
jno
sub
jo
pop
push
lock
aam
imul
clc
rolb
jge
inc
int3
dec
lods
add
xchg
lea
jmp
mov
gs
fs
mov
imul
push
and
and
div
jp
inc
push
jp
flds
lds
xor
xor
shrl
inc
cmp
cwtl
scas
mov
fdivrs
xchg
lea
out
sub
xchg
push
push
out
enter
sbb
lock
xor
enter
imul
ljmp
adc
pop
js
push
mov
lcall
loop
xor
and
scas
test
call
push
mov
loopne
mov
sub
lcall
mov
mov
push
orl
xchg
lahf
jne
stos
inc
xor
pop
cmc
sbb
xchg
fcompl
pop
popa
sti
xor
add
push
add
push
sahf
into
imul
cmp
fstl
add
test
cmpsl
sub
int3
sbb
add
sub
addr16
jbe
test
xchg
fisubrl
sub
stos
ret
js
repnz
inc
mov
xchg
mov
lds
lret
xorl
push
adc
jne
jne
lahf
out
mov
lods
fisttpll
jmp
jg
jno
imul
push
adc
pop
movsb
jae
jae
or
jge
mov
mov
lcall
xchg
push
jno
mov
pop
mov
incl
cmpsb
xchg
pusha
sub
out
sbb
int3
sub
fbstp
inc
sbb
mov
repz
and
and
push
bound
fisttps
jns
or
nop
fistl
and
push
stos
cmp
cmpsb
pusha
push
jbe
xor
or
stc
jg
inc
push
in
push
pop
fsubl
pop
push
xchg
repnz
add
adc
aaa
xchg
cmp
inc
test
jmp
pop
add
shll
push
sub
push
or
jmp
inc
repz
mov
cmp
jge
mov
xor
js
lcall
xchg
fs
je
movsb
sub
inc
orl
enter
lret
push
pop
lock
shlb
adc
mov
push
adc
lea
fmuls
pop
pop
or
add
iret
dec
or
aad
scas
mov
xor
xchg
pop
cmc
cmp
xor
adc
rcl
mov
into
cmp
jg
arpl
pop
add
adcl
js
adc
fldt
mov
sub
lahf
lock
cmpsb
cld
arpl
sbbb
jnp
popf
push
cli
xlat
int
mov
lcall
sub
cmp
test
xor
mov
movsl
and
pop
lret
cmp
js
add
js
pop
aas
jbe
lea
add
xor
inc
xchg
insl
movsb
daa
iret
ret
cmpsl
iret
dec
aam
loopne
xchg
and
popa
mov
aam
cmc
lods
mov
and
jg
sbb
sub
pop
mov
lea
pop
test
jmp
gs
fs
inc
cmp
repnz
aas
mov
fisubrs
cli
fdivs
push
shlb
cmp
pop
cmpsb
add
test
orb
sbb
test
cmp
xor
aad
mov
cmpsb
fsubs
fwait
push
out
std
dec
pop
xchg
mov
add
pop
pushf
mov
mov
jp
xorb
push
sbb
and
subl
in
or
fsubrs
cltd
mov
and
dec
mov
arpl
dec
aas
lret
jno
jno
dec
and
mov
sbb
mov
xor
fisttps
int
sub
rcr
imul
ret
nop
gs
lret
xor
push
popa
cmc
jmp
mov
cld
cmp
fstps
push
mov
mov
int3
push
sbbl
xchg
cmc
loopne
xlat
push
mov
lret
repnz
mov
scas
push
sub
xor
fwait
gs
js
test
adc
and
repz
enter
fsubrl
mov
ret
movsl
fiadds
xor
in
nop
sbb
insl
push
inc
je
scas
xor
mov
mov
mov
xchg
sbb
or
mov
push
pop
fnstsw
aaa
xchg
xchg
ss
xor
stos
inc
xor
rclb
push
mov
lahf
clc
jne
fs
es
pop
sbb
dec
mov
mov
movlps
mov
ret
dec
or
xchg
push
sahf
in
and
in
fistpll
icebp
dec
mov
dec
cmp
mov
in
cmc
fcoml
mov
insb
cld
jp
jp
jb
mov
mov
ds
pop
into
pop
cltd
sub
aaa
dec
inc
scas
adc
push
push
loop
sub
jp
inc
std
lret
inc
push
push
lods
and
sub
bound
jae
in
cmpsb
ret
inc
lret
ja
cmp
mov
xor
mov
test
xor
fistl
add
roll
lock
sar
jmp
nop
adc
sti
inc
xor
xor
loop
mov
pop
add
dec
xchg
or
insl
push
arpl
dec
test
mov
clc
in
sub
cmp
xchg
mov
push
adc
out
inc
stos
and
mov
sbb
es
and
dec
aam
fisubs
out
dec
pop
hlt
sbb
add
dec
sbb
into
loope
push
push
repz
cmp
decl
and
sub
fwait
xchg
sahf
shlb
xchg
cli
jge
nop
test
shll
out
js
ss
mov
in
inc
mov
inc
xchg
ljmp
aas
mov
rorl
fs
in
or
add
pop
jecxz
dec
mov
inc
mov
int
push
fmul
out
cmp
mov
xor
movsb
dec
sbb
in
ja
push
cmc
sub
in
jne
inc
cmp
mov
sbb
push
ret
lret
aas
jmp
lock
jb
or
dec
and
cmp
dec
cwtl
popa
lret
push
or
test
loopne
jae
mov
inc
filds
cmp
ss
loopne
xchg
test
mov
pop
imul
lock
cli
sbb
sub
ret
push
lea
in
sti
enter
pop
cltd
clc
xchg
lcall
aad
subl
cmp
add
sbb
cwtl
adc
dec
pop
push
adc
es
adc
aaa
in
adc
hlt
xchg
xchg
ljmp
xor
jno
popf
pop
pop
adc
dec
out
sub
xor
mov
xchg
mov
xchg
lock
and
fadds
mov
pop
sub
inc
mov
sub
rolb
ds
pop
in
repz
repz
mov
ljmp
fsubrl
add
fs
mov
cmpsb
cmp
je
dec
test
stc
mov
dec
dec
push
pop
jne
add
pop
pushf
icebp
and
mov
jae
enter
jl
out
sbb
ret
and
mov
push
add
out
hlt
push
in
mov
movsb
outsb
test
pop
adc
aaa
in
dec
movsl
test
add
jae
pop
inc
daa
insl
pop
xchg
in
cmc
icebp
sub
cld
inc
movsl
outsl
dec
mov
sbb
cld
daa
daa
sbb
mull
jbe
call
aaa
gs
out
jmp
movzwl
cmp
pop
loop
push
dec
lret
movl
push
pop
pushf
gs
ret
out
mull
sbb
adc
bswap
mov
fdivrl
dec
xchg
add
dec
cs
add
in
orb
mov
in
inc
in
cli
xor
int
test
jecxz
iret
inc
xchg
dec
rorb
notl
out
insb
lret
repz
ror
cmpsl
pop
out
push
mov
jnp
mov
popa
outsl
adc
loop
dec
add
icebp
adc
and
sub
movsl
dec
jge
loop
mov
lods
ds
jecxz
ljmp
out
ss
int
pushf
push
or
push
adc
mov
test
push
cmc
ss
push
push
fwait
sub
hlt
and
lock
add
fstp
sbb
icebp
add
mov
dec
fwait
dec
daa
fisttps
mov
test
push
lret
jp
pushf
imul
aaa
stos
je
sbbb
std
inc
stos
mov
sub
xchg
popf
adcl
mov
call
inc
imul
add
ss
repz
mov
add
call
popf
sbb
popa
out
movsl
sbb
or
sbb
xchg
insl
sub
cld
icebp
in
xchg
mov
movsl
or
or
dec
repnz
test
stos
mov
xlat
ja
inc
mov
adc
scas
inc
imul
xorl
bound
jo
adc
ss
push
aad
mov
lcall
dec
adc
scas
and
push
int
stos
std
xor
inc
adc
call
frstor
cmp
pop
mov
push
inc
sbb
adc
xor
les
ret
loope
dec
dec
inc
sub
sub
push
aam
dec
insl
mov
shll
adc
inc
int
dec
adc
mov
add
mull
xor
cmp
pop
mov
pop
adc
sbb
in
fisubs
dec
sub
outsl
stos
cmp
mov
flds
cmc
push
ret
and
lret
shll
aad
icebp
or
mov
xor
or
ja
mov
inc
xorl
pop
mov
je
imull
mov
dec
insl
sbb
mov
xor
push
hlt
and
push
pop
scas
dec
movsb
cmp
and
inc
fsub
mov
hlt
movsl
push
into
mov
pop
mov
add
popa
lea
mov
insl
icebp
fstpl
test
mov
jmp
and
pusha
cmp
es
pop
push
or
dec
cwtl
xlat
mov
loope
mov
pop
ret
insl
mov
aad
fs
sub
pop
mov
fcomp
dec
mov
sbb
rcrb
inc
bound
out
loopne
jp
or
test
mov
inc
dec
sub
subl
jmp
push
xor
mov
add
mov
sub
sub
jno
push
inc
pop
xorl
orb
shl
pop
aaa
jmp
push
cltd
ja
mov
xchg
and
shl
in
test
fmuls
mov
add
divl
cld
and
xchg
fnstcw
ficomps
testb
in
pop
xchg
loopne
out
and
lret
movb
mov
in
jl
sbb
cmp
add
pop
adcl
in
and
es
push
cli
hlt
jp
rcrb
jp
xor
pop
sarb
pop
ret
mov
sbbl
cmpsl
mov
inc
pop
mov
pop
mov
clc
cmp
mov
or
xchg
push
inc
dec
addr16
sub
dec
cs
dec
arpl
xchg
shll
jge
mov
push
jg
xor
lea
outsb
push
mov
jae
dec
les
push
ljmp
fdivrs
pop
inc
sub
add
jge
jo
xor
cmp
insl
jp
xchg
and
shl
or
jnp
pop
loop
clc
aam
mov
bound
mov
jne
loop,pt
shlb
imul
jl
stc
outsb
jl
jns
int
add
divl
std
mov
xchg
sti
adc
xchg
cli
inc
dec
sbb
adc
jge
dec
es
adc
inc
inc
jecxz
or
aaa
lahf
nop
sub
mov
push
dec
fucomi
sbb
jb
cmpsb
bound
mov
daa
mov
shrl
mov
inc
mov
jno
scas
popa
push
enter
mov
adc
dec
sahf
repz
orb
fptan
inc
jge
pop
pop
out
lods
jbe
repz
xor
xlat
xor
push
fldt
inc
inc
or
mov
nop
ret
gs
fcompl
test
push
mov
mov
jl
movsl
jmp
sbb
in
pop
adc
mov
mov
mov
mov
out
out
repz
out
flds
push
or
and
call
mov
pop
adc
push
sub
ret
leave
jae
sub
dec
cld
mov
aam
or
sbb
xor
jno
test
addr16
scas
pop
add
dec
loop
sub
scas
ds
and
fdiv
pop
fsub
push
add
popl
aas
js
pop
and
fcomp
cwtl
pop
sub
push
cmpsl
rorb
jecxz
fisttps
xchg
rorl
xor
bound
push
rcll
maskmovq
testl
adc
adc
push
lea
int3
lret
lcall
ja
dec
xchg
sub
adcl
mov
mov
fcompl
imul
add
inc
data16
inc
fisubs
jl
lock
int
cmpsl
out
les
fwait
xchg
cltd
mov
orl
jle
push
aas
or
les
test
and
in
cmp
jb
xor
sbb
je,pt
jne
fimuls
or
jle
lea
outsb
int
call
imul
aad
pop
lods
fisttps
dec
pop
fwait
icebp
cmc
push
pop
mov
mov
add
cmp
mov
cli
jnp
pusha
fs
fidivl
xlat
aam
fs
xor
lods
jle
es
push
jo
jo
hlt
mov
and
and
cmc
jmp
jge
dec
out
faddl
outsl
jecxz
jb
inc
fucomip
jno
add
repz
mov
fcomi
sbb
xchg
pop
inc
mov
adc
adc
std
push
mov
sub
adc
dec
dec
add
mul
pop
out
in
scas
cmc
dec
lea
dec
xchg
mov
mov
insl
push
push
insl
in
cmp
ljmp
pop
aad
or
mov
mov
inc
ret
sbb
cmp
aaa
push
mov
sbb
addl
rclb
pop
jl
mov
jl
rcl
andl
pop
xchg
lret
dec
jne
hlt
out
les
lcall
mov
test
es
cmp
inc
cs
mov
inc
jge
jge
das
mov
pusha
out
cmp
loope
adc
stos
push
mov
out
and
negl
push
rolb
inc
icebp
imul
outsl
xor
addr16
jecxz
dec
pcmpeqb
jmp
mov
fst
adc
jo
inc
insb
or
lcall
inc
dec
jl
lret
int
out
xchg
insl
insl
nop
mov
pushl
cmp
pusha
cmc
scas
cmpsl
in
or
shl
dec
pusha
xor
push
lret
sahf
es
insb
sub
insl
ds
cmp
out
testl
mov
mov
add
mov
sahf
repnz
sbb
out
loopne
cmp
test
dec
inc
dec
int3
lds
or
cwtl
sbb
lods
addr16
xchg
in
xor
cmp
sbb
push
imul
sub
cmovbe
jp
sbb
xlat
dec
test
pop
cmp
sub
mov
mov
not
gs
sub
enter
pop
and
std
fnstsw
jmp
pop
jo
sbb
adc
aaa
out
push
in
mov
test
add
sub
or
pusha
rcrl
loopne
leave
loop
repnz
mov
pop
test
out
nop
mov
mov
das
out
lods
sbb
cwtl
cltd
xorl
outsl
rcr
sub
sub
test
adc
mov
mov
pop
mov
xchg
lcall
xor
stos
aad
jb
ja
xor
lods
cmp
cmc
flds
rdpmc
js
test
dec
adc
xor
adc
jne
outsb
mov
and
xchg
ljmp
and
mov
pop
mov
xlat
gs
push
dec
mov
dec
jecxz
sub
rorl
xchg
imul
and
outsl
mov
dec
pop
dec
lret
add
inc
push
adc
les
pushl
ja
and
mov
loop
xchg
mov
gs
mov
pushf
adc
aad
xchg
mov
jnp
das
rol
lock
in
push
and
sbb
pop
sbb
fisttpl
adc
add
es
jle
outsb
pcmpeqw
push
fisttpl
pop
xchg
testl
dec
dec
cmp
sti
dec
mov
ja
sbb
mov
fdivrp
rorb
pop
call
pushl
pop
push
sti
repz
pop
sub
lock
cmc
sub
xchg
sbb
adc
cmp
mov
andl
inc
in
adcl
cld
jmp
enter
pop
es
ret
xor
sbb
loop
iret
mov
and
ret
add
out
push
pop
decl
pmulhuw
and
jne
push
pop
add
ljmp
testb
insb
addr16
imul
lea
jne
mov
aam
rol
xchg
iret
movsb
sbb
push
mov
inc
adc
popa
mov
sbb
repz
sbb
dec
cld
cmp
js
lcall
inc
push
jecxz
dec
mov
out
add
lret
into
sbb
add
rclb
dec
out
fistps
cmp
fnsave
sbb
xchg
xor
jo
jbe
ljmp
shl
jp
adc
in
mov
jae
int
pop
or
sarb
push
ss
scas
mov
cmpl
mov
xor
imul
faddp
andl
adc
js
cmp
test
fnstenv
fdiv
aaa
sub
pop
cli
jecxz
jns
shll
iret
jle
cmpsb
cmpsl
test
and
push
cmp
pop
mov
jge
jne
inc
mov
out
mov
shlb
aam
mov
loop
add
out
push
jge
add
fmuls
dec
cmpsb
adc
fwait
lock
in
adc
xchg
movsb
or
inc
pop
dec
push
aas
jmp
push
insb
in
dec
dec
cli
ljmp
out
add
movsb
dec
lahf
xchg
or
inc
in
int3
cmp
lcall
dec
mov
add
shl
cmp
stos
iret
jns
push
insb
ja
sub
in
fs
repz
mov
and
mov
test
dec
aaa
mov
push
pop
mov
jl
imul
jmp
push
into
sti
in
pop
sub
xchg
dec
fisubl
dec
daa
mov
faddl
movl
push
xchg
jo
aam
cmpl
in
fistpl
fcomip
stos
popa
sbb
jns
test
xor
xchg
xchg
and
cmp
xor
ljmp
dec
fnsave
and
cmp
inc
push
sub
sbb
fsub
cwtl
mov
xor
outsl
or
aam
pushf
push
stos
pop
mov
movsb
xchg
lret
mov
faddl
dec
mov
loopne
ja
mov
leave
or
pop
mov
xor
push
insl
call
adc
cltd
fcomi
inc
pop
test
icebp
xor
jmp
or
sahf
bound
jns
adc
les
or
sar
lods
dec
push
subl
decb
add
push
mov
mov
and
xchg
mov
fdivrs
push
xchg
mov
push
jp
jns
loop
jnp
xchg
in
lea
pop
es
out
and
sbb
lods
sbbl
jae
mov
jl
pop
mov
cmp
loope
sub
inc
mov
stc
pop
cmp
testl
sub
cmp
ret
loop
push
mov
xchg
orl
int3
hlt
pushl
adc
arpl
ficoms
push
stos
mov
mov
aad
xchg
mov
push
adc
rcl
fiadds
cmc
ret
sbb
lds
rcrl
mov
inc
mov
out
mov
js
jmp
in
leave
cmpsb
pop
mov
dec
aaa
call
mov
mov
andl
fs
scas
or
addr16
ret
xor
mov
sub
add
arpl
out
pushf
repnz
popa
jae
mov
sbb
imul
push
lcall
dec
jl
jae
ja
and
aam
mov
cld
in
cmpsb
xor
fwait
xor
sahf
lea
jnp
pop
divb
iret
xchg
cld
pop
loop
and
rclb
pop
clc
sub
xor
mov
sahf
mov
jp
dec
jg
shr
xor
lcall
adc
push
insl
outsl
mov
lahf
xchg
push
mov
fwait
sbb
push
js
sbb
movsb
cli
mov
in
adc
push
sbb
add
pusha
in
adc
outsb
mov
adc
mov
clc
and
movsb
push
dec
pushf
xlat
sub
adc
es
cltd
xchg
pop
adc
imul
imul
int
mov
fcom
inc
xor
pushf
movsl
movsb
add
sub
mov
xchg
push
cs
dec
pop
fistl
dec
push
hlt
sbb
cltd
pop
sub
sbb
jne
lahf
test
dec
out
rorb
mov
scas
cmpsl
mov
mov
popf
sbb
lods
mov
jno
dec
inc
stc
insl
sahf
cmpsb
xchg
in
clc
adc
mov
stos
ja
outsl
adc
outsb
movsl
push
xchg
stos
cld
cmp
xchg
enter
push
shlb
repz
in
push
jl
fisttpl
ficoml
repnz
and
xchg
ret
loope
jns
rcl
nop
dec
push
fcomp
fwait
adc
push
pop
ja
push
out
jp
orb
ss
pop
xor
in
sub
test
sub
xchg
notb
cwtl
xor
pop
dec
jno
adc
les
or
test
lods
cltd
popa
add
mov
out
xchg
sub
lods
mov
das
pop
test
mov
outsl
fcomi
aas
inc
xchg
mov
xor
andps
push
push
jecxz
sbb
sub
cltd
aas
push
stos
sbb
jmp
adc
je
cs
add
rol
js
pushf
iret
mov
lret
fwait
mov
inc
loope
cld
cmp
in
movl
shll
sbb
pop
cmp
ret
lahf
mov
xor
push
aas
int
fwait
test
pop
out
xchg
mov
popf
adc
adc
cmp
sbb
xchg
notl
mov
mov
mov
in
pop
xor
loop
dec
mov
mov
outsl
int
scas
imul
adc
xor
xchg
sahf
ss
jmp
cmp
jne
mov
jbe
jge
loopne
push
sub
inc
aam
inc
das
push
add
les
lods
sub
sahf
lea
lret
sbb
xchg
incl
ljmp
mov
insl
std
inc
push
mov
pop
shll
xchg
xchg
jl
or
pushf
inc
call
lods
push
cmpb
jno
xor
or
lret
and
bound
lcall
aaa
daa
adc
push
pop
inc
xchg
aam
xor
jno
or
inc
push
out
mov
andl
or
dec
std
inc
out
jns
xchg
cmc
rcr
push
pusha
aam
mov
icebp
clc
cltd
jb
jp
enter
mov
enter
imul
adc
push
xchg
mov
in
mov
xor
das
stos
repz
imul
ljmp
pop
push
int3
xor
ss
pop
stc
inc
faddp
imul
xor
repz
popa
inc
mov
dec
cmp
pop
dec
mov
inc
insl
jl
orb
push
and
jns
pop
sti
xchg
push
cmp
mov
push
negb
push
in
xor
adc
std
cmp
and
add
andl
adc
xor
or
sbb
lds
lcall
push
adc
in
loop
jg
xchg
movsb
fildll
xor
xchg
mov
jp
icebp
adc
pusha
roll
mov
inc
clc
push
mov
mov
mov
ss
mov
adc
sarb
xchg
inc
jb
mov
or
pusha
int3
in
push
fwait
cmp
sahf
xlat
testb
pop
lahf
add
rol
and
push
std
mov
sbb
fdivl
in
popa
xchg
gs
push
mov
push
pusha
xchg
xor
mov
mov
cmp
cmpsl
push
adc
icebp
lcall
ja
aaa
push
fcmovb
mov
ret
out
fdivrp
shl
xor
xchg
fnsave
je
imul
jb
jg
shr
mov
test
sub
push
inc
pop
rorb
dec
pop
sbb
or
xchg
iret
int
push
or
sbb
or
pop
push
sarl
xchg
mov
push
xchg
aas
add
mov
fisubrl
mov
clc
cmc
push
jmp
imul
mov
or
sub
in
out
nop
and
sbb
push
push
mov
mov
cli
ljmp
jp
in
pop
pop
pop
add
sbb
push
xchg
xor
jbe
addr16
fsubl
sbb
push
je
cmp
jno
movsb
mov
negb
adc
pop
movsl
fildll
sarl
xchg
lock
pop
ret
imul
adc
fistpll
xor
sub
mov
fistpl
popa
les
pop
repz
xor
mov
popf
inc
inc
cmp
das
gs
sub
push
jnp
fnstenv
out
imul
cmp
cmpsl
push
pop
lcall
js
into
sub
ret
or
xchg
mov
sbb
cmp
inc
out
jns
leave
aad
cmpsl
les
lock
cmp
les
add
or
mov
in
pop
jmp
jo
jg
jo
mov
push
test
roll
mov
loope
aas
xlat
test
sub
push
dec
sbb
sub
sbb
mov
push
push
ss
jge
add
clc
mov
inc
xor
add
xor
lcall
out
sbb
dec
push
mov
mov
es
loopne
xlat
movsl
or
mov
cmp
mov
fcoms
jmp
fnstcw
adc
lret
mov
psraw
add
mov
sub
xor
repz
adc
sub
ds
cmp
xchg
sub
test
adc
and
sti
int
dec
or
and
fldenv
push
insl
push
push
adc
jp
mov
and
pop
jo
mov
xchg
dec
cmpl
and
mov
xor
jmp
push
fdivr
and
xor
adc
ret
inc
popf
adc
dec
mov
sbb
mov
lcall
sub
mov
push
stos
or
and
add
imulb
lret
jle
mov
movsl
cli
push
dec
sub
addr16
cltd
mov
add
adc
mov
pop
das
jo
jge
pushf
rcrl
cltd
adc
cwtl
sub
in
out
cmp
lods
out
or
sahf
jg
cltd
inc
mov
pop
sub
jge
push
sbb
mov
or
lret
dec
jmp
mov
test
icebp
cmp
and
inc
pop
mov
sub
add
xchg
out
push
xor
jb
fstps
shll
movsl
insl
sahf
xor
push
mov
nop
mov
test
pop
sahf
stos
and
jg
inc
push
insb
sub
pop
lds
mov
cmp
push
hlt
xchg
es
adc
sahf
adc
push
in
mov
pushf
shlb
xchg
jle
out
inc
dec
xchg
push
pop
sub
ret
mov
cmp
xchg
mov
adc
std
jo
mov
inc
xchg
xchg
mov
addr16
mov
clc
pop
sbb
mov
xchg
jbe
adc
xchg
push
pop
sub
aad
xchg
jle
adc
jecxz
cmpsb
xor
leave
inc
pop
mov
fisubrs
aad
pop
push
pop
cli
xor
inc
mov
pop
pop
cmp
and
inc
mov
push
push
lods
inc
xchg
insl
loop
cwtl
loopne
test
aam
lds
adc
cli
mov
add
or
mov
cmp
push
cmp
jge
or
dec
das
rep
and
inc
es
in
mov
sbb
jmp
fcomps
cmpsl
dec
fcompl
xor
push
out
in
rcrb
mov
stos
xlat
dec
hlt
out
dec
fs
push
jb
insl
dec
dec
rorb
pop
sub
daa
cmp
sahf
adc
mov
stos
push
aad
mov
pop
adc
dec
xor
ljmp
jecxz
dec
jmp
or
or
dec
out
push
xor
daa
jno
mov
dec
xchg
pop
dec
cs
jp
in
and
call
push
rolb
xlat
ds
sbb
jne
scas
inc
adc
pop
sbb
ret
lret
leave
and
fimull
xor
xchg
mov
dec
dec
call
inc
lds
xor
ret
sbb
cmp
aam
orb
lea
lods
adc
ret
out
out
sub
lret
adc
repnz
inc
idivb
icebp
test
movsb
or
pop
adc
or
mov
cmp
jno
mov
adc
push
inc
lods
inc
shll
stos
push
xor
gs
lcall
je
sub
insl
pop
lds
loop
xchg
sbb
pminsw
in
pop
pop
ljmp
fldenv
or
ret
fiaddl
dec
pop
push
or
cmp
adc
sti
mov
fldt
and
mov
mov
sahf
mov
outsl
sbbl
cwtl
xchg
outsl
sub
imul
xchg
stos
pop
dec
or
and
add
xchg
test
xor
and
dec
shrb
iret
enter
clc
addb
cmp
push
enter
fcmovnu
aas
mov
testb
out
nop
cmp
dec
dec
loope
std
out
out
imul
cmp
je
in
das
fsubl
xlat
gs
mov
pusha
push
hlt
loop
popf
xor
pop
outsl
xchg
clc
clc
cmp
jae
push
and
mov
mov
xchg
std
ja
or
or
jge
cmc
and
jns
lret
mov
pusha
pop
leave
sub
sub
lcall
pop
adc
imul
mov
xchg
cltd
outsb
mov
adc
inc
jmp
jecxz
sub
cld
loope
lods
push
test
or
jbe
aad
fs
pop
popf
cli
push
jge
les
sbb
rclb
lods
in
inc
adc
pusha
sub
inc
aad
or
cld
push
nop
mov
inc
sub
pop
mulb
aas
mov
xchg
ljmp
into
mov
inc
xchg
ja
jmp
xor
cs
mov
negl
mov
pop
inc
jbe
mov
sub
or
ds
out
adc
mov
adcb
xchg
dec
ret
test
sti
push
mov
int3
lret
pop
cmc
imul
sub
jns
push
mov
rorl
push
dec
jne
cmp
repnz
jno
sbb
add
cli
dec
cmp
ja
adc
xor
pop
pushf
enter
divb
repnz
mov
ss
inc
mov
and
pop
bound
divl
daa
mov
mov
jge
xchg
imul
jl
leave
add
and
xor
pop
aad
add
push
test
cmp
addl
inc
or
mov
mov
mov
and
xchg
inc
mov
mov
insl
adc
and
sarl
lcall
sti
test
mov
or
and
test
lea
fimull
pop
iret
cmp
inc
pop
cmp
mov
dec
jge
fcomps
xor
push
fmuls
clc
pop
sub
movsl
mov
out
sti
mov
ret
mov
lock
sub
fidivrl
xor
std
dec
cli
xchg
jne
int
push
dec
or
cmc
inc
add
jae
jne
push
cmp
mov
sub
sbb
jecxz
inc
sub
mov
sub
pusha
out
jo
repz
fwait
cmp
mov
jnp
cwtl
roll
mov
pop
sbb
gs
mov
call
xor
leave
or
fisttps
mov
stos
fucomip
loope
xchg
frstor
cmp
ret
je
adc
jecxz
and
sti
les
mov
rclb
adc
or
or
pop
getsec
mov
std
loope
jecxz
ja
leave
adc
call
fcmove
pop
mov
dec
cmp
mov
lods
jg
sbb
pop
fadd
xchg
clc
shrb
sub
jg
lret
mov
data16
adc
mov
lret
adc
je
jmp
sub
lahf
loop
sbb
mov
rcll
std
popf
mov
pop
fcmovb
jg
cltd
repz
xlat
lahf
adc
fmull
sbb
or
mov
and
inc
mov
in
jmp
mov
mov
int3
sub
xor
pusha
sub
xor
or
test
sbb
inc
pop
xor
loop
push
pop
enter
xor
mov
xorb
jl
mov
inc
and
ss
addr16
ror
mov
in
pop
dec
or
aam
test
mov
aad
or
pminsw
xchg
shr
arpl
push
lcall
sbb
scas
xor
cld
jmp
outsb
in
push
outsl
cltd
inc
jl
and
repnz
jmp
mov
mov
dec
loopne
pop
sub
sub
data16
xchg
daa
lret
cs
ja
imul
jmp
fisubrl
cmp
aad
mov
inc
fstpt
je
push
jle
pop
shrl
xlat
sahf
mov
in
test
mov
or
cmpsl
mov
push
mov
and
or
fcmovbe
jne
out
push
push
bound
cmp
pushl
les
leave
andl
lret
jl
jnp
repz
pop
cs
arpl
movsb
and
push
add
push
hlt
dec
inc
push
pop
insl
mov
popa
jl
nop
dec
sbb
mov
test
pop
add
leave
ret
popl
mov
jmp
jge
bound
scas
out
rorl
and
lret
loope
jnp
inc
push
cmpsb
lods
and
repnz
and
test
scas
fidivrs
sub
pop
stc
pop
xor
sahf
cmc
lock
push
push
cmp
lahf
jne
and
sbb
cli
popf
mov
pusha
jl
cmpsb
rorl
dec
xor
xlat
cltd
arpl
fwait
add
iret
jne
mov
xor
stos
mov
cmp
ja
add
dec
ja
sbb
ss
xchg
scas
mov
pop
sub
sub
jp
jns
inc
adc
aaa
stos
imul
rorb
aas
dec
xchg
dec
push
xor
cwtl
jo
adc
jp
xor
lds
repz
add
add
rclb
icebp
repnz
repz
lret
bnd
imulb
xchg
sub
es
dec
dec
sbb
add
cld
cli
cmp
sbb
stc
in
cmpsb
push
inc
push
mov
xor
fiadds
cli
mov
dec
add
jns
clc
xchg
roll
pop
mov
test
ret
fmul
cmpsb
mov
inc
pushf
lock
andl
in
mov
repz
scas
sti
push
jmp
pop
push
pushf
jbe
mov
prefetchw
or
sub
repz
aas
fwait
mov
pop
ljmp
sbb
and
test
ficoms
cs
mov
inc
adc
int3
pushf
jnp
xchg
xor
sub
hlt
rolb
into
push
jl
ret
cld
dec
xorl
jne
sti
movsb
mov
xchg
jp
mov
cmp
cmp
filds
jle
jne
mov
or
call
dec
jmp
loop
pop
jge
in
outsb
fidivs
mov
pusha
jmp
pop
or
in
xor
decb
and
sub
mov
sub
fidivl
pop
adc
xchg
push
jns
int3
push
add
gs
std
je
je
js
sbb
inc
pop
outsl
test
sti
ret
mov
loope
mov
and
xor
mov
mov
and
xchg
sub
int
push
jge
dec
jnp
inc
adc
fildl
out
mov
lock
or
out
mov
pop
xchg
inc
cmp
inc
and
xchg
movsb
or
icebp
add
mov
pop
idivl
inc
bound
sbb
cmpsb
mov
cmc
or
push
adc
rclb
sbb
adc
cld
fs
in
dec
icebp
xchg
and
shrb
or
mov
repnz
outsb
fs
ret
xchg
mov
dec
inc
notl
jb
xor
sahf
ret
test
out
mov
loop
loopne
js
adc
dec
jmp
subl
iret
inc
push
sub
pop
pop
jecxz
mov
pop
mov
inc
in
push
inc
adc
test
mov
jne
bound
pop
stc
lahf
mov
test
or
mov
pop
stc
cli
fdivrl
cmpsl
xchg
ds
scas
fistpll
inc
das
fildll
out
inc
jb
mov
and
and
rcrl
xor
fidivl
pop
lret
cmc
cmc
and
mov
push
xchg
bound
jge
and
jmp
sbb
lock
adc
fiadds
sub
int
shrl
rcll
roll
sbb
fidivs
mov
mov
bound
testb
mov
cs
or
jg
idivl
in
movsb
inc
and
jbe
or
loopne
mov
jl
lods
jg
andl
sub
and
test
lsl
dec
mov
sbb
test
clc
or
into
fidivl
jne
xchg
pop
or
xchg
jb
dec
add
cmpsb
clc
mov
rcrl
fidivs
xor
rcr
lods
es
aaa
mov
popf
or
adc
je
sbb
loopne
adc
add
mov
imul
leave
rcl
pop
ds
popa
xchg
loope
test
sbb
insl
jle
imul
sbbb
pop
sbb
dec
call
mov
in
mov
jnp
mov
add
cs
mov
jno
mov
imull
test
adc
jecxz
out
iret
xchg
sbb
stos
jmp
data16
mov
jno
cmp
loope
int
daa
mov
jmp
test
fiaddl
mov
ds
and
mov
and
or
stc
xor
lahf
jo
stos
jmp
push
loop
mov
and
out
out
or
mov
dec
jnp
loope
and
and
imulb
cmc
sti
sbb
outsl
jle
dec
or
inc
fwait
push
sahf
pop
loop
pop
cmp
iret
push
mov
sbb
sbb
repnz
rclb
addb
cld
xchg
enter
lds
push
mov
ds
mov
hlt
loopne
negb
jo
cli
and
lret
nop
pushf
mov
mov
add
xchg
pop
pusha
add
sbb
inc
mov
pop
mov
cmp
loopne
sti
cld
jl
cmpsb
push
adc
dec
and
dec
mov
gs
test
sub
cld
inc
xchg
mov
repz
outsl
xchg
div
sbb
xchg
add
jne
outsl
jmp
xchg
loop
cmp
in
negb
xor
loopne
pop
mull
loope
loop
push
mov
mov
gs
movsb
int3
push
sbb
bound
rcr
jle
sar
sbb
mov
inc
or
pop
addr16
lret
xchg
mov
adc
pop
int3
and
sub
dec
cmp
movsl
add
jbe
jno
or
cmp
test
mov
jne
adc
pop
blcs
push
mov
scas
imul
ds
andb
mov
jge
scas
sbb
enter
pop
push
lods
arpl
jae,pt
icebp
cmpsl
or
data16
das
push
fs
out
and
shlb
int3
gs
mov
jns
test
adc
xchg
cld
pop
adc
mov
dec
fwait
dec
mov
push
add
stc
cmp
adc
movsl
xor
xchg
sub
and
into
mov
sbb
call
js
out
xor
loop
fsubs
mov
pop
fwait
popa
xor
or
stc
fnstenv
push
pop
movsb
dec
pop
cmp
dec
sub
test
push
cmp
dec
xchg
sub
xchg
out
hlt
xor
pop
adc
pop
ljmp
push
xchg
jg
jl
dec
jl
mov
fmulp
cmp
stc
xor
cmp
lea
jns
cmpsl
aad
dec
sub
pop
sub
dec
pop
add
out
sahf
cmpsb
jne
das
or
jne
scas
loope
pop
dec
sbbb
in
mov
test
lods
in
and
int3
lock
out
xchg
mov
notb
sbb
aad
imul
leave
lret
push
sbb
das
in
sbb
ds
adc
fimuls
shr
clc
cs
scas
push
imul
enter
push
or
add
xchg
and
mov
cld
sub
aaa
ret
add
lods
mov
inc
out
add
adc
lock
loope
aaa
cmp
lods
cmpsl
movsl
add
mov
cmp
outsl
mov
aam
les
stos
xorb
andl
adc
jge
leave
jnp
in
mov
mov
push
push
push
ret
mov
dec
aas
or
inc
mov
sub
adc
leave
fwait
mov
xor
or
inc
pop
mov
pop
movaps
nop
fistps
mov
idivl
dec
xor
ret
sub
add
xchg
mov
adc
dec
sahf
ret
push
fidivl
push
pop
mov
aas
or
xor
push
jge
mov
scas
fnsave
xchg
fidivrl
mov
mov
iret
cli
or
in
or
push
mov
sbb
icebp
int
push
aas
add
sahf
xchg
or
push
dec
fs
aas
sarb
xchg
push
subl
lods
xlat
push
in
xchg
outsb
pop
dec
aam
fcmovbe
pop
repnz
add
in
cmp
or
cmpsb
aas
sub
movsl
xchg
xorb
loop
cmpb
movsl
adc
enter
push
movsb
movsl
push
pop
adc
scas
push
xor
push
int3
lock
sub
iret
mov
push
mov
xchg
mov
xor
sbb
xor
divl
leave
dec
insb
loope
test
fldt
push
push
and
jecxz
dec
xor
pop
mov
in
test
jae
leave
outsb
push
mov
test
lods
and
and
inc
inc
filds
imul
loop
or
sbb
in
arpl
push
std
jno
adc
push
int
push
sub
mov
jmp
jmp
mov
fistpl
jae
mov
or
fsubl
mov
ja
es
cs
adc
mov
sbb
enter
clc
nop
xchg
loopne
int3
jnp
jle
out
jmp
or
inc
pop
js
fisttpll
rcrb
mov
mov
pop
rorb
bound
stos
cmpsb
cmpb
mov
or
adc
and
es
test
popl
pop
movsl
cmp
out
fidivs
push
nop
stos
shrl
lods
cld
push
mov
push
lods
add
pop
iret
sub
dec
imul
scas
out
cmp
push
jge
add
cmpsb
in
lret
arpl
mov
sub
sbb
jmp
cmp
fisubrl
and
or
dec
enter
test
icebp
sbb
push
aas
push
and
sbb
out
rorl
pop
sbb
call
aad
icebp
outsl
mov
sahf
aaa
inc
ljmp
rorb
xchg
inc
push
cmp
push
pop
in
and
xorb
sbb
pushf
mov
mov
test
in
mov
into
jg
call
mov
jmp
add
adc
daa
ret
test
repz
jle
and
data16
ret
neg
sub
mov
pusha
mov
and
sbb
xor
sbb
jl
mov
fcomps
addr16
out
cmp
sub
les
mulb
outsb
mov
sar
notl
mov
dec
sbb
outsb
insl
adc
or
adcb
je
repnz
cmp
pop
adc
inc
test
sbb
ror
jecxz
xor
std
fsub
jae
xchg
int3
enter
mov
cwtl
cmpsl
adc
inc
cwtl
rclb
loope
sbb
iret
adc
push
das
sbb
inc
jno
les
dec
push
sti
xor
mov
movsb
cmp
sub
in
fcoms
in
movnti
xor
mov
mov
push
mov
mov
sbb
subl
popa
jge
nopl
popa
jae
pop
add
cmp
repnz
xchg
inc
pop
insl
in
lods
loop
mov
mov
test
sar
imul
lods
loope
scas
pop
push
dec
out
mov
cltd
xchg
aas
mov
add
push
lret
pushf
in
iret
cmp
fsubr
cmc
xchg
outsl
andl
lahf
xor
mov
bound
sub
sub
mov
out
adc
dec
sub
mov
scas
push
adc
mov
inc
addr16
and
pop
jns
lods
outsl
mov
mov
adc
jecxz
scas
std
xchg
sub
xchg
lock
push
jmp
lahf
loope
mov
pop
test
repz
jne
mov
cltd
fwait
jp
add
mov
pop
mov
adc
call
js
fwait
in
inc
js
xlat
inc
xchg
pop
sbb
shll
cltd
fisttps
push
in
stos
fcomp
daa
or
inc
test
push
ja
je
and
das
cmpsl
lret
mov
push
adc
das
dec
cmc
and
sarl
arpl
add
mov
cmp
addl
mov
popf
mov
jg
mov
mov
jns
xor
jns
add
std
shrb
or
jne
nop
dec
mov
loop
popf
adc
daa
mov
push
lock
scas
cmc
rolb
mov
cmpsl
fcompl
bound
es
ss
jmp
notb
out
rolb
add
bound
ret
pop
pop
sbb
xchg
sub
mov
ret
es
popa
sbbb
ficoml
push
push
xchg
push
sub
cs
es
loopne
fdivr
sbb
mov
jmp
mov
jo
lea
shrb
sbb
sbb
sub
mov
icebp
mov
adc
mov
xorl
ret
adcb
call
adc
jb
mov
in
cmc
or
enter
repz
cmp
pop
pop
pop
jno
call
push
movsl
xor
movsl
mov
popa
push
ds
lahf
jecxz
ret
mov
mov
cltd
jno
mov
fcoml
loopne
mov
jmp
cmp
repz
push
lods
cld
pop
push
mov
fwait
insl
cmp
jmp
stc
inc
cltd
addr16
in
push
pop
mov
lret
shll
call
sbb
aam
pop
enter
cmp
adc
in
mov
lods
jo
dec
fisttps
es
cmp
and
call
push
push
xor
sbb
push
fnstsw
push
xor
push
popf
outsl
rcll
ret
add
orl
xchg
fsubrs
mov
cmp
cwtl
jge
pop
xlat
adc
pusha
xlat
xchg
lahf
xlat
ja
loope
dec
mov
and
push
shll
push
mov
jne
into
lret
ljmp
pop
cmp
rol
insl
aad
inc
cs
push
out
or
hlt
mov
jo
xor
aad
out
pop
xchg
repz
cmp
icebp
les
jns
out
push
add
in
loopne
cmpl
xchg
or
and
mov
inc
xlat
mov
shrl
mov
sub
inc
inc
xchg
test
jl
ret
sub
sti
rcll
mov
mov
clc
adc
lret
jno
dec
jb
pop
xor
xchg
mov
rcll
mov
jp
pop
jae
dec
and
sbb
jle
pop
pop
xor
lret
enter
xchg
repz
shll
iret
repnz
push
sub
mov
add
ljmp
in
mov
cs
push
xchg
or
fcompl
xchg
mov
cli
out
icebp
movsb
repnz
sub
sub
mov
sbb
aam
inc
mov
cwtl
mov
dec
test
push
pop
clc
pushl
cs
xchg
mov
inc
insb
outsb
repz
repnz
cmp
or
xchg
cmp
lahf
lret
sti
push
mov
push
add
xchg
cmp
jp
mov
push
out
mov
push
jae
ret
adc
mov
je
pop
jns
je
arpl
sbb
inc
call
rorb
idivl
xchg
pop
dec
push
adc
pop
and
rcrb
jbe
loopne
rolb
push
or
inc
ret
add
lcall
dec
adc
dec
and
aaa
dec
cld
xor
inc
popf
mov
stos
adc
imul
pop
outsl
insl
and
jg
and
lds
outsl
jbe
cmp
filds
call
push
test
sbb
mov
mov
cli
xor
out
or
es
xchg
or
pop
int
push
flds
out
sbb
mov
xchg
adc
js
nop
lcall
lcall
cmp
popf
push
add
mov
mov
cs
fs
loop
testb
jge
mov
xchg
ret
add
es
dec
pop
inc
dec
cmp
mov
push
pop
lds
loopne
aas
lods
mov
pushl
sar
jb
cwtl
int
jp
insl
push
push
jbe
xor
mov
shll
jb
rcrl
mov
lahf
out
dec
mov
fnstcw
es
push
xor
or
xor
cmp
scas
daa
add
push
les
push
loope
mov
out
pushf
ljmp
inc
pop
lods
arpl
dec
mov
xlat
insb
add
pop
fistl
inc
mov
mov
adc
out
insl
aam
jg
xchg
pop
push
fisubrl
adc
in
xchg
jg
pop
inc
mov
xorb
mov
add
inc
hlt
mov
jnp
jmp
negb
ds
xchg
pop
mov
mov
into
cmpsl
xchg
aas
dec
sbb
clc
mov
push
pop
daa
in
adc
or
ret
pusha
push
cmp
shrl
jbe
jbe
cmp
es
xchg
push
cltd
testl
into
jb
ds
and
xchg
add
push
fcomps
mov
repz
or
je
add
sbb
fdivl
test
xor
loope
inc
or
dec
xchg
dec
loopne
mov
and
push
cmp
adc
aaa
daa
add
dec
scas
icebp
push
aam
mov
aad
pop
xchg
repz
push
arpl
rol
ljmp
lret
add
xchg
cmp
or
lods
dec
mov
aad
outsb
cmpsb
dec
or
add
inc
and
in
pop
pop
cli
les
das
push
fdivs
pop
stos
adc
dec
mov
out
rorb
and
jge
addr16
xlat
jne
cmp
lcall
or
jns
in
sbb
fcomps
and
sahf
loop
arpl
sarl
test
adc
insl
rorb
pop
pop
jb
cmpsb
shl
cmpsb
stos
sbb
shrb
sarl
adc
mov
inc
push
jno
xchg
cwtl
das
mov
lock
fildl
or
lods
sub
xor
jmp
push
jge
out
loope
pushf
ret
div
ljmp
sti
xchg
add
nop
int3
dec
or
popa
push
mov
mov
loope
cli
bound
adc
jb
lret
adc
cmc
lock
sub
mul
ret
sti
testl
outsb
nopl
fisubl
xor
push
xchg
insb
lods
inc
divb
push
setg
dec
sbb
or
incb
in
inc
cli
mov
test
pushf
cld
push
imul
add
shld
stos
and
dec
cmp
addr16
add
scas
sahf
cmc
mov
pop
pop
sub
dec
dec
dec
mov
adc
shll
imull
pop
insb
jl
sar
movsb
or
cmp
fisubs
mov
add
fiadds
push
inc
pop
call
add
push
lahf
push
cmp
push
xor
mov
sub
outsb
cmc
repz
fdiv
dec
leave
test
std
jg
mov
bound
push
int
popf
movsl
xchg
ret
lea
ja
jbe
and
inc
xlat
dec
lret
xchg
ljmp
xor
dec
out
ss
mov
jecxz
push
mov
push
fstl
ret
ss
fbstp
ret
jnp
mov
sbb
jae
pusha
xchg
lods
jo
xchg
cmp
and
bound
rolb
and
xchg
pop
decl
push
adc
adc
mov
test
loope
jns
test
std
mov
shrl
cmp
cmp
xlat
xchg
push
test
dec
mov
xchg
and
call
icebp
xchg
sbb
sbb
push
xlat
aas
pop
dec
jle
adc
stos
cltd
scas
scas
lcall
lahf
data16
mov
fwait
stos
mov
in
push
imul
mov
pop
jge
xor
push
js
in
or
rcrl
sub
lods
jl
fxch
add
call
mov
lea
inc
or
insb
lds
gs
call
cmpsl
je
rcrl
lcall
insl
or
scas
loop
mov
rorl
aaa
jae
jno
sahf
and
sub
subb
sbb
add
loop
lods
cmp
jp
mov
inc
fucomp
pop
mov
or
stos
add
aam
mov
aaa
sbb
cli
jmp
mov
mov
push
mov
cmp
adc
leave
std
aad
icebp
sbb
pop
sub
adc
mov
xor
sub
push
fmulp
mov
cmp
pop
outsl
mov
ret
call
mov
sbb
ds
inc
fbstp
jmp
scas
enter
adc
bound
or
imulb
pop
sarl
sar
push
in
inc
lahf
fmul
push
hlt
pop
mov
jl
pop
hlt
pop
cmp
mov
das
dec
ret
sub
mov
pop
cmpsl
pop
outsb
jp
xlat
push
lcall
xor
mov
aam
sub
jno
jbe
scas
mov
in
pop
sub
daa
popf
pop
mov
sbb
push
mov
and
hlt
cltd
loope
mov
xchg
adc
add
xchg
loop
add
mov
or
and
sbb
je
cmp
cmp
ret
cwtl
and
mov
jns
mov
jbe
sbb
mov
cmp
sbb
jbe
int3
inc
sub
inc
pop
lods
out
xchg
adc
std
push
lds
loopne
add
jno
les
lret
in
sub
push
cmpsb
fistl
scas
ja
aad
cmp
loope
mov
xor
xchg
mov
xchg
pop
xor
les
fs
xlat
inc
lods
shrl
rcll
jbe
or
hlt
out
mov
lods
xor
movsb
sub
push
ljmp
movsbl
xor
xchg
sbb
shlb
addr16
and
sub
sub
ss
inc
or
sbb
leave
sbb
iret
aam
or
dec
fs
mov
pop
or
mov
and
std
sub
inc
scas
push
repnz
inc
adc
test
sarl
xchg
sbb
xchg
xchg
add
xor
fiadds
cwtl
adc
jp
dec
push
adc
xchg
pop
test
inc
insb
dec
fwait
inc
jg
insl
pop
inc
fwait
fs
xor
ret
xchg
mov
repnz
jnp
push
test
add
ljmp
mov
and
pop
out
in
inc
inc
xor
faddl
jg
add
or
mov
jnp
call
ret
or
enter
jp
fsts
cs
adc
mov
call
push
int3
adc
shlb
adc
mov
fimull
arpl
imul
adc
add
and
or
and
es
loopne
test
cmp
repnz
or
inc
jecxz
adc
fwait
xor
mov
not
addr16
ds
lea
cmc
mov
xchg
shl
sub
xor
inc
adc
fwait
push
and
je
aad
sarb
sub
clc
add
insl
inc
jns
movsb
push
push
dec
sarb
repz
jecxz
adc
adc
lods
sub
mov
cwtl
xchg
jae
lcall
sbbb
and
mov
js
and
inc
cld
imul
sti
mov
mov
dec
push
lea
or
dec
xor
push
out
sbb
sub
push
in
daa
insb
xchg
movsb
data16
fnstsw
in
xchg
daa
mov
pop
pop
pop
pop
jle
int
stos
aam
cmp
ss
addb
mov
mov
int
mov
sbb
ljmp
iret
push
insl
push
ja
push
pop
or
cltd
adc
sahf
xchg
push
fmul
lock
sub
out
add
push
push
dec
mov
into
ljmp
mov
sbb
add
jb
jno
rolb
imul
stos
mov
inc
and
lock
push
lock
dec
jo
sub
jns
sub
iret
rcrb
sbb
sbbl
insb
adc
setg
out
jb
int3
arpl
and
jbe
xor
mov
scas
cmp
in
add
dec
mov
and
cmp
add
jmp
jg
jge
jecxz
leave
jmp
jle
jge
push
loopne
xor
lret
cltd
fs
mov
test
iret
pop
sbb
mov
shrl
jp
andl
mov
ds
mov
sbb
xlat
lea
out
push
packuswb
or
les
inc
xor
loopne
cwtl
mov
movsb
sbbb
pop
loope
mov
loopne
sbb
push
fistpll
xor
gs
cmc
orb
jecxz
shl
and
into
xchg
inc
enter
dec
stos
aad
mov
pusha
bound
mov
dec
seto
movsl
cmpb
sbb
cltd
mull
mov
sub
pop
les
mov
xchg
adcl
icebp
daa
cmc
cmpsl
sbb
or
scas
js
jns
jne
add
push
pop
out
xor
outsb
out
push
sub
gs
mov
icebp
scas
lods
fcmovnu
push
mov
into
add
mov
lret
pop
cmpl
mov
das
ljmp
bound
mov
mov
test
orb
xchg
dec
es
xchg
xchg
or
add
stc
adc
mov
add
mov
sub
rcrb
fistpll
cld
cli
orb
cmp
incl
mov
stos
adc
out
dec
xor
outsb
sbb
pushf
popf
sbb
ret
je
xchg
xchg
push
fldt
flds
adcb
cli
mov
mov
xor
ja
daa
std
filds
jns
jne
stos
mov
pop
dec
xor
fxch
test
mov
or
pop
repz
sub
lock
inc
aad
nop
add
push
mov
in
jno
mov
call
add
mov
stc
or
movb
mov
jns
icebp
add
cmp
test
jg
cltd
lahf
cmc
push
clc
or
jecxz
sub
adc
negb
dec
cltd
xor
pop
cltd
adc
leave
insl
jo
sbbl
cmpsl
pop
rorb
or
iret
mov
lds
pop
in
sbb
inc
sub
jle
test
sbb
xor
iret
in
inc
out
pop
xor
cmpsl
xlat
std
dec
js,pn
adc
int
and
rorb
inc
mov
sub
xchg
pop
data16
lahf
shrl
test
popf
xchg
and
aas
add
mov
jb
rcrl
jb
mov
jbe
or
cwtl
aad
pop
das
inc
push
push
xor
movsb
das
fsts
ljmp
xlat
dec
insl
mov
and
pop
cmpsb
adc
sarb
iret
and
pop
xorl
sbb
leave
sub
ja
adc
add
movsb
fwait
adc
shl
in
mov
fistpl
mov
add
decb
pop
test
in
mov
cmp
xchg
aam
lds
outsl
insl
int3
sti
repz
insl
jne
sub
sub
iret
pop
mov
jl
loope
cs
cld
std
flds
loope
mov
push
mov
lock
fiaddl
xchg
ljmp
mov
add
pop
lcall
test
mov
mov
mov
jae,pt
pop
clc
inc
pop
and
test
out
hlt
add
out
arpl
xchg
add
aas
push
inc
stos
push
xchg
loope
bound
addr16
pop
orb
mov
mov
cmp
pop
shrb
adc
das
inc
imul
sub
in
into
mov
cmp
inc
ja
dec
fbld
pop
cmp
into
in
inc
in
bound
xchg
xor
dec
fcomps
lret
pop
add
gs
subb
and
scas
fwait
lahf
inc
shll
jne
xor
hlt
xchg
cmp
push
data16
mov
and
lods
jne
cmpsb
cmpsl
adc
js
adc
ja
mov
das
mov
push
inc
push
sub
int3
mov
mov
inc
lods
call
fbld
outsb
enter
popf
in
aad
add
xchg
pop
add
cs
out
std
sub
adc
push
xor
fsts
cmp
mov
lock
or
divl
mov
xor
xchg
and
dec
pop
movsb
cmp
push
pop
push
cmp
movsl
adc
loop
mov
xor
popf
cmpsl
pop
mov
mov
xchg
in
lret
lret
pop
lret
cmpsl
dec
cmp
call
push
ret
or
aas
mov
fnstenv
out
mov
and
add
aas
stc
mov
mov
fs
pop
imul
sub
pop
mov
mov
and
insl
or
aad
push
jp
sbb
xchg
inc
mov
dec
mov
rolb
sub
mov
lea
cmp
mov
cltd
cmp
arpl
repnz
mov
adc
push
sub
sub
leave
push
mov
imul
mov
sbb
mov
dec
sbb
xchg
xor
xor
inc
add
mov
mov
outsb
mov
mov
and
arpl
gs
inc
adcb
lock
cltd
cld
xchg
and
insl
sub
jl
stc
lret
cs
adc
mov
ja
sahf
jnp
nop
dec
mov
fisubrl
loope
inc
jae
les
dec
add
lret
shlb
aas
xchg
pop
in
sbb
jo
test
cwtl
or
mov
repnz
nop
xorl
faddl
mov
sub
mov
cmp
jle
mov
lods
xchg
jo
and
in
mov
mov
add
lret
mov
xor
movsl
dec
mov
dec
gs
ret
jb
jo
insb
push
xor
test
mov
push
adc
lock
push
cmpsb
dec
and
sub
pop
dec
out
ds
inc
hlt
fisttps
inc
and
dec
aaa
sahf
push
enter
sbb
aaa
mov
sub
call
mov
ljmp
fimull
push
enter
jmp
das
cld
addr16
sbb
cmpsl
scas
jbe
xchg
add
dec
inc
icebp
fistl
pop
std
cmp
imul
dec
xchg
nop
sbb
sti
mov
mov
scas
cld
fimull
pop
pop
or
fidivs
push
popa
mov
fcoml
hlt
scas
xor
mov
inc
pop
or
inc
xchg
adc
push
xlat
mov
les
dec
xlat
fnstcw
sbb
stos
in
aam
jg
int
xor
adc
mov
mov
dec
mov
mov
cmp
xchg
or
dec
pop
or
imul
or
adc
adc
xor
fildll
sbb
nop
pop
fisubrl
pop
push
call
mov
popf
outsl
movsl
jecxz
mov
imul
mov
lds
sbb
shl
xchg
ja
push
adc
sub
divl
in
xchg
mov
mov
pushf
call
mul
dec
into
fsubrl
mov
push
cld
add
into
daa
je
pop
outsl
pop
mov
pop
rorb
mov
dec
xlat
sbb
jp
add
push
cmpb
ljmp
rol
into
fnstcw
arpl
sub
pop
in
inc
mov
push
xor
shr
popa
scas
test
xor
mov
cmc
push
dec
cmp
in
fnsave
or
addl
or
pop
mov
and
push
xchg
mov
inc
pop
push
and
xor
mov
and
xchg
fnstcw
imul
pop
and
lock
cmp
fsubl
mov
rclb
mov
mov
add
decl
xor
popf
fsts
pop
dec
push
mov
cmp
push
cmpl
outsb
mov
xchg
gs
or
cmp
loopne
and
dec
jno
rcll
cmp
mov
sbb
add
daa
ret
stos
inc
iret
jl
cmpsl
dec
jo
xchg
or
add
sar
xchg
xchg
mov
inc
and
mov
sbb
pop
test
sbb
push
ljmp
pop
sub
out
jmp
faddp
pop
shlb
fists
push
cmpsl
cwtl
es
pop
pop
int3
cld
adc
inc
out
mov
sbb
push
sub
pop
sbb
inc
cmp
popf
xchg
adc
push
push
push
jbe
shrl
ja
lea
cmp
mov
insb
lcall
jmp
mov
mov
push
mov
jge
push
jo
call
jne
pushf
lcall
je
sbb
mov
fs
inc
adc
sbb
call
or
loope
sub
xchg
push
testb
dec
adc
lret
popf
loop
fisttpll
xchg
push
pop
mov
adc
adc
popf
scas
aad
pop
fstp
sbb
nop
out
lock
pop
cld
icebp
and
sbb
mov
mov
fidivs
pushf
fbstp
es
aaa
andl
subb
icebp
push
in
loopne
add
movsb
in
fisttps
stc
inc
xor
cs
fs
jb
fcoms
or
lahf
daa
ret
or
mov
mov
nop
leave
ja
xchg
xchg
int3
pop
cmpsl
adc
xchg
imul
adc
and
rol
cmpsl
push
inc
mov
dec
or
imulb
aas
xchg
or
jbe
fiadds
jl
adc
stos
aam
mov
push
sbb
or
hlt
cmpsl
clc
or
xchg
inc
pop
adcl
xor
sub
xor
mov
mov
iret
imul
or
lods
je
mov
fisubs
lds
add
out
movl
dec
inc
loope
es
rclb
adc
sub
ds
jmp
bswap
xor
ret
lret
dec
mov
shll
jo
popa
fistps
repnz
sbb
sar
push
and
xor
int
sub
inc
repz
addr16
jno
dec
xor
inc
js
or
mov
out
mov
xor
push
out
xor
inc
std
leave
cmc
repz
dec
xchg
sub
ret
les
cmp
and
inc
sub
jns
mov
xchg
rorb
or
adc
fisubrs
jo
insl
inc
aam
add
lods
push
xor
jle
imul
loop
pop
movsb
jne
in
xor
jbe
inc
ja
jae
jnp
jmp
rorl
cmp
js
in
mov
sbb
sbb
xchg
mov
sub
icebp
movsb
add
je
outsb
dec
in
pusha
jp
ja
xchg
arpl
out
mov
dec
mov
xor
dec
mov
jge
push
jns
dec
rclb
xor
push
cmp
stos
shl
clc
popa
aas
arpl
xor
scas
inc
in
adc
pusha
sub
std
inc
hlt
fwait
mov
push
jle
test
imul
in
mov
sahf
in
fimull
lods
pop
jo
pop
out
jecxz
or
pop
adcb
icebp
adc
mov
sbb
outsl
loop
push
jle
mov
jb
gs
mov
dec
sbb
jb
leave
fisubrl
and
or
pop
stos
out
mov
push
sarl
jne
test
mov
inc
xchg
in
push
outsb
or
enter
jbe
xlat
push
cltd
push
xor
loope
in
xchg
jo
iret
lret
imul
push
inc
sbb
dec
or
adc
sti
jo
add
insl
fdivl
sbb
pop
dec
jge
das
andl
pushf
jmp
movsl
or
adcl
mov
inc
in
sbb
sub
lret
aad
test
inc
push
sub
add
push
int
push
repz
or
mov
add
mov
outsl
nop
fisttps
inc
es
adcb
xchg
jmp
inc
into
jmp
outsb
ret
adc
aas
push
sahf
xchg
loop
sarb
pop
xor
aas
jne
xchg
test
xor
jo
fdivl
addr16
std
loop
cmpsb
jl
ds
daa
mov
addr16
fidivl
mov
cli
test
push
jo
stc
das
sar
mov
ror
mov
or
xor
xchg
pop
adcl
cmpsb
push
jo
jnp
in
cmpsb
or
push
push
ss
mov
rorl
loopne
test
push
pop
aad
out
push
adc
clc
repz
dec
xchg
push
inc
mov
leave
jb
jno
inc
jl
sbb
movaps
stc
cwtl
shr
ss
xor
daa
scas
inc
adc
iret
xor
push
cmp
jge
dec
rclb
insb
pusha
push
pop
sub
push
pop
bound
aas
xchg
shll
out
scas
adc
icebp
leave
cwtl
sahf
and
xchg
pop
sbb
fbld
fadds
mov
hlt
adc
adc
lahf
addr16
jne
mov
push
mov
sbb
mov
xchg
xchg
es
jecxz
pop
insl
in
and
loope
mov
dec
xchg
stos
pop
pop
adc
push
push
stc
xchg
jle
jb
cmp
pop
lret
int
lea
sub
jmp
call
jmp
mov
je,pt
mov
and
imul
jp
insb
jb
mov
repz
mov
aaa
and
xchg
aas
out
jne
and
sbb
push
rolb
adc
mov
loope
push
mov
sahf
jl
add
fcoms
fimull
mov
push
lds
sub
testb
cltd
mov
xchg
mov
or
addb
jp
mov
push
xor
enter
mov
sbb
add
cmpsb
sbb
mov
aaa
test
addl
insl
pop
jne
lahf
int3
sbb
daa
sar
and
cmp
sti
pop
inc
repz
test
aam
xchg
push
jbe
ret
jne
push
movsl
movl
jbe,pt
movsb
push
sahf
dec
in
aad
cmp
sbb
cmc
test
mov
leave
or
es
inc
xchg
sbb
sub
pop
jbe
neg
hlt
and
adc
test
in
test
cmp
aam
int
test
jp
andnps
and
sbb
lret
and
jno
xor
or
or
sbb
shlb
je
sub
out
xor
test
pop
aad
aaa
ljmp
insl
push
inc
jecxz
mov
fstps
jg
popf
mov
pop
fnstcw
jge
jecxz
in
stc
mov
sti
aad
ret
dec
insb
pushf
pop
call
lahf
ljmp
dec
test
sub
fwait
dec
sub
or
push
jmp
or
in
cmc
test
jecxz
mov
xchg
pop
mov
pushf
fxch
fxch
mov
inc
push
mov
movsb
add
xchg
lret
jo
aaa
pop
imul
inc
mov
mov
shlb
enter
cmpsb
jle
and
xchg
sbb
cmpsb
jle
xchg
int
add
ss
scas
repnz
cmp
out
mov
mov
and
sbb
je
fucom
adc
xchg
repnz
mov
mov
mov
jmp
jno
imul
mov
add
incl
sbb
movsb
or
add
out
fadds
filds
rclb
and
mov
imul
adc
pop
das
es
push
push
lret
subb
addb
fimull
sub
int
or
int
mov
inc
jae
sti
out
mov
pop
dec
sbb
out
mov
jge
cltd
addr16
repz
mov
fdiv
js
dec
stc
dec
sbb
in
cli
iret
into
add
loop
inc
xchg
add
enter
inc
adc
js
sub
adc
insl
adc
rcrl
cli
dec
loope
popf
scas
lds
jns
lret
mov
inc
jo
sbb
push
scas
pop
je
enter
leave
add
repz
dec
add
out
fs
xor
pop
ljmp
xchg
dec
mov
or
and
enter
fucomip
rorl
scas
outsb
or
es
cmp
dec
and
mov
lahf
leave
push
inc
add
iret
cmp
mov
sbb
pop
fsubl
or
fwait
sub
add
mov
or
jle
sub
adc
xchg
cmp
xchg
in
cmp
notl
xor
ror
dec
movsl
mov
decl
dec
sub
aam
cld
mov
adc
inc
sti
adc
fwait
dec
test
mov
xchg
pushf
jnp
add
jb
pop
mov
mov
and
jae
dec
jg
jle
xor
in
loopne
mov
pop
or
jecxz
xchg
push
dec
cmc
pop
dec
mov
push
xor
pop
jne
js
in
ss
mov
add
popf
std
push
xor
dec
icebp
adc
int3
adc
jb
sub
mov
push
jbe
adc
shlb
inc
mov
dec
xor
jg
or
sub
add
push
mov
outsl
cwtl
fimull
neg
mov
jl
mov
xchg
stc
mov
mov
jns
push
scas
aam
jmp
mov
stc
jae
lea
dec
pop
push
lret
sbb
push
xor
arpl
movb
mov
xchg
xchg
pop
sbb
mov
pop
push
sbb
inc
popf
lods
mov
test
sub
insb
gs
and
rcrb
xchg
add
and
rorl
aas
mov
scas
addl
sbb
fists
enter
xor
adc
jg
hlt
scas
pop
sub
mov
push
and
mov
leave
fs
popf
inc
xchg
in
mov
mov
push
int3
push
insb
movsb
add
and
leave
loope
push
adc
xchg
dec
insl
xchg
and
ljmp
mov
pop
pop
lcall
xlat
shl
lcall
mov
cwtl
add
or
adc
jae
adc
nop
jns
icebp
push
add
in
ja
sahf
add
pop
enter
in
popa
cmc
fstpt
and
xor
roll
xchg
xchg
mov
sahf
outsl
scas
jns
push
add
and
lahf
int
xchg
lods
lahf
mov
insl
xchg
ret
jmp
xor
in
cs
adc
rolb
xor
lret
push
xchg
or
push
inc
adc
inc
fldenv
add
icebp
ds
cmp
pop
insb
mull
jmp
vpavgb
inc
mov
movsb
inc
fisubs
and
out
jmp
cmpl
adc
lret
test
xor
xor
add
add
mov
stos
pop
sahf
and
gs
sub
cmp
jle
adc
and
or
addr16
add
jg
imul
loopne
cmp
dec
push
cltd
cltd
das
mov
jae
add
push
icebp
icebp
outsl
xor
dec
repnz
jne
mov
jns
test
rol
sti
jle
lock
mov
dec
les
mov
xchg
scas
or
jp
sbb
add
mov
pop
aam
dec
shrb
sub
daa
mov
or
insb
enter
mov
fs
insb
push
jae
dec
rclb
mov
pop
xlat
repnz
xor
xchg
add
outsl
jbe
cmpsl
inc
xchg
push
sbb
sbb
mov
jle
pop
in
and
stos
pop
jmp
sti
lea
adc
pusha
jmp
mov
or
cmp
mov
push
mov
scas
sub
out
xor
cmpsb
jl
cmp
add
sbb
aad
mov
push
out
jae
add
cmp
cli
adc
aam
pusha
shl
or
cmp
aad
mov
pop
jae
push
cmp
sub
leave
pop
insl
add
outsb
xor
ret
imul
mov
dec
inc
shl
repz
addr16
xchg
xchg
ljmp
scas
cmp
dec
inc
pop
fstpt
jb
aad
inc
xchg
mov
out
icebp
fwait
lea
insl
dec
test
pop
ret
cmpsl
jne
out
lods
sub
in
add
sub
repz
fwait
ss
adc
xor
cwtl
icebp
mov
fadds
fnstcw
outsl
cmp
ret
outsb
sarb
jg
cmp
fucom
icebp
cmp
sub
adc
movsl
sbb
movsb
in
scas
and
insl
aaa
push
movb
cli
mov
xor
lods
push
hlt
lds
cmp
push
and
pop
jp
aad
and
adc
test
imull
dec
cmp
hlt
pop
stos
add
jl
dec
xchg
jg
add
or
lcall
dec
fistpl
push
popf
jne
xor
push
jno
test
adc
sahf
sbb
mov
mov
ja
aad
lods
or
mov
push
cmp
xor
jo
das
fnsave
cmp
sarl
pop
gs
push
arpl
adc
add
xlat
pop
pop
add
mov
loop
popl
ret
jae
or
scas
fucomip
cmp
outsl
inc
push
rcrb
and
cmp
dec
ud2
jmp
mov
dec
icebp
xchg
movsl
test
pushf
pop
decb
outsb
mov
fwait
ljmp
sarb
or
fldl2e
je
out
xchg
in
test
cmpsl
test
andl
js
mov
movsl
pop
add
dec
stos
xor
xor
jl
shl
cmp
shrl
icebp
incb
out
mov
xchg
push
insb
das
mov
mov
iret
jecxz
fsubrs
cmp
nopl
push
lret
adc
xor
mov
push
in
popa
xor
fnstenv
cmpsl
jmp
push
jb
nop
rol
cli
jg
std
scas
or
jge
lcall
stc
inc
xchg
mov
sbb
icebp
cli
pop
dec
dec
xchg
add
dec
inc
xchg
mov
sti
rorb
into
ljmp
orl
cmp
orl
lret
fsin
sub
cmpsb
cmp
pop
jg
pop
cmp
lahf
mov
aas
fidivrl
mov
fstpl
push
xchg
and
lret
or
adc
push
fcoms
inc
jae
jnp
dec
scas
insl
inc
push
mov
jae
stc
lods
sbb
fwait
dec
inc
cmc
inc
mulb
pop
fidivrs
rcrl
add
jo
mov
clc
inc
inc
mov
loope
out
mov
sbb
cmp
hlt
hlt
aad
or
mov
pushf
mov
pop
add
sarl
pop
hlt
and
pop
sbb
in
loope
inc
inc
hlt
add
sbb
fsts
inc
pop
pushf
inc
fsubrp
xchg
shl
and
jo
jl
mov
push
or
lods
push
mov
xor
mov
int3
cmpsb
mov
sbb
add
or
and
jmp
jne
xchg
test
inc
jnp
ret
dec
iret
mov
cmpsb
pop
lods
in
scas
imul
cwtl
std
icebp
cmc
xor
out
hlt
cld
pop
jmp
jmp
inc
int
mov
xchg
stos
je
in
sbb
add
push
aas
int3
xchg
push
out
xor
in
add
push
sar
test
inc
or
mov
sbb
outsb
decb
in
dec
xchg
cltd
sbb
lret
inc
pop
jns
pop
mov
test
outsb
cmpsb
shll
lods
sbb
sahf
sbb
add
int3
call
es
icebp
xor
out
and
sub
popf
push
lods
fldt
sbb
xchg
mov
or
lcall
stos
dec
mov
shlb
nop
xchg
xchg
sbb
mov
inc
in
and
mov
jb
outsl
lock
jl
or
adc
or
mov
fsub
xor
roll
xor
sub
or
and
std
aad
movsl
inc
and
lcall
inc
arpl
jl
leave
dec
add
test
or
iret
pushf
add
jb
push
and
lea
loopne
push
xchg
add
mov
or
xchg
push
outsb
adc
jo
inc
int
cld
push
insb
divl
mov
dec
lock
add
fsubrs
rclb
fisttpll
scas
dec
int3
adc
xchg
leave
mov
inc
andb
cmp
std
sbbb
xor
sub
stos
lds
sub
xlat
and
sbb
outsl
dec
mov
scas
inc
mov
leave
mov
sbb
add
cs
jno
cmp
xor
pop
adcb
push
fldl
out
lahf
xlat
rorb
mov
pop
add
push
aam
mov
pop
jle
jg
test
xchg
sti
fs
out
pop
xchg
push
loopne
ds
iret
les
jnp
and
sbb
loop
cs
ret
ss
xchg
addr16
pop
cmp
xor
inc
or
sub
sub
cld
cmpsb
sub
loop
lahf
mov
sbb
or
push
std
push
cmp
lret
pop
mov
lods
les
sub
icebp
push
push
loop
mov
ficoms
pop
mov
jmp
nop
movsb
add
jp
cmpsb
jnp
add
cmp
jno
xor
mov
icebp
xchg
pop
or
clc
xorb
aam
fidivs
fmuls
imul
arpl
pop
sub
out
adc
rcll
out
popf
jbe
rcl
cmpsl
mov
repnz
xor
adc
mov
mov
cmp
lock
in
dec
sti
inc
ret
pop
popf
mov
imul
popf
js
fs
cld
mov
cmc
or
jb
lea
push
inc
pop
add
inc
icebp
inc
inc
repnz
scas
mov
test
fcoms
lcall
push
stc
setno
lea
outsl
jecxz
aad
fwait
inc
xlat
out
inc
fwait
das
inc
std
cltd
cmp
push
mov
fistl
dec
jns
xchg
dec
adc
sub
adc
push
cwtl
mov
dec
mov
cld
add
shll
pop
inc
jbe
gs
cmp
or
addr16
push
pop
ljmp
sbb
sbb
push
mov
jmp
mov
inc
jmp
mov
mov
xor
mov
lahf
pop
jge
fs
jnp
sub
daa
std
out
test
jne
insb
or
aam
pop
xor
sub
imul
jno
jl
iret
pop
aam
arpl
fcompl
stc
orl
and
pop
adcb
jbe
bound
pop
jne
mov
movsb
dec
fnsave
call
push
jnp
xchg
nop
and
popf
jmp
jl
inc
add
add
arpl
or
jmp
pop
and
add
sub
ret
test
or
jmp
xchg
stc
ficoml
outsl
push
xchg
jbe
lods
xchg
sbb
xchg
icebp
mov
and
fsub
test
push
sbb
xchg
dec
pop
dec
ret
mov
stos
or
sbb
cmpsb
insb
fnsave
jle
adc
ss
lahf
arpl
aaa
into
pop
inc
inc
sub
ljmp
fldcw
bsr
xchg
imul
fistps
or
pop
pushf
cltd
or
cli
in
sub
push
pop
repz
jg
push
ljmp
pop
xor
lea
add
jge
push
fdiv
cmp
pshufw
jle
inc
test
sbbl
hlt
sbb
sub
ret
out
sub
in
cmp
sub
xor
movsb
daa
dec
imul
leave
es
mov
sbb
movsb
pop
mov
in
jns
arpl
shll
and
adc
mov
call
inc
fisubl
mov
xchg
or
gs
add
scas
cs
mov
pop
fcoml
push
and
push
lcall
jl
pusha
clc
adcb
and
cltd
and
xor
in
push
movsb
lahf
add
pushf
fwait
push
aam
popa
sbb
jbe
stc
xchg
jge
mov
push
shrb
es
cwtl
fidivl
sahf
mov
aam
push
call
mov
js
push
sbb
add
cmp
das
loopne
or
inc
xchg
or
fwait
xchg
mov
scas
insb
mov
insb
sahf
xchg
jl
rorb
adc
bnd
sub
add
dec
test
test
cmp
out
pusha
lock
enter
mov
or
inc
pop
adc
cmc
sub
mov
ds
fsub
shll
pop
and
enter
fwait
xchg
mov
rclb
aad
mov
add
lea
inc
jg
sbbb
pop
enter
push
xchg
loope
mov
lds
sub
add
popa
lret
mov
fldt
pop
outsl
dec
adc
iret
and
pop
push
test
into
adc
pop
pop
fmulp
add
pop
inc
cltd
mov
push
mov
inc
rclb
xchg
into
scas
mov
fsts
xchg
imulb
inc
lret
mov
stos
add
addr16
test
cmpsb
mov
dec
sbb
mov
dec
cli
scas
mov
aas
jb
ficomps
les
lahf
sbb
insb
xlat
call
mov
and
mov
fisttpl
pushf
cmp
cli
sbb
test
and
fcoml
cmpsb
ss
xor
pop
adc
cmpsl
mov
pusha
scas
jno
xlat
jecxz
inc
shlb
ja
scas
fildl
push
dec
xchg
sub
pop
or
mov
ret
ret
fidivs
inc
jo
jg
xchg
push
mov
bound
rcrb
insb
xlat
imul
adc
testl
mov
lock
add
pop
sahf
xchg
xor
and
scas
movsb
inc
mov
fs
mov
or
jp
popf
fstps
je
cld
data16
ret
xor
dec
sub
sar
or
mov
in
roll
lods
andb
aas
cld
mov
pop
std
lea
adc
xor
test
mov
test
push
repnz
inc
mov
lds
test
inc
mov
xor
pop
xor
aas
xor
push
xchg
dec
hlt
pop
into
add
lahf
add
jmp
pop
push
loopne
jecxz
stos
int3
jl
int3
xchg
aam
lods
std
inc
add
outsl
cmp
jmp
or
pop
ficoml
lods
adc
movsb
mov
push
adc
xchg
lea
loop
or
mov
fwait
lock
mov
jle
lock
into
ljmp
das
mov
rclb
pop
jle
push
xchg
sti
das
jb
sub
scas
sarb
adc
clc
fwait
sub
jnp
jl
bound
aad
sub
xor
fsubrs
add
sub
push
xor
mov
fs
add
jl
int3
or
loopne
pop
hlt
adc
or
cmpsb
arpl
test
lahf
aad
sbb
cmp
testl
sub
call
mov
xchg
adc
sarl
pop
jp
adc
inc
shrl
mov
cli
inc
adc
push
ret
fbstp
sub
in
add
inc
test
mov
jbe
shr
les
rcll
ds
mov
sbb
jl
stos
jbe
rolb
mov
mov
pop
pop
lea
mov
sub
dec
xor
icebp
je
loop
mov
sub
fstpt
inc
pop
dec
fsubrl
stc
mov
sub
xchg
or
add
rcr
ret
call
out
sahf
xchg
std
mov
in
cmpsb
jno
in
add
sbb
push
or
add
aas
mov
in
loopne
out
mov
mov
fidivrl
push
ficomps
cmc
dec
roll
inc
xchg
pop
aas
sub
xchg
or
cli
dec
or
mov
sbb
adc
in
out
arpl
cmp
mov
add
loop
or
repnz
subb
das
inc
test
xchg
sub
aam
fwait
test
adc
and
outsl
push
aas
inc
mov
bound
in
sbb
test
adc
repnz
out
xor
rcrl
in
int3
jnp
pop
insb
pop
movsl
std
mov
lret
dec
mov
fisubrl
jo
or
mov
add
pop
pop
sbb
sub
je
jl
add
cmpl
and
popf
cmp
fsubr
cmpsl
pop
fstps
jnp
or
jbe,pt
hlt
push
add
lret
xchg
mov
insl
lret
mov
insl
fs
fdivl
or
mov
cs
jne
xadd
xor
stc
xor
lret
cltd
push
dec
setae
push
popa
inc
push
jmp
roll
popf
cltd
cmp
psubb
in
cmp
fdiv
test
daa
mov
loope
dec
mov
cmpsb
fistpl
mov
mov
neg
lcall
out
lret
out
in
push
dec
clc
lret
xchg
es
mov
test
xor
lock
pusha
pushf
dec
stos
stos
rcrl
call
rcrb
pop
or
lods
movsl
aad
aad
enter
jno
xchg
scas
cmc
lret
fs
mov
imul
lahf
add
ret
mov
xchg
mov
enter
cmp
fidivrl
lret
jg
enter
push
adc
subl
ret
lret
arpl
inc
pop
mov
add
lods
call
or
adc
ljmp
imul
dec
je
or
lret
cmp
movsl
cmpsl
fisubrl
and
cmp
lcall
test
out
mov
movsl
jmp
outsl
lcall
pop
insb
xor
mov
mov
data16
ljmp
adc
pop
pop
jne
dec
lret
or
popf
mov
addr16
or
cmpsl
fcoms
lret
test
inc
jmp
in
xchg
mov
mov
mov
repnz
test
fwait
dec
mov
or
cmp
jmp
call
out
popf
dec
int3
test
arpl
mov
push
into
sbb
inc
fnsave
push
inc
cltd
cmp
test
outsl
sub
jne
or
ret
sbb
pop
cmp
inc
cmp
jns
mov
pushf
pop
cmpsb
cli
xor
clc
xchg
add
cmp
xchg
mov
add
out
xchg
dec
mov
pop
cmp
addl
push
and
push
cmp
inc
mov
das
push
fdivrs
arpl
push
pop
add
enter
push
jmp
sti
jnp
or
lea
push
out
sti
push
push
fs
repnz
js
dec
xchg
cmp
rol
fcoms
inc
mov
ss
and
repnz
push
push
repnz
aaa
loope
lahf
adc
ss
mov
sahf
into
and
fs
leave
mov
push
mov
sub
mov
fcmovnu
js
subb
lcall
sbb
or
dec
stc
adc
jmp
mov
nop
pop
cmp
jns
and
mov
xchg
cwtl
fcoms
lock
daa
lret
push
cmp
cvtps2pi
add
push
jle
push
xor
sbb
inc
jecxz
xor
pop
sub
adc
loope
or
dec
xorl
push
stc
out
sti
sarl
imul
in
or
dec
jp
and
rclb
xchg
mov
and
and
je
sbb
arpl
out
test
pop
lcall
cmp
mov
fcomi
pop
andb
add
jns
js
sar
xchg
adc
fnstsw
fdivr
xchg
mov
aam
ljmp
fistl
dec
xchg
jmp
fldenv
jnp
xor
dec
add
lret
ja
sub
mov
sbb
mov
fnsave
pop
jmp
lods
and
push
xor
lea
gs
mov
jl
cmpsl
sbb
mov
dec
pop
jns
out
and
mov
cli
lock
and
jne
xchg
xor
shll
cwtl
lcall
out
addr16
push
lahf
sbb
jns
adc
mov
std
inc
clc
jne
and
adc
xchg
nop
out
jp
inc
xor
xor
fildl
test
push
push
das
sub
xlat
test
xchg
outsl
leave
pop
mov
pop
movsl
cmp
shll
fwait
das
mov
rcrl
push
cmp
cmpsl
push
jne
push
data16
sub
aaa
and
arpl
ja
jno
orb
xchg
icebp
xchg
pop
pop
push
stos
into
xor
xor
add
mov
push
push
or
sub
xchg
cmp
jae
sbb
stos
jp
into
test
xchg
stc
aam
rcrb
in
ficoml
lods
inc
pop
daa
cltd
lret
sbb
add
shr
cmc
fildl
mov
fidivl
xor
or
mov
test
xchg
sub
fwait
mov
pop
and
sbb
ret
test
movsl
cltd
call
sub
fwait
imul
sbb
mov
in
pop
pop
push
cs
jbe
push
mov
loopne
lret
outsl
in
mov
mov
out
xor
bnd
fadds
popa
loop
xor
push
sbb
cmp
jns
or
lods
ss
mov
gs
push
out
in
imul
dec
and
adc
xor
dec
addl
outsl
mov
adc
and
lcall
cmp
sub
lods
mov
xchg
pop
fmul
add
mov
mov
stc
pop
mov
jae
push
jnp
add
std
xor
ds
pop
cmp
aad
cmp
fcomps
das
hlt
or
das
mov
xchg
jo
in
sti
orb
shl
xchg
dec
jecxz
std
int
addl
add
jbe
jmp
aam
mov
mov
test
mov
mov
aad
inc
repnz
inc
mov
dec
add
sub
in
pusha
pop
pop
sbb
ds
jne
movl
in
and
shrb
outsl
loop
hlt
idiv
adc
and
sub
xchg
test
jmp
jge
or
mov
inc
mov
mov
mov
jno
enter
xchg
jmp
fimull
sub
sti
imul
and
xor
outsl
sbb
xchg
pop
sbbl
insb
je
sub
dec
push
xchg
lods
mov
xlat
inc
pushf
adc
dec
dec
test
lcall
cmp
cs
jne
mov
mov
mov
xor
cs
stos
cmpsl
mov
shr
jae
in
stos
aad
stc
jle
pop
cli
rorb
popa
jmp
cmpsb
scas
pop
inc
nop
bound
dec
pop
sub
lods
pop
cmp
cmp
adc
test
add
repz
cli
loop
and
xchg
jmp
aaa
das
aaa
jle
xor
pop
int3
sub
addb
sub
cld
inc
pop
out
addr16
test
int3
sbb
int3
hlt
jle
dec
call
mov
or
inc
push
decl
hlt
xchg
jo
xchg
jb
insb
mov
adc
mov
std
and
adc
cwtl
mull
jle
push
or
sbb
imul
sub
test
leave
jmp
bound
mov
js
jb
cmp
ds
fcoml
nop
das
fwait
clc
fimull
mov
mov
xor
xchg
cwtl
inc
cmp
ret
dec
xor
insb
and
adc
push
jmp
gs
sub
push
adc
iret
rcll
sti
mov
sarl
xor
aas
popf
stos
cmc
scas
scas
mov
insb
mov
pop
leave
add
bound
xchg
lods
into
lods
movsb
jb
cmpsl
rorl
in
push
push
cmp
jmp
out
inc
and
popf
fsub
cmpsl
imul
in
outsb
das
in
out
out
ss
mov
imul
fwait
andl
call
mov
push
fdivl
sti
push
pop
push
out
and
outsb
insb
jns
idivb
sarb
cmp
cwtl
jns
aam
xor
mov
and
arpl
pushf
push
leave
cmpsb
inc
cltd
push
inc
lea
cmp
fs
shlb
icebp
sbb
adc
adc
pop
or
mov
sarl
cmp
addr16
pop
outsb
faddl
das
es
fcomps
pop
nop
pop
sub
stos
in
ret
xor
or
mov
repz
setge
in
leave
xchg
mov
aad
fwait
lcall
scas
icebp
jp
fmull
or
cmpb
idivb
mov
and
mov
sti
xor
je
loopne
dec
adc
aas
xor
or
aaa
mov
movsb
xchg
dec
ret
jl
mov
test
mov
inc
mov
movsl
shlb
cmp
rcrb
out
pop
xchg
outsl
pop
pop
pop
xchg
mov
sbb
jo
inc
stc
insl
sub
pop
inc
aad
insb
xor
jae
xor
in
inc
sbb
mov
cmpsb
fwait
hlt
jno
outsb
mov
lock
sbb
scas
les
pop
les
cwtl
lods
test
sahf
popa
mov
mov
add
mov
enter
pop
cmpsl
js
test
ds
jmp
and
int3
clc
imul
mov
js
add
inc
loop
cld
stos
call
stos
in
std
shrl
es
sbb
arpl
mov
push
lods
scas
fcmovbe
test
pop
or
xchg
push
loope
cmpsb
xchg
xchg
jns
jns
aad
dec
cwtl
std
add
jg
jae
daa
lahf
iret
fs
push
stos
jo
xchg
and
mov
ss
lock
pop
push
insl
popa
push
test
call
push
inc
push
lods
icebp
mov
std
imul
dec
fdivp
pushf
scas
mov
insb
or
in
dec
jae
scas
scas
sti
icebp
mov
mov
sbb
movsb
add
xchg
and
movsl
xor
movsl
mov
outsb
xor
sub
mov
mov
push
jns
fistpll
mov
in
addr16
xchg
or
or
arpl
pop
jbe
push
dec
cmp
inc
imul
push
cld
or
icebp
ss
int3
push
ds
jp
xchg
cs
sub
or
fidivs
xchg
xor
ret
inc
jecxz
andb
imul
xchg
stos
jnp
jmp
dec
hlt
out
mov
xor
push
call
fwait
leave
xchg
aam
or
and
mov
push
pop
mov
adc
out
popa
cs
push
popf
sbbb
data16
jnp
jmpw
mov
movsl
incl
jge
inc
rcrb
xchg
loop
in
mov
sub
fnstenv
insl
test
ja
inc
pop
jns
insb
xchg
rorb
fstl
test
sub
les
fsubr
cmpsl
sbb
pop
mov
add
inc
push
aam
roll
adc
xor
cmp
cmp
jmp
push
loopne
or
test
xchg
xchg
mov
jmp
add
fdivl
ret
push
sti
cmp
rorl
lods
inc
mov
mov
sub
dec
lds
arpl
bound
mov
add
cmp
dec
pop
test
or
pushf
jo
enter
push
cltd
gs
lcall
xchg
in
inc
loopne
mov
push
lds
rsqrtps
mov
outsl
mov
std
fs
cmp
dec
daa
stos
aad
xchg
or
mov
adc
icebp
mov
mov
xchg
sub
add
int3
xchg
addr16
rcrb
cmc
push
mov
jge
leave
sbbb
xor
pop
mov
dec
adc
dec
lret
sub
je
fdiv
cmp
scas
push
add
insl
dec
int
punpckhdq
mov
test
adc
notb
pop
xchg
data16
push
outsl
leave
pop
lcall
jo
or
loopne
rcrb
aas
xchg
push
movsl
jns
sbb
and
scas
cmp
pop
inc
push
lods
gs
ret
sub
das
and
out
add
jp
icebp
js
pop
cmp
nop
test
cltd
push
ret
xor
jb
js
and
jle
or
out
sbb
push
push
lret
xchg
fs
in
lcall
lcall
inc
addr16
or
testl
and
lcall
mov
jo
mov
jnp
adcb
loop
ss
xor
jb
jne
pop
jns
push
out
daa
jnp
int3
sahf
sarb
lods
pop
ljmp
sbb
fildl
pusha
push
jo
jl
or
fisubl
and
inc
mov
fstps
mov
cwtl
sub
dec
sbb
int3
add
push
push
cmp
xchg
or
xor
mov
and
data16
outsl
imul
icebp
cmp
popf
push
mov
shlb
xor
in
gs
icebp
push
arpl
cmp
sbb
xor
ja
std
in
xchg
pop
out
cmp
mov
std
int3
and
out
add
mov
xchg
dec
inc
in
jns
push
dec
xchg
sbb
xchg
imul
or
xlat
sbb
mov
sbb
popa
iret
xchg
dec
push
inc
pushf
enter
jns
inc
jo
inc
lds
mov
mov
lahf
cmp
jae
mov
int
into
daa
lods
scas
add
dec
mov
dec
je
loope
inc
jp
mov
icebp
insl
lods
loop
jae
xchg
push
fnstsw
cwtl
xorl
jmp
sarb
pop
lea
out
xchg
test
sti
aam
insb
cmc
inc
fcmovbe
inc
int3
push
adc
push
xchg
mov
add
insb
jnp
je
sbb
add
pop
fistl
pop
mov
mov
je
data16
add
and
les
or
testl
adc
in
incw
or
mov
lea
xchg
sbb
test
cltd
fsubl
nop
dec
sbb
push
lock
insb
in
and
mov
lods
data16
orl
sub
mov
repz
hlt
push
adc
inc
push
pusha
pusha
fisttpl
xchg
les
sahf
mov
hlt
lock
arpl
jno
jg
cmp
dec
pop
ljmp
pop
jns
int
jbe
lret
pop
adc
les
aas
jbe
push
data16
addr16
pusha
sub
and
scas
scas
mov
cmp
in
aas
rclb
adc
les
push
add
cmp
out
test
dec
clc
mov
daa
cwtl
add
xor
xchg
sub
aam
mov
or
out
and
xor
rolb
xchg
fxam
push
sbb
arpl
popf
test
sub
leave
outsb
pop
dec
nop
popa
xor
mov
mov
out
lea
lret
cmp
sbb
fcompl
adc
sub
xchg
subb
test
lock
jp
ret
sahf
pop
sbb
imul
imul
rorb
mov
std
lret
cld
xchg
sub
fstpl
adc
mov
dec
data16
and
jecxz
lock
pop
adc
rcr
icebp
add
pop
loopew
in
xchg
cmp
sub
push
cmp
imul
scas
rol
mov
mov
repnz
jo
in
data16
imul
cmpsb
pop
cli
push
dec
movsb
inc
movl
cmp
cmc
pop
push
adc
xchg
xchg
xor
push
lahf
leave
mov
je
stos
jo
lock
jg
leave
stc
dec
push
pop
adc
ret
rcl
sub
dec
xchg
inc
xchg
dec
or
mov
in
push
stc
sti
add
cmp
add
or
sub
popf
std
sarl
out
lahf
scas
adc
or
jb
and
xor
dec
movsb
xor
mov
cwtl
ja
adc
cmp
mov
xchg
cmp
and
test
int
pop
mov
test
add
out
xchg
and
std
out
call
outsl
cmp
adc
movsb
sbb
jmp
adc
push
test
mov
pop
lock
cmp
pop
repnz
mov
andl
xor
pop
out
stc
push
or
xchg
push
outsb
lods
mov
jle
mov
ret
imul
cmpsl
and
add
and
shr
pop
mov
add
sbb
in
imul
inc
or
test
sbb
or
or
sub
and
stc
inc
xchg
es
shl
sti
sahf
ret
sbb
jmp
sbbl
dec
daa
ja
cmc
mov
ficomps
sbb
ljmp
aaa
jl
or
mov
sbb
lret
mov
gs
jp
shrb
fwait
dec
in
rorb
cmc
pop
and
mov
test
addb
pop
mov
jnp
xlat
xchg
int3
pop
mul
jp
pop
rclb
jecxz
sbb
pop
adc
mov
xchg
dec
shl
sub
je
scas
loop
shl
inc
pop
aam
push
mov
or
aam
arpl
fdivrp
sbb
mov
push
xchg
gs
test
pop
xchg
xlat
sbb
mov
outsl
mov
sbb
xchg
fisubs
jmp
stos
aaa
stos
lea
push
push
in
mov
in
cs
out
lock
jb
hlt
or
nop
fdecstp
int3
mov
ficoml
inc
cmc
jbe
test
fcom
inc
out
rcl
jo
arpl
je
lret
or
rol
imul
movsb
bound
jb
mov
mov
bound
and
add
shrl
jle
dec
jle
arpl
mov
popl
push
pusha
jge
jbe
adc
lock
dec
mov
adc
mov
int3
movsb
push
es
xor
push
sbb
ret
pop
cmpsb
mov
push
imul
fs
shll
lods
sub
push
out
loope
in
sub
out
and
mov
clc
aas
mov
sti
insb
adc
cld
xor
stc
xchg
pushf
testl
lods
lods
push
icebp
push
pop
adc
lahf
out
mov
fisttps
sbb
mov
adcb
mov
and
adc
ds
in
test
shl
fistl
push
lret
es
out
scas
out
sbb
movsb
bound
xor
xchg
std
dec
adc
jno,pt
fmuls
inc
xchg
fcmovne
xor
add
mov
dec
adc
mov
sbb
add
rcrl
mov
xor
cmp
fwait
lods
xor
lods
push
pop
pop
pop
xchg
sbb
mov
fcmovnb
jl
cmpsl
negb
jno
je
iret
cs
push
push
xchg
jl
or
fisubl
inc
fisubrs
pusha
push
shlb
sti
and
sub
das
mov
repnz
jb
out
rorl
popf
repz
xchg
add
into
or
add
mov
scas
out
mov
push
and
loopne
mov
lds
dec
and
cmp
pushf
ret
inc
insl
inc
xor
ja
add
scas
cmp
out
adc
mov
push
sub
pop
sbb
addl
imul
fmull
stos
sbb
lock
fcmovb
push
rorl
mov
sub
xchg
jns
cmp
xchg
enter
cltd
adc
fcmovb
xor
pop
mov
ret
push
movsl
lods
ret
or
xor
mov
lods
push
aaa
jbe
loope
jmp
into
add
fwait
xor
sbb
mov
push
rcrb
mov
inc
es
dec
push
and
add
in
aaa
xor
outsl
rclb
and
jmp
ljmp
add
xor
cmpsl
jle
aad
movsb
cmp
jp
lret
aam
in
mov
stc
ja
cmp
clc
mov
stos
ficomps
adc
cltd
ss
cli
inc
mov
clc
pop
lcall
mov
imull
push
and
xchg
loop
jl
sub
sbb
pop
push
lds
leave
push
nop
jge
push
jp
adc
push
mov
mov
or
xlat
xor
xlat
cmp
dec
clc
xchg
and
ret
pop
iret
xor
fnstenv
push
xchg
xchg
insb
fs
sub
sbb
daa
sahf
mov
and
les
loopne
push
push
sbb
scas
ja
cmp
test
xor
or
lahf
jae
add
lods
cltd
and
xchg
push
mov
xor
insl
pop
in
out
dec
pop
test
fsubs
mov
adc
dec
lcall
imul
dec
lock
icebp
mov
ud0
lds
xor
mov
push
ds
inc
aaa
mov
mov
jo,pt
mov
addl
aas
jg
xchg
jb
xor
aas
repz
sub
inc
mov
cmp
mov
adc
or
idiv
xchg
movsl
xorl
negl
push
cmc
fldt
jecxz
push
subb
les
add
mov
push
cmp
mov
in
loopne
sbb
shlw
xchg
inc
dec
cmp
daa
sub
add
push
js
fmul
inc
mov
push
nop
ljmp
ret
jb
stc
xchg
in
pusha
dec
adc
or
dec
inc
hlt
ret
jge
cli
icebp
clc
fs
mov
pop
stos
inc
mov
xchg
xlat
pusha
xor
mov
lret
rol
shlb
jl
mov
xlat
mov
push
push
xchg
jns
xor
fidivrs
mov
mov
add
push
cmc
jge
insl
sub
add
xlat
cmp
jg
js
test
hlt
out
jl
mov
rorl
pop
and
jle
sub
jno
lods
sbbl
test
dec
fsubrl
mov
mov
iret
lcall
xchg
shl
addb
loopne
mov
jnp
cmp
xor
cli
adcb
add
adc
xor
fadd
loopne
rcll
push
sub
push
mov
fistps
jg
xor
sub
popf
cmp
out
inc
dec
cs
pop
int3
mov
leave
xor
test
std
xchg
xchg
push
imul
fisubs
dec
outsb
xorl
push
cmpsb
add
sub
pop
je
mov
cltd
lods
xor
cmp
movsl
jnp
int
mov
leave
add
lret
fidivl
lds
sbb
pop
dec
fsubl
fstp
stos
cmp
pop
sbb
out
cmpsb
js
iret
push
das
ss
jge
pushf
lret
cwtl
dec
sbb
clc
sahf
int
mov
notb
sbb
or
fwait
jecxz
wrmsr
mov
pop
insb
adc
pop
or
and
loope
dec
xchg
mov
imul
cld
out
mov
sti
ss
pushf
rcr
ret
and
adc
sbb
clc
add
js
xchg
mov
outsb
sbb
xchg
cltd
mov
mov
sahf
inc
shll
xlat
adc
sbb
daa
test
or
daa
xchg
js,pt
sbbb
sub
and
xlat
sbb
test
xor
imul
push
fsts
clc
arpl
cmc
das
push
out
scas
push
push
mov
xor
pop
dec
push
out
mov
push
popa
popa
adc
cwtl
lds
cmpsb
lea
mov
ja
pop
sub
out
inc
shll
jns
jle
and
push
outsl
ret
stc
mov
ds
cs
shrl
jns
ret
jecxz
int
scas
add
andb
jmp
cld
rcl
roll
aad
mov
mov
loopne
lods
fiadds
ljmp
pop
add
arpl
inc
xchg
das
cli
rorb
or
mov
cs
sub
cltd
std
aad
js
scas
sub
and
loop
imulb
aas
lcall
adc
addb
jg
ja
adc
in
xchg
adc
sub
lods
lods
or
in
mulb
dec
inc
inc
cmpsb
dec
cmp
shll
mov
movsb
dec
push
xor
stos
ss
data16
sbb
xor
scas
sub
imul
xor
loopne
sbbl
fadds
jno
movsl
mov
sbb
inc
outsl
dec
sbb
pop
fsts
cmpsl
adc
add
repnz
ljmp
loope
rol
mov
mov
push
mov
addr16
add
jp
sbb
xchg
mov
add
xorb
dec
xchg
fcoml
push
out
adc
cmpsb
mov
jle
js
mov
sbb
cmp
out
dec
test
mov
mov
pop
pop
call
jge
stos
andl
xchg
sbb
fnsave
cmc
sahf
add
push
dec
mov
stos
sub
inc
sbb
inc
add
in
jecxz
and
aam
pop
enter
js
mov
and
mov
rcrl
jmp
pop
mov
leave
dec
xor
xor
add
pop
lods
insb
mov
pop
in
mov
fwait
das
stos
add
push
add
test
adc
fiaddl
sub
push
sti
jle
aaa
jge
fisubrl
or
sarl
bound
or
ljmp
orl
pop
xor
pop
outsb
cmp
sbb
mov
sahf
mov
fdivr
in
nop
repnz
cmp
sbb
xchg
mov
add
add
mov
sub
xor
insb
loopne
mov
and
sbb
ret
add
ljmp
test
xor
out
push
mov
lds
and
fs
jb
lea
fmul
ret
adc
or
push
sbb
jle
mov
and
or
in
std
and
leave
sbbl
adc
cmc
add
in
lods
adc
xor
push
push
leave
xor
cltd
adc
imul
pop
sbbl
cmp
test
mov
jge
mov
fdivs
stos
adc
loop
call
lods
push
addr16
pop
dec
aad
and
jmp
xchg
pop
iret
ja
mov
mov
dec
fwait
insl
xor
mov
inc
cmpsb
sbb
out
rcl
fcom
xchg
mov
out
pop
pop
sbb
xchg
pop
jg
jmp
mov
lret
nop
ss
jg
pop
push
or
jns
mov
out
push
dec
mov
push
pop
add
mov
outsb
xchg
pop
adc
lds
inc
bound
jno
or
sbbb
ljmp
lods
aas
mov
test
mov
push
je
jbe
pop
sbb
shll
pop
pusha
inc
jle
xchg
adc
aad
movsb
stos
ds
test
pop
fldcw
daa
ja
aad
dec
and
xorb
and
jno
movsl
adc
loope
das
and
or
aad
mov
mov
ljmp
lods
jno
mov
cli
and
shrl
add
xchg
fsubrs
in
bnd
fcompl
repz
jns
mov
pop
inc
fisubrs
ljmp
cmpsl
jbe
cmovae
pop
sbb
mov
add
insb
in
pop
jne
pop
mov
jo
adc
inc
push
in
addr16
fisubrs
jmp
adc
sbb
add
inc
outsb
lcall
jg
daa
nop
cli
or
sub
sbb
push
aam
pop
jecxz
pop
xlat
cmp
mov
incl
adc
lcall
xchg
ss
setbe
loopne
mov
sub
mov
mov
icebp
lods
ljmp
mov
xchg
xchg
adc
adc
mov
aaa
mov
in
imulb
sbb
int
in
jo
andb
aas
xchg
pop
xor
add
inc
in
cmc
mov
gs
or
stos
pop
lods
cli
dec
dec
pop
push
xor
es
int
enter
jns
pop
inc
fists
hlt
sub
xor
mov
push
into
xor
incl
out
jl,pt
icebp
outsb
ret
pop
lock
mov
xor
repz
mov
ljmp
ret
into
bound
pop
repz
pop
jg
sahf
incl
subl
mov
push
sbb
cmp
xchg
push
adc
stc
rclb
inc
pop
cli
pop
inc
mov
pop
or
push
or
movl
int3
sub
fists
lcall
test
sti
xchg
loope
aas
add
mov
aad
pop
add
and
aam
jae
gs
ret
cmpsl
xor
xchg
aam
xor
repz
std
add
push
push
rolb
cmpsl
or
jbe
aaa
push
push
out
add
lods
stc
fcmovbe
out
xchg
sub
xchg
cld
sti
mov
inc
enter
dec
inc
pop
loopne
mov
aas
lods
mov
sti
out
pop
loop
stos
xchg
adc
push
popl
es
cmp
frstor
insl
dec
add
sbb
rol
and
mov
cmp
out
mov
loop
subl
push
enter
jbe
push
xor
int
push
gs
lods
mov
dec
adc
jmp
sub
jp
mov
inc
sub
and
xor
inc
pusha
es
mov
jae
xchg
jle
xor
pop
cmp
lds
xchg
inc
out
ret
int
pop
pop
in
pop
lahf
pop
ret
mov
mov
push
aam
push
cld
aaa
inc
mov
mov
xor
sbb
xchg
or
jno
cmp
xchg
call
mov
add
xchg
adc
lea
mov
filds
lret
das
outsl
call
iret
cmp
mov
push
roll
jge
dec
shrl
loope
cmp
insb
xor
mov
ljmp
pop
dec
sbb
out
sub
inc
cli
addb
push
out
mov
enter
pop
mov
add
sbb
int
jmp
dec
and
jbe
add
ret
push
std
stos
dec
mov
into
mov
sbb
pop
fildll
arpl
andl
jo
lods
cld
jae
mov
pop
dec
int3
and
gs
mov
fistps
out
ret
clc
sub
xor
xor
cmp
test
mov
mov
cli
xor
sbb
call
and
cwtl
cld
cmp
and
jecxz
mov
dec
sub
sahf
sti
js
shrl
sahf
mov
sahf
aas
adc
adc
mov
data16
lcall
sub
fdivl
sbb
popa
popf
pushf
loopne
outsl
cltd
rorb
loop
insl
adc
rcrb
fidivs
ss
shlb
enter
loope
dec
mov
inc
gs
sub
decb
icebp
jp
mov
cwtl
mov
mov
lock
jb
stos
test
or
lods
std
jns
dec
inc
fldl
pop
inc
jb
xor
mov
lret
loope
aaa
clc
js
xchg
gs
jge
mov
sbb
data16
xor
stc
lret
shlb
dec
gs
mov
sbb
aas
add
aad
push
or
lret
cmp
push
pop
shll
jne
lods
sbb
xor
sbb
out
sbb
mov
fidivrs
pop
pop
je
stos
mov
lea
cmpsl
mul
sbb
mov
pop
dec
repz
out
enter
pop
iret
inc
jnp
pop
pop
test
dec
and
sub
lahf
jl
lea
inc
rolb
ljmp
pop
cltd
jb
adc
rorb
out
aaa
out
test
mov
or
subb
out
filds
cltd
pop
add
and
jae
cmc
add
and
test
add
gs
std
int
mov
mov
aad
push
lahf
cmpsb
fsubl
not
test
sbb
lods
dec
iret
mov
xlat
out
add
push
or
push
pop
das
jmp
mov
or
mov
sbb
sbb
push
xor
imul
xchg
movsl
adc
mov
adc
mov
sub
fstl
sub
ds
int3
pop
es
mov
xor
out
xorb
mulb
repnz
xchg
cld
push
out
in
mov
mov
sbb
imul
cmp
idiv
les
sbb
enter
and
dec
sbb
sti
sbb
ret
scas
hlt
sbb
test
adc
sbb
jo
scas
inc
push
mov
pop
in
clc
and
mov
ljmp
xor
inc
adc
sub
lcall
or
xchg
js
enter
jns
sar
jg
cmp
push
popf
je
and
add
xchg
je
inc
fnstsw
in
cmp
scas
jbe
cmp
or
push
pcmpgtd
test
pop
sub
mov
popa
add
dec
and
or
dec
or
fwait
mov
mov
imul
fsubrs
mov
movsl
das
stc
and
mov
in
and
stos
push
adc
jbe
xor
iret
lods
nop
push
or
movsl
push
lock
xor
movsb
das
std
mov
pop
data16
aaa
stos
in
stos
es
mulb
add
jns
adc
out
sbb
xchg
pop
mov
adc
daa
dec
cmp
jno
fs
jb
mul
out
cld
int3
push
adc
idiv
test
or
fisttps
sbb
xchg
cmp
lea
sbb
inc
add
repnz
sub
in
jg
adc
scas
adc
cmpsb
fcmovne
jns
push
dec
add
stos
mov
jge
rcrl
rolb
xchg
fcoms
in
leave
mov
nop
les
cmpsl
pushf
stos
xor
sbb
scas
insb
xlat
sub
fcoml
mov
sbb
jnp
lahf
mov
sbb
push
dec
shlb
push
jl
or
jge
adc
cmc
jns
mov
cli
popa
gs
mov
and
out
push
cmpsl
xor
adc
adc
jne
fimull
and
push
clc
imul
roll
push
scas
fisttps
iret
testb
push
jmp
jno,pt
mov
xor
and
testl
xchg
push
push
cmpsb
pop
jl
mov
sub
mov
vcvtpd2dqy
inc
pushf
enter
xor
gs
mov
fcmovb
sbbb
xor
rorb
ret
mov
in
xor
out
xor
lock
imul
pop
jnp
cmc
in
push
jns
fs
adc
xchg
lods
mov
sti
and
cs
in
sub
aaa
fsubrp
cmp
int3
adc
leave
sbb
sub
cli
cmpsb
mov
nop
incb
pop
stos
xor
pop
mov
mov
sarl
call
inc
jmp
xor
and
sysenter
out
into
mov
bound
gs
push
xor
inc
mov
pop
push
jo
fdivrs
add
push
clc
aaa
fisttpll
mov
fdivs
mov
push
push
xor
and
add
push
jle
and
movb
cmp
in
movsb
mov
rclb
in
adc
cmc
xlat
repnz
pop
cmp
in
fwait
jns
mov
js
incl
inc
cmp
fnstsw
mov
vshufps
cmc
cwtl
cmpsl
xor
mov
or
xchg
ljmp
lret
pop
cld
push
add
inc
cmpsb
bound
nop
inc
fists
jbe
cltd
mov
cli
out
cs
push
jne
incl
or
fisubrs
repnz
fbld
std
pop
das
xor
adc
sahf
push
sub
sahf
push
insl
dec
test
xchg
pop
je
sahf
fwait
adc
push
xor
aam
cwtl
ss
xchg
insb
pop
pop
in
jae
inc
jecxz
icebp
bound
js
daa
jno
mov
aad
lcall
test
sbb
xor
cltd
adc
push
ja
pop
cmpl
lods
mov
fisubs
xor
push
insl
aad
icebp
hlt
adc
mov
xor
pop
mov
and
inc
lahf
cmp
mov
dec
movsl
and
dec
add
and
hlt
or
mov
dec
dec
stos
testb
push
out
mov
xchg
jecxz
lock
scas
cmc
in
xorb
scas
int
add
ficoml
js
adc
dec
insl
jo
xor
push
mov
js
lret
mov
adc
jno
jmp
or
aad
push
jl
jmp
mov
lret
lcall
fldcw
and
add
inc
cmpsl
mov
push
sbb
jmp
xor
repnz
aas
gs
ds
leave
repz
sub
dec
popa
pushf
jp
out
rorl
xchg
fisubs
fdivrl
aas
jb
sbb
fcmovnb
test
in
je
mov
ds
aam
inc
push
outsb
mov
xor
mulb
in
ja
setg
in
addr16
cld
mov
insl
loopne
mov
add
cmpl
xchg
inc
in
mov
dec
lods
movb
movsl
mov
dec
shll
jmp
sbb
fsubl
sub
and
cmpsb
pop
scas
jl
or
mov
insb
and
sarl
stos
rorl
jae
fldcw
int3
movb
or
cwtl
xor
lds
mov
cmc
ds
out
push
and
cli
lea
dec
xor
xchg
fistps
loope
sbb
fs
or
pop
xchg
fistpll
call
dec
add
mov
rcrb
mov
add
mov
sti
jbe
jmp
ffreep
xchg
jne
and
das
cld
sbbb
fcoml
mov
inc
pop
cmpsb
cli
sbb
in
dec
fcmovnbe
push
sub
aad
pop
or
xor
jg
iret
in
dec
push
ret
adc
sbb
leave
jbe
roll
ljmp
push
es
mov
mov
fsts
sbb
aad
or
adc
movsl
insl
inc
push
in
add
fisttps
ljmp
adc
inc
in
in
lods
nop
cmp
mov
mov
pop
xor
repnz
out
jbe
insl
sbb
xchg
mov
mov
aam
loope
add
hlt
outsl
data16
inc
pop
jns
jp
bound
add
sub
jb
jne
ror
pop
sbb
mov
rcrb
je
cmp
push
inc
mov
mov
rclb
push
mov
dec
sahf
inc
xchg
roll
xchg
lahf
add
mov
xchg
jae
pop
add
mov
dec
pop
clc
insb
mov
negb
icebp
shl
inc
nop
fidivs
icebp
xor
loop
ja
and
push
jl
or
fidivl
sub
insb
das
xchg
push
pop
stos
or
adc
loope
xchg
mov
aas
out
adc
out
insl
sbbl
rcrb
dec
xor
in
mov
jg
mov
sbb
arpl
xor
repz
std
push
insb
out
iret
push
shrb
pop
or
mov
mov
clc
mov
notb
adc
addr16
inc
mov
xchg
jbe
inc
dec
inc
jns
lods
xor
inc
mov
mov
and
or
shlb
mov
aam
imul
add
pop
xor
sahf
or
stos
cltd
xlat
add
mov
dec
addr16
jae
push
pop
loop
inc
xchg
pop
jp
fidivrl
adc
jle
mov
arpl
add
das
outsb
mov
mov
loop
leave
ja
jne
out
scas
popf
repz
xor
in
pop
xor
mov
push
icebp
cmp
pop
push
cltd
push
adc
lcall
xchg
mov
sbb
sub
dec
and
into
add
cmp
cld
mov
faddl
and
inc
scas
shll
mov
fisubl
or
mov
inc
mov
or
fwait
je
pop
inc
push
jae
push
or
aam
xchg
sub
mov
adc
lahf
or
adcb
incl
jge
and
movsb
pop
cwtl
push
ds
sbb
push
out
pop
or
pushf
mov
cli
adc
inc
sbb
andl
cltd
push
push
dec
xchg
jno
les
daa
xchg
xor
jnp
repnz
xchg
or
or
clc
addl
ret
mov
rorl
int
rorb
jmp
mov
jp
sbbb
fcoms
mov
movsb
fincstp
pop
iret
mov
cmp
decl
inc
fs
xchg
insl
jns
out
and
mov
scas
mov
pop
jnp
dec
xchg
sub
mov
adc
sbb
sahf
cmp
xor
xor
mov
cld
fdiv
mov
pushf
add
enter
sbb
daa
cmpsb
cmp
stos
mov
mov
jl
ror
outsl
scas
mov
mov
sahf
or
dec
int
out
cmp
mov
loop
push
cltd
jl
push
mov
xchg
ljmp
and
lahf
add
mov
sbb
mov
insb
or
adc
adc
cld
pop
mov
inc
ss
push
cs
jg
es
mov
push
pop
mov
ljmp
test
rorl
sub
fucomip
xchg
mov
or
jns
adc
jecxz
add
cltd
sarl
dec
sub
mov
and
out
sarb
testl
das
mov
inc
test
ja
hlt
nop
inc
cld
pop
test
pop
push
popf
sbb
iret
ss
jecxz
das
bound
sub
add
fisubl
cmp
dec
movsb
imul
gs
push
cmpsl
pusha
outsb
and
ljmp
push
sub
xchg
sub
fcmovnb
xchg
fs
pop
in
inc
movsl
les
rcll
xchg
cmpsl
ja
xor
out
test
imul
sbb
sbb
mov
imull
decl
xor
and
add
add
bound
cwtl
inc
mov
loope
pusha
in
sub
jno
cmp
pop
daa
test
sbb
cwtl
lods
and
lds
and
ja
push
push
lea
push
or
pop
test
in
cmp
or
add
push
lods
adc
inc
or
or
fidivrl
xchg
les
xchg
aaa
lods
ret
pop
pop
in
faddl
sbb
inc
aaa
mov
es
movsl
outsl
icebp
data16
mov
jp
into
out
fs
test
and
mov
gs
call
mov
out
imul
xor
int
and
push
dec
add
cld
ss
in
jmp
ja
ret
std
jle
xor
inc
sub
outsl
xor
jge
push
sub
cld
and
adc
sbb
in
clc
addr16
xchg
xchg
arpl
divl
mov
insb
lds
pop
int3
push
insb
pop
insb
adc
ret
mov
outsb
push
pushf
ret
loopne
cmp
sbb
mov
dec
xchg
xor
cld
out
cmpsl
push
daa
rorl
or
es
int
movsl
fstps
shl
js
cli
xor
xor
sub
or
pcmpgtd
sbb
mov
fiaddl
rclb
andl
inc
or
mov
cmp
pop
push
mov
pop
mov
pop
daa
popf
dec
lds
mov
or
and
cmp
imul
cwtl
add
roll
sbb
or
sub
lcall
jns
in
cltd
orl
icebp
xchg
fsubrs
jl
aad
adcb
pop
push
sub
lret
int
mov
xchg
adc
cli
and
push
cmp
and
dec
dec
adc
nop
out
mov
scas
mov
mov
jmp
out
in
adc
xchg
push
jb
sub
lea
lods
loopne
ja
mov
test
xchg
imul
or
ljmp
cmpsb
mov
mov
frstor
sub
mov
mov
pusha
ret
sbb
xchg
mov
pop
pushf
and
rcl
ja
ss
and
mov
lret
movsl
inc
and
enter
test
stos
shrb
or
fcmovnu
fs
mov
mov
das
outsl
sub
mov
loope
adc
jp
mov
inc
ss
sbb
int3
in
mov
mov
pop
jne
fwait
daa
and
jb
add
xchg
pop
fldenv
jle
mov
out
cli
dec
adc
pusha
and
cmp
fwait
xor
cltd
mov
int3
mov
loope
sbb
push
insl
dec
and
popa
mov
xor
lret
test
lea
or
jo
dec
leave
out
mov
dec
mov
lock
jo
xchg
call
decl
popa
and
gs
scas
mov
jecxz
std
not
orl
sbb
push
add
aas
add
pop
mov
mov
push
pop
push
shll
cwtl
mov
mov
jge
mov
outsb
loope
add
push
xor
or
inc
dec
divb
sarl
push
mov
stos
hlt
push
scas
xchg
fst
and
stos
fidivs
jae
cmpsl
out
pop
push
inc
lret
pop
and
mov
test
idivb
sti
and
xchg
fldenv
push
dec
dec
xchg
adc
out
push
add
xor
bound
icebp
cmp
xchg
adc
loope
ss
lret
push
fisttps
dec
jns
cltd
cmp
lods
xchg
std
add
lds
mov
cld
lahf
fwait
divb
jl
dec
sbb
cmp
lds
mov
fmul
xchg
inc
mov
sbb
push
out
dec
addl
and
insl
ja
inc
aam
adc
jecxz
pop
inc
scas
inc
pop
push
ja
sti
dec
mov
add
add
mov
dec
and
add
cld
jne
push
dec
fwait
add
add
shrb
lods
pop
push
dec
inc
xchg
inc
push
add
cmp
bound
mov
jmp
and
push
add
add
loopne
bound
sbb
cli
mov
fisubs
cmp
push
int
jge
push
ret
mov
lahf
shll
movsb
jne
cmpsl
fs
fs
fsubr
js
aaa
xchg
test
cmp
cmpl
sbb
dec
leave
outsb
mov
dec
mov
jae
adc
fs
inc
pop
into
lock
movb
cld
xchg
dec
push
scas
jmp
jae
sbb
test
push
in
aaa
lea
int3
repz
pop
jg
cmpsb
insl
push
popf
clc
mov
mov
sti
mov
dec
mov
sti
adc
sbb
ljmp
enter
cmp
jae
sbb
add
or
xchg
mov
xchg
xchg
inc
int3
mov
aam
jl
inc
cmpsb
sub
inc
pop
sarl
out
pop
pop
and
fs
xchg
fsts
add
xor
cld
rcrl
jl
aas
and
sub
jle
out
ret
and
push
ret
lahf
push
sbb
inc
sbb
mov
jbe
fs
dec
lds
cmp
ljmp
xchg
sub
inc
or
cmp
test
aaa
mov
jne
std
and
cmp
push
nop
push
cmpsb
pop
int3
pop
shrb
jmp
xor
sarb
adc
mov
in
pop
cltd
sbb
xor
push
test
mov
and
lods
and
loop
mov
and
in
je
xchg
jnp
rolb
and
xchg
pusha
mov
shr
mov
sarl
pushf
testl
add
mov
fdivrs
xor
cmp
add
es
jmp
repnz
stos
dec
pop
push
stos
insl
jp
jae
xchg
dec
xchg
mov
test
xor
mov
jo
pop
sbbb
ret
pop
aad
dec
or
inc
cwtl
sbb
mov
loopne
roll
outsl
aam
mov
dec
sbb
jbe
loope
mov
jne
jg
pop
xor
jmp
cmovge
adc
inc
out
imul
rcll
mov
fbld
mov
dec
dec
sub
repnz
dec
in
lcall
icebp
cmp
ret
push
popa
leave
pop
repnz
mov
ret
xor
push
insl
xchg
stos
pop
mov
mov
mov
sbb
ret
das
inc
adc
inc
sahf
sbb
movl
mov
adc
in
or
jmp
mov
idivl
pop
add
jg
aas
or
adc
sbb
add
hlt
mov
sub
mov
sbbl
cmp
pop
mov
sbb
pusha
push
adc
ja
movsl
push
or
nop
scas
push
lods
shr
cs
iret
lcall
and
xor
push
getsec
add
jmp
cmp
cltd
inc
addr16
xchg
ss
mov
enter
ror
or
cwtl
popa
xor
mov
sbb
lret
addr16
test
leave
into
sub
cwtl
out
and
adc
aas
xchg
xchg
sbb
loop
mov
hlt
daa
jle
inc
sub
jecxz
mov
jno
or
inc
push
cli
xchg
ss
jecxz
xor
sbbb
fstpl
dec
movsl
and
mov
push
mov
scas
pusha
jmp
movsl
mov
inc
addr16
cmpsl
aam
sti
adc
push
and
xchg
scas
stos
ror
stos
mov
test
bound
movsb
test
mov
push
and
fdivs
mov
push
push
xchg
sbb
dec
push
sub
jbe
adc
movsb
cs
cs
rcrl
xchg
push
scas
dec
mov
aam
loop
lret
xor
imul
mov
xor
jns
or
xchg
inc
push
aaa
movsl
mov
mov
push
inc
es
and
repz
xchg
mov
jmp
xchg
scas
dec
pop
lods
sub
and
mov
mov
mov
inc
push
pop
xchg
mov
or
inc
add
aam
shrb
movb
lods
sub
and
lcall
xchg
cmpsb
shl
inc
push
mov
mov
and
sarl
pop
adc
pop
and
repnz
mov
mov
jns
xchg
mov
or
ja
bound
jl
xchg
les
jo
nop
movsb
xor
adc
pop
push
and
test
daa
sub
jne
jge
and
adc
pop
pop
sbbb
orl
lcall
jnp
inc
sbb
lahf
les
xchg
or
pushf
xchg
adc
push
xorb
rcll
inc
adc
mov
int3
idivb
lcall
inc
out
sub
lcall
fwait
xchg
adc
int
xchg
inc
sbb
jecxz
sub
ret
shlb
jle
push
push
rorl
jg
inc
fisubs
aas
inc
cmpl
jl
xor
adc
fisttpll
push
add
inc
jecxz
xor
aaa
push
icebp
mov
in
pop
mov
mov
jge
sub
cmp
xor
adc
xchg
cmp
adc
push
scas
jne
add
idiv
bound
adc
sbb
mov
cmp
cmp
dec
add
jb
sbb
xchg
sbb
sub
and
inc
stos
jno,pt
or
cmp
orl
xchg
imul
mov
inc
jb
jp
add
incb
mov
inc
jl
lods
jg
jle
mov
jnp
jg
add
sbb
fs
loope
xor
test
or
dec
xchg
xchg
ret
call
jmp
es
mov
mov
nop
sub
pushw
pushf
popf
xchg
and
popf
repnz
inc
cmp
sar
fistpl
jl
negl
push
cmp
jg
push
imul
shr
aaa
mov
pop
push
shrl
shlb
mov
or
jge
cmp
push
cmp
sti
sti
lds
outsl
iret
in
js
xor
adc
mov
xlat
mov
mov
mov
roll
stos
xor
fwait
aas
jge
enter
jge
xchg
lods
pop
xchg
adc
cmp
outsl
mov
and
int3
cli
push
and
subb
movsl
lock
adc
xchg
and
negb
mov
cmpsb
ds
cltd
loope
inc
ffree
ds
pop
or
and
fsubr
in
xchg
cmpsl
pop
lret
shlb
add
sub
push
sub
mov
in
insl
sbb
aad
mov
pop
in
push
xchg
sahf
mov
cs
and
cmc
mov
dec
pop
ja
cmc
lcall
mov
leave
push
dec
pop
lods
mov
repnz
insb
and
push
in
daa
clc
and
fcmovnb
xor
mov
loop
mov
lods
paddd
jnp
repnz
mov
data16
and
jl
into
ret
jl
and
test
cld
in
mov
mov
scas
mov
in
lods
clc
not
imull
sub
dec
push
dec
jp
es
neg
mov
rorb
aad
notl
repz
shl
dec
mov
jb
data16
xchg
fimull
adc
rcll
inc
scas
aad
jb
out
js
nop
clc
mov
add
adcb
mov
xor
xlat
lahf
adc
inc
pop
jbe
mov
cmpsb
cmp
jecxz
scas
xchg
fcmovu
mov
cld
cmp
lcall
int
sub
pop
adc
cwtl
inc
xor
cmc
sbb
faddl
sahf
mov
cmp
test
pop
jmp
int3
or
insl
fisttpll
push
xchg
sub
pop
inc
aam
xchg
movsl
lock
in
incl
jg
in
cmp
sbb
les
sbb
and
in
ret
ljmp
leave
xchg
or
test
add
inc
mov
sbb
ret
dec
lds
cmp
push
imul
sti
mov
outsb
push
xor
add
mov
imul
jge
das
pushf
das
add
push
test
lret
jge
sbb
cwtl
test
inc
sbb
adc
fsubrs
out
xchg
cltd
sub
mov
mov
pop
es
mov
jecxz
lock
jl
incb
lods
stc
sbb
pop
mov
outsb
dec
jne
push
pop
faddl
es
sti
sbb
outsb
mov
sbb
and
mov
ret
sti
ja
jns
pop
orl
shll
inc
and
cld
mov
mov
pusha
das
jl
pop
cs
scas
inc
movsb
jl
and
mov
subb
dec
movlps
rcl
cmp
jo
shlb
add
scas
loop
pop
mov
push
jno
fistl
adc
pop
dec
js
jp
cmp
in
loop
inc
dec
mov
jle
mov
mov
das
fimull
inc
mov
out
stc
mov
dec
mov
mov
push
sarb
inc
or
pushf
loope
mov
push
bound
adc
cmp
sub
outsl
adc
mov
jge
or
or
inc
and
jb
std
and
and
movsb
mov
sub
cmp
lahf
jp
aad
sti
imul
mov
mov
or
imul
mov
sub
pop
xchg
inc
rdtsc
inc
rclb
notb
inc
and
inc
sbb
mov
inc
lret
push
negb
cmp
dec
push
test
xchg
jp
dec
xchg
ret
sbb
xor
sub
mov
movsb
push
cmp
xchg
mov
mov
push
dec
fnstenv
adcl
imul
push
and
xor
lea
jg
inc
mov
scas
cmp
xchg
add
sbb
pop
fsubrp
ljmp
sub
lods
or
xchg
cmpsl
iret
fstpt
or
neg
cmpsb
xchg
inc
iret
pop
inc
fcmovnu
push
xchg
pop
loope
mov
cs
adc
movsb
xor
test
jns
lahf
popa
in
xchg
cltd
sub
repz
in
push
dec
mov
pop
mov
pop
enter
aaa
xchg
sub
mov
xchg
mov
sbb
jae
jnp
pop
bound
jne
sub
mov
xor
cmpsb
cmp
xor
cmp
mov
outsb
test
mov
scas
in
repz
dec
jge
mov
mov
shlb
pop
jbe
xlat
xlat
mov
cmp
arpl
lock
xor
pop
cwtl
popa
enter
push
cltd
stos
lods
fdivs
cmc
jno
test
adc
test
in
arpl
pop
cwtl
cmc
leave
jbe
mov
daa
jmp
cmpsl
jmp
push
xchg
sub
cltd
xchg
push
dec
int
in
mov
addr16
daa
stos
mov
jnp
mov
clc
cmpsb
sbb
das
sti
push
xchg
enter
mov
adc
sub
icebp
out
adc
dec
mov
mov
jecxz
sbb
iret
addr16
cmp
das
dec
jg
xchg
idivl
push
dec
fimull
xor
in
addr16
out
xchg
xor
loop
je
jno
adc
icebp
cmpsl
cli
xlat
fs
xchg
push
mov
xor
movsl
testl
in
sub
lods
push
mov
mov
clc
cltd
jg
daa
pop
xor
stc
orl
mov
arpl
jne
adc
dec
push
pusha
adc
out
aad
outsl
push
push
out
arpl
fnstcw
aad
xor
mov
dec
lds
ss
mov
jns
aas
jbe
xor
jg
jnp
shrb
and
and
iret
mov
mov
enter
clc
xchg
cmp
jb
fnsave
popa
jo
jae
bound
call
das
int
lcall
hlt
mov
data16
sub
xchg
sub
imul
jne
repnz
cmp
cld
fdivl
jno
fimuls
inc
lods
aaa
cmp
jl
repz
sbb
icebp
imul
pop
jmp
mov
into
sbb
or
out
stos
sbb
clc
enter
ljmp
stos
xchg
cmc
mov
add
jnp
popa
jnp
dec
ret
mov
or
popa
cld
jae
popf
xor
call
cmp
add
pop
sbb
movsl
dec
aad
sub
loopne
mov
sub
dec
mov
and
sub
push
cmpsb
sub
mov
mov
mov
pop
mov
scas
ds
mov
or
cmpl
jb
je
insl
mov
xchg
add
lret
sub
rorl
out
imul
mov
pop
mov
mov
mov
arpl
js
push
pusha
push
test
test
fs
pop
fimuls
out
les
shl
adc
jns
sub
mov
stos
in
icebp
pop
add
inc
xchg
imul
das
arpl
cmpsb
test
xchg
or
pop
mov
or
ret
mov
scas
rcll
in
inc
push
xor
rolb
inc
ja
fstpl
movsb
jmp
or
shlb
mov
xchg
and
addr16
inc
pop
jbe
shrb
inc
movsl
lahf
notl
mov
xchg
inc
sub
push
testb
push
cmc
pop
mov
xchg
xchg
push
es
push
sub
es
pop
and
cmp
dec
adc
add
push
inc
adcb
jo
orl
push
fld
pusha
out
pop
movsb
dec
add
ds
jns
icebp
data16
in
ret
out
pop
and
mov
xor
popa
test
xchg
or
cltd
and
add
sbb
xor
mov
call
sbb
adc
jmp
pop
inc
gs
jmp
jns
or
inc
lret
das
xor
fiaddl
dec
call
pop
xchg
imul
xchg
mov
jecxz
push
test
sub
add
sub
pop
jle
ret
mov
fsubl
stos
cmp
mov
cmpsb
bound
mov
xor
rclb
inc
cmp
fbstp
fisubl
xchg
pop
jp
inc
out
dec
out
xchg
ficompl
pop
push
jnp
xor
icebp
les
cmp
jo
jp
andl
adc
adc
add
fdivs
popa
or
jecxz
push
in
mov
mov
scas
dec
push
sub
pop
adc
mov
xor
jnp
push
rcrl
push
sbb
fwait
outsl
push
mov
lret
jnp
test
jnp
cmp
push
faddp
scas
incb
xorl
lahf
mov
sub
in
or
cmc
test
popa
push
je
mov
cmp
seto
rclb
dec
pop
or
mov
test
lods
pop
testb
lret
movsb
mov
insl
divb
sbb
stos
dec
movsb
jo
push
daa
mov
adcb
sub
mov
or
roll
es
mov
mov
and
pushf
pop
inc
iret
cltd
not
sub
add
lds
jnp
pop
push
jae
inc
xlat
inc
cmp
lods
xchg
insl
push
xchg
pop
mov
inc
pop
fwait
push
adc
sbb
cmpsb
dec
dec
push
pop
int
push
jl
sbb
pop
sub
cmpsl
sub
xchg
scas
loop
mov
imul
push
jg
push
iret
popf
call
mov
lds
xchg
xor
add
shr
lock
lods
fstl
inc
rclb
std
pushf
and
push
hlt
hlt
inc
pop
mov
andl
sti
lods
dec
mov
pop
mov
out
mov
fadds
dec
rclb
dec
push
std
and
pop
mov
or
les
mov
mov
ret
sti
fnstenv
aad
std
cmp
jno
aaa
idiv
add
dec
sub
cwtl
bnd
jmp
shrb
das
mov
cltd
ret
es
mov
lret
test
repnz
scas
mov
lret
icebp
insb
pusha
cmp
mov
and
mov
cltd
lds
sub
std
sub
push
push
ja
xchg
sarl
sub
js
fs
mov
icebp
nop
sbb
int
test
sbb
xchg
rorl
fcmovb
xor
pop
sarl
iret
stc
shr
mov
mov
push
rcr
and
xor
ljmp
aas
outsl
jp
mov
movsl
mov
mov
add
pop
mov
stos
adc
das
daa
subl
sbb
aad
imul
pop
mov
cvtdq2ps
ficomps
pop
mov
and
mov
lret
xor
push
mov
addr16
aam
inc
in
push
xor
xor
mov
int
mov
jo
outsb
mov
add
cwtl
add
aas
pop
stos
pop
xor
fstl
lods
leave
js
mov
mov
and
div
cmp
jmp
dec
sahf
in
and
pop
mov
sbb
sbbb
push
lds
lds
sbb
insb
mov
pop
push
shrb
lcall
test
fnsave
stos
and
sti
mov
jmp
pop
mov
rcll
mov
int3
in
or
cmp
mov
out
bound
lock
sti
pop
xor
cwtl
lret
mov
mov
mov
adc
mov
xchg
stos
cmpsl
addl
cmp
test
mov
incl
push
pop
dec
sbb
adcl
add
in
sbb
dec
inc
sub
sbb
jecxz
xchg
insb
dec
adc
in
ficoms
outsl
addr16
mov
push
lods
mov
aaa
add
xor
lcall
cld
push
xor
fcmovnb
add
push
mov
sahf
cmpsb
gs
add
jg
mov
into
incl
cld
push
shll
movsl
pop
shll
inc
sbb
loop
cmp
je
popf
hlt
std
pop
mov
jge
and
sub
call
mov
adc
fmuls
sbb
mov
fwait
pop
and
out
xchg
mov
bound
adc
nop
jge
scas
popa
scas
ret
dec
inc
pop
add
xor
pop
xor
stos
inc
test
and
jnp
adc
or
das
adc
fisttpl
insb
test
outsl
cmp
mov
adc
push
push
sub
mov
cwtl
cmpsl
jne
mov
jg
je
mov
shl
pop
dec
mov
rclb
inc
sub
xchg
cmp
sbb
mov
mov
mov
mov
aas
jnp
cmp
add
inc
jmp
add
xlat
jg
int3
in
jle
mov
xlat
mov
cmp
xor
mov
jb
jmp
imul
cld
mov
add
aam
mov
mov
out
lods
stos
xchg
aas
sub
stos
add
mov
jmp
mov
pop
sub
xor
jmp
imul
addr16
outsl
cli
mov
pop
pop
test
dec
xor
adc
int
and
mov
or
xor
sub
xor
jnp
adc
dec
and
and
sub
or
mov
test
dec
test
mov
sbb
inc
lret
xchg
lds
lcall
nop
adc
push
pop
cmc
ret
or
xchg
std
ror
pusha
and
aas
out
sbb
fwait
jle
rcr
out
mov
adc
mov
out
dec
movsl
ja
or
pop
das
xchg
notb
push
fcomps
adc
aaa
mov
mov
repnz
jns
call
leave
test
jmp
rcl
mov
mov
sbb
mov
cld
ja
ss
jg
jbe
and
lods
push
add
push
add
daa
test
loop
enter
push
imul
xor
inc
clc
cmp
div
jl
cld
lret
fwait
int3
jg
pop
mov
sbb
adc
push
fadd
xchg
out
int3
add
jno
xor
sub
rorb
and
push
sahf
push
dec
imul
xor
pop
out
pusha
out
sti
xor
xchg
leave
sub
xor
cmc
mov
mov
mov
pusha
push
sbb
push
sbb
scas
jne
push
repz
or
push
lahf
insl
add
data16
or
cmpsb
sub
clc
fisubrl
inc
js
cli
push
cld
mov
xchg
add
repz
lods
cmp
movb
xlat
negl
push
mov
stos
aad
lret
mov
mov
dec
cmp
and
mov
cmpb
lret
or
fldl
inc
movsb
mov
or
sub
push
adc
test
jns
std
mov
pop
pop
leave
movsb
push
test
outsb
add
lret
or
and
movsb
dec
cmp
daa
frstor
sub
or
jle
lahf
push
in
int
in
or
add
sbbl
xor
imul
jmp
dec
or
stc
jmp
add
mov
mov
jl
inc
es
es
lahf
xlat
jmp
and
jnp
clc
lret
shrb
sarb
or
inc
adc
sub
mov
mov
cld
arpl
movsl
cmpl
vucomiss
mov
fbld
or
jne
jl
jnp
jmp
mov
xchg
cmp
je
fiaddl
data16
adc
int
dec
jecxz
xchg
es
add
ss
cwtl
pop
cld
mov
cs
jnp
jbe
ss
and
test
sub
xor
and
mov
ja
es
inc
dec
mov
lea
fmuls
addr16
cld
out
js
pushf
lods
in
sub
sub
and
mov
and
mov
stos
clc
out
les
stc
push
add
dec
fwait
jg
mov
aas
cmp
shr
shrb
das
hlt
or
das
testl
lods
adc
incb
xchg
in
shrl
lret
repnz
push
inc
mov
cmp
lahf
push
lds
cwtl
lods
fucomip
sbb
ss
push
loopne
repnz
insb
mov
imul
fstps
push
jg
rcr
push
shll
pop
ficomps
lret
mov
imul
cmp
fistps
cli
movsb
clc
imul
pushf
mov
cli
push
dec
popa
rorl
sub
scas
cmp
aaa
inc
test
push
sbb
icebp
fidivrl
push
cld
xadd
push
lock
xchg
mov
pop
mov
mov
cmp
popa
sbb
lahf
mov
dec
and
popf
mov
fistl
ja
mov
incb
cmc
inc
lret
or
mov
sub
push
ss
pop
and
push
sub
push
and
push
pop
cmp
adc
movsb
adc
xchg
adc
fcomps
data16
dec
and
aas
xchg
divb
push
adcl
sbbb
je
mov
inc
push
cmpb
mov
int
popa
pop
and
cmc
loope
popl
nop
push
or
dec
fsubrl
rorb
mov
out
daa
rep
aam
subl
fisttpl
jmp
in
add
sarl
cmp
and
ret
pushf
push
mov
jne
and
scas
adc
mov
ss
xor
fistps
negl
scas
daa
subb
outsb
xchg
in
fnstsw
fstpt
jg
mov
lock
out
push
aad
sbbl
lahf
push
jge
test
mov
jg
sbb
push
push
je
add
incl
stc
out
push
sarb
shll
and
mov
lret
mov
pop
orl
jns
cmp
aas
outsb
pop
mov
pusha
jp
shrl
out
mov
iret
pop
jbe
mov
in
inc
cmovle
sti
ja
orb
mov
jne
pop
push
xchg
in
pop
addr16
in
mov
mov
jecxz
das
out
push
lods
sarb
sahf
adc
int3
out
mov
insb
cmp
xlat
imul
scas
xchg
add
test
or
fdivr
add
mov
inc
sahf
mov
inc
pusha
or
fiaddl
jne
cmp
ret
out
sbb
lods
adc
adc
out
cmp
xor
mov
xchg
mov
mov
stos
xchg
inc
push
jne
testb
and
outsl
inc
cs
cli
and
nop
pop
shr
pop
mov
sti
testb
lret
xchg
bound
dec
call
clc
mov
inc
aaa
jbe
fdivl
sbb
das
mov
jge
dec
xchg
inc
jle
testl
cltd
jae
cli
loopne
fldcw
iret
rcrb
mov
into
push
loope
mov
xchg
popa
sahf
jle
jae
push
xor
mov
mov
outsb
test
pop
movsl
in
loop
sahf
or
xchg
push
cmp
xor
jp
push
mov
add
or
daa
scas
out
xchg
push
add
lods
or
test
es
and
imul
sarb
inc
sarl
mov
loopne
push
rcrl
stos
loope
cmp
sub
dec
pop
stos
xchg
gs
sub
inc
sbb
sbb
mov
lods
fs
inc
and
mov
jne
inc
cli
jns
dec
test
mov
sbb
pop
sbb
out
sub
sbb
jmp
enter
iret
add
mov
shlb
neg
add
adc
insl
xor
call
mov
or
mov
jle
outsl
mov
inc
mov
into
shll
sub
and
pop
jbe
adcl
dec
add
imul
push
sar
jbe
mov
mov
pop
cmc
add
outsb
sahf
cmpsl
pop
jg
pop
test
inc
push
movsl
or
les
jb
jns
push
stos
fsubrs
xchg
loop
adc
cmp
jne
add
stos
jae
sub
cmp
mov
sbb
jo
mov
daa
sub
or
lcall
out
dec
and
add
stc
and
dec
add
out
repz
jne
insb
iret
out
sbb
mov
and
cmp
pop
pop
mov
rclb
push
outsb
adc
repnz
pop
jecxz
sbbl
xchg
pop
xorl
adc
cmpsl
add
nop
cmpsl
xchg
adc
dec
fisubs
shrb
push
fldl
inc
sub
cmpl
arpl
ja
fcmovnbe
sub
mov
ja
mov
push
mov
in
shld
jmp
inc
loopne
das
xor
mov
subb
decb
ds
xor
jnp
pop
dec
arpl
jecxz
ficomps
inc
inc
mov
stc
dec
push
rorb
rorl
aad
sub
pop
sbb
dec
sbb
maskmovq
cmp
xlat
mov
jb
fmull
adc
cmc
pop
enter
sbb
xchg
and
rcrb
inc
jne
scas
int3
nop
icebp
push
out
nop
test
lods
mov
cmp
push
jmp
btr
movlps
cs
ds
mov
mov
test
cltd
jns
jne
decl
fcomps
sub
and
jb
pop
xor
jg
add
loope
jne
mov
push
cltd
pop
imul
imul
int
and
psllq
call
in
jnp
dec
mov
xlat
mov
pop
gs
nop
pop
and
lods
int
sbb
pop
lock
and
jle
jge
popf
fdivl
leave
cwtl
arpl
leave
jecxz
jne
cld
cmp
add
jl
test
shll
pop
add
cld
imul
mov
pop
inc
push
or
loope
popf
sbb
jmp
mull
mov
jne
stos
shll
aad
jnp
dec
ret
aam
sbb
adcb
pop
cmpsl
add
int3
arpl
and
or
dec
loopne
mov
adc
dec
mov
shr
dec
jno
sbbl
out
jp
push
rclb
mov
inc
sbb
inc
clc
xchg
mov
add
add
loopne
pop
add
or
cmpsl
jmp
cmp
xor
xor
ror
repz
jecxz
cmp
mov
add
daa
jp
push
outsl
lret
mov
nop
push
adc
or
mov
outsb
mov
xor
lea
test
and
ja
movsl
xchg
mov
scas
das
xor
xor
daa
mov
jecxz
adc
push
add
push
jns
xlat
pushf
rorb
sti
xchg
or
add
stos
aaa
fiadds
test
lock
cmp
mov
and
ficoms
dec
aas
inc
push
mov
ret
cld
ret
push
mov
push
xor
ss
outsl
movsb
sbb
call
iret
inc
xchg
xchg
pop
imul
stc
lock
subl
push
loopne
sbb
add
lahf
jg
icebp
push
cli
loope
and
mov
mov
out
push
leave
push
mov
cli
cmp
cmp
lret
movsl
into
sar
mov
notl
mov
movb
push
data16
popf
xchg
pop
iret
cmc
stos
std
push
inc
es
cmp
ret
pop
mov
cmpsl
push
add
xor
fistpll
neg
pop
push
sbb
das
cld
cmp
mov
arpl
aas
jb
push
jb,pn
dec
sbb
jae
adc
pop
jae
movsb
je
repnz
lods
subb
dec
scas
fbstp
ds
dec
aaa
outsb
xchg
out
jae
mov
inc
push
test
xchg
jno
aaa
sbb
mov
inc
add
lret
xor
jle
lods
clc
movsb
inc
shll
or
std
les
test
or
inc
dec
ret
shll
call
cmpsl
in
inc
rol
ljmp
cmpsl
sub
jno
sbb
outsl
and
xchg
or
add
jb
jae
sub
adc
add
mov
lret
or
es
lahf
sub
adc
sar
out
ret
fiadds
mov
icebp
sub
inc
xor
call
xor
bound
sub
sbb
xorb
mov
daa
aaa
shll
cmc
leave
lret
cmp
sti
mov
gs
out
push
lock
or
ja
das
mov
sarb
add
pushf
jbe
jne
test
cmpsb
jp
hlt
sub
and
je
jb
push
call
lock
jle
nop
wbinvd
mov
jo
mov
loope
ret
fistpl
insl
add
add
pop
roll
arpl
xor
scas
dec
push
mov
test
ds
xchg
dec
pop
jecxz
cmp
inc
loop
sub
es
xlat
iret
in
ljmp
das
cmp
fdivr
jp
je
xchg
pop
jmp
inc
cwtl
popf
mov
mov
mov
fdivl
int
pushf
sub
div
adc
mov
cmp
lods
out
cmp
add
ds
jp
outsl
dec
push
push
adc
mov
jbe
movsb
arpl
jb
jp
out
aaa
cmp
xchg
sub
nopl
jno
ror
mov
or
insb
pop
test
out
sbb
jb
inc
jp
mov
jbe
inc
filds
repnz
jecxz
out
inc
mov
iret
pop
ljmp
aad
inc
mov
loop
mov
lock
sbb
xrelease
lcall
adc
xor
dec
jnp
dec
cmp
jp
or
mov
subb
add
and
sub
flds
push
adc
xchg
fisttpll
sti
cmp
fcmovnb
sub
cmpsl
rcll
pop
cmp
in
mov
cmc
clc
xchg
int3
ror
loop
and
nop
inc
popf
popl
xchg
sti
std
mov
sub
enter
push
iret
jmp
inc
outsl
outsl
ds
push
sbb
push
out
mov
xor
dec
cld
test
xor
xchg
jno
call
mov
test
mov
dec
fldcw
movsl
out
scas
push
pop
mov
inc
adc
lea
xchg
lea
or
mov
fcoml
rcrl
push
gs
push
sti
lret
mov
je
ja
pop
scas
pusha
fcoms
xchg
inc
push
xor
push
xor
mov
or
add
mov
sbb
hlt
sub
dec
dec
push
into
data16
mov
lret
test
fadds
in
add
pop
cmp
mov
mov
adc
filds
in
enter
jae
sub
stos
cmp
js
sub
lods
mov
out
ja,pn
rorb
fidivs
cmpsb
cltd
dec
dec
xor
jle
movsl
sbbl
xchg
jb
mov
es
xlat
fidivrs
xorb
jbe
shl
in
jbe
xchg
push
or
add
jns
or
lret
or
push
or
int3
mov
fs
jp
xor
mov
dec
sti
aam
test
push
pushl
xor
lods
mov
ret
cmp
and
mov
mov
jp
mov
fisttpl
jb
mov
fcomps
repz
adc
push
rorl
pop
mov
xchg
cwtl
dec
lea
js
push
add
mov
aad
dec
fdivrs
pop
jae
adc
ljmp
sub
jp
mov
fisubs
push
pop
les
mov
xor
inc
adc
push
fsubrl
popa
add
mov
andl
push
sbb
or
xchg
jno
fistpll
push
adc
mov
jp
add
jmp
out
arpl
xor
xchg
sub
test
and
mov
repz
out
mov
test
push
mov
mov
int3
out
daa
lcall
ret
stos
fiaddl
das
je
mov
js
push
inc
dec
inc
aad
and
in
dec
cld
push
iret
sti
sbbb
lock
test
inc
cmp
xchg
xor
ret
pop
lods
iret
push
scas
insl
fwait
xchg
hlt
aad
fdivrs
int
xchg
mov
lds
push
sbbb
ja
imul
jge
push
ja
pop
mov
cmp
sbb
test
push
lea
pop
sbb
sub
push
mov
cmp
cld
jno
adc
dec
ljmp
jae
mov
push
ljmp
aad
xchg
mov
sti
adc
push
pushf
into
mov
push
imul
pop
rclb
repz
movsl
or
das
sub
std
sbb
and
arpl
loopne
xchg
shll
add
push
or
pushf
ficompl
fwait
roll
ja
decl
imul
scas
push
cmp
in
cmp
insb
mov
and
fs
dec
ss
fcompl
pop
cwtl
aaa
sub
jae
into
stc
jge
call
fists
mov
lcall
mov
adc
pop
movsl
mov
pop
dec
mov
mov
cwtl
push
lea
cmp
dec
xor
adc
lods
bnd
iret
into
in
lret
xchg
fwait
xchg
add
and
cli
insb
in
into
add
add
or
loopne
mulb
roll
push
je
mov
and
cwtl
cltd
push
dec
sbb
cmp
fsubs
mov
jbe
and
push
jns
sbb
movsb
outsl
push
xlat
add
addr16
ja
iret
mov
cmp
adc
dec
adc
stc
pop
push
add
push
daa
xchg
sub
adc
ss
ljmp
push
test
imull
hlt
inc
push
inc
push
jbe
push
das
out
bound
push
jge
pop
inc
addb
push
pop
fidivrl
pusha
mov
xlat
mov
dec
aaa
dec
icebp
add
xor
ret
adc
data16
dec
jae
pushw
lods
addr16
shrb
and
pop
cmc
mov
sbb
mov
loop
sub
push
add
cmp
shlb
ljmp
aad
dec
add
add
push
and
movsl
xor
daa
stos
mov
mov
xor
dec
or
decb
out
sbb
insb
mov
je
mov
or
mov
lods
popa
pusha
or
jnp
aaa
sbb
int
mov
mov
xor
rcr
adc
sbb
dec
jg
pop
cwtl
jo
jb
xor
cmc
push
insb
lea
ret
push
push
inc
sub
push
adc
dec
push
outsl
imul
and
xor
ja
cmp
bswap
jne
leave
mov
ror
or
stc
outsb
dec
push
jb
sub
push
pop
clc
cmp
arpl
cmp
mov
into
in
sti
aas
js
arpl
xchg
inc
cld
sub
pop
sti
flds
sub
scas
pusha
jno
dec
mov
stos
fsubl
aaa
or
inc
push
mov
or
add
popf
cmp
pop
cwtl
aam
mov
pop
xchg
dec
inc
sbb
aam
sbb
lods
movsb
adc
xor
call
xor
rcl
faddp
les
mov
mov
jne
or
iret
imul
push
and
and
sub
adc
in
mov
loope
adc
mov
add
addr16
xchg
rorb
xor
xor
jp
pop
sbb
xchg
repz
loope
dec
cmpsl
je
xor
push
cmpl
ret
hlt
jmp
andb
sbb
pop
sub
xchg
cmp
pop
push
cmp
in
sub
xor
ja
or
cwtl
mov
in
sub
test
mov
mov
add
aad
push
mov
data16
xor
mov
ja
int
xchg
sarb
bnd
push
mov
add
lods
pminsw
sub
sbb
cwtl
mov
scas
adc
pop
adc
enter
fsub
scas
jle
pusha
push
or
xchg
lods
out
sti
mov
push
sub
inc
inc
es
jae
push
xchg
sahf
repz
notb
test
mov
call
out
loop
leave
mov
jnp
pusha
mov
nop
insl
cs
push
sbb
jge
ret
mov
in
jo
xchg
inc
pop
inc
dec
or
jp
or
orl
xlat
mov
pop
push
mov
add
mov
cmpb
add
lock
ret
xor
into
and
insb
iret
ja
and
enter
lock
fiaddl
or
mov
sub
xchg
inc
movsb
leave
fsubl
sub
sub
cwtl
in
pop
xchg
add
or
jns
xor
test
repz
adc
adc
push
mov
push
add
inc
mov
dec
mov
andl
out
jge
ror
inc
scas
lea
adc
jne
xchg
push
mov
xlat
add
dec
mov
dec
gs
dec
fadd
jcxz
sti
leave
lahf
inc
dec
inc
jl
pop
and
sbb
or
out
xor
pop
test
push
mov
mov
stos
aad
fdivs
xchg
mov
jecxz
inc
sub
std
adc
mov
push
fsubp
insb
xchg
sub
in
sbb
inc
sub
sbb
andb
in
inc
pop
out
xchg
or
xchg
pop
andb
ss
pop
jno
xor
addr16
fcomps
xor
insb
std
jo
pop
sbb
add
test
roll
lahf
jecxz
sbb
cli
push
mov
xor
push
mov
dec
popf
cmp
aaa
scas
dec
cmp
and
cmp
cmc
push
jl
insl
and
adc
or
xlat
icebp
or
mov
loop
xchg
mov
pop
add
dec
ret
sub
aad
gs
in
fs
jmp
mov
pop
cltd
jns
sar
lods
sbb
sub
mov
nop
mov
shlb
xchg
in
cmpsl
mov
jmp
fildll
mov
mov
dec
sti
lods
mov
dec
jecxz
add
jo
sub
push
mov
mov
mov
mov
inc
and
popa
push
and
adc
repz
pop
jbe
push
push
add
mov
fistpl
xor
pop
in
mov
roll
clc
push
ss
jg
cmc
xchg
and
in
dec
scas
addb
negl
push
scas
sarl
xorb
int
sub
shll
xchg
into
or
arpl
adc
arpl
push
add
xor
sbb
sub
jns
cld
push
movsb
adc
sbb
or
into
push
push
pop
or
loop
fidivs
inc
cmp
mov
fwait
loopne
push
push
sub
idivb
add
sub
add
enter
dec
jle
xchg
ret
js
pusha
dec
dec
mov
lds
and
adcl
mov
push
movsl
adc
test
in
fucomp
and
in
jp
and
neg
ljmp
lahf
dec
add
sbb
in
jbe
movsb
mov
out
pxor
sbb
sub
push
daa
inc
lods
sub
aad
jo
xchg
mov
jge
or
aad
dec
ja
fcmove
loope
daa
mov
mov
dec
test
pop
clc
mov
ss
xchg
imul
and
push
jne
int3
in
push
add
orb
mov
cltd
rcl
stc
into
scas
jp
or
mov
inc
mov
sub
xor
rcl
xor
mov
or
push
push
jmp
xchg
out
push
mov
or
rorl
xchg
xor
xchg
test
sub
testl
xchg
and
data16
mov
pop
rcll
sbb
nop
cmp
xchg
imul
cli
jae
push
sbb
dec
fsubr
xor
mov
aaa
fucomip
dec
das
jne
mov
pop
jge
mov
jecxz
out
mov
xchg
xor
sub
and
dec
loope
inc
cwtl
push
xor
add
push
cmp
insl
popf
test
fs
mov
inc
leave
cmp
xchg
daa
sbb
rol
mov
fadds
mov
aam
xorl
adc
push
pusha
dec
andl
in
jmp
mov
lods
xchg
jecxz
cmp
xor
push
dec
sub
pop
enter
ret
lock
fistpl
outsl
ret
test
fcomip
cmp
xlat
pop
dec
lods
decl
adc
push
lret
mov
dec
int
and
aas
pop
xchg
xor
adc
mov
aad
xor
loopne
shlb
inc
data16
cmpsb
xchg
daa
loopne
cld
or
mov
stos
test
fwait
popf
and
sbb
jb
add
out
das
ret
insb
lret
and
addl
ss
nop
sbb
call
or
cmp
add
pop
push
push
cmpsb
xchg
push
pop
and
mov
or
lea
rcll
lret
pop
mov
cltd
les
cmp
test
mov
dec
adc
mov
adc
sub
xchg
dec
push
repz
enter
mov
and
and
and
cltd
pop
hlt
ret
ret
xor
inc
or
pop
pop
mov
xor
jbe
mov
lea
test
inc
xchg
push
or
pop
fwait
movsl
mov
cwtl
xchg
in
repz
mov
xchg
mov
xchg
lods
xchg
ljmp
test
dec
xor
xchg
xchg
ja
popf
ljmp
fld
cltd
nopl
pop
sbb
mov
fmul
pop
cmp
hlt
add
daa
adc
xchg
jp
jbe
mov
jge
repnz
fsubs
imul
out
hlt
add
sub
ds
or
adc
inc
pushf
mov
mov
or
xor
or
flds
mov
popf
test
ror
jl
out
sahf
mov
inc
cmpsl
xchg
cmp
add
mov
in
pop
push
movsl
pop
cmp
mov
in
pusha
mov
sub
bound
mov
scas
or
enter
jb
popa
iret
sub
jae
push
jno
test
inc
push
roll
in
fucom
dec
inc
dec
xchg
cmp
bnd
add
jg
lods
jmp
inc
mov
cmc
mov
push
sbb
gs
insl
push
lods
xchg
out
int
inc
int
add
xchg
hlt
cli
mov
pop
mov
lods
sbb
lret
fdivrl
lret
jno
cmc
pop
fldl
repz
mov
dec
les
xchg
push
enter
sub
mov
std
cmc
push
repz
mov
and
inc
mov
jne
mov
mov
mov
pop
loop
sahf
ds
and
push
leave
call
int3
sti
orb
cmp
xor
addb
xchg
lcall
pop
pop
xor
dec
mov
dec
dec
scas
icebp
icebp
inc
sub
call
lods
and
mov
jbe
lcall
add
subl
xchg
xor
push
jecxz
nop
cmp
sar
or
ret
pop
subl
cmp
lret
xchg
xchg
cmp
lcall
push
movl
xchg
out
fisubrs
sub
jecxz
jmp
or
in
negb
ret
loop
jnp
dec
push
in
push
out
inc
jge
mov
loope
xor
cmp
and
mov
mov
sub
push
repnz
cli
dec
lcall
adc
lcall
lahf
push
jae
mov
inc
and
pop
xchg
cld
mov
mov
xchg
add
xchg
mov
int
js
inc
dec
adc
mov
lea
or
in
push
stc
nop
loope
stos
sbb
rcrb
jecxz
ror
jae
stos
jp
ja
dec
inc
mov
in
xlat
roll
sub
jl
insl
fcmovnbe
jae
lods
out
jnp
imul
jns
fsubrs
mov
add
inc
push
enter
sub
xor
clc
push
arpl
xchg
inc
pushf
or
sub
pop
fimull
push
mov
push
adc
pop
dec
subb
testl
movsl
mov
pop
fs
lods
es
dec
pop
aad
sub
cmc
mov
fs
test
xchg
jbe
js
pop
lock
data16
shrw
out
stos
aam
loope
fistpll
dec
leave
push
in
lea
jecxz
cmp
lcall
and
pop
shl
outsl
out
or
xorl
orb
fdivl
out
inc
sbb
das
and
testl
ja
stos
lods
sub
shlb
push
fidivs
sbb
mov
or
jb
add
stos
xor
jmp
call
xchg
out
lds
or
add
pop
scas
sub
dec
cmp
sbb
nop
nop
out
pop
call
push
jmp
inc
mov
add
loope
jo
xchg
or
inc
or
rcl
repnz
push
xchg
adcl
sub
or
das
insb
bound
scas
test
push
daa
mov
mov
xor
mov
cld
rolb
inc
call
mov
inc
into
mov
and
leave
sbb
mov
aas
js
in
stc
inc
imul
push
add
jo
pushl
daa
or
aam
sahf
rolb
adc
mov
clc
push
ja
mov
pop
ja
popa
cmp
inc
fcoms
icebp
cmp
xlat
inc
popa
jmp
test
adc
repz
jle
xchg
movsb
xchg
andb
pop
std
adc
out
std
inc
out
int3
inc
fcmovbe
test
inc
ja
pop
flds
mov
sbb
mov
fldl
add
mov
or
and
cld
sbb
ss
xor
sbb
shrb
daa
or
lods
adc
leave
fldenv
mov
roll
mov
cmp
push
add
inc
addr16
adc
aas
jl
scas
sbb
push
mov
cmp
in
or
lret
cmpsl
insl
iret
aaa
sbb
add
mov
test
in
ljmp
sbb
out
call
pop
addr16
mov
inc
imul
adc
xchg
xchg
jecxz
sub
xchg
lcall
cmp
push
mov
jmp
mov
loope
rorl
insl
and
push
mov
xchg
cwtl
sbb
pop
sbb
xlat
rolb
bound
jbe
lds
shrb
or
das
jo
jecxz
into
adc
div
add
and
subl
sbb
pushf
jl
cltd
insb
sbbl
adc
add
and
or
mov
je
xchg
pop
xchg
scas
pushl
cmpsl
adc
inc
ficoms
lock
push
mov
ss
lock
addr16
js
cmp
scas
inc
imul
lds
movsb
xchg
jbe
cmp
add
mov
mov
adc
rorb
xor
pushf
xor
add
incl
xchg
ficompl
sbb
mov
or
fsub
jmp
out
push
mov
sti
cmp
ja
ss
mov
mov
cmp
shll
xchg
int
push
jne
mov
add
push
rorl
xchg
bound
mov
popf
enter
loopne
fistpll
push
inc
sub
into
mov
shr
sbb
add
outsl
lea
cmpb
xor
sahf
cltd
sub
ror
es
jp
cld
mov
ljmp
mov
mov
shl
ja
and
pop
repnz
les
jb
fs
scas
jb
lcall
stc
hlt
mov
bound
mov
adcl
rorb
loopne
fidivrl
or
xor
and
jae
leave
cmp
xchg
test
cmc
cmp
inc
or
xchg
stos
jge
imul
fs
push
pop
and
es
iret
out
mov
fstl
push
int
or
out
lods
cmpsl
xchg
ss
xor
mov
popf
test
mov
jp
fisubs
jae
and
pop
decl
or
dec
mov
adc
out
mov
jecxz
jp
gs
aas
dec
push
es
mov
dec
and
add
scas
ficomps
xorl
pop
clc
std
xchg
inc
dec
int
ret
inc
outsb
xchg
ficoml
pop
lcall
inc
mov
nop
fs
loope
cmpsb
and
add
xchg
roll
mov
out
mov
js
push
enter
sub
sti
mov
inc
test
cmc
mov
xchg
movsb
pop
mov
or
incb
sub
clc
into
jmp
xor
push
and
lock
sub
pop
mov
cmp
dec
jge
jne
and
std
arpl
gs
stos
es
adc
dec
int
sbb
adc
mov
dec
push
sbb
loop
ret
cmc
sti
sbb
faddl
stos
xchg
xchg
or
mov
xor
not
imul
xor
sbb
pop
xor
or
push
cmp
inc
xor
repz
push
cmpsl
stc
sbb
ret
mov
pusha
cmp
cmpsl
jg
jnp
in
ljmp
fisttps
faddl
pop
inc
push
mov
test
mov
and
mov
jge
jbe
stos
ds
shl
shr
fsubrs
adc
test
inc
jge
and
mov
xor
jecxz
dec
call
js
ss
cmpsb
mov
xor
and
xchg
into
cmp
in
dec
rorl
mov
push
add
outsb
mov
loopne
loopne
notb
and
mov
mov
int3
leave
mov
js
mov
mov
and
shlb
aas
push
nop
scas
jle
mov
sub
fs
lds
mov
inc
and
dec
xor
test
pop
insl
leave
jmp
or
dec
inc
pop
leave
cwtl
iret
gs
das
pop
std
inc
cmp
inc
pop
fsubs
hlt
into
mov
push
lahf
lahf
addr16
nop
jl
sub
gs
cmpsl
mov
js
aad
push
xchg
sub
pop
inc
test
jb
iret
xor
mov
push
dec
pop
mov
push
stos
sub
mov
mov
gs
lock
sub
or
sbb
lock
mul
outsb
imul
outsl
outsl
or
push
cli
mov
xchg
popa
sub
or
loop
shlb
lea
adc
out
cld
pop
push
in
out
push
push
cmpb
cld
lret
mov
cmp
out
push
stc
push
ja
lods
jge
mov
push
shlb
dec
push
add
mov
fstl
ja
push
aam
inc
sub
in
pop
insl
aam
mov
jl
cmpsl
sbb
dec
xor
imul
inc
fnstsw
pusha
jp
cmpsb
sti
fprem1
sub
sub
pop
and
mov
push
ljmp
adc
sub
and
mov
or
add
jae
mov
imul
clc
jp
push
xchg
inc
aaa
lods
scas
sahf
arpl
idivl
sub
push
lods
and
mov
xchg
cmp
lds
stos
inc
stos
dec
aam
lea
test
xor
sbb
cmp
out
es
shrb
mov
in
mov
pop
testb
jns
push
repz
cli
inc
mov
pushf
mov
arpl
xchg
jmp
sbb
fimull
sub
ja
lahf
ljmp
pop
sub
add
inc
insl
adc
and
hlt
and
aas
mov
inc
sub
bound
push
mov
movsb
lahf
and
and
bound
in
in
scas
mov
dec
sub
and
rcll
push
jle
sti
scas
sub
popf
loop
repz
inc
lahf
jp
pop
lock
and
push
push
xchg
std
xchg
sub
xchg
xor
fmul
sbb
xchg
push
add
or
flds
and
or
inc
add
xchg
repz
mov
in
ss
ret
ljmp
ss
stos
xchg
pop
mov
jge
and
xchg
jl
faddp
dec
andl
or
xchg
pusha
stos
lret
xor
inc
out
pop
or
mov
adc
lret
daa
adc
or
and
add
lock
inc
jecxz
xlat
orl
pop
inc
or
repnz
sbb
mov
pop
pop
dec
inc
fisubs
call
jecxz
cmpsb
mov
mov
gs
sbb
scas
pop
cmc
pop
aas
xchg
jno
shr
inc
aas
mov
jae
stc
adc
xchg
push
cltd
cmpxchg
mov
xlat
sbb
dec
ret
cmp
sub
mov
jbe
lahf
mov
out
sbb
jb
jnp
andl
sahf
fwait
les
push
shlb
sub
fmull
pop
fsubrs
enter
fcoml
pop
enter
sbb
adc
xchg
mov
dec
add
jb
mov
xchg
mov
lahf
in
pop
or
dec
mov
pushf
dec
imul
inc
fstpl
iret
cs
lea
xorb
jo
lea
ret
stos
dec
stos
xchg
sbb
xor
andb
pop
fcmovne
jae
pusha
mov
dec
mov
sarl
out
push
xchg
popa
or
mov
mov
clc
fwait
fwait
imulb
fstpl
xor
inc
ret
loop
or
iret
add
es
std
xchg
jg
pop
xor
xchg
bound
push
fmull
push
loope
ljmp
into
xchg
jb
or
and
insl
sub
adc
aaa
jp
xor
or
gs
iret
add
imul
outsl
in
stos
adc
xchg
test
sbb
stc
sub
test
cs
dec
xor
inc
adc
push
lahf
adc
push
daa
repnz
xor
shll
jecxz
mov
sar
fdivp
imul
mov
adc
add
jecxz
dec
gs
dec
shll
push
js
or
dec
and
test
lret
jmp
dec
adc
mov
mov
out
rolb
or
pop
adc
lods
daa
dec
jge
enter
fimull
cmp
out
jmp
xor
enter
bound
hlt
inc
ret
lret
gs
inc
inc
arpl
cmp
or
dec
sub
pop
sub
pushf
mov
mov
or
pop
test
lahf
enter
lds
jae
and
mov
arpl
aas
mov
or
sbb
lret
pop
jecxz
jle
out
pop
fsubs
inc
xor
push
cmp
addl
sub
mov
fs
cmp
cld
add
outsl
pop
push
cmpsb
jnp
popa
test
cmp
stos
pusha
aam
sbb
jmp
cs
fwait
test
pushf
push
es
insb
repz
and
cmp
sbb
imul
xor
add
loop
pop
jae
fs
movsb
mov
lcall
mov
pop
cli
in
shll
sub
mov
jbe
jecxz
loope
cmp
adc
in
cmpsb
or
mov
sub
aas
andb
mov
push
in
rol
ret
push
lods
fs
in
mov
mov
push
test
aad
sti
mov
stos
add
das
dec
jecxz
cmp
movsl
sbb
subb
pop
jae
cmp
xchg
jg
jo
lret
add
mov
sbb
jge
pop
mov
push
push
aas
js
sti
cmp
mov
cmp
enter
push
inc
adc
aas
repz
mov
mov
aad
aad
mov
jmp
sub
cmpl
mov
cmp
ja
std
inc
or
or
subl
out
sbb
mov
icebp
pop
add
dec
jmp
jae
fwait
inc
aaa
xchg
out
movb
imul
gs
sbb
repnz
ret
xchg
aas
mov
mov
in
into
push
or
mov
adc
mov
sub
dec
and
mov
out
jae
dec
push
jmp
das
add
loope
mov
push
pop
icebp
pop
mov
jb
loope
inc
xchg
xchg
iret
mov
jb
and
loope
sbb
iret
mov
cmp
loope
inc
jns
sbb
lds
test
stc
pop
mov
or
sahf
hlt
sub
mov
push
cmp
loope
pop
mov
dec
adcb
ja
addl
out
loope
push
inc
mov
or
mov
jno
lcall
xchg
ret
fists
mov
add
jge
inc
mov
cs
lea
mov
ret
fldcw
mov
mov
cli
xor
push
mov
or
fwait
lahf
ljmp
mov
mov
stos
sahf
test
loop
in
pushf
dec
jbe
dec
iret
int3
les
cmp
mov
subb
aaa
lods
dec
or
es
nop
stc
add
scas
xor
xchg
je
or
adc
sub
jecxz
loope
push
jne
xor
jle
repz
push
dec
mov
test
mov
neg
jmp
xchg
pusha
shll
pushf
rcr
xchg
fnstcw
aas
stc
mov
popl
mov
mov
lea
clc
fsubrs
in
sbb
insb
lds
mov
mov
test
push
sub
lock
mov
test
push
cmpsb
into
xor
lds
jmp
subb
jmp
fadds
push
ss
xchg
inc
lahf
cmc
insb
out
gs
jns
cmp
pop
jno
lcall
call
ficompl
js
int
jns
jmp
mov
into
aad
xchg
or
mov
iret
lcall
les
adcl
aaa
iret
or
cltd
push
mov
iret
enter
scas
jg
mov
out
cmp
std
aaa
mov
imul
push
cltd
mov
jge
xchg
pop
pop
icebp
mov
lods
xorb
push
mov
dec
add
mov
xor
icebp
cld
pop
stos
ja
push
jmp
mov
lea
enter
repnz
shll
or
jg
into
popa
push
negb
and
inc
aas
sti
push
stc
sbb
cwtl
sbb
or
add
inc
jb
int
xor
adc
sti
mov
dec
mov
push
lods
jo
call
sub
in
into
xchg
pop
or
push
mov
sub
pop
hlt
sbb
xchg
std
lret
int3
cli
nopl
sub
js
mov
xchg
shll
gs
dec
cmp
stos
test
dec
xor
xchg
mov
cli
add
push
addr16
lea
cmp
loopne
test
xchg
daa
pop
sub
or
in
jae
rep
es
stos
jbe
push
pop
inc
into
mov
out
sbb
adc
je
mov
test
mov
into
pop
jns
xlat
daa
clc
test
push
sahf
inc
shlb
adc
mov
push
andb
inc
push
pop
scas
add
insb
cmp
lcall
les
xor
call
mov
cltd
lods
cmp
cmp
push
rclb
sahf
jo
sub
inc
mov
push
inc
push
cmpl
push
pop
fcmovnu
jno
add
mov
subl
and
loope
test
mov
aaa
lcall
jns
icebp
mov
xchg
lret
push
negb
dec
push
cmpsb
xor
aad
sbb
xor
inc
mov
xchg
sub
and
dec
imul
lods
sbb
push
jmp
insb
paddsb
lret
jne
push
inc
stos
mov
jmp
popa
add
popf
pop
pop
sub
sub
test
xor
std
fsubp
cld
cmpsl
pop
mov
xchg
enter
jp
or
test
loope
mov
jl
les
xlat
mov
imul
sub
loope
fcompp
frstor
in
mov
cld
sub
or
and
dec
icebp
incb
shl
jge
cld
sub
pushf
cmp
sahf
je
lret
call
andl
out
cs
push
pop
fidivrs
popf
mov
mov
daa
push
pop
dec
pop
jmp
shll
cld
mov
ror
dec
xchg
push
dec
adc
mov
cwtl
sbb
mov
dec
xchg
mov
mov
xor
call
shrl
out
cs
sub
jno
in
adcb
imul
mov
sub
dec
xlat
lods
xor
cmc
bound
call
pushf
pop
std
jbe
xlat
or
mov
insb
test
mov
mov
outsl
fsubrp
ret
xor
leave
add
lods
dec
mov
sbb
cmc
repz
adcb
add
inc
stos
lods
insb
pop
cmp
hlt
in
add
inc
bound
bound
jge
stos
leave
sub
hlt
mov
sbb
pop
sbbl
in
pop
xlat
lcall
loop
sbb
adcl
dec
jne
jp
sub
ljmp
jo
inc
lds
cmpsl
pop
mov
aas
data16
jo
mov
mov
adc
cmp
mov
xchg
aas
dec
mov
loopne
jno
dec
or
jl
cmp
mov
loope
add
fsubrs
add
pop
jbe
mov
lods
in
sbbb
aad
xchg
mov
fildl
sti
adcb
mov
or
cmp
sub
inc
in
scas
roll
rolb
stos
fisttpl
or
jno
outsb
xchg
push
pop
and
out
insb
sub
lods
iret
adc
mov
sub
and
ret
xchg
leave
mov
lahf
push
sbb
mov
loope
pop
or
pop
pop
fdivrl
xchg
jp
mov
add
inc
dec
addb
sub
out
pop
aam
push
xchg
cmpsl
stos
xchg
lea
pop
pop
shlb
mov
inc
int3
and
sbbl
stos
test
shlb
dec
adc
add
repz
ds
sarl
lret
xchg
push
mov
push
cmpsl
jecxz
cs
inc
repz
dec
lea
jmp
jo
xchg
icebp
pop
bound
aas
or
mov
pop
and
aad
jl
sub
lods
inc
xor
lock
and
sti
add
inc
push
addr16
xor
sub
loop
sub
pop
sbb
mov
scas
stos
sbb
mov
sub
outsl
or
rcrb
ds
enter
xchg
adc
sub
aam
or
and
shlb
lret
fimull
cmp
or
sub
lods
mov
popf
jno
repz
popa
jge
jo
push
xchg
push
pop
jmp
jp
stos
out
or
shlb
xor
and
lods
push
jge
je
push
jns
or
fistpll
xchg
cmp
sub
mov
aam
movsl
in
push
cmpsl
inc
push
cmp
outsb
pop
aaa
dec
or
repnz
ja
xor
stc
push
sub
lods
add
jae
xchg
repz
pop
mov
lret
or
inc
jb
mov
add
daa
pop
fcmovne
ss
sub
sub
push
mov
adc
arpl
add
cmc
xchg
pushf
cmp
xchg
mov
mov
xchg
mov
add
es
jmp
mov
xor
pop
sub
adcb
divl
outsb
outsb
fdiv
add
js
ret
fs
mov
pop
ret
ficoml
cmp
das
pop
mov
fildl
lods
adc
adc
js
sbbb
cmp
mov
loope
cmp
adc
int3
fwait
aas
jb
and
bound
addr16
push
data16
xchg
enter
popa
and
subl
jo
dec
das
ret
pop
xchg
push
pop
mov
insb
pop
xchg
pusha
aam
xchg
mov
out
mov
aam
dec
roll
lahf
cmp
out
xchg
mov
and
adc
cmp
cmc
add
inc
push
pop
and
cmp
pop
xor
dec
popa
mov
pop
jge
test
iret
aam
or
xchg
and
and
mov
inc
ss
pop
pop
jle
cltd
loop
ss
mov
inc
sbb
mov
cmp
stos
mov
js
repnz
cltd
outsl
data16
sub
pop
push
stc
loop
push
jecxz
movsl
sub
or
push
imul
or
push
das
mov
sbb
iret
fildll
pop
cmp
insb
xor
nop
jne
shl
ds
push
mov
or
icebp
movsl
and
sbb
adc
mov
nop
push
push
push
mov
sbb
mov
inc
iret
xchg
jno
mov
or
pusha
js
mov
mov
sub
xchg
repnz
cmp
jb
push
imul
xor
dec
mov
js
mov
shl
cmpsb
add
mov
loop
rcll
scas
stos
leave
lret
xor
lock
adc
sahf
cmpsb
loopne
int
inc
add
xchg
jge
mov
cmp
mov
lock
mov
mov
addr16
adc
popa
pop
cld
imul
into
jne
cld
pop
cmp
ficomps
and
jle
jmp
inc
mov
cmp
sub
xchg
pop
add
stos
test
xchg
loop
cltd
ds
dec
lods
cmp
add
icebp
sbb
imulb
jnp
sbb
and
bound
aam
push
bound
pop
inc
xor
scas
mov
pop
stos
and
cmp
add
icebp
inc
bound
aas
xor
fcoms
mov
pop
ret
push
mov
cld
push
data16
adc
mov
insb
xchg
pop
mov
loopne
nopl
sbb
popa
sbb
fsubp
cmp
ret
cmpsl
sub
test
xor
dec
mov
gs
das
dec
jl
mov
sub
je
jle
jno
fsubl
push
xchg
xor
push
pop
push
int3
cli
rcl
cmp
add
faddl
daa
add
xor
in
and
jae
stos
aad
movsb
in
shll
xchg
jg
test
mov
jne
loop
aas
jns
push
lods
fbstp
lods
jg
movsb
scas
add
inc
sbb
cmp
jnp
clc
adcl
shrb
cmp
test
lods
jbe
ds
adc
jp
cmpsb
mov
push
sub
mov
insb
pop
push
bound
mov
cmpsl
dec
pop
pop
jecxz
adc
movsb
call
fldl
xor
jge
jnp
mov
dec
jns
sbb
lds
jno
test
lea
into
dec
sbbl
cmp
jecxz
mov
mov
jp
cmp
and
ljmp
sub
xchg
adc
mov
js
sub
mov
or
loopne
push
adc
mov
jp
addr16
shrl
push
dec
imul
jg
test
in
lds
scas
inc
cli
leave
xchg
ja
out
xor
repz
mov
cmp
push
pop
imul
inc
pop
or
pop
push
cmp
mov
dec
sub
xor
cmp
push
add
out
jg
dec
fisttpl
insl
fildl
mov
sahf
xor
hlt
fwait
insb
or
cmp
mov
aaa
sub
fmull
fmull
sarl
and
mov
jae
push
xor
jl
add
imul
mov
rclb
dec
mov
test
add
mov
je
je
xchg
jmp
sub
dec
ret
mov
cltd
daa
push
adc
mov
cmp
pop
pop
outsb
mov
cmp
ss
cvtps2pi
test
xchg
add
ljmp
sar
outsl
loope
mov
bound
outsb
ja
adc
mov
out
adc
sub
icebp
sub
orl
jb
push
or
in
pop
lret
lgs
fiadds
outsb
arpl
scas
inc
scas
jp
xor
pop
xchg
push
inc
sub
inc
lods
add
insb
xchg
es
iret
out
xchg
adcl
lods
lret
adc
std
scas
loop
xchg
dec
jns
sbb
push
sahf
nop
lock
mov
xor
aas
dec
pop
or
fisubrs
dec
movb
aaa
stos
aad
jnp
ljmp
hlt
std
loope
and
and
jmp
fistpll
test
mov
fcomp
xlat
push
ficoms
fistpll
inc
cmp
sbb
xchg
pop
push
xchg
imulb
iret
inc
or
inc
lahf
lock
fisubrl
push
cli
jp
mov
jmp
xchg
rcll
jp
cmp
rcrb
jno
push
pop
jmp
jae
and
in
inc
cwtl
push
jg
add
xchg
mov
or
jmp
and
push
xlat
sbb
and
xor
mov
sbb
rcl
test
loopne
popf
push
stc
pop
jae
in
movsb
stos
sbb
inc
fisubs
cmp
les
jl
out
out
xor
repz
shll
mov
rorl
adc
sub
pop
addr16
cmp
stc
out
push
jge
add
lcall
inc
add
sub
out
sbb
sbb
dec
out
das
nop
enter
pop
xor
pusha
or
xchg
push
mov
pop
xchg
std
pusha
cli
dec
cmp
aam
mov
icebp
pushf
roll
repz
scas
adc
ret
mov
lcall
aas
inc
shll
jp
ret
add
dec
push
nop
adc
xor
or
out
mov
xorb
imul
jbe
xchg
xor
clc
in
adc
sarl
push
push
rcrb
pop
out
push
cmp
mov
inc
lods
jecxz
sahf
mov
cmp
push
sbb
inc
ror
int
andb
hlt
mov
enter
push
jne
and
imul
int3
mov
jg
fdivrl
shlb
or
inc
repz
fstpt
xor
jb
sbb
cltd
aas
stos
out
mov
movb
leave
inc
and
shrl
xchg
adc
jbe
dec
fistl
adc
ljmp
ret
movsl
cmp
mov
cli
xor
jg
or
repnz
push
pop
or
sbb
fisubrs
cmp
inc
sub
outsl
shlb
push
movsb
pop
mov
mov
sub
pop
mov
int3
dec
mov
pop
jle
mov
rcrl
pop
cmp
add
sub
xchg
es
dec
out
inc
das
enter
fdivr
insl
fstps
xor
jne
stc
movsl
jmp
jmp
mov
sti
dec
in
mov
stc
clc
mov
xor
push
ficomps
xchg
lcall
mov
xchg
addr16
inc
adc
push
and
xchg
push
mov
jae
out
call
cld
mov
fnstenv
sub
fsub
aad
nop
push
pop
dec
pop
push
rcrl
inc
adc
and
push
addb
lods
jge
dec
pop
cmp
add
adc
push
jns
and
cmpl
aam
imul
cmp
inc
cmc
popf
sub
call
push
frstor
xor
call
cmpsb
and
das
popa
or
aaa
dec
inc
das
ljmp
mov
mov
ffree
lock
or
adc
pslld
cltd
pushf
daa
xor
gs
das
hlt
sub
inc
inc
into
div
ror
xor
lea
nop
and
cli
pop
sub
pop
or
pop
adc
imul
mul
dec
xchg
mov
ljmp
sbb
mov
pop
arpl
ret
or
inc
push
scas
movsl
lock
xchg
pop
leave
adc
fadd
lret
test
js
mov
out
push
cmp
clc
iret
inc
pusha
inc
rol
mov
jo
sbb
push
xlat
sbbb
pop
out
mov
xchg
fwait
in
push
mov
push
xor
xchg
inc
jo
xchg
add
jb
adc
jg
jnp
mov
pop
jge
fcompp
pop
adcl
xchg
mulb
rorb
push
in
mov
xchg
loopne
dec
int3
fwait
insb
mov
test
imul
subl
mov
pop
call
cmc
rcll
pop
mov
mov
xor
sub
inc
push
adc
sub
aas
push
inc
or
jno
mov
pop
jae
pushf
sub
das
sbb
movl
push
xlat
pusha
push
or
lods
popa
out
sbb
mov
mov
movsl
data16
aaa
mov
sbb
es
lcall
sbb
inc
in
dec
inc
xchg
div
adc
push
xchg
decb
jge
jns
out
enter
mov
das
cld
test
ja
xor
fldt
jno
sub
lret
scas
gs
pop
xor
mov
pop
out
mov
fsub
add
mov
adc
push
add
xor
mov
ficomps
cmpsl
xorl
lret
push
jbe
xchg
adc
xor
xchg
js
mov
loop
add
pop
add
xchg
repz
es
shl
mov
nop
jmp
add
ss
ror
rorb
enter
and
dec
in
mov
cmpb
dec
dec
sbb
sub
jb
out
sub
into
mov
fisubs
and
xchg
adc
jecxz
icebp
fwait
dec
xchg
mov
in
cmp
xchg
sbb
pop
sarl
addl
repnz
jmp
jbe
cmp
lahf
scas
lahf
aas
adc
xor
dec
sub
push
push
pop
loopne
and
ret
lods
lret
mov
or
jmp
in
jp
push
cli
ljmp
imul
mov
push
xchg
adc
ret
lret
xchg
sub
xchg
inc
fdivs
or
cmp
jp
pop
cmpb
mov
inc
pop
sub
push
addb
int
test
push
push
out
repz
into
iret
jp
rcrb
dec
sbb
dec
pop
xlat
push
mov
inc
pushf
test
sub
push
sbb
scas
jmp
sub
or
mov
into
sub
popa
mov
push
rcrb
jecxz
sbb
mov
out
xchg
clc
subl
xchg
jnp
imul
aas
imul
xchg
xchg
out
mov
sub
push
pop
loopne
insb
test
fwait
lcall
mov
push
inc
test
sub
ret
movsb
xor
sub
or
or
push
sbb
mov
push
jbe
jecxz
lock
or
repz
cmp
movsb
out
mov
rorl
jmp
mov
mov
mov
mov
pushf
mov
xchg
hlt
cmp
add
and
add
add
inc
filds
js
sbb
xor
and
xor
in
fcomps
cmp
leave
stos
repz
stc
inc
leave
pop
and
jbe
fldt
sbb
jne
arpl
cmpsl
leave
mov
rorb
sbb
rorl
stos
adc
sbbl
fcompl
aaa
lock
cmp
pop
xchg
test
adc
enter
test
pop
and
mov
cmpsl
jp
sub
lcall
das
push
das
mov
add
stos
adc
sub
mov
mov
push
adc
test
out
push
or
pop
outsb
and
das
dec
mov
notw
mov
xchg
xor
icebp
aaa
adc
push
mov
dec
ja
jns
outsb
push
enter
adc
sub
in
inc
lret
leave
mov
pop
adc
xchg
sarl
xchg
repnz
aam
ss
cs
aad
ss
arpl
mov
push
cld
sti
jle
push
insl
std
fisttps
dec
imul
into
orl
push
mov
xchg
iret
mov
sub
and
scas
jbe
popa
sub
mov
add
stos
es
push
push
mov
leave
dec
push
cmp
imul
add
stos
adc
fwait
add
push
mov
je
ja
mov
cwtl
dec
ficomps
add
jecxz
mov
cld
lahf
pop
lcall
lea
xchg
jg
and
imul
push
fistps
fidivrl
mov
movb
mov
lock
lea
fadds
jl
cmp
cmp
jmp
mov
push
loopne
add
sub
repnz
add
dec
push
sub
lea
push
mov
cmp
in
loopne
sahf
dec
mov
test
sbb
dec
add
mov
cmp
dec
imul
bound
imul
cwtl
rolb
xchg
inc
cmpsl
fsubrs
mov
fisttps
in
cli
inc
push
mov
shlb
rolb
xchg
or
test
insl
mov
xor
test
test
add
adc
mul
add
jg
pop
push
insb
loopne
divb
and
inc
pop
pop
ftst
adc
idivb
in
adc
adc
ret
inc
inc
sbb
in
data16
repz
push
jg
mov
inc
or
lret
mov
jp
mov
and
pop
push
sub
or
push
pushf
fsub
in
mov
jno
mov
dec
mov
mov
adc
mov
sub
clc
sbb
ret
and
push
adc
idivl
mov
in
inc
cmpl
cwtl
repnz
pop
call
sbb
sub
pop
fcmovne
adc
xor
loop
or
out
jle
cli
sarl
imul
jo
mov
sarb
push
pop
outsl
adc
sub
inc
jmp
mov
into
and
mov
clc
add
insl
xchg
clc
cmp
inc
fstp
mov
cmpsb
rcrl
adc
cmp
or
testl
xchg
imul
jl
push
out
push
inc
cmp
sub
popa
xor
mov
aam
in
xchg
mov
loop
fiaddl
fucomi
aas
cmp
mov
test
xorb
and
call
out
jge
cs
fcmovb
xchg
cli
aam
mov
mov
lret
aaa
sbb
jecxz
bnd
add
ret
popf
cmp
pop
inc
lret
fnstcw
lcall
dec
ss
lea
test
ljmp
leave
inc
lcall
cld
and
xchg
rorb
stos
xchg
mov
jb
push
leave
fdivrp
jbe
jecxz
mov
mov
pop
or
addps
push
sti
mov
jecxz
sbb
mov
lds
pop
push
nop
daa
mov
sub
cld
aam
loopne
lret
and
int3
inc
repnz
xchg
data16
scas
mov
cmp
or
xchg
outsl
lret
repz
add
mov
imulb
push
fstps
ss
imull
cltd
adcl
mov
pop
adc
dec
shrl
pusha
mov
out
int3
xor
sbb
lahf
add
and
cmp
push
sbb
sub
sbb
aas
jns
popf
cld
push
ds
outsb
xchg
iret
shl
fmuls
test
mov
mov
jge
pop
gs
enter
pop
cmc
call
std
fcomi
les
sbb
sub
cmp
data16
cmc
int
add
pop
add
fcmovb
xor
push
inc
push
fidivl
mov
out
and
dec
cmp
push
push
push
pop
mov
ljmp
arpl
pop
in
loop
jbe
and
inc
cmpsl
inc
cli
loop
pop
cwtl
fwait
ja
mov
repnz
add
mov
sbbl
dec
and
in
and
in
xchg
mov
mov
jb
call
push
movb
sbb
inc
mov
cmp
mov
dec
dec
xchg
ret
outsl
pop
mov
mov
cmpsl
jmp
cmp
push
mov
jns
xor
out
loop
dec
mov
jb
cmpsb
sahf
or
adc
pop
pushf
push
sbb
lret
pushf
mov
enter
aad
add
xchg
in
xor
data16
push
sbb
fdivl
mov
lock
mov
dec
inc
dec
mov
test
push
cmp
cmp
scas
add
insb
fmul
mov
adc
sub
sub
ret
or
dec
out
in
pusha
mov
lea
jbe
pop
repz
rcll
in
pop
sub
xor
daa
xchg
adc
add
sti
mov
std
push
and
push
enter
jae
push
push
jb
daa
scas
add
decl
jp,pn
scas
dec
fildll
jbe
jle
int3
out
and
jne
push
mov
sub
mov
cmpsb
mov
mov
int
test
jge
mov
arpl
int3
push
repz
dec
xchg
ret
fldcw
add
xchg
mov
jbe
fidivl
lahf
mov
inc
adc
aad
jge
and
shlb
popa
xchg
out
cmp
std
scas
pop
fcoms
push
sahf
xor
fcom
rolb
aaa
dec
cmp
mov
sbb
popf
movsl
pop
mov
out
push
push
push
scas
or
cli
adc
sarl
test
dec
fcoml
jle
mov
pop
mov
mov
cmpsb
fsubs
adc
les
rcr
inc
pop
adc
insb
mov
ds
test
negb
in
movsl
jl
in
out
pushf
or
aam
in
mov
mov
mov
dec
mov
aaa
add
cmp
mov
jg
jnp
dec
and
shlb
add
lahf
nop
test
scas
das
das
adc
out
dec
shrb
fisubl
pop
in
inc
in
idivl
and
mov
mov
inc
push
popf
sub
dec
ss
rolb
stos
mov
xlat
mov
aaa
pop
jns
sti
mov
add
mov
popf
sub
xor
mov
test
jmp
cwtl
xor
jp
push
pop
rorb
add
adc
dec
ficomps
cld
leave
jo
inc
inc
cmpsb
rorb
scas
pop
pop
movsb
in
inc
lret
into
in
xor
inc
lock
enter
or
stc
scas
fucomp
lret
or
sbb
ja
pop
icebp
sbb
lds
mov
ret
test
lsl
cmp
addl
cli
movsb
aaa
jp
lcall
mov
lahf
mov
nop
das
popf
adc
scas
addr16
jnp
mov
pushf
adc
fistpl
pusha
daa
out
add
mov
jecxz
dec
scas
dec
xchg
mov
pusha
xchg
and
int
stc
pop
cmp
scas
in
jnp
jbe
into
mov
add
dec
mov
mov
fisubrl
push
aas
sbb
jmp
aas
xchg
jmp
push
dec
jb
sbb
mov
insl
push
inc
les
loopne
pop
mov
imul
cmc
ljmp
sbb
lret
loop
mov
sub
adc
mov
fisubrl
mov
std
popf
mov
rcrb
or
dec
psubusw
stos
loope
and
leave
out
mov
int3
mov
mov
leave
test
mov
gs
shll
jecxz
mov
cli
xor
imul
stos
cmp
push
or
call
das
daa
add
push
jecxz
cmp
sti
cmp
je
aas
iret
dec
jl
mov
lcall
fimuls
dec
or
pop
insb
ljmp
jnp
sbb
jmp
lret
mov
imul
nop
out
dec
in
int
cld
imul
lcall
or
loop
loopne
insl
or
mov
scas
push
fsubs
sub
jnp
sub
ds
pop
cld
or
lods
sahf
aam
arpl
out
pop
push
xor
adc
jge
pushf
clc
out
dec
xor
xchg
fs
cld
lea
adc
mov
sti
add
adc
ret
sti
mov
push
rclb
int3
cs
gs
sub
and
cs
xor
bswap
jb
lods
cmpsl
push
jb
dec
in
xor
aad
gs
lock
movb
or
push
stos
cmp
sbb
jmp
cmp
insb
mov
push
mov
mov
popf
outsb
inc
lret
xchg
and
and
jmp
sahf
mov
jp
lods
inc
push
out
sub
lret
sbb
lea
aad
cmpsl
xchg
xchg
jmp
loopne
iret
mov
nop
add
shl
pop
mov
sbb
mov
push
sub
pop
sub
xchg
lret
cmpsb
push
jno
aam
mov
mov
in
dec
xor
sub
push
dec
inc
mov
lahf
repnz
xchg
pop
xor
outsl
lods
loop
test
inc
pop
ljmp
fimull
xchg
ret
xor
add
dec
int
jmp
cmc
adc
inc
fmull
ficompl
push
or
nop
stos
daa
mov
mov
mov
xchg
pop
aas
frstor
enter
xor
inc
lods
xchg
push
push
or
pmaddwd
es
call
xchg
ror
out
incl
sub
fists
and
testb
jnp
sahf
pop
cmp
movb
leave
push
push
jge
xchg
jp
jmp
mov
and
inc
mov
out
stos
insb
dec
ficoms
dec
add
push
stc
cli
imul
insb
cmpsl
sub
btc
jmp
adc
mov
sbbb
lret
add
lret
push
sbbl
pushf
mov
inc
xor
mov
subb
pop
sarb
or
mov
ret
shlb
sub
add
sbb
cmp
dec
addl
scas
lret
js
cmp
and
dec
fmull
das
mov
xchg
inc
dec
sbb
xchg
pop
imul
fistps
pushf
lret
fmul
std
lock
sub
push
lret
xchg
adc
push
int3
add
and
push
fwait
sbb
jecxz,pn
jns
out
jp
sbb
pop
push
ret
xchg
jp
mov
cmpsl
out
dec
sbb
popa
dec
cwtl
popf
jge
insb
pop
pop
mov
xorl
cwtl
movsb
push
jae
dec
scas
lods
pop
push
add
popa
adcl
les
sti
iret
imul
std
out
out
mov
sub
fs
xor
adc
inc
pop
fisttpll
pop
dec
test
inc
cmp
sub
xchg
xor
adc
xchg
push
mov
out
fwait
jl
adc
daa
push
out
inc
jp
add
call
mov
pop
in
aam
shrb
sbb
sahf
out
jno
pinsrw
movsl
hlt
in
push
sbb
lea
push
add
or
das
out
hlt
and
mov
xchg
insb
push
sahf
pusha
push
out
dec
push
movsl
sub
setns
out
lret
out
and
add
test
xchg
add
pop
mov
lods
adc
lea
or
or
mov
or
push
jge
aad
mov
in
loope
and
cmpsb
fs
shl
or
into
jp
loope
lds
inc
or
add
pop
xchg
lods
sbb
cmp
fs
cmp
cmp
test
and
pop
xchg
scas
aaa
repz
mov
sbb
outsb
xchg
push
and
mov
and
in
test
iret
xor
push
ret
decb
daa
sub
enter
rcl
aas
push
add
cld
stc
lods
popf
out
and
movb
std
testl
loope
mov
inc
jp
xchg
adcb
and
sbb
cld
outsb
jl
shlb
xor
nop
xchg
lock
nop
inc
adc
mov
dec
jmp
xchg
mov
and
lret
adcl
leave
mov
cmp
and
lret
cmpsb
mov
push
icebp
in
nop
xor
mov
push
lods
decb
xchg
or
rorb
mov
add
in
test
cld
popa
out
div
fidivrl
addr16
dec
cli
jle
stc
push
lods
fwait
jl
stc
xor
sub
push
mov
push
imul
das
push
inc
enter
clc
and
movsl
xchg
xor
push
add
lds
dec
daa
cmp
jo
xor
loopne
inc
aas
push
dec
dec
xchg
xchg
cmc
dec
movsl
mov
fisttps
add
sti
lahf
xchg
clc
mov
leave
fwait
cltd
inc
mov
jmp
sbb
cmp
out
ds
test
and
jnp
imul
hlt
pop
inc
test
inc
outsb
shlb
pop
xchg
das
jno
dec
pop
pop
fmul
jmp
loope
repz
hlt
or
clc
add
bound
jge
push
inc
sahf
add
and
sub
dec
shll
test
sbbb
mov
cmp
mov
movsb
orb
mov
jl
push
xchg
mov
cmpsl
jno
sub
adc
jb
cli
mov
jns
pop
enter
lret
andl
leave
das
pop
sub
cld
mov
shl
cmpsl
rcrl
div
cwtl
mull
in
or
cmpsb
icebp
jb
or
jp
add
or
pop
sub
mov
xlat
stos
andb
add
rorb
cli
mov
or
lahf
add
movsb
insb
xchg
movsb
movsb
imull
aad
add
sbb
leave
inc
push
stos
push
cli
pop
mov
rorl
dec
test
push
dec
lds
sub
xchg
mov
adc
cmc
pop
dec
push
rclb
push
daa
adc
pop
mov
mov
ficomps
sub
mov
xor
and
loopne
rcr
sub
imul
lods
jmp
test
push
dec
mov
out
xor
mov
in
xchg
imul
sbb
mov
out
sbb
pop
sbb
pusha
in
clc
jl
inc
jbe
out
das
popa
cmp
dec
fwait
xlat
inc
cli
pop
push
add
and
and
enter
pop
push
lcall
inc
repz
aas
mov
jmp
cmpb
enter
mov
dec
inc
xchg
mov
xchg
ja
addr16
xor
popf
add
in
cmp
incb
pusha
aad
inc
push
aaa
out
ss
vmovhps
jmp
sub
xchg
push
push
gs
push
push
leave
pop
daa
cmp
out
std
jle
lahf
imul
shl
lahf
pop
push
test
pushf
rcr
fisubrl
std
sub
pop
mov
or
ljmp
jl
lods
cmc
sub
xor
cwtl
pusha
cwtl
sarb
jg
sbbl
lock
pop
or
push
cmp
pop
mov
dec
dec
xchg
xor
loope
push
ljmp
or
mov
mov
jbe
lret
push
in
ss
lods
or
incl
bound
pusha
leave
push
cmpl
cld
adc
fsin
sbb
and
call
movsb
movsb
ror
out
push
jl
les
mov
add
and
mov
ds
mov
xchg
pop
testl
dec
loop
icebp
popa
xchg
push
pop
aad
mov
sbb
fmull
mov
pop
ret
pop
push
fcmovb
jg
mov
std
jecxz
mov
or
shll
mov
jns
dec
push
std
divl
mov
mov
mov
enter
sbb
fsubrl
in
add
dec
xorl
dec
lret
aas
jg
xor
ljmp
cwtl
add
cmp
pop
pop
imul
dec
xor
pop
xchg
inc
jmp
cmpl
lret
cmp
iret
callw
inc
xor
in
shrl
jecxz
xor
pop
ret
xchg
xor
cmp
gs
int
ret
add
ds
mov
test
sub
push
lea
add
mov
xor
pusha
mov
mov
aaa
dec
pushf
xor
in
fsubl
sbb
aad
pop
push
nop
out
xchg
leave
ret
jmp
push
inc
pop
cwtl
xchg
xlat
xlat
jb
cmc
mov
rolb
mov
test
push
imul
mov
adc
xchg
and
mov
and
add
test
rclb
sub
repz
icebp
in
outsb
aad
mov
fisubl
jg
js
xor
jecxz
add
and
cltd
add
push
mov
jge
aad
das
popf
ret
or
jge
push
cli
mov
add
icebp
cmp
ret
test
sub
roll
fadd
inc
dec
arpl
jbe
jns
mov
sub
and
jp
xor
sub
mov
frstor
jl
inc
push
jge
scas
outsb
into
fstpl
add
push
std
jp
push
add
cmp
sbb
push
stos
cmc
test
add
hlt
inc
clc
xor
mov
dec
insl
dec
inc
andl
fdivrl
sub
data16
jae
xor
xor
ja
inc
and
or
pop
stc
pop
jmp
xchg
outsb
push
add
fbstp
dec
mov
dec
ror
sbb
les
inc
in
xchg
gs
mov
inc
and
mov
nop
ds
adcl
or
std
mov
pop
adc
dec
or
sbb
push
push
in
pop
out
dec
mov
xor
leave
ret
lret
jl
mov
xor
lret
cmp
or
mov
cmovg
jmp
ja
pop
adc
dec
cmova
cmp
popa
cmp
rorl
je
lahf
mov
outsb
add
pop
pop
fs
scas
mov
mov
adc
mov
repz
mov
popa
push
pop
sahf
bound
int
daa
out
dec
cmc
mov
outsl
xor
xchg
ja
cmpsb
adc
jl
ljmp
push
jmp
ja
lret
mov
fiaddl
xlat
lods
inc
imul
outsl
sbb
testl
test
int3
insb
das
shrb
mov
xchg
xor
xlat
mov
pop
xchg
sub
enter
cli
ja
rcrb
int3
mov
cltd
and
inc
arpl
jle
ret
mov
cmp
inc
and
ret
inc
clc
rorl
dec
add
cmp
and
inc
sbb
or
push
scas
lcall
loope
inc
lret
dec
sbb
enter
call
xor
fwait
pop
lahf
jno
sbbb
add
repnz
lods
pop
lea
test
sub
sti
insl
xor
xor
ljmp
test
out
addl
push
outsb
mov
sbb
iret
leave
xor
dec
bound
rcrb
dec
mov
enter
sub
push
xchg
pop
rcll
pop
xchg
or
fwait
outsl
sub
aaa
pop
xchg
xchg
mov
out
rorb
fdivl
sub
imul
pop
fmull
xlat
inc
lock
cmp
jbe
pop
add
adc
dec
jae
lahf
jecxz
xor
movsb
daa
jg
int
xor
popa
out
bswap
out
mov
inc
ret
lret
js
jmp
push
aam
and
push
jo
dec
cmp
loope
push
jmp
insl
and
push
jp
inc
push
addb
sub
or
es
rcll
add
pop
xchg
push
or
call
xorb
xchg
sti
xlat
adc
jae
cmpsl
sub
shrb
mov
sbb
sub
add
xor
dec
loope
pop
aad
pop
rolb
inc
xor
addr16
cmp
dec
sub
mov
aas
push
inc
cwtl
outsb
ds
gs
inc
mov
dec
sti
or
ds
aaa
aad
xor
ljmp
call
mov
mov
push
imul
roll
inc
cli
xor
clc
or
mov
mov
sbbb
mov
inc
dec
cmp
popf
bound
xor
xor
daa
push
mov
or
in
jno
jne
aaa
sub
sbbl
inc
adc
cmp
lods
popa
mov
cmpsl
jne
mov
xchg
or
or
adc
inc
pop
jge
jg
stc
movsl
addr16
push
mov
xchg
cmp
cmpsl
mov
scas
adc
clc
mov
mov
dec
movb
bound
pop
shl
lock
cli
add
cmp
test
leave
push
jecxz
dec
iret
adc
mul
subb
mov
nop
andl
pop
add
cwtl
aas
leave
les
loopne
jg
js
lcall
ja
in
push
push
mov
sbb
jb
int
add
inc
dec
and
mov
or
cmpl
test
lock
shll
add
leave
pop
pop
xchg
cmc
cmp
pop
sbbb
loop
push
popa
aad
es
loopne
fstpt
pop
inc
xor
mov
ss
dec
inc
xchg
cld
and
jne
jg
cli
sbb
or
lea
shlb
ret
fsqrt
add
add
test
dec
and
xor
andl
jg
inc
cmpl
dec
cmp
mov
xlat
in
xchg
push
inc
jl
fnstcw
add
mov
cmp
adc
ljmp
add
insl
in
lea
xchg
rclb
and
insl
and
push
clc
lods
add
pusha
mov
mov
and
cwtl
scas
cmpl
add
leave
in
adc
jnp
ret
xchg
std
fisubs
popa
mov
dec
add
sub
arpl
xor
flds
insb
lahf
and
ds
rcrb
stc
lea
cmp
or
xchg
cwtl
test
add
sub
mov
subb
pop
stc
stc
in
pop
loop
inc
lock
xor
pop
and
fildl
cmpsb
cmpsl
into
or
fnsave
loop
ljmp
ds
insb
jmp
mov
gs
or
sub
movsl
iret
or
and
sti
lock
fimull
ret
rclb
icebp
rcr
sbb
shl
sbb
push
jno
movsl
sub
es
hlt
adc
inc
lret
repz
test
mov
xchg
cmp
jle
test
dec
push
hlt
xchg
ficompl
adc
repz
sbb
pop
fst
stos
clc
leave
sahf
xor
scas
lods
mov
sbb
orb
jge
popa
in
jae
push
insb
or
rcll
jne
fwait
and
stos
sarl
shrl
movsb
mov
ljmp
shrl
insb
xchg
and
pop
push
pushf
in
adc
mov
mov
rol
add
repnz
insb
inc
add
sbb
fdivrs
aam
fs
shl
xor
jl
hlt
cmp
mov
sbb
cld
push
or
pushf
jne
out
sub
sbb
inc
ret
xor
inc
arpl
insb
xor
lahf
xchg
lret
insl
popa
jae
aaa
incl
push
adc
jo
lahf
mov
mov
mov
in
ss
daa
xchg
mov
ljmp
and
dec
mov
xor
xor
jge
pop
jns
push
dec
cmp
inc
lahf
lods
fcoms
xor
adc
fnstcw
es
xchg
sarb
rcr
mov
inc
xor
dec
dec
das
aas
or
mov
adc
scas
jbe
shrl
cmp
icebp
cmp
repz
add
cmpsl
cmc
mov
pop
out
mov
push
inc
fsubl
mov
mov
dec
popf
stos
in
or
out
lds
imul
jb
nop
outsb
mov
icebp
cmpsb
mov
rcll
or
sub
imul
aas
jcxz
enter
sbb
js
icebp
out
ret
mov
test
dec
movsl
mov
frstor
gs
and
cmpl
outsb
push
loope
aad
pop
shll
xchg
xchg
push
mov
in
daa
cmpsb
mov
push
decl
jae
push
sub
inc
push
jp
aam
dec
stos
cmp
out
lahf
scas
and
les
outsb
aas
bound
mov
sbb
cld
insb
pushf
xor
cmp
outsl
mov
mov
cmp
cmc
repnz
lds
mov
and
mov
mov
mov
pop
cmpsb
pop
fwait
mov
gs
xchg
sbb
lea
push
test
jp
or
mov
packuswb
daa
adc
lret
rcl
pop
out
fsts
je
mov
lods
mov
es
push
cltd
xor
pop
xacquire
and
mov
bound
test
leave
call
pop
mov
aas
mov
popf
or
test
dec
cmp
or
call
inc
clc
neg
mov
jnp
inc
cmp
jns
clc
xchg
sub
or
pushf
test
push
inc
std
adc
push
mov
or
sti
das
or
mov
cli
pop
fidivrl
ret
sub
popa
mov
sbb
insl
lret
xor
adc
jp
push
inc
aas
xchg
loope
cmc
lods
xor
push
les
mov
movsl
insb
push
cwtl
adc
and
cmpsb
or
dec
ficompl
mov
inc
out
add
loope
cli
xchg
xchg
lret
int
out
inc
add
or
call
jb
inc
arpl
iret
and
dec
push
mov
mov
sbb
inc
testb
out
push
pop
jae
mov
pop
shll
sub
xor
adc
mov
dec
cmpsb
mov
imul
mov
fsubrs
aaa
mov
jno
ficoml
shrl
jmp
testl
push
loop
xchg
cmpl
jecxz
mov
push
imul
out
pop
dec
mov
pop
jbe
sub
cmp
mov
mov
lret
mov
aaa
jmp
push
jl
xchg
incl
mov
or
pop
or
xchg
mov
daa
imul
int3
xor
pop
cs
lahf
mov
sbb
jg
mov
cmp
scas
mov
xchg
int
add
adc
and
dec
cmc
gs
adc
je
fwait
mov
jnp
cmp
in
add
lahf
je
jecxz
mov
stos
mov
lcall
rorl
or
lods
xor
sbb
jecxz
in
inc
adc
aas
xor
xor
mov
mov
fdivr
dec
out
sub
or
jb
es
ret
inc
imulb
fisttps
xchg
cmpsl
xlat
or
sub
mov
scas
adc
jno
clc
adc
in
mov
sbb
lahf
pop
cmp
pop
sbb
jp
jno
mov
jl
inc
clc
cmpsl
inc
test
mov
mov
cmp
in
pavgw
sarb
and
dec
aaa
sbb
fisubrs
mov
sub
push
push
aaa
shrb
cmp
push
andl
ret
insl
jo
mov
xchg
in
nop
ret
fwait
sub
out
fdivrs
mov
jne
stos
sbb
jno
in
imul
enter
and
fnstenv
aaa
dec
movsl
fcmovb
mov
or
lahf
movsb
cmp
lods
loop
cmp
movl
fwait
push
add
inc
push
mov
push
aaa
nop
std
sti
cmp
cld
test
idivb
imul
les
adc
cwtl
leave
fsts
push
mov
fs
insb
jmp
mov
mov
fdivrs
xchg
push
lea
mov
fldcw
dec
jg
mov
and
data16
mov
loop
adc
mov
movsl
lds
or
icebp
mov
mov
rolb
int3
in
addr16
dec
std
inc
inc
je
shlb
sbb
bound
fnstsw
add
mov
int
mov
out
hlt
shl
cwtl
insb
inc
mov
call
sti
sbb
jne
enter
leave
push
lods
repnz
loop
test
std
addl
je
js
push
addr16
rcrl
pushf
loop
fcoml
jmp
fcmovb
fsubrs
sbb
ret
fisubrs
xor
mov
mov
jge
lods
dec
ss
xchg
xor
sub
pop
jmp
dec
ret
sbb
sahf
jle
cmpb
xchg
fs
and
mov
dec
test
leave
aad
iret
mov
into
es
jl
popf
mov
stc
sub
push
insb
insl
mov
adc
pop
rclb
out
test
jne
leave
idivb
xchg
adc
aas
or
xchg
pop
add
lock
xorl
push
sbb
in
sbb
jae
xchg
andb
out
icebp
inc
aaa
add
mov
jne
adc
xchg
adc
mov
sub
repz
push
xor
sbb
push
adc
in
in
neg
cmp
mov
sarl
jge
mov
jns
rcr
push
hlt
xor
fwait
test
inc
pop
sbb
mov
dec
stc
es
mov
or
stos
mov
add
inc
xchg
adc
leave
enter
mov
cli
icebp
fbld
or
imul
pop
pop
push
mov
push
push
ret
pop
push
repz
out
jbe
adc
xor
mov
or
mov
push
leave
in
out
and
sbb
loopne
movsb
pusha
jbe
lahf
xchg
fst
lret
scas
dec
mov
jp
fildll
and
xlat
insb
cmpl
pushf
test
mov
test
jo
xlat
pop
icebp
insb
pop
cld
adc
cmp
jge
rorb
and
icebp
jno
movsb
and
repnz
leave
dec
int
pop
mov
lods
and
adc
cmp
mov
xchg
rcrl
test
test
mov
cltd
lret
or
add
insl
cwtl
gs
lret
repnz
jae
push
sub
push
test
in
pop
sbbl
mov
pop
xor
lcall
aaa
pop
out
sub
jg
fstps
xor
bound
fildl
hlt
and
inc
aas
rclb
mov
push
call
fimuls
mov
inc
in
mov
cltd
fldenv
add
mov
jae
xchg
dec
in
and
mov
and
mov
lcall
jno
scas
addl
inc
jb
jno
aad
fmuls
lahf
jmp
lods
pushl
scas
adc
mov
xor
data16
push
mov
out
inc
mov
pop
loopne
dec
adcb
mov
jp
or
jmp
pusha
ret
fcmovnb
jmp
jl
dec
imul
sti
aas
cmc
aas
fs
sbbl
subb
jge
cmp
int
mov
fsubrs
adc
push
fidivs
repz
arpl
imul
mov
adc
adc
mov
adc
outsl
cmp
jbe
cld
fimuls
mov
xchg
sub
and
dec
inc
and
fwait
into
lock
xorb
jge
std
es
jne
pop
mov
rorl
mov
int3
ret
lods
imul
in
js
in
xor
xor
xor
inc
cmp
aad
mov
add
push
pop
jno
insb
mov
mov
xchg
pop
lea
dec
repnz
out
or
hlt
dec
and
fstpl
mov
sub
outsb
cmc
adc
lahf
jae
pusha
add
cmpsb
loopne
js
add
in
jl
sbb
xchg
fdivrl
call
jb
test
mov
add
jecxz
subl
mov
cmp
jmp
sub
daa
shr
cmc
popa
jo
test
jle
lret
and
xor
mov
jo
and
xlat
jb
and
and
push
cmp
in
add
xchg
mov
push
xchg
fsubr
xor
pop
movsb
mov
ljmp
in
jno
aad
jle
sbb
jae
rol
add
pop
mov
fcmove
and
jmp
mov
mov
aad
outsl
movsl
sbb
xor
cltd
dec
jle
pushf
xor
or
sbb
out
push
fldcw
stos
sub
popf
cli
scas
sbb
repnz
cltd
cmc
dec
ret
test
mov
cmp
scas
outsl
mov
fidivrl
fimull
roll
fmull
lea
daa
pushl
mov
popf
cwtl
lods
or
cmp
mov
lods
ret
flds
dec
popa
ja
fsubs
in
mov
mov
xor
jne
popf
fiadds
mov
iret
movsb
les
pop
pop
adc
dec
mov
insl
fisubrl
push
ljmp
xor
xchg
add
in
movsb
mov
mov
lods
dec
jmp
insl
pushf
gs
add
push
ret
mov
loopne
scas
xchg
pop
push
mov
insl
movsb
add
gs
cmc
mov
sub
push
aam
mov
shl
sub
jmp
and
out
pop
jns
lcall
inc
ficomps
or
jmp
mov
out
or
pop
cmp
imull
cld
mov
jns
je
shl
leave
jne
cli
fs
sub
sbb
push
sti
cltd
dec
and
xchg
or
fimull
jge
push
push
int3
or
shrl
jg
lret
int
cmc
mov
pop
mov
pop
mov
jl
mov
ret
stos
das
lods
int
mov
cltd
andb
rcrl
cmc
push
cmp
test
push
cltd
mov
repnz
xchg
inc
fs
sub
lds
incb
popa
xchg
cwtl
cmc
xlat
addr16
xchg
call
je
js
insb
push
lods
mov
xor
ss
or
stos
jl
or
addr16
pop
call
out
sub
mov
mov
jae
mov
cmp
pop
stos
stos
dec
sub
inc
xchg
rol
inc
stos
in
popf
sub
xchg
jp
rclb
loop
xchg
icebp
popa
lret
lods
and
stc
cmp
icebp
adc
sub
scas
cltd
pop
sub
push
leave
dec
xlat
mov
icebp
cmpsl
negb
and
dec
pop
mov
add
pop
lret
adc
push
jecxz
mov
ja
andb
or
jno
push
ficoms
mov
mov
xchg
in
int
in
jo
pop
aaa
add
ja
lods
clc
fidivrs
fwait
pop
mov
pop
dec
and
bound
xchg
xchg
fisubs
mov
pop
add
je
push
xchg
adc
or
adc
outsb
testb
jbe
fwait
rol
ds
sbb
mov
sub
fiadds
jg
mov
xchg
sub
mov
rcr
ljmp
cld
jl
out
or
out
or
call
sub
rolb
ret
or
lcall
push
arpl
outsb
test
int3
ja
cmp
and
xchg
mov
clc
jp
fstps
scas
jns
pop
pop
je
movsl
jle
inc
pusha
xor
sbb
xchg
dec
cmp
mov
or
je
aas
stos
jb
mov
mov
cmp
sbb
xchg
mov
xchg
jp
outsb
cmp
decb
mov
mov
mov
cmp
push
or
mov
dec
or
jp
loop
or
add
cmpsb
repnz
sbb
xchg
mov
mov
or
mov
cmp
jp
cmc
mov
popa
or
out
mov
insl
popa
or
enter
cmp
int3
inc
mov
xchg
test
iret
into
inc
outsl
lahf
push
inc
push
in
jo
aad
mov
dec
and
nop
mov
jno
nopl
push
in
jne
in
std
mov
inc
repnz
mov
push
scas
aaa
add
push
xchg
pop
lret
xchg
add
sub
lock
rep
pop
cmp
shll
aas
pusha
ss
adc
cltd
jecxz
out
xor
mov
or
mov
and
fsubrs
popf
fiaddl
icebp
cmp
jp
ret
xor
cwtl
sub
out
sbb
mov
fwait
pop
xor
xchg
push
dec
sub
cmp
and
dec
nop
xor
xor
fidivs
and
pushf
shll
and
test
pop
mov
mov
cld
loope
outsb
mov
mov
in
testl
idiv
jmp
pop
fwait
push
repnz
shrb
and
sahf
fs
dec
mov
push
and
push
aaa
xchg
lock
inc
mov
and
mulb
pop
int
jp
imul
lods
mov
jno
mov
cmp
or
in
popa
adc
jle
push
mov
je
push
mov
mov
pop
scas
inc
sbb
idiv
in
int
loope
sub
push
fildl
or
out
sub
aaa
pop
gs
jle
repz
push
loopne
in
imul
fistpl
rcrb
xchg
mov
xchg
push
push
push
xchg
xor
lock
je
jg
jae
inc
xor
jg
jl
add
cmp
sahf
mov
ss
xchg
sarb
cmpl
mov
ret
imul
dec
jg
jmp
loope
and
adc
push
fnsave
cli
adc
pop
mov
fsubs
int3
push
dec
das
stos
xor
lods
popf
sahf
mov
out
ficompl
fnstenv
dec
push
fs
cmpsl
movsl
call
outsl
jg
or
jle
std
xchg
lcall
lcall
in
dec
hlt
fidivrs
inc
in
shll
mov
in
sbb
lds
out
jle
mov
mov
stc
das
and
push
das
shl
push
scas
scas
xor
mov
loope
insb
loopne
adc
add
pop
lods
fnsave
push
xchg
into
aaa
inc
sub
sub
jo
push
in
cli
movsl
push
mov
push
testl
or
das
or
mov
sub
cmp
aaa
test
xchg
cli
jge
sub
repnz
push
out
inc
movhlps
xchg
repz
push
cmp
mov
sahf
inc
xchg
or
and
sub
in
xchg
or
arpl
inc
ljmp
push
pushf
mov
movsb
jle
or
arpl
cli
mov
mov
scas
inc
shrl
clc
movsl
inc
ja
fs
jno
cld
dec
shrl
inc
out
jne
clc
mov
mov
adc
push
inc
insl
loope
andl
pushf
jmp
add
inc
mov
push
sub
in
dec
cmpb
rcll
negb
jp
clc
mov
addr16
xor
dec
xor
pop
sub
imul
js
cmc
test
cwtl
cmp
pop
xchg
aad
mov
orl
cmc
pop
sub
xchg
push
mov
rclb
mov
loop
xchg
sbb
fsts
loop
jmp
mov
xchg
push
or
std
dec
push
outsb
stc
and
sti
cltd
dec
subb
pop
mov
dec
mov
lret
fcoms
in
mov
push
push
cmp
inc
cmp
in
rclb
insl
lods
mov
in
lock
push
jl
mov
inc
shrl
test
shl
fdivl
loop
fisubl
push
inc
fisubs
notl
xor
data16
loop
int3
out
xchg
call
xchg
scas
mov
lahf
jle
je
xor
stos
and
lcall
push
in
pop
sub
or
push
push
jle
dec
lock
push
into
test
sarl
mov
pusha
adc
aaa
push
or
pop
lock
push
out
push
test
andb
xlat
hlt
or
pusha
lock
jb
mov
test
fnstsw
arpl
inc
stos
inc
cwtl
inc
into
push
repz
cwtl
test
mov
lods
lcall
jecxz
sub
cmp
pop
ret
lcall
sbb
jb
xor
mov
ljmp
lret
cwtl
xchg
fadds
push
mov
cwtl
mov
test
mov
es
imul
xchg
fnstsw
rclb
sbb
push
aad
adc
xchg
adc
lea
inc
call
sbbb
cmpl
cmp
jns
push
pop
ds
sub
aam
lds
mov
jg
mov
jns
or
push
mov
pop
scas
jecxz
lret
enter
jecxz
sub
cli
sbb
push
adc
das
in
scas
cmp
sbbb
cmp
pop
pop
ret
pop
mov
fmuls
and
cli
xchg
leave
lcall
xchg
dec
and
fisubrl
pop
jns
xor
pop
xor
sub
lods
push
rclb
xor
add
xchg
test
push
push
mov
add
js
scas
clc
pop
jbe
scas
cmc
fisubrs
inc
sub
dec
sub
inc
mov
jge
xchg
aaa
inc
adc
xchg
sbb
roll
or
xchg
and
xor
adc
lret
cmp
jb
imul
pop
push
cmp
aam
lret
fcmovnu
mov
scas
push
mov
pop
mov
es
lret
pop
inc
adc
mov
inc
xor
mov
pop
in
sub
leave
cld
fdiv
sub
roll
aaa
mov
xor
add
push
iret
repnz
jl
es
fneni(8087
add
and
leave
outsl
jle
add
dec
jl
lods
pop
cmpsb
dec
cmpsl
imul
or
icebp
test
mov
lret
pop
loop
insb
or
xchg
pusha
sbb
inc
push
adc
xorl
cmp
add
outsb
popa
insl
pop
movsb
pminsw
int
stos
fiaddl
std
pop
iret
cmp
dec
cmc
cmp
addr16
or
fmuls
adc
adc
inc
pop
das
xchg
jmp
lock
jmp
scas
and
pusha
and
imul
sbb
cwtl
fwait
adc
bound
jmp
shll
mov
or
fucomp
mov
in
stos
sub
repz
insl
pop
fdivs
dec
cs
fistl
scas
mov
jo
xchg
jb
mov
sbb
push
jmp
scas
fildl
leave
add
jp
sub
pop
jg
jge
inc
test
sub
xchg
mov
dec
aas
lcall
les
jo
pop
cmc
in
and
xchg
xchg
pop
repz
repnz
pop
cmp
scas
adc
pop
add
inc
int3
adc
arpl
inc
push
xor
cs
mov
sbb
jno
xchg
mov
push
out
out
in
loope
adc
pop
xor
mov
jbe
shr
out
pop
pop
add
fldenv
insb
inc
or
fistpl
test
ja
scas
sbb
pop
std
imul
mov
push
ficomps
orb
xor
dec
ja
scas
loop
icebp
outsb
xchg
jg
popa
int3
inc
mov
xchg
test
xchg
xchg
pushf
mov
lcall
sbb
std
mov
and
xor
jnp
xor
jbe
jmp
cmp
frstor
das
or
mov
push
mov
push
pop
sub
xor
addr16
gs
out
mov
push
movsl
sbb
lock
xchg
outsb
mov
sti
push
popf
jo
lods
sbb
dec
cmc
fwait
addr16
aam
ficompl
in
pop
xor
jge
sub
dec
inc
push
pop
xchg
inc
shlb
pop
mov
mov
sub
jg
jae
add
in
fstpt
push
sahf
xor
ja
nop
sub
jle
dec
sub
lret
push
dec
das
jno
fwait
cmp
lsl
mov
loope
push
lock
mov
cs
fadds
inc
xchg
xchg
jge
and
mov
lea
mov
aam
ss
cmp
lods
cmp
dec
std
inc
lea
xor
mov
insb
mov
out
mov
jge
cmp
sub
pop
mov
cmc
push
cmc
sub
sar
outsl
jb
jo
jb
xchg
jno
shrl
xchg
xor
leave
clc
dec
iret
jge
xchg
mov
dec
fidivrs
incb
rolb
call
sbb
add
into
cmpl
mov
cmp
jl
pop
cmp
sbb
xor
or
stos
adc
pushf
stos
push
xlat
mov
push
out
stos
scas
inc
movb
mov
sub
out
sub
mov
enter
divl
push
ljmp
js
jns
adc
data16
mov
and
shrl
movb
adc
mov
pop
jle
fcomps
loopne
call
mov
addr16
fwait
push
imul
and
mov
fidivrl
lcall
pop
or
inc
xchg
lahf
inc
xchg
movsl
push
pop
sbb
repnz
jg
push
mov
mov
cmc
jecxz
popa
xor
sahf
cmpsb
fidivrl
pop
sub
pushf
cmp
rclb
and
pop
pushl
sub
jo
and
sbbb
lret
pushf
pop
sub
mov
cwtl
xor
dec
push
popa
fisubs
or
mov
insl
push
jbe
inc
and
sub
sbb
mov
dec
mov
and
adc
out
in
pop
xchg
push
adc
and
bound
jb
sti
int3
jb
aaa
shll
test
pop
pop
mov
scas
xchg
jnp
iret
fwait
adc
jo
popa
add
mov
sarb
sti
pop
int3
sti
call
cld
in
das
clc
jno
lods
pop
cmpsl
pop
test
cs
icebp
mov
int3
fucomip
mov
pop
push
or
cmc
or
push
cli
fmull
notl
fists
xchg
mov
add
je
dec
or
test
lahf
mov
mov
mov
lods
mov
insb
mov
test
ret
sbbl
test
xchg
mov
jmp
enter
in
jnp
lahf
enter
cmc
and
fnstcw
adc
sar
sbb
hlt
lahf
outsl
xchg
out
jbe
jno
inc
clc
jne
pop
inc
cmc
imul
sbb
pop
pop
add
inc
fdivs
fnstcw
or
push
mov
fs
mov
and
dec
stos
push
sub
xchg
jle
adc
popa
mov
mov
int
xchg
sub
push
mov
gs
iret
sub
cmp
jb
adc
xchg
sbb
pop
pop
sbb
sub
test
mov
je
mov
sbb
jg
cs
roll
pop
fdivl
test
hlt
adcb
mov
sub
mov
mov
jno
mov
mov
add
sub
subb
dec
adc
push
push
inc
mov
xchg
cmp
in
fstl
fs
push
lea
sbb
or
sbb
test
es
into
inc
add
shl
pop
test
push
rcl
pushf
mov
aad
cltd
xchg
cld
je
pop
sbb
lock
xchg
clc
aad
mov
in
xor
lods
cmp
test
icebp
cld
ljmp
lret
mov
notb
pop
mov
nop
fists
fistl
or
xchg
fmul
movsl
je
inc
inc
cmp
fstp
jmp
cli
sub
nop
and
sbb
cs
call
mov
scas
adc
stos
dec
lcall
scas
call
cmp
cmpsl
xchg
pop
push
sub
es
cltd
sbb
mov
nop
lcall
add
mov
and
adc
dec
dec
mov
call
add
mov
test
jo
cs
sbb
inc
xor
mov
aad
jnp
pop
lods
fildll
fisttpll
sbb
js
xchg
xor
xchg
lret
test
add
std
inc
imul
loope
rcr
adc
sub
mov
pop
pop
in
or
pop
inc
jae
adc
and
or
inc
push
aam
push
mov
adc
pusha
xor
mov
jno
cli
fwait
mov
pop
jg
jecxz
dec
sub
imul
dec
pusha
cwtl
pop
in
xchg
jecxz
daa
mov
lods
xor
xor
in
mov
idivl
mov
in
mov
inc
jl
lret
into
push
mov
mov
xchg
cmpsb
push
or
xor
mov
xchg
mov
add
or
enter
test
add
mov
jp
mov
test
shll
loop
cmpsb
or
call
sub
cld
mov
xorl
adc
jns
fnstsw
ljmp
add
in
in
pop
outsb
push
das
daa
aaa
out
and
jb
mov
jo
imulb
jp
test
adc
sbb
notl
repz
push
aas
sbb
sarl
inc
jle
aad
dec
outsb
pop
test
and
scas
ds
pmulhw
mov
outsb
ror
cmp
popl
sbbl
push
or
call
icebp
std
out
and
aam
clc
cmp
movsl
into
push
cmpl
filds
mov
mov
and
pop
dec
cmp
sbb
push
stos
daa
into
cli
jg
sbb
sub
repz
lds
call
ret
mov
scas
jp
gs
inc
xchg
sbb
cmpsl
nop
enter
fnstsw
std
or
movsl
cmpsl
test
pop
mov
push
jle
mov
jnp
jae
fs
aam
push
imul
orl
insl
lret
lret
repz
cmpsl
xor
loopne
gs
xchg
movsl
hlt
push
mov
cmp
subb
divps
bound
mov
jmp
insl
push
and
inc
pop
inc
add
shlb
fcomps
fdivrs
ret
loope
mov
subl
enter
mov
cmp
jg
jle
cmpsb
mov
jge
xchg
sbb
lods
adc
in
popf
sub
fstpl
sti
out
ret
add
or
addr16
and
insb
lret
fdivl
jmp
jmp
fcomps
fs
jns
xchg
sub
shlb
mov
lea
xor
mov
pusha
xchg
leave
loopne
lods
pop
cmpsb
shll
pop
lea
adc
sbb
in
xchg
pop
mov
mov
xchg
mov
and
pop
std
jbe
mov
mov
test
xchg
dec
cli
xor
mov
in
pop
test
jecxz
sub
movsl
add
test
mov
jnp
movsl
cmp
push
inc
mov
mov
popa
cmc
add
popf
mov
push
movsb
cs
inc
ja
xchg
sti
int3
lods
mov
sbb
fs
insb
clc
aas
mov
xchg
fisubrs
nop
cld
bound
add
out
dec
inc
repnz
lds
mov
mov
mov
cmpsl
cmp
and
repz
jg
fs
fistpl
repnz
pop
nop
repz
jns
fistl
arpl
repz
insb
scas
leave
xchg
cmc
add
test
lret
arpl
shlb
mov
push
mov
call
stos
int3
or
out
popf
mov
xor
scas
outsl
pop
dec
push
fcom
push
push
mov
rorl
imul
imul
test
inc
popa
hlt
jae
push
sub
push
fisubrs
cs
inc
scas
add
adc
inc
pop
fcoms
add
cld
cmp
jnp
imul
pop
add
push
cmp
add
sbb
cltd
pop
lods
xchg
xlat
push
mov
fmull
adc
and
dec
es
test
pop
fprem
and
fabs
inc
leave
lods
jg
clc
pushf
pop
lods
cmp
test
insb
xchg
push
scas
jmp
scas
mov
fcoml
sbb
mov
mov
cmp
int
int
lock
divl
push
dec
incl
scas
loop
sub
and
icebp
xchg
andb
mov
push
add
ffree
jbe
xchg
movsb
jmp
adc
mov
subb
nop
pop
xor
fwait
pop
or
aad
dec
adc
fstp
in
les
outsl
in
mov
mov
jecxz
movsl
mov
jbe
xor
adc
stos
push
pop
das
sbb
xlat
shlb
push
dec
das
xor
int3
xchg
dec
cmp
inc
xor
adc
inc
or
xchg
and
je
add
sbb
loopne
fnstsw
jne
out
cmp
dec
jno
jo
mov
sub
or
xchg
movsl
rclb
cmpsb
fcmovnu
cld
ret
dec
out
ss
das
cmpsl
xor
or
icebp
loopne
mov
push
add
out
mov
rorb
push
fldcw
cmpsb
jecxz
dec
pop
pusha
clc
ficomps
inc
pop
sub
or
fwait
cmpsb
mov
jle
xchg
dec
push
jecxz
pop
xchg
es
loopne
ret
decb
addb
lahf
in
scas
jb
pop
fimuls
inc
icebp
push
ljmp
popa
outsb
movsl
test
popf
jb
sub
jle
loope
repnz
mov
aam
in
daa
xchg
xor
fs
movsl
jne
fst
and
lea
add
in
out
pop
xor
ret
push
xor
addb
cmp
mov
stos
jmp
xchg
xor
test
jb
jmp
fisttpll
fcmovb
xchg
and
fstl
mov
dec
xchg
jae
jbe
push
inc
xor
add
lret
insb
add
test
lahf
addl
mov
jmp
xor
outsl
jbe
je
sbb
jmp
ljmp
lods
mov
jmp
inc
roll
xor
cli
insb
cmp
mov
mov
test
negb
mov
pop
pop
mov
and
addr16
ret
sub
mov
push
xor
cmpsb
or
xor
mov
repz
out
cmp
jno
ds
lock
and
into
stos
fcoml
jp
hlt
jle
cltd
mov
insb
dec
xchg
sti
mov
lods
xor
loop
cmpsb
and
adc
fbld
cltd
jne
sbb
xor
mov
adc
mov
dec
cwtl
cmp
mov
adc
or
add
dec
out
ljmp
scas
sbb
xor
mov
sbb
jecxz
mov
imul
cltd
clc
sbb
cs
adc
xor
inc
dec
cmp
and
sub
cli
shr
fsave
shl
mov
cmp
adc
insb
std
ljmp
gs
or
dec
pop
and
lcall
push
or
test
int
out
and
jb
insb
sbb
push
push
mov
adc
add
xlat
cmp
and
mov
inc
out
pop
scas
mov
jecxz
sbb
and
test
scas
sarb
inc
jmp
cmp
leave
xchg
or
lods
jns
mov
jbe
ja
imul
inc
xchg
adc
das
xor
pop
or
xchg
xchg
mov
jmp
lret
pusha
and
mov
ja
scas
shr
aaa
or
in
push
mov
mov
cwtl
test
pushl
add
lock
xor
mov
js
mov
cmp
test
ja
scas
ret
popf
lcall
cmc
inc
shll
xchg
xchg
andb
test
sub
dec
xor
jl
bswap
shll
inc
iret
addr16
fs
xchg
sbb
cmpsl
sub
pop
push
outsl
js
push
cmp
decl
adc
sbb
aaa
stos
lds
adc
cmovbe
test
mov
add
jp
add
pop
lods
sbb
mov
shr
je
ljmp
aas
aad
xor
dec
adc
loopne
or
push
mov
cmp
out
je
cmp
cmpsl
movsb
pop
mull
imul
add
cwtl
mov
pop
add
push
data16
push
sub
into
xchg
pop
mov
pop
scas
mov
hlt
sahf
testl
inc
cmp
int
xor
test
je
or
xchg
xlat
in
ja
fmull
lcall
pop
out
xchg
into
push
push
and
mov
inc
sti
mov
mov
pop
jl
push
ja
mov
loope
add
js
jmp
pop
addl
mov
repz
out
movsb
xchg
fiaddl
cld
xor
cmp
loopne
iret
jmp
inc
jle
xchg
mov
and
sub
xchg
fwait
mov
adc
mov
push
mull
test
adc
add
xchg
mov
mov
sub
iret
dec
cmc
insb
js
lret
jle
mov
dec
xor
xor
or
mov
dec
add
or
fstpl
sub
pusha
lock
fnsave
or
std
fildll
add
outsb
test
mov
xchg
mov
loop
mov
repz
mov
cmp
inc
stc
mov
sti
std
stos
sbb
inc
pop
pop
mov
es
mov
movsb
stos
push
dec
mov
daa
iret
cmpsl
shrl
sub
cmp
lcall
out
sub
fiaddl
mov
sbb
or
xchg
mov
xchg
cmpsl
stos
or
mov
rcr
mov
inc
fisubl
xor
fildl
sub
mov
or
mov
jmp
and
fimuls
add
cld
lret
sub
loopne
mov
xchg
dec
call
xor
mov
stos
adc
jne
jb
fs
fisttpl
aad
ret
xchg
or
adc
dec
popf
or
pop
adc
mov
pushf
outsb
cmp
es
cmpsb
fidivrs
flds
sbbb
leave
cltd
mov
out
call
addr16
cmp
movsb
or
cs
daa
sbb
cmp
mov
ja
xchg
push
inc
mov
adc
mov
sti
insl
inc
and
fldenv
imul
push
sub
jmp
adc
ret
sti
popf
dec
mov
loopne
lret
or
int3
inc
pop
push
clc
mov
loope
test
outsb
pop
push
and
inc
sbbl
movsl
cmp
outsl
push
cmp
jo
in
pop
sti
mov
mov
mov
ficomps
out
mov
orl
xor
xor
cli
aas
subl
lcall
call
dec
outsb
shrl
cmp
adc
mov
pop
or
or
roll
xchg
inc
shl
sbb
mov
lcall
push
sbb
mov
cld
adc
sbb
nop
jnp
add
ljmp
cld
lret
rclb
arpl
dec
or
ja
imull
sbbb
inc
or
outsl
movsl
push
cmc
lock
popf
aaa
scas
mov
aaa
or
dec
out
lcall
ret
lret
push
imul
xchg
aas
xchg
xor
lret
xchg
cmp
mov
leave
pop
insb
mov
sub
add
in
pop
ret
adc
add
dec
aad
cmp
add
adc
scas
divb
adc
lahf
and
jg
cmpsb
icebp
pop
inc
adc
or
jno
loopne
and
dec
aaa
push
lea
andb
and
push
roll
mov
mull
jmp
fbstp
fisubs
rcr
in
xor
jne
jae
mov
movsl
mov
ds
mov
nop
mov
in
jl
xchg
fsubr
mov
inc
push
mov
jns
ror
jge
aad
pushf
xor
lcall
pop
push
push
sub
xor
js
lock
dec
imul
std
jno
jg
aam
in
adc
daa
lret
xlat
pop
adc
push
sbb
mov
sub
stos
ja
into
xchg
dec
mov
faddl
into
inc
adc
pop
xor
jbe
ficomps
leave
jb
lret
in
adc
in
ret
pop
push
cmp
push
pushf
fcompp
pop
and
mov
sarl
adc
jg
add
mov
pop
xchg
jl
mov
ret
sub
jne
mov
nop
push
xchg
int3
adc
nop
insb
adc
testb
mov
outsl
push
jl
mov
enter
shlb
and
repnz
mov
xorb
movsb
mov
cmp
movsb
inc
outsl
ret
cmp
inc
mov
adcl
add
or
stos
stc
or
xchg
test
mov
mov
mov
dec
addr16
out
mov
insb
ret
pop
and
lea
bound
dec
pop
and
cmp
sub
roll
jmp
dec
cmpsl
add
push
adc
dec
or
loop
lds
jg
inc
out
jp
cld
sub
push
and
sbb
jnp
imul
inc
mov
cwtl
cltd
insl
fucom
ss
dec
test
cli
cld
insb
mov
mov
push
or
add
push
jg
rcll
xlat
xor
or
stos
xchg
cmp
rorb
adc
lock
in
pop
cmpsl
in
xchg
push
pop
mov
bound
xchg
cmp
ret
ss
cmpsl
shlb
sti
cmpl
pop
insb
mov
data16
pop
jnp
push
inc
dec
cld
sahf
fldcw
add
repz
pop
xor
mov
mov
test
insl
add
das
fisttpl
push
aas
adcb
pusha
nop
or
out
jle
mov
mov
push
xchg
mov
in
loop
sub
push
sbb
mov
and
loop
lcall
imulb
xchg
and
cmpsb
out
jge
idivl
sarb
stos
mov
adc
push
push
inc
add
rcll
mov
das
out
lcall
xor
adc
out
cmp
stos
cld
and
push
es
push
inc
sub
sbb
mov
sahf
rcl
shrl
pop
jg
test
negb
mov
imul
pop
inc
hlt
les
decb
adc
roll
or
mov
cmc
les
scas
add
subl
outsb
push
xchg
scas
cmovle
dec
xor
data16
repz
sarb
lds
xorb
faddl
pop
mov
jmp
cwtl
xchg
lret
pop
xor
out
enter
jmp
outsb
push
bound
loopne
test
int3
aam
shl
data16
out
addr16
in
xchg
add
push
jmp
sbb
jno
xor
push
sahf
cmpsb
inc
outsb
sbb
push
ret
test
push
clc
and
iret
adcb
in
hlt
fildll
filds
jecxz
add
and
xchg
jmp
in
xorb
mov
and
ret
pop
nop
pop
and
adc
mov
rclb
lcall
testb
and
cmp
xor
push
rcr
xchg
ja
dec
adc
hlt
test
in
xor
frstor
mov
jg
push
xchg
mov
push
push
insl
jp
and
aaa
pusha
mov
test
leave
shrl
dec
pop
mov
cmp
jecxz
outsl
into
push
adc
stos
fcomps
fidivs
sbb
insl
push
mov
xchg
xchg
xchg
push
mov
xor
clc
out
das
mov
and
or
add
cmpsl
mov
pop
or
mov
orb
sbb
push
inc
pop
movl
mov
in
xchg
sub
xchg
pop
mov
sbbb
dec
push
je
jnp
push
xchg
jmp
add
fstps
mov
fcmove
rorb
xchg
jp
jbe
bound
idivb
xchg
cmc
icebp
enter
push
pop
dec
sub
jg
sub
loope
inc
es
cmpsl
sub
jl
push
movsb
sbb
add
cmp
je
popf
and
ja
in
and
std
dec
mov
push
imul
in
push
push
inc
inc
aaa
shll
test
sbbl
loop
adc
pop
mov
jnp
cmp
jp
sub
dec
push
loop
or
push
mov
incl
lahf
data16
inc
pop
jle
stos
mov
pop
mulb
loopne
inc
and
js
sbb
dec
insl
hlt
adc
ja
ljmp
xor
scas
dec
test
mov
xor
dec
cmp
lods
cs
xchg
or
mov
dec
mov
int3
in
jge
cmp
mov
pop
sbb
loopne
adc
xor
mov
mov
ret
gs
jb
rorb
movsl
aad
dec
sub
std
push
cmc
fildll
fdivl
add
xchg
mov
mov
push
ss
mov
shll
std
pop
xchg
js
loope,pt
dec
mov
and
addr16
dec
jmp
pop
call
push
lea
or
repnz
ja
adc
jns
popf
mov
lret
cmp
mov
adc
sahf
loop
aaa
fiadds
mov
mov
aad
cmpl
push
lock
jmp
lahf
pop
or
fisubrs
pop
filds
dec
jle
sbb
sub
fisttpl
lcall
imul
xchg
add
xor
push
call
jmp
sbb
sbb
and
sahf
cmp
adc
mov
pop
cld
push
test
mov
loope
pop
nop
adc
xor
cs
cmp
push
or
jmp
lods
inc
inc
inc
fs
adc
js
jp
cmp
push
pop
sbb
fwait
push
jmp
hlt
jecxz
jl
or
lock
or
adc
xchg
adc
ret
mov
xor
stc
ds
jg
daa
mov
and
pop
or
pop
mov
push
xor
mov
and
and
loope
mov
xchg
jb
push
dec
inc
shll
push
cmp
inc
mov
lahf
movsl
push
push
icebp
adc
xchg
mov
push
dec
inc
dec
adc
push
push
push
sbb
sub
push
cmp
or
and
fldz
pop
jle
mov
sub
incl
xorb
push
testl
int3
rol
cmp
sub
ds
add
push
jle
lods
xchg
inc
les
lds
sbb
mov
cmc
pop
push
jnp
cmc
mov
lea
jmp
test
outsl
mov
int3
push
stos
insl
mov
push
sbb
adc
sti
fnstenv
insl
pop
out
ss
xchg
fwait
cmp
xlat
data16
lcall
cs
adc
push
clc
daa
mov
and
clc
xor
int3
pop
int
shr
test
push
insb
xchg
in
xor
cmpsl
in
cmp
clc
data16
rcl
cmp
adc
stc
jne
sbb
outsb
push
push
inc
jg
push
jo
shll
lods
cmc
xchg
das
sar
sar
ss
pushf
push
xlat
dec
loope
adc
int3
outsl
mov
dec
jae
ss
call
mov
mov
jl
ss
repnz
idivl
mov
sbb
sbb
inc
pop
cwtl
in
xor
fisttpll
xor
sub
sbb
jo
neg
aad
jecxz
ret
je
je
dec
cmpsl
xor
pop
mov
pushf
jp
xchg
adc
jbe
dec
popf
stos
sbbb
andl
push
push
lods
xor
xchg
int3
jbe
xchg
mov
jne
or
divl
mov
lea
push
mov
pop
xor
xchg
sub
aam
xchg
fs
pop
lds
add
in
orl
push
sub
dec
jge
loopne
jmp
pusha
add
popa
gs
popf
inc
popa
js
cmp
orb
pop
ljmp
add
sbb
rcrl
add
dec
cmp
push
xchg
mov
bound
shl
out
shrl
insb
scas
les
or
rcrb
mov
shll
mov
test
mov
sub
add
cmp
call
shrl
pop
int3
in
dec
pop
push
scas
in
lea
movsb
mov
adc
fsubrl
xchg
nop
cmp
and
enter
add
dec
nop
mov
xorb
sub
and
sarb
inc
mov
cld
movl
icebp
adc
out
xchg
push
scas
xor
mov
cmp
cvtpi2ps
pusha
jmp
adc
or
loope
hlt
lds
shrb
nopl
xchg
mov
jge
pop
jge
mov
sbb
and
mov
in
inc
xor
jl
nop
lods
shl
test
dec
arpl
test
xor
incl
imul
fists
leave
dec
pushf
or
imul
test
xor
orb
ljmp
pop
fbld
push
push
sbb
mov
int
dec
push
sbb
pop
std
jecxz
mov
adc
or
xchg
sub
inc
cmp
setne
sub
dec
je
test
fidivrs
and
jl
xor
outsb
xchg
mov
ljmp
sub
scas
and
das
cmpsl
pop
sbb
clc
or
imul
push
jp
adc
sbbl
imul
or
mov
or
test
dec
cmp
add
jno
scas
out
and
mov
sub
sbbl
push
in
mov
push
mov
cmpsl
pop
and
add
mov
popa
aad
inc
and
mov
jnp
mov
repz
jmp
push
cmp
pushf
mov
subb
out
or
fiadds
cwtl
js
roll
aaa
xor
mov
clc
mov
sub
adc
or
add
adc
out
inc
lret
ds
frstor
pop
insl
push
push
or
push
and
fists
push
mov
cli
stos
or
je
les
push
xchg
mov
sbb
mov
leave
lret
cmp
negl
jp
mov
repz
and
sub
xchg
scas
push
jecxz
shlb
mov
cmpsl
popf
xor
rcrl
xlat
xor
mov
and
push
js
adc
jo
movsl
scas
add
sub
xchg
fcomps
cmp
notl
outsl
cmpsb
cmpb
fcmovb
movsl
mov
fnstsw
mov
dec
lret
jno
sbb
fwait
roll
fdivrs
mov
xor
fnstsw
jl
imul
sub
mov
mov
sti
mov
jne
popa
push
push
test
jge
jae
add
push
and
insb
pop
cmpsb
and
mov
insb
add
cltd
rclb
mov
es
inc
adc
mov
rol
push
repz
xchg
lock
mov
in
push
loop
and
mov
loope
iret
cli
inc
sub
imul
cmpsl
fiadds
mov
je
mov
roll
imul
jae
lret
inc
push
imul
icebp
stos
clc
aaa
cmpsb
inc
int
in
cmp
push
cvtps2pd
rorl
mov
rcrb
sub
pop
inc
outsb
mov
dec
cmp
test
outsl
adc
sbbb
fs
pop
testb
je
iret
mov
adc
notb
call
or
loopne
inc
clc
dec
rcll
cwtl
inc
mov
stc
iret
cmovge
mov
inc
scas
les
test
push
test
inc
xchg
dec
adcl
cmp
insl
shrl
adc
add
fs
pushf
fdivrs
fiaddl
pop
clc
imul
lret
gs
inc
pop
leave
and
insl
or
mov
mov
inc
jae
pusha
lret
mov
sub
lock
movsl
int
addl
out
subl
daa
cli
and
push
jl
icebp
les
call
fwait
pop
fisttpl
pop
push
pop
stc
outsb
push
lods
push
iret
js
es
xlat
inc
les
cmp
adc
popf
lret
push
testl
inc
sub
loop
pop
pop
mulb
movsl
cmpsb
xchg
mov
mov
lcall
mov
add
and
lock
jo
cmpsl
mov
sbb
mov
pushf
das
mov
push
xchg
fs
mov
int3
cltd
subb
and
cmp
cmpsb
cmpsl
in
xor
pushf
mov
mov
das
pop
mov
mov
ds
inc
leave
into
add
sub
adc
test
shr
lret
shl
mov
daa
mov
jmp
pusha
add
lods
xlat
aas
adcb
inc
ror
adc
adc
cmc
loop
pushf
in
and
adc
out
mov
loop
pop
aaa
push
mov
xor
lods
popa
pop
test
das
mov
sub
cmpsb
inc
push
loopne
push
mov
dec
inc
popa
pushf
pop
std
add
and
dec
jne
fisttpl
stos
repnz
imulb
mov
xor
bound
mov
push
or
pop
loopne
mov
or
out
pop
in
divb
shlb
aaa
sbb
in
out
xchg
jo
loope
cmp
and
jge
adc
popf
mov
and
movsl
mov
cwtl
test
cmc
fildl
jnp
cmpb
inc
pop
in
mov
test
sub
nop
outsb
lcall
in
fdiv
jne
mov
and
push
jno
mov
rol
mov
push
xchg
popa
inc
rcrb
push
lods
outsl
and
or
and
rolb
adc
aas
out
cmc
xchg
inc
scas
arpl
push
sub
in
add
rorb
xchg
ss
or
inc
mov
mov
jecxz
repnz
mov
rcll
jl
push
ljmp
fdivl
xchg
arpl
mov
mov
push
cmc
decb
pcmpgtw
dec
xor
cmpsl
insb
mov
pop
cwtl
test
lea
aad
repnz
lcall
xchg
dec
daa
sbbl
test
arpl
sti
out
loope
pushf
push
jno
mov
cltd
dec
fdivl
clc
sbb
cwtl
jb
movsb
les
cld
xor
mov
sti
loope
and
repz
jns
add
lcall
shlb
or
mov
pop
xlat
add
lret
sbb
imul
imul
insb
xchg
pop
pxor
jle
ds
pop
jecxz
cmp
cmpsb
hlt
push
xchg
add
mov
sbb
and
je
add
cmpsl
mov
pop
scas
xor
in
arpl
andl
repz
outsl
mov
arpl
in
pop
sub
mov
aam
push
push
dec
rol
adc
rorb
or
lods
inc
xor
bound
ds
addl
sub
adc
ljmp
pop
mov
mov
mov
sbb
inc
fmuls
jne
add
int3
add
outsl
repz
std
jae
scas
xor
push
fbstp
add
pushf
mov
dec
and
sahf
sub
xchg
lahf
sub
xor
xor
mov
cwtl
lret
sbb
mov
insl
fisttpl
or
xor
hlt
mul
out
in
xlat
xor
lock
jecxz
push
aam
mov
shl
or
fisttpl
loop
setb
or
aam
jbe
push
mov
jmp
lret
inc
fdiv
mov
and
sub
xchg
jl
cmp
test
mov
and
inc
fistpll
cmc
shll
aad
flds
xor
les
lcall
loop
and
inc
je
test
lcall
or
lods
jb
aam
mov
mul
sub
scas
sub
clc
imul
xor
fldenv
cmp
unpcklps
jne
xchg
pushf
leave
pop
push
pop
sbb
push
push
sti
pop
sbb
aad
cmpsl
imul
fadds
lahf
sub
sahf
mov
pop
imul
sbb
inc
jge
rcrl
test
insl
scas
clc
sbbb
in
pop
dec
outsb
add
jmp
pop
cld
leave
jp
pop
hlt
dec
scas
dec
rcrb
enter
push
sbb
and
cmpsl
dec
mov
cmpsb
lcall
pop
and
jp
lds
or
lret
leave
js
mov
add
push
fnstcw
in
ret
mov
daa
inc
mov
sub
jle
icebp
test
hlt
dec
xchg
sbbb
fwait
loope
dec
adc
bnd
fcomps
push
movsb
testb
repnz
adc
push
fildl
pop
dec
imull
arpl
adc
push
aad
adc
sahf
rcr
mov
adc
rcr
push
aas
fsubrp
push
lods
inc
movsl
test
add
lds
xchg
gs
jne
sbb
mov
sbb
jmp
aad
xchg
aam
mov
and
hlt
dec
mov
aad
mov
xchg
les
insb
fld
push
call
jecxz
mov
mov
push
testb
loop
fldenv
faddl
mov
cmc
cmp
dec
call
rorb
xlat
xchg
pushf
jbe
push
inc
ret
lret
add
dec
mov
and
xchg
pop
stos
hlt
push
xchg
or
mov
into
clc
ficomps
loope
mov
add
pushf
pusha
mov
mov
xchg
cmp
leave
rcrl
mov
lods
push
pop
xlat
repnz
or
dec
xchg
and
cs
rcrl
add
mov
cltd
push
pop
add
sbb
stos
jg
pop
fistl
mov
sahf
push
dec
das
inc
or
fwait
mov
data16
push
and
loopne
cmp
je
pop
lea
xchg
int
in
push
adc
fcomps
scas
sbb
iret
adc
add
test
cmc
rolb
out
jo
test
inc
ss
arpl
sub
inc
mov
sti
push
jae
cmpsb
out
mov
cs
cli
sub
lock
aad
cmpsb
int3
ds
cmpsb
popa
aas
outsl
sbb
imul
divb
imul
cmp
push
iret
and
sub
je
loope
arpl
pop
imull
or
xor
xlat
mov
fildl
mov
es
test
cmc
and
add
and
xchg
int3
push
dec
adc
mov
daa
sub
push
ds
mov
ret
ss
sar
jg
sub
mov
popf
loop
cmp
jge
jns
loopne
daa
sarb
jmp
data16
xchg
xlat
push
cli
outsl
test
aad
inc
mov
pushf
pushf
inc
jne
pop
dec
addr16
in
lret
mov
sbb
popf
pop
ja
mov
inc
mov
dec
stos
inc
add
jbe
ja
aad
lds
xor
push
cmp
jg
dec
nop
push
push
pusha
adcl
ret
xor
xchg
jo
popf
adc
xor
cmpsl
mov
or
outsb
inc
gs
adc
cmp
rcrb
out
cmp
lds
and
inc
mov
jle
jo
and
inc
dec
ret
jmp
in
and
mov
cltd
lods
int
add
xor
fsubrl
lods
rclb
add
shll
fwait
stc
les
test
scas
idiv
frstor
icebp
rcr
shll
shrb
sbb
push
cmp
idiv
popa
fmull
xor
xchg
jmp
push
insb
jb
cld
rolb
negl
and
push
aam
clc
cmovne
push
into
enter
movsb
shrl
sti
out
pop
cwtl
lret
cli
test
mov
cmp
pop
cmp
aaa
jno
dec
and
int3
pop
adc
xorb
push
cmc
shr
inc
scas
pop
inc
jmp
inc
sar
sub
push
jg
fdivr
mov
add
ja
jmp
aaa
sbb
push
mov
push
ss
stc
jecxz
lds
pushf
push
mov
imul
sub
inc
mov
in
mov
push
aaa
jb
mov
mov
xchg
dec
loope
les
mov
xor
lret
daa
inc
adc
jl
sbb
push
inc
cld
xchg
xchg
mov
and
lods
icebp
lock
lret
jbe
jo
pop
dec
fwait
mov
ret
pop
addr16
iret
sti
inc
dec
or
xor
inc
or
or
clc
test
dec
out
fwait
dec
jbe
xchg
je
lret
in
cli
movl
jle
stc
aaa
mov
xchg
xor
shl
repz
icebp
cwtl
leave
addb
movsl
lcall
sbb
sub
mov
in
jne
cmpsb
push
sub
or
xchg
inc
rcrb
gs
ret
cli
xor
out
fsubrl
cmp
or
pop
pop
sub
shll
cmp
sub
jmp
and
pop
cltd
add
add
fsubs
mov
add
rorl
push
dec
sub
xchg
icebp
in
and
inc
jno
scas
test
jnp
and
sbb
jne
jb
pop
cmp
jg
fnsave
sub
sub
mov
jbe
movsl
cmp
mov
mov
imul
shr
in
hlt
push
insb
shll
xlat
idivb
cmc
jp
in
push
icebp
outsl
mov
pop
sbb
fprem
jl
jl
icebp
pop
xlat
cmp
pop
and
or
pop
test
rolb
loope
sarb
test
mov
push
cmp
xor
sbb
cli
lahf
bound
divb
ffreep
cmp
fwait
arpl
inc
stos
scas
jno
sub
enter
sbb
rol
jmp
jb
add
add
lret
aaa
xchg
les
je
xor
xchg
movsb
addb
and
pop
pop
cmp
clc
rorl
inc
mov
mov
sub
jmp
fdivrl
iret
push
xor
sub
push
lcall
jecxz
inc
jns
clc
jp
arpl
inc
ja
sub
es
shlb
or
in
xchg
out
fcmove
and
movsl
in
stc
lret
out
jge
and
aam
lea
xchg
lock
pop
jo
fwait
ja
dec
fmull
xor
in
adc
push
mov
scas
adc
js
sbb
mov
xchg
mov
test
and
pop
addr16
out
and
dec
mov
inc
adc
mov
mov
mov
lret
repz
mov
test
mov
add
mov
pop
and
push
repnz
rol
mov
scas
dec
dec
lahf
or
inc
add
xchg
aam
out
loop
add
or
sbb
enter
cwtl
repnz
iret
insl
add
jo
cltd
sub
aas
bound
inc
push
add
into
adc
and
jns
std
aas
outsl
mov
testl
mov
mulb
sub
mov
xchg
call
in
enter
pop
pop
imul
scas
push
pop
lret
ss
pop
cmp
std
sub
ret
push
lods
mov
aas
jo
test
mov
mov
addl
addr16
mov
mov
jecxz
out
xor
lock
sarl
adc
rorb
push
fistl
push
add
fidivs
xchg
dec
in
cmpsl
iret
cmp
inc
mov
mov
sbb
ret
jmp
mov
fdiv
jae
push
cmp
xchg
sbb
sbb
ja
xlat
inc
or
cltd
push
pop
scas
std
cs
data16
jno
inc
lret
dec
popa
xchg
aad
stos
cld
mull
fcmovu
and
or
data16
pop
mov
adc
idiv
outsl
and
mov
dec
xchg
mov
sahf
sbb
cmp
fsubrs
sahf
es
pushf
mov
pop
sahf
sahf
fmull
cld
aad
lea
pop
fsubl
dec
ja
lret
test
lock
ljmp
in
xor
adc
sbb
mov
sbb
add
cmp
or
xchg
ds
roll
mov
and
add
cmp
and
notl
lret
dec
repnz
or
pop
int
cmp
loop
mov
ja
and
cmp
and
adc
cmc
jp
daa
push
xchg
cmpsb
mov
xor
xor
ljmp
outsb
pop
jno
xchg
jp
jnp
popf
push
gs
lret
pop
test
divb
mov
pushf
add
movsb
push
inc
lea
fisttpll
ss
fisttpll
pushf
subb
pop
loopne
pop
pop
in
push
push
cmpsb
ja
push
lea
and
jo
cmp
push
dec
movsb
popa
je
jecxz
or
pop
adc
movsl
fdivl
ss
mov
int3
fwait
mov
jl
mov
addr16
aas
xchg
adc
sub
add
ret
inc
cmc
test
lods
std
in
jne
jp
loop
sub
and
jo
adc
adc
pusha
cmc
std
dec
loopne
pop
push
fsubrs
enter
pop
dec
add
in
sbb
sarl
jg
in
in
push
and
pusha
popf
mov
ret
imull
mov
outsl
leave
jge
mov
das
stc
jno
or
adcl
shl
lock
test
lret
insb
ret
xchg
inc
out
push
push
xor
das
jbe
fldt
iret
adc
jecxz
popf
xchg
adc
inc
std
pop
xchg
xchg
rol
push
sbb
imul
push
xchg
mov
or
or
and
mov
sub
mov
es
test
leave
or
push
rolb
jge
aaa
sbb
test
pop
jno,pn
icebp
dec
jmp
jbe
push
add
repz
test
cmpsb
cld
fcmove
pop
xor
mov
ud2
aam
xchg
out
fimuls
xor
add
out
rcll
sahf
fidivrl
add
dec
mov
out
jo
and
scas
stc
mov
sbbb
pop
mov
leave
outsb
enter
pop
jns
lds
adcb
mov
mov
or
push
mov
adc
arpl
rorb
inc
push
andb
ss
mov
sbb
jnp
fnstenv
or
jecxz
movsb
ds
sub
stos
cwtl
mov
pop
pop
dec
inc
push
push
movsl
ljmp
outsl
jmp
xor
push
roll
cwtl
cmp
xchg
lret
aaa
stc
int3
lods
stc
xchg
jo
jl
and
ret
stos
mov
icebp
arpl
insl
cmpsb
inc
bswap
mov
sbb
add
add
mov
jnp
sub
or
xchg
mov
hlt
add
repnz
testl
and
call
push
push
iret
sbb
pushf
cmpsb
rcl
and
gs
addr16
cmp
mov
sbb
fwait
lret
add
mov
adc
sub
and
or
mov
in
dec
inc
stos
cmpsl
dec
mov
stos
xor
cmp
ret
push
ljmp
and
fcmovnb
adc
out
mov
or
std
and
lea
icebp
mov
cmp
and
cmp
cmpsl
das
adc
sbb
nop
aam
icebp
aaa
call
sbb
roll
cmpsl
mov
shl
pop
in
arpl
in
rorb
and
push
ja
xor
adc
dec
push
mov
outsl
repnz
xchg
sbb
push
gs
sub
call
xchg
xor
ficoml
sahf
pop
shlb
xchg
mov
fildll
inc
enter
pop
and
and
std
imul
out
imul
lahf
jne
cwtl
push
loope
mov
mov
dec
add
ljmp
lods
inc
lock
pop
lods
div
out
xor
test
xor
jae
jo
shl
aas
jmp
mov
inc
fsubs
jns
lock
jmp
mov
pop
rcrb
sub
xor
jp
fimull
dec
shl
aam
rcll
fsubrl
or
mov
cli
add
rcll
or
pop
xchg
xchg
dec
das
les
sti
fwait
jge
mov
in
push
and
adc
gs
sbb
cmp
sbb
in
mov
inc
mov
lock
loopne
xor
and
imul
iret
jp
cli
call
call
out
xlat
jp
xchg
shrl
sub
mov
push
negl
lcall
fdivrl
jo
jb
cld
push
mov
scas
push
inc
push
insl
sbb
xor
mov
hlt
rorl
sub
and
mov
mov
inc
mov
xor
cmp
sarb
dec
lret
rcll
mov
pop
push
in
sti
push
test
mov
add
mov
and
enter
and
push
push
ds
ds
dec
dec
inc
sbb
jns
ret
aas
test
lods
xchg
inc
xor
sub
in
aas
mov
mov
icebp
add
inc
jnp
add
mov
and
idivb
mov
cs
inc
rorl
push
fstl
adc
inc
aad
lret
setne
or
add
add
adc
xor
lret
pop
shrb
xor
push
jmp
xadd
mov
fyl2xp1
in
loopne
cwtl
cli
ret
xchg
or
add
inc
repz
out
add
int3
mov
out
dec
rclb
xchg
lcall
sub
mov
ret
int
sahf
mov
xor
stos
xor
dec
mov
jbe
xchg
ja
ret
jge
ret
inc
lcall
dec
ljmp
adc
mov
and
ljmp
cmpsb
cmp
lcall
mov
jb
sub
cli
test
sbb
lret
mov
sbb
cmp
fsubs
imul
pop
je
icebp
jmp
mov
dec
or
jp
xor
cmp
lods
inc
repnz
mov
sbb
lea
add
xor
clc
add
or
sti
mov
adc
std
jo
pop
dec
fwait
mov
lds
dec
loop
sbb
inc
jb
jne
push
xchg
jb
nop
mov
shr
repnz
and
dec
popa
mov
mov
leave
ret
jo
lret
xlat
adc
push
pop
sub
push
jle
in
dec
imul
lods
fscale
push
sti
pop
or
out
jno
dec
arpl
imul
loopne
xor
mov
arpl
mul
dec
jmp
xchg
jl
jns
cs
or
fldenv
xchg
leave
popa
aam
scas
or
je
testl
sub
test
faddl
lods
cmpb
xor
iret
lock
pop
jb
pop
mov
mov
pop
ss
iret
daa
jmp
push
adc
das
addr16
fnsave
jp
pusha
movmskps
jle
push
cwtl
in
ret
mov
xor
stc
pop
sub
fdivrp
data16
add
shll
aas
xchg
or
cmpsl
stos
stos
xor
dec
dec
mov
jmp
ret
jmp
repz
imul
dec
lock
hlt
sarb
push
std
inc
mov
sbb
dec
inc
mov
inc
ljmp
insb
pop
inc
in
jecxz
mov
jecxz
push
xchg
pop
mov
cmp
xor
in
movsb
push
outsb
add
imul
insl
push
sbb
sbb
adc
rorl
jmp
aad
dec
push
mov
es
add
add
sbb
bound
divl
mul
mov
out
jg
loope
jne
cmp
dec
je
lea
movsb
pop
mov
sub
cmc
push
int3
push
fstpl
pusha
inc
fs
cmp
dec
adcl
popf
jmp
add
sbb
jge
cmp
aaa
popf
mov
leave
loopne
or
jl
js
ret
icebp
adc
cvtps2pi
jbe
mov
icebp
int3
icebp
daa
sbb
fists
push
outsb
jo
int
push
in
jmp
add
push
pop
xchg
clc
inc
dec
add
dec
out
sub
pop
fdivrs
cmp
into
xchg
pop
push
cmp
inc
loope
and
push
mov
mov
mov
in
sbb
pop
aaa
pop
mov
sbb
nop
cs
lret
ds
inc
mov
mov
push
ja
test
push
js
sahf
and
cmp
mov
mov
subb
fdivl
sbb
xchg
jnp
xor
mov
jbe
dec
jb
and
popa
inc
jecxz
or
and
nop
sbb
add
add
push
rclb
dec
adc
inc
cmp
out
ficoms
out
xorb
sti
adc
scas
xorl
outsb
and
jl
cs
add
sub
or
push
mov
or
movl
push
popf
sbb
pop
pop
rcll
sbb
out
out
out
in
js
ljmp
and
cs
mov
lahf
xchg
xor
mov
add
rcrl
adc
arpl
shr
xchg
xor
pop
and
dec
cmp
push
sbb
mov
push
dec
cmpsb
xor
xchg
pushf
int3
rorl
bound
movsb
push
iret
les
sub
adc
aam
mov
mov
add
cmpsb
dec
dec
jbe
and
inc
movsb
pop
int
fwait
mov
adc
or
lods
sub
mov
outsl
push
stos
cld
xchg
inc
sub
xchg
cmovnp
daa
or
loope
jo
mov
incb
out
jecxz
je
repz
pushf
mov
xor
fstps
test
mov
inc
ja,pn
cwtl
imul
roll
or
lods
add
fmull
imul
push
movsl
hlt
inc
jle
test
data16
and
and
test
and
sub
jne
test
call
sahf
mov
sti
xchg
mov
push
jg
hlt
fdivl
rclb
lods
cmp
das
inc
out
loopne
aaa
mov
jne
cmpsl
jo
test
xchg
int3
xchg
fisubrs
icebp
popa
or
mov
out
pop
mov
pop
test
movsl
jbe
jno
mov
adc
pop
mov
sub
flds
pop
pushf
xchg
lods
das
lods
push
scas
cld
lods
sub
shlb
mov
xchg
fucomi
aad
mov
xor
ret
jmp
aas
jmp
div
loope
xchg
or
cmp
pop
sbb
repnz
fldl
inc
outsb
gs
jo
mov
into
test
xchg
xchg
imul
loop
mov
and
mov
mov
ret
adc
push
or
mov
mov
mov
fdivrl
push
inc
inc
pop
jns
xchg
inc
lret
mov
xor
ret
es
cmovge
loop
js
jno
and
lds
movsb
or
gs
mov
or
imul
xchg
outsb
fidivrs
es
shlb
push
sub
adc
rorb
je
xorl
icebp
pushf
lret
arpl
push
push
add
mov
jl
mov
scas
xchg
bound
into
mov
test
scas
dec
fs
out
loope
xchg
push
cs
sub
mulb
das
flds
loope
bound
mov
mov
aas
dec
push
and
and
or
sbbl
mov
push
adc
inc
ret
sub
loopne
fsubrl
fistpl
mov
icebp
iret
arpl
mov
cwtl
or
in
cmp
xor
pop
mov
xchg
dec
add
js
cmpsl
pop
sbb
adc
push
mov
or
jns
movsb
inc
pop
popl
sbb
dec
pop
popf
int3
cmp
out
jmp
mov
add
push
cmp
fisubs
add
stos
pop
jns
enter
ds
sbb
add
lods
in
pop
aaa
aaa
pop
sbb
aas
cmp
add
popf
mov
repnz
jbe
sbb
cmp
cmpsb
sbb
push
gs
shlb
sti
fsubp
outsl
loopne
pop
pushf
cmp
bound
xchg
dec
cmc
pop
add
pop
lea
cmp
leave
pop
add
pop
subb
cli
adc
push
rcr
scas
aam
int
pushf
enter
push
int
jp
push
aam
loope
pop
lahf
fcomi
mov
adc
pop
or
andb
call
adc
pop
sbb
in
fsubp
lcall
jno
push
adc
and
loopne
insb
sub
pop
push
jne
push
push
movsb
test
mov
lcall
add
in
gs
cs
sahf
sbb
lret
into
fwait
add
sub
js
adc
adc
push
jle
lods
notb
xlat
xchg
addr16
cli
out
mov
jmp
lahf
mov
fcmovbe
jno
dec
add
dec
fdivs
popf
sub
or
shlb
fisubrl
inc
mov
clc
int3
mov
insl
ljmp
push
ret
jae
pop
pop
xor
ret
pusha
mov
stc
jle
sti
xchg
and
pop
xchg
rclb
scas
movups
mov
adc
push
xchg
test
loopne
pop
mov
daa
jb
ffreep
mov
jb
mov
call
les
cltd
lods
stc
xchg
push
pop
xlat
inc
es
in
stc
stos
jb
cmp
jp
mov
sarl
sub
sbb
sub
loopne
lret
pop
mov
mov
fmuls
mov
inc
sub
daa
mov
je
xlat
add
es
jge
out
cmpsb
sahf
jl
inc
mov
movsb
add
pop
out
sub
dec
aaa
popa
mov
xchg
pushf
lea
fwait
adcb
rol
inc
test
daa
fcomps
xchg
inc
jle
lock
iret
popf
add
xchg
lock
cmp
and
jp
imul
loopne
cmpsb
pop
mov
outsl
inc
dec
mov
shl
shlb
xor
add
hlt
sbb
fcomps
in
test
inc
lods
and
inc
iret
insb
call
insl
mov
sbb
sbb
dec
fidivs
mov
fsub
inc
sbb
add
sti
and
roll
add
xchg
mov
pop
stos
dec
or
pop
out
lret
jmp
dec
in
movsb
ret
push
lds
outsb
scas
mov
jmp
cli
shlb
nop
pushl
jb
lock
mov
cmp
inc
shl
mov
pusha
clc
fcompl
rorb
fldt
jl
bound
mov
sbb
xchg
ret
jno
imulb
inc
mov
mov
sbb
lret
mov
or
fnstenv
push
push
addb
lret
pop
psubq
add
nop
push
and
xchg
adc
xor
mov
sub
fmuls
adc
fadd
outsl
fidivrl
push
scas
sar
roll
gs
pop
adc
arpl
inc
jnp
filds
jb
mov
dec
loope
jmp
gs
xchg
js
fidivl
jg
sub
jl
add
lret
add
adc
inc
jge
mov
and
insb
sub
dec
gs
jle
inc
inc
rcrl
sahf
in
push
ljmp
xchg
cltd
dec
cld
negb
std
mov
shlb
jb
rcr
adc
sub
jg
or
xor
pop
sub
push
sub
push
jae
xlat
cmpsl
aas
push
push
and
jbe
push
xchg
shlb
test
das
or
xor
je
fcmove
push
pop
mov
mov
orl
xchg
pop
imul
in
nop
xor
xchg
jle
mov
inc
movsl
xor
push
mov
xlat
cmp
jns
test
lea
int
lea
out
push
jns
repz
jns
sbb
pop
jne
cmc
scas
cmpb
repnz
or
int3
movb
mov
loope
push
rcll
add
ret
icebp
fisubrl
stos
enter
je
push
out
addr16
subl
lea
pop
mov
sub
jge
sub
js
xlat
movsl
lock
hlt
push
cmp
mov
outsb
nop
cwtl
xchg
jno
sbb
scas
clc
fsubrl
xor
out
pop
jmp
and
iret
cmp
aas
mov
pop
pop
pop
hlt
adc
stos
lods
int3
hlt
ja
in
scas
sub
ljmp
shlb
xor
adc
dec
imul
mov
in
sbb
inc
jno
fisttpll
cmp
push
push
lods
aaa
xor
jl
inc
and
sbb
int3
dec
je
jcxz
mov
scas
rolb
pop
or
std
fnstenv
jl
push
stos
imul
mov
jmp
bswap
dec
or
add
es
xchg
xor
sbb
scas
and
or
or
shrb
adc
pop
dec
das
mov
out
dec
mov
dec
test
dec
or
pop
test
inc
sbb
std
adc
leave
or
mov
adcb
or
inc
in
fs
pushf
sbb
inc
xchg
in
mov
sub
aaa
jmp
sbb
fidivl
fnstsw
imul
adc
outsl
lret
dec
fdivr
fdivs
lcall
test
mov
add
or
int3
rorb
push
std
repnz
cmp
xchg
xorb
dec
inc
mov
jb
fisubl
xchg
jb
jecxz
pop
data16
sbb
push
push
jae
movsb
fs
adc
lods
sarl
mov
pop
lods
mov
lods
loop
sub
test
mov
aas
ficoms
cltd
int
adc
adc
ret
mov
aad
cmc
aad
sub
pop
xchg
xchg
mov
test
sub
xchg
sub
scas
dec
das
pop
aaa
je
shrl
js
mov
xchg
into
xchg
lahf
jmp
insl
mov
cs
leave
push
or
xchg
pop
mov
shlb
cli
jns
test
jno
gs
mov
mov
bound
pushf
aas
testb
sbbl
flds
test
nop
mov
mov
and
out
cmp
aam
cld
pop
testb
pop
pop
dec
mov
ret
push
stos
sbb
scas
lock
lret
xor
dec
arpl
out
push
shll
cmp
cmp
das
lret
in
addb
inc
movb
popa
test
inc
shll
jmp
mov
mov
adc
add
rorb
adc
shl
repnz
jle
push
xchg
enter
ret
stos
call
int
push
xor
test
xor
jge
mov
mov
inc
inc
jo
neg
inc
and
dec
add
mov
inc
mov
pop
mov
pop
push
lea
sub
sbb
loope
popf
xor
cmpsl
sbb
jb
adc
mov
lret
jecxz
and
mov
bnd
enter
repz
inc
or
jnp
imul
push
inc
jbe
shl
enter
data16
fldenv
jg
movsl
lods
lahf
sbb
adc
ficoms
inc
sbb
sarb
or
insb
fdivrl
cmp
outsl
mov
scas
or
mov
les
ds
push
jns
mov
xchg
sar
xor
push
lods
bswap
add
xchg
mov
dec
lret
mov
xor
inc
or
repnz
mov
enter
scas
stos
sbb
into
mov
dec
hlt
dec
dec
dec
scas
das
ss
mov
adc
xchg
inc
out
mov
push
stos
fdivrl
fs
xor
sahf
inc
mov
subl
std
aas
aam
and
jnp
lret
sbb
dec
lcall
scas
jg
pop
in
mov
or
push
scas
out
addl
or
sahf
callw
mulb
leave
mov
cmp
fcmove
scas
inc
push
ja
test
xchg
mov
ja
popf
or
xor
lock
sti
adc
jmp
pop
scas
pop
cmp
cs
xor
repnz
leave
in
icebp
or
ret
movsl
mov
adc
pop
iret
inc
js
lret
jmp
xor
adc
cmpsl
mov
push
pop
xlat
negl
xor
lods
js
xchg
fnstcw
and
dec
mov
lahf
pop
adc
sarl
mov
mov
mov
sahf
mov
mov
dec
xchg
mov
stos
pop
sub
cld
mov
inc
cmp
jno
lret
xchg
mov
mov
inc
inc
mulps
in
imul
jno
aad
and
mov
lahf
out
mov
scas
mov
repnz
jns
popf
jno
jmp
daa
cmp
mov
test
or
mov
lea
mov
mov
sahf
lock
outsb
jbe
or
repnz
stos
fisttpll
bswap
pop
add
xorb
rcrl
stos
dec
arpl
cli
sub
mov
stos
arpl
dec
add
inc
and
ret
sbb
add
cmc
xor
rcrl
fistpll
push
in
mov
push
xchg
cs
fstps
mov
mov
dec
jb
xor
leave
movsl
lods
dec
movsl
out
mov
xchg
out
ja
add
pop
add
flds
sbb
aas
cmp
or
mov
in
mov
inc
addr16
pop
dec
aas
sbbb
xor
mov
scas
decb
bound
and
push
sahf
cmpsl
and
dec
pop
mov
mov
xlat
adc
ret
jb
fwait
pop
aam
jmp
xor
pop
jb
imul
lcall
jno
idivb
pop
adc
ss
cwtl
mov
loope
stos
or
rcll
mov
dec
cmpsb
fldcw
sbb
lods
dec
addl
dec
repnz
aad
fstpt
sub
sub
jb
and
mov
mov
xor
out
sub
pop
add
cld
jle
sti
sbb
ljmp
jne
lcall
ss
shl
cwtl
pop
sti
xchg
lock
mov
loop
sti
xchg
bndstx
enter
popf
mov
popa
leave
dec
clc
cmp
xchg
pop
out
xor
jns
xchg
out
pop
jecxz
fbstp
sbb
jl
sub
mov
push
push
hlt
daa
add
add
mov
xchg
and
jno
lods
popa
ds
out
aam
sbb
pop
sbb
mov
jge
bound
ds
mov
sub
aaa
mov
cmc
lahf
xchg
cwtl
push
pop
cmp
push
or
mov
sbb
mov
jmp
repz
aad
ds
andl
in
sarl
xchg
xlat
push
shl
push
jae
data16
je
xchg
pusha
xor
loope
sub
cli
js
mov
sub
fsubrl
lds
xchg
push
lods
xchg
xlat
mov
dec
out
imul
mov
push
fdivl
add
jmp
insb
mov
js
mov
pop
and
aam
andl
sub
push
test
mov
pop
aaa
mov
push
shrb
insb
faddl
sub
aad
mov
shlb
mov
and
inc
lea
test
inc
xchg
mov
or
pop
std
mov
int3
cmc
xor
notl
sub
cmp
mov
pusha
hlt
inc
out
or
dec
lret
add
pop
in
dec
and
in
lods
iret
and
shlb
mov
mov
xchg
and
insb
adc
aaa
aam
sbb
push
pop
or
jae
dec
inc
pusha
and
cli
lods
mov
pop
xor
fistpl
aam
pop
jl
mov
push
mov
in
sti
xor
nop
scas
dec
pop
out
mov
fldcw
jge
std
lret
dec
popa
lea
clc
rcr
jmp
inc
les
imul
js
sti
jnp
and
mov
bndstx
xchg
cmp
outsl
fdivl
pop
inc
sbb
cmp
push
in
push
pusha
inc
lcall
lea
push
jle
sub
decb
push
sbb
sbb
xor
cmp
clc
daa
jmp
sub
jecxz
jno
loope
sub
pop
jb
imul
mov
pop
lret
lcall
aam
jg
push
sti
inc
cld
leave
inc
push
pop
sub
xchg
fcomip
sub
cltd
cmp
jne
cmpsl
out
lahf
sbb
insb
cmpsb
xor
jecxz
scas
rcl
lcall
ffree
movb
lods
outsl
or
out
xor
or
sbb
pop
cli
xchg
ret
ficomps
sbb
xor
cmc
jo
ljmp
sub
or
outsl
push
scas
cli
in
adc
pop
rcll
mov
adcb
or
subl
stos
adc
jnp
nop
xchg
add
aaa
rcl
mov
sahf
cmp
inc
xor
xor
add
or
or
iret
mov
cwtl
rclb
sbb
out
pop
test
pop
mov
push
adc
scas
out
shrb
cmp
gs
mov
inc
test
movl
add
pop
ficompl
lret
imul
mov
in
cmpsl
mov
push
dec
mov
faddl
mov
xchg
jle
cmp
imulb
ja,pt
scas
repz
aas
mov
adc
push
int
lea
fdivrl
faddl
outsl
outsl
and
xor
outsl
jnp
aad
shll
movsb
out
divl
aad
sbb
dec
movntq
out
daa
jle
inc
icebp
pop
daa
ljmp
jmp
sub
imul
pushf
push
add
push
mov
pop
pop
shlb
and
iret
mov
fisubrl
pusha
jnp
dec
push
add
xor
pop
xchg
or
cs
or
fcoml
push
enter
clc
ret
inc
mov
inc
in
sub
pop
cmp
test
outsl
cmp
cmpsl
push
jb
add
or
sub
push
scas
cli
xchg
lcall
mov
test
mov
xchg
into
lods
jl
fstpt
or
xchg
jns
shrl
aad
and
test
ret
jae
gs
cmp
int3
popa
int3
out
enter
sbb
add
lret
iret
xchg
adc
stos
out
aad
push
int
loopne
sbb
or
out
sub
xchg
jmp
sub
lcall
jb
push
lea
outsl
mov
sbb
dec
aas
icebp
adc
xor
in
cltd
rorb
xchg
fcomp
push
mov
in
inc
push
inc
nop
repnz
sub
jae
int
inc
mov
outsb
aas
sub
jp
cli
test
xchg
leave
popa
sbbb
loopne
push
sti
pop
add
or
sbb
jne
mov
into
mov
jl
mov
jmp
les
dec
test
lea
pop
push
mov
or
add
adc
mov
cli
jo
xor
popf
and
cmp
rcr
in
xor
xor
enter
mov
inc
cwtl
popa
out
scas
repnz
pop
cmp
cmp
outsl
mov
testl
xorl
sub
xchg
mov
adc
ljmp
in
lea
ljmp
movsl
push
stos
jne
push
testl
adc
lret
jbe
leave
dec
lods
xor
cmp
pop
out
cltd
mov
pop
jg
je
cs
xchg
repz
cs
sbb
fdivrl
and
ficoms
in
ljmp
pop
sub
jns
xchg
pop
int3
jle
and
mov
or
je
mov
jge
mov
sub
inc
push
sbb
or
and
pop
mov
push
xor
mov
ret
orb
adc
inc
dec
aaa
jl
test
xchg
sub
lahf
movsb
outsb
stos
mov
lock
lods
push
mov
mov
adc
stos
or
jnp
lods
stc
or
adc
mov
sbb
and
popa
add
cmp
ds
adc
outsb
sar
cld
jl
daa
test
testb
inc
fiaddl
popf
xor
js
stos
cmp
cmpsl
pop
mov
out
stos
inc
das
addl
xor
pop
scas
and
aam
xchg
mov
or
mov
pushf
jns
sahf
or
lds
pop
or
mov
iret
pop
lret
add
movsl
insb
pop
mov
push
adc
xchg
jns
xchg
add
scas
pushf
pusha
dec
mov
jmp
pop
pop
cmp
mov
sub
pushf
xchg
pop
aaa
sbb
cltd
sbb
mov
sahf
cmp
xor
sbbl
js
cltd
xor
ss
les
and
jae
lock
jo
cmpsb
mov
adc
stc
fs
pop
xor
adc
ja
lcall
add
sub
or
in
mov
and
lods
add
add
xchg
add
jg
shlb
mov
xchg
je
ljmp
mov
jge
fldt
insb
fisttpll
test
mov
mov
icebp
cld
out
sahf
test
test
inc
push
sub
cs
sub
pop
push
dec
sub
shrb
xor
mov
lcall
pop
lods
jns
xchg
sbb
shll
daa
cmp
jbe
push
dec
pop
mov
movsb
push
repz
push
cwtl
and
push
lods
inc
or
xchg
jp
rcr
cmpsb
imul
outsb
test
and
addb
stc
pop
std
daa
fwait
mov
mov
mov
mov
cs
loop
shlb
jno
or
fs
popa
xchg
sbb
in
jecxz
mov
mov
js
jg
jmp
cmp
inc
add
in
bound
sbb
mov
xchg
pop
xor
xor
out
push
mov
or
and
jmp
pushf
or
cmp
out
add
jae
lcall
inc
call
out
or
out
xor
fnsave
dec
pop
sbbb
inc
cs
xor
je
mov
sbb
cmpsb
outsl
mov
pop
jnp
sub
mov
jne
add
cld
mov
in
push
stos
jb
cmp
out
pop
sub
shl
cmp
push
jecxz
lahf
xorb
leave
popf
pushf
xor
cwtl
cmp
lahf
faddp
cmp
add
inc
sbb
imul
lret
add
sbb
lods
dec
add
jge
cld
das
rorb
cmp
dec
aaa
xor
sub
jecxz
int
pop
je
sub
mov
adc
mov
das
push
out
in
xlat
cmc
mov
and
loop
sbb
mov
andb
dec
int3
aam
jno
call
fisttpl
sub
aam
jmp
out
in
jle
cmp
mov
mov
mov
dec
gs
add
jnp
push
jo
sbb
imul
aam
mov
pop
sub
inc
dec
lods
je
push
aas
push
fwait
in
fisubl
les
int3
test
into
aaa
and
daa
xchg
pusha
scas
movsl
sub
pop
mov
add
popl
pop
pop
mov
lods
fistps
imul
push
cmp
mov
in
cs
mov
mov
leave
pop
dec
int3
test
push
out
inc
stos
jge
push
push
mov
enter
std
scas
sahf
lea
lds
hlt
adc
xor
fidivrs
test
fwait
xor
mov
cmc
xlat
enter
sbb
sbb
arpl
sub
cmp
ficoms
shl
pop
test
loop
andb
pop
rolb
outsl
ss
adc
fildl
cwtl
stos
jae
dec
and
bound
lret
and
or
jecxz
mov
fs
cs
andb
decl
cli
push
call
adc
pop
or
clc
fstpt
ljmp
xor
out
xchg
movb
clc
mov
cli
pop
and
xor
xor
xor
leave
mov
out
and
mov
mov
jb
push
int3
imulb
sbb
mov
sbb
push
sbb
pop
daa
in
fcmovb
jbe
cmp
and
or
mov
icebp
cld
jmp
bound
fisttpl
cmp
mov
push
adc
mov
icebp
pop
frstor
pusha
dec
cmp
out
mov
inc
jbe
mov
sub
mov
xchg
cmp
das
cmpb
test
inc
sub
inc
mov
jne
dec
xchg
fimull
mov
es
inc
mov
dec
aaa
mov
pop
push
xchg
sub
mov
movb
and
mov
ljmp
icebp
andl
stc
jmp
repnz
sub
lea
and
mov
repz
js
mov
daa
and
ss
push
or
stos
inc
test
js
popa
pop
adc
loope
and
or
add
mov
fdivrp
daa
mov
cltd
sub
add
push
movsb
outsl
xchg
clc
incb
inc
push
cs
cld
sti
pop
push
cmp
mov
aas
fidivs
js
push
mov
or
mov
sub
cld
roll
push
xchg
aaa
leave
in
lds
mov
add
loopne
mov
sahf
inc
mov
leave
xor
mov
fdivrl
cld
cmp
loope
mov
xchg
add
jl
popa
test
outsl
inc
cs
hlt
push
and
push
inc
cmp
dec
jp
rcrb
gs
xchg
movsl
mov
outsl
out
xor
xor
lods
jg
adcl
ljmp
pop
sub
lods
xor
insl
push
addr16
push
cli
rcrl
lahf
cmp
pop
mov
icebp
mov
rcr
into
inc
xor
jne
ljmp
in
bound
fs
jl
mov
test
sub
or
hlt
xchg
addr16
xchg
aaa
inc
mov
stc
push
jno
add
mov
pop
mov
aad
and
in
sub
cwtl
jp
lea
pop
fsts
enter
inc
jle
pop
mov
push
sti
add
mov
push
ja
outsb
out
sysenter
outsb
test
sti
mov
push
or
jne
fdivs
mov
fstpl
sbb
orb
pop
leave
jge
fs
stc
test
xor
jp
rcrb
jge
out
push
repz
pop
cmp
pop
mov
pop
sbb
aam
xchg
fiaddl
imulb
and
lret
aaa
xchg
mov
enter
xchg
sbbl
dec
stc
movsl
cmp
push
jp
inc
addr16
pop
dec
xor
cmpl
popa
mov
mov
imull
ljmp
insb
mov
lret
pop
mov
dec
fstps
out
pop
lock
pop
insb
sahf
out
sbb
leave
lcall
push
hlt
test
or
push
add
or
push
iret
vpclmulqdq
and
addr16
mov
stc
jne
xor
pusha
xchg
jne
adc
push
dec
xchg
ss
fidivl
and
andb
imulb
add
movsb
je
and
adc
or
mov
push
lcall
pop
cltd
adc
push
out
stc
fldcw
sub
int
pop
pop
mov
leave
xchg
jns
add
mov
or
jle
jns
sti
xor
fnstsw
movsb
or
and
lcall
fildll
out
and
ja
add
push
cld
mov
push
or
cltd
cmp
jo
pop
or
aaa
loop
push
cld
hlt
jbe
mov
ja,pt
fmul
xor
test
mov
sti
frstor
mov
popf
fstpl
loop
push
andb
or
adc
pop
in
mov
and
movsl
mov
out
mov
sub
loope
adc
and
mov
loopne
adc
loopne
mov
test
loope
aaa
sub
mov
out
clc
jo
test
sbb
xchg
pop
sub
dec
jne
inc
lods
fcmovne
add
jmp
test
pop
pop
cld
nop
aaa
sti
lcall
int3
js
fisubl
sbb
mov
fs
push
bound
cmp
lock
push
cmp
and
adc
dec
mov
push
loopne
notl
imul
aas
fiadds
insl
lods
ds
clc
jecxz
outsl
es
out
inc
aam
fadds
jnp
adc
aas
addr16
pop
add
push
dec
sarb
jle
adc
pushf
dec
add
das
scas
xchg
es
adc
add
and
dec
dec
mov
fdivrs
mov
push
cmp
jae
fists
int3
pop
ja
out
sub
cld
je
mov
pop
mov
adc
test
push
push
repz
sbb
imul
lea
aaa
mov
push
jge
leave
cli
sub
sbb
out
adc
call
fs
cmp
scas
decl
sahf
adc
sti
not
leave
cmp
adc
call
std
xchg
jmp
xchg
cmpsl
jle
movsb
push
lcall
jmp
pop
in
in
scas
dec
test
stos
outsl
sbb
fmuls
mov
out
pop
mov
fldcw
out
mov
lret
hlt
leave
lret
pusha
or
orb
mov
or
pushf
cld
aas
std
mov
int
push
dec
adc
sahf
outsb
lret
out
lret
and
inc
pop
mov
movsb
xor
xor
jge
fcompl
mov
dec
mov
xor
sbb
jae
xchg
popa
call
hlt
fwait
mov
dec
add
jp
les
mov
pop
cmp
rdtsc
xor
frstor
and
out
popf
negl
loope
xchg
push
lds
pop
push
xchg
in
je
into
dec
movsl
jp
push
mov
and
cld
mov
and
shl
arpl
jge,pt
sbb
imul
syscall
stos
or
repnz
nop
shll
inc
mov
das
in
stc
push
out
fcmovnu
es
sbb
and
ja
xor
and
rolb
lret
sub
dec
push
xor
ja
push
inc
inc
jo
mov
pop
mov
mov
adcl
push
in
loope
and
and
aam
outsb
jg
pop
out
cmp
push
cmp
daa
js
and
adc
mov
out
scas
sbb
fimull
loopne
pop
fstps
ficoms
cmp
jb
push
jg
mov
dec
sub
inc
int3
aas
div
ja
std
or
fildl
sub
mov
addr16
fdivrs
mov
and
xchg
ss
aam
cmp
adc
and
mov
cmpl
push
fistpll
out
outsl
fisttps
jl
mov
xor
xchg
and
mov
ds
and
xchg
fldl
jge
test
addr16
inc
aas
cmp
xor
insb
movsl
mov
jo
in
mov
dec
xchg
sbb
mov
arpl
ljmp
mov
cmc
adc
pusha
fisubrs
sbb
scas
cli
or
jno
add
aam
and
into
es
jge
loope
and
push
mov
insb
shll
sbb
push
adc
sahf
xchg
and
rclb
fidivl
lahf
sbb
add
jb
loope
or
addb
sbb
xchg
mov
stos
ja
push
loopne
mov
add
and
fdivs
mov
or
push
sbb
dec
std
scas
gs
enter
outsb
ret
jns
add
ds
jns
shl
call
dec
ss
cmp
xor
test
dec
imul
jmp
cs
add
push
mov
inc
pop
xchg
mov
xchg
jae
shll
insb
pushf
ret
xchg
outsb
gs
lea
pop
mov
pop
daa
leave
pop
pop
iret
mov
push
lret
test
fidivrl
clc
adc
jo
lods
mov
out
sahf
into
push
cltd
mov
das
rolb
imul
inc
dec
data16
pop
mov
movl
shl
or
call
mov
out
ja
sub
loopne
lahf
xchg
cmp
sub
mov
aam
mov
pop
cs
into
in
daa
movsl
scas
xor
jle
pop
dec
int3
mov
mov
scas
lret
mov
idivl
sbb
xchg
cmp
adc
mov
dec
repz
add
scas
mov
enter
xchg
dec
sbb
mov
punpckhdq
fcoms
and
test
loope
jecxz
scas
in
pop
and
or
je
inc
cmp
mov
mov
movsb
jb
movsb
mov
push
mov
or
sub
push
inc
rorl
jl
in
cmp
fisttps
lret
test
pop
cmp
dec
dec
xor
stos
xchg
xor
jmp
pusha
adc
mov
test
jnp
add
push
das
mov
fistl
movsb
pushf
inc
enter
add
sub
out
call
decb
pop
add
and
fwait
and
cmp
push
dec
pop
loope
xchg
inc
push
mov
stos
jecxz
out
les
xor
mov
or
mov
les
jge
mov
cmp
sti
mov
add
cmp
xor
or
pop
mov
dec
gs
mov
out
xorl
sub
push
xor
pop
out
popf
imul
ret
xchg
rcrb
xchg
aaa
push
insb
or
lret
mov
add
js
inc
jecxz,pt
movsb
mov
lea
or
data16
adc
sub
in
mov
dec
in
pushf
adc
stos
pop
mov
jbe
pop
imul
pop
in
mov
ret
aas
out
lea
xchg
and
sub
or
fwait
addr16
fcmovnb
jb
jmp
mov
pop
mov
dec
call
push
aad
pop
inc
repz
adc
mov
or
flds
sub
data16
add
sbb
or
mov
push
dec
pop
in
adc
xchg
push
xor
leave
xchg
cltd
test
hlt
jae
pop
insb
jecxz
jne
cli
push
and
and
loope
pop
or
mov
or
push
addr16
addb
mov
inc
dec
sub
jb
cmp
jle
test
aad
inc
inc
xor
fisubrl
mov
mov
push
pop
lea
lret
ret
lahf
hlt
push
stos
dec
pop
daa
xchg
enter
insb
arpl
and
sub
fnstenv
mov
fstps
pop
cmp
adc
xchg
mov
nop
cltd
xchg
and
sub
enter
xchg
pop
nop
fistpl
adc
push
addr16
shl
mov
pushl
cwtl
icebp
std
inc
add
inc
xor
shr
std
mov
out
lret
sbb
dec
mov
push
dec
aam
jo
pop
adc
mov
outsb
lahf
shl
popa
ret
jl
inc
xor
in
es
movsb
and
mov
xor
cmpsb
sbb
divl
inc
mov
cmpsl
jns
stc
mov
iret
lret
push
test
loopne
push
mov
or
fisubrs
cmp
fcmove
add
sub
out
call
inc
xchg
jge
decb
sub
add
adc
cmp
test
add
jo
in
fs
loop
cmp
test
shrl
dec
mov
sti
add
mov
sti
and
out
push
mov
rcll
in
push
filds
jae
adc
ret
repz
mov
int
movsl
in
cwtl
mov
pop
push
popa
inc
xor
mov
jnp
mov
push
icebp
add
rclb
ret
mov
push
push
inc
movsb
mov
jno
xor
cmp
adc
mov
das
imul
cmpl
pop
shrb
push
xor
in
outsb
sub
inc
in
jns
daa
fsubrl
scas
cwtl
mov
loopne
popf
sti
cmpsb
inc
lcall
mov
push
mov
lret
push
shr
fisubl
and
mov
je
cmpsl
popf
pop
cmpb
outsl
scas
cmp
std
in
mov
and
inc
or
es
jmp
stos
jb
shrl
xorb
jg
daa
shrb
shrb
loope
mov
fsubs
xchg
pop
ljmp
repz
fcmovnb
sub
data16
and
and
add
push
mov
mov
mov
jno
fcmovu
ss
movsb
ret
jle
add
mov
jmp
dec
divl
jnp
mov
mov
vmovd
loopne
idivl
jne
dec
int
mov
dec
sub
shrb
mov
cmp
insl
add
xor
push
divl
cltd
daa
int
loope
jg
push
mov
xor
mov
fwait
clc
mov
push
cmpsb
mov
das
mov
jge
dec
call
cmpsb
mov
xlat
rcrb
add
iret
mov
cmpsl
mov
inc
iret
call
loop
xor
xchg
lret
jbe
lods
xor
push
imul
jp
in
xchg
mov
or
shr
mov
push
lock
and
xor
jae
cmpsb
pusha
in
out
sbb
ja
scas
jo
mov
icebp
mov
call
add
and
cmpsb
xlat
or
jg
xchg
aas
inc
rcr
fldenv
std
addl
lret
arpl
cmpsl
int3
das
lahf
popf
outsb
nop
and
jne
dec
aaa
jle
shl
cwtl
mov
repz
outsl
push
pop
shr
sbb
filds
inc
mov
or
les
fists
mov
dec
push
push
iret
and
push
jmp
shr
subb
add
jb
cmpsl
sub
pop
mov
or
mov
jno
add
hlt
popl
stos
popf
lods
in
jle
stos
mov
sarl
popf
test
mov
cmc
data16
adc
or
aaa
mov
mov
xor
push
into
rcrb
aad
sub
push
mov
xchg
stc
sbb
push
xchg
mov
aam
movsb
or
pop
xchg
punpckhdq
adc
xor
mov
pop
fwait
ss
das
jecxz
lods
xchg
push
or
pop
mov
lods
cmp
dec
xchg
imul
ds
and
xor
pop
add
mov
jns
cmp
pushf
out
mov
cmpl
aaa
push
lret
addl
mov
adc
ret
sub
adc
dec
sbb
jno
cmp
xlat
add
repz
jmp
mov
ss
in
mov
sub
mov
es
dec
push
gs
lahf
sbb
sbb
mov
imul
rcrb
out
dec
adc
dec
jmp
je
fldenv
arpl
mov
cmc
and
xlat
movb
sbb
adc
xchg
test
loope
mov
out
add
aas
mov
inc
shl
fnstsw
inc
outsb
jle
jle
mov
cli
fs
push
mov
cmp
repnz
pop
fiaddl
cmp
cmp
lods
jle
ret
clc
mov
sub
out
adc
inc
test
push
pop
in
xor
inc
push
mov
sub
push
and
mov
mov
shl
dec
push
adc
push
pop
lds
xor
cmp
push
adc
xchg
jp
sbb
push
pop
push
cwtl
sub
xchg
add
cmpsl
add
mov
inc
mov
sbb
jb
int3
insb
adcl
inc
arpl
adc
mov
xchg
loope
xchg
add
xor
adc
xor
cmp
adc
nop
mov
mov
jo
lret
xchg
dec
jo,pn
xchg
mov
mov
and
scas
and
inc
insl
sub
out
lods
popf
inc
xchg
mov
sub
test
pop
jle
and
inc
xchg
push
adc
and
adc
addr16
add
test
push
mov
arpl
xchg
sti
pop
cli
adc
mov
lock
add
imul
testb
imul
lods
xor
mov
in
push
test
pop
leave
pop
mov
fucomp
dec
pop
lret
rcll
or
repz
xchg
movsl
xor
cmp
fsubr
cmp
push
or
rcll
in
push
ret
ljmp
out
jle
or
popf
jne
aam
orb
xchg
mov
loop
shl
repz
push
sub
cmp
push
xor
push
pushf
mov
dec
fcoml
pop
sbb
sbbl
stos
mov
shll
pop
mov
movsl
enter
les
add
add
adc
adc
incb
xor
out
inc
or
rclb
cmp
clc
hlt
pop
pop
xchg
repnz
add
jo
rorb
sbb
pop
iret
int3
cmp
sub
jnp,pn
sub
jl
push
adc
mov
cmp
mov
mov
icebp
stos
cmp
xor
lea
and
ja
sti
xchg
dec
out
push
bswap
imull
sbb
or
push
lahf
xor
insl
ja
push
fcomps
enter
or
leave
jnp
movsb
addl
dec
sub
mov
rcrl
push
orl
pop
jbe
bound
pop
add
or
nop
lret
insl
jle
mov
jecxz
inc
rolb
inc
fisubl
cld
cs
adc
das
les
inc
repz
xor
fwait
fs
push
mov
mov
jno
and
mov
mov
jb
mov
test
std
cmpsl
ss
test
in
and
push
adc
cmc
xorb
mov
add
jno
repz
cmp
xchg
cmc
nop
sbb
sbb
rcrb
les
push
rorb
nop
mov
fs
ss
adcb
inc
neg
movsb
in
or
xchg
xchg
bound
insl
or
cmp
addr16
clc
in
mov
das
clc
popa
scas
notl
imul
aaa
shll
jae
xchg
mov
mov
fsts
xor
cwtl
and
mov
ret
lret
push
nop
mov
push
insb
filds
shlb
pop
negl
mov
icebp
ja
dec
setl
cld
xchg
rcrb
ljmp
in
mov
aad
shll
lods
xchg
repnz
pop
sbb
das
inc
ja
sti
fs
dec
or
orl
sbb
and
or
xchg
push
cltd
or
push
js
aaa
xchg
and
xor
les
adc
fistpl
push
lea
push
mov
out
arpl
clc
and
inc
xchg
or
mov
lret
mov
or
jecxz
adc
cmpsl
xor
fsubr
loop
scas
pop
cltd
cmp
and
xor
lcall
xor
inc
arpl
mov
pop
push
arpl
int
mov
dec
dec
movb
movsb
shlb
xchg
inc
leave
sbb
test
movsl
lahf
hlt
adc
push
push
inc
ficomps
xlat
stos
xchg
mov
cmpsl
ljmp
rep
jne
mov
jmp
xchg
sbb
rcl
test
dec
jnp
test
or
sub
and
lret
cmp
xor
fcoms
stc
test
cwtl
pop
dec
int
inc
mov
dec
inc
aad
inc
out
dec
out
push
jmp
mov
mov
test
dec
cld
push
rclb
test
adc
cmp
movb
push
xchg
cmpsb
xchg
out
sti
jg
jae
test
mov
js
adc
sbb
push
sbb
gs
xchg
scas
xchg
push
xchg
add
negl
loope
jb
cmp
push
ljmp
daa
out
call
sub
out
subps
cld
dec
inc
mov
ja
fstl
fadds
xchg
loopne
or
fsubrl
sarl
or
fldenv
jmp
jno
jnp
hlt
mov
sarl
xor
arpl
outsl
mov
xorl
hlt
push
fs
in
mov
notl
sbb
push
xchg
and
pop
adc
or
incb
inc
lret
or
iret
xor
fsubrl
pop
xor
push
ds
or
sbb
bound
xorl
movsb
std
xlat
cmp
outsb
rcrl
xchg
gs
rol
out
cmp
mov
push
add
xchg
dec
mov
xchg
and
and
mov
jecxz
push
insl
stos
loope
adc
adc
cltd
adc
sub
push
adc
inc
clc
scas
insl
mov
or
popa
test
add
pop
ret
shlb
outsb
cmpsb
mov
shll
imul
mov
jno
push
xor
lds
clc
sbb
dec
iret
sahf
jp
inc
and
mov
adc
add
adc
lcall
pop
aam
mov
aam
push
daa
and
in
adc
cmc
jl
icebp
loope
leave
mull
adc
xchg
insl
xchg
add
cmp
stos
and
inc
jle
repnz
loop
jg
xchg
cld
sti
rorl
xor
sub
in
movsb
pop
mov
rolb
xchg
inc
sbb
fwait
leave
xor
clc
es
jnp
or
mov
ds
loop
movsl
mov
movsl
rorb
cmp
mov
out
jmp
test
inc
mov
mov
aam
or
and
or
ss
test
sbb
adcb
ja
dec
popf
scas
ret
enter
fstpl
cli
pop
loop
ret
loop
and
mov
lods
shr
sub
sub
pop
pushl
mov
adc
outsb
push
mov
pop
inc
xor
sub
push
inc
pop
sar
push
in
and
and
ja
int
loopne
xlat
repz
inc
xor
inc
ret
push
mov
xchg
sub
leave
pop
shll
leave
cmp
inc
repz
fsubrs
les
je
testb
in
add
mov
js
sub
xchg
mov
adc
push
cltd
mov
sbb
xchg
daa
sub
dec
enter
jne
imul
dec
fmull
mov
sahf
mov
ret
mov
add
subb
test
stos
mov
xorb
out
out
loope
pop
fdivrl
sbb
xor
push
nop
nop
xor
mov
sbb
pop
push
test
out
aas
or
or
dec
and
xorb
lock
int
punpckhdq
pop
dec
jbe
insl
or
push
push
xor
push
and
pop
xchg
push
mov
sub
sysenter
cmpsl
adc
int
adc
inc
es
cmpb
pop
add
dec
sbbb
pop
fimull
push
addr16
movsl
loop
inc
sbb
divl
inc
lret
fiadds
dec
andb
inc
mov
sbb
jge
lods
ret
mov
xor
add
adc
lcall
aad
or
adc
fdivrl
lods
pushf
enter
int3
pop
mov
xchg
pushf
xchg
jge
fistl
mov
or
enter
mov
mov
and
push
daa
xchg
test
icebp
mov
pop
xchg
xchg
mov
sbb
cmpsb
jb
test
cmp
xchg
adc
jb
mov
rorl
push
lods
add
sub
test
xchg
push
dec
pop
insl
rolb
clc
andl
xchg
movsb
jns
xchg
push
jno
movsb
out
push
stc
fidivrs
or
loopne
mov
or
scas
imul
jmp
cmp
add
pop
outsl
xor
imul
push
loop
int3
ljmp
mov
jmp
mov
pop
cmp
cmp
aaa
aad
xchg
enter
arpl
mov
dec
xor
or
lcall
add
outsb
lret
fnstsw
push
cmpsl
hlt
pop
stc
movsl
insl
test
or
gs
inc
shll
push
push
cmp
dec
or
ss
ret
cmp
push
popf
lods
xchg
xchg
inc
sbb
jmp
xchg
sub
scas
test
stos
rcl
leave
mov
fwait
mov
or
mov
cmp
or
and
lods
jecxz
ret
enter
shrb
and
mov
insb
adc
mov
and
inc
jmp
cwtl
mov
push
adc
repnz
add
inc
mov
jg
push
or
inc
fbstp
jle
mull
std
mov
shll
lods
xchg
in
and
stos
lods
dec
push
lock
jae
fldl
and
mov
ljmp
pop
add
jno
mov
inc
lea
cmpsb
and
arpl
test
sub
add
push
mov
rorb
cltd
cltd
hlt
shlb
test
jns
adc
mov
jne
mov
or
xchg
daa
pop
dec
inc
xor
sub
mov
mov
push
pop
sbb
xchg
sahf
dec
dec
sub
ds
sarl
aaa
pop
pop
inc
sti
ficoml
ficompl
jnp
sub
mov
cmpsl
pop
mov
cmp
lock
notb
hlt
and
sbbb
stc
mov
adc
dec
dec
xor
inc
stos
es
leave
sahf
mov
in
nop
jmp
addr16
stos
cmpb
and
rorb
test
jns
jge
ret
pop
pop
pop
pusha
or
test
sbb
fnsave
daa
dec
ret
add
or
or
rclb
cmp
aam
insl
aaa
mov
push
sbb
lret
mov
lock
xor
call
jge
inc
pop
xor
popf
fldt
xchg
loope
sub
and
mov
xor
andb
mov
bound
dec
push
push
mov
mov
or
lock
outsl
cmpsb
cltd
cmp
test
enter
fnop
adc
xchg
cmpb
fstpt
pop
pop
imul
cmpl
jecxz
pop
xor
sub
scas
bound
jb
jg
ss
push
jns
xchg
in
dec
shll
sub
lcall
imul
arpl
dec
xchg
mov
mov
int3
insb
popa
add
scas
dec
test
pop
shrl
fildll
setbe
cs
mov
xchg
fimuls
repnz
mov
in
fimuls
or
push
pop
and
iret
scas
pop
adc
mov
xlat
test
insb
pushf
mov
dec
jae
rol
jmp
into
rcl
jecxz
stos
add
sub
cmpsl
cmpb
mov
xchg
sbbl
mov
or
addr16
inc
shrb
adc
sbb
mov
sbb
scas
shl
dec
mov
dec
aas
mov
push
out
xor
popa
xor
orl
das
xchg
mov
jmp
sub
insb
sbb
mov
or
pusha
mov
and
adc
scas
push
sbb
fcmovne
addr16
icebp
test
inc
enter
mov
adc
push
repz
xchg
xchg
cmp
movzbl
lds
rcll
pusha
and
mov
pop
add
jmp
xchg
dec
daa
outsl
push
sub
jne
pushf
fisttps
ficoml
fisubs
and
stc
cmp
movsb
cmc
and
pop
ljmp
mov
stos
xchg
sub
sub
mov
fdiv
and
sub
xchg
sahf
aad
cmp
imulb
aam
pop
cmp
dec
ror
adc
test
lock
sub
mov
pop
and
pop
xor
nop
sti
pusha
sbb
lret
lret
mov
out
adc
sub
sti
jp
inc
pop
mov
jo
loope
das
inc
lock
push
orl
loopne
pop
gs
mov
jmp
adc
pushf
adc
mov
jno
ja
jae
mov
jge
push
add
orb
in
xor
or
bound
lahf
jne
inc
mov
dec
mov
int
or
xor
testl
movsl
in
sub
and
call
stc
inc
jle
jg
insb
adc
and
mov
push
in
jnp
int
jo
mov
js
and
in
fstl
add
jae
mov
dec
repnz
push
das
pop
fwait
inc
ds
test
adc
call
out
push
addb
inc
pop
leave
inc
xor
test
lea
mov
arpl
dec
es
cwtl
mov
out
ja
lea
idiv
pop
lds
insb
cmp
xor
or
insl
sub
adc
mov
dec
mov
pop
dec
mov
imul
xor
xor
call
lcall
jmp
push
insb
sub
push
aam
and
ficoms
sub
fsts
mov
and
xchg
jmp
jmp
xchg
into
scas
out
push
aam
cmp
sub
jno
sbb
ficoms
popf
jl
fimuls
xor
lea
in
nop
jmp
daa
xchg
addr16
test
xor
mov
jbe
gs
cmp
or
sbbb
sub
shlb
test
lret
xlat
dec
and
pop
mov
addr16
sbb
mov
repz
inc
mov
rcrl
loope
xor
insl
and
push
int
cmpsl
add
pop
sahf
xchg
lock
ljmp
pusha
fidivrs
adc
nop
sbb
mov
xor
sbb
and
mov
push
sub
jge
sub
adc
roll
jmp
dec
inc
iret
pmulhw
icebp
cvtps2pd
dec
ss
loopne
addr16
addl
jg
xor
sub
sub
cmpsl
xchg
jl
dec
adc
std
stos
aad
lods
sub
mov
incb
jae
mov
es
xchg
data16
xchg
jnp
push
and
cld
push
mov
cld
out
xchg
cwtl
add
jnp
cld
dec
push
arpl
xchg
lods
fdiv
test
mov
ret
or
das
pop
popf
inc
ljmp
or
bound
adc
pop
push
repnz
fistpll
push
dec
negb
xchg
inc
pop
mov
stc
push
pop
xchg
mov
mov
shlb
mov
sbb
lds
jnp
and
jb
fistps
jg
js
mov
and
icebp
pop
fidivrs
gs
jns
into
test
cmp
repz
or
xor
jno
mov
aaa
ja
jmp
out
ja
bound
xchg
jl
sbb
repnz
dec
adc
and
xchg
cltd
into
movsb
adc
arpl
ljmp
or
xor
mov
dec
divl
cmc
inc
cmc
jb
sbb
and
popf
testb
adc
mov
fiadds
insb
faddl
push
inc
cmovge
push
sub
enter
sti
lods
mov
mov
icebp
push
push
pop
aas
mov
daa
stc
jnp
sub
negl
adc
lock
jmp
sbb
or
ret
popf
dec
rcl
movq
push
repnz
mov
sub
aam
arpl
icebp
mov
pop
cmpsl
loopne
mov
rcrb
sub
xor
icebp
sub
imul
addb
das
add
jp
add
cmp
pop
pop
test
and
sti
and
pop
pop
mov
loop
shl
jae
pop
in
je
ret
cmp
insb
or
hlt
mov
daa
jg
in
push
and
push
push
sub
loope
dec
outsl
xor
cmp
movsl
fwait
add
sub
fsts
pushf
pop
xchg
hlt
add
xchg
xchg
das
add
in
loope
jns
push
mov
push
fcompl
xor
dec
rclb
jle
fwait
cmp
push
sti
mov
sub
push
arpl
test
sbb
lahf
lods
cmp
dec
cmc
inc
or
sub
jae
cmpsb
fldcw
mov
shrb
dec
sbb
or
push
pop
movsb
and
frstor
sub
inc
data16
lret
cmp
or
mov
out
cs
daa
fnstsw
sbb
and
adc
shrl
cmpsb
gs
xchg
fs
lahf
or
lcall
pop
insb
and
enter
mov
cli
jle
es
outsb
popa
and
inc
push
jp
stos
jmp
enter
lods
je
mov
les
mov
or
xchg
cmp
out
fabs
fcmovbe
fildll
sub
js
or
pop
jmp
and
stos
inc
call
test
jg
sub
push
iret
subb
and
inc
rorl
and
pop
push
mov
out
jnp
out
inc
jg
cli
test
xchg
in
addr16
push
cs
add
rorb
jns
push
sbb
or
aam
xor
xor
xor
pop
fwait
daa
ret
icebp
pop
mov
mov
xor
xchg
sub
fcoml
popf
cwtl
pop
rolb
fisubl
jo
adc
inc
add
xchg
iret
stos
push
and
xchg
fidivs
sub
shl
inc
roll
lret
movsb
inc
sub
sub
push
mov
insl
ret
decb
aad
loope
jnp
out
jns
inc
inc
in
or
jg
les
dec
xchg
out
aaa
in
jne
xchg
pop
xchg
push
cld
sub
cmp
outsl
jecxz
cs
aaa
call
push
pop
sub
mov
test
shll
push
jle
xchg
xor
dec
xchg
outsl
xor
es
push
mov
sub
aam
std
and
jge
cmpsb
addr16
icebp
cmp
shr
pop
mov
inc
movsl
mov
scas
out
jmp
jg
cmp
mov
leave
push
cmp
cwtl
nop
mov
repz
inc
ljmp
inc
or
loop
inc
fsubs
ss
adc
xchg
movsl
cmp
insl
test
mov
pushf
push
jne
xlat
push
mov
or
inc
aam
adc
fcmovbe
sti
add
das
sbb
mov
mov
jg
clc
lfs
pop
je
into
dec
mov
mov
incb
dec
jno
test
lods
je
or
out
add
or
stos
pop
xor
stc
push
adc
out
push
cmp
push
out
adc
xorb
fsubrs
pusha
inc
jb
pop
adc
pop
or
adc
push
sub
in
fadd
fucompp
sbb
jbe
jne
sub
cmpb
xor
jne
xchg
pop
std
sti
cmp
stc
push
push
lds
call
cmp
mov
push
inc
pop
fstpt
sarl
adc
push
lods
movsb
mov
sub
loop,pt
inc
das
roll
mov
mov
cmp
xor
sbb
mov
pop
loopne
jmp
loopne
pop
jno
lret
pop
bound
les
mov
lret
jmp
mov
add
sti
xchg
sub
nop
mov
inc
lret
xchg
insl
jo
adc
je
out
popa
pop
xchg
insb
xor
push
into
clc
pop
fisttpl
mov
pop
xlat
rcrl
fiaddl
dec
jecxz
lea
xor
mov
sti
pop
jle
xchg
fimuls
loope
lcall
ds
ret
sbb
jp
sbb
bound
and
cli
mov
icebp
push
insl
iret
pop
enter
adc
pusha
cltd
mov
pushf
dec
movsb
fdivrl
jnp
dec
dec
jno
enter
iret
popa
push
sti
push
jno
into
hlt
sti
icebp
lods
aad
scas
loope
popf
es
sahf
cmp
mov
ror
push
int
imul
jl
inc
test
mov
cld
jp
enter
movsl
push
sbb
push
test
sbb
or
cmpl
ss
push
mov
pushl
roll
std
pop
pop
in
fyl2xp1
cmc
jae
ss
dec
pop
mov
mov
scas
or
fs
ror
adc
es
in
jo
push
dec
or
roll
adc
xchg
arpl
xchg
cwtl
xchg
jle
iret
mov
fldpi
sub
push
inc
add
lock
mov
lcall
rcl
pop
inc
or
testl
stos
fildll
xlat
outsl
mov
cltd
movntps
in
jmp
or
jp
sbb
sub
scas
rorl
sarl
ret
sarl
cmp
fisubl
xor
cmp
or
and
xchg
sub
add
cmpsb
mov
mov
xor
mov
push
pop
rorb
push
add
or
fildl
mov
hlt
mov
cmpsl
cmc
imul
dec
mov
cmpsb
les
and
mov
pop
movsl
dec
dec
int3
xchg
lea
pop
jecxz
push
rcl
add
adc
call
xor
filds
cmp
lret
inc
ret
dec
ljmp
dec
and
rcrb
xor
push
cmp
xchg
or
cmp
xchg
jg
nop
ljmp
in
pop
icebp
push
jle
call
bound
cmpsl
mov
sbb
push
cmp
jmp
mov
aas
in
imul
fimuls
iret
pop
mov
les
and
adc
popf
out
pop
sbbb
jecxz
xor
xlat
adc
xchg
adcl
inc
rclb
xchg
gs
jg
addr16
xchg
or
xchg
lock
jmp
icebp
imul
clc
jns
addb
cs
cli
sbb
add
sub
cmp
dec
xor
and
xor
mov
divl
add
test
add
sbb
sbb
sbb
ret
sti
jg
js
pop
retw
mov
je
and
cmp
jb
or
roll
sahf
dec
add
loope
mov
pop
add
test
pop
mov
pop
pop
fs
out
adc
ret
mov
add
insl
mov
insb
inc
inc
sbb
out
fldt
mov
leave
pusha
sahf
mov
jo
adc
je
pop
cmp
push
inc
ljmp
and
addr16
cmp
stos
out
and
enter
xor
jb
cld
jecxz
inc
dec
cwtl
xor
in
test
cmp
mov
push
inc
pop
mov
rclb
test
int3
push
jecxz
xchg
xor
xor
adc
xor
and
stos
xor
sub
and
in
lret
xchg
imul
cmpl
lds
es
mov
loopne
pop
mov
and
sbb
sti
in
xlat
pop
les
sbb
cltd
or
mov
mov
dec
rol
cmp
mov
push
pminsw
mov
sbb
adc
addr16
xchg
fstl
shrb
add
in
pop
push
jle
repnz
lcall
push
test
notl
mov
ljmp
xchg
loopne
lret
or
jg
pusha
cmp
cmp
lahf
cmc
fmuls
cmp
sbb
test
pop
decl
fildl
loopne
repnz
mov
shll
xchg
stos
adc
loopne
nop
or
pop
out
or
push
pop
mov
pop
sbb
pop
adc
repnz
push
jbe
sub
popf
mov
jno
add
mov
jno
cmpsl
pop
pushf
out
or
adc
mov
pop
hlt
and
test
imul
mov
in
mov
or
in
or
insb
loop
das
iret
in
rcll
inc
sub
jmp
movsb
add
fsts
mov
jae
pop
xor
mov
icebp
in
popa
dec
or
imul
sarb
xchg
mov
cli
push
stc
adc
xchg
jae
ja
mov
add
mov
aad
push
loope
iret
mov
mov
pop
stos
test
sbb
sbb
fisubs
mov
cmpsb
push
mov
pop
rolb
mov
sahf
mov
push
and
repz
cs
dec
ljmp
sub
outsb
sahf
lods
decl
cmp
fwait
icebp
loope
cld
xchg
cmp
int3
and
xchg
stc
loop
movsb
test
into
sti
and
xor
cmp
fistps
test
ror
out
or
push
dec
push
insl
aaa
pop
and
imul
ljmp
es
jno
cmp
and
cld
out
sub
push
imulb
sbb
ljmp
call
mov
add
mov
pop
inc
outsl
xor
pop
xchg
das
out
mov
test
cmp
loopne
jl
inc
test
popa
jnp
jl
daa
dec
test
push
lods
sub
adc
fidivrl
or
jo
xchg
sbb
lock
les
mov
mov
jge
pusha
cmpl
add
ljmp
mov
nop
pop
cmp
movsb
push
ljmp
xchg
pop
sbb
fsubs
xchg
scas
push
daa
jo
lods
popa
dec
subb
mov
stos
add
pop
push
push
pop
and
pop
or
shll
test
popf
adc
outsb
cwtl
pop
mov
sub
add
mov
stos
lcall
or
jl
mov
int3
mov
jb
xchg
jg
je
addr16
inc
adc
dec
dec
sahf
or
adc
outsb
out
nop
dec
dec
adc
subl
mov
add
mov
add
je
and
or
cmp
xchg
adcl
dec
repz
repz
cmp
cmp
arpl
loopne
pop
cs
vmovntpd
fcompl
sbb
rclb
and
cmp
cmc
or
mov
sbb
mov
lods
in
lds
cmp
test
rolb
xor
stos
hlt
push
mov
mov
iret
sbb
add
mov
iret
inc
ss
scas
ffree
insb
xorb
repz
inc
sbb
testl
push
mov
cmp
jg
dec
xor
out
bound
mov
push
dec
call
sub
out
jns
sbbb
mov
pusha
mov
jp
test
ret
jnp
mov
push
imul
sbb
pop
inc
sbb
popf
mov
add
cwtl
insb
jb,pt
pop
out
add
cmc
les
out
push
lods
pop
cmc
cltd
pop
scas
sbb
sbb
cmp
ds
lcall
push
jg
subb
xor
arpl
mov
scas
sbb
ds
dec
scas
push
je
fldcw
jge
in
or
mov
sub
mov
lods
pop
mov
jb
push
mov
mov
jmp
sub
adc
mov
ja
pop
xchg
iret
jge
adc
pusha
mov
push
psrad
shll
fidivrl
xchg
repnz
mov
outsb
xor
xchg
shrl
jge
mov
sbb
inc
loopne
fiaddl
scas
or
adc
adc
les
test
stos
add
pushl
and
out
pop
xchg
sub
xor
rorl
stc
sbb
inc
sti
orb
dec
loope
mov
mov
xchg
aam
mov
loop
xor
or
xchg
in
daa
imul
iret
decl
adcb
dec
rclb
scas
aas
mov
push
icebp
leave
cmp
adc
xor
imul
mov
jmp
mov
sub
xor
cs
les
loope
mov
cmp
cmp
pushf
mov
movsb
sbbb
pop
loope
cmp
dec
cltd
repnz
mov
dec
fidivl
lcall
sub
call
adc
ds
aad
mov
lods
lea
lods
mov
neg
aas
movsl
popf
nop
mul
cmp
lret
sub
imul
daa
int
nop
jge
test
jge
sbbb
xchg
clc
lds
lret
es
inc
mov
aad
jns
push
in
ret
xlat
push
pop
mov
scas
popf
shl
sub
pushl
scas
pop
mov
fmuls
xor
fnstsw
pop
jno
jo
divb
stc
sbb
mov
imulb
scas
pop
out
lret
mov
inc
adc
and
mov
mov
cmp
outsb
jne
jl
js
movsb
xorl
nop
std
dec
ror
dec
dec
xchg
sbb
pushf
or
daa
push
movsl
pop
xchg
nop
outsb
mov
xchg
fistl
push
addr16
daa
xor
inc
mov
sbb
mov
or
cltd
loope
imul
mov
pop
in
sarl
cmc
arpl
call
shll
pop
ficoml
pop
xor
fs
movsb
ret
fsubp
roll
ret
inc
mov
popf
mov
aam
pop
mov
mov
fsubrl
ljmp
inc
inc
mov
fdiv
js
outsb
sbb
int
or
addb
sbbb
popa
imull
add
movsb
add
cmc
cmc
gs
test
xchg
stos
mov
dec
cwtl
mov
fisttpll
subb
mov
sti
es
cld
fmull
sahf
jb
cmp
test
aam
pop
nop
icebp
jle
xor
shrl
movsl
scas
repz
stos
or
adc
rcrb
or
loopne
xor
push
mov
ds
test
je
jne
test
imul
in
push
pop
or
out
fsubrl
xor
or
sbb
dec
xor
mov
xlat
insl
ljmp
mov
adc
shl
pusha
loope
xor
lock
inc
adc
adc
les
dec
repnz
add
loopne
mov
jge
pop
push
sbb
and
in
push
int
rcrb
pop
loopne
pop
popa
ss
jp
paddsw
mov
dec
ss
sahf
popa
mov
jnp
gs
loopnew
dec
insl
sbb
out
lcall
cmpl
ret
cmpl
loopne
fwait
and
pop
in
jno
xlat
stos
dec
movsl
in
pop
mov
fcoml
cmpsb
mov
add
sbb
sahf
mov
add
xchg
push
repz
sub
fsubs
inc
mov
fidivs
push
lret
insb
mov
loope
push
inc
jecxz
lcall
mov
ret
mov
lret
mov
ret
sahf
and
stc
add
xchg
push
xor
jnp
dec
push
mov
out
adc
data16
into
cmpsl
dec
dec
xchg
lods
notb
cmp
xchg
dec
xor
jmp
xchg
mov
push
shrb
inc
scas
cmpsb
in
xchg
xorl
mov
push
jl
scas
rorl
loope
sbb
sbb
sbb
jb
mov
ja
add
mov
sbb
sub
add
fstpt
ja
ret
aaa
pop
shll
fbld
push
add
in
cmpsb
lock
mov
sbb
cmpb
and
dec
test
hlt
push
pop
stos
jbe
popa
mov
in
sub
xor
iret
leave
ljmp
out
ds
jb
fstp
inc
add
addr16
pop
jne
nopl
cmp
lret
fwait
insl
mov
fdivr
and
jbe
mov
in
cmp
xorb
mov
and
fiaddl
ja
push
pushf
pop
mov
lods
sub
dec
adc
sbb
lods
mov
inc
les
scas
sub
or
test
fsub
sbb
mov
xchg
push
sub
ffree
loop
push
fiadds
and
jecxz
push
dec
inc
inc
scas
mov
jne
and
out
jne
subl
loop
add
add
dec
test
or
jo
fnstsw
lods
bound
cmpl
imul
mov
sub
rol
mov
popf
add
fstp
je
jns
pand
jl
jp
sti
outsb
mov
add
xor
dec
sub
jl
outsb
pop
es
es
inc
fdivs
mov
cld
add
pop
xor
mov
or
imul
xlat
lods
inc
stos
push
sub
data16
mov
fwait
sub
aas
imull
xchg
popf
sbb
cmc
cmp
jne
xor
push
bound
dec
add
outsb
cltd
sbb
mov
pop
pop
xchg
hlt
cld
shrl
dec
sbb
sbb
adc
lret
daa
push
sub
aaa
add
icebp
xchg
add
shll
repnz
les
cmp
in
sbb
clc
dec
push
inc
nop
push
jg
mov
xor
jecxz
mov
test
ja
fs
jae
xor
jno
sub
add
imul
test
negb
xor
arpl
mov
sub
fwait
into
and
jp
inc
out
pop
in
xchg
mov
pop
mov
insl
pop
mov
mov
lds
xor
and
mov
ja
aaa
fcomps
cmp
int3
imul
fimuls
pop
dec
xor
push
int
mov
cwtl
sub
add
inc
inc
ret
dec
cmp
data16
jmp
mov
push
jl
sahf
sbb
inc
dec
mov
inc
lock
pop
mov
addl
push
mov
jo
or
mov
fcoms
in
jb
sbb
jg
adc
or
pop
mov
xorb
dec
ret
mov
cmp
adc
jno
xor
movsl
xchg
mov
fs
stos
and
mov
lods
inc
mov
icebp
pop
ljmp
scas
mov
sbbl
xor
jb
int3
ja
sbb
ja
outsl
push
xor
jbe
push
mov
inc
mov
cld
dec
sahf
movd
push
cs
add
lds
and
scas
lret
dec
into
ja
cli
xlat
mov
dec
xchg
dec
push
sbb
mov
jge
mov
addr16
jecxz
sub
fsts
or
push
test
jg
or
push
int3
pop
mov
jne,pn
pop
xchg
repnz
jbe
clc
scas
or
jecxz
cmp
cmp
lret
cs
pop
push
xchg
ret
inc
int
jl
pop
add
hlt
push
cmpb
pop
xchg
cmp
sbb
int
sub
enter
iret
jne
push
sbbl
inc
mov
push
inc
dec
sub
out
jbe
fistl
rorl
and
out
mov
push
add
aam
mov
add
pop
sbb
xor
xchg
neg
adc
push
ficoml
hlt
lahf
int
dec
cmpsl
add
or
fistl
dec
adc
push
jne
jmp
out
insl
dec
lcall
ljmp
xchg
jge
pop
loop
inc
decb
push
xchg
sub
outsl
push
jo
mov
out
adc
movsb
xchg
adc
add
push
ljmp
imul
dec
daa
addr16
lods
daa
xchg
aaa
dec
lcall
popa
mov
rclb
cltd
or
sahf
mov
lods
in
ds
out
jecxz
xor
sbbl
mov
xor
push
xor
loop
mov
dec
push
dec
div
xor
fisttpl
stos
jne
mov
dec
dec
arpl
push
inc
adc
clc
daa
das
or
icebp
dec
mov
push
mov
xor
hlt
and
mov
xor
outsl
adc
into
test
fsubl
lcall
xor
inc
and
xor
jo
cs
jbe
sarl
mov
inc
bound
xchg
loope
dec
dec
stos
xor
les
pop
xchg
aad
movsl
adc
or
sbb
sbbb
in
repnz
inc
daa
data16
mov
and
mov
mov
sahf
nop
add
pop
pop
add
adc
add
mov
paddb
cmp
popf
sbb
push
adc
and
mov
mov
sbb
movsb
je
inc
mov
mov
sub
divb
push
ss
or
mov
jle
mov
outsb
or
pushf
cmpsb
fsubrs
inc
add
pop
add
outsl
mov
push
popf
iret
cmp
push
js
inc
sahf
repnz
mov
mov
dec
test
out
inc
test
push
or
ret
out
dec
sarl
jle
outsb
cmp
cltd
les
rcrl
cltd
xchg
xor
cmp
mov
ss
sahf
add
jg
cmp
or
push
sbb
adc
jecxz
push
cmpsl
push
ret
dec
lods
xor
mov
cmpsl
scas
movsl
sub
test
gs
add
lret
mov
or
in
mov
adc
out
add
push
nop
xor
pusha
aad
inc
pop
sbb
mov
dec
sti
push
jno
std
repz
mov
gs
xlat
sub
sub
mov
pop
adc
sbb
shl
mov
sbb
inc
pop
sbb
lahf
jmp
push
les
mov
push
clc
inc
lock
stos
inc
add
xchg
adc
xchg
rolb
scas
icebp
push
sub
pop
sub
add
repz
loope
test
insb
ds
cmp
insb
and
test
xor
hlt
hlt
bound
je
xchg
inc
ret
jge
sbb
in
adc
lods
insl
sbb
mov
mov
push
enter
pop
inc
dec
sahf
js
sbb
mov
ret
sub
ret
out
fiaddl
mov
sbb
int3
hlt
cmpsl
std
fnstcw
loop
popf
or
sbb
imull
or
or
mov
dec
popf
cmpsb
sbb
xchg
sbb
out
clc
xor
lret
movsl
inc
xor
popa
test
mov
je
push
mov
mov
addl
xchg
pop
adc
inc
test
scas
fcomps
jle
scas
jecxz
rcll
mov
jbe
call
mov
add
ret
das
jl
push
push
mov
in
xlat
int3
xor
mov
fwait
cmp
adc
push
adc
sbb
push
cmp
in
cld
fwait
push
call
or
mov
sub
in
mov
aam
sbb
xor
imull
loop
lods
and
jo
into
jo
and
je
cbtw
inc
lock
imul
cltd
xor
sbb
cmp
xchg
pop
outsb
lods
roll
fimuls
bnd
ret
ss
dec
xor
cld
mov
lahf
xchg
movsb
int
std
mov
pop
cmpsl
addr16
xor
xchg
fldenv
push
xchg
jb
xchg
mov
ficoms
sub
jmp
sbb
pop
mov
push
aas
cmp
cmp
fcomps
adc
or
mov
mov
mov
xlat
lret
push
add
daa
pop
or
push
and
cmp
repnz
sbb
xor
shll
rdpmc
pop
mov
lock
adc
test
cmp
lods
sub
lahf
sbb
sbb
sub
lock
test
cmp
test
jecxz
cmp
daa
adc
insb
or
lds
in
lds
mov
jp
xchg
or
cltd
pop
lcall
int
pop
dec
pop
xchg
out
sub
cmc
ffree
stos
pop
aam
cld
xlat
pop
push
xchg
in
scas
mov
mov
xchg
and
mov
ja
jl
mov
push
inc
stos
loope
mov
adc
rsm
je,pt
inc
pop
mov
mov
add
mulb
insb
into
push
int
aam
xor
testb
sbb
cmp
lods
dec
je
clc
adc
sbb
jmp
xorl
jns
rcl
mov
dec
xor
pmullw
mov
and
vmwrite
aas
scas
adc
cld
push
les
mov
repz
sbb
xchg
hlt
mov
test
pushf
xchg
mov
inc
fwait
movsb
cmp
dec
pushl
dec
pop
sbb
push
pop
xchg
mov
push
mov
cli
sub
cmp
addr16
div
add
lcall
subl
test
out
aas
rclb
vpackuswb
aam
test
icebp
jne
das
mov
sub
pusha
iret
jbe
pop
sbb
pop
jno
loope
mov
sbb
aaa
into
pop
sub
sti
cmc
push
movsl
insb
jnp
adc
sbb
cld
sub
mov
adc
pop
cwtl
cmp
push
leave
mov
daa
stos
pushf
mov
jne
add
sub
loop
or
je
add
jle,pn
bound
sub
or
cmpl
ljmp
or
jne
sub
pop
loope
out
std
add
arpl
and
jmp
jmp
pop
inc
lret
xor
xor
dec
cmc
adc
jl
mov
cmp
repnz
dec
pushl
lds
movsb
cmpl
scas
cs
pop
or
pop
xor
test
pushl
mov
inc
sub
jns
push
movsl
test
rcrb
mov
cmp
mov
test
in
inc
test
insl
andl
pop
test
ss
pop
jecxz
daa
cmpsl
test
mov
sbb
xor
mov
mov
bound
ds
sub
push
dec
idiv
leave
fcompl
lcall
mov
xchg
jmp
or
popf
ret
cmp
sub
or
or
jnp
leave
pop
jmp
in
popa
fsubs
sbb
mov
mov
into
inc
faddl
stos
pop
xor
data16
push
into
cld
repz
rcll
daa
jnp
add
ljmp
movsb
ret
insl
mov
dec
and
cli
movsl
xchg
pop
cli
shrl
cmp
adc
test
pop
leave
add
sarl
insb
out
pop
add
je
ljmp
ret
pusha
inc
sti
dec
sbb
in
mov
ret
icebp
mov
inc
movsl
mov
or
popa
adc
mov
and
dec
push
sub
mov
mov
add
pusha
sub
pusha
inc
leave
ret
or
inc
inc
sub
mov
adc
repnz
add
adc
fsubrs
stos
stc
push
inc
adc
cmc
in
sbb
inc
pop
sub
pop
imul
xor
lds
jno
lret
pushf
mov
add
pop
xchg
mov
sahf
fstpt
mov
rorl
sbb
mov
mov
xchg
xchg
ljmp
add
lcall
js
scas
pop
xchg
mov
fistps
pop
les
xlat
adc
into
in
lods
and
sbb
iret
int3
call
xorb
fmuls
cli
rcl
cmp
mov
jl
test
lahf
cmp
cltd
lea
imull
std
push
pop
mov
and
jl
mov
lods
mov
adc
test
shrl
in
mov
std
sub
fcmovu
sub
mov
je
ds
push
xchg
lods
push
push
mov
inc
leave
mov
mov
movsb
xor
xchg
scas
jne
push
subb
aaa
loop
bnd
jge
and
jns
test
add
fildll
jmp
imul
pusha
lret
adc
shlb
test
or
jo
dec
sbb
loopne
push
adc
mov
sub
dec
cmpsl
mov
sub
fdivrs
dec
ljmp
pushf
out
push
mov
sbb
push
loope
xlat
push
cltd
pop
pop
jo
popf
rcll
pop
cmpl
push
jmp
mov
sbb
into
sbb
rclb
dec
repnz
and
addb
jno
mov
mov
sti
stos
sub
cmc
orl
aam
sub
xorl
inc
out
into
dec
lea
xlat
mov
dec
imul
or
inc
hlt
cmp
iret
incl
adc
into
loop
int
stos
movsl
mov
popf
mov
cltd
movsb
dec
cmpsl
xchg
pushf
int3
xor
les
scas
orl
lea
mov
or
cmc
insb
leave
ret
popf
pop
out
cmc
pop
enter
push
sti
insl
pop
les
cmp
lods
gs
inc
and
mov
push
adc
aas
sbb
ret
lcall
pop
arpl
cwtl
filds
cmp
and
fucom
push
inc
shl
xor
xchg
dec
jl
jno
into
inc
cmpsb
aaa
fimuls
and
aad
cltd
push
xchg
or
out
mov
xor
lret
add
fs
cmp
sahf
jb
int3
orl
mov
push
push
dec
push
jmp
out
aam
inc
insl
stos
daa
std
leave
dec
push
mov
push
and
ljmp
xor
xor
mov
jmp
int
iret
repnz
ficompl
sbb
jp
mov
dec
pop
ja
shll
repz
into
lahf
jae
stc
cwtl
sub
inc
cmp
stc
insl
jbe
and
mov
xchg
pop
xchg
xor
scas
cmpsl
test
jl
xchg
mov
pop
lea
mov
cwtl
sti
cmc
mov
and
stos
pop
ljmp
ret
fs
or
mov
int3
dec
into
sub
out
imul
mov
push
test
jnp
dec
addr16
int
fcom
cmp
stos
xorb
jl
popa
pushf
rorl
push
sahf
sub
icebp
test
adc
repz
jmp
mov
mov
inc
sub
add
jnp
and
push
adc
cwtl
or
xor
into
or
or
adcb
inc
dec
cmp
jmp
stc
sub
test
pop
add
mov
pusha
loop
ret
jo
jo
ds
and
xlat
or
mov
pop
movd
inc
cltd
movsl
shlb
fidivl
mov
pusha
sbb
push
add
int
insb
inc
lret
pusha
js
dec
xchg
mov
mov
into
xor
je
mov
and
js
fadds
rcrb
adc
mov
enter
movsb
pusha
push
add
fstp
fistl
mov
hlt
cmpl
mov
cld
xlat
xor
lcall
cmp
fisubrs
bound
stos
mov
leave
adc
xchg
mov
and
dec
fndisi(8087
loope
sbb
aas
push
push
inc
imul
cwtl
decb
aam
pop
aas
dec
jb
cmpsl
popa
ss
fstpt
jmp
inc
and
imul
ret
pop
nop
fwait
jmp
mov
int
jl
das
xor
push
roll
lret
stos
xor
int
or
aad
xchg
aaa
shll
lea
mov
xchg
push
and
ja
pop
popf
mov
adc
imul
imul
mov
xchg
jo
enter
cmpsl
pop
xor
out
adc
call
or
xor
push
addr16
jns
jl
data16
add
lret
je
in
or
fcomps
imull
mov
shll
add
mov
mov
sete
adc
cmp
dec
bnd
dec
push
lock
das
pop
popa
lock
orl
adc
aam
jmp
flds
adc
mov
iret
sub
ja
adc
adc
xchg
pushf
inc
or
les
xchg
jnp
sbb
loopne
jecxz
jae
pop
loop
test
decb
repz
xor
jbe
mov
inc
inc
and
push
jg
aam
loop
xchg
orb
fisttpl
sub
aaa
inc
jmp
pop
ss
lods
shlb
jg
add
jnp
mov
fwait
test
mov
test
addr16
pushf
ret
fcmovnb
jno
shrl
and
aam
inc
push
mov
push
rcll
movsl
stos
lea
dec
lret
cmp
repz
stos
pop
push
push
jmp
imul
stos
pop
mov
sbb
mov
cmc
and
rol
and
decb
or
mov
add
aas
xchg
adc
outsb
lcall
loop
cli
push
mulb
test
jl
cmpsl
loopne
add
jmp
jno
fcomi
in
sbb
int
jb
and
xor
jmp
xchg
das
pop
jne
push
or
jl
push
push
push
xorl
sti
push
jp
push
arpl
aas
or
pop
fmull
push
movsb
aas
mov
cmp
add
xchg
aaa
jno
iret
mov
mov
nop
cli
lret
pop
or
lods
jnp
jbe
cmp
imul
lret
arpl
jmp
sub
mov
leave
pop
repnz
jmp
push
je
mov
xor
in
lret
push
rol
fdivl
stos
stos
pop
test
loope
sbb
lods
adc
push
dec
adc
out
pop
rcll
or
mov
dec
outsl
insb
fwait
pop
cld
lcall
cmp
decb
add
imul
sti
xor
inc
in
pop
imul
adc
xchg
inc
xor
daa
sahf
lds
leave
fwait
dec
aaa
xchg
ljmp
adc
mov
jae
data16
mov
sar
sti
sti
adc
sbb
and
pop
xor
stos
mov
cmp
and
bound
loop
cltd
mov
sbb
and
sbbl
fbld
push
test
adc
icebp
popf
sarl
popa
fisttps
outsl
jecxz
shll
mov
jne
leave
dec
cmp
cmp
dec
adcl
mov
test
add
adc
repnz
xchg
jo
xlat
pop
fldcw
inc
fidivrl
imul
inc
mov
into
and
jne
testl
mov
int
mov
dec
cmc
cmpsb
or
shlb
aam
xchg
push
js
jge
sbb
lcall
dec
pop
movsl
fnstcw
jle
movsl
xchg
pop
sub
incl
std
out
icebp
cmpsl
cmp
lock
lods
shll
sbb
ja
pop
pop
in
sahf
insl
pop
xchg
mov
lods
dec
add
stos
enter
cmp
jnp
mov
pop
lods
and
fidivrl
cmp
addl
xor
cmp
jbe
scas
mov
add
pushl
mul
aas
fbld
lahf
mov
or
mov
jg
jle
mov
outsb
jns
std
outsl
movsb
or
lahf
mov
test
fiadds
sbb
pop
fdivl
sbb
cld
std
push
cltd
ljmp
push
push
and
push
lods
mov
loope
incb
add
psubsw
inc
stos
out
sbb
and
test
push
in
mov
adc
sub
mov
andb
xor
jo
shll
jecxz
push
dec
hlt
in
lahf
jae
xor
fimuls
fistpll
inc
mov
mov
adc
push
add
mov
cmp
das
mov
stos
jg
nop
lahf
mov
sub
push
mov
shll
xor
ss
repz
ss
cmp
loopne
jle
test
jns,pn
dec
pop
pop
and
mov
push
icebp
jle
sub
rcll
sub
mov
cmp
jl
test
mov
xor
lods
mov
movsl
inc
lds
cmpsb
push
pop
add
movsl
lret
pop
jecxz
cmpsb
mov
fcmovnb
cmp
mov
dec
jecxz
vdivsd
clc
js
inc
imul
sahf
mov
lods
sbb
add
inc
xor
mov
cmpsb
mov
and
xchg
out
push
push
adc
lea
pusha
xor
data16
or
pop
insl
rcll
push
scas
out
push
bound
fldenv
push
mov
xchg
lret
rcll
in
mov
popf
mov
dec
push
in
loop
test
lcall
xchg
sub
aam
xchg
shlb
int
inc
dec
scas
sub
jns
mov
sub
or
mov
pop
iret
repnz
or
and
pop
aas
jecxz
rolb
les
dec
ret
sarl
xorl
lock
jb
and
lea
in
sti
int
loopne
sub
cmpl
lds
or
loope
das
cwtl
in
cltd
fcompl
out
jno
xor
leave
das
add
sub
out
stc
test
push
in
loopne
sbb
xor
ljmp
sbb
jbe
push
mov
mov
fs
adc
clc
mulb
les
push
xor
inc
push
push
mul
xor
xchg
pop
or
shl
stos
xorl
test
aas
pop
sub
rcrl
push
mov
mov
mov
cmc
outsb
inc
int3
inc
sub
jl
daa
out
pushl
mov
xor
cmc
shrl
push
ljmp
xor
mov
bound
gs
movsb
sbb
lcall
insl
add
xor
mov
scas
movsb
pop
divb
sahf
xchg
and
mov
je
xlat
mov
jmp
rcl
cmp
stos
pop
xchg
sarl
lods
jb
mulb
insl
push
mov
sbb
fwait
sub
lret
inc
sbb
cmp
xchg
mov
dec
pminub
xchg
iret
gs
xchg
mov
or
fidivrs
dec
popf
xor
lods
pop
mov
ficomps
popf
ja
rcrl
cwtl
push
ja
add
mov
cwtl
faddl
mov
notb
lods
aad
cs
arpl
test
jmp
js
adc
pop
shrb
mov
mov
xor
cwtl
inc
or
call
push
aam
sub
or
pop
shlb
outsl
int3
xchg
test
fs
xchg
jmp
pop
cmp
cmpl
sub
test
pop
inc
adc
push
mov
dec
add
fnstsw
pop
xchg
xchg
jae
inc
mov
dec
fcmove
sarb
mov
ffreep
test
cmp
shlb
cmpsb
outsb
fmuls
mov
lds
aaa
push
ja
sbb
das
push
repnz
push
in
inc
xor
nop
and
je
movsl
jecxz
bound
adc
sbb
sub
clc
test
lods
xchg
lahf
xor
scas
xlat
push
cmpsl
pop
lds
je
imul
pop
xor
scas
jge
push
rcll
das
shll
rcr
push
mov
test
jecxz
mov
stos
iret
xchg
outsl
addr16
or
ja
mov
mov
pop
mov
push
mov
fimuls
cmp
ljmp
sbb
sub
inc
push
scas
cmp
fwait
pop
xchg
or
movsb
pop
adcb
mov
call
mov
repz
sub
and
mov
and
add
sbb
sub
dec
outsl
loope
shrl
lds
orl
jge
mov
aas
insl
xchg
adc
add
testb
aam
mov
out
jg
js
int
xchg
add
cmovne
bound
cltd
jmp
mov
jg
loop
dec
test
cmp
push
and
nop
inc
sub
in
xchg
rcrl
push
sbb
pop
daa
xor
add
mov
xor
mov
scas
cli
lods
xchg
and
movsl
add
addb
add
jne
mov
jg
hlt
or
and
push
sub
arpl
test
rol
ficoms
push
cmp
popf
jmp
lahf
xchg
mov
dec
inc
or
push
testb
lret
xchg
int
pop
lods
out
into
or
cmp
adc
push
pop
cmp
pop
test
mov
cmp
jno
mov
cs
test
mov
sahf
mov
rorl
mov
loopne
sbb
mov
adc
pusha
jl
gs
adc
push
mov
and
jns
dec
jae
cwtl
or
rcrb
mov
adc
insb
sbb
inc
dec
hlt
xorb
pop
push
sub
aad
sbb
popa
negb
outsl
rcl
fadd
push
pop
inc
fiaddl
jne
jle
add
lcall
bound
lods
mov
popl
shrb
imul
and
sub
inc
dec
test
sub
cmp
dec
into
mov
insb
bound
addb
push
xchg
cltd
test
xchg
stc
cmp
mov
nop
xor
aas
add
bound
xor
es
ss
subl
cmp
cmovne
hlt
cmp
jge
ret
scas
mov
lahf
add
divps
aas
loop
out
std
jp
in
jb
jmp
movsl
pop
les
jmp
std
xchg
cmpsl
rcrl
dec
ja
fs
lods
insb
sub
pop
or
xchg
mov
inc
in
mov
into
out
loopne
cld
pop
cmp
pop
xor
add
mov
in
sub
xchg
adc
rolb
pusha
xchg
outsb
inc
xchg
leave
push
cmc
xchg
imul
xor
movsb
jno
mov
mov
in
sub
xchg
and
jb
rcrb
sub
cwtl
lahf
mov
and
xchg
nop
xchg
pop
adc
loopne
popf
xchg
into
insl
cmp
jle
mov
mov
xchg
sbb
shlb
arpl
mov
ret
cmp
fcomi
xlat
std
sahf
leave
cmp
mov
push
push
call
mov
fstpt
fnstenv
xchg
popa
mov
cmp
add
out
inc
mov
fisubs
idivb
xor
aam
std
lods
pusha
leave
popf
out
daa
jg
ja
data16
dec
dec
xor
insl
inc
cmp
lock
cmc
leave
add
xchg
aam
sbbl
pop
popf
cmp
stos
mov
insl
jecxz
jno
jg
loop
addr16
mov
icebp
ljmp
sti
xor
das
adc
mov
hlt
dec
sub
mov
xor
aam
dec
data16
sti
cwtl
sub
into
loop
int3
arpl
les
mov
aas
in
push
loope
or
jno
sbb
out
pop
sar
loopne
mov
or
loop
jns
cwtl
push
mov
add
loopne
scas
adc
orb
popf
lods
fistpll
cli
imul
lret
xchg
aam
test
inc
pop
mov
xchg
xchg
mov
sbb
mov
stos
int3
insb
lds
movl
push
addb
pop
pop
mov
inc
and
es
adc
mov
mov
xchg
orps
xchg
sub
mov
int3
xor
cmc
dec
jmp
cltd
out
jmp
hlt
xor
movsb
mov
mov
ret
and
jnp
shl
push
arpl
stos
int
mov
and
adc
pop
add
push
ss
sub
stc
xor
repz
mov
repnz
pop
pop
inc
rclb
push
mov
mov
push
pop
inc
xor
xchg
pop
test
fnstenv
and
imul
dec
push
sti
leave
mov
mov
ljmp
jns
jns
stos
pop
mov
pop
stc
jp
nop
cs
leave
inc
pop
in
xor
out
jp
sbb
and
addr16
je
mov
and
sbb
dec
negl
idivl
inc
mov
dec
les
push
mov
clc
and
aad
cmp
push
neg
xor
rep
mov
lcall
adc
mov
dec
je
std
or
mov
mov
dec
xchg
test
push
mov
mov
jne
adc
cmp
mov
cli
jmp
ret
lret
inc
pop
std
sbb
dec
outsl
xor
rcrl
cmpl
scas
icebp
popa
mov
push
aaa
fs
mov
dec
ret
icebp
clc
mov
fisubl
imulb
pushf
pop
mov
sub
xlat
inc
insl
push
xchg
fs
leave
adc
pushf
shrb
fdivl
push
mov
icebp
repz
les
adc
sti
jmp
rep
imul
dec
ljmp
lahf
xlat
mov
fmulp
rclb
repz
and
aam
cmpsl
add
mov
add
push
lods
out
dec
inc
and
cli
movb
jb
pop
inc
negb
cli
or
sarb
pop
lock
loope
pop
jle
lahf
enter
fisubl
sbb
and
inc
fsubrs
mov
dec
adc
fwait
pop
out
repz
lock
dec
xchg
jns
xor
inc
lea
out
mov
ret
push
push
or
push
push
dec
push
jp
inc
clc
xor
or
movsb
push
pop
lock
or
negl
stos
xor
sbb
jg
push
es
adc
jne
push
cltd
pop
xor
inc
lret
inc
and
add
mov
dec
lahf
insb
push
imul
cmpsl
jl
mov
sub
bound
push
fildll
addl
pop
add
jae
xchg
mov
je
xor
or
in
add
inc
dec
sbb
pop
xor
mov
xchg
fnstsw
xor
neg
test
sub
adc
neg
sbb
push
adc
cltd
inc
jecxz
lcall
loope
mov
in
nop
lret
and
rorl
xor
mov
cmp
lds
or
lret
mov
ret
xor
js
ret
repnz
mov
inc
adc
int3
insl
mov
add
ficoms
call
stos
add
std
fwait
sub
inc
pop
sbb
stos
sub
mov
adcb
out
and
fwait
daa
jle
fimuls
xor
clc
mov
mov
pop
mov
fadds
inc
imul
icebp
cli
sbb
sti
jge
mov
fcmovbe
enter
sub
int3
pop
xor
sub
jno
xchg
pop
xchg
push
insb
xor
outsl
cmp
pop
int
adc
imul
dec
dec
cmp
cs
push
daa
push
in
daa
cltd
rcrb
mov
sbb
xor
inc
cmpsl
shrl
xchg
xor
lea
sbb
popf
jle
ret
out
xor
cmpsb
pop
jae
out
test
xlat
xor
mov
jnp
xchg
push
mov
pop
jg
int3
rcrl
push
and
icebp
mov
aad
aad
cwtl
push
sbb
xchg
adc
cmp
inc
shll
fs
lret
stc
out
shll
dec
stos
cmp
aam
scas
ljmp
mov
cmc
out
adc
mov
ljmp
inc
push
in
add
f2xm1
decb
or
leave
outsb
and
imul
jnp
shlb
mov
pop
jb
or
mov
loope
push
inc
insl
sbb
mov
inc
in
test
push
dec
mov
lcall
sti
je
cmp
or
imul
mov
xchg
cmpsl
in
cmp
out
pop
dec
xlat
add
mov
mov
pop
outsb
mov
int3
mov
cld
ficomps
aam
enter
sub
aaa
mov
sub
jno
out
xor
jbe
in
add
sub
sbb
xchg
sbb
mov
in
adc
jl
jg
cmpb
loope
pop
push
rorb
inc
aas
cmp
leave
arpl
pop
fdivs
add
xchg
stos
iret
cmp
add
jmp
sahf
jne
in
xor
sub
cmp
dec
and
fcmovu
sub
cmc
sbb
pop
leave
mov
jno
push
js
mov
out
mov
pushf
xchg
xchg
stos
lret
cmc
mov
cwtl
and
push
or
dec
outsb
gs
enter
mov
jno
dec
leave
icebp
sub
jmp
inc
and
aad
cmpsb
pop
je
xlat
add
and
mov
jo
cmpsl
xchg
jmp
lcall
dec
pop
xor
cmp
push
cmp
aad
insb
xor
les
and
push
ds
jnp
pushf
ds
push
pop
pop
jmp
xlat
add
leave
rorl
js
negb
sub
ja
lret
pusha
dec
xchg
imul
add
pop
sbb
mov
sbbl
cmpsb
adc
test
cmp
ret
imul
popf
movsl
push
inc
mov
je
das
and
dec
sbb
add
add
push
sub
icebp
stc
test
jo
jp
add
jg
insl
in
jp
inc
test
jmp
cmpsb
lock
dec
dec
cmp
mov
inc
jns
out
or
xchg
rorl
les
jbe
mov
xchg
adc
adc
jmp
dec
xchg
pop
into
mov
add
mov
out
mov
sub
ret
pop
stos
loope
mov
insl
in
scas
arpl
cmp
in
jae
cld
or
rorl
out
add
out
into
sbb
push
aas
jge
test
daa
enter
jmp
push
test
ljmp
movsb
std
jbe
cs
les
in
mov
stos
in
and
and
outsb
pop
cltd
mov
fnstsw
psrld
mov
xor
dec
or
or
loopne
mov
xor
push
gs
pop
lods
idivl
mov
or
inc
ss
cmp
add
jne
lods
adcb
movsb
lock
dec
dec
scas
dec
stos
testb
lea
popf
pusha
add
sbb
sbb
jns
mov
mov
add
sbb
cwtl
xchg
clc
lcall
stos
scas
pop
adc
js
xchg
or
mov
xor
dec
les
mov
inc
or
and
xacquire
scas
jmp
pop
out
mov
jb
cmp
es
adc
sub
jecxz
fisttpl
add
sarb
inc
loopne
jns
push
xlat
adc
push
xor
mov
roll
mov
mov
popa
xor
inc
jns
in
repz
xor
mov
int
ret
lahf
cmp
loopne
xchg
movsb
push
xchg
sbb
mov
add
notb
bnd
push
jne
mov
pop
jbe
dec
push
sbbl
adc
xor
rclb
mov
repz
int
shrb
lret
mov
jge
out
xchg
mov
fisubrl
mov
push
pop
sbb
push
fbstp
in
ss
lods
sahf
mov
cmp
daa
ficoml
cmpsl
mov
adc
mov
aas
sbb
push
pop
fsubs
js
xchg
pop
loope
aad
out
fsubrs
xor
sub
sub
lods
add
aas
sub
rcll
je
xor
xchg
mov
sub
fidivl
mov
cli
dec
push
push
pop
lret
loop
test
call
cmpsl
arpl
jle
inc
shl
mov
movsl
cmp
dec
add
add
adc
jne
or
je
ja
lret
add
pop
xchg
mov
push
call
lea
incl
xor
jl
dec
adcb
test
jge
cmp
or
stos
dec
xor
add
push
jb
aam
mov
xchg
cmpsb
dec
movsb
mov
push
adc
dec
in
mull
mov
fistpll
ficoml
pop
jp
adc
dec
cli
fucomip
bound
dec
aaa
roll
popl
in
clc
das
fdivl
push
fs
adc
lock
sub
xchg
fisttpll
mov
xchg
test
js,pt
mov
push
jp
adc
push
push
mov
outsl
cld
inc
jns
mov
mov
sub
sbb
in
xchg
adc
stc
dec
xor
testb
xchg
outsl
jae
cld
in
daa
push
cmpsb
stos
testb
je
lea
jns
and
int3
mov
pop
inc
mov
dec
or
lahf
jle
stc
in
mov
xor
and
jle
popa
sbb
arpl
jns
adc
fwait
xchg
pop
add
ljmp
adc
push
sahf
and
mov
movsb
dec
inc
mov
aam
repz
dec
xor
sub
sub
hlt
enter
in
cld
mov
and
add
mov
cmp
ss
imul
adc
cltd
mov
stos
jnp
repz
adc
outsb
or
loop
out
jge
xchg
rclb
cmpsl
dec
pop
sti
jmp
sub
orl
stc
test
cmp
dec
xor
out
popl
ficoms
addr16
ja
faddl
int
push
fsubs
xchg
iret
fildl
test
std
push
xchg
in
xor
das
lods
clc
sbb
add
mov
dec
jns
ficompl
fs
push
ret
adc
dec
cmp
in
pop
xor
dec
imul
sub
bound
dec
cmp
mov
inc
mov
push
jg
dec
or
or
add
dec
mov
adc
mul
mov
inc
leave
sbb
fdivs
cvtps2pd
or
xchg
lds
lcall
mov
je
push
test
push
cmpsb
imul
js
mov
xchg
jmp
push
sbb
shrb
sub
mov
pop
insb
lods
cltd
outsb
or
test
xchg
test
mov
std
and
call
arpl
xlat
inc
inc
push
adc
add
mov
mov
mov
jne
lcall
adc
lock
js
add
add
cmp
arpl
inc
adc
scas
xlat
jb
out
jbe
lods
xchg
andl
mov
movsl
mov
imul
jnp
shr
stos
aad
das
dec
cmp
xor
jns
in
or
xor
or
push
push
push
test
insl
xchg
mov
or
or
pop
dec
cmp
ss
test
sbb
mov
aaa
scas
lock
xchg
rcrb
cld
stos
scas
pop
inc
mov
push
cmp
sti
jb
adc
and
fstp
push
dec
int
pop
sarb
pop
out
and
and
add
add
xchg
xor
lret
push
cmpsl
mov
stos
cmpsb
imul
jecxz
test
sbb
bound
jbe
out
mov
stos
xor
pop
inc
lods
pusha
aam
daa
sbb
mov
cmpsb
sbb
cld
inc
mov
cmp
cmc
out
scas
imul
xor
jne
xor
mov
sarl
and
inc
or
lret
pop
cwtl
push
outsl
sbb
mov
dec
shlb
jmp
sbb
fisubrs
add
test
xchg
sbb
mov
std
lods
scas
jbe
push
fldt
or
sub
jnp
add
daa
sahf
adc
and
cwtl
push
xchg
dec
ret
leave
mov
sub
cmp
mov
inc
fcoml
xchg
ficompl
mov
jmp
sti
mov
pop
jmp
es
or
push
push
dec
and
outsl
sbb
gs
dec
or
cwtl
xchg
outsl
data16
jne
mov
out
sub
jp
mov
xor
inc
push
xchg
cmp
ss
jbe
movsl
sbb
cmp
sti
test
pop
mov
adcb
add
jo
std
cmp
inc
in
nop
xor
xor
negl
das
xchg
popf
test
insb
jo
xor
xchg
jecxz
fmulp
das
nop
sbb
test
test
mov
xor
lcall
dec
mov
gs
or
jb
hlt
cmp
dec
jecxz
pop
push
and
dec
aam
push
jle
cltd
sti
jae
lret
fs
out
inc
jg
fisubrs
lds
rclb
aas
jnp
ror
pusha
xchg
adc
sbb
movsl
push
addr16
sub
dec
mov
pop
stos
lret
mov
cmp
pop
mov
cmpsl
ret
adc
pop
inc
mov
xchg
repnz
fidivrs
pop
pop
arpl
cli
xor
shlb
cld
adc
popa
outsl
aaa
dec
push
pushf
sub
push
enter
imul
daa
imul
push
mov
dec
decb
mov
dec
dec
inc
sbb
sub
out
pop
mov
jmp
dec
or
loopne
sti
adc
aad
sub
cmp
mov
add
aam
dec
push
add
sbb
add
out
mov
push
pop
pop
jge
testl
iret
xchg
dec
mov
push
sbb
add
push
loope
push
lea
lea
sti
das
leave
cmp
scas
mov
pop
jp
add
jmp
int3
dec
ret
pushf
jmp
push
xor
insb
in
imul
aas
lds
aas
jp
arpl
popf
push
or
loopne
pop
test
jmp
xor
inc
cmp
and
mov
add
dec
mov
std
mov
arpl
sbb
jmp
jmp
sbb
ds
mov
inc
inc
inc
sbb
pop
adc
pop
bound
aaa
add
jge
inc
lahf
ljmp
loopne
mov
cmp
fwait
inc
stc
cld
cmp
test
inc
idiv
mov
fcomps
mov
lret
jbe
repnz
into
mov
cmpsb
sub
movsl
and
arpl
popa
add
movsb
jecxz
push
jp
ljmp
dec
inc
ljmp
pop
lds
jmp
aas
xchg
xor
hlt
fxtract
push
xchg
adc
or
pop
cmpsl
sti
dec
pop
fs
stc
jae
outsb
test
ret
pop
jp
ror
gs
bnd
mov
xchg
jecxz
aas
leave
mov
sbb
daa
setno
call
pop
sub
push
mov
mov
mov
in
and
test
add
xor
cmpsb
pop
shlb
js
add
into
xor
lods
push
xchg
cmc
loop
mov
inc
cs
add
pop
notl
or
mov
in
adc
cltd
add
lret
iret
pop
nop
imul
xlat
pop
inc
lods
lahf
imul
inc
or
push
sbb
inc
push
mov
adc
lea
lock
pop
jo
or
xor
fmulp
into
mov
xchg
and
dec
test
jbe
stos
bswap
add
idivl
addr16
dec
popf
fwait
adc
or
int
pushl
hlt
scas
ds
adc
test
inc
xor
imul
jl
and
pop
test
jmp
xor
aas
add
lahf
clc
sub
lock
mov
mov
call
aaa
jae
lea
test
xchg
fldcw
lock
repnz
test
jp
pusha
addl
xchg
xor
xor
mov
xor
jle
jno
sub
jne
push
add
add
aaa
fdivs
lret
shll
call
dec
xor
sti
dec
cmp
xor
xchg
xchg
sbb
add
test
lret
mov
or
rorl
orb
int
pop
mov
std
leave
mov
lcall
add
fstps
mov
subl
int
negl
jge
jbe
add
push
sub
or
repz
pop
insb
jmp
jno
xor
mov
fs
cmp
xor
cmpsl
mov
add
insl
add
sub
xchg
pop
push
stc
into
or
cltd
sbb
stc
xchg
out
scas
cmpl
mov
insl
test
imul
push
data16
fisttpll
loop
jmp
mov
pushf
jno
iret
add
rcrl
adc
mov
xchg
icebp
sahf
cmp
cmp
mov
cwtl
sbb
sbb
inc
or
in
add
lahf
inc
roll
pop
mov
sbb
hlt
or
test
jp
add
jp
sbb
adc
int
les
subl
rcr
shll
test
lret
inc
ffreep
push
inc
test
mov
push
insb
cmp
fidivrs
mov
mov
js
js
dec
mov
mov
test
pop
mov
orb
cmp
sahf
dec
data16
mov
xchg
mov
test
call
dec
testb
xor
sub
and
js
sub
mov
dec
nop
jg
xchg
clc
dec
jp
pop
dec
inc
test
js
cld
movl
dec
lcall
lds
cmpsb
mov
and
and
sbbb
add
pop
and
test
ficoml
lahf
cmp
sub
sbb
stc
popf
mov
fildl
jno
lret
cmc
ljmp
xchg
and
fwait
or
inc
add
insl
jp
repnz
jno
pop
mov
dec
mov
arpl
and
adc
add
jae
test
push
shlb
movsb
xor
xlat
mov
pop
mov
test
mov
mov
cld
lcall
in
mov
push
stos
push
sub
push
pop
das
ret
in
scas
xor
sub
add
icebp
adc
dec
push
or
xor
sub
int3
enter
sbb
inc
push
fldenv
ficoms
lods
sbbb
adc
xor
jne
sbb
js
popf
int3
adc
rolb
mov
mov
dec
mov
mov
fwait
mov
mov
push
sub
stc
sbb
es
aas
jae
fadds
and
lret
inc
sub
mov
add
mov
xchg
mov
jb
lret
adc
fwait
out
idivl
stos
aas
xchg
jge
push
fisttpl
cmp
and
fcompl
xchg
dec
push
mov
mov
out
or
mov
shrb
stos
cltd
ljmp
xchg
and
call
int
mov
and
mov
nop
add
fcoml
jecxz
push
xlat
lcall
mov
imul
iret
or
add
test
js
dec
sahf
mov
int3
enter
call
sub
cmp
push
jg
idivl
push
sbb
sbb
cmp
mov
jnp
inc
mov
and
loope
jge
faddl
inc
mov
stos
jb
mov
xor
add
and
mov
jae
in
push
pusha
lea
adc
mov
ret
push
in
js
fdivp
lret
sub
enter
aas
pushf
int3
cmpsb
call
outsl
pop
and
pushf
or
fwait
lcall
xor
ficoml
adc
inc
scas
push
add
mov
hlt
cltd
jb
jno
mov
push
jmp
arpl
outsl
hlt
insl
cwtl
xor
dec
and
mov
mov
icebp
lods
and
fyl2xp1
in
jmp
in
lret
icebp
pop
shl
mov
addr16
push
push
push
push
insb
mov
bound
movsb
jge
xlat
lock
das
lahf
bound
cmc
push
sarl
test
testl
mov
in
inc
icebp
mov
pop
aad
lock
xchg
mov
int3
push
adc
arpl
repz
sahf
and
xchg
sahf
clc
aad
inc
aaa
and
lea
jns
pop
mov
jl
shlb
outsb
out
lds
pop
jl
jmp
add
sbb
out
loop
adc
incb
ret
fcmovb
mov
adc
sti
adc
xchg
sbb
popf
inc
push
mov
mov
add
insb
lahf
rcrl
and
or
aas
mov
in
adc
adc
shrl
cmp
xor
mul
les
fldl
in
xchg
jbe
push
jns
pop
cmpsl
pop
cld
sahf
rcr
popf
popf
movsl
and
test
push
push
cmpsl
xchg
sub
jg
rcr
cmp
xchg
dec
andb
jg
jb
shr
dec
pop
add
mov
mov
xorl
xchg
push
in
push
dec
pop
xchg
int
hlt
fcompl
lock
fdivp
jmp
fisubs
in
jl
test
das
pop
add
xchg
mov
lds
sahf
call
mov
lcall
in
imul
out
cs
inc
and
fldt
push
stos
and
mov
ja
daa
icebp
lret
adc
sub
test
jno
mov
les
jecxz
mov
jb
or
pop
aas
shll
stos
popf
repz
inc
mov
push
jge
add
dec
mov
ret
fs
jo
xor
ss
mov
jo
inc
dec
leave
add
mov
test
sub
mov
mov
xlat
jg
nop
mov
xor
xchg
or
and
pop
leave
xchg
sub
lock
rcr
mov
les
sbb
lcall
mov
flds
xchg
cmp
push
data16
hlt
lock
pop
cmp
cwtl
clc
inc
and
in
icebp
jno
int3
sahf
shlb
shld
xlat
das
lahf
adc
adc
leave
lret
jg
rol
jg
jo
repnz
rorb
fsubs
sbb
mov
jnp
adc
mov
dec
mov
xchg
push
add
inc
fisttps
add
lods
dec
mov
popa
loopne
sub
sbb
mov
flds
orl
sub
loope
or
xchg
adc
out
cmp
fwait
push
ss
inc
xchg
popf
int
add
rcrl
jns
cmp
cs
ret
jmp
imul
pop
fistl
push
xlat
fldcw
mov
shrb
or
and
fists
je
mov
mov
dec
adc
insl
int3
inc
nop
push
xor
test
sar
adc
jl
sub
mov
xor
jmp
test
or
add
xchg
test
push
pop
shr
jne
sbb
shll
ds
movl
stos
mov
xchg
cmp
int
pushf
mov
mov
adc
pop
lock
sbb
sbb
mov
test
mov
cmpsb
pop
push
and
test
imul
or
stc
cld
mov
cmp
jg
adc
jae
cwtl
pop
push
cmp
cs
jae
jae
push
lds
ss
ror
jmp
add
mov
vpaddsw
jne
sub
xorl
popa
ss
jle
ret
sbb
nop
xchg
push
cmp
jb
mov
xor
aas
mov
push
add
mov
in
mov
rorb
and
sbb
repnz
cltd
sub
cmp
xor
iret
add
mov
mov
push
sti
cld
cmp
arpl
mov
std
pushf
dec
sub
pop
stc
stos
or
std
into
sub
in
mov
xor
and
lahf
jg
sub
std
push
push
xchg
mov
lds
cwtl
mov
mov
mov
sub
or
lret
rcr
inc
push
add
push
ret
out
mov
push
push
jg
arpl
push
xchg
test
fisubrs
xchg
mov
pop
pop
xchg
sbb
xchg
test
stos
jne
test
adc
mov
rclb
xchg
dec
adc
aam
call
in
jmp
das
xlat
adc
push
test
sbbb
xor
iret
in
scas
cmpsb
stos
cwtl
bound
mov
inc
mov
or
mov
push
orb
mov
test
andb
mov
inc
aas
ss
out
xor
cwtl
int
adc
lret
aaa
je
pop
mov
cmpsl
cmp
mov
jl
popf
ds
mov
jecxz
and
fcompl
add
data16
mov
jne
dec
in
outsl
jns
mov
push
insl
dec
mov
loope
pop
mov
or
sub
test
cli
inc
out
xchg
sbb
out
xlat
mov
pop
adc
inc
dec
xor
xor
xchg
jno
jge
jo
inc
stos
repz
roll
notb
pop
sbb
loopne
xchg
inc
mov
push
cmp
ret
push
inc
aad
cmpsb
subl
and
or
ja
scas
dec
pop
rcrl
les
int
pop
and
dec
inc
lods
enter
fcmovb
cmp
mov
push
inc
sub
std
je
pop
fdivp
mov
lods
jecxz
mov
add
aad
sti
mov
and
jae
mov
in
pop
test
fadd
sbb
fldl
jnp
mov
inc
ret
xchg
pop
push
jns
cwtl
cld
das
xchg
fwait
pop
movsb
out
ja
scas
adc
mov
aaa
sahf
cld
mov
mov
mov
out
cltd
loopne
inc
sbb
adc
xchg
inc
xchg
popf
dec
adc
or
popf
and
negb
fcmovne
mov
and
je
cs
pop
int
mov
popf
popa
negb
daa
adc
enter
in
cmp
gs
jp
adcb
cmp
dec
lods
call
inc
xchg
stc
xchg
pop
sub
aaa
xor
testb
ret
popa
aam
fimull
lock
xlat
push
add
fxch
loop
lahf
push
xchg
arpl
sub
jne
sbb
cmp
out
test
cmp
cs
mov
pop
std
mov
stc
shrb
jnp
popa
sub
loop
cmp
scas
mov
call
cmp
fmull
mov
andl
push
lds
inc
insl
sub
sbb
imul
pop
insl
movsb
aad
gs
cwtl
stc
test
mov
jno
xchg
popf
hlt
cmp
jno
jo
popf
xor
js
out
xchg
mov
xchg
xor
repz
test
xchg
xchg
push
in
xorl
xchg
mov
jae
mov
push
jle
je
inc
leave
cmc
repnz
xor
mov
outsl
aam
notb
xor
jge
fbstp
loop
aas
mov
add
repnz
mov
dec
inc
cli
jp
pusha
out
dec
in
stc
dec
lret
inc
out
cmpsb
mov
cmp
cli
mov
add
ss
xchg
cli
add
stos
sti
mov
or
sub
arpl
mov
out
xchg
cltd
mov
fwait
mulb
and
icebp
loop
or
mov
push
into
sarl
jp
adcl
jl
fildl
shl
mov
lcall
or
sbb
jb
dec
cmpsl
aad
mov
jecxz
cmc
jnp
push
sub
mov
fstpl
rorl
in
in
jg
lods
xor
stos
pushf
clc
adc
add
mov
test
xchg
jl
mov
xor
push
in
lret
cltd
mov
incb
sub
std
and
cli
lock
out
addr16
ss
or
pop
xchg
enter
cmpl
mov
lods
cmp
addr16
ficompl
push
or
inc
dec
jmp
xorb
mov
leave
xchg
in
or
out
adc
push
xchg
lcall
sbb
outsb
fwait
mov
mov
jo
nop
mov
popa
xchg
add
push
out
repz
nop
fsubs
cmpsl
sub
pop
push
push
xchg
xor
sbb
scas
pop
sub
or
pusha
sbb
jno
rorb
sbb
leave
inc
pop
dec
xchg
cmp
faddl
sub
xchg
stc
int
inc
dec
xor
mov
inc
std
lret
dec
push
jge
aas
and
xchg
sbb
dec
xchg
adc
lret
mov
adc
mov
cwtl
adc
sub
xchg
jmp
xor
pop
and
notl
insb
idivb
lods
adc
jp
cmp
insl
test
or
xchg
and
sti
repz
and
sbb
imul
xor
inc
cld
xor
and
jns
loope
mov
shl
cwtl
in
xor
dec
pop
cmp
fs
mov
adc
or
test
push
sub
lahf
dec
lods
mov
test
pop
mov
and
xchg
dec
scas
dec
sub
out
mov
adc
add
jmp
rcrl
or
push
mov
loope
arpl
xchg
in
int
pop
jp
pop
movsl
mov
fcoml
movsb
jo
scas
jno
lret
dec
scas
call
push
out
sbb
lret
aam
jmp
adc
pop
ret
pop
loop
movsl
jle
clc
ror
xchg
int
sti
fwait
inc
push
movsl
loopne
aad
enter
mov
fsubl
scas
sbb
mov
sti
movsl
dec
fidivs
jo
repz
imul
sbb
mov
ds
int3
in
in
or
xchg
adc
stos
pop
iret
out
test
cmp
repnz
aad
push
iret
ret
add
je
idivl
test
lcall
mov
icebp
mov
cmp
sub
inc
jcxz
mov
sbb
push
mov
es
sahf
add
mov
gs
push
mov
fmuls
sti
gs
mov
and
dec
jmp
frstor
leave
mov
pop
mov
stc
fcomps
sbb
into
ja
or
test
cmc
addr16
mov
dec
aad
jnp
mov
fwait
cmp
mov
pop
pop
xchg
jne
mov
cmp
divl
daa
inc
lds
xor
jmp
xchg
inc
pusha
loopne
fisubrs
xchg
bswap
popf
add
or
movsb
or
sti
sti
movsl
pop
lret
lcall
xchg
cmpsl
in
imul
into
dec
in
adc
sbb
ja
mov
shll
lea
sub
repnz
subl
out
outsl
stos
xchg
mov
sbb
mov
js
sahf
add
in
outsb
mov
jmp
lret
lret
scas
pop
mov
mov
mov
out
popa
or
clc
xchg
insb
repz
movsl
imull
roll
popf
fwait
jae
mov
sbb
adc
mov
je
popa
sub
jl
fistpl
sbb
lods
dec
das
movzwl
or
arpl
cmp
push
in
pop
ficoms
adc
or
int
cmpsb
imul
int3
js
test
enter
jecxz
jbe
add
dec
rcr
mov
mov
jmp
inc
xor
inc
lea
int
mov
les
and
stos
push
add
scas
mulb
ret
lock
sub
into
stos
mulb
out
mov
jmp
lret
rcrl
jbe
push
adc
dec
es
add
or
leave
jae
push
jbe
mov
xchg
fbstp
push
dec
in
add
inc
push
or
push
jmp
sub
mov
inc
mov
dec
rorb
sub
popf
or
aam
nop
fwait
repz
mov
fwait
aam
xchg
push
mov
inc
push
loope
test
and
mov
cmpb
adc
push
push
inc
loop
jp
mov
imul
popf
sbb
jne
lret
dec
divb
and
push
xchg
inc
mov
xchg
sub
adc
fsubs
jle
jmp
sbb
adc
fcompl
xchg
mov
or
cmp
nop
bound
cmp
pop
out
mov
sub
push
jle
add
inc
pop
add
in
test
or
xchg
cmp
rorb
test
in
add
mov
and
cmp
xor
push
jl
into
icebp
sahf
fdivs
jp
loop
add
int
pop
or
jbe
mov
mov
outsb
and
sarb
push
vcomisd
sub
jbe
mov
gs
les
pop
jne
mov
or
scas
mov
test
stos
jecxz
xchg
push
add
les
dec
out
adc
inc
fnstenv
fimuls
pop
adcb
loope
xchg
out
fcoms
xchg
mov
clc
enter
dec
bound
insl
jnp
outsb
pop
sbb
stos
cmp
push
sbb
inc
pop
inc
das
jae
es
fwait
cmpsb
cwtl
xor
ret
and
int3
dec
mov
cmp
xlat
add
mov
ss
pusha
pop
repz
cli
fdivs
leave
lods
sub
out
dec
testl
cmc
cmc
filds
cltd
cmp
add
lret
pop
daa
stos
notb
dec
cli
sub
push
mov
add
mov
mov
daa
mov
call
and
test
imul
lahf
and
into
lret
out
xor
jl
imul
dec
pusha
mov
pop
pop
int3
dec
je
push
ss
fdivs
or
icebp
or
push
adc
in
push
movsb
adcb
inc
out
push
jae
test
inc
int3
push
int3
outsb
icebp
lret
jnp
push
xchg
jb
sahf
push
or
sbb
cmc
fldenv
jns
sub
out
xchg
sub
mov
fldenv
xchg
out
popf
mov
jnp
lods
sub
cmpsl
xchg
sbb
cmpsb
xchg
jno
fwait
lods
leave
sbb
into
incb
scas
pop
or
and
aad
cli
mov
sbb
flds
and
cmp
or
mov
mull
inc
sti
adc
call
inc
mov
mov
and
call
pop
fistpl
sbb
dec
mov
sbb
push
aad
outsl
xor
mov
or
push
pop
jbe
xlat
enter
sbb
mov
fidivl
dec
movsl
ljmp
dec
out
lock
bound
push
mov
jno
lods
dec
jbe
jg
fwait
test
jne
in
lcall
pop
inc
ficomps
mov
jno
mov
jae
push
mov
and
test
hlt
mov
jnp
dec
jnp
scas
sub
cltd
ljmp
xlat
xchg
push
dec
xor
and
mov
or
mov
mov
test
jno
jo
xchg
in
dec
repz
pushf
pop
lahf
pop
popa
rol
mov
push
rolb
loope
jge
xchg
sbb
pminsw
jno
adc
aaa
sub
xchg
cmp
cmp
shl
outsb
call
push
mov
cmp
ret
add
cmpsl
sahf
dec
mov
test
xchg
popa
sub
cltd
in
ss
lds
jmp
adc
add
jge
sbb
or
xchg
sbb
imul
scas
xchg
fwait
cmpsl
dec
mov
das
mov
push
dec
inc
sahf
jg
arpl
adc
nop
add
mov
ret
mov
enter
das
test
xchg
xorl
inc
add
xor
fwait
and
mov
inc
and
sub
cmp
aaa
inc
mov
stos
jbe
loope
pop
dec
push
scas
js
stos
pop
dec
inc
mov
sbb
movsl
cwtl
mov
sub
mov
mov
out
adc
add
push
cmpsb
cmpsb
int3
dec
int3
jno
subb
in
mov
hlt
in
js
cld
jmp
clc
jnp
icebp
gs
mov
in
jo
push
sub
roll
mov
loopne
or
push
ja
jae
push
lea
xorb
sbb
sbb
inc
xchg
and
inc
aaa
in
sub
dec
mov
mov
or
dec
ds
out
call
cmpsb
addr16
jae
daa
cmp
scas
adc
rcl
xor
ja
xor
fmuls
inc
push
mov
pop
sub
cmpsb
adc
imul
sahf
cltd
sbb
cmp
inc
aam
mov
mov
adc
jb
insb
mov
pop
adc
data16
and
sub
xor
jmp
test
stos
fdivl
adc
xchg
scas
push
xchg
sti
scas
push
ret
push
push
rclb
lods
xlat
sarb
mov
lcall
cmp
cltd
dec
jne
cmp
xchg
inc
push
fbstp
add
and
cs
jno
push
dec
mov
aas
lock
add
cmp
push
mov
fs
fists
mov
inc
cmpsl
mov
jmp
push
testl
ss
sub
adc
jecxz
out
int
xchg
ds
inc
test
or
ret
inc
add
int
mov
ds
xchg
daa
adc
ja
sub
mov
add
jnp
add
pop
and
dec
mov
push
ja
dec
les
outsb
jecxz
int3
aad
inc
sbbb
jmp
add
sub
adc
into
mov
repz
add
loopne
sbb
test
es
xor
cmp
out
sbb
daa
movsb
subb
sub
mov
enter
mov
adc
sbb
pop
sub
iret
insb
and
call
sti
mov
arpl
ss
cltd
aas
xor
lret
ljmp
sti
test
push
xor
fst
inc
mov
sub
int3
inc
sub
add
ds
nop
mov
loope
mov
hlt
or
dec
xchg
pushw
jo
xchg
js
in
test
adc
jmp
iret
cmp
sbbb
icebp
roll
test
gs
shll
mov
cmp
popa
mov
push
scas
outsw
xor
xor
cmpsl
clc
shlb
fisttpll
or
or
test
popf
cvtps2pi
pop
ds
in
and
mov
jl
aas
or
sbb
jl
mov
orl
adc
xchg
lea
push
jle
ret
fs
mov
imul
pop
cs
cli
scas
std
lcall
js
mov
and
xchg
testl
pop
adc
rolb
xchg
mov
aas
inc
push
push
out
out
xchg
xchg
pop
inc
mov
dec
xchg
icebp
imul
cmp
xchg
mov
insb
push
sti
mov
aam
mov
mov
add
out
dec
cmc
fsubs
and
lods
cwtl
idivl
pop
pop
push
xor
pop
mov
inc
sub
xrelease
bound
rolb
lea
pop
mov
divl
clc
dec
imul
call
jmp
mov
add
or
mov
ljmp
xchg
xchg
inc
jb
push
adc
ret
imul
or
xchg
shll
jg
bound
dec
cmp
pop
or
jg
pop
xchg
mov
cmp
das
inc
lret
stos
adc
xchg
adc
into
stos
jecxz
push
divb
fmuls
add
pop
lods
pop
out
lds
cmpsb
xchg
cmp
mov
and
mov
ljmp
add
mov
aaa
cmp
jp
lcall
lcall
popa
std
inc
jne
aam
loopne
xchg
icebp
sbb
mov
daa
cmp
push
cmp
and
pushf
inc
adc
ljmp
and
ds
repz
lret
outsl
and
add
sub
sbb
mov
mov
pusha
xlat
stc
xchg
jae
pop
push
fstps
adc
inc
adc
adc
pop
adc
orl
and
push
outsl
mov
mov
in
or
fwait
lods
mov
sbb
in
loope
sti
xchg
aad
dec
sbb
mov
sub
addr16
lahf
inc
scas
mov
mov
fwait
mov
lock
into
pusha
daa
call
pop
and
addl
in
pusha
mov
call
mov
sbb
mov
in
sbb
cli
add
dec
add
movsl
xor
lret
rclb
mov
dec
popa
lcall
test
inc
sahf
push
out
sahf
mov
mov
and
test
nop
int
jp
sarl
sub
cmpsb
popf
jle
pusha
stos
leave
inc
shll
xor
fsubp
or
out
aam
test
pop
inc
cli
inc
aam
out
or
jno
sti
push
mov
aas
cmp
jge
cli
std
push
mov
popf
cmc
add
popf
cmp
pop
fbld
mov
dec
std
jbe
mov
test
out
sti
daa
cmp
testb
movsl
sub
add
mov
cld
sub
jno
push
sbb
sub
shrb
dec
sbb
pop
mov
scas
jp
xor
ja
mov
test
xor
fcmovnu
push
and
push
hlt
sbb
cmp
xchg
fiaddl
push
or
lock
and
xchg
pop
repz
jmp
xchg
and
push
dec
arpl
and
push
fcompl
pop
int
call
xchg
int
jg
int
cmp
in
rol
lcall
inc
mov
jl
mov
rorb
dec
pop
lock
sti
insb
sub
pop
xor
fmul
cli
pop
fimull
pop
add
pusha
jge
or
fwait
mov
in
ucomiss
adc
xor
call
fs
jl
test
sub
aas
push
daa
leave
xchg
cmp
cmpb
sub
test
in
cmp
jge
ja
inc
imul
sbb
js
pop
xor
roll
sar
fcoml
mov
mov
jmp
fcoms
or
sub
mov
cltd
ret
in
fmull
das
sbb
push
push
loopne
cltd
fs
push
lcall
divl
jns
inc
repz
xor
jo
into
sbb
adc
int
rorb
out
sbb
testb
sti
mov
pushf
inc
loop
mov
pop
and
cmp
addb
or
lods
in
jmp
fldt
jne
pop
dec
mov
and
or
push
xchg
mov
mov
pop
cmpsb
cltd
fcoms
sbb
inc
add
mov
test
movsl
cmp
ud2
mov
aaa
test
inc
xchg
mov
mov
jno
cwtl
sub
insb
call
inc
xorb
lret
rcr
out
adc
xchg
pop
mov
jp
jnp
pop
stos
jae
out
lret
addb
or
ret
out
mov
add
sbb
sbb
lcall
out
aaa
pop
mov
inc
inc
jno
lea
loop
es
adc
jae
ds
cmp
leave
call
and
js
flds
popf
mov
pushf
ret
fstl
inc
int3
lock
fcoms
mull
jo
pop
bound
push
push
mov
scas
mov
lds
add
sbb
imul
inc
jle
xlat
sub
icebp
popf
or
aam
push
add
xchg
jne
fcompl
aam
fwait
daa
adc
gs
cmp
ss
sahf
in
lret
push
dec
add
cmp
mov
loopne
in
add
and
adc
lret
inc
cltd
jb
outsl
jne
or
lods
stos
jns
dec
inc
stos
or
sub
xchg
sub
mov
push
fistps
xchg
fnstcw
insl
int
mov
jae
jne
pop
fstp
pop
mov
add
stos
mov
leave
xchg
iret
mov
or
fildll
xlat
jb
mov
insb
or
test
jbe
pop
xchg
rclb
lret
aas
pop
out
lds
sbb
jg
lods
fwait
jnp
or
in
das
or
loope
dec
loop
out
cwtl
add
out
xor
in
jne
je
pop
push
pop
mov
bound
fcmovnu
jp
loopne
nop
daa
pop
mov
sbb
call
mov
mov
mov
mov
xor
insl
aad
stc
dec
and
lods
inc
stos
loope
mov
jae
push
cmp
add
test
scas
daa
stos
jmp
jae
dec
fcmovne
out
adc
fs
pop
jns
pushf
mov
mov
or
mov
and
mov
fnstcw
and
sub
mov
cs
int3
and
xor
jae
inc
loopne
fildll
leave
cmc
xor
les
leave
inc
and
daa
push
lret
test
inc
jbe
incb
shll
push
push
inc
hlt
or
xor
xchg
cmp
and
adc
lods
mov
dec
push
mov
rcrb
xchg
hlt
ljmp
and
adc
push
jg
cmp
cmp
pop
addr16
and
dec
cmp
sbb
andb
mov
sbb
or
xchg
fnstenv
jno
jle
fs
jns
xor
sahf
jecxz
sti
fsub
mov
mov
xor
in
test
push
or
test
cmpsl
leave
and
popa
jbe
mov
iret
pop
xchg
pop
test
xchg
mov
aaa
loope
es
ja
mov
xchg
maskmovq
out
ljmp
push
test
aaa
movsb
hlt
rorl
aas
call
aam
sbb
stc
or
out
xchg
scas
in
or
cmp
cmovp
mov
pushf
and
cmp
addr16
sbb
cmc
aas
shufps
int
fdivr
or
sub
sub
das
add
inc
mov
and
push
mov
js
or
mov
jbe
dec
mov
dec
sub
insl
pop
push
mov
ljmp
scas
dec
inc
bound
sub
clc
sar
scas
popa
scas
dec
cmp
lds
mov
pushf
or
adc
andl
mov
jne
push
xor
pop
lock
hlt
jne,pt
call
jnp
daa
shll
xchg
aas
lds
jg
int3
pushf
fwait
sub
addr16
scas
lret
aad
mov
push
stc
jp
mov
and
adc
sub
sbb
cmpsb
ss
scas
arpl
adc
push
jno,pn
push
repz
enter
sbb
rcll
roll
inc
pop
in
sti
cmp
jno
cwtl
frstor
xchg
insl
jle
imul
icebp
lcall
xorl
stos
or
cwtl
sbb
repnz
hlt
lret
por
xchg
icebp
loope
in
stc
movsb
fisubrs
aaa
insb
pop
jmp
xorb
imul
lret
mul
rclb
ds
add
stos
enter
push
mov
or
cmp
or
mov
xchg
pushf
nop
push
js
repz
out
push
loopne
xor
fbstp
push
dec
cmp
cld
mov
xchg
xor
inc
sbb
movlps
mov
inc
push
adc
sub
mov
inc
std
lods
jbe
in
and
pusha
inc
mov
add
movsb
push
bound
pop
lods
pop
jno
cltd
jae
mov
jp
mov
call
addr16
imul
jmp
daa
mov
loope
cs
mov
lcall
pushf
test
das
cld
adc
loope
jno
test
mov
out
ror
rolb
les
xchg
sbb
cmp
push
lret
add
push
out
stos
sub
clc
daa
adc
mul
jmp
and
mov
mov
push
sti
test
in
sub
aam
push
punpckhwd
add
mov
xlat
cmp
inc
enter
in
mov
xchg
mov
stos
lret
outsb
pop
and
and
adc
mov
pusha
cmp
inc
sbb
scas
pop
pop
jnp
and
loop
push
int
xchg
cmp
leave
add
loopne
and
adc
push
cmp
cli
xor
xchg
sti
inc
imul
ja
mov
dec
adc
imul
add
cmpsb
gs
in
sbbb
pop
add
mov
cmpb
nop
mov
dec
mov
xchg
repnz
shr
ret
cmc
out
addr16
mov
int3
and
shlb
adc
aas
into
fistpl
mov
fcmovbe
xchg
dec
in
pop
cmp
xchg
repnz
adc
pop
mov
cmp
gs
jecxz
or
and
mov
jge
ret
push
repz
xor
rcr
sub
dec
xchg
and
loop
stc
xchg
sahf
xchg
jo
mov
push
cmc
gs
int3
dec
fisttpll
add
cli
in
and
aad
cmp
scas
in
test
and
xchg
dec
fisubs
dec
xchg
jae
mov
movsb
mov
mov
or
mov
jne
aaa
dec
jp
xchg
and
pop
xchg
jmp
test
sbb
mov
and
fs
arpl
lock
in
mov
xor
push
leave
dec
pop
test
je
aad
mov
mov
movsb
mov
cmp
lods
sbb
dec
push
push
jns
in
bound
cltd
in
jp
imul
mov
xchg
xchg
dec
sub
scas
dec
popf
test
add
jnp
in
mov
mov
sub
stc
scas
add
xchg
ret
xchg
repnz
out
mov
test
in
mov
and
xchg
test
jle
les
add
cmp
cmpl
or
movntps
push
xor
jnp,pt
dec
adc
mov
mov
xor
ficomps
xor
jnp
shll
jae
pushf
dec
xor
out
jecxz
aaa
sarl
fs
adcl
xchg
imul
pop
fmuls
adc
inc
lea
in
mov
lret
je
mov
js
mov
push
int
add
into
fldcw
mov
cli
shrl
push
fcoml
aaa
fmul
xor
mov
sub
repz
sti
sub
pusha
jno
aas
insb
movsb
push
mov
outsb
pop
dec
mov
sbb
inc
dec
and
pop
add
enter
stc
fildll
je
mov
je
mov
jge
xor
call
inc
adc
dec
outsb
shlb
sub
int
jnp
cmp
and
mov
in
mov
loop
push
cli
push
int3
pop
fcoms
out
cli
in
xor
ret
icebp
jae
fdecstp
test
aas
jae
mov
adc
mov
cmpsb
or
add
addb
jmp
pop
sti
retw
lret
in
iret
adc
or
and
lods
data16
mov
subb
cmp
mov
popf
pop
fldt
mov
cmp
pop
shr
mov
out
std
pop
loop
adc
aas
mov
inc
mov
bound
mov
or
mov
and
mov
dec
cmp
dec
pop
push
dec
mov
sbb
ljmp
push
call
mov
mov
iret
insb
sahf
mov
jge
mov
xor
ficoms
cmp
add
and
dec
xor
iret
clc
mov
pop
push
add
jge
pushf
xor
jne
cld
cs
movsb
push
xor
mov
push
hlt
aam
xor
push
dec
inc
inc
lret
pop
adc
jmp
xor
test
movsb
xor
aam
mov
hlt
jp
xor
in
into
scas
and
stos
repz
es
fidivs
scas
aam
psllw
mov
jmp
pusha
scas
push
mov
and
or
fldl
repz
cmpsl
xor
and
jecxz
add
lret
xor
xchg
addb
push
insb
imul
stos
stos
in
negb
cmp
cld
push
cmp
outsb
out
add
mov
inc
bound
and
shlb
pusha
mov
xor
sub
mov
adc
mov
ljmp
mov
daa
cltd
xchg
popa
mov
push
lret
outsl
sbb
sbb
jns
xor
mov
lock
push
jle
push
rclb
xor
dec
std
jae
int3
dec
jns
adc
icebp
sbb
lds
je
stc
pop
not
inc
push
mov
dec
mov
xchg
out
int3
pop
in
fs
inc
mov
fistpll
pop
popa
add
or
lods
loop
cmp
push
xor
je
mov
stc
repnz
mov
and
adc
mov
xchg
scas
loope
cwtl
cltd
add
cld
dec
into
xor
xlat
mov
or
mov
mov
addl
sub
xchg
aam
jmp
cmp
jno
int
mov
in
push
and
lcall
cli
push
xchg
je
cmpsl
out
pop
or
mov
or
xor
and
jge
bound
sbb
push
adc
jmp
dec
mov
std
shlb
jbe
xlat
stos
xchg
or
dec
stc
sub
call
icebp
sbb
push
xor
std
shll
and
in
mov
mov
lahf
fucomip
jmp
mov
ret
sub
jmp
or
movsb
mov
or
scas
push
mov
dec
into
pop
daa
mov
lods
enter
ss
inc
pop
jb
add
mov
arpl
mov
test
lcall
lea
jmp
cmp
xchg
mov
sbb
xor
sub
aad
loop
mov
mov
test
xchg
out
add
aas
cwtl
pop
xorl
add
ret
dec
mov
mov
jle
add
arpl
and
xchg
push
push
xchg
nop
pop
push
stos
popa
test
cmpsb
sbb
mov
sub
jae
jmp
or
fs
and
lret
stc
rcrl
adc
and
repz
nop
cmp
add
rcl
mov
sahf
and
or
jp
stos
ja
adc
loopne
ret
pop
mov
cli
cmp
fstpt
sbb
xor
popa
fwait
test
pop
loope
adc
pop
shlb
sub
lahf
lock
scas
dec
pop
jnp
jp
aad
testb
loope
sub
cmp
xor
xor
cmp
dec
jmp
xchg
mov
out
pop
stos
and
sub
mov
loop
mov
daa
jo
mov
cmp
jg
dec
cmovle
jl
mov
push
sbb
fwait
sub
push
add
jg
clc
les
ror
xchg
pop
pop
mov
int
sti
rcrb
mov
dec
stc
pop
decl
imul
jbe
pop
mov
jae
fistpll
mov
fidivs
jge
sub
fldt
fisubrl
pusha
pop
add
mov
adc
aam
pushf
jb
adc
sbb
jge
and
leave
sub
add
data16
xor
push
sub
ret
shrl
add
or
fidivrs
and
movsl
inc
iret
mov
fsubl
out
or
inc
cmp
out
je
pop
mov
jg
decb
sbb
aaa
pop
imul
bound
cmp
and
and
arpl
mov
xor
jo
push
mov
mov
and
out
xchg
add
ss
or
je
loope
xor
orl
scas
jl
into
sbb
cwtl
sub
push
mov
pop
mov
inc
fdivrl
push
cmpsb
dec
jl
sub
sub
or
loop
icebp
mov
add
mov
rcrl
mov
or
xchg
aad
pop
insb
scas
or
xchg
test
pop
out
sub
or
cltd
adc
nop
sub
and
lea
xor
mulb
test
stc
sbb
adc
ja
mov
push
jnp
repnz
cmp
add
nop
lret
xor
iret
std
ljmp
xchg
ja
or
or
into
push
loopne
jb
call
jg
sub
shl
js
pop
aaa
je
push
imul
stos
cmp
jne
movsl
popf
fwait
lret
or
mov
adc
popf
mov
mov
lret
insb
outsb
pushf
je
mov
ss
xchg
popa
test
jmp
lcall
aad
xor
je
call
into
imulb
dec
sub
xor
xor
pop
mov
scas
outsl
or
fildl
mov
movsl
cmp
pop
mov
jbe
add
pop
push
loope
fmuls
jno
stos
mov
cmp
inc
sbb
jmp
lret
mov
and
xor
mov
fstps
and
cmp
mov
mov
mov
repz
cmp
inc
ds
cmpsl
inc
lahf
and
mov
xchg
dec
fidivs
loope
sbbl
push
stos
jge,pt
shll
cmpsb
sarl
mov
jle
cmp
stc
enter
xor
cmp
repnz
and
je
dec
xor
dec
sub
out
cmpsl
into
pop
sub
or
mov
pushl
icebp
mov
inc
mov
jp
outsb
fstps
jne
or
cwtl
mov
mov
in
mov
shrl
rorl
add
pop
sub
in
add
andb
mov
inc
scas
cmp
aam
sbb
mov
adc
dec
mov
mov
pop
and
decl
sbb
sub
jne
mov
sub
xchg
sub
fnstenv
mov
filds
xchg
ss
imul
push
mov
or
jmp
jg
ja
cmc
xor
movsl
jb
mov
out
mov
insb
push
sbb
into
add
loopne
fcoms
inc
cltd
pushf
js
sub
sub
popa
sub
sub
push
mov
mov
lea
sub
pop
pusha
pop
dec
aaa
or
lds
divl
cmp
mov
jne
xchg
mov
call
adc
enter
inc
xorb
sbb
push
in
jmp
loope
xchg
repz
call
dec
subl
mov
ret
ret
jns
push
dec
jmp
loopne
jge
dec
jae
rcll
push
std
adc
and
sub
aam
int3
pusha
cmpsb
mov
push
and
adc
lds
add
scas
in
push
mov
fstpt
adc
push
sbb
push
or
in
adc
movsl
movsl
out
js
ficoml
dec
and
pop
sbb
add
imul
lcall
mov
xchg
rcr
lret
pop
mov
cmpsl
push
inc
inc
inc
jne
mov
add
incl
inc
push
mov
repnz
int3
outsb
sahf
add
fcmovnu
adc
and
dec
repnz
or
das
pop
ljmp
mov
adc
fidivl
cmp
sahf
dec
mov
xchg
clc
movsb
mov
shr
xchg
pop
cmp
add
inc
shl
test
insl
clc
mov
lds
xor
out
lret
imul
or
adc
cmp
xchg
enter
pop
out
imul
or
lds
xchg
or
sub
mov
sub
lds
pop
sti
fucomi
jl
mov
lret
adc
push
ds
jl
idivb
cmp
fnstcw
adc
inc
sub
inc
ds
push
test
inc
sub
adc
cmc
push
divl
scas
movsl
popa
sahf
xchg
add
cmpsb
xchg
rol
ss
add
fdivs
or
out
pushf
jns
outsb
push
lods
push
push
mov
aaa
push
jl
cmp
ljmp
push
ds
enter
cwtl
and
jl
xchg
pusha
cmp
loope
sbb
repz
repnz
dec
cltd
lds
cmp
lahf
sub
mov
jge
icebp
push
adcb
out
out
lods
aam
lds
into
push
loop
fisubrs
cmpsb
push
test
mov
lock
ja
fnstsw
push
pop
jl
out
lods
mov
jge
mov
sub
xor
les
jbe
addr16
push
mov
push
mov
int3
fdivp
inc
push
repnz
cmpsl
loop
jnp
mov
in
pushf
pop
dec
insl
adc
std
stc
mov
aad
jle
cmp
mov
pop
jmp
push
cmp
dec
fbstp
jns
dec
and
pusha
xchg
rolb
adc
daa
push
xorl
imul
fnstsw
push
icebp
cltd
lcall
pusha
push
in
add
push
mov
leave
pop
mov
add
jae
push
mov
loop
addl
pop
addr16
sub
pusha
add
xchg
popf
inc
and
gs
dec
fsqrt
stos
jl
fistpl
in
in
fwait
sub
and
std
ss
hlt
jb
lret
shll
movsl
leave
sub
mov
dec
and
scas
mov
filds
roll
sbb
xor
jnp
and
jns
jnp
stc
mov
sbb
mov
jae
inc
and
xor
cmp
clc
leave
push
jno
mov
push
xchg
cs
mov
add
ret
fiaddl
adc
dec
pop
or
lret
or
or
mov
arpl
stos
shlb
lret
neg
add
and
sbb
sti
cmpsl
xchg
fisubrs
popf
pop
clc
ret
jg
fistpl
mov
rcll
mov
data16
push
clc
push
fldt
or
mov
sub
xchg
dec
mov
cmc
xchg
cmc
xor
out
mov
iret
mov
ret
xor
addb
cli
andb
daa
int
add
dec
xchg
ljmp
ds
jno
push
loopne
sti
shrl
sarl
pop
mov
xor
stos
movsl
out
sub
adc
dec
enter
sub
int
fbld
inc
cmp
es
inc
lods
mov
fcoml
aas
test
dec
fistps
push
inc
repnz
les
sahf
out
sbb
cmp
das
mov
inc
mov
stos
fs
rcll
xchg
jns
pop
push
aam
sbb
adc
push
std
sub
mov
repnz
mov
pop
mov
repnz
jnp
mov
sub
mov
xor
push
nop
fildl
or
inc
dec
mov
stos
push
push
cmp
push
mov
mov
das
lahf
pop
ret
mov
push
xor
and
loop
out
cmp
mov
mov
notl
cmp
fstl
mov
fsubrp
mov
ret
mov
push
std
mov
xor
cltd
lahf
adc
out
jns
stc
pop
sub
jnp
mov
fadd
mov
add
pop
shll
out
sbb
mov
mov
jnp
pop
test
push
in
push
or
addr16
mov
mov
cmp
xor
jno
add
xlat
movsb
inc
pop
or
pop
in
xchg
xchg
jp
xor
ret
add
lock
jb
inc
dec
xor
call
lock
or
push
xor
adc
cltd
int
add
test
mov
cld
das
xchg
mov
xor
pop
sub
mov
mov
movsl
outsb
pop
repnz
mov
dec
inc
dec
pushf
imul
adc
ja
xlat
add
dec
or
inc
in
mov
sbb
sub
mov
imul
jns
fwait
pop
test
adc
aas
call
inc
bound
jo
dec
daa
int3
jne
out
shl
out
add
add
andl
push
clc
xchg
icebp
pop
sahf
mov
xchg
and
inc
mov
cltd
fidivrl
mov
pop
ret
adc
pop
in
jge
jbe
shlb
inc
dec
aaa
mov
push
test
sub
xorl
lods
add
jge
xchg
repz
aas
negb
sub
lahf
dec
push
jb
cmpsl
sbb
lahf
jnp
andl
sbb
test
jp
add
adc
mov
inc
fcomps
mov
mov
pop
lcall
xchg
sbb
or
daa
mov
xchg
js
cli
mov
stos
lds
push
jmp
in
or
mov
push
push
cmpsb
mov
push
mov
mov
or
fimuls
cmpsl
outsl
popa
push
ret
sub
xor
stc
addr16
repz
cmp
das
cmp
mov
cltd
lods
popa
pop
test
or
andl
out
daa
dec
inc
push
mov
repz
xchg
mov
fcomip
add
lock
inc
popf
enter
outsb
pusha
sub
repnz
stos
in
jge
pop
sbb
xchg
jp
mov
and
out
stc
dec
cmp
test
ret
mov
lods
or
daa
sub
push
and
shlb
cmp
xchg
xchg
cmp
out
and
sahf
popf
out
dec
divl
mov
bound
scas
int
xchg
adc
xor
mov
stos
lds
dec
shlb
loope
cltd
add
scas
adc
rcrb
cld
push
pop
and
das
push
arpl
popa
xchg
loope
sarb
iret
jb
into
call
test
push
loope
sub
sysenter
in
in
pushf
dec
scas
mov
xor
fcmovb
jns
sahf
mov
or
cltd
mov
cs
out
push
cs
cmp
icebp
scas
cmp
xlat
mov
pop
das
jo
pop
enter
dec
lret
jp
loopne
pusha
inc
into
sbb
ds
push
cli
add
and
push
jecxz
or
jno
push
out
jl
mov
mov
xor
loop
mov
add
ljmp
sahf
cmp
ud0
sti
sti
not
pop
outsb
lret
pop
add
hlt
das
mov
push
sahf
je
insl
pop
inc
jle
jo
popf
pop
pop
lret
insl
jl
js
rcrb
cmp
cmp
adcb
inc
repnz
pop
shrl
mov
push
fisttpl
xchg
jmp
iret
cmp
hlt
and
cmp
cmp
push
enter
mov
sub
push
sti
lret
cmp
xor
add
movsb
std
xchg
jmp
xor
leave
fnstcw
inc
shll
je
dec
push
add
push
pop
int3
adcl
push
mov
jg
dec
sub
or
in
inc
pop
lsl
je
test
aam
jmp
mov
stc
push
shld
inc
adc
out
xchg
xchg
mov
jecxz
ret
push
xlat
movsb
or
xor
bound
push
xchg
push
inc
imul
inc
mov
jp
aas
fadds
and
and
xorb
jne
movb
mov
sub
adc
mov
push
sbb
outsl
mov
test
mov
mov
sub
add
cmp
fs
bound
and
sbb
inc
jp
shr
in
lock
pusha
mov
pushf
bndldx
and
outsl
nop
xor
rcll
and
cltd
and
and
mov
ret
jl
stc
into
loope
xlat
out
cltd
repnz
adc
jnp
pop
and
rcrb
aas
int
test
mov
xorb
popa
out
loop
rcrb
cld
mov
jns
addr16
int3
xchg
rcll
jg
stos
sbb
in
mov
jle
push
loope
xor
pusha
fnsave
lea
test
fisubrs
xchg
push
mov
push
into
inc
inc
or
scas
cmc
jns
jl
xchg
fisttpl
fistpl
push
mov
dec
jb
cld
repnz
cli
movsb
bound
in
push
jg
movsb
outsb
ret
popa
imul
rorl
ret
fwait
rcr
fistpll
push
sub
push
mov
pop
inc
ljmp
stos
cld
in
or
lods
clc
push
ret
shl
add
and
mov
cli
adc
addl
or
jno
sbb
inc
jnp
bound
sub
xchg
or
inc
lret
cmp
dec
fisubl
mov
pop
push
fwait
sub
outsl
push
or
insl
rcll
or
or
pop
pusha
mov
adc
jnp
test
adc
adc
add
stc
push
movsb
push
lods
gs
rorb
lret
pop
lock
push
lret
stos
cmc
pop
adc
mov
jae
aaa
dec
icebp
ja
incl
push
test
out
dec
or
mov
aad
pop
fisubs
hlt
push
inc
sub
xchg
mov
cmp
xchg
pop
dec
fistl
lock
cmpsb
pop
in
imul
ds
inc
dec
out
lods
jne
add
je
lahf
sbb
adc
leave
pusha
test
xchg
xchg
push
into
fwait
aad
clc
dec
movsl
pop
pop
std
arpl
push
mov
or
int
mov
lds
inc
int3
adc
popf
mov
mov
insl
nop
out
shrl
out
jecxz
arpl
jp
enter
mov
in
adc
hlt
lods
lods
addr16
in
icebp
mov
push
inc
in
sub
pop
jecxz
dec
notb
inc
dec
pop
arpl
les
ja
je
imul
iret
push
and
divl
dec
pop
sub
jns
or
in
xchg
cli
mov
sub
inc
xchg
mov
dec
imul
cmpsl
add
sbb
fdivl
mov
push
mov
sub
and
mov
dec
xchg
push
inc
or
cmpsb
or
xor
jno
pop
xchg
dec
rcrl
outsl
push
ja
rcr
sbb
inc
push
psraw
stos
scas
loope
loop
cmp
cmp
dec
jg
pop
xlat
das
mov
inc
test
jmp
mov
loopne
mov
ljmp
mov
xchg
push
xor
popf
mov
insl
xor
xor
iret
mov
xor
xchg
cwtl
pop
les
hlt
int3
xor
in
sub
xchg
je
push
hlt
and
addr16
ja
mov
and
fsubrl
mov
push
inc
xor
enter
adc
pop
into
add
out
daa
cmpsb
sub
inc
outsb
jne
pop
jo
les
inc
bound
loop
and
dec
rdpmc
fsubl
jmp
jnp
sahf
aam
mov
stos
mov
shlb
xor
jnp
sub
dec
frstor
and
insl
mov
or
or
xchg
sbb
sub
out
or
je
fidivrs
xchg
scas
outsl
jae
pop
mov
hlt
inc
cmp
inc
xchg
sbbb
xor
lock
pop
lock
ja
test
xorb
ds
cmp
cmp
test
pop
out
leave
and
stc
xlat
add
test
fwait
mov
mov
outsb
or
movsl
cmp
mov
ficoms
inc
xorl
ret
cli
push
dec
loopne
outsb
dec
xorl
dec
in
insb
out
dec
jl
hlt
or
fldt
or
and
leave
das
push
aaa
push
mov
adc
xor
mov
js
movsl
or
push
int
jg
pop
xchg
dec
cmp
cmp
push
cmp
pushf
adc
lret
pop
loop
dec
div
into
loopne
aas
lret
sbbb
sub
pushf
sub
nop
jge
mov
stos
jmp
jmp
lds
lds
hlt
das
sub
fcomip
rcrl
fcmovne
andl
out
lock
xlat
jo
inc
cmp
addl
rorb
or
and
in
xchg
push
pop
loopne
jmp
scas
mov
xchg
adc
mov
loopne
cmc
int3
fdivrs
jno
or
cs
daa
test
push
lods
movsb
cmp
dec
pop
out
pop
push
sbb
in
mov
fs
pop
inc
pop
jp
add
cmp
icebp
mov
dec
in
push
jle
sahf
push
pop
xchg
jl
xor
push
jbe
adc
pop
lcall
mov
xor
in
dec
imul
inc
sub
sub
fildll
xchg
mov
mov
xor
movl
inc
lea
add
enter
loopne
ret
adc
jae
jae
or
js
dec
xchg
fwait
loope
mov
jecxz
pop
sbb
add
push
test
inc
mov
insb
xchg
rcrl
arpl
sti
mov
push
into
inc
mov
xor
pop
rorb
fs
dec
mov
cmp
dec
fstps
or
or
les
cwtl
lret
int3
lret
aam
add
jg
lds
inc
subb
push
cmc
lret
push
popa
push
jns
mov
lds
pop
add
mov
mov
cmpsl
test
pop
mulb
test
cmp
nop
ret
out
out
adc
dec
fcoms
mov
jecxz
sub
sbb
mov
xchg
sub
stos
cwtl
jl
xor
adc
in
adc
xchg
movsb
pop
jg
mov
cmp
pop
jo
mov
sub
in
andl
in
mov
mov
loop
jb
mov
out
pop
pushf
mov
dec
div
fadd
jl
imul
fsubrl
sahf
pop
cmpsl
rorb
xchg
dec
sbb
add
sub
mov
jb
dec
out
scas
fld
and
mov
dec
mov
push
or
mov
lds
subl
mov
sub
xchg
test
bound
in
imulb
sahf
xor
dec
loope
dec
inc
out
mov
loope
call
inc
pop
andl
mov
icebp
test
sub
enter
loop
xorb
cld
and
comiss
mov
xor
cwtl
ret
lea
add
jb
int
pop
out
ljmp
mov
icebp
sti
push
or
xor
js
lahf
push
cmpsl
cmp
inc
cmp
xchg
incl
pop
lahf
inc
or
pop
push
push
and
and
test
sub
sbb
pop
inc
mov
or
push
mov
ret
rcl
sbb
in
fistpll
jl
jbe
mov
jbe
dec
dec
inc
scas
push
std
aad
imul
mov
mov
outsb
sbb
leave
outsl
push
mov
iret
mov
or
sub
andb
cmp
rcll
cltd
sub
dec
fimuls
aas
aas
pop
or
jns
push
subb
das
or
repnz
inc
fwait
mov
idiv
push
dec
mov
sbb
inc
sti
leave
je
pusha
push
and
rorb
inc
pusha
pusha
sub
aam
lahf
les
inc
push
fistps
sbb
out
sbb
mov
sbb
inc
and
leave
test
adc
scas
mov
xchg
add
push
push
shr
or
cmpsl
fildl
jle
shl
out
cwtl
sbb
jns
mov
mov
dec
mov
lock
mov
mov
js
scas
popa
popf
into
inc
out
les
xor
in
lahf
insl
in
out
push
popa
cmp
cld
es
jge
repnz
mov
inc
into
addb
jo
inc
fistps
sub
sub
ret
jno
inc
out
les
push
push
inc
xor
xchg
fsubl
xchg
pop
sti
int3
sub
fiaddl
sbb
or
fwait
repz
out
cmp
sub
add
icebp
loop
addb
rclb
call
ja
jne
repz
sub
js
cmp
cmp
sbb
pop
mov
add
rcr
mov
sub
and
mov
cmp
mov
mov
hlt
sub
movsl
cli
cmpb
loope
sarl
inc
in
psrlq
out
stc
scas
sub
loop
fisubrs
inc
mov
faddl
mov
sahf
jmp
mov
pop
mov
mov
addr16
cmpsl
push
aaa
cmp
orl
stos
fidivrl
lahf
or
xchg
xchg
test
lcall
pop
aad
push
mov
les
push
mov
xchg
cli
add
fimuls
popa
pop
lods
xchg
outsl
jecxz
sbb
dec
jae
mov
aas
pop
orl
loop
aas
out
scas
xchg
repz
jl
scas
scas
cmpb
rcrl
push
outsl
sbb
sub
icebp
aam
dec
sar
mov
popf
push
jns
aas
mov
jns
mov
std
fdiv
lods
mov
or
xorl
mov
insl
inc
ret
jb
mov
dec
leave
outsb
insb
mov
popf
mov
sbb
jae,pt
sbb
inc
jmp
mov
jg
leave
sarb
mov
adc
jle
mov
sarl
pop
xchg
enter
sub
mov
dec
cmc
lds
xor
fadds
mov
ja
aas
inc
xchg
push
ds
cltd
loopne
out
psubsb
int3
popf
dec
jo
out
jle
mov
xor
mov
pop
pop
and
pop
arpl
dec
sbb
leave
dec
into
dec
nop
and
sub
cmpsl
sbb
mov
cmc
push
mov
addr16
fisubs
inc
pusha
jp
insl
hlt
mov
adcl
sbb
lods
adc
mov
js
mov
daa
ret
int
push
orb
jecxz
cmp
sub
mov
sub
jmp
fsubp
mov
dec
test
js
xchg
mov
stc
loope
mov
dec
or
push
test
shll
jns
pushf
cmp
xchg
jmp
jbe
xchg
fnstcw
popf
xorb
paddq
push
int
lods
js
loop
aam
pop
scas
imul
test
aaa
out
push
std
sbb
inc
repz
xchg
jp
pusha
daa
jae
and
and
cli
push
sbbl
aaa
aaa
rol
mov
arpl
repz
aaa
pop
mov
cmp
imul
add
shrl
stc
and
mov
dec
mov
notb
jb
fwait
icebp
adc
enter
fmuls
rorb
jns
jo
cltd
pop
std
popf
inc
push
pop
inc
das
inc
xchg
xchg
dec
into
inc
das
sbb
inc
lret
inc
stos
xchg
mov
popa
add
es
test
ds
mov
or
push
rcr
or
push
mov
int3
xchg
repz
xchg
fstpl
cmpsl
xchg
mov
das
stos
js
lret
outsl
in
arpl
mov
fldt
je
dec
jae
insl
add
ja
push
cmpsl
push
push
xchg
mov
and
ja
inc
sub
rclb
lock
jno
inc
aad
add
imul
dec
inc
add
xchg
pop
mov
pusha
jecxz
cmp
lock
lahf
dec
mov
jp
pop
mov
scas
xlat
repnz
cmpsl
adc
push
fdivl
jge
add
imul
sbb
sbb
aam
lea
pop
push
and
cmp
movsl
sub
pop
test
test
pop
idivl
mov
ja
subb
out
into
ss
out
es
shrl
arpl
mov
sub
mov
inc
rclb
or
pusha
rcrb
fbld
pop
arpl
inc
jno
fsubrs
mov
add
mov
scas
cmp
mov
dec
popw
mov
xlat
adc
jae
add
stos
pop
test
repz
sub
lret
inc
mov
loop
jne
dec
dec
test
nop
mov
xchg
inc
and
cmp
lret
in
jg
sti
out
adc
add
testb
lods
dec
outsb
jmp
mov
and
les
scas
xor
and
lods
mov
adc
add
loopne
movsb
aas
outsb
mov
cwtl
sbb
test
flds
dec
fmul
cmp
inc
test
in
insb
test
sub
inc
inc
and
gs
rolb
dec
xor
ret
pop
loop
pop
and
orl
xor
push
add
jp
mov
mov
xchg
sti
bound
cli
addr16
lock
iret
sarl
shll
mov
cmp
call
sbb
mov
sbb
lret
xor
lods
xchg
xchg
push
mov
lea
lods
fwait
nop
insl
xchg
push
jl
jmp
jl
push
dec
xchg
add
mull
mov
lock
pop
dec
andl
inc
push
jge
scas
nop
scas
mov
cld
adc
pop
loope
jp
push
or
xor
pop
imul
xor
cmp
xchg
adc
mov
sbb
hlt
aas
idivb
pop
leave
mov
divps
aam
jne
xchg
cs
aad
inc
call
sbb
andl
das
rcll
cmp
int
repz
sbb
fucomi
mov
xchg
inc
sub
in
mov
lcall
shlb
mov
mov
or
mov
lret
mov
hlt
pop
pop
mov
lods
mov
sahf
in
movsb
ds
push
test
stos
lods
mov
push
pop
cltd
mov
loopne
mov
adc
rcll
push
popa
repz
mov
shlb
int3
adc
xor
imull
and
xchg
test
les
xchg
add
scas
fdivrs
negb
mov
jmp
and
adc
xchg
movsb
dec
pop
xor
sub
fisttps
mov
sub
loopne
or
out
lcall
in
iret
imul
enter
and
jp
sti
fbld
mov
js
jae
jb
mov
fcoms
sbb
mov
mov
pop
sbb
leave
jns
mov
cmp
add
mov
cmpsl
mov
xchg
pop
sub
mov
int
divl
lock
sbb
ja
dec
mov
sub
shlb
aad
pop
aas
sub
or
jno
add
stos
mov
loopne
imul
iret
and
adc
mov
stc
cmp
lret
negl
push
bound
aaa
addr16
mov
cli
sbb
add
ficompl
adc
bound
push
xchg
jbe
or
push
adc
mov
sbb
and
faddl
int3
insl
adc
xchg
ds
sbb
out
push
pop
lcall
mov
call
shlb
in
push
and
mov
cltd
fcoms
and
push
stos
xor
xor
mov
pusha
xor
or
mov
les
test
inc
nop
ljmp
repz
fdivl
inc
lahf
cli
rorb
iret
push
inc
push
add
sub
push
in
and
outsb
inc
hlt
adc
inc
das
jl
fwait
sbb
insl
negb
mov
or
push
fwait
push
or
cmpsb
lock
push
push
adc
adc
add
mov
sub
sbb
xchg
test
fldl
mov
imulb
das
jno
dec
add
xchg
mov
adc
ficoms
jns
jecxz
out
mov
push
mov
mov
add
in
addb
scas
fldl
and
jmp
dec
or
outsb
mov
in
adc
inc
jbe
loope
ficompl
adcb
inc
mov
fwait
int3
repz
outsb
jmp
adc
jbe
adc
int3
addr16
cmp
stc
lds
mov
xchg
push
loope
cmp
std
pop
cmpb
cmp
mov
adc
dec
cltd
xchg
inc
outsb
pop
push
or
inc
jecxz
push
loope
shrb
add
push
pop
fsts
fdivr
fimuls
out
mov
push
xlat
mov
pop
inc
inc
fstpl
cltd
int
xor
pop
inc
lret
push
cmp
addb
in
cmpsb
add
movb
sbb
xchg
mov
xor
mov
fimuls
ret
mov
bound
cmpl
in
mov
mov
inc
dec
enter
xchg
mov
out
mov
mov
jmp
shl
cmpsl
into
push
xchg
xchg
pop
aam
push
mov
roll
jp
rclb
jg
add
fwait
push
pusha
je
imul
call
mov
sbb
mov
arpl
rcr
mov
mov
dec
adc
je
sbb
push
cmp
frstor
js
jp
ja
pop
stos
dec
ret
sahf
cwtl
sti
cmp
mov
xor
pushf
lret
mov
popf
and
add
lret
aam
in
adcb
xor
orl
pop
jle
push
int
mov
sahf
inc
fiaddl
xchg
mov
data16
popa
mov
outsl
jne
push
mov
add
fwait
xor
outsl
xchg
aas
push
ljmp
insl
sbb
insl
sbb
sti
pop
mov
mov
ror
xchg
sbbb
cld
sbb
xlat
ficomps
in
and
xchg
outsb
dec
push
out
aad
arpl
mov
pushf
or
popa
dec
lret
lret
pop
dec
and
mov
push
out
cmp
sbb
stos
int3
cli
pop
loopne
cwtl
fbstp
mov
popa
pushf
fidivrs
jle
loopne
sbb
pop
test
add
inc
xchg
or
movsl
sbb
mov
aas
sub
mov
and
xor
pop
sbb
data16
mov
out
jmp
insb
rorb
inc
or
push
mov
popf
mov
xor
mov
neg
pop
push
add
pop
mov
sbb
fadds
arpl
adc
lcall
mov
adc
std
mov
js
lea
lea
sbb
xchg
cmp
fwait
lods
gs
popa
mov
add
pop
jae
sub
data16
aaa
cld
mov
adc
sarl
paddd
mov
cmp
jbe
repz
in
in
lock
pop
mov
xchg
nop
push
aad
pop
cltd
ds
cli
xor
mov
adc
sub
test
push
mov
mov
push
cbtw
xor
push
repz
std
andb
shlb
mov
loopne
lods
and
xchg
cmp
in
cs
mov
mov
je,pt
arpl
adc
pop
aad
out
jg
sti
out
shrl
push
jmp
inc
enter
js
xchg
sbb
mov
pop
fsubl
out
fistpl
mov
and
dec
insb
test
mov
jecxz
mov
sbb
cmp
imul
mov
arpl
imul
inc
pop
or
jg
xor
dec
rclb
lods
mov
int3
test
in
xor
mov
shl
aas
push
ds
jbe
in
out
pop
sub
xor
sbb
mov
fdivrp
push
imul
leave
mov
mov
ret
mov
repnz
int
push
sbb
or
or
inc
rolb
leave
cmp
mov
mov
jmp
inc
sub
lock
mov
lods
int
testb
repnz
or
jl
test
xor
sbb
sahf
ljmp
test
lcall
stos
out
mov
jl
pop
in
pusha
movsb
sub
subl
xchg
jecxz
and
dec
push
jle
jns
push
clc
daa
loopne
jecxz
iret
jnp
ljmp
pushw
cltd
sub
sub
aam
insb
sbb
repnz
mov
jo
in
mov
mov
fsubl
rorl
sub
fbld
arpl
aam
arpl
sub
inc
xor
in
sbb
pop
jmp
ds
clc
mov
arpl
int3
pusha
mov
push
movl
sbb
ds
imul
das
imul
lock
lahf
outsl
stc
mov
xor
jb
into
mov
dec
mov
dec
out
xor
scas
mov
xor
sub
lea
push
std
xchg
es
fdiv
scas
sahf
or
arpl
inc
lock
rclb
push
add
aaa
mov
push
jge
dec
xor
and
or
ret
push
mov
pop
sbb
imul
dec
push
dec
inc
mov
dec
repnz
out
cld
mov
in
aas
clc
dec
insl
push
repnz
lea
mov
push
mov
sub
loop
in
es
cmpb
mov
sub
repz
xor
jnp
xchg
pushf
aas
push
sbb
dec
adc
rorb
or
mov
jb
add
dec
ficomps
minps
fisubrl
jp
lock
pop
nop
inc
adc
idivb
inc
into
fildl
loope
jp
push
adc
out
pushf
jno
lds
push
into
push
adc
cld
push
dec
xor
mov
sub
cltd
ja
and
pop
dec
enter
loope
in
lret
movsb
pop
inc
aaa
in
xor
cs
test
xchg
shll
ds
shrb
filds
xchg
mov
xor
fbld
fmull
add
add
fstl
mov
mov
repnz
or
mov
test
sarb
loopne
xlat
gs
jge
add
shlb
test
mov
seta
cwtl
push
pop
push
into
cltd
stos
push
xchg
fstps
scas
test
jl
add
cmp
mov
or
dec
or
stos
jne
cmpl
or
inc
aaa
push
adc
sub
push
dec
push
sbb
cltd
jl
dec
imull
andb
fs
xor
ljmp
aaa
xor
cmp
pusha
fbstp
mov
cmp
jecxz
or
daa
cld
mov
pop
sahf
mov
in
lds
jbe
fcmovne
arpl
mov
hlt
mov
fidivrl
pop
pop
cmc
adc
adc
dec
sti
in
dec
or
loop
shll
pop
addr16
xorl
pop
cvtpi2ps
xor
sbb
xor
movsl
cs
js
sub
sub
call
repnz
cmpsl
fiadds
lds
std
mov
xchg
pop
mul
outsl
or
in
int
int3
sbb
sub
xor
popa
ret
mov
xchg
shrb
adc
flds
jo
int3
push
pusha
es
popf
int
pop
lds
data16
sub
int3
aad
cmpsl
daa
sti
jo
aad
mov
and
into
xchg
arpl
jle
push
mov
scas
sbb
sub
cltd
notl
popa
adc
pop
leave
push
js
imul
aaa
popl
mov
and
and
ret
stos
mov
pop
add
inc
mov
popa
imul
imul
xlat
inc
scas
mov
mov
les
mov
stc
iret
lds
shrl
mov
js
sbb
mov
sbb
in
pop
pop
mov
divl
pushf
iret
add
sub
inc
jo
icebp
add
daa
pop
enter
push
push
out
scas
mov
cli
fwait
hlt
add
xor
jl
insl
or
imul
pushf
lods
je
int3
leave
in
mov
lea
mov
jae
lret
mov
enter
mov
sbb
repz
dec
outsb
test
sbb
lods
cmp
ror
lock
outsb
cmc
mov
and
sub
or
test
ss
cmc
cmpsb
jno
add
dec
xor
fstpl
mov
jns
incl
subl
and
imul
pop
icebp
cltd
repnz
mov
cs
scas
aam
cmpl
sub
lcall
push
mov
inc
xor
sti
fwait
pop
pushf
dec
sbb
aas
test
aam
hlt
xor
addr16
loope
add
pop
sbb
in
xchg
into
sub
jnp,pn
or
xor
lret
stc
dec
add
dec
dec
mov
mov
pop
popa
stos
xor
inc
bound
sub
ds
mov
or
les
and
inc
xchg
inc
movsl
bound
repz
fprem1
or
cmpsb
movsb
into
aad
ljmp
sub
sbb
inc
dec
cwtl
sub
jge
test
aas
stos
xchg
nop
addb
sbb
insb
jp
mov
das
rolb
cwtl
jmp
rolb
rcl
jle
inc
cmp
ss
xchg
into
sub
adc
test
popf
push
int
icebp
repz
ret
push
lret
lret
movsb
sbb
movsb
cltd
dec
das
mov
pop
mov
lcall
aas
cmp
xchg
mov
sbb
or
and
xchg
mov
push
jns
loop
inc
arpl
lods
add
loopne
call
inc
fadds
shlb
mov
pop
addr16
jb
jae
sbb
add
fsubrs
test
imul
or
mov
and
mov
jbe
fsubr
in
and
mov
insb
mov
lods
lock
and
mov
xlat
add
dec
enter
in
insb
imul
cli
rcll
or
mov
or
fs
inc
xchg
pop
sahf
sti
aas
call
jb
push
xor
jbe
imul
jb
cmpsb
hlt
jo
sub
mov
jp
sbb
cmc
iret
fsubr
push
mov
push
sub
push
xchg
movsb
xor
dec
loopne
fstpt
repnz
enter
xchg
out
cli
loop
or
cmp
movsb
mov
xchg
inc
out
inc
das
cli
fiadds
xchg
aam
or
ljmp
jnp
mov
xchg
addl
mov
mov
cmp
jge
push
out
cmp
mov
test
and
iret
jge
inc
sub
arpl
std
das
jnp
push
jo
sub
lcall
jle
test
rcll
add
xor
outsl
jecxz
push
sbb
mov
jne
cs
stc
shlb
pop
inc
data16
adc
cli
adc
xorl
xchg
mov
inc
sub
les
roll
push
xchg
jge
test
jnp
inc
icebp
and
lahf
filds
movsl
mov
shrb
sti
jp
cmp
cli
sub
cs
ds
pop
cmpsl
lds
decl
stos
add
sub
jg
int3
cwtl
mov
xlat
jo
jl
mov
mov
std
mull
mov
fs
sub
push
xorb
xchg
xor
ljmp
inc
add
xor
cmp
cltd
mov
push
inc
inc
cmp
mov
push
pop
xchg
lds
addb
rolb
sahf
repnz
push
dec
jge
sub
mov
mov
or
pop
ret
dec
mov
jmp
adc
aaa
loop
sub
adc
adc
mov
mov
xor
push
arpl
pop
xor
pop
or
hlt
and
pop
cmp
mov
mov
gs
jnp
xchg
cmp
cmp
cld
imul
pop
loop
pop
repz
jmp
es
mull
mov
pop
jecxz
loop
xchg
mov
stc
push
lea
mov
jne
pop
inc
adc
or
lds
clc
in
inc
andl
out
out
stos
shlb
repnz
dec
jns
stc
mov
xor
inc
jmp
and
mov
cmp
outsl
sub
jb
mov
sbb
int3
jno
icebp
or
sub
sarb
ds
cmp
and
push
mov
lds
dec
mov
cmp
adc
out
mov
jne
cld
jmp
xchg
sbb
jns
sahf
loopne
fnstsw
mov
fadd
test
mov
xor
arpl
cwtl
out
mov
icebp
mov
ds
stos
leave
sub
pop
adcl
and
js
push
gs
mov
insb
iret
mov
addr16
and
cli
outsb
das
mov
cmp
aaa
push
roll
andl
and
popf
inc
push
insl
add
pop
add
jbe
fisubl
mov
in
jle
push
ret
in
sbb
dec
in
sbb
push
jmp
xor
shll
test
imul
bnd
push
mov
mov
out
pusha
jbe
insb
daa
out
push
push
fildl
arpl
mov
loop
pop
nop
lret
imul
xor
inc
cmp
xchg
push
mov
gs
lods
in
adc
shlb
and
fcmove
repz
inc
xchg
xlat
xchg
loope
cwtl
mov
dec
or
inc
cs
cs
mov
testb
push
lahf
or
add
cmp
fwait
repnz
test
lret
mov
adc
ss
movsl
subb
jmp
mov
or
fimull
out
sar
push
mov
mov
sbb
push
or
mov
outsb
inc
pushf
lcall
mov
mov
std
pop
repz
decb
clc
dec
incb
and
jo
push
pop
push
lods
pushf
je
test
dec
aaa
jnp
mov
and
mov
sbb
inc
sub
jno
pop
sub
pop
lods
imul
push
jns
cltd
jmp
sub
jl
ret
mov
hlt
jp
jae
loopne
not
fldcw
cwtl
pop
jns
cmp
push
lods
xor
cwtl
jne
push
sbb
xchg
fidivl
pop
add
nop
fdiv
and
push
mov
enter
jae
mov
or
or
cmp
lret
call
adc
ss
vrcpss
cmc
cmpsb
pop
pop
add
sbb
call
sub
mov
out
dec
sbb
das
loop
scas
hlt
mov
andl
dec
out
test
adcl
push
sbb
std
icebp
xchg
or
ss
mov
outsb
mov
neg
jo
jne
xor
lods
pop
scas
mov
mov
andb
sarb
jnp
mov
mov
mov
adc
ljmp
mov
adc
lds
xchg
adc
jmp
aas
push
xchg
in
mov
int
lods
loop
and
outsl
aas
pop
mov
ja
movsb
xor
cmp
lahf
xor
fwait
xorl
xchg
pop
pop
xchg
jecxz
mov
dec
test
pop
fwait
push
inc
imul
sbb
cltd
push
adc
pop
int
pop
xlat
scas
or
mov
push
xchg
lret
sbb
ja
dec
shlb
mov
dec
lods
add
ja
leave
adcl
and
daa
ds
dec
call
adc
sahf
cmp
and
in
adc
imul
loope
xor
fs
les
mov
jae
movsl
xchg
and
iret
mov
mov
adc
bound
out
xchg
mov
test
dec
xor
cmp
test
es
cwtl
mov
jbe
mov
mov
out
sbb
jnp
imul
loopne
lahf
mov
arpl
jp
add
adc
mov
fisubrl
mov
pop
inc
pop
cmp
inc
fsubs
xchg
adc
adc
xchg
pushl
loop
jle
push
ss
lret
push
pusha
dec
in
jle
outsb
and
mov
ret
xchg
pop
test
adc
test
and
mov
dec
adc
jg
sub
mov
xchg
cli
lret
leave
movsb
inc
add
inc
jno
push
mov
xor
loope
shll
inc
into
pop
cmpsl
cmpsl
lcall
andl
pop
add
bound
cmp
inc
test
sub
aaa
jne
mov
add
into
daa
add
sub
xor
add
xchg
fstpl
fwait
xchg
scas
pushl
lods
pop
bound
pop
jecxz
sbb
cltd
sub
clc
sbb
dec
xor
mov
clc
adc
popa
pop
int
in
mov
dec
int
push
sti
mov
xchg
std
inc
movb
les
in
mov
pop
pushf
sbb
jge
das
loope
je
out
frstor
dec
push
and
mov
cltd
sub
addr16
je
je
or
jg
dec
pop
mov
pop
sbb
lret
ljmp
jle
sbb
push
aas
out
mov
fsubs
fcmovnbe
test
xor
pop
push
and
lahf
push
out
cmp
push
mov
cmp
pusha
mov
adcb
xchg
mov
iret
ds
and
dec
sub
sub
jno
or
int
aam
mov
shlb
adc
aas
mov
sub
lcall
jne
inc
sub
pop
test
xor
push
sub
or
adc
mov
loope
xchg
ja
cmpsb
andb
iret
adc
mov
cs
in
pop
dec
fwait
jne
repnz
inc
add
mov
mov
and
flds
in
sub
mov
adc
push
push
mov
or
and
pop
xchg
mov
inc
jle
cmp
int
fwait
mov
lds
adc
ja
xchg
jns
cmp
fs
popa
out
mov
dec
arpl
shr
and
stc
out
jge
iret
sarb
xchg
stc
dec
inc
icebp
push
mov
and
mov
sbb
mov
mov
jge
imul
pop
nop
cli
sbb
ret
cmpsb
jne
adc
cmc
fs
jb
mov
mov
int
adc
repz
movsb
sub
and
or
shll
mov
fcmovnbe
inc
sbb
adc
mov
pop
push
divb
imul
lret
dec
adc
add
push
push
loop
ret
mov
daa
lahf
lock
scas
sbb
imul
ja
push
xchg
insl
mov
inc
aad
adc
int
or
mov
mov
stc
shld
xchg
mov
data16
rorl
cwtl
fcomip
inc
push
jne
inc
xor
xor
popa
jo
xchg
cmp
lret
sbb
push
clc
icebp
hlt
jbe
and
fs
movsb
testl
dec
lods
xor
inc
pop
ret
int
sbb
nop
cmp
dec
inc
xor
nop
mov
sti
pop
xchg
inc
pop
cs
jge
lahf
inc
test
mov
stos
sti
xchg
cltd
pop
push
mov
popa
push
jle
or
flds
and
dec
jns
lods
sub
leave
fidivrs
mov
mov
push
in
cld
lock
jnp
mov
cltd
cld
or
rolb
inc
sbb
sbb
jns
sub
mov
out
inc
addl
inc
mov
dec
lahf
xchg
popa
mov
shlb
lock
stos
inc
lds
mov
out
push
dec
mov
stos
mov
pop
cmp
fwait
xchg
test
std
jg
inc
jns
in
lock
cwtl
clc
and
cmp
out
xchg
enter
imul
adc
test
xor
xchg
inc
add
cmp
hlt
cmp
sub
cmp
dec
aaa
lcall
fldenv
jno
jle
into
imul
imul
fisubrl
int3
lock
mov
jle
aad
mov
fbstp
ret
out
call
sarb
ss
outsb
clc
mov
xchg
mov
sub
cmc
add
pop
mov
jo
inc
mov
pop
cmpsb
mov
pop
cmp
sbb
insb
or
fs
jle
nop
lret
movsl
jo
fmuls
adc
test
jnp
pusha
jecxz
leave
fdivl
into
cmp
lods
clc
sahf
fs
jns
xorl
leave
and
sub
std
add
rolb
push
sbb
dec
dec
je
lea
and
imul
push
push
cmp
scas
jmp
test
cld
test
movsl
ret
insb
cs
inc
xchg
imul
sbb
jge
xchg
cmc
jl
inc
push
mov
scas
push
sbb
adc
jp
mov
sbb
push
push
popf
push
sub
add
in
push
add
jecxz
pop
jne
sub
rcr
inc
xchg
into
push
div
adc
lret
in
sbb
cltd
ret
ds
xchg
adc
adc
push
push
jg
xor
mov
xchg
dec
or
imul
lds
jl
sti
inc
mov
sub
add
imull
jecxz
jnp
and
pop
decl
fs
and
scas
ljmp
je
push
in
cwtl
ret
xor
jb
shlb
out
jg
sub
adc
mov
mov
outsl
mov
xchg
jmp
and
push
xchg
into
pop
rcrl
xor
mov
daa
enter
mov
test
dec
jecxz
imul
fcomp
sbb
sub
sar
mov
mov
mov
and
push
mov
enter
std
pusha
mov
xchg
inc
test
sti
pop
lahf
pop
in
movsl
lods
adc
push
mov
push
xchg
in
repz
push
xchg
sbb
arpl
xor
dec
shlb
out
negb
xchg
out
out
xor
mov
js
sub
ret
mov
divb
mov
loope
sar
sbb
adc
rol
lods
daa
cmp
pop
xchg
add
xchg
sbb
je
mov
in
enter
fwait
adc
mov
fcmovb
mov
cld
or
add
imull
inc
loope
test
repz
imul
enter
mov
or
jb
jmp
inc
loope
testb
mov
mov
mov
add
xor
pop
sbb
sbb
jbe
push
xchg
adc
xchg
mov
into
imul
and
sub
sbb
outsl
xchg
in
dec
xor
pushf
fisttpl
test
xchg
xor
cmp
mov
xchg
xor
lods
cmp
idivl
mov
inc
scas
inc
sar
daa
xchg
idivl
mov
push
mov
pop
pop
test
xchg
mov
mov
iret
xor
fsubrs
mov
lret
popf
mov
inc
ret
add
mov
lcall
je
push
pop
scas
stos
mov
repz
dec
cld
sbb
mov
mov
inc
test
test
mov
or
sub
sub
ficompl
jnp
repnz
push
or
and
mov
cmp
jb
jb
xchg
test
mov
stos
nop
ficoms
leave
push
pop
adc
adc
or
sbb
lahf
stos
or
lock
out
xchg
cmpsl
pop
push
push
inc
ljmp
jle
fistpll
dec
cmp
add
xor
jb
sbb
lods
cmp
ja
cwtl
mov
lea
cmpsb
mov
and
mov
das
and
xchg
cmc
push
and
inc
pop
cwtl
bound
fdiv
or
out
outsl
lods
ljmp
sub
inc
adc
xchg
push
xor
into
cmp
out
fstl
xor
xor
out
mov
xor
push
das
out
xor
cmp
fiadds
jmp
mov
sbb
jg
sbb
jl
push
pop
xchg
inc
dec
xchg
cmp
push
jbe
jge
popl
inc
inc
stc
or
movsb
sub
mov
iret
lea
sbb
lea
adc
sbb
insb
js
nop
test
jecxz
pop
mov
cmc
push
mov
cmp
les
ficomps
dec
test
inc
jae
mov
sahf
sbb
sarl
and
mov
jbe
sarb
xor
push
sub
sub
rorl
push
mov
xor
out
shl
inc
mov
mov
out
mov
imul
loop
flds
cmc
inc
xchg
call
xchg
pop
mov
mov
int
lret
or
ss
roll
loope
adc
dec
jg
jl
jns
dec
mov
bound
add
addb
ds
xor
mov
jp
pop
xor
sub
in
hlt
mov
out
das
mov
adc
jp
xchg
sarl
dec
test
iret
sti
lods
push
xchg
or
dec
hlt
xorb
fstps
inc
jae
lcall
pushf
out
ffreep
adc
add
mov
sub
pusha
and
loope
repnz
xor
pop
pop
sti
test
nop
aas
add
in
xchg
mov
in
pop
mov
addr16
xor
ds
cwtl
jne
outsb
mov
xchg
in
pusha
dec
push
mov
mov
push
push
push
mov
insl
and
outsb
cld
push
cmp
negl
or
popa
movsb
ss
jo
div
lret
cmp
cli
sahf
fwait
loop
adc
ror
imul
mov
dec
jg
xchg
cli
inc
push
leave
or
stos
outsb
test
mov
jae
mov
aaa
scas
jno
adc
lock
add
aas
jecxz
shlb
cmp
sbb
jo
div
sti
jp
sbb
adc
lds
push
scas
mov
xchg
ja
mov
jae
adc
or
std
cmp
mov
cmpsb
mov
inc
aaa
test
iret
pop
pop
out
out
je
dec
lret
mov
cmp
xor
mov
xchg
push
scas
notb
pop
inc
mov
inc
and
push
sub
test
xchg
xchg
sub
mov
iret
xor
loopne
mov
xchg
pop
aad
pop
dec
repz
shrl
fcomip
or
inc
jb
stos
test
out
orl
fwait
fdivrs
scas
mov
push
outsb
cmp
push
lcall
fbstp
mov
xorl
es
pushf
or
and
mov
imul
xchg
dec
cli
pop
lods
movsb
lret
mov
mov
fcmove
adc
fimull
out
lahf
int3
out
in
ds
jmp
ja
pop
mov
mov
push
push
pop
stc
mov
mov
jp
inc
jg
push
les
aas
rcll
sbb
or
jae
aad
scas
jmp
inc
fdivrl
outsl
aam
add
call
aam
aas
fwait
or
mov
mov
push
dec
cmp
ficoms
push
repz
mov
test
ficomps
hlt
jae
ret
jle
adc
xor
icebp
adc
jns
xlat
xchg
rcll
push
pop
inc
lods
sub
lcall
in
adc
insl
sub
data16
sbb
insb
mov
inc
ret
fsts
std
repz
daa
mov
mov
dec
jge
enter
hlt
cli
xchg
punpcklbw
stos
sub
mov
rorl
addr16
and
mov
in
xchg
ret
out
and
jecxz
ror
xor
or
xchg
out
cs
pmovmskb
sti
psubb
add
fidivrs
push
pop
daa
xchg
cmp
push
gs
fdivrs
rcl
inc
add
je
mov
call
dec
cmp
aaa
scas
jnp
call
adc
rclb
sub
fstps
test
xorb
pop
push
jnp
je
xchg
out
nop
jg
mov
adc
sbb
movsb
movsl
pop
roll
test
adc
pop
sbb
clc
pop
mov
nop
or
jo
call
xor
lods
pop
stos
mov
adc
popa
pusha
pop
xchg
insb
sub
sbb
popf
lea
mov
cmp
sub
enter
push
or
sbb
cmp
jp
fwait
aam
or
lret
push
push
inc
xchg
divb
out
clc
jl
push
inc
or
sub
ret
into
cmp
adcb
int
ljmp
cmp
push
aas
fwait
add
loope
jle
enter
stos
cmp
pusha
popf
stos
jge
pop
sbb
lds
sbb
push
ds
sub
dec
js
rcll
shll
xor
pop
fisubrs
mov
lods
mov
loopne
dec
repnz
sbb
sahf
sbbl
das
xor
loopne
dec
xorl
sub
mov
repz
lea
call
cmpsl
ds
sbb
push
add
inc
scas
mov
test
mov
mov
inc
dec
jo
dec
pop
hlt
pop
inc
icebp
dec
xlat
sbb
jl
das
push
gs
mov
mov
fsubrs
cmpsb
cmp
faddl
ficomps
imul
mov
lret
xlat
mov
jecxz
mov
sbb
sbb
xlat
dec
sub
xchg
sub
insl
mov
push
inc
xchg
scas
add
mov
jge
and
jg
jmp
out
imul
repz
clc
mov
lret
jmp
add
stos
jb
pop
jge
sbb
arpl
push
xor
std
gs
add
jno
push
push
cmp
xchg
mov
lods
jge
cmp
daa
jecxz
frstor
into
cmp
rcrl
mov
mov
mov
mov
dec
cmpsl
test
fwait
cmp
sub
mov
and
mov
xor
daa
fdivrl
mov
movsl
in
popf
cmc
push
shll
ficoml
lods
mov
xchg
test
fs
mov
lods
and
test
sbb
test
shrl
aas
sub
repnz
push
adc
cmp
scas
xchg
xchg
rolb
shlb
cs
cmp
pop
cmp
int3
mov
decl
les
mov
add
out
lret
push
xlat
lahf
jns
mov
sub
js
push
fstpt
push
into
and
cltd
or
in
sub
rclb
cmpsl
mov
and
jns
push
cmpsl
sbb
sub
mov
jl
push
or
add
jne
jmp
mov
or
rorb
adc
dec
xchg
popf
int
jle
push
mov
sarl
adc
push
jmp
icebp
insb
fstp
ljmp
or
cs
out
mov
pop
jns
or
mov
lock
test
data16
out
mov
push
repz
aaa
inc
pop
in
int3
ss
test
jbe
sahf
leave
das
mov
dec
pushf
pop
movsb
inc
in
sbb
outsl
addr16
cmpsb
mov
add
cwtl
mov
or
outsb
ficompl
dec
jmp
ffreep
test
and
or
hlt
sub
adc
sahf
xchg
int3
dec
sub
inc
mov
fildl
mov
movb
aas
jle
jl
jb
xchg
cmp
lea
push
jmp
test
jmp
arpl
fcmove
jge
cmc
shld
and
clc
dec
sub
xchg
mov
ret
or
aas
lahf
pop
lret
xor
psraw
and
inc
ret
pop
leave
cmp
inc
sub
out
inc
ret
arpl
cmp
pop
movsl
cmpsl
push
sub
insb
arpl
fsubl
and
push
mov
rolb
test
sbb
xchg
into
mov
xor
incl
insl
lods
pop
push
in
jno
sbb
lods
jnp
jp
jno
or
jae,pt
int3
cmpsb
rcr
in
mov
xchg
js
movsl
xchg
pushf
cli
orl
in
jg
ret
in
xlat
ret
fistps
roll
aad
cli
fwait
dec
cltd
sub
add
inc
inc
adc
jbe
ss
fwait
mov
push
shrb
dec
cmp
shlb
in
pop
inc
sbb
movsb
pop
imulb
aad
sbb
loop
inc
pop
js
inc
jmp
aad
dec
nop
push
sbb
cltd
cmp
push
loope
aad
lods
pop
push
add
mov
jo
push
xchg
iret
fmuls
inc
mov
mov
cli
jns
or
stc
add
cwtl
dec
mov
and
test
xlat
push
clc
insb
mov
jle
pop
fwait
test
add
mov
push
cmp
and
jge
inc
mov
pop
ja
ficoms
or
push
filds
mov
xor
in
aaa
xchg
xor
xor
mov
das
jle
pop
pop
leave
push
fmuls
mov
mov
dec
je
add
xchg
scas
and
or
fsts
jne
push
push
push
addr16
push
daa
inc
inc
fs
enter
gs
inc
cs
inc
in
dec
insl
inc
clc
inc
pop
lods
xchg
je
out
stc
lods
addr16
lret
or
push
mov
jle
data16
sub
les
popa
jnp
mov
mov
pop
push
inc
clc
lret
ret
pop
data16
adc
mov
cwtl
lret
pop
mov
movsb
stc
mov
scas
insl
sub
pop
and
scas
ds
mov
aad
imul
push
cmpsb
test
cmpsl
lret
loopne
and
outsl
sub
pop
add
scas
pop
stos
ficomps
hlt
mov
fwait
cmpb
add
sti
or
ljmp
xor
hlt
movsl
mov
mov
mov
int
aam
js
and
nop
jae
lret
lret
shrb
cmpsb
cld
in
arpl
icebp
das
mov
push
push
pop
lcall
add
pop
fistl
lea
popa
add
gs
dec
jmp
cmpb
sbb
dec
mov
jns
jbe
cmp
cltd
push
out
push
lcall
movsb
jg
xor
or
add
lods
ffreep
out
popf
add
lods
cwtl
fnsave
icebp
lods
loope
addl
pop
jge
call
push
bound
sahf
adc
mov
add
pop
pop
and
or
jmp
fistps
daa
sbb
sbb
iret
lret
lret
push
and
cmp
hlt
lock
or
sub
mov
aam
ljmp
mov
int
xchg
scas
lret
lret
push
mov
and
mov
pusha
ds
xor
movsb
mov
cmp
sub
popf
push
dec
sti
or
je
jmp
pusha
jecxz
fnstcw
out
inc
lods
rcrl
notl
jb
xor
in
dec
jle
cltd
sbb
add
and
or
sub
pop
testb
xor
das
jle
lret
shll
mov
dec
jp
ss
xchg
or
fildl
ja
cwtl
cmp
jne
loop
cs
ja
push
jmp
sbbl
jne
pop
out
pop
sub
cmc
jp
push
fldt
cmpsl
mov
xchg
or
xchg
enter
push
cmp
add
rcrl
sbb
aas
cmp
add
mov
mov
flds
cmp
popa
mov
rcr
mov
xchg
js
dec
test
ja
das
pop
xchg
test
lcall
xor
fisttpl
xor
jge
mov
mov
lods
bound
ds
lret
negb
sbb
xor
cld
inc
add
stos
add
mov
dec
sahf
xchg
daa
mov
pop
rclb
xchg
inc
imul
imul
sarb
pop
cmp
xchg
dec
mov
out
cld
inc
jl
pop
and
jne
and
aad
repz
mov
stos
pop
xchg
lods
mov
lock
outsb
push
jb
add
imul
popf
and
lea
and
sbbl
pop
sub
push
shll
movsl
pop
add
push
jbe
cli
mov
cmp
fisttpl
pop
iret
cwtl
cmpb
xchg
xchg
icebp
loop
mov
outsb
add
or
daa
jecxz
popa
xor
in
sub
inc
into
or
ret
dec
scas
mov
in
mov
push
loopne
dec
iret
psubusw
mov
mov
dec
cmc
sbb
cld
xchg
call
inc
dec
cmp
cmp
pop
das
sbb
rcl
enter
ret
rorb
pop
test
repz
outsb
fimuls
scas
jae
imul
pop
jmp
add
cltd
cmp
shrb
cmc
mov
int3
adc
and
jl
push
mov
pop
dec
test
lock
arpl
das
aad
and
push
pushf
push
pop
mov
add
and
xchg
outsl
mov
inc
dec
xlat
mov
mov
lcall
fmul
mov
dec
call
sub
mov
sbb
mov
sbb
ljmp
xorb
shrl
ret
clc
xor
lcall
xorb
xchg
lret
aaa
mov
fidivrl
pop
movsl
add
mov
shlb
jg
ficoms
fstpt
out
push
sub
fadd
aam
cli
xchg
lret
out
cmp
mov
call
lods
lret
test
mov
fwait
mov
movsb
cmp
push
lret
clc
stos
or
les
inc
stc
add
dec
push
jo
jp
inc
lcall
push
repz
mov
pop
push
mov
lea
ja
cld
inc
xchg
mov
cmp
leave
jmp
aad
jmp
xor
subl
push
sbb
bnd
bound
imul
lea
mov
mov
or
fsub
insl
imul
mov
ret
sbb
icebp
dec
xchg
xchg
xchg
sbb
push
addl
cmp
cmp
aad
shll
push
mov
mov
shlb
sub
adcl
mov
sub
inc
into
push
pop
mov
inc
sub
outsb
adc
gs
aad
or
push
ss
imul
mov
scas
inc
mov
stos
dec
xchg
stos
mov
test
and
sar
mov
in
or
test
iret
arpl
jo
fbld
wbinvd
out
pop
and
push
lahf
cmp
les
ja
push
mov
lods
sbb
push
adcl
test
xchg
xlat
sub
mov
loopne
in
sbb
pop
out
jnp
sbb
repnz
pop
ret
xor
in
imul
cmp
rorb
mov
add
dec
arpl
pop
and
inc
xchg
pop
ljmp
mov
mov
push
loop
bound
shrl
cmpsb
or
mov
push
shrl
mov
in
adc
dec
or
ds
push
loopne
jmp
mov
aad
loope
lahf
fwait
aam
sbbb
in
jmp
inc
lods
repz
mov
add
xchg
arpl
inc
mov
push
mov
xor
mov
mov
and
xor
pop
insl
je
jecxz
push
negb
pop
mov
and
int
sbb
dec
sbb
cmp
dec
and
test
xchg
pop
fidivrs
mov
jo
mov
xchg
imul
mov
icebp
mov
pop
ret
sub
jne
rorl
adc
out
inc
push
xchg
add
pop
lods
dec
xor
cld
cmp
sbb
or
pop
adc
mov
xlat
xor
test
sbb
pop
jne
xchg
cld
dec
xor
cwtl
mov
lret
jg
push
outsl
jnp
mov
js
push
test
jno
imul
adc
movsl
cmpsl
into
repnz
int
and
xor
fsub
inc
mov
xor
push
pop
mov
std
xor
push
push
out
cwtl
and
ss
stc
dec
lret
in
jge
or
add
and
xchg
mov
sahf
fwait
out
bound
cwtl
ja
repnz
hlt
xchg
push
xor
cmp
xor
mov
mov
xlat
loope
pop
adc
mov
cli
xor
mov
push
scas
movsl
xchg
shll
xor
lret
adc
arpl
into
mov
or
add
imul
iret
jns
clc
cmp
dec
cmp
outsb
xlat
int3
pop
push
push
mov
scas
sub
mov
int
jno
jge
inc
cmpsb
add
jle
mov
sbb
popf
or
popa
mov
loopne
dec
fwait
mov
jg
and
lahf
push
pop
pop
inc
push
xchg
sbb
sbb
daa
loop
jl
hlt
dec
das
push
fs
outsl
and
and
sub
jno
push
leave
inc
repnz
fistps
nop
jge
jecxz
testl
cmpsl
lods
les
adc
daa
mov
xchg
xor
js
test
xchg
lret
xor
cli
adc
std
outsb
cmp
int3
mov
adc
sub
movsb
repz
lea
cmc
push
repnz
pop
jo
insl
xchg
mov
int3
out
ljmp
scas
test
cmp
test
sbbb
repz
jnp
push
xchg
cld
mov
push
repz
in
clc
mov
ret
lds
mov
mov
or
addr16
push
jmp
or
mov
jmp
pop
xchg
notl
imul
sub
fsubr
adc
lods
lock
and
pusha
inc
pop
xor
jp
mov
cld
sbb
cmpsl
push
cmp
xchg
das
push
jae
mov
aaa
mov
and
lret
call
cli
int3
std
mov
sbb
dec
leave
imul
orl
add
xchg
leave
mov
fldcw
adc
addb
test
pop
xor
out
cmc
adc
aaa
xchg
ja
das
mov
fadd
int
into
sbb
jns
jns
xchg
mov
xor
mov
add
and
pop
or
push
cmp
ljmp
in
xchg
push
push
int3
fisubrl
mov
and
and
add
xorb
push
adc
insl
or
loopne
sbb
sub
add
push
mov
shrb
xchg
mov
and
repnz
fwait
xchg
lcall
leave
jne
clc
mov
pop
ljmp
jne
fsubp
cld
shr
xchg
cwtl
pop
or
xchg
data16
insb
imul
lret
push
xor
sbb
push
rorl
push
sbb
push
shr
xchg
inc
pop
sub
cmp
mov
hlt
rol
test
jns
lods
xor
mov
push
inc
xor
push
sbb
mov
outsb
je
mov
and
int
push
cmp
cmp
xchg
lret
mov
cmp
dec
and
cmpsl
xor
or
inc
jge
cltd
mov
mov
adc
fiadds
sbb
cli
jns
dec
mov
inc
std
inc
jmp
sahf
and
nop
ss
sti
or
and
fwait
dec
add
lret
fistpl
imul
lock
fstpt
fninit
fnstsw
or
and
mov
fstp
sub
mov
leave
aaa
cmpsl
cmp
or
aaa
and
inc
xor
adcb
cmp
lock
fldenv
mov
push
clc
push
lret
test
sbb
cmp
sbb
dec
shlb
je
add
cmp
gs
lcall
mov
scas
mov
and
jmp
orb
fisttps
push
jns
sub
arpl
jae
lret
outsb
push
push
in
push
mov
stc
push
jp
mov
fiaddl
jb
ja
out
mov
sbb
popf
jmp
sub
add
shll
push
push
dec
mov
fldenv
xor
jp
sbb
xor
movsl
or
pop
cmp
sahf
pop
mov
cmp
dec
push
mov
stos
sbbb
dec
adc
andl
divl
mov
aas
int3
or
rcr
je
add
fs
subb
lods
or
shl
das
pop
test
fsubrs
pop
xor
push
jnp
sbb
lcall
addr16
lcall
aas
add
add
add
movsb
inc
ds
mov
repz
test
or
ja
fsubrs
ss
test
lods
rorb
push
int
nop
int3
scas
scas
out
sub
mov
rorl
mov
and
xor
lds
dec
xor
idivb
inc
js
shlb
das
cli
scas
or
fistpl
movsb
mov
dec
cmp
mov
jg
cmpl
ret
xor
lods
mov
movsb
test
js
ss
sbb
ret
xor
leave
adc
adc
cmp
std
hlt
mov
push
into
mov
mov
pusha
negb
out
clc
and
cmp
bound
or
cwtl
cmp
int
int
lock
xchg
pushf
into
jmp
push
out
cs
repnz
inc
int
lock
imul
mov
outsb
pop
xchg
out
sbb
imul
lcall
in
ret
push
stos
mov
jg
sub
sahf
scas
je
mov
cld
mov
js
sub
dec
int3
out
and
sbb
iret
lods
sahf
mov
push
sbb
inc
out
popa
aam
cld
cmp
rol
repz
cmp
cmc
lahf
push
mov
repz
inc
adc
jae
ret
ljmp
pop
outsl
test
inc
out
mov
push
xlat
and
jle
cmp
les
ret
cwtl
xchg
mov
push
lcall
das
and
imul
shl
mov
cmp
addl
rcll
adc
mov
mov
and
js
sbb
push
xchg
jno
xor
gs
mov
adc
jge
mov
mov
xor
jl
fsubl
adc
out
inc
psrlw
xchg
xchg
jae
jl
xor
jnp
and
and
cmp
sti
arpl
sub
lret
xchg
sbb
aas
add
push
shl
mov
push
fwait
lods
mov
ds
test
mov
les
std
mov
xor
in
mov
es
pop
leave
fsubs
in
fsubs
insb
pop
decl
push
lods
xchg
dec
lret
mov
or
cmpsb
xchg
sarb
xor
add
rcrl
inc
or
repnz
loope
mov
cmp
std
addr16
insb
ds
das
pusha
ret
sbb
lret
xor
loop
int
fwait
xor
sti
repnz
xor
loop
mov
frstor
loopne
jmp
xchg
int
lods
add
rorb
push
mov
nop
in
lret
push
dec
adc
xchg
dec
test
hlt
xchg
jmp
arpl
mov
add
aas
mov
movsl
mov
fcoml
jo
clc
xor
xor
repnz
mov
aas
loopne,pt
scas
cmpsb
jg
fnstcw
mov
outsl
insb
sbb
dec
mov
dec
cld
aad
shr
fpatan
push
adc
mov
add
adc
lock
cmp
inc
and
mov
fsubrs
hlt
dec
xchg
inc
mov
cmc
inc
jle
jnp
mov
pop
inc
adc
xchg
xchg
add
pop
loop
ja
data16
or
adc
add
out
or
sbb
adc
xchg
jmp
cmp
xor
sub
scas
mov
jns,pt
test
dec
cmpsb
inc
int
mov
ss
mov
add
pop
mov
dec
addr16
inc
push
cmp
pop
ljmp
sbb
push
dec
les
mov
daa
test
lods
sbb
pop
addb
ret
mov
in
adc
imul
jmp
rcrb
cmp
sarl
dec
loop
sar
lds
sub
out
sarb
xchg
cmp
mov
dec
lret
jmp
or
add
je
pop
push
cmp
xchg
stc
add
arpl
push
stc
cmpxchg
scas
dec
icebp
jle
cmp
dec
cmp
rcrl
imul
mov
dec
fstps
dec
std
add
jne
into
test
jno
enter
arpl
aad
imul
ret
xchg
mov
dec
push
imul
jp
es
fstl
ds
sbb
or
movsb
shlb
lds
or
ds
scas
into
pop
pop
xor
hlt
sub
pop
inc
mov
enter
xchg
lret
es
lahf
out
ljmp
pop
mov
push
sbb
in
xchg
and
shl
pop
jnp
cli
xor
bound
pop
pop
lcall
lret
pop
cmovnp
cmpb
xchg
roll
movsl
and
xor
cmp
mov
dec
jl
andb
mov
push
jmp
fsubrp
mov
pop
scas
pop
insb
pushf
addr16
cmp
mov
ss
dec
jmp
and
pop
and
xchg
and
push
in
cmp
sti
out
add
push
jo
fisttpll
dec
les
xchg
add
mov
sbb
rcll
dec
loope
movsb
mov
mov
ss
jbe
mov
push
adc
xchg
pop
negl
sbb
in
jp
ret
aad
push
pop
cmp
aam
cmp
mov
cli
fs
dec
loope
jle
clc
xlat
loopne
test
pop
add
dec
sbb
mov
test
ljmp
dec
movsb
and
jg
and
ret
xor
fs
inc
mov
sahf
test
frstor
pop
dec
int
ja
movsl
lcall
push
add
jecxz
push
inc
mov
sbb
bound
loope
testb
outsl
sbb
xchg
jnp
or
and
ja
xor
mov
dec
inc
mov
sub
sahf
and
mov
push
fwait
and
jbe
or
outsl
clc
inc
lcall
loop
jmp
adc
xor
xchg
mov
mov
lret
fisubs
inc
lahf
xor
mov
lcall
outsb
outsl
in
add
jle
test
sbb
out
sub
mov
xlat
and
lahf
stc
pop
and
icebp
ds
xchg
icebp
mov
aad
sub
das
les
push
adc
add
fisttpl
xchg
loope
jp
cmpsl
jmp
dec
les
inc
push
addr16
scas
rep
jb
jne
adc
ret
hlt
xchg
test
sbb
add
scas
pop
imul
lahf
adc
into
sbb
inc
lahf
subb
out
lods
std
jmp
xchg
xlat
bnd
ds
sub
pushf
push
push
ret
sbb
dec
push
jbe
or
mov
jecxz
cmp
sti
stos
jecxz
sbb
inc
sahf
popf
xchg
ret
cmc
popf
cltd
xlat
ja
mov
push
mov
cmc
inc
push
sub
sbb
xlat
push
push
insb
in
icebp
xor
out
xlat
imul
jecxz
xchg
daa
pop
ja
pop
aam
and
fildl
mov
xor
dec
movsb
sahf
mov
lods
cmp
sbb
sbb
ds
pushw
aad
dec
out
add
aaa
test
inc
sub
cmp
lods
cwtl
or
or
or
addl
add
scas
push
xor
jg
or
insb
inc
jmp
push
mov
test
pop
mov
mov
stc
and
bnd
push
push
mov
ss
mov
lock
cs
out
jo
fwait
xlat
int3
test
cwtl
mov
out
dec
sub
xchg
cmpsl
push
leave
inc
cmp
pop
filds
leave
sub
jle
adc
out
fnstcw
cld
cmp
cmp
mov
sbb
xchg
add
xchg
or
pop
aaa
leave
negl
lds
sub
xchg
jmp
dec
sbb
mov
adc
fldl
and
and
test
add
jbe
and
push
xchg
pop
repnz
int3
inc
fbstp
sub
fs
pop
stos
hlt
jmp
or
outsl
cmpsb
lods
xor
push
imul
les
cmpsl
dec
sti
divb
aas
inc
xor
or
dec
imul
sbb
xchg
and
movsl
iret
mov
lret
jle
mov
dec
mov
sub
mov
mov
and
mov
shll
and
icebp
xchg
pop
push
mov
mov
repnz
jmp
js
jmp
mov
cmp
js
popa
mov
xor
movsl
mov
scas
adc
mov
inc
aam
pop
aaa
sub
ss
dec
ljmp
ret
aaa
fwait
enter
jbe
jecxz
icebp
push
mov
push
dec
sbb
lock
mov
into
mov
mov
adc
inc
loop
aad
jae
pop
and
jle
ljmp
lea
loope
push
mov
mov
iret
or
fs
les
mov
imul
movsb
fistpl
push
dec
lret
es
sub
jmp
jecxz
aam
sbb
sahf
aam
pop
jp
xlat
or
je
iret
mov
xchg
push
jle
sbb
sub
xchg
inc
addr16
xchg
cmpsl
imul
fidivrs
lea
imul
inc
aas
mov
pcmpeqd
ds
stos
shl
imul
leave
jge
ja
or
dec
shlb
int3
jg
out
jmp
lcall
scas
xchg
xchg
sahf
pop
lds
cs
inc
jns
add
cmp
loope
inc
or
movsb
sbb
mov
movl
xchg
out
lret
adc
push
lds
cmp
push
cmp
pop
pop
pop
lock
sub
and
loopne
test
sub
neg
inc
aaa
out
push
fwait
sbb
sbb
cli
sbb
test
mov
or
out
mov
mov
cmp
ret
jp
js
mov
cmp
and
xor
ds
adc
hlt
pop
adc
cmpsl
cmp
and
push
ds
popf
out
dec
jbe
add
dec
aam
pop
push
into
bound
jecxz
shrb
pop
sti
push
in
and
push
lcall
mov
dec
sti
mov
imul
pusha
sub
xor
and
dec
daa
sbb
mov
sub
in
cmpsl
int3
jns
js,pn
idivb
dec
dec
jnp
lret
jl
mov
add
enter
fiadds
xchg
imul
lret
insb
test
sbb
or
repnz
push
ficoms
aas
ljmp
roll
pop
dec
mull
out
xor
push
outsb
inc
jp
in
call
push
lret
aaa
cmc
jl
in
mov
jo
push
add
ret
js
pop
cmp
dec
jecxz
pop
stos
cmp
stc
clc
mov
mov
stos
iret
jno
loope
push
mov
int3
pop
cmp
xorb
xchg
jns
dec
movsl
stc
mov
fnstcw
pop
std
adc
fisttpl
outsb
jge
out
test
inc
jl
sti
jmp
inc
inc
in
and
sbb
sbb
and
dec
ds
jb
mov
sub
pop
std
loop
jl
xchg
pop
loop
fisubrs
jne
sub
fstps
pop
lahf
sbb
mov
rclb
add
scas
jb
xlat
push
mov
sub
rcll
out
ret
mov
pop
mov
aad
movsb
xor
aaa
sub
sti
sbb
in
jnp
xor
and
movsl
push
mov
out
adc
adc
inc
fmuls
cs
pushf
fiadds
insl
mov
nop
xor
xchg
daa
mov
lcall
flds
mov
xchg
mov
lret
xchg
mov
or
imul
bound
push
gs
lcall
adc
push
bound
cs
jg
jno
clc
mull
xor
xor
mov
sbb
xor
jo
ss
std
test
pop
pop
test
scas
movsb
cs
cltd
pop
add
sbb
xor
xchg
push
xor
scas
jl
jns
fstps
push
fadds
icebp
aam
insb
mov
push
add
push
dec
sbb
push
pop
setp
cli
fildll
sub
jp
pop
out
dec
js
test
idivb
arpl
sub
sbb
xchg
je
pushf
mov
xor
les
mov
rclb
loope
loop
pop
add
and
shld
sub
cmp
mov
push
dec
pop
jmp
jl
sub
repz
pop
and
sbb
imul
test
loop
fcomps
mov
pop
dec
push
mov
aaa
mov
and
subb
inc
adc
sbb
xor
into
mov
xchg
movsb
mov
inc
xor
adc
cmp
add
imul
inc
dec
movsl
jae
or
pushf
jo
bound
cli
and
mov
fwait
inc
mov
sti
push
stos
popf
xor
push
mov
test
cld
sbb
mov
add
leave
lcall
adc
jo
popf
es
jge
pushf
es
cmc
je
lahf
dec
cmpsb
xor
sbb
popa
cmc
push
xchg
andb
ret
test
jb
push
sbb
hlt
mov
or
pop
jle
mov
xchg
jb
fs
insl
mov
sbbl
orb
mov
push
shl
outsb
sarl
std
out
aaa
test
xchg
gs
adc
sti
jb
cmp
rclb
jno
xor
fs
dec
lods
shrb
sbb
cmp
xchg
mov
fldl
movsl
ja
mov
mov
data16
cmp
push
adc
dec
mov
xor
mov
cwtl
jmp
lahf
bound
and
adc
popl
lcall
ljmp
jbe
and
pop
mov
sub
mov
call
repz
mov
gs
daa
insl
lret
repnz
cmpsl
or
jne
clc
mov
jno
int
insl
xchg
pop
xchg
test
fdivrs
inc
xor
dec
sub
cld
data16
loope
js
xchg
scas
fmull
adc
adc
out
stos
popf
dec
fwait
sbb
push
xor
push
mov
or
inc
mov
dec
clc
mov
mov
jecxz
in
dec
cmpsb
pop
jb
or
frstor
fldcw
sub
add
add
lods
or
arpl
lcall
shll
mov
pop
in
inc
add
mov
jbe
in
fbstp
rorl
cmp
adc
add
inc
sti
lea
mov
adc
scas
jmp
int3
movsb
outsl
mov
sbb
mov
int
lcall
inc
cmp
mov
adc
add
pop
loopne
test
popa
lds
iret
jnp
mov
je
mov
pop
clc
or
push
adc
sbb
das
mov
xor
push
mov
jnp
xchg
sbb
fnstsw
or
jmp
dec
mov
mov
call
dec
push
push
xchg
pop
dec
sbbb
cmc
idivb
rcr
xor
imul
mov
iret
iret
xor
pop
sbb
fcoms
mov
add
cmpsl
nop
xchg
es
xchg
les
jl
mov
adc
inc
cli
loop
lock
sbb
add
or
dec
popa
sub
pop
sbb
jmp
add
pop
aaa
mov
test
test
jle
jge
dec
jge
or
xchg
fdivrl
mov
movsl
test
cmp
pusha
shr
fwait
jecxz
mov
scas
xor
les
les
mov
sub
cmp
mov
jb
inc
push
xchg
shr
scas
push
jmp
inc
ja
dec
jbe
leave
js
jne
pop
ja
push
ret
stc
or
ret
pop
jno
sbb
mov
cwtl
jnp
jnp
pop
dec
and
idiv
sti
call
imul
mov
pop
mov
push
mov
aam
aam
iret
xor
loope
jg
pop
cli
gs
lds
roll
inc
fcoms
adc
int3
lcall
rep
cmp
push
mov
shl
loop
in
pop
mov
dec
mov
mov
cmp
mov
ss
lds
sbb
insb
mov
cmp
push
mov
or
dec
jns
mov
inc
dec
bnd
movsl
pcmpeqw
fst
addl
sub
rep
jg
ja
pop
adc
jecxz
dec
jge
push
ds
jle
cmp
sub
mov
sub
inc
imul
loopne
stos
mov
enter
xchg
test
dec
sbb
std
test
mov
xchg
add
cltd
fildll
loopne
or
inc
jo
in
mov
cld
adc
in
adc
sar
lock
nop
lahf
repnz
or
movsb
aam
add
es
in
and
sbb
int
in
sub
push
in
je
mov
nop
mov
std
lcall
rcr
xchg
push
shlb
mov
cmp
pop
popa
imul
sbb
cld
mov
xor
jbe
fstps
imulb
dec
and
sub
or
dec
xchg
lods
aaa
inc
lahf
and
out
or
in
mov
sub
sub
pop
aam
dec
mov
jae
sbb
orb
xchg
loopne
in
dec
mov
fs
adc
push
mov
nop
pop
test
mov
sbb
hlt
pop
pop
jecxz
pop
fwait
insb
rcll
adc
in
dec
sahf
add
inc
ljmp
test
cmpl
cld
arpl
sub
movsl
jo
jnp
push
roll
addr16
aam
ror
xchg
push
mov
push
push
jle
aam
je
loope
jbe
arpl
or
jno
push
filds
mov
sbb
adc
push
lret
gs
inc
stos
in
xor
add
fnstenv
push
pop
sub
push
scas
inc
mov
dec
fwait
and
fiaddl
mov
es
cwtl
mov
sbbl
mov
dec
mov
jecxz
scas
dec
xchg
push
jg
mov
int3
bound
repnz
push
test
add
rcll
dec
dec
bnd
dec
adc
loop
inc
cmp
aam
rol
mov
inc
sbb
in
sbb
fnstcw
lcall
ljmp
ret
pop
jne
xor
out
mov
xor
into
sbb
pop
cld
dec
loope
ret
stc
pop
andl
or
pop
insl
mov
adc
push
mov
movsb
insl
inc
mov
int3
inc
sub
sub
iret
insb
push
push
pop
inc
jp
repz
pop
adc
mov
imul
pop
addr16
and
loopne
into
cmp
ret
lds
inc
jbe
fucomp
dec
adcb
sub
or
movsl
inc
push
cmp
mov
add
into
xchg
xchg
js
or
rolb
add
scas
dec
test
clc
ret
push
fdivrl
adc
sbb
jns
sub
pusha
jg
push
xchg
stos
and
inc
pusha
jmp
mov
imul
pusha
jns
xorb
or
in
sahf
push
pop
or
imul
rcll
sub
pop
nop
movsb
pushf
clc
jmp
fmulp
ret
out
in
fsubs
sub
int
xchg
into
sub
aam
lcall
lods
pop
cmpsb
cmp
out
sbb
sbb
shll
push
pop
cmp
sbb
cmpsb
mov
fs
int3
cmovp
push
jno
or
int3
pop
sub
xor
popa
stos
mov
gs
mov
sub
arpl
push
xchg
clc
push
mov
mov
sbb
cld
jo
sub
sbb
push
movsb
out
adc
dec
add
xor
out
subb
adc
mov
xchg
cli
outsl
test
scas
push
xor
pop
repnz
pop
adc
enter
xor
cmpsb
cmpsb
xlat
addb
iret
decb
mov
movb
adc
xor
pop
addr16
addb
jne
lds
inc
mov
outsb
xchg
mov
add
lds
loop
imul
pusha
mov
jp
add
inc
cli
mov
adc
push
out
inc
dec
jae
mov
int
pop
mov
inc
fmulp
cmp
jmp
jecxz
sub
and
push
or
dec
out
mov
mov
iret
jo
add
xor
in
hlt
in
jo
ja
mov
mov
jo
dec
sub
pop
aas
stos
jp
fcomps
jecxz
pop
add
test
bound
adc
les
mov
aad
insl
hlt
aad
cmpsl
jnp
push
sti
mov
mov
inc
js
or
mov
ret
ds
xchg
fwait
add
adc
sbb
rclb
out
add
rorl
push
gs
lahf
adc
jge
cmp
dec
pop
mov
lret
sub
mov
lahf
bnd
fwait
pop
lcall
pop
cmpsb
rcll
pop
in
cmp
mov
pop
data16
xchg
push
repz
dec
je
cmp
add
bswap
xor
jge
pop
jmp
jne
sub
and
xor
mov
inc
mov
popa
mov
mov
jle
mov
add
mov
repz
out
push
jnp
inc
fdivr
int
pop
jno
mov
leave
inc
loop
mov
mov
adc
shlb
mov
pop
mov
hlt
jbe
mov
aad
cmp
push
leave
push
cmp
rol
loope,pn
mov
add
in
adc
push
ljmp
dec
xchg
in
fdivrl
repz
loope
xchg
arpl
mov
mov
dec
imul
pop
imul
lret
aam
inc
in
in
mov
data16
ja
or
cs
psubsw
popa
aaa
das
sbb
enter
fisubl
pusha
sub
lea
pop
mov
jg
jmp
insl
in
std
int
mov
and
push
mov
fwait
pop
xchg
sbb
data16
xor
mov
lds
ror
pop
pop
inc
push
xchg
dec
arpl
sub
or
adc
hlt
jp
jl
push
mov
mov
jne
cmp
icebp
jnp
addr16
gs
out
jne
in
jle
cmp
or
out
das
pop
mov
in
popa
mov
aam
mov
cmpb
loopne
inc
mov
mov
add
into
inc
xor
clc
push
xchg
add
add
mov
push
loopne
js
dec
sub
mov
int
push
into
sarb
pusha
and
push
cli
cmp
outsl
scas
stos
dec
shll
inc
and
aam
push
call
or
loope
or
test
scas
sbb
ret
sub
rcll
and
in
loope
ja
lods
popa
stc
mov
add
cmp
cmpsb
jmp
into
in
mov
jno
outsl
jge
push
dec
xchg
es
adc
je
xchg
or
scas
pop
mov
jb
inc
nop
adc
sbb
dec
fildl
sti
sbb
add
jge
lds
std
aad
inc
popf
bound
cli
mov
cli
aaa
or
adc
sbb
push
sub
sysenter
insb
push
mov
lock
fwait
pushf
hlt
mov
repnz
fnstcw
mov
pop
sub
push
cmp
icebp
mov
xor
add
mov
push
jmp
stc
mov
mov
ja
or
mov
out
divb
mov
fists
in
dec
cwtl
aad
or
dec
xchg
pusha
std
outsl
in
xor
dec
or
inc
aam
lret
jno
add
pop
lcall
sub
pop
pop
inc
test
aad
mov
fisubs
cmpsb
jl
jg
shlb
test
icebp
or
pop
lock
call
mov
and
ss
jbe
ret
cltd
movsl
pop
mov
push
mov
arpl
cld
sub
sbb
mov
xor
std
cmp
jnp
push
adc
xor
xor
push
cmpsl
out
push
cmpb
and
loop
xor
dec
test
jge
and
cmp
mov
int3
mov
int
mov
in
orb
sbbl
imul
mov
xor
nop
mov
xchg
jo
sti
int
scas
fidivrl
mov
int3
aad
mov
mov
push
cmc
mov
in
adc
xor
sti
gs
jae
inc
stc
jnp
ret
push
and
adc
dec
shl
movsb
in
inc
mov
aad
pop
cmpsl
fisttpl
ljmp
out
pop
daa
xchg
cwtl
iret
mov
sub
mov
jecxz
movsl
lret
mov
dec
int
lods
jae
jl
sbb
pop
mov
inc
aad
mov
xchg
dec
xlat
shlb
cli
outsl
jge
mov
xchg
xchg
lcall
cmp
es
dec
outsl
ds
nop
dec
cmc
or
es
xorb
cmc
aas
pop
shl
jmp
loope
lret
push
dec
mov
and
repnz
fwait
xchg
inc
jae
push
xchg
pop
mov
pop
adc
inc
dec
idivl
sbb
pushf
cmp
jb
add
std
push
notb
shlb
mov
mov
scas
xor
push
pop
loopne
les
sahf
mulb
push
dec
divl
daa
vhsubps
mov
hlt
jle
push
gs
scas
test
sub
sub
cmp
mov
jge
and
out
push
fsts
xchg
cmp
jb
and
cmp
lods
jp
jle
xchg
cmpsb
lret
mov
fcompl
orl
ja
fs
cmp
or
iret
dec
dec
xchg
mov
sbb
and
divb
xor
cmc
arpl
int
lea
mov
jl
dec
sbb
xchg
sub
icebp
cmp
pop
push
pop
dec
jae
les
cli
dec
jo
in
imul
xchg
testb
lea
daa
ljmp
ljmp
inc
das
aas
lds
sbb
dec
test
cltd
sahf
test
mov
pushf
insl
fs
std
popf
into
add
xor
or
gs
pushf
jl
jns
subl
mov
xor
loope
shr
pop
sbb
fsubr
ret
testl
inc
orb
lret
add
or
xor
pop
mov
push
and
push
mov
lcall
and
push
mov
push
inc
jb
cmp
pop
cmc
sub
jg
imul
es
sbb
cs
fs
scas
stos
mov
cmp
outsl
scas
xchg
jo
lret
add
stos
or
jle
pop
or
mov
mov
popf
pop
and
add
fisttpl
xchg
dec
shll
sbb
shlb
jne
in
dec
loope
push
adc
mov
inc
xor
sbb
pop
inc
inc
cmpsb
lret
stc
iret
mov
imul
inc
pop
cs
fldt
inc
mov
jmp
popa
jns
xor
popf
pop
repz
cmp
push
fldcw
push
hlt
rolb
jno
andb
aas
cli
std
cmc
je
jecxz
mov
movsl
lods
imul
pop
sub
lcall
aad
int
stc
pop
jecxz
je
xchg
push
int3
negb
pop
imull
push
in
or
dec
iret
leave
cmp
shrb
add
inc
aam
incb
stos
ficompl
out
push
dec
and
in
orl
or
dec
mov
xor
sarb
xchg
shll
jg
repz
jg
push
in
popf
xor
dec
cmpsl
sub
push
pop
push
jge
or
mov
mov
xchg
enter
out
int3
ret
cmp
push
ljmp
into
jmp
jg
mov
scas
arpl
cmpsl
mov
idiv
sbb
enter
popf
lcall
bound
cmp
mov
jp
cmp
insb
out
andb
adcl
xchg
std
sub
push
jmp
fdiv
roll
repnz
cmpsl
add
or
dec
xor
pop
subl
pop
sub
scas
inc
enter
xchg
repz
push
mov
nop
push
mov
jmp
mov
cs
push
popf
mov
aas
pop
sub
cmp
fisubs
dec
push
out
cltd
and
mov
dec
sbb
mov
xor
xor
mov
xchg
jbe
mulps
inc
repz
movsl
insl
add
jns
es
pop
jle
ja
test
pop
fsubr
lret
into
imul
iret
pop
clc
mov
shll
sbb
ret
icebp
pop
xor
mov
sub
jl
xor
imul
or
in
movl
mulb
mov
mov
pusha
out
add
fwait
add
ret
scas
sar
clc
add
mov
cltd
jno
shll
fisttps
adc
push
idiv
jbe
jg
in
icebp
popa
add
add
loopne
add
popf
push
ljmp
jecxz
or
repz
mov
outsl
les
ret
je
enter
shrl
lret
mov
jmp
lods
and
aad
push
lret
cmp
mov
push
in
mov
push
out
stc
fcmovnu
ret
pop
cmp
cld
dec
jp
int
nop
xchg
or
jo
jne
inc
aad
fistpll
testl
cmpsb
pop
or
xor
mov
cmp
and
fwait
dec
mov
sub
jmp
aad
mov
sbb
pushf
dec
stos
jnp
imul
stos
jbe
hlt
loop
out
jg
gs
jns
arpl
xorb
ficoml
pop
cmp
mov
aaa
or
nop
aad
sbb
lcall
outsl
sub
add
nop
pop
jecxz
jmp
movsb
xlat
mov
outsl
fcmovbe
pop
aaa
xchg
aad
shr
sub
pop
pop
pop
shl
xor
pop
jbe
jecxz
aas
push
mov
sbb
inc
lock
push
mov
xchg
xor
sbb
mov
xchg
mov
push
xchg
dec
mov
dec
jbe
dec
or
rorl
inc
fsub
pop
loopne
in
jge
mov
scas
pusha
aad
xor
add
jne
aad
out
jno
popa
into
outsb
xor
stos
imul
jo
es
xor
pop
out
cld
and
fimuls
scas
and
cmp
xchg
stc
inc
cmp
adc
fistpl
push
lea
inc
lods
std
mov
sahf
jb
xchg
cs
icebp
pop
inc
pop
lods
cmp
adc
shrb
mov
imul
ret
or
lret
rcll
daa
nop
pusha
jbe
mov
xlat
mov
pop
fsubs
cld
xchg
ret
adc
pop
inc
pop
mov
mov
or
push
fnstcw
xor
pushf
jnp
cmp
cmp
sub
xor
pop
das
repnz
xlat
mov
jmp
jb
xor
and
xchg
je
out
jne
pop
in
adc
mov
shll
data16
lock
iret
idiv
loop
and
adc
dec
mov
push
fwait
push
xchg
sub
inc
add
and
xchg
cwtl
push
push
adc
insb
lahf
dec
mov
out
mov
jae
in
lea
xchg
insb
fcmovnb
shll
outsl
sub
leave
sbb
or
jno
xor
adc
push
xchg
fcoms
and
movsb
cmp
es
loop
and
mov
bound
neg
pop
inc
scas
xchg
mov
movsb
inc
xor
loope
xor
jle
push
cltd
push
test
inc
test
or
cmp
xlat
xchg
aad
adcl
lret
sub
jno
dec
loop
gs
insb
sbb
and
cmpsl
pop
mov
lea
stos
in
or
or
insl
addr16
adc
ja
adc
and
nop
cmpsl
insb
inc
cmp
xchg
mov
jnp
push
call
cmp
push
xor
mov
insl
pop
pop
out
jbe
push
dec
push
pop
sbb
dec
in
xchg
inc
mov
dec
aas
push
movsl
jbe
pop
addr16
jle
in
cmc
push
inc
leave
ret
pop
xorl
pop
inc
lds
push
cli
or
adcl
lret
lock
and
push
xchg
mov
les
vfrczps
or
or
movsb
shrb
pushf
popf
inc
std
cwtl
xchg
push
dec
push
ret
aam
fcoms
mov
int3
cmp
sub
outsl
inc
out
sbb
and
shlb
inc
add
sub
pop
pop
or
hlt
je
sahf
out
sub
mov
int3
cltd
sbb
cltd
mov
ret
pop
mov
ss
test
mov
hlt
inc
loop
add
hlt
add
add
pop
mov
mov
scas
test
jmp
in
enter
pop
sti
push
sbb
or
pop
fs
pop
sub
sub
mov
adc
mov
xor
sbb
cld
notl
push
xchg
insb
pop
adc
imul
push
or
repnz
add
jg
add
or
mov
je
arpl
dec
cmp
dec
cmpb
not
gs
orb
mov
pop
loope
cmp
mov
lods
sbb
mov
sub
dec
jo
popl
pop
int3
outsb
jl
icebp
add
xchg
pop
xchg
or
ffreep
push
jae
nop
ja
xchg
pop
jbe
ja
mov
cld
xchg
xchg
pop
fcmovnbe
push
adc
test
shlb
pop
push
xchg
mov
outsb
jmp
loopne
data16
mov
outsl
or
scas
jno
dec
push
cwtl
dec
arpl
fnstsw
mov
shr
insl
jecxz
mov
scas
mov
dec
es
icebp
sub
icebp
push
insb
ljmp
daa
into
sub
and
stc
decl
add
xor
popf
gs
aaa
cmp
dec
pop
out
or
dec
imul
cmp
add
shll
mov
jge
adc
push
cmpsb
pop
int
or
sub
dec
jle
stc
inc
or
mov
call
rol
pop
mov
fistpll
dec
fcoml
xchg
jl
mov
push
jo
and
jae
xor
dec
push
in
aad
jg
pop
push
cmp
pop
push
popa
test
and
mov
push
jle
sub
dec
push
push
leave
inc
lock
ss
test
js
testl
jno
mov
push
mov
enter
sub
icebp
out
and
jae
test
jbe
nop
loope
sbb
mov
mov
mov
fnsave
mov
cli
inc
jnp
adcl
inc
pushf
imul
ds
pop
jle
rorl
push
adc
xchg
add
dec
fs
adc
and
mov
out
ret
jnp
jbe
out
and
aam
adc
movsb
mov
out
popf
jle
cli
xchg
inc
insl
push
and
data16
mov
mov
jecxz
iret
or
into
inc
jb
inc
mov
add
xor
hlt
aad
mov
rclb
insl
adc
in
mul
adc
mov
sub
cmp
fwait
int3
lods
rcll
test
icebp
mov
mov
cmp
xchg
in
jbe
addr16
es
popf
fsubrp
sub
xor
xchg
mov
xchg
adc
arpl
je
inc
or
lea
xorb
add
test
push
push
cwtl
sbb
iret
push
popl
push
jns
jns
push
imul
xchg
or
scas
and
movsl
push
cmpsb
shl
mov
pop
sar
cmp
aas
sysexit
insl
or
ja
and
movsl
pop
cld
adc
and
je
dec
out
mov
sarb
xor
cmp
push
mov
xchg
sbb
mov
xorl
dec
popf
or
icebp
sbb
or
sbb
cmp
or
xchg
call
push
test
ljmp
xchg
add
pusha
xlat
adc
jbe
cmp
dec
sub
sub
mov
cli
add
jecxz
data16
and
popa
dec
stos
and
cmp
push
jmp
push
ljmp
pop
ss
leave
movsl
fiaddl
sbb
daa
jb
push
rcrl
hlt
inc
lret
ret
arpl
sbb
int3
test
enter
movntq
sbb
pop
dec
pushf
out
mov
and
sbb
push
jne
sub
pop
jnp
cmp
flds
jecxz
shlb
mov
xor
push
in
ds
cmp
lds
out
fs
out
cwtl
cmpsl
cmp
inc
loopne
fstpl
xchg
adc
js
addr16
dec
in
cltd
cmp
dec
push
mulps
xchg
jmp
adc
inc
mov
nop
loopne
sbb
out
xor
adc
std
pop
in
jae
clc
out
iret
mov
iret
dec
ret
cwtl
lahf
jle
ljmp
inc
mov
sub
mov
dec
rcll
push
sub
stos
jl
jnp
icebp
mov
dec
gs
add
repz
scas
inc
sub
jp
add
outsl
adc
add
test
ret
addr16
adc
pop
je
cmc
sbb
push
mov
stos
lds
nop
dec
insb
dec
jmp
jecxz
in
adc
ret
pop
push
push
mov
push
dec
xchg
addr16
mov
dec
xchg
inc
scas
outsl
stos
push
stos
js
loope
mov
addr16
inc
sti
incl
pop
jg
fisttpll
push
pop
insb
or
mov
jg
push
stos
mov
add
in
pop
shl
xor
xor
filds
jnp
inc
sbb
enter
fs
dec
ss
je
dec
fsubrs
push
sub
add
sbb
mov
sub
push
mov
outsb
das
inc
mov
mov
sbb
pusha
mov
daa
xchg
cmp
mov
or
popf
mov
mov
jb
mov
pusha
mov
std
mov
jae
lcall
jno
jecxz
sbb
add
cmpl
insl
add
xor
inc
fistl
sub
pop
popf
push
dec
xchg
cli
xchg
or
jle
cmpsb
xor
mov
sbb
das
mov
xchg
mov
xchg
mov
inc
mov
subl
lret
dec
xchg
shll
divb
sbb
fdivrl
inc
je
or
dec
mov
sub
sbb
mov
cltd
lahf
shrb
xchg
cli
inc
adc
shll
rcll
cli
mov
add
add
fs
cmpsb
sbb
fldenv
sub
imul
cmp
add
lret
bound
arpl
xchg
mov
cmp
int3
out
lods
add
cmp
mov
mov
adc
sarb
cmpsb
sub
insb
aad
or
add
mov
sbb
insb
xchg
roll
pop
hlt
out
push
jbe
cld
cmp
push
jmp
mov
xlat
push
gs
mov
xlat
sub
test
cmp
call
adc
out
fadd
cltd
stos
add
cli
bound
add
pop
sub
inc
jmp
inc
negb
popf
inc
xchg
out
xchg
cmp
and
jno
xor
jae
push
enter
test
daa
ret
or
aas
and
mov
cmp
pop
pop
int3
and
out
mov
seto
jecxz
or
push
ret
cmpsb
imul
lods
test
lds
scas
push
je
test
pop
cmp
pusha
out
faddp
sti
adc
cmp
dec
jae
imul
lods
cli
int3
test
testb
xchg
adc
icebp
xchg
subl
andl
outsl
cmpsb
mov
test
adc
popf
call
push
fldcw
daa
sub
push
dec
ret
stos
and
bound
insb
mov
repnz
std
inc
mov
pop
imul
cmp
in
enter
pop
insl
fucompp
mov
andps
push
hlt
push
pushf
pusha
out
adc
xorl
sbbl
es
fsts
aam
pop
lret
inc
repz
dec
xor
imul
test
clc
lock
pop
jae
cmp
pop
push
in
sbb
movsb
das
or
popf
div
jno
rcll
mov
jne
dec
mov
loop
or
and
enter
sbb
cmp
dec
das
xor
pop
sub
adcl
rolb
leave
sub
pop
ja
insl
das
pop
fwait
leave
ds
jo
cmp
and
lret
aaa
cltd
mov
sub
in
dec
add
out
loop
fldpi
bound
cmp
dec
lock
xor
popf
ds
xorb
inc
sbb
sbb
dec
cmp
sub
fisttpll
test
mov
xchg
push
sbb
or
cmp
and
sbb
push
mov
enter
mov
mov
xor
ljmp
pop
mov
ja
xchg
call
loopne
and
in
cli
pop
outsb
mov
push
mov
jmp
popf
or
push
arpl
imul
nop
ss
jne
pop
fwait
aam
fadds
icebp
daa
xchg
roll
repnz
mov
outsl
mov
pop
and
dec
cmpsl
mov
and
imul
cwtl
cltd
imul
test
push
fs
adc
push
popl
and
lret
push
cmp
imul
psrlq
jge
mov
or
lea
push
adc
mov
ds
sbb
fstl
inc
nop
into
xor
outsb
add
adc
push
ss
mov
je
xchg
jp
cwtl
mov
lcall
adc
mov
in
xlat
loope
insb
popa
movsb
lods
mov
cmp
add
dec
sbb
mov
mov
outsb
jns
scas
ds
jle
sbb
and
inc
jbe
ss
nop
fdivrl
xchg
nop
sbb
sbb
inc
pop
ss
fdivrs
test
fbld
mov
neg
aaa
adc
mov
jbe
std
sbb
test
adc
jge
xchg
adc
mov
test
jb
stc
test
fisttps
add
mov
mov
mov
mov
outsb
sarb
fs
mov
scas
stc
and
push
sti
dec
pop
dec
adc
sub
and
xor
rcll
scas
mov
push
cmc
loopne
pop
outsl
mov
inc
jle
adc
lods
push
aam
out
mov
pop
testb
pop
ljmp
inc
fsubrp
hlt
jnp
mov
adc
pop
loope
icebp
add
movsb
imul
addr16
orl
inc
gs
push
jbe
cmp
jo
dec
aad
dec
push
jg
push
xchg
adc
push
out
or
ss
jb
jnp
lods
seta
add
jae
xchg
leave
sub
or
jp
jb
loop
shl
lahf
dec
ss
repnz
cli
fildll
imul
push
pop
movsb
aaa
cwtl
popf
addr16
insb
xchg
cs
cmp
mov
sbb
xor
fcmovu
mov
cli
lods
dec
pop
mov
mov
add
daa
add
or
sub
imull
cmp
xchg
std
xchg
std
xor
pop
mov
aaa
and
fcompl
sbb
inc
adc
adc
cmpsl
gs
xchg
ret
repz
shll
push
and
rcl
mov
pop
inc
mov
push
adc
in
ret
inc
scas
loope
or
lods
mov
sbb
subl
xchg
xchg
inc
or
inc
pop
ret
sbb
push
mov
pop
push
in
js
sub
popa
imul
es
jmp
xchg
push
push
mov
and
push
aam
movsb
popa
cmpsb
rorl
inc
pop
iret
cwtl
dec
jbe
bswap
mov
push
addl
pop
jns
xchg
inc
sub
sahf
or
mov
ja
jecxz
adc
inc
mov
push
cmp
mov
fisubrs
jecxz
add
xor
inc
xchg
mov
sub
lock
roll
jb
xor
call
or
fisubrl
sbb
pop
jae
std
sub
in
sarl
xor
adc
mov
int
icebp
mov
or
cltd
test
negb
aam
aaa
push
in
dec
outsl
pop
fistpl
add
add
pushf
add
test
xorl
ret
mov
test
sbb
push
or
mov
iret
fdivr
fs
out
scas
inc
movl
hlt
cmp
inc
mov
lock
popf
and
or
test
and
dec
or
lock
pop
jo
push
push
sub
in
nop
cli
inc
or
sub
xor
and
dec
cmp
jmp
fcomps
iret
sbb
pop
xor
jmp
or
mov
jno
stos
popa
and
out
movsl
jno
cmpl
mov
out
xchg
sar
int
xlat
push
lret
inc
mov
arpl
dec
xchg
jae
pop
stos
cmp
aad
mov
sub
mov
pushf
mov
inc
xor
test
adc
dec
adc
push
inc
cld
xchg
mov
adcl
sbb
sbb
xchg
adc
in
jbe
fsubs
dec
mov
sub
mov
in
in
or
idivb
stc
sbb
dec
push
jne
ss
fistl
sbb
das
mov
add
scas
mov
cmp
test
test
mov
inc
shrb
jle
add
loopne
addr16
imul
dec
and
cmp
jle
adc
or
xchg
icebp
xchg
fsubl
mov
sub
js
cmpsb
std
iret
ja
pop
xor
enter
inc
gs
dec
adc
xchg
sub
or
outsl
leave
lea
cmp
cmp
ficoms
stos
repz
wbinvd
push
jae
popa
xchg
cmp
lods
popa
jl
mov
mov
dec
test
cmp
mov
inc
out
mov
mov
std
call
in
mov
sub
cld
inc
jo
repz
sub
mov
sub
mov
adc
imul
sub
insl
cmp
call
lcall
xchg
cli
inc
repz
popa
lea
cmp
fcoml
shl
ficomps
addr16
inc
jl
jg
sub
ret
scas
push
push
mov
popa
mov
cmp
lock
add
and
mov
leave
push
aas
outsl
dec
lcall
gs
adc
popa
rorl
lods
sbb
push
imul
cmc
dec
enter
sub
push
or
push
ds
xor
data16
sub
rcrl
cld
outsl
into
sub
jle
ret
popf
es
rolb
das
stos
outsl
bound
subb
mov
push
cmp
jle
adc
jecxz
addr16
cmp
pop
jae
or
sbbl
adc
in
adc
out
sbb
jb
fldt
sahf
rcll
lcall
mov
mul
aas
mov
test
push
inc
sbb
xchg
xlat
jmp
fwait
sub
adc
dec
js
daa
dec
in
dec
xchg
dec
fildl
fldl
jp
enter
sbb
orl
insb
cmc
subb
data16
and
cmc
shrb
jge
cmpsb
cmc
outsb
movsb
and
cmp
clc
push
ljmp
cmp
dec
jecxz
arpl
sbb
adc
add
xchg
rclb
test
shrl
out
or
adc
sub
pop
scas
lea
add
and
negb
lea
les
adc
stos
mov
call
xor
xchg
cmpsb
jle
cli
push
test
push
jno
cmp
cmc
fnstcw
div
push
dec
inc
std
jl
fsubs
xor
dec
adc
pusha
xor
xor
push
flds
fucomi
jae
push
mov
fcoms
js
adc
pusha
std
mov
icebp
push
xor
mov
push
daa
lret
icebp
out
sbb
and
in
mov
jns
mov
dec
pop
mov
adc
movsb
adc
xchg
adc
pop
icebp
cmp
mov
dec
insl
mov
je
fcompl
pusha
xchg
sub
orb
lret
pop
insl
decb
mov
rorl
cmpsb
push
lock
cmp
test
out
outsb
movsl
aad
lret
push
or
sub
lods
mov
popa
or
rcrb
xchg
movsl
or
aas
ud0
sbb
in
cmpsl
pop
ljmp
jmp
data16
xchg
mov
out
mov
adcl
rorl
mov
push
sar
mov
jbe
sahf
add
jo
out
test
cmpb
sbb
iret
mov
lods
das
enter
pop
jl
inc
mov
fidivrl
and
mov
xchg
mov
adc
pop
sub
push
daa
fisubs
sbb
pop
pop
aas
daa
sbb
pop
jmp
mov
adc
mov
sbb
pop
or
push
stos
push
or
xchg
stc
add
add
pop
test
xlat
inc
pop
lods
adc
inc
cmp
mov
pusha
shl
xchg
xchg
iret
jecxz
iret
mov
imul
hlt
flds
rol
adc
test
pop
xor
add
inc
xchg
push
lods
sub
mov
mov
dec
rcll
sub
jnp
xchg
dec
scas
out
fsubrl
mov
inc
pop
je
out
insb
shl
xor
push
mov
mov
fdivp
pop
fsincos
or
in
mov
nopl
mov
js
and
js
adc
add
mov
inc
inc
inc
shlb
push
inc
movsb
mov
push
mov
imul
repnz
mov
mov
and
or
and
and
fadds
adc
dec
lock
dec
inc
ds
pop
fldln2
loope
out
sarb
shl
jno
test
inc
popa
daa
add
or
push
inc
ja
test
in
jle
jae
mov
or
fcompl
std
xor
sti
sbb
lds
scas
ss
jnp
adc
add
xchg
lret
and
sub
xchg
hlt
sbb
out
repnz
push
mov
dec
rcll
mov
fistpll
jb
push
adc
pop
pop
and
pop
sbb
push
out
scas
pop
jle
cmp
incl
push
sub
cmc
rorl
adc
sti
lea
jle
inc
sti
xchg
gs
xor
or
pop
fcoml
push
sbb
in
jle
xor
decb
rolb
cltd
inc
pop
pop
sub
imul
adc
or
xchg
fcmovne
insl
sar
xchg
ss
cmp
xchg
jmp
cmp
add
int3
pop
jne
inc
xor
ret
les
out
lcall
xor
xor
cltd
test
lods
push
and
jne
inc
cli
idiv
movsb
xchg
les
jmp
outsl
fists
push
adc
fwait
inc
loope
lret
mov
push
jne
add
jne
js
shlb
movsl
in
adc
push
in
cwtl
push
adc
scas
loope
push
cltd
xor
sbb
jae
dec
pop
mov
inc
push
je
test
jl
jle
cmp
or
inc
loop
lcall
dec
fildl
dec
cmp
ret
pop
call
jecxz
dec
xchg
jbe
cmp
or
mov
mov
jb
or
pop
inc
jbe
mov
out
clc
out
mov
push
sahf
xchg
in
es
xor
ret
mov
add
lret
cld
or
xchg
pusha
std
push
xor
xchg
mov
inc
fldcw
sbb
push
repnz
pop
pop
mov
mov
scas
ret
jnp
sbb
loope
es
add
es
insl
jbe
dec
aam
mov
data16
js
mov
insl
int
cmc
in
fimuls
dec
cmp
arpl
jge
in
xlat
lods
mov
scas
pop
sbb
mov
pop
adc
repz
inc
mov
mov
push
xchg
into
test
push
xor
test
inc
xor
inc
test
test
push
inc
js
sahf
push
add
inc
add
xor
xchg
bound
aaa
mov
cmp
inc
neg
jmp
ljmp
cwtl
cmp
push
jle
pushf
cmp
add
pop
adc
pusha
mov
sbb
jp
iret
imul
mov
mov
cld
mov
xchg
js
test
pop
jae
xchg
mov
sbb
adc
cmp
inc
test
pop
shrl
cmp
sub
loop
ficomps
stc
popa
or
or
push
and
rcl
popf
sbb
setle
dec
xchg
je
inc
mov
fldcw
jmp
mov
inc
sub
jge
js
cmp
lods
pushf
dec
fldenv
mov
pop
mov
xlat
cmp
jg
lcall
jge
inc
cmp
mov
mov
mov
daa
mov
mov
dec
xchg
xchg
adc
movsl
or
xor
pusha
jl
cmp
pushf
fidivl
or
lcall
aad
mov
in
icebp
push
inc
fistps
nop
enter
cmp
push
mov
push
aam
mov
mov
mov
out
inc
ret
push
repz
push
je
popa
xor
dec
inc
jmp
or
sbb
sbb
push
sub
jb
repz
pop
jge
gs
in
sahf
ret
mov
lahf
cmpsl
je
or
sbb
movsb
xchg
lret
add
jg
icebp
mov
aam
push
mov
mov
jbe
sarl
fs
dec
out
pop
cmp
int
pop
fcomp
xor
ds
pop
push
sbb
pusha
mov
popa
insb
test
lds
repz
dec
mov
addr16
sahf
ja
and
sub
flds
pop
call
inc
mov
outsl
mov
les
mov
dec
mov
push
fidivs
sti
in
and
sti
rclb
out
lcall
test
inc
pop
pop
sti
sahf
rcrb
mov
push
cmp
stos
aas
fsubrl
sarl
adc
das
fs
xor
xor
out
lcall
in
leave
mov
push
sub
mov
in
dec
jle
mov
jo
adc
loope
stc
mov
pop
add
push
ret
mov
xor
arpl
jbe
cs
lock
lcall
fbld
add
mov
mov
mov
xchg
aad
sbb
hlt
cmc
aam
sub
sbb
mov
orb
or
test
mov
ret
test
pop
scas
je
cmpsl
push
sbb
lahf
mov
cmp
jo
dec
test
add
xlat
les
sub
mov
mov
dec
rol
out
pop
out
adc
mov
or
cmpl
mov
sahf
xor
xor
out
jb
or
fs
bnd
adc
cmp
scas
xor
mov
xchg
cld
arpl
int3
sub
sub
cmp
sti
mov
bound
inc
or
mov
ret
cltd
pop
les
pusha
fsub
mov
icebp
xor
inc
cwtl
push
scas
and
dec
scas
and
sti
movsl
jae
js
insl
inc
or
fcomps
arpl
add
es
jne
xchg
mov
addr16
push
repz
gs
in
mov
sbb
adc
addl
and
out
loop
stos
repnz
mov
dec
jb
enter
mov
xor
mov
pop
add
push
int3
push
adc
std
call
and
fistps
sub
mov
lock
and
pusha
out
lcall
xchg
mov
rcll
pop
and
cwtl
xchg
mov
or
xlat
enter
nop
ret
xor
sub
adc
lods
sub
repz
rcrb
sbb
fdiv
push
jbe
inc
push
mov
jmp
inc
and
mov
mov
adc
mov
push
into
jl
xlat
cmc
cmp
out
shll
push
pop
xchg
test
mov
add
je
lcall
scas
push
lock
lahf
test
cmp
xchg
dec
sbb
les
cs
cmpsb
bt
insb
inc
jle
xchg
and
mov
or
sub
xchg
enter
or
inc
mov
hlt
jno
jne
mov
xor
int3
fildl
into
shrb
fisubs
repz
push
faddp
push
add
dec
movsl
sbb
imul
out
pop
std
sbb
nop
imul
cwtl
call
jge
rorl
clc
stos
or
out
shlb
push
or
xor
fldt
xchg
clc
out
mov
js
cs
pop
sub
push
sti
xor
daa
je
xchg
and
pop
arpl
inc
or
rcrb
pop
mov
mov
fistps
add
and
push
sbb
xchg
mov
jmp
pop
or
aam
xchg
push
mov
dec
dec
fnsave
rolb
aas
ljmp
and
jl
pop
mov
loop
mov
and
sbb
dec
dec
inc
js
clc
cmpsl
addr16
push
ret
test
cltd
das
call
pop
xor
sbb
mov
add
iret
or
enter
jmp
testl
inc
out
sbb
xchg
std
dec
pop
inc
xchg
sub
and
lea
inc
fnsave
add
cltd
les
loop
fwait
pop
jns
fnstcw
and
inc
or
or
inc
or
std
scas
mov
sub
pop
push
mov
jb
repnz
out
push
or
data16
push
jecxz
pop
or
mov
imul
mov
outsb
pop
out
sub
loope
cli
cmpsl
ljmp
xchg
dec
js
push
push
add
pop
push
frstor
int3
cld
in
aas
imull
lods
sub
jp
int3
movsl
and
push
jne
clc
add
mov
mov
data16
pop
mov
mov
ud1
ret
mov
mov
cmc
pop
ljmp
ja
inc
mov
dec
js
int
jge
mov
aas
add
jne
sbbb
das
fmuls
sbb
add
or
and
jecxz
dec
ss
fdiv
rorb
aam
push
push
cmp
inc
xchg
push
or
mov
push
test
bound
out
loopne
lds
mov
stc
je
mov
sahf
jno
fadd
fwait
insl
or
adc
lock
sub
loope
jbe
adc
jb
and
pop
mov
pop
out
int3
stos
cmp
or
cmpsb
mov
scas
pop
mov
push
fidivrs
or
xor
or
iret
loope
mov
fs
sub
shr
ficomps
test
mov
insb
dec
ror
shl
sbb
dec
popf
sbb
add
jp
jne
adc
adc
ja
sahf
in
ret
es
cs
ret
dec
inc
outsb
ja
movb
xor
shll
loopne
sbb
sbb
push
fs
lock
imul
xchg
xor
push
hlt
cmp
dec
lcall
test
add
jnp
das
or
sub
inc
sbb
jae
movsb
mov
mov
mov
mov
or
pop
xchg
sahf
push
pop
aas
ss
mov
int3
lods
sbb
sub
mov
or
fdivs
sbb
xchg
inc
sub
pop
outsb
add
sbb
hlt
mov
fcoms
sbb
add
nop
adcl
dec
addr16
cmpsb
or
sub
mov
mov
stos
push
out
ja
imul
or
mov
jp
repnz
outsl
leave
lahf
cmp
popa
and
insb
sbb
ss
fdivr
mov
mov
pop
arpl
sbb
les
aas
jle
sub
clc
inc
xchg
out
cwtl
insb
pop
adc
jp
sub
ret
jg
in
adc
xchg
aad
fwait
xor
mov
sar
lds
rcrb
addr16
rcr
aaa
aam
adc
dec
sahf
cld
jne
aaa
test
push
mov
insb
in
or
shrl
and
mov
cmpsb
mov
push
stos
ds
aaa
cli
insb
mov
add
pushf
xor
adc
sbb
stc
mov
int3
sbb
cwtl
in
push
jae
sbb
mov
movsb
mov
dec
cmp
add
mov
ret
jns
mov
imul
adcl
push
mov
das
xchg
mov
filds
shl
mov
jle
es
adc
push
je
scas
rcrb
cs
cmp
xorl
fdivs
pusha
xchg
xor
js
imul
ffreep
cmp
and
mov
sbb
aaa
in
dec
dec
ss
test
push
and
ficoml
ret
cmp
xchg
movsl
outsl
icebp
mov
or
mov
sbb
and
iret
sbb
mov
popa
pop
pop
dec
adc
lea
fidivl
shlb
iret
mov
pushf
imulb
imul
into
jp
or
loope
mov
int
xchg
and
mov
mov
and
inc
push
in
arpl
fucomip
mov
dec
xchg
cmp
enter
pop
insl
mov
dec
xchg
sub
mov
cmpsl
sub
xchg
push
dec
ret
cmp
call
add
out
cmpsl
xlat
cmp
hlt
jp
ret
lcall
add
ret
popf
das
gs
jecxz
xlat
mov
or
sub
mov
push
mov
out
icebp
outsl
pop
mov
push
out
mov
andl
push
pop
notb
jmp
xor
push
fistpl
outsb
inc
push
add
or
fadds
sub
dec
xchg
cltd
pop
and
std
test
xchg
mov
sbb
enter
outsb
imull
cmp
aaa
dec
inc
test
sbbb
arpl
jl
in
mov
pop
push
jg
stos
in
into
mov
ss
stos
inc
pop
cwtl
pushl
std
scas
jecxz
or
mov
insl
xchg
sub
mov
or
test
fdivp
in
movsb
add
dec
dec
mov
dec
out
imul
push
mov
outsl
out
loop
mov
push
adc
insb
movsb
cld
mov
popa
or
out
mov
pop
repz
fnsave
mov
inc
loopne
inc
mov
add
adc
and
cmpsb
xor
ds
add
lods
movsb
pusha
std
cwtl
adc
mov
pusha
mov
out
lock
fldcw
push
fstl
fdivrl
clc
mov
lahf
repz
test
lret
mov
xor
cli
in
mov
mov
call
pop
dec
rclb
outsb
jne
js
xchg
lcall
mov
notb
add
into
or
pop
int3
pusha
lret
scas
daa
dec
mov
lds
pushf
xchg
dec
dec
sti
mov
xchg
and
mov
mov
cwtl
cmp
out
add
ret
scas
mov
std
mov
daa
std
aad
adc
cmp
aas
inc
hlt
std
push
cmp
mov
fcmovnbe
cmc
sbb
mov
mov
rep
mov
inc
add
adc
and
leave
inc
jl
imul
xchg
add
mov
shufps
in
or
fsubr
mov
jbe
test
movsl
push
ficoml
pop
jbe
adc
xor
movsl
jle
test
dec
shrb
into
jge
mov
xchg
cmp
or
and
add
arpl
xor
sti
mov
pop
inc
das
in
fadds
in
inc
inc
subl
cmp
scas
jno
mov
loope
cmp
imul
dec
mov
mov
mov
arpl
inc
les
ja
pop
dec
jle
loope
imul
mov
icebp
push
fadd
sbb
or
inc
into
insb
pop
out
les
sbb
jmp
mov
hlt
add
arpl
xchg
cmp
dec
add
fcoms
jno
mov
adc
cld
sub
add
aam
and
or
jbe
add
jbe
mov
sub
incb
addr16
or
inc
or
fbstp
popa
mov
add
dec
lahf
mov
pop
and
popa
jnp
pop
push
sahf
mov
lahf
imul
pushf
ja
inc
mov
mov
mov
imul
idivb
push
fnstsw
js
js
bound
stc
shr
push
inc
addr16
hlt
pushf
sub
mov
or
js
call
xor
jmp
xor
and
ror
movsb
leave
lds
dec
jg
jg
mov
sbb
xchg
inc
ror
stos
jge
sbb
adc
xor
movsl
paddsw
fs
lea
je
movsb
jno
xlat
fnstsw
lds
pop
inc
ja
dec
mov
je
jle
bnd
insb
push
jo
or
jbe
fdivl
repz
cmp
into
arpl
rcll
fldl
dec
imul
fsubrs
add
and
js
mov
mov
sub
pop
lahf
shl
aas
dec
popf
pop
sbb
enter
xor
mov
mov
mov
scas
or
sahf
jle
mov
fst
sbb
inc
adc
inc
xor
stos
add
bound
pop
repnz
ja
sbb
test
mov
jne
jp
mov
repnz
js
loopne
ret
loopne
enter
add
sub
lods
inc
or
and
loopne
mov
shlb
call
xor
jnp
fldenv
int
mov
test
sub
mov
nop
scas
call
loopne
sahf
mov
and
and
adc
fdivs
mov
cmp
shlb
bound
sub
mov
test
lods
push
into
pop
adc
cmp
pop
sub
lret
dec
adc
cmp
xchg
outsb
aas
cmc
mov
jl
pop
mov
es
scas
pop
mov
adcb
lods
sti
push
push
xor
sub
sti
popf
mov
add
jmp
pop
clc
shrb
outsb
les
sub
dec
or
mov
mov
add
lea
xchg
cmpsl
arpl
mov
mov
sbb
pop
xchg
xchg
fldenv
andb
sub
loopne
cmpl
daa
into
pop
pop
imul
mov
sbb
imulb
insb
repnz
mov
shrl
mov
add
mov
inc
insl
push
hlt
lahf
aas
push
xchg
mov
fstpl
test
push
jp
mov
in
and
jns
cwtl
and
mov
fdiv
aas
mov
push
bound
add
mov
popa
loop
jle
std
in
jmp
call
push
fsubrl
add
xor
and
movsb
sbb
sub
push
dec
xor
repnz
popa
inc
movsl
cmp
mov
sub
lret
or
add
outsb
inc
sbb
into
sarl
cltd
dec
lods
jns
sbb
test
mov
and
fldl
std
pop
mov
arpl
lahf
rolb
lock
cmp
into
in
lods
loope
or
mov
xchg
sbb
fidivs
cltd
rorb
xchg
jno
incb
rcrl
ds
push
pop
fistl
outsl
xchg
out
leave
in
rcr
xor
pop
scas
std
sub
add
jl
or
lret
jmp
mul
push
push
int3
cmpsb
imul
cmp
or
fsubr
pop
pop
cwtl
xor
jg
cmp
push
repz
push
call
out
lock
mov
mov
xchg
shl
cwtl
into
sbb
sbb
xchg
popa
ja
ror
jle
pop
mov
loop
and
adc
jl
outsl
fldcw
push
cli
sbb
test
sub
inc
mov
popf
int3
pop
fwait
dec
jbe
cltd
daa
cwtl
xchg
cmp
shll
repz
std
mov
fidivrl
cmpsb
cwtl
pop
jne
push
lret
sar
cltd
or
test
jnp
leave
push
and
rclb
inc
cs
xchg
inc
and
out
fsubl
aam
push
daa
mov
inc
sub
add
jae
int
popf
xchg
mov
add
mov
add
jecxz
rorb
inc
pop
test
cmpsl
insb
xor
or
jnp
cmpsl
mov
icebp
cmp
sbb
inc
sbb
sbb
jnp
fstpl
clc
repnz
pop
jp
xor
cmp
test
jmp
je
idiv
jne
stos
loope
flds
mulb
xchg
mov
rcrb
dec
outsb
add
xor
adc
lret
and
sarb
mov
mov
mov
nop
js
pop
stos
lock
and
sbb
add
shlb
inc
icebp
mov
pop
push
jae
mov
push
shl
pop
sbb
mov
fnstenv
or
stos
aad
js
bound
adc
inc
pop
dec
es
and
sbb
adc
jecxz
jne
pop
test
jge
push
add
jp
or
icebp
inc
sahf
ds
cmpsl
mov
adc
inc
dec
rcl
adc
adc
jle
aaa
adc
rorb
pop
popa
sbb
jo
cmpsl
sub
icebp
movsl
sbb
and
cmp
mov
aam
pop
in
add
pop
out
xor
jns
in
fisttpll
lea
mov
pushf
jp
sub
pop
jmp
jg
pop
lea
movsb
leave
inc
xchg
in
sarb
out
into
fcmovnbe
push
or
fs
sbb
pop
sbb
xchg
adc
push
add
sbb
sbb
sbb
xor
mov
lret
icebp
sub
push
xchg
int
loope
test
in
or
into
cmp
adc
movsb
mov
jnp
dec
jge
adc
enterw
cli
adc
jecxz
jl
orl
es
jno
sub
mov
int
xor
jg
mov
push
inc
fildl
sub
ficoml
xchg
cmp
pop
inc
imul
adc
inc
fldenv
sub
xor
sub
jecxz
outsb
sbb
xchg
mov
call
dec
jge
stos
cld
mov
and
jmp
dec
jl
inc
out
jbe
hlt
cltd
lcall
sbb
cmp
push
rcrl
sbb
out
sub
mov
xchg
push
repnz
push
addr16
and
and
push
and
pop
mov
push
repz
fnop
cmp
mov
add
aas
mov
ss
mov
add
mov
divl
insl
bound
add
ljmp
out
mov
dec
sub
fisttpll
jns
mov
cmp
sbb
xchg
pop
sti
add
icebp
add
lods
jnp
shrl
or
rorb
mov
neg
cwtl
in
and
push
adc
bound
popa
push
fabs
icebp
xchg
in
sub
jne
jmp
fldl
sbb
mov
arpl
jp
dec
repz
cmpsl
or
pop
enter
lods
repnz
clc
les
xchg
icebp
mov
les
pop
mov
cmp
sbb
outsb
mov
xchg
lea
std
arpl
mov
pop
xor
es
stos
and
pushf
xor
and
cmc
jg
ficomps
adc
loope
jl
fdivl
push
jl,pn
xor
mov
bound
dec
dec
and
ss
in
xor
lcall
iret
fsubr
ljmp
fsubl
js
and
jmp
dec
pop
test
sub
add
scas
pop
inc
mov
mov
add
mov
dec
leave
mov
cld
adc
pop
insb
js
mov
std
xlat
or
xlat
cmp
inc
xor
inc
cmp
mov
xchg
xchg
inc
push
dec
frstor
add
and
fiaddl
das
mov
push
data16
dec
mov
mov
push
in
stos
js
add
xchg
mov
adc
sub
fwait
and
fildl
pop
mov
into
mov
mov
bound
loop
cmp
cmp
es
pop
pop
cmp
cmp
pushf
add
push
sbb
or
and
fstpt
ljmp
lds
xlat
aaa
jbe
xchg
adc
and
insl
call
jg
or
loopne
ljmp
sub
mov
pop
jecxz
xchg
sbb
leave
add
pop
mov
inc
jle
mov
inc
add
outsl
or
xchg
sub
in
ret
mov
dec
sbb
loop
dec
rclb
int
aas
les
push
icebp
aaa
sahf
cli
cmp
inc
dec
xchg
popf
push
cli
aas
pop
dec
out
mov
sbb
aam
cmp
add
sub
mov
imulb
loope
sbbb
outsl
btr
sub
sbb
sbb
mov
fcoml
lods
sub
push
xchg
stos
cmp
daa
movsb
sub
mov
nop
shl
call
incl
adc
fldt
test
xor
jne
dec
imul
xcrypt-cfb
cmpsl
mov
aaa
jge
leave
cmpsb
cmp
xchg
push
dec
push
mov
stos
jg
scas
mov
sub
scas
into
icebp
xchg
inc
test
and
in
jae
jo
mov
dec
lods
ljmp
leave
inc
inc
mov
popf
inc
out
insb
inc
pop
mov
push
inc
pop
and
push
sub
out
mov
dec
push
xchg
jns
int
or
cmp
cltd
mov
fiaddl
leave
negb
and
mov
inc
xchg
rcrb
xchg
inc
cli
push
pusha
jecxz
xchg
sub
inc
push
push
dec
ss
add
sub
movsb
lock
push
stos
daa
inc
bound
inc
in
imul
cmp
mov
icebp
cltd
xchg
xor
nop
pop
push
xor
mov
mov
ret
cmpsb
dec
js
inc
scas
mov
and
add
and
dec
popl
out
mov
sbb
mov
inc
xor
into
ficomps
jg
push
aas
mov
add
mov
dec
rorl
cltd
pop
sbb
xor
notl
xchg
jg
stc
cli
inc
jle
jl
xlat
push
dec
mov
adc
sub
push
popa
stc
xlat
adc
xor
imul
jmp
mov
adc
test
test
mov
push
xor
jmp
jno
int3
lcall
cltd
add
adc
rcr
adc
fldl
xchg
sub
cld
fisubl
xchg
iret
push
ja
pop
xor
sbb
es
fadd
lcall
in
push
push
movsb
testl
loopne
lods
decb
cmp
lea
mov
fldl
lret
stos
out
or
imul
xchg
jmp
xlat
out
mov
das
pop
lods
lcall
mov
aaa
xchg
sbb
stos
scas
lea
mov
outsl
cmp
fwait
stos
pusha
loope
aad
shlb
das
mov
mov
jl
fwait
cmc
fimuls
adc
popl
inc
push
jecxz
xchg
adc
add
in
or
push
movsl
js
xor
cs
ret
ss
inc
lock
pop
insb
jl
shll
mov
scas
inc
in
push
js
es
popf
pop
je
xchg
mov
push
jle
cmp
ret
fidivl
mov
and
push
sub
push
mov
inc
jne
cmpsb
cmc
lret
pop
test
call
pushf
add
push
mov
pop
movsb
loopne
in
jmp
jno
xor
test
pop
or
out
cs
dec
add
push
push
rcrl
jnp
movsl
adc
outsb
cmp
mov
rorl
in
arpl
jecxz
mov
faddl
stc
xchg
scas
lea
xchg
loope
repnz
dec
and
enter
repnz
xor
sbb
cmp
cmp
loope
mov
jl
repz
mov
adcb
loop
mov
dec
cs
jne,pn
jns
pop
cmp
loop
mov
shrl
pop
scas
imul
adc
cli
mov
icebp
sub
stc
fldl2e
pusha
push
lahf
xchg
repnz
out
clc
stc
sub
pop
lret
pop
inc
cltd
pop
hlt
outsl
std
test
es
sbb
push
dec
xchg
jmp
xchg
insl
ficompl
incb
outsl
mov
lcall
mov
test
pop
dec
xor
test
jge
outsl
mov
fistl
inc
imul
sbb
inc
and
xchg
popa
test
inc
loopne
dec
and
sarb
adcb
flds
std
xchg
mov
push
lods
cmpsb
push
xor
jb
and
out
test
das
movsb
rcr
pop
pop
add
jae
mov
push
out
fsubl
adc
ss
mov
jne
test
dec
sbb
repz
cmp
fsubl
iret
cltd
sbb
pop
sbb
aad
add
dec
lahf
xchg
mov
pushf
add
and
push
mov
data16
xor
xorb
cmp
cmpsb
mov
insb
call
jnp
stos
xor
fbstp
repnz
div
fldl
and
out
fdivrs
mov
movsb
inc
in
iret
sbb
imul
or
int
dec
adc
imull
push
cli
pop
cmc
push
cld
pop
mov
stos
or
aad
lahf
or
imul
push
xchg
fwait
jge
mov
or
or
imul
mov
or
push
rolb
pop
xchg
cmc
int
push
std
pop
mov
jnp
imul
enter
mov
sbb
push
sub
mov
mov
xlat
stc
clc
js
pop
xor
inc
add
out
lret
jmp
adc
mov
pusha
jl
lods
outsl
push
or
xchg
faddl
push
mov
hlt
cltd
pop
mov
fwait
aaa
dec
xchg
fmull
pushl
subl
xor
test
les
adc
xor
or
push
mov
call
jmp
notl
pop
call
cli
clc
mov
js
lods
jb
push
add
xchg
xchg
mov
stos
cli
xchg
jo
xchg
cmp
xchg
test
into
mov
xchg
lock
add
in
js
mov
dec
cmpsb
rcll
sub
sub
sub
inc
xchg
sbb
fwait
sbb
fnsave
mov
adc
or
mov
sti
dec
pop
xor
jno
mov
pop
adc
dec
xor
fisubrl
mov
ja
mov
push
mov
xor
dec
add
push
mov
cwtl
push
sbb
orl
mov
mov
mov
ss
lret
outsb
mov
and
sbb
inc
push
sbb
mov
test
scas
fists
icebp
pop
push
xor
lods
rolb
mov
daa
repz
mov
stc
js
js
pop
dec
or
dec
divl
mov
jne
nop
jecxz
xchg
sub
rorb
xor
div
outsl
xchg
mov
cmp
fs
mov
jmp
xchg
sbbb
inc
rcr
add
inc
pop
push
rcl
cltd
mov
call
sbb
mov
mov
repz
and
outsl
inc
cmc
icebp
pop
add
cmp
cmp
cmp
nop
js
cmc
pop
cmc
cmp
stc
mov
sarb
xor
insb
mov
sub
test
jl
jmp
jbe
mov
shl
fcomi
outsl
into
dec
outsb
cmp
mov
pop
mov
clc
scas
in
insl
and
insb
in
sbb
add
mul
mov
jl
les
push
mov
cmp
adc
rcl
bnd
je
jns
mov
pop
call
pop
movsl
icebp
dec
xor
rcl
cwtl
call
push
sbbb
or
sbb
mov
push
lock
cmp
mov
jo
cmc
xor
imul
cmp
sbb
jb
mov
rclb
xchg
rcr
in
push
push
addb
int
jo
mov
dec
in
sub
xchg
cmp
clc
fnstsw
pop
cltd
pop
out
mov
dec
mov
jno
mov
inc
nop
call
shlb
aaa
icebp
clc
and
pushf
repz
es
movsb
mov
movsl
fiadds
push
jecxz
inc
push
fstl
rolb
cmpb
mulb
pop
les
lahf
jle
in
sar
aas
jg
xchg
pop
xchg
mov
xchg
mov
jle
mov
ret
imul
mov
xor
addl
xlat
push
test
sahf
fidivrl
xor
xor
mov
shlb
inc
dec
push
in
sub
mov
xor
xchg
cmp
mov
jno
clc
jne
pop
mov
jbe
imul
or
adc
lcall
movsb
push
es
inc
xchg
adc
mov
mov
addr16
lds
push
mov
push
daa
add
pop
mov
ljmp
icebp
fucom
push
daa
icebp
clc
adc
xlat
push
add
mov
add
loope
mov
rol
loopne
cwtl
movsb
xchg
add
mov
jo
call
jle
cmp
inc
call
ret
sti
and
jne
push
push
shrl
ljmp
jmp
push
xchg
jge
mov
hlt
xchg
imul
lahf
fmull
out
stos
xor
dec
cmc
mov
pop
imul
mov
ja
xchg
mov
mulb
aam
iret
repz
xorb
lret
insb
adc
arpl
je
sbb
andb
mov
out
mov
mov
sub
and
xchg
mov
ds
jb
sbb
xchg
xor
mov
and
inc
in
lea
lea
fwait
ss
jge
fimuls
jg
pop
mov
sub
stc
cmp
xchg
test
xchg
sbb
aas
cmpl
jecxz
sbb
psubsw
movsb
mov
pop
cmp
push
lock
ret
imul
jmp
add
loopne
and
xor
daa
jb
sbb
les
sub
dec
xor
cld
ret
icebp
cmpsl
sbb
rol
dec
jle
mov
mov
aas
stos
xchg
mov
movsb
xchg
cmpsb
push
aas
sbb
xchg
call
outsl
dec
lcall
lahf
imul
sbb
lods
leave
arpl
inc
push
lea
arpl
cmpsb
mov
loopne
cwtl
add
dec
xor
xor
shlb
push
push
jecxz
jmp
mov
lcall
push
icebp
mov
enter
incl
imul
mov
lock
sahf
out
fstpt
mov
and
test
sub
mov
das
push
sub
mov
push
imul
push
leave
mov
leave
pop
add
fcos
xor
and
pop
aam
pop
clc
lahf
movsl
lods
or
stc
push
je
mov
push
mov
mov
scas
dec
xor
neg
mov
cmp
aas
std
shlb
scas
or
das
xor
les
or
loop
cltd
xchg
mov
mov
inc
leave
mov
mov
lahf
mov
popf
ja
fldcw
pop
ret
pop
pop
adc
or
mov
or
push
das
ds
sahf
rclb
inc
push
mov
mov
sti
mov
into
xor
fbstp
outsb
and
mov
in
shrl
in
mov
mov
repnz
jmp
mov
insb
cmp
push
dec
xchg
pop
jmp
push
add
mov
pop
enter
nop
inc
repz
fwait
sub
push
fmul
mov
ljmpw
add
xchg
and
mov
aaa
fneni(8087
scas
jge
cld
std
shll
int3
xchg
fcoms
jnp
jge
stos
and
jecxz
inc
and
movsl
cmpsl
out
push
sub
dec
ljmp
lret
sbb
outsb
push
adc
out
sub
lret
lds
add
inc
jl
xchg
dec
sub
mov
cs
mov
imul
adc
mov
enter
lds
test
xchg
sbb
dec
faddl
arpl
stos
adc
mov
mov
les
and
dec
mov
jnp
dec
lods
jmp
mov
mov
jge
cmp
nop
loope,pt
pop
mov
sahf
push
mov
pop
rol
sub
cmovp
sub
mov
ds
mov
jmp
in
aad
cmp
sahf
jno
pop
lods
aam
shll
lods
adc
pop
xor
adc
cmp
je
sub
out
push
cmp
cwtl
mov
dec
test
fistps
pop
push
lret
arpl
or
shl
fidivrs
jae
and
imulb
and
lods
cmp
insb
insb
fildl
scas
and
jns
pop
sub
outsb
sub
mov
adc
rorl
pop
lret
mov
or
lcall
mov
sub
sarl
cmp
xchg
notb
dec
punpckhbw
cs
in
dec
testl
leave
pop
mov
adc
mov
mov
mov
lods
xlat
test
addr16
sbb
dec
negl
adc
sbb
stos
inc
push
sbb
mov
dec
sbb
imul
pop
fdivs
cmpsb
mov
mov
cs
pop
or
mov
es
rclb
inc
push
pop
pop
pusha
out
cmpsl
repnz
add
adc
xor
xchg
arpl
push
mov
out
mov
push
sahf
jle
pop
add
ret
mov
dec
pusha
shll
add
and
movsb
ss
lahf
stc
cmp
inc
xor
push
in
push
fbld
inc
stos
sub
cmp
out
sub
push
push
imul
inc
mov
pop
out
jnp
xor
arpl
gs
add
jg
inc
mov
xchg
push
ss
mov
and
jmp
push
or
popf
in
pop
xor
mov
das
int3
popf
dec
hlt
je
ret
jo
add
mov
mov
fwait
jge
bound
roll
xchg
cltd
pop
jne
mulb
call
jns
test
and
loopne
add
or
mov
or
inc
fwait
into
scas
and
cld
mov
ffree
cmp
add
mov
cwtl
and
movsl
out
movsl
mov
hlt
cmp
popf
in
cld
ljmp
pop
cld
push
fs
add
loop
mov
cs
rolb
mov
xchg
enter
loopne
in
mov
fsubrl
add
xor
cmp
insb
sbb
fisttpll
out
sbb
mov
imul
lret
shrb
sbb
dec
mov
std
imul
int
and
rcrb
sub
mov
adc
fisubrs
dec
cmp
dec
pop
movl
mov
iret
push
fwait
sbb
dec
inc
mov
or
jae
call
dec
sub
mov
sahf
sub
test
adc
bound
lahf
dec
jmp
mov
js
push
imul
and
or
dec
lock
dec
lods
loopne
fmull
into
mov
xchg
enter
icebp
jecxz
jbe
repnz
pop
xor
repz
jecxz
xchg
repnz
pop
cmc
adc
sbb
ret
cwtl
cmp
pop
popf
mov
sti
adc
dec
sbb
or
mov
mov
sarb
inc
push
and
cwtl
mov
enter
dec
scas
inc
adc
enter
push
nop
fcomp
movsl
imul
jno
in
lahf
fnsave
lret
rorl
pop
shrl
ds
and
shrl
stc
or
inc
pop
sub
adc
fadds
xchg
test
jns
rorb
xor
push
cmpb
fwait
or
sbb
or
and
fcoml
adc
push
adcl
js
out
test
shll
mov
sti
out
testb
stc
into
sub
decb
push
jmp
pop
aaa
int
push
mov
push
dec
fdivs
imul
aas
mov
or
pushf
stc
or
inc
mov
pop
fstpt
or
out
cmpsl
fmull
xchg
and
jns
fdivr
jp
jle
mov
iret
outsb
sbb
adc
xchg
push
mov
push
fldt
in
dec
or
cmc
xchg
pop
mov
ljmp
sbb
inc
xchg
cmpsl
dec
dec
mov
sub
add
repnz
mov
test
addr16
xor
stos
ss
pop
mov
push
xor
jo
dec
pop
inc
test
jmp
scas
fistpll
xchg
imul
dec
sub
mov
mov
sub
jb
bound
mov
loope
mov
andl
repz
fbstp
rcrl
repz
xorb
mov
cltd
mov
adc
cmpsb
int3
arpl
mulb
push
scas
inc
test
mov
mov
les
outsb
mov
xchg
sub
test
xor
adc
mov
adc
adc
sub
test
adcl
aad
cwtl
mov
fistps
jnp
les
call
movsl
or
or
popa
push
adc
mov
addr16
enter
gs
jg
xor
not
pop
lods
stos
cltd
pop
sbb
faddl
or
push
cli
mov
popf
jmp
push
pop
xchg
ret
jns
jbe
mov
xchg
mulb
pop
jae
jae
xchg
dec
movsl
ret
call
sbb
push
jbe
clc
in
xor
and
xchg
lahf
insl
add
ljmp
hlt
sahf
xchg
jb
jmp
inc
daa
sbb
inc
push
sbb
pusha
jae
sbb
fcoms
xlat
xlat
fwait
clc
sahf
jns
stos
mov
imul
cmovae
pop
mov
mov
arpl
push
pop
or
in
arpl
pop
enter
aas
mov
sbb
insb
int3
adc
insl
stos
ret
enter
movsb
xor
hlt
jbe
in
clc
pop
dec
insb
insb
punpckhbw
sbb
cmp
jnp
sub
dec
xor
test
je
aas
cmpb
mov
and
mov
dec
mov
data16
in
movsb
sbb
int3
xchg
aad
cli
testl
lock
enter
insb
call
jmp
aam
lods
cmpsl
lea
ds
sbb
mov
jg
outsb
mov
scas
outsl
pop
outsl
ror
mov
add
out
stos
out
call
lock
pop
push
sbb
pop
mov
in
or
push
mov
pop
mov
cmp
add
test
xchg
mov
mov
cmp
add
xor
lods
call
inc
push
out
push
xor
inc
es
imul
ja
jle
int
jb
jecxz
mov
pop
pop
repz
jmp
mov
sbb
ljmp
xor
xchg
lcall
sub
data16
in
lret
std
and
pusha
out
pop
or
fisubrl
and
into
mov
dec
pop
cmpsl
push
mov
lods
sbb
pop
jns
subb
inc
cmovs
pop
icebp
mov
aad
pop
jp
push
dec
ds
lahf
push
cld
and
ljmp
lods
xchg
inc
and
inc
andl
ret
inc
push
cli
and
or
push
add
dec
pop
std
scas
in
aam
lea
aaa
pop
daa
mov
jb
or
insb
ficoml
add
shll
dec
pop
movsb
xchg
in
xlat
mov
xor
and
mov
dec
icebp
pop
push
cli
dec
cmp
jmp
fisubrs
or
jmp
loopne
test
cmc
and
imul
lcall
ja
inc
sarb
ss
insb
dec
sub
leave
repz
push
dec
xor
cmp
sub
ret
add
rcr
jg
add
dec
faddl
stos
imul
xchg
mov
xchg
jg
imul
mov
mov
movsl
iret
mov
popa
xchg
stc
ss
jl
add
shrb
add
jp
pushf
push
cmp
adc
push
sbb
outsl
push
arpl
aad
cli
push
pop
or
dec
dec
lret
jg
test
xor
pop
js
fistpll
or
or
test
mov
fsubr
out
dec
jb
and
lods
mov
test
jmp
mov
inc
sbb
aad
mov
dec
mov
enter
push
push
loope
loop
adc
in
sub
add
mov
mov
mov
mov
push
ja
mov
mov
mov
fnclex
mov
and
add
aas
loop
mov
push
xchg
in
call
aaa
jb
dec
int
add
and
setnp
test
mov
movsl
jle
lcall
mov
stc
pop
cmp
mov
loop
mov
mov
mov
or
mov
and
jl
pop
mov
or
ficompl
idivb
hlt
out
imulb
adc
xchg
in
mov
xlat
js
mov
shrl
jg
popf
enter
or
xorl
sub
jns
filds
push
loop
loope
stc
jo
lds
popf
adc
test
mov
sub
fimull
stos
fildl
ss
sbb
pop
clc
enter
and
add
in
adc
fwait
das
xlat
xchg
std
lret
repnz
ficoms
dec
into
std
in
jns
xchg
loope
fcompl
inc
cli
pop
popf
inc
sti
sbb
lods
and
push
jbe
or
ja
mov
idivb
repnz
stc
ret
mov
inc
repnz
call
stos
ja
adc
mov
call
fbld
ja
mov
xchg
pop
icebp
sub
out
fnclex
cwtl
fmul
out
sub
movsl
inc
jl
andl
push
lds
lock
sub
inc
add
jp
icebp
adc
fidivl
and
ret
lds
jns
std
std
mov
cmp
sbb
negl
push
rol
add
push
divl
xlat
mov
or
mov
out
icebp
nop
repz
lods
push
or
rorl
cmp
mov
xchg
into
pinsrw
dec
sub
jg
fisubrl
jo
pop
test
mov
inc
push
ret
jmp
push
into
jns
adc
fstl
and
push
inc
nop
iret
jle
insb
pop
je
sbb
rcrl
sbb
fcomps
subl
les
je
sbb
ss
pop
sub
scas
dec
add
sbb
mov
mov
mov
jmp
add
lcall
push
jg
sub
sub
push
mov
jae
enter
dec
and
imul
fbstp
xchg
jno
xor
sti
sbbb
xchg
gs
imul
call
sub
outsb
jp
sbb
mov
pop
xor
ja
mov
cmc
mov
sbbl
ja
lods
pop
in
mov
jns
and
iret
pop
sub
jo
int3
adc
push
cmp
into
inc
add
enter
and
or
mov
pop
adc
xchg
pusha
push
les
cmp
orl
lahf
sub
mov
repz
lds
movsb
imul
dec
cli
nop
adc
rcll
inc
addr16
popa
cwtl
inc
mov
push
xchg
rsm
shll
dec
outsl
dec
xor
imul
add
mov
pop
sub
sbb
cs
cmp
mov
int
fmul
push
addr16
sub
mov
push
mov
iret
incb
add
fs
lcall
fsubrl
cs
pop
push
cmp
mov
aad
lods
ss
in
inc
addr16
xor
es
out
inc
and
cmc
test
orb
push
ret
outsb
or
iret
in
dec
cli
or
pushf
inc
and
popa
mov
mov
ficoms
dec
mul
movsb
ret
mov
cmpl
cmp
repnz
aaa
add
out
mov
jne
icebp
cmc
fldl
xchg
pop
cmp
int
xor
xchg
xchg
loop
ret
sub
push
pop
leavew
pop
aam
aam
lahf
mov
jle
aam
idiv
lcall
or
enter
mov
inc
pop
jb
pop
jle
dec
mov
inc
daa
push
and
jp
xor
push
frstor
data16
inc
insb
jns
sbb
dec
dec
enter
lahf
add
push
inc
or
rcrl
bound
rdtsc
movsb
pushf
mov
mov
pop
sahf
out
faddp
dec
adc
adc
insb
jb
pop
inc
cmp
out
in
cmpsl
inc
cmc
push
mov
lret
jl
xchg
sbbb
fsubl
mov
push
pop
or
shlb
filds
mov
xchg
sbb
insl
dec
mov
inc
idivl
rorl
jp
dec
in
sahf
inc
std
and
xor
mov
in
cmp
repz
xor
imul
pusha
mov
mov
cld
sti
add
lahf
xor
andb
cmp
push
pop
sub
out
xchg
cmp
test
out
in
cmp
dec
push
out
or
dec
cltd
push
push
xor
push
dec
inc
jbe
cs
mov
dec
pop
mov
xchg
adc
dec
lahf
insl
addr16
fidivrs
jb
mov
xor
jp
lret
cs
lss
outsl
out
and
outsl
rcl
fistpll
fnstenv
mov
imul
mov
cwtl
xor
push
test
mov
cs
push
mov
mov
ljmp
xchg
in
lcall
add
shlb
les
fs
rcll
dec
cld
insb
and
push
xor
mov
in
jbe
out
ficompl
insb
inc
ss
sub
addl
rcrl
leave
add
popa
add
jecxz
pop
flds
pop
cltd
jnp
xor
imul
jnp
push
daa
imul
mov
adc
insl
imul
cmp
ficoms
call
mov
cwtl
jae
xchg
clc
xchg
inc
in
shll
sbb
jp
dec
std
push
clc
jb
sub
cltd
decb
stc
inc
adc
lds
cmc
sub
out
xchg
xchg
inc
dec
push
rcll
je
pop
sub
and
enter
cmp
cmp
xor
dec
and
int3
mov
out
rep
int3
mov
shll
fcoms
lret
sub
dec
cltd
cmp
mov
pop
into
clc
mov
out
or
daa
cli
mov
and
repz
pop
push
pop
insl
daa
sbb
maxps
enter
orl
les
aam
sbb
out
cmp
sbb
movsb
nop
lock
hlt
mov
repnz
std
ret
lea
mov
add
int
xor
fsubs
sbb
movsb
pop
iret
scas
push
fisttpl
or
stc
iret
bound
es
xchg
xchg
mov
mov
inc
mov
fdivl
mov
mov
dec
mov
mov
or
xchg
rcrb
nop
call
hlt
xor
mov
inc
and
cmp
out
dec
add
xchg
call
clc
and
mov
mov
lahf
pop
and
sarb
je
cmp
and
xchg
sub
mov
dec
cmp
into
movsb
mov
push
cmp
xchg
repz
movsl
jecxz
sbb
push
and
lcall
pop
sub
ret
jne
add
popl
mov
pop
jbe
dec
inc
inc
dec
add
std
test
sub
cld
scas
dec
out
movsl
inc
sub
das
lcall
gs
xor
bound
xchg
daa
cmpsl
push
hlt
pop
sub
add
mov
or
fdivl
dec
xchg
ret
mov
mov
xchg
loope
xchg
clc
lods
pushf
mov
cmp
jge
test
aad
inc
fists
xor
or
push
sbb
ss
jno
push
mov
shll
lock
pop
bnd
and
ss
xorb
pusha
scas
gs
push
pop
adc
xchg
fisttps
xchg
sar
ret
call
dec
fs
xor
outsl
lret
pushf
xor
daa
mov
data16
shrl
dec
lods
out
out
mov
fwait
mov
pushf
in
sbbb
push
rol
je
aas
jne
push
cwtl
or
inc
sbb
js
adc
inc
add
lea
lods
cmpsb
jb
bnd
stc
add
loop
lods
lea
jecxz
sub
sub
adc
sbb
dec
jns
popa
lods
inc
xlat
xchg
mov
dec
aas
dec
push
mov
enter
dec
xor
inc
inc
inc
sub
sub
and
push
xor
push
movsb
mov
push
push
xchg
adc
ficoms
das
or
daa
or
out
ss
jne
mov
icebp
add
or
out
ja
add
xchg
repz
cmpsl
scas
rorl
mov
fs
pop
rorb
xchg
mov
sbb
les
int
mov
sbb
cwtl
and
and
jno
mov
mov
mov
or
movsl
adc
lea
push
sub
lahf
out
ret
addr16
sbb
icebp
daa
enter
cmp
sub
pop
fdivrl
jp
inc
jl
push
push
adc
mov
sub
pop
sbb
pop
int3
push
insl
stos
push
lea
out
iret
test
push
mov
and
stos
adc
mov
andb
ss
hlt
dec
jns
in
leave
jl
sbbb
push
mov
mov
and
orb
and
popa
int3
jo
sbb
mov
or
mov
add
jge
jb
daa
and
lds
mov
ljmp
cmc
gs
mov
sub
xchg
xlat
mov
mov
or
mov
inc
pushf
dec
nop
mov
push
into
in
fildll
xchg
and
incl
inc
les
loop
inc
cmp
mov
sbb
pop
cmp
cmpsl
fdivrp
add
ficoml
aas
sbb
sub
loopew
popa
rolb
in
xchg
mov
or
jne
mov
test
mov
jae
ljmp
xor
mov
adc
in
dec
out
testl
xor
jge
daa
cmp
stos
daa
mov
mov
push
fists
test
jmp
ret
sbb
repnz
aad
or
inc
lods
and
rcrl
cs
out
push
lret
rol
pusha
mov
outsb
push
mov
mov
jne
insb
nop
or
movsb
and
sti
leave
int3
adc
inc
xor
dec
jae
adc
testl
mov
mov
rcrb
sub
xchg
xor
push
lahf
and
movlps
jle
adc
inc
incb
xor
imul
fwait
pop
ret
mov
push
rolb
xchg
xor
mov
xor
add
pop
cltd
mov
mov
add
adc
mov
int3
xchg
ret
xchg
in
cmp
push
mov
leave
faddl
push
cmp
xor
mov
jp
sub
pop
cld
dec
decl
sti
mov
jnp
dec
and
xor
push
dec
popa
sub
lods
add
or
pop
decl
add
fcoml
lock
mov
mov
and
dec
stos
repnz
lds
jb
int
loop
divb
ss
xchg
adc
test
dec
add
std
pushl
lods
push
insb
in
je
dec
xchg
arpl
divb
and
repnz
adc
cmp
shr
xor
ret
call
mov
xchg
and
in
popa
popf
push
inc
xchg
xor
cmp
daa
clc
push
mov
and
lret
jbe
shr
pop
iret
stos
and
sbb
inc
push
fndisi(8087
gs
in
ss
sahf
jge
sti
sub
lret
pop
jl
aaa
push
sbbb
xchg
xchg
mov
andb
push
push
enter
es
imul
je
sysret
inc
pop
mov
insb
mov
test
lods
sub
out
cmp
ljmp
movsl
cli
int3
and
nop
mov
jle
inc
pop
cmp
bound
mov
and
cmp
aaa
mov
push
add
cmp
mov
ss
shrl
sbbl
mov
xor
adcb
out
call
inc
sbb
popf
pop
outsb
cs
fldl2e
jno
repnz
gs
lret
and
das
mov
in
dec
inc
mov
pop
mov
dec
sarb
adc
and
cmpsl
xlat
adc
ret
jae
shll
jmp
es
ret
lods
inc
dec
jo
pushf
scas
loop
clc
and
adc
and
daa
loopne
jb
enter
lock
into
lds
cld
je
lmsw
sub
and
scas
jp
and
cmpsl
inc
mov
pop
out
fldcw
pop
repnz
jcxz
ret
or
imul
lods
data16
push
shrb
mov
aam
dec
popa
cmp
cmc
mov
sub
sbb
push
mov
mov
test
fiaddl
mov
cs
lahf
and
push
fwait
cmp
ja
lea
shr
popa
dec
xor
aas
rorb
icebp
push
sub
mov
les
dec
adc
xor
in
addr16
popa
sub
pushf
adc
cmpsl
xor
div
icebp
inc
mov
push
mov
fnstsw
mov
pop
sbb
rcl
jno
sbb
hlt
or
leave
dec
out
xchg
push
and
jns
add
cmp
pop
mov
insl
xorl
popa
xchg
dec
adc
out
xor
or
nop
or
cwtl
or
jns
iret
xor
xor
jp,pt
push
ret
push
les
rcll
gs
add
testl
mov
pop
shrb
push
pop
or
xorb
loopne
jmp
or
xlat
lahf
jne
sti
fwait
insl
jbe
push
sub
add
mov
cmp
fnstsw
insb
add
addr16
inc
adc
roll
test
xchg
adc
add
pop
add
fistpl
jnp
dec
insl
jne
mov
and
cmp
cmp
push
rol
mov
xchg
jae
jp
data16
and
in
mov
sarl
mov
lds
cwtl
das
test
sti
sub
adc
sbbb
adc
outsb
iret
ss
sahf
inc
psrlw
push
sti
scas
jbe
fbstp
sar
mov
xor
adc
pop
mov
lds
inc
or
mov
and
xor
call
aad
pop
aaa
or
test
jns
imul
sub
push
dec
fldl
cwtl
xor
ds
daa
test
sub
es
and
xchg
fnstsw
bound
test
int
das
mulb
outsl
lret
test
pushw
xchg
leave
bound
mov
mov
push
xchg
idivb
fcoml
add
push
lcall
mov
adc
imul
cmpsl
xchg
add
adc
xor
mov
jmp
cmpsl
push
sti
aam
mov
mov
inc
in
push
or
push
mov
xchg
sub
daa
out
mov
pop
out
in
xor
push
insl
xorl
mov
orb
xchg
push
dec
xchg
xchg
push
sbb
aad
sub
push
ds
cltd
mov
shll
jecxz
or
in
scas
ljmp
dec
push
sbb
mov
enter
or
jg
cmp
xchg
sub
jmp
pop
ret
cmpsb
repz
iret
imul
test
xchg
pop
repnz
mov
in
mov
je,pt
incb
cmc
sarl
je
rorl
pop
push
rcrl
adc
nop
imul
dec
adc
push
out
mov
in
cmp
lea
in
in
mov
inc
and
pop
cmp
pop
inc
and
dec
pop
mov
xchg
cmp
mov
out
out
test
mov
or
mov
sub
mov
inc
icebp
sbb
fbstp
pop
movsb
mov
mov
pusha
jg
je
sbb
popf
sub
stos
aaa
mov
sub
mov
and
inc
cmp
xor
insl
jne
sub
popl
adc
add
mov
dec
mov
or
push
sbb
outsb
rol
dec
sbb
jle
push
fisttpl
lahf
subl
and
xchg
pop
and
stc
xlat
shrb
cmp
lret
outsl
jp
cltd
fiaddl
jb
bound
pop
not
add
in
int
lret
pop
iret
dec
sbbl
movsb
pop
js
cmpsl
cld
mov
jno
test
ret
das
aas
sbb
loopne
pusha
sahf
ret
push
push
les
cmpsb
pop
mov
lock
mov
sub
mov
mov
mov
test
arpl
bound
push
push
sbb
data16
push
push
push
pushf
lds
push
jbe
test
mov
cmp
mov
cmpsb
sarb
lods
add
das
test
cmp
xchg
cmp
movsb
lods
test
fisubl
mov
lods
hlt
imul
stc
cmp
jle
cld
or
jae
enter
je
mov
in
subb
fnstsw
push
mov
ds
call
xor
cmc
inc
aad
dec
mov
lods
out
enter
pop
mov
shr
inc
jns
cmp
sub
iret
and
adcb
lods
jge
lods
push
xor
loope
movsl
jno
movsl
cmp
into
lret
movsb
xchg
imul
sbb
jmp
fbld
jecxz
pop
fdivs
xor
les
push
std
mov
pop
mov
inc
inc
data16
cmpsb
add
add
andb
add
mov
add
push
pushf
xor
mov
xor
dec
sarl
sbb
cld
ficoml
mov
pop
dec
jg
xchg
or
mov
cmp
and
lret
mov
add
jns
aam
mov
mov
dec
or
mov
pop
loope
push
pusha
and
pop
ja
inc
xchg
dec
les
aad
out
mov
popf
sub
sarb
pop
sbb
sbb
dec
pop
dec
mov
cmp
mov
push
mov
outsl
das
cmp
sub
mov
push
sub
bound
xchg
mov
int3
add
xor
mov
mov
ficompl
addr16
mov
popf
dec
pop
push
gs
test
in
add
mov
ret
pop
mov
movsb
inc
es
dec
and
dec
jle
push
ja
xchg
std
pmaxub
inc
and
arpl
ja
push
insb
insl
lahf
dec
sbb
dec
mov
popf
popa
fidivl
cmp
imul
insb
andl
enter
xchg
popf
nop
sub
mov
and
test
jns
and
add
ror
mov
fbstp
xchg
aad
dec
or
sub
std
or
add
fsubrl
mov
jno
and
cs
xor
roll
dec
mov
and
pop
lahf
jbe
and
in
add
jl
ret
fcmovnb
jae
cltd
cmc
adcl
test
xor
fdivrs
xchg
mov
inc
int3
add
push
flds
xchg
ljmp
ljmp
xchg
or
mov
dec
lock
test
sbb
jmp
scas
dec
mov
sarb
dec
push
in
std
jbe
aaa
leave
xor
cmp
repnz
mov
add
mov
es
sarl
push
fsub
sub
imul
sub
jmp
lds
fsts
mov
push
in
imul
aas
dec
aas
cwtl
leave
jg
and
dec
fists
push
and
pop
or
push
xor
out
add
lcall
std
test
mov
jle
xchg
nop
or
cli
dec
dec
ljmp
sub
and
dec
add
dec
and
and
xchg
cwtl
and
imul
jbe
mov
ret
andl
pop
addr16
divb
jle
pop
cmpsb
cmpsb
inc
pop
push
call
outsb
push
out
lds
pop
cmp
push
cmp
mov
out
jo
xchg
fldt
dec
mov
xor
std
fldcw
sbb
outsb
and
mov
xor
xchg
add
add
cld
iret
mov
cld
hlt
ljmp
jp
fisttpl
dec
sub
push
test
out
mov
call
and
sbb
jnp
cmpsb
cmpsl
mov
and
inc
loop
sti
jecxz
std
mov
pop
mov
cs
or
dec
sbb
loopne
lods
adc
gs
sub
out
stc
xchg
fistl
push
fldenv
and
pop
or
jmp
push
arpl
xchg
test
or
scas
or
fistpl
stos
mov
cli
mov
jbe
movsb
push
push
addl
loope
mov
iret
mov
xchg
mov
pop
jb
insb
pop
jg
int3
sahf
in
addr16
je
cltd
cltd
inc
sbbl
iret
nop
xchg
adc
jge
mov
mov
lret
pop
aad
pop
pop
cltd
mov
add
sar
push
into
test
xlat
pop
mov
xchg
inc
lea
push
mov
jbe
lods
lea
fdivl
loop
mov
jg
push
aas
sbb
xchg
imul
cmpsb
xchg
or
imul
cli
inc
jle
std
popa
sbbl
push
mov
jae
sbb
pop
in
lds
or
arpl
add
aas
rclb
loope
addr16
pop
mov
pop
push
pop
pminub
pop
lea
loope
iret
int
push
icebp
sub
aaa
add
jno
mov
scas
stos
and
jecxz
mov
mov
lret
loope
sbb
call
cmpl
pop
loope
lea
xchg
addl
mov
pop
mov
cmp
and
mov
jb
fistl
add
and
and
or
sbb
jecxz
insl
or
adc
and
je
mov
xor
mov
add
pop
rep
int
sub
es
jg
ds
rcrb
or
mov
sub
pop
lret
push
fiadds
mov
test
cmc
and
stos
add
inc
jb
mov
repz
lret
ja
std
jno
adc
addr16
inc
mov
inc
ret
fsts
pop
repz
std
jl,pn
and
pop
out
call
mov
dec
imul
lods
add
cwtl
inc
xor
xchg
mov
jle
jne
scas
daa
cmp
xor
nop
jno
jbe
iret
or
scas
inc
inc
adc
mov
jae
outsb
add
dec
mov
fdivrl
iret
dec
aaa
mov
mov
jecxz
scas
lret
jo
jne
pop
shrb
jge
fs
xor
lcall
dec
je
mov
inc
scas
popa
dec
add
mov
lret
ljmp
mov
dec
dec
mov
popl
aaa
movsb
sarb
cli
repnz
ret
out
pop
dec
mov
xchg
dec
jno
xorl
popa
mov
loopne
inc
cwtl
decl
rcrb
pop
inc
adc
daa
shll
loope
mov
lock
cld
and
mulb
ss
lea
cwtl
jle
faddp
or
pop
adc
sub
mov
test
cmc
sahf
mov
test
and
test
inc
dec
mov
jmp
sub
cmpsl
sub
lods
rcrb
jg
hlt
movsl
and
pop
aad
add
xor
and
push
lds
inc
sarl
inc
dec
jno
jle
enter
mov
sub
lahf
and
adcb
xor
test
mov
daa
fcoms
cmpsb
jg
mov
mov
cmp
inc
aas
gs
xchg
jae
add
icebp
pop
sahf
sub
dec
into
mov
dec
jnp
xchg
jmp
rep
roll
pop
xor
inc
int
fadd
jmp
inc
loopne
adc
lret
jae
nop
movsb
jmp
lods
nop
outsb
push
inc
fisttpl
loope
pop
sti
inc
cmpb
mov
inc
int3
data16
and
pop
lcall
ret
jo
popf
jo
fs
imul
movsb
lret
xor
aas
enter
ss
pop
lret
sub
aaa
mov
cld
dec
lods
xor
loop
inc
fistpl
lods
dec
sbb
sar
cmp
mov
and
test
enter
cmp
pushf
sbb
jecxz
clc
push
lret
adc
mov
adc
addl
mov
xchg
xlat
mov
sub
scas
add
push
daa
enter
cwtl
popf
xor
lods
scas
jno
mov
rcll
popa
rcl
add
dec
scas
mov
mov
inc
cld
sti
call
dec
dec
scas
mov
std
xchg
lods
mov
fwait
sub
arpl
pop
shrb
inc
imulb
mov
mov
mov
rep
xchg
jle
jle
pop
push
daa
pusha
clc
push
pop
adc
std
jae
sub
shlb
cmp
psrld
scas
inc
clc
pop
popa
jmp
negb
iret
inc
aam
outsb
jne
xor
out
mov
mov
and
aas
dec
push
in
sub
rolb
mov
mov
cltd
cmp
int
loop
sub
adc
add
sbb
mov
fimull
xorb
mov
pop
int
cmp
cmp
test
test
jp
push
adcl
adc
mov
loope
push
push
cli
push
imul
int
sbb
int
icebp
lahf
push
xor
push
inc
jle
ljmp
pusha
push
aaa
sbb
jno
loope
xor
mov
pop
xchg
mov
mov
cmp
pop
sbb
mov
pop
inc
inc
sub
adc
in
sbb
ret
adc
shll
pop
data16
pusha
inc
imul
mov
sub
pop
xlat
cwtl
mov
ret
push
aas
ffree
pop
dec
sbb
cli
cs
mov
cmp
mov
push
gs
push
dec
movsb
xor
mov
cmp
movsl
fyl2x
sub
aad
stos
sub
shrb
addl
sub
ja
divb
loopne
icebp
aam
aad
or
or
adc
xlat
loopne
adc
or
xchg
or
or
xor
cld
sub
mov
ja
ljmp
je
lret
out
mov
test
sahf
sar
jbe
shll
movsl
mov
sbb
mov
or
push
mov
and
popa
pop
call
aam
add
frstor
mov
jae
std
adc
std
in
dec
inc
repnz
xchg
pop
lock
std
pop
out
andb
pop
jbe
cs
jg
cmp
xchg
ret
hlt
enter
imul
fbstp
xchg
cmp
sub
jne
cmpsl
stos
xchg
and
xor
lret
rolb
sub
vshufps
jne
adc
lds
daa
loope
xor
xlat
pop
inc
mov
push
psrlw
lock
mov
cmc
jne
mov
cmp
add
sbb
lock
push
inc
in
inc
or
push
mov
outsb
loopne
mov
mov
out
mov
adc
xor
or
cltd
inc
xchg
push
out
fbld
lods
ja
push
sub
xor
pop
lods
xor
dec
into
sub
push
cmp
sbb
aam
push
mov
mov
es
shrb
loopne
rorl
mov
cwtl
and
jmp
rolb
cmp
es
pop
cld
mov
out
push
inc
mov
adc
push
loopne
xor
loop
or
dec
mov
and
push
mov
mov
inc
push
sbb
push
rorb
jg
or
fnstcw
cwtl
bound
mov
mov
adc
sub
mov
or
adc
sbb
xchg
dec
cmc
ret
push
loopne
fstpl
pop
push
jo
sub
xchg
addr16
lods
cmp
cmp
sub
lock
fwait
shll
andb
in
stos
stos
rorl
or
fisubl
xchg
sub
pop
aas
mov
inc
bnd
mov
les
xor
push
mov
lods
ret
das
insb
aas
xchg
inc
pop
aam
js
test
je
ret
cmpsl
loope
xchg
int
imul
ficoms
lcall
ds
jo
sbb
sbb
sub
daa
mov
ret
sub
mov
out
mov
les
sub
add
jb
jns
inc
in
push
mov
das
adc
sub
sti
inc
incl
imul
add
adc
xchg
sbbb
cli
mov
xchg
mov
mov
and
jbe
jg
out
xchg
sbb
in
popa
jl
pop
push
mov
xchg
mov
nop
je
xchg
mov
jle
push
les
pop
push
fldl
movsl
pop
cmp
insl
lods
ret
push
rcr
imul
adc
repnz
stos
or
xchg
hlt
fs
daa
out
and
mov
inc
sub
je
hlt
test
fldenv
lea
mov
adc
mov
mov
mov
icebp
add
fildll
push
popa
stos
fwait
xor
or
push
outsb
loopne
popa
das
jg
aam
aam
test
push
movsl
mov
sub
ret
popa
ret
mov
push
jns
ret
jecxz
inc
pop
ret
shll
sbb
inc
push
sub
cmp
inc
inc
and
fsubrs
cli
inc
sub
dec
hlt
xor
out
enter
mov
repz
aam
or
lods
iret
cmp
mov
pop
jp
or
mov
scas
xor
cmpsb
xor
dec
cld
jnp
addr16
jae
xor
dec
enter
xchg
call
gs
pop
cmc
dec
nop
rep
cmp
out
xchg
xchg
out
aaa
in
cmpsb
outsl
sub
mov
push
mov
push
sbbb
pop
mov
pop
inc
stos
sub
jns
cltd
dec
cmp
das
mov
and
push
jae
and
nop
out
mov
out
int
sbb
test
adc
push
inc
or
cmpsb
mov
ret
lret
and
mov
mov
enter
and
mov
pop
jo
pusha
out
sub
xchg
roll
mov
ficompl
lock
rcrb
dec
mov
cwtl
pop
jbe
cld
inc
jge
into
scas
sub
push
fcoms
sub
in
test
push
jg
test
data16
out
in
sahf
outsb
mov
shll
xor
dec
loopne
xchg
in
mov
es
mov
add
int
pop
add
mov
out
xor
dec
and
inc
or
call
push
mov
mov
inc
xchg
xchg
jne
fwait
or
mov
int
mov
inc
fldl
sub
mov
and
cmp
sbb
bound
inc
enter
aad
call
push
fnstenv
adc
sbb
inc
sub
movsb
nop
xchg
cmp
fcompl
jae
outsb
dec
jl
jle
sub
into
cmp
not
scas
ret
dec
mov
jle
stos
xchg
js
ljmp
repz
mov
dec
jp
dec
cmpsb
cltd
cwtl
jecxz
ss
cmp
aam
mov
in
jo
ret
cltd
popf
leave
mov
mov
xor
pop
idivb
sbb
push
push
rcrl
icebp
jg
cwtl
mov
add
adc
sub
ficompl
cwtl
sahf
fstpt
lahf
lcall
pop
xchg
daa
int3
push
sub
push
fs
es
push
xchg
push
jmp
mov
jp
in
fimull
sbbl
sbb
fs
dec
lahf
sbb
jge
rorb
jl
sbb
addb
data16
test
push
cmc
and
fwait
cmp
pop
jnp
xchg
pop
mov
xchg
cli
push
push
jge
inc
pushf
int
pop
mov
daa
bound
call
or
jg
xor
mov
jmp
jb
pusha
adc
lret
or
or
and
adc
clc
push
mov
cmp
mov
mov
adc
ds
push
dec
jecxz
rorb
mov
sbb
repz
xlat
pop
aam
stos
jp
cld
jge
leave
mov
punpcklwd
pop
mov
mov
movsl
jo
fdivrl
add
fldenv
dec
cmp
nop
lret
dec
and
push
jp
iret
sub
inc
jl
xchg
int
or
or
lret
test
mov
movsb
jo
dec
push
mov
into
pop
inc
push
pop
mov
and
leave
add
fisubrs
loopne
jecxz
lds
ljmp
les
jle
hlt
jle
les
jmp
xor
cmpsb
fwait
jnp
jg
inc
dec
cmp
mov
jb
arpl
pop
out
cwtl
or
fnsave
mov
cmpl
stos
loope
pop
and
cmc
or
cs
xchg
int
ret
push
sub
cltd
push
sahf
jo
fwait
int
std
stc
and
jge
fxch
or
clc
mov
gs
adc
leave
arpl
and
cmpsl
push
lret
jo
out
dec
mov
idivl
lods
ret
sbb
cwtl
mov
clc
dec
cmc
test
rolb
stos
jg
arpl
jae
sub
mov
sbb
inc
cmp
jp
cmp
adc
mov
mov
xchg
lods
inc
sub
push
sub
cmp
test
fwait
dec
push
lods
dec
or
dec
add
inc
je
into
lahf
sbbl
cmp
lret
dec
adc
out
adc
cmpsb
xchg
pop
shrb
lret
xor
adc
push
add
xchg
das
dec
jns
clc
les
cmc
or
lea
and
dec
pop
imul
sbb
hlt
fst
in
push
sub
or
push
or
js
or
mov
or
lret
call
shll
popa
cmp
sbb
mov
add
pop
adc
add
pop
push
shrb
sbb
push
ss
lcall
lock
in
xor
jo
movsl
jp
mov
jnp
push
fs
imul
cmpsl
data16
jmp
cmc
mov
pushf
push
xchg
push
sti
insb
sahf
mov
out
mov
loope
inc
repnz
inc
jecxz
fildl
sbb
adc
stos
xchg
pushw
out
sbb
dec
icebp
ret
adc
ljmp
jmp
cmp
cmp
push
adc
inc
lahf
xchg
popa
xor
mov
into
or
jo
fcoms
jl
lret
shrb
mov
shlb
cmp
shll
dec
sar
dec
xlat
jl
sbb
sub
pop
xor
repz
xchg
mov
jo
cmp
adc
pop
jg,pt
gs
pop
adc
pop
test
jge
out
dec
ss
dec
xor
dec
arpl
and
stos
cs
sbb
je
jb
add
sbb
sbb
xchg
xchg
and
aam
lock
mov
push
in
mov
in
xchg
xlat
xor
fsubs
and
scas
cmpsb
xchg
sub
sub
mov
sti
les
fwait
dec
cwtl
and
sub
ficomps
push
mov
mov
mov
loopne
cmp
cwtl
int
sbb
push
pop
sbb
push
sbb
cmp
cmp
in
push
mov
jle
adc
aad
mov
sarb
inc
jb
jmp
pop
xor
dec
xchg
push
add
cwtl
mov
mov
popf
test
jb
movsl
test
mov
jnp
jecxz
mov
mov
int
jo
mov
scas
push
lock
push
in
inc
lret
xchg
mov
dec
adc
cmp
fucomip
jbe
mov
sbb
cmp
inc
scas
inc
insl
addr16
lea
sub
inc
ret
mov
orb
or
mov
call
std
ret
fdiv
lods
cmp
mov
aam
inc
adcb
insl
jge
lahf
and
mov
mov
jns
push
mov
and
dec
pop
and
sbb
jle
out
imul
ljmp
inc
mov
pop
pop
sbb
insb
pop
fbld
flds
dec
lods
mov
pop
loopne
pusha
lods
call
jl
pop
xchg
xlat
jg
jb
into
pop
mov
fidivrs
cmpb
leave
sub
push
xchg
xchg
or
ja
push
xor
cmp
adc
xchg
jae
add
gs
xchg
add
pop
into
mov
dec
loopne
jp
inc
cs
in
mov
jbe
and
loope
test
es
push
add
mov
test
xor
popf
add
sahf
lods
sbb
dec
outsl
xor
cmp
fwait
sbb
hlt
lret
add
test
cmc
testb
scas
sub
ljmp
push
fsubl
xor
add
add
jnp
mov
gs
repnz
loop
inc
sbb
jno
fnsave
pop
lock
cmp
dec
cmp
sub
int
mov
je
inc
adc
call
xchg
in
jl
pop
adc
ljmp
sub
push
push
mov
cld
mov
out
inc
je
adc
insb
and
sub
insl
jno
pop
and
push
loope
cs
mov
mov
stos
dec
mov
lret
paddq
push
fistpl
ret
and
incb
xchg
sub
xor
jmp
pop
xchg
mov
sahf
xorb
dec
scas
ret
dec
mov
sbb
push
fisttps
iret
in
mov
push
lds
cmp
ljmp
dec
jle
and
ret
and
stos
fbld
das
and
and
flds
mov
mulb
in
jnp
push
jecxz
sbb
roll
add
cmpl
out
sub
adc
insl
and
dec
push
pop
dec
stc
and
jo
lods
dec
or
shll
pop
scas
lret
xchg
mov
sub
adc
scas
add
mov
xchg
outsl
inc
jne
fwait
pop
pop
jmp
xchg
mov
xor
movsb
stos
inc
jnp
in
inc
inc
cmp
stos
add
add
jp
bound
xchg
ja
sub
lret
bswap
clc
push
test
addr16
cmp
les
aaa
nop
pop
or
xlat
stos
mov
xchg
jle
xchg
call
roll
adc
xchg
mov
or
inc
fnstenv
mov
cmpsb
and
ret
dec
xor
clc
pop
pop
scas
int3
cmc
add
repnz
orb
lret
mov
pushf
pushf
das
push
inc
pop
repnz
xchg
insl
mov
adc
int
xchg
jecxz
mov
inc
test
out
add
in
test
sbb
ret
and
pop
push
es
lds
loop
mov
aad
mov
jle
stos
sarb
in
fisttps
jp
sahf
push
in
cmp
sbb
lahf
jge
lods
push
repnz
jo
cwtl
xor
repz
inc
xchg
adc
cmp
dec
cwtl
lock
inc
in
xchg
jp
jl
push
xchg
jae
imulb
imul
lcall
jge
cmp
sub
into
cltd
jns
xor
orl
or
hlt
adc
or
in
push
fmulp
add
add
adc
jns
pop
add
dec
sbb
std
cmpsl
xchg
pop
scas
adc
mov
sti
ss
or
mov
cli
and
pop
sub
int3
fcomps
pop
loop
push
repnz
leave
inc
imul
jg
inc
sbb
jo
ss
dec
jae
or
mov
mov
cmp
cmp
addr16
mov
add
mov
loop
insl
or
ret
int
xor
test
mov
insb
xchg
mov
dec
adc
or
pop
sub
xchg
sbb
fwait
mov
int3
xchg
fistpll
imul
shrl
gs
push
cld
mov
lret
pop
sub
mov
mov
fistpll
add
and
lea
fisubs
mov
or
scas
mov
hlt
jae
adc
das
gs
orb
sahf
mov
push
shll
arpl
lds
and
mov
and
cmpsb
ror
push
in
mov
inc
cmp
cmpsb
or
sub
adc
add
mov
jmp
test
mov
mov
std
inc
cmp
outsl
mov
cmp
xlat
ret
into
in
and
loop
aad
pusha
movsb
test
or
repz
and
stos
cmpsl
imul
stc
rorl
cli
mov
mov
popf
in
popl
test
loope
dec
mov
aaa
xor
scas
and
cmc
out
push
xchg
lock
xchg
push
sub
lahf
scas
andl
les
xorps
jns
dec
into
in
rclb
test
push
and
and
push
cwtl
testb
jp
mov
or
mov
cmpsb
je
jno
dec
jo
cld
pop
cs
int
pushf
js
out
test
mov
loop
and
out
in
add
sub
push
adc
gs
scas
push
sub
adc
arpl
ret
mov
push
add
cmc
push
and
or
shrl
jno
and
sub
xor
jne
fnstcw
add
and
inc
pop
add
push
sub
mov
arpl
sahf
aas
push
xchg
mov
lock
jle
mov
and
cmp
push
outsl
push
loope
leave
aas
fldt
sub
jle
add
aaa
imul
in
cmp
cmp
xchg
jno
sbb
xchg
cwtl
ss
inc
cmp
cmp
and
ss
sub
leave
dec
xor
pop
pusha
fwait
and
cmp
scas
pop
and
dec
andb
xlat
jns
push
ret
push
mov
out
imul
mov
stc
dec
mov
and
adc
and
sub
cltd
mov
xor
dec
dec
cs
mov
add
ja
xchg
aam
push
pop
popa
mov
mov
scas
jg
mov
addl
or
sub
call
insl
out
xor
inc
mov
ret
mov
inc
dec
dec
leave
push
movsl
mov
push
inc
rcrb
jle
aad
andl
mov
fwait
stc
ss
into
mov
and
jge
scas
inc
das
pop
xor
test
lock
test
aad
out
add
lock
and
xor
ret
push
cmc
mov
cmc
sub
test
in
mov
lds
and
pop
addr16
loope
xchg
out
pop
mov
mov
xlat
adc
dec
adc
mov
dec
mov
pop
repz
popf
js
sarl
ret
push
dec
mov
shll
push
pusha
pop
bound
xor
jns
xorb
pop
xchg
pop
mov
lock
fwait
dec
push
fwait
push
ret
add
sub
inc
js
rorl
lds
shrb
icebp
cli
mov
jb
fs
aad
loope
jecxz
xor
add
jp
pusha
fidivrs
shlb
int
sub
in
arpl
cmp
loope
mov
mov
inc
lock
pop
addb
test
and
or
pop
push
and
mov
add
and
jge
jo
cs
into
adcb
clc
std
cmp
xchg
mov
mov
sbb
repnz
aaa
fsubl
out
movsl
sahf
cltd
or
cmp
in
cmc
mov
adc
scas
outsl
adc
pop
mov
shrl
xchg
xchg
es
add
or
sub
clc
mov
pop
test
xor
mov
ljmp
xchg
mov
or
dec
and
jae
mov
fldt
fsubp
and
mov
push
push
jb
lock
cmp
scas
xchg
cld
mov
xor
lret
mov
push
lcall
test
dec
int3
pop
pusha
push
in
mov
cmc
xchg
ss
push
ds
or
int
xlat
dec
test
fmull
icebp
adc
test
ljmp
sub
iret
adc
test
pop
les
clc
pop
or
xchg
cmp
push
xor
and
sbb
jg
sbb
or
movsb
cld
or
push
adcb
mov
pop
ss
ja
mov
mov
mov
or
leave
mov
lahf
add
and
jle
dec
dec
in
mov
fcomip
push
add
pop
mov
mov
es
add
out
lea
mov
sbb
xor
add
mov
lret
into
out
adc
leave
xor
mov
xchg
pop
xor
xchg
inc
push
ja
lods
jae
adc
iret
ds
dec
lret
dec
clc
iret
and
mov
and
je
push
or
cmp
push
enter
icebp
add
cwtl
rcrl
xchg
inc
push
incb
and
mov
loopne
pop
addr16
insb
jmp
lods
imul
int3
push
inc
add
adcb
das
pushf
push
inc
lret
push
push
inc
int
enter
xchg
xchg
mov
mov
jb
pop
dec
sbb
imul
xor
sub
dec
push
mov
rolb
xor
jge
inc
and
xchg
fdivrs
insl
jecxz
xor
adc
or
insb
add
mov
and
es
cmpsl
mov
mov
stos
and
mov
jge
jl
lds
mov
test
repz
repnz
xor
nop
pop
or
int3
sar
test
data16
push
adc
nop/reserved
jmp
pop
dec
pop
xchg
mov
iret
pop
sub
push
fisttps
inc
and
mov
xor
or
mov
add
loop
cwtl
xchg
cmp
or
and
in
dec
mov
cmpsl
hlt
adc
sub
orl
repz
mov
inc
mov
stos
push
dec
popf
lods
xor
faddl
pop
jno
rcrl
mov
jle
int
jno
mov
stos
and
loop
jbe
idivb
insb
push
pop
xlat
cli
mov
jo
pushf
mov
clc
cmp
out
inc
lret
and
addr16
popa
push
arpl
jge
imul
scas
and
adc
pop
std
pop
movsl
jns
pop
push
jbe
je
cmp
pop
or
daa
jbe
inc
inc
aas
pop
dec
rolb
mov
push
ljmp
in
dec
fsubrl
lods
out
ret
fs
dec
push
push
jns
dec
in
xchg
xor
and
or
and
xchg
mov
cmp
test
dec
imul
pushw
push
aam
in
jo
shl
leave
test
lods
out
clc
mov
and
ret
pop
fsts
mov
jp
es
fidivrl
scas
inc
xchg
dec
push
aas
mov
or
imull
sub
jl
mov
sbb
out
mov
jmp
jp
pop
repz
aaa
lock
inc
out
popf
or
cmp
xchg
fbld
insb
mov
add
mov
insb
insb
in
into
sub
pop
je
lret
int3
adc
ds
lret
jecxz
cmp
pop
ljmp
mov
mov
mov
push
mov
mov
xlat
leave
or
rorl
mov
test
sbb
ret
orb
adc
add
daa
loop
xchg
aam
push
inc
xchg
xor
aad
stc
pop
repnz
xor
cmp
jnp
push
in
cwtl
cmpsb
cmpsl
ja
repz
fs
pop
push
stos
sub
add
ss
cmp
xor
push
in
fildll
fldenv
sub
mov
shl
aad
mov
and
dec
lret
or
leave
pusha
jno
fldln2
jne
repz
jns
andl
mov
sbb
sub
popl
sbb
mov
pushf
test
mov
xor
in
dec
imul
inc
lods
and
or
xchg
sub
addb
imul
loop
fsubrs
sbb
sbb
js
mov
and
dec
rorl
daa
push
hlt
cmpsl
xchg
adc
xor
dec
xchg
or
xchg
sub
lcall
mov
sbb
repz
adc
sti
fnstcw
std
dec
and
jecxz
and
out
mov
cmp
addr16
push
outsl
jg
call
cltd
out
cmpsb
int
pop
subl
outsl
clc
ret
mov
pop
nop
jnp
sbb
pushf
iret
loopne
aaa
movsl
int3
mov
movsb
push
aas
inc
jmp
jmp
mov
mov
fistl
aad
shlb
shrb
add
xchg
aad
xchg
dec
lock
addb
pop
movaps
sub
and
addr16
sti
negl
push
and
pop
sub
or
adc
sti
dec
add
add
cltd
pop
std
fldt
leave
xchg
mov
sbb
pop
add
aam
push
popa
test
stos
aam
or
movsb
ror
dec
push
and
and
imul
mov
rorb
sub
sbb
test
ret
sub
ret
lcall
call
loop
jmp
xchg
inc
fisttps
pusha
arpl
negb
and
pop
or
push
rorb
xchg
jbe
leave
int
data16
mov
aad
push
cmp
test
enter
fisttpll
mov
das
lret
xchg
cltd
fistpl
inc
push
movsb
push
or
mov
adc
cld
ret
xchg
push
sar
mov
rorb
iret
ljmp
push
pop
test
ja
pop
inc
mov
jbe
sahf
xor
cmpsl
lods
popf
mov
xchg
jecxz
and
aaa
incl
popf
push
das
add
sahf
rol
xchg
pop
lret
fsubl
adc
popa
scas
insb
xchg
in
ss
xchg
sarb
dec
push
dec
jmp
sbb
add
cmp
cli
pop
in
in
ret
fmull
xchg
test
arpl
andb
adc
int3
pop
int3
test
aaa
pop
mov
xchg
int
adc
jns
mov
jae
cmp
mov
inc
repnz
push
mov
mov
stos
sbb
out
inc
leave
xchg
fs
ret
add
xor
jmp
fiaddl
scas
mov
push
es
mulb
pop
and
nop
mov
insl
fisubrl
mov
in
repnz
in
jnp
adc
cli
jne
fwait
bound
and
add
aad
inc
stos
pop
inc
cmp
hlt
je
push
xorl
or
sbb
dec
std
test
shll
aas
push
add
jns
mov
push
sub
mov
inc
mov
push
loopne
sub
shll
push
mov
rcrl
dec
nop
out
incl
inc
in
cmpsb
repz
sbbl
inc
adc
xchg
push
and
scas
out
lods
das
adc
sti
mov
loopne
adc
daa
loop
cmpsb
lret
fwait
pop
xor
leave
lret
rorb
add
pop
pop
dec
jb
dec
dec
je
std
test
xor
dec
jnp
sbb
std
jns
dec
mov
daa
inc
gs
add
in
aaa
xor
fisttpll
inc
lods
and
es
lret
movsb
fs
das
mov
pop
rcr
mov
cmp
cwtl
mov
lahf
ret
bound
jg
test
loope
movsl
bswap
and
lods
add
test
mov
push
sub
testl
repz
push
ss
call
add
xor
mov
mov
pop
sbb
movsl
mov
pop
jne
outsb
xor
popf
jb
out
call
stos
rorb
lahf
dec
jo
shrl
cmp
xor
push
rol
add
movsb
cmc
jns
fsubr
xchg
xor
rcrb
xor
loope
loop
ret
jmp
leave
sbb
or
out
gs
mov
jmp
xchg
lahf
outsl
mov
sbb
lcall
stos
inc
sub
nop
cmp
add
addps
add
stc
in
jnp
aam
andnps
outsb
inc
jae
or
sbb
xchg
addr16
in
or
push
push
repz
sub
ljmp
inc
sbb
sub
dec
scas
repz
popa
les
jno
adc
and
xlat
aad
mov
nop
out
out
inc
or
xor
mov
fstps
leave
mov
mov
mov
push
mov
nop
inc
aam
repz
in
aam
adc
aas
inc
dec
and
data16
or
cmc
rorb
push
add
sub
repnz
jae
outsl
lret
loopne
and
out
push
popa
push
jno
jb
cli
and
pop
iret
lcall
xor
sub
lods
xchg
das
jb
ret
fstpt
pop
jb
or
adc
je
les
cmpsb
inc
jl
cmpsb
dec
xchg
lods
cmp
add
mov
cmp
xlat
jne
mov
scas
sub
dec
jl
sub
cmpsb
inc
add
and
cmc
mov
pop
fistpll
adc
hlt
cmp
ljmp
cmc
fdiv
shrb
dec
pop
adc
inc
jne
pop
mov
dec
fistps
push
dec
add
or
insl
cltd
subl
pop
adc
sub
fs
pop
dec
nop
xor
push
out
decb
bound
subl
sbb
sbb
mov
sub
dec
cwtl
pop
cmc
repnz
sub
cmp
outsb
and
fcmovnu
adc
mov
lahf
pop
fs
faddl
insl
xchg
or
gs
scas
mov
cli
pop
xor
sbb
test
daa
mov
mov
dec
mov
rcll
push
outsb
mov
pop
jmp
out
arpl
dec
push
scas
mov
xchg
repz
insb
mov
stos
pinsrw
into
daa
cs
out
out
mov
pop
mov
mov
adc
rcr
adc
sbb
pop
fists
push
jle
jno
aas
cmp
mov
movsl
aad
test
pop
or
xor
push
cmpsb
imul
jecxz
jns
xor
mov
push
ds
push
pusha
pop
fmul
movsb
and
orl
insl
icebp
pop
cld
loope
inc
mov
mov
hlt
mov
mov
cmp
imul
pusha
cltd
sahf
jnp
pop
shrb
hlt
inc
xchg
xor
fdivl
pusha
cmp
mov
dec
pop
out
mov
jo
xchg
jmp
imul
mov
and
xlat
xor
clc
mov
cmp
sub
jecxz
cld
pop
outsb
ret
push
popf
fwait
pop
ds
les
mov
mov
jp
outsb
enter
cmp
pusha
xchg
dec
adc
sti
repz
or
mov
lret
movsb
addl
dec
cs
dec
ret
mov
push
shr
shlb
and
daa
inc
inc
sub
xlat
std
out
cli
add
jne
std
mov
xchg
insl
xchg
aaa
ucomiss
shll
pop
rcrl
pop
dec
sbbb
gs
repnz
in
xor
push
mov
pushf
add
clc
push
jns
ficompl
movsb
mov
lret
les
aam
mov
add
leave
jg
add
push
das
cmp
cmc
jae
mov
jo
es
sbbl
push
pop
xor
cli
and
fnstenv
mov
pop
sbb
cmc
mov
loope
je
shl
jp
mov
int
or
bound
push
xlat
repnz
mov
push
push
ds
movsb
addr16
icebp
jl
mov
and
adc
adc
mov
mov
gs
cmp
insl
pop
sahf
dec
enter
sbb
popa
xchg
je
push
xor
mov
add
lods
outsl
mov
pop
dec
and
mov
enter
push
xchg
inc
push
test
mov
ficoml
movsb
and
testb
pop
test
aam
popf
nop
int
test
movsl
repz
lods
cli
push
push
mov
push
xor
sub
jae
sub
into
rcrl
push
out
add
sti
or
inc
cmpsb
inc
jbe
jmp
mov
outsl
mov
sbb
dec
fidivs
addr16
fwait
xchg
in
sub
lcall
jne
movsl
ljmp
lea
mov
sbb
inc
mov
sbb
fldenv
inc
pop
xchg
aam
sbb
lcall
test
cmc
loope,pt
adc
push
jmp
cmp
addr16
sbb
sbb
mov
sub
sbb
stos
xor
lea
cld
insb
shr
stc
or
je
push
and
stos
in
jmp
stos
fsubrp
in
mov
imul
add
sub
jle
loopne
rol
xor
rcrl
lret
jl
rcrb
shrb
fwait
sahf
cli
and
push
lcall
cs
jno
std
fwait
sbb
inc
sub
gs
fldcw
int
xor
dec
lock
rcrb
push
jb
lods
out
and
push
lods
insb
movhps
lds
adc
sbbb
jnp
data16
adc
cmp
mov
jmp
mov
mov
push
mov
or
mov
loop
icebp
inc
data16
fiaddl
sub
f2xm1
mov
push
aad
clc
jae
inc
add
aam
dec
adc
sub
lahf
adc
mov
add
xchg
loope
adc
mov
sahf
in
cmpsb
jno
sti
test
fstpl
imulb
sub
gs
cmpsl
call
bound
xor
ret
clc
pop
dec
adc
sbb
pop
std
dec
xorb
push
cmc
xor
daa
rorl
addb
cli
ret
in
jmp
inc
dec
test
and
pop
mov
fcomp
xchg
fnstenv
xchg
aaa
aaa
push
leave
cmp
adc
add
mov
mov
inc
stos
jo
and
fwait
sbb
lea
adc
test
out
outsl
xchg
mov
jo
test
pushf
movsb
sbb
pop
mov
or
div
and
pop
cld
cld
arpl
xor
lahf
dec
jge
in
or
add
inc
arpl
shlb
or
cwtl
lret
dec
jecxz
lock
ja
mov
xor
imul
cmpb
loope
mov
fstpl
cltd
sbb
sub
mov
xchg
sub
jb
xchg
adc
aad
cmp
jge
dec
repz
lods
adcl
testb
call
xchg
pop
sbb
pushf
sub
xor
adc
fstp
xchg
cmp
ret
shll
test
jmp
sbb
dec
add
lods
pop
inc
cmpsl
push
popa
fisubl
je
dec
cltd
inc
add
inc
mov
stos
xchg
lret
cld
movsl
push
cmc
in
pxor
or
fidivrs
mov
pop
push
cmpsb
add
xor
int
cmp
cli
lret
lret
cmp
push
call
pushf
out
jp
cltd
shr
xlat
fs
ret
or
xchg
rcrb
cld
pushf
lcall
es
in
jnp
pop
stc
push
fld1
fwait
jno
icebp
or
test
insl
cmp
stos
sahf
add
inc
aas
into
mov
xchg
loope
mov
ds
es
push
or
or
rolb
stc
lods
xchg
jecxz
mov
leave
loopne
jg
pop
and
cs
leavew
xor
adc
fldcw
jecxz
dec
mov
std
push
imul
jmp
aam
aad
clc
mov
popa
out
push
mov
dec
ret
fucomip
data16
inc
jo
pusha
out
xor
pop
jno
jecxz
add
in
fldcw
pop
xlat
sbb
xchg
jmp
or
mov
test
push
mov
cmp
stc
stos
cld
out
adc
ret
loopne
rcr
add
fucomip
inc
inc
aad
fstpt
rcl
ljmp
negb
dec
adc
sbb
adc
icebp
mov
add
sbb
lods
out
xchg
rcrl
or
subb
lahf
out
out
inc
notb
test
cld
inc
or
fidivs
mov
movsl
fistpl
mov
add
inc
movl
xchg
sub
xor
sub
push
movsb
fstpl
aad
sub
out
test
jnp
in
xor
loopne
xchg
mov
xor
je
mov
and
imul
adc
in
in
imul
jae
sbb
push
rorl
out
stos
cmpsb
lea
fcmovu
mov
jecxz
push
js
stos
fbld
test
mov
enter
and
jle
fstpl
dec
inc
imul
hlt
inc
clc
loope
sahf
ret
neg
jecxz
mov
lret
pop
and
arpl
and
mul
fst
push
pop
mov
pop
fistl
out
adc
cwtl
ljmp
rcrb
insl
mov
sbbl
aad
imul
mov
dec
outsl
jne
xorl
repnz
sbb
mov
xor
jmp
push
add
or
or
fwait
scas
movsl
fnstsw
push
shl
int
jge
jp
pop
lahf
fsub
push
mov
xchg
dec
add
test
ljmp
enter
inc
data16
daa
inc
mov
ja
cmp
pop
shrb
pop
shlb
lods
sbb
add
addr16
push
in
sub
stos
cltd
imulb
faddl
push
outsb
ret
arpl
leave
push
cmp
es
mov
jmp
aam
loopne
or
push
mov
push
pop
stos
mov
cmpsl
shrb
dec
jbe
sarl
xchg
cmpsl
sub
push
pop
or
dec
mov
cld
mov
jb
leave
add
xor
loope
push
and
sub
cld
ljmp
in
mov
mov
lock
xchg
or
mov
mov
mov
and
sub
dec
sub
dec
jnp
icebp
and
push
jne
or
sti
adc
mov
repnz
cmp
pop
push
push
hlt
sbb
add
sub
nop
lea
movsb
in
in
mov
mov
cmc
popf
and
xchg
pop
mov
lods
jns
mov
xor
sub
add
jle
and
xor
sbb
sbbb
in
mov
inc
push
lea
and
mov
out
cmp
fwait
ss
or
lret
mov
lock
imul
out
movsl
xorl
adc
sub
jecxz
clc
and
mov
pushf
sbb
sti
arpl
bound
daa
in
or
pushf
jb
add
xchg
arpl
sub
cmpsl
scas
cmpsl
daa
cmpsl
stos
fisttpl
xchg
pusha
dec
sbb
mov
test
mov
xchg
cmp
mov
mov
push
fadds
in
cwtl
idivl
mov
sbb
jle
or
push
out
insb
pop
cwtl
xchg
pop
dec
push
jnp
inc
je
sub
js
pop
insl
popa
inc
jle
mov
movsb
mov
push
data16
mov
sub
fsubl
out
pushf
jle
or
int3
leave
out
insl
pop
sbb
push
adc
and
out
insb
ds
mov
inc
mov
push
xchg
dec
aad
dec
mov
testb
mov
int3
ja
imulb
add
and
in
je
mov
mov
mov
enter
push
addr16
push
cmp
mov
push
lret
or
mov
jne
pop
mov
jae
getsec
add
iret
adc
mov
sub
jbe
add
mov
testl
jae
or
addr16
adc
movsl
div
dec
mov
push
stos
add
out
or
outsb
scas
sub
and
test
push
jl
out
pop
jnp
pop
dec
dec
pop
fs
movsb
out
xchg
mov
arpl
cmp
pop
sbb
jno
fildl
sbb
pusha
adc
pop
dec
aaa
cmp
xor
push
lods
loopne
scas
add
cmp
pushf
rcr
push
jecxz
mov
out
jle
jo
ss
aad
sbb
push
das
push
test
shlb
xchg
ss
gs
add
les
gs
mov
les
lcall
mov
or
popf
je
test
movb
das
mov
and
in
pop
pusha
mov
pusha
dec
cmp
dec
xor
das
xor
mov
in
sbb
not
sub
andl
mov
jp
lds
inc
pop
in
inc
push
xchg
lock
mov
push
dec
test
addb
rolb
into
es
inc
or
lahf
jne
mov
je
imul
pop
xor
cltd
or
inc
cli
stos
dec
and
aas
xchg
out
inc
push
aas
xor
out
mov
add
mov
cmpsl
stos
fildll
sbb
cmpsl
and
inc
sub
cmp
test
push
insl
insb
and
out
aad
test
push
xor
ss
scas
ret
test
inc
pop
and
imul
aaa
sub
sbb
fwait
out
mov
xchg
test
and
repz
shr
jns
scas
loop
fisttpl
push
bound
jg
mov
das
stos
inc
lods
data16
roll
sarb
stc
xor
push
jo
push
fadd
in
aas
mov
adc
popa
jp
aam
sahf
fs
inc
xchg
aaa
je
leave
aam
inc
mov
inc
xchg
xchg
insb
adc
pop
imul
leave
loope
cmpsl
xor
xor
pop
pop
test
mov
enter
in
inc
out
pop
jg
push
xchg
in
push
xchg
add
and
call
sub
mov
lds
sub
fs
aaa
fs
mov
xor
lea
inc
add
inc
add
and
and
xorb
push
pop
add
sbb
hlt
sbb
add
fnstcw
mov
xor
leave
mov
sbb
frstor
inc
roll
jle
cmp
sbb
jns
popa
jns
pop
inc
shlb
jp
push
pop
fistl
les
adc
sub
repz
insb
push
mull
fnstcw
or
out
int
mov
sub
jae
push
mov
outsl
mov
shll
xchg
adc
bound
out
imull
mov
dec
mov
mov
inc
add
scas
xor
mov
insb
add
mov
mov
or
addb
or
pop
adc
fbld
arpl
xchg
btsl
imul
xchg
ja
push
cld
sbb
sub
xchg
push
loop
aaa
adc
stc
adc
jle
std
rorb
jo
test
push
andb
inc
mov
fs
pop
and
nop
jg
repz
test
sub
or
cmp
mov
inc
push
sub
clc
daa
mov
mov
adc
lds
inc
mov
add
mov
insl
sti
xchg
std
in
and
pop
loope
sub
xchg
cmp
pop
nop
push
stos
push
lods
fstpl
xchg
push
leave
add
jb
xchg
dec
inc
stos
in
inc
mov
xor
loope
pmulhw
sub
in
call
jae
mov
and
insb
adc
sbb
xor
ds
leave
cmp
mov
mov
mov
ss
lods
push
test
sub
popa
add
lds
dec
leave
pop
push
or
imull
jp
or
lret
mov
in
loopne
and
insl
les
lock
xlat
sti
leave
jne
pushf
insb
push
aam
cmp
xchg
mov
out
jmp
push
pop
mov
int
ds
xchg
movsb
in
insb
fisubrl
push
psrad
xchg
mov
push
icebp
sbb
dec
mov
push
xchg
and
xchg
out
mov
movsb
mov
pop
out
aaa
test
mov
ja
popf
and
pop
aad
or
into
frstor
loopne
push
out
mov
inc
mov
mulb
ret
xchg
divl
jmp
nop
lcall
in
adc
cmp
flds
fimull
xchg
xor
lret
inc
mov
in
xor
movlps
inc
cli
sbb
inc
aaa
sub
fisttps
sbb
repz
test
shr
neg
gs
outsb
inc
mov
jb
sti
repz
sbb
mov
in
scas
inc
subb
js
mov
mov
ss
mov
mov
xor
aam
nop
ljmp
scas
out
mov
fwait
int3
aas
fwait
dec
scas
addr16
push
int3
xchg
jne
sub
loop
adc
jmp
lret
into
subb
add
push
dec
es
push
adc
pop
imulb
pop
mov
sbb
js
das
fs
cmp
xor
jmp
push
mov
lock
cmp
jmp
mov
nop
xchg
push
mov
inc
jae
imul
fisttpl
test
nop
xchg
mov
movsb
and
push
jae
inc
repnz
stos
jne
es
xchg
mov
push
xchg
and
xor
mov
xor
add
or
outsb
and
dec
sbb
popl
fimull
ss
out
aam
sub
cmpsb
sub
fwait
hlt
dec
jmp
jp
xchg
xchg
orb
xchg
cmp
pop
daa
or
lahf
pop
push
stos
scas
push
push
inc
sti
jg
lret
sbb
inc
and
adc
push
fildll
or
scas
shrb
adc
xor
xchg
out
pop
or
dec
call
cmp
aas
xchg
adc
inc
pop
sub
xor
sbb
pop
inc
scas
inc
push
out
repz
xor
sahf
dec
cmpsb
loope
divb
fstpl
out
adc
dec
clc
add
cmp
sbb
mov
ret
and
pop
sbbb
adc
into
mov
dec
xchg
dec
test
lods
insb
push
sbb
inc
out
call
adc
lret
ds
xor
adc
cld
mov
or
mov
lock
lret
popa
xchg
lahf
push
pop
adc
mov
std
sbb
fmull
lcall
loop
and
js
or
clc
push
lcall
mov
int3
outsl
cmp
int3
shrl
mov
ss
imul
insb
xchg
push
stc
inc
jg
or
or
adcb
rcll
sarl
arpl
jge
inc
adc
test
lret
test
pop
pop
jecxz
inc
popf
xchg
js
loope
dec
rcl
out
jns
and
sarb
popf
rolb
ret
xchg
jbe
pusha
insb
mov
xchg
mov
fcom
jmp
jp
push
jns
adc
sahf
daa
jno
sbb
cmp
or
in
xchg
or
push
mov
pusha
negb
or
repz
adc
movsl
jge
out
js
sub
fbstp
inc
or
aaa
dec
mov
jecxz
cld
std
xor
jae
inc
incb
sbb
sbb
xchg
sub
lods
outsb
dec
inc
adc
cmp
cld
clc
repnz
pmulhuw
stc
mov
pop
lret
ucomiss
lods
cmp
push
pop
dec
cld
and
pop
pop
sbb
popf
lock
lret
repnz
push
adc
in
rcr
mov
xchg
into
xor
out
mov
out
lea
mov
repz
leave
mov
fisubrs
mov
jle
inc
cmp
aam
lret
test
or
loope
subb
adcb
pop
in
lret
xlat
dec
or
sbb
clc
xor
call
xchg
cwtl
mov
cmp
shl
mov
add
sub
ja
lods
cli
imul
pop
lret
add
fwait
add
xor
mov
mov
dec
mov
mov
aad
fadd
cltd
rol
fadd
sbb
xlat
test
adc
xor
js
test
sbb
inc
inc
hlt
data16
push
jmp
and
les
inc
mov
std
icebp
js
xor
call
lock
roll
iret
test
dec
fidivs
add
in
rolb
cmpb
xchg
outsb
mov
pushf
sbb
bound
out
inc
sub
mov
jns
mov
cmc
sub
mov
or
pushf
or
loope
push
ffreep
dec
mov
data16
push
xchg
es
cmpsb
ret
stos
pop
sbb
push
push
movsl
enter
mov
incl
test
fs
jns
mov
xchg
outsl
sbb
clc
daa
rorl
xor
test
xchg
mov
xchg
iret
movsb
mov
push
mov
or
loope
jl
push
mov
push
push
stc
jle
pop
test
inc
into
ljmp
outsb
ds
push
rcll
sbb
xor
jo
shll
dec
lahf
push
cmp
push
xorb
pop
pop
lods
les
fldl
push
lret
outsb
test
mov
inc
add
pop
mov
rorb
jne
pusha
and
jb
fcmovnb
add
mov
insl
scas
dec
lret
adc
popa
lods
stc
cmp
daa
outsl
inc
and
aad
fwait
adc
jle
cwtl
jbe
mov
test
inc
nop
bswap
test
push
xor
xchg
dec
orb
nop
push
or
push
or
jmp
ret
xor
xlat
push
mov
and
ljmp
aaa
push
movsb
and
mov
rcll
jge
aad
xor
xchg
mov
mov
mov
int3
nop
lock
pop
adc
xlat
xor
jnp
mov
js
lahf
dec
lcall
mov
inc
out
or
les
in
arpl
pop
mov
std
scas
inc
mov
sub
mov
add
dec
inc
adc
add
fdivrp
jae
mov
xchg
test
mov
mov
andb
fs
repnz
xchg
xchg
dec
lahf
bound
inc
insl
fsubl
mov
or
nop
sub
outsl
pop
mov
std
mov
sti
cwtl
pop
mov
out
lcall
movsl
pop
in
imul
add
push
xchg
iret
sahf
out
dec
jne
pop
or
xchg
hlt
int3
fs
xor
out
inc
adc
jno
pop
leave
cli
cmp
test
sarl
lods
movsb
xacquire
push
lret
mov
adc
and
add
inc
xor
xor
rolb
shlb
xchg
fs
imul
ljmp
js
clc
loop
nop
pusha
mov
std
push
adc
test
ret
enter
mov
or
sbb
adc
sbb
push
sub
not
xchg
or
push
jmp
loope
imul
aad
pusha
shll
sub
dec
movsb
test
mov
aam
ficompl
repz
and
in
dec
scas
jg
or
mov
mov
popf
or
lcall
fdivs
lahf
aaa
jb
loop
popf
xchg
xlat
jb
pusha
inc
lods
pop
and
xchg
icebp
dec
repnz
flds
int
sub
mov
pop
or
into
popf
sbb
sub
dec
jp
sub
push
and
adc
hlt
push
xor
xor
push
and
cmp
out
inc
adc
fldcw
fnstenv
lret
push
and
xchg
repnz
mov
pop
sti
mov
inc
shlb
stc
jbe
add
je
addl
stos
sahf
or
repz
pop
jno
mov
ss
push
lds
es
xor
in
hlt
fisttpll
out
mov
cmp
out
testb
pop
hlt
xlat
and
movsb
jmp
pop
shr
loop
test
mov
fs
cmp
xchg
shrb
or
and
pushf
setg
add
mov
aad
cmp
mov
and
push
mov
nop
add
jp
out
sbb
dec
cmp
jnp
push
lods
inc
jae
or
or
xchg
pop
pop
imul
iret
xor
std
shrl
inc
pop
movsb
sub
cmp
and
cmpsb
fnstcw
aam
aam
pop
and
repnz
push
and
mov
or
cld
sbb
jns
scas
int3
mov
inc
jbe
fs
xchg
jge
lds
jp
jae
les
jb
push
mov
imul
fucomi
jg
ret
lret
jns
out
rcrl
mov
inc
mov
stos
inc
lcall
push
out
inc
fnstcw
std
pop
jns
ss
repz
inc
sahf
xor
sub
or
les
or
leave
inc
pop
xor
mov
shlb
leave
jge
xchg
jge
in
fwait
push
push
mov
insl
int
dec
adc
and
inc
cltd
stc
aam
inc
jnp
and
cld
push
out
pop
lret
cmc
mov
cmpsl
mov
sub
push
pop
jae
je
rcrl
fdivs
mov
and
sbb
push
add
in
lret
aas
adc
test
dec
data16
cs
lret
inc
aam
jo
mov
and
push
imul
push
mov
xor
cmp
dec
inc
ret
lods
int3
cltd
dec
inc
in
inc
inc
sub
test
mov
xlat
xchg
xchg
pop
lret
and
pop
movsl
ficoml
cmpb
fisubs
jp
pop
cmp
sbb
jecxz
xor
test
vmwrite
mov
in
jo
jns
aaa
pop
sahf
push
jns
test
cmc
lahf
add
loop
inc
aas
in
ljmp
pop
lods
add
fadd
push
dec
jge
jo
insb
lret
mov
shll
add
gs
cmpsb
in
mov
jne
inc
add
mov
pop
jb
dec
iret
pop
push
add
stos
push
movsb
sub
jl
adc
mov
aaa
insl
fwait
xor
push
add
mov
enter
and
mov
push
es
loopne
test
insb
mov
push
dec
stos
push
pop
dec
fwait
lret
pop
lds
mov
dec
fwait
inc
push
mov
mov
aam
ljmp
gs
mov
pop
and
jge
jbe
rcl
jge
push
inc
jmp
mov
push
cmpb
aaa
mov
jle
ds
jmp
xchg
imul
jb
repnz
sbb
enter
mov
add
xchg
jmp
xchg
mov
or
addr16
aaa
in
add
es
outsl
jnp
loope
int3
sbb
insb
and
dec
sub
mov
negl
push
mov
push
rcrl
inc
movsb
sub
lea
mov
popf
mov
lock
pop
in
sub
fdivrl
test
cwtl
push
lock
push
xchg
dec
out
in
addr16
pop
lea
jg
aas
ss
mov
cmp
out
cmp
loop
movsl
lods
loopne
mov
cmp
loopne
mov
data16
aad
lret
cmp
sahf
mov
or
pop
xchg
cmp
xchg
mov
bound
inc
cmp
aam
pusha
stos
rcr
push
xor
sbb
and
mov
fwait
cmp
inc
clc
add
lahf
dec
and
in
xor
cltd
add
call
sbb
mov
dec
or
fs
fnstcw
cmp
movsb
fadds
lea
lcall
cmp
dec
cmp
ret
in
das
xchg
pop
sahf
imul
cwtl
orb
xchg
fildl
jbe
es
and
rclb
stos
test
cli
add
jae
and
xchg
adc
sbb
test
outsb
lret
inc
pop
dec
push
lock
add
gs
sub
cld
fdivs
pop
push
mov
in
imul
jns
bound
imul
outsl
jle
xlat
fistpl
xor
in
stos
clc
adc
mov
sbb
add
fcomp
push
and
negb
adc
shr
dec
and
or
xchg
and
aas
add
loop
bound
sbb
lods
scas
pop
xchg
jne
in
call
or
mov
inc
jecxz
aad
adc
add
lods
loope
lcall
mov
sub
dec
repnz
leave
mov
mov
mov
dec
scas
push
or
popf
or
sbb
push
aam
roll
sbb
dec
icebp
dec
pop
pop
addl
inc
test
imul
jns
sbb
js
jl
xlat
stos
outsb
pop
out
cmpsl
mov
xchg
aad
sub
xchg
lcall
adc
adc
push
dec
mov
xchg
scas
cmp
das
lcall
sbb
and
add
sahf
test
sbb
mov
sbb
incl
mov
cmp
in
jne
cwtl
fdivl
in
dec
js
pop
cmc
sbb
xchg
data16
fisubl
add
data16
cli
movsl
mov
insl
dec
aad
stos
xor
stos
sub
lock
bound
or
lods
sti
andl
and
mov
dec
jmp
mov
mov
ret
jnp
mov
cmpsl
inc
std
div
lret
or
or
iret
add
loopne
fsts
xlat
jbe
pop
fcoml
jg
int
jb
sahf
andb
addr16
cmp
push
cmp
movsl
xor
outsl
pop
jle
cmp
insl
out
dec
sbb
stc
inc
jo
adc
lahf
or
incl
xchg
pop
lods
xor
int
jb
push
movsl
nop
sub
dec
xor
mov
adc
mov
push
outsl
xor
inc
fnstcw
bound
iret
sbb
push
dec
mov
pop
push
push
xor
cmc
or
and
dec
int3
add
addr16
cmp
movsb
and
lock
in
cmp
mov
xor
mov
dec
and
jns
pop
stos
xchg
xchg
insb
iret
ror
out
mov
out
outsb
push
lods
in
loop
subb
repnz
xor
xchg
jl
jmp
sbb
jnp
fsubrl
movsb
push
push
mov
outsl
jmp
mov
push
ficomps
rorb
xchg
mov
and
dec
mov
ljmp
jmp
cwtl
jb
adc
inc
mov
mov
outsb
stos
cli
cmp
jmp
mov
fldl
xlat
sbb
in
pop
jae
rcrl
dec
add
inc
fldenv
or
call
lea
sub
pop
scas
mov
lods
mov
adc
out
outsl
aad
sbb
jge
lret
icebp
lds
fwait
jns
adc
xor
jmp
jbe
mov
jl
mov
lcall
xchg
and
fidivrl
or
cmp
adc
repnz
aaa
mov
add
mov
adc
jno
stos
mov
pop
mov
jecxz
aas
sub
push
in
and
clc
sbb
ret
in
push
cltd
jle
lcall
push
dec
insb
imul
xlat
xor
insl
mov
js
jnp
mov
sub
pop
shlb
js
dec
lock
icebp
int
scas
push
jns
gs
xor
bound
sub
jb
inc
pushf
subl
jb
dec
mov
pop
jp
pop
inc
mov
inc
stos
shrb
out
mov
sti
mov
jmp
imul
sbb
iret
mov
pop
push
shl
mov
cmc
xor
shll
adc
shll
mov
jecxz
or
loopne
and
jns
popa
xchg
ret
ret
in
push
ret
pop
popf
mov
mov
repz
shl
push
and
fdivl
adc
add
ret
add
inc
imul
xchg
add
ret
dec
mov
clc
loop
aad
mov
jp
cmp
aaa
inc
lds
iret
sarb
xchg
movsb
sub
nop
nop
testb
adc
sub
sahf
xchg
mov
pop
add
dec
sahf
cmpsb
out
push
adc
lods
imul
pop
fcomi
das
mov
xor
scas
imul
sbb
push
add
mov
adc
and
mov
mov
cmc
adcl
and
inc
inc
sbb
pusha
test
sahf
or
orl
add
lds
inc
jns
dec
ja
fs
mov
sbb
ds
ja
xchg
jnp
ss
setns
mov
not
or
subb
push
adcl
js
nop
mov
and
out
in
leave
imul
icebp
mov
data16
stc
or
xor
inc
out
mov
push
cmc
jle
cmp
loopne
xlat
mov
ret
sti
push
fbstp
cmpl
cmpsl
daa
mov
mov
jnp
xchg
push
pop
pop
ljmp
clc
xchg
mov
movsl
adc
xchg
movsb
stc
int3
push
pop
scas
ljmp
add
or
mov
mov
jns
orl
push
adc
aam
jg
adc
jne
cmp
fisubl
mov
dec
fidivrl
xor
pushf
aad
repnz
push
mov
jno
push
cmp
jg
mov
std
daa
cmp
rorb
les
inc
repz
cmp
imul
das
ss
bndstx
xchg
into
stos
lods
shrb
clc
inc
cmp
rcrb
cmc
mov
jmp
bound
mov
iret
cmpsb
inc
and
aas
lds
sbb
jmp
sub
ljmp
lea
cmp
xchg
inc
cld
pop
repz
call
xchg
mov
mov
in
fbld
in
jno
fsubrs
les
lea
xchg
sub
shr
inc
xchg
je
lahf
mov
cld
lcall
mov
gs
pop
icebp
outsb
lret
pop
mov
cmpsl
pop
cmpsl
repz
jmp
push
les
fisubl
insl
mov
aad
sub
push
imul
mov
das
pop
or
push
adc
imul
int3
fstpt
es
sbb
mov
filds
arpl
cltd
jbe
lock
sub
out
cli
nop
dec
pop
test
xchg
mov
sub
and
or
adc
sub
mov
shlb
sbb
aad
daa
jns
gs
pop
jnp
cmp
sti
xor
push
nop
in
inc
gs
cmp
xor
ljmp
xor
sub
std
nop
shrb
mov
lds
js
jns
sub
bound
push
adcl
inc
cmp
testb
out
jmp
jnp
add
cmpsb
fildl
push
add
xor
sub
es
jecxz
xchg
cmp
out
xor
data16
push
jp
or
imul
dec
decb
inc
lea
mov
cmp
and
in
jns
je
ffreep
add
xchg
daa
fisubl
push
testl
mov
xchg
lea
scas
test
or
or
dec
shl
in
js
in
mov
dec
and
test
shl
sub
jns
add
test
lea
xorb
mov
pop
mov
imul
dec
int3
je
pop
inc
rcll
mov
or
movsb
mov
mov
mov
daa
xchg
test
sbbl
repz
mov
sbb
mov
xchg
xor
int
jb
mov
add
pushf
rcr
xchg
jbe
or
pop
int3
xchg
popa
and
cmp
idivb
xor
ds
xchg
or
je
mov
mov
int
or
insb
es
dec
sbb
pop
stc
mov
mov
xor
lret
test
push
lret
xchg
popf
jl
sbb
cmp
lock
add
icebp
leave
push
mov
fsubrl
lcall
and
dec
movsl
sub
xor
fisubrl
insb
adc
push
std
xor
lea
push
pop
movsl
pop
rolb
popa
nop
cmpsl
bound
xchg
popa
aam
arpl
jl
dec
jge
cmp
sub
out
xor
ljmp
repz
or
cmc
lods
lret
leave
scas
pop
pop
sahf
jno
icebp
fstl
nop
mov
pop
les
lock
add
lahf
insl
cld
and
and
pop
movl
loop
cmp
pop
jnp
xor
out
dec
mov
or
gs
aas
add
or
dec
sub
jl
sbb
shll
mov
and
movsb
pop
xchg
mov
sub
mov
push
pop
mov
xchg
pop
cmc
mov
sub
mov
mov
imul
cli
popf
mov
leave
xchg
add
mov
xlat
test
out
leave
adc
test
aam
testb
je
ss
mov
jb
mov
and
imul
lcall
lock
dec
add
cltd
mov
push
sti
jmp
inc
in
frstor
in
ret
push
adc
dec
or
ljmp
jbe
shll
outsl
movsb
aad
lds
cmp
xchg
add
sub
adc
adc
sbb
mov
push
mov
mov
es
inc
push
lret
outsl
or
pop
add
add
mov
int
adc
stos
lock
xlat
mov
xchg
jne
inc
mov
jnp
push
movsl
lcall
lahf
xchg
fsubs
cld
add
clc
cli
je
fsubrs
or
mov
push
loope
stc
leave
jecxz
jnp
jmp
dec
loop
sbb
sbb
arpl
lock
popf
and
adc
out
sbbl
xor
sub
and
push
cs
ret
popl
fiaddl
xchg
test
ljmp
add
dec
shlb
xchg
cltd
outsb
movsb
push
enter
int3
pop
cmp
dec
into
cmpsl
xchg
mov
cs
cs
in
cmp
mov
ret
out
daa
fbld
std
into
sbb
insl
pop
fmull
jp
fwait
call
pushf
dec
jo
adc
lret
pop
push
es
lds
xchg
in
test
fcomps
mov
mov
xlat
dec
xchg
out
push
dec
push
jns
jnp
pop
pop
scas
push
idivl
pop
inc
jecxz
aas
ja
xchg
mov
add
push
mov
pop
jnp
jae
fists
push
sbb
iret
xchg
xor
lcall
cltd
xchg
ret
cmp
leave
mov
stc
stos
shr
loopne
mov
adc
xchg
aam
push
dec
push
scas
sbb
aad
push
mov
notb
movsb
out
xor
call
xchg
lods
cs
adc
sbb
add
sbb
sub
push
lock
insb
pop
cmpsb
sub
and
lahf
lcall
decl
out
inc
js
pop
push
ljmp
cwtl
sbb
dec
inc
imul
cmp
add
icebp
and
push
mov
and
jecxz
popa
lahf
push
jne
test
ficompl
andl
inc
cmp
lret
sbb
fisttpl
jne
inc
stos
or
jl
in
pop
in
clc
hlt
insb
rorb
pop
mov
inc
inc
pop
cmp
mov
add
scas
lock
call
mov
call
sarb
cmp
push
inc
mov
lock
imul
inc
pop
gs
bound
dec
adc
popf
adc
idivl
add
mov
jge
in
in
lods
mov
add
data16
int
outsl
cli
cld
lock
mov
add
jmp
popl
mov
nop
xchg
and
mov
pop
mov
mov
or
pop
mov
and
aam
cli
mov
sbb
int
add
or
mov
fistpl
mov
test
cmpsl
xchg
js
mov
sahf
mulps
lcall
out
clc
decl
xor
mov
out
add
mov
std
mov
mov
repz
jmp
jle
add
mov
push
andb
add
add
scas
outsb
xor
outsl
push
adc
xchg
scas
pop
mov
decl
dec
cmc
insl
loopne
jnp
cmp
leave
jle
cmp
xchg
idivb
inc
aaa
sbb
aad
fisttps
icebp
jnp
jg
ret
and
mov
adc
test
xor
add
inc
add
mov
loopne
scas
and
sub
cmp
sub
ficoms
outsb
js
xor
jp
mov
push
mov
insb
dec
add
cmp
sbb
inc
jo
shl
int3
push
addr16
xchg
test
or
lods
daa
in
mov
cmp
jbe
xorb
xor
pop
xchg
adc
lea
std
in
push
add
and
jmp
addl
inc
stc
mov
cld
push
ljmp
xchg
inc
add
mov
mov
je
mov
cmp
adcb
and
pop
dec
inc
push
imul
stos
dec
sar
ja
movsb
jmp
xchg
adc
sbb
daa
out
iret
mov
sub
in
arpl
addb
pop
or
in
xchg
shr
dec
ds
pop
jle
mov
inc
ficompl
jmp
sbbb
inc
mov
cmp
imul
addr16
clc
andl
xor
pop
pop
ret
outsb
xor
icebp
xor
inc
xor
mov
xchg
cs
dec
clc
or
insl
mov
or
sub
jl
jb
out
xchg
inc
inc
and
hlt
cmpsb
and
sub
xor
scas
mov
pushf
fmul
stos
dec
pop
std
dec
loopne
sbb
stos
sti
out
stc
jge
test
xor
sub
mov
push
xchg
adc
xorb
aas
mov
pop
fldenv
mov
adc
add
add
mull
jmp
or
push
sarl
push
sub
popa
mov
in
dec
repz
mov
push
fdivrs
ret
jge
imul
xor
scas
mov
enter
push
les
outsl
fnsave
mov
dec
jg
add
sbb
mov
push
sub
sbb
push
mov
mov
dec
lea
or
lods
and
pop
loop
push
adc
push
jne
xchg
push
pushf
test
nop
fcmovbe
jae
mov
lret
mov
aaa
mov
push
xchg
stc
repnz
add
mov
pop
lock
stos
scas
sbb
rcrb
and
lea
push
pop
movsl
icebp
fwait
addl
fisttps
add
or
daa
mov
pushf
scas
xchg
cmpsl
jo
clc
jl
shl
or
std
adc
mov
loopne
push
ljmp
sbb
cwtl
push
mov
pusha
jecxz
clc
aaa
imul
xchg
mov
or
clc
or
pop
outsl
arpl
adc
push
pushf
pop
or
mov
and
xor
cltd
cmpxchg
in
outsl
adc
in
out
aaa
sub
aaa
fldcw
lret
faddp
jp
xor
mov
fnop
sub
jae
mov
push
mov
inc
int3
pushf
in
std
cs
pop
xchg
push
aam
dec
cwtl
js
in
leave
faddl
sti
call
jns
neg
sub
cmp
pop
iret
out
pop
insb
fisubrs
xorb
lahf
jbe
aad
subb
in
fwait
popf
mov
push
adc
cmpsl
gs
add
mov
in
jmp
dec
sarl
jnp
or
imul
dec
testb
ss
cwtl
mov
sbb
push
and
pushf
push
xor
mov
rol
mov
ret
push
mov
enter
jnp
xorb
sbb
inc
sub
jl
in
adc
mov
and
xchg
insl
loope
adc
push
and
dec
js
outsl
jg
sbb
fistps
jg
pushl
repz
mov
repz
adc
bound
push
jle
fcmove
push
mov
mov
ss
jae
mov
rclb
xchg
push
and
pusha
sub
lret
pop
loop
je
mov
cmpb
pop
flds
mov
push
fisttps
data16
out
pushf
ret
dec
add
add
pop
mov
or
fisubrs
push
pop
cmp
cmp
xchg
cmc
scas
mov
mov
pop
add
adcb
scas
push
ljmp
xchg
push
xchg
cltd
adc
ss
mov
lret
adc
dec
mov
jg
icebp
dec
in
mov
or
xchg
in
mov
dec
or
cmpsb
inc
icebp
lods
or
shr
stos
in
test
mov
add
aad
andl
mov
push
dec
xor
xor
test
hlt
mov
lret
xlat
xor
jo
mov
mov
mov
push
mov
mov
pop
push
cmpsb
icebp
mov
addr16
rcll
jnp
rcr
rorb
fldt
fwait
ret
les
push
jp
push
ja
popa
push
addb
es
inc
data16
sub
std
adc
jge
pop
sub
mov
outsl
bound
and
loope
sahf
add
sti
cmpsl
sub
and
lret
idivb
push
xchg
repz
into
lods
push
test
or
cmpsl
mov
movsl
mov
cwtl
push
and
push
jo
adc
or
cmpsb
add
lea
pushf
ret
jl
and
sbb
push
mov
push
jbe
mov
pop
insb
and
inc
cmpsb
fdivr
xchg
dec
xchg
imul
test
inc
pop
insb
icebp
dec
push
or
jp
ret
movsl
aad
pop
xchg
mov
dec
push
adc
and
adc
sub
jo
pop
ja
sub
adc
mov
cli
jae
dec
mov
arpl
lret
dec
sub
mov
push
cld
fsubrs
or
pusha
add
xchg
xchg
mov
jbe
ljmp
mov
mov
inc
aaa
or
dec
dec
push
pop
sbb
xor
filds
outsb
pop
gs
push
lea
push
repnz
dec
arpl
jecxz
add
test
imul
sahf
cmp
dec
je
adc
int3
lods
xorl
subl
ja
xchg
xchg
mov
iret
sahf
mov
fsts
push
lea
dec
imul
rolb
inc
mov
test
cmc
mov
add
test
stos
icebp
call
cmc
hlt
nop
rcrb
add
and
mov
dec
sub
push
nop
pop
inc
aad
mov
lret
mov
cltd
outsb
cli
xor
bound
jmp
xor
dec
pop
push
pop
andb
xchg
lret
imul
inc
das
or
sbb
fcmove
je
leave
cmp
cli
js
mov
pop
push
aaa
aad
cld
loopne
sub
xchg
push
xchg
les
enter
das
jno
in
testl
mov
xor
mov
fists
out
out
xor
cwtl
out
add
rorb
out
faddp
clc
shrl
sti
icebp
inc
mov
jae
add
daa
fdivl
add
js
cmp
es
imul
mov
dec
imulb
mov
loopne
out
cld
dec
push
sbb
sub
add
jmp
lret
sahf
sbb
stc
dec
dec
jl
rcrb
call
pop
push
xor
addr16
and
xchg
or
sbbb
pop
jnp
call
ljmp
outsb
dec
push
lods
inc
add
or
jne
xorb
xchg
stos
stos
and
push
jnp
cltd
pop
sub
js
xchg
mov
mov
fwait
sarb
fldlg2
xor
cld
jns
push
push
push
mov
aaa
jne
popa
ret
imul
sbb
jbe
or
mov
xchg
ja
pop
xor
outsl
cmp
inc
stos
or
or
xchg
fisttpl
sbb
push
jmp
mov
jae
sbb
insl
jecxz
inc
push
adcb
mov
cmp
cs
test
inc
lret
mov
pop
and
lds
add
mov
sub
sahf
lea
loopne
ret
add
cmpsl
mov
xchg
shll
mov
arpl
cli
je
dec
or
rcrb
incb
cmp
and
js
jmp
and
or
rolb
fisubrl
test
dec
lock
test
push
xchg
and
shrb
ds
hlt
cmp
or
mov
xor
addb
roll
outsb
xlat
and
mov
fadds
jmp
ljmp
cmp
cmp
scas
xorb
inc
cld
jbe
repz
add
pop
mov
arpl
push
roll
sahf
mov
ljmp
mov
pusha
daa
and
inc
scas
popf
pop
jl
and
stos
ret
shrl
int3
push
jae
sti
outsb
sbb
dec
sub
imul
ds
add
inc
lods
leave
jl
stc
stos
and
in
mov
pusha
pop
outsb
aaa
mov
dec
lcall
sub
xchg
das
cvtps2pi
push
sbb
dec
mov
out
mov
add
ds
sub
test
or
orb
cmp
inc
push
cmp
adc
ja
faddp
sbbb
jno
or
inc
ret
ficoms
je
add
idiv
fdivs
mov
dec
cmp
xacquire
inc
arpl
push
leave
js
into
adc
stc
ret
jp
cmp
loop
pop
cld
add
push
out
pop
xlat
mulb
cwtl
ja
cmp
icebp
xor
sub
jb
jo
in
sbb
shll
jg
ja
adc
gs
sub
mov
pusha
pop
or
mov
sbb
movhps
imul
mov
lods
rcrb
mov
imul
inc
sub
lds
sub
add
dec
cmp
and
sbb
inc
sbb
inc
inc
push
scas
or
popa
jbe
lock
cmpsl
scas
cmp
ds
adc
cs
mov
mov
in
lods
mov
repnz
jae
pop
inc
sbb
faddp
fucomi
sahf
jge
xchg
xchg
out
dec
in
jl
fildl
add
push
sub
or
call
or
sbb
jnp
xchg
or
daa
pop
daa
xlat
out
or
sbb
mov
int
loopne
int3
inc
xchg
sbb
sub
leave
and
or
xor
lahf
pop
in
sahf
es
filds
or
and
loop
adc
outsb
ja
cmp
adc
ret
mov
ljmp
in
loop
pop
popf
scas
jle
xor
mov
jmp
xchg
out
lock
insl
sbb
jae
popf
pop
fiaddl
push
xor
add
lods
ja
mov
xor
jns
adc
dec
pop
leave
loopne
mov
faddl
in
das
lret
add
fs
stos
push
pusha
stos
pop
cli
sub
je
addr16
mov
jno
int3
jae
mov
lret
adc
es
lahf
push
shrb
inc
data16
cmpsl
jne
or
je
mov
dec
push
fsubs
std
movsl
jmp
mov
cmpsl
pop
popl
dec
add
mov
pop
dec
jmp
and
jecxz
pop
dec
dec
cmp
push
pop
std
cmp
fsub
sahf
jecxz
bound
fst
call
jnp
mov
mov
int3
shrl
test
fcoml
inc
negb
xor
cwtl
in
mov
ljmp
push
enter
scas
pop
ljmp
negl
push
xchg
js
xor
jno
inc
adc
cmp
shlb
inc
mov
mov
xchg
mov
mov
mov
cmpsb
or
lret
ja
inc
jecxz
jp
insb
cmpsl
mov
xchg
arpl
cmp
aam
sub
pop
mov
pop
pop
sahf
dec
xchg
imul
stos
mov
ds
cltd
movsb
bound
fbstp
adc
dec
sub
pop
inc
jmp
add
outsb
and
test
arpl
dec
shlb
sysenter
mov
xchg
mulb
or
ss
xchg
je
adc
mov
xor
pop
add
les
and
ljmp
jmp
adc
mov
xor
jmp
sbb
and
pusha
cmp
stc
inc
cld
cmp
mov
push
jae
sarl
jge
cmp
out
jp
mov
sbb
aam
fdivrs
je
in
or
andl
cmp
jge
and
push
mov
mov
nop
cltd
aas
mov
push
mov
test
sahf
aam
push
nop
cmp
leave
pmulhw
fnsave
mov
jno
ljmp
adc
scas
pop
mov
and
inc
test
adc
add
out
mov
xchg
adc
aaa
cmpsl
cltd
out
mov
jp
outsl
sbb
imul
repnz
push
lods
and
sub
out
pop
dec
fidivrs
add
lock
mov
and
xor
loop
mov
aaa
cmp
push
popa
sub
outsl
imul
or
fwait
mov
scas
or
pop
push
outsl
dec
add
sbb
icebp
push
mov
imul
push
pop
bound
je
mov
clc
jb
jecxz
cmc
and
movsb
add
push
xor
test
in
mov
inc
mov
cmp
inc
ret
dec
push
xchg
cmp
sti
mov
and
jge
mov
clc
insb
cmp
in
jbe
sub
daa
and
adcl
icebp
pop
js
shrb
hlt
jns
push
mov
mov
pop
icebp
scas
dec
cmp
jg
mov
dec
aaa
inc
mov
out
in
shl
ljmp
dec
mov
sbb
pop
pop
sbb
mov
rorb
push
mov
pop
mov
sub
vpcmpeqb
hlt
lock
cli
push
jae
pop
jmp
jns
mov
mov
shl
inc
cmc
jae
xor
loopne
xchg
icebp
adc
insl
mov
mov
cmc
jbe
js
lcall
xchg
jbe
jmp
jmp
pop
jecxz
pop
push
jge
pop
or
and
sub
pop
ret
out
cwtl
mov
in
jecxz
mov
mov
xchg
mov
or
pusha
int
mov
lods
jo
ret
imul
int
fucomp
sar
push
xor
mov
pop
adc
test
cmp
insb
pop
inc
orl
fs
es
cmp
cs
sahf
lods
outsl
push
sti
mov
sbb
cltd
cltd
push
rolb
jnp
andl
in
dec
and
cmp
cmpsb
jne
xor
xor
xchg
lods
push
test
or
cmp
dec
mov
out
push
mov
hlt
lods
mov
mov
cltd
gs
xchg
jge
and
cmp
fdivl
sbb
mov
lret
xor
xchg
push
cwtl
or
xchg
test
icebp
and
pop
xchg
mov
dec
xchg
inc
cmp
push
clc
mov
cmpsl
adc
mov
test
fiadds
push
mov
xlat
addb
hlt
dec
imul
rcrb
int3
cwtl
push
int
fstps
inc
pop
lods
insl
mov
sbb
mov
mov
xchg
pop
pop
xchg
cmc
inc
push
xor
aas
mov
xchg
scas
movsl
call
push
mov
ficomps
loopne
outsb
push
jno
inc
ficoms
add
cmc
push
sub
mov
out
push
push
push
mov
pop
out
xor
ja
lods
dec
in
mov
sbb
aam
push
ret
sbb
aas
and
gs
push
sbb
aam
mov
rolb
neg
in
or
loope
mov
add
or
sahf
jge
cld
ds
push
and
mov
mov
movsl
nop
cmp
pushf
cmc
incb
xor
add
or
add
push
inc
fcoml
xchg
arpl
mov
ds
scas
add
lea
dec
cmp
test
mov
fidivs
jnp
sti
jns
orl
jge
ret
xchg
mov
nop
shrb
xchg
dec
xchg
cs
jmp
push
dec
imul
sbb
xchg
jns
pop
ret
pop
push
add
jg
fsubl
sub
mov
out
aad
mov
pop
xor
mov
cmp
adc
and
mov
xchg
mov
enter
pop
push
stos
inc
fistl
sub
movsb
fs
and
push
shl
lds
xor
loope
sub
test
inc
or
pop
pop
cmp
push
mov
jmp
stos
stos
push
in
and
xor
cmp
insl
mov
imul
pop
lds
mov
outsl
adc
pop
lret
push
ja
scas
lahf
jg
mov
xlat
scas
bound
aaa
push
dec
xor
loope
xchg
jo
dec
add
cltd
mul
xchg
push
in
ss
pop
nop
cld
mov
mov
cmc
call
mov
pop
fnstcw
push
inc
repnz
push
test
lods
ret
cld
dec
mov
mov
xor
jno
out
add
cmpsl
int3
sahf
lahf
mov
xor
inc
or
fucomi
xchg
shll
stos
enter
lcall
jmp
xchg
aas
call
sbb
subb
mov
rcl
jne
xchg
pshufw
pop
fs
inc
loope
adc
jns
push
incb
js
rol
xchg
dec
icebp
cld
mov
das
sub
loope
movsl
mov
and
fistps
mov
adc
rcrb
mov
sahf
out
or
or
inc
out
sub
xchg
xchg
dec
lds
cwtl
push
out
sbb
pop
lahf
es
orl
out
pushf
ja
mov
lea
add
pop
subb
insb
inc
pop
fists
inc
fists
or
push
and
mov
cli
add
cmp
stos
adc
cmp
js
ja
js
xchg
nop
xor
ret
outsb
dec
mov
cmp
cmp
jae
cmp
sahf
add
xor
mov
xlat
repnz
xor
sub
mov
fcompl
xor
out
fidivrs
xchg
mov
sub
jo
or
out
push
add
mov
xchg
jmp
xor
and
ror
outsl
pop
xchg
cmc
cmp
inc
ret
push
rolb
mov
xor
loope
xchg
ljmp
cmp
outsl
addb
fstpt
push
mov
add
pop
sub
enter
and
dec
mov
push
shlb
sbb
mov
lods
aam
icebp
cli
and
cmp
push
and
fcompl
lods
movsl
je
popf
xchg
jecxz
lock
movsl
fistpl
ljmp
out
inc
adc
jnp
mov
pop
xchg
std
mov
fsubr
repz
repz
lret
pop
pop
loope
int
mov
lahf
xor
pop
cs
jg
loope
inc
or
les
jg
add
add
jecxz
push
xor
addr16
insb
arpl
shl
arpl
stc
scas
push
mov
ficompl
jo
sahf
xchg
pop
insb
lret
add
sbb
shll
in
pop
pop
lods
sub
int
mov
pop
shl
cmc
stos
xchg
mov
mov
mov
pop
pop
push
jno
leave
adc
cmc
test
out
cltd
repnz
sbb
mov
cmp
mov
xchg
jne
outsb
adc
cmp
loopne
inc
and
stos
inc
mov
xor
cmpsb
loope
in
xor
sti
or
pop
xor
rcrb
ficoms
mov
icebp
and
fsts
jno
call
bound
add
out
mov
sub
out
jnp
add
ror
fld
js
xchg
push
push
mov
sub
fimull
subb
fcmovbe
stos
cmc
or
jmp
lock
stos
jbe
and
test
bound
adc
mov
dec
fdivrs
inc
repz
cmp
xchg
out
stos
cmp
insl
mov
loopne
ret
inc
dec
movsb
out
sahf
sbb
xchg
scas
fs
mov
jne
movsb
xorl
and
fsubr
adc
sub
jp
lahf
adc
cld
fsubp
imul
xchg
jnp
jb
inc
lahf
shl
sub
xor
cmc
cld
into
sub
cmp
sbb
cmpsb
dec
mov
sbb
push
and
repz
xor
jae
loopne
or
adc
sbb
enter
xchg
gs
adc
fistl
pop
mov
fnstenv
cmpsb
xchg
sti
rolb
mov
push
mov
lods
cli
add
pusha
mov
mov
push
jecxz
mov
sub
sbb
stc
push
imul
adc
push
or
jo
xor
hlt
cmc
in
jmp
mov
mov
jl
cli
mov
mov
insb
push
jo
pop
imul
faddp
push
pop
adc
xlat
cmp
leave
imul
out
xor
inc
mov
insl
mov
sub
lods
mov
sbb
sub
sub
add
rcl
imul
dec
rorb
pop
cmp
icebp
xchg
add
cmp
ljmp
add
jecxz
into
inc
pop
sub
incl
or
sbb
outsl
test
mov
jno
push
dec
inc
sub
add
aas
ret
xor
xlat
sbb
push
mov
in
shlb
adc
in
sbb
or
xchg
repz
sbb
mov
loop
movsb
outsl
sub
sbb
or
pop
inc
mov
push
adc
mov
pop
out
lods
adc
cmpl
push
xchg
fs
fwait
mov
hlt
scas
adc
lock
and
fnstcw
aad
les
or
ss
jae
rol
lcall
test
in
mov
filds
dec
mov
jae
inc
push
pop
push
shl
cwtl
cmp
push
mov
dec
fildll
inc
scas
addr16
jp
sub
xchg
dec
inc
rcr
push
jle
mov
cmp
outsl
dec
rol
imul
cmp
movb
gs
mov
int
xlat
push
sbb
test
push
jle
int3
fcompl
and
mov
mov
add
inc
repnz
mov
xor
xor
push
inc
mov
fimull
fdivrs
aad
or
mov
test
xor
std
jns
int
cmovb
test
fsub
cli
dec
cmp
lods
in
mov
loopne
movsl
and
rcr
xor
out
jo
rorl
inc
call
pop
cmp
in
loope
leave
cmc
xor
and
lahf
in
cmpb
and
roll
xor
mov
mov
lods
xchg
dec
cld
sub
mov
pop
int3
adc
jnp
sbb
scas
ja
fadds
es
testb
in
adc
mov
sbb
jns
and
push
cmp
sub
mov
jo
inc
mov
test
adc
mov
leave
push
lods
push
lea
inc
add
inc
jl
call
andb
aaa
loop
mov
push
movsb
leave
fistps
push
push
inc
fstpl
add
adc
cmpsl
in
dec
aam
sbb
jp
lcall
mov
adc
pop
pusha
sbb
mov
in
imul
test
pop
xchg
sub
cli
xchg
hlt
and
andb
xor
xor
pop
out
adc
sbb
dec
xchg
xor
nop
sub
loope
call
pop
loopne
in
mov
enter
roll
shlb
fistpll
sbb
in
push
cmpsl
sub
inc
xchg
jno
daa
imulb
fadds
jmp
sbb
xchg
adcl
fmull
mov
jno
xor
jb
shr
cmp
sub
faddl
cmp
sub
jnp
sub
cli
adc
lods
add
or
pop
sbb
push
gs
js
push
loope
cltd
repnz
mov
in
inc
es
push
xor
call
mov
int
jg
subb
jae
scas
mov
dec
xor
and
lods
loope
sbb
mov
xlat
xor
popf
mov
aas
lds
int3
mov
pop
and
mov
sar
cwtl
dec
xlat
dec
in
jge
int
arpl
movl
cmp
xlat
dec
sbb
lcall
out
dec
sub
imul
mov
mov
sar
sub
and
insl
mov
pop
xchg
loope
mov
subb
lods
and
fwait
pop
negl
inc
scas
fidivrl
fisttpll
pushf
xchg
sub
lods
cmp
sti
loope
lahf
mov
sbb
sbb
mov
jne
xor
hlt
lea
out
orb
xor
inc
cmp
call
daa
dec
mov
cld
int
add
jo
mov
mov
mov
fstpl
repnz
lods
sbb
pop
pusha
add
dec
mov
bound
pop
test
stos
mov
sub
rcll
jmp
enter
movsl
pop
in
jo
sub
sbb
pop
xchg
fnsave
push
out
add
jl
inc
gs
iret
shrb
lret
push
bound
pop
inc
ds
xlat
push
sub
idivl
jno
rep
bound
pop
cld
xchg
lret
lea
ror
jle
test
mov
pop
sub
lds
sti
cmc
add
jb
inc
dec
fidivl
sub
push
js
mov
daa
cwtl
call
roll
push
push
mov
dec
pop
rcrb
lds
fistpll
movsl
subl
jns
pusha
insb
cld
sub
js
fadd
hlt
adc
mov
xor
xor
or
pop
jecxz
push
movsb
xadd
inc
xor
aaa
and
movsl
in
jl
xchg
in
cmpsb
mov
sbb
adc
adc
scas
dec
pop
mov
pusha
push
cmpsl
int
outsl
sahf
and
push
sbbb
pop
arpl
test
sub
movsl
and
inc
dec
arpl
push
clc
sbb
lods
and
fdivl
xor
lret
xchg
add
insl
lcall
or
lock
in
sbb
xchg
cmpl
push
test
push
cld
jp
push
mov
negl
outsl
xchg
pop
movsl
arpl
mov
add
les
aas
shr
push
jno,pn
divb
sub
mov
mov
and
xor
push
es
cltd
xchg
push
pop
xlat
add
dec
test
or
fdivl
rorb
mov
mov
push
pop
adc
push
xlat
fs
cmp
mov
adc
rcrb
sbb
ficoml
cmp
jle
fsubrs
icebp
or
and
sbb
aad
loop
scas
pushf
xchg
in
jbe
mul
inc
das
sbb
outsb
cmp
inc
sarb
std
push
mov
mov
shlb
cmp
jae
inc
fsubrl
in
mov
sbb
xor
mov
test
pop
fcmove
and
clc
or
push
mov
sarl
cmpsb
inc
aad
stc
neg
pop
pusha
mov
mov
mov
sub
into
jg
dec
adc
int
clc
mov
mov
xchg
xor
sub
imul
sarb
and
negb
mov
cltd
sar
lahf
xor
loope
inc
sub
fcompl
xor
mov
or
fdivrl
stos
adc
push
mov
fimull
pop
sub
inc
cltd
mov
pop
ds
xchg
mov
sbb
cli
orl
fistl
sub
test
cmp
sub
xor
xor
pushf
sbb
lret
xchg
cli
mov
sbb
out
push
push
mov
or
jge
push
sbb
mov
mov
enter
add
jp
adc
jne
fs
push
fsubrs
cltd
xor
and
ds
scas
stos
je
jge
xchg
mov
into
hlt
mov
call
dec
les
rorb
stos
cwtl
xchg
jnp
jg
sub
bound
iret
lahf
add
test
iret
daa
subl
sbb
dec
mov
roll
pop
pop
in
fidivl
sahf
and
loop
leave
sub
sarb
cmp
sub
mov
cmp
sarb
into
jns
xor
loope
push
cmp
inc
and
aad
mov
iret
ud2
cmc
aam
mov
lds
dec
das
xor
ret
test
movsb
int
mov
mov
jge
imul
leave
sbb
cmovb
push
in
gs
xchg
shl
add
idivb
jle
out
mov
inc
mov
cmc
lods
jnp
cmp
imul
add
dec
push
mov
xor
jge
adc
loop
push
popa
dec
out
lock
sub
cmp
xor
pusha
enter
push
orl
jno
mov
push
xor
aaa
push
pop
loope
push
sbb
movsb
dec
addl
cmpsb
mov
test
out
js
test
jno
repz
jo
mov
ja
jl
arpl
jl
fsubrs
pop
scas
out
xchg
cmp
sbb
rcr
mov
dec
jne
and
xchg
adc
xchg
or
dec
and
or
scas
nopl
mov
ja
lods
aas
mov
prefetch
mov
loop
dec
xor
push
and
lods
shl
loop
and
dec
das
sarl
cs
jno
push
js
xchg
inc
fwait
pop
lcall
ljmp
lret
aam
fs
sarl
out
and
pop
test
fstpt
adc
dec
sbb
divb
cmp
je
out
pop
push
roll
outsl
stos
sti
in
mov
or
and
addr16
insl
out
mov
insl
push
inc
cmpsl
xor
cwtl
jo
clc
scas
rorb
lret
out
test
sbb
addr16
aam
test
push
nop
incb
cs
xchg
mov
out
add
sbb
idivb
arpl
xchg
int3
out
or
dec
mov
mov
xor
dec
xchg
outsl
nop
pop
or
mov
ret
mov
pop
push
out
xchg
shll
loope
loopne
jno
out
outsl
cld
inc
test
mov
data16
xchg
add
and
xchg
xchg
and
mov
jo
dec
loop
aas
push
in
sub
push
xor
imulb
push
lods
rol
push
and
jge
jnp
rorl
in
loop
push
cmp
nop
or
xorb
jnp
mov
xchg
or
fbstp
jo
mov
xor
scas
hlt
in
pusha
pop
sbb
stc
ffreep
dec
out
mov
xchg
adc
jle
mov
sbb
es
sbb
sbb
loopne
cmpsb
jo
pop
push
into
fwait
outsb
fistpl
gs
fcmovb
insl
lret
sahf
cmp
js
mov
cmp
jle
or
nop
add
push
add
adc
mov
pop
pusha
xor
or
jp
cli
lods
lods
inc
cmp
push
sti
lock
adc
fs
cmp
xor
jp
ss
xlat
pop
add
dec
xchg
rcll
xchg
imulb
in
sbb
dec
dec
mov
jo
xchg
adc
and
pop
xor
xor
outsb
sbb
push
aad
push
mov
dec
inc
inc
ljmp
mov
lret
loopne
cmp
mov
and
inc
pushf
sub
xchg
enter
icebp
and
mulb
cmp
lea
sub
aad
jecxz
popa
dec
stos
mov
jg
pushf
cmp
jl
adc
xchg
std
int3
jle
push
lret
cli
imul
cmp
pop
and
daa
hlt
xorb
or
push
mov
push
pop
jae
and
bswap
cwtl
movsb
lock
out
cmpl
jb,pn
ret
mov
cmp
push
pop
mov
mov
mov
sti
sub
roll
pop
mov
mulb
cmpsl
xor
outsb
xor
in
add
jmp
sub
pop
aaa
sbb
mov
sub
cmp
pop
mov
jp
nop
xor
mov
leave
and
pop
xchg
cmp
mov
test
sbb
divb
add
test
mov
roll
cmp
cmc
arpl
sbb
sbb
es
cmp
sbb
sub
sub
push
xor
pshufw
pop
fidivrs
shrb
xchg
jo
mov
pop
addb
pop
add
into
into
xchg
and
push
xchg
xor
push
inc
xchg
pop
into
fs
xor
data16
test
inc
hlt
pushf
adc
sarb
insb
lcall
fldcw
enter
andl
out
ljmp
jae
test
add
out
aam
aam
xor
add
xchg
sub
ret
insl
pop
jp
adc
clc
int3
repnz
add
decl
xchg
sti
jnp
and
rcll
xchg
mov
inc
je
std
roll
or
test
or
out
addb
out
mov
mov
add
fsub
push
xchg
test
js
je
mov
pushf
imul
pop
movsl
sbb
mov
xor
idivb
dec
xchg
push
cmp
pop
std
push
arpl
ret
test
mov
dec
or
int3
mov
addr16
fs
lahf
sbb
stc
xlat
mov
sbbl
in
sahf
ficomps
mov
popf
pop
pusha
or
mov
xchg
enter
enter
lea
jg
ret
bound
jle
fnstcw
in
and
das
lods
or
sbb
pop
jbe
jnp
test
mov
xchg
dec
test
test
xor
push
pop
mov
sub
lock
add
or
mov
hlt
dec
clc
rcrl
push
mov
or
stc
add
or
shll
mov
mov
daa
ljmp
in
aam
jo
stc
dec
fs
aaa
sbb
sbb
enter
and
pop
imul
mov
subl
sub
nop
mov
dec
dec
in
push
fmulp
cmp
idivl
push
int
push
aam
cmp
cmp
imul
or
push
movsl
ret
test
ljmp
add
lahf
mov
and
push
sbb
ss
dec
mov
loope
xchg
add
sub
push
inc
xor
fdivrl
ret
fmul
lods
adc
mov
insb
in
sti
adc
js
movsl
and
pop
pop
and
xchg
mov
cmp
pop
and
push
xor
add
xchg
ret
adc
add
mov
push
cmp
stos
adc
dec
push
mov
mov
scas
push
adc
jg
cmc
xchg
push
push
xchg
mov
outsl
repnz
std
bound
add
bound
cmp
imul
fsubrl
shrb
xchg
push
push
into
sti
cs
lret
ficoms
xchg
in
lahf
add
jp
rcrl
push
test
fistpl
pop
and
cmp
lds
cmc
xchg
into
xchg
inc
jnp
ljmp
or
xchg
ss
adc
add
dec
clc
clc
mov
push
cwtl
mov
xchg
ret
jmp
adc
sub
adc
cmp
std
jns
stos
adc
fs
divl
pop
mov
dec
adc
stos
mov
test
xchg
je
pushl
int3
nop
xor
aas
jl
out
insl
sysexit
add
dec
mov
popf
repnz
mov
mov
fisubrl
iret
aad
mov
fwait
push
cmpl
scas
jecxz
xchg
jae
cmp
and
push
push
xchg
jl
dec
mov
test
std
cmp
loopne
stos
roll
add
xchg
or
addl
clc
fsubrs
lock
jno
jne
cmp
fucomi
push
shll
packuswb
test
push
addr16
inc
out
pop
push
xchg
sub
xchg
pusha
lock
mov
jp
loop
outsl
push
cmp
nop
push
loop
mov
lock
or
mov
pop
rol
pop
out
inc
in
imul
jl
mov
inc
movsl
adcb
loopne
cmp
fs
test
xor
push
push
mov
stc
pusha
xchg
xor
mov
pop
fstpl
mov
xchg
push
push
pusha
loop
mov
test
lea
jmp
stc
xchg
scas
movsl
loope
popf
mov
pop
fmuls
dec
mov
cmp
lods
xor
ds
pop
imul
push
adc
or
xor
inc
pusha
pop
shl
lods
mov
jg
sbbl
shll
daa
mov
lahf
cmpsl
or
mov
mov
dec
call
int3
inc
or
inc
push
and
addr16
adc
loop
rcll
xor
push
add
ror
jb
jns
jle
ficomps
dec
push
fwait
jno
cmpsb
mov
lock
leave
scas
ljmp
icebp
idivl
rcrb
mov
addr16
nop
mov
cmpxchg
or
divb
inc
xor
sub
cmp
xor
lods
push
push
inc
inc
adc
sbb
test
scas
fstpt
adc
es
fwait
das
xor
cmpsl
dec
in
scas
inc
push
and
cmpsb
or
mov
add
fnstsw
add
cmpsl
inc
jge
test
xchg
xchg
daa
mov
fldenv
cmpsb
sbb
out
pop
mov
mov
in
and
push
xor
xor
xor
icebp
popa
push
push
add
inc
loopne
add
fimuls
loope
sbb
xchg
jmp
repnz
lret
xor
or
or
xchg
shlb
out
test
push
cmp
xchg
cli
sub
scas
in
push
clc
int
jg
mov
mov
xchg
sbb
adc
cmpsb
call
leave
mov
bound
sbb
cli
push
aam
cmpsl
sub
xchg
pop
mov
dec
leave
negb
insl
cmpsl
or
mov
iret
lahf
adc
ret
ss
mov
imul
test
mov
cld
stos
pop
mov
call
pusha
mov
xchg
xchg
pop
adc
xchg
sbb
inc
fstps
dec
mov
daa
insl
jns
push
fisttpll
loopne
jo
out
inc
movsl
lcall
call
dec
sbb
imul
out
imul
dec
add
scas
js
jne
sub
push
fbstp
pop
scas
cli
clc
les
decl
add
add
and
dec
shrb
ret
jnp
add
inc
and
sbb
or
je
mov
mov
mov
mov
xor
pop
clc
mov
inc
sbb
lret
imul
into
inc
mov
mov
jecxz
inc
sub
dec
out
pop
mov
ds
pop
sbb
or
pop
mov
mov
fcomip
movsb
das
test
push
mov
xor
xchg
loope
mov
imul
into
or
inc
js
jg
push
pop
sub
fadds
jo
cmpsl
out
mov
lea
mov
sub
hlt
pusha
sahf
dec
in
xchg
sub
cmp
push
in
xor
scas
mov
ss
xchg
adc
jecxz
and
mov
dec
imul
orl
enter
jne
xor
jae
mov
sti
flds
mov
shr
mov
movsb
push
enter
push
dec
iret
push
inc
insl
shlb
dec
sbb
loopne
xchg
xchg
movsb
ds
mov
mov
sub
and
cmp
dec
sarl
int
cs
xchg
jns
out
leave
push
dec
push
imul
adc
bound
clc
xor
fs
std
aaa
movsl
sbb
mov
dec
inc
movsb
repz
outsb
mov
ret
popa
dec
dec
xchg
sbbl
outsl
mov
mov
or
dec
scas
je
dec
pop
sarl
fcoml
out
jecxz
clc
mov
push
sub
jno
xchg
insl
out
sub
xor
pop
adc
andb
push
movsb
dec
sub
jp
cmp
sar
ja
pop
sbb
fs
sarl
movsl
js
shll
repnz
jmp
rorl
or
cs
or
add
jg
push
into
int3
repz
inc
and
adc
cmc
add
rcrb
ret
and
fsts
jbe
lret
mov
pushf
mov
mov
and
out
dec
xchg
arpl
popf
mov
inc
pop
jns
cmp
test
mov
js
imul
les
jp
aam
dec
mov
push
insb
filds
xchg
shrl
cmp
sub
sub
pushf
sbb
push
arpl
sbb
lods
xor
or
adc
jae
dec
and
jge
xchg
add
repnz
sub
pop
mov
cmp
dec
repnz
call
call
aas
fnsave
jae,pn
push
shll
pop
stos
mov
pop
out
xchg
out
movsl
mov
mov
adc
jno
mov
xlat
inc
insb
fsubrl
and
out
popf
js
lods
inc
sbb
popl
cmp
mov
mov
fnstcw
push
push
and
imul
cs
push
mov
pop
enter
add
inc
daa
jne
pop
test
aad
repz
rclb
xchg
sahf
ss
push
pop
or
sahf
lds
outsl
out
xchg
or
out
mov
and
pop
mov
std
mov
imulb
insl
or
add
fucomi
pop
movsb
bnd
aam
aaa
pop
mov
xor
jl
daa
out
push
pop
pusha
dec
idiv
inc
out
ret
outsb
add
dec
mov
add
mov
pop
jp
lock
subb
fisttps
lods
xor
sbb
xor
ss
outsl
push
adc
fimull
cs
dec
push
pusha
push
inc
mov
cmp
push
aas
loop,pn
cli
mov
cmp
lock
adc
test
rcll
jnp
mov
leave
mov
mov
dec
dec
xor
cmp
shr
ss
jecxz
hlt
pop
sahf
test
cwtl
cmp
mov
or
mov
mov
lret
inc
add
shl
lods
ss
fildll
test
jbe
iret
pusha
popa
shrl
inc
rolb
lea
xor
sub
mov
stc
repnz
test
aam
mov
lds
subl
jns
push
shrb
ja
scas
mov
jns
iret
pop
aaa
sbb
jecxz
pushl
outsb
lcall
test
pop
inc
dec
cmc
aad
ja
xchg
sbb
adc
dec
dec
fs
int3
testb
jge
push
pop
mov
movsl
mov
and
push
inc
jne
idiv
lods
lahf
pop
add
inc
call
pop
cmp
mov
pop
sarb
lcall
xor
nop
jp
ljmp
clc
fdivs
mov
dec
vpunpcklbw
test
fs
aad
dec
popl
cmpsl
xchg
call
mov
out
stc
jg
imul
push
cmpsl
add
xor
cmp
loope
cmc
aam
call
addr16
push
pushf
in
and
sub
out
jb
jno
and
sub
push
mov
std
and
inc
xchg
xor
sub
and
push
mov
jp
xchg
xchg
std
out
adc
hlt
outsl
jae
mov
fdivrl
dec
test
mov
pop
test
int3
mov
inc
inc
sub
push
jp
popa
int3
jae
add
jl
xchg
fcoml
aaa
dec
ret
dec
ja
sub
ret
ds
sub
cmp
mov
push
aaa
sub
jmp
xchg
xor
fidivl
jl
into
sbb
lret
ret
outsb
sub
stos
push
xchg
jae,pn
push
rcrl
mov
adc
inc
inc
jmp
sub
lds
inc
pop
adc
cwtl
mov
mov
sbb
xorb
xchg
sti
push
les
mov
jmp
cmpsl
xchg
xor
in
outsl
sub
cmp
sub
std
mov
test
xor
dec
mov
push
filds
out
add
sub
ret
fldenv
sub
ficomps
jno
mov
sbb
cld
in
loopne
lcall
sub
sahf
sti
push
and
xor
push
enter
jmp
dec
push
fdivl
js
roll
out
out
arpl
xor
sti
std
fmuls
cltd
cli
dec
jo
cld
test
pushf
mov
popl
mov
inc
fcomps
test
sti
mov
test
les
adc
scas
adc
pop
and
sub
sub
repz
lcall
push
mov
ret
leave
loope
pop
add
add
fisttpl
push
mov
push
imul
je
mov
dec
push
mov
leave
testb
loopne
rolb
jge
add
mov
dec
jo
add
scas
arpl
dec
call
rolb
sbb
push
js
in
sbb
mov
into
or
and
mov
adc
mov
jl
xorl
pop
jnp
stc
popf
pusha
mov
jo
je
add
xchg
push
cmp
and
pop
jb
xor
jmp
fcmovne
pushf
dec
call
pop
cs
add
mov
pop
sbb
xchg
push
mov
sub
fwait
mov
pop
mov
out
inc
pop
test
inc
je
outsb
sbb
fimull
idivb
inc
clc
or
mov
negb
aas
push
jp
jge
out
inc
xorb
pop
je
mov
cli
mov
pop
jbe
dec
add
mov
cli
arpl
cld
jne
mov
cmp
push
repnz
fwait
stos
adc
and
testb
and
sub
daa
jp
fmull
rorl
mov
cwtl
lock
fnsave
mov
sar
adc
std
fdivr
push
loopne
push
jne
test
mov
inc
rcr
test
into
mov
jmp
or
bound
jl
pop
aaa
push
push
sub
icebp
divl
xchg
lods
and
movsb
out
adc
mov
jno
scas
or
and
in
pop
movsb
xchg
mov
inc
scas
call
xchg
sbb
outsl
xor
jmp
loop
shrb
xchg
lds
add
mov
xlat
rcr
mov
pop
rorl
sub
dec
sar
mov
or
add
dec
mov
int
out
loop
push
jg
mov
cld
or
add
inc
adc
outsl
push
cmp
xor
sbb
in
and
mov
data16
ljmp
sar
test
rcr
jmp
mov
mov
mov
popa
and
js
jecxz
jge
jp
jecxz
mov
dec
sbb
movsl
das
clc
or
or
in
adc
inc
sub
xchg
test
cmp
pop
loope
adc
js
imul
mov
stos
mov
sub
push
cmpsl
fimuls
push
or
xor
mov
fs
out
or
pop
mov
popf
xor
mov
movsl
push
int3
mov
hlt
xor
push
and
mov
mov
pop
xor
mov
lock
mov
incb
adc
mov
xchg
adc
test
mov
pop
mov
lret
pop
or
es
mov
push
aam
and
or
xor
xor
mov
cmc
in
fwait
repz
in
mov
add
arpl
sub
lahf
mov
xchg
mov
movsb
jb
xor
cmpsb
xchg
push
push
jl
sbb
hlt
dec
sub
sub
inc
add
cmp
daa
adc
push
or
idivl
jecxz
enter
mov
or
mov
adc
enter
subb
jp
pop
movsb
clc
xchg
lods
push
pop
call
or
fisttps
xor
xor
loope
in
mov
pop
sbb
xchg
mov
popf
dec
push
push
adc
adc
mov
pop
mov
sbb
mov
addb
jae
add
push
imul
or
push
sbb
ss
and
hlt
test
fs
or
pop
mov
cmpsb
cmp
mov
jle
rclb
push
push
repnz
arpl
jl
int3
dec
add
inc
gs
xor
sbb
jl
stos
pop
mov
jnp
xchg
aam
int3
jmp
outsb
in
int3
std
data16
sbb
ret
loope
inc
pusha
or
pop
scas
in
scas
cld
loop
js
adc
xor
sbb
push
dec
xor
test
and
ja
stc
gs
test
xlat
and
imul
xlat
cmp
xchg
int3
pop
sahf
mov
imul
push
inc
inc
xchg
scas
clc
movsb
loop
call
mov
push
cwtl
add
push
pop
inc
push
bound
push
jne
mov
mov
cld
jle
sbb
repnz
xchg
xchg
pop
sbb
scas
arpl
pop
lret
lea
push
in
mov
cmc
inc
adc
and
lds
addr16
les
or
fsts
jecxz
lret
movsl
std
push
mov
dec
add
out
lods
gs
popf
ljmp
shlb
ss
daa
dec
ret
sbb
mov
bound
jl
jae
push
jecxz
loopne
mov
sbb
push
repz
sbb
jns
xchg
push
pop
xor
add
ret
lcall
insb
mov
or
iret
mov
cmp
jne
and
push
mov
repnz
pushf
jno
notl
inc
les
dec
jbe
ja
fmuls
pop
sub
push
in
das
mov
push
sbb
and
push
jecxz
push
mov
lahf
adcb
mov
mov
sub
and
daa
push
inc
sbb
repnz
insb
mov
xlat
mov
xchg
cmp
ja
push
sbb
sbb
ret
jp
mov
cld
sbb
loopne
es
xchg
jle
cmpsl
fcompl
pop
mov
or
jl
push
rorb
lret
loope
xor
sti
mov
outsb
inc
xor
and
in
imul
dec
inc
lcall
jg
push
pushf
testb
or
out
movsl
test
and
xchg
and
ret
xchg
mov
inc
jno
fstpt
mov
push
sahf
inc
int3
jb
add
sbb
pusha
jge
cmp
addr16
mov
leave
xor
mov
loopne
inc
cld
sub
xor
cmpsb
cmp
xchg
loope
and
imul
sbb
jns
push
adc
test
lret
movsb
mov
call
jo
mov
leave
mov
push
pop
repz
fsubrl
pusha
adc
mov
xchg
adc
dec
stos
jnp
arpl
cmp
scas
fadd
js
xor
pop
inc
lea
arpl
inc
fstl
cld
jecxz
pop
cld
lcall
pop
mov
cmp
jle
dec
push
push
or
push
jns
cmp
fstps
and
push
bound
pop
sbb
mov
jb
or
pop
xchg
dec
xor
std
mov
stos
cmp
ja
ret
jecxz
mov
sti
or
notl
push
mov
mov
push
adc
out
mov
jbe
arpl
and
sbb
mull
add
pop
cmc
out
mov
xor
mov
cmp
scas
adc
out
in
push
pop
sahf
aad
and
pop
cmp
and
sub
dec
hlt
pusha
scas
fwait
xor
out
add
sub
loop
js
jp
lock
pop
xor
shlb
and
push
pop
pop
sbb
subb
in
jg
mov
mov
push
shll
cmp
test
jecxz
out
sub
or
loopne
pop
in
adc
and
popf
adc
dec
push
mov
popf
aas
sbb
sub
and
rcl
mov
movsb
cmp
repz
test
pop
roll
iret
sub
xlat
lods
jmp
std
stos
sbb
movsl
jo
push
pop
iret
pop
lret
aaa
sub
jae
arpl
pop
mov
jb
xchg
gs
jns
pop
mov
and
xlat
gs
inc
outsb
data16
mov
lret
ficompl
inc
inc
push
cmp
hlt
sub
sbb
inc
pop
or
lret
popf
mov
popf
loop
int
mov
mov
xchg
pop
xor
cmp
inc
cmpsl
ja
add
add
mov
adc
movsb
and
test
jne
fistpll
aam
xor
mov
cmc
in
lcall
mov
lods
jle
inc
xchg
test
pop
cmp
adc
int3
in
icebp
out
sub
js
loop
shll
dec
stos
xor
mov
lods
xchg
or
movsl
xchg
or
and
xor
outsb
cltd
movsl
sbb
sbb
pop
or
add
jbe
xchg
ret
mov
shll
mov
psadbw
adc
pop
push
imul
mov
mov
xchg
out
mov
imull
inc
in
movsl
cmp
dec
or
jns
fnstenv
aam
or
lret
js
jae
loopne
adc
xchg
fwait
rclb
lret
jno
or
add
divb
push
scas
push
fildl
or
fdivrl
jne
mov
add
sub
or
inc
lods
dec
not
xchg
in
xchg
rcll
sub
cmp
aad
add
test
push
rclb
xor
sbb
push
daa
xchg
mov
out
push
sbb
std
jns
pop
shr
es
loope
outsl
fwait
push
and
mov
push
adcl
lds
insl
mov
iret
subl
rclb
mov
sbb
jo
lods
jecxz
pusha
fists
jle
nop
lock
sbb
icebp
pop
mov
inc
arpl
pop
in
mov
cmpsl
mov
inc
xor
cmp
sbb
sti
mov
inc
xchg
loop
pop
mov
mov
dec
xchg
sahf
mov
cwtl
hlt
loopne
ljmp
insb
and
stos
add
sbb
push
outsb
cs
jne
jle
push
cld
sti
cs
mov
pop
out
subl
push
outsb
mov
ficoms
cwtl
sub
rorl
and
sbbb
mov
ja
pusha
mov
xor
sbb
cmc
repnz
and
in
repnz
outsb
fisubrl
lea
scas
mov
sub
repnz
stos
outsb
jb
xor
xor
cltd
popa
and
mulb
inc
popf
ret
pop
movsb
outsb
inc
push
cmc
frstor
stc
mov
sbb
xor
roll
imul
mov
inc
inc
test
mov
add
fiaddl
mov
mov
mov
rorb
dec
mov
fistps
mov
adc
adc
gs
or
adc
sub
xlat
in
or
das
or
test
fisubs
ja
iret
mov
cs
mov
lock
push
xchg
pop
bound
test
jae
pop
sbb
jp
pop
sub
rcll
sbb
pop
fisubs
test
adc
mov
cmp
cmp
push
sub
shrb
in
das
inc
sub
addr16
sub
imul
mov
push
int3
lret
fists
fidivrl
test
jle
mov
sbb
sbb
insl
jnp
insb
pop
pop
mov
jp
cmp
inc
cmpsl
pop
adc
mov
fistpl
es
mov
pop
inc
je
xor
mov
push
out
add
mov
and
cmp
pop
and
mov
mov
sahf
mov
sbb
jmp
fs
das
or
cltd
stc
ficompl
fsubp
xchg
cmpsb
enter
jmp
fs
push
test
loopne
mov
stos
jnp
sti
xor
testb
fs
pop
mov
dec
sbb
lcall
mov
movsb
lods
push
lods
sbb
mov
mov
adc
sbb
lahf
sahf
rol
dec
and
fs
loope
cwtl
call
jne
call
cwtl
ja
dec
jne
mov
ret
pop
outsb
pop
push
sbb
cmp
push
leave
mov
mov
adcl
mov
inc
int3
aad
gs
sub
cmc
sub
cmpsl
mov
scas
dec
rorb
push
push
nop
shlb
mov
push
icebp
mov
outsl
sub
cmp
jecxz
stos
stc
jg
mov
jp
into
jbe
test
or
arpl
clc
sbb
stos
sub
clc
cli
mov
rorl
dec
inc
mov
js
fsubs
sub
jp
xchg
mov
mov
icebp
loopne
ljmp
mov
fisttpl
mov
sbb
in
nop
fisttps
pop
add
xchg
mov
subl
cmpsb
pusha
aad
bound
push
push
rorl
mov
daa
test
push
fbstp
jp
pop
sub
dec
adc
std
lds
jmp
pop
inc
and
sbb
test
addr16
push
sbb
push
push
imul
fisubrl
aaa
je
lods
pop
dec
adc
dec
push
fildll
mov
addb
addl
xchg
out
and
loop
aam
jle
push
mov
or
cmp
add
lods
inc
jne
fwait
popf
test
mov
mov
mov
pop
sarb
fs
push
fimull
mov
pop
fidivl
jns
mov
xchg
lcall
popf
cmp
xchg
test
xor
cmpsb
lock
cmp
jecxz
inc
inc
add
into
test
test
scas
lock
fs
pop
xor
push
mov
xchg
dec
orl
dec
test
imul
cmp
in
mov
push
les
inc
xor
lds
out
data16
mov
loope
out
popf
xor
pop
shll
jecxz
pop
mov
faddl
mov
js
mov
aas
pop
dec
mov
jp
imul
lcall
xchg
ljmp
imul
cmpsb
pop
adc
das
lcall
dec
fbld
aas
js
pop
ret
std
testl
sub
lods
pop
add
addr16
arpl
xchg
add
call
sbb
xchg
mov
in
lds
mov
shlb
cli
sub
pop
adcl
xchg
dec
in
push
xor
fwait
call
out
cmpsb
push
out
sub
outsl
in
mov
sbb
mov
sub
pusha
into
add
jle
repz
mov
out
rcr
cmpsb
gs
repnz
mov
loopne
insb
sub
cs
hlt
loop
andl
in
aas
xor
jl
scas
jle
dec
push
loope
loopne
jne
add
xchg
sub
icebp
das
cmc
mov
mov
out
inc
sbb
push
or
adc
push
filds
dec
les
or
testb
fs
popf
jmp
push
cmpb
cli
cld
out
andl
leave
ficomps
nop
mov
notl
loop
test
decl
dec
ficoml
pushf
loope
lret
mov
popa
add
nop
mov
sbb
and
or
xchg
jbe
in
loop
mov
gs
mulb
rcll
iret
cld
outsb
fptan
ret
roll
xchg
sub
outsb
or
xchg
test
sbb
jnp
fnstcw
push
pop
ljmp
xor
in
sub
xchg
xchg
test
adc
imul
mov
mov
fnsave
xor
nop
xor
dec
lock
pop
idivb
in
xor
mov
mov
int3
shrl
cmpsb
jno
sub
scas
loope
mov
cmc
test
adc
stos
or
cwtl
xlat
aaa
or
and
aad
push
push
and
jb
lock
mov
lods
push
pusha
fnstenv
aad
jns
insl
push
or
addr16
es
push
mov
dec
sub
inc
in
xlat
sbb
int
add
mov
xchg
ret
xchg
movsl
mov
movsl
in
jmp
dec
mov
mov
mov
gs
sti
jnp
imul
call
std
xor
dec
out
insb
push
jno
sub
mov
scas
xor
pop
out
repz
shrl
sbb
or
fwait
jns
or
shll
xlat
je
icebp
mov
shll
xchg
cmp
loope
rclb
cmp
add
popf
test
xchg
mov
mov
lcall
rcr
jne
nop
incl
shrl
cmp
cmp
cmp
mov
xor
sbb
or
xchg
jp
daa
mov
jo
cli
mov
mov
jns
sub
fwait
dec
aas
ss
sub
jle
scas
or
dec
add
push
test
popa
cmpsb
test
cmp
adc
mov
inc
cld
sbb
xchg
adcl
das
daa
or
sti
pop
adcb
lods
aam
je
sti
sbb
push
xor
out
in
inc
repz
mov
fdivrp
mov
daa
rcll
sub
ds
aam
mov
insb
mov
push
mov
stos
subl
pop
sarl
adc
in
inc
xor
cld
loopne
adc
imul
int
imul
in
mov
outsb
push
mov
or
mov
dec
jne
icebp
int
das
xlat
adc
mul
lcall
out
or
aad
pop
xchg
cli
fdiv
fsubl
jle
cs
jo
xor
imul
jbe
mov
xchg
mov
or
insb
xor
fmul
or
testl
lret
mov
enter
loopne
mov
gs
push
or
pop
jmp
fdivrl
mov
jle
nop
mov
and
jp
lds
dec
lods
dec
mov
sub
inc
sbb
and
mov
pop
in
jns
mov
fs
mov
and
das
cmp
in
mov
pusha
jecxz
sbb
test
stos
es
inc
dec
xchg
shlb
cmp
enter
jecxz
faddl
fisttpll
lds
jo
std
test
outsl
sarb
test
adc
into
imul
cli
push
pop
outsl
bnd
xchg
or
int
sbb
sub
bound
lods
or
sub
pop
dec
jl
out
jno
test
push
mov
mov
or
cwtl
xor
add
or
fldl
mov
pop
pushf
cmp
xor
lds
in
jl
ficoms
out
add
xchg
es
std
sbb
js
inc
mov
imul
loopne
jg
jo
pop
lods
leave
jno
cmpsb
mov
cmc
cmpsb
jl
dec
fwait
out
add
mov
mov
cmp
dec
insl
pushf
add
daa
sahf
js
fcoml
bnd
popf
pop
ljmp
imul
sub
xor
bndstx
ret
sub
inc
jns
xchg
aaa
jg
cmpsl
cmp
pop
addr16
neg
mov
jnp
adc
loope
pop
loopne
test
ss
stc
mov
pop
mov
std
negl
inc
sbb
loop
ljmp
sub
inc
lods
push
je
aas
or
cmp
aam
fstcw
fldl
xchg
dec
jb
push
mov
push
pop
inc
testl
add
xchg
pop
std
xor
lcall
mov
fistps
adc
mov
xor
pop
daa
mov
out
sbb
movsb
pop
or
mov
outsb
clc
lea
xor
js
push
dec
mov
jnp
movsb
mov
js
addr16
dec
mov
inc
or
adc
jo,pt
std
push
insl
popf
xchg
adc
push
jmp
adc
push
sub
aad
inc
bound
sub
jno
jo
call
in
fsts
or
inc
xlat
mov
sbb
loop
mov
shll
mov
push
scas
aam
loope
cmp
shll
cwtl
bound
pop
mov
cli
arpl
adc
std
mov
add
outsb
mov
into
ret
pop
lods
cld
inc
mov
cld
lds
lods
sbb
stc
xchg
mull
decb
mov
jbe
inc
dec
test
xchg
les
in
test
stos
pop
adc
sub
or
mov
dec
out
lods
lahf
scas
in
nop
sub
in
mov
les
int3
rcll
mov
push
adc
fdivl
clc
sbb
sbb
jne
cwtl
out
mov
xchg
sbb
or
xchg
aam
pop
movsl
addb
data16
lcall
sub
sub
sbb
cs
aaa
dec
int
xchg
cmpsl
dec
mov
jbe
sahf
in
jnp
sbb
nop
push
mov
xor
icebp
aam
xor
movsb
or
mov
mov
std
jae
sbb
push
jmp
nop
push
cmp
jbe,pn
icebp
push
sub
out
or
xchg
fcomip
into
ret
ljmp
xor
mov
inc
xor
adc
adc
in
les
dec
negl
popl
inc
iret
bound
insb
add
add
repnz
mov
clts
mov
mov
pusha
das
ljmp
xor
cwtl
adc
stc
mov
loop
jmp
and
aaa
add
loope
cltd
int3
mov
adc
mov
add
notb
fwait
movsb
fldl
ds
mov
and
ret
out
les
cwtl
pop
xchg
ret
stos
lret
fsubp
fs
jge
call
loopne
mov
or
gs
cwtd
sbb
fs
xchg
imul
adc
pop
insl
test
mov
fs
ds
mov
jns
cmpsl
push
adc
in
inc
pop
dec
sub
and
push
pop
mov
adc
and
add
ja
adc
gs
and
ret
popf
out
pop
and
sbb
sub
ret
xchg
iret
sub
test
cmp
push
xchg
push
pop
mov
aaa
or
rorl
inc
adc
mov
inc
dec
rcll
stos
or
bound
loop
mov
inc
leave
push
push
jl
cmc
pop
out
add
inc
cmpl
outsb
icebp
test
inc
jb
cmpb
cltd
int
in
cmp
mov
sbb
pusha
test
xor
xor
std
push
add
sub
dec
add
add
bound
push
jl
or
inc
dec
out
js
movsb
xor
lds
mov
loope
movsl
popf
push
jno
outsb
pop
jl
mov
fsubrl
ds
shrl
inc
jbe
mov
adc
xor
dec
nop
xchg
cli
add
outsl
or
push
pop
pop
ret
and
les
mov
inc
or
sti
adc
jmp
pop
or
mov
jp
fsubs
sbb
adc
lods
pop
test
add
fnstenv
sbb
pmuludq
call
sbb
gs
sbb
mov
xchg
jle
lret
pop
cmp
or
push
mov
pusha
pop
sub
cmp
dec
or
ds
in
sub
fwait
xor
aas
testb
lods
movsl
stos
push
addl
or
scas
lret
sub
fs
sar
or
ds
push
cmp
and
or
mov
lahf
cwtl
or
inc
pop
adcl
aad
cmp
mov
xchg
xor
lahf
add
cmc
icebp
jl
leave
arpl
push
cmp
jbe
outsl
test
fstpt
adc
lea
dec
in
jmp
inc
push
sub
sbb
notl
or
cmpsl
xchg
call
dec
push
clc
xor
pop
dec
jp
inc
xchg
add
stos
out
shrb
inc
push
adcl
out
mov
mov
lock
les
cs
jg
adc
push
xlat
mov
cmp
xchg
xor
add
jge
call
mov
adc
rol
mov
add
arpl
cld
jno
sarl
lods
jge
cmp
sub
jne
pop
decb
mov
cmp
fsubp
and
fldenv
jne
xor
loop
loopne
dec
roll
jb
adcl
adc
les
repz
out
or
push
adc
sbb
mov
and
jno
adc
fsts
aad
sti
push
sarb
imul
enter
xlat
xor
pusha
mov
pop
jnp
push
mov
jo
or
nop
inc
fdivrs
out
mov
test
fdivr
inc
sub
pop
jo
jns
data16
mulb
or
scas
inc
call
push
fs
xor
pop
sub
ror
xchg
mov
jmp
cmp
xchg
scas
push
dec
cmp
push
rcll
inc
leave
cmpsb
lods
push
test
push
icebp
push
bnd
clc
xlat
jb
les
xor
cmp
xorl
lret
xor
mov
int
movsb
aaa
test
loop
jmp
mov
sub
or
mov
or
lret
cwtl
fistps
dec
cs
adc
pushf
sbb
fstpt
mov
dec
adc
cli
test
cmp
adc
fsubl
push
clc
pushf
pop
aaa
add
push
pop
adc
jmp
xor
ror
inc
and
adc
xor
pop
mov
push
add
inc
in
mov
xor
sbbb
in
inc
push
fcoms
mov
dec
popa
scas
aad
shl
mov
jmp
jmp
cmc
fidivrl
or
in
lock
cltd
mov
jne
add
xor
in
and
pop
popf
popf
or
hlt
mov
cmp
adc
dec
dec
repnz
fstpl
dec
jnp
or
mov
call
dec
div
adc
push
cmp
jae
mov
or
lcall
xor
cmpsl
pop
mov
mov
xor
lods
pusha
loopne
notb
jp
fistps
sub
in
mov
sub
aam
xor
jne
js
stos
fildll
aad
xchg
jbe
lea
std
cmp
ds
sbb
sbb
jno
or
lock
icebp
add
fs
mov
or
cmp
dec
jae
test
push
cmp
mov
cmp
jb
mov
icebp
sub
sub
fs
cmpsb
mov
nop
mov
ja
xchg
jae
stos
sbb
jmp
popf
dec
daa
cmp
ror
scas
sahf
xchg
fistpl
lahf
into
stc
icebp
xchg
push
lret
mov
out
sub
push
adc
pop
es
clc
sbb
mov
jnp
ror
jns
adcb
ljmp
insb
hlt
adc
mov
lahf
int3
je
hlt
fisttpl
sbb
mov
cltd
cmpsl
sub
clc
cmp
loopne
cwtl
hlt
mov
imul
dec
cmp
je
movsl
fadds
jle
data16
push
outsl
or
pop
push
mov
inc
push
repz
scas
mul
stos
push
sti
or
jle
dec
mov
or
insb
popf
ret
nop
cmpb
std
fisubrl
lods
add
fmull
aas
adc
jmp
mov
xor
mov
pop
lods
lea
int3
add
pop
adc
sub
shr
mov
mov
inc
fisttpll
mov
test
jns
xor
pop
xor
or
jno
xor
adc
sub
add
cmp
dec
and
sahf
call
loope
sbb
jecxz
or
icebp
addb
dec
pop
ficoms
xorb
gs
cmp
jne
cs
add
aas
mov
and
cld
sbbl
xchg
or
arpl
sub
gs
add
sub
and
int3
jl
fimull
lret
mov
pop
xor
jns
or
mov
outsb
lods
mov
and
mov
add
loop
imul
ds
push
mov
inc
gs
adc
sar
inc
stos
rcrb
mov
shlb
push
cmp
gs
add
jecxz
rcll
cmpl
stos
std
inc
fildll
mov
dec
imul
std
ret
fstp
sti
addl
lds
loop
and
aas
std
je
adc
mov
test
jecxz
xchg
aas
mov
adc
dec
cwtl
ja
sub
xor
and
cmp
pop
adcl
xchg
and
lods
xchg
loope
dec
mov
lret
mov
jecxz
ret
pushf
daa
mov
je
xor
bnd
je
insl
mov
sub
fstps
add
std
in
mov
clc
call
shlb
hlt
xor
and
in
pcmpeqd
aam
inc
loope
mov
std
arpl
inc
aad
add
push
aaa
enter
movsl
xlat
xchg
pop
or
je
imulb
stos
lcall
lods
mov
fs
cmpsl
pop
imul
push
aad
pop
fs
adc
xchg
ljmp
sub
cmp
mov
inc
pusha
ficompl
add
mov
adc
das
stos
dec
loop
mov
or
mov
pop
mov
pop
add
mov
ficoms
loope
loop
sbb
pop
push
mov
or
push
and
lea
mov
adc
and
mov
sub
cmp
cmp
jge
push
aad
cmpsl
js
dec
daa
cwtl
adc
lret
imul
cmp
and
push
xor
fld
xchg
push
dec
ficompl
ljmp
daa
mov
in
insl
js
mov
jge
out
dec
adc
fwait
jl
dec
sbb
fnstcw
sub
lret
inc
jbe
in
jecxz
inc
xchg
pmaxsw
fstpl
cld
mov
mov
lcall
jmp
inc
inc
mov
pushf
adc
add
ret
call
out
adc
rol
addr16
or
pushf
ret
push
dec
mov
popa
jmp
lret
mov
loopne
jge
ret
xchg
lahf
fildll
inc
repz
or
jo
test
xchg
mov
inc
jle
nop
fs
pop
lods
push
dec
push
sahf
mov
sti
jmp
jae
clc
pop
and
ja
outsl
fldcw
sbb
xor
dec
jbe
test
pop
lcall
push
jns
push
adc
add
cld
push
aaa
pop
xor
xchg
test
das
les
pop
shll
pop
rcrb
or
mov
add
pop
fcoms
cmpsl
lods
pop
sub
cs
xor
pop
addr16
mov
lds
sub
in
cmp
push
inc
pusha
cmp
mov
hlt
mov
call
mov
xchg
int
dec
push
mov
push
nop
mov
pop
lahf
mov
das
add
stos
xor
dec
out
push
daa
or
pop
divl
xchg
int3
leave
sub
mov
cmp
sub
and
andb
xor
inc
jecxz
repz
movsl
fbstp
insb
cs
cvttps2pi
loope
mov
popf
arpl
mov
jg
imull
sbb
dec
fisubrl
mov
scas
mov
jbe
jecxz
lods
jmp
fildl
aam
and
out
and
ljmp
test
inc
das
nop
in
jg
enter
icebp
add
jecxz
cwtl
mov
cld
xor
les
push
sbb
ljmp
mov
cmp
leave
cmpsl
inc
out
out
popf
leave
cmp
clc
sbb
cmc
popa
mov
xchg
xor
jle
gs
rcrl
or
test
or
enter
nop
lret
cmp
jge
dec
mov
cmc
xor
cmp
mov
dec
xor
insl
jl
sbb
sahf
xchg
stos
jecxz
int
enter
hlt
mov
test
and
mov
pop
rcl
jle
inc
adc
jge
and
pop
inc
cs
sub
stos
imul
dec
out
popf
jle
loopne
mov
or
movsb
mov
sarl
fadds
lods
int3
inc
lds
mov
jle
sbb
mov
test
out
fadds
mov
shlb
add
adc
mov
mov
xor
pusha
mov
pop
mov
xchg
push
scas
loop
push
dec
xor
inc
mov
and
cmp
in
inc
cmp
cmpsb
adc
cs
pop
dec
out
jp
ret
pop
mov
mov
jb
das
out
dec
jo
cmpsl
mov
or
outsl
mov
lcall
jnp
cmp
fucom
lahf
mov
iret
outsl
repz
popl
mov
add
lods
in
roll
ret
and
sbb
lahf
inc
ja
add
mov
sbb
dec
xchg
mov
xlat
fcomp
inc
dec
sbb
sbb
push
leave
addl
inc
into
jb
pop
aas
lods
js
outsb
or
into
push
mov
and
xchg
and
fists
xor
mov
sbb
scas
sbb
sub
es
add
out
jg
dec
mov
je
stos
add
sub
cmp
out
and
fsubp
cs
xchg
cmp
addr16
mov
push
cltd
repnz
out
pusha
cmp
xorb
add
sub
loop
sbb
fstpl
add
icebp
adc
pop
imul
negb
int
mov
cli
push
jbe
sub
bnd
popa
leave
xchg
mov
cld
sbb
mov
or
in
in
rorl
push
or
test
pop
fs
out
xchg
xchg
push
cmpsl
lods
in
push
jnp
mov
cmpsb
or
nop
in
jnp
add
pop
inc
inc
jl
addr16
jg
out
mov
pop
in
xor
cmp
mov
lods
pushf
push
jl
sub
adc
fs
jge
insb
pop
fstpl
and
cmp
mov
pushf
dec
jle
mov
les
daa
test
sub
push
xchg
in
shlb
shrl
cmpsb
inc
lahf
out
fisubs
jbe
cmp
test
pop
mov
push
arpl
fildl
sti
adc
mov
loop
mov
or
cmp
pop
mov
movsl
fdivs
arpl
dec
inc
dec
mov
pusha
push
mov
lods
lea
jp
loope
stc
xor
insl
dec
into
adc
lods
xor
imul
mov
mov
cmp
test
adc
mov
mov
xchg
add
sub
insl
adc
daa
aam
pop
insb
loope
in
adc
das
movsb
lret
xchg
outsb
mov
aas
xor
out
or
mov
mov
xchg
ficompl
insb
push
pushf
mov
mov
shlb
add
scas
pushl
int
or
sub
js
mov
cmpsl
icebp
movsb
mov
sbb
loope
clc
int
neg
mov
xor
test
aas
push
jmp
pushf
dec
cmp
sbb
out
repnz
setne
addr16
ret
add
mov
sti
cs
lret
bound
xor
sbbl
andl
add
xchg
adc
movsb
lds
je
mov
push
sbb
sub
lods
pusha
mov
sub
adc
std
sub
xorl
test
sub
sbbl
stos
sub
lahf
dec
cld
in
sahf
pusha
arpl
gs
jo
icebp
push
cmp
movsl
in
mov
xchg
cmp
cmp
inc
sti
and
imul
fldcw
and
jae
stos
and
or
ret
hlt
outsl
ret
jg
inc
inc
int
pop
subb
mulb
hlt
mov
repnz
outsb
add
adc
or
xor
mov
cmc
jbe
push
and
idiv
icebp
xchg
pop
push
mov
in
or
in
jae
cwtl
pop
mov
adc
push
int3
cmpsb
sbb
jo
dec
pusha
cwtl
sti
cwtl
xor
pop
shrl
outsb
sub
jns
cwtl
repz
rclb
inc
and
and
inc
test
xor
mov
aas
test
jns
or
out
out
mov
sbbl
js
icebp
inc
pop
in
repnz
xor
in
and
test
aas
sbb
add
dec
mov
in
jb
mov
inc
shl
sub
cmpsl
xchg
pop
repz
push
aam
shr
mov
add
test
jl
pop
test
pop
push
sbb
adc
insl
lret
inc
jo
js
sbb
cmpsb
inc
fcoms
jns
cmpsb
pop
jmp
or
lods
mov
jno
dec
sbb
xchg
xchg
dec
push
jg
cltd
mov
insb
mov
fsubrs
movl
lods
mov
aas
and
repnz
mov
mov
and
or
fbld
dec
imul
push
jp
pop
call
xchg
dec
mov
test
cmp
xor
dec
mov
test
scas
or
clc
mov
mov
bound
xchg
xchg
mov
icebp
add
loopne
int3
or
cmpsl
mov
cmc
adc
in
xor
test
push
int
mov
adc
sbb
sub
rclb
push
aaa
xor
repz
pop
jmp
or
cmp
inc
cmpsl
mov
addr16
push
pop
rclb
jg
push
lahf
fs
or
mov
mov
into
mov
addr16
jp
pushf
in
add
mov
inc
mov
or
xor
jmp
in
xor
cltd
sahf
mov
or
rclb
xchg
and
aaa
jno
ret
pop
mov
xchg
scas
jmp
das
or
cwtl
lods
std
hlt
push
mov
mov
in
or
or
hlt
fsub
test
ss
cmpb
loopne
adc
or
fldcw
or
fisttpl
lret
and
xchg
in
jp
fiadds
mov
gs
adc
xchg
lds
sbb
popf
and
dec
int3
inc
mov
ret
mov
mov
dec
sub
adc
lods
push
push
in
movsb
rolb
cmc
cmp
pusha
dec
sub
fxch
addb
fdivp
ljmp
cwtl
sub
xor
mov
mov
das
aaa
xlat
sbb
push
test
inc
jno
in
adcb
js
mov
js
fsub
push
arpl
cmc
add
mov
fisubs
cmp
push
dec
out
push
jge
movsl
dec
lods
test
in
cmpsb
mov
dec
inc
cltd
pop
inc
jl
inc
and
dec
out
add
dec
mov
push
negb
stos
lods
inc
loop
bound
pop
negl
fdivr
mov
mov
jmp
or
loopne
sbb
fwait
loop
loopne
dec
mov
jae
push
lret
push
mov
addr16
call
loopne
jo
mov
movhlps
icebp
dec
loop
test
mov
push
mov
cwtl
aad
fcmovne
stos
sti
jmp
mov
sbb
mov
fnsave
cmp
xchg
and
xor
add
cs
mov
mov
nop
popf
stos
and
or
ljmp
cli
jnp
xor
cmp
iret
sub
lret
dec
scas
cmp
fsubrl
mov
lds
bound
add
jge
inc
lds
pop
cmp
xchg
lds
iret
daa
testb
sbb
jae
pop
idivb
cmp
sub
decb
add
arpl
bound
out
lods
inc
sarb
arpl
repz
idivl
adc
sub
sub
dec
inc
jb
subb
mov
bound
push
mov
push
inc
mov
fwait
addr16
cmp
mov
leave
push
or
xor
arpl
mov
enter
xchg
jo
mov
push
dec
pop
lret
jge
sub
or
jg
mov
sahf
pop
cmp
jg
jp
xchg
xrelease
pop
jbe
sahf
cmp
and
sahf
popf
and
mov
dec
mov
aas
xchg
or
mov
mov
stos
cmpsb
fs
mov
pop
ret
inc
pop
je
cld
xchg
shrl
jle
push
rcr
mov
mov
lcallw
aaa
scas
push
loope
and
lret
sub
fstps
testl
sub
jbe
idivb
sub
leave
push
xor
test
jo
xchg
fcmovb
inc
out
inc
xor
loop
mov
es
dec
lret
add
lods
ret
sbb
cld
xchg
mov
ret
lahf
add
in
inc
inc
ljmp
arpl
cmp
repz
mov
jmp
js
sbb
pop
fimuls
outsl
es
mov
fs
push
inc
inc
stos
cwtl
or
push
lods
mov
xor
lcall
jmp
jb
popf
dec
mov
push
icebp
jge
aad
mov
jb
add
and
add
and
aas
aad
popf
addr16
iret
insb
cmp
adc
call
imul
dec
jo
jge
xchg
lods
inc
mov
xor
rcr
push
fcmovnu
sar
pop
inc
dec
inc
ljmp
add
mov
inc
lret
sbb
sbb
pop
cli
adc
mov
fisubrs
stos
sti
pop
xchg
fisttpll
sub
cmp
and
mov
test
test
fcomp
xchg
dec
sbb
out
jno
mov
jo
adc
cld
pop
xchg
stos
pop
adc
rclb
stos
stos
xlat
out
and
rorb
into
push
movsb
mov
jl
negb
negb
or
icebp
jg
mov
cmp
mov
xlat
jle
cmp
jl
dec
fdivl
xchg
lcall
or
sub
test
jge
cmpsl
mov
cmpsb
sbb
int3
pop
cmc
icebp
jge
hlt
mov
lock
jge
sub
xchg
dec
push
fwait
pop
xor
ds
frstor
inc
jg
pop
xchg
xchg
imul
insb
adc
fbld
xchg
lds
pop
jg
mov
jp
cwtl
dec
sub
ja
push
pusha
pop
sub
int
cmp
iret
cld
insb
dec
inc
fistl
repz
xor
mov
aas
cmp
adc
mov
jmp
test
fisttps
add
jno
adc
call
cmp
jae
cltd
adc
jmp
cmp
add
repnz
xchg
mov
int3
imul
fdivrl
jle
pop
mov
lret
mov
adc
scas
mov
push
std
xchg
cmp
lcall
or
fcompl
in
cmp
lds
xchg
in
cmp
ficoml
mov
ljmp
mov
inc
orl
push
sub
and
mov
add
enter
push
out
aad
sti
rcr
cmc
jmp
test
nop
std
xor
pop
add
pop
jmp
xorb
push
push
sbb
xchg
movsl
inc
roll
jnp
pop
popa
lret
sub
jnp,pt
pop
and
mov
movsl
cwtl
inc
test
jp
sub
outsl
pop
cmc
je
inc
or
xchg
aad
xchg
cmp
fisubl
xchg
mov
xchg
and
les
ficoml
test
sbb
sarb
adc
and
fidivl
out
pop
jno
scas
pop
dec
ja
push
ljmp
in
pop
add
push
or
cld
cmp
pop
iretw
ret
sub
shlb
sbb
lahf
fsubrs
mov
nop
jp
mov
aaa
js
shl
or
icebp
jmp
test
cld
ja
fwait
and
xchg
loope
sahf
xchg
and
leave
fsts
pusha
insl
cmp
movsl
popa
stos
cwtl
mov
stos
dec
rdtsc
call
aas
mov
cld
xchg
mov
adc
out
add
loop
in
test
push
iret
mov
pop
xchg
shl
inc
and
outsl
orl
test
sti
loop
aad
dec
sbb
mov
inc
xchg
sbb
int3
add
setb
cwtl
add
jecxz
fs
inc
pushl
cmovnp
dec
xchg
stc
mov
pop
dec
fstpt
arpl
les
xor
fwait
lahf
sbb
lcall
ficoms
xor
pop
insl
pop
pop
inc
add
testb
add
push
scas
ds
test
dec
lret
pop
stc
add
shll
lods
std
ss
inc
add
fisttpll
inc
jae
scas
test
bnd
mov
push
mov
aas
into
lea
shll
pop
push
std
arpl
outsl
xchg
push
jmp
aaa
call
sbb
adc
ds
dec
es
push
push
cmp
cld
sahf
mov
adcb
aaa
pop
sbb
cmp
pop
test
mov
mov
and
xchg
sahf
inc
sub
jbe
cs
ljmp
push
inc
leave
movsl
push
or
stc
cli
outsb
xor
push
fnstcw
insl
and
das
les
insb
shlb
addr16
mov
jns
inc
aam
or
ja
add
and
push
mov
cli
cmpb
mov
jae
in
js
movsl
lcall
sti
in
dec
push
sub
scas
and
cltd
cmpl
stc
imul
dec
add
pop
ss
dec
out
mov
jbe
adc
mov
push
sbb
xchg
pushf
out
stos
add
jns
popa
pushf
cmpsl
stos
lret
xchg
js
xor
xchg
repnz
addr16
es
movsl
push
or
shll
mov
inc
pushf
xchg
sbb
sbb
mov
aaa
add
sar
cli
adc
dec
pop
icebp
add
xor
pop
orl
jns
xchg
pop
pushf
mov
xor
hlt
dec
add
push
lock
aas
mov
sbb
inc
sbb
cmp
movsb
cmp
jecxz
add
shrl
mov
ret
nop
mov
pusha
inc
pop
jne
dec
idivb
fcoml
jecxz
sub
adcb
xlat
push
lock
negl
pop
dec
loopne
cmc
and
fldenv
cmp
xor
imul
stc
into
scas
daa
aas
std
dec
adc
arpl
test
mov
pop
fcompl
out
dec
mov
cmp
cmp
sbb
movsb
test
rorl
fidivrl
in
xor
rol
clc
mov
fldenv
fincstp
mov
cmp
mov
push
fadds
and
sahf
xor
xchg
sbb
jae
int3
or
loop
insb
movsb
and
mov
orb
test
lret
and
rolb
add
and
xchg
cmpsb
leave
call
out
cmp
mov
mov
push
dec
aam
mov
mov
fidivrl
xchg
and
popa
dec
fiaddl
ss
pop
mov
cmp
inc
test
or
inc
add
adc
adc
jp
jmp
mov
sub
xchg
xorl
fbstp
in
dec
outsb
jns
xchg
orl
pop
pushf
int
fdivl
nop
lret
and
or
lods
xchg
jb
cwtl
mov
popf
pusha
jae
jb
xchg
xchg
in
mov
insl
sbb
inc
out
cmp
test
aaa
add
push
repnz
mov
stos
pop
icebp
or
sbb
fcoms
mov
je
and
cwtl
mov
dec
scas
jmp
push
xor
xchg
lea
iret
cmc
cmc
lock
cmp
loop
cmp
icebp
insb
js
int
cmp
sbb
mov
addl
ret
aaa
iret
sbb
cmp
stos
xorb
add
add
mov
imul
inc
lahf
dec
pop
mov
mov
inc
fsubs
xor
lahf
outsl
push
lret
sarb
add
and
jbe
pop
nop
cld
dec
addr16
das
hlt
adc
neg
lret
mov
ds
mov
jns
and
call
or
mov
out
aam
lret
stos
dec
pop
jecxz
lock
addr16
jne
mov
mov
clc
sbb
fnstsw
lods
mov
adc
xchg
add
fstps
jbe
daa
dec
jnp
add
addl
dec
add
icebp
lahf
jge
les
cmp
sbb
cmp
cmpsl
mov
test
xchg
inc
sbb
out
into
icebp
mov
or
add
movsl
hlt
cmp
fists
jb
popa
push
das
push
out
push
push
jae
inc
repz
or
mov
mov
into
pop
jns
ret
loope
or
rorl
mov
sti
pusha
addr16
ljmp
lahf
shrl
and
iret
push
stos
pop
dec
pop
shrb
sbbl
ficomps
pop
sub
gs
pushf
cmp
in
xchg
sahf
lcall
sub
mov
pop
fnstcw
rdtsc
andl
mov
xchg
xor
xchg
mul
mov
xor
arpl
mov
lea
push
je
ja
jnp
fimull
cmp
dec
sti
mov
push
cmp
loopne
rcr
arpl
pop
or
xchg
jecxz
clc
les
cmp
jnp
shrb
cwtl
add
sbb
cmpb
push
jne
das
aaa
popa
inc
call
jle
scas
add
inc
mov
outsl
xor
cmp
aas
mov
fadds
int
hlt
pop
out
jle
data16
pop
outsl
addl
pop
push
jnp
ret
imul
inc
adc
push
popa
frstor
adc
stos
jae
add
adc
sub
rclb
jg
add
arpl
ret
or
lock
push
in
dec
xchg
je
out
sub
adc
negb
rcrb
sbb
rdpmc
js
adc
jae
push
stc
push
mov
fmull
mov
call
push
and
in
fisttpl
shrl
lcall
jno
ret
das
mov
push
sub
shrl
clc
call
mov
and
sub
push
add
loop
inc
cmp
adc
adc
cltd
lahf
adc
push
shlb
shrd
push
mov
sub
adc
cli
xchg
stc
test
lods
ficoms
pushl
dec
addr16
adc
push
rcrl
mov
push
pop
push
xlat
jno
dec
mov
sbb
movsb
scas
sbb
subl
sbb
arpl
lods
ret
ret
inc
jg
stos
sahf
mov
push
mov
in
xor
jge
xor
jl
mov
sub
js
lret
adc
jl,pt
hlt
cltd
int3
test
ja
cwtl
add
icebp
adc
aaa
pop
movsl
jg
and
addb
mov
inc
mov
cs
cmc
enter
or
sbb
pop
outsb
push
mov
and
mov
xor
int
xor
xchg
xchg
adc
mov
cmc
ljmp
cld
xchg
adc
lods
jmp
push
add
aam
mov
mov
and
jecxz,pn
and
pushl
inc
pop
push
js
xchg
push
pop
jae
pop
lahf
jae
loopne
or
outsl
sbb
cmc
pop
aam
clc
aam
cmp
add
cld
mov
mov
mov
mov
sub
mov
test
xor
scas
bound
adc
movsl
mov
outsb
mov
push
out
iret
push
lods
push
mov
lock
dec
push
shlb
je
xchg
dec
stos
out
mov
jg
out
dec
pop
dec
add
repz
fadds
es
aas
push
dec
mov
jno,pn
pop
mov
xchg
xor
sub
push
fs
in
stos
or
dec
pop
push
jno
jnp
sub
cmp
xor
jbe
jns
cli
mov
fldt
fidivrs
ljmp
insb
shll
aaa
in
iret
inc
mov
cmpsl
into
inc
mov
scas
jnp
lcall
dec
jno
adc
popa
out
or
jbe
pop
aad
inc
push
mov
jb
test
int3
or
jns
daa
sub
call
test
cmp
shl
cmc
imul
push
mov
arpl
push
mov
mov
imul
std
pop
sub
jnp
jecxz
xchg
enter
or
fs
add
lds
fdivl
pop
repz
cmpl
mov
pop
xchg
cmp
dec
fldt
mov
sbb
cmp
out
dec
push
scas
add
scas
sbb
mov
sti
dec
ret
lahf
lcall
mov
popf
adcl
or
jns
fists
jmp
test
cli
mov
jl
vpsrld
jmp
xor
ret
js
enter
jo
out
push
test
pop
sub
xchg
shll
loope
enter
idiv
push
test
mov
sub
xor
mov
cmp
call
adc
add
inc
sub
insb
push
adc
push
push
rcrl
mov
inc
ljmp
sar
sahf
sub
aas
adc
pusha
push
cmp
and
jmp
mov
sub
xchg
mov
pop
mov
push
into
or
repz
mov
repnz
xchg
xlat
in
aad
sub
pop
lock
xor
mov
jmp
ja
mov
push
pop
xchg
mov
je
lcall
cmc
adc
xchg
imul
push
sbb
rcrb
mov
loope
pop
neg
pop
jg
mov
test
je
fidivrs
inc
cmp
je
daa
lea
or
outsb
mov
cltd
gs
ficoms
arpl
cltd
mov
idivb
jp
adc
mov
lret
push
rclb
jns
push
test
mov
dec
adc
and
mov
jno
jecxz
jb
mov
xlat
dec
sbb
and
push
push
add
sub
icebp
push
aad
cltd
sahf
aaa
lcall
mov
push
inc
rep
dec
fs
jnp
adc
cmp
jbe
cmc
fcomi
aam
xor
outsl
fstl
outsb
jge
out
jl
shl
inc
mov
push
fnstcw
lahf
stc
mov
int
cmp
add
lea
jnp
sbb
sbbl
aad
roll
and
mov
or
jle
lret
imul
pop
pop
in
sbb
cmc
sub
in
insl
push
popl
push
test
jnp
scas
dec
fnstsw
jbe
xor
mov
fs
ror
mov
xor
ljmp
sahf
es
ljmp
and
mov
clc
pop
push
adc
jl
mov
jp
movsb
cmc
nop
repnz
adc
hlt
lret
mov
cli
imul
test
lock
push
push
jmp
iret
in
out
push
and
jo
cwtl
inc
lds
mov
push
inc
lock
test
pop
push
jnp
in
stos
pop
imul
and
add
dec
jge
shll
inc
lds
cmp
ret
popf
pop
or
xor
pop
lds
cmp
aas
xchg
push
stos
iret
pushf
test
gs
repz
jns
jo
xor
notl
jg
jb
mov
lcall
push
or
sub
pop
add
incl
cmp
sbb
cmp
mov
in
jg
jp
dec
mov
pop
pop
mov
gs
test
xor
pop
jecxz
jmp
mov
int
jbe
fmul
or
roll
je
daa
cld
out
jnp
pusha
inc
lcall
shrl
xchg
push
hlt
cmc
pop
add
xchg
and
sub
sub
sub
jne
mov
sahf
xchg
stc
es
jb
push
sub
out
jns
cmp
inc
jnp
stos
mov
lahf
pop
mov
mov
pop
adc
mov
jg
jl
pop
call
dec
or
jne
rol
clc
mov
jp
pop
jp
scas
sarb
cmp
add
sub
nop
pop
jnp
mov
rcll
movaps
push
push
fwait
lcall
inc
inc
inc
jl
clc
test
push
imul
fcoml
sbb
jge
push
lock
xor
outsl
dec
jae
clc
ja
ret
cwtl
aam
mov
inc
push
push
push
aam
int
dec
xchg
mov
or
test
movsb
push
je
dec
test
fcomps
mov
lret
xchg
lcall
cld
mov
add
addl
mov
sub
int3
fiadds
ficomps
mov
insb
xchg
sub
jne
fisubl
sbb
arpl
mov
add
push
jb
or
push
xor
xchg
pop
jle
repz
add
and
repz
mov
sub
sbb
outsl
sti
dec
mov
icebp
sbb
sbb
ror
mov
cmp
mov
scas
push
xor
test
std
and
mov
test
clc
fstpl
push
inc
jl
xor
cmp
cmp
jns
mov
sbb
cmp
flds
adc
push
pop
outsb
pop
dec
imul
jbe
shlb
mov
xchg
pop
sub
iret
sbbl
idivl
or
lock
inc
xor
ljmp
loop
lret
rolb
jl
sahf
xchg
aad
std
test
and
xchg
fcoml
inc
adc
cmpsl
or
outsb
imul
cmpsb
jbe
dec
xor
add
jae
sub
adc
je
je
test
dec
insb
inc
mov
stc
enter
dec
sbb
repz
push
mov
lret
nop
mov
mov
mov
add
fmulp
ja
push
insl
lcall
outsl
add
xchg
into
lahf
jb
rcrl
xor
xchg
cs
mov
mov
sub
fs
sub
out
ret
repz
clc
es
push
mov
ja
addr16
imul
sub
push
test
insb
dec
dec
in
dec
adc
jae
lock
outsb
pop
scas
mov
inc
cmp
inc
mov
repz
inc
imul
cmp
mov
mov
inc
fidivrs
ljmp
pushf
mov
adc
movsl
sub
mov
jne
loope
xor
fidivrs
sub
push
in
test
popf
cmpsl
jl
jns
and
lods
je
std
push
movsb
pop
pop
push
mov
mov
cli
pop
das
pop
pop
push
ds
xchg
adc
pop
xchg
in
shrl
scas
push
and
and
stos
pop
adc
ds
clc
push
stos
loop
out
mov
dec
cmp
inc
sbb
aas
add
mov
push
push
addr16
mov
and
jb
add
cli
mov
std
mov
sbb
push
mov
cmpsb
js
add
ret
test
mov
jecxz
mov
sub
add
and
lcall
dec
xor
insl
ss
ret
repnz
hlt
test
sub
inc
pop
dec
mov
cwtl
mulb
pop
sbb
test
xor
lcall
xor
orl
sub
pop
mov
flds
mov
mov
add
fsts
inc
xchg
jb
jbe
imul
sbb
cld
mov
rcll
loopne
in
dec
shll
lock
dec
ljmp
cltd
icebp
icebp
push
xor
scas
in
mov
mov
mov
jno
push
mov
cmpsl
sbb
fstp
cmc
inc
shll
xor
lret
cmp
lods
mov
mov
imul
stos
in
push
cld
pop
pop
cmp
test
pop
rorb
roll
and
aad
test
xor
popa
hlt
mov
adc
popf
test
aas
xchg
fwait
loope
testl
xor
mov
mov
lret
mul
mov
dec
loope
and
jp
sbb
mov
in
pop
daa
xchg
mov
push
add
pusha
insl
mov
jge
lods
sbb
es
test
jp
inc
and
adc
cmc
xor
clc
js
lcall
sub
ss
aam
daa
mov
dec
loop
lcall
xlat
inc
das
pop
xchg
adc
sti
lret
ret
rcll
inc
ret
or
sub
xchg
xorl
jbe
or
test
jge
mov
inc
cwtl
ja
pop
mov
jno
int
dec
xor
test
pushf
mov
or
pushf
pop
pop
rol
arpl
cmp
int3
xchg
xchg
lcall
popa
pop
je
mov
xchg
cmove
aas
cmc
jbe
shrl
jmp
lret
dec
mov
addl
pop
lds
pushf
pop
mov
roll
xlat
inc
cmp
and
mov
shl
aas
cli
stos
cmp
aaa
repz
fsubrs
fmull
xchg
dec
repnz
mul
inc
iret
inc
out
sahf
cs
and
es
lds
out
div
les
jno
adc
add
push
cltd
and
notl
test
fists
das
jne
add
es
xor
fdiv
adc
push
jmp
mov
xchg
lcall
adc
sbbb
fcmovnu
and
in
adc
xor
cltd
andb
iret
pop
mov
push
in
fbstp
out
clc
in
sub
pusha
pop
dec
mov
stos
sub
mov
cld
push
les
xor
fimull
push
push
dec
sahf
fiaddl
mov
ret
mov
lea
xchg
fistl
dec
add
jle
popf
dec
inc
lods
push
jp
cmp
and
jg
jmp
inc
cmpsb
fcmovbe
aad
xchg
ja
pop
enter
mov
push
adc
add
or
sete
push
and
cmpsl
sub
rcll
jno
push
je
sbb
lock
add
cld
pop
mov
pop
lcall
inc
das
sbb
movsl
cmp
stos
pop
or
sbbb
pop
lahf
push
bound
pop
scas
imul
xor
pusha
sbb
mov
stc
inc
insl
mov
fsubl
dec
icebp
push
test
mov
xor
call
jge
and
loope
xor
jmp
insb
mov
arpl
mov
mov
jae
mov
into
insb
jg
das
stos
xlat
in
shll
pop
fs
test
pop
mov
cld
test
in
arpl
test
adc
int
fiadds
filds
daa
jmp
addr16
sbb
dec
cmp
cmc
movsb
dec
imul
popf
or
lret
shrb
dec
mov
pop
xor
arpl
push
inc
mov
stos
jge
stos
iret
insl
inc
data16
in
jecxz
mov
inc
push
xor
aad
push
roll
push
cmp
adc
xchg
imul
int
mov
sahf
xchg
lcall
andb
adc
and
mov
mov
aad
dec
inc
adc
mov
pop
mov
cmc
push
dec
mov
mov
mov
lahf
lock
icebp
lods
and
dec
xor
pop
fcmovu
flds
push
mov
pushf
cli
xchg
into
sub
mov
popf
mov
loope
sbb
jl
cli
adc
jmp
call
daa
mov
lcall
mov
adc
or
push
push
fbstp
les
in
cmp
mov
dec
das
test
mov
push
fwait
sahf
paddsw
arpl
sbb
jbe
insb
outsb
lods
shll
leave
mov
inc
stc
jo
push
lret
std
jae
push
inc
adc
ret
lret
mov
push
test
gs
or
dec
mov
andb
inc
hlt
xchg
sbb
flds
jecxz
sub
hlt
jb
jno
lock
fst
or
jae
push
imul
cmpsl
in
fs
bswap
sbbl
and
cmp
aas
in
xor
cmc
bound
sbb
pop
divb
or
inc
fidivrl
movsl
ret
push
fimull
mov
mov
and
pop
aas
pop
jecxz
imul
sub
shrb
cli
pop
addl
sbb
cmp
sub
aas
test
dec
into
or
mov
inc
out
sbb
sub
xor
fisubs
scas
add
push
sbb
shl
aaa
or
mov
push
pop
aaa
ja
or
addl
xchg
cmpsb
cmp
mov
inc
sub
jne
inc
cmp
adc
das
test
cltd
mov
jno
sarl
lods
and
movsb
jmp
scas
popa
mov
pop
popf
in
add
rorl
mov
push
push
pop
or
aam
cmpsl
xor
in
insb
outsb
add
cmp
mov
pop
cmpsb
sbb
pop
pop
mov
inc
pushf
pop
mov
out
cmpps
push
dec
jb
adc
push
pusha
daa
jmp
jae
pop
fistpll
mov
mov
pop
add
adc
addr16
sub
aas
jle
out
stos
fucompp
xchg
xor
smsw
add
jg
add
cmp
push
daa
add
sub
fs
in
mov
mov
std
cld
mov
rcr
fwait
lds
stos
sub
data16
in
imul
jbe
mov
loop
dec
test
pop
add
jmp
mov
add
jecxz
rcll
push
jo
add
jle
lock
sahf
fcoml
icebp
int
and
dec
jb
xlat
sbb
lahf
sar
sub
mov
fnsave
pop
loope
adc
xor
lcall
inc
int
xlat
ljmp
xchg
subb
sbb
mov
ficoms
add
xor
imul
adc
pushf
ss
push
idiv
jge
or
inc
mov
inc
out
lret
fistpl
xor
inc
or
ljmp
add
dec
or
adc
add
pushf
popa
sbb
adc
mov
pop
mov
insb
inc
push
and
das
das
test
loop
jmp
les
push
sahf
xor
and
jo,pt
adc
pop
hlt
addr16
aaa
or
xchg
movsl
mov
insb
xchg
lret
cmp
xlat
sbb
and
push
dec
mov
xor
ja
es
or
xchg
xor
jecxz
stos
out
xchg
pusha
adc
jg
mov
mov
hlt
mov
sub
push
js
mov
and
rcrl
fadds
cltd
es
sbb
lahf
ror
sbb
inc
adc
mov
add
lret
vcvttps2dq
jae
mov
rcll
or
xchg
ja
cmp
jge
sbb
roll
ret
or
test
int3
ja
in
lret
xchg
fiadds
sbb
jb
push
add
push
aaa
bound
xchg
push
lcall
xchg
push
push
mov
imul
ret
jo
test
imul
pop
das
stc
mov
pop
rcrl
cmc
mov
jae
sub
xchg
leave
jnp
dec
dec
xchg
mov
ret
add
hlt
lock
popf
jg
lahf
stc
fs
jp
sahf
daa
xlat
aam
pop
in
arpl
ja
sbb
ret
xor
xor
out
fs
sub
shll
inc
clc
sbb
sbb
clc
rcrl
bound
jb
jg
mov
and
orb
push
mov
and
mov
jne
jg
sub
cmp
add
lcall
inc
in
pop
or
cmpsl
call
or
mov
mov
push
sbb
jmp
lods
pusha
out
jae
inc
adc
dec
cmc
scas
sub
xrelease
add
pop
mov
sti
mov
cmpsl
or
add
loope
cmp
xor
cmp
lods
pop
lods
jle
dec
inc
call
scas
das
ja
mov
shrb
dec
jl
scas
iret
and
aam
cmp
insb
out
pusha
test
mov
enter
or
jnp
mov
and
xor
lock
mov
out
mov
mov
add
icebp
int3
add
lea
inc
push
cmp
cli
icebp
pop
mov
lahf
xlat
sbb
aas
das
push
sar
in
subb
in
cmp
inc
imul
push
daa
dec
inc
jl
ss
sbb
pop
cltd
mov
iret
jle
outsb
inc
insb
mov
cmp
push
pushf
cltd
xchg
in
adc
scas
cmp
xlat
loopne
mov
cmp
out
mov
inc
push
add
cmp
clc
xchg
imul
cmpsl
dec
ja
dec
jecxz
outsb
mov
lcall
lcall
aas
sarb
cs
les
popa
inc
inc
rclb
mov
ror
and
sbb
pop
pop
inc
out
xor
aam
dec
add
lea
push
jl
mov
xor
sahf
aaa
add
xchg
std
sarl
inc
mov
jbe
in
in
jae
dec
lret
push
inc
add
sub
sub
and
int
in
cmpsb
fdivs
and
xor
cld
or
in
loop
mov
lea
fsub
pop
add
in
adc
arpl
mov
ret
mov
xchg
jae
lods
xor
fstpl
add
icebp
push
push
and
jl
jmp
push
or
or
rcrb
mov
mov
cmp
ss
es
int
lret
icebp
mulps
lret
pop
add
fbld
cli
shl
leave
sub
push
dec
mov
lret
xchg
pushf
xchg
sub
scas
jno
pusha
incb
jo
test
daa
leave
cmpsb
mov
xchg
push
jmp
aaa
icebp
test
add
mov
sub
add
cmp
mov
shl
stos
dec
data16
mov
sbb
into
imul
enter
xchg
mov
mov
scas
and
and
sbb
sti
sbb
lea
outsb
mov
cltd
mov
cmp
sub
dec
sbb
cmp
cmc
scas
stc
lret
ss
push
dec
pusha
ljmp
sbb
push
repnz
adc
out
icebp
or
stos
push
xchg
inc
and
push
repz
sub
outsb
sbb
addl
mov
dec
lahf
insl
fbld
pop
out
leave
lahf
ss
loopne
cmp
dec
nop
mov
sub
adc
xchg
mov
or
movsb
inc
cltd
movsl
stos
imul
in
adc
jecxz
and
sbb
sbb
pop
lds
mov
sbb
out
div
jne
int3
inc
imul
lcall
adc
mov
and
and
adc
xor
and
lcall
inc
jbe
clc
cmc
inc
xchg
xor
popf
scas
xchg
adcl
das
fisttps
cld
pop
ljmp
ret
mov
and
inc
mov
pop
data16
lds
xchg
push
outsb
punpcklbw
cmp
add
enter
mov
mov
dec
aam
ja
jbe
leave
shll
loopne
or
xchg
out
movsl
pop
divl
icebp
enter
pushf
jnp
inc
jmp
or
rcll
jbe
mov
mov
push
cmp
dec
ficomps
divb
xorb
fwait
inc
hlt
push
push
lds
cmc
lods
scas
jmp
pop
sbb
call
cmpsl
je
popw
in
mov
jb
idivl
jge
add
pop
and
lahf
xchg
test
cmpsl
je
or
xchg
xchg
and
les
mov
je
inc
or
mov
dec
cmc
sub
sub
lahf
push
mov
pop
int
out
cld
push
sarl
inc
add
push
cmp
xlat
xchg
ret
iret
cmpsb
cmp
cltd
es
mov
and
pop
push
iret
jmp
mov
lcall
lret
lock
adc
hlt
js
sahf
rcll
jle
pusha
xor
push
mov
pop
dec
lcall
pushf
xchg
rorb
push
lret
ss
add
stos
sahf
and
int3
lods
jns
scas
xchg
adc
inc
out
enter
mov
out
sub
inc
jmp
test
cmovnp
sub
inc
xor
jmp
inc
fs
shrl
prefetchw
adcl
pop
lods
pusha
pusha
xchg
rcrb
aam
je
inc
cmp
je
jmp
add
arpl
adc
xchg
inc
push
and
push
push
out
lods
adc
mov
andb
cmpb
lock
add
mov
ss
rorl
std
int3
out
sbb
imul
inc
push
stos
repnz
dec
mov
lret
sub
sub
cs
fld
inc
jmp
jle
popa
imul
stos
aad
or
cmp
mov
xorb
adc
call
in
push
jl
inc
sbb
test
movsl
add
leave
jae
cmc
cld
outsl
subl
jb
add
repz
aas
push
mov
inc
jne
pop
out
test
sub
push
leave
iret
sub
mov
fadds
mov
lods
sti
mov
fst
xchg
std
pop
pushf
inc
pushf
push
subb
in
add
mov
inc
dec
inc
mov
pop
mov
popa
repnz
stos
adcl
dec
jmp
lock
fwait
and
sub
mov
cmp
lret
mov
test
subb
push
pop
jb
scas
mov
xchg
dec
jne
sbb
add
push
inc
mov
pop
push
jmp
gs
rcr
pop
cltd
sbb
lea
cmp
mov
std
pusha
jnp
addr16
out
push
sub
add
jp
gs
sahf
scas
mov
out
in
xchg
out
xlat
stos
mov
aaa
mov
dec
gs
cli
scas
inc
enter
add
aas
jno
inc
fcomps
in
add
cwtl
rolb
xor
fimuls
pop
mov
mov
dec
cmpsb
jmp
jge
mov
xchg
xchg
pop
and
inc
jo
mov
mov
cltd
dec
testb
faddl
mov
inc
jne
icebp
jb
cmp
adc
mov
lahf
push
stos
push
sbb
mov
inc
sahf
loop
mov
lock
insl
adc
push
mov
jns
xor
test
cmp
inc
in
lods
addr16
pop
cmc
lret
in
mov
repnz
mov
jb
loopne
jnp
fs
aas
or
add
and
push
pop
lods
xchg
sub
xchg
out
fisubs
pop
insb
shll
jae
incl
xchg
arpl
fisttpll
adc
sub
std
push
arpl
and
jmp
mov
addr16
sbb
loop
aas
je
inc
pop
insl
push
mov
push
fisttps
jl
dec
add
mov
mov
pop
mov
sbb
push
or
fsubl
mov
jno
cmp
hlt
inc
xchg
call
mov
lock
or
push
mov
add
ret
out
repnz
repnz
lahf
xor
insb
push
test
add
xchg
dec
repz
cmpsl
sbbb
push
sub
add
push
aam
mov
mov
les
out
dec
fisttpll
adc
pushf
xchg
aam
popa
mov
lahf
dec
cltd
in
test
jae
imul
loopne
or
outsb
sbb
addr16
imul
pop
jg
test
mov
adc
je
push
cmp
dec
inc
mov
ret
xchg
mov
out
xor
fists
ljmp
lret
or
jbe
mov
cmp
and
jbe
push
add
push
loop
xor
push
and
or
std
xchg
or
rclb
leave
inc
inc
seta
cmp
add
orl
adc
filds
rol
mov
inc
sub
ja
das
loope
mov
stc
inc
jecxz
sbb
inc
jne
ss
or
dec
ret
inc
stc
es
sub
inc
jmp
out
je
pop
clc
cld
sbb
xchg
add
mov
pop
fcmovne
pushf
sub
cmpsl
or
dec
xchg
into
sbb
mov
jns
mov
mov
cmpl
mov
mov
push
fsubrl
ficompl
adc
mov
and
fisttps
inc
pop
mov
inc
hlt
push
insl
adc
jo
pop
jmp
fidivrl
jle
jle
cld
pop
jne
iret
call
pop
push
stos
and
insl
cmc
movsb
inc
xor
mov
lret
in
xchg
cmp
fdivp
fsubl
dec
and
inc
jae
lock
push
cltd
jne
fimull
aas
lahf
sbb
mov
ret
jmp
mov
in
sbb
xchg
push
out
arpl
dec
mov
and
mov
mov
mov
mov
adc
push
rorl
nop
xchg
into
inc
cmpl
arpl
gs
mov
cmc
movsl
mov
xchg
popf
imul
adc
cmp
mov
imul
test
fcmovb
repnz
jne
addr16
jo
pop
testl
fstl
mov
jbe
cltd
cltd
jne
pop
add
sub
adc
sbb
mov
mov
mov
dec
lea
pop
inc
les
jl
je
js
pop
cwtl
sbb
lcall
adc
xchg
leave
mov
test
iret
inc
pushl
cmc
push
mov
jno
sbb
xor
mov
dec
repnz
jp
push
loopne
xor
cmpl
mov
dec
out
loopne
adc
and
cmp
and
dec
shlb
or
lret
jge
jae
scas
mov
jns
dec
jmp
into
cli
mov
lock
adc
lret
les
fwait
cmpsl
jecxz
pop
or
lcall
push
cmp
cmp
cmp
movsl
out
mov
xchg
inc
xchg
clc
sahf
sub
cmp
mov
inc
fwait
movsb
or
mov
sbbl
insb
fcmovne
daa
scas
xor
jo
outsb
mov
and
add
mov
in
and
and
and
and
inc
gs
test
test
mov
je
js
nop
mov
sub
jmp
popf
aas
mov
cmp
inc
lret
into
inc
mov
fiadds
mov
or
nop
mov
and
xchg
enter
adc
out
daa
cmp
mov
mov
dec
loopne
shll
popa
cwtl
scas
xchg
mov
push
adc
in
xchg
dec
cmc
sub
lds
fs
mov
mov
dec
in
jo
add
iret
fwait
jnp
dec
call
out
mov
orl
data16
loop
cmp
inc
aad
cwtl
adc
push
push
insl
mov
pusha
sub
cld
add
scas
or
cltd
sub
mov
inc
outsl
and
push
mov
leave
divl
mov
push
int
testb
jl
rcr
jne
jns
add
or
cmp
stc
fcmovu
pop
mov
jle
or
popf
cmpsl
imul
mov
adc
mov
enter
arpl
fptan
mov
sbbl
dec
jmp
jbe
sbb
lods
mov
inc
pusha
cli
fwait
fwait
test
test
xorl
jmp
mov
out
xchg
and
iret
inc
mov
lcall
pop
daa
mov
hlt
xchg
sub
pop
or
push
test
sysenter
push
out
cmp
jp
imul
test
mov
pop
popf
pop
and
jecxz
fisubl
mov
scas
mov
test
mov
dec
dec
push
mov
test
adc
or
mov
cld
inc
xor
jns
ljmp
pop
orb
adc
jnp
sti
insb
cmpsb
jo,pn
mov
loop
inc
push
gs
dec
inc
xchg
pop
fdivrs
into
push
pop
cmc
leave
enter
sbb
mov
adc
push
jl
in
xlat
add
xor
and
push
data16
inc
test
bound
cmp
xchg
mov
xchg
sub
pop
in
pop
dec
adc
adc
or
testb
shrl
xor
push
mov
jl
mov
outsb
out
jne
insb
pop
faddl
cmp
inc
ret
mov
cmc
movsb
jno
inc
sbb
cwtl
mov
pop
push
les
jmp
sbb
je
adc
sti
inc
pop
jo
ja
dec
mov
xor
pushf
js
daa
xor
es
inc
xchg
outsb
jno
addr16
mov
aaa
cmpsl
mov
mov
cmp
dec
fwait
xor
in
mov
es
loopne
ljmp
or
sbb
aad
filds
imulb
mov
in
jge
cmpsb
push
cwtl
aad
add
push
out
mov
add
dec
xchg
pop
pop
inc
inc
fisubrl
out
decb
out
pop
rorl
cmp
jnp
mov
arpl
lock
adc
add
jl
loop
dec
adc
cli
popf
xor
ss
mov
stc
or
in
mov
in
mov
cli
xor
add
xchg
and
outsb
iret
outsl
adc
mov
xchg
mov
jnp
xchg
and
fbstp
fimull
adc
pusha
xorl
repz
add
inc
test
inc
pop
mov
mov
scas
cld
mov
mov
sbb
jp
enter
xchg
mov
in
andb
jb
mov
hlt
rcrb
lsl
repz
dec
pop
mov
mov
mov
push
inc
mov
sti
xchg
and
jl
enter
cltd
ret
sub
sub
mov
mov
cmpsl
fidivl
int
test
add
jnp
nop
pop
sahf
cmp
cmp
stos
xor
sti
int3
fs
add
or
sub
test
adc
into
aad
roll
inc
fcoml
adc
xchg
notl
pop
and
sbb
imul
mov
xorl
insb
xchg
dec
inc
sub
xor
adc
xor
jecxz
enter
jge
cli
ret
std
cmpsb
push
lret
xchg
fimull
mov
mov
xchg
jae
daa
repnz
add
jmp
inc
add
cmpl
mov
imull
sbb
adcb
lods
push
imul
xor
sub
sbb
mov
mov
test
sbbl
or
sbb
jg
popf
ljmp
push
imul
cmp
adcl
in
sub
xor
jo
xor
out
popl
sub
push
mov
mov
call
dec
inc
iret
fnstenv
fs
ja
push
daa
push
sbb
mov
mov
xor
dec
and
add
jp
in
insl
push
adc
notb
mov
push
jecxz
in
inc
sub
imul
and
divl
xchg
cmp
ret
push
in
dec
lock
add
xor
push
repnz
xor
fnsave
and
das
das
ljmp
dec
add
test
cwtl
in
mov
mov
and
sahf
and
mov
xchg
push
pushl
add
cltd
sahf
mov
lret
jge
int
mov
add
test
iret
add
ja
pop
fidivs
push
add
test
fldt
outsl
mov
bound
in
push
inc
aad
inc
insb
add
stos
mov
je
mov
jbe
lret
cmp
leave
xchg
or
pop
mov
adc
rolb
cmp
mov
adc
stc
repnz
shlb
movsl
call
int
sub
iret
xchg
push
sub
mov
aad
inc
jns
inc
jnp
not
lret
jmp
lcall
mov
or
shl
in
xor
pop
mov
ss
add
jns
div
ljmp
shll
inc
vcvtps2pd
xor
insb
lcall
sub
in
push
sbb
js
xchg
outsl
push
mov
nop
scas
ljmp
gs
cmpsb
out
pop
pop
jae
test
mov
in
fcomps
cld
mov
aam
movsl
add
mov
ss
push
sbb
aad
jno
sub
and
mov
cli
sub
data16
dec
movb
icebp
lods
or
inc
es
in
pop
mov
jbe
movsl
adc
sub
or
pop
lds
and
mov
adc
cmp
leave
fiadds
adc
fstpl
inc
push
xchg
and
inc
xchg
popa
incb
es
pop
jo
pop
fldcw
xchg
lret
imul
pop
pop
inc
jns
cwtl
xor
neg
dec
jno
mov
nop
pop
cmp
loopne
xor
sbb
adc
pusha
in
lea
push
daa
clc
cwtl
inc
fisubrs
arpl
fistpl
subl
sub
icebp
xor
in
mov
cltd
mov
jne
jge
repz
mov
sbb
pushf
hlt
jae
push
fnsave
addr16
mov
gs
lods
mov
push
cmc
subb
je
loope
out
testl
in
jno
out
sbb
and
lahf
jecxz
fsubp
inc
jnp
js
adc
jmp
pop
das
sub
fidivs
jbe
mov
repnz
pushf
cmpsb
testl
push
roll
jmp
and
and
mov
popl
lods
and
pop
mov
fcomps
dec
ficomps
fmull
sti
int
inc
pop
addr16
cmp
leave
sti
daa
dec
fistpll
fsqrt
ja
push
into
in
xor
add
mov
sbb
and
aam
mov
lods
xchg
orb
testl
outsb
jg
inc
aam
mov
sub
in
leave
stos
repnz
cld
push
iret
jae
xchg
adc
mov
mov
pop
movsl
add
xchg
je,pt
push
mov
outsb
pop
sbb
or
insb
in
or
inc
inc
cmp
sbb
adc
xor
nop
inc
xchg
test
cmp
sub
fldt
dec
popa
fnstsw
imul
daa
jae
out
int
out
arpl
push
adc
sub
orb
ljmp
stos
pop
mov
scas
xor
adc
xchg
in
fwait
lahf
jne
insb
mov
and
test
lret
loop
das
icebp
stos
xor
sub
mov
pop
pop
je
mov
xor
sub
test
jl
mov
pop
add
jb
xor
popf
pushf
dec
xchg
aas
push
cwtl
lret
xchg
andl
mov
into
pop
in
stos
cld
adc
sbb
xor
mov
mov
loope
roll
cmc
jp
lds
scas
sub
mov
out
sub
ljmp
orb
sbb
sub
push
dec
and
ficomps
or
dec
xor
add
push
aas
repz
lods
mov
movntq
out
or
xchg
pop
jnp
jnp
je
lods
inc
xchg
scas
adc
notb
xor
inc
xlat
dec
inc
cld
jle
ret
fcomi
scas
mov
arpl
jns
lcall
adc
dec
fstps
add
pop
les
cmpsb
pop
mov
repz
pop
pushf
sahf
ss
cmp
mov
lret
push
loop
loop
scas
sub
and
adc
jns
fdivrs
test
sub
fs
sbb
shll
sub
and
push
jmp
movsl
mov
cmpb
ja
mov
fnstcw
bound
adc
cmpsb
mov
or
or
out
cmp
clc
outsl
jae
hlt
sbb
mov
jecxz
mov
lock
stc
sub
cwtl
cwtl
pop
sub
nop
out
pusha
out
mov
xor
add
add
out
mov
push
xor
ds
test
das
dec
lds
movsb
fildl
insl
and
or
fimuls
xor
xor
or
orl
fbstp
cli
cmp
mov
inc
mov
push
ljmp
inc
mov
add
lret
or
cmp
arpl
shl
mov
mov
movsb
xchg
jb
xor
mov
repz
leave
lods
jne
xchg
sub
out
ret
lods
add
popa
shll
jo
mov
mov
xchg
jl
mov
mov
shr
pop
add
adc
cmp
lret
stos
cmpsb
arpl
inc
adc
pop
sub
mov
and
in
cld
push
push
push
not
dec
out
movsb
mov
test
xor
pop
or
inc
xchg
dec
and
xor
jl
add
shl
arpl
ds
cs
or
pop
jp
pop
test
xchg
push
mov
cmp
jle
inc
cli
inc
sub
fwait
es
lods
lret
or
xor
enter
shrl
inc
rclb
out
sub
fcmove
jg
mov
ljmp
cld
shl
ljmp
popa
mov
rcrb
jmp
in
cmp
fisubs
je
stos
jle
lret
pop
scas
inc
cvtps2pd
fistpl
push
ja
mov
insl
aaa
test
mov
test
inc
sbb
or
pop
pop
inc
xchg
lds
dec
adc
sub
aaa
push
sub
mov
movsb
push
ret
sahf
addr16
andl
dec
and
mov
sbb
jle
repz
jge
push
xor
repnz
sub
or
std
add
insb
fidivrl
out
xchg
imul
xchg
imul
dec
mov
out
cwtl
push
pop
lret
data16
das
push
scas
pop
cmpsl
xchg
add
push
arpl
fdivrl
mov
mov
pop
sub
sbb
sarl
ljmp
xor
ss
cmp
or
ja
cmp
test
mov
add
xchg
jmp
xchg
out
and
std
repz
pop
sahf
push
pop
mov
xchg
mov
sbb
xchg
das
les
lods
imul
push
fildll
add
cmpsl
sub
in
dec
xchg
lret
cmpsb
idivb
mov
push
sarl
xor
push
xchg
xor
mov
push
mov
pushf
jae
movsl
movsb
xlat
mov
ss
adc
loope
sbb
jns
push
mov
adc
mov
fnstenv
dec
fsubr
and
push
pop
and
lods
sbb
jb
push
out
in
adc
popf
ljmp
insb
sub
sub
push
push
in
push
lcall
jns
das
sub
xchg
mov
clc
in
sbb
out
jle
push
add
push
cmp
shrb
sub
sub
test
xchg
arpl
out
adc
out
xchg
stos
jns
iret
jnp
or
cwtl
test
ljmp
dec
dec
test
xchg
ja
push
jo
push
pop
daa
jmp
cmc
mov
out
pop
js
jne
cmp
xor
mov
lahf
inc
add
ret
xor
into
pop
xchg
jbe
sbb
xchg
jge
push
push
lcall
add
and
cltd
negb
sub
int3
dec
push
dec
adc
sarl
lods
dec
add
dec
outsl
dec
add
mov
popf
add
idiv
sub
mov
pop
add
lret
shr
sub
inc
and
pop
mov
jno
icebp
and
pop
ror
movsl
mov
les
sbb
push
or
jo
and
movsb
mov
inc
or
cmpsl
flds
scas
ljmp
popf
rclb
xor
or
jae
call
cmp
lcall
cmpsl
inc
or
icebp
cmpsl
test
scas
addb
imul
dec
out
pop
in
pop
adc
imul
es
push
loopne
arpl
icebp
andb
fs
inc
dec
cmc
in
adc
aad
stos
jns
and
push
rorb
adc
js
in
mov
sahf
fwait
test
and
jecxz
or
cli
fsubl
into
and
repz
in
movsl
inc
cmp
idivb
mov
jno
sub
enter
loope
pop
push
dec
inc
cmpsl
mov
stc
cmpsl
jle
xor
repz
jmp
cmp
data16
out
cld
and
enter
cmc
inc
sub
push
xchg
mov
into
lahf
out
lock
xlat
imul
sbb
xor
cmp
dec
test
push
in
add
jmp
push
inc
jae
inc
icebp
cmp
fucomi
mov
xchg
pop
out
mov
bound
loope
push
dec
xor
ficompl
stos
sub
clc
pop
out
adc
in
pop
in
jns
icebp
movsb
clc
sbbl
jb
cmp
push
fisttpl
add
frstor
popl
out
dec
xor
into
xchg
mov
pop
jno
mul
pop
dec
xchg
sbb
popa
inc
subl
inc
inc
test
cmp
xor
push
inc
inc
arpl
aad
dec
push
push
stos
addr16
repnz
add
lahf
push
push
xchg
bound
mull
push
fldenv
jae
cmp
ss
xchg
mov
outsb
inc
aas
pop
sub
outsl
inc
loope
jl
arpl
js
sahf
add
lcall
or
cmp
repz
push
mov
dec
les
je
mov
sbb
mov
sbb
mov
lock
xor
out
or
sbb
ret
sbb
and
out
or
in
pop
test
mov
inc
dec
std
xchg
push
es
and
xchg
add
pop
xchg
rclb
jle
dec
inc
or
pop
call
pushf
cli
movsl
orps
jo
xchg
nop
dec
mov
bound
in
xor
mov
std
mov
fdivrl
in
mov
jle
jge
loop
jnp
jge
in
cmp
push
imul
push
cmp
xchg
dec
mov
cmpsl
jecxz
fwait
ret
or
clc
cli
pop
cmp
xchg
dec
sbbl
aas
fildl
std
pop
pop
sbb
fidivl
dec
jo
pop
inc
mov
movl
mov
lock
je
and
lock
rol
decl
shrb
mov
or
add
clc
cs
cmpsb
rorb
sbb
mov
jns
cmp
push
std
lret
xor
cmp
popl
jmp
pop
cltd
testb
fmul
push
lahf
in
push
push
jecxz
rcrl
mov
orl
aas
sbb
lcall
inc
mov
mov
xchg
aam
mov
bound
mov
insl
cmpsb
scas
cmp
data16
inc
outsl
flds
test
orb
jb
jne
sbb
pushf
inc
or
daa
cld
sbb
push
stos
and
cmp
xchg
cltd
or
xchg
ret
lcall
adc
daa
inc
xchg
je
aas
mov
dec
repnz
adc
adc
push
jnp
ffreep
hlt
shll
sahf
aam
inc
ss
jns
pop
ds
ret
adc
push
xchg
sub
push
sub
cmp
int3
push
cmpsb
ret
call
add
sub
cmp
sub
iret
stos
enter
daa
bound
notl
xchg
pop
xchg
movsb
pcmpgtw
and
std
and
and
das
out
decb
pop
test
scas
mov
imul
test
lea
mov
in
ss
test
add
cmp
xor
xchg
gs
and
int3
aad
sbb
ret
out
inc
insb
add
enter
or
or
mov
dec
mov
lret
in
add
sub
or
je
mov
sbb
mov
mov
jp
add
xchg
push
imul
mov
mov
loop
jg
outsb
push
jb
jns
adc
fdiv
and
sahf
and
jb
inc
push
push
and
mov
ret
cmpsb
mov
shll
ja
out
mov
outsb
sahf
stos
or
fldt
mov
xor
test
sbb
cmp
mov
ds
xlat
bound
test
mov
fimuls
jle
nop
out
ss
popa
mov
mov
cmp
stc
cmc
dec
gs
and
insl
mov
dec
inc
jmp
fwait
push
es
xchg
pop
popa
push
andl
mov
imul
xor
push
dec
or
aam
xchg
icebp
dec
jmp
lds
out
pop
jo
popa
in
sbb
or
dec
pusha
or
into
repnz
jb
or
outsb
push
dec
mov
xchg
mov
xchg
mov
lds
jge
test
mov
sub
push
pop
loopne
mov
je
inc
enter
pop
mov
jmp
in
cmp
push
mov
adc
ja
insb
loopne
xor
add
out
dec
test
or
cli
pop
in
sbb
aam
lret
ja
jge
jmp
lret
lahf
push
xor
xor
cmp
daa
jno
cmp
lret
add
mov
xchg
lret
xor
ss
dec
push
jno
xchg
js
pop
lret
inc
adc
jns
pop
sbbb
mov
xor
jns
int3
jge
cmp
jae
loope
inc
and
mov
gs
mov
sub
bound
sbb
insl
xchg
sti
mov
mov
inc
popf
xor
mov
lea
xor
xchg
clc
sub
fildll
scas
pop
ds
mov
mov
sub
sahf
sahf
leave
sub
pop
or
adc
cmpb
ja
add
cmp
lods
jl
pop
cmc
mov
out
jle
sbb
xor
push
push
sbb
dec
pop
mov
inc
dec
jne
aad
mov
inc
inc
mov
mov
enter
or
inc
nop
or
pop
or
cwtl
pop
adc
inc
mov
mov
lods
and
pushf
jl
dec
lahf
roll
js
mov
fildll
aas
jl
dec
pop
loopne
jge
stos
addr16
notl
and
ret
lahf
sbb
sub
outsl
jge
pop
mov
mov
pop
das
testb
mov
movsb
mov
incb
push
push
sub
push
ficompl
add
push
jns
sub
movsl
or
add
scas
pop
inc
repz
jnp
mov
loope
sub
ja
pop
cmp
jns
outsb
lods
lret
adc
dec
cmp
cmp
fdivr
pop
jl
and
ret
insb
leave
push
negl
stos
xor
push
outsl
stos
in
repnz
mov
lea
mov
ret
test
sbbl
fcoms
jl
mov
pop
push
in
push
ljmp
test
xchg
add
add
inc
rcr
jp
flds
or
mov
mov
inc
in
mov
rclb
inc
mov
jl
mov
ja
ds
loop
bound
loopne
xchg
push
mov
inc
xchg
cs
push
push
jmp
jne
add
pop
sub
jg
mov
lcall
mov
jecxz
adc
les
pusha
loope
out
mov
mov
mov
pop
aad
nop
push
ds
popf
mov
mov
sbb
mov
push
and
pusha
mov
aad
add
mov
adc
or
and
out
fisttpl
movsb
out
loope
fcompl
ret
xor
pop
popf
sbb
ss
cmp
push
adc
cmpb
je
cmp
mov
es
sbb
je
cmp
cwtl
inc
adc
std
inc
pop
sub
and
cmp
shrl
into
inc
cmp
dec
lods
jb
incl
adc
es
mov
mov
pop
cmc
clc
int3
dec
sahf
subl
imul
sub
and
aam
pushf
xor
mov
jge
lcall
pop
int3
ljmp
push
imul
jl
adc
jnp
jmp
popa
xor
movsb
movsl
xchg
stos
js
xor
pop
xlat
add
xchg
lods
imul
shlb
mov
loope
mov
xchg
cltd
adc
mov
mov
sub
or
mov
mov
inc
fnsave
shrl
sbb
mov
addr16
mov
push
mov
or
lea
lret
movsb
test
js
lods
shlb
or
sub
imul
pop
loop
loop
ja
adc
pop
stc
pop
sbb
mov
jno
dec
jmp
ret
or
out
dec
clc
andl
sub
leave
xor
lock
dec
dec
sbb
add
out
sub
push
lahf
and
sub
dec
jg
push
dec
cmp
sbb
hlt
out
pop
cltd
shl
or
stc
shlb
xchg
xor
aam
inc
sub
dec
loop
ret
decb
sbb
xor
lret
fs
sbb
push
cmp
ret
aas
dec
jge
mov
pop
sub
mov
dec
int3
and
xor
xchg
jnp
inc
add
jb
stos
xchg
add
jae
sbb
mov
lods
aaa
sbb
enter
shrl
mov
test
dec
add
gs
push
out
adc
inc
fidivl
and
inc
aad
nop
dec
sub
cmp
sahf
call
out
sahf
cmpxchg8b
mov
stos
jle
jo
aam
stos
enter
mov
into
push
sahf
or
stc
inc
test
into
jno
cmpsb
fsts
mov
pop
sub
into
jne
mov
push
scas
out
xchg
push
and
xchg
shrl
mov
sarl
enter
push
clc
mov
cmp
test
xor
popf
jns
lock
push
mov
les
clc
mov
test
mov
jmp
stos
in
xchg
movsb
jo
jns
popa
mov
les
aad
or
sub
fidivl
gs
adc
sub
xchg
jbe
cmc
push
cmpl
and
pop
in
mov
adc
sub
stos
testb
cmp
stc
dec
sub
dec
mov
push
jb
xor
push
sbb
mov
das
cmpsb
mov
movsb
or
scas
dec
lods
scas
hlt
sbb
int
les
outsl
gs
test
jnp
inc
popf
dec
adc
clc
sub
add
jne
insb
rolb
jp
int
loope
jnp
ret
inc
dec
call
and
sbbl
jnp
mov
inc
loop
jle
les
iret
xchg
inc
or
xlat
push
ljmp
xchg
fdivl
fincstp
cmc
fidivl
xchg
and
and
ffreep
loopne
push
mov
push
les
loope
ja
mov
or
test
and
and
xlat
cmpsl
iret
push
mov
fiadds
sbb
lcall
mov
inc
sbb
mov
add
les
pop
lcall
out
test
out
jmp
out
pop
nop
cmpsb
into
or
fsts
adc
clc
out
sarb
data16
mov
cltd
rclb
loop
jo
add
mov
push
dec
and
adc
adcl
out
sbbl
inc
mov
sbb
out
push
loop
and
cmp
mov
in
repz
fbld
loopne
clc
cmp
ds
jno
imul
pop
cmp
jecxz
jo
dec
adc
or
mov
add
add
mov
stc
add
mov
jg
xchg
jge
mov
jecxz
mov
adc
aad
push
clc
test
andl
hlt
es
sbb
sub
roll
test
pop
mov
mov
mov
shll
popa
xchg
aam
gs
sub
cld
les
cld
mov
imul
test
sub
aas
flds
jmp
pop
lods
inc
ja
jbe
sub
and
jno
loopne
repnz
std
mov
push
jno
push
mov
movsl
xor
jo,pn
mov
int
in
lods
das
sbb
mov
push
and
in
lods
adc
xor
scas
mov
push
jns
inc
popa
jo
test
pop
sbbl
fdiv
sahf
jmp
fdivrp
mov
mov
ds
mov
rcrl
movsl
repnz
sahf
je
negb
xchg
add
xor
mov
dec
ficoms
icebp
inc
cld
jle
cltd
mov
movsl
pop
outsl
lock
xchg
inc
int
inc
iret
fsubrs
push
and
add
scas
dec
mov
outsl
lcall
fwait
hlt
sub
jbe
jmp
mov
jns
mov
and
adcl
fisubrs
shl
fadd
xor
adc
push
sbb
or
jne
ret
pop
addr16
mov
addr16
rcl
movsb
out
incb
pop
std
icebp
sbb
in
pop
dec
imul
cmp
xchg
test
mov
scas
adc
cmp
imul
jae
loopne
orl
imul
push
push
pop
mov
jns
or
jg
and
mov
test
in
fadds
cli
movsb
xor
ret
filds
rcrl
push
leave
cmp
cmp
jns
add
mov
or
cmpb
sub
fcmovbe
cmp
inc
xchg
in
cmp
fimull
sbb
cltd
fstp
mov
dec
stc
push
cmpb
mov
cmc
and
mov
sbb
mov
lret
rcll
add
mov
insl
sub
xchg
dec
adc
rcrl
fldenv
jmp
bound
push
fucom
xchg
pop
adc
jae
cltd
xor
xor
pop
push
pop
rorl
sub
insl
jge
push
out
sub
pusha
into
pop
jl
add
popf
pop
xor
lods
sub
pushf
cmp
icebp
sub
leave
sbb
std
ja
pop
push
ss
jno
call
cmp
jns
nop
mov
rcll
sub
subl
lret
mov
cmpsl
icebp
aam
cmp
pop
cmp
int
push
nop
cmc
rcr
movsl
arpl
inc
aaa
xchg
cmc
pusha
lret
lods
push
pop
adc
lahf
jge
jo
es
ret
xchg
and
jo
shll
xchg
jmp
or
sbb
cltd
jg
inc
push
xlat
jmp
cmp
pusha
stc
jns
outsb
stos
popa
cmpl
add
mov
mov
push
adcl
mov
mov
and
xchg
lods
or
imul
inc
cld
sub
dec
nop
jge
adc
push
shrb
lret
mov
scas
pop
imul
jae
xchg
sub
test
in
loop
or
dec
mov
out
test
rclb
inc
push
inc
aaa
push
jg
jb
cmpsl
dec
cmp
jge
pop
inc
or
add
ficoml
xchg
adc
lret
jecxz,pn
mov
pop
jae
push
jl
call
cmp
pop
push
ficomps
cld
sub
add
outsl
xchg
sbb
sarb
mov
adc
adc
sbb
lods
dec
jmp
mov
push
lods
sub
jmp
xchg
sbb
inc
rcll
xchg
daa
stos
inc
jecxz
imul
xchg
push
addr16
fcoml
sub
call
xchg
sbb
and
lret
xor
pop
lods
sub
inc
mov
bound
in
leave
and
out
nop
jle
pop
mov
xchg
loopne
sub
push
dec
flds
or
xchg
sub
adc
or
lret
pop
shl
outsb
rcl
mov
movsl
mov
sub
mov
shl
cmp
sbb
cmp
lds
adc
test
cmc
mov
sub
inc
mov
ja
and
daa
mov
out
fisttps
lahf
lods
dec
int3
jecxz,pt
jo
in
lods
and
push
mov
mov
and
lds
out
or
jmp
scas
lahf
push
inc
xchg
dec
lods
pop
shrl
jb
stc
add
scas
sbb
sahf
mov
das
rorl
lock
or
and
loopne
imul
or
hlt
mov
sbb
ss
add
jno
or
cmpsb
mov
mov
call
xchg
or
fiaddl
push
call
mov
adc
outsl
pop
inc
jo
mov
and
xor
shl
xlat
cmp
dec
nop
out
mov
and
inc
or
mov
dec
push
bound
pushf
out
pop
dec
test
pop
aam
sub
xor
fxch
dec
pusha
movsb
pop
push
clc
mov
sbb
sbb
mov
test
bound
inc
lods
rcrb
imul
pushf
jo
roll
into
dec
into
jbe
jb
jno
fwait
mov
ret
fidivl
push
add
fdivs
jno
cmp
adc
jne
xor
pop
inc
lea
cld
mov
and
push
sbb
xchg
fadd
push
mov
nop
jae
ffreep
xchg
ljmp
sub
repnz
sbb
gs
pop
inc
mov
sahf
push
dec
adc
xor
out
mov
push
push
sbb
pop
aam
sub
enter
cwtl
push
popa
decb
pusha
inc
lds
cld
js
mov
jl
cmp
sahf
pop
cmp
fisttpll
icebp
mov
sbb
push
cmpsb
in
push
loopne
clc
push
jge
dec
jle
cmpsl
jb
fnstsw
fdivr
inc
lods
cmpsb
mov
add
repz
icebp
scas
sbb
rol
std
cmpsl
xchg
je
hlt
mov
push
sarb
daa
sarl
xor
add
sahf
lahf
pop
mov
stos
mov
cmp
in
jns
push
mov
imul
mov
adc
repnz
xchg
js
xlat
andb
sti
into
cmp
repz
mov
clc
inc
lods
test
pusha
sub
pop
loop
mov
out
mov
fnstsw
std
cld
push
xor
subl
dec
sahf
push
imul
ss
jmp
pop
rcr
xor
insb
pop
push
lret
mov
cli
popa
xor
gs
fldl
inc
mov
cli
out
in
lret
stc
rcr
jecxz
pop
mov
ljmp
pop
dec
or
pusha
add
addr16
sti
mov
insl
sbb
les
lahf
push
mov
je
fcmovb
fwait
aad
jo
inc
paddq
adc
and
sub
push
mov
adc
lods
lret
seta
into
fwait
jnp
dec
cmp
les
std
jne
and
testb
addr16
scas
scas
xchg
in
mov
aaa
inc
ljmp
jae
ljmp
in
jns
and
jne
adc
mov
stos
das
adc
mov
mov
xor
or
testl
jo
lods
in
cmp
adc
sbb
pop
lret
stos
bound
ficomps
mov
mov
dec
ret
addb
cli
xchg
mov
xchg
push
push
mov
pop
movsb
xor
adc
int3
scas
pop
cwtl
mov
xchg
mov
inc
push
mov
lods
mov
xor
dec
xchg
hlt
pop
sbb
ljmp
inc
mov
repz
cld
in
inc
faddp
dec
movsb
fistpll
xchg
or
fcmovne
cmc
sti
sbb
inc
add
nop
add
ficoms
imul
scas
lock
ja
and
sub
mov
jbe
aam
inc
mov
lods
lock
fucomp
popf
mov
dec
test
out
mov
push
pop
cmpsb
xlat
fistpll
sbb
rcll
add
or
arpl
ds
push
mov
cwtl
sahf
das
xor
aam
outsb
inc
cwtl
insb
rcrb
sahf
xchg
pop
jmp
clc
addb
jbe
push
pop
mov
push
dec
xor
and
dec
rcll
jp
xlat
fnclex
notl
lcall
or
fs
mov
add
cmpsb
jno
es
cmp
mov
sbb
dec
scas
push
loope
or
ljmp
sub
dec
ss
dec
in
aad
dec
cmpsb
push
pop
popf
rcll
jns
mov
mov
sbb
add
pop
ss
xor
insb
sub
ficoms
std
inc
xlat
je
jae
xchg
rcl
jo
xchg
sub
into
les
ror
out
inc
mov
pop
inc
test
psubusb
mov
lahf
adc
daa
jb
xor
jb
jle
aas
call
aas
xchg
xchg
stc
xor
call
cs
cmp
adc
loop
adc
cwtl
shlb
mov
movsb
mov
lock
shrb
pop
dec
lcall
inc
stc
mov
cmpsl
stos
pop
lea
xchg
cmp
js
cmp
or
dec
mov
mov
push
inc
push
cmp
dec
mov
jae
mov
lods
lret
inc
rorl
inc
aas
in
out
push
aam
ss
dec
insb
movsb
scas
lret
xchg
das
adc
rcr
popa
fadds
sbb
in
xchg
mov
xchg
xlat
out
mov
jae
ljmp
sub
mov
ret
movsl
cmpb
and
scas
push
pop
popf
inc
jbe
sub
add
sub
das
fists
dec
sti
jp
aad
mov
inc
test
pop
cld
xor
adc
fldenv
pop
jb
adc
pushf
rolb
stos
lods
mov
and
loop
add
iret
xchg
xlat
sbb
mov
lret
add
sti
sub
in
jmp
std
mov
jecxz
add
jl
push
out
repnz
dec
lret
ret
pop
hlt
dec
movsb
test
std
inc
cmpsl
pop
stos
inc
lret
lcall
in
pop
shl
pushf
scas
dec
jge
push
push
xlat
jl
mov
lods
ja
inc
inc
cmp
test
stc
ds
addr16
mov
sub
test
xlat
sbbl
daa
lret
xor
pop
xchg
sub
or
or
movsl
ret
xor
jle
xor
test
into
outsb
popa
xchg
fiaddl
dec
gs
rorb
sbb
push
mov
rolb
xchg
push
xorb
iret
in
dec
fs
sub
xchg
push
lods
mov
or
jo
test
or
loopne
jle
jg
mov
mov
push
cmpsl
enter
cmc
lcall
push
cmp
jo
int
add
xor
test
xor
enter
add
push
inc
cmp
xorl
es
push
add
mov
addr16
test
test
fstl
outsb
vpsubusw
pushf
fcoml
adc
xchg
and
popa
xlat
jo
outsl
addr16
sub
dec
repz
xchg
dec
loope
pop
or
lahf
mov
je
pusha
aaa
xchg
lock
mov
xchg
es
cmpsl
pop
std
outsb
push
xor
xchg
or
movsb
rorb
imul
cli
push
lret
sub
or
jnp
movsl
outsb
xchg
inc
inc
xchg
sti
pusha
jge
test
pop
ficoml
or
cmpsl
pushf
sub
jbe
iret
mov
repnz
mov
mov
loope
mov
cmp
mov
mov
aam
xchg
sub
ret
aaa
ss
adc
popa
in
mov
dec
and
jo
loopne
out
xchg
cld
out
call
inc
pop
sub
out
xchg
add
fildll
mov
sbb
sub
lcall
jmp
iret
ja
aam
ret
mov
mov
in
int3
sbb
xor
or
dec
mov
in
repnz
jmp
dec
lods
fld
mov
ljmp
out
enter
cmpsl
arpl
das
lea
leave
orl
cmp
dec
inc
testb
pushl
jecxz
adc
dec
cmp
sbb
jmp
add
hlt
popa
cmp
mov
in
mov
inc
jge
bound
push
dec
add
jno
cli
aad
jnp
rep
mov
aad
cli
punpckldq
in
jmp
dec
dec
push
mov
xchg
ja
rcrl
dec
cmpsl
test
cltd
enter
mov
mov
adc
xor
inc
jg
push
bnd
dec
call
xchg
push
sbb
pop
cwtl
xor
jle
add
mov
fdivl
and
mov
xlat
push
jg
sub
andl
xor
inc
dec
out
gs
inc
mov
sahf
push
jle
push
sbbl
sbb
arpl
test
inc
dec
sbb
int3
pop
cld
lds
pop
cmc
stc
out
sub
clc
mov
pop
sub
aam
or
or
pop
lret
cmpsl
ret
xchg
jmp
aas
popf
cld
and
push
push
mov
inc
mov
add
call
loopne
fstsw
dec
push
out
cmp
data16
shlb
dec
adc
mov
stc
das
dec
cmp
fwait
movsl
pop
sbb
dec
stc
cltd
or
je
jne
or
adc
pop
hlt
inc
gs
ds
jmp
cld
xchg
outsb
jl
ret
test
std
sub
cmp
add
lds
sub
cmp
xlat
scas
or
pusha
jp
pop
scas
ds
push
cmpsb
pop
rclb
shll
cmc
into
daa
shlb
push
inc
outsb
push
jge
lock
clc
mov
sub
in
fbstp
incl
cmp
xor
push
sub
iret
dec
add
dec
repnz
pop
and
mov
idivb
aam
arpl
inc
imul
loop
push
pop
lcall
int3
insb
negl
jns
add
mov
bound
inc
xchg
imul
dec
std
jmp
pop
mov
sub
jmp
pop
jmp
inc
cwtl
pop
cmpb
iret
sbbb
mov
daa
sbb
arpl
in
adc
adc
int
cwtl
jne
pop
popa
test
or
movups
sub
out
mov
mov
ja
gs
jae
sti
mov
add
outsl
mov
mov
in
clc
js
pop
std
call
push
iret
mov
rcrb
loopne
inc
dec
add
mov
sbb
pop
hlt
adc
fldenv
ja
movsl
leave
jbe
xchg
mov
mov
lahf
mov
into
adc
ja
xchg
repz
jg
mov
aaa
iret
repz
dec
pushf
test
or
mov
ret
mov
psubb
fsubr
sub
lods
andl
adc
mov
aam
scas
jno
xchg
and
daa
fisttps
push
inc
sbb
dec
mov
aas
jb
ret
lahf
or
sahf
loopne
les
inc
in
shrl
es
popf
lea
fidivs
js
incl
ds
inc
pop
jno
in
xchg
mov
sub
outsl
loop
arpl
jmp
test
cmp
mov
stos
call
jnp
cmp
lds
fs
fldt
mov
mov
sbb
in
clc
fcompl
mov
pop
andb
push
pop
out
outsb
jo
stos
or
aad
jge
sbb
or
ret
sti
imul
js
scas
into
int
sub
xor
into
push
sub
inc
xor
or
aam
mov
rcll
dec
fxch
es
outsl
std
lock
pusha
enter
push
mov
dec
adc
mov
das
fbld
and
outsl
mov
ret
mov
inc
sub
and
xor
imul
stos
in
add
mov
mov
xchg
movsb
mov
fs
je
jae
pop
fwait
cli
jg
stos
xlat
pop
push
mov
cwtl
and
mov
sub
push
cld
inc
pushf
out
xchg
mov
mov
pushf
in
ljmp
xchg
nop
xchg
cmp
mov
mov
rcll
cmc
and
stc
cmpb
sti
cmp
out
adc
stos
sbb
cmp
fimuls
insb
sub
mov
iret
mov
cwtl
pop
dec
cmp
dec
push
in
mov
inc
in
mov
fldl
adc
jae
outsb
fists
in
dec
push
andb
sbbb
xor
icebp
jp
scas
pusha
cltd
movsl
inc
stos
insl
mov
js
fsubl
jns
insb
mov
xchg
sub
in
push
int
nop
jecxz
dec
and
out
pop
cmc
sarb
loope
sub
arpl
lea
mov
pop
cmp
cmc
imul
pop
mov
or
dec
or
mov
cli
pop
inc
cmp
xor
push
mov
insl
imul
rorl
push
xchg
loopne
dec
cmpl
adc
out
and
pop
sahf
xlat
daa
clc
fcmovnu
imul
cmc
mov
jp
mov
jno
ret
jge
jg
push
push
mov
pop
mov
jmp
ret
dec
loope
mull
rclb
jl
xchg
ret
xorl
cmpsb
cmp
cs
pop
mov
sub
test
xchg
add
fs
mov
jmp
adc
adc
mov
pusha
pop
pop
jb
imul
fwait
leave
add
scas
mov
jbe
aad
mov
inc
loop
sbb
mov
adc
dec
jle
xchg
pop
mov
sub
leave
movl
or
pop
mov
jo
mov
mov
dec
aas
inc
mov
mov
dec
jg
cmp
cli
aam
xor
insl
jmp
inc
int3
xchg
nop
pop
in
and
push
sahf
xchg
out
iret
push
sub
mov
jb
mov
sub
inc
js
xlat
or
or
int
js
or
out
cltd
into
rcll
push
out
popa
clc
inc
dec
cmpsb
mov
mov
setae
in
xlat
inc
jnp
mov
fwait
sub
aad
and
stc
jl
xchg
pop
test
dec
and
test
lock
movsb
incl
jle
inc
push
insb
rclb
mov
sub
cmpsb
inc
and
ror
ja
imul
ss
in
filds
subl
and
fdivrs
xchg
shlb
and
mov
out
cwtl
mov
inc
sahf
mov
aam
push
mov
dec
imul
je
andl
aaa
push
sbb
adc
jo
inc
fmul
scas
aaa
lds
testb
mov
bound
and
fsubp
mov
not
jbe
inc
mov
out
pop
push
jge
sub
icebp
push
xchg
mov
subb
adc
fnstenv
ja
add
test
xchg
push
test
aad
aam
or
cwtl
and
mov
loope
out
mov
cmc
push
and
cmp
add
dec
xor
jo
add
sub
rorl
sub
scas
sahf
mov
lods
movsb
andl
pop
xchg
ja
or
outsb
fsts
pop
sub
rcrb
xchg
int3
sbb
sbb
mov
mov
or
les
dec
dec
ds
andb
rorb
pop
adc
fcoms
stc
fmulp
cmpsb
jg
push
pop
inc
dec
cli
fcomp
push
fsubrs
cmp
clc
mov
add
cmpsb
jecxz
loopne
mov
lret
fadds
cmp
pop
je
adc
or
add
scas
xchg
dec
lods
xchg
mov
jno
adc
jae
fidivrs
lods
fidivrs
and
fildl
jae
std
das
push
jmp
jecxz
sub
push
shrb
movsb
sti
loope
cmp
sahf
fsubrs
or
push
dec
or
in
mov
cmp
or
out
iret
ds
dec
pop
fidivl
arpl
push
movsb
jle
xchg
adc
das
or
rclb
and
cltd
dec
fdivrl
adc
ja
fisttpll
pop
jo
cmp
add
fisubrs
xchg
sub
xchg
cmp
insb
mov
dec
pusha
push
imul
inc
jae
mov
adc
loop
push
test
ss
jo
sbb
mov
dec
mov
and
int
rcrl
sti
cmp
das
lods
aad
out
xchg
xor
adcl
lods
jecxz
push
ret
jbe
mov
inc
sub
add
xor
inc
lds
mov
inc
imul
loope
cmp
mov
jns
jae
ficomps
push
in
inc
mov
loope
and
cmp
or
push
idiv
pop
out
dec
pop
jb
leave
cs
cmpsb
lahf
aam
icebp
xchg
mov
sbbb
push
and
into
dec
lret
and
push
fldt
mov
outsl
sahf
mov
dec
inc
fadds
mov
or
popa
aas
lds
cmp
jne
imul
sbb
out
pop
sahf
dec
mov
xchg
lds
ljmp
and
push
fcoml
out
push
sub
xchg
daa
or
jg
fsubr
pop
orb
push
das
sti
faddp
mov
js
cmc
leave
mov
inc
adc
mov
mov
lret
adc
lods
in
pop
mov
cmpsb
cmpsb
xlat
stos
testb
inc
sbb
cmp
loop
incb
stos
lea
pop
inc
inc
cmc
ja
mov
jno
fs
aam
cmp
inc
int3
dec
test
cwtl
cmp
push
jns
mov
sub
jo
add
daa
add
call
xchg
sbb
mov
adc
test
out
iret
xlat
adc
mov
push
mov
ficompl
xchg
mov
dec
jne
into
cmp
std
xchg
pop
clc
mov
fiaddl
icebp
mov
inc
and
imul
adc
push
xchg
dec
stos
iret
push
pusha
xor
inc
testl
push
lock
dec
pusha
pop
dec
sbb
mov
inc
cs
dec
scas
and
loopne
sub
jbe
push
adc
mov
es
add
rorl
ret
mov
and
xor
mov
enter
leave
neg
stos
mov
out
lock
bound
xchg
dec
mov
jno
xchg
add
sbb
ss
daa
add
push
mov
fdiv
shll
cmp
sbb
mov
ljmp
shlb
into
lock
ljmp
inc
stc
mov
dec
es
les
jl
sub
jbe
cwtl
mov
loope
push
outsl
mov
sub
fnsave
int
pop
push
xchg
xchg
push
dec
shlb
idivb
and
mov
mov
test
lahf
mov
lret
mov
xchg
mov
jl
sbb
dec
mov
popf
dec
inc
and
mov
jb
mov
out
adcb
cmp
hlt
cmp
ja
and
dec
sub
mov
bound
xchg
or
adc
dec
fiadds
mov
enter
cs
cwtl
add
divl
xlat
sub
push
push
aad
shrb
hlt
imul
imul
sti
add
pushf
mov
out
add
adc
fimuls
outsl
push
daa
mov
or
inc
xchg
mov
rcl
jmp
xor
sbb
movsb
and
jp
fcmovnb
push
movsb
ss
cltd
xor
push
mov
insb
pop
xor
dec
mov
aas
pop
or
inc
xor
and
fmul
xor
xor
mov
adcb
cmp
push
pop
xchg
mov
sahf
scas
cs
mov
jnp
rcrl
xchg
pop
mov
arpl
cmp
lods
xor
popl
push
mov
int3
stos
mov
or
fdivrs
mov
jl
test
les
loopne
les
fnstcw
pop
cmp
shl
mov
mov
fimuls
iret
rorb
inc
mov
cmpsl
stos
pop
cmpsl
sbb
rcrb
lahf
iret
mov
out
repz
mov
sub
pusha
xor
xor
inc
sarl
mov
fwait
cmp
lahf
mov
pop
push
clc
fsub
lods
fdivp
pop
add
push
out
cmp
popf
aam
xchg
and
mov
dec
popw
cmp
repz
jae
pusha
and
lods
mov
cmp
movsl
je
adc
push
fisubrs
movsb
int
aad
adc
movsl
fldenv
push
mov
xchg
shl
lret
je
arpl
or
loope
outsl
fs
and
int
jp
ror
and
daa
popa
lret
xchg
lods
fs
mov
pop
mov
pop
rcrb
imul
adc
lret
lods
shrb
stc
js
enter
jp
sahf
lods
fldenv
into
inc
cli
push
cmp
add
push
or
mov
mov
add
inc
int3
push
jb
out
push
or
push
mov
mov
stos
sti
out
and
or
js
cmc
push
mov
fisubs
loop
mov
xchg
pusha
loopne
lahf
xchg
sbb
nop
repnz
out
cmpsl
lahf
inc
fimuls
jmp
dec
ds
std
push
cli
rolb
mov
mov
pop
jecxz
int
dec
ds
enter
fcoms
clc
add
add
mov
fsubl
xor
mov
shl
push
fstl
mov
stc
fisttpl
sub
xchg
shlb
mov
push
pop
jle
mov
in
inc
or
in
jl
inc
add
adc
int
push
iret
lea
pop
adc
add
mov
mov
mov
mov
test
mov
xchg
inc
popa
jp
sub
lods
hlt
setns
movsb
ret
xchg
mov
dec
inc
push
fdivs
pop
stos
lods
rclb
push
fs
jmp
arpl
push
mov
mov
sbb
out
test
aaa
movsb
adc
sbb
pop
cld
mov
sarb
and
insb
dec
pop
and
push
insl
sbb
jnp
sub
push
mov
mov
int
into
pushf
inc
gs
jo
lods
sbb
and
mov
negb
out
push
xchg
cmc
lock
leave
xorb
ret
xchg
push
fcompl
or
rorb
push
lcall
int
das
and
mov
mov
cs
insl
mov
sub
mov
jle
and
pop
es
cmpsl
ret
mov
fldcw
and
push
pop
bound
dec
jp
mov
sbb
loop
and
and
mov
xchg
dec
xor
pop
test
pop
xor
in
jecxz
or
int
cltd
mov
jno
sub
jle
sbb
or
inc
and
sahf
addr16
xor
push
sahf
mov
mov
call
sahf
mov
cmpsl
out
mov
sub
jae
pushf
pop
dec
rcr
push
fistps
mov
xlat
xchg
stos
lods
inc
mov
outsl
mov
das
mov
xchg
mov
add
cwtl
mov
mov
adc
vhsubps
mov
mov
sub
mov
insl
pop
mov
add
jge
or
call
jmp
xlat
arpl
mov
mov
adc
fdivl
cwtl
mov
mov
orb
push
mov
jp
jb
cmpl
and
inc
movsb
stc
sub
fs
cltd
jecxz
xor
pop
sub
daa
sub
lret
mov
add
jp
mov
test
popa
xor
pop
adc
mov
es
pop
sub
sub
adcb
adc
shlb
mov
bound
sbb
push
cmpl
out
push
xchg
sub
mov
loopne
ffreep
int3
adc
mov
jp
in
sub
mov
and
cmc
imull
insb
out
and
out
jmp
not
ret
bound
fs
cmp
mov
pusha
mov
lret
stos
call
test
xchg
in
addr16
rol
bound
fldl
push
jo
xchg
lret
or
bound
mov
in
xchg
push
nop
sahf
fcmovu
add
mov
xchg
pop
inc
stos
mov
jno
in
aas
in
sbb
test
jg
inc
pop
pand
mov
pop
shll
out
leave
xor
test
cmp
or
or
fistpll
jns
cltd
fs
xchg
sub
push
jg
fst
loop
dec
add
lods
pop
fisttpl
outsb
dec
js
dec
rorl
cli
popf
es
and
scas
mov
imul
stc
add
orb
int
ret
cs
jmp
out
mov
addr16
je
shl
movsl
ret
push
stos
subl
lock
test
mov
leave
mov
pop
add
push
dec
ret
ja
arpl
imul
pushf
inc
adc
loopne
inc
and
cmp
push
adc
xchg
mov
insl
mov
lods
dec
mov
idivl
sub
bound
in
push
dec
sub
jp
notb
lock
sub
data16
jno
mov
cwtl
fists
scas
test
mov
or
data16
add
fwait
cmp
or
sbb
or
push
jmp
jb
jle
add
hlt
or
fwait
stos
or
ret
mov
mov
in
cmp
out
out
push
clc
jmpw
sbb
fimuls
cmpsb
arpl
push
and
orb
jmp
das
xchg
xchg
dec
sarb
daa
lahf
leave
fidivrs
out
fs
or
cmp
sarb
cmc
aaa
add
hlt
sbb
xchg
pop
int3
pushf
cmpsl
test
enter
aam
sbb
dec
adc
push
mov
icebp
xor
and
cwtl
pop
pop
ret
dec
nop
call
lcall
iret
cmpsb
mov
inc
jl
jns
enter
test
loopne
loop
loopne
inc
mov
ret
or
stos
aas
dec
push
mov
aas
sbb
cmp
subl
jb
push
jo
mov
movsl
repnz
sbb
loope
and
test
jnp
cli
popf
mov
das
cld
scas
mov
pop
popf
jb
sbb
sub
aas
shr
stc
adc
lods
xorb
jle
imul
repnz
je
in
and
sti
into
nop
adc
popa
push
push
push
fwait
add
hlt
lcall
push
rclb
xchg
jmp
mov
scas
dec
mov
repz
mov
ds
xlat
mov
jl
mov
insb
xchg
sbb
cmc
lds
movsb
mov
jnp
inc
adcb
xchg
into
mov
push
adc
pop
stos
push
lea
mov
xchg
js
xchg
sbb
or
jnp
in
dec
hlt
cmp
jo
inc
sahf
out
in
mov
pop
leave
xor
inc
pushf
fbld
in
sbb
in
loop
dec
lret
in
mov
rorb
lahf
test
dec
push
sahf
sub
insl
rcll
or
nop
lahf
xchg
mov
jg
loop
xlat
daa
nop
jmp
shlb
shlb
xchg
and
movsl
pop
cmp
cld
js
dec
clc
and
out
xchg
mov
rcll
inc
lea
pop
pop
loope
xchg
adc
or
lcall
or
lret
pop
dec
hlt
inc
bnd
ljmp
cli
mov
add
adc
add
xchg
sahf
push
cli
sub
add
loopne
add
sub
jno
inc
loope
xchg
cwtl
jb
in
push
xchg
setnp
adc
dec
out
dec
xchg
push
mov
mov
loope
cmp
mov
aad
ljmp
or
imul
roll
loop
scas
into
iret
xor
aaa
divl
cmp
pop
mov
fldl
or
int3
mov
pushf
pop
cmp
inc
divl
xchg
ljmp
pop
mov
stc
into
subb
stos
push
filds
sub
push
sbb
fs
adc
es
ficomps
mov
push
loop
adcb
repz
out
and
int
add
pop
int
ja
or
dec
and
cwtl
inc
cmp
std
mov
jns
lods
mov
jg
pushf
sub
loope
jnp
pop
pushf
clc
push
loope
mov
or
gs
push
popaw
push
push
cmp
mov
xor
adcl
xorb
shlb
pop
pop
out
fmuls
call
fwait
xchg
and
fisttpl
or
mov
addr16
fucom
sub
add
scas
dec
shlb
jmp
adc
push
xchg
xchg
hlt
fistps
daa
mov
xor
sahf
adc
and
sbb
fnsave
and
jb
lret
aaa
ret
xchg
daa
lods
jmp
leave
insl
adc
mov
cmp
inc
aas
xchg
rcrl
jecxz
lds
jmp
push
inc
sbb
add
mov
rcl
mov
sar
ss
sbbl
frstor
loopne
pushf
imul
pop
shrl
cmp
push
cmpsb
mov
jae
andl
out
mov
fst
sub
xchg
lcall
and
dec
imul
fldt
testb
out
punpcklwd
jg
in
cmp
cmp
insl
inc
fdivp
rorb
cmc
jne
inc
push
scas
mov
or
xchg
xchg
out
xchg
mov
adc
arpl
roll
out
dec
push
push
gs
xor
out
ljmp
add
fisttpl
stos
hlt
dec
push
mov
mov
jmp
adc
sbb
test
cs
dec
xabort
inc
lret
push
rcll
cmpsb
lea
lret
dec
xchg
add
ss
mov
flds
adc
push
js
les
lcall
sbb
arpl
inc
call
inc
test
les
push
and
mov
and
xor
scas
mov
jb
dec
stos
dec
lahf
sbbb
push
mov
in
mov
int
hlt
es
pop
jmp
pushf
ds
mov
pusha
stos
xchg
fisttpll
rol
or
mov
jmp
lahf
dec
loopne
sbb
sbb
lods
pusha
test
or
pushf
mov
in
sub
dec
lret
outsb
xchg
sub
add
mov
scas
mov
repz
lods
adc
and
icebp
fwait
add
aad
jb
pop
mov
dec
test
pop
mov
aad
mov
clc
pushf
inc
pop
imul
dec
lock
jne
pop
jbe
iret
ss
test
insb
mov
jnp
insl
fadd
lahf
int3
pushf
inc
and
arpl
jo
pop
push
das
add
push
adc
aaa
mov
jmp
inc
pop
mov
rolb
mov
mov
or
mov
add
or
pop
cmc
push
sbbl
les
ret
push
pop
adc
jne
mov
int3
test
mov
or
add
lahf
or
loop
xchg
dec
xor
mov
ret
subb
push
inc
push
mov
inc
inc
clc
fcomps
int3
mov
rcrl
pop
mov
stos
pop
push
adcl
cmpl
xchg
jl
call
mov
cmpsb
lds
es
das
enter
inc
lods
push
cmp
cmp
cltd
into
aaa
and
jle
dec
popa
daa
ret
cmp
mov
adc
adc
sti
mov
jns
inc
outsb
xor
adc
fdiv
inc
push
test
movsl
int3
mov
out
out
movb
mov
fcomip
jo,pt
dec
xor
idivl
inc
sub
repz
leave
dec
dec
xorl
cmp
pushf
clc
test
aaa
pop
ret
adc
sbb
pop
mov
dec
jl
imull
inc
xchg
pop
mov
shll
lahf
sbb
fsts
and
adc
fldenv
ja
inc
mov
mov
sahf
fistl
out
sbb
jnp
dec
lods
adc
daa
jo
push
cmpsl
outsl
out
and
fistpl
test
mov
popf
test
push
jo
add
pop
fnstsw
jl
imul
push
popf
cs
bound
push
jns
mov
mov
and
test
sub
sahf
stc
or
and
cmp
clc
stos
sub
out
xchg
out
cmp
inc
xor
out
movsl
jle
mov
push
sub
mov
jnp
js
fimuls
movsl
cwtl
mov
inc
in
mov
or
ficoms
ljmp
mov
pop
mov
subl
insl
mov
sub
xchg
pop
mov
xchg
xor
add
scas
test
mov
fnsave
pop
cmpsb
pop
dec
les
fldcw
mov
cmpsl
dec
mov
xor
mov
gs
scas
lods
fidivrs
and
aas
sbb
das
jnp
jno
faddp
test
outsl
notl
inc
ret
cs
pop
jmp
test
cmp
pop
rcrb
mov
sbb
pop
cs
imul
dec
je
mov
cmp
inc
xor
in
enter
popa
sub
lret
stos
inc
bound
ffreep
and
cvtdq2ps
les
into
ds
in
hlt
pop
jecxz
cmp
rcr
stc
cltd
cwtl
cmp
stc
icebp
in
jns
xchg
dec
mov
ss
and
divb
cmp
fnstsw
xchg
mov
pop
dec
mov
lea
pop
jo
imul
fs
cmp
xor
pusha
outsb
cltd
test
test
fsubs
jecxz
mov
mov
in
test
fcmovnu
mov
les
arpl
into
out
outsb
mov
pop
pop
ret
int
fimuls
push
adc
inc
sub
push
push
mov
fsts
dec
inc
in
imul
sbb
or
and
fidivl
fstpt
mov
pop
jne
dec
dec
jno
mov
push
pop
cmp
sbb
aas
xchg
lock
push
add
je
ljmp
xchg
fsts
xor
add
jmp
sahf
adc
adc
xchg
add
rolb
xchg
imul
mov
gs
dec
jmp
lods
insb
mov
loop
in
fisubrl
shr
and
push
push
data16
fcmovb
mov
pop
popf
sti
outsb
mov
push
stc
or
repz
push
clc
js
jno
adc
add
call
ss
push
xor
ss
xchg
push
sti
and
inc
lret
push
js
push
sahf
cmp
mov
out
enter
sbbl
mov
js
or
sbb
dec
pushf
jmp
movsl
iret
shl
outsl
xchg
lds
in
cmpsl
push
jns
aad
lahf
add
dec
sub
mov
pop
lods
jle
fdivrs
push
mov
out
outsl
in
or
dec
sahf
cmp
mov
cmpsl
xchg
daa
cmc
pop
in
inc
push
shll
mov
mov
xor
push
mov
xor
xchg
ret
shrb
and
notl
aam
outsl
fbstp
adc
aad
cs
mov
cmpsb
lods
jl
mov
decl
aam
aas
stc
mov
mov
adc
fsubrl
insl
mov
jge
insb
jnp
lds
lds
mov
fcoms
jp
mov
mov
enter
cmp
push
and
subl
clc
sarl
sbb
jecxz
outsb
sbbl
lahf
sub
cmp
jp
mov
mov
push
mov
stos
hlt
js
inc
pop
das
neg
imul
lods
cli
pop
mov
jne
mov
xchg
xchg
ss
or
orl
fcoml
stos
aad
mov
push
int3
rcrb
out
cmp
setbe
stc
lds
outsl
sahf
dec
in
je
lahf
and
ret
jae
clc
loop
ror
push
movb
pop
sub
jae
dec
test
xor
lret
xchg
in
sub
out
fistpl
test
inc
pop
jno
sar
pop
or
cmpsb
das
mov
xorl
cmpsl
inc
lret
cmpsb
or
jb
pop
scas
sahf
ret
or
imul
in
cld
cwtl
lods
mov
fisttps
inc
clc
icebp
outsl
dec
xchg
xchg
rorb
jmp
fists
push
call
ret
inc
mov
jmp
out
and
mov
iret
div
sub
aad
lods
call
adc
and
shll
aam
repnz
nop
ds
push
sub
mov
and
sbb
lcall
movsl
and
and
scas
push
data16
ljmp
stc
adc
ret
sbb
dec
punpckldq
stos
faddl
lods
fidivrl
pop
or
xchg
jbe
aaa
shlb
add
pusha
scas
xchg
loop
das
mov
jl
mul
sub
lret
sbb
popa
in
test
popf
push
lahf
ret
bound
jl
mov
mov
jnp
or
popa
loop
cs
inc
xchg
out
cld
mov
pop
jmp
fists
cmpsb
movsb
inc
sbb
jl
or
out
push
lea
and
xor
rcrb
out
dec
xchg
pushf
xchg
roll
sbb
inc
rcr
dec
pop
rcrb
lahf
xchg
dec
in
popa
stc
cmp
repz
sbbb
leave
pop
orb
cld
push
fnstsw
push
adc
mov
jae
outsl
add
and
sbb
jge
je
mov
outsb
xchg
cmp
idivl
xor
xor
xor
and
jl
test
inc
xor
push
arpl
out
cmp
jae
cld
mov
mov
push
lock
int3
pop
subl
fidivrl
add
les
jl
es
sub
mov
cmp
cmp
nop
adc
int3
dec
pop
scas
xor
dec
pop
fldl
test
movsb
int
mov
xor
mov
repz
scas
push
pushf
mov
movsb
stos
sbb
lret
and
jp
cmpl
jo
mov
jo
inc
cmp
cltd
cmpsl
lods
xor
lods
sbb
in
cmpsb
popa
nop
dec
adc
es
sub
push
adc
xchg
inc
into
and
xchg
push
xchg
add
pop
and
dec
ret
jo
loope
testb
out
or
pop
loop
rol
fistpl
add
sbb
hlt
inc
jmp
sub
ret
inc
fildll
cltd
pop
sub
or
mulb
cli
int
jge
pop
enter
pop
xor
xchg
movsb
cmp
and
sbbl
pop
xchg
xlat
ret
lock
pop
inc
jg
les
xchg
loop
mov
bound
xchg
cli
jno
inc
lods
sbb
sbbb
into
cltd
adc
arpl
fbld
xbegin
je
dec
inc
notb
mov
mov
int
dec
and
in
add
lcall
lods
dec
rcrb
lcall
scas
fisubs
xor
popa
mov
mov
xor
cmovo
mov
fildll
jbe
adc
scas
dec
xchg
out
sub
add
adc
sti
dec
add
lock
or
pusha
jnp
add
xor
inc
mov
aas
inc
gs
fwait
push
fwait
popa
mov
pop
xchg
daa
roll
mov
and
addr16
js
adc
icebp
lret
xorl
push
xor
pusha
cld
cmp
or
inc
cld
aam
popf
sbb
dec
xlat
cmovs
adc
in
xchg
loope
xchg
ljmp
std
lret
mov
mov
and
cmc
arpl
iret
ret
cli
imul
cmp
adc
push
push
insl
das
enter
mov
xchg
and
clc
int
sar
ret
out
in
lds
xor
lret
aam
dec
mov
push
and
add
shl
or
out
ficoml
or
mov
mov
inc
test
data16
xchg
repz
jne
push
pusha
out
cmp
mov
push
ror
mov
sub
jno
daa
mov
push
mov
arpl
sub
scas
fistps
mov
xchg
pop
ja
mov
sbb
add
outsb
sub
sub
in
sbb
and
or
push
xchg
mov
out
adc
cmc
add
ret
les
dec
ljmp
stos
je
roll
xor
sbbl
dec
stos
in
jne
adc
ret
loope
stc
fdivs
mov
fdivrl
mov
jo
jl
icebp
push
in
push
cltd
xchg
sbb
imul
ret
fisubrs
cmc
lret
push
xchg
movsl
sbb
jg
fwait
jmp
dec
dec
add
jns
roll
jno
decl
fcomip
sbb
fwait
mov
and
sbb
scas
outsl
add
pop
mov
shr
cmp
mov
lds
and
aas
cmp
add
sub
fbld
pop
dec
push
std
fcmovu
subl
mov
xor
fmul
push
mov
cmc
inc
pop
stos
stc
stos
out
sbb
rol
xor
daa
dec
insl
xor
mov
mov
cmpsb
mov
xlat
or
sbb
and
testb
mov
pop
inc
jno
jmp
dec
jge
scas
inc
dec
fisttpl
popa
cli
popf
testl
cmpl
lea
sbbl
jle
push
ror
rep
mov
sbb
and
push
loop
dec
xchg
pop
es
lods
scas
mov
int3
out
push
push
jno
mov
inc
ret
jmp
ret
jl
adc
jmp
pusha
mov
stos
ds
jne
leave
push
sub
inc
popf
loope
mov
mov
gs
out
and
mov
jmp
out
cwtl
in
ret
ret
jae
inc
jle
stos
lea
dec
addr16
push
inc
sub
test
cwtl
jge
xor
loope
mov
cmp
data16
in
adc
jl
outsb
repz
stos
pop
sbb
imul
imul
das
js
mov
jne
popa
adc
dec
sub
dec
test
mov
push
push
mov
sub
mov
aas
scas
psubb
insl
out
pop
mov
ficomps
imul
mov
xchg
aaa
bound
adc
mov
inc
add
jb
ljmp
ja
nop
call
sub
or
jmp
imul
xchg
push
xchg
insl
adc
push
pop
jg
stc
sti
xlat
dec
or
mov
mov
test
jno
insb
fcoml
mov
stos
mov
xor
jmp
lods
push
mov
loopne
fprem
jns
inc
push
lret
cld
or
clc
sub
andl
mov
rcll
cmpsb
pop
repz
vpand
sub
lret
shll
loop
push
jge
xchg
int
imulb
and
jge
rcll
cmp
xchg
cltd
pusha
mov
test
lods
adc
jb
cmpsb
das
aam
es
ljmp
loopne
push
sbb
aam
and
dec
lea
daa
and
movsb
nop
sbb
push
inc
inc
add
mov
cmpsl
inc
or
inc
andb
dec
lea
sbb
jbe
xchg
mov
into
push
xlat
lea
jae
jae
mov
scas
pop
inc
movb
push
push
jae
pop
insb
outsl
stc
rcrl
int
pop
sahf
sbb
push
adc
mov
inc
repnz
or
mov
mov
add
pop
in
jge
xchg
ss
and
pop
xchg
outsl
loopne
imul
cltd
cmpsl
insl
jo
mov
dec
adc
mov
jmp
lock
sub
inc
ret
jge
fimuls
in
sbb
dec
pop
inc
cwtl
xor
subl
xchg
sbb
or
jns
jo
mov
mov
xor
fsub
xchg
xchg
and
jne
pop
sti
and
das
sbb
mov
in
jnp
add
cmp
out
mov
push
push
pop
mov
or
das
gs
fstpt
adc
mov
popa
repnz
bnd
jmp
repz
lock
je
loopne
loop
push
lea
inc
cmpsb
pushf
rcll
pop
sbb
mov
jbe
stos
lret
shll
xchg
cmp
jns
movsl
pop
pop
jne
jle
dec
xchg
lcall
push
into
jecxz
xchg
sub
push
pop
lret
and
adc
aam
add
pop
bound
fcoml
stc
repz
or
arpl
jle
imulb
shll
dec
jae
in
loop
out
pop
lock
fistpll
mov
xor
cltd
jns
jl
fcmove
jl
fnsave
dec
add
mov
iret
cmp
scas
push
push
cmc
cmp
jb
mov
cmp
out
add
fiaddl
adc
and
dec
movsl
pop
xchg
and
and
cld
push
aas
and
or
add
xor
repz
scas
jg
xchg
jecxz
repnz
sub
into
inc
adc
insb
mov
mov
shrl
into
shl
stos
lods
and
push
jae
insb
das
cs
jmp
adc
and
outsl
mov
pop
popf
xchg
push
pop
nop
pop
jmp
loopne
fdivs
pop
or
and
jle
jno
mov
in
mov
adc
push
bound
mov
shrb
fucomi
cli
aas
lret
cmpsl
loope
cwtl
ret
jg
sti
std
dec
subl
pop
aas
push
dec
fwait
leave
pusha
cmp
add
mov
fwait
out
mov
js
out
ret
push
xor
movsb
xchg
mov
mov
out
loopne
and
inc
out
dec
add
aam
and
stos
outsl
mov
stc
lods
movsl
imul
xchg
mov
sub
mov
pop
dec
out
test
fidivl
dec
inc
pusha
sbb
out
movsb
push
outsl
push
cmp
repnz
sbb
stc
sub
mov
xlat
and
fldl
mov
lcall
sbb
out
scas
push
mov
scas
lret
aam
jl
and
repz
xchg
mov
mov
cmp
movsl
and
in
dec
mov
inc
or
mov
icebp
pushf
shlb
test
cmc
inc
flds
fsubrs
push
insb
xor
ja
mov
xchg
fs
lcall
sbb
xor
jl
sti
in
and
jno
jae
fxtract
and
mov
int
mov
inc
push
aad
cs
xor
xor
adc
and
movsl
jmp
mov
jmp
sarb
ret
shll
iret
jmp
imul
in
pop
in
shl
inc
out
lods
imul
es
add
sub
pusha
or
mov
jge
push
push
ret
or
jg
bound
jns
in
pop
es
movsb
stos
enter
inc
xchg
pop
fmuls
lahf
jnp
push
imul
in
add
addl
lret
add
jo
fstl
xor
push
adc
bnd
decb
push
jnp
and
mov
sbb
push
aam
jge
mov
push
and
adc
jg
orl
nop
incb
insl
popf
jmp
dec
add
int3
mov
or
stos
fwait
mov
dec
cmp
lods
int
sub
hlt
xchg
je
fxch
pop
scas
rclb
imul
jmp
add
xchg
push
jg
jmp
jne
sbb
pop
push
loop
movsl
fs
jns
mov
jge
out
push
fnstcw
pushf
aaa
jmp
pushf
mov
rcl
test
pop
or
outsl
pop
loopne
mov
xchg
bound
sti
adc
dec
push
lea
cmp
mov
push
sbb
pushf
fsubs
rcrb
inc
xchg
dec
js
inc
subl
sbb
stos
xchg
xchg
lahf
clc
mov
jge
in
dec
xchg
jmp
nop
jg
pop
add
cmpsl
xor
ret
lea
addr16
mov
into
sbbb
xchg
jnp
shr
inc
or
sub
add
push
in
ljmp
push
pop
fdivl
stos
xchg
xor
rcl
jl
out
xchg
or
add
xchg
and
jnp
rcr
jno
adc
stos
or
inc
cmp
xor
cmpsb
sarl
imul
pop
popf
add
jge
test
loopne
pushw
outsb
lock
incb
mov
lcall
dec
inc
int
pop
ja
mov
mov
mov
addr16
xor
test
lds
mov
fisubs
daa
ret
cmp
mov
jb
mov
mov
push
rorb
and
mov
jo
or
movsb
sub
lods
sub
adc
out
inc
ds
jns
fisubl
sub
and
xor
call
in
fidivl
adc
mov
out
and
jno
into
or
punpckhbw
ljmp
sarl
lahf
fwait
xchg
mov
gs
movsb
cmc
ds
lret
inc
call
mov
and
les
daa
adc
sbbb
lods
js
cmp
cwtl
rcl
inc
ss
cld
pop
sahf
jmp
sbb
sahf
jecxz
nop
popa
inc
ljmp
push
inc
cmp
test
shrl
lods
ret
pop
cs
iret
fiadds
pop
mov
test
test
sub
je
cmp
ret
jl
cmpsb
push
aaa
mov
sbb
aas
mov
mov
mov
insl
scas
movsb
loope
jle
dec
lods
pop
xchg
add
or
jbe
dec
xor
xor
jne
insb
pushf
mov
mov
xchg
out
movsl
not
or
fstl
inc
or
inc
jecxz
sbb
stos
adc
aad
loop
mov
sbb
pop
int3
ret
jecxz
nop
shrl
imul
mov
sbb
mov
cltd
fdiv
call
xchg
jae
fdivr
xor
add
pop
dec
mov
or
cli
inc
imul
xor
adc
in
jbe
xchg
pop
shl
jne
inc
push
hlt
andb
pop
cmp
jno
inc
fnsave
lods
movb
popf
sub
fisttps
int
or
insb
rol
out
test
imul
fs
cli
and
negl
inc
jmp
loop
mov
sub
testb
fisubrl
mov
jae
jbe
dec
add
xor
ds
xor
mov
sub
aam
and
aad
push
cmc
stos
scas
jmp
test
jmp
pop
subl
pop
jp
adc
mov
test
and
jmp
flds
dec
cmpsl
dec
pusha
xor
ret
xchg
add
fidivl
jne
les
aas
jns
and
and
cld
roll
push
adc
call
push
xchg
inc
jae
repz
ret
push
in
cmpl
adc
dec
rorb
lea
xchg
mov
jmp
mov
gs
inc
sbb
cwtl
fs
mov
sbb
ja
out
add
mov
das
push
pop
jb
aad
mov
cmc
pop
pop
adc
or
sbb
xchg
push
jg
xlat
add
ss
sub
lahf
mov
xorl
data16
outsl
push
pop
inc
add
adc
orb
mov
xchg
mov
repnz
test
lods
pop
pop
or
inc
xor
mov
push
adc
lods
negb
dec
push
movd
lods
mov
call
fistpl
andb
cmp
jge
or
nop
mov
cld
aam
out
clc
pop
fistps
mov
xchg
std
jmp
mov
mov
ret
gs
dec
add
inc
pop
xor
lea
inc
xchg
or
shl
xchg
inc
adc
jle
arpl
xchg
xchg
sbbb
jb
sub
mov
pop
int3
jns
enter
cs
push
imul
je
xchg
pop
pop
and
or
fcmove
pop
fcomip
cli
and
aad
fdivrs
test
sub
mov
nop
pop
out
cmpsb
shrd
test
mov
pop
push
mov
push
loope
mov
mov
in
mov
mov
jmp
inc
insl
jmp
inc
adc
push
push
cmp
mov
cwtl
in
shlb
fmulp
test
out
cmp
imul
xor
sarb
cltd
pop
test
xchg
imul
popa
mov
mov
test
rcrl
cmp
test
mov
outsb
xor
inc
scas
cs
jns
pop
jbe
jg
jae
fisttpl
add
call
xor
dec
lcall
adc
jge
dec
push
add
mov
mov
pop
inc
cmp
test
in
movsb
xor
das
pop
dec
out
in
or
rcll
lret
inc
dec
or
mov
repnz
pushf
test
push
sub
adcl
daa
aaa
add
mov
jle
push
mov
loopne
xor
and
aam
jl
pop
rolb
jne
mov
pop
out
adc
leave
and
cwtl
and
lret
adc
and
ret
ljmp
cwtl
cmp
jb,pn
call
pop
in
pop
mov
pop
lds
jmp
inc
adc
repz
mov
sbb
xchg
and
dec
imul
test
mov
and
test
add
pop
add
fcompl
aas
ror
lcall
xor
sub
pop
mov
mov
adc
pop
sbb
or
pop
arpl
les
loopne
incl
pop
and
arpl
sbb
pop
push
jp
or
xor
imul
mov
cmp
popa
stos
jmp
dec
adc
xor
push
imul
sub
pop
cmp
pop
dec
adcb
loopne
mov
loop
mov
xchg
xchg
lahf
imul
mov
sbb
ficoml
adc
fldcw
mov
sub
xchg
jbe
mov
xchg
test
sti
push
fwait
pop
or
sub
mov
mov
or
xchg
pop
dec
inc
sbb
aaa
or
mov
in
xchg
lcall
or
clc
std
sbb
lahf
insb
movsb
roll
push
mov
in
jmp
jl
addr16
push
js
loopne
testl
mov
and
cmp
bound
test
stos
lock
pop
push
ja
lock
inc
xor
jae
jno
jg
lea
xchg
out
push
je
and
push
shl
arpl
push
sub
mov
fmul
out
imull
pop
xor
arpl
mov
cmpb
enter
inc
jp,pn
cmp
loope
push
jb
jle
dec
mov
xchg
push
in
adc
cmp
pop
js
pop
mov
dec
lock
cmpl
and
in
je
dec
jnp
jns
sub
push
cmp
xchg
imul
mov
adc
mov
ds
clc
pavgb
add
clc
imul
je
stc
jp
mov
pop
aaa
adc
dec
int
and
and
mov
out
inc
mov
cmp
mov
dec
das
ret
jl
andl
clc
inc
mov
xchg
or
sub
lods
lret
clc
mov
pop
mov
out
fdivrl
pop
jg
and
pop
and
into
sub
xor
and
je,pt
inc
mov
sub
lret
push
mov
movsbl
out
popl
inc
pop
icebp
jg
cmp
bound
cli
xchg
outsb
loop
pop
fwait
or
sbb
adc
mov
sbb
icebp
jg
mov
pop
adc
mov
and
inc
pop
adc
adc
jmp
lock
loop
mov
loop
ja
popl
mov
adc
adc
mov
test
fsubp
and
add
adc
cltd
pop
mov
pop
dec
jo
ret
iret
shl
data16
sub
and
popf
mov
loop
popf
dec
cmp
sbb
sbb
mov
aam
test
push
or
aas
sub
sub
inc
pop
jecxz
push
inc
mov
das
aas
sbb
jl
cli
cmp
push
mov
push
adc
jg
clc
jle
int
and
mov
jb
and
pop
and
out
loopne
outsb
sub
cs
or
aaa
sarb
movsb
ss
in
lret
jnp
adc
imul
and
add
push
nop
mov
sbb
xor
daa
xor
mov
dec
outsl
lcall
jnp
dec
adc
scas
mov
or
dec
lahf
jg
rorb
jge
out
xor
fdivrp
sbb
ds
xchg
sbb
push
jecxz
fbstp
push
addr16
loope
push
pop
xorl
in
pop
in
jmp
mov
mov
pop
dec
xchg
cmp
inc
gs
fstps
pop
pop
pop
add
enter
lea
dec
aam
mov
notl
mov
in
arpl
xchg
or
in
shll
push
fimull
int
pop
pop
jmp
imul
cld
pushf
hlt
cmp
jp
dec
sub
pop
lret
push
clc
jecxz
push
mov
mov
mov
dec
iret
or
ljmp
inc
subl
jb
mov
nop
mov
xchg
adc
scas
add
mov
sub
lcall
cmc
hlt
jge
js
xor
loopne
lds
jle
jnp
int3
pop
test
rorl
and
ljmp
scas
movsl
jge
dec
cmp
movaps
shlb
adc
inc
add
out
scas
and
enter
or
sub
adc
push
fmuls
scas
mov
test
sahf
ljmp
cmp
es
in
scas
jle
cmp
sbb
sbb
fisubl
pop
cli
adcl
fwait
test
ljmp
or
mov
vpmacsdd
cmpsb
in
rcr
push
pop
push
fistps
adc
jno
jl
std
mov
pusha
out
adc
cli
shlb
std
dec
inc
pushf
mov
pop
in
nop
cmp
cmp
iret
mov
push
inc
test
sbb
inc
inc
in
pop
in
cmp
lds
mov
stos
mov
loopne
cld
sub
pop
ja
in
adc
clc
xchg
pop
mov
int3
std
jnp
out
arpl
fistpl
dec
leave
add
cs
fwait
dec
push
sub
fwait
push
cmp
repz
adc
stc
insb
sti
mov
stos
adc
sub
mov
jno
imul
into
shlb
fidivrs
push
xchg
decl
adc
scas
xchg
aas
mov
jae
daa
and
pop
push
nop
jmp
and
shr
sbb
pop
adc
mov
lcall
sub
das
scas
inc
aad
das
adc
inc
daa
cmp
push
or
lret
mov
in
je
inc
push
sti
add
mov
dec
test
adc
push
sbbl
adc
mov
repnz
push
xor
mov
jmp
push
pop
leave
adc
xchg
cli
jle
andl
sbb
shrl
adc
push
xchg
sub
or
jnp
mov
dec
repz
mov
jbe
loopne
dec
and
xchg
fidivrl
lahf
mov
adc
aam
push
fs
push
dec
inc
jg
pop
loop
mov
xor
mov
mov
push
inc
and
in
gs
jmp
or
arpl
lds
mov
adc
loope
pop
mov
sbb
popa
inc
clc
outsb
mov
mull
add
xor
out
push
inc
cmp
sbb
pop
or
es
xchg
cmp
xchg
shr
push
jo
cmpsb
lcall
mov
test
adc
out
cmp
aas
repz
mov
mov
jg
ljmp
push
adc
xchg
xchg
out
testb
fcmovne
int
int3
mov
fucomi
add
dec
sbb
or
xchg
shr
inc
or
adc
lock
add
movsl
inc
and
mov
sub
negb
add
addl
push
jne
repnz
jae
adcb
xchg
dec
xorb
dec
ja
test
mov
in
and
pop
dec
icebp
mov
cmp
xchg
pusha
in
shrl
xchg
add
cltd
xor
dec
or
dec
mov
push
adc
jge
inc
push
xchg
xor
inc
insl
or
iret
icebp
out
clc
bound
imul
jns
pop
iret
je
dec
sbb
mov
orl
mov
bound
insb
xor
mov
pop
pop
jp
imul
cmp
dec
iret
pop
jno
mov
pusha
lds
sbb
movsl
mov
lock
pop
add
inc
inc
sbb
pop
js
xor
stos
fs
sahf
mov
in
cli
stos
stos
loop
jns
mov
into
cmpsb
xchg
test
enter
dec
popa
test
mov
xor
movsl
pop
popa
jns
cwtl
mov
clc
mov
or
jmp
inc
addb
xor
test
lahf
test
rcrl
jge
in
imul
in
scas
cmp
lods
xchg
cmp
insb
in
xchg
subl
div
xchg
xchg
imul
pop
mov
sahf
movsb
daa
mov
add
cmp
mov
pop
pop
fcomps
outsb
imul
add
and
cmp
sub
cmp
or
mov
mov
cmpsb
dec
rclb
add
ror
stos
sbb
imul
jecxz
pop
pop
loop
lcall
rcrb
xchg
push
negl
jae
test
mov
jnp
sub
push
sbb
stos
into
jecxz
dec
push
fstpt
jmp
pop
cs
sub
ret
lcall
jg
adc
shr
inc
dec
inc
fcomip
lods
inc
dec
lahf
stos
pop
aaa
into
in
fnstsw
push
lret
imul
xchg
outsb
adc
jno
jae
pop
movd
add
xchg
in
test
pop
scas
adc
or
add
mov
std
mov
scas
das
mov
mov
cltd
ret
xchg
lahf
fs
lods
outsb
xor
pusha
mov
jl
cwtl
lock
mov
xchg
test
cmp
sub
insb
add
adc
cwtl
lret
push
test
loop
xor
sbb
rorl
testb
jno
pop
pop
mov
jecxz
repz
idiv
jge
pop
fdivrl
int
push
adc
repz
popa
xor
push
push
movl
adc
lahf
push
cld
dec
out
mov
xor
mov
bound
in
or
stos
out
sbb
ss
stc
outsb
jle
mov
pushf
mov
xor
cmpsb
jmp
insl
push
nop
adc
lret
xor
push
jecxz
and
mov
test
jle
adc
sti
pushf
and
ret
hlt
mov
mull
pop
popa
lret
jb
loope
arpl
pop
push
les
aad
mov
lret
into
test
fisubl
mov
jle
or
mov
mov
mov
mov
xchg
cmp
in
mov
jecxz
xorb
or
jo,pt
pop
cld
fs
mov
into
data16
aad
and
sbb
add
mov
jb
fldl
push
push
por
pop
sbbb
sbb
jecxz
pushw
rcl
repnz
insb
inc
cmp
in
push
fisubl
sub
lea
inc
fcomi
cmp
jnp
movsl
pop
clc
xchg
sub
jbe
push
sbb
push
mov
sbb
loop
fnstsw
lcall
ret
cmp
test
pop
fcmovbe
jbe
shl
cmpsb
or
adcb
sbbl
aaa
sti
cmp
pcmpgtd
mov
pop
popfw
inc
lds
dec
sbb
mov
and
xor
jmp
in
rcr
test
pop
cmp
sub
pop
mov
xchg
cmp
adcl
mov
dec
rcll
xor
push
inc
dec
and
dec
lds
cmp
insb
adc
out
mov
in
jns
inc
pop
sbb
lret
inc
push
xor
sbb
jp
add
data16
sub
mov
ret
in
loopne
and
leave
xor
pop
sbb
outsb
sbb
jo
add
daa
test
jle
stos
cmp
sub
lahf
lcall
adc
orb
cmp
adc
fs
push
jmp
and
cwtl
inc
ss
mov
push
adc
jmp
xlat
xchg
mul
clc
sub
push
pusha
imul
or
js
in
mov
insb
jmp
cld
stc
inc
or
sub
dec
clc
lret
fcom
ja
xor
jmp
cmp
cmc
insl
inc
cwtl
into
popl
les
insl
js
mov
leave
adc
mov
fcmovnbe
xchg
push
add
nop
xor
popf
mov
call
rorb
scas
stos
lahf
popf
shr
outsl
xor
lods
and
testl
lcall
subb
imul
mov
loope
dec
je
hlt
inc
arpl
pop
stos
pop
cli
sbb
sub
mov
cli
xchg
sbb
jle
ret
popf
mov
mov
adc
scas
mov
push
pop
loopne
aaa
or
outsb
ja
ljmp
repz
psrlw
ds
pop
outsl
mov
nop
out
or
shlb
jmp
jb
loope
mov
leave
bound
sbb
lea
xor
bound
aad
jb
pop
mov
sti
push
add
flds
cwtl
cld
and
in
inc
jns
xchg
add
mov
mov
and
cmp
insb
fs
jns
fstl
ss
jo
cltd
cmp
cmpl
cmp
jl
jb
bound
sbb
pop
mov
into
sbbb
dec
sbbb
xor
dec
mov
fstp
aaa
fldt
or
inc
sub
mov
fstps
fs
imul
out
rorl
sub
stos
pop
fdiv
pop
mov
jmp
sbb
dec
push
fwait
out
cmp
xor
jo
cli
inc
aaa
mov
imul
mov
lock
imul
cmp
jne
incl
cmp
fstpl
pop
aas
xor
and
jne
sbb
and
fsubrs
xor
inc
xor
jmp
insb
dec
das
jmp
jmp
xchg
mov
gs
mov
ja
inc
mov
test
jne
pushf
jle
jecxz
stos
das
push
push
fiadds
mov
xor
inc
adc
pop
das
mov
and
add
xor
pop
hlt
add
subb
shl
aas
pop
mov
shrb
inc
inc
outsl
xor
adc
loopne
xor
in
fdivr
xor
cmpsb
fwait
sbb
loope
inc
cmp
mov
or
cld
push
mov
in
mov
je
loop
or
add
sub
xchg
iret
pop
gs
pop
or
mov
xchg
pop
add
jmp
movsl
xchg
push
out
xchg
mov
push
in
ret
push
or
xchg
xor
push
das
lret
test
xchg
lock
inc
lahf
lock
jbe
mov
xlat
xor
stos
pop
lahf
loop
lahf
jge
loop
jno
or
cmp
imul
pop
icebp
inc
mov
xchg
dec
imul
das
mov
xchg
pop
ljmp
cld
insb
mov
mov
sbb
sbb
sbb
out
push
aaa
add
movsl
idivb
push
sahf
push
sahf
and
dec
and
test
jb
lds
fldl
cmp
es
lock
sbbb
cmp
sub
lcall
xor
sub
lret
out
aam
dec
jne
stos
mov
add
jl
cmpsb
in
xchg
pop
adcl
mov
jne
out
fs
movsb
aas
ret
lock
js
jb
mov
mov
in
add
mov
or
xchg
cmpb
push
nop
out
and
dec
xor
insl
sbb
add
jmp
pop
dec
lret
cmp
cmpsl
mov
adc
mov
fs
sub
mov
cwtl
hlt
xchg
inc
dec
jg
lret
mov
out
push
das
stc
ret
mov
inc
dec
mov
cmpsb
mov
jnp
aas
outsl
jp
btc
cmp
jecxz
ljmp
clc
add
enter
push
cltd
jb
mov
je
cbtw
loopne
inc
data16
jl
out
mov
shrl
fcoml
test
pop
xor
sbb
xlat
dec
aas
dec
std
paddd
inc
test
dec
ja
out
push
aas
ljmp
fcoms
out
outsb
add
xchg
faddl
aaa
or
mov
idivb
pop
cmpsl
and
jle
movsl
or
lock
lahf
fcmove
loope
lods
cli
cmp
popf
comiss
repz
mov
pop
cmpsb
ret
mov
pop
pop
ret
inc
mov
aaa
cmp
rcrl
mov
xchg
in
sbb
or
cmp
repz
inc
sbb
data16
loopne
jnp
push
xchg
mov
and
pop
dec
scas
mov
jnp
add
add
adc
jb
or
gs
and
sub
xchg
test
adc
shlb
outsl
add
mov
cmp
stos
sub
movsb
pop
mov
xor
shr
push
mov
fcomip
mov
stos
add
mov
cltd
lret
push
mov
add
cld
sub
pop
movsb
sti
sbb
and
jl
dec
mov
ja
jp
scas
fisubl
adc
push
test
xor
xor
sbb
stc
faddl
pop
std
mov
icebp
ror
adc
les
and
cmc
pusha
mov
data16
stos
rcr
inc
add
push
dec
mov
in
mov
push
aad
repz
xlat
in
jle
out
popf
adc
outsw
mov
xor
add
mov
jns
push
sbb
arpl
xchg
sbb
out
inc
gs
fdivrp
lods
ja
mov
das
jmp
mov
jae
jae
in
fiaddl
mov
sub
ds
mov
enter
aas
incb
mov
push
fisttpll
stos
xchg
inc
mov
cmp
push
int3
das
and
mov
xchg
mov
jno
pop
or
pop
inc
ss
pop
loopne
mov
mov
mov
ljmp
pop
dec
lcall
add
xor
inc
sti
and
sub
and
ret
ror
test
fsubs
cmpsl
jl
adc
mov
xchg
adc
orb
xlat
mov
xchg
jne
mov
jge
fldt
pop
push
mov
sarb
popa
xlat
lock
and
pop
mov
cmp
iret
rcl
or
pusha
iret
jne
add
mov
mov
pop
jg
ja
int3
cs
add
xor
test
jp
cmp
ljmp
add
fs
mov
inc
imul
stos
pop
orb
js
xor
mov
xchg
insb
push
inc
daa
movsl
inc
mov
clc
adc
adc
mov
aad
xor
and
imul
cmpsb
fcoml
inc
or
sbb
pop
sbb
fildll
clc
fldcw
inc
or
pop
dec
sub
nop
les
ret
insl
jle
int3
fnstsw
xor
push
xor
or
jmp
push
xor
push
pop
subl
int3
std
or
mov
jns
repz
push
fcomps
in
lret
mov
or
cli
sub
push
sbb
lcall
inc
les
sbb
repz
jecxz
outsb
adcl
int3
push
lahf
andl
movsb
fistps
xchg
sbb
and
fwait
add
sub
mov
cmp
or
cmp
into
out
enter
sahf
int3
aam
es
or
dec
push
pop
movsl
aad
add
mov
insl
mov
data16
jno
jmp
and
clc
mov
cmp
or
mov
aaa
sbb
lret
sbb
inc
sub
jg
push
mov
add
rcrb
cmpsb
scas
out
gs
mov
sub
mov
rorl
mov
inc
xchg
cwtl
icebp
pop
mov
push
mov
lret
push
shrb
jge
inc
jae
out
scas
xchg
ret
jmp
or
pop
fildl
iret
push
call
push
cmp
mov
js
repnz
js
xchg
lret
fisubl
in
adcb
and
sub
arpl
sbb
add
dec
subb
push
nop
arpl
inc
xor
jae
bound
fdivl
js
and
enter
xor
push
push
inc
enter
add
mov
int3
stos
mov
into
repz
mov
push
inc
aad
xor
lret
push
ja
push
add
and
inc
aad
shrb
push
and
cwtl
push
pop
test
push
addr16
cmpsb
inc
sub
push
fisttps
pop
clc
test
jbe
inc
cmp
test
stos
pop
xchg
adc
in
add
inc
out
movsb
mov
inc
sub
pop
je
fst
fiaddl
xor
jge
mov
inc
pop
jb
insl
into
mov
mov
mov
aas
jle
mov
xor
push
and
adcl
repnz
rcll
out
xor
pop
shl
cld
jecxz
xor
nop
insb
jno
pop
out
lret
int3
faddl
addr16
xlat
adc
dec
in
xlat
shr
add
mov
fxch
mov
cltd
inc
sbb
dec
subl
ficoms
pusha
int
xlat
push
popf
inc
mov
imul
pop
lock
xchg
fidivl
sub
and
aaa
pop
mov
push
fcomps
inc
fmuls
push
mov
lcall
movsl
aaa
sahf
cmpsl
mov
loop
addr16
mov
call
pop
cmpsl
fcmove
xchg
and
pcmpeqw
cli
and
shll
subb
pop
rcrb
mov
roll
inc
and
adc
push
cwtl
jo
xor
jmp
rcrb
lods
ficoms
out
gs
fisubrs
outsb
add
shlb
rcr
xor
dec
mov
in
push
ljmp
adc
xchg
lods
lret
mov
popf
scas
fwait
push
mov
mov
xchg
sub
push
push
xor
imul
mov
out
dec
repnz
add
leave
xor
pop
rclb
or
enter
lahf
lcall
pop
or
aas
cltd
jecxz
sbb
sarb
aas
imul
mov
adc
in
inc
call
out
mov
adc
push
jl
push
in
enter
dec
xorl
jmp
mov
out
push
lods
dec
add
lahf
pop
jge
int
sbb
sub
leave
cmp
sub
movsb
mov
mov
test
iret
jp
out
xchg
and
push
sbb
push
ljmp
and
inc
xchg
jle
fstpt
xchg
and
loopne
stc
pop
loope
add
pop
repz
pop
push
sti
in
push
add
inc
mov
cltd
ds
shll
push
pop
lahf
aad
lds
adc
xor
jbe
shrl
cmovb
movsl
daa
ds
jmp
lcall
jl
outsb
dec
fnstcw
and
cmp
mov
or
cmp
nop
mov
aaa
notl
imul
test
imul
push
mov
ss
movsl
jecxz
int
ror
pop
pop
mov
or
xor
fmulp
mov
add
addb
jecxz
aas
push
cwtl
push
pop
push
dec
cltd
in
iret
push
lret
mov
fucomi
adc
inc
arpl
movsb
ret
pop
push
push
pop
mov
sub
int3
outsl
dec
mov
push
fidivl
aad
je
int3
mov
loop
cmpsb
xor
inc
inc
dec
test
enter
decb
aaa
lds
std
lock
mov
adc
decb
cmp
mov
mov
inc
jmp
pop
xchg
popa
fmul
push
inc
add
dec
lds
clc
add
xchg
adc
incb
addb
jecxz
fisttpll
lea
lahf
icebp
pop
jae
adc
cmp
jns
inc
jecxz
or
js
add
mov
inc
lret
mov
push
pop
loopne
mov
addr16
or
rolb
sti
mov
sqrtps
loope
insl
fwait
cmpsl
fbld
filds
mov
xchg
jp
daa
ds
xchg
pop
jns
adc
repz
mov
sbb
and
jnp
cmp
inc
pop
aad
mov
jp
aaa
or
xchg
dec
sbb
inc
xchg
add
dec
mov
and
pop
out
shrb
in
push
push
enter
sub
hlt
data16
jge
scas
movsb
iret
leave
xchg
scas
in
sub
mov
mov
mov
lock
xchg
mov
pop
js
data16
ja
mov
mov
pop
shlb
cmp
setp
outsb
aas
fbstp
bswap
les
in
aaa
xchg
lahf
cmp
cmp
mov
pop
xor
pop
and
mov
aas
pop
add
sub
pop
sub
mov
dec
clc
dec
pop
pop
adc
imulb
hlt
push
mov
sti
das
cwtl
sbbl
aad
and
sub
dec
add
inc
inc
les
fnstsw
pusha
add
subl
fdivl
int
bound
call
and
mov
fisubrl
mov
int3
pop
jo
seto
das
arpl
dec
and
sbb
push
pusha
jecxz
imul
stc
mov
cmp
sti
pop
mov
mov
push
mov
cld
movsl
adc
fcoms
lea
and
ret
addr16
dec
sbb
test
into
ss
les
lret
pushf
jo
fidivrl
adc
mov
xchg
or
jmp
fwait
add
inc
xor
sar
rcll
addb
enter
and
dec
and
stos
adc
mov
outsl
lea
sbbl
mov
or
mov
lds
cmc
cltd
leave
imul
scas
mov
xor
test
int3
dec
or
xor
mov
cmp
mov
mov
sbb
stos
mov
cmp
dec
sar
aad
mov
add
icebp
cs
dec
sub
addr16
push
aas
test
push
rol
pop
lcall
push
cmp
inc
adc
inc
daa
scas
addl
cmp
jmp
test
ljmp
or
lods
xor
push
stos
jns
cli
lcall
cmpsb
inc
adc
jecxz
test
pop
xor
mov
mov
jmp
fnstsw
mov
out
lret
mov
mov
pop
fwait
inc
mov
gs
sub
cmp
push
cltd
incb
iret
xchg
ds
mov
jns
mov
divl
xchg
std
pop
push
mov
ret
mov
inc
scas
mov
mov
push
es
addr16
inc
movsb
jb
mov
fistpll
adc
mov
fisttpll
inc
mov
add
sar
mov
cmpb
pop
jecxz
outsb
loopne
pushw
fmuls
mov
mov
mov
lock
gs
jno
cmp
pop
and
sub
sbb
fs
pop
loopne
lea
cmp
sub
dec
sub
sub
int3
mov
pusha
mov
fldcw
es
xchg
out
add
cmp
push
xchg
mov
sub
lea
insb
mov
or
gs
pop
lds
cmp
dec
cmp
repz
xchg
std
jge
call
push
sbb
or
test
shrl
sbb
xor
inc
add
fnstenv
in
push
pop
insb
inc
ret
xor
push
cmp
outsb
jmp
das
xchg
pop
cmp
mov
pop
fdivl
pop
lea
cli
push
aaa
or
aas
and
xor
cmp
clc
ret
pop
mov
inc
or
loop
aad
leave
testl
jb
lahf
lods
movsb
repz
mov
mov
enter
add
mov
and
pop
rcll
sbb
scas
lcall
ja
or
out
daa
sub
les
in
outsl
fld
sbb
mov
fbld
shlb
fimuls
push
jg
pop
es
push
jmp
roll
fadd
mov
xchg
mov
inc
lock
or
pop
sbb
add
lret
sub
mov
negl
call
fsubp
lds
add
imul
mov
sbb
movsb
arpl
cld
inc
mov
mov
mov
test
sub
enter
pop
lea
out
mov
rol
push
pusha
pop
les
mov
xor
jnp
jecxz
push
in
test
sbb
imul
sti
mov
xlat
mov
jne
xchg
daa
rorb
scas
push
and
adc
imul
dec
insl
xchg
fcmove
test
mov
ret
adc
and
cld
test
ficoms
push
idivl
in
sbb
js
mov
leave
mov
inc
cmp
pop
push
pop
and
in
xchg
popa
loopne
aam
int3
push
mov
cmpsl
inc
push
jb
sub
and
imul
inc
inc
cmc
adc
imulb
sahf
or
mov
xor
aam
push
xchg
loop
into
mov
repnz
cld
leave
lret
mov
adc
pop
mov
leave
sub
sti
fdivrs
mov
xchg
pop
push
jb
inc
stc
stc
pop
je
dec
dec
orl
cmp
add
mov
into
cs
ds
cmc
les
pop
push
sbb
iret
sub
lods
mov
lods
pop
movsb
xlat
out
inc
jle
mov
adc
aas
cwtl
inc
mov
rclb
lret
cmc
decl
insl
testb
out
xor
repz
xchg
mov
test
and
js
inc
add
xor
dec
pop
ljmp
xchg
mov
xchg
adc
cmp
pop
mov
dec
and
and
jo
or
jle
cmp
jno
incl
lods
xor
jge
fdivl
fbld
ds
out
jmp
jno
shl
icebp
addb
push
lea
dec
and
sbb
xor
outsl
cli
cmpsl
loope
ljmp
push
into
push
arpl
scas
popa
jmp
xor
jnp
ss
sub
ffreep
pop
dec
jle
add
push
mov
movsl
in
out
idiv
sahf
inc
pop
push
stos
sbb
push
pop
jecxz
lods
lds
mov
adc
push
sbb
lret
out
or
and
hlt
in
inc
cmp
psllq
mov
cli
mov
imul
xchg
dec
idivb
xor
outsl
push
jmp
pushf
inc
repz
mov
mov
outsb
xchg
stc
push
pop
fdiv
xchg
setb
sbb
jp
lret
sbb
je
jb
cmp
mov
clc
stos
cmpsl
filds
mov
jb
idiv
movsb
xchg
fwait
in
repnz
cmp
or
daa
add
cs
or
cs
je
test
dec
fwait
adc
imul
xchg
dec
adc
pop
xchg
dec
cltd
pop
std
js
stos
xor
jnp
sub
stos
push
add
mov
ret
xor
mov
mov
jecxz
cmpsl
and
cmp
cmp
jg
bound
sbb
add
mov
mov
cs
das
push
push
adc
ja
testl
outsb
mov
jmp
into
negb
adc
pop
push
mov
pop
call
jp
mov
scas
pop
aad
outsb
xor
js
fwait
lret
sbb
mov
xor
adc
sbb
push
mov
inc
subb
pop
cmp
inc
jne
dec
pop
mov
mov
pop
lret
jbe
lods
inc
xor
dec
lcall
test
jb
adc
lret
push
fs
pop
or
mov
mov
test
call
push
sbb
pop
insb
jbe
jne
int
and
xchg
dec
mov
xor
popf
xor
cwtl
dec
lods
sbb
cs
add
adc
cld
imul
pop
pop
pop
stc
popf
aaa
push
faddl
call
push
pop
add
sbb
dec
or
scas
add
imul
stos
mov
dec
ss
stc
adc
mov
das
loopne
sti
repnz
call
jecxz
pop
out
add
imul
mov
je
and
sbbl
movsb
mov
aaa
and
pop
mov
leave
mov
imul
in
rcr
xor
jo
xchg
loop
repz
sahf
cld
mov
cmp
xor
dec
data16
pop
sbb
mov
xor
cmp
jo
or
data16
dec
clc
nop
dec
popa
cmp
mov
xchg
in
orb
push
ss
loope
cli
or
xchg
loop
cmpsl
pop
loopne
imul
popa
outsl
add
loopne
cmp
xchg
mov
sqrtps
pop
or
leave
push
stos
dec
xor
movsl
sahf
rcrl
mov
lret
mov
mov
add
pop
stos
cld
pop
insl
lea
jle
sbb
sbb
cmp
mov
aaa
pop
rclb
cmp
movsl
mov
les
jmp
imul
adc
adc
mov
ja
in
sti
sbb
into
hlt
bnd
and
jmp
cli
cwtl
mov
sub
in
jecxz
push
stos
sub
pop
mov
push
imul
lea
jmp
pop
aam
xchg
ret
and
pop
mov
repnz
cmp
sub
repz
mov
mov
arpl
add
pop
popf
ds
jb
repz
push
jb
xchg
iret
push
adc
pop
mov
fiadds
pop
cmpsb
mov
mov
sub
pushf
or
out
call
fistps
pop
pop
jae
push
jecxz
and
sub
and
fdivr
arpl
xchg
addr16
mov
xor
lcall
jg
add
cmc
fildll
dec
inc
push
adcb
cltd
sarl
mov
daa
ret
fs
dec
xor
dec
add
sub
test
cmp
cmp
cmpsb
ja
jnp
cmp
cmp
ficompl
test
adc
int
xchg
mov
jbe
or
or
ret
lahf
ljmp
dec
stos
test
mov
xchg
and
inc
insl
lret
jbe
pop
js
cmp
imul
dec
or
cmp
iret
aam
pop
jo
add
mov
and
mov
pop
cmpb
mov
pop
cmc
sahf
popf
sub
mov
xchg
pop
and
pshufw
mov
in
mov
pop
int
jae
pusha
mov
orl
mov
addr16
outsb
enter
cltd
push
sbb
fidivrl
jl
jl
and
iret
in
arpl
ret
in
jp
xchg
mov
shlb
mov
inc
testl
test
out
mov
sub
test
lret
mov
lds
xor
xchg
jg
or
ds
sahf
jns
das
fs
mov
cmpsb
cmp
mov
loope
jp
cmp
sub
mov
xor
mov
dec
lods
adc
mov
icebp
ss
cmpsb
hlt
fwait
in
cmp
sarl
outsb
sub
xor
ja
movsb
aam
imul
cwtl
cmpsl
push
jp
pop
and
sbb
mov
fimuls
xor
test
jo
icebp
or
cwtl
and
orb
mov
cmp
sub
repnz
lods
sub
mov
loope
flds
pop
dec
iret
pop
outsl
popf
ljmp
loope
push
mov
jb
roll
jp
mov
mov
cwtl
push
jne
mov
mov
filds
or
mov
std
and
mov
fsubl
mov
or
pop
movb
arpl
aaa
sub
dec
dec
xchg
ds
fisubrl
pop
lret
stos
xchg
scas
xchg
adc
sub
xor
xchg
insb
jecxz
sti
pushf
andl
int
test
sbb
sbb
dec
sub
push
stc
push
jp
jl
mov
notb
sti
inc
xchg
or
loope
mov
fisttpl
sbb
std
mov
sub
pop
shlb
lds
adc
inc
xchg
jmp
iret
mov
xor
jo
and
mov
xchg
aam
das
jbe
dec
imul
push
jmp
xchg
ds
mov
push
loopne
repnz
jmp
gs
xor
shrl
mov
sbb
sub
cmp
cmp
xor
lods
stos
mov
gs
push
mov
push
sub
mov
int3
test
imul
sbb
aaa
dec
sbb
icebp
mov
mov
scas
sub
and
sub
xlat
pop
mov
imul
and
loope
into
inc
imul
nop
out
bnd
cli
out
push
mov
push
sbb
shl
call
xchg
in
dec
jo
std
fs
mov
jno
lds
je
pop
xor
push
pop
lock
sbb
jmp
inc
addr16
je
fists
xchg
sbb
gs
imul
pusha
movsl
dec
mov
das
xchg
arpl
in
scas
testl
jb
add
mov
aad
into
cmpsb
mov
aad
cmpl
fidivrl
aad
pop
xlat
outsb
into
fdivrl
inc
repz
repnz
or
inc
adc
inc
jo
pop
cmp
arpl
xor
xchg
cld
adc
stos
jecxz
mov
cs
cs
lcall
adc
and
mov
and
das
inc
pop
sub
int3
push
adc
test
hlt
arpl
xor
add
decb
fcmovnu
test
inc
aad
ja
rcrb
cmp
ror
cmc
mov
pop
jp
or
stos
mov
cmp
rcll
pop
out
xlat
nop
sti
js
pop
addr16
cmc
jl
inc
or
out
cs
dec
icebp
and
or
lods
mov
daa
xchg
pop
sahf
push
out
jmp
ds
jns
mov
stos
cmp
add
movsl
negb
jp
pop
cmp
cmp
adc
or
push
lea
xchg
dec
push
xchg
es
xor
sbb
cmpsb
out
sahf
inc
add
lods
retw
adc
jae
xor
sbb
shl
in
or
testl
stc
push
fnstcw
xchg
dec
in
mov
fistpll
adc
int
push
add
ss
lods
push
mov
or
lret
pop
xchg
xlat
in
shlb
mov
cmp
jbe
or
icebp
xchg
dec
adc
loope
bnd
push
and
mov
inc
lods
or
jbe
mov
mov
je
xchg
mov
loope
pusha
inc
arpl
testl
int
mov
push
xchg
aam
outsl
sub
inc
bnd
inc
stc
lret
addr16
rolb
sbb
lret
xchg
scas
xchg
push
xor
inc
sbb
or
leave
xlat
jno
loope
mov
pop
and
lahf
aas
mov
jne
ja
imul
js
cs
mov
fiaddl
je
pop
cs
cltd
hlt
iret
adc
jae
mov
cld
inc
popf
insb
pop
mov
ljmp
lds
and
dec
icebp
add
xchg
loope
push
movsl
jno
adc
mov
inc
and
mov
into
adc
mov
cmp
daa
cld
xor
xchg
xlat
or
xor
nop
mov
aas
mov
mov
inc
and
sub
ja
adc
cmpsl
push
out
xor
mov
xor
add
pop
add
fdivr
cmc
xor
subb
repz
iret
paddw
and
push
ret
cli
xlat
lods
mov
push
lea
hlt
xchg
inc
jmp
hlt
out
insl
add
mov
xchg
lcall
cmp
mov
hlt
push
fidivrl
cmp
repnz
in
inc
les
mov
enter
movsb
pop
mov
xchg
sbb
cmp
cs
lcall
dec
imul
repz
out
dec
jmp
ret
and
xchg
xor
dec
jp
aad
sbb
ret
xor
and
xchg
aam
jle
ja
sub
xchg
bound
stos
outsb
xor
cmpl
dec
testb
test
xchg
jns
xchg
sahf
jbe,pt
call
ss
mov
lea
xor
neg
hlt
outsb
movsb
jp
xor
mov
inc
ja
iret
insb
test
aas
pop
fisubrl
jae
inc
imull
push
sbb
adc
push
cld
mov
cs
stos
cld
adc
pushl
xorl
test
dec
mov
cmpsb
lods
cmp
addr16
imul
sbb
adc
out
clc
rcrl
inc
mov
outsl
inc
mov
jnp
mov
pusha
sub
push
mov
cld
add
or
lret
rorb
mov
movsb
inc
and
cld
pop
push
out
movsl
es
inc
mov
xchg
out
enter
jnp
jg
scas
xor
and
cld
push
mul
lret
jno
push
mov
ret
mov
ljmp
mov
mov
incl
fists
mov
test
in
sbb
lds
mov
sbb
adc
pop
or
lret
mov
mov
lahf
inc
adc
jmp
fwait
xchg
sub
les
adc
jae
adcb
sub
shl
fwait
repz
sahf
xor
xor
mov
push
sbb
mov
rolb
dec
sbb
xchg
in
dec
outsb
inc
lods
or
dec
jge
or
pop
jnp
daa
or
mov
insb
jg
mov
mov
xor
imul
lahf
call
sub
mov
mov
jae
das
setnp
xchg
repnz
aas
hlt
mov
pop
add
ffreep
mov
insb
lock
mov
sbb
fdivrs
pop
gs
mov
daa
or
das
and
jb
sar
push
mov
cmpsb
in
pop
push
dec
push
jns
dec
shll
push
in
sub
lds
push
xchg
xor
mov
dec
pop
lds
aaa
into
ss
test
bound
add
inc
add
sub
imul
mov
sti
fbld
cmp
push
int
cmp
sbb
sti
repnz
test
test
inc
int
mov
fidivrs
cmp
sub
mov
stc
movsb
or
pop
daa
shlb
in
xor
mov
aad
popl
pop
ljmp
les
popf
jb
mov
sbb
adc
rcrl
arpl
push
iret
or
xor
push
rcrb
mov
lods
mov
fcoms
into
dec
rol
in
fsubrp
jne
aam
scas
movsb
pushf
shrl
test
or
mov
bound
cmp
fwait
sub
mov
push
xchg
or
loope
in
inc
mov
push
and
add
jmp
js
leave
lahf
cmpsl
ret
iret
pop
fisubl
xchg
dec
fwait
push
fidivs
sub
mov
and
push
cmc
out
mov
add
lods
repnz
mov
sub
pop
sbb
mov
inc
daa
sbb
lahf
mov
sbb
insb
jnp
cmc
andl
jne
std
in
or
fstps
icebp
sub
insl
xor
aaa
pop
and
out
pop
jae
test
jo
xlat
add
sbb
jle
test
push
sbb
xlat
stc
in
mov
pop
and
call
push
pop
js
incl
push
or
jnp
ret
es
xor
add
into
jns
dec
cmp
or
movsb
add
and
out
aas
cwtl
fisubrl
add
xor
out
sti
mov
loopne
popf
repz
jg
popa
sbb
out
out
lret
push
xor
xor
out
jmp
icebp
inc
ljmp
mov
loopne
push
xor
nop
div
lods
cmp
mov
sub
sbb
xchg
jnp
repnz
dec
popa
and
lods
mov
mov
add
stc
cmp
jb
sti
das
stos
xchg
push
notl
les
test
arpl
dec
jg
cmp
clc
stos
adc
out
and
inc
jns
pusha
and
repnz
outsb
xchg
sarl
mov
mov
xor
fdivr
pop
insl
ret
pop
repz
call
mov
popa
mov
mov
xchg
push
adc
lret
nop
pop
or
in
mov
mov
loopne
icebp
adc
mov
push
int3
pop
cmp
push
cltd
shlb
or
fstl
or
lea
cmpb
sub
push
pop
iret
pusha
sub
mov
out
pop
xchg
clc
xor
call
push
insl
or
push
cmp
mov
outsb
sysexit
and
incl
xor
jns
scas
xchg
ss
mov
pop
outsl
jp
jg
adc
xor
movsb
sbb
cltd
cld
jno
pop
sub
dec
push
or
imul
mov
mov
out
rclb
sbb
ja
xor
jl
in
test
aaa
pop
out
mov
push
or
cmpsl
scas
cltd
ja
jns
or
adc
adc
scas
pop
xor
adc
mov
je
lcall
or
frstor
mov
jmp
movsb
mov
push
sub
sbb
and
adcb
dec
cmpsb
jge
mov
lahf
mov
ficoms
push
xor
adc
mov
test
das
push
adc
adc
frstor
or
jmp
in
inc
mov
sbb
push
push
lcall
sub
shlb
lahf
inc
fdivrs
cmpsb
int3
sub
fnstenv
mov
jb
test
mov
pop
jae
sti
insb
nop
mov
mov
sti
or
js
outsb
push
xor
add
mov
jge
shlb
fxch
movsb
xor
popa
xchg
arpl
cmp
xchg
cmp
cs
sbb
dec
jp
scas
add
mov
pop
cs
xchg
out
adc
rolb
sub
nop
cmp
lcall
add
cmc
bound
cmc
sub
xchg
pop
shrl
pop
filds
fdiv
or
inc
sbb
sbb
push
jne
daa
adc
repz
popa
add
lock
and
ss
jl
loopne
pop
enter
and
repz
jno
push
xor
mov
bound
scas
outsb
lock
cltd
out
outsl
push
jmp
jbe
jge
lods
xor
dec
iret
xor
ljmp
in
cmc
xchg
andb
stos
sub
imul
fisttpl
xchg
clc
jb
stos
pushf
lock
ljmp
std
popf
loope
stos
scas
and
in
jmp
movsb
icebp
xor
dec
adc
or
jne
lret
pushf
pop
rcl
mov
iret
and
pop
jbe
mov
les
jb
out
roll
add
mov
out
and
imul
add
add
cmp
or
dec
movsl
mov
add
push
fists
imul
iret
and
hlt
mov
cmc
xlat
and
cmc
nop
aam
xchg
das
repnz
mov
and
out
fisubs
and
jnp
mov
mov
data16
cmp
mov
xchg
ret
push
in
lock
shll
lock
cmp
inc
aas
imulb
add
cmp
push
ja
pop
lret
lock
cmp
xchg
fistps
jae
sbb
mov
dec
mov
xchg
mov
aam
movsb
vxorps
mov
leave
dec
loop
add
aad
mov
and
cmp
xor
test
dec
shr
subps
aaa
call
ljmp
adc
nop
adc
mov
push
jo
dec
inc
cmp
arpl
sub
ds
arpl
sbbl
cli
cmp
mov
test
pop
adc
lods
out
push
xor
jmp
loopne
pop
mov
test
stos
and
jae
or
hlt
rolb
mov
int3
std
shrb
mov
je
test
mov
fnsave
stos
xor
jp
jecxz
mov
push
je
es
ret
and
leave
loopne
inc
xchg
out
sub
or
push
outsb
lods
adc
es
mov
or
sysenter
je
scas
stc
sahf
pop
push
sbbl
popa
enter
bound
mov
sub
jge
mov
das
popa
or
mov
mov
xchg
jnp
add
leave
jl
addr16
push
pop
inc
clc
xchg
xor
nop
lret
xchg
add
mov
cmp
xor
push
dec
cli
bound
and
mov
xchg
mov
mov
fdivrs
rcrl
inc
in
nop
cmpsl
xchg
decb
ss
or
stos
xchg
out
mov
data16
in
repz
pushf
xchg
mov
lods
aam
stos
mov
adc
sub
faddl
sbb
cmc
add
cld
sbb
push
out
xchg
inc
andb
xchg
inc
adc
inc
sarb
push
push
fldl
sti
cmpsl
push
pop
jo
mov
arpl
mov
sbb
movsb
popa
mov
sub
pop
repnz
push
adc
rcl
test
push
in
or
mov
fucomip
mov
xor
negl
push
and
mov
pop
mov
dec
jg
int3
mov
hlt
mov
mov
mov
outsl
ljmp
loop
dec
lods
sub
rolb
shl
sub
cmp
movsb
inc
sub
insb
mov
pusha
inc
push
adc
js
pop
xor
push
ret
ss
nop
jl
jae
or
jb
sub
jo
inc
pop
scas
insl
sub
outsb
add
dec
inc
dec
push
int3
dec
sub
mov
jno
mov
mov
cmp
mov
fidivrs
adc
xchg
push
and
jbe
push
mov
loopne
xchg
loope
test
aaa
cmp
cmp
aam
test
test
repnz
in
inc
or
adc
outsl
mov
aaa
in
inc
sti
and
jecxz
nop
xchg
imul
aam
xchg
xlat
inc
add
push
xchg
mov
insl
pushl
jns
stos
cli
rorb
jmp
xchg
ss
mov
dec
jbe
imull
sub
sub
andl
pop
sub
jp
ljmp
ja
inc
jg
jns
mov
pop
or
rclb
xchg
lcall
sbb
int
fs
adc
xchg
lock
push
sbbb
push
andl
add
mov
jle
clc
in
cmpl
sub
gs
adc
iret
cmp
fdivr
mov
call
insl
add
scas
scas
xchg
inc
dec
leave
vmovsldup
jns
sub
int3
sub
or
pushf
cld
shl
addr16
jg
add
loop
add
pushf
jl
sbb
pop
sub
cld
iret
fs
mov
ret
and
sub
cmp
dec
cli
sbb
fmulp
jl
dec
inc
xchg
stos
pop
lcall
dec
sub
jo
cmp
push
sarl
adc
pusha
jns
mov
pushf
outsl
int
in
jge
sbb
xchg
jl
mov
icebp
mov
iret
sti
inc
stos
icebp
int
loope
mov
jl
push
mov
mov
cmp
pusha
in
dec
xchg
stc
ja
push
lods
push
xchg
paddusb
jo
mov
repnz
test
dec
ficoms
push
mov
je
add
pop
lahf
cmp
jbe
lods
or
pusha
mov
add
jb
shlb
loopne
jmp
jmp
movsl
mov
or
push
push
inc
andb
mov
daa
iret
cmpsb
in
or
flds
jae
adc
cmp
inc
sti
xorl
shll
fistl
mov
pop
mov
jecxz
stos
es
cld
scas
stc
fldcw
lcall
xchg
mov
inc
aam
shll
nop
cmp
push
add
adc
push
xorl
jl
lret
test
mulb
jb
xor
xchg
pusha
mov
outsb
cmc
outsb
into
pushf
cld
mov
andl
mov
inc
adc
roll
lret
xor
pop
cltd
outsl
ds
data16
push
jg
xchg
mov
pop
cmc
cmpsb
stc
xchg
fs
frstpm(287
repnz
popl
sti
dec
testl
mov
inc
push
mov
add
icebp
arpl
das
jo
inc
les
rcrl
fisttps
xor
xchg
lfs
pop
nop
ja
pop
idiv
clc
pop
mov
jecxz
adc
sti
push
adc
lock
xor
int
imul
cmp
cmc
push
arpl
mov
inc
test
int
outsl
jbe
jmp
mov
mov
ret
push
adcl
dec
fcoms
dec
jl
mov
jg
add
sahf
cmpl
and
scas
jo
mov
cmc
addr16
xchg
inc
cmp
jecxz
cmp
mov
xorb
fnstcw
or
dec
pusha
stos
subl
adc
mov
push
push
loop
sarb
cmp
aaa
loope
push
jno
and
or
mov
xlat
mov
mov
push
xchg
decb
add
aas
inc
jecxz
fwait
mov
mov
inc
dec
movzbl
and
outsb
pop
aam
fistl
sahf
add
jecxz
jne
push
test
push
add
dec
orb
xor
mov
sti
mov
xchg
test
push
or
lods
sbb
inc
xor
cmpsb
sbb
push
insl
aas
xor
jne
sbb
xor
mov
push
xchg
mov
jmp
mov
push
f2xm1
jns
imul
test
cltd
stc
sbb
xchg
aad
ss
dec
ja
add
fimuls
xor
push
push
cmpsb
mov
test
jmp
or
push
loopne
orb
nop
xchg
add
mov
xchg
dec
sbb
mov
xor
in
mov
stc
mov
insb
fdivrs
dec
cmp
aam
rolb
cmpsl
pop
dec
inc
icebp
and
stos
dec
repz
or
push
jge
in
xor
leave
xchg
clc
call
repnz
mov
mov
addl
mov
into
subb
and
ret
out
mov
fisubrs
mov
mov
pop
mov
or
mov
test
insl
inc
inc
dec
fbstp
test
outsb
or
mov
push
mov
push
nop
inc
pop
ds
push
popa
jae
sub
sub
ret
xor
and
mov
leave
push
je
cmp
arpl
stos
mov
cmp
dec
xor
shlb
pop
adc
add
imul
push
inc
dec
mov
ficomps
inc
call
outsl
jno
loope
andl
pop
out
push
test
push
pop
push
mov
pop
repnz
mov
cli
nop
arpl
jp
sub
movnti
add
lea
mov
inc
add
or
ret
push
jo
sbb
cmpsb
mov
jmp
outsl
fistpl
lea
js
leave
jl
fwait
dec
mov
sti
cmp
xchg
aad
loop
dec
or
fs
rcrb
mov
jp
push
adc
xor
call
push
mov
daa
or
leave
daa
imul
cmp
in
insl
mov
mov
les
cmp
lock
or
mov
mov
cmp
pop
xchg
sub
pop
mov
leave
xchg
push
mov
xchg
fwait
es
dec
mov
or
cmp
pop
aaa
fcomps
test
cmpsl
jl
aas
fdivrl
imul
pop
mov
lret
dec
repz
fs
js
dec
aas
popf
mov
pop
push
push
lret
cmc
jmp
pop
mov
ss
das
bound
push
add
ja
fisttpll
mov
xor
pop
cs
cmp
jo
ret
mov
lret
pop
and
imul
push
test
das
testl
sub
add
arpl
fidivrl
test
mov
xchg
jecxz
lods
insb
test
cld
sub
adc
mov
pop
cmp
adc
insl
push
mov
outsb
fs
pop
cmp
push
mov
loope
pop
call
aam
loop
imul
pusha
dec
fucomip
mov
aam
movb
and
push
xor
sahf
les
or
out
xchg
popf
ja
dec
add
mov
push
dec
add
lcallw
fnstcw
clc
jno
sar
inc
mov
xlat
lods
hlt
stos
std
push
pop
scas
xor
add
adc
in
xchg
stos
xor
mov
addl
mov
stc
mov
pop
int3
out
sarb
ds
rcrb
inc
enter
rclb
xchg
lret
cld
jl
lods
and
inc
xchg
mov
pop
adc
dec
or
insl
dec
clc
mov
xor
sbb
push
fildll
pop
shl
sub
pop
push
lods
mov
dec
pop
sbb
stos
add
mov
repz
pop
in
and
dec
mov
xchg
mov
xchg
pop
push
xor
jl
adc
adc
es
pop
pop
and
or
data16
flds
push
inc
inc
fwait
push
ljmp
daa
pop
sbb
push
nop
cs
sbb
cmp
rcll
dec
pop
repnz
rolb
xchg
mov
mov
jae
dec
xchg
xlat
icebp
fstpt
mov
ss
pop
push
xlat
les
inc
xor
mov
pop
jg
or
mov
test
mov
mov
out
sub
fdivrs
pop
xlat
push
mov
fisubrl
pop
jecxz
add
adc
out
andl
cmpl
repnz
inc
and
test
in
jg
ret
test
in
popa
and
mov
and
loop
fldenv
push
pop
sub
cmp
xchg
addr16
inc
in
movsl
push
cmp
dec
jecxz
adc
push
pop
sahf
mov
scas
outsl
lods
inc
cmp
enter
pop
fiaddl
rcrl
inc
or
pop
scas
mov
repz
nop
shl
fistpll
data16
ja
dec
lcall
hlt
loopne
adc
jl
mov
cld
or
cmpsb
pop
outsl
add
mov
xchg
or
aam
dec
scas
add
push
mov
adc
or
mov
or
cmp
in
jp
les
mov
cwtl
sub
stos
les
dec
clc
mov
in
in
xor
std
cltd
subb
jmp
shlb
pop
and
add
inc
lret
fadd
pop
adc
mov
les
arpl
adc
stc
mov
or
insb
mov
setg
ja
js
add
sbb
scas
roll
data16
sbb
lods
jns
pop
xor
lahf
loope
pop
filds
ljmp
rcll
push
mov
dec
push
dec
fisubrs
adc
in
pop
mov
pop
shr
insl
push
mov
jecxz
sub
cmp
movb
mov
inc
cmpsl
fnsave
jns
push
lcall
in
dec
xor
inc
in
fs
mov
sbb
xor
jmp
dec
dec
in
fiadds
push
ret
dec
dec
mov
mov
testl
bound
in
mov
ret
sub
rorb
mov
hlt
and
and
dec
out
hlt
mov
xchg
mov
xchg
sub
mov
subb
push
lahf
mov
stc
push
push
inc
or
jbe
arpl
aaa
xchg
jne,pn
sar
inc
jno
mov
or
hlt
mov
mov
int3
mov
stc
dec
and
arpl
adc
imul
outsl
inc
cmpsl
ds
push
movsb
adc
push
inc
inc
lret
sbb
jg
sub
mov
push
jg
jmp
mov
push
or
jbe
das
mov
int
nop
mov
je
sbb
pop
scas
je
negb
xchg
rorl
inc
jbe
xchg
inc
mov
int3
insl
xor
cmp
cmp
insl
idiv
jp
and
add
rorb
fildl
inc
nop
adc
bound
mov
insb
dec
jg
xchg
mov
cli
inc
fstps
inc
mov
xchg
dec
call
push
test
or
add
cltd
test
add
mov
cmp
mov
out
sbb
or
xchg
mov
int
cmp
cmpsb
mov
rolb
loopne
add
pop
enter
je
jle
or
and
popf
aaa
in
repz
mov
cs
xchg
or
cli
mov
add
addr16
or
pop
out
lcall
fdiv
and
xor
jbe
cmp
pop
repz
mov
mov
pop
rclb
aad
mov
inc
stos
xchg
int
test
cmp
clc
ret
mov
push
lret
imulb
jno
mov
test
sbb
mov
dec
test
mov
ljmp
mov
mov
lods
cli
dec
cs
add
lahf
adc
push
scas
jbe
scas
or
sbb
add
mov
fs
add
mov
stc
jno
dec
push
rorl
jae
add
cmp
out
adc
add
popl
ja
aas
out
mulb
popf
dec
les
outsb
jo
test
in
scas
fsubrs
xchg
xor
lods
mov
popa
loopne
lea
mov
nop
push
fimull
mov
nop
out
lods
jbe
xlat
cmp
and
and
push
mov
cwtl
add
leave
mov
jne
inc
out
mov
verr
mov
push
push
loop
cmpsb
ds
imul
fisubs
mov
or
inc
rorl
inc
mov
or
mov
mov
sub
jge
adc
pop
movsl
mov
dec
sbb
adc
fcomps
jp
sbb
push
inc
or
and
cwtl
ret
and
xor
std
jne
dec
in
stos
pop
inc
dec
xchg
hlt
popa
adc
in
into
push
mov
inc
sub
lcall
sbb
mov
int
sbb
test
fcmovnbe
adc
iret
push
fwait
mov
dec
rcrb
push
lea
adc
sub
mov
das
lahf
xor
ds
jmp
cli
mov
data16
fimull
sub
shrl
mov
cmp
adc
scas
mov
es
mov
mov
mov
jns
pop
xchg
aad
jmp
mov
or
add
mov
rclb
ss
fdivrp
stc
and
mov
lret
cmpsb
xchg
movsb
jns
cmpsl
xor
adc
cld
add
fcom
ja
add
or
jbe
sbb
push
aad
inc
cmpb
outsb
dec
nop
ret
pop
xor
popa
out
inc
xchg
rcr
jmp
int3
dec
pop
inc
xchg
jl
movsb
int3
xor
inc
ja
shrb
push
sbb
push
and
cmp
inc
cmp
pop
xor
adc
push
xor
mov
ja
popf
push
loopne
bound
fwait
jns
aas
out
not
dec
icebp
loope
push
js
or
lods
cmc
clc
sbb
jmp
popa
popf
loope
pop
dec
mov
aaa
lret
jo
dec
pop
add
inc
fidivrs
xchg
mov
mov
stos
or
sarl
stos
cmp
jp
ljmp
loop
cltd
adc
stos
xor
aaa
jno
mov
loopne
and
cmp
jno
pop
add
fidivrl
cwtl
xchg
imul
fildl
pop
add
mov
int
mov
vmovss
jp
shr
pop
and
fildll
add
mov
cwtl
push
push
jmp
mov
outsl
push
bnd
jle
call
mov
push
filds
in
rcl
mov
inc
ret
clc
lret
sub
sub
jp,pt
mov
pop
pop
inc
in
hlt
shlb
mov
leave
stc
or
mov
movsb
aam
cmp
jge
inc
cs
adc
inc
fwait
je
sbb
imul
aas
mov
jmp
pop
aad
sub
sbb
sbb
jbe
or
inc
pushf
dec
mov
arpl
out
ret
jge
inc
sub
jge
and
jg
or
das
cltd
xchg
sahf
fisttps
repnz
or
and
cmp
fadds
insb
cltd
mov
mov
inc
fdivrl
pop
data16
inc
xchg
iret
adcl
fisubs
data16
test
push
mov
adc
pop
pushf
sbb
das
repz
lahf
cmp
pop
and
adc
test
dec
mov
ret
mov
lahf
or
cmp
sarl
pop
out
imul
ljmp
sti
mov
daa
xor
jp
sub
aaa
adc
mov
stos
push
or
add
fcompl
push
fcompl
arpl
cmp
push
js
and
hlt
cmp
dec
add
mov
aam
xchg
push
loop
lahf
es
orb
xor
sub
lods
jg
inc
cmpsl
cmp
or
and
inc
ss
stc
leave
hlt
sub
aas
repz
rcrl
pop
inc
sub
sahf
notl
adc
xor
fldl
sub
push
imul
stos
in
cmp
in
jl
cmp
and
fnstcw
mov
xlat
add
ds
and
cld
add
mov
clc
cmp
push
sbb
mov
sbb
insl
lds
lea
mov
jge
bound
jbe
adc
fadd
popa
out
adcb
aam
lods
insb
bnd
pop
pop
mov
mov
aas
and
push
sub
lahf
dec
movsl
inc
out
mov
and
notl
push
fs
jge
sbb
mov
fisubs
stc
ret
decb
add
das
cltd
fiaddl
shlb
fadds
dec
push
adc
inc
mov
test
mov
into
ret
inc
or
inc
push
fldenv
repz
lock
dec
push
or
cmp
int3
pop
add
fisttps
jnp
mov
push
push
add
push
ja
push
mov
sub
pop
pop
loop
in
xchg
fsub
aas
inc
xchg
xchg
sti
adc
push
mov
xor
aaa
icebp
fisttps
mov
or
push
stos
or
cmp
adc
nop
mov
push
sub
ret
jp
incb
sbb
out
add
notl
sub
lods
cmp
imul
sahf
push
ja
adc
jne
addr16
inc
out
sub
fisubs
lods
add
pop
clc
loop
mov
aad
test
movsl
dec
cmp
push
lcall
jl
jae
xor
xchg
adc
sbbb
bsr
adc
addr16
mov
pop
dec
call
repnz
jb
mov
ret
mov
mov
das
mov
mov
adcb
fs
imul
ljmp
ss
bound
inc
jle
mov
bound
xchg
pushf
adc
movsl
inc
das
cmpsb
pop
lods
push
int
addr16
clc
cld
mov
shll
jecxz
mov
cmpsb
jmp
movsb
xor
pop
sub
mov
xchg
push
or
fs
mov
lfs
inc
mov
xchg
adc
adc
ss
cmp
lea
shrb
rcll
push
nop
leave
ficoml
and
dec
test
fsubrs
push
cmp
and
scas
xor
mov
xor
mov
lods
and
inc
xor
repnz
mov
jns
ret
shrb
std
into
das
cli
cmp
inc
es
push
dec
ja
jo
cmc
cld
mov
inc
xchg
jo
mov
dec
inc
cld
xor
and
inc
dec
pop
mov
dec
cmp
pop
push
andw
xor
mov
and
mov
imul
test
xor
addl
roll
cltd
ds
add
cmpsb
imul
ja
arpl
test
loopne
jb
cltd
xchg
mov
pushf
inc
enter
sbb
lcall
ds
xor
cmpsl
sbb
lods
jg
imull
cmp
adc
adc
ja
std
roll
shr
xchg
jle
mov
mov
push
sbb
xlat
scas
add
push
sti
bound
pop
test
rclb
mov
lods
push
xorl
in
lret
pop
xorl
movl
gs
cltd
sarl
or
flds
fucomip
mov
cmc
lock
mov
add
das
arpl
ror
adc
es
push
bound
mov
jns
push
lahf
push
adc
cld
xor
ret
inc
adc
inc
inc
mov
je
ljmp
inc
and
and
jb
jb
push
fistpl
mov
add
clc
leave
sub
in
cmp
loopne
jle
pop
jae,pt
aaa
imul
cmc
mov
lret
jp
xchg
adc
mov
jns
pushf
add
lret
nop
pushf
lock
add
lock
jo
icebp
in
fwait
mov
cmc
mov
test
push
push
or
xchg
ja
pop
jle,pn
lods
enter
and
std
xor
jmp
or
test
repz
mov
xchg
jno
fbld
pop
cmpsl
aas
rorb
adc
adc
push
sub
jle
sub
mov
or
sbb
mov
iret
repz
mov
stos
sti
jb
xor
mov
mov
dec
lock
cld
ret
clc
mov
stos
in
hlt
or
push
adc
scas
shl
sub
rcr
pushf
mov
repz
clc
jg
pop
ds
mov
jb
sbb
sub
ja
lea
stos
bound
jbe
jge
fs
xchg
lea
rol
sahf
das
imul
mov
xchg
pop
cmp
mov
loop
and
and
popa
cmp
data16
fildll
dec
push
popa
ret
mov
xor
sbb
mov
ljmp
xchg
ds
dec
mov
dec
js
enter
xor
mov
jns
adcl
jns
jo
lret
stc
sbb
in
fisubs
mov
cmp
jae
ds
in
xor
shll
jge
xchg
fdivrl
inc
scas
mov
ret
mov
fcos
adc
xor
cmp
stos
cmp
or
iret
mov
stos
mov
add
or
inc
repnz
js
dec
test
mov
cmc
loop
mov
xor
jle
xor
pop
mov
movsl
pop
clc
mov
popa
cltd
cld
pop
in
in
out
std
jae
pop
cmp
ja
push
adc
lods
cmpsl
fcoml
lcall
mov
mov
push
nop
frstor
cwtl
mov
sub
jp
pop
inc
insb
mov
pop
inc
push
pop
insl
mov
push
lcall
and
lock
test
mov
sbb
loope
out
ja
fistps
in
loop
jg
out
bound
pop
jnp
nop
pop
test
lods
dec
mov
xor
adc
adc
fsubrl
jne
cli
repz
cmp
mov
cmpsb
pop
xor
mov
in
jns
push
stos
xchg
xor
inc
sbb
addr16
mov
shll
in
mov
aam
fstp
in
fsubrp
fcomp
clc
and
leave
fmul
mov
lret
dec
cmp
sbb
inc
pop
int3
movsl
hlt
jle
jo
xchg
movsb
inc
jp
loopne
aam
inc
dec
mov
shlb
pop
xchg
sbb
mov
mov
jg
xor
mov
scas
or
inc
mov
fstpl
cs
mov
cli
adc
pop
inc
pop
imul
movsb
lods
lahf
arpl
into
ja
jg
sub
mov
xchg
or
mov
pop
sbb
jmp
adcb
push
sbb
cmpsl
fwait
test
in
add
jae
into
jmp
jne
cwtl
add
sbb
inc
add
sarb
lds
xchg
popf
add
cmp
xchg
mov
pop
sti
sub
jnp
sbb
mov
add
mov
stos
out
cs
push
xchg
aam
mov
dec
xchg
mov
mov
xor
call
mov
add
jp
lret
test
xor
inc
mov
adc
or
lret
or
pop
cmpb
mov
push
push
das
adc
or
cwtl
negl
inc
mov
dec
mul
xchg
dec
push
adc
mov
jb
xchg
ss
xchg
xorl
fwait
mov
cmp
jb
in
sub
in
imul
stos
outsl
sbb
das
mov
insb
out
rorb
std
icebp
in
cld
ja
push
cli
fldl
jp
cmpsb
pop
mov
mov
arpl
insl
sbb
mov
aam
mov
pop
dec
sbb
dec
mov
sub
dec
jne
or
sub
ja
mov
lds
mov
pop
xchg
cmp
xor
test
add
mov
cmp
shlb
loope
mov
xchg
cli
mov
and
add
push
cwtl
dec
pop
pop
xor
popf
stos
sbb
out
mov
insb
push
aas
cwtl
pop
mov
loope
push
shll
mov
arpl
or
int
add
sub
outsl
jno
adc
callw
mov
in
push
mov
sub
inc
es
xor
insb
movsb
and
fistpll
icebp
mov
icebp
int
inc
xchg
pop
das
jle
xor
in
cs
or
sub
imul
iret
bound
mov
testb
clc
mov
or
pop
jp,pt
movsb
mov
jnp
push
mov
dec
lea
push
bnd
stos
shrl
arpl
sbb
nop
mov
sbb
cmp
rolb
movsl
fcoml
fucom
adc
stc
mov
cmp
lea
pop
icebp
icebp
xorb
cmpsb
mov
xchg
sbbb
dec
hlt
xchg
xchg
sbb
mov
or
mov
movsl
jae
jns
enter
subl
sub
das
ret
pop
andl
loop
pop
or
jp
inc
sub
fstl
rcr
jb
or
push
jne
movsb
and
ret
xchg
jno
loopne
lods
or
scas
fs
lcall
adc
push
mov
insl
fistpll
pop
outsl
outsl
scas
mov
xchg
sbb
sub
push
out
push
frstor
mov
mov
inc
mov
mov
aad
pop
dec
jmp
jnp
enter
fstpt
mov
mov
in
shrl
fs
push
push
arpl
mov
push
lea
loope
xchg
movsb
fsts
mov
mov
dec
jne
call
mulb
addl
mov
mov
pop
dec
pushf
test
xchg
sbb
cmpsl
fwait
mov
stos
idiv
pop
and
nop
pop
jno
mov
add
push
mov
pop
jp
and
repnz
mov
cmp
cs
and
push
dec
sbb
data16
fstl
imul
inc
xchg
stos
lret
pop
jg
inc
mov
int
xchg
sarb
sti
das
adc
fcomi
movsl
out
movl
lret
in
das
stos
lea
hlt
fdiv
pusha
inc
fwait
out
outsl
movsb
and
sbb
jo
sbb
cmp
xchg
mov
icebp
ljmp
jl
shr
cli
aaa
jge
add
movsb
out
mov
cmp
cmp
adc
pop
mov
push
int3
xor
or
fistps
xor
pop
pop
mov
xor
inc
stos
adc
lock
mov
scas
pop
movsl
cmp
dec
mov
push
sar
push
pushf
mov
lock
out
jmp
lahf
and
sbb
push
incl
out
in
pushf
scas
movsl
fldt
je
in
insl
rclb
pop
push
data16
mov
pop
jmp
pop
mov
dec
int3
and
or
fnsave
test
ficoml
pop
dec
aad
sbb
or
mov
daa
jmp
pop
mov
jno
mov
jnp
sbb
out
and
lea
add
jp
sbb
push
out
mov
adc
insb
lds
mov
push
inc
sub
mov
xlat
out
push
adc
lcall
jbe
xchg
in
add
pop
jp
jmp
fsubr
mul
pop
lret
nop
push
nop
test
and
addr16
sbb
fadd
or
cvtps2pi
pop
inc
jo
mov
sub
jns
dec
and
pop
std
sbbb
jg
frstor
inc
ljmp
dec
and
push
ja
ljmp
mov
bound
push
repnz
fidivl
test
cmp
stos
mov
nop
data16
mov
xchg
fs
int
ficoml
fdivrl
inc
movsl
loopne
daa
loop
mov
sub
xor
adc
lea
movsl
sbb
pop
call
pop
inc
aam
xchg
push
out
lcall
adc
movsl
xchg
pushf
fs
dec
xor
int
movsb
shrl
sbb
lret
pop
dec
dec
pop
sbb
test
push
cmp
leave
in
xchg
mov
in
test
movsl
pop
ss
sub
jl
xchg
jne
mov
push
xor
test
xorl
jge
repz
xchg
and
stos
aas
test
dec
push
cltd
xchg
lahf
icebp
jge
mov
int3
dec
mov
push
mov
shl
rcrb
cld
fbstp
in
dec
paddw
sub
je
out
andb
xchg
cli
popf
dec
push
jl
or
push
cli
push
and
arpl
jne
test
lret
fdivs
loopne
clc
ja
mov
dec
jbe
cs
add
sub
pop
push
cmp
lahf
or
sbb
test
xchg
mov
add
out
jbe
pop
cwtl
sahf
mov
mov
int
cmp
es
mov
lods
xlat
dec
rorb
adc
xor
imul
xchg
iret
aam
pushf
in
repz
xlat
ret
add
in
sub
insl
addl
cmp
adc
incb
insb
pop
jl
xor
mov
push
mov
fdivs
xchg
pop
mov
pop
rorb
pusha
popa
stc
outsb
add
jle
in
sbb
insl
leave
mov
xchg
cmpsb
test
jmp
xchg
mov
jl
sahf
scas
inc
lret
in
xor
pop
ja
out
int3
mov
cmp
ret
outsb
sub
dec
fnstenv
xor
xlat
lret
sbb
add
lds
dec
std
or
je
dec
fsts
jae
mov
stos
mov
xor
js
jle
xor
ljmp
stc
dec
outsb
ret
push
jge
call
int3
xchg
call
or
add
ret
movsb
mov
bound
inc
adc
aas
pop
and
pusha
cmc
mov
test
pop
ja
sarb
lods
lret
add
test
rorb
imul
ja
das
pusha
sbb
dec
push
jg
sar
ds
jp
jno
scas
xchg
aaa
call
arpl
lds
daa
test
xchg
test
jp
xchg
mov
lcall
dec
scas
mov
push
sbb
pushl
inc
daa
inc
sarl
repnz
jmp
bound
sbb
sarl
fiaddl
push
mov
cmpsl
mov
in
outsb
sub
and
mov
push
inc
movsb
xchg
sub
movsb
sub
in
ds
adc
in
pop
inc
lods
mov
mov
ljmp
or
scas
lock
lock
fdiv
jno
scas
sbb
or
lahf
bound
push
bnd
cmp
rep
out
mov
push
push
pop
mov
xchg
iret
mov
into
xchg
and
fistpl
push
sahf
cmp
aam
call
and
mov
imul
push
inc
cmp
xorl
btc
out
xchg
js
jb
jnp
sahf
bound
add
jns
icebp
adc
rcr
push
adc
ret
ss
scas
std
push
loop
sarl
dec
aaa
test
scas
sbb
fucomip
fdivrs
mov
into
je
outsb
stos
xchg
pop
fwait
stc
xchg
out
nop
ljmp
inc
and
fldenv
aam
jbe
inc
and
fisubrl
fldl
dec
fs
and
mov
outsb
cs
movsl
mov
mov
lcall
inc
std
sti
xchg
mov
xlat
outsl
int
mov
sbb
add
pop
gs
push
push
or
inc
xchg
pop
cmp
xchg
pop
dec
or
ret
and
repnz
inc
repnz
fsts
lods
int3
mov
test
sti
inc
xor
daa
mov
jecxz
shl
pop
adc
jge
mov
iret
add
lcall
out
or
aad
lcall
sar
mov
repnz
jno
call
out
mov
xchg
outsl
sbb
xchg
sbb
or
add
adc
pop
pop
fs
add
rcrl
aas
in
fisttps
inc
and
pusha
lahf
jecxz
xor
cmp
fistpl
mov
jnp
sbb
scas
movsl
sbb
xlat
pop
lods
mov
inc
loopne
jb
xor
rcll
dec
mov
loop
das
dec
ja
ficomps
jmp
rcl
or
jno
sbb
xchg
loopne
jecxz
es
test
pop
adc
cmp
add
dec
out
cmpsb
and
mov
clc
cmp
inc
aas
sub
int3
jnp
xlat
mov
repnz
movsb
or
cmp
sub
cmpsl
sbb
in
lds
fmull
testl
aad
or
mov
adc
jns
inc
imul
mov
lahf
divl
gs
pop
jge
and
in
aam
movsl
and
mov
aam
xor
dec
fldcw
testb
sarb
jae
clc
sub
cmp
addr16
xchg
shlb
jle
jg
mov
aad
cmp
iret
dec
repnz
inc
cmpsl
pop
ljmp
cld
and
std
pop
xchg
pop
and
and
mov
es
or
insl
loop
mov
mov
outsb
jae
dec
push
testb
jo
aas
jle
ss
mov
sub
pop
sahf
adc
sub
mov
mov
rcr
add
cmp
or
es
cmp
decl
std
mov
scas
mov
pop
sarl
popa
mov
mov
icebp
mov
mov
popf
cli
mov
jp
dec
sub
sub
mov
popf
cwtl
add
adc
xor
mov
lea
push
lods
cmp
das
dec
gs
pop
dec
lret
ss
xchg
negl
cmpsl
pop
sub
or
mov
xlat
lret
jo
js
mov
mov
inc
ret
dec
sub
pop
adc
xchg
mov
push
mov
push
lds
add
fisubrl
mov
imulb
lahf
pop
hlt
pushf
call
out
lcall
mov
popf
out
stos
cmc
sti
sbb
xchg
rol
jp
imul
xor
fimull
mov
out
lret
and
xor
cmp
sahf
xchg
mov
mov
lea
jae
adc
mov
adcl
pop
sub
in
scas
sub
fs
or
dec
xor
mov
xor
stos
xchg
ret
repz
jae
jle
xchg
mov
jo
push
cmc
adc
inc
fbstp
add
loope
sub
xchg
mov
fidivl
das
imul
in
add
test
rorl
push
jb
or
popl
dec
fmull
mov
mov
push
push
int
int
dec
xor
imul
sbb
repz
shlb
aaa
xchg
fsubs
sbb
cmpb
lahf
and
inc
addr16
pop
xchg
out
stc
sti
inc
xchg
jb
sbb
pushf
scas
jo
pop
out
fldl
in
inc
ds
movsb
mov
arpl
jne
push
add
lods
push
mov
mov
fdivrl
out
test
xor
ss
push
push
scas
inc
adc
sbb
inc
scas
push
call
sub
gs
inc
mov
out
dec
mov
adc
or
pop
dec
jbe
int3
loopne
out
or
jg
in
cltd
jge
and
add
out
or
shl
lret
dec
xchg
lret
in
xchg
push
sbb
inc
mov
bound
pop
imulb
pop
pushf
sbb
fcmovbe
sarb
cmp
push
fidivrs
push
pop
sti
rorb
push
andl
mov
lret
loop
lcall
loop
scas
and
jno
sub
and
jecxz
sub
adc
lahf
xchg
stos
mov
fsubl
pushf
ret
pop
jmp
cmp
jge,pn
push
mov
cmp
rclb
jbe
fidivrl
nop
imul
ja
or
xorb
and
jge
adc
insb
clc
ds
xchg
stc
push
xor
mov
loop
mov
enter
pop
mov
imul
mov
adc
cmp
cmp
je
ja
add
or
pop
dec
das
lea
jns
adc
outsl
jl
sahf
inc
xor
adc
push
or
or
lods
aas
outsl
movsb
jne
mov
out
cmp
icebp
shlb
jecxz
out
add
mov
movsl
lds
or
adc
inc
pushf
adc
cmc
imul
pushf
mov
mov
push
movsb
ljmp
and
rcrl
jmp
ljmp
xchg
dec
lret
mov
pop
mov
aam
roll
data16
mov
mov
and
add
lock
and
dec
test
int3
push
cli
out
and
jne
cmp
cmp
lcall
lock
adc
call
sbb
stos
mov
bound
jno
hlt
push
xor
repnz
test
or
sti
ja
inc
mov
xor
mov
aam
add
cmp
frstor
mov
data16
jp
iret
push
pop
mov
jns
jb
cmp
ds
and
push
out
jmp
test
lret
and
and
pushf
sbb
jp
fisttpl
and
gs
jnp
test
scas
je
stc
aam
pop
and
jmp
push
dec
mov
pusha
adc
jmp
testb
and
inc
and
pop
sub
mov
repnz
or
outsb
pop
aad
push
insl
fists
sbb
add
pop
push
mov
fsubr
mov
iret
lods
fcoms
mov
mov
lods
bound
pushf
insb
sub
jae
out
gs
sbb
sbb
scas
dec
xchg
sbb
or
mov
sbb
jae
xchg
push
pop
sub
or
adc
pop
in
test
out
jno
mov
aad
repnz
cmp
mov
mov
pop
aam
paddusw
ss
je
and
ja
roll
sar
mov
pop
inc
dec
cld
into
pop
mov
and
popf
jmp
sti
adc
aam
or
pop
add
cmp
imul
adc
fdivrp
rorb
pop
mov
dec
fildll
stos
mov
sahf
mov
comiss
aas
fcomps
bound
jl
imul
xchg
push
rcrl
test
fwait
stos
shlb
loopne
aam
mov
jg
jns
mov
sbb
sub
ret
pop
jns
mov
sub
ret
daa
and
xchg
or
pop
mov
mov
jg
sbb
mov
xor
add
in
pop
adc
xchg
cs
test
adc
jb
add
hlt
mov
sti
mov
mov
out
cs
out
add
outsb
mov
xchg
mov
adc
in
std
mov
dec
int
xor
and
add
divl
aam
loope
out
xchg
xchg
sbbl
stos
xor
add
aaa
sub
popf
cmpsb
ret
cmp
push
je
push
dec
adc
insb
js
mov
fyl2xp1
mov
rcrb
ss
ljmp
xchg
scas
push
pop
lcall
sbb
push
in
xlat
rorb
sub
mov
inc
jno
jg
fcoml
sbb
jb
movsl
xchg
pop
pop
pop
data16
cmp
mov
pop
ret
fs
sti
jns
xchg
scas
aam
and
faddp
xor
or
repz
call
mov
xor
lretw
icebp
fdivrs
mov
sub
push
data16
repnz
pusha
fdivs
push
mov
and
lock
fstl
mov
sbb
xlat
mov
mov
add
cmpsb
fwait
adc
push
push
inc
leave
test
movsb
sub
clc
pop
pop
mov
pop
xlat
lahf
loopne
push
sbb
push
maskmovq
imull
fstpl
jno
mov
mov
inc
movsb
mov
or
mov
adc
or
adc
sub
push
popa
mov
lods
sbbl
je
inc
imull
loopne
ljmpw
in
xchg
in
idiv
fimull
call
jl
loopne
fsubrs
and
pop
pop
repnz
pushf
insl
fdiv
mov
sbbl
aam
push
fstl
and
rcrl
xchg
and
pop
insl
popa
shl
lea
outsb
xchg
cmp
scas
fdivs
les
mov
sbbl
cmc
and
adc
in
mov
push
push
mov
sub
mov
inc
ret
bound
push
mov
dec
lret
push
adc
mov
push
fwait
sub
inc
mov
rcll
mov
add
xchg
in
jecxz
rolb
xchg
jle
movsb
jg
adc
dec
or
leave
out
pop
push
pop
shrd
outsb
add
fs
lret
sahf
and
mul
dec
ret
stos
je
fcoml
loope
pop
sub
movl
das
addr16
jo
and
mov
daa
push
cmp
jo
xor
jg
lods
sub
jecxz
inc
icebp
aas
jo
push
fcompl
inc
es
std
inc
ljmp
das
jnp
outsl
mov
fmull
stc
dec
sbb
shrl
inc
adc
jg
andl
aas
pop
ljmp
mov
jecxz
gs
ljmp
mov
icebp
dec
imulb
daa
mov
xor
adc
in
rolb
orb
xor
jl
lods
aam
sbb
sub
jns
sub
inc
sub
mov
icebp
push
pushf
fwait
mov
mov
mov
add
dec
fiadds
dec
jle
jecxz
fwait
inc
inc
mov
mov
add
xchg
leave
push
imul
mov
popf
fwait
cs
test
jb
in
icebp
mov
bound
roll
repz
mov
inc
sub
gs
xchg
xchg
jecxz
and
pop
jle
lea
dec
gs
out
xor
les
arpl
out
stc
xor
test
mov
mov
xchg
xchg
cltd
xor
pop
out
mov
lock
mov
push
scas
cmpsl
callw
jl
xor
cmp
cmpb
in
mov
in
pop
xor
ss
push
xor
add
mov
or
adc
cmp
sti
pop
xchg
mov
jo
nop
jle
call
cwtl
inc
lahf
adc
push
and
add
dec
sbb
pusha
repz
gs
movsb
notl
or
or
mov
movsb
ret
popl
adc
hlt
pop
push
ss
mov
and
lret
mov
or
pop
aad
jne
mov
xor
cmp
and
jns
mov
sub
xchg
adc
xchg
cmp
mov
shl
push
fistl
xchg
xchg
xor
sub
and
fdiv
xchg
iret
inc
mov
sbb
ljmp
inc
test
jmp
aad
leave
repz
rcll
sub
outsb
and
pop
test
jl
int
sti
arpl
imul
in
mov
rolb
adc
test
add
dec
and
dec
leave
mov
cltd
xchg
cmp
imul
sub
and
lahf
loop
aad
adc
mov
pushl
adc
lret
ja
pushl
arpl
roll
dec
jb
jae
les
out
test
and
sub
push
adc
cwtl
jb
xor
xchg
aas
cmpsl
fsubs
scas
andb
inc
mov
sbb
test
add
leave
repnz
xchg
jl
arpl
push
mov
jns
mov
test
mov
adcl
repnz
popa
and
inc
rcl
sub
scas
loope
jns
cmpsl
cmc
insl
repz
fsubl
and
push
inc
pop
dec
fisubrl
dec
loop
mov
ljmp
xchg
test
out
cmpsl
aas
nop
xchg
cmp
dec
mov
or
ret
fwait
mov
aaa
pop
cli
adc
mov
sbbb
dec
cmc
xchg
gs
bound
xchg
cltd
paddusb
or
mov
shll
dec
and
cmp
loope
add
xchg
pop
pop
loope
gs
sbb
popf
std
mov
sub
ljmp
sbb
nop
lods
popf
les
push
dec
mov
outsb
scas
adc
imul
dec
pop
stc
and
xchg
push
loope
xchg
xor
jg
mov
cmpsl
xchg
cmp
or
sti
mov
inc
addr16
jnp
cmp
jge
mov
inc
dec
xchg
nop
cmp
add
mov
std
sbb
dec
adc
fwait
test
pop
div
cmpsb
mov
ret
dec
mov
add
std
xor
pop
fisubl
mov
in
cmpsl
sbb
mov
inc
lods
call
and
dec
shll
mov
pop
div
jo
jl
shrl
sbb
movsl
adc
imul
dec
mov
loop
lods
dec
or
and
aaa
jp
jg
xchg
pop
jge
adc
xlat
daa
or
andl
xchg
fyl2xp1
dec
mov
add
push
nop
clc
mov
jae
iret
int3
mov
out
pop
lds
sbb
sub
imul
out
les
dec
ljmp
or
cmp
insl
and
aas
jle
xor
movsb
fstpl
cmp
test
and
fmuls
in
out
pop
pushf
pf2id
aas
out
movsl
adc
shl
nop
jns
test
mov
mov
movsl
shlb
sub
jae
pop
repnz
sbb
add
test
insl
pop
insb
cmpsb
dec
add
aam
fidivrl
je
sbb
and
notb
xchg
test
add
push
aad
xchg
movsl
call
sub
vhaddpd
fadds
inc
dec
jbe
loope
pop
inc
xchg
loopne
movsl
jecxz
jae
jno
mov
test
jecxz
or
xchg
push
test
add
pop
jle
adc
jno
faddl
xchg
sahf
push
add
fadds
rorl
pop
mov
out
stc
repz
mov
testl
int
dec
lods
negl
jecxz
lods
test
pop
inc
mov
xchg
loopne
imulb
mov
inc
push
pop
or
adc
outsl
aad
and
jb
pop
cld
xorb
testl
test
jmp
jns
pop
jb
sub
imul
mov
jmp
js
sbb
cmpsl
adc
or
scas
and
jp
push
sbb
add
pop
xchg
fnstenv
mov
call
sarb
inc
ds
rcl
jp
in
xor
ret
cmpsl
or
pop
roll
or
cmpsb
sbb
mov
and
int
lret
gs
call
add
pop
cmp
inc
stos
repz
outsl
xor
sar
push
aam
test
cmpsb
xor
in
cwtl
vphaddudq
mov
cmpsb
test
mov
stos
and
mov
jns
cmp
cmp
scas
call
or
inc
mov
sbb
aas
mov
dec
fdivs
add
or
ret
cmp
add
xor
or
iret
lock
cmp
and
popa
sub
adc
fcmovu
test
pusha
les
push
dec
inc
xchg
mov
mov
mov
and
add
gs
cmp
scas
adc
adc
ficompl
data16
inc
jb
inc
out
or
pmaddwd
enter
dec
fs
cmp
and
cli
add
cltd
loope
and
adc
mov
xchg
sbb
aaa
jo
inc
xchg
dec
add
cli
call
data16
repnz
sbb
cwtl
nop
repz
cmp
push
xor
cld
stc
push
sarb
jo
push
sub
and
test
pop
cmpsb
cld
xor
mov
push
clc
aam
je
mov
inc
lods
mov
dec
mov
js
pusha
or
mov
test
les
mov
jecxz
cmp
xchg
mov
lds
xor
out
push
ja
insl
mov
data16
stos
lret
and
insb
jo
mov
movsb
fcoml
cmp
pop
pop
adc
mov
insl
insl
mov
cmp
pop
inc
aaa
jne
pop
enter
sbb
mov
cld
fs
and
mov
outsb
mov
mov
lds
in
cld
mov
push
pop
xor
xchg
and
cmp
xchg
push
xchg
repz
stos
pop
jae
mov
outsl
sub
push
add
adc
test
rolb
mov
shrl
cmp
andb
fldl
pop
jb
in
xchg
adc
jp
fstpl
sub
out
loopne
scas
push
hlt
fs
test
pop
imul
int3
out
jae
negb
xor
pop
jp
sbb
push
mov
mov
dec
cmp
xchg
pop
bound
sbb
pop
mov
xchg
jb
sbbb
in
cmp
cmp
fidivs
sub
pop
cmp
aad
insl
push
adc
sahf
xchg
xor
in
popf
jb
jae
bound
mov
fst
mov
mov
adc
int
aam
xchg
repz
push
push
sub
jecxz
and
movsb
push
xchg
insb
lods
inc
mov
add
out
mov
sbb
xchg
les
sbbb
xchg
pop
cmp
idivl
inc
jo
mov
mov
gs
mov
fidivs
shll
xor
adcl
mov
aaa
mov
pusha
sarb
adc
in
inc
in
xor
dec
in
fwait
and
insl
mov
imul
aaa
out
pop
into
inc
push
ret
sbb
add
outsl
add
xlat
sub
jae
je
xor
xchg
jmp
aam
lock
jne
mov
cmp
ret
lods
mov
cmpsl
scas
inc
fidivs
sbb
pop
push
aam
in
ja
into
call
pusha
aad
sbb
push
xchg
shll
gs
testl
mov
add
mov
mov
cmp
in
mov
enter
orl
leave
pop
jle
rorb
ret
in
jmp
xchg
and
repnz
inc
stos
adc
sub
andl
jp
add
es
inc
jmp
xchg
push
fldt
jg
add
rcr
sub
pop
insl
fldt
push
dec
imul
jmp
lock
into
insb
stc
movsb
push
cli
cmpsb
jne
sbb
mov
mov
lods
cmp
jae
jle
movsl
pop
cld
xor
out
sub
leave
mov
mov
add
daa
jge
inc
mov
jnp
mov
push
cmp
add
stc
loop
add
ret
arpl
pop
xor
out
and
lahf
mulb
adc
fistps
inc
js
mov
lahf
xor
mov
pop
dec
dec
fmuls
push
test
ljmp
cwtl
xor
mov
cmp
insl
scas
sbb
test
mov
xchg
jno
jns
mov
adc
add
pop
aas
out
out
mov
pop
mov
xchg
push
add
push
hlt
in
or
imul
xchg
dec
negl
lcall
cli
insb
and
fwait
adc
push
in
mov
sarb
aas
mov
cmpsb
push
push
mov
sub
shlb
mov
testb
xchg
xor
stos
into
daa
mov
ds
mov
mov
push
inc
mov
ljmp
in
jnp
mov
mov
outsb
xor
xor
inc
in
mov
jne
cmp
xchg
ja
negb
and
pop
sub
adc
mov
mov
jp
outsl
fbld
push
sti
adc
sbb
push
mov
inc
loope
or
lods
addr16
enter
iret
mov
stos
scas
push
fstpl
ljmp
xorl
jo
mov
shrl
out
mov
mov
not
ffree
dec
out
mov
jo
test
shll
dec
pop
mov
jge
push
mov
jns
int
js
cltd
xor
or
cmp
sbb
cmc
xchg
ljmp
in
xor
mov
ljmp
xchg
outsl
or
add
mov
sbb
sub
adcl
dec
arpl
push
lret
mov
and
or
insl
ret
outsl
iret
cwtl
iret
sbb
dec
jl
stos
lock
sub
test
mov
loope
cmpsb
push
dec
pusha
mov
sbb
and
dec
adc
xor
daa
push
sub
jne
pushf
mov
ds
push
movsl
pop
dec
lods
xchg
cltd
into
popf
pop
and
sub
and
jo
or
mov
jmp
lods
fisubrs
push
fwait
js
inc
pop
push
pop
inc
add
jb
cmp
or
jecxz
imul
inc
nop
mov
inc
repz
sahf
mov
rcl
push
jnp
bound
addr16
outsb
hlt
push
mov
xchg
or
mov
scas
sub
icebp
add
sbb
jle
lods
test
notl
cmpb
push
in
xor
xchg
filds
gs
dec
or
push
jecxz
pop
xchg
pushf
data16
and
fwait
push
add
add
mov
sub
mov
inc
leave
out
xor
loope
movsl
cmp
sub
pop
inc
imul
mov
jp
add
test
mov
inc
out
cltd
ja
out
dec
add
pusha
lahf
xor
ss
or
jbe,pt
sbb
or
js
jmp
in
and
setbe
add
popf
aas
js
xchg
sub
jge
mov
insl
jae
mov
and
fisubrs
pop
out
stc
dec
inc
ds
jmp
adc
mov
lret
push
and
repz
cmp
imul
dec
xchg
pop
movsb
jmp
pop
dec
and
cmpsl
scas
mov
jl
cmp
outsb
dec
push
aam
sbb
or
fdivs
mov
mov
ljmp
add
sahf
fstpt
inc
pop
imul
divb
fldenv
inc
inc
pop
into
std
mov
into
dec
ss
jmp
pop
fbld
ja
mov
jmp
jo
imul
fistl
ss
push
mov
outsb
mov
popf
push
cwtl
jl
in
adc
movsl
test
xchg
xlat
and
std
jns
stos
cmp
sub
cwtl
orl
or
loop
lret
push
mov
lods
xor
xchg
xor
rolb
in
arpl
into
sti
loope
adc
xchg
sub
lods
jae
into
mov
and
call
mov
add
pop
sar
mov
jbe
cmp
push
es
jne
mov
movsl
xchg
add
js
cmp
mov
sub
in
adcl
in
mov
mov
pushf
out
je
adc
sub
xchg
mov
add
sub
pop
adc
sbb
aaa
pop
gs
mov
notl
mov
bound
sarb
add
mov
jg
xchg
mov
fnstcw
jb
enter
mov
mov
cmp
ror
cltd
lahf
xchg
stos
mov
pop
out
aam
cmp
dec
adc
sbb
das
add
jmp
outsl
pop
jae
mov
jle
pop
or
les
inc
push
fdivs
dec
add
outsb
into
jne
insb
imul
xor
jae
inc
mov
lahf
or
or
push
cs
or
bsr
adc
in
adc
je
push
dec
leave
mov
jp
xchg
mov
cmp
push
div
in
ficoml
jno
pop
lret
adcl
xor
mov
fidivs
dec
or
mov
lret
orb
mov
lods
sahf
jmp
sub
pop
inc
cmp
pop
adc
jne
fs
and
aad
xchg
xor
sub
jl
pop
push
push
pop
mov
add
aad
stc
xor
lret
push
or
jns
loopne
xorl
mov
jns
rcll
fdivs
sub
mov
mov
or
mov
stos
or
gs
stc
in
add
arpl
shll
mov
dec
add
mov
outsb
adc
cmp
mov
loopne
pop
mov
fisubrl
fisttpll
push
add
dec
loopne
push
xchg
jmp
xor
add
mov
pop
les
or
in
mov
lea
cmp
call
cmpsl
nop
mov
out
mov
nop
push
shlb
add
ja
inc
pusha
addr16
pop
adc
and
ja
repz
mov
jae
sbb
aas
dec
outsb
or
loop
jo
jae
cmpsb
pop
mov
rcll
jg
push
fldenv
fidivrl
xchg
push
insl
xor
ror
mov
adc
and
popa
xchg
pop
xor
lret
mov
sub
mov
ljmp
add
adc
aas
xor
fwait
leave
shrb
sub
into
mov
lods
gs
pusha
dec
xor
lea
mov
sub
dec
lds
pushf
mov
ror
cmpsb
mov
icebp
pop
pcmpeqd
int
in
iret
addr16
sbb
inc
adc
push
cli
lods
inc
mov
in
cmp
hlt
xchg
and
pop
pushf
aas
cmpsl
iret
mov
repnz
imul
pop
add
cmp
inc
push
pop
jae
cmp
mov
push
dec
push
inc
xchg
aad
jl
in
xchg
dec
int3
xchg
ds
ja
dec
cmp
mov
push
out
mov
dec
mov
xchg
jbe
sub
sbb
fwait
stos
inc
inc
xlat
test
pop
les
ss
mov
adc
mov
mov
in
inc
mov
jnp
repz
cmp
push
add
aaa
xor
xlat
in
daa
lea
xchg
add
inc
mov
xor
cmp
sub
movsb
jmp
xchg
cmp
push
dec
andb
movsb
mov
fsubrs
dec
outsl
mov
pop
jmp
mov
sub
pusha
aas
aam
mov
mov
clc
add
dec
loope
push
call
push
call
mov
push
enter
mov
ret
add
adc
pushf
sub
js
push
aam
xchg
pop
inc
ret
leave
inc
in
lds
jge
call
dec
xor
ljmp
je
xchg
scas
in
and
mov
and
pop
mov
or
jg
xchg
clc
jmp
push
popl
xor
lahf
daa
xor
inc
mov
jnp
shlb
lods
fdivrl
inc
enter
stc
dec
add
mov
movb
xchg
stos
lret
pop
mov
or
lret
imul
inc
out
xchg
roll
cmp
outsb
jmp
cld
xchg
mov
mov
jne
sub
ss
jl
sti
stos
call
adc
adc
fisttpl
fsubs
sub
adc
shrb
and
mov
adc
repnz
xchg
push
loopne
gs
mov
repz
iret
pop
int3
sti
pusha
iret
out
nop
adc
add
les
mov
jnp
mov
mov
jnp
pop
inc
inc
mov
add
sahf
test
adc
inc
in
xor
fimull
xchg
sub
aam
xor
sub
sub
xchg
loope
dec
arpl
mov
lea
cs
sub
pop
lods
dec
rcrl
enter
ljmp
lcall
push
pop
jle
incl
push
lea
jg
cltd
xlat
lret
sbbl
or
cmc
inc
loope
cmpsl
inc
bound
xor
cmpsl
xchg
sub
fimull
push
nop
mov
pusha
sbb
and
pop
por
arpl
and
aas
cmp
out
mov
jae
cmpb
and
repnz
test
ja
fcomps
or
adc
adc
pop
mov
mov
daa
add
mov
dec
cld
mov
or
fcompl
notl
mov
and
sub
bt
adc
sbb
mov
push
jae
lds
adc
std
and
push
icebp
push
daa
adc
add
xor
mov
mov
scas
mov
cltd
verr
fucomip
stos
aaa
sub
sub
add
hlt
pop
iret
sub
aas
add
mov
loope
mov
fisubrs
inc
mov
xchg
and
je
xchg
pop
and
xchg
sub
jb
fimuls
and
add
sbb
fnsave
stos
jecxz
mov
xchg
push
pop
sub
into
fsubp
bound
insb
lock
push
xor
add
sbb
jle
pop
push
xor
les
dec
cmp
sub
xchg
scas
mov
lret
insl
stos
ljmp
pop
push
out
dec
or
inc
jbe
jg
or
or
adc
xorb
jle
jnp
addb
xor
movsb
add
jp
int
loopne
jne
adc
xchg
lret
add
lods
sahf
jne
jmp
les
and
mov
or
mov
enter
sahf
lcall
inc
loop
jne,pt
test
mov
gs
rcrl
in
mov
stos
rcrb
or
and
jne
enter
jecxz
sahf
pop
pop
mov
xchg
scas
mov
jle
or
out
cld
mov
sub
stc
mov
xorl
sahf
aad
lret
cmp
sbb
or
popf
ret
xchg
sub
daa
lock
jnp
xor
out
pop
jmp
sub
cmp
sbb
arpl
adc
out
fiaddl
repnz
int3
pop
cltd
decb
fs
fildl
mov
adc
push
sbb
subl
sub
ret
xchg
fdivrl
xchg
xchg
inc
in
or
adc
xchg
out
mov
dec
push
cmpsl
ret
push
xchg
std
mov
jbe
xchg
inc
cmpsl
test
das
inc
cmp
sti
insb
mov
or
cwtl
pop
xlat
mov
fdivr
xchg
xchg
mov
or
pop
sbb
jecxz
pop
in
xor
nop
repz
jmp
in
pop
push
jb
rcr
push
mov
sub
cmp
rol
and
mov
jecxz
inc
add
mov
mov
imul
mov
clc
in
jbe
dec
adc
sbbl
pop
cmc
movsl
jbe
lahf
pop
adc
lret
scas
rorl
movsb
popf
lods
lret
popf
popf
mov
sbb
pop
lock
sbb
repz
std
mov
ret
push
call
roll
xchg
and
mov
pop
push
sbb
add
add
xchg
mov
cmp
push
fmuls
hlt
ficomps
cmp
jecxz
fidivrl
in
jle
pop
xor
and
push
xchg
adc
or
xor
das
jle
test
push
int
fistpll
mov
call
cmp
mov
push
loop
inc
out
push
lods
add
adc
cmc
adc
xlat
in
inc
rorl
fdivl
pop
pop
fwait
or
add
jg
mov
xor
xlat
rcr
push
lds
imul
mov
rclb
mov
or
cmp
mov
pusha
mov
data16
push
rorb
addb
dec
and
call
jl
jl
and
frstor
sahf
cltd
mov
cmpl
mov
hlt
sub
jne
adc
inc
xchg
jnp
mov
gs
or
out
in
add
jge
addr16
pusha
mov
xchg
cmc
psubd
mov
popf
ret
cmc
push
outsb
fsubrs
xchg
das
test
ret
jg
cmp
rcrl
ja
mov
push
fnstcw
xor
test
div
adcb
inc
ss
xor
jmp
mov
ss
aas
mov
add
push
mov
mov
loopne
pop
xor
insl
addr16
xchg
push
lea
dec
insl
loopne
data16
xor
xchg
cmpsl
cmp
hlt
cld
and
xchg
or
jae
or
push
shll
iret
push
mov
add
into
int
fdivl
or
iret
push
cmp
js
arpl
and
cmc
xor
js
out
pop
fnstsw
mov
pop
inc
cmp
mov
lgs
xor
stos
mov
dec
rcl
sbb
nop
imul
icebp
test
bound
xchg
sahf
mov
shr
lcall
mov
sbb
lret
and
adc
add
movsb
jge
sub
das
pop
jmp
out
shlb
fbld
out
push
and
ss
jg
push
push
rol
loopne
pusha
popa
inc
sub
dec
lahf
or
mov
scas
mov
xor
loope
insb
sub
xchg
rep
mov
sbb
icebp
jns
sbb
out
push
mov
dec
arpl
xlat
popf
imul
jg
inc
pop
pop
add
rcrl
pop
lahf
mov
shrl
lret
and
cmp
mov
xchg
loopne
add
push
movsl
lret
in
sbb
sbb
jg
jge
sahf
pop
cmpsb
jle
and
or
sub
cmp
cwtl
cmp
xchg
add
stos
jo
shll
cs
jb
mov
pop
adc
sub
movsl
nop
jns
jge
lea
xchg
sbb
nop
rcl
in
jecxz
xchg
int
mov
pop
movsb
push
lret
aaa
lcall
pushl
xchg
xchg
loop
loope
fdivl
mov
outsb
sbb
movsl
adc
es
or
jns
mov
pop
cli
sbb
inc
insl
push
ljmp
cli
rorl
push
jae
or
jecxz
in
fs
inc
lahf
or
xchg
jo
mov
sbb
ret
in
les
and
mov
imul
sbbb
addb
cmpsb
les
lcall
mov
jo
cmpsb
aad
mov
jge
sbb
leave
push
sbb
xor
sub
or
adc
push
push
pop
adc
shrd
repnz
das
adc
rolb
adc
xor
mov
sbb
loope
xchg
pop
or
adc
out
xlat
xor
adc
int3
lods
shll
jg
pop
and
pop
jne
jbe
adc
ret
jl
xchg
pop
push
lods
xchg
push
add
ret
outsl
jmp
mov
push
rcrl
cmp
addr16
clc
push
sub
sbb
icebp
fsubrl
out
andl
mov
xor
lods
idiv
fcmovnb
cmp
pop
mov
pop
lret
shrl
movsl
mov
inc
mov
pusha
xchg
shll
jge
daa
cmc
xor
push
mov
or
nop
sub
cltd
dec
inc
add
pop
pop
pop
std
mov
pop
inc
push
aas
push
cmc
pop
loopne
inc
js,pt
lret
add
jae
pop
ror
xchg
lldt
not
xchg
icebp
inc
lods
sarb
rclb
dec
int3
bound
push
aaa
cmpsl
jl
adc
inc
lret
sahf
ret
repz
into
pop
pusha
stos
xchg
cmp
mov
jns
fs
aam
pusha
pop
pusha
test
push
ret
inc
cmp
push
xor
repnz
subl
test
add
ss
push
jg
es
xchg
shlb
sub
scas
pop
xchg
negb
into
mov
sub
repz
cmpsb
or
inc
dec
sbb
test
icebp
das
mov
add
mov
inc
das
cmp
pop
inc
fsubrs
cmc
push
pop
das
push
rcl
gs
xor
mov
fsubrs
jne
rcrb
inc
das
popa
cmp
cmp
out
inc
fucomip
inc
inc
sarb
addr16
push
xchg
jl
xor
push
mov
in
push
inc
adcl
mov
adc
fsubrs
ret
cwtl
dec
cmpsl
aam
add
ss
or
mulb
and
mov
out
push
cmp
sbb
push
push
dec
pop
jo
ret
adc
fsubrp
out
push
mov
test
lds
pop
mov
neg
je
out
dec
xor
mov
ds
outsl
clc
push
and
jge
mov
js
push
adc
jp
xchg
addl
xor
add
push
clc
adc
inc
popf
pop
push
pop
into
std
test
mov
mov
xchg
aaa
lcall
jmp
cmpsl
stos
js
pop
mov
hlt
out
adc
dec
in
mov
sub
cld
xor
sbb
sub
cmp
cs
pop
inc
inc
xchg
pop
outsb
cmp
push
repz
dec
push
cmp
stos
test
mov
pop
in
jl
cmpb
sub
mov
test
xor
cmp
aam
mov
mov
push
mov
js
mov
jge
add
mov
popf
in
cmp
xchg
les
sub
inc
aad
jno
ss
mov
add
inc
jno
insb
inc
or
jl
xor
and
mov
aaa
js
call
push
lds
push
loope
or
popa
fs
iret
test
stc
sub
jno,pn
pop
sti
ret
or
fistps
fisttpl
fs
test
push
lock
out
and
fidivrs
mov
mov
mov
jge
aad
sahf
int
popa
xchg
test
pop
addr16
pushf
and
cmp
imul
xchg
jl,pn
repnz
popa
testb
inc
das
aad
hlt
push
hlt
dec
ss
and
inc
push
pop
ss
ljmp
push
loop
mov
sbb
jae
push
jne
leave
shrb
dec
mov
pop
loop
push
hlt
mov
add
ja
mov
fisttpl
dec
add
add
leave
jg
xchg
outsb
jnp
or
pop
sub
pop
xchg
dec
adc
mov
insb
ds
test
ds
shlb
sbb
in
pop
jns
rcll
popf
repz
nop
popf
mov
test
and
jmp
mov
or
inc
jo
leave
xchg
divb
sbb
enter
mov
mov
add
and
xchg
ds
repnz
stc
ret
add
push
lods
mov
iret
mov
jl
nop
dec
push
inc
test
xchg
push
dec
adc
pop
scas
jae
out
cmp
sbb
jo
xor
repnz
aaa
xor
push
je
cwtl
loopne
adc
sahf
cli
out
jb
jns
cld
inc
ss
daa
in
pop
mov
inc
mov
push
in
rol
sub
jno
xchg
stos
push
outsb
out
adc
in
outsl
xor
or
pop
leave
xor
mov
xor
mov
testl
jno
repz
addr16
sbb
rcrb
inc
cmp
mov
or
loop
jae
jno
imul
pop
xchg
popa
sbb
push
sahf
or
je
cmp
daa
fnstenv
and
xchg
divl
icebp
sbb
in
and
lahf
cld
inc
inc
imul
stos
addr16
xlat
not
pushf
or
jle
sbb
sbb
ljmp
ficomps
push
push
in
pop
xchg
outsl
insb
loopne
cmp
call
in
push
insb
imul
and
lods
lret
popf
cli
inc
xor
imulb
nop
scas
fimull
xorl
sub
pop
cld
push
dec
aaa
push
shlb
popa
mov
mov
repz
adc
pop
mov
hlt
ret
xor
push
sbb
xor
cwtl
fsts
decl
cmc
mov
test
inc
mov
xchg
mov
fiadds
dec
and
out
pop
mov
hlt
xlat
xor
lret
push
popf
fadd
loopne
sti
out
lods
mov
push
out
imul
xor
lock
adc
push
mov
pop
cwtl
add
popa
dec
adc
push
xchg
cld
sub
fxch
sti
cmp
pop
pop
out
notb
and
sbb
rcrl
inc
sub
adc
inc
pop
sbbl
inc
fisttps
jno
xlat
push
call
insl
adc
jno
add
loop
fsub
adc
inc
insl
clc
pop
jnp
jg
sbb
xchg
lods
xchg
lds
mov
push
xor
test
les
push
xchg
push
shr
out
mov
push
mov
leave
add
xchg
mov
divl
aas
pushf
clc
mov
sbb
loop
push
push
push
in
int3
lahf
jne
lcall
pop
push
pop
push
push
add
sbb
mov
and
jne
loope
in
addr16
test
push
pushf
sbb
in
add
inc
push
lret
repz
mov
mov
ret
dec
lods
add
push
sbb
pushf
jecxz
adc
dec
mov
fmul
lds
mov
fmull
xchg
rcll
xchg
sbbl
iret
xlat
pop
sbb
jmp
pop
orl
mov
adc
mov
mov
xchg
cli
cmp
xor
cmp
ljmp
mov
push
aas
dec
jae
sarb
jl
call
cld
test
pop
aad
push
mov
in
fiaddl
xor
shl
aam
loopne
push
adc
scas
xor
jmp
sub
imul
mov
xor
inc
jge
pop
jl
xor
mov
mov
testb
roll
movsb
je
aaa
dec
popf
cmp
jg
sti
dec
stos
imul
dec
fisttpll
daa
loope
dec
insl
or
mov
mov
imul
out
inc
ds
cmp
sub
or
mov
jecxz
adcb
push
arpl
sub
xor
mov
mov
ss
xor
cmp
pop
cwtl
mov
push
or
mov
scas
and
js
dec
ret
dec
scas
ljmp
add
inc
arpl
xchg
out
cwtl
or
insl
inc
push
or
je
negb
push
sub
ret
sbb
sbb
sbbb
mov
ljmp
dec
gs
jae
inc
pop
cld
jge
cmp
jl
xchg
call
shll
and
int
bound
movsl
xchg
dec
fadds
sbb
aad
cwtl
out
cmpsl
push
lea
mov
ljmp
popa
add
cmp
int
jecxz
daa
push
gs
mov
jns
pushf
fs
frndint
dec
dec
sub
jmp
negb
fdivrs
movsl
push
mov
and
sbb
icebp
gs
mov
aad
rclb
dec
cmpsl
xchg
lret
js
movsl
mov
inc
ljmp
fwait
pop
repnz
mov
fcompl
and
cmp
mov
out
out
and
xor
jne
adc
mov
pop
adc
mov
jle
jbe
int
popf
xor
out
int3
mov
mov
mov
dec
test
sub
jne
fs
cmp
cmpl
push
jne
xor
dec
out
push
in
in
aaa
xchg
cltd
sbb
xor
or
push
aas
cld
aas
sbb
mov
jne
mov
popa
lods
push
mov
mov
pop
mov
push
fsts
fcomps
jbe
cmp
inc
fsubl
cmpsb
inc
mov
sub
mov
gs
fcom
mov
xchg
adc
out
xor
outsl
lret
pop
xor
out
inc
clc
adc
jne
xchg
xor
cmp
stc
mov
sub
sub
in
adc
mov
cmp
pushl
in
test
xchg
and
sbb
rclb
jecxz
jl
jo
pop
pushf
dec
dec
push
stos
leave
test
dec
pop
cmp
cwtl
lods
jp
mov
test
daa
lea
mov
pop
jb
jne
lods
push
adc
xor
sbb
push
mov
stos
leave
lock
cmp
int3
popa
pop
sbb
add
and
dec
sbb
loope
fdivl
in
cltd
and
mov
and
jecxz
insl
lods
or
cli
push
cmp
mov
or
mov
out
mov
ljmp
sub
mov
cld
mov
jns
out
xor
push
pop
adc
cltd
xor
inc
adc
push
les
mov
inc
daa
jbe
sbb
mov
xlat
xchg
aaa
aad
out
mov
xchg
cmp
outsl
push
adc
repz
xor
xor
xor
or
adc
jb
sahf
and
mov
loop
icebp
inc
nop
add
rorl
cld
int3
lcall
fisubrs
movsl
mov
add
add
sbb
cmp
lcall
mov
push
and
insl
and
dec
adc
mov
adc
out
inc
testl
mov
push
xchg
and
add
sbb
mov
dec
inc
scas
ljmp
ss
sub
sbb
out
out
mov
fmul
and
xchg
and
add
jns
sahf
hlt
imul
je
pop
inc
or
imul
adc
mov
rorb
mov
mov
inc
test
in
popa
dec
pop
in
aad
mov
cmpsl
inc
ja
xorl
push
fstpt
movsb
jne
leave
add
lret
dec
add
mov
pop
cwtd
xchg
adc
mov
or
cld
std
into
in
ja
repnz
inc
dec
and
jge
or
mov
inc
fisttpl
enter
sbb
dec
int
pop
in
mov
aaa
test
add
mov
cmpsl
in
fdivrl
lret
pop
jg
dec
xor
outsb
mov
jo
adc
repz
inc
mov
rcrb
int3
in
push
leave
jg
pop
add
inc
pop
cmp
test
repnz
mov
xor
mov
adc
jae
inc
pushf
mov
xchg
arpl
enter
mov
ds
dec
pop
or
push
test
xchg
mov
ljmp
pushf
jge
pop
inc
jno
test
sbb
cli
inc
sbb
jne
cs
fwait
xchg
cmp
dec
into
lds
mov
pop
outsl
dec
out
fcoml
and
push
cmp
inc
aas
in
xlat
xchg
dec
pop
fsubr
or
push
cmp
xchg
js
cmp
ja
or
lods
push
int
pushf
add
lret
lea
add
call
sahf
and
lcall
adc
pop
mov
in
or
sti
shrb
push
mov
push
aaa
sar
pop
in
in
mov
int
and
imul
lret
ficoms
shll
sub
popa
xor
ret
movsl
or
loope
fisubrl
pusha
xor
pushf
scas
lahf
outsl
xor
inc
addr16
fnstcw
in
aas
and
push
adc
mov
pop
pop
iret
cmp
jno
out
cli
add
and
lds
inc
push
lret
mov
adc
pop
das
aaa
stos
sbb
or
mov
movsl
or
cld
cmpsl
xorb
push
push
negb
add
mov
ss
push
cwtl
lret
cmp
mov
je
les
mov
shr
push
cmpb
sbb
push
rcrl
lods
push
xor
pop
dec
aas
or
cmp
movsl
adc
bound
xor
stos
scas
jp
jp,pt
fimull
mov
aam
fdivl
xor
xchg
push
cmp
in
rcrb
push
adc
cmp
fmull
dec
fsub
jg
orl
xor
sbb
cmp
pop
mov
push
xchg
movsb
rcrb
inc
aas
lods
xchg
popa
cmp
pop
filds
pop
fldenv
jbe
daa
ficoml
les
out
cwtl
imul
sub
jge
inc
rclb
pop
rcll
out
arpl
inc
hlt
jae
sub
adc
nop
std
adc
sbb
mov
insl
sub
or
pop
mov
mov
xchg
add
fdivr
lret
out
outsl
int
int3
hlt
and
xor
pop
push
inc
lea
xchg
mov
sub
xchg
stos
xlat
ret
mov
js
cli
popf
rcl
mov
jl
mov
add
add
mov
lock
cld
mov
out
iret
insl
dec
mov
in
jecxz
ja
andb
pavgw
xchg
xchg
fiadds
out
in
dec
aad
adc
push
jne
jb
loopne
ja
sub
pop
mov
popf
out
push
pop
add
int
into
sbb
fimuls
sub
leave
leave
push
call
ret
movsl
xor
push
pop
iret
scas
out
lods
inc
mov
pop
loope
adc
rclb
or
fiaddl
ffree
adc
jl
pop
shr
pushf
inc
test
pop
mov
inc
jmp
scas
xchg
into
push
push
lcall
mov
jb
loop
sbb
sub
mov
jo
outsl
or
lods
push
sub
or
jns
ss
inc
ljmp
setge
icebp
imul
or
mov
imul
adc
loopne
stc
notb
mov
push
or
sbb
mov
lods
scas
sarb
xor
adc
xchg
hlt
vmovaps
movl
inc
sub
and
sbb
dec
xorl
pop
enter
into
mov
cmpb
inc
add
ss
mov
push
mov
xor
icebp
or
xor
sbbl
or
push
pop
pop
ret
inc
and
insl
push
or
sbb
imul
jne
rcll
in
aam
mov
lea
shrb
das
lret
cmp
inc
out
mov
pop
jne
and
jge
mov
fistl
xor
and
test
in
add
inc
jns
movsb
das
fists
movsb
in
aam
push
sbb
int3
xorl
pusha
add
dec
les
dec
nop
hlt
cmp
int3
cmp
jmp
push
lods
aaa
fisttpll
ja
int
xchg
mov
aam
ss
and
outsl
or
cmp
repz
sub
xor
jge
adc
negb
sahf
pop
mov
sub
or
xor
sti
push
fistps
or
verw
movsb
fwait
lcall
cld
lcall
loop
or
push
dec
mov
xchg
ds
loope
rcrb
aad
ror
das
dec
lcall
and
out
sub
pop
scas
mov
sub
mov
mov
cmp
int3
test
stos
mov
or
pushf
repz
mov
les
fxch
std
or
data16
data16
repz
call
gs
dec
cmp
dec
aad
sbb
or
jle
or
int3
mov
xor
adc
adc
or
adc
scas
pop
xor
mull
adcb
jg
inc
jb
ljmp
roll
incl
rcll
jge
mov
insb
pop
shll
mov
cmp
jecxz
inc
rcll
idivl
shll
dec
adc
inc
pop
jnp
mov
es
add
in
mov
push
ret
xor
cld
jl
lds
out
fsub
mov
hlt
adc
sahf
jg
mov
xorb
sahf
and
mov
mov
mov
add
cmp
cld
in
fistpll
addr16
adc
mov
mov
push
cli
jno
pop
sbb
lock
cmpsl
ss
shrl
ficoms
xor
test
in
mov
adc
sbb
imul
xchg
sar
cmp
xchg
push
filds
mov
add
lock
fcmovne
cmc
pop
popf
xchg
arpl
jge
movsl
scas
and
movsb
stos
pop
xor
int
mov
jmp
pop
shlb
loope
sbb
aad
ret
pop
enter
inc
xchg
pushf
jl
add
lods
scas
testl
add
add
sub
or
mov
aad
shlb
loope
lock
inc
jns
and
fdivrl
mov
insb
shrb
fisttps
daa
fs
push
lods
inc
pop
jmp
daa
scas
sub
push
cmp
jmp
stos
lret
lock
fcmovnb
das
movlps
insl
ljmp
adc
add
mov
std
sub
pushf
cmp
cmp
jge
insb
sbbb
sub
inc
int
scas
outsl
and
scas
mov
test
pusha
jbe
sahf
cmp
iret
stos
sbb
shll
sub
jle
adc
sti
mov
jp
lcall
xchg
ret
imul
mov
ds
ljmp
jg
nop
push
sbb
mov
in
fwait
test
or
add
cs
push
fs
dec
mov
add
shlb
or
xor
inc
sti
pop
stos
stos
pop
xorl
and
sbb
mov
out
add
or
jp
or
mov
hlt
cmpsl
data16
out
xchg
in
pop
pop
xlat
int3
ret
aam
scas
jo
aas
push
bndstx
sbb
mov
shrl
adc
adc
loope
lock
cmpb
mov
or
mov
mov
cmp
dec
sub
xchg
insl
push
cmp
cld
addb
aam
pop
xor
cld
daa
ss
xchg
mov
dec
call
fcompl
ds
aam
cmp
inc
fs
dec
popf
ljmp
and
add
aam
add
mov
dec
lods
sub
and
xchg
out
mov
push
int3
mov
out
push
fwait
xchg
jae
inc
es
inc
adc
add
mov
xchg
arpl
nop
iret
mov
pop
hlt
xchg
in
das
std
xor
cwtl
xor
not
daa
es
out
sbb
sub
dec
jb
ficompl
push
inc
imul
les
shrb
out
hlt
dec
push
cmp
iret
xchg
cld
movsb
jp
repz
cmpsb
fcomi
mov
add
ffreep
jno
cmc
fldenv
push
jle
bound
xchg
add
sbb
xorl
mov
iret
mov
repnz
lret
xlat
mov
hlt
leave
call
xlat
in
mov
pop
inc
fmul
fcomi
mov
sbbl
inc
popa
mov
lahf
pop
out
adc
adc
aam
es
push
xchg
xor
dec
xchg
and
cmpsl
arpl
dec
cld
imul
mov
movsb
sub
pop
sub
jmp
or
int
rcll
sbb
mov
inc
in
push
adc
stos
test
or
out
xor
negb
popf
pop
or
sbb
sahf
insb
mov
dec
push
lea
jecxz
ficoms
cmp
or
lcall
loopne
xchg
jo
and
jecxz
and
incb
push
dec
iret
add
pop
jns
xor
push
sahf
pushf
xchg
aaa
lahf
and
xor
xlat
inc
test
ficoml
jns
jle
rolb
pushf
cmc
push
int
stc
jp
scas
or
fisttpl
cmp
cs
mov
xchg
cmp
cmpsb
scas
inc
mov
repz
or
xor
sub
cmp
sbb
jmp
nop
pop
icebp
xor
cmc
popf
sub
cmpsl
mov
add
push
add
jg
lock
aad
in
cltd
arpl
das
mov
in
ror
int
jg
inc
mov
in
mov
xchg
xor
movsl
fisttpl
repnz
sub
mov
jbe
rcll
repnz
cmp
sub
lret
cmpsl
or
out
lods
je
xor
mov
mov
shrb
es
mov
in
pop
je
call
notl
ret
js
cs
cmp
cld
xor
shrb
xor
cwtl
mov
jge
daa
repz
xchg
arpl
in
sub
cmp
mov
int3
cmp
inc
test
ret
mov
sarb
mov
jmp
arpl
xor
cli
sbb
xchg
iret
insb
ret
inc
cmp
test
cmp
cltd
in
push
int3
mov
pop
mov
pusha
addr16
mov
ds
sbb
mov
adc
mov
fucomip
test
jp
pop
popf
xlat
mov
sbb
sbb
push
in
dec
in
lahf
mov
iret
pop
dec
pop
jge
pushf
rolb
outsl
fimuls
jns
and
jg
in
or
xchg
ret
xor
dec
sbb
leave
psubw
sbb
xchg
push
pusha
out
mov
mov
in
inc
push
call
sti
inc
or
mov
mov
sbbl
xor
nop
xlat
inc
inc
sub
sub
pusha
mov
mov
and
jp
mov
test
fadds
cmp
cltd
insb
mulb
xchg
aaa
pop
xchg
xor
fcos
sub
and
dec
push
lcall
idiv
jne
lcall
icebp
push
xchg
rclb
out
jl
mov
test
pop
jns
add
int
rcrl
stos
test
xlat
out
jns
shll
pop
adc
or
inc
or
push
cmp
lcall
icebp
sbb
jb
pop
andb
jns
imul
lret
js
js
jmp
in
call
in
shlb
imul
jg
sbb
jo
repz
cmpsb
mov
cmp
out
push
stos
jae
dec
sub
jbe
insl
fcoml
mov
push
xlat
pop
mov
pop
mov
das
sub
addr16
push
popf
loopne
mov
mov
fnsave
loopne
outsl
adc
push
sahf
sub
nop
or
dec
inc
ret
dec
xchg
dec
push
adc
stos
js
hlt
std
and
mov
and
push
add
xchg
sbb
ret
out
mov
cld
sub
mov
and
lret
xor
mov
dec
bound
adc
mov
icebp
sbb
imul
mov
test
jp
xchg
imul
dec
push
fisttpl
popa
cmpsl
imul
jns
movsb
icebp
pop
lea
jno
jo
cltd
sbb
fcoms
pop
lcall
sub
inc
and
or
mov
cmpb
lahf
scas
dec
stos
subl
or
jbe
iret
dec
dec
iret
lahf
mov
lahf
fimull
xchg
fidivrl
test
iret
inc
mov
inc
pop
mov
xchg
and
jnp
cmp
shrl
into
mov
insl
lahf
mov
addr16
pop
push
lock
sahf
lods
or
mov
repz
test
loope
cwtl
dec
out
dec
or
xlat
cwtl
dec
jl
dec
push
sbb
out
xchg
pop
xor
insl
inc
lods
fstl
pop
neg
jae
pop
dec
or
sbb
stos
in
add
xchg
push
movsl
mov
mov
out
sub
push
test
xchg
xchg
loopne
jg
das
inc
dec
xchg
jns
or
inc
stc
jns
cmp
pushf
and
mov
pop
cmp
outsb
in
push
cmp
sub
pop
data16
cli
mov
cmp
push
push
les
cmp
cltd
and
add
or
xchg
imul
pop
jl
leave
pop
sbb
adc
mov
mov
dec
out
cmp
negl
cmp
je
push
das
fwait
inc
std
mov
cwtl
leave
scas
lods
sbb
inc
mov
push
rclb
scas
xchg
inc
stos
filds
jecxz
cmp
call
add
xchg
jmp
push
add
jnp
shrb
sarl
pcmpeqb
movsb
loopne
clc
mov
out
pop
xchg
mov
repz
fcomp
call
jecxz
aas
rcl
cli
fldenv
out
xor
inc
insl
mov
decb
js
repnz
xor
sub
in
out
in
test
xchg
sub
push
sub
ds
icebp
pusha
push
ret
xlat
jl
outsb
add
add
aad
push
idivb
movsl
js
and
fcomp
jmp
les
jp
sbb
loop
lea
add
mov
ret
leave
xchg
inc
addr16
movsl
in
mov
lods
push
aad
rcl
popa
mov
inc
xchg
push
xor
push
mov
int
popf
lcall
mov
jg
jl
lret
inc
bound
aam
sub
movsl
sbbl
pop
sbb
shl
dec
adc
les
jns
and
push
test
clc
sbb
int
movsb
testl
push
xor
and
test
ret
pusha
enter
ficomps
xchg
cmp
xlat
cwtl
xchg
in
cmp
scas
iret
push
loopne
xchg
xor
repnz
stos
jns
xor
push
stc
jnp
dec
test
mov
js
push
dec
pop
or
jmp
mov
aas
gs
je
rorb
adc
popa
out
jle
cwtl
inc
out
loopne
pusha
lahf
arpl
dec
outsl
mov
sub
popa
adc
out
mov
lcall
jp
mov
adc
lods
push
sbb
xchg
fdivrs
movsb
stc
ret
filds
repnz
test
or
jno
cli
xor
shl
bnd
pop
rcll
mov
sub
mov
dec
adc
pop
mov
cmp
fdivs
out
pop
enter
mov
push
loope
stos
outsl
jecxz
mov
mov
int3
jne
das
shrl
jl
add
adc
dec
sti
mov
sbb
or
dec
cmpsb
hlt
xchg
mov
xchg
mov
arpl
out
dec
dec
lods
dec
jns
aad
mov
push
dec
loope
popa
lahf
xchg
popa
sbb
sub
mov
pop
xor
mov
and
jl
scas
jmp
xor
scas
pop
sub
adc
rorl
sbbl
dec
imul
call
mul
dec
jg
or
cld
cltd
jae
subl
lods
addr16
aas
ret
cmp
daa
int
into
shll
cmpsb
mov
inc
pushf
mov
divb
dec
push
sbb
sahf
ret
cmpsl
scas
and
shlb
cmp
insb
mov
int3
fwait
inc
mov
push
mov
mov
cmpl
dec
repz
fs
stc
jae
imul
adc
inc
sbb
push
push
sbb
add
enter
adc
popf
adc
jl
inc
sbb
leave
insb
jmp
enter
sub
js
xchg
aad
pushf
loop
dec
sar
repz
push
xchg
xchg
lret
inc
sti
sti
xchg
fidivrs
std
movsl
icebp
jae
jae
shr
es
loope
cltd
lods
push
mov
cli
in
or
das
popa
call
aam
pop
pop
jmp
mov
push
mov
fs
aad
dec
int
fistpll
test
sub
outsb
je
jae
movsl
cmp
lahf
dec
roll
push
jne
imul
sub
sub
fmulp
mov
aaa
dec
adc
lret
mov
ret
movsb
mov
mov
xchg
add
test
inc
das
jcxz
fwait
cmp
fisttpl
sahf
add
cltd
dec
adc
adc
fwait
push
cli
or
cmpsl
cmp
mov
pop
lods
loope
call
iret
jmp
xor
mov
mov
push
cmp
and
sub
arpl
dec
cmpsl
cmp
or
pop
movsb
mov
gs
mov
sub
and
jg
mov
inc
nop
mov
push
mov
mov
bound
jg
pop
in
inc
dec
jnp
lods
sub
int3
mov
cld
imul
xor
ja
repnz
loopne
mov
out
xor
jb
mov
or
push
push
outsl
je
inc
stc
and
push
pop
lahf
and
adcl
mov
or
fldenv
push
push
fs
ljmp
fucomi
clc
push
ja
stos
daa
or
mov
test
fsub
fs
in
stos
ud0
mov
add
adc
fistps
lods
lret
bnd
add
sub
int3
xchg
mov
pop
or
popa
jno
std
hlt
xlat
test
clc
inc
xchg
mov
fcompl
add
dec
pop
or
mov
imul
jne
sub
inc
jp
sub
mov
and
adc
xchg
mov
das
or
push
fsubrs
mov
cmpsl
or
push
dec
jmp
jge
cmpl
push
pop
mov
xor
out
fwait
add
pop
ret
outsl
mov
mov
andl
mov
lretw
pop
adc
rcrl
mov
into
and
fistpl
jae
mov
into
mov
cmpb
repnz
scas
scas
mov
shlb
push
inc
ljmp
mov
dec
pushf
dec
jecxz
push
mov
adc
popa
jae
sti
xchg
cmp
sbb
frstor
mov
jb
push
or
call
cld
and
mov
enter
xchg
mov
addr16
gs
xor
in
dec
divb
fs
out
pop
shrl
mov
adc
adc
push
dec
mov
sbb
cld
sub
insb
xchg
sub
mov
outsb
xchg
inc
fdivrl
mov
xchg
js
pop
sti
adc
mov
cltd
mov
and
xor
enter
pop
std
sbb
js
jecxz
fistpl
mov
arpl
cmp
mov
shll
push
cmp
and
pop
push
jle
dec
pushf
mov
scas
jns
push
xchg
pop
mov
or
fidivrs
aaa
inc
mov
call
mov
rclb
mov
xor
stos
dec
int
imul
scas
dec
add
mov
popf
inc
popf
add
cmp
mov
jmp
cs
ss
or
sbb
lcall
mov
push
test
jbe
rorl
lea
sahf
sub
int3
ds
xchg
lcall
pop
jb
mov
adc
ret
add
cltd
push
int3
sub
lock
xor
add
adc
movsb
leave
in
push
dec
jbe
sub
jle
push
mov
cli
and
mov
es
push
xchg
imull
scas
movsb
and
mov
das
add
add
mov
test
or
push
mov
outsl
repz
lea
mov
movsl
push
pop
dec
xchg
je
mov
mov
pop
cmp
push
addr16
sbb
push
xchg
imul
lock
add
push
cmpsl
inc
push
mov
arpl
dec
dec
pop
add
outsl
repz
adc
pop
leave
mov
loopne
add
mov
mov
sbb
mov
insb
test
xorb
jle
testl
push
pop
repz
test
dec
xchg
jno
and
fildl
js
or
arpl
cmc
gs
movb
test
pushf
jbe
mov
mov
stos
bound
daa
into
test
out
cs
jns
std
pop
xchg
dec
jnp
jbe
pop
not
jbe
xchg
jns
push
xor
stos
xchg
adc
pop
out
mov
add
mov
dec
cmp
mov
or
push
mov
pop
in
mov
in
shrl
aam
lret
mov
loope
pop
add
mov
mov
and
fsub
cld
sub
insb
loop
arpl
or
in
jge
in
lock
out
and
xchg
cmp
dec
call
xchg
imul
in
mov
adc
sub
gs
in
push
pop
push
je
into
pop
loope
daa
xor
cmpsb
out
pusha
mov
inc
mov
fisttpll
and
mov
not
mov
adc
xchg
pushf
mov
cmp
les
dec
mov
pop
shufps
iret
and
jge
sub
cmpsb
cmp
adc
sub
fnstenv
pop
cltd
stc
dec
mov
mov
stos
add
add
aad
rol
arpl
or
dec
sub
lcall
push
adc
leave
clc
jecxz
pop
sbb
sub
xlat
jno
push
lret
pop
and
les
loope
fimull
pusha
rclb
clc
nop
loopne
dec
shll
or
mov
cli
jge
imul
push
and
or
mov
ficoml
ja
or
pop
inc
push
ret
daa
arpl
xchg
imulb
andb
jbe
push
jmp
mov
cmp
dec
adc
mov
loop
adc
fnstsw
pop
cmpsl
mov
clc
repnz
insl
call
jl
pop
or
fidivrs
adc
movsl
lret
ret
fwait
enter
cmc
cmovo
add
mov
aaa
cmpl
aam
jo
inc
enter
inc
and
jb
xor
mov
xchg
pusha
dec
pop
push
xlat
inc
mov
pop
pop
inc
mov
adcl
test
adc
fidivrl
daa
mov
arpl
ja
add
xchg
xor
out
xchg
cltd
rol
xor
fs
aad
lahf
into
push
addr16
cmp
push
imul
and
xchg
aad
outsb
fimull
jg
dec
es
pop
sub
push
testl
jmp
mov
add
out
mov
imul
mov
inc
lret
lcall
shl
push
mov
fidivrl
xchg
popf
leave
ss
adc
fistpl
pushf
xchg
call
cmp
jecxz
sub
mov
mov
lret
xor
incl
sub
movsl
inc
stos
subl
mov
sbb
outsb
xchg
fmul
stc
rcrb
pusha
sbb
inc
or
pop
mov
sbbb
adc
aam
adc
cmp
push
or
mov
ret
icebp
cmp
daa
dec
sbb
inc
xchg
or
xchg
popf
mov
scas
xchg
nop
lahf
or
and
jno
xor
mov
fmuls
test
mov
ja
cli
jmp
dec
je
sbb
add
cmp
add
dec
or
mov
and
mov
or
mov
and
cld
jmp
jecxz
mov
dec
cmpsb
add
add
xchg
test
mov
icebp
in
push
outsb
mov
push
jbe
pusha
addb
insb
daa
ljmp
dec
loopne
or
pop
push
aad
hlt
mov
mov
cs
pop
fistps
pop
clc
enter
mov
enter
xor
lea
sahf
cmp
dec
fisttps
sbb
cld
xchg
add
jp
add
push
cmc
and
xor
sbb
gs
xor
mov
fisubrl
mov
xchg
push
outsb
subb
pop
or
inc
ljmp
aad
mov
pop
aam
leave
sub
aam
fs
jo
adc
ja
outsb
ja
dec
les
mov
ds
fs
lahf
push
aad
and
mov
dec
jmp
push
and
fdivp
inc
loope
xor
lock
ret
mov
inc
arpl
mov
cltd
pop
and
imulb
jmp
or
std
sti
jnp
cmp
xor
addr16
negl
push
push
das
loope
inc
test
xchg
adc
mov
out
inc
movsb
pop
nop
push
adc
xchg
les
incl
cmp
test
test
repnz
mov
cld
test
adcl
xor
dec
add
loope
mov
mov
movsb
ljmp
fnsave
loope
testl
and
mov
or
addr16
in
leave
mov
rclb
stos
pop
mov
je
xchg
insb
push
mov
stc
dec
imul
cmc
sub
mov
jo
fwait
push
mov
insl
mov
imul
adc
std
imul
out
movsb
mov
arpl
mov
test
ljmp
inc
xor
cltd
mov
dec
iret
push
inc
mov
pop
lret
cltd
movsl
mov
gs
pop
aam
adc
jg
rcrb
jbe
or
inc
mov
shrd
xchg
sbb
test
pop
js
popa
jne
jnp
jb
aad
lret
rolb
rol
into
xchg
pop
mov
dec
incb
lea
and
jmp
xlat
push
fiadds
sub
and
jne
iret
cmp
stos
addb
mov
cmp
jns
mov
leave
lods
inc
das
lock
push
pop
xchg
dec
aas
inc
mov
or
dec
lods
aaa
mov
push
xchg
or
leave
xlat
cmpsb
mov
ljmp
adc
les
xchg
adc
pop
std
or
bnd
lods
pop
enter
out
adc
sbb
in
sub
jbe
movsl
jmp
jl
cmp
mov
insb
add
std
dec
out
cmp
dec
outsb
lret
ret
mov
adc
mov
jp
pop
out
aas
andl
movsl
insb
out
push
pop
jno
push
das
sub
inc
mov
stos
dec
fdivs
adc
sub
or
fisubs
mov
add
xor
int
cmp
push
sub
jp
test
add
pop
test
xor
iret
scas
cld
arpl
mov
mov
cmp
xlat
pop
push
mov
es
mov
jbe
cmp
lods
scas
pushf
add
jge
es
cmpsl
fnstcw
cmp
jmp
stos
xchg
out
dec
arpl
fstpl
mov
mov
inc
xor
neg
stos
add
dec
les
dec
out
lahf
mov
popa
ja
int
in
mov
decb
mov
mov
repnz
leave
sub
hlt
stos
push
fwait
cs
ficoml
nop
insb
pop
mov
and
pusha
lock
dec
lret
adc
push
jge
fwait
push
cmp
add
mov
mov
inc
test
sbb
inc
lods
mov
dec
std
pop
mov
cmp
sti
mov
jge
data16
and
fisubrs
out
loop
pop
test
push
das
ljmp
pop
or
js
jbe
popf
pop
shrl
and
sub
dec
jnp
sub
sub
pop
decl
jae
inc
jge
arpl
fsubrl
jmp
nop
and
loope
xchg
in
pop
push
loop
and
aas
jge
push
add
xchg
mov
mov
in
xor
jbe
xor
movsl
je
lock
jns
xchg
inc
and
pop
mov
and
hlt
stc
sub
hlt
push
xchg
mov
je
jmp
cmp
fstl
push
mov
jnp
shrl
sbb
loop
add
int3
mov
and
xchg
push
pop
push
scas
out
adc
in
jle
mov
cmpsl
movl
xchg
or
sub
loopne
sti
inc
mov
mov
cli
xor
sbb
sbb
and
lret
mov
xlat
imul
dec
xchg
xchg
xchg
jo
test
xchg
push
jg
repz
pop
jle
pop
loopne
add
pop
sti
push
icebp
adc
imul
sub
lcall
and
mov
pop
mov
add
add
push
ret
cmp
jnp
data16
mov
push
mov
outsl
frstor
pop
pop
stos
jae
sahf
jg
fs
lock
lret
je
loop
enter
mov
adc
les
arpl
cmp
and
into
loop
push
jmp
cmc
sti
jae
cld
cmpsb
cmp
or
int
outsl
lret
das
fsub
sti
jecxz
pop
out
inc
sbb
aaa
mov
lods
test
xchg
xor
stc
shr
sar
rclb
cli
divl
bnd
sbb
lcall
mov
imul
loopne
filds
xchg
add
outsb
and
cmp
and
adc
jecxz
pop
shrl
pop
mull
divl
adc
mov
xchg
daa
lret
mov
fisttpll
arpl
xchg
nop
insl
jnp
mov
pop
jle
shrb
jnp
call
fwait
cmc
scas
sti
push
sub
fst
adc
sbb
mov
mov
pushf
test
addb
aas
outsb
xchg
pop
mov
cmp
mov
sub
xchg
mov
in
add
add
push
inc
jmp
pop
std
add
in
pop
mov
xor
mov
pop
pop
je
push
and
push
pusha
xchg
addl
or
sbb
sbb
in
es
loope
or
sahf
test
popa
adc
in
shrb
jl
imull
pop
adc
imul
pop
ffree
pop
outsl
push
std
popa
into
mov
mov
xchg
call
dec
inc
xlat
cmp
push
into
call
sbb
adc
push
push
jno
pop
ljmp
mov
outsl
nop
out
or
fldl
dec
jne
sbb
dec
nop
adc
repz
fdivrl
mov
mov
iret
push
mov
orb
outsl
sbb
insl
lods
sbb
inc
mov
jne
fs
lods
cld
add
paddq
aad
push
ss
xor
xchg
mov
xchg
ss
xchg
in
fimuls
call
mov
jmp
inc
stc
mov
icebp
pop
fsts
push
add
data16
or
pushf
adc
js
psubq
dec
adcb
rcr
mov
insb
xor
push
les
test
xchg
ror
push
push
lcall
lods
cmpsl
push
cmp
movsl
jecxz
pop
mov
lods
inc
jge
clc
ja
loop
pop
sbb
scas
add
negb
xor
add
or
push
and
pushf
and
xorb
mov
mov
leave
and
xor
mov
inc
add
out
les
mov
lock
mov
lods
shlb
pop
cmpsl
dec
or
mov
lock
shlb
pop
push
pusha
sub
not
mov
ficomps
sub
in
cmp
arpl
sahf
add
shrl
mov
push
dec
push
int3
je
sub
sbb
repnz
imul
aaa
mov
test
cmp
scas
or
outsl
insb
mov
fnstcw
or
popa
jmp
ficompl
pusha
dec
jo
push
push
cmp
xchg
jl
movsb
mov
outsb
jb
rclb
jmp
mov
jns
add
jnp
adc
add
cs
jb
das
dec
jo
xor
clc
insb
inc
xor
xacquire
mov
gs
subl
addr16
addr16
aad
jmp
cmpsl
and
or
inc
xchg
jne
xor
popl
imul
adc
xchg
adc
std
scas
mov
pop
movsb
test
scas
roll
pop
sub
loop
mov
push
mov
aaa
les
int3
xor
mov
mov
imul
aad
in
roll
mov
add
jg
cmp
push
leave
mov
mov
xor
test
nop
pop
ficoml
xchg
push
popf
mov
or
ds
mov
ret
fcmovnbe
inc
push
testl
scas
and
cmc
or
sti
rolb
pop
xor
lock
pop
sub
push
mov
jle
fmulp
inc
cmp
movsb
sub
fsincos
sbb
cmpsl
icebp
and
mov
dec
add
out
pop
leave
xor
fisttps
test
pop
and
sti
push
mov
sarl
sub
jecxz
jne
and
inc
dec
cltd
js
test
sbb
aas
es
mov
push
xor
cmpsb
repz
jmp
xchg
lcall
pop
sub
mov
icebp
out
clc
popf
cmp
lock
push
loop
dec
pop
mov
jne
cmpsl
fidivl
lret
or
xchg
xchg
jno
mov
addr16
dec
adc
adc
cmp
xor
in
sbb
das
aam
fnstcw
cmp
dec
movsb
fcomps
icebp
dec
adc
pop
push
lahf
js
push
mov
popa
pop
push
stos
lds
cmpsl
das
mov
addr16
loop
fucomip
lgs
cmpsb
or
scas
jne
negb
push
and
daa
mov
xchg
jb
pop
mov
pop
insl
sbb
sub
mov
add
icebp
popf
mov
inc
jb
cmp
jge
imul
mov
inc
in
sub
cs
in
aam
and
jns
inc
xor
jo
adc
dec
add
daa
mov
outsl
sub
aas
and
pop
and
ret
aas
nop
inc
scas
jno
clc
clc
mov
aam
repnz
cli
sub
xchg
add
mov
adc
dec
mov
xchg
call
mov
pop
push
subb
push
push
loope
idivb
testl
and
sarb
mov
mov
ljmp
imulb
and
jl
mov
std
cmc
mov
jecxz
test
lcall
jg
fwait
adc
fmuls
mov
cmpl
loopne
lods
and
adc
stc
push
fldt
subb
push
inc
or
cltd
pop
xchg
adc
int
out
xchg
fbstp
push
shll
mov
dec
and
inc
insb
scas
dec
stc
xchg
pop
mov
dec
push
sbb
or
ja
jge
inc
or
rolb
push
clc
add
push
ds
stos
es
je
mov
push
sbb
push
adc
into
pop
out
ret
or
test
rcrb
mov
aam
xchg
mov
gs
out
scas
xlat
mov
sbb
int3
mov
cs
ret
imul
fbld
out
rorl
jmp
pop
sarb
arpl
loop
sahf
outsl
mov
loope
ret
push
push
sub
out
pop
add
dec
mov
mov
insb
aaa
add
fcmove
imul
out
mov
sbb
sbb
lahf
cmp
xor
push
lds
shlb
dec
jl
mov
hlt
rol
outsb
rolb
xor
adc
or
dec
sbb
jnp
lea
shrb
mov
or
and
imul
xor
inc
or
aam
or
aas
loopne
push
imul
das
mov
aad
fucomp
in
sbb
jne
into
xchg
push
cld
sub
and
jge
jne
mov
add
pop
stos
adc
nop
dec
and
jns
stc
xor
pop
decb
inc
lea
xchg
subb
cmp
add
daa
fst
or
clc
jo
add
sub
frstor
fs
aas
xlat
hlt
das
or
js
scas
stos
clc
iret
jns
sub
jge
sbb
or
jle
push
lahf
cmpsl
jg
shlb
test
or
imul
insb
push
and
xor
jle
rorb
adc
push
outsb
idiv
or
and
cltd
pop
arpl
cmpsl
mov
loop
add
sbb
jb
test
lods
adc
and
cld
adc
sbb
mov
xchg
in
test
aam
mov
cmp
sbb
push
cmp
jl
pop
jg
push
lods
dec
jnp
insb
aas
fdivrl
clc
jl
dec
add
push
mov
dec
icebp
add
paddsb
sbb
inc
mov
dec
out
pop
or
lods
icebp
push
sbb
mov
push
xor
stos
mov
pop
ret
xchg
leave
test
ret
cld
xlat
push
aaa
fadds
aas
mov
into
pop
adc
out
loope
xlat
lods
jnp
jnp
lret
test
hlt
sbb
jecxz
push
mov
popa
sub
xchg
push
mov
sbb
lock
mov
fisubrs
xchg
gs
xchg
push
in
adc
and
adc
cwtl
xchg
and
pop
or
lahf
add
jno
push
inc
jle
jb
xor
fmul
es
cvtpi2ps
test
dec
mov
sbb
adc
mov
mov
sahf
andl
mov
ds
jmp
adc
cmp
sub
mov
cmpsb
subb
or
pop
jge
test
xor
jmp
cmp
and
cmp
popl
push
adc
add
or
bswap
fsubl
cmp
mov
cwtl
call
jbe
add
mov
dec
add
stos
pop
fists
xchg
icebp
pop
or
xchg
popf
jecxz
ja
andl
btr
mov
mov
mov
and
out
sahf
fiadds
mov
sub
out
outsl
xchg
sub
icebp
xchg
pop
rcrb
fistpl
repz
pop
iret
cmp
mov
sub
in
inc
or
inc
ss
movsl
mov
sahf
cmpsb
xor
sub
mov
arpl
adc
lahf
inc
xor
xchg
insb
in
jle
xor
fs
jl
mov
pop
sub
adc
imul
std
xchg
rcll
aas
pushf
dec
push
and
adc
push
push
lods
jne
fdiv
aam
pop
adcl
sub
xchg
inc
cmp
fildll
outsb
roll
lsl
push
mov
dec
lds
jg
sub
sbbb
incl
jae
jle
lods
pusha
adcb
jnp
jl
cmp
out
insb
mov
test
and
add
jp
std
xor
std
test
push
xor
lret
icebp
and
xchg
test
lods
sbb
sbb
mov
out
or
sbb
mov
dec
mov
ja
xchg
mov
push
in
sub
dec
lods
dec
xorb
insl
inc
loope
xor
loope
adc
mov
daa
cmp
in
mov
xchg
sti
and
rorl
add
cltd
int3
repnz
movsl
inc
mov
mov
lea
mov
in
xchg
sbb
mov
and
jle
rorb
push
xor
mov
orl
dec
lock
rcrl
dec
cmpsb
in
mov
pop
jo
mov
push
jl
daa
fldl
jecxz
jb
xchg
lock
push
fcoml
jge
push
jmp
mov
leave
inc
sub
adc
mov
dec
out
out
incb
es
push
mov
scas
pop
mov
lcall
out
movsl
cmp
int
out
movsl
ja
cmp
dec
out
insl
cmpl
xchg
mov
sub
mov
xor
xor
push
adc
movsl
fidivrs
sub
jbe
mov
shrb
lea
mov
xchg
mov
iret
jge
jp
cmpsb
sti
loope
movsl
insb
rcr
and
shrl
mov
add
push
adc
stos
mov
ja
lock
call
adc
nop
push
decl
movsl
jb
insl
test
jae
andl
lret
movsl
in
push
adc
jno
jno
push
sbb
push
in
movl
pop
and
insl
and
pop
jp
mov
xor
adcl
cmpsb
je
mov
jecxz
lret
rcrb
sbb
cmc
cmp
jbe
mov
sub
adc
sahf
sbb
jbe
aam
mov
stos
xchg
pop
mov
shl
and
sahf
and
xor
or
sahf
iret
mul
jp
daa
cwtl
mov
sub
lret
push
xor
cmp
dec
xor
in
sarl
push
pop
add
inc
dec
mov
adc
jmp
cmp
mov
cmp
add
js
mov
sub
sbb
xchg
stos
loop
fmull
pop
adc
adcl
sub
packsswb
stc
sub
or
popf
sahf
add
shll
and
dec
push
jnp
inc
and
push
mov
xor
out
repnz
fnstsw
mov
sub
sub
test
mov
sub
or
lods
sub
cmpsl
jge
push
pop
cmp
ret
xor
dec
mov
pop
jmp
je
pop
int
movsb
loopne
mov
xchg
or
lret
adcl
les
enter
fbstp
push
mov
cmpb
cwtl
or
add
or
lds
and
mov
iret
sub
gs
and
push
pop
mov
add
test
or
adc
add
or
testl
aam
pusha
xchg
sar
nop
in
pop
jae
xor
fisttpll
cld
jg
daa
add
imull
icebp
pushl
shll
and
push
xor
xor
fisubl
out
push
push
dec
cwtl
fildll
add
adc
mov
cltd
mov
ds
jo
mov
adc
pop
adc
subl
push
jnp
xchg
mov
xor
jle
add
jno
dec
mov
mov
lods
orb
scas
push
les
popa
gs
inc
push
xchg
lock
xchg
fwait
addr16
adc
sbb
roll
loope
ret
cli
xchg
xchg
mov
hlt
inc
push
add
dec
out
lods
repz
fsubrl
cmp
ss
bound
adc
pop
mov
push
je
inc
ja
xchg
ljmp
cmc
push
rorl
stos
jl
outsb
sbb
loop
xor
sub
loopne
adc
mov
mov
mov
mov
pop
push
sahf
xlat
jne
add
cs
jge
ljmp
xor
int3
and
dec
movsl
sub
lret
mov
aaa
push
mov
shll
or
or
push
sbbl
div
rol
test
xor
push
jb
sub
xchg
push
adc
dec
sub
sub
pop
in
js
es
jnp
dec
stos
push
mov
sbb
or
inc
add
daa
or
jp
daa
jns
xchg
int
je
inc
popl
test
pop
loop
ss
or
sbb
sub
jg
inc
adc
xchg
into
andb
xor
bound
xchg
psrlw
push
push
addr16
scas
cmp
int3
stos
mov
mov
pop
scas
cld
lahf
cmc
pop
pop
push
addr16
pop
add
clc
mov
jbe
cmp
lret
cli
lret
inc
push
xchg
push
and
cmpsl
pop
xchg
jno
mov
jns
mov
jno
push
mov
xchg
inc
loopne
fdivrp
test
fstl
in
iret
cmp
push
popf
sub
pusha
test
push
stc
lock
gs
mulb
ficomps
pop
xorb
push
ss
jecxz
or
sahf
flds
sbb
loopne
push
loop
jns
and
insb
scas
rorl
scas
lret
popf
lcall
cmc
push
jle
shlb
xor
pop
pop
cltd
fistpll
push
and
into
in
into
xlat
adcb
mov
xor
dec
push
pop
int
popf
loop
out
and
pusha
out
mov
xor
and
fcmove
loop
adc
stc
and
idivb
ja
cmpsb
dec
dec
lea
loopne
in
fs
xor
pop
fnstsw
jle
xorb
adc
lock
fdivs
jnp
jecxz
add
int
stc
testb
lea
sbb
lock
mov
shlb
pop
fnstcw
bound
sub
add
mov
lock
inc
testb
xchg
lret
sbb
cmpsb
xchg
repz
cmpb
xor
sub
movsb
mov
dec
int
push
adc
pop
addr16
lcall
dec
xor
inc
movsb
xchg
fldcw
mov
aam
into
cli
lret
sbb
pop
push
ljmp
adc
jmp
adc
mov
pusha
and
dec
ror
or
fmull
push
add
mov
jmp
ljmpw
sahf
lds
dec
les
adc
dec
cmp
mov
dec
mov
ljmp
loope
sti
lods
mov
pop
fidivrl
icebp
hlt
popf
sarl
cmp
aas
cmp
add
in
inc
pop
out
and
push
test
cmpsb
ljmp
fisubrs
test
mov
repz
movsb
jl
sbb
rcrb
mov
sbb
das
in
subl
inc
adc
or
xchg
cltd
std
push
lea
cmp
and
sbb
adc
mov
adc
sti
repnz
mov
in
or
stos
ss
pop
andb
out
lahf
lods
mov
fidivrs
xchg
in
movsb
cmp
mov
rorb
add
mov
xor
and
pop
adc
div
inc
hlt
ret
xor
pop
repnz
sbb
pop
cmp
xor
mov
mov
xor
iret
mov
cmpsb
out
dec
xchg
pusha
std
rcr
push
repnz
lock
test
jmp
out
xchg
inc
xor
sub
lods
popa
jae
test
ja
adc
stc
mov
fcmovnb
rcrl
test
test
pop
into
add
js
or
fucomi
into
fstl
xor
jae
pushf
cmpsl
cmp
fwait
mov
dec
mov
in
jb
arpl
sbb
aaa
hlt
stos
mov
lods
inc
fstpl
mov
lret
popa
outsb
in
inc
inc
pop
lods
out
add
xor
rcrb
dec
mov
loopne
xor
sub
jb
dec
fdivr
cmc
xchg
jno
push
push
adcl
enter
aad
mov
ret
sbb
aaa
loop
flds
jl
sub
jg
adc
push
lret
fisttpl
push
push
inc
adc
test
aas
testl
fsubp
orb
cmp
insb
push
or
pushf
ljmp
jb
xor
cmp
roll
stc
fnsave
push
sbb
add
lret
enter
out
mov
push
and
popa
stc
out
sbb
and
mov
arpl
loope
in
pop
fs
sbb
aas
shll
lret
add
clc
and
sub
lret
dec
xor
push
loope
sti
faddl
jp
push
test
roll
sub
mov
jg
loopne
mov
loopne
lods
push
iret
lea
and
out
jl
pop
xor
jb
or
mov
lret
subb
mov
pop
in
repnz
xorl
jmp
xchg
movsl
outsb
dec
mov
mov
pop
add
pop
sbb
mov
cmc
mov
vunpcklpd
pop
mov
push
aam
mov
sub
push
cmp
pop
imul
pop
mov
sub
mov
in
pushf
push
push
in
aad
in
mov
or
lahf
sahf
ja
lret
pop
mov
lock
jg
sub
pusha
mov
out
stc
nop
or
int
mov
shll
lahf
dec
insb
aas
insl
loope
mov
imulb
lock
clc
pop
cli
out
setg
pop
add
push
jns
xor
daa
lods
push
sbb
fcoms
ss
jae
stc
repnz
lock
pop
xchg
mov
cmc
add
push
pop
pusha
cmp
aam
adc
adc
popf
scas
mov
cli
adc
sub
scas
adc
jge
cmp
int
imul
push
ficoms
sbb
dec
fs
and
fisubrs
bound
push
sbb
imul
xchg
imul
and
mov
dec
mov
cli
out
aaa
cmpsl
push
add
addr16
adc
pusha
into
or
push
shll
test
mov
roll
add
mov
rcrb
movsl
jecxz
nop
xchg
jl
andl
sub
dec
icebp
inc
add
sbb
jle
insb
dec
inc
xchg
bound
xchg
mov
push
dec
pop
aam
add
jo
mov
mov
add
jecxz
jae
scas
ds
stos
pop
cli
cmpsb
push
push
mov
sub
jne
fldl
fimull
popa
adc
push
fs
mov
stos
sti
or
cmpsb
fwait
xchg
outsl
mov
cmpsb
dec
les
mov
push
cmp
adc
and
daa
or
movsb
std
lcall
loopne
fucomp
pop
loope
out
addr16
xor
xchg
in
sbb
aas
ds
fmull
pushl
jnp
mov
inc
and
movsb
pop
out
mov
adc
lret
jp
addr16
insl
inc
cmp
hlt
loop
push
push
adc
mov
dec
pop
leave
sbb
dec
in
out
push
leave
adc
aaa
xor
and
xchg
int
arpl
xor
imull
push
cmp
and
inc
mov
pop
xchg
scas
inc
xchg
jno
inc
je
aaa
sub
and
loop
and
xor
sbb
mov
cmp
add
int3
mov
repnz
mov
ljmp
outsb
rorb
and
les
push
mov
cmp
push
mov
and
xchg
pop
imul
push
mov
fcoms
jle
add
push
sarl
movsb
cmpsb
aam
aaa
mov
adc
inc
insb
rolb
pop
inc
push
push
data16
jns
outsb
inc
out
fsubrs
pop
xorl
aas
scas
out
into
pop
cmp
into
out
adc
enter
xchg
dec
into
fidivs
rolb
stos
sbb
ja
push
addl
dec
jle
scas
mov
pop
icebp
lret
movsb
jb
push
sbb
addr16
sbb
adc
rorb
mov
or
outsb
es
push
mov
test
and
mov
in
lcall
mov
and
pop
push
or
or
das
cmc
rclb
mov
jl
rcll
add
dec
ss
xor
jecxz
daa
call
je
shll
shlb
cmc
loop
pop
ljmp
out
repnz
insl
cmp
xchg
add
mov
adc
loop
pop
add
dec
insl
in
in
nop
push
dec
sbb
jmp
mov
sub
dec
or
clc
fadds
push
push
cmpb
aaa
inc
xor
inc
xlat
stos
icebp
stos
or
into
jno
ja
jp
ljmp
mov
outsl
push
sub
fcmovne
stc
out
cmp
shll
mov
pop
jnp
fistpll
mov
inc
inc
sbb
loope
inc
xor
outsb
mov
aad
push
mov
jg
xlat
fildl
lahf
insb
mov
lcall
arpl
sbb
xor
sbb
fwait
testb
lret
cs
out
jo
das
outsl
out
sub
hlt
imul
cmp
push
sub
cli
and
stc
dec
popa
cmp
popa
mov
mov
adcb
jecxz
iret
and
js
es
add
mov
sbb
jmp
mov
add
dec
xchg
fstps
jae
pop
out
insb
dec
shl
pusha
icebp
push
loopne
sub
push
test
imul
mov
xchg
mov
scas
xchg
lea
pop
hlt
sar
fcmovb
hlt
nop
xor
xchg
js
adc
rclb
mov
or
enter
push
into
outsb
fldt
mov
and
fcmovb
dec
mov
fsubs
dec
sti
cmc
push
ret
leave
mov
insl
popf
mov
jne
cld
dec
sub
outsb
lret
inc
call
sti
dec
add
inc
test
into
sub
int3
stos
psubsb
or
mov
sbb
adc
sub
insb
mov
adc
shl
ja
mov
mov
sbb
subl
mov
or
sbb
mov
sbb
mov
add
add
jmp
jp
lahf
je
fwait
jae
pop
icebp
jmp
add
mov
cltd
inc
addr16
xor
bnd
and
adc
mov
xor
sub
fcmovnb
fstps
jl
push
or
or
out
shlb
mov
les
cmp
xor
jae
fldenv
mov
push
ljmp
aas
push
lret
xchg
data16
xlat
lahf
jne
pop
pushf
xorb
cmp
or
lods
and
icebp
pop
ja
sbb
cmp
mov
adc
or
jae
cltd
jl
lret
in
inc
xor
and
xchg
or
push
dec
pop
and
xor
out
outsw
mov
push
jl
mov
xor
les
cmpl
daa
adc
mov
inc
lahf
aas
movhps
mov
pop
imulb
dec
imul
scas
cmp
repnz
cli
sbb
mov
jg
repnz
addr16
sahf
jle
dec
mov
xchg
jge,pt
inc
add
outsl
jnp
stc
lret
outsl
jo
test
push
aad
sbbl
stos
cltd
push
nop
fdivl
dec
or
ljmp
fstpt
and
pop
scas
lods
adc
xchg
xchg
jp
sahf
dec
and
stc
mov
push
cmp
lret
cmp
cltd
inc
push
dec
mov
mov
adc
std
dec
shlb
mov
mov
leave
cmpl
push
xor
xor
dec
and
mov
cmpsb
les
aaa
movsb
loopne
jp
popa
fnstsw
sbb
push
xchg
testl
insl
test
jge
mov
jo
and
and
loopne
mov
and
filds
pop
pop
xor
xlat
mov
mov
pop
int
bound
fwait
ljmp
jmp
bound
aad
lahf
mov
loop
cmpl
dec
ret
call
mov
adc
ret
mov
fisubrs
mov
push
mov
fists
sbb
push
popf
jecxz
fisubs
xor
inc
mov
inc
lods
mull
lods
addb
mov
bound
mov
loopne
push
pop
pop
std
movsb
mulb
jmp
jno
loope
xlat
jbe
daa
lock
dec
fbstp
push
sub
cwtl
push
shr
mov
mov
insb
in
cmp
aad
stos
sbb
adc
repz
js
call
add
out
sub
stos
jle
fsubr
clc
cmp
mov
xor
dec
pop
xor
dec
xchg
loop
adc
in
push
jp
pushf
push
cmp
and
adc
and
popf
icebp
jno
pop
xor
inc
mov
mov
mov
imul
stc
add
inc
mov
dec
js
je
mov
shll
xchg
lods
and
mov
jns
push
xor
test
jb
adc
inc
dec
pop
outsb
or
pop
pop
sbb
lds
cmc
mov
dec
xchg
mov
stc
imulb
popa
test
adc
repnz
fwait
ror
test
push
inc
lret
es
movsl
sahf
mov
lods
jl
test
loopne
jle
insl
outsb
mov
rcrb
lret
cmp
subb
adcb
add
clc
pop
popf
in
hlt
dec
sub
dec
cmp
xchg
aam
arpl
into
xchg
mov
decb
mov
fnstcw
jle
gs
mov
inc
in
loope
ljmp
push
push
mov
stos
out
cmc
inc
lea
inc
inc
mov
rcl
sub
cmp
inc
cmp
movsl
mov
cmp
inc
andb
pop
dec
arpl
jb
cli
mov
enter
test
in
mov
fdivrs
push
push
pop
dec
jle
outsb
cld
mov
or
xor
mov
pop
xchg
sub
and
sbbw
inc
inc
mov
pusha
mov
outsl
mov
push
test
data16
add
mov
jo
mov
mov
or
enter
fisttpll
ss
out
dec
sub
sbb
int
cmp
inc
popa
movsl
enter
jp
pusha
mov
pop
cwtl
xchg
pop
sbbl
repnz
push
mov
ljmp
mov
jo
and
popf
jmp
ja
nop
push
mov
sub
inc
xchg
cmc
mov
pop
fistps
cs
gs
rcl
out
aam
and
jmp
ret
sub
pushf
int3
nop
mov
cld
jmp
sti
fldenv
jns
xchg
je
mov
xchg
or
jo
inc
movsb
lcall
insl
pop
add
orl
sub
jo
mov
mov
or
std
mov
xor
icebp
adc
inc
dec
data16
jnp
sub
ja
in
push
sub
mov
xor
push
push
test
les
xor
aad
in
ss
jo
mov
imul
test
pop
mov
adc
movsb
lods
scas
cli
cmp
orb
nop
aam
pop
sub
icebp
adc
lret
xchg
mov
or
shrl
dec
lcall
jae
movsl
cli
test
sub
sbb
aam
gs
test
bound
es
jns
cmpsb
imul
lahf
out
sub
and
jp
mov
mov
push
xchg
dec
into
mov
and
movl
popl
pop
idivl
enter
xchg
jge
mov
cmc
mov
adc
and
push
pushf
or
shlb
jl
cmpsb
and
add
clc
inc
loope
cwtl
movsl
pop
pop
ja
ss
fisttpl
inc
mull
sbb
inc
and
jl
daa
in
in
dec
xchg
call
in
data16
or
js
mov
and
das
in
out
mov
test
sub
out
push
mov
push
hlt
push
xchg
movsl
add
sbb
pop
es
test
mov
lcall
push
enter
ret
imul
cmc
xor
pop
dec
loopne
or
adc
jno
sbb
movb
insl
inc
scas
out
int
push
add
enter
xchg
hlt
sarl
cmp
clc
sarl
sbb
mov
mov
jno
push
or
pop
movsb
movsb
jb
adc
push
jl
mov
adc
push
lahf
jo
cmc
loope
cmp
jne
mov
push
pop
dec
mov
das
out
insb
and
shlb
out
ret
vfnmsub132sd
loop
mov
dec
and
xchg
aas
mov
loopne
adc
cmp
sbb
xlat
imul
mov
inc
adc
sub
cwtl
adc
gs
mov
or
pop
cmpsl
cs
cmp
mov
arpl
test
loopne
mov
cmpsb
jb
outsl
adc
push
inc
fdivrs
jle
call
xchg
sbb
jp
mov
pop
aad
ljmp
call
sbb
jnp
pop
bound
xchg
out
and
dec
sub
sbb
add
das
out
mov
sbb
pop
ret
jge
dec
sbb
shl
fidivrs
lds
insl
shr
jge
mov
and
cmp
push
cmp
cmp
xchg
mov
push
in
jo
adc
ss
push
dec
in
nop
jns
iret
hlt
jo
jne
adc
test
shlb
dec
add
add
and
push
add
movsb
jbe
neg
rol
in
rolb
test
xchg
or
xchg
fdivl
loope
and
or
ret
das
dec
sub
adc
sub
loope
and
mov
or
adc
dec
mov
or
rorb
test
bound
fcompl
cmp
out
pop
push
sub
popf
mov
cmp
mov
std
inc
push
pop
imul
dec
or
inc
and
inc
mov
mov
icebp
mov
push
insb
test
jne
push
enter
jb
mov
xchg
out
imul
cmp
sahf
cwtl
adc
lahf
out
nop
mov
aad
push
inc
ds
xchg
dec
sub
sbb
inc
int
jmp
shll
ja
in
mov
adc
xchg
adc
enter
hlt
pushf
cmpsl
lcall
jb
cmpsl
sarl
data16
dec
leave
insb
ljmp
pop
sub
pop
mov
imul
sbb
xor
daa
push
cmpsl
clc
mov
push
test
rcrb
cmc
mov
mov
scas
xchg
stos
sbb
out
inc
mov
push
push
fdivs
push
xor
mov
das
jae
ljmp
out
mov
or
bound
dec
push
adc
movsl
inc
mov
mov
mov
jmp
outsl
xchg
dec
scas
mov
lahf
and
lahf
in
out
pop
bound
loop
jns
xchg
into
jp
cmovne
in
ja
jmp
out
cltd
out
jmp
pushf
mov
test
mov
inc
pop
sub
mov
jecxz
or
ret
das
mov
clc
mov
pop
es
xchg
in
inc
push
jbe
imul
xor
or
mov
hlt
and
xchg
std
test
mov
sbb
xor
pop
gs
mov
enter
mov
xchg
push
icebp
push
leave
push
dec
sbb
push
dec
push
mov
std
adc
pop
sti
sub
jecxz
cpuid
sbb
leave
data16
dec
fstpl
sbb
scas
out
iret
aas
lods
jae
outsl
arpl
mov
sbb
bound
dec
add
ds
xor
cmp
xor
adc
xchg
adc
lcall
cmp
xor
push
lcall
adc
enter
aas
fmull
or
or
push
pop
or
jl
sbbl
int3
ret
push
rorb
insl
mov
push
lret
jns
or
cmpsb
out
gs
jb
add
dec
mov
add
out
outsb
cmp
mov
lea
jmp
xor
mov
cltd
xlat
mov
xchg
stos
incl
inc
xorb
jg
mov
out
dec
jmp
sbbl
repz
mov
hlt
and
mov
pop
pop
push
and
repnz
dec
lcall
loop
pop
sbb
adc
shlb
into
hlt
sub
cmp
xchg
data16
mov
cmp
ret
and
daa
cld
add
mul
cmp
dec
sbb
or
sub
loopne
fnstcw
push
adc
push
adc
push
out
add
sbb
pop
add
iret
mov
xor
jne
mov
push
jo
shrl
cmp
shrd
std
jae
data16
loop
imul
xlat
out
pop
adc
test
cmp
jns
ficomps
xchg
sar
js
and
dec
jbe
hlt
pop
rcll
dec
adc
cmc
fdivs
into
leave
dec
mov
ja
in
out
fistps
lret
jl
sub
jp
cmc
pop
xchg
push
fdivrs
jp
jmp
inc
mov
or
pop
add
dec
push
mov
data16
cmpsb
xchg
jns
loopne
lock
movsb
pusha
jmp
jmp
xor
mov
pop
sbb
je
or
leave
mov
shlb
jns
adc
and
or
movsb
dec
scas
ds
jo
popf
fimuls
sbb
jmp
orl
lahf
dec
mov
sahf
sub
mov
ficompl
test
and
mov
cmp
pop
lahf
dec
mov
or
out
insb
dec
cmc
addr16
mov
shlb
jmp
in
ret
lcall
test
aad
outsb
jecxz
fdivs
pop
test
push
nop
clc
cmp
ja
aam
scas
aad
aam
fsubrl
dec
xor
cli
arpl
mov
cmc
jp
add
or
mov
pop
mov
imulb
xor
adc
and
int3
jne
out
lock
rclb
push
push
cmpsb
aad
jp
add
popf
into
add
and
sbb
xor
rcrb
sub
push
mov
jmp
jbe
pop
cmpsl
aad
mov
std
loopne
and
pushf
push
push
lcall
ret
fwait
dec
je
sub
cli
std
adc
mov
add
faddp
mov
clc
arpl
cmp
jge
push
ss
adc
fstpl
sbb
pusha
cmp
ss
adc
mov
dec
outsb
add
or
mov
mov
mov
cmp
add
mov
xchg
out
and
rorl
mov
or
jnp
inc
iret
mov
lock
jo
cmc
cmc
mov
or
dec
into
inc
mov
dec
sbb
inc
lods
dec
sub
dec
pop
add
pop
icebp
test
mov
clc
scas
fwait
cwtl
push
jb
pop
sbb
cmp
jg,pt
fucomp
in
lret
scas
adc
xor
ja
jnp
movsb
fmulp
rcrb
movsb
adc
jl
dec
xchg
push
mov
andl
sub
js
mov
add
sbb
add
sbb
dec
jmp
push
stc
mov
loope
lcall
push
sarl
addl
lds
inc
dec
pop
mov
or
icebp
jmp
xor
sbb
xlat
aam
cmp
into
cmp
push
pop
jne
mov
cmpl
mov
daa
mov
ret
jecxz
je
inc
adc
xor
push
loopne
je
push
xchg
pop
ret
mov
es
lods
sub
cmp
aaa
std
decb
js
lret
jp
push
xor
sub
jl
shr
mov
aaa
mov
aam
xchg
lods
cmp
sahf
adc
rcll
and
ss
xorb
or
mov
xor
push
repz
repnz
aaa
mov
pop
inc
sub
inc
stos
pop
inc
mov
or
into
mov
adc
lret
cmp
jae
popa
jge
sbb
xchg
in
fistl
push
or
or
ret
xchg
jp
cmp
dec
sbb
int
adc
xorb
sti
mov
dec
fisubrl
and
test
scas
pop
out
adc
mov
ret
loop
test
mul
add
iret
adc
daa
jbe
shl
stos
sbb
jg
cpuid
test
fimull
push
hlt
stos
add
mov
cmpsb
xchg
mov
xor
dec
lret
outsb
inc
subb
ja
mov
data16
jbe
dec
into
and
jbe
repnz
pop
adc
inc
repnz
push
add
xor
xchg
xor
mov
sub
mov
pushf
push
cli
pop
das
sarb
push
mov
insb
out
sti
jb
es
popa
lret
mov
inc
mov
pop
cmc
pop
call
idivb
mov
inc
xchg
mov
subl
fxch
in
adc
xchg
and
adc
pop
inc
test
pop
sbb
and
lods
in
jl
mov
cmp
adc
loope,pt
cltd
fsubs
adc
dec
mov
xlat
xor
adc
orb
rclb
ret
aas
and
outsl
mov
cmp
jl
into
adc
mov
ljmp
loope
mov
jns
mov
adc
inc
data16
dec
mov
jo
fstps
mov
push
push
lahf
repnz
push
and
inc
push
inc
push
inc
lret
cmpsb
cmp
xlat
ds
imul
mov
mov
fcmovnb
pop
xor
mov
add
and
or
dec
sbb
dec
cmc
cmpsl
dec
push
call
in
adcl
and
cmp
aad
jae
adcb
xchg
cmc
cmp
movb
aam
mov
and
xor
inc
xchg
jno,pn
push
gs
mov
push
sub
into
daa
inc
test
mov
push
xor
fisubl
rcll
insl
sbb
jns
lcall
std
in
dec
sub
mov
dec
cmp
sbb
xchg
mov
cli
sarb
xor
adc
inc
and
hlt
fsubp
and
pop
subb
nop
fbld
enter
dec
cmpsb
mov
ljmp
mov
jno
mov
adc
lcall
aas
outsb
mov
mov
jno
movsb
int
lret
mov
mov
into
cs
push
dec
or
and
lcall
jg
in
cmp
xchg
popf
out
int
sbb
lret
cmpsb
inc
lret
adc
in
mov
stc
push
jnp
daa
cmpsb
inc
mov
bound
ss
mov
mov
mov
sbb
loop
scas
sbb
fbstp
mov
jo
sbb
mov
ja
repz
jae
push
frstor
mov
lock
fisubrs
pushf
fstps
cmpsb
lahf
or
in
push
adc
pop
jmp
lret
or
inc
lea
sbb
dec
mov
jge
mov
ret
inc
mov
cltd
cli
add
cmp
popf
insb
lcall
mov
outsb
mov
jno
in
jb
and
out
mov
je
divb
fisttps
cld
sbb
push
and
dec
mov
movsl
insl
inc
adc
xchg
jmp
pop
mov
and
mov
mov
inc
movsb
ljmpw
pop
push
inc
adc
dec
mov
test
push
out
in
mov
pop
lahf
push
pop
mov
add
shl
fcomi
mov
mov
push
ret
in
call
enter
fwait
sbb
mov
adc
in
sbb
mov
mov
imul
orl
pop
mov
std
xchg
pop
push
mov
or
stos
dec
mov
into
fcompl
fld
push
je
sub
imul
sub
sub
cmp
lods
je
adc
mov
adc
adc
or
stc
jle
or
mov
repz
push
aaa
out
adc
out
jecxz
adcb
movsb
in
sub
lea
dec
mov
ficompl
dec
pop
cmp
xor
out
and
ljmp
pop
mov
dec
aaa
adc
mov
aam
and
fildll
in
popa
aaa
test
cmc
mov
je
pop
into
bound
mov
hlt
lcall
movsl
mov
mov
pop
mov
dec
shll
mov
mov
xchg
aaa
mov
lret
push
jg
clc
imul
call
adc
mov
es
jmp
das
jmp
into
aas
notl
fwait
xchg
mov
jo
mov
cmp
roll
cmpl
add
mov
ss
cltd
jmp
sub
insl
push
mov
sbb
mov
fwait
cli
mov
dec
jno
sahf
pop
lcall
or
inc
mov
mov
les
pop
loopne
shl
jge
imul
jne
inc
mov
je
lret
std
daa
lahf
lods
or
xor
or
pop
cmp
push
fs
in
movsb
insb
jle
imul
jno
push
mov
sti
push
test
sub
cmp
mov
xchg
sbb
jns
dec
daa
pop
repnz
cmpsl
mov
add
test
inc
scas
mov
mov
and
pop
mov
int3
add
or
sub
xor
inc
sbb
jno
push
dec
les
adc
mov
lea
sbb
jle
or
out
push
cmp
mov
xchg
sub
loop
push
cmc
movb
jnp
xor
adc
mov
xchg
pop
push
pop
shll
outsb
push
aad
lcall
shlb
mov
notl
int3
cmp
mov
mov
mov
loopne
insl
ja
mov
out
test
pop
and
in
sub
lahf
xchg
fmuls
inc
out
jbe
mov
loop
sbb
and
inc
pop
xor
lods
xchg
lods
mov
xor
xor
mov
sti
inc
icebp
ds
jns
cmp
pop
aam
push
lret
cmp
xchg
pop
push
pushf
jmp
lods
je
movsl
cmc
scas
mov
mov
mov
cmc
xchg
data16
insb
push
and
ret
lods
out
in
loop
sar
div
test
jle
mov
sbbl
ljmp
mov
out
mov
sub
push
pop
imul
fcmovu
ret
daa
repnz
push
leave
lock
cmpsl
sub
push
dec
push
movsl
aad
mov
mov
and
loop
int3
or
push
push
repnz
stos
insb
pop
adc
jae
jecxz
std
je
aas
andl
push
test
lock
fiaddl
xor
lock
mov
pop
xlat
pushf
or
jl
push
hlt
pop
mov
jmp
push
movsb
jl
in
mov
or
rcrl
shrl
stos
push
outsl
push
push
mov
xchg
fwait
inc
mov
jb
cs
cmc
call
or
sbb
lea
cwtl
shl
or
xchg
outsb
shll
mov
es
cltd
sub
sarb
enter
xor
xor
cmp
push
sbb
decl
les
cmc
popa
push
or
xchg
rorb
pop
xchg
fwait
addl
lods
inc
bound
pop
lcall
aaa
and
push
jge
data16
inc
out
jl
jns
lock
cmpsl
push
push
into
ret
mov
mov
sbb
xchg
jb
jne
adc
hlt
jecxz
imull
add
mov
sub
adc
loopne
add
cltd
bound
sbb
popf
or
adc
mov
sub
dec
addr16
sbb
cmc
push
mov
push
jle
arpl
pushw
popl
pop
repz
iret
sarl
cwtl
mov
push
jne
imul
in
fidivs
psubb
push
imul
rcl
xchg
mov
sub
ja
mov
push
shl
in
ficompl
bound
das
out
inc
pop
pop
dec
push
mov
fldcw
fisubrs
dec
pop
pop
enter
xchg
mov
cmpsl
out
or
adc
lahf
filds
and
cs
out
jnp
mov
dec
shll
aad
movsl
dec
pop
pop
in
ficoms
icebp
pop
inc
push
mov
leave
scas
fiadds
jo
or
mov
mov
cmp
push
sbb
mov
data16
or
adc
es
mov
stos
mov
test
pop
xchg
inc
lods
fsubrl
mov
call
push
lods
xor
mov
xchg
daa
mov
jns
popf
in
push
push
dec
rol
push
adc
dec
fisttps
addr16
xchg
dec
pushf
insl
push
xchg
shl
das
mov
jns
mov
stc
movsl
fsubs
lidtl
pop
enter
xchg
mov
xlat
movsb
push
mov
push
clc
jmp
ret
add
push
cmp
lcall
mov
mov
or
cmp
push
mov
inc
inc
xlat
mov
mov
pop
xlat
mov
leave
ret
add
dec
mov
hlt
push
ljmp
mov
push
dec
scas
xchg
outsb
push
lahf
xchg
add
mov
pop
loopne
cmp
aas
cmp
mov
scas
mov
push
sbb
or
pop
stos
pop
in
adc
sbb
jns
dec
inc
mov
les
mov
add
add
mov
add
cmp
xchg
pop
push
inc
adc
mov
enter
or
mov
int3
xchg
and
ret
ret
je
push
and
push
test
mov
push
inc
in
jge
insl
sbbb
or
test
je
hlt
xor
pop
fiaddl
out
dec
fsts
cmp
lret
negb
xchg
rol
pushf
mov
leave
cld
or
into
leave
mov
pusha
pusha
outsl
xlat
pop
imul
xchg
outsb
sub
mov
into
stc
rolb
push
adc
int
xchg
pop
sub
jnp
loop
dec
out
arpl
jnp
dec
jg
and
cmc
stc
fidivs
sbb
lret
push
repz
test
xchg
mov
adc
lret
sbb
sbb
adc
push
mov
pusha
mov
jno
lods
mov
cli
in
cmp
xchg
xor
orb
call
lea
sahf
push
aas
sub
les
jns
push
in
movsb
fnsave
pop
insb
aam
icebp
std
xor
pushf
lods
in
icebp
bswap
add
fcomps
adc
cli
jmp
mov
adc
dec
jo
pop
orl
dec
ds
jne
xchg
and
sub
popa
cld
mov
cmp
or
adc
ljmp
pop
inc
pop
stos
push
cmpsl
cli
ja
jo
and
push
arpl
sti
pop
inc
sbb
test
inc
xor
mov
lahf
inc
mov
loope
sub
or
push
out
mov
fwait
inc
ret
xor
clc
inc
lock
dec
and
pop
mov
mov
lcall
addl
insl
xchg
mov
es
adc
aaa
rclb
dec
pop
jp
pop
jecxz
mov
sbb
add
cmp
loop
les
loope
dec
enter
imul
xchg
add
xor
bound
push
pop
dec
or
cmp
sub
pop
jecxz
xor
cli
mov
inc
bound
cltd
arpl
and
fnstcw
pop
cmpsb
inc
or
mov
mov
faddl
push
mov
sbb
std
sub
adc
inc
sahf
and
test
daa
inc
push
add
jns
mov
fcompl
jns
imul
or
popa
nop
insb
stc
xor
or
push
daa
je
lea
icebp
sub
fisttpll
xor
or
jle
leave
sbb
mov
ret
addl
xlat
test
pop
rcrl
inc
dec
lahf
push
xchg
int
dec
pop
sbb
jbe
outsb
aam
push
xchg
jnp
mov
mov
out
mov
cli
push
sub
pushf
adc
pop
mov
xchg
loope
xlat
mov
dec
fbld
daa
dec
jae
jl
psubsb
stos
fwait
sub
mov
or
adc
mov
xor
outsb
in
adcb
cmpsl
add
sub
push
add
mov
orl
pushl
pop
lahf
and
fisubl
std
xchg
ds
aam
cltd
cmp
ljmp
jns
add
push
std
inc
in
jle
outsb
fwait
cmp
stos
pop
mov
sub
or
nop
cmpsb
sti
add
push
cs
add
pusha
add
jp
test
cmp
sbb
je
rcrb
movsl
jecxz
sbb
mov
movsb
and
daa
jl
pusha
scas
cli
shl
lcall
cmpsb
adc
jmp
push
movsl
add
jl
pop
out
dec
stc
or
and
sti
insl
ss
cmpsl
xor
outsl
aam
out
and
test
jl
roll
icebp
sbb
xor
loopne
xchg
push
ss
mov
and
mov
fldt
jns
sti
arpl
mov
sbb
int
sti
dec
ss
mov
xchg
int
mov
and
test
adc
mov
cmp
jg
hlt
sbb
fisubs
loope
incl
dec
push
rcrl
add
pusha
divb
call
mov
out
push
adc
scas
and
in
iret
sahf
xchg
mov
shlb
addb
cltd
or
cmpsb
iret
inc
push
fxch
in
fcom
test
fwait
inc
hlt
loopne
pop
fisttpl
dec
pop
mov
sbb
adc
push
shr
fisttps
mov
or
mov
mov
test
xchg
cmp
popa
sti
xchg
or
cmp
mov
adc
push
or
mov
aaa
sbb
jo
rorl
or
stos
clc
mov
dec
sbb
insb
jo
dec
jo
rolb
mov
mov
and
xchg
jo
mov
outsl
mov
cwtl
adc
das
sub
cmpl
xor
lea
mov
jne
cmp
shr
xchg
jnp
pop
lods
add
mov
mov
in
mov
push
xchg
push
add
and
and
out
test
test
sarb
pop
and
push
push
xor
data16
aam
mov
scas
orl
lods
adc
push
inc
rolb
ljmp
xor
lcall
cmp
jnp
sub
rorb
inc
push
xorb
cmp
jg
cld
shll
rcr
pop
mov
ret
push
pop
pop
test
into
icebp
outsb
rcl
popf
dec
addr16
jg
lock
repz
outsl
in
mov
mov
pop
mov
pop
cwtl
scas
stos
and
js
hlt
and
jnp
push
call
add
pop
aas
dec
ret
int3
inc
into
mov
adc
scas
mov
mov
cmpsl
or
ret
and
or
shlb
andl
adc
mov
push
inc
in
in
in
add
leave
push
movsl
and
pop
fwait
xchg
stos
ss
into
sti
mov
stos
mov
ret
pop
sbb
sub
sub
es
and
adc
gs
xchg
cltd
sub
xchg
rcrl
dec
xor
lds
mov
bound
hlt
jmp
adc
sbb
sti
pop
orl
out
cli
pop
inc
clc
sbb
push
sbb
ja
push
cld
sbb
pop
and
cmp
lret
out
or
dec
inc
sub
sbb
lret
shlb
in
push
add
sbb
scas
xor
pop
jo
jnp
je
imul
mov
add
insb
inc
sub
xchg
shlb
daa
aam
mov
dec
rcrl
lcall
dec
pop
xor
mov
pop
jp
rclb
imul
mov
icebp
gs
imul
jecxz
int
pop
push
jg
mov
pop
lods
repnz
in
lods
sub
stos
push
popa
inc
icebp
xchg
imul
xchg
int
mov
xchg
in
pop
fstpl
and
mov
add
incb
in
cltd
push
cmpl
or
movsb
shlb
leave
sbb
mov
bound
xchg
out
test
cmpsl
inc
and
dec
dec
inc
push
push
lret
xlat
scas
stc
stos
mov
and
mov
pop
pop
sti
fnsave
loope
sbb
or
adc
outsb
mov
pop
pop
loop
sub
jno
add
sbb
int3
es
and
mov
test
imul
inc
popa
dec
les
lcall
pop
jae
loop
stos
sub
mov
mov
adc
inc
add
push
inc
jge
push
mov
lds
mov
lret
mov
out
je
cmc
add
cmp
jo
sbb
xchg
adc
and
push
push
push
addr16
xchg
lock
gs
jl
push
imulb
stos
sbb
fisttpll
mov
dec
lcall
ja
mov
mov
mov
rorl
inc
jnp
dec
sbb
mov
push
or
xchg
pushf
add
fmull
jg
push
test
out
lret
mov
add
addr16
add
jmp
cmpsl
mull
mov
out
jp
arpl
jle
add
xlat
pop
arpl
pop
cmp
mov
cmp
loopne
xor
jbe
cmp
inc
mov
fstp
push
mov
cmp
inc
sub
jmp
or
mov
cmp
push
sti
outsl
daa
aaa
lods
sbb
out
or
insb
inc
jle
dec
mov
out
inc
mov
push
lret
mov
mov
and
xchg
pushf
leave
jo
incb
cwtl
and
cmc
inc
dec
sub
push
ficompl
mov
xor
mov
mov
push
enter
cwtl
insb
pusha
or
and
push
push
add
jnp,pn
mov
xchg
sub
clc
mov
sbb
pop
test
dec
jae
sub
bnd
push
add
test
push
mov
cmp
repz
xchg
mov
push
xchg
test
inc
stos
cmp
or
push
in
dec
pusha
lret
negb
mov
dec
lds
dec
sub
idiv
sub
mov
lods
push
xor
mov
mov
test
pushf
xchg
adc
std
dec
jb
jl
addr16
mov
jl
xlat
icebp
and
add
mov
fnsave
and
jbe
jbe
mov
ljmp
mov
negb
cmp
add
insl
cwtl
aas
adc
and
pop
out
testl
rcrb
aam
popa
cmp
mov
inc
bound
insl
jmp
pop
mov
adc
or
adc
lret
testb
call
mov
fstp
push
sub
pop
shll
jp
or
into
dec
pushf
mov
nop
xchg
or
lret
jbe
push
pop
decl
jns
mov
or
into
rcl
pushf
int
and
outsb
clc
and
outsl
xchg
outsl
jno
xor
push
ljmp
xor
fwait
test
hlt
jns
rorl
sub
push
in
cmc
adc
sbb
add
pop
xor
inc
add
loop
fidivrs
jno
jo
mov
in
rorl
mov
test
dec
or
pushf
in
aad
push
incb
fucomip
int
xor
out
aas
imul
in
dec
sarl
sbb
xchg
aad
dec
sbb
sbb
mov
mov
pop
cli
das
jle
mov
mov
xchg
and
mov
mov
xlat
hlt
push
int
jp
fsub
mov
or
mov
test
or
jl
insb
sub
std
pop
mov
xchg
xchg
inc
or
lods
ret
pop
outsb
call
pusha
loope
call
pop
test
repz
dec
fisubrs
lret
jo
and
sbb
push
outsl
xchg
repz
push
inc
push
dec
pushf
mov
pop
shlb
mov
cld
mov
xchg
pushf
xchg
leave
outsl
mov
xchg
xor
dec
xchg
in
pop
lods
lea
je
ret
daa
jecxz
add
xor
repnz
xor
hlt
cld
iret
es
jg
jne
insb
repz
stc
out
cmp
fstpl
ffree
scas
push
and
mov
daa
addr16
adc
sbb
mov
adc
cmc
push
mov
aam
cmp
mov
repnz
subb
test
outsl
jb
sahf
sahf
fcom
cli
adc
dec
sbb
cmp
mov
iret
push
rolb
mov
add
xchg
fsubs
sbb
add
subl
jb
loop
mov
dec
ljmp
mov
push
xchg
sbb
std
xor
dec
ja
and
in
mov
adc
movb
adc
jne
push
jns
jl
rorl
mov
divl
lahf
mov
and
dec
or
add
lock
fisubl
mov
rcrl
push
sbb
and
xchg
cmp
sbb
cmp
add
fidivrs
test
pushf
add
and
push
jo
mov
and
mov
je
mov
mov
inc
mov
cld
and
ret
ret
adc
jb
jne
or
sbb
lock
sbb
aas
js
xor
xchg
xchg
jo
mov
mov
in
and
sbb
xchg
or
in
std
add
jno
mov
cmpsl
push
sub
js
push
push
in
and
dec
fiaddl
jae
out
xor
iret
cmp
pop
jmp
mov
pop
add
mov
ret
xlat
arpl
dec
int3
aad
xor
mov
repnz
add
cmp
xor
lock
push
mov
inc
fs
mov
or
shll
cmp
stos
sbb
popf
out
test
sub
outsl
mov
test
arpl
in
inc
push
xor
mov
nop
mov
enter
sub
imul
add
cld
roll
push
addl
paddusw
les
mov
mov
xor
lods
sbb
aas
lret
or
or
loop
aas
cmp
xchg
in
out
xchg
enter
jne
sti
and
aad
sub
xor
xchg
dec
xor
inc
mov
or
inc
pop
fwait
inc
push
jnp
call
insl
xor
pop
fisubl
fnsave
cltd
sub
push
xchg
filds
fcoml
out
cmpsb
dec
sbb
daa
ja
into
ja
lcall
add
jmp
pop
aas
in
xor
mov
jae
and
and
daa
xchg
clc
adc
add
repnz
cmp
aad
xchg
shl
stos
cmp
inc
pop
bound
or
jae
sarl
pop
mov
mov
pop
inc
test
fisttpll
test
mov
int3
negb
mov
push
outsl
addl
lods
popf
cmpsl
les
pop
aaa
out
pushf
push
or
dec
test
leave
or
ficompl
leave
xor
sti
mov
mov
cmp
add
loope
imul
nop
addl
mov
add
push
dec
daa
sbb
pop
jnp
or
cmpsb
push
sub
cmp
jge
out
shll
sub
mov
jecxz
add
in
leave
cmp
es
cmp
lock
cmp
sbb
mov
mov
xchg
popf
adc
cli
dec
sbb
jnp
dec
adc
into
mov
push
imul
sbb
rcll
pop
jnp
mov
movsl
mov
and
push
out
push
mov
add
jne
dec
movsl
pop
cmp
not
mov
lods
rcll
pushf
sbb
xchg
add
stos
xchg
je
rolb
pop
mov
xchg
or
fisttpll
aas
pushf
mov
sub
push
mov
inc
insb
sub
cmpb
repz
mov
mov
out
mov
xchg
and
sbb
fimull
dec
bound
dec
test
adc
mov
xchg
std
mov
loope
fisubl
cmpsb
je
call
sti
jecxz
into
out
fwait
mov
imul
ljmp
pusha
jo
cmc
daa
lock
mov
cwtl
mov
cli
sbb
dec
add
pop
push
fwait
arpl
call
sub
test
mov
decb
jne
lods
negl
push
fs
mov
hlt
movsb
mov
add
imulb
adc
stc
push
push
add
jo
popa
andb
jecxz
lret
je
jle
mov
int3
outsl
push
data16
andb
pop
adc
cs
sbb
push
cmp
mov
jmp
pop
pop
adc
sub
jle
mov
xchg
inc
mov
jecxz
jo
ds
icebp
insb
nop
test
ds
jo
mov
jns
pop
cmp
or
xchg
jmp
dec
push
leave
ret
xchg
fidivrs
clc
in
push
mov
mov
dec
scas
into
cmp
in
push
mov
pop
cmp
cmpsb
test
aad
loop
adc
mov
or
loope
mov
and
dec
call
lahf
xor
add
jle
push
pop
xor
ljmp
rcrb
sub
push
xchg
movsb
imul
fistps
push
sub
push
sbb
xlat
push
das
rcrl
lds
cltd
test
scas
stos
jge
bound
fsubrl
or
bound
pop
cs
popa
test
nop
xchg
adc
dec
push
js
and
sbb
in
and
mov
lret
jp
mov
jg
insb
cmp
mov
ror
xorl
enter
cmp
pusha
or
dec
shlb
ret
and
push
cs
mov
push
or
ss
cli
test
push
sub
data16
pop
repnz
mov
pop
push
pop
mull
or
mov
dec
stos
roll
mov
mov
inc
and
pop
dec
xlat
sbbb
push
fcomp
insl
push
and
jb
repnz
xchg
push
or
mov
mov
mov
sub
xchg
mov
ss
fwait
push
dec
xchg
pusha
incb
cwtl
xchg
ljmp
adc
adc
adc
stc
in
stos
out
adc
stos
and
int
mov
mov
lock
out
in
mov
std
subb
insb
icebp
adc
test
imul
sbb
mov
and
mov
mov
cmp
ss
in
insl
stos
stc
aas
jne
cmp
fwait
cltd
fistl
je
xor
pop
loop
sti
mov
mov
pop
mov
push
pop
outsb
rcl
sahf
fisubs
lret
sbb
pop
test
test
gs
inc
inc
loop
imul
lret
push
pop
pop
dec
pop
daa
js
fidivrs
pop
and
fcmovnb
dec
and
add
es
mov
mov
inc
sbb
adc
in
jg
mov
push
inc
fisttps
aas
xor
jno
mov
cs
mov
int3
jg
adc
mov
mov
and
test
jbe
push
xchg
push
scas
pushf
push
inc
int3
movsb
xchg
inc
xchg
lods
lret
mov
cmp
sub
mov
add
dec
lahf
mov
push
cmp
insl
andb
cwtl
daa
mov
and
pop
adc
cmp
inc
xchg
idiv
je
in
sbb
cmp
jnp
jle
loop
mov
imul
jne
sub
addb
orb
loopne
lods
jecxz
je
cmp
out
leave
push
scas
pop
push
cmp
iret
mov
mov
jecxz
jbe
mov
sub
shl
xchg
fldl
ljmp
push
in
test
mov
jo
jo
mov
hlt
pop
ret
mov
add
pusha
push
loopne
stos
mov
aaa
xchg
imul
adc
xor
mov
inc
pop
lea
inc
adcl
jae
les
pop
push
rcrb
movsb
arpl
inc
xor
jne
ds
sbbb
fstp
insl
sbb
es
xor
mov
add
xchg
xor
aad
and
jmp
jno
mov
leave
nop
and
add
test
sbb
lcall
push
rcrb
idiv
repz
jecxz
adc
push
ljmp
push
push
xor
push
sahf
adc
mov
sbbb
sub
icebp
fsts
pusha
adc
mov
divb
out
mov
mov
ret
mov
jp
repz
pop
push
fmul
fs
decb
mov
xor
ficoml
outsl
xor
xlat
cmp
jbe
fnsave
xor
adc
test
jnp
pop
xchg
jge
std
jp
scas
jns
out
push
jmp
and
cwtl
nop
imul
aad
imul
xor
fnstsw
xor
scas
inc
sarb
fnstcw
out
mov
shll
outsb
cs
mov
je
fcomp
mov
int3
cmp
adc
inc
jns
adc
idivl
push
dec
jecxz
jo
or
xchg
jbe
rcl
mov
in
xor
push
cmc
xor
cmpsl
pop
cmp
mov
mov
and
mov
scas
cmpsb
and
ljmp
or
stos
imul
shrb
sub
push
fdivr
nop
dec
fsin
imul
and
or
adc
das
fidivs
andl
inc
push
mov
in
cli
pop
clc
aam
fucom
mov
cmp
mov
or
lea
leave
leave
sbb
dec
inc
jo
xchg
int
arpl
push
stos
cmp
scas
cmpsb
aas
mov
rol
sahf
insb
loope
mov
inc
sbb
sub
push
imul
fldenv
incb
xorb
jl
sbb
jne
pop
adcl
jo
test
push
loop
and
fstp
xchg
bound
or
mov
int
stos
shlb
shrb
loopne
popw
jg
sbb
fs
pop
sub
push
lods
sahf
or
jl
fnstenv
jl
cmp
push
in
fwait
mov
movb
cmp
test
mov
iret
pop
mov
in
imulb
test
dec
gs
mov
in
repnz
es
add
and
fimull
add
call
jne
add
dec
xchg
pop
mov
in
pop
xchg
gs
div
jne
fldl
and
dec
push
popf
or
dec
iret
mov
sbb
cmp
shl
pop
int
pop
push
xchg
stos
testb
sahf
or
mov
sbb
or
add
cmpsb
lahf
mov
jmp
in
das
loop
mov
jb
adc
cmp
push
ficomps
dec
xchg
add
in
orl
shll
pop
jbe
mov
mov
push
repz
fs
fstpl
testb
add
out
icebp
scas
cmpl
jl
lock
filds
imul
scas
cmpsb
jbe
jl
movsl
sbb
ret
jmp
and
xor
and
inc
fstps
out
mov
imul
shll
jle
sub
cmp
aad
ret
xchg
cmc
test
stc
out
sbb
mov
dec
and
xor
cmp
pop
cmc
jnp
push
movl
in
mov
aaa
dec
push
xlat
dec
xlat
mov
addl
add
push
inc
jbe
xchg
sti
je
adc
hlt
mov
nop
sbb
inc
repz
iret
lret
pop
adc
popf
sbb
jb
stc
add
aas
xor
rcll
fs
xor
cmc
sbb
xor
dec
insl
xchg
popa
fistps
lahf
jae
fiadds
mov
xorps
fs
loope
jl
lcall
scas
call
mov
call
adc
fdivrl
and
and
in
pop
cmp
cli
cmp
push
pushl
pop
data16
or
or
pop
imul
sti
push
pop
scas
lret
int
and
fisubs
outsb
xchg
insb
test
movsb
mov
mov
or
add
sub
push
and
push
andl
lea
movsl
pop
jl
mov
ret
mov
rorl
adc
and
mov
sub
add
cmp
inc
jl
pop
in
cmovo
or
dec
in
adc
sbb
push
inc
xchg
leave
xchg
mov
adc
enter
call
sarl
sub
push
repz
jbe
je
sub
jb
cmc
in
push
fwait
dec
pop
jg
jb
cmc
gs
mov
adc
movsl
or
add
idiv
test
pop
mov
add
mov
in
xor
clc
loop
push
dec
mov
pop
fistpl
sbb
cmc
pop
add
out
lods
push
or
hlt
push
out
pop
jecxz
xchg
add
clc
cld
add
mov
jne
sbb
sbb
sarl
std
push
andb
push
xor
xor
add
outsb
mov
shll
jg
pusha
ljmp
push
mov
add
inc
stos
insb
adc
dec
mov
mov
mov
cmc
cld
jno
inc
push
outsl
cmp
test
push
sub
fdivl
xchg
aam
je
frstor
hlt
push
lds
sub
insb
cmp
lds
push
jae
fstl
push
fwait
cmc
sub
repnz
xchg
sahf
jl
jns
pop
lods
xor
xchg
adc
ud2
call
into
pop
cmp
jge
ja
je
fwait
hlt
outsl
mov
pop
out
pop
xchg
rorl
mov
out
in
or
in
cmpsl
sub
pop
rolb
pop
stos
mov
arpl
out
adc
insb
lods
movsl
xorb
push
mov
daa
stos
pop
gs
adc
push
cmp
std
testb
pop
nop
stos
lea
mov
cltd
pop
movsb
cld
sbb
cmp
push
pop
loop
push
or
cmpsb
push
mov
loope
fisubs
test
jg
adc
subb
sahf
icebp
sbb
pop
jg
in
sub
loopne
scas
data16
pop
cmp
jno
int3
add
inc
shll
iret
cmp
jae
fwait
jb
xchg
inc
sbb
outsb
inc
repnz
es
les
cmpsb
mov
mov
rorl
std
pushf
fimuls
stc
mov
dec
movsl
fwait
or
xor
outsb
lea
cmp
push
sahf
sbb
js
jne
push
mov
fistpl
xchg
mov
cmp
adc
xchg
rolb
dec
out
hlt
adc
aad
call
mov
jecxz
jmp
divl
push
daa
das
negb
rcl
push
out
fldenv
lcall
xchg
jne
std
es
push
push
lahf
cmp
repz
fcoml
insb
test
fmul
cmp
mov
jmp
xchg
add
stos
and
sahf
loop
mov
and
lret
fwait
test
mul
pop
push
dec
sbb
jmp
ss
dec
clc
mov
mov
dec
cmp
jnp
aaa
jmp
mov
rcll
inc
test
insl
xchg
cwtl
les
movsl
cmp
or
scas
cmp
jge
xchg
repnz
and
in
or
fistps
lods
dec
mov
insb
je
push
in
pop
cs
and
or
arpl
dec
xchg
outsl
inc
xor
mov
push
jle
cld
add
mov
xchg
mov
and
stos
scas
movsb
cs
in
int3
or
lret
pop
lret
sub
push
outsl
push
fs
mov
push
dec
out
cmp
inc
cs
sub
mov
jp
add
pop
add
pop
inc
pusha
loop
xchg
loope
mov
loope
mov
aad
loop
and
test
mov
dec
xchg
out
lcall
out
jle
cmp
adc
iret
sbb
xchg
lds
xlat
push
les
frstor
pusha
xchg
ret
dec
or
or
cmp
subl
mov
push
ret
mov
adc
incl
mov
pop
cbtw
sub
pop
or
pavgb
das
ret
pop
cmc
cmp
adc
stos
mov
mov
shrb
jno
cwtl
cmp
test
pop
andl
outsl
and
decl
xor
je
in
or
xlat
push
xor
ret
jmp
loop
cmp
sub
addr16
inc
xchg
sbb
jp
test
paddsb
imul
and
cmp
cmpsl
lret
pushl
incl
pop
pop
out
and
adc
cmp
cmp
rcr
inc
je
mov
int
jle
mov
test
pop
bnd
lea
sbb
insb
xchg
popf
sarl
inc
fmulp
fsub
adc
or
in
popa
mov
sub
ja
jns
jne
mov
and
in
jb
push
ds
loop
sarb
push
push
and
jns
dec
add
mov
adc
gs
ja
push
subl
nop
scas
push
add
repnz
or
popf
ss
sti
arpl
and
roll
fcoml
test
sub
ljmp
sbb
lods
inc
or
lcall
jmp
xor
and
inc
lret
fcmovnu
xchg
sub
mov
repz
or
lret
enter
les
dec
lods
or
mov
push
push
add
inc
sbb
sub
dec
mov
jmp
sub
adc
pop
mov
jmp
jl
popa
jl
and
cltd
fbld
pop
mov
cmp
adc
inc
rcll
sub
push
push
mov
repnz
mov
jp
roll
mov
pop
cmpsl
jne
jl
jle
lock
aaa
mov
enter
icebp
dec
cwtl
jle
aam
jnp
in
imul
mov
daa
or
hlt
pushf
pop
and
ficoml
jmp
pusha
jp
jae
popf
fs
adc
jmp
ss
cmp
dec
adc
dec
or
popa
gs
adc
jo
rcll
mov
adc
hlt
test
cmp
and
aam
cmp
test
pop
and
mov
dec
xorl
incl
je
call
mov
sbb
push
into
sub
mov
in
les
push
xlat
popf
psubd
cld
arpl
arpl
mov
aas
mov
push
and
imul
xor
dec
jae
push
dec
scas
inc
dec
push
cmp
inc
adc
pop
lock
ds
mov
dec
shl
in
adc
push
clc
ror
lret
in
notb
lret
sbb
sub
xchg
pop
iret
pop
popf
notl
add
fimuls
mov
xchg
mov
aam
addr16
xor
into
add
int3
gs
jmp
icebp
adc
push
mov
out
sbb
out
sub
test
lret
es
mov
mov
or
push
inc
jmp
cmpsb
fdivs
sbb
mov
in
mov
xor
decl
add
push
aam
dec
dec
pusha
push
jae
sub
xor
incb
mov
xor
ss
mov
popf
fmuls
mov
jne
sbb
jb
dec
mov
mov
and
and
cmp
gs
repnz
mov
mov
ds
mov
aaa
pop
mov
xor
mov
sbb
dec
xchg
call
loop
adc
popf
imul
pop
push
imul
fdivl
in
mov
dec
arpl
jns
cli
inc
lret
xchg
xchg
call
out
stos
lods
and
cmp
jle
and
mov
pop
mov
sbb
cmpsl
mov
jns
xchg
push
and
mov
xchg
in
cmpsb
lods
in
adc
lods
je
adc
inc
pop
jp
adc
or
dec
jle
and
imul
push
subl
mov
stos
shll
sti
push
jb
arpl
cmpsl
cmp
mov
and
fisubrl
dec
sub
inc
inc
shrb
mov
cltd
jns
movsb
lahf
dec
sbb
mov
cmp
cmpsb
mov
push
push
xchg
rcrl
lahf
sbb
ret
or
adc
icebp
imul
fs
push
cmpsl
inc
pop
shlb
pop
adc
call
or
dec
push
lock
add
jae
ljmp
inc
in
push
sahf
lds
mov
cmp
or
das
fsubp
test
orb
xor
push
sar
sbb
jmp
push
pop
jo
jne
ss
pop
inc
add
shlb
or
fxch
in
xor
add
xor
pushf
rol
data16
pop
mov
dec
jns
dec
add
sub
add
sub
andl
mov
jg
jp
push
xor
shl
cli
mov
push
or
fs
sbb
insl
call
inc
adc
pop
sub
push
sbb
fs
rol
jnp
pop
fsubr
jg
dec
lea
rcrl
outsl
movsb
pop
aaa
mov
dec
jmp
adc
mov
add
mov
mov
pusha
inc
aaa
out
cmp
adc
sub
mov
jnp
lock
pop
xor
and
mov
adc
jae
mov
test
xchg
pop
adc
or
rcr
sbb
jno
dec
sbb
stos
repnz
mov
dec
inc
popa
cli
pop
sti
xchg
loop
cmpsl
adc
repnz
xchg
fidivrs
into
shl
mov
pop
fcoms
loop
lock
into
lea
push
lods
xor
data16
mov
loopne
push
fsts
or
mov
shll
dec
dec
popf
pusha
mov
sbbl
test
and
dec
xor
les
ss
inc
leave
add
icebp
enter
add
cmpb
scas
mov
add
sahf
testl
add
inc
cmp
mov
ret
bound
and
inc
test
in
push
rolb
jbe
les
leave
jle
imul
fldenv
xchg
mov
enter
pop
xchg
jecxz
mov
mov
das
sub
shrb
insb
aas
lods
dec
xor
jno
push
mov
mov
jmp
std
cmp
loopne
cmp
mov
repz
adc
insb
dec
mov
test
sarl
out
jp
test
sbb
mov
add
push
fsubs
bound
in
pop
mov
xchg
test
fs
mov
outsb
bound
ja
out
and
jne
daa
and
mov
or
mov
inc
movsl
push
fwait
cmp
sbb
stos
pop
inc
dec
adc
push
sbb
scas
xor
pop
jecxz
fldcw
ror
rcll
mov
cwtl
sbb
mov
movsb
addr16
adc
lods
roll
scas
jmp
stos
mov
and
xchg
fistps
mov
xchg
mov
icebp
mov
ds
movsb
fnstsw
push
stos
xchg
addr16
xor
pop
subl
lods
in
fldz
dec
cmp
clc
call
rolb
notb
sbb
aam
out
push
jb
in
out
enter
mov
int
mov
ret
mov
mov
mov
mov
push
cmp
es
iret
push
sub
ljmp
iret
nop
sub
js
fcomi
mov
push
lret
cltd
sbb
ret
pop
jge
outsl
fsts
scas
or
pop
les
pushf
push
ret
mov
repnz
fcmovnb
dec
mov
pop
push
notl
inc
pop
mov
cltd
xlat
loop
fwait
lods
fidivl
in
enter
mov
mov
dec
test
cmp
mov
in
in
and
xchg
and
fistps
cmpsl
push
inc
push
push
cmp
mov
jmp
pop
cmp
xor
pop
sub
pop
mov
push
cli
or
mov
xchg
out
cwtl
mov
or
lret
mov
dec
jns
loop
xor
andl
xlat
addr16
cs
outsl
cwtl
test
and
and
mov
pop
into
cli
and
mov
or
call
ljmp
jp
roll
push
sarb
inc
xchg
mov
data16
fstl
jns
jne
sbb
xchg
ss
call
ja
mov
cld
loope
sub
mov
inc
outsb
lret
sub
cmp
add
js
push
add
pushf
stos
inc
iret
push
mov
dec
xor
mov
jmp
and
push
pop
dec
test
sbb
pushl
mov
xchg
inc
inc
adc
in
or
test
insb
add
in
jle
cmpsl
js
or
pop
mov
push
or
xchg
xor
xchg
decb
jns
mov
adcl
jecxz
fs
cltd
bound
mov
mov
push
mov
inc
cmp
adc
and
icebp
adc
mov
in
pop
mov
dec
dec
inc
inc
movsl
inc
mov
add
movsl
adc
in
test
mov
sbb
push
add
adcb
dec
rcll
inc
jnp
and
push
lock
jp
test
cmpsb
jp
loop
push
mov
mov
sub
insl
mov
addr16
jne
cmp
cmovg
push
cli
push
cmp
ss
fwait
in
cmp
jne
ljmp
adc
mov
cltd
je
push
andb
fucomi
xor
mov
mov
repz
daa
mov
sahf
cli
lods
jo
dec
jl
jp
pop
sub
jg
shrl
push
pop
xor
fnsave
push
roll
jnp
mov
push
dec
sbb
adc
add
insb
out
pop
shl
dec
fsincos
aaa
shll
loope
pop
out
xchg
inc
mov
pop
scas
xchg
mov
dec
std
mov
in
in
leave
sbb
mov
rcll
xlat
sbb
pushf
pop
stc
divl
jb
in
pop
aad
xor
add
stc
push
push
mov
fildl
mov
mov
movsb
mov
push
dec
inc
fwait
cmpsl
pop
int3
xor
insl
cmpsb
fsubs
adc
sbb
xchg
test
icebp
fisubrs
fs
adc
cmp
adc
or
or
jnp
movsb
ret
dec
and
sbb
shl
mov
lret
dec
lcall
mov
mov
mov
ds
adc
addr16
lds
inc
mov
or
dec
mov
add
lock
addr16
xchg
add
mov
cmp
jecxz
orb
xchg
jge
es
outsl
sub
sahf
repnz
push
js
inc
lods
lock
les
cmp
or
xor
mov
fidivrs
xchg
stos
fdivp
lds
loope
into
mov
cmc
insl
incl
xor
dec
cmp
bound
clc
outsl
xchg
ret
imul
cwtl
jg
or
je
into
xlat
xor
xor
cmpsl
ret
sub
push
sbb
push
je
dec
test
pop
lds
mov
loop
ret
ja
stc
mov
shrb
jae,pn
lahf
lock
lock
gs
ret
or
mov
jge
adc
imul
mov
xlat
test
add
cmpsl
xchg
cmp
mov
arpl
insl
xchg
dec
push
jp
sub
into
adc
xchg
gs
pop
sti
push
mov
sahf
fsincos
mov
pop
subl
adc
aas
jae
jl
pop
mov
nop
xor
scas
sub
dec
mov
jl
adc
jmp
sub
test
fs
rorb
add
pop
aad
movsl
inc
aaa
cwtl
cs
icebp
adc
cmp
ss
movsl
mov
mov
ret
mov
idivb
ror
jge
aas
sub
dec
or
push
sbb
sbb
push
push
mov
add
xchg
testl
out
bound
es
loopne
pop
aam
mov
lods
ljmp
nop
dec
call
and
in
or
ja
faddl
dec
xchg
stc
lds
sti
popf
push
out
movsb
es
xlat
xlat
mov
cmpsl
pop
arpl
ds
mov
jecxz
jp
push
popf
add
cmp
fbld
pop
sbb
fnsave
scas
sarb
cmp
push
pop
stos
sbb
jl
xor
mov
mov
loop
inc
fisubl
cli
push
mov
rorl
sahf
add
add
push
lahf
mov
popa
sbb
out
popa
cmp
mov
test
jno
lds
ftst
xchg
push
sub
add
pop
add
push
xchg
out
idivb
push
lahf
test
xchg
fisubrl
push
jo
dec
jp
mov
add
jno
addr16
iret
test
loopne
into
aam
clc
jb
sbb
lods
repz
inc
mov
add
mov
pop
stc
insb
inc
loop
nop
pop
adc
mov
insl
addl
add
test
cmc
repnz
and
repz
fisttps
xchg
pushf
dec
and
lret
mov
test
inc
lds
cmpsl
fildll
inc
adc
sbb
cld
cli
movsb
inc
gs
aas
or
xor
aaa
push
xchg
xchg
and
mov
shrb
mov
inc
movsl
data16
comiss
mov
fsubr
mov
popf
xchg
cmpsl
sbb
pop
push
add
int3
cmc
jge
ljmp
hlt
pop
xchg
ds
sbb
dec
adc
test
clc
pop
cmpsb
push
mov
sub
mov
imul
sbb
out
jg
divb
pop
jns
sub
mov
roll
imul
and
js
mov
pop
mov
out
arpl
es
add
repnz
add
outsb
pop
ss
push
lods
mov
xchg
scas
sub
add
leave
popf
ret
loop
jns
sbb
lea
cmp
sbb
jo
sahf
mov
outsb
sbbl
inc
dec
popa
addb
pushf
iret
scas
sbb
fisubrl
mov
jno
aas
jl
enter
andl
push
stc
xor
xchg
clc
push
jecxz
mov
jbe
add
mov
inc
pop
outsb
dec
aas
pop
adc
push
js
and
pushf
adc
pop
mov
test
fcomp
sbb
out
idivb
mov
adc
add
dec
adc
int
std
shll
ret
sbb
scas
sub
testl
test
mov
jl
mov
js,pn
std
mov
xlat
push
fdivrl
andl
push
ds
or
jae
outsl
stc
mov
pop
cmc
stos
lods
decb
jnp
jns
enter
pop
add
cmp
cld
sbb
mov
fstl
add
imul
lods
or
imul
into
xor
push
rcr
mov
sbb
sbbb
xor
insl
fmul
xor
sub
pop
and
jno
jmp
in
jmp
mov
data16
mov
es
sub
adc
inc
jae
mov
mov
stos
inc
mov
inc
push
push
xchg
push
jo
jp
mov
mov
out
cmp
cmp
mov
dec
cli
idiv
cmp
or
int
data16
stos
dec
test
mov
add
dec
mov
push
ljmp
pop
sbbb
sbb
les
adc
int3
sbb
pushf
aad
fdivs
fildll
imul
scas
push
xchg
inc
add
xchg
mov
adc
mov
mov
popf
adc
xchg
ds
jge
lods
sub
stc
in
dec
xor
and
test
out
rcrb
sub
aad
fidivs
mov
xlat
xbegin
sub
int
ss
ffree
pop
mov
daa
loopne
les
cwtl
mov
les
inc
add
scas
mov
inc
out
outsb
add
fwait
jmp
push
push
sbb
fwait
xlat
jle
loopne
aam
frstor
cwtl
gs
dec
movsl
das
iret
daa
pop
addr16
imul
pop
or
inc
leave
and
repz
jnp
sbb
cwtl
dec
insl
mov
fmuls
inc
cld
loop
push
movsl
mov
mov
dec
lret
mov
push
dec
jecxz
jbe
xor
xchg
and
fwait
inc
mov
fidivs
xor
rcll
jg
scas
and
into
or
inc
xlat
out
pextrw
mov
rcll
sub
in
push
jle
mov
inc
pusha
sahf
dec
fsubrs
pushf
mov
lock
pop
mov
add
jbe
mov
jecxz
jl
push
bound
mov
push
jno
mov
addr16
dec
jb
pop
mov
dec
xlat
sub
pop
pop
leave
pop
pusha
ret
hlt
sub
jno
mov
cld
insl
rcl
jmp
test
ss
bound
in
mov
faddl
in
mov
pop
add
sbb
fwait
je
fisubrs
or
cmc
pop
mov
or
mov
jbe
push
cmp
stc
xor
dec
sbb
sbb
insl
call
mov
loopne
aam
ljmp
pop
mov
inc
cmpsb
jecxz
pop
repnz
or
mov
xchg
icebp
dec
push
lods
nop
popf
add
push
aas
mov
mov
jle
xchg
pop
xor
faddl
aad
lret
pop
in
or
js
adc
or
inc
dec
lret
xchg
push
gs
pushf
inc
enter
xor
into
lcall
in
pop
jge
inc
xchg
and
aas
or
inc
and
pop
sbb
push
jg
notl
sbb
lock
inc
jnp
xor
addr16
stc
repnz
cld
adc
shll
dec
cmp
stos
dec
or
and
jae
sbbb
sbb
outsb
inc
or
je
icebp
push
mov
add
push
or
or
mov
cmp
adcb
dec
sbb
sbbb
jl
jns
ja
in
mov
aaa
add
xor
fwait
mov
and
mov
cmp
movsb
dec
pushf
jbe
test
or
ja
ficoml
dec
icebp
cmp
int3
add
or
icebp
paddq
testb
int
stos
adc
iret
mov
icebp
icebp
jne
mov
shlb
mov
mov
mov
cwtl
test
inc
sahf
sub
lods
nop
xor
jae
jp
arpl
jae
mov
addl
fucom
outsb
or
ljmp
test
popf
ret
insl
pop
fisubs
cwtl
jmp
add
fdivrp
sbb
and
cmp
adc
out
and
jns
xor
mov
leave
xchg
pop
lods
and
jnp
repz
xchg
sahf
inc
int
xchg
pop
sub
jb
stos
lcall
adc
xchg
jl
dec
movsb
pop
mov
jb
add
push
lds
fcomps
and
xchg
into
pop
in
mov
fisubl
push
test
in
push
fsubl
pop
out
and
rolb
mov
inc
sbb
or
push
in
pop
stos
jecxz
sbb
mov
mov
jmp
cwtl
add
lret
push
mov
adc
ret
cltd
push
xor
je
shl
lahf
mov
push
adc
icebp
cmc
push
in
xchg
out
jg
mov
xor
hlt
inc
jo
mov
dec
xchg
sti
mov
mov
enter
push
pop
lcall
cmp
repnz
lret
dec
scas
or
clc
pop
adc
rcrl
sarl
push
push
stos
outsb
test
les
cld
hlt
movsl
jns
es
inc
stc
repz
popa
sbbl
sbb
in
scas
popa
fidivrl
pop
mov
fstpt
sbb
sbb
hlt
dec
adc
or
cmp
pop
sub
ja
fdivrp
push
sub
fs
into
xor
add
mov
out
out
pop
fwait
loopne
ret
add
push
pop
cld
mov
out
gs
cltd
clc
push
mov
imul
cmp
sbb
mov
rorb
test
movsl
push
push
mov
mov
inc
cwtl
adc
fcmovbe
movsb
sbb
fwait
cmp
mov
ja
xchg
xchg
adc
jae
fldenv
int3
push
test
jne
pop
jge
sub
cld
xor
lea
xchg
push
pushf
and
mov
lock
repnz
lock
inc
mov
cmpl
aad
jl
pusha
lcall
sub
icebp
push
xchg
or
pushf
int3
add
je
ud1
push
cmp
popa
xorl
jae
xor
inc
out
sti
sahf
inc
adc
add
pop
xchg
mov
jl
mov
xor
comiss
dec
call
rol
in
mov
cltd
add
or
xor
rorb
jl
mov
mov
mov
adc
sarl
cltd
and
lock
ficoms
mov
scas
ss
popf
testl
inc
push
cmp
pop
and
lahf
inc
mov
mov
and
jb
adc
jns
and
pop
xchg
push
and
popf
out
cs
xchg
sarl
loopne
cmp
mov
idivb
mov
fdivl
rcl
imul
mov
iret
push
jbe
out
cli
aam
into
sarl
or
stos
dec
lock
cmp
jnp
and
pushf
stos
popf
add
mov
push
cmp
add
mov
in
into
xor
pop
jb
mov
movb
xchg
in
cwtl
mov
push
xor
cld
jb
lret
stos
inc
xchg
pop
push
ja
sub
lods
sbb
pop
adc
jecxz
inc
cltd
lods
jl
cli
mov
mov
stos
mov
lret
adc
pop
fdivl
push
mov
cmp
pop
jle
pusha
dec
push
cmc
sbb
lret
shlb
mov
and
dec
jo
inc
jno
shlb
notl
cwtl
push
rcrb
or
sub
push
cmpsl
xor
cwtl
adcl
mov
sti
pop
movsl
movsl
js
cmpsb
jl
xor
fsubrp
dec
mov
sbb
push
les
dec
insl
movsl
lea
mov
sbbl
lret
repnz
ret
sahf
in
inc
imul
es
lods
mov
popf
cmp
xchg
and
mov
xlat
push
mov
jecxz
daa
mov
add
bound
lcall
fs
sbb
test
push
jbe
addr16
int3
inc
lret
sti
test
dec
dec
jb
mov
sub
mov
and
add
push
sbb
dec
dec
add
mov
sub
xor
cmpsb
insl
and
add
xlat
inc
in
loopne
xor
cmp
inc
call
ss
sub
mov
mov
cmp
add
roll
sub
xchg
sbb
jle
dec
sbb
ficoml
push
pop
test
aaa
push
jp
loop
xor
mov
daa
mov
sbb
or
dec
push
cmp
xor
pop
daa
sbb
inc
in
jp
dec
in
loopne
jg
xor
push
int
inc
xchg
lret
cwtl
mov
popf
or
loop
xorl
dec
push
mov
scas
jbe
ja
lret
inc
imul
dec
call
stos
adc
mov
jo
loop
fs
mov
stos
jmp
repz
scas
dec
mov
outsl
push
inc
xchg
dec
push
dec
inc
insb
jle
out
repnz
movsl
lret
cmpb
xor
sti
adc
dec
lahf
ds
add
shlb
or
lock
lock
sub
mov
jns
adc
scas
mov
cwtl
aam
inc
lret
and
lock
mov
outsl
sahf
xlat
fcmovnb
mov
and
and
cmpsl
lods
loope
push
pusha
scas
sbbl
out
mov
cmp
jp
fwait
sub
xchg
cmp
shlb
sub
out
inc
sbb
push
or
fucomp
aam
and
fcompl
dec
test
mov
mov
push
in
lcall
xchg
cmpb
dec
ja
jmp
mov
aad
push
add
loopne
and
repz
mov
imul
ror
nop
pop
outsl
outsl
jb
sahf
xlat
mov
in
rorb
and
inc
sub
sub
mov
lods
sub
xor
xor
jecxz
ljmp
dec
lret
mov
mov
popf
xlat
sahf
iret
sbb
insl
inc
jb
js
xchg
mov
cmp
sub
xchg
ds
mov
adc
sti
push
addl
pop
mov
outsb
dec
iret
repz
in
mov
sub
neg
int3
popf
dec
outsb
je
xchg
mov
call
pop
mov
lret
int
sets
addr16
ds
dec
push
inc
movsl
push
and
mov
aas
or
adc
fsub
insl
stos
xor
dec
and
testb
js
mov
pop
jp
enter
push
inc
push
or
push
into
xchg
inc
pushf
jmp
hlt
xchg
and
dec
lea
into
cs
jle
daa
mov
rcr
in
mov
push
loope
cmpsb
test
faddl
adc
mov
inc
add
xor
loopne
lock
cmpsb
fwait
stos
ja
je
adc
jb
and
fnstsw
or
sbb
mov
scas
mov
add
dec
sub
sub
and
js
and
jae
sub
fidivrs
sti
pop
xchg
fidivs
jnp
xchg
scas
sub
mov
imul
lcall
jg
pop
fdivrs
movsl
fsubrs
mov
test
push
std
xor
pop
cmp
std
scas
jb
mov
ja
jo
stos
repnz
rol
imul
mov
in
lret
enter
mov
stos
add
mov
mov
test
shr
add
xor
dec
fdivl
xchg
xor
insl
pop
outsb
adc
outsl
push
dec
imul
les
aaa
inc
pop
fiaddl
mov
sbb
lcall
push
sbb
dec
nop
cmp
jmp
insl
pop
mov
cmpsl
movsl
call
xchg
loopne
imul
adc
mov
gs
gs
or
mov
mov
jns
imul
adc
lock
pop
imul
iret
mov
mov
jbe
fwait
das
loopne
cmp
mov
or
inc
pop
or
or
mov
ret
lods
or
add
mov
jbe
xor
jg
clc
dec
mov
jnp
sbb
fwait
mulb
inc
cmp
or
movsb
mov
mov
mov
add
mov
xchg
dec
out
pushf
gs
ja
fs
xchg
lea
pop
push
mov
lcall
enter
pop
aas
into
loopne,pn
pop
shrl
cmp
mov
int
cmpsl
mov
push
or
or
or
or
les
mov
cmp
dec
incb
into
rcrl
mov
jo
or
ja
in
in
enter
stos
popf
xor
xchg
leave
mov
push
mov
pusha
push
jle
mov
jge
test
int
aas
adc
imul
sbb
or
nop
xchg
or
std
hlt
pop
xchg
xchg
cltd
add
or
cmp
mov
push
mov
jle
bound
in
das
xor
cmp
in
jb
xchg
fnstsw
aas
insb
lods
or
loop
push
gs
jo
mov
xor
test
pop
xchg
lods
je
mov
cmp
push
shrl
mov
mov
add
lahf
rorb
lcall
mov
mov
cmc
fwait
aam
fsubs
mov
add
or
in
ret
inc
jge
and
mov
repz
leave
mov
jnp
daa
ret
ja
fwait
push
mov
xchg
xor
cmpsb
push
repnz
clc
xchg
leave
test
pusha
pop
cli
stc
cmp
push
pop
dec
fs
cmp
push
daa
or
jecxz
jae
testb
inc
shl
les
ss
xchg
ret
pop
push
cmpsl
and
push
add
lcall
rorb
dec
cmp
dec
inc
add
sbb
repnz
movsb
imulb
xor
jecxz
test
rcrb
jnp
adc
xchg
lods
mov
inc
stos
jno
pop
lea
cwtl
add
xchg
mov
adc
lahf
dec
fisubl
lret
fs
push
and
dec
push
pushl
xor
mov
dec
push
sar
mov
dec
mov
repnz
pop
cmp
imul
and
sbb
adc
xchg
stos
int
pop
and
insb
faddl
cmp
icebp
in
loope
ss
dec
sbb
leave
ret
adc
les
nop
mov
inc
or
dec
scas
pop
cltd
fiadds
enter
jbe
push
incb
ret
ljmp
cmp
push
pop
sbbb
pop
sti
daa
mov
xchg
add
jmp
movsl
jno
xchg
lea
pop
repnz
notb
aam
adc
push
xor
das
dec
fs
mov
add
push
sbb
mov
sbb
pop
cmp
dec
adc
adc
or
dec
aas
cmp
pop
fistl
loopne
pop
and
mov
mov
dec
int
aas
movsl
sbb
outsb
jb
cmp
pop
out
scas
jmp
rcll
mov
dec
fidivs
mov
lea
add
push
lea
sub
gs
gs
fidivrl
aad
jge
inc
repz
or
dec
loop
sbbl
lock
add
or
std
adcl
fisttpl
sbb
lods
cmp
cmp
adcb
mov
add
sahf
call
cmp
jae
imul
and
add
mov
arpl
fwait
int3
outsb
add
hlt
pop
mov
mov
pop
push
bound
call
fisttpl
pop
sar
adc
xchg
push
popa
pop
pop
cli
mov
jae
add
outsl
push
inc
mov
aas
xorl
pop
sbb
js
pop
jno
inc
jg
outsl
into
jmp
pushf
stos
xor
pushf
add
imulb
cwtl
aas
scas
dec
ja,pn
cltd
es
xchg
lods
cmp
fildll
lds
adc
adc
int3
cmp
inc
hlt
dec
xchg
sub
loop
es
or
bound
mov
arpl
das
aas
outsb
test
mov
arpl
fnstcw
negb
jecxz
ja
outsl
sbb
into
xor
aam
test
mov
loop
ret
xlat
adc
repnz
scas
scas
repz
lcall
cmp
iret
pop
add
mov
dec
cld
pushf
mov
cmp
addr16
sub
lret
push
push
movnti
sarb
pop
stc
negb
mov
xchg
xor
sbb
adc
das
ss
adc
jno
scas
sub
sbb
or
aaa
add
out
test
fmuls
mov
outsl
mov
adc
movsb
aas
or
push
outsl
rolb
mov
fwait
and
out
add
lock
or
inc
mov
stc
xchg
and
mov
sub
mov
scas
sbb
jno
dec
test
imulb
not
cld
out
xchg
inc
clc
lret
dec
pop
or
push
pop
lret
outsb
jg
or
mov
aaa
leave
popf
in
push
and
push
imul
mov
lods
insl
lcall
and
pushf
out
clc
pop
cmc
pop
mov
sub
mov
imul
mov
dec
xlat
js
add
sub
xchg
adcb
jge
push
paddd
aad
mov
jne
cmp
andl
mov
and
mov
ja
mov
imul
not
xchg
push
lods
mov
dec
adc
jp,pn
xchg
shlb
sbb
mov
pop
movsb
jno
cmp
cltd
or
popf
mov
xchg
xchg
dec
les
cmp
outsb
test
jb
mov
imul
mov
addr16
rcr
xchg
jo
jno
lcall
xlat
mov
push
pop
mov
mov
push
ljmp
popa
inc
sbb
outsl
add
pop
shrb
pop
testl
dec
fs
aas
jmp
popf
inc
lods
nop
xor
dec
cmp
sub
pop
in
scas
mov
dec
enter
scas
addr16
int3
pop
cmpsl
sub
and
inc
jmp
ss
fisubrs
aaa
lods
loop
outsl
jnp
pop
push
mov
fbstp
xchg
jg
inc
cmpsb
js
jns
xor
cld
out
outsl
icebp
xchg
xor
cmp
xchg
mov
jle
mov
add
jp
inc
out
fucomip
insb
inc
cmc
add
jg
cwtl
add
inc
sub
loope
cmp
xchg
lea
test
push
mov
roll
mov
add
cli
sbb
in
or
xorl
cmp
jl
lahf
mov
cmovbe
mov
jo
sub
add
int3
xchg
notb
outsl
ljmp
and
add
shl
inc
sub
fsub
fwait
push
icebp
pop
cmp
xchg
cmpsl
enter
test
jb
movsl
cld
sbb
negl
shll
pop
xor
ficoms
outsb
leave
cmp
loopne
mov
jnp
jle
imul
pusha
hlt
push
mov
out
js
aam
adc
inc
mov
lcall
adc
mov
jnp
xlat
sbb
dec
xchg
sub
jp
pushf
inc
rclb
push
inc
mov
ret
rclb
cmpsl
jge
jmp
clc
insl
xor
lock
iret
into
pop
inc
mov
pop
lret
mov
sbb
jecxz
fdivr
sarl
mov
pushf
xor
mov
mov
aam
out
aam
out
push
pop
enter
adc
sub
cs
cltd
sub
cmpsl
lea
pop
xchg
mov
mov
call
test
jne
testb
push
mov
jecxz
movsb
mov
xchg
out
in
les
sub
movb
or
cmp
in
leave
sub
or
pop
xchg
fucomp
push
and
xchg
leave
jno
repnz
andb
fiadds
out
andl
dec
dec
mov
jp
sub
jb
popl
adc
push
rorl
out
jge
jle
mov
sbb
int3
int
aaa
sarl
adc
movsb
and
fisubrs
outsl
cmpsl
pop
mov
negb
xor
pop
add
jp
fs
jb
data16
frstor
cmp
nop
xchg
sub
data16
sbb
mov
mov
roll
xor
lock
mov
fisttpl
loopne
ret
ja
in
repz
test
cmp
dec
add
adc
arpl
dec
pop
cmpsl
ds
xlat
lahf
es
push
cmp
or
pushf
push
cmp
add
out
aaa
out
mov
inc
xchg
adc
xchg
adc
cmpsb
clc
ret
jo
or
dec
scas
icebp
test
dec
xchg
shl
ja
test
aaa
or
add
je
icebp
mov
test
mov
ret
jo
imul
sub
cli
jae,pn
mov
push
sbb
sub
jle
dec
xor
das
xchg
ret
je
pop
pushl
lods
pop
dec
jp
es
jmp
xchg
stos
xor
out
fistps
push
nop
or
incl
inc
lds
iret
sub
xlat
add
push
loope
out
aaa
pop
scas
or
enter
cmp
sbb
cmp
outsb
inc
xorl
clc
and
rcr
lret
lock
test
pop
add
repnz
scas
adc
out
pop
fcoms
stos
lret
sub
mov
fcompp
ret
inc
xchg
mov
jg
jle
sub
mov
jno
clc
adc
rorb
les
push
adc
les
test
shlb
aaa
adc
jne
mov
andb
pop
fnstcw
test
daa
push
leave
std
popf
mov
test
add
or
adc
ret
lods
or
sub
in
and
aam
lods
sbb
test
pop
adc
cmp
loope
adc
adcb
xor
and
xchg
ja
mov
out
and
sahf
cmp
outsb
iret
orb
mov
je
and
sub
incl
mov
fidivrs
jecxz
mov
js
cltd
add
leave
add
loop
sub
fwait
push
movsl
test
push
sub
dec
dec
adc
cmp
sub
cmp
das
lret
pop
in
test
pushf
loopne
inc
das
imul
push
out
cmp
fwait
xchg
dec
mov
mov
push
mov
gs
pushf
lahf
sbbb
xchg
std
sub
popa
repz
ja
and
sahf
cs
into
jo
out
sbb
loope
outsb
and
mov
insb
in
js
movsl
clc
clc
jg
jge
js
push
mov
out
sbb
mov
cmpsl
mov
and
rol
lret
lods
mov
lods
enter
inc
pop
addr16
or
xchg
xchg
xor
mov
xor
ret
jae
jne
les
pop
mov
in
jbe
aad
dec
mov
mov
popa
fisttpll
dec
adc
xchg
fwait
mov
mov
popf
and
lds
pop
dec
push
inc
fistl
out
mov
dec
les
loopne
xchg
shrb
jb
movsb
mov
push
or
imul
xchg
int
roll
loopne
pop
jno
push
pop
pop
ss
movsl
jb
cmpsb
rcrl
fnop
jmp
adc
jno
mov
hlt
xchg
lock
cmp
cli
fwait
mov
cs
or
or
fwait
xchg
mov
ret
loopne
mov
adc
insb
lods
ret
add
cld
outsb
sub
and
adc
dec
rcrb
dec
push
xor
cld
mov
jle
hlt
and
mov
xorl
adc
fsubr
mov
loop
mov
mov
jg
ja
addr16
dec
ror
in
xchg
mov
mov
inc
push
jb
xor
out
jne
cmc
inc
loope
dec
fidivrs
inc
xlat
sbb
push
cmp
movsb
xchg
xabort
into
mov
out
push
jmp
xchg
pusha
mov
or
das
xor
xorb
add
shlb
sbb
jne
mov
hlt
and
mov
cmp
dec
sub
xor
dec
xor
cmp
cmpsl
arpl
push
push
neg
cmc
test
in
sbb
pushaw
loopne
lret
add
xchg
fwait
push
push
push
bound
xchg
test
lret
scas
xchg
das
jg
adc
aas
add
dec
lahf
pop
stc
push
cmpsb
flds
je
fdivrp
xchg
mov
jns
cmp
call
adc
orl
lcall
cmp
inc
movsb
or
sub
aam
xchg
push
or
testb
xor
mov
test
cmpsl
xchg
rorb
jne
insb
test
iret
or
dec
fpatan
ficoms
mov
adc
imul
ds
or
imul
imul
leave
daa
and
mov
xor
jb
das
adc
dec
and
inc
cmp
cs
stos
push
cltd
inc
inc
cmovle
dec
jp
push
mov
pop
into
aaa
cmc
insb
sub
mov
popa
insb
push
std
cmc
gs
dec
inc
fsubrs
push
pop
xchg
ljmp
sbb
int
rorl
jno
scas
or
add
and
das
push
pop
mov
push
movsb
dec
pushf
mov
mov
push
xlat
adc
cmp
scas
pop
xchg
leave
insb
movsl
inc
sti
nop
or
sub
aas
cmpsl
mov
adc
shl
test
mov
jne
cmc
push
mov
fimuls
nop
push
mov
fnstcw
push
mov
inc
stos
push
cmp
mov
fs
aas
mov
cmpsb
lea
ret
cmpsl
aad
dec
loope
scas
dec
pop
fstps
ror
xor
enter
mov
pop
ret
dec
cli
cmp
out
mov
cmc
ds
es
andb
dec
jle
mov
xor
dec
xor
push
insb
in
adc
pop
test
cmp
xchg
data16
add
adc
out
lret
cmp
aaa
mov
cmp
and
insl
and
imul
mov
jg
mov
sub
out
mov
mov
fwait
ss
addr16
enter
cmp
outsl
jecxz
xchg
mov
xchg
xchg
mov
stc
push
jp
fidivrl
inc
sub
dec
arpl
mov
xchg
xchg
sub
inc
pop
push
pop
and
into
and
and
xchg
adc
popa
test
outsb
scas
lock
push
fwait
mov
adc
adc
dec
fstl
pop
jl
fiaddl
into
sbb
dec
add
aam
mov
fsub
iret
in
stos
cmp
jle
cmc
loopne
int3
adc
xchg
das
into
or
ja
aas
popa
adc
cltd
repz
or
jmp
in
int3
xlat
push
sbb
rcll
mov
movsl
and
insl
js
cmp
sbb
ss
daa
jmp
push
xlat
xchg
xchg
dec
cmp
mov
outsl
mov
dec
sbb
out
in
inc
adc
clc
icebp
mov
sbb
loope,pt
sbb
inc
jae
mov
out
xor
in
jbe
js
push
inc
dec
push
mov
xchg
fs
xor
jno
cwtl
in
mov
rorb
xor
mov
popf
cmc
call
cmp
cltd
xchg
sbb
mov
adc
lahf
mov
cmpb
mov
pop
orb
push
sbb
jb
in
add
xor
dec
xor
xor
cmp
imul
in
mov
ret
sbb
sbb
mov
push
adc
mov
mov
sub
dec
scas
xchg
fdivp
aam
scas
cmp
cmp
inc
mov
in
jge
in
stos
fsubp
loope
testl
mov
lea
arpl
xor
ja
lahf
test
xchg
pop
inc
loopne
arpl
stos
jmp
popa
inc
into
vmovd
pop
into
xchg
jo
mov
or
jle
inc
dec
daa
das
pop
faddl
pop
inc
and
adc
inc
push
jg
pusha
add
roll
int
push
movsl
test
xchg
pop
jns
test
dec
test
pop
cmc
faddp
iret
add
xchg
add
out
xlat
insb
pop
cltd
dec
or
stc
lret
and
dec
jno
test
movl
in
fistl
mov
and
mov
pop
push
ljmp
shlb
jne
frstor
sub
xchg
scas
xchg
subl
cmp
outsb
sbb
imul
jne
and
lods
mov
mov
push
sub
xor
ja
call
loopne
icebp
fimuls
outsl
cmp
stc
pop
pop
lds
fstpl
mov
rcll
xorb
sbbl
adc
dec
xor
bound
mov
add
in
in
ja
jl
aaa
mov
push
int
int
pop
int3
pop
fbld
or
pushf
adc
loop
push
ret
dec
jns
add
and
push
and
ds
aaa
movsl
inc
lds
daa
xor
popf
cmp
pop
inc
pop
mov
shlb
jmp
mov
pop
imul
dec
test
xor
sbb
push
add
dec
ja
mov
out
pop
jmp
test
cmp
sbb
pop
repnz
push
mov
mov
out
fdivl
mov
in
xchg
out
sarb
cmp
mov
jle
rol
xchg
pop
rcll
or
fsts
dec
dec
ret
or
in
cmp
ret
dec
lock
push
and
sbb
push
mov
mov
pop
add
add
jmp
arpl
aad
pop
mov
repz
jb
inc
fidivrl
mov
xor
sub
sbb
xor
dec
pop
mov
jno
sbb
int3
out
and
jae
ficoml
lea
outsl
pop
jle
cmp
push
adc
jecxz
sahf
mov
mov
jmp
add
movsb
out
add
out
ss
fildll
or
and
arpl
mov
popf
test
cmpsl
push
hlt
fwait
jge
ret
inc
loop
xchg
ljmp
mov
push
inc
int
xchg
adc
in
jbe
outsl
add
or
mov
sub
bound
pop
lea
cld
xchg
mov
subl
pop
push
stc
pusha
addr16
and
repnz
dec
je
lods
mov
and
cmc
pusha
sub
js
lret
mov
mov
xchg
inc
cli
ret
stos
push
jle
cmp
push
jge
pushl
repz
movl
or
sti
and
or
fstpt
out
stos
add
inc
in
jmp
fs
xor
jmp
push
dec
outsb
cltd
or
aas
push
jle
fistpll
push
andb
arpl
lock
insb
insl
dec
in
mov
xchg
mov
jo
lock
sub
addr16
in
scas
push
adc
xor
orl
lods
aam
add
sub
movsl
sub
pop
adc
push
into
jns
sub
or
fsubrl
cmpb
jl
sti
stos
in
jl
test
push
stos
insl
ret
inc
fcmovnb
add
inc
lods
shl
cmp
cmp
add
push
push
pop
add
mov
push
iret
add
jbe
pop
pop
dec
dec
dec
jl
inc
cmc
jo
roll
add
pop
sbb
sub
jb
out
pop
outsl
scas
cmp
mov
aas
stos
les
or
pop
dec
xor
adc
int3
sahf
shll
adc
mov
xor
mov
scas
sub
adc
leave
inc
bound
lret
imul
ret
xchg
into
add
outsb
dec
sbb
mov
dec
dec
mov
mov
sbb
mov
ret
or
dec
int
inc
andb
push
adc
jg
enter
or
xchg
dec
lret
or
js
inc
adc
jae
xor
sbb
movsl
gs
inc
pop
aad
data16
cmpsl
cmp
loope
mov
dec
in
insb
mov
and
imul
inc
js
fmuls
faddl
aam
int
xchg
cmp
test
adc
adc
lock
push
jbe
push
xchg
mov
mov
add
insl
movsb
mov
cld
mov
add
jmp
hlt
jg
movsb
push
pushl
icebp
add
jb
jmp
jns
int
xor
mov
jns
ret
ret
and
and
in
adc
xlat
xchg
push
in
nop
mov
outsb
mov
sahf
jne
mov
push
mov
lcall
les
mov
mov
cmc
mov
cmpsb
call
xor
loope
popl
lea
and
or
xlat
dec
push
or
add
jb
xchg
jns
sub
lret
inc
test
gs
in
xor
aam
stc
mov
es
mov
scas
jbe
add
push
mov
mov
push
mov
and
push
dec
das
adc
inc
xor
popa
dec
cmp
cmp
mov
test
aas
dec
and
inc
mov
imul
pop
mov
or
jg
and
or
cmp
movsb
pushf
xor
mov
aaa
push
pop
add
push
pusha
push
shlb
ffree
test
dec
push
jg
das
jo
enter
stos
sbb
inc
mov
xlat
imul
pop
jnp
xchg
dec
push
lods
xchg
jns
movsb
and
push
and
pushf
xchg
test
cmp
dec
jecxz
pusha
pop
jo
aaa
repz
ja
mov
pop
push
adc
out
daa
mov
mov
or
out
jge
cmp
xchg
push
sub
ja
xor
xchg
and
dec
addb
stos
aad
adc
addb
aas
fs
outsb
or
adc
ljmp
cs
jg
lret
cmp
cmp
scas
fxch
sub
sub
je
fidivrl
xchg
or
mov
push
push
lahf
push
or
jne
push
push
dec
jnp
cmp
mov
lea
jb
push
cmpsl
fnstsw
insl
fbld
outsb
addr16
andb
jnp
or
sbb
orl
test
sahf
xchg
fwait
mov
mov
mov
testl
push
test
outsb
cs
push
inc
pop
imul
push
mov
sbbl
mov
mov
mov
pushw
outsb
or
pop
xchg
mov
idiv
jbe
mov
call
mov
jg
mov
lret
jns
scas
or
push
jecxz
xor
call
jns
scas
fistpl
repz
dec
repz
jbe
imul
ret
dec
hlt
jnp
add
jl
outsb
out
pop
lret
hlt
sbb
mov
jae
repnz
jo
inc
por
inc
mov
cwtl
ja
or
push
into
pop
mov
sub
sbb
mov
xchg
and
and
mov
xchg
jb
ljmp
loope
aam
subl
insb
or
push
sbb
xchg
aam
das
jo
or
cmp
mov
data16
mov
mov
mov
fdiv
xchg
bound
cmc
rorb
add
push
push
xor
loop
dec
dec
scas
clc
adc
inc
jbe
mov
sub
insb
mov
jmp
dec
add
cmpsb
cmp
xor
jg
in
addr16
sti
sar
cmp
pop
cmpsl
push
fsts
adc
rorl
int
lret
shlb
sub
daa
pop
push
dec
das
cmp
cmp
xlat
cld
pop
ret
mov
dec
jp
fstp
pop
ljmp
mov
aas
or
pop
xchg
xchg
inc
out
cmp
adc
dec
pushf
ret
pop
or
jnp
fldt
mov
pop
imull
lret
dec
xchg
pop
sub
mov
adc
popf
shl
lcall
add
repnz
lret
and
mov
inc
and
les
push
add
in
push
cmp
push
fbld
push
push
pop
jb
inc
pop
pop
sub
scas
jne
add
sub
pop
aam
sbb
call
or
int
and
adc
jbe
mov
lea
pop
int3
jb
xchg
adc
loope
sub
andb
icebp
sbb
aas
iret
ja
adc
adc
loop
stos
sub
icebp
in
cs
cmpb
fisttpll
pusha
in
xor
sbb
cmp
cmpsl
scas
mov
sbb
mov
ret
scas
inc
add
jno
jmp
arpl
cmpsl
xor
or
cmp
test
je
imul
push
jge
loope
push
icebp
jbe
ljmp
in
repnz
popa
jnp
data16
lahf
test
or
pop
cld
mov
stos
pop
outsl
sub
xor
out
mov
sub
in
jnp
and
popf
mov
xor
das
push
push
mov
sbb
jl
aas
mov
pop
div
jbe
outsb
push
pusha
sub
jne
insb
fisttps
lret
outsl
outsb
push
lds
mov
addr16
mov
mov
adc
sbb
fsubs
pop
mov
push
call
mov
xlat
icebp
cmpsl
mov
mov
incb
or
mov
jg
inc
pusha
loop
mov
fwait
xor
repnz
dec
push
xchg
pop
sarl
int3
sbb
fcmovnb
mov
stos
xchg
out
scas
out
xchg
pop
inc
cmpsl
or
mov
sbb
jecxz
jecxz,pt
scas
imul
je
dec
std
inc
mov
xchg
and
js
xchg
and
ret
add
lds
sarl
mov
fdivs
scas
enter
inc
push
jo
roll
xor
cmpb
lock
xor
iret
std
cmp
cltd
lahf
xchg
test
flds
or
cmpsl
mov
clc
dec
pop
jnp
push
push
imul
mov
mov
xor
sbb
sub
mov
dec
pop
push
std
cmp
lcall
xor
mov
call
shl
andl
cmpsl
es
not
xor
int
adc
push
jo
cwtl
stos
pushf
or
push
xor
mov
ja
or
int
mov
sahf
xor
iret
cwtl
popa
int3
shlb
mov
pop
mov
cmp
add
sbb
xorb
pusha
sub
jp
pop
sub
test
jnp
cli
adc
push
bound
and
mov
add
sbb
cmp
int3
lea
outsl
int3
mov
sub
xlat
sbb
lods
iret
jnp
adc
imul
xchg
dec
sbb
or
in
dec
xchg
xor
in
int3
xchg
pushf
mov
jns
jg
cmp
inc
leave
pusha
in
mov
pop
mov
fnstcw
xor
dec
lret
ret
mov
jnp
jno
mov
es
int3
cmovb
push
jno
fwait
add
jne
jo
xchg
ficoml
aas
fldcw
js
jne
icebp
add
mov
push
sub
inc
add
push
jge
rcrb
xchg
gs
cli
into
jno
or
adc
in
and
push
ret
decl
cli
push
cmpsb
pmullw
inc
pop
push
out
sbbl
cmp
pop
mov
arpl
aaa
lea
in
mov
out
or
push
mov
sti
es
mov
insb
ja
mov
xlat
ds
cmpsl
push
mov
push
inc
cmp
test
mov
in
loope
movsl
sbb
cwtl
daa
ljmp
xchg
push
out
test
inc
jecxz
shll
ja
subl
gs
push
jne
cmp
push
sbb
push
jae
mov
inc
pop
sub
fwait
cmp
mov
pop
mov
test
mov
mov
out
stos
mov
sahf
dec
cli
push
fcoms
xor
jmp
add
or
xor
test
imul
lret
adc
call
lcall
jle
adc
addl
add
cs
push
aad
imul
jg
test
and
xorl
adcl
repnz
pop
sub
push
incl
cmp
aam
aaa
je
aad
mov
jns
mov
scas
mov
sbb
aam
out
push
xchg
pop
adc
mov
jnp
lods
lahf
pop
dec
repz
shrd
les
cmp
ja
jle
lret
jae
mov
mov
mulb
push
add
aam
mov
inc
pop
mov
dec
add
push
cld
insl
ds
xchg
mov
dec
aas
sub
lea
rolb
fnstsw
inc
std
int
mov
imul
jmp
ret
nop
push
add
iret
or
pop
lds
xchg
mov
cmpsl
and
xchg
mov
filds
push
std
lds
jns
xchg
mov
movsl
sbb
jb
nop
into
xchg
ss
repnz
jbe
push
jmp
xchg
and
jne
popa
stc
mov
or
dec
xor
dec
inc
mov
insl
add
jns
mov
les
pop
pop
insl
stc
mov
cmp
jnp
mov
insl
jmp
and
ret
jno
in
lahf
ljmp
adc
mov
push
inc
jae
cs
cli
mov
test
paddw
sbb
lods
and
xor
mov
mov
in
push
insb
jecxz
test
or
or
sbb
dec
xor
or
lret
test
push
push
fistpl
cmc
sbb
fnstcw
pop
ljmp
repnz
sbb
insl
ljmp
frstor
iret
hlt
fdivl
inc
mov
add
sub
sub
xchg
sub
jae
cli
aaa
enter
adc
ja
repz
divl
mov
cwtl
ljmp
dec
xor
ljmp
inc
mov
push
inc
xor
repnz
xchg
ds
jmp
push
test
sti
xor
adc
or
sbb
test
es
add
call
sub
mov
mov
add
into
mov
fdivs
js
test
sub
lret
jl
bound
cli
or
daa
cmp
mov
lahf
daa
imul
test
add
mov
dec
push
fdivp
scas
adcb
mov
outsl
lret
out
inc
xor
cli
outsb
std
dec
mov
jbe
aaa
bound
loopnew
aaa
mov
js
jp
and
adcl
mov
xlat
cmp
dec
sub
ljmp
mov
in
push
and
lahf
je
and
out
out
into
inc
xchg
ljmp
jg
ret
mov
loop
mov
push
xor
or
pop
xor
push
lods
je
jb
adc
jno
and
fstp
pop
mov
jp
ds
adc
movsb
jg
dec
mov
lods
xchg
push
mov
dec
int
pop
mov
pop
or
or
mov
insb
mov
leave
mov
xchg
or
push
pushaw
shr
xchg
packsswb
divb
pop
ds
mov
jl
xchg
mov
xchg
fwait
jns
outsb
push
lcall
rcll
add
push
pop
ret
push
sbb
and
sbb
inc
sahf
sub
subb
ret
popf
lods
sbb
ljmp
push
stos
push
inc
ja
xchg
imul
hlt
rorl
adc
sbb
into
push
mov
insb
out
xor
into
jb
or
sbb
jae
fnsave
mov
movsb
in
lods
in
movsb
xor
jno
xchg
pop
cmpb
adc
sub
mov
and
fidivl
addb
out
jne
dec
inc
mov
sub
imul
mov
mov
lods
dec
jmp
mov
and
add
stos
aad
jp
fmull
fs
xor
cwtl
pop
lret
pop
jg
jo
or
fwait
std
mov
pop
inc
mov
test
cs
test
mov
loope
and
loop
pop
pop
pop
jbe
cmp
push
lret
cmpsl
les
sbb
mov
lret
repz
stos
pusha
fdiv
test
clc
popf
adc
test
test
scas
sbb
rorb
jns
shlb
in
fisubrs
add
push
test
pushl
testl
mov
les
pop
pop
push
fldenv
cmp
mov
inc
clc
dec
ja
cmpsl
push
sub
jns
popa
push
sub
mov
sbb
mov
test
dec
sub
or
pop
data16
fs
arpl
or
test
mov
xchg
mov
outsl
aas
roll
arpl
jne
leave
mov
sarb
jns
lods
rorl
sbb
xor
lret
andb
sbb
dec
pop
sar
jge
mov
out
xchg
sub
xor
inc
lea
and
and
cwtl
cmp
loop
inc
xlat
iret
lds
out
add
xor
imul
mov
ljmp
out
mov
insb
push
or
and
sub
cwtl
sbb
mov
dec
push
sub
lcall
addb
cmc
gs
dec
aas
sarl
dec
sbb
mov
mov
pop
imul
adc
mov
lret
lock
outsb
xchg
pop
pop
clc
stos
pop
lret
dec
add
lahf
xor
jl
adcl
add
lcall
pop
mov
test
or
jmp
bound
int
pop
cmc
mov
iret
jle
ja
pop
call
jns
mov
in
jo
cmp
stc
cmp
sbb
aad
mov
dec
push
mov
or
and
icebp
pop
scas
inc
cmp
dec
sbb
jl
pop
int
imull
jmp
dec
sti
outsb
cmp
push
stos
cmp
hlt
out
cmp
in
fwait
lods
into
sub
hlt
dec
or
inc
enter
rcr
and
dec
fwait
int3
pop
inc
pop
out
push
call
div
push
cmp
pop
dec
out
inc
dec
xor
lret
in
cwtl
cltd
add
sbb
cmc
push
movsb
dec
ret
ds
xchg
push
mov
rorl
shrb
js
mov
push
mov
xor
pop
and
push
aam
pushf
lcall
iret
mov
pop
pop
repnz
call
cmpsl
inc
adc
sub
shrb
cmp
ss
cmpsb
ljmp
lods
xchg
les
pop
xor
out
xchg
fs
lods
mov
das
ror
je
dec
leave
stc
sbb
jge
leave
xor
lahf
das
clc
insb
int3
or
loopne
mov
add
xchg
clc
pop
stos
mov
ficompl
sahf
or
adc
inc
dec
mov
adc
pop
add
mov
outsl
testl
jb
ficomps
lds
scas
movsb
fs
pop
scas
aam
xchg
xor
pop
mov
pop
decl
fwait
rolb
je
cmp
nop
dec
dec
jge
sbb
andb
movl
fsubs
decl
sub
push
dec
push
xlat
or
mov
in
cmpsb
or
andl
push
pushf
mov
xor
scas
and
andb
mov
push
adc
js
xor
sub
pop
incb
mov
push
cmp
ss
xchg
dec
insl
mov
cltd
or
jno
adc
movl
jp
mov
leave
arpl
mov
and
dec
xchg
fistl
push
push
js
mov
enter
sbb
mov
ror
pop
iret
fistpl
das
pusha
xchg
cmp
jo
daa
sbb
adc
nop
fldenv
inc
cld
into
add
lods
push
movsb
jg
dec
hlt
ds
lcall
pop
push
or
xchg
mov
push
ret
sti
and
lcall
out
sub
in
je
adcl
xor
inc
sti
adc
mov
or
mov
shl
push
dec
hlt
movsl
iret
in
xor
and
cwtl
push
int
sub
ja
mov
push
loop
xor
lea
sbb
sti
in
pop
jno
cld
mov
xor
mov
mov
int3
mov
xor
push
lods
das
sti
mov
fs
jmp
aas
push
jo
cli
xchg
pop
mov
shrb
es
rorb
fxch
add
test
leave
xchg
mov
pop
ljmp
outsb
dec
or
mov
inc
in
rcrb
sub
mov
and
or
mov
sbb
stos
pop
and
inc
xchg
imul
mov
cwtl
movsb
mov
xchg
sub
push
out
add
xor
pop
ret
iret
test
dec
cmp
mov
loop
pusha
das
rcl
jb
dec
cmp
or
repnz
jno
sbb
cld
ret
cmc
in
addb
mov
insb
pop
das
test
test
push
ret
or
pop
inc
repnz
dec
add
lods
movsl
int3
rcr
popf
dec
push
xchg
dec
sarl
push
stos
mov
pop
pop
fstps
enter
push
mov
into
fildll
sub
stos
jl
and
xor
or
mov
inc
fsubrl
or
xchg
or
fmuls
lods
ljmp
xchg
sbb
adc
daa
push
cs
test
xor
xchg
hlt
sub
or
shrb
and
pushw
lds
sti
icebp
je
and
lahf
test
mov
xor
or
pop
call
adcl
out
cmp
add
jb
push
shlb
xchg
add
push
call
xor
mov
cmp
cmp
jae
ret
jp
insl
and
cltd
imul
adc
lock
sub
leave
lods
pop
pop
int3
sbb
cld
lahf
dec
lret
pop
scas
sub
sbb
mov
sub
pop
sub
inc
dec
ret
sbb
xchg
mov
pop
mov
fdiv
ds
and
into
pusha
nop
sbb
fiadds
dec
loop
sbb
adc
add
cmc
mov
push
push
sub
in
sub
ds
inc
jns
push
jp
pop
lret
lcall
popa
mov
pusha
bndldx
xor
std
sbb
add
popa
pop
fsubr
lcall
mov
sbb
imul
xchg
inc
lods
fsubrp
imul
nop
jecxz
adc
jae
mov
or
in
aas
cwtl
push
xchg
das
orl
in
jo
add
imul
sub
mov
and
or
loop
ds
std
js
inc
cwtl
adc
icebp
cmp
jnp
mov
and
out
test
pushf
mov
sbb
mov
div
sub
inc
dec
repnz
stos
imul
fwait
push
les
xchg
push
insl
sub
inc
sti
adc
ds
insb
sbb
inc
icebp
and
or
sbbb
imul
push
out
cmp
fmulp
lods
push
jmp
data16
out
and
fxtract
int
test
xor
add
dec
dec
add
loope
mov
das
mov
xor
jmp
mov
subb
mov
dec
enter
int
push
and
sbb
jge
xchg
mov
push
hlt
fwait
xlat
icebp
sub
or
sbb
push
inc
jb
outsl
out
stos
push
push
mov
xchg
mov
xchg
add
lret
ljmp
insl
outsl
push
mov
dec
add
pusha
js
cmpsb
in
clc
xchg
fwait
or
mov
mov
scas
shll
frstor
cmp
rcrl
jp
loopne
mov
pop
fiaddl
xor
insb
imul
loopne
lahf
xchg
loopne
add
mov
je
push
sub
jmp
lret
xchg
pop
fcompl
jo,pt
push
aas
cmp
lea
shr
outsl
mov
fcoml
jecxz
aad
pushf
sbb
pop
lds
xor
fdivrs
xchg
sbb
stos
insl
sub
jbe
cwtl
jne
push
ret
stos
popa
fdivrp
pusha
xor
push
leave
into
xchg
pop
push
push
add
jg
popf
int3
jl
xor
popf
into
lahf
lret
xor
repz
stos
jg
scas
push
xor
mov
call
addr16
xchg
mov
inc
pop
pop
xor
mov
adc
in
rorb
adc
add
adc
cmp
xor
rorl
mov
and
lret
in
pop
fsubrl
test
cwtl
push
xchg
outsl
repz
push
sbb
pop
sbb
cwtl
adc
cmc
sbb
fdivl
mov
cmpsl
arpl
push
pmulhw
adc
mov
mov
pop
test
mov
mov
rcr
push
jns
mulb
cmpl
add
fstps
pop
pusha
test
xchg
outsl
mov
mov
dec
cltd
xchg
xchg
ds
add
mov
arpl
xchg
arpl
stc
andb
cmp
adc
in
dec
inc
jnp
pusha
cltd
jo
fcomp
mov
sbb
into
sub
aas
lock
inc
mov
fdivrl
xchg
push
push
js
jp
in
cli
movsb
sbb
sub
cwtl
outsb
or
sub
ljmp
insb
pop
jmp
xor
lahf
push
push
cmp
outsl
jno
aad
mov
call
xorl
test
je
data16
fdivrl
cmp
push
mov
fmull
sub
xlat
pop
mov
jne
or
rorb
inc
loope
or
roll
xchg
insl
pusha
cmp
mov
xlat
mov
adc
iret
out
xchg
mov
pop
test
out
mov
fmul
fwait
popa
dec
dec
pusha
adc
pop
adc
push
out
adc
loopne
int
mov
pushf
bound
outsb
in
int
xchg
inc
inc
in
adc
bound
dec
pop
sub
pushf
jg
loope
ljmp
cltd
push
add
movsl
xor
mov
mov
fisttpl
add
dec
lret
in
cmp
stos
jle
jl,pn
loope
sbb
mov
repz
int3
xlat
jmp
cmp
sbb
jle
sub
js
jmp
pop
pop
shl
dec
pop
stc
sti
ss
lock
stc
enter
mov
out
inc
insb
sahf
inc
or
jecxz
xchg
fucom
aas
adc
and
push
pop
pushf
movd
in
sub
shll
inc
jmp
push
ficoms
leave
sarl
jmp
pusha
gs
lret
push
insb
sub
arpl
in
mov
cmp
idivb
add
or
xlat
jne
mov
movsb
test
dec
daa
fyl2xp1
lea
jae
dec
dec
push
clc
dec
jns
mov
jmp
mov
push
out
jecxz
cli
mov
and
mov
cmp
aas
and
sbb
shlb
add
add
fdivl
and
mov
push
gs
adc
jl
fs
pop
nop
cltd
outsb
mov
les
or
xor
pop
rorb
inc
cmp
dec
or
pop
test
cmpsl
adcb
mov
ja
scas
adc
cmp
push
fstps
ror
pushl
popa
xchg
jge
add
icebp
xor
imul
test
outsb
dec
test
lret
push
call
stos
ds
scas
mov
xor
jne
xchg
in
movsb
je
mov
repz
outsl
imul
mov
xchg
push
jmp
leave
mov
pop
mov
sti
inc
sub
ret
mov
xor
fiaddl
xchg
dec
ret
sub
repz
mov
jmp
inc
icebp
jo
mov
cmp
push
rcr
xchg
inc
lds
sub
stos
addr16
out
jmp
push
popa
jne
sbb
adc
mov
sbb
dec
test
mov
jbe
and
inc
mov
test
stc
pop
inc
and
pop
and
inc
jp
push
fstpt
and
and
out
insb
ret
call
int3
repz
jl
in
loope
cmp
leave
shrl
add
and
cmp
pop
int3
ja
pushf
and
rcrb
scas
mov
int3
sahf
sbb
fprem
and
fcoms
fidivs
ja
sbb
mov
rolb
insl
jl
xchg
xrelease
pop
adc
std
cmp
push
aaa
push
nop
lods
mov
pop
push
xchg
leave
inc
enter
popa
in
iret
push
ljmp
sbb
clc
repnz
and
ja
lret
or
sub
cmc
sarl
ficoms
inc
repz
dec
std
test
les
test
adc
xor
and
add
stos
push
jae
jbe
jmp
sbb
hlt
dec
lods
push
cmp
sbb
mov
add
iret
pop
ss
xchg
ror
cli
dec
aad
xchg
push
or
in
ds
or
jle
lods
adcl
int
lret
mov
sti
mov
pushf
mov
sahf
mov
mov
jbe
jmp
dec
pop
aam
inc
int
lret
adc
addr16
mov
xor
add
int3
imul
and
xlat
pop
sbb
mov
clc
hlt
scas
stos
insb
jecxz
movsb
out
dec
popf
sbb
stc
cld
dec
lret
pop
jnp
mov
pushf
dec
push
jmp
popf
xor
lods
std
cmc
push
push
sahf
mov
lock
push
lahf
pop
scas
pushf
imul
sti
loopne
cli
sbb
push
xchg
cmp
das
pop
jne
jp
xor
icebp
dec
xchg
sbbb
fs
lcall
out
gs
and
mov
jnp,pt
and
or
push
jne
cmp
pop
out
test
adc
or
cmp
test
jmp
adc
mov
popa
mov
lahf
mov
inc
or
int3
sti
lods
ds
push
out
pop
inc
sub
pop
mov
sbb
cmpb
in
cmpsb
out
xchg
das
ret
cmp
dec
jg
lahf
cmp
and
push
rorb
xor
inc
push
bound
lods
cmp
xchg
rcl
enter
and
push
aas
dec
cld
jo
subb
scas
insl
ds
jne
jg
xor
cmpsb
ret
pop
je
sti
sti
or
mov
push
adcb
mov
mov
cmpl
xchg
mov
adc
adc
movsb
push
ss
daa
lock
xor
fmuls
jne
and
xchg
enter
cmpsl
aad
leave
clc
rcll
pop
je
fwait
push
dec
out
mov
lods
add
add
pop
icebp
int
sahf
cltd
mov
test
mov
and
push
mov
mov
cmp
jle
mov
xchg
pop
lahf
cmp
sarb
xchg
insb
cmp
daa
mov
dec
aad
mov
xchg
sub
dec
push
test
cmpsl
adc
mov
insb
add
pop
repz
xor
push
test
pop
xor
add
sarb
jae
xchg
stos
mov
sub
aad
idivl
adc
adc
sub
mov
call
xchg
dec
jl
fsubrl
pop
nop
cmpb
cmc
push
mov
or
repz
notl
scas
imul
dec
jnp
jecxz
mov
cmp
call
sti
or
dec
aaa
sbb
stc
add
cmpsb
jp
or
dec
fst
pop
scas
dec
adc
inc
daa
sahf
dec
mov
ljmp
mov
xchg
mov
and
in
cs
xlat
loop
lret
cmp
iret
jl
cs
mov
enter
xor
and
pop
pop
pmaxub
lcall
pop
and
xor
sub
shll
insl
jno
jp
aas
push
negb
jnp
or
daa
mov
cld
shll
call
in
aad
jbe
js
cmp
xchg
gs
mov
test
dec
int
cs
adc
into
mov
mov
push
pop
dec
sbb
aas
pop
mov
inc
roll
bound
out
push
ret
inc
push
insb
push
outsb
lods
dec
mov
xor
push
lret
pop
jl
sti
and
inc
cmpsl
jo
fwait
pusha
in
stos
cvtdq2ps
xor
push
addr16
cmp
mov
mov
paddusb
stos
in
jne
jno
xor
dec
adc
sub
std
out
or
mov
aam
je,pn
sysexit
adcl
stos
mov
es
out
clc
inc
outsl
xchg
les
imul
pop
fldl2e
fs
inc
add
xchg
test
mov
mov
test
cmp
cmc
xor
sub
jmp
inc
add
daa
inc
mov
rol
dec
pop
inc
loope
fistpll
push
sub
sub
dec
inc
sti
negl
fs
invd
xor
mov
adc
mov
fimull
cmp
scas
jl
into
xchg
call
sub
and
loope
jns
enter
in
push
sbb
sub
outsl
sub
jns
xchg
stc
imulb
jns
sub
dec
or
jae
mov
addr16
pop
sti
xchg
je
faddl
jle
or
lcall
outsb
add
inc
mov
fnsave
sbb
jnp
cld
pop
fwait
clc
imul
sbb
cmp
gs
addr16
ret
call
dec
push
leave
and
sbb
dec
addr16
std
xor
mov
test
lret
mov
xlat
adc
popf
mov
pusha
movsb
roll
mov
or
sbb
and
aaa
imul
jle
loopne
mov
arpl
mov
cld
sub
test
stos
sbb
cmp
je
jle
packssdw
mov
cmp
ss
cmp
divl
mov
lret
pop
xchg
push
idivb
sbb
inc
fchs
outsl
fists
cmpsb
fstps
outsl
dec
adc
int
push
movsl
pop
lea
push
out
or
fdivp
xchg
daa
cmp
addl
sub
sahf
push
clc
sub
lods
push
arpl
push
mov
xadd
cmc
sub
push
push
popf
xchg
sbb
push
ljmp
cmp
enter
push
mov
cld
add
dec
in
push
xchg
in
mov
movsb
aaa
clc
mov
movsl
xchg
repz
mov
sarl
xor
ds
sldt
sub
inc
mov
test
add
stos
fidivl
push
jb
cmpb
lret
inc
cmpl
mov
push
push
pop
dec
inc
outsl
out
sbb
mov
and
mov
sbb
xor
push
jns
orb
aad
adcb
popa
inc
push
hlt
pop
sarl
icebp
gs
inc
xchg
lret
xor
divb
add
fcomps
jnp
pop
arpl
aas
mov
insb
insl
mov
cmp
push
mov
sub
inc
das
sbb
push
cmp
test
bnd
bound
xchg
fs
daa
stos
sbb
idivl
push
fwait
sub
cmp
cmp
repnz
jno
shll
cmpsl
fsub
mov
mov
xor
addb
sbb
push
fcomp
nop
and
xchg
sahf
fdivrl
or
jecxz
cmp
into
in
pop
push
inc
lds
sub
cmp
sub
popa
ficompl
jae
push
sbb
sbb
repnz
bound
jmp
ret
mov
test
mov
mov
addl
jmp
in
mov
test
pop
sti
xor
lods
cmp
insl
popf
pop
xor
icebp
call
sbb
fs
lock
loope
dec
repnz
fdivrs
or
adc
fwait
cmc
lods
mov
ja
int3
mov
mov
or
add
mov
push
bnd
dec
pop
dec
pop
and
pop
mov
sub
test
pop
inc
adc
mov
nop
sub
xchg
lahf
inc
stos
dec
in
jp
adc
popa
push
les
testb
and
push
stos
cltd
sub
and
das
in
xchg
jp
xchg
xor
add
call
shlb
fistpll
fisubrs
push
sbb
sbb
mov
or
push
and
subl
jae
jns
cmp
or
pop
scas
pusha
stos
rcll
or
popf
inc
in
leave
enter
jmp
lods
cmp
adc
mov
xchg
popf
iret
idivl
mov
mov
fnstcw
adc
lods
scas
lret
dec
xchg
mov
cmp
adc
pop
ret
sub
cld
add
xor
dec
pusha
test
xor
imull
movsb
mov
lods
sub
int3
movsb
xchg
into
and
or
jl
clc
pop
aam
adc
pop
inc
jae
cmp
pop
pop
or
mov
dec
add
cs
jne
mov
pop
es
push
mov
xorl
jg
push
jno
aam
cmp
add
sub
addr16
outsb
fsubr
dec
mov
mov
fisubrs
js
fldcw
jne
inc
lods
mov
adc
mov
pop
lret
rcl
or
out
out
or
fwait
in
dec
les
dec
mov
aad
adc
mov
pushf
xchg
dec
lcall
jns
call
and
jno
pusha
sbb
pop
nop
test
mov
add
bound
movsl
jg
fadds
cltd
jmp
cld
bound
loope
pop
push
fsubrs
imul
in
mov
into
jb
jle
xor
push
push
addr16
mov
test
mov
push
lods
sub
mov
imul
shrl
outsb
dec
and
pusha
or
xor
mov
stos
in
bound
iret
clc
fwait
adc
sbb
out
adcl
pop
popa
dec
js
int3
je
insb
loopne
add
clc
in
pushf
cli
mov
jne
pop
sbb
aas
data16
sbb
std
cs
mov
in
loope
loope
xchg
xchg
stos
cltd
fistl
insb
aam
sbb
inc
iret
sarb
cmp
adc
imul
push
mov
xchg
inc
push
stc
sar
jb
cltd
ljmp
rorl
mov
ss
mov
dec
insl
or
mov
jns
scas
scas
test
mov
mov
sahf
dec
repnz
std
mov
addr16
outsl
sub
outsb
mov
dec
fcom
cs
enter
mov
mov
xchg
sbb
cmp
gs
sahf
sub
in
stos
mov
dec
and
addr16
mov
inc
adc
jecxz
cmpsl
mov
add
sbb
pushf
push
jmp
mulb
adc
xchg
xor
pop
and
sub
mov
insb
sub
push
mov
movsl
mov
addr16
enter
dec
sbb
rclb
adc
sbb
pop
dec
sub
ficoml
cmp
movsb
mov
add
test
push
or
test
sbbb
popa
orl
std
and
stos
sahf
inc
jnp
repz
movsl
jb
inc
sbb
xchg
mov
push
cmpsb
sahf
dec
mov
cmpsb
fbld
call
jb
sub
mov
adcl
ss
jne
test
aas
stos
lods
xor
jge
call
xor
adc
fstp
mov
lahf
add
xchg
pop
mov
scas
mov
mov
push
mov
out
xchg
pop
jae
sub
xchg
clc
mov
hlt
loope
loop
push
outsl
int
incb
std
imul
int3
or
enter
orb
add
xchg
shrl
jle
shlb
mov
mov
sub
adc
mov
dec
bswap
pop
imul
mull
mov
into
arpl
sti
dec
add
xor
sub
pop
orb
mov
outsb
inc
xchg
jmp
mov
sbb
sbb
cmp
stc
dec
mov
adc
jge
dec
inc
popa
xchg
or
add
cltd
mov
loopne
mov
out
sub
mov
imul
inc
in
test
cmpsl
mov
push
mov
outsb
std
push
push
xchg
dec
xchg
pop
mov
fwait
shll
adc
divl
or
in
popa
jnp
adc
xchg
ja
pop
cltd
pop
addb
shlb
enter
dec
pop
xchg
inc
sbb
aad
mov
pusha
pop
lret
mov
iret
pop
orl
cli
jge
mov
jle
int3
imul
pusha
fisubrs
mov
lret
mov
jge
jae
ss
sar
xchg
dec
das
dec
rcl
xchg
adc
and
sub
iret
das
popf
xchg
movsl
mov
out
xchg
dec
adc
jmp
xor
testl
test
pusha
ss
mov
sbb
rorl
out
aad
mov
and
mov
jecxz
imulb
enter
std
and
addr16
hlt
inc
or
pop
out
cli
cwtl
addr16
mov
pushf
xor
or
mov
mov
sub
into
mov
mov
add
mov
call
popl
rcll
loopne
xchg
mov
sbb
movsb
enter
popf
das
decb
aam
sub
les
xor
data16
cmp
mov
dec
packuswb
push
adc
xor
rcrl
sub
shl
lock
pusha
fistpll
add
jl
popf
fwait
outsb
pop
or
jecxz
jge
jno
test
jmp
and
cmp
insb
test
sbb
leave
out
arpl
fisttpl
pusha
int3
incb
cltd
mov
les
mov
repnz
in
push
mov
adc
fbld
push
jbe
outsb
mov
cmpsb
mov
adc
shlb
jo
sub
aam
pop
stc
mov
add
lret
sbb
cmpsb
xor
add
mov
push
inc
jbe
xor
xchg
repnz
lock
push
lods
loope
iret
lahf
sbb
insl
fmuls
and
jg
in
lods
pop
sub
adc
jns
cmp
rcll
stos
fistps
ret
push
cmp
lock
add
insb
mov
jo
imul
mov
call
rcrb
scas
pop
xor
xchg
nop
clc
js
or
or
mov
movsb
int
aam
idivb
roll
push
xor
mov
sub
add
clc
fisttpl
leave
inc
or
cwtl
sub
sbb
push
jb
jbe
mov
inc
push
dec
fsubs
dec
loop
mov
mov
or
fldcw
aas
and
add
dec
adc
mov
test
enter
shll
das
inc
push
pop
xchg
sub
aad
test
lods
cmpb
bnd
adc
and
or
adc
loope
subb
mov
int
pop
fs
xchg
inc
xor
push
jae
adc
pop
jg
and
push
lret
jnp
dec
xor
jae
push
sahf
push
xor
sub
mov
jnp
mov
sbb
movsb
out
inc
xchg
adc
push
lahf
std
mov
test
ja
fisubs
repz
movsl
push
xlat
scas
cs
arpl
sub
int
and
rcrb
ljmp
jg
cmp
add
cmp
push
btc
inc
adc
hlt
mov
pop
sbb
js
and
push
inc
mov
xor
xor
lcall
or
add
int3
ficompl
xchg
lods
mov
push
sbb
pop
movsl
sub
adc
jle
rcrb
negb
ljmp
into
jbe
dec
push
or
cld
xor
add
in
sarb
mov
add
test
addr16
les
out
sbb
xchg
xor
fisubs
dec
lods
out
cltd
xchg
mov
push
jne
cmp
adc
adc
outsl
shll
dec
mov
mov
adc
jno
add
std
int
js
std
arpl
and
inc
inc
push
adc
xor
repz
outsl
aam
sbb
ss
fs
movsl
outsb
push
aad
jge
pop
sub
lea
mov
lods
inc
in
xor
mov
sbb
lret
cmc
xorl
mov
mov
push
call
insl
lods
iret
lock
in
filds
jne
repnz
imul
sub
out
push
cli
popa
fs
adc
xor
push
pop
mov
out
push
and
adc
imul
out
lahf
push
fstl
pop
and
jg
mov
lock
xchg
xchg
fimull
and
jp
cmc
aam
bound
and
or
pop
addr16
and
cli
int3
movsb
je
sub
mov
dec
push
and
stos
adc
fadd
mov
test
sub
lock
xor
sub
mov
test
lret
pop
hlt
stos
rorb
cmp
inc
loop
push
and
hlt
push
dec
nop
add
pushf
adc
jge
pushf
xor
pop
jbe
les
push
test
cli
add
into
mov
loope
cltd
ljmp
aad
ja
jnp
mov
imul
mov
inc
lods
or
or
push
and
jne
enter
adc
or
in
adc
push
or
push
adc
fwait
xchg
push
push
arpl
notl
pushf
dec
test
lcall
pop
xor
mov
xor
mov
push
out
mov
sub
cltd
lret
repnz
or
jl
test
cmpsb
ds
ja
xchg
jmp
aam
out
or
or
aam
rclb
mov
scas
sub
popf
jle
mov
ljmp
ret
cs
stc
xchg
add
jmp
dec
iret
push
add
or
mov
imul
xchg
loope
sub
ret
mov
iret
mov
jne
adc
clc
lods
mov
mov
sahf
mov
mov
jmp
scas
scas
jns
test
xlat
sbb
cltd
dec
and
push
icebp
push
xchg
mov
or
xor
jle
loopne
mov
rcll
imul
sbb
pushf
movsl
popf
xchg
pop
dec
push
pop
lcall
push
addr16
nop
adc
outsb
pushf
xchg
xor
adc
mov
push
sbb
cmpsb
xor
lea
mov
das
dec
fs
movsl
into
iret
mov
adc
cmp
fs
or
inc
and
and
or
sub
push
push
xor
loope
push
or
aad
ficomps
sbb
xchg
adc
dec
jecxz
add
ret
daa
dec
push
or
or
cmp
fidivl
mov
out
and
jbe
inc
cld
movsb
xor
xchg
ss
xor
add
aad
sub
xchg
mov
inc
fimull
or
stc
dec
int
jle
push
orl
mov
inc
inc
dec
mov
dec
mov
push
data16
dec
adc
daa
xchg
or
scas
mov
aaa
lret
nop
xor
test
movsb
xor
push
push
insl
push
jg
in
jbe
jl
dec
pop
shr
loop
pop
test
test
mov
ljmp
mov
xor
jne
mov
addl
xchg
leave
pop
xor
pusha
xchg
sbb
jo
pop
ss
mov
mov
add
fldl
rclb
pop
call
xchg
dec
insl
dec
das
mov
movsl
inc
xchg
mov
xor
mov
fs
adc
sbb
cli
inc
in
adc
push
mov
gs
mov
insb
add
dec
pop
nop
fwait
pop
dec
xchg
mov
leave
pop
out
xor
sbb
gs
xchg
rclb
xor
ret
dec
in
xchg
je
or
adc
movb
xor
enter
cmpsl
mov
cmpsb
js
jbe
lret
dec
cmp
pop
fstps
dec
std
fdivl
jne
sub
or
lods
push
dec
lahf
stc
sub
add
test
or
lret
or
mov
sbb
lcall
jecxz
mov
cmc
xchg
in
addr16
ret
into
jmp
jbe
mov
es
adc
cmc
sbb
loopne
xor
mov
lock
xchg
add
hlt
push
add
sub
js
ret
mov
out
jbe
bound
jno
push
stos
ds
inc
jge
pusha
dec
xor
sbb
test
fistps
add
int3
push
push
inc
pop
sub
lret
cmpl
jne
mov
inc
imul
inc
xchg
je
mov
push
fbld
push
loop
adc
decl
sbb
lock
pop
mov
mov
cmp
sub
js
sub
popf
adc
mov
fldt
sbb
inc
nop
or
mov
jp
dec
or
push
jl
sub
orl
lret
repz
pusha
sbb
or
jp
mov
movsl
pop
into
call
loope
mov
jb
jnp
pop
jnp
insl
iret
aam
or
cmp
fbld
push
cmp
jg
fldl
rcrl
pop
sbb
inc
sbb
cmpb
pop
jae
in
mov
cwtl
sahf
pop
jns
insb
mov
outsl
xchg
shl
cmp
rcll
outsb
adc
mov
js
push
adc
arpl
dec
es
jnp
inc
fdivrp
scas
sub
aad
icebp
repnz
inc
sub
cwtl
cld
mov
bound
imul
insb
fstpt
sub
pop
inc
cs
and
ror
push
imul
fs
femms
mov
nop
arpl
cmpsb
into
cmp
mov
ret
repnz
clc
stos
int3
lods
inc
pop
adc
sbb
lods
sbb
mov
dec
adc
cmpsl
mov
cli
nop
mov
lret
dec
repz
push
std
mov
sub
or
call
mov
mov
or
add
jae
mov
in
vphsubwd
sahf
adc
mov
adc
mov
scas
out
ret
sbb
push
sbb
mov
popf
test
mov
mov
test
sti
mov
in
sahf
cmp
pop
ds
push
push
jg
sub
pop
cmpsl
push
xor
test
mov
inc
in
sub
nop
imul
mul
dec
jmp
ucomiss
mov
sbb
push
push
and
add
lret
lea
pop
aaa
test
int
sbb
cmp
arpl
mov
fadds
xor
popf
push
sbb
leave
ja
fmull
adc
xlat
adc
jnp
dec
imul
dec
std
cmpsl
xor
lcall
lock
xchg
sbb
xchg
bound
jg
and
enter
lds
and
lods
sbb
test
dec
jle
pop
mov
repz
mov
ret
sub
jge
push
cmp
sub
test
push
xor
cmp
mov
sub
pop
movsb
insb
enter
push
loope
sbb
imul
jo
cwtl
sub
mov
sbb
insl
xchg
mov
jae
sbbb
iret
mov
repnz
sub
mov
std
loopne
call
leave
mov
mov
ds
xlat
mov
push
sbb
pop
push
mov
pop
mov
dec
dec
mov
inc
mov
lret
push
les
out
jp
rcl
dec
pop
fstp
cmc
out
negb
xchg
je
out
xchg
or
inc
loop
popf
mov
or
xchg
popf
push
mov
pop
adc
stos
or
pop
popa
in
call
testl
lahf
mov
jg
jecxz
cmp
test
push
or
shlb
jnp
cmc
add
jg
iret
aad
cmp
xchg
pop
lea
dec
mov
int3
cld
in
rcll
adcb
aaa
mov
stc
nop
pop
and
xor
aas
jmp
out
mov
out
repz
push
mov
mov
xchg
div
or
mov
push
pop
add
loope
jno
add
in
arpl
or
fisttpll
pop
data16
jg
cmp
mov
repnz
xlat
xchg
jbe
je
lock
push
pop
test
clc
cmc
adc
cmpsl
sbb
js
in
push
insb
sbb
hlt
sarb
add
pop
in
cmp
cmp
inc
or
movsl
xor
mov
out
mov
mov
pop
das
dec
xor
jb
out
js
cmp
out
aam
dec
insb
jne
xor
mov
test
dec
popa
pop
pop
sti
flds
cltd
mov
imul
xor
push
jo
push
cmp
test
mov
mov
jmp
in
cmc
sbbb
lcall
movsl
and
outsl
and
jle
add
loopne
sbb
sbb
pcmpgtw
and
xchg
gs
lret
mov
xchg
cmpsb
add
jg
scas
mov
orl
fcomp
es
inc
adc
push
cmpsl
lea
jnp
jae
out
dec
daa
lret
fisttpll
scas
fidivrs
ljmp
xchg
mov
ret
xchg
je
lds
sbb
push
pop
test
mov
pop
lock
sub
push
adc
aaa
mov
js
ret
cmp
nop
out
jp
and
sahf
xchg
addr16
scas
cs
fildll
sub
hlt
ror
pop
orb
adc
add
jo
dec
mov
pop
xor
inc
add
cmp
xor
popf
push
sbb
sub
xor
fcmovne
pop
or
ret
repnz
push
loop
push
imul
adc
or
inc
pop
xchg
fisubrl
jmp
jae
daa
adc
lods
rcrb
pop
mov
test
xchg
sarb
sbb
arpl
mov
sbb
dec
cmp
adc
ja
mov
les
out
das
pop
inc
pop
repz
mov
rol
xchg
popf
sbb
scas
inc
call
gs
aad
or
push
sub
addr16
out
mov
and
mov
mov
cmp
inc
mov
pop
aas
in
adc
dec
dec
lds
movsb
adc
clc
mov
sbb
cmp
cmc
in
test
icebp
insb
rclb
jmp
push
ds
imul
sar
inc
dec
sbb
out
adc
addr16
sbb
xchg
mov
fs
ss
testb
adc
das
pop
loopnew
pop
out
push
and
iret
int3
sub
push
arpl
sbbb
out
insl
jne
aad
mov
jl
test
sbb
mov
or
or
hlt
mov
inc
ds
or
in
jns
jg
ret
add
inc
mov
lret
push
outsb
jmp
sbb
js
test
xor
push
fbstp
loopne
mov
adc
mov
cmp
aaa
pop
mov
pop
or
push
push
daa
data16
test
testl
sbb
je
xchg
xchg
nop
xchg
mov
mov
in
das
dec
out
les
sub
dec
fsts
sbb
push
ds
push
and
sbb
xchg
repz
pushf
mov
in
pushf
jg
in
jns
add
das
stos
mov
fisubrs
mov
sbb
call
xlat
in
das
fldcw
cmpsl
xchg
xor
icebp
call
dec
or
ja
iret
test
mov
rolb
inc
popf
loop
add
xchg
add
jge
jge
pop
push
pop
aaa
data16
imul
mov
das
xor
movsb
push
sbb
call
cmp
cmp
xchg
cli
inc
jae
hlt
inc
adc
sub
or
xchg
jecxz
cmp
mov
jo
cmp
dec
test
icebp
lods
inc
test
stos
daa
pop
pop
ffree
loop
stos
call
cmpsl
push
repnz
and
in
in
int
cmpsb
test
icebp
mov
xor
cmpsb
sub
xlat
or
out
sbb
mov
jae
out
fnstsw
sbb
iret
push
jb
pop
pop
scas
cmpsb
popa
fs
xor
std
sub
fcomi
into
daa
int3
add
lahf
loopne
int3
mov
ljmp
adc
fistpll
adc
iret
pop
js
ret
outsb
insl
dec
and
sub
inc
pop
mov
add
fdivs
mov
repz
adc
xchg
xchg
mov
out
nop
adc
scas
pop
mov
test
mov
or
orl
fs
mov
push
cmpsl
jbe
lahf
sub
xchg
out
pshufw
cli
pop
es
outsl
stc
pusha
pusha
mov
movsb
dec
cli
adc
test
repnz
fdivp
mov
xchg
adc
cmp
sub
push
cmp
clc
mov
fwait
int3
inc
inc
sbb
aam
and
andb
mov
push
xor
das
xor
jl
outsl
cmpsl
mov
lds
fsubl
das
jecxz
inc
push
outsl
outsl
mov
nop
bound
cmp
and
sub
sbb
sub
or
scas
lret
xor
mov
adc
js
jg
mov
sub
add
movb
rcll
jmp
mov
enter
ret
jno
mov
in
aaa
adcb
cmp
imul
scas
call
sub
mov
dec
jl
push
les
dec
clc
fstpl
nop
mov
data16
frstor
mov
push
cmpsb
mov
arpl
inc
inc
gs
xchg
in
loope
mov
fs
fsubr
out
pop
lret
addr16
test
int
xorl
stos
addr16
mov
repnz
pop
out
popa
xor
addr16
mov
cmc
aad
rorl
subb
mov
inc
sub
outsl
lahf
jmp
cmp
mov
lcall
sub
xchg
mov
popa
xor
out
cmc
jp
scas
push
xor
cmp
adc
loopne
sbb
cmp
je
cmpsb
jl
fwait
mov
mov
sbb
mov
das
aad
insl
dec
cli
ss
jmp
aad
push
lods
imul
lcall
mov
xchg
sbb
subps
inc
in
xchg
adc
daa
xchg
decl
out
jmp
fstpt
sti
xor
jmp
mov
scas
fstps
fnstcw
push
dec
insb
adc
in
addr16
enter
mov
addl
ljmp
insl
iret
dec
dec
sub
in
xchg
in
push
add
data16
mov
mov
jae
out
or
in
push
outsb
mov
cmp
mov
inc
cmp
movsb
ret
cmc
and
dec
nop
sbbl
enter
jnp
sub
pop
push
add
add
adc
and
and
aas
fstps
cmpsb
shr
mov
aam
sbb
jns,pt
repz
daa
xor
cs
or
jns
xchg
pop
movsb
scas
push
mov
mov
adc
adc
adc
inc
frstor
inc
je
xor
lret
test
mov
push
jg
xchg
stos
fsubl
jno
dec
sahf
adc
adcb
imul
mov
xor
fnstcw
or
ds
sbb
nop
test
hlt
pop
mov
and
lret
ljmp
xlat
xor
cmp
ljmp
add
lret
pop
jo
inc
shl
xchg
cwtl
out
stos
mov
and
fisttpl
aaa
adc
daa
xor
and
xor
xlat
sti
sti
aaa
in
leave
out
in
mov
pushf
sbb
jo
clc
mov
cmpsb
and
inc
js
aam
loope
sbb
mov
add
ljmp
int
pop
cs
ds
inc
outsl
imul
mov
out
pop
push
adc
or
subl
jo
push
int3
add
push
int
sub
test
adc
jmp
cmp
iret
mov
mov
mov
pop
sarb
std
loopne
mov
mov
arpl
push
notl
and
int3
out
stos
push
mov
int
idivl
jae
add
xchg
in
xchg
dec
mov
xchg
roll
jbe
jo
loope
lret
fnsave
mov
je
cmp
stos
sub
lds
push
int
pop
jae
xorb
out
lds
inc
rclb
dec
imul
sahf
rcrl
fstp
xor
cs
lods
or
push
cmpsb
bound
jge
add
push
mov
ret
stos
leave
aaa
fprem1
add
pop
xchg
xor
jg
jae
shr
fsubrl
outsb
xchg
bound
inc
jg
in
adc
adc
or
out
lret
xchg
xchg
jmp
or
je
sti
das
mov
ret
adc
xor
cltd
in
mov
iret
jno
mov
cmpsb
out
jl
sbb
lods
repnz
mov
insb
stos
outsl
shrl
or
out
mov
push
mov
popf
stos
mov
rcrl
int3
jbe
push
mov
inc
aaa
ljmp
mov
das
fistpll
mov
push
pop
stc
setge
push
fwait
jmp
inc
cmp
fmul
or
call
or
sbb
push
roll
mov
gs
fisttpll
pushf
repz
ljmp
es
and
loopne
xchg
xchg
inc
or
mov
nop
sbb
scas
pop
cltd
or
cmp
jmp
and
popf
inc
js
xor
shrl
arpl
out
push
movsb
add
xchg
pop
flds
mov
aam
dec
out
into
and
clc
fs
jb
inc
cmp
loop
xchg
movsl
ja
push
push
es
fstps
add
aaa
repz
icebp
mov
mov
adc
roll
xchg
aas
ja
mov
dec
cmp
or
cmpl
iret
or
pop
mov
dec
int3
jns
or
in
sahf
push
mov
pop
fwait
xor
xor
lret
sbbl
jle
inc
inc
test
nop
mov
inc
lea
jmp
mov
lods
sub
into
cmp
aam
push
push
mov
sbb
arpl
inc
xor
add
dec
xor
jg
sub
adc
and
mov
inc
test
dec
int3
xchg
test
push
pop
ret
je
and
call
les
test
pop
mov
lcall
mov
ret
jmp
test
xor
fsts
cmp
in
and
pop
test
fsubl
pop
divb
sahf
test
sahf
dec
xchg
in
outsl
bound
insb
mov
cmp
lock
jl
and
hlt
sub
sbb
jl
lret
pop
fildll
test
test
testl
ja
ja
xor
push
inc
rclb
cmp
movb
cmp
mov
xlat
xchg
jns
stc
push
mov
xchg
jne
mov
xor
pop
call
sub
lcall
jne
outsb
dec
cmp
push
xlat
das
push
add
out
jae
ret
inc
pushf
out
push
out
movb
xchg
nop
cmp
cmc
cs
mov
or
test
cmpsb
cli
dec
fsubr
add
in
lds
mov
icebp
xor
push
stc
push
pop
test
push
dec
repnz
xor
cmp
jmp
jbe
scas
mov
js
outsl
addr16
in
ret
out
popa
lahf
push
xchg
aad
mov
outsb
mov
je
lret
add
in
es
lea
aam
mov
inc
pop
push
mov
push
mov
pusha
mov
xorl
and
leave
jno
inc
dec
sub
ret
inc
rorb
mov
xor
ss
pop
test
adc
mov
and
push
mov
xlat
insl
jnp
or
adc
fbld
jnp
or
jbe
adc
mov
and
cld
iret
ficoml
jl
aas
cli
push
bnd
rclb
stc
std
jmp
or
xchg
jno
repz
mov
or
mov
loop
xchg
pop
sti
add
mov
aad
repz
jecxz
loopne
in
lods
daa
push
aas
mov
jmp
hlt
mov
xor
lcall
mov
lret
outsb
add
in
xor
outsb
cmpl
cwtl
imul
pop
out
mov
and
out
popf
out
mov
jo
in
clc
icebp
inc
inc
cmp
stc
addr16
inc
lods
shlb
fdivrs
cli
stc
test
ja
and
adc
jl
push
ficompl
ja
sbb
fdiv
fidivrl
sbb
and
cmp
jo
fstp
mov
sub
xor
shrl
xchg
or
inc
enter
push
mov
sub
into
dec
inc
popa
fisubrs
mov
aas
leave
mov
xor
test
push
test
jle
xor
dec
mov
xor
cmp
pop
sub
jo
pop
jne
test
mov
dec
mov
and
mov
pop
fwait
push
inc
in
imul
add
add
sbb
mov
and
rol
and
fbld
stos
cli
nop
or
inc
sarl
lods
scas
xor
push
rorb
repz
mov
xchg
mov
cmpsb
cmpsb
or
jl
loope
adc
addr16
push
add
sbb
mov
lods
xor
outsl
shlb
cmp
mov
popf
or
fdivrp
int
jmp
cmc
leave
mov
fistpll
out
clc
insl
jbe
cwtl
add
add
shrb
mov
cmp
xor
leave
cmp
xchg
xchg
aad
add
std
hlt
mov
insl
dec
nop
fdivrp
ja
mov
xchg
push
clc
lret
and
dec
jp
dec
fnstenv
fldenv
or
data16
dec
lock
dec
lods
out
fsubrl
jl
push
in
jbe
push
les
push
pop
popf
cmpsl
mov
xchg
jg
pop
mov
xor
and
aad
jno
jle
mov
popa
dec
jo
fsubrl
in
mov
push
mov
inc
in
test
cmp
iret
xchg
pop
aam
jns
mov
insl
mov
sti
cltd
je
sarb
jecxz
pop
xchg
ret
enter
arpl
jp
test
cmovbe
sahf
nop
sarb
into
stc
pop
je
pop
push
repnz
pushf
xchg
push
jmp
dec
or
js
les
aas
lahf
hlt
cltd
jo
sbb
ljmp
mov
lahf
cmpsl
pushf
enter
lods
mov
jg
add
and
test
into
sbb
cltd
xchg
je
push
sbb
in
dec
fwait
dec
cmp
dec
cltd
sub
ja
scas
mov
push
sub
push
dec
mov
mov
push
cmp
subl
push
dec
dec
push
mov
in
push
mov
add
xchg
mov
fcompl
roll
mov
fs
xlat
sahf
push
fwait
repz
cmpsb
sbb
nop
andb
add
add
jecxz
add
push
dec
mov
cmp
cltd
inc
sub
pop
lods
mov
out
fdivrs
sbb
lods
fnstcw
and
stos
imul
mov
cltd
loope
lods
pop
mov
aaa
shr
fnsave
pop
xchg
aam
mov
sub
mov
xor
cmp
and
into
and
mov
inc
dec
and
fldcw
aam
sbb
jg
jae
pop
push
repnz
jmp
inc
in
lret
fldt
pusha
cltd
call
negl
mov
add
ret
dec
ja
mov
and
lock
popf
in
outsl
push
ret
into
sbb
icebp
aad
cmp
xchg
rolb
movsb
inc
in
jg
inc
xchg
sub
pusha
std
outsl
pusha
movb
mov
popf
inc
sti
bound
imul
sub
mov
int
pop
xlat
cmpsb
push
push
fcoml
scas
insl
xchg
test
or
int
rcll
cmp
sbb
mov
mov
lahf
push
dec
jbe
js
rcrl
mov
ljmp
out
dec
push
push
sub
outsb
pop
xor
insl
popa
shlb
jg
fs
mov
rcl
and
jb
sbb
fstl
ror
repz
arpl
inc
cs
dec
popa
jl
fldt
int
sahf
mov
out
inc
es
mov
jno
ljmp
or
inc
push
or
mov
mov
adc
push
aaa
fisubrl
xchg
cmp
sub
pop
sub
jbe
std
dec
fisttpll
shlb
jae
mov
inc
pop
sahf
dec
sbb
ret
shll
mov
xchg
nop
rcl
rolb
pop
xlat
aaa
sbb
xchg
add
jo
dec
xchg
ret
enter
movsl
or
push
jbe
lahf
or
dec
pop
mov
mov
dec
lret
xchg
jbe
ja
inc
sarl
xchg
mov
ret
cmpsl
xor
cld
jae
lock
xchg
add
xchg
mov
mov
xor
cmp
adc
adcb
xlat
stc
outsl
cmp
add
xchg
and
pop
mov
jb
call
mov
jg
inc
fnsave
or
sbb
lods
cmp
sub
mov
jbe
dec
std
repz
movsb
xchg
pop
push
inc
jo
fbld
cld
push
push
addl
ja
fidivs
jge
cwtl
clc
ds
in
mov
rolb
mov
enter
ja
call
adc
jge
movsb
inc
lods
int3
dec
stos
jge
mov
pop
fwait
and
ja
outsl
push
and
repnz
mov
add
out
leave
stos
add
cmp
or
add
outsb
scas
enter
fcompl
push
ficoml
adcb
popa
aad
inc
jno
shr
and
pop
mov
out
sbb
push
dec
mov
je
or
inc
and
adc
repz
add
xchg
sub
lret
and
fldl
push
xchg
inc
stc
mov
aad
bnd
out
push
cmp
xor
xor
inc
xchg
mov
fimull
mov
jecxz
jae
push
inc
inc
mov
ret
jnp
cmp
dec
jmp
lcall
push
or
jno
xor
subl
mov
scas
and
fwait
jmp
sub
pop
or
cltd
fistl
xor
mov
lods
xchg
mov
cmp
xor
xchg
imul
pop
mov
imul
scas
xchg
sarb
jo
xor
inc
adc
xchg
and
cli
insb
mov
jp
std
popf
or
addr16
xchg
pop
shl
pop
arpl
cmp
mov
xchg
jle
sub
push
decl
into
jg
or
jmp
mov
inc
or
dec
jae
mov
sub
and
cmp
mov
mov
mov
test
xchg
fwait
adc
test
aas
lock
pop
jle
mov
adc
inc
mov
add
cld
push
imul
and
daa
or
mov
fst
mov
push
stos
pushl
or
int
lods
dec
jno
sbb
call
sub
cmp
pusha
mov
add
std
pop
or
in
pop
jbe
cmpsl
inc
shll
pop
dec
sbbb
call
shl
ret
mov
xchg
pop
cltd
movsb
dec
inc
push
hlt
scas
inc
cmpsl
dec
sub
sahf
dec
sbb
adc
xor
jle
xor
and
inc
insl
push
repz
testl
mov
in
stos
and
ret
int
dec
jge
cltd
hlt
pop
push
dec
shll
add
movsl
sbb
xor
and
push
mov
jp
mov
lds
jp
repz
lods
jecxz
icebp
adc
dec
lods
mov
xor
push
dec
pop
jge
push
out
xchg
fwait
lock
jp
fwait
fildl
lcall
es
aas
inc
mov
das
dec
dec
ljmp
ja
test
jl
and
clc
fs
aaa
fwait
dec
sti
push
out
call
adc
sbb
sub
daa
rcrb
fs
jmp
inc
or
call
pop
jne
fsts
cmpsl
mov
push
in
jle
cld
mov
jecxz
mov
mov
mov
mov
add
fwait
notl
bound
mov
dec
fisubs
ja
add
push
rcrl
mov
jecxz
addr16
adc
sub
adc
leave
loope
cli
out
gs
inc
pop
lret
push
inc
cmc
jmp
ffreep
and
leave
gs
lret
aad
flds
sbb
xchg
insl
xor
sub
outsb
lret
and
leave
xlat
lcall
push
nop
push
and
sahf
push
or
and
hlt
test
iret
xchg
xor
loop
int3
fadd
jmp
scas
push
mov
inc
and
dec
mov
in
lock
jno
shlb
sbb
pop
mov
stos
or
loope
std
stos
outsl
sbbb
loopne
dec
add
pop
dec
inc
jle
mov
mov
iret
lahf
movsb
fimull
es
dec
sahf
test
sbb
out
push
pop
js
jp
mov
test
mov
sub
subb
push
and
sti
adc
push
lret
jns
cmp
jns
pushf
daa
mov
push
xchg
not
pop
inc
std
push
adc
jge
inc
bound
push
and
stc
mov
jns
js
sbb
mov
xchg
arpl
inc
xchg
adc
nop
or
cltd
dec
mov
arpl
dec
xchg
mov
pop
mov
stos
xchg
cmp
lret
stos
arpl
clc
fistl
jecxz
shrb
xchg
pusha
inc
incb
jae
mov
sbb
or
data16
cmc
scas
cmp
cmpsl
jbe
fiadds
or
jne
cmp
mov
and
dec
leave
and
call
mov
dec
xor
jmp
sbb
xchg
loop
cwtl
sbb
stc
clc
jno
inc
or
mov
dec
ds
insb
sahf
bound
mov
rorl
jle
movsb
adc
pushl
mov
aas
fdivs
loope
pop
sbb
mov
pop
mov
or
test
popf
push
or
movb
loopne
out
push
push
outsl
sub
stc
and
popf
adc
out
aaa
fbstp
pop
dec
rcrl
out
sti
imul
mov
arpl
push
cmp
fs
cmp
imul
mov
movsl
and
rorb
fsts
dec
push
mov
xchg
push
loopne
add
dec
clc
popa
pcmpgtb
xchg
insl
and
add
pop
in
add
inc
xchg
dec
aam
cld
lea
mov
sub
xlat
imul
xor
scas
pusha
mov
das
dec
fwait
jl
fisttpll
cwtl
mov
push
and
mov
push
and
lods
into
arpl
cmp
xchg
fdivrp
jne
xor
mov
or
dec
fwait
repnz
push
cmp
inc
jg
xor
mov
aas
push
dec
xchg
jmp
dec
push
cltd
and
gs
out
and
adc
dec
xchg
pop
sbb
cmpsl
cmp
push
test
sbb
lods
ss
repz
xchg
pop
data16
push
xlat
dec
leave
lods
mov
jge
iret
mov
aaa
jle
wbinvd
test
popf
cmp
mov
pop
and
mov
ret
xchg
mov
mov
mov
lcall
sub
in
adc
int
or
fsubrp
aam
inc
and
fs
sahf
ja
andl
mov
cmpsl
mov
mov
cmp
mov
cmp
mov
imul
mov
pop
shrl
je
pop
ror
dec
cmp
test
sahf
loope
xor
mov
fdiv
cmp
fldt
in
test
inc
add
es
les
fldcw
and
push
test
dec
sbb
out
into
inc
pushl
add
and
aad
popa
fldcw
daa
mov
dec
cmp
int
pop
lahf
sub
pop
xor
push
push
fidivl
xchg
ss
xchg
push
in
pop
inc
aad
xlat
das
adc
lcall
or
mov
pop
xor
cltd
or
or
fsubrl
or
lds
insb
clc
sahf
mov
sahf
add
xchg
fmull
clc
lahf
jl
xor
jg
dec
push
sbb
xchg
sub
jnp
mov
pop
inc
sub
cmp
sub
dec
push
les
xchg
cwtl
xchg
add
jg
adc
dec
fdivrs
xchg
mov
outsl
jno
lea
fcos
test
xchg
sbb
jns
aaa
fiadds
pop
shl
call
xchg
out
cmp
fucom
pop
fwait
cld
es
mov
rol
mov
xor
call
lcall
jns
es
fdivrs
xlat
add
cmpsb
dec
fsts
xlat
mov
adc
lret
pop
jae
imul
pop
roll
pop
not
jp
stos
xchg
fisttpl
test
jb
pop
das
fcmovu
cmp
mov
test
xor
ret
push
mov
inc
negb
pop
dec
mov
xchg
notb
loopne
dec
andb
pop
xor
mov
jecxz
or
sbb
fmul
aad
pop
add
das
shll
outsb
cmp
movsl
add
mov
or
inc
add
insb
mov
push
sbbl
dec
cmpb
jne
sbb
daa
xchg
xor
shrl
jo
orl
lret
and
imull
imul
or
mov
pop
shl
pop
add
out
inc
es
push
jns
lret
das
ds
dec
add
xchg
sbb
push
enter
pop
xchg
xor
imul
popl
pop
add
sub
pop
negb
outsl
xor
fbld
arpl
lds
pop
dec
fistpll
pushf
dec
xchg
das
sbb
add
sub
enter
inc
pop
mov
int3
js
nop
imul
inc
mov
jle
adc
maxps
adc
jg
and
testb
xor
add
sbb
cli
push
and
xchg
jle
cmp
movsb
lea
sahf
std
add
push
dec
lods
inc
leave
cmc
cmp
shlb
movsb
and
popf
sub
dec
lds
mov
adc
arpl
sahf
pop
xor
pushf
or
jbe
fsubrp
shll
insl
sahf
and
push
xchg
movsb
insb
inc
inc
pop
mov
xchg
ret
data16
inc
sub
inc
xchg
cmpsb
mov
inc
jg
xchg
cmp
nop
or
push
xor
leave
icebp
jmp
mov
hlt
loopne
test
jbe
pushf
inc
xchg
aam
ret
bound
cltd
add
push
popa
dec
inc
jns
pop
roll
ret
xor
mov
xchg
lcall
pushf
sub
push
sahf
jecxz
inc
jns
mov
sbb
lock
inc
pop
shrb
scas
xor
adc
jbe
mov
outsl
in
shll
pop
je
mov
repnz
dec
fsubrl
loop
outsl
jp
jge
xchg
mov
jns
add
mov
insl
sub
jmp
jno
movsb
fdivrs
fidivl
lahf
mov
scas
sub
and
cli
jl
dec
inc
add
push
xchg
lea
dec
scas
push
dec
in
mov
add
lahf
push
mov
sbb
adc
sub
dec
jne
fucomip
loop
faddl
cltd
lock
jnp
adc
mov
out
pop
out
inc
and
inc
icebp
cmp
popf
enter
rcrl
stc
or
jg
sub
fnstcw
push
pop
fimuls
stc
cmp
fidivrl
sti
jns
shll
xor
xchg
dec
ds
in
jbe
in
lea
mov
push
es
xchg
xchg
shll
sbb
xchg
bound
jl
les
faddl
mov
fwait
lods
daa
cmpsl
iret
dec
pop
aam
push
mov
test
jle
pushf
and
out
aam
xchg
hlt
sbb
dec
push
test
sahf
cmp
outsl
adc
imul
test
hlt
pop
jge
mov
push
and
jecxz
shll
or
enter
mov
mov
cmpsb
outsb
cmp
sbb
inc
test
loop
sub
push
out
fstl
ret
mov
into
pop
lock
incl
or
fmull
fbstp
mov
pop
mov
stos
call
scas
sarl
dec
pop
addr16
and
lret
cmp
dec
mov
stos
mov
inc
and
es
xchg
sbb
std
mov
nop
xor
jp
mov
stos
int
fisubl
add
loope
les
cli
mov
stc
lds
in
mov
dec
push
outsb
mov
loop
add
sbb
outsb
or
aam
cs
lahf
clc
clc
xor
jle
dec
jle
dec
inc
int3
pop
loopne
add
jb
xor
mov
adc
mov
call
xor
aaa
inc
das
or
xchg
jae
jmp
sub
fadd
mov
int
iret
es
pop
sahf
inc
mov
push
pop
fildll
mulb
out
scas
mov
ljmp
sbb
add
jg
jge
cmp
out
jb
jle
aam
xchg
mov
ljmp
je
dec
stc
mov
xchg
mov
cmp
in
mov
add
cld
scas
and
xchg
cmp
popa
or
fucom
repz
jno
out
stos
mov
jns
rcl
les
jae
hlt
dec
sub
sti
out
fwait
jns
and
aaa
mov
jp
ds
lods
scas
leave
imul
movsb
ret
sarl
sub
push
sbb
inc
lret
idivb
mov
pop
push
in
clc
sbb
repz
hlt
rcl
mov
mov
daa
mov
nop
xor
call
mov
adc
cli
sbb
test
mov
fcoms
push
xchg
jnp
sbb
jecxz
xchg
adcb
or
jmp
jg
mov
xor
movsb
je
out
repnz
sbb
rcrl
clc
in
inc
leave
xchg
sub
jnp
or
mov
cwtl
and
in
jae
in
and
inc
stos
inc
ret
xchg
into
fisubrs
dec
mov
sub
pop
ljmp
jle
pop
push
dec
loopne
jl
jns
push
inc
shl
mov
sub
mov
lods
movsb
jae
xor
std
jae
xor
ret
js
lret
xor
or
nop
push
insl
int3
cmp
add
push
adc
pop
xor
xor
mov
into
jg
mov
fcompl
mov
inc
push
ds
jae
imul
in
repnz
in
mov
loop
pop
int3
scas
push
insb
pop
push
pop
int3
mov
cmp
jmp
loope
dec
std
sbb
mov
xchg
ljmp
add
inc
int3
fdivr
push
repnz
xchg
ficomps
push
xor
pop
xor
ja
mov
pop
icebp
add
neg
rcll
inc
stc
loope
pop
push
lret
imul
lret
arpl
pop
xchg
mov
add
fadds
jmp
mov
cmp
xchg
cwtl
jno
testb
push
lea
push
test
jle
jns
mov
xchg
xor
xchg
ret
iret
cld
push
mov
pop
sbb
pusha
cmpsl
adcl
mov
mov
mov
daa
mov
mov
pop
and
sub
in
mov
jl
push
repnz
les
cmp
jge
xor
decl
mov
mov
inc
int3
add
iret
cmp
adc
inc
mov
repz
or
cmp
sbb
sub
mov
test
lret
stos
ficompl
mov
jecxz
sbb
dec
in
fdivrs
mov
cmpsl
xor
add
data16
mov
testl
icebp
ss
jns
jmp
xor
loope
shlb
insl
outsb
sbb
test
push
push
jns
daa
push
adc
dec
scas
cmp
jo
jne
cmovo
mov
out
xorb
mov
fnstcw
cli
mov
pop
mov
dec
out
jle
mov
fisubrs
fucom
xchg
xor
insl
mov
jmp
lods
mov
inc
andl
shll
sbb
xor
xchg
fldl
push
rolb
inc
mov
mov
xor
in
inc
mov
rorl
jl
cmp
mov
cmp
stos
xchg
sti
inc
mov
call
or
sbb
orl
xorl
int
cmp
adc
mov
loope
stos
mov
adc
pushf
push
xor
or
fsub
outsb
jmp
dec
jo
jl
fistpll
push
cmp
jg
movsb
jae
rorl
movsb
add
nop
lods
notl
ret
icebp
imul
mov
in
mov
lcall
xor
cli
out
loopne
jecxz
push
jo
inc
mov
test
sub
and
sub
or
mov
arpl
gs
repnz
push
inc
pop
dec
mov
pop
push
pushf
fisubrl
push
mov
sbb
aaa
sbb
mov
cmc
fwait
loop
popl
pop
pusha
lret
adc
inc
sbb
test
sub
js
enter
pop
icebp
aaa
int3
xlat
xor
xchg
sbb
jo
jmp
out
data16
out
and
pushf
jns
rolb
lock
cli
xor
push
lods
cld
dec
jbe
int
js
and
les
or
xlat
xchg
xchg
imul
movsb
flds
popf
cmp
aam
fs
sti
add
out
xor
mov
add
rolb
mov
gs
pushf
sbb
int
jae
mov
sbb
scas
je
xchg
loope
pushf
rcll
pop
push
adc
in
jns
xchg
cmpsb
jg
dec
add
and
jl
ss
inc
jg
lds
inc
dec
clc
pushf
popa
das
rclb
push
pop
pop
adc
fstpt
fdivrl
out
popa
pop
in
fmuls
xchg
push
jno
rol
aad
xor
shlb
test
mov
push
stos
inc
push
add
mov
loopne
and
stos
pop
push
aam
mov
insb
out
jge
dec
ret
mov
and
movl
cmp
std
fldl
jp
mov
adc
adcl
and
movsb
lea
pop
push
mov
or
sbb
jge
in
aas
jg
repz
sbb
icebp
dec
out
ds
add
ds
dec
jle
pop
mov
fsubs
xor
in
mov
fstpt
sub
jns
es
enter
lahf
jg
and
inc
fdivrl
cmp
addr16
call
mov
sbb
pop
and
lock
cmp
frstor
test
jl
mov
out
ss
or
sub
in
dec
addl
cwtl
xor
cmp
push
mov
push
or
add
loop
loop
jae
lods
push
andb
repz
xchg
xchg
push
cmp
pop
mov
xor
fcoml
shrb
cmp
cmp
mov
scas
leave
push
and
shll
add
jne
int3
jge
imul
cmp
js
jecxz
test
mov
insl
mov
mov
inc
pop
movsb
pop
lods
or
mov
pop
incl
dec
rorb
mov
out
dec
mov
sub
adc
sub
mov
push
cs
jns
sub
push
aad
repnz
pushf
dec
stos
movsb
pop
int3
stos
mov
push
dec
daa
xor
addr16
addr16
push
sahf
iret
je
push
or
cmp
and
inc
mov
inc
mov
and
mov
hlt
mov
mov
pop
and
addr16
in
sub
mov
std
adc
xor
jns
test
dec
imul
push
cmp
jecxz
cmpsb
fxch
xorb
ja
cmpsl
cmp
data16
and
fwait
mov
jno
roll
je
inc
push
sbb
adc
into
sub
pop
push
xchg
push
je
test
rorl
lds
or
lret
jae
stc
adc
jno
xchg
jmp
ss
mov
scas
xchg
pop
pushf
cmc
cmp
pop
inc
dec
sbb
inc
add
cmp
pop
lock
fmul
mov
xor
shrl
das
add
lods
out
gs
or
and
insb
fcmove
aad
or
out
repnz
in
in
cmp
sbb
mov
sub
inc
jb
pop
aad
lahf
jg
in
pop
add
out
lods
dec
jecxz
lds
mov
popa
sarb
add
cli
aam
fadds
push
and
add
sbb
jns
mov
jge
push
pop
aas
test
jg
movsl
iret
bound
mov
ljmp
pusha
mov
jo
aad
push
ss
sbb
pop
dec
xor
mov
lock
push
aam
dec
imul
sbb
jmp
sbb
add
and
pop
jecxz
sub
xchg
mov
fsubr
dec
or
outsl
call
ja
notl
hlt
xor
lods
pop
mov
fwait
push
inc
mov
xchg
jp
js
add
ficompl
insb
adc
mov
inc
popa
pop
in
mov
cmp
add
mov
jae
mov
fdivl
xchg
inc
into
fmull
jmp
fcompl
lds
mov
cmp
sbb
push
sarl
push
in
addr16
adc
lods
leave
movsb
in
fmuls
mov
sbb
jae
pop
setbe
mov
int3
gs
mov
rolb
xor
subb
cmp
and
rcll
sbb
adc
inc
cmpsb
pop
xchg
or
dec
mov
out
lock
push
adc
xor
shrb
push
or
push
fnstcw
es
sbb
stos
push
lds
xchg
push
aam
or
out
or
pop
jno
mov
daa
movsl
push
dec
ret
push
decb
sub
fsts
xor
test
into
das
pushf
stos
pusha
and
push
mov
popf
mov
sub
orl
leave
stc
shr
sbb
pop
lcall
xor
sbb
in
punpckhdq
and
and
insl
stos
test
sbb
xor
pop
mov
jne
fstpl
test
pop
xor
pop
cmc
mov
aam
ret
clc
inc
jbe
mov
jnp
pop
and
sbb
repnz
add
loope
ljmp
sbb
jg
sbb
dec
dec
ret
cs
mov
imul
xchg
out
sub
cmp
mov
stos
incb
pop
xchg
pushf
cmc
mov
xor
out
incl
stos
loop
ja
mov
push
push
adc
push
xor
mov
sbb
arpl
into
pop
hlt
dec
mov
jg
jo
arpl
push
fcmovu
jp
repz
aam
xchg
cmp
in
xchg
xchg
mov
cltd
push
inc
pop
mov
iret
mov
shll
pusha
xor
out
test
nop
jae
lods
sub
jg
pushl
xchg
adc
inc
out
sbb
mov
dec
cmp
adc
testb
test
es
out
imul
add
sbbl
aam
ljmp
sbb
outsl
inc
dec
leave
xchg
xchg
out
mov
pop
mov
orl
scas
int
adc
mov
jbe
scas
test
adc
cmp
loopne
xchg
sub
icebp
push
aad
fmull
jnp
xor
aaa
cmpb
out
pop
movsl
fisubrs
mov
test
and
xorl
out
pop
xlat
lods
insb
mov
jge
shrb
mov
cli
bound
add
clc
or
xor
xchg
cmc
ret
rorl
scas
mov
pusha
fnstsw
ret
mov
outsl
sbb
sbb
jo
or
ds
leave
sti
xor
inc
push
add
xlat
int
xor
cmc
push
jl
dec
cmp
fwait
leave
div
inc
cmp
jecxz
mov
aam
push
shr
aam
jmp
shrb
push
mov
xchg
sahf
mov
pop
pop
mov
mov
sbb
jmp
shr
jp
xchg
repz
aaa
inc
or
cmpsl
xor
xchg
je
filds
xchg
push
pop
or
jnp
shrl
stos
jne
pop
push
add
js
push
sahf
outsb
adc
lock
std
sbb
mov
cs
jne
jecxz
mov
sbb
loop
repz
add
js
dec
imul
xchg
push
xchg
mov
inc
sub
pop
or
or
cmpsl
dec
rcrw
aam
adcb
push
sarl
repz
loopne
cmc
jne
and
test
cmp
sub
mov
aad
clc
jl
sbb
or
inc
push
or
cli
andl
xlat
sub
dec
mov
mov
out
mov
dec
test
xlat
lahf
aas
lds
mov
out
pop
aam
out
repz
jbe
movsb
and
add
ret
mov
cmp
pop
mov
aaa
mov
xchg
ret
sbb
mov
incb
pushf
clc
inc
test
repz
hlt
add
or
cmp
imul
call
mov
mov
les
and
mov
or
jmp
fucom
nop
mov
cltd
push
pop
aad
push
repnz
rcll
cmp
mov
xchg
clc
in
out
je
int3
sbb
test
sbb
mov
cmp
loope
fdivl
sar
bound
scas
cld
lret
nop
dec
jmp
push
into
aad
sub
xor
xchg
cmpsb
ret
ja
dec
jns
jae
aam
fucomp
xchg
fildl
push
in
and
pop
jae
jmp
call
pop
jecxz
lret
call
repz
dec
test
sub
and
mov
or
push
cmp
call
sbb
in
in
cmp
loope
stc
push
xchg
in
imul
outsl
test
mov
divl
mov
shll
sti
ficoms
push
xchg
dec
jg
inc
push
inc
pop
jmp
add
movsl
push
stc
pop
and
push
and
outsl
xor
mov
je
jge
xchg
push
pop
orl
cmpsl
test
and
rcrl
mov
xor
xchg
notl
insb
cmpsb
push
pop
push
mov
std
subb
cmp
sub
jl
mov
jae
push
fwait
jno
notb
in
dec
mov
mov
mov
movsl
testb
mov
test
jg
int
fnsave
mov
sbb
jge
mov
push
xor
ficoms
loope
add
or
fwait
popf
adc
mov
xchg
mov
push
sbb
or
lret
in
scas
mov
mov
jbe
mov
mov
and
inc
and
hlt
or
sub
lds
lds
test
popa
mov
push
cmp
movsl
push
jmp
insl
mov
xchg
insb
xchg
rcll
cmp
leave
cmp
mov
fdivs
inc
mov
shll
jae
pop
loop
es
test
mov
fisubrl
cmp
pop
aas
sub
xor
scas
sub
pushl
ljmp
xor
sbb
sahf
int
das
cltd
jb
add
sbb
pop
push
rclb
je
mov
push
xchg
pop
int
xchg
jmp
inc
shll
out
std
outsl
pop
icebp
addr16
subl
or
pop
mov
jo
mov
jbe
adc
jmp
daa
push
fwait
arpl
icebp
lock
jle
or
sbb
or
sbb
dec
xor
fs
fs
mov
je
mov
push
xor
fnstcw
test
xor
jae
sbb
sbb
fnsave
sbb
icebp
push
pop
daa
test
lcall
sub
psubusw
xchg
mov
xor
movsl
xchg
and
inc
jnp
subb
sbb
jecxz
mov
jae
mov
mov
add
mov
pop
nop
sti
in
mov
lret
ret
rcrb
push
imulb
push
insb
sbb
enter
scas
or
xchg
loop
mov
fisubrl
pop
jns
js
jp
aaa
ror
cmp
cmc
movsb
xchg
not
jo
xor
outsl
sbb
lods
in
mov
push
sbb
cmp
test
mov
inc
fs
jle
loopne
outsb
pop
loop
pop
inc
pop
test
nop
outsl
dec
cs
push
sub
popa
xor
jmp
and
sahf
sbb
dec
pop
pusha
pushf
or
cltd
cmp
mov
pop
dec
xchg
xchg
sbb
scas
cmpl
jp
sti
mov
test
clc
testb
mov
fadd
mov
dec
pop
fidivrl
add
push
mov
cs
jmp
adc
sbb
push
sub
xor
pop
mull
mov
mov
lea
imul
push
jnp
pop
mov
sub
mov
gs
xor
cmp
push
ja
movl
xor
sbb
push
dec
fcmove
loop
jns
xchg
xchg
mov
sub
pop
pop
popa
lahf
inc
mov
stos
pop
sbb
sysenter
into
and
pop
push
pop
adc
imul
add
and
inc
imulb
test
fs
xchg
loop
pop
ficoms
mov
je
lea
jle
test
xlat
pop
pushf
xor
or
jo
pop
jmp
xor
ja
gs
xchg
out
mov
setno
push
cmc
sti
aam
cmpsl
jecxz
sahf
jo
push
jl
call
mov
xchg
fnstenv
aam
push
test
int3
xlat
xchg
adc
inc
mov
dec
cli
cmp
pop
stc
push
and
stc
xchg
std
pop
pop
inc
add
add
and
or
xor
dec
or
test
in
pop
dec
int3
xchg
enter
mov
mov
test
cld
into
movsl
in
sahf
repz
test
sbb
cmp
leave
dec
mov
insb
jle
dec
and
mov
inc
gs
das
adc
and
call
into
sub
mov
idivb
push
popa
cli
push
or
aam
inc
in
jns
fidivl
movsb
fisubrs
jno
lea
cltd
jge
jecxz
in
cmp
lods
jno,pt
shll
xor
add
inc
xor
lds
mov
pushl
int3
ds
fwait
cmpsl
cmc
sar
push
inc
mov
leave
jns
xchg
pop
xchg
mov
std
cltd
jg
add
aas
mov
cmp
jl
pop
push
push
or
xchg
jle
pushf
push
jmp
js
inc
iret
sub
das
call
mov
dec
xor
data16
rcr
push
gs
add
sbb
xor
push
addr16
mov
sbb
addr16
pop
inc
dec
enter
in
mov
hlt
adc
or
js
push
xchg
cwtl
adc
jl
pop
aas
mov
xor
cs
bound
gs
stos
xchg
out
bound
jmp
sub
xchg
push
jae
in
adc
mov
xchg
sbb
rclb
jns
or
and
xchg
push
and
mov
pushf
inc
jns
ret
push
int
push
sub
and
mov
notb
push
add
hlt
mov
cmp
shll
out
pushf
xor
sub
sbb
cmp
and
test
xchg
push
push
inc
pop
rcrl
aad
cmp
fst
ficoml
dec
push
add
mov
lret
and
enter
adc
push
xchg
lahf
push
dec
mov
pusha
pusha
cmpsl
sbb
or
jb
clc
movsl
sub
xorl
popf
cmp
mov
mov
inc
out
mov
lods
pop
int3
lods
adc
pop
rcll
and
cmpl
xor
or
ffreep
xlat
sub
sbb
lods
push
xchg
ret
jp
mov
add
pusha
pop
jmp
test
in
lahf
sbb
ret
cmpsl
cmp
lock
sahf
scas
mov
dec
sbb
adc
sub
or
jb
jnp
mov
mov
add
xchg
jns
mov
mov
push
incb
xchg
pop
gs
mov
mov
icebp
mov
int3
mov
addr16
sub
outsl
xchg
xor
add
mov
repnz
cmp
add
cmp
fwait
sub
lock
test
xor
and
pop
scas
mov
jnp
and
xchg
lcall
pusha
xor
syscall
adc
cmp
mov
fsubs
lcall
push
add
outsb
pop
mov
in
fiaddl
lret
sbb
mov
out
sbb
jl
pop
clc
sub
imul
or
xchg
jmp
cmp
mov
sbb
pop
mov
cmpsb
cwtl
and
lret
push
shlb
or
outsb
and
or
clc
popf
xchg
sbb
shrl
hlt
es
jnp
dec
sub
jnp
out
out
cwtl
loope
fildl
inc
fcompl
jl
sub
cld
xchg
adc
lret
pop
lea
cmp
arpl
dec
sbb
scas
mov
or
push
add
cli
mov
leave
inc
push
lret
sub
pop
lock
mov
hlt
sahf
mov
pushf
sub
xor
mov
loopne
std
xlat
ret
push
fstl
jno
dec
out
dec
push
cmp
adc
enter
dec
push
movsl
sub
es
je
or
outsl
dec
cmp
and
dec
mov
xchg
push
mov
dec
lahf
rcrl
cmpsb
pop
jle
loopw
dec
es
jns
adc
sbb
mov
jmp
jmp
add
divb
push
mov
lret
imul
pop
int3
das
fs
inc
sub
mov
or
push
sub
mov
data16
xor
sub
and
and
mov
mov
js
fldt
mov
mov
cltd
lods
push
filds
icebp
orl
jb
ficomps
test
pushf
xor
jle
add
shl
sub
int3
push
adc
jne
xchg
push
ret
mov
ss
and
lcall
pusha
or
xchg
mov
repz
or
mov
xchg
ja
jecxz
push
gs
sbb
fmull
mov
test
pop
arpl
adc
cmpsb
xor
xor
out
and
sarb
mov
push
mov
imul
pop
xor
mov
js
jle
jnp
jl
inc
jb
or
les
shll
out
jmp
outsb
jg
jae
arpl
xchg
xor
test
leave
hlt
fcomps
xor
stos
fwait
and
aaa
jnp
test
mov
fs
imul
xchg
xchg
jae
fiadds
divb
adc
push
repz
adc
jno
mov
push
or
sbb
jecxz
nop
jnp
sbb
cli
xor
rep
xor
jb
adc
sub
js
inc
lret
cmpsl
je
mov
loop
lods
sahf
stos
mov
and
pop
ret
test
popf
mov
sbb
addb
test
sub
or
cmp
mov
pop
or
mov
inc
dec
sub
lret
cmpsl
xchg
cpuid
stos
addr16
mov
lret
push
loop
push
shufps
cmp
inc
pop
add
leave
add
in
pop
or
inc
mov
repz
xchg
in
sahf
pusha
xchg
mov
or
jp
pop
pop
push
pop
bound
lods
iret
cmpsl
rol
jmp
add
or
mov
xor
test
mov
pusha
and
pop
ss
jb
mov
jne
xchg
push
mov
push
inc
movl
sbb
jl
mov
push
stc
clc
jg
lcall
inc
adc
clc
add
icebp
jbe
or
int3
xlat
andb
jnp
mov
call
push
adc
adc
stos
mov
frstor
fdiv
jl
movsb
sub
nop
and
pop
xor
nop
jg
mov
push
faddl
pop
int3
mov
jbe
pop
jnp
ja
ja
mov
aas
xchg
cmpsb
sbb
xor
jae
push
lahf
xchg
adcb
fdivl
outsb
pop
sub
jg
add
adc
test
fnstsw
fwait
add
lret
call
sbb
and
or
lret
sti
outsl
hlt
pop
repz
outsb
call
imul
roll
add
ja
dec
pop
push
addb
and
mov
lods
push
xchg
test
cs
repnz
and
inc
push
negl
rcrl
and
addr16
jle
adc
repz
es
xor
add
call
neg
jo
or
mov
mov
mov
inc
je
mov
cmp
cmpsl
jbe
imul
adc
mov
or
mov
dec
dec
popf
cld
gs
dec
or
xchg
push
sub
into
adc
popa
imul
sbb
lcall
in
fwait
clc
mov
mov
or
mov
add
dec
add
bnd
pop
jo
push
fwait
mov
xchg
jle
and
loope
inc
cs
cltd
pop
sbbb
and
test
divl
jmp
call
sbb
jmp
jmp
stc
jecxz
inc
or
das
rcrb
cwtl
lock
add
rcrl
sub
movsl
sarb
repz
lods
inc
xchg
popa
xchg
out
imul
dec
js
in
loope
lret
sub
in
imul
stos
aaa
jg
ja
and
pusha
jecxz,pt
jge
popa
jno
loopne
or
imul
subps
out
outsb
lret
loop
dec
fwait
xor
xor
inc
or
mov
enter
stos
test
or
jno
adc
push
push
push
sti
inc
sbb
add
push
es
mov
nop
jmp
call
pop
xchg
mov
gs
sbbl
sub
jnp
in
mov
push
mov
dec
fmull
mov
jecxz
lret
pop
sub
sbbb
cli
push
ja
movsb
mov
mov
out
cwtl
repz
insl
out
insb
out
push
test
into
lds
enter
xchg
loop
loope
in
lock
mov
jmp
sbb
lds
xor
adc
push
mov
jp
xchg
fsubp
push
shl
popa
mov
repz
dec
aad
jg
mov
scas
add
push
out
mov
xor
leave
pop
ret
das
mov
add
ret
shll
cmc
pop
movsl
popf
in
int3
jno
inc
jl
mov
test
loope
sub
lcall
inc
fmull
xor
mov
mov
mov
scas
mov
xor
add
sti
out
push
lret
push
adc
shlb
inc
ja
in
push
and
cmp
out
lret
subb
into
mov
in
fwait
sub
xor
ret
jmp
jl
in
push
mov
add
subl
push
in
lds
out
xor
fdivs
pushf
fs
push
push
call
dec
dec
dec
cmpsb
aas
and
cwtl
push
lods
loope
xlat
push
jne
aad
inc
into
add
sub
sti
in
sub
add
sub
xchg
int3
and
out
int3
invd
jns
aaa
sub
cwtl
pop
inc
int3
xchg
and
in
push
add
mov
push
aas
cli
sub
leave
mov
jp
add
mov
mov
lock
shll
inc
lods
dec
das
and
fstpl
neg
leave
movsl
jl
mov
arpl
repz
xor
mov
cmp
cwtl
add
cmp
or
mulb
ret
rol
push
mov
int3
int
cmc
loope
scas
call
int3
lret
mov
push
push
loopne
or
fimull
jp
xor
sub
lret
inc
fmull
lds
mov
in
sbb
sub
popf
lods
movsb
add
ja
or
rcr
shlb
pushf
sbb
insl
cmp
mov
mov
push
out
jne
push
push
mov
fs
aaa
lea
push
movsb
adc
stc
dec
shr
adc
mov
jp
xor
dec
movsb
fmul
outsl
pop
scas
pusha
orl
shl
enter
dec
jns
xchg
inc
inc
mov
call
repnz
js
sub
or
pop
repnz
sbb
or
stc
ja
out
sub
mov
sub
in
rorl
mov
iret
fidivs
iret
push
insb
rorb
mov
pop
xchg
jg
js
and
leave
inc
xchg
out
sub
inc
add
inc
mov
and
fadds
arpl
mov
xor
mov
pop
and
aam
or
pop
adc
inc
into
dec
addr16
arpl
adc
out
push
fcomp
mov
cs
outsb
jle
cmc
mov
push
cld
mov
or
test
cmpsl
daa
push
fildl
cli
insb
mov
fs
mov
xor
and
out
push
scas
add
and
xchg
in
inc
out
push
xchg
cmp
add
xchg
enter
jnp
pop
mov
mov
lods
scas
or
inc
std
sub
aad
xor
scas
loopne
push
aam
jno
fadds
xor
adc
sub
in
xor
pusha
in
sub
es
xor
lret
push
jle
aad
push
fwait
pop
dec
xor
lret
xchg
sbb
repz
jg
xor
pop
stos
mov
mov
add
cs
dec
insb
xlat
imul
lret
aaa
data16
aam
add
dec
fwait
cmp
lods
test
lods
aad
call
imul
clc
mov
mov
iret
outsb
cli
or
mov
sub
inc
fsubrs
dec
push
fistl
std
pop
mov
repz
mov
mov
push
out
mov
popf
push
scas
es
or
inc
jnp
mov
add
ficompl
xor
cmp
out
add
ret
cld
adc
repz
adc
and
adc
stc
sbb
int
iret
les
inc
xchg
lds
pop
lcall
aad
loope
jg
pop
loopne
dec
mov
jo
jle
pop
push
test
fwait
cmp
insl
scas
icebp
mov
mov
into
rcl
es
scas
inc
mov
mov
ret
push
push
stos
sbb
xor
push
and
cltd
mov
fcompl
rorb
subl
xorb
ret
hlt
or
jbe
mov
mov
cwtl
and
jl
shrb
call
add
popf
pop
pop
inc
xchg
jns,pt
jmp
mov
push
jnp
xchg
icebp
dec
jbe,pn
aam
pop
in
movl
inc
int3
sub
repnz
mov
pop
jmp
xchg
jl
sub
jge
insl
or
sub
fdivl
dec
fucompp
push
add
pushf
lock
mov
mov
andl
jecxz
mov
icebp
call
jns
lods
out
or
ret
xchg
and
jp
dec
or
int
xchg
add
hlt
and
mov
sub
adc
jne
loopne
jmp
adc
cmpsb
addr16
scas
sub
xchg
lock
sub
pop
sub
inc
xchg
inc
test
cmp
xorl
dec
sbb
repnz
mov
jbe
push
sbb
sub
sub
cli
mov
dec
pop
sub
jns
lahf
bnd
adc
mov
aas
in
mov
popf
push
push
jle
adc
adc
and
test
in
inc
jbe
and
insb
scas
dec
jno
dec
and
sbb
fists
mov
adc
jp
movsb
aas
xchg
mov
adc
sarl
ss
sub
pop
int
inc
jnp
inc
jo
fstps
cltd
fidivs
dec
lret
ds
fnstcw
add
jae
dec
ljmp
or
es
and
or
loope
push
dec
or
in
insb
lahf
mov
out
add
dec
insb
xchg
popf
rolb
in
inc
andb
lods
cmpsb
stos
lods
lock
and
cmc
pusha
sub
insb
mov
jmp
out
dec
cltd
arpl
and
jo
loopne
jb
mov
xchg
pop
mov
popl
xlat
jmp
popf
xor
rcrb
cwtl
pop
rclb
movd
out
arpl
mov
sub
fiaddl
lahf
in
xlat
dec
mov
js
push
jb
dec
lock
sbb
in
mov
into
sub
cmp
movsb
push
pop
fnstcw
jno
cwtl
ret
ss
ss
dec
sbbl
jae
sbb
mov
jmp
dec
std
loope
shl
out
inc
mov
daa
inc
mov
mov
into
dec
shl
fs
test
ds
adc
xchg
xor
das
push
fdivr
xor
mov
movsb
mov
push
fildll
xchg
xchg
mov
je
adc
mov
cmc
leave
lcall
jne
xorl
sbb
mov
movsb
pushf
fsubl
add
je
mov
or
pop
adc
xchg
dec
rol
sub
sar
pop
lret
bound
xchg
fcompl
xor
ss
push
mov
lods
jp
imul
bound
push
je
aad
pop
xchg
xlat
inc
push
flds
pusha
test
dec
sub
call
cmp
and
push
adc
shrb
dec
pop
and
or
scas
out
lcall
shlb
adc
push
imul
int
adc
outsb
add
ss
lods
cmp
int3
cld
xchg
out
jb
lahf
mov
xchg
cmp
imul
push
das
fs
xorl
mov
add
lods
sbb
xchg
dec
rcl
or
fisubrs
xor
lods
shrb
jge
xchg
notl
inc
mov
mov
daa
lods
insl
dec
adc
or
movsb
cmp
and
sti
or
mov
sbb
out
jp
inc
fdivl
jno
sbb
mov
mov
adc
stos
mov
jbe
add
pop
xor
test
rcll
in
adc
std
dec
addr16
adc
in
jl
xchg
fs
out
sbb
push
clc
aam
stc
enter
gs
test
jg
sub
pusha
out
pop
pop
rcrl
cwtl
nop
lahf
sub
push
jp
sub
push
sub
pop
in
sub
xchg
add
inc
fistl
shrb
and
sarl
jo
outsl
push
push
fbstp
rorl
dec
mov
inc
fwait
jb
in
push
jmp
shl
aas
movsb
jecxz
mov
into
fisubl
mov
cmpsl
sub
pop
jecxz
aaa
pop
inc
icebp
sbb
mov
sbb
sbb
add
call
loopne
loopne
fs
or
test
dec
jle
pop
mov
shl
xchg
leave
daa
cmp
xchg
mov
mov
xor
std
mov
iret
popa
adc
sub
mov
icebp
pusha
mov
fistps
inc
and
int3
imul
add
and
int3
cld
lea
sbb
sub
lret
push
lea
xchg
aaa
lahf
cmp
mov
sub
sub
pop
andb
inc
sbb
outsl
jbe
xchg
pop
or
and
jnp
jns
jbe
popa
cmp
push
fcomps
repnz
add
movsl
in
shr
push
ljmp
ja
loopne
inc
shrb
icebp
dec
xor
xor
jb
sub
fidivrl
pushf
xor
sub
add
mov
mov
pop
add
inc
sbb
test
std
out
jno
adc
mov
rorl
xchg
popa
jae
lods
add
call
mov
xorb
fs
adc
dec
nop
push
lea
into
push
jmp
mov
jp
xor
loope
in
xor
imul
mov
or
mov
jg
adc
fisubl
dec
mov
lods
jnp
or
inc
push
pop
ljmp
faddl
test
xchg
mov
adc
jae
ja
rorb
sbb
mov
sahf
push
or
mov
jge
or
das
lahf
imulb
mov
fbstp
daa
jl
push
mov
or
movsl
sub
in
test
mov
sarl
jno
out
cwtl
add
and
mov
loop
and
popa
add
jg
mov
ret
jne
add
push
pop
mov
cli
test
xchg
mov
and
mov
lock
fcmovnbe
insl
adc
dec
adc
insl
aad
cmpsb
divb
mov
insl
xchg
nop
icebp
lret
sbb
dec
add
jae
lock
ficompl
jl
into
sub
lret
into
jo
js
aas
scas
pop
cld
movsl
data16
imul
cmp
rorl
pop
adcb
sbb
push
fmull
je
cmp
cs
mov
cmp
xchg
cmp
aad
das
xchg
int
jne
xchg
cmc
inc
dec
lret
push
mov
fcomi
fisttps
insl
outsb
mov
lods
inc
mov
hlt
or
jge
clc
fiadds
ret
jmp
in
ds
adc
nop
ficomps
mov
jb
inc
mov
or
add
hlt
sub
mov
imul
add
xor
jns
xor
pop
std
mov
sbb
mov
out
daa
mov
cmp
dec
fidivrs
cli
cmpsb
lea
mov
sub
lea
shrb
xor
jmp
loopne
inc
sub
cmc
fnstcw
mov
mov
cmp
xchg
shll
stos
jae
mov
inc
or
mov
dec
sbb
adc
into
sub
push
mov
fsubrl
sbb
cwtl
mov
aas
sbb
mov
mov
pop
mov
inc
cmp
inc
mov
sar
push
test
fwait
in
arpl
out
add
and
cmp
push
mov
xorb
xor
jns
lret
cwtl
aam
pop
and
hlt
repnz
xor
xor
lods
xchg
stos
cmpsb
mov
cwtl
insl
mov
clc
in
mov
and
aad
jb
cld
mov
movsl
inc
pop
fbld
call
popa
sub
inc
push
sub
aaa
mov
pusha
adc
aaa
mov
mov
lods
dec
and
mov
dec
xor
jno
mov
and
or
jne
add
movsb
test
push
mov
add
sbb
sub
call
push
sub
cld
ljmp
jne
fwait
add
insb
jp
mov
pusha
inc
aas
stos
adc
push
call
push
cld
dec
dec
ljmp
or
mov
ljmp
cmp
xchg
add
push
push
xor
add
sub
and
and
cli
jp
fmuls
loope
adc
mov
pusha
fisubrs
outsl
movsb
hlt
popf
mov
sub
mov
addb
mov
mov
movsb
and
mov
ja
push
cltd
lcall
dec
icebp
popa
ja
dec
mov
cmp
loope
jmp
fbld
movsb
addr16
and
std
xor
push
or
lret
rcrb
push
cmc
inc
scas
in
pop
cld
lret
sub
pop
bound
inc
andl
fidivl
xchg
push
mov
mov
sub
repz
testl
scas
mov
push
ja
lahf
pop
cwtl
pop
movsb
nop
lret
gs
xor
xchg
cmpsb
aaa
fwait
adc
mov
leave
push
arpl
xchg
cmp
push
push
shlb
ret
cmp
int3
push
in
mov
in
cmp
jge
mov
cmpl
push
cmp
cld
pop
jne
rol
push
xchg
inc
cmpsb
push
mov
lock
add
test
push
xchg
dec
push
pushf
xchg
testl
or
dec
push
out
leave
test
and
aam
mov
scas
dec
stos
jno
sub
cld
pop
jo
ja
pushf
inc
lods
xchg
aad
sti
jns
add
sti
xor
adc
fmul
lfs
nop
and
push
inc
dec
or
lock
aas
xchg
ja
cmp
into
add
add
lahf
sbb
cmp
lds
aaa
lret
or
cltd
push
push
ret
adc
shlb
mov
std
js
mov
push
xor
xchg
fwait
xchg
in
popa
int3
sbb
roll
adc
mov
sti
push
xchg
mov
popf
mov
test
pop
add
pop
push
fsubl
cwtl
lcall
add
clc
sub
adc
jae
icebp
jae
dec
das
arpl
fldcw
mov
imul
cs
jl
stc
push
cmp
jno
cmpsb
pop
push
ds
adcb
mov
mov
sub
sbb
mov
jae
xor
and
push
adc
or
mov
fdivrs
mov
std
out
pop
jns
int
aam
pop
mov
add
push
int3
int3
lcall
pop
or
mov
pop
dec
iret
xchg
xor
xor
xor
and
enter
ljmp
xchg
mov
pop
fnstenv
cmpsl
fnstcw
ss
lea
push
cltd
pop
clc
movsl
jmp
lods
dec
inc
mov
mov
leave
fcompl
xor
and
test
dec
subl
inc
dec
xchg
add
pusha
lret
mov
jmp
stos
out
or
cld
push
test
pop
jg
cmc
xor
xor
pop
not
into
adc
or
xchg
fcomp
outsl
mov
xchg
bound
je
loopne
or
lods
or
xor
mov
out
test
add
lret
test
in
fdivrp
repz
jmp
inc
pop
and
fbstp
xchg
fiadds
xor
ljmp
cld
shrb
adc
int
cld
lcall
mov
movsb
data16
test
push
faddp
test
test
cwtl
and
jbe
inc
into
stos
mov
push
pop
pop
enter
sbb
loopne
jae
push
inc
std
sub
sti
js
iret
mov
js
movsl
pop
std
push
jmp
adc
mov
sahf
ret
cmp
push
rol
loope
adc
or
jmp
inc
fimuls
push
mov
push
cwtl
ret
mov
roll
loopne
mov
out
lret
push
ljmp
xchg
lret
pop
call
lods
jg
xchg
xchg
mov
aam
mov
cmpl
lret
rclb
stc
fstl
sub
xchg
pop
jmp
push
stos
mov
mov
rcrl
subb
add
adc
jl
mov
roll
jmp
add
and
ficomps
iret
jmp
jmp
outsb
mov
aaa
adc
ja
popa
mov
dec
or
fadd
mov
sub
test
decb
lahf
mov
rorl
jp
or
sbbl
lods
inc
imul
mov
sub
lock
div
rorb
ret
cmp
jnp
push
mov
dec
data16
jne
sub
cmp
mov
in
gs
push
add
fiaddl
mov
mov
aaa
xor
leave
adc
cli
mov
pop
cmpsl
arpl
mov
lret
inc
pusha
sbb
sub
loopne
adc
and
dec
pop
aaa
push
push
cmp
aad
jle
dec
lods
dec
or
sbb
push
add
iret
sbb
push
sahf
popf
cld
fisttps
add
loopne
mov
fcmovne
stos
cs
fldcw
mov
test
adc
aad
jns
fisubrs
pop
movq
dec
mov
movsl
scas
mov
std
fdivr
dec
call
lahf
out
adc
add
adc
cmp
mov
and
cmovne
sbb
test
mov
ljmp
mov
ss
xor
xchg
xorb
mov
sahf
pop
add
addr16
jecxz
loope
mov
imul
push
mov
mov
jmp
shr
pusha
mul
cmp
icebp
and
test
push
sbb
aam
popf
stos
repz
ror
daa
push
aaa
push
cmc
dec
push
out
jo
stos
xchg
push
mov
sub
mov
in
or
inc
enter
idivl
fisubrs
out
and
gs
out
sbb
xchg
lret
dec
rcrb
icebp
aam
push
and
int
sub
lock
faddl
cs
ljmp
std
stos
sahf
adc
xchg
movsl
and
shrb
pop
xor
shl
fstpl
sbb
aaa
dec
test
and
rcrb
stos
pusha
lods
adcb
mov
pop
test
sbbb
mov
loop
sub
aas
enter
dec
push
pusha
add
cltd
dec
in
shlb
lea
inc
movsb
cmp
ficoml
xchg
mov
and
pop
popf
dec
push
stos
imul
adc
inc
popl
sub
stos
adc
lret
test
in
add
hlt
outsl
clc
fs
mov
or
inc
idivb
pushf
adc
push
mov
nop
push
xlat
xor
mov
jae
jno
pop
mov
mov
movsb
sbbb
cmp
xchg
xor
jnp
xor
insb
mov
add
fucomp
mov
xchg
cmp
dec
push
inc
rcrb
into
popf
mov
jbe
lock
cwtl
jp
mov
xchg
test
sbb
inc
sbb
push
cli
aaa
aaa
and
push
ljmp
mov
test
xchg
dec
outsb
xor
lahf
cwtl
aas
pop
xchg
icebp
mov
rolb
aaa
fs
or
xchg
inc
ret
push
adc
jge
outsb
and
addr16
cmp
xor
std
lock
outsb
dec
sti
lret
dec
dec
pusha
rcll
fldenv
insb
fisubs
sbb
cwtd
jno
ret
and
scas
and
inc
sbb
repz
test
sarb
push
push
or
jns
les
cltd
mov
out
addl
and
xchg
ja
cmp
sbb
inc
lcall
pop
push
divb
or
xor
push
sub
lret
popa
jg
xchg
dec
and
pushl
shll
pushf
bound
in
aam
jmp
xor
imulb
push
int
push
push
out
adc
fsubrs
fsub
stc
inc
int3
adc
mov
mov
hlt
dec
sbb
xor
je
dec
add
ljmp
into
and
xlat
imul
movsl
mov
dec
fdivp
push
jecxz
out
sbb
mov
mov
scas
mov
inc
lcall
xchg
jg
add
xor
jnp
jmp
ficoml
sbb
imull
ror
adcb
sarb
xchg
lock
mov
inc
cmc
cmp
es
or
push
cmpsl
movl
test
repz
das
xor
into
xlat
cmp
popf
es
mov
cmpsb
xchg
and
sbb
lret
mov
dec
js
mov
or
stc
aas
pop
std
push
jno
or
xchg
stos
or
ss
fistpll
push
sahf
mov
adc
fcmove
insl
jnp
sub
or
or
xor
mov
mov
mov
push
and
out
in
adc
int3
stos
movsl
mov
sbb
xor
lea
insb
outsb
mov
cmp
mov
mov
jo
xor
jg
lret
adc
push
repz
ljmp
pop
test
sbb
call
xchg
pop
jg
mov
add
outsl
push
popf
outsb
mov
lods
ja
cmpsl
aaa
pop
les
in
dec
lds
jo
scas
add
inc
add
jnp
scas
cwtl
push
and
cmp
insb
cmp
jno
mov
mov
push
cmp
inc
inc
in
lods
ja
or
cld
mov
or
fcomps
in
out
jnp
cmp
loope
lock
mov
push
dec
out
ret
lods
jg
cli
aad
or
lret
sub
jge
cli
shrb
jns
push
stos
mov
jmp
js
fsts
xor
call
in
push
mov
rorb
lea
mov
movsl
xor
sbb
sub
inc
dec
jl
clc
fimuls
in
inc
cmp
outsb
xchg
pop
pushf
scas
rol
fsub
int
lea
js
cld
lret
lret
mov
pop
sub
mov
enter
sub
idivb
mov
sbb
push
add
or
fldenv
fyl2xp1
inc
adc
xchg
cmp
and
add
loopne
xchg
inc
rcr
mov
jno
bound
mov
inc
xchg
jmp
push
inc
lcall
dec
fnsave
shrb
push
rcrl
cmpsl
fwait
subb
outsb
in
cltd
cs
cltd
dec
xlat
cmpsb
es
iret
mov
xor
sub
push
cmp
pop
pop
xchg
std
xor
mov
add
mov
fisubl
in
aaa
dec
jmp
pop
mov
jnp
and
mov
lret
mov
xchg
push
lods
scas
push
jmp
mov
fisubl
icebp
xchg
mov
mov
cmc
mov
fdivr
das
cld
and
movsb
and
popf
shrb
mov
nop
stos
and
aas
ret
push
pop
hlt
daa
lds
sub
dec
cltd
insb
mov
scas
test
inc
mov
sub
xchg
adc
mov
jae
xchg
dec
pop
jnp
sbb
jmp
sub
cmp
sub
cli
lea
inc
jne
pushf
orb
pop
inc
cli
xchg
arpl
or
inc
rcrb
adc
scas
aas
lea
xor
push
js
imul
dec
movsb
push
out
dec
mov
mov
or
and
xor
or
jbe
pop
stos
mov
push
movsl
sub
les
adcl
out
xchg
or
scas
mov
lea
inc
xorb
addr16
xor
xchg
cld
mov
es
adc
jmp
mov
shll
out
movsb
jns
loop
test
testl
xlat
lock
or
adc
dec
sbb
inc
iret
inc
pop
ret
dec
sbb
adc
mov
add
test
mov
push
loope
movsl
inc
rorl
pop
cwtl
aas
mov
jmp
int3
arpl
fwait
push
out
fadds
inc
lock
push
mov
jno
cli
mov
sbb
cmp
test
pushf
lock
outsl
add
push
and
js
mov
pop
xor
xor
js
inc
in
cmpsl
sbb
das
dec
test
repnz
adc
lcall
daa
popa
pop
xlat
and
dec
insb
mov
cmc
cmpsl
lods
je
sbb
aaa
jns
xchg
stos
cmc
mov
jmp
mov
lret
mov
out
lahf
pop
xor
sub
aaa
int3
jbe
out
mov
inc
vsubss
push
dec
fcom
inc
loopne
outsb
pop
int
xchg
ffreep
out
loop
lcall
aam
and
cmp
fisttpl
sarb
repz
popa
xorb
ss
or
cmp
sti
dec
ds
pop
leave
nop
jmp
inc
cmp
insl
mov
test
push
pop
or
pop
add
jb
cmp
xor
fs
std
or
adc
fstpt
dec
add
stos
push
jnp
orl
pop
xchg
popa
jmp
inc
cmpsb
in
pusha
add
pop
and
lcall
sub
dec
shll
std
lret
xor
xor
out
push
enter
mov
add
shl
add
sti
orl
add
iret
push
gs
lock
lcall
jne
aam
sbb
imull
sbb
sbb
xchg
lods
jbe
fdivrs
ret
mov
cmc
xchg
fidivrs
jp
shl
adc
mov
pop
andnps
imul
mov
or
adc
stos
pop
xchg
adc
xor
lahf
pop
or
in
fdivrs
fcomps
stos
mov
push
and
aas
jecxz
fucomip
sub
jbe
stc
pusha
push
mov
add
cmp
ja
mov
ret
jge
push
scas
mov
adc
aaa
or
mov
push
mov
popa
sbb
popa
repz
shl
iret
jle
mov
fists
imul
js
ret
cmp
mov
push
out
insb
push
xchg
cmc
clc
and
decb
sbb
lock
mov
popf
ds
add
fwait
ljmp
and
mov
fsubrl
fisttpll
add
sbb
outsb
ret
daa
pop
test
push
or
test
lock
in
inc
dec
jno
and
push
test
push
arpl
aaa
into
xchg
add
loop
inc
mov
mov
xor
mov
insb
push
mov
jns
pushf
and
imul
xchg
arpl
jbe
jo
xchg
mov
mov
jae
stos
push
dec
enter
pusha
test
repz
jno,pn
jns
cmp
mov
outsb
ret
das
test
iret
push
push
movsl
imul
pop
daa
inc
mov
push
in
inc
xchg
orl
xor
xchg
sbb
or
sbb
xchg
xchg
inc
xchg
dec
adc
sarb
cmp
sub
idivb
sbb
lock
xchg
mov
test
lods
xchg
repnz
fimull
sub
sti
roll
dec
lods
repz
push
mov
popf
jg
int3
mov
jmp
jmp
xlat
int3
insl
sbb
mov
xorb
lock
iret
mov
pop
jmp
jmp
lds
cmp
mov
les
dec
es
mov
aaa
dec
inc
test
adc
or
fdivrp
add
pusha
lea
in
adc
movsb
jmp
int
lods
repz
std
and
xor
scas
fcomps
fstps
xor
push
insb
aas
ja
cltd
lahf
rcr
lcall
push
mov
mov
sarl
rorl
ret
je
pop
mov
movsb
js
mov
lods
mov
fbld
repnz
cmpsl
fadds
jae
cli
inc
nop
stc
mov
inc
test
sub
mov
xor
fildl
pusha
pop
mov
gs
fwait
adc
pop
ljmp
out
push
jl
gs
fisubl
jge
hlt
mov
push
jbe
inc
out
clc
add
fsubr
fcoms
jle
dec
arpl
es
std
add
out
ficompl
popa
lods
mov
outsb
repnz
mov
pop
sbb
leave
push
cmp
cmpsb
dec
cmp
push
es
sbb
out
dec
clc
dec
es
adc
or
or
dec
sub
rorb
mov
adc
loope
mov
ljmp
insb
dec
ret
arpl
mov
or
sti
lds
inc
xlat
mov
mov
mov
mov
adcb
mov
and
stc
pop
xchg
dec
sub
pop
or
test
icebp
inc
cmp
xor
dec
shll
pop
dec
test
lahf
fs
dec
push
mov
mov
scas
or
push
adcb
leave
sbb
ljmp
jecxz
cld
out
inc
xchg
ds
mov
or
pop
int
mov
jne
add
in
clc
or
idiv
xchg
inc
fisubrs
or
push
sub
jne
sub
pop
sub
or
pushf
call
and
movsl
pop
enter
popa
pop
lods
sub
stc
sbb
ja
xor
out
dec
sbb
lcall
je
xchg
push
jge
and
mov
icebp
inc
das
xchg
outsb
jle
cmc
mov
fildl
xchg
pop
les
jo
pop
push
jbe
rdmsr
sub
xchg
lea
out
lret
stc
inc
mov
jnp
dec
lret
mov
outsl
jl
test
xchg
cmp
enter
clc
adcl
aad
out
imul
xor
dec
sub
jnp
cmpsl
out
popa
pop
ret
ja
idivl
lea
ljmp
push
xchg
mov
cmp
fildll
popa
aas
ljmp
mov
xchg
mov
nop
std
mov
les
push
mov
push
mov
orb
adc
inc
jns
cmp
repnz
cmp
repnz
insl
push
inc
xchg
test
pop
pusha
je
mov
scas
ja
shl
push
jae
aam
push
dec
in
je
push
in
std
sub
lret
stos
xchg
lret
mov
jle
xchg
dec
out
in
adc
into
rol
ljmp
mov
imul
subb
sbb
leave
leave
pop
je
int
sub
test
mov
xor
adc
jne
mov
outsl
addr16
jne
je
cmp
adcl
cmp
jnp
decl
push
lea
and
rorl
ja
ss
mov
data16
incl
mov
insb
lock
mov
cs
mov
jmp
lds
shrb
mov
push
sub
ret
ss
test
lods
scas
and
cli
cmp
xor
lret
mov
cmc
in
xorb
sbb
cmp
testl
icebp
loope
fmuls
push
testl
fbstp
leave
int
xor
jp
mov
pop
ret
imul
sbb
subl
jne
mov
in
pop
pop
cld
js
enter
and
test
ret
cmc
ret
sbb
in
popa
pop
divl
cmp
cli
repnz
mov
mov
mov
mov
cmpsl
pop
out
fcmovnu
xchg
mov
pop
fcoms
lret
dec
adc
popa
or
inc
sti
inc
sbb
cmc
push
pop
xchg
xor
dec
data16
fwait
adc
pop
push
push
ja
rcl
fsubrs
les
inc
dec
mov
xor
fildl
sti
add
cmp
ja
in
sbb
xchg
jb
and
adc
cs
popf
mov
pop
mov
add
ret
or
mov
es
xor
xchg
mov
push
ret
addb
inc
outsb
rorb
sbb
sub
add
adc
mov
into
mov
hlt
inc
mov
mov
dec
arpl
sbb
int3
rorl
pushl
add
jg
mov
push
adc
pop
jo
fwait
or
mov
sub
mov
fbld
fsub
cltd
lret
and
add
adc
shlb
jg
fimuls
or
mov
inc
pusha
testl
mov
popf
sarb
lods
nop
pop
cmp
inc
xchg
frstor
dec
adc
stos
mov
and
mov
mov
popf
pop
xchg
stos
push
enter
maxps
cltd
xchg
std
xor
and
hlt
xchg
add
pop
inc
cld
pop
inc
test
arpl
aaa
fldenv
leave
ja
cmpsb
call
je
pushf
scas
stc
xor
jbe
pop
adc
stos
clc
pop
mov
or
xor
aaa
or
aaa
inc
in
iret
sub
outsl
dec
adc
sbb
jp
and
repz
xchg
aas
fwait
imul
lcall
pop
dec
add
sub
test
mov
sbb
fimuls
xchg
sbb
mov
mov
xor
in
pop
mov
pop
mov
mov
lcall
mov
sbb
cmpsb
stc
mov
iret
fisttpll
pop
psrlq
xchg
mov
fisttps
imul
jb
mov
stos
rclb
movsb
push
cli
outsb
mov
or
lahf
in
add
test
out
adc
mov
insl
xchg
push
jbe
cmpl
sbbl
dec
and
cmpsb
xor
cli
xchg
sub
addr16
je
push
sbb
jbe
push
push
and
pop
xchg
sub
mov
mov
cli
pop
test
repnz
lret
and
add
push
jp
sbb
arpl
xchg
pop
inc
sbb
mov
mov
mov
cmp
mov
jmp
arpl
xchg
dec
int
lcall
sub
notb
push
int
pusha
pop
sbb
push
dec
xchg
int
cmp
nop
inc
cli
int
out
push
adc
and
sbb
lret
je
mov
lret
shll
inc
mov
jecxz
mov
wbinvd
in
insb
addr16
xchg
outsb
push
push
lret
mov
loope
fs
imul
pop
pusha
push
test
shl
xchg
and
push
xchg
ja
push
cmpl
stos
cmp
pusha
push
cmc
dec
pop
loop
fsubs
aaa
and
push
std
add
jmp
outsb
addb
mov
aas
stc
inc
push
mov
inc
cltd
xor
mov
adc
lock
dec
adc
pop
lock
aaa
mov
mov
clc
fmulp
mov
aaa
push
sub
imul
jecxz
stc
and
and
aad
test
mov
or
sbb
xchg
pop
and
test
push
jae
lds
ret
jl
mov
imul
repz
and
insb
cmp
adc
pop
sbb
ljmp
ret
fchs
adc
orl
test
inc
imul
and
xor
fcomi
push
ret
mov
lds
pop
mov
mov
sub
cltd
shrl
add
cmp
popa
movl
cmc
adc
stos
loop
mov
pop
cwtl
out
inc
adc
pusha
outsl
pop
push
dec
and
and
lret
lods
pushf
popf
enter
outsl
cmpsl
cli
or
pmullw
mov
inc
sbb
sbb
mov
popf
mov
int3
shrb
call
pop
fistpll
mov
xchg
lods
or
pusha
or
dec
lahf
mov
loopne
rclb
xchg
xorb
add
fildll
mov
mov
push
or
add
cmpsb
shll
lcall
dec
mov
and
or
andl
aad
out
fiaddl
fs
and
mov
sub
into
xchg
aam
test
inc
xor
mov
or
cmp
jl
scas
andb
insb
pop
push
push
je
mov
aaa
sbb
cmp
jecxz
add
xchg
mov
enter
cwtl
mov
data16
xor
xorb
mov
push
sub
and
or
addr16
mov
jmp
adc
add
pop
push
inc
out
enter
cmp
sub
stc
pop
fwait
push
shll
int3
inc
loope
jl
test
mov
push
fwait
je
mull
mov
ror
xchg
jnp
mov
xchg
cmpsb
and
add
or
testb
int3
lds
xor
je
cli
mov
or
inc
imul
das
inc
ret
sbb
and
cmovp
cmp
addr16
xchg
sbb
push
mov
mov
shl
push
je
fadd
dec
out
mov
je
int3
mov
jns
mov
sbb
adc
mov
and
sub
shll
nop
inc
rorb
lock
push
fwait
pop
sub
pop
inc
cmp
and
scas
adcl
mov
leave
dec
xor
es
jecxz
and
sub
bound
jp
push
int3
fwait
lret
scas
clc
imul
dec
stc
pop
inc
push
mov
mov
shll
xchg
stc
shl
xchg
push
sub
xor
mul
mov
cmp
mov
mov
sbb
sub
add
ds
and
jo
jae
push
mov
cmp
jae
iret
jg
enter
push
cmpb
mov
jle
xor
xchg
push
insl
outsb
pop
jnp
jmp
pop
rcl
lret
cld
loop
addr16
lock
cli
pop
sub
jmp
xchg
inc
xchg
aam
mov
push
loop
pushf
imul
sbb
enter
outsl
xlat
ja
push
out
push
cmovae
stos
int3
ret
xor
or
xchg
gs
mov
cwtl
pop
inc
les
sub
sbb
mov
mov
or
push
lret
xchg
inc
push
fldenv
dec
call
sub
fidivrs
pop
inc
mov
fwait
push
or
pop
inc
jle
inc
mov
fimuls
sub
jbe
lret
or
nop
xor
call
lock
pop
mov
and
gs
in
scas
mov
jmp
bound
mov
inc
loope
jle
jbe
shlb
mov
xchg
sbb
inc
xchg
inc
fsubs
das
xchg
mov
lcall
mov
mov
push
not
dec
cmp
jecxz
daa
pop
inc
test
pop
pop
xor
xchg
addr16
jns
xor
mov
pop
popf
aam
repnz
cli
xchg
and
mov
in
adc
push
cli
and
sbb
notl
inc
out
ds
mov
and
lock
mov
outsb
repnz
xor
jnp
pusha
aaa
icebp
insl
int
sbb
and
mov
movsl
mov
adc
xchg
mov
cmpsb
jo
sahf
fwait
jbe
push
push
les
cmp
sub
cs
push
sbb
mov
hlt
push
jp
andl
call
loop
out
mov
adc
mov
inc
xlat
inc
jmp
cs
inc
popf
pop
addl
repnz
cmpsb
incl
movsb
mov
insl
xor
pop
imul
testb
push
mov
dec
shr
daa
ss
test
pop
pushf
test
pushl
push
lea
adc
mov
push
fstp
dec
adc
cltd
dec
push
cmpsb
dec
dec
stos
sub
ljmp
mov
js
lea
mov
xchg
fsts
push
loopne
repz
mov
addr16
jle
stos
and
cwtl
aaa
jbe
mov
fisubrs
lods
and
je
inc
in
inc
flds
gs
jo
xorl
lods
jecxz
jmp
push
inc
jbe
rol
sbb
xchg
data16
pop
xor
shlb
pop
sbb
sub
adc
jmp
lret
lea
in
cmp
xor
repnz
bound
repnz
xchg
call
gs
mov
mov
mov
jae
enter
sub
xor
daa
das
out
movsl
dec
push
test
loop
stos
jnp
xor
pop
or
cmpsb
xchg
std
ds
test
sub
mov
inc
mov
lods
mov
and
sti
cmp
xor
add
dec
jmp
aad
and
cmp
mov
cli
push
jbe
cmpsl
jb
subl
stos
pop
roll
jmp
mov
pop
push
mov
loopne
aaa
out
je
push
mov
adc
mov
stos
outsl
mov
and
shrl
popl
loopne
in
push
cli
cmpsb
jge
push
push
add
subb
arpl
push
insb
adc
dec
sub
sub
pop
inc
sub
pop
or
jl
adc
jle
pop
xor
adc
push
or
pushf
movsb
pop
pop
sbb
into
xorl
sub
pusha
bound
inc
cs
xor
pop
push
int3
xor
and
mov
xchg
inc
cs
pop
xchg
mov
ret
jb
push
and
in
adc
insb
lcall
mov
mov
adc
cltd
sub
rcrb
repz
subb
hlt
mov
dec
mov
mov
cli
in
cmpsb
ljmp
dec
jecxz
mov
sbb
adc
stos
dec
addr16
cmc
xor
lds
or
out
inc
out
sbb
lcall
das
shll
push
stc
pop
sbb
sbb
mov
cmpl
icebp
sub
push
push
xor
and
mov
stos
out
movsb
push
in
dec
insb
mov
mov
adc
mov
pop
adc
cwtl
shrl
sbb
imul
pop
mov
cmp
fmuls
call
push
pop
adc
dec
iret
test
mov
sti
imul
adc
hlt
lret
test
popf
cmp
jo
dec
push
push
mov
out
jle
push
xchg
mov
ret
dec
sbb
imul
sub
leave
xchg
jns
xor
mov
and
rorl
or
outsl
in
stos
outsb
mov
nop
popf
shll
xor
popa
jno
xchg
imul
jo
in
and
inc
and
push
lock
jmp
stos
sub
aam
pop
idivl
fbstp
lock
int
cmp
leave
nop
cmp
and
push
fldcw
push
push
or
sahf
push
fbld
jecxz
ljmp
movsl
push
mov
std
push
les
outsl
gs
fidivs
mov
fnsave
js
xchg
or
lea
out
push
cmp
dec
add
dec
ret
add
mov
sti
loope
or
add
cmp
repz
jp
ja
hlt
inc
jmp
es
jb
shlb
add
xlat
push
arpl
cmp
mov
clc
daa
add
xor
push
pop
pop
repz
test
mov
or
push
nop
add
inc
add
aaa
inc
lahf
sub
pop
inc
cmp
out
rorl
push
pop
lods
xchg
xor
testb
xchg
and
sbb
adc
pop
or
xor
fisttpl
int3
je
add
test
sbb
arpl
aam
movntps
cld
clc
ljmp
mov
add
jecxz
mov
xchg
rcll
imul
es
loop
inc
outsb
ja
mov
pop
jns
mov
out
jmp
mov
inc
lahf
mov
push
int
jns
xor
popa
push
sti
pop
xchg
push
xchg
inc
rsqrtps
mov
dec
push
mov
sub
pop
mov
add
mov
lea
js
ljmp
mov
fsubl
pop
jbe
mov
scas
cmp
jbe
inc
xchg
daa
or
clc
inc
or
mov
mov
frstor
mov
movsb
dec
das
jp
lods
sbb
popa
js
sub
sbb
sbbb
jge
aaa
ret
xlat
dec
sbb
in
cltd
jle
add
jmp
nop
or
hlt
leave
hlt
in
lds
aaa
add
orl
inc
mov
movsb
xchg
pop
fisubl
push
xchg
dec
mov
jno
adc
xchg
imul
aaa
std
and
xlat
inc
and
out
fst
adc
cmp
in
mov
insb
pop
aam
cmpl
into
sbb
jnp
nop
dec
inc
or
hlt
push
stc
flds
mov
sti
add
fcmovb
ds
adc
in
gs
in
push
popa
cmp
cmp
jmp
rol
jb
dec
pop
in
sbb
fstps
gs
jmp
add
pop
lock
nopl
mov
ret
sub
jle
cld
repnz
mov
lret
ret
ss
aad
gs
insb
xchg
push
bound
pop
movb
fs
mov
jnp
dec
int
cmp
jns
aas
add
dec
frstor
mov
push
mov
les
ffreep
pop
sub
or
ljmp
fs
dec
xor
push
push
jl
mov
mov
in
adc
adc
stos
xchg
jno
add
jnp
je
cs
sbbb
lcall
fwait
cmp
sub
incl
pop
inc
daa
testl
pusha
stos
push
inc
and
sbb
mov
les
cmp
jge
sbb
push
pop
pop
push
adc
or
cmp
add
xchg
or
mov
push
mov
mov
lret
mov
inc
js
mov
or
test
pushf
lods
mov
xchg
or
test
xor
lahf
mov
or
insl
loop
sbb
ss
sub
adc
int3
shrb
ficompl
je
pop
stos
or
cmp
js
add
decl
push
div
addr16
das
bound
add
ljmp
fdivp
mov
mov
mov
icebp
and
bnd
add
movsb
adc
stos
dec
leave
sub
in
aad
xchg
shlb
sub
add
sahf
nop
push
dec
adc
lret
add
push
out
cmpsb
out
adc
jmp
or
cli
push
inc
cld
ss
pusha
and
or
fxch
cmp
out
nop
loopne
jge
jg
add
je
xor
popa
js
in
insb
pop
cmpsb
mov
call
add
lret
pop
test
fdivl
mov
test
xor
pop
gs
dec
roll
out
fxtract
faddl
jle
test
xor
outsl
imul
cmp
xlat
enter
lea
fs
pop
popf
repz
or
add
dec
add
adc
xor
push
popf
jmp
cmpb
inc
sub
rcrb
or
xchg
out
or
mov
hlt
fdivs
in
xor
jbe
js
mov
adc
pop
popf
negl
sub
daa
arpl
jmp
dec
fcmovnb
popf
into
fcmovu
push
cmc
xor
bound
popa
cmc
lea
stos
sti
test
cmp
mov
lcall
pop
movsb
fistpll
js
pop
mov
sub
xchg
jmp
inc
jno
cmpsl
imul
in
subl
xchg
push
sub
mov
mov
dec
fs
movsl
ficoms
inc
repz
sub
in
test
push
shll
movsb
pop
mov
mov
xor
subb
inc
sbb
push
stos
mov
bound
mov
adc
pop
add
jae
gs
int3
cmpl
imul
das
cli
ret
loopne
cli
cltd
mov
std
jp
les
leave
and
negb
daa
loop
push
cld
repz
pusha
arpl
cmc
in
dec
lock
bnd
push
nop
cmp
out
pop
aad
fdiv
adc
mov
jge
dec
add
jo
inc
test
mov
mov
and
xor
pop
and
dec
add
or
es
fs
inc
jb
and
or
fsubrl
jmp
push
adc
out
in
leave
sarb
scas
cmp
fsubrs
clc
inc
dec
sbb
stc
sub
cmp
fistl
leave
cmp
dec
out
popl
sbb
mov
cmp
add
pop
leave
push
or
mov
lahf
xchg
aam
sbb
ficoml
in
fcmovbe
in
add
test
rclb
mov
mov
nop
mov
loopne
push
hlt
sbb
nop
mov
jg
and
adc
cmpsl
sub
or
jmp
mov
xchg
add
stos
and
into
mov
inc
jg
jp
and
sub
xor
push
test
jp
stos
jl
les
loopne
add
ret
adc
dec
aas
and
mov
iret
sub
jmp
test
cmp
shll
into
outsl
cwtl
mov
mov
outsl
inc
mov
stc
stc
jnp
dec
cmp
jmp
cmp
jmp
clc
ficoml
aaa
iret
scas
pop
movsl
mov
cltd
scas
pop
shl
outsl
sub
fmul
test
cmp
adc
ficoms
icebp
sub
push
sub
lcall
xchg
lds
push
pusha
dec
mov
push
lret
mov
pop
sub
loop
addl
mov
push
xchg
sub
lret
mov
fistpl
xchg
sbbl
rorb
cmc
repnz
lret
stos
stc
sub
cmc
gs
pop
call
andl
movsb
cmp
int
jne
fldenv
mov
hlt
mov
test
or
mov
fidivrl
loopne
lods
adc
dec
add
mov
ljmp
pop
xchg
loopne
mov
push
mov
adc
jbe
cmpsl
in
inc
fs
in
cwtl
mov
adc
test
pop
xchg
data16
pop
adc
xchg
fdivp
imul
in
mov
sbb
jle
cmp
imulb
push
mov
sbb
enter
popa
std
push
test
in
fs
subl
jne
cmpsl
popf
mov
or
mov
test
xchg
sahf
fisubs
fwait
sub
sbb
sub
add
lahf
adc
mov
adc
push
mov
xchg
pop
add
jae
mov
imul
les
fcmove
je
mov
push
cmc
insl
pushf
jle
aaa
rcrl
xorl
or
and
imull
xor
mov
dec
scas
inc
insb
mov
cmp
nop
call
adc
sub
adc
jae
mov
cmpsl
push
hlt
popf
or
adc
push
xor
push
in
sbbb
in
cmp
mov
pop
leave
sbb
push
dec
cmp
enter
push
shll
adc
or
fnstsw
sbb
adc
jne
dec
jmp
imul
sahf
ret
into
cmc
mov
pusha
stc
setl
int
adc
outsl
push
inc
xchg
stc
dec
out
clc
sbb
cli
sub
fists
lcall
or
push
mov
xor
dec
mov
mov
adc
in
mov
xchg
sbb
test
xor
call
mov
jno
test
adc
sahf
mov
inc
jns
or
add
mov
shl
mov
dec
add
frndint
lock
loope
mov
mov
jl
orb
cld
adc
jae
jb
fucomi
cmp
outsb
adc
daa
jne
cs
je
xchg
mov
sbb
add
jbe
out
fwait
dec
cmpsl
and
sbb
add
xchg
into
test
stos
and
sbb
cmp
push
jmp
or
int3
stos
add
mov
adc
pop
and
or
pop
popa
or
push
dec
xchg
arpl
bound
jg
or
clc
jno
mov
sar
pop
xchg
sbb
lret
and
inc
inc
inc
movsb
divb
enter
outsb
call
push
or
les
clc
mov
dec
mov
sub
loopne
jge
adc
mov
add
mov
pop
dec
pushf
xchg
aad
lods
data16
jmp
imul
push
test
sbb
hlt
cmp
ja
or
xor
cmp
mov
jo
inc
popa
sbb
imul
add
push
push
fsubrs
imul
push
mov
or
negl
mov
stos
cltd
xor
in
cs
fsubl
outsb
inc
inc
adc
outsl
jns
cmpl
mov
and
iret
pop
stos
adc
rclb
mov
xchg
popa
or
mov
aaa
out
push
js
push
cld
imul
sub
inc
xor
sub
lds
mov
insb
cltd
jae
dec
insl
jb
mov
adc
movsl
sahf
outsb
mov
mov
sub
and
lock
lock
insl
cli
cltd
pop
jle
loop
int3
cmp
popf
aam
push
clc
xchg
std
scas
xchg
test
adc
xchg
mov
mov
xor
sbb
lock
test
dec
jo
sub
inc
mov
fsubl
cmp
insb
call
adc
jge
addr16
pop
std
mov
sbb
jbe
xor
or
push
daa
or
push
daa
leave
push
imul
fisttpll
jg
addr16
pop
sub
test
adc
into
arpl
mov
popf
dec
testb
mov
or
in
cmpsl
pusha
mov
mov
popa
fwait
cltd
int
das
mov
dec
adc
shlb
dec
aas
lret
bound
inc
ja
sub
xor
sti
test
call
sbb
sub
jp
pop
ret
pop
out
pop
pop
gs
push
jnp
stos
in
repnz
dec
ret
jne
xor
iret
aam
rorl
adc
mov
push
cltd
pop
mov
rclb
fistl
pusha
and
in
loop
fistps
jmp
aas
rcrl
cld
nop
hlt
roll
sbb
lret
xchg
into
aam
pop
ss
cmp
lcall
pop
ret
sahf
adc
ljmp
insl
xlat
jg
into
cmpsb
loop
hlt
out
stos
and
addb
inc
movsb
inc
das
cmpsb
pop
andps
xor
pop
and
stc
jo
adc
iret
pop
stos
out
pop
dec
lock
or
sbb
xchg
rcr
aas
fsubrs
mov
push
cltd
sbb
fdivrp
jl
fcompl
fisttpll
pushl
adc
pop
xchg
jb
add
adc
push
xchg
movsl
popa
or
adc
stos
cmp
cmp
cmp
cmp
sub
dec
push
inc
arpl
dec
lret
lahf
cmc
or
mov
shl
xor
mov
push
cmp
adcl
inc
into
push
xchg
jne
je
std
mov
mov
pop
xchg
adcb
or
xlat
or
ficoms
pop
xchg
or
nop
cmp
push
jne
push
lea
iret
out
arpl
stos
mov
pop
cld
movsl
enter
test
jo
push
sub
hlt
mov
jnp
lret
ljmp
fidivrl
mov
aam
jnp
lret
std
fisttps
loopne
cld
inc
pusha
pusha
loop
shr
loopne
bound
in
mov
leave
push
xchg
das
loop
jg
jnp
mov
and
gs
sbb
jmp
stc
or
mov
popa
adc
rcrb
lret
lcall
sbb
mov
in
iret
mov
cmpsl
mov
lods
add
dec
sub
push
dec
or
fsub
dec
xchg
call
out
fidivl
push
cld
and
push
ljmp
push
lcall
jmp
pusha
sbb
repz
repnz
pop
imul
fbld
inc
ds
xchg
and
dec
fadd
jno
inc
cwtl
mov
pop
popa
cmp
inc
je
jns
sti
dec
outsb
jo
jnp
scas
pop
mov
inc
adc
hlt
shrl
fxch
cli
xchg
mov
sbb
fisttpl
lods
cld
dec
and
fisubl
pusha
add
fsubrs
or
test
jecxz
addb
out
push
add
popl
mov
gs
stc
xor
pop
call
mov
imul
popa
clc
rcrb
jne
mov
pusha
push
lcall
lock
rsqrtps
push
inc
addr16
mov
rcrb
dec
mov
xchg
pushf
jle
les
mov
push
and
dec
into
cli
jge
imul
xchg
mov
mov
mov
push
jge
mov
bound
dec
sahf
bnd
sbb
cmp
jne
mov
in
adc
cmp
rcll
in
test
jae
jo
add
adc
mov
mov
inc
and
enter
and
or
mov
mov
xchg
xor
adc
mov
jae
ja
pop
add
pop
mov
pop
lods
rolb
icebp
ret
xlat
sbb
ja
mov
daa
repz
out
divl
xor
outsl
mov
test
movsl
xorb
and
xchg
lds
js
aaa
add
xchg
popf
push
mov
sbb
dec
inc
dec
push
adcb
aas
push
in
sub
pop
sub
sbb
jmp
push
clc
sbb
sbb
pop
in
stos
fnclex
ds
xchg
jbe
xchg
fwait
in
jae
push
and
mov
sbb
push
or
out
repnz
xchg
vpunpcklqdq
inc
push
pop
adcl
loop
sbb
lcall
inc
in
jae
lcall
cltd
gs
fiaddl
push
std
pop
popf
sub
cmp
arpl
repnz
or
pushf
in
mov
mov
cmpsl
inc
cmp
push
xor
cmp
pop
pop
adc
inc
mov
jno
pushf
sbb
mov
push
loope
pop
push
jmp
xchg
jae
dec
lret
leave
pop
out
dec
mov
in
dec
mov
lock
sahf
push
sbb
loop
outsl
ficoml
insl
push
outsb
movsb
out
popl
dec
xchg
push
out
inc
sahf
mov
out
jo
mov
roll
lret
cld
add
cmp
enter
xchg
cltd
sub
and
pop
in
mov
or
test
pop
cli
aas
arpl
mov
sbb
popa
cmp
das
pop
mov
jp
rolb
sti
dec
addr16
mov
or
ja
mov
rclb
test
lods
jo
incb
adc
xor
mov
dec
outsb
lahf
enter
inc
inc
jae
mov
pop
outsb
xchg
and
xchg
out
mov
xchg
aad
jb
mov
ljmp
fdivl
aaa
xchg
stc
jo
jnp
xchg
lcall
wrmsr
daa
sub
outsl
clc
sub
dec
loopne
add
in
inc
jge
js
fstl
daa
and
mov
into
lret
es
or
and
data16
rorl
lea
test
movb
arpl
sbb
cltd
ljmp
movsb
adcb
mov
call
fs
and
jb
mov
cltd
push
fwait
test
mov
jno
jo
xchg
mov
fidivrl
test
gs
lcall
aam
divb
or
ljmp
adc
mov
out
mov
xor
xor
hlt
stc
pop
jp
repz
pop
adc
test
sbb
jae
push
cmp
mov
mov
add
jns
jnp
pop
cmp
push
add
mov
repz
pop
xor
bound
sahf
out
jbe
sub
outsb
and
mov
push
stos
clc
repz
stos
divl
push
aad
push
cli
dec
push
cmpsb
test
lods
mov
fiaddl
addl
jno
je
mov
and
enter
pop
decl
ja
inc
in
jno
xchg
cmpsb
fidivs
push
call
aam
mov
cmp
or
jmp
or
jp
xchg
jmp
je
sahf
fwait
stc
jnp
bound
and
and
or
mov
and
inc
sub
fcomps
icebp
or
sub
cmpb
lock
stos
add
ret
loop
pop
cmpsl
jbe
pop
in
ja
lea
mov
and
and
ja
push
inc
mov
inc
xor
xchg
outsb
jns
push
xchg
scas
cmp
idivb
leave
cltd
icebp
push
int
xchg
pop
stos
iret
fldenv
mov
popf
jbe
xor
xor
xor
pop
das
pop
repz
jecxz
push
xchg
add
movb
mov
push
jnp
mov
add
out
pop
fstpt
test
arpl
in
mov
inc
aam
lods
ss
ret
dec
dec
or
mov
and
xor
arpl
fildll
into
fs
loop
and
negb
into
mov
cmp
std
mov
imull
insl
mov
in
jl
sub
aas
xor
xchg
jns
iret
jb
repnz
xor
inc
insl
pop
push
shl
std
lods
and
push
jno
add
pop
mov
test
mov
mov
out
aad
pop
test
cli
cmpsb
lods
inc
pop
ss
push
jge
imul
cmp
mov
cmpsb
mov
cltd
pop
js
nop
fwait
lods
out
pop
cmp
cli
and
pop
dec
push
out
sub
xchg
das
push
mov
leave
cmpsb
mov
ja
popa
cmpsl
leave
pop
pusha
or
into
inc
ret
sahf
and
xchg
shrl
sbb
jb
or
mov
in
sub
pop
les
xchg
icebp
fildl
out
push
and
fildl
data16
add
das
xorb
orl
jns
loop
mov
xchg
out
or
mov
rcll
adc
and
cwtl
mov
dec
mov
out
jns
leave
sbb
push
fiadds
or
stos
sub
lea
sub
cmpsb
jecxz
mov
or
cmp
fisttpl
sub
mov
adc
cmpsb
cmp
es
push
repz
dec
mov
cmp
out
cmp
push
push
fisttpll
bound
push
ja
test
lahf
xor
sub
adc
in
jp
test
ret
mov
enter
fcoms
lret
push
cmpsl
in
jne
sti
bt
cmp
cmc
cltd
loop
push
xor
push
pop
lds
or
jg
dec
mov
adc
loopne
inc
jle
pop
push
mov
push
stos
push
out
mov
sub
mov
mov
xor
cmp
movsl
insb
ja
aaa
cwtl
mov
xchg
outsl
movb
ret
dec
lahf
ss
out
inc
push
push
jno
fmuls
aaa
inc
cmp
notl
push
inc
ficomps
xchg
inc
out
fidivs
fisubrs
jbe
or
shl
or
ss
dec
or
cmp
jecxz
mov
ret
aam
and
in
iret
lcall
inc
jnp
mov
jo
inc
outsb
loopne
inc
inc
mov
outsl
jno
jo
out
je,pn
push
fmul
repnz
sub
pop
clc
push
ret
lods
jp
hlt
repnz
pop
push
inc
aam
cld
pop
cltd
arpl
adc
cmpsb
xchg
fstpl
mov
mov
push
lods
fidivs
scas
inc
call
ja
pop
dec
pop
cltd
cmc
lods
lods
test
push
cmp
cmp
roll
mov
jae
fistpll
push
cltd
pop
push
xchg
and
jge
ret
test
xor
lods
mov
imul
mov
and
push
sti
cmpsl
add
call
mov
xor
jle
lods
inc
push
scas
aam
hlt
mov
out
enter
push
ja
and
xor
mov
xor
pop
push
cwtl
out
in
icebp
popa
sub
pop
fdivrl
mov
mov
or
sbb
outsl
ds
mov
rorb
pop
mov
sub
xor
push
inc
mov
mov
lock
dec
mov
mov
jmp
sub
mov
sbb
outsl
xchg
es
scas
lcall
cs
or
mov
outsb
loopne
adcb
jo
loop
xchg
mov
sub
jne
insl
test
dec
sbb
add
int
and
insl
xchg
adc
sarb
aaa
and
sub
adc
imul
int
adc
jo
inc
das
xor
fdiv
sub
or
outsb
or
add
in
adc
push
loope
inc
cmc
pop
std
ret
adc
add
mov
adc
jb
xchg
outsb
lret
pop
loopne
popf
jle
push
mov
mov
shrb
mov
pop
push
xchg
pop
fwait
icebp
into
add
and
aad
cmp
dec
mov
adc
jo
or
test
inc
scas
and
sub
shll
insb
dec
outsl
push
imul
test
into
js
xchg
cmp
jl
mov
sbb
orl
sbb
sarb
and
popa
das
mov
outsl
push
ja
mov
mov
add
inc
jmp
inc
pop
mov
mov
rcrb
out
arpl
cmc
ror
clc
cmp
or
push
sti
stc
add
call
pusha
lret
sbb
mov
xlat
divb
ds
movsb
xchg
loope
dec
psubsw
sbb
mov
mov
std
les
pop
das
pushf
add
add
or
cmpb
lds
jp
lret
clc
je
xor
sbb
mov
sub
push
adc
pop
xorb
movsb
setns
loope
lahf
out
pushf
push
dec
repnz
out
jge
repz
xor
ljmp
mov
inc
pusha
bound
shlb
dec
lock
jecxz
jnp
aad
aaa
xchg
inc
rol
lods
js
in
pop
lret
inc
lods
adc
outsl
pop
add
jecxz
test
dec
mov
xcrypt-ecb
cmpsl
iret
adc
and
mov
fsubs
popa
data16
inc
out
push
cld
sbb
jb
cmp
jmp
sub
inc
or
clc
sarl
jnp
xlat
hlt
test
js
mov
lcall
lret
inc
cmp
lahf
and
cld
sub
int
push
out
jb
lretw
mov
popf
jo
lcall
pop
loop
jnp
mov
mov
xchg
add
inc
out
out
insl
and
sub
and
mov
out
inc
add
xorb
std
pop
sar
nop
fisttps
adc
mov
inc
mov
shll
and
jbe
xchg
sbb
pop
pusha
out
push
shrb
mov
ret
sbb
jae
jne
negl
loop
nop
pop
in
mov
adcl
mov
mov
dec
scas
push
mov
adc
inc
xchg
enter
xchg
mov
mov
sti
jge
cmp
cmpb
shll
movsl
push
pop
addr16
push
mov
xor
outsl
std
sub
ficompl
daa
inc
outsb
lods
inc
scas
pop
inc
cmp
cmpsl
je
les
inc
insb
sti
mov
pop
xchg
out
add
clc
mov
es
push
lds
mov
ds
jnp
sub
pop
cmpl
enter
arpl
iret
loopne
rorb
in
sbb
ds
cwtl
fsubrl
cld
xchg
bnd
adc
xchg
push
clc
repnz
pop
or
decl
mov
mov
jno
les
pop
jo
lea
xchg
push
push
mov
push
dec
dec
adc
fldl
mov
int
cmp
icebp
repz
addr16
adc
out
int3
and
ficoml
dec
rol
cmpl
out
lds
cmc
popa
push
cmc
insl
ret
popa
filds
cld
in
and
or
pop
inc
imul
sbb
ret
repz
inc
mov
das
mov
loope
cli
jno
jmp
jg
push
xchg
mov
jbe
xchg
adc
repz
sub
lods
shrl
sti
mov
xor
gs
dec
sahf
cmp
test
mov
test
pusha
xchg
cmc
nop
pop
decb
daa
push
and
pushf
or
rep
dec
jg
and
stos
lahf
pop
les
jp
int3
cmp
shr
mov
or
call
lcall
sub
popf
movsb
es
mov
cmp
inc
lds
cltd
in
ret
aam
pop
fs
xchg
enter
xor
fldenv
mov
loop
or
add
and
mov
xchg
sbb
cmp
xor
push
outsl
cmp
adc
add
lret
xchg
je
in
xchg
lcall
xchg
test
into
fbstp
xor
pusha
lahf
push
and
test
xor
cs
stc
mov
in
pop
pusha
fsubrp
repnz
in
adc
lock
add
add
or
mov
xchg
outsb
ss
repnz
arpl
sahf
fsubr
cld
scas
mov
mov
fadds
mov
ss
xchg
mov
pop
mov
push
jbe
cmp
push
and
and
aam
cmp
sub
mov
arpl
and
nop
jns
in
dec
cmp
lods
push
ss
ss
pop
xor
mov
pop
xchg
fisubrl
pop
mov
aam
jmp
cmp
mov
adc
jg
sbb
mov
pusha
pop
dec
dec
inc
mov
leave
aas
dec
add
and
push
add
sub
mov
cld
or
xor
mov
les
and
xchg
xchg
mov
minps
rolb
fsubrs
shll
xor
mov
and
fcomps
xchg
mov
test
xor
push
pop
stc
cmp
push
dec
jno
push
addb
or
into
xchg
adc
loopne
fs
dec
mov
jmp
mov
cmc
movsl
xor
add
sbb
in
pop
mov
push
dec
xchg
push
iret
jne
jmp
pop
inc
mov
scas
out
mov
xchg
sub
ret
lret
mov
test
pusha
inc
jmp
or
mov
pushf
or
add
push
movsb
lods
js
push
jmp
push
jg
ret
pop
pop
out
insb
fildll
test
dec
adc
jl
repz
jns
adcl
mov
mov
cmp
daa
repnz
pop
movsb
fbstp
out
aas
jne
inc
adc
adcl
ss
fisubrl
loope
ret
or
loopne
loopne
mov
jb
push
mov
adc
cmp
mov
aas
lock
jbe
je
xor
ljmp
lret
leave
xorb
test
pushf
fsubr
shrl
mov
mov
jo
fildll
lea
inc
cmp
jp
or
sbb
adc
xor
and
paddusw
movsl
and
into
imul
test
adc
addr16
movsl
xor
xor
imul
iret
pop
rcrb
shlb
add
xchg
adc
negl
push
xor
pop
mov
push
fimull
sub
in
dec
jge
ret
and
sub
push
mov
pop
xor
loope
rcr
sbb
bound
mov
sbb
sub
je
outsl
or
jl
lock
or
aas
loop
mov
lock
adc
or
rcr
inc
dec
cltd
mov
cmpsb
fincstp
fdivrs
pop
jmp
or
fs
and
and
fdivr
call
enter
mov
dec
adc
js
dec
sahf
cmc
pushf
mov
adc
ret
fistps
aaa
jo
mov
mov
lds
idiv
dec
inc
popf
inc
mov
in
sub
je
jle
sti
lret
lahf
pop
sub
js
add
ss
sbb
stos
mov
stos
and
cmpsl
clc
xchg
rcr
jp
sarl
jle
jne
ja
jae
imul
jo
das
insl
add
sub
cmp
mov
sbb
in
repz
lahf
xchg
imul
hlt
arpl
mov
scas
loop
fsubl
pop
cltd
cmp
jnp
rolb
loopne
mov
mov
lods
sti
in
mov
sub
scas
mov
mov
imul
movsb
in
out
jge
jle
lods
inc
movsb
cmp
adcl
cmpsb
scas
sub
ret
das
cmp
sbb
jp
ds
in
xor
or
jmp
mov
add
mov
leave
into
mov
mov
lret
fisubrl
es
mov
cmpsb
push
stos
loopne
sub
inc
in
scas
pop
or
out
or
mov
cmc
icebp
ficoml
das
pop
xchg
push
mov
gs
jmp
mov
jmp
test
int3
push
or
xchg
adc
jb
test
enter
hlt
pop
xchg
mov
in
xlat
out
cmp
shrb
lret
or
rcrb
ret
lods
icebp
movsb
fisttpll
xchg
out
rcr
xorl
inc
test
xchg
jo
cmpsb
dec
shll
subl
adc
push
out
adc
or
mov
mov
jmp
ss
mov
pusha
inc
in
push
mov
push
rclb
jle
mov
loopne
jle
out
xor
push
nop
dec
daa
or
xchg
ss
jecxz
cmp
adc
push
imul
pushf
lret
lret
inc
test
dec
jg
push
popf
imul
xchg
jle
aas
ret
icebp
or
outsl
dec
aaa
and
xor
popa
stc
jbe
jg
std
or
lahf
data16
mov
fcompl
mov
lcall
ret
jnp
loopne
cmp
mov
subl
or
adc
cmp
pop
clc
xchg
mov
sub
jmp
insb
call
movsl
mov
cmp
mov
aaa
pop
pop
movsl
xchg
imul
das
sub
cs
add
sbb
jecxz
mov
dec
jb
je
adc
mov
inc
pop
cld
inc
cmpsb
aas
iret
or
xor
mov
mov
add
push
xor
ja
lods
stos
int3
mov
mov
hlt
leave
inc
insb
data16
inc
dec
movsl
notl
mov
xchg
dec
pop
jb
add
xor
mov
popf
icebp
mov
insb
add
dec
cmovb
stos
loope,pn
daa
mov
adc
cmpsb
jmp
add
dec
mov
shl
movsb
add
int3
mov
fsub
movsl
jecxz
js
jmp
movsl
out
ret
sub
out
aaa
aad
push
mov
mov
rol
pop
daa
fs
add
in
cmpsb
xchg
fiadds
outsb
out
in
sub
cmp
pop
sub
lret
pop
fistl
aad
fnstcw
clc
add
sub
pop
mov
add
pushw
insl
dec
je
je
out
push
mov
loop
aaa
cmp
dec
repz
push
std
xchg
push
sbb
sub
fs
jae
in
das
pop
cmpl
push
cmp
cmpl
aaa
fcmovne
dec
mov
out
loope
in
sub
xor
mov
stos
adc
std
call
out
fidivrl
and
cwtl
sub
mov
mov
push
ss
test
pop
sbb
cmp
pop
ret
lcall
lock
jl
repnz
daa
mov
daa
push
xlat
mov
mov
test
push
jno
fnstsw
jbe
inc
jns
pop
data16
mov
pop
dec
inc
into
push
push
data16
int
cbtw
andb
push
fisubl
cmp
ljmp
sbb
mov
popf
adc
sarb
stc
lock
ljmp
or
push
push
ret
js
cmpsl
add
mov
sbb
jecxz
sub
or
push
sbb
add
or
adc
lds
jno
popf
jecxz
push
div
in
mov
call
iret
in
jle
xchg
cli
inc
pop
ss
int3
mov
clc
pop
aam
and
adc
jecxz
fdivr
enter
dec
or
scas
jne
insl
rcl
daa
inc
iret
mov
xchg
lock
pop
iret
pop
inc
cmp
add
outsl
aam
movsb
mov
push
add
loopne
jle
jne
adc
mov
jg
cmp
xor
push
xchg
gs
and
dec
push
jmp
xchg
fisttps
lock
insb
lcall
adc
sarb
lods
sub
shlb
lret
clc
nop
sbb
mov
sarb
pop
mov
sbb
sub
clc
mov
int3
fs
inc
push
ds
or
roll
pop
xchg
leave
inc
incb
push
insl
mov
pushf
cmpsb
adc
push
dec
dec
mov
test
insb
and
cltd
cli
icebp
mulb
push
in
jecxz
xor
jp
cmc
mov
push
adc
hlt
cmpl
fsts
sbb
xchg
mov
mov
ljmp
inc
sbb
syscall
push
pop
stos
les
adc
adc
sub
cwtl
xchg
dec
xorl
add
or
cld
shlb
out
bound
fcomps
mov
jl
mov
pusha
stc
xlat
xor
or
insl
lret
sbb
mov
add
dec
sbb
inc
stos
mov
loope
addr16
add
add
jle
mov
out
push
movsl
mov
test
sbb
loop
dec
and
out
cmpsl
or
pop
jp
inc
rcrb
fbld
push
shl
std
out
or
repnz
arpl
dec
popa
repz
stc
push
cld
sahf
js
sbb
sbb
cmp
sbb
dec
divl
loop
popa
inc
aas
jae
std
inc
xchg
mov
add
cli
cmp
rcll
cwtl
cmp
pop
scas
xchg
lahf
add
movsb
out
cltd
cmc
popa
ficoml
fisubs
in
add
add
mov
mov
mov
test
pop
lods
mov
fsubl
push
push
bound
repz
dec
pop
repz
mov
mov
out
iret
or
bound
push
jns
arpl
outsb
xchg
movsb
repz
lcall
imul
jecxz
mov
icebp
jne
jle
cmp
mov
add
or
nop
mov
xlat
sub
add
call
cmp
or
sbb
push
mov
push
mov
mov
pusha
aam
pusha
sbb
inc
cltd
or
fstl
pop
or
js
pop
jbe
cli
test
xor
or
call
add
inc
or
sbb
addr16
notl
and
mov
mov
jmp
cli
lods
mov
sub
stos
in
mov
adc
mov
jle
mov
dec
mov
fists
xchg
repnz
imul
cmpl
repnz
sub
dec
outsl
push
and
ret
ja
dec
loop
mov
clc
xchg
push
add
mov
lock
dec
sbb
cmpsb
cmpsl
jl
push
jle
push
test
cmp
adc
pusha
arpl
dec
mov
adc
fnstsw
daa
imul
lcall
ja
or
ficoms
mov
fimuls
push
lcall
rcrb
fiaddl
in
adc
cmp
mov
repz
inc
dec
rorb
xchg
mov
sbb
ss
pop
stos
and
rcrl
ljmp
pop
aaa
sbb
and
pop
sbb
out
mov
fisubrs
aam
jmp
fadd
fistpll
jge
or
negl
imulb
pop
push
ss
cmpsb
fwait
insb
pop
rclb
inc
ja
pop
jo
dec
pop
dec
ror
not
out
stc
adc
cmpsb
outsb
scas
imul
pop
dec
mov
mov
in
aaa
aaa
xchg
jg
mov
cltd
je
jns
push
dec
fxam
repz
jne
mov
loopne
mov
fs
jmp
mov
mov
jbe
shll
lret
jns
adc
xor
js
mov
mov
inc
mov
stos
and
push
mov
xchg
in
fnstcw
ds
loopne
lds
les
hlt
test
mov
lods
pop
andl
sbb
adc
lds
fs
xchg
xchg
stc
idiv
aam
jne
test
mov
jmp
lahf
sti
xchg
out
xchg
fldcw
push
add
push
rcr
jle
lods
push
divl
ror
sbb
inc
adc
mov
mov
aad
push
je
divb
xchg
call
loop
movsl
xor
in
sub
mov
iret
pusha
cmpsl
add
sub
cmc
jbe
imul
scas
or
int
sbb
test
sbb
shl
dec
push
mov
jae
loopne
pop
sub
mov
outsl
ja
in
loop
inc
test
or
pop
pop
xor
subb
mov
inc
mov
push
jno
add
or
adc
mov
pop
push
fbld
sbb
fwait
enter
sahf
std
or
lcall
and
div
mov
jle
mov
xchg
mov
movsl
in
stos
fists
mov
daa
xor
jb
std
ret
test
in
lods
jnp
push
mov
ja
icebp
imul
push
jb
mov
mov
pop
mov
or
stc
xchg
xchg
mov
push
add
push
sub
mov
push
ror
jmp
shll
pop
subb
mov
dec
fsubs
mov
or
cmpsl
add
cmp
xor
rclb
jl
adc
es
xor
jge
mov
xor
adc
mov
imul
push
add
mov
cmp
into
pop
mov
sub
mov
push
mov
cmp
test
cmp
dec
fwait
ds
push
imul
jp
aam
sbb
inc
pop
sbb
pop
lods
push
repnz
loopne
jae
sahf
add
adc
xor
xor
pop
fs
cs
mov
or
mov
aam
sbb
xor
lahf
dec
adc
add
aaa
and
pop
cwtl
push
inc
mov
mov
or
jl
xchg
push
sbb
in
mov
mov
add
mov
add
xchg
pop
cmpsl
scas
out
idivb
pop
dec
mov
sub
cmp
mov
popa
sub
and
mov
sub
adc
jle
mov
cmpsl
iret
in
xor
cmp
inc
add
mov
mov
and
cli
jl
ss
into
mov
xchg
gs
pop
add
pop
xor
js
pop
filds
sub
les
cmp
addr16
jmp
and
xchg
jno
mov
and
pop
push
sub
int3
mov
mov
stc
repnz
xor
and
cld
dec
xor
or
mov
ror
cmp
insl
lock
scas
fcom
fcoms
pop
not
test
test
insb
pop
and
xor
push
lahf
rclb
mov
sub
movl
inc
out
and
fimull
adc
xchg
pushf
add
pop
pmaxub
sub
lret
adc
mov
add
sub
das
mov
jno
js
hlt
shrb
dec
and
adc
pop
inc
popa
and
push
and
sub
push
mov
push
icebp
xchg
xchg
and
add
dec
push
push
ret
cmpsl
push
mov
add
xlat
cmp
icebp
cs
sub
adc
int3
outsl
outsb
fstps
mov
pop
adc
mov
xchg
je
cmpsb
or
mov
loopne
shrl
gs
push
jnp
push
and
xchg
in
jnp
sbb
out
fimull
test
lds
sbb
sub
jge
dec
dec
insb
jge
clc
call
cli
out
hlt
faddl
mov
call
aas
stos
push
mov
mov
popa
jge
or
ljmp
les
mov
std
mov
sub
adc
ret
jg
in
mov
shr
pop
leave
mov
in
fmuls
sbb
cmp
repz
fists
insb
test
inc
dec
je
adc
lock
cmpsl
ljmp
sbb
fldlg2
xchg
mov
and
jbe
add
pop
int3
inc
lcall
std
inc
inc
mov
push
sub
loopne
clc
adc
imul
out
or
jo
inc
push
and
adc
addr16
repnz
nop
pop
ja
bound
push
mov
test
xchg
lods
cmp
sbb
std
in
repz
push
rcrb
adc
sub
pop
xchg
lahf
idiv
jl
and
aas
fucom
jns
inc
jecxz
push
mov
mov
cmp
into
stos
push
stos
subl
mov
sub
aad
cwtl
dec
arpl
scas
out
lahf
aaa
lds
mov
pushf
jle
movsb
mov
enter
packssdw
mov
idivb
jg
mov
dec
ret
idiv
mov
scas
inc
roll
xor
add
setns
mov
mov
or
push
nop
jo
or
mov
sarb
out
jp
insb
sub
sub
fistps
adc
ljmp
mov
dec
js
xor
push
xchg
xchg
inc
push
and
dec
mov
jnp
or
mov
xchg
lods
xor
jle
push
arpl
mov
xchg
in
cli
aaa
cltd
xchg
hlt
inc
push
in
inc
xchg
loop
mov
les
rorb
repnz
pop
mov
pop
cmp
pop
jg
aas
daa
ret
adc
jnp
jle
mov
mov
push
sti
daa
pop
push
fisttpll
jno
test
outsb
push
xchg
stos
loope
and
cmpsb
popa
int3
push
inc
push
loope
test
push
mov
ss
push
mov
popa
cmpsl
pop
and
jae
xlat
fcomps
das
in
dec
adc
mov
scas
nop
rorl
and
push
outsb
lret
and
lock
inc
hlt
mov
data16
addr16
cli
je
ds
test
cwtl
out
mov
or
mov
add
mov
test
add
outsl
xchg
cmp
imul
mov
push
shlb
loope
fwait
repz
sarl
push
or
xlat
sub
dec
lods
mov
add
and
add
std
pop
pop
add
jp
aam
mov
mov
rcll
test
sti
push
ja
push
jge
cmp
add
rolb
add
sub
pop
and
inc
ror
pushf
jmp
mov
in
push
insb
jbe
xchg
hlt
xchg
mov
mov
out
pop
cs
jae
or
xorb
jl
jp
shr
imul
cmpsb
pop
xchg
xchg
stc
roll
mov
filds
adc
movsl
push
and
in
loope
jne
std
addr16
lds
xor
jp
and
shl
ds
mov
orb
leave
int3
shrl
jecxz
mov
sbb
xor
dec
lods
les
mov
pop
dec
in
push
or
pusha
jne
pop
mov
xchg
insb
stos
test
in
mov
adc
or
lods
xlat
add
sbb
shl
or
popf
clc
ds
inc
inc
pusha
jmp
in
loope
jg
das
adcl
testb
lods
cltd
mov
sbb
xchg
aad
mov
adcb
je
in
xor
iret
sti
fildll
and
ret
ljmp
xchg
or
iret
out
cmpsl
jg
scas
push
mov
add
sub
dec
push
sub
add
out
cli
adc
insl
ljmp
dec
outsl
jmp
push
cmpsl
cmpsl
jb
sub
pop
push
movsb
mov
sti
fsub
scas
xor
mov
pop
insl
fs
test
les
dec
and
and
std
push
das
push
std
cmp
add
aaa
mov
and
out
pop
ljmp
dec
push
cmpsb
inc
push
jg
int3
push
subl
in
insb
mov
mov
out
sti
mov
and
out
jmp
mov
addl
loop
add
popf
push
sbb
bound
flds
push
mov
in
inc
in
lcall
push
fwait
pusha
mov
imul
or
rorl
imul
rclb
dec
fsubl
movsb
in
xor
fmulp
mov
jecxz
jmp
xlat
cmp
inc
int3
jp
std
out
dec
dec
sub
popf
hlt
sbb
xchg
rcll
xlat
mov
xor
lea
sub
mov
xor
clc
scas
jae
dec
inc
mov
adc
mov
int
fnstenv
dec
js
idivl
stos
pop
mov
ret
mov
sub
ljmp
jmp
repnz
mov
adcb
addr16
jmp
push
or
mov
inc
enter
insb
js
or
jb
inc
push
gs
mov
adc
imul
adc
test
cltd
mov
or
rcr
jno
rcrb
sub
pop
stos
jecxz
xor
mov
call
mov
inc
scas
loop
push
loop
add
mov
push
mov
and
dec
int3
popf
xchg
aam
call
dec
sbb
out
and
das
adc
add
fldt
sub
cmp
jbe
mov
jg
lcall
scas
sub
add
ss
in
mov
imul
pop
fcompl
rcrl
jo
out
dec
stos
inc
pop
ljmp
lods
divl
sbbl
mov
stos
xchg
cmpsb
sub
add
sbb
and
out
leave
jae
or
stc
push
imul
mov
xor
xchg
mov
fmull
adc
xlat
xor
js
js
hlt
and
daa
lahf
cmpb
int3
les
icebp
arpl
clc
cmpsb
clc
pop
or
add
push
mov
out
aam
push
sahf
mov
and
fidivrl
or
bound
dec
mov
test
cmp
cmc
add
push
pop
xlat
cmp
adc
sahf
nop
jge
jno
fcmovnu
add
das
leave
sarl
or
jmp
adc
add
shll
jae
jmp
cmp
jecxz
jle
out
or
ret
enter
inc
imul
jns
nop
pop
movsl
or
ss
loopne
aas
inc
push
xchg
loopne
and
out
pop
mov
mov
jbe
enter
xchg
mov
jo
pop
push
sub
int
mov
lret
and
out
xor
push
mov
jo
mov
aas
sbb
cli
dec
sbb
xorl
sub
dec
cs
xchg
sub
popf
daa
nop
mov
or
cmp
jle
add
icebp
or
or
sbb
adc
pop
jnp
rorl
jg
sahf
jg
adc
jns
jecxz
adc
xor
xorb
out
dec
xor
add
push
xchg
pop
stos
push
loopne
mov
lods
inc
int3
bsf
push
das
out
mov
mov
in
mov
adc
out
mov
or
daa
xchg
inc
into
in
add
or
add
mov
mov
sub
xlat
sub
addr16
mov
pop
pop
adc
fisubl
dec
sbb
testl
mov
jb
add
rcrl
xchg
ss
str
cmp
push
push
mov
icebp
jmp
mov
jno
mov
in
lds
sbbl
inc
sti
imul
pop
jae
cld
mov
icebp
fidivrs
test
getsec
aaa
int
addr16
sahf
dec
rcrb
push
xchg
jae
test
jg
pop
cltd
dec
sahf
test
cmp
inc
push
popf
repz
out
push
insb
enter
data16
mov
sub
add
mov
ja
mov
jbe
repz
cmp
add
lret
mov
aas
mov
mov
sub
mov
hlt
cwtl
mov
ljmp
daa
mov
in
addr16
insl
pop
pop
xlat
adc
lcall
mov
pop
dec
es
push
pushf
xor
lods
cmp
inc
jecxz
lods
divl
adc
xchg
push
mov
les
inc
jae
fbld
mov
imul
ds
repz
js
in
scas
ret
mov
xor
mov
cmpsb
arpl
nop
fs
mov
dec
push
jbe
mov
inc
ret
std
cmp
jnp
xchg
clc
fdiv
cltd
pop
mov
jmp
call
add
pop
dec
mov
pop
in
aas
stos
adcl
dec
test
daa
outsl
lds
jge
cmp
or
cmp
pusha
adc
sub
cmp
and
iret
leave
pop
or
enter
sub
sub
lcall
pop
dec
addb
out
fsubl
mov
adc
adc
aas
movsl
aad
mov
jb
lds
shll
das
lods
mov
es
pop
jo
cmp
cmp
and
mov
pushf
gs
push
mov
sarl
scas
clc
inc
sub
lahf
mov
in
or
dec
arpl
pusha
cpuid
repnz
mov
mov
push
add
neg
je
popa
adc
inc
leave
sbbb
pop
das
jmp
xchg
pop
cmc
std
mov
cmp
loopne
lret
and
sarb
sub
cli
pop
adc
das
fs
ja
mov
pop
arpl
ss
ret
sub
subl
add
cmc
aaa
out
mov
dec
hlt
add
add
jo
pushf
and
addr16
pop
lahf
or
cmpl
push
mov
cwtl
adc
lods
xchg
pop
call
adc
xor
fisubrs
ret
jg,pn
push
movsl
push
dec
add
add
popf
or
jmp
and
dec
sahf
rclb
xor
cmpsb
jb
and
fs
mov
mov
or
push
fsubs
mov
test
int3
inc
loopne
ficoml
push
sub
pop
jb
imul
and
fwait
in
jbe
mov
lret
data16
js
shll
mov
mov
dec
fidivs
jp
int
add
repnz
ss
cmpsl
addb
xor
shll
jp
push
push
adc
out
sub
test
out
xorl
sub
xchg
pop
int3
xchg
mov
test
testb
fcoms
cld
mov
fsubrl
out
iret
cs
lea
stc
pop
int3
inc
icebp
jmp
orl
dec
clc
into
lretw
jle
dec
jnp
int3
mov
pop
mov
lahf
xor
push
iret
pop
lcall
push
daa
fstpt
leave
xor
inc
mov
rep
mov
fldl2t
push
jmp
mov
gs
sub
insl
loopne
push
add
adcl
pop
cltd
sub
int3
cltd
pop
arpl
clc
icebp
mov
pop
aad
fcoms
fstpt
dec
fs
ljmp
into
repz
movsb
mov
push
mov
fidivrl
jmp
sahf
and
popl
pop
mov
pop
aaa
push
xchg
mov
add
lret
ficompl
dec
mov
popf
mov
dec
push
inc
fistpll
mov
addr16
mov
and
adcl
lods
add
push
subb
cmp
push
mov
inc
loope
cld
mov
push
sub
pop
rcll
adc
push
push
std
pop
xchg
jge
push
test
or
out
pop
sahf
dec
mov
inc
lds
or
lcall
icebp
push
jp
lret
push
outsb
sbb
dec
and
les
adc
mov
fsubrp
mov
push
pop
xchg
clc
mov
dec
sub
in
testl
push
cmp
popf
loope
xchg
mov
add
cmc
sub
pop
fnstsw
test
outsl
mov
push
jg
dec
mov
jb
cmp
addr16
xchg
mov
push
jb
jb
mov
pusha
pextrw
xor
loop
sub
pushf
xchg
fwait
add
sbb
cwtl
xor
sub
sbb
fdivrl
sub
stc
ss
int3
mov
adc
cwtl
icebp
add
ja
inc
lcall
ret
dec
add
idivb
xor
jg
shrl
sbb
fildl
bound
enter
or
ret
in
mov
jp
cmp
lahf
sub
filds
dec
dec
pop
call
jg
jle
push
iret
jae
stos
push
outsl
nop
lea
in
jo
mov
mov
push
int
repnz
cmpsb
push
aas
int3
mov
fs
jl
jge,pn
xor
jo
shrl
sbb
adc
jbe
movl
adc
sub
add
xchg
lods
in
add
add
lahf
pop
out
imul
aaa
es
lret
test
push
mov
and
adc
pop
adc
pop
mov
les
leave
pop
cmp
bnd
jbe
lods
pop
mov
ss
dec
mov
leave
loopne
mov
mov
push
adc
inc
cmp
cld
int
cmp
mov
push
sar
lcall
in
xor
out
lods
lock
aad
int
call
mov
jae
out
push
stc
mov
movsb
in
mov
push
fstl
enter
or
outsl
repnz
sbb
add
cmpsl
fistpll
test
pop
and
mov
mov
inc
push
imul
xchg
push
and
enter
stos
nop
lods
mov
mov
mov
mov
mov
mov
test
std
jl
xor
or
mov
push
xchg
imul
stos
rcrb
call
cmp
xchg
mov
pushf
and
add
dec
scas
ret
loope
push
cltd
adc
xor
pop
imul
lds
outsl
mov
bound
iret
or
mov
sbb
xchg
loope
addr16
add
inc
cmp
subl
and
rolb
mov
icebp
lea
ret
pop
mov
in
rclb
sub
frstors
mov
and
rclb
ja
adc
lret
jae
mov
shll
inc
jmp
push
jne
mov
mov
pop
pop
sub
neg
outsl
outsb
and
xchg
das
add
mov
xorb
adc
inc
data16
jle
int
popa
dec
insl
popa
cwtl
xchg
hlt
xchg
mov
stc
xor
lahf
inc
arpl
cld
repnz
jbe
das
adc
inc
sbb
or
push
les
rcl
das
mov
movsl
nop
daa
fwait
stos
cmc
inc
mov
mov
aad
aas
mov
add
and
sub
sub
add
pop
jle
cmp
cmpsb
movsb
fstpl
fs
mov
repnz
lret
lret
xlat
insl
dec
inc
cmp
into
cwtl
outsb
pop
mov
mov
jp
mov
push
mov
sub
xor
mov
push
pop
mov
xor
lret
fldenv
iret
lods
scas
mov
sbb
jnp
ja
iret
pop
das
and
sahf
sub
fiaddl
aad
out
out
repz
pop
cmp
push
mov
aam
fs
imul
adc
insb
push
dec
jmp
enter
pop
jae
adc
ret
sbb
inc
inc
and
and
ss
xor
xor
push
sar
stos
je
sub
movsl
sub
pop
cmp
cld
std
xchg
popl
lds
shlb
dec
icebp
jbe
lahf
ret
outsb
fs
add
add
in
dec
adc
ja
out
jno
pop
imul
pop
jno
leave
outsb
add
jle
push
das
fildll
mov
idivl
push
jno
es
in
push
test
aas
jl
ljmp
shrd
mov
cmpsl
sub
inc
scas
outsb
shl
sbb
ja
fdivl
outsl
or
ljmp
cli
jne
jb
push
call
mov
cli
inc
xlat
fnstsw
mov
mov
jmp
adc
xlat
pop
mov
add
mov
imul
cmp
xchg
repz
repnz
cmp
hlt
add
lcall
xor
and
cmpsb
pop
in
dec
add
and
in
int
push
lods
push
fucomip
pop
pop
pop
lods
les
or
aam
add
inc
jmp
in
in
adc
xchg
jecxz
popa
cmp
inc
xor
imul
push
pusha
push
test
mov
sbb
mov
push
jns
fimuls
mov
inc
insl
jecxz
push
nop
addr16
lods
mov
aam
or
js
js
aas
rcl
add
ss
cli
pop
stos
dec
sbb
movl
popa
sub
dec
lret
xchg
dec
xor
mov
loop
or
mov
jge
fs
orb
jns
popa
dec
xorb
cltd
pop
fimull
je
xchg
das
dec
add
pop
cmp
mov
jb
add
push
pop
xor
or
push
sub
out
push
push
loopne
xchg
pop
xor
dec
lahf
enter
dec
out
andb
push
pop
cmpb
das
sub
int
jnp
pop
xchg
or
popf
mov
mov
dec
push
push
ss
sbb
inc
sbb
push
sbb
popf
fidivs
in
dec
fwait
jp
dec
fsts
or
ret
push
cmp
xchg
popa
out
outsb
pop
repz
mov
pop
or
aam
sub
repz
vorpd
cmp
test
lahf
es
lea
movsb
push
sahf
fstl
gs
nop
mov
dec
push
mov
loop
test
and
stos
nop
imul
sti
inc
mov
test
sqrtps
cmp
outsb
imul
test
sbb
jl
loopne
rorl
add
lcall
hlt
ja
and
fwait
adc
arpl
mov
sbb
outsb
cmp
aad
ftst
inc
std
pop
push
mov
iret
mov
sub
cmp
or
jmp
inc
int
jge
add
aaa
sbb
popa
dec
pop
or
push
scas
lock
inc
inc
add
outsb
inc
cwtl
mov
andl
popa
insb
cmpb
stc
sbb
aaa
dec
sbb
das
push
rcrb
movsl
or
ret
je
test
jb
mov
adc
into
mov
sub
fbstp
sub
sbb
jp
sub
mov
call
in
sarl
jo
xchg
sbb
sub
add
sub
rclb
imul
cmp
in
mov
testb
fbstp
cmpb
pop
sbbl
std
add
jae
rcrl
loopne
stos
or
inc
aad
orl
xlat
out
ljmp
insb
sub
xor
addb
flds
stc
fs
xor
pop
push
dec
xor
in
adc
add
cltd
jae
stos
cmpsb
add
lret
out
sbb
in
or
pop
stos
lea
sbb
in
iret
sti
in
add
mov
push
add
cmpsb
fdivrp
mov
daa
add
sub
jmp
into
mov
add
sub
push
bnd
fistps
data16
cmp
sbb
mov
mov
inc
rorb
out
push
sbb
add
imul
inc
mov
push
fs
or
mov
jl
sbbb
leave
mov
fnstcw
pop
push
lods
mov
xor
je
popf
rcr
mov
aaa
push
icebp
fcoml
mov
xor
dec
stc
push
dec
cmp
mov
lahf
adc
adc
ret
lret
fiadds
test
or
xor
xchg
inc
mov
lods
int
xor
mov
cmp
jno
sbb
leave
inc
pop
icebp
mov
dec
xorl
and
cld
cwtl
pop
xlat
pusha
jle
pusha
test
or
and
jns
jb
pop
xor
ret
scas
arpl
adc
push
jl
test
lods
push
and
test
push
sbb
lret
pop
xchg
into
xchg
adc
xchg
xor
data16
mov
mov
inc
mov
fildll
add
push
sarl
pop
xchg
mov
loop
mov
sbb
rcll
xor
push
mov
in
repnz
jne
loopne
sub
pop
test
nop
mov
popf
shll
lcall
mov
xorb
adc
mov
mov
mov
es
inc
push
mov
ret
sahf
stos
cmp
out
mov
enter
shrl
nop
jne
fadd
and
lret
mov
cmovp
ret
pop
out
lds
mov
loopne
pop
inc
dec
xor
mov
leave
or
push
sub
jl
push
or
js
jp
les
fstps
or
pop
dec
nop
iret
movsl
mov
sbb
mov
bswap
test
sbb
in
int
sub
mov
jp
inc
sarb
aas
sbb
inc
mov
xor
dec
dec
in
push
popa
xchg
pop
and
mov
sbb
push
mov
xor
push
mov
js
dec
adc
lods
sbb
xor
push
sbb
push
push
sbb
ds
mov
imul
or
inc
or
cmc
idivb
mov
dec
inc
ljmp
aas
lret
fdivrs
cmp
sub
and
jge
out
xchg
xchg
ror
out
mov
pop
adc
out
sti
fsub
push
mov
add
arpl
test
bound
lds
fs
rorl
jecxz
shlb
int3
mov
ss
mov
outsb
fdivrl
sbb
push
push
fcoml
dec
std
adc
mov
sub
adc
mov
mov
repnz
xchg
sub
sar
xchg
insb
cli
fcmovu
xchg
pop
dec
in
push
enter
jmp
cmc
sbb
jmp
stos
ljmp
cmp
jg
into
mov
andl
mov
mov
lock
cmp
xchg
mov
adc
xor
sbb
mov
aam
dec
add
add
outsl
push
in
and
fsub
pop
lcall
add
pop
sub
sub
daa
repz
mov
sarb
add
mov
aaa
orl
ja
hlt
pop
jb
sbb
mov
in
cmpsb
adc
xchg
sbb
pop
insl
jnp
dec
into
bound
repnz
xchg
das
inc
jne
insb
mov
sub
or
cmpsb
hlt
cmp
xchg
leave
pusha
mov
pop
or
push
cmp
mov
test
in
movsl
out
push
cli
sqrtps
in
cmp
mov
push
mov
pop
orl
mov
xchg
adc
into
movsb
aam
mov
sbb
mov
dec
mov
or
mov
pop
jg
or
or
dec
or
dec
outsl
cmp
pop
push
jp
nop
inc
jmp
push
xchg
aaa
cmc
scas
adc
stos
and
mov
push
je
pusha
loop
mov
testl
pop
jecxz
push
sbb
aam
mov
add
mov
push
inc
js
cmp
xchg
in
in
and
cmpsl
cmp
leave
out
rolb
cmp
in
in
mov
in
inc
push
inc
out
sbb
ret
loope
jnp
push
xchg
jb
adc
stos
push
jne
fwait
push
enter
enter
xor
xor
adc
rol
mov
add
imul
jl
loopne
in
addb
cwtl
shlb
pop
repnz
in
ret
enter
lods
adc
push
aas
push
pop
lods
push
xchg
adc
lds
jle
sub
imul
dec
dec
ret
mov
pop
mov
xchg
cmp
lods
push
inc
imul
les
shl
ftst
repz
jge
push
or
sbb
xlat
add
cwtl
in
imul
push
mov
pop
add
mov
dec
insb
xchg
pop
das
mov
jle
and
push
fisubrl
cs
inc
outsl
cmc
adcl
stos
mov
push
int
dec
mov
mov
jno
ljmp
xlat
adc
mov
mov
imul
and
inc
andl
adc
cs
pushl
sub
scas
jmp
sarl
push
shll
cli
jbe
inc
push
clc
xchg
pop
js
dec
iret
mov
std
clc
iret
cmpsb
and
sbb
xor
push
mov
cmpsl
jg
pop
jg
repnz
xchg
cmpsl
adc
inc
add
stos
ja
jmp
cmp
and
push
jp
int
mov
popa
cmpsb
sbbb
inc
pop
lret
mov
xchg
mov
dec
inc
cmp
jp
or
movsb
lods
lret
into
mov
mov
out
stos
mov
bound
aam
xor
xor
push
xor
add
add
sbb
push
mov
and
arpl
lds
aam
inc
int
pushf
adc
into
test
sbb
inc
cmp
mov
in
xchg
xchg
inc
test
aas
mov
xchg
xor
cs
sbb
or
movsb
mov
xlat
cmp
pop
xor
add
cmp
push
in
dec
int
push
xchg
jmp
mov
popa
push
lret
aam
push
out
xchg
leave
inc
xadd
das
or
out
call
mov
mov
cmp
fmull
jmp
jbe
and
repz
jmp
dec
lahf
inc
cs
mov
xor
out
sbb
pop
nop
sub
sbb
xchg
jmp
and
fiadds
push
into
adc
or
jl
and
lock
mov
into
pusha
out
mov
xchg
add
in
pop
xchg
fimull
or
bound
sub
push
adc
shlb
popf
ljmp
or
in
add
outsl
cmp
loop
xchg
pop
fbld
pop
mov
sub
inc
rol
movsb
dec
mov
push
dec
mov
rcrb
adc
gs
inc
mov
out
rol
adc
outsl
xorb
fdivs
jle
popa
adc
imul
xor
add
mov
idivb
xchg
shl
dec
iret
inc
or
push
push
roll
add
cli
mov
and
xor
stos
mov
mov
insb
add
inc
bound
into
in
inc
sbb
mov
mov
push
stos
inc
push
testl
rorl
ret
lret
sbb
in
cltd
jecxz
imul
xchg
rorl
repz
mov
out
pop
adc
nop
mov
push
stos
outsl
jmp
or
adc
sub
lcall
pusha
into
cmp
pushf
sbb
aad
and
dec
cmc
addr16
out
mov
aaa
fsubrs
dec
mov
xchg
data16
pop
xchg
inc
pop
fisttpll
das
inc
mov
idivb
or
sahf
mov
mov
loop
ret
jle
rcll
mov
call
adc
sahf
out
call
xor
cld
sbb
xor
movsb
add
enter
push
in
lods
push
cmpb
loopne
stc
loop
xchg
and
stc
aas
shrb
shr
mov
fsts
pcmpeqw
mov
inc
pop
mov
push
lock
icebp
push
mov
ljmp
dec
int3
hlt
ret
fiadds
cmpsb
jge
ret
jecxz
stc
enter
test
insl
push
jnp
push
rcrl
mov
shrb
mov
push
or
inc
outsb
in
xchg
mov
mov
aad
mov
mov
jp
mov
cwtl
out
dec
sub
push
out
and
xor
xor
lods
sti
dec
fstl
xlat
inc
jp
and
lea
xchg
pop
sub
fs
enter
out
mov
stos
shll
push
popa
je
and
prefetchwt1
push
mov
addr16
mov
testb
jno
mov
mov
repnz
mov
nop
sub
test
or
cld
lcall
sub
cmpsb
fwait
in
cwtl
ljmp
cmpsl
aas
sbbb
cmp
dec
mov
aas
and
loope
cmp
lcall
addb
ja
add
cwtl
cltd
or
stos
arpl
cltd
ss
sbb
aam
bound
inc
jae
movsl
stos
cld
lods
and
es
outsb
xchg
cmpsl
or
lock
jns
stos
inc
in
xlat
imul
ja
repz
in
aaa
test
mov
aas
jecxz
scas
fsubrl
mov
les
pushf
popf
call
in
in
std
aad
mov
and
lods
aad
or
mov
sti
aad
scas
out
and
adc
loop
mov
mov
pop
insb
xchg
test
dec
cmp
fwait
popa
sbb
push
insl
je
jmp
test
iret
xchg
inc
mov
movsb
idivl
and
sarb
sahf
mov
mov
repnz
hlt
dec
iret
andl
push
js
push
lock
cwtl
xchg
ffreep
sbb
mov
and
cmp
pop
fimull
js
mov
int
je
nop
adc
xlat
sub
out
add
xchg
andb
fdivl
and
sub
shrl
cli
lods
xchg
lret
js
dec
or
jne
mov
rcll
in
mov
les
mov
xorl
mov
cmp
adc
repz
repnz
mov
movsb
sub
jge
fistpll
stc
arpl
xchg
scas
repz
fisttps
mov
stos
inc
inc
fimull
mov
out
and
jmp
pop
lcall
sti
shl
ljmp
dec
xchg
xchg
outsl
pop
mov
clc
dec
push
mov
loopne
pushf
xor
jne
ret
lods
adc
fnsave
xchg
mov
sub
pop
incl
lret
or
cmpsl
mov
sbb
fsubrs
mov
call
rcll
loopne
leave
negb
ffreep
lds
hlt
mov
and
adcb
out
jl
cltd
add
jbe
mov
dec
push
enter
and
bnd
inc
cmp
xor
loope
push
std
aaa
pop
data16
adc
mov
test
cmp
mov
xchg
mov
jmp
out
gs
xor
xchg
outsb
dec
ds
add
pop
pop
sub
push
or
ss
push
inc
pop
test
push
cltd
pop
jge
fcomps
pop
xor
rorl
lret
pop
imul
sub
mov
lret
cld
sub
xor
inc
xchg
jle
xor
movsb
jb
cmp
icebp
cltd
mov
sbb
cmpsl
test
sub
pusha
fwait
dec
stos
imul
in
mov
mov
sub
shrb
cmpsb
push
adc
mov
test
mov
push
jl
ljmp
ja
mov
push
mov
add
cltd
js
push
mov
and
test
shlb
push
out
shrl
push
ljmp
pushl
shll
push
push
push
push
xor
mov
stos
pop
fcomip
or
lret
and
int
fdivl
jae
shl
in
dec
out
lock
ret
pop
sub
stc
movsl
jae
lds
push
jnp
rcll
fs
sti
sbb
movsb
mov
mov
jge
jg
loopne
xor
jns
sbb
push
add
imul
and
in
data16
jmp
ds
sub
je
mov
mov
xor
mov
xchg
leave
lret
mov
sti
adc
shlb
dec
lods
or
cmp
push
or
ja
mov
jne
xchg
xchg
lret
insl
mov
arpl
aaa
xchg
push
mov
test
daa
mov
jl
jle
xor
pop
push
push
sub
mov
lahf
mov
xor
int3
test
xor
xor
push
test
inc
mov
push
pand
sub
sbb
into
ja
xchg
jno
mov
cmpsb
insl
out
int
mov
cltd
jne
dec
sti
ret
lds
and
fcmovb
or
xchg
dec
push
pushf
adc
push
cmpsb
adc
fucom
js
loopne
in
mov
sbb
test
mov
nop
loop
mov
push
cmp
clc
es
repnz
cs
insb
pop
je
jno
fimull
mov
mov
pop
out
cmp
mov
xchg
xor
fmuls
push
test
or
mov
shrb
pusha
lret
arpl
xchg
push
insl
cwtl
xor
sub
out
and
xchg
fadds
aas
stc
mov
sbb
repnz
int3
xorb
fadds
out
and
add
jl
jo
cmc
mov
inc
lret
sahf
adc
popa
jmp
sub
cld
pop
shlb
fs
and
mov
das
mov
jmp
fcoms
int
dec
push
clc
outsb
fldt
repz
push
fincstp
xor
out
in
push
sub
aaa
mov
cmp
icebp
add
mov
xor
adc
data16
ljmp
and
clc
mov
mov
xor
pop
ljmp
xor
lods
push
ja
and
lods
shl
sub
or
push
loopne
nop
xchg
adc
or
out
xchg
mov
adc
mov
add
inc
adc
out
mov
push
xor
into
xlat
sbb
test
dec
mov
xchg
adc
pop
mov
mov
mov
xadd
and
inc
mov
sub
inc
loopne
test
push
mov
and
dec
xor
push
jecxz
xchg
es
and
or
mov
pop
or
push
repnz
lock
inc
orb
out
adc
mov
inc
sbb
mov
test
push
in
or
xchg
shrb
push
mov
mov
clc
aad
add
cmpsl
out
call
mov
jno
jo
push
jne
sar
aaa
inc
jo
jne
fisttpl
push
shld
fisubl
push
jl
and
dec
sub
pop
dec
lds
mov
sbb
js
sub
cmp
insl
mov
data16
jae
out
fadds
dec
stos
sahf
xchg
xor
jp
or
arpl
inc
sti
inc
mov
movmskps
lods
mov
push
pop
mov
pop
xchg
pop
or
xchg
jbe
clc
cwtl
aam
data16
rol
sub
inc
aaa
mov
xor
inc
push
faddl
cmpsb
xchg
ret
leave
mov
jl
cmpsb
or
inc
adc
add
add
jno
lret
and
dec
dec
pop
insl
mov
add
cmpsl
sbb
push
loop
aad
mov
add
dec
test
popf
xchg
je
jb
fildll
jo
fimuls
loop
sbb
jmp
imul
push
std
dec
adc
xchg
cmpsl
push
cli
adc
dec
mov
lods
movb
jnp
mov
jo
inc
mov
out
push
popa
sub
cmpsl
push
cmp
test
fdivs
mov
cwtl
outsb
divps
outsb
and
and
mov
cld
mov
frstor
xchg
sub
sti
sbb
jecxz
jle
mov
popa
lds
cs
cmp
out
lcall
pop
test
push
pop
mov
mov
adc
stos
negb
call
push
test
fdivrs
mov
push
mov
cmp
cmpsb
test
xorb
jne
inc
adc
push
ret
xchg
cmp
add
dec
insb
ret
js
mov
into
fbld
or
js
clc
pop
mov
xchg
aas
mov
adc
or
nop
pop
cmc
loop
xor
add
sub
shll
movl
add
or
shll
xchg
fidivrl
es
lret
sbbb
movsb
mov
push
cmp
dec
jecxz
cltd
cltd
shlb
aas
mov
add
xorl
cmp
mov
mov
xlat
outsb
push
inc
cmp
mov
sar
mov
fisubl
es
clc
push
cwtl
jp
xor
das
hlt
cli
aam
sbb
inc
pop
stos
cwtl
add
mov
jnp
cmpsl
idivb
es
daa
jnp
xchg
cs
test
cmp
shrb
and
mov
addl
out
repnz
aas
xchg
stc
push
mov
push
mov
pop
push
clc
push
ds
fcoml
adc
test
insb
fwait
cltd
fisttpl
add
imul
popf
cs
dec
clc
adc
inc
cmp
lret
xor
push
or
mov
fs
push
pop
clc
dec
mov
jne
outsb
lahf
mov
jp
outsl
clc
cmc
add
mov
inc
xor
inc
xchg
into
mov
imul
leave
icebp
add
mov
cwtl
fs
hlt
jb
imul
and
in
into
pop
push
xor
loope
out
fnstenv
sub
dec
frstor
mov
jno
je
cmpsl
inc
out
pusha
mov
sub
jl
out
push
enter
mov
or
xchg
xchg
xlat
xchg
dec
xchg
and
clc
jb
pop
sbb
pop
jo
fdivs
mov
pop
push
inc
sub
imul
mov
insl
xor
iret
mov
in
push
add
inc
jmp
outsl
inc
push
ds
ret
out
cmp
cs
xchg
test
mov
adc
add
mov
out
adc
int3
mov
mov
shrl
mov
pop
outsb
daa
sbb
mov
sarl
push
and
adc
inc
iret
out
push
repz
stos
xor
and
cmp
loope
mov
cltd
ja
and
test
ja
cmpsb
pop
push
jnp
pop
mov
lcall
cmpsl
adc
xor
scas
fdivrl
popf
sbb
mov
aas
cmc
les
mov
imul
test
xchg
icebp
scas
sti
mov
movd
test
scas
jge
in
aad
insl
sub
jmp
and
xbegin
bound
insl
mov
mov
mov
add
jp
push
pop
mov
xor
roll
or
out
mov
xor
hlt
lds
dec
sarb
mov
imul
jnp
jbe
push
or
fidivs
jbe
sahf
lods
mov
negl
out
inc
or
jno
mov
dec
std
jns
push
lret
or
insl
xchg
adc
aad
xchg
xor
pop
jno
and
mov
aas
jo
mov
xchg
rcl
int
lcall
fadds
divl
subb
icebp
shl
xchg
addr16
hlt
push
cwtl
in
mov
cwtl
pop
loope
gs
lea
pusha
jbe
inc
sti
mov
mov
aaa
iret
fnstcw
push
sub
stos
aam
and
adc
cwtl
sub
cmp
pop
push
lods
or
xor
cli
mov
ret
mov
push
or
repnz
push
or
inc
sbb
pop
xchg
outsb
mov
iret
daa
add
xor
ret
mov
testl
enter
mov
enter
pop
mov
arpl
fwait
sub
shlb
jo
xchg
jnp
stos
cmc
push
add
divb
xor
test
pop
push
movsb
or
test
add
lods
jle
lahf
xchg
out
xchg
or
mov
lcall
mulb
sub
or
pop
ljmp
jnp
out
jmp
cmp
out
push
dec
dec
shrl
repz
jb
cmp
cmovge
mov
lea
fisttpll
xor
mov
adc
pop
in
push
filds
and
adc
movsb
test
xor
pmullw
and
pop
adc
add
call
add
mov
adc
dec
mov
mov
inc
sub
aam
add
inc
lret
scas
andb
data16
mov
loope
push
int
push
imulb
loop
push
inc
inc
aad
inc
jge
jmp
bnd
stos
and
sub
dec
dec
xor
inc
es
bound
dec
and
testl
es
cmp
jne
out
insl
out
sarl
jae
cli
decl
jecxz
cmp
cmp
add
mov
or
dec
loopne
pop
je
xor
loope
mov
stc
test
sub
call
flds
cld
in
jns
push
ljmp
add
sahf
ret
fs
mov
addr16
sub
les
out
inc
push
adc
jne
inc
insl
xor
inc
dec
leave
movsb
push
jle
shll
test
int
fwait
mov
jl
jbe
ljmp
cld
daa
sbb
scas
push
loopne
incl
jl
xor
lock
in
notb
and
aad
out
inc
stc
inc
inc
mov
push
add
pop
lret
icebp
fisubl
in
xchg
stos
icebp
out
mov
out
adc
sbb
jge
bound
aas
and
xor
in
sub
mov
lea
ftst
cltd
int3
iret
insb
dec
mov
iret
fwait
adc
aad
inc
jecxz
xchg
push
xchg
loopne
mov
iretw
or
jmp
push
lock
sub
sti
sub
call
xor
jae
clc
adc
fdivr
push
xchg
sub
inc
dec
mov
insl
stc
mov
jge
insl
pushf
orb
mov
mov
test
mov
scas
insb
pop
mov
in
push
mov
xchg
loop
add
scas
push
mov
push
add
fdivr
cli
adc
cmp
inc
test
xchg
into
rorb
pushf
adc
mov
outsl
lods
xchg
mov
fisubl
push
sub
lock
cli
test
sahf
iret
cmp
je
dec
mov
jno
adc
mov
repz
mov
jge
fistpl
cli
stos
ror
cmp
mov
mov
fidivrs
iret
xor
fmul
out
insb
pop
loopne
jbe
movsb
sub
push
movsb
stos
scas
xchg
outsb
sbb
mov
fcmovu
ds
mov
and
out
fiaddl
rolb
sti
push
mov
sbb
pop
mov
pop
push
adc
xor
fmul
popa
leave
mov
repnz
cmp
inc
hlt
pop
xor
mov
imul
sub
mov
pop
or
xchg
push
pop
test
push
les
inc
and
sub
push
mov
dec
incl
jo
xchg
lods
mov
jmp
cmp
fnsave
fs
fs
xlat
imul
aas
mov
or
pop
shlb
xor
push
pop
cmp
pop
insl
jmp
xor
int
push
int3
dec
mov
ss
add
dec
xor
push
fldenv
push
sub
gs
jmp
mov
stos
mov
int
icebp
dec
adc
cmpsb
rcrb
jno
mov
mov
or
or
lods
cmp
jo
pop
outsl
push
pop
rcr
cmpl
push
into
inc
pop
dec
mov
adcl
xchg
cmp
lods
icebp
loop
adc
jge
test
xor
cld
int
lret
xchg
add
decl
pushf
popa
sub
adc
xor
les
andl
pop
cmc
mov
jo
sbb
es
jne
pop
xchg
test
test
movl
pop
stos
icebp
cmpsb
push
loopne
jno
sub
jg
adc
cmp
dec
dec
fcoml
enter
leave
jg
arpl
aaa
je,pt
imul
sbbl
sbb
ds
or
sbb
dec
fs
lea
sarb
fsubs
ret
cmpsl
outsb
pushf
jmp
jle
pop
inc
jb,pn
xor
xchg
xchg
cmpsl
cli
mov
mov
and
dec
lret
cltd
lock
lds
paddusb
push
int
repz
mov
in
jne
leave
sbb
imul
cli
jno
jae
cmp
fucom
xchg
xor
sub
xchg
mov
fcmovnu
inc
mov
mov
mov
iret
jno
mulps
inc
inc
adc
pop
xor
inc
cmp
roll
push
std
or
outsb
mov
xchg
popf
pop
mov
dec
add
xor
int3
hlt
inc
lods
and
ss
xchg
es
xor
sbb
cmp
sub
xchg
mov
hlt
xlat
push
inc
test
xor
mov
sbb
push
out
bound
inc
pop
or
leave
shll
out
xchg
mov
push
mov
and
out
xchg
fbstp
mov
xchg
fcmovb
int3
das
mov
sbb
aam
lahf
divb
fs
sbb
std
dec
xor
fsubrl
out
test
ljmp
addr16
jns
push
jl
xchg
ret
xchg
je
sub
dec
jecxz
lods
cmovo
push
pop
jns
add
jle
jmp
mov
and
mov
std
ret
sub
dec
popf
mov
sarb
push
jecxz
test
xchg
jbe
arpl
notb
sub
mov
fcmovbe
cwtl
repnz
push
sbb
cmpsb
push
rorl
adc
cmp
clc
sub
mov
repnz
out
out
lret
shlb
fistpl
push
mov
or
xlat
push
dec
add
cmp
jns
jno
pushf
xor
push
push
pop
mov
xor
movl
das
adc
test
int3
dec
mov
outsl
out
add
out
sti
orl
push
cmp
fwait
mov
nop
mov
jnp
into
sbbl
and
hlt
nop
jae
add
xchg
stos
shll
pop
fs
shlb
pop
fucomp
inc
pop
cltd
mov
push
in
stc
pop
dec
cmp
mov
xchg
lods
adc
pop
in
dec
or
in
sub
lods
outsl
push
clc
push
mov
jae
stos
sub
into
shrl
mov
outsb
mov
inc
xchg
adc
jmp
aad
negb
imul
push
or
mov
movsl
stos
outsl
scas
or
and
in
loop
and
cwtl
mov
add
into
jmp
mov
hlt
ja
fs
mov
js
in
test
dec
sub
xlat
stos
stos
and
dec
test
ds
jb
insb
sti
lock
test
push
jae
scas
addr16
cmp
jo
xchg
aam
pop
sbb
cmpsl
mov
jbe
xchg
dec
mov
mov
les
pop
xchg
mov
gs
inc
and
xor
cmp
daa
jno
jmp
mov
and
jmp
outsb
sahf
fidivs
jmp
mov
sarb
stos
fnstcw
fwait
cld
add
cs
add
test
shlb
push
mov
fstp
xchg
or
pushf
mov
int
sbb
mov
push
jno
mov
out
inc
xchg
or
jg
lods
negl
cmpl
insl
pop
nop
mov
mov
add
or
push
cltd
aaa
xor
mov
jbe
cs
filds
mov
jae
outsb
mov
jmp
cwtl
mov
stc
lods
sbb
mov
pop
pop
das
inc
gs
add
cmp
jge
jne
jbe
sub
lea
stos
mov
loop
xlat
mov
cli
adc
jb
cmp
imul
or
imul
inc
and
shll
jb
out
sub
sub
int3
hlt
sub
inc
outsb
icebp
call
lds
popa
ljmp
shlb
mov
xchg
xor
shrl
sub
fwait
adc
addl
sub
ds
push
xchg
inc
movsb
loopne
pop
popa
popf
and
and
int
add
scas
bound
adc
iret
pop
add
iret
cli
cmpsb
xor
sbb
out
or
pop
fs
xchg
arpl
in
push
das
aad
sbbb
dec
push
aas
sbb
and
fcompl
dec
push
pushf
inc
ljmp
pushf
sbb
daa
loop
cwtl
aad
out
in
xor
sub
push
push
dec
aas
addl
cmp
mov
in
test
xchg
jp
sbb
inc
dec
subb
jbe
push
and
sub
out
into
sub
scas
inc
jbe
adc
das
sub
scas
cmp
mov
fsts
loope
and
jae
xor
xor
push
jnp
or
sub
gs
pushf
imul
jns
xchg
push
jbe
nop
push
jmp
or
mov
je
pushf
fwait
ret
adc
out
popf
push
push
xlat
pop
mov
and
hlt
repz
rolb
xchg
xor
ret
pushf
lods
aaa
dec
imul
fsubs
push
sbb
mov
cmpsl
push
sarb
xor
test
pop
js
pop
sub
call
lahf
stos
das
jle
lcall
add
in
push
cmpsb
cmp
call
std
les
xor
cmp
xlat
push
push
add
cld
stc
repnz
pop
fistpl
fmul
sarb
into
jmp
adc
mov
nop
push
push
out
inc
and
inc
xchg
jns
rcl
lea
adc
jle
mov
xor
stos
popf
sbb
lret
xor
push
ja
push
jo
scas
into
cmpsl
sub
js
mov
imul
push
sub
ret
ja
fadds
or
into
push
dec
roll
int3
imul
test
jecxz
sahf
in
ret
idivb
fs
mov
push
aaa
lock
dec
jle
add
hlt
pop
out
inc
fwait
int3
or
pop
std
mov
xchg
dec
xchg
pop
cmp
adc
mov
sahf
cli
repnz
loope
and
test
pop
mov
jge
xor
or
fs
stos
and
jne
pop
fldt
push
loopne
repz
cmpsl
mov
rcll
pop
lds
out
cmp
shrl
jno
inc
mov
adc
push
aaa
fadd
push
jnp
lahf
loopne
pop
dec
notb
popa
leave
fcompl
out
adc
fnstenv
mov
call
imul
cmp
lods
sbb
jns
pop
pop
cmp
popa
and
jno
dec
enter
pop
lds
inc
out
pop
imul
popa
in
mov
and
aas
inc
sbbl
jmp
pop
add
sahf
insl
and
nop
sar
cmpsb
adc
test
out
test
movsl
pop
decb
and
call
pop
repnz
test
sarl
xor
fcmovnu
jle
call
jge
ret
and
test
mov
and
push
out
clc
dec
cs
push
jo
arpl
clc
xor
xor
xlat
mov
cmpb
stos
jle
pushf
cli
inc
cmpsl
mov
pop
push
dec
rorb
mov
movsl
popf
inc
mov
test
in
mov
cmp
cmpsb
scas
shl
daa
and
or
mov
adc
mov
push
push
cmp
pop
cmp
jo
sbb
mov
cld
std
repnz
rcrl
subl
jecxz
mov
aaa
adc
ret
in
scas
inc
mov
dec
pop
ss
daa
insl
fucomi
ss
adc
les
scas
cmc
stc
sbb
dec
adc
fdivs
push
into
cmp
jmp
and
loope
lds
dec
dec
enter
or
ret
cmp
jno
rolb
mov
or
xor
cld
sbb
je
scas
and
lret
cmc
jp
cwtl
cmc
fstl
push
clc
rcrb
hlt
fldcw
repnz
nop
lods
push
jecxz
cwtl
adc
jl
sarl
dec
divl
enter
and
rcrb
xor
dec
inc
and
push
xor
mov
ret
icebp
cmpsl
or
sub
or
fldl
js
mov
xor
mov
pop
negl
addb
cs
mov
mov
push
es
repz
bound
adc
je
mov
push
xor
ret
popa
cmc
inc
movsl
into
pop
pop
rep
dec
or
mov
ret
xlat
clc
push
inc
fidivrs
dec
mov
and
or
das
in
popa
pop
pop
dec
ljmp
mov
xlat
pop
mov
aam
lahf
imul
adc
cltd
push
jno
test
bound
jmp
outsl
fcmovnbe
xchg
pop
sub
fs
repnz
movsb
call
out
add
outsl
movsb
sahf
rcrl
out
leave
jbe
dec
js
cmc
jae
imul
push
idivb
iret
adc
mov
push
gs
xor
in
insl
aaa
sub
push
ljmp
hlt
cld
mov
inc
mov
ret
fbld
mov
mov
mov
pop
mov
or
xchg
cmpsl
fsts
out
sti
adc
jo
add
or
movsb
hlt
mov
xchg
fistps
icebp
push
cld
test
jne
cltd
inc
mov
pop
data16
lahf
fbstp
mov
lds
or
repnz
in
lret
mov
fisttpll
adc
push
mov
cwtl
xor
pusha
jmp
jmp
enter
aad
or
sub
mov
inc
call
pop
in
int3
fldpi
push
inc
jbe
rcrl
jl
pop
popa
mov
mov
jns
push
dec
add
xchg
mov
mov
dec
pushf
jmp
pop
jns
xor
add
adc
mov
in
movsl
sub
xor
push
or
scas
or
adc
fnstsw
dec
and
fwait
loopne
adc
jno
std
cltd
xchg
loopw
js
scas
out
and
ret
call
clc
pusha
ret
jmp
mov
inc
xchg
data16
cltd
mov
iret
mov
lret
mov
into
fwait
loope
push
or
xchg
jecxz
int
jo
mov
xor
or
pop
mov
mov
fsts
hlt
fcmove
mov
mov
xchg
fnstsw
dec
mov
imull
push
jb
lret
mov
cs
sub
jno
mov
cmp
mov
pop
bound
mov
push
pop
loopne
in
push
mov
pop
ja
fists
daa
jns
je
addr16
cmp
mov
aam
pop
fiadds
fwait
mov
pop
push
xlat
cmpl
loop
cmc
pop
mov
mov
loope
fidivrs
aas
mov
lods
popa
xchg
push
pushf
ret
insl
dec
loopne
movsb
out
aam
imul
xor
cmp
jecxz
lahf
xchg
push
adc
jmp
rolb
sub
jae
adc
call
push
bound
and
pop
and
mov
les
mov
cltd
jbe
imul
aaa
mov
pop
stos
and
jnp
test
mov
out
ficoms
inc
nop
mov
xor
push
cmp
lret
std
mov
out
inc
pop
pusha
pop
mov
pop
adc
sbb
dec
cld
sbb
and
notb
xchg
jge
jmp
lea
add
xor
scas
add
or
orl
xchg
imul
jge
jge
cmpsb
xchg
subb
xchg
sahf
xchg
jecxz
push
or
mov
xchg
das
and
insl
sbb
divl
pop
mov
cmp
popa
mov
test
add
out
stos
push
mov
ror
mov
int3
sub
inc
cmp
je
rcrl
in
lcall
jmp
and
fistpll
mov
dec
xchg
mov
push
es
insb
cmp
sahf
out
mov
dec
jl
jne
sahf
orl
fistpl
mov
movsl
int
std
xor
imul
and
sbb
sbb
and
cmp
pop
mov
cmpsb
adc
and
cmp
in
popa
pop
cmp
ja
and
fcomp
fsubl
adc
sbb
jle
sub
xchg
outsb
xor
push
das
hlt
jle
ret
jmp
out
mov
mov
jmp
adc
negb
lcall
mov
adc
and
sub
push
xor
sbb
and
xchg
in
xor
popf
fidivs
enter
notb
loopne
add
add
mov
mov
add
iret
pop
mov
adc
add
cmp
jb
repz
add
mov
jmp
out
add
ret
arpl
pushf
mov
mov
cwtl
loopne
and
cmp
xchg
js
dec
movsl
xchg
and
pop
or
adc
std
out
jno
lods
push
jle
xchg
sbb
cmp
stos
jmp
fisubrl
cmp
xor
cmpsb
insb
outsl
sahf
inc
push
jno
std
jge
scas
jecxz
inc
push
shll
popa
bound
movb
scas
popf
xchg
cmc
ds
sub
nop
mov
add
fwait
jge
sbb
dec
scas
add
inc
pop
shl
jnp
pop
andb
xchg
in
pop
mov
stos
add
pop
xchg
pop
fcompl
enter
jmp
xchg
push
mov
adc
push
sbb
push
sbb
pop
enter
daa
and
lea
pop
flds
sbb
push
pop
xchg
aas
in
cld
popf
fistpll
push
aas
cli
lea
gs
fmuls
mov
jb
out
ret
data16
pusha
inc
bound
sarl
jb
mov
loope
push
pop
pop
aad
stos
lods
or
pop
xor
and
and
testb
aad
stc
mov
js
xchg
iret
mov
sahf
clc
stos
imull
push
stc
inc
jg
inc
js
pop
mov
sub
sub
jbe
and
incl
cli
sbbl
fwait
ret
jbe
mov
lds
sbbl
bound
test
xchg
pop
out
pushf
repnz
add
xor
adc
imul
pusha
daa
xor
sbb
addr16
ret
lea
dec
out
aam
data16
xchg
push
lods
sub
lock
push
fisttps
dec
inc
push
lretw
sub
mov
push
jl
push
out
jno
js
pop
loope
fidivs
jb
adc
push
add
in
ljmp
add
ljmp
inc
gs
or
nop
ja
push
out
or
and
test
or
or
xor
mov
sbb
aas
repz
iret
inc
in
mov
inc
push
sbb
push
rcr
xlat
cmp
movsl
ss
lret
sub
mov
or
pop
bound
lock
or
icebp
mov
es
sbb
sbb
and
cli
aaa
cld
stos
clc
cmpsl
xchg
and
dec
inc
lods
fwait
mov
int
xor
xchg
ret
jne
xchg
sub
cltd
push
sarb
jp
imulb
vpmadcswd
mov
jae
jmp
insb
pop
test
mov
pop
push
mov
out
adc
ss
push
add
and
arpl
jo
inc
mov
scas
fsub
xorl
jmp
jae
mov
dec
sbb
mov
addr16
andps
divl
dec
xchg
push
cmp
fdivrl
push
push
xor
sub
sub
es
je
xor
sbb
mov
dec
les
repz
mov
aam
push
out
xlat
pusha
orl
jns
mov
push
mov
pop
addl
insb
xchg
ret
cwtl
pop
fsubl
shlb
cmp
fcmovbe
pop
and
xchg
mov
sbb
and
rorb
add
mov
jne
dec
int3
dec
mov
out
mov
shrb
or
jl
adc
xchg
or
nop
insl
js
movsl
push
sahf
popa
sbb
push
inc
adc
mov
push
ja
push
bswap
loop
mov
add
mov
jge
xchg
out
push
pop
inc
and
data16
fdivs
adc
xchg
jno
rcll
insb
daa
sti
and
lea
stos
sub
mov
adc
sub
push
or
jae
xor
int3
dec
scas
scas
fs
mov
pop
pop
pop
xlat
mov
int
or
or
call
sub
loopne
fbstp
loope
mov
adc
adc
pop
insb
rcr
and
mov
add
sub
test
hlt
sbb
lea
cmpsl
pop
jmp
mov
inc
das
pusha
jne
jecxz
in
mov
sub
inc
inc
sbb
or
cs
adc
shl
pop
xchg
in
stos
or
test
jnp
frstor
ret
push
repnz
out
jno
pop
xchg
dec
or
ja
les
add
sub
cmp
or
mov
es
int3
movsb
xchg
cs
imul
add
sahf
dec
or
arpl
jmp
mov
pop
stos
and
sub
hlt
test
inc
and
mov
jne
push
clc
mov
mov
add
xor
enter
sub
or
add
repz
mov
aaa
mov
movsb
test
mov
ds
jne
push
lods
pop
mov
fmuls
loop
cld
and
cmpsb
movsb
rcll
das
cmp
mov
mov
pop
mov
aas
jg
pop
xchg
xor
mov
into
add
in
into
mov
idivb
test
dec
mov
mov
sti
mov
repz
es
xchg
mov
mov
outsb
cmp
sbb
fwait
mov
sub
adc
outsl
cmc
shrb
cmc
pop
or
sbb
sub
dec
out
or
sub
ret
pushf
roll
out
leave
adc
mov
cmp
mov
or
mov
test
popf
sbb
push
shlb
je
sub
cmp
jnp
xchg
lcall
xchg
xor
rolb
mov
out
and
mov
dec
and
das
mov
dec
mov
xchg
sbb
shl
fcompl
push
and
aad
shrb
sub
fisubl
cmp
idivb
repnz
iret
out
into
mov
ss
stc
cmp
dec
cmp
cli
push
or
pop
jle
sub
clc
jnp
outsl
stos
inc
mov
cmp
mov
outsb
sub
icebp
adcl
add
cld
and
adcl
pop
test
cmp
jo
scas
mov
push
fdivs
bsr
xchg
scas
adc
mov
sti
mov
clc
pop
fwait
dec
sbb
movd
pushf
mov
cmpsl
push
sbb
je
mov
lret
push
mov
mov
aam
in
jae
pop
stc
mov
cmp
ss
pcmpgtd
lock
or
xor
cmp
sub
adc
add
xchg
dec
mov
add
inc
dec
sti
fstpl
sahf
pop
lret
sti
add
dec
jl
movsl
stc
jb
incb
insb
xor
std
sbb
pusha
xorb
pop
jne
in
mov
sbbl
push
push
icebp
dec
and
loope
mov
std
aas
sbb
push
int3
add
cmp
or
imul
inc
inc
fisttps
data16
dec
mov
xchg
mov
sub
sarl
jnp
lret
je
das
das
std
int3
daa
frstor
out
mov
ret
imul
cmp
sbb
push
out
mov
ret
jne
push
mov
faddl
mov
add
inc
mov
xor
dec
into
clc
and
inc
inc
ret
inc
push
repnz
lea
pop
xchg
jmp
test
push
xor
popa
pop
pusha
cmp
std
push
cmp
jns
gs
lock
fcomps
movsl
inc
dec
push
subb
sub
scas
jb
sub
movsl
mov
dec
push
ljmp
mov
js
fisubl
push
loop
jge
adc
cmc
ds
scas
adc
inc
out
xchg
push
fistl
popa
mov
adc
test
repnz
mov
mov
add
mov
pop
sub
mov
out
out
or
testb
push
ret
mov
mov
div
xchg
loopne
aaa
xor
xchg
xchg
dec
fisubrs
pop
daa
mov
inc
dec
xchg
jno
das
jmp
sbb
lret
into
inc
xor
mov
xchg
cmpb
pop
fists
dec
arpl
or
push
cmpsb
notl
leave
adc
roll
cmp
and
jae
add
sti
stc
int3
jo
outsb
cvtpi2ps
mov
gs
data16
test
lds
adc
xlat
mov
inc
sbb
xchg
lods
rolb
lahf
fsubs
call
xchg
xor
sub
push
sahf
cmp
or
dec
cmp
adc
in
push
and
sbb
mov
lahf
and
mov
xor
cmp
aaa
loopne
mov
rorb
stos
cwtl
fwait
jns
sub
xchg
insb
xorl
test
jo
cmpsb
jl
adc
lea
add
lods
mov
mov
hlt
pushf
das
sbb
or
arpl
mov
dec
outsl
stos
rorb
sti
pandn
jg
sbb
cmp
mov
push
cmp
pop
fisttps
pop
dec
js
xor
add
push
jae
addb
sub
dec
fnstsw
or
jo
sarb
push
inc
leave
out
or
je
xchg
aas
loop
mov
aas
cmp
inc
cmpsl
daa
aam
jle
jae
cmpsl
add
xchg
mulb
cwtl
stc
inc
out
cmpb
push
dec
popa
xchg
jecxz
add
mov
daa
into
or
addl
mov
outsl
adc
xchg
xchg
push
lea
dec
popl
add
imul
sub
adc
inc
es
shll
pop
mov
outsl
sti
aaa
insb
loopne
dec
add
stc
push
imul
adc
jb
icebp
int
and
loop
loop
inc
iret
aaa
ljmp
push
jg
xor
jg
dec
or
das
mov
or
scas
dec
nop
addr16
call
jge
test
mov
or
ret
mov
out
jmp
sbb
loope
outsb
mov
push
out
mov
pop
sub
ret
sarb
imul
dec
and
dec
sbb
sbb
push
dec
sbb
jbe
add
pop
jecxz
xchg
insb
jge
iret
and
fucomp
fs
loop
cli
fistpll
and
enter
shrl
rol
xchg
and
outsl
imul
sarb
out
dec
mov
das
dec
daa
aad
outsl
setae
jne
lret
pop
mov
lods
mov
stos
add
adc
or
jbe
mov
and
and
negb
or
fld
sbb
jb
dec
sub
lods
and
fldcw
push
add
loope
mov
xchg
mov
fldenv
bound
es
push
int3
xchg
das
cmp
lods
push
sahf
imul
enter
and
adc
call
pusha
outsl
jne
dec
push
das
jmp
in
xor
in
adc
nop
out
rcll
mov
xchg
stc
movsl
sub
aas
imul
adc
cmp
or
cld
pop
push
cmp
pop
jmp
sub
lods
adc
fisttpl
fistl
fstpt
sbb
inc
lods
cmp
into
sub
mov
int
cmpsb
negl
push
push
push
daa
push
and
push
jp
pusha
out
bound
pop
and
and
loopne
clc
mull
sarl
aam
dec
lds
das
add
xor
add
stos
pop
nop
rclb
fwait
scas
sbb
xchg
cmc
xchg
mov
pop
jg
dec
xchg
pop
lahf
lock
bound
jae
lret
aas
inc
lret
mov
test
out
pop
push
in
aaa
cmp
mov
setbe
inc
icebp
aas
fsubs
adc
xchg
xchg
fnstsw
dec
jb
aad
pop
mov
je
xchg
cwtl
or
repz
es
das
and
shl
stos
clc
data16
sbb
sbb
xchg
mov
mov
in
notb
lods
pop
loopne
nop
in
lock
fs
jge
xor
lock
jmp
stos
mov
jmp
adc
lock
xchg
stos
cwtl
cmp
xchg
bswap
lea
enter
sub
jp
pop
mov
aas
lret
test
fs
mov
bnd
pop
or
or
sarl
sbb
sahf
insb
or
out
jmp
jno
xchg
xlat
jp
js
pop
push
int
test
sbb
add
pop
addb
sbb
rolb
sub
push
sub
cmp
sbb
sbb
into
jae
inc
pop
or
pop
fisttpl
push
inc
sbb
add
xchg
mov
cmpl
cmp
sbb
mov
xchg
pop
test
push
ret
mov
cmp
loopne
out
jae
std
jbe
sbb
in
pop
test
dec
push
mov
adc
rcll
popf
inc
mov
nop
roll
xchg
cmpl
lods
push
cmpsb
pop
xchg
aas
hlt
add
xor
addr16
push
fidivs
jg
jp
xchg
mov
repnz
xor
and
mov
lock
test
out
adc
pop
sahf
outsl
sub
ds
in
idivl
ljmp
lret
jb
push
push
inc
ds
in
push
sub
dec
and
leave
insl
mov
lcall
xacquire
sub
mov
and
pop
loopne
mov
add
es
push
nop
and
test
loop
cs
imul
and
fldcw
sub
mov
inc
cmc
mov
cld
je
add
das
aam
cmp
fnsave
in
mov
punpckhwd
dec
sbb
push
mov
xchg
adc
out
pusha
mov
lcall
jmp
jns
jo
jmp
push
or
insb
xor
jae
and
or
or
push
std
jne
es
enter
pushf
fs
imul
or
test
aaa
push
outsb
es
pop
jg
in
fwait
mov
ja
push
xlat
ss
out
lret
pop
pshufw
popf
mov
shr
jnp
loope
cmp
ret
add
cmp
repnz
fbstp
lods
jg
enter
cli
xchg
ret
outsb
mov
cmp
data16
inc
adc
jge
out
ficoms
je
mov
mov
pop
inc
xchg
push
inc
pop
mov
adc
subb
dec
cmpb
adc
mov
into
stos
insb
mov
imul
into
inc
and
test
iret
jno
test
cmp
ljmp
rcrb
add
adc
mov
mov
scas
jle
fwait
out
pusha
xor
pop
sbb
pop
push
shr
mov
add
aad
sub
rclb
jnp
mov
jne
ss
inc
fmuls
jge,pt
shlb
mov
jb
std
fstp
lds
shlb
add
adc
cmp
sbb
inc
mov
xor
into
mov
rorb
jnp
cmp
push
pop
negl
in
mov
addr16
sahf
mov
jns
cld
imul
xchg
lods
xor
and
outsl
dec
ret
ljmp
push
shll
push
jnp
divl
addr16
mov
adc
stc
pop
sti
sbb
add
mov
pop
adc
mov
cmp
sub
mov
cmp
add
mov
and
mov
repnz
sub
push
xor
lret
sub
fwait
mov
sahf
sub
idivl
cmp
int
fsubrs
sahf
pop
and
and
sbb
jno
jge
sbb
inc
ror
iret
incb
adc
gs
sti
push
enter
mov
pop
lods
in
mov
in
mov
jne
jge
push
inc
insl
xchg
das
jl
js
cli
nop
or
jmp
iret
lds
jae
xchg
pop
pop
jp
mov
nop
call
xchg
flds
or
shrb
adc
ret
push
popl
adc
call
and
mov
imul
add
test
or
xchg
in
imul
js
sar
or
faddl
out
in
inc
or
mov
les
and
int
es
testl
xor
push
iret
enter
dec
leave
imul
pop
push
jne
dec
sub
inc
cmp
movb
mov
sbbb
add
push
cmpsl
xchg
push
and
aad
sub
pop
mov
testb
dec
cmc
mov
mov
mov
jb
mov
add
jae
das
or
sub
inc
imul
jmp
pop
lret
inc
mov
pop
gs
jo
and
sbb
xor
sbb
add
and
cltd
cmp
loop
movsb
add
xor
mov
into
adc
jo
aas
fldl
push
imul
or
outsb
push
loope
das
sbb
stc
out
into
inc
iret
jnp
push
add
pushf
mov
pop
mov
int
xor
cmp
and
dec
mov
adc
insl
mov
insb
push
incb
jmp
ficomps
dec
pop
and
xor
inc
mov
mov
ret
sbb
orl
xor
cmpsl
or
jp
jnp
xchg
shr
push
lahf
aas
arpl
add
pop
imul
test
cltd
inc
mov
lret
or
lret
add
jg
ret
xor
data16
mov
pop
sti
and
ds
int3
xchg
fstps
adc
stos
adc
xchg
or
cmp
xor
jp
xor
cmp
scas
aaa
rcl
fbstp
nop
fistps
xor
push
int3
ljmp
ja
enter
sbb
jle
aas
jp
mov
lcall
sub
mov
movsb
xor
cltd
jmp
popl
lods
paddd
inc
ret
nop
add
loope
daa
jbe
gs
mov
imul
pop
xor
int3
push
mov
xor
cmp
ret
iret
push
cld
pop
adc
and
repnz
xlat
cltd
dec
jns
mov
fisttps
inc
push
jbe
movsb
xor
ds
daa
std
jbe
mov
lahf
mov
add
mov
inc
lahf
pop
mov
jne
add
clc
fabs
jnp
gs
fldcw
jle
ret
push
cmp
xchg
dec
mov
cmp
adc
add
dec
fidivrs
mov
stc
aad
clc
ja
popa
idiv
adc
xchg
movsb
push
cltd
fisubs
lea
pop
insl
ror
out
jne
mov
sbb
sub
out
or
cmp
xchg
push
jb
cmp
fidivs
xchg
in
fwait
mov
mov
adc
sub
inc
in
push
cmpsl
cld
pop
fdiv
and
addr16
mov
je
sbb
cltd
ret
or
mov
xchg
mov
lret
ret
mov
xchg
xchg
sbb
mov
bound
addl
add
sub
mov
mov
xor
icebp
push
pop
jb
xor
repz
imul
cmp
je
push
push
pop
cmp
xchg
data16
lods
sbb
dec
sub
push
mov
add
aas
in
push
push
cld
mov
idivb
jg
push
sbb
add
xchg
fs
mov
cmp
je
sbb
popl
sahf
and
mov
dec
sub
cmp
push
fadd
sbb
and
push
sbb
pop
sub
stos
xor
or
mov
cmp
inc
xchg
lock
xor
dec
xchg
pop
push
loope
add
out
sbb
stc
or
out
fdivs
mov
or
fcoml
test
sub
jecxz
push
loop
mov
into
lock
out
mov
xor
pop
sub
adc
jmp
sub
pop
fidivs
nop
js
daa
fnstcw
xor
fcoms
stos
sbb
ret
mov
psubusw
xlat
test
pop
js
cmp
scas
mov
push
or
scas
or
add
and
lock
mov
pushf
push
mov
das
clc
das
push
loope
cmp
and
cmp
in
and
mov
mov
or
lods
rcl
push
inc
push
push
xor
jb
jp
movl
or
mov
fs
mov
in
inc
movsb
mov
pushf
push
mov
inc
jnp
bound
mov
gs
repz
mov
fisubs
adc
mov
insl
cmpsl
fwait
sbb
shl
lods
mov
pmulhw
fwait
pop
call
dec
sub
jecxz
fisttpl
scas
adc
mov
repz
xorb
clc
inc
push
adc
inc
inc
and
lret
pop
aad
loopne
jecxz
xchg
push
pusha
xor
movl
dec
or
push
bound
cmp
ja
push
gs
xor
insb
pop
pop
sub
fldt
int3
pop
adc
fnsave
adc
movsb
scas
sti
jl
cmc
lret
sbb
bound
popf
int
dec
add
add
ja
mov
xchg
movsb
imul
mov
pop
bound
pop
test
sbb
movsl
aas
mov
mov
movsl
aam
jp
lret
inc
xchg
js
fisubs
or
mov
dec
push
or
mov
and
dec
ret
mov
lcall
into
cltd
sub
out
js
xor
dec
cmp
mov
and
loope
call
shl
xchg
mov
mov
jno
fsubrl
jecxz
fdivr
ret
jle
or
nop
xchg
pusha
pop
mov
xchg
cmpsl
lods
pop
inc
jns
sub
push
xor
test
mov
pop
mov
cmp
pop
pop
push
xlat
push
pop
andl
lcall
ror
imul
pop
xor
pop
in
pop
adc
arpl
lock
aad
jmp
test
push
adc
imul
xor
or
scas
push
add
fcoml
aaa
lcall
js
dec
stc
jno
and
jl
xchg
fisttps
aam
mov
mov
les
push
fcoms
dec
sub
or
lods
fwait
lock
mov
hlt
push
adc
inc
push
push
scas
rolb
or
xchg
jnp
xor
jo
arpl
cmp
sarl
jle
add
add
and
add
cmp
xlat
jo
idivl
adc
fcoml
jne
push
pop
push
aad
dec
stc
jge
cmp
mov
xorl
push
aas
jb
shlb
or
or
scas
mov
pminsw
pop
push
cmp
pop
lcall
fistl
roll
sbb
sbb
jb
test
xchg
mov
adc
shrl
call
sbb
dec
xlat
call
and
sub
cmpsl
sbb
fidivs
mov
xor
movsl
mov
push
in
test
mov
adc
dec
xchg
dec
sub
les
push
sarb
mov
aam
mov
adc
mov
cmp
or
mov
lds
mov
test
mov
subl
pop
jecxz
in
jmp
cmp
cltd
das
pop
push
aam
pop
pusha
das
cmpsb
pop
stos
adc
xor
dec
mov
in
or
xlat
rcl
negl
push
adc
fisubrs
cmpsl
bound
xor
jae
bnd
lea
xorb
mov
xchg
fisubrs
fnsave
xchg
int
mov
pop
hlt
daa
mov
dec
sahf
jb
add
push
fistl
pop
pop
cwtl
xchg
add
push
sub
xor
in
mov
rol
das
mov
fwait
xchg
rorb
mov
aaa
gs
dec
gs
test
cltd
orl
ficomps
iret
jae
xor
repnz
or
mov
repz
in
pop
cmp
push
sub
xchg
stos
mov
hlt
test
adc
mov
icebp
push
in
imul
cld
mov
fucomp
mov
push
hlt
arpl
insl
jns
jp
movsl
cmp
jle
cmpsl
inc
cltd
push
adc
repnz
adc
add
sbb
fistpll
stc
rcrb
mov
xlat
or
pop
jae
mov
jl
jg
fwait
mov
or
adc
xchg
xchg
mov
mov
stos
fs
fldcw
mov
pop
adc
iret
jmp
ret
cmpsb
idiv
insl
pusha
jne
sub
push
rdmsr
lods
jns
notb
insl
arpl
pop
insb
pop
std
lds
xchg
mov
mov
das
cmpsb
cmp
je
test
jmp
ja
push
push
mov
mov
call
xor
mov
add
sub
clc
mov
xor
sbb
sti
inc
das
fbstp
lahf
clc
or
aaa
lds
or
add
movsl
gs
add
jnp
or
inc
jmp
jns
cli
or
das
jo
fs
cmp
and
mov
aad
cmp
push
xchg
cmp
shr
movsb
shrb
mov
sbb
xchg
cmp
jg
rcll
clc
cwtl
iret
adc
or
nop
and
mov
pop
sahf
into
inc
call
jns
push
lret
jbe
cwtl
push
inc
jo
lods
mov
push
iret
ds
leave
or
ret
xchg
sub
loop
xor
mov
ljmp
cli
dec
fists
js
mov
mov
mov
push
dec
xchg
sbbl
out
inc
rcrl
in
fisttpll
sbb
lds
leave
inc
dec
sarb
push
push
test
xchg
jnp
rcpps
mov
jmp
jecxz
and
out
in
mov
fsub
xchg
jg
inc
xchg
js
pop
repnz
lcall
mov
push
lret
outsl
mov
xor
js
sub
cmp
pop
lret
sbb
cmp
mov
in
and
loope
mov
add
and
push
data16
cwtl
or
jmp
xor
pop
icebp
inc
arpl
ljmp
cmp
leave
mov
fsubrp
das
fsubrs
mov
pop
pop
mov
jae
inc
pshufw
cltd
shll
or
js
and
out
jns
adc
fldl
rorl
rcll
and
mov
jo
xchg
ja
cmp
aaa
rclb
rclb
pusha
pop
movsl
shlb
or
mov
cmpb
aaa
sbb
scas
mov
mov
cltd
pop
std
rolb
shll
xchg
lods
push
xor
adc
push
sahf
gs
in
sbb
adc
mov
sbb
push
out
jnp
jge
dec
mov
bswap
and
mov
faddp
mov
pushf
and
cli
add
int
stc
push
jmp
test
cmp
pop
mov
xor
pop
mov
xchg
aam
sbb
sub
mov
in
push
push
jbe
pushf
adc
mov
inc
mov
nop
movsb
loop
repnz
jecxz
mov
jns
push
adc
or
test
shlb
fwait
ljmp
mov
adc
rol
sbb
es
mov
shlb
push
push
popf
mov
cli
mov
enter
test
add
in
bound
dec
aaa
jecxz
lret
push
pushf
sbb
xchg
jno
mov
mov
pop
ss
sub
dec
mov
scas
int
cltd
cltd
dec
add
xorl
enter
pop
loopne
inc
mov
mov
sub
mov
fsubrs
mov
push
cld
dec
insl
pop
in
or
or
js
loopne
mov
xchg
mov
or
push
adc
and
stos
shl
enter
xlat
insb
leave
movsl
jg
scas
out
bound
enter
inc
aas
xor
in
ret
gs
add
jmp
mov
fdivs
popf
ljmp
gs
add
es
enter
add
ds
stos
mov
cmp
jge
xchg
sub
bound
cmp
arpl
call
xor
bound
sbb
adc
jae
jbe
mov
lret
into
sbb
mov
xor
imul
test
xor
push
push
in
adc
test
jmp
and
and
mov
enter
outsb
insl
dec
dec
stos
cmp
test
psllw
xor
mov
xchg
sbbb
inc
add
jns
or
lahf
push
and
sar
pop
nop
mov
test
cs
movsl
add
mov
jge
pop
push
or
movsb
xlat
rclb
outsb
push
into
add
mov
test
mov
pop
es
jg
adc
add
fldt
fldt
or
sub
push
popf
cli
push
stc
les
fsubrs
pop
lds
and
cmpsl
sbb
lods
addl
push
das
gs
mov
mov
shll
mov
aaa
out
sub
mov
xchg
lds
lret
adc
subb
xchg
jo
xchg
xor
push
pop
cmpsl
pop
in
jp
fs
inc
jnp
shl
or
push
cmc
xor
jl
sub
push
scas
cltd
repz
sub
mov
mov
pop
idivl
and
andps
fldcw
and
pop
jge
mov
mov
loopne
out
outsl
push
jmp
jbe
jmp
incl
jno
fs
jne
adc
and
outsb
jge
lods
pop
pop
pusha
in
push
pusha
cld
cmp
ljmp
cmc
ja
aad
int3
pop
mov
push
incl
jl
sbb
sbb
dec
int
outsl
sbb
sti
add
div
xor
adc
add
push
mull
inc
sub
mov
test
into
clc
pop
ja
and
jb
lods
insl
adc
push
jnp
mov
jnp
dec
inc
mov
in
fcomps
lds
addr16
xor
rclb
mov
jmp
add
dec
push
jge
test
mov
sub
add
adc
xlat
mov
test
imul
dec
subl
sbb
jecxz
mov
mov
mov
and
xchg
mov
dec
movsb
insl
or
inc
jl
les
adc
xor
arpl
xor
mov
mov
lcall
xchg
sub
push
mov
std
or
sub
loop
inc
movsb
lock
mov
inc
sub
lods
testl
xchg
or
jg
stc
inc
rclb
test
xor
int3
flds
aaa
lret
jb
xor
and
inc
dec
leave
xlat
pop
jecxz
fldl
xchg
mov
add
pop
sub
out
scas
outsl
inc
dec
jns
mov
loope
mov
push
adc
into
out
xchg
ss
enter
scas
int3
in
fst
aas
jns
scas
stos
mov
enter
out
jg
pop
in
shrl
lods
enter
jae
scas
lds
xor
dec
inc
insb
je
or
sub
or
xchg
xor
inc
pop
js
jnp
outsl
and
mov
xor
fistps
add
negl
jecxz
sbb
pop
adc
mov
xlat
jl
inc
xchg
push
cmpsb
daa
loope
cld
rolb
adc
jle
jbe
stos
shll
mov
mov
inc
and
das
sbb
fistl
inc
push
mov
lea
daa
sub
or
lret
mov
testb
inc
js
cld
mov
push
clc
loope
out
jae
xor
out
fsubrs
mov
in
push
jmp
sub
push
or
fistps
fisubs
arpl
aas
inc
add
iret
out
mov
push
jns
xor
mov
cltd
mov
jnp
rclb
pop
in
bnd
jecxz
xor
sub
push
sbb
or
outsl
cli
dec
adc
fidivl
or
push
mov
push
sub
fstpl
cmp
subb
pop
mov
mov
fdivp
rorl
xchg
jl
cmpsb
in
out
pop
xchg
gs
movsb
mov
xchg
in
sbb
and
mov
in
popf
les
addl
sub
adc
lcall
ds
mov
xchg
sti
lods
pop
mov
mov
cwtl
sub
or
stos
adc
aad
pop
out
sub
lds
xchg
shlb
fnsave
or
push
jno
mov
inc
push
mov
and
shlb
leave
test
sahf
xchg
and
aaa
dec
lods
ja
mov
sahf
sbb
pop
xchg
das
test
sub
mov
jle
insb
fisubs
test
sub
in
add
and
xorb
insb
out
mov
outsb
rcrb
test
repz
push
in
lock
mov
xor
scas
cltd
sti
sbb
mov
iret
sarl
daa
sbb
push
pop
std
adc
pop
lds
sarl
xchg
fwait
xchg
pop
mov
cmpsl
sub
jo
iret
xchg
movsb
inc
repz
mov
push
inc
stos
stos
lcall
dec
dec
lods
test
std
push
rcr
int
mov
mov
and
ret
pop
outsb
push
je
push
xor
and
imul
mov
sbb
push
pusha
inc
inc
pushf
inc
cli
cltd
pop
dec
mov
lret
sahf
adc
mov
andl
clc
mov
dec
pop
dec
sub
sti
ret
inc
pop
sbb
push
sub
jb
dec
popw
mov
jp
cmp
and
stc
mov
dec
sti
out
popf
ss
pushf
iret
shll
sarl
sahf
pop
sbb
psubusw
out
rorb
xlat
outsl
add
cld
mov
jp
inc
cmpsb
mov
sub
dec
cmp
adc
leave
in
ror
cmp
add
fistps
jb
sub
test
popa
mov
jbe
pop
scas
aad
xchg
xchg
je
ficomps
pop
insb
mov
push
shl
xchg
lret
jg
incl
pop
mov
or
pop
shll
jp
sbb
in
fiadds
movsb
fs
jp
xchg
je
decl
sbb
pop
sub
push
lret
cmpsb
mov
sub
fwait
pop
sbb
popa
lods
ret
cld
stos
add
gs
lret
fidivrl
xor
aas
pop
adc
and
cwtl
jg
fnstsw
and
fisttpll
cltd
jo
in
sarb
fsts
pop
add
sub
cmpl
or
xor
add
imul
popf
lds
std
ret
jg
xorb
adc
cltd
mov
ljmp
stos
cmp
outsl
andb
xchg
pop
add
div
or
or
icebp
mov
push
lods
sub
push
pop
imul
call
mov
mov
sbb
or
mov
dec
mov
aas
cmp
add
inc
push
imul
or
cmp
outsb
mov
lods
mov
fnstsw
or
bound
inc
sub
xor
pop
sti
repz
sbb
roll
sbb
dec
rol
jne
pop
aad
dec
add
push
enter
les
aad
bound
lds
cmp
stc
sub
mov
mov
xchg
ds
mov
nop
mov
fildll
in
not
movsb
out
data16
jecxz
scas
sub
mov
shrl
sub
inc
pusha
lret
rclb
sub
fwait
or
push
out
jp
adc
dec
sbb
in
cli
cmc
scas
add
and
push
jle
pop
imul
xor
sbb
cli
orl
data16
pop
and
aaa
leave
int3
movsb
jne
int3
jp
call
push
mov
es
cmp
jg
mov
dec
sub
mov
daa
dec
hlt
dec
lcall
mov
jnp
inc
xlat
jns
jae
mov
movsl
or
repnz
popa
xor
or
std
jo
xor
xchg
and
rolb
scas
and
push
dec
sbbl
adc
arpl
sbb
mov
or
insl
mov
pop
loop
jg
mov
jne
lahf
mov
and
mov
arpl
cmc
test
push
in
xchg
insb
ds
mov
rorl
lcall
lahf
lahf
imul
sub
cmc
jo
in
movsb
or
push
dec
nop
int3
aas
mov
pop
mov
cmp
imul
dec
xchg
cs
jno
mov
push
push
mov
push
ja
or
xchg
cwtl
loopne
xor
rclb
clc
mov
mov
jae
daa
cs
pop
sbb
jb
and
jecxz
je
inc
dec
mov
insb
lea
sbb
ret
cmp
push
jb
stos
or
dec
lea
lds
roll
lret
inc
and
addl
pop
clc
mov
lahf
and
xor
xor
mov
sub
mov
xchg
adc
mov
add
inc
dec
shl
test
mov
fdivrs
xor
lds
mov
fisubs
dec
dec
lods
xchg
jnp
call
cmp
lea
pop
push
cvttps2pi
mov
add
test
int3
mov
adc
mov
imul
mov
push
mov
mov
push
pop
and
push
jo
xchg
cmp
nop
mov
fsubp
imul
lods
pop
out
and
xchg
shr
adc
aad
outsb
mov
or
xchg
call
fcmovu
xchg
aad
pop
sbb
popa
mov
aam
cmpsl
mov
rolb
imull
add
dec
test
mull
insl
outsb
fmull
jle
pop
mov
das
dec
loope
mov
dec
and
iret
xor
sub
out
add
inc
andl
fistps
adc
out
lods
inc
jbe
mov
insb
adc
dec
inc
stos
adc
in
cmp
cli
push
jl
sbb
test
lods
add
push
scas
jbe
inc
sub
push
mov
lret
cmp
jno
xlat
fiadds
xorb
jne
mov
push
shll
push
mov
mov
into
or
jbe
bound
das
xchg
pop
jno
ret
pop
mov
push
pop
out
mov
dec
adc
daa
cli
xor
aam
es
cld
dec
out
in
add
xor
mov
sub
pop
iret
push
pop
pop
imul
pop
aaa
out
aam
outsb
mov
popf
fdivr
xor
xchg
fmull
inc
cld
ljmp
mov
sub
jno
inc
add
dec
xchg
jb
cltd
mov
mov
adc
push
idivb
je
imul
sti
or
dec
jbe
xor
rcrl
repz
ss
js
jns
rcl
xchg
pop
sbb
mov
scas
jmp
pop
push
xor
ja
and
jge
lea
out
push
arpl
sti
in
inc
bound
lods
dec
push
adc
mov
nop
out
sbb
or
push
pop
xor
out
jbe
in
sub
aam
mov
push
jnp
mov
pop
repnz
add
inc
sti
pop
cmp
lds
dec
int
push
jmp
cs
clc
aaa
or
aaa
jo
sub
dec
mov
ficoms
jecxz
push
popa
jo
popa
test
jge
cmp
repz
outsl
rorl
in
sub
mov
mov
push
outsb
push
mov
cltd
jg
outsb
test
imul
mov
cld
mov
mov
mov
loop
test
jmp
push
ss
aas
shll
lret
inc
stos
and
js
stos
mov
daa
in
add
pop
cmp
dec
add
xchg
lcall
xor
js
xor
pop
pop
fwait
pop
jp
lea
leave
rcrb
mov
xchg
insb
sbb
xor
int3
rorl
ss
inc
mov
incb
cltd
mov
lock
cld
pop
xchg
adc
push
movsl
cwtl
js
loopne
pop
xor
data16
ss
mov
jo
fs
mov
add
ret
dec
push
sbb
inc
add
cltd
or
inc
sbb
movsl
mov
hlt
push
or
stc
pop
cmp
cmp
es
pop
imul
scas
ljmp
mov
mov
stos
les
xor
movsl
add
mov
sbb
adc
out
gs
popa
decb
test
in
sbb
stc
mov
movsb
test
adc
vmread
nop
test
and
xchg
leave
push
data16
xchg
das
xchg
out
pop
xor
iret
mov
call
fbld
mov
mov
fsub
sbb
loop
mov
sub
iret
pop
sub
mov
xor
adc
lea
in
xorl
paddsb
sbb
cld
out
and
mov
jo
push
dec
imul
sbb
fisubs
sbb
pusha
xchg
mov
call
sbb
clc
push
mov
inc
push
dec
fwait
popa
xor
gs
inc
push
cmp
arpl
mov
and
push
pushf
movsb
cmp
sub
dec
aaa
repnz
fnsave
pop
bswap
call
jecxz
inc
fisttps
inc
dec
adc
ret
jae
in
pop
mov
adc
pushf
fnstsw
mov
hlt
fsubp
push
inc
fwait
int3
xchg
aam
ret
push
out
sti
mov
in
jmp
je
cmpsb
mov
daa
pusha
jo
push
jbe
sbb
in
cwtl
pop
cmpsl
lock
std
jbe
xchg
sub
ss
mov
movsl
or
mov
fwait
in
mov
fcompl
iret
mov
xchg
mov
mov
and
jp
in
cwtl
push
lods
pop
xchg
push
test
sbb
dec
xchg
call
xorb
push
aaa
pop
lds
jne
push
mov
or
ja
mov
cmp
jp
sub
iret
es
fwait
into
and
lahf
ror
fcompl
cwtl
or
cmp
les
call
test
mov
shll
fdivl
pop
mov
dec
add
stc
rolb
mov
jp
mov
xchg
push
mov
adc
stc
sub
iret
orl
loop
ds
dec
push
jl
fnsave
sbbl
pop
pusha
cmp
inc
push
inc
icebp
cld
lret
pop
loop
fdivrs
orb
sub
add
dec
iret
ja
mov
loop
in
ljmp
mov
pop
in
jle
mov
movsb
mov
jg
in
insl
mov
fwait
inc
sbb
mov
add
pop
mov
mov
push
test
xchg
aaa
arpl
mov
in
stos
mov
jns
xchg
mov
fnstsw
jg
sub
xchg
pop
jne
lds
jne
push
cmp
fwait
outsl
fldl
fiaddl
mov
hlt
iret
test
cld
in
mov
adc
shlb
and
dec
sbb
ja
orl
and
loop
xor
scas
scas
mov
repz
cltd
negb
xchg
cmpsb
adc
repz
sbb
push
sub
or
icebp
repz
test
stc
mov
mov
mov
cs
jbe
push
cmp
or
cltd
jns
int3
mov
movsb
pop
lods
test
cmpsl
xor
xchg
mov
cld
xchg
cmpl
mov
xchg
jo
xchg
sub
mov
out
sbb
pop
nop
imul
pop
fimull
push
adc
adc
push
push
xchg
outsl
mov
int3
nop
loopne
push
xchg
rol
ss
js
dec
shll
add
stos
or
test
push
push
jle,pn
arpl
jns
ds
stc
data16
mov
mov
push
orb
test
cs
in
and
nop
xchg
ret
sbb
jb
adc
ja
dec
or
sbb
test
mov
adc
ljmp
jbe
push
sbb
push
popa
sarb
mov
sbb
xlat
jl
aad
aad
setl
push
xor
outsl
push
rcl
sbb
cmp
mov
es
cmp
mov
sar
inc
stos
and
push
lock
gs
push
lods
fwait
mov
ret
sub
ss
test
adc
xchg
popl
cltd
loopne
mov
mov
or
push
push
nop
sbb
cs
add
mov
imul
aad
rolb
cmc
in
out
sbb
loopne
mov
div
loopne
enter
sub
xor
bound
mov
mov
or
adc
push
pop
int3
xchg
loop
xchg
nop
xchg
mov
fdivl
fisttpll
inc
sbb
jo
mov
insl
rcpps
dec
dec
test
cmc
push
xor
cmpsb
dec
jbe
and
mov
add
mov
sbb
clc
mov
and
test
xor
pop
aam
jno
out
jne
outsb
sub
int3
xor
ss
mov
int3
mov
inc
cwtl
and
push
lahf
hlt
cwtl
mov
loopne
out
xor
sub
sub
dec
and
jae
mov
mov
in
mov
push
aaa
mov
inc
sub
shlb
test
pop
lcall
lcall
data16
iret
lea
xchg
shrb
out
cmc
xchg
sub
lods
les
sub
inc
sub
rcl
addl
or
jbe
fwait
add
jecxz
aaa
and
push
mov
xchg
xchg
out
fldenv
in
bndstx
inc
ret
pop
hlt
sbb
into
lret
lcall
push
inc
pop
iret
lock
std
call
into
shll
or
or
and
fmul
jp
inc
iret
cmp
fwait
icebp
cmp
mov
sbb
mov
mov
and
dec
mov
repnz
into
cmp
addb
repz
leave
int
cmpsb
jne
dec
ss
mov
shl
xor
or
mov
jp
xchg
adc
je
push
mov
int
or
movsb
push
mov
sbb
hlt
filds
lds
and
int3
ret
adc
sub
xor
jnp
push
aad
xchg
sbb
xchg
pop
pop
in
lock
xor
rorl
sar
out
jecxz
cmp
and
movsb
lahf
cmp
mov
lea
es
add
and
or
xlat
adc
ljmp
js
pop
xor
push
xor
pop
mov
sub
mov
jle
int3
bound
jecxz
sbb
xor
sbb
inc
movsl
out
mov
jo
add
test
or
and
mov
enter
shl
push
jne
jg
push
xor
sbb
popa
and
scas
nop
add
sti
outsl
fs
cmp
push
call
cmpsb
mov
pop
test
cmp
pop
jge
push
sub
gs
mov
jmp
pushf
and
pop
stos
cmp
lea
adc
and
jns
cmp
pop
stos
mov
in
in
movsb
pop
cmp
repnz
push
inc
js
xor
js
into
stc
xchg
rorb
push
sbb
cmc
mov
mov
test
jmp
loopne
cmp
add
sub
sub
xor
add
sub
sub
inc
xchg
or
adc
xchg
push
xchg
xlat
shlb
xor
mull
fidivrl
dec
dec
subb
stc
inc
jecxz
dec
sbbl
cwtl
js
sbbl
add
cs
ret
adc
push
popa
pop
les
mov
out
mov
rolb
shrb
out
test
push
inc
adc
pushf
pushaw
popf
mov
jbe
adcl
xor
loope
mov
jns
mov
std
je
sbb
out
xchg
mov
add
pusha
jp
mov
pop
ss
rolb
icebp
test
xorb
ljmp
test
lock
mov
insl
in
push
cltd
mov
jbe
int3
loopne
popf
sub
sbb
sub
sbb
fwait
scas
into
int
int
test
adc
dec
aam
jo
stos
pop
sub
in
mov
pushf
aas
popa
pop
rolb
pushf
jne
pushf
sbb
test
and
mov
in
cld
out
mov
dec
and
mov
clc
out
lcall
pop
dec
add
mov
loope
enter
repnz
lret
stc
or
cmpsl
es
or
mov
xor
mov
out
rcrb
movl
sbb
adc
cmp
push
in
jns
jb
lcall
mov
test
or
popa
stos
int3
jns
and
sbbl
pusha
negl
lahf
rcl
or
xor
aam
inc
fwait
ljmp
mov
mov
sbb
cld
pusha
pop
fnstcw
mov
sti
lods
repz
push
add
push
loop
addr16
jb
outsl
add
mov
dec
jg
mov
sahf
xor
sti
int
push
cli
adc
add
and
addr16
fimull
xchg
pop
pop
daa
dec
gs
loopne
pop
or
xchg
ficoms
fcompl
mov
sti
nop
mov
dec
xchg
add
es
shll
adc
and
add
sbb
insl
mov
test
mov
in
xlat
mov
sbb
adc
and
and
js
loop
fwait
or
outsl
cmp
cld
jb
inc
sub
and
mov
test
out
xchg
add
out
push
ds
mov
nop
fiaddl
mov
inc
lahf
mov
sarl
adc
rclb
sub
lret
loopne
ss
jl
xchg
leave
inc
js
aad
gs
xchg
xor
mov
mov
lea
push
nop
inc
shrb
icebp
jno
sbb
cli
int3
mov
fiadds
in
repnz
mov
mov
pop
fs
scas
pop
xor
push
outsb
data16
sbb
ret
dec
adc
jecxz
repnz
bound
fwait
rcll
jp
push
inc
sbb
fs
pop
jp
sarb
ja
pop
mov
xlat
stos
add
pusha
and
fisubs
push
push
pushf
out
add
inc
testb
inc
jp
enter
adc
in
xchg
xchg
add
insb
jle
ja
inc
inc
mov
lods
orb
pop
mov
push
cmp
aas
enter
imul
sti
leave
push
mov
jmp
xchg
decb
jecxz
jno
into
sub
cmpsl
sub
movsl
out
inc
mov
jno
inc
push
jmp
lahf
dec
xor
rorl
clc
aaa
je
adc
sahf
add
cs
push
out
mov
lahf
lea
clc
stos
inc
addr16
xlat
test
lret
in
sarb
adc
mov
addr16
sbb
cmpsb
inc
fsubs
std
xor
call
jno
sbb
shlb
sub
stc
push
pushf
in
es
imul
in
and
xor
fnstsw
test
adcb
and
jb
sbb
mov
mov
cmp
cmpsb
stc
xchg
daa
cli
or
push
jno
or
mov
test
aas
out
jp
fsubp
sbb
lock
lds
shrb
ss
addl
cmp
fildl
jns
jbe
dec
adc
int
rol
outsl
imulb
pop
mov
mov
call
test
inc
pop
gs
jae
jno
pop
dec
dec
mov
pop
es
mov
je
inc
lcall
cmp
cli
mov
jmp
psubw
add
mov
es
xchg
rol
cs
inc
ljmp
ss
mov
push
mov
sarb
xchg
addr16
test
xchg
dec
ja
lfs
hlt
mov
and
rolb
sbb
cmp
test
out
cmpsl
xor
cmp
and
adc
data16
and
fiadds
orl
dec
jecxz
js
ljmp
dec
cmpsb
int3
enter
int
incl
push
inc
dec
inc
test
jo
dec
aaa
fwait
pusha
mov
fstpl
fsts
and
and
bound
lahf
mov
addr16
cmp
iret
aam
mov
repnz
lret
push
push
popa
sub
mov
inc
aas
daa
in
divb
mov
xchg
mov
dec
icebp
mov
xchg
add
push
inc
inc
scas
aam
stos
sub
xchg
loopne
push
inc
adc
orb
mov
test
dec
and
lret
add
dec
gs
xor
cwtl
add
repnz
ja
fwait
jp
inc
in
jne
in
jmp
dec
out
lea
test
cli
es
add
xchg
jae
flds
ljmp
ret
jmp
xchg
and
int
ds
sti
dec
sub
lret
addr16
rorb
xchg
mov
sbb
mov
cmc
jae
imul
cmp
cmp
lods
sub
in
cmc
add
jg
lret
loop
lds
cs
popa
std
cmp
jp
arpl
sub
pop
outsl
lods
ljmp
loopne
mov
aas
add
xchg
sbbl
clc
into
dec
pop
rorl
jno
mov
lea
aam
pop
pop
cmpsb
adcl
push
add
int3
icebp
jbe
movsl
jp
xchg
jmp
cltd
mov
dec
mov
ret
mov
clc
adc
mov
ds
push
lea
in
ficoml
cmp
aam
jecxz
adc
mov
pop
dec
mov
and
aam
iret
xlat
xchg
sub
test
jge
jmp
xchg
int
inc
push
mov
add
lock
or
dec
dec
js
fnsave
jae
leave
add
dec
sbb
push
inc
aam
sar
xor
in
jnp
mov
loop
mov
popf
popa
es
pop
xorb
ror
and
push
cmp
cmp
or
jns
mov
sub
rcll
push
sub
addr16
popa
ret
in
pop
aad
sbb
mov
and
mov
push
gs
mov
mov
mov
sarb
imul
das
inc
pushl
adc
inc
xchg
js
sub
xchg
inc
add
xchg
xor
adc
xchg
xchg
rcl
cmp
sti
xchg
inc
push
mov
mov
or
outsl
filds
inc
out
cltd
scas
push
enter
das
aas
push
shlb
nop
add
adc
iret
mov
sbb
aad
popa
loopne
pop
cmp
hlt
dec
pop
popf
and
adc
xchg
dec
in
int
jb
xchg
jle
mov
mov
das
orb
je
pop
mov
in
nop
xchg
xchg
call
adc
mov
jge
or
cltd
add
and
cwtl
lods
loope
jne
or
dec
je
jge
sbbb
daa
andl
testl
mov
push
clc
lods
sub
mov
mov
fsubrl
mov
icebp
fidivs
cmp
insl
mov
mov
sub
lahf
xor
addl
sbb
pop
push
sbb
lret
pop
xor
push
mov
or
repnz
mov
fiaddl
dec
je,pn
xchg
imul
mov
fsts
lcall
mov
in
js
adc
fwait
sarb
mov
cltd
ret
dec
call
js
xor
ljmp
and
push
mov
or
leave
jb
iret
push
loope
mov
inc
inc
mov
addr16
pop
sarl
rolb
fistps
jne
push
insl
and
mov
jb
aad
ljmp
pop
mov
inc
aas
sbb
sub
sbb
sub
inc
ss
cmp
das
adc
out
jge
ror
dec
rolb
sbbl
or
clc
pop
push
subb
sub
mov
add
decb
dec
mov
push
fmul
push
sub
in
mov
mov
cwtl
jle
repnz
fs
data16
adc
repz
stos
pop
popa
aas
jns
lock
addr16
sub
and
xor
sub
lds
arpl
sub
nop
xchg
ja
mov
jb
es
cli
ss
push
sbb
and
add
or
out
jne
inc
fldcw
pop
fistps
dec
mov
inc
popf
loopne
mov
mov
dec
sbb
adc
push
ret
imul
jl
shrb
mov
dec
test
push
mov
stos
xchg
stos
mov
jle
les
mov
xor
inc
stos
xlat
shr
add
imul
cltd
dec
sub
imul
or
imul
fcomip
xor
out
ficomps
jo
add
or
adc
sub
jb
cmpsb
adc
xchg
arpl
cmpsl
in
push
mov
fstp
or
cltd
test
inc
inc
pop
test
pop
mov
int
sub
dec
lcall
fwait
jle
stos
cltd
insb
xchg
adc
and
pushf
jo
jne
call
cs
idivb
cmp
fwait
dec
fdivrs
or
jmp
sti
mov
pop
cltd
inc
lret
scas
jb
ret
rorb
roll
sub
out
sub
push
call
mov
popf
mov
cmp
add
pop
push
inc
insb
dec
xchg
sub
push
jnp
mov
sbb
push
cmp
jno
in
cltd
ret
addr16
sub
inc
or
lds
sub
out
aam
je
test
movsl
imul
push
movsl
lea
pop
cmpsb
mov
mov
clc
mov
mov
push
mov
mov
mov
bound
cmpsb
leave
pusha
pop
dec
ljmp
adc
xor
je
fs
or
data16
add
vmovapd
push
xchg
xchg
or
data16
cmp
sub
lds
add
xchg
aas
pop
addb
mov
ljmp
xchg
imul
data16
iretw
mov
in
mov
cltd
repnz
in
jecxz
sbb
and
mov
xor
pop
push
mov
test
xchg
sub
loopne
call
dec
das
call
cmp
nop
dec
lcall
shll
fmull
jmp
in
ss
pop
adc
push
cmc
add
sbb
and
inc
popl
add
mov
lcall
popf
subl
mov
es
adc
dec
call
xor
jecxz
push
adc
je
push
or
cmp
inc
test
mov
sub
inc
fstpt
cwtl
adc
scas
std
jbe
mov
out
dec
or
bound
jae
aad
outsl
mov
xor
pop
and
push
faddl
mov
push
push
pop
in
xor
cmp
bound
mov
cwtl
ret
sub
mov
mov
inc
jmp
xor
insb
cmp
pop
rol
push
out
test
xchg
jl
add
stc
movsl
xlat
in
add
mov
rcrb
xor
sub
enter
mov
xchg
fisttpll
imul
mov
out
scas
push
mov
loope
aas
fbstp
dec
adc
mov
data16
dec
xor
in
sbb
jecxz
or
nop
aad
daa
sbb
insl
cmp
xor
and
mov
aas
dec
pop
mov
or
jb
xchg
out
popf
lea
pop
sub
mov
je
push
mov
cmp
xor
out
sub
push
das
aad
cmpsb
cmp
inc
sbb
shl
cmpsl
sub
ret
xchg
dec
sub
repnz
mov
sbb
cmc
sub
in
aam
dec
out
push
lcall
arpl
repz
and
je
or
int3
xchg
je
push
mov
fnstenv
add
pop
lods
mov
mov
mov
sbb
out
mov
out
mov
pop
mov
popa
or
lock
inc
iret
mov
lret
sub
mov
mov
cmp
jb
cmp
ljmp
jecxz
pop
xor
pushf
pop
imul
lcall
out
inc
adc
pop
pop
mov
inc
sbb
loopne
cmpb
mov
sbb
xchg
xchg
mov
xchg
popa
clc
push
sub
out
sbb
lahf
inc
dec
repz
in
fildll
push
std
mov
mov
xor
cmpsb
mov
adc
sbb
clc
lret
dec
mov
jb
leave
das
add
pop
xchg
cli
mov
testl
mov
mov
add
rep
fisttps
fisttpl
inc
or
add
je
lds
out
jb
repnz
movsl
fwait
push
aas
and
out
fidivs
inc
arpl
aad
pop
int
movsl
out
mov
cmp
loop
insb
pop
push
shl
adc
inc
gs
dec
loopne
out
add
out
adc
lcall
adc
jae
push
dec
stos
cmp
outsb
xchg
cmp
mov
push
mov
xchg
xor
into
sbb
fwait
push
insb
aas
mov
in
inc
adc
jp
rcll
or
insb
mov
test
mov
or
add
cs
jbe
push
jo
mov
cmp
cwtl
dec
and
std
inc
fsub
call
scas
mov
jnp
cld
int3
xor
loopne
aas
gs
mov
dec
xchg
lahf
jecxz
xchg
mov
inc
ja
popf
mov
fldenv
xor
cmp
das
sahf
xor
fldl
loopne
lock
or
hlt
pusha
xchg
leave
rolb
mov
or
fcompl
adc
jmp
es
packsswb
leave
imul
inc
mov
mov
ds
out
out
jecxz
mov
adc
mov
mov
rclb
test
adc
daa
sub
inc
jg
sub
icebp
and
ja
pushf
call
movsb
mov
jo
mov
scas
jns
xor
jg
push
push
bound
orl
sarb
and
or
sub
repnz
nop
int3
shrb
adc
and
adc
repz
ja
mov
mov
xchg
mov
mov
xlat
sub
or
js
xor
mov
jo
imul
arpl
cmpsb
jl
stos
jbe
mov
mov
loope
movsb
mov
js
push
idivl
push
pop
imul
xchg
daa
mov
mov
add
js
ja
scas
add
xor
sub
push
rcrl
add
xor
xor
mov
lret
and
jb
push
mov
fistps
add
mov
scas
push
rcr
jge
leave
jecxz
push
jl
fldenv
pop
mov
movsb
notb
roll
cmpsl
enter
ss
xchg
in
mov
sub
and
js
lret
aad
cs
pop
pop
dec
mov
lcall
gs
jae
mov
fcompl
outsb
imul
add
scas
stc
dec
mov
xchg
icebp
aam
dec
test
insl
xor
or
pop
mov
sub
loope
and
pop
mov
xchg
cld
out
mov
sub
adcb
mov
daa
lods
jns
push
cmp
arpl
adc
xchg
ja
dec
int3
push
clc
sti
sub
fmull
xor
sahf
adc
in
movsl
mov
mov
and
adc
push
or
lcall
imul
test
pusha
and
jecxz
mov
mov
adc
sbb
push
gs
xchg
ret
jns
out
dec
repz
push
pusha
sub
mov
mov
mov
rorl
xor
int3
push
addr16
mov
sbb
xchg
sbb
mov
add
shlb
mov
push
mov
movsb
xchg
or
clc
inc
xchg
stos
add
dec
shll
std
mov
insb
jmp
xor
sbb
subl
xor
fwait
mov
adc
pop
add
adc
loope
imul
jmp
imull
sahf
ss
or
and
insl
mov
daa
adc
popa
push
cmpsl
jae
dec
mov
pop
je
sub
daa
and
out
inc
stc
pop
arpl
mov
out
test
fldenv
and
xchg
xchg
jns
shlb
jno
mov
dec
sbb
ficoml
add
mov
adc
icebp
not
imul
movsb
mov
jns
sbb
mov
sub
add
ja
sbb
push
xchg
mov
cmpsb
mov
push
lahf
sbb
test
repz
stos
shrl
xchg
jno
outsl
inc
mov
dec
pop
aad
adc
fidivl
fwait
addl
jge
setp
in
sub
pop
or
sub
mul
xchg
xchg
aad
pop
arpl
lds
xchg
int3
push
cwtl
inc
cmpsl
incb
out
sub
scas
cmpsb
jecxz
ss
faddp
cmp
lods
mov
xchg
stc
dec
outsb
bound
xor
jecxz
stos
daa
push
loope
xchg
dec
rol
cmp
jmp
cli
ds
xlat
sub
shr
popa
dec
sbbl
fildll
jne
xchg
mov
addr16
hlt
ss
pusha
shll
test
mov
out
cmp
addb
xor
xor
popa
sub
push
mov
subb
rclb
mov
mov
jnp
sbb
adc
rcr
or
or
mov
sti
aas
inc
mov
xchg
pop
pop
mov
cmp
sub
sub
ret
cmp
outsb
adc
xor
jle
cli
test
xor
xchg
xlat
sub
pop
jnp
mov
pop
dec
cs
rorl
mov
cmp
sub
aam
mov
xchg
jns
sub
sub
sti
cmpsb
mov
sti
arpl
mov
call
inc
or
jp
adc
pop
jbe
stos
pop
rol
jg
dec
std
into
in
imul
fcoms
loope
mov
out
mov
fcompp
lahf
lcall
and
ja
push
mov
out
cli
mov
xor
add
mov
fwait
test
mov
das
jle
scas
pop
cmp
mov
fdivs
jp
pop
test
jp
push
sub
push
clc
push
adc
std
popa
mov
add
push
xor
lret
inc
mov
and
dec
gs
outsl
out
sahf
pop
lret
cwtl
adc
push
frstor
in
mov
mov
js
aas
dec
shll
jnp
dec
cmpsl
ljmp
cmc
xchg
pop
xchg
mov
jmp
fs
push
xchg
lea
rcll
pop
sbb
iret
out
or
or
xchg
test
test
or
xchg
sub
hlt
and
mov
push
push
std
lock
in
cmpsb
jb
or
test
dec
daa
mov
daa
arpl
sbb
xchg
clc
cwtl
jg
dec
cmpl
xchg
xchg
aad
outsb
into
je
pop
dec
cmpsl
adc
insl
mov
movsb
pop
and
scas
jmp
ret
dec
or
je
ja
sub
outsl
sbb
call
cmp
pop
push
cmp
inc
or
movsl
mov
daa
pop
xchg
scas
add
loope
int
mov
mov
shr
ss
xchg
xchg
push
xchg
mov
fimull
xor
inc
test
mov
pushf
push
fistpll
mov
pop
cmp
sahf
xlat
jge
xor
pop
inc
arpl
sbb
cmp
xlat
out
iret
cli
fwait
push
popf
aaa
scas
rorl
inc
ja
int3
mov
in
sub
js
or
dec
sub
pop
and
movsb
cmp
mov
sub
pop
cmovp
fiaddl
loope
mov
or
out
cmp
add
or
test
and
and
xor
clc
mov
gs
pop
xlat
jnp
xchg
inc
push
out
test
mov
inc
imul
dec
cmp
xor
adc
inc
inc
aam
pop
xchg
inc
insb
ret
mov
shrb
xchg
popa
insb
adc
scas
cmp
push
mov
addr16
mov
dec
int3
mov
mov
mov
xchg
mov
rcll
jecxz
cmpsb
icebp
pop
mov
iret
xor
jb
jg
popf
xor
inc
sub
jecxz
dec
dec
mov
inc
jmp
scas
sahf
mov
sbb
das
leave
add
fisubrs
test
sarb
cs
es
ljmp
inc
pop
push
mov
dec
add
adc
stc
push
cmp
or
inc
mov
fcmovnu
das
and
mov
adc
pushf
dec
ljmpw
clc
outsb
sbb
repz
pop
xor
or
sub
dec
mov
movsb
mov
mov
daa
test
cmp
inc
out
and
ljmp
xor
xor
mov
cli
jbe
cltd
mov
fwait
in
jo
mov
fsubrl
or
mov
push
mov
push
in
or
cmc
cmc
cmpsb
clc
sahf
sub
sbb
jecxz
or
mov
insl
xchg
out
loope
repz
cmc
dec
sub
js
fsubs
mov
pop
xchg
mov
jo
in
pop
ret
dec
cwtl
addr16
adcb
loop
jg
aas
loope
fcoms
cmp
mov
pop
fldt
xor
mull
jns
fiaddl
add
and
inc
cwtl
out
push
les
outsl
adc
mov
pop
xor
cld
sub
xor
pop
fildl
popf
addr16
and
jle
roll
lea
push
pop
xchg
add
add
mov
mov
dec
ret
jg
decb
xchg
sahf
popa
push
add
add
lcallw
loope
lcall
push
addr16
mov
push
sub
mov
sub
jo
cmp
jnp
pop
push
sbb
push
jl
lds
lret
cld
test
dec
mov
stos
adc
push
xchg
inc
imul
das
dec
mov
push
mov
mov
cmp
leave
lret
xchg
mov
cs
push
cmc
clc
adc
or
add
orl
mulb
xor
jbe
pop
or
or
repz
int
dec
mov
lock
movsb
ljmp
pop
ss
jb
xchg
or
sti
arpl
jb
mov
or
xor
out
dec
jns
or
cmp
outsb
divl
aaa
mov
xchg
sub
push
jbe
loop
fisttpll
pop
addl
and
es
sub
jo,pn
mov
out
lret
pop
and
xor
jecxz
push
mov
adc
movsb
popl
dec
addr16
cmpsl
or
jle
sub
sbbl
push
and
shrd
rdpmc
jbe
stos
xlat
pusha
pushf
fs
push
add
pushl
xor
mov
fistpl
inc
xor
cmp
fistpll
sahf
and
in
sub
cmp
and
pusha
cmp
and
xor
sub
jmp
fimull
icebp
inc
mov
std
dec
stos
jae
int3
mov
mov
or
mov
dec
fstl
lsl
popa
adc
stos
cmp
cmc
sbb
or
sub
arpl
pushf
ret
jg
dec
jge
sub
mov
push
sub
inc
cld
add
popa
xor
adc
bsf
xorl
out
inc
mov
xchg
and
xchg
push
push
or
xor
dec
jbe
xor
ja
cwtl
cli
cli
xchg
xor
pop
adc
jl
and
jbe
push
mov
imul
insl
adc
xchg
mov
test
add
clc
je
out
sbb
outsl
ds
fmuls
push
into
and
mov
dec
dec
sbb
cmpsb
daa
insl
inc
push
push
mov
pop
dec
in
pop
scas
jecxz
cli
mov
lods
sub
xor
mov
ja
mov
jge
in
mov
push
xor
push
aam
pop
outsb
aad
inc
rcrb
inc
pop
inc
stos
into
rcrb
hlt
dec
pop
in
aam
inc
js
test
out
adc
loopne
out
jb
call
test
sbb
push
xor
addr16
dec
sarb
jno
fdivrl
and
aam
addr16
push
add
stos
jle
mov
adc
sub
jp
jmp
cli
pop
lods
pop
std
or
jns
sbb
adc
jecxz
inc
cmp
fs
hlt
pushf
dec
int3
sahf
cmp
cmp
push
cmpl
mov
gs
rorb
not
pop
mov
mov
cli
mov
mov
push
aaa
rcrb
jno
mov
ret
cmp
mov
pop
and
call
jns
lcall
daa
sti
mov
cmp
adc
push
std
dec
fistpl
ds
xchg
cmp
jo
dec
negl
pop
std
gs
fsubs
or
fsub
ja
adcl
push
in
inc
xchg
ds
test
sbb
shlb
insb
inc
cltd
out
cmpsb
push
xor
inc
jge
jg
fiaddl
mov
aad
mov
or
xchg
jl
enter
andb
push
in
lds
xlat
xchg
or
mov
sbb
add
adc
push
scas
out
xchg
loop
mov
adc
pop
test
mov
push
push
dec
xor
push
sarb
les
outsb
dec
xor
sub
in
test
imul
hlt
pop
lods
shrl
jne
xorl
aas
shlb
roll
cmp
in
lahf
ljmp
cmp
push
mov
mov
push
cmpsb
dec
mov
mov
sbb
mov
jns
aam
aad
mov
stc
cs
xor
ss
stc
add
sub
adc
adc
cs
mov
out
jl
ljmp
inc
or
pop
insl
push
hlt
cmp
mov
cmp
mov
jle
add
daa
aas
fadds
arpl
jg
icebp
xchg
enter
pop
xchg
imul
pop
lods
addr16
fistpll
outsb
dec
stos
add
sub
xlat
js
xchg
sarb
das
xor
lea
repz
mov
sbb
xlat
lods
push
ds
cld
adc
inc
aad
loope
mov
push
push
test
xor
sub
push
and
cmpsl
push
mov
nop
inc
cmp
lcall
test
sub
and
rolb
cmc
jbe
xor
mov
sbb
mov
push
adc
push
fidivl
push
es
dec
adc
imul
cs
and
icebp
fisubrs
loop
mov
jbe
dec
rcll
aaa
rclb
push
jns
pop
push
jp
imul
lods
lods
dec
js
xor
outsb
jle
enter
ja
cmp
negb
adc
xchg
sub
inc
les
sbb
lret
push
jae
cli
mov
test
sub
mov
xchg
sub
jae
mov
mov
in
or
clc
cmp
xchg
inc
lret
push
mov
and
fistl
enter
adc
inc
dec
push
mov
xlat
pushl
hlt
arpl
and
mov
mov
or
fstpt
cmp
bound
std
adc
in
mov
bound
xchg
out
inc
fsub
or
mov
dec
loopne
std
inc
aaa
lock
xchg
popf
repnz
bswap
xor
enter
aaa
push
inc
shlb
enter
sub
and
fidivrl
xor
jne
gs
cwtl
mov
push
jnp
lea
and
es
add
jbe
test
lcall
aam
cld
xor
and
push
fmul
adc
xchg
adc
add
pop
sub
xor
out
incb
cmp
jle
jp
cltd
xor
add
sbb
shrl
das
push
fs
fwait
dec
sub
js
or
shll
ljmp
mov
aad
data16
add
or
mov
sbb
outsl
cmpsl
jecxz
push
aaa
mov
aam
adc
sbb
fiadds
or
repz
inc
pop
and
gs
inc
bnd
fsubs
xchg
xor
es
or
fucomip
adc
insl
dec
stc
repnz
mov
aad
add
popf
test
iret
jb
mov
loop
or
call
iret
test
clc
pop
xchg
push
test
add
nop
mov
jmp
dec
movsb
cli
movsb
inc
mov
mov
int3
outsb
jbe
dec
pop
lcall
push
add
xchg
imul
push
aam
cmp
cmp
dec
sub
ss
insb
inc
fcoms
and
arpl
pop
jl
pop
sub
pop
xor
sub
roll
sub
in
test
cmp
out
mov
sahf
adc
jmp
in
mov
arpl
dec
sbb
mov
xchg
test
mov
jecxz
scas
es
mov
adc
scas
stos
popf
and
xor
dec
adc
jg
mov
mov
roll
dec
mov
or
xor
cmpl
or
lret
addb
pop
in
cwtl
daa
mov
sbb
inc
cmp
lret
test
sbb
lahf
repz
pop
sub
dec
stc
sbb
lds
pop
sub
gs
add
mov
aad
out
inc
jle
pop
jmp
arpl
loop
leave
pop
xor
mov
adc
sub
jnp
cmp
lds
mov
pop
repz
add
push
dec
or
mov
jge
inc
scas
popa
ljmp
cwtl
loopne
jl
jle
mov
cmpsb
and
fs
push
cwtl
out
fnstsw
mov
adc
mov
fildll
test
outsl
mov
std
mov
jmp
outsl
call
iret
pushf
mov
mov
rorb
dec
push
lock
dec
xchg
paddusb
lahf
repnz
cmp
jp
mov
aad
std
push
arpl
shr
adc
or
rcr
push
je
xor
cmp
dec
adc
adc
mov
xchg
pop
push
pushf
fs
inc
fdiv
push
jge
xchg
add
out
jg
lds
sub
lds
mov
xor
push
enter
out
add
popa
add
mov
pusha
mov
pop
cmp
stos
sahf
cs
leave
mov
cmp
xchg
mov
pop
subb
in
into
inc
popf
sti
or
cmpsb
pushf
icebp
rclb
push
pop
cld
movb
jbe
mov
sbb
dec
mov
push
mov
in
cmp
aam
mov
add
loop
push
push
popf
xchg
mov
xlat
mov
mov
pop
rolb
stos
in
hlt
push
mov
push
dec
adc
loopne
pop
shrl
outsb
mov
fiaddl
divb
mov
clc
stos
jle
ffreep
sub
inc
in
int3
lcall
popf
rol
dec
ljmp
out
dec
mov
adc
xchg
xor
out
ljmp
ret
cwtl
jg
dec
daa
cs
and
sahf
dec
lcall
movsl
dec
or
mov
bound
popa
sub
xchg
push
lahf
or
sbb
push
dec
and
pushf
les
adc
jno
sbb
ret
subl
cli
cld
test
test
enter
push
fisubl
xchg
or
inc
daa
push
fistpll
cli
jg
mov
pop
jle
imul
cmp
sbb
cmpb
lea
pop
xchg
pop
nop
mov
push
inc
test
lds
dec
lcall
jl
aaa
add
inc
adc
sbb
rolb
mov
ret
mov
push
dec
mov
and
pop
mov
fcomps
cmp
xor
cmpsb
sbb
vpternlogd
mov
inc
push
icebp
insb
repz
das
pop
filds
ret
aas
xor
push
jmp
out
inc
xor
bnd
sub
int
sub
loope
mov
jmp
jo
cs
dec
dec
jnp
mov
mov
mov
or
ds
xchg
push
dec
jnp
mov
pop
jmp
sbb
nop
ljmp
or
mov
add
cmp
scas
lahf
cmpsl
mov
iret
sbb
cmp
or
jecxz
cmp
jl
je
mov
inc
pop
dec
movsl
inc
mov
ret
in
addl
div
push
fcomi
push
sbb
rcrl
and
and
hlt
mov
movsl
mov
das
mov
cmp
pop
push
pop
fmuls
gs
cmp
mov
jb
mov
fwait
addr16
jmp
pop
mov
lret
fadd
dec
mov
addr16
cwtl
aam
clc
or
out
mov
xor
jbe
or
gs
pop
jns
or
outsb
testb
push
lods
fprem1
push
repnz
inc
inc
test
inc
fiadds
push
xor
lds
fnstenv
jns
pop
sti
nop
lret
cmp
nop
xor
movsl
xchg
mov
pop
mov
fidivs
jo
shlb
mov
fdivrs
ja
add
rcrl
jnp
xchg
daa
mov
pop
enter
mov
lret
scas
xchg
inc
outsb
or
ljmp
shll
or
scas
fsubs
popa
repz
inc
pop
addr16
xor
imul
mov
ss
ss
jp
popa
dec
aas
sub
ja
sub
out
jecxz
add
xchg
test
ljmp
jmp
pop
mov
lods
les
andb
mov
push
in
in
in
push
test
jae
out
aad
pushf
imul
mov
mov
rcrl
lods
mov
xor
pop
fdivl
push
shlb
rcrl
push
stos
xchg
jae
push
cmpsl
into
mov
sahf
cmp
dec
xchg
cmp
into
test
ret
mov
imul
fmulp
rcrb
int
sbbl
adc
icebp
xor
movsb
das
cmc
jg
adc
xchg
jo
pop
in
push
ja
pop
aaa
jp
jae
es
sub
push
test
hlt
inc
scas
xchg
pusha
mov
dec
dec
in
cwtl
mov
push
repnz
fisubl
cmp
js
loope
push
shl
add
sahf
data16
fdivrl
jbe
lahf
pusha
sub
es
into
push
jg
sahf
mov
nop
mov
movsb
int3
out
dec
push
rorl
repnz
mov
mov
popa
add
pop
sbb
in
out
push
aaa
cld
mov
and
jl
mov
fildll
int
xor
shrl
ljmpw
out
adc
cmpsb
push
mov
or
movsb
movb
stc
mov
ja
loope
inc
xor
sub
pop
sbbb
adc
cs
xchg
iret
ss
xlat
roll
cltd
dec
xchg
es
in
sub
out
pop
jecxz
xchg
dec
std
jno
or
scas
insl
lret
in
fwait
stos
pop
add
xor
and
inc
gs
mov
pop
jp
cmpb
notl
cmp
fnstenv
push
inc
lret
dec
mov
cmc
push
popa
cmpl
mov
imulb
push
push
mov
push
pop
push
rorb
std
xchg
lds
pushw
fisttpl
mov
or
je
dec
loope
popf
ds
ss
xchg
pusha
xor
and
dec
cmp
addb
lret
lret
mov
scas
xor
cs
loop
add
test
mov
and
and
jae
ret
jmp
sbb
dec
inc
sbb
mov
enter
roll
fsubrl
cli
push
adc
pop
pop
cli
fisubs
pop
pop
sub
in
je
jo
fimuls
outsb
sub
fmul
call
xchg
int3
in
rol
adc
std
adc
add
mov
rcrl
add
mov
imul
pop
cmp
xchg
outsl
rcr
cltd
insl
push
push
mov
gs
mov
pop
ds
ret
dec
movb
popa
cs
sarb
or
hlt
mov
push
stc
rol
cmp
pop
pop
loope
jb
mov
dec
mov
imul
cmc
cltd
popa
and
pushf
cld
fndisi(8087
mov
cwtl
mov
rclb
sbb
test
sub
inc
add
xchg
pop
mov
mov
int
mov
cmp
pop
lcall
cmp
cmp
in
mov
mov
adc
adc
fstl
pop
mov
push
enter
add
push
push
test
shl
shll
aaa
jg
jle
inc
xor
insl
ret
imul
fwait
mov
mov
ss
cmp
fstps
and
aas
sub
pop
das
in
and
dec
cmpb
jl
and
and
or
dec
int
mov
mov
shll
fwait
ja
push
lret
or
lahf
int3
jg
xlat
lcall
or
rcrl
mov
je
mov
and
adc
sub
cltd
dec
pop
dec
test
cs
jno
dec
ja
mov
repz
frstor
sbb
loop
sahf
out
addr16
and
push
stc
mov
incl
mov
jmp
mov
push
add
and
lahf
iret
adc
push
les
mov
shl
notl
movsb
out
add
adc
mov
jo
iret
aad
out
xchg
inc
xchg
pop
cmpsl
in
xchg
lcall
jmp
fidivrs
es
je
xchg
sbb
movsb
xchg
pop
xchg
push
popl
aaa
packuswb
lcall
ret
xor
or
sbb
or
out
roll
or
pop
lods
cmp
ret
adc
call
and
add
add
rcl
in
inc
or
pushf
loop
push
jmp
outsb
and
xchg
dec
push
or
pop
cmp
and
out
mov
mov
xor
popa
jp
aam
mov
repz
ljmp
inc
jl
and
cli
out
imul
pop
dec
adc
dec
and
movsb
in
xchg
ret
add
lcall
adc
iret
mov
stos
lods
cmp
jl
sbb
inc
cmp
andl
popa
mov
mov
jnp
testb
pop
je
nop
add
push
mov
movsb
lret
dec
jno
mov
sarb
lods
sti
mov
sub
mov
aam
repz
aas
pop
mov
xchg
pop
repnz
push
jg
and
add
cmp
and
js
xchg
mov
jne
aaa
in
addr16
out
fildl
loope
ret
movsb
popf
cmp
dec
es
mov
ret
mov
jns
push
scas
xchg
stos
adc
gs
int
addb
insl
add
test
pop
jp
or
popf
fidivrs
push
jp
adc
adc
shll
add
inc
xchg
xchg
mov
adc
jle
stos
mov
outsb
mov
inc
lahf
idivb
inc
push
daa
clc
imul
and
into
mov
add
jo
mov
sar
shlb
scas
fnsave
into
xor
mov
pop
cmp
add
xchg
test
pop
push
add
dec
into
push
test
xchg
xor
sub
enter
jns
pop
aad
sbb
inc
aam
pop
fwait
pop
out
inc
cltd
pop
enter
repnz
out
inc
lret
daa
pop
xchg
arpl
pop
loopne
cltd
mov
lea
mov
push
stos
add
sub
out
test
clc
mov
xchg
inc
ss
adc
dec
jno
adc
inc
mov
sahf
xor
push
and
jno
xor
push
jge
mov
movsb
cmc
mov
and
hlt
push
jle
inc
mov
pop
addr16
fidivs
jo
pushl
sub
jmp
ja
dec
into
xor
mov
pop
scas
xchg
add
push
insl
sbb
ljmp
xor
jecxz
mov
pop
pushf
and
test
mov
cmpsb
imul
or
inc
out
sub
pop
or
arpl
mov
xchg
jno
dec
pop
mov
movsb
dec
aaa
fcmovbe
int
arpl
andb
cmc
jge
jp
ret
cli
stc
pushf
add
adc
clc
cld
vcmpgt_oqsd
or
popa
mov
lds
cmpb
cli
pop
jmp
lea
mov
xlat
dec
nop
test
icebp
mov
jno
lea
pushf
jle
pop
dec
test
mov
or
cltd
mov
mov
lock
out
jo
imul
enter
mov
push
out
xor
inc
and
mov
adcb
pop
sahf
jecxz
test
lods
sbb
jnp
movsb
push
aad
mov
ja
sti
pop
stos
jae
lock
pop
xchg
movsb
xor
aam
je
or
sbb
enter
mov
pop
cmp
out
cwtl
xor
push
loopne
jns
nopl
and
xor
popf
mov
add
cmp
xor
xor
popa
cmc
mov
test
pop
mov
and
sub
jno
inc
repz
dec
mov
push
sub
dec
imul
mov
xor
lahf
push
cmp
negl
cmp
out
jge
adc
jp
inc
mov
test
cmp
cmp
scas
and
pop
hlt
xchg
and
push
lods
push
int3
pop
push
pusha
xchg
movsl
pop
cmp
mov
ss
mov
or
test
dec
cld
lret
mov
shrb
push
xor
xor
enter
jmp
jo
pop
xor
or
jmp
push
pop
nop
add
or
rorl
cmp
jmp
mov
push
ficoms
addr16
push
cli
adc
jmp
fs
idivb
in
mov
call
inc
hlt
mov
popf
jp
inc
cltd
adc
pusha
test
xchg
pop
sub
adc
xlat
insl
pop
dec
std
mov
stos
cmp
lret
cmp
sbbl
insl
shl
and
fisubl
mov
ret
stos
lahf
test
icebp
mov
repz
adc
scas
jbe
xchg
dec
out
je
jmp
jle
mov
jns
ds
adcl
icebp
push
xchg
mov
cmpsb
test
mov
xor
sbb
push
sbb
inc
lods
stos
sbb
cmc
in
insl
dec
aaa
cmp
sub
imul
ss
flds
std
or
les
adc
adc
add
loop
adc
and
jnp
out
sub
cltd
fildll
cwtl
into
adc
dec
and
ret
xchg
dec
mov
mov
pop
orb
fwait
add
ret
adc
jo
incl
loopne
lods
mov
in
cmc
movsl
daa
fs
mov
dec
ljmp
out
lock
rorb
push
call
jno
in
loopne
push
add
popa
cltd
repnz
fcoml
or
loope
stos
jl
lods
into
jno
push
push
cmp
sub
push
ljmp
loopne
xor
mull
enter
stos
mov
jb
nop
mov
fists
add
imul
test
mov
push
add
xchg
fsubrp
iret
xchg
dec
add
rorl
sarb
out
sbb
in
filds
dec
lcall
sub
cmp
int3
mov
mov
jl
daa
lds
pop
in
mov
rep
aam
lock
push
add
xor
inc
test
sar
pop
xor
loope
inc
and
xor
lods
in
sarb
aad
add
inc
or
sbb
dec
pop
call
je
arpl
fisubl
push
cli
xor
or
and
xor
es
popa
call
mov
addl
jle
testb
in
hlt
les
pop
mov
cmp
and
xchg
push
cmp
int
popf
pop
pop
pusha
imul
in
sub
mov
xchg
scas
sbb
jae
leave
fldcw
sarl
cmp
jl
hlt
jp
mov
sbb
repz
out
popf
out
loopne
xchg
iret
xor
aaa
icebp
jmp
scas
mov
sahf
mov
je
scas
mov
inc
jb
int
jb
icebp
enterw
fidivrl
pop
sub
and
aas
jo
inc
testb
dec
mov
push
je
dec
xor
iret
pushf
xchg
and
push
mov
cld
fldz
test
ja
popa
sub
pop
cltd
jp
jge
dec
outsb
fnstenv
jbe
pop
sub
out
dec
sub
xchg
push
or
add
sbb
adcb
and
push
push
enter
push
jbe
or
int3
or
xchg
dec
in
cs
adc
in
int3
and
cwtl
jnp
std
inc
xchg
pop
dec
xor
adc
ds
out
jo
int
pop
dec
popf
rcl
mov
addr16
cmpsl
int3
push
fidivrl
std
mov
fcmovb
addr16
fisttps
push
xor
jbe
filds
loopne
stos
sub
ds
sbb
xor
jae
lock
icebp
cwtl
xor
sbb
pop
in
rol
outsl
in
popa
loop
notl
cltd
setae
test
add
and
jg
inc
jo
mov
xchg
pop
add
or
sbb
scas
leave
leave
mov
pusha
push
inc
add
neg
xor
in
cmp
jg
inc
adcb
test
nop
and
jg
or
push
push
scas
mov
lods
pusha
mov
push
fimuls
dec
test
lods
cwtl
and
call
mov
xlat
adc
cli
mov
and
ljmp
inc
dec
in
mov
data16
dec
filds
sub
xor
mov
movsb
add
shll
mov
jmp
pop
loope
jnp
insb
repnz
ret
and
aam
movsl
dec
out
cwtl
mov
xchg
cltd
dec
mov
movsl
cmpsb
mov
add
and
add
pop
arpl
mov
repz
rorl
and
mov
jle
pop
mov
mov
lret
xchg
add
mov
ljmp
in
cmp
push
mov
gs
std
jnp
pop
js
xchg
and
push
sahf
sub
sub
in
aad
int3
add
pop
mov
lret
mov
clc
aaa
mov
repz
sub
xchg
dec
inc
push
lock
xor
xor
loop
pop
fnstenv
xchg
mov
rcrb
imul
and
sub
or
sub
cmpsb
xchg
sbb
xchg
cmp
arpl
fwait
inc
cmc
mov
inc
pusha
int3
mov
cmp
jns
lcall
jno
mov
sbb
sahf
loopne
sbb
test
les
mov
pop
mov
sub
sub
jbe
sbb
jge
adc
mov
mov
add
stos
dec
mov
js
xlat
pop
mov
ja
push
sub
leave
test
frstor
inc
lret
shrl
xchg
nop
sbb
test
fs
outsb
sar
imul
mov
lea
and
jns
icebp
imul
dec
int3
and
mov
or
adc
fucomip
inc
adc
subl
adc
inc
mov
ss
xor
push
inc
rcl
xlat
data16
xorb
xchg
xor
fwait
mov
sbb
dec
cwtl
mov
imul
test
hlt
mov
push
pop
mov
xchg
sarb
dec
push
outsl
pop
add
loop
lahf
pop
mov
decb
jl
mov
cmp
jbe
jno
xchg
aas
sahf
jge
jnp
inc
jg
les
sub
pop
inc
rorl
pop
mov
mov
test
ja
es
or
mov
pop
xor
inc
mov
add
xlat
outsl
dec
mov
sar
xor
and
pop
ficoms
jb
es
test
insl
sbb
jge
shll
cltd
shl
enter
mov
add
in
push
add
lcall
test
mov
negb
lret
arpl
cmp
aaa
mov
adc
sub
int3
pop
push
mov
or
das
aas
aaa
mov
cltd
and
repnz
adc
mov
jo
fisubs
sbb
ret
sbb
pop
ret
sbb
inc
cmp
and
adc
push
cld
jge
push
jge
test
fadd
ds
sub
into
or
jmp
sbb
outsb
mov
mov
adc
rorl
mov
jmp
mov
pop
dec
roll
cmpsb
adc
sbbl
mov
push
repnz
or
mov
lret
mov
xchg
jae
nop
push
dec
lret
or
adc
dec
mov
stos
inc
xchg
mov
sub
jmp
jne
js
cmpsl
mul
pop
sbb
push
outsb
aaa
adc
fiaddl
pop
pop
mov
mov
cs
or
pop
js
lret
dec
movsb
cmp
cmp
inc
in
inc
ret
add
lds
fwait
out
sub
pop
sub
jbe
cmp
mov
xchg
ret
dec
pop
mov
inc
jbe
push
mov
cld
push
pop
repnz
leave
out
push
jno
cwtl
jmp
sub
add
adc
out
cmp
fimull
inc
icebp
push
je
add
sbb
pop
cmp
adc
dec
fnstsw
dec
mov
lock
bound
lods
cltd
roll
ret
dec
nop
scas
mov
clc
mov
sbb
sub
cmp
push
or
ret
push
sbb
xchg
out
scas
dec
repnz
push
mov
jl
add
inc
adc
cli
lcall
sub
lock
lds
or
ds
cwtl
xor
mov
int3
push
lea
jno
les
int
ss
push
loope
mov
bound
and
aas
int
sbb
rclb
push
mov
inc
lcall
jge
mov
mov
in
fs
lret
or
ja
adcl
cmpsl
adc
pop
mov
mov
and
jns
xchg
outsl
pop
adc
pop
adc
imul
and
insb
aas
std
cli
daa
mov
iret
add
jno
inc
aaa
fs
in
aaa
ljmp
push
mov
addr16
insl
pop
fmull
fdivrl
je
mov
jmp
ss
daa
int3
lock
push
mov
outsl
adc
fmulp
inc
ss
or
lods
lret
fsubr
clc
es
fwait
jnp
and
insl
pop
inc
dec
stos
inc
push
mov
mov
push
lods
roll
sub
inc
jb
dec
ss
gs
scas
push
je
xchg
pop
xchg
movsb
jg
xrelease
arpl
lods
loop
dec
mov
aad
lea
mov
dec
das
pop
cltd
addb
adc
mov
addl
fs
jb
dec
inc
sbb
cmc
nop
sub
out
insb
ret
mov
mov
mov
les
sub
push
ss
jmp
dec
into
adc
cmp
fisubs
mov
fisttpll
jnp
aad
fs
dec
push
insb
xchg
cwtl
mov
orl
sti
fisttps
aas
dec
xor
or
idiv
mov
icebp
lret
cs
aam
or
mov
stc
add
adc
mov
mov
jmp
adc
xor
jle
insb
fnsave
hlt
sbb
rorb
push
in
mov
mov
daa
ret
mov
sbb
sbb
jge
shlb
xchg
inc
push
jno
sub
call
mov
aaa
adcl
jge
mov
mov
stos
mov
pop
push
in
push
mov
ja
mov
mov
pop
mov
mov
sub
dec
xchg
mov
adc
adc
test
inc
inc
mov
jg
cmp
push
pop
add
mov
pop
and
das
and
mov
cmp
add
into
or
xchg
mov
sbb
jb
pop
loopne
sub
and
shlb
push
mov
test
mov
call
jno
inc
sub
mov
mov
sbb
jmp
outsb
dec
mov
lcall
mov
sub
push
sarb
jne
mov
xchg
icebp
pop
fucomi
cmp
movsb
mov
outsb
das
nop
gs
fadd
sbb
mov
lret
mov
popa
jne
sbb
push
stc
adc
inc
jnp
cmpsb
cli
ljmp
mov
push
inc
out
or
or
lds
mov
sahf
mov
cmc
add
testb
fidivrs
mov
dec
fs
adcb
rcl
mov
xor
cmp
mov
pop
pop
push
gs
xchg
jne
push
pop
adc
dec
aas
pop
fcmove
in
xchg
shlb
jb
inc
mov
push
xchg
or
mov
ja
xor
xchg
ds
pop
xchg
sbb
jl
add
or
add
xchg
in
stos
ss
and
inc
sbb
xchg
pusha
mov
insl
push
xchg
popa
in
add
and
leave
jge
sbb
mov
and
push
sub
mov
adc
inc
or
push
loopne
in
pop
fs
inc
outsl
xchg
test
in
test
push
push
repnz
inc
repnz
add
pushf
push
fwait
cmc
movl
test
push
inc
dec
rep
inc
outsb
idivb
and
inc
shll
ljmp
jmp
push
inc
rorb
dec
mov
out
jns
sub
xor
push
icebp
call
sbb
xchg
jge
mov
jmp
dec
insb
lea
popf
mov
psubw
mov
test
dec
insb
cmpsl
mov
xchg
jp
xchg
mov
aam
jge
inc
imulb
les
adc
loopne
icebp
ljmp
or
pop
ja
lret
xor
fwait
daa
clc
das
movsb
sub
paddb
push
cltd
jb
scas
mov
mov
pop
in
or
std
cmpsb
call
jns
mov
add
rorb
pusha
mov
addl
push
or
cli
xor
jp
mov
lcall
dec
ret
outsb
mov
or
in
push
jne
lock
cmp
mov
mov
xlat
pop
arpl
mov
cmpsb
test
aas
pop
push
sub
jae
mov
mov
jmp
adc
pushw
mov
cmp
jl
xchg
ret
lret
dec
movsb
push
xor
rcrl
sti
adc
into
lods
std
jp
jnp
mov
push
int3
dec
decl
fsincos
scas
or
mov
outsb
inc
nop
mov
push
stos
jno
int3
mov
andl
nop
push
inc
inc
xchg
dec
xor
stc
imul
outsb
and
xor
adc
push
xchg
sti
or
shlb
xchg
pop
incb
sarb
xchg
lret
push
fldl
scas
pop
lock
fcmovu
cli
lods
ljmp
lcall
sub
mov
xor
in
add
dec
in
cmp
icebp
mulb
out
push
push
mov
aad
cmp
insb
ffreep
inc
or
and
lret
idivb
fsubl
lcall
jl
sbb
out
loopne
sub
pop
sub
in
xchg
sbb
dec
rorl
pop
sub
xchg
sbb
sub
dec
aaa
aas
stos
test
inc
pushf
mov
jl
pop
cld
aad
push
mov
push
rcrb
cmp
cwtl
jle
jmp
out
orl
mov
or
test
in
xchg
sub
mov
xor
rcrl
xchg
and
dec
mov
xor
insb
add
popf
add
outsb
shl
notb
sbb
subb
or
dec
mov
xchg
sbb
pop
and
or
lcall
push
sbb
test
push
jo
xor
andb
jnp
xchg
mov
mov
pop
subl
mov
into
mov
push
fwait
out
bound
xor
dec
pop
loope
mov
inc
jae
mov
mov
sarb
push
cld
mov
sub
and
repnz
push
sbb
aaa
bound
push
jnp
lods
adc
add
fwait
jle
cltd
cli
loop
mov
call
inc
push
out
jne
sub
inc
jb
es
mov
cmp
arpl
aaa
add
mov
xor
xor
gs
out
pop
jle
mov
mov
aaa
repnz
pop
loopne
jns
or
sarb
ficoms
push
fildll
xchg
push
fstl
lret
add
adc
mov
out
shlb
pop
jnp
push
fmuls
sbb
loopne
cmc
hlt
cwtl
sub
cmp
jb
iret
orl
xor
push
pop
in
cltd
dec
jb
xchg
fmuls
or
xor
aad
dec
sar
mov
adc
or
add
inc
inc
xchg
fst
dec
sarb
adc
fstps
insl
cmp
out
notb
cmc
sub
and
std
addr16
ljmp
pop
jae
aas
lea
cwtl
insb
nop
and
loopne
call
fldenv
push
out
mov
lret
xchg
jge
jl
mov
push
inc
testb
outsl
adc
or
jle
imul
in
cmp
in
push
out
push
lock
xor
sbb
sub
inc
stc
xchg
inc
mov
int3
push
cld
adc
xchg
push
movsb
mov
movsb
scas
sub
xchg
clc
xchg
xlat
jg
or
iret
cmp
ds
xchg
clc
rcl
lods
out
add
adc
inc
cwtl
daa
xchg
lahf
adc
xchg
rclb
lds
loop
xor
cld
cmp
movsb
jb
xlat
sbb
cmp
sar
imul
mov
inc
stos
mov
inc
add
pop
out
loopne
scas
jl
insl
inc
or
push
sbb
dec
push
cmp
rcll
jno
scas
xor
aas
xchg
cmp
insl
push
stc
push
popa
mov
nop
inc
xchg
mov
push
xchg
jl
aas
aas
mov
dec
pop
outsb
dec
add
push
add
scas
push
hlt
outsb
test
xchg
mov
mov
sbb
mov
jns
test
push
or
push
pop
or
das
cwtl
push
pop
lcall
movsb
cmp
push
pop
leave
ja
pop
enter
jo
pop
xchg
add
or
cwtl
xor
lcall
dec
stos
jmp
jecxz
fidivl
ja
jg
adc
mov
dec
add
cli
out
daa
inc
xor
in
ljmp
call
sbb
bound
xchg
call
dec
lds
xorb
out
lahf
mov
lods
lods
or
mov
jae
adc
lcall
add
add
xor
ret
movsb
test
inc
inc
mov
aaa
cld
mov
pusha
pushf
cltd
jg
push
ss
aam
jnp
push
pop
fisubrs
ss
loope
call
or
mov
push
mov
mov
cmpsb
jp
cmp
pop
adc
jae
cltd
or
pusha
inc
and
jmp
xchg
cmp
add
push
add
jno
int3
ss
negb
mov
fs
jb
jecxz
test
pop
mov
mov
push
and
sub
mov
in
loope
popf
mov
rclb
push
iret
repnz
loopne
push
and
mov
mov
movsl
push
addr16
test
out
into
clc
pop
inc
push
or
push
add
cmpl
push
mov
cmp
mov
ror
xlat
adc
icebp
pop
add
gs
pop
ret
inc
jp
std
bound
xor
popl
cs
xchg
jbe
loop
loope
fdivl
push
cmp
sbb
imul
test
dec
add
adc
mov
mov
imull
mov
inc
dec
out
lods
std
dec
mov
ljmp
mov
push
inc
adc
sbb
xor
jmp
adc
fisttpl
xor
or
dec
sub
jecxz
and
dec
cli
mov
xlat
or
idivb
leave
xchg
aad
mov
test
movsl
sti
push
xchg
jecxz
inc
les
pop
jg
fwait
pop
adc
add
or
pop
xchg
xchg
pushf
mov
in
cs
push
int3
xchg
hlt
pop
gs
mov
out
dec
sub
push
roll
jbe
stos
cmp
mov
add
inc
mov
aam
aaa
xlat
mov
xchg
icebp
aam
jno
sub
shl
adc
or
sub
dec
dec
sub
xlat
es
dec
lods
jecxz
int
mov
repnz
push
adc
xor
aaa
fcmovnu
fldt
mov
and
rcrb
rolb
sarb
loopne
aas
popa
fs
popf
and
fimull
shr
jb
mov
shll
xchg
mov
xor
enter
pop
aas
cwtl
shll
push
ja
fsubs
push
lret
cmp
cli
mov
rolb
sub
dec
and
sub
dec
dec
cmp
dec
mov
mov
cli
out
dec
dec
lods
add
mov
dec
test
aaa
mov
xchg
xchg
push
arpl
bound
pop
repz
push
call
and
jns
enter
lods
adc
scas
mov
dec
cmp
jno
mov
add
outsl
add
in
sbb
xchg
lds
sub
and
data16
addr16
jl
or
out
imul
ret
pusha
mov
mov
pop
mov
jmp
cmpsb
xchg
iret
fidivrs
stos
lods
adc
add
inc
mov
mov
and
cltd
popa
gs
jle
xor
sbb
or
mov
sub
sahf
jo
mov
movsl
lret
stos
insb
std
mov
jecxz
bound
fcoms
xchg
xchg
dec
sahf
ja
enter
psubw
xchg
xchg
fbstp
arpl
mov
dec
pop
shrl
sub
xor
inc
sbb
fdivs
imul
outsb
fists
pop
mov
stc
sbb
in
sahf
adc
bound
ds
add
dec
inc
adc
jae
adc
mov
sbb
int3
mov
jp
push
mov
cmp
pop
aas
mov
mov
movl
mov
push
in
roll
outsb
push
std
sub
das
push
adc
fsubrl
out
mov
popa
add
inc
aad
ror
iret
clc
outsb
or
xor
enter
je
mov
mov
dec
aas
dec
jns,pn
mov
xchg
pop
jns
sub
add
and
ffreep
in
call
popf
sub
leave
fwait
mov
ljmp
push
fcoms
xlat
in
les
mov
arpl
ja
gs
dec
fs
rolb
call
xchg
in
and
pop
test
cmp
mov
lea
or
or
add
enter
rep
into
sub
hlt
lods
cmp
scas
pop
lret
sbb
inc
inc
push
xchg
adc
repnz
mov
sbb
out
xor
and
movsl
mov
mov
std
sub
sbb
inc
pop
outsl
addr16
xchg
rcrl
sub
loopne
xor
inc
and
push
sbb
pop
mov
in
movsb
leave
test
xchg
pop
pushf
inc
imul
int3
test
loopne
mov
and
pop
jae
jns
cmp
in
dec
out
pushf
xor
push
enter
es
popf
call
fwait
or
in
push
jp
orb
fiaddl
pop
mov
jno
outsl
imul
popf
and
int
pop
repz
adc
mov
loopne
dec
je
bound
mov
icebp
adc
or
lods
loop
or
das
add
enter
mov
repnz
mov
sarl
push
mov
jns
in
jne
fsubs
push
mov
push
jl
jecxz
int
sar
imul
dec
pop
jmp
add
aas
popw
add
fsubrl
adc
cld
out
adc
adc
lods
inc
or
push
adc
jne
or
xor
xchg
aaa
imul
arpl
enter
mov
enter
xor
out
popa
adc
fsubrl
push
roll
cmp
push
jp
pusha
dec
fdivl
pop
nop
fs
pop
loop
movsl
pop
inc
xchg
mov
ficoml
fcoml
mov
scas
sub
int3
lods
push
in
xor
fmull
cmp
and
cs
pop
push
add
mov
rcr
stc
fs
jg
pop
xchg
enter
mov
call
int
popf
das
out
ljmp
in
mov
loopne
mov
add
xor
icebp
cmpsb
testl
push
pop
scas
test
xchg
ja
adc
rorb
lahf
loope
sahf
lahf
cmpsb
lahf
sub
push
dec
jnp
sub
clc
push
adc
mov
xor
cmp
loope
cmp
iret
and
ljmp
mov
cmp
jg
mov
pusha
xchg
lods
test
scas
in
sub
inc
mov
daa
jmp
xor
add
frstor
jae
xchg
into
movsb
rolb
stos
in
fs
cmp
add
aad
inc
fcmovnb
inc
cmp
dec
xchg
pushf
sub
push
jns
xlat
mov
mov
xor
mov
dec
add
push
add
push
dec
ds
imul
jo
cmp
sbb
outsl
jno
lods
jmp
es
sahf
jae
roll
pop
jns
pop
dec
shrl
jns
push
faddp
sub
in
lods
mov
or
adc
call
xor
jns
loope
push
jne
cmpsb
push
rol
fimuls
adc
decl
imul
xor
add
lock
sti
aaa
mov
inc
scas
repnz
mov
xor
or
je
xchg
imul
shrl
rorb
xchg
lods
mov
cmpsl
outsl
imul
push
cmc
shl
push
or
dec
mov
rorb
inc
mov
out
or
sti
lock
mulb
xor
and
push
mov
mov
lds
test
cmp
rcr
push
cmp
out
loop
mov
andl
lods
and
cmp
cs
push
hlt
or
stc
cmp
mov
cmp
xor
pop
inc
sbb
cmpsb
dec
adc
cmp
lret
lahf
sub
xchg
and
add
push
leave
je
sub
push
inc
inc
jnp
xchg
loope
xchg
xor
inc
stos
fcompl
push
orb
jecxz
xor
popa
cwtl
jno
inc
sub
or
pop
cmc
popf
ret
push
ror
push
sub
sbb
repnz
fisubs
push
fldcw
outsb
popf
mov
in
clc
xchg
jne
push
popf
fisubrs
dec
outsl
cmpb
xor
or
push
lock
faddl
mov
lea
or
cmp
addr16
sub
jg
cmp
xchg
cmpb
jns
popf
pop
xor
mov
pop
shld
aam
mov
cmpb
sub
xor
xchg
outsl
cld
test
jp
xor
outsb
daa
xchg
imul
pop
or
lods
cld
pop
pop
inc
shl
dec
jnp
mov
mov
mov
ds
dec
mov
aad
xchg
sbb
nop
sbb
push
pop
jno
vmptrld
push
jne
mov
sub
sub
sub
mov
xchg
mov
jg
lcall
in
adc
imulb
fiaddl
push
mov
adcb
fidivl
jmp
jmp
mov
lds
dec
rolb
punpckhdq
or
ds
sahf
les
movsl
outsl
lock
add
adc
cmp
shrl
mov
sbb
push
cmc
and
xchg
xchg
push
xchg
shlb
and
gs
stc
lret
mov
fidivl
jno
int3
or
scas
pop
fs
imul
mov
clc
mov
mov
test
leave
cmpsl
cmc
fidivrs
mov
inc
and
mov
pop
fisttps
add
call
ss
add
adc
add
dec
sub
shlb
shll
add
std
lcall
mov
lcall
aad
out
push
jge
push
inc
mov
loop
xchg
loopne
push
mov
xor
rorb
setp
lahf
xchg
pop
pop
mov
shrl
addl
sbb
and
add
xchg
adc
sbb
or
cs
sbb
into
hlt
into
pop
sbb
sub
mov
adc
xchg
pop
and
push
sahf
xor
xor
mov
push
lods
cld
cmp
push
adc
andl
je
sub
jne
fbstp
jmp
xchg
inc
icebp
out
pusha
je
fnstcw
std
scas
outsb
and
fadds
ret
mov
aaa
pop
pop
mov
outsl
std
push
imulb
or
out
push
pop
imul
push
xor
popf
hlt
push
jbe
mov
mov
lcall
ret
or
or
insl
std
cmpsb
sub
dec
scas
push
dec
xchg
pop
or
pop
into
cmp
inc
and
loopne
enter
xchg
inc
push
and
jmp
mov
add
pop
inc
roll
sub
xor
fsubrs
insl
imul
add
add
cmp
dec
addr16
out
divb
mov
rolb
and
mov
clc
pop
jmp
pop
dec
jl
mov
aas
xor
xchg
ljmp
shlb
xlat
and
sbb
sbb
xchg
mov
mov
lock
or
mov
scas
fsubrl
sub
fs
test
lea
push
cmpsl
pop
add
cmpsb
adc
les
popa
sub
mov
dec
sub
sbb
cmc
xchg
sub
std
movsl
and
les
fadd
push
mov
sbb
pop
fimuls
addr16
xchg
jnp
fsubr
inc
in
cmc
lock
and
cmp
ficoml
xor
mov
imul
push
enter
xrelease
lret
add
cmp
cmpsl
pop
arpl
scas
cld
pop
mov
aam
std
insb
fldt
mov
mov
sub
adc
clc
mov
sub
jne
add
scas
aas
add
push
ja
mov
inc
xor
push
dec
ljmp
cmpsb
xor
stos
or
ret
loop
jle
out
dec
insb
orb
pusha
xchg
jno
and
push
xchg
xlat
mov
inc
fstl
push
rcrb
mull
cmp
test
pop
xchg
mov
sbb
cmp
test
cmpsb
jl
inc
divl
dec
push
loop
dec
adc
and
and
lock
ljmp
cli
mov
mov
pop
push
je
push
cmp
icebp
shlb
stos
lcall
lods
nop
and
cmp
push
mov
fwait
pop
xor
aam
mov
sub
cmp
sbb
in
lea
push
inc
pop
in
pop
mov
dec
mov
mov
in
andl
icebp
jecxz
popa
xchg
insl
add
cmp
xchg
stos
repnz
mov
imul
in
int
sub
cmpb
lds
sbb
mov
sub
pop
push
inc
into
insl
pop
les
int
aas
jg
cmc
jp
pop
das
dec
aam
jae
mov
mov
das
leave
repnz
push
sub
cmp
or
ds
es
out
out
mov
loopne
mov
mov
ficomps
cld
push
add
fdivl
test
jmp
imul
cmp
xor
repz
mov
sub
imul
jns
pushf
out
sbb
sub
ja
subb
cmpsb
jbe
lret
in
bound
jl
test
xor
mov
xor
adcb
jp
sbb
pop
iret
inc
adc
sahf
test
ds
gs
jge
push
cmp
adc
test
decl
scas
imul
cld
inc
cltd
pop
pop
icebp
or
jmp
dec
loop
inc
inc
and
adc
fimuls
jnp
jns
dec
sbb
out
jmp
call
out
jnp
sub
add
lea
nop
or
mulb
mov
or
daa
pop
cwtl
xor
aad
mov
call
repz
lahf
sbb
data16
popa
rcr
sarl
rolb
jle
mov
push
xchg
mov
sbb
mov
inc
incb
inc
mov
loop
cmp
push
sbb
sbb
mov
iret
mov
repnz
or
cmp
insb
xor
mov
cmpsl
stos
fisubl
mov
hlt
rcr
rcrl
mov
sub
dec
stos
sub
mov
cmpsl
pop
or
stos
rcll
fiaddl
jmp
in
mov
scas
cmp
cmpl
jg
into
mov
movsl
daa
insl
add
aas
push
popf
push
ds
fsubr
repz
insl
mov
in
ficompl
xor
jle
out
mov
lods
sub
mov
jmp
fidivrl
xchg
les
cmp
mov
push
pxor
push
out
cltd
pop
orl
push
push
scas
xchg
xor
mov
lea
cmpsl
jnp
mov
and
testl
mov
push
dec
fisubs
cmp
add
lret
rclb
leave
jg
pop
in
xor
jp
sbbb
dec
pusha
mov
shrb
lock
ja
and
std
dec
jl
cld
out
fcom
repz
cmpsb
loope
ljmp
test
cmpsl
aad
pop
sub
testb
andl
push
xlat
in
enter
or
push
lea
dec
sub
add
cmc
out
popa
imul
xchg
sbb
sub
mov
push
in
mov
popa
insb
popa
and
or
dec
cwtl
push
fwait
ret
add
cmp
inc
test
movsl
inc
or
inc
mov
jae
int
xor
adc
repnz
pop
das
mov
inc
push
ds
sbb
jp
fiaddl
stos
in
push
ljmp
nop
loope
sub
daa
test
pop
pop
mov
cs
and
push
orl
nop
pop
insl
or
pop
les
push
ljmp
inc
cli
in
aad
fdivl
jae
or
inc
and
adc
xchg
enter
dec
js
es
insl
mul
sbb
cwtl
cli
jp
and
push
in
sbb
xor
mov
fs
or
push
sbb
and
mov
sub
out
adc
lret
in
les
xchg
jae
aaa
fstps
jle
sbbl
lahf
or
mov
js
mov
jle
jp
les
popa
out
in
and
inc
dec
imul
mov
xchg
push
loopne
sahf
pop
in
and
jae
inc
mov
loope
arpl
mov
cmc
icebp
fildll
pop
out
sub
dec
pop
cmp
in
out
cmc
push
xchg
daa
add
push
es
cmpb
ret
test
and
xor
cs
add
sbb
push
nop
popa
lods
sub
jmp
sarb
xchg
stc
jp
inc
loope
jle
cmp
test
xor
subl
mov
sub
add
or
mov
inc
push
int
pusha
ljmp
mov
out
cmp
push
push
add
outsl
sbb
mov
imul
pop
dec
jg
push
jg
cmpsb
push
jnp
mov
xchg
jo
lea
or
and
sbbl
or
mov
mov
cmp
daa
cs
gs
add
ret
mov
dec
push
stos
sbb
stos
loopne
push
ss
scas
pop
and
mov
lahf
loop
rolb
push
or
push
fs
mov
mov
nop
pop
pushf
insl
sub
mov
sti
jg
pop
add
ja
sahf
mov
pop
faddl
imulb
ret
loopne
inc
jecxz
fisubrl
mov
push
pop
dec
rorl
notl
lods
ds
bound
sub
ljmp
lcall
fldt
adcl
adc
les
sub
loopne
sbb
inc
add
lock
inc
adc
or
cli
mov
into
sahf
pop
pop
les
insl
mov
adc
je
lret
aaa
push
lahf
mov
test
cmp
test
out
jl
enter
addr16
mov
push
sbb
loope
ds
ja
push
addr16
mov
mov
inc
mov
repnz
lods
int
dec
and
std
loop
adc
stc
cmc
push
jno
stos
mov
push
add
add
lds
fwait
xchg
ds
cmp
mov
push
stos
and
dec
dec
addl
and
inc
cli
lret
stos
push
pop
xchg
cwtl
sarb
out
jb
addl
sbb
loop
inc
add
jg
inc
ja
test
sbb
adc
hlt
leave
add
mov
and
stc
mov
movsl
xchg
jmp
jbe
clc
shll
add
cmp
ljmp
je
or
stos
sbb
or
pop
test
jle
cltd
dec
push
repz
pop
xlat
out
mov
fbstp
imul
push
test
inc
add
ret
inc
xchg
add
cmp
cld
ljmp
ds
jnp
scas
enter
imul
jg
mov
dec
dec
fimuls
cmp
loopne
push
daa
push
scas
movsl
int
filds
jne
js
lret
test
mov
sub
mov
in
dec
add
push
ss
pop
and
out
xchg
inc
adc
cwtl
adc
lea
mov
xchg
push
sub
popa
adc
push
jo
lea
loope
arpl
cmp
out
gs
or
enter
adc
out
aam
into
aaa
stos
add
inc
mov
add
add
mov
mov
push
pop
shlb
dec
mov
cmpsl
or
jns
lret
inc
adc
mov
push
fldt
aad
test
xlat
jmp
and
in
mov
daa
xor
xlat
shlb
push
mov
cmc
sbb
repz
push
int
pop
mov
cmpsb
xchg
loopne
icebp
ss
mov
icebp
outsb
or
adc
and
lods
in
dec
cmpl
mov
xchg
mov
stos
insb
movsb
xchg
add
ljmp
dec
lds
cli
pusha
xchg
imul
cmpsl
cmp
ja
ror
scas
push
dec
popa
xchg
xchg
loop
dec
into
call
mov
sahf
or
add
inc
mov
sbb
lods
add
out
sub
popa
and
nop
scas
push
add
enter
mov
xor
inc
push
mov
loop
or
xor
mov
nop
lea
add
call
fstpl
add
cs
or
inc
dec
fpatan
push
mov
hlt
fs
daa
sti
insb
movlps
cmp
clc
in
rolb
mov
daa
cmp
fiaddl
push
sub
push
push
sbb
and
lods
mov
mov
movsl
scas
nop
push
add
fcmovb
test
lcall
sbb
cmp
or
xchg
arpl
mov
aas
cmpsl
fildll
popa
loop
cmp
loopne
bound
push
faddp
xlat
sbb
and
and
adc
repz
mov
outsb
ret
cs
and
or
scas
imul
data16
fldl
sbb
cmp
jne
pop
cli
mov
jge
cli
imul
push
add
xchg
mov
or
test
addr16
pushf
cmp
jmp
dec
mov
or
jnp
je
test
and
aaa
mov
add
push
cmp
enter
iret
ljmp
rorb
or
sbb
lret
scas
xorb
cmpsl
mov
movsl
mov
loop
jo
inc
nop
mov
shlb
loop
mov
cmp
pop
cmp
inc
icebp
and
outsl
cmpsl
xor
mov
lret
push
jmp
and
popa
pop
or
push
jl
mov
mov
jmp
or
inc
into
xchg
or
out
jo
pop
mov
iret
mov
loop
iret
mov
addl
cmpsl
mov
dec
out
jae
int
dec
icebp
fstpt
test
rol
fs
insl
mov
mov
icebp
pop
jmp
movsl
push
loop
inc
push
lret
int
and
push
or
out
lahf
jb
fwait
mov
insb
mov
dec
iret
inc
pop
jno
pop
dec
aas
mov
outsb
add
jl
mov
cmp
jno
jnp
mov
sbb
inc
xchg
out
clc
xor
sub
xchg
mov
mov
xor
xchg
dec
or
stc
sub
xchg
xor
add
fisttpll
xor
lea
mov
cld
jmp
lds
dec
icebp
push
shll
enter
cmpsl
ficoml
xchg
imul
out
or
dec
xchg
mov
jbe
rcl
dec
jns
mov
in
mov
adc
jl
pop
push
stos
xchg
pop
in
cmp
test
or
repz
ret
xor
movsb
sbb
gs
mov
jnp
xor
dec
mov
rolb
or
mov
cmc
jno
xor
lds
sbb
mov
or
dec
mov
jnp
sub
pusha
jmp
inc
add
lahf
test
mov
icebp
cmpsb
xchg
mov
pop
inc
mov
enter
mov
arpl
mov
cwtl
sbb
sbb
dec
cmpsl
or
jge
ror
push
mov
out
push
xchg
imul
mov
arpl
mov
mov
mov
push
test
pushf
cltd
or
dec
test
jmp
stos
rol
adc
xchg
fsubrs
sub
or
mov
arpl
xor
roll
jb
mov
pop
cmp
mov
mov
clc
push
mov
mov
rclb
repnz
jmp
xchg
mov
dec
int
xlat
mov
je
mov
inc
ss
dec
pop
fsubrs
mov
popa
cmp
mov
mov
inc
mov
popa
in
inc
loop
testb
shlb
add
inc
inc
jb
es
lock
lea
lods
cmp
in
loopne
mov
mov
cmp
pop
xchg
inc
mov
daa
cmp
aaa
jle
inc
mov
pop
out
in
mov
add
mov
cli
sub
pop
xchg
insl
in
or
andl
adc
mov
into
out
jg
jge
sbb
dec
adc
push
into
pop
mov
pusha
je
insb
test
mov
es
add
or
mov
pop
mov
cmp
cwtl
mov
push
into
dec
int3
mov
rclb
xchg
sbb
nop
sbb
lock
inc
imul
jbe
movsb
nop
xor
pop
loop
cmp
jecxz
cli
jo
ret
call
daa
mov
xor
add
mov
pop
lea
rcll
loop
popa
add
popa
xor
lret
popa
sub
push
and
pop
in
sub
mov
inc
int
add
jnp
test
aaa
cmpl
pusha
cmpsb
imul
adc
mov
mov
loop
jno
stc
sub
or
pop
stos
mov
or
and
mov
popf
out
xor
pusha
cmc
xor
jge
subb
test
xor
inc
add
or
or
idiv
xchg
mov
jns
sbb
orb
push
and
pop
xor
push
jne
loope
test
repnz
ret
push
data16
imul
xor
push
leave
jl
and
fcomip
push
sub
jb
mov
pop
sub
jno
push
popa
or
jge
pushf
add
leave
outsl
xor
mov
mov
jbe
hlt
fwait
push
mov
hlt
push
mov
jp
xchg
dec
jbe
jmp
je
lea
xlat
jo
in
add
mov
pusha
out
add
push
lahf
icebp
mov
int3
orl
and
insl
sub
ja
movsb
xchg
cmp
add
dec
outsb
in
xor
add
add
lahf
lahf
cmp
into
inc
pop
push
add
or
xor
imul
sub
push
lds
test
mov
fiadds
int3
arpl
add
fsubr
ss
cmpsl
mov
faddl
gs
xor
jle
push
pop
pop
fstl
das
jg
dec
jnp
pop
add
dec
mov
mov
push
std
mov
in
jbe
inc
push
fsubrs
mov
dec
cmp
add
into
mov
push
cltd
out
cli
sbb
in
pop
adc
sub
push
rorb
xchg
mov
sub
dec
mov
stc
popf
mov
or
mov
loopne
notb
dec
aas
loop
je
cli
shll
or
imul
and
pushw
repz
aad
or
pop
inc
and
and
jns
mov
jne
and
les
and
mov
mov
loopne
fldenv
or
fisttpll
xchg
cld
xchg
outsb
inc
or
cmp
ja
mov
sub
andl
inc
sarb
test
adc
inc
dec
adc
xor
xor
fimuls
and
push
push
pop
pop
sbbl
lock
scas
inc
loopne
or
shrl
in
mov
and
std
aad
cmp
mov
push
out
cmp
movswl
repnz
xchg
pop
cs
push
imul
pop
imul
nop
lock
xor
xchg
mov
push
fdivrl
outsl
cmp
cmpsl
repz
pop
mov
lea
lret
clc
into
cmpsl
or
rcl
repnz
in
mov
jle
xchg
in
cmp
or
pop
lods
sub
dec
mov
pop
mov
cld
pushf
cld
shrl
arpl
test
xlat
inc
int3
orl
sti
mov
out
imul
lahf
add
shl
sub
mov
gs
xor
pop
jbe
mov
sahf
sbb
setg
adc
roll
xchg
adc
stc
sarb
inc
adc
and
mov
mov
out
test
cmp
mov
mov
cmp
shl
add
pop
iret
and
and
mov
sbb
add
les
mov
jp
xchg
cmp
sbb
jp
mov
jecxz
add
mov
sub
xor
mov
inc
jae
cs
aaa
and
fimull
jae
dec
fcmovnu
and
xchg
add
add
push
cmpsl
push
mov
pop
mov
jne
scas
mov
or
jo
cmp
xor
shl
add
cli
mov
sti
das
push
movsb
sahf
fisubs
fucomp
pop
sbb
xchg
or
push
notl
mov
jecxz
outsl
jno
in
imul
movsl
xor
or
mov
mov
cmp
orb
ror
push
shll
imul
mov
std
jle
test
stc
fidivrl
or
mov
cltd
push
jp
pop
test
out
daa
pop
cmp
mov
inc
test
inc
test
jb
lret
fildll
mov
sbb
push
inc
jl
das
mov
shl
fisttps
adc
jecxz
push
cltd
loopne
sbb
xchg
adc
rorb
rolb
jge
fmull
and
mov
dec
jmp
sub
insl
cmp
cltd
in
inc
int3
xchg
ljmp
in
sub
add
or
lahf
add
mov
adc
mov
pop
and
pop
mov
fwait
imul
fiaddl
ror
shll
mov
jne
xchg
sub
lods
xchg
push
bnd
xor
arpl
or
insb
push
aaa
cmp
mov
mov
fists
sbb
mov
xchg
jb
inc
mov
gs
pop
enter
inc
add
addr16
ja
xor
mov
ret
int3
sbb
mov
xchg
stos
je
jge
pop
scas
xchg
loopne
in
sub
imul
push
adc
cmc
inc
or
adc
mov
fldcw
movsl
insb
or
xchg
pop
add
ljmp
scas
xchg
outsl
inc
jl
jle
loope
or
jl
fbld
insb
das
sub
std
shrb
dec
popa
xchg
xor
paddsw
je
pop
sbb
nop
xchg
lcall
lock
lock
pop
sbb
push
inc
and
movsl
jno
lock
data16
mov
inc
scas
lods
push
lods
popf
sbb
pop
mov
nop
inc
jo
jns
movsl
inc
stos
inc
jecxz
fs
pop
xlat
cmp
nop
xchg
mov
inc
lret
cmp
mov
xlat
jno
inc
sub
dec
clc
xchg
cli
mov
pop
xor
iret
sbb
dec
pop
push
in
dec
outsl
and
xchg
push
push
xchg
cli
divl
ljmp
jmp
cmp
pop
mov
mov
cmp
std
clc
icebp
fistl
rclb
out
xor
adcl
lock
pop
cmp
in
xor
rcl
cmp
insl
cltd
cmpsb
shl
cmp
hlt
lcall
imul
dec
mov
nop
jg
cmpsb
fcmovu
mov
es
ja
and
das
fisubs
ss
xchg
jno
sbb
dec
jmp
cmpsl
adc
sti
add
lret
loopne
aas
dec
cmp
jns
mov
inc
mov
inc
add
dec
negb
or
insl
mov
addb
popf
mov
int3
movsl
mov
jae
andl
mov
sub
dec
aas
xchg
inc
fidivrl
push
xlat
and
or
jno
mov
push
push
cli
sbb
lahf
jns
mov
mov
sbb
pop
pop
mov
pop
push
cs
lret
aad
adc
es
fidivl
rolb
fisubs
and
scas
cwtl
inc
xchg
or
mov
je
in
push
xlat
inc
and
lret
pop
popf
mov
adc
clc
ja
hlt
stos
cli
dec
subl
popa
stos
fistpll
lods
test
or
addl
test
ja
test
jnp
sbb
xchg
adc
dec
pop
xchg
mov
dec
pop
push
orl
lret
sbb
in
mull
sbb
inc
stos
iret
imul
lea
js
sub
roll
add
adc
pop
pop
mov
cltd
int3
add
sahf
mov
repnz
je
sub
add
jl
rcrb
testb
mov
jle
jmp
xchg
jnp
into
xchg
push
push
jnp
sbb
test
jp
sub
xor
sub
iret
dec
jge
test
cld
call
movsb
pop
push
repnz
xlat
cmpsb
mov
push
loop,pn
inc
leave
mov
test
insb
adc
repz
popf
dec
add
mov
mov
enter
dec
fimull
mov
mov
jg
and
test
and
add
xor
into
in
mov
ret
dec
fdivl
and
ljmp
mov
fisubrl
xor
loopne
bound
nop
jmp
mov
sbb
jnp
fisubrs
cmp
pop
cli
cmp
popa
lock
push
or
lds
daa
sbb
or
pop
mov
jb
mov
ficoms
jo
inc
add
or
xor
sub
jle
imul
mov
mov
popf
subl
jmp
push
mov
jge
jb
pushf
xor
stos
sub
or
cmp
out
or
xor
jp
stos
xor
rclb
mov
movsl
xchg
pop
scas
mov
jne
xchg
xchg
je
fs
lret
iret
shlb
orb
xor
ljmp
jo
mov
aam
sub
jecxz
out
sbb
movl
jge
fidivrl
push
adc
in
jp
xor
sbb
ja
decb
in
stc
shlb
shr
cmc
fmull
push
inc
sti
mov
push
push
jo
push
cmpsb
mov
fimuls
outsb
mov
pushf
add
clc
loopnew
jge
xchg
fdivr
pop
mul
ljmp
repz
and
mov
outsb
cmp
lahf
lock
add
lds
xchg
pop
inc
pop
lock
sbb
out
push
dec
push
xlat
cmp
add
cs
outsl
cmp
arpl
mov
adc
hlt
iret
sarb
out
sbb
les
or
cmpsl
scas
or
or
into
add
into
repz
out
subl
ret
xchg
daa
or
lods
mov
aas
jbe
bound
add
dec
jns
jl
dec
outsl
mov
dec
aad
jp
into
xor
stos
dec
mov
bound
add
loop
fdivs
lcall
test
xor
rolb
add
mov
adc
add
aas
xorb
lock
es
mov
mov
popf
mov
pop
push
gs
loopne
mov
call
lods
jle
popa
pop
decb
std
mov
iret
mov
out
daa
mov
imul
sahf
popa
ja
das
add
push
shll
xor
int3
lea
loop
jno
sbb
ds
mov
movsl
jle
jo
ss
mov
mov
repz
ljmp
adc
vsqrtpd
cmpsb
hlt
les
icebp
test
ret
push
out
push
gs
cmpl
push
repz
and
xchg
bound
dec
mov
imull
ja
dec
pushf
testl
push
subl
movsl
rcr
into
js
dec
loop
imul
sub
shrb
movl
mov
fildl
cmp
cmpsb
aad
pop
xor
decl
pushf
mov
fldenv
push
push
inc
mov
mov
push
outsb
cmpsl
incb
xchg
test
mov
pop
nop
fmuls
addr16
jbe
xchg
sbbb
pop
inc
enter
adc
xor
push
arpl
dec
dec
xchg
mov
mov
inc
lcall
inc
push
jge
int
cld
int
mov
jge
mov
adc
leave
add
icebp
adc
add
gs
icebp
cltd
push
lods
mov
sbb
pop
mov
push
sub
lea
mov
jno
xchg
inc
test
mov
jge
inc
out
pslld
push
daa
sub
mov
cmp
cli
ss
pop
sub
ss
or
and
mov
aaa
or
push
pusha
xor
daa
out
cmp
sbb
dec
out
ja
add
test
call
push
sub
daa
adc
test
stos
xor
hlt
out
test
ljmp
arpl
or
mov
adc
or
outsl
push
xor
outsb
stc
dec
xchg
xchg
push
adc
test
jmp
jo
sub
aas
jbe
cld
out
mov
mov
sub
mov
jae
test
scas
xor
xchg
lret
inc
jno
pop
lcall
dec
push
cltd
ret
testl
mov
and
into
xchg
icebp
ret
mov
nopl
rcll
jecxz
xorl
out
fcmovbe
cmp
add
xchg
inc
sbb
adc
mov
add
scas
out
sti
outsl
inc
sbb
cmp
pop
arpl
pop
sbb
out
imul
rolb
xchg
mov
int
enter
sbb
jb
pop
in
mull
cld
hlt
mov
test
int
out
add
fists
les
and
ja
icebp
inc
jae
sub
xchg
repnz
shl
aaa
or
cmp
call
repnz
xchg
jge
rcrl
outsb
jge
xor
or
pop
out
lods
dec
xchg
aaa
sub
cmp
mov
push
jno
cld
inc
dec
xchg
test
push
fstps
ja
popa
mov
cmp
dec
push
pop
xor
scas
fnstsw
xchg
adc
negb
xor
aas
scas
ljmp
stc
aaa
fs
scas
ficoml
out
adc
xor
jo
dec
inc
subb
outsb
xor
mov
adc
push
sahf
mov
dec
jno
cmpsl
mov
inc
test
fdivl
data16
cltd
jno
cmp
and
call
in
in
gs
and
mov
sbb
or
loopne
inc
cmp
cmpsl
xchg
movsl
and
dec
dec
jae
xchg
pop
lea
sbb
out
cmp
pop
rcl
mov
pop
jmp
add
movsl
add
or
ret
lret
lods
adc
and
pushf
not
xchg
hlt
ljmp
in
adc
sbb
mov
nop
and
or
movsb
dec
cmpsb
lea
push
xor
xchg
lahf
push
arpl
std
ficompl
icebp
insl
test
js
and
mov
scas
fwait
mov
sub
xlat
mov
pop
fs
xchg
push
xchg
mov
add
js
insb
xchg
pop
inc
scas
cwtl
sbb
sub
orl
jl
cmp
loope
cltd
mov
mov
js
push
lcall
je
pop
cmpsb
sub
and
xlat
shrl
out
pop
push
test
and
hlt
imul
stos
xchg
sub
movsb
loopne
push
or
and
jns
clc
rcl
mov
xchg
or
push
in
pop
cmp
mov
jle
mov
popa
stc
ljmp
sbb
or
not
mov
outsb
mov
decl
push
sub
jle
inc
mov
shr
and
push
in
pop
aas
pop
and
mov
add
filds
pxor
push
mov
call
pop
pop
pop
pop
lods
add
sbb
xor
stos
mov
loope
inc
and
xchg
and
data16
lods
sbb
mov
jl
sub
jo
mov
mov
sar
enter
mov
mov
fldcw
popf
lods
dec
les
add
scas
cmp
xor
dec
inc
cmp
xchg
sbb
or
mov
xchg
loopne
add
cmp
lret
jle
sub
js
popa
scas
pusha
inc
xchg
fsubr
ret
ret
rcrl
or
xchg
sbb
clc
cld
mov
shl
repnz
jmp
xor
mov
jecxz
inc
sti
xchg
xchg
bound
adc
dec
xchg
cs
decb
xchg
add
mov
lock
sbb
cmpl
mov
xchg
je
int
aas
test
into
push
cs
bound
or
pop
pop
jo
mov
out
and
les
hlt
and
sbb
xchg
jns
lea
rol
adc
ret
in
mov
push
pop
sbb
xor
clc
fildl
out
adc
push
xchg
int3
adc
mov
sub
insl
xchg
adc
xchg
hlt
mov
sbb
or
push
cmpsb
adc
jb
mov
push
sub
inc
xor
cmp
stos
int
aaa
fimuls
add
and
dec
dec
dec
inc
mov
loop
dec
inc
arpl
lret
aas
sub
dec
mov
hlt
cmp
cmp
inc
dec
mov
xor
addr16
jo
xchg
stc
adc
popa
sahf
xchg
popf
aas
rorl
adc
sahf
out
pop
xor
or
into
dec
sbb
or
xchg
mov
dec
push
mov
or
int3
je
inc
inc
dec
jo
scas
jmp
call
adc
and
adc
cmp
pop
loopne
cmp
test
pop
jb
ja
lock
xlat
xchg
sbb
mov
adc
repz
mov
test
sbb
inc
and
mov
push
daa
int
add
mov
ss
xchg
mov
jmp
std
xor
or
in
pop
pop
loope
dec
addr16
xor
push
add
pop
push
sarl
lds
mov
lea
lcall
dec
in
shr
fwait
les
stos
sub
shll
jbe
jb
push
xchg
xor
lock
push
dec
push
sub
out
inc
xchg
or
dec
jl
aaa
add
or
cmp
js
test
push
cmp
mov
or
insb
push
movb
lret
cmpsl
scas
in
cmp
jae
push
repz
sbb
popa
cltd
dec
push
scas
outsb
dec
mov
inc
dec
and
jl
or
xor
aas
xchg
dec
std
aaa
mov
nop
jbe
pop
test
daa
sub
scas
out
arpl
xor
and
and
or
out
ljmp
jge
mov
mov
xor
loopne
pop
pop
pop
cmp
fidivrl
mov
fld
mov
aaa
ja
int3
sbb
xlat
cmp
mov
sbb
pop
push
pop
xorl
aad
jecxz
loope
jns
jo
inc
ret
jge,pn
push
les
lock
or
ljmp
xchg
ret
fmuls
cmc
xchg
cmc
jo
push
push
in
movsl
scas
scas
sti
sub
xchg
xor
fsincos
jns
fmuls
mov
insb
and
repnz
std
cli
jb
pop
clc
jmp
pop
mov
dec
xchg
add
and
loope
insb
push
adc
mov
mov
jg
cltd
fistl
jb
lock
sbb
jnp
fldenv
mov
mov
mov
add
lods
dec
jp
call
movsl
push
inc
xchg
cmp
xor
mov
popa
scas
xchg
jnp
inc
aam
in
sub
ljmp
out
or
push
xor
push
cmpsb
out
imul
xchg
mov
pop
xor
mov
or
adc
push
int3
adc
cmp
and
jo
mov
mov
xchg
push
add
scas
xor
popa
sbb
sbb
mov
xchg
outsl
mov
js
filds
push
and
xor
and
add
fiadds
and
out
mov
into
fs
jl
jns
imul
push
daa
popa
mov
sub
xor
insl
popf
inc
or
mov
neg
hlt
icebp
test
daa
mov
in
or
scas
int3
leavew
cltd
add
ror
cwtl
and
pop
pushf
fsts
inc
rclb
cmp
popa
jmp
bswap
cmpsl
mov
mov
lock
mul
dec
out
fs
fildl
dec
jb
loope
xchg
data16
sbb
inc
sub
push
sbb
popa
lock
mov
mov
mov
mov
or
inc
mov
loope
lahf
mov
add
cld
push
inc
stos
adc
jl
mov
mov
aas
stos
int3
mov
fs
arpl
or
out
or
jle
cwtl
push
add
imul
mov
xchg
js
shlb
push
mov
and
imul
push
cmp
fcmovne
roll
xor
and
xor
out
outsb
out
das
mov
pop
rcll
fsub
fwait
das
out
mov
and
inc
popl
scas
mov
loopne
pop
cmp
xchg
out
in
pop
shrl
stos
cmp
mov
jge
sub
mov
add
or
xor
jecxz
dec
imull
das
mov
lcall
xchg
enterw
xchg
lcall
lods
out
mov
lret
shl
jno
test
mov
or
push
mov
rclb
cmpsb
dec
mov
push
out
repnz
cmpsl
jne
notb
clc
sub
aam
jns
fs
sub
gs
mov
cld
mov
jl
mov
sbb
sbb
pop
jne
loope
add
and
cmpsl
jb
dec
test
mov
xor
movsb
dec
lods
clc
xor
repnz
or
shr
test
lret
insb
scas
add
add
ja
ret
push
sbb
sub
sub
and
in
mov
jle
rclb
dec
mov
div
lret
cld
or
adc
sbb
iret
cmp
pop
shrb
dec
addb
stos
aas
pop
push
ret
imul
cmp
cmp
test
sbb
pop
add
and
loopne
add
scas
inc
cmp
xor
cmp
ljmp
gs
mov
subb
inc
xchg
addr16
xor
int3
movsl
push
mov
ja
jle
mov
ja
int
mov
push
data16
lret
xor
pop
or
cmp
push
push
pop
in
inc
xchg
xor
les
inc
lods
add
push
adc
pushf
sub
mov
loop
sbb
push
xor
jge
hlt
addr16
dec
lret
jbe
in
add
gs
stos
xchg
jecxz
dec
aaa
fimuls
add
sbb
mov
sub
xchg
subb
mov
arpl
outsb
xchg
fisubs
xlat
leave
imull
or
ret
jg
imul
add
cmp
xor
xchg
fbld
je
mov
aam
mov
dec
aam
xchg
cli
push
or
lret
mov
xorl
insb
mov
andl
add
ds
adc
insl
lret
popf
pop
ffree
dec
dec
cmp
mov
mov
or
testb
cmp
in
mov
mov
insl
cmp
gs
les
inc
or
f2xm1
jge
jbe
push
inc
push
push
cli
iret
divb
fcomps
dec
jne
lret
or
aas
andl
les
pop
aas
shll
icebp
xor
dec
jle
jle
mov
adc
subb
rolb
fnstcw
cmp
xor
mov
xchg
fmulp
ss
loope
dec
dec
xchg
int
mov
stos
mov
loop
scas
jo
cli
inc
or
insb
or
xor
insl
enter
push
sahf
les
push
inc
cld
fwait
inc
jl
and
sarb
or
sub
mov
sbb
subl
lods
in
call
aaa
dec
adc
mov
out
or
ret
icebp
push
pop
hlt
repnz
ficoml
loop
pop
test
xchg
push
pusha
repnz
jg
into
lcall
arpl
mov
das
inc
imul
mov
mov
pusha
adc
call
xor
jbe
cmpsl
jg
scas
cs
pop
xchg
bound
insb
test
jecxz
xchg
subb
ja
popf
inc
outsb
scas
jmp
ljmp
ja
iret
mov
jle
pusha
sti
jae
xchg
cmp
xor
xor
xor
out
xchg
test
es
and
fs
cs
call
sbb
sub
cltd
into
pop
cmpsl
jno
push
add
test
imul
sbb
xchg
ljmp
add
test
pop
aas
add
pusha
jp
mov
push
inc
push
aad
out
js
xchg
mov
icebp
aad
ja
filds
xchg
cmp
repz
xchg
cltd
test
xor
mov
mov
scas
pop
into
or
push
and
mov
mov
aaa
lock
sub
subb
cli
push
add
movsl
sbb
lret
enter
js
or
ret
jmp
aad
loope
je
out
fsubrl
in
sti
faddl
sbb
inc
inc
lock
es
push
inc
leave
add
fcoml
push
ficoms
cmpb
testl
fisttpl
cs
dec
rcrl
mov
pusha
outsb
out
mov
push
sbb
in
jo
cmpb
pop
ret
out
mov
and
push
dec
stos
lods
je
mov
daa
mov
push
adc
loope
stos
fisttps
mov
cmp
mov
int
test
sub
fs
pop
jg
ss
push
pop
test
mov
cs
mov
mov
pop
pop
xor
jb
int3
ret
sbb
xor
jb
or
cltd
mov
aam
xor
sti
lds
inc
jno
cwtl
jo
js
or
pop
cmp
stc
shrl
pop
mov
inc
cld
mov
xor
lods
xchg
ret
pop
loopne
aam
mov
je
dec
int3
stos
gs
mov
xchg
dec
cmp
jle
push
push
fldenv
mov
js
mov
cmpsl
jl
ljmp
xchg
cmp
lock
adc
orb
sub
gs
and
std
or
xchg
or
and
adc
es
addl
cmpsb
cld
dec
push
and
mov
ds
xchg
xor
gs
jl
push
cmp
sbb
test
fimuls
jbe
ds
fstpl
jge
out
and
lods
push
xchg
js
data16
jp
clc
jg
push
xchg
cmp
stos
int
aad
icebp
inc
mov
mov
fstpl
pop
loopne
jb
imul
test
adc
in
xchg
push
out
icebp
mov
sbb
roll
stos
stc
bound
lret
push
in
and
adc
or
xchg
std
or
fwait
rcrl
xchg
sbb
lret
sti
jge
mov
mov
nop
outsb
mov
xor
sub
sub
sbb
movsl
in
add
popf
cmp
adc
mov
sti
ljmp
js
imul
mov
cmp
jp
imul
mov
push
add
cmp
pop
cmp
rclb
xlat
sahf
or
inc
mulps
lds
mov
push
test
push
or
or
mov
testb
addr16
mov
js
mov
sub
hlt
insl
aas
inc
lret
aaa
fimuls
or
dec
fsubs
jg
cmpsb
add
jbe
pushf
test
jne
mov
pushf
cs
outsl
loope
divl
pop
mov
or
cltd
mov
in
xlat
lcall
ret
push
adc
scas
je
lcall
xchg
cmp
lea
cmp
jns
xor
mov
mov
stc
cmp
insl
out
imul
add
sub
popf
jae
stos
adc
fsubl
xchg
inc
nop
std
jnp
mov
sub
add
mov
out
xor
sub
mov
jo
mov
xchg
jbe
jg
out
and
stos
int
dec
test
and
call
mov
jne
push
cmp
gs
sbbl
jae
or
or
cmp
pusha
das
cmp
mull
or
out
mov
incb
repz
and
out
pop
cmp
popf
cmpsb
jl
jne
add
outsb
cltd
shl
xor
outsb
ret
out
xor
or
out
mov
sbb
pushf
out
pusha
imul
xchg
leave
pop
sar
addb
or
cmc
xchg
push
popa
ja
ds
pusha
mov
std
mov
sbb
loop
and
lahf
xchg
pop
mov
in
popf
addl
dec
push
pop
pop
std
scas
out
cmpsb
mov
fildll
inc
roll
push
jae
push
mov
jp
hlt
inc
xor
int3
sbb
fistpl
rorb
sbb
es
xor
stos
sbb
mov
mov
mov
jle
add
addr16
insl
hlt
movsl
imul
cmp
sbb
or
das
fs
xchg
test
jns
or
data16
inc
mov
mov
rol
out
sbb
lods
sbb
scas
imul
in
test
leave
jno
inc
jb
cltd
int3
add
pop
inc
mov
push
xchg
push
out
jge
in
sub
popf
and
adc
lcall
ja
xor
push
aam
pop
pop
daa
daa
jg
loope
in
negl
outsl
fmul
xchg
cmp
shlb
or
and
pop
insb
cld
out
jecxz
sbb
shlb
adc
lods
xor
lock
dec
push
sub
test
outsb
jnp
movsl
or
xchg
jns
scas
push
sub
xchg
addb
dec
push
xor
mov
adc
mov
fnstcw
nop
das
add
lahf
lods
out
push
sub
aaa
mov
pop
enter
out
xchg
arpl
pop
jecxz
in
jle
cmc
in
xchg
adc
pushf
outsb
test
aad
jbe
cmp
dec
jb
ret
xchg
ficompl
mov
cmp
xchg
and
pop
stc
mov
pop
or
cmpsb
testb
xchg
pushf
jae
mov
scas
jg
movsb
adc
mov
cmpl
pop
fidivrs
cmpsb
bnd
lods
add
and
mov
sub
rcr
cwtl
je
imul
insl
aad
insl
jb
adc
push
adc
negb
movsl
xchg
cmpsl
enter
jmp
fimuls
adc
xchg
mov
add
fdivl
pop
imul
data16
out
fwait
lret
push
imul
in
fisubl
jge
push
sub
cmpsl
lods
or
js
popa
sbb
jb
clc
out
jp
dec
pop
mov
sub
or
test
maxps
loop
ficompl
imul
mov
cmpsb
in
pop
ret
inc
ljmp
or
push
pushl
cmpl
dec
inc
arpl
mov
add
mov
mov
scas
add
stos
cs
add
pop
mov
sbb
mov
sub
sarl
push
sbb
sbb
mov
pop
or
movsl
lock
or
fistps
inc
jmp
nop
loopne
int3
xor
shrb
stc
xchg
xchg
push
and
hlt
cmpsb
add
ds
add
aam
mov
icebp
push
xor
jp
jp
stc
pop
sbbl
inc
adc
out
repz
adc
lahf
jmp
jbe
call
xchg
cmp
push
push
sbb
push
arpl
fisttpll
adc
cmp
mov
insl
xlat
insl
push
scas
outsl
pop
cltd
das
stc
and
cmp
aas
push
xor
fildll
lods
mov
jns
mov
imul
in
pop
dec
fidivs
sub
lock
aam
bound
push
sarl
lahf
cltd
mov
sbb
cmc
pop
aas
ret
imul
xor
cmpl
iret
xor
mov
and
lock
pop
jecxz
mov
lret
or
xchg
imul
icebp
push
mov
pop
mov
in
pop
sarl
mov
and
jns
lea
mov
adc
rcrl
mov
mov
repnz
push
mov
je
inc
movsb
fcoms
adc
popf
add
mov
hlt
fwait
mov
imul
popf
test
pop
test
imulb
ds
rcll
inc
xor
rcl
inc
jno
xchg
jl
mov
mov
mov
shl
fists
cmpsb
jg
mov
jg
rolb
dec
fcomi
xor
es
jge
add
arpl
cmp
mov
mov
out
fisubs
xor
inc
out
aam
lds
cmp
insb
outsl
dec
jecxz
mov
mov
pop
subb
lahf
ss
xor
daa
and
adc
push
cmpsb
idivb
pop
sbb
push
push
rcr
inc
add
cmp
aad
push
xchg
movsl
lock
scas
popf
cwtl
push
pop
cmpsb
dec
cs
push
mov
test
jge
mov
pop
jns
test
mov
push
mov
cmp
scas
push
loope
outsl
jle
fisubl
pop
testb
insl
lds
jo
adc
dec
testb
out
mov
rorl
sub
push
inc
dec
jno
outsb
sub
jg
int3
shrl
aad
pop
roll
mov
outsb
jbe
adcb
dec
mov
sarl
pop
inc
push
inc
in
sbb
negb
fisttps
jmp
scas
gs
mov
xlat
pop
or
imul
add
nop
aam
iret
xlat
jbe
nop
sbb
je
dec
xchg
mov
push
stos
movsb
movsl
clc
je
aaa
xorl
lea
in
aad
mov
popa
int
rol
bound
out
mov
in
xchg
rorl
inc
icebp
lods
ljmp
xor
lock
mov
or
mov
and
cmpsl
test
and
mov
pop
dec
and
mov
fld
jp
jno
movsb
into
xchg
and
call
mov
ffreep
cmp
outsl
add
rclb
inc
sbb
inc
lea
mov
test
mov
mov
xor
and
mov
outsb
push
adc
mov
mov
scas
in
add
cltd
cmp
and
les
nop
xchg
or
iret
cltd
sub
or
add
mov
mov
pop
jae
stos
mov
filds
repz
and
mov
push
sbb
imul
push
xor
fidivrs
dec
ja
lds
xchg
test
xchg
xor
ss
outsb
inc
test
jo
pop
mov
adc
adc
outsb
leave
xchg
sub
push
jecxz
mov
add
fisttpl
lds
negl
mov
jle
lods
in
pushf
adc
inc
dec
mov
scas
inc
or
mov
add
mov
jo
ja
in
jg
push
cmpb
push
mov
mov
fistpll
pop
lods
mov
popf
loopne
lret
sbb
xchg
fistpll
scas
js
mov
pop
sub
insl
das
movsb
sbb
fxch
sub
stc
push
sbb
je
lock
in
mov
ja
xor
clc
mov
cmp
xchg
push
adc
shll
push
repnz
gs
ucomiss
divl
and
adc
lods
dec
xor
adc
mov
xlat
std
mov
jecxz
in
pop
call
cmp
cmpsb
add
pop
adc
sbb
rorb
xchg
shrl
pop
jbe
hlt
stos
cmp
and
test
fwait
mov
cmp
dec
push
loope
xchg
ret
fistpl
loopne
mov
pop
jg
xor
test
cmp
stc
xchg
push
sbb
repnz
hlt
sbb
sahf
or
push
mov
imul
loop
cmp
adc
out
imul
cmc
daa
pop
mov
xchg
adc
icebp
xchg
adcb
or
jge
mov
fstps
lret
and
inc
xor
xchg
aad
pop
rcll
movsl
sbb
mov
aad
mov
cs
mov
dec
loop
ret
sbb
sarb
jle
xlat
sub
push
push
cmp
popf
push
stos
inc
adc
adc
cs
addb
idivb
jns
pop
or
dec
dec
popf
mov
mov
xchg
pop
ljmp
inc
and
sub
leave
hlt
shlb
mov
das
jnp
jmp
idivb
lock
pop
or
pop
lret
push
loop
pop
sti
add
jle
xchg
push
loopne
leave
jmp
call
fwait
sahf
mov
mov
inc
popa
and
push
mov
and
loopne
mov
jno
and
nop
mov
inc
leave
mov
adc
mov
mov
dec
aam
pop
mov
leave
add
jne
or
xlat
ljmp
push
aad
aad
sub
mov
jns
stc
leave
lods
leave
out
cli
fsubr
jle
and
xchg
push
call
jmp
mov
pusha
int
iret
xor
sbb
lds
mov
sbb
loope
push
fiadds
push
xchg
in
enter
xor
arpl
cmpsl
dec
sbb
cmc
repnz
lock
dec
push
dec
cmp
jno
xor
inc
add
pop
test
jmp
add
mov
scas
and
sub
out
lret
pop
test
test
dec
ret
nop
es
int3
fimull
or
cmp
and
jne
stc
xor
test
scas
orl
push
mov
dec
les
xor
dec
test
inc
lahf
mov
dec
fldenv
fdivp
add
inc
pop
out
fidivrl
cs
mov
mov
jge
add
movsl
cltd
jbe
in
fisttpll
mov
decl
sub
pop
sbb
or
mov
addl
sbb
xlat
cltd
daa
xchg
imul
jnp
push
sti
cmp
out
push
add
repnz
icebp
push
xchg
decb
movsb
mov
lea
in
push
push
bnd
dec
rcrb
push
jno
add
scas
stc
into
or
loopne
xchg
mov
jns
icebp
scas
add
mov
stos
mov
xchg
inc
mov
add
xchg
push
mov
js
shlb
and
mov
js
push
mov
lods
dec
stos
pop
ret
imul
divl
outsl
mov
push
add
push
pusha
jle
adcb
stos
or
int3
inc
push
sub
fildl
shll
sub
test
icebp
xchg
imul
std
cmp
in
jnp
sbb
cmp
mov
push
lods
movsl
push
into
pusha
imul
psllq
je
cmp
scas
addr16
jl
stc
mov
sbbl
outsb
les
mov
push
sub
cltd
xchg
orb
ss
jp
shrl
cmp
cmp
lahf
lock
mov
fsts
jmp
out
fbld
pop
xchg
add
icebp
out
sbb
inc
pop
mov
out
pop
in
mov
mull
inc
sbb
clc
xchg
daa
add
mov
fwait
mov
mov
sbb
xchg
jb
cmpsl
sahf
xchg
mov
or
sar
inc
jmp
push
jno
lock
cmp
ret
ds
push
cmc
popa
xchg
jl
add
insw
mov
xchg
jge
mov
cmp
adc
push
pop
addl
mov
int
insl
out
adc
mov
mov
je
pop
jb
pop
ret
pop
sub
dec
loope
jl
adc
leave
mov
sub
out
mov
xchg
adc
push
out
jp
repz
fdivrl
jns
popa
mov
mov
sbb
stos
shrl
pusha
push
adc
dec
jo
xor
push
test
aam
bound
xor
jne
aaa
xchg
or
inc
push
push
mov
sahf
jmp
fidivrl
repz
repz
imulb
jl
jle
xor
push
and
ror
cltd
arpl
mov
mov
fisttpl
in
add
je
call
cld
dec
cs
fisubs
int3
sub
push
cltd
ret
clc
mov
out
mov
jge
sbb
mov
in
out
push
into
push
and
into
fldl
ds
std
xor
pop
jl
sbb
jo
xor
jns
inc
cmpsb
and
bound
lret
loopne
sub
je
aaa
out
jno
pop
sub
or
push
pop
lret
xor
insl
adc
mov
fldt
mov
push
mov
insl
and
sub
sbb
push
sbb
xchg
push
idivl
pop
push
push
dec
int
outsl
jl
insb
and
pop
cmp
xor
mov
adc
sub
dec
fcoml
lock
movsb
push
sbb
mov
pop
sbb
stc
sahf
adc
je
xchg
outsb
add
mov
xchg
add
jo
movsl
outsb
xchg
jecxz
into
mov
and
xchg
das
mov
scas
push
lods
adc
dec
stos
dec
adc
nop
cmpsb
cmp
ret
jp
lahf
inc
shlb
and
sub
xchg
inc
sbb
aaa
inc
cld
adc
stos
adc
jp
jb
mov
js
insl
fildll
and
sarl
push
inc
pop
adc
cmp
pop
xchg
jo
sub
mov
cmp
clc
jnp
inc
jo
insl
mov
lods
outsb
sub
push
push
addl
push
out
aas
mov
cli
sahf
fdivp
call
je
lret
dec
xchg
jmp
cmp
pushf
push
cmc
dec
xor
xorb
or
sub
and
popl
xchg
xor
outsb
mov
cltd
test
fidivs
inc
enter
sahf
mov
stos
call
mov
psraw
sbb
xor
xor
push
mov
test
or
mov
andl
xchg
add
loopne
ljmp
bound
cmc
or
rcrb
call
cwtl
cli
stc
loope
andl
lods
aas
and
call
dec
push
add
sbb
fldenv
push
mov
fdivs
mov
fistpl
lcall
in
xor
enter
loop
xorl
das
repnz
mov
mov
or
stos
aas
daa
mov
xchg
or
imul
gs
stos
lds
cmp
insb
shl
push
jp
mov
movsl
or
js
pop
subl
in
xchg
mov
cmp
push
pop
ja
adc
cmpsb
jae
or
sbb
push
mov
stc
and
dec
inc
outsb
addl
mov
stos
popa
push
cmp
sti
fdivrl
rolb
roll
and
iret
dec
shl
loopne
and
int3
outsl
es
mov
pop
jge
jge
sbb
andb
push
lret
outsl
jno
lcall
cwtl
fbld
cmp
push
cwtl
ss
inc
add
pop
stos
fidivrl
push
add
cmp
rolb
xchg
aam
push
mov
push
scas
je
scas
imul
push
nop
fisttps
jo
insl
sbb
add
mov
mov
mov
movsl
dec
sub
popf
testl
insl
inc
jns
ljmp
xchg
mov
enter
lahf
mov
inc
ds
imulb
push
cmp
mov
push
test
mov
dec
sbb
movsb
loopne
add
and
push
aam
inc
xchg
lock
mov
sub
and
mov
imul
aas
bound
cmp
and
cmp
dec
push
in
mov
jp
jp
sub
or
out
adc
sbb
aad
mov
adc
es
adc
or
jmp
popf
inc
sub
dec
jnp
push
lods
dec
mov
push
icebp
sub
cmp
cmp
daa
decb
sub
sti
testl
pop
xlat
pop
mov
loop
test
jle,pt
adcb
cmpsb
jns
dec
iret
inc
rcrb
add
int
mov
pop
xchg
lock
dec
mov
jle
push
inc
jge
js
cs
jae
sub
jo
pop
add
mov
add
mov
mov
loopne
mov
aas
or
xchg
in
pop
fwait
sub
sub
cmc
mov
jb
pop
xor
cltd
mov
jno
inc
dec
iret
ffreep
push
popa
adc
mov
and
sub
mov
adc
xor
inc
mov
std
cmc
xor
imul
dec
add
inc
test
mov
and
out
sti
cmp
sub
push
push
aam
sbb
sbb
jno
sub
ret
inc
push
jp
test
gs
xorl
sbb
adc
mov
or
dec
sub
ds
testb
jle
add
add
pop
dec
mov
adc
fisubs
idiv
adc
push
incl
nop
push
jecxz
sub
mov
add
ret
outsl
fcomps
rcr
xorl
inc
mov
inc
call
gs
sarb
mov
movsl
mov
mov
or
sbb
sti
insl
repz
out
pop
inc
pusha
ficomps
pop
scas
shrl
std
adcb
sbb
orb
int
into
mov
add
dec
test
and
mov
in
nop
pop
ret
mov
cmp
cmpsl
addr16
out
sbb
jo
cmp
loope
push
push
int
fwait
cs
gs
cmpsl
dec
inc
dec
or
xor
push
fmull
jp
mov
push
out
adcb
arpl
aad
sub
bound
xor
jae
xchg
into
dec
ja
lock
cli
ds
daa
mov
shll
lret
subl
jns
iret
jbe
add
das
mov
sub
xor
mov
inc
icebp
mulb
sub
stos
adc
lods
push
adc
xor
roll
xchg
xchg
subl
shll
xor
or
insb
sbb
jmp
cmp
in
and
lods
push
lods
cmp
inc
sbb
das
add
divb
icebp
shll
sub
xchg
pop
dec
stos
cmpb
mov
sbb
cwtl
push
out
dec
mov
inc
pop
mov
imul
add
mov
int
cltd
push
es
clc
pop
and
adc
cmc
dec
inc
movsb
cmp
mov
inc
ja
sbb
pop
inc
ds
fcomps
lock
or
push
adc
sbb
add
cmp
jae
jp
hlt
adc
out
das
cld
and
jne
sahf
in
cmp
mov
jp
imul
jne
aas
repz
pop
xor
mov
jno
push
sbb
scas
jmp
adc
gs
push
pop
sbb
push
dec
mov
test
cmp
fldt
sbbb
notb
or
stos
outsb
mov
pop
data16
xchg
cmp
pop
scas
mov
xor
or
imul
jge
cmp
stos
rclb
mov
fadds
push
push
sub
jge
xchg
ret
inc
push
fwait
pop
fsub
or
xchg
test
mov
or
xchg
push
or
add
push
cmp
enter
in
bound
std
test
or
adc
fs
sbb
cmc
push
jg
stos
jne
stos
dec
sar
out
sahf
in
int3
fbld
or
cmp
leave
bound
repz
cltd
inc
ror
mov
sbb
enter
shrl
call
pop
fs
nop
jge
cs
xor
jg
cmpsb
inc
iret
pavgb
scas
sbb
xchg
mov
addr16
lea
movsl
mov
jae
or
xorb
cmp
lods
inc
test
xchg
add
add
or
scas
or
ja
pop
cmpsl
mov
dec
sbb
test
enter
xchg
push
cmp
das
mov
sarb
pop
nop
fstps
jbe
mov
inc
ss
out
ljmp
andb
sub
mov
mov
dec
lea
out
adc
fstpt
jbe
lock
scas
pop
jp
sub
add
mov
int
mov
hlt
call
les
mov
arpl
xchg
sub
repz
orb
inc
mov
pop
mov
les
and
fsts
sbb
cli
in
xchg
or
pushf
xchg
mov
pushl
add
xchg
rorl
lret
dec
inc
adcl
popl
imul
sets
insb
cmp
out
shrb
inc
lods
int
push
cmp
sti
movsb
or
xor
stc
add
enter
push
out
sub
push
hlt
jl
xor
add
inc
cmp
mov
out
popf
push
loope
push
aas
aad
or
mov
stos
mov
cwtl
out
xor
addl
daa
cld
cli
cmpsb
lds
jb
ljmp
or
jp
mov
push
addl
stos
cli
jns
sub
sbb
repz
jb
out
mov
test
cli
sub
xchg
test
data16
xchg
das
int
mov
arpl
bound
rcl
jae
jge
fidivrl
outsl
xlat
or
inc
imul
push
leave
mov
shlb
and
and
sub
add
adc
fdiv
popf
ljmp
xchg
out
or
cli
mov
cltd
jnp
nop
cmpsb
dec
test
aam
and
shlb
clc
cwtl
jns
and
sbb
mov
inc
les
in
cli
xchg
shll
dec
dec
fisttps
xchg
nop
sub
rdpmc
push
jnp
insl
push
pop
sbb
rorl
es
dec
sbb
idivl
incl
test
and
add
xchg
rcll
movsb
jp
sub
jmp
mov
sbb
cmpsb
stc
xchg
push
dec
sub
or
leave
aad
ja
je
pop
jne
mov
in
pop
popf
sub
aam
push
add
xchg
aam
je
movsb
test
and
sub
sbb
push
push
pop
add
mov
lods
outsb
fistl
es
sbb
sub
or
mov
add
sub
ss
xchg
imul
pusha
sub
pop
pushf
jg
push
push
daa
hlt
repz
idiv
sti
mov
push
das
pushf
xor
inc
push
fwait
aad
xchg
inc
push
out
dec
or
jmp
push
pop
lds
and
icebp
loopne
in
jle
scas
and
cmp
xor
or
fwait
das
jnp
adc
lods
orb
daa
mov
daa
push
ret
enter
adc
sahf
jmp
fdivrs
cmp
aad
in
mov
aam
xchg
pop
loop
pushf
xlat
mov
inc
sti
lcall
mov
out
sbb
adc
cmp
shll
push
fxch
pop
mov
jnp
test
pop
mov
adc
xchg
jae
insb
push
pop
pop
aad
inc
fsubs
xlat
add
jb
and
test
clc
mov
dec
jle
push
fnstcw
jge
sbb
repnz
xor
pop
jle
stc
mov
add
push
mov
jne
daa
push
jns
add
nop
int3
sbb
push
mov
iret
ret
jno
inc
mov
xchg
add
shrl
hlt
add
pop
cmpsb
xor
clc
add
push
cmp
and
xchg
and
lods
mov
or
pop
inc
push
out
aam
and
xor
imul
ja
int3
pop
dec
and
loopne
in
arpl
incl
aam
mov
push
push
fwait
sub
fwait
pop
popa
push
lods
xlat
mov
inc
mov
pop
sbbb
cmp
fisubl
bound
js
xchg
sti
ja
cltd
or
out
dec
cltd
jle
imul
mov
aaa
jg
lahf
mov
shrl
mov
sbb
negb
xchg
inc
adcl
insb
sbb
mov
int
loopne
sub
clc
dec
mov
mov
ds
stos
bound
clc
add
xchg
sub
lods
push
cld
pop
cwtl
xchg
push
enter
xor
xor
cld
enter
pop
cmp
xchg
xor
add
das
or
xor
sub
movsb
sbb
sbb
push
mov
sub
pop
scas
mov
test
je
add
std
push
sub
nop
push
mov
movsl
outsl
ja
mov
popf
arpl
xor
shlb
jbe
and
icebp
fdivs
xabort
rolb
shlb
popf
pop
lret
push
bound
dec
lods
out
and
inc
pushf
jg
lcall
xchg
ss
stc
stos
icebp
in
xlat
and
push
cmp
dec
leave
fiadds
dec
loope
add
and
pop
and
fdivl
add
xchg
fwait
fwait
ljmp
loopne
xchg
add
in
inc
ss
mov
lret
push
xlat
cld
add
cmp
jge
movsl
mov
icebp
fcmovne
cs
scas
jg
outsl
cmp
ja
rolb
sub
nop
shlb
pop
out
pop
les
scas
or
loopne
shlb
jne
mov
fcmovb
jbe
adc
scas
iret
dec
out
lea
in
popa
into
inc
call
cltd
das
incl
mov
dec
in
shufps
leave
push
pop
iret
inc
fistpll
cmp
outsl
ret
cli
pop
inc
pop
lock
cmp
add
lea
and
lods
out
arpl
adc
ficompl
mov
aaa
xor
xchg
movsb
xchg
sbb
fildl
imul
insl
bound
jne
jnp
push
das
popf
xchg
push
mov
js
cmpsb
test
jbe
dec
ja
adc
cmc
int3
popf
xchg
adc
lret
or
sub
scas
mov
mov
int3
in
jbe
insb
jmp
repnz
fwait
pop
add
jnp
cmp
xor
sbb
push
inc
xor
pop
sbbb
push
push
adc
inc
sub
adc
xor
pushf
inc
jne
or
scas
repnz
in
adc
icebp
add
outsl
inc
xor
dec
stos
dec
sub
arpl
pusha
call
dec
or
nop
mov
mov
pop
in
adc
push
mov
xor
pop
pop
insl
popf
sub
push
movsb
test
push
test
movsb
test
fmull
xor
xchg
jns
sbb
rclb
repnz
loope
or
imul
or
push
out
adc
icebp
mov
add
jae
loopne
jb
pop
cmp
aaa
jo
push
inc
into
mov
cwtl
cli
loop
mov
repnz
xor
f2xm1
dec
sarl
xor
rcrl
cmpsl
xchg
or
repz
mov
outsl
sbb
or
adc
mulb
ljmp
enter
mov
out
lahf
add
das
hlt
or
inc
enter
sub
sbb
jge
in
sub
stc
cmc
dec
push
sbb
xchg
dec
xchg
loop
pop
push
pop
dec
mov
jno
sar
jnp
mov
mov
loop
pushf
aaa
and
adc
loopne
mov
jae
nop
pusha
mov
repz
xor
fdivrl
mov
jle
xchg
mov
sahf
mov
stos
jg
inc
pop
inc
pop
call
mov
pop
push
and
repnz
sub
add
add
mov
xchg
pusha
movsl
xor
xor
inc
mov
rorl
dec
pop
inc
imulb
xor
mov
jge
shr
push
jle
shll
cwtl
cmp
xor
jns
xchg
adc
add
push
bound
push
stc
pop
out
cmp
mov
push
arpl
cld
sbb
aaa
mov
inc
fwait
leave
or
icebp
cwtl
lea
sbb
shrl
mov
outsl
mov
xchg
jecxz
rcll
cmp
lcall
addr16
jno
mov
xchg
lcall
cmp
mov
scas
jne
inc
sub
insl
add
mov
push
bnd
lds
roll
and
leave
loope
dec
outsb
mov
jmp
jmp
ja
lock
int3
xchg
mov
jge
jp
mov
scas
jp
and
dec
aaa
ss
andl
sarb
add
jg
mov
pushf
aad
call
inc
push
sub
lods
imul
and
je
pop
jl
test
aam
or
popf
shlb
test
pushf
sbb
xchg
add
push
icebp
sbb
sbb
int
and
xchg
fnsave
aaa
mov
daa
scas
xchg
push
test
xor
inc
push
pop
mov
jl
mov
call
in
push
dec
sbb
cmp
imul
fiaddl
stos
cwtl
jp
mov
rcr
in
cmp
repnz
orl
sbbb
pop
loope
repz
adc
cmp
sub
ss
cmp
repz
test
lret
mov
and
and
into
sub
out
cmp
shrb
pop
std
ret
push
popa
test
jb
adc
cmp
jno
and
popl
xchg
xchg
jmp
add
bound
loop
add
xchg
add
in
xchg
hlt
ret
mov
lret
xorb
mov
dec
mov
repnz
aad
sub
test
mov
mov
mov
test
les
inc
sub
adc
stos
fnstsw
mov
ret
je
pop
mov
dec
push
popa
mov
movsb
outsl
scas
ja
inc
lock
xor
pop
andb
fmuls
rorb
arpl
int
jle
pushf
push
pop
out
mov
and
add
xchg
adc
das
aas
xchg
leave
add
jno
fdivrl
or
cltd
inc
insl
mov
adc
call
mov
push
loope
xor
mov
ret
loope
or
and
stos
lahf
xchg
cmpsb
push
adc
je
xchg
push
push
sub
lret
inc
fs
lea
mov
pop
shr
sbb
testb
xchg
jl
in
lock
cli
sub
jge
or
stc
xor
popl
push
stc
xchg
pop
push
or
roll
popa
sarl
icebp
pop
into
and
sub
mov
mov
popl
out
pop
test
xor
jg
adc
xor
gs
and
xchg
xchg
aad
les
add
out
pop
pushl
pop
sub
pop
mov
ljmp
jecxz
mov
pop
in
mov
pop
add
insb
call
mov
sub
lods
and
movsl
mov
push
mov
push
in
andl
mov
lret
adc
push
in
push
lods
insl
push
andnps
mov
xor
xchg
jns
pop
jge
mov
mov
sbb
sahf
inc
and
cmpsl
jbe
sahf
test
push
testl
jmp
mov
cmp
js
sub
ljmp
out
inc
test
jns
test
dec
cmp
push
or
push
jge
adc
int
mov
fcmovnbe
dec
mov
sti
jb
lds
daa
enter
pushf
inc
pop
cltd
movsl
jns
pusha
fsubs
sahf
mov
out
fcoms
cmpsb
lods
pop
sbb
in
mov
ljmp
iret
imulb
inc
xchg
in
pop
ja
ja
push
iret
mov
test
jge
inc
mov
pop
test
es
inc
jae
test
scas
shr
js
pop
sub
dec
xor
shrl
shr
push
inc
lret
shlb
iret
xor
aaa
pop
negb
pop
gs
roll
loop
stc
add
ja
inc
clc
sbb
xor
nop
sbb
push
xor
xor
outsb
inc
das
sarb
mov
mov
xlat
mov
scas
mov
cmp
mov
mov
xor
mov
dec
aam
add
les
mov
bound
in
movsb
es
stc
dec
xor
or
aam
orl
rcl
pusha
movsb
and
and
push
add
or
dec
out
mov
sahf
or
fstp
addr16
sahf
mov
in
inc
push
and
adc
and
dec
adc
scas
pop
cmc
and
ja
test
fdivp
cwtl
repz
movb
roll
adc
jecxz
inc
out
mov
dec
push
scas
xor
pop
lahf
dec
rcll
sti
push
imul
out
mov
push
sub
adc
fidivl
jbe
daa
xlat
or
mov
pop
mulb
sub
cmc
call
lret
sbb
loope
les
in
lcall
dec
mov
pop
movsl
addr16
gs
push
xchg
xchg
mov
repnz
adc
mov
cmp
lahf
jg
scas
lods
jl
ss
mov
or
sub
out
mov
push
cmp
pop
inc
cld
mov
xchg
in
mov
jmp
mov
hlt
and
sti
sarl
mov
sti
arpl
cmpsl
xchg
ficompl
mov
popf
ret
or
adc
scas
inc
dec
or
popa
aaa
data16
push
sbb
xor
xchg
aaa
inc
pcmpeqw
or
inc
mov
out
out
daa
popa
sbb
repz
adc
push
jb
pop
in
adc
enter
test
fidivs
inc
dec
in
fwait
push
sbb
lret
pushl
testb
xor
into
ret
aas
scas
fisttpll
hlt
xchg
sub
jb
mov
adc
jbe
stos
cli
andl
shlb
ret
and
push
mov
xchg
mov
js
out
nop
add
push
pop
roll
sbbl
add
imul
jge
sub
or
stos
iret
mov
cli
or
pop
mov
fcoms
inc
pop
dec
sub
dec
xchg
pop
call
loopne
mov
pop
push
nop
cld
outsl
sbb
in
adc
lret
notl
fldt
mov
test
orb
push
daa
aam
or
in
nop
rcrb
jae
or
xor
or
outsb
mov
imul
cmp
aas
mov
adc
push
es
pushf
in
push
shr
call
dec
sbb
jmp
cmp
sub
xchg
cli
je
add
ds
pop
xlat
ljmp
aaa
aad
push
ds
xchg
cmp
or
xor
push
divb
aas
xor
pop
xor
ljmp
sti
xchg
pop
sahf
mov
insb
imul
xor
icebp
add
ret
inc
mov
push
pop
mov
pop
adc
int3
pop
in
leave
jp
jae
inc
or
jmp
inc
push
or
cmp
aaa
mov
mov
xor
mov
ret
cli
jbe
fstl
push
into
imul
std
dec
out
pushf
jns
rcll
fxch
bound
les
xchg
mov
fidivl
insl
rorl
xchg
sti
mov
or
mov
mov
cli
in
insl
fidivrs
pop
js
mov
jle
les
cwtl
dec
mov
push
sahf
nop
xchg
dec
mov
jne
decl
and
xor
add
orl
jne
xchg
je
cmp
insl
out
sbb
orb
pop
lods
leave
mov
add
jae
pop
test
movl
jle
and
mov
add
push
lods
mov
pop
sbb
jp
addr16
je
ret
xchg
mov
shrl
sub
or
loopne
lret
ret
lods
inc
xor
test
pop
dec
loopne
mov
adc
cltd
lahf
push
sub
mov
mov
leave
js
or
mov
jecxz
xor
dec
cs
xchg
xchg
push
or
jl
pop
jae
sbb
jno
pusha
xor
insl
aas
scas
mov
or
pushl
aam
lods
add
cmp
push
sbb
aad
mov
imul
in
pusha
inc
sub
test
cmpsb
mov
jmp
fwait
dec
xchg
cs
adc
inc
jge
pushf
fnsave
dec
lds
dec
fmuls
ss
lea
iret
icebp
xchg
pop
imul
ja
cwtl
cltd
xchg
fidivrl
loope
scas
data16
lea
int3
push
int
cli
jb
faddp
xor
call
insl
int3
in
in
dec
cmp
xchg
mov
jnp
ss
outsl
std
repnz
xchg
cmp
dec
xchg
aam
clc
push
pop
pop
test
mov
cmp
rcrb
mov
loopne
adc
rcl
cmp
fdivl
and
pop
js
xor
fsubl
in
adc
mov
in
sub
push
inc
mov
mov
push
lea
inc
xchg
mov
xlat
test
fcomip
xor
pop
and
xor
pop
imul
jbe
xor
adc
in
loope
repz
dec
lcall
push
cltd
stos
enter
add
jp
push
mov
mov
mov
xchg
ss
fisttpll
jae
or
inc
stc
sub
inc
jne
push
popa
or
jne
movsl
in
pop
cmp
inc
outsb
mov
xchg
dec
imull
xchg
cmp
rcl
push
adc
aaa
jl
in
sbb
xchg
jle
fsubp
fisubrl
jg
ror
stos
loopne
or
dec
add
out
fiadds
mov
lea
cmp
sbb
je
push
test
adc
out
jo
cmp
das
or
mov
or
ret
int
and
andb
in
int3
mov
xor
or
sub
mov
cmp
pop
sar
mov
mov
shrl
fcomps
sbb
mov
mov
fwait
sbb
xor
sbb
add
or
dec
xor
ret
mov
in
call
lret
repnz
mov
lahf
inc
data16
jo
mov
das
sbb
out
jae
lock
jb
arpl
jle
and
nop
jae
pop
outsb
push
add
mov
and
addr16
push
fmulp
test
cmc
lcall
subps
int
push
pop
sub
and
adc
les
xchg
adc
das
test
pop
mov
iret
std
dec
repnz
fistl
aaa
fcmovnu
lahf
sbb
jne
sub
sbb
xchg
lock
push
sbb
mov
mov
pusha
rclb
jmp
sbb
aad
mov
in
js
cmp
movsl
cltd
dec
stos
popf
cltd
sub
jg
les
push
jbe
cmp
xchg
xchg
pop
cltd
arpl
in
xchg
and
fcoms
repz
aaa
cmpsl
dec
pop
cmpsl
xor
aad
jmp
inc
clc
inc
xchg
daa
mov
push
iret
mov
shl
rol
jno
xor
cli
lods
sub
jns
sbb
test
pop
mov
or
aam
inc
jae
cwtl
pop
pop
cmp
call
mov
sarb
sti
add
mov
sarl
jle
push
cltd
mov
pop
aad
out
fcoml
adc
push
jecxz
and
dec
inc
out
cmp
push
inc
adc
jmp
inc
push
sbb
xchg
stc
rclb
mov
popa
push
stc
cmp
dec
lret
in
cmp
mov
xchg
out
or
mov
add
jbe
or
popl
xchg
add
sti
popf
jns
repnz
andb
xchg
jmp
xor
popa
loope
and
js
lods
cmp
shrb
or
adc
push
mov
jns
sub
ja
aaa
in
fwait
dec
jmp
mov
add
cs
das
xor
jne
or
add
xor
mov
lock
and
push
and
in
ss
imul
imul
xlat
movsb
cmp
hlt
out
mov
cli
pop
movlps
fcomi
add
push
in
xchg
in
mov
addb
rcrl
mov
jg
repz
cltd
push
int
fildll
add
dec
notb
adc
pushf
lods
sub
xor
push
aas
repz
xor
dec
jb
xor
ret
inc
sti
xchg
clc
dec
and
es
push
cmpsb
cmp
jno
sarb
mov
int3
call
in
rcll
inc
fwait
aad
iret
fldt
test
enter
arpl
adc
mov
imul
nop
xor
mov
fists
or
cmpsl
jb
shll
in
fstp
sahf
rorb
pop
popa
ljmp
lock
add
repz
cmpsl
push
mov
fsubrl
jecxz
pop
iret
ror
dec
les
stos
sub
fimuls
push
and
sub
and
add
lret
add
je
xchg
jno
mov
mov
fucomi
jbe
fimuls
sub
les
aad
fiadds
out
xor
dec
mov
cs
shlb
and
sub
mov
cld
mov
and
outsb
sbb
mov
adc
call
lret
shll
ret
jb
dec
jmp
cmp
sub
mov
fstpl
sbb
sub
stos
inc
inc
leave
jno
nop
in
pop
jns
pop
test
pop
pop
cmp
mov
je
popa
xor
push
data16
xchg
mov
sub
cmp
aam
lahf
adc
sub
je
or
cmp
insl
sbb
jb
aas
push
mov
push
pop
jp
je
inc
call
shl
push
adcb
rcll
out
xchg
movsb
popl
jl
stos
repz
dec
insl
daa
mov
out
sti
xchg
cmc
cwtl
pop
mov
lcall
mov
pop
cmpsl
inc
iret
out
push
into
cli
js
mov
push
sarb
xor
xchg
push
pop
out
call
mov
fisubs
mov
leave
pop
xor
xchg
push
mov
mov
adc
xor
lods
dec
mov
rcrl
sbb
rorb
xchg
add
popa
ret
inc
jno
lock
dec
popf
cwtl
sahf
xor
mov
inc
pop
adc
mov
ljmp
sub
xor
cmp
xor
sub
mov
movsb
and
imul
sub
jmp
test
xor
add
enter
adc
dec
and
cli
adc
sbb
adcb
jle
sbb
popa
pushf
xchg
xchg
ds
ja,pn
lret
inc
mov
test
cmp
das
and
imul
ret
xchg
mov
out
mov
sub
in
mov
xor
sbb
bound
inc
ret
das
enter
mov
cs
mov
dec
and
mov
sbb
mov
push
aaa
mov
dec
sbb
mov
xchg
shll
and
popf
mov
mov
sub
inc
loope
adc
adc
inc
jecxz
xlat
adc
xlat
lret
jmp
enter
cwtl
xor
dec
sbb
push
push
cmpsb
scas
jno
dec
add
mov
mov
lods
push
pop
stos
test
hlt
mov
cmp
out
xchg
int3
mulb
sbb
mov
pop
sub
cmp
mov
dec
jg
adc
scas
pop
loopne
cmp
lock
lret
pusha
and
in
cld
and
mov
sub
stos
in
cmp
or
std
pop
fucom
shl
xor
xor
ss
sub
xor
and
shl
pop
sahf
add
xchg
fdivs
xchg
pop
pop
adc
call
movsl
and
mov
jecxz
push
loop
stos
mov
push
or
fistpll
jp
ja
jge
sub
js
mov
or
cmp
sbb
notb
and
fistpl
daa
xlat
lret
inc
cld
add
outsl
das
or
add
fisttpll
iret
gs
mov
cltd
xchg
sub
lock
rcr
cs
xor
mov
sbb
enter
rorb
sbb
xchg
sub
inc
pop
cmpl
roll
add
inc
push
rorl
je
xchg
sbb
fnstenv
sbb
dec
ret
pop
movsb
dec
into
sahf
dec
mov
test
cmp
cmpsb
sbb
cltd
pop
mov
push
mov
dec
mov
xchg
popa
mov
imul
arpl
adc
push
sbb
int3
ljmp
xchg
xchg
outsb
fsubp
int
les
test
iret
in
add
jbe
ret
mov
xchg
or
aad
insb
in
sub
mov
jo
cs
rcl
sahf
pandn
mov
pop
dec
les
xor
sbbl
mov
iret
addr16
and
jbe
xchg
dec
scas
cmovl
cmpsl
push
loopne
dec
push
xchg
adc
fmull
lods
hlt
xor
pop
mov
movsl
lock
cli
push
sub
cmp
push
or
jp
mov
addb
mov
popf
aam
insl
pop
rolb
xchg
cmp
xor
insl
add
lods
inc
and
mov
sbb
mov
inc
into
pop
sbb
inc
push
lock
imul
jg
das
imul
scas
or
add
or
push
cmpsb
idivb
scas
push
lea
xor
sti
dec
sub
test
je
inc
inc
pusha
out
pop
ja
out
sbb
jnp
data16
jns
adc
shlb
rcl
jo
sbb
cli
stc
push
dec
out
lods
push
int
push
cmpsb
inc
stos
andb
cmpsl
xchg
jne
clc
or
add
xchg
xchg
sarl
mov
push
rcrl
repz
mov
jl
outsb
sbb
pop
aad
in
mov
enter
push
call
push
add
clc
addb
dec
cmp
push
mov
lret
aam
aad
jo
sub
adc
lcall
pop
lods
jae
push
sub
mov
test
sub
sbb
mov
stc
cmpl
lfs
push
cwtl
subb
fildll
ret
outsl
loope
mulb
in
or
movsl
cli
orl
in
cmp
gs
xlat
aas
jecxz
jecxz
pop
shll
jl
xchg
push
or
arpl
or
push
ds
pop
add
xor
leave
sbb
filds
adc
cmp
stos
mov
inc
sbb
dec
mov
xor
sub
jmp
aaa
fstpt
xor
push
cltd
rcrb
testl
inc
fildll
and
imul
cmp
mov
call
iret
mov
shrb
or
mov
xchg
cld
jp
add
aam
arpl
push
add
sub
clc
or
imul
and
adc
adc
adc
scas
mov
bound
xchg
mov
fsubs
pusha
movl
inc
xorb
pop
xchg
les
push
push
sub
stos
pop
jle
rclb
jae
adc
addr16
or
adc
cwtl
xchg
xchg
and
xor
hlt
sub
cmp
aas
not
insl
jmp
sbb
aam
rclb
mov
cmp
inc
adc
nop
scas
cli
push
cmpsb
inc
mov
std
loop
lret
push
fcomi
out
notl
cmpsb
xor
fs
cmovs
push
jp
push
test
hlt
cld
out
gs
daa
repnz
lret
and
das
mov
js
icebp
fiaddl
xchg
popa
out
mov
pusha
cmp
mov
enter
adc
add
leave
xchg
movsl
test
pop
mov
and
dec
test
pushf
enter
mov
push
ds
jp
add
pop
outsb
insb
filds
and
pop
fmul
mov
push
cwtl
pushf
sarb
mov
xchg
and
out
or
pop
cs
daa
fwait
jo
leave
xchg
lret
sub
cmp
dec
xchg
fists
roll
push
xor
mov
scas
jg
sbbb
sahf
fimull
fcompp
data16
mov
mov
mov
jmp
mov
js
lcall
xchg
mov
sbb
ss
mov
xchg
ds
je
ror
mov
mov
adc
xchg
add
mov
aaa
mov
xchg
mov
sub
bswap
push
adc
add
mov
sbb
std
mov
ljmp
dec
and
xlat
and
sbb
or
mov
ficomps
and
mov
dec
loop
and
aad
movsl
enter
mov
cmpl
mov
xchg
push
rorl
ljmp
jno
outsb
dec
lock
mov
lods
mov
cs
pop
popa
sub
cld
jmp
lock
in
push
push
push
push
dec
or
jns
sub
pop
or
div
aas
clc
in
test
jecxz
adc
out
fcmovu
ret
sbb
pop
pop
inc
or
imul
xchg
cmpsb
test
out
in
test
jb
add
mov
add
xchg
imul
aaa
sub
and
enter
idiv
test
mov
cmp
in
popa
pop
into
jmp
mov
xchg
ds
cmp
fucomi
dec
into
ret
fs
test
inc
je
cmp
stc
stos
int3
push
fsubrp
lods
lock
jne
nop
dec
pop
adc
or
orl
out
leave
rorl
jmp
dec
cmp
psubusw
es
out
adc
push
cltd
test
sub
out
mov
mov
arpl
dec
iret
sysret
xor
mov
dec
sub
xchg
add
popa
gs
int
or
mov
fcomp
inc
shll
lcall
inc
leave
pop
mov
adc
stos
jo
sbb
jns
xchg
push
xchg
repz
imul
dec
shll
popl
out
inc
jno
jmp
in
dec
imul
or
adc
adcl
mov
push
or
or
add
mov
fucomi
dec
xor
mov
or
fs
mov
or
and
inc
sbb
orl
out
pop
insb
mov
dec
and
cmp
sub
lcall
dec
pop
push
inc
sbb
mov
subl
mov
das
cld
jl
dec
inc
popf
sti
ljmp
sub
pop
or
icebp
jmp
sahf
ja
enter
dec
outsb
jl
inc
hlt
xchg
out
shrl
fiaddl
sti
gs
add
negb
cmpl
fidivrl
mov
nop
rcrb
xchg
xchg
and
ds
in
dec
mov
xchg
cmp
pusha
jecxz
mov
sbb
jmp
sub
pop
pop
pop
xchg
jl
lret
stc
cmpsb
push
pop
mov
or
stc
mov
push
push
shrl
jle
lcall
jecxz
mov
pop
sub
sbb
rol
ret
adc
xor
add
adcl
dec
or
inc
cs
jne
pop
movsb
adc
push
xlat
mov
sarl
adc
mov
cli
iret
int3
push
scas
or
inc
lret
lret
ja
push
sbb
dec
xchg
sub
lds
dec
adc
subb
repnz
sub
xor
shrl
inc
xorb
mov
dec
xchg
dec
sbb
mov
pop
lock
and
push
mov
mov
inc
jae
shlb
cwtl
inc
push
je
inc
and
movq
jl
into
mov
jns
or
mov
ss
lods
mov
daa
push
loopne
test
lds
or
mov
sub
in
xor
xchg
fsubs
into
cmp
xchg
xchg
inc
cmovl
dec
fwait
sub
dec
scas
jo
push
add
hlt
loope
popa
imul
fdivrs
scas
cmp
dec
xchg
or
insb
pushf
mov
xchg
inc
movsb
test
inc
sbb
adc
add
xchg
mov
lcall
push
and
lock
arpl
popf
in
push
xchg
std
mov
lret
or
xchg
lock
jne
adc
and
ret
inc
pop
repz
cmp
jle
ret
sarb
stos
xor
adc
pop
push
lods
pop
dec
mov
test
mov
cmp
outsl
xchg
test
stc
ja
outsb
xor
xchg
arpl
movsb
and
out
orl
mov
hlt
cmp
imul
lods
repnz
cli
mov
mov
sub
adc
jno
inc
movsb
addr16
add
push
pop
bound
inc
movb
cmc
mov
push
mov
call
mov
mov
sub
testb
push
imul
and
shlb
aam
jb
jo
out
mov
cld
sub
iret
sbb
mov
mov
cs
mov
pop
iret
out
adc
lahf
stos
jmp
or
push
cld
inc
movsb
push
aaa
clc
ret
aad
add
ds
mov
mov
jecxz
fucomi
mov
lcall
adc
mov
mov
xlat
sub
or
xor
sub
add
cmp
push
fcomp
les
addb
xchg
push
das
ss
jae
sub
addr16
incb
sub
mov
aad
loope
or
mov
repnz
pop
repnz
jg
pop
push
cmp
cs
and
push
sub
inc
sahf
insl
jb
nop
or
cmp
out
loop
dec
ljmp
push
ja
sahf
int
call
lods
aam
jmp
mov
fstl
faddl
hlt
lahf
lock
jle,pt
jle
psubd
jb
cmp
movsb
mov
addl
hlt
or
inc
rclb
movsl
jmp
lahf
fwait
sub
push
adc
push
inc
pop
sbb
nop
add
inc
xchg
clc
nop
hlt
mov
mov
test
ds
push
sbb
sarb
sub
or
std
xor
ds
shlb
xchg
pop
sub
xlat
or
inc
js
inc
pop
dec
fidivrl
mov
mov
test
lea
fwait
jg
mov
fisubrl
rcll
push
sbb
and
stos
sbb
sub
sub
outsb
push
pop
ret
or
call
out
fistl
mov
cmp
xor
rclb
popf
sbb
in
ret
lods
xchg
fs
push
aaa
jl
negb
xchg
pop
sarl
push
shrb
sub
mov
cmp
outsb
add
xor
pop
lds
sub
xor
add
out
out
loope
pop
cmp
jp
seta
add
das
dec
mov
leave
out
jnp
rcll
cmp
xchg
and
mov
or
add
cld
imulb
or
sub
movsb
or
and
call
cmp
add
dec
inc
lds
mov
das
adc
pop
inc
and
repz
repnz
iret
push
sbb
ffree
push
push
add
cmc
push
xor
jne
das
faddl
or
sub
push
jle
outsb
ret
mov
mov
outsb
fstpl
jae
notl
mov
insb
cwtl
add
aaa
jbe
mov
lods
aad
adc
mov
add
sub
and
mov
sub
mov
mov
data16
inc
push
in
push
or
imul
cmp
xor
push
sbb
cmpsl
lods
adc
and
inc
shll
push
or
push
test
jno
push
pop
roll
jo
sarl
cmp
lods
fs
and
inc
xchg
mov
out
inc
gs
vmread
mov
inc
dec
or
cmp
sahf
out
mov
jle
sub
xchg
push
test
jecxz
stos
ds
xchg
xchg
insb
subb
mov
aas
sub
mov
ljmp
orl
xchg
push
in
shrb
mov
jecxz
cwtl
popa
fwait
hlt
cmp
adc
outsb
xchg
inc
sbb
arpl
pop
mov
xorl
xchg
sub
int3
je,pt
xlat
push
push
pop
cmpsl
shll
insl
mov
sbb
or
jg
sbb
divb
shlb
aad
mov
pop
daa
imul
ret
filds
test
xor
cmp
xchg
sub
test
xor
sub
xor
icebp
inc
mov
sbb
pop
sub
xchg
dec
or
xchg
lods
stc
scas
pushf
ds
push
iret
sbb
jmp
mov
mov
xor
mov
shl
jo
jp
add
add
cli
add
fcoml
pop
or
sub
dec
test
scas
addb
xor
testb
shlb
rcrb
cs
stos
aas
mov
addl
mov
sub
push
pop
push
jp
or
shr
inc
sub
lods
fidivrl
fmull
rorl
subb
ret
inc
out
test
out
sbb
inc
iret
pop
les
mov
shrl
je
and
test
ficompl
cmp
or
leave
sbb
push
int
sbb
test
scas
call
or
lods
ficoml
cmp
cmp
ret
xchg
les
repnz
push
ret
aaa
and
jae
jo
mov
lock
inc
out
mov
inc
test
xor
sti
insb
push
mov
mov
or
fiaddl
jl
mov
sbb
mov
in
sbb
nop
ljmp
cmp
sbb
bound
xor
pop
cmp
test
pop
sbbb
test
add
subl
leave
enter
int
stos
adc
sbb
pop
aad
inc
rcl
insl
int3
andb
cli
notb
jle
push
arpl
jne
jmp
adc
jle
inc
ret
pop
fnclex
je
das
inc
inc
insl
shl
adc
cmp
test
mov
mov
cmp
sbbb
sbb
sbb
pop
mov
dec
add
xchg
repz
xchg
dec
fnstsw
push
sbb
pushf
or
sarb
in
pop
xchg
xorb
inc
repz
stc
cmpsl
jecxz
es
mov
jge
pop
add
mov
add
pop
shrb
out
in
jl
icebp
pop
repnz
push
insl
pop
mov
int
jg
adc
jge
mov
in
cmp
loopne
mov
fwait
iret
lods
add
leave
sub
mov
das
fs
xchg
jmp
cmp
mov
dec
test
inc
push
mov
lret
and
fists
pushf
mov
test
inc
adc
push
and
dec
icebp
push
xor
push
insl
or
stc
sbbb
cmp
mov
jns
repz
cmp
in
int
and
rol
loop
icebp
pop
xchg
das
aas
es
inc
cld
and
jns
mov
xchg
adc
pop
jp
jns
les
and
cmpsl
mov
bound
jecxz
cmp
cmp
jnp
out
iret
outsl
push
pushf
sub
and
lods
jle
adc
int3
stos
and
dec
adc
ret
or
pop
add
push
gs
sub
mov
ror
jle
mov
xchg
inc
mov
cmp
push
sbb
mov
xor
cmp
push
hlt
sbb
es
fsub
ja
outsb
cmp
mov
leave
add
add
sub
dec
sub
pop
outsb
mov
dec
or
sbbb
je
pop
ret
pop
sub
imul
pop
jno
in
sbb
sbbl
or
pusha
jo
mov
pop
repz
add
dec
lock
push
or
jl
pop
sub
mov
outsb
cltd
int
addr16
cmc
xlat
es
pushl
xchg
adc
fiaddl
insb
add
repnz
test
inc
std
outsb
js
sub
push
sub
fsubrs
inc
lahf
sbb
aas
ja
dec
mov
in
sbb
sar
sbb
aaa
xchg
inc
sbb
addr16
xchg
popa
das
jb
mov
cmp
insl
inc
sbb
xor
dec
cmp
ret
xor
push
inc
push
mov
in
jp
fsub
data16
ret
push
popf
rcrb
add
pop
xchg
mov
pusha
jns
pop
push
adc
push
pop
cmp
pop
add
mov
mov
adc
add
xor
add
dec
mov
pushf
pop
test
sub
sbb
jge
jecxz
testl
ljmp
out
or
test
iret
dec
or
daa
rorb
xor
sub
cltd
lret
mov
pop
cmc
movsb
pusha
cmp
adc
inc
push
inc
cmpsb
xchg
cli
ficoml
out
mov
dec
xchg
insl
mov
xchg
std
ljmp
mov
in
cmpb
mov
dec
push
dec
sbb
mov
test
incb
fsubrs
jb
jnp
or
pop
outsb
cmp
insb
pop
cmp
dec
insb
lahf
inc
adcb
mov
iret
lcall
hlt
imull
je
clc
enter
filds
mov
std
or
cs
in
push
xchg
jl
gs
mov
fcomps
mull
lods
dec
int
mov
xchg
pop
jo
jo
dec
push
fldt
push
jae
mov
cmp
movsl
add
pcmpgtw
mov
test
dec
mov
push
xlat
ret
dec
shl
inc
sahf
jl
pop
es
lret
outsl
push
pusha
cs
lret
or
das
dec
adc
mov
fs
pop
insl
leave
cmpsl
out
fs
cmp
sbb
aam
xchg
push
mov
pop
fcompl
pop
mov
shll
out
and
fldt
repz
dec
out
mov
mov
sub
push
or
cmpsb
aas
xchg
xorb
sbb
shr
pop
scas
and
pop
mov
adc
mov
inc
lahf
jo
xlat
repz
ja
fnsave
mov
adcl
lret
leave
dec
bound
insl
sub
inc
pop
add
mov
adc
pop
jbe
and
push
or
fadds
lds
js
or
andl
cmc
sarl
adc
into
lods
or
jae
fdivl
mov
sub
jmp
inc
fimuls
pushf
and
sti
jmp
lea
push
xor
pop
mov
es
cwtl
in
xor
jno
sub
pop
xchg
outsl
cmp
dec
push
stos
push
in
dec
push
add
push
lret
push
cmpsb
loope
leave
addr16
arpl
movsl
dec
pop
pusha
pop
hlt
cmp
out
mov
push
aas
hlt
sbb
out
aas
or
cmp
sbb
xlat
push
sub
adc
add
int3
popf
inc
xlat
bound
jnp
inc
adc
cmp
mov
lea
jne
cmpsb
pop
lods
call
mov
ljmp
xchg
testb
xchg
cmp
mov
sbb
dec
xchg
test
adc
cmp
push
fists
popa
ja
stc
mov
mov
lret
or
xor
sub
jg
xchg
sahf
pop
xchg
or
add
cwtl
lds
scas
loop
das
adc
bound
lock
ret
lea
xchg
mov
ja
fsubr
sbb
jno
jnp
jae
sub
xor
or
ret
out
mov
lret
mov
in
lock
aam
cmp
test
pop
lahf
xchg
lods
ja
imul
ret
xor
scas
mov
mov
add
enter
mov
outsb
push
jge
or
or
inc
jecxz
bound
jns
mov
or
in
inc
fildl
addr16
jb,pn
cld
jge
mov
mov
int
cwtl
sbb
testl
dec
es
cmp
dec
rcll
or
or
or
cwtl
test
movsb
push
shlb
dec
pop
clc
clc
int
and
adcb
mov
fildl
stos
lahf
jae
repnz
and
pop
push
sbb
mov
inc
push
rcrl
mov
out
jnp
pop
stc
not
cmc
sub
pop
mov
arpl
sub
fiadds
fisttpl
or
popl
dec
cmp
fbld
popf
rcpps
mov
sahf
icebp
jns
adc
push
push
and
sub
out
and
and
das
xor
cmpsb
cld
repz
mov
mov
xor
xor
xor
mov
inc
pushf
push
rclb
pop
out
cmp
pop
fnstcw
add
shlb
fcoml
push
jp
mov
sub
ds
cmpsb
nop
enter
aas
shrb
xor
mov
and
push
jbe
pop
xchg
cmp
es
jnp
inc
icebp
test
and
ja
test
leave
mov
dec
dec
and
data16
or
fldl
dec
rorl
pop
lret
xchg
aaa
sbb
cmp
in
jecxz
mov
jb
jns
jb
push
mov
mov
mov
pop
sbb
test
inc
xchg
cltd
mov
add
cmp
jmp
cmp
mov
out
sub
fwait
adc
fsubr
push
cmp
jle
push
adc
or
out
cmp
pop
fdiv
add
or
int
xor
xor
rorb
inc
add
xchg
and
fcmovu
cli
mov
test
outsb
pop
xlat
es
mov
push
mov
push
cld
test
adc
push
in
and
sarl
lret
and
mov
fstcw
rorb
ljmp
repnz
enter
mov
jg
out
or
pusha
xor
cmp
and
mov
adc
stos
out
xchg
ja
mov
je
loopne
xchg
dec
bound
mov
je
xorb
es
xchg
je
push
test
mov
xor
xchg
dec
cmp
cmp
jp
repnz
insl
or
push
mov
aad
js
push
pop
inc
in
xchg
test
ret
out
add
nop
pop
mov
pop
xchg
adc
je
movsb
adcb
sbb
ret
aas
cmp
xchg
les
in
addb
pop
dec
sahf
mov
pop
rcll
addl
xchg
pop
std
ret
test
jbe
call
in
fwait
mov
cmp
std
jae
mov
nop
pop
sbb
sbb
or
jle
cmpsl
xchg
jecxz
push
dec
rol
gs
pusha
cmp
pop
sub
leave
add
push
mov
in
push
hlt
mov
xchg
cmp
cmp
pop
fdivs
jne
or
test
jno
add
hlt
mov
cmc
xchg
inc
xchg
out
testb
push
test
scas
xor
loop
xchg
int3
jae
adcb
cltd
mov
mov
cmp
into
and
lods
pop
jbe
xchg
pop
pop
mov
aam
filds
fwait
pop
iret
pop
xchg
pop
in
mov
fwait
jae
aas
lret
js
nopl
sti
call
inc
lcall
mov
int3
jg
stos
jbe
jb
cld
jp
or
xchg
icebp
aas
call
cld
lods
mov
sbb
jo
ret
and
mov
js
mov
outsb
shrl
push
push
push
push
lods
scas
push
push
mov
pop
stos
and
push
dec
into
dec
popf
inc
push
aaa
in
nop
shr
insb
addr16
adc
cmpsl
aaa
adc
and
shl
imul
xchg
mov
aaa
pop
enter
jns
pop
jne
mov
dec
mov
dec
insb
cmc
cmp
outsb
test
test
bound
in
stos
out
sub
xor
adc
dec
adc
test
bound
inc
outsl
out
fsubs
leave
ficoms
mov
repz
icebp
jl
out
jle
xchg
sub
jmp
jb
out
xchg
fisttpl
iret
mov
jle
add
sub
addb
jns
outsl
pusha
inc
or
pop
cmp
movsl
pop
fisttpll
loop
cmp
movsb
cmp
fnstenv
data16
test
xlat
sarl
push
mov
lods
mov
mov
mov
lods
call
sub
mov
jae
mov
addr16
sub
loopne
xorb
pop
xor
xchg
daa
das
mull
jbe
je
in
pop
jecxz
pcmpgtb
movsl
cmpsb
cmp
mov
lods
dec
arpl
push
cmp
cwtl
les
rorb
or
imul
iret
inc
rclb
out
enter
pop
rolb
sbb
or
hlt
and
lahf
sti
dec
rclb
in
xchg
and
out
into
jbe
push
out
adcl
push
xor
mov
scas
and
dec
fidivrs
jb
aad
idivl
outsl
and
aaa
xchg
cwtl
jns
mov
rcll
sub
sbb
push
dec
cmpsb
inc
xchg
xchg
test
loope,pt
xor
xchg
cmp
inc
movsb
cli
jl
sbb
lret
cmp
lret
lret
push
adcl
loop
ret
lret
jnp
scas
ss
add
mov
rorb
jno
xor
stos
push
mov
add
rcr
stc
ljmp
xor
jge
sbb
lcall
jge
enter
test
dec
push
jo
push
jne
add
pusha
sbb
arpl
add
xchg
and
mov
andnps
push
outsl
popa
pushf
pop
push
stos
adc
inc
or
dec
push
aam
js
xor
sbb
and
pop
inc
sahf
repnz
clc
pop
popa
in
dec
sub
pop
movsb
mov
fistps
cmp
push
jp
lock
sbb
cmpsl
push
into
pop
je
and
repz
scas
aaa
or
mov
fwait
pop
add
dec
jmp
xchg
bsf
cmpsl
pop
scas
mov
jns
aad
sbbl
jae
test
sbb
fwait
shlb
mov
ret
pop
test
lods
lret
push
add
clc
pop
insb
fwait
cmc
add
mov
out
push
dec
jo
ret
int
cld
jnp
xchg
divl
jecxz
dec
rcll
or
test
add
xchg
add
fldcw
inc
adc
cld
pusha
loop
fists
lret
jecxz
fidivrs
in
negl
mov
ds
cmc
push
stc
popf
jne
ja
mov
xor
call
daa
fldenv
sbb
inc
dec
push
std
push
mov
out
jmp
clc
movsb
or
sbb
cmp
adc
pop
test
cmpsb
imul
jbe
cmc
jae
neg
push
mov
rcll
jp
add
pop
pop
cld
push
jae
enter
es
cmpsb
test
push
movsb
dec
push
and
es
adc
push
add
xchg
xchg
out
andl
lret
mov
arpl
jl
outsl
outsb
dec
jb
jmp
lds
xchg
int
sub
leave
ret
stc
ljmp
push
out
dec
sbb
pushf
lds
sbb
inc
pop
mov
pusha
sbb
lret
mov
cmp
xlat
cwtl
mov
dec
and
fwait
pop
adc
jbe
lcall
pop
dec
xor
inc
mov
flds
and
jns
mov
xlat
push
mov
test
mov
ss
imul
sbbb
lock
adc
sbb
xor
mov
adc
nop
in
mov
pusha
mov
addb
xor
sarl
jo
insl
stos
jne
test
out
lret
ja
and
shlb
stc
icebp
add
outsb
ja
addr16
pop
mov
push
jl
mov
pop
push
lret
roll
icebp
imul
cmp
adc
cmp
adc
mov
rolb
stos
std
mov
sbb
inc
add
in
or
shl
scas
movsl
call
addb
lods
mov
into
inc
dec
frstor
or
mov
stos
and
ss
or
and
adc
jle
pusha
loopne
test
ja
int
jg
sub
out
leave
pop
fdiv
andl
cmp
adc
fisubrs
jge
xor
cs
xchg
mov
adc
fnstcw
mov
and
mov
lret
sub
insb
movsl
sub
adc
addr16
or
pop
mov
push
arpl
aaa
pop
adc
add
lret
and
lea
mov
sub
mov
aam
and
mov
mov
cwtl
ljmp
or
dec
mov
jnp
out
mov
test
adc
loopne
mov
insb
nop
inc
int
loop
enter
inc
jle
and
iret
fcmovnu
mov
xchg
inc
jae
inc
push
lods
dec
sbb
notb
jne
pop
cmp
and
or
outsl
mov
inc
cmp
jns
jg
jbe
icebp
mov
mov
cli
pusha
pop
jmp
sbb
sbb
int
fs
fwait
cmp
dec
in
push
mov
mov
int
sbb
addr16
aas
inc
negl
jge
adc
add
xchg
sarb
mov
ss
mov
inc
sbb
leave
ja
je
cli
pop
mov
inc
iret
mov
cmp
lds
lods
and
and
ja
xchg
mov
std
scas
mov
enter
pushf
xchg
inc
mov
xchg
inc
inc
int3
call
cs
int
pop
mov
outsl
add
daa
xchg
push
data16
bswap
cmp
scas
in
cwtl
sub
add
and
into
dec
mov
std
mov
icebp
aaa
jae
cmp
ficomps
xchg
imul
push
mov
outsb
pop
dec
repz
cli
enter
aam
push
movsl
fnstsw
loop
clc
mov
dec
aas
lahf
mov
and
xor
inc
add
mov
dec
out
movsl
inc
inc
sete
gs
cmp
scas
test
fdivl
inc
inc
mov
and
in
imul
mov
sub
jns
stos
cmc
jnp
jl
and
or
push
mov
in
dec
jmp
fisttpll
and
pop
inc
out
arpl
pop
je
outsb
lret
loopne
sbb
and
sbb
je
sahf
loopne
xchg
in
mov
adc
push
jb
mov
pop
jb
xchg
insl
sarb
cmp
push
push
fs
xchg
data16
mov
jle
adc
xlat
jno
or
scas
loop
int3
ss
fldcw
repnz
jmp
nop
xchg
mov
fcomps
or
add
jg
jnp
out
lock
cld
cmpsl
leave
push
xchg
sub
adc
mov
pop
inc
cmp
fistpl
cmp
cmp
mov
dec
cli
mov
mov
pop
popa
mov
stos
xlat
roll
mov
out
and
or
iret
inc
in
rorb
test
sbb
repz
or
sub
aad
mov
cmp
adc
stc
enter
jns
add
jne
fistl
mov
fs
fisubs
push
aaa
add
mov
add
adc
push
sbb
jle
push
popa
xchg
je
ret
mov
notl
jle
inc
push
ljmp
mov
adc
cmp
int
push
iret
lret
and
sbb
inc
jb
iret
jp
dec
popf
gs
push
in
je
imul
pop
cmc
jp
cmp
mov
inc
xchg
addr16
xchg
dec
insl
roll
jl
push
incl
loope
cmp
pop
fmull
out
pop
pop
cmp
xchg
push
sbb
aam
or
std
mov
cli
outsl
clc
push
jbe
sbb
es
int
adc
and
sbb
scas
add
int3
push
xchg
cmp
ja
pushf
add
mov
or
cld
jnp
test
xorb
pop
lret
test
or
stos
push
xor
shl
jp
xchg
mov
out
addb
jmp
lcall
andl
xchg
mov
loop
inc
add
aam
mov
stos
push
mov
pusha
adc
mov
sbb
test
or
mov
stos
mov
sub
add
test
fidivrs
into
in
std
out
fldt
shlb
jp
mov
jbe
lahf
ss
sub
and
test
data16
je
xchg
mov
xchg
lock
cmp
or
cmp
xchg
sbb
mov
lea
es
das
mov
sbb
inc
jg
pop
push
hlt
inc
jl
dec
add
icebp
imul
scas
pop
jae
mov
adcb
in
fincstp
xchg
sahf
inc
loope
nop
push
adc
icebp
cmp
fbld
adc
cltd
and
inc
cmpsb
sbb
sub
pop
and
cmp
shll
in
jle
xchg
je
test
xlat
dec
push
lods
rol
in
pop
xchg
jp
hlt
xor
insl
inc
push
call
xchg
fstp
mov
ret
mov
subl
pop
fs
std
lds
std
hlt
in
or
pop
mov
orl
sbb
mov
inc
movsb
cwtl
outsb
clc
dec
push
hlt
call
ffree
jecxz
push
pushf
movsl
gs
push
iret
jmp
mov
mov
mov
faddp
in
and
int3
jno
ret
adc
pop
sub
adc
xchg
mov
test
sbb
sbb
jl
xchg
shll
adc
fcmovnu
into
cmp
es
jmp
jecxz
jmp
int3
inc
and
stc
jge
add
in
push
pop
dec
sub
inc
dec
cld
push
stos
sbb
jle
out
scas
push
mov
stos
inc
jg
loope
cmp
pop
gs
adc
sub
xor
dec
jae
sub
call
xor
and
rcll
out
mov
sbb
adc
movsl
pop
mov
xor
fsubrl
xlat
xor
sbb
push
xchg
iret
jae
lods
mov
and
cmp
outsb
arpl
roll
and
fsubrs
mulb
jmp
pop
and
sti
xchg
pop
dec
mov
pop
xchg
pop
add
push
pop
in
add
notb
mov
outsb
dec
adc
push
cld
sub
lea
out
sbb
fnstsw
and
pop
add
sub
and
sbb
imul
lret
sbb
add
fstps
inc
sti
movsb
or
loopne
push
push
sub
scas
cmp
push
pop
fdiv
ljmp
arpl
cmp
in
jg
add
sbb
add
nop
mov
or
add
push
adc
xor
les
xchg
or
ja
push
cld
and
push
mov
loop
rorl
add
movsb
ret
mov
cwtl
test
in
ss
mov
addr16
repz
ss
int
fcmovnu
push
xor
ja
inc
and
or
adc
bound
jp
xchg
ja
rclb
adc
lods
int3
mov
sbb
imul
sahf
cmp
adc
sbb
lods
sub
pop
cmp
shlb
mov
add
scas
xchg
pop
in
mov
mov
test
ficoms
iret
js
enter
sub
call
or
jmp
in
div
popl
xorl
dec
bound
xchg
pop
in
icebp
xchg
pop
inc
pushf
jmp
push
pop
pop
lret
bound
inc
push
mov
adc
push
nop
leave
mov
add
clc
cmpl
clc
ret
cmp
cs
addr16
bound
pop
sbb
push
loope
adc
pop
aam
int
ret
aaa
jno
cmp
mov
push
into
fstpt
shrb
mov
xor
inc
cmp
mov
arpl
add
sbb
xor
and
cmpsl
lods
or
xchg
pop
fdivr
jp
outsb
jl
mov
shr
mov
add
mov
add
es
sahf
xlat
aaa
inc
dec
ds
sbb
mov
cmc
insb
adc
xchg
test
pop
mov
pushf
and
ja
sti
jp
jmp
lahf
popf
mov
and
and
adc
and
popf
cmpsb
sub
mov
add
dec
dec
mov
jo
cmc
or
daa
fadds
test
xchg
mov
push
push
enter
loop
xchg
mov
mov
mov
loopne
fstl
stc
pusha
mov
dec
int
arpl
jecxz
or
loopne
das
imul
pop
sbb
test
mov
sub
mov
push
insl
add
mov
test
xchg
test
dec
push
out
add
mov
popl
scas
cld
das
jae
jecxz
mov
lds
sbb
int3
enter
fsub
sub
lock
xchg
in
mov
jg
jbe
add
sbb
repz
push
xor
push
das
shrb
sbb
mov
fisttps
sbb
dec
enter
lds
daa
iret
cmp
stc
in
mov
leave
in
pop
cmp
int
into
push
mov
insl
xor
mov
adc
cmpsl
adc
ret
lds
mov
fidivs
sub
xchg
add
rorb
fadds
jbe
cwtl
jns
out
and
in
inc
jle
push
adcb
icebp
cli
outsb
push
dec
xor
dec
xchg
call
test
xor
jne
outsb
pop
test
dec
stos
test
flds
cli
pop
leave
fs
sbb
orl
arpl
sbb
push
iret
push
in
stos
pushf
mov
into
popa
jbe
inc
lods
mov
es
add
mov
jg
cmp
xor
jno
xorl
sbb
cmp
insl
jecxz
dec
fs
hlt
add
push
sbb
add
pop
outsl
xchg
loop
mov
sahf
xchg
cld
stc
sbb
add
mov
jno,pt
test
cmp
bound
sbb
fchs
popa
mov
outsl
pop
shll
inc
mov
int
mov
addb
data16
sahf
rclb
jnp
sbb
push
cmp
or
jle
cltd
rcpps
dec
adc
xor
movsb
push
jle
mov
arpl
mov
arpl
cmp
mov
cmpsb
cli
xor
mov
xchg
and
repz
sti
push
cmpsb
pop
add
xchg
fisubl
add
xchg
adc
lock
scas
dec
cmp
loope
pop
jnp
enter
addr16
pop
icebp
pop
loop
fwait
sbb
out
cld
push
repz
push
idivb
and
ret
andb
jno
mov
mov
lret
xor
sti
rcl
out
loopne
push
inc
sahf
pop
xchg
jp
and
mov
mov
add
shll
shrl
imul
cmp
and
inc
aam
jg
adc
call
lcall
daa
ret
pop
aad
cmp
mov
sub
mov
dec
mov
iret
mov
sarb
out
jne
fnsave
aam
ja
stos
dec
pop
imul
sub
pop
insl
jg
sub
xchg
imul
jl
mov
test
lcall
sub
jp
xchg
inc
push
out
mov
adc
mov
cmpsl
push
cmp
ja
ret
adc
shl
outsl
popa
push
pop
out
invd
mov
inc
movsl
int
xor
into
xor
jns
in
cmp
add
sub
mov
add
test
fisttpl
test
hlt
fs
sti
gs
adc
sbb
and
cmp
xchg
xor
pop
rcr
addr16
push
ret
jnp
fidivl
fs
dec
loope
cltd
inc
loopne
vmread
push
mov
int
sub
fidivl
mov
movl
cmp
mov
fsubrs
iret
sub
inc
gs
mov
std
rcrb
adc
rorb
and
xlat
push
repnz
push
mov
or
sub
mov
stc
xchg
scas
add
in
movsb
lods
add
inc
test
lret
dec
push
data16
inc
sbb
addr16
cld
adc
push
ffreep
daa
imul
dec
std
sbbl
jno
enter
push
rclb
lods
pop
sahf
cwtl
mov
or
std
andb
sub
xchg
jbe
add
in
jns
hlt
test
or
cmpsl
mov
aas
adc
stos
jae
or
push
sbb
or
jmp
out
adc
cmp
lea
cmc
and
inc
mov
xchg
pushf
mov
sub
adc
cltd
loop
lahf
mov
sbb
cmp
in
xchg
sbb
out
push
xor
push
mov
fwait
jg
std
ds
in
jae
mov
ficompl
jns
aad
adc
popf
inc
jmp
adc
jb
jg
in
ss
add
xchg
daa
cmpsl
cmpsl
mov
lds
int3
push
pushf
mov
or
xchg
imul
test
fiaddl
mov
into
add
sbb
jmp
clc
lock
inc
cmp
mov
das
push
jb
in
aas
or
mov
rorb
test
std
lock
cmp
xor
pushf
in
cmp
lahf
imul
inc
pop
jns
push
cwtl
fs
lret
std
xorl
call
inc
addl
std
es
mov
pop
jl
mov
pop
cltd
xor
and
mov
leave
pop
das
jge
les
mov
mov
scas
es
mov
mov
sbb
inc
pop
scas
or
cmp
cwtl
mov
pushf
adc
inc
stc
mov
mov
fcmove
pop
mov
imul
ss
xor
fsubrp
stos
mov
jmp
mov
fldenv
sub
out
inc
bound
and
cld
mov
xor
mov
dec
push
shl
sbb
ljmp
and
pop
data16
cmpsl
mov
addl
in
orb
mov
pop
adc
imul
rorb
jns
repz
shl
in
iret
xchg
ret
je
pop
movsl
mov
outsb
pop
into
icebp
sub
lods
movsl
insb
cmp
push
add
lret
jno
cmp
mov
mov
loopne
icebp
and
sbb
or
lret
cmp
into
jl
cmp
xchg
or
adcl
sarb
cmpsb
push
shrb
xor
fldenv
bound
inc
xor
pop
or
aam
inc
sbb
clc
scas
pop
sbb
sbb
sbb
dec
inc
test
inc
enter
adc
inc
aaa
gs
push
mov
mov
insb
xor
mov
add
mov
jne
push
cltd
das
test
mov
stos
mov
xchg
sub
mov
dec
shl
int
fimuls
ljmp
repz
aaa
lea
xor
jmp
repnz
cli
lea
aam
vmaxsd
mov
xor
mov
jbe
jmp
sub
ss
pop
ja
push
scas
cmp
lcall
stos
and
jle
or
cmpl
lcall
inc
repnz
dec
dec
iret
push
loop
xchg
fmul
fwait
xchg
es
mov
jmp
and
ret
cmp
pop
mov
stos
mov
fdivr
loope
pusha
push
outsl
jbe
and
jbe
adc
mov
ds
push
pop
pop
cwtl
aas
aad
jbe
lea
xchg
sbb
dec
sub
lret
imul
inc
push
lea
nop
ds
lods
pop
pusha
jns
cmp
out
push
cmpsb
mov
in
mov
cs
hlt
aam
mov
testb
sub
repnz
rolb
mov
add
out
inc
lahf
cmp
movsb
fstps
ds
jno
mov
inc
dec
add
ret
pop
cltd
cmp
loope
jp
mov
xchg
add
and
mov
lret
cmpsl
sub
pop
ror
popa
dec
outsb
adc
shll
sub
loop
mov
mov
arpl
push
xchg
push
mov
std
xchg
mov
or
std
inc
jb
adc
sarl
repz
lcall
int
out
sbb
push
icebp
lea
fdivs
dec
jae
adc
mov
or
pop
sti
or
aas
test
mov
and
mov
pushf
inc
jno
xchg
mov
push
push
jb
dec
aad
push
jl
fstp
push
aam
cmp
loop
nop
pop
outsl
ficomps
mov
mov
mov
cmp
xchg
jbe
push
xchg
rorl
mov
imul
push
mov
lods
jle
push
bound
lea
or
into
std
cmpsb
push
jnp
jg
mov
popfw
daa
shll
push
clc
mov
mov
inc
add
mov
idivl
inc
mov
push
fistl
pop
lock
cmp
call
cltd
call
outsb
jne
hlt
lea
cmp
sub
fstpl
shll
in
movsl
fdivrs
push
aam
and
or
adc
dec
xchg
repnz
in
xchg
cmp
icebp
inc
or
popf
int
fidivl
mov
mov
mov
icebp
stos
mov
lret
lea
mov
aam
cmc
sub
lcall
push
cmp
lock
mov
enter
and
xor
xchg
mov
lahf
sub
test
fisubrs
pushf
sbb
mov
gs
adc
out
inc
mov
mov
fs
sbb
cld
cmpsl
fdivrl
adc
and
pop
bound
mov
xchg
sub
cmp
push
mov
cmp
lcall
pop
rol
pop
jmp
add
dec
add
mov
add
test
or
idivl
lock
or
int3
fdivr
push
jb
inc
out
pop
dec
add
cmc
pop
xor
imul
adc
into
test
pop
repz
sbb
icebp
push
mov
sub
mov
xchg
adc
call
mov
nop
push
imul
xlat
pop
in
sub
xor
sbb
jo
push
mov
movsb
mov
fcoms
mov
and
push
xchg
lea
pusha
shrb
or
mov
and
add
mov
xchg
fdivrs
orb
mov
push
and
dec
push
daa
jo
xchg
mov
mov
loope
push
js
lods
movsl
mov
fists
pop
shl
adc
rcr
cld
cli
adc
ficomps
mov
mov
movsb
stos
ja
add
clc
fcoml
push
loope
sar
popa
hlt
movsb
jl
lcall
in
xchg
jns
or
pop
clc
lods
ficompl
or
leave
jnp
cmp
mov
push
fwait
xlat
xchg
call
popa
xchg
mov
push
cmpl
jl
sub
daa
or
cltd
adc
xchg
mov
lds
sar
push
int
popf
insb
mov
inc
and
out
arpl
xchg
dec
es
pusha
loope,pn
mov
mov
in
fwait
loope
pop
out
cli
dec
jmp
push
std
sub
jle
xor
ret
sub
sti
jno
jbe
mov
and
push
mov
push
or
jmp
push
adc
test
cmc
cmp
cmp
shrl
add
sub
into
pop
lret
outsl
ret
sbb
jb
push
xchg
je
adc
xor
fs
in
aam
lret
or
and
movsl
and
sahf
xchg
aad
xor
cmp
mov
test
in
xchg
adc
lcall
pop
and
outsl
sbb
jle
xor
add
jae
cli
adc
mov
jb
movsb
pushf
jp
lret
xchg
xchg
adc
and
enter
xchg
adc
fcmovu
mov
scas
jne
clc
js
and
insl
lds
adc
imul
cs
pop
roll
popa
addr16
test
inc
fimull
sbb
xor
loopne
pop
sbb
jg
pop
orl
call
inc
inc
xchg
sbb
xchg
das
test
mov
es
pop
jge
pop
nop
lret
sbb
sbb
pusha
cli
xchg
jb
and
cmp
leave
scas
pop
ret
popa
stos
rorb
roll
movsb
cmp
popf
push
mov
dec
adc
out
jge
xor
stc
in
dec
idivb
pop
push
and
out
or
push
mov
aad
and
adc
out
xchg
xchg
xchg
mov
pop
jg
push
jnp
popa
daa
mov
jp
aad
fs
fnstcw
into
jle
and
inc
xor
cltd
sarb
sub
inc
mov
fnstcw
cwtl
adc
dec
mov
fldz
mov
sbb
ljmp
iret
cmp
js
popa
mov
pop
push
subl
loopne
jle
xor
data16
loop
jmp
jb
lret
adcb
mov
mov
scas
push
test
in
push
loopne
and
ja
sbb
mov
sbb
test
inc
pop
test
sub
mov
shrb
adcl
aam
sub
cmp
add
pusha
imul
cmpsb
adc
mulb
and
stos
pop
dec
fs
push
ret
sbb
inc
mov
dec
addb
xchg
xchg
xor
sub
pop
jae
test
sti
daa
dec
decl
inc
pop
int3
aaa
push
push
stos
sbb
mov
mov
in
xor
out
in
loopne
out
inc
ds
mov
mov
jno
cmp
xor
cmp
push
pushf
push
pop
aas
ljmp
loope
adc
pop
fs
push
push
cmp
cwtl
jno
push
stc
cwtl
shlb
daa
xchg
xor
or
test
sub
nop
arpl
dec
dec
cmp
cmp
xchg
popa
pushf
pop
iret
sub
pop
mov
out
test
jb
aam
sti
inc
cmp
or
pop
out
lock
jb
fcmovb
pop
fndisi(8087
xor
ss
push
inc
mov
mov
mov
mov
mov
insl
sbb
sub
mov
ljmp
ljmp
in
jge
dec
fsubs
jno
dec
shll
test
mov
jbe
dec
dec
xor
mov
lods
sahf
test
xor
pop
cmp
cwtl
cli
outsl
add
mov
in
xchg
mov
int3
lea
mov
dec
push
add
xchg
addr16
ror
xchg
sbb
adc
inc
add
das
daa
cmp
sti
fsubr
pop
or
mov
clc
ret
jp
popf
nop
ljmp
sti
mov
iret
scas
arpl
sbb
pop
and
fdivl
fwait
xor
or
adc
mov
shl
pop
cwtl
je
sbbb
add
jge
mov
out
scas
aam
and
rep
out
fsubrl
jecxz
and
je
scas
cmp
mov
in
movsb
mov
xchg
out
or
lcall
adc
dec
sub
dec
aad
xchg
push
insb
repz
lods
orl
xchg
xor
mov
mov
or
add
outsb
out
pop
jne
and
push
add
hlt
jg
xchg
push
pop
sbb
xchg
cmp
mov
fsubrs
test
dec
out
std
cmc
rcll
push
imul
cltd
or
popa
mov
and
dec
sarb
push
mov
in
aad
pusha
add
cmc
addr16
push
cmc
sub
push
subb
sbb
test
jo
xor
sbb
xchg
and
sbb
scas
xor
test
iret
mov
sub
mov
loope
roll
ljmp
jno
bound
cmp
jmp
or
mov
ficomps
out
pop
jb
xor
xor
adcb
xlat
in
and
ss
addl
subps
xor
inc
inc
ds
mov
or
fisttps
hlt
negb
pop
rcr
pop
and
enter
mov
xlat
xor
bound
mov
jae
xchg
jle
dec
adc
sahf
jns
sub
mov
mov
add
cmpsb
hlt
xor
dec
test
ret
imull
jne
sbb
inc
int3
inc
mov
inc
inc
psrlq
xchg
ds
fisttpl
jecxz
iret
add
mov
add
ss
or
movsl
xchg
ds
cwtl
in
pop
add
jp
fcomp
std
out
xorl
ret
xchg
fdivrs
xchg
scas
dec
or
out
mov
lods
dec
test
mov
out
insb
pop
scas
jbe
xor
mov
jle
cs
xchg
jmp
js
fistps
sahf
pop
in
adc
dec
addl
addr16
sbb
movsb
pop
out
stos
sahf
xchg
jbe
pop
and
xchg
comiss
pop
inc
icebp
js
cmp
call
fsubl
sub
fsubl
pop
inc
lods
cs
xchg
cs
push
cmp
fildll
out
sub
xchg
pop
mov
js
aad
rorl
sbb
and
pop
sbb
sbb
cmp
mov
movsl
mov
add
mov
and
imulb
and
sarl
push
sub
cltd
int
dec
hlt
mov
gs
xor
xor
fdivrl
sub
iret
aam
pop
outsl
test
jne
cmp
jno
mov
out
in
jns
cmp
popl
scas
jecxz
roll
cld
cwtl
scas
adc
pop
into
ficoml
adc
je
sbb
int3
mov
lods
or
xchg
in
lret
outsb
dec
jno
push
movsl
andb
push
movsl
mov
adc
ss
js
xor
lods
xchg
rorl
inc
mov
cwtl
and
bnd
lock
mov
imul
add
dec
rcr
in
add
cmpsb
inc
cmp
xor
and
loopne
cmpsb
lock
hlt
cmc
cmpsl
and
shrb
inc
scas
sub
mov
mov
xchg
mov
jmp
out
pop
push
sbb
push
and
sbb
out
les
mov
mov
mov
sub
mov
sub
pop
nop
xchg
xchg
xor
jmp
push
jg
js
in
cmc
sahf
pop
and
ret
dec
jne
out
insb
xor
sub
lods
and
sub
out
jle
loope
mov
insb
loop
js
daa
lods
jge
clc
fstpl
sub
lods
testl
jbe
mov
jecxz
mov
fisttps
mov
sub
inc
add
cmpsb
lock
adc
push
pop
div
pushf
sub
add
fdivrl
pop
loop
sub
or
mov
fs
mov
and
fwait
orb
sahf
loope
std
jp
sbb
push
les
dec
loop
hlt
out
scas
jge
and
pushf
add
in
pop
in
loopne
sub
jno
js
mov
sbb
push
in
and
sbb
xlat
das
dec
mov
popa
push
pop
or
add
in
jge
xchg
movsb
sbb
clc
outsl
sahf
data16
divl
or
icebp
sbb
jecxz
cmp
jl
add
or
fwait
fwait
shlb
adcl
dec
inc
insl
das
push
cmpsl
ret
push
imul
in
clc
loope
cwtl
repz
sti
in
lcall
xchg
push
jnp
outsb
dec
dec
push
fisubs
pop
cli
aam
add
dec
mov
cltd
ds
subb
xchg
jo
pushf
add
loope
dec
nop
loop
sub
hlt
dec
jno
test
imul
test
in
cld
sub
sbb
add
xchg
call
arpl
fucomp
cmp
and
in
arpl
test
cmp
ffree
stos
xchg
adc
xchg
mov
push
xor
and
xor
pop
cmpsl
mov
fs
int
shlb
sarl
xor
jecxz
out
and
loop
aad
or
and
mov
shll
inc
js
hlt
and
push
xchg
sahf
add
push
jg
ja
sbb
and
cmpl
sub
jns
xchg
icebp
jne
adc
sub
lods
fidivrl
mov
sub
jge
mov
inc
xchg
jge
and
insb
test
fwait
xor
sub
fldt
sbb
sub
xchg
inc
mov
add
clc
imull
pop
jae
push
mov
lds
repnz
mov
in
mov
fidivrl
push
call
sbb
ja
mov
add
jne
jg
and
movsb
cli
mov
adc
cmpsb
mov
mov
test
and
ret
test
inc
add
xchg
lods
movsl
mov
xor
xchg
cmc
fs
xor
cmp
int3
popf
push
addl
sar
ret
cwtl
popf
cmp
cmp
adc
xor
dec
das
inc
add
repnz
rcr
mov
lock
pop
stos
jnp
sti
xlat
pop
xor
repnz
iret
pop
pop
insl
sarb
mov
fs
hlt
cmpsb
add
mov
and
mov
pop
inc
sar
int
inc
cmp
test
mov
adc
dec
push
push
and
clc
cmpsb
test
fdivrl
and
mov
and
dec
pop
inc
outsb
xor
push
in
jne
mov
jecxz
insl
test
movsb
dec
in
xchg
pop
imull
andl
sbb
add
pop
dec
dec
and
push
jnp
filds
in
aaa
jno
lock
or
lahf
mov
sahf
push
push
mov
mov
jp
dec
push
jae
les
mov
lods
push
jge
loop
fildl
mov
lret
js
es
push
jbe
cmp
je
xor
sbb
cmp
out
int3
dec
pop
nop
inc
loopne
push
inc
jp
adc
cmp
mov
in
jmp
mov
xlat
push
fbstp
testl
lahf
cmp
cmp
fisubl
xchg
mov
jb
or
rcrl
scas
mov
gs
jae
inc
jo
add
imulb
adc
nop
mov
test
roll
push
hlt
mov
loopne
push
mov
ret
cmp
pop
and
inc
in
test
adc
and
adc
mov
push
pop
lea
jecxz
sbb
adc
push
jl
adc
and
dec
mov
jo
addr16
pop
mov
jmp
xor
hlt
push
xorl
mov
aad
aas
lods
push
cwtl
in
inc
lds
sub
icebp
outsb
xchg
and
mov
xor
cwtl
mov
pop
sbb
lahf
mov
xor
sbb
cli
xchg
rcl
pop
fmull
lcall
sub
sub
pop
mov
add
cmp
hlt
fdivrl
inc
outsb
mov
cs
push
popa
mov
jmp
mov
inc
ja
test
mov
mov
dec
int
clc
imul
fs
and
push
and
aam
mov
enter
loop
sti
jbe
mov
addl
test
bound
push
add
test
and
lea
push
jae
nop
je
call
or
push
shrb
rorb
fdivl
lods
and
out
jns
jne
orl
cltd
cwtl
adc
filds
jno
dec
mov
mov
mov
int
and
mov
gs
lods
stc
shll
mov
cwtl
shlb
adc
or
add
xchg
cmp
subb
sub
out
cld
test
pop
push
sbb
mov
test
fnstsw
xchg
imul
push
andl
mov
cmp
pop
sahf
pop
test
mov
pushf
add
clc
mov
add
lahf
push
cmc
call
push
sub
enter
bound
or
xlat
push
jmp
roll
orb
in
add
jne
jecxz
or
imul
scas
lds
and
mov
hlt
mov
cmpsb
lea
mov
gs
pop
rorb
aam
frstor
mov
xchg
jae
imul
jb
ficomps
pop
push
adc
ljmp
fmuls
push
scas
mov
adc
mov
pop
lcall
loopne
in
mov
jl
mov
push
push
inc
mov
in
sarb
and
jae
gs
repz
jbe
pop
fistpll
dec
or
enter
ficoml
shrl
add
lcall
xor
xor
xchg
mov
sti
adc
scas
mov
mov
push
mov
mov
cltd
js
dec
mov
mov
pop
cltd
xlat
adc
leave
add
int3
jns
pop
sarb
cmp
and
data16
sahf
push
inc
pop
xchg
mov
push
cltd
cmc
imul
shr
hlt
ret
insl
idivl
inc
pop
and
inc
imul
dec
arpl
add
push
adc
lock
jmp
mov
das
cld
or
jl
push
hlt
cs
add
jecxz
mov
and
lcall
cmp
loope
adc
pop
sbb
mov
imull
mov
test
sub
outsl
pop
sti
stos
push
sbb
and
loop
mov
add
arpl
cwtl
enter
call
xchg
and
mov
lret
pop
out
nop
cmp
and
gs
sahf
in
mov
pop
arpl
or
or
push
mov
rep
lock
fldenv
stc
jp
in
test
xchg
mov
out
sbb
out
pushf
sub
xor
es
std
add
dec
pop
into
mov
rorb
test
dec
fcoms
jmp
adc
xchg
pop
xor
push
js
out
arpl
leave
dec
stos
sub
fisttps
arpl
aaa
sub
mov
enter
addr16
xchg
add
call
and
xor
dec
mov
loope
mov
mov
insl
dec
out
adc
fadd
js
aad
mov
add
stos
mulb
cmp
gs
push
mov
fcom
xor
daa
imul
inc
mov
add
cld
lods
lea
xor
jno
loopne
xorl
jmp
dec
dec
or
mov
dec
inc
fmulp
push
cmc
sub
and
and
push
clc
mov
ljmp
ret
push
push
int
mov
int
mov
cmpsb
or
xchg
stos
jle
in
das
sbb
xchg
fdivrs
fwait
loop
cli
cmc
xchg
dec
mov
stos
cld
lcall
adc
xor
inc
out
pop
fsubrl
push
sub
rorb
mov
dec
ret
mov
sbb
aam
es
jo
add
loopne
sbb
mov
sbb
cmc
jge
adc
xchg
mov
sub
stos
xor
fsubs
inc
in
xor
pop
lret
scas
push
push
mov
or
mov
mov
adc
cmp
popw
in
cmpsb
xchg
cmp
ret
cmpsl
js
les
push
mov
into
pop
aam
jl
aaa
mov
cwtl
or
rcrl
push
sarl
fidivrs
dec
add
mov
test
sti
xchg
push
sbb
decb
in
fdivl
aad
sbb
adc
mov
call
clc
gs
lahf
ljmp
loope
inc
pop
jne
lods
ret
pop
pusha
shrb
fwait
sbb
in
inc
orl
xchg
inc
or
jnp
dec
mov
sub
daa
adc
jbe
push
mov
add
stc
pushf
sbb
sbb
xchg
mov
inc
and
mov
cld
lahf
rcrl
ds
cmp
push
xchg
mov
in
xchg
jno
inc
clc
push
subb
leave
addb
xlat
xchg
data16
dec
je
mov
lock
ja
sahf
inc
je
cli
dec
and
cli
inc
loop
call
add
pop
outsb
sbb
pushf
fs
xor
hlt
test
pop
or
adcl
inc
cmpsb
xchg
pop
test
push
ds
xor
iret
mov
adc
mov
fwait
push
bound
add
adc
call
stos
sti
push
stos
jmp
sbb
lcall
jl
insl
or
cmp
xor
add
lock
out
sbb
dec
ret
lahf
cmpsb
mov
les
add
int3
arpl
xchg
push
movsb
outsl
and
mov
daa
inc
sbb
je
daa
sub
data16
aaa
in
xor
jnp
add
cmpsb
pop
out
or
jae
sbb
test
adc
inc
shl
rolb
outsl
int3
jbe
add
lods
hlt
stc
xchg
and
iret
js
faddp
mov
idiv
mov
das
loopne
or
packsswb
iret
ret
cld
sub
leave
insb
ds
in
pop
sub
repz
call
int3
or
cmp
or
dec
dec
xchg
ss
push
xchg
cld
shl
dec
pop
jg
dec
in
sub
arpl
push
cmp
in
inc
push
mov
push
lock
popa
mov
add
push
test
xchg
addl
testb
rcll
pop
jl
mov
push
test
pop
cli
dec
push
pop
cwtl
xchg
jns
cmpsb
mov
inc
mov
mov
xor
inc
mov
inc
xor
jns
inc
test
lea
jge
pop
mov
sbb
in
fdivl
stc
sbb
mov
out
xor
incl
call
xchg
mov
adcb
sbb
call
shll
dec
push
scas
pop
into
es
mov
pop
test
in
test
adc
rcl
xchg
aad
add
out
cmpsb
movsb
jmp
jno
sbb
mov
test
popf
repz
sti
into
scas
jns
jmp
js
test
mov
or
sub
cmp
jns
outsb
std
mov
shrl
xor
add
enter
xchg
cmp
jns
sbb
or
or
lret
xchg
or
es
adc
mov
rorb
mov
ficompl
inc
in
pop
clc
mov
dec
fs
mov
and
jp
insl
inc
test
add
divl
bound
add
insb
in
sti
add
inc
inc
movsl
cmp
mov
sbbl
lods
pop
ljmp
pop
mov
sarl
js
aas
rcrl
bound
gs
jge
xchg
daa
push
jl
movsb
xchg
xchg
or
and
cwtl
repz
cld
ss
cmp
shll
pusha
jno
in
shr
cmp
push
aaa
xchg
ja
icebp
rclb
mov
xchg
pop
and
jg
cltd
out
cmp
mov
ret
dec
test
into
movsb
mov
sub
loopne
jl
test
sbb
sub
pop
dec
fists
sahf
sbb
jle
int3
rcl
lret
subl
lret
sbb
mov
aaa
xor
cmp
aad
dec
popa
insl
int3
dec
je
sbb
mov
movl
call
mov
ret
jg
imul
dec
test
dec
pop
pop
or
jns
pop
jno
sarl
in
aaa
js
push
js
pusha
stc
notb
dec
orb
mov
rcll
lods
rclb
scas
jnp
mov
pushf
je
inc
mov
mov
xlat
ret
hlt
push
cwtl
ds
insl
out
jne
mov
pop
inc
rcl
fdivs
or
xchg
ret
idivl
rcrl
test
lahf
outsb
push
aas
sub
xor
test
inc
sub
flds
lds
cmp
sub
add
fstps
andl
rolb
out
xor
and
adc
mov
push
cmp
and
jp
out
out
adc
mov
aaa
inc
push
arpl
repz
ljmp
je
or
cmp
push
outsl
stc
ljmp
cmp
pop
mov
and
mov
dec
dec
or
cld
sub
scas
repz
test
xor
fdivrl
mov
mov
in
and
xor
sbb
fsubrl
fisubs
testl
inc
jno
fdivrs
repnz
xor
ss
into
shlb
jae
clc
pushf
enter
pop
out
mov
lret
pop
insb
dec
mov
loopne
repz
mov
decl
pcmpgtw
jp
inc
pop
adc
dec
push
stc
es
sbb
pop
movsb
cmp
xor
pop
mov
cmp
sbb
pusha
cld
hlt
cld
jl
sahf
stc
into
lock
adc
ljmp
shrb
pop
rol
mov
aas
stos
cmpb
dec
stc
cld
lock
jne
dec
cli
cmc
xchg
add
fisubs
mov
and
std
cmp
outsb
mov
xor
jno
push
loop
dec
add
mov
dec
or
das
sub
clc
call
xlat
loop
pop
fcoms
mov
inc
test
test
in
test
je
jecxz
out
push
int
movsl
sub
xchg
inc
test
sub
jp
sbb
sbb
xchg
popf
ja
test
jecxz
mov
mov
jmp
mov
aad
jne
int
sub
adc
fsubr
pop
xchg
sahf
jo
or
popa
push
clc
jno
lock
ja
int
jmp
rcll
mov
pop
call
out
dec
lcall
or
inc
xor
mov
jg
and
jge
add
idivb
add
cs
test
or
xchg
shrb
lods
add
lods
pop
ljmp
fwait
cltd
neg
mov
frstor
clc
inc
and
adc
in
andl
jns
add
adc
les
sub
stos
cli
fistpl
test
sub
movsl
icebp
lret
pop
sub
stos
dec
sti
stos
shr
imul
jge
lods
in
scas
lret
repnz
jo
nop
testb
pop
jns
mov
push
mov
sbb
mov
sub
sti
mov
das
incl
sub
das
add
jmpw
nop
loopne
enter
jo
scas
ljmp
dec
int
scas
add
iret
push
stos
jg
mov
mov
jae
or
adc
jp
xor
movsl
out
and
push
int
dec
xchg
sbb
loopne
shrl
or
cmp
in
jge
out
roll
inc
jl
loope
mov
xor
add
mov
ja
xchg
mov
push
gs
out
adc
push
adc
movsl
push
jae
into
aad
fstpt
pop
inc
fmuls
or
std
mov
mov
cltd
nop
and
insb
dec
cmp
xchg
cld
cmpl
es
xchg
add
jl
adc
dec
fists
or
push
roll
lret
mov
sbb
mov
dec
and
psubsw
movsl
cmp
mov
cmc
pop
pop
dec
jno
je
fsubrs
out
cmp
sbb
imulb
jne
fcomp
pushf
lea
and
inc
cltd
jbe
sub
daa
xchg
pop
mov
pop
ret
sub
sbb
mov
mov
push
mov
data16
cmp
mov
mov
push
lea
jecxz
les
lcall
out
cs
cmp
push
loope
sahf
out
in
ljmp
cmc
ds
inc
sbb
mov
out
vmread
data16
xlat
push
cli
push
out
sub
lds
xor
mov
mov
repz
roll
mov
sbb
or
les
mov
insl
aad
daa
cmp
inc
loopne
jmp
in
cwtl
and
adcb
stos
xchg
sbb
lock
lods
mov
lret
repnz
fbstp
dec
cmp
inc
std
dec
imul
fisubl
nop
lock
mov
adcl
mov
sub
jo
dec
sahf
sub
mov
cltd
fstp
daa
rcll
sub
cmp
jge
pop
sub
sub
inc
xchg
shll
loopne
subl
xchg
jbe
out
loop
imul
and
mov
mov
sbb
pop
cmp
mov
lahf
lret
mov
jmp
mov
orl
sbb
jl
js
push
push
cmp
cmp
out
and
dec
and
bound
fdiv
cmp
jo
xor
std
mov
cmp
cmp
push
test
sub
pusha
loope
adc
das
das
into
and
jnp
loop
loopne
jo
inc
dec
or
loop
adc
cmp
mov
or
push
push
ret
lahf
ja
enter
movsl
jnp
xor
mov
fs
stos
mov
stc
mov
sbb
mov
out
outsb
push
loop
dec
inc
push
in
sbb
cmc
data16
imul
or
jbe
mov
fmull
movsb
add
mov
xor
bound
sub
lcall
and
outsl
ss
daa
sbb
fisubl
cld
pop
movl
sub
mov
mov
movsl
outsl
cmp
lods
fistpll
push
aas
mov
lds
rep
mov
mov
inc
xor
in
or
test
pop
dec
sets
fimuls
lods
fcoms
mov
or
jge
std
push
xchg
mov
cld
rorb
mov
stos
pop
dec
cmp
dec
ror
inc
xlat
jmp
dec
movsb
push
pop
stos
lahf
mov
or
lahf
cmp
jbe
sbb
push
mov
dec
sahf
xchg
pop
adc
xchg
ss
and
add
cmc
jo
lock
sbb
dec
popa
xor
cmc
inc
add
xchg
outsb
bound
in
lock
adc
or
fistps
out
fadds
popf
repnz
aas
out
mov
mull
call
loopne
mov
cltd
xchg
in
je
xchg
push
das
mov
xchg
jnp
mov
dec
xchg
das
int
lcall
sti
sbb
sahf
push
in
fadds
inc
insb
mov
jecxz
cmp
add
jle
pushl
add
lds
aad
mov
les
cmp
test
jmp
xchg
cmp
push
shlb
out
loopne
inc
clc
ja
jae
lods
punpckhdq
loopne
imulb
ss
mov
push
and
das
xchg
js
std
mov
inc
dec
xor
sti
sub
jecxz
call
inc
sbb
out
push
lret
mov
jecxz
test
jnp
or
stos
gs
lds
fcmovnu
sbb
mov
jbe
cmc
lret
roll
push
std
lea
and
jbe
adc
xor
aaa
ret
xor
jno
bound
sbb
push
out
mov
rorl
pop
adc
mov
push
adc
jno
or
xor
aad
inc
and
outsl
and
cmp
add
add
mov
push
sub
data16
pusha
mov
cld
add
movb
cld
jecxz
fsubs
cltd
jns
jno
or
rorb
sti
sahf
mov
inc
dec
scas
mov
addl
xchg
fstpl
lahf
sti
dec
cmp
pop
dec
roll
mov
les
cmpsl
xchg
aas
mov
and
mov
int3
xor
std
insb
fs
data16
mov
mov
jbe
cmc
bound
mov
add
sahf
dec
test
xchg
mov
dec
mov
stos
hlt
add
imul
mov
es
mov
fstp
push
or
fsubrs
add
loop
xchg
ret
mov
or
and
sbb
adc
imul
fwait
xchg
ds
icebp
fwait
aad
pop
fsubr
mov
aas
push
int
lret
and
xlat
imul
sbb
jbe
out
and
push
and
lds
daa
cmp
and
xor
jge
xchg
popf
cmp
fs
or
inc
adc
std
clc
jo
loop
dec
sub
dec
xchg
xor
lret
sub
push
push
jle
add
test
rolb
jb
xor
std
fwait
mov
lock
add
sub
arpl
xchg
int3
cmp
or
fsubrl
xor
fucomip
out
or
fdivrl
add
pop
xor
sbb
lret
jo
mov
push
inc
loope
pop
push
adc
xor
jmp
shll
hlt
push
add
in
sub
rolb
mov
xchg
sarb
mov
pop
push
adc
jecxz
test
shrb
and
xchg
into
or
add
loop
cmp
push
popf
lock
mov
dec
fwait
pop
fidivrs
data16
cmp
out
jnp
pop
into
sbb
mov
xor
out
jbe
rcll
xchg
lods
sbb
adc
mov
add
inc
pop
push
mov
add
inc
pop
jle
dec
add
add
adc
les
ljmp
lods
sub
out
je
or
cmpsb
lods
ret
arpl
sub
and
ss
les
test
icebp
nop
and
int3
jge
mov
mov
cmp
data16
cmc
das
xor
or
xchg
dec
or
iret
pop
mov
ret
dec
mov
mov
aas
push
bound
test
les
ss
adc
add
mov
inc
pushf
fxam
mov
jle
loope
dec
rcr
call
imul
sahf
popf
test
mov
xor
das
addr16
nop
insb
scas
lods
stc
inc
pop
mov
in
ret
test
shrb
xchg
mov
psraw
mov
inc
jb
or
mov
dec
xchg
in
ret
sub
mov
jns
push
adc
inc
inc
outsl
std
data16
and
repz
shr
cmp
and
push
inc
in
jb
xlat
jne
mov
mov
cmpsl
cmp
add
mov
jg
xchg
repnz
daa
inc
movsb
movsb
shlb
adc
addr16
jne
flds
mov
mov
fisttpl
imul
lods
pop
ret
movsb
ljmp
lods
aam
mov
jecxz
jp
jge
cmpsl
mov
mov
sahf
xor
jne
jo
arpl
pop
das
ss
adc
mov
adc
pop
sub
icebp
mov
or
mov
pusha
sub
jno
xor
xchg
add
jbe
add
and
xor
or
mov
imul
xchg
aaa
popf
mov
outsb
shll
jbe
pop
xorl
test
cwtl
sbb
mov
aas
in
mov
std
cmp
jecxz
addr16
dec
movl
jl
and
pusha
lock
xchg
sbb
mov
lock
pop
push
cmpsb
rclb
and
sbb
mov
push
clc
test
or
and
or
imul
or
popa
loope
repnz
inc
enter
subb
mov
jae
test
shll
xchg
inc
xchg
add
movsl
xlat
ds
sub
pop
je
push
sahf
jno
push
hlt
add
adc
xchg
xchg
xchg
inc
mov
ds
mov
mov
repz
mov
pop
inc
and
xor
sbb
sahf
stos
mov
aas
mov
lret
jne
pop
scas
inc
ljmp
inc
repz
arpl
sarl
int
shlb
pop
stos
jmp
out
stos
call
call
mov
orb
ficompl
lret
jl
adc
daa
fildll
clc
xchg
dec
dec
fbld
rcrl
adc
bound
lds
sub
add
pop
sub
jle
divb
lock
jae
arpl
fimull
test
rolb
dec
jl
mov
xor
out
jl
dec
push
mov
xor
and
xchg
iret
inc
rorl
cmp
and
xor
inc
mov
mov
ljmp
shlb
stos
sarl
add
loope
hlt
lods
push
test
pop
inc
ds
daa
xchg
push
lea
jge
add
inc
cld
insl
rorb
imul
stos
insb
push
pop
sub
sub
cmp
mov
xchg
icebp
dec
fs
es
add
stos
clc
andl
push
call
leave
sbb
outsl
pop
insl
xchg
adc
out
mov
ret
ret
xchg
cmpsl
mov
divb
xchg
or
mov
fdivr
adc
call
lods
jg
xchg
add
bound
sbbb
dec
xchg
push
xlat
lds
test
or
ret
inc
out
int
sbb
adc
out
ds
or
mov
jnp
popf
in
xchg
mov
xchg
xchg
das
cwtl
dec
dec
and
push
jl
push
arpl
lcall
and
and
cmp
mov
pop
push
or
add
test
je
outsl
jb
or
mov
dec
js
xchg
or
xchg
jmp
jno
loopne
lods
cmp
inc
xor
mov
lds
pop
xchg
cmpsb
lret
xchg
mov
out
loopne
cmp
stos
aaa
push
dec
loopne
inc
outsb
jb
cmpl
clc
insb
or
fcompl
mov
ret
int3
adc
jne
aaa
sahf
jg
inc
arpl
mov
jne
cmp
inc
outsb
push
cld
push
stc
cmc
and
test
repz
mov
fisubrl
add
sub
aam
fldt
arpl
or
mov
sub
mov
xchg
fidivrl
addb
repnz
es
dec
aam
sub
in
dec
fisubs
sbb
pop
push
jnp
lret
push
and
incl
add
push
mov
fdivrs
xchg
sbb
jb
adc
ss
fsub
adc
leave
mov
jae
add
adc
mov
cld
ret
add
cmp
es
dec
lcall
sub
or
xchg
ljmp
inc
shll
pop
out
jp
hlt
push
push
jecxz
int
adc
out
andb
pop
xor
out
pop
xor
and
sahf
adc
popa
jb
mov
fsts
mov
rorb
sub
jae
jecxz
addr16
imulb
pushf
lods
imulb
into
shlb
inc
sbb
idivb
add
daa
adcl
cmpsb
mov
jg
adc
dec
push
cli
cmp
lds
xchg
jbe
mov
out
outsb
movsl
mov
adc
hlt
in
adc
add
cmp
adc
aam
inc
mov
scas
ret
xor
filds
popf
flds
inc
fbstp
xchg
jne
in
pop
rcl
push
jne
jg
out
and
xchg
cmp
dec
dec
push
ss
outsb
lea
fnstenv
and
xchg
xor
rcl
or
inc
mov
xchg
jecxz
mov
bound
sbb
ds
clc
dec
popf
sub
std
in
sub
cmp
pop
mov
fisubrs
push
xchg
in
loope
xlat
cs
xlat
iret
mov
cmp
push
and
in
imul
xchg
cs
add
sub
cmc
in
sub
cli
inc
and
shll
aaa
stos
mov
sub
xchg
fwait
xchg
stc
xor
dec
pop
jnp
push
cmpsb
pushf
xchg
aas
add
mov
jecxz
aas
xor
inc
jg
jo
lods
out
pop
xchg
push
mov
icebp
jg
pop
out
sbb
lcall
mov
sarl
sbb
cmpsb
jmp
xchg
cli
jge
test
adc
inc
add
xchg
sbb
pop
aaa
inc
pop
cmp
fistpll
ret
imulb
cli
sbb
pop
mov
push
or
cmp
shll
add
xor
xchg
mov
lret
push
sbb
call
sbb
and
iret
xor
dec
adc
test
fdivs
jns
bnd
aas
push
pop
jle
fdivs
mov
cwtl
mov
dec
dec
rcl
pop
movsl
cmp
mov
cltd
arpl
dec
mov
xchg
mov
pop
popaw
xor
lret
dec
mov
jne
loope
dec
sbb
dec
mov
cld
xchg
cmp
push
inc
xchg
pop
flds
movsl
jnp
dec
or
xchg
push
mov
call
xchg
divb
mov
adc
or
dec
dec
int3
lret
hlt
and
bound
push
mov
das
pop
cmp
mov
stc
jbe
cs
lcall
pop
dec
xchg
sub
mov
ljmp
push
mov
adc
xchg
clc
mov
xor
mov
xchg
in
xor
test
sbb
clc
jle
adc
pop
inc
pop
and
in
mov
data16
mov
dec
or
lret
lock
xchg
scas
jle
int3
popf
mov
mov
push
or
pop
jecxz
jg
pusha
xchg
clc
stos
nop
jecxz
arpl
cltd
sub
pop
shlb
stos
frstor
mov
push
popf
xchg
jmp
pop
les
iret
jle
jae
testl
or
or
push
idiv
in
jp
jge
xor
lds
dec
outsl
lods
imulb
pop
insl
clc
je
inc
into
jecxz
inc
xchg
outsl
mov
addb
in
into
xor
mov
push
sbb
iret
out
adc
rcrb
addb
movsb
rcl
imul
stc
xor
addl
pushf
mov
fs
sub
jmp
pushf
inc
push
ja
or
out
jecxz
push
sbb
xchg
push
jo
lods
cld
xor
sbb
dec
fwait
call
out
inc
and
gs
adc
xlat
push
jle
or
ja
jnp
ja
lea
sbb
cmpb
rcrb
inc
jmp
test
pop
jbe
mov
mov
addr16
push
xor
mov
jl
xor
sub
dec
cld
insl
in
call
add
in
sbb
sbb
movsb
xchg
aas
out
lea
lret
cmp
pop
push
int
jge
mov
jbe
sbb
mov
pop
dec
stc
inc
in
cltd
cmp
or
lret
pusha
xor
sahf
arpl
cld
jg
sarb
xor
fisttpl
call
pop
mov
test
imul
pop
roll
test
sahf
sub
and
test
imul
mov
adc
jge
lahf
iret
popf
cmc
push
dec
lods
xchg
aas
subl
and
or
jl
push
fbstp
cli
outsb
pop
iret
jnp
fdivs
jecxz
or
lret
sbb
mov
incb
pop
xor
mov
or
enterw
mov
nop
sbb
lahf
inc
cmp
push
jne
rorb
cmc
enter
pop
mov
xchg
mov
and
push
out
cli
and
test
jle
pusha
test
inc
jne
insl
cmpsl
inc
push
dec
les
sub
mov
ret
push
mov
jbe
xchg
jmp
pop
mov
in
jnp
popf
psrlw
loope
loopne
adc
adc
test
or
dec
movsb
into
int
scas
clc
cld
adc
mov
push
mov
jne
in
push
add
neg
data16
add
lcall
jo
push
xchg
mov
add
mov
jecxz
mov
fsubrp
pop
add
pop
mov
push
mov
loopne
movsb
pop
std
lock
cmp
sbb
mov
loop
jno
xor
push
movsb
ss
mov
inc
das
lcall
fisttpl
inc
inc
iret
or
sarl
fcom
fnsave
adc
jnp
out
cmp
sar
cmp
push
xchg
jle
notb
fstps
int3
cmp
dec
cmp
enter
cmpsb
scas
test
xchg
pushf
movsb
mov
negb
cmpsl
push
fcomps
jle
push
fdivp
pop
cmc
adc
divl
call
gs
test
and
adc
shlb
rcrl
cltd
dec
lock
add
dec
les
pop
inc
push
ss
les
cmp
pop
dec
cmp
repnz
push
addr16
sbb
arpl
enter
pop
lret
fstps
lock
mov
push
daa
inc
gs
sub
cmpsb
cltd
sbb
jo
dec
mov
mov
pop
dec
and
xorb
push
adc
sub
fmul
ss
ja
and
fisubl
mov
cwtl
sbb
push
push
or
adc
insl
jge
mov
inc
popf
jbe
arpl
push
mov
jne
add
push
xchg
call
shl
cmp
stos
mov
sbb
mov
mov
cmp
cmpsb
pop
scas
or
aas
and
imul
cmc
or
adc
mov
sahf
idiv
bound
lahf
jecxz
add
mov
sbb
push
pop
xlat
scas
sahf
pushf
orb
lods
add
xchg
stos
scas
add
insb
ljmp
push
xchg
repz
inc
mov
add
jg
es
jmp
xor
pop
sbb
cmp
cmc
xchg
pop
stos
dec
inc
aaa
ljmp
dec
loopne
jb
mov
push
fdivs
cmp
push
lock
ret
jne
cmp
adc
insl
jb
jge
cli
jg
aas
lds
cltd
xlat
sbbb
out
mov
repz
pop
rcl
scas
pop
cmp
testb
insl
inc
cld
stos
dec
out
add
or
xchg
xor
out
and
cli
mov
out
xor
scas
jg
inc
clc
ret
dec
sbb
inc
push
cmp
mov
cmp
icebp
faddl
cld
sub
mov
bnd
out
mov
rorb
jecxz
ficomps
in
inc
sbb
stc
shl
lods
aad
outsb
inc
push
fsubrs
pop
jnp
xchg
or
inc
dec
sub
fwait
and
and
and
push
sarb
repnz
mov
sub
test
dec
hlt
push
nop
test
or
xor
xchg
mov
clc
sub
xchg
or
daa
cmp
pop
xlat
xchg
add
pop
adc
das
dec
test
inc
sub
cli
sub
andb
adc
insb
inc
mov
lods
mov
xor
int
cmc
lret
popa
pop
dec
mov
push
nop
pop
hlt
mov
mov
adc
xor
shl
mov
cli
mov
in
pusha
mov
add
push
int
cld
out
pop
ret
mov
in
adc
pop
flds
lods
es
mov
push
ret
hlt
into
into
mov
int
adc
pop
fdivs
mov
xlat
sahf
lcall
sub
jmp
xor
mov
mov
jl
mov
lahf
lock
or
and
dec
das
or
cmp
pop
testb
xor
or
int
ljmp
movsl
xchg
lret
jbe,pt
mov
and
xchg
push
or
into
lcall
sub
mov
mov
pop
jmp
pop
or
sarl
fs
iret
and
adc
inc
sub
pusha
add
add
repnz
adc
and
cmpl
sahf
nop
repz
inc
into
and
fisubs
int3
js
fs
outsb
xchg
mov
push
sbb
aam
mov
push
rorb
xchg
push
add
jge
push
inc
xchg
or
cmp
jno
inc
xsaveopt
imul
mov
in
or
ffreep
push
iret
cmpsl
repnz
popf
ret
push
dec
enter
mov
movsl
das
push
sbb
iret
and
mov
mov
sbb
jo
push
sbb
insl
mov
mov
push
stos
push
sub
out
mov
je
jl
pop
stos
or
push
adc
data16
rol
sub
adc
and
enter
mov
movsb
inc
inc
dec
imul
mov
sbbb
xchg
popa
and
pop
dec
add
mov
mov
sbbb
mov
jb
xchg
pop
sub
mov
sub
lret
pusha
xlat
jnp
or
int
insl
jle
movsl
pcmpeqb
in
push
jne
mov
rolb
addr16
lcall
sub
loopne
dec
adcl
mov
inc
mov
push
stc
and
add
pop
frstor
pop
ret
lds
xchg
sbb
dec
adc
xchg
lahf
rcl
imul
stc
sub
push
stos
adc
movsb
and
inc
loopne
xchg
aam
xchg
dec
inc
inc
pop
mov
mov
sub
aam
in
xchg
push
sbb
push
push
leave
clc
rcr
clc
cld
adc
sub
inc
sti
push
xor
sbb
arpl
mov
dec
push
mov
mov
and
fidivl
popf
sub
xor
push
sti
lock
inc
add
movsb
fwait
xorb
ss
xor
mov
outsl
jl
mov
jo
xor
js
jg
mov
loopne
add
clc
sahf
xchg
xor
adc
ret
popf
in
insb
repz
mov
mulb
jo
cmp
add
or
lods
push
ror
pop
stos
out
xchg
add
jnp
rolb
fsub
mov
mov
adc
sbb
in
es
mov
adcl
icebp
fnstsw
xchg
mov
cli
cmc
sahf
xlat
inc
imul
fistpll
movsl
rol
shl
fldcw
inc
cltd
mov
pop
and
or
push
push
add
aas
test
jno
lret
push
addr16
and
inc
adc
outsb
imul
pop
aaa
lds
call
add
ficoml
int
inc
mov
movb
jne
mov
fisttpll
jno
push
imul
xor
jmp
pop
addr16
mov
dec
int
adc
xor
xchg
fnstcw
or
cmp
das
add
scas
lods
sub
or
ljmp
dec
mov
fsub
pop
push
ljmp
xchg
ljmp
sub
mov
inc
sahf
push
xchg
and
sarl
xchg
inc
lea
stos
sub
add
and
aaa
xchg
sub
je
mov
xor
dec
inc
test
cmpsb
mov
xor
cmp
mov
cmp
jl
and
cli
or
clc
aam
and
add
out
shll
pop
out
sbb
je
mov
add
ljmp
insl
stc
in
dec
mov
stos
push
jg
das
push
dec
mul
mov
mov
pop
sub
jb
push
cmc
aam
outsl
jnp
xor
sub
movsl
mov
push
xor
stos
and
out
je
push
jmp
mov
inc
outsb
jg
inc
pushf
add
push
rorb
int
xchg
aas
jmp
std
inc
cld
cli
add
push
aas
mov
push
dec
mov
daa
mov
das
aaa
push
lahf
add
jb
jge
shll
jo
mov
jae
aas
mov
std
cmpsb
jb
sub
test
pop
stos
sub
or
push
xchg
or
fistps
and
ss
fidivs
push
push
lds
and
rolb
mov
shl
push
inc
lret
cmp
mov
mov
sbb
testl
xchg
bound
mov
rorl
stos
clc
and
or
imul
fs
lods
mov
dec
add
pop
je
xchg
aas
xchg
and
push
mov
push
jle
jge
add
addr16
sbb
xchg
xlat
push
mov
stos
cmc
sti
addl
out
arpl
or
adc
cmp
pop
mov
pusha
mov
dec
enter
call
sbb
mov
dec
cmp
or
negb
jp
sub
ljmp
sahf
and
pushl
mov
shlb
sahf
sub
add
imul
xor
mov
in
pop
inc
dec
mov
lcall
enter
sub
or
add
pop
cmpsl
sbb
and
les
ljmp
ljmp
xor
and
loope
rcr
pop
push
pop
mov
sbb
out
fldl
int
shll
dec
roll
add
fsubrl
and
repnz
sarl
lahf
call
jns
nop
into
xchg
push
nop
insb
lods
adc
daa
or
js
adc
inc
popa
adc
outsb
int
mov
rclb
scas
dec
je
insl
jnp
mov
xor
cmp
stos
adc
cmp
fidivrl
mov
mov
jbe
mov
rorl
dec
shll
ja
jle
cmp
lea
repnz
dec
aaa
dec
mov
bound
mov
jg
and
pushf
ljmp
cmpsb
insb
pusha
cld
test
push
add
inc
adc
add
jnp
xor
out
push
ljmp
subl
push
cmp
or
es
iret
cmpsb
add
and
or
pushf
inc
fisttpl
or
jo
adcb
pop
pop
std
mov
xorb
pop
addr16
jbe
int3
imul
cmpsb
jge
scas
mov
dec
xorl
cmp
ja
lds
call
jno
test
aas
cmp
or
jle
fidivs
lock
xor
out
push
push
push
mov
jecxz
cmp
in
and
sub
nop
xchg
dec
xor
lock
push
scas
sbb
lret
push
jmp
jge
arpl
dec
rorl
leave
add
mov
fwait
sbb
or
out
sub
and
inc
loop
and
popa
sbbb
test
ja
mov
jae
xchg
inc
int
scas
shll
loopne
jp
pop
jb
add
adc
fldt
xor
cld
xchg
push
fwait
push
icebp
aad
and
mov
sbb
dec
mov
add
pop
adc
push
rcll
jo
in
cwtl
fucomp
dec
stos
clc
dec
pop
pop
cmpsb
lcall
pop
arpl
jmp
and
push
je
addr16
pusha
sbbl
push
or
cld
faddl
jbe
jecxz
and
repz
cmpsb
lret
inc
pop
dec
dec
fcoms
test
sub
pop
mov
lds
enter
aas
mov
pusha
and
and
push
hlt
fbld
inc
xchg
mov
mov
jp
xchg
arpl
mov
loope
sti
mov
sub
cmpsb
clc
sahf
outsb
add
movsb
neg
mov
das
idivb
aas
outsl
sub
xchg
mov
mov
adc
sbb
push
imul
jns
xor
adc
mov
inc
and
push
and
pop
adcl
jbe
lret
push
and
push
xorl
sub
int
mov
out
aam
xor
push
add
mov
mov
orb
repnz
xlat
outsb
cmpsl
ljmp
repz
xchg
in
mov
test
push
leave
das
mov
push
inc
mov
mov
orl
add
mov
sbb
stos
ret
stos
fidivrl
notl
mov
arpl
push
xchg
sbb
inc
insl
test
cmp
orb
push
sub
and
push
adc
mov
dec
xchg
or
ds
js
std
insb
sbb
sub
mov
int
sti
push
out
cmp
lret
and
out
ljmp
out
jle
in
cmpsl
orl
dec
mov
push
setge
ret
faddl
ljmp
jp
sbb
pop
inc
in
or
sbb
inc
cmp
dec
pushf
xchg
push
int
adc
ret
xor
sbb
sbb
data16
fbld
in
cs
ss
loopne
cmp
dec
out
pushf
js
nop
roll
inc
mov
or
addr16
ss
sub
jnp
sbb
push
xor
jecxz
lods
jb
clc
arpl
or
repnz
xlat
xchg
mov
mov
loope
clc
cltd
and
add
inc
nop
xchg
sarl
mov
mov
adc
push
inc
hlt
fistl
and
xor
inc
mov
iret
in
dec
cmp
movsl
fcompl
int3
fwait
in
mov
xchg
xor
lods
aaa
inc
mov
insb
xor
and
mov
imul
das
jns
aam
ja
daa
pop
jno
jl
lcall
and
imul
xchg
fistpll
jne
push
and
jae
gs
xchg
adc
jns
imul
jp
cmp
adc
mov
sahf
sub
xorb
sbb
fiadds
int
aad
lcall
add
loopne
scas
daa
add
aad
inc
in
adc
jle
orb
gs
dec
pop
cmc
icebp
pop
push
sahf
in
pop
mov
inc
je
scas
or
sub
or
fistps
loop
call
dec
jns
cs
mov
lret
es
std
in
lods
ja
xlat
popf
ret
aaa
push
jmp
mov
and
out
popa
pusha
lds
ret
push
xchg
bound
pushf
sbb
mov
mov
lock
in
add
pop
cmpsb
enter
xor
andb
pushl
pop
out
sbb
push
cmpsl
pushf
push
cmp
sub
loopne
jl
mov
push
pushf
int3
mov
pop
ljmp
cmp
lods
cmpsb
aaa
mov
es
rcrb
xchg
sbb
and
jnp
dec
imulb
scas
das
dec
inc
lea
mulb
dec
dec
stc
xchg
push
jbe
mov
jmp
in
fnstsw
or
pop
cwtl
mov
pop
cmp
subb
mov
in
xchg
push
in
xchg
idivb
dec
ljmp
cmp
es
fs
and
inc
jg
std
lret
sub
enter
fidivl
inc
ljmp
fxam
sub
sahf
movsl
fsubrl
cwtl
pop
mov
jo
shlb
cmp
dec
daa
inc
jo
cmpsl
hlt
lds
mov
ljmp
sti
nop
notl
mov
jmp
nop
sbb
or
outsb
xchg
push
mov
inc
loopne
outsb
enter
call
lods
pop
aas
popa
xchg
repnz
iret
mov
mov
mov
mov
cmp
jbe
addr16
sbb
jp
and
pop
sahf
and
call
dec
in
mov
push
adc
movsb
cld
loopne
inc
bound
imul
jne
in
adc
mov
mov
int
xor
das
xchg
adc
sbb
or
inc
xchg
mov
cld
lods
out
adc
dec
ljmp
xchg
dec
rorl
dec
cmp
xchg
xor
adc
pop
das
and
sub
mov
xchg
xor
insl
int
xor
call
sbb
jmp
shll
xor
les
mov
jnp
mov
imul
add
push
xor
lods
pushf
das
push
int3
in
in
test
mov
inc
and
inc
sbb
dec
ficoms
fwait
sbb
inc
mov
jno
dec
mov
insb
xor
in
mov
cbtw
inc
mov
int
rcrl
mov
pop
fidivrl
sbb
and
jne
dec
mov
in
lds
inc
adc
xlat
xchg
cmp
sar
lods
mov
xor
call
outsb
cmc
dec
sbb
loopne
mov
push
cmp
rcr
rorb
push
fs
inc
outsb
orps
shll
stos
in
cmpsl
jns
repnz
or
out
mov
int3
mov
out
scas
call
fimuls
jb
push
cmp
push
jo
sbb
mov
into
adc
push
dec
mov
bound
rdpmc
fwait
cmp
es
cmpsl
and
dec
addl
inc
subl
cmp
inc
sub
lea
sbb
jge
ljmp
inc
jmp
mov
mov
adc
pop
add
bound
fs
ret
xchg
cmp
out
or
sbb
es
scas
stos
xchg
sbb
xchg
lahf
fisttpll
stc
sbb
mov
cld
jb
mov
push
pop
pop
xchg
lock
bound
push
jae
fistpl
clc
cmpsb
mov
aad
inc
add
lahf
jle
push
sub
cmpsl
bound
fldl
pop
lds
stc
sbb
cmp
mov
adcl
shl
push
cli
push
mov
cld
data16
stos
sarl
adc
dec
or
jmp
cs
jno
stc
adc
inc
mov
jge
lcall
movsl
jb,pt
sarl
sbb
fsubrs
lods
jne
cmp
jno
or
nop
pop
jne
pop
lds
push
and
aas
add
push
dec
and
jl
mov
jnp
add
sbb
mov
dec
jecxz
xchg
ja
xlat
sub
pushf
test
ds
imul
mov
mov
addr16
sbb
or
jecxz
jmp
cmp
push
insl
mov
lret
jo
ss
xor
data16
xor
aaa
dec
insb
pop
fistps
rcll
jecxz
xor
icebp
rcrb
and
psrlw
cmovnp
pop
xchg
fwait
jl
or
pusha
pop
jle
jmp
or
jmp
jb
sbb
sbb
testl
pop
xchg
movsl
mov
or
pushf
sub
in
mov
sti
test
aad
sub
pop
mov
jl
xor
xchg
add
es
mov
movsl
or
ja
jge
xor
out
lods
imul
and
pop
mov
addb
pop
repz
into
sbb
push
arpl
andb
lds
sbb
jl
lret
lock
mov
lods
lcall
loopne
data16
lods
push
jecxz
adc
es
test
mov
imul
sbb
popa
aaa
ret
dec
lret
pop
and
icebp
int3
add
into
cli
sub
sti
add
dec
mov
gs
nop
cmc
repz
iret
inc
mov
jecxz
xrelease
sub
adc
pop
add
sbb
incb
xchg
push
mov
fidivrl
popa
call
outsl
aas
aad
sbb
push
sbb
and
push
jbe
jne
dec
ljmp
or
pop
adc
push
cmp
pushf
outsb
mov
lods
lods
add
mov
fistl
mov
sub
bndstx
pop
mov
cwtl
and
out
inc
xor
sbb
jb
and
scas
lds
fs
sbb
mov
pop
fwait
aaa
shrb
sbb
dec
xchg
cmp
pushf
mov
push
call
xor
sbb
out
push
enter
jae
mulps
imul
imull
fisubrl
test
std
je
push
in
ret
adc
enter
and
lock
add
mov
cltd
jl
mov
push
data16
cmpb
sbbb
dec
lods
clc
scas
movsl
ljmp
or
sbb
bound
mov
mov
pop
scas
pop
outsl
xlat
mov
stc
sub
push
xchg
scas
inc
mov
test
loopne
pop
cmc
cld
repnz
call
or
mov
pop
inc
or
test
xor
or
jg
xor
imul
ret
jge
lock
xchg
cmp
dec
aam
fnstenv
imulb
rcll
fisubrs
mov
inc
mov
test
add
push
shrl
jle
stos
imul
dec
jmp
cmpsb
jg
xor
pushf
pop
pop
je
adc
icebp
cwtl
add
jle
rcrl
pop
jnp
sti
in
int
sbb
mov
test
stos
push
outsb
cmpsb
enter
add
xorb
adc
lock
scas
cs
leave
ret
mov
xor
aad
insl
jge
jno
or
mov
bound
daa
lods
fldenv
push
jg
in
enter
stc
les
cmpsb
add
cwtl
out
adc
je
jg
mov
repz
push
test
mov
mov
shr
mov
push
push
or
in
fidivrs
daa
pop
into
mov
pop
cli
gs
jo
jg
mov
xchg
jbe
jae
movsb
mov
mov
push
rclb
or
test
pop
jno
xor
sti
push
mov
xchg
pop
xor
jns
loopne
inc
leave
inc
cmp
mov
mov
rol
xchg
sbb
dec
sub
sbb
mov
subl
cmp
jbe
popl
pop
fcoml
mov
popa
gs
mov
mov
ret
arpl
mov
dec
leave
mov
ss
pushf
fisttpll
and
scas
call
lahf
movsb
pop
jecxz
in
in
adc
pop
jg
es
mov
and
test
dec
gs
pop
dec
std
leave
jp
ja
into
xchg
test
sbb
or
mov
incb
jnp
insl
xchg
jle
xchg
mov
sub
ja
push
ffreep
mov
cmpsl
adc
arpl
ja
rcrl
add
and
outsl
test
jno
add
rorb
outsb
shr
insb
gs
xor
push
add
ret
pop
jl
mov
or
cmpsl
stc
hlt
xchg
mov
mov
inc
mov
scas
scas
sti
cs
or
pushf
and
pusha
push
lret
mov
orb
stc
subl
xor
stc
andb
int3
pusha
mov
pop
pop
push
jge
arpl
icebp
lahf
adc
inc
movsb
stc
shlb
into
negb
out
aas
cli
cmc
aaa
push
jno
lods
sbb
imul
mov
lods
pop
mov
cwtl
cmpsl
aas
xlat
adc
movsl
ficoml
std
add
das
mov
mov
push
insb
or
int3
and
cmp
jno
xchg
push
mov
push
out
or
in
outsb
mov
pop
xchg
cld
hlt
test
push
loope
xor
or
jge
call
gs
mov
in
shlb
inc
test
test
sub
mov
jb
add
jge
cmp
ret
push
pop
fiadds
jb
fs
fsub
dec
or
clc
hlt
nop
lock
hlt
or
cmc
test
hlt
stc
lret
cmp
sbb
nop
imul
outsb
loope
sub
mov
xchg
mov
inc
gs
aad
pop
xchg
push
mov
out
push
fldenv
cmp
xchg
test
mov
data16
pop
ret
pushl
popa
outsl
js
or
aam
xchg
lahf
arpl
fdivs
push
jl
cld
outsb
mov
xor
sahf
leave
dec
sbb
aad
dec
pop
aaa
ret
lods
jb
xor
mov
arpl
xor
pop
inc
jnp
push
adc
cmp
rcr
jae
arpl
mov
dec
sbbl
cli
iret
aam
rcr
jbe
dec
mov
jb
pop
pop
mov
push
jnp
sub
jns
dec
enter
enter
sbb
inc
sbb
stos
xchg
mov
sub
out
popa
lock
jecxz
fldcw
addr16
in
adc
jge
mov
xor
fisttps
dec
sub
lret
adcb
in
fstpt
xor
mov
mov
adc
addr16
jne
and
jecxz
pop
nop
adc
out
adc
cmp
inc
push
fs
ja
fimuls
outsl
outsb
sbb
mov
cs
xor
xor
xor
adc
aam
cs
ss
sbb
adc
cmp
jb
int3
repz
mov
mov
sub
or
not
bound
test
sbb
sbb
add
data16
push
aaa
test
popa
sub
mov
or
scas
jbe
dec
sub
push
sbb
idivl
lahf
mov
xor
mov
mov
loop
jo
cmp
das
mov
mov
call
sbb
ljmp
mov
xchg
or
sbb
pop
jg
ficoml
push
cmp
adc
ds
fmull
test
cmp
sub
shrb
ss
pop
pop
dec
fcmove
lods
mov
psllw
mov
or
push
inc
inc
push
loop
and
and
and
into
jmp
data16
sti
dec
rolb
popf
jmp
or
add
cmp
xchg
iret
loop
mov
pop
mov
add
popf
test
je
data16
cltd
cltd
ljmp
sbb
xor
push
xchg
sub
cmpl
sub
fwait
or
xor
mov
shl
push
popa
out
sbb
cld
and
sti
les
shrb
sbb
xor
dec
adc
xchg
movsl
and
movsb
or
rcrl
and
mov
divl
add
addr16
rolb
movsl
adc
cmovne
or
pop
shrl
addr16
test
inc
push
push
popf
mov
sbb
or
leave
cmpsb
sbb
addr16
cmpsl
cli
sub
xor
in
mov
sbb
lock
decb
shll
mov
jle
inc
cmpsb
mov
xchg
popf
xorb
sti
std
sbbb
mov
loope
icebp
mov
mov
xorl
imul
rol
xchg
cwtl
push
push
lock
out
mov
push
flds
out
out
or
mov
cmp
or
out
lods
sti
cmc
inc
mov
xlat
jmp
cmpsl
jae
xlat
or
loopne
daa
add
jns
mov
hlt
and
sub
inc
aas
push
and
sbb
shlb
mov
inc
xchg
into
push
or
xchg
mov
shrb
and
stos
mov
xchg
into
inc
mov
mov
inc
dec
fimull
lock
adc
add
stos
xor
leave
xor
imul
lret
adc
insb
mov
inc
mov
sub
into
inc
clc
mov
cld
pop
sbb
fistpl
cmp
sahf
and
jns
xchg
cmp
lods
jb
pop
xlat
cwtl
aad
xchg
test
fildl
xchg
sub
stos
jl
dec
xor
sub
jno
data16
cmp
push
mov
lahf
pop
out
aam
dec
xchg
div
sbbb
cmp
in
cltd
lds
lret
fldl
shrb
stos
pop
cmp
dec
rcrl
or
add
inc
loope
jl
xor
and
mov
repz
pop
sbb
pop
roll
incb
xchg
loop
push
nop
jmp
les
sub
fists
in
mov
cwtl
jbe
jo
sub
sub
jne
daa
in
or
int3
test
ja
or
xchg
inc
pop
rorb
jmp
in
push
inc
loope
outsb
adc
cld
xor
mov
jg
add
call
dec
jle
lahf
xchg
dec
adc
and
pop
outsb
or
shl
mov
mov
dec
test
dec
cmp
cli
push
cmpsl
mov
push
aad
icebp
jae
jne
jl
push
jns
lret
mov
adc
push
cld
jg
std
dec
sub
xchg
scas
xor
aaa
pusha
xor
stc
push
adc
into
cwtl
sahf
out
hlt
enter
add
out
loopne
filds
cmpsl
insl
rol
sub
test
ss
sub
xor
mov
jle
out
dec
popf
lea
shrl
insl
jmp
pop
mov
jmp
fidivs
sub
sub
fsubp
inc
pop
orps
repnz
sahf
lret
cmc
lods
jno
es
lods
pusha
cmp
test
jnp
shr
fsubrs
fstps
js
sbb
stos
and
mov
sbb
pop
fildl
mov
sbb
loop
fildl
mov
aaa
xchg
xchg
push
ljmp
int
lods
leave
imul
dec
fldenv
adc
leave
inc
lods
fst
jns
leave
cmpsl
aaa
lahf
into
outsl
dec
jns
jle
pop
mov
rorb
ds
dec
test
xor
sub
push
push
jp
jne
sub
mov
je
or
mov
xor
cltd
adc
cmp
mov
and
push
aas
or
test
icebp
inc
loope
rclb
fs
std
xor
xchg
aam
sub
aas
in
sbbl
scas
dec
jnp
sbb
iret
lahf
cmovnp
adc
js
in
sbb
les
cmp
into
sub
sub
shrl
call
in
or
jge
call
cli
arpl
or
shl
sbb
addr16
pop
loope
notb
in
fildll
mov
xchg
lock
xchg
das
xchg
push
mov
pop
ficoms
xor
cmp
inc
jmp
xchg
icebp
imul
push
dec
xchg
and
aas
test
fisubrl
dec
cmpsb
cmp
jnp
push
mov
pop
inc
inc
sbb
mov
insb
out
dec
dec
movsb
mov
and
xchg
inc
popf
or
shrl
pop
cmp
jl
jecxz,pn
fwait
aas
cmpsb
jae
leave
or
and
mov
inc
xchg
flds
cmp
jmp
or
sarl
and
sub
cmp
or
mov
mov
mov
iret
sub
or
cmp
dec
outsb
repz
jne
fstp
cli
icebp
bound
add
jnp
xchg
inc
sbb
fisttps
push
push
jmp
lcall
mov
dec
out
cltd
dec
shrb
outsl
sub
lods
sahf
xor
pop
inc
out
fmuls
or
mov
les
iret
mov
clc
sbb
out
stos
push
sti
add
stos
sbb
and
lret
pop
sbbl
and
xchg
movsl
dec
hlt
pop
sub
mov
nop
add
dec
es
mov
shll
movl
ret
hlt
leave
imul
adc
sub
pop
outsl
mov
popa
xor
nop
sub
pop
cmpsb
jp
push
mov
mov
jo
mov
xor
xor
add
jae
hlt
xchg
cmc
push
xchg
mov
insb
arpl
pusha
fnstcw
out
xchg
mov
xchg
jns
xor
mov
xor
fucomip
inc
test
aad
std
mov
fcompl
fmuls
dec
decb
lods
js
jno
xor
adc
sub
or
js
test
into
cmp
pop
mov
cmp
jge
adc
xchg
pop
ja
movsb
and
fs
xor
cltd
mov
push
sahf
adc
fcomps
movsl
into
and
dec
imull
push
mov
sbb
mov
dec
mov
in
mov
sub
mov
ljmp
jle
test
push
das
mov
jno
aas
stos
mov
jg
jne
add
hlt
pop
lcall
xor
imul
movsl
xchg
or
add
nop
jne
cli
sub
dec
jnp
mov
pop
lock
push
shll
jo
xchg
adc
push
inc
data16
sbb
adc
inc
or
push
jg
pop
jecxz
test
cmp
scas
and
jns
out
mov
pop
enter
aaa
pop
xchg
fstpl
out
cmp
jae
addr16
adc
cld
pop
je
adc
xchg
push
dec
aas
out
add
cmp
mov
iret
pop
fldl
pop
xor
sbb
push
jmp
mov
mov
movsb
pop
sub
mov
iret
push
xor
daa
mov
xor
in
or
loope
pop
out
mov
cwtl
mov
xchg
jb
mov
xor
push
push
or
call
outsb
pop
fsub
ret
adc
xor
ror
sti
adc
inc
dec
shlb
int
aad
bound
mov
jns
imul
cmpsl
mov
out
mov
xchg
push
lods
or
int
cmpb
lods
ret
mov
xchg
ret
mov
fcmovu
cmp
sahf
lods
push
shll
and
loopne
out
adc
divb
cmpb
std
adc
inc
push
mov
push
pushl
popf
mov
lock
add
pop
cmp
mov
enter
aad
ds
adc
negb
cmp
arpl
test
fistps
pusha
imul
inc
xchg
jo
xor
cld
mov
or
mov
insb
icebp
fcoml
orb
cmpsb
test
je
push
mov
push
cmp
mov
adc
ret
imul
std
xor
out
mov
and
stc
adc
scas
cwtl
jnp
mov
subb
rol
loope
dec
fadds
in
lods
inc
mov
int
mov
dec
jb
and
loopne
std
lahf
sbb
inc
jno
xor
mov
mov
test
in
lds
in
dec
negb
sbb
cmc
inc
jg
pop
aad
scas
mov
arpl
xchg
mov
mov
inc
test
test
or
fstps
mov
jp
in
pop
data16
mov
pop
pop
push
lahf
dec
popa
bnd
mov
mov
rclb
cmpsl
ret
lock
dec
cmc
aaa
shlb
jnp
push
jmp
mov
sbb
push
jg
enter
push
pusha
ss
pop
mov
aaa
loopne
mov
insb
dec
shlb
and
repnz
mov
add
xor
inc
inc
int3
call
aam
jns
push
pusha
mov
gs
in
jae
loope
cli
pusha
fildl
popf
pop
push
mov
out
xor
je
movsl
std
dec
cwtl
and
aad
jge
outsb
lea
rolb
in
mov
iret
ds
xchg
ret
cmp
ss
out
xchg
inc
out
ss
pop
in
xlat
fldcw
mov
and
or
cltd
xor
cmpsb
or
test
and
cmp
pop
fisubrl
stos
ja
in
mov
and
xor
fmull
in
push
test
or
xor
int
arpl
movb
das
xorl
adcb
popa
cmp
sahf
flds
jb
arpl
ss
lock
xchg
sbb
push
xchg
test
loop
pop
push
popf
add
xor
lahf
adc
fisttps
pxor
add
cmpsl
jp
inc
pop
leave
cmpsb
fisubrs
scas
lcall
das
mov
cltd
sbb
sub
xchg
xchg
movsb
mov
sbb
sahf
sahf
subl
lcall
mov
or
mov
or
movsl
pushf
sub
add
dec
insb
jge
mov
aad
or
xchg
and
cwtl
orb
iret
in
push
mov
xchg
lock
cmp
jge
adc
and
mov
cltd
sub
lcall
popl
jo
imul
cmp
shr
or
cmc
pop
push
cmp
imul
mov
cmp
repnz
jle
loope
cmpsb
dec
lcall
lret
or
outsb
jb
sub
mov
xor
dec
iret
lcall
iret
imul
pop
ret
shll
inc
inc
negl
mov
pop
std
aad
daa
dec
ss
adc
mov
lods
cmp
mov
adc
int3
fstpl
jmp
pop
loope
and
mov
incl
push
out
test
mov
dec
dec
add
or
or
xor
mov
dec
ljmp
call
test
jb
adc
jns
test
enter
push
int
inc
adc
push
push
jmp
ds
dec
pop
dec
adc
bound
xchg
add
mov
and
sub
fsubs
sub
test
and
xchg
add
inc
sbb
jns
lret
ljmp
sbb
mov
ret
sbb
inc
rcrl
xlat
hlt
out
mov
lret
shl
mov
lock
mov
hlt
test
scas
or
mov
adc
maxps
inc
mov
or
inc
inc
xchg
loop
imull
push
test
outsb
les
int3
movq
or
xchg
push
nop
adc
call
fcomps
pop
and
push
push
mov
jno
ja
out
lods
ljmp
pop
bound
jmp
dec
inc
xchg
sub
filds
ss
repz
cs
xchg
jno
adc
outsb
stos
jl
push
or
lods
inc
mov
sbb
jl
test
mov
lcall
push
push
inc
xor
imulb
aas
cli
aam
xor
pop
pop
pushf
jecxz
xor
rcl
fs
push
pop
iret
xor
sbb
push
imul
mov
cmp
das
xchg
in
cld
and
sub
xor
dec
ret
popa
add
pop
scas
rcr
leave
mov
xchg
add
adcl
mov
fildll
pop
outsb
jo
into
pop
xor
pop
lahf
adc
xor
inc
fdiv
and
mov
sub
pop
xchg
xchg
outsl
sbb
pusha
js
xor
aam
leave
cmp
stos
mov
scas
or
fbstp
push
mov
lahf
mov
shrl
mov
xor
dec
pop
pop
xor
stos
dec
arpl
mov
mov
sbb
or
pushf
xor
sbb
mov
adc
and
lret
out
push
ret
rcl
sbb
scas
jg
pushf
push
add
or
push
cmc
jge
adc
into
mov
mov
in
orl
out
mov
out
fadds
scas
mov
jp
test
push
imul
daa
aaa
bound
iret
mov
in
out
mov
lret
enter
jge
sbb
mov
outsb
movsl
xchg
leave
scas
or
dec
cmp
mov
push
and
mov
push
ljmp
pop
cmpsb
nop
pop
xor
push
enter
idiv
push
push
mov
sbb
pop
movsl
imul
fcmovnbe
add
pop
mov
mov
hlt
cmp
fs
mov
pop
xchg
int3
test
xchg
lahf
inc
mov
pushf
mov
mov
jne
lds
mov
mov
push
adc
addr16
call
xor
xor
dec
xor
adc
adcl
and
jmp
ja
addr16
loope
test
js
and
aam
and
das
mov
or
mov
push
nop
orl
stos
xchg
mov
stos
in
sub
or
mov
loopne
mov
movsb
icebp
sub
stc
in
icebp
mov
rcrl
stc
leave
lret
or
and
push
test
jge
imul
cmpsb
subb
mov
pop
test
mov
jno
ja
cli
les
push
arpl
cli
xchg
fildl
stos
cmc
movsb
pop
push
inc
cli
ja
pushf
adc
mov
add
push
loop
xchg
ja
aam
dec
push
add
iret
out
jecxz
jbe
xchg
das
inc
lods
dec
jno
adc
scas
sub
add
jle
aaa
add
insl
adc
cmp
ror
daa
lret
insb
pushf
push
sub
out
shrb
rclb
insl
fistps
lea
fldcw
fldl
mov
data16
int
adc
dec
add
call
addl
mov
adc
rol
xchg
mov
sbb
hlt
adc
fldl
mov
lret
sbb
dec
mov
mov
push
fidivs
mov
rcl
mov
jmp
inc
xchg
das
cld
pop
inc
fisttpll
fisubs
int3
xor
aam
mulb
xchg
jg
dec
add
loop
xor
cmpsb
popa
movsb
and
pop
and
inc
mov
lods
outsb
adc
icebp
mov
mov
jae
push
dec
mov
xchg
push
add
insb
loop
add
mov
jb
add
sarb
mov
jb
daa
dec
cmpsb
adc
or
sahf
lcall
loopne
and
push
or
mov
inc
xchg
cmpsb
enter
mov
rorb
and
sbb
push
scas
push
and
sub
push
sub
aam
sbb
or
rcrb
in
push
fcomps
xchg
andl
in
addl
mov
push
pop
int
cld
jno
icebp
cmpsl
push
loopne
cltd
loope
ret
out
xor
cltd
xlat
push
mov
cmp
sbb
xlat
jno
jl
bnd
adc
arpl
jle
mov
iret
jecxz
lods
xchg
mov
mov
imul
add
cwtl
notl
aad
sub
dec
push
xchg
dec
cld
push
jmp
scas
mov
sbb
cli
aad
call
das
lods
jl
xchg
rcrl
xchg
push
mov
in
es
mov
sub
or
sbb
cmp
xlat
in
mov
js
dec
hlt
mov
aas
mov
subl
insl
push
adc
jecxz
adc
jl
leave
lods
fldl
shll
sbb
mov
xlat
cli
pop
dec
inc
push
lcall
xchg
xor
xchg
add
shll
enter
sub
jo
jg,pt
pop
sti
loope
ss
std
push
hlt
xlat
cmp
inc
cmp
cwtl
cld
idivb
inc
or
mov
cld
sarl
es
ret
mov
and
bound
mov
adc
sub
test
shrb
sub
out
cwtl
sbb
clc
sti
out
jp
cmp
adc
es
inc
scas
repnz
add
loope
rcrl
and
xchg
rcr
ficoml
jmp
push
pop
inc
inc
iret
mov
daa
icebp
popa
js
jge
inc
in
fdiv
ja
cmp
mov
rcr
sarb
lock
mov
adc
out
test
inc
ret
xchg
test
mov
mov
xor
shrb
xchg
cmp
into
sar
sub
jbe
or
inc
orb
mov
or
addl
jp
outsb
jl
jno
push
dec
pop
stc
add
push
pop
mov
or
int3
jle
sub
roll
adc
push
loopw
in
mov
inc
inc
xchg
push
sub
icebp
stc
repnz
insl
addl
pop
in
and
jmp
shll
jp
push
sub
pop
out
ds
popf
call
stos
ds
jmp
dec
cmp
dec
cwtl
or
loope
and
data16
in
out
and
mov
pushf
fmuls
scas
cmpsb
cmp
mov
adc
push
sub
shr
dec
add
ljmp
lds
sbb
mov
cmpsl
and
mov
test
cmpsl
xchg
pop
movsl
into
aad
and
sub
sub
mov
pop
xchg
dec
xchg
xchg
mov
sbb
es
es
xlat
dec
mov
push
scas
repz
leave
sub
dec
in
rclb
adc
xor
sub
cmp
add
dec
mov
inc
jle
inc
clc
xlat
jmp
xor
out
imul
and
and
dec
out
fsts
orl
jge
xchg
addr16
mov
inc
enter
ret
sbb
and
inc
fistpll
add
scas
jo
dec
movsb
push
aas
xor
push
cmp
push
add
dec
or
int3
mov
sub
inc
or
cltd
jecxz
inc
lahf
popf
cmpsb
les
or
clc
mov
or
sbb
cltd
outsl
adc
int
popf
in
ret
inc
push
inc
call
int3
push
xchg
cld
fldl
out
mov
cmp
lahf
and
sbb
js
push
xchg
dec
out
aaa
jnp
sbbb
dec
movsb
nop
push
dec
mov
ljmp
mov
das
inc
stos
fs
mov
cwtl
or
int3
cmp
clc
cmp
push
xchg
data16
ljmp
sub
adc
xor
mov
cmp
iret
push
xchg
jp
add
ljmp
fcomp
cmpb
xchg
push
daa
jge
fs
daa
sbb
push
cmp
jge
fdivrs
jae
ja
arpl
js
pop
push
into
pop
mov
jg
sbb
jp
ss
mov
push
mov
xor
xchg
popf
dec
in
mulb
pop
or
pushf
psrlq
in
cmp
push
mov
sbb
mov
push
jge
cld
lahf
fstps
adc
sbb
push
sbb
push
xor
cmp
xchg
inc
aam
cld
clc
jge
pop
pop
or
cli
shll
adc
pop
cmp
in
lret
mov
mov
mov
jbe
cld
pop
int3
pop
inc
notl
popf
push
and
test
leave
popa
inc
leave
inc
popf
jns
loop
add
lods
sti
stos
mov
xchg
test
jp
js
shrl
rol
js
icebp
enter
cli
ds
sar
sar
sbb
dec
push
and
stc
fnsave
mov
dec
dec
adc
jge
sbb
fiaddl
jo
mulb
pop
stos
repnz
in
mov
or
inc
loopne
pop
add
sti
pop
les
inc
inc
out
and
test
fistpll
repz
push
repz
dec
xor
cmp
jle
ret
dec
jle
sbb
jecxz
int3
inc
movsb
or
out
js
aad
sub
mov
xor
xchg
fcompl
and
sbbb
jmp
loopne
jo
mov
jae
xorb
pop
out
rol
pop
xchg
and
mov
mov
sbb
das
jmp
sbb
ficompl
insl
xor
xor
push
imul
inc
out
jmp
shlb
adc
adc
xchg
or
scas
xor
movsb
xchg
jnp
fiadds
push
test
dec
rorl
cmp
arpl
rolb
mov
jae
push
repnz
xchg
inc
mov
stc
mov
cmp
add
popf
insl
xchg
shl
movsl
fsubrl
cmp
das
mov
or
pop
inc
and
pushf
inc
cmp
and
outsl
mov
pop
sub
lret
or
cmpsb
mov
fdivrs
ret
or
ficomps
hlt
jns
int
in
push
repnz
leave
mov
mov
jg
lods
repz
mov
pop
mov
mov
call
mov
fldenv
and
fcoms
dec
movsl
jo
bound
das
sarb
cmp
add
mov
cmp
dec
popf
pusha
inc
xor
xor
out
cmp
and
pop
dec
test
cmp
cltd
mov
shr
inc
cmc
fisttpll
push
rcr
push
in
and
pop
mov
test
in
mov
cld
mov
bound
dec
movsb
fisubrs
fidivl
jns
das
arpl
rcl
pop
int
or
test
xchg
fadds
add
mov
test
xor
mov
sti
mov
xchg
inc
je
ljmp
xchg
inc
sub
das
dec
inc
cmc
ret
xchg
scas
lcall
or
into
loop
xchg
lods
xor
rdtsc
dec
clc
in
movsb
jb
cmpsb
in
inc
stos
movl
xchg
fdivp
adc
cld
hlt
adc
xor
sbb
and
je
push
jae
mov
xchg
lock
clc
cli
dec
les
popa
and
push
push
mov
mov
sbb
movsl
int
ror
dec
insb
ficompl
push
inc
std
clc
lds
in
add
mov
mov
cmpsb
push
push
je
jl
xor
inc
pusha
and
sahf
mov
lahf
adc
adc
outsl
inc
bound
cwtl
xor
divl
lcall
adc
sub
cmp
fisubl
lods
dec
mov
sbb
mov
sub
enter
loopne
or
hlt
and
lds
push
ret
or
insb
fyl2xp1
pop
je
jmp
and
push
int
shl
mov
inc
imul
mov
pushf
push
in
daa
push
jae
sbb
adcb
rcrl
lock
jnp
xlat
jb
and
dec
jle
xor
mov
mov
nop
imul
ficomps
mov
push
or
movsl
inc
dec
int3
add
add
and
adc
lahf
pop
je
scas
push
push
sub
xchg
add
pop
js
ja
inc
xchg
ja
sub
fwait
jle
sbb
add
je
xchg
cmp
xor
cmp
fsts
adc
out
cmp
js
cwtl
in
dec
jge
xor
mov
stos
sub
mov
push
push
pop
mov
xorl
pushf
icebp
or
jecxz
sub
mov
cs
popf
pop
js
insb
fdivrl
or
mov
das
mov
insb
mov
push
push
call
inc
div
mov
adc
inc
jo
ret
sbb
sbb
push
dec
add
sub
mov
je
xlat
stc
add
push
inc
arpl
stos
xchg
rclb
mov
cmc
pop
mov
jmp
movsl
inc
inc
sub
push
dec
fs
lods
nop
pop
add
adc
outsb
push
icebp
pop
lret
aaa
scas
outsl
xor
into
dec
lods
lahf
movsl
inc
dec
cli
pop
adc
mov
jb
sbb
push
mull
loopne
into
es
lock
or
das
adc
lahf
sub
loop
roll
iret
test
xor
jmp
hlt
insb
mov
mov
fstps
and
xor
mov
test
xor
rorb
mov
jl
shlb
in
dec
add
bnd
cmp
pop
cmp
mov
adc
or
sbb
jb
cwtl
pop
or
lahf
fcompl
and
cmc
mov
add
shl
xchg
xorl
xlat
lock
repnz
xchg
mov
mov
addr16
sub
andl
test
shl
adc
xor
push
dec
cmc
inc
fs
cmc
mov
mov
jmp
cmpsb
cmp
js
loop
loope
fdecstp
adc
mov
cmpsb
sbb
push
mov
out
sub
cmp
push
insl
repz
fcom
lods
ljmp
mov
ja,pn
cmp
int3
mov
aad
jle
dec
in
addr16
fs
cmp
inc
and
rolb
xlat
jge
in
dec
insb
dec
push
lcall
lahf
lods
dec
icebp
out
stos
jno
mov
push
xchg
xchg
and
or
jb
push
ja
add
mov
and
mov
push
iret
cmp
inc
inc
adc
jmp
out
mov
rclb
sbbb
pop
push
nop
xchg
dec
ds
adc
pop
xor
xor
push
cmp
xor
push
iret
sahf
add
ficomps
mov
add
sbb
inc
inc
loopne
xlat
stos
dec
pop
mov
aam
adc
sti
xor
lcall
and
pop
push
lds
xor
adc
fcmovb
push
xchg
jne
add
filds
pop
adc
cmpsl
cltd
jo
mov
add
xor
fidivs
sub
aad
add
lock
lods
call
xchg
out
cltd
fstl
fbld
dec
jae
push
sbb
inc
mov
notb
les
cmp
or
rorb
mov
fsubl
mov
inc
mov
jmp
movsl
mov
lods
sbb
icebp
mov
in
adc
mov
jmp
or
loop
cmp
cmp
add
push
xchg
dec
xchg
cld
mov
inc
dec
adc
lds
push
movsl
or
bound
sbb
push
add
call
test
hlt
std
int3
cmp
sahf
mov
fdivrl
pop
ljmp
pop
sbb
icebp
push
lds
enter
repnz
jge
ljmp
push
lcall
repnz
pop
pop
enter
arpl
ljmp
das
pop
in
js
xchg
rcll
sarb
cmpl
or
out
repnz
and
int
sub
cmp
aas
mov
xlat
les
jmp
out
pop
jns
bound
leave
inc
pop
jbe
fistpl
push
pop
pop
push
mov
stos
xchg
mov
sbb
add
sub
mov
sub
xlat
mov
loope
inc
push
int3
popf
cmp
xchg
jbe
inc
adc
jge
lods
push
insb
decb
sbb
mov
cmpsl
adc
rcrl
mov
movsl
xchg
xor
stc
gs
pop
pop
in
pop
mov
jne
inc
pop
xchg
sub
leave
mov
lret
adc
xchg
int
mov
loopne
add
jle
dec
cmp
ja
sar
in
cld
data16
popf
xor
sub
adc
leave
add
ret
fmull
push
mov
addr16
or
lret
cli
and
jle
sbb
addb
sub
mov
jmp
fsts
xlat
mov
push
xlat
orb
sti
inc
jo
xor
insb
push
insb
scas
je
test
jns
xchg
ret
testb
mov
pop
test
addb
adc
push
notb
jmp
imul
aam
and
add
mov
pop
repnz
sub
lods
mov
mov
test
ljmp
mov
sbb
sbb
iret
or
fidivs
adc
fistl
jbe
xorl
cmpsb
cmpsb
addr16
or
pop
mov
rolb
mov
mov
test
call
mov
jmp
sti
arpl
sbb
push
aaa
stc
ja
sub
or
ds
pop
enter
pushf
fnstenv
pushf
mov
mov
inc
incl
lds
xlat
lods
sbb
test
pop
jg
and
cmp
add
xchg
sub
and
ljmp
shlb
out
pop
cmpsl
sbb
dec
fbstp
cmp
xor
test
and
mov
xor
cmp
hlt
jnp
xchg
pop
cmp
test
push
inc
cmpb
cmc
pop
loopne
jp
mov
iret
arpl
inc
notl
pop
out
pusha
inc
insb
test
push
testb
sar
push
mov
xchg
ret
add
mov
aad
aas
jle
add
xor
mov
les
cmpsl
daa
ss
daa
jmp
mov
scas
lcall
jne
add
loop
stos
mov
stos
jmp
mov
mov
push
mov
jb
cld
cmp
pop
xchg
sub
xchg
fsubl
stos
dec
mov
leave
cmp
mov
cmp
inc
dec
cld
loop
pop
pop
push
xadd
adc
mov
sti
mov
lods
mov
sbb
mov
cmp
cmp
sub
mov
mov
ljmp
mov
adc
or
sbb
jge
sub
sbb
mov
cmpsl
aas
shrl
or
scas
adc
cmp
arpl
push
xchg
in
pop
ja
filds
adc
in
mov
bound
inc
push
in
dec
jbe
loopne
jle
xchg
mov
mov
cltd
scas
cltd
sub
push
fistpl
mov
dec
or
andl
lahf
adc
fstpl
mov
aam
loope
aad
arpl
enter
fs
test
fldl
cld
ret
je
cmp
inc
adc
in
dec
push
sbb
adc
js
shlb
inc
sbb
repz
add
add
decb
insl
insb
cmp
or
xor
xchg
iret
test
or
test
pop
xchg
es
fcomps
xor
cmp
adc
sbb
rclb
or
insb
push
sub
stos
mov
adc
out
mov
loopne
arpl
inc
push
rcrl
movsb
jmp
sub
lcall
xorb
scas
jmp
sarb
inc
loop
jne
or
cvtps2pi
or
xchg
loope
sub
inc
jns
insl
or
dec
lock
add
push
sbb
sti
xchg
sbb
adc
rol
mov
inc
cmc
mov
adc
popa
sub
cmp
outsb
jb
adc
mov
jg
pop
xchg
test
jne
mov
xchg
inc
push
push
pusha
push
out
aam
cld
or
jb
xchg
outsl
xchg
add
test
sti
mov
lret
mov
jp
inc
jecxz
scas
jge
dec
xor
insl
and
xor
xor
and
and
data16
jle
jecxz
fs
aaa
xor
int3
mov
icebp
jnp
push
in
xchg
arpl
rcr
and
jns
mov
push
sbb
scas
es
sarb
fwait
cwtl
adc
mov
pop
in
lock
fistl
movsl
popf
jle
movsb
ficomps
imul
push
jmp
pusha
inc
aam
pop
push
insl
pop
push
sti
adc
sbb
sbb
push
and
outsb
and
cmp
or
loopne
lods
in
add
sbb
rorb
adc
call
stos
mov
in
mov
cmpsl
ljmp
rol
aas
fyl2xp1
fistl
insb
dec
bound
push
add
arpl
dec
adc
cmp
rcll
cmpsl
pop
lds
ror
test
ja
jne
sti
jb
or
idivb
scas
data16
ja
in
mov
lea
out
loope
cmp
mov
and
notb
addr16
fdivrs
or
inc
push
xor
fcmovnb
mov
push
cwtl
adc
xor
mov
lcall
out
mov
or
inc
std
lock
jns
mov
mov
adc
and
add
xchg
out
imul
pop
jge
fstpt
test
lret
lds
shll
lret
in
mov
or
mov
push
les
outsl
dec
in
pop
out
mov
icebp
pushf
dec
lods
xor
in
ljmp
xchg
daa
pop
add
xlat
popa
cmp
add
or
daa
and
and
lods
in
mov
sbb
mov
cwtl
lds
shll
ffree
jecxz
xchg
outsb
xchg
mov
ljmp
and
call
mov
stos
sti
clc
pop
xorl
jnp
test
pop
jno
adcl
or
insb
cmp
xor
jecxz
xchg
dec
push
cmp
inc
inc
xor
lock
adc
ffree
movsb
jmp
cmp
nop
rolb
adc
pop
outsb
push
enter
jp
fsubs
popa
in
movsl
mov
pop
mov
mov
scas
cli
mov
dec
loop
mov
bound
mov
loopne
cmpsl
and
jne
into
adcl
pop
bound
dec
imul
ja
std
pop
xorb
and
mov
jmp
lret
adc
cltd
mov
pusha
add
mov
sbb
jmp
movsl
add
jecxz
aas
mov
mov
jl
push
push
push
loope
outsb
sub
leave
aas
jecxz
in
je
xchg
push
jp
out
movsb
sarl
call
sbb
popa
fwait
lahf
lret
dec
fisubs
mov
lods
jmp
push
imul
out
cmpl
je
iret
test
popf
insl
xlat
rol
mov
rclb
aam
insl
sahf
mov
mov
jmp
lds
add
adc
lds
in
pop
stos
mov
call
fst
aad
and
sub
sbb
cmpsl
outsb
movsl
add
push
push
lods
mov
jg
mov
push
sbb
mov
insb
inc
addl
and
jmp
dec
cmp
adcl
notl
xchg
jge
and
mov
fwait
mov
jnp
push
lahf
and
or
add
jno
mov
dec
xchg
hlt
cmp
pop
enter
imul
lock
push
sbb
inc
and
xor
xor
fiaddl
pop
dec
pop
cmp
stc
xchg
adc
add
ja
cli
scas
inc
les
xchg
push
mov
bnd
mov
aam
and
pushf
cmc
sub
mov
jns
pusha
push
test
xor
cmp
mov
dec
jb
in
sbb
iret
pop
test
scas
insl
sbb
and
inc
lret
lock
push
jp
fwait
sub
pop
out
sbb
or
jmp
pop
sub
lcall
pop
in
outsl
mov
jmp
mov
mov
or
aad
lret
xor
lcall
cmp
mov
ret
ljmp
dec
xchg
clc
sub
jo
aad
cmp
dec
mov
stos
xchg
xchg
adc
bound
je
mov
adc
aas
jno
or
xor
movb
or
mov
fists
js
pop
xor
je
xchg
and
lret
xchg
lea
cmp
mov
adc
and
les
mov
stos
dec
xchg
mov
and
mov
push
mov
pop
adc
xor
pop
lea
cmpsb
sbb
enter
mov
scas
sub
pop
rorl
ds
pop
setp
mov
icebp
inc
ficoms
pmaddwd
cmpb
ja
lock
fidivrs
out
fdivr
mov
add
sbb
pop
cli
lret
cmpl
fbld
negb
loop
jne
nop
mov
cs
pop
adc
sbb
jns
lods
xlat
mov
ja
fdivs
dec
mov
shll
fxch
sahf
ja
push
je
mov
sub
mov
stos
mov
adc
dec
int3
jns
aad
scas
fcmovnbe
fsubl
mov
or
fs
dec
ss
std
stc
cmpsl
mov
loop
scas
mov
lods
pop
inc
xchg
pop
xchg
and
loopne
add
fidivrl
mov
mov
movsl
test
das
pop
pop
or
cs
mov
cwtl
jp
sbb
ja
out
aas
mov
push
mov
fisttpl
inc
add
lret
xchg
adcl
pop
scas
sbb
inc
or
pop
mov
inc
ret
mov
push
push
sub
out
lds
testb
jns
mov
and
add
pop
cmp
inc
adc
lret
and
outsb
shlb
xor
clc
filds
push
ljmp
or
mov
popa
data16
inc
test
inc
add
loope
push
or
loop
fadds
jl
shlb
push
xor
push
mov
cmp
out
gs
rcrl
adc
xchg
mov
mov
repz
push
lea
inc
adc
inc
cltd
bound
fistl
mov
fucom
adc
fimull
shrb
cli
addr16
push
and
and
xchg
mov
data16
or
dec
ror
in
or
or
xor
call
jge
inc
cmp
sub
loop
imul
std
xchg
pop
outsl
loop
test
mov
dec
xorb
lcall
sti
lods
js
mov
test
ficoml
dec
dec
sub
pop
loop
xchg
popf
jnp
call
pop
jnp
inc
push
sub
arpl
push
test
dec
test
js
fsubs
pop
leave
mov
inc
fidivl
pop
imul
leave
stc
imul
movsl
cmp
daa
inc
xor
mov
cmp
mov
mov
imul
xor
leave
imul
aam
jnp
pop
xor
sub
pop
adc
and
mov
js
stos
adc
mul
cmp
cmp
call
rorl
dec
dec
adc
in
pop
fs
std
lods
mov
imul
sub
xchg
dec
adc
sbb
and
push
mov
scas
inc
addb
jbe
jns
loop
xor
pop
rcll
cmp
sbb
mov
in
push
mov
je
scas
pop
inc
xchg
repz
sarb
les
movsl
pop
push
jne
pop
stc
jnp
inc
pusha
mov
sti
in
pushf
stc
jne
sub
xor
xlat
roll
sub
lea
addr16
dec
jns
adc
cmp
aas
dec
shl
push
lds
test
or
xchg
insb
xlat
adc
lods
andb
sbb
fistpl
mov
les
daa
inc
outsb
aad
mov
mov
push
pusha
hlt
add
out
push
idivb
or
arpl
xor
popa
shll
mov
shll
adc
in
xchg
xchg
mov
sahf
mov
shrl
fldt
xor
mov
loopne
stc
aam
ficomps
iret
adc
enter
add
cmp
andl
cmp
push
jae
xor
inc
xor
mov
cmpsb
xor
jno
into
scas
mov
sbb
push
mov
push
popf
xor
mov
add
cmpsl
xlat
imul
in
cltd
sbb
pop
and
lock
pop
daa
pop
cltd
loopne
sbb
ficompl
int
fs
mov
and
mov
lret
repnz
les
call
jno
cmpsb
sub
sbb
ljmp
mov
push
sbb
mov
pop
rcll
jmp
mov
call
ljmp
mov
jo
add
adc
push
fwait
sub
daa
shrl
fs
out
data16
jecxz
dec
test
mov
mov
push
mov
aaa
ss
push
push
add
inc
out
popf
into
dec
push
push
jmp
cmp
into
jbe
xor
cmpsl
jnp
mov
xlat
lods
aam
inc
in
cmp
shll
rcrb
cmc
cwtl
sbb
add
rolb
pop
sahf
cmpsb
adc
mov
push
adc
int
mull
push
sbb
push
inc
mov
adc
mov
and
sbbb
pop
loop
daa
jmp
out
xor
sahf
sub
mov
mov
sbb
pop
pop
mov
addr16
xor
or
adcl
inc
in
dec
loopne
aas
xor
sub
das
sbb
or
sbbl
int3
pop
mov
mov
push
test
jl
jnp
or
inc
jg
and
xchg
mov
hlt
dec
lods
pop
push
loope
nop
loopne
pop
bound
xchg
fidivrs
and
mov
push
adc
in
xchg
mov
iret
lret
mov
dec
add
rcll
pop
loop
xchg
jle,pt
mov
add
out
daa
mov
inc
xchg
pop
test
leave
or
in
fsubr
xchg
out
rclb
int
add
dec
mov
inc
or
ret
inc
filds
jno
pop
cmp
hlt
xchg
pop
and
arpl
mov
iret
rorb
fidivrs
imul
add
adc
je
iret
aas
lret
pop
sbb
shrb
sbb
enter
es
sbb
lds
push
add
mov
cwtl
jge
mov
in
repz
push
dec
adc
stos
lock
lret
and
pop
sub
bound
cmpsb
dec
dec
mov
cmp
and
inc
out
mov
xchg
mov
sbb
ja
icebp
fnsave
xchg
std
pop
insb
sbb
lret
ja
stos
xchg
pushf
dec
shlb
aad
mov
out
int3
jecxz
jne
mov
add
gs
enter
xchg
add
xor
and
iret
aad
hlt
pushf
jae
dec
xchg
cmpsb
inc
icebp
pop
add
fcoms
enter
jo
insl
adc
rolb
xchg
dec
int
inc
adc
aam
fmulp
gs
push
pop
fstps
cmp
cld
sarb
or
sbb
pop
jl
sbb
lea
decl
out
iret
andb
lahf
cmp
mov
fcmovne
sarb
sbbl
add
lret
aad
or
sbb
out
cmpsl
in
dec
and
rcr
fidivs
dec
adc
in
stc
je
mov
loopne
mov
bound
outsl
add
int3
jne
jl
add
lods
inc
js
hlt
stos
jl
xor
and
in
jbe
fwait
xor
add
mov
jae
mov
pusha
pop
in
loope
push
xor
or
cld
imul
xchg
cmp
xchg
leave
mov
lret
inc
cmp
cmp
mov
dec
xchg
adc
int
imul
push
in
fstl
xor
mov
icebp
aam
enter
xchg
int3
aas
sahf
sbb
and
adc
adc
int3
mov
movl
cmpsl
mull
cli
andb
and
leave
mov
cmc
or
shll
cmp
jp
loopne
arpl
mov
sbb
add
dec
shl
push
imul
jge
in
lock
negb
jp
push
jo
and
sahf
in
scas
sbb
dec
adc
stos
xor
icebp
test
shrl
arpl
jge
ds
add
pop
inc
adc
add
jecxz
jg
dec
movsb
divw
lods
push
lret
loop
push
xchg
test
push
stc
adc
xchg
jo
xchg
cltd
sub
scas
cmc
or
mov
call
or
xor
push
inc
nop
adc
sti
shrl
push
sbb
pop
mov
pop
xchg
loopne
std
add
xchg
arpl
fwait
and
stc
orb
pop
pop
cld
mov
cltd
push
push
pusha
test
lds
sbb
xor
iret
and
in
lret
cltd
lret
icebp
jnp
lret
add
mov
push
push
leave
in
pusha
and
inc
lods
loope
push
inc
push
pop
cli
push
add
xchg
scas
in
inc
mov
fimull
movsl
mov
daa
mov
leave
ficoml
inc
and
mov
sar
push
mov
mov
add
out
lods
xchg
fstps
lock
js
leave
out
add
ret
add
sahf
mov
add
inc
add
ljmp
inc
imul
push
sbb
mov
jecxz
cmp
jae
outsl
es
lods
mov
pop
insb
loope
add
pop
es
dec
push
les
inc
push
ljmp
mov
sub
lods
and
cmc
test
pop
or
out
roll
jecxz
jae
cli
and
pop
mov
in
enter
sahf
xor
cmc
add
xchg
sbb
and
add
adc
es
out
or
ret
pushf
push
lea
outsl
lret
inc
in
frstor
sbb
or
mov
add
mov
xor
mov
into
fcompl
mov
stos
fisubl
xor
hlt
sbb
add
inc
mov
enter
iret
cltd
stos
sbb
jo
in
iret
pop
xchg
pop
push
int
es
leave
stc
adc
cmpsl
sub
stos
dec
xlat
scas
sub
movsb
cmp
push
sbb
pop
es
push
jns
ljmp
shrl
test
ret
dec
jmp
in
outsl
lds
mov
xor
xor
jge
jbe
jns
inc
jp
lods
movsb
adc
scas
lds
lcall
mov
pop
mov
lret
icebp
fs
test
and
push
mov
push
into
or
fisttps
loop
test
in
mov
push
jg
sub
pusha
push
mov
add
pop
leave
xchg
jmp
jl
push
jno
jnp
or
les
mov
inc
pop
mov
imul
shlb
jb
adc
mov
push
movsl
sbb
clc
jg
lea
gs
aad
adc
push
sub
cltd
mov
jecxz
jg
push
leave
mov
mov
and
pusha
pslld
rol
mov
ret
dec
add
push
add
cmp
jp
pop
std
adc
dec
popf
rolb
negb
lods
jo
lds
cld
xor
jne
add
push
add
cmpsb
cmp
out
sarl
cwtl
pusha
sti
fwait
test
mov
and
sbb
cmp
pushf
sbb
or
push
sbb
call
lock
movhps
mov
xchg
jp,pt
int
test
or
or
iret
imul
lret
adc
mov
fiaddl
leave
test
xchg
inc
xchg
xchg
jae
ja
in
fwait
in
inc
fistpl
pop
cmp
push
fadds
cmp
cwtl
icebp
mov
cmp
std
jns
out
xlat
push
pop
mov
mov
hlt
cwtl
lods
xchg
outsl
dec
xchg
loop
loop
and
or
mov
inc
mov
mov
scas
repnz
aaa
and
lock
inc
adc
push
rclb
test
and
ds
adc
imul
push
stos
ss
add
std
jnp
outsl
mov
mov
mov
sti
pop
cmp
into
ss
fisttps
sbb
daa
cmp
dec
aaa
mov
and
inc
les
mov
hlt
and
out
jae
fwait
inc
ret
scas
mov
adc
adc
cmpsl
cld
dec
lods
das
loope
add
adc
pusha
jne
xchg
ljmp
sbbb
jne
jl
aas
xchg
pop
aas
jl
loope
mov
push
mov
pop
inc
mov
pop
xchg
mov
adc
leave
stc
fcmovnu
xlat
aaa
in
test
push
xchg
adc
pop
mov
mov
scas
jg
lds
inc
imul
sub
loope
xchg
in
rcrl
into
dec
push
sar
addr16
dec
cmp
pushf
pop
lcall
fists
pop
hlt
xor
fnstcw
out
inc
dec
js
xchg
popf
in
fcoml
fcoms
adc
ds
cs
mov
push
or
scas
jnp
sub
and
imul
dec
jl
dec
insl
stos
pop
iret
or
clc
out
sub
stos
adc
sub
or
pop
orl
xchg
pop
sti
sbb
fistpll
frstor
roll
jo
cmp
ret
xor
test
xor
dec
or
es
and
mov
xchg
hlt
cmp
sbb
ljmp
cmpsb
into
ja
mov
dec
jge
or
fs
mov
rclb
mov
daa
dec
xchg
sub
and
ja
loopne
in
add
adc
sbb
xor
jo
pop
inc
imul
outsl
or
mov
daa
mov
lcall
sbb
in
shll
xor
xchg
jns
xchg
es
clc
cmp
cmpl
pop
out
cmpsl
lret
push
ds
adc
and
hlt
punpckhwd
lods
lock
push
mov
xchg
push
or
insb
jae
mov
adc
leave
imul
pop
adc
dec
jle
das
movsb
ja
test
out
ja
jmp
nop
movsl
and
add
push
and
jbe
sbb
repnz
cmp
mov
imulb
cmpsb
dec
stos
pop
sbb
inc
flds
cld
dec
dec
int
fisttpl
addr16
xor
xchg
ds
push
mov
ja
test
push
in
mov
or
add
adc
push
out
sahf
inc
cmp
pop
push
sub
scas
and
fld
cmp
jge
sbbl
jae
dec
push
cs
jne
dec
xchg
test
test
cltd
imul
cwtl
inc
mov
adc
push
movsl
cltd
sub
fs
add
rcrb
mov
aad
enter
test
push
fcompl
pop
inc
adc
in
mov
or
sbb
push
or
gs
repz
pushf
lods
scas
js
push
aam
adc
out
popw
push
repz
xlat
adc
ret
std
xchg
in
sarl
fsubrs
and
push
out
je
xor
cmp
fsubrs
mov
mov
push
loop
xor
mov
dec
mov
cli
sbb
mov
mov
leave
xchg
xor
sub
adc
inc
enter
cmp
nop
mov
cmc
imul
bound
cmpsl
push
adc
inc
lcall
sbb
mov
pop
stos
fbstp
cltd
stos
adc
dec
or
mov
and
loop
rorb
into
and
dec
dec
adc
jecxz
sub
in
je
push
mov
add
mov
mov
lret
jo
in
dec
ds
lods
or
and
int
ja
fidivrs
lret
out
and
aam
add
inc
mov
test
mov
fwait
push
mov
xor
nop
js
xlat
or
sbb
fs
icebp
and
pop
xchg
sub
enter
xor
xchg
ja
gs
xlat
sub
cmpsb
or
push
out
aaa
scas
cmp
test
ljmp
mov
mov
adc
mov
push
es
fimuls
and
or
mov
sub
and
sarl
sbb
pop
cwtl
mov
jo
fnstsw
or
clc
sbb
inc
call
loop
xor
sub
cmp
mov
out
mov
adc
push
std
inc
pop
popa
jns
and
push
imul
std
inc
push
pop
jmp
jo
push
fsubrs
cmp
cs
mov
in
pop
ljmp
shrb
and
test
sub
push
lcall
fsts
pushf
das
inc
add
jno
adcb
nop
shrb
jmp
jmp
repnz
or
sahf
icebp
into
fisubrl
jg
repz
std
in
mov
jo
aaa
adc
lods
aam
jae
jp
mov
js
test
and
jne
rcll
adc
dec
jl
mov
stos
adc
iret
pop
xor
cmp
out
loop
xor
pop
or
and
push
adc
cli
adc
or
test
adc
es
shlb
dec
lea
rclb
not
mov
or
int
dec
push
insl
in
mov
xchg
cmp
sub
push
ljmp
test
data16
cmp
test
or
or
xchg
jns
cld
mov
mov
push
jl
subb
fisubrs
inc
add
xchg
jns
ds
cli
jmp
jo
jg
sbb
dec
adc
movsb
in
cmp
out
mov
or
sbb
adc
testb
push
in
mov
es
insl
jp
pop
shll
cmc
bound
pop
fucom
sti
inc
aad
cmp
pop
mov
mov
out
jmp
jp
xchg
ss
xchg
mov
cli
xchg
xchg
std
mov
orl
call
pop
cmp
pushf
xchg
lcall
cmp
mov
push
sbb
push
fs
xor
in
mov
mov
xchg
mov
ret
orb
xor
stos
dec
lret
sarl
jmp
adc
in
inc
sub
lahf
cmp
outsb
xchg
leave
pop
icebp
out
sbb
lods
mov
adc
inc
dec
aaa
sbb
jecxz
testb
mov
movsl
dec
mov
pop
mov
out
push
sbb
push
test
mov
sbbl
in
rclb
sbb
addl
inc
pop
mov
inc
inc
sub
fs
pop
cmp
push
pop
sbb
xchg
jne
nop
lds
and
sti
nopl
ficoms
lods
cltd
mov
decl
xor
add
jmp
add
call
ret
repz
test
pop
push
push
jg
loop
jl
mov
das
std
add
aad
xchg
or
imul
pop
lock
fyl2xp1
fstpt
xchg
rcl
test
gs
int3
jg
pop
aaa
mov
inc
rcrl
xor
mov
jp
add
frstor
mov
jb
mov
ret
outsb
out
inc
pop
push
jnp
push
sub
jle
movsl
and
lahf
xor
xchg
cmp
xor
mov
inc
stc
dec
mov
push
jl
add
cmpb
mov
add
pusha
xor
fstps
mov
lahf
mov
aam
cmp
dec
push
pmulhw
pop
ret
cli
stos
xorl
movsl
xor
or
rcl
xor
stc
iret
push
xchg
sti
pop
add
jns
jns
js
fimuls
push
addr16
rcl
and
or
push
mov
pop
sub
popa
xchg
mov
fsubs
jge
jns
xorb
adc
push
push
mov
rcrb
aas
mov
push
test
mov
xor
idivl
int3
jl
aad
lock
sub
and
jnp
sub
inc
je
fcomps
stos
arpl
inc
cmp
push
imul
dec
nop
fidivl
inc
push
xlat
rorl
pop
daa
fcmovb
cmp
inc
out
adc
jnp
jmp
fs
xchg
ljmp
dec
es
cmpsl
loop
clc
shrl
jns
arpl
fisubs
lods
jg
xchg
fldt
xor
sub
cltd
je
fwait
mov
dec
sti
fsubrs
mov
mov
jne
ss
js
daa
mov
imul
popf
mov
sbb
cwtl
xchg
mov
cmc
mov
xchg
mov
idivb
addl
scas
ds
addr16
fistpl
push
jge
or
dec
mov
add
repz
sub
mov
fimull
jbe
mov
mov
mov
pop
test
push
inc
popa
stos
adc
movsb
sbb
dec
dec
subl
pmulhuw
jl
or
ret
dec
cmp
cmpsb
mov
jno
jb
mov
sbb
push
mov
popf
mov
sbb
sahf
scas
cmpsb
mov
mov
xchg
loope
add
and
repz
ret
js
sti
scas
and
stc
bound
push
dec
sub
daa
mov
enter
sub
arpl
fildl
and
add
pop
mov
leave
mov
inc
mov
cmpsb
pop
lret
aas
mov
imul
enter
incb
add
ret
icebp
dec
jmp
mov
fimuls
mov
andl
mov
inc
es
add
xlat
bnd
cmpsb
inc
les
out
addr16
dec
shl
fdivrs
ss
and
mov
dec
xchg
call
pop
int3
push
jmp
jp
loop
cmc
jae
in
mov
mov
mov
xchg
insl
jmp
aaa
or
enter
je
push
popa
pusha
in
mov
incl
adc
xor
mov
pop
push
sub
lods
or
inc
push
jg
int
lods
xchg
std
addb
mov
enter
imul
and
sti
xchg
outsb
fstpt
fwait
repz
addr16
popf
fldlg2
jb
jecxz
daa
es
xchg
in
repnz
and
js
ds
std
sbbl
aad
out
js
mov
std
jb
lds
test
jp
mov
inc
leave
mov
test
mov
test
mov
push
push
xor
pop
push
sub
jg
out
push
fcomp
xchg
push
inc
testb
xchg
mov
insb
lds
sbb
ret
lcall
sub
cld
adc
out
cmpl
into
stos
mov
data16
add
int
loopne
fwait
rclb
bound
aad
pop
enter
jae
mov
test
or
and
mov
mov
and
icebp
ss
scas
lahf
mov
cmp
xchg
and
mov
imul
bound
insl
add
add
xchg
test
stc
dec
lret
cmp
aad
outsl
clc
and
xchg
fadds
scas
gs
into
mov
sbb
nop
cmp
lea
stc
sbb
in
push
jg
test
enter
mov
sahf
xor
int
adcl
jb
mov
scas
adc
inc
mov
dec
test
xchg
cmp
xchg
xchg
sub
test
add
mov
xchg
mov
mov
pop
imul
cs
or
cwtl
mov
dec
aas
xchg
enter
rclb
pop
stos
stc
cltd
icebp
inc
push
arpl
push
in
jg
add
cmp
int
cmp
int3
inc
push
jns
sbb
jae
dec
test
ret
int3
out
sub
mov
adc
jns
out
shlb
adc
out
xor
dec
dec
bnd
sarl
hlt
dec
les
arpl
icebp
clc
es
adc
js,pn
inc
sbb
pop
sbb
shrb
popf
push
cmp
js
mov
mov
stc
sub
inc
lcall
clc
stos
dec
pop
mov
aam
ja
jnp
cwtl
dec
pop
inc
cmp
push
jae
mov
xchg
mov
inc
xor
andb
outsb
mov
iret
loopne
out
fld
loop
dec
cmp
out
and
les
lods
aad
jecxz
jmp
cwtl
add
dec
cmp
sub
ljmp
push
pop
das
pop
out
pop
xlat
sub
mov
shr
aaa
shrl
data16
out
or
orb
inc
int
pop
fidivs
cli
xchg
popa
js
jl
pop
test
bound
cld
mov
ja
aaa
xor
jne
push
sti
addr16
mov
es
out
push
xor
push
dec
or
hlt
pop
je
sti
ds
push
in
mov
bound
cmpsb
mov
loopne
mov
mov
push
cmp
xor
ljmp
or
sbb
movsl
mov
jne
add
jne
jp
and
mov
dec
cmc
gs
or
testb
cmpsl
jnp
cli
imul
in
scas
out
popa
xorl
xchg
mov
or
daa
adc
add
iret
mov
ds
adc
cmp
ljmp
sub
sbb
xor
test
loopne
mov
ljmp
std
add
xor
fisubs
movsl
jge
rolb
fxch
fdivrs
jmp
les
xor
and
in
rol
push
scas
pop
in
stos
fdivl
aaa
imul
mov
sub
jmp
or
pusha
jns
fdiv
je
ljmp
out
xchg
inc
aam
jp
fwait
inc
lds
mov
cld
mov
shl
bound
stos
aad
xor
andl
push
mov
dec
or
arpl
add
loop
mov
arpl
mov
xchg
not
inc
xchg
add
mov
shll
cmp
pop
js
popa
mov
fs
das
in
mov
aad
mov
xchg
sbb
lcall
mov
jmp
and
popf
or
jecxz
xor
or
outsb
inc
push
nop
add
lret
fnstenv
sbb
in
mov
inc
pop
push
mov
mov
xchg
repnz
lcall
cmp
jb
mov
clc
testb
inc
fdiv
or
stos
sub
inc
pop
imul
pop
pop
sub
mov
cmpsb
rcrb
stos
stc
add
imull
and
jge
mov
xchg
ss
jle
test
sub
pop
sbb
cwtl
cmpsb
push
add
xor
xchg
jno
xor
fwait
sbb
xchg
loopne
das
adc
xor
fmull
dec
je
push
push
mov
fwait
aas
sti
adc
or
out
push
sbb
dec
push
dec
cmpsb
test
mov
jp
movsl
hlt
lds
cmp
mov
jl
es
repnz
leave
sub
in
jo
sbb
cmp
xor
and
or
shll
stos
xchg
xchg
lea
pop
push
les
sbb
stc
mov
lret
jl
call
and
ss
fwait
cmp
scas
jbe
sbbl
repz
je
inc
and
imul
lret
faddl
loope
xor
jecxz
mov
aas
das
repz
jle
ljmp
cmpsb
aam
pushl
push
ds
inc
adc
test
pushf
fmul
inc
inc
lcall
xchg
stos
xor
add
hlt
out
cmp
mov
sub
xchg
and
lds
or
outsb
add
pop
jp
adc
push
mov
lock
scas
mov
bound
dec
pushf
push
pop
iretw
or
test
imul
adc
aam
int
imul
xor
mov
pop
aaa
inc
or
lods
enter
mov
and
sahf
mov
lret
fidivs
inc
dec
inc
xchg
iret
aas
pop
adc
sub
fdivp
repz
jl
lock
mov
adc
sub
jns
cwtl
xor
shl
in
push
jge
stos
arpl
inc
mov
inc
je
push
mov
repz
aaa
mov
mov
xchg
xor
ret
out
jae
and
and
mov
int
repnz
mov
mov
imul
sbb
cmp
xchg
sbb
inc
cmpsl
adc
icebp
mull
jns
dec
sub
stos
and
adc
or
push
xor
aad
test
aaa
cmp
ror
ljmp
aam
repz
jmp
aam
and
das
xchg
ss
shrl
rorb
xor
xchg
push
movsl
mov
pop
jo
test
bound
inc
mov
push
mov
mov
cs
faddl
scas
sub
in
and
adc
les
jl
mov
popa
pop
in
imul
sbb
sub
sti
dec
fstpt
out
mov
inc
jo
leave
mov
shl
fidivrl
pop
add
pop
xchg
mov
test
pop
loope
mov
adc
pop
xorb
or
imul
push
fidivrs
fcmovnu
xchg
rclb
ret
and
pop
icebp
sarb
xor
rcrl
add
xchg
test
fwait
outsb
lret
inc
inc
sub
and
gs
gs
cli
and
mov
jp
lock
scas
sahf
popf
pop
rclb
inc
fisubl
mov
sbb
cmpb
mov
and
ret
out
lret
mov
pop
pusha
pop
cmp
pop
dec
jle
sbb
outsl
mov
gs
loopne
xor
xor
sub
stos
xchg
sbb
sub
mov
loope
mov
aas
add
out
fdivr
add
mov
sti
rdpmc
jge
push
dec
sbb
out
jmp
sbb
jo
xlat
sub
jns
das
push
fisttpll
cwtl
fcomps
cld
cmp
insb
arpl
shrb
or
dec
scas
es
push
pop
xchg
jne
add
pop
sbb
and
mov
rcrl
clc
outsb
lds
inc
jecxz
and
stos
insb
jmp
add
pop
mov
gs
push
mov
jno
pop
sbb
into
push
movsb
pop
mov
outsl
jnp
sub
mov
adc
rcrb
dec
mov
push
std
and
push
xchg
fstps
mov
mov
mov
or
flds
mov
repnz
or
fbld
fldcw
js
push
leave
mov
jne
repnz
mov
pop
push
mov
push
ss
mov
loopne
cmp
fcompl
inc
or
ret
leave
pop
aam
add
ljmp
lcall
adc
mov
sub
nop
iret
cmp
dec
mov
mov
andl
xor
jno
dec
fsubrs
ja
sub
iret
fs
test
sbb
pop
and
stos
lret
pop
popa
ds
roll
sub
out
jae
loopne
mov
jae
jnp
mov
adc
mov
dec
add
mov
pop
into
cmp
hlt
push
inc
cltd
xchg
popa
inc
sbb
fnstenv
lcall
stos
pop
adc
and
jg
int3
or
sub
jo
icebp
xorl
into
lods
pusha
das
push
adc
and
mov
or
lret
mov
xorb
int3
cmp
pusha
jge
lahf
jl
inc
fucomip
mov
adc
adc
adcb
mov
push
sahf
es
ljmp
mov
test
add
dec
jmp
aaa
jle
cmpsb
push
add
rcrl
xchg
stos
xor
adc
in
repnz
pusha
jo
aaa
cmp
dec
mov
out
imul
lock
std
push
sbb
lods
cld
mov
jp
adc
cmp
fistl
mov
adc
scas
out
les
imul
jae
push
add
xor
mov
lret
mov
in
sbb
push
jmp
scas
negl
and
xchg
out
inc
movb
clc
lcall
xchg
sarb
xlat
xor
es
mov
pop
testb
push
data16
dec
and
pop
sub
insl
cwtl
cmp
and
lods
xchg
jne
xchg
dec
push
dec
das
sbb
mov
call
fadds
enter
fwait
mov
ds
adc
aad
ja
add
push
es
shlb
sbb
stos
outsb
ror
ficoms
pusha
inc
pop
inc
sub
jp
mov
jg
cmp
mov
sub
pusha
stos
adc
enter
add
or
dec
push
cmp
dec
push
inc
test
xchg
jecxz
rolb
add
or
nop
lods
or
lea
outsb
into
stos
pop
push
xor
xor
push
subb
mov
addl
sti
adc
pushf
leave
jecxz
or
lods
pop
test
mov
xchg
fsubs
cmp
pop
das
and
push
adc
andl
push
jnp
movsb
or
mov
xchg
sbb
ffreep
fstpl
add
outsb
push
icebp
adc
add
outsb
xchg
and
adc
shll
stos
add
dec
jns
jbe
stc
or
push
iret
lret
loop
std
les
lcall
popa
xchg
stos
int
and
mov
dec
shll
addr16
test
and
xchg
out
test
ret
dec
pop
jle
lock
loop
scas
mov
xchg
nop
mov
inc
or
push
push
shll
inc
call
cli
mov
and
adc
jmp
sbb
mov
pop
mov
mov
loope
insl
add
daa
push
push
push
cld
inc
xchg
repz
sub
adc
call
xor
bound
test
pop
dec
cmp
leave
out
je
ret
or
jmp
insb
sub
std
mov
adc
nop
inc
sub
popa
xor
push
jo
arpl
repz
mov
and
scas
xor
xor
lods
xlat
ljmp
inc
xchg
jns
ds
xor
mov
pop
decb
jle
out
orl
jecxz
int
les
push
cmpsl
popf
and
xchg
mov
out
in
adc
inc
out
sbb
mov
pusha
in
inc
adc
mov
adc
push
sti
movsb
scas
pop
push
mov
jle
xchg
pusha
xlat
pop
adc
xchg
dec
fistpl
rcrb
mov
imul
mov
adc
aad
lea
je
mov
cli
test
mov
outsl
outsl
inc
cwtl
add
pop
jne
inc
aas
jge
inc
and
xorl
inc
fmull
xchg
loope
cs
pop
dec
dec
sbb
cmp
xor
push
push
jae
icebp
push
mulb
mov
pushf
sahf
cmp
cltd
adc
pop
daa
sub
pusha
ljmp
cltd
stc
inc
insl
repnz
add
out
jmp
testb
jecxz
orb
orl
jns
gs
add
adcl
in
add
stc
test
outsb
sti
mov
nop
test
stos
xchg
push
insl
shrb
mov
mov
inc
seto
xchg
out
sbb
mov
cmp
mov
outsl
lods
loope
inc
xchg
mov
cli
sti
push
sub
mov
cmp
and
aas
sub
adc
sub
jmp
mov
dec
daa
test
xor
out
loopne
ljmp
mov
mov
mov
adc
popa
pop
adcb
adc
pop
jmp
call
pop
add
shl
xor
stos
jmp
fadd
and
out
mov
mov
mov
pushf
dec
in
mov
mov
pminub
mov
pusha
pop
test
xchg
adc
in
mov
ret
mov
and
in
out
std
mov
or
jbe
jl
pop
jno
jne
lret
loopne
ds
push
movsb
aam
jb
dec
mov
insl
out
xor
fdivrl
mov
add
push
or
mov
stc
imul
xchg
mov
xchg
push
imul
and
inc
gs
dec
fmul
inc
loop
inc
push
out
xor
sub
push
or
sarb
pop
xchg
jle
jb
and
cmpsb
and
mov
stos
add
loope
popa
cmp
iret
out
cltd
out
pop
fwait
inc
mov
pop
inc
xchg
in
ficoms
xor
jb
xchg
imul
add
sub
mov
xchg
inc
mov
dec
dec
inc
loope
add
rol
shl
insl
inc
mov
ret
cmpsl
loopne
push
dec
xor
lods
loope
arpl
movsl
jae
loop
lret
jne
or
adcl
xor
sahf
adc
mov
inc
addr16
push
cmp
pop
call
call
sahf
stos
inc
add
mov
lcall
jo
jno
or
outsl
outsl
popl
sub
mov
xchg
pop
pop
cmp
out
inc
pusha
xchg
jmp
call
pop
push
roll
shrl
pop
ja
jo
fildl
xchg
push
sub
clc
mov
not
lcall
std
imul
push
pop
rclb
adc
sbb
out
je
lods
adc
mov
sub
pop
mov
mov
push
xor
xchg
fisttps
push
and
jo
dec
fiaddl
ljmp
adc
push
sbb
mov
adcl
andb
pop
es
inc
rorb
pop
sub
jg
jbe
or
pop
xchg
sub
add
cli
dec
mov
xchg
das
mov
jb
jbe
loope
cld
aaa
and
out
jl
and
lahf
adc
loop
in
xchg
pop
jl
sub
xchg
aad
jp
jae
mov
xrelease
test
mov
ret
adc
mov
mov
out
xchg
fs
sbb
stos
fcmovnbe
loopne
arpl
test
sub
lret
das
adc
mov
pop
aam
sub
loopne
mov
cmpb
pop
daa
bound
es
sbb
rcr
cmp
inc
mov
add
data16
dec
popa
mov
jae
mov
outsb
or
xchg
mulb
cmp
mov
pop
add
jae
and
or
in
shll
mov
jl
mov
mov
test
jmp
shll
adc
xchg
sbb
in
shlb
jl
mov
xor
stc
xor
sbb
inc
stos
test
mov
mov
sub
aam
mov
popf
into
aam
into
adc
iret
fisubl
sti
imul
or
out
lods
adc
mov
jge
mov
jp
or
push
jmp
or
add
fistps
gs
and
add
inc
pop
push
aam
dec
ja
js
cmp
cmpsl
xchg
rcr
or
hlt
pop
movsb
jne
shll
std
xor
pop
std
add
lcall
lods
add
insl
lock
subl
sbb
rep
call
lods
xor
fldcw
mov
les
mov
sarl
sub
pop
lahf
push
push
jle
arpl
xorb
aad
xor
add
xor
mov
xchg
cmp
lods
lret
and
test
aas
mov
das
xchg
add
adc
add
push
in
mov
mov
mov
jno
dec
stos
and
sub
add
repz
mov
push
cmpsl
inc
insl
inc
and
mov
cmp
jae
dec
and
sbbb
mov
jp
mov
xor
push
sbb
scas
add
jns
int
bound
test
pop
push
and
xor
les
imul
lahf
dec
das
enter
push
cs
insb
pushl
pop
cld
mov
sub
mov
jle
adc
adc
scas
ss
int
cmc
mov
push
lahf
aas
mov
add
ret
jno
jecxz
mov
push
and
jg
add
sbb
shl
insl
mov
aas
xor
out
cmp
push
sub
mov
jb
mov
mov
insb
push
jp
push
sub
jmp
jae
cmp
xchg
in
insb
sub
add
sub
test
mov
test
dec
aaa
cmpsb
sub
jbe
and
lret
push
in
sub
and
outsl
loope
repnz
popf
fstps
rcrl
mov
xchg
sbb
lahf
mov
sbb
pop
sub
es
leave
mov
in
xchg
ds
ss
mov
xchg
rcr
mov
call
jbe
aaa
sbb
xchg
adc
push
dec
js
stc
mov
enter
xchg
stos
outsb
mov
shll
mov
sub
lock
and
dec
inc
mov
and
lods
adc
fsubrp
cmp
push
les
add
pop
push
fcmovnu
cmpsl
sarb
lods
sahf
add
outsl
clc
pop
ss
pop
lock
mov
push
lahf
cwtl
gs
aad
cmpsl
jns
cld
dec
jno
cmp
mov
jmp
pop
xor
orb
xor
in
jnp
push
mov
filds
bound
lret
jg
adc
jnp
movsb
mov
mov
cmpsb
mov
je
imul
icebp
loope
and
xchg
data16
out
push
sub
dec
stc
cmp
cwtl
jp
roll
add
push
xchg
sbb
inc
mov
scas
jp
clc
bnd
pop
cmpsl
sub
xchg
push
jl
jl
cmpsl
mov
pop
packuswb
fidivl
cwtl
out
je
cmp
hlt
xchg
mov
dec
push
sar
lcall
dec
jecxz
cmp
adc
mov
jmp
pop
pushf
sbb
arpl
fisubl
fisubs
jg
sbb
fidivrs
sbb
aas
lret
sbb
inc
mov
pop
inc
addr16
mov
fnstcw
out
dec
pop
mov
int3
fldenv
and
pop
fisubs
mov
add
repnz
je
mov
bound
push
add
popa
pop
bound
dec
cmp
stos
in
xchg
leave
clc
xchg
cmp
test
enter
mov
dec
mov
test
das
dec
push
adc
and
rclb
or
test
arpl
push
or
shll
mov
xchg
pop
jbe
movl
pushf
inc
sbb
inc
pop
pop
jo
jns
xor
loope
hlt
xor
popf
out
xchg
and
sbb
andl
xor
cmp
test
push
in
xchg
call
or
jo
hlt
pop
lahf
or
imul
xchg
ret
popf
or
pop
inc
int3
xchg
insb
sbb
xor
out
mov
scas
repnz
sub
jle
dec
xchg
mov
ret
fisubrs
pop
and
cwtl
push
cmpsl
mov
and
inc
lahf
jbe
std
test
and
arpl
test
pop
inc
enter
mov
xor
or
or
shrl
stos
jle
pop
popa
test
push
or
mov
adc
fs
daa
outsl
dec
xchg
sbb
xlat
aam
mov
jbe
cld
or
and
push
into
pop
out
lahf
inc
sub
add
repz
insl
jmp
push
push
stc
and
dec
cmp
xor
stos
lods
add
xor
aas
pop
jne
jno
mov
xchg
xorl
push
xor
xchg
bound
mov
popa
btr
sub
mov
jnp
jle
mull
pop
push
int3
mov
adc
lea
sbb
bound
add
mov
xchg
sub
in
xchg
cmpsb
mov
outsl
add
or
sub
mov
sub
push
mov
mov
fcompl
and
xchg
in
inc
je
loop
jnp
mov
jae
imul
pop
or
or
bound
cwtl
or
dec
or
out
mov
fisubs
push
rorl
or
stos
add
mov
and
pop
or
call
sub
xchg
out
hlt
iret
sub
mov
pop
mov
decl
in
lock
pop
mov
adc
sub
or
cld
mov
push
cmp
jp
test
xor
inc
dec
cmp
jae
outsl
dec
and
cld
outsl
xor
pusha
dec
das
add
inc
inc
or
xchg
mov
pop
daa
les
aam
push
jo
aam
movsl
inc
adc
jl
test
push
scas
clc
mov
inc
pop
and
cmpsl
or
rcll
inc
sbb
sahf
pop
jmp
push
sub
mov
sbb
jmp
mov
and
pop
movsb
xchg
push
mov
dec
stc
dec
xchg
and
add
jnp
dec
repnz
test
ds
inc
xchg
mov
mov
test
cwtl
xor
adc
sti
popf
and
mov
pop
push
test
or
dec
mov
push
mov
fdivrl
js
movsl
jp
add
pop
sub
and
mov
push
jmp
popa
push
jnp
push
jp
pusha
imulb
sbb
in
or
and
pushf
adc
jmp
daa
out
lock
mov
push
pushf
push
out
testb
test
jbe
rclb
mov
and
ficompl
adcb
push
dec
add
inc
cmp
insb
jnp
mov
adc
push
hlt
lcall
mov
test
aaa
pop
es
lcall
rcrl
popf
test
icebp
cli
or
or
es
subb
fwait
add
sbb
leave
dec
mov
jbe
scas
jecxz
leave
fdivrp
or
xchg
shl
add
enter
cld
orl
adc
dec
xchg
push
sbb
pop
mov
sub
pushf
daa
push
ret
adc
mov
loop
mov
pop
pop
jae
loopne
sbb
jnp
sub
insl
add
xchg
sti
push
hlt
js
imul
enter
lret
pop
push
imul
inc
dec
je
dec
lds
sub
push
nop
scas
out
data16
xchg
out
repnz
xchg
mov
into
cmp
int3
fdivrl
and
push
push
ret
fs
aas
xor
std
push
pusha
testl
js
mov
mull
arpl
inc
shrb
das
test
pop
push
pop
fdivl
sbb
or
mov
jecxz
fnstenv
fistpll
arpl
mov
fbld
fnstenv
cmp
mov
aaa
mov
stos
lea
mov
cmpl
xchg
call
and
sub
lods
jl
mov
dec
pop
cmc
iret
pop
sub
pop
in
sbb
xor
rclb
push
push
loopne
or
jnp
sub
pop
xchg
mov
inc
pop
popa
or
mov
jae
cwtl
mov
mov
sbbb
movsb
ss
add
ja
fwait
clc
adc
rcll
mov
adc
push
jp
iret
inc
add
pop
add
fstpt
dec
lds
filds
inc
test
push
inc
faddl
sbb
mov
mov
or
cmp
lret
insl
add
aad
lock
mov
add
sub
rcrl
xor
mov
sti
loop
popa
push
popa
test
jp
out
dec
aas
scas
test
movsl
cltd
scas
in
test
dec
mov
std
adc
fisubl
jo
and
sub
pushf
ss
ja
jl
fs
incl
les
xchg
pop
pop
das
push
xchg
add
out
lret
in
and
aaa
aas
js
jle
mov
xor
imul
xchg
push
daa
pusha
into
cmpsl
loopne
add
lcall
lcall
pop
sbb
out
loopne
pop
imul
jecxz
or
jle
adc
neg
stos
ds
add
and
test
mov
ret
push
or
imul
cmp
and
pop
mov
push
jl
fcoml
xchg
jmp
pop
jno
aam
mov
mov
rcrb
inc
inc
adc
lahf
mov
aad
xlat
or
or
fcmovnb
pop
cmp
jmp
pop
notl
sbb
adc
mov
movl
outsb
aas
cli
rclb
xor
mov
movsl
sarb
stc
push
test
ljmp
loope
insb
jle,pn
sarl
outsb
mov
cs
in
bound
clc
outsb
pshufw
mov
xchg
fdivs
das
and
inc
bound
scas
je
mov
inc
popa
das
call
pop
cmp
add
pop
repz
in
and
mov
shrl
lods
iret
clc
pushf
mov
inc
insb
cltd
dec
jae
sub
jge
lret
and
mov
xchg
movsl
push
mov
jns
test
xchg
mov
sub
sarb
inc
fs
xor
xchg
xchg
pushf
dec
inc
fwait
dec
pop
inc
push
mov
xchg
cmp
jnp
aas
subb
daa
xchg
int3
lea
aaa
cmpsl
sub
aam
aad
clc
and
push
aam
jg
rolb
ret
test
jge
push
cmp
ret
pop
insl
fisubrs
andb
adc
sbbl
xchg
cmp
movsl
mov
inc
je
jmp
shll
nop
pop
cmp
nop
flds
loopne
cmpl
popa
imulb
jns
mov
jmp
pushf
mov
fs
jge
adc
xchg
negb
lock
xchg
fldcw
mov
out
and
adc
rol
fidivrs
lret
sub
push
out
mov
arpl
cwtl
aam
lods
or
inc
jle
inc
test
mov
enter
mov
dec
jmp
in
xchg
mov
mov
ffree
and
add
push
jbe
sub
lret
pop
pop
sub
sti
cwtl
test
pop
loopne
aas
jno
fldcw
xor
mov
fsubs
sbb
sti
test
addl
daa
xchg
das
mov
jmp
int3
outsb
repnz
fs
ss
xor
inc
dec
ljmp
push
push
jle
dec
mov
rcrl
dec
push
ja,pn
adc
push
fcomip
mov
xchg
clc
cld
mov
imul
mov
rdtsc
loope
sub
dec
addr16
int3
and
mov
mov
add
cmpb
push
jb
cld
repnz
loope
popa
jb
dec
cmp
push
cmc
aas
jge
mov
push
cmc
pop
push
scas
xlat
mov
add
inc
xchg
xor
inc
xor
arpl
cs
jp
sbb
mov
xor
xchg
out
pushf
rclb
sbb
cltd
mov
pop
jmp
lahf
ret
pop
sti
and
push
pop
jno
pop
into
adc
jl
lcall
outsl
dec
push
mov
mov
inc
test
inc
out
xor
or
xchg
mov
sub
sbb
push
loopne
das
add
xchg
mov
cwtl
or
repnz
and
mov
mov
inc
jnp
jne
mov
adc
clc
pop
ljmp
jnp
xchg
les
incb
fs
sbb
das
xchg
fwait
jns
inc
stos
dec
loope
dec
outsl
dec
jecxz
js
out
inc
xor
sub
inc
cmp
js
fldenv
lods
inc
lock
shlb
ficomps
gs
jbe
add
fidivs
mov
loope
push
or
or
pop
fiadds
clc
cmp
jbe
or
pop
out
data16
inc
cmp
je
arpl
iret
sbb
jge
inc
movsl
adc
je
dec
jle
jecxz
lret
mov
fsubrl
das
popa
les
outsb
mov
andl
sbb
rcrb
shll
add
call
call
ret
jp
std
das
sti
leave
mov
and
ja
inc
xor
mov
dec
mov
cmpsl
test
loope
mov
lcall
fdivrl
daa
sti
dec
int
mov
iret
jmp
sbb
sub
stos
cmp
cmpsb
addr16
int
xchg
and
xchg
leave
xchg
xchg
repnz
xchg
out
pop
push
test
ja
mov
lock
out
dec
fistps
aaa
sbb
js
mov
mov
xchg
sbb
shll
hlt
cmp
fisubl
cli
ret
push
hlt
fwait
add
aas
xchg
mov
xor
mov
pop
mov
mul
js
std
stos
fbstp
das
aas
cmp
mov
nopl
aas
mov
adc
rcll
add
jnp,pt
cmpsl
mov
scas
inc
pop
sub
and
ds
xchg
and
dec
mov
dec
rcrl
xor
or
xor
in
adc
push
jl
cltd
and
inc
pusha
retw
add
jb
add
jmp
fnsave
jecxz
cmp
xchg
push
dec
and
mov
lods
xor
pushf
push
pushf
test
or
adc
daa
jno
adcb
push
cmp
adc
mov
jb
jnp
les
xchg
push
mov
in
jb
cli
mov
xchg
mov
or
lock
imul
lcall
cmpsb
mov
pop
jp
cmp
xor
and
inc
mov
fisttpl
flds
or
call
xor
pusha
int
sbb
xchg
outsb
aas
les
and
ja
test
aad
dec
movsb
ss
mov
sbb
sub
xor
push
test
push
enter
gs
inc
fnstsw
mov
or
les
inc
sub
ffreep
testb
shr
cmp
jno
inc
jmp
inc
es
and
push
dec
add
jge
mov
dec
stos
and
xor
stos
orl
sbb
mov
dec
xlat
int
pop
paddsw
mov
std
inc
pop
test
jae
sti
and
pop
add
push
in
push
bound
rcr
dec
push
lea
or
pop
and
cs
out
addr16
push
adc
andb
sbb
inc
clc
push
adc
xor
fsubp
inc
pusha
pop
pop
sahf
sbb
cmpb
add
fsubs
mov
int
jp
orb
pop
pop
je
or
dec
repz
jp
cmp
daa
xchg
or
mov
and
sahf
jo
lret
pusha
add
out
fdivr
jp
adc
clc
push
stos
lods
pop
dec
and
jns
jbe
pop
daa
pop
adc
jp
pop
mov
xor
sub
cmc
xchg
leave
sub
mov
push
out
nop
test
and
mov
sbb
jmp
and
fdivrs
jne
lret
in
cmp
mov
jmp
or
or
out
inc
add
cli
rorl
outsb
divb
imul
and
dec
dec
sub
ja
cwtl
mov
xlat
mov
adc
nop
dec
push
or
in
loop
cmc
out
cmpsb
fwait
xchg
filds
jge
scas
fs
movsl
sub
mov
js
gs
mov
xchg
js
jnp
and
add
mov
outsl
and
inc
cltd
shll
pop
mov
mov
adc
loopne
adc
mov
cltd
add
roll
push
scas
sub
inc
xchg
mov
lods
in
jle
sbb
fiadds
imul
repz
lcall
iret
sub
popf
jp
jmp
sbb
aam
gs
repnz
cmp
lea
enter
pop
movsb
xchg
cmp
adc
push
add
adc
mov
dec
or
push
stc
js
mov
outsl
jae
stos
dec
sti
movb
cmc
dec
sti
push
jae,pn
mov
pop
push
add
movsb
loopne
fimuls
loope
pop
push
das
and
pop
jle
ja
or
filds
fiaddl
test
mov
inc
lock
test
inc
dec
dec
das
dec
mov
stos
sahf
jecxz
inc
push
popa
mov
or
adc
xchg
inc
enter
sub
pop
scas
loopne
cmp
fisubs
popa
clc
add
repnz
nop
dec
and
jnp
leave
imul
pop
inc
cmp
inc
xor
mov
lea
fisttps
inc
insb
fst
pop
adc
sbb
jp
movsl
dec
mov
xchg
aam
xchg
std
inc
test
pop
ljmp
sarb
fdivr
and
pushf
sbb
call
mov
fidivrl
pop
mov
mov
cmp
adc
pop
mov
push
xor
dec
add
pop
jb
xchg
mov
pop
sub
icebp
xor
mov
mov
js
arpl
xchg
dec
add
outsl
mov
sarl
stc
add
cmp
testl
or
aaa
cmp
pop
mov
ljmp
sbb
or
insl
jb
dec
mov
mov
sub
xchg
repnz
mov
mov
cmp
lods
cwtl
jno
popa
or
dec
outsb
inc
aad
lea
jle
nop
hlt
xchg
insl
insl
bound
rcll
inc
insb
jle
cltd
test
cli
cwtl
enter
add
sub
cmp
fwait
ljmp
and
sti
jp
stc
adc
pop
adc
ret
pop
mov
add
jge
sahf
jmp
cmpl
stos
jl
add
sbbl
and
lods
jae
mov
jne
cwtl
orl
push
cmc
popa
iret
cmc
rcll
inc
cmp
fmull
jl
shr
in
clc
and
inc
or
cmp
sbb
test
push
ret
loop
ja
mov
sub
or
jo
adc
and
das
push
mov
stc
and
test
push
hlt
mov
push
lods
add
ja
out
movsb
movsl
xchg
inc
fadds
int
std
dec
cmpsb
inc
fs
pop
jo
adc
rcrb
iret
xchg
rorb
adcb
mov
andl
orb
or
sub
aad
push
stos
cmove
mov
rcrb
aad
xchg
inc
out
sub
mov
jp
xlat
cmpsl
jp
cli
xchg
les
lea
mov
or
and
loopne
loop
xor
cmp
jl
pop
xchg
arpl
clc
cmp
lcall
insb
lock
inc
mov
and
and
mov
jns,pn
dec
leave
lock
mov
push
pop
mov
inc
je
jo
xchg
mov
dec
jp
push
sub
push
sub
sbb
mov
ss
nop
loop
sarb
and
cmp
loopne
outsl
sti
out
fs
arpl
and
in
int
stc
movsl
pop
aaa
cmp
pop
js
popa
sbb
xor
cli
cmc
out
nop
cmpsb
push
mov
out
mov
es
rclb
jae
into
ss
gs
out
mov
xorl
mov
rclb
out
push
mov
in
inc
and
sbb
js
pop
jp
test
inc
int
or
cwtl
jp
popa
xchg
inc
rcl
pop
cmpsl
in
mov
mov
dec
ja
and
lock
dec
fld
xor
push
inc
sbb
xor
rcrb
out
ss
test
test
ret
jne
cmp
jecxz
cltd
out
mov
xchg
inc
sub
push
call
mov
push
dec
jg
lock
sbb
mov
mov
ja
pop
sub
add
movl
adc
inc
lock
fwait
sbb
dec
cmp
jle
addb
popa
cmp
cs
mov
insl
xchg
or
mov
data16
das
test
mov
cmc
iret
inc
dec
cs
mov
mov
ret
pop
jp
pop
movsl
xchg
mov
lret
or
add
adc
arpl
jae
mov
call
lods
pop
and
arpl
repnz
shlb
cli
or
mov
stos
or
xor
add
loope
mov
cs
sub
xchg
mov
mov
sti
mov
cmp
repz
add
in
clc
pop
in
jne
sbbb
jns
mov
ret
in
fcom
xlat
fwait
push
pop
jnp
lods
out
outsl
and
in
dec
test
sub
cmp
aas
pop
fistpll
in
add
push
clc
fdivrl
adc
popa
test
and
push
add
jmp
loope
mov
inc
out
mov
mov
cli
sbb
loope
inc
iret
xchg
xchg
cmp
cmc
dec
hlt
ficoms
insb
adc
hlt
pop
or
notl
ds
aas
mov
adcl
mov
adc
daa
das
jnp
pop
in
insl
pop
sarl
xchg
cltd
inc
cmp
repnz
fcoml
repz
mov
push
mov
ss
pop
into
stc
das
adc
mov
cmp
jnp
mov
sbb
repz
jg
push
nop
lret
aas
mov
test
jge
fwait
into
icebp
loop
ret
dec
cli
sarl
movsl
mov
fdivs
subl
ja
lods
xor
and
dec
pushf
and
fnstcw
insl
sbb
and
cmc
mov
popa
push
rcl
lods
pop
aas
cs
dec
xchg
mov
xor
jo
sub
push
push
inc
mov
test
dec
cld
mov
xor
and
fmull
inc
rcrb
fwait
addr16
test
pop
mov
and
jmp
cmp
fcoms
pop
jmp
push
mov
dec
fisttps
stos
jnp
and
inc
push
insl
mov
xchg
jnp
cwtl
jo
cld
lret
jl
je
or
cmp
ret
dec
push
fidivs
test
orps
sarl
pop
mov
loop
sub
scas
loop
test
jmp
sub
mov
je
mov
lret
int3
cmp
jle
pop
rcrb
int3
lock
jb
cltd
sarl
leave
inc
add
les
imul
sbb
es
arpl
pusha
leave
pushf
push
scas
jnp
insl
add
push
outsl
ret
sub
push
inc
sbb
dec
inc
in
mov
adc
jle
or
ja
das
inc
sub
stc
scas
inc
arpl
mov
and
rclb
mov
lds
mov
cwtl
lods
dec
mov
xrelease
in
out
ret
mov
jae
aad
lods
or
ret
jge
ljmp
inc
xor
imulb
clc
mov
loopne
sub
test
push
test
or
xchg
pusha
mov
and
xchg
loopne
lahf
shrl
inc
xchg
cmp
xchg
out
pcmpgtb
mov
dec
mov
inc
repnz
push
pop
pushf
mov
mov
call
icebp
jle
mov
xchg
dec
or
adc
rclb
push
jecxz
stos
ljmp
jno
pop
xor
out
or
mov
js
in
test
stos
dec
cmp
data16
sub
std
xchg
jns
push
and
push
daa
jmp
push
jnp
jne
cmp
in
ds
in
pop
mov
cmc
repz
pusha
into
sub
pop
sbb
push
dec
and
pop
outsb
add
shrl
insb
dec
ror
add
cmp
aas
dec
xchg
xchg
movsb
cmpsb
or
and
push
mov
jle
shlb
jg
les
iret
sub
push
mov
and
adc
or
or
push
pop
aaa
sti
mov
push
jb
push
inc
lret
outsb
sbb
xchg
or
push
lods
jmp
test
mov
imul
fstp
fxch
mov
ja
inc
into
addr16
lock
mov
adc
push
fwait
add
out
arpl
data16
adc
jmp
mov
dec
sub
or
vaddps
xor
inc
mov
mov
xor
inc
pushf
stos
out
sbb
pop
test
cld
jecxz
cmp
mov
das
push
push
movsl
inc
imul
dec
jle
insl
adc
sbb
mov
fidivs
daa
push
lcall
shlb
stc
sbb
in
imul
loope
daa
aam
shll
push
jno
outsb
dec
push
adcl
cltd
jg
xchg
push
cli
jo
pop
mov
int
out
inc
dec
mov
jecxz
pandn
adc
shrl
enter
cs
pusha
and
hlt
ds
fsubrs
jnp
pop
jecxz
mov
cmpsb
lods
sahf
out
cmp
mov
ret
gs
jno
xchg
jae
sub
movsl
in
mov
pop
add
sub
sbb
cmp
arpl
lahf
and
outsb
daa
or
mov
push
jle
roll
imull
pop
leave
pop
hlt
out
imul
jno
div
or
xchg
xor
jb
clc
enter
inc
mov
xbegin
outsb
lds
fcmovu
jmp
aaa
mov
andl
cmp
dec
mov
cmpsl
sbbl
jmp
pop
xchg
shrl
sub
jbe
daa
andl
dec
cmp
mov
hlt
and
daa
xchg
adc
jle
push
jl
sysexit
push
mov
call
repnz
xchg
mov
dec
loope
jae
stc
and
inc
sbb
ffree
cmpsb
xchg
mov
jo
iret
leave
fidivl
es
sbb
pop
xlat
mov
out
xchg
cmc
dec
cmp
jl
push
popa
gs
mov
add
mov
arpl
or
jmp
je
outsb
push
ja
insb
jo
jo
cs
ss
add
cmpsb
xorb
inc
cli
aad
dec
mov
cmc
cwtl
inc
cli
aaa
sub
lret
jmp
or
push
xchg
cmp
in
cmc
pop
add
push
and
rolb
popf
out
mov
dec
dec
lods
xor
insl
pop
int3
and
cmp
fdivrs
mov
cmpsl
lret
or
fdivrs
push
sbb
sar
push
les
test
push
cmc
in
and
sarl
pop
cmpsl
in
ljmp
cmpsl
sarl
cmp
int3
mov
sbb
fdivrs
mov
mov
rcl
out
jne
mov
leave
test
pop
lret
scas
shlb
xor
mov
std
mov
fsubr
push
mov
lret
clc
mov
rorw
and
in
mov
enter
inc
mov
aaa
jnp
cmpsl
in
out
mov
push
inc
insl
jbe
aaa
dec
add
mov
lret
lahf
ljmp
call
adc
cmpsl
mov
outsb
mov
repnz
pop
cli
sbb
dec
lcall
jmp
je
sbb
mov
push
mov
imul
push
out
mov
lret
int3
ret
xor
cli
movsb
addr16
jb
out
adc
movl
fstps
add
sbb
in
cs
add
or
aad
ret
pop
lock
dec
or
je
pop
mov
stos
adc
aam
dec
sub
lret
xchg
clc
pop
cmpsl
cmp
ss
divb
dec
dec
pop
cmp
xor
sbb
jecxz
xor
mov
or
fsubp
cmp
repz
or
in
xor
jp
mov
sub
dec
cmpsb
fisubrl
add
cmp
scas
movsb
push
sbb
sbb
fstps
lods
sbb
sbb
fadds
mov
xchg
sbb
inc
lahf
dec
adcl
dec
shrb
mov
push
sbb
xlat
cwtl
ds
inc
push
lcall
dec
sub
lods
mov
mov
ret
aas
or
sub
sub
addr16
pop
popa
std
je
sbb
in
fcomps
or
pusha
jnp
mov
movsl
sti
dec
push
incl
push
sbb
xor
push
xor
rolb
jge
sub
sbb
xor
dec
test
icebp
fsubl
hlt
adc
cmp
dec
adc
xchg
mov
mov
pop
aam
aam
bound
push
xor
negl
jmp
inc
pop
ja
loope
jnp
in
arpl
jne
mov
mov
mov
push
int3
nop
pop
adc
int3
adc
pop
mov
sbb
mov
or
aam
cmc
jo
jecxz
shlb
pop
das
cmp
jecxz
mulb
jb
jge
push
arpl
cwtl
cmp
repz
cld
pop
cmp
mov
das
lret
jne
fsts
mov
ja
or
gs
aaa
mov
xchg
fcomps
inc
xchg
jle
add
pop
push
xor
arpl
mov
pop
lock
pop
stc
xchg
pop
push
xchg
sbb
loope
lds
addr16
mov
test
pop
dec
adc
sahf
dec
das
sbb
pusha
inc
xchg
pop
mov
lea
pop
xchg
sbb
sahf
mov
jg
or
xchg
sbb
xchg
sub
xor
mov
outsb
pop
fstpl
jo
idivl
divl
cwtl
rcl
pop
repz
dec
icebp
xor
push
dec
and
nop
loop
insb
jae
push
adc
jb
jmp
add
movsb
adcl
dec
cmpsb
repz
dec
push
adc
ret
push
mov
or
in
cld
stos
movsl
mov
sbb
mov
cmp
and
xor
leave
movsl
daa
arpl
movsb
mov
cmp
add
mov
push
cmp
movsl
cli
and
cmp
outsb
mov
xchg
or
xchg
das
subl
pop
xlat
jge
pushf
push
mov
mov
pop
inc
call
sbb
in
xchg
jne
sub
in
lods
popa
dec
cmp
lahf
lock
inc
jnp
pop
repnz
rolb
mov
out
lret
mov
mov
push
icebp
xchg
mov
adc
mov
push
insb
dec
movsb
lgdtl
dec
sub
xchg
repnz
mov
sbb
outsl
mov
cmp
cmpsb
push
pop
inc
add
out
icebp
add
mov
add
imul
fdivs
inc
sbb
enter
jmp
pop
xor
rorl
into
aam
dec
ss
inc
sti
mov
mov
hlt
and
add
sti
js
loopne
push
repnz
les
out
pusha
mov
sbb
das
rorl
add
ljmp
sub
inc
adc
hlt
lds
ja
cmp
and
ja
sahf
loop
movsb
in
mov
iret
xor
push
repz
dec
loopne
push
push
aam
jge
loop
ja
pop
xchg
mov
add
mov
dec
pushf
aad
push
sahf
xlat
ret
clc
fiaddl
int
shll
xchg
jo
xchg
mov
loope
mov
cmc
push
mov
sub
sub
movsb
out
jae
out
xor
lar
dec
nop
aam
sbb
sub
jb
inc
push
movsl
scas
aaa
dec
daa
or
xor
lret
insb
sti
sbb
mov
outsl
inc
mov
test
push
je
sub
add
lods
jmp
stc
mov
lret
rolb
or
scas
cmp
lahf
scas
mov
mov
out
fwait
in
inc
pop
imul
mov
and
mov
sub
xor
fisttpl
adc
push
xchg
hlt
mov
iret
pop
sbb
sub
mov
clc
push
movsl
add
inc
lcall
shl
inc
aad
movsb
jg
or
pop
pop
popa
mov
jecxz
mov
jne
inc
jae
nop
std
shrl
mov
sbb
sarl
lds
loope
movsl
popa
mov
ja
cmp
push
pop
cmc
arpl
js
mov
jno
adc
jle
std
gs
fmul
jle
das
lods
push
sbb
xor
push
mov
xchg
fists
or
insb
inc
jp
fldt
add
xorl
cmp
movsl
clc
fdiv
mov
daa
xorb
pop
sbb
fisttpl
add
adc
and
mov
and
ljmp
outsl
test
dec
pop
popa
int3
fs
cwtl
out
loopne
shlb
mov
add
adc
outsl
inc
mov
cmp
gs
jns
xchg
je
sub
sub
push
push
xlat
push
add
inc
mov
push
mov
or
fnsave
add
andl
xor
out
pop
mov
sti
jbe
fisttpll
pushf
mov
mov
xor
aas
sti
fidivrl
push
testb
into
stos
shr
xchg
rol
lds
out
ds
cmpsl
das
ljmp
add
fsubrl
clc
je
sub
xchg
out
leave
sub
cmpsb
test
fwait
shll
icebp
cld
js
inc
pusha
mov
cmpsl
sub
dec
mov
lahf
jmp
ja
cmc
iret
dec
xor
mov
lea
cmpsb
enter
inc
inc
iret
xlat
dec
aas
add
popf
aad
lcall
aaa
loop
mov
mov
data16
lds
mov
and
mov
xchg
or
mov
mov
fcmove
sbb
xchg
jge
pop
push
pop
mov
jno
addr16
push
scas
jmp
aas
and
pop
mov
push
out
movsb
hlt
subl
xor
rclb
sub
xor
and
pop
imul
jge
mov
addr16
cmp
lods
sbb
cmp
sbb
mov
jmp
mov
dec
adc
dec
or
mov
sub
fcoml
loop
ljmp
fsubrs
or
dec
stos
and
enter
inc
enter
xchg
cmpb
sub
aad
jb
insl
cmpb
popf
int3
and
sbb
jnp
stc
pop
int3
mov
fprem
sarl
das
pop
cmpsb
mov
mov
cmp
and
es
jg
js
cmp
xchg
mov
lret
dec
lret
loopne
sub
xor
xchg
clc
dec
pushf
push
jge
cmpsb
fistpll
sub
xchg
sbb
mov
add
sub
mov
rcr
pop
test
xor
xor
es
mov
dec
btc
jns
cwtl
add
rorl
cmpsl
xor
or
push
popf
repz
mov
inc
test
xchg
fcom
xor
or
adc
daa
mov
sbb
inc
inc
and
mov
add
imulb
hlt
mov
rclb
dec
andb
out
xor
mov
enter
cltd
daa
cmp
add
fbld
push
xchg
xchg
pop
in
mov
cmp
add
dec
and
lods
push
sbb
dec
sti
xor
adc
xor
jmp
xchg
pop
fsubrs
cmpsl
cmpsb
push
iret
fdiv
xchg
shr
testl
push
test
loope
repnz
dec
js
sub
dec
jg
aad
and
add
mov
aam
out
pop
jecxz
xchg
movsl
push
pop
add
xchg
test
push
es
test
xor
pop
not
cmp
push
in
sbb
sub
pop
std
mov
in
adc
repnz
jbe
stc
xlat
dec
iret
jnp
and
daa
lret
adcl
incb
add
mov
xor
mov
pusha
push
pop
pop
jp
pop
aam
push
outsl
pop
xor
pop
ss
cmp
dec
xchg
loopne
mov
fistl
or
data16
xor
xor
or
jmp
jb
or
loope
or
pop
dec
pop
pop
scas
xchg
ja
mov
sub
dec
or
mov
in
repz
pop
aad
dec
jl
lock
out
cltd
and
add
sbb
inc
sahf
and
sbb
mov
lret
xlat
rcrb
cmpsl
and
pop
mov
mov
pop
jmp
lods
ret
lds
lds
roll
dec
fistpl
mov
fildl
and
add
mov
dec
into
adc
mov
adc
xchg
imul
rorl
add
repnz
insl
xlat
mov
jle
mov
jl
testl
movsb
jmp
popf
cmc
mov
mov
hlt
inc
push
addb
clc
sub
popf
xchg
mov
lock
sbb
push
cmc
add
mov
or
iret
push
pop
out
dec
cmp
mov
xor
aaa
out
out
dec
inc
mov
cmp
les
test
sbb
popf
es
dec
and
xchg
dec
pop
mov
ljmp
or
jg
aam
dec
dec
imul
enter
mov
repnz
pop
daa
cmp
dec
outsb
iret
rorb
sbb
andl
or
push
mov
mov
inc
sub
xor
sub
imul
xchg
cmp
fsubl
insl
xchg
and
or
repnz
add
inc
cmp
stos
mov
in
adc
dec
pop
or
fildll
fwait
sarl
dec
lahf
mov
push
gs
imul
loop
sarb
and
mov
lds
mov
sar
fildl
into
pushf
movsb
stos
lret
les
lods
test
sub
pop
adc
and
leave
xchg
int3
test
pop
mov
add
xchg
mul
lods
cwtl
fisttps
mov
xchg
ficomps
inc
dec
xor
and
sub
loope
mov
fistpll
out
in
jg
and
or
or
mov
sbb
pop
stos
sbb
cli
cltd
pop
cmp
ds
mov
lods
fsub
dec
test
cmp
sahf
cli
adc
int3
and
sbb
add
outsb
insb
push
lcall
pop
cmpsl
mov
pop
dec
cmp
stos
cmpsb
aam
mov
icebp
jmp
sbb
mov
rep
mov
mov
sbb
dec
xchg
jae
mov
jge
pop
popf
imul
or
es
dec
mov
fwait
sar
pop
cld
arpl
cs
test
push
gs
rcrb
adc
adc
clc
xchg
sub
fs
in
sbb
sbb
mov
mov
xlat
cmp
push
inc
aad
lods
scas
shll
adc
dec
insb
dec
loope
pushf
cli
lahf
mov
jle
ljmp
jl
pop
inc
inc
cmp
adc
ljmp
pop
add
mov
imul
xor
dec
lcall
mov
addb
ret
jnp
and
cmp
push
ss
add
sbb
jne
ficompl
jge
imul
cmp
out
test
jecxz
inc
mov
cli
mov
fcmovnu
out
push
push
ds
push
aam
jp
xlat
xor
inc
sub
clc
aad
imul
addr16
adc
ret
roll
sbb
mov
loope
pushf
sbb
dec
mov
sbb
sub
xor
pop
sbb
mov
insl
mov
xchg
rcrb
bound
push
jl
or
fmull
inc
sbbl
cmc
lea
pusha
mov
mov
sbb
addr16
lahf
and
mov
and
dec
mov
add
es
outsl
clc
cmp
or
inc
adcb
push
arpl
push
jge
icebp
mov
pop
jae
call
xlat
into
add
xchg
or
rcl
arpl
push
pop
cmp
mov
pop
inc
xchg
daa
lods
nop
loopne
in
sti
subl
adc
adc
xor
adc
test
jle
sbb
out
mov
icebp
or
jo
aad
sarb
pop
repnz
or
shrl
adc
mov
cmp
inc
inc
push
test
imul
pop
in
hlt
cli
cmc
sbb
outsb
dec
mov
mov
xor
pop
das
pop
fdivrs
mov
or
imul
mov
jnp
mov
cmp
add
inc
pusha
test
sub
sbb
sahf
sarl
mov
hlt
arpl
rorl
lock
adc
int
add
movsb
xor
dec
push
add
mov
xor
aaa
inc
cwtl
push
fcomps
test
stos
sbb
popf
scas
sahf
popa
mov
divl
lcall
rorl
add
pusha
xchg
stos
sbb
out
icebp
rol
testb
sti
inc
pop
movsb
addr16
jle
xchg
mov
jnp
jo
fisttpll
sbb
sub
mov
mov
sbbb
sub
and
mov
dec
lods
and
sti
jp
lahf
flds
pushf
dec
inc
mov
push
adc
cmpsl
and
mov
into
jmp
dec
cmp
xor
imul
jg
dec
jb
pusha
lahf
fsub
dec
and
xlat
scas
test
jl
sub
sarb
ret
fbld
push
add
sub
int
icebp
test
adc
idivb
sbb
xchg
fisttps
dec
mov
out
mov
in
pop
pop
mov
mov
push
ljmp
ss
and
inc
ss
leave
ret
jg
cld
and
mov
repz
pop
pop
push
or
or
jns
pop
push
test
mov
fdivr
pop
sbb
mov
fisubrl
adc
lods
pushf
sub
sbb
loopne
mov
sahf
or
mov
mov
shl
nop
jne
aam
frstor
nop
push
mov
aaa
repz
mov
movsb
movsb
push
clc
test
popf
neg
jle
in
cmc
std
iret
sub
xchg
xor
mov
xchg
fwait
sbb
pusha
sub
mov
push
out
mov
add
aad
sahf
loop
mul
xchg
out
push
mov
xorb
out
loop
shrb
xchg
inc
add
sbb
adc
not
adc
dec
or
sbb
mov
pop
inc
push
sbb
xor
negb
xor
daa
cmpb
xchg
xchg
repz
in
add
mov
mov
jae
addr16
sbb
adc
or
mov
andb
movsb
mov
cmp
lock
mov
push
imul
lods
and
xchg
repz
clc
imul
aam
sub
std
jno
cmp
mov
sti
loope
jno
xchg
call
adc
dec
outsb
loopne
sarb
dec
adc
aaa
loope
pushf
stos
pop
stos
mov
enter
xchg
ds
icebp
aas
insl
jo
scas
pop
cwtl
push
pop
and
inc
mov
or
lahf
inc
gs
pusha
leave
sbb
mov
adc
enter
gs
rclb
xlat
mov
lea
movsb
popa
hlt
sbb
fldenv
mov
xchg
loope
bnd
mov
repz
adc
add
push
pop
dec
pop
mov
insb
dec
notl
push
and
cwtl
lahf
xor
xchg
and
mov
sub
fcompl
dec
ja
dec
jmp
add
or
fimuls
jno
fcompl
dec
or
fs
leave
out
mov
enter
push
push
rcrl
push
xor
mov
mov
and
sub
adc
push
xchg
mov
push
scas
dec
les
fs
and
mov
sub
xchg
in
andl
jg
lea
test
or
xchg
sbb
lea
pop
aas
jmp
mov
dec
insb
dec
fsubl
and
push
rorb
lahf
daa
cmp
push
scas
xor
loopne
cmpsl
and
sbbb
cwtl
into
dec
loopne
lds
arpl
stos
adc
movq
mov
mov
pop
pushf
xchg
mov
fists
repnz
pop
fcmovnbe
popf
or
bswap
icebp
mov
xorb
lcall
sbb
in
lea
xchg
or
xchg
and
ret
mov
movups
xorl
mov
pop
jb
mov
mov
sub
dec
push
xor
lret
jmp
js
fxch
out
cli
and
cmpsb
scas
xchg
fiadds
icebp
add
xchg
adc
mov
cld
je
lock
inc
jp
les
jg
lcall
stos
jb
ss
int
shrb
shlb
inc
fstl
call
shr
ret
mov
ficoms
sahf
leave
sub
sub
adc
jno
cmpsb
mov
xor
or
push
sti
into
fwait
lock
jb
adc
push
in
and
add
inc
add
scas
xor
das
mov
adc
mov
adc
xor
pop
and
jecxz
add
add
or
xorl
test
mov
mov
and
mov
outsl
pop
xchg
and
insl
fs
xlat
andb
jecxz
pop
add
cmpsb
lds
cld
test
repnz
inc
stos
clc
nop
sub
xchg
xor
fildl
mov
or
in
mov
jbe
pushf
cld
adc
push
mov
jns
cs
mov
push
jp
mov
sbb
pop
mov
cs
out
popa
sbbl
mov
popf
xchg
sbb
cmp
enter
mulb
inc
es
mov
and
lock
xor
fdivrp
lret
clc
push
and
xor
fists
xchg
push
sti
dec
jmp
dec
mov
pop
idivl
scas
pusha
ficompl
push
iret
scas
pop
sub
lcall
sub
xchg
mov
out
cmp
ret
adc
iret
sbb
loope
call
cwtl
lcall
xor
jmp
shlb
arpl
movb
push
mov
cld
cld
rcrb
std
push
push
push
jl
jne
fcoms
mov
sti
fs
sub
mov
sub
sub
repz
rorb
or
jge
sbb
lret
pop
mov
fsts
ret
add
mov
xor
mov
aam
and
mov
cmp
fsincos
xchg
cwtl
jp
imul
add
jbe
out
sub
rorl
jnp
mov
and
ret
add
call
add
aad
pusha
add
and
pop
push
sbb
leave
lods
pop
mov
scas
dec
ljmp
jl
lea
cmp
cltd
or
mov
lcall
push
sub
fs
sbb
stc
scas
adc
dec
testb
bound
dec
rcl
mov
mov
and
push
mov
jl
insb
dec
js
xor
pop
ja
xchg
rcrb
out
lods
jecxz
sbb
aam
cmp
cmp
movsb
add
pop
pop
sti
mov
popa
popf
dec
jp
ja
sub
ret
movb
cmp
adc
xchg
orl
in
scas
xchg
mov
and
mov
enter
mov
popf
lahf
aaa
xchg
mov
orl
mov
imul
pop
jge
push
daa
mov
or
out
andb
inc
daa
cmp
mov
xchg
or
adc
mov
xchg
outsb
mov
adc
xchg
roll
dec
mov
jl
lods
mov
jge
fstl
roll
stos
add
shlb
mov
mov
in
clc
cwtl
jnp
subl
mov
push
add
fcoml
testl
loop
mov
mov
jnp
mov
into
enter
sub
and
in
imul
aaa
xlat
movl
jg
mov
cmp
dec
outsl
jg
push
je
add
mov
or
and
enter
jg
jo
xchg
movsl
mov
dec
hlt
ficompl
in
add
push
jp
fbld
and
int
cli
sbb
std
add
mov
inc
out
adc
sub
pop
pop
adc
sarl
clc
testb
int3
cmp
pop
jbe
jg
fsubrl
pop
sbb
ljmp
std
push
sub
repz
ds
aas
mov
cmp
clc
dec
ds
bound
xor
iret
jne
mov
mov
cmp
adc
jbe
lret
inc
push
or
add
mov
movsb
and
jno
enter
js
lods
mov
jne
stos
sub
fst
mov
mov
xlat
int
xchg
cwtl
xor
lret
adc
icebp
test
cmpsl
inc
data16
roll
mov
lahf
or
fsubrs
das
lds
lcall
stc
cmp
xchg
pop
mov
das
adc
rol
inc
cmp
cmc
bnd
pusha
add
out
test
je
cmp
jl
mov
subb
push
sti
ret
test
mov
scas
cmp
lahf
les
mov
and
in
movsb
cli
fsubl
cmpsl
out
xchg
outsb
fsub
cmpb
ds
ds
jae
decl
lcall
popa
sub
test
icebp
data16
mov
ljmp
out
fsubl
adc
mov
mov
in
fs
daa
mov
repz
sub
mov
push
cmp
daa
xchg
pusha
sub
enter
subb
jecxz
ljmp
cmp
int
sub
fsubr
jb
lcall
sbb
jmp
shrl
inc
arpl
mov
adc
xchg
mov
sub
fstl
rolb
idivb
cmp
cld
imull
push
xor
mov
add
inc
ret
sub
xlat
jmp
fsubrl
sar
adc
rorl
pop
jnp
test
shll
shr
scas
adcb
sarb
cltd
and
push
pop
push
xlat
and
ficomps
std
lret
arpl
mov
cmpl
lods
xchg
cs
ljmp
cmp
dec
xor
mov
cwtl
cwtl
out
fsubs
pushf
adc
xchg
push
jmp
hlt
cld
sub
mulb
cmpsl
sbb
jo
les
in
pusha
or
dec
iret
ret
mov
jl
xchg
mov
xchg
inc
xor
pop
insl
scas
fcmovu
inc
lds
shl
sbb
dec
add
adc
sarl
out
popa
push
mov
roll
std
lret
out
insb
add
movsb
imul
xchg
movsb
and
or
cli
mov
or
aam
xor
jno
push
add
movsb
xchg
and
pusha
cmp
cmp
cwtl
in
jp
je
fisttps
push
sbb
jp
and
in
xchg
stos
test
sub
sub
xchg
popf
and
jns
outsb
lret
lahf
and
adc
out
out
mov
mov
sbb
aad
pop
mov
in
cvtps2pd
inc
or
xchg
cmpsb
cld
loopne
mov
cmp
loop
fsubrl
popa
mov
pop
mov
aam
hlt
aam
sbb
test
adc
xchg
inc
push
ja
daa
enter
outsb
sub
fistpl
mov
jge
pop
add
test
push
insb
jmp
fs
xorb
pusha
and
mov
xchg
loope
inc
clc
dec
mov
nop
cmp
pushf
aad
jnp
lock
mov
jp
xchg
push
dec
cmp
das
add
dec
or
mov
sbb
in
call
sub
adc
cli
dec
xchg
or
movsl
jle
aad
cmp
out
push
fsts
and
js
jo
mov
xchg
and
fisttps
je
aaa
mov
loopne
jae
sbb
jp
mov
pop
in
icebp
jmp
fwait
mov
popa
aam
pop
lods
lock
mov
sahf
pop
repz
and
int3
push
push
aaa
jmp
mov
rcll
or
mov
sbb
cmp
mov
inc
or
bnd
imul
xchg
pop
sbb
loope
push
mov
push
ret
test
cltd
sahf
adc
lea
movsl
lret
in
andl
fwait
pop
dec
insl
les
insl
je
cmp
pop
xor
les
jp
aam
in
rcll
insb
shrb
lock
inc
imul
inc
inc
push
mov
inc
loope
add
incb
mov
sbb
repnz
cltd
xchg
aam
or
inc
out
mov
test
jecxz
cltd
pop
fsts
aad
call
into
ror
imul
rcll
sbb
and
icebp
stos
pop
aas
test
and
cmp
pop
fcmovbe
stc
fcom
hlt
inc
lahf
fcmove
xor
movsl
daa
in
push
mulb
jno
mov
sbbl
loope
out
xlat
ja
cmp
jno
pop
mov
loop
in
sti
mov
push
fldenv
push
add
arpl
lods
jbe
stc
loop
ja
sahf
xchg
aad
mov
test
popf
lret
stos
xchg
mov
pushf
out
cmp
dec
dec
mov
in
xlat
and
xor
adc
fimuls
pop
add
mov
sarl
enter
jno
mov
shrb
cld
jmp
adc
icebp
add
cli
decb
and
mov
std
scas
xchg
mov
or
insb
mov
pop
lcall
aaa
scas
xchg
cmpsb
and
dec
xor
inc
pop
in
add
fadd
jg
dec
cld
mov
adc
xchg
insb
xlat
xchg
sbb
popa
insl
stos
jmp
pop
pop
xchg
sahf
xor
sbb
push
in
insl
jge
push
xor
adc
mov
xchg
leave
sub
out
and
and
pop
mov
loopne
mov
sub
test
mov
cld
dec
adc
sub
jp
and
fst
sbb
stos
add
cmp
xchg
in
call
clc
sti
sub
popa
stos
popa
out
dec
dec
pop
adc
enter
stos
mov
iret
outsb
cmpsl
and
mov
pop
orl
imul
clc
jmp
inc
shll
ficomps
test
fcmovnu
jne
dec
insl
ret
and
cld
jb
leave
mov
jo
lock
mov
push
leave
loope
mov
sbb
lods
test
fdivs
movsl
inc
leave
scas
push
push
rol
mov
mov
roll
mov
negl
test
mov
push
icebp
dec
xchg
xchg
pop
loope
add
and
fdivrl
dec
cmp
mov
fs
jecxz
pop
jnp
dec
cmpsb
and
aad
ret
mov
stos
mov
daa
rclb
inc
cmp
or
ret
cs
xor
sbb
or
shrl
or
dec
xchg
loopne
jno
xchg
scas
push
movsl
and
jecxz
cmpsl
sub
inc
adc
cmp
cmp
jle
daa
pop
movb
push
rolb
mov
adc
and
push
mov
add
mov
sub
sahf
cmp
mov
cmpsl
pop
movsb
fiaddl
mov
int
cld
lahf
out
fistl
jno
mov
push
sub
xchg
out
inc
adc
int3
mov
cmp
rcl
mov
sbb
mov
leave
mov
sti
sbb
sbb
arpl
outsl
loop
ret
in
loopne
loopne
addr16
gs
std
dec
and
xchg
andl
js
xchg
push
and
stc
int3
mov
jl
jne
loopne
test
js
pop
roll
rclb
dec
add
jns
lahf
cwtl
cmp
cwtl
cmp
push
stc
jmp
inc
aam
fs
loope
mov
cmpsb
in
sbb
inc
mov
dec
loop
sbb
sub
icebp
mov
jnp
adc
adc
shrb
lods
lods
or
lcall
xor
mov
xor
mov
pushf
cmpsl
cmc
mov
scas
in
push
call
mov
pop
cmpsb
adc
and
pop
mov
stos
sbb
dec
sbb
push
aam
mov
pusha
pop
pop
daa
subl
sub
pop
test
xchg
mov
adc
pop
inc
and
cmp
repz
pop
push
mov
cmp
and
rorl
lea
dec
and
imul
sbb
hlt
or
xchg
fbstp
rolb
fnsave
jle
dec
add
int
pop
das
xor
adc
pop
rcrb
mov
push
xor
sti
and
add
cmp
jae
shll
cmp
out
addr16
andb
sarl
mov
insl
in
xchg
lret
jbe
out
aas
xor
cmp
inc
mov
out
or
shr
dec
or
sbb
lret
jp
lcall
lds
aas
lcall
mov
loop
push
setno
addr16
lahf
add
lods
push
js
jo
cltd
mov
and
addr16
cmp
jmp
dec
movl
pop
xchg
das
pop
gs
popa
inc
sbb
ss
insl
pop
jno
jge
inc
mov
call
pop
sbb
sbb
sub
and
jne
das
sbb
inc
xor
push
sbb
dec
std
cmp
imul
jmp
xor
mov
mov
inc
enter
pushl
mov
sub
mov
loop
addr16
lcall
std
xor
or
pop
add
dec
add
push
and
imul
cmpsl
cli
cs
inc
orb
xor
loop
jae
pop
shlb
inc
daa
pop
out
push
std
lock
xlat
rcll
out
addr16
scas
and
and
mov
stos
jl
mov
push
rcrl
adc
les
pop
pop
sub
in
push
lods
mov
mov
int
mov
hlt
mov
stos
mov
jecxz
jmp
pop
mov
shll
push
jb
les
out
push
jno
xor
push
icebp
fsts
dec
ret
and
mov
sbb
movsb
scas
xchg
mov
sub
outsb
lret
sub
xchg
lcall
test
jb
pop
incl
shr
mov
pop
ljmp
loope
into
adc
add
jb
scas
mov
jne
std
sbbl
sub
lds
aad
rcr
in
push
int3
test
inc
or
or
adc
divl
jecxz
in
ret
enter
fs
loop
sub
lahf
insl
insb
mov
arpl
out
movsl
push
test
or
xchg
es
push
shlb
jns
inc
out
sbb
arpl
dec
stos
jb
and
xor
add
xchg
cmpsl
push
jmp
fistpll
push
aaa
or
leave
icebp
ds
xchg
and
insb
out
cltd
in
sbb
into
xchg
inc
outsl
sbb
jne
push
mov
mov
fadds
mov
pop
sub
or
mov
add
push
sub
dec
fs
int3
popf
enter
call
adc
les
mov
movsb
jb
das
das
add
sti
aad
jo
inc
dec
mov
in
mov
imul
xchg
sbb
aaa
and
mov
inc
adc
jecxz
pop
push
loope
jp
xlat
jmp
jmp
mov
in
subb
pop
jb
push
push
icebp
push
adc
dec
jge
mov
test
lods
ret
enter
dec
nopl
xor
cmp
je
adc
lods
outsb
sbb
fisubrs
loope
push
sbb
fs
mov
pop
cs
xchg
and
fnstsw
pop
sahf
mov
cld
subb
push
inc
lahf
xchg
lgs
lods
test
outsl
xlat
lods
leave
cmp
add
shrl
adc
fimuls
pop
inc
test
add
lods
sbb
int3
push
stc
adc
inc
sarb
icebp
insl
ds
and
cmp
popa
sbbb
lahf
jo
dec
ss
pop
insb
add
outsl
pop
in
mov
xchg
jp
lea
inc
mov
mov
cmp
push
jle
mulb
xchg
cmp
loope
mov
pusha
mov
or
mov
jae
subl
push
mov
aad
int3
cmp
or
lock
shrl
push
fldpi
data16
hlt
add
out
xchg
jno
pop
popa
sbb
lods
jae
shll
or
mov
ret
xchg
daa
sbb
mov
xor
mov
jbe
push
jns
lcall
sbb
ljmp
xchg
cmp
fs
outsb
std
outsl
or
rorl
jbe
repnz
imul
dec
rcr
sub
xchg
shlb
dec
cmp
sbb
dec
lea
push
inc
pop
aaa
shrl
stos
pop
sbb
cmp
inc
lcall
or
pop
rcl
dec
dec
in
inc
cmp
loopne
xor
jg
out
ficoml
lret
stos
inc
fsubrs
fildl
dec
dec
xor
xor
mov
xor
das
leave
fisubs
adc
fists
mov
xor
mov
stos
scas
filds
insl
add
sub
jmp
popf
jg
in
imul
mov
imul
out
or
push
pop
adc
jo
adc
pop
pop
jmp
lahf
sub
shlb
xor
or
rcrl
xor
push
ljmp
subl
jmp
jno
xchg
popa
fs
dec
sub
stos
shlb
cld
mov
repz
xchg
sub
adc
push
jle
stos
or
xlat
not
dec
xor
in
xor
shll
add
mov
arpl
xorl
mov
sub
or
aam
push
mov
fsubrs
cli
dec
ds
int
mov
mov
mov
push
enter
cli
push
xchg
sbb
mov
cmc
push
in
mov
mov
cld
addr16
pop
xchg
adc
shl
cmp
push
jl
push
xchg
jecxz
or
lea
call
jmp
lcall
sub
scas
iret
mov
inc
sti
sub
sub
sub
orb
loope
pop
jle
clc
sbb
pop
divl
hlt
xor
sub
jge
lods
dec
rcrb
inc
and
or
dec
int3
loopne
jae
or
push
adc
enter
add
rcll
pop
arpl
cmpsl
ficompl
pop
jp
dec
adc
es
mov
insb
ret
fisubrl
pop
rolb
pop
lods
clc
push
dec
pmaxsw
xchg
jbe
xchg
fwait
jno
cmpsl
sti
sub
and
rclb
test
mov
pop
push
repnz
into
sub
loope
xchg
dec
adc
je
icebp
aad
bound
jle
xchg
fldt
mov
pop
nop
mov
mov
mov
out
das
lock
out
repz
push
scas
adcb
cmp
cmc
in
loope
ljmp
hlt
icebp
into
inc
fisubl
sub
data16
xor
inc
mov
test
or
pop
sbb
mov
pop
pop
sahf
inc
cmp
bound
jl
cmp
xchg
lock
pmaxsw
push
fidivl
add
je
data16
pop
cs
dec
inc
clc
dec
icebp
in
aaa
mov
jne
jnp
ds
cmp
pop
enter
mov
fs
mov
jmp
pop
jbe
xchg
sbb
daa
repz
cmpsl
mov
in
jp
sub
push
mov
enterw
js
stos
xor
xchg
scas
loopne
cmp
pop
orl
xchg
pop
mov
aaa
popa
rclb
data16
xor
mov
gs
inc
sub
dec
mov
xchg
xchg
sar
xorb
jge
test
jae
in
stc
popf
cmc
push
loope
iret
dec
pop
mov
dec
cltd
mov
or
out
cmpsb
lret
outsb
mov
iret
pop
daa
pop
test
inc
in
inc
sbb
sbbb
je
aam
xorl
sti
or
movsb
je
or
ja
mov
mov
mov
or
sbb
mov
ljmp
sbb
sub
fwait
test
add
and
or
jns
mov
sti
lret
sbb
push
jle
dec
je
mov
cmp
hlt
std
pop
pop
sti
dec
movsb
add
inc
jnp
jo
jp
mov
sub
fimuls
adc
pop
jecxz
push
sub
pop
cmp
mov
cmpsl
lret
out
daa
pop
hlt
pop
jle
cmp
mov
sbb
sbb
scas
lahf
loopnew
mov
mov
mov
push
pop
movb
inc
shlb
and
cmpsb
stos
insb
sbbl
xor
fwait
push
adc
int3
jmp
jmp
js
sub
call
dec
mov
push
aas
jp
mov
jge
push
cmp
push
aaa
cltd
push
roll
xor
lea
dec
cmpl
cld
sub
dec
das
xchg
popa
adc
inc
xchg
test
or
push
or
fwait
jecxz
int
ret
test
pushf
xor
dec
test
mov
loopne
push
and
out
sarl
xchg
mov
push
dec
jg
lods
adc
outsb
repnz
mov
clc
and
lahf
add
add
mov
sti
icebp
jb
push
pop
pop
jmp
inc
repz
aaa
popa
je
cli
fs
sub
iret
cmp
orl
or
jl
mov
cmp
jl
xor
icebp
sbbb
or
sub
movsl
jbe
sbb
test
sbb
cli
push
mov
test
ds
sar
push
fsubl
ret
dec
mov
and
imull
jb
xor
cmp
call
lea
jecxz
data16
pop
inc
jb
pushf
stc
jmp
inc
in
adc
sbb
fs
push
insb
imul
pop
adc
xchg
pop
add
das
repz
pop
jo
pop
pop
mov
add
loope
fidivrl
ds
dec
shrb
jne
add
fwait
adc
out
dec
shll
pop
mov
jnp
jecxz
mov
adc
in
shll
out
popa
cs
movl
push
jne
inc
loop
cmp
out
mov
pop
add
push
and
or
test
bound
movhps
jae
neg
lcall
test
arpl
loopne
push
fimull
dec
mov
rorl
adc
mov
aad
adc
js
mov
jae
outsl
cli
xchg
test
fs
incl
out
adc
in
mov
lret
fidivs
adc
jnp
fbstp
and
xchg
pop
fcomps
js
sahf
fidivrl
mov
shrl
ds
lds
shlb
add
scas
popf
inc
or
xchg
mov
popl
sbb
sub
ja
je
out
lcall
cmp
fimull
adc
lahf
jmp
xlat
dec
in
lock
cmp
hlt
mov
in
or
mov
add
push
movsl
and
lret
or
sub
add
lock
sbb
jnp
inc
mov
in
mov
pop
mov
fimull
mov
js
pop
sub
xchg
cmp
add
or
daa
jg
or
jae
push
mov
das
mov
aaa
enter
hlt
jo
jmp
imul
pop
ret
movsb
int3
hlt
sub
cs
arpl
leave
dec
push
bound
out
sbb
sub
mov
mov
movsl
lock
xor
push
bound
add
mov
mulb
pop
ret
mov
lahf
mov
mov
arpl
lcall
repnz
mov
push
shll
ja
in
adc
imul
popa
add
push
pop
inc
xor
popa
mulb
mov
aam
cmp
int
cld
inc
push
loope
pop
dec
test
push
scas
loop
xlat
sub
roll
sahf
in
repnz
dec
xchg
xchg
faddl
sahf
popa
ret
in
shlb
into
cs
movsl
or
xor
daa
xchg
jecxz
cmp
jns
jno
out
add
add
inc
and
jmp
aam
cmp
ficoml
sahf
aaa
repz
cmc
jmp
sbb
lcall
jmp
cmp
xchg
inc
add
ret
movsl
cmp
outsl
enter
movsl
pop
dec
xchg
inc
es
dec
dec
sbb
clc
pusha
jb
cmpsl
dec
push
test
lds
movb
into
sbb
fs
popa
xchg
loopne
das
mov
inc
pop
repnz
jecxz
mov
clc
mov
mov
or
rol
jnp
mov
lods
xchg
push
pop
pop
jne
xchg
pop
imul
lret
mov
daa
scas
sbb
mov
jg
adc
ss
adc
jle
cmc
jge
and
movsl
jg
inc
add
xor
push
mov
xor
sahf
test
push
arpl
jmp
in
push
cmp
inc
push
inc
fs
or
loopne
adc
jo
int3
mov
sbb
sbb
in
mov
jnp
test
pop
bound
dec
out
pop
adc
aad
mov
mov
inc
cmp
cmp
jecxz
rcrb
pusha
mov
mov
lea
adc
ficompl
mov
ljmp
sbb
ljmp
cmp
out
dec
pushf
test
and
mov
dec
pusha
js
gs
xchg
jno
adc
push
lods
loope
push
xor
and
movsl
push
push
pop
aad
aas
clc
adc
lahf
ds
mov
pop
inc
push
mov
testb
adc
pop
mov
mov
test
push
push
fdivrl
hlt
and
hlt
loop
sub
cmc
lods
repz
int
and
fdivl
iret
daa
sbb
ret
out
xchg
sahf
iret
cmp
nop
pxor
pop
les
int
mov
xchg
sub
mov
xchg
add
pop
add
jae
out
pop
pop
call
clc
pop
mov
rcl
sahf
lret
jae
cmpsl
push
adc
loopne
dec
data16
outsb
sub
mov
arpl
push
out
sarb
jb
sub
inc
shrb
insl
rcrl
movsb
mov
jb
test
loopne
or
xor
xorl
pop
in
xor
or
repnz
js
jo
aam
fs
nop
jae
sarb
je
notb
outsl
push
mov
xorb
out
mov
lds
loopne
in
cs
sub
pop
xchg
xlat
stos
jno
adc
in
xor
andb
pop
jb
es
push
mov
mov
es
lock
cmp
sahf
enter
lods
mov
pop
mov
or
inc
jle
push
push
sub
jp
imul
dec
test
sbb
stos
pop
mov
jp
xlat
setnp
inc
fxrstor
jmp
lods
mov
sbb
push
dec
xor
pop
cvtpi2ps
mov
cltd
das
mov
pop
inc
dec
aas
mov
sub
pop
mov
stos
nop
jecxz
fmull
test
jno
nop
sarb
lahf
xor
shll
sub
jp
jge
outsb
popa
es
repz
mov
xor
loope
test
dec
popf
cmp
in
pusha
xlat
mov
rcll
inc
cmc
mov
mov
hlt
out
pop
pusha
mov
mov
push
sbb
int
sbb
inc
sub
cmp
loopne
xchg
sahf
pop
adc
lret
stos
jne
mov
ds
dec
adc
ror
movd
cmc
scas
mov
push
xchg
push
popa
pusha
data16
js
bound
sub
mov
sbb
fists
icebp
pop
cmp
aam
or
aad
inc
imul
mov
negb
sti
mov
inc
jl
fptan
fs
aam
jns
std
push
sub
add
inc
or
enter
stos
negl
jnp
add
pop
cmp
jb
outsl
lret
sbb
sbb
sub
shrl
mov
sbb
sub
jg
push
jne
jae
enter
aam
jle
loopne
fisubs
xchg
sbbb
mov
push
jbe
dec
mov
cmc
in
stos
mov
sbb
outsl
mov
mov
lcall
add
fs
rcrl
cwtl
fxtract
pushf
mov
lcall
fistpll
jl
pop
cmpsb
jp
add
fsin
test
popa
push
mov
mov
cs
aas
mov
outsl
jp
loopne
cmp
pop
adc
xorl
out
aaa
lcall
add
cmp
jb
fistl
popf
adc
pop
test
aas
jo
es
pop
push
aas
dec
es
out
sahf
cmpsl
inc
jns
or
cmpsb
mov
xor
pop
aas
aad
ret
ret
mov
cmp
mov
mov
ljmp
and
add
stos
add
out
mov
mov
rcpps
nop
inc
jmp
cmc
inc
add
mov
xchg
mov
data16
add
and
test
cli
out
xor
push
test
and
and
push
jle
pushw
jo
dec
sbb
aaa
adcb
inc
xor
push
mov
xchg
pop
push
xlat
out
mov
cmp
mov
cmpsl
out
xchg
inc
scas
and
stc
or
push
in
jle
jae
jns
cmp
mov
or
jo
loopne
and
rorb
mov
dec
in
mov
mov
push
jne
xchg
xchg
cmp
mov
push
push
mov
imul
xor
mov
hlt
pop
fbld
aad
xor
push
xor
mov
xchg
movsl
pop
fdivl
addb
sbb
in
movsl
hlt
jecxz
das
sbb
repnz
into
in
add
jne
lods
aas
push
inc
mov
pop
pop
into
std
fsubrl
jns
adc
pusha
lds
lds
or
loope
sub
ljmp
dec
sub
aaa
and
outsb
sbb
ja
lods
fildl
add
cli
xchg
fmuls
mov
aas
iret
sahf
mov
out
sub
call
pop
test
es
push
cmp
mov
mov
mov
outsl
mov
insl
adc
outsl
sub
sbb
mov
sbb
mov
adc
mov
fcmovnbe
stc
test
getsec
mov
xchg
outsl
xchg
aaa
pop
push
xchg
in
rcl
xor
dec
fdivrl
mov
int
xor
ret
test
cmp
jg
shrb
adc
into
out
lret
mov
notl
setge
daa
sub
add
int3
cmovb
sub
inc
adc
cltd
and
dec
out
repnz
adc
imul
std
mov
fldl
int3
push
mov
dec
sbbb
mov
adc
enter
jo
dec
stos
loop
dec
pop
pop
dec
aaa
jmp
outsb
je
test
mov
cmp
inc
and
push
pop
shl
outsb
and
sbb
mov
andb
inc
push
add
popa
sbb
adc
add
add
pop
add
add
loop
rcl
mov
xchg
jl
dec
jge
jno
mov
jns
movsb
aas
mov
loop
cmp
mov
fldl
cmp
or
jnp
cwtl
gs
mov
add
mov
and
mov
or
push
pop
mov
xchg
ja
test
mov
fistl
movsl
dec
cli
sbb
pop
jmp
push
mov
into
test
mov
out
into
mov
in
lock
enter
xchg
fstl
xchg
mov
and
jb
sub
dec
outsl
sbb
add
std
flds
andb
sbb
xchg
jl
fstpl
sbb
insb
bound
sbb
fdivrl
cmp
fpatan
out
sbb
sbbb
repz
dec
dec
repz
xchg
push
flds
lret
data16
jmp
and
jnp
aaa
lods
mov
ds
loopne
cmp
xchg
aad
push
hlt
test
mov
cmp
and
imul
ds
scas
movsl
inc
inc
pusha
inc
sub
pop
dec
and
xchg
pop
xor
repz
xor
aad
mov
inc
fidivrl
or
mov
test
pusha
shl
or
sbb
inc
pop
xlat
jmp
inc
xor
sub
cs
cmp
or
adc
es
adc
out
into
lret
movaps
lods
mov
and
xchg
lahf
cwtl
dec
div
sbb
mov
enter
mov
dec
add
jbe
cmpb
cmp
sahf
shlb
pop
xchg
enter
jmp
jbe
jle
and
push
xchg
aad
rorb
insl
push
pop
daa
out
lock
call
push
xor
cmp
fisubrl
test
dec
mov
adc
or
cmpsb
in
pop
test
mov
push
cli
sub
or
inc
mov
cltd
movsl
ljmp
fisttpll
cmc
nop
jae
xchg
mov
or
lock
test
or
outsb
lcall
daa
cltd
int
and
test
jns
inc
cld
jno
fst
xor
lret
dec
adc
or
pushf
fdivrs
adc
jle
lods
sub
pushf
mov
dec
and
sbb
leave
jns
dec
ja
jg
cld
cmpsb
sub
sub
jg
pop
dec
in
and
frstor
shr
les
mov
jne
pop
mov
fstl
pop
push
mov
xor
cmp
in
sbb
inc
aad
lock
or
dec
mov
push
inc
shll
je
fnsave
mov
hlt
jo
xchg
and
xchg
nop
sbb
ret
cmp
pop
das
enter
mov
mov
scas
jne
out
mov
gs
aad
lods
test
std
xchg
sahf
arpl
ficomps
int3
pop
xor
ret
push
add
inc
stos
push
call
mov
enter
sub
call
cli
xor
cmp
sti
daa
bound
movsb
push
jecxz
int
sub
in
and
dec
loope
int3
jl
pop
mov
fcomp
jnp
mov
call
out
loope
cltd
hlt
xchg
stos
and
and
inc
pop
xchg
sti
xchg
mov
mov
dec
cmp
mov
out
fcmovne
adc
mov
pop
sub
mov
outsl
aam
cltd
push
and
insl
and
test
fdivs
xchg
aad
pop
cmp
clc
das
out
inc
lock
pop
sub
dec
stc
je
adc
in
je
sbb
lods
xor
mov
lret
add
xchg
call
arpl
pop
loope
test
clc
int3
cmp
fistps
cld
daa
jno
pop
repnz
mov
xor
repnz
push
mov
nop
jg
cltd
lcall
testb
inc
xor
stc
jge
adc
xor
or
cmp
mov
int3
pop
mov
and
mov
add
xchg
movl
sbb
mov
stc
fmuls
inc
pop
jp
sbb
mov
mov
mov
popa
adc
popf
add
pop
jp
je
test
das
psubb
shrl
ret
mov
test
daa
lods
test
pushf
xor
lock
aas
xchg
movsb
es
cmpsl
in
out
sti
xchg
lods
pop
dec
stos
cmp
test
add
stos
jo
imul
mov
call
prefetch
cmp
sahf
xor
xchg
imul
sarl
add
mov
inc
rolb
jo
fs
sub
ja
inc
sbb
lods
sub
mov
jnp
jg
dec
in
js
outsl
aas
and
cld
cmp
not
rcrb
daa
cmpsl
in
pop
cmp
pop
out
sti
fwait
xchg
out
xchg
movb
enter
or
popf
or
ret
mov
mov
aaa
sub
dec
aad
or
nop
dec
mov
int
lea
mov
mov
test
int3
push
orb
mov
cmp
add
mov
repz
ret
pop
and
ds
and
pop
fildll
movsb
aad
or
push
jge
dec
je
xor
mov
jnp
jno
jg
aam
mov
sbb
fnstsw
mov
jl
sub
psadbw
mov
sub
je
jnp
shll
aam
adc
lea
int3
jo
xchg
xor
inc
enter
std
sbb
jne
es
in
lods
dec
cmp
push
aad
sbb
cmp
mov
mov
shlb
clc
cmp
test
pop
xchg
pop
jecxz
inc
cmp
movsl
test
icebp
adc
stc
cmpsl
pop
fstpl
fimull
int
mov
into
mov
inc
add
push
call
in
add
dec
scas
mov
or
insb
aaa
cmc
sub
ss
ss
ficoms
xor
cmc
das
and
xlat
aas
or
jno
lcall
nop
lock
push
fnsave
dec
int
push
stc
rorb
outsb
adc
cmp
test
or
mov
adc
into
push
dec
mov
sub
cmp
xchg
scas
mov
scas
xchg
cld
pop
pop
cmp
rorb
cmp
mov
aas
mov
xchg
xchg
cmpsl
aam
int
leave
cmp
shr
jb
mov
shll
jp
ljmp
push
push
stos
loope
jne
jbe
xchg
test
push
loope
out
repnz
push
or
jno
sub
inc
jbe
push
mov
push
jmp
inc
fisubl
xchg
cmp
es
inc
in
aaa
pop
ljmp
and
scas
in
cs
dec
ds
pop
rcll
js
cmp
or
pop
mov
xorb
push
jno
pop
pop
cltd
sub
lock
jbe
popa
xor
iret
stos
imul
stc
jmp
and
push
push
test
pop
push
add
iret
xor
jb
insb
xchg
xchg
ret
sub
add
fdivrl
pop
iret
jmp
imul
jmp
inc
nop
dec
push
out
mov
jl
jae
fld
dec
and
cmc
push
arpl
mov
cmp
pop
push
fdivrp
lock
fbld
jne
mov
jle
cmp
sbb
cmp
aas
pop
jbe
andb
mov
loopne
rol
jg
mov
outsl
add
and
adc
les
xor
pop
xlat
and
pop
in
aad
or
fdivrs
movsl
lcall
shl
lods
bound
cmp
aas
jmp
pop
in
pop
mov
jo
in
lret
and
add
rcrb
cmp
inc
cwtl
add
shrb
pop
enter
or
cmp
mov
jns
xorb
jo
mov
int3
cmp
js
cwtl
mov
ficoms
jns
cmp
loope
inc
in
and
xchg
mov
and
lret
mov
int
lahf
je
pop
sarl
mov
cmp
mov
shrl
testb
and
mov
mov
repz
jl
push
mov
jp
add
cmp
fisttpll
or
xchg
or
inc
inc
xchg
add
dec
cmp
or
xlat
mov
dec
dec
mov
mov
sub
ret
mov
test
mov
iret
cld
cltd
jb
cmp
imul
lods
push
jg
cmp
ret
std
outsl
xor
and
out
scas
popa
imul
adc
mov
movsb
test
data16
insb
fsubrs
and
lea
out
out
lods
sub
das
jl
cmp
mov
mov
cmp
xlat
pop
addl
cmpsb
aaa
loopne
push
inc
in
lods
sahf
fmuls
push
adc
sbbb
and
negl
adc
mov
imull
push
out
cmp
stos
mov
sbb
insl
adc
push
or
bound
mov
inc
jmp
and
add
outsl
ljmp
out
adc
mov
push
jne
bound
or
repz
jne
sbb
inc
out
pusha
pop
loop
push
out
xor
push
dec
pop
sbb
stos
movsb
dec
mov
mov
xor
in
cmp
xchg
mov
lods
fisttpl
sahf
std
ret
push
int
pusha
mov
cld
mov
add
mov
aam
lret
fsubrl
add
lahf
xchg
mov
outsl
in
mov
adc
jmp
mov
in
imul
fisttpl
jno
dec
out
jno
jb
push
sbb
addb
outsb
add
rcrb
incb
pop
inc
outsl
test
push
pop
into
xchg
jp
inc
rcrl
bound
out
ret
and
jno
sti
and
cmp
in
pop
cld
pop
xchg
mov
push
mov
mov
adc
sbb
lds
in
push
adc
mov
aad
xorb
pop
fdiv
dec
pop
cmc
icebp
mov
fcomp
dec
insb
icebp
icebp
les
adc
in
xor
pop
repnz
jno
std
pop
inc
dec
dec
mov
cltd
outsl
or
inc
ficompl
inc
lock
mov
ret
rcrl
out
shr
les
pop
add
sbb
and
jle
std
cmp
jmp
lock
loop
popf
or
inc
jle
in
lahf
lods
test
in
mov
es
mov
outsb
in
xor
hlt
adc
cmp
fldcw
ficompl
pop
rcll
jp
or
test
cmp
test
dec
sbb
add
lahf
gs
cltd
jno
iret
iret
int3
pop
pop
jg
xor
mov
out
lods
in
fwait
jmp
xchg
push
xor
inc
gs
or
test
jae
fwait
andl
fsubrs
xor
sar
daa
loope
rol
cmp
mov
adc
cmpsl
movsb
inc
js
push
bound
xlat
jmp
test
inc
orb
nop
cli
mov
je
mov
adc
sub
das
test
jp
fmulp
and
es
cmp
add
push
bound
sarb
sarl
jno
mov
rcrl
arpl
pop
push
div
add
xchg
ljmp
dec
inc
jg
cmp
ret
and
jnp
loopne
lcall
aaa
add
lods
ficoms
pusha
incb
pusha
xlat
pop
adc
clc
and
loope
scas
adcl
push
sbb
addr16
adc
dec
jge
cld
fmuls
mov
sbb
sub
sub
sti
add
xor
add
add
cmp
aaa
jae
or
fbstp
cmpsb
in
cmp
cmp
pop
inc
arpl
cli
adc
arpl
pop
mov
mov
mov
mov
fdivr
mov
adcb
ja
addr16
adc
jbe
cltd
xchg
mov
add
sbb
iret
hlt
negb
outsb
aad
xor
jnp
cmpsb
test
std
push
inc
add
pop
loope
sub
in
add
add
aaa
lock
xor
lahf
addb
stos
movsb
xor
xchg
push
dec
scas
outsl
jno
es
adc
sarb
jno
in
lahf
push
xor
imul
clc
mov
push
ss
div
xchg
pop
stos
outsl
es
jne
dec
xor
sbb
jl
iret
pop
cltd
stos
cmp
sti
adc
stos
xorl
imul
xchg
fldenv
ret
lods
es
jne
inc
aas
out
xchg
ror
adc
xchg
mov
push
sbb
repz
pop
leave
pop
add
ficoml
lock
lret
mov
cmp
clc
out
jo
mov
test
or
or
idivl
push
cmp
fucompp
je
xchg
dec
icebp
cs
lret
shl
jbe
mov
daa
inc
pop
adc
mov
adc
lods
mov
je
xchg
inc
mov
cli
xor
mov
sub
dec
ljmp
js
das
imul
fbld
mov
ds
int3
inc
data16
movsb
inc
shrl
mov
xchg
movsb
loope
loope
loopne
leave
mov
nop
jecxz
outsb
rorl
repnz
sahf
mov
dec
pop
sub
out
push
xchg
cs
pop
add
addb
and
push
xor
mov
cli
gs
fidivs
and
nop
mov
sbb
stos
fdivp
mov
rclb
xor
add
mov
inc
std
xchg
or
xchg
popf
adc
stc
sbb
adc
push
test
push
loop
movsl
sbb
cmp
repnz
fst
adc
jge
add
inc
out
sbbb
xchg
stc
mov
loope
lcall
xor
mov
scas
hlt
lods
imul
inc
jmp
mov
insl
ficomps
daa
shll
out
jnp
mov
aam
push
movsl
and
mov
sub
lods
into
jp
add
lcall
fisttps
mov
sbb
jp
xchg
shlb
push
icebp
das
cmpsl
sub
les
jmp
inc
pop
sbb
movsl
ss
mov
sbb
call
pushf
clc
loop
jl
sti
cs
popa
sahf
int3
pop
and
nop
cmp
adc
stos
pop
add
cmp
inc
or
sahf
xlat
xchg
fisubl
jno
loopne
lea
cmp
mov
xor
gs
lods
xchg
xchg
mov
add
add
add
push
push
mov
lds
push
xchg
adc
pop
xlat
mov
pop
dec
enter
sbb
pop
repz
sub
xchg
aas
sub
jp
pop
jo
mov
and
pop
xchg
mov
adc
fs
les
or
cmp
lock
xchg
jl
mov
cmc
das
xor
pop
test
popa
std
clc
jno
dec
push
cmp
pop
ret
hlt
rcrb
ds
pop
dec
imul
in
and
and
gs
ret
add
adc
push
jp
dec
lock
shr
ja
lock
push
add
xchg
lahf
arpl
xor
push
inc
xchg
jo
aad
dec
addb
movsb
inc
push
iret
ss
shlb
movb
neg
jmp
xor
stos
mov
inc
add
out
push
mov
lcall
or
mov
aad
imulb
add
mov
or
adc
push
addr16
sti
sarl
aam
mov
mov
jg
xchg
scas
ret
jns
inc
subb
iret
xor
lret
cmp
dec
add
xorb
sub
iret
dec
int
cmp
sub
xchg
lcall
xor
aad
stc
pop
xchg
jmp
cmc
inc
sbb
xchg
mov
pusha
pop
cmpb
imul
icebp
and
jns
rcrl
xchg
dec
call
fimull
inc
or
insb
or
int
mov
scas
xor
shll
imul
into
lcall
inc
jmp
scas
mov
jne
fst
mov
pop
sti
mov
adc
cli
or
fmuls
out
incb
fstl
out
clc
pushw
cs
jmp
mov
push
loop
adc
dec
xor
jb
xor
out
ss
filds
xor
pop
rclb
imul
xor
dec
xor
jg
cmp
xor
add
push
inc
adc
jns
xorb
jnp
dec
ficoml
mov
adc
mov
inc
inc
icebp
test
push
inc
stos
mov
stc
cmp
fisubl
push
push
pop
test
int
adc
mov
push
daa
inc
xchg
mov
xlat
mov
xchg
fsubr
push
lea
lods
pop
cmp
or
in
fimuls
xor
cmp
stc
inc
push
add
pop
test
insb
fildll
cltd
push
loopne
test
test
sub
mov
mov
repz
jp
rclb
pop
xor
pop
clc
jae
cmpsb
popf
or
cltd
lock
fdivs
mov
push
lea
or
data16
cmp
out
fidivrs
cmc
push
gs
sbb
es
jb
and
xor
ret
dec
dec
mov
sub
leave
into
sbb
push
and
movb
adcl
pop
fsubrl
mov
cltd
aam
mov
pop
mov
jo
mov
sbb
add
push
inc
and
sub
jp
mov
sbb
movsb
add
cmp
pusha
add
loope
jg
pop
shll
mov
lret
pushf
daa
lahf
jmp
sub
divb
ret
fstl
xchg
adcb
jno
stos
lret
insb
int3
ljmp
and
sahf
mov
mov
sbb
sub
test
push
xchg
jg
push
mov
aad
fs
push
data16
cmp
stos
sbb
mov
int
lds
fmull
loopne
scas
into
jg
or
movsl
rcl
popf
xchg
push
jmp
out
popf
sbb
sbb
sti
pop
add
pop
lcall
pop
sub
outsl
aaa
add
in
out
fwait
adc
in
iret
jae
leave
clc
push
insb
dec
pop
xchg
dec
std
pop
test
sbb
adc
mov
cmp
adc
popf
shll
jle
sbb
or
test
loope
sub
sbb
scas
aad
sub
movsb
or
gs
push
pop
out
inc
xchg
lds
jo
aaa
dec
addr16
xchg
pop
les
fs
mov
pop
out
adc
push
adc
imul
data16
jmp
adc
enter
faddl
sbb
mov
aas
outsb
insb
and
and
hlt
jnp
jae
pop
arpl
dec
cmp
and
movsl
mov
jg
arpl
mov
rorb
adc
mov
iret
into
pop
lds
sub
xor
in
sub
jp
sahf
imul
and
fildll
loope
gs
xchg
ret
sub
mov
std
inc
ret
int
sbb
rcrl
mov
xchg
std
nop
adc
test
mov
scas
shr
divl
xor
adc
clc
push
bswap
xchg
movsb
mov
push
jg
imul
cmp
jecxz
mov
add
or
loop
scas
js
mov
loope
xlat
lahf
cli
repnz
cmp
cmp
xchg
cs
add
sub
add
in
and
lcall
ret
adc
xchg
dec
js
adc
sub
lahf
add
clc
xor
les
ljmp
mov
mov
sbb
stc
out
mov
mov
and
cltd
sarb
add
inc
jmp
imul
insl
jnp
mov
sub
cmpsb
insl
pop
pop
push
mov
or
jbe
push
aas
pusha
xor
dec
jae
mov
in
xor
add
lahf
pop
xor
test
iret
pop
test
lock
cmp
dec
loope
push
mov
push
pop
les
jne
pop
and
push
aas
add
inc
cmp
mov
jmp
and
sub
push
mov
neg
fstpl
pushf
inc
push
sub
scas
and
in
or
mov
lods
je
push
fimuls
adc
int3
push
and
or
int
scas
mov
push
mov
mov
loopne
mov
or
add
pop
lcall
in
jo
cmp
cmp
jp
sbb
pushl
jmp
inc
ja
sahf
jnp
adc
lcall
mov
out
cmpsl
dec
stos
jle
adc
in
xchg
in
xor
imul
das
xchg
mov
or
lods
clc
call
dec
xchg
hlt
aad
mov
sub
jecxz
nop
aaa
clc
xchg
sub
mov
push
push
notb
dec
fldenv
hlt
shlb
fcomps
out
mov
cmpsb
cmpsl
jl
movsb
inc
pop
ret
daa
adc
mov
das
sub
lock
xor
mov
or
mov
adc
cld
aaa
dec
in
push
insl
out
dec
push
aam
repz
or
pop
and
out
into
or
in
insb
imul
cmp
fists
and
icebp
icebp
nop
pop
cmpsb
fildll
movsl
pminub
mov
push
mov
jecxz
mov
call
inc
leave
dec
xorb
pop
ljmp
cwtl
jmp
sub
or
bound
popf
and
adc
cmc
push
dec
push
or
lea
pop
or
enter
imul
dec
fsubp
push
jmp
push
lods
fiadds
push
nop
fstpt
pushf
pusha
arpl
dec
fnstenv
shrl
sub
inc
lea
test
or
push
add
mov
or
lea
push
loope
mov
mov
loopew
or
pop
sbb
push
call
popa
pop
mov
out
dec
imul
inc
push
sbb
lds
out
mov
roll
cmc
int
hlt
adc
mov
aas
inc
lret
pop
data16
test
gs
cmp
xlat
sbb
sbb
push
lret
inc
mov
xchg
pop
xchg
jecxz
push
jae
aam
sti
stos
icebp
scas
testb
mov
xchg
push
push
jbe
or
dec
mov
dec
lret
adc
xor
push
jns
mov
or
add
mov
adc
jp
dec
lods
hlt
jle
inc
jbe
fbld
sub
pushf
mov
rcrb
mov
pop
in
andl
out
mov
je
jnp
cld
rcrl
adc
xchg
xorl
mov
cmpsb
sbb
data16
bound
mov
cmpsl
cmpsl
fimuls
imul
sbb
test
add
cmp
push
and
mov
mov
dec
seto
push
sahf
jb
and
xor
pop
scas
and
ficomps
xor
push
jo
loop
nop
ja
lcall
push
dec
xchg
xor
mov
inc
add
push
das
push
lcall
dec
outsl
shll
push
stos
mov
mov
leave
push
addr16
sub
adc
aaa
mov
xchg
sub
cmpsl
xor
xchg
pop
stos
jno
jle
out
pushf
mov
mov
dec
xchg
lret
fdivr
lret
lret
mov
movsl
lret
xor
xchg
or
jae
stc
cltd
dec
mov
icebp
cld
fwait
arpl
pusha
popa
jmp
inc
cmpsb
out
es
sarl
fsubs
push
adc
out
mov
movsl
or
int
push
ss
sub
mov
sub
xor
mov
js
iret
xor
push
sub
add
pop
inc
dec
dec
ficompl
push
xor
add
loope
lret
insb
adc
movsb
pop
notb
xlat
xor
and
stos
fdivp
imul
jbe
test
pop
shll
arpl
pop
mov
mov
xor
adc
push
mov
mov
and
push
loop
jle
cld
cmpsb
or
stc
dec
hlt
cmpl
lret
pcmpgtw
scas
inc
in
sub
out
sub
mov
push
fisttpl
push
jmp
cmp
enter
sbb
mov
gs
xor
lods
dec
fisubl
push
lea
test
mov
mov
divb
leave
inc
das
inc
mov
inc
inc
imul
ret
shlb
bound
ficompl
cltd
sbb
mov
in
ss
xor
dec
addr16
repnz
arpl
cmp
mov
out
lret
xchg
push
test
adc
cmpsb
cmp
and
test
pop
dec
cmpsb
bound
outsl
cwtl
mov
pop
out
movsb
jbe
orb
test
mov
cli
fs
pop
jb
xor
mov
inc
jge
sub
adc
mov
cmp
in
cmpsl
mov
or
cmp
dec
push
mov
sbb
dec
sub
repnz
mov
mov
push
lock
xchg
scas
inc
icebp
jl
outsl
leave
stc
into
cmpsb
gs
mov
int3
dec
call
mov
push
xor
xor
xor
sub
ficomps
ljmp
and
jg
jbe
and
mov
cmc
mov
mov
shlb
mov
icebp
int
pop
imul
sbb
cmpsb
xorl
je
lahf
clc
stc
sbb
adc
dec
test
mov
sub
push
xor
ds
push
repz
data16
dec
dec
pop
xor
adc
and
push
leave
ja
inc
xor
dec
pop
pop
dec
push
int3
aaa
add
daa
les
mov
jmp
jle
jg
repnz
sub
xlat
stos
jns
push
scas
cmp
clc
mov
rcrl
or
mov
jb
xor
insb
sahf
push
mov
aas
cmp
lods
mov
push
iret
push
sbb
xor
push
adc
lret
and
xor
aad
dec
cmpsl
fdivs
add
insl
mov
mov
lods
pop
psubusw
ficompl
jno
outsb
jns
and
sahf
push
pop
mov
jle
add
rcl
or
push
push
and
imul
test
jbe
adc
or
cmp
hlt
mov
test
jae
hlt
ret
stc
out
push
jge
mov
push
and
jecxz
mov
stc
ret
scas
lcall
in
dec
cwtl
into
fisubrs
cmp
fmull
lcall
push
lahf
adcb
jge
mov
lods
mov
in
mov
dec
push
push
sbb
xor
sarb
insl
push
stos
cmpsl
test
add
add
cmp
jmp
daa
je
ljmp
dec
sub
cmp
lcall
push
jo
xchg
sti
mov
pop
fsubrs
or
xchg
ret
jl
jp
or
cli
bound
arpl
and
call
adc
repz
pop
pop
push
jge
inc
mov
idiv
add
push
sbb
or
lods
loopne
push
iret
inc
ficompl
inc
outsb
stc
repz
rorb
cwtl
xchg
jge
hlt
or
xor
dec
mov
pushf
mov
ljmp
pop
push
lods
inc
cmp
pop
enter
pop
mov
mov
lahf
adc
mov
xor
outsl
adc
test
repnz
stos
in
cld
and
pop
lret
ficoml
xor
xchg
inc
mov
mov
adc
cmpsl
cmp
iret
lahf
ljmp
fs
jns
in
stos
push
insl
les
in
cmp
iret
pop
pushf
loope
pop
fisttps
fmull
rep
mov
imul
sti
fistl
and
loope
repnz
adc
cwtl
dec
or
add
pop
or
in
inc
xchg
sub
mov
loop
out
lret
cwtl
dec
sarb
int3
pop
mov
iret
ds
jg
mov
lret
loop
xcrypt-ofb
cmpsl
imul
fwait
out
shll
aaa
inc
pop
mov
les
cld
test
lret
out
cld
scas
and
jno
inc
ds
inc
pop
aad
lret
inc
cwtl
xchg
lahf
jno
aas
imul
mov
jns
pop
push
sbb
push
lret
mov
stc
leave
push
fwait
push
lahf
jg
xor
sbb
loop
outsb
mov
cmp
aam
pop
jbe
fs
pop
mov
test
mov
scas
and
ret
push
and
fldt
cmp
lods
add
mov
or
push
int3
xchg
cs
repnz
daa
pushf
in
enter
shrb
sbb
movsl
test
addr16
ss
xor
adc
jae
inc
enter
push
or
and
sahf
mov
repz
xor
insl
and
mov
cmp
mov
inc
and
sbb
fimuls
addr16
pandn
mov
jg
dec
adc
js
inc
insl
mov
lahf
ja
cmc
sub
sbb
repz
adc
push
pop
stos
xor
and
mov
gs
push
jae
add
test
pop
push
arpl
sbb
inc
xchg
dec
inc
jnp
dec
aad
aam
repnz
inc
adcl
sub
daa
pusha
mov
loop
sub
or
pop
pop
jo
cld
jns
inc
aad
adc
mov
adc
roll
sub
pusha
mov
ljmp
outsb
aaa
fisubs
in
fs
cmc
pop
mov
add
push
cwtl
add
ja
cmp
pop
inc
int
xchg
lret
call
xchg
jecxz
add
inc
and
xchg
inc
subb
imul
rorb
fdivl
das
subl
dec
in
mov
push
int
push
lds
mov
lcall
insl
pushf
repnz
dec
cmp
push
sbbl
mov
mov
xchg
ljmp
cltd
dec
mov
outsl
out
add
xchg
cmpsl
and
or
mov
iret
mov
fs
push
pusha
xchg
jge
or
pop
out
jno
bound
dec
cmp
fistpl
jno
loop
leave
mov
xchg
outsb
hlt
inc
push
jno
imul
push
aaa
daa
dec
fnsave
iret
cmp
jne
push
dec
addr16
adc
loope
mov
in
outsb
xor
sbb
mov
lds
fildl
lahf
stc
lea
outsl
test
imul
adc
les
cmpsb
fidivl
jg
or
loop
inc
mov
mov
jle
add
add
push
data16
or
aas
cwtl
jge
mov
roll
js
js
dec
lcall
rcrl
sbb
jb
test
pop
sub
iret
fstl
rolb
lret
bound
addr16
lock
out
pop
jmp
and
push
add
push
adc
fs
ret
test
enter
movl
push
movsb
out
adc
loope
adc
jp
cmp
add
pop
jl
and
xchg
jle
dec
lret
popf
pop
ffree
jns
jl
jp
push
push
test
fwait
sbb
adc
enter
dec
push
pop
mov
sub
ljmp
push
fsubr
mov
lods
sub
popa
aas
xlat
and
out
mov
mov
ret
push
adc
jno
jnp
cmc
clc
das
mov
push
lret
and
enter
test
inc
mov
daa
inc
rcrb
lret
bound
cmpsb
xor
mov
add
ljmp
bound
out
jp
jp
js
cmp
mov
les
xchg
push
add
cmc
faddl
xor
addr16
xor
mov
jl
js
movsb
mov
stos
push
xchg
ds
cli
xlat
lods
jne
lahf
xor
cwtl
std
push
je
cs
mov
and
daa
xor
mov
sub
sbb
imul
mov
dec
testl
fwait
sbb
sbb
sub
stos
xor
mov
les
pushf
icebp
mov
pop
decb
mov
mov
sub
daa
sub
jle
and
push
add
inc
lret
mov
popa
lret
dec
dec
scas
inc
in
data16
adc
div
sub
ljmp
push
xor
sarl
cmpsl
jbe
push
push
iret
je
xor
les
mov
sub
push
push
lret
jbe
stc
xor
cmp
xor
mov
shlb
mov
dec
push
inc
dec
push
inc
or
iret
jle
mov
psrad
mov
and
mov
jo
mov
adc
mov
cmpsb
rorl
pop
xchg
shlb
mov
sti
mov
shl
xor
xor
sub
fdivrl
mov
mov
ss
into
sbb
lcall
or
mov
dec
test
mov
dec
mov
push
ljmp
mov
cwtl
pushf
scas
aam
enter
sahf
sbb
mov
pop
sahf
mull
jne
lock
inc
add
adc
mov
mov
movups
cli
or
inc
pusha
jg
or
dec
cmc
mov
adc
or
mov
add
je
and
or
sti
mov
cmp
cltd
pop
bound
cmp
outsb
push
sub
aas
mov
sub
dec
xchg
outsl
cmp
hlt
outsl
push
or
cmp
jnp
push
add
cmp
cmp
lcall
test
or
ljmp
push
lcall
into
fcoms
hlt
orb
addr16
mov
in
mov
xor
dec
js
out
mov
cmc
xor
loopne
sbb
int3
arpl
lret
jae
jno
insb
xchg
mov
push
data16
pop
loop
fidivl
pop
data16
popf
ret
jo
jle
add
mov
add
push
stos
and
or
mov
mov
pop
popa
or
add
fsubl
bound
xor
mov
adc
pop
or
inc
jmp
xchg
fmuls
mov
mov
push
xor
mov
xor
mov
insl
mov
pop
outsb
push
or
cmpsb
cmp
mov
xchg
mov
btr
dec
and
mov
call
stos
sarb
pop
add
pushf
movsl
das
in
push
adc
add
sti
int3
out
sbb
pop
out
ljmp
add
or
push
mov
and
adc
mov
push
or
push
sbb
inc
pop
xor
jns
lods
iret
jns
pop
xor
xchg
pop
mov
mov
int
enter
pop
xor
sahf
lret
xor
jp
cs
jecxz
jg
ljmp
xchg
jne
pop
xor
pop
in
push
es
xlat
out
movsb
movsl
sbb
and
xchg
aad
add
dec
cmpsl
inc
mov
in
push
imul
ds
mov
pop
push
dec
lods
xchg
sub
dec
cmpsb
ror
dec
fdivl
fsubrp
push
dec
es
pop
jmp
sbb
xchg
mov
mov
and
into
adc
pop
loop
sbb
enter
out
aaa
mov
les
in
out
je
jg
popa
orl
mov
xor
cld
lods
mov
in
jns
addl
nop
adc
pop
xchg
xlat
mov
nop
jle
loopne
xor
test
push
idivb
outsl
mull
mov
add
cmp
jge
mov
loopne
into
pusha
jmp
mov
enter
test
jecxz
push
bnd
sti
xchg
push
xor
es
adc
dec
mov
cltd
fisubrs
icebp
xchg
mov
cld
imul
hlt
fwait
shl
rcrb
nop
mov
jg
sbb
sub
fdivs
pop
je
cmc
cmp
movsb
xorb
leave
bound
lods
repnz
movsb
xchg
xchg
xor
ljmp
cmpsb
push
mov
outsl
sub
cltd
push
push
xchg
push
fwait
pop
or
push
leave
mov
dec
sub
inc
sub
inc
imul
test
mov
rolb
into
pop
int3
insb
mov
je
cmpsb
loopne
sub
mov
lret
push
and
pop
cmp
lock
ds
jo
cli
push
sbb
out
idivb
or
jl
xor
xlat
repz
fdivrl
loope
adc
pop
mov
push
xor
jmp
jnp
pop
addr16
mov
inc
jns
sarb
mov
repz
pop
addr16
cld
inc
rorl
ja
inc
imul
daa
dec
pop
push
cli
xor
and
push
pop
scas
sub
pusha
inc
cmp
nop
cli
mov
into
ds
mov
add
ljmp
out
adc
lahf
lea
int
loope
fisttpll
sar
shrb
mov
mov
or
popf
mov
dec
std
adc
push
push
push
sub
pop
idivl
xor
and
pop
xchg
jp
rolb
xchg
inc
stc
sbb
iret
push
andl
sbb
popf
adc
pop
loopne
popf
add
pop
push
into
cmp
fs
in
jb
inc
pop
mov
push
lea
cltd
and
lcall
dec
pusha
stc
mov
xor
scas
inc
aam
or
add
std
mov
jecxz
stos
jne
jecxz
imul
jo
xchg
call
jae
shrb
fsubr
loope
daa
clc
cmp
clc
or
jae
sub
adc
ss
push
int
movsb
pop
lahf
cmp
cmp
scas
xchg
sub
dec
cmpsl
movsb
bound
mov
cmp
sub
pop
adc
gs
dec
sub
cmp
lahf
out
popf
fcomip
xlat
adc
sub
xlat
xchg
adc
out
or
mov
lock
and
imul
or
inc
mov
xchg
lahf
mov
mov
sbb
iret
jne
cmp
dec
sbb
mov
gs
popf
xor
jb
out
inc
or
jle
popa
sub
out
fxch
stos
mov
push
push
bound
mov
inc
push
outsl
add
mov
cld
adc
add
cmp
imul
jno
mov
jno
mov
je
jmp
dec
pop
dec
out
xor
sub
in
jle
cld
adc
cmpsl
inc
mov
in
jmp
ficomps
lcall
test
lahf
in
push
daa
je
ret
mov
sbb
js
push
pop
daa
aas
fstpl
es
adc
sarl
xchg
add
jge
cmp
ficompl
mov
mov
jp
ja
push
adc
jp
loop
adc
cmp
xchg
jo
fstp
pop
push
stos
into
clc
inc
adc
cmpsl
pop
add
push
shr
mov
in
shll
je
add
arpl
mov
mov
jnp
arpl
pushf
test
je
inc
nop
cmpsb
sbb
jo
addl
jae
jmp
and
sbb
stc
jp
rcrb
and
adc
jge
fstps
mov
cmpsl
adc
repz
xor
dec
dec
rcrl
imul
push
roll
pop
xchg
jbe
cmp
leave
cmpsl
fucomip
inc
sbb
mov
in
ror
call
cmp
js
mov
jbe
stos
loope
jg
repnz
xor
xor
jo
out
mov
mov
mov
fcom
cmc
or
mov
sbb
testb
insl
std
out
adc
dec
out
pop
sub
incl
push
cmp
jp
pop
mov
add
xchg
mov
sub
ds
popf
xchg
jle
pop
jecxz
mov
inc
sub
stc
subb
fldz
fwait
lods
jmp
arpl
in
out
out
gs
pushf
and
xchg
test
jl
sbb
clc
xor
pop
fnstenv
inc
scas
outsl
push
cmp
inc
js
push
or
popa
push
add
push
jp
lea
pop
xor
lock
sbb
imul
test
ret
jmp
pop
in
inc
adc
cltd
adc
scas
pop
das
add
aad
mov
push
rsm
out
ss
lret
and
mov
mov
shll
outsb
sub
or
mov
scas
mov
sub
sbbl
hlt
out
push
xlat
mov
or
cmpsb
add
lods
push
dec
sti
inc
sbbb
fcmovu
inc
xor
outsb
mov
fsts
xchg
outsl
and
sbb
test
adc
add
test
sub
adc
cmpsl
pop
clc
cmpsb
inc
lods
seto
ss
or
mov
inc
mov
xor
mov
mov
jg,pn
mov
std
cmp
aam
out
push
sbb
jns
ss
sbb
aaa
testl
and
std
adc
pop
in
mov
fimull
fisubs
mov
sub
xor
es
pusha
ljmp
adc
push
push
decb
xchg
sub
sti
adc
stos
ret
adcb
shll
lods
jp
loop
push
adc
mov
jns
add
push
fsubrs
outsl
dec
test
mov
in
imul
xchg
fldt
xor
cmc
push
outsb
pop
jne
push
stos
pop
out
push
cmp
mov
add
sbb
call
and
pop
and
cmp
jb
cmpsb
push
pop
add
scas
sbb
mov
and
ret
inc
pop
inc
sub
scas
sbb
adc
push
mov
dec
sub
or
loopne
jge
lahf
sub
xchg
lahf
in
incl
add
mov
add
xchg
lcall
cld
out
fistpl
xorl
jg
sar
adc
push
sub
mul
movsb
lea
in
shrb
mov
add
test
jle
pop
pop
xlat
pop
push
xorb
push
or
les
lods
mov
fidivrl
test
xchg
insb
outsl
dec
jo
xchg
sbb
xchg
js
dec
push
push
cmp
dec
iret
bound
inc
cmpsl
push
mov
dec
push
dec
js
xchg
imul
push
inc
dec
or
push
outsb
mov
out
ss
dec
hlt
rcrb
aad
cmp
mov
mov
cwtl
xchg
inc
mov
mov
lods
ss
ja
pop
push
sti
sahf
js
dec
cmp
xchg
xchg
shlb
fisubl
arpl
add
mov
icebp
xchg
int3
mov
jnp
out
fucom
jge
test
mov
cltd
and
add
inc
mov
leave
cmpsl
fcoms
xor
mov
jnp
pushf
xor
jo
pop
fisubrl
pop
push
out
das
pop
mov
jmp
rcrb
hlt
cld
pop
sbb
daa
inc
mov
push
xchg
ret
scas
ss
sub
lods
and
pop
outsb
mov
rolb
popa
mov
cltd
adc
imul
pop
push
fsubrl
add
pop
mov
pop
sbb
sahf
rorl
mov
outsb
arpl
sbb
sbb
sbb
lcall
push
lods
mov
jmp
ret
clc
les
mov
pop
scas
pusha
push
jg
in
cmp
stos
cmc
inc
loop
insl
lret
dec
gs
sbb
stc
pusha
cmp
hlt
je
jmp
testl
adc
pop
imul
inc
fldl2e
repnz
test
add
sbb
jnp
dec
arpl
pushf
lret
enter
shl
test
repnz
fdivp
bound
jle
clc
push
adc
pop
rclb
mov
lods
hlt
cwtl
inc
stos
xor
sub
sbbl
inc
sbbl
ret
lock
xchg
hlt
inc
mov
stos
cmp
enter
xchg
pop
cmp
ljmp
aam
mov
ljmp
cmpsl
jmp
dec
push
rorb
xchg
xchg
cmp
sbb
stc
pusha
insl
fimuls
jbe
xlat
pop
in
adc
xchg
or
cmp
cmp
aaa
and
cmpsb
lods
sarb
ss
movsb
test
negb
pop
sbb
cmp
pop
pop
xchg
ljmp
cmp
outsl
and
xchg
aad
jnp
lods
out
aas
and
cmpsb
jb
andl
jno
cmpsl
mov
les
sub
call
sbb
sbb
sbb
or
mov
mov
cmc
fcomip
sub
xchg
mov
ljmp
xchg
fs
in
negl
movsb
dec
es
lea
jecxz
jl
push
call
inc
cmp
xor
or
outsb
push
dec
or
mov
add
cmp
decl
xchg
jns
loopne
insl
mov
or
cmp
dec
or
aam
dec
inc
jg
insl
xor
add
dec
ja
fldenv
out
jae
lcall
adc
mov
stos
pop
mov
xchg
or
inc
mov
add
movsb
mov
popa
test
hlt
pop
add
mov
jmp
lea
pop
pop
insl
cmp
dec
andl
push
out
aam
and
int
mov
popa
es
sti
jle
repz
xor
inc
xor
push
cltd
fcompl
repnz
pop
xchg
repz
in
addl
jae
add
insb
test
xchg
adc
jp
outsb
lahf
mov
movsl
je
ss
movsb
mov
sbb
enter
adc
in
or
test
cmpsl
and
les
xor
jl
jmp
sbb
arpl
test
push
repz
ljmp
popa
in
aad
sbb
jl
call
mov
clc
push
cmpl
xchg
iret
out
test
decl
cld
xor
cmp
aam
pop
das
outsb
stc
rorb
addr16
rorl
sbb
xorl
xchg
push
lret
test
xchg
mov
adc
push
inc
push
jge
and
les
dec
mov
in
push
inc
fidivs
stos
push
fldpi
pop
jns
adc
aam
iret
mov
jmp
clc
lods
out
xchg
ret
lods
cltd
pop
adc
adc
cltd
mov
xchg
lods
in
mov
std
cmpsb
ficoml
popa
int
cld
pop
xchg
into
ljmp
push
inc
inc
sub
scas
xor
xchg
adcl
inc
call
add
jns
jnp
or
addr16
andl
insb
popf
push
jne
adc
cmp
sub
sub
push
lcall
mov
dec
and
sub
dec
and
mov
out
push
pop
and
jns
xchg
scas
daa
add
adc
insl
sti
roll
popf
in
aaa
jnp
out
stos
jb
mov
enter
cmpsl
imul
lock
fldt
mov
dec
push
add
test
in
pop
icebp
mov
cmpsl
mov
pop
ret
xchg
bswap
jb
rcll
popf
imul
xchg
cmpl
jnp
xchg
pop
aaa
aaa
dec
jge
in
subb
outsl
xlat
inc
jle
or
xor
mov
dec
and
out
dec
loope
push
inc
cmp
rorb
imul
outsl
scas
jmp
pop
inc
je
out
push
inc
dec
jle
mov
pushf
cmp
jnp
lea
rcrl
repz
insl
enter
lahf
in
mov
sub
cwtl
xor
lock
sub
push
jmp
or
adc
movsl
call
rorl
xchg
pop
add
jno
mov
xchg
sub
pop
cltd
jmp
inc
stos
rorl
in
pop
mov
push
sub
push
inc
xchg
push
cmp
sahf
add
mov
int3
cmp
scas
or
jno
lea
xchg
loope
lds
jo
pop
repnz
jp
push
lods
mov
out
mov
xor
mov
xor
dec
shl
cmp
mull
pop
sti
movl
clc
popf
mov
ret
inc
loop
push
out
xor
adc
ljmp
cltd
out
gs
sbb
or
adc
shlb
call
push
xchg
ss
addr16
adc
lock
xor
inc
pop
and
stos
ret
ficomps
out
sbb
insl
pop
sub
imul
mov
jb
inc
cmp
or
inc
jp
mov
push
pop
enter
adc
push
lret
cmp
ja
jle,pn
ret
outsl
movsl
loopne
sbb
mov
mov
add
jecxz
jae
call
push
mov
xlat
sub
imul
sbb
mov
push
insb
scas
inc
ja
mov
imul
jnp
cmpsl
fstps
mov
cmp
imul
xchg
or
pop
jecxz
adc
xchg
add
sub
add
jp
jp
xchg
fcmovb
imul
fbld
fdivr
fnstcw
stos
outsl
leave
adc
push
daa
fidivrl
xor
daa
cmc
mov
inc
lret
loop
lea
pusha
add
sahf
ds
mov
daa
enter
add
xchg
pushf
inc
push
jae
cmp
jle
ljmp
mov
push
or
jg
mov
sub
stos
mov
fs
mov
jb
outsb
sbb
loope
jp
lods
add
movsl
lds
repz
inc
in
pusha
xchg
pop
cmpsl
imull
loope
fisubrs
xchg
pop
push
jae
inc
add
pop
aaa
adc
xor
aad
or
mov
clc
add
lahf
lds
bound
loop
push
jl
hlt
adc
inc
decb
sbb
mov
add
xchg
sub
inc
popf
jl
and
paddq
jno
in
push
mov
ret
mov
int3
xchg
int3
rcrl
jecxz
je
xchg
mov
in
insl
adc
ljmp
aaa
shrb
pop
lock
pop
mov
sbb
mov
imul
xchg
cmc
dec
enter
mov
jb
mov
pop
push
push
dec
rorb
ror
mov
imul
adc
pop
pop
lret
lret
inc
dec
je
enter
pop
add
jno
dec
int3
jno
mov
add
sbb
out
mov
mov
sahf
mov
pop
cmp
aam
mov
xor
and
adc
jnp
and
dec
dec
out
cld
int
mov
popf
fnstcw
out
xor
xor
aam
pop
ret
push
push
test
or
xchg
mov
imul
cmp
mov
repnz
sbb
hlt
jne
add
push
xlat
pop
or
or
xchg
ljmp
xor
in
rclb
loopne
cli
iret
sub
nop
je
es
add
stc
addr16
dec
dec
ret
fcoms
stos
or
or
stos
dec
xor
pop
and
and
add
loop
xchg
inc
outsb
adc
inc
fs
mov
out
jne
push
test
cmp
lahf
test
mov
sahf
cmp
clc
scas
xorb
std
loop
scas
dec
pushf
push
or
jnp
mov
push
mov
adc
shll
test
js
mov
cwtl
sarl
or
cmp
dec
cli
jl
mov
imul
loope
xchg
push
adc
clc
cmp
sub
loope
daa
xor
test
xlat
lret
mov
lock
mov
or
popa
add
add
mov
cmp
sbb
add
loope
icebp
jle
xor
inc
adc
mov
jmp
insl
int
adc
mov
jmp
aas
push
popf
dec
jl
or
jmp
mov
jb
jnp
popa
xchg
shr
jp
jmp
sarl
std
push
mov
fisttpl
adc
sub
cs
mov
or
xchg
repz
adc
loope
mov
cs
mov
imul
push
movb
xor
xchg
lods
test
inc
popa
dec
psrlw
pop
imul
test
cmp
gs
out
pop
out
mov
in
pop
xchg
scas
fdivrs
shll
jbe
xchg
push
or
pop
mov
xchg
push
orl
fmull
test
xchg
and
fmuls
and
fs
out
shlb
inc
pop
pusha
lret
es
and
imul
test
std
sti
mov
mov
jl
cmp
mov
xor
faddl
sahf
popf
sub
cs
lea
out
bound
cmp
movsb
fbstp
push
mov
mov
cmp
adcl
add
daa
push
mov
rorw
js
mov
adc
imul
jno
add
fcoml
dec
orl
mov
in
add
loop
sbb
cwtl
push
dec
repnz
std
and
mov
or
xor
xchg
or
add
ljmp
cli
bound
add
clc
data16
ret
pop
push
xor
pop
sbb
pusha
cmp
cmp
adc
and
push
and
xor
xor
and
xor
push
arpl
mov
ljmp
out
stc
cs
sbb
and
xor
add
nop
setp
mov
mov
pop
pop
mov
jae
jge
jle
cltd
bound
inc
cmpsl
and
adc
inc
sub
int
xchg
pop
jae
in
out
std
push
stos
pusha
and
rorl
jp
xor
cmp
dec
jmp
mov
push
mov
das
sub
stos
jg
jecxz
or
scas
jmp
push
xchg
adc
sub
push
jbe
sbb
mov
mov
and
sub
sbb
mov
lret
js
testl
inc
icebp
sbb
sub
sub
bswap
lods
pop
mov
mov
enter
int
in
mov
dec
cmpsl
fadds
xchg
aad
jmp
rcrl
jnp
std
sub
push
xchg
repz
imul
test
cmpsl
mov
js
sub
xchg
mov
xor
pop
lcall
je
fbstp
cltd
mov
das
popa
sub
mov
pop
dec
jnp
mov
inc
xchg
xchg
sbb
lods
fdivrl
jae
cmp
mov
nop
lahf
mov
sub
push
iret
enter
popa
add
push
inc
rcl
jno
arpl
sub
inc
sbb
inc
filds
popa
dec
shl
pushl
std
shll
and
mov
fnstsw
imul
cmp
mov
out
cwtl
mov
cmp
gs
imul
cmp
popf
inc
sub
adc
pop
fs
inc
loope
cmp
test
inc
es
out
sub
enter
pushf
scas
pop
sbb
fmuls
add
inc
movsb
in
sub
xor
sbb
jle
out
cmpsl
std
nop
add
adc
hlt
leave
xlat
out
sub
ljmp
xor
in
adcb
and
inc
mov
jb
icebp
adc
or
ljmp
outsl
adc
cltd
imul
mov
dec
mov
cmp
aaa
outsb
adc
icebp
xchg
dec
adc
movsl
stos
mov
mov
lds
inc
cli
xor
mov
jecxz
jle
loopne
pop
mov
and
and
leave
add
xchg
mov
cmp
jne
and
jecxz
aad
idiv
mov
push
sbb
or
dec
rcr
shll
cs
jbe,pt
or
out
leave
scas
cmpsl
push
test
stc
inc
push
icebp
js
push
mov
scas
pusha
cltd
shll
mov
push
sbb
xchg
adc
lock
clc
test
repz
into
popl
cmpsb
repnz
cmp
cwtl
jp
insb
xlat
add
out
mov
cmp
lods
jge
rcrb
add
mov
pop
std
ss
mov
or
in
test
test
cld
les
jle
idivl
adc
pop
push
mov
mov
imul
pop
cmp
add
xchg
mov
and
dec
jns
sarl
mov
cmp
imul
xchg
mov
rolb
dec
in
imul
jbe
push
cli
push
cmp
jb
pop
lock
fisubrs
cmpsl
popa
scas
mov
dec
push
mov
adc
lahf
imul
shll
fidivl
test
xor
mov
and
dec
mov
les
daa
fistps
enter
fldcw
es
imul
loop
stos
insl
xchg
popa
nop
fsubrl
lret
mov
jge
pop
jg
jle
lds
push
mov
or
lcall
mov
test
das
in
mov
xor
fst
push
insl
pop
test
cmc
add
mov
inc
xchg
jmp
hlt
out
or
sub
imul
ja
cltd
xor
int
sarb
push
jb
push
push
push
jl
cmp
pop
xchg
inc
enter
pop
scas
ret
int3
mov
outsb
mov
sub
test
es
sub
cmpsb
adc
pop
ss
add
mov
push
adc
pop
imulb
dec
sahf
mov
addl
testb
test
and
and
aam
xchg
and
es
cwtl
lret
or
add
dec
inc
sahf
lock
pcmpeqw
xchg
pop
cmp
pop
lods
in
outsb
sbb
sbb
nop
test
repz
dec
push
ss
jnp
sub
dec
add
dec
cmp
cmp
fst
and
dec
mov
xor
and
stos
shlb
scas
xchg
mov
jecxz
pop
mov
mov
les
xchg
scas
cmpsl
add
in
jge
ljmp
nop
jnp
aas
inc
adc
icebp
mov
in
scas
inc
leave
dec
scas
pop
cmpsl
cmc
enter
sti
pminsw
mov
jbe
cwtl
popa
bound
pop
adcl
fsubl
cmp
addr16
or
push
xchg
jge
in
in
sbb
shll
mov
loop
adc
jnp
adc
popf
mov
ds
mov
sbb
andl
lcall
add
jl
add
stos
xchg
mov
popa
sub
jmp
out
adc
pop
xchg
push
cltd
jp
or
xchg
js
mov
ds
or
push
in
ret
add
in
cltd
lds
imul
or
mov
sbb
lret
lret
push
es
ret
sub
sub
sub
lods
or
cmc
in
scas
jae,pn
test
sbb
dec
mov
push
mov
or
jecxz
xor
pushf
jp
xchg
sbb
addr16
pop
mov
mov
jne
cmp
mov
jg
adc
sub
mov
rcrl
mov
mov
stos
and
fwait
pop
loope
add
sbb
and
cmpsl
xchg
add
inc
xlat
push
sub
sub
outsb
sub
lock
ret
cmp
xor
xchg
jno
js
lods
mov
int
cmc
inc
sub
dec
scas
cmp
out
jge
pop
ss
in
repnz
adc
mov
cmp
jb
js
jp
and
mov
sub
iret
sub
fnstsw
jl
jmp
adc
mov
loop
lea
shlb
cmpsl
jg
aad
push
mov
dec
lret
pop
add
pop
pop
mov
out
xchg
lret
cmp
push
or
testb
pushf
mov
gs
mov
mov
or
jo
pushf
popf
outsb
dec
inc
cmpsl
sbb
cltd
rclb
test
outsl
bnd
cmpsl
adc
inc
inc
and
popa
or
sbb
fsubrl
inc
jge
out
in
push
mov
out
js
and
cmpsl
push
xchg
into
jp
xchg
dec
lret
xor
lcall
das
scas
test
push
dec
mov
enter
idivb
shrl
dec
sub
xchg
jmp
imul
call
mov
lahf
add
adc
fldcw
das
cld
gs
lret
mov
adc
ret
shl
insl
add
or
cld
xchg
test
fucomip
jl
and
ja
gs
push
addl
inc
stos
in
into
mov
call
shll
or
push
push
bound
pop
adc
push
dec
add
test
mov
lcall
xchg
pop
repz
mov
sbb
leave
sub
mov
js
loopne
insb
add
lods
or
aas
ds
xchg
aam
lcall
stos
cmp
fistl
mov
negl
dec
into
clc
xchg
jnp
xchg
jmp
push
cs
jbe
outsb
add
stos
add
punpckhbw
mov
mov
pop
sarl
int3
cmp
lds
pop
fldt
out
mov
cmp
mov
cmpsl
mov
cmp
xchg
add
push
sti
arpl
jno
dec
mov
movsl
jno
mov
inc
imul
cmp
in
enter
ror
out
mov
cltd
jg
xor
scas
xchg
pop
adc
xchg
jge
data16
rcl
lods
cmp
lds
and
in
andb
xorb
or
mov
add
and
and
push
cwtl
ret
clc
pushf
pop
cmpsl
nop
fnsave
adc
adc
scas
xacquire
in
in
je
jmp
inc
pop
xor
push
mov
lods
push
daa
adc
dec
out
jecxz
add
pusha
cmp
in
test
pop
or
push
mov
vmwrite
je
adc
and
xchg
shr
icebp
push
fiadds
fmull
mov
aad
rcrl
loope
cmpsb
mov
push
cmc
repz
mov
cwtl
cmpsl
movsl
inc
and
mov
xor
dec
inc
rcll
xchg
jle
scas
out
loope
pushf
mov
mov
js
into
mov
xor
loope
shlb
aaa
sbb
push
mov
shll
dec
or
xchg
push
jno
pop
int3
inc
js
cld
mov
pop
testb
add
out
cmpsl
cmc
popa
pop
or
jg
adc
cmp
lds
jmp
xor
cmp
jecxz
fs
add
adc
outsl
movsl
push
clc
or
and
pusha
test
faddp
nop
push
jge
add
cvtpi2ps
fldt
aaa
or
mov
and
enter
fcompl
fisttpll
out
jmp
jb
sbb
fists
dec
pop
daa
mov
pop
les
lock
or
jne
jae
clc
cmpsb
push
dec
mov
mov
adc
xchg
clc
dec
movsl
sub
dec
mov
pop
in
out
dec
mov
gs
negl
lcall
mov
adc
or
icebp
outsb
add
inc
jmp
add
xchg
nop
mov
lret
push
lock
or
jle
aam
sarl
mov
mov
and
sbb
mov
cmpsl
mov
fiaddl
mov
js
imul
xchg
scas
or
push
mov
mov
cwtl
ficoml
fwait
insb
hlt
inc
ds
lds
xor
sti
outsl
roll
clc
cmp
mov
ret
pop
push
in
fs
test
in
stos
test
mov
push
sbb
pop
int
loop
and
cmpsb
add
inc
loope
lret
bound
jne
fimull
mov
add
xchg
mov
sub
mov
test
stos
popa
imul
jno
push
enter
clc
xchg
int
or
ljmp
adc
sbb
cmc
cmp
or
jle
inc
call
loope
inc
hlt
mov
add
je
ja
jp
sub
cmc
in
out
dec
sub
mov
xchg
pop
loopne
cli
into
jae
fidivrl
stc
pusha
into
pushf
loope
outsb
mov
std
or
mov
ja
or
outsb
pop
jecxz
adc
add
add
in
cmp
loop
xor
cmp
test
dec
testb
adc
sub
sbb
push
fdivrs
shlb
pop
dec
dec
pop
icebp
add
xchg
sub
shrb
pmaddwd
pop
pop
cli
inc
incl
pop
mov
jnp
stos
mov
or
fbld
cmc
aas
fsubr
and
nop
loop
clc
pop
jp
mov
mov
sub
adc
jb
jnp
insb
mov
lahf
xchg
inc
andb
jbe
or
adc
sbb
hlt
shlb
fistpll
loopne
cmpsb
dec
push
pushf
imul
nop
mov
lods
xchg
and
jne
xchg
xchg
in
negb
lods
popf
mov
into
xchg
xchg
dec
loop
mov
int3
test
or
add
dec
xor
inc
jno
push
inc
push
sub
mov
das
jbe
pop
popl
aaa
cmp
repnz
xlat
sbb
insb
popf
and
in
pop
xchg
inc
lods
adc
lea
scas
mov
pop
xor
test
into
jge
clc
ret
clc
inc
dec
inc
jno
lea
aas
mov
inc
adc
cmpsl
mov
test
or
add
inc
mov
xchg
movsb
jge
sbb
xor
pop
inc
add
mov
dec
push
mov
cld
mov
dec
xor
xor
sub
sbb
arpl
mov
mov
and
rcr
outsl
pop
pop
in
push
fnstsw
adc
iret
mov
int3
jno
loopne
jae
mov
and
in
out
inc
sar
icebp
inc
mov
dec
cmp
sbb
popa
call
insl
sub
add
inc
mov
or
fs
mov
mov
push
xor
arpl
push
pop
cmp
add
push
mov
jle
add
xor
fisttpl
xchg
sbbb
inc
cmpsb
lea
iret
es
std
cmp
mov
cmp
je
xor
sub
lods
sahf
mov
test
push
lea
insb
aas
cmp
xchg
and
inc
add
shl
lods
flds
or
push
xchg
jecxz
jge
xor
fwait
add
scas
inc
sbb
rol
cmp
inc
mov
jge
xor
cmpsb
fiadds
call
push
adc
or
icebp
ja
es
mov
jae
popa
addb
and
dec
xchg
push
cmp
mov
call
ret
in
xor
mov
hlt
push
imul
sti
mov
test
push
xchg
loopne
in
scas
mov
frstor
mov
mov
pushf
test
repnz
shrl
dec
flds
repz
aad
pop
insb
in
arpl
lods
test
cld
mov
mov
jge
rcrb
inc
adc
jbe
inc
sti
mov
std
jg
sbb
imul
aad
hlt
jg
popa
je
addr16
cmp
lods
aaa
or
fidivl
scas
fsubrs
sbb
or
ds
loopne
ljmp
pop
imul
cli
pop
in
int3
stc
push
cld
insb
test
pop
inc
fnsave
mov
adc
scas
loopne
das
insl
adc
mov
push
test
in
xlat
xor
jmp
insb
imull
dec
pushf
test
jnp
fisubs
pop
lock
xchg
ret
repz
mov
jle
stos
popa
add
aam
push
andb
js
adc
bound
mov
mov
or
pop
dec
popf
cmpsb
cmp
jae
subl
jbe
or
fidivrl
dec
ret
cwtl
fs
push
pop
outsl
add
xchg
outsb
mov
das
jl
iret
lret
push
lock
cmpsl
cmpsb
and
mov
pop
pop
jns
out
ret
mov
or
mov
mov
cmpsb
js
adc
xchg
cmp
fwait
repnz
imul
daa
sbb
adcl
push
ret
or
xchg
cltd
mov
pop
lret
jnp
test
mov
cli
std
xchg
cmp
dec
loope
pop
or
or
mov
pop
popa
adc
sahf
das
cs
or
jae
popa
add
push
xor
in
add
adcl
pop
mov
pop
clc
out
test
jb
int3
sbb
xor
jge
mov
dec
or
sub
mov
insl
add
lea
outsb
jmp
jp
mov
ljmp
fbld
mov
xor
xchg
pop
lock
rcl
cmp
mov
inc
divl
cmp
repz
js
pop
cwtl
hlt
sub
adc
pop
mov
mov
xchg
mov
into
enter
xchg
or
mov
sbb
sbb
in
mov
mov
fwait
xor
les
jecxz
repz
mov
xchg
push
sahf
out
cli
xchg
negb
mov
sbb
mov
cmp
mov
or
adc
mov
fisttpll
jecxz
sbb
mov
lahf
stos
faddl
dec
mov
repz
cltd
or
mov
pop
xlat
enter
lds
sbb
push
jp
daa
xor
decl
ficoml
das
inc
jl
inc
ret
les
jge
out
imul
stos
movsb
push
das
int3
jbe
sub
leave
stos
xlat
ret
xor
pop
or
pop
pushf
in
jae
pop
cmp
inc
mov
sahf
lock
dec
adc
push
fists
sar
pop
inc
adc
dec
jg
rcrl
into
jmp
xchg
pop
sbb
jge
pop
pushf
and
mov
fldt
vmwrite
aas
int
mov
dec
shrb
mov
in
popf
lods
loop
aad
jae
leave
push
imul
pop
xchg
std
mov
bnd
insb
pop
fwait
jle
pop
mov
ftst
push
aas
outsb
mov
push
pop
xchg
fldt
pusha
jle
push
es
rcrb
cmp
repnz
jnp
subb
jle
inc
out
ret
sub
mov
adc
inc
cmc
mov
pop
lcall
jge
jb
mov
xor
mov
imul
dec
movsb
inc
mov
pop
lods
adc
cld
sbb
cwtl
arpl
xchg
shll
xchg
enter
clc
sbb
mov
in
xchg
xor
pop
or
cltd
fisttpl
adcl
sbb
cmp
out
add
aaa
cmpl
clc
xchg
ret
sub
and
dec
mov
mov
loope
push
in
lods
and
cs
push
repz
testb
mov
jbe
push
rolb
sbb
in
daa
les
arpl
arpl
cmp
jno
jo
xor
jmp
xor
loop
insb
mov
gs
and
fldt
push
std
pushf
pop
sahf
jne
ret
jp
repnz
loopne
push
mov
in
cmp
mov
sahf
or
in
popa
dec
push
push
popf
mov
imul
outsb
in
mov
nop
inc
mov
out
incl
daa
push
out
dec
stos
cld
in
mov
and
dec
xor
dec
jmp
sti
inc
xchg
rcrb
cmp
in
jb
push
negb
clc
das
jl
jg
fwait
jmp
cwtl
mov
add
jne
adc
cmp
mov
adc
mov
fs
adc
pop
dec
imul
imul
adcl
mov
push
jno
movsl
mov
data16
aad
fsubrs
loopne
les
imul
mov
and
shrb
adc
adc
cmp
je
outsb
clc
xchg
pusha
push
cmpsl
mov
add
jmp
ret
mov
dec
cmp
add
mov
lahf
sub
lahf
push
inc
fldt
clc
push
test
je
in
xchg
call
lret
test
maxps
aaa
mov
test
shll
out
rorb
imul
outsb
popf
push
call
mov
adc
out
cld
inc
lret
scas
and
sahf
idivb
call
sti
out
mov
sbb
arpl
pop
xchg
push
in
xchg
insb
lret
popa
push
inc
pop
lcall
mov
sbb
insl
jp
sbb
repnz
scas
lea
sarb
or
mov
outsl
out
cmp
das
and
or
mov
jg
adc
push
pop
clc
jns
jp
mov
int3
add
cmp
mov
mov
rorl
ret
push
xor
inc
pop
orl
faddl
pushf
mov
loopne
flds
lahf
scas
sub
call
fistpll
mov
mov
stos
fnsave
daa
pop
ficomps
loope
add
cmp
imul
jnp
or
cmp
lret
pop
push
ret
std
sbbb
pop
iret
data16
and
mov
inc
dec
jecxz
js
es
xchg
add
xchg
out
inc
lcall
mov
loopne
and
cmpsl
iret
jae
and
inc
aam
push
sub
fcomi
and
fisubs
sub
cs
xchg
jno
mov
cmc
test
nop
pop
insl
clc
rolb
fbstp
and
cmp
adc
jge
adc
ljmp
mov
lea
add
mov
dec
sbb
xor
scas
lods
inc
in
xchg
push
dec
pushf
and
ja
inc
fldenvs
fisttps
ret
sub
imul
out
ljmp
shlb
mov
dec
nop
jno
adc
ficoms
mov
cs
jmp
mov
cmp
pop
bound
les
lods
cmpb
xchg
or
xchg
lcall
mov
loopne
push
xor
cmpsl
sub
lods
xchg
movsl
or
inc
je
dec
rolb
fists
jle
cs
test
adc
fs
adc
sub
iret
push
mov
lods
daa
and
dec
aad
pop
cmp
mov
loope
arpl
call
dec
xor
test
cwtl
frstor
jnp
add
inc
stc
fisttpl
xchg
sahf
dec
hlt
imul
in
pop
lret
flds
aad
dec
inc
mov
sub
scas
insl
or
gs
cmp
pop
nop
lret
add
push
mov
js
cmpsb
mov
jle
push
cmp
cmc
pop
aam
push
dec
jae
adc
rcl
sub
xchg
imul
arpl
clc
fsubs
iret
xor
call
sbb
pop
jo
ja
push
movsb
outsl
lea
es
mov
jae
cmp
dec
in
icebp
inc
adc
or
sub
dec
jbe
xchg
ss
out
xbegin
popa
xchg
mov
push
push
pop
mov
jb
fidivs
jbe
out
sbb
loopne
mov
cmp
dec
jecxz
bound
jmp
and
push
idivb
adc
jbe
mov
add
insl
divl
xorl
jbe
pop
jge
movsb
push
dec
cmp
cmc
call
arpl
adc
mov
and
das
les
jo
loop
add
hlt
xlat
test
sub
fwait
jecxz
push
hlt
pop
jne
mov
pop
aaa
and
cmp
pop
push
sub
add
add
and
adc
in
negb
sbb
out
mov
xchg
fiaddl
in
cmp
jp
icebp
es
or
stos
pop
test
lret
or
pop
inc
sahf
mov
mov
xor
sbb
stos
add
pushf
cmp
hlt
mov
dec
es
xlat
test
push
shll
sbb
push
pop
xor
xor
daa
jbe
std
and
outsl
imul
jle
dec
out
dec
jl
lock
jne
cmpsb
pop
push
push
insb
xor
and
test
add
mov
mov
inc
push
add
idivl
cwtl
push
fiadds
loop
hlt
scas
fwait
cmp
mov
mov
movsl
pop
jle
push
out
and
int3
mov
test
inc
ja
dec
dec
jb
loop
cltd
adc
add
push
cmp
mov
xchg
mov
jl
sets
mov
cmp
arpl
xor
repz
mov
adc
mov
leave
mov
pop
imul
adc
jb
ljmp
xor
xchg
and
mov
jns
sbb
xor
scas
mov
fwait
jle
int
xor
dec
sbb
daa
pop
stos
insl
mov
mov
dec
aaa
outsl
xor
hlt
lahf
lcall
and
or
je
mov
pop
out
mov
cmpl
inc
push
xor
into
test
inc
mov
fdivl
sahf
adc
ljmp
jmp
xchg
add
sbb
xchg
sbb
aam
das
sub
outsb
jmp
sbb
jmp
or
jnp
shll
cli
inc
daa
xor
arpl
push
xchg
addr16
sbb
fdivr
fbld
sub
out
push
adc
fstpl
mov
mov
and
aas
lret
test
nop
cmp
jb
and
cltd
mov
hlt
hlt
jp
jp
xlat
and
cmpsl
lret
jecxz
fmull
mov
idiv
mov
xchg
and
xchg
or
adc
push
dec
add
pop
add
sarb
xor
pusha
dec
lret
pusha
pop
mov
stos
stc
pop
insb
xor
lcall
and
sub
mov
adc
aad
and
mov
jg
sbb
sahf
pop
push
nop
nop
mov
xor
out
adc
test
in
inc
mov
dec
and
mov
sbb
xchg
negb
xchg
adcb
inc
fldt
scas
push
jmp
push
out
lock
cmp
negl
xorb
repz
fbld
stos
not
sbb
dec
lret
rcll
mov
insl
xchg
mov
push
mov
ffree
cmpsl
fcomip
adc
pop
jns
or
call
ror
cltd
mov
push
repnz
or
push
add
jo
gs
fwait
xor
jecxz
sar
jmp
add
out
adc
call
inc
lods
ret
xchg
divb
mov
xor
jmp
pop
loope
jbe
inc
xor
lcall
dec
fnstenv
popa
dec
clc
arpl
cmp
mov
stos
push
leave
push
loopne
aaa
xchg
push
clc
pop
mov
sub
jecxz
or
repnz
dec
movl
outsl
loop
out
leave
adc
xor
xlat
push
pop
bound
stos
xchg
out
mul
sub
fldl
cmpsb
movsb
leave
or
bound
jae
mov
inc
pop
outsl
movsb
xchg
je
in
mov
popf
iret
xor
shrb
loopne
loopne
mov
and
scas
adc
mov
imul
testl
adc
add
push
std
addr16
gs
adc
mov
or
and
push
daa
push
stos
adc
shll
pop
lods
loopne
sbb
sub
add
jmp
in
mov
loop
not
pushf
inc
sub
pop
push
xchg
mov
push
mov
test
push
lock
mov
int3
lds
push
hlt
adc
aam
jp
cmp
dec
add
mov
in
xor
popf
mov
popf
jge
cmp
xor
test
loope
fisttps
fidivrl
push
pushf
scas
repnz
iret
enter
jmp
cwtl
bound
scas
gs
xor
xchg
jnp
xchg
pop
out
xor
adcb
in
fbstp
mov
or
pop
lea
hlt
sbb
popf
shrl
daa
jge
add
dec
jl
int3
push
xor
pop
lcall
jno
mov
ljmp
sbb
xlat
loope
jmp
loopne
sti
test
andb
shll
mov
mov
gs
clc
adc
jmp
daa
dec
jmp
push
sarb
mov
xor
jne
daa
jae
xchg
jl
sub
ds
mov
sub
lods
in
icebp
inc
cld
repz
mov
mov
nop
lea
aaa
push
out
scas
pop
and
repnz
or
or
cmp
fstl
mov
adc
mov
bound
iret
shl
movsb
pop
and
ljmp
popf
bound
cmp
divb
jne
aad
mov
movsl
inc
xor
or
dec
das
mov
repnz
xchg
sahf
fildll
mov
outsb
inc
xlat
mov
jno
shll
int
hlt
popa
icebp
push
cmpsb
pop
add
cld
sbb
pop
pop
jl
pop
roll
mov
and
jp
out
rcll
fmuls
icebp
xchg
dec
mov
sbb
out
sub
mov
cmp
fbstp
xchg
sbb
and
dec
xor
rcrl
push
insl
mov
ss
mov
and
insl
add
pop
fimuls
pop
mov
out
mov
sbb
loope
mov
loope
lock
sub
fldenv
shrl
je
data16
adc
les
ret
vphaddwq
outsl
outsw
frstor
cmp
mov
pop
sbb
push
adc
in
xor
add
loopne
jmp
lret
arpl
stc
mov
fistps
dec
cltd
sahf
cmpb
xorl
in
imul
rclb
and
shlw
addl
loopne
push
aas
movsb
leave
test
xchg
xchg
andl
push
lds
or
arpl
addr16
les
adc
out
stos
ss
fisttpl
shrb
out
and
addr16
jmp
nop
jb
popa
jge
shlb
je
outsb
jne
jecxz
adc
sti
or
sbb
pop
fbld
sbb
push
mov
dec
jmp
cmc
cmp
push
push
icebp
pusha
pop
inc
pop
jbe
out
jp
andb
sbb
mov
in
push
mov
jb
js
or
jb
push
jp
push
mov
ret
sub
and
jbe
aad
fildl
outsb
jecxz
pop
inc
fidivs
outsl
orl
mov
mov
test
fbstp
sub
popf
or
fmuls
cld
mov
dec
cmp
out
dec
hlt
inc
aaa
pop
mov
dec
les
mov
insl
int3
push
sub
ret
daa
pop
addr16
xor
scas
in
data16
js
mov
mov
enter
stos
adc
outsl
add
stc
jle
hlt
fnstsw
sbb
mov
mov
sahf
jo
cld
xchg
sbb
inc
jg
push
pop
ret
in
jnp
jecxz
mov
xor
xorl
inc
mov
shrl
adc
lods
mov
sub
and
daa
push
popa
rorb
adc
xorl
shll
sti
mov
in
mov
jne
iret
push
jno
push
repz
dec
enter
les
push
pop
rclb
mov
sbb
inc
mov
adc
push
jnp
lea
aas
pop
jecxz
add
jne
sahf
popa
push
and
inc
jg
jnp
or
jo
sahf
jns
inc
addr16
jp
cmp
and
fisttpll
and
lds
js
push
lock
out
lea
out
cmp
fs
test
inc
lods
or
xchg
cmpsb
test
mov
mov
gs
adc
loope
mov
pop
imul
pop
loope
scas
pop
pop
in
outsb
ds
sahf
adc
mov
mov
push
bound
ja
xor
xlat
lods
jo
push
lret
push
jmp
dec
movsl
add
cwtl
scas
jl
and
adc
xor
insb
ja
imul
adcb
lcall
mov
aas
sub
inc
imull
dec
addps
jge
xlat
jne
xor
movsl
jns
insb
stos
std
inc
mov
fisubl
mov
clc
imul
and
dec
mov
push
repz
lahf
xchg
pushl
testl
sahf
jl
mov
pop
pop
repz
cmp
pop
pop
repz
out
inc
pop
ja
adc
cld
aad
mov
frstor
out
lea
mov
add
fmuls
out
das
and
mov
and
and
xchg
out
mov
inc
sbb
xchg
arpl
dec
movsl
fstpl
mov
ret
fisubs
scas
arpl
push
imul
into
out
lods
flds
jp
dec
das
cs
lret
inc
rorl
dec
mov
fbstp
or
call
xchg
icebp
push
cmp
in
cld
adc
or
mov
push
lods
mov
ret
mov
xorl
cmp
aam
jp
sbb
sbb
aam
mov
inc
movsl
rcrb
xchg
adc
inc
add
sub
jge
lret
sbb
cmp
int3
adc
in
jns
into
scas
in
cmp
cmp
arpl
shl
lret
out
cmp
dec
xor
pusha
jl
test
pop
daa
cmc
ret
and
stos
and
loop
mov
insb
cwtl
test
out
addr16
mov
stos
add
outsl
lds
jno
mov
ljmp
push
sbb
test
lret
fs
hlt
dec
mov
gs
mov
mov
xchg
push
mov
lret
pop
xor
movsb
test
fbld
add
mov
jmp
cld
arpl
enter
xor
mov
jmp
push
insb
nop
inc
loop
pushf
fdivs
cwtl
cli
inc
jb
jae,pt
data16
adc
stos
and
in
ss
or
xor
out
sub
test
jo
or
in
out
adc
pop
mov
jne
mov
inc
popf
shll
push
rol
fldl
mov
cmp
push
dec
icebp
mov
mov
sub
es
dec
cmpsb
fwait
adc
fwait
mov
popl
jns
xchg
sets
jbe
negl
dec
xor
xchg
push
mov
sub
pop
cmpsl
lea
nop
mov
aaa
dec
mov
mov
ja
jecxz
shr
arpl
stc
pushf
lea
mov
ja
lea
adcb
sarb
aaa
lcall
push
outsb
es
repnz
mov
out
mov
push
dec
ljmp
ljmp
mov
lods
mov
mov
push
mov
inc
test
out
mov
je
add
gs
adc
lret
inc
push
popa
dec
add
aaa
jbe
cmpsl
test
mulb
or
mov
xchg
inc
xchg
gs
out
orb
xchg
pop
rorl
xchg
cmp
mov
sub
push
jns
jecxz
xlat
lods
cmp
jo
push
cmpsl
bound
push
pop
stos
xor
push
ljmp
cmp
sbb
xor
xchg
adc
mov
sub
mov
in
jo
stc
movl
out
cwtl
jb
xor
fs
cltd
mov
mov
push
jmp
testb
dec
shlb
xchg
adc
rdtsc
pop
jp
push
and
mov
hlt
orl
push
mov
mov
fcoms
push
stc
jne
loopne
jg
pop
push
cli
fwait
jp
addb
push
enter
loope
sbb
insb
ret
cmp
test
inc
pop
jbe
jge
dec
adc
and
sbb
sbb
cs
into
push
aas
mov
dec
adc
sbb
dec
test
push
cmp
pushl
sbb
sub
shlb
popf
pop
push
in
lods
adc
popa
icebp
xchg
add
call
in
outsl
outsb
jge
push
fwait
pusha
sub
jnp
mov
stc
repnz
loope
cmp
pop
stc
jg
add
sub
mov
sbb
cld
pop
jns
popa
call
add
sbb
mov
inc
inc
adcb
loopne
or
movsl
gs
adc
mov
jo
cmc
dec
in
inc
cmp
sahf
inc
subb
icebp
loop
or
int
xchg
roll
loop
pop
data16
xor
pop
dec
popf
je
fnstsw
sbb
test
std
dec
mov
pusha
jb
add
fsts
pop
inc
fimuls
jl
cld
cmpb
in
jae
adc
inc
xor
inc
jne
and
sub
mov
movsb
xlat
xor
sahf
cmpsb
xchg
out
jl
mov
notl
and
les
push
inc
sub
mov
out
adc
jmp
push
xchg
pop
fmuls
mov
fmuls
lds
out
bound
mov
push
stos
test
pop
shlb
or
cmc
inc
cmp
out
gs
mov
je
je
das
es
add
iret
cmp
add
imul
fsubl
mov
addr16
ficoms
gs
sub
pop
mov
cmp
pop
dec
fs
mov
sbb
jmp
in
jns
adc
addb
aaa
movsb
test
sub
outsb
push
sub
cli
sub
test
frstor
dec
mov
out
jecxz
sbb
push
push
pop
ljmp
in
and
div
stos
ja
popa
mov
nop
icebp
out
push
jno
xor
xchg
push
dec
lods
ljmp
scas
add
mov
adc
sbb
pop
cmpl
aas
fcmove
bsf
adc
pop
sbb
add
daa
or
adc
jo
sbb
push
gs
pop
scas
dec
inc
arpl
inc
leave
stc
mov
pop
jbe
pop
movsb
in
or
cmp
je
shll
pop
clc
mov
mov
mov
sbb
jge
stc
bound
push
jmp
ror
cmc
mov
cmpb
or
cld
icebp
push
cmp
xchg
mov
lret
out
nop
sbb
subl
xchg
movsb
insb
or
insl
adc
xchg
jno
call
and
push
jo
mov
cmp
jl
cld
inc
pop
adc
enter
scas
sbb
insb
pop
dec
test
pop
xchg
test
adc
xor
cltd
gs
push
bound
mov
and
sub
or
mov
lock
or
jge
mov
fisubrl
fs
or
mov
inc
sbb
loope
pop
jae
enter
into
xchg
ds
fisttps
iret
fldl
repnz
scas
xor
xlat
mov
inc
xchg
loop
jle
pop
pop
dec
jle
inc
add
repnz
mov
fdiv
inc
xchg
cwtl
sub
shlb
jmp
lds
ret
lcall
int3
test
pop
adc
test
pop
loop
js
lea
insl
filds
aaa
divl
mov
scas
pop
fisttpl
cwtl
dec
pop
push
sbb
lock
adc
or
pusha
popa
xor
xor
imul
lods
ret
clc
jge
xor
pop
sbb
pop
mov
shlb
dec
imul
mov
scas
arpl
sub
xor
adc
mov
cltd
pop
sbb
mov
fbld
in
add
leave
cmpl
pop
adc
xor
push
cmp
mov
mov
addr16
pop
mov
mov
adc
xchg
jno
loope
outsl
repz
sbb
and
sub
outsl
and
aad
in
add
rol
nop
pop
test
xor
lcall
and
xor
pop
jmp
in
push
or
outsb
bound
sbb
int3
mov
cmp
test
stos
xor
or
mov
or
and
mov
arpl
stos
repnz
mov
decl
movsb
movsb
dec
int3
mov
loope
sbb
out
cmpsl
cmp
frstor
cli
adc
aad
mov
add
fistpl
jge
dec
push
jle
into
xchg
mov
or
jo
mov
stc
push
arpl
xchg
cmpsl
rcrl
mov
jle
sbb
push
pop
fsubs
insl
inc
add
mov
pusha
push
shrb
lret
xchg
cmp
xchg
xor
adc
leave
lea
pop
add
sbbl
xlat
xchg
sub
shll
or
xchg
dec
add
xchg
cmp
mov
jp
test
movsl
push
adc
pop
or
cmp
call
add
dec
loop
repnz
ret
outsb
adc
sbbb
orb
or
pop
sbb
movl
js
pusha
sub
jl
scas
ret
ss
and
lds
sarl
imul
daa
cmp
and
xchg
fwait
cli
mov
xor
icebp
mov
out
push
or
pop
mov
fiadds
pop
call
xchg
lods
repnz
mov
add
in
pop
outsb
jp
shrb
fwait
outsl
add
push
cmp
sub
push
rcl
adc
call
push
mov
sbb
xchg
fstpt
imul
stos
xor
out
pop
jg
or
sahf
xor
gs
and
mov
xchg
sbb
dec
mov
xchg
and
mov
call
mov
adc
sar
cmpsb
pusha
lret
adc
outsb
pop
test
lock
pop
xchg
repz
aas
pop
pop
sub
cmpsl
bound
fisttpl
nop
mov
cli
sti
mov
sahf
gs
mov
popf
iret
cmp
clc
ss
sub
das
dec
mov
out
js
sbb
push
das
loop
fbld
mov
test
ss
push
jle
clc
iret
dec
adc
loop
std
sbb
jb
lret
adc
mov
ret
push
leave
dec
test
jg
cmc
cmp
in
stc
rcll
sahf
mov
loope
inc
mov
jmp
subb
shll
mov
sub
dec
hlt
mov
push
ja
jp
xor
pop
jnp
out
or
cmp
push
lods
test
adc
cwtl
jo
aas
cltd
xor
ret
mov
push
xchg
jge
rcrb
mov
ret
les
mov
lcall
jl
or
vpmovsxwd
xor
fucomip
or
test
sbb
mov
mov
jp
pop
push
jecxz
mov
fs
negb
outsl
int3
fnsave
pop
add
sub
lock
cmc
jo
jp
pusha
fcoml
enter
mov
orl
push
and
inc
pop
cmc
cmpb
out
popa
bound
test
pusha
cmp
push
sbb
cmpsl
dec
ss
int3
pusha
mov
pop
xorl
in
pusha
shr
adc
lcall
stos
cmpsl
shrl
xor
idivl
fildll
xchg
or
outsb
pop
pop
inc
test
add
cmp
mov
or
or
or
pop
out
mov
aam
outsb
fcomip
sub
push
inc
iret
push
inc
arpl
call
call
jno
test
or
ss
push
ja
cli
xchg
xchg
in
pop
jno
std
imul
and
or
inc
pop
mov
ret
js
add
in
pop
sbb
imul
idivb
scas
or
sub
daa
clc
mov
aaa
xchg
mov
xor
push
sahf
push
cli
test
mov
fwait
shrl
inc
loopne
scas
lods
hlt
aad
cli
sarl
psubb
scas
ds
std
test
icebp
addl
dec
cmp
sbb
inc
out
pop
inc
mov
jg
mov
cmpsl
shlb
je
push
dec
pop
mov
addr16
outsb
fwait
adc
or
repnz
out
pop
and
scas
test
fs
ror
nop
push
push
rorl
icebp
lods
sbb
leave
or
mov
cs
lcallw
cli
hlt
jne
push
xorl
sub
cmp
inc
lods
jge
ds
aas
and
dec
mov
fstps
iret
xchg
cmp
dec
cwtl
inc
fsubs
insl
pop
mov
shll
pop
xchg
push
mov
out
mov
mov
add
arpl
jg
cmp
movsl
aas
push
test
dec
addr16
adc
pop
xchg
jg
je
adc
call
mov
dec
stos
adc
ss
cmpsb
movsb
push
pop
jp
lret
es
and
pop
cs
mov
or
call
nop
mov
pushf
loopne
les
icebp
or
lea
mov
push
in
push
icebp
jbe
mov
mov
pop
sub
loop
stc
and
loopne
test
push
cmpsl
addr16
or
mov
inc
inc
and
notb
mov
enter
shll
push
leave
in
fidivrl
pop
lret
mov
loopne
pop
add
loop
inc
push
sub
lock
pop
ret
dec
jno
cld
scas
mov
sbb
and
insl
add
fs
mov
jg
jbe
push
mov
push
imul
mov
xchg
ss
decb
fcmovnbe
cmp
std
roll
sbb
lds
test
popf
jns
mov
mov
data16
ja
into
lret
or
mov
icebp
mov
xchg
aam
in
nop
xchg
push
out
gs
cmp
arpl
or
or
pop
shl
pop
dec
adc
sub
xlat
lret
cmp
cmp
push
push
or
hlt
mov
ret
ljmp
mov
fcoms
push
jle
xor
test
sub
mov
pop
mov
push
inc
xor
fsts
lret
jns
daa
adc
dec
xor
addr16
sahf
lret
mov
push
arpl
popf
cwtl
or
shlb
push
sar
sub
pop
roll
movsl
inc
loopne
enter
jns
bound
enter
hlt
xor
adc
or
insl
push
mov
je
shll
js
add
das
cli
pop
adc
pop
fiadds
jmp
test
inc
adc
movsb
insl
test
imul
lock
add
cli
add
jo
and
mov
out
cmpsb
jecxz
stc
clc
ffreep
mov
and
mov
inc
aas
add
mov
sar
or
popf
and
test
fdivl
add
popfw
or
mov
aad
mov
and
add
movsl
fwait
xor
out
mov
sahf
imul
sbb
or
xchg
mov
pop
in
in
xor
iret
imulb
mov
jg
inc
pop
mov
cli
inc
mov
mov
jae
push
std
push
xor
mov
test
jne
jge
inc
lret
bound
lahf
into
dec
xor
insb
scas
outsl
jns
and
ret
insb
cmp
push
fmul
ja
mov
lahf
or
ds
add
jbe
xor
js
jo
lret
inc
in
out
idivb
fisubrl
ficoms
cld
scas
scas
cmpsl
xor
pop
xor
pop
loopne
imul
mov
pextrw
mov
popf
push
inc
xor
mov
in
movsl
test
xchg
shlb
adc
lds
outsl
dec
aam
popf
orl
xchg
fsubl
inc
fidivrl
fst
movsb
into
jl
jp
xchg
cmp
dec
inc
and
jbe
cmp
jge
loope
cltd
mov
andb
popf
mov
fwait
fs
rclb
movsl
addr16
fadds
sbbb
js
int
outsb
aaa
or
mov
xchg
in
adc
not
cld
inc
inc
xchg
enter
outsb
scas
mov
xchg
mov
ljmp
jo
jbe
jno
loopne
int
jp
in
cli
add
mov
in
dec
fsubs
mov
dec
arpl
aad
pop
fucomip
push
xor
insl
icebp
mov
mov
out
dec
je
mov
call
mov
sbb
fdivs
inc
pop
shld
xchg
popf
imul
push
jae
into
lds
sbb
inc
jae
fistps
test
sti
repnz
std
sarl
lods
jge
push
lcall
mov
sti
sub
pop
add
xchg
es
stc
mov
ljmp
xor
mov
int
cmp
outsb
inc
in
push
push
loope
scas
push
sahf
jp
dec
and
daa
sub
mov
movsl
push
out
out
cwtl
dec
mov
jmp
cmpl
push
adc
pop
fcmovb
sbb
or
dec
notl
xor
and
ss
xor
leave
or
jle
push
jge
ds
cmc
fimuls
scas
or
inc
dec
sub
cmc
push
mov
and
and
xor
add
mov
mov
popf
and
out
pushf
jmp
pop
stc
cmpb
sahf
arpl
data16
in
or
movsb
shrl
and
xor
pop
scas
mov
dec
ja
inc
imul
adc
xor
insl
mov
ss
mov
bound
lahf
adc
or
add
pop
jnp
add
dec
push
push
loopne
xchg
mov
cmp
push
pop
adc
xchg
daa
and
jne
das
cmc
inc
inc
fwait
xlat
pop
insl
aas
push
mov
insw
add
ljmp
dec
mov
jns
and
push
scas
mov
cmp
xchg
adcl
and
outsl
xor
mov
push
insb
fsubs
mov
push
repnz
hlt
cmpsb
into
or
les
clc
add
mov
sti
mov
xor
xchg
sbb
sub
add
sub
ljmp
arpl
xor
test
dec
dec
sti
cmp
popa
mov
pushf
cs
mov
xchg
loope
std
aaa
popa
jb
scas
and
insl
jp
fnclex
mov
mov
je
mov
je
dec
inc
repz
cli
jmp
lds
and
hlt
imul
mov
push
xor
jl
fsub
lcall
or
sbb
push
je
loop
cmp
jmp
and
ljmp
push
jb
adc
push
sub
mov
out
ror
hlt
mov
cmc
movsb
mov
xchg
js
iret
jae
inc
or
dec
sbb
sub
add
repnz
lds
jecxz
mov
sar
test
xor
sub
cmpsb
push
dec
mov
xchg
fsts
xlat
inc
imul
sub
cmpsb
xor
jecxz
or
mov
sahf
insb
stc
imul
cmp
movsb
dec
sbb
pop
mov
and
push
sub
ficoml
mov
push
test
ffree
popa
dec
add
adc
mov
dec
fwait
in
inc
movsb
mov
mov
xchg
xchg
roll
fmull
out
adc
xchg
jnp
jnp
test
xor
inc
fnop
xchg
inc
jb
xlat
lcall
fisttpl
hlt
sarl
mov
aas
arpl
out
sub
cmp
push
call
and
jns
adc
arpl
ds
inc
inc
inc
inc
jae
imul
and
and
ret
dec
call
xor
insl
sbbb
cld
js
xchg
into
mov
add
pop
push
divl
cmc
sbb
je
sbb
fwait
iret
xchg
fcmovnb
inc
jp
jge
pop
dec
cld
sub
and
pusha
stos
pop
inc
in
loope
sti
test
inc
mov
mov
ret
mov
ljmp
pop
fstps
inc
cmp
xlat
enter
sbb
push
cmp
mov
lret
xor
pushf
in
repnz
mov
add
add
push
jl
xchg
lods
cwtl
push
sbb
out
xchg
sbb
neg
jmp
enter
pop
enter
stc
jns
jne
jle
scas
test
push
dec
aad
iret
dec
out
inc
mov
pop
dec
out
dec
rcll
lods
addr16
fs
aas
mov
sbb
lcall
dec
in
shl
lret
inc
pop
ret
xchg
ret
stos
xchg
fwait
adc
mov
cltd
in
mov
jmp
mov
and
stc
ja
cmp
ret
js
and
mov
icebp
mov
jo
stc
and
enter
mov
pop
push
sub
jl
xor
jle
adc
enter
push
imul
int3
daa
je
jle
mov
clc
mov
push
sahf
pop
mov
jecxz
fwait
mov
nop
test
ljmp
movl
ljmp
lahf
adc
sti
into
lcall
je
scas
inc
sbb
stc
iret
ds
pop
ds
jmp
mov
fldt
xchg
sbb
int3
shl
ret
rolb
aam
xchg
mov
test
mov
and
test
idivb
add
xor
jbe
imul
pop
out
pushf
std
ret
in
dec
jmp
ss
xor
and
push
outsb
inc
out
push
jae
clc
popa
dec
jae
ja
push
add
js
push
xchg
push
lea
inc
mulps
loopne
xor
or
out
lahf
push
push
test
arpl
cwtl
pop
jo
cmp
out
jg
pop
lea
mov
ja
jl
enter
cmp
ror
fnsave
imul
jmp
in
inc
repz
and
push
pushf
and
movsb
push
loopne
insl
das
sub
ds
neg
pop
pop
lret
lock
push
adc
mov
ds
enter
sub
jo
les
je
jle
push
scas
mov
mov
inc
fldenv
bound
sbb
dec
hlt
add
idivl
push
ja
call
gs
dec
xor
and
xor
enter
or
xchg
test
lret
int
jmp
jnp
xor
subl
mov
cmc
loop
mov
push
lahf
cmc
into
jmp
in
push
push
xchg
pop
sub
sidtl
xchg
mov
andl
push
sbb
pop
fdivs
mov
sbb
test
mov
ljmp
push
cmp
jae
ss
mov
and
lahf
mov
mov
adc
stc
lret
xchg
xchg
test
or
pushw
pop
xchg
sti
push
adc
repnz
push
in
xchg
xor
add
inc
mov
ret
mov
aaa
aas
iret
mov
bound
xor
test
fists
mov
inc
jge
dec
jno
ss
xchg
loope
jno
push
aam
repz
push
pop
sti
inc
push
push
pushf
ret
sbb
scas
cmpsl
inc
cmp
adc
stos
sbb
arpl
out
adc
ret
xor
pop
lea
dec
or
or
jecxz
adc
lds
cs
mov
gs
out
dec
sbb
lods
imul
aam
cltd
push
push
ret
imul
sbb
lea
fs
decb
jnp
pop
dec
aaa
jnp
push
or
xchg
cmp
movsb
cmp
inc
xchg
mov
arpl
and
inc
loopne
les
mov
in
out
rcrb
adc
lcall
jge
fsubrs
jmp
mov
adc
stc
movl
cmp
jbe
push
stc
es
sub
xchg
sub
imul
jno
sub
js
out
fistpll
jbe
out
and
icebp
movb
sbb
xchg
ds
xor
or
lahf
out
stc
dec
aas
les
fwait
sub
in
or
mov
fs
mov
in
repz
repz
add
out
jo
mov
add
mov
jecxz
insb
pop
ficomps
dec
mov
mov
push
mov
enter
push
inc
psubq
popa
mov
xchg
inc
sub
and
add
cltd
mov
ror
and
imul
mov
jmp
mov
lcall
sti
test
pop
pop
iret
das
or
inc
test
stos
jle
fwait
sarl
inc
xor
adc
or
scas
xchg
lret
pop
inc
scas
xchg
cli
fiaddl
inc
in
mov
mov
push
inc
jp
mov
mov
loopne
mov
adc
loope
inc
movsb
adc
test
sbb
mov
es
or
int
cmpsb
lahf
push
rolb
dec
inc
stos
mov
sub
dec
push
lods
test
sti
std
cmc
sbb
stos
xchg
or
mov
pop
sti
dec
cld
pop
ss
inc
test
es
pop
push
rorb
pop
cli
jb
das
lods
jmp
jle
or
xor
test
data16
sub
cltd
xor
loopne
subl
and
dec
xor
jle
xor
mov
push
pop
cmp
std
jg
mov
and
and
cli
sub
lret
mov
cltd
sbb
movsl
xor
sub
outsl
das
cld
ljmp
xlat
dec
fstps
pushf
repnz
imul
inc
or
cwtl
adc
fidivrs
std
dec
mov
cs
pop
mov
add
popf
scas
in
inc
adc
xorb
fiaddl
or
inc
pop
movsl
mov
clc
push
loop
jp
push
mov
cmpsb
dec
and
inc
mov
xchg
lahf
cmp
in
inc
pmaxsw
out
f2xm1
and
int3
jne
mov
mov
aaa
dec
pop
xor
xchg
push
scas
dec
bound
add
sub
ss
xchg
inc
rcrl
mov
pop
int3
outsl
pushf
sub
mov
lds
xchg
sbb
hlt
add
cmp
push
test
push
stc
dec
xchg
mov
jecxz
lds
stos
inc
cmp
shlb
adc
mov
fdivrp
icebp
pop
cmc
lcall
inc
cmc
stos
dec
aam
sbb
sub
xor
outsb
sbb
cmp
mov
add
push
jl
mov
xchg
adc
pop
jle
xchg
mov
adc
jp
adc
jge
sub
inc
push
ret
inc
mov
daa
out
mov
or
insb
mov
in
mov
lods
ret
test
dec
je
std
mov
test
jp
sub
or
pop
or
and
cmp
adc
pop
pop
xor
xchg
jge
sarl
dec
jle
jb
dec
scas
pop
cmp
lcall
mov
in
xchg
jecxz
inc
mov
cmpsb
sub
outsl
sub
or
mov
int3
jo
aaa
jle
neg
jmp
mov
and
xchg
shrl
jl
mov
mov
cmp
and
jnp
pop
sub
cmp
or
cmc
cmp
and
adc
lcall
and
pop
rcrl
dec
cltd
loopne
arpl
ss
int3
jmp
xchg
sbb
mov
shlb
lods
decl
stos
out
mov
inc
outsl
inc
insb
pop
loopne
xchg
std
inc
xor
jne
int3
pop
and
outsl
ljmp
inc
clc
clc
pop
movsb
xor
mov
xor
cmp
cmp
push
call
lods
loope
rclb
mov
xchg
and
xchg
and
cmp
cmp
loop
paddusw
adc
scas
outsb
adc
js
lods
cmpsb
mov
aaa
lods
mov
test
subb
fisttpll
sbb
mov
add
fstpt
stos
mov
mov
ss
mov
int
sbb
cmp
test
repnz
mov
aam
gs
pop
lahf
sbb
test
fisubrs
jne
daa
outsb
dec
pop
mov
xchg
sbb
sbb
inc
insl
mov
daa
and
icebp
mov
fistl
sbb
or
je
lret
cmp
fidivrs
cltd
sub
xor
mov
pop
xor
jge
jl
mov
adc
incl
dec
mov
xchg
pop
leave
daa
in
inc
or
dec
popa
or
sbb
xlat
push
popf
and
out
clc
aaa
adc
nop
ja
stos
push
test
mov
ds
sbb
mov
adc
outsl
fsubs
adc
jmp
sub
pop
sahf
push
jecxz
dec
jg
cmp
mov
xor
or
fcompl
popa
pop
aam
pop
xchg
mov
lea
loop
aas
xor
test
shlb
mov
sbb
pop
adc
sahf
push
pop
aaa
popa
xlat
pop
aad
cmp
or
xor
lahf
fidivrl
imul
pop
mov
je
repnz
mov
add
sub
fwait
jl
hlt
call
jecxz
or
scas
mov
psrlq
cltd
mov
test
lret
popa
cmc
pop
aas
lock
aas
xchg
and
mov
scas
cli
addr16
cwtl
sti
or
out
add
pop
jne
rclb
jo
inc
mov
mov
int
lcall
dec
jmp
cmc
jne
mov
sub
lahf
dec
mov
test
add
pop
push
sbb
mov
push
mov
xchg
xor
jl
sub
aam
push
cmp
mov
xchg
cmp
les
mov
sbb
mov
bound
mov
out
stos
pop
shrl
sub
das
aam
stc
adc
jnp
out
into
sbb
fsubrl
pop
add
out
data16
pop
fsubrs
or
push
aas
test
lret
sbb
test
mov
jns
sub
adc
lea
sbb
scas
lods
xchg
sub
mov
push
into
scas
jbe
add
xor
xchg
push
cmp
test
jbe
jns
adc
mov
dec
add
add
in
insl
nop
into
inc
repz
test
ljmp
jbe,pt
jne
adc
and
arpl
enter
mov
sub
and
sar
pop
scas
sub
mov
std
jae
inc
or
roll
in
pop
in
inc
mov
fcompl
sub
mov
sub
bound
xor
push
or
cmc
sbb
jo
cmp
mov
mov
shlb
jp
mov
adc
and
test
bound
pop
cmp
jo
stos
sub
cmp
jmp
aas
dec
mov
and
testl
packsswb
lea
mov
ss
or
fbstp
inc
push
outsl
jp
or
xor
sub
xchg
push
rorb
call
call
sbb
xlat
test
fldl
xchg
xchg
dec
mov
sbb
add
and
pusha
int3
push
sbb
lret
icebp
fsubrs
sbb
or
adc
push
out
and
xchg
daa
cmc
jno
pop
adc
testl
loope
cmp
jl
out
add
jmp
ja
cs
in
xor
and
or
rcll
mov
adc
imull
stc
sbb
add
sti
lock
xor
mov
mov
dec
add
mov
or
adc
and
addr16
into
cld
out
daa
fcoms
cmp
les
add
cmp
lahf
inc
stos
lahf
movsl
lahf
xchg
jo
adc
fs
adc
or
xchg
leave
cmp
jb
dec
or
mov
cltd
call
negl
movsb
xor
mov
xor
cwtl
das
imul
jae
pop
mov
mov
xor
xor
sahf
inc
add
dec
add
sbb
dec
pop
clc
jnp
inc
pusha
shl
xchg
push
cmp
shlb
aam
pusha
inc
std
sahf
mov
addb
mov
cmp
and
dec
jnp
jg
call
fsts
rorb
adc
in
xchg
js,pn
mov
xor
jno
and
pop
outsb
ret
mov
mov
mov
jnp
jmp
cmp
das
sub
inc
mov
popa
iret
inc
ja
adc
push
mov
cltd
sub
arpl
ljmp
dec
push
inc
jae
inc
pushf
mov
lock
int
push
cwtl
adc
movsb
sbb
repz
arpl
sbb
jecxz
cld
or
inc
xchg
andl
xor
xchg
mov
xchg
push
or
xchg
or
and
sbb
jne
js
ljmp
in
mov
pop
or
mov
push
incl
hlt
in
mov
xlat
or
das
cmc
scas
xchg
and
out
rcl
xor
fcmovu
inc
out
or
mov
es
into
sub
loope
fsubrl
mov
pop
shlb
nop
fmul
adc
das
pusha
mov
inc
lods
jnp
push
jns
pushf
pop
cs
adc
mov
inc
or
rcrb
in
jmp
popa
sbb
sbb
ds
sbb
nop
inc
notb
hlt
inc
call
loopne
je
fildll
ljmp
inc
loopne
mov
lods
xchg
out
cmp
test
daa
and
cmp
lods
pop
mov
push
fbld
add
mov
fld
xlat
addr16
mov
cmpsb
xchg
dec
insl
mov
mov
popa
xchg
testl
lods
int3
sbb
repz
jno
dec
xchg
out
clc
pop
mov
call
xchg
push
xchg
jnp
push
sub
add
mov
push
lock
xor
popa
iret
cmc
mov
mov
mov
call
ret
cmc
add
xor
sub
adc
dec
mov
fistps
jecxz
mov
insb
in
ds
jecxz
xor
mov
xchg
dec
ret
xchg
push
xchg
cmp
es
dec
push
je
fidivrs
and
xchg
hlt
sbb
fldt
data16
cmp
data16
addr16
mov
push
xor
aam
icebp
jbe
fisubs
jne
pop
call
orl
dec
fucomp
je
fwait
test
lods
sti
outsb
push
flds
addl
call
scas
cmp
and
cmpsb
iret
or
lea
jno
sbb
call
pushw
cs
sbb
sbb
fistps
aam
ja
pushf
push
call
sti
pusha
cmp
aam
and
lods
mov
decl
daa
pop
and
pop
stos
add
xlat
cli
push
lahf
in
dec
add
es
sub
dec
cmp
jne
out
add
lods
xchg
mov
pusha
mov
lds
cli
and
xchg
mov
clc
pop
add
divb
repz
popf
mov
cs
mov
sub
push
adc
outsl
and
jnp
push
cmc
sub
sarb
inc
leave
sub
adc
int
xchg
mov
pop
bound
add
lds
and
addr16
sub
sub
int3
mov
mov
pop
cmc
cld
stc
loopne
and
inc
movsl
jbe
into
xchg
lret
test
and
sub
sub
and
add
out
mov
pop
inc
sub
jp
jb
outsl
pop
fsubs
xchg
or
sti
xor
jo
test
mov
xor
mov
jle
fcmovnbe
or
pop
inc
repz
push
insb
xchg
aam
jle
sub
jno
sbb
xor
sbb
in
aaa
movsb
movsl
push
sti
jecxz
lods
stos
pop
incb
aad
sbb
xchg
test
adc
cmp
sbb
dec
jl
adc
adc
shlb
shlb
jno
mov
adc
inc
pop
sub
daa
mov
jmp
push
sbb
and
stos
in
or
mov
pop
arpl
pushf
jns
sbb
rol
in
push
xchg
inc
insl
aad
mov
cmpsb
ret
fidivrs
and
mov
push
pop
fisubrl
pop
mov
adc
cwtl
mov
imul
arpl
jmp
scas
and
test
dec
dec
loopne
sbb
cmpsb
dec
push
scas
sbb
addr16
mov
cmp
fldcw
lahf
xchg
adc
das
imul
cltd
push
popa
sbb
shrl
or
inc
ret
dec
xchg
lock
jns
mov
in
pop
iret
mov
adc
lret
mov
push
xor
cmp
xchg
inc
loop
arpl
fldenv
push
xor
dec
lods
dec
and
mov
fcoml
fs
xor
mov
jb
rol
aam
or
stos
js
in
scas
xlat
ss
sbb
pop
cmp
loop
or
lret
daa
dec
mov
scas
jns
jbe
and
clc
mov
std
jecxz
das
lds
inc
ss
xor
icebp
adc
dec
adc
pusha
int
popf
xor
inc
shrb
pop
xor
js
push
pusha
jecxz
pop
pushf
lret
fdivl
cmp
mov
stos
ss
mov
xchg
xor
mov
xchg
jbe
dec
push
jmp
push
mov
rorb
and
adc
lcall
imul
mov
jns
or
test
insl
and
lds
int
lret
outsb
data16
popa
push
int
fcmovu
out
aaa
lret
pop
pushf
aam
jmp
xchg
aad
pop
jp
dec
push
sub
xor
fistpll
in
stos
or
fadds
jno
inc
cmp
mov
sub
nop
mov
pop
cmp
xor
addb
mov
shrl
aas
popa
xchg
out
data16
mov
out
or
subl
mov
insl
call
sbb
sub
dec
and
scas
sbb
jb
dec
decb
imul
dec
or
mov
ret
test
movsb
jmp
sbb
stos
or
sahf
and
jne
iret
dec
and
out
or
cltd
leave
adc
sub
daa
sub
cli
inc
scas
fs
push
sbb
aaa
xchg
jbe
ficoml
js
es
fidivrs
shlb
popl
jb
stos
jmp
inc
movsb
xor
icebp
xchg
enter
pop
add
clc
rcrl
std
xor
sbb
and
testb
xor
or
pop
rclb
dec
xor
xchg
sahf
push
out
lret
ds
sbb
imul
jmp
xchg
nop
popf
popl
pop
into
xchg
pop
rorb
inc
sti
rcr
mov
xor
insb
cmc
push
iret
inc
dec
mov
jg
lods
jl
and
mov
jle
in
mov
pop
xor
lods
sbb
pop
mov
movsb
icebp
add
cmp
aaa
and
ja
push
ret
push
pop
push
loop
je
out
lods
shrl
sarb
mov
push
push
cmpsl
jnp
aam
mov
pop
ret
and
xchg
jnp
ror
xor
adc
jmp
pop
mov
mov
in
loop
pop
jns
aam
fwait
inc
cwtl
xlat
popa
sbb
sbb
ret
jno
out
mul
xchg
jne
outsb
and
add
std
stos
sub
aad
sub
jmp
jns
cmp
test
cmpl
iret
movsl
aad
inc
test
jle
mov
xor
call
pop
in
ljmp
jnp
add
jge
test
in
cld
ret
pop
roll
shrb
je
add
nop
lock
and
jge
jp
repz
xor
data16
xor
mov
sub
das
xor
lods
cld
add
aaa
xchg
loopne
rclb
dec
fadd
xor
les
repz
das
sub
mov
out
scas
xchg
push
xchg
out
icebp
xchg
push
cmp
loopne
jle
inc
lret
repz
dec
in
aaa
pop
popa
pop
pusha
fs
mov
adc
mov
stc
rcrb
pop
adc
xor
stc
out
fadd
insl
in
test
sahf
xchg
sti
mov
pop
xor
inc
adc
push
mov
lock
movsb
cmpl
dec
pop
xchg
jp
out
mov
lds
adc
xchg
stos
and
test
imul
and
and
xchg
adc
aas
inc
int
stc
jne
xor
xlat
aas
call
push
hlt
scas
std
sarl
sbb
shrb
xchg
jne
sbb
fisubs
movsl
lret
outsb
mov
in
imul
mov
stos
gs
movsb
dec
push
in
jae
je
testb
pop
enter
clc
or
sub
pop
sbb
push
sti
or
test
jecxz
sbb
fidivl
adc
jmp
mov
lcall
add
mov
push
repz
and
ss
stos
and
add
pusha
sub
dec
and
or
sub
push
test
lret
dec
stc
fisttpl
mov
out
pop
push
dec
icebp
scas
xchg
cmp
inc
popf
mov
dec
xor
stos
inc
pop
incb
enter
ror
pop
pop
pop
into
std
jae
and
jnp
mov
pop
lret
cld
mov
xchg
shlb
pushf
sbb
cmp
call
aam
lret
inc
mov
push
cmp
push
pop
imul
mov
pop
xchg
aam
movsb
mov
lods
in
jb
hlt
jae
inc
out
popf
test
xchg
outsl
ret
dec
or
stos
and
int3
mov
lds
ja
scas
mov
mov
pop
into
lods
ja
dec
andb
fwait
std
adc
adc
push
stos
cld
sti
test
pop
test
push
mov
mov
frstor
in
xor
pusha
cltd
jle
notl
add
sbb
dec
add
stos
lahf
and
cwtl
in
dec
les
jae
dec
loope
dec
and
or
dec
pusha
push
scas
sub
imul
inc
cmp
fiadds
mov
lods
push
shll
fistpl
inc
aaa
fcompl
ss
cmp
mov
in
pop
jae
repnz
scas
push
test
pushf
dec
mov
push
and
push
pop
pusha
mov
inc
xor
pop
adc
dec
es
pop
in
jb
insl
push
mov
dec
div
arpl
xchg
mov
mov
sub
notb
xchg
xor
mov
lock
ret
dec
sub
lea
cwtl
xchg
dec
adc
arpl
js
cmp
ret
jo
std
inc
or
movsb
fisttpll
rcrb
add
shll
fldl
or
fs
sbb
pop
fistpll
sbb
jne
dec
push
sub
ljmp
popf
jge
inc
xor
lock
addb
dec
lret
pop
inc
or
jmp
lret
cld
sbb
push
inc
stc
int3
fidivrl
out
pop
repz
push
rolb
mov
lds
mov
imulb
jle
adc
js
idivb
out
fwait
pmulhw
xchg
out
jo
xchg
bound
test
xchg
mov
xor
cwtl
mov
ja
dec
mov
gs
adc
pop
jmp
xor
outsb
rcrl
sbb
or
sbb
fwait
mov
xor
ja
divl
jbe
shll
pop
dec
adc
mov
lret
mov
cmp
add
das
inc
arpl
test
jp
jb
shlb
mov
mov
sub
jmp
cmpsb
cli
cmp
xor
jp
es
add
mov
cmpsb
pushf
xorl
test
lods
jmp
imul
push
data16
jle
pop
jl
pop
inc
sub
lods
lahf
enter
sbb
stos
mov
cmp
inc
ja
fisttpl
shl
ret
andl
push
and
movsb
dec
xlat
xor
mov
sub
inc
jl
add
insl
leave
fldt
add
mov
and
andl
mov
int3
popf
mov
xlat
data16
imul
nop
movsl
add
pop
imul
aam
ror
movsl
out
xchg
jo
dec
adc
inc
push
pop
fidivs
jae
adc
dec
sarb
mov
cmc
icebp
jns
sub
es
test
mov
aaa
mov
xor
inc
lret
popa
mov
cmpsb
icebp
xchg
pop
leave
jno
xchg
dec
sbb
xorl
push
pop
or
mov
aas
push
sarl
or
hlt
shr
outsb
add
xchg
fisubrs
pop
movsl
ucomiss
fiaddl
fwait
sub
sahf
in
adc
fcomi
push
dec
xchg
pop
gs
sarb
and
adc
lret
xor
cmpsb
out
pop
dec
add
mov
ror
jl
mov
daa
pushf
mov
and
test
mov
lcall
xchg
sbb
push
dec
push
cld
test
xchg
das
push
sub
mov
xchg
or
dec
fisttpll
fs
jl
add
dec
cmp
cmp
stos
jecxz
mov
adc
sub
xlat
adc
xor
imul
or
adc
cmc
sbb
push
xor
jnp
loope
stc
dec
sub
int
dec
sub
test
add
cmpsl
pusha
test
adc
push
jb
insl
jo
aam
cmp
sbb
xor
pushl
aaa
jno
cwtl
push
jl
push
xchg
inc
addr16
mov
cwtl
and
push
iret
cmp
sbb
popf
sbb
negl
stos
fisttps
clc
fisttps
sub
ljmp
add
and
and
pop
xchg
sbb
or
dec
filds
ds
jb
mov
sbb
and
into
add
xchg
jmp
aam
ljmp
xor
ss
sub
or
pop
outsb
pop
das
shll
xor
mov
aaa
cld
mov
repnz
std
jns
jb
dec
or
push
and
pop
mov
xchg
cltd
sbb
mov
mov
es
or
fadds
sub
loope
arpl
mov
jnp
cmpsb
push
scas
xor
push
sub
and
mov
mov
mov
pushf
outsb
xor
mov
aad
aaa
les
xchg
cmp
in
add
ficoms
pop
mov
mov
repz
xchg
pop
add
xchg
stos
inc
pop
add
sub
js
mov
xor
aaa
mov
pop
push
xor
mov
pusha
call
insb
incb
jno
mov
jno
fs
data16
push
lea
jo
jmp
aaa
roll
testl
fimull
enter
xchg
pop
mov
daa
sbb
fimull
cld
mov
add
sub
cli
jb
lock
jmp
and
and
add
ret
daa
and
or
jecxz
and
sahf
ret
in
cli
sbb
cmc
and
imul
push
mov
movsb
stos
inc
aaa
test
cmp
pop
adc
scas
mov
inc
jl
loop
mov
out
js
jl
mov
das
lret
cwtl
scas
js
xlat
dec
pop
mov
outsl
and
outsb
and
jp
mov
jmp
cmp
sti
gs
xor
add
sbb
out
orb
ja
and
ret
iret
stos
pop
pop
mov
sbbl
xor
adc
in
call
ljmp
add
dec
das
push
mov
mov
mov
pop
inc
and
test
pop
inc
mov
lret
inc
mov
and
insb
adc
pop
xchg
sub
clc
mov
js
rcll
in
dec
mov
dec
jg
lock
ds
stos
jecxz
test
or
mov
mov
hlt
lods
push
rcl
add
mov
mov
add
popa
pusha
mov
sarl
xchg
jns
lret
mov
cmpsl
fstpl
out
in
fst
xlat
sub
or
insb
ret
pop
aam
lea
fldcw
stc
int
cmc
or
sub
fwait
mov
cs
cmp
sbb
xchg
gs
jnp
jecxz
ret
popa
cmp
fnstenv
cmp
leave
mov
scas
ja
sbb
dec
ret
test
dec
rcr
pop
inc
out
aas
cs
pop
popf
test
hlt
cmp
push
jl
bound
je
icebp
mov
jns
shl
push
mov
incb
mov
out
fsubl
jb
xchg
cwtl
lds
insb
stos
cwtl
bound
imul
mov
movsl
xchg
push
mov
pop
ds
lahf
jo
and
popa
xor
shlb
add
xorl
mov
rcrb
shl
sub
rol
into
hlt
outsl
imul
add
movsb
lret
mov
cmc
mov
jae
and
push
outsl
pushf
jns
dec
mov
out
xchg
hlt
pop
in
sub
clc
xor
push
into
rcll
sti
and
mov
mov
fs
notl
data16
ds
push
pop
jecxz
push
arpl
fs
mov
inc
sub
mov
xchg
inc
and
insb
adc
roll
jge
xchg
mov
mov
subl
cmc
pop
pop
jge
xchg
std
jb
mov
push
lods
mov
daa
inc
addl
ljmp
mov
ljmp
das
scas
dec
cmpsb
add
lret
mov
cld
loop
mov
jbe
jmp
std
mov
push
dec
call
fcom
out
pop
push
shl
lcall
push
dec
xor
sub
aaa
ret
mov
xchg
imul
pop
rclb
push
push
ffreep
and
and
scas
xor
pop
or
adc
mov
or
adc
bound
xchg
mov
movsl
mov
repz
bound
movsb
xchg
and
and
pop
aam
call
push
mov
and
data16
sbb
fcoms
dec
jns
sbb
outsl
jle
add
push
sub
jbe
jbe
lods
sbb
movsl
pop
inc
std
fiaddl
push
mov
or
jmp
xchg
add
dec
xor
pop
xchg
mov
or
jle
inc
add
mov
leave
mov
popa
dec
lcall
mov
iret
pop
dec
inc
jnp
adc
dec
mov
push
mov
sbb
aam
mov
push
repnz
lret
shl
ljmp
cmp
xor
fidivs
mov
into
or
adc
and
jmp
cmpl
mov
push
xchg
jnp
scas
jl
dec
ds
cmp
ja
ret
sub
dec
ret
ljmp
arpl
rol
xchg
mov
pop
cltd
mov
es
jl
fwait
iret
incb
xorb
mov
je
cmpsb
push
out
popf
fstps
movsb
dec
or
push
or
cmp
fyl2x
ror
sbb
xchg
fbld
mov
stos
sub
fimull
jb
ja
sbb
scas
xchg
data16
sub
clc
mov
lds
mov
inc
lret
add
out
fsts
or
mov
std
mov
je
loope
fs
aas
shlb
dec
pop
pop
loop
jno
pop
or
loop
adc
dec
pop
clc
jge
sub
icebp
rol
fiadds
mov
fisubrl
pop
mov
fmuls
sub
xor
mov
cmp
cmp
mov
mov
add
popa
jns
rorb
inc
imul
std
shll
pop
mov
cmp
sbb
pop
dec
pop
cld
inc
je
xor
ss
sub
std
xchg
pop
fcoml
mov
fwait
dec
aas
adc
lock
test
aad
xchg
rcrl
push
fstl
jnp
and
adc
push
mov
out
repnz
cld
int3
xlat
dec
xor
xchg
inc
push
inc
jbe
imul
jp
jp
pusha
cmp
rcll
cmc
outsb
loope
ja
rcrb
dec
push
sub
lret
aam
fwait
fwait
mov
and
mov
dec
jae
minps
imul
pop
fbstp
jno
stc
sahf
loope
sub
dec
and
jae
mov
mov
movsb
outsb
lcall
push
pop
out
sbbb
xchg
pop
pop
push
adc
or
jle
insb
adc
bound
ja
outsl
pusha
fucompp
sahf
dec
cmp
imul
adc
mov
push
orl
add
hlt
pop
sbb
mov
xchg
repz
imul
add
sahf
ljmp
or
fiaddl
lcall
in
push
addb
mov
out
push
pop
xor
icebp
mov
or
shrl
fidivrs
stos
adc
test
fidivs
rclb
xor
push
aas
scas
xlat
inc
popf
js
mov
push
add
outsl
iret
lods
int3
outsl
push
sbb
pop
loopne
sti
pushf
inc
xor
jle
push
sub
daa
cmp
cmp
jo
jp
inc
sub
push
pop
and
movsb
loopne
in
inc
sub
xor
popf
dec
xchg
pop
arpl
xchg
push
lret
mov
jae
sbb
gs
jo
shll
and
fsubrl
sub
and
pop
fistps
insl
xor
inc
shr
adc
dec
xchg
mov
lret
jl
sbb
and
jle
sbbl
dec
push
mov
inc
jge
sbb
fiaddl
or
jns
mov
sbb
cmp
enter
sub
push
push
subb
dec
or
iret
pop
lahf
lret
fbstp
dec
dec
cli
lods
jg
call
cltd
arpl
sbb
movsb
xchg
push
inc
pop
in
xlat
jp
sub
test
loop
stos
out
mov
cmpsl
imul
stc
cmp
mov
cwtl
outsb
les
pop
stc
sbb
dec
dec
mov
cmp
stos
stc
ret
mov
sbb
fstl
mov
sub
inc
fucomp
arpl
es
test
mov
sbb
xchg
daa
jmp
fcomps
popf
mov
mov
inc
mov
mov
fwait
subb
mov
lods
mov
aas
lods
dec
push
dec
xchg
ja
repnz
testl
daa
cltd
mov
inc
inc
inc
mov
ret
stos
aas
pop
aaa
imul
shlb
sbb
jg
pusha
push
mov
pop
fdivr
add
push
into
sti
and
pop
ja
inc
dec
inc
jge
test
or
add
mov
sbb
cmpsb
sbb
jg
fistl
and
scas
pop
mov
mov
subl
mov
pop
jp
mov
mov
pop
js
imul
les
mov
into
scas
sbb
push
xchg
ja
imul
popa
test
jno
mov
shr
pusha
cmp
push
sub
sbb
fildl
mov
scas
push
ja
pop
jo
push
push
pop
test
les
lcall
leave
mov
jnp
fucomp
cmpsb
mov
bound
inc
mov
arpl
pop
cmp
mov
iret
daa
dec
in
mov
fcompl
aas
clc
jge
notl
pusha
mov
mov
sarl
in
sbb
testb
mov
out
adc
jne
fs
jmp
inc
push
push
int3
and
mov
loopne
testl
sub
je,pn
cmp
aas
cmp
mov
mov
in
xor
push
push
mov
negb
jnp
and
mov
adc
outsl
scas
push
out
ds
nop
pop
les
icebp
xchg
jo
div
popf
mov
jecxz
cmp
sarl
xchg
push
das
aaa
shr
pusha
popa
outsl
and
stos
call
icebp
jecxz
jg
pop
dec
pop
popa
add
pmaxub
loope
rorl
hlt
lock
jne
inc
jl
xchg
enter
or
js
out
into
jne
lret
pushf
mov
xor
xchg
cld
xor
cmpb
mov
lods
push
add
pop
test
daa
cmp
add
mov
sub
inc
cmc
sbb
int
popf
adc
adc
aam
aam
xchg
lret
cld
mov
add
insb
popf
in
xlat
ljmp
xchg
test
bound
sbbl
pop
inc
das
popa
ja
daa
cmp
add
inc
jge
lods
ret
mov
leave
sub
hlt
and
sahf
incl
sub
mov
ja
rcrl
aad
mov
pop
jbe
or
test
in
pop
mul
jae
lods
addr16
adc
push
int
int3
push
mov
call
add
int
sub
shrb
lods
jp
jo
repz
aas
mov
and
popf
push
and
jnp
xlat
add
das
jnp
cmp
pop
sti
imul
mov
cltd
xchg
sub
jl
jmp
lock
stc
fwait
ret
inc
addr16
pop
mov
inc
repnz
and
addr16
jg
mov
push
adc
scas
pop
pop
jge
dec
insl
jg
push
sbb
in
arpl
ficoms
cmp
cmp
enter
or
cmp
lret
cli
loopnew
cmp
fwait
mov
push
adc
stc
push
mov
lahf
daa
mov
aad
sub
leave
mov
sub
and
push
pop
clc
cs
dec
sbb
cmpsb
movsl
shl
xchg
jp
pop
jl
aam
add
mov
in
loop
jns
jb
adc
aaa
fisttpl
mov
jno
loopne
fcmovb
icebp
movntq
sub
cwtl
mov
lods
cmpsl
mov
sub
xchg
cmp
out
mov
adc
push
and
je
sub
mov
call
jmp
mov
out
sbb
shl
roll
dec
xchg
adc
test
nop
ljmp
ljmp
mov
scas
movl
pop
aad
ret
pop
xor
loopne
test
and
adc
out
mov
xlat
data16
sti
test
or
pop
roll
and
lea
icebp
rorb
outsl
mov
lret
lret
adc
or
push
mov
test
or
jmp
call
mov
pop
add
out
testb
inc
jbe
fdivrs
dec
outsl
scas
je
test
insb
out
faddp
xor
xor
inc
jge
mov
insl
imul
jecxz
inc
xor
int3
ret
out
cmp
push
fcmovbe
int3
loope
dec
and
xchg
jno
sbb
shll
js
sub
out
cmc
cwtl
divl
outsl
jl
test
nop
pop
cld
pop
or
shrl
mov
dec
add
mov
pop
pop
fisubl
pop
popf
mov
and
jne
push
cmc
sti
jl
stos
ret
in
push
jbe
inc
xchg
in
push
sub
dec
and
jo
mov
adc
scas
lret
mov
cli
ret
lds
dec
mov
sti
les
adc
aam
lea
into
loopne
sub
sbb
adc
mov
push
rcll
mov
sar
jo
mov
jle
loopne
hlt
adc
pop
lcall
iret
test
ficoms
xor
inc
movsb
fldl
jg
rorl
and
add
dec
xor
sub
lret
mov
pusha
std
adc
and
and
aam
into
fisttpll
fiadds
cmp
push
jns
mov
rcr
sbb
out
ljmp
jl
scas
push
xor
sbb
mov
lret
movsl
xchg
xor
or
mov
je
dec
imul
cmc
test
add
idivl
jns
loop
mov
int
jb
out
test
xchg
mov
out
sub
fsubrl
or
fdiv
inc
pop
bound
add
cli
ror
lea
ljmp
les
lahf
xor
xchg
std
dec
mov
sbb
in
scas
out
repz
pop
cs
lcall
or
pop
push
adc
mov
add
in
jno
jmp
into
outsw
cld
fistpl
leave
add
mov
push
lods
ljmp
adc
jnp
add
in
mov
pmullw
or
arpl
push
mov
sbbl
xchg
sbb
leave
sub
or
sub
xor
repz
dec
leave
subb
pop
xor
inc
inc
inc
insl
ret
mov
mov
inc
rcll
cmp
push
fcomps
daa
and
popf
cltd
in
mov
mov
scas
push
cwtl
push
sub
rcrl
jb
cmp
pop
in
icebp
fidivrs
fimuls
cmp
sbb
adc
push
imul
pop
pop
mov
push
mov
cmp
das
pop
arpl
pop
cmp
enter
mov
les
rol
pop
sti
lods
fs
aam
push
lods
push
pop
loop
pop
xlat
fiaddl
lret
insb
mov
shll
add
mov
lds
ja
shl
std
ficoms
fisubrl
xor
and
lahf
lock
ja
fstl
lds
test
loop
sub
loopne
jae
or
add
mov
mov
imulb
add
xchg
cmc
sbb
pop
fwait
popa
cmpl
sbb
cwtl
lea
fdiv
mov
mov
popa
push
jo
stc
test
pop
mov
add
sbb
mov
sbbl
adc
cmp
inc
push
jecxz
pop
or
fbstp
enter
adc
hlt
inc
xor
cmpsb
lret
xchg
mov
push
pop
cwtl
jne
int3
and
andb
addr16
sbb
mov
and
mov
negb
pop
or
inc
int3
or
pop
pop
and
lock
sbb
sbb
shll
push
mov
scas
push
push
sbb
jb
or
and
xor
jns
mov
push
mov
sbb
pop
int
leave
xchg
mov
cmp
or
stos
mov
adc
xor
out
cmp
in
push
or
adc
mov
jo
and
fstpl
jp
adc
push
aam
sbb
pop
add
adc
enter
pop
ja
rcl
pusha
xor
mov
mov
insl
jnp
jecxz
call
pop
cld
mov
xor
pop
pop
leave
and
call
test
sub
xchg
flds
dec
xchg
inc
dec
clc
out
sub
add
popf
lcall
or
insb
in
xlat
xor
inc
leave
imul
push
mov
cmp
cli
sbb
rcl
das
mov
sbb
scas
pop
add
int3
pop
in
inc
jno
mov
adc
jmp
push
push
add
lcall
inc
jg
popl
jle
leave
push
pop
inc
mov
sbb
imul
sbb
aam
jg
and
inc
and
scas
das
scas
movlps
jmp
inc
pop
les
leave
dec
inc
inc
psrlw
mov
push
in
push
lods
sbb
iret
stos
dec
rorb
jmp
add
and
arpl
mov
rolb
sbbb
pop
cmpl
push
push
and
ret
shl
pushf
mov
lcall
insl
jae
mov
adc
sub
popf
rclb
int
ret
pop
jp
pop
es
or
out
cwtl
int
lock
das
mov
popa
fwait
in
scas
or
and
add
jmp
icebp
orb
push
jnp
mov
int
sbb
xchg
jmp
test
push
popf
push
test
pop
pop
imul
cli
icebp
stos
adc
adc
mov
into
inc
js
stos
bound
addl
cs
cld
loop
cltd
cmp
inc
inc
fldt
mov
pop
add
and
pop
in
test
and
xlat
fs
pop
inc
fcmovnu
cmp
dec
popa
push
jo
or
pop
out
fbld
fcoml
out
mov
xor
inc
bound
cld
xchg
mov
ss
adc
pop
lods
dec
jp
stc
das
stc
cli
inc
out
pusha
rcrl
mov
jb
insb
inc
arpl
mov
dec
lods
lock
jecxz
xchg
popa
lahf
mov
dec
mov
xrelease
and
pop
or
mov
mov
add
mov
sub
call
int
sbb
mov
test
mov
jae
jl
xchg
iret
add
repz
pop
ret
sbbb
sub
xor
mov
insl
add
popa
fxch
pop
fs
cmp
int3
mov
mov
leave
xchg
mov
nop
js
cld
lods
aam
cli
into
pop
cltd
fistpll
xchg
nop
outsb
mov
aaa
cmp
test
mov
add
ja
jg
xor
fsts
xchg
clc
negb
and
and
cltd
sbb
jae
into
adc
sub
int
adc
adc
adc
sub
aas
mov
fcoml
gs
add
std
scas
sbbb
fcmovbe
lea
repz
bnd
jae
mov
mov
sub
cs
out
add
pop
popa
mov
sahf
add
in
mov
sbb
lea
lds
jmp
xor
inc
test
inc
pushf
ret
je
pop
les
mov
int
xor
dec
shll
inc
pop
pop
lods
pop
sub
push
inc
cld
cmp
pop
lods
add
jmp
inc
push
and
push
in
push
data16
dec
or
fbstp
mov
dec
xor
push
cmpl
and
stos
dec
push
cld
out
daa
cmpl
or
xchg
sbb
mov
dec
ret
add
pop
xchg
pop
jmp
adc
lods
imul
enter
push
cli
andl
cmpsl
and
jmp
and
xchg
lcall
xor
cwtl
bound
aam
dec
addr16
push
pop
or
cmpsb
iret
scas
cmp
sub
stos
outsb
jno
mov
imul
rorb
lret
xchg
mov
sbb
outsl
lcall
lcall
test
les
out
dec
mov
cmp
cli
test
aaa
mov
jae
pop
dec
ljmp
mov
pop
push
add
test
add
ret
and
mov
inc
shlb
ret
cmp
faddp
out
mov
inc
orb
mov
cltd
mov
out
or
sbb
push
sbb
test
cmpsb
cmp
rcr
icebp
jbe
outsb
hlt
adc
mov
fwait
inc
pop
out
lock
adc
sarl
xor
out
and
stos
clc
dec
loop
mov
pop
scas
fstps
movsb
icebp
pusha
pop
adc
or
push
in
movsb
or
dec
imul
aas
outsw
mov
enter
push
in
jns
push
in
xchg
ja
in
sbb
cld
and
sahf
shlb
mov
orb
dec
jae
movsb
cli
les
outsl
mov
pop
movsl
subb
and
mov
ret
insb
add
jae
push
fmull
ret
test
mov
jae
fstp
lret
and
inc
jmp
mov
andb
or
pop
mov
push
addl
mov
mov
subl
sti
and
test
mov
stos
xchg
out
xchg
aad
lcall
addr16
sub
pop
add
test
jbe
outsl
xor
jne
int
mov
lret
daa
mov
test
enter
jle
outsl
jo
push
jge
aad
and
inc
scas
push
or
xchg
xchg
mov
loop
iret
pusha
pop
ds
and
popf
scas
xchg
xchg
pop
jle
insb
repnz
clc
mov
lret
fdivs
les
push
mov
inc
mov
mov
mov
bswap
xor
push
xor
xchg
leave
push
jbe
out
movswl
in
mov
iret
hlt
out
nop
pop
inc
pop
jmp
pop
test
insl
sub
push
insb
aaa
loop
xchg
jge
inc
sarl
lods
jnp
cmp
inc
pop
push
cmp
gs
push
xchg
imul
jo
rcrl
dec
ljmp
xor
ja
mov
jle
cld
sti
es
sub
jno
insl
and
add
jmp
in
movsl
jb
xor
pop
fsub
stos
sbb
lock
pop
jne,pn
pop
sbb
stos
stos
mov
pop
inc
int
push
sbb
jo
pop
loop
ret
cmpsl
mov
fiaddl
mov
out
lock
mov
mov
mov
add
pop
and
sub
dec
jns
in
test
into
dec
sbb
movsb
fdivr
subb
popa
aad
roll
pop
push
enter
sub
mov
ljmp
xchg
pop
lea
lahf
adc
ds
les
mov
sub
scas
inc
call
hlt
xor
inc
stc
sbb
repnz
adc
and
sahf
aam
fs
clc
mov
cmpsb
or
loopne
mov
aaa
cmp
lods
in
mov
iret
dec
je
jo
push
dec
mov
repz
aas
sahf
add
lock
fistps
sbbb
dec
cmp
push
imul
jae
add
pusha
hlt
push
pop
std
loopne
out
cmp
xchg
notl
out
mov
sub
sub
sbb
adc
shr
jge
jo
out
cs
shl
jbe
bound
jl
jnp
inc
aaa
imulb
pop
push
add
ja
lcall
decb
xchg
mov
dec
leave
pushf
test
aad
leave
or
jno
mov
mov
sub
inc
shll
xor
mov
mov
xchg
dec
mov
sub
test
stos
lds
loope
addr16
xchg
cmpsl
andl
lods
xlat
inc
xchg
ds
addr16
repnz
ja
hlt
add
sar
cltd
xor
mov
in
clc
sbb
dec
insb
je
jae
jnp
hlt
jmp
and
std
int
xor
jmp
sub
inc
xchg
ss
add
push
ljmp
ficomps
add
add
push
sub
inc
xchg
inc
in
in
inc
inc
aad
jmp
mov
sub
jne
aad
leave
pop
or
lock
xor
sbb
in
fcomi
nop
aad
das
iret
nop
adc
xlat
sub
dec
add
xor
sbb
cmp
or
mov
test
pop
xor
mov
pop
popa
sbb
nop
inc
hlt
shlb
stos
dec
clc
push
mov
push
xchg
ret
gs
push
sbb
push
dec
sbb
fwait
xabort
je
mov
push
les
adc
jl
in
add
inc
arpl
sbb
out
adc
fildl
xor
testl
dec
pop
mov
dec
xor
add
repz
sub
push
sbb
fwait
jmp
pushf
jb
mov
push
lods
lea
mov
xchg
mov
xor
test
jecxz
addb
xchg
adc
push
loop
test
inc
push
rol
xor
sub
mov
out
pop
cmp
add
and
fs
add
and
movsb
leave
imul
pusha
cmp
inc
aas
idivl
push
push
xor
je
mov
inc
mov
mov
leave
pop
mov
sbbb
das
xchg
scas
push
call
loop
in
scas
fidivs
loopne
adc
push
data16
fnstenv
mov
dec
sbb
loope
gs
xchg
fidivs
std
sub
add
mov
imul
sub
lcall
cwtl
mov
lods
sbb
call
xor
das
push
stc
cmp
cmpsb
cmpsb
cltd
inc
push
sbb
add
inc
push
scas
xchg
pop
insb
addr16
fstps
sahf
cld
bound
cmp
sub
std
stos
ja
pusha
les
mov
das
mov
xchg
adc
lods
jnp
mov
mov
mov
xor
shll
pop
fcmovnu
jg
xchg
cld
test
ret
mov
xchg
ficompl
test
sub
out
xor
call
cld
out
cmp
outsb
leave
stos
mov
lds
imul
mov
jne
divb
sbb
adc
inc
pop
push
pop
cmp
fildll
pop
and
push
ja
imul
loop
in
loop
lret
fwait
mov
and
cli
insb
cmp
mov
sahf
icebp
mov
cmp
mov
jge
insl
addr16
outsb
cli
mov
xchg
sarb
leave
inc
push
sub
pop
repnz
and
andb
mov
sbb
imul
cmp
sbb
cwtl
enter
insl
pop
inc
mov
fs
xchg
jle
or
sar
mov
pop
cmpsb
aaa
rcrl
sbb
aam
push
cmp
in
out
or
repz
jno
cld
adc
daa
pop
es
jecxz
decb
fimull
fcmovnb
sub
add
outsb
lahf
sbb
sub
adc
sub
adc
out
test
fwait
ds
decl
inc
sub
or
pusha
cmp
jmp
rcrl
ret
dec
push
scas
lahf
adc
pop
pop
icebp
mov
sub
pause
mov
sarl
arpl
pop
insl
push
inc
cs
mov
push
ss
or
in
mov
cmp
hlt
inc
dec
push
test
hlt
xchg
lods
push
fcomps
push
in
fistpl
lcall
jo
nop
or
test
ret
mov
xchg
cld
lcall
lea
xor
or
xchg
mov
cs
fldt
and
adc
nop
pushf
imul
push
mov
into
mov
jg
imul
mov
popf
cmpsb
xor
test
js
jno
sub
and
xor
pop
mov
out
pop
mov
fsubrl
test
popa
std
shl
pop
cmp
aaa
lahf
mov
das
insl
dec
xchg
sarb
lods
fidivl
ljmp
sbb
add
sbb
jmp
cmp
dec
mov
pop
xor
sub
insb
ds
aad
mov
imull
stos
popf
add
test
in
test
adc
jg
inc
fadd
leave
inc
dec
and
in
into
inc
mov
or
and
mov
xchg
adc
fdivrl
std
ja
repz
pop
inc
mov
add
or
dec
fwait
dec
mov
hlt
xor
pop
lods
lret
xorb
xlat
and
fwait
cmpb
dec
mov
movsb
mov
adc
push
in
pusha
lret
pop
lods
xchg
xchg
sub
imul
arpl
mov
add
sub
sub
test
mov
push
push
or
sbb
arpl
adc
pop
dec
mov
or
adc
xor
cs
cwtl
insb
xchg
xchg
push
js
mov
sub
pop
and
inc
push
popf
dec
mov
sub
jmp
test
movsl
mov
pop
mov
or
and
push
popf
leave
fstps
mov
lods
js
xchg
mov
xchg
mov
in
pushf
rorl
pop
jne
stos
or
pop
scas
ds
mov
repnz
orl
inc
push
ss
loopne
leave
sbb
cltd
dec
in
out
dec
mov
cmp
pop
jbe
js
pop
std
outsb
push
or
out
es
sub
imul
jmp
push
adc
rcll
xchg
ja
jge
fwait
scas
ds
add
imul
mov
loope
in
cmpsb
sub
nop
in
adc
nop
es
mov
jg
loope
add
imul
inc
cli
out
out
sbb
mov
sbb
push
fwait
jno
mov
xchg
fiaddl
outsl
repnz
aaa
pop
adc
xor
lret
inc
sub
xor
jae
jbe
dec
ljmp
or
imul
lret
or
outsb
push
scas
out
mov
push
pop
aas
fs
movsl
xor
test
lcall
clc
fdivl
shlw
mov
arpl
pop
roll
ret
mov
rcrl
xchg
mov
loopne
out
cltd
nop
ds
cmp
cld
lods
movsb
lods
aam
dec
test
or
enter
push
push
sbb
and
mov
sbb
or
sarb
mov
nop
add
sub
call
inc
xchg
cmp
push
push
sub
push
pop
jnp
cmpsb
ds
test
fldenv
xor
mov
dec
mov
cld
adc
pusha
jl
jp
out
jnp
add
movsb
sti
sbb
in
or
movsb
push
pop
fsubl
mov
mov
add
pop
sub
aam
pushf
outsl
out
adc
and
pusha
pop
mov
addb
sbb
hlt
pop
sub
xchg
popa
xchg
iret
and
ss
jae
rorb
lea
cld
push
jo
and
ja
inc
lods
dec
mov
pop
sbb
stos
lahf
cli
ja
gs
in
push
ds
sbb
ja
pop
sub
lret
daa
data16
cmp
mov
jo
push
addr16
loopne
push
not
jmp
mov
lock
aaa
lds
xlat
inc
iret
frndint
jbe
test
mov
inc
adc
lea
cvtps2pi
xchg
sbb
push
pushf
out
mov
pop
push
test
xchg
sbb
outsb
int3
jb
unpckhps
mov
or
mov
jbe
in
sub
push
pop
adc
dec
in
mov
or
loopne
jns
cmp
jno
in
sbb
mov
push
sub
gs
mov
jg
frstor
xchg
pop
pop
mov
sti
mov
xchg
push
dec
add
lret
cmc
and
fdivs
js,pn
cmc
stos
lods
lret
xlat
fidivl
mov
add
hlt
mov
inc
push
cltd
push
xchg
aam
lods
xor
pop
test
fst
mov
mov
xchg
push
fstpt
div
pop
insb
add
imul
pop
cmpsl
int3
daa
mov
push
int
add
lret
out
pop
mov
std
adc
imul
test
pushf
sub
and
adc
nop
adc
daa
mov
int3
mov
jle
mov
dec
sbb
push
out
sub
sub
xor
sub
xchg
divl
mov
pusha
nop
in
inc
ret
inc
xchg
cmp
jecxz
rorb
xor
mov
ret
repz
pop
stc
cltd
enter
jo
mov
inc
mov
inc
cmp
out
les
jg
gs
inc
jns
adc
xor
in
dec
pop
sub
mov
dec
pop
pop
or
cwtl
notb
dec
bound
cmc
jmp
popf
push
jns
jmp
orb
in
push
insl
add
cmp
fwait
pop
addb
lcall
test
inc
adc
pop
bound
pop
addr16
dec
lods
push
mov
jo
out
mov
idivl
mov
dec
and
out
add
mov
outsb
jecxz
inc
fwait
inc
outsb
sahf
mov
scas
and
push
sbb
and
das
push
ds
test
out
in
rclw
cltd
mov
int3
or
lcall
jg
test
pushf
add
lock
pop
inc
sbb
mov
ljmp
fisubrs
push
adc
xor
into
adc
int
jnp
fwait
adc
push
mov
push
je
mov
rcll
mov
shll
orl
inc
mov
mov
cs
mov
ss
stos
or
and
pusha
jmp
mov
and
cmp
add
rclb
fdivl
mov
popf
in
mov
inc
adcb
sbb
cs
mov
or
iret
push
mov
xchg
pop
outsb
mov
or
jp
cs
mov
sbbl
add
outsb
aaa
inc
mov
mov
cmp
add
pushf
mov
fbld
jnp
frstor
js
in
sbb
sub
add
sbb
dec
pop
inc
fisttpll
movl
adc
inc
je
cmp
cmp
fcoml
push
mov
test
sti
movsb
sbb
andps
fbstp
int
push
adc
int
ljmp
ficompl
jo
shlb
lods
and
adc
mov
bsr
call
imul
out
addl
sarb
dec
pop
aam
xchg
jbe
orl
mov
push
cmp
adc
adc
jg
inc
push
xchg
mov
das
lret
nop
sti
xlat
orb
xchg
sub
out
out
xchg
dec
fcoml
jne
adc
in
imul
mov
movsb
jne
dec
dec
cmp
cmp
xchg
jle
orl
in
pop
cmpsl
xor
std
cmp
and
sub
je
sub
movl
cs
mov
and
testb
mov
dec
sbb
test
shl
imul
jae
sbb
cmp
mov
or
movsl
mov
push
test
xchg
pop
jnp
mov
cmp
xchg
int3
popa
jmp
or
add
mov
or
rcll
pop
dec
xchg
jp
mov
mov
and
es
fnstcw
jg
orl
insb
popa
hlt
out
out
xor
jno
cmpb
or
dec
mov
mov
pop
jb
mov
mov
rep
in
ret
add
stos
inc
xchg
stos
push
ret
mov
ja
icebp
fcom
insb
pop
outsb
sbb
jmp
cs
fsts
and
and
mov
movsb
inc
mov
sbb
sbb
mov
fistps
por
pop
mov
jg
daa
leave
xchg
mov
dec
and
dec
inc
or
and
leave
push
cli
cld
push
dec
mov
nop
inc
xchg
xchg
aad
ret
repnz
xor
fiadds
test
shll
test
or
js
inc
je
cmp
dec
mov
xchg
mov
sbbl
les
mov
hlt
fsubs
pop
mov
ret
and
je
jp
add
xor
mov
shlb
fldl
scas
enter
sub
repz
sahf
inc
sbb
div
sub
loope
mov
arpl
aad
or
dec
sbb
adc
cltd
repz
xor
fwait
cmpsl
popa
cmc
fidivrs
ret
add
lret
cltd
cmp
xor
imul
xchg
jmp
jge
mov
sbb
pop
xchg
sbb
movsl
rdmsr
xor
negb
sahf
or
add
inc
stos
fwait
mov
pop
adc
pop
mov
jae
es
cmp
add
mov
cmp
popf
cmc
pop
push
mov
mov
repz
icebp
cmpsb
in
nop
sti
ljmp
fwait
movsl
insb
rcll
jmp
movsl
outsb
xor
js
leave
lods
enter
mov
ljmp
pop
rorb
pop
and
hlt
push
shll
push
lret
popf
dec
jnp
test
mov
test
mov
cmp
pop
jecxz
pop
daa
ljmp
out
cmp
leave
pop
popf
pushw
popa
imul
push
pop
imul
jae
push
clc
in
or
or
es
test
js
xor
mov
or
ds
aad
sbb
fs
xchg
imul
cmpsl
int3
popl
fimuls
sbb
popa
test
mov
add
xchg
push
mov
stos
pop
adc
in
jp
cmp
jb
jne
pop
xor
aaa
rolb
dec
sub
es
mov
outsl
cmp
loop
cmpsb
jmp
sub
fnsave
mov
adc
adc
push
and
sub
mov
mov
pop
loope
inc
cmp
xlat
pusha
adc
mov
test
shlb
push
je
dec
hlt
and
and
sub
mov
mov
ljmp
and
xor
inc
xlat
fcmove
ds
adc
mov
test
mov
adc
out
dec
call
fsts
inc
sbb
rorl
jl
repz
push
aas
mov
jg
xlat
adcl
and
aam
insl
dec
ljmp
pop
or
inc
or
cmpsl
aam
mov
xor
xchg
scas
sahf
xor
fstps
loope
and
dec
divl
imul
fsubs
xchg
sub
mov
loop
ss
loopne
dec
mov
xor
daa
xor
arpl
push
aam
ficoms
lock
stos
js
mul
outsl
aad
mov
call
test
pop
icebp
mov
lcall
icebp
test
sub
hlt
jno
sub
leave
fsts
lret
andl
cmp
int
xchg
mov
aaa
imul
popa
jo
fstpl
mov
clc
xor
xor
movl
lods
jl
sbbb
arpl
xchg
out
ffreep
jo
aam
insl
icebp
pop
xor
inc
jo
jns
xchg
filds
js
xchg
clc
popf
cmpsb
insl
add
aam
ret
fsubp
adc
popf
cli
xor
sbb
push
pop
jae
dec
pop
xor
or
jecxz
mov
fwait
dec
sbb
jne
jp
jp
sub
movl
and
cli
jnp
xchg
mov
gs
insl
in
xchg
dec
rcll
cmp
lahf
or
push
jg
test
mov
inc
xor
xchg
punpckhdq
lods
inc
add
call
xchg
jnp
cmp
inc
ljmp
or
inc
mov
dec
enter
pop
xorl
pop
test
mov
mov
xchg
sub
arpl
test
rol
call
rclb
mov
mov
push
inc
push
scas
sbb
imul
or
add
and
mov
or
mov
aad
imul
orb
sti
in
pusha
mov
out
mov
jnp
add
insb
scas
jecxz
dec
dec
or
inc
add
stos
mov
pop
sbb
cli
int
dec
push
movsl
mov
push
mov
in
xor
cltd
jo
xchg
imul
insb
lock
shll
popa
fwait
fs
in
daa
or
push
in
push
sbb
and
enter
subb
je
leave
fldt
pop
arpl
xlat
sbb
fisubs
jl
xor
dec
subl
cltd
xchg
mov
andl
fildl
dec
lods
mov
loop
pop
push
testb
mov
or
ffreep
inc
arpl
sahf
mov
rcl
cmp
iret
mov
sbb
out
stos
std
xchg
adc
dec
push
adc
fmull
sub
aas
ja
mov
inc
mov
jb
test
pop
mov
fidivs
test
adc
sub
mov
incb
xchg
and
cmp
loope
jno
push
loope
add
or
enter
jl
push
js
in
in
xor
pusha
ds
iret
insl
out
fldt
and
out
cld
pusha
dec
sbb
pop
add
hlt
in
aas
add
pusha
call
sub
xor
add
push
addr16
andb
jae
dec
loop
test
je
pop
lcall
icebp
leave
hlt
insl
out
or
ss
push
inc
mov
sub
test
mov
jne
sub
imul
mov
loope
push
das
imul
mov
daa
imul
xchg
pushf
sbb
mov
cmp
test
rcr
mov
cmp
repz
bnd
gs
xor
mov
adc
or
daa
and
pop
mov
movsb
in
int3
into
lcall
xor
xchg
in
std
cltd
movsl
cmp
sbb
gs
das
or
mov
jo
or
and
xchg
cmp
sub
cmpsl
xchg
add
cmp
push
and
sbb
es
jecxz
xchg
pop
xor
xor
jnp
cs
fstpt
fldt
adc
or
dec
mov
push
and
cltd
mov
mov
test
sub
scas
orb
stc
dec
dec
jmp
ljmp
neg
adcb
cmp
cmp
mov
jno
push
inc
mov
cmp
imul
in
add
rorb
lret
test
dec
lea
cmp
add
adc
ret
das
xchg
xchg
outsb
jae
mov
fildll
loopne
add
lcall
xchg
es
mov
out
inc
sbb
das
and
leave
mov
test
mov
push
xlat
cmc
out
inc
mov
mov
mov
nop
xor
or
cmp
ss
test
xchg
rcr
mov
rcrb
jp
sub
adc
mov
jbe
mov
cmc
into
cmp
adc
add
aam
popf
insl
push
rclb
sbb
sbb
push
sub
and
movsl
dec
repz
aas
cmp
adc
test
rcll
jle
std
shlb
sbb
je
mov
jmp
mov
pop
or
cmp
mov
addr16
inc
lods
sarl
fldenv
in
int3
sti
das
rolb
lea
pop
push
es
stc
imul
xchg
nop
in
cs
dec
push
cmp
jne
cmpsb
icebp
push
js
imul
or
xor
inc
xor
mov
mov
pop
jne
xrelease
or
lods
mov
jae
mov
pop
mov
add
arpl
out
mov
in
adc
mov
outsl
movsb
push
push
repnz
adc
xchg
push
xchg
lret
xchg
cwtl
inc
inc
pop
ss
int
ret
sbb
subl
xchg
arpl
ja
dec
mov
xor
adc
pop
cltd
mov
andb
add
stos
lret
mov
push
test
popa
xor
cmpb
add
mov
xor
gs
xchg
in
movsb
out
int
lret
test
andl
pop
out
fidivs
ljmp
xchg
test
test
lcall
sub
sub
fadd
mov
xchg
ss
mov
lock
push
and
iret
xchg
mov
call
fadds
pop
mov
fmul
mov
push
loop
enter
into
lds
dec
scas
dec
xor
mov
push
cmp
and
pop
mov
mov
push
imul
mov
in
lods
imul
aas
cmp
adc
sti
xor
xor
adc
jae
push
push
mov
push
insb
lds
lea
int
pop
cltd
stos
add
inc
fs
xchg
push
call
and
jl
lcall
dec
fstps
sarb
mov
das
and
inc
cli
loopne
insb
ja
dec
shrl
cmp
sahf
fisttpl
jle
test
ljmp
xlat
or
lea
xchg
in
add
push
lock
testb
sub
imul
jo
push
cs
test
mov
out
lcall
xchg
jp
cmp
mov
test
xor
aaa
ficoms
pop
and
cltd
dec
sub
lcall
jae
or
rcr
aas
push
cmp
mov
jecxz
push
loop
push
outsb
ja
ret
push
adc
shr
scas
xchg
xchg
xor
adcl
pop
sahf
cmpsl
xor
in
repnz
cmpsb
clc
test
and
cmp
imul
popa
loop
inc
das
mov
xor
and
ret
mov
mov
xchg
mov
mov
flds
xlat
wrmsr
aam
xor
popa
cmp
dec
mov
lret
pop
data16
cltd
xor
call
pushf
call
jle
and
pop
rclb
jo
mov
mov
sbb
lea
sub
add
xor
loopne
dec
addr16
jb
addr16
mov
pop
ficompl
repnz
inc
roll
rorl
inc
testb
out
inc
test
xor
adc
aam
testl
mov
test
jno
pop
sub
shrb
or
inc
pop
lahf
in
push
insl
xchg
or
lock
sub
scas
xchg
add
xor
fistpl
in
clc
lods
sbb
jb
scas
imul
lock
xor
jne
jmp
bnd
cmp
call
inc
sbb
sub
imul
inc
inc
inc
bnd
add
push
lea
call
or
std
sub
sbb
jb
into
movsl
jne
jge
cmp
or
dec
rcll
adc
add
push
push
sbb
jbe
push
add
fstpl
out
out
pop
enter
mov
mov
les
lds
mov
and
ljmp
push
cmpsb
jb
daa
and
inc
inc
and
dec
rorb
adc
andl
mov
pop
xchg
mov
jge
pop
push
pop
in
jge
xchg
mov
or
push
pusha
jg
jns
ds
int3
imul
ret
daa
jo
test
cli
enter
lds
add
add
jo
icebp
jmp
mov
lret
in
call
fsubr
hlt
lahf
xchg
pushf
jl
in
sub
lock
cmp
jmp
popf
pop
sub
cmp
call
and
sub
mov
or
fwait
imul
mov
pop
pushf
hlt
iret
push
xchg
xchg
mov
xchg
sub
pop
jle
loop
aas
testb
gs
maskmovq
testl
pop
xor
lock
arpl
arpl
mov
or
in
sbb
pop
rclb
mov
jmp
cld
lcall
adcb
rclb
fs
cmp
jp
les
mov
jne
or
mov
pop
bound
and
jbe
jmp
inc
sub
lcall
aam
xchg
sbb
sub
inc
sbb
aad
and
loopne
add
imul
imulb
pusha
cld
mov
icebp
mov
das
xchg
ss
ret
push
data16
stos
add
pop
jge
pusha
in
fsubs
cmp
push
xchg
jle
mov
rol
imul
js
lods
pop
mov
sbb
std
jb
dec
pop
cmp
aam
jb
aad
scas
in
dec
cwtl
ror
in
fistps
and
xchg
sub
xchg
jp
lods
shl
sub
scas
jb
iret
in
push
rol
fstpt
mov
stos
jae
mov
lock
or
imul
scas
pusha
mov
aaa
mov
mov
fisubl
lret
fidivs
sbb
fs
aam
cmp
mov
popf
in
jbe
into
mov
nop
mov
sub
cwtl
sub
in
daa
xchg
js
dec
inc
sbb
mov
push
out
orb
lret
cmp
mov
push
mov
dec
sbb
jge
add
mov
and
stos
dec
sti
stc
adc
fimuls
dec
push
aad
lock
inc
add
dec
stc
movsl
loope
hlt
aad
lahf
enter
pop
rcll
jecxz
ja
cmc
or
fdivrl
inc
scas
sbb
aas
push
jp
or
push
xlat
es
xlat
out
es
movb
xor
mov
outsb
cltd
call
and
int
mov
lods
adc
pop
int
mov
add
cmp
cmc
or
cmp
mov
adc
iret
imul
jp
mov
inc
mov
xor
gs
mov
lcall
mov
mov
mov
sbb
aam
outsl
das
out
fmul
mov
jb
xor
imul
cmc
insb
and
push
add
std
jl
andb
push
pop
iret
add
mov
pushf
push
orb
mov
xchg
insb
ljmp
lea
mov
sub
divl
mov
add
inc
int3
loopne
sar
or
adc
es
std
int3
sub
push
enter
movsl
mov
iret
scas
das
test
das
and
xchg
lock
push
imulb
roll
out
adc
jmp
or
call
andb
push
or
lret
mov
cmp
jbe
lock
jecxz
add
xchg
js
lret
push
mov
daa
xor
add
js
pop
pop
lahf
fwait
pop
dec
mov
fwait
mov
xchg
push
mov
mov
insb
lahf
jp
dec
push
mov
dec
sbb
shll
shll
jg
shrb
inc
orb
jne
repnz
mov
dec
adc
adc
adc
inc
mov
sub
and
loop
pop
inc
and
xchg
inc
mov
mov
add
pop
cld
xlat
inc
mov
das
sbb
and
cld
add
dec
shl
xchg
into
hlt
hlt
cwtl
and
mov
mov
xchg
addl
and
shl
call
fwait
mov
aas
outsl
les
outsb
sbb
inc
lcall
add
dec
rcll
dec
clc
stc
in
imull
xor
xchg
xor
inc
data16
push
ror
sub
loopne
jle
push
lcall
ljmp
ret
jecxz
push
cmpl
mov
mov
push
cmp
mov
aaa
je
popa
sub
movsb
push
int3
popa
inc
mov
out
in
pusha
dec
lret
jecxz
hlt
cmp
add
push
stc
outsl
ss
popf
and
fwait
xchg
cmpsl
lret
loopne
sbb
sbb
fmull
xorb
push
out
pop
and
lods
bound
cmpsb
jo
cmpl
mov
adc
aaa
fs
imul
cmc
outsb
lods
out
dec
push
jle
les
push
jns
fldenv
insb
xor
int3
es
or
sbb
pop
mov
and
scas
jns
mov
jge
inc
mov
mov
jecxz
jns
movsl
incl
jnp
inc
dec
dec
fcoms
cs
push
jp
lock
xchg
sub
and
push
les
mov
mov
sarl
sbb
mov
or
popf
push
add
je
in
add
and
mov
nop
jl
arpl
sbb
xchg
or
cmp
cmp
inc
jae
les
aas
pushl
and
mov
sti
push
idivb
mov
add
xor
fstps
mov
xor
jb
fadd
shlb
sbb
pop
dec
jp
clc
cli
repnz
mov
cwtl
pop
push
fs
jno
movsl
xchg
jne
out
dec
shll
clc
cmc
rcll
loop
xchg
out
mov
int
cmpsl
mov
test
xor
jg
lcall
jno
out
lret
clc
xor
enter
fimull
sub
mov
jae
es
push
adc
mov
xchg
hlt
frstor
rorb
jno
stos
cwtl
cwtl
push
cmpsb
shl
or
pinsrw
push
mov
fldt
pop
fdivrp
out
sbb
mov
insl
sbb
popf
popf
in
push
test
shrb
std
mov
ss
mov
mov
repz
loope
sub
jp
ds
insb
cmp
das
and
outsb
negl
iret
outsb
cli
gs
push
fstpl
pop
lret
stos
push
iret
mov
pushf
enter
lret
push
loope
xchg
das
test
hlt
mov
aas
jnp
ljmp
xor
insb
jae
pop
jge
int3
je
pop
push
xor
or
std
pop
clc
ja
xchg
xchg
or
dec
jg
push
jl
mov
jne
int3
jp
fmull
sbb
push
mov
cli
cld
loope
imul
sub
stos
xchg
inc
in
loop
pushf
fwait
aad
subl
int3
push
add
push
jmp
cmp
and
fidivl
cwtl
pop
cwtl
adc
push
mov
imul
gs
icebp
pop
mov
mov
out
sbb
popw
mov
inc
in
mov
pop
lret
call
add
enter
leave
mov
es
and
outsl
int
fs
and
push
mov
mov
push
or
hlt
dec
lsl
jle
mov
mov
stc
out
or
xchg
arpl
and
je
mov
adcb
pop
pop
pop
xchg
in
faddl
dec
lods
gs
mov
out
jmp
and
das
xchg
int3
in
cmp
xor
aad
push
je
mov
stc
sub
icebp
repz
iret
popf
jns
jge
test
sub
lods
std
cmp
xchg
sbb
jmp
test
outsl
xlat
mov
nop
xchg
adc
mov
push
xor
mov
fisubrl
sbb
jae
aas
out
push
xor
or
insb
sub
nop
pop
cmp
push
jnp
inc
ss
xchg
daa
data16
cwtl
leave
xchg
mov
mov
dec
xchg
loopne
loop
adc
js
sbb
pop
dec
inc
outsl
int3
dec
dec
mov
cmpsb
push
and
adc
das
cmpsb
fsubs
scas
or
pop
add
add
mov
in
lret
and
fwait
jp
mov
push
mov
mov
or
pop
cs
shrl
add
sub
push
sar
sub
adc
out
aas
ljmp
pop
and
in
pop
lret
add
pusha
and
fidivs
xchg
xor
mov
sub
pop
jo
fdivs
prefetchw
movsb
or
push
in
das
push
mov
hlt
or
lahf
dec
or
mov
sbb
outsb
les
and
mov
cmpsl
popa
jne
mov
ficompl
cmp
cmc
sbb
repz
sti
push
push
imulb
fisubs
sbb
xchg
xor
cmp
inc
and
cmpsl
mov
repz
push
pop
jmp
inc
shlb
imull
jns
inc
or
fsubr
mov
cs
push
stos
fsubs
mov
push
sbb
adc
adc
sarl
push
outsl
ljmp
aad
mov
addr16
jle
sub
test
stos
jg
filds
lahf
ret
push
xchg
inc
in
xchg
aam
rcll
dec
loope
and
jmp
push
hlt
outsl
add
loopne
and
inc
adc
popa
push
into
push
rorl
xchg
pop
leave
ficompl
pop
xchg
ss
push
rol
cmpsl
hlt
lds
ss
inc
insb
mov
ss
leave
jno
cmp
push
cmp
xchg
pop
push
test
mov
aas
lret
stos
rcll
lcall
push
jno
scas
shrl
mov
shr
movsb
cmpsl
loope
inc
inc
dec
jnp
mov
xchg
push
sub
push
call
push
sub
nop
xchg
jg
jecxz
and
mov
xor
dec
mov
cvtpi2ps
mov
sub
cmp
stos
inc
cmc
jo
dec
fsts
idivb
insl
enter
adc
or
sti
repnz
and
push
mov
iret
xchg
cld
fnsave
jo,pt
jbe
rcl
in
sbb
enter
aam
mov
imul
ret
insb
pusha
jns
cld
mov
jp
mov
in
int
inc
imul
lret
and
dec
orl
insl
clc
xchg
jne
outsl
daa
pop
jg
jmp
adc
cmp
inc
mov
inc
sahf
xor
stos
icebp
js
ja
lea
pop
pop
adc
and
in
xchg
das
int3
add
push
cmc
mov
mov
cmp
cmp
call
push
sbb
out
ja
mov
pop
sti
leave
and
mov
mov
adcl
mov
ret
xchg
push
ljmp
js
outsl
jg
fbstp
push
mov
fdivl
adc
mov
popa
adc
adc
out
sarl
std
shrl
push
repnz
fwait
rorl
xchg
inc
mov
fdivl
sub
lock
repz
inc
and
hlt
mov
or
sbb
cmpsb
loope
fs
and
jne
mov
bound
in
mov
test
push
add
jae
adc
addr16
jle
ja
shrb
ret
mov
xchg
ror
cs
inc
xchg
jns
cmovg
dec
inc
push
inc
movb
push
adc
xchg
dec
icebp
int3
into
pop
lock
lret
into
fisttpll
loopne
outsl
add
mov
icebp
incl
push
cmp
jl
xchg
out
inc
add
into
outsb
rclb
filds
push
sti
dec
je
inc
sti
mov
and
xor
aas
xchg
jge
out
mov
mov
pop
mov
push
jl
jecxz
xchg
cld
out
rcl
sub
jb
loop
popf
pop
mov
stos
out
sarb
xor
frstor
mov
sbb
aas
fldcw
add
and
mov
imul
addr16
sbbl
stc
push
aas
mul
push
cmpsl
cwtl
jo
xor
mov
stos
sti
lods
es
inc
push
push
mov
lds
push
pop
push
sub
or
jne,pt
fsubl
pop
jg
mov
jne
lcall
sbb
xchg
fistps
mov
ljmp
or
shrl
stos
push
or
xchg
push
outsl
xor
jb
loope
sub
jns
pop
test
lret
inc
test
cmp
imul
cli
xor
mov
dec
jne
push
pop
faddp
dec
loopne
lods
and
jnp
cmp
lock
xor
mov
pop
pop
mov
mov
mov
mov
fildl
sbb
call
add
lods
out
xchg
or
and
pop
iret
aam
mov
sti
cmp
jge
movsl
cmp
fadd
inc
cmp
clc
fidivl
xor
adc
fstps
mov
lods
in
xlat
les
call
mov
pop
push
cmp
cmp
data16
cmp
fsubl
cmp
jecxz
sar
or
inc
mov
cltd
xchg
cld
and
data16
out
dec
lods
push
adc
xor
filds
test
gs
wbinvd
cmp
mov
fiaddl
cmc
inc
sbb
mov
pop
or
out
or
ret
xor
movsl
pop
push
cmp
pop
das
daa
sti
mov
add
jns
lret
outsb
xchg
jo
jp
mov
inc
mov
push
xchg
dec
movsb
xchg
pushf
test
nop
jns
adc
mov
sbb
and
add
ss
cmp
mov
sub
and
aad
mov
mov
insl
dec
lods
mov
jne
fnop
push
test
iret
xorps
fistps
cmp
and
cmp
stc
fsubrs
or
shlb
outsb
inc
mov
inc
dec
addr16
fimuls
add
push
jne
pushf
jg
cmp
pop
test
jmp
cmovg
jbe
inc
outsl
outsb
scas
cwtl
cmp
daa
movsb
sub
lret
fnsave
sub
push
movsb
push
add
negb
in
lea
xchg
loope
jae
xor
inc
test
dec
xchg
jbe
dec
orps
xchg
dec
lock
repnz
movsl
push
leave
mov
mov
mov
ja
mov
mov
bound
mov
mov
lcall
cmp
sub
nop
xchg
loopne
enter
rolb
lret
shlb
add
cs
cmpsb
inc
mov
pop
sbb
ret
inc
and
dec
leave
mov
lock
jle
das
sub
jbe
dec
xchg
xor
je
push
and
arpl
insl
jp
sub
sub
scas
xchg
sar
mov
mov
and
push
inc
frstor
mov
sahf
loope
fwait
stc
scas
bts
lds
pop
jno
sbb
fcmovne
js
das
fwait
cmp
aas
adc
push
das
pop
sbb
fmulp
outsl
sub
arpl
add
aam
in
sbb
cmp
mov
fs
ret
repz
scas
call
pop
cmp
js
add
sahf
ffreep
lcall
xchg
mov
xchg
ficoml
popf
rorb
dec
mov
xor
popa
jnp
scas
push
mov
insb
mov
mov
iret
push
lret
and
mov
cs
pop
cmp
pop
insb
and
dec
mov
pushf
je
cmp
pusha
ret
enter
inc
sbb
dec
mov
add
arpl
jl
xor
imul
sbb
mov
pop
mov
outsl
imul
xchg
in
ds
cmp
sub
mov
xor
insb
inc
ret
push
inc
and
jb
and
lods
cltd
jns
out
sbb
and
sub
insl
or
sbb
push
shll
or
mov
stos
add
mov
rolb
scas
or
cmpsb
jno
orps
in
pop
enter
js
cmp
add
arpl
sbb
dec
je
or
jmp
lock
dec
push
xor
ret
cltd
xor
adc
sub
dec
popa
xlat
jmp
adc
dec
pop
shlb
cmp
mov
xor
enter
and
insb
push
in
cltd
popl
cmp
je
push
mov
iret
sahf
mov
mov
in
lret
fmulp
jle
push
ss
stos
pop
push
shlb
pop
pop
scas
gs
data16
jbe
jl
outsb
dec
dec
dec
cmpb
out
jns
leave
and
lahf
mov
mov
or
and
adc
sarl
and
mov
jns
or
push
inc
xchg
mov
mov
daa
push
jnp
das
or
mov
ja
mov
cmc
fcompl
cltd
ljmp
or
test
inc
fnsave
dec
pop
sti
pop
orb
jmp
push
shll
xor
jmp
lods
inc
xchg
stc
lret
and
jae
rorl
movsb
jb
aam
sub
dec
mov
sbb
inc
movsb
adc
addr16
movsb
mov
inc
cli
jae
pop
pop
adc
mov
orl
rcrb
push
xorb
xchg
jp
xchg
sub
add
mov
xchg
int3
cs
jno
movsb
jnp
xchg
call
cvtdq2ps
mov
sbb
sub
ss
jecxz
test
add
jb
pop
mov
mov
pop
and
fcoml
jo
sbb
mov
mov
in
jecxz
mov
pop
incl
lret
pushf
das
mov
mov
jnp
and
mulb
shrl
stos
shlb
movsl
rorb
mov
rcll
cmp
enter
imul
mov
and
push
sub
pop
into
and
ror
stos
sub
and
push
fisubrs
out
sbb
pop
movsl
push
sbbb
mull
pop
pop
cwtl
stc
dec
sarb
adc
aad
sub
pop
jmp
lds
sub
aaa
xor
mov
mov
loope
aad
and
mov
lea
or
lahf
pusha
fdiv
xchg
xor
mov
push
in
mov
scas
cltd
adc
sub
push
ficomps
mov
pop
cwtl
push
xchg
mov
push
adc
cwtl
jae
hlt
sbb
in
cmpsl
test
or
mov
lret
sti
xorb
fld
add
xor
mov
aaa
cmpl
jl
ljmp
push
mov
lret
xlat
fdivrs
or
pop
shll
and
mov
mov
lret
xchg
movsl
lea
xchg
sub
push
arpl
loope
xchg
xor
sti
mov
mov
sbb
jnp
cwtl
nop
jmp
aad
es
mov
mov
arpl
aam
insl
xlat
mov
out
pop
push
pop
jecxz
cmp
pop
xchg
stc
push
addr16
jmp
out
xor
mov
push
jne
jle
mov
in
jno
mov
bound
out
cmp
aaa
ss
inc
add
out
in
mov
sub
add
and
xor
mov
pop
xor
cwtl
insb
push
xor
dec
pop
enter
mov
pop
mov
fldln2
sbb
fstps
loope
fs
pushf
push
mov
sub
jmp
xchg
mov
in
dec
jge
add
rcrb
out
leave
push
imul
and
sbb
imul
in
fs
adc
in
ljmp
jnp
ret
xor
std
push
dec
dec
daa
push
lods
cmpb
mov
jp
cmc
rcrl
nop
loope
pop
add
shll
lods
cs
mov
mov
pop
outsb
push
dec
adc
cld
shr
cmp
sub
cmpb
mov
sub
ret
loop
shrb
cmpsl
ret
lods
ret
jnp
push
pop
or
mov
jp
cltd
testl
mov
imul
movsl
jae
lods
push
cwtl
insb
adc
mov
pop
fnstsw
adc
pop
pushf
hlt
xlat
mov
jne
iret
sbb
jmp
pop
fcmovnb
jg
mov
inc
dec
rcrb
and
mov
xchg
jo,pt
adc
mov
lds
js
fs
test
popa
push
push
pop
out
repz
jmp
ds
adc
mov
jmp
xorl
push
outsl
jge
pop
inc
and
jle
adc
xor
or
mov
repnz
arpl
mov
gs
insb
sub
mov
andb
mov
cmp
pop
cmc
rcrb
xchg
mov
fisttpll
dec
mov
mov
ss
fbstp
mov
movsb
adc
push
ljmp
fcomps
fcomip
xor
popf
cmp
arpl
mov
mov
hlt
jg
adcl
test
sbb
sbb
test
int3
pop
dec
dec
xchg
jno
pop
ds
sbb
sub
cmp
out
lcall
push
hlt
and
nop
in
bound
mov
mov
dec
dec
inc
mov
gs
ds
adc
icebp
out
dec
lods
mov
cmp
test
std
xor
js
stc
jbe
bnd
dec
add
shr
test
inc
jg
fs
and
xor
pop
and
adc
cmp
jbe
cmpsb
xor
xchg
lret
addr16
loope
mov
pop
sahf
loop
sub
lock
pop
cmp
sti
lods
dec
add
mov
int
out
out
int3
imul
inc
inc
dec
and
leave
out
mov
das
inc
adc
jecxz
les
mov
les
mov
push
jmp
mov
mov
scas
push
cli
push
jo
lods
and
lcall
mov
xor
movsl
mov
movsb
mov
je
ja
cmpsl
jg
sub
mov
xchg
imull
add
mov
daa
adc
dec
adc
in
aas
ret
into
lock
mov
call
clc
mov
ja
cmc
xor
and
xchg
mov
ljmp
push
pop
xchg
lret
insl
inc
cld
mov
sarb
movsb
adc
rorl
inc
cmp
and
sbb
divl
fs
test
into
enter
and
cmp
sbb
jno
mov
cli
inc
sub
ret
fistpll
push
ja
mov
push
mov
outsl
sub
jl
pop
dec
ds
push
inc
fwait
adc
sbb
jmp
mov
mov
or
movsb
cmp
mov
mov
xor
fstl
fsubs
and
fisttpll
roll
cmp
mov
pop
fstpt
xchg
insb
sbb
sub
dec
cmpsb
fstl
push
stos
sbb
std
push
ds
push
pop
call
dec
mov
xchg
rorb
fwait
jle
imul
repnz
mov
pop
and
jne
test
subl
fdivrs
and
xchg
inc
aaa
sub
fbld
xchg
cld
into
inc
push
lret
and
sub
test
adc
dec
sbb
xchg
push
xchg
xchg
mov
add
dec
jnp
push
mov
clc
inc
fsubrs
dec
adc
add
add
jns
test
ret
dec
dec
inc
pop
sti
movsb
inc
xchg
fdivrl
cwtl
in
mov
adc
adc
faddl
loopne
fwait
rcll
push
push
das
sbb
scas
vzeroall
jnp
sub
or
mov
test
jge
outsl
insl
jns
daa
ds
test
inc
adc
fiadds
sbb
stc
imul
nop
jmp
adc
shll
sub
movsb
jae
mov
aas
pop
adc
sahf
push
inc
stos
or
stos
sbbl
adc
dec
repz
andb
add
shrl
in
or
sub
sbbl
frndint
rcrl
out
jl
dec
ds
cmp
mov
clc
into
pop
jecxz
lcall
xlat
mov
mov
mov
iret
mov
ds
jo
sbb
cmp
mov
cli
push
pop
fiadds
jge
inc
jg
ljmp
popa
outsl
dec
push
jb
dec
or
pop
subb
mov
push
fdivrs
stos
jbe
pop
jns
fisubs
jecxz
mov
mov
sub
arpl
cmc
js
push
rcll
lahf
jb
aas
gs
cmp
iret
cmp
fstpt
test
adc
enter
popa
mov
mov
dec
add
cmpl
leave
sti
lret
jae
push
enter
xor
jnp
daa
xlat
pop
aam
testb
aaa
bnd
jne
in
cmovge
inc
lea
lret
je
dec
aam
sub
addr16
int
lock
roll
mov
add
ljmp
scas
push
insb
xlat
mov
mov
pop
pop
je
inc
loopne
xchg
mov
fwait
add
test
jo
inc
fsubrs
xchg
cmp
sbb
stos
xchg
jmp
cmp
jmp
or
mov
andb
enter
outsb
loopne
pop
lret
push
push
push
in
inc
push
ss
lahf
lods
movsl
fidivrl
pop
negl
cs
xor
adc
popa
mov
or
inc
add
add
adc
push
in
xor
test
enter
cmp
and
jno
clc
push
cmp
insb
jg
push
push
es
adc
xchg
pop
test
in
xchg
cwtl
push
pop
int3
ss
addr16
fcmovb
test
push
sub
lret
in
stos
mov
pusha
popf
addr16
mov
mov
mov
leave
sarb
in
xchg
mov
addr16
sarl
lods
fnstenv
add
icebp
mov
xor
bndldx
les
js
xchg
lret
sbb
push
scas
aam
inc
xor
pop
lret
adc
leave
sarb
aad
mov
add
add
nop
les
repnz
cmp
int
inc
mov
or
lahf
xchg
leave
fstl
sub
adc
ret
lock
pop
jmp
roll
bound
fistpll
aam
cmp
sub
in
jp
cltd
push
xor
xchg
ret
outsl
push
xchg
mov
stos
xchg
push
cmc
ljmp
and
xchg
mov
lcall
in
push
xchg
xchg
xor
stos
jecxz
add
stos
sbb
inc
lret
out
in
mov
lret
push
or
adc
sbb
outsl
cmc
cmc
add
push
pop
mov
push
push
mov
cltd
and
xchg
movsb
push
int3
call
insb
outsl
stc
inc
js
pop
dec
dec
cmp
xor
mov
in
sbb
loopne
xchg
dec
xchg
les
or
ja
sarl
xchg
fisubrl
adc
push
xor
lret
arpl
or
out
cmp
stos
inc
pop
repz
imul
fmull
pop
mov
aam
lret
jge
xchg
cld
push
ss
and
shrl
push
cmp
imul
insl
dec
jnp
addr16
cli
adcl
or
dec
stos
mov
sub
and
or
loop
ret
mov
xor
adc
adcb
test
inc
cmpb
test
jnp
stos
aad
movsb
sbb
cmp
xlat
test
add
pusha
out
jne
fisttps
mov
bound
test
mov
je
loope
fucomp
scas
mov
sbb
ror
hlt
je
scas
cmp
lods
popa
shr
dec
mov
xlat
into
mov
mov
stos
and
and
test
jb
stc
cmpsb
insb
in
jmp
jne
inc
roll
xor
push
mov
xchg
enter
xlat
push
jo
or
dec
sub
xlat
popa
pop
dec
gs
lock
ds
popf
dec
and
sbbl
xchg
testb
push
xor
loope
iret
repz
daa
cmpl
xchg
sti
push
pop
pushw
nop
pop
leave
insl
pop
jae
cs
shrl
add
jmp
sahf
pop
data16
pop
sbb
loop
shr
scas
test
cli
mov
mov
adc
stos
cld
xchg
out
in
sgdtl
out
data16
out
cli
add
bnd
adc
aas
xchg
loopne
in
sarb
lret
jmp
insl
out
add
xchg
decb
sbb
loope
lret
pop
xchg
lods
xchg
xchg
xlat
or
dec
fcoms
jae
out
nop
decb
mov
or
jge
mov
loopne
or
adc
pop
rorl
ljmp
inc
push
ds
fbld
add
pop
add
mov
js
lret
mov
mov
int3
mov
sbb
adc
sub
out
sbb
push
xor
loop
test
jge
test
mov
jnp
popa
cmp
xchg
xorl
test
mov
jg
pop
nop
dec
aad
mov
add
pop
test
fimuls
outsl
nop
mov
xor
gs
xchg
shll
in
out
sti
add
cli
loope
fucomp
dec
jns
jl
xlat
mov
sahf
test
imul
push
cli
jno
hlt
jge
jns
mov
jmp
pop
out
push
inc
xchg
int3
insb
add
cs
sub
push
rcll
jo
scas
aaa
sbb
mov
sti
repz
imull
add
imul
dec
inc
mov
lahf
lcall
popa
and
into
orb
mov
sub
int3
dec
inc
jnp
fisubrs
cmp
or
cld
mov
out
pop
cmp
lcall
add
mov
popf
pop
pushf
dec
adc
leave
or
mov
pushl
sbb
stos
shlb
jns
lret
push
dec
test
mov
jmp
sbb
mov
pop
imul
xor
sbb
aam
mov
xchg
or
push
int
jo
or
iret
mov
iret
ja
jnp
call
movsb
jmp
test
sbbl
mov
or
fimull
xor
mov
fs
rcll
xor
and
push
aas
push
test
push
cmpsl
les
es
inc
popf
outsl
xchg
or
or
xor
es
pop
adc
sub
dec
or
shll
jp
test
test
adc
aam
rclb
aam
push
add
cmp
add
mov
gs
pop
sbb
mov
ret
gs
into
cmpsl
lcall
push
adc
cwtl
xchg
lret
or
ror
outsl
imul
scas
jne
or
mov
das
cmpsl
jecxz
push
inc
dec
pop
dec
ret
mov
aam
ret
leave
jmp
xchg
xor
dec
in
data16
sti
stos
xorb
inc
sub
cltd
mov
push
loopne
mov
aad
cmp
add
orb
fidivl
ljmp
adc
sahf
cmp
xchg
cmp
dec
xchg
mov
push
xor
mov
and
sbb
sub
mov
xchg
xor
adc
add
ret
mov
lea
mov
test
stos
jl
dec
fwait
shr
scas
loopne
aad
xchg
pop
test
aaa
icebp
sahf
imul
mov
mov
mov
lea
stos
shlb
outsl
jg
xchg
ud2
jp
movsl
pop
dec
mov
lods
shl
cmp
aad
stos
outsl
xor
mov
or
icebp
mov
rcl
shr
les
jge
adc
cmp
cmp
xlat
test
push
pop
in
pop
adc
xor
das
push
pop
mov
jae
in
cmp
sahf
mov
rcr
mov
shrl
and
push
lahf
cld
adc
scas
fstl
pop
lret
mov
imul
or
mov
scas
test
or
add
adc
lods
or
inc
cld
mov
scas
nop
pushf
jecxz
push
movsb
jge
push
stos
outsb
pusha
sub
test
mov
loopne
mov
or
cmp
fisubrs
mov
dec
jl
aam
mov
stos
lea
pusha
mov
sbb
call
mov
daa
add
insb
jae
push
sub
mov
stos
cmpsb
mov
js
cmp
cmp
mov
mov
jl
jo
loopne
fs
inc
notb
lock
shl
jecxz
pop
movsb
cmp
dec
repnz
stc
sbb
push
aam
xchg
les
pop
insl
fdivs
test
mov
enter
rclb
xor
mov
cli
cmp
push
jno
inc
movsl
cmp
add
sbb
jnp
iret
push
cs
sub
aad
mov
andb
sub
fs
add
jb
into
aas
and
inc
int
aad
data16
mov
scas
es
jl
push
xor
push
mov
ljmp
imul
xchg
loope
lcall
xor
imul
inc
jns
fwait
out
ds
fstpl
inc
dec
repnz
pop
sbb
stc
rsm
test
mov
dec
dec
inc
or
mov
pop
xchg
jns
popf
arpl
xchg
mov
stos
rcrb
push
xchg
repz
sarl
pop
outsl
les
inc
adc
stos
lcall
test
or
mov
out
in
sarl
mov
cmp
adc
pop
mov
not
adc
cmp
mov
cld
xor
test
lods
push
out
xchg
or
push
or
xlat
lret
xor
rcll
clc
sbb
mov
add
push
adc
into
or
push
jne
movsl
lahf
adc
inc
out
in
jae
aam
lcall
mov
fldl
jecxz
push
popf
add
in
fildll
mov
sbb
mov
mov
lret
int
imul
jbe
andl
js
popa
insb
jbe
sbb
fisubl
inc
test
fcomps
fcoms
clc
fstpl
lds
push
hlt
sub
jb
mov
push
mov
pop
aaa
mov
jne
jbe
lods
dec
push
cmp
les
jp
inc
dec
jno
lods
add
sub
dec
xorb
add
loope
push
add
je
fists
adc
repz
testl
lret
xlat
dec
or
mov
dec
pop
adc
pmulhw
dec
or
dec
cmp
mov
cwtl
mov
icebp
xor
jg,pt
dec
jge
out
inc
pop
daa
outsl
cmp
cmp
xorb
add
sbb
mov
sbb
and
ret
bound
repnz
push
sbb
push
push
enter
cli
xchg
lea
lods
jmp
scas
xor
inc
ss
aad
adc
fdivrs
loope
and
movsb
imul
pop
sub
rorl
push
mov
inc
decl
std
pop
dec
stos
inc
add
je
ds
aam
loopne
xchg
sub
add
mov
inc
add
sbb
lock
test
xchg
pop
xlat
enter
sbb
jno
push
dec
aad
cmpsl
ljmp
je
add
xchg
lret
cmp
or
outsb
and
jecxz
inc
rorb
idivl
aas
leave
cmp
dec
adc
push
js
test
mov
fidivrl
cmc
sub
sub
bound
addr16
cltd
insb
dec
dec
adc
mov
sbb
pop
aad
sub
shrl
jbe
lea
xor
test
push
inc
outsb
gs
lock
or
push
mov
pop
mov
jne
iret
add
out
popa
fcompl
lds
push
scas
lret
add
insb
shrb
xor
cmp
jg
add
js
add
fadd
xor
out
push
mov
xchg
cmp
mov
dec
mov
mov
je
jecxz
rcll
add
in
push
ret
imul
in
mov
adc
enter
rol
and
dec
mov
rcll
outsb
sub
mov
mov
in
inc
pop
aam
add
cwtl
idivb
ja
xor
mov
mov
cmp
sub
push
sbb
cltd
and
stos
pop
lahf
repnz
divb
and
mov
test
shl
jmp
stc
dec
fwait
xchg
inc
loope
mov
adc
test
adc
fwait
loop
cwtl
pop
mov
cltd
jnp
daa
jne
stos
sbb
call
jmp
mov
push
rorb
dec
add
cs
mov
rep
mov
cmp
fstpl
pop
cmp
loopne
fistps
mov
inc
cld
push
mov
subl
sbb
ret
fsub
add
in
les
xor
xor
stos
and
cwtl
dec
cmp
scas
in
mov
pop
andb
pusha
push
mov
dec
sub
mov
movsl
cmpsb
ret
push
out
jo
cmp
xor
aaa
mov
imull
push
fidivrl
xchg
sub
cmp
loop
mov
scas
dec
dec
fs
dec
sbb
and
mov
and
jp
jge
pop
push
jnp
ret
jl
push
add
clc
cs
sub
roll
xchg
ss
pop
push
mov
out
adc
and
mov
lods
dec
jne
cmp
aas
add
sub
push
ss
sar
jge
sbb
aam
jp
and
xor
mov
mov
stos
dec
mov
ja
in
or
or
jne
sbb
filds
lods
jp
in
in
ja
ret
out
mov
outsl
pushf
repz
inc
mov
js
ret
aas
cmp
mov
or
out
xor
jmp
xor
lret
dec
dec
and
outsl
lahf
or
dec
mov
sub
jno
shlb
aad
push
add
mov
mov
pop
bndstx
jle
sbb
ljmp
mov
std
insl
sub
sti
sub
xchg
repz
cmc
out
jecxz
loopne
popa
fdivr
inc
shrl
or
ret
add
inc
cmp
lods
in
imul
in
xor
sub
adc
in
ljmp
adc
dec
fldt
lret
sarb
sub
rorl
divb
or
jp
test
lret
outsl
jmp
aam
dec
aam
insl
push
aam
iret
lret
movsl
daa
sahf
iret
adc
mov
call
subl
and
xchg
xor
rolb
push
nop
mov
cld
data16
mov
push
notl
mov
jecxz
clc
sub
xchg
mov
rcll
cmpb
sub
mov
inc
inc
out
in
pop
out
int
cmp
adc
push
sub
mov
or
jl
mov
mov
mov
std
lock
inc
or
and
sbbl
cs
or
outsb
std
push
lods
fdivr
dec
dec
les
test
mov
cmpl
lock
or
xchg
add
add
in
js
lcall
sub
fdivrl
sbb
mov
xor
shl
cltd
insl
or
lret
out
jne
inc
jb
mov
ljmp
mov
decb
jno
ficomps
xor
xor
imul
test
dec
cmp
jecxz
mov
jp
xchg
repnz
fidivrl
sub
std
inc
mov
cld
arpl
cli
add
fs
js
sbb
xchg
sub
sbb
dec
ret
adc
pop
cmp
cmc
push
jl
lcall
push
or
mov
xchg
inc
push
cmpb
in
aad
jno
bound
shll
and
je
push
mov
stos
mov
ss
loop
jp
clc
loopne
mov
icebp
mov
aas
cwtl
popf
addr16
and
add
daa
ficomps
test
popf
aam
cld
icebp
aam
pop
daa
popf
fcmove
and
int
bound
cmp
mov
fstl
ret
jmp
pop
fwait
jmp
and
testb
jns
xchg
fisttpll
sahf
add
adc
dec
push
jp
stos
adc
sub
arpl
ss
xlat
sub
pushf
add
pop
jg
faddp
aad
and
ja
mov
in
sub
stc
push
shlb
cmp
sarb
sahf
stos
es
push
pop
xor
cmc
xchg
clc
lock
xor
jb
xor
rolb
mulb
in
mov
hlt
mov
cld
pusha
cli
stc
fdivl
movsb
jmp
add
sbb
iret
sub
test
fildl
or
xchg
loopne
mov
cmp
jg
cmp
das
mov
stos
xchg
mov
mov
sub
data16
sub
mov
and
mov
xor
xchg
rcrl
inc
inc
ja
sbb
inc
int
push
lret
jp
push
fwait
xor
lods
cmp
fistpll
sbb
cmp
cmpsb
add
jmp
add
or
cmp
push
testb
pushf
push
mov
dec
out
pop
pop
sbb
jp
out
mov
lods
iret
xchg
movq
ja
addb
pop
sbb
enter
cmp
into
popa
xor
mov
push
dec
push
dec
mov
lret
ror
cmc
dec
cmp
or
daa
ss
pop
dec
push
pop
fisttps
fcmove
cmp
jnp
pop
sahf
imul
dec
jle
shlb
mov
rcr
inc
rcl
cmpsb
rcll
aaa
ds
mov
dec
mov
xchg
subb
lods
mov
loope
cmc
sbb
and
pop
fs
xchg
fisubs
mov
mov
pop
pop
into
xor
cs
imul
pand
fbstp
pushf
adc
mov
xchg
adc
adcl
out
dec
adc
push
pop
and
inc
imul
mulb
lods
xor
pop
jle
pop
shlb
pop
pusha
aam
ljmp
mov
rcr
sub
xor
or
ror
out
mov
sub
mov
mov
ja
jne
lods
jns
fs
lds
iret
jmp
ljmp
mov
push
cld
fsubp
ror
jmp
jns
or
in
sahf
shll
add
jl
jns
adc
inc
xchg
loopne
out
mov
sbb
ljmp
pop
inc
push
jae
push
cmp
fdivrl
mov
inc
sbb
and
js
fistpll
xor
lock
addb
jnp
aad
rorl
repnz
jbe
xchg
ds
loopne
insl
orb
xchg
dec
pop
mov
sahf
pop
xor
jmp
add
aad
xchg
push
xchg
mov
rcrb
pop
add
fnstsw
sbb
push
jp
mov
incl
push
cmpsl
xor
ret
pop
out
sbb
shlb
imul
xor
dec
xchg
xor
hlt
imul
inc
into
sbb
sti
ret
pop
shl
dec
fistps
mov
insb
loop
xor
push
dec
out
aam
int3
hlt
test
push
push
mov
aaa
jns
dec
fsts
jo
das
inc
leave
je
mov
outsb
aas
push
cmp
or
inc
aaa
jne
dec
adc
std
mov
notb
shl
fcoms
push
add
fistpll
fmuls
fstpt
inc
push
mov
cwtl
or
outsl
jae
pop
cmp
jmp
pop
dec
add
incb
fldl
aam
mov
or
inc
push
cmp
add
mov
lods
jmp
int
cmp
test
cwtl
cmp
xchg
enter
pop
shl
mov
push
rolb
ficoml
ss
dec
addr16
pop
in
cmpsb
jae
fldl
cmp
pop
rorb
mov
xor
dec
adc
mov
enter
adc
nop
mov
mov
pushf
es
jecxz
inc
jne
push
dec
aaa
sahf
and
movsb
dec
mov
imul
hlt
mov
pop
outsb
rorb
mov
or
cld
mov
call
xor
pushf
fsubl
test
sbb
arpl
lods
xor
test
xchg
hlt
mov
sub
sub
das
cmc
insl
ret
ret
orb
pop
xchg
adc
in
pushl
push
sbb
mov
jecxz
cld
ja
mov
inc
imul
mov
scas
mov
cwtl
aad
cld
xchg
icebp
pusha
ja
cwtl
dec
push
adc
pop
xchg
mov
mov
cmp
mov
add
mov
pushl
sti
cmp
jp
inc
sbb
fdivrs
pushf
cmpsl
idivb
mov
xchg
enter
adc
xchg
pop
push
leave
or
cmp
call
inc
pushf
test
shl
or
mov
adc
mov
ljmp
sbb
sbb
jo
mov
mov
cmp
cld
out
dec
xchg
in
push
sbb
ds
mov
ret
fistpll
adc
sub
xchg
fisubl
fisubrs
sahf
add
mov
xchg
sbb
les
pop
jne
sti
sahf
xlat
into
mov
push
mov
adc
movsl
sbbl
mov
bound
imul
int
mov
cmp
test
movsb
pop
lea
jmp
je
subb
push
sub
and
test
leave
add
sub
nop
push
std
gs
cwtl
enter
into
xchg
and
js
fadds
hlt
stos
mov
push
mov
test
stos
fldenv
push
lret
out
cltd
jbe
jmp
sub
mov
inc
out
dec
gs
popf
pop
test
sbb
daa
pop
stos
xchg
fdivs
mov
ds
repnz
test
pop
xchg
in
or
mov
xchg
sbb
sbb
and
inc
lods
mov
xor
testb
orl
sbb
out
mov
ror
aam
andb
fdivr
lret
mov
pop
sarb
add
sbb
mov
call
arpl
rol
push
adc
sbb
xor
out
mov
inc
sbb
and
mov
adc
push
mov
outsb
pusha
cltd
add
cmpb
xchg
iret
xchg
cmpb
push
fcoms
incl
int
js
mov
add
sub
mov
xor
add
arpl
hlt
jge
aas
xchg
fimuls
cmp
inc
repz
ss
adc
stos
scas
or
ja
cld
xchg
add
xchg
push
xor
pop
out
mulb
and
xchg
push
filds
adc
cltd
cmp
in
std
or
test
in
les
jge
xor
mov
imul
sbb
xchg
hlt
repnz
dec
movsl
cmpsb
ss
lret
imul
adc
loope
ds
loop
push
inc
pop
cli
hlt
les
push
xchg
inc
in
xor
cmp
nop
mov
add
ljmp
stos
xor
mov
out
cmc
setae
scas
mov
adc
cmp
push
je
in
mov
rcrl
jge
xchg
jmp
sbb
push
xorb
push
loope
rorl
adc
and
pop
fst
inc
call
cwtl
adc
enter
in
inc
mov
clc
iret
stos
into
add
jb
pusha
push
sub
mov
mov
xchg
popf
in
sub
lods
mov
adc
sbb
pushf
adc
and
imul
and
shlb
sbb
shlb
int3
mov
rorl
sbb
xchg
push
push
jg
pop
cli
push
cmc
test
test
jae
sti
cmpsl
psubb
sbb
cmp
lret
xor
test
aaa
sbb
imul
sbb
lods
mov
push
xor
popa
es
sbbb
lods
push
je
mov
stos
sub
sbb
ret
out
pop
ds
add
jno
pop
mov
sbb
pop
inc
mov
sbb
xchg
inc
adc
mov
outsb
xchg
xlat
ss
loopne
pusha
or
cmp
std
loope
sbb
fnsave
pop
sub
push
mov
xor
flds
cmpsl
or
pop
cmp
std
mov
in
cmp
int
dec
enter
fsts
fmuls
daa
mov
jp
cmp
fistl
cmp
fists
lahf
or
push
xor
hlt
inc
addl
das
jbe
mov
dec
mov
fisubrs
or
mov
cmp
addb
sbb
cmc
bnd
bound
mov
cmp
xchg
enter
icebp
mov
dec
fstpl
push
jg
jne
add
xchg
xchg
or
mov
jge
xchg
push
or
outsb
mov
nop
and
movl
int3
enter
roll
mov
mov
mov
mov
mov
stos
mov
add
repz
sub
inc
mov
fnsave
stos
movsb
das
xchg
and
je
clc
cmp
mov
ret
dec
cmpsl
sbbb
mov
mov
mov
or
cmp
adc
mov
inc
or
lods
rol
test
jnp
push
gs
mov
test
mov
lahf
add
fimull
or
inc
mov
int3
pop
cmc
dec
mov
push
sahf
xor
dec
jecxz,pn
es
fisubrl
inc
and
in
or
orl
cmpsl
in
sbb
mov
jle
imul
test
gs
jae
dec
aad
ja
lcall
iret
cli
shrb
leave
cli
mov
fstpt
and
or
inc
es
movsb
mov
dec
mov
lods
cmp
sbb
dec
fwait
es
cmp
lods
or
push
xor
mov
test
sub
adc
inc
lret
mov
xchg
sbb
mov
insl
inc
push
fildll
xor
inc
mov
xchg
stos
dec
inc
and
xchg
add
ss
pop
mov
push
cmpsb
out
sbb
rorl
clc
lea
js
jmp
push
dec
ds
lods
cmp
cmpsl
fwait
loop
xchg
jge
fcomps
rcrl
cmp
lret
repnz
mov
fidivs
sub
push
inc
js
int3
cmp
shl
xor
fistpl
add
mov
adc
mov
aad
cltd
xlat
lcall
sbb
test
xor
icebp
ljmp
jns
push
sub
lahf
mov
inc
lock
aad
int3
push
mov
fcomp
mov
cmp
jns
rclb
jle
xchg
dec
sbb
and
sbb
jmp
pop
cltd
icebp
jmp
jl
or
iret
mov
sub
sub
pop
mov
stc
movsl
cmp
imul
pop
mov
pop
int3
dec
adc
jg
and
mov
fnstcw
fdivp
je
mov
jo
lahf
imul
pop
xor
sub
orb
mov
jns
adc
xor
dec
jmp
push
dec
sarl
and
hlt
sub
faddl
dec
aad
mov
adc
ret
pushf
jb
add
push
cld
pusha
mov
xor
mov
loopne
mov
sbb
sub
inc
mov
pop
cmp
imul
imul
popa
xchg
dec
xor
inc
sbb
jl
push
cs
dec
loopne
scas
jmp
scas
mov
sub
in
mov
cmpsl
sarl
cld
fwait
mov
push
mov
jmp
into
sub
sbb
pop
push
shlb
jnp
scas
shl
inc
mov
cmp
mov
pop
jbe
insb
mov
pop
dec
xor
push
jle
mov
xor
inc
test
xchg
inc
nop
xor
jns
setns
push
int
and
sbbb
lock
out
bound
ret
fld1
cmp
cmp
xor
mov
shl
jge
mov
or
mov
inc
je
fs
push
insl
jnp
jbe
mull
ds
jo
jle
int3
rorl
or
nop
rcrl
test
mov
dec
in
mov
xbegin
stc
jne
icebp
ret
sub
nop
jmp
sbb
into
clc
mov
imull
jae
dec
in
and
in
jmp
std
push
mov
sbb
gs
jbe
push
adc
and
pop
ret
or
test
leave
and
mov
sub
mov
andb
outsb
js
push
add
or
push
add
gs
mov
loope
jp
add
js
das
pusha
adcb
fwait
js
push
sub
mov
push
mull
push
cld
pop
cmp
mov
dec
xchg
xchg
xor
or
jg
mov
cmpsl
pop
xor
xor
gs
jmp
pop
jmp
mov
je
pop
clc
sarl
pop
pushf
pop
push
mov
fnstcw
or
cmpsb
mov
scas
and
or
pmaxsw
jo
cld
inc
repnz
cmp
xchg
std
adc
mov
es
mov
movsb
daa
mov
roll
stc
sbb
push
adc
ljmp
lret
outsl
out
rcrl
imul
push
and
out
mov
clc
roll
sbb
xchg
rolb
lahf
fisttpl
cwtl
stos
dec
xchg
dec
xchg
into
flds
jns
ds
push
push
in
bts
into
cmpsl
rcrb
push
adc
push
dec
loopne
hlt
imul
push
mov
mov
inc
into
mov
addb
js
jmp
xor
xor
mov
ds
and
push
pop
cmp
inc
jb
iret
mov
pop
mov
sub
cs
mov
mov
adc
pop
lea
mov
or
in
mov
cltd
outsb
add
or
shrl
adc
iret
mov
fwait
mov
jne
inc
aas
nop
cmp
rcrb
and
add
cmp
push
xchg
inc
xchg
out
jne
mov
cmpsb
xchg
xlat
xchg
inc
aas
xchg
fisubrl
out
mov
in
out
loope
mov
mov
aad
decb
jae
out
pop
mov
xchg
lds
xor
inc
lret
mov
dec
lods
xor
mov
jo
cmc
jbe
std
clc
movsb
push
xchg
mov
mov
push
sub
icebp
adc
pusha
test
push
leave
fists
add
or
and
xorb
fdivr
daa
int
mov
outsl
les
stc
out
xorb
fmul
enter
push
xchg
mov
inc
enter
sbb
inc
xchg
les
lcall
push
repnz
push
jl
out
vcvtss2sd
pop
jle
jno
mov
lds
mov
xchg
and
pusha
adc
push
mov
ror
shlb
iret
fistpll
test
and
icebp
movsl
push
int
in
adc
stos
in
lcall
addr16
pop
mov
cmc
adc
push
call
sbb
in
dec
mov
sbb
or
push
mov
and
cmp
xchg
mov
fimull
mov
pushl
ret
rcrb
xor
cltd
std
popf
int3
push
jbe
push
rclb
jp
ss
mov
mov
jl
pop
sbb
cmp
negl
pop
repz
push
xchg
scas
jae
jae
mov
sub
mov
insb
cmp
sbb
ss
and
cltd
loopne
sti
sbb
and
es
jle
mov
roll
addr16
fs
mov
stos
jo
arpl
add
dec
pushf
sbb
fcompl
int
xor
imul
sarb
outsl
adc
mov
adc
jns
xchg
insl
xchg
xchg
out
mov
sbb
insl
cmp
fiaddl
repz
je
cmp
sbb
ljmp
mov
jo
sbb
idivl
xor
enter
stc
sub
loope
ljmp
adcb
push
pop
ret
addb
xor
aad
ja
aam
adc
lods
sub
outsl
jl
fstpl
dec
push
mov
dec
sub
stc
and
shlb
ja
jb
or
cmp
orb
jge
aad
push
pusha
push
loop
mov
out
xchg
or
inc
inc
sub
in
mov
pop
fcoms
loope
sub
mov
push
popa
lds
aad
outsl
pop
aad
sbb
pop
jns
and
or
sbb
std
std
and
clc
push
js
xchg
lods
push
cmp
xchg
lea
outsl
or
adc
or
leave
mov
out
mov
xorl
add
pop
jbe
dec
clc
xor
lret
pushf
dec
rorl
enter
sub
fistl
roll
xor
jmp
jae
sahf
push
enter
and
or
scas
andb
jge
mov
out
sbb
xchg
clc
ja
xor
push
pusha
mov
inc
pop
or
lcall
xchg
lea
push
mov
shll
popa
sti
lock
fwait
scas
test
cmpl
outsb
inc
iret
sub
mov
std
movsl
cmpsb
rolb
xor
scas
push
daa
les
sub
mov
xor
clc
stos
adc
fwait
push
add
xor
stos
in
add
fnstcw
in
jmp
push
xchg
and
jno
mov
stc
in
dec
loope
mov
fldcw
push
cmpsl
or
lods
and
inc
outsw
pushf
xchg
or
or
movb
dec
hlt
dec
cmp
inc
pop
mov
aam
fldenv
rcll
dec
add
test
sahf
inc
xchg
adc
mov
loopne
test
fstl
aam
cltd
aam
rolb
cwtl
pop
mov
mov
nop
adc
dec
and
sbb
pop
cwtl
pop
aaa
pop
pop
xor
scas
ss
clc
daa
cmp
in
mov
dec
pop
adc
dec
sbb
ss
xchg
push
inc
add
loope
pop
shl
lods
aad
aam
insl
xchg
mov
ficompl
jae
jecxz
dec
sbb
jnp
xor
cltd
pusha
aad
repz
jbe
mov
or
jmp
js
adc
loop
and
mov
in
mov
or
adc
mov
adc
shlb
or
ljmp
out
xor
sahf
jno
stc
pop
add
or
push
dec
movsb
mov
out
or
jb
push
mov
idivl
mov
fsts
pop
movsl
fs
and
inc
xor
push
idiv
xchg
nop
push
pop
sbb
stos
push
jmp
lea
sbb
ljmp
pop
sbb
out
test
push
xor
pushf
dec
cmpsb
xchg
insb
cwtl
mov
daa
mov
out
lea
lret
call
sbb
mov
ljmp
ret
jp
pop
pop
js
ficompl
xchg
pop
mov
push
push
mov
jp
pop
mov
shll
movsl
jo
mov
dec
xchg
xorb
jbe
or
adcl
pop
mov
and
pop
enter
jmp
jbe
insl
sub
js
lcall
ret
xlat
xchg
or
mov
stos
in
repnz
inc
pop
icebp
jae
push
push
cmpsl
in
hlt
jecxz
push
ds
add
shll
mov
lcall
xor
add
push
push
dec
fiadds
loopne
cli
push
les
imull
cmp
jae
hlt
push
and
in
ja
fsubl
data16
lods
dec
xchg
cmpsb
jg
mov
push
add
jge
idivb
les
aam
das
hlt
aad
movb
cli
add
push
mov
std
pop
nop
filds
cmp
push
daa
lahf
mov
test
lock
dec
fs
cmp
jmp
dec
fld
rcll
rol
mov
sub
gs
pop
inc
ds
add
xchg
adc
inc
imul
out
dec
mov
andb
xchg
cld
es
roll
lock
sub
outsl
es
jnp
lods
stos
outsb
lret
sahf
stc
shll
out
sbb
fmulp
xchg
stos
fnstcw
jle
add
aas
subb
or
add
test
lock
mov
fisubl
jp
add
shll
push
mov
mov
inc
pop
lods
or
jo
inc
mov
call
push
jae
cld
mov
cmc
out
adc
sbb
inc
adc
ljmp
imul
stc
fldt
and
loope
int
cmp
jg
rorb
mov
inc
cmp
add
jo
scas
xor
andps
dec
push
mov
int
pop
or
inc
pop
mov
test
jne
fcomi
mov
adc
push
pop
xor
ja
jge
movb
stc
in
leave
xchg
push
lahf
cmp
mov
mov
jno
loope
jg
int3
aad
dec
arpl
decl
cmpsl
adc
cmc
das
lea
ret
inc
mov
push
mov
arpl
pop
enter
sub
jle
mov
in
lock
mov
sub
sub
rorl
mov
xchg
add
jecxz
ja,pt
test
sub
add
dec
xor
sbb
mov
or
mov
lea
cltd
in
pop
add
or
fstl
stc
in
add
sub
fs
pop
fmulp
or
pop
lock
imul
jne
mov
cltd
mov
sub
push
out
cwtl
cli
mov
mov
test
mov
int
xor
dec
frstor
into
test
sbb
push
shl
jb
dec
jle
push
mov
sbb
mov
mov
push
mov
and
cmc
xorb
rcrl
sub
push
leave
jmp
inc
dec
es
in
push
stc
mov
mov
xor
xchg
outsl
dec
pop
cli
int
sbb
fwait
int
addl
xor
mov
fdivs
sub
jo
testb
mov
push
mov
nop
sub
and
jg
ret
sbb
sbb
aam
pop
pop
fimull
add
les
ss
mov
vmovss
push
rcrl
fadds
fcomp
push
cmc
cmpsb
inc
jecxz
mov
das
mov
pop
inc
mov
mov
cltd
jns
push
pop
cmc
imul
das
adc
mov
pushf
xor
int3
xor
lcall
jecxz
lahf
add
mov
push
xor
xchg
dec
push
adc
cltd
mov
dec
out
mov
fcmovne
outsl
cmc
xchg
mov
ljmp
xchg
insl
xor
mov
out
xor
enter
cmp
jns
fistpll
dec
andl
mov
andl
jle
push
sub
sbb
lock
or
and
stos
or
xor
fcmovne
pop
aam
das
in
ret
leave
add
in
mov
ret
fistps
dec
repz
inc
dec
sub
pushl
jmp
or
pop
mov
adc
cmp
daa
iret
stc
xchg
ss
js
iret
popa
push
psubw
xlat
dec
sbb
mov
push
pop
sub
inc
jb
out
adc
scas
call
cmpsb
scas
lock
out
xchg
jbe
xor
mov
mov
or
test
or
iret
sbb
out
enter
xlat
mov
lcall
sub
scas
pop
popa
lcall
pop
ss
xor
inc
xor
inc
inc
daa
dec
std
in
rcr
sahf
mov
lret
push
mov
ja
dec
jp
sbb
out
fisubl
jge
ret
imul
sbb
pop
iret
stos
call
outsb
jo
cmc
sub
cwtl
push
adc
andl
adc
or
mov
call
pop
ljmp
dec
push
pop
mov
and
shl
out
loopne
adc
and
xor
int
out
pusha
ljmp
sti
call
adc
mov
test
popa
sbb
int3
pop
push
sub
in
sbb
sti
into
or
cltd
and
xchg
inc
or
fst
cmp
out
jae
inc
imul
fsubrs
popa
popa
mov
jo
addr16
repnz
ficomps
inc
js
or
dec
push
push
pop
outsb
lret
ret
xor
iret
les
fucomi
lock
ja
jmp
aad
fwait
sbb
pop
ret
xchg
enter
jne
xor
xorl
lret
lods
jbe
out
mov
and
and
xchg
pusha
das
adc
pop
pop
add
jne
in
ficomps
insb
adc
mov
jnp
scas
mov
mov
jns
mov
sub
or
nop
mov
mov
jle
dec
mov
jae
cld
sbb
aam
adc
rcrl
addr16
iret
adc
sbb
lods
xchg
mov
fnstcw
pop
enter
in
ficompl
mov
inc
out
sti
push
sbb
inc
or
aam
popf
daa
cmp
call
cmp
sbb
mov
jb
outsb
push
sbbb
push
inc
mov
dec
loop
in
or
stos
ds
out
leave
lods
and
jmp
inc
mov
jmp
into
inc
and
jne
sub
jnp
bound
ja
dec
mov
and
movb
jne
imul
std
insb
push
cltd
leave
cmp
mov
push
or
mov
mov
loop
outsl
mov
xor
lock
repz
push
jb
sbb
pop
ja
xor
pop
faddl
pushf
mov
xchg
dec
fs
hlt
addr16
rcrl
stos
insb
ss
lret
stos
push
or
jae
inc
jno
fsubrl
fadd
dec
pushf
mov
std
mov
cmpsb
out
inc
pusha
jo
outsl
xchg
stos
ret
mov
es
stos
xor
in
shlb
add
movsb
pop
mov
fxch
ds
jp,pn
add
xchg
sbb
call
cld
test
push
add
shll
divl
out
and
fisttpl
aam
xor
jl
and
dec
fwait
jne
ljmp
xchg
mov
pop
push
loop
mov
das
pop
jb
add
fistps
fisttps
xchg
mov
cmpsl
sub
pop
outsb
or
push
mov
xchg
icebp
aam
rcrb
mov
sub
outsb
mov
call
jbe
sub
cs
mov
out
shl
add
sub
lods
xor
in
add
and
mov
jb
imul
test
mov
addr16
push
loope
jbe
jmp
cmp
imul
push
mov
js
xchg
xchg
aaa
jg
sbb
in
stc
lock
inc
mov
xchg
es
dec
push
add
mov
pushf
fstps
pop
adc
imul
shrb
daa
pop
testb
subb
xchg
daa
push
xor
loopne
popa
pop
push
fidivrl
pop
nop
mov
cmp
lods
push
out
in
insb
add
ficoml
out
and
push
sbb
add
fdivs
aam
test
or
shrb
pushf
test
mov
and
and
js
adc
mov
outsl
stc
cmp
adc
and
sub
fcomp
into
fs
cmpb
rorb
mov
rcr
cmpsl
sub
ficoms
and
dec
adc
xor
jnp
cmp
fs
bound
adc
mov
hlt
push
daa
jae
xchg
sub
inc
or
and
mov
xchg
lret
gs
fwait
cmp
aaa
sub
push
or
shl
nop
divl
fisttps
sarb
pop
imul
push
mov
mov
adc
rcl
xchg
daa
adc
adc
xor
pop
dec
fwait
aam
cmc
rorb
shrb
lds
push
mov
stos
in
jno
movsl
or
sub
sub
sahf
cmp
add
xchg
or
sti
shrl
jge
in
dec
xchg
sti
std
sub
cmp
dec
and
ss
enter
dec
pop
mov
mov
call
or
cmpsb
or
mov
xor
outsl
xchg
xor
xchg
mov
add
xchg
es
aaa
rcrl
adc
push
mov
jae
sbb
add
loope
gs
xor
pop
out
aaa
icebp
mov
jne
int3
addr16
sti
lahf
ror
mov
cmp
pop
xchg
test
inc
sub
mov
and
adc
cmpsb
sub
pop
les
xchg
mov
jne
fimuls
or
jecxz
and
popf
sub
imul
xor
inc
dec
jp
pusha
adc
fs
movsb
roll
pop
mov
sub
push
ja
cmp
mov
mov
sahf
inc
or
mov
shlb
pop
std
int
add
imul
or
xlat
sbb
outsl
testl
mov
pop
or
cmp
jg
push
in
mov
xchg
sub
repz
ret
shrl
inc
push
push
pop
adc
pop
mov
ss
pop
pcmpgtb
inc
inc
aas
lea
hlt
xchg
lock
hlt
mov
and
cmp
fwait
pop
ss
lds
mov
hlt
xor
lds
test
in
push
fsts
popa
cmp
mov
pop
cltd
out
or
inc
stc
adc
iret
mov
fcomip
inc
inc
xchg
mov
mov
pusha
adc
test
outsl
push
in
inc
in
push
or
mov
cs
push
jns
rclb
mov
ds
pop
xchg
mov
cmp
lock
stc
xor
imul
dec
loopne
jno
and
cltd
jno
cwtl
cmp
es
int3
push
scas
add
loope
add
sbb
inc
dec
int3
pop
lret
add
jg
std
mov
cltd
insb
sbb
stos
lcall
mov
inc
enter
xchg
std
sbb
lods
mov
inc
mov
aam
jne
jl
mov
xor
push
inc
pop
fstpl
sub
fucom
pop
enter
dec
mov
cld
push
test
mov
repnz
cmp
call
xchg
dec
pushf
bound
imul
gs
movsb
mov
jg
sub
bound
mov
or
push
pop
cmp
movsb
aad
pop
nop
adc
xchg
sub
and
xlat
pushf
int3
and
xchg
dec
push
jnp
push
insb
scas
inc
dec
push
repnz
fucomp
call
int
cltd
int3
mov
jecxz
inc
test
and
mov
nop
inc
dec
test
and
std
imul
lock
sbb
pop
sub
sub
mov
push
sti
data16
sbb
aam
inc
pop
jno
shll
cmpsb
das
jle
mov
movb
popf
and
rep
shlb
inc
sub
or
mov
xchg
mov
and
pop
jmp
xlat
fwait
mov
lea
inc
pop
outsb
dec
fbld
aaa
mov
andb
lods
outsl
in
out
xchg
push
sub
add
mov
inc
jno
bound
sbb
jecxz
jae
cmc
cmp
or
int3
pop
xor
xlat
es
xchg
clc
sbb
jmp
div
pop
or
in
mov
lahf
and
xor
lahf
pushf
mov
push
or
add
cmc
pop
mov
in
cmp
xorb
adc
adc
cmc
sub
jnp
cmpsl
xchg
and
sub
push
rep
adc
mov
out
sub
mov
das
mov
sbb
cmpsb
pop
mov
cmp
iret
pop
leave
in
jl
jg
jns
jne
outsb
mov
pusha
out
fbstp
movsb
stos
hlt
adc
adc
push
inc
rcrl
sahf
cmp
fs
mov
pop
test
scas
nop
fistpl
lods
es
mov
lock
bound
cs
lahf
add
inc
fwait
mov
jno
js
jmp
push
pop
mov
push
xchg
cmc
pop
push
int3
out
xchg
xor
icebp
lds
push
xchg
cmp
rcll
inc
test
xlat
xor
mov
pop
imul
ret
mov
mov
icebp
mov
or
push
sbb
sbbb
cmpsb
or
cmpsb
cmp
jne
xchg
mov
and
mov
jmp
jae
and
xor
inc
data16
cmc
test
inc
test
scas
cmpsb
into
xchg
shll
aaa
loop
sub
mov
rep
pop
pop
call
aas
xchg
xchg
jnp
jmp
movsb
adc
add
mov
jns
add
jp
xor
pop
sbb
or
mov
add
andb
aas
lock
dec
sub
push
and
insl
pop
aas
adc
mov
je
test
jmp
mov
push
out
jns
insb
push
adc
fdivrs
push
adc
inc
and
pop
push
pop
mov
adc
aas
ret
add
xchg
leave
or
mov
icebp
ss
mov
cmp
cmpsb
xchg
cmpsb
bound
test
es
aaa
iret
mov
mov
cmp
sti
mov
roll
js
lret
shl
inc
xor
nop
sub
in
xor
loope
call
scas
mov
icebp
mov
push
mov
rol
lods
out
adc
call
mov
xor
js
orb
scas
sub
sbb
pop
mov
arpl
loope
lea
cmp
push
pusha
sbb
cmp
mov
add
xor
cli
cli
or
mov
ror
ret
pop
xchg
mov
test
mov
and
call
daa
pop
pop
enter
bound
mov
lock
sarl
call
pop
in
roll
aaa
cmc
aas
push
fdivr
pusha
out
or
ljmp
xchg
push
ficomps
pop
jnp
or
add
dec
xchg
sub
inc
in
movsb
xlat
adc
test
pop
out
loop
rolb
daa
out
mov
lea
cmpsl
lods
cmp
loope
jp
cmp
aam
test
aad
adc
push
push
in
pusha
stos
cmc
andb
mov
fld
fld
std
andb
insl
cmp
mov
gs
lods
es
mov
mov
sbb
mov
sahf
jmp
fstp
test
jle
out
repnz
enter
iret
rcrb
pmaddwd
call
sbb
testb
int3
orb
pop
xchg
and
inc
pop
sahf
nop
push
data16
enter
imul
jecxz
in
iret
push
pop
inc
jmp
fsubrl
out
sbb
pop
jo
lahf
ds
or
xchg
dec
fnstsw
fdivrl
lock
lea
mov
cltd
sub
mov
pushf
insl
data16
mov
jp
insl
lods
cmp
loopne
push
pop
jo
mov
adcl
lock
add
std
xchg
scas
into
aas
mov
add
repz
add
rorl
cmp
pop
push
sti
insb
dec
add
movsl
aas
pop
outsl
sbb
xor
pop
or
mov
daa
add
mov
dec
shll
and
jp
out
jmp
test
sar
stos
scas
push
iret
aas
shll
into
loopne
bnd
imulb
je
hlt
mov
shlb
nop
mov
lods
pop
add
push
fcoms
xor
inc
movb
mull
add
pop
fnstsw
sarb
sub
or
sahf
pushf
push
mov
xlat
add
ucomiss
imul
inc
push
cmpsb
out
adc
adc
xchg
mov
adc
inc
aaa
inc
test
out
sub
adc
insl
jnp
addr16
jge
addr16
mov
enter
xor
lret
mov
add
cwtl
jmp
mov
cltd
nop
iret
fists
add
mov
jae
fisubrl
out
xor
lods
in
adc
mov
subl
aam
stos
and
mov
adc
cmpsb
push
push
inc
push
jg
stc
insl
pushf
inc
or
cld
sahf
adc
cli
rcll
adc
sub
test
gs
jno
clc
fstl
std
mov
push
pop
sbb
mov
xchg
sbb
sbb
or
adc
test
jge
sub
jmp
leave
mov
lret
sub
scas
inc
or
in
mov
jp
leave
std
repnz
mov
ljmp
or
xorl
mov
and
imul
sub
push
icebp
mov
pop
daa
sarl
push
mov
mov
push
popf
shrl
fs
into
jno
scas
pop
lret
or
es
out
loope
push
xchg
je
popa
mov
cmpsl
bound
push
sbb
arpl
mov
rorl
xlat
lock
cmc
rclb
popf
or
dec
adc
cmp
adc
lcall
das
push
sahf
xor
enter
dec
out
or
out
sbb
add
sbb
jp
sbb
outsl
js
push
adc
mov
subl
hlt
movsb
lret
das
lret
popa
mov
int
pop
xlat
lret
jle
or
cld
or
jl
push
adc
mov
pop
ja
aam
add
jo
jl
js
push
add
sbb
ds
push
pop
mov
dec
mov
pop
inc
sahf
mov
push
jb
shlb
in
les
js
push
int3
cld
jp
je
inc
cltd
test
imul
xorl
loop
pop
add
add
mov
mov
push
int
dec
dec
or
mov
xlat
xor
lods
mov
lods
fsubl
push
enter
es
inc
pop
xchg
imul
sub
pop
sbb
jp
outsb
adc
pop
out
mov
in
ljmp
rorl
in
cmp
outsl
cwtl
mov
xchg
stos
jae
push
xor
stos
xor
retw
filds
in
pop
ror
or
fimuls
and
sbb
add
or
pop
dec
fdivrl
mov
mov
aam
push
xchg
mov
fsubrs
bound
jne
xchg
cmp
cwtl
pop
mov
inc
std
add
test
jae
popa
frstor
xchg
aaa
jo
iret
pop
mov
rolb
cltd
dec
xor
pop
scas
inc
test
popf
pushf
mov
jo
mov
data16
pinsrw
pop
scas
je
push
xchg
scas
ret
adc
inc
cmpsl
add
or
popf
daa
xchg
jno
sub
mov
shlb
stos
lods
inc
sbb
das
test
xchg
add
add
rcrl
loope
xchg
lods
sahf
repnz
out
int3
in
fs
ja
xchg
fsub
daa
bswap
js
pop
jns
or
sbb
jg
addr16
decb
adc
mov
ficompl
xchg
lea
testb
and
test
sub
add
adc
jno
xor
jle
aam
scas
pusha
xchg
pop
mov
ljmp
dec
mov
loop
repz
lahf
pop
les
inc
mov
xchg
out
das
or
lock
jl
aam
mov
test
push
je
lcall
gs
daa
mov
xor
cmpsl
pop
dec
pop
js
ds
push
sub
sub
push
ficoms
cmpsb
iret
loope
cltd
xchg
xor
in
orl
xchg
xchg
pop
fistpll
push
notb
roll
lods
push
adc
pop
jle
mov
cli
lret
stos
ljmp
mov
jl
sub
pop
lds
xor
push
xor
daa
lods
fldcw
jno
push
cmpsl
inc
cmp
les
jmp
negb
test
insb
add
call
fwait
outsl
std
mov
pop
jle
lock
faddp
out
or
insb
inc
and
lret
jnp
mov
icebp
and
fsub
aad
mov
lcall
repnz
adc
nop
inc
pop
and
sub
bnd
int3
adc
push
mov
fldcw
mov
xchg
dec
push
jo
mov
cmp
data16
sub
ret
jl
and
iret
or
ja
stc
sub
xor
pop
mov
adc
jne
pop
dec
sbb
stos
cltd
mov
jno
fs
or
and
inc
cmpsb
sbb
add
and
pop
ss
cmp
pop
rcrl
mov
jecxz
shlb
jo
fidivrl
fidivrs
push
test
mov
sbb
movsl
or
lahf
and
mov
loope
repnz
adc
pop
inc
ret
xlat
jno
stos
dec
inc
imul
shlb
addb
insl
loope
push
sti
imul
jnp
cltd
mov
lods
sbb
scas
jnp
inc
cmp
pushf
mov
xchg
arpl
push
pop
mov
dec
add
cmp
adc
mov
in
jbe
neg
mov
lret
leave
fisubs
imul
mov
jns
pcmpgtw
stos
into
inc
jg
pushf
mov
test
aad
out
orb
xor
pop
iret
xchg
mov
add
and
popa
rorl
data16
sub
frstor
lea
dec
add
outsl
cli
xor
adc
cwtl
cmp
imul
test
les
movsl
out
add
mov
sbb
add
mov
sub
popa
pop
xchg
inc
mov
sub
pop
iret
scas
mov
or
jle
xor
out
lcall
repnz
rolb
adc
push
je
out
inc
and
cmp
adc
mov
icebp
daa
pushf
push
mov
lcall
xor
insl
hlt
aas
push
aad
jns
fldt
or
arpl
fidivl
icebp
inc
mov
sub
or
inc
pop
push
jecxz
imul
sub
data16
push
mov
sahf
fimuls
ret
pop
rol
repnz
test
cld
pop
cmc
and
sub
lahf
insb
mov
mov
sub
out
mov
jnp
addr16
test
fucomi
test
mov
and
mov
popf
imul
cltd
insb
mov
mov
mov
jno
xchg
test
sbb
daa
add
cmp
lcall
xor
pop
das
out
dec
lods
pop
jno
dec
cwtl
sbb
lods
xor
mov
mov
adc
cmp
fmuls
lret
loopne
push
push
mov
jmp
xchg
sahf
hlt
daa
xchg
lock
sub
adc
fs
jmp
push
jne
sarb
loopne
mov
clc
pop
lods
out
mov
sub
cli
pop
jecxz
stc
loope
fs
loopne
sahf
and
inc
stos
popa
lahf
inc
ret
xor
stc
mov
mov
pop
cmc
or
les
pop
mov
push
pop
ret
shll
je
jle
xchg
call
in
cmp
inc
mov
cmp
fbld
movsb
les
lcall
jmp
xor
dec
stos
push
incb
call
cmpsl
int
iret
mov
imul
aam
mov
inc
jne
xchg
push
loop
add
out
iret
lods
cmp
jne
inc
jp
imul
movsl
jle
fwait
push
leave
jae
jbe
lods
movups
psubw
push
in
push
scas
lock
psubusw
in
pushf
or
and
cmp
arpl
mov
mov
testl
clc
pushf
push
les
inc
and
and
sbb
jge
ret
mov
ret
push
push
push
ret
jecxz
pop
mov
dec
aam
sbb
popf
in
mov
jecxz
adc
adc
testl
movsb
in
mov
mov
cmp
pushf
repz
imul
or
roll
and
popa
mov
and
and
pop
stos
adc
arpl
xchg
aam
popa
fildl
shlb
push
jb
push
inc
fnstsw
sub
movsb
push
ss
lret
aad
pusha
cmp
xchg
push
dec
pop
sub
xchg
xchg
in
jge
mov
mov
insb
jecxz
jo
push
sbb
inc
neg
andl
ficoml
add
ds
lds
mov
and
or
mov
subb
add
adc
pushf
into
repz
adcl
sarl
mov
and
stos
nop
mov
rcll
push
cmp
ret
sbb
jle
mov
mov
dec
adc
mov
xor
cmpsb
les
xor
ss
adc
push
loop
ja
inc
int
repnz
popf
outsb
inc
pop
int3
jl
mov
loop
push
mov
sbbb
pop
jae
cmp
test
cmp
and
lds
mov
loop
xor
xchg
pusha
jnp
mov
insb
aaa
adc
popa
jb
sahf
lahf
mov
push
insb
movsl
sar
stc
jle
cmp
xchg
xchg
cmp
lods
adc
cmp
lods
sub
out
cmp
scas
scas
fs
fidivrl
sbb
add
mov
inc
dec
pop
ja
push
push
cmpsb
gs
push
imul
inc
repz
mov
scas
mov
dec
lcall
lcall
inc
test
in
int
hlt
test
gs
cmpsl
cli
addb
pop
lret
pushf
stos
sbb
dec
es
add
outsl
sub
mov
cmp
iret
xor
pop
cmc
xchg
jmp
fcomps
into
xchg
or
xor
gs
or
loope
out
rol
fdivs
xchg
movsb
nop
jae
lcall
pop
aas
ret
jbe
std
inc
xchg
lods
add
lods
or
fiadds
mov
mulb
pusha
imul
inc
push
jns
jbe
and
and
or
jl
cli
mov
jns
test
fs
and
add
jp
inc
mov
mov
insl
cld
inc
cmc
fldcw
or
inc
fnstcw
mov
and
xor
xchg
insl
lcall
mov
mov
sbb
inc
cwtl
les
pop
push
mov
add
mov
inc
testl
push
scas
sbb
add
andl
push
xchg
repnz
pop
add
inc
sub
pop
and
jp
in
adc
scas
push
lock
push
jecxz
in
cmp
mov
xchg
lret
rcrl
cwtl
in
stc
lcall
je
push
fxch
dec
divl
or
sarb
cwtl
out
repnz
or
sar
mov
mov
das
adc
lret
lea
or
push
cltd
pop
and
ret
sahf
scas
imul
mov
into
std
pop
fwait
sbb
icebp
pop
enter
mov
dec
xor
push
andl
sub
jl
sbb
cmp
pop
xchg
mov
pushf
repnz
icebp
clc
xor
inc
push
xor
xor
push
jle,pt
into
fiaddl
cmp
add
pusha
add
int3
scas
mov
xor
jnp
lock
and
xchg
cmp
jno
pop
mov
mov
jno
adc
push
xchg
popf
pop
iret
les
imul
xchg
or
pop
dec
inc
lods
movsl
xchg
pushf
and
pop
js
shlb
push
mov
arpl
fxch
les
aam
leave
xor
pop
jno
data16
and
sub
fsub
jb
arpl
in
sub
lcall
stos
xchg
pop
adc
push
cltd
mov
and
jecxz
ds
stos
es
dec
shrl
push
repz
out
mov
lret
pop
insl
pop
push
stos
in
test
or
pop
icebp
scas
and
sbb
ja
xlat
sbb
inc
cmpsb
insl
int
movnti
test
sbb
das
xchg
movsl
cmpsb
push
cli
das
xor
push
mov
ret
out
xor
ds
xor
mov
push
bnd
mov
call
outsb
subb
mov
lret
js
in
pop
sbb
push
aad
imul
mov
fbstp
popa
or
mov
jle
add
adc
pop
adcb
das
mov
sub
repnz
mov
fisttps
ds
inc
rcll
pop
push
mov
test
mov
jmp
es
inc
int
out
jmp
add
xor
sbb
rclb
ss
dec
lea
jg
push
mov
xor
mov
sub
xchg
hlt
sbb
js
mov
and
fistpll
push
test
ret
aaa
mov
cmp
push
or
mov
mov
into
or
sbb
inc
data16
notb
xorl
push
cld
out
enter
push
fstpt
and
jnp
pop
ret
xchg
cmp
or
jl
sub
or
cltd
push
subl
fwait
cli
or
push
das
aam
je
pop
cwtl
sti
into
cld
stos
fnstcw
js
daa
sub
lahf
cmp
adc
mul
xor
mov
popf
sbb
cmp
cmp
jns
and
xchg
push
loopne
into
jle
stos
add
in
and
decl
test
push
pushf
stos
outsb
mov
dec
mov
addr16
cwtl
bound
jae
jb
xchg
xor
out
leave
fcompl
cmpsl
pop
jl
jge
jl
stos
out
mov
dec
sbb
std
cs
ljmp
mov
das
or
gs
push
out
inc
scas
pusha
idivb
repz
dec
cmp
rolb
and
jge
aas
mov
lock
xchg
mul
xchg
mov
mov
iret
lock
test
sbb
insl
pusha
test
out
je
jnp
inc
movsb
lcall
int
cmc
jle
data16
xor
cmpsl
arpl
stc
cmc
inc
add
pusha
shr
dec
jbe
rcl
test
jle
notb
dec
das
test
inc
mov
jno
outsb
test
jbe
bsf
jl
fistl
clc
cmp
hlt
outsl
in
stc
push
in
scas
repz
lcall
lret
adc
sbb
dec
imul
jmp
inc
ds
mov
addr16
mov
add
inc
in
sbb
mov
int
xchg
push
sub
shrl
push
pop
inc
adc
movsb
outsb
das
daa
loope
push
xor
pop
dec
jge
or
ja
sbbl
aaa
pop
jp
gs
clc
add
pusha
rorl
aas
and
mov
xor
aas
push
adcl
mov
jecxz
test
inc
jmp
inc
mov
sbb
movsb
sbb
mov
or
xlat
adc
dec
sti
xchg
cmp
mov
or
test
cmpsl
push
dec
mov
in
dec
mov
mov
and
jnp
inc
sbb
inc
add
and
clc
repnz
pop
pusha
fwait
or
dec
or
and
icebp
mov
jns
xlat
and
inc
fs
sub
or
sub
loope
lods
jg
jns
add
inc
or
add
stc
stos
xor
je
ret
cmp
lds
movsl
or
inc
pop
cmp
xor
mov
std
fwait
pop
shlb
jp
inc
cltd
and
and
insb
lods
dec
pop
mov
and
jae
ret
sbb
out
ficompl
inc
lea
outsb
jmp
lods
xchg
pop
addl
pop
out
dec
orb
adc
data16
fdivrl
loop
pop
sbb
jnp
ret
push
fsts
jno
mov
cmp
mov
lret
leave
jmp
cmpb
shll
sar
cmp
outsl
aad
insl
sbb
lahf
aaa
inc
mov
add
faddp
ljmp
shl
push
es
cld
loopne
mov
in
shlb
push
in
xchg
add
stos
mov
int3
cmp
mov
shl
arpl
mov
mov
test
dec
cmpsb
cmc
pop
sbb
in
mov
dec
ret
inc
pop
sbb
loopne
inc
dec
push
rcrb
push
push
and
fisttpll
sbb
ja
std
data16
jbe
ja
cmp
cli
inc
popa
cld
sti
mov
xchg
mov
sbb
sahf
pop
pop
mov
pop
dec
push
push
mov
add
cmp
dec
iret
pop
outsb
jae
or
fwait
lea
repnz
cmpsl
jne
xchg
xchg
addl
sub
in
pushf
push
mov
cmp
lcall
dec
sub
push
cmp
mov
lret
test
jg
pop
loop
sbb
add
lahf
fnstsw
push
fistpll
inc
in
cltd
movq
rorb
mov
sti
inc
mov
pop
jg
jle
mov
rcrl
inc
outsb
int3
es
sub
std
push
ljmp
add
fst
mov
dec
inc
xor
mov
xor
push
xchg
rcr
dec
mov
fwait
or
stos
outsl
call
sar
pop
cld
fwait
push
adc
pop
sbb
adc
mov
pusha
inc
enter
dec
dec
jne
ret
sub
pop
ffree
lcall
sub
xchg
cmp
xor
fs
int
pop
mov
lret
lods
sub
gs
ret
push
jbe
xchg
cld
cmp
xor
andb
mov
xor
jg
movsb
push
mov
sbb
push
stos
cld
jle
jg
mov
sbb
cli
xor
or
jge
orb
stos
in
inc
shrl
mov
mov
popf
mov
push
mov
sbb
jl
pushl
inc
mov
inc
out
rcrl
mov
in
jg
pushl
dec
js
sub
inc
xchg
jnp
dec
into
push
loopne
cmpsl
sti
adc
xchg
mov
std
ss
les
pop
je
jo
dec
mov
aad
sub
sbb
orl
pop
aas
jmp
cmpb
es
int3
jg
jl
daa
loopne
mov
stos
addr16
jbe
jp
and
dec
les
cltd
and
push
icebp
pop
test
mov
cwtl
leave
roll
dec
mov
pop
inc
mov
orl
mov
pop
add
lods
inc
mov
shlb
xlat
dec
movsb
mov
outsb
lds
je
les
out
jo
dec
cmp
nopl
js
loop
enter
jle
loopne
ret
dec
fldenv
out
hlt
mov
movsb
dec
xor
scas
and
out
and
push
sub
push
xor
sub
lock
stos
setg
gs
js
fwait
and
popf
pop
mov
mov
sub
out
jnp
loope
test
daa
jmp
sbb
mov
arpl
mov
xlat
stos
xor
inc
loope
push
mov
mov
aad
imul
cmp
push
hlt
js
ret
pop
push
rorl
pop
xor
xor
mov
and
dec
or
jg
xchg
mov
fwait
stc
call
mov
js
adc
out
or
push
push
loopne
mov
xchg
fidivrl
or
pop
in
push
js
insb
dec
fnstcw
and
sub
fwait
dec
sub
fdiv
push
jne
sbb
sub
adc
or
jno
fidivrl
cmp
outsb
scas
push
pop
sub
mov
pop
adc
ret
dec
neg
sbb
insb
clc
sbb
jg
int3
lret
adc
dec
subl
xchg
ljmp
das
insl
pop
pop
out
gs
and
cli
das
dec
repz
cmp
xor
push
mov
mov
add
dec
movsb
loop
or
mov
cmp
test
mov
jle
and
mov
std
addl
fisttps
sub
movsl
push
add
dec
addr16
mov
int3
test
aad
cmp
pushf
loopne
add
sub
xor
dec
mov
pusha
and
pushf
outsl
xchg
sbb
adc
mov
mov
aam
sub
jnp
lret
xchg
adc
or
mov
jecxz
sbb
push
fdivrl
fstps
fiaddl
pop
jge
jbe
dec
rcll
mov
pop
lahf
mov
sbb
testb
clc
cld
shrb
jecxz
pop
push
into
enter
jo
test
and
pop
pusha
stos
inc
les
movsl
sbb
ljmp
jb
fs
cmp
cmp
jl
jb
push
clc
cmc
addb
mov
sahf
arpl
out
add
jae
lods
adc
add
aas
iret
or
bound
mov
hlt
xchg
cmc
dec
hlt
and
add
xchg
call
add
dec
inc
cmpsl
clc
pop
aam
stos
inc
cltd
mov
sbb
mov
adc
ljmp
inc
and
repz
push
shrl
jecxz
inc
rcl
mov
test
xor
mov
jg
inc
or
pop
xchg
push
mov
mov
xchg
movsb
sub
xor
nop
in
pop
jle
pop
stos
xchg
or
jno
int
sub
mov
mov
idivl
in
cmp
sahf
out
stos
push
in
cltd
xor
adc
lods
out
or
push
lods
fiadds
dec
aaa
and
dec
adc
sub
jecxz
aam
pop
insl
inc
sub
jns
jp
cwtl
sti
mov
cli
jnp
pop
sbb
mov
es
movsl
stos
dec
jnp
arpl
in
into
je
mov
ljmp
adc
cwtl
push
pop
or
mov
pxor
arpl
incl
in
or
inc
movsb
xchg
test
sub
jae
inc
outsb
cmp
and
mov
pop
stos
inc
jnp
icebp
dec
orb
rol
pop
mov
dec
or
sub
jl
outsl
hlt
jne
ret
lods
out
xchg
das
jp
and
adc
iret
dec
movsb
add
cwtl
fs
lret
push
push
jns
mov
lcall
shr
cmp
aas
jl
xor
add
cwtl
jae
push
or
mov
or
test
push
sbb
push
shlb
or
test
sbb
add
jne
jg
fdivr
xor
sub
cmpsl
movsl
push
push
in
mov
loopne
shr
daa
sbbl
jae
xor
int
daa
adc
xchg
cmpsl
lret
sub
or
fistl
mov
add
out
dec
push
js
lmsw
mov
mov
std
push
lods
jg
fimuls
xchg
or
pop
lahf
out
lock
loop
pop
xchg
sbb
clc
aam
ljmp
ret
out
fisttpll
ds
cmp
jae
xor
mov
jnp
push
mov
cltd
or
andb
enter
ss
xchg
addr16
push
imull
xor
dec
fbstp
mov
xchg
es
aas
hlt
push
std
jno
push
push
test
pop
mov
push
repz
pop
adcb
pop
and
pop
out
push
ret
cs
cltd
dec
arpl
aaa
enter
dec
stos
sbb
in
xor
sbb
rol
push
push
mov
es
inc
sahf
pop
cmpl
sbb
arpl
xlat
and
jnp
out
movl
dec
pop
dec
iret
mov
xchg
lods
mov
or
pop
and
mov
mov
push
push
jno
jl
xor
adc
xchg
int
xor
jp
mov
push
push
cmp
xor
mov
and
fxch
ret
stos
push
xchg
in
pop
pop
cmp
jmp
xor
mov
dec
adcl
push
fisttps
pop
adc
fnsave
dec
sbb
pusha
sub
lret
sub
das
xlat
sub
fistps
sbb
icebp
cmpsl
test
pop
outsb
jecxz
fwait
or
int
add
inc
cwtl
in
out
adc
push
xchg
pushf
shr
pushf
andl
push
insl
out
frstor
xchg
pushf
mov
or
gs
cld
cmp
pop
aam
pop
adc
clc
enter
inc
jl
pop
addb
aam
mov
jle
mov
inc
addb
mov
out
stc
or
xchg
sti
in
xor
adc
lret
test
xor
jbe
push
aaa
pop
jnp
mov
fdiv
pop
and
xchg
in
xchg
inc
xchg
inc
add
ficompl
mov
add
mov
mov
scas
sub
shrl
test
mov
push
and
cmp
add
jmp
dec
jnp
mov
outsb
jp
in
push
inc
repz
cltd
dec
xor
pop
inc
mov
pop
scas
jno
dec
nop
cmc
sbbb
sahf
mov
inc
cmc
inc
or
inc
sbb
fwait
xchg
mov
or
bound
jae
movsb
sub
add
mul
push
xor
out
jnp
hlt
add
gs
divb
pusha
adc
lret
imul
jne
dec
inc
sbbb
xor
pop
pop
pop
loopne
cmp
lods
mov
nop
stos
insb
inc
mov
adc
enter
js
jnp
loope
cltd
adcl
xchg
mov
xor
jo
mov
pop
into
outsl
inc
movsb
mov
in
mov
mov
sub
sbb
mov
test
sbb
and
movsl
inc
push
mov
test
movsb
sub
aaa
jecxz
pop
jp
xchg
push
hlt
and
dec
pop
ljmp
jo
add
sub
jp
adc
scas
xchg
xor
pop
or
or
mov
pop
sub
xor
adc
ljmp
pop
add
cmp
mov
sub
push
loope
mov
jmp
pop
rorl
pop
cmp
jns
ret
push
adc
sub
mov
sub
add
inc
ljmp
mov
or
push
or
lods
andb
sbb
or
out
out
pop
push
push
xchg
lods
test
push
sarl
shll
sbb
lods
adc
jnp
xchg
cmp
jmp
xchg
ret
jo
int
bound
shlb
xor
popf
test
subb
mov
inc
enter
push
mov
mov
test
jno
xor
lock
mov
test
int
ja
out
insb
jns
lds
lods
jno
push
gs
call
xorl
pop
adc
jae
ljmp
cmp
sti
jp
cmp
push
ss
mov
stos
je
xor
test
sbb
xor
stos
insl
mov
mov
xor
add
push
in
repz
pop
stos
cmp
repz
dec
mov
sub
test
out
or
adc
push
dec
cmp
ret
add
daa
jbe
addb
push
fidivrs
jno
rcrb
loope
sbb
jne
mov
mov
mov
or
push
jge
outsl
rcrb
sbb
sti
iret
inc
ja
mov
in
ficoml
sbb
jle
pop
dec
or
adc
gs
mov
pop
test
lods
loop
add
or
dec
dec
sbb
mov
pop
enter
jne
popf
or
fstpt
rolb
imul
jmp
mov
inc
mov
push
adc
fnstenv
dec
inc
mov
cmpsl
fxch
scas
test
xor
sbb
mov
inc
mov
subb
lods
scas
test
jmp
out
push
jo
add
aaa
jae
enter
nop
imul
or
inc
add
add
aas
icebp
cwtl
repz
cmpsl
mov
and
orb
jbe
cmp
fistpl
add
clc
call
dec
jmp
mov
icebp
or
fndisi(8087
or
hlt
push
jns
imul
int
enter
sub
cmp
adc
dec
ljmp
sub
int
sahf
lds
gs
cmp
xor
pop
lods
lcall
mov
cwtl
mov
cltd
orl
fisttpll
call
and
movd
jb
nop
jne
push
xchg
lahf
mov
lahf
cmpsl
movb
sub
mov
push
mov
loopne
jnp
xor
test
mov
imul
mov
jns
pop
ja
popa
xchg
adc
clc
cmpsl
xchg
pop
mov
test
das
sub
stos
outsl
sub
sbb
mov
or
rcll
push
sti
fwait
add
sub
outsb
pop
adc
jb
aaa
or
lahf
enterw
cmp
scas
lahf
int
lods
stc
jb
cs
mov
daa
loope
mov
aaa
mov
sbb
mov
es
add
cmp
fists
push
xchg
int3
das
mov
in
jg
sub
inc
jl
je
mov
sbb
out
xor
push
in
hlt
mov
mov
push
roll
cld
and
ljmp
mov
loop
dec
imul
testl
fmul
jle
loop
outsl
nop
ja
inc
xchg
dec
ficoms
enter
xor
dec
popa
mov
ljmp
cmc
xchg
pushf
scas
mov
xor
in
xchg
leave
lods
mov
jns
mov
ds
lcall
jle
or
repz
and
push
and
mov
aaa
or
lock
pop
es
rcrl
push
cmpsb
mov
xchg
arpl
dec
sbb
xchg
fiaddl
test
add
jns
sbb
mov
loop
pop
mov
sbb
dec
or
cmc
jl
into
push
les
pop
inc
ja
dec
repz
insb
test
dec
mov
incl
pop
mov
mov
xchg
dec
test
cmp
dec
adc
inc
cltd
push
cmp
or
ret
or
shr
sub
cmp
lcall
pop
andb
inc
fwait
fs
push
push
xchg
mov
pop
sbb
or
xchg
fwait
pop
push
stos
test
xchg
sbb
mov
mov
inc
and
fdivrl
aam
mov
inc
cld
rclb
daa
sub
shrl
cs
sbb
enter
roll
sub
pop
jle
xchg
insl
or
enter
push
jne
adcb
loop
xlat
xchg
sti
dec
imul
outsl
pop
jb
mov
push
fimuls
inc
mov
incl
jp
push
pop
inc
arpl
mov
fldenv
cltd
mov
xchg
mov
sbb
xor
test
mov
inc
loop
int
xchg
outsl
test
sbb
fld
adc
fmull
fsubrl
nop
add
xor
inc
cmpsb
inc
inc
inc
pushf
fnstsw
jno
dec
leave
outsb
lock
mov
popf
pop
mov
or
mov
mov
inc
xor
inc
pop
sub
lahf
insl
adc
xor
mov
sbbl
idivl
stos
loope
out
or
cwtl
clc
xor
mov
or
int
push
mov
leave
add
lcall
movsl
pop
pop
loopne
fdivrl
fisubrl
push
add
and
repnz
mov
nop
out
adc
bound
xchg
test
jp
lock
loope
push
lods
js
pop
pusha
jb
push
add
dec
icebp
cmp
push
lods
fdivr
cmp
dec
idivl
idivb
stc
pop
xor
fcmovne
and
in
loopne
mov
out
push
fnsave
arpl
and
lcall
or
inc
pushfw
and
mul
shlb
sti
fiaddl
cs
push
dec
xor
mov
sbb
xchg
outsb
es
stos
divl
push
in
pop
cltd
decl
lea
movsl
add
and
lods
mov
or
mov
ret
cmp
jle
insb
fcmovnb
pop
pop
xchg
cli
lods
mov
rolb
push
fidivrl
mov
push
cmpsl
jg
pop
mov
scas
mov
adc
sbb
mov
ss
xor
add
jle
je
xor
mov
add
push
pop
push
dec
mov
jns
jae
jo
lahf
push
xlat
and
cmp
pop
in
mov
fbld
jnp
pop
outsl
adcl
add
jg
in
orl
rcl
xlat
cmpsb
xchg
stos
mov
adc
adc
sbb
mov
add
push
or
cltd
inc
outsb
enter
insl
xchg
pop
repnz
out
adc
add
je
adc
xchg
lea
xchg
lods
dec
inc
and
or
add
adc
pop
scas
jnp
push
xchg
adcl
stc
ja
scas
lret
ret
mov
cmp
iret
dec
negb
fwait
dec
addb
dec
pop
push
or
loopne
outsl
clc
cmp
in
fwait
clc
addr16
add
sbb
sub
int3
mov
pop
mov
sub
and
inc
in
out
andl
sub
repz
sub
cmp
sti
stos
scas
pop
sbb
call
js
imul
stc
push
inc
pop
adc
push
cmp
mov
call
xor
lret
orb
and
outsb
add
stos
ficoms
sub
les
xchg
push
dec
fsts
jg
fadds
icebp
mov
mov
sub
jl
ja
xor
push
mov
rcrb
xchg
add
cmp
ss
sbb
xor
lret
test
adc
stc
pusha
cli
loopne
pop
loopne
cltd
shll
leave
cmc
add
popa
jns
sarb
daa
mull
shl
into
pop
enter
mov
xchg
or
insb
imul
rclb
mov
inc
mov
sbb
call
xchg
dec
aam
inc
sbb
ret
and
jg
adc
add
into
push
cmp
mov
xchg
into
mov
sub
xchg
lret
dec
and
fdivrl
arpl
movsl
decl
lret
xchg
sbb
xor
pushf
mov
fs
lds
pop
aaa
imul
inc
sbb
scas
cmp
aaa
mov
in
in
scas
add
aam
js
jl
jno
push
xor
adc
push
mov
pusha
mov
iret
fsubr
mov
lock
mov
cltd
mov
shll
sbb
loope
xchg
mov
daa
jle
mov
jl
fcmovu
mov
or
popf
xchg
int3
mov
insb
roll
sub
outsb
out
ret
das
mov
iret
sahf
testb
push
cmp
data16
dec
adc
mov
pusha
sub
xor
ret
test
cmpsl
jmp
clc
jne
gs
bound
cmp
push
stos
js
stos
xor
jae
xchg
aas
shll
sub
adc
jb
push
in
dec
arpl
sub
fdivrs
mov
adc
push
and
ja
lret
cmp
lock
cmp
push
sarl
outsl
hlt
xchg
fists
mov
popa
popf
js
int3
and
insb
cmp
mul
mulps
js
fnstcw
dec
mov
rorl
iret
hlt
cld
lahf
or
in
arpl
iret
pop
dec
scas
addr16
repnz
add
addr16
adc
mov
in
adc
ss
and
mov
jbe
movsl
roll
or
iret
div
mov
data16
pop
adc
cwtl
insl
cmp
inc
push
add
jmp
into
inc
std
sbb
daa
sub
sahf
adc
jo
lods
loope
lret
pushf
cmp
cmpsl
xchg
pusha
push
lock
sbb
cmp
jmp
mov
xchg
xchg
flds
cmc
fists
xchg
ds
shrb
adc
and
xchg
es
scas
addl
les
fwait
mov
adc
sbb
js
push
mov
repz
pop
mov
pop
out
inc
stos
pop
xor
repnz
adc
jge
mov
dec
mov
sub
repz
or
test
mov
into
jne
inc
movsb
scas
sub
mov
jae
loop
ret
lahf
cwtl
lods
sbb
add
pop
mov
add
out
sub
stos
in
jmp
out
leave
adc
cmp
fcoms
fwait
inc
push
mov
xchg
outsb
cmpsb
jmp
pop
fbstp
mov
push
inc
shlb
sbb
out
mov
sub
jb
push
jns
cmp
xor
and
pop
cmpsb
stos
push
xchg
sarl
xor
sahf
dec
jae
dec
fs
call
push
adc
sar
push
outsb
lret
lods
leave
data16
mov
outsl
mov
push
xlat
or
js
outsb
push
call
or
mov
adc
iret
xor
in
ja
jae
mov
dec
in
jge
mov
sub
stc
mov
out
inc
insb
xchg
jno
andl
xor
jae
into
test
mov
test
jno
fimull
mov
jp
cmc
lcall
sti
outsl
mov
js
out
cmpsl
loope
mov
rcr
das
cmp
xchg
stos
push
pop
je
mov
incb
sar
push
push
hlt
cmc
jnp
pushf
push
js
sub
mov
xchg
and
aaa
sbb
and
dec
pop
adc
xchg
mov
fs
rorb
inc
lcall
dec
jp
cld
cmp
and
lea
out
test
mov
dec
sti
pop
and
sbb
mov
cmp
addb
jbe
xchg
inc
xchg
cmp
jl
imul
xor
popf
gs
scas
movsl
push
filds
mov
xchg
repz
mov
dec
bound
dec
test
rorb
std
ja
sahf
les
pop
aas
leave
inc
push
lds
icebp
sbb
out
subl
jge
push
in
jmp
cmpsb
aaa
cmp
mov
adc
pop
xlat
lods
test
lea
popf
mov
add
js
and
push
add
inc
inc
mov
test
cwtl
mov
out
les
data16
lds
call
les
mov
cmp
dec
cmp
cmpl
ja
mov
pop
xor
dec
lds
push
xchg
loop
imul
pop
cs
pop
mov
imul
cs
fsts
inc
pusha
push
mov
push
movl
inc
cmpsb
sbb
jl
shl
jl
and
into
pop
cmp
mov
hlt
ficompl
cli
imul
andb
outsb
into
or
mov
dec
aad
aas
adc
iret
jl
lret
add
ror
jnp
pminsw
push
out
cmp
push
inc
loop
sub
add
aas
out
inc
or
inc
pop
adcb
xor
icebp
pop
cmpsl
roll
mov
add
xchg
jnp
xor
loop
outsb
rcl
cli
es
loopne
pushl
sub
loopne
clc
mov
or
jle
add
add
xor
add
mov
pop
dec
out
std
push
ja
ret
dec
ljmp
enter
inc
js
pop
add
sbb
notl
mov
sbb
jae
push
sub
scas
bound
push
mov
mov
in
jge
cmp
xchg
dec
mov
cld
mov
mov
pop
xor
mov
pop
or
mov
lret
movsb
mov
mov
lcall
push
cltd
and
sbb
popa
sahf
stos
add
aas
out
stos
adc
push
fwait
jecxz
mov
mov
mov
scas
xchg
jne
icebp
mov
add
sbbl
std
and
lods
cli
insl
push
ret
jle
adc
scas
inc
outsb
sarb
pop
aad
pop
out
rolb
add
pop
cmp
sub
sbb
pusha
sbb
outsl
cs
int3
orb
les
adc
lcall
lods
and
xchg
push
ds
adc
cwtl
sbb
cmp
sbb
mov
jmp
xchg
add
fstl
aas
enter
jnp
pop
mov
leave
and
adc
add
js
ret
mov
xchg
cmp
dec
lea
xchg
arpl
xchg
fsubl
jle
in
xor
fadd
inc
decb
inc
xchg
jge
std
ljmp
sub
sub
lret
ret
and
insl
pushf
test
xor
fisttps
adc
add
pop
out
idivl
pop
stos
sbb
jle
imul
push
mov
call
or
mov
std
int
jecxz
lds
fildl
test
add
mov
out
add
adc
dec
imul
cltd
jmp
stos
mov
je
mov
fnsave
push
inc
movsb
into
sub
mov
jnp
lret
aad
shrl
shlb
cmp
pop
xchg
adc
stc
sub
fbld
ds
lcall
out
inc
mov
and
push
add
or
js
mov
mov
mov
jmp
pusha
sub
dec
xchg
shrl
dec
shll
sub
mov
push
je
pop
push
mov
sti
cmp
addr16
mov
cwtl
cmp
test
adc
lret
xchg
sub
repz
dec
fcomip
cld
or
imul
pop
adc
push
dec
mov
pop
out
pop
popf
clc
daa
call
aam
rcll
xlat
mov
pushf
mov
xchg
xchg
lods
sbb
cmp
jne
pop
jns
arpl
adc
les
jae
or
cld
mov
ds
or
push
jnp
dec
pop
sub
sbb
inc
xor
js
outsl
lea
xor
lods
xor
mov
push
sbb
push
cmp
mov
lret
test
add
ljmp
imul
jle
mov
push
sub
je
scas
out
mov
or
nopl
fwait
cmp
xlat
test
stc
aas
addr16
xchg
insl
inc
xor
scas
icebp
mov
dec
push
aam
arpl
pop
enter
mov
xchg
adc
sub
sub
xchg
fmuls
sub
cmpsb
stos
ret
rcl
mov
adc
std
mov
sub
cs
scas
push
add
clc
adc
in
loop
jbe
xor
aas
shll
cld
js
jb
sbb
mov
jge
ret
jg
push
mov
inc
mov
sub
mov
xor
imul
outsl
push
cmp
out
inc
cmp
popf
adc
lret
mov
lock
xchg
pop
mov
in
aas
xchg
jnp
add
insb
imul
push
xchg
adc
xchg
adc
outsl
mov
das
sti
and
jecxz
fiaddl
outsb
cmp
scas
imul
adc
adc
adc
imul
lret
arpl
icebp
jae
cmpsb
jns
jno
shll
jle
cmpsl
dec
and
pop
jb
in
icebp
or
jae
mov
jmp
lret
and
mov
adc
inc
mov
inc
mov
xor
adc
cmpsl
adc
pop
xor
xchg
stc
lret
aas
push
cmp
popa
jmp
ret
sbb
sarl
or
xor
jmp
stos
pop
insl
mov
adc
and
mov
gs
sub
cmp
shlb
xchg
cli
and
in
outsb
pop
mov
mov
adc
call
mov
push
je
add
fstpt
or
int
push
push
pop
stos
repz
push
das
pop
lds
in
push
push
mov
xor
cmpsb
mov
and
push
loopne
sarb
fimull
and
call
fnstcw
inc
mov
pop
jl
das
pushf
shlb
or
movsb
out
roll
jo
orb
jmp
in
loope
mov
add
mov
stos
mov
mov
sbb
dec
daa
cmpl
dec
xchg
add
scas
inc
in
out
pop
test
iret
and
xor
cmp
add
sti
dec
jp
rorl
dec
aaa
or
ret
mov
xor
sub
dec
pop
or
loopne
push
enter
mov
das
xchg
clc
mov
dec
vandps
push
or
out
and
pop
icebp
sub
mov
jns
rolb
pop
adc
jle
push
xchg
xchg
xchg
imul
mov
mov
bsf
sti
and
cmp
les
xor
orb
mov
add
stc
sub
xor
mov
dec
std
pop
scas
pop
push
cwtl
test
repz
ret
stos
jo
movsb
dec
jbe
cld
mov
out
xor
pop
jns
jae
cmp
sbb
inc
test
and
sbb
jbe
adc
lds
loopne
sub
loopne
sbb
ja
lret
dec
imul
sbb
test
or
inc
in
lret
aam
nop
mov
sbb
push
mov
lret
stos
push
imul
lret
sub
add
or
sbb
adc
test
add
rolb
sbb
fs
cmp
inc
loope
push
sahf
mov
mov
icebp
jle
push
sub
call
push
test
sub
xchg
jle
sbb
repnz
mov
jge
sub
into
aam
xor
sub
out
iret
or
out
mov
add
das
dec
fildl
je
out
aad
add
push
fsincos
add
popf
add
pusha
call
pushfw
loopne
and
mov
mov
pop
je
out
mov
cmc
lcall
or
loop
add
mov
xchg
clc
mov
inc
or
mov
loopne
gs
or
add
je
or
sub
pop
sub
pusha
arpl
add
pop
lahf
dec
ret
pop
or
push
pop
in
into
test
push
ja
imul
shrl
iret
sbb
push
jle
jecxz
lcall
scas
xor
pop
adc
lahf
int
jmp
inc
fmuls
popa
ret
mov
xchg
mov
lahf
sbb
cs
jne
sub
sar
fistpl
mov
stos
daa
int
xchg
loop
sub
leave
pop
out
negb
add
nop
andl
stos
popa
cltd
outsl
icebp
lods
std
into
out
jl
in
addr16
mov
int3
mov
jo
icebp
test
sub
mov
sbb
mov
je
add
jo
pop
sbb
insb
daa
sub
jb
or
rcll
insb
call
push
inc
push
rcrb
imul
jp
mov
stos
shll
cmp
pop
push
push
sub
sti
jmp
loope
gs
adc
cmpsb
adc
loop
dec
xlat
nop
adc
sbb
iret
scas
xlat
aam
sub
inc
pop
mov
mov
cmpsl
fisubs
push
pushl
pop
jl
iret
in
ja
push
and
jmp
inc
enter
mov
adc
mov
push
ss
insb
add
sub
les
addr16
xchg
sbb
stos
movsl
pop
insb
stc
mov
test
mov
mov
or
into
cmp
cs
inc
pop
aad
ficoms
leave
clc
push
cmp
sahf
movsl
sbb
and
rcll
xor
mov
inc
mov
push
lock
lock
and
adcl
mov
mov
rorl
pop
mov
mov
jnp
das
rorb
lcall
sbb
cmp
ja
jg
in
mov
push
sbb
push
mov
pop
mov
and
adc
scas
or
aas
lock
loopne
sbb
mov
and
adc
cmp
dec
fwait
pop
fimull
gs
and
or
ss
xchg
mov
jb
insl
ss
aam
leave
idiv
shr
or
pop
sub
sahf
or
in
data16
lret
xchg
sbb
xchg
jne
xchg
movsb
jae
mov
es
dec
add
jbe
cmp
mov
cmp
pop
fcmove
dec
repnz
mov
mov
push
inc
cmp
aas
call
and
icebp
and
mov
push
mov
dec
fmull
in
mov
mov
fcompl
out
popa
outsl
xor
andb
dec
enter
mov
stos
pushf
or
push
filds
in
jb
dec
rcr
pop
sub
fwait
dec
cmp
das
inc
repz
mov
sub
cld
jg
and
and
cmpl
lods
xchg
adc
or
mov
dec
xorb
inc
in
imul
cli
cmpsb
xchg
int
mov
xor
add
jmp
xor
das
mov
pop
mov
and
repnz
mov
and
pop
ljmp
mov
cltd
cmp
icebp
and
loop
jne
xor
rorl
inc
out
xchg
xlat
testl
mov
xor
pop
mov
ds
sbb
rorb
pop
pop
imul
jo
ja
xchg
aad
mov
mov
dec
sbb
ret
in
ret
ret
movsl
pop
inc
mov
mov
sub
js
fcoms
pop
inc
mov
jge
iret
xchg
push
mov
dec
sti
out
call
cli
pop
xchg
jo
pushf
dec
shlb
inc
cld
or
sar
xor
mov
repz
xlat
and
addr16
and
es
ret
cmp
xchg
fistl
addr16
adc
xchg
bound
xchg
aad
ljmp
jp
xlat
ds
popa
shlb
pop
rcrb
push
adc
push
cwtl
pushf
adc
sub
sub
repnz
push
inc
and
lds
ret
cmc
rorl
add
pusha
loope
prefetch
dec
rclb
pop
stos
inc
add
loop
cltd
add
mov
sbb
and
push
push
repz
mov
xchg
popa
sub
adc
ljmp
in
add
pop
pusha
sti
sbb
stos
push
cmpb
push
movsb
ret
mov
rcrb
gs
cmpl
lcall
imul
mov
pop
subb
xchg
lret
jmp
out
mov
xlat
jno
or
fdivrs
jbe
add
ret
add
out
add
xorb
add
xchg
pop
test
loopne
into
shrd
shrb
adcb
sbb
dec
inc
jg
movl
iret
aas
mov
int
pushf
out
lahf
pop
jmp
lahf
sbb
cmpsb
inc
fldenv
mov
pop
cmc
loop
jl
sub
xchg
xor
shlb
mov
mov
mov
xchg
rcl
imul
mov
or
push
jae
dec
or
cmpb
pushf
xor
xlat
lret
mov
test
lret
add
xchg
std
lock
in
gs
pop
repz
or
dec
lahf
mov
sub
sbb
enter
incl
icebp
push
and
sahf
add
adc
out
ror
ret
sbb
cmpsb
push
and
ret
pop
and
jmp
push
pusha
push
enter
sbb
mov
push
fwait
inc
mov
shrd
andl
add
dec
pop
push
aam
lcall
inc
adc
cmc
cltd
aas
mov
dec
daa
inc
push
test
mov
mov
mov
jbe
sub
repnz
jle
loop
dec
lock
push
xor
xchg
push
mov
cmp
mov
or
push
pushf
in
adc
out
or
lret
cltd
push
inc
mov
xor
loope
adc
cli
inc
test
rclb
pop
push
inc
jno
jle
cs
dec
shrb
ja
cwtl
push
fadd
dec
push
jmp
aam
push
or
scas
xchg
aad
dec
loopne
mov
in
popf
jns
pushf
mov
pop
mov
mov
fiadds
int3
or
out
jbe
arpl
incl
xchg
cmc
out
mov
mov
ja
and
mov
rcr
hlt
imul
in
inc
cmpsb
sbb
xlat
cmpsl
enter
enter
mov
push
add
push
pop
dec
mov
movsl
insb
outsl
out
xor
mov
sbb
and
mov
lods
out
and
int
inc
out
popa
mov
out
mov
in
in
aam
inc
loope
dec
adc
je
xchg
dec
iret
frstor
sub
mov
inc
fcoms
mov
xor
pop
dec
cmc
pop
cli
dec
std
jecxz
pop
pop
cmpb
and
cmp
add
push
dec
sbbb
jo
jbe
mov
push
mov
shrb
dec
popa
inc
sbb
popf
out
les
xchg
jle
out
sub
mov
arpl
and
push
dec
mov
xorb
cmp
aas
stos
fildl
pop
imul
lcall
mov
and
jecxz,pn
add
push
xor
xchg
out
sti
rclb
pop
xor
jno
je
bound
xchg
cmp
push
les
mov
inc
loop
fcmovnb
pop
enter
sbb
xchg
lods
inc
jne
mov
dec
fisttps
mov
mov
mov
fwait
in
pop
adc
fidivl
out
outsb
ret
inc
jle
cmc
repz
ret
sbb
push
jb
mov
loopne
icebp
xchg
cmp
jle
cmp
fistpl
cmp
jge
arpl
dec
mov
xor
cmp
or
ljmp
xchg
inc
push
xor
fdivs
adc
jg
xchg
add
and
cmp
fs
in
in
or
mov
int
jmp
rolb
andl
sub
jge
les
popa
out
fcom
xor
mov
or
cmp
movsl
pop
insl
pushf
loop
jle,pn
mov
cmp
or
dec
lret
jo
xor
mov
mov
mov
push
pop
add
mov
sbb
lock
es
or
in
or
test
xchg
mov
jae
dec
popl
stc
fmul
xor
xor
xor
cmp
push
stos
inc
mov
adc
popf
push
xchg
pop
testl
lret
aaa
inc
mov
mov
sub
dec
icebp
js
cmp
in
cmp
jmp
xor
out
inc
jae
mov
and
jo
sub
push
jg
shrb
popa
jmp
fisubl
add
stos
stos
lea
sbb
adc
scas
test
push
mov
pop
mov
test
jns
mov
ret
pop
cmp
cmp
stos
xorl
cmp
dec
jo
cmpxchg
mov
fs
scas
lcall
add
xor
push
ss
insb
out
cmp
lods
adcl
cmp
cwtl
ljmp
lock
repz
pop
ss
xor
push
clc
fcomps
loope
jle
movsb
mov
pop
jmp
popf
in
inc
dec
mov
mov
in
call
test
and
iret
fistps
insb
test
leave
sbb
cmp
mov
pop
pop
push
xor
mov
stc
in
adc
pop
mov
pop
inc
add
loope
sub
stos
fstpl
xchg
sbb
insl
cmp
daa
dec
subl
adc
cmc
jge
loop
mov
call
xchg
cmovl
fsubrs
and
mov
dec
mov
cld
nop
mov
andl
xor
out
pop
sub
fistpl
mov
push
mov
add
dec
orb
fdivrl
xor
mov
int3
mov
loope
movsl
leave
jns
test
pop
ret
xor
movsb
push
sbb
sub
sub
push
cmc
push
imul
loop
inc
sar
insl
sub
push
cmpsl
test
mov
movsl
sub
cmp
and
inc
ret
dec
bound
scas
xlat
jge
pop
pop
add
lods
mov
jp
sub
push
push
hlt
cbtw
cld
fdiv
jge
or
mov
mov
sub
loopne
cmp
mov
cmp
addl
js
lods
fistpll
and
je
lcall
adc
out
shrb
lcall
icebp
leave
addr16
aam
movsb
push
das
sbb
lods
insb
push
jnp
and
out
test
lock
ret
dec
insb
xor
push
and
push
and
pushf
out
jno
mov
and
leave
pushf
add
loope
out
iret
enter
out
dec
jno
and
cmp
lea
test
cmp
xchg
inc
sbbl
add
decb
je
sub
xchg
xchg
add
mov
mov
sbb
fimuls
sbb
jl
mov
mov
jo
inc
bnd
sbb
or
lret
dec
jne
adc
jno
pusha
ds
arpl
in
fiaddl
std
mov
in
push
fs
icebp
add
jae
in
sub
xchg
sarl
ja
into
add
cmp
add
jmp
out
outsb
add
movsb
jle
cmp
fnstcw
sbb
das
inc
or
jnp
cs
jge
adc
dec
jne
cmpsb
test
dec
sub
xor
lds
add
mov
push
int
insb
inc
fisubrl
dec
stos
es
dec
lcall
subl
fcomi
in
sub
add
shl
adc
and
mulb
ret
xchg
stos
cs
xchg
xchg
int
and
sub
pop
fstps
xorl
pop
sub
dec
out
repnz
popa
jo
dec
mov
insb
xor
jno
mov
push
xor
out
adc
inc
in
movsl
pop
xor
lcall
dec
cmp
negl
rcl
dec
shll
loop
icebp
lea
je
js
or
push
mov
movsb
xchg
sub
mov
add
mov
shll
insb
imul
mov
cltd
pushf
out
lods
jnp
jmp
outsl
mov
lahf
out
dec
out
popa
or
movsl
mov
jecxz
mov
cmp
lods
js
pop
inc
dec
sbb
rcll
std
jne
ss
inc
and
add
cs
lret
push
cmpsb
xlat
imul
mov
sub
ss
add
xchg
popa
push
sbb
fucom
dec
jno
mov
sbb
mov
push
xchg
das
mov
cmc
dec
sub
or
sahf
cmc
mov
popf
mov
sbb
xor
out
mov
test
mov
xchg
outsb
push
jmp
xchg
cs
ret
insb
pop
sbb
ljmp
push
add
jo
pop
push
adc
dec
xchg
lcall
movsl
bound
mov
fwait
sub
push
and
mov
xor
fs
out
rorb
add
mov
and
aad
iret
movsl
pop
pop
jg
dec
jecxz
mov
mov
sub
adc
xchg
mov
or
sbb
jnp
xor
or
pmaxsw
addl
fiadds
adc
and
fstpt
jecxz
xor
jno
adc
push
cmp
or
movsl
cwtl
lock
subl
adc
mov
scas
add
jle
sub
scas
addr16
arpl
mov
sahf
test
mov
movsb
dec
xor
mov
mov
mov
add
xchg
jle
ret
test
xchg
and
fmuls
jecxz
jo
inc
push
icebp
cmp
fisttpl
pop
clc
enter
ljmp
std
out
adc
inc
leave
add
adcl
jmp
imul
dec
adc
popa
mov
mov
add
rcl
pop
xchg
lret
mov
xlat
add
out
ss
movsb
mov
jp
sub
dec
add
outsl
xchg
mov
nopl
test
cmp
sub
repnz
inc
insb
das
inc
inc
insl
scas
mov
pop
pop
arpl
stos
nop
and
mov
decl
cli
inc
mov
mov
icebp
shll
lods
pop
scas
jecxz
cmc
push
in
mov
std
icebp
cwtl
repnz
enter
lret
mov
sahf
sub
in
xchg
push
clc
add
xor
sub
fdivrs
mov
mov
sbb
cmp
fistpl
xor
xchg
iret
popa
pop
inc
int
fnsave
pusha
aaa
aaa
xor
push
pop
lock
je
movsl
lcall
loopne
jp
sub
insl
lods
insl
push
mov
mov
jg
and
lea
xor
sub
mov
push
imulb
faddl
sahf
into
and
inc
xchg
stos
out
sub
fisubl
pop
or
push
dec
pop
ss
push
xchg
mov
mov
shl
hlt
mov
mov
push
ret
in
es
sub
ljmp
in
inc
jmp
je
mov
stc
out
lahf
shlb
add
pop
daa
repnz
pop
loop
sub
adc
test
movsl
fdivr
call
stos
les
repnz
sub
push
inc
mul
or
adc
ljmp
add
pop
push
sahf
mov
cmpb
imul
fldl2e
dec
lds
data16
mov
jmp
push
fsubr
sub
outsb
cmc
add
mov
dec
lds
mov
xchg
xor
addr16
ss
nop
sarl
add
adc
or
adc
iret
fdiv
cmp
lahf
push
insb
movsl
sub
outsl
andl
mov
adc
jnp
leave
fiadds
mov
sbb
data16
jl
dec
pop
or
das
mov
xor
ret
dec
push
xchg
jle
mov
sbb
xor
into
sbb
mov
gs
inc
or
das
push
mov
mov
or
fists
je
xor
lock
inc
das
into
inc
popf
jmp
sbb
rclb
shl
or
push
sbb
pop
lods
fistpll
inc
sub
leave
iret
fdivr
mov
jp
es
and
sbb
je
inc
inc
sarl
cmp
test
stos
cltd
mov
test
xor
xlat
mov
jmp
or
mov
repz
push
jae
sahf
mov
imul
fisubl
xorb
cmp
out
mov
jae
mov
push
movl
xor
fdivrs
xchg
inc
fcoms
in
outsb
ucomiss
add
xor
orb
aam
ja
and
sbb
adc
or
lea
xchg
jmp
jo
and
push
mov
push
xchg
loopne
stos
shlb
popl
jbe
jo
stos
mov
gs
adc
out
sub
jb
fistps
and
cltd
repnz
test
outsb
mov
and
fistl
cs
outsb
jge
in
idiv
cmp
inc
dec
js
sbb
sub
add
bnd
dec
cmpsl
jl
outsl
push
arpl
imul
stos
cmp
dec
rcr
and
scas
stos
cmp
and
in
test
in
inc
test
add
outsb
pop
dec
push
dec
ret
hlt
jge
fiaddl
sbb
enter
cli
mov
cltd
mov
ret
mov
or
jnp
je
pop
fldcw
push
enter
clc
outsl
or
mov
mov
arpl
and
addr16
or
aas
mov
out
inc
cmc
push
pop
push
push
inc
sub
push
cmp
popf
loopne
mov
jmp
add
cmp
inc
mov
jns
loope
and
imul
jo
xchg
imul
push
jno
into
sbbl
mov
cmpb
push
mov
xor
test
mov
inc
jnp
out
and
aaa
lahf
xchg
xchg
adc
mov
cmp
xlat
mulb
push
lahf
fnsave
cmp
mov
rcr
fisubrs
stos
add
pop
xchg
and
xchg
pusha
iret
test
mov
jle
lret
lret
fidivl
sbb
test
jp
nop
push
out
add
jg
pop
mov
xchg
rorb
arpl
mov
es
ret
sbb
mov
pop
in
pop
movsl
xor
inc
adc
xchg
add
inc
pop
pop
mov
xor
mov
sahf
inc
das
inc
mov
out
insb
enter
js
mov
jp
rolb
sub
outsl
cmc
cmp
in
cmp
aaa
push
pop
sub
nop
xor
cmp
sbb
cwtl
pop
xlat
jo,pn
popf
xchg
xchg
nop
arpl
and
push
cmp
inc
cmpsb
or
ja
incb
and
fsts
lods
arpl
fs
adc
sbb
add
call
mov
notb
cmp
movsl
imul
and
and
mov
cmp
sbb
andb
mov
popf
fsts
hlt
iret
jbe
arpl
movb
cltd
sub
fbld
rolb
popa
add
jle
add
lea
nop
push
test
ljmp
out
int3
and
les
pop
rclb
rorl
mov
dec
mov
and
add
repz
cmp
xchg
xchg
into
imull
push
dec
adc
mov
sbb
mov
pop
fsubrl
shr
mov
std
stc
lods
aas
imul
mov
xor
sbb
aad
out
and
inc
add
aas
je
cmpsl
mov
mov
push
lods
xor
enter
mov
cs
xlat
jge
jp
inc
push
mov
push
test
sbb
sub
sub
andb
in
lods
mov
addr16
dec
nop
xchg
hlt
jbe
enter
inc
adc
cmp
mov
ja
mov
daa
movsb
jo
sub
jns
push
jmp
inc
bound
push
mov
lret
xor
sbbb
fwait
jge
imul
loopne
icebp
mov
vfpclassps
fildl
mov
mov
sbb
divl
pop
outsl
jge
xchg
jl
push
xchg
andb
add
add
pop
sbb
insb
push
mov
scas
mov
push
fdivrl
pop
push
and
add
testl
or
xchg
push
push
push
aas
lahf
and
arpl
mov
jb
in
pushf
dec
pop
ds
push
mov
je
movsb
pop
xor
push
test
lahf
rol
xchg
insb
adc
xor
stos
into
sbb
xchg
addl
adc
adc
and
test
aam
inc
int3
cmpsb
push
adc
xor
leave
ljmp
scas
push
scas
lods
jns
cmp
fnstsw
loopne
orb
faddl
dec
shr
insl
es
or
test
add
fdivrs
fucom
popl
or
xchg
inc
jge
popf
out
je
hlt
dec
dec
sbb
cs
dec
fmul
loop
lret
negb
sbbb
sub
mov
add
rcrl
cmp
out
mov
vpsrld
ljmp
xchg
leave
out
mov
lods
scas
icebp
adc
test
popa
xor
ret
in
dec
gs
sbb
mov
test
mov
push
out
scas
icebp
scas
int3
xor
mov
in
shll
data16
pop
repz
jecxz
ja
mov
adc
push
call
inc
xchg
in
lret
mov
pop
mov
pop
xchg
jae
fdivs
sbb
mov
out
lods
in
and
adc
test
orl
dec
sub
test
aam
pop
int3
out
sub
fwait
mov
inc
push
mov
push
or
test
cmp
or
push
mov
push
adc
pop
adc
std
inc
stos
mov
or
icebp
out
aam
xchg
or
bnd
mov
cltd
sub
xchg
or
adc
xchg
ds
stc
jbe
repnz
mov
push
sbb
xor
xchg
cmp
xor
gs
and
js
and
imul
cmp
xchg
fistpll
add
loop
push
push
fldt
xlat
mov
jmp
cmp
outsl
pusha
push
int
cmp
rolb
pop
mov
lods
daa
pop
mov
insb
ret
lcall
pusha
int
leave
jl
in
sbb
sub
xor
pushf
insl
sbb
push
xlat
cmp
cmp
out
dec
out
sub
push
aas
mov
lahf
sbb
cmp
adc
xchg
mov
out
shrl
add
or
xchg
xchg
jno
testl
fisttpl
push
jecxz
stos
lahf
add
jnp
aas
ljmp
dec
mov
jb
inc
orl
push
jae
mov
loopne
mov
fistpll
aam
in
mov
or
out
inc
sbb
add
enter
fadd
xor
add
ret
out
insb
adc
mov
test
inc
pop
pop
sub
or
cmpsb
lock
das
inc
repnz
cmp
outsl
in
ret
adc
fcomps
inc
inc
cmp
or
jno
xchg
aaa
jmp
lds
inc
cmpsl
cmc
xchg
fidivrl
int
in
jne
mov
bound
cmp
mov
pop
push
ror
shl
xor
push
lahf
xor
repnz
jnp
in
lock
push
clc
inc
mov
adc
jno
fstps
push
sbb
sub
add
stos
into
pusha
repnz
adcl
xchg
enter
iret
and
mov
push
orl
les
pop
lret
mov
pop
inc
xchg
sbb
rorb
dec
add
inc
jnp
js
test
popa
out
je
mov
outsb
jae
stc
pop
int3
mov
pop
mov
daa
cmpl
dec
inc
jae
popa
ja
loope
and
inc
test
rorl
push
cmc
jne
jge
push
mov
or
push
imul
and
cwtl
into
imul
jmp
jae
cli
or
dec
jne
int3
push
lea
fistps
and
rcrb
ja
mov
xchg
push
shll
cmc
push
das
mov
sub
xchg
stos
pushf
cmpsl
bound
mov
ds
fimull
idivl
imul
dec
mov
push
sahf
xor
jmp
rorb
push
push
sarl
or
mov
push
mov
mov
dec
mov
in
cs
mov
or
lods
bnd
push
sub
fnstenv
iret
pop
test
lods
mov
pop
push
clc
lret
add
sbb
adc
stc
lods
rcr
testl
stc
cmp
scas
jns
outsl
cmp
icebp
dec
adc
ss
mov
cmp
stc
inc
pop
aad
jl
sbb
xor
in
inc
movsl
jnp
dec
dec
push
dec
push
gs
sbb
and
stc
jle
sbb
jns
ja
or
dec
aad
imul
fsubrs
cld
pop
test
adc
add
push
dec
add
addb
mov
ret
sbb
incl
mov
sbb
pop
inc
push
dec
rclb
aad
push
lock
lods
mov
sub
fcoms
ja
out
xchg
daa
xchg
pop
xchg
popf
xchg
xchg
dec
xor
adc
jae
out
cmpsb
mov
cmpsb
add
in
sub
das
sahf
pop
cmp
dec
pushf
push
adc
mov
xor
test
imul
add
movsb
js
mov
mov
xchg
lret
xor
lret
jmp
andb
dec
push
out
stos
cs
jl
jne
addl
fs
fidivrs
mov
xchg
push
sahf
inc
adc
popa
js
xlat
out
and
xchg
mov
leave
inc
push
sub
cmpl
les
lcall
jge
push
sub
and
push
repz
push
push
pushf
iret
inc
adc
shll
jns
mov
aad
sub
ja
mov
pop
cmp
xchg
inc
xchg
xor
or
fadds
mov
xor
aas
sarb
xchg
mov
fdivp
mov
xchg
mov
pop
loopne
mov
cltd
test
jg
mov
test
bound
adc
jecxz
gs
and
add
adc
xor
add
push
jp
xchg
fdivrs
mov
add
sbb
xchg
jnp
aaa
xchg
xchg
or
adc
js
push
lret
mov
fisubs
xor
and
mov
es
jb
inc
or
test
push
sbb
mov
inc
push
ret
cmp
jecxz
pop
sub
in
mov
adc
cmpsl
jns
les
inc
cs
mov
test
sub
jb
lret
jns
pushw
mov
cmp
dec
push
fcomp
cmp
call
test
dec
bound
mov
loop
add
subb
in
push
addl
cmpsb
jnp
ljmp
xor
sub
rorb
es
and
loopne
fs
filds
es
inc
in
push
pop
mov
push
adc
sbb
push
ss
jno
insl
lds
jmp
repz
clc
jns
mov
lahf
or
js
addr16
push
insl
test
cmp
cmpsb
cld
sti
out
sbb
js
cmp
sti
pusha
aaa
leave
daa
inc
add
pop
movsb
mov
mov
ds
cmc
cmpsb
lcall
push
and
push
mov
subl
enter
push
adc
and
cltd
push
out
dec
fidivrl
scas
fs
rorl
xchg
mov
push
cmp
clc
push
insb
mov
xchg
mov
std
hlt
cld
enter
jnp
pop
or
fcoml
lods
jecxz
dec
stc
mov
push
fldl
mov
das
jp
jle
cmp
imul
gs
fldl
lea
arpl
sub
push
out
aam
cmp
mov
pop
outsb
ljmp
iret
movsl
popa
sub
aas
lret
sarl
jl
decl
rcl
pmullw
or
ja
push
movsl
and
adc
ljmp
push
test
sub
repz
cmp
imul
push
iret
xchg
out
add
js
fwait
sub
into
fwait
or
jecxz
ss
lods
xor
ljmp
add
mov
inc
out
testl
sbb
and
push
and
testb
pop
pop
mov
sub
push
cmc
adc
and
pushl
jecxz
arpl
repnz
xchg
cmpsb
loop
push
imul
mov
mov
sub
out
mov
mov
xor
xchg
int3
pusha
dec
sub
lret
bound
sarl
xor
repnz
lds
pushf
adc
sbb
outsb
sub
loopne
in
cwtl
lods
dec
sarb
jb
clc
jb
mov
bound
inc
push
cmpsb
mov
dec
ljmp
xchg
movsb
sbb
pusha
shrb
sti
pop
ret
add
push
jno
adc
jo
lret
push
dec
addl
or
cmpb
cmp
ja
jecxz
xlat
inc
jae
pop
test
lret
sbb
jbe
jecxz
popa
jl
mov
lods
fwait
jl
lea
and
push
or
sbb
pop
xchg
or
fiadds
sbb
mov
adc
or
sub
popf
pop
push
jne
xchg
dec
mov
aas
into
pop
mov
neg
cmc
pop
daa
ja
push
ficomps
es
push
neg
int
rcl
push
inc
pusha
fsubr
ffreep
scas
pop
push
test
or
inc
int
insb
cmpsl
and
jecxz
dec
jns
xor
leave
sub
out
jnp
xchg
inc
cmp
inc
mulb
xchg
jmp
test
ficompl
or
jae
rcll
imul
xchg
add
sub
jae
pop
scas
mov
adc
xor
das
sub
xor
frstor
cmpl
and
adcl
movsl
mov
add
lcall
dec
clc
test
fmuls
jno
js
dec
into
lods
mov
mov
cmp
cmpb
add
xchg
xor
or
cmp
inc
imul
shlb
dec
sar
mov
xchg
lods
loop
insb
xor
sarl
fcomp
fnstenv
lret
test
dec
or
and
ficoml
pop
mov
out
fistps
shrl
jge
outsl
mulb
fidivs
push
mov
loop
and
shlb
push
cmpsb
inc
jle
ret
test
adc
loopne
dec
jp
aad
lods
jns
mov
push
nop
movsb
mov
lods
popa
pop
mov
std
ret
aad
lahf
leave
mov
int3
lret
outsb
int
jmp
dec
ljmp
cmp
cmpsb
dec
ja
push
insb
fidivl
adc
lock
jecxz
ret
test
std
es
movsb
mov
or
ds
shll
mov
aas
inc
xor
xor
pop
and
adc
into
pop
xor
and
pop
stos
pop
mov
mov
fimull
lds
cmc
es
add
xor
mov
pop
stos
mov
int
or
or
sub
pop
jp
je
stc
aas
repnz
push
jecxz
inc
push
mov
insb
adc
data16
and
cwtl
dec
jecxz
xchg
ret
loop
push
ss
mov
push
pop
cmp
lea
adc
mulb
out
jle
icebp
outsb
pusha
dec
push
inc
pop
fmull
cmp
jne
shl
jecxz
or
inc
add
loope
push
add
incb
xor
fs
fs
or
shl
mov
aam
das
xchg
dec
pusha
jo
sub
mov
jno
int3
mov
repnz
push
jb
pop
addl
jns
out
daa
cmp
movsb
fwait
fwait
test
push
scas
je
or
xchg
and
movsb
mov
insl
inc
push
ds
aas
xor
jmp
fildll
rclb
ds
bound
dec
lahf
cmpsb
mov
fmull
test
test
movsl
loop
icebp
mov
movsl
dec
jg
fldenv
lcall
add
jg
in
pop
scas
in
jle
or
adc
in
loopne
or
mov
jecxz
jo
scas
push
std
popa
in
push
adc
pop
cwtl
loop
inc
call
or
les
outsb
outsb
jmp
imul
in
out
div
ret
loopne
push
add
push
cmpl
loopne
rolb
pushf
cs
inc
mov
add
pop
jae
sub
call
mov
lods
les
sub
int3
mov
ds
loopne
aam
pop
das
jg
jmp
lret
sbb
mov
cltd
cmpsb
pop
imul
scas
pusha
popf
loopne
sbbl
push
jg
mov
test
stc
fstpl
out
into
push
cltd
xor
stos
cmpl
aas
mov
lahf
mov
mov
or
vpcmpgtb
or
fs
test
in
in
inc
movsl
add
rol
enter
aaa
rclb
pop
and
fidivl
sbb
fs
jp
insl
sub
dec
mov
rcll
sub
stc
push
stos
fisubrs
pop
mov
jbe
pop
or
add
jg
dec
and
cmp
xor
fcmovnbe
les
arpl
push
mov
mov
mov
hlt
add
std
mov
fldl
je
cli
push
cli
addr16
cltd
jne
cmpsl
push
fsubrs
inc
gs
xor
mov
pushf
je
rcll
xor
push
das
mov
push
repz
or
test
push
popf
jbe
dec
cmp
cmp
loop
jno
sub
out
shrb
lods
cltd
dec
mov
cmp
pushf
in
mov
or
ret
ret
int3
jp
push
mov
jl
sbb
push
sub
ret
push
cld
aam
xor
callw
mov
in
daa
push
out
sub
shll
out
stos
or
aad
int3
xlat
add
clc
aas
leave
jns
xor
cmp
xchg
lret
mov
icebp
and
std
mov
pusha
push
ss
cli
jae
jb
jecxz
jp
in
lahf
xor
sbb
sbb
adc
cltd
jne
popf
bound
aam
push
cmpsb
sub
push
popf
sub
shlb
test
daa
adcb
jp
fldt
imul
push
clc
je
mov
or
addb
push
sbb
mov
mov
sbb
xor
sbb
test
cmp
jle
and
aas
inc
push
add
and
mov
mov
cwtl
cli
push
scas
pop
inc
adc
mov
mov
rol
sbb
mov
or
push
jp
jl
mov
fisttpl
xor
and
jne
lock
aam
pop
outsl
pop
lea
jo
push
shl
xchg
pushl
pop
movsb
mov
das
aas
std
sbb
push
fsub
xchg
lret
xchg
decl
pushf
mov
add
mov
adcl
out
pop
sbb
push
mov
xchg
lahf
stos
dec
xor
push
cs
pop
repz
sub
or
mov
or
fcomi
jecxz
jmp
dec
dec
gs
jo
jno
add
testl
sbb
scas
test
and
and
mov
testb
cmp
insb
cmpsb
mov
jg
inc
pop
ret
inc
outsl
sbb
inc
lahf
outsl
xorb
ds
push
cmp
test
mov
push
sbb
inc
mov
fcoml
scas
lods
inc
ljmp
sahf
mov
jno
movsl
shrl
loope
imul
cmpsl
cs
test
cld
xor
jp
mov
roll
rorb
nop
shrl
pop
xchg
inc
push
rorb
pusha
mov
dec
out
jne
mov
pop
insb
ljmp
jp
dec
dec
jae
iret
call
ljmp
fldenv
mov
adc
js
popa
add
mov
jp
aam
dec
mov
dec
jbe
ja
dec
insb
adc
xchg
out
push
xchg
sbb
dec
inc
enter
add
add
jne
test
sbb
test
sub
mov
clc
pop
pop
fsubs
decl
ja
dec
mov
test
jle
enter
mov
pop
rolb
das
jle
push
mov
and
mov
inc
rolb
dec
jnp
pop
or
push
or
mov
sbb
inc
xchg
xor
jmp
mov
mov
out
das
push
jmp
loopne
jno
adc
scas
mov
jnp
mov
push
popf
and
push
inc
pop
jb
push
rorl
ret
xor
pop
and
gs
lahf
test
jo
push
cli
inc
add
js
pop
push
sti
xchg
sti
rcrb
push
mov
and
test
loop
jne
inc
filds
cmc
repz
ds
add
test
add
dec
call
out
outsb
pop
add
mov
jae
lds
mov
lds
daa
pop
jo
add
adc
out
adc
jb
subb
cmp
mov
mov
sub
fisttpl
insl
ljmp
adc
adcb
mov
fcmovb
add
sbbb
outsl
dec
xor
sub
mov
in
dec
fbld
ficompl
adc
dec
inc
lret
pop
adc
stc
aaa
aam
stc
push
out
xchg
and
pusha
mov
jle
xchg
pop
cltd
adc
jo
sub
and
fcomps
push
jns
sbbb
and
imul
mov
fimuls
jp
xchg
xchg
push
pop
jae
pop
out
cmp
mov
pop
add
enter
enter
push
shl
pop
push
and
imul
inc
or
mov
popf
and
out
cmc
int
jns
mov
jg
add
sub
mov
add
inc
aaa
xor
insl
adc
ja
pushf
cmp
dec
xchg
xchg
adc
jg
imul
in
stos
test
arpl
iret
mov
out
sub
jb
sub
out
lcall
in
scas
sbb
popf
cmpsb
jecxz
cmp
ljmp
mov
mov
sub
jg
inc
fcomps
popa
hlt
push
add
jl
mov
push
test
std
jge
popf
nop
or
fbstp
lds
pop
aad
inc
in
in
lea
sbb
ja
in
loope
shlb
push
push
aad
cltd
mov
out
and
rolb
xchg
dec
cmp
mov
loopne
cmpsb
repnz
bound
jmp
xchg
pusha
mov
pop
lds
lods
adc
imul
cld
cmp
mov
movsb
jb
into
test
cmp
dec
ret
clc
cmpsl
sbbl
add
aas
mov
js
fdivrp
cmp
int
sub
aas
add
inc
push
pusha
rcl
xorb
pop
jnp
or
imul
mov
lcall
dec
push
dec
nop
cld
mov
inc
stc
mov
aad
xor
jp
sub
push
fwait
into
int3
adc
in
jnp
or
or
add
cli
movsb
stc
addl
in
std
mov
call
cmp
int3
mov
ds
mov
or
push
ret
adc
test
aaa
test
mov
lods
popa
aad
cmp
es
push
sub
les
icebp
push
mov
out
xchg
in
inc
inc
lahf
jp
sbb
cmp
arpl
notb
clc
mov
dec
fisubrl
jns
in
mov
fs
jle
imul
mov
pop
in
xor
movsb
dec
iret
in
int3
push
fadds
inc
dec
lods
mov
shll
movsl
lret
push
add
sbbb
push
arpl
sub
adc
and
pop
jns
pusha
cmp
subb
in
icebp
sbb
inc
loop
sbb
andb
movsl
mov
in
enter
stc
inc
add
xchg
or
push
adc
stos
stos
cmp
lock
ja
mov
sbb
dec
sub
pop
jne
scas
movsb
xor
les
or
movsb
add
dec
and
and
cmpsb
xchg
and
addr16
push
or
push
fdiv
jae
lcall
cli
jns
movsl
inc
xor
fs
add
mov
into
cltd
fbstp
jne
cmp
push
fldt
insl
fadd
pop
shll
addr16
mov
push
arpl
orl
sbb
stos
cmp
enter
jb
pop
inc
jmp
lahf
neg
pushf
ret
dec
icebp
mov
xor
out
pop
cmp
jno
adc
dec
xchg
pop
pop
out
rcl
and
push
fcomps
inc
mov
test
mov
ret
into
xor
pop
add
mov
or
popa
cmp
fs
sbb
pop
test
ficoms
mov
fbld
sbb
push
xchg
or
scas
sbb
xchg
jns
jno
push
ja
cmpsl
jbe
movsb
daa
and
mov
js
or
cmp
scas
pop
clc
imul
mov
or
imul
push
call
test
sub
fwait
addr16
arpl
ss
imul
pop
or
cmp
lock
push
sub
mov
xchg
gs
sub
inc
ljmp
pop
pop
lea
pop
cs
dec
sbb
dec
jl
pop
sub
inc
popa
negl
stos
cli
push
ljmp
adc
or
mov
popa
jmp
mov
lahf
xchg
xor
mov
mov
pop
and
in
aas
mov
push
inc
inc
or
pop
adc
pop
addr16
iret
clc
jge
test
comiss
sbb
dec
clc
add
cmp
mov
sub
fnsetpm(287
cwtl
mov
ds
xor
jbe
sbb
decl
adc
push
decb
lds
popf
stos
pusha
inc
sbb
vunpcklps
cmp
mov
mov
jo
inc
and
fwait
push
cs
add
cmpsb
dec
pop
pop
inc
enter
and
fidivrl
pop
cmpsl
fwait
sbb
lock
fninit
das
add
fldenv
or
into
inc
inc
cmp
pop
inc
cmp
cltd
fwait
mov
in
or
push
rcll
mov
pop
addr16
outsl
xor
and
std
adc
mov
insl
mov
mov
xor
mov
sbb
testl
fs
cmp
lods
cmc
jl
pushw
jb
lahf
xor
jae
pop
pushf
mov
jmp
push
pop
ret
sub
mov
mov
mov
mov
mov
lcall
mov
mov
xchg
out
int3
xchg
stos
aad
je
cmp
mov
pop
data16
ret
xchg
jbe
lods
aam
xchg
add
add
push
in
arpl
and
aad
add
mov
sub
push
in
mov
add
ja
mov
xchg
add
nop
dec
cmp
fstpl
cmp
int
cs
imul
lret
jp
push
push
adc
adc
mov
pop
pushl
mov
pushf
in
add
xchg
push
daa
cltd
jb
sbb
rolb
mov
dec
loope
cmp
mov
roll
push
ret
mov
add
dec
sbb
pop
loop
jmp
je
je
dec
pusha
ljmp
push
mov
lahf
fs
pop
aad
mov
or
mov
cmp
fs
cwtl
push
push
imul
push
dec
inc
imul
sbb
sbb
mov
dec
iret
fildll
mov
int3
sbb
push
loopne
xchg
in
inc
push
shll
pop
scas
push
or
mov
lahf
ret
jmp
or
std
inc
cmp
movsb
push
dec
mov
lea
adc
mov
xor
mov
test
jge
lea
fsubrl
dec
outsb
ja
gs
jb
mov
pop
mov
xlat
cwtl
aas
fs
dec
lock
subb
add
jecxz
jecxz
sbb
movsl
rclb
add
into
jle
xchg
or
push
dec
pop
in
push
and
fcomi
adc
std
inc
mov
mov
cli
outsl
bsr
out
dec
xchg
add
jbe
in
ds
in
popa
pop
pop
xor
lock
push
cld
sub
cmc
in
cmp
test
stos
ljmp
fstpt
js
bound
xor
pop
adc
and
lods
rcll
jg
sbb
ror
lret
aaa
ljmp
iret
addb
adc
ljmp
mov
mov
or
mov
xchg
sbb
pop
and
jb
dec
lret
jge
or
insl
or
jae
mov
fwait
jge
jb
iret
es
cltd
cmp
push
out
or
stc
roll
push
xor
and
mov
jecxz
sub
xchg
hlt
fadds
test
je
fidivrl
xor
pop
pop
in
fists
adc
icebp
bound
mov
mov
inc
push
add
aaa
lods
jb
xlat
repz
outsb
outsb
xchg
lcall
inc
mov
pop
sbb
cmp
mov
ss
shll
loop
inc
or
mov
daa
mov
dec
inc
jmp
jge
call
ljmp
add
sbbl
xchg
mov
and
inc
push
lea
jge
cltd
outsb
mov
popa
xchg
sbb
popf
aas
add
dec
cli
mov
add
insl
jno
aad
rcrb
scas
stc
push
cltd
outsl
xchg
mov
in
xor
push
fistl
add
mov
jnp
xorl
mov
and
mov
xlat
mov
push
js
test
pop
leave
pop
call
sti
add
push
xlat
mov
pop
xor
pop
mov
push
imul
lea
jne
dec
dec
scas
test
push
insl
nop
lret
nop
fadd
mov
js
lcall
add
outsl
mov
jb
pop
jnp
sahf
lret
adc
ljmp
in
stos
enter
push
int
mov
dec
mov
sbb
inc
arpl
out
mov
sti
inc
lods
notb
sub
adc
xchg
xor
inc
std
sub
inc
adc
pop
mov
sbb
lcall
jns
into
out
sub
dec
mov
xor
xchg
in
xchg
test
cmp
jg
adc
in
mov
cmpsb
sub
lock
xchg
or
inc
jb
fstpt
sahf
mov
adc
jecxz
sub
cs
iret
aad
adc
fdivr
sarb
outsl
add
jl
mov
mov
hlt
jge
and
mov
insl
out
aas
repz
add
aam
bound
pop
or
shrb
sbb
adc
cmpsb
push
add
into
sub
stc
push
lret
fcoml
loope
pop
test
aad
je
movsl
sbb
mov
xchg
scas
pop
test
dec
popf
xchg
push
loop
test
mov
xor
inc
mul
sti
scas
jo
jge
fsts
sahf
inc
out
dec
push
dec
stc
fcmovnbe
sub
lea
ret
sbb
inc
outsb
push
and
dec
sub
pop
xor
int3
push
mov
fs
bound
jmp
aam
aas
sbb
stos
pop
lret
sub
push
shrb
jne
dec
out
out
adc
cmp
in
xchg
mov
or
add
jns
lds
mov
out
arpl
xchg
xchg
dec
mov
mov
push
pop
gs
push
je
sbb
dec
xchg
and
lods
shl
xor
rclb
or
dec
adc
inc
imul
dec
adc
dec
push
fstpl
iret
lcall
in
scas
xchg
iret
mov
int3
push
aaa
dec
out
pop
int3
xor
sub
int
loope
ret
jg
sbb
adc
xchg
popa
sbb
cmc
xchg
adc
stos
lsl
ja
jo
scas
or
lods
popf
dec
cmp
dec
or
fsubp
fcom
push
inc
jecxz
xchg
popa
incb
ficompl
add
dec
dec
jp
cs
filds
in
lods
lret
sub
movl
push
pop
rorb
mov
xchg
push
mov
push
and
mov
mov
pop
fwait
push
cmp
cli
sti
pushf
in
sbb
mov
mov
or
add
and
popf
cld
fimuls
pop
sub
orl
jg
fcompl
stos
pop
stos
mov
jp
rolb
sbb
ret
mov
sub
insb
sub
mov
cmc
push
test
ficompl
insl
jbe
call
nop
pop
dec
push
sub
mov
or
ret
pop
mov
xchg
inc
inc
xchg
test
ret
jnp
ja
out
sbb
iret
add
pop
aad
dec
mov
fcoml
cli
fcmovb
jns
mov
push
xchg
pop
cmp
cmp
lret
push
cmp
sbbb
sub
std
test
dec
lds
cmpsl
push
imul
fs
insl
and
stos
mov
adc
xor
push
fldcw
and
fstpl
sti
pop
and
and
cmpsl
fwait
push
lods
test
xor
lods
aam
fcomps
xchg
mov
adc
fs
inc
je
outsb
daa
sub
xor
cmpsb
fcmovbe
movsl
out
dec
aas
mov
pop
or
fistpl
mov
jp
std
outsb
jmp
and
push
outsl
mov
fsubs
add
into
stc
ret
js
sbb
sti
jb
adc
jmp
xchg
jl
sahf
cmp
jp
imul
loopne
mov
jns
loopne
in
repnz
xchg
dec
sub
jnp
mov
mov
out
imul
ljmp
fisubrs
sahf
lret
push
inc
lret
fidivrs
sbb
add
inc
cmc
ret
mov
fsubp
rorl
xchg
xor
mov
push
jo
rorl
icebp
xor
xor
push
mov
ds
mov
and
cmp
int
and
sbb
clc
mov
test
mov
mov
xchg
ret
in
cmpxchg
jge
mov
adc
sti
test
dec
loop
cmp
dec
test
sti
out
add
push
lds
xchg
mov
or
dec
out
sbb
je
jbe
mov
dec
pop
pop
fbld
adc
adc
sub
inc
jg
mov
xorb
imul
and
dec
sub
xchg
pop
cwtl
mov
shrb
test
cli
sub
pop
aas
test
xchg
mov
xchg
mov
or
stc
aas
ret
in
inc
push
mov
dec
inc
adc
roll
jne
shlb
adc
dec
mov
lcall
inc
xchg
or
fists
loopne
dec
jnp
orb
pusha
pusha
push
jle
add
push
pop
pushf
daa
mov
lock
mov
pop
push
cld
roll
dec
xor
addr16
lret
inc
or
sahf
jl
xchg
mov
fiaddl
cmp
scas
sbb
mov
inc
call
lret
inc
or
sbb
dec
fisttpl
dec
roll
movsb
push
dec
jg
enter
int
inc
inc
or
pop
cli
rclb
and
enter
mov
mov
pop
xlat
and
in
push
out
psrad
ret
leave
adc
stos
clc
lss
dec
and
xlat
add
test
cltd
loop
lods
xorl
sub
pop
xchg
loop
mov
push
or
or
push
cld
cmp
bound
inc
add
xor
push
mov
adc
mov
pop
outsl
push
mov
out
cmp
movd
dec
lret
daa
imul
inc
pop
in
sub
dec
sar
fbld
xchg
test
rorb
dec
sbbl
mov
mov
pop
arpl
mov
lahf
testl
mov
mov
add
stc
and
jno
xlat
inc
out
inc
sub
pushf
xor
jg
mov
fsubr
inc
loopne
adc
sahf
aam
push
scas
addr16
leave
stos
sub
imul
aad
in
mov
and
adc
pop
filds
nop
pop
mov
shrb
mov
nop
in
es
nop
push
cli
jle
arpl
dec
insb
loope
int
mov
fwait
cmpsl
mov
fidivs
lret
inc
push
sbb
pop
jp
add
push
adc
call
subl
cmpsb
adc
lock
xchg
out
in
inc
lahf
int
pop
or
fdivrs
scas
push
mov
add
xor
lret
test
adc
xorl
jmp
xor
cli
out
push
push
out
push
add
rolb
mov
ds
lret
mov
cmp
jne
jle
xor
mov
fisubrl
add
xor
repnz
idivl
jmp
xlat
sbb
sbb
pop
pushf
inc
push
mov
sub
sub
stc
outsl
popl
jmp
xor
mov
enter
cmp
repz
sub
stc
adc
xor
aad
adc
je
dec
fs
test
cwtl
add
and
mov
mov
mov
push
fsubr
add
mov
shr
push
push
int
dec
push
pop
stos
mov
scas
sbb
aaa
inc
jl
cmpb
sub
fisubl
xchg
fnstcw
xchg
mov
fsubrl
push
mov
insb
xor
inc
or
mov
flds
cwtl
cwtl
or
stos
mov
inc
sbb
dec
addr16
out
dec
decl
gs
cmp
xchg
repz
lahf
jo
xor
push
outsl
or
cs
rcl
fdivl
xchg
dec
cmp
cltd
sub
jbe
enter
test
xchg
ss
cmc
movsb
in
enter
mov
xchg
cmp
inc
push
bound
push
arpl
cmpsb
adc
add
loopne
jns
cmp
jno
shrl
stos
and
les
adc
loopne
lds
jmp
mov
fbld
push
jecxz
sub
sub
xchg
dec
sarl
jg
lret
fwait
xchg
add
cltd
loopne
aam
xor
test
xor
outsb
push
push
mov
mov
sti
mov
add
fldt
roll
sahf
ret
test
cmpsb
nop
add
divb
and
sahf
popf
jne
imul
xchg
iret
test
cmp
adc
xchg
scas
aam
outsl
add
xchg
jecxz
and
xchg
lret
ficoms
mov
fiadds
inc
mov
or
dec
int
adc
sub
pop
mov
mov
push
or
loop
ds
int
push
pop
shlb
push
jp
mov
cmc
fwait
in
call
mov
cltd
fsubp
cmp
xchg
cmp
mov
push
xchg
pop
dec
testb
dec
sub
fldcw
adc
jnp
push
repz
dec
inc
clc
lds
cmpsb
and
cld
cmc
pop
loope
test
cld
je
push
fistpl
decl
shl
sub
lods
or
aas
lods
fs
scas
dec
sub
xor
imul
js
push
popa
mov
mov
push
mov
pop
dec
sub
arpl
inc
mov
stos
pop
movsl
sub
inc
les
pusha
push
aas
jne
outsl
xor
inc
dec
test
adc
mov
jne
jnp
mov
dec
jg
ljmp
pop
cs
data16
test
js
lret
notl
mov
dec
jecxz
adcb
jmp
fidivrs
pop
jmp
es
lahf
imull
jbe
clc
cmp
add
xor
sbb
xor
cmp
xor
fildl
mov
flds
jecxz
cmpsb
jo
sub
daa
sub
imul
or
repnz
push
dec
push
cmp
xor
cmc
movsb
mov
sub
jbe
mov
cwtl
xor
jecxz
inc
movsb
loopne
lea
fiadds
cltd
popf
push
aam
insb
leave
cs
fwait
rorl
pop
outsb
rcrl
and
xchg
inc
stos
add
adc
xor
and
push
cmc
insl
nop
sbb
pusha
dec
hlt
cmp
fucomp
cltd
jmp
mov
xorl
cltd
inc
mov
push
loope
in
outsb
jo
jg
clc
shl
fimull
aas
add
cli
movsl
dec
mov
or
xchg
cmc
mov
test
push
pusha
mov
or
test
mov
xchg
mov
aam
pop
add
in
dec
stos
stos
cmp
dec
add
mov
mov
cmpsl
pop
cmp
mov
pop
mov
dec
sbb
in
loope
ljmp
sub
pop
rclb
cwtl
cs
mov
mov
js
scas
xchg
rcrb
jl
push
jb
push
or
lret
cwtl
push
insl
repnz
and
cmpb
jne
dec
cld
mov
xchg
jge
inc
push
cmpsl
sbb
xchg
ret
xor
mov
xchg
mov
hlt
mov
and
js
lods
or
sbb
mov
imul
cli
pop
pop
mov
sbb
push
js
push
mov
stos
jb
and
jecxz
fstl
stos
popa
es
inc
mov
imul
push
sarl
imul
dec
cwtl
jns
aas
sti
jne
or
jne
stos
and
lods
pusha
lds
test
add
rcll
lret
jge
jmp
or
sub
in
dec
mov
repnz
and
lods
and
insb
pusha
dec
xchg
unpckhps
loope
in
sarb
je
or
test
js
rolb
not
xchg
icebp
jle
lods
leave
or
xchg
leave
cld
inc
push
shlb
pop
jb
mov
mov
xlat
outsb
iret
push
inc
push
adc
js
pop
test
in
mov
imul
scas
jl
xchg
fsubs
dec
push
test
dec
xchg
inc
int
sbb
cmpsl
test
sub
icebp
xchg
fldt
iret
xchg
in
xor
outsb
mov
daa
lret
jae
fucomp
mov
cmp
leave
repz
fcmove
cs
mov
pop
dec
pop
mov
lcall
mov
and
sub
xor
movsl
mov
sbb
mov
shrb
sbb
in
mov
jge
lods
mov
jo
fcmovb
fs
scas
nop
inc
xchg
adc
jp
mov
jnp
push
sub
pop
and
adc
std
xchg
lahf
clc
lock
call
and
int3
daa
loope
icebp
loopne
add
adc
pushf
inc
jne
xchg
push
push
rcrl
jb
mov
push
xor
pop
add
xchg
aam
mov
in
scas
inc
inc
jb
sub
pop
jmp
cmp
cmp
shr
dec
movsb
xchg
xchg
pop
jne
daa
mov
adc
mov
xor
out
xchg
stos
stc
out
movsb
mov
xor
push
jmp
xchg
xchg
sub
inc
hlt
jge
hlt
int
sbb
scas
repnz
pop
dec
push
and
mov
inc
je
cmp
arpl
sti
ret
push
pop
cltd
sub
jae
inc
jmp
push
pop
addr16
xchg
jg
cwtl
jbe
insb
roll
fsubrs
xlat
insl
inc
bound
mov
pushf
xor
xchg
aas
adc
sbb
imul
jle
repnz
xchg
xchg
popa
imulb
push
dec
lea
cmp
mov
popa
jae
aaa
lret
testb
fstpt
sub
ret
fistpl
popf
sbb
cmp
xchg
push
cmpsl
outsb
mov
or
mov
pop
daa
mov
adc
mov
out
lret
mov
test
mov
shlb
test
subb
xor
cmc
jne
add
hlt
pushf
adc
and
ret
cwtl
cmp
sub
adcl
rolb
enter
jge
push
stc
nop
push
and
jb
jecxz
xchg
mov
ds
js
andb
iret
add
repnz
and
mov
rclb
pop
add
outsl
repnz
sub
in
xchg
sub
push
das
pop
sub
jbe
jnp
gs
js
mov
decb
call
xchg
mov
sbb
dec
push
push
sub
mov
adc
insl
inc
xchg
pop
enter
xchg
aaa
std
stc
aas
push
push
xchg
loope
in
sbb
addr16
adc
and
lds
es
mov
inc
jg
fisubrs
rol
sarb
add
push
fisubrl
mov
data16
inc
mov
lods
add
push
mov
mov
ljmp
sub
xchg
pop
adc
push
inc
sub
or
mov
jecxz
ror
shlb
fisttps
cmp
mov
bound
sub
loope
pop
xchg
sar
and
and
xchg
jno
testb
pop
sahf
es
pop
lahf
sbb
jl
into
out
or
push
sub
cmpsl
pop
jae
pop
scas
ss
add
bound
sbb
fwait
sbbl
sub
test
divl
mov
outsb
stc
jl
dec
in
insl
popf
fsubrs
push
push
sub
cmp
jecxz
cli
inc
dec
mov
lock
popa
adc
dec
fidivl
into
loopne
mov
loop
out
adc
imul
xchg
in
push
scas
cmpsb
jns
jns
es
adc
into
out
and
daa
leave
mov
and
inc
mov
mov
out
cmp
mov
hlt
mov
gs
dec
jp
xor
rcr
repz
mov
aas
push
push
pop
loop
xor
fcmovb
insb
out
pop
aam
inc
push
das
pop
push
sub
rcrb
sbb
data16
pop
jecxz
aam
or
mov
cs
inc
xor
push
mov
and
cmpsb
popa
sub
out
ds
call
push
adc
jnp
and
xor
pop
das
and
cli
mov
jb
call
mov
test
sub
je
push
dec
or
icebp
push
in
pop
adc
cmp
rorb
adc
out
dec
jge
sti
sbb
lods
js
dec
cmc
shrb
push
shrl
cmp
jb
rorl
out
cwtl
adc
inc
loopne
fdivrl
les
mov
lea
jo
add
ret
lods
mov
and
cs
xchg
inc
xchg
lret
cltd
adc
imul
nop
sbb
shrl
test
xor
call
cmp
test
fwait
inc
fists
push
aas
andb
sub
fldenv
mov
shlb
out
jbe
mov
xchg
repz
sub
cltd
sahf
enter
sbb
push
incb
push
sub
or
xchg
cmc
mov
or
ja
ret
sbb
cs
lret
rcl
stos
in
out
mov
push
cmpsb
jle
lcall
nop
push
test
lahf
pop
push
addb
stos
push
push
mov
mov
mov
aam
mov
push
xor
inc
call
loope
mov
pop
push
or
jecxz
in
scas
xchg
data16
xorb
jne
push
add
jl
mov
jo
popf
test
dec
xor
cmc
push
push
imul
push
mov
sub
jmp
cmp
es
cld
xchg
movl
je
lock
bound
rorb
leave
test
mov
or
pop
loope
sbb
push
das
ljmp
shrb
daa
pop
mov
add
sti
mov
jns
jg
pusha
pop
pop
loop
int3
or
pop
rorl
cmp
or
es
das
adc
and
shrl
add
out
in
cs
in
les
sub
iret
pop
fnstenv
cltd
mov
and
sub
mov
into
dec
in
add
jbe
fmull
cmp
mov
xchg
hlt
pop
mov
fwait
daa
das
sub
xor
mov
mov
mov
jecxz
pop
dec
pop
cld
sub
add
idivl
push
lock
xchg
jle
cmp
sbb
push
mov
bound
or
mov
cmp
adc
stc
pop
stos
lret
lret
pop
mov
jmp
push
cmp
push
lock
insl
dec
stc
add
enter
xchg
and
in
scas
loope
push
cltd
push
mov
dec
dec
repz
jae
cmp
push
add
add
adc
ss
shll
xchg
xor
sub
xchg
imul
inc
test
xchg
or
sbb
js
test
mov
ds
out
aam
sbb
fmuls
es
out
in
jp
outsb
popa
sbb
pop
test
push
fbstp
jmp
scas
mov
lret
sbb
gs
inc
xchg
mov
push
divl
ljmp
into
sub
in
and
ret
push
xchg
inc
push
gs
mov
sbb
push
mov
jns
dec
adc
rcrl
call
in
sti
fincstp
inc
mov
lods
inc
dec
mov
inc
push
mov
jae
outsl
push
movsb
cmpsb
jb
sub
call
jp
jecxz
insb
xlat
int
arpl
test
add
call
in
or
in
push
cwtl
pusha
sub
loope
mov
pop
in
jns
stc
addr16
adc
push
jne
pop
cwtl
sub
dec
add
nop
iret
lods
cmpsb
cmpsl
mov
xor
cld
in
jmp
subb
mov
mov
and
stc
push
mov
scas
jp
xchg
add
jnp
into
mov
or
sahf
das
dec
mov
into
jmp
test
xchg
cmp
fwait
sub
iret
rolb
loopne
inc
push
push
jnp
xchg
sarb
insb
sub
mov
lds
popf
jmp
and
mov
pop
pop
and
mov
push
dec
std
add
movsl
mov
aad
sub
pop
lret
cmp
mov
leave
ss
sbb
jns
ss
mov
hlt
iret
pusha
push
sqrtps
inc
rcrb
mov
lea
or
stos
mov
cmp
hlt
rcrb
sbb
js
sub
fdivl
into
jnp
or
jnp
mov
loope
mov
and
inc
cmp
mov
xlat
push
iret
repz
sub
sub
sub
sbb
dec
arpl
mov
sub
xchg
loop
inc
dec
roll
mov
js
mov
int3
xchg
cmp
jno
jmp
addb
and
add
add
adc
js
ret
pop
insb
mov
mov
push
ret
pop
ja
mov
repnz
sbb
cmp
cli
loop,pn
xor
mov
loop,pn
pop
in
mov
subb
dec
inc
push
lea
fmuls
dec
fldt
shrl
in
cs
popa
xchg
ffree
and
mov
pop
out
mov
popf
insb
adc
and
ss
sbb
das
lret
ds
shrb
mov
mov
pusha
pop
lret
mov
movsb
mov
mov
or
xlat
pop
jbe
les
add
loope
and
out
jnp
inc
jbe
js
ficoms
sub
repnz
inc
cmp
addr16
and
nop
mov
add
mov
insb
arpl
ljmp
or
jle
int
sub
cld
imul
inc
push
dec
cld
icebp
sbb
push
adc
in
adc
cmp
shll
int3
int
leave
push
mov
mov
insl
adc
lea
insb
pop
stos
xchg
call
push
push
pop
xor
xor
dec
xor
add
xchg
sub
add
mov
xchg
sbb
movsb
pop
pop
xlat
mov
or
jbe
add
push
test
sbb
xchg
sahf
cmp
push
cmp
push
or
dec
dec
sbb
push
push
lret
fmull
or
mov
stc
pop
cld
popa
cmc
data16
cmp
adc
fidivrs
dec
test
push
mov
mov
fs
sahf
pop
jl
lods
inc
xchg
mov
movsl
push
lods
jno
stc
jl
adc
mov
dec
incl
adc
mov
aad
xchg
jg
daa
mov
aaa
iret
cmp
clc
mov
es
pop
pop
subb
ret
xchg
cltd
in
inc
stc
mov
mov
lea
cmp
xchg
dec
mov
outsb
negb
fcoms
and
insl
into
jmp
add
pushf
int3
popa
mov
rcrl
pop
jge
popf
mov
imul
nop
sbb
stos
pop
pop
and
lock
lret
roll
push
js
shrl
pop
bound
ljmp
sub
adc
sbbl
and
cmpsl
push
insl
add
loop
mov
int3
sbb
adc
lods
mov
add
jne
sub
adc
inc
adc
and
add
pop
jle
xchg
xor
cmp
xchg
xor
xchg
js
sub
icebp
pop
or
xlat
mov
xchg
rorb
xchg
mov
pop
aam
mov
int
pop
js
mov
aaa
jo
in
push
add
add
mov
mov
lret
add
stc
mov
das
push
pop
cltd
mov
cmc
xchg
cmp
adc
repnz
cmp
and
fimull
sbb
pop
js
jne
cmp
xor
mov
xlat
cltd
leave
sbb
mov
outsb
inc
or
lret
mov
push
aam
lock
xchg
cmp
lahf
out
jmp
jnp
jle
xchg
psrlw
rorl
mov
popf
rol
sub
addr16
lods
das
les
mov
push
ret
sub
or
test
cmp
mov
xlat
or
outsb
pusha
sub
add
push
jo
imul
adc
out
cmp
cmc
xor
inc
mov
xor
dec
fmuls
icebp
pop
je
push
out
pop
or
fldcw
stos
aam
and
imul
arpl
mov
fsubrs
jbe
adc
mov
mull
xchg
notl
mov
divb
icebp
ret
pop
fs
testl
mov
sub
nop
arpl
adc
lods
gs
movsl
not
div
inc
dec
pop
movsb
icebp
into
dec
ret
mov
or
inc
and
imul
sbb
mov
rcrl
xorl
lahf
mov
ss
fwait
xchg
movsl
inc
ficomps
and
mov
test
pop
lahf
inc
pop
lds
mov
leave
inc
xor
pushf
aaa
ja
inc
mov
and
aaa
jo
arpl
mov
xor
pop
dec
test
cmp
ljmp
arpl
inc
pop
xchg
push
mov
add
jne
mov
push
insl
xchg
or
inc
mov
mov
or
jp
fdivrs
mov
cmp
testl
sub
sbb
vmwrite
mov
pop
repnz
call
mov
fsts
inc
bound
stc
adc
dec
std
jl
push
pop
iret
mov
ss
push
inc
mov
xchg
out
insl
push
enter
shl
mov
int
pop
jmp
js
jle
pop
mov
movsb
xchg
sbb
adc
jb
pop
xor
and
push
int
xchg
dec
adc
jge
fmulp
insb
aaa
sub
les
nop
push
mov
pop
cli
add
mov
cli
outsl
xchg
jl
cmc
sbb
popa
lds
mov
xchg
lret
les
popa
iret
inc
insl
sub
subb
outsb
adc
xchg
arpl
daa
and
out
mov
jbe
ret
pop
push
fbld
jno
ss
lods
push
sub
mov
addb
gs
push
add
shrl
mov
dec
aas
movsb
in
outsl
jecxz
xchg
xor
jae
cwtl
lea
cs
cmpsb
daa
sbb
movsb
push
sbbb
scas
data16
mov
leave
xor
int3
inc
push
jmp
and
mov
jge
out
or
sbb
lock
ret
xchg
mov
jp
mov
mov
jmp
push
jle
jb
test
nop
or
mov
inc
sarl
jge
cmp
lea
mov
jb
add
xchg
add
in
and
sti
push
lds
test
mov
adc
add
jo
ret
icebp
scas
in
call
in
aaa
loopne
jg
subl
xchg
movsb
add
pop
mov
add
loopew
pushf
adc
jae
cmp
adc
mov
sbb
dec
clc
jp
adc
incb
imul
pop
jp
pop
in
mov
mov
pop
cmc
pop
mov
cld
push
mov
add
jl
sub
es
fidivs
and
mov
lock
imul
inc
mov
call
mov
and
xchg
sahf
lcall
sbb
pop
ljmp
psubb
fisubrl
push
les
inc
mov
jmp
or
or
fwait
push
xchg
inc
xchg
or
data16
cmp
and
xor
into
pop
stc
mov
lea
xchg
sub
sbb
sub
pop
and
jb
pop
sub
fld
jcxz
arpl
mov
cwtl
xlat
mov
xor
xor
sub
mov
push
mov
cwtl
roll
into
into
inc
jno
fnsave
in
adc
lods
xchg
jmp
ret
not
or
cmp
mov
lods
movsb
pop
ljmp
inc
or
push
incb
in
int
pop
inc
adc
repz
mov
mov
xor
int3
sbb
cs
in
sbb
lcall
outsl
in
aas
adcl
adc
nop
cwtl
cmp
push
add
fs
bound
mov
adc
loop
add
cmp
xor
cmp
lea
sbb
adc
xchg
es
mov
xchg
jle
xchg
imul
test
xchg
aam
jnp
cmp
or
dec
mov
sbb
jns
loope
popa
add
xorl
adc
call
cltd
jge
imul
ror
cs
jg
dec
out
xacquire
test
sub
roll
lret
mov
xorl
jo
push
adc
xchg
movsb
xor
lcall
in
sarb
data16
adc
sbb
lahf
lods
push
pop
jmp
and
cmp
fcom
out
add
cmc
cmp
jb
lret
xchg
ja
aas
mov
arpl
cltd
sbb
outsb
cmpsl
lods
sub
pop
shrb
and
xchg
frstor
in
xchg
sub
push
mov
mov
es
mov
push
dec
sbb
pop
aas
dec
xlat
fdivl
mov
jmp
or
daa
test
pop
xor
movsb
rorl
dec
int3
cmpsb
mov
push
xchg
lcall
std
mov
les
mov
out
sti
jl
pop
inc
mov
jns
add
test
adc
cwtl
dec
and
js
sub
insb
int
pop
adc
mov
pop
lret
push
fisttpll
inc
cld
nop
fdivs
cli
fistpll
pop
in
add
ja
xchg
jecxz
xchg
fs
mov
jmp
push
sub
jns
scas
cmpsb
cmp
rorb
popf
push
jl
ja
es
int3
pop
shlb
dec
mov
out
xor
lds
cmp
adc
in
in
pop
in
sysret
and
rolb
or
xchg
jg
in
js
xor
sub
sbb
stc
lods
cld
push
mov
jp
mov
sub
imul
cld
popf
into
mov
cli
jo
sub
xor
lret
or
xchg
movsb
sub
fidivrl
scas
adc
mov
leave
pop
dec
add
enter
add
jp
jo
jp
leave
and
shrl
bound
sahf
test
je
jbe
mov
icebp
jnp
addb
lahf
leave
mov
dec
or
stos
and
jb
and
insb
sub
ds
sbb
dec
call
add
jnp
bound
enter
and
aad
outsb
out
dec
push
xchg
push
bound
mov
lods
sti
mov
ja
sbb
icebp
jl
jne
or
stos
cmp
push
mov
aam
sub
push
push
mov
stc
xor
fcoms
fstpt
scas
xchg
movsb
and
dec
and
cmc
jne
insl
pusha
mov
push
imul
adc
lods
push
imul
adc
popf
in
daa
xchg
cs
sub
enter
fldenv
cld
jns
pop
lret
xchg
add
xchg
push
loope
and
in
stos
sub
lahf
rclb
dec
out
mov
scas
mov
rcrl
mov
ret
int
inc
test
mov
pop
add
js
mov
push
dec
sub
xor
sbb
add
stc
mov
outsb
mov
or
enter
pop
fwait
cli
ljmp
test
push
arpl
adc
roll
aaa
cld
pop
outsb
js
test
sub
sub
call
insl
lcall
ret
popa
add
aas
pop
push
adc
test
mov
das
add
mov
jmp
and
cmp
insb
inc
pop
clc
xchg
mov
xchg
mov
loope
xor
iret
nop
iret
mov
fimuls
gs
dec
and
pusha
xor
sbb
sti
lahf
clc
js
push
pusha
or
push
fistl
loop
loope
fcoms
imul
ds
hlt
push
sbb
jmp
sub
dec
pop
or
or
jns
pop
dec
lcall
cmpsb
mov
fnstenv
aas
in
mov
and
cmp
imul
adc
mov
adc
ret
sub
xchg
push
xor
mov
add
mov
dec
lea
in
xor
mov
pop
mov
sub
imul
imul
ds
movsb
xchg
test
inc
push
cli
push
push
adc
fidivs
dec
xor
adc
in
pmulhuw
sbb
or
add
sub
add
mov
cmp
and
arpl
into
pop
cld
push
clc
inc
cmpsl
stos
ja
out
cmc
xchg
pop
sub
xchg
jne
mov
lds
je
or
aam
dec
pusha
in
lahf
popa
push
inc
call
ljmp
std
fsubs
push
sbb
std
pushf
xchg
sahf
repnz
ja
movsl
inc
pop
jae
mov
cmp
push
mov
clc
xlat
std
scas
stos
std
mov
adc
jno
shl
pusha
roll
mov
bound
jo
hlt
stc
pop
adc
repz
ret
out
mov
cmpsl
das
or
pop
jbe
cmp
mov
mov
test
ficomps
test
cmpsb
mov
iret
pop
mov
push
xor
xor
or
add
sub
xorb
shl
outsl
ja
loope
and
mov
lcall
mov
andb
adc
mov
ja
shll
repz
or
sub
sbb
rolb
or
fiaddl
and
aam
fstpl
aam
out
add
jmp
mov
ljmp
out
add
push
repz
jge
call
adc
jae
adc
cltd
dec
aaa
into
mov
faddl
aam
mov
aas
inc
or
inc
lret
dec
mov
mov
lcall
cmp
cmpsb
sahf
js
out
outsb
add
add
jbe
ret
and
pop
enter
mov
jb
or
sub
pop
and
loop
jl
loope
mov
cmp
movsb
push
push
lret
and
fldcw
mov
adc
daa
out
stos
das
add
dec
repnz
in
scas
and
rorb
stos
inc
lret
mov
add
mov
test
mov
xlat
movsb
sar
push
imul
jecxz
jecxz
outsl
fmulp
scas
dec
pop
add
aaa
imul
mov
jl
push
adc
push
jnp
jns
sub
xlat
xchg
mov
stc
outsb
sbb
sbb
pop
jge
xor
lock
pop
in
mov
shrl
add
mov
ds
xchg
mov
cli
aaa
lods
incb
dec
ret
pop
loope
fidivs
lret
rcl
pop
lahf
mov
mov
jne
icebp
mov
mov
sbb
mov
rorb
jo
iret
push
fmul
jg
adc
mov
push
cmp
cmp
jns
push
jne
mov
int
ja
adc
mov
lahf
xor
and
imul
les
mov
xchg
pop
into
loopne
fistpll
cli
movsl
lods
mov
push
sub
xor
xchg
sbb
sbb
movsl
cli
loopne
jmp
jbe
push
push
dec
cwtl
jle
sub
mov
jbe
outsb
add
in
jb
fsubs
dec
mov
sub
jg
imul
or
or
add
sub
scas
in
jecxz
clts
stos
cmpb
lea
not
xlat
xchg
lret
in
popa
and
insb
mov
sub
mov
sub
ficoms
mov
ss
and
stos
lock
mov
xchg
ljmp
and
mov
stos
movsb
jg
insb
out
push
add
cmpsl
cld
in
call
pop
push
in
push
outsb
add
pop
mov
test
xchg
sbb
mov
orb
cld
dec
mov
jecxz
aam
push
gs
iret
jmp
jecxz
bound
add
jne
scas
mov
out
sbb
inc
hlt
out
xlat
jmp
push
lods
aaa
cmp
roll
in
cmp
mov
sbb
fistpll
lcall
mov
jmp
int
jmp
push
sbb
cld
dec
pop
dec
psubusw
bound
stos
addl
repz
mov
sbb
add
mov
dec
fs
jmp
nop
sub
addr16
add
pop
popa
outsl
jecxz
and
std
mov
pop
jp
or
popa
mov
cld
sub
xchg
xchg
leave
pop
xor
jne
cmpl
mov
cwtl
inc
js
jecxz
push
fdivr
xor
pop
mov
push
insl
mov
imul
cwtl
add
shlb
mov
enter
lods
jb
lods
sbbb
pop
js
push
out
je
lret
popl
mov
cltd
add
pop
out
jns
dec
push
push
and
xchg
ret
push
or
jmp
pop
jns
bound
push
push
test
ljmp
je
lret
gs
mov
pop
jmp
add
cmpsb
movl
and
push
mov
fsubs
fcoms
pop
aas
pop
dec
arpl
jbe
popf
cmp
loopne
push
test
jae
xchg
jae
not
pop
inc
cmpsl
and
push
xchg
rclb
sub
xlat
arpl
outsl
jg
mov
and
jb
xchg
jns
sub
xor
sahf
iret
xlat
push
mov
and
icebp
rolb
mov
jl
sbb
pop
and
jecxz
iret
jmp
adc
push
and
popa
and
lret
xorb
sti
in
xor
pop
mov
pop
int3
es
shr
test
pop
shrl
and
xor
push
add
jb
sti
cld
js
jno
mov
shlb
stc
rcl
repnz
mov
dec
push
fsts
enter
out
push
push
daa
or
push
cld
push
ds
mov
fisttpl
jbe
pop
xchg
pop
or
mov
shll
test
in
jb
clc
xor
push
mov
sbb
scas
sti
push
mov
or
jle
cmp
int
mov
push
dec
andl
add
or
push
sub
add
pop
aaa
sarl
push
lods
repz
xchg
pop
iret
mov
xchg
push
add
mov
je
stos
cmp
incl
cmc
cld
and
in
roll
cltd
mov
xor
cmc
outsb
xorl
cmc
nop
dec
mov
js
mov
test
push
mov
lret
fwait
inc
and
imul
lods
stos
lahf
jbe
sbb
insl
xor
int3
je
fidivrl
xor
pop
addr16
inc
sub
lcall
push
push
inc
gs
inc
jecxz
iret
sub
sahf
or
sahf
add
mov
xlat
icebp
xchg
jbe
arpl
push
mov
fbld
and
cmp
xor
mov
mov
xor
lcall
mov
xchg
icebp
mov
xor
pushl
cmp
insb
pop
mov
or
dec
jno
mov
adc
scas
das
cmp
sub
xor
push
sub
push
sbb
lret
mov
stos
fdiv
dec
xchg
dec
push
xchg
and
inc
adc
jge
les
adc
adc
pop
test
shrl
popa
and
pop
jo
stc
cvtdq2ps
dec
xchg
mov
jb
fnstenv
outsb
scas
and
adc
in
js
fsub
pusha
lock
addr16
sti
loop
mov
vdivps
cmpl
fwait
sbb
rolb
mov
movsb
and
and
inc
xor
push
push
outsl
lahf
scas
add
rclb
add
mov
es
sub
push
lret
jg
and
mov
popa
xchg
push
inc
gs
mulb
jmp
outsb
push
or
jmp
push
xchg
and
lods
push
pop
lcall
into
push
cmp
adc
add
js
adc
dec
fmull
mov
adc
int3
push
out
repnz
pop
fwait
xchg
fnstsw
movsl
pusha
pop
dec
adc
push
lock
movsl
stos
das
das
pop
imul
stc
js
ret
mov
mov
test
sarb
push
lea
inc
in
ljmp
push
rcrb
data16
ljmp
mov
cwtl
xor
jb
or
bound
in
sti
jmp
push
fsts
imul
add
inc
sbb
out
pop
std
add
inc
xchg
pop
and
push
ret
cltd
enter
pop
or
sub
pusha
shl
ds
push
mov
pop
and
cli
xor
cmp
push
imul
movl
push
push
xchg
inc
cmp
xchg
std
arpl
cmp
pop
fistpl
cmp
jle
scas
jp
mov
xor
ds
sbb
int3
xchg
fnstenv
icebp
dec
lock
inc
pop
push
dec
insb
jmp
dec
inc
xor
dec
cmpsl
ljmp
cltd
push
mov
jno
in
outsl
iret
test
pop
mov
aas
or
lret
cmc
cmp
sub
lds
lahf
bound
adc
xor
mov
push
sub
pop
pop
ret
xor
shl
subb
ss
les
imul
push
lds
shrl
cmpb
mov
insl
sub
into
aad
in
or
std
inc
bound
sbb
sub
mov
sbb
mov
xchg
scas
and
mov
cmp
cmp
xchg
fiadds
xchg
inc
repnz
inc
les
push
sbb
jae
fs
bound
aaa
std
and
shll
and
roll
xor
divl
or
dec
cs
push
add
loop
fwait
pop
aad
add
pop
insb
push
sub
cmpsl
sbb
jle
cmp
push
jle
jne
jp
and
popf
repz
pop
push
inc
sbb
js
xor
mov
mov
push
mov
or
sbbl
dec
mov
ljmp
and
jno
add
popf
inc
cltd
push
insb
sub
mov
cmp
pop
aam
out
xlat
test
dec
addr16
sti
dec
mov
xor
data16
and
idivl
sub
mov
xchg
test
dec
mov
dec
imul
scas
and
btr
out
push
loop
add
xor
adc
mov
lret
aam
jl
ret
jmp
rcrb
dec
clc
mov
fdivl
call
mov
cmpsl
cltd
jb
test
adc
add
pop
adc
insl
cltd
repnz
and
jg
prefetch
lret
bound
in
fs
popf
test
inc
mov
adc
or
loop
jo
jge
sbb
hlt
push
xchg
dec
sub
orb
orb
rcrl
xchg
cmpsb
incl
mov
call
loop
dec
out
adc
cmp
in
and
add
fcoml
inc
add
push
fs
imul
push
mov
insl
mov
pop
loope
pop
sarl
jo
decb
push
push
sub
jnp
mov
jl
data16
push
popf
mov
roll
mov
sbb
push
push
jg
jbe
lahf
scas
stos
mov
sub
ss
or
jle
xchg
mov
movsb
in
xor
loop
jmp
inc
jae
in
ret
xor
push
pop
into
in
adc
std
xchg
lret
and
mov
fsubs
cld
lods
inc
cmpsb
lods
aad
mov
aam
les
mov
sub
jg
or
dec
mov
in
sub
push
mov
fisttps
cmp
inc
jle
ljmp
shll
mov
sub
loop
dec
popf
sbb
into
xor
cmp
jno
jecxz
cmpsl
icebp
scas
mov
pop
imul
test
sub
sub
ror
nop
cmpl
addb
inc
mov
xlat
mov
jbe
outsl
lods
ret
jg
mov
jecxz
shlb
fldl
mov
push
mov
into
movsb
insl
sahf
inc
or
std
cld
add
ret
push
sbb
mov
xchg
imul
ret
lret
dec
xchg
stos
fbld
out
hlt
loop
mov
out
mov
dec
pop
inc
cltd
iret
mov
lret
mov
jbe
dec
into
xor
lret
ljmp
adc
mov
popa
push
lret
pop
pop
and
inc
mov
sub
xor
and
lock
dec
sub
mov
and
mov
push
test
stos
and
mov
pop
aas
cld
xchg
adc
and
dec
cmpsl
fld
lcall
pop
jno
sahf
mov
inc
cmovb
sahf
or
sbb
mov
insb
dec
nop
cmp
mov
mov
out
mov
fldl
sti
ss
sbbb
sbbl
ret
leave
in
xchg
cwtl
daa
pop
ds
imul
sbb
test
xchg
lahf
daa
cmp
pop
mov
xchg
and
popf
es
test
sbb
stc
jbe
xchg
les
stc
cmc
xchg
popa
or
cli
ret
int
insb
jo
mov
daa
jns
or
add
add
xchg
cltd
scas
es
int
pop
pushf
inc
insb
mov
enter
pop
jecxz
stos
mov
sub
jne
fistpl
mov
fidivrs
jb
cmpsb
jecxz
jb
test
xchg
cmc
addr16
out
test
insl
in
movsb
push
mov
imul
fstl
xchg
or
xor
or
js
nop
jge
sarb
adc
push
or
sahf
stos
mov
dec
or
adc
sti
aad
push
test
sbb
stos
loopne
imul
lea
jns
shrb
je
insl
mov
fdivp
mov
andl
in
mov
test
push
sahf
mov
fs
mov
mov
and
cli
shr
int3
and
stc
dec
in
inc
movsb
out
cmpsl
sti
cli
inc
dec
cmp
sbb
sub
sub
pusha
lret
pusha
or
xchg
out
dec
ret
jno
pop
popa
mov
andb
test
and
jae
movsb
cmp
push
ss
push
xchg
insl
jno
sahf
pop
cmpsl
add
lods
jne
pusha
and
cs
iret
inc
ss
add
mov
ret
shl
cmp
cmp
outsl
loope
pop
rorl
daa
mov
dec
pop
std
sbb
lds
cmpb
and
in
sub
ldmxcsr
lods
jb
mov
cmpsl
add
mov
fmull
nop
lods
mov
js
sbbl
mov
add
mov
and
shlb
incb
xchg
movsb
les
jbe
jne
sbb
cmp
mov
or
pop
pop
adc
xchg
pop
jle,pt
lea
sub
ficomps
int
mov
push
lahf
pop
sbb
adc
popa
mov
mov
clc
loope
xor
lahf
out
xchg
das
xchg
hlt
push
fistl
js
and
or
push
stos
pop
xorl
loopne
js
repz
loop
mov
cmp
or
sbb
adc
or
pop
sub
loop
mov
sub
repz
outsb
test
mov
icebp
jle
dec
and
mov
lods
mov
sbb
mov
mov
stos
dec
pushl
test
daa
fidivl
and
xlat
mov
loopne
fdivrs
or
sub
call
aad
hlt
out
hlt
mov
out
das
inc
lahf
jnp
outsb
fs
cmpsb
xchg
lea
and
jns
sub
push
dec
pop
orb
mov
dec
loopne
test
inc
cld
jb
loopne
cmp
mov
mull
push
popa
ret
test
add
test
movsb
cmp
int
aam
faddl
loope
push
clc
nop
ss
pusha
mov
dec
out
sbb
insl
adc
dec
pop
scas
mov
dec
sub
and
add
std
daa
clc
test
add
mov
jae
push
jg
test
icebp
mov
cwtl
movsb
jp
xlat
out
and
out
jns
push
xlat
add
xchg
xor
mov
mov
mov
lds
and
outsl
jg
xor
add
dec
mov
jecxz
xor
and
imul
stos
scas
out
aad
sahf
das
lcall
sub
je
jmp
and
and
push
lock
cmpsl
lods
adcb
clc
out
push
lock
cmp
test
dec
xchg
or
fmulp
sub
jmp
mov
mov
daa
ret
sbbb
jmp
cmc
inc
mov
mov
pop
jno
and
dec
stos
xchg
jle
or
sub
xchg
cmpsl
int
in
dec
mov
lcall
lahf
in
xchg
in
gs
mov
xchg
cltd
insb
aas
sub
pushf
popf
ret
rolb
dec
and
or
pop
cmc
cmpsl
je
mov
std
pop
adc
cs
ret
les
cmpb
rorb
lret
rcrb
adc
mov
pushf
push
xchg
lret
leave
adc
shld
outsl
movsb
adc
ficoml
roll
jne
icebp
xchg
push
add
cmpsb
sub
dec
fdivrs
dec
mov
mov
jns
call
pushf
mov
ja
push
pop
mov
add
jae
xor
shl
cmc
pop
cmp
hlt
sbb
jmp
lock
jne
cmpsl
sahf
repnz
int
sub
and
ret
movb
dec
in
xor
xlat
leave
test
insb
dec
addr16
fidivl
movsl
push
cwtl
cwtl
repz
clc
lods
jle
push
jae
add
and
aas
idiv
nop
aaa
inc
mov
and
lock
loopne
add
test
jecxz
or
cwtl
jg
subl
jnp
push
push
cmovne
adc
js
jmp
js
test
fdivrl
and
dec
or
rcrb
cmpsb
imulb
test
mov
sub
push
xor
lcall
es
mov
arpl
test
xchg
mov
xchg
loope
lods
sti
sbb
xchg
cwtl
lods
es
jl
lock
stos
out
add
sub
in
pusha
dec
imul
bound
mov
pop
jne
and
aad
mov
enter
dec
jg
lods
call
jp
and
push
cmc
xchg
push
inc
iret
test
adc
leave
dec
push
scas
push
push
jp
dec
ficompl
pusha
clc
xchg
insb
aas
sahf
add
ljmp
sub
aas
pop
push
or
inc
sub
aas
pop
cmpsb
mov
divb
ret
or
xor
lret
and
and
jo
push
jp
xchg
jns
cmpsl
movsb
dec
mov
pushf
pop
adc
inc
js
ret
pop
lahf
lods
lret
test
ja
loope
inc
inc
ja
xor
jns
nop
cmp
adc
xor
pop
inc
xor
xchg
in
adc
pop
pop
movsl
dec
mov
push
int
fnstsw
nop
cmp
adc
mov
repnz
fdiv
or
pushf
add
jge
dec
jns
push
lea
popf
fld
and
sahf
hlt
in
mov
int3
rcrl
xor
rcll
inc
and
test
mov
subl
mov
push
mov
pop
xor
ds
pop
pop
cmp
outsl
outsl
and
cmp
test
sbb
mov
sti
push
movsl
fistpll
push
or
cltd
cltd
pop
inc
inc
mov
sub
jne
loope
and
inc
cli
ljmp
mov
outsl
lret
inc
cmp
cwtl
fcoml
xchg
test
cmp
push
out
int3
fisubrs
mov
push
iret
push
mov
lret
pop
cmp
mov
mov
jno
pop
popa
push
or
dec
pushf
outsl
lods
or
pop
or
xlat
sub
mov
fisubrl
xor
adc
push
pop
inc
test
shlb
xor
cmp
iret
dec
outsl
mov
outsl
push
outsl
sbb
dec
dec
clc
inc
inc
inc
jle
pusha
mov
out
insl
cwtl
js
inc
fwait
push
int3
outsb
out
mov
in
dec
push
inc
and
cmp
sbb
and
xchg
je
imul
push
bound
inc
ret
aaa
dec
jmp
std
sub
xchg
ds
jb
mov
dec
addr16
or
loope
dec
lret
shr
test
in
inc
cmp
ljmp
mov
cmpsb
and
sub
xor
rorl
and
lds
mov
dec
fisubrl
cmc
out
mov
jns
mov
cmpsb
or
and
inc
inc
cltd
fldcw
stos
inc
pop
lds
cs
mov
sub
popf
lret
dec
pop
lret
pop
shr
lods
inc
and
mov
inc
arpl
xchg
adc
dec
data16
test
sub
dec
test
push
jl
jg
cmp
sti
aas
test
xchg
or
loope
outsl
xchg
push
dec
scas
lock
jb
cld
insl
out
mov
cmpsb
xchg
int3
mov
cmp
fisubrl
int3
adc
mov
mov
mov
fmuls
push
mov
lahf
out
push
out
clc
xorl
hlt
ss
test
mov
inc
rcl
rorb
movups
cld
xchg
mov
repnz
int
dec
popa
push
es
mov
insl
mov
int
aas
test
movsl
jne
mov
cmp
test
js
mov
xor
into
inc
aad
insl
fisttps
jnp
mov
pushf
gs
icebp
mov
ret
sub
mov
cli
dec
mov
cmp
dec
sub
imul
in
fs
ds
xor
and
jb,pn
mov
pushf
pop
cmp
ja
cmp
lcall
cmpsl
pop
ret
mov
jg
sub
sbb
pop
mov
xchg
mov
aam
arpl
repnz
test
jb
lahf
pop
pop
pop
mov
addr16
imul
pop
cmpsb
mov
out
dec
shll
test
xchg
pop
jo
push
add
pop
test
sbb
jecxz
pop
adc
sub
adc
aaa
ss
pop
test
nop
dec
xor
popf
jle
rcrb
push
jle
pop
mov
setg
movsl
inc
or
arpl
xchg
push
and
push
stc
adc
fstpl
iret
roll
int3
int
cmp
mov
cwtl
and
je
dec
sahf
push
mov
inc
mov
lds
les
jae
sub
xor
jecxz
pop
lods
lcall
dec
mov
mov
jnp
das
mov
sti
sarb
or
out
addl
daa
fs
adc
xchg
dec
lret
jge
adc
mov
inc
pop
mov
jmp
dec
mov
int3
mov
aaa
out
adc
repnz
or
fsubrl
ror
ja
decl
jne
and
iret
cmpsl
jle
es
jbe
mov
or
sahf
mov
sbb
fcmovbe
xor
mov
mov
nop
sub
andl
jp
add
xor
loope
stos
fmuls
dec
and
jg
lods
inc
add
movsl
add
nop
sub
xor
clc
cmp
clc
mov
inc
pop
pop
and
in
jo
xor
sub
mov
jns
loopne
popa
es
jns
xor
jnp
stos
or
mov
jp
aaa
fcmovbe
adc
sub
jo
pop
cmp
mov
pop
mov
enter
outsl
inc
sub
and
mov
mov
in
mov
xor
dec
adcl
adc
ret
es
add
cmc
inc
mov
xchg
adc
cltd
or
addr16
fwait
in
mov
dec
cmp
xchg
lahf
adc
dec
pushf
and
outsl
out
cmp
lcall
fnstsw
movsb
jp
jecxz
sbb
mov
out
sbb
jne
inc
and
inc
or
jl
sbb
jbe
xchg
outsl
or
das
outsb
inc
xlat
std
notb
pop
add
dec
or
dec
add
mov
pushf
push
ret
popf
push
filds
lret
mov
mov
dec
filds
sbb
testb
out
xor
fisttpll
jb
test
inc
fstp
andl
fcoml
push
xor
cmp
jne
ret
daa
insb
mov
adc
ja
dec
cmp
push
push
cmp
inc
shr
add
lret
scas
add
data16
mov
xor
subb
outsl
and
fmulp
pop
inc
pop
xor
stc
cs
aam
aam
adc
gs
pop
push
notl
mov
mov
adc
jge
xor
inc
je
loope
xor
dec
bound
jae
sbb
jnp
sarl
inc
mov
jae
sbb
gs
xchg
icebp
mov
inc
xchg
add
adc
hlt
out
cmpsl
mov
mov
out
mov
out
je
pushf
xchg
and
scas
hlt
sub
push
lret
negl
sub
dec
out
push
ret
repnz
clc
cmp
jmp
cmp
loope
mov
or
jns
jecxz
lret
sub
add
push
in
sub
mov
inc
in
push
mov
lea
inc
jle
in
mov
cld
fnstenv
enter
daa
jl
adc
and
cmp
dec
cmp
xor
out
orb
fsubr
lcall
xor
test
sbbb
cmp
pushf
dec
mov
cmp
sbb
out
daa
inc
clc
filds
and
fs
mov
cltd
and
pop
inc
repz
or
dec
sbbl
pop
ljmp
sub
clc
ss
mov
fwait
bnd
and
fcom
xor
and
pop
sbb
dec
adc
enter
sub
inc
xchg
xor
jns
lret
push
popa
loop
movmskps
mov
sti
push
psraw
mov
call
mov
mov
nop
adc
insb
sbb
repnz
mov
cld
scas
pop
lcall
pop
das
cld
int3
pop
lods
pop
mov
pushf
add
or
xor
inc
cwtl
inc
jns
sub
loop
mov
mov
iret
out
sbb
inc
pop
cmp
inc
mov
mov
fistpl
dec
lods
cmp
call
pop
or
lds
mov
sbb
decl
es
mov
cli
int
pop
jns
insb
int3
pop
mov
ds
sarb
mov
test
ja
sbb
scas
sbb
std
push
orb
sahf
push
mov
lea
push
inc
xchg
lea
add
sbb
scas
mov
fstpt
sbb
sub
jno
mov
jns
mov
push
jnp
pop
xlat
nop
push
adc
xchg
add
mov
fwait
push
pop
in
push
or
pop
pop
incb
inc
imul
stos
dec
sbb
js
xlat
adc
xchg
xchg
or
ret
jecxz
or
shll
popf
in
sbb
jo
lods
icebp
aad
loopne
enter
sbb
jl
les
and
push
leave
rcrb
jno
imul
push
mov
fcompl
xchg
jmp
scas
and
cwtl
sti
push
movsb
and
add
jle
jl
dec
mov
dec
adc
sub
in
xor
aas
lea
mov
das
mov
lods
mov
or
sahf
pop
cmp
cli
pop
repz
repz
cmp
mov
jnp
mov
cmc
sbb
mov
adc
loopne
aaa
sbb
dec
das
das
jb
sbb
push
xchg
adc
cmp
cmp
imul
mov
stos
arpl
xor
sar
ret
ret
xchg
mov
pop
push
movsl
mov
in
adc
ljmp
arpl
pop
fsts
adc
inc
mov
andl
stc
hlt
dec
cmp
leave
add
inc
adc
cs
arpl
mov
inc
and
mov
out
push
push
leave
mov
stos
frstor
or
and
mov
aad
in
adc
mov
mov
and
rolb
xlat
or
loope
adc
pop
add
fldl
add
push
push
shlb
pop
or
dec
inc
fistpl
add
jns
sbb
out
dec
hlt
dec
mov
xchg
push
cmp
sarb
sbb
stos
sbb
pop
sbb
push
cmp
and
sbb
jle
xchg
jp
pusha
mov
cmpsl
jmp
out
fistpl
insl
sahf
adc
or
and
shr
enter
xchg
lret
pop
lcall
popl
in
mov
popa
lea
js
push
loop
push
icebp
lods
or
xor
mov
imul
inc
sub
adc
mov
sarl
jmp
ret
stos
sub
push
bound
xor
pop
test
jmp
or
sbb
add
loop
add
fidivs
push
addr16
jb
inc
xor
adc
inc
fiadds
int
rcrb
int3
add
jno
nop
or
adc
and
dec
dec
sub
jle
cmp
shlb
pop
out
mov
movsb
pop
adc
cld
test
cmp
sbb
test
cmp
or
test
jl
dec
xor
inc
sub
enter
and
stos
xor
cs
cmp
lret
inc
sbb
mov
sarb
push
stos
repz
and
iret
push
and
negb
cmc
sub
add
movsb
fbstp
mov
lods
pushf
shrb
and
ror
ja
add
dec
cmp
cmp
and
paddd
jno
adc
adcb
and
lods
cmp
mov
outsl
and
jge
mov
out
push
call
ja
idiv
jecxz
push
cmp
jns
or
add
adc
call
mov
outsl
xor
scas
inc
push
jae
jl
and
mov
shlb
dec
jg
sub
or
or
nop
fcmovbe
ret
int
mov
inc
pop
mov
jmp
repz
repz
jno
ret
out
hlt
fdiv
xchg
fidivs
xchg
or
outsl
gs
leave
sbb
pop
int
or
sbb
daa
orl
jae
jno
dec
repnz
scas
mov
fsubrl
xor
cmp
add
and
inc
pusha
push
push
fidivrs
repnz
mov
cld
or
lock
mov
push
or
dec
aam
fs
stc
and
data16
mov
jecxz
jno
push
iret
push
xchg
lods
xchg
sub
or
cld
inc
std
call
ss
adc
icebp
xchg
jnp
std
lahf
push
pop
pop
cmp
mov
sbb
mov
popf
push
aad
cmp
movsb
cmp
stc
int
sbb
dec
pusha
pop
mov
out
or
push
inc
lds
repnz
mov
stos
inc
sub
and
jo
lret
adc
or
jo
and
lret
incb
pop
out
mov
repz
subb
out
ret
rolb
sub
ljmp
sub
scas
lods
and
movsl
add
xlat
push
xchg
or
aad
aaa
popf
xchg
push
popa
addr16
popa
repnz
add
cmp
shl
add
add
add
pop
sar
and
adc
dec
inc
push
mov
aaa
jmp
mov
jl
lods
jb
push
push
sarb
and
cmc
flds
jg
popa
aam
stos
aaa
jno
or
inc
xchg
pop
adc
dec
pop
cmpsl
add
sub
sub
mov
sbb
mov
pop
rclb
aad
dec
nop
call
inc
ljmp
cmp
cwtl
cld
or
lret
add
add
test
push
ret
pop
add
cmc
adcl
test
mov
adc
pop
jmp
lcall
fs
movsb
jns
jecxz
lret
xor
add
mov
jp
adc
pushf
out
test
or
outsl
sub
jl
pop
inc
ss
cmpsb
jo
or
hlt
andb
push
push
in
inc
jle
mov
xor
je
xchg
cmpsb
into
jno
or
out
mov
imul
aam
paddusb
jae
dec
mov
push
xchg
hlt
add
loop
cli
leave
cmpsb
out
mov
negb
mov
repnz
in
push
dec
xor
adc
dec
push
xor
setae
push
jl
pop
mov
push
aam
scas
mov
and
stc
mov
mull
add
dec
push
mov
rol
inc
ret
sub
aad
pop
jo
cld
fcmovu
push
or
jbe
push
stos
in
dec
in
xor
mov
xchg
dec
pop
sbb
imul
fdiv
les
fprem
mov
lcall
jnp
inc
mov
mov
cmp
pusha
mov
inc
add
lret
xchg
dec
lds
les
lock
testb
and
and
push
mov
and
xor
pusha
mov
pop
lcall
fidivrs
outsl
fs
fisttpl
aad
jg
mov
mov
and
fiadds
mov
les
cmpsl
inc
and
mov
lret
dec
test
sbb
xor
lods
jecxz
lds
out
test
jmp
jbe
rclb
sub
loope
mov
dec
and
xchg
xchg
ja
fwait
insl
push
jmp
shl
mov
sbb
cmp
daa
pop
push
nop
mov
pusha
rcr
mov
mov
ret
mov
mov
mov
fwait
mov
mov
or
mov
cwtl
sub
lahf
outsb
mov
arpl
dec
mov
mov
movsb
push
push
jns
adc
mov
jg
insl
lods
push
pop
bound
negl
das
clts
push
lods
enter
dec
push
test
and
xchg
int3
and
test
std
ds
daa
jg
push
xor
out
cmpsl
inc
call
and
icebp
popa
xor
mov
mov
das
out
int
xor
cmp
cmc
sbb
mov
dec
clc
or
sti
cltd
pop
sub
enter
and
xchg
test
int
stos
enter
xor
jg
fdivrp
sub
and
sahf
movsb
nop
push
hlt
jmp
xor
lret
add
mov
sub
cmpl
push
ret
xor
and
ret
aas
mov
mov
ror
sbb
repnz
ret
js
inc
xchg
cmp
pop
jo
lret
pushf
xor
sub
mov
cmc
inc
inc
ja
fstpt
sbbb
dec
xchg
jbe
cli
cmp
or
pop
inc
and
xor
sub
mov
and
cmc
jo
clc
imul
ss
loop
push
and
jo
daa
mov
ret
xchg
call
jmp
mov
push
xor
enter
stos
dec
adc
mov
sub
dec
adc
mov
insl
movsb
pop
dec
test
addr16
rclb
jge
mov
push
testl
fcmovnu
mov
insl
les
add
pop
jne
push
mov
xchg
cld
mov
adc
hlt
xlat
pop
aaa
mov
sub
cs
xor
and
clc
ds
cmp
outsb
std
or
aad
push
pop
push
or
adc
mov
xchg
ljmp
xchg
mov
mov
sub
mov
jmp
pop
addl
mov
jp
sbb
clc
xchg
cmp
cmp
shl
pop
or
pop
aas
mov
stos
rsm
insl
fisttpl
xlat
inc
decl
popf
jno
loop
jb
scas
xchg
or
mov
and
mov
pop
jecxz
fs
adc
or
pop
and
add
fdivrs
add
or
enter
push
inc
in
adc
xchg
adc
xor
mov
ret
out
adc
and
daa
xchg
xchg
xchg
xor
ljmp
test
sar
jns
leave
jecxz
fwait
dec
sti
push
imul
and
add
sti
push
fucomi
or
push
cwtl
add
fdivrs
xchg
push
xlat
stc
les
mov
cwtl
std
cmc
test
pop
cmpl
mov
pop
test
icebp
loope
insb
mov
xchg
pop
cmc
lds
sbbb
mov
jge
dec
dec
test
out
mov
and
leave
mov
faddl
mov
or
outsl
std
das
fs
stos
dec
inc
jno
adc
loop
pop
add
es
clc
mov
daa
outsb
mov
cwtl
push
fwait
xchg
push
out
sub
lret
xsavec
dec
sub
mov
adc
adc
cmp
sub
sub
pop
lar
adc
sti
push
inc
imul
fldl
test
ret
imull
js
pop
add
es
sub
lods
cmpsl
insl
lret
std
in
bound
mov
and
js
sub
in
andl
push
inc
inc
add
mov
test
lods
mov
inc
sub
add
pop
mov
insl
mov
push
xor
es
mov
aas
aas
cli
mov
pusha
fwait
sbb
and
cmp
inc
movsl
mov
push
cs
adc
iret
cmp
call
js
adc
cld
jne
int
fnsave
pop
inc
sub
push
out
sub
scas
or
lods
cmovns
push
xchg
xlat
scas
pusha
les
mov
sti
mov
sti
jns
sub
or
ret
cmp
fsubr
dec
loope,pn
jb
pop
xor
fmull
sbb
es
outsb
lods
ret
xor
in
mov
pusha
std
pop
and
in
fidivrs
xchg
cmp
sbb
xor
pop
incb
or
add
or
popf
push
int3
sti
test
mov
xchg
mov
add
sbb
dec
in
call
in
ja
les
sub
sub
adc
xchg
enter
cmp
mov
sbb
lea
xor
dec
sbb
cmpsb
out
push
fwait
stc
neg
xchg
xor
scas
pop
stos
or
xlat
cmpsb
xchg
mov
lods
xchg
add
sbb
bound
sub
xrelease
xlat
dec
mov
or
xchg
inc
add
mov
lods
arpl
stc
push
sarb
in
ret
enter
out
out
add
das
fnsave
dec
mov
inc
lcall
leave
sub
inc
mov
fisubs
sbb
push
rorb
add
push
ljmp
sbb
test
into
jb
jge
jae
mov
or
dec
pop
or
and
mov
das
loop
cmc
jp
sub
lds
test
mov
cwtl
push
aam
pop
or
pop
stos
ja
aas
lock
ljmp
or
mov
push
mov
in
jle
mov
cli
call
jo
mov
mov
popa
xadd
cld
gs
into
clc
pop
adc
mov
insl
js
dec
scas
sbb
cmp
inc
dec
iret
cli
inc
std
pushl
popf
jbe
sarb
out
mov
scas
stc
sbb
and
inc
mov
ljmp
call
pop
lods
outsb
inc
repz
pop
ljmp
cld
add
push
in
jbe
jl
mov
sub
fstpl
or
inc
lcall
xchg
ds
out
push
je
das
and
jle
mov
mov
push
xchg
shl
fbstp
nop
or
mov
push
lret
xchg
hlt
repz
and
xor
xor
xor
lods
adc
repnz
and
push
xchg
jb
mov
xor
cmpsl
sbb
adc
pop
stos
inc
mov
mov
adc
dec
cwtl
sahf
stos
repz
out
lods
jb
mov
outsb
or
call
jb
nop
mov
lcall
popa
in
bound
mov
fists
push
xor
das
icebp
mov
lret
jae
daa
fmull
add
pop
xchg
jno
loope
fsubrl
fisttps
sbb
xchg
add
popa
push
jb
sbb
and
mov
cltd
push
mov
int
ja
jbe
outsb
fs
push
lcall
stos
xor
popf
pop
mov
cmp
xchg
pop
jecxz
out
mull
xor
mov
push
popf
aam
mov
repz
and
jnp
dec
arpl
adc
loop
xchg
cmpsl
adc
scas
mov
out
pop
inc
movsl
movb
aaa
movsb
or
or
in
imul
es
sahf
inc
or
fiadds
mov
cmp
inc
out
das
in
xchg
push
out
pop
orl
aam
mov
lods
out
adc
push
icebp
stc
fistpll
xor
xor
bound
gs
inc
jecxz
mov
scas
jae
fsubs
jne
imulb
scas
pusha
shrb
shlb
pop
pushf
outsb
mov
push
pop
mov
adc
or
push
dec
push
fldpi
int3
or
mov
cmpsl
in
sbb
sub
xor
or
es
dec
fldcw
fcmovnb
pop
pop
js
cmp
mov
jl
cmpl
pop
push
andl
loopne
pop
xchg
xchg
adc
push
xor
xor
cmp
or
inc
push
sbb
sbb
sbb
xchg
lcall
xchg
movl
push
fdiv
test
lcall
scas
pop
push
mov
adc
xor
mov
pop
jl
fs
or
icebp
into
xor
xchg
dec
cli
flds
mov
enter
sbb
fistpll
xor
or
daa
pop
mov
int3
sar
test
sti
xchg
cli
fs
push
push
jnp
fsubl
adc
bound
in
jbe
loope
sub
inc
mov
mov
sub
xor
and
add
decb
lock
adc
adc
dec
shlb
cmp
repnz
jbe
mov
xchg
pop
inc
mov
add
mov
pop
inc
sbb
mov
inc
adc
push
es
cmp
idivb
push
mov
test
fcom
sbb
adc
iret
mov
xor
dec
mov
mov
daa
mov
je
ret
jb
es
cmc
lock
call
dec
mov
xchg
dec
jne
test
mov
sub
or
mov
lret
lfs
xor
leave
aaa
sbb
es
mov
push
inc
jge
pop
jae
cli
adc
out
sub
fcmovbe
stc
imul
cmpsb
pop
out
xor
mov
ss
lods
js
jb
fstps
add
cmp
and
pop
cmovp
cmp
jbe
arpl
or
ljmp
leave
jge
daa
addr16
pop
or
rolb
mov
push
aaa
out
xlat
cmp
pop
lret
test
xchg
xchg
movsl
push
pop
mov
xchg
push
test
clc
cmpl
rcr
lret
jmp
aad
mov
and
std
inc
pop
addr16
fidivs
clc
jmp
xchg
cmp
dec
test
mov
js
rorl
sub
xchg
clc
mov
mov
subb
shrl
add
ljmp
nop
cli
jnp
pop
xchg
pop
gs
mov
icebp
adc
std
push
and
sub
inc
xor
pop
in
icebp
xor
fnstcw
mov
popf
dec
jbe
xchg
insl
das
aam
lret
mov
std
cmp
inc
pop
push
mov
cmp
mov
cmp
jae
inc
or
xor
xchg
dec
jge
icebp
inc
test
inc
je
mov
add
mov
jle
sbb
add
hlt
addb
inc
fldt
clc
pop
pop
adc
push
jb
in
ficomps
jb
xor
lea
into
fists
lods
loopne
push
jae
mov
imul
and
out
sbb
aaa
fdivrs
add
mov
ja
mov
pop
ja
sarb
into
dec
insl
loopne
sub
iret
pop
xor
xchg
stos
call
fucom
xchg
push
lds
xchg
rcl
loope
clc
inc
pusha
arpl
or
into
loope
testb
sub
lods
xchg
imul
sub
mov
clc
push
cmp
cmpsb
push
mov
pcmpgtb
push
ja
pop
clc
xchg
cmp
mov
xchg
iret
jbe
inc
mov
add
and
fstpt
sbb
imul
cmp
or
subb
ror
inc
hlt
push
mov
popa
call
lods
mov
or
das
pop
push
xor
stos
xor
pop
aam
aaa
xorb
inc
mov
push
aad
xchg
idivb
dec
sbb
mov
sbb
dec
cltd
daa
cmp
cld
les
pop
mov
jecxz
sbb
or
push
jo
ret
xor
sub
cmp
and
jmp
test
add
fcmovu
aas
stos
ja
adc
outsb
xor
xchg
sub
xor
rol
in
sbb
fcmovnbe
sub
push
lret
sysenter
test
out
push
fcmovne
ret
icebp
jno
push
aam
ss
or
in
push
xchg
mov
mov
mov
shrb
mov
cmp
imul
xor
into
arpl
pop
fstl
mov
push
imul
push
adc
mov
shrl
inc
and
mov
lcall
outsb
pop
clc
xchg
or
lds
jmp
or
fnstcw
addr16
dec
sub
cld
mov
jmp
repz
and
jg
movsl
mov
insl
aaa
lock
sbb
sub
call
fs
adc
in
jge
push
cmp
inc
insl
adc
rol
pop
jb
xchg
imul
or
add
aad
dec
dec
jmp
add
sub
cmp
mov
push
xchg
outsb
mov
sti
mov
inc
or
movsb
fnstcw
cli
jle
add
mov
daa
int
mov
je
xor
push
jle
mov
fwait
incb
or
sub
cmpsl
sub
push
in
in
enter
jmp
mov
imul
cld
leave
push
cmp
mov
scas
fwait
rolb
mov
sbbb
cmp
rorl
movsl
cli
jno
jnp
mov
dec
inc
mov
popf
lcall
movsl
pop
icebp
mov
push
ss
add
or
movsl
adc
hlt
jnp
add
mov
xor
and
dec
or
popf
xchg
test
into
loope
sbb
xor
fsubl
pop
or
push
outsb
push
and
hlt
cmp
jns
mov
std
pop
pop
jmp
fs
cmc
xchg
add
test
jle
xlat
or
mov
test
mov
loop,pn
lcall
add
out
fistl
mov
out
sbb
xchg
loop
aam
add
and
pop
fwait
pop
hlt
adc
js
ret
mov
jmp
dec
mov
imul
push
xor
inc
cmp
push
std
shlb
push
xchg
out
les
sbb
dec
inc
push
sbb
hlt
xlat
sub
jb
jge
sbbb
xchg
movsb
pop
mov
and
and
pop
call
cmp
inc
mov
inc
aaa
imul
pop
inc
sbb
movsl
mov
adc
push
mov
sbb
jns
adc
data16
inc
int
mov
adc
sub
jnp
dec
popa
cmc
adc
jno
add
incb
cmp
aad
das
sbb
sbb
in
in
jg
jg
aaa
or
mov
add
adc
testb
inc
xor
or
xchg
and
jl
jl
inc
insb
icebp
test
or
or
inc
iret
das
mov
mov
lock
pop
jmp
jo
lea
or
xchg
pop
sbb
push
aad
mov
mov
mov
jp
incb
arpl
icebp
lret
pop
ret
inc
mov
test
jnp
adc
fiadds
ficoms
mov
push
shl
sbb
bound
dec
jne
int
imul
xchg
hlt
pop
aas
pop
push
cltd
mov
popa
sub
adcl
in
and
add
ljmp
mov
es
dec
or
inc
xchg
push
push
shl
mov
fs
repz
jne
cli
lds
lret
lods
es
fisubs
pop
lret
cld
je
cmp
pushf
or
outsl
enter
add
scas
lea
imull
repnz
bound
add
mov
mov
inc
add
mov
pop
push
imul
popf
and
mov
dec
inc
imul
adc
mov
test
xor
ds
leave
in
loop
xchg
cmp
xor
sub
in
data16
mov
or
mov
stos
inc
lea
js
into
dec
push
pop
xchg
mov
imull
add
inc
outsb
jnp
scas
push
fcompl
push
cld
test
xchg
dec
dec
cmp
sahf
fcomps
daa
fdivs
cmp
outsl
stos
cltd
inc
mov
push
jo
push
and
pop
stc
jb
ds
push
sbb
jno
popa
push
sub
sub
push
pop
xor
pop
mov
sub
idivb
or
xchg
dec
out
sbb
enter
dec
sub
or
out
rol
or
mov
roll
mov
xor
push
fldl2e
in
and
push
shlb
mov
xchg
out
fldcw
xor
mov
cmpsb
repz
in
les
mov
jo
lods
mov
mov
mov
bound
mov
mov
sub
fnclex
les
sub
jne
xor
aad
popf
sub
fbstp
jmp
outsl
add
fmul
pop
imul
fwait
jnp
rclb
mov
iret
xor
int
enter
mov
jmp
fwait
loope
daa
imul
jg
mov
pop
pop
sbb
pusha
pop
sahf
and
lods
imul
gs
pop
rolb
jle
je
or
in
insb
mov
addr16
xor
push
sub
or
movsl
mov
sub
in
push
pop
pop
pop
dec
jno
sbb
add
insl
pusha
and
or
sub
lods
xchg
mov
fcomi
adcl
repz
jne
push
loopw
push
iret
dec
gs
push
push
fwait
lods
and
push
xchg
lret
and
or
xor
and
mov
lods
outsl
jb
dec
cmp
mov
rol
movsb
xchg
push
xor
fs
or
roll
mov
lret
xchg
jecxz
sub
pop
cmp
lock
movsl
mov
jg
mov
out
ret
rcrl
int
xchg
faddl
and
or
push
leave
jns
pop
rorb
and
jmp
xchg
in
mov
mov
or
push
ss
out
pusha
shll
xor
adc
inc
fstpt
lret
insl
lret
nop
test
sub
or
loop
inc
lret
lret
imul
loopne
scas
stos
mov
pop
test
mov
push
out
loop
sbbb
adc
mov
gs
xchg
xor
push
js
mov
shrb
or
pop
fsubrl
dec
jb
fldcw
out
mov
push
xor
xor
pop
pop
in
mov
sbb
inc
sub
xchg
pusha
dec
inc
mov
loope
fwait
loope
inc
icebp
mov
fildl
inc
add
push
cwtl
jnp
test
in
leave
push
in
push
mov
jns
mov
aaa
in
cmpb
fisubs
push
inc
rclb
cmc
imul
xor
insb
jae
out
iret
sbb
mov
dec
push
jb
sub
orl
cmpl
lds
sbb
mov
out
sbb
adc
xlat
in
pusha
xchg
push
mov
adc
mov
jg
shrb
in
add
xchg
inc
dec
movsl
sahf
xor
push
arpl
cmp
ja
rcrb
push
or
xchg
mov
or
sub
mov
in
std
popf
sub
jge
faddl
ljmp
stc
pop
and
mov
jns
movsb
es
dec
add
mov
lret
mov
outsb
mov
push
xchg
cmp
test
mov
popf
fcmovnu
in
pop
dec
mov
lret
cwtl
lcall
add
dec
hlt
insl
scas
movsb
shll
and
ror
pusha
mov
push
xor
and
test
movsb
inc
sarl
mov
insl
call
loop
inc
push
xchg
adc
mov
test
xor
imul
in
add
inc
popl
push
test
sbb
loopne
ss
mov
xor
lret
loopew
out
xor
in
aas
pop
popa
mov
das
sbb
mov
add
imul
cmp
cmp
inc
pop
popf
jo
or
lahf
push
jge
in
or
jp
push
push
xor
mov
xchg
lcall
cld
das
and
cmp
add
xor
jnp
lcall
cmp
mov
and
xor
mov
mov
xor
cvttps2pi
jmp
pop
jnp
push
pop
push
mov
and
bound
add
sub
movsb
stos
aad
pop
xchg
cltd
fidivl
adc
jne
les
push
inc
loop
jmp
jnp
xor
pop
cmp
cwtl
test
leave
ret
dec
mov
lds
scas
out
cs
and
sub
out
sbb
test
inc
adc
jo
gs
aaa
mov
jbe
les
cld
stos
push
in
sbb
fisttps
xlat
adc
mov
push
data16
sub
insl
ja
push
int3
pop
test
pop
daa
enter
mov
add
call
insl
out
fwait
repz
pop
jl
fldt
sti
popa
lret
jmp
inc
mov
adc
fmull
int
jecxz
sub
push
pop
cmpsl
dec
jo
insl
jecxz
mov
lret
dec
cmp
push
jmp
sub
movl
outsb
stos
sub
and
mov
jno
ret
shll
pop
cmp
arpl
bound
pop
pop
dec
mov
and
lods
jno
mov
sbb
dec
mov
jo
push
scas
orl
adc
int3
movsb
push
fistpl
mov
cmpsl
mov
insb
lea
cmp
imul
xchg
mov
or
sub
cmp
icebp
push
xchg
mov
fdivs
loope
xchg
push
fstps
jmp
xor
inc
fidivl
loopne
cmc
jne
and
sub
int3
adc
ficompl
andl
sbb
fsubl
cld
enter
xor
pop
push
loope
loope
testb
or
subl
or
xchg
adc
jmp
sbb
movsb
test
add
xchg
sarl
mov
adc
xor
adc
aas
push
cmp
and
cld
fnstcw
int3
mov
imul
cmpsl
aad
aam
ror
outsl
pop
xor
jnp
sub
push
push
push
cmp
sub
std
push
imul
inc
mov
ljmp
mov
add
gs
mov
arpl
aaa
jge
int
jecxz
push
pop
int
scas
sbb
mov
adcb
sbb
or
push
cmpsb
mov
fsubs
and
adc
xor
sub
outsb
cmpsb
cmp
repnz
into
je
mov
test
gs
out
jno
dec
in
xor
pop
stc
mov
or
mov
inc
inc
insl
rol
inc
dec
push
mov
aad
sbb
mov
addl
adc
xor
lock
fisttps
jl
push
sbb
mov
cli
jge
mov
dec
mov
sti
mov
xchg
test
mov
xor
pop
testl
inc
and
hlt
pusha
lret
jbe
xchg
xchg
loop
scas
push
fucom
xor
jnp
mull
xchg
shl
pop
aam
add
jne
fildll
pop
std
or
lahf
aaa
dec
push
js
xchg
in
cld
jl
jl
jmp
push
fmuls
xor
push
or
mov
pop
imul
aad
xchg
cmpl
fstp
dec
fwait
shl
in
cmc
cli
jo
ret
mov
movsl
addb
lret
xor
sti
lods
js
incl
and
jg
xor
lcall
out
dec
push
mov
pop
test
lcall
mov
aaa
repz
aas
mov
aad
cwtl
xchg
xchg
gs
aad
mov
dec
data16
jno
sti
frstor
cmpsb
or
add
sahf
test
add
mov
mov
test
ret
or
mov
sbb
aad
mov
adc
ror
pusha
pop
pushf
or
adc
mov
mov
cmp
ja
cmp
push
cli
dec
sub
rclb
cld
push
pop
push
lret
ret
inc
jl
arpl
jle
orps
jns
and
jg
pop
notb
imul
negl
sub
dec
mov
jmp
xor
fwait
dec
clc
pop
inc
roll
mov
mov
movsb
and
idiv
test
sbb
cmpsb
jae
sbb
mov
xor
xor
jge
daa
xchg
mov
dec
testb
ret
pusha
stos
dec
cs
movsb
jle
dec
aaa
test
jge
rol
mov
and
add
std
mov
or
negl
cmp
clc
adc
jo
pop
mov
push
jle
addr16
incb
rcrl
ds
jo
std
fcompl
dec
mov
orb
jb
fisubl
shll
jbe
out
mov
test
ret
test
ds
cmc
daa
xor
lods
mov
sub
es
and
cmp
cld
sbb
xchg
mul
xor
bound
mov
aam
cmp
cs
inc
aaa
xlat
mov
arpl
add
jb
mov
rcrb
mov
sbb
mov
dec
lahf
mov
loop
sub
jp
scas
dec
or
mov
xor
push
das
aaa
rcll
dec
fnstcw
dec
or
mov
fs
aas
shll
mov
cmp
int3
sar
popf
push
stos
sbb
xchg
insb
dec
rclb
cmp
jle
aaa
jo
and
sbb
mov
stos
pop
mov
scas
jbe
sti
sahf
in
cmp
rcrb
ss
ss
lret
mov
ds
ficompl
or
jg
fiadds
ds
scas
mov
lea
bound
cmp
shl
xor
push
int
loope
dec
loop
arpl
lods
je
push
test
jp
sub
mov
aam
sub
int3
adc
inc
mov
xchg
iret
outsb
jmp
mov
dec
mov
or
pop
cmp
lock
inc
pop
in
pop
inc
popa
test
fdivrs
sub
leave
ja
cwtl
hlt
enter
add
in
fisubrs
lods
mov
dec
jns
push
push
fldl
jg
xlat
fucomi
pop
je
xor
cmc
jecxz
push
mov
mov
popf
jge
outsb
jne
repz
push
jnp
imul
mov
mov
int
iret
popf
loope
cltd
jne
fwait
lcall
in
repnz
jge
xlat
sbb
mov
out
pop
sbb
push
icebp
orb
sub
ret
sbbl
imul
cs
call
cmpb
gs
lret
push
sti
mov
cmp
cltd
jo
ret
div
mov
mov
rolb
dec
cmpsl
adc
pop
mov
adc
jmp
sbb
cmp
pop
cmp
outsl
inc
jno
in
xor
subb
shrl
cmp
cmp
xchg
push
aaa
icebp
add
leave
das
sahf
ret
scas
dec
hlt
mov
pop
add
aas
mov
jmp
shll
cmpl
jmp
lods
ja
aad
outsb
xor
mov
mov
fistl
or
push
inc
repz
inc
ret
lea
add
loopne
adc
loope
and
lret
push
fistpll
push
push
jnp
push
add
push
aas
and
xchg
dec
and
ret
add
icebp
xchg
ds
lcall
repnz
add
pop
test
lcall
add
xchg
mov
repz
mov
ljmp
icebp
mov
push
inc
jae
push
outsl
xchg
xchg
pop
shll
movsb
jo
es
aam
inc
pop
and
and
mov
inc
push
add
ja
cltd
scas
movsl
push
in
ja
adc
or
adc
dec
loop
xchg
inc
lret
sbb
std
clc
aad
test
jmp
add
rcrb
xor
je
test
adc
loop
adc
es
and
rcll
inc
repz
add
adc
mov
pushf
xchg
lods
sbb
mov
and
mov
subb
subl
add
test
insl
jmp
pop
cli
ja
jb
pop
push
stos
call
add
int3
out
repz
xor
lret
ret
popf
sub
add
pop
hlt
dec
cld
insb
aas
push
roll
cmp
mov
insb
stos
mov
add
inc
lcall
sub
xlat
cmp
addr16
and
and
push
iret
jl
push
les
mov
popf
iret
inc
mov
cli
sahf
pop
jmp
xor
and
int
mov
arpl
add
push
xchg
sub
mov
fstpl
sub
mov
shll
into
sub
test
push
pop
add
aaa
in
or
stos
cmc
fisubl
ja
sar
lods
jmp
insl
addr16
testb
jnp
add
dec
cmp
pusha
aas
fs
stc
or
pop
and
adc
sub
out
mov
jns
sub
gs
jmp
test
xchg
out
pusha
or
lcall
cmpsb
push
icebp
sbb
push
aad
mov
repnz
aas
and
popf
jb
xchg
jecxz
fistpl
fsub
pop
dec
flds
mul
lret
cli
pop
mov
mov
in
stc
inc
in
cmpsl
ljmp
jg
pop
or
cmpsl
or
cmp
aas
in
jnp
lock
lahf
pushfw
jae
in
sbb
push
adc
mov
jo
sub
mov
or
add
xor
mov
insb
inc
incl
xchg
inc
adc
add
lea
xor
mov
inc
jno
pushf
xchg
mov
and
inc
or
dec
sahf
inc
fstpl
daa
sbb
mov
jno
xchg
imul
mov
data16
dec
stc
dec
jnp
arpl
pushf
test
jge
mov
insb
mov
dec
mov
hlt
fcomps
xorb
testl
mov
push
jo
or
bound
mov
jecxz
fwait
sbb
test
sub
fsts
jle
xchg
or
call
scas
pop
or
add
in
jmp
ret
test
into
jmp
jge
xlat
inc
and
iret
push
out
jge
xchg
in
mov
outsl
les
call
mov
adc
or
dec
dec
ja
idivb
xor
adc
icebp
push
fiaddl
cwtl
icebp
movsbl
insl
adc
ss
mov
cld
sahf
xchg
cld
hlt
push
bound
ret
cmp
and
out
jmp
and
mov
stc
mov
sub
lds
dec
mov
jmp
xchg
int
sub
mov
aas
pop
or
sbb
add
jle
inc
push
or
jae
cwtl
xchg
pop
sub
jbe
sbb
jno
and
rol
xchg
xchg
ret
lods
jecxz
das
fwait
int
loop
fdiv
mov
fidivrl
fstpt
inc
xlat
out
xchg
sub
mov
cmpsl
add
daa
fcmovb
mov
insb
cmp
sbb
pushf
jb
subb
pop
sbb
dec
xchg
jns
in
aaa
sbb
fsubp
sub
pop
mov
loope
cwtl
xor
stc
loopne
push
addr16
setg
mov
out
test
cltd
cmp
rclb
xor
insl
xor
sbb
ds
icebp
xor
mov
push
push
iret
cld
lret
lahf
jg
imul
test
sbb
inc
push
xchg
sti
push
lret
mov
inc
jecxz
pop
hlt
ljmp
jle
nop
mov
hlt
not
popf
add
mov
mov
mov
orb
arpl
popf
out
push
mov
xchg
jg
dec
push
mov
enter
pop
shl
sbb
pop
andl
call
js
mov
inc
adc
adc
roll
pusha
sbb
mov
or
scas
js
sub
and
fdivs
add
enter
dec
lahf
mov
sbb
add
mov
cmp
das
dec
xlat
ds
aad
mov
jmp
push
stos
mov
inc
sti
and
ret
add
cmp
jmp
pop
das
dec
and
cmpsb
sub
and
shrb
std
test
dec
in
sti
call
ljmp
ss
and
aaa
pusha
imul
ljmp
push
sub
popa
loopne
add
xchg
cmc
sbb
sub
je
mov
imul
xchg
cmp
dec
fisubrs
imul
dec
das
jmp
aad
pop
mov
push
ds
xor
add
adc
push
cmp
cld
jae
es
adc
sbb
pop
sbb
icebp
mov
lret
jno
insl
jae
sub
cmp
add
dec
std
call
jne
mov
push
cmp
mov
sub
arpl
das
xchg
xor
and
cmp
push
jb
loopne
pop
add
mov
jnp
je
fwait
or
ffreep
cmp
fwait
clc
iret
sub
ss
and
outsb
movsl
outsl
sub
or
scas
add
jns
mov
xor
mov
mov
mov
dec
shlb
sbb
and
jb
fdivrl
mov
repnz
arpl
jmp
ret
scas
jnp
cwtl
and
cmpsl
aad
jmp
mov
daa
xchg
test
cmpb
xor
mov
jg
fsts
aaa
shrb
lea
sbb
repz
push
lcall
lcall
xchg
arpl
das
aaa
xchg
jecxz
int
movsb
inc
idiv
outsb
mov
or
mov
call
push
in
jns
pop
xchg
ret
lock
aas
shll
sbbl
inc
xchg
inc
call
je
xor
fsubl
lds
mov
xchg
out
jge
lea
pop
dec
xor
sahf
push
adc
scas
movsl
outsl
pop
outsb
scas
incl
sbb
enter
xlat
mov
push
cmp
es
push
aam
cltd
jl
ret
or
lds
push
sbb
adc
fwait
call
div
mov
xor
and
testb
movsb
sbb
mov
pop
mov
jne
mov
fnstsw
sub
push
push
sbb
jmp
sbb
inc
inc
ja
dec
lret
mov
jmp
rolb
ficompl
pop
dec
cld
mov
aad
xchg
loope
push
dec
mov
sbb
or
jne
inc
mov
mov
inc
sub
xor
in
out
inc
push
cltd
dec
aas
negl
sbb
hlt
fistl
inc
hlt
fwait
xor
or
nop
pop
lahf
fsubs
mov
mov
daa
gs
into
fnstcw
fcmove
inc
lock
and
sub
cmp
pop
imul
xor
lcall
adc
mov
lock
dec
rcr
jecxz
leave
sub
pop
pop
je
gs
scas
popf
scas
div
shrl
iret
sub
dec
outsb
mov
fistpl
test
add
sti
adc
bnd
or
scas
out
loop
mov
or
sbb
adc
hlt
mov
xor
bnd
gs
sysexit
mov
xchg
cltd
shll
push
popa
jge
aad
rcr
push
cli
xor
mov
test
scas
out
and
mov
dec
fwait
int3
out
pop
push
fxch
xor
push
clc
xlat
lds
mov
mulb
je
xorl
das
imul
cmp
inc
addr16
push
repz
imul
leave
movsb
fdivrs
js
mov
movsb
sbb
cmp
into
enter
and
loope
push
in
repnz
cmp
divb
xchg
imull
fisttps
cmp
fidivrl
lods
sahf
fistps
movsb
clc
mov
sbb
lahf
jl
xchg
jecxz
addb
mov
inc
sbb
out
ret
or
shl
loop
sbb
push
movsl
outsl
or
sbb
inc
outsl
mov
jmp
cmp
pop
mov
jb
movsb
sbb
fstl
jae
imul
shrb
test
loop
adc
and
jo
arpl
push
pop
and
adc
dec
into
dec
xchg
out
add
or
in
in
cmpl
cmc
jo
in
xchg
sub
push
jo
dec
sub
pusha
rcll
in
dec
das
jp
mov
pusha
testb
lea
jle
lds
in
jge
dec
jmp
dec
jmp
loop
and
loope
mov
pop
insb
movsl
push
sbb
sbb
addr16
mov
jns
nop
shlb
fimull
loopne
jp
arpl
outsl
inc
int
jle
pop
pop
add
insl
mov
clc
cld
in
loopne
sbb
mov
mov
int3
cmp
int3
jmp
test
jl
cmpsl
int
subl
cmp
out
aad
mov
xchg
mov
aas
lahf
popf
pop
test
mov
adc
push
cltd
dec
arpl
jo
add
adc
lret
sbbl
daa
add
pop
xor
int
push
sbb
push
mov
ss
lret
sub
dec
add
and
addr16
std
sar
xchg
in
pushf
gs
push
popa
out
cmp
pop
test
inc
push
push
jp
push
push
or
xlat
and
lret
loope
stos
sbb
or
test
mov
pusha
jl
xchg
xchg
jge
sahf
aaa
lods
mov
sar
loop
in
aas
dec
xchg
cli
cltd
lds
pop
sbb
out
fists
sbb
cld
sti
push
cmp
dec
add
mov
inc
fst
xlat
in
add
cwtl
cmp
xchg
movsl
aad
pop
dec
repnz
mov
in
sub
sub
fcoml
pop
mov
mov
ljmp
cmpsl
dec
dec
sub
xor
mov
push
fdivs
mov
daa
dec
add
enter
subb
shl
mov
pusha
orl
jge
pop
les
lret
xor
jle
les
mulb
cmc
stc
sub
rdmsr
call
xor
cli
adc
jg
cli
mov
std
dec
ret
jp
inc
rcll
mov
cli
sbbb
jge
test
jle
cmp
vmptrld
dec
lods
pop
or
or
jno
mov
cld
stc
mov
add
mov
jp
lods
setg
mov
test
fldenv
lcall
fcom
pop
adc
andb
arpl
insb
mov
sbb
les
imul
mov
dec
xchg
push
pop
rcl
inc
outsb
cs
jmp
out
stc
cld
pop
nop
xchg
sub
inc
cmp
daa
mov
pop
adc
gs
mov
hlt
pop
jmp
and
sbbb
fwait
ds
pushf
ja
cs
cmp
pop
fcom
dec
sbb
push
cmp
sbb
mov
mov
mov
loopne
popf
add
ds
divl
and
lret
sbb
adc
fadds
mov
pop
lret
std
lods
int
mov
pop
jle
pushf
lcall
or
and
cltd
and
add
dec
lret
mov
icebp
mov
aam
iret
in
outsb
cmp
loop
adc
pop
dec
into
mov
loopne
pop
mov
push
xchg
and
into
push
inc
sbb
shll
dec
or
adc
das
xchg
sbb
adc
add
enter
pop
pop
in
ljmp
ret
push
push
pushf
data16
dec
insb
stc
xchg
pop
pop
inc
jecxz
lret
cli
push
out
pop
sbb
or
inc
cmc
stc
aam
test
repnz
inc
jnp
adc
dec
out
mov
inc
in
mov
jmp
jp
ss
mov
inc
jo
inc
mov
enter
sub
pop
jp
cmp
mov
push
mov
jae
mov
fsubr
lock
xor
adc
push
cld
jb
cmp
ficoml
lds
clc
adc
shrl
ret
fstps
pop
aaa
dec
and
pop
mov
les
int3
and
aad
sahf
sahf
or
xchg
fistpl
xor
aad
mov
mov
outsl
adcb
je
xchg
dec
xchg
mov
add
mov
pop
jne
jb
dec
pushf
ja
fwait
mov
adc
and
xchg
stos
or
mulb
push
jnp
jbe
dec
cmp
mov
mov
inc
ret
daa
mov
call
out
adc
int3
sbb
cli
xchg
std
lahf
insb
mov
popf
call
dec
ss
insb
iret
testl
sbb
push
mov
add
dec
jbe
scas
inc
cmpsb
mov
mov
xchg
push
adc
mov
adc
jno
sarl
stc
inc
aas
ror
xchg
iret
test
mov
ficoms
inc
jecxz
inc
or
mov
sub
cli
divl
sub
cltd
push
fisubrs
push
pop
adc
clc
mov
adc
ds
mov
sbb
stos
shr
jl
loop
or
fsubrs
or
das
test
mov
xor
scas
in
or
popa
or
je
addb
dec
aad
test
mov
dec
mov
mov
cmp
push
aaa
sti
sub
and
add
cmp
insl
jl
shl
sti
pop
add
cmp
fsubrl
jmp
ret
push
xor
loop
jbe
icebp
jo
ljmp
in
imul
cld
imul
adc
xor
inc
cmp
out
inc
in
pop
inc
mov
loopne
mov
jecxz
ret
inc
sarl
outsb
push
std
mov
jb
mov
jo
xlat
dec
sbb
int
sbbl
xchg
mov
in
mov
sub
mov
lds
in
cmp
decl
insb
mov
adc
adc
dec
xor
lock
adc
cmp
jg
stos
pop
sahf
cmp
pop
or
ljmp
mov
xchg
jbe
inc
pop
mov
and
jnp
sbb
mov
add
cmp
idivl
aam
mov
cmp
imul
mov
and
sbb
pop
dec
lds
icebp
icebp
jg
xor
cmpsl
subb
cmp
jmp
into
imul
call
flds
xchg
pop
dec
jbe
ljmp
es
lret
jns
ret
mov
fstpt
adcb
mov
push
push
push
shlw
push
test
xchg
int3
ret
adc
sub
leave
and
and
aas
cmp
in
mov
popa
adc
inc
mov
enter
data16
and
fdivrl
pop
hlt
ret
mov
push
mov
in
mov
popa
push
in
sti
mov
and
xor
shrl
leave
sub
mov
add
test
and
loopne
cmp
jns
shld
jmp
scas
imul
adc
or
fsubrl
push
ret
sbb
and
cmovae
loope
push
lock
jmp
out
adc
jmp
and
push
pop
call
pop
push
inc
and
push
pop
sub
rclb
mov
xchg
cli
mov
push
idivl
jl
fmuls
aaa
je
rcrl
adc
test
sbb
sbb
movsb
icebp
sti
icebp
sti
push
or
dec
lahf
inc
pop
adc
xor
lea
jb
addr16
push
add
cmp
jge
and
aad
out
jge
das
dec
gs
xchg
inc
shll
xchg
push
mov
call
cli
pop
push
jp
fadds
js
icebp
aas
jl
in
pop
in
rorl
push
xor
sub
jg
jl
inc
pop
jns
lods
aas
inc
xor
cmp
inc
push
mov
adc
lcall
push
mov
mov
mov
dec
je
outsb
scas
inc
or
aas
mov
js
pop
add
cmp
dec
xor
cmp
and
clc
inc
cs
sub
and
mov
sub
out
call
nop
mov
gs
scas
adc
sub
cmp
cmpsl
mov
mov
andl
xor
push
mov
sbb
inc
frstor
and
mov
les
fistl
stos
mov
jmp
mov
mov
cld
dec
ret
lea
cld
popa
push
pop
jp
aas
test
mov
cmp
fcoml
sub
sarb
add
das
cmp
sub
xorl
xlat
icebp
mov
sub
jl
push
in
mov
or
push
mov
inc
cltd
lock
test
lahf
xchg
jno
data16
dec
fsts
int
adc
daa
mulb
mov
push
xchg
push
xlat
and
jbe
cmp
subl
bound
push
pop
jbe
adc
cmpsb
push
adc
pop
pslld
xchg
jns
jae
sub
test
xor
push
mov
lock
imull
mov
les
cmc
ds
in
pusha
mov
pop
push
jnp
mov
aad
popa
pop
xchg
test
xchg
mov
mov
mov
out
out
sbb
outsb
push
and
cmp
es
lods
icebp
jge
mov
cmp
mov
dec
jno
adc
and
sahf
out
cwtl
icebp
pop
int
lcall
sub
dec
mov
push
cmp
cld
iret
pop
mov
push
out
out
cli
lea
xchg
fwait
xor
fsubrs
xor
sbb
cmpsl
mov
int
clc
inc
in
mov
out
leave
fnstsw
fistpl
lods
orb
pop
xchg
push
rcr
push
jg
sub
mov
mov
movsb
add
movsl
xor
push
je
cli
xor
insl
add
dec
scas
mov
mov
inc
dec
add
dec
and
sub
mov
loope
gs
xchg
or
aam
inc
lcall
push
inc
inc
adc
fadds
sbb
cmpsb
arpl
inc
jb
jg
imul
jnp
sti
les
push
push
cmpsl
push
adc
lret
lcall
pop
xor
nop
iret
mov
pusha
shl
or
loopne
pusha
cmpsb
xchg
or
dec
ja
sbb
mov
inc
adc
in
or
lcall
add
ret
aaa
je
mov
pop
pop
inc
sub
or
pushf
ss
dec
in
adc
es
cmp
rcl
stos
inc
pop
ja
xlat
sbb
inc
cld
xchg
call
xchg
jge
imul
outsl
xchg
push
and
fucomp
addb
mov
mov
mov
js
xchg
out
inc
pop
jo
jbe
insb
jo
insl
adc
jg
cmp
push
out
inc
jnp
shr
add
mov
or
inc
mov
js
inc
push
imul
xor
pop
jge
sbb
dec
stos
pop
mov
xchg
cmpsb
or
cs
aas
mov
jo
cltd
mov
cli
es
mov
sub
xchg
cld
iret
push
xchg
cmpsl
push
xor
imul
ret
xlat
jbe
sub
std
cli
xchg
mov
sub
add
test
ret
loopne
and
sub
push
outsb
mov
mov
adc
or
mov
push
hlt
inc
jo
dec
xlat
ja
movsl
cmpsb
add
xor
addr16
shrb
lods
xchg
xchg
call
push
std
shlb
stos
fisubrl
xchg
or
ss
enter
insl
and
add
outsl
pushf
stos
xor
aad
aas
xchg
nop
dec
lds
inc
dec
sbb
insl
mov
push
sbb
xor
lds
sub
xor
test
and
mov
testl
jbe
pusha
jnp
and
insb
adc
dec
mov
fcmovb
fs
dec
bound
call
jl
adc
loop
lret
popa
jbe
jbe
addb
push
ret
or
out
mov
pop
decl
daa
add
daa
inc
push
push
fiadds
pushf
xchg
aad
lcall
pop
mov
frstor
in
push
adc
and
hlt
ret
xchg
cs
scas
ss
jo
jb
push
loopne
lcall
xor
imul
cli
aad
test
sbb
sahf
lcall
mov
cmp
cmp
dec
xchg
inc
ret
in
enter
push
pusha
test
iret
mov
add
jge
fidivs
rcrl
lods
js
sbb
jae
mov
inc
push
popa
cmp
add
in
lods
and
push
add
push
fdivl
mov
jb
cmp
inc
sbbl
xchg
movsl
out
xchg
pop
mov
repnz
cld
std
add
hlt
loopne
mov
sti
adc
jp
shlb
pop
cmpsb
jno
adc
fidivs
clc
jge
nop
pop
lock
sbb
cmp
mov
cmpl
pop
add
repz
push
mov
xorb
push
add
or
movsb
cld
pop
mov
add
arpl
lds
and
pop
daa
xchg
mov
and
add
popa
sbb
sub
std
dec
push
jae
call
cli
fists
adc
or
and
out
stc
push
push
setns
cld
in
ret
mov
sbb
mov
xchg
addr16
cmpsb
cmpsb
jns
loope
push
leave
sub
xchg
into
insb
scas
xor
xchg
inc
mov
sub
inc
roll
in
fs
jno
sbb
ljmp
bound
pop
pop
sub
inc
push
fiaddl
fwait
outsb
adc
scas
jl
mov
loopne
pop
inc
push
jnp
xor
out
jle
xchg
sbb
mov
adc
lret
data16
pop
fcoml
fisttpl
loop
xchg
jge
rcll
pop
sbb
pop
xor
inc
aas
sbb
decb
xor
or
aam
mov
adc
dec
aaa
or
mov
add
mov
push
adc
pop
dec
in
inc
pop
and
mov
mov
cmp
nop
cmp
sti
xor
xchg
cli
jle
dec
das
push
sub
add
cmp
mov
cmpsl
pop
rolb
pop
and
cmp
les
adc
addr16
mul
mov
push
out
mov
cmp
aaa
int
popa
or
pop
aam
aam
xchg
dec
in
fmull
nop
sarl
jp
xchg
out
fst
addr16
push
jge
xchg
or
mov
cmc
in
pop
and
lds
pop
notl
dec
push
hlt
pop
jle
adc
and
push
or
gs
out
push
cltd
into
dec
loope
jb
mov
addr16
fcmovne
push
lods
dec
pop
xchg
push
push
sbb
push
adc
fwait
sbb
dec
data16
inc
and
jne
arpl
adc
pop
lods
rcrb
cmp
xor
pop
mov
and
xchg
mov
add
mov
in
mov
stc
xor
adc
hlt
fildll
insb
push
aam
pop
and
in
outsl
jp
push
or
iret
out
aas
pop
lahf
and
sbb
fcom
in
mov
int3
fdivl
dec
fs
shld
mov
sbb
popf
push
cs
mov
jge
imul
jbe
adc
int
leave
mov
pop
adc
out
xlat
adc
decb
mov
cs
xor
or
enter
or
push
cmc
or
cmp
jbe,pt
enter
mov
mov
mov
rcrl
pushw
test
mov
mov
xchg
xchg
in
ds
ljmp
jmp
jge
sbb
dec
mov
dec
out
jmp
mov
test
jmp
out
int
adcb
push
xor
adc
in
out
xchg
shlb
lret
adc
pop
int3
scas
sub
cmp
loope
dec
ficomps
sub
sbb
stos
add
and
sbbl
leave
aad
imul
shr
rcl
add
out
fidivrl
cld
pop
push
lods
fistps
or
out
sub
aam
out
jl
mov
adc
mov
jnp
popf
xchg
mov
in
add
addb
clc
xor
and
cmp
scas
shll
dec
fldenv
faddl
push
out
aas
jl
add
outsl
xchg
xchg
pop
add
and
jge
mov
int3
push
push
cmp
dec
xor
rcrb
into
loope
ret
sub
ret
add
jae
lea
mov
nop
out
lret
jbe
nop
jo
mov
and
xchg
or
gs
mov
or
sub
add
add
cmp
ret
xchg
mov
dec
pop
jnp
jno
sbb
aam
pop
push
or
movl
pop
negl
lret
shl
add
inc
pop
xchg
inc
popf
sub
rcrb
xchg
xchg
xor
jne
outsb
sbb
inc
aad
shll
mov
mov
bound
clc
iret
cltd
sbb
jne
clc
call
das
in
pop
cli
inc
xchg
xor
mov
lods
cltd
cmovp
pop
xor
jne
sti
mov
lret
mov
fwait
arpl
test
mov
inc
adc
xchg
ds
fucomi
out
fidivs
imul
mov
hlt
or
mov
mov
pop
call
xor
dec
pop
sub
push
cmpb
loop
push
inc
int3
mov
pop
repnz
insb
negl
incl
adc
mull
adc
inc
mov
es
fiaddl
adc
sub
repz
mov
aad
stos
pop
and
andb
call
sub
jmp
jae
cmc
inc
in
push
and
sub
pop
pop
imul
lock
or
add
pop
fistl
call
out
adc
jns
popf
les
mov
add
fwait
and
xchg
mov
insl
cmpsl
mov
stos
fidivrs
cmp
rorb
sbb
cmp
push
mov
or
push
cmpsb
xorl
push
dec
sbb
mov
stos
sbb
sti
mov
das
mov
mov
call
mov
sub
popa
notl
test
lds
mov
lret
aam
fwait
bound
cmp
pop
aam
mov
cmp
insb
add
jl
nop
mov
cmp
xlat
rclb
aaa
mov
mov
and
sub
and
pop
pop
jmp
ss
out
mov
ficomps
pop
jmp
pop
incl
mov
dec
data16
in
scas
jo
xchg
adc
cwtl
jge
mov
pop
xor
int3
scas
mov
dec
mov
arpl
les
sbb
xor
jo
fstl
pop
shrb
sub
xor
rol
scas
xchg
xchg
shll
mov
inc
loopne
pop
ja
mov
int
lahf
add
repz
add
cmpsl
dec
mov
pop
cmc
inc
and
in
or
cmp
push
pushf
adc
daa
or
nop
sbb
insb
scas
or
adc
mov
popf
xor
rorl
stos
dec
jne
jle
sub
outsb
dec
mov
jp
xor
popa
ss
aam
fsubrl
xor
xchg
add
jne
jne
test
daa
inc
add
pop
lahf
jmp
cmp
sub
inc
movsb
mov
lahf
shl
or
cmc
mov
xchg
fisubrl
je
adc
ret
ds
inc
mov
dec
outsl
add
leave
test
xor
mov
loope
arpl
cmp
jno
lods
into
push
adc
dec
sbb
mov
mov
xchg
mov
xor
rcll
fcomp
aad
fs
xchg
xor
rcrl
sbbb
push
testb
clc
out
xchg
push
cs
lcall
in
mov
cmp
mov
xchg
xchg
cwtl
incb
add
or
lret
push
mov
repnz
jno
cmpsb
repz
cmp
cltd
or
xorb
gs
add
sub
xchg
inc
movsl
jnp
scas
cs
int3
push
sbb
cmp
sub
push
movsl
push
and
xchg
out
hlt
sub
maxps
lret
add
xor
popa
incl
or
movsb
mov
adcl
insb
in
xor
adc
pop
leave
int3
addr16
push
jae
out
or
sahf
std
jmp
icebp
push
cs
out
aas
add
mov
xor
dec
fildl
testb
adcb
cmp
sbb
xchg
jl
adc
push
cli
add
dec
rclb
insb
loope
lret
dec
mov
cmpsb
push
jns
clc
mov
fnsave
data16
sub
in
pop
lods
and
mov
lea
lds
cmpsb
stc
cmp
pop
sub
cmp
repz
aaa
mov
subl
inc
inc
into
push
test
cltd
mov
mov
add
pop
test
aam
cmp
ja
push
pop
shr
sbb
mov
cmpsl
ss
dec
lods
sub
xchg
das
mov
inc
neg
dec
jl
mov
dec
mov
mov
fcmovnb
jl
scas
loope
adc
scas
shrb
pushf
sub
pop
cmp
shrb
xchg
sti
push
fiadds
xchg
jmp
and
jbe
jno
mov
cmp
ljmp
xchg
fucom
test
xorl
cli
sti
sub
push
aad
pop
jnp
push
pop
in
xchg
sbb
out
movsl
pop
adc
cli
clts
sbb
sbb
sahf
adc
int
dec
cmp
les
lret
mov
push
push
push
xor
lods
movsb
xchg
sbb
incb
adc
adc
mov
scas
arpl
in
nop
fiadds
adc
lahf
in
std
fwait
repz
xor
pop
fwait
mov
stos
xchg
ja
ret
sti
pop
mov
clc
jle
rclb
pop
adc
fldcw
pop
cltd
sbb
pop
sbb
stos
lcall
xor
xor
or
add
adc
inc
andl
mov
cmpl
mov
aam
mov
push
xchg
sbb
pop
dec
lret
add
in
psrlw
sub
mov
in
push
xchg
out
xchg
mov
gs
hlt
jns
push
ret
xchg
fcomip
and
cld
sarl
repnz
jmp
jge
lods
rcrb
sti
pushf
into
dec
sar
jmp
dec
inc
ficoms
sahf
lcall
push
lea
jo
and
dec
imul
mov
mov
pop
and
sbbb
add
arpl
and
xchg
cmp
sub
mov
xchg
cmp
mov
js
xchg
xchg
sub
inc
fnstsw
outsl
cmp
sub
ds
jmp
add
movsl
xchg
nop
fwait
dec
mov
mov
int3
outsl
adc
stc
in
and
jno
xchg
in
dec
mov
scas
jmp
jne
aam
divl
xchg
fistps
sub
add
rcr
mov
mov
xchg
loop
adc
leave
push
lret
add
push
rcrl
pop
pop
hlt
mov
lea
ds
add
stc
pushf
arpl
out
push
mov
repz
out
dec
es
jo
ret
jmp
mov
ds
fincstp
mov
fs
inc
xor
push
jne
test
mov
pop
jmp
lret
lret
dec
je
fwait
cld
xor
and
xor
xorb
enter
sbb
add
pop
fdivl
sbb
fldl
xor
sub
pop
cli
gs
std
xchg
adcb
hlt
loop
fcmove
or
sti
jecxz
add
aas
cmp
add
or
icebp
jbe
xchg
js
adc
xor
mov
xor
pop
out
scas
dec
stc
mov
pop
pop
es
xchg
hlt
inc
fimuls
and
pushf
test
aad
adc
jb
ljmp
or
push
leave
int3
inc
sbb
sbb
xchg
cmp
lahf
pop
xor
pop
fidivs
popa
addr16
fs
mov
jl
mov
jmp
pop
mov
insl
enter
lcall
imul
jle
insl
pop
jbe
cmp
push
lret
jae
lods
sub
jle
scas
popf
popa
adc
and
lock
cmc
movsl
pop
stos
push
call
leave
lods
or
sbb
call
test
push
mov
adc
add
push
loop
jb
adc
add
fs
clc
popa
sub
push
jg
test
popf
pop
imul
mov
push
inc
xchg
das
cwtl
cmp
inc
mov
leave
lods
sbb
mov
insl
inc
ds
sbb
nop
pop
pop
dec
adc
sbb
cmp
test
comiss
mov
mov
sub
in
mov
iret
pop
xchg
mov
xor
jle
icebp
or
data16
enter
mov
lock
in
pop
mov
add
xchg
cs
es
inc
xchg
mov
ss
push
mov
jb
jbe
ret
mov
cmp
cli
sub
jp
aaa
push
xor
xchg
inc
push
sub
sub
movntq
lods
imul
lock
push
mov
test
mov
bound
sub
ss
rcl
nop
or
mov
shl
pop
scas
outsb
andl
xchg
xor
lods
xchg
shrb
sahf
jno
popf
clc
clc
shl
mov
scas
int3
test
sub
out
jb
jg
int3
xor
add
jp
push
cld
ljmp
enter
into
mov
je
xor
or
mov
dec
xchg
ficoms
xor
lods
xchg
out
adc
adc
pusha
mov
mov
cltd
lcall
pop
repz
xchg
daa
and
aaa
pop
pop
xchg
dec
or
in
mov
sbb
je
ja
imull
pushw
push
cld
adc
adc
push
jo
or
lds
jmp
imul
jno
inc
das
out
xor
pop
dec
cmp
mov
out
mov
jbe
cmp
int
lret
enter
js
xchg
movsb
push
add
lods
jne
or
xor
push
sbb
jo
push
popf
pop
mov
in
pushf
stc
cld
push
xor
xchg
xchg
add
rorb
and
daa
push
sub
aaa
das
mov
scas
mov
jle
movl
mov
stos
out
dec
mov
inc
jle
popf
inc
and
jo
mov
fstpl
push
into
jl
outsl
movsb
dec
dec
inc
sub
sarb
sub
pop
sub
sub
adc
cmpsb
icebp
pop
push
or
adc
push
jp
or
mov
rorb
mov
push
test
ret
je
fwait
inc
inc
cmp
push
push
lret
push
or
clc
cmp
xchg
add
mov
lret
xchg
xchg
mov
sbb
sub
pop
sbb
push
arpl
inc
add
inc
and
decb
pop
jno
cmp
stos
insb
add
mov
ret
xor
decb
jge
pop
popf
sbb
lret
nop
and
mov
xchg
insb
adc
mov
dec
add
ja
push
xor
mov
cli
and
jg
movsb
sbbl
lret
dec
push
inc
daa
sub
inc
inc
xor
cmp
push
out
insb
subl
insl
mov
addr16
lret
fwait
push
les
in
in
inc
jae
mul
cmc
ret
or
movsb
and
enter
pop
cltd
xor
es
or
fsts
test
pusha
cmp
push
imul
or
aad
pushf
bound
mov
push
ds
in
push
push
int
jg
test
inc
fnstenv
or
ret
sahf
out
or
stc
cmp
out
adc
ljmp
push
cld
shlb
or
movsb
sub
inc
mov
sbb
pusha
mov
fcmovbe
pop
jns
pop
dec
push
cmp
mov
loop
out
xor
aad
add
out
test
xchg
int
aaa
jae
cmp
dec
out
inc
cmpsl
cmp
sbb
ret
stos
outsb
sub
push
sub
jo
mov
xlat
ds
bound
push
and
pop
cmp
adc
xchg
push
lods
dec
pop
jo
stos
call
xorb
jb
adc
cmp
and
add
pop
fldenv
jl
or
loop
notb
fnstenv
push
xchg
outsl
push
push
test
enter
xchg
ret
jle
les
adc
iret
and
jae
push
push
fiadds
clc
mov
sbb
in
push
fisubl
aad
jae
adc
inc
adcb
and
mov
int
lret
ja
decb
jecxz
insl
cwtl
mov
adc
clc
test
jmp
rorl
xchg
scas
pusha
fsub
fistps
push
fwait
add
mov
dec
pusha
bound
in
mov
in
sub
pop
sti
or
cli
sarb
cmp
lock
repz
push
sbb
in
adc
pop
push
mov
jg
xchg
popf
shll
leave
addr16
fldenv
add
xchg
or
dec
cmp
push
jg
mov
xlat
sub
pop
or
xchg
popf
dec
add
fstpt
lret
and
xor
bound
cmp
sbb
das
sbb
inc
outsb
leave
cmpsl
aad
mov
mov
cs
sub
fildl
sahf
push
mov
xchg
bound
popa
lcall
pop
pop
mov
fs
xchg
mov
and
mov
mov
orl
push
repnz
push
xor
push
dec
xor
or
adc
ret
add
xor
mov
je
dec
xor
jmp
push
push
push
inc
pop
push
lock
cltd
mov
cmp
pop
popa
addr16
stos
mov
jg
lahf
lods
xchg
cmc
inc
in
fld
fildll
xor
or
add
pop
shlb
inc
xchg
addr16
lret
pop
bnd
addr16
daa
test
cmp
jmp
cmpsl
sbb
sub
imul
mov
add
sub
push
or
push
popf
xchg
pusha
out
ja
sbb
icebp
pop
popf
js
inc
push
dec
arpl
movsb
sbb
mov
mov
pusha
dec
stc
out
jns
push
jmp
mov
loopne
sbb
jl
mov
sarb
push
fs
mov
push
loopne
sbb
sti
sbb
push
push
test
xchg
test
push
xor
dec
loope
lods
lcall
jg
cmp
lahf
sbb
inc
addr16
stos
sub
repnz
and
in
jge
cltd
pop
sub
push
and
mov
in
inc
push
push
aas
cmc
push
sbb
cmp
sbb
mov
movl
imulb
xchg
andb
sub
popf
xor
and
subb
sub
dec
int
sub
jb,pt
and
lcall
push
sub
sbb
or
scas
jle
inc
pop
mov
sbb
mov
lcall
mov
fistpll
pop
out
js
nop
fstp
daa
inc
mov
cmp
loope
inc
lret
push
cli
dec
iret
ja
mov
loope
stos
xchg
imul
push
and
push
xchg
in
or
clc
clc
xchg
pop
movsb
jno
adc
cld
cmp
jecxz
add
imul
int3
add
inc
xor
mov
mov
sbb
mov
cmp
nop
lea
stc
inc
movsl
jg
xlat
shl
add
mov
push
push
in
in
rcl
dec
inc
push
cmp
mov
mov
push
jbe
movsb
lock
jecxz
outsb
popf
jo
out
cmp
dec
popl
fs
inc
inc
sahf
jmp
push
sub
mov
ljmp
rcrb
xor
popa
adc
xchg
hlt
filds
int
out
and
sub
jns
pop
loop
xor
sbb
cmp
sbb
mov
push
jecxz
bound
neg
ret
push
pushf
loopne
and
fs
sbbb
pop
inc
sahf
fnstsw
or
mov
lret
jge
enter
and
test
adcl
faddl
jno
ror
rclb
notl
adc
sbb
cld
call
push
adc
pop
adcl
mov
mov
pop
mov
jmp
cltd
mov
mov
or
push
imul
popa
mov
inc
sbb
mov
gs
mov
cmpsb
aas
orb
icebp
gs
push
inc
lahf
dec
lods
icebp
out
pop
test
jmp
mov
pop
and
ret
jl
pop
jle
sbbl
das
cmp
dec
sbb
movsb
cmp
push
xor
mov
in
add
js
call
outsl
int
xor
add
cmp
rorb
aaa
push
xor
add
lds
mov
sbbl
xchg
repz
push
fisubrl
push
jns
add
das
divl
mov
adc
scas
adc
mov
adc
cld
mov
add
cmp
imul
and
mov
fdiv
lret
push
call
dec
cmp
or
stc
mov
adc
int
add
or
idivb
add
inc
shll
inc
stos
das
xor
xor
nop
mov
dec
adc
fistps
cmc
arpl
dec
stos
inc
test
repz
adc
pop
sbb
addl
add
sbb
fucomi
mov
jb
mov
popf
pushf
adc
sbb
leave
lahf
jae
jmp
scas
fwait
cmpsb
cld
insl
mov
xor
dec
lds
das
lret
sub
leave
mov
pop
dec
es
aad
ss
faddl
data16
mov
xchg
loop
push
push
and
pop
ret
vshufpd
cs
imul
mov
dec
sbb
mov
int
pop
cmp
fldl2e
imul
and
sub
in
cmp
jecxz
je
or
daa
mov
frstor
and
push
int
sbb
mov
std
stos
ja
cwtl
test
push
fs
test
loopne
popl
inc
xor
sbb
jecxz
sbb
clc
pop
stc
mov
popa
sbb
ds
lret
lahf
imul
xchg
xchg
mov
data16
loopne
add
insb
adc
rcll
mov
lret
dec
daa
jae
fwait
test
push
fcoms
lds
shll
loopne
je
sti
adc
jmp
in
lret
pusha
inc
sahf
notb
ja
out
aaa
notrack
sbb
addr16
inc
mov
add
mov
andb
push
bnd
icebp
fcomps
cld
mov
or
inc
xchg
inc
sub
mov
movsl
arpl
bound
aad
jle
incl
cmp
sbb
adc
loop
cmpsl
xlat
repz
je
mov
std
jg
inc
inc
cmp
ds
xor
cld
sbb
or
inc
nop
pushf
xor
xchg
xor
aaa
fs
inc
pop
and
mov
rol
shl
stos
mov
imul
sub
lcall
int3
cmp
sub
mov
xor
pop
mov
push
enter
clc
and
loope
sub
xor
xor
imul
popa
adc
xchg
popf
js
pop
mov
inc
xchg
mov
ficompl
popf
pop
mov
xchg
dec
or
out
cmpsl
icebp
push
mov
mov
mov
pop
push
jne
out
ret
jbe
shr
cmc
leave
int3
repnz
lret
mov
mov
cmp
popf
mov
mov
push
stc
jo
scas
add
call
mov
adc
pop
inc
mov
scas
dec
xchg
push
xor
adc
or
cmp
pop
cmp
stos
cld
dec
push
add
and
lods
mov
jge
mov
ds
pop
push
inc
leave
inc
aaa
inc
xor
adc
xchg
pop
hlt
inc
push
pushf
inc
and
fstpt
ret
mov
mov
je
gs
imulb
repnz
out
jp
mov
pushf
lahf
sbb
mov
int
outsb
push
cwtl
lahf
std
sbb
jne
dec
adc
fsubp
jl
insl
out
cli
fldcw
xlat
jnp
stos
cmc
jp
xor
aam
mov
lods
dec
hlt
push
scas
push
pop
push
mov
xchg
sub
imul
aam
es
push
push
push
sbb
xor
into
xcrypt-ofb
cmpsl
in
aas
iret
jnp
test
ja
aam
mov
xchg
mov
adc
sbb
xchg
lock
mov
aas
pusha
pushf
cmp
add
fstl
push
xor
push
push
pop
cmp
out
loope
pop
mov
cmpsl
int3
jb
mov
test
jae
iret
adc
hlt
pop
repnz
mov
inc
mov
mov
jl
sbb
mov
ss
stos
adc
aaa
cmpsb
lea
inc
les
ret
aaa
mov
or
lds
inc
and
add
pop
add
ret
cs
ret
pop
jne
mov
mov
data16
sbb
xchg
pusha
shl
fwait
mov
fistps
leave
in
mov
or
push
sbb
je
and
pusha
mov
loopne
enter
sbb
repz
push
mov
icebp
in
lods
incl
ja
jnp
rcr
orb
or
int
xor
cmp
mov
rolb
or
dec
add
movsl
dec
out
ja
adc
pop
into
aad
aad
mov
sub
adc
and
mov
lods
test
sub
add
inc
int
sbb
cmp
push
nop
sbb
sbb
sub
mov
dec
adc
in
jle
fldenv
nop
repnz
and
imul
xchg
imul
test
push
xchg
jmp
imul
into
or
jp
jae
fiaddl
sti
decl
icebp
jae
cld
test
sbb
xchg
sbb
xchg
xor
push
adcl
sbb
enter
fwait
mov
pop
clc
and
dec
je
sbb
or
loop
jp
fs
cmp
pop
into
stos
test
add
int3
repz
or
xor
and
jo
and
fucomip
iret
sbb
xor
mov
les
xchg
int
mov
aaa
mov
inc
repz
mov
imul
cmpsl
shlb
cmpsl
neg
cmp
add
jg
xor
icebp
inc
adc
fcoms
lcallw
aad
imul
cld
xchg
mov
lods
pop
xor
cli
pop
aam
dec
or
xlat
cmpsb
pop
out
je
mov
cmp
cmpsb
rolb
mov
lret
jge
mov
mov
cmp
out
jb
inc
push
mov
jbe
fsubl
fwait
mov
std
leave
jo
stos
fists
jge
inc
mov
std
jge
popf
xchg
inc
sahf
inc
incl
jmp
fmuls
mov
les
mov
pop
popf
mov
sar
adc
scas
lea
andl
adc
jp
std
jmp
bts
imul
dec
dec
xor
dec
inc
pop
pushf
ret
stos
dec
jmp
mov
pop
and
cmp
cmc
cmp
loop
inc
in
xorl
outsl
mov
dec
and
cwtl
inc
adc
out
bsr
mov
and
mov
mov
or
jecxz
or
xchg
clc
xor
mov
push
or
popa
mov
push
es
lea
add
mov
pop
addr16
jle
pop
push
xor
aas
sar
in
test
or
leave
pop
ja
in
pusha
call
out
adc
in
stos
cmp
adc
pusha
add
jl
lods
dec
add
inc
rorl
lahf
mov
push
mov
or
jp
popa
in
jo
pop
insl
xor
bound
mov
cmpsl
mov
xchg
cmpsl
mov
dec
push
out
in
je
repnz
ret
fs
push
add
xchg
and
in
mov
adc
movsb
adc
hlt
inc
push
inc
nop
das
aad
shlb
fidivrs
scas
jne
lods
add
mov
mov
push
nop
xlat
inc
jmp
test
sahf
mov
and
cmp
mov
or
pop
loope
sahf
dec
mov
lret
mov
idivl
mov
fmul
mov
mov
or
dec
hlt
sub
data16
pop
aas
stos
sub
lret
jb
pop
sti
mov
lods
aaa
filds
sub
mov
into
call
shlb
cltd
jae
rolb
out
or
sar
pop
pop
xor
add
pop
jns
mov
icebp
jmp
mov
fstpl
cwtl
pop
add
jp
aas
ljmp
aam
adc
dec
jp
and
inc
movsl
rcrl
ja
mull
fldl
mov
data16
hlt
push
js
push
lds
xor
fisubs
xchg
jnp
xchg
inc
push
pop
mov
push
decl
push
in
fidivs
or
or
in
das
sbb
xchg
pop
mov
movsl
dec
mov
mov
sub
fdivrp
push
cmp
pmulhw
xchg
vmovaps
sahf
out
jl
negl
stos
jp
push
xchg
lock
stos
mov
loopne
scas
xor
mov
cmp
loopne
imul
enter
cld
xor
dec
outsl
inc
pop
cld
imulb
jge
jl
imul
inc
jb
aas
inc
movsl
cli
xor
imul
ds
pop
cmp
in
jecxz
icebp
and
test
sub
jae
xchg
adc
pop
test
fcomip
fmull
xchg
aad
out
and
leave
sbb
lods
aas
adc
nop
int3
cmp
adc
ret
pop
arpl
jb
xor
cmp
xchg
rorl
mov
adc
cmp
jecxz
jb
push
inc
out
fs
xor
lock
imul
mov
int3
aaa
lret
mov
mov
push
fmuls
dec
aad
mov
cmpsb
aas
push
lock
xchg
shlb
pop
mov
mov
testl
outsl
jo
leave
scas
mov
nop
or
cmp
xor
ja
and
imul
and
mov
sbb
das
mov
cltd
fnstcw
add
xchg
dec
call
mov
mov
add
pop
icebp
loope
cmp
fadds
jecxz
sbb
jmp
mov
jnp
pop
inc
das
mov
test
rcl
xchg
pop
pop
dec
pop
inc
cmpsb
pushf
mov
cmpsb
ja
popa
shrl
sub
xchg
adc
jle
shrl
xbegin
stc
push
sbb
inc
dec
xchg
js
cmp
shlb
push
or
add
dec
sub
imul
out
jp
or
aas
enter
xchg
jne
test
mov
shll
mov
xchg
xchg
inc
rolb
mov
pop
clc
push
and
ja
dec
aaa
lods
jecxz
xor
cmc
mov
sub
mov
in
mov
fistl
lcall
push
in
cltd
lret
movsb
pushl
stc
test
or
shlb
repnz
scas
les
jnp
in
sbb
jno
xchg
mov
push
lret
cmp
sbb
pop
cmp
jmp
in
sbb
mov
jle
mov
dec
gs
mov
cmp
mov
negl
mov
das
leave
dec
lea
or
dec
jns
cmp
test
jmp
sbb
imul
insl
dec
jne
aad
xor
sub
bound
inc
adc
pop
and
mull
mov
fimull
mov
sbb
xor
mov
lret
and
cli
loop
sarb
test
std
push
mov
leave
jecxz
xor
sbb
jp
push
sbb
or
sub
cmpsb
sar
mov
sub
ret
inc
test
pop
lret
xor
xchg
xor
push
out
inc
test
sbb
jmp
xor
insb
insl
mov
mov
mov
jp
dec
jp
add
aaa
out
mov
inc
int3
jle
xor
insb
sub
lds
imul
mov
or
jmp
xlat
inc
repz
mov
movsl
cltd
xchg
mov
lds
pop
ret
rolb
jbe
popa
out
ja
push
shll
pop
lahf
mov
push
pop
xchg
das
imul
cld
cmp
mov
je
fnsave
aaa
cmp
test
sbb
fldt
cmp
jne
stos
enter
mov
lcall
xor
and
mov
mov
test
jns
loopne
dec
cmp
xchg
inc
jbe
jo
call
leave
push
push
pop
pop
mov
mov
fstpl
cltd
and
outsl
pop
push
rolb
sbb
hlt
dec
mov
push
mulb
clc
mov
mov
cs
pop
xlat
cmp
inc
hlt
jmp
jbe
dec
cmp
repnz
push
adc
fadds
call
mov
sbb
dec
or
out
inc
or
and
stos
cmp
add
mov
jmp
lcall
aad
outsb
std
lods
jb
popa
das
cmp
mov
sbb
adc
or
sub
push
and
mov
push
das
lcall
into
jns
or
stos
push
ja
popf
xor
iret
cmc
push
inc
mov
mov
test
in
daa
and
xor
out
cmp
pop
and
mov
fwait
les
bound
es
inc
xchg
jnp
jecxz
insb
ret
push
test
push
or
jbe
movsl
add
jl
mov
sahf
xchg
jne
leave
sti
xor
pop
sahf
mov
pop
jbe
mov
cwtl
dec
dec
mov
inc
jecxz
mov
inc
push
les
cltd
jle
sbb
jmp
dec
stos
adc
fimull
outsl
xchg
jecxz
push
jg
lds
xor
mov
insb
test
xor
inc
jno
into
jbe
mov
jbe
push
mov
pop
mov
push
mov
scas
jns
lcall
fnsave
mov
jo
cmpl
sub
jp
testl
jmp
xchg
sti
pop
push
movaps
into
cld
insl
mov
inc
ds
enter
cs
sbb
and
jae
ss
insl
dec
repz
fnstenv
jecxz
mov
sbb
inc
or
pop
jb
fmull
popa
sahf
cwtl
mov
dec
cmpsb
cwtl
jno
mov
dec
invd
dec
mov
mov
xor
sarb
sbb
pop
push
popf
sub
push
mov
jo
adc
push
repz
pop
pop
jns
psubb
lcall
sub
mov
insb
cmpsb
pop
into
sub
rolb
movsb
shlb
mov
and
lds
xchg
mov
lret
je
aad
mov
std
cs
cld
cli
out
fnstsw
in
mov
mov
jno
cmp
dec
stc
sar
aam
loopne
or
pop
xor
mov
pop
inc
pop
mov
xchg
sarl
jae
sbb
rcll
or
ss
pop
hlt
and
daa
mov
mov
mov
cmpsb
test
shr
jae
call
leave
rcrl
aam
lock
inc
jmp
lret
xor
and
sub
fisubrl
jae
addb
fidivl
loop
mov
add
clc
xor
in
into
mov
test
cmpsb
addr16
inc
insl
mov
pop
stos
add
jmp
scas
js
jo
sahf
adc
addb
xchg
push
stos
mov
bound
mov
or
pop
outsb
mov
lods
scas
cmpl
pop
test
mov
inc
add
addl
aas
pusha
int
adcl
mov
fnsave
sahf
es
pushf
adc
xlat
arpl
xchg
repnz
jnp
ss
fwait
lock
inc
nop
sahf
or
das
mov
xchg
sub
pushl
mov
or
inc
cmc
mov
xchg
xor
mov
ds
inc
add
and
inc
roll
push
lock
rcll
repnz
pop
jge
push
int
mov
or
xlat
add
cmp
cmp
imul
stos
fcoml
push
inc
dec
pop
jns
std
and
pop
dec
mov
inc
rclb
sbb
pop
aad
pop
mov
sub
ja
stc
mov
push
mov
cmp
dec
or
arpl
or
add
inc
push
lock
shrl
jb
mov
pop
mov
lods
dec
ss
inc
adc
jb
lods
mov
loopne
test
jg
ds
ljmp
out
fisttpl
outsl
and
int3
pushf
stc
pop
stc
aaa
xchg
mov
adc
imul
pop
movb
sbbl
aas
call
and
add
mov
bound
jbe
xchg
fcomps
ja
shrb
mov
adc
mov
outsl
and
mov
dec
mov
icebp
fsubrs
jl
fisttps
mov
shll
lock
mov
xor
in
orb
gs
jo
xor
xor
rorl
lods
mov
inc
fsubl
jne
movsb
pop
xor
jmp
add
or
int3
aam
or
pop
mov
cmc
stos
pop
out
mov
jmp
sbb
pop
lods
mov
xor
adc
xchg
jmp
fwait
push
testb
jb
cmp
int
std
or
push
pop
into
sub
pusha
imul
leave
cwtl
cwtl
adc
test
add
xchg
cmpsb
test
lcall
inc
sbb
aas
mov
jecxz
out
cmp
xchg
adc
pop
push
and
sub
and
or
lods
inc
sub
fidivrs
repz
js
cmp
addr16
insl
or
call
cmp
dec
push
inc
popl
dec
out
add
lods
and
nop
popf
es
pop
add
sbb
fsubrp
pop
dec
xor
jmp
out
sbb
cmpsb
mov
imul
sbb
mov
lods
cmp
not
mov
aad
adc
sub
daa
mov
ljmp
je
or
push
xchg
xchg
inc
jb
sbb
popa
test
cmpsb
stos
into
fnsave
rcrb
aaa
jns
aas
mov
pop
std
xchg
inc
mov
jle
aad
frstor
mov
adc
aaa
gs
ret
add
movsb
and
test
push
jno
xor
pusha
jge
add
lret
adc
jp
loopne
mov
pusha
dec
xor
add
pop
xlat
xor
or
dec
ret
fisubrs
fcompl
in
data16
inc
icebp
pop
ret
jecxz
and
push
sub
add
sub
xor
inc
mov
add
sub
adc
cmpsl
out
popf
movsl
dec
repz
sti
push
inc
test
outsl
push
ret
iret
xor
aam
xchg
daa
fwait
xchg
lcall
or
mov
pop
jmp
sti
movsl
scas
cli
fdivs
dec
sar
cmp
inc
movsl
iret
es
cmp
xlat
repz
je
pop
sahf
cwtl
dec
cmpsb
mov
out
mov
dec
out
daa
lret
aaa
rol
pop
push
in
add
push
jno
jle
add
lahf
out
insl
xchg
imul
sbb
pusha
mov
pminub
mov
out
lcall
outsl
fcoms
movsl
push
inc
and
cmp
loope
mov
mov
inc
adc
push
and
and
shll
mov
out
push
or
pop
mov
or
push
sbb
test
mov
xor
fildll
cmp
test
mov
aaa
and
bound
std
cmp
pop
inc
cli
mov
push
push
sbb
fisttpll
add
fs
scas
lcall
mov
xor
testl
shr
jge
cmpb
ljmp
cmp
fsubrs
daa
icebp
jne
fbstp
push
cli
pop
sub
xor
ja
icebp
dec
jecxz
dec
and
sbb
imul
lock
mov
xor
mov
jnp
repnz
int
mov
push
out
fdivrs
push
push
or
or
sub
jo
cmp
xchg
jl
push
push
lret
sub
dec
ljmp
inc
mov
add
loope
xor
fwait
jmp
mov
xchg
mov
in
xor
adc
ja
out
ss
dec
xchg
jmp
inc
sbb
jp
shl
mov
stos
inc
inc
out
inc
into
mov
and
jbe
sub
arpl
stc
mov
daa
adc
nop
adc
xchg
in
lds
rorl
dec
enter
out
cmpsb
data16
dec
mov
jmp
ss
sub
xchg
jbe
in
push
aad
lods
or
test
xchg
or
push
mov
jge
loopne
sub
inc
loope
testl
xor
cmp
xchg
daa
loope
imul
sub
ret
aam
push
sbb
jnp
xchg
rcl
adc
out
mov
int3
xchg
sub
and
aas
scas
jge
sahf
sahf
jno
fsubl
mov
sub
call
cmp
mov
imul
mov
xorl
xlat
pop
or
jb
mov
out
cmp
sub
sbb
lock
scas
insb
test
xchg
push
cli
fsubrs
pop
dec
mov
pop
pusha
lock
aaa
cmp
out
sarl
jg
aam
mov
aam
jg
imul
pop
dec
lahf
fnstcw
bnd
sub
or
add
je
movsl
push
add
stos
push
mov
add
jne
cmp
hlt
jbe
pop
fisubrl
adc
outsb
push
ljmp
inc
pop
lret
data16
xlat
jg
mov
cmpsl
unpcklpd
out
ljmp
adc
cmp
lcall
orl
in
stos
hlt
iret
dec
cli
xor
mov
add
pop
sub
mov
cmp
and
das
sbb
adc
xchg
mov
into
sub
bound
aad
push
test
jne
dec
outsb
nop
push
adc
daa
sbb
nop
cwtl
clc
jecxz
inc
push
scas
jae
and
stos
arpl
or
in
stos
pop
and
popf
xor
mov
je
adc
mov
repz
sbb
enter
mov
rcrb
lahf
test
dec
dec
inc
mov
mov
mov
insb
and
mov
cli
jmp
or
sub
cmc
into
jmp
popf
loop
lea
jp
pop
xor
std
add
sbb
mov
mov
mov
push
mov
addl
dec
xchg
jp
enter
lret
sbb
out
icebp
leave
movsl
sub
sbb
gs
mov
xchg
jb
push
lods
cmpsb
imul
loope
jg
jge
fildll
push
inc
sub
out
adc
out
xor
shlb
test
sub
scas
pop
push
mov
or
mov
mov
sbbb
dec
jle
mov
push
enter
jl
into
jmp
sbb
movsb
cli
enter
popf
aam
lcall
addl
xchg
and
mov
fildll
mov
mov
mov
call
es
xchg
repz
notl
mov
mov
cmp
jae
aaa
insb
mov
push
add
adcl
pop
loopne
xor
cltd
mov
repz
rcl
and
fidivrl
aas
test
stos
rolb
add
fiadds
mov
adc
repnz
or
shrb
jnp
jns
pop
rcr
or
mov
lods
in
mov
lahf
pop
push
or
push
pop
imull
jge
mov
inc
mov
mov
add
js
fnstcw
mov
pop
or
pusha
lock
mov
jg
inc
adc
pop
enter
scas
imul
mov
inc
mov
jno
xor
es
das
dec
imull
rcrl
arpl
fcoml
jg
ss
inc
mov
ljmp
fsubrl
fwait
sub
iret
or
cmp
xor
jbe
pushf
fmuls
aad
or
add
addr16
ja
sbb
outsl
jb
pop
loop
or
cmpsb
std
jge
push
push
repnz
sbb
jo
adc
jae
xchg
mov
aaa
lods
push
mov
push
cld
shll
mull
push
loop
cmp
popa
mov
xor
mov
and
iret
cmp
test
jns
movsb
test
subps
mov
shlb
xchg
scas
lahf
in
mov
pop
inc
dec
js
ret
dec
stos
pop
adc
or
or
in
lock
fwait
mov
enter
or
scas
loop
and
popf
add
pusha
pop
dec
jns
add
in
mov
push
cmp
arpl
cmpsb
xor
jmp
loopne
stc
jns
dec
out
js
and
cmp
fbld
lret
loope
mov
aas
push
mov
loop
cmp
sahf
in
adc
aam
mov
lods
test
test
adc
sub
dec
jae,pt
jl
in
jbe
xchg
outsb
jne
out
movsl
mov
xchg
lds
cvtps2pi
adcb
xchg
stos
dec
push
push
xchg
push
add
call
sub
push
daa
push
bound
sub
pop
repz
test
imul
push
and
inc
jo
xlat
fsubrl
sub
inc
ljmp
lock
lock
mov
jbe
popa
stc
dec
sub
idivb
aam
test
mov
sub
pop
and
jmp
sahf
sbb
inc
jecxz
jmp
cmp
mov
outsl
jne
adc
add
movl
notb
xchg
push
cmp
mov
test
data16
push
jge
sbb
xchg
jo
push
and
sbb
push
and
push
xchg
cwtl
and
jle
bound
test
jae
cmpl
jnp
cmp
mov
and
and
ret
ljmp
add
popa
fwait
jnp
stos
jae
popf
xor
inc
push
gs
mov
mov
stos
mov
pop
lods
sub
sarl
rcll
fdivp
mov
adc
xor
add
in
in
outsl
lcall
or
leave
add
pop
mov
lea
mov
arpl
push
pop
adc
fwait
inc
mov
xchg
ljmp
cmpsb
mov
or
push
or
jle
iret
and
addr16
pusha
and
scas
dec
mov
test
pushf
push
xchg
jge
lock
dec
pop
insl
adc
xchg
movsl
push
fistl
mov
test
es
dec
jge
fldl
sbb
subl
or
dec
bound
imul
dec
xchg
xchg
rcrb
add
jle
inc
outsb
mov
scas
xor
push
test
mov
test
dec
xchg
xchg
jp
jmp
cs
out
mov
sbb
mov
pop
adc
inc
cld
jbe
add
nop
and
lds
lahf
mov
cmp
pusha
mov
ret
adc
cmpsb
xor
aaa
xchg
xchg
insl
adcb
out
roll
jnp
cmp
dec
push
in
in
mov
mov
sub
ret
js
xchg
xlat
testl
and
push
push
sbb
fidivrs
fldenv
lock
mov
push
subl
sbb
adc
pop
xchg
push
mov
adc
cmpsb
popa
fs
push
mov
and
cmp
inc
movsb
sub
push
inc
dec
cmpsb
pushf
not
fs
sbb
notl
cmc
aas
flds
or
pop
add
shr
push
imul
jmp
test
pusha
inc
ja
adc
add
sub
or
xlat
push
cmp
cmpl
xor
fcoml
xor
fstpt
push
pop
sub
pusha
cmc
add
xor
jg
add
add
mov
xor
pop
sub
adc
out
hlt
and
xor
xchg
int3
and
push
out
pop
out
add
mov
push
dec
movsl
xor
fdivs
dec
arpl
xor
scas
rcrb
adc
cld
pushf
push
mov
or
xor
adc
test
jno
enter
enter
pop
in
aam
dec
lret
push
jns
inc
lret
mov
jecxz
fmull
and
test
lret
cmp
imul
ljmp
xlat
xor
mov
jge
add
orb
jo
adc
cmp
cltd
hlt
popf
push
xchg
xor
pop
mov
enter
pop
fwait
ret
mov
push
lahf
and
fstps
movsb
pop
in
cmp
jecxz
xchg
lock
movsb
out
inc
pop
sbb
adcb
lods
sub
fs
push
leave
and
sub
sub
in
lcall
push
add
sti
and
inc
xchg
jo
sbb
out
mov
xor
and
add
stc
aam
add
lods
sub
xchg
mov
push
mov
jae
inc
movsl
sbb
addr16
dec
or
add
loope
les
sbb
divl
out
das
mov
out
add
dec
lock
xchg
rcrb
fidivrl
cmp
mov
jns
inc
push
lcall
sbb
and
fisttpll
mov
pop
jp
cmc
ds
out
outsb
push
mov
bound
out
and
sti
mov
mov
lea
xchg
sub
inc
sbb
and
mov
sbbl
xchg
xchg
xor
and
jge
push
jle
adc
repnz
hlt
lds
pushf
jnp
jge
out
in
add
shl
movsb
lods
and
mov
dec
repnz
dec
xor
jbe
cmp
mov
push
jae
popf
add
rclb
or
xor
dec
lahf
sub
ds
adc
pop
fs
leave
xchg
sarb
mov
nop
rol
xchg
lea
mov
mov
adc
sub
popa
lods
push
fwait
imul
sahf
and
iret
jge
dec
pop
push
add
jb
gs
jmp
xor
jo
in
adc
dec
std
popf
mov
push
jb
roll
mov
mov
outsl
push
popf
mov
mov
loope
inc
int3
testl
push
enter
push
mov
sbbb
push
sbb
pop
fsubrs
jb
negb
and
add
cmc
outsl
push
fnstcw
xchg
arpl
rcrl
shlb
ja
inc
shll
xor
add
or
cs
test
stos
sub
jl
popf
dec
mov
adc
icebp
pop
data16
dec
xchg
xchg
fisttpll
lahf
pop
cld
and
cmp
push
imul
adc
sbb
out
inc
mov
pop
mov
aad
lahf
pop
mov
inc
fcomps
fst
stos
mov
jmp
dec
push
dec
push
push
iret
inc
xchg
jp
xchg
xchg
iret
dec
jecxz
cli
stos
cmp
ja
mov
fldenv
xor
push
fwait
popf
mov
mov
cmp
push
xchg
aad
add
aam
mov
popf
or
insl
out
aaa
cmc
sub
lcall
out
in
or
jnp
xchg
xchg
cmc
lods
fcmovnb
xlat
jle
jp
outsb
push
loope
xchg
xlat
push
add
jo
mov
orb
xor
call
add
cmpsl
stc
sbb
lret
rorb
mov
fidivs
std
cs
stc
shll
jge
dec
rcll
xchg
add
sti
pop
insb
test
cmc
in
lret
mov
inc
push
add
imulb
rorb
mov
push
in
dec
gs
movsl
adc
sbb
movsl
and
sub
or
push
scas
jecxz
es
cmpl
jp
rcrl
dec
leave
sbb
mov
loope
lods
and
dec
and
insl
or
setne
es
rcll
cwtl
testl
jae
pop
mov
sbb
ficomps
or
scas
push
inc
in
lret
fdivs
aaa
jno
gs
pop
dec
mov
lods
popf
mov
lahf
test
subb
mov
pop
push
loopne
add
setge
sbb
adc
aas
insl
sbb
pop
mov
xorl
aad
pop
rcrb
stos
jns
mov
mov
mov
sbb
inc
outsb
loop
mov
ss
sbbl
xorb
or
shll
jnp
jno
mov
insb
xor
fwait
cmpsl
lret
xor
rcrb
ds
mov
mov
xchg
add
stos
mov
jns
jb
idivb
mov
xchg
hlt
push
out
bound
lret
out
in
cmpb
lcall
push
or
jbe
jge
xchg
and
adc
push
dec
jmp
inc
mov
pop
mov
das
shll
jmp
or
mov
lret
mov
cmpsb
xor
or
xchg
loop
push
pushf
stos
cmp
hlt
aas
movsl
inc
cld
fdiv
aad
jne
movsl
sbb
jecxz
loop
bnd
sub
add
cmp
lock
xor
cmpsb
cmpsl
orl
push
lret
adc
nop
and
dec
add
jmp
shlb
repz
pop
das
push
adc
jle
xchg
and
push
loop
push
shrb
orl
push
test
cwtl
stos
xor
push
cmpps
sub
jg
mov
shrb
mov
mov
sbb
std
pusha
mov
repnz
data16
pop
sub
je
rorb
jae
mov
aad
ss
xor
mov
pop
lds
sahf
cmp
mov
mov
mov
insl
mov
lods
inc
mov
cmp
andb
xlat
lods
icebp
or
mov
and
jno
outsb
movsl
cltd
add
mov
cmpsb
pop
and
lfs
iret
outsb
mov
xchg
cmp
or
imul
pop
jge
jb,pt
push
xchg
mov
adc
int3
xchg
xchg
iret
sub
sbb
pop
aam
dec
and
addr16
in
push
push
cmc
imul
dec
sahf
mov
int3
push
adcb
cli
sbb
std
cmp
xlat
imul
hlt
mov
or
leave
adc
cltd
adc
jmp
lock
push
add
xchg
pop
iret
jg
cmp
sbb
cmp
mov
icebp
daa
je
and
pusha
mov
jo
xlat
ret
cmp
add
adc
lcall
aas
dec
into
xchg
or
add
add
pushf
inc
mov
push
dec
test
lock
pop
decl
add
loopne
mov
dec
sub
cwtl
mov
or
bound
and
or
inc
jmp
mov
mov
movsb
inc
pop
fcmovnb
aam
pop
adc
or
rol
or
push
sti
or
cwtl
inc
inc
insb
jne
scas
xor
aam
mov
pop
pop
sbb
mov
stos
sbb
sub
stos
add
lea
xchg
pop
jecxz
arpl
popf
movsb
mov
and
lds
mov
jl
outsb
adc
lret
aam
adc
scas
sbb
loop
inc
cmpsb
aad
and
popa
adc
jno
std
sbb
push
test
rcll
mov
lret
push
aaa
push
shrb
fwait
and
add
out
push
sar
adc
inc
mov
push
mov
inc
sbb
jne
mov
js
mov
repz
push
in
pop
shlb
pusha
mov
cmpsl
jl
clc
or
push
dec
cld
mov
ficompl
dec
test
test
pop
mov
stos
mov
mov
outsb
cmp
adc
adc
xor
and
sarb
pusha
dec
mov
stc
push
test
push
shl
popf
iret
and
mov
push
les
aaa
sbb
sbb
inc
inc
bound
jnp
push
mull
cld
sub
dec
int
ja
mov
xor
adc
inc
inc
dec
mov
jae
dec
lods
add
xchg
ror
test
sbb
lret
mov
sub
push
out
mov
js
sti
enter
inc
cmp
popa
push
jo
cmp
int3
popa
lods
out
cmp
pop
adc
push
clc
stos
int
jle
testb
sti
lcall
out
jns
lret
pop
hlt
pusha
fdivrs
les
outsb
nop
cmp
jg
cmp
lret
jmp
pop
cs
add
inc
testl
mov
push
push
inc
mov
out
add
pushf
movb
leave
mov
or
push
sub
je
cmp
dec
xchg
mov
lret
std
lock
das
sub
lea
fcomps
or
cmpsl
pop
cmp
or
out
ret
mov
or
sub
mov
pop
xchg
mov
imul
cmova
inc
xor
ss
mov
shll
mov
jae
xor
xor
mov
dec
test
pushf
lock
ds
mov
movsb
mov
or
inc
pop
aas
iret
mov
add
mov
sti
scas
sbb
dec
rcr
mov
and
out
insl
pop
cld
movsb
mov
aas
mov
cwtl
mov
mov
ss
xchg
and
rorl
insb
pop
jno
fsubs
data16
dec
lahf
mov
addr16
lahf
sbb
daa
cmpsb
sti
xchg
dec
pusha
adc
jbe
insl
sub
mov
inc
rolb
icebp
test
add
cmpsl
add
push
js
cmp
xor
dec
cmp
pusha
sub
inc
jle
test
fmull
js
scas
and
xchg
pushf
mov
jbe
stc
adc
mov
inc
xlat
or
mov
cmp
jae
mov
and
lret
jae
mov
or
cs
cmpb
and
xor
in
mov
out
sbb
sbb
iret
xchg
lods
cli
mov
push
jp
sbb
ljmp
fsts
test
cmpsl
roll
jb
mov
dec
hlt
mov
call
pusha
cmp
jecxz
cli
outsl
popa
add
arpl
push
cmpsb
jle
dec
adc
pop
sti
jmp
cmp
cmpsl
ds
cli
xchg
scas
cmc
mov
push
pop
xchg
xor
mov
sub
sub
cmp
jl
lods
or
repnz
mov
add
xchg
cs
adc
cmp
xchg
sbb
arpl
pop
mov
clc
and
aaa
cmc
dec
nop
fdivs
xor
inc
xor
xor
mov
mov
repnz
and
xchg
std
push
inc
push
aam
dec
cli
mov
jle
push
ror
xor
jl
sub
shlb
je
dec
jne
pushf
fisttpl
test
ljmp
sub
rcrl
decb
out
mov
mov
ret
jns
shll
mov
lret
inc
mov
int3
test
test
and
lcall
mov
pop
pusha
inc
rcrb
mov
jbe
addr16
addb
jg
fiaddl
push
fisttps
and
fcoml
rorl
icebp
in
xor
hlt
adc
dec
jge
pop
fsts
xlat
ja
xor
push
and
ja
js
fadds
test
pop
shr
loopne
and
push
jne
push
out
or
lahf
sarb
and
fs
subl
bound
adc
orl
int3
fwait
ljmp
mov
mov
jno
in
repz
lods
or
sbb
xchg
pusha
xlat
fsubr
mov
add
inc
das
jl
mov
inc
sbb
dec
and
xchg
dec
adc
xchg
xor
sti
adc
add
pop
push
stos
mov
pop
shrl
dec
adc
std
sbb
dec
mov
push
push
shrl
push
adc
jl
aad
imul
xor
inc
scas
fbstp
cs
inc
and
jnp
dec
add
repnz
mov
and
pop
push
sbb
mov
mov
pop
xchg
jns
lods
les
mov
xchg
push
dec
stc
sahf
jmp
sub
adc
sub
mov
mov
stos
movsb
cmp
push
sbb
aad
or
inc
dec
cmpsb
hlt
ds
push
push
dec
je
pop
mov
xchg
shrl
mov
cltd
mov
pusha
dec
adc
loope
dec
xchg
inc
sbb
dec
lods
xchg
and
ljmp
aad
int3
push
jle
mov
adc
mov
inc
imul
into
cmp
idiv
fs
xlat
xor
in
inc
xchg
push
test
pushw
mov
movsb
xor
sbb
mov
jmp
test
jp
mov
ljmp
mov
nop
fisttps
xchg
loopne
imul
cltd
xchg
xchg
jge
mov
xchg
test
loop
loope
push
xor
mov
les
les
aas
jno
xchg
dec
sub
fstl
repnz
and
and
fildl
insb
mov
push
sbb
loop
fisttpl
jbe
test
js
popf
lret
aaa
add
jno
les
iret
xchg
andb
out
int3
shll
mov
dec
in
xor
out
ret
sbbl
sub
pop
les
mov
cmp
push
std
xor
and
fbstp
mov
pop
outsb
push
fwait
xchg
and
adc
fimuls
push
lahf
mov
and
jo
in
push
je
mov
inc
seta
push
xchg
pusha
in
es
rcrl
in
pusha
rcrl
mov
imull
cmpsl
or
hlt
cltd
arpl
sub
scas
icebp
xchg
jle
fnstenv
lods
mov
mov
push
mov
adcb
in
stos
and
aam
and
xchg
or
mov
pop
rorl
cwtl
aas
add
inc
movsl
push
jo
or
dec
cmc
addr16
and
fnstcw
sahf
push
dec
push
je
sub
xchg
add
lds
push
push
cmpsb
mov
jae
andl
adc
xor
or
test
pop
std
or
pop
jae
cmpsb
jno
repnz
sub
cmpsb
roll
popa
xor
xor
push
sbb
xchg
add
push
push
in
fucomip
je
mov
xor
shll
add
imul
fistpl
fimull
stos
nop
sub
push
shll
sahf
sbbl
stos
movsl
test
cmp
and
push
xchg
jae
int
movsl
clc
movsb
sbb
out
aad
orb
inc
ret
in
shll
mov
mov
ret
dec
push
push
aas
ret
add
div
mov
jo
jmp
jle
mov
push
into
popaw
inc
dec
call
sbb
out
adc
repz
mov
sub
fwait
loopne
xchg
mov
xor
push
scas
cmp
out
inc
dec
xchg
or
mov
mov
mov
adc
in
inc
jmp
push
push
in
out
xor
xor
cltd
imul
pop
push
test
push
lds
mov
cmpsl
ret
sub
jno
imul
or
jne
or
jecxz
shrl
sub
lcall
xchg
xchg
or
sub
lods
dec
test
inc
dec
or
jbe
rol
add
test
fcomp
pop
adc
xorb
shrb
jg
jo
mov
mov
lret
mov
push
sbb
cli
xchg
push
mov
sahf
aam
sbb
add
push
sbb
push
ss
rcr
add
test
fimull
dec
push
sub
pop
dec
inc
popa
mov
fs
aas
clc
pop
mov
call
mov
cmpsl
ffree
jp
mov
xchg
adc
rcr
cmp
push
mov
sbbl
bound
fmul
nop
push
add
js
jo
popa
fsts
pop
push
repz
dec
outsb
mov
pop
push
inc
addr16
ss
rcll
inc
xor
or
adc
call
sbb
negb
or
jmp
sti
orl
gs
rcll
xchg
fs
jae
add
xlat
movsl
or
rorb
aas
sbb
mov
fs
rcl
lahf
in
fisubrl
pop
pop
popf
inc
push
dec
stc
imul
outsl
adc
fcomip
aad
inc
push
insl
cli
in
xor
sbb
adc
sbb
or
xchg
or
mov
sub
cmp
hlt
int3
jp
push
outsl
insb
push
mov
ds
push
pop
xchg
cmp
mov
push
jnp
scas
bound
icebp
push
mov
dec
gs
inc
push
jmp
ljmp
mov
sub
loop
push
jnp
cmc
and
and
testl
mov
shrb
jbe
cmp
aas
or
es
cmp
cmpsl
test
xchg
or
es
jno
push
sbb
push
pop
lds
ja
push
imul
sbb
cmp
xorl
addl
movsl
ljmp
test
or
mov
int
xchg
cltd
jae
push
aam
pop
div
cltd
dec
cltd
mov
jne
inc
test
adc
xor
fstps
pusha
stos
pop
xchg
jmp
ss
jg
ret
sbb
pop
add
inc
inc
lds
mov
cs
pop
sti
fisubrs
add
in
and
sbb
mov
lret
adc
int3
cmpsl
sbb
andb
pop
cld
out
adc
push
dec
out
subl
jno
ja
mov
dec
shll
mov
or
daa
add
xchg
stc
cli
xor
mov
mov
test
jb
in
mov
enter
cmp
push
push
scas
inc
cltd
add
je
data16
sbb
mov
shrl
mov
mov
xchg
cmp
pop
out
clc
lcall
jne
sahf
lcall
rorb
movsl
shll
push
in
inc
cmp
test
mov
dec
aad
dec
outsl
sub
sub
xor
repnz
repz
jns
in
inc
pop
or
adc
ret
ds
and
imul
lahf
mov
xchg
mov
and
test
mov
roll
out
in
call
loope
and
ja
arpl
roll
insl
mov
xchg
sbb
mov
out
into
mov
jae
incl
lret
mov
dec
neg
js
cltd
lods
push
sbb
pop
or
popf
jns
cmp
jnp
add
xchg
mov
fs
xchg
pop
lods
xchg
pushf
out
cmp
mov
fimull
ret
call
cwtl
and
fsts
sbb
aad
jae
adc
add
and
push
mov
mov
dec
and
add
sbb
inc
jb
dec
aaa
cmp
xchg
xchg
dec
jo
sub
roll
clc
cmpsb
xor
iret
rol
mov
mov
dec
inc
push
fdiv
leave
and
jle
xor
mov
int3
push
out
inc
and
cli
out
int
add
pushf
mov
sbb
hlt
gs
js
jnp
cli
push
jno
xor
leave
imul
and
cmc
pop
adc
adc
adc
test
jp
stc
cmp
mov
jle
xchg
in
movsl
add
fdivrs
add
cmp
adc
inc
mov
add
jae
xlat
xor
movsl
pop
lock
rcrb
sub
cmc
xor
clc
mov
sbb
movsl
lods
insl
push
nop
inc
cmp
mov
jg
adc
jb
mov
sahf
and
outsl
cmp
sbb
push
add
sti
xlat
scas
pop
sub
stc
pop
popf
aaa
xchg
aam
cmpsl
in
cmp
xchg
andb
dec
outsb
mov
sub
dec
outsl
inc
jno
movsb
mov
mov
and
xchg
pop
pop
xlat
adc
or
test
jmp
es
loop
cmp
jbe
xchg
scas
out
or
repnz
sub
stos
adc
cli
sub
inc
iret
or
and
incb
out
rcll
add
add
sarl
add
mov
push
mov
icebp
cmp
adc
dec
fisttps
mov
js
cmpsb
sub
push
add
stos
sub
adc
lods
pop
jecxz
dec
mov
leave
idivb
data16
mov
jo
fldcw
cwtl
out
sub
push
pop
inc
iret
jg
push
inc
movsb
ret
mov
push
mov
enter
mov
inc
pop
daa
and
fs
das
repnz
mov
aas
dec
call
push
enter
push
scas
aaa
lret
jne
push
ficoml
jp
les
dec
lahf
ljmp
inc
call
int3
int3
mov
jb
mov
aad
and
dec
cs
mov
mov
cmp
sahf
mov
and
inc
lea
mov
daa
hlt
mov
adc
scas
lret
in
shrl
dec
sahf
adc
mov
lock
lcall
in
jmp
mov
dec
dec
jg
jmp
push
jle
jo
and
and
out
mov
mov
mov
aaa
inc
rcll
jl
loope
pop
or
sti
out
nop
aas
mov
test
dec
cmpsl
inc
loopne
enter
mov
lea
int3
mov
fmulp
push
add
iret
test
jb
into
movsl
push
mov
mov
jo
lret
push
sub
or
dec
das
sti
dec
cmpsl
adc
add
push
pop
push
add
daa
dec
sbb
mov
ficoms
sub
inc
mov
sub
pop
sbb
loop
inc
in
lcall
adc
cwtl
scas
sbb
divb
movl
lea
inc
or
push
cmpsb
xchg
test
pop
ficompl
xchg
inc
dec
cmpsb
mov
mov
pop
mov
jo
and
pop
arpl
sub
scas
lret
and
adc
pop
xchg
insb
dec
cld
mov
cs
inc
xchg
mov
mov
xlat
push
test
cmpsb
sub
repnz
xor
jmp
inc
pop
dec
into
push
and
or
sub
sub
push
dec
adc
sar
sbb
push
pushl
out
mov
ja
sub
jle
inc
inc
into
adc
loop
adc
subl
pop
cmpsb
pop
dec
jbe
movsb
aaa
loop
mov
ja
jge
push
in
rclb
xor
xchg
pop
aas
in
add
inc
sbb
inc
adc
fadd
sti
fcomps
or
sbb
add
mov
pop
rorb
or
cwtl
xorb
loope
jge
jno
sbb
cmp
scas
cmp
jb
clc
push
cwtl
clc
inc
mov
add
enter
pop
ret
cmp
xchg
lods
or
mov
dec
shrl
add
std
mov
and
push
shlb
mov
fcompl
cli
adc
jle
std
imul
and
push
pop
pushf
inc
pop
loop
call
repz
mov
xlat
sbb
ds
lods
lock
ret
fwait
add
icebp
mov
pop
imul
xor
or
mov
jecxz
and
dec
imull
and
iret
icebp
mov
out
jg
jge
push
add
cmpsl
fadd
jle
lret
inc
lds
dec
or
cld
pushf
push
adc
dec
jns
data16
push
jecxz
mov
and
or
in
mov
sub
maskmovq
testl
frstor
mov
mov
xchg
mull
xchg
mov
fisubl
jl
pop
xor
lods
pop
jp
mov
inc
adc
pop
scas
call
sti
stos
jne
mov
aam
mov
cmp
push
and
out
loop
popa
push
xchg
imul
loopne
cmpsl
pushf
pop
test
sti
dec
stos
mov
outsl
xorl
insl
out
fs
jno
or
leave
xchg
inc
leave
pop
hlt
jo
sub
push
xorl
aam
cltd
mov
sub
imul
rorb
push
lcall
into
mov
jae
fwait
or
aaa
push
fidivs
pushf
or
loopne
mov
inc
adc
push
mov
adc
nop
ret
stos
fwait
jae
out
mov
jmp
imul
aas
xor
mov
mov
xor
out
xchg
test
inc
and
cltd
cmc
fnstsw
inc
out
mov
pop
add
or
sbb
mov
loop
aas
mov
ret
sbb
inc
shrb
jp
ja
test
jg
or
jmp
fisubrl
cmpl
and
jb
mov
mov
inc
cmpsb
dec
test
dec
rorl
movsl
pop
cs
les
pop
pop
pop
and
les
jo
fnstenv
popa
imul
out
adc
mov
pop
push
clc
add
sbb
pop
push
mov
and
rclb
loop
fimull
or
push
hlt
mov
hlt
stc
fildl
pop
mov
nop
enter
scas
and
mov
aad
or
xor
xorb
cmpsl
sbb
mov
pop
push
ja
ja
inc
in
or
add
test
xor
cwtl
mov
sbb
jecxz
lock
imul
lret
xor
stos
add
push
jo
pop
add
test
mov
jne
in
ja
cmc
aam
cmc
test
arpl
addl
xchg
out
add
je
pop
sti
mov
arpl
sub
bnd
or
hlt
dec
loopne
mov
call
int3
sbb
mov
adc
movntq
pop
and
fisubs
lahf
mov
mov
enter
adc
xor
xor
popa
or
jge
mov
jae
cltd
xchg
shlb
sbb
adc
xchg
icebp
push
mov
and
jmp
imul
rolb
xchg
test
ret
dec
bnd
cmp
mov
or
int
jle
xchg
mov
nop
fdivr
jmp
push
cmp
mov
inc
inc
sbb
jo
not
in
push
int3
repz
mov
or
mov
adc
in
push
test
sub
xchg
aas
mov
xchg
adc
mov
or
push
dec
aad
xor
daa
dec
sbb
cmpsl
leave
out
sub
dec
shlb
test
aam
mov
stc
cmpsb
jo
jle
jae
adc
insl
sbb
repz
mov
call
aas
push
push
pop
ss
rcll
lcall
insl
pop
pop
das
stc
pop
and
ljmp
mov
clc
in
xchg
inc
mov
lds
ss
scas
pushl
mov
mov
mov
cltd
mov
fstps
stc
pop
out
mov
std
push
lcall
mov
sub
mov
mov
enter
out
stos
jg
jl
in
jmp
test
cmpsb
push
ljmp
andb
inc
mov
fdecstp
adc
int
jae
movntps
movsb
sbbb
mov
lds
leave
rcr
fnsave
jb
sub
mov
ss
rcrb
mov
in
iret
cltd
push
mov
cltd
lods
xchg
inc
outsb
addr16
popa
jp
xlat
inc
fwait
rsm
int
push
jno
pop
xor
jle
inc
inc
ljmp
lret
push
psubd
inc
mov
into
adc
shll
mov
jnp
mov
adc
cwtl
aad
cmp
dec
xchg
cwtl
mov
clc
icebp
and
pop
cld
pop
xchg
sbb
test
into
sbb
jb
rol
mov
sbb
test
adcb
cwtl
mov
mov
outsl
repz
xor
in
push
push
dec
mov
loopne
scas
insb
mov
pop
cmp
les
lret
push
cwtl
lds
sub
pop
js
cmpsb
push
sub
push
clc
dec
or
arpl
fidivs
mov
lods
push
xor
mov
insb
dec
sbb
test
mov
cli
addr16
mov
stos
shlb
cs
mov
rcll
rcll
test
mov
lds
add
mov
fucomip
xchg
dec
add
xor
leave
fisubrs
cli
adcl
or
int
mov
add
mov
pop
add
stos
pop
mov
sub
add
outsl
or
ss
and
xchg
jl
and
mov
cld
inc
ss
loop
jb
repz
sub
int
xchg
xor
xchg
and
cmp
xchg
sub
add
jne
iret
cmpsl
addr16
in
push
imul
addps
call
loopne
and
daa
push
aam
mov
scas
pop
xor
jp
int3
data16
xor
adc
inc
ret
ret
sub
stos
fwait
clc
adc
jp
push
loope
mov
inc
add
add
mov
test
dec
fisubrl
xchg
inc
or
cwtl
xchg
shll
nop
jle
push
dec
aas
negb
insl
aam
std
mov
lret
cmpsb
cmp
mov
cmp
andl
loope
xor
cld
mov
clc
repz
sbb
mov
aas
push
shll
pop
hlt
daa
cltd
movsb
in
aad
xor
pop
fsubl
push
add
repz
mov
cs
push
clc
sub
les
pop
xchg
mov
xchg
xor
hlt
mov
mov
fcmovnb
sti
pop
popf
inc
sub
cltd
mov
xor
adc
sbb
add
jecxz
sbbb
pop
mov
adc
and
sub
fnstenv
xor
cmp
stc
das
push
sub
jg
lock
push
popl
and
sub
std
push
push
mov
aam
cmp
sub
jnp
inc
repz
in
roll
repnz
fwait
inc
cmp
push
mov
cs
mov
push
aam
out
sahf
push
loope
cmp
rorl
fstl
sbb
int3
mov
pop
cmp
or
pop
orl
test
es
pop
pop
lcall
in
divl
mov
add
dec
xchg
cwtl
dec
sub
neg
fbld
xchg
lahf
mov
mov
sub
mov
imul
sbb
ret
xchg
adc
std
add
insl
xchg
out
xchg
movsl
les
fs
addr16
jnp
bts
in
or
daa
lods
and
lret
int
rol
fcmovnbe
jnp
cmp
xor
daa
sarl
in
add
or
mov
ret
mov
es
mov
lock
pop
cmp
or
xor
dec
jmp
add
xchg
out
xchg
push
xchg
loopne
mov
adc
out
scas
daa
mov
repz
xchg
push
mov
add
ret
repz
pop
sub
ret
sub
push
imul
test
cmp
or
xchg
ret
push
es
out
xchg
stc
xor
fld
sbb
pusha
mov
shr
dec
negl
lcall
es
loop
xchg
push
dec
mov
icebp
out
jnp
push
xor
sti
sbb
ss
sti
scas
lock
movsl
xchg
iret
mulb
mov
addr16
push
roll
cmpsb
int
js
outsl
jnp
xor
jecxz
out
dec
push
loop
das
pop
add
iret
mov
sbb
ficoml
jl
pop
fisttpll
std
cmp
faddl
cmp
cmp
loope
sub
adc
aam
dec
add
pop
lock
xor
fwait
daa
shl
jno
out
or
add
jl
loope
pop
jecxz
jnp
inc
mov
add
xor
hlt
das
sti
xchg
xchg
ss
dec
mov
jl
bound
xor
inc
repnz
xor
enter
sbb
push
repz
pop
sub
mov
or
mov
mov
pop
lea
inc
cmp
idivb
lcall
int
add
sub
es
xor
add
xchg
mov
pop
push
fildl
jb
xor
fdivs
out
sahf
mov
mov
xchg
lds
loope
or
pop
mov
dec
xchg
dec
push
cltd
push
in
lret
das
cld
sbb
jo
out
rcr
shll
cmp
lds
xor
dec
or
add
leave
decb
incl
dec
mov
xchg
inc
dec
xor
nop
adc
cmp
cmp
push
popa
add
ds
or
mov
ljmp
xor
icebp
push
adc
mov
outsb
push
or
sarl
mov
leave
mov
or
jnp
xor
push
stos
sub
and
pop
imul
clc
cwtl
mov
push
notl
mov
jl
mov
out
loope
jno
andl
dec
inc
pushf
sub
nop
data16
enter
cwtl
insb
mov
push
sbb
cmpsl
addr16
jl
add
add
imul
add
jg
test
les
add
inc
add
incb
scas
sub
imul
xchg
aad
xchg
lea
popf
push
lahf
imul
decl
loop
inc
xchg
jno
faddl
mov
add
inc
hlt
ljmp
and
and
sbb
fnsave
mov
jbe
gs
stos
sbb
loopne
clc
add
adc
das
ss
gs
lret
or
inc
outsb
out
shl
sub
dec
fs
adc
out
and
fnstsw
clc
or
fbld
cmc
call
repnz
mov
push
shr
popa
adc
fldenv
mov
movsl
popa
sbb
sbb
movsb
pop
mov
rclb
imul
lock
mov
mull
rorl
mov
loopne
popl
and
into
push
mov
pop
je
ficompl
push
stos
mov
mov
test
loope
daa
cmp
mov
push
fldt
fidivs
pushf
jno
arpl
test
pop
xlat
ds
inc
push
mov
negb
sbb
addr16
pop
out
into
fsts
mov
mov
outsl
adc
push
adc
mov
and
xor
pop
jge
jae
call
insl
je
aas
ss
inc
adc
jmp
xor
and
enter
rolb
mov
out
cmp
jecxz
mov
adc
filds
adcb
pop
mov
sbbl
subb
imul
cli
icebp
popa
clc
xchg
jge
cmp
inc
sub
or
outsb
icebp
pushl
std
das
je
mov
loop
fdivrl
test
inc
dec
and
xchg
adc
cmp
mov
fdivrl
sub
std
xor
or
pop
outsb
xor
jg
pop
in
test
mov
scas
mov
mov
push
sbbl
lds
repnz
and
or
or
aas
sbb
fs
ss
mov
and
into
sbb
push
fldenv
push
xchg
dec
mov
pop
dec
ja
mov
call
jne
mov
sahf
mov
es
bound
mov
xor
jo
test
xchg
popf
cmp
aas
xchg
cmp
mov
enter
int
jnp
xchg
mov
in
icebp
pop
inc
sub
pushf
adc
mov
mov
jge
sbb
test
xchg
je
mov
xchg
sub
adc
notb
mov
imulb
pop
mov
sbb
sbb
mov
jo
iret
rcll
aas
mov
call
lds
out
add
add
and
int
push
in
aaa
fwait
int
movsb
mov
mov
jo
stc
sub
add
cwtl
aad
inc
pop
js
lock
leave
repnz
pop
leave
cltd
sub
dec
add
fcompl
fadd
cmp
mov
jl
mov
mov
ds
je
pop
jecxz
es
mov
sub
in
mull
fucomi
and
testl
data16
in
mov
iret
mov
sbb
jge
pop
add
imul
lret
mov
cltd
add
addb
lret
das
arpl
aas
cmp
test
cwtl
pushf
sub
outsl
push
mov
mov
xchg
daa
shrl
aad
dec
adc
je
xorl
add
mov
ffree
mov
scas
lea
fdivs
or
jb
adc
mov
or
fnstcw
or
mov
lock
aam
enter
inc
sub
add
push
mov
sbb
or
lea
pop
fwait
dec
push
or
or
add
mov
in
sbb
sbb
push
into
mov
lods
lods
inc
sbb
adc
mov
dec
in
cld
loop
cwtl
mov
pop
cli
cmpsl
lock
test
ja
cmpsl
sti
stos
stc
call
xchg
and
lods
jno
das
dec
pop
notl
loop
decl
insb
mov
fdivr
jmp
jg
sbb
mov
or
sbb
xchg
ror
or
inc
jnp
mov
xor
flds
lock
cmp
add
aaa
xor
mov
sti
popa
xchg
push
sbb
or
and
push
orb
push
pop
test
test
fsubs
push
push
jo
rorb
push
inc
enter
and
orb
xchg
out
mov
mov
fmuls
dec
cs
xchg
pop
sub
test
xlat
push
cmp
lret
push
xor
inc
into
in
adc
jge
or
mov
and
add
ljmp
mov
xchg
sbb
cmp
xchg
bound
pop
pop
testb
mov
shrb
aam
xorb
xchg
pop
and
pop
lahf
loope
mov
xor
in
adc
das
push
je
mov
sbb
add
push
sub
bound
sbb
loop
fwait
pop
stos
xchg
xor
orl
push
sahf
push
or
dec
jno
ret
cmpsb
rorl
xchg
mov
fdiv
jle
pop
outsb
shl
fadd
add
sbb
ret
ja
inc
push
jbe
in
in
sub
call
ds
mov
scas
sbb
push
xlat
xchg
and
push
jle
test
mov
add
loopne
mov
cmpsb
inc
pop
cwtl
push
mov
mov
jmp
pop
dec
jno
pop
push
mov
call
test
mov
mov
andb
lds
int
std
ficoml
sub
dec
pop
push
filds
loop
xor
mov
cmp
pop
lcall
movsl
decl
fcmovnu
out
incl
dec
mov
sub
loope
jbe
lret
notl
and
mov
movsl
hlt
fstpt
ss
add
out
xchg
mov
push
js
cmp
and
push
in
adcb
gs
jb
and
and
sub
ret
rclb
jno
jl
pop
dec
mov
sbb
icebp
mov
or
cmp
insl
outsb
dec
mov
cmp
sbb
cmpsb
xchg
stos
xchg
cs
pop
popf
pop
inc
pop
shlb
sti
ficomps
dec
mov
add
ds
adc
lea
or
sbb
rcl
push
sub
ljmp
aad
ss
mov
push
cwtl
rcl
dec
and
icebp
test
fildl
fsubl
push
stos
stc
sub
insl
and
test
fsubs
pushf
sahf
rorb
outsl
and
adc
push
mov
fldl
stos
xor
xor
pop
movsb
push
daa
cmp
int
pop
sub
add
jmp
ds
inc
or
sbb
test
xchg
or
dec
xchg
sarb
loope
lcall
fnstsw
arpl
mov
out
xchg
jecxz
jl
lahf
bound
outsb
pop
mov
mov
xor
jno
pop
std
test
jne
bnd
outsb
push
out
stos
push
xchg
mov
push
xchg
and
push
or
mov
xchg
les
or
cmp
mov
fwait
or
jbe
mov
xchg
xchg
sbb
pop
imull
repz
ret
outsl
xor
pop
lds
jge
insb
das
sub
imul
loop
pop
dec
in
mov
mov
sbb
shrb
inc
adc
arpl
popa
cld
mov
xchg
fcompl
jbe
jae
out
dec
prefetcht2
mov
mov
je
pop
jmp
or
jmp
fnsave
mulb
xor
xlat
cwtl
aas
in
jo
mov
jle
cmc
pop
outsb
xor
cmp
pop
rorb
sub
jae
shrl
lods
push
push
and
xor
push
mov
xchg
ljmp
mov
add
popf
cs
mov
gs
xor
xor
mov
pop
dec
lret
ss
mov
or
int3
adc
push
cltd
xchg
dec
xchg
pop
push
mov
xchg
ss
jo
or
rcll
clc
inc
and
neg
sub
inc
pop
outsl
ret
and
jno
lret
subl
ret
jo
xor
push
mov
rorl
cmc
outsl
xchg
arpl
inc
imul
test
sub
xor
push
jns
ljmp
adc
pop
repnz
ljmp
add
mov
pop
and
mov
jl
fdivrl
stc
mov
stos
imul
or
pop
or
xor
fs
xchg
jmp
mov
daa
push
sbb
js
push
cltd
loopne
ficoml
icebp
xor
cmc
dec
cmpsb
and
aaa
xor
xchg
outsb
xor
dec
insb
hlt
cmpsb
lret
in
notl
mov
mov
sub
stos
pop
out
adc
js
notl
inc
sbb
and
inc
lahf
xchg
adc
ficoms
adc
jg
shlb
mov
xor
push
mov
jg
xor
aam
lds
movsb
aas
or
in
fisttpl
inc
push
lock
mov
test
add
xor
cltd
ret
cld
lcall
test
mov
mov
inc
std
add
sbb
xor
lcall
lret
lret
xor
push
negl
in
cmp
push
jo
lds
adc
add
sbb
cmpl
jl
js
add
call
cmp
lea
mov
push
cmc
mov
rcrl
ja
adc
insl
push
mov
rorl
jne
mov
push
cmp
adc
jae
insb
xor
jle
bound
jle
testb
sub
or
out
dec
cs
out
mov
pcmpgtd
jnp
cmp
orb
fwait
scas
mov
xor
daa
cmc
xchg
adc
pushf
lret
mov
mov
mov
push
xor
jo
cli
jg
test
imul
dec
cmpsl
loope
dec
mov
jne
fs
aas
daa
lods
shll
push
iret
lret
andb
sahf
xchg
loopne
cmp
insb
or
mov
idivl
std
lahf
pop
icebp
cmp
cmc
sbb
mov
xor
xor
xor
shlb
jl
hlt
in
scas
add
sarl
stc
and
xchg
xchg
lret
aaa
mov
stos
mov
mov
into
mov
push
sbb
dec
in
and
leave
mov
stos
adc
shlb
or
stc
scas
sub
iret
hlt
and
adc
mov
push
aad
pusha
xor
div
js
inc
fdecstp
and
aad
lea
daa
andl
mov
aaa
decl
sub
fildll
aas
insl
hlt
hlt
ljmp
mov
test
cmp
sub
outsl
dec
shll
lcall
pop
jl
repz
imull
scas
lods
imul
jo
repnz
shll
jmp
sbb
aam
push
or
test
andl
push
jae
sbb
pop
out
xchg
mov
adc
add
xor
movsl
pop
repnz
sub
scas
jmp
ds
icebp
sub
pusha
scas
test
dec
lods
lods
sub
cmp
mov
inc
flds
cmp
cmp
test
mov
mov
mov
repnz
inc
mov
out
insb
or
idiv
call
andb
mov
sub
call
je
pop
push
add
int
push
rorl
mov
mov
aad
std
sub
push
std
stos
or
add
xorb
cwtl
hlt
pop
add
fnstsw
ja
sahf
add
gs
sbb
jecxz
pop
rcl
and
pop
mov
push
sbb
pop
rclb
pusha
pop
jne
aas
jb
jmp
push
lret
out
in
xchg
and
rclb
adc
js
mov
loopne
dec
jge
pop
push
jle
les
in
lods
inc
mov
jp
test
add
xor
out
gs
mov
cli
fstpl
punpckldq
push
mov
dec
sub
mov
lcall
pushf
jp
call
movsl
arpl
cld
mov
je
dec
add
sbb
out
sub
mov
out
pop
add
lret
pop
les
mov
xor
push
roll
jnp
cmp
xor
adc
pop
jb
xchg
test
out
fwait
sbb
dec
xchg
mov
push
fucom
out
ret
and
into
mov
divl
xchg
popl
bound
adc
sub
cmc
popa
rolb
mov
mov
test
shrl
cmc
jae
xchg
aas
subl
sbb
and
cmp
repz
sbb
sarl
adc
xor
idivl
push
and
outsl
sub
sub
jno
shrb
test
cmp
jae
jg
xchg
mov
mov
dec
cmp
mov
loop
pop
xchg
outsl
sbb
pop
outsl
mov
out
inc
jno
sti
add
cld
addr16
stos
outsl
cli
out
cmpsl
cmp
push
jae
sbb
sbb
nop
out
inc
ret
sbb
imul
lcall
jnp
outsb
pusha
xor
fdiv
sbb
btc
loope
push
mov
cmpsb
mov
jmp
fwait
cld
lds
push
lods
test
sub
sete
aaa
adc
dec
jne
je
repz
aaa
jno
in
add
stos
packuswb
push
out
pop
decl
pop
add
dec
add
lock
negb
xlat
addl
mov
adc
sub
loope
add
in
repnz
cs
sub
mov
add
push
push
inc
jle
sbb
rcrl
cmpsl
shl
daa
dec
dec
xor
xor
lock
sbb
mov
incb
imul
sbb
xor
movsb
call
int
push
jge
inc
dec
push
fstpl
sub
pop
xor
or
out
push
xor
push
pushf
jae
js
add
adc
loop
pusha
cwtl
dec
jmp
test
or
lahf
adc
fwait
and
mov
pop
dec
mov
lock
lret
fs
rcll
popa
sarb
loopne
pop
add
inc
push
in
lcall
and
adc
xchg
sahf
or
mov
cmc
or
call
dec
push
call
loope
pushf
jbe
ja
test
mov
add
adc
les
dec
loope
arpl
imul
pop
jb
pop
movsl
sbb
pop
and
mov
and
sbb
int
aaa
in
or
rorl
push
lcall
cmp
je
pop
xor
mov
sbb
mov
popf
xor
xlat
cs
clc
or
popf
mov
jge
cmp
rcl
les
mov
rolb
adc
dec
dec
cs
jae
mov
das
inc
ror
f2xm1
filds
add
movsl
gs
adc
and
mov
push
sahf
mov
mov
push
cld
testl
ret
jno
push
hlt
mov
mov
xor
push
push
jle
cmpsb
mov
test
enter
push
out
mov
dec
and
xor
xlat
loope
add
sbb
in
fs
jne
movb
xor
test
add
fnstsw
xor
mov
scas
jmp
es
push
mov
jbe
loope
movsl
and
push
decl
je
add
fisubs
cwtl
or
jne
adc
stos
data16
sub
leave
or
testb
jb
test
scas
mov
in
adc
gs
fiadds
xchg
incb
outsb
enter
jle
in
ret
in
outsb
pop
mov
popf
mov
aad
imul
mov
fidivl
jae
inc
scas
fs
adc
cmpsb
and
xchg
faddl
cmp
sbbl
scas
bound
lods
cmp
mov
test
imul
add
enter
xor
outsl
dec
sub
pop
les
adc
pop
sahf
add
mov
js
pop
cmp
rcrb
imul
mov
jle
in
sti
or
adc
or
mov
cwtl
fs
inc
mov
mov
hlt
mov
adc
clc
aam
stc
xchg
test
pop
pop
jle
or
adc
iret
or
mov
outsl
aaa
xorb
aas
jbe
out
push
insl
and
arpl
dec
mov
jle
sbb
icebp
add
lahf
pusha
sub
je
jg
repz
pop
push
push
sub
dec
sub
into
pushf
push
xor
test
sub
les
push
push
aam
out
jo
inc
mov
insl
fs
lods
mov
sahf
adc
insb
enter
inc
jb
call
inc
push
cltd
mov
cli
inc
es
xchg
jb
insb
orl
pop
in
lea
add
cld
xchg
mov
ror
jl
shlb
xchg
test
push
add
dec
popa
test
jnp
sarb
pop
xchg
jbe
das
cltd
mov
sahf
sub
mov
push
pop
fbstp
clc
sub
aam
subl
xchg
and
enter
and
mov
inc
test
xor
test
pop
xor
stc
out
dec
sbb
cmp
pop
aad
mov
cmp
icebp
shrl
jae
xchg
mov
cmpsl
andl
pop
push
iret
mov
jmp
mov
pop
scas
cli
dec
dec
push
xchg
cmp
jecxz
aad
daa
sbb
pop
enter
pop
or
jg
ja
xchg
icebp
jl
andl
mov
pop
js
das
xor
aad
popf
xchg
mov
out
in
mov
add
adc
jno
inc
pop
and
or
push
out
push
inc
inc
push
mov
mov
add
outsb
ret
mov
push
repz
xchg
psubw
scas
rclb
loop
lcall
dec
inc
es
push
inc
imul
mov
xor
and
enter
call
icebp
xchg
pop
cli
test
in
xor
out
sub
bound
fdiv
cmp
out
dec
dec
clc
aas
insl
aas
fucom
pmaxub
or
push
mov
rolb
push
inc
jl,pn
xchg
inc
repz
mov
sbb
repz
sub
sub
mov
sbb
xchg
out
insb
test
sub
movsl
enter
xor
stc
imul
push
mov
cmp
insb
cmp
rorb
push
iret
loope
popf
ja
and
push
fimuls
sub
insl
mov
je
fistps
je,pt
jecxz
call
aaa
cwtl
ja
adc
pop
pop
imul
fisubrl
pop
push
ficoml
mov
and
xor
test
xor
xchg
lock
out
sahf
sub
xlat
clc
jns
repz
push
rcrb
or
lock
stos
ficoms
mov
sti
pop
adc
sub
ficompl
shll
jae
push
dec
dec
outsb
mov
sub
lods
push
in
mov
cmpsl
aaa
mov
mov
out
xor
push
rcll
jmp
pop
test
mov
jno
scas
mov
mov
iret
push
jbe
subb
inc
xchg
fnstenv
flds
push
ret
inc
out
xchg
mov
push
xor
pop
fildll
pop
in
out
cwtl
jecxz
pop
mov
mov
or
imul
mov
push
std
aad
jmp
adc
jmp
fmul
mov
scas
les
dec
sbb
adc
pop
push
push
pop
aam
rolb
mov
mov
lret
and
jnp
sbb
adc
outsl
in
push
popf
jns
xchg
ljmp
ret
push
push
fwait
hlt
hlt
xchg
in
ja
jp
cmp
push
lods
add
adc
fs
sbb
and
add
test
pushf
shl
fcomi
data16
push
nop
lcall
inc
stc
adc
fstpt
pusha
ss
ljmp
xchg
jae
jp
or
xor
cli
and
stos
shlb
push
xor
fcoms
out
jmp
outsb
cltd
jp
fdiv
xor
jge
scas
sbb
xorl
fcomp
es
pop
lods
cmp
ja
lods
mov
fsts
in
pop
scas
jns
push
lods
repz
inc
lds
push
xor
mov
adc
inc
pusha
sbb
arpl
push
mov
pop
int3
cmpsl
inc
xor
bnd
xchg
push
jg
push
jl
jg,pt
sub
mov
daa
sarl
dec
das
call
mov
mov
lods
ja
and
aam
fldcw
aas
mov
push
lret
xchg
lea
and
sarl
push
xchg
pusha
or
mov
cmp
sbb
pushf
addr16
sbb
inc
bound
mov
xchg
cmp
or
sub
sbb
or
cld
ret
cmp
mov
repz
je
push
bound
dec
push
hlt
mov
and
divps
sbb
jge
call
sbb
cs
sub
adc
lods
xchg
ret
xlat
xlat
mov
jnp
movsb
pusha
cmp
jl
insl
xor
mov
jno
mov
jg
pop
cmp
and
jns
stos
ficoml
pop
xchg
es
and
out
pop
icebp
ds
popa
xchg
movsb
rcl
or
push
cmc
xchg
and
dec
mov
test
loopne
adc
rorl
jbe
sub
out
les
jmp
ret
shll
popf
jno
sbb
test
ficomps
sub
jecxz
fisubl
ja
outsb
scas
adc
add
test
mov
ljmp
add
sub
loop
inc
sbbb
into
fistps
les
fwait
into
inc
int3
and
push
scas
push
mov
adc
sbb
cmp
scas
dec
jae
fiaddl
call
xor
sahf
cmp
jmp
inc
into
lret
sbb
and
inc
jle
je
fs
mov
sub
sahf
inc
aad
add
and
xor
lods
mov
aaa
mov
jns
mov
push
loop
in
in
jecxz
add
addl
test
adc
sarb
fucomip
add
and
arpl
jb
lret
xchg
jle
lea
push
xor
xchg
scas
sar
shl
je
fcompl
fcmove
fimull
mov
pop
data16
jl
mov
pop
pop
and
clc
sub
stc
das
mov
and
sbb
into
shlb
cmp
data16
mov
aad
pop
push
jbe
outsl
mov
pop
add
test
mull
aam
jecxz
notb
gs
lock
shl
in
dec
pop
pop
mov
test
ja
std
and
jg
push
and
loop
pop
icebp
pop
sbb
adc
jl
mov
mov
or
pop
push
test
mov
adc
testb
push
xor
cmp
cs
mov
push
fisubrl
test
idiv
test
loop
mov
sub
dec
testl
inc
ljmp
or
lret
movsb
mov
push
outsb
xor
cli
mov
or
jg
rcll
xor
aas
pop
cmp
lahf
sub
lret
xor
xor
adc
adc
mov
push
dec
and
int3
inc
movsl
cmpsl
rclb
stos
pop
leave
mov
cmp
dec
inc
mov
xor
mov
xlat
rclb
negb
imul
mov
jae
cmpsb
lods
sub
aaa
aam
std
pop
loopne
lods
mov
in
push
je
daa
xchg
mov
insb
dec
jmp
push
and
outsl
lret
aam
cmpl
sub
mov
xor
cmpsb
out
addl
gs
lahf
aam
aam
shl
mov
out
mov
bound
push
sub
lcall
or
call
jne
push
cmp
mov
loopne
push
inc
pop
iret
adc
push
sbb
out
filds
adc
imul
jmp
call
and
enter
ljmp
dec
aaa
jge,pn
lock
push
sub
cmp
xchg
dec
js
jbe
adc
adc
ror
scas
data16
clc
dec
movsl
adc
fdivr
adc
fcmovnb
movsb
jmp
in
daa
jno
cmp
sarl
outsb
movsl
hlt
jbe
fs
loope
lock
in
enter
arpl
inc
nop
movsl
push
cli
jge
add
out
xchg
aas
push
stos
leave
xorl
out
frstor
in
pop
jns
add
xor
lock
popa
sbb
das
mov
adc
int3
cmp
fcmovnu
insl
sub
rclb
stc
arpl
cmp
loope
clc
xchg
inc
push
xor
adc
mov
shll
stos
inc
pop
lods
adc
dec
dec
in
sbb
mov
mov
xlat
push
shll
jnp
aad
add
in
mov
pushf
adc
dec
mov
movsb
data16
fldt
ret
ss
lds
dec
push
sub
push
leave
fistl
adc
fdivrs
cmp
imull
enter
sbb
dec
pop
or
sub
mov
dec
int3
call
adc
hlt
icebp
jbe
popa
push
xorl
filds
ljmp
xlat
fucomp
xor
movsb
pop
int
bound
mov
movsl
xor
dec
fadds
fbstp
into
mov
and
xchg
push
pusha
mov
mov
or
or
sub
sbb
out
sub
mov
sub
lcall
push
add
repz
and
cld
test
cltd
mov
fwait
insb
jge
add
lcall
nop
pop
pop
inc
push
inc
hlt
sbb
pop
inc
adc
push
dec
xor
push
mov
in
pop
shrb
jmp
repnz
out
mov
lock
or
fdivr
stos
inc
jno
sub
dec
shr
packssdw
sbbb
imul
test
jecxz
test
scas
dec
movl
out
fcoml
je
out
push
jbe
cwtl
push
mov
xor
fs
mov
add
ret
outsb
push
rcll
xor
xor
out
das
in
les
push
imul
arpl
pop
sti
cmp
aad
mov
mov
add
sub
scas
jle
sbb
or
es
mov
shrl
lods
add
jecxz
xchg
jbe
orl
data16
dec
mov
std
lret
out
jmp
loop
cwtl
push
std
mov
add
dec
mov
ficoml
push
loopne
push
xor
sbb
or
test
jno
imull
cmpsb
sarb
mov
dec
adc
lock
dec
int3
sbb
rcr
inc
ja
sub
mov
sub
ja
inc
jecxz
inc
add
push
dec
bound
cmpsb
mov
jp,pt
mov
clc
or
mov
pushf
xchg
xchg
xor
outsb
fdivl
scas
or
mov
fcmovb
adc
ds
test
test
dec
mov
out
data16
cli
adc
mov
movsb
pop
test
xchg
loop
faddp
xchg
pop
sbb
xchg
ljmp
jecxz
int3
mov
cmp
mov
and
je
lcall
push
or
xchg
out
call
push
and
inc
mov
jp
push
lea
ds
dec
fmuls
fs
inc
lcall
ss
addr16
pop
pop
movsl
mov
setge
or
mov
mov
inc
cmp
call
pop
outsl
cmc
pop
shlb
shll
and
stc
mov
lea
sub
or
stos
mov
cmp
out
dec
sbbl
sbb
fadds
xlat
and
loopne
in
jp
movsb
sub
xor
cmp
and
stc
repz
les
push
sbb
push
aas
movsl
adc
add
push
and
dec
mov
aas
aad
imul
xor
cwtl
fstl
loopne
jmp
mov
incl
pop
jbe
add
lods
fbld
fsubrs
cltd
scas
fadds
or
inc
fwait
jns
in
push
js
jns
and
cmpsb
cmp
loop
and
adc
adc
scas
mov
addb
push
insl
fdivs
mov
pusha
popf
ret
out
xorl
or
in
push
adc
cwtl
int3
in
pop
or
imul
cmp
sti
dec
dec
xor
cmp
mov
sar
adc
int3
jge
dec
cmpsl
pop
xchg
xor
leave
and
xchg
shlb
out
mov
inc
pop
int3
jmp
dec
xchg
shll
test
out
and
dec
xchg
dec
jbe
xchg
sbb
stc
dec
call
inc
jmp
mov
int3
enter
outsb
clc
cmp
dec
or
mov
inc
adc
test
out
jmp
xchg
out
jns
inc
in
movl
sbb
lahf
push
jle
dec
lock
stc
jg
int3
adc
je
pop
lock
scas
adc
inc
inc
sbb
mov
scas
in
sub
add
xor
lcall
jne
pusha
mov
icebp
les
mov
sbb
sbb
insb
sbb
push
cmpsb
rcrl
leave
xor
jge
cmp
shlb
pop
lock
dec
in
push
divb
fxch
lret
adc
xchg
adc
mov
mov
mov
ljmp
mov
iret
pop
push
in
adc
popf
sbb
mov
lret
add
lock
inc
fs
leave
jbe
jb
sti
mov
xchg
leave
sbb
push
shlb
xchg
push
and
ljmp
icebp
cltd
lods
adc
mov
or
sbb
imul
cmc
out
stc
lods
cmpsb
cld
cmc
or
pop
fisttpll
mov
mov
loop
enter
fs
push
or
add
aas
push
pop
shl
inc
mov
loope
popl
daa
ficoms
mov
pop
aas
xor
sbb
jo
out
test
lahf
stos
out
lds
ret
and
inc
and
jg
mov
cmp
call
add
cwtl
mull
mov
mov
cmp
mov
mov
and
clc
mov
lahf
xchg
or
sbb
jne
leave
data16
xchg
cmp
cwtl
pop
bound
imul
cmp
inc
and
push
inc
cmpsl
stc
repnz
stos
xchg
test
sbb
les
inc
sahf
pop
and
mov
dec
ja
stos
aad
addr16
scas
inc
and
inc
in
mov
add
lods
repnz
iret
jmp
imul
cmp
sbb
hlt
or
hlt
jbe
rorb
lods
xchg
movsl
push
cmp
sar
orb
fcoml
cmc
adc
ror
outsl
jmp
int3
pop
inc
insb
je
inc
sub
push
lahf
pop
ja
sarl
inc
in
mov
clc
insl
pop
lea
popf
pop
xchg
mov
xor
pop
push
sbb
xchg
sbbb
xchg
incb
mov
dec
shrb
dec
call
sarl
add
shll
inc
mov
ds
and
sbb
andps
pop
and
insl
test
pop
pop
xor
pop
pop
movsl
pop
adc
inc
fnstenv
fstl
mov
cld
lret
mov
pop
xchg
cltd
jo
test
jecxz
std
mov
outsb
out
fdivrs
xor
sub
mov
or
and
mov
loope
es
stos
ss
dec
push
sub
insl
cmp
xchg
pusha
push
and
pop
in
test
push
add
mov
jae
and
push
push
pop
xchg
cmp
repnz
mov
mov
mov
and
mov
sub
add
push
lret
out
pop
dec
push
xor
pusha
push
sbb
loopne
dec
dec
movsl
ror
mov
dec
cmp
adc
adc
rclb
push
lds
fcmove
dec
cmp
in
jbe
add
jno
add
or
mov
mov
cmp
and
repnz
sbb
and
mov
adc
addr16
inc
or
nop
iret
xchg
mov
rorb
mov
mulps
mov
mov
xlat
imul
sbb
repnz
fstps
add
sbb
repnz
jb
loope
cs
or
sbb
mov
adc
mov
xchg
adc
insb
lcall
mov
cmp
cs
add
pop
jns
push
fisttps
add
fiaddl
adc
test
int3
mov
adc
cmp
lock
jo
xor
push
jo
scas
sti
jnp
insl
rcrl
in
xchg
addr16
xchg
addr16
mov
out
lds
lret
mov
xchg
add
dec
sbb
mov
pop
scas
lret
scas
push
sahf
cld
aad
dec
adc
pop
pop
mov
out
push
aad
hlt
mov
mov
lods
dec
lahf
jne
enter
add
xor
loop
adc
push
insl
enter
in
dec
adc
mov
lea
mov
sbb
repnz
aaa
mov
or
pushf
or
mov
fistpll
popf
sbb
popl
test
and
or
mov
add
mov
cmp
sbb
or
sub
jmp
in
cs
sub
test
or
pop
jp
popf
or
mov
inc
dec
rcll
dec
mov
pop
dec
test
cwtl
lock
nop
jle
and
hlt
insb
xor
lret
or
ja
shl
in
imul
push
hlt
sub
fcoms
test
dec
scas
dec
pushf
into
test
push
rcll
push
fmuls
inc
xor
push
popa
roll
test
xor
int3
scas
or
sbb
fldenv
repnz
dec
jg
sbb
xchg
push
idivb
negb
or
jnp
aad
mov
in
xlat
mov
push
and
stc
prefetcht0
adc
add
lods
shll
jbe
imul
inc
adc
xorl
repnz
push
shrl
lods
jg
cmp
push
xor
shl
std
jae
push
push
jb
call
mov
jmp
dec
mov
or
loopne
jl
or
pop
pop
mov
sub
add
lods
andl
inc
decl
sub
or
add
in
rcrb
daa
inc
mov
and
icebp
insl
fwait
sbb
int
and
mov
ror
mov
inc
jae
shll
shlb
add
aas
addr16
xor
cmp
insl
fistps
xchg
inc
lret
idivl
cmp
and
sbb
aam
xchg
outsl
inc
out
in
mov
shll
cmp
stos
xlat
xor
stos
mov
lock
push
test
push
ret
aas
fidivs
mov
mov
les
dec
ja
push
sbb
stc
cli
cld
cmpsl
ficompl
repnz
imul
dec
fnstenv
and
push
mov
pop
and
in
sub
dec
popf
jg
das
aam
xchg
dec
cwtl
mov
pop
shrl
jb
add
inc
mov
fs
sarl
and
rorb
lods
sarb
pop
jecxz
les
cmp
cltd
mov
cmp
jg
pop
jmp
aam
mov
jno
divl
dec
pop
dec
pop
and
lods
dec
mov
adc
xchg
aad
ja
sbb
pop
and
dec
ret
jge
push
cmp
jae
push
jp
jg
inc
cmp
mov
inc
xor
sbb
jecxz
xchg
lret
pop
fs
inc
cwtl
ljmp
push
dec
inc
nop
cmp
ds
jmp
xchg
and
fiadds
icebp
jle
lock
inc
mov
pop
ror
std
mov
sub
sti
call
mov
daa
divl
mov
mov
aad
fdivp
adc
push
out
xor
xchg
xchg
sbbb
in
xchg
ja
xor
mov
dec
adc
lret
xor
stos
dec
dec
jp
lock
mov
jmp
aad
push
out
adc
ret
jne
addr16
add
popa
rclb
jecxz
test
inc
mov
jne
loope
cmp
mov
inc
out
shrb
in
clc
jno
jp
push
sbb
mov
jns
dec
pusha
shrb
cmp
sub
nop
or
es
out
jg
xor
mov
xchg
fsts
cmp
dec
inc
or
loopne
dec
sub
rclb
pop
adc
aas
and
xor
inc
cli
mov
mov
xor
dec
jae
jg
inc
scas
adc
jne
push
xorb
mov
cmp
aas
pop
and
ds
push
mov
or
push
cs
add
fistpl
rorb
adc
insl
or
push
dec
pop
movl
insb
and
push
pop
out
lods
or
hlt
cld
fbstp
inc
pop
sbb
sbbl
mov
adc
movsl
loopne
mov
movsb
cmpsb
fcmovb
push
jecxz
movsb
lahf
nop
mov
pop
mov
jns
pushf
ss
jne
adc
test
mov
xchg
sub
imul
ljmp
sbb
dec
xor
or
mov
lahf
pop
in
pop
sbb
addr16
clc
lret
inc
fisttpl
pop
lea
dec
out
xchg
push
mov
pushf
sbb
out
imul
push
xchg
mov
int3
pop
fldl
leave
lea
mov
daa
int3
xchg
inc
orb
stos
sub
outsl
mov
jl
movb
xchg
insl
jecxz
jg
mov
and
mov
imul
loopne
inc
in
inc
jae
loopne
stos
ds
daa
pop
fisubs
xchg
sub
subl
lret
cld
outsb
cmpsb
mov
gs
jno
cmp
inc
mov
xchg
mov
stos
pop
mov
mov
dec
xchg
orl
jle
jb
push
xorl
add
add
and
sahf
add
es
stc
mov
mov
pushf
enter
fistl
or
shlb
fs
test
je
and
mov
pop
inc
xorl
sarb
cmp
ffreep
add
loope
cli
mov
imul
cmp
aad
xchg
ss
fwait
and
jge
fistps
shlb
mov
push
mov
incl
stos
test
mov
or
or
pop
cmp
and
cmp
and
les
fcoms
hlt
jg
xor
test
mov
mov
loopne
movsl
lods
sbb
xchg
mov
sarl
xchg
repnz
imul
cwtl
xor
add
mov
sbb
jbe
mov
push
push
ja
dec
pop
ret
bound
loope
push
daa
daa
mov
ja
pushf
sub
mov
cmp
adc
inc
add
scas
xchg
mov
pop
in
clc
js
test
mov
push
leave
clc
addr16
mov
sbb
rcrb
inc
fwait
inc
inc
push
mov
push
mov
inc
push
mov
test
mov
int3
push
fistps
dec
repnz
sub
test
jge
pop
loope
ljmp
in
push
movsb
and
les
jle
push
inc
nop
pop
adc
xlat
xor
ret
cmp
jae
popf
es
andl
int3
push
xchg
mov
lcall
mov
ljmp
mov
dec
fs
jmp
imul
aas
jl
jbe
sub
das
es
out
outsb
jbe
cmpl
cld
call
pusha
out
jle
scas
imul
mov
xchg
jecxz
push
cwtl
movsb
mov
leave
and
adc
out
cmc
inc
dec
jp
ljmp
mov
jb
jne
inc
rcrl
jnp
xchg
divl
iret
mov
cmp
mov
movsl
int
ja
sbb
jl
push
pop
sub
shll
sub
jo
or
sub
arpl
mov
shrb
push
xchg
flds
mov
movsb
leave
mov
cwtl
stc
mov
pop
cld
arpl
xchg
dec
aaa
pushf
cs
ds
mov
mov
scas
mov
fisubrs
push
repz
mov
lock
cltd
popf
xor
arpl
addr16
jnp
pop
jg
xor
subl
cmpsb
and
pop
lods
je
sub
subl
in
repz
shll
push
jp
das
scas
cltd
jb
adc
outsl
jo
jl
pop
fists
ljmp
xor
scas
cli
nop
cwtl
scas
lock
lcall
jb
dec
inc
ss
pushf
bound
rorb
sarl
data16
into
fisubl
push
scas
xchg
jp
sbb
loopne
cmp
xchg
lahf
pop
in
aad
jo
dec
out
add
fidivrs
in
or
adc
pop
stos
pushf
sti
data16
mov
pop
ficompl
lods
movsl
ds
mov
and
test
push
xor
jle
pop
jbe
test
fwait
jge
push
pop
jg
and
outsl
shlb
dec
xor
sbb
pop
mov
mov
popf
fdivrs
iret
mov
inc
pop
mov
lret
in
sbb
mov
test
stos
jp
pop
push
or
rol
jecxz
add
xor
repz
ljmp
inc
ret
jno
scas
clc
pop
mov
mov
jmp
jbe
push
add
cwtl
stc
jl
shlb
ljmp
movsb
cmp
xor
stos
loop
cmpsl
outsl
lcall
fdivs
in
pop
mov
xorb
mov
add
cmp
push
fwait
dec
add
cmp
and
clc
cli
testb
add
fstpl
aaa
fdivp
xchg
dec
or
fucomi
imul
xor
sub
lahf
test
in
add
or
mov
shld
xor
sti
lock
iret
fdivrs
ret
fwait
pop
je
lock
cmc
or
add
les
test
mov
test
xor
das
test
rcll
fisubrl
stos
out
inc
jne
mov
aaa
ljmp
inc
imul
ljmp
fnstcw
push
rcr
sub
mov
in
outsb
push
or
es
stc
mov
je
cs
push
cmp
fcoml
and
push
fistpll
fadds
adc
dec
lds
in
sbb
or
dec
mov
or
push
movl
ds
inc
mov
xor
loopne
ja
adc
mulb
iret
and
or
or
mov
push
pusha
lcall
lock
inc
cmp
gs
xor
push
rep
shrl
push
pusha
xor
cmpb
xchg
xchg
ja
addr16
pop
repnz
jno
mov
hlt
cmp
xor
ja
idivb
dec
arpl
lcall
lock
mov
dec
mov
inc
pop
inc
cmp
cmp
pop
das
roll
jnp
pop
mov
fmuls
adc
cmp
lahf
dec
insb
pop
popf
xchg
mov
into
es
pop
cmp
pop
sti
ds
lret
inc
cmpsb
cmp
and
orb
les
outsb
pushl
or
pushf
xchg
jo
adc
mov
xor
fs
pop
jp
push
jge
scas
sub
or
data16
xor
hlt
push
jnp
int
push
rorb
jp
dec
mov
ss
cmp
jbe
mov
loope
xor
push
aaa
dec
jle
mov
mov
aas
cmp
repnz
push
pop
xor
pop
pushf
pop
inc
push
cmpsb
mov
jbe
sub
jbe
sti
test
imul
adc
aam
int
and
mov
int
inc
jae
push
cmpl
jge
ficompl
lcallw
adc
mov
call
aas
xchg
lret
jp
das
pop
mov
push
add
xor
lods
out
div
dec
ret
cmc
scas
rcll
push
orb
stc
psraw
pop
inc
xor
adc
inc
shlb
int
jnp
aad
push
push
xchg
scas
and
lcall
sub
ficoml
xchg
stos
xchg
dec
xchg
push
std
fs
adcb
loop
mov
mov
je
mov
into
add
inc
add
dec
dec
shrb
cmp
mov
out
call
mov
nop
js
cmp
and
data16
sbb
and
or
enter
push
fldt
pop
and
and
hlt
test
dec
mov
imul
add
dec
divl
jmp
fwait
insb
mov
jbe
push
or
sarl
lock
mov
dec
jb
test
and
sbb
inc
jbe
sbb
clc
jno
jbe
mov
xor
fbld
cmp
xor
imul
ss
loope
add
cwtl
mov
lds
add
mov
in
fs
mov
xchg
stos
jno
test
adc
dec
lock
dec
mov
fistpll
mov
and
sbb
xchg
loope
mov
fisttpll
into
push
stos
inc
test
popa
jmp
fcoms
loopne
or
mov
fmull
insl
or
lds
cli
les
push
imul
mov
add
jno
inc
sbbl
mov
ror
add
mov
ljmp
lcall
jne
jecxz
adc
or
movswl
sahf
xor
inc
fxch
ficomps
xlat
inc
out
into
mov
call
dec
popa
fs
mov
push
jge
jg
popf
movsb
addr16
stos
pop
push
cltd
xchg
mov
fistps
inc
pop
cmp
orl
pop
testl
mov
fsubrs
scas
call
leave
push
roll
push
jecxz
cmp
push
dec
mov
dec
data16
cmc
lret
fistpll
inc
ds
frstor
xor
jae
in
jno
test
dec
push
mov
pop
mov
mov
sbb
out
and
outsb
inc
dec
mov
pop
adc
add
jb
dec
and
mov
jo
push
movsb
xchg
ljmp
push
pop
xor
loopne
int
mov
lea
rcll
dec
inc
mov
mov
add
mov
cmp
and
mov
clc
xor
cwtl
repz
jno
inc
xchg
jo
or
clc
dec
ss
sub
add
cli
or
pop
push
repnz
sbb
daa
out
mov
ds
jo
lea
xchg
inc
cli
aas
mov
and
incb
cmp
dec
pop
and
inc
mov
in
out
loop
push
cmp
inc
add
test
mov
adc
fs
mov
xchg
jmp
xor
pusha
ret
sub
dec
fdivrl
mov
mov
enter
rclb
pop
cs
push
pop
mov
mov
xorl
inc
xor
sti
inc
jmp
shll
jnp
jle
fstps
jmp
pop
cmpsl
xchg
or
and
and
xchg
mov
loopne
iret
push
cli
mov
sub
ffreep
repz
imul
push
add
pop
xchg
ficompl
push
fisttpll
xchg
adc
fnsave
or
loop
outsb
pop
jnp
jmp
dec
popa
pop
imul
lret
mov
testb
xor
and
jb
rcrl
lcall
sub
mov
adc
or
dec
push
jbe
aaa
mov
add
mov
lret
or
or
rcrl
outsl
xchg
ror
sahf
call
repz
mov
das
mov
push
cmp
inc
ljmp
mov
pop
jb
sbbl
xorb
xchg
sahf
jb
mov
rep
mov
push
and
pop
and
pop
adc
sahf
push
mov
xchg
jb
or
js
and
out
dec
pop
movsl
mov
adc
mov
mov
ljmp
mov
es
pusha
or
leave
ljmp
jmp
in
in
subb
clc
pop
mov
push
popf
add
jle
push
popf
std
stos
addr16
cmc
jno
nop
sbb
mov
sbb
xchg
xchg
out
out
scas
push
or
mov
jae
lods
jo
sbb
xchg
cmpsl
js
push
or
filds
cmpsb
lahf
and
loop
xchg
sbb
push
sub
imull
sbb
push
dec
jp
int3
mov
cwtl
dec
fcmovne
xor
xchg
add
pop
xor
cmp
cmp
ja
push
sarl
pusha
leave
outsb
or
lret
divb
ja
or
shlb
pop
cmp
int
lcall
xchg
push
dec
das
inc
gs
les
lret
xor
cmp
sub
xor
mov
jno
ffree
inc
loopne
dec
and
jnp
adc
xor
movsl
dec
pusha
scas
add
push
sbb
jp
inc
aas
push
or
ret
inc
call
or
mov
out
pop
scas
xchg
out
clc
push
lret
cmpsb
rorb
or
loope
push
and
or
pop
lods
scas
andl
or
lds
jo
test
lods
sbb
mov
test
push
cwtl
insb
xchg
gs
push
insb
cmpb
rorb
in
add
push
movsl
dec
pop
shll
int
std
ret
lret
clc
lods
jge
jae
push
stos
jo
sub
xchg
pop
dec
imul
xchg
push
jmp
xor
add
jne
nop
mov
popf
test
or
fnsave
inc
es
or
cltd
or
and
divl
std
in
into
repz
pop
sub
push
in
es
mov
push
in
loope
cmpb
fisttps
pop
test
add
xchg
adc
sarb
add
repnz
push
repnz
cs
jne
mov
jnp
lods
imul
dec
jl
sbb
push
dec
mov
inc
test
pusha
mov
cwtl
xor
sahf
add
cltd
mov
xchg
mov
mov
data16
popf
xchg
cmpsb
xor
xchg
iret
mov
inc
mov
mov
repnz
sbb
jmp
jle
dec
sbb
add
mov
enter
shll
and
sahf
stc
mov
repz
mov
xchg
cmp
lds
bswap
call
jns
imul
sahf
pusha
sti
add
jle
mov
lret
aaa
imull
pushf
and
enter
aaa
push
iret
outsl
mov
cmp
aas
inc
or
daa
cmp
xchg
dec
movsl
pop
cli
lret
nop
dec
dec
xor
mov
aaa
outsb
mov
addl
cmp
test
add
mov
fiaddl
cmp
mov
aas
inc
dec
scas
dec
in
cmp
ret
scas
mov
inc
fcompl
nop
hlt
mov
ss
and
aaa
outsl
mov
roll
scas
fcomip
inc
jmp
adc
out
or
cld
cmpsl
fmul
cmp
jmp
push
mov
andb
xor
stc
lcall
mov
lock
in
addl
mov
fidivl
add
mov
inc
adc
lahf
cmpsb
mov
in
jmp
pop
xchg
insb
loope,pt
add
dec
in
mov
daa
movsl
jb
push
icebp
pop
or
fsts
dec
imul
or
roll
pop
data16
pop
pushf
pop
mov
xchg
scas
mov
arpl
movd
popa
mov
sbb
add
scas
loope
cli
les
outsl
daa
cmp
add
test
pop
sbb
out
sbb
ljmp
pop
aam
mov
cwtl
cld
xchg
lcall
xchg
push
outsl
pop
or
nop
sti
dec
clc
dec
dec
jmp
mov
jmp
outsb
scas
dec
sti
outsb
push
jmp
fwait
popf
mov
add
fbstp
cmp
sub
add
imul
adc
lds
mov
sbb
ja
or
adc
das
mov
insl
xor
pop
mov
fs
repnz
or
and
stos
push
sbb
dec
int3
cmp
xchg
mov
mov
dec
stos
dec
hlt
xchg
push
dec
orb
movsb
test
mov
sub
loope
pop
xor
dec
loopne
addr16
cmp
iret
cmp
popa
repz
xchg
xchg
lcall
div
mov
mov
in
je
das
outsl
add
ja
pop
sub
inc
push
sti
mov
push
cmpsl
cmc
into
lahf
les
int
xorb
push
imul
xchg
mov
xchg
sbb
jp
jmp
mov
mov
add
and
cli
or
jmp
and
xchg
fists
mov
aas
add
jecxz
icebp
xor
mov
into
aas
pop
xchg
cld
jl
das
adc
add
xor
sbb
pop
mov
or
jae
dec
negb
mov
mov
and
xor
jns
sbb
daa
data16
xchg
cmp
shll
pop
rclb
cmp
out
callw
inc
jo
or
xchg
test
scas
mov
xchg
xor
mov
push
push
imul
fnstenv
mov
add
mov
mov
mov
add
mov
test
iret
addr16
loop
xor
lods
cmpl
imul
hlt
call
pop
add
pop
jmp
fsubrs
jp
push
xor
popa
sarb
pop
ds
aaa
lds
shr
inc
and
push
pop
hlt
xor
inc
xlat
outsl
jg
out
pop
into
int
into
push
incl
std
cmpsb
shll
mov
jae
adc
push
inc
ret
and
jnp
lret
fsubrs
or
enter
mov
call
sbb
call
mov
xor
push
push
out
shrl
sbb
sti
or
cwtl
enter
divb
cmc
ds
dec
inc
and
imul
mov
rorb
mov
jnp
xchg
add
xchg
into
lods
or
fisubl
iret
xor
std
lret
push
cmp
mov
scas
out
mov
jp
ljmp
lock
sub
xchg
cmp
ds
mov
test
rolb
cmp
not
mov
cmpsl
mov
adc
push
cwtl
push
ja
mov
or
lock
test
notb
sub
xchg
fsubrl
loopne
sahf
dec
orl
and
into
into
les
cmp
jae
data16
fld
mov
int
arpl
dec
cmp
rcll
inc
xchg
jne
mov
mov
jg
jne
icebp
push
lock
mov
fdivl
or
pop
lock
enter
add
mov
jne
fwait
push
jns
pop
add
push
jge
aas
dec
into
xchg
fwait
mov
dec
ficoms
mov
dec
mov
lods
stos
add
mov
enter
subl
mov
mov
rorb
push
test
pushf
xchg
inc
insb
sti
pop
pop
xchg
aam
fiaddl
pop
movsb
scas
cs
sub
sbb
mov
ret
out
pause
out
sbb
or
and
cld
loop
mov
pop
xor
ds
shrl
es
sub
lea
lret
iret
outsb
cmp
rcrl
ret
mov
repz
in
cmp
in
aad
push
cwtl
popf
test
and
sarb
sub
scas
push
jne
pop
cld
sub
icebp
push
sub
xor
mov
jnp
or
xchg
addr16
sub
in
cmp
daa
mov
pop
inc
or
out
in
mov
xchg
loope
or
xor
mov
daa
das
into
fimull
int
pop
dec
fisttpll
cmp
push
jg
std
xchg
sahf
popa
data16
leave
cli
or
out
insb
sbb
es
lahf
fldl
and
leave
xor
lods
inc
ret
scas
stc
adc
and
dec
jbe
jmp
leave
cmp
dec
rcrl
pop
call
outsl
lea
fstl
inc
mov
sbb
jl
out
dec
and
xor
push
test
push
push
insb
mov
in
jle
arpl
or
cmp
mov
cmp
inc
push
push
out
xor
push
xchg
fisubl
and
mov
push
xor
insl
insb
pop
sbb
mov
in
sub
cli
push
daa
dec
xchg
loop
inc
or
hlt
xor
push
les
out
ret
lock
in
stc
sahf
in
in
fildll
mov
ret
orl
sbb
xchg
pop
test
mov
jl
push
lahf
sub
or
mov
rcrl
and
arpl
mov
add
fisubrs
out
jl
mov
mov
and
mov
fcompl
push
out
leave
or
je
clc
jg
or
imul
scas
sbb
gs
pop
mov
sbb
movsb
xchg
add
inc
ja
xchg
cs
enter
mov
ss
sbb
pop
mov
cld
std
or
mov
and
jl
ljmp
out
mov
out
lock
loopne
sub
pop
jmp
pop
adc
arpl
xchg
pop
sbb
fucom
adc
dec
stos
popf
fsubrs
dec
sti
fadds
ds
mov
xchg
cmp
push
in
push
sahf
ljmp
movsl
push
cmp
pop
add
add
push
cmpsl
test
sarl
mov
aas
xor
inc
xchg
into
or
enter
rol
xchg
idivb
orl
sbb
sbb
adc
in
sub
push
bound
mov
mov
mov
punpckldq
cltd
cld
lock
dec
out
dec
and
js
push
int
movsl
fwait
or
sub
sahf
jecxz
cmp
mov
mov
inc
pusha
ja
mov
lods
adcl
mov
stos
rclb
movsl
and
ret
jecxz
mov
sbb
arpl
sub
or
xor
cltd
enter
or
fdivrl
dec
and
adc
mov
in
cmc
xchg
inc
sub
push
pop
inc
or
pop
xchg
stos
mov
idivb
add
push
fidivrl
into
pop
adc
loop
mov
aaa
aaa
lods
and
mov
aam
test
add
testl
pusha
out
int
jmp
inc
push
or
bound
mov
test
js
push
push
rorb
loop
mov
jl
ss
inc
mov
mov
and
test
mov
das
lea
mov
mov
sbbb
sbb
cwtl
shll
lret
adc
push
inc
stos
dec
fistpll
or
inc
sbbl
stos
push
cmpb
dec
jae
les
lods
pop
data16
ss
mov
inc
and
cmp
mov
or
sbb
cwtl
pop
mov
loope
jns
pop
jle
ret
sbb
and
xchg
test
jge
int
ret
or
andl
push
nop
xor
jo
mov
xor
loope
pop
sahf
mov
mov
push
repnz
and
addb
call
fiaddl
int3
repnz
and
rclb
bndldx
jle
movb
mull
ret
xlat
subl
cwtl
jnp
sbb
xor
test
or
out
dec
xor
lods
pop
hlt
jl
xor
push
jle
out
lret
pop
cmp
add
push
push
ret
push
scas
xchg
mov
mov
dec
sbb
push
clc
outsb
pop
and
arpl
push
addr16
push
add
repnz
scas
xchg
xchg
je
pop
add
lcall
iret
test
not
cmpsb
arpl
mov
add
lea
add
in
push
sub
out
jae
stos
std
sbb
push
fnop
pushf
sub
or
pop
mov
pop
xchg
sub
movsl
dec
out
js
test
xor
and
sub
sub
inc
jns
add
cmc
mov
icebp
outsl
xchg
mov
stos
in
pop
stos
rcr
icebp
cmpb
dec
aad
add
mov
mov
pop
push
jae
adc
in
adc
jg
push
mov
rcll
mov
inc
push
cmp
xchg
aad
sahf
call
pop
testl
movsb
out
sub
aad
loop
dec
fwait
lea
aad
cmp
out
insl
jp
out
ret
sub
dec
mov
xchg
push
cltd
mov
and
mov
dec
xchg
xor
add
xchg
adc
sbb
mov
sbb
pushf
push
push
cmp
push
pop
inc
sahf
fwait
gs
pop
inc
inc
xchg
xor
sahf
mov
jg
aam
rcl
out
lods
xchg
pop
inc
jns
cltd
dec
xchg
cmp
add
int
daa
mov
ds
inc
hlt
and
mov
pop
mov
sti
inc
div
jno
popf
pop
cmp
push
fmuls
mov
into
cmp
cmp
fwait
pop
and
mov
pop
and
mov
scas
out
lret
cmpsl
sbb
sbb
sbb
mov
jg
push
push
mov
and
xchg
xor
jo
fcom
jbe
sub
dec
cli
push
test
arpl
sub
lods
or
xor
sbb
fisttps
cli
inc
mov
bound
sbb
bound
jl
cs
cltd
add
ds
orl
jp
cmpb
daa
shrb
cmpsl
jg
jp
sahf
aam
sbb
test
sbb
movsb
inc
mov
es
push
push
jb
into
mov
push
mov
stos
iret
push
xor
adc
dec
in
loop
xchg
repz
xlat
xor
add
les
ficoms
mov
add
jno
jno
mov
mov
popf
mov
imul
xchg
adc
popf
negl
sbb
aaa
xchg
adc
xor
lea
fwait
add
into
push
test
iret
decb
rcrb
add
test
cmp
rcrl
ret
push
sbb
call
adc
and
inc
xor
add
mov
leave
xchg
inc
pop
daa
sarl
iret
push
insb
inc
les
xchg
adc
mov
mov
cli
jo
outsb
mov
pop
and
push
lret
dec
lret
xchg
dec
outsl
xor
sbb
das
and
jecxz
fisubl
out
jae
in
xor
add
pop
fistps
push
test
and
notb
dec
outsl
push
add
jg
xor
mov
cmpsl
bnd
cltd
or
lds
inc
xor
mov
int3
out
xchg
enter
xor
rcrb
push
movsl
out
push
iret
enter
inc
lods
in
rolb
js
pop
and
sbb
in
xchg
push
add
pop
seto
call
fwait
shll
mov
push
mov
popa
push
sub
mov
jno
subl
fstpt
xchg
outsl
fnstsw
rolb
aaa
in
dec
sbbl
out
mov
mov
leave
out
lods
cmp
add
adcb
add
xor
inc
mov
push
fistl
cwtl
dec
or
sub
inc
stos
fwait
mov
iret
fiaddl
push
push
pop
setge
cmp
mov
mov
push
shlb
mov
xchg
pop
call
jecxz
sub
jp
popa
test
insb
sub
lahf
das
out
fisttpll
cmpsb
sub
mov
mov
mov
mov
mov
test
stos
and
and
inc
jns
xor
jl
fwait
scas
mov
out
enter
cmc
or
pop
mov
jmp
sbb
icebp
xor
sbb
fisubrl
adc
jae
nop
out
pop
jg
and
push
inc
jmp
lret
enter
lock
dec
imul
mov
mov
sub
sbb
int3
mov
aam
and
mov
adc
sub
rcrb
mov
stos
dec
movsl
movsb
push
test
inc
push
pop
inc
notl
ja
insb
jl
lret
sub
mov
iret
push
ja
inc
movsb
sbb
fwait
andb
sti
dec
jno
daa
push
mov
movsb
jns
cmpsb
push
stc
or
pop
xchg
dec
mov
adc
jne
xchg
cmp
adc
je
inc
pusha
adc
adc
maxps
mov
std
dec
faddl
stos
cmp
inc
mov
in
lods
pop
sub
mov
in
mov
xchg
mov
sbb
dec
inc
adc
jg
test
xor
jmp
mov
addl
xor
and
ror
push
adc
mov
popa
fwait
xor
repz
or
pop
and
popa
push
scas
ficompl
push
inc
xor
and
cmp
push
call
dec
outsl
cwtl
sub
aam
iret
xlat
inc
inc
mov
push
or
cltd
mov
mov
inc
lea
loope
mov
in
jmp
mov
outsl
movsb
test
mov
push
cmc
ret
sbb
pop
sub
imul
into
mov
ss
sub
iret
push
sbb
sub
adc
cmpsl
mov
mov
pop
cld
and
fildll
jns
push
int3
cmp
repz
in
push
xor
sbb
out
call
or
add
cmp
pop
and
jmp
enter
cld
clc
sahf
or
push
jmp
mov
cmp
outsl
cmpsl
mov
cmp
aas
in
push
jp
cmc
push
gs
test
fs
and
clc
dec
data16
push
jg
add
cmp
mov
jl
push
gs
aam
sub
jns
add
push
jecxz
mov
sti
int3
rolb
jnp
jle
and
xchg
aaa
mov
shll
aaa
cwtl
outsl
daa
xchg
xchg
popf
aaa
arpl
pop
jp
inc
movsb
adc
int3
jmp
outsb
xorl
inc
inc
imulb
cmp
xor
imul
jp
push
mov
mov
mov
insl
inc
cmp
stos
mov
xor
jnp
cmp
sub
pop
jg
cmpsl
roll
mov
add
dec
jp
lea
ljmp
add
mov
imulb
add
fildl
inc
mov
pop
mulb
xchg
bound
add
rolb
pushf
aas
pop
add
jmp
out
xor
adc
push
test
test
and
fs
divb
fwait
lods
cwtl
cmpsl
cwtl
push
test
adc
pop
adc
adc
sbb
mov
push
lods
push
inc
sbb
mov
add
decb
stos
adc
adc
cmp
std
mov
push
adc
mov
xchg
pop
outsl
xor
cmp
jae
mov
add
fs
fisubrs
xchg
adc
lcall
neg
pop
push
insl
repnz
sti
jne
xlat
add
ret
js
jle
imul
pushl
sub
loope
addr16
mov
pop
mov
call
nop
aad
outsl
sbb
add
adc
imul
and
test
push
cmp
fnstcw
pop
mov
mov
sub
cmpsb
es
in
and
cmpsl
cli
dec
and
loop
in
add
push
cmp
ss
mov
arpl
adc
ljmp
data16
outsb
loopne
add
adc
sub
mov
add
adc
js
jnp
dec
jge
les
fisubs
mov
add
sbb
mov
mov
jo
or
arpl
ror
mov
pop
xor
jecxz
dec
out
xchg
jge
mov
movsl
pop
mov
cs
inc
pop
jbe
push
rclb
push
push
dec
lea
daa
nop
faddp
xchg
shlb
in
fstpl
and
out
cmp
ss
jp
scas
sti
daa
and
jl
mov
fs
popa
jle
mov
push
pop
pop
mov
js
aad
xor
mov
aaa
cmp
ss
push
dec
sti
sub
sub
fdivs
pop
adc
test
add
xor
lods
pop
bound
cmp
flds
lods
jl
je
test
idivb
cld
rclb
jno
mov
ljmp
mov
subb
hlt
icebp
jo
push
cwtl
push
cmp
dec
jb
clc
into
pop
jne
adc
dec
or
mov
idivl
sub
aad
inc
or
jb
mov
mov
mov
inc
push
das
movsl
popf
pop
sbb
mov
fldenv
jmp
dec
lods
push
pop
test
fsts
pop
cmp
mov
and
iret
mov
mov
cltd
pop
out
into
outsb
lock
jp
inc
lds
cmpsl
arpl
ffree
lods
xor
scas
orb
les
xlat
xor
pop
jg
xchg
shll
imul
push
loope
stos
jp
mov
mov
pop
inc
int
cmp
mov
outsb
rclb
mov
fs
insb
or
and
and
and
mov
in
xchg
repnz
vmread
fwait
pop
sub
scas
mov
pop
bound
or
sub
push
xor
inc
lret
pop
dec
aad
push
ror
pop
mov
mov
mov
mov
test
mov
cmp
xor
lds
fistpl
movsl
or
pop
mov
pop
imul
push
xor
push
sahf
push
data16
sbb
dec
adc
cmp
ret
pop
sub
call
adc
cmp
ljmp
lods
fstl
adc
dec
mov
push
xchg
push
loopne
push
insb
push
movsb
and
fisttps
inc
push
int3
fsubl
dec
adc
add
mov
fcmovu
adc
cmp
mov
ss
fcoms
mov
xchg
jo
and
test
inc
imul
jo
and
lds
addr16
xchg
cmc
icebp
mov
push
imul
mov
loop
jle
ret
add
cmpsl
cmp
mov
lods
mov
pop
jmp
add
js
outsl
fwait
jge
and
and
fisubrs
mov
pushf
ror
mov
fmull
push
sub
jno
addr16
mov
pusha
lret
jmp
insb
sbb
xor
std
je
jno
ds
insb
test
or
and
imul
dec
add
ret
js
lods
adc
jle
je
ficoms
adcl
jne
mov
push
daa
xor
gs
das
bound
aam
rcl
repz
inc
cwtl
or
pop
jne
mov
je
xor
or
mov
sub
test
and
mov
push
xchg
inc
sbb
mov
xchg
add
out
inc
lahf
push
fbld
sub
sbb
loop
dec
jge
adc
cmp
les
jbe
or
mov
sahf
ja
lret
ljmp
hlt
movsl
rcr
les
pop
mov
inc
dec
push
arpl
xlat
push
subl
lret
pop
jb
and
rorb
push
xchg
lock
push
dec
pushf
sbb
sbb
ficoml
ljmp
lock
lods
jne
popf
fcompl
xchg
int
mov
cwtl
or
or
loop
xchg
cltd
nop
inc
aad
enter
fs
or
daa
push
ds
dec
xchg
out
pop
loop
roll
jae
fsub
cmp
in
test
pop
mov
jmp
aaa
insl
and
and
je
add
pop
lret
roll
mov
test
fnstcw
jmp
xchg
adc
clc
ljmp
js
jmp
inc
inc
lea
in
xor
hlt
mov
xorl
sub
push
sbb
mov
addb
and
cltd
call
add
je
inc
push
jne
xlat
std
lret
sbb
leave
shlb
inc
fbld
xchg
test
nop
xchg
mov
mov
mov
into
psrlq
stos
lods
mov
push
cmp
sub
inc
aam
pusha
test
arpl
add
test
in
gs
pop
scas
cmp
xchg
lea
enter
mov
or
mov
push
dec
pop
mov
sti
jbe
xorb
rcll
mov
in
das
pop
push
daa
dec
dec
jge
mov
pop
test
jmp
lods
mov
gs
ficoms
out
enter
adc
and
pop
dec
cs
fsts
mov
ss
mov
xchg
add
fs
pop
mov
add
sahf
and
add
aad
push
push
lds
mov
mov
inc
xchg
cltd
cwtl
mov
sub
push
out
repnz
les
sub
scas
xor
hlt
idivb
bound
in
imul
std
dec
xchg
xor
bound
cmc
add
rorl
aam
xchg
cmp
mov
mov
adc
jb
into
out
cmc
sub
push
mov
imul
je
nop
jae
push
push
jns
push
push
dec
fdivl
repz
fcoml
cmp
test
mov
mov
push
cmp
testb
enter
push
orl
shl
stos
gs
popf
enter
fwait
jmp
add
notl
pavgw
xorl
dec
pop
mov
cmp
out
lds
sub
ljmp
sarl
push
pop
lcall
std
scas
inc
dec
sub
faddl
loopne
pop
icebp
xchg
ds
sbb
and
mov
rorb
fldl
adc
mov
test
cmp
add
mov
in
mov
jge
inc
insb
xor
xchg
mov
push
jmp
fst
mov
push
or
xor
lods
cmp
jle
dec
fcoml
call
popf
stc
xchg
shll
data16
sbb
sbb
in
shlb
fbld
push
mov
mov
and
stc
xor
rcrl
lret
jle
lods
xchg
and
das
std
cmpsb
pop
and
cmp
iret
dec
push
sub
insl
sti
outsb
aad
sti
mov
mov
rclb
add
aas
out
push
ds
shrl
fwait
pop
dec
pop
add
data16
sete
int
and
iret
stc
jp
scas
mov
pop
cltd
std
pop
sbb
and
adc
inc
xchg
push
and
aad
jne
in
sbb
jp
in
loope
aas
xor
lcall
stos
js
sbb
out
cmp
jl
fcmovnb
xchg
mov
rolb
add
fsts
test
sub
out
push
jne
mov
pop
mov
cld
and
ljmp
push
push
fsts
fisubrs
xlat
jle
push
repz
shlb
je
iret
notrack
mov
cmpsb
mov
fucom
jle
xchg
aam
rcl
adc
jp
mov
push
js
aad
dec
and
lds
fdivrs
cld
xchg
add
dec
adc
mov
or
push
aam
fiaddl
inc
mov
mov
jg
pop
mov
pop
adc
popa
ss
pop
int
dec
or
outsl
xchg
cmpl
inc
pop
loopne
push
and
sub
or
jne
xor
push
push
test
mov
or
jnp
sbb
mov
pop
in
pop
jnp
or
test
cmc
jbe
out
movsl
std
orl
dec
sbb
test
mov
into
inc
mov
sbb
js
jle
in
or
mov
jnp
cs
iret
and
cli
icebp
push
and
dec
add
stc
sub
mov
push
stos
and
shll
add
shrb
and
in
cmp
decb
pop
out
hlt
dec
dec
jns
fmull
es
lret
sub
repnz
mov
xchg
jns
push
xchg
imul
adc
std
xchg
mov
faddp
aam
cmp
push
shll
push
cmpsb
gs
popa
int
popa
test
test
or
lcall
ret
push
push
ficompl
sub
aam
fstpt
adc
mov
lret
xchg
or
pop
xor
hlt
cmpsb
adc
xor
jecxz
mov
mov
xchg
xor
js
fcmovbe
adc
aad
scas
mov
lea
loop
xchg
push
xor
push
into
out
xor
insl
fwait
dec
int
pushf
lahf
mov
pop
lods
je
xor
inc
or
fwait
hlt
or
ror
cmp
or
cld
in
jmp
addl
test
in
adc
pop
sbb
xchg
lods
ss
push
inc
dec
xchg
das
ror
lret
test
lret
hlt
jnp
adc
shr
fwait
jle
pushf
aam
jp
jl
arpl
shl
inc
movsb
leave
test
lret
mov
xchg
jbe
ret
push
js
unpcklps
pop
in
stos
cmp
mov
sbb
cmp
inc
cmpsb
cli
dec
xchg
int
movsl
cmp
rorl
imul
repnz
sbb
xchg
push
loope
sub
cmc
insb
ja
fnstcw
sahf
sub
rol
and
aaa
addr16
jge
out
add
mov
in
clc
movsb
cwtl
test
add
cli
cmp
dec
sub
cmp
rclb
std
pop
add
jae
jo
ljmp
add
jns
fwait
out
js
repnz
ja
adcb
sub
nop
test
clc
mov
mov
fnstsw
sbbl
out
andl
dec
mov
dec
lret
and
sarl
xor
push
ss
inc
cmp
mov
sti
insb
pop
push
aaa
fdivrl
scas
dec
jbe
movsb
inc
push
test
mov
and
xchg
pop
popa
or
sahf
jp
adcl
lods
int3
push
ret
mov
movsl
fwait
mov
jo
sbb
inc
jmp
adc
adc
outsb
movsb
aam
xor
push
ds
sub
mov
mov
jo
and
add
xchg
jae
mov
adc
push
andl
jp
cmpsb
jae
loopne
addr16
xor
orl
add
sbb
movsb
ja
filds
xchg
sub
push
fs
jle
inc
push
test
stos
filds
jno
data16
fistps
sbb
insb
cld
rcr
jo
pop
sti
nop
in
clc
sbb
xchg
sbb
mov
cltd
mov
inc
jle
push
lods
scas
add
cli
mov
mov
pop
jb
sbb
in
inc
mov
xchg
clc
repnz
push
add
dec
adc
add
pop
adc
scas
in
jg
mov
jbe
mov
mov
mov
seto
dec
iret
out
mov
jecxz
iret
mov
mov
dec
inc
dec
leave
out
es
mov
xchg
fwait
out
imul
cmpsb
testb
addr16
mov
pop
mov
xor
fs
pop
adc
in
push
or
je
cmpb
jge
sub
dec
and
jo
jg
fadds
test
jnp
jmp
push
addl
cli
loopne
xchg
cmpsl
in
inc
repz
xor
fs
and
xlat
les
or
lahf
testl
fwait
lcall
out
cmp
or
cmpsb
adc
adc
pop
movsb
cmpsb
mov
pop
movsb
xchg
jnp
inc
jge
push
loope
mov
inc
loope
cmp
add
test
stos
cmp
test
call
push
push
mov
mov
jae
cld
lods
enter
xor
pusha
dec
push
pop
inc
adc
mov
pop
pop
mov
adc
xchg
lea
adc
or
fwait
xor
inc
inc
and
sbb
rol
adc
or
push
inc
bound
pushf
mov
mov
cwtl
mov
cmp
pusha
xchg
jg
pop
xchg
push
jle
bound
dec
adc
scas
lret
cmp
cltd
or
insl
sub
sahf
mov
arpl
push
inc
adc
in
pop
lret
mov
add
out
push
adc
pop
lcall
pop
or
pop
sbb
fwait
xchg
aaa
mov
mov
inc
and
sbb
lods
fdivs
jnp
jb
xchg
and
jne
xchg
repz
pop
push
shlb
dec
sub
and
out
xchg
mov
fisubl
mov
nop
mov
or
inc
mov
loopne
and
mov
sti
pop
sbb
dec
pusha
pop
lds
sub
push
jae
inc
test
cmp
mov
inc
aaa
mov
xchg
mov
in
std
push
shr
sar
cwtl
adc
outsb
stc
into
xchg
stos
mov
ret
pop
sbb
repz
gs
fdivl
dec
mov
mov
mov
fiaddl
adc
add
xchg
test
pop
cltd
not
divl
stos
jb
dec
cli
mov
fldl
pop
xchg
mov
sti
test
jp
jp
adc
mov
in
xchg
dec
and
repnz
xchg
bound
jmp
xor
into
int
test
je
and
jmp
notl
xchg
add
and
push
and
cmp
and
mov
cmpsl
cmp
xchg
jp
sub
push
dec
xlat
push
cmp
pop
out
repz
sub
and
adcl
outsb
out
sbb
mov
pop
std
pusha
fildl
inc
and
in
add
jo
mov
mov
cmp
bound
out
pop
dec
pop
sub
push
cltd
les
xchg
test
in
or
and
sbb
std
in
movb
inc
repnz
iret
imul
push
cmpsl
pop
pop
push
pop
cltd
inc
pusha
lods
test
pushf
jnp
shll
dec
pop
xchg
sbb
jae
mov
ss
iret
je
enter
pop
xor
imul
mov
and
sbb
mov
fcompl
pop
jnp
mov
imul
lcall
inc
inc
push
movsl
xchg
pusha
push
jne
nop
int
repnz
into
lcall
mov
hlt
popa
std
xor
mov
repnz
unpckhps
rcl
pop
mov
sbb
shrb
loop
in
inc
add
or
popa
stc
adc
xor
push
pop
mov
pop
mov
fstpt
loop
push
xchg
or
sub
adc
inc
mov
xchg
cmpsb
setg
div
pop
into
test
adc
aas
inc
hlt
sti
jb
fidivrs
popf
sarb
imul
lods
sti
dec
mov
or
loopne
cmp
pop
insb
jae
pop
sti
jmp
out
popa
inc
mov
dec
dec
mov
fwait
cli
or
sub
add
js
push
mov
mov
cltd
xor
jl
fildl
sti
popa
dec
loope
cwtl
insb
aam
mov
call
idiv
les
fwait
pusha
cwtl
xchg
movsl
sbb
pop
pop
pusha
mov
in
jb
inc
and
jp
mov
push
shll
int
dec
push
dec
into
xlat
xor
out
xor
cmp
jo
popl
fimuls
inc
shlb
mov
bound
mov
cwtl
out
add
lea
popa
xor
xchg
jl
lock
mov
xor
lock
or
jge
arpl
pop
insb
xor
pop
dec
lods
rol
push
stos
mov
jg
push
adc
std
mov
push
and
iret
pop
and
ds
mov
cli
lea
or
and
loopne
sub
and
leave
push
mov
enter
insl
sbb
sub
mov
test
dec
push
in
leave
das
xor
dec
cmp
int3
jae
arpl
mov
fidivl
cltd
loop
dec
adc
jmp
adc
jae
jl
mov
cli
dec
mov
enter
sub
ljmp
in
movb
sbb
int3
adcl
inc
jbe
jg
or
xchg
mov
cmpsb
pop
push
out
icebp
ljmp
addr16
loopne
mov
mov
mov
inc
sbb
jno
int
sahf
inc
notb
cld
or
mov
pop
bound
jns
inc
lret
cmpsb
test
repz
dec
mov
lret
and
ret
push
in
push
push
push
push
cld
cmp
sti
test
pop
mov
lods
rol
jb
insb
stos
and
cld
imul
xchg
pusha
movsb
xor
xor
fcomi
mov
bound
cld
es
push
pop
in
outsl
iret
add
jae
fisubrs
xor
push
mov
inc
push
mov
lret
jb
push
or
fwait
pop
pusha
mov
cmp
inc
lret
dec
adc
push
repz
aam
scas
inc
jge
loop
jbe
push
jp
jne
mov
add
jb
mov
mov
ljmp
shll
mov
add
xchg
repnz
xchg
add
cmpsl
xor
lock
mov
cmp
xor
add
mov
popf
jbe
xchg
cmc
jno
mov
inc
cwtl
loop
leave
inc
mov
sub
or
adc
inc
mov
add
and
dec
mov
and
stc
pop
inc
stos
mov
cmp
lock
out
pop
fidivs
inc
pushf
stos
mov
aam
cmp
pmaxsw
stos
xor
mov
mov
lret
lds
imull
cmp
pop
dec
pop
int
icebp
jns
je
cmp
jecxz
test
js
mov
push
mov
lds
loopne
dec
add
jae
rolb
jl
xchg
insb
mov
xchg
inc
pop
adc
cmp
or
ds
dec
fwait
lods
inc
cwtl
mov
pop
in
loope
jmp
insb
fwait
mov
es
or
mov
mov
mov
cltd
hlt
ficompl
arpl
push
test
and
mov
insl
out
clc
icebp
fimull
imul
sub
cmp
jne
movsl
icebp
ja
loope
out
decb
movsb
sub
loope
adc
mov
push
jg
shrl
jmp
movl
or
push
lods
push
xor
add
insb
mov
pusha
push
int
jl
jae
outsb
outsb
jnp
mov
jle
stc
pop
enter
adc
lcall
mov
hlt
loope
hlt
pushf
mov
add
and
mov
mov
out
fbstp
mov
adc
xchg
dec
xor
addr16
xor
lods
movsl
sbb
lds
xchg
sub
fsubl
mov
xchg
aam
cmp
ss
jp
test
dec
subl
add
sub
je
add
mov
push
or
fcoms
lods
adc
shll
sbb
mov
subb
lcall
dec
mov
mov
imul
adc
add
pop
scas
add
cmp
jnp
lock
outsl
xchg
test
mov
xchg
push
add
fistl
xchg
add
and
xlat
icebp
or
fdivrl
inc
adc
lea
sub
or
mov
jge
push
loopne
xor
cmpl
sbb
pop
cmp
mov
stc
fcompl
pop
movsl
dec
dec
bound
mov
lea
sbb
in
in
and
outsb
inc
notl
addr16
mov
lock
dec
pop
xor
push
cmpsb
enter
popl
or
mov
push
sbbb
cmp
ret
sahf
les
mov
or
pop
clc
call
mov
mov
adc
push
mov
jb
cmp
adc
stc
out
ds
cmpb
psubd
aaa
xchg
mov
fmull
ja
les
push
adc
mov
cli
out
dec
aas
in
iret
pushf
cli
jbe
fisubs
add
add
gs
xchg
inc
and
add
pop
shl
outsl
aaa
imul
cmp
or
sbb
repz
cmp
ss
jnp
repz
xchg
stos
add
inc
pop
shlb
jae
je
cmp
repnz
in
test
push
mov
cmpsb
pushf
idiv
xlat
lret
call
pop
lcall
ss
out
xchg
cmpsb
push
stc
mov
lods
jnp
fwait
push
jb
jbe
lret
jp
test
inc
movsl
imul
outsl
mov
mov
mov
mov
imul
cmpsl
xchg
mov
test
jb
ficompl
jmp
stc
inc
call
pop
add
addb
adcl
cmp
lds
cmpsl
call
sub
cltd
rorb
jno
mov
sub
and
data16
std
add
and
add
sbb
in
pusha
out
cmp
lret
sbb
or
xorl
adc
jp
fnstsw
cmc
add
push
mov
call
subb
std
jmp
data16
js
je
sarb
adc
jns
out
fisubrs
push
pop
mov
cmp
mov
pusha
ret
mov
mov
js
jge
pusha
scas
scas
pop
sarb
mov
imul
xor
push
and
jge
lods
loopne
sub
ja
jle
pop
mov
push
loop
mov
mov
jne
jg
rcll
std
into
pusha
popa
pop
adc
outsb
into
jp
push
push
cmpsb
dec
cli
mov
es
mov
lds
das
and
cmp
adc
icebp
dec
push
iret
in
outsb
mov
sub
in
add
insb
mov
dec
in
sub
lods
mov
mov
pushf
call
notb
call
cwtl
jmp
test
ret
sub
loopne
or
pop
iret
adc
push
enter
xchg
nop
js
ret
inc
mov
xchg
test
pop
int3
sbb
jecxz
dec
test
clc
mov
stc
mulb
test
sbb
loope
dec
aas
cmp
ret
cmc
inc
out
es
mov
movsl
stc
in
pop
push
daa
pop
pop
bound
and
clc
xor
mov
or
stos
movsl
add
pop
push
dec
scas
sti
mov
fimuls
cli
out
xchg
fistl
jbe
mov
loope
mov
cmp
adc
pop
push
mov
xchg
outsb
imul
and
add
xor
pop
ds
dec
push
fsubp
mov
and
sti
int3
pop
jg
sbb
cwtl
push
or
lock
add
push
stc
xor
in
test
lret
ffree
mov
jge,pt
cmp
inc
pop
and
cmp
cltd
imul
adc
inc
imul
mov
mov
js
sbb
xchg
and
rclb
andl
adc
cmp
aam
jg
fstl
insl
ret
mov
mull
adc
arpl
in
mov
fsub
outsl
icebp
ret
mov
pop
and
xchg
dec
mov
jb
stos
and
cmp
push
mov
divl
mov
pop
cmp
mov
push
stos
mov
fsubr
fadds
test
pusha
jmp
imul
mov
cmovge
jle
sbb
push
adc
mov
data16
xor
inc
daa
imul
shrb
mov
hlt
xor
sahf
xor
inc
xor
jle
mov
sub
dec
mov
and
adc
mov
cs
pop
and
int3
js
stos
sub
imul
push
sahf
and
mulb
jl
adc
inc
push
lret
pop
xchg
movsb
fwait
cmove
scas
xchg
cmp
popa
ror
inc
mov
fcomi
dec
add
outsl
dec
sub
xchg
add
mov
lahf
pop
enter
leavew
daa
sbb
sarl
sbb
mov
fnsave
mov
pop
dec
mov
arpl
adc
repz
mov
or
mov
clc
mov
cmp
pop
lret
xchg
jne
mov
das
test
jbe
or
dec
aas
and
sbb
dec
mov
lret
fdivrs
aas
jecxz
mov
xchg
std
rcll
out
mov
and
ss
mov
fdivrs
push
sti
cmc
popa
jle
test
outsl
insb
fimuls
mov
sub
aad
inc
cmp
and
mov
and
std
push
stos
fwait
xchg
or
leave
rolb
je
in
or
rol
popf
jnp
xchg
stos
jmp
jge
mov
fdivrs
push
sti
pop
adc
aam
mov
xchg
mov
pop
mov
adc
aaa
lods
ficoms
shll
insb
gs
negb
sub
leave
jle
imul
jmp
imul
sbb
das
jl
fistpl
cltd
push
pop
pop
pop
push
fidivrs
clc
pop
sub
adc
mov
pop
push
addr16
sbb
cmp
rcrb
gs
cmpsl
sub
xor
sub
fwait
bound
loopne
pop
jnp
mov
das
imul
mov
cmp
jo
repz
xlat
sub
cmp
jns
fmul
pop
push
or
sub
cmp
mov
out
or
dec
pop
push
repnz
or
fldl
daa
xchg
dec
outsl
int3
mov
push
test
mov
jnp
lock
pop
repz
inc
mov
hlt
inc
xlat
xor
repnz
outsl
inc
mov
inc
es
outsb
fs
or
movsl
inc
mov
xor
sbb
pushf
into
and
and
push
orw
imul
cmpsl
bound
lock
push
roll
mov
jecxz
add
shr
add
stos
xor
aaa
adc
push
cmpl
pop
arpl
push
jp
insl
mov
mov
insb
dec
and
jns
cmp
and
insl
pusha
fcoml
loop
jno
scas
out
mov
push
dec
adc
pusha
or
xchg
add
xor
call
and
je
sbb
and
clc
and
insl
in
out
pop
mov
dec
std
push
rcrb
jns
push
inc
mov
jmp
icebp
mov
aad
loopne
mov
sub
pop
das
mov
jge
push
in
mov
push
imul
lods
fsts
lods
and
mov
lret
es
mov
jmp
mov
repnz
pop
mov
lds
cltd
jmp
lea
adc
or
daa
jne
mov
insl
gs
iret
add
xor
mov
ret
jle
stc
jg
mov
jl
loop
mov
and
push
rcrl
mov
scas
pop
xchg
dec
add
lds
dec
xchg
cwtl
fwait
cmp
movsb
xor
movsb
ficomps
jne
jae
push
fwait
bound
inc
lods
mov
ds
dec
mov
cwtl
movsb
and
gs
pop
jns
cs
cmp
fisubrs
ja
jbe
iret
out
cli
out
lock
and
inc
lock
mov
xchg
je
xchg
enter
jns
test
inc
repnz
rcl
sbb
or
imul
jb
cmpsb
fs
pop
and
mov
sbb
outsl
pop
inc
sahf
test
push
fcomps
xchg
mov
sub
push
in
pusha
sarl
lds
add
addr16
push
dec
dec
dec
in
sbb
rcr
int3
push
mov
loope
popf
rol
int3
or
cmp
aaa
push
xchg
cmc
mov
jns
mov
mov
cmp
loop
sbb
or
jmp
mov
scas
dec
xchg
adc
xchg
jg
or
mov
add
cmp
xor
pop
aad
bndstx
out
mov
pusha
das
fldl
ret
into
adc
push
sub
insb
imul
int3
sub
shlb
sbb
xorl
mov
test
and
add
aaa
lret
inc
and
or
dec
aaa
aad
mov
jle
imul
fcmovb
adc
pop
lock
dec
mov
add
adc
leave
in
sub
jno
sub
or
add
xchg
out
xchg
inc
enter
neg
dec
add
mov
andb
sub
aad
pop
push
jmp
in
mov
mov
push
fs
gs
leave
cltd
jb
loop
pop
icebp
push
icebp
mov
xor
addr16
fs
shl
push
cli
lea
or
ss
repz
je
push
jp
mov
cmp
in
test
push
push
mov
out
jns
and
sbb
lds
decl
repnz
int3
inc
mov
dec
pop
mov
imul
or
push
push
int
and
fisttps
and
sub
push
lcall
or
xor
jle
mov
xchg
push
cmpsl
mov
and
pushf
out
adc
ss
sbb
pop
jno
daa
dec
out
addr16
in
mov
or
aaa
sub
pop
les
fistpl
rcrb
pop
insb
adc
insl
pop
insb
stos
mov
mov
lods
icebp
xor
shll
icebp
jmp
mov
adc
and
nop
aaa
je
rclb
xchg
aaa
push
je
cltd
xchg
shll
dec
lock
in
jbe
movsl
xchg
fs
push
xor
mov
dec
jp
mov
mov
in
and
ja
mov
mov
cs
fldcw
sar
in
daa
and
test
sub
inc
sub
aas
add
aam
and
add
xor
pop
mov
andb
jl
jnp
cltd
iret
jp
ss
test
adc
sbb
jno
aas
xlat
and
insb
mov
xor
flds
pop
sub
xchg
dec
popa
mov
jb
push
jnp
inc
ds
insb
dec
sub
pusha
les
scas
mov
cmp
jg
call
ret
jle
sub
dec
pop
insl
addr16
lahf
fucomi
pop
pop
lea
push
fsts
dec
aaa
jp
out
sbb
inc
mov
gs
aaa
das
mov
dec
and
push
scas
test
lods
je
data16
pop
cltd
iret
neg
ja
add
int3
je
lds
jmp
outsb
fidivs
popf
div
sub
dec
mov
jge
mov
mov
xorl
xchg
xlat
cmpsl
fs
push
stc
enter
push
arpl
cmc
cmp
test
sub
ss
adc
sub
dec
mov
sub
adc
xchg
sti
out
popf
sbb
call
push
adc
xor
ds
lahf
rolb
dec
mov
in
xor
ret
mov
je
mov
mov
push
sbb
lods
pop
sbb
daa
fisttpll
std
adc
in
xor
push
outsl
ss
cmpsl
test
fwait
and
xor
cmp
jg
xor
inc
pop
jmp
jo
push
pop
pushf
push
in
sbb
mov
inc
mov
pop
sbb
es
or
fimuls
jnp
test
and
sbb
push
mov
jle
sbb
push
mov
or
mov
xor
adc
fists
outsb
xlat
icebp
int
mov
push
and
push
adc
call
and
out
mov
add
nop
rcrl
pop
add
ja
fmulp
inc
fwait
movsb
in
stos
dec
cmc
dec
mov
adc
jae
mov
push
or
fs
rorl
test
lods
push
fstpt
aaa
dec
adc
jno
pusha
jne
int
call
mov
fnsave
fwait
jecxz
repz
lock
cmp
and
mov
mov
dec
cld
aaa
cwtl
push
ja
mov
dec
inc
dec
fldl
sbb
orl
lods
imul
xchg
lods
cmp
jo
inc
mov
stos
mov
insl
bound
test
jmp
sub
cmpsb
loopne
pop
stos
add
lahf
ljmp
test
pop
das
cmp
lret
sub
fs
mov
cmc
repnz
cli
xchg
xchg
test
cli
loope
bound
outsl
mov
or
insl
mov
jo
stos
loopne
and
xor
hlt
mov
push
sbb
fidivl
ds
outsb
jns
dec
cli
xchg
sbb
movsb
and
mov
jg
cmpsb
xor
jmp
ds
sub
jle
je
and
mov
loopne
adc
ror
xchg
jbe
xor
nop
inc
enter
bound
sub
adcl
or
mov
aad
adc
les
pop
cmpsl
ss
sahf
mov
test
in
mov
lret
mov
xchg
imul
or
jl
lcall
or
or
cmp
daa
std
mov
inc
shll
push
jge
or
cmp
in
out
iret
xor
sub
test
mov
mov
enter
adc
clc
pop
mov
popa
fiadds
mov
dec
cmpsl
icebp
push
mov
mov
dec
test
xchg
scas
lods
push
cmpsl
sub
mov
push
enter
or
pop
mov
add
mov
dec
xor
pop
jg
insb
enter
sahf
adc
push
jo
enter
ds
jbe
popa
aas
adc
mov
mov
mov
jmp
or
lret
pop
test
mov
rorb
fcompl
ret
ss
rcll
sbbl
insl
adc
loop
or
mov
shll
inc
push
call
fwait
mov
test
mov
xlat
lock
es
cmp
ljmp
sbb
icebp
clc
inc
inc
jne
pop
neg
or
add
jecxz
shll
adc
cmpsb
or
add
pop
mov
xor
stos
add
mov
lods
icebp
in
add
ss
mov
lea
and
js
xorb
inc
cmp
add
sub
stos
mov
sbb
mov
test
in
xorb
dec
insl
or
xchg
cmpsl
or
push
pusha
xor
mov
sub
add
imul
jecxz
jae
pop
sbb
lahf
mov
das
adc
out
mov
lret
test
dec
pop
mov
test
cmp
in
xchg
push
insb
mov
adc
int3
dec
mov
jno
hlt
addr16
aaa
fs
outsb
and
xchg
test
ficoml
loopne
push
sbb
lods
pop
mov
mov
popa
shl
fisubs
push
or
add
cli
lods
aaa
pop
adc
rcll
sub
shrb
adc
ss
in
xchg
xor
pop
jmp
rorl
std
sbb
pop
push
sub
pop
enter
mov
mov
xor
daa
lea
or
jne
imul
sbb
addr16
mov
mov
mov
repnz
imul
lock
mov
outsb
push
mov
addps
fidivrl
sbb
pop
jecxz
ficomps
shll
arpl
sbb
jns
xor
xor
xchg
inc
dec
pop
out
or
push
jl
inc
lcall
lret
mov
dec
cmp
sbb
mov
outsb
mov
shll
fmuls
fcmovne
cltd
mov
cmp
inc
jnp
xor
fldcw
sub
jb
lahf
cli
pop
movsl
mov
rcrb
cli
mov
sti
xchg
lds
add
push
sub
jnp
mov
jg
popf
xchg
mov
sub
fistpl
or
and
iret
je
inc
inc
fcoml
pop
outsb
xchg
mov
xor
inc
fists
cmpsl
repnz
rorb
in
arpl
and
imul
ret
int3
and
push
stos
xbegin
mov
xor
and
enter
test
inc
jo
mov
push
cmp
repnz
pop
mov
int
lods
fdivrl
and
dec
lods
mov
das
cmp
int
and
ret
bound
test
push
xchg
idivb
pushf
xchg
popa
sbb
inc
mov
outsb
or
ficoms
shll
scas
in
jnp
jl
mov
mov
fwait
cmp
popa
adc
adc
adc
sahf
mov
lock
jne
repnz
jnp
popa
test
jo
jnp
cwtl
in
add
ret
dec
jno
subl
sbb
push
push
fistpll
dec
xor
mov
ss
inc
cmp
jl
fdivrp
lods
mov
mov
inc
aaa
lret
jb
lods
aad
loope
jb
int3
sti
rolb
mov
cmp
inc
or
xchg
adc
adc
add
xchg
adc
addr16
fldcw
mov
cmp
jle
xor
rcl
stc
in
mov
pop
aam
cltd
xorl
fldpi
mov
arpl
ret
outsl
push
lods
sbb
pop
pop
cmpsb
daa
push
cmp
lret
mov
push
bound
repnz
add
repnz
jbe
or
xchg
adc
sbb
cwtl
push
dec
test
aaa
cmp
mov
adc
jo
push
pop
inc
inc
xchg
lcall
xchg
pop
push
sub
add
jl
pop
in
imul
inc
mov
movsb
addl
sbb
ret
ret
mov
bound
adc
push
aam
int
add
scas
adc
inc
push
push
or
fsub
mov
mov
mov
fs
outsb
pop
jle
sbb
hlt
mov
push
insb
pop
sbb
inc
insl
shll
movsb
mov
in
shl
push
push
jle
popf
es
fmul
sub
and
cwtl
jne
nop
dec
clc
pop
mov
adc
adc
add
addl
fwait
ss
fidivl
leave
cmp
lret
mov
notb
int
repnz
in
dec
inc
sub
sub
out
lahf
and
jnp
hlt
xor
push
jmp
leave
aam
cli
mov
and
xor
subb
sbb
das
adc
inc
fidivs
popa
cmp
pop
sahf
pop
and
inc
jbe
test
je
mov
xchg
add
jnp
sti
js
rcrb
xchg
icebp
lods
push
ret
ret
and
xchg
push
dec
aaa
adc
or
sbb
test
add
into
aam
sbb
movsl
sub
popa
dec
mov
sbb
jp
cmp
push
popa
imull
inc
sbb
es
mov
loop
mov
sbb
add
push
leave
arpl
push
orl
jo
fildll
shrb
xchg
mov
jae
mov
sbb
xchg
mov
dec
mov
mov
mov
adc
jne
int3
pop
imul
xor
ds
out
jmp
je
add
ffree
or
rorl
push
jne
inc
xor
or
jge
mov
jmp
ss
imul
std
sahf
or
jg
adc
scas
hlt
call
jp
xor
xchg
mov
jne
sahf
into
mov
test
mov
and
inc
test
aam
clc
mov
pop
stos
fs
repnz
shlb
or
repz
filds
nop
mov
xlat
adc
in
ljmp
jmp
xorl
in
mov
mov
pop
jle
jae
pop
xchg
add
rcll
sbb
cmp
mov
imul
aas
hlt
dec
jno
cmp
jae
push
push
popa
jae
inc
outsl
xor
xchg
data16
or
call
dec
push
or
add
insl
inc
and
mov
arpl
fwait
lds
sbb
icebp
jmp
jb
insb
jne
cwtl
inc
pop
add
xor
sti
cmpsl
rclb
mov
mov
in
outsl
fdivrl
sbb
xchg
sbb
ja
cmp
test
sub
jae
mov
adc
sub
mov
add
int
in
int
mov
cmp
data16
outsb
push
repz
cmp
mov
or
pop
cmc
cld
sub
out
push
fisttpll
out
jo
cli
out
jmp
ljmp
repz
scas
fistps
imul
in
icebp
popa
addb
lret
lcall
pop
in
jmp
mov
out
xchg
adc
mov
adc
out
shrl
ljmp
addb
insw
sbbl
shlb
sar
inc
lcall
cmp
or
dec
loopne
cli
mov
xchg
xchg
mov
divl
cmp
cmp
cmp
stc
test
sbb
lock
mov
fstl
mov
mov
jae
stos
ficoml
adc
mov
lret
add
sbb
cmc
and
and
out
mov
push
flds
mov
arpl
push
jle
dec
jmp
outsb
roll
jb
hlt
adc
loope
xchg
ja
cli
shl
push
fbstp
add
nop
push
mov
jbe
or
and
fisttpl
nop
jge
dec
stc
or
outsb
jne
fisubrs
arpl
xlat
mov
add
sbb
jnp
mov
sbb
adc
xor
scas
cld
fistl
or
repnz
jb
add
nop
pop
inc
ljmp
adc
mov
dec
fsubl
fwait
std
faddp
push
adc
aas
dec
or
aad
jnp
pop
daa
cmpsl
sbb
aam
lea
mov
int
ficoms
sbb
push
inc
cvttps2pi
stc
cmp
ret
pop
or
orb
je
mov
adc
pop
mov
push
dec
or
xor
int3
push
and
insl
cmpsb
lret
mov
pop
out
push
adc
in
fmull
xchg
test
xchg
out
jmp
fisttpll
fisubl
pusha
loop
inc
call
pushf
ljmp
sbb
out
sbb
stc
jp
outsl
xor
mov
pop
enter
fwait
call
pop
fwait
sahf
and
add
stc
jno
adc
outsb
xchg
add
test
aaa
out
cmp
mov
rorl
push
pop
add
add
fistpl
jg
lret
outsl
out
mov
pop
aas
andl
xchg
clc
ficoms
out
dec
mov
mov
cld
movsb
ret
rorl
mov
loope
enter
scas
adc
in
stos
pop
rcpps
inc
pusha
dec
cltd
lea
testl
mov
ja
adc
adc
mov
arpl
lods
jbe
clc
std
iret
and
mov
jmp
add
scas
daa
outsl
repz
jne
mov
sbbl
sub
sbb
cmp
repnz
mov
adc
les
sbb
stos
dec
inc
mov
js,pn
xchg
xchg
mov
icebp
xorl
popf
sub
jg
test
cmpl
sbb
jp
loop
xor
jl
or
sbb
out
sub
adc
int3
loop
call
inc
iret
cltd
fstl
mov
gs
mov
gs
push
movsl
pop
push
mov
add
adc
mov
shl
lahf
inc
lods
cmp
mov
mov
pop
mov
jecxz
sub
test
sub
xlat
ljmp
imul
pop
pusha
inc
stos
jnp
inc
push
jg
mov
stc
inc
jo
pop
sbb
add
out
bound
bound
pop
dec
or
mov
imul
lock
sahf
aam
aad
mov
loopne
mov
mov
push
insl
sub
movsb
push
iret
test
mov
nop
sbb
mov
pop
xchg
inc
cmc
jns
enter
std
mov
gs
clc
cmp
push
mov
loopne
jns
adc
test
imulb
jno
test
jecxz
stos
adc
pop
xor
fldt
fimuls
in
icebp
imul
scas
ljmp
nop
lret
popf
sbb
rorb
sarb
mov
jo
outsb
lods
pusha
cmp
xchg
mov
mov
cld
inc
xchg
mov
xor
lret
jmp
and
xchg
es
test
inc
mov
push
pop
inc
mov
push
ret
insl
push
adc
and
out
sbb
sub
push
into
mov
inc
repnz
aad
pop
ja
sbb
push
add
ds
lret
je
dec
lods
test
xlat
sahf
orb
cmpsb
imul
xor
js
cmc
xchg
xor
pop
adc
xchg
cmpsl
stc
in
outsb
sbb
jo
std
call
inc
sti
out
outsl
jnp
or
imul
stos
sbb
test
jp
pop
push
dec
cld
test
stc
cmp
aad
inc
pop
divl
popl
sbb
dec
bound
jae
jge
pop
xor
and
jno
and
jp
fimuls
ret
pop
dec
aad
les
js
std
jmp
mov
je
into
mov
mov
cmp
imul
ret
mov
gs
mov
rcl
rorl
les
jns
xlat
ror
repz
out
std
lahf
sbb
pusha
sub
xrelease
icebp
and
pop
mov
loop
lods
ret
xor
fwait
jbe
les
push
jge
cmp
sub
pop
lods
repnz
jne
inc
mov
xor
and
sbb
lcall
pop
imul
cwtl
jne
add
push
lods
loope
mov
cmc
aas
pop
repnz
push
push
movsl
cmp
mov
sti
insl
shl
sub
jnp
mov
int
and
sub
mov
sub
fisttpll
dec
xor
gs
sbb
mov
dec
inc
fstps
xchg
xor
xchg
sub
aaa
cmc
ficompl
add
sbb
pop
inc
jp
sarl
mov
fwait
sub
push
stos
adc
cs
or
in
dec
outsb
pop
addr16
sbb
imul
xor
cmp
push
sub
fistl
shrl
mov
aad
push
xor
setle
adc
xor
mov
shll
std
sbb
add
shrb
xorl
cli
ret
imul
and
inc
frstor
cld
inc
test
iret
adc
push
gs
outsb
add
pop
int3
dec
fbstp
xor
xchg
fs
fisttpll
in
sbb
inc
aad
jno
or
sub
pop
or
outsl
fstpt
ds
iret
add
shlb
mov
into
jbe
movsl
in
mov
fldcw
xchg
jl
mov
iret
inc
cmp
bswap
div
lods
and
or
js
dec
loope
loopne
add
and
in
aaa
or
xchg
inc
cmpsb
lea
rorb
in
mov
or
repz
stc
adc
loope
push
dec
test
fwait
lahf
aas
inc
sub
cmc
mov
or
and
test
mov
xchg
or
mov
sub
into
loope
fidivrs
pop
fdivs
push
testl
nop
push
test
jbe
sub
bound
inc
mov
cmp
xor
mov
xor
jle
mov
aam
jbe
es
roll
and
fbstp
das
cmpsb
xchg
in
pop
je
mov
and
push
jmp
jecxz
insb
enter
outsl
jbe
loopne
dec
inc
mov
pop
test
inc
test
mov
idivl
enter
orl
fsubl
ret
outsl
sub
and
icebp
or
dec
insl
sbb
cmpsl
jne
mov
sbb
inc
dec
and
xchg
inc
cltd
xor
push
rcr
lcall
push
inc
add
fs
scas
pushf
int
fmuls
hlt
cmp
pop
cli
sbb
mov
lret
inc
jae
push
pop
mov
mov
loop
inc
in
push
mov
ja
fsubl
add
jl
jne
int3
sub
sbb
xlat
xor
xchg
cmp
and
jge
dec
ja
data16
scas
lea
int3
xlat
mov
mov
imull
clc
inc
lods
mov
pop
pop
dec
out
mov
mov
jge
lcall
inc
push
mov
jno
addl
shll
xchg
sar
or
push
inc
lea
out
pop
inc
xlat
lods
test
int
xchg
mov
test
insb
mov
inc
push
jae
ss
daa
dec
sbb
jbe
cmp
les
sbb
test
sti
xor
repnz
cmp
xchg
adc
mov
clc
mov
out
pop
inc
sti
xchg
inc
out
sub
popf
jo
clc
xchg
lret
scas
bound
mov
out
outsb
inc
xchg
mov
lea
inc
xor
jo
mov
jle
fistpl
mov
pop
in
inc
icebp
cmp
xor
xor
cld
xchg
lret
mov
and
test
mov
outsb
int3
push
adc
xchg
loopne
mov
fwait
push
pop
cli
enter
adc
sub
mov
mov
sub
out
xor
mov
fs
jo
or
pop
aam
pusha
and
mov
jmp
loopne
ja
rcll
xchg
sbb
inc
addb
push
shll
xor
mov
pop
roll
mov
add
fsubrs
ljmp
scas
orl
cmp
rcrb
mov
sub
bound
adcl
ret
subb
sbb
or
inc
xchg
xor
in
mov
dec
cli
in
in
sti
fsubrl
ljmp
jl
sub
daa
lea
sub
mov
cli
and
imul
dec
mov
sti
std
dec
test
cmp
adc
dec
flds
rcll
outsb
inc
xlat
push
cmp
in
int3
call
stos
xchg
cmp
lahf
mov
mov
jge
inc
xchg
push
bound
push
cwtl
or
inc
cmc
mov
jo
mov
leave
repz
jmp
pop
cmp
lds
sbbb
mov
pop
rcll
nop
add
jns
in
inc
stc
push
xchg
test
add
dec
adc
mov
int
cli
mov
adc
imulb
push
imul
mov
idiv
dec
xor
bndstx
lea
test
cs
fwait
cmpsl
movsl
jne
jnp
nop
sbb
lea
cltd
jp
sub
sub
arpl
mov
xchg
ret
into
outsl
cmp
arpl
jmp
pop
test
icebp
adc
ss
adc
sub
pop
lret
sti
ret
fistpll
cmp
ljmp
add
in
hlt
pop
outsb
and
inc
out
inc
mov
sub
xorb
js
pop
xchg
xor
and
jnp
dec
push
repnz
xchg
cmp
push
and
les
add
pop
mov
leave
or
push
dec
xchg
mov
push
ret
dec
popf
mov
ret
and
sub
out
and
sbb
nop
mov
dec
and
or
daa
in
pusha
sbb
add
sbb
test
out
pushf
cs
cld
xchg
lods
pop
xchg
cmp
ljmp
push
flds
jge
pop
pop
repnz
fiaddl
cmpsl
jne
mov
pop
push
repnz
inc
lods
lahf
adc
mov
insl
sub
and
mov
lods
jmp
mov
mov
inc
cmp
mov
repz
rol
sahf
dec
out
push
xchg
pop
push
or
rorb
sbbl
adc
lods
dec
xor
stos
sub
add
adcb
push
dec
fucomip
inc
in
inc
jbe
jg
mov
or
inc
idivl
xchg
xchg
mov
mov
movsb
mov
sbb
loope
scas
jmp
popa
push
in
push
test
push
movsb
cmpsb
cld
idivb
cmp
and
lahf
mov
fistps
xchg
and
xchg
sahf
xchg
fisttpll
cmpsb
push
test
jp
and
mov
sub
mov
mov
loope
in
test
pop
popa
imul
insl
lods
push
xchg
ljmp
movsl
jae
xchg
imul
cmp
push
mov
lock
sbb
jp
out
push
subb
ja
call
ja
or
pop
lahf
fnstenv
xchg
jge
call
sub
in
jo
fsubrp
push
xor
lret
cmc
jl
pop
mov
lretw
aad
out
push
adc
in
aad
sub
cmpsb
shl
std
scas
psrld
lods
add
notb
dec
mov
rcrb
movl
out
outsl
imull
stos
test
push
andl
sub
out
xchg
or
lods
fists
cli
pusha
dec
xchg
or
mov
out
dec
cmp
or
xor
mov
pop
call
int3
call
or
daa
loopne
cmpl
lds
js
add
xchg
add
lods
sbb
out
cmp
les
enter
movl
dec
and
aad
cmp
pushl
lret
pop
jg
in
mov
fiadds
add
loop
or
ret
popa
sbb
sbb
mov
shrb
mov
and
pusha
loopne
jo
test
push
test
faddl
fimull
imul
lahf
xor
jmp
add
cltd
and
cli
sub
mov
mov
fdivrs
add
pop
and
push
or
jge
shlb
sbb
push
cmp
mov
mov
mov
inc
insl
add
mov
fcomps
sbb
out
cmc
bound
pop
fs
mov
mov
scas
sbb
mov
add
gs
push
ja
mov
outsb
jb
stos
dec
imul
push
mov
int3
andb
xor
out
loope
imul
cs
or
loopne
fidivrs
movsl
clc
lock
fstps
shll
cmp
popa
test
jle
leave
mov
mov
sbb
push
or
inc
sbb
xor
scas
or
mov
inc
xor
lret
out
lods
out
sbb
or
cmp
mov
pop
and
xchg
cli
add
cmp
mov
pop
adc
fiadds
inc
aas
imull
outsb
ljmp
test
sbb
sbb
xor
sub
and
jb
jl
lea
or
add
adc
pop
addl
adc
stos
lcall
mov
jg
sti
test
jae
out
cmpsl
mov
pop
cmp
daa
clc
jg
fidivrl
dec
xor
mov
cli
out
xchg
sahf
push
cmp
cli
mov
clc
mov
fwait
dec
int3
sub
xorl
or
mov
mov
outsb
xchg
fists
sbb
test
sub
stos
sbb
test
insl
aad
jno
imul
loope
outsb
adc
into
int
adc
add
xchg
std
jmp
mov
and
sbb
dec
std
ja
lods
iret
outsb
pop
aad
pop
mov
je
imul
test
insb
les
jno
inc
xchg
xchg
mov
shll
xchg
sbb
mov
sbb
and
call
xor
iret
clc
andb
test
pop
addr16
ret
aam
or
mov
std
and
sbb
push
dec
leave
rorl
mov
sar
xor
xchg
jae
pop
out
insl
rcrb
xchg
push
mov
sub
push
lcall
mov
mov
xor
sub
xlat
decb
jg
pop
cwtl
cmp
loopne
jbe
daa
cmp
and
sub
test
mull
mov
imulb
xor
out
orl
pop
xchg
inc
mov
in
popl
mov
push
test
ret
in
cmp
insl
xchg
aad
pop
push
shlb
xor
ss
ljmp
gs
mov
xlat
sbb
fwait
jp
dec
mov
push
or
push
add
inc
xchg
xorb
jmp
in
jecxz
mov
xchg
clc
inc
cmp
les
or
sbb
out
popf
fidivrs
loope
negl
popf
in
push
jb
mov
dec
aam
inc
add
in
pop
scas
pop
mov
jle
mov
insl
fwait
or
add
sub
sahf
arpl
xchg
fidivl
sti
cmc
lds
cld
insl
mov
into
and
sbb
int3
mov
pushl
es
jb
aam
inc
nop
out
dec
jl
aad
lods
and
sub
lahf
xchg
pop
insl
mov
jge
push
cmp
stos
jmp
push
adc
adc
inc
daa
fstpl
in
jbe
je
lods
ljmp
cmp
mov
cmpsb
fisubl
pop
push
sbb
fwait
test
leave
adc
and
call
jns
sbb
shr
or
lods
pop
mov
mov
xor
mov
sti
pusha
jmp
mov
lcall
call
dec
push
sbb
push
jne
clc
icebp
pop
and
repnz
pop
mov
aam
push
mov
cld
dec
add
jecxz
inc
jne
jno
cmpsl
jnp
xchg
fs
cmc
xchg
sub
push
lret
cmp
dec
cld
mov
jb
fcmovnb
out
sbb
les
sub
ret
mov
or
xor
push
sub
stc
fmull
cs
adc
and
stc
or
in
push
push
addr16
and
jbe
rorb
arpl
lcall
xchg
dec
cmp
sti
mov
mov
ret
es
out
incl
mov
and
cmp
xchg
add
jbe
fs
mov
mov
mov
std
lret
rorl
or
xor
ss
in
cltd
fsubs
or
sbb
jle
push
pop
push
std
aad
daa
arpl
jo
leave
or
mov
push
xchg
push
adcl
sahf
or
fwait
mov
frstor
icebp
jp
pop
rcr
pushf
pushf
int3
imul
scas
mov
loopne
aam
aas
sbb
cltd
sahf
int3
sarl
mov
sub
jl
jnp
clc
and
jmp
xor
jne
and
test
lea
adc
in
movsl
xchg
out
and
andb
setp
dec
xchg
jnp
hlt
shl
pop
mov
mov
mov
fisubrs
cwtl
aas
lock
jg
aaa
arpl
sub
jnp
clc
fisttpl
jp
int3
pusha
push
push
rclb
adc
dec
adc
sub
cmpsb
bnd
cmc
jmp
rcrb
stos
pop
xchg
pop
and
and
mov
out
jae
mov
mov
push
andl
push
mov
repnz
dec
in
test
cmp
pop
push
mov
inc
jle
fimull
scas
movsl
or
out
cmp
mov
inc
test
roll
enter
popa
jmp
push
out
push
sbb
sahf
dec
inc
mov
and
xor
popf
dec
mov
shll
jmp
xchg
loope
sbb
inc
xor
cmp
shrb
mov
or
xchg
mov
nop
dec
and
sbb
mov
mov
mov
jbe
mov
xchg
xor
icebp
jae,pn
je
fistps
sbb
inc
mov
mov
or
jmp
adc
movsb
push
pop
jp
cmp
test
inc
pop
mov
lret
xlat
loope
lret
or
ljmp
jae
stc
int3
xor
arpl
adc
push
repnz
test
incb
mov
dec
pop
push
jne
ja
fisubrs
leave
pusha
xlat
fadds
and
jg
mov
sub
pop
loop
aaa
and
int
hlt
jecxz
inc
in
outsl
cmpsb
iret
shll
test
xchg
ja
xchg
js
shrb
mov
inc
cmp
xor
in
xchg
or
mov
push
push
repz
xor
les
jbe
jb
jg
rolb
pusha
test
mov
add
xchg
mov
mov
mov
push
sbb
adc
lock
sahf
test
inc
pushf
mov
orb
cli
lcall
adc
xlat
xlat
lea
mov
add
push
push
jo
mov
int3
clc
in
scas
addl
jp
imul
pushf
in
push
jb
push
pop
cmp
aaa
inc
cli
test
xchg
outsl
pop
add
and
stc
jb
andl
arpl
jle
or
fbld
adc
cmc
call
cs
mov
xor
fwait
imul
mov
ja
icebp
movswl
or
mov
cmpl
add
dec
xchg
fidivrs
jg
pop
xor
mov
adc
mov
mov
and
mov
scas
scas
fldenv
mov
dec
stc
fs
cs
lcall
and
add
call
cmpsl
cmp
push
push
jne
mov
cmp
pop
aad
mov
mov
pop
lds
and
pop
test
xchg
das
fimull
push
in
xchg
roll
into
daa
mov
lods
dec
int3
cld
push
push
lods
push
fisubrs
cltd
cli
fbstp
out
inc
pop
pop
jl
sbb
imull
stos
daa
push
daa
adc
cltd
jne
add
or
adc
jb
add
sub
jp
sbb
sbb
sbb
test
pop
lods
cmp
inc
leave
push
mov
arpl
xlat
lock
incl
add
pop
mov
jle
dec
movsb
adc
or
and
cld
lods
dec
aas
pushf
pushf
in
movsl
sbb
fmuls
pop
std
mov
sub
or
test
jmp
xchg
xor
mov
push
das
mov
xchg
xor
pop
xor
add
dec
push
jecxz
imul
fstp
xor
loop
in
fadd
or
add
mov
jecxz
lret
sbb
inc
and
pop
dec
out
inc
in
sbbl
insb
out
fwait
pop
adc
xor
out
xor
outsb
mov
push
mov
icebp
or
add
loop
pop
rcrb
adc
sbb
in
or
vmovaps
mov
into
xchg
pop
insb
loopew
mov
les
addb
stos
pop
mov
push
test
xchg
shlb
ja
pop
add
dec
ret
arpl
xlat
or
sub
jne
or
mov
lahf
test
dec
adc
inc
mov
mov
cmp
mov
fistps
mov
dec
jg
nop
in
inc
incl
insl
sub
pop
cmp
fsubl
or
sub
cld
insl
push
or
sub
popf
xor
mov
cld
mov
sahf
add
ret
andb
addl
bound
pop
jecxz
mov
fwait
aaa
sub
jg
xchg
cmp
fldl
stos
and
repnz
fstl
fiaddl
sbb
mov
jo
push
xor
arpl
inc
sti
push
dec
sbb
mov
xlat
jae
call
ja
mov
xor
push
xor
clc
xor
iret
cmp
les
jae
fadds
insl
push
xchg
in
pop
pop
jnp
and
add
popa
ret
cld
and
xchg
push
out
push
sbb
addr16
out
adc
mov
or
shl
lea
pop
int3
out
or
int
pop
inc
sub
sti
movsb
sbb
cmp
arpl
push
pop
js
ja
xorl
push
ja
dec
adc
out
or
das
dec
dec
pusha
sub
std
test
cwtl
xor
in
cmp
adc
or
pop
roll
pop
in
fidivs
je
aam
xchg
mov
cltd
mov
and
xchg
xor
in
dec
stc
pusha
mov
outsb
adc
xchg
pop
fcmovu
ret
pop
fdivr
loopne
stos
js
mov
rorb
popa
jnp
lds
xchg
ret
mov
sti
cli
cwtl
xor
sbb
inc
out
jecxz
sti
mov
ja
imul
or
xchg
add
dec
pop
ret
sub
cmp
icebp
mov
mov
enter
lods
aas
xchg
fiadds
mov
popa
dec
and
mov
ds
loopne
lret
in
incl
mov
shll
cmpsl
test
push
es
scas
ljmp
pop
mov
jae
and
call
mov
sbb
insb
inc
jmp
pop
mov
or
sti
mov
and
cld
sub
out
fmuls
rorb
nop
outsl
int3
movsb
cmp
xchg
insl
push
sub
push
inc
pushf
jg
jg
adc
bound
sbb
arpl
insb
cld
or
in
lret
cmp
pop
cmp
outsb
adc
add
jbe
cs
xchg
ret
jo
and
adc
mov
ljmp
cmc
push
jmp
xor
inc
roll
adc
mov
movsl
dec
out
push
jo
test
frstor
xchg
pop
push
lret
push
and
dec
insb
lcall
pop
repnz
movsl
shl
lahf
push
sbb
mov
pop
mov
jmp
xchg
cld
add
jmp
ljmp
mov
ja
test
imul
or
enter
adc
inc
into
sub
insb
and
mov
cmp
jmp
mov
aam
mov
jo
sbb
fmuls
cmpsb
imul
stos
aam
adc
mov
outsl
xchg
scas
sbb
cmp
push
gs
dec
cmp
dec
gs
insb
cmp
popa
ss
pop
push
inc
js
rorb
adc
sbb
mov
mov
xor
jbe
or
xor
in
dec
cs
lea
push
and
scas
cmp
pop
lahf
cltd
and
daa
pop
insb
cmp
arpl
das
pop
jge
dec
test
outsl
mov
xchg
jge
cmp
cld
push
jae
test
sub
mov
jge
xchg
cmp
fbstp
jmp
rolb
std
jns
ret
cwtl
sub
jmp
xor
add
arpl
mov
sub
cmp
jne
std
add
mov
inc
inc
shl
sub
sub
mov
adc
mov
gs
test
fnsave
mov
mov
sbb
leave
mov
aam
cmp
xchg
cmp
pop
inc
fisubs
pop
mov
or
dec
inc
and
mov
ret
pop
sub
and
cltd
lea
adc
in
mov
cli
mov
xchg
mov
adc
pop
xor
xchg
popf
xchg
cmp
outsb
cmp
ret
sub
setnp
xor
lahf
imul
jg
rcrb
sbb
mov
movsl
mov
iret
mov
mov
pop
repz
add
clc
cmp
sti
add
dec
rcl
mov
pop
sbb
push
sub
sub
mov
xor
icebp
cmp
roll
sbb
aaa
js
adc
enter
cltd
sub
mov
lret
cmp
jecxz
fisttpll
fsubrs
or
cld
leave
or
sbb
inc
adc
jbe
and
cld
stc
aad
or
orb
mov
or
ljmp
jge
inc
inc
mov
hlt
push
xchg
add
mov
push
sub
hlt
or
mov
xchg
loop
outsl
test
push
cmpsl
mov
or
cmp
pop
pop
pop
mov
jo
test
aam
dec
movl
mov
movsl
inc
scas
cmpl
jbe
lock
call
neg
jnp
incb
sti
in
lods
movsb
mov
fcoms
mov
cld
jmp
leave
test
xchg
test
enter
out
mov
jmp
inc
repnz
stos
std
pop
mov
mov
sahf
lods
jmp
push
lret
pop
loop
rol
inc
aas
cmp
fxch
sar
outsb
mov
dec
aad
mov
jnp
enter
mov
mov
push
pop
fisttpl
je
movsb
out
mov
scas
imul
stos
sbb
scas
push
dec
add
sub
repz
int3
leave
mulps
xchg
test
cs
inc
repz
cld
jnp
fcmovnbe
mov
test
addr16
adc
ljmp
pop
loopne
stos
inc
or
sti
lods
loop
xchg
fiadds
jmp
add
sub
loop
clc
repz
fnstenv
inc
jb
push
xchg
jp
imul
fadds
aam
nop
mov
cmp
ret
cltd
adc
sbb
dec
sahf
pop
lret
mov
jecxz
fists
imul
cmp
mov
xchg
add
mov
fdivl
pop
pop
xor
pop
out
clc
mov
scas
cs
ljmp
lods
iret
and
add
sub
cmpsl
cmp
out
xor
xorl
cmovl
das
lods
jno
jne
or
ret
jecxz
xchg
addr16
fildl
shl
xchg
push
cmp
cwtl
and
test
or
and
push
adc
inc
xchg
cmp
push
ja
mov
xchg
lods
icebp
cmpsl
pusha
add
leave
popf
or
fcmovb
ljmp
or
cmpsb
out
add
into
jae
xchg
jno
lods
iret
pop
pushf
gs
dec
outsb
shll
fisubl
fcmovnbe
ret
xchg
test
in
cmp
and
testb
outsl
cmpsb
mov
int
adc
mov
test
sbb
dec
adc
je
int
mov
sti
mov
call
mov
and
test
sbb
push
add
xlat
add
test
pusha
sti
add
sub
es
test
mov
arpl
decl
sub
mov
mov
jmp
sahf
insl
lcall
jmp
xor
cmp
fdivrs
jp
daa
mov
jle
adc
mov
stc
pop
es
insb
and
xor
jp
jae
data16
push
cwtl
test
or
fwait
sbb
sub
sar
mov
add
xor
xchg
arpl
mov
mov
add
mov
mov
test
mov
mov
test
inc
jle
inc
xlat
enter
pop
or
arpl
imulb
add
add
leave
dec
out
fs
sbb
sub
cs
bound
cli
ds
inc
js
addr16
inc
popf
adc
cmpsb
xor
jg
add
push
and
int3
adc
popf
add
testb
aad
lods
mov
cmp
lods
jae
clc
mov
lcall
std
hlt
stos
popa
in
lahf
out
push
aad
xchg
ja
mov
mov
fdivrl
rcrl
lock
shrb
sub
rcrb
into
push
cmp
xor
imul
shrl
pop
cmp
enter
mov
movsl
lahf
mov
idivb
xor
in
cmpsl
ljmp
mov
push
lea
mov
scas
and
shlb
mov
fistl
aad
adc
cmp
test
bound
add
fstps
dec
or
xchg
js
sbb
or
pop
mov
cltd
fisubrl
adc
mov
mov
and
and
jmp
bound
mov
test
roll
mov
xor
mov
icebp
test
xchg
or
scas
aas
in
cli
cmc
push
pop
fsubs
in
adcl
mov
xor
xor
rcl
dec
dec
subl
mov
add
pop
cmp
inc
jae
xor
call
jnp
add
lahf
or
cmp
jmp
xor
fistpll
sbb
comiss
pop
mov
jo
mov
pop
stos
loope
xor
mov
das
inc
jae
ljmp
mov
lret
das
fsubs
data16
push
cmp
or
inc
outsl
jns
dec
and
out
push
movsl
icebp
ret
repz
rorl
sub
das
mov
mov
sbb
fwait
loop
adc
mov
dec
in
ret
and
loopne
xchg
and
in
test
inc
movsl
fldcw
pop
cmp
repnz
dec
pop
adc
xor
test
adc
sahf
push
ret
insb
sbb
inc
ret
pusha
aam
scas
mov
repnz
mov
cmp
inc
stos
pop
sub
mov
fcomi
loopne
jp
add
std
clc
xor
mov
sbb
or
in
sbb
mov
fxtract
mov
ret
push
popa
or
cs
jne
mov
xor
das
das
pop
sete
pop
mov
cs
fcomps
aaa
dec
push
stos
lds
dec
movsl
xor
mov
stos
gs
popa
aad
sbb
movb
stos
jle
cmpsb
pop
insl
sbb
jno
fldenv
jnp
push
push
aam
rclb
add
push
pop
imul
out
mov
mov
nop
adc
ficomps
jo
push
adc
jmp
sarl
popf
push
neg
fisubrs
lods
sbb
dec
icebp
aas
sub
iret
cmpsb
cld
pop
inc
shlb
push
inc
popf
das
outsb
sub
mov
push
into
pop
pop
push
mov
xchg
rolb
xchg
enter
cli
mov
bound
adc
sbb
cmc
mov
imul
mov
jle
test
mov
dec
or
pop
jae
aad
xchg
movsb
movsl
test
lret
push
mov
mov
push
mov
push
push
pushf
aaa
insb
jg
pop
scas
lods
scas
lock
pop
mov
pop
fimull
xchg
rorl
sbb
rol
lret
xchg
mov
leave
js
pop
loopne
enter
mov
dec
jmp
lcall
fistps
data16
adc
pop
lea
movsl
stos
jae
int3
rcr
jmp
mov
mov
xor
jns
cmp
pop
mov
jno
pop
faddp
ja
xor
cmpsl
add
xchg
shll
daa
sbb
lods
sahf
sbb
xchg
and
push
sbb
aas
cmp
xor
push
adc
lods
nop
je
jle
daa
jp
push
mov
mov
fwait
jo
push
mov
jne
jmp
push
sub
jp
addr16
sbb
addr16
int3
sub
cmpl
jmp
mov
fstl
fdivl
andl
ds
adc
test
inc
idivl
rol
enter
int
sbb
outsb
stos
dec
jl
test
movsl
into
push
fbld
add
sbb
stos
out
mov
negl
clc
jns
std
out
jnp
cltd
jb
in
sbb
pop
or
mov
push
and
add
pop
mov
adc
leave
sti
enter
add
xchg
popa
cmp
inc
rcrl
push
sub
push
dec
sahf
xchg
insb
add
repnz
std
sub
jns
mov
ja
stc
mov
fists
inc
jno
lret
daa
arpl
add
lock
xchg
addb
adc
pop
pop
and
shlb
jmp
push
add
lret
hlt
je
shll
mov
stos
xchg
out
mov
mov
cmpsl
popa
cmp
ljmp
mov
mov
xor
test
xor
jl
out
cmpsl
mov
or
enter
xor
adc
sbb
dec
sub
leave
adc
mov
cmpsl
dec
inc
clc
loopne
xorl
shll
leave
testb
enter
adc
ficoms
or
or
arpl
dec
push
test
cmp
fisubrl
jns
jp
ror
jmp
out
mov
pushf
movsl
mov
jb
cmpsb
push
and
push
mov
push
std
mov
mov
rcr
test
pop
mov
cs
scas
xchg
sbb
stc
ljmp
mov
shll
and
adc
sbb
sub
lds
fldcw
lcall
lock
xchg
mov
sbb
call
mov
jecxz
add
cmc
stc
popa
sbb
dec
sar
mov
pop
xchg
test
shl
jge
lods
push
pop
je
xchg
or
lret
out
test
loop
leave
jno
mov
je
cmp
cmp
cld
sbb
imul
ret
sahf
jmp
arpl
call
jne
iret
and
push
std
imul
inc
scas
cmp
loope
in
mov
and
xchg
sbb
mov
inc
out
sub
push
cmp
stos
fbstp
out
mov
lods
dec
in
mov
sbb
es
lods
sbb
pop
insl
mov
fidivrl
popa
cmp
pop
pop
outsl
sahf
add
or
lock
repnz
arpl
sbb
sub
scas
xchg
das
pop
mov
ss
outsb
or
aad
pop
push
lret
insb
neg
pop
enter
sti
packuswb
inc
pop
lcall
push
add
loope
push
push
and
es
push
dec
inc
es
insb
xor
shlb
adc
je
in
push
sub
cmp
cwtl
imul
subb
mov
jae
push
mov
inc
sbb
jne
adcl
ret
xchg
test
sbb
imul
jb
xchg
cmpsb
test
pop
jo
xor
iret
rcrl
lock
dec
sub
jns
cmp
add
std
sub
icebp
jbe
jnp
pop
xchg
pop
mov
cwtl
mov
xor
jp
les
es
dec
pop
xchg
push
mov
ja
lds
addr16
aaa
fwait
push
cmp
stc
inc
imul
ret
sarb
andb
cmp
fldt
hlt
fists
repnz
ret
aad
xchg
xor
pop
out
pop
arpl
xor
jb
dec
sahf
int
pop
mov
or
lret
mov
xor
jge
scas
cmpl
sbb
push
fmul
sub
fs
repz
mov
shrl
insl
mov
pushw
mov
hlt
sbb
push
adc
mov
inc
push
jp
rcrb
xorl
gs
mov
clc
xchg
push
dec
pushf
adc
push
test
push
lcall
jo
movsl
icebp
ja
loop
dec
fnstsw
into
push
test
jno
cmp
or
cmp
pushf
cmp
pop
cmp
dec
mov
sub
push
mov
movsl
xchg
imul
mov
xchg
enter
pushf
in
sbb
aam
lret
xor
mov
lds
clc
xchg
xlat
daa
ficoml
sub
out
adc
pop
pop
fs
je
je
cmp
or
rorb
stos
push
sub
jns
mov
rolb
repnz
mov
jge
dec
mov
imul
sub
push
mov
ret
pop
lret
add
stos
push
push
movsl
fdivrl
jnp
ret
outsb
into
out
cmc
pushf
xor
sbb
xor
xor
in
mov
repz
ja
inc
add
lret
xorl
mov
push
dec
or
pop
lcall
dec
rorb
jae
pop
sti
sti
fndisi(8087
cmp
jmp
fisttps
das
or
fistps
ss
jnp
in
adc
jo
push
movsl
push
dec
inc
popf
xchg
cli
jmp
xchg
dec
inc
js
out
xchg
lcall
jle
mov
in
bound
repz
jp
sahf
sbb
push
ljmp
pop
aaa
pushf
dec
sarl
mov
inc
sub
dec
xor
sub
lcall
addr16
adc
popf
xor
fsub
cltd
shll
push
out
mov
cmp
sti
xlat
mov
aam
jne
mov
xchg
mov
out
imul
int3
fldln2
fwait
mov
jmp
jl
scas
sbb
dec
pop
lcall
mov
shl
int
vmovups
iret
add
ficoms
pop
pop
pop
sti
or
cmp
mov
mov
mov
pop
jb
sbb
sbb
lahf
das
lss
xchg
out
ret
aam
cli
xchg
pop
fidivl
adc
movsb
icebp
xchg
jmp
cld
cmpsl
inc
pop
xor
mov
dec
pop
pop
pop
dec
rol
sbb
push
xlat
xchg
outsl
out
inc
sub
mov
sbb
movsl
add
mov
dec
bound
or
out
fistpl
insl
xchg
jmp
mov
push
adc
dec
xchg
out
sub
cmp
cmp
in
inc
adc
imul
mov
xchg
mov
jmp
dec
loopne
insb
icebp
push
push
sbb
in
and
sub
pop
enter
insl
mov
pop
imul
frstor
xchg
push
adc
fidivs
leave
test
rclb
bound
cmpsl
orb
shrl
cltd
cs
fucomp
je
and
cmc
enter
xchg
pusha
movsb
xlat
scas
int
mov
les
int
jne
add
pop
outsl
icebp
xor
divb
ret
jmp
es
sub
mov
xchg
mov
mov
pop
or
xor
testl
ret
lcall
negl
pop
mov
lret
iret
jno
push
xor
jns
cmpsl
stos
cmp
call
cmp
stos
cltd
rolb
cld
pop
adc
andl
ds
sub
jp
xor
mov
jae
jmp
adc
xlat
or
xor
data16
push
mov
xchg
mov
add
hlt
lret
pop
dec
fidivrl
or
in
pop
ret
aaa
pop
movsb
in
shrl
adc
mov
push
pop
xchg
adc
enter
inc
xchg
adcl
mov
xchg
popa
inc
and
mov
insb
inc
iret
int3
outsl
aaa
mov
cmpsb
shrl
add
cmp
sbb
jo
jns
cmpsl
pop
jecxz
ss
scas
mov
les
fsubrs
pusha
pop
shll
cld
xchg
and
or
or
jae
outsb
in
iret
in
test
jmp
popf
inc
cmc
xor
sti
adc
pushf
sub
mov
shr
add
je
jle
test
push
mov
sub
or
add
lret
aam
lret
sub
push
and
stc
lds
ret
ja
ret
stos
cmc
push
sbb
ret
lock
pop
xor
cmp
leave
leave
add
pushf
push
mov
sbb
sti
dec
test
dec
push
mov
sub
sub
fadd
or
mov
adc
jo
fbstp
jmp
jb
ljmp
or
in
mov
xchg
inc
or
mov
sbb
push
ret
adc
scas
cmp
xor
scas
pop
adc
inc
xchg
fists
jge
and
shlb
es
lret
sbb
sub
rcrb
jle
jge
mov
stos
or
in
adc
fcmovbe
xchg
mov
test
int
pushf
push
test
or
sarl
push
sbb
iret
add
cmp
imul
sti
ljmp
loopne
add
stos
pop
lods
mov
mov
pop
das
daa
repnz
dec
mov
lock
out
xor
pop
mov
fisubrl
es
mov
mov
mov
mov
dec
xor
add
std
out
inc
lea
mov
fimuls
jp
xchg
mov
add
insl
sar
pop
xchg
imul
ss
dec
jge
aaa
mov
jmp
shll
sti
es
jno
cmp
cmp
add
xchg
add
stc
pop
inc
scas
mov
pop
pop
pop
and
out
inc
in
pop
inc
imul
pop
push
insl
in
stc
pop
push
lea
stos
fnsave
int
aam
adc
mov
std
sarl
xor
push
cltd
mov
int3
cmp
and
mov
enter
cli
subb
fcomps
popf
pop
mov
mov
push
lahf
in
into
and
push
bound
ftst
lahf
imul
divl
out
jmp
push
dec
push
and
je
xchg
inc
mov
inc
pop
inc
or
cmp
out
jno
icebp
fwait
cmp
mov
xor
in
aam
sub
sbb
int
lahf
dec
jne
mov
sub
pop
sub
and
mov
adc
stos
mov
push
in
and
xor
inc
test
jecxz
xchg
jae
and
or
mov
in
jbe
push
pop
or
dec
js
test
repz
add
adc
and
push
incb
cli
js
fdiv
std
jbe
mov
xor
xor
and
push
push
pop
pop
mov
sub
int
sahf
cs
cmpsb
insb
loop
insb
insl
iret
add
mov
push
push
sbbb
cltd
mov
inc
lea
scas
sar
adc
mov
arpl
mov
in
sbb
adc
mov
stos
xchg
aas
pop
lds
cltd
add
cld
push
or
fdivrl
lds
inc
int
dec
add
pop
adc
leave
test
les
lds
fisttpl
add
adc
mov
push
rcl
jecxz
ret
adc
stos
push
or
dec
mov
or
sbb
call
rcll
shr
gs
sbb
fidivrl
add
jl
aaa
cmpsb
nop
popa
cmp
in
sub
fwait
bound
add
js
mov
jno
gs
adc
test
mov
inc
mov
cmp
out
inc
push
into
pop
into
push
int3
mov
xor
imul
mov
lods
loop
fisttpll
mov
outsb
dec
test
cwtl
daa
std
mov
adc
je
loope
push
stc
dec
mov
enter
gs
sbb
inc
mov
call
loope
dec
test
push
sub
lods
jmp
sub
dec
loope
or
popa
loope
inc
inc
bound
aaa
push
stos
xlat
lret
std
jnp
or
insb
les
xlat
jge
dec
inc
imulb
push
jne
rorb
mov
cmp
outsb
adc
dec
mov
lock
pushf
pop
int
mov
mov
fisubs
xchg
xchg
lods
cmp
sub
jo
pop
mov
ficoms
aam
ret
mov
push
jae
lret
es
test
lds
negb
hlt
cmp
jle
jmp
outsl
sbb
jle
lock
clc
cmc
insl
inc
or
push
in
cmp
out
popa
xchg
mov
lcall
xor
mov
pop
mov
push
add
in
adc
sub
mov
inc
jnp
inc
outsl
push
int
cmp
mov
or
mov
arpl
or
sbb
mov
mov
icebp
inc
mov
xchg
mov
jp
or
push
insb
data16
lods
and
pop
sub
jae
or
andb
sub
cmp
inc
pop
outsl
bound
xor
inc
outsb
cmp
pushf
pop
icebp
pop
in
mov
jg
pop
jae
orl
gs
clc
jp
js
js
dec
lahf
sbb
and
mov
scas
cmc
sbb
mov
in
lods
sub
jp
adc
pop
ljmp
lahf
add
mov
dec
mov
rcll
stc
aam
push
and
ficoml
dec
jne
jnp
cs
outsl
jg
subl
imull
and
mov
pop
mov
sub
cmp
add
xor
and
mov
mov
and
insl
jg
insb
sbb
xchg
in
cmovns
pushf
lods
adc
inc
imul
mov
adc
cwtl
fldenv
out
aam
jbe
add
outsb
jnp
push
push
xor
xchg
das
add
mov
mov
or
xchg
or
and
adc
sub
cs
push
test
fs
repnz
xchg
push
inc
adc
xchg
repnz
or
cwtl
fisubrl
mov
test
push
jmp
fldt
enter
push
fistpll
xor
and
sub
popf
data16
or
movsb
dec
cld
icebp
xor
mov
cmc
xlat
rclb
xor
fnsave
sahf
jp
fs
mov
imul
ret
repnz
jle
xlat
test
jo
in
idivl
mov
pop
sbb
into
sub
or
fimuls
sub
sub
ljmp
adc
pop
cli
pop
sahf
sub
cmpsl
mov
sahf
jae
xchg
mov
shrb
push
inc
pop
inc
testb
jmp
fsubrl
iret
leave
int
cli
cmpb
mov
fcoml
das
jnp
ljmp
adc
in
bound
sbb
or
push
dec
scas
mov
imul
jns
xor
adc
cmpsb
pop
push
mull
popf
popf
lret
je
pop
jmp
and
and
gs
ret
cmp
mov
scas
push
push
js
movsl
fistl
jbe
sub
dec
imul
push
and
sub
mov
mov
shlb
adc
jnp
lcall
push
fisubs
sub
dec
mov
inc
sbb
pop
sti
scas
fwait
sbb
shrl
mov
inc
out
dec
pop
and
neg
and
adc
xchg
pop
add
stc
push
movsb
pusha
inc
mov
cwtl
inc
arpl
dec
dec
into
mov
xorl
mov
inc
in
sti
jbe
cmp
iret
and
or
or
lods
test
lods
shrb
inc
cmpsl
mov
push
push
ja
xor
adc
jl
or
les
test
fnstenv
dec
insl
out
mov
jg
jbe
aas
and
or
aaa
mov
inc
add
xchg
mov
mov
ret
shl
add
sub
cli
aaa
mov
jp
int3
sahf
in
fiadds
sub
aad
sbb
aam
fdivrp
outsb
out
jns
mov
mov
mov
mov
int
cmp
add
dec
lock
pop
xor
fidivl
adc
pusha
imul
adc
movsl
and
xchg
jl
leave
in
mov
mov
inc
or
xchg
and
pusha
or
sub
mov
filds
and
test
popf
mov
fistl
sbb
or
mov
push
sti
out
insl
pusha
inc
mov
push
loop
cmp
mov
mov
mov
test
stos
ret
std
jp
dec
cs
call
int3
jb
mov
mov
insl
dec
push
loop
rcl
mov
mov
pop
lret
push
and
pop
lock
sub
inc
sub
ja
loop
das
jge
dec
jbe
fcomps
pop
ljmp
icebp
jnp
lret
fisttps
out
pop
mul
cmp
idivl
add
adc
inc
imul
mov
ja
inc
push
and
sbb
cmp
mov
addr16
pop
inc
lahf
ljmp
push
frstor
hlt
mov
xlat
in
in
jno
mov
mov
and
sbb
jg
and
jbe
lret
cmp
mov
add
je
adc
pop
push
mov
mov
sub
sub
mov
cmpsb
dec
mov
test
popf
add
push
xchg
dec
incl
or
subb
jge
jecxz
shl
fcomps
jl
and
dec
movsb
pop
xor
pop
sbb
adc
or
cmpsl
pushf
ficoml
sahf
cmp
push
in
sbb
or
push
faddp
adc
push
fsincos
aam
lcall
mov
adc
mov
jp
fs
cmpsl
or
sub
inc
adc
outsl
add
mov
roll
insb
notl
inc
jo
jmp
xor
fs
insl
cltd
fchs
sbb
push
dec
push
xchg
sub
pop
pop
xor
mov
outsb
mov
jnp
adc
jge
inc
adc
xor
or
addr16
movsb
add
mov
in
mov
mov
lahf
jecxz
add
mov
mov
jne
call
and
jne
pop
push
cli
cmp
and
scas
arpl
xor
sbb
add
fldenv
nop
push
adc
mov
mov
test
les
inc
jb
daa
scas
mov
pop
js
inc
add
adc
pop
stos
jae
inc
icebp
imul
jg
mov
mov
imul
repz
jp
xchg
mov
push
mov
adc
mov
pop
ret
mov
sub
sub
lahf
cmpsb
xor
or
inc
loopne
or
adc
add
sarb
pop
gs
add
icebp
sbb
mov
xor
xor
pop
mov
adc
or
sub
aas
adc
in
xchg
sub
mov
mov
push
decb
leave
cmp
push
out
jno
mov
vpsubsb
ljmp
dec
sbb
push
jmp
cmp
inc
mov
into
call
dec
cmp
nop
jne
adc
sbb
xchg
xchg
mov
addr16
jge
inc
jne
sbb
xor
shl
cmc
popf
xor
cmp
mov
dec
and
jge
je
dec
out
scas
xchg
out
lds
inc
cmp
inc
jl
loop
outsl
mov
bound
sti
fs
test
dec
sahf
lds
push
rcr
out
add
insl
mov
pusha
test
cs
cmp
insb
add
test
jo
inc
jb
push
repnz
out
push
jne
or
gs
pop
in
add
xchg
insl
imul
mov
cmp
xor
add
adc
movsl
xor
scas
sbb
fcmovbe
pop
cltd
call
test
fs
out
pop
inc
cmpsl
mov
cmp
mov
xorb
lds
out
xchg
js
aam
sbb
mov
dec
sub
insl
jle
sub
mov
mov
push
fwait
adc
sti
dec
jge
mov
push
pop
gs
clc
jb
popf
fs
ds
inc
pop
add
lds
out
mov
jne
add
inc
lock
shlb
cltd
lea
push
dec
daa
pop
lock
movsl
in
push
mov
push
add
icebp
mov
in
in
ret
or
xchg
in
cltd
mov
push
jnp
iret
and
and
je
incb
out
and
cmp
jg
cmp
cmp
pop
shrb
xchg
jmp
leave
shlb
sub
popf
loopne
test
loope
ja
stos
push
xchg
insb
arpl
hlt
mov
out
jae
push
inc
fidivs
mov
rorl
loop
insl
test
pop
cmp
mov
adcl
mov
pop
cli
in
ficomps
iret
mov
inc
std
jl
ror
pushf
xor
pop
or
dec
test
aad
and
daa
mov
aam
iret
mov
dec
cmc
ret
push
add
insl
jo
cltd
aas
rorl
iret
out
push
xor
les
rcl
inc
hlt
cwtl
mov
lret
push
xchg
inc
cs
movsb
push
fcmovu
dec
insb
mov
movsl
js
cmp
test
popa
mov
cmp
loope
rolb
xor
and
pop
jns
out
sbb
aas
mov
cmpsb
xchg
lods
push
jg
outsl
mov
cmp
mov
pushl
sbb
sub
fistps
lds
std
arpl
in
shl
in
mov
xchg
enter
fs
jae
cmovae
push
inc
inc
fisttps
mov
mov
xchg
popa
mov
mov
movsl
enter
sbb
xor
jmp
pop
jns
xor
dec
ljmp
fcom
xchg
pop
dec
aaa
jne
push
adc
pusha
mov
in
aaa
mov
imul
negl
jg
lods
sbb
pop
mov
add
mov
push
adc
fcoms
push
loop
push
dec
xor
add
aam
lds
in
jmp
stc
sbb
push
fidivrs
xlat
push
adc
into
cwtl
fsts
mov
sub
daa
scas
add
scas
dec
shl
cvttps2pi
mov
or
es
and
mov
push
scas
lea
adc
fwait
and
push
sub
in
jecxz
xchg
mov
dec
gs
loope
push
xchg
or
jge
dec
push
dec
inc
or
pop
inc
jmp
inc
xor
jae
jbe
mov
fistpl
popa
sub
rcrl
sub
mov
push
and
cld
mov
in
xor
mov
ret
sbb
xor
cwtl
enter
inc
dec
inc
sbb
sub
jge
cmc
movsl
ficomps
xchg
inc
mov
mov
flds
sbb
stos
jg
in
cmp
xchg
cltd
out
inc
in
xchg
and
sbbb
jecxz
pop
shrb
xchg
pusha
and
ljmp
decb
es
lock
jae
daa
sub
push
cmp
pop
sbb
or
jb
imul
fimull
push
popa
pop
jge
call
mov
fnsave
adc
jne
or
pop
test
mov
dec
mov
cmp
ljmp
or
and
or
ds
mov
pop
gs
or
sti
jae
ret
hlt
dec
mov
pop
mov
push
cs
imul
cltd
inc
stos
lods
mov
in
addr16
sti
dec
ja
sbb
cwtl
lds
fisttps
aaa
dec
add
push
outsl
mov
cwtl
aam
mov
pop
inc
mov
lret
fwait
xlat
sbb
xchg
mov
arpl
nop
cli
pop
or
or
fsubrl
mov
lods
push
jmp
add
pop
sti
dec
inc
adc
imul
xor
stos
testb
scas
sahf
loopne,pt
jp
jb
stos
push
cltd
loopne
inc
pop
adc
call
add
mov
out
xor
mov
cmp
arpl
mov
testl
fstps
mov
add
and
or
dec
cwtl
fldlg2
mov
ret
fstpl
divl
aad
test
mov
leave
inc
mov
aaa
push
cwtl
and
loope
or
jmp
mov
jae
xchg
data16
xor
scas
jo
cmp
inc
add
rcrb
out
in
push
cmp
add
in
lret
add
icebp
loop
mov
stos
push
or
mov
add
iret
int3
xchg
scas
popa
cltd
jb
jg
mov
cmc
mov
cmp
sub
dec
fisubs
and
add
sbb
adc
test
mov
xor
mov
pop
les
mov
pop
or
les
or
popf
pop
shrb
sbb
jle
repnz
lret
jge
mov
adc
test
add
pushf
mov
inc
iret
jbe
lret
and
fisubrs
xor
loop
xor
push
or
lock
inc
jno
or
xor
or
notl
iret
fiaddl
adc
nop
std
jmp
pop
addb
fiadds
adc
jmp
les
out
push
mov
add
lret
ror
out
mov
enter
sbb
aaa
cs
mov
insb
test
or
test
and
cld
das
cwtl
cltd
or
mov
loop
sub
push
ss
cmp
mov
lret
push
lea
ja
aas
jge
mov
push
popf
mov
push
sub
frstor
lods
cmp
or
test
adc
xlat
daa
adc
add
daa
es
stos
sahf
mov
scas
fdivp
insb
lea
aas
testb
fcom
scas
aad
shrb
movsb
mov
mov
push
fisttpll
int3
xchg
pop
lods
fstp
cmp
sbb
in
mov
jnp
aam
loope
pop
push
fdivl
xor
jp
das
add
xchg
cli
push
iret
es
call
je
outsb
cmp
xor
aas
dec
pop
mov
aad
fmull
and
cmpsb
mov
fildll
fildll
adc
xchg
inc
imul
jg
repz
jne
mov
lea
std
xchg
aam
jl
mov
jl
sub
pushf
in
sub
pop
mov
xor
out
sarb
call
js
cmp
sbb
aas
mov
psrad
decb
mov
je,pt
in
fs
lods
scas
in
scas
lret
mov
pop
lcall
jge
scas
sub
lock
push
and
bound
push
imul
jle
mov
insb
fucomi
mov
ds
repz
shl
mov
jbe
popl
es
jns
pop
sarb
mov
sbb
or
mov
ljmp
xor
clc
push
lret
add
dec
cmp
call
push
js
pop
clc
in
sbb
pop
in
neg
leave
mov
dec
and
jecxz
push
xchg
cmp
mov
add
inc
jne
jns
sbb
pop
push
lcall
sbb
cwtl
xor
dec
adc
int3
test
imul
ret
notb
mov
add
pop
dec
or
hlt
push
dec
dec
jge
iret
fnsave
stos
ret
fstpt
jae
aad
pop
test
faddp
mov
and
sbb
sub
or
push
or
flds
lea
test
add
and
clc
lods
stos
mov
outsl
push
adc
arpl
dec
mov
nop
rorl
mov
daa
incb
cmp
inc
repz
test
out
mov
pop
loop
movl
insb
outsb
fst
add
iret
pop
jle
xchg
push
ds
or
xor
test
adc
fsubrs
sahf
xchg
aas
inc
into
clc
mov
adc
rolb
ret
mov
cli
scas
sti
jb
movsb
out
adc
in
jns
sub
aad
adc
xchg
leave
scas
push
adc
mov
cpuid
mov
xlat
scas
mov
adc
icebp
shlb
pop
ja
push
push
fwait
add
pop
inc
adc
in
int
or
insb
mov
dec
cld
xor
mov
fwait
or
push
push
or
lahf
out
jmp
andl
cwtl
ret
jle
push
into
xor
clc
jne
cs
jecxz
add
mov
or
sahf
xchg
xrelease
dec
push
sbb
mov
mulb
jmp
cld
dec
jl
push
xchg
aad
ds
fsubr
inc
jecxz
test
andl
lods
ret
imul
mov
cld
xlat
aaa
pusha
and
aam
push
jge
inc
outsl
inc
test
cli
inc
xchg
push
nop
loopne
sbb
ss
cmp
cld
lods
xchg
fisubrl
gs
inc
adc
mov
mov
lahf
add
mov
xor
sbb
fidivrs
adc
jne
ss
mov
and
ljmp
dec
jbe
popf
out
xchg
sbb
lds
push
out
mov
mov
sarb
addb
adc
cld
scas
pop
mov
leave
sbb
mov
fs
stos
lcall
mov
xchg
inc
jae
sbb
mov
and
xor
mov
and
fwait
inc
adc
hlt
int3
ss
cwtl
aaa
jp
jecxz
cmc
ret
or
dec
xor
mov
inc
sbb
push
add
mov
shrl
aaa
test
fwait
xchg
imul
pushf
cli
scas
sub
push
or
loope,pt
pop
jp
mov
sbb
mov
pop
out
out
inc
mov
add
cld
jo
mov
scas
mov
pusha
lret
fs
xchg
fists
jno
sbb
popfw
add
mov
loop
mov
lea
repz
add
lcall
or
sbb
ud0
jmp
pop
push
push
adc
mov
jp
int
pop
into
push
pop
hlt
push
dec
push
inc
jno
sbb
or
mov
pop
inc
xchg
mov
cmc
mov
and
or
mov
sub
ljmp
ds
out
popa
xor
xchg
and
mov
mov
inc
test
incl
mov
xchg
push
add
jle
ljmp
mov
cmp
lods
or
pop
jmp
les
add
bound
repnz
in
pop
std
inc
mov
xchg
pop
cmp
daa
negl
arpl
mov
xchg
jmp
mov
push
out
shll
sbb
cmp
iret
push
leave
dec
inc
cli
ds
cmp
sbb
mov
ret
mov
fidivrs
cmp
jle
add
mov
jecxz
xor
xchg
add
jns
xchg
mov
lea
push
int
fs
ja
xchg
push
mov
ret
cmpb
mov
sbb
or
pop
test
inc
mov
push
aas
rcr
icebp
les
sbb
cmp
push
in
popa
test
in
and
adc
repz
xor
pusha
lcall
loop
nop
fnstenv
fldl
int
sti
add
adc
lahf
lods
or
add
cltd
je
jl
loop
out
ret
push
dec
loope
mov
shlb
push
in
addr16
repz
sbbb
scas
rcr
clc
popf
add
pop
push
iret
cltd
in
sahf
fmuls
int3
jns
rol
pop
cmp
xchg
adc
movsb
dec
jb
mov
das
shlb
cmpsb
hlt
pop
pop
test
inc
les
fs
movb
xchg
js
sbb
cs
xchg
lea
imul
dec
jl
add
inc
push
lahf
mov
mov
or
xor
mov
shlb
jmp
fstpt
leave
mov
sub
into
xchg
jg
lcall
mov
push
frstor
add
pusha
push
cltd
sbb
mov
rcl
mov
mov
adc
es
leave
or
nop
pop
push
loop
xchg
loop
test
aam
xchg
mov
sub
icebp
out
adc
cs
and
mov
sarb
jp
mov
and
mov
pop
cmp
mov
fmuls
lret
call
cwtl
sbb
jp
in
sub
mov
xchg
pusha
test
cmpsl
loop
sbb
push
cmc
out
cld
cmpl
andb
shr
mov
out
out
or
ds
dec
mov
xor
popl
mov
out
xchg
adc
mov
movsb
lea
dec
stos
dec
sub
sub
bound
loopne
mov
add
addr16
pop
in
ret
pop
mov
cltd
scas
push
adc
test
jno
mov
divl
ret
adc
testb
mov
mov
nop
pop
lret
cmpsb
sub
mov
xor
sbb
xlat
into
int
mov
and
inc
or
ja
jl
movsl
loope
and
imul
fsubrp
push
dec
or
std
add
nop
mov
movsb
add
adc
mov
sub
stos
jnp
iret
cmovo
cmp
decb
pop
icebp
hlt
mov
jae
sub
bnd
mov
or
mov
ret
out
ja
mov
rorl
jl
scas
inc
add
aad
fstl
push
clts
jge
jecxz
jo
pop
push
cmc
and
mov
adc
lcall
sti
xor
inc
shll
add
jae
lret
xor
sub
push
repnz
cmc
add
inc
outsb
pop
insl
jecxz
loop
mov
dec
adc
fmuls
in
pop
inc
fldt
dec
mov
aad
fmulp
in
lret
testb
cs
nop
pop
fs
out
sbb
push
sub
into
stos
repz
push
mov
movsl
push
push
xchg
repnz
leave
es
add
pop
sti
stos
jnp
mov
aam
mov
aaa
push
dec
aad
inc
pop
jae
push
dec
cltd
cmp
movl
mov
cltd
jns
decw
pusha
int
sbb
cmp
or
push
lret
xchg
or
ljmp
mov
mov
test
sub
push
call
pop
sub
mov
fs
sbb
mov
and
mov
sub
loop
out
sub
ret
xchg
test
xor
push
adc
mov
push
cmp
mov
sahf
js
push
pop
mov
cli
scas
xchg
jg
mov
into
fidivrl
cmpsl
sub
std
jg
cmpsl
and
jmp
test
mulb
push
test
cli
sub
add
jmpw
jb
mov
aam
subb
cmpsb
or
inc
xchg
xchg
pop
push
flds
adc
sbb
call
pop
sbb
data16
sbb
xchg
popf
sbb
jp
and
icebp
dec
enter
lret
add
pop
stos
xchg
mov
outsb
sar
mov
test
xor
seto
inc
mov
jb
dec
adc
xor
cli
daa
or
hlt
mov
add
mov
cs
dec
mov
pop
fwait
sub
pop
jmp
lds
cmc
push
cld
lret
mov
add
push
ja
jle
inc
es
test
dec
jae
and
mov
test
and
fs
mov
mov
push
push
pop
icebp
sbb
sub
xchg
out
jae
and
push
test
sbb
sbb
xchg
push
push
pop
cmp
lods
cmp
clc
pop
jg
mov
icebp
je
xchg
inc
xor
push
push
cmp
data16
inc
inc
xor
movsb
pop
xchg
je
inc
sarl
aad
jno
std
iret
xor
mov
movsl
mov
sub
mov
inc
adc
cmp
out
sub
mov
jno
lcall
fisubl
mov
push
push
lcall
jmp
push
xlat
mov
push
cmp
adc
out
lahf
mov
outsb
pop
jb
stc
enter
and
lods
insb
std
pushf
sbb
sbb
test
hlt
pop
mov
pop
enter
fisubrl
mov
out
test
inc
dec
push
mov
jo
loope
arpl
sbb
dec
dec
fstp
pop
cmp
movswl
adcl
mov
inc
outsl
dec
mov
sbb
sub
stc
arpl
std
xor
je
add
mov
and
mov
shl
add
push
repnz
es
jecxz
dec
dec
dec
push
cmpsl
cmp
adc
adc
sbb
test
cmpsb
outsl
enter
xchg
into
push
xchg
je
ss
aad
adc
js
push
outsl
ss
test
pop
jnp
or
cltd
or
push
mov
push
xchg
adc
nop
js
xor
cmp
sbbl
add
test
dec
out
or
mov
mov
sub
das
daa
call
xorl
addr16
out
mov
mov
xchg
inc
pop
loopne
inc
sbb
pop
add
loop
imul
xor
inc
push
mov
icebp
jbe
fistpl
repz
mov
jl
and
or
jae
mov
movsb
stos
mov
hlt
push
jno
mov
aad
lret
cli
mov
push
xor
fadd
lods
addl
out
cmp
mov
aam
add
pop
nop
stc
push
add
inc
movsl
insl
xor
cltd
or
cmpsl
cmp
test
jge
push
xchg
sarl
jl
imul
inc
pop
pop
aas
pop
ja
adc
and
nop
pop
sbb
pop
sbb
movsb
cmpsl
movsl
mov
sbb
jecxz
fsubrl
push
cld
js
dec
and
inc
jno
fdivl
xor
scas
imul
pop
cmc
test
cmp
cmp
inc
xlat
cvtdq2ps
in
repz
hlt
insl
lods
add
mov
cwtl
repz
cmp
inc
or
cmp
xchg
jnp
mov
fwait
push
pop
lret
test
daa
ret
int3
fildll
or
sbb
jns
dec
push
and
jecxz
js
xchg
lret
jbe
ds
stos
cwtl
repz
sub
hlt
mov
mov
dec
push
add
pop
xchg
dec
push
inc
sub
mov
out
lcall
and
rclb
jecxz
add
sub
shl
je
in
pop
mov
jns,pt
jbe
push
in
push
dec
sub
test
addr16
sahf
push
inc
jnp
repnz
addr16
pop
std
das
pop
xor
cmp
loope
std
clc
lcall
mov
gs
dec
imul
out
add
addr16
pop
mov
in
outsl
xchg
adc
adc
xorl
fstp
jnp
loope
aas
push
inc
push
mov
mov
das
mov
inc
lea
outsl
sub
shrb
iret
mov
loopne
loopne
ret
jle
mov
or
imul
inc
inc
sbb
adc
test
xchg
fwait
cmp
repz
imul
subl
hlt
lret
mov
mov
mov
xchg
jl
pushf
maskmovq
testl
fs
popf
sub
fistl
jns
fcomps
or
sbb
divb
aam
xchg
test
movsb
or
xor
pushf
mov
mov
mov
es
out
and
test
aad
fs
or
notl
jg
lahf
cmp
mov
and
cmp
outsb
ficomps
je
add
xchg
jno
div
push
dec
xchg
push
xor
xor
mov
sahf
addl
xor
adcb
fwait
movsb
push
imul
cwtl
into
lea
shl
and
outsl
lods
jg
xchg
shl
movsl
lcall
fldl
cmp
pop
popa
pop
cmp
les
push
mov
or
push
out
sub
push
xor
fstl
fsubl
jo
or
into
ficoms
add
cmp
push
jae
loop
jno
pop
call
add
in
imul
in
sub
lahf
sbb
inc
mov
mov
mov
loop
mov
mov
mov
bound
cli
or
roll
cmp
frstor
xor
dec
pop
xor
mov
loope
out
or
mov
loop,pn
je
or
loop
popf
push
pop
mov
shll
call
out
inc
cli
hlt
xor
movsb
arpl
enter
inc
imul
pushf
aad
adc
mov
inc
cmp
add
pop
mov
jp
sarb
xor
mov
out
xchg
push
pop
out
cltd
cmpsl
gs
test
das
fistpll
xchg
and
sub
stos
fst
into
mov
jno
das
xchg
cmp
int3
aas
lds
arpl
fisubl
mov
lods
les
cltd
divb
cmpl
movsb
sbbb
daa
push
arpl
sub
into
jge
sbb
clc
call
stos
mov
sub
dec
push
lahf
sbb
fstps
cltd
cmp
xchg
subl
push
out
push
mov
adc
mov
xchg
mov
jne
shr
lahf
mov
lods
dec
pop
hlt
xor
insb
add
int3
push
push
lds
dec
xor
rorl
pop
push
mov
xchg
mov
jno
mov
clc
jae
repz
in
add
sbb
ret
ret
jp
mov
repnz
and
div
xchg
popf
dec
je
push
add
add
or
mov
xchg
inc
sti
ret
movsb
xchg
pop
pop
pop
mov
sarl
clc
xchg
icebp
xchg
iret
rcl
and
in
es
add
mov
jno
insl
cmp
bound
or
pop
jp,pn
out
pusha
mov
cmpsl
sub
arpl
stc
sbb
lret
aam
sti
xor
movsl
ret
popa
lock
dec
negb
rcrl
adc
push
lds
mov
mov
mov
adc
aad
add
ror
sarl
add
xchg
pop
mov
mov
push
mov
es
inc
adc
cmp
sbb
inc
mov
push
idivb
xor
jmp
jb
add
dec
xchg
lods
add
push
add
sub
mov
sbb
andb
jns
aam
or
cmpb
imul
xchg
cmp
fisttps
fisttps
dec
cwtl
dec
adc
mov
pop
mov
xor
jb
cs
cli
xchg
cwtl
mov
xchg
inc
sbb
lock
push
pop
add
dec
add
test
int3
cltd
jne
subb
mov
dec
out
mov
dec
xlat
push
inc
xchg
sti
lcall
sarb
sbb
sbb
jno
jo
or
pushf
in
pop
pop
jle
add
bnd
add
movsb
iret
into
bound
jbe
mov
push
lea
out
insl
cli
rolb
imul
add
insl
test
nop
pop
nop
mov
mov
orw
dec
cmp
ret
push
roll
or
int3
enter
sbb
mov
insb
jmp
cmp
or
popa
push
inc
cli
mov
cld
js
push
arpl
dec
data16
push
xchg
sub
mov
jp
and
push
pop
add
iret
or
sti
push
lds
mov
mov
mov
mov
mov
je
hlt
mov
ret
xchg
cmp
shlb
push
test
pop
dec
jne
hlt
aas
add
pop
inc
cwtl
rclb
mov
push
lods
xchg
xor
xrelease
adc
xorl
dec
pusha
daa
mov
sub
loope
cwtl
mov
stos
mov
cltd
xchg
lahf
pop
iret
jl
loop
in
cmc
or
jo
faddl
into
rcrb
test
sahf
out
cwtl
xor
jg
push
cmp
cmp
scas
push
pushf
sbb
xchg
inc
push
rol
jbe
fcomps
stos
stos
imul
add
dec
and
push
es
jo
mov
sbb
repz
or
and
add
addr16
mov
movsb
rol
idiv
pop
insl
rcl
xlat
mov
test
sahf
aad
enter
aad
jecxz
jo
xlat
fiaddl
add
xor
repnz
cmp
into
repz
xchg
cmpb
inc
popa
sbb
es
dec
or
outsl
lea
inc
or
inc
push
test
mov
sub
scas
loopne
sbb
or
cmc
mov
xor
push
push
inc
movsb
filds
mov
aad
pop
rcll
outsb
dec
hlt
jmp
mov
ljmp
cmp
cld
pusha
push
imul
aaa
sahf
pushf
das
mov
test
rcr
pop
icebp
lahf
mov
movsl
add
ds
les
jp
dec
ja
cmp
filds
dec
es
in
sub
jns
jle
jecxz
ficoml
dec
das
clc
incb
xor
mov
out
push
push
out
inc
das
mov
daa
pop
push
inc
lahf
sarl
sti
bound
call
mov
mov
loopne
imul
mov
cmp
jb
pop
sbb
or
fs
cwtl
pop
inc
inc
ficomps
jbe
mov
mov
sub
hlt
jge
lea
xor
push
dec
xor
jge
outsb
in
or
mov
push
int
fldt
out
push
lods
loopne
test
rorb
adc
push
je
jne
adc
clc
and
or
mov
into
pop
inc
sahf
mov
mov
sbb
pop
mov
and
loop
xchg
lods
pusha
fistl
pop
in
inc
daa
in
pop
push
push
es
jo
fs
stc
mov
jo
and
ljmp
xor
push
loopne
mov
adc
mov
sbb
xor
fnstenv
insl
cwtl
mov
push
jmp
test
sub
pop
cmpsb
lret
xor
dec
lea
push
arpl
in
and
or
out
xchg
lcall
push
iret
divb
into
rcrb
jg
pop
or
gs
pop
out
add
add
ss
pusha
inc
test
sarl
in
rclb
xchg
xor
xor
ljmp
popf
aad
sbb
pop
in
or
loop
lods
fsubl
pop
and
mov
xchg
cmpl
jno
xor
movsl
and
mov
cmp
mov
test
cmp
in
rorl
stc
xchg
fisttpl
ljmp
jns
rcl
cmp
hlt
aas
aas
pop
inc
push
test
mov
sbb
loopne
imul
sub
mov
mov
je
rorl
jae
popf
push
outsb
ret
ret
fcmovnbe
pusha
or
dec
popa
push
pushf
mov
dec
cmp
lock
int
add
cld
jmp
pop
ffree
or
sub
lahf
add
dec
jg
or
jo
mov
push
xor
imul
cmp
jno
mov
mov
lret
and
sub
jae
xchg
jle
ljmp
int3
mov
jmp
xchg
push
mov
push
fcmovne
fcmovb
mov
sub
mov
insl
rcr
pop
in
icebp
push
mov
js
sub
mov
xor
cwtl
outsb
mov
loopne
lret
aas
xor
pop
xchg
pop
jb
rolb
fdivrs
idivb
in
mov
jmp
imul
sbb
arpl
js
shrl
inc
cld
fsubs
loope
xchg
or
xchg
push
or
cmp
push
xchg
ja
adc
push
scas
movsb
das
ds
adc
sahf
icebp
push
add
mov
jp
xchg
ret
lods
pusha
add
adc
mov
mov
shll
jns
push
mov
inc
cmpsb
lahf
push
and
pop
or
push
mov
dec
push
call
cli
xor
imul
pusha
push
test
or
push
ss
jl
sbb
aas
push
out
arpl
repz
inc
pop
push
aas
ss
repz
xor
hlt
push
pop
mov
mov
cmp
mov
push
shr
mov
cli
cmp
repnz
aaa
psubd
mov
jl
lea
sub
fucom
or
lds
xorb
adc
push
inc
mov
loope
pop
push
and
dec
pop
inc
xor
xchg
or
cmc
lcall
rcll
movsl
insb
imul
pop
jb
and
sub
out
jns
testb
mov
pushf
bound
dec
mov
xor
xor
or
sahf
jge
ss
das
jp
mov
sbb
insb
cli
inc
lods
push
cli
shrl
pushf
sbb
lcall
into
jecxz
add
adc
arpl
xor
scas
pop
or
sbb
arpl
adc
or
mov
loopne
lahf
mov
jb
add
mov
rcl
cld
cmp
inc
out
add
cmpl
mov
add
loop
mov
pop
xchg
push
clc
mov
je
dec
mov
adcb
ja
inc
outsl
jl
and
jmp
cmp
ret
call
fldcw
stos
dec
addl
stos
lock
adc
es
mov
out
push
faddl
es
mov
ss
push
daa
jo
cltd
add
sahf
pop
cli
inc
inc
insb
repnz
clc
jmp
mov
lds
jnp
notb
jmp
and
mov
adc
cmp
negb
cld
out
aaa
test
out
fdivrs
and
and
ficompl
and
fsubrl
scas
je
jp
sbb
imul
xchg
mov
xchg
lock
sub
insl
xchg
push
mov
cmp
pop
fistpll
pop
inc
neg
arpl
xchg
jmp
call
cmc
mov
iret
jp
mov
sub
inc
into
sub
inc
mov
sub
mov
add
mov
and
out
pop
orl
scas
in
cmp
push
add
test
cmpsb
test
arpl
push
and
jg,pn
cmp
jg
aaa
mov
cmp
or
jns
pop
mov
std
gs
cmp
daa
lds
scas
push
outsb
stos
mov
sub
mov
add
rcrb
dec
mov
icebp
adc
or
mov
enter
mov
aam
movsl
pusha
inc
push
enter
push
jle
pop
and
pop
sbb
les
sti
sub
inc
subl
mov
stos
xchg
jle
push
test
pusha
dec
aaa
es
cld
add
sbb
mov
sbb
test
xor
call
cmp
or
cmp
int3
sbb
lcall
movsb
pop
inc
pop
or
pop
aam
pop
push
jl
mov
jge
lock
pop
stos
nop
add
das
lea
mov
jae
into
dec
add
scas
mov
cmp
fdivr
inc
mov
mov
and
mov
mov
test
add
xor
pop
in
jae
call
sarl
test
lahf
xor
cmp
dec
scas
mov
mov
leave
ja
xchg
out
and
mov
dec
xchg
push
out
mov
cmc
sarl
addb
cmpxchg
push
and
popf
xchg
sub
mov
popa
imul
shll
mov
iret
ror
in
test
pop
sbb
subl
test
pop
push
inc
cli
roll
inc
and
lahf
cmp
push
push
mov
inc
mov
push
rcr
lcall
cmp
repnz
inc
shll
xor
mov
andps
andl
clc
xchg
loopne
loop
inc
jecxz
aas
pop
mov
jmp
lock
int
pop
xchg
cmpsb
mov
and
ret
testb
outsb
mov
and
or
loop
mov
xor
sbbb
outsb
xchg
mulb
lock
cmpsb
rcrl
insl
sub
int3
ret
in
and
lods
inc
sub
bnd
inc
test
test
xchg
mov
jae
mov
dec
sti
and
or
call
in
xchg
test
xor
mov
mov
pop
cmc
push
inc
insb
or
ljmp
mov
add
mulps
cwtl
int
jmp
hlt
test
jo
outsl
and
cld
push
stos
pop
cmpsb
add
gs
test
je
and
pop
dec
arpl
orb
push
mov
jno
imulb
subl
inc
xor
push
xchg
jbe
jecxz
and
jmp
notb
or
inc
test
lcall
popa
jo
sub
loop
notl
pop
inc
data16
sub
sub
sub
repnz
js
pop
sub
pop
in
icebp
icebp
xchg
int
bound
cld
add
mov
pop
addr16
lock
add
daa
push
scas
dec
jl
lret
adc
call
jne
mov
adc
jle
fnstsw
jns
andb
into
sub
xchg
sbb
rcll
subl
xchg
clc
xchg
or
test
mov
xlat
mov
test
aaa
gs
clc
mov
xor
imul
mov
cld
lods
shlb
sbb
aad
inc
inc
xlat
adc
sbb
stos
pop
pop
sbbl
or
mov
ret
cwtl
push
lahf
dec
mov
sub
ficoms
es
adc
es
push
jge
imul
cmp
dec
mov
cmc
push
push
mov
repnz
xor
inc
cltd
push
jp
jno
aaa
dec
test
aas
mov
xchg
inc
aaa
jo
mov
sbbl
out
jnp
fisubl
inc
mov
mov
jns
xlat
mov
loopne
xchg
call
sbb
aaa
or
push
test
lock
jo
jne
or
push
xlat
call
mov
cmp
push
addb
scas
cmp
and
cld
in
ret
dec
xchg
jmp
in
pop
enter
jae
jns
stc
lods
add
jne
push
jmp
hlt
jle
pushf
ja
jle
add
cmp
imul
cltd
ret
gs
xchg
cltd
pusha
subb
bound
xchg
outsb
push
inc
lcall
insb
mov
xchg
pop
and
mov
fwait
xor
in
gs
xor
inc
scas
out
cmp
clc
jbe
xchg
jae
ljmp
ret
inc
je
add
mov
fwait
sub
lods
mov
pop
cmp
add
sub
lret
jo
jg
mov
ljmp
pop
je
fdivs
int
cmp
sub
xor
lret
and
stc
popf
in
inc
mov
idiv
subl
xlat
mov
push
cwtl
mov
inc
nop
fcmove
mov
mov
adc
test
jne
push
inc
cmp
std
dec
fstl
popf
int3
pop
cs
outsl
jnp
dec
adc
decb
pop
out
dec
repz
mov
ds
fidivrs
lret
inc
das
hlt
push
popa
movb
leave
mov
mov
test
xchg
mov
and
mov
shl
repnz
pop
sahf
test
cmp
sbb
mov
pop
or
or
out
cs
in
fdivp
jecxz
push
cmp
mov
movsb
cld
jmp
inc
xor
push
and
imul
in
fldenv
addr16
lods
push
inc
adc
cmp
mov
sti
mov
or
pop
hlt
inc
push
add
sub
test
add
jl
mov
and
lahf
insl
mov
pop
push
lods
adc
mov
fwait
jmp
bsf
es
sub
xor
imul
push
xor
mov
rcl
inc
or
xor
mov
shr
inc
sti
mov
lret
adc
fs
aaa
cmp
jo
jmp
ret
or
and
or
int3
dec
cmp
sarb
add
jno
les
mov
pusha
int
data16
cmp
gs
xchg
push
push
cwtl
lret
orb
mov
push
shrl
mov
dec
fisttpl
repnz
rcrw
popa
sub
test
pop
test
imul
sbb
cmovns
add
sarl
or
inc
dec
and
cltd
fcmovu
je
stc
pusha
push
cs
js
dec
sbb
bound
xchg
push
dec
bound
test
and
ljmp
mov
pusha
mov
push
icebp
sub
in
mov
sbb
adc
ljmp
int
icebp
add
dec
fsubl
adc
sbb
rol
hlt
push
cmpsb
pusha
lock
repz
stc
int3
inc
es
aam
fidivs
jno
sub
fnsave
ja,pt
adc
mov
fldcw
movsb
xchg
or
jle
cmp
jns
jle
sbb
in
aaa
dec
xor
ss
ljmp
test
add
and
lock
fxch
into
imul
adc
mov
mov
lahf
cmp
inc
mov
mov
mov
test
orb
xchg
cltd
scas
std
adc
mov
inc
mov
int
xor
loopne
stos
and
repnz
jmp
push
sbb
icebp
imul
or
loopne
icebp
ljmp
jecxz
and
movsb
insb
jns
leave
cmpsb
xor
psrlw
sbb
sub
push
test
lea
test
clc
lds
rclb
shlb
ds
aad
adc
enter
mov
in
mov
fnstenv
mov
xlat
xchg
xchg
scas
in
std
or
jl
pop
and
jae
mov
mov
dec
cltd
xchg
push
xor
push
pop
pop
mov
or
xchg
aam
pop
push
or
sub
pusha
sub
jl
jns
pusha
aad
sbb
and
idivb
cmp
scas
leave
movsb
in
fidivrl
add
push
jp
iret
mov
std
xor
popf
ret
mov
loopne
mov
inc
shll
sbb
sub
mov
cmpsb
xchg
add
mov
fucomi
xor
loopne
mov
andb
sub
lahf
les
arpl
mov
mov
lahf
pusha
pop
subl
push
in
push
mov
mov
push
cmp
int3
repz
xchg
adc
mov
jl
dec
adc
out
pop
push
test
mov
iret
lods
xchg
or
inc
push
pop
pop
dec
aas
hlt
das
push
sub
pop
pop
loope
stos
imul
and
dec
cmpsl
push
xchg
adc
out
push
mov
jo
push
fistps
imul
aaa
push
and
sbb
inc
jb
out
and
test
mov
imul
mov
mov
test
movsb
add
or
cmp
lret
mov
fwait
lds
push
dec
test
xor
adc
sti
adc
int3
inc
adc
adc
arpl
movsb
pop
pop
stos
pop
xor
push
cmp
sbb
cld
lds
fsubrs
lret
lahf
imul
jns
add
pushf
xor
xor
roll
out
dec
aas
dec
std
sbb
mov
push
fninit
scas
es
push
mov
sub
xor
add
mov
jle
mov
push
xor
mov
loop
inc
mov
cmpsb
and
lret
mov
sbb
mov
loopne
insb
add
clc
cmpsl
mov
in
push
addr16
inc
adc
adc
dec
sar
orl
mov
xlat
jne
jae
mov
xchg
test
mov
inc
mov
sub
push
pop
mov
imul
movsb
in
cwtl
lret
cltd
mov
stos
cmp
ss
and
add
es
pop
pop
adc
fwait
sub
cmpb
xchg
push
dec
daa
bound
fdivr
incl
nop
sub
inc
pushf
sbb
dec
rclb
xlat
mov
loop
xchg
mov
popa
dec
es
or
cmp
pop
push
inc
ja
cmp
or
dec
out
push
daa
popa
mov
lods
dec
push
dec
mov
inc
mov
mov
push
push
out
mov
xor
ret
jne
sub
stc
clc
insl
mov
jp
js
sbb
push
jnp
or
inc
rol
lods
stos
cmc
imul
sbb
sbb
mov
dec
push
sti
fimull
outsb
shrl
xchg
and
jns
xor
sbb
xchg
jo
outsb
fstpl
in
stc
or
in
test
sub
insb
xchg
push
or
mov
mov
add
mov
ret
mov
mov
dec
inc
ficoms
enter
movb
pop
shl
cld
mov
dec
lcall
fisubs
push
jge,pn
scas
rolb
lret
mov
call
push
cltd
repz
xor
das
into
dec
inc
out
stos
push
or
xchg
cmpsb
cmpsb
mov
ret
fwait
data16
push
and
cmp
push
sub
push
aam
xor
ret
fbld
das
xchg
and
pop
mov
popa
adc
ficomps
inc
push
xor
fwait
ljmp
cmpsb
xchg
sbb
lods
pop
push
jge
add
out
int3
sahf
xchg
add
fwait
test
rclb
imul
push
cwtl
in
mov
xchg
cs
fwait
pushf
jmp
repnz
inc
cmp
inc
mov
xor
fisubrs
idivl
jecxz
movsb
inc
fmull
jbe
ljmp
les
icebp
sbb
xchg
jo
mov
addb
xor
lahf
or
xchg
mov
ljmp
or
mov
jl
and
data16
push
aam
psubq
jns
mov
adc
inc
addr16
lods
cmp
fiaddl
out
or
push
decb
and
cmp
mov
pop
imul
cmpsb
adc
test
fwait
sahf
or
and
add
sub
cmp
jmp
gs
data16
addr16
aad
lock
inc
mov
ja
jno
rcl
fwait
out
and
jmp
notl
repnz
push
shll
cld
imul
fs
cmp
mov
push
test
mov
shlb
or
cmc
xchg
mov
call
inc
xchg
dec
ss
mov
inc
add
enter
pushf
into
incb
push
add
xchg
adc
rolb
arpl
shrb
icebp
lcall
sar
mov
pop
test
test
cmp
adc
jecxz
mov
adc
daa
push
sbb
orl
lods
sbb
xor
inc
enter
push
out
mov
addr16
addl
insb
sbb
lds
sbb
das
mov
cmc
repnz
push
imul
popf
rorl
add
sub
enter
int3
ja
imul
mov
lock
pop
mov
decl
inc
fs
cwtl
lret
ret
adc
jno
addr16
ljmp
mov
push
and
mov
insl
jnp
incl
xchg
gs
test
mov
xor
mov
lcall
repz
jl
ret
jbe
arpl
jmp
xchg
lods
sub
roll
inc
push
imul
mov
mov
mov
aad
mov
je
repz
mov
push
fldenv
cmp
xor
cmp
xor
sbb
mov
sub
cmc
pop
pop
int
movsl
inc
out
pop
mov
cmp
lret
adc
lock
mov
or
pop
and
pushf
inc
sarl
or
outsl
lea
or
push
push
jge
dec
fmulp
push
xchg
js
mov
sbb
jp
inc
inc
push
push
xor
sbb
and
cmp
sbb
out
fildl
inc
jmp
fstps
inc
adc
out
test
fdivrs
cwtl
jae
in
hlt
aas
cmc
pusha
movsb
push
test
cld
push
imul
adc
rolb
jg
inc
sbb
cmp
xor
inc
jle
xor
sub
scas
pusha
cmp
iret
cmp
and
mull
jle
sbb
mov
jne
idivb
add
sbb
repz
push
sbb
or
pusha
cmpsl
stos
popa
jmp
bound
sbb
jp
adc
movsb
mov
pusha
sahf
pop
lods
es
pop
fs
repz
sbbl
gs
jo
dec
mov
sub
cli
push
jb
fcompl
xchg
mov
adc
stos
lret
sarb
cwtl
push
fldenv
loopne
fiaddl
je
sub
enter
xlat
dec
jl
imul
lds
test
adc
fimuls
jnp
in
push
mov
rolb
imul
or
xchg
mov
xor
sub
push
mov
dec
lahf
lds
enter
mov
pop
push
mov
aam
insl
and
fidivs
hlt
dec
sbb
daa
cli
outsl
mov
xchg
mov
dec
in
jmp
hlt
sbb
mov
inc
je
sub
divb
adc
sbb
jo
clc
add
dec
gs
imul
rcll
cmp
fcoml
sub
push
notl
mov
dec
lods
fwait
push
movsb
sub
and
stos
js
leave
jmp
rolb
test
icebp
in
ss
push
dec
cmp
push
sahf
stc
inc
divl
aad
xchg
sarl
lods
add
push
aaa
gs
lcall
inc
or
cli
pop
in
andb
adc
push
ret
filds
xchg
gs
insl
fmull
in
jb
rorb
add
int
jp
popf
cltd
mulb
xchg
leave
fstpt
aad
xchg
in
psrlw
mov
and
mov
fsubp
adc
lods
insb
cmp
push
jae
lahf
scas
jge
aaa
or
cwtl
imul
cmpsb
das
iret
movsb
lret
jne
cmp
inc
icebp
ds
mov
aas
stos
sahf
mov
dec
xor
sbb
call
push
and
ret
sub
jecxz
stos
shll
xor
ror
mov
pop
mov
sub
popa
jle
inc
imul
jl
add
imul
andb
imul
cmpsb
inc
mov
int
sbb
data16
or
xchg
jge
xchg
xchg
leave
jecxz
xchg
cmpsl
scas
adc
loope
pop
xor
fdivp
sbb
jno
pop
mov
push
lret
fcoms
cld
cs
daa
inc
fwait
add
jge
adc
gs
cmp
scas
rorl
lret
sbb
js
add
jb
mov
orb
fsts
push
dec
and
xchg
pop
jns
into
xchg
es
xchg
sub
lds
xor
dec
pop
jno
mov
sub
ljmp
out
bound
mov
mov
rcl
fs
movsl
bound
mov
xorb
mov
in
mov
pop
push
arpl
insl
test
sahf
xchg
sti
bound
shr
repz
stc
add
push
imul
and
pop
inc
xchg
outsb
loop
sub
mov
sbb
mov
add
pusha
pop
lret
pop
mov
sahf
scas
push
in
pop
cmc
outsb
test
dec
sti
rcl
sbb
push
repnz
mov
das
bound
add
out
dec
pop
xchg
sbb
jmp
loop
push
and
imul
es
fnstsw
out
cmp
icebp
std
sbb
sub
aaa
shl
std
cmp
loop
rdtsc
sub
cmpsb
std
xorb
popa
xor
lcall
nop
shl
hlt
mov
push
and
pushf
push
dec
idiv
pop
jmp
fwait
adc
pop
sub
sub
pop
fsubr
add
out
pop
dec
jae
xchg
insb
push
mov
mov
cltd
out
sub
in
dec
mov
push
or
stos
imul
idiv
aam
iret
inc
jno
scas
and
stc
add
pop
fs
test
xchg
jle
into
mov
inc
lods
ss
inc
dec
mov
jo
push
cmp
jno
movsb
mov
dec
mov
xchg
xchg
sub
xchg
dec
pop
rol
sbb
lret
adc
mov
js
test
jp
push
pop
mov
nop
pop
pop
xor
mov
pop
cli
out
push
outsb
dec
icebp
pop
test
push
pop
out
data16
rcrl
or
mov
jbe
rolb
clc
test
imul
xchg
hlt
mov
sub
dec
or
int3
xchg
xchg
cmp
push
sbb
dec
subl
xchg
push
les
jmp
cmp
sahf
or
pop
dec
add
shl
sahf
inc
xor
out
in
scas
mov
scas
mov
iret
iret
push
jmp
inc
mov
xor
sbb
and
cmp
add
call
notb
js
xchg
add
xchg
cs
adc
or
cmp
test
mov
ljmp
fisubl
or
and
lods
cwtl
xor
popa
sub
xchg
cmp
scas
xorb
push
sbbb
leave
sub
test
push
lock
out
add
mov
jp
rcrl
sbb
cmpb
sub
test
mov
mov
jns
stos
push
movl
pushfw
dec
mov
iret
cmp
cmpsb
popf
ret
mov
imul
lods
into
pop
or
std
jl
cs
cmp
xchg
js
cmc
push
in
add
adc
adc
lock
jge
add
stos
in
xchg
push
scas
dec
push
sub
je
mov
sahf
cmp
sbb
and
pushf
es
loopne
sbb
mov
in
mov
inc
xor
xor
cmp
ljmp
je
sub
mov
outsb
cmp
xor
fwait
mov
cmc
adc
fistpl
popf
enter
fsubr
fsubr
or
imul
aaa
adc
adc
cld
adc
repnz
xchg
xchg
dec
loopne
mov
lcall
lock
or
fdivl
dec
sbb
push
xchg
in
test
int
out
imul
xchg
ret
scas
cmp
push
and
dec
pop
xorl
jae
dec
ffree
sub
mov
mov
je
push
jmp
jbe
lea
sbb
sbb
mov
aad
inc
push
mov
gs
or
inc
push
fwait
push
das
or
pusha
adc
xor
into
inc
addl
sub
arpl
dec
xchg
aaa
scas
xor
sbbl
fcomps
dec
jecxz
mov
addb
jmp
pop
push
ret
push
mov
cmp
fnstsw
jne
inc
mov
sub
and
xor
mov
fimull
loopne
and
or
inc
push
ss
add
fwait
mov
mov
mov
cmpl
cmp
outsl
push
std
enter
es
mov
int3
push
inc
fwait
pushf
push
out
mulb
sub
push
fldcw
mov
loop
push
mov
mov
ret
subb
data16
fld
cmpsl
or
sahf
add
xchg
add
je
xchg
addr16
cwtl
adc
hlt
jo
xchg
pop
push
insb
sub
addb
movsb
xchg
outsl
xchg
pop
or
and
sbb
or
leave
insl
fists
add
xchg
mov
std
bound
popa
imul
inc
jp
lods
fldl
pop
sub
push
ret
push
or
jo
shl
cmp
fistl
cmpb
ja
mov
cmp
xlat
in
test
lock
cmp
popf
mov
fs
mov
xor
jnp
lret
mov
insl
cmp
lret
inc
push
out
jp
lcall
leave
sub
mov
sbb
fwait
inc
push
dec
add
mov
lcall
je
cli
into
jmp
int3
mov
adc
in
rolb
jg
test
repz
mov
adc
in
cmp
and
mov
sub
fld
icebp
push
lods
mov
mov
add
jp
fs
fisttps
and
sbb
out
gs
int3
insb
cmp
or
xor
sahf
push
dec
pop
cmp
into
cmpl
sahf
or
mov
lret
adc
stos
in
cltd
adc
shr
pop
lods
pop
add
shrl
mov
jle
sahf
loope
xor
push
xor
dec
and
dec
lea
test
aad
adc
enter
ss
or
xorl
mull
mov
mov
pop
stc
mov
push
inc
repnz
dec
test
mov
int3
loope
sub
inc
mov
adc
fsubr
jecxz
jg
gs
cmp
hlt
jmp
incl
jb
sahf
aas
shlb
add
and
pop
mov
test
mov
pop
loope
adc
les
lret
push
dec
js
pop
add
cmpsl
idiv
cmp
dec
xchg
jo
xor
push
mov
out
cmpsl
movsl
mov
enter
push
les
test
ret
fwait
mov
cmpsb
mov
stc
mov
fwait
fwait
mov
xchg
testl
xchg
inc
sbb
mov
pop
jb
fldcw
mov
cmovl
shl
in
insl
movsb
aaa
pop
aas
icebp
arpl
ret
dec
ljmp
data16
xor
popa
add
or
bound
shll
scas
fdivrs
jmp
lret
into
mov
jae
xor
gs
movb
jae
cltd
jl
loop
sahf
mov
xlat
addr16
xchg
cmp
outsl
leave
outsb
testl
xor
push
cli
pop
aaa
movsb
push
shll
sahf
imul
push
inc
es
inc
loopne
push
repz
mov
pop
mov
adc
mov
loopne
push
xor
stos
push
push
out
arpl
ret
push
adc
in
fnstcw
rolb
cltd
fucompp
loopne
cmp
push
iret
mov
pop
fistpll
adc
dec
dec
fldenv
inc
jo
dec
mov
stos
mov
test
lock
imul
push
mov
lods
inc
sbb
and
sub
fwait
xlat
pop
imul
jb
aad
test
push
icebp
lret
mov
aam
mov
or
mov
add
into
lds
lret
ss
pop
test
out
into
cs
je
pop
js
scas
dec
ja
out
adc
and
pop
push
dec
sahf
sub
insl
js
dec
xor
test
inc
out
mov
imul
cwtl
mov
sub
aam
test
mov
xor
bound
rcr
loope
icebp
mov
fiaddl
sbb
dec
repz
pop
ds
adc
dec
movsb
mov
push
jno
rorl
outsl
pop
xorl
inc
frstor
sub
and
pop
ss
or
mov
mov
or
outsl
cmp
mov
sub
dec
ret
or
adc
push
sti
int3
cwtl
mov
mov
jnp
jno
jb
and
sti
outsl
mov
fwait
push
mov
out
ljmp
adc
sarl
xchg
roll
rcr
sbb
or
sbb
adc
imul
fmulp
lret
or
call
ja
mov
dec
bound
stos
jo
push
adc
or
mov
dec
ret
inc
adc
ja
adc
add
push
icebp
mov
inc
adcl
rsm
shlb
fisubl
and
jae
lahf
jb
hlt
adc
push
outsl
mov
aas
push
mov
imul
testl
lods
add
popa
push
clc
shlb
pusha
in
icebp
cmpsb
push
inc
mov
mov
xchg
dec
loope
add
out
pusha
add
lahf
pusha
and
test
sbb
pop
mov
das
xlat
xchg
cwtl
rclb
cltd
imul
push
rorb
ret
std
xchg
in
push
xor
jo
ret
adc
lods
mov
mov
les
mov
ja
adc
test
pusha
xchg
sbb
int3
test
jl
cmp
ds
mov
adcb
and
imul
push
aaa
xlat
jne
lahf
and
aam
popa
pop
inc
and
mov
jmp
iret
mov
cwtl
scas
insb
insl
mov
jmp
sub
in
dec
jae
in
push
xor
inc
mov
sub
fdivl
subl
and
pop
sub
push
xchg
jae
je
jb
cmpsl
adc
mov
aas
sub
mov
mov
nop
inc
out
outsl
mov
sub
push
push
mov
fnstsw
lock
or
mov
lock
mov
loopne
dec
xor
popa
aam
out
dec
test
add
push
je
rorb
loope
xchg
out
je
mov
test
test
xchg
test
xor
jge
stos
aad
pop
imul
cs
xor
int3
jae
adc
iret
pop
cld
ja
mov
and
insl
dec
jno
repz
mov
stos
mov
test
xchg
scas
mov
fnsave
mov
push
sti
xchg
push
fcmovne
fwait
ss
xor
loope
and
and
js
daa
jle
das
out
adc
loopne
into
test
xlat
ss
jl
rcrl
or
clc
jb
test
int
nop
jl
ss
push
insl
test
adc
xor
pop
push
popa
out
inc
jg
jp
das
push
adc
loop
pop
jnp
pop
dec
out
or
fisubs
pop
js
jg
rcll
push
shlb
mov
incl
enter
mov
jge
scas
dec
lcall
fsubr
add
xchg
test
push
inc
das
mov
mov
mov
nop
pusha
adc
xchg
mov
mov
push
push
inc
xor
lds
shlb
xor
push
pusha
adc
pmaxsw
mov
shrl
dec
addr16
sbb
add
and
mov
pusha
adc
lods
lret
outsl
adc
lcall
pop
in
mov
mov
rcrb
repz
imull
or
mov
adc
test
aam
pop
orl
pxor
xor
push
dec
pop
fldenv
push
repnz
push
xchg
and
jle
lock
push
push
adc
jno
insb
dec
dec
dec
leave
addr16
inc
in
push
jnp
sahf
sub
movsb
ss
test
repnz
xchg
sbb
pop
pop
gs
push
insl
push
leave
push
les
dec
pop
daa
adc
jg
insb
idivb
add
scas
jg
lods
jmp
sub
addr16
xchg
inc
mov
fnstsw
adc
out
and
xlat
xlat
mov
enterw
lret
push
stos
jmp
mov
inc
sub
leave
jl
aaa
mov
mov
scas
nop
and
cmp
jae
jne
lods
leave
mov
and
push
sarl
sub
push
aad
nop
int3
outsb
repnz
incb
dec
xchg
aam
mov
xchg
and
addr16
adc
aad
imul
pop
push
and
mov
leave
push
sbb
bound
js
js
push
mov
dec
test
push
dec
add
sub
jmp
ss
std
and
movsb
cmp
inc
mov
lcall
movsl
lock
jge
loopne
pop
fs
addr16
sub
call
xor
mov
mov
pop
ror
pop
or
cmp
insl
stos
adc
sti
add
insl
and
aas
stos
in
mov
xadd
push
cmp
jmp
sar
mov
or
dec
add
xor
fists
imul
or
pop
pusha
dec
fnsave
inc
adcl
in
cmpsb
inc
mov
ret
mov
dec
lcall
dec
and
xchg
add
shl
paddb
pop
imul
insb
filds
imul
jl
lret
pshufw
dec
mov
imul
popf
and
or
jge
mov
pop
xchg
aas
fsubs
lret
push
pop
adcb
stc
xchg
push
inc
fbld
mov
int3
ss
out
mov
pop
mov
jnp
push
int
daa
push
push
push
or
mov
inc
in
out
les
pusha
fdivrs
lret
jbe
int3
je
sbb
jb
pop
mov
xor
cwtl
movsb
ja
push
out
xor
push
jmp
xchg
jg
sti
hlt
imul
adc
into
scas
loop
mov
stos
das
lds
lret
sub
adc
imul
movsl
dec
xchg
jb
mov
pusha
fnstenv
and
cmp
popf
xchg
test
sbb
and
lea
cmp
sub
daa
lret
pop
mov
out
stc
jno
cmpl
pop
push
bound
dec
repz
or
sub
jne
xchg
bound
push
sbb
jecxz
jne
ret
push
clc
loope
ljmp
pop
push
icebp
fsubrl
fwait
sub
aas
cli
imul
lds
dec
xlat
mov
mov
push
pop
and
cmp
scas
icebp
leave
fwait
in
sbb
xchg
imul
adc
inc
iret
pop
scas
sbb
adc
adc
jo
sbb
sub
xchg
sub
cmc
ljmp
data16
sub
fisubl
pushf
outsb
adc
gs
ror
lret
mov
or
xchg
xchg
insb
test
adc
aam
xchg
mov
mov
pop
cmpw
cwtl
or
pop
sbb
pop
negb
xor
je
cli
xor
pop
mov
jmp
mov
out
xor
cld
or
jae
push
lahf
mov
insl
arpl
loopne
xchg
das
dec
pop
mov
jae
out
jb
pop
mov
imul
sub
sahf
ss
cmpsl
out
ss
jge
pop
nop
pushl
popa
das
add
test
xor
jmp
lock
lahf
test
sbb
shr
pop
xor
stos
jb
out
outsl
jno
pop
outsb
xor
inc
ds
pop
push
repz
outsb
mov
arpl
mov
jg
cmp
xrelease
mov
adc
stos
mov
cmp
jecxz
xchg
enter
and
and
push
fistps
fwait
inc
mov
dec
subl
jmp
cwtl
sbb
add
cmpsl
mull
adc
lahf
mov
push
subl
iret
pop
cmp
in
roll
xchg
ret
cmp
mov
and
lods
fdivrl
push
in
out
fdivl
negb
hlt
std
aad
push
mov
dec
cmpsb
push
int3
into
in
lret
and
sub
outsb
mov
sarl
leave
jno
pop
aad
mov
add
pop
xor
scas
and
rcl
pop
addr16
arpl
pop
lock
popf
adc
sbb
shrb
je
mov
pushf
inc
adc
aaa
xchg
add
push
jb
cmp
push
dec
loope
dec
mov
into
mov
pop
call
clc
cmc
xlat
ffreep
sbb
push
shll
cmp
cmp
aaa
test
ds
add
adc
arpl
sub
mov
fcomip
or
movzwl
adc
mov
and
xor
insl
xor
jp
dec
inc
ds
inc
xor
sub
cmp
aaa
mov
xor
fs
add
or
in
inc
rorl
mov
jno
push
shlb
inc
ljmp
push
stos
lock
fnstsw
sbb
daa
call
mov
mov
loope
adc
jb
jg
adc
xor
cmp
and
nop
xor
push
iret
out
rcll
aad
xor
arpl
and
xor
ja
add
aaa
sub
mov
cs
inc
mov
jnp
icebp
add
shrb
cld
or
adc
insb
sbb
test
jne
shr
sub
int
add
fistps
jg
repnz
jae
jbe
mov
loop
xchg
fnstenv
push
xor
rcrl
test
int
add
push
mov
jecxz
xor
or
cmp
cwtl
cmp
fbstp
test
stc
aam
xor
rep
icebp
push
xchg
mov
and
mov
loope
out
dec
out
pusha
and
push
repnz
cmp
ficoml
pop
jg
out
fwait
std
cmpsb
sbb
outsl
les
fstpt
fwait
jb
xchg
add
ror
sti
dec
cmpl
pop
ds
and
jecxz
insl
popf
add
cmp
push
daa
int3
push
call
sahf
sbb
cmpsl
mov
sbb
test
cwtl
sub
pop
addl
mov
aam
sbb
movsl
dec
rclb
and
sbbb
dec
sahf
add
addl
les
fmul
repz
jmp
inc
cmp
adc
jne
aad
add
sbb
mov
int3
mov
dec
mov
cmc
or
test
stc
adc
pushf
jecxz
out
push
daa
movsl
orl
dec
sbb
out
imul
dec
adc
jle
and
xor
jp
rclb
fcomp
add
xlat
sub
add
fisubrl
push
fdivrs
xlat
popa
xchg
cli
test
push
scas
es
cmpsl
mov
icebp
shlb
jp
or
sbb
sub
aam
mov
out
adcb
mov
mov
push
rclb
inc
cmp
stc
gs
in
mov
jge
loope
xor
rol
ret
add
loopne
fdivrs
fistpl
fs
std
mov
jp
int3
mov
push
rdmsr
mov
stc
clc
imul
mov
cld
xor
push
xchg
daa
aad
mov
daa
push
aas
mov
mov
icebp
cs
repz
pushf
repz
sbb
xor
bound
mov
xor
add
mov
stc
and
pop
adc
push
mov
inc
mov
add
jp
shlb
aad
dec
in
add
fimull
rcr
pop
xchg
mov
xchg
inc
push
imul
push
dec
dec
call
ss
jmp
clc
in
or
nop
push
push
loope
loope
push
mov
cmpsb
jmp
mov
insl
xorb
in
insl
fistpll
jecxz
cmp
cli
jne
or
or
jmp
inc
jecxz
xlat
jmp
imul
das
inc
into
pop
orl
addr16
mov
lock
push
int3
jo
mov
adcb
xchg
fildll
jns
rclb
inc
or
dec
outsb
push
rclb
push
movsl
addr16
mov
daa
mov
aam
mov
jmp
mov
sub
push
or
test
mov
jb
in
push
xor
movsb
fs
push
ret
inc
sub
xor
pop
jno
fisubrl
ret
clc
jecxz
add
aad
lret
add
push
xchg
lcall
testl
scas
out
ret
pop
cmc
add
cmp
iret
jg
xchg
cld
jp
stos
pop
or
adc
add
cli
fs
pushf
push
xchg
cmp
and
inc
bnd
stos
push
add
pop
mov
sub
jl
repz
data16
es
xor
rcll
pop
scas
jmp
faddl
fldcw
adc
daa
out
out
cmp
mov
bt
jl
xchg
push
fistpl
jg
stos
push
jns
xor
xor
mov
add
add
movups
lahf
adc
hlt
jp
cmpb
pop
xchg
xchg
jb
pop
popa
dec
cmpsl
or
sbb
jo
push
pop
fstl
mov
repnz
mov
mov
stos
sub
loopne
popf
jmp
outsb
clc
aam
int
fidivrs
pop
js
repz
fs
or
inc
into
jae
scas
inc
mov
xorl
mov
shl
inc
mov
insb
out
int3
pop
lahf
xchg
sub
cmpsb
lahf
jnp
decl
inc
fwait
xor
in
icebp
sbb
mov
arpl
adc
mov
daa
xor
mov
sub
iret
enter
sbb
outsl
jo
aaa
add
pop
aas
or
cltd
jne
push
dec
incb
das
movsl
fwait
adc
xor
in
or
cmp
mov
pop
loop
xchg
xor
es
ret
repnz
dec
mov
xchg
inc
jl
mov
fistpll
mov
hlt
daa
or
add
std
mov
mov
xchg
jle
out
divb
clc
negl
mov
pop
aas
stos
into
push
loop
jge
xor
out
out
int3
or
repz
popa
enter
jne
adc
and
insl
push
movlhps
and
imul
popf
das
mov
sti
repz
xrelease
jno
adc
or
ljmp
fidivrl
icebp
std
mov
test
pop
cmp
lcall
jae
subl
mov
sahf
push
scas
das
sbb
inc
jmp
enter
dec
lods
je
sub
and
pop
adc
mov
mov
push
mov
scas
push
add
shll
dec
adc
notb
dec
push
imul
adcl
dec
mov
fists
jecxz
xchg
movsl
lcall
lea
roll
movsb
push
pop
ss
mov
std
push
neg
add
sti
xchg
sahf
jo
lods
shr
sbb
dec
dec
cli
push
push
inc
jae
and
and
outsb
lret
and
mov
clc
inc
push
add
lret
lss
outsl
jle
pushf
scas
adc
movsb
push
or
sbb
out
sar
and
jmp
daa
daa
xchg
xchg
cld
and
aam
test
cmp
int
xchg
sarl
shll
xor
cld
pop
out
lea
cmp
pop
outsl
adc
push
sar
gs
sub
push
arpl
sti
cld
jnp
clc
fisubs
rol
int
adc
imul
sbb
xorl
frstor
xor
fidivs
sub
call
sbb
fdivrl
inc
jecxz
adc
sub
inc
dec
adc
add
hlt
clc
jp
fdivrs
dec
cwtl
sti
fistpll
lea
jecxz
inc
fsubrs
dec
mov
mov
cmp
mov
or
jp
or
pop
lcall
aad
bound
jle
scas
xchg
jb
xchg
jge
rcll
jae
jnp
mov
repz
arpl
shlb
mov
fidivs
je
int3
cli
loopne
nop
lret
dec
inc
xchg
enter
test
imul
push
cmp
aaa
mov
and
stos
bound
cld
cmpsl
jns
add
or
je
pop
popa
xor
stc
xchg
incl
mov
push
jl
lock
scas
out
out
fwait
cmpsb
pop
aas
xchg
lods
ljmp
bswap
push
ret
enter
push
stos
sub
mov
std
add
inc
addr16
and
test
pop
push
lods
lcall
xchg
jae
or
fcom
cmp
or
xchg
outsb
xchg
jecxz
sbb
adc
fwait
pop
lods
and
fisubs
mov
adc
cld
add
mov
mov
push
shr
in
dec
dec
cmp
xchg
and
es
lahf
in
cld
add
ds
repz
mov
cs
movsb
mov
sbb
adc
dec
hlt
stc
pop
push
test
fucomp
mov
push
jge
les
or
cld
mov
shlb
fistpl
mov
jb
mov
push
stos
mulb
and
push
rolb
mov
aas
add
into
cmp
pop
or
sub
and
in
add
fldcw
inc
mov
pmaddwd
cmp
lcall
cmp
inc
jae
lret
add
push
movsl
repz
sub
lea
out
mov
orps
sbb
cmp
js
xor
add
push
andb
ret
add
add
imul
sbb
adc
pop
sub
js
jns
out
fwait
mov
inc
push
movsb
or
xchg
in
shll
lahf
mov
and
cmp
daa
sbb
aam
sahf
xor
add
js
gs
nop
pop
cmp
cmp
sbb
mov
sub
mov
inc
jecxz
pop
jp
sbb
divl
insl
inc
fisttpll
push
jge
addb
jo
arpl
dec
jecxz
add
add
or
xor
xor
push
addr16
push
mov
dec
inc
cmp
mov
sbb
dec
loopne
dec
fstpt
and
adc
fxch
xchg
aaa
pushf
pop
jne
add
iret
and
cltd
mov
mov
ret
and
test
mov
sbb
shl
divb
mov
sub
xor
or
iret
dec
xor
sbb
mov
or
aad
test
jge
cmp
dec
pop
into
jae
aam
nop
cli
insb
cmc
outsl
mov
mov
xchg
aaa
imul
aaa
sub
enter
mov
js
fwait
movsl
shlb
dec
mov
push
xchg
bound
scas
pop
lahf
inc
cmc
rcll
fwait
jle
pusha
fsubrs
dec
dec
mov
cs
ljmp
sbb
mov
mov
xchg
mov
xchg
sarb
stos
std
test
xor
lea
sti
vmovd
mov
lods
dec
insl
add
dec
loope
mov
divps
adcb
jmp
xchg
clc
ss
jle
popa
xor
xor
xchg
cltd
mov
iret
add
jo
push
data16
inc
and
fimuls
or
adc
xor
mov
pand
xchg
or
and
and
movsl
add
imul
sbb
loop
xchg
shrb
in
jle
xchg
mov
imul
pushl
fmul
lea
mov
out
pusha
js
lret
sti
loope
arpl
push
hlt
inc
pop
les
out
inc
adc
mov
inc
sub
adcl
mov
or
lahf
push
xlat
in
lcall
ds
jo
arpl
add
sbb
mov
jbe
adc
push
and
jae
xchg
push
jp
outsl
insl
rclb
ficomps
loope
push
stos
jae
movsl
or
and
push
inc
push
or
adc
mov
xchg
jle
push
mov
movsb
rcrl
and
loop
dec
cmp
push
lcall
daa
movsb
adc
sti
inc
add
cmp
mov
pop
stos
mov
inc
mov
mov
push
mov
mov
out
jmp
xchg
test
and
mov
rorl
jecxz
xchg
jo
and
sbb
jno
jno
sub
data16
jmp
adc
into
mov
jge
or
rcr
pop
out
mov
imul
dec
cmc
mov
pusha
mov
repnz
xor
and
call
jg
jg
xchg
sub
cs
lods
std
aaa
add
addr16
fs
xchg
push
scas
int
sbbl
pop
not
pop
or
and
add
jge
lea
mov
fisttpl
rcrl
jb
sub
xlat
imul
push
push
jns
test
jl
or
adc
ficoml
loopne
and
imul
or
inc
std
out
sbbl
mov
or
rorl
cld
mov
pusha
and
addr16
mov
mov
or
or
xchg
push
or
xor
xchg
inc
mov
aas
mov
adc
add
sub
cld
bound
mov
repnz
stos
pop
inc
xchg
inc
or
movsl
mov
push
dec
jecxz
shll
xchg
cmp
addr16
test
popf
hlt
and
sub
pop
lahf
in
sub
inc
xchg
xchg
xchg
xlat
dec
pop
shlb
xchg
sbb
push
arpl
insb
cmc
push
popf
jne
mov
sarl
fisubl
xchg
adc
push
mov
sarb
jno
xchg
push
xor
movsl
stc
fdivrs
pop
sbb
jmp
cmpsl
and
dec
and
add
mov
mov
cmp
pop
out
int3
sub
dec
mov
xchg
xlat
decl
test
add
int
loope
inc
jmp
mov
cmp
dec
add
jnp
negb
jb
mov
jmp
mov
mov
push
mov
mov
orb
insb
xchg
cld
xor
mov
and
xchg
or
or
or
dec
lea
repnz
outsl
lods
aaa
lods
inc
test
test
lods
in
xchg
mov
cmp
mov
insl
movsl
vmread
dec
outsb
adcl
mov
cmp
xchg
and
loopne
cmpsb
xor
test
xchg
xor
repnz
xchg
addr16
imul
cli
jl
repnz
pop
jae
mov
rcrl
pop
je
mov
out
nop
sbb
mov
pop
sub
push
pop
push
sbb
bound
popa
lea
push
and
scas
das
lret
sub
mov
xchg
cs
fbstp
pop
lods
inc
fistps
jne
and
sarb
test
jge
cltd
std
rorl
clc
push
jg
inc
sahf
shlb
out
mov
pop
shl
add
xchg
push
popa
and
lods
or
les
loope
out
repz
cmp
std
xlat
push
and
iret
int3
ret
out
xchg
js
testb
daa
gs
daa
add
or
pop
add
insb
cmp
push
fisubrl
ljmp
not
add
shrb
cmp
sub
stos
sbb
jno
jns
iret
add
bound
sahf
mov
push
lock
ja
lahf
xchg
sar
insl
aad
sbb
dec
push
sahf
movsb
adc
addr16
cltd
jle
xor
mov
xchg
pop
xor
sub
into
xor
loope
test
sub
and
cmp
xchg
jo
imul
sti
movsl
dec
imul
sbb
mov
sub
loopne
sarb
jo
ret
jmp
push
movb
das
stos
and
js
push
lcall
mov
repz
xor
call
cwtl
popf
je
mov
push
push
and
adcb
jl
popf
cltd
dec
cmc
imul
std
pop
adcl
push
add
mov
lret
movsb
sbb
stos
loope
sub
cmp
call
add
or
cmp
outsl
movsl
int3
push
inc
pop
cmp
sub
and
mov
cmp
movl
ja
jl
mov
pop
lock
jmp
gs
adc
cmp
sbbl
push
ja
push
xchg
dec
test
shlb
int
sahf
push
es
test
je
inc
push
arpl
outsl
xchg
insl
add
jecxz
addb
fwait
pop
xor
xchg
jp
mov
xor
pop
add
sarb
iret
xor
adc
mov
dec
push
xlat
in
int
out
out
xlat
mov
incl
and
sbb
loop
imul
inc
out
adc
xor
and
sbb
aam
mov
push
sbb
xchg
leave
adc
pop
cmp
out
push
incb
lret
jns
xchg
push
add
test
fwait
and
lea
push
fxtract
sbb
into
out
cmpsb
pusha
cmpsl
das
add
dec
arpl
and
pop
jmp
pop
push
cmc
push
add
jg
stos
push
call
adc
enter
sti
lods
ja
push
xor
mov
jo
xor
pop
jle
je
je
lret
jl
loop
mov
sarb
cmp
inc
xor
push
mov
sub
cmpsl
push
int3
cmp
int
adc
int3
xchg
pop
lea
mov
push
mov
sub
cld
cmp
and
mov
and
dec
or
outsl
sub
adc
add
jg
or
loopne
mov
aaa
sbb
xor
sbb
aas
into
rcl
pop
rcrl
xchg
rcrl
xlat
mov
xchg
mov
add
add
in
jge
sub
cmp
push
lret
aam
jl
sub
mov
fidivl
mov
jmp
push
fwait
jle
push
mov
in
push
or
sbb
xor
testl
ret
mov
fistps
dec
rcll
xor
arpl
rolb
mov
sub
add
movsb
add
shl
add
push
and
push
pop
pop
xor
jae
leave
pop
mov
sub
in
xor
jp
fs
dec
fstp
in
fwait
dec
add
gs
popa
fcomps
jl
mov
inc
and
xchg
leave
shll
movsl
mov
adc
roll
mov
bound
mov
out
lea
ffreep
data16
jb
jo
movzbl
mov
aaa
call
movsl
in
ja
xlat
push
outsb
jmp
pop
and
clc
inc
or
rclb
into
das
pop
jae
mov
mov
sbb
dec
pop
jb
jb
dec
mov
xchg
scas
or
and
sarl
adc
test
cmpsb
lods
ljmp
xlat
sub
js
repnz
mov
in
sub
xor
xor
sti
outsb
xor
in
or
sbb
not
adc
repz
fistpll
push
pop
movsb
xchg
xchg
insb
scas
push
cltd
fidivs
dec
mov
scas
ja
and
xlat
clc
cmp
mov
mov
cwtl
out
out
sahf
sbb
leave
push
push
xchg
mov
js
jae
test
push
das
xlat
xor
movsl
jmp
fcoml
pop
push
mov
into
mov
xor
fcmovnbe
add
insb
inc
fidivrs
sub
sbb
add
out
push
addr16
mov
mov
push
dec
sbb
repz
cmp
dec
filds
dec
mov
sbb
and
cmp
sahf
pop
mov
scas
or
subl
sbb
dec
mov
sub
xchg
adc
bound
xor
aaa
mov
jae
sbb
sbb
push
mov
sbb
cmp
xor
adc
cmpb
das
sbb
and
xor
sahf
jnp
cmp
sub
mov
rolb
ret
imul
sbb
aad
les
push
out
cmpsl
mov
leave
test
jge
jo
cld
xchg
iret
inc
xlat
imul
das
rcrb
inc
xor
sahf
incb
cmpsl
lret
push
mov
cltd
hlt
push
jecxz
push
and
jmp
mov
ret
xchg
das
sbb
rol
cmpsl
adc
dec
inc
mov
pop
or
ss
dec
movsb
mov
inc
jns
pusha
sub
push
xchg
pusha
mov
out
adc
outsb
movsb
adc
or
psubw
lret
in
call
xchg
dec
pop
je
or
add
jne
push
icebp
lock
inc
out
push
jnp
pop
mov
add
dec
pop
ret
shrl
mov
pop
mov
xchg
mov
jmp
les
dec
mov
iret
adc
bound
jo
in
sbb
or
sbb
in
xor
mov
inc
and
hlt
in
rol
xchg
mov
jno
icebp
ja
or
xor
nop
or
xchg
pusha
shlb
loop
jae
jp
xchg
roll
leave
sar
jl
xchg
jmp
xchg
sbb
mov
repz
cs
sarb
add
fisubrl
ljmp
jmp
hlt
jnp
sub
imul
xchg
shl
xor
inc
sbb
lahf
stos
jo
in
lcall
repnz
repz
outsb
mov
icebp
aam
into
dec
push
fucomp
ret
test
push
mov
jo
add
cmp
fs
push
clc
scas
jo
inc
test
sti
sub
ds
sbb
mov
fbstp
mov
loop
sarl
mov
push
movsl
popf
movsl
lcall
cmp
mov
pop
and
jecxz
loopne
or
mov
push
mov
testb
xchg
mov
dec
je
in
call
or
stc
sub
movsb
push
jecxz
push
shlb
pop
xchg
dec
jl
lods
cwtl
popf
xchg
ret
in
fucom
pop
dec
std
popa
dec
mov
pop
push
push
adc
mov
push
out
xor
pop
int3
les
mov
push
xchg
pop
add
mov
dec
add
jae
and
or
adc
repnz
lods
mov
int
scas
adc
sbb
pop
loope
add
and
and
push
pop
push
push
and
mov
and
test
leave
sub
sti
jp
fisubl
scas
and
mov
mov
sti
cmp
iret
cmc
jbe
test
dec
call
shlb
lods
test
pop
xor
xchg
shlb
ret
xchg
aam
jp
es
mov
insb
int3
jno
test
div
pop
rcrl
and
aaa
cmpsl
ljmp
popa
cmp
lods
sbb
daa
pop
gs
dec
or
push
loope
mov
mov
dec
insl
ficomps
jg
mov
sub
inc
out
xchg
jae
sbb
call
push
insl
inc
mov
aas
jle
xchg
sbb
cmc
dec
ret
jne
mov
test
mov
fstps
push
insb
ljmp
jg
cmp
jnp
dec
jecxz
mull
mov
jns
out
jb
in
stos
into
xchg
adc
fdivr
mov
push
stos
pushf
cltd
pusha
xchg
mov
mov
imul
ds
sub
mov
sahf
mov
fidivrl
mov
xchg
rcr
in
lahf
fst
fcmovnb
les
inc
xchg
adc
push
out
mulb
xchg
insl
int3
mov
stos
cmp
cmp
stc
std
das
gs
test
xchg
test
push
movsb
and
int
sbb
or
add
sub
ret
and
cli
lret
into
or
adc
frndint
mov
negb
movsl
push
cmp
outsl
gs
xchg
xchg
push
jo
fwait
jl,pn
jmp
scas
add
xor
pop
cli
xchg
or
sbb
and
push
les
mov
mov
adc
add
lds
mov
mov
sbb
repz
insb
data16
push
xor
lret
pop
adc
je
in
scas
sti
mov
or
sub
lcall
call
xor
or
lea
jmp
pop
popa
xor
xor
dec
mov
push
and
fdivl
pop
std
xchg
sub
hlt
and
push
aam
lahf
mov
xchg
movsl
stos
mov
aam
mov
push
cmp
insl
test
mov
jl
push
lds
mov
data16
popa
scas
outsb
and
jo
xchg
test
ret
push
scas
add
inc
lcall
adc
insl
xchg
mov
stos
das
fwait
jp
test
jno
jle
mov
xor
cmp
jp
lea
std
xor
pusha
inc
fwait
call
pop
sub
ljmp
scas
or
test
jl
jle
in
pop
bound
out
jecxz
mov
pop
test
movsb
stos
sub
mov
sub
cli
sub
adc
sub
sub
mov
cmp
add
aad
jl
sbb
data16
cmpb
nop
mov
mov
mov
push
cltd
sbb
in
stos
clc
stos
movsb
cmp
sbb
out
popf
sbb
bound
sub
gs
add
push
fmulp
xor
inc
and
nop
mov
add
jg
cmpsb
test
adc
stc
dec
outsl
adcl
imul
adc
shrb
loope
xor
cmp
fcomip
mov
mov
lret
jg
cmc
sti
cmc
adc
roll
arpl
inc
subl
inc
cli
jns
test
test
dec
iret
rorb
cli
jmp
addr16
inc
mov
jb
iret
add
lcall
mov
pop
outsl
cmpl
push
es
cmpsb
jl
scas
sti
les
mov
cmp
xchg
out
fsubp
leave
mov
sub
clc
out
out
testl
cmpb
fmull
and
and
fdivs
adc
push
add
movsl
xchg
loop
adc
jbe
mov
and
addl
es
mov
add
and
test
sbb
gs
and
out
mov
jb
clc
int
out
imul
retw
je
ja
push
push
repz
adc
adc
or
mov
push
notb
mov
incb
mov
mov
jo
jle
inc
dec
inc
cmp
xchg
fnsave
push
inc
add
adc
sarl
push
or
cli
and
xor
mov
fbld
ror
mov
push
jne
cmp
xchg
sub
add
mov
movsl
adc
test
xchg
xchg
stc
and
cmp
into
mov
fidivs
leave
dec
outsl
mov
mov
jns
inc
lcall
sub
push
out
repz
repz
inc
les
test
das
dec
cltd
mov
hlt
inc
xor
pop
cli
aaa
rorb
bound
mov
jecxz
jb
mov
sbb
int3
inc
imul
in
cmp
je
test
mov
out
mov
js
xchg
mov
lcall
sti
inc
or
dec
cld
xchg
outsb
push
test
jp
data16
or
ret
cmc
cltd
cmpsl
add
enter
lods
int
cwtl
jb
shr
jge
jle
mov
add
cmc
mov
jb
icebp
inc
cs
out
fidivs
fcmove
push
lea
in
pop
or
pop
fcoml
das
mov
rcrl
ficompl
mov
or
pop
ljmp
mov
adc
mov
push
sub
jb
jns
es
lret
push
iret
lret
mov
sbb
in
movsb
lds
shl
test
jecxz
jp
cs
jge
cs
outsl
movsb
mov
fs
pop
add
or
mov
pop
movsl
pop
jb
scas
out
xor
bound
mov
outsb
xchg
cmp
cmp
mov
cmp
jne
fdivrp
inc
cmp
sub
outsb
inc
outsb
popf
jecxz
out
stos
in
adc
fucomi
mov
ret
outsb
cltd
jle
imul
dec
dec
scas
jle
mov
dec
lock
jp
xor
outsb
test
push
jb
les
imul
and
aam
sub
scas
mov
cmp
add
jns,pt
in
fcoml
mov
pop
sub
inc
das
push
lcall
inc
xchg
jge
mov
daa
cltd
or
sub
popw
xchg
jb
xor
call
std
into
push
ss
pop
repz
mov
mov
sub
sbb
cmc
imul
cld
jge
es
and
dec
dec
insb
lea
jne
pusha
iret
pop
les
popa
das
cmp
rcrb
std
dec
int
movsb
loop
mov
lret
jmp
cmp
pop
fistpl
dec
push
sti
outsl
xlat
mov
mov
aad
test
sti
add
jno
fistl
test
das
cld
fcomp
mov
adc
xchg
out
test
mov
cmp
push
je
rorl
sub
mov
or
or
js
adc
scas
aaa
cs
xor
sahf
sar
mov
push
insl
push
or
aaa
mov
mov
bound
push
repnz
push
or
sbb
popa
push
mul
fwait
xor
dec
divl
pusha
pop
xor
mov
lahf
dec
loope
xor
pop
pop
scas
mov
pop
cli
xorb
movsb
cld
xchg
out
mov
inc
ret
pop
pop
stc
push
fmull
rolb
fucomp
sub
mov
lret
syscall
das
lcall
mov
gs
fsts
sub
out
push
pop
adc
dec
imul
mov
imul
push
insb
push
add
pop
jnp
sbbl
sahf
call
mov
loopne
mov
stos
js
pop
adc
loop
pop
dec
lods
inc
add
cwtl
iret
xchg
fstpt
pop
mov
add
pop
jp
mov
xor
dec
sub
mov
inc
std
mov
pop
inc
sub
cmp
fstps
jo
popf
jecxz
sub
push
cmc
push
push
dec
dec
xchg
push
leave
add
nop
xchg
je
mov
subb
aad
outsl
loop
lahf
rorb
sbb
sarl
mov
mov
nop
fsub
filds
stc
imul
lcall
and
add
and
or
pop
adc
in
scas
and
test
movsl
xchg
fimull
sbb
es
scas
or
cltd
dec
xchg
fldcw
movsb
loopne
jp
sub
gs
out
cmp
js
call
push
mov
mov
cmpsb
pushf
pop
data16
push
pop
sti
push
xchg
sub
out
jge
adc
mov
dec
outsl
mulb
mov
jae
insb
mov
or
lods
imul
inc
xor
inc
jnp
cs
pusha
sti
mov
or
inc
cwtl
testl
shrb
scas
xchg
jne
push
stc
push
arpl
dec
lea
or
or
mov
cmp
ds
push
jae
or
movb
add
int3
lea
push
sbb
inc
or
loope
sbb
mov
cmpsb
sbb
or
es
sahf
jae
clc
outsl
dec
pop
test
movb
insl
lock
push
mov
cmp
inc
cmp
mov
xchg
push
leave
jo
push
rorl
enter
xlat
mov
mov
notb
add
adc
add
in
lods
mov
mov
mov
bound
inc
pusha
lock
movsl
andb
inc
ds
jbe
add
insl
xchg
jge
roll
lds
jb
lret
adc
aaa
sub
lea
lret
and
add
dec
shr
ror
repz
imul
sti
in
out
mov
mov
sbb
mov
pop
lds
xchg
std
movsl
and
and
sbb
add
imul
shll
push
lock
addr16
insb
cmp
jo
pop
stc
pop
or
cmpsl
and
aam
faddl
ljmp
sbb
in
test
mov
cwtl
in
xchg
push
cmp
mov
jno
xchg
shr
nop
data16
loope
in
hlt
shr
popa
xchg
stc
movsb
adc
xor
sbb
addl
mov
imul
flds
jge
mov
outsl
mov
inc
lea
fmuls
mov
sti
cld
scas
jns
out
cmpb
cmp
pop
pop
adc
mov
movsb
mov
out
test
xchg
int
inc
aaa
push
xor
xchg
sub
xorl
jae
pop
in
lods
push
cwtl
mov
jmp
data16
aas
aad
mov
adc
inc
scas
sahf
and
sbb
jbe
and
mov
insl
lmsw
out
seto
sub
pop
lods
fidivrs
mov
push
or
outsb
test
push
cli
sbbb
lret
outsb
cwtl
mov
out
dec
pop
sub
shlb
mov
arpl
loop
sbb
cltd
push
cltd
aam
jmp
push
xchg
add
adc
call
cmp
out
sub
js
aam
pop
sahf
fmull
dec
ss
test
mov
xor
fs
or
cmpsb
shll
inc
dec
out
sbb
sub
add
xchg
les
aam
js
adc
imul
das
cmp
jp
mov
mov
call
or
cmpsb
jge
aad
in
bsf
lret
dec
push
iret
sbb
pop
das
test
jo
ja
or
outsl
mov
testb
add
popf
sbb
shl
cmp
inc
or
dec
xchg
int3
outsb
xchg
stos
popf
fsub
mov
jl
test
xor
faddp
pop
push
in
pop
or
cmp
or
cld
fnstsw
jbe
test
inc
lock
dec
mov
mov
jg
jno
dec
in
jecxz
rorb
repnz
pop
popl
push
push
daa
imul
mov
decl
aad
xchg
stos
repz
dec
xchg
scas
mov
in
pop
cmpsl
inc
aam
outsl
loope
pop
cltd
jno
cmp
dec
push
jle
dec
add
jae
loop
xchg
push
sahf
aam
jns
jecxz
mov
es
or
adc
pop
jl
test
ss
inc
lea
les
push
rorl
adc
fsubrl
xor
jns
cli
xor
push
test
mov
dec
push
clc
cmp
in
repnz
test
popa
sub
add
out
jge
xor
dec
shr
mov
mov
lods
jp
je
push
mov
push
lea
xor
pop
fs
adc
sub
imul
shrb
inc
cmp
dec
mov
cmc
dec
stc
jo
ljmp
test
mov
pop
cmp
negb
cld
pop
roll
jp
cmc
leave
les
xchg
fld
orl
std
mov
pop
stos
dec
inc
std
pop
andb
inc
xor
dec
insb
jns
or
divl
gs
dec
insl
jns
mov
in
repnz
loop
je
xchg
in
sub
push
mov
pop
fimull
push
nop
mov
mov
mov
sub
jbe
call
xchg
xchg
and
mov
xchg
pop
imul
sub
jb
nop
jns
lahf
or
sahf
or
scas
fbstp
mov
ss
or
jecxz
loope
dec
inc
mov
repz
or
mov
divb
movsl
sbb
fidivrl
and
nop
inc
sbb
xchg
scas
pop
imul
mov
jecxz
mov
pusha
jge
xchg
fisttpll
sbb
js
pop
imul
fsubp
scas
jbe
mov
push
xor
loop
mov
and
leave
sbb
das
std
jb
lea
jp
jecxz
hlt
inc
pop
imul
mov
fistl
xchg
shlb
dec
push
ds
outsl
test
jo
dec
pop
push
sub
mov
dec
bound
xchg
mov
nop
repz
sub
cmp
push
inc
jb
popa
jle
sub
mov
pop
test
adc
in
jbe
fisttpl
in
cwtl
inc
mov
fildl
cmp
and
rcrb
cwtl
stos
sbbb
or
out
movsb
cmovp
mov
testb
pop
ljmp
call
popf
lret
dec
xchg
lods
mov
add
inc
pop
mov
ss
jp
ljmp
mov
pop
jp
rcrl
sbb
inc
and
jnp
push
mov
pop
addr16
push
push
sahf
xlat
xchg
out
in
stc
and
test
int
cmp
or
aaa
xor
test
xchg
addr16
mov
xor
jae
pop
lret
out
sbb
pop
cmpsl
jg
mov
out
movsb
fisttps
insl
movsl
es
xchg
flds
out
jnp
mov
mov
add
fmull
fdivrp
jmp
inc
sahf
jo
fs
xorl
inc
dec
dec
push
inc
dec
loop
adc
or
mov
imul
sti
rcll
rorb
std
outsb
push
xchg
lods
movsb
jg
add
insl
mov
sbb
sbb
mov
adc
and
sar
mov
cmc
push
xor
test
xchg
repz
sub
push
adc
sub
mov
cld
add
jae
in
cmpsb
popa
jecxz
mov
jbe
cmp
insb
shl
push
ret
add
or
dec
inc
pop
hlt
push
jns
movsb
imul
out
cmp
dec
mov
ljmp
jne
inc
stc
mov
cld
movsl
mov
jge
lods
das
add
roll
sahf
ret
mov
lret
and
fmull
mov
bound
cmp
enter
inc
fdivl
mov
nop
gs
push
mov
daa
xor
push
stos
loope
mov
popf
loope
out
lcall
mov
icebp
ret
repz
dec
xchg
iret
test
call
lock
jno
loop
ret
sbb
iret
or
push
popf
mov
and
scas
subl
pop
out
repz
cmp
inc
nop
push
ljmp
ss
inc
add
inc
out
aas
jbe
add
cmc
in
jb
das
pop
or
inc
add
nop
push
scas
sar
or
shlb
push
cld
insb
and
inc
pop
and
mov
adc
mov
cmc
sub
js
xor
dec
xorb
fistps
fiadds
or
es
mov
imulb
movl
adc
pop
lods
sub
movsl
cmp
xor
cli
adc
int3
mov
jns
dec
xchg
sbb
pop
pop
inc
daa
movl
arpl
mov
loope
ds
and
pushl
js
pop
je
cmpsl
cmp
lahf
ret
and
add
daa
mov
and
fucom
es
cmp
notl
cs
xchg
jb
inc
ss
popa
sarl
popa
pop
rcll
lahf
ss
or
ljmp
push
rclb
sahf
dec
in
inc
dec
and
adc
jo
adc
out
sbb
addb
gs
iret
xchg
shl
mov
jmp
scas
add
push
insb
loopne
shll
inc
adc
pop
repnz
cwtl
dec
push
sbbb
pminsw
add
sub
test
into
xor
cmp
imul
sbb
cmp
in
jecxz
out
pop
push
loop
sub
mov
inc
or
mov
push
fcoml
sub
cmp
sub
pushf
mov
lahf
ss
inc
cmp
jp
jle
ja
pop
fildll
mov
push
push
xor
repz
loopne
push
rclb
repz
stc
xor
aad
movsb
add
pop
sbb
dec
adc
jbe
inc
xlat
push
testl
loopne
in
nop
popf
mov
mov
jns
lock
dec
pop
xchg
push
aam
in
or
sub
adc
bound
cli
sub
scas
sub
adc
in
inc
sahf
cs
xor
sub
test
pop
andb
loop
push
xchg
stc
aam
push
push
ljmp
in
hlt
inc
mov
lret
jge
addb
mov
push
int3
fidivrs
test
divl
cmp
sbb
mov
xchg
jecxz
cmp
pop
xorb
fucomip
dec
fsubl
loop
or
mov
out
aad
push
mov
sub
mov
lret
xchg
mov
sbb
shll
cmp
xchg
xor
add
or
sub
xor
mov
scas
pop
stos
in
test
shll
xchg
jno
data16
arpl
scas
push
movsb
shll
mov
in
push
inc
out
shlb
stc
sub
loop
sti
dec
lret
aam
lea
mov
xchg
pop
xchg
cmpsl
imul
xor
inc
add
sub
loopne
cmpsl
sub
jne
pop
lret
aaa
mov
popa
or
pop
aaa
jnp
mov
fwait
add
push
sti
lcall
stos
aas
jl
int3
jne
in
aam
jnp
sbb
imul
rolb
xchg
fadds
sub
and
cmp
pop
jae
repnz
mov
popf
int3
in
dec
out
xchg
es
dec
inc
and
pop
xchg
inc
sbb
or
sbb
sub
cmp
test
dec
lods
adc
shl
stos
cmc
jno
repz
and
pop
add
dec
lea
pop
inc
ret
mov
adc
sbb
adc
sub
adc
jmp
dec
sahf
notl
xchg
movb
add
inc
ja
adc
loopne
sbb
cwtl
insl
lea
je
push
push
fwait
xchg
std
xchg
pop
popa
mov
mov
xchg
sti
dec
hlt
imul
mov
jns
ja
das
mov
aaa
aam
idivl
lds
imul
pushf
movsb
rorb
add
sub
into
cmp
and
jge
in
test
mov
push
aad
movsl
xchg
out
int
add
add
and
mov
in
push
lret
rcll
pop
clc
aaa
pusha
pop
fcoml
out
push
cmp
xchg
or
mov
mov
sti
mov
pop
movsl
out
imul
xor
jns
punpcklbw
cwtl
jp
and
in
or
pop
shll
and
cmp
int3
jno
push
aaa
xchg
outsl
mov
mov
cmpsl
jnp
nop
sahf
dec
lods
cltd
sarb
xor
add
cmpsl
xor
dec
imul
xor
jmp
adc
sub
je
inc
test
mov
sbb
xchg
push
cmc
inc
cmpl
jmp
popa
inc
loopne
adc
cltd
fsubs
push
sbb
in
xchg
movsb
sbb
add
xor
mov
inc
out
lea
xor
sub
pop
fwait
int3
xor
shrl
dec
movsb
out
aaa
addb
add
mov
pop
xor
jb
or
in
sbb
dec
mov
push
jns
push
push
orl
lods
loop
cmp
out
xor
mov
mov
not
mov
xchg
pop
test
cld
pop
fstp
sahf
js
outsb
jmp
dec
out
cwtl
mov
jo
sbb
mov
xor
jbe
add
xchg
ret
mov
fcmovnb
and
fdivrp
push
addl
pop
pop
jns
repz
mov
pop
iret
add
stos
mov
loopne
or
and
jg
inc
in
idivb
mov
push
stc
xchg
je
jnp
in
inc
fcmovbe
cmp
ficompl
push
xchg
test
pop
jae
mov
jecxz
cmpsb
popf
rcl
fstl
adc
test
xor
cmp
fwait
ret
pop
lock
out
or
jns
call
dec
cmp
cmc
arpl
and
xor
out
int3
lret
je
mov
push
cli
mov
dec
and
lcall
aad
push
das
movsb
int3
dec
test
or
in
sub
notb
mov
xchg
jns
aad
push
ret
sub
repnz
sub
sti
pop
sbb
and
mov
lds
xor
aaa
enter
adc
pop
mov
adc
sti
fwait
in
shll
js
xlat
test
add
data16
fildl
std
mov
aad
sahf
hlt
sti
mov
stos
mov
lahf
sbb
add
mov
fs
inc
xchg
xor
imul
cmp
jnp
inc
fiadds
idiv
pop
push
pop
push
mov
or
mov
inc
popa
movsl
jmp
sarl
orl
outsw
push
rep
jle
ja
xchg
dec
ljmp
pop
push
stos
adc
jae
pop
add
xchg
sbb
mov
jae
rcrl
adc
sarb
sbb
sbb
scas
dec
mov
add
xor
or
ljmp
ss
std
shlb
pop
mov
inc
push
fnstsw
aad
sahf
or
sub
aad
or
call
inc
pop
dec
sahf
mov
and
mov
test
das
pop
jmp
inc
addl
aas
sub
orb
inc
lods
sub
sbb
testl
fcomps
movsl
scas
cmp
jp
inc
mov
lcall
out
shlb
sbb
sub
sbb
fidivrs
or
dec
fstps
sub
mov
lcall
lret
data16
or
jmp
and
fcmovne
sahf
fdivs
xor
lahf
data16
mov
sub
xchg
lret
decb
sub
xor
imul
xchg
and
sub
xchg
stos
push
xchg
add
dec
jnp
scas
jne
push
jno
fldcw
nop
jo
mov
nop
out
bound
scas
push
push
gs
pop
mov
rcll
and
andb
stos
sbb
push
and
pop
dec
pop
push
inc
sub
addr16
cmc
cli
outsb
mov
add
sbb
pop
sbb
xchg
js
push
ret
sub
push
inc
mov
dec
pop
cmp
dec
mov
cltd
mov
test
pop
mov
xchg
mov
test
and
mov
data16
imul
pushf
pushf
movsb
js
out
adc
insl
repz
inc
aad
aad
dec
lds
mov
stos
or
lret
cmp
sbb
dec
mov
int
push
jmp
movsl
mov
and
pushf
sbb
outsb
rcrl
fwait
incl
ja
jb
clc
gs
test
imul
sti
fdivp
mov
push
mov
mov
and
fs
pop
stos
in
pusha
mov
daa
or
insl
adc
pmaxub
push
xchg
jecxz
mov
xchg
popl
push
push
cli
and
imul
sub
inc
mov
lahf
xchg
mov
cmpsl
mov
adc
imul
lods
mov
aam
call
les
xchg
jne,pn
mov
ret
lcall
sahf
sbb
mov
pop
xlat
std
sbb
gs
insb
dec
inc
dec
in
xchg
sub
aam
and
sbbb
mov
dec
mov
clc
fisttps
mov
les
pushf
xchg
cmpsb
inc
repnz
inc
adc
outsl
das
in
daa
int3
iret
push
ds
jge
and
jge
cmp
iret
sub
sti
and
lret
es
rep
lods
jae
in
xchg
imul
dec
xchg
jmp
xor
inc
push
xorl
repz
mov
outsl
sbb
cmp
cs
pop
pushf
cmp
fwait
iret
xchg
popa
mov
in
lock
adc
push
and
jns
cmc
lea
repnz
cmp
shrb
cmp
push
xchg
icebp
mov
test
mov
mov
cmp
xchg
stos
adc
dec
xchg
clc
cmp
arpl
fsubl
push
dec
mov
inc
mov
dec
divb
mov
test
mov
addr16
mov
xchg
lods
xor
push
xor
loop
cmp
fstpl
test
push
js
and
pop
adc
mov
mov
ficoml
dec
imulb
not
cld
mov
dec
std
xchg
mov
xor
push
das
add
hlt
jmp
test
push
sbb
cltd
stos
push
cltd
dec
outsl
fwait
mov
pop
es
add
loopne
mov
insb
ret
cltd
and
scas
sub
push
push
outsl
test
int
mov
mov
in
call
mov
fistpll
xchg
pop
sbb
lds
lahf
jbe
test
mull
addb
and
rcrl
in
cmp
loop
int3
cmp
push
cld
push
mov
cmpsb
cmp
test
mov
and
push
lods
add
mov
iret
or
insb
or
dec
jge
pop
mov
pop
dec
mov
fiaddl
sub
cli
nop
sub
or
mov
xor
ja
into
cmpsl
pop
jb
and
pop
push
subb
mov
pop
jl
ret
mov
shrl
sub
popa
adc
jp
mov
fstpl
push
jge
decl
push
pop
mov
sbb
popf
jl
xchg
push
cld
inc
imul
jns
fs
es
xor
jne
inc
add
cmp
subl
mov
sbb
insb
xchg
sti
jno
pop
imul
test
out
and
cld
or
cmc
jb
enter
in
lods
jns
mov
sbb
jle
js
xor
stos
xor
movsb
xorb
outsl
and
iret
mov
in
fmull
mov
pop
dec
loop
mov
push
outsl
pop
outsb
call
decb
pop
mov
les
xchg
sub
cmc
mov
dec
xor
sub
jo
stc
dec
xchg
fnstsw
pop
rcrb
je
add
pushf
inc
adc
int3
pop
cwtl
xor
imul
cmp
mov
mov
mov
mov
jge
sub
push
add
push
jnp
cmp
popf
fmull
mov
pop
or
xor
not
jge
std
insl
inc
xchg
adc
idivl
jae
inc
fwait
fwait
push
pushf
mov
shrb
mov
mov
in
mov
les
mov
pop
push
mov
xlat
push
dec
mov
adc
das
pop
out
dec
jecxz
repnz
mov
sti
push
sub
jmp
jge
aaa
sub
fstl
test
aam
call
imul
push
mov
mov
stos
sub
ret
call
in
mov
enter
mov
in
outsb
jmp
repz
sbb
std
push
lds
pop
cwtl
add
jg
pop
and
call
jle
sub
fstpt
xchg
out
call
lret
sub
int3
imul
pop
in
push
mov
mov
loop
repz
sub
mov
fcomps
dec
jmp
fstpt
int3
or
and
or
call
xchg
mov
dec
and
mov
popl
xchg
negb
sub
xor
push
push
hlt
fstpt
add
or
sbb
inc
pushf
out
rolb
daa
mov
adc
lret
inc
loope
mov
gs
out
mov
ja
pushf
out
mov
add
out
js
inc
push
xor
loop
jbe
aam
pop
pushf
xchg
in
stos
pop
js
fwait
push
pop
negb
adc
mov
lahf
mov
mov
dec
mov
clc
imul
mov
in
test
mov
mov
int3
add
ljmp
dec
jl
pop
mov
out
scas
pop
push
xchg
movsb
jnp
xor
xchg
or
shrl
adc
fdivp
dec
inc
sbb
inc
cmp
xor
push
std
pop
inc
ret
sub
stos
mov
xchg
mov
adc
inc
aad
addr16
push
les
jno
mov
jne
sarl
test
cld
push
push
or
pop
bound
dec
pop
ret
xor
andb
ja
and
inc
jae
xchg
sahf
push
cmc
and
fcoml
pop
addr16
aaa
incl
bound
int
xorl
repz
jge
fiaddl
cli
ds
pusha
cmp
push
mov
fistl
mov
movsb
scas
jbe
ret
jo
xchg
aaa
pop
aam
push
cwtl
mov
xor
or
or
pop
jnp
adcb
fcompl
cmc
cwtl
jl
popl
psubsw
pushf
in
push
fisubl
pop
fimuls
xchg
jecxz
shrl
into
stc
std
rorl
pop
push
xchg
jb
popa
outsl
sub
cmp
inc
xchg
int
sbb
call
stc
daa
inc
das
cs
daa
xor
dec
adc
mov
cmc
fstps
addr16
mov
int
leave
xchg
sub
inc
inc
icebp
dec
pushf
sub
pop
mov
pushf
cmp
rcll
outsl
inc
and
add
lock
sub
fsubrs
imul
add
jbe
sbb
into
push
mov
in
in
repnz
xor
pop
shl
aam
popf
or
pop
pop
mulb
mov
jbe
out
and
addr16
push
leave
dec
mov
xor
pop
add
pushf
push
adc
stos
xchg
movsb
stos
pop
sti
sete
jns
xlat
xchg
jg
push
sbb
mov
rclb
dec
lods
insb
mov
hlt
or
cli
inc
push
mov
adc
filds
clc
stos
push
or
mov
test
xchg
adc
lahf
cmpsl
ds
lahf
and
aas
shll
out
sbb
out
jmp
fsubrl
pop
push
test
mov
movsb
fistps
inc
inc
cmpsb
cmp
data16
iret
jo
or
fwait
pop
dec
mov
repnz
jne
sub
and
inc
pop
andl
roll
adc
mov
pop
jno
pushf
addr16
cwtl
dec
in
mov
std
movsb
rcrl
jge
xor
sub
cmp
lcall
jp
dec
mov
idivb
outsb
jmp
jne
sbb
mov
xchg
adc
paddsw
or
loope
outsl
jle
push
mov
sub
xchg
push
sbb
xor
push
int
xor
cmpsb
out
xchg
ffreep
enter
cmp
in
dec
dec
ja
lds
push
push
mov
inc
movsb
jecxz
aad
pop
stc
pop
xchg
test
mov
pusha
popf
mov
pushf
pop
sbb
dec
pop
lret
repnz
adc
add
cmpsb
loopne
lds
xor
adc
lock
fcmovu
jnp
dec
and
je
adc
push
adc
idivb
lea
std
sub
jp
and
mov
arpl
pop
icebp
xor
call
jmp
mov
xor
inc
ffreep
popa
jg
dec
push
sub
nop
sbb
push
jecxz
add
in
push
in
xchg
call
jle
cs
ret
outsl
adc
test
aam
iret
and
mov
aam
add
sahf
or
jl
dec
and
imul
or
xor
insb
insl
xor
xchg
push
cwtl
scas
call
adc
mov
inc
jl
pop
jecxz
fcomi
inc
mov
inc
sub
pop
fistps
pop
mov
jae
inc
sub
mov
lea
adc
and
mov
cmp
loop
enter
imul
push
sub
mov
cltd
rorl
mov
cmp
movsb
jbe
dec
test
push
out
inc
icebp
gs
ret
push
daa
dec
clc
sahf
aad
cmpl
sbb
dec
lcall
outsl
out
or
inc
shl
cmp
enter
icebp
call
les
iret
subb
mov
mov
add
xor
lods
in
in
adc
fimuls
and
pop
sub
mov
mov
loopne
xor
push
jl
jae
fbld
adc
stos
lea
fisttpl
fcomi
nop
outsb
in
inc
or
negl
jns
or
testl
xor
popf
cs
rcrl
mov
ss
cli
mov
add
mov
test
and
cmp
cli
sti
xlat
in
sub
push
sub
mov
outsl
fistl
imul
in
mov
clc
fstps
clc
push
xor
fcomps
add
jmp
cld
pop
dec
mov
insb
jl
mov
stos
xchg
mov
aad
add
in
cmp
lock
mov
mov
push
mov
xlat
pop
sbb
xchg
enter
cmpsl
inc
test
sbb
sbb
mov
jecxz
push
std
mov
ja
or
loop
in
mov
fildl
and
add
leave
jp
repz
rcrl
mov
sbb
xchg
out
push
inc
xchg
fimull
jnp
enter
je
insl
push
ficoms
les
add
pop
iret
cmpsl
aas
xchg
movb
movsl
sbb
lods
adc
aaa
dec
and
stos
jecxz
cmpsl
push
jp
mov
loope
into
gs
mov
xchg
stos
out
xchg
rol
sbbl
inc
jne
add
cs
lods
adc
pop
sub
fsub
mul
in
xchg
mov
test
repnz
roll
mov
mov
test
loopne
loope,pn
and
dec
push
or
sub
xchg
sahf
clc
in
mov
mov
fwait
out
add
insb
xchg
shll
or
lcall
outsl
dec
hlt
sbb
fistl
or
cwtl
cli
loope
xchg
xchg
cltd
ljmp
cmpsl
mov
repz
sub
dec
adc
movsb
add
sbbl
sub
xor
jmp
in
orl
sub
leave
daa
jg
inc
ljmp
out
adc
jmp
cld
rcr
or
fsubrs
or
lods
testl
push
out
adc
add
dec
mov
dec
pop
aaa
out
in
repnz
sbb
xlat
jo
gs
in
xor
jl
mov
or
and
mov
ss
mov
push
fidivl
imul
cltd
xor
stos
pusha
test
push
fildl
lret
sbb
aas
sbb
mov
mov
mov
push
aad
mov
cmpsl
cmpsb
push
push
cltd
out
out
lds
cmp
mov
lods
push
push
or
popf
jg
or
dec
push
and
xchg
stos
jns
sub
ja
mov
add
cmc
loope
push
dec
xchg
mov
out
cld
pusha
pop
pop
jo
sahf
cwtl
add
push
lcall
jae
imul
iret
es
jp
xorb
push
movsl
push
jno
mov
pop
adc
int3
inc
rcll
in
pop
fsubl
mov
lret
and
pop
inc
popf
push
loope
dec
xor
cwtl
and
nop
sbb
xchg
push
mov
add
bound
test
insl
pusha
push
dec
lret
sahf
test
xlat
dec
loop
cld
adc
jne
js
and
mov
iret
lret
dec
mov
mov
scas
mov
inc
pop
ss
call
pop
dec
cmpsb
testl
stos
js
mov
xchg
sbb
loopne
cld
dec
ret
jno
in
mov
sahf
scas
inc
rcll
add
cmp
cmp
add
sub
lcall
pop
inc
sbb
jo
je
xlat
mov
push
and
jbe
pusha
ljmp
in
mov
or
outsl
jns
jb
jle
incl
cmp
jmp
aad
mov
sub
fcmovnu
adc
das
imul
jle
pop
cwtl
andnps
jbe
jno
jmp
jns
in
std
fs
cwtl
sti
cmpsb
sub
test
add
or
fwait
cli
mov
xchg
insl
xor
pop
xor
push
sbb
aam
imul
push
jno
xchg
out
lock
dec
push
js
shl
mov
dec
inc
gs
adc
jne
dec
jge
nop
cmp
inc
loopne
hlt
jmp
and
mov
jbe
inc
lea
sub
add
adc
ljmp
orb
sarl
dec
push
cmp
adc
loop
or
xchg
aas
add
jmp
mov
idivl
mov
inc
inc
jnp
or
mov
pop
inc
jbe
shrb
push
push
aas
mov
xor
test
in
dec
push
jmp
in
xor
adc
cs
call
out
xchg
adc
pop
data16
xchg
fstps
subl
mov
xor
dec
cli
fdivr
xchg
arpl
sub
sbb
dec
xchg
push
pop
in
adc
xchg
mov
fnstenv
outsb
and
jge
pop
inc
into
xor
test
imul
cli
lret
das
iret
or
mov
mov
push
cmp
std
arpl
mov
aam
cwtl
sub
test
or
xchg
cs
cmp
and
cmp
testl
bound
lcall
bound
fisttpl
int
cmpsl
sbb
cmpsl
xor
ret
mov
adc
jge
pop
pop
inc
movsb
sbb
test
out
and
xor
addr16
dec
pop
sub
movsb
lahf
pop
les
sbb
frstor
lods
mov
mov
out
xor
adc
pop
jg
pop
mov
pop
dec
out
in
mov
mov
ja
add
sti
loope
inc
dec
test
cmpsl
scas
cli
add
pop
xor
mov
adc
xor
pop
dec
mov
ss
stos
pop
bound
pop
inc
int3
inc
push
dec
fsubp
call
sub
cwtl
call
xor
mov
clc
mov
ret
dec
insl
sahf
mov
or
mov
out
push
cltd
jno
fdivl
clc
push
jno
test
add
das
test
test
test
add
xchg
popf
mov
gs
cmc
fsubrl
enter
mov
jmp
push
jmp
push
mov
jnp
stos
fcompl
and
ret
pushf
jl
out
aam
clc
mov
int3
or
xor
sbb
and
mov
xchg
int
sbb
jne
or
xlat
pop
mov
aaa
icebp
push
movsb
movsl
sub
mov
dec
orb
loop
aad
shlb
out
add
lret
lcall
fistps
xchg
fnstenv
ds
das
push
inc
js
sub
in
mov
cmc
push
push
pop
mov
sti
incl
in
into
orb
in
mov
movsb
mov
jg,pt
mov
out
fcoms
mov
cmp
inc
div
mov
jae
sub
mov
aad
iret
insl
xor
mov
es
lds
mov
adc
or
sub
dec
lds
cld
pop
cmp
inc
out
loop
out
int
xor
inc
xchg
cld
popf
fcoms
pop
lds
cwtl
xchg
mov
imul
mov
pop
xor
pop
out
mov
lock
cmp
aaa
mov
fisttpl
jae
lahf
pop
lds
lret
mov
jae
mov
pusha
adc
lock
xchg
loope
es
pop
outsb
jmp
mov
or
xor
xor
jnp
inc
cmp
lret
inc
cmp
adc
or
inc
xchg
inc
mov
call
or
out
push
mov
rolb
lods
sbb
imul
ret
xor
push
jle
cmp
repnz
enter
sbb
xor
aas
push
std
lods
xor
hlt
inc
pop
and
call
or
mov
fidivrs
push
cmpsl
mov
mov
xchg
mov
std
movsl
daa
jb
inc
jb
adc
lret
pop
pavgw
xchg
popa
or
ljmp
outsl
lret
ss
popa
sub
les
mov
jno
jbe
cmp
push
incl
bound
cmp
cmp
add
test
cmpsl
call
call
push
push
test
loope
lods
jnp
xchg
mov
cmp
subl
ret
inc
mov
fld
push
push
out
dec
int
mov
mov
imul
addb
sbbb
cld
and
or
divb
inc
pop
cmp
fwait
inc
or
xchg
pusha
mov
jbe
inc
push
in
jmp
lods
pop
mov
cmc
mov
cmp
aas
fcomi
lea
xlat
icebp
add
in
mov
and
jae
mov
pop
mov
test
pop
cmp
jle
test
sbb
fs
push
jmp
cmp
mov
subl
cs
xchg
mov
fs
mov
fdivp
fsub
mov
into
scas
xchg
ffree
mov
cmp
pop
repz
or
push
add
fstl
outsb
mov
stos
or
out
add
ffreep
inc
pop
outsl
shl
mov
lret
adc
xor
push
push
xor
xchg
adc
push
outsl
adc
adc
adc
out
lock
pop
jnp
xchg
daa
lret
mov
cmp
lock
pushf
into
jae
adc
out
out
jmp
fs
out
sti
data16
cmp
loop
dec
testb
sub
fisttpl
mov
les
dec
nop
in
xchg
lahf
sbb
add
dec
jp
popa
jbe
icebp
andl
aam
dec
mov
sbb
lock
pop
lcall
xor
mov
out
pop
lcall
in
imul
lods
clc
xchg
movsl
nop
sub
sbb
test
dec
dec
or
or
mov
mov
mov
push
in
fidivrl
js
ret
les
jge
xor
sti
nop
add
lcall
xor
xchg
call
stc
mov
adc
xor
test
sbb
movsl
int
sbb
dec
leave
sarl
ds
sbb
inc
add
xor
aad
or
sbb
sbb
fidivl
in
shl
clc
stos
in
movsl
push
ds
cwtl
out
sbb
out
xchg
nop
or
out
rorb
and
or
jge
incl
xor
loope
imul
jmp
pusha
sbb
subl
dec
bound
mov
sub
cld
test
push
sarb
and
dec
mov
dec
inc
add
add
push
mov
rcl
push
mov
in
adc
adc
inc
out
enter
cwtl
pop
icebp
add
xor
cmp
lret
mov
xchg
mov
jle
push
imul
inc
insl
pop
pop
fcompp
or
lods
movsb
dec
rclb
inc
rol
dec
lret
ss
fsubrl
jb
xchg
mov
push
pushf
lret
cld
push
incb
adc
sbb
roll
mov
xchg
movsl
mov
sub
mov
dec
push
add
rcrl
xchg
adc
jns
sbb
sbb
push
sbb
hlt
movsb
dec
filds
and
in
inc
movsb
jle
jmp
fs
mov
xchg
inc
fsts
jnp
push
mov
data16
lods
pop
sub
push
mov
push
popf
xchg
dec
xchg
mov
shlb
xchg
adcl
pop
subl
lahf
pop
jecxz
lea
push
das
loop
sub
adc
popa
or
adc
or
pop
pop
js
dec
xchg
int
enter
lods
lods
mov
in
jmp
lcall
out
movsb
and
in
mov
ss
push
icebp
cwtl
push
repz
lods
sbb
jnp
mov
pop
jne,pn
pop
xlat
mov
mov
xchg
and
sub
lods
sti
inc
les
xor
lods
insl
mov
das
repz
loopne
cmpsb
pop
cltd
aam
pop
jns
mov
test
sub
inc
imul
sahf
popf
inc
popf
sahf
bound
movsl
std
inc
enter
pop
iret
test
sbb
jo
sahf
std
inc
pop
push
push
mov
movsl
arpl
xchg
adc
test
jle
call
inc
xor
cwtl
jle
repz
ljmp
or
test
mov
adc
insl
dec
scas
test
jecxz
sub
cmp
test
push
add
repnz
outsl
fs
sbb
lret
mov
pop
jg
test
jmp
push
push
inc
push
lret
repz
jne
sub
pop
dec
or
mull
jne
das
jl
ret
jecxz
out
xor
mov
hlt
push
adc
sub
xor
sbbb
test
test
fnstsw
loopne
gs
insl
enter
stos
test
cmc
xor
adc
std
add
pop
jne
push
popa
movsl
scas
mov
loopne
sub
ss
test
xchg
lret
rorb
iret
mov
xor
int
fists
and
cld
jle
cwtl
js
mov
cmp
push
cmc
adc
jo
aaa
mov
sub
adc
es
inc
leave
push
sahf
loope
insl
icebp
xchg
add
in
inc
sbb
inc
stos
xor
inc
stos
mov
pop
mov
clc
cltd
ds
mov
inc
lcall
out
pop
insb
pushf
in
les
bound
adc
icebp
inc
pop
fdivs
pop
inc
pop
sub
jnp
ja
pop
leave
inc
in
fcmovbe
inc
xchg
into
jge
stc
clc
jnp
pop
movsl
adc
std
mov
pop
int
lods
jge
cltd
cmp
push
mov
repz
int3
pop
test
insb
jmp
xchg
xacquire
movsl
std
lods
hlt
cmpsl
sbb
outsb
loopne
mov
out
dec
and
add
mov
test
xlat
sbb
divps
das
push
mov
cmpsl
shll
inc
test
push
insb
pusha
xchg
into
jecxz
cwtl
out
xor
rorl
push
enter
cmc
jae
cmp
mov
mov
popa
mov
push
and
psubsb
add
xchg
push
pop
inc
fcomps
les
mov
loopne
aam
pop
add
inc
add
sbb
inc
fidivrs
dec
push
inc
out
imul
aam
pop
mov
dec
mov
lea
int3
pop
in
in
lret
sub
cmp
pop
loope
push
xor
imul
mov
popf
lods
movsb
pop
incb
daa
out
orb
sub
popa
es
sahf
push
stc
xchg
outsl
jb
mov
inc
push
daa
inc
fimuls
mov
jo
adc
stos
aas
adc
inc
mov
loopne
add
mov
push
sbb
repz
cltd
stos
movsl
mov
xor
lods
pop
sub
loopne
add
repz
jmp
mov
aas
orb
mov
mov
dec
test
inc
sub
in
les
repnz
sub
jae
mov
and
popf
fstpl
and
cmp
xor
clc
xor
pusha
or
outsb
rcll
push
or
pop
mov
adc
mov
dec
jmp
xchg
aad
outsb
mov
dec
add
sub
in
sub
ds
fmulp
mov
inc
stc
dec
add
lret
in
pop
inc
cs
dec
cs
push
xor
push
cli
and
cmp
inc
int
nop
ljmp
pusha
cltd
leave
sar
in
popf
xchg
cli
or
lret
lahf
adc
fbstp
fs
inc
or
stos
adc
scas
jg
and
cmc
frstor
mov
rorl
pop
scas
cmpsl
lods
sub
cmpl
stc
nop
ja
jg
and
lcall
dec
jnp
clc
push
fidivrs
cmp
jecxz
es
rorb
out
icebp
out
push
dec
push
fsubrs
mov
mov
aaa
clc
mov
add
test
int3
bound
mov
xchg
repz
adc
xor
push
andl
xchg
into
inc
in
cmp
mov
cltd
das
cmp
insl
out
sub
test
leave
sbbl
sub
fucomip
mov
aam
pop
jge,pn
mov
mov
push
hlt
inc
mov
arpl
push
popf
push
mov
and
xchg
jb
mov
fidivrl
in
mov
cmp
and
cmp
sbb
ds
aad
outsb
xchg
test
sub
mov
imul
inc
and
mov
pop
stos
xor
dec
xchg
mov
hlt
inc
xor
in
mov
repz
xor
push
pop
fisttpll
cmp
shll
pop
stos
dec
jl
aad
mov
icebp
mov
adc
adc
xor
xor
mov
shl
ret
inc
sub
or
mov
arpl
mov
pop
fistpl
push
inc
mov
iret
idivb
mov
icebp
dec
push
int3
pushf
mov
pop
subb
push
mov
mov
lret
mov
push
cmp
cmp
xchg
incb
test
test
pop
and
popl
mov
or
dec
jnp
addr16
ljmp
add
cmp
or
lods
fstpl
inc
mov
sti
jmp
pusha
sbb
out
insb
fisubl
jbe
add
mov
or
lahf
loope
cld
mov
inc
das
cmp
pop
and
inc
fdivs
std
subl
shl
test
push
int3
ss
scas
cmp
sub
mov
repz
dec
movntq
mov
xchg
test
xchg
dec
jae
inc
iret
shl
adc
xchg
ss
mov
lods
pusha
mov
xchg
mov
bound
clc
push
xor
push
fdivl
repz
dec
loop
insb
xchg
aaa
and
sbb
aas
and
xchg
fstps
ror
jne
push
cmp
in
mov
xchg
daa
enter
fnstcw
popa
or
repz
jmp
ret
jmp
sub
xor
sbb
outsb
inc
push
mov
sbb
mov
push
fdivl
adc
jns
out
movsl
loop
sub
sbb
sahf
in
test
adc
cmpl
push
add
aaa
add
or
xor
call
icebp
inc
loop
push
das
mov
movsb
or
arpl
lods
mov
xchg
sub
and
mov
sbb
mov
adc
in
pop
cld
popf
in
push
xor
pop
das
dec
test
lods
mov
mov
stos
mov
ret
out
fisubs
jns
pushf
or
imul
sbb
mov
sahf
sbb
lret
outsb
loopne
and
xchg
adc
stos
mov
lret
xor
mov
or
aaa
ljmp
mov
stos
sbb
outsb
cmp
mov
add
aas
int
addb
and
loopne
test
push
xchg
rorl
loopne
pop
inc
fsubl
and
stos
push
push
push
sbb
lcall
daa
out
xor
jb
inc
fcmovbe
ret
icebp
xchg
cwtl
jno
sub
jg
inc
shll
add
push
pushfw
dec
pop
mov
fdivrl
je
sbb
sti
push
movsl
out
lods
or
pop
cmpsb
mov
leave
mov
stos
sbb
aaa
add
mov
jnp
cmpsl
movsb
cmpsb
lods
cmc
sub
data16
and
jne
and
mov
cltd
jno
push
add
mov
pop
cmp
rolb
inc
aaa
lret
pushf
icebp
fdivrl
iret
fisttpl
mov
sub
jnp
cmp
add
call
nop
sbb
das
mov
cmp
inc
inc
push
fldl
jae
adc
and
mov
push
and
ror
pop
push
xchg
iret
lods
push
divl
push
aaa
mov
inc
loop,pt
arpl
out
mov
fimull
rcrl
iret
pop
mov
pop
xchg
jge
pop
out
push
cs
add
sub
rorb
movb
jno
jge
bound
xchg
pop
outsb
push
mov
dec
cmc
sub
lods
in
pop
testl
insl
ja
sub
aam
mov
cmp
xchg
insb
mov
cwtl
daa
fdivl
sub
push
aam
lret
lret
sbb
jae
or
daa
popa
icebp
jecxz
pop
aad
sbb
fsubr
gs
les
lods
leave
push
int3
nop
ljmp
pushf
shll
xlat
sbb
into
and
js
pop
ds
xchg
inc
sbb
xchg
dec
enter
int
in
out
fldcw
cmpsl
insl
ret
jle
mov
pusha
push
inc
vcvttsd2usi
leave
dec
nop
fdivs
sub
leave
repnz
adc
xchg
push
add
sub
xorl
mov
mov
cmp
xchg
mov
sahf
push
daa
loopne
xor
xchg
mov
inc
mov
adc
xor
xor
pop
and
pop
pop
add
or
mov
push
cmp
mov
mov
sarb
dec
pushf
mov
add
and
repz
ja
stos
jl
into
pop
xor
sub
xchg
xor
loopne
pop
mov
iret
imul
ljmp
dec
jae
clc
xchg
repnz
xor
fisttpll
lret
pop
mov
xchg
ljmp
jge
cld
mov
ficomps
mov
pop
hlt
loopne
inc
pop
loopne
mov
xlat
aam
dec
cmp
nop
mov
or
ja
in
or
push
mov
sbb
mov
mov
in
out
xchg
push
cmc
orl
or
mov
mov
dec
cmp
xor
clc
jl
or
xchg
clc
lcall
cli
inc
test
sub
xor
aam
sub
les
insl
aaa
add
notb
std
aas
xor
inc
mov
fwait
shrb
pop
or
dec
jmp
pop
inc
or
arpl
xor
sub
in
and
adc
sub
mov
push
inc
in
test
nop
cwtl
fidivrs
fcoms
mov
cmp
notb
xchg
stos
loopne
mov
test
ss
jbe
adc
mov
outsl
notb
xchg
jb
pop
mov
int3
add
jmp
jnp
dec
sub
shrl
push
imul
and
push
fisubrs
add
call
addr16
mov
sti
scas
xor
dec
push
or
cmp
push
iret
push
lret
pop
pop
pop
push
fwait
inc
outsl
lret
mov
xor
xchg
std
add
mov
fwait
add
cs
scas
adc
add
jmp
fmuls
les
jb
test
adc
loop
push
cltd
data16
in
mov
mov
loope
dec
lret
cmp
icebp
adc
mov
jmp
imulb
ja
hlt
dec
imul
popf
pop
jle
enter
fistpl
adc
insb
scas
xor
aas
addl
add
insb
add
fcomps
pop
add
bound
and
mov
test
movsb
sbb
dec
mov
inc
movsl
shll
xchg
int3
cs
jns
data16
aaa
shlb
jns
xchg
mov
shl
in
aaa
mov
sbb
filds
int
dec
cli
push
leave
push
movsl
loope
adcl
cli
push
mov
sbbl
jmp
mov
leave
mov
lahf
push
lret
aad
in
andl
pop
inc
add
pushf
cmp
push
and
leave
into
mov
addb
out
int3
test
xchg
cmp
mov
aas
push
mov
mov
fs
xor
or
mov
add
jnp
sbb
mov
dec
testl
enter
es
test
adc
and
adc
rcrb
mov
lods
arpl
sbb
call
stc
sub
aas
es
xchg
xorb
mov
jne,pn
cltd
in
pop
das
xchg
shld
repz
sahf
inc
xchg
sahf
jp
cmp
test
in
insl
jne
sti
shr
pop
mov
jmp
inc
popa
arpl
push
and
repnz
inc
push
rcll
rcr
cmp
fst
xchg
push
int
jmp
and
add
jge
jnp
or
popf
cmc
popa
mov
and
fsts
data16
mov
xchg
mov
or
cld
or
inc
sub
popf
leave
call
mov
pop
scas
lcallw
rorb
mov
push
and
pop
adc
push
loope
xchg
add
sub
lea
iret
iret
cmpsl
cmp
mov
aas
adc
and
sbb
mov
aad
mov
xor
add
push
ficoml
mov
jno
inc
pop
clc
out
dec
imul
xlat
cmpsl
xlat
subl
pop
stc
or
xchg
push
jb
test
nop
jmp
jns
dec
lea
push
mov
xchg
mov
mov
stc
ret
fidivl
pop
mov
xor
dec
mov
fistps
mov
mov
and
mov
jb
cmpl
mov
and
jmp
xor
ja
outsl
xor
pop
subb
testb
out
add
shlb
sub
je
jle
add
mov
cmp
iret
pop
sbb
in
icebp
mov
mov
insb
mov
jp
movsl
dec
cltd
das
into
and
lcall
leave
popf
mov
push
lods
cmc
jae
sarb
gs
repz
cmp
sti
daa
cmp
sbb
sbb
cmpsb
push
lret
mov
in
in
test
jnp
xchg
rolb
int
icebp
fimuls
add
ficompl
or
and
aad
mov
jg
adc
pop
inc
out
popf
mov
es
js
cs
iret
aad
jae
cli
mov
mov
mov
xor
das
mov
and
cmp
and
mov
shlb
out
inc
cmpsb
loop
aaa
loopne
rorl
jns
and
pop
lahf
or
test
cmc
les
icebp
clc
jns
std
shlb
mov
or
lods
jg
mov
xchg
mov
dec
shr
dec
aad
pop
cmpsb
inc
xchg
mov
cltd
pop
or
xchg
mov
xchg
pop
test
inc
es
jnp
cmp
lock
insb
lds
adc
mov
or
cmp
sarl
loop
pop
mov
icebp
lock
sarb
sub
push
adc
insl
test
es
loop
mov
jno
sub
mov
xor
cltd
movsl
mov
or
push
or
and
or
cmpsb
popf
cmp
jge
mov
push
mov
sahf
roll
dec
js
add
mov
fildl
jb
sub
sub
ss
out
jle
jp
pop
or
data16
cmpsl
aas
cltd
mov
xchg
fs
cmpb
mov
inc
push
insl
sbb
push
jbe
inc
stc
scas
mov
mov
out
scas
insb
jp
mov
cmpb
mov
mov
and
ds
inc
sub
cs
jg
lcall
into
repnz
enter
jmp
mov
int
add
sub
lock
pop
and
out
clc
lock
addb
push
cmp
cltd
jg
push
ret
int3
xor
cmp
mov
dec
nop
xor
sbb
push
add
cmpsl
mov
xor
inc
icebp
add
adc
xor
ret
or
cs
push
fildll
shlb
out
icebp
sbb
push
jmp
push
in
or
cmp
jns,pn
fucomi
push
aad
sub
or
cmp
sub
sub
movsl
mov
ret
into
jecxz
insb
ret
cltd
lock
das
mov
stos
into
ja
jge
sub
xchg
mov
lret
add
push
sbbl
out
into
xchg
push
pop
sub
mov
iret
sub
movsl
mov
test
jb
das
jecxz
cmpsb
movsl
inc
stos
cmp
test
dec
push
or
insb
cltd
ss
jl
test
ffreep
cs
out
adc
cmp
out
xchg
jmp
test
cmpsb
data16
jbe
into
dec
repnz
leave
lock
lds
nop
jbe
xor
test
int3
fldenv
or
scas
sub
aad
push
adc
pop
or
and
jb
inc
imul
fidivrs
inc
lret
cld
sti
xchg
enter
push
push
jnp
popf
inc
mov
add
sub
and
inc
push
in
out
leave
pusha
sti
fisubrs
adc
push
mov
icebp
lcall
mov
sahf
xor
sbb
sbb
mov
xor
lds
icebp
hlt
pop
ret
lea
jo
lcall
mov
pop
loope,pn
repz
mov
jo
sbb
flds
cmpl
add
sbb
mov
or
jnp
lea
pusha
into
stc
inc
or
das
js
dec
xchg
iret
push
out
pop
or
and
bound
mov
xchg
out
sbbb
xchg
data16
cmp
pop
rcrl
push
pushl
stos
push
sbb
inc
sbb
adc
adc
sbb
mov
xorb
mov
mov
out
mov
pop
or
xor
imul
sbb
in
cmp
mov
lea
lahf
jmp
into
xor
pop
rorl
je
shll
sub
sbb
jae
sub
mov
xor
mov
mov
mov
push
arpl
into
iret
push
loop
mov
dec
pop
icebp
xorl
les
das
mov
ds
loope
sbbb
adc
xchg
pop
outsb
sbb
test
xchg
cmpsb
sbb
cwtl
cmp
push
mov
loop
lea
mov
sbb
xchg
dec
movsl
push
mov
outsb
dec
bound
xor
xchg
lcall
mov
jp
push
fs
xchg
mov
test
fdivr
mov
dec
sbb
jmp
cltd
popa
push
in
inc
rcrb
ror
cmp
hlt
sarl
mov
and
mov
pop
xchg
add
jmp
jg
pop
dec
aad
fidivrs
push
pop
and
mov
cld
pop
sub
mov
xor
fisubrs
imul
xchg
xor
dec
dec
mov
jo
lods
xchg
fisttps
pop
sbb
cmp
aaa
add
push
pop
mov
out
lcall
mov
sub
test
inc
push
icebp
pop
fstpl
in
jecxz
jns
das
fwait
loopne
jo
mov
sbb
push
lahf
jg
adc
loope
push
pop
cmp
cs
pop
or
sbb
pop
cmp
clc
fsubrs
test
cld
roll
fldcw
scas
out
inc
xor
pushw
cmp
or
adc
test
leave
insb
jne
add
gs
aad
ret
insl
scas
pusha
and
xchg
outsl
jmp
mov
pop
push
jl
xchg
add
insb
mov
push
adc
push
xlat
ljmp
adc
pop
jae
loop
mov
int
sbb
push
and
test
shrl
test
mov
jo
add
xlat
mov
adc
jo
cmp
pusha
inc
lods
aam
outsb
je
ss
push
cmp
mov
push
jmp
out
aad
jnp
fsubrl
rep
clc
aas
gs
mov
push
leave
pushl
mov
xchg
loope
xchg
gs
push
outsl
mov
pop
les
sub
cmp
cmp
dec
lcall
add
cmp
jmp
pop
je
jno
mov
add
pop
lock
pop
push
movsl
pop
imul
add
pop
div
mov
add
pop
in
add
mov
mov
mov
std
loopne
adc
xchg
ljmp
scas
bound
jnp
adc
clc
movsl
fldcw
in
inc
aam
inc
push
popf
push
or
xchg
call
cmpsb
les
adc
add
and
inc
jg
ljmp
jl
jg
xchg
sub
dec
add
addr16
push
push
loope
insb
push
fwait
shrl
rcll
fisubrs
cmp
xor
or
movsl
test
mov
mov
dec
imul
mov
jbe
cli
pop
jns
mov
test
mov
and
add
into
or
popf
movsb
push
std
pop
push
push
and
addr16
pop
inc
js
in
out
bound
sbb
stc
leave
xchg
insb
arpl
fwait
std
push
dec
and
mov
mov
jno
mov
push
push
mov
movsl
dec
dec
andb
test
popf
fldl
pop
inc
dec
or
sahf
stos
xchg
add
or
or
mov
or
in
and
clc
push
push
sub
push
cs
nop
fbld
inc
out
sub
xor
arpl
and
jo
mov
fsubr
fcmovu
push
pop
fsubrp
clc
inc
adc
mov
arpl
cltd
stos
outsl
call
andb
or
mov
mov
mov
and
push
or
test
jle
lock
stc
xor
or
and
ja
jecxz
cmp
xlat
decl
divl
jne
movb
mov
insb
fmuls
ss
inc
mov
lcall
lods
dec
add
sub
mov
mov
int
xchg
out
pop
clc
or
repnz
sbb
pop
and
popf
xor
jb
jmp
scas
fnsave
hlt
jge
js
or
mov
adc
js
cmp
aam
out
fisubl
out
jno
out
cmpb
mov
mov
lds
sbb
in
push
imulb
push
sub
addr16
gs
sti
xchg
or
aam
leave
xchg
mov
mov
leave
pop
adc
mov
jno
mov
xchg
adc
scas
adc
pop
mov
xor
sti
mov
cmpl
repz
cmp
xlat
mov
or
sahf
xchg
adc
jge
int
sbb
daa
jmp
mov
push
inc
das
shrl
cwtl
jmp
add
imulb
ss
rcl
dec
fdivl
sbb
fldl
jb
sbb
mov
mov
mov
jmp
cs
lret
jge
aas
sub
test
dec
push
stc
icebp
lock
les
pop
sti
lahf
dec
pop
pop
iret
les
mov
out
popa
jns
lcall
push
cmc
pop
mov
sbbb
and
sub
xchg
jl
xlat
fisubs
mov
jno
sub
fs
dec
movsl
jmp
push
jo
cli
push
stc
xchg
jmp
pop
jmp
dec
pop
dec
lret
dec
jno
lods
negl
push
mov
sahf
adc
out
lcall
mov
sub
pop
adc
lcall
movsb
jmp
movsl
scas
xor
outsb
and
pop
jo
mov
cmp
xchg
cld
cmp
push
adc
cmp
add
insb
and
rorl
adc
lds
cltd
pushf
sub
mov
mov
fisubl
mov
mov
icebp
push
dec
jg
jmp
sbb
cs
cli
shlb
lcall
mov
aas
xchg
movsl
xchg
testl
movsl
or
shlb
lcall
aas
mov
xchg
orb
pop
es
mov
add
mov
addl
ret
movsl
daa
xor
dec
nop
sbb
inc
dec
mov
pop
push
mov
jne
xchg
std
dec
xchg
jbe
or
bound
push
cli
mov
imul
cmp
sub
push
loopne
inc
iret
ficoml
mov
jmp
sbb
sbb
push
das
pushf
mov
cld
push
out
sahf
js
stos
and
ret
inc
lods
call
push
outsb
push
xor
je
adc
test
or
pusha
sbb
mov
mov
mov
push
pop
xchg
enter
add
mov
cmc
jo
movsl
addr16
repz
in
xchg
cmp
clc
test
or
or
dec
pusha
ret
pop
test
cmc
jns
jb
inc
cmp
xchg
call
je
stos
jmp
in
out
sub
xchg
and
add
neg
lods
in
jl
movsl
push
cli
mov
mov
mov
mov
inc
pop
lcall
mov
xor
icebp
int
xchg
jg
das
push
ss
test
iret
push
test
jne
jmp
adcb
pop
mov
inc
pop
mov
mov
jg
cmp
out
inc
loop
push
xchg
inc
test
and
stc
cli
repz
fxtract
lods
fs
xchg
inc
push
iret
test
les
adc
adc
push
ret
mov
inc
mov
mov
mov
and
mov
pop
movsb
or
pop
aam
cs
cltd
pop
pop
sub
inc
or
or
mov
out
or
jg
mov
adc
sbb
mov
cmp
inc
je
inc
in
pushl
popa
push
faddp
sbb
inc
inc
fistps
or
jl
les
loop
loop
add
cs
sahf
mull
fldt
loop
inc
cwtl
jae
push
jbe
dec
and
fisubrl
sub
mov
sub
ss
cmpsl
adc
push
mov
add
ret
or
adc
std
movsb
sahf
mov
scas
add
dec
xchg
cmp
pop
push
mov
leave
or
xchg
mov
jbe
lods
push
es
cmc
pop
push
enter
in
cmc
pop
rcrb
pop
incl
inc
push
into
and
or
adc
sub
jb
mov
outsb
inc
mov
cld
jno
shrb
andl
test
xchg
xor
inc
add
dec
sbb
cmpb
icebp
and
std
cmpsb
add
popf
lcall
aad
push
xchg
sti
shlb
lds
sbb
aas
and
outsl
fmuls
pushl
cmp
icebp
addr16
jmp
xor
xchg
inc
mov
ret
jae
popf
into
hlt
das
or
lret
or
inc
cwtl
and
jae
jbe
dec
adc
loopne
add
mov
dec
cmpsb
cmp
and
in
sbb
rcl
stos
adc
mov
fcmove
leave
inc
pop
movsb
jne
sti
mov
jne
idivb
mov
xor
ficoms
cmp
inc
dec
pop
adc
les
rol
cmp
jno
rcll
cli
adc
fwait
xchg
jo
pop
add
cmpsb
lret
sbb
jg
mov
int3
cld
xchg
lock
clc
shrb
sbb
and
shll
scas
test
jecxz
fbld
xor
xor
pop
inc
ja
hlt
outsb
fidivs
insl
pop
shl
popf
xchg
js
ret
jmp
push
xor
mov
imul
sbb
mov
xchg
ds
insl
pushf
pop
mov
cwtl
cli
outsl
imul
sarb
rcrb
call
or
or
dec
fsubr
mov
dec
scas
add
adc
mov
out
test
subl
or
daa
inc
inc
ja
jae
inc
sub
shlb
adc
rorl
mov
jbe
dec
cwtl
add
in
inc
in
ret
adc
jb
push
push
inc
test
bound
sbbl
pop
lret
jl
pop
or
icebp
int3
or
xchg
pop
fiadds
push
in
mov
pop
in
mov
jnp
lret
mov
pop
daa
sbb
cltd
insb
and
dec
sub
in
in
jae
std
xchg
dec
xchg
add
inc
insl
cmc
ficomps
lods
pop
xor
les
shrl
mov
push
and
outsl
scas
add
pop
outsb
xor
mov
cmp
cmp
sbb
popa
pop
jmp
pusha
and
adc
test
sub
lods
pop
sub
inc
shlb
fsubl
cmp
fs
xchg
sub
pop
xchg
sub
rcr
test
push
nop
pop
int3
sub
mov
or
jbe
lahf
sbb
pop
mov
sbb
xchg
jns
lahf
lcall
scas
mov
aaa
test
mov
jge
sub
sub
xchg
movsb
shlb
and
jge
push
popf
jo
addr16
or
add
xlat
pop
xchg
push
fidivrs
mov
sbbb
sbb
fs
out
sarb
cmpsb
or
shll
repz
out
mov
loop
lcall
mov
mov
jb
mov
cmp
cmp
ds
notl
cli
jne
inc
lret
jmp
cmpsb
mov
push
jl
aam
sub
mov
pop
jbe
fdivl
mov
aas
sbb
loopne
jbe
cmp
lcall
iret
mov
frstor
dec
test
or
sub
pop
or
mov
aas
idivl
xchg
cmpsb
inc
testb
mov
out
int
nop
pop
mull
jns
jecxz
pop
inc
or
fnsave
mov
out
sub
cmp
inc
and
adc
lcall
popf
sub
mov
stc
cmpsb
subps
sbb
fidivrs
xchg
mov
inc
aam
mov
pop
ljmp
add
inc
sub
push
mov
mov
popf
addr16
or
das
shld
movntps
and
dec
push
icebp
lock
push
mov
ret
mov
addr16
jle
inc
mov
jg
push
movsl
adc
xchg
jne
ja
insb
cmp
mov
and
and
popa
andl
mov
jg
mov
outsb
sti
insl
std
pop
lcall
cmpsb
or
daa
imulb
pop
cmpsb
cmp
mov
dec
or
mov
in
cmp
test
jmp
in
push
sub
cltd
pop
inc
xchg
cwtl
inc
pusha
push
inc
dec
cmp
in
jne
and
sbb
daa
lcall
sub
js
or
add
outsb
mov
push
jle
and
sub
mov
lods
pushf
ljmp
mov
insl
jne
aaa
movsl
aaa
filds
jbe
lahf
test
pop
push
negb
aas
mov
or
jg
mov
push
das
popf
pop
push
xlat
addl
lock
pusha
aad
mov
int3
stc
or
adc
mov
sbb
cmovo
inc
lahf
cltd
pop
cwtl
mov
or
pop
jae
jl
and
cmp
outsb
mov
cmpl
out
sahf
lock
out
into
xor
dec
repz
cmpsl
cmp
xchg
xchg
pop
push
gs
ret
push
mov
push
pop
mov
push
pop
rcr
sbb
mov
inc
inc
mov
push
mov
jnp
lods
hlt
sub
idivl
ret
pushf
loopne
dec
jnp
in
pop
sbb
sub
or
ret
leave
cld
pop
xchg
push
xor
lret
enter
dec
jle
test
sbb
sub
mov
stc
fwait
add
aaa
mov
lods
inc
lcall
outsl
in
loop
sarb
int3
fwait
jge
lds
gs
lds
sarb
cld
and
inc
xor
lret
test
lea
xchg
outsl
pop
test
mov
jg
outsl
nop
test
lods
scas
and
outsb
stc
in
pop
sbb
mov
sub
scas
sbb
loopne
mov
stos
lods
or
pop
addr16
jne
scas
rcll
add
mov
dec
inc
pop
jg
push
cmpl
icebp
mov
cmpsl
xchg
stc
js
cmp
inc
lds
dec
xor
push
out
enter
in
jecxz
add
popa
or
pop
adc
leave
jo
jns
mov
sar
xchg
shll
lods
aaa
mov
mov
or
jmp
or
cld
sbb
add
cmp
pop
lds
sbb
lcall
shll
push
lret
lret
fldt
or
aaa
add
dec
pop
add
xor
sub
shll
push
or
gs
sbb
adc
mov
xchg
lea
aaa
xchg
mov
mov
xchg
dec
insl
mov
dec
cmc
dec
andl
decb
aaa
es
shrb
cli
pushf
xchg
and
pop
pop
int
xchg
jecxz
ret
das
jmp
xlat
push
add
jno
push
data16
pushl
adc
pop
js
add
pop
pop
mov
cli
xlat
xchg
aas
xchg
sar
mov
dec
aas
sahf
mov
test
inc
push
inc
subl
sahf
in
mov
xchg
jo
jo
mov
xchg
adc
test
iret
icebp
sahf
aas
gs
xor
and
scas
call
pop
das
xor
inc
add
jo
inc
xchg
mov
sbb
xchg
insb
jecxz
rcl
dec
cltd
fnsave
imull
insb
shrb
popa
xchg
mov
and
add
bound
jne
in
les
sti
inc
lcall
mov
add
scas
aaa
and
or
in
sub
adcb
out
push
inc
push
cmpsb
push
mov
push
dec
jns
jl
add
cmp
mov
pop
xor
xchg
cld
pop
ret
js
jae
jns
mov
outsb
sbb
mov
test
std
cmp
or
and
mov
in
out
inc
popa
shlb
mov
xchg
xchg
mov
stos
shll
cmpb
adc
inc
sbb
cwtl
push
cmp
or
out
sub
and
in
aad
jns
bound
out
ret
pusha
cmp
mov
rclb
aad
xor
in
in
in
aas
pop
mov
pop
sbb
cs
adc
in
mov
jns
lret
jbe
and
push
lods
adc
jne
loopne
ss
and
xchg
movsb
jns
bound
or
repz
gs
int
mov
jl
push
jg
outsl
add
jo
rcll
sbb
mov
add
test
add
push
imul
cli
std
stc
mov
or
cmp
xor
or
mov
push
ds
push
push
push
rcrb
push
xor
leave
insl
cmpsl
arpl
or
or
sbbl
hlt
mov
insl
sub
nop
fildl
mov
aas
jae
aam
fstps
test
lods
pop
xor
or
sarb
sub
fs
es
or
data16
sti
push
rcl
adc
mov
sbb
adc
xor
int3
push
mov
imul
mov
pop
jl
js
movsb
xchg
rorb
test
divb
push
fistpll
sti
data16
and
je
sbb
outsl
push
or
ret
orb
stos
mov
and
test
dec
and
in
movsb
mov
push
cld
jl
cmp
mov
lcall
pop
loopne
nop
mov
mov
jmp
cmp
add
in
adc
jge
adc
leave
ficompl
jl
sbb
jmp
sub
test
idiv
jl
xor
xchg
cli
mov
ljmp
pop
iret
scas
pop
data16
das
shrl
push
mov
inc
inc
notl
sbb
and
in
hlt
rorb
xchg
push
mov
mov
xchg
lods
jno
nop
mov
shlb
adc
sub
mov
mov
or
sbbl
out
jge
mov
arpl
adc
jecxz
out
xchg
aas
vaesdec
mov
mov
int
out
push
cmp
push
das
les
lea
mov
lcall
test
addr16
pusha
lret
mov
mov
adcl
sbb
sarl
test
dec
pop
jp
push
lock
pop
pop
mov
sarb
iret
test
pushf
xchg
adc
mov
sub
pop
jo
notl
imul
mov
mov
or
and
pop
dec
ljmp
outsb
or
xchg
adc
or
mov
in
add
sbb
sbb
inc
data16
ljmp
lsl
mov
cmpsl
mov
addl
out
inc
xlat
xor
xchg
lahf
xor
ret
and
mov
or
sarl
das
out
nop
sbb
mov
jo
xor
cmpsb
and
outsl
sub
cmpsl
jns
adc
arpl
out
das
testl
ret
ljmp
add
push
inc
movsb
sbb
test
ficomps
rclb
fsubrs
rcll
mov
stc
pop
cmpsb
pop
jne
mov
pop
jne
aaa
mov
mov
mov
int
icebp
fs
xchg
out
js
and
dec
xor
jne
std
cmc
bound
incb
and
mov
jb
in
adc
xor
hlt
dec
and
scas
insb
jb
sbb
cmove
add
mov
inc
out
mov
fsubr
test
xchg
xor
inc
mov
dec
insb
mov
mov
mov
lret
mov
fisttps
stos
cmp
sub
popa
cwtl
icebp
sbb
fwait
add
jecxz
test
fwait
jecxz
jno
loopne
add
stc
xchg
sub
ja
in
push
cwtl
xlat
stc
pop
inc
popa
std
pxor
stos
add
mov
je
fldln2
aas
outsl
mov
addr16
pop
mov
push
int3
and
mov
popa
push
jl
jno
mov
movsl
lahf
mov
jno
iret
mov
pop
xchg
cmp
xchg
jp
jmp
ss
pop
or
sub
or
jno
sbb
js
mov
loope
repz
push
outsl
xchg
dec
sbb
iret
xchg
testl
roll
lods
cmp
inc
inc
shrl
iret
lods
insl
sti
sbb
jge
test
or
jl
jg
sub
repnz
inc
dec
int
mov
xor
add
in
sub
cltd
lahf
lcall
in
sahf
xor
in
dec
outsl
das
pop
movb
popf
add
dec
dec
bound
jge
jp
jo
insl
add
sub
bound
jns
adc
adc
add
and
adc
outsl
orl
sbb
lock
mov
dec
in
jns
mov
clc
mov
lret
xor
jmp
fs
adc
push
into
cmovnp
jecxz
pop
jge
and
xor
movsl
adc
mov
lds
add
inc
cltd
out
cs
xchg
stc
out
and
xor
daa
mov
ret
pop
sub
cmp
fldenv
stos
and
add
cmp
pop
popa
pop
push
aam
sub
ljmp
or
jae
sbb
mov
push
inc
es
rcl
mov
cltd
dec
push
in
mov
sbb
out
call
pop
mov
in
cmp
test
in
lock
pop
clc
cmpsb
mov
or
sub
jp
rcr
in
fistps
sub
adc
fldl
andl
cmp
pop
rcl
jae,pt
xchg
scas
cmc
outsl
mov
rorb
inc
addr16
xchg
cmpsb
adc
popf
ljmp
out
ljmp
jle
arpl
inc
push
addr16
cmp
and
inc
sub
and
sub
rorl
mov
adc
rcr
dec
lret
pop
lock
out
mov
add
xchg
mov
divl
mov
pop
dec
lea
hlt
pop
mulb
sbb
adc
cmp
std
std
mov
hlt
add
sub
lcall
sbb
cs
inc
dec
bswap
mov
addr16
fdiv
jbe
jb
or
popa
and
jae
rep
mov
xor
notb
in
aad
stc
inc
add
mov
pushf
mov
std
inc
movsl
push
fstpl
lods
push
pop
mov
popa
rorl
sub
pop
mov
imull
pop
pop
lcall
dec
aaa
pushf
out
gs
push
xchg
nop
cld
or
icebp
pop
cmp
xor
cld
xor
ret
mov
push
cmp
sbb
dec
cmp
mov
jbe
jbe
mov
in
dec
sub
out
pop
mov
iret
lret
add
dec
xor
cmpsl
es
mov
out
jne
dec
scas
out
or
xchg
push
add
arpl
mov
imul
push
bound
mov
notb
mov
std
adc
jnp
stc
ja
jg
dec
mov
pop
gs
push
adc
adc
fsts
pop
and
cmp
repnz
xchg
mov
aas
mov
jbe
pop
das
add
cli
push
test
mov
cli
xchg
cmpl
dec
out
lret
add
js
and
push
and
inc
test
data16
xorb
xchg
dec
or
jmp
jg
int
push
pop
and
aam
sub
and
int
sti
nop
push
loopne
xlat
pop
dec
enter
jb
mov
pop
xorb
inc
hlt
cltd
jecxz
sti
adc
sbb
add
jp
mov
mov
add
push
cmp
stc
sub
div
mov
mov
sahf
cmp
xchg
dec
pop
and
cwtl
cmp
mov
ss
cs
and
xchg
add
sahf
push
push
movsb
jnp
pusha
notl
cmp
rcrb
sub
dec
cmp
or
inc
repz
fwait
mov
iret
out
lcall
dec
sub
movsl
aaa
or
xchg
inc
dec
testl
daa
lea
mov
jle
sbbl
xchg
jne
aaa
mov
jo
mov
dec
dec
xlat
add
sarl
in
insb
dec
ja
mov
cli
in
pop
lret
cmpsl
lds
or
cld
dec
mov
cmpsb
pop
xchg
sub
inc
push
call
and
pop
jns
adc
dec
pop
aaa
pop
cmpb
shll
mov
test
xor
ret
adc
aaa
inc
add
add
mov
push
dec
jle
jbe
cmp
pop
nop
xor
sbb
xchg
push
mov
sbb
in
int3
dec
jmp
pop
pop
push
orl
pop
cwtl
xor
push
daa
cmc
pop
mov
push
into
stc
test
jne
jp
adc
loop
lods
sbb
popf
dec
and
sub
or
jno
ja
push
xchg
scas
lds
shlb
jg
or
in
lods
std
loopne
pushf
pushf
dec
add
out
rorb
dec
fstps
and
scas
lret
rcll
cmp
or
dec
push
xchg
jne
adc
lods
call
aaa
mov
adc
cld
sahf
or
daa
inc
sub
dec
in
loope
mov
test
shrl
pop
hlt
addr16
in
sbb
cmp
push
nop
add
lahf
popa
imul
ds
dec
fcoms
mov
mov
sbb
ret
pop
mov
lret
cmc
sub
jmp
cld
jecxz
ret
fidivs
or
pop
mov
mov
cmp
inc
and
mov
idivl
push
jp
pusha
dec
push
data16
mov
pop
sbb
outsl
fs
pop
das
es
ficompl
jmp
cmp
sub
xor
push
pushf
aaa
test
dec
aas
aaa
mov
cmp
fisttpll
cwtl
pop
test
push
adc
cmp
cltd
sub
xchg
sbb
hlt
stos
daa
add
ss
ror
cwtl
jp
sbb
add
xlat
sub
pop
mov
push
dec
aad
pushf
lret
mov
pop
idivl
adc
mov
arpl
orb
xchg
dec
or
mov
stos
adc
popa
xchg
stos
fists
enter
mulb
pushl
inc
out
jbe
adc
sbb
dec
lret
inc
dec
fisubrl
sbb
cmc
lds
call
fwait
jbe
and
mov
repnz
lock
daa
aam
mov
sbb
xchg
add
inc
sbb
icebp
push
nop
add
pop
push
inc
jnp
and
fildl
add
fldt
adc
or
ficoms
jne
imul
push
or
mov
push
loope
mov
mov
xchg
cli
shlb
fsub
adc
xchg
mov
inc
fmulp
aad
xor
jbe
xor
jecxz
mov
call
sub
jo
cli
mov
cmpsb
ficoml
cmp
fsubl
lock
adc
push
jo
or
mov
addr16
push
or
jnp
psrlq
pop
scas
mov
sbb
fs
mov
frstor
fbstp
mov
adc
and
xchg
loopne
or
loop
jno
jp
nop
nop
fidivrl
sahf
jno
mov
mov
pop
popf
inc
cmpsl
fsubrp
ss
in
fcomi
daa
pop
sub
xchg
mov
pop
mov
lahf
cltd
inc
insl
jg
adc
in
jmp
je
sub
and
mov
jmp
cli
xor
mov
pop
sbb
or
mov
jns
fucomp
add
in
shlb
adc
roll
popa
fdivl
jp
ret
sub
movsb
mov
addr16
mov
rclb
mov
mov
xchg
das
decb
xchg
outsb
sbb
and
in
popf
pop
adc
ds
arpl
pop
pop
loope
sbb
lods
xchg
mov
or
outsl
ds
mov
adc
jo
xlat
sub
cltd
dec
aam
jg
adc
enter
mov
cmp
sbb
and
sti
loopne
out
cltd
add
inc
lret
pop
mov
test
stos
jno
lock
add
push
mov
jg
les
push
fbstp
mov
lock
or
repnz
scas
push
xchg
push
inc
jb
jb
and
mov
adc
inc
dec
repnz
ljmp
and
xchg
in
call
scas
adc
iret
and
adc
cmp
test
ljmp
sbb
aas
cmpsb
fimuls
loope
sbb
sbb
adc
fsts
xchg
pushf
jp
push
outsl
add
int
pop
inc
pop
repz
sti
mov
sbb
stos
cmc
mov
dec
sbb
push
sub
std
mov
mov
ds
xchg
sbb
or
mov
pmulhw
xchg
std
push
and
pop
enter
mov
xor
adc
jp
stos
sbb
loop
add
adc
sbb
adc
test
mov
loope
rcrl
pop
in
rorl
sarb
out
mov
movsb
mov
or
incl
mov
pop
bnd
xchg
bound
add
popf
lahf
iret
cmpl
xor
jmp
inc
into
cmp
ds
inc
cli
lahf
mov
mov
sub
loopne
push
gs
cmp
je
das
out
xor
xor
pop
push
jns
mov
icebp
lret
lods
aad
pushf
test
mov
daa
ds
daa
cltd
xor
pushf
mov
xor
out
cmp
cmpsb
sbb
ss
push
test
leave
jnp
outsl
andb
rorl
xor
punpckhwd
xchg
cld
dec
fwait
movsl
or
mov
mov
xchg
mov
movsb
cmp
push
mov
mov
mov
leave
and
adc
sbb
mov
and
xor
adc
mov
cmp
sbb
jg
push
stc
pop
imul
or
xchg
pop
pop
das
pop
push
stc
and
notl
stc
pop
sti
push
stos
dec
aas
mov
clc
shrb
jecxz,pn
cmp
xchg
sahf
or
and
outsl
jle
push
mov
push
add
outsb
dec
sahf
cwtl
inc
mov
push
lods
push
and
jne
jbe
mov
adc
fisubrs
dec
dec
iret
popa
repz
scas
adc
loope
fimuls
nop
mov
cltd
xor
xchg
xor
fmuls
cltd
lcall
lahf
mul
or
lods
pop
daa
lahf
js
push
cmp
enter
mov
xor
add
mov
aam
pop
bound
addr16
sub
in
inc
jns
xchg
into
cmc
scas
fstp
fldl
in
enter
scas
push
add
xchg
jns
test
add
bound
decb
cwtl
dec
clc
xchg
xorb
lret
popf
mov
insb
ss
mov
push
jns
inc
pop
in
adc
lcall
pushf
xchg
pop
push
jnp
mov
ret
iret
fstpl
xchg
test
insl
xor
lods
push
js
fcompl
scas
out
inc
xchg
sub
cmpsb
xor
ljmp
ljmp
out
movsl
mov
add
jmp
xchg
stc
adc
cmp
add
mov
inc
repnz
push
mov
daa
roll
push
push
mov
xchg
sub
fs
jmp
dec
sbb
outsb
xchg
movsl
jg
or
hlt
shll
or
and
fisubs
mov
int3
jne
cmc
adc
lret
ret
out
arpl
and
into
dec
sub
jns
stos
mov
fisubl
icebp
add
jnp
jae
lahf
xchg
xchg
inc
mov
test
jge
loope
test
xchg
pop
inc
jno
add
lds
mov
lret
mov
dec
jl
mov
popa
xor
mov
in
jbe
mov
mov
ljmp
or
es
cmp
add
xor
mov
jp
scas
mov
enter
xchg
lods
lret
mov
pushf
daa
jg
mov
xchg
cltd
das
push
add
sbbl
pop
push
adc
pushl
lods
xchg
cmp
mov
cmpl
mull
frstor
call
daa
and
shll
xor
sub
jmp
ds
adc
jns
xor
daa
adc
inc
ja
pop
fsubl
out
dec
cli
fs
pop
scas
push
sub
lea
mov
push
fsubl
mov
aas
xor
xor
shr
subb
movsl
test
clc
cmc
outsb
dec
test
fdivs
sub
int3
jno
sub
add
xchg
xchg
adc
cmpsl
iret
push
lock
js
or
dec
cltd
fdivs
orl
test
push
dec
mov
out
in
jb
sbb
cli
ffree
inc
nop
rolb
jmp
jns
mov
sub
sub
xor
mov
xchg
mov
fdivl
ds
jmp
jbe
testl
test
data16
cmp
stos
cs
imul
mov
mov
sub
stc
stos
and
lock
test
mov
jnp
fcoml
ret
sahf
pop
and
cli
inc
ret
jo
mov
roll
mov
add
mov
push
nop
or
pop
in
pop
add
bound
cmpl
jno
outsl
aad
je
icebp
loope
out
dec
mov
push
neg
lret
lahf
enter
nop
inc
or
xor
pop
xchg
outsb
mov
adc
enter
clc
fsubrs
add
cmp
mov
in
inc
jmp
repz
mov
and
dec
jnp
imul
mov
cmp
neg
cmc
fcompl
repnz
dec
push
and
xchg
push
fincstp
fldcw
in
and
pop
mov
les
popa
sbbb
dec
lock
adc
mov
mov
into
filds
imul
mov
jnp
rcrl
lds
adc
gs
jp
push
sbb
jae
stos
js
mov
pop
push
bound
add
cmpsb
loopne
filds
push
xchg
or
push
in
xlat
imull
lret
or
lods
repz
cmp
pop
mov
mov
into
jae
gs
xchg
cmpl
xchg
scas
push
int3
idivl
dec
sbbb
dec
mov
aas
jg
int
and
fs
fldl
bound
ds
mov
push
cwtl
xchg
push
jp
mov
pop
xchg
ljmp
push
add
mov
mov
mov
cmp
xlat
js
stc
fstps
sbb
test
or
scas
in
jecxz
sub
stos
xorl
inc
cmp
xor
dec
cs
sahf
mov
push
adc
imul
out
ss
addr16
mov
add
dec
xchg
jge
icebp
insl
roll
cmc
jp
movq
repz
hlt
dec
loope
xchg
jmp
inc
push
dec
repnz
adc
test
xor
sbb
fimuls
mov
mov
mov
in
inc
jmp
adc
xchg
push
jmp
sub
stc
push
movsl
cs
inc
mov
nop
stos
cli
in
lods
imul
xlat
ret
pop
cwtl
pop
inc
inc
ds
or
cmpsl
pop
pop
push
lret
movsb
out
rclb
aas
shll
stc
out
popa
fiadds
pop
push
xor
cmpsb
cld
mov
add
mov
out
xlat
cmp
jns
inc
add
arpl
xor
aam
cmp
lock
int3
pop
xchg
jecxz
mov
or
add
adc
jle
loopne
dec
fs
lds
dec
aaa
mov
outsl
je
xchg
mov
sbb
test
cmp
mov
cld
out
push
call
add
cld
xor
cltd
pop
jmp
xchg
and
imul
dec
js
mov
mov
inc
ljmp
ficoml
iret
adc
jae
jmp
je
jg
leave
stos
push
xchg
add
jns
add
xchg
ja
ja
lret
std
inc
ret
mov
sti
scas
inc
pushf
or
jne
fsubl
fadd
mov
outsb
push
roll
or
lret
xor
lods
mov
mov
mov
pusha
insl
das
lods
pop
mov
cmp
inc
push
dec
pmullw
and
cmc
inc
sahf
mov
leave
or
sub
xor
push
inc
mov
jmp
push
add
cmp
mov
sbb
push
inc
jmp
dec
test
xor
pop
mov
cmp
mov
dec
xchg
je
cmc
mov
cltd
jne
rorl
fxtract
in
out
bound
out
jbe
sar
jge
push
imul
pop
jbe
aad
jmp
adc
mov
mov
sub
push
daa
into
test
pushf
inc
fldl
out
push
decl
dec
andl
pop
insl
nop
jb
push
int3
je
or
xor
xchg
icebp
ss
push
sub
dec
push
sbb
test
xor
jg
pop
in
push
push
addb
and
sub
sub
sub
leave
jp
cmp
fcmovne
mov
bound
xchg
leave
decb
push
pop
bound
or
jno
aam
push
lret
add
or
test
stos
in
xchg
popf
inc
inc
sub
mov
jp
test
iret
jge
push
repnz
jo
rcl
or
loopne
or
mov
rcl
imul
lea
sbb
fwait
jno
sarl
xorl
xchg
out
xchg
into
cmp
xchg
pop
pop
jbe
rolb
out
lds
dec
sahf
dec
jecxz
dec
out
daa
jecxz
pushf
adc
aas
mov
popa
push
aas
fldcw
pop
cmp
cmp
cmp
jg
int3
test
inc
add
mov
jp
sbb
das
test
or
enter
loopne
dec
data16
clc
dec
adc
sbb
scas
std
fistps
shr
aas
xchg
fisubrl
outsl
cltd
cmp
inc
and
jb
ja
mov
inc
stos
ss
pop
sbb
lea
dec
pusha
pop
sbb
icebp
cmp
loopne
dec
fidivs
push
aas
xor
loop
ja
sub
jle
push
push
fstl
sbb
mov
xor
cmpb
gs
dec
imul
cmp
mov
cmpsl
mov
inc
nop
push
dec
pop
sahf
cltd
xor
inc
rcrb
push
adc
nop
cld
out
push
mov
fstpl
fnstsw
popa
pop
aam
test
mov
popa
roll
jno
add
in
sbb
jl
adc
inc
vpsubd
xchg
subb
arpl
int3
outsl
mov
aas
stos
nop
pop
jge
jnp
xor
cli
cltd
inc
scas
orl
test
subl
mov
rcrb
stc
cmpsl
sub
jno
xor
fstp
aam
std
cmp
jb
dec
cld
push
outsl
les
cmp
and
dec
lahf
pop
clc
pop
add
dec
mov
mov
mov
mov
jne
sbb
dec
outsl
xchg
add
ret
movsl
gs
ficoms
into
arpl
in
inc
in
pop
jle
out
add
das
fcomp
loope
ss
icebp
fs
mov
or
mov
push
lods
inc
or
aam
pop
and
jmp
push
cmp
je
push
cmovnp
xor
jo
inc
mov
cmpsl
int3
nop
push
movsl
cmp
aaa
cwtl
cmc
mov
imul
or
push
cmp
cmp
nop
mov
sub
sub
jg
cld
or
in
lds
out
mov
out
rcrl
aam
sub
push
or
and
push
ljmp
push
jne
adc
out
push
push
mov
pop
and
bswap
lods
pop
loope
insb
pushf
mov
je
std
push
push
mov
lss
or
aad
push
mov
clc
and
inc
movsl
adc
es
xor
arpl
popf
mov
pop
repnz
stc
ja
pusha
les
out
dec
rcl
cmpsl
sbb
aad
out
hlt
dec
push
jmp
xchg
mov
xor
in
rcrl
or
sub
cmp
clc
fwait
and
lret
pusha
fisubrs
imul
nop
jge
loope
dec
sahf
add
repnz
dec
int
push
mov
xchg
sub
xor
sbb
add
cmp
mov
xor
pop
cli
fs
aam
and
enter
mov
imul
dec
xchg
add
jbe
idiv
push
push
icebp
xor
ja
mov
pop
rclb
or
xchg
adc
daa
xchg
push
push
lahf
cmp
test
cwtl
ret
xlat
push
add
test
ret
cmp
jge
adc
mov
inc
fcomip
std
cmc
and
jno
xor
pop
mov
daa
adc
mov
mov
mov
cmp
add
jnp
inc
pop
into
fnstenv
add
out
inc
inc
xchg
xor
in
xor
dec
arpl
xchg
cmp
add
push
pop
pop
pusha
push
gs
dec
popf
iret
pop
in
sbb
lea
loop
and
mov
xor
xor
scas
mov
sbb
cld
push
mov
aam
add
fiaddl
dec
xor
or
inc
add
adc
jnp
enter
sub
negl
mov
imul
add
in
cwtl
mov
inc
mov
popa
fs
push
inc
mov
pop
pop
jne
test
cmp
xor
cmp
adc
sub
js
or
fcompl
xchg
adc
mov
les
xchg
jbe
pop
aaa
sub
fs
lret
xchg
pop
mov
mov
xchg
push
outsb
mov
pop
or
cmc
sub
add
fs
jbe
lods
sbb
loopne
add
mov
xor
aas
jne
and
out
ljmp
ja
mov
mov
adc
fimuls
jmp
xchg
or
fnstsw
mov
push
stc
mov
mov
lret
mov
pop
jo
sbb
push
fiaddl
movsb
mov
in
cmp
pop
sbbb
push
xchg
pop
sahf
jle
stos
arpl
push
pop
add
arpl
mov
jo
mov
iret
das
rclb
movsb
add
test
xchg
loopne
jmp
jo
dec
push
das
mov
shlb
pop
mov
shl
fiaddl
sub
pop
push
sbb
and
js
daa
fadd
cvtps2pd
lahf
push
jle
mov
xlat
pop
orb
push
and
adc
jne
fwait
pop
and
push
rorb
and
add
push
and
add
jecxz
aad
sbbb
jmp
push
cmc
call
decb
adc
xchg
ret
mov
stc
mov
cmp
xor
fdivp
dec
lods
push
test
cbtw
fisubrl
adc
aad
inc
fwait
insl
or
sub
jmpw
push
xor
mov
cmp
jl
and
insl
inc
sub
adc
push
dec
xchg
xchg
sub
lcall
pop
enter
mov
push
xorb
jne
adc
lcall
fwait
iret
scas
std
sub
ds
xchg
jo
scas
fldl
bound
adcb
push
outsb
push
add
fdiv
out
sub
xor
adc
enter
mov
insl
stc
sub
sub
or
sbb
and
jne
inc
lods
outsb
fbstp
mov
lahf
jmp
imul
and
jnp
sti
aas
fsubrl
ljmp
lock
clc
jp
lods
aad
xchg
push
inc
les
into
add
inc
fsubrp
aad
mov
and
loop
jl
mov
adc
xchg
add
mov
icebp
xor
adc
in
adc
jnp
gs
scas
test
mov
fcoms
ds
imul
mov
mov
or
xchg
mov
mov
std
push
insb
push
popa
mov
cwtl
fdivs
out
fisttpll
or
sarl
jmp
dec
aad
push
scas
xchg
fldl
jb
and
shr
mov
cld
xchg
jle
mov
leave
push
and
push
dec
fistl
jnp
dec
out
fchs
mov
shr
subl
sub
data16
sub
int
dec
fdivrp
mov
inc
mov
int3
pop
aas
mov
mov
loopne
fstpl
dec
cmpb
adc
in
icebp
sbb
push
xor
pop
or
add
or
orl
js
pop
aaa
stos
aad
jg
sbb
lahf
jg
repz
ret
fstpt
mov
push
fnstcw
mov
inc
rorb
fsub
pusha
cwtl
mov
mov
or
jnp
call
cmp
test
jbe
inc
enter
push
sub
mov
jge
pop
sbb
es
fprem1
movsl
test
daa
nop
xchg
inc
dec
sbb
push
mov
inc
imul
arpl
int3
lahf
call
xor
pop
loopne
cmp
jge
imul
hlt
cld
inc
daa
adc
cmp
mov
popf
loopne
into
imul
sub
int3
lds
adc
inc
sub
cli
inc
stc
xchg
clc
aas
hlt
sbb
dec
push
test
cmp
into
ds
mov
mov
out
add
add
jae
sub
push
xchg
shrb
fisubl
push
inc
out
xchg
divl
push
adc
mov
arpl
setb
mov
or
sbb
mov
pop
or
cltd
ja
js
mov
rorb
divb
xchg
cmp
dec
iret
sbb
mov
dec
pop
in
les
sub
dec
orl
or
mov
in
fmuls
mov
int
ss
mov
add
pop
jecxz
ret
pop
insb
mov
les
ds
cmc
xor
or
aas
push
scas
jge
push
push
cld
cmp
rcll
mov
sub
scas
in
cld
mov
cli
loop
orb
adc
jl
mov
fnstsw
mov
xchg
adc
lods
lds
push
jl
cmp
ret
sbb
ljmp
xor
loopne
gs
xchg
test
xlat
mov
sub
cwtl
cmp
dec
pushl
mov
mov
test
les
mov
pop
mov
js
sti
jnp
lahf
jp
lods
ret
das
or
mov
adc
mov
push
adc
and
lods
pop
in
addb
sub
test
dec
shl
inc
push
cmpsb
xchg
sahf
mov
sbb
jg
into
lcall
insb
adc
out
fucomip
cltd
inc
lock
stos
xor
jnp
testl
pop
bound
lods
mov
enter
les
and
xchg
std
or
fmull
mov
jmp
sbb
jbe
or
jae
mov
xchg
arpl
imul
arpl
insl
jo
sete
fsubrs
sti
dec
xor
stc
jecxz
and
pushf
mov
pop
sti
cld
push
sarb
or
in
pusha
inc
pmulhuw
popa
and
sub
or
call
sbb
sub
add
cs
cmpsb
push
cmp
jnp
pop
mov
addr16
ror
std
mov
popa
lcall
pushf
cld
mov
sbb
lds
jns
shll
nop
jb
loope
xchg
sub
fdivs
in
cltd
in
and
fisttpl
orl
push
and
cmp
inc
dec
lret
mov
insl
mov
dec
dec
add
mov
les
scas
jg
arpl
test
jge
pop
inc
bound
sub
fldenv
push
fucom
mov
sbb
jo
mov
sub
xchg
pop
mov
or
js
insb
aam
push
push
inc
sub
pop
jg
add
mov
xor
lret
or
loopne
or
sahf
xor
out
mov
daa
rep
scas
pop
adc
sub
fistpl
repnz
jecxz
fs
gs
pop
dec
xor
fsubrl
rclb
xchg
loop
fdivrl
or
in
xor
or
data16
mov
out
cli
clc
xchg
pop
aad
imul
rcrl
nop
lret
int3
sub
popa
sub
cld
stc
mov
add
iret
in
lock
or
push
jno
jne
jno
adc
sub
mov
jg
imul
jb,pt
add
daa
aas
xchg
mov
lods
aad
adc
insb
sub
pop
clc
sub
cmp
inc
mov
cmc
or
xlat
and
mov
cmp
and
jge
push
mov
imul
idiv
inc
sbbl
cwtl
ljmp
inc
mov
dec
sbb
pop
pusha
add
mov
mov
mov
jns
and
cmp
mov
shr
push
dec
push
imul
pusha
jle
mov
mov
icebp
int
cmp
xchg
aad
push
and
xchg
nop
push
das
aam
xor
cmpsb
dec
rclb
adc
loopne
cwtl
aaa
sub
nop
insb
inc
or
pmaxsw
mov
mov
scas
aad
mov
and
cmp
mov
sub
fildl
dec
add
rorb
mov
dec
fimuls
mov
popf
imul
lds
movsl
inc
push
or
ret
push
inc
lock
mov
pop
aad
inc
mov
or
maxps
addr16
das
and
lods
add
clc
sbb
fwait
or
mov
cmc
je
mov
sbbl
out
mov
xlat
push
or
imul
lods
inc
cmp
adc
jle
pop
mov
jo
movsl
aas
sub
in
jmp
push
test
rcrl
jmp
lret
aad
and
out
xor
sbb
inc
mov
out
gs
sti
pop
mov
inc
test
jb
pop
adc
and
or
arpl
sub
loop
psubd
je
mov
inc
leave
pop
test
lret
rorl
pop
lock
fisubs
jo
xchg
test
push
lock
xchg
mov
lods
in
xor
bound
or
sti
pop
sub
aaa
orl
imul
fisttpl
xor
push
mov
shlb
cmp
sub
and
inc
data16
and
xchg
adc
dec
sub
push
sub
add
sbb
imul
test
popf
ret
rcll
test
enter
in
mov
pusha
fiadds
or
or
addr16
movsl
and
dec
push
leave
cmc
cmp
jbe
mov
mov
lcall
ret
or
in
fidivrs
dec
adc
into
sbb
ffree
hlt
dec
pop
sub
in
mov
inc
cmp
pop
jl
adc
push
nop
fsubp
inc
sbb
cmp
out
loop
adc
dec
lods
xor
xchg
es
pop
mul
mov
pop
push
aad
repz
jecxz
add
xchg
xchg
out
std
mov
into
sti
rcrl
fnstcw
mov
pusha
jmp
int3
lds
loope
jmp
sub
fistpll
out
pop
lcall
cs
jo
arpl
dec
xor
ret
and
arpl
or
sbb
mov
pop
lcall
mov
imul
sarl
and
aad
lret
daa
and
and
aad
inc
bound
stc
mov
pop
js
popf
jg
xor
mov
ss
jns
mov
sahf
mov
stc
hlt
and
outsl
add
popf
sub
sbb
mov
push
arpl
cld
jbe
mov
lret
mov
xchg
cmp
and
and
movsb
add
andb
add
mov
dec
inc
es
sub
fmul
aas
dec
cmp
jbe
stos
fisubrs
sbbl
cmp
fldt
add
aaa
push
fistps
mov
roll
es
xchg
adc
shlb
push
pop
aad
std
mov
mov
fiadds
andb
cmp
xor
stc
mov
add
sub
mov
and
les
shrb
pop
xlat
mov
push
cltd
decl
dec
call
push
pushl
lock
lret
xorb
xchg
dec
mov
cmp
imul
sub
mov
fbld
xor
fdivr
push
jle
cmp
js
iret
inc
je
sub
jmp
mov
and
push
mov
jge
add
clc
xor
in
xor
push
xchg
jge
mov
scas
push
xchg
push
mull
repz
sahf
cld
mov
popa
mov
mov
jns
test
addr16
cld
bswap
jle
and
nop
test
sbb
addb
push
pop
sbb
popa
xchg
sbb
xor
jo
int3
pop
inc
mov
pop
jl
cmp
out
sub
call
cmc
insb
jb
xor
add
cs
xor
je
and
in
std
test
je
les
std
mov
mov
js
mov
cli
lea
mov
das
mov
insl
add
cwtl
jno
lds
cmp
rorb
mov
cmp
cmpsl
dec
daa
adc
hlt
push
inc
fbld
ss
lock
add
sub
dec
xchg
jmp
je
xchg
ljmp
sysenter
fisttpll
inc
add
mov
lret
ret
arpl
lea
adc
cmp
cltd
ret
add
jno
mov
mov
mov
mov
mov
mov
push
leave
fmull
pop
jne
ja
cltd
int
cmp
jmp
js
or
iret
pop
dec
add
cmp
xor
inc
test
push
sti
xchg
sub
lcall
icebp
inc
stos
mov
jecxz
pop
aam
and
pop
dec
inc
push
add
out
inc
scas
adc
fisubl
pushf
imul
gs
jne
mov
pop
inc
xchg
dec
push
mov
mov
xchg
fadds
jge
in
xlat
mov
dec
mov
in
sahf
mov
mov
dec
push
leave
mov
lods
stc
xor
aas
lcall
lds
add
or
test
mov
popa
jae
popa
push
lcall
adc
clc
dec
xor
add
in
pop
int3
mov
and
lcall
addr16
test
cltd
iret
in
dec
mov
mov
jl
sbb
lcall
xor
scas
int
push
jmp
sbb
dec
movsl
cli
mov
aad
xor
push
jecxz
stc
in
xlat
dec
sbb
insb
push
insl
cmp
mov
inc
inc
add
call
adc
sub
scas
test
add
icebp
gs
push
push
xor
sbb
iret
cli
push
push
push
pop
pop
push
cmp
je
cmp
pop
into
in
sub
inc
outsb
jne
popa
decl
aam
lret
das
jae
fxtract
outsb
jmp
jle
xor
jle
jbe
xchg
rorl
fwait
scas
insb
fdivr
scas
sub
in
sub
inc
andl
sbb
int
push
sbb
jnp
adcl
mov
lds
xchg
orb
out
orb
sbb
add
mov
bound
mov
mov
adcb
xchg
out
gs
push
loopne
push
cmp
push
repnz
int3
mov
lret
pop
sub
aam
jp
fucomi
mov
rcrb
cmp
imul
inc
enter
daa
jbe
xorb
xchg
inc
rolb
lahf
pop
push
mov
and
and
or
push
cmp
aad
fisttps
mov
popa
push
push
inc
dec
outsb
jl
push
lds
orb
pop
sbb
push
push
imul
cmp
push
pop
cmpsb
mov
xchg
mov
inc
dec
add
in
arpl
cmp
pop
xchg
int
inc
or
pop
loop
adc
dec
cmc
outsb
rorl
pop
lods
sub
jbe
jo
mov
sub
sbb
sub
jecxz
ret
cmp
mov
imul
sbb
xchg
push
cmp
xchg
add
popa
psubsw
stc
fdivr
pop
mov
jb
lret
jmp
sbb
mov
cmc
mov
imul
out
or
jge
and
fldl
dec
push
fimuls
add
sub
mov
mov
cmp
jmp
cmp
bound
movsl
das
scas
cmp
push
add
decb
mov
mov
rclb
adcl
ret
cli
push
ret
int
push
xchg
in
test
mov
mov
pushf
jnp
xor
std
sbb
aam
popa
aas
repnz
mov
adc
jne
clc
out
lret
ret
add
in
stos
cmp
fnstcw
dec
ds
es
sbb
mov
sub
xor
int3
or
das
ret
mov
fsubr
inc
sub
ret
adc
je
rorb
loop
sub
mov
bswap
jmpw
enter
inc
sbb
aam
daa
lret
pop
adc
pop
pop
mov
jle
fwait
outsl
sub
dec
cmp
out
std
cmpsb
push
add
jo
mov
jmp
or
push
aam
or
sbb
and
imul
lret
or
xlat
pusha
pop
push
pop
imul
in
inc
cmc
add
inc
loopne
cmp
testl
dec
pop
mov
hlt
inc
sbb
movb
jge
aaa
jns
test
add
sbb
mov
push
out
dec
inc
push
cmp
ja
pop
shlb
ret
adc
sbb
jge
stc
mov
cld
ret
mov
scas
cld
adc
dec
mov
test
mov
loope
fildll
or
cmp
outsb
lock
cmp
aas
push
jg
mov
scas
or
movb
push
std
adc
aaa
mov
inc
add
cmpb
pop
lcall
cmc
fadd
pop
push
or
lods
pop
sbb
inc
and
in
sub
jae
mov
jb
popa
insb
push
sbb
dec
out
cltd
setne
add
iret
lret
xchg
jno
push
sbb
xchg
xchg
jle
loope
mov
sbb
das
icebp
addl
add
lods
insl
xchg
sbb
repz
sub
inc
ds
repnz
pop
jle
mov
xor
in
push
pop
mov
scas
mov
imul
xchg
loope
adc
testl
jmp
jnp
insb
icebp
mov
test
mov
and
das
lahf
mov
daa
mov
or
test
pop
fldt
mov
xchg
cmp
movsl
mov
inc
sbb
negl
sbb
std
addr16
or
pop
iret
mov
mov
inc
adc
xor
xor
inc
imul
or
es
sahf
jns
dec
cld
mov
jge
icebp
adc
pusha
mov
mov
dec
push
or
dec
shlb
imul
push
sbb
adc
daa
in
xchg
imul
movsb
daa
imul
jmp
sub
jecxz
repz
frstor
test
mov
rolb
shl
inc
mov
push
mull
and
jg
inc
gs
cs
iret
lret
sahf
lods
and
ret
sub
jp
out
or
movsb
lcallw
jae
push
mov
test
jecxz
popa
xchg
mov
mov
lea
jg
fwait
rclb
jp
push
sbb
arpl
rclb
and
hlt
movsl
push
test
mov
sub
or
mov
add
arpl
loop
mov
imul
mov
jecxz
push
addb
test
xchg
sbb
das
lcall
into
fistps
mov
push
xor
loopne
lret
imul
lret
pop
cmp
clc
or
test
sub
mov
xchg
aaa
inc
insb
mov
push
cmpsl
mov
mulb
lret
and
shlb
gs
xor
pop
lds
jne
adc
mov
arpl
mov
lahf
mov
aaa
fisttpl
mov
pop
lock
xor
mov
push
mov
das
nop
mov
ss
lds
sahf
testl
xchg
xor
push
dec
xlat
sarb
idivb
mov
repnz
push
jecxz
jl
and
sarl
xchg
arpl
cwtl
or
int
xchg
adc
mov
arpl
incl
rclb
mov
fsubrs
lahf
mov
js
mov
and
and
sub
in
xchg
out
js
adc
cmpsb
fs
outsl
inc
dec
in
or
push
sbb
pop
lock
addl
sbb
jle
dec
dec
push
xchg
in
cmp
and
pusha
imul
gs
dec
mov
mov
rclb
mov
dec
loope
sbb
cmp
js
movl
add
pop
push
mov
xchg
lcall
push
sub
jae
imul
mov
pop
jae
movsb
dec
mull
dec
mov
push
mov
movsb
xchg
inc
movsb
das
push
dec
mov
addl
xchg
ret
stos
inc
push
pop
insl
stos
lahf
mov
cltd
and
or
mov
xchg
sbb
out
daa
pop
sbb
ljmp
inc
test
sahf
mov
sarl
pop
shlb
xor
cmp
popf
jle
mov
mov
mov
das
ds
fiadds
push
xchg
outsl
sub
std
cmp
and
push
push
test
mov
into
jns
mov
jo
adc
movsl
in
and
push
xor
outsl
mov
or
dec
sub
and
sub
repnz
enter
xchg
das
cmpsl
addr16
push
xchg
mov
in
xchg
xor
cmp
js
mov
jno
adc
addb
es
xchg
add
cmp
outsb
pop
scas
rcrb
dec
or
ficomps
sbb
jbe
cmpsb
test
pop
push
shlb
push
inc
andb
loopne
push
test
lea
dec
cmp
mov
jmp
das
insb
xchg
cwtl
cli
jg
leave
pop
fwait
add
mov
sbb
sub
nop
mov
pop
sub
xchg
push
int3
js
fstps
jmp
add
out
movd
pop
stos
jmp
arpl
inc
roll
cld
ds
dec
orl
daa
pop
pop
mov
lock
cltd
fs
mov
jo
mov
xor
mov
int3
in
shlb
fnstcw
enter
lock
mov
lods
cmpsl
or
int3
roll
add
inc
jno
aam
lods
jo
lcall
xchg
inc
dec
das
pusha
add
dec
mov
jmp
xchg
xor
adc
jae
and
test
mov
pop
xchg
mov
jb
pop
dec
fisttps
sbb
lcall
clc
cmp
and
or
das
lcall
cmp
xor
and
data16
jb
test
xchg
pop
ljmp
mov
mov
out
xor
adc
dec
mov
dec
es
dec
fucomip
outsb
cmp
dec
pop
xor
cpuid
pop
jae
leave
arpl
cltd
js
inc
cmc
negl
outsl
mov
outsb
xchg
mov
loop
inc
xor
fcomip
push
pop
aad
and
addr16
push
add
inc
jle
inc
push
mov
and
ljmp
dec
idivb
insl
pop
add
fsubl
lds
xchg
lret
pusha
adc
test
into
dec
pop
mov
sub
js
fdiv
or
pop
xor
mov
fsubs
lcall
jmp
ret
mov
mov
pop
jle
ret
sahf
lods
add
aad
rcll
lock
fs
sbb
pop
cmp
xchg
orb
mov
sub
xchg
loope
pop
imulb
mov
into
mov
shr
or
and
into
mov
ret
or
xor
in
push
inc
xchg
sarb
cmpsb
cmp
nop
dec
xchg
mov
or
insl
cs
mov
cmp
pop
push
adc
sub
add
sbb
cmp
pop
outsb
xchg
aas
arpl
sbb
andl
loop
pop
and
and
leave
stos
idivl
pop
mov
sbb
or
addb
jns
mov
popf
adc
imul
inc
into
adcl
sub
inc
inc
or
push
xor
add
aam
dec
test
in
cmp
mov
or
sbb
fs
fists
lea
adc
mov
test
aad
test
iret
mov
or
int
iret
pop
shll
sub
lcall
inc
inc
xlat
or
or
mov
push
xchg
inc
add
add
dec
cltd
int
movsb
sub
or
stos
out
lret
xor
push
stos
pop
jne
jmp
cmp
xor
js
dec
enter
sahf
xor
mov
lds
mov
clc
mov
push
mov
cltd
sub
pop
xchg
mov
aas
test
or
es
jae
ret
sbb
arpl
add
and
fisubrl
mov
xchg
jne
in
std
pop
sub
sub
sub
fisubs
fcoms
or
std
xchg
shrl
xchg
push
les
jecxz
enter
inc
xchg
adc
mov
push
je
sarl
mov
mov
sub
pop
stc
adc
jnp
xchg
cld
dec
cli
fidivs
mov
jecxz
std
dec
pop
icebp
sbb
outsl
push
test
pop
xor
ja
sub
das
ret
mov
repnz
into
inc
cmpsl
jmp
add
push
push
adc
sbb
ds
jno
dec
or
jmp
les
pop
and
pop
aam
push
and
shr
jae
test
ficomps
jl
aas
pop
jno
adc
clc
push
mov
push
mov
inc
lahf
push
insl
push
test
cmpsb
and
or
sbb
mov
ret
or
in
cmp
cmpsl
pop
mov
jns
dec
xor
xchg
stos
fldl
int3
mov
shll
mov
inc
jl
repnz
pushf
push
in
icebp
push
jg
shl
pop
jp
aam
pop
mov
bound
inc
scas
xchg
mov
jp
and
xlat
iret
inc
and
xchg
jl
add
sbb
ljmp
lret
int3
dec
cmpsl
mov
mov
sbb
push
iret
xchg
popf
jl
outsb
mov
test
jg
inc
cli
adc
xor
or
jle
mov
mov
adc
sub
sbb
mov
pop
fsub
aaa
movsl
mov
lret
je
pop
sub
push
jmp
mov
xor
xchg
cmp
int3
pop
jns
cli
sbbl
lods
rclb
jno
or
cli
lahf
cs
cs
sub
push
mov
int3
icebp
lcall
movsl
adc
out
dec
outsl
sub
dec
lret
mov
mov
pop
movsl
aaa
adc
in
nop
xchg
or
sbb
mov
data16
push
aad
push
adc
jnp
xchg
jno
push
fcoml
mov
movsb
insl
mov
loope
fs
mov
pmuludq
mov
adc
rclb
xlat
cld
fstl
pop
rorl
sbb
scas
adc
adc
push
push
push
cwtl
xchg
dec
mov
int
jb
inc
imul
rorb
cli
out
inc
in
xchg
pop
testl
loope
mov
cmp
fisttpl
roll
aad
xchg
mov
out
adc
scas
and
icebp
ret
xchg
mov
mov
jnp
jge
cmp
mov
xchg
dec
jbe
sub
xor
mov
sbb
jo
mov
loope
mov
iret
movsb
daa
xchg
push
and
sbbb
std
fsubrl
daa
sbb
fildl
or
sub
jne
pop
lds
jle
in
sub
pop
pop
adc
in
cmpsl
adc
xchg
and
imul
mov
xchg
lods
push
push
dec
and
scas
adc
cmp
cmpsl
es
mov
fstpl
mov
lods
clc
mov
xor
aas
xchg
inc
mov
pusha
sbb
add
fdivs
repz
shlb
sahf
mov
dec
pop
cwtl
stc
pop
and
outsl
inc
or
xor
adc
inc
aam
or
jle
add
clc
outsb
sahf
jmp
lock
cwtl
pop
stos
or
xchg
mov
repnz
adc
fsubr
push
mov
aaa
pop
lahf
cmp
cmp
jl
insb
and
mov
insl
loop
enter
js
xorb
push
sbbb
js
ss
push
insb
in
mov
cli
mov
xor
nop
std
sahf
dec
fnsave
hlt
daa
fistps
lret
into
push
xor
mov
jbe
fistpl
jb
xchg
mov
shll
xor
lret
aas
add
cmp
call
xchg
add
or
je
pop
adc
sbb
out
pop
es
nop
add
cmpsl
mov
jge
dec
inc
and
insb
es
xchg
lds
pop
mov
lcall
imul
ret
push
mov
rorb
enter
cmc
sbb
cmp
jge
in
mov
je
sbb
push
xor
push
das
ds
in
jno
rol
push
jg
fidivrl
xor
mov
inc
mov
mov
jg
jg
aam
push
in
mov
fs
popa
movsl
push
call
dec
xchg
xor
dec
push
cmp
sbb
loopne
xor
push
mov
ret
das
cmpsb
xchg
jcxz
add
lds
pushf
outsl
or
adc
es
iret
fcompl
mov
scas
dec
lcall
aad
leave
clc
xor
pop
pop
adc
cmove
into
stos
cs
inc
mull
xchg
andb
adc
pusha
pop
push
mov
add
call
xor
ficoms
mov
lahf
cmc
mov
mov
jp
cmp
rcrb
xor
push
inc
adc
mov
xchg
cmp
outsl
pop
cmpl
aas
xor
les
aaa
fisttpll
negl
jo
aas
insl
push
arpl
inc
dec
xor
and
push
adc
insb
mov
mov
xor
loop
xchg
mov
mov
shll
pop
mov
mov
sbb
mov
xchg
movsb
lcall
scas
mov
fimull
out
je
lret
leave
jo
sbb
jbe
mov
mov
xchg
mov
xor
add
bound
rorb
cmp
mov
mov
jecxz
dec
jnp
in
aas
sbb
cld
mov
push
and
pop
out
jle
fs
add
pop
cmpb
add
ja
inc
icebp
cmpsb
enter
movsb
sarb
and
lldt
divl
jno
in
daa
mov
pop
lahf
sahf
cmpsl
dec
mov
sub
ljmp
stos
mov
neg
dec
fcmovnb
sti
out
mov
cmpb
nop
xchg
inc
xor
adc
inc
lahf
xor
mov
inc
push
into
add
and
mov
xor
jo
jbe
lret
or
repnz
pop
cmp
scas
icebp
lods
jl
xorl
das
dec
sub
mov
jns
imul
xchg
push
out
lahf
je
push
rcrb
mov
inc
dec
mov
das
and
push
xchg
aaa
or
jmp
lds
cmpsb
into
push
push
push
mov
mov
test
loopne
cwtl
mov
add
out
test
lds
mov
rorb
mov
mov
popa
dec
pushl
mov
pop
sbbl
sub
out
enter
cli
pop
sub
mov
or
xchg
das
bound
daa
pop
pop
inc
dec
scas
inc
pop
push
std
clc
icebp
dec
cmc
inc
xor
mov
inc
mov
xchg
push
add
sahf
jl
mov
xchg
loope
xchg
sub
lds
popf
cmp
sbb
mov
ds
out
jp
sbb
aaa
fisttpll
xor
sub
mov
xchg
mov
push
clc
push
loope
fnsave
inc
clc
sbb
pop
xor
xor
adc
lds
push
sbb
repnz
loope
sub
jne
dec
mov
shl
push
loop
lret
das
sbb
pop
std
stos
sbb
mov
into
xor
dec
popa
push
inc
mov
xor
mov
repz
or
arpl
pop
repnz
xchg
mov
hlt
sub
xchg
pop
rorb
sub
mov
jno
leave
je
mov
or
fstpt
lds
jnp
mov
jle
in
test
shlb
sti
mov
add
mov
sub
cmp
jo
inc
xlat
rcrl
or
mov
pop
pop
cmp
push
cwtl
aaa
dec
lods
xor
pop
addb
sbb
jmp
lds
and
and
fs
out
jmp
add
push
cmp
mov
decl
jae
loope
pop
stos
lea
fiadds
pop
or
push
add
in
addr16
push
test
aam
sub
fcoms
lods
outsb
jbe
lcall
push
scas
clc
dec
cwtl
clc
dec
lahf
sti
ret
mov
cli
adc
mov
out
mov
or
ds
inc
pop
shl
jl
lock
xor
pop
shll
sbb
sahf
movsl
cmp
lcall
add
mov
shr
mov
test
jmp
pusha
sub
dec
push
in
rol
sub
enter
movsl
xchg
or
mov
subl
fistpll
inc
pop
pop
movsl
in
push
xor
enter
mov
cmpsb
mov
dec
inc
movsl
fs
cmp
sbb
jns
ds
mov
mov
sub
pop
sbb
jae
dec
psrlq
cmp
fdivrs
or
shl
sub
jbe
mov
js
adc
adc
les
out
xlat
mov
mov
das
jo
mov
movsb
jne
and
sub
mov
xchg
mov
mov
test
jle
and
sub
add
lahf
in
pop
inc
dec
cmc
lods
adc
aam
addr16
cmc
in
jge
insl
mov
pop
repz
adc
popf
sbb
xlat
int
push
xor
push
jp
pop
movl
pop
repz
fld
jo
xor
shlb
pop
mov
lcall
mov
pop
repz
pop
cmp
int3
adc
cmp
sbb
aas
xlat
movsb
adc
shlb
fs
push
pop
cmpsl
stos
pop
pushf
lock
sub
add
xchg
jge
xor
xor
stos
pusha
or
lods
faddl
shrb
adc
and
fcoms
inc
sbb
icebp
add
enter
mov
mov
pop
or
cmc
mov
sbb
iret
xchg
mov
ret
push
ja
cpuid
sbb
push
daa
pop
xchg
jno
push
lock
xchg
dec
rcl
clc
lea
js
out
mov
sbb
add
dec
mov
lcall
imul
mov
aad
xchg
adc
cmp
loopne
mov
push
cmp
sub
pop
push
push
push
jb
das
jle
mov
test
enter
outsl
scas
add
dec
iret
fdiv
fidivs
paddsw
push
movsl
jnp
in
cmp
daa
mov
push
inc
std
fsubrl
aad
es
imul
je
es
jno
js
add
and
clc
cmp
vsqrtps
aaa
xabort
ficompl
jecxz
xchg
and
xor
sbb
and
out
test
or
paddusw
fcomi
inc
mov
in
aam
push
lds
adc
jecxz
dec
ret
lcall
bnd
cmp
xor
mov
sbb
aam
ja
push
pmaxsw
xchg
pusha
insl
pop
cld
adc
mov
inc
or
inc
iret
gs
pop
aam
sbb
out
xor
jae
lret
push
mov
sub
push
pushf
ljmp
and
loopne
adc
aaa
sub
and
test
cmpsb
mov
mov
ficompl
pop
jl
push
jbe
enter
lods
out
push
std
inc
fisubrl
jne
ret
popf
cld
push
push
pop
sub
lret
es
sbb
out
mov
stc
xchg
mov
jle
test
adc
inc
hlt
stos
jbe
fcmovne
fidivs
insb
roll
pop
bndstx
negb
push
jle
cli
inc
daa
sarb
in
xor
jne
cmp
jecxz
mov
push
pop
fdivrl
int
insl
int3
insb
add
fdivrs
mov
xchg
rolb
in
stos
negl
mov
cwtl
mov
jbe
ja
mov
movsb
dec
push
adc
xor
scas
out
orb
xor
shrb
and
cmp
mov
dec
mov
and
or
xchg
imul
movsl
or
push
mov
clc
scas
mov
imul
sbbl
repz
cmpl
sub
sbb
add
lds
and
jp
test
push
jmp
add
push
pop
adc
repz
imul
js
jns
and
fwait
jecxz
ljmp
cmp
in
xchg
or
sti
dec
cmp
mov
push
popa
push
pop
inc
repnz
adc
outsl
call
push
lock
notl
test
mov
test
std
add
adc
lods
flds
inc
xchg
rcr
into
ds
sbbl
rcrl
lea
push
push
cmp
cmp
in
popa
ds
mov
cmp
sbb
std
cmpsl
lcall
fistpl
mov
repnz
jb
jae
call
inc
and
or
mov
mov
sub
in
das
push
mov
push
loope
xchg
cmpsl
movsb
mov
jl
mov
and
or
add
push
pop
loopne
loop
inc
popf
add
fs
imul
bound
or
imul
loop
xor
test
xor
push
add
and
xor
cltd
adc
stc
xor
repz
xchg
and
into
xor
jbe
mov
sub
adc
sub
in
sub
nop
sbb
popf
test
sbbl
lret
push
shl
sbb
add
inc
push
jbe
mov
fwait
sbb
jns
in
bound
and
dec
or
sbb
dec
imul
lcall
mov
lahf
repnz
scas
jmp
aas
xor
fiaddl
es
sbb
movsb
pop
and
cltd
mov
bound
mov
jl
cs
cmpl
or
xchg
lcall
daa
dec
adc
std
or
popa
push
mov
aaa
sbb
daa
ss
adc
icebp
fstp
adc
hlt
push
dec
cmc
dec
mov
cmp
scas
or
push
mov
xchg
jmp
sti
jge
adc
adcl
ljmp
jmp
in
xchg
idiv
mov
xchg
movsb
inc
sbb
adc
jle
lahf
mov
ror
and
xor
cmp
dec
jp
sbb
xlat
add
es
rcrl
mov
loope
add
ret
sub
xor
jmp
adc
bound
mov
call
cwtl
orb
adc
sub
sbb
push
jg
outsl
adc
sbb
mov
mov
push
sbb
xchg
or
mov
push
adc
rclb
lods
iret
dec
jle
xchg
jmp
mov
jl
gs
cltd
mov
pop
add
cld
int3
into
arpl
flds
cs
dec
add
aam
ds
fistl
cmpsl
mov
sbb
mov
adc
inc
dec
fmul
cld
aad
pop
enter
inc
cmp
xchg
push
dec
xorl
ss
dec
xor
shl
sbb
fwait
mov
bound
stos
mov
mov
add
hlt
ss
xchg
imul
sub
pop
mov
push
mov
pop
rcrl
out
mov
int3
push
loop
pop
and
dec
lock
pusha
js
xchg
dec
sti
mov
mov
adc
lock
pusha
rorl
icebp
jp
inc
pop
popf
outsb
sbb
lods
cltd
and
dec
mov
cmp
enter
and
xor
hlt
xchg
popf
dec
and
pop
mov
xchg
push
push
cmpsl
sub
pushf
mov
in
leave
jo
jg
push
lock
sub
call
xlat
int3
scas
call
cmp
es
clc
int
cmc
push
repnz
mov
insb
daa
cld
cmp
add
inc
or
popf
pop
test
lret
in
ljmp
popf
test
imul
cmp
std
test
pop
mov
sbb
test
adc
dec
or
out
push
pop
pop
mov
gs
pmaddwd
xor
mov
test
xchg
jb
mov
cmp
pop
inc
cmp
xchg
push
adc
push
add
jbe
cli
ljmp
std
arpl
cmp
cs
aas
cltd
daa
or
andb
test
cwtl
inc
jecxz
aad
stos
jge
ret
sub
push
mov
shll
addr16
jbe
cmpb
mov
cmp
sbb
rcll
mov
xchg
sarb
in
inc
adc
lret
pop
mov
push
sub
hlt
idivl
std
mov
xor
jmp
int3
pusha
mov
mov
mov
movsl
insb
xchg
jns
fiaddl
xor
pop
bound
mov
and
lcall
mov
ds
pop
pop
mov
sahf
mov
sub
or
jle
jg
ss
dec
push
data16
lret
jecxz
adc
sbb
jg
aas
mov
pushf
pop
sbb
xchg
test
test
test
mov
jo
out
mov
or
lds
mov
arpl
push
sti
dec
xchg
mov
jp
adc
pop
sbb
xor
lcall
sbb
imul
stos
in
cmc
xor
cmp
pusha
fnsave
xchg
mov
fwait
and
dec
pushf
or
leave
iret
inc
add
je
xchg
out
stos
pop
fs
jmp
and
leave
jo
or
dec
in
notb
xorb
popa
mov
insb
das
jo
lock
jnp
dec
cmp
jp
xor
push
arpl
cmp
inc
rcrl
sbb
mov
sub
jnp
jns
insb
add
add
movsb
pop
arpl
leave
and
pop
dec
push
int3
mov
pop
xor
fistps
es
push
movsl
mov
mov
in
cmp
xchg
sbb
mov
jp
daa
insb
cmp
dec
daa
insl
or
imul
loope
test
seto
xchg
xchg
fildll
ds
jecxz
inc
push
cwtl
mov
lahf
xchg
scas
lcall
push
mov
inc
cmc
xchg
jg
sub
call
inc
xor
lods
mov
adcb
inc
inc
pop
sub
adc
test
cmp
js
ffreep
into
fisttpll
aam
jne
fsubrp
mov
dec
pop
in
cs
xchg
jne
xchg
inc
sub
and
mov
aaa
clc
mov
rcrl
xchg
lds
lret
scas
call
xor
lret
inc
fistpll
fcomp
movsb
mulb
inc
inc
cmp
mov
adc
xor
dec
out
adcb
ss
loopne
ds
sbb
sub
mov
adc
loope
xor
notb
dec
dec
js
data16
mov
testb
mov
daa
addb
adc
mov
nop
in
jb
mov
fs
movsb
cmc
mov
mov
imul
xchg
inc
sub
xchg
outsl
jae
rolb
mov
mov
sti
sub
clc
sub
lea
enter
cld
sub
lods
sahf
push
int3
repz
mov
sbb
and
xchg
cmp
js
xchg
pop
adc
es
sbb
sub
out
mov
das
cmp
sbb
idivb
cmp
cwtl
mov
jge
pusha
in
aaa
orl
jne
cmp
loopne
or
jo
mov
sarb
mov
clc
xor
pop
fidivl
and
sarb
enter
ljmp
lahf
into
mov
pop
mov
add
add
xchg
dec
adc
lods
or
mov
daa
movl
loope
int
xor
in
lcall
je
pop
sti
lock
mov
xchg
cmp
popf
aam
lock
aam
addr16
flds
dec
or
in
fs
pop
xor
in
and
outsl
mov
imul
inc
sbb
loopne
mov
push
inc
scas
stc
or
fsubs
and
fldenv
cmpsl
int3
ja
push
adc
jbe
and
cwtl
xor
movsl
xor
pop
cmpsb
mov
add
inc
add
jge
mov
pop
pushf
inc
shlb
and
sbb
dec
lret
jecxz
in
jb
ja
mov
push
aad
cltd
adc
inc
push
imul
cli
push
notl
movsl
push
mov
xchg
pop
fcoml
shl
lods
xor
ja
loop
into
xor
mul
addb
mov
push
mov
or
cmpsl
pop
xchg
mov
iret
push
mov
stos
mov
jne
mov
loop
sar
sub
fcomip
add
add
pop
repnz
mov
jnp
das
xchg
ds
mov
inc
cmp
loopne
in
cmp
add
les
daa
daa
sub
ja
pop
push
xor
test
ret
pop
push
jae
je
adc
cmc
push
inc
or
leave
xor
adc
ljmp
dec
mov
pushf
adc
cmc
int
and
jo
adc
or
cmp
jne
shr
aaa
in
add
cmpb
inc
sub
mov
sub
jno
clc
test
and
iret
call
cmp
xchg
push
fwait
xchg
mov
fnstsw
mov
ret
jmp
lahf
fdiv
pop
pop
lods
movsb
dec
jp
cmp
loop
dec
cmp
xchg
cmp
bound
cmp
and
or
pop
xchg
les
lret
popa
call
es
scas
loopne
mov
cmp
adc
mov
dec
and
cmpsb
pushf
js
insb
test
push
sti
fcomp
mov
outsb
xor
shlb
or
jne
mov
jae
jecxz
inc
pop
xchg
mov
fwait
add
daa
cltd
fdivl
fucomip
pop
push
cmp
xor
dec
and
mov
rol
mov
sub
fldl
rorb
or
sbb
insl
lock
mov
xchg
loope
pop
out
mov
mov
pop
and
popa
mov
dec
mov
les
jl
or
daa
orb
pop
loope
shl
outsl
ret
mov
in
xor
dec
xchg
add
add
test
test
packuswb
pop
cli
mov
out
push
ret
loopne
pop
rep
fs
add
dec
stc
out
xchg
push
inc
inc
mov
lods
push
lahf
dec
mulb
and
in
mov
pop
in
cmp
into
outsb
lret
cmp
out
cmp
sti
and
mov
outsl
push
fucomi
pusha
sub
icebp
into
icebp
in
ret
dec
scas
sti
jmp
out
out
cmp
xchg
jp
sarb
jl
adc
dec
ret
mov
lahf
mov
mov
dec
scas
push
sahf
xlat
jne
xchg
xchg
mov
std
mov
or
lods
pop
je
xchg
cs
ret
data16
enter
mov
stc
gs
xchg
cmpsl
push
shr
mov
sbb
cmp
int
jl
ja
ret
outsb
push
jl
jo
dec
push
sub
mov
mov
or
pop
ja
push
daa
addr16
and
mov
cld
or
iret
xchg
jo
incl
jnp
sub
sub
push
or
push
jl
data16
pop
add
js
pop
and
pop
xor
sub
push
xor
sub
sub
adc
fisttps
mov
ds
mov
aam
cmpsl
inc
xchg
fdivl
addl
sbb
enter
cmp
pop
dec
adc
dec
push
in
das
mov
out
cmc
lcall
fists
jo
xchg
jno
aaa
cltd
sbb
in
aaa
ss
daa
xchg
xchg
movsb
setp
ds
cmp
pop
inc
cmc
daa
push
mov
repz
xchg
js
xlat
add
andl
inc
jb
mov
cmp
flds
cmpsl
shl
arpl
sbb
add
psraw
mov
and
pop
ss
mov
xchg
dec
dec
xchg
dec
les
xorl
ss
pop
lahf
lods
adc
push
pop
sbb
adc
aad
xchg
nop
fsts
jmp
outsb
add
dec
andb
adc
mov
ss
sarl
pop
mov
je
outsl
push
aam
xchg
iret
xchg
insl
cmp
es
in
push
fwait
rcr
jb
ja
lret
add
inc
notl
xchg
push
out
ljmp
pop
std
into
mov
inc
xlat
lret
inc
pop
sbb
jbe
jne
xchg
push
fdivl
fiadds
mov
mov
or
and
loop
ret
xlat
dec
push
out
mov
rep
mov
dec
call
icebp
jae
out
xor
int3
outsl
repnz
ss
shll
mov
jle
pop
xor
bound
ret
mov
pop
pop
js
dec
cli
aas
gs
ret
jns
out
pop
cs
lcall
movsl
sbb
es
push
icebp
cmp
mov
push
mov
cmp
std
xchg
addl
fdivr
syscall
cmp
outsb
inc
fidivrs
lcall
xchg
sbb
mov
mov
fs
roll
rcrb
jne
add
push
add
and
jg
inc
popf
cmovno
in
pop
jp
int
int3
into
stos
dec
std
xchg
mov
mov
insb
aaa
or
inc
sub
inc
cmc
push
imul
push
or
das
addl
mov
xor
int
into
pandn
out
add
cld
andb
dec
mov
outsb
data16
fsts
inc
shll
out
sub
push
push
call
push
push
cmc
inc
pop
cltd
jl
pop
enter
cmp
mov
andl
dec
mov
mov
adcb
mov
inc
and
and
add
xor
sbb
xchg
int3
fs
mov
packuswb
dec
or
dec
mov
inc
aaa
pop
int3
ss
aad
inc
push
lea
xor
xchg
push
xchg
stc
add
xor
dec
and
mov
pop
push
ror
mov
lcall
lock
popa
andb
pushf
jecxz
jle
rorl
test
ret
jmp
in
inc
pop
loop
jns
inc
aaa
leave
cwtl
decb
aam
fucompp
test
stos
ret
cmpsl
jl
fsubp
add
jnp
mov
iret
divl
loope
jg
fmuls
jo
mov
daa
mov
and
mov
divl
call
movsb
pop
sub
movd
insb
out
pop
test
jae
test
jl
push
jecxz
notb
jbe,pn
inc
sub
jle
enter
mov
adc
clc
repz
cmpsl
je,pt
or
hlt
ret
lcall
ficomps
iret
mov
push
xchg
in
daa
cmp
or
mov
out
push
stos
clc
pusha
cmp
js
roll
adc
jnp
lock
mov
dec
cmpsb
xchg
adc
dec
movsb
sub
js
mov
sub
test
push
scas
out
xchg
movsl
cld
jo
jle
sbb
push
loopne
or
or
test
mov
xchg
and
hlt
push
dec
inc
pushf
add
mov
scas
jp
xor
daa
cmp
or
pop
push
ds
lcall
jns
or
xchg
sbb
out
out
stos
loopne
outsb
call
imul
dec
xor
and
adc
rcrl
loope
xchg
sbb
icebp
mov
in
dec
lcall
sbb
xchg
mov
xchg
repz
inc
fldt
testl
test
test
and
xor
andl
mov
insl
cmp
jecxz
out
fcompl
repz
repnz
movsb
sbb
repz
mov
es
sbb
mov
inc
out
mov
js
std
xchg
cmp
out
cli
jecxz
xchg
dec
in
fndisi(8087
mov
lahf
jmp
ror
in
adc
inc
out
out
fisttpl
rcll
and
xchg
mov
movsl
mov
xlat
xor
add
int
lcall
std
sbbl
or
pop
lret
mov
push
xor
popf
and
adc
pushf
lea
lods
leave
dec
addr16
daa
mov
adc
cli
aas
sarb
pushf
hlt
adc
mov
adc
cwtl
stos
xchg
mov
test
push
push
fs
mov
jo
jnp
inc
and
cmp
js
mov
sub
fs
popf
mov
fcomps
aaa
popa
and
or
iret
adc
dec
pop
cmpsl
sbb
adc
dec
mov
adc
mov
adc
jle
xchg
add
inc
aam
pop
cmpsb
and
cmp
xor
das
out
mov
jecxz
pop
push
mov
les
sub
in
inc
pop
cs
sub
push
lods
mov
stc
cs
jg
loopne
sbb
xchg
subl
lcall
in
aam
pop
jo
jle
push
cmp
imul
cmp
inc
dec
push
not
imul
dec
dec
mov
shrb
popf
inc
outsb
ret
gs
mov
scas
xor
push
sub
cld
mov
fistpll
fwait
dec
sbb
rcrb
push
imul
adc
loopne
out
jecxz
inc
or
jle
or
imul
test
arpl
rcr
and
stos
add
sbb
and
xor
sub
dec
push
fnstenv
dec
je
test
icebp
pop
inc
push
sti
dec
mov
and
add
fsubp
lods
jecxz
jae
or
add
xchg
stc
dec
xor
rorl
add
add
int3
xor
pop
adcb
fisubrl
dec
xor
lods
jp
mov
imul
add
std
clc
rorb
add
jge
or
push
in
fnstcw
dec
arpl
out
lahf
jae
sub
sub
push
das
and
dec
push
xor
jl
sbb
pop
pop
adc
lds
add
addl
insb
stos
mov
sub
add
cmp
and
mov
mov
xor
ds
outsb
into
sahf
cs
cmp
fstps
mov
mov
and
inc
and
rorl
inc
ud1
sbb
add
cmp
push
sarb
push
out
popa
adc
push
aad
cmp
jecxz
and
mov
push
pop
or
push
jno
jb
les
xor
in
jnp
dec
imul
cld
cltd
outsb
cltd
fwait
mov
jp
push
sbb
enter
das
out
fimull
scas
cmp
mov
jge
jbe
loop
mov
adc
lahf
inc
sub
int3
jp
add
jg
jnp
lea
mov
mov
xchg
in
ret
xchg
popf
jae
out
out
icebp
push
int3
in
dec
sbb
scas
call
pop
loop
push
mov
pop
mov
or
shlb
mov
and
sbb
jp
jmp
test
ret
int3
jo
icebp
add
inc
andl
jnp
jl
outsb
mov
sub
and
mov
scas
idiv
adc
mov
enter
xor
in
popa
xlat
daa
add
pop
fimuls
xchg
add
and
adc
imul
loop
shl
scas
ljmp
mov
cli
cmpsl
movsl
aam
mov
push
inc
scas
es
push
mov
cmp
push
clc
inc
mov
mov
lcall
popf
jp
sub
xchg
add
les
jg
icebp
jo
dec
gs
and
mov
adc
or
jo
lock
sbb
dec
aaa
and
push
mov
push
or
lret
jp
push
out
mov
jo
out
lods
fmuls
adc
testl
cmp
ja
mov
inc
push
cli
and
mov
das
inc
fidivl
dec
adc
or
cmp
out
cltd
adc
jg
stc
fstpl
movsl
outsl
in
cmpsl
cli
popf
bound
das
or
push
sbb
mul
adc
int3
fucomip
dec
pop
leave
mov
sub
jo
test
cmp
ljmp
mov
icebp
rcrl
addl
pop
daa
xor
cltd
add
ret
out
pop
aam
clc
lcall
sub
jmp
or
and
test
scas
sub
imul
popa
jbe
cmpl
pmuludq
xchg
push
lret
testl
outsb
ret
jns
or
adc
xor
cmp
adc
mov
stos
in
mov
inc
mov
sub
or
push
jl
rcrb
jp
leave
adc
lods
orb
fsubr
sahf
or
faddl
sub
cld
mov
jmp
jb
aam
mov
cmp
sti
in
mov
lret
cltd
leave
and
fcmovnu
jae
nopl
and
jo
sub
push
enter
loopne
xor
and
fadd
inc
nop
jg
cmp
sub
inc
or
mov
imul
or
aad
cmp
xchg
mov
cs
ss
outsl
and
sub
mov
lea
cmp
imul
es
jbe
push
jecxz
adc
xchg
add
inc
add
dec
push
jb
jmp
cs
xchg
test
push
xchg
inc
sbb
push
dec
cld
nop
mov
fistps
sbb
ljmp
dec
inc
jns
dec
cmp
sub
hlt
cmp
sbbl
daa
mov
mov
xchg
push
xchg
ja
xchg
jno
dec
lret
jmp
mov
dec
sbb
adc
lock
popf
js
aad
rclb
adc
cltd
xchg
pop
jnp
std
stos
add
mov
das
cmp
ret
in
mov
mov
push
adc
aad
inc
inc
stc
xor
add
insl
inc
mov
ljmp
aaa
lahf
mov
fst
repz
adc
cmp
mov
fistps
inc
pop
xchg
xchg
fildl
idivl
jnp
jns
cmp
call
cwtl
push
push
int3
dec
cs
out
sbb
mov
nop
leave
sub
and
adc
sub
inc
xchg
int
jg
popf
stos
pop
xor
sbbb
rol
or
outsb
mov
pop
dec
mov
andl
xchg
pusha
sub
dec
pop
clc
sbb
ss
lods
test
bound
icebp
fsubl
jmp
xor
test
mov
cmp
inc
addb
mov
stos
dec
add
ds
lds
outsl
arpl
inc
bound
mov
into
pop
test
in
mov
jle
int3
adc
ljmp
add
call
je
mov
xchg
or
insl
rcrl
xor
fmul
mov
dec
pop
lds
data16
fld
mov
sbb
cmp
adc
lcall
test
pusha
jle
loope
out
addr16
push
test
push
insb
add
xor
push
or
mov
sti
cs
push
sbb
stc
inc
mov
jb
andl
jecxz
mov
xchg
daa
aas
cld
adc
jl
pop
xchg
lcall
sub
arpl
in
pop
mov
cwtl
mov
leave
out
jb
ret
ljmp
inc
mov
lret
dec
call
and
cmpsb
dec
inc
push
pop
bswap
stos
rorl
inc
movsb
adc
iret
movsl
frstor
pushl
lahf
insb
jle
ja
mov
ss
dec
jo
loopne
jnp
fidivs
aas
mov
and
imul
cmp
sti
add
xchg
int3
or
les
sub
pop
out
pop
adc
jb
repz
dec
dec
cld
add
pop
inc
jmp
sti
inc
mov
inc
lret
xchg
dec
fnstsw
clc
push
sub
fsubrs
stos
jnp
out
aas
xchg
mov
into
in
shlb
test
out
ret
jecxz
mov
push
pushf
ret
jl
ficoml
lock
mov
push
mov
push
dec
outsl
xchg
pushf
adc
rcrl
push
inc
inc
pop
sub
dec
ficompl
push
inc
adc
hlt
sbb
lret
xchg
lret
gs
inc
inc
ret
movsb
push
mov
push
dec
xchg
mov
push
cwtl
sub
push
addr16
sbb
lods
cld
jl
jo
addb
lea
mov
mov
lods
cli
mov
dec
es
shlb
or
xchg
jb
mov
sbb
push
push
fdivl
sbb
les
adc
xchg
mov
pop
out
mov
ljmp
push
push
mov
loopne
daa
fstpl
mulb
daa
int
cmp
scas
arpl
iret
clc
mov
fwait
imul
jl
pop
push
popf
rcll
fdivs
repnz
xchg
pop
fs
ds
daa
mov
jnp
jmp
in
fwait
lea
fcomp
mov
ret
push
test
hlt
inc
mov
pop
cmpsl
xor
movsb
cmpsb
sbb
popf
sarb
jbe
xor
rclb
les
in
pushf
or
adc
add
lods
cmp
add
adc
pop
mov
ss
dec
cwtl
mov
data16
jecxz
dec
jmp
scas
inc
dec
inc
mov
sbb
sub
jg
or
xchg
outsb
insb
call
lret
push
xorb
push
push
and
pop
dec
sub
out
push
daa
daa
shrb
add
rol
pop
outsl
xor
mov
gs
pushf
mov
sahf
adc
pop
cmpsl
aaa
in
int3
cmpl
mov
pop
in
sbb
lock
data16
pop
imul
pop
lea
jbe
adc
das
xchg
scas
repnz
adc
add
movsb
sub
and
in
push
ss
sarb
adc
mov
cmpsb
push
cmp
inc
leave
sub
fstl
sbb
sti
adc
jne
insb
pusha
pop
mov
test
icebp
pop
das
roll
xchg
or
nop
and
xlat
push
mov
cwtl
hlt
fwait
inc
xchg
out
mov
out
mov
add
dec
in
je
popa
repz
cs
cmp
mov
cmp
add
data16
daa
push
push
je
lahf
test
mov
rcrl
and
cmp
jle
push
shr
lret
lds
sahf
xor
popa
orl
sub
cmc
lds
and
lahf
ret
shlb
test
pusha
pop
add
loope
adc
arpl
push
int3
outsb
push
jno
in
xchg
mov
mov
jl
jp
xor
faddl
push
jp
stc
push
movsb
cmc
divl
scas
ret
movsl
das
mov
test
add
ja
cmp
xlat
mov
xchg
hlt
les
fs
mov
xchg
pusha
lods
sub
jecxz
mov
fwait
mov
leave
mull
add
addr16
cmp
iret
shl
pop
mov
jg
insl
cmp
ja
inc
rol
enter
xchg
push
sbb
mov
mov
lea
and
cmp
test
pop
inc
shl
ret
shrb
xchg
stos
in
xchg
xchg
cmp
daa
loope
insb
jg
in
std
stos
cmp
jecxz
jns
int3
mov
lock
mov
daa
orb
add
shll
lcall
clc
jns
outsb
dec
aaa
mov
lahf
and
or
rol
xchg
nop
fnstcw
push
cmp
popf
je
jno
mov
pop
data16
push
shrl
mov
lds
mov
mov
xor
inc
mov
int
add
lea
xchg
ljmp
mov
les
push
lock
inc
pushf
test
outsb
out
pop
outsl
ficoms
imul
xchg
push
adc
mov
pop
inc
xchg
mov
lods
inc
inc
xchg
outsl
or
mov
pop
jl
dec
shlb
and
push
jne
jne
daa
icebp
repz
cmc
insl
sub
mov
mov
cltd
lret
in
shlb
inc
dec
inc
pop
adc
sbb
inc
fs
call
mov
jmp
xchg
pop
aad
loope
ja
xchg
mov
nop
xchg
jae
sarl
aam
cmp
inc
rcr
sbb
arpl
xchg
add
pop
xor
ss
out
es
stc
test
gs
pop
enter
je
add
fwait
testl
mov
or
jle
test
cltd
mov
loope
mov
pop
pop
mov
mov
cmp
cmp
push
or
cmp
mov
jns
pop
cmp
jno
add
sarl
pop
or
cmp
inc
and
push
mov
pop
push
cmp
mov
aas
dec
sbb
cs
adc
and
cltd
andl
in
mov
cmp
pop
test
pop
jecxz
in
rcrb
loop
xchg
cmp
ss
out
sbb
xorl
xor
cmp
cmc
shlb
xchg
sbb
sub
mov
adc
aas
lret
xorl
and
mov
shlb
dec
pcmpgtw
cmp
sub
xchg
std
xchg
loope
pop
xchg
dec
jge
mov
in
inc
or
or
hlt
cltd
add
imul
mov
push
jbe
jge
inc
or
lods
rorl
or
inc
mov
sbb
mov
push
xchg
in
jae
sub
and
jl
mov
inc
sub
pushf
mov
mov
mov
lods
in
and
or
rcrl
jb
movsl
mov
dec
std
in
xor
in
fidivl
stos
mov
push
lods
dec
fcomi
and
sub
imull
lods
push
xchg
jp
add
sbb
xchg
in
sbb
pusha
subl
dec
inc
cmp
hlt
add
mov
cmp
popa
outsb
subb
xchg
aam
xchg
xor
sub
inc
lcall
pushf
stos
in
adc
mov
movb
stos
push
push
mov
mov
fisubrl
aaa
or
mov
imul
in
adc
mov
jne
inc
cmpsl
dec
ret
mov
cmp
pop
jb
and
lcall
jg
mov
add
jl
mov
pop
insb
iret
aam
inc
sub
rcrb
and
adc
mov
push
or
movsl
push
mov
pop
cmp
in
lret
repz
cmpsb
test
mov
out
xchg
rorb
push
or
dec
jp
push
inc
mov
mov
mov
enter
dec
add
pop
dec
xchg
outsb
les
pusha
in
ja
int3
rclb
inc
push
aas
movsl
pop
les
pop
inc
aaa
inc
dec
cmpsb
jno
mov
jnp
addb
add
imull
sbb
push
push
push
adc
data16
jmp
mov
aam
stc
stos
fldcw
pop
in
lahf
lock
repz
sbb
xor
xchg
test
xchg
lods
jmp
les
enterw
dec
sbb
cwtl
fidivrl
pop
dec
loop
mov
xor
scas
insl
mov
into
enter
add
out
mov
mov
xchg
fidivrl
xchg
push
push
jp
jmp
insb
enter
mov
push
std
mov
pop
cs
cs
fwait
add
jns
pop
sub
mov
jne
lods
inc
add
xor
push
mov
shrl
sub
lret
sub
and
xor
in
mov
adc
sbbl
sbb
imul
rclb
xor
je
fdivs
fwait
ret
bound
push
test
out
xor
les
sbb
mov
xlat
ret
hlt
stos
adc
mov
or
and
pop
cmp
nop
dec
sbb
ret
test
into
movsl
stc
call
fdivl
in
je
fcmove
push
xchg
das
addb
mov
insl
idivl
add
loopne
and
pop
pop
mov
xchg
jge
andl
inc
add
lods
lea
push
addr16
xchg
repz
mov
cli
jnp
mov
push
out
imul
sub
nop
in
ffreep
call
cmp
xchg
push
adc
ret
cs
int3
repz
loope
dec
mov
fldt
and
repz
push
and
cmp
mov
popf
push
cmc
and
scas
add
mov
push
push
and
mov
fs
idivb
cmp
gs
js
outsl
movsl
data16
push
xor
mov
inc
mov
test
das
xchg
mov
pusha
shld
jp
pop
xor
clc
xchg
in
xchg
iret
push
nop
push
inc
sub
pop
pop
and
jnp
sbb
lock
mov
lds
sti
sbb
mov
push
sbb
fstl
hlt
mov
ja
pop
push
xchg
sub
test
out
jb
loope
push
sub
and
mov
jb
out
mov
hlt
or
or
sub
fwait
push
cmpsl
push
out
mov
cmpsb
pop
iret
and
loopne
jns
or
sarb
and
call
repnz
sub
push
out
cld
mov
loope
xor
aam
leave
cs
xor
push
xchg
scas
subb
fsubr
push
add
out
jbe
jb
loop
pop
xchg
test
push
sbb
sbb
pop
loope
lea
std
pop
adc
lret
sbb
xchg
outsb
sub
and
xchg
cmc
jbe
into
push
push
sti
daa
inc
fdivl
orb
cli
mov
cmp
ret
movsb
bnd
inc
mov
das
test
lcall
notl
jmp
mov
jns
insl
les
xchg
inc
cltd
mov
push
testl
enter
mov
inc
adc
and
sub
or
mov
stc
out
adcb
push
test
adc
mov
xchg
mov
test
push
jno
stc
lret
sti
scas
into
leave
mov
push
and
mov
mov
insb
jecxz
mov
xor
xchg
push
leave
mov
xlat
cwtl
ret
cs
pop
scas
inc
sti
jp
lods
js
jmp
popa
xlat
cmp
fcoml
lret
dec
jl
icebp
fsqrt
and
fistps
xchg
xor
fnstcw
jmp
push
and
jmp
adc
shrl
xchg
push
mov
insl
movsl
fcomps
add
rolb
shll
xchg
cmp
fcmovnu
cld
clc
mov
inc
test
insb
rcr
push
push
hlt
std
mov
or
push
pop
fidivs
hlt
cmpb
pop
mov
and
outsb
inc
mov
mov
or
push
xor
jno
lods
scas
rcll
push
rclb
cmc
push
in
cmp
fstpt
sub
push
dec
jg
aaa
testl
xchg
xor
pop
xor
outsb
out
aam
ds
insl
imul
adc
cli
ret
cmpsb
shlb
sub
adc
xchg
xor
mov
xor
mov
add
dec
mov
out
dec
insb
jbe
sarl
xchg
xlat
mov
or
sti
add
lahf
pop
in
imul
aas
jg
add
jnp
shll
push
fstps
add
sub
xchg
aam
outsl
inc
in
push
les
addl
push
push
into
cmpsl
mov
loope
cld
mull
test
inc
cltd
xor
pop
jns
hlt
cltd
inc
inc
pop
pushl
imul
xchg
jae
iret
adc
inc
in
je
scas
out
stos
int3
inc
daa
out
inc
aas
cli
adc
jge
xorb
sub
addr16
stos
jne
out
mov
adc
adc
dec
outsb
jb
xor
test
bound
lret
cmpsb
leave
jno
mov
cs
mov
adc
push
sub
nop
fiadds
mov
dec
ret
nop
xchg
std
lret
clc
loopne
mov
xorl
out
addr16
imul
cltd
sahf
add
loopne
sahf
mov
notl
je
stos
movsb
inc
sbb
ja
lahf
inc
cwtl
cltd
nop
jae
ss
mov
jbe
cmp
lds
sti
push
pop
adc
push
cmp
dec
bound
in
inc
shl
xchg
fs
fidivrl
insb
repnz
pop
or
mov
add
aaa
jns
add
outsl
ret
jo
push
insl
jbe
aas
addr16
outsl
or
fs
xchg
xchg
clc
cmp
aam
mov
cwtl
int3
imul
mov
scas
and
test
arpl
repnz
xor
sahf
jle
and
sub
sub
in
xor
shrb
jns
and
aas
mov
shll
scas
adc
aaa
bound
dec
leave
cmpsl
into
cmc
fldcw
sbbl
lds
cwtl
adcb
je
pushf
push
xchg
subb
daa
movsl
loope
cmpsb
rcrb
mov
insl
scas
cld
mov
pop
mov
xchg
jmp
stos
mov
into
filds
aam
xchg
fdivr
ret
hlt
movsb
aad
iret
insb
sub
shll
out
jnp
fs
mov
psubusb
test
jp
ja
and
and
mov
mov
movsl
and
out
mov
mov
test
sbb
pop
jp
into
cmp
add
xor
je
inc
dec
sbb
into
jno
pop
insb
pop
out
jno
mov
daa
lods
fisttps
or
call
sbbb
cmpsl
test
cmpsl
or
sub
shl
cwtl
fidivs
cmpsl
shll
or
inc
push
fiaddl
je
cmp
and
aas
jp
add
lret
movsb
imul
push
clc
mov
jae
sahf
sbb
sar
testb
jne
adc
mov
jmp
xor
movsl
or
cs
push
cli
and
mov
jnp
xchg
xor
aam
inc
sub
cmpsb
jne
scas
adc
pop
sub
pusha
xchg
scas
xchg
push
jmp
outsl
jecxz
icebp
xchg
inc
leave
repnz
loopne
mov
add
cltd
sub
pusha
adc
lds
outsb
and
lea
jb
movsb
inc
cli
pop
insl
shrl
repnz
pop
inc
incb
gs
or
sub
sbb
fs
add
pop
out
push
test
sub
cmp
add
xchg
and
jno
push
xlat
sub
push
arpl
imul
pop
int3
popf
jl
dec
lret
rcr
add
test
stos
mov
and
call
rcll
jp
add
xchg
dec
test
pop
add
mov
jg
leave
xchg
xor
cmp
add
jmp
mov
cli
mov
xrelease
sbb
add
sub
sahf
bound
call
fwait
setae
hlt
push
cmpsl
inc
mov
jb
xchg
call
cld
cltd
xor
adc
xorb
push
jnp
push
leave
push
outsl
push
push
add
sub
inc
pop
sti
push
addb
sbb
out
daa
or
fcomps
cmp
push
aam
dec
or
lds
and
pop
stos
fdivrl
cmp
sbb
jns
mov
out
js
inc
jne
cmc
call
pop
lods
ds
mov
test
in
jge
or
test
ja
push
xor
inc
mov
add
adc
mov
dec
cli
mov
data16
outsb
push
and
jp
mov
or
mov
sbb
stos
shr
xor
nop
push
add
imul
lahf
xor
add
xchg
lcall
mov
shlb
sub
jmp
cmp
ss
std
loop
lods
repnz
sbb
test
mov
lret
lds
push
mov
mov
dec
mov
mov
rolb
insl
test
dec
les
xor
xor
outsb
push
xchg
xchg
inc
and
xor
out
je
pop
sbb
and
jmp
adc
comiss
push
pop
mov
sub
mov
mov
cmp
stc
pop
sbb
xchg
adc
push
insl
add
rclb
addr16
or
cli
ds
jne
adc
sub
icebp
pop
and
out
pop
sbb
mov
gs
int
mov
dec
dec
setae
add
push
insl
iret
adc
icebp
mov
scas
inc
or
loopne
nop
jmp
cmpsl
xchg
std
jge
or
js
jp
mov
cmpsb
or
aas
pop
loop
in
daa
imul
into
cmovae
jecxz
imul
fstl
xchg
jno
add
pusha
out
jae
shrl
test
xchg
and
add
stc
pop
dec
xor
out
clc
xchg
hlt
jl
loop
icebp
outsb
test
shrb
std
dec
arpl
mov
cmp
dec
jno
mov
push
push
jb
movsb
xchg
pop
mov
std
insl
mov
clc
aas
fxch
or
sbb
sbb
push
pop
xchg
test
mov
pop
or
pop
mov
test
leave
dec
ss
dec
mov
sbb
pop
cmc
add
adc
enter
mov
das
lahf
test
xchg
outsl
jl
pusha
dec
adc
int3
push
data16
cmp
ss
mov
lods
dec
mov
sbb
jle
push
loope,pt
inc
ret
movsb
xlat
xlat
push
lahf
cld
mov
or
or
sub
enter
jb
imul
nop
int
bound
push
cli
js
cmpsb
mov
dec
push
sti
or
inc
pushl
dec
mov
fsub
addr16
psubw
push
jg
mov
dec
fstps
clc
mov
lahf
test
sbb
lods
jge
scas
hlt
xlat
or
lahf
stos
mov
jnp
dec
jmp
jns
jo
cmpsb
fimull
imul
mov
add
into
sbb
aaa
adc
cmpsl
pop
xor
fdivl
dec
pop
mov
xchg
and
adc
cmpl
jg
pop
jno
jnp
push
dec
test
xchg
xchg
cmp
shll
or
push
outsl
decl
outsl
jmp
sub
loope
push
mov
fsubs
adc
ss
pop
jl
loope
out
lahf
cmpsb
repz
icebp
es
div
jecxz
fldenv
das
jne
scas
sub
imul
cmp
in
testl
lret
popa
sbb
movsl
dec
fbld
movsl
inc
adc
jp
dec
xor
dec
jne
push
push
sti
test
sti
addl
push
inc
sbb
in
inc
cltd
into
fstpt
in
and
lock
mov
les
in
arpl
push
cmp
jno
mov
mov
int3
adc
dec
aad
stos
shll
pop
xchg
pop
ja
rcrl
lods
lea
cmp
cmp
sti
cltd
mov
dec
test
dec
mov
pop
cmp
lods
push
pop
add
sbb
ljmp
les
aaa
js
mov
pop
mov
mov
mov
add
and
add
les
and
scas
mov
sbb
outsl
mov
mov
roll
xor
ficompl
iret
imul
aas
jb
cmp
in
mov
xor
xchg
nop
insl
jns
cmp
push
push
sub
lods
mov
enter
cmp
add
cmpsb
sahf
and
outsl
mov
movsb
adc
adc
dec
push
out
and
push
sub
mov
cmpsl
repz
les
sbb
aam
enter
inc
add
push
movsl
jbe
dec
gs
in
cmp
sbb
pop
cmp
and
aad
add
add
out
and
loopne
test
cwtl
or
mov
pop
in
cld
nop
adc
dec
fsubrp
cmc
dec
adc
jne
sbb
push
aam
pusha
repz
or
xor
stos
xor
scas
cli
and
xchg
fcomps
cmc
add
aad
insl
ja
orb
jecxz
pop
jbe
push
ficoml
lock
or
xchg
test
imul
mov
xor
or
repnz
in
xchg
sbb
and
ret
lds
lea
lret
cltd
dec
mov
ret
add
pop
xchg
mov
in
adc
cmp
sub
push
lock
cmp
or
pop
cld
jmp
xor
or
pop
pushf
or
aas
xchg
loopne
mov
mov
mov
mov
jno
outsl
jne
sub
add
les
cmpsb
xor
xchg
cmp
sub
pop
mov
popa
mov
push
dec
mov
out
ret
rorb
push
xorl
cmp
xor
popf
cmp
roll
sub
test
inc
and
xchg
jb
sub
xchg
lods
movsb
mov
dec
push
xor
mov
pop
adc
pop
cmp
popf
xor
cmp
mov
icebp
push
dec
outsl
aad
mov
adc
sub
sti
fnstsw
iret
mov
rcll
sahf
cmpsb
pop
sbb
or
fldcw
int3
xchg
sti
cmpsb
pop
xchg
mov
cmp
sub
stc
push
loope
push
sub
jg
leave
jbe
ss
push
notl
movnti
mov
hlt
xor
sbb
imul
cmpsb
jl
add
xor
loope
dec
xchg
test
enter
imul
lret
mov
mov
les
aad
ss
in
sti
cmp
or
test
add
aas
ss
sub
add
or
inc
xchg
out
imul
mov
mov
in
cmp
pop
lds
pop
out
inc
sbb
and
or
addr16
test
movsb
flds
xchg
dec
ret
mov
adc
sub
repz
add
sbb
xchg
insl
mov
dec
jb
sahf
sbb
jbe
imul
and
mov
cmc
inc
jno
lret
ljmp
push
lds
shrb
mov
lcall
jmp
movsl
jae
push
xor
cmpl
mov
xchg
out
mov
cwtl
mov
cwtl
ss
mov
imul
add
lahf
in
cli
lods
cs
pop
insb
add
xlat
sub
jmp
xor
stos
push
sbb
sub
nop
pop
adcl
sub
jb
xchg
scas
mov
adc
lret
dec
add
cltd
into
pop
scas
jmp
add
mov
push
daa
pop
xchg
outsl
fs
pop
push
xchg
test
mov
cltd
stos
loop
ret
ss
cmp
insb
pop
ret
ds
push
loope
add
out
orl
out
sbb
pop
inc
push
mov
jg
dec
ret
imul
rclb
jne
shr
mov
or
and
lcall
imul
and
jg
push
cmp
mov
and
iret
cmc
in
xchg
cmp
rorl
test
lahf
and
or
lea
sbb
add
movsb
lds
daa
dec
daa
jns
shlb
push
inc
mov
jne
stos
insb
scas
rcrl
dec
add
mov
xor
inc
xor
movsb
rcr
mov
xchg
into
sbb
aad
es
in
arpl
xchg
sbb
jo
lcall
push
test
std
fcoml
imul
xchg
jp
cmp
push
gs
popa
adc
loop
or
mov
cmp
mov
mov
je
sbb
shlb
and
hlt
dec
repnz
dec
sti
data16
inc
popa
je
ss
icebp
push
pop
fcomps
inc
xchg
ret
jp
iret
xchg
xchg
mov
sarb
out
jnp
ss
test
roll
dec
sbb
sbb
push
xchg
cmp
nop
push
std
mov
sbb
sarb
lret
aas
mov
xchg
outsb
lods
push
lea
lock
add
jns
insl
mov
xor
sti
fadds
out
cs
fstps
mov
mov
jecxz
jmp
xchg
jmp
stos
mov
lods
add
mov
jl
xor
xchg
push
adcl
add
insb
jp
push
jnp
in
or
ljmp
mov
in
cmp
in
sbb
aaa
into
dec
push
test
gs
inc
popa
mov
call
mov
pop
sub
movsl
daa
add
jl
xlat
dec
rcll
call
rep
mov
out
jne
pop
sti
push
push
popf
sti
int3
clc
or
fisttpll
outsb
or
cmp
icebp
mov
adc
movsl
lea
mov
fcmovb
mov
aas
gs
sub
rcl
sub
sub
sub
sub
rorb
jle
movsb
mov
dec
mov
pop
fsubl
int3
mov
cmpsl
daa
push
xchg
test
or
inc
mov
pop
aaa
test
or
lcall
mov
jns
xchg
add
jne
pop
or
sub
xorl
sbb
jne
loop
mov
sub
call
popa
pop
imul
lock
push
push
mov
pusha
cmp
cmpb
movsl
xchg
xchg
outsb
scas
sbb
sti
aad
cmpb
scas
fucomi
lea
ljmp
mov
adcl
mov
push
mov
xchg
jle
imul
test
jne
popa
lret
aam
scas
mov
enter
add
cmp
adc
test
insl
cmp
shl
fwait
ret
dec
aad
int3
lahf
mov
nop
mov
cltd
lock
addr16
jns
mov
sub
sbb
pop
int3
or
pop
dec
sbb
jb
cmpsl
out
xlat
jle
push
insb
outsl
enter
lret
jecxz
jns
pop
adcl
xchg
pop
sub
cmp
fistpll
inc
jle
push
popf
idiv
xchg
into
mov
inc
mov
mov
icebp
push
popl
aaa
sub
sbb
xchg
mov
stos
stos
push
sub
ret
popa
addr16
es
fmul
fidivs
test
cmpsb
lret
lods
push
mov
mov
jecxz
inc
insl
sub
add
mov
sahf
clc
out
push
psraw
inc
xchg
hlt
inc
add
or
shlb
sub
sahf
outsb
push
jg
xlat
in
lahf
fbstp
push
and
imul
jecxz
inc
data16
leave
fsubr
push
adc
mov
out
mov
mov
xlat
push
adc
fucomp
loop
outsb
push
test
cs
sbb
mov
ss
fdivl
lock
shlb
scas
nop
pop
je
stc
and
daa
std
cmpsl
xchg
out
sahf
cmp
out
sub
int3
ret
sti
cmp
leave
adc
mov
cli
cmpsl
and
repnz
pushf
sbb
in
xor
hlt
push
insl
and
popa
sbb
movsb
sbb
jmp
inc
mov
sbb
fs
test
sub
jns
inc
nop
jo
mov
adc
pop
cmovs
notb
pop
movsl
xor
sarl
insb
loop
sub
pop
mov
je
or
dec
into
sub
imul
push
in
adc
inc
mov
stc
push
js
int
data16
push
mov
test
inc
pusha
mov
dec
push
xor
mov
xchg
ficompl
cwtl
or
and
pop
pop
add
jecxz
xchg
cmp
mov
jl
mov
leave
xor
dec
jbe
aam
arpl
pop
cmpsb
les
xchg
mov
subl
and
add
mov
jmp
mov
cld
mov
sbb
xor
mov
std
lret
sub
jecxz
subb
add
jno
xchg
imul
loop
xor
ret
mov
imul
dec
fisttpl
mov
adc
jg
pop
pop
fdivrp
das
sub
in
push
call
rclb
movzwl
jmp
ficoml
mov
dec
std
adc
call
xchg
int3
shlb
push
xchg
push
in
jle
or
vmovq
aam
repz
sbb
lcall
in
adc
sbb
push
xor
popf
mov
or
aam
pop
lcall
mov
std
leave
les
inc
in
std
lods
aam
jg
aaa
or
lods
rcrb
inc
mov
test
jmp
bound
cltd
ja
shr
andb
cmc
scas
fcoml
xchg
and
cmp
mov
and
adc
adc
push
mov
out
pop
in
sub
bound
iret
fnstcw
fidivrl
or
lds
insb
fwait
jge
fisttps
ljmp
inc
add
dec
jne
inc
add
outsl
jmp
flds
pop
xchg
and
add
dec
push
and
push
sub
xchg
call
or
pop
mov
lahf
pushf
sbb
dec
int3
inc
dec
aas
sbb
inc
pop
add
dec
adc
pop
push
mov
notl
cmp
addr16
mov
mov
test
mov
inc
js
fwait
into
cmp
in
mov
iret
rep
sub
lds
push
pop
stos
cltd
aas
jbe
push
xchg
clc
and
imul
lret
inc
inc
mov
pop
in
fcmove
or
mov
sub
jge
pop
iret
dec
repnz
andb
xchg
inc
outsb
jbe
mov
ss
sub
cmpsb
test
mov
and
pop
in
imul
enter
jns
xchg
push
sbb
adc
mov
mov
iret
mov
mov
mov
scas
sbb
adc
and
sbb
or
pop
sbb
add
mov
cmp
mov
out
enter
aam
xchg
mov
sub
jg
pop
jge
aas
mov
mov
mov
mov
jl
sbb
cmp
pop
nop
mov
dec
mov
xchg
fidivs
add
mov
outsl
cmp
fs
ds
pop
inc
fimull
xlat
mov
or
enter
test
xchg
push
jle
leave
out
addr16
xchg
mov
push
in
sub
lods
mov
pop
add
xor
jmp
arpl
push
pop
dec
push
shr
lret
xchg
dec
aas
outsl
data16
rcrb
mov
loope
add
shll
cmpsb
lahf
inc
es
cmp
clc
add
pop
fs
das
xchg
add
xorl
outsb
or
and
repnz
push
xor
jbe
pop
roll
addr16
fidivl
mov
push
cmp
cmp
pop
add
repz
xor
mov
scas
or
icebp
pop
rcrb
sub
mov
test
pop
shll
imul
mov
or
xor
or
pop
push
xchg
and
or
stos
mov
nop
adc
daa
std
jge
outsl
jge
cwtl
and
adc
rclb
pusha
xchg
cmp
cli
stos
pop
insl
lcall
stos
xchg
cli
add
xchg
popl
outsb
cli
add
mov
ljmp
mov
xor
and
push
ret
sbb
xchg
mov
and
mov
sbb
xchg
pop
and
das
pop
loop
test
pop
std
pop
ret
inc
add
lret
fidivrl
jecxz
or
inc
clc
jns
jnp
push
sahf
xchg
xchg
pop
pop
fwait
mov
sub
inc
sarb
bound
or
gs
push
sub
mov
pop
mov
loope
lea
icebp
pop
mov
or
push
popa
or
in
xchg
nop
inc
jne
pop
out
stos
adc
nop
and
mov
lods
bnd
inc
loope
and
push
push
int3
outsl
test
aas
outsl
scas
inc
pop
push
iret
pop
mov
gs
pop
ret
sub
adc
insb
mov
nop
enter
push
out
push
jno
and
pop
sbb
cmc
into
xchg
push
add
jae
inc
stos
add
popa
imulb
inc
lock
pop
sbb
mov
outsb
xor
stc
mov
test
sti
fwait
lcall
out
jecxz
dec
aaa
or
test
push
mov
dec
adc
inc
or
cmpsl
push
add
inc
sti
dec
ficompl
jp
sub
xchg
in
nop
sar
mov
js
mov
cmp
outsb
and
add
mov
mull
jb
movsb
lock
push
movsb
shll
leave
mov
push
ja
xchg
push
in
inc
int3
adc
movb
dec
sub
or
hlt
mov
js
pushf
fs
lds
xor
mov
call
or
inc
mov
push
adc
clc
lcall
movl
inc
sub
pop
add
pop
sub
mov
jo
leave
stc
sub
out
ljmp
push
sbbl
push
xor
xchg
mov
inc
mov
fisttpll
inc
add
lods
lods
pop
out
add
sbb
cs
push
sub
lods
out
push
sbb
push
pop
test
cld
and
mov
fildl
loopne
xchg
cmpsb
insl
jge
out
frstor
push
xchg
pop
cmpsl
pop
fyl2xp1
pop
xchg
mov
dec
mov
jmp
in
mov
fs
aad
roll
test
push
xchg
sbb
ffree
loop
fwait
ljmp
push
out
stc
ficomps
jg
test
test
in
cwtl
dec
cmp
stos
negb
ja
lahf
adc
ret
jb
or
pop
icebp
fcoml
dec
add
adc
jl
in
stos
jecxz
adc
add
xor
lcall
adc
push
enter
sub
sbb
orb
incb
xor
data16
xchg
mov
pop
cmpsl
mov
xchg
pop
out
xchg
sub
cmc
or
cmc
adc
xchg
jmp
xrelease
pop
das
lea
cmp
jecxz
xchg
xor
ret
imul
mov
xor
lret
hlt
push
ljmp
mov
cmpsl
out
xor
in
imul
aaa
data16
xchg
push
popa
bound
dec
or
orl
insl
and
inc
movsl
in
cs
mov
add
push
pop
push
data16
test
lods
bound
sbbb
cltd
cmp
xor
dec
push
lret
pusha
inc
ret
cmp
int
ljmp
fs
mov
adc
pop
jnp
inc
push
dec
aam
addl
mov
cmp
xchg
mov
addr16
xor
and
loop
lock
mov
or
pop
and
popl
xchg
das
mov
pushf
icebp
and
pop
andl
or
mov
ja
ds
mov
mov
xchg
rorl
rclb
test
lock
wrmsr
cmp
dec
push
adc
push
loope
int3
incl
stos
mov
cwtl
scas
stc
cmp
pop
test
sbb
push
dec
shl
xchg
repnz
push
jns
mov
or
lret
push
rorl
in
sbb
xor
push
lahf
mov
inc
fildll
sbb
xor
jmp
cwtl
lods
lock
mulb
xchg
inc
xor
jmp
xchg
xor
mov
or
mov
jne
sbb
pop
and
sub
data16
loopne
stos
mov
xchg
lods
sub
inc
jl
in
iret
ja
inc
cltd
test
sub
mov
mov
imul
fstps
mov
rolb
movsl
jbe
mov
imul
sub
inc
popa
jle
shlb
das
loopne
or
fistl
push
mov
sbbb
test
hlt
movsb
je
test
cli
mov
sub
inc
cmp
nop
jae
shll
and
add
pop
cli
xchg
inc
mov
and
insl
cmovs
push
push
lret
negl
lahf
mov
and
movsl
fisubrs
and
dec
pop
ret
xor
roll
add
ja
dec
je
das
xor
gs
std
mov
stos
cmp
movb
stos
inc
fld
adc
xor
xor
aam
fisubl
hlt
adcl
and
adc
fisubrs
cwtl
mov
and
sbb
jns
push
into
jmp
aam
xor
imul
inc
xchg
mov
and
push
mov
ret
movsl
xchg
xchg
dec
dec
inc
nop
loopne
add
notb
call
pop
in
out
cmpsb
mov
cld
cmp
test
mov
test
lret
daa
cmp
or
adc
adc
inc
les
fldcw
scas
mov
sbb
jae
pop
shlb
popa
test
pop
cmovs
icebp
fnstsw
ljmp
int3
inc
jbe
dec
add
hlt
fsubrs
ss
clc
add
aaa
pushf
inc
rcl
mov
sub
fisubrs
fistps
out
inc
dec
mov
adc
test
xchg
jns
inc
and
repnz
rcr
scas
mov
lea
dec
test
out
sbbl
push
mov
cmc
mov
push
or
fcmovbe
stos
into
out
es
icebp
mov
mov
dec
pop
icebp
or
aaa
xchg
pop
lcallw
push
xchg
adc
repnz
cld
dec
push
jae
insb
fldcw
sub
adc
push
push
sahf
pop
adc
es
adc
aam
mov
or
push
pop
icebp
shl
test
push
pop
clc
add
loopne
pop
add
xor
fcmovne
jmp
les
xor
aas
mov
jmp
xchg
lods
lock
lcall
pop
add
mov
sbbb
aas
cltd
fisubrl
das
std
sub
and
xchg
push
sbb
loope
jo
js
xchg
and
sahf
scas
shlb
push
pop
or
xchg
add
mov
imul
mov
mov
and
xchg
cwtl
rorb
inc
xor
test
testb
pop
add
and
orl
adc
repnz
lods
shr
das
xchg
mov
inc
repz
cld
xor
shl
aas
adc
add
xchg
inc
jge
add
xchg
daa
inc
mov
adc
repz
movsl
mov
cmp
popa
xchg
dec
push
and
rcll
dec
xchg
lcall
mov
mov
addr16
data16
les
mov
push
push
fcomps
lds
arpl
inc
mov
outsb
add
push
mov
adc
sti
lcall
xor
movsl
mov
or
mov
push
sub
sbb
adc
ret
cmp
dec
shrl
into
fmul
jg
sub
incl
add
ja
add
dec
mov
sarb
mov
ret
lods
rorb
mov
les
mov
or
mov
sbb
push
imul
adcb
data16
es
jl
ds
cli
lret
and
xor
cmp
in
out
out
insl
mov
leave
aaa
xchg
mov
or
push
mov
fs
jnp
pop
jo
filds
iret
pop
xchg
jmp
out
in
or
xlat
sub
push
test
and
loop
das
inc
shrl
push
ds
or
sub
jne
loopne
test
mov
fwait
xchg
push
jbe
clc
outsb
pop
rep
push
xor
adc
dec
mov
pop
mov
cmpsb
pop
mov
cmp
bound
call
jle
mov
rol
jl
nop
inc
and
rcrl
adc
dec
flds
movsb
jg
dec
mov
bnd
aad
pop
pop
mov
lcall
cs
push
adc
jo
fbld
xor
add
lahf
push
and
test
xor
mov
arpl
xchg
push
pop
sbb
pop
fwait
sti
call
iret
sub
ret
rorb
std
lds
test
mov
repz
xor
jle
push
cmpsl
cmp
pop
jne
adc
sbb
daa
loope
fisubrl
scas
lahf
cmp
pop
in
push
or
pop
aad
lods
jns
xchg
push
mov
mov
imul
add
push
jp
mov
mov
jns
std
loopw
sbb
movsl
dec
ret
lods
ja
mov
xchg
setb
add
sub
divb
aaa
add
out
jb
lods
ljmp
push
sahf
push
shlb
loop
ljmp
js
cltd
mov
pop
cld
xchg
mov
xor
push
mov
out
xor
pop
xchg
leave
or
sub
inc
out
sub
inc
jg
adc
pop
imul
add
inc
and
xor
sub
xchg
and
and
fisubs
push
sbb
cmpsb
adc
sti
insb
push
add
rclb
rcll
mov
sub
inc
jnp
fwait
mov
pop
lret
jb
or
dec
cmp
aam
sbb
sub
mov
add
sbb
fsub
sub
fnstcw
aad
es
adc
and
xor
lcall
bound
cmp
in
sahf
lock
and
push
fwait
add
popl
mov
mov
inc
cmp
cmpsb
repz
sbb
mov
mov
mov
ljmp
jb
scas
inc
in
scas
arpl
nop
lods
adc
mov
ret
jae
stos
jecxz
pop
jae
jns
jle
pusha
inc
mov
inc
ja
and
mov
jae
pop
sub
push
shlb
inc
sahf
mov
jmp
je
aad
jnp
sahf
jmp
jge
sub
in
push
xchg
aaa
gs
imul
sub
shrb
xchg
or
inc
mov
add
shrb
fists
push
mov
push
jmp
es
push
cmc
mov
push
gs
jae
scas
loop
mov
cli
cwtl
in
xor
dec
lds
inc
ljmp
mov
bound
ficoms
inc
cmp
xchg
xchg
jl
mov
pop
or
push
and
dec
arpl
icebp
int3
mov
pop
popl
sub
bound
jmp
movsb
fmul
je
mov
dec
fs
jmp
movsb
fistpll
loop
push
xchg
sub
ss
out
fsubl
sub
clc
repz
and
push
and
fisttps
fiadds
push
push
shll
out
xchg
lds
sub
pop
stos
outsl
mov
cltd
bound
xchg
es
push
lret
ljmp
int3
addl
fcomps
movsb
adc
stos
out
ret
aam
and
sbb
testl
icebp
sbb
shlb
mov
push
cmp
pop
inc
push
and
hlt
or
loope
stos
xor
mov
pop
mov
or
cmp
cli
std
xor
sbb
fsubrs
je
jmp
iret
lods
sbb
outsl
xor
jp
in
mov
dec
jge
jl
mov
leave
sti
dec
scas
cmp
xor
xchg
stos
imul
int3
xchg
lret
sub
and
inc
out
jmp
test
add
fwait
mov
daa
or
xchg
jl
adcb
lret
cmc
outsl
sahf
or
std
cld
jl
cmp
xchg
imul
ja
lds
xor
sahf
jo
addr16
add
xchg
test
adc
out
or
dec
and
cltd
pop
add
fwait
out
test
imul
add
addr16
inc
mov
add
sbb
leave
pop
xor
adc
jmp
and
mov
inc
pop
out
or
pushw
and
clc
push
sub
lcall
das
mov
push
cmpsb
mov
into
adc
add
cmp
adc
dec
cld
fld1
mov
hlt
data16
shll
add
add
xchg
pop
fsubl
out
imul
mov
push
xor
mov
aad
rcr
stos
mov
sbb
gs
adc
test
sub
ljmp
test
es
ret
xchg
popa
push
sahf
movsl
add
lret
insb
mov
and
pop
jnp
popf
pop
or
jg
movsl
mov
push
ss
mov
insl
jecxz
or
dec
pop
in
lds
mov
mov
mov
repnz
lret
mov
cld
adc
mov
fs
or
les
mov
idiv
pop
daa
fld
xor
bound
lods
xor
jns
enter
mov
sub
js
outsb
jge
mov
mov
minps
mov
shlb
adc
mov
xchg
scas
aam
rcrl
mov
xchg
lahf
and
mov
or
movd
mov
and
lock
loope
cmc
mov
inc
and
pop
rolb
les
or
pusha
sbb
ljmp
xchg
leave
cs
daa
into
cltd
shlb
adc
int3
add
dec
push
xchg
insl
adc
mov
adc
xchg
out
push
push
fdivr
test
xchg
loopne
lock
nop
mov
in
fidivl
and
or
adc
lock
mov
xchg
data16
sbb
mov
in
out
je
out
cmp
movsb
lea
sbb
sbb
aad
out
sbb
lret
mov
ds
cmp
scas
cld
leave
sarl
mov
pushf
mov
adc
shr
fcoml
fdivs
sub
cmp
push
pusha
bound
jp
cmpsl
jnp
sti
fwait
push
mov
xor
sub
fcoml
ss
sub
rolb
jne
add
fsubs
aad
daa
fidivl
int
scas
ss
inc
pop
cmp
shlb
pop
mov
dec
repnz
lods
out
ret
add
in
and
and
push
xor
aam
test
push
pusha
push
int3
aad
mov
sti
int3
xlat
mul
jg
stos
lds
sub
fists
push
dec
int3
mov
adc
push
or
pop
stc
push
outsl
adc
popf
mov
mov
movsl
inc
cwtl
or
test
mov
inc
jns
sbb
pop
xlat
cmp
or
jmp
xchg
mul
cmc
cld
or
fwait
sarl
or
and
jb
cld
testb
and
loope
mov
jmp
jg
cmpb
pusha
dec
add
add
es
fldcw
mov
push
jae
std
outsb
test
sub
int3
inc
jle
mov
xlat
imull
push
cmpsb
aam
cmp
test
ret
testl
mov
xchg
aad
mov
sbb
jo
fmull
insb
add
sbb
iret
outsb
push
outsl
adc
shll
xchg
lahf
xchg
xor
add
pop
inc
scas
mov
sub
int
aas
jg
add
push
inc
xchg
xor
mov
in
mov
aam
clc
xor
int
aad
jbe
cwtl
popl
push
and
jle
movsb
push
or
mov
push
pusha
adc
dec
out
sbb
push
mov
mov
inc
ffree
shr
or
scas
int
cli
mov
mov
inc
jno
lods
imul
lds
pop
je
mov
gs
cmpsl
or
or
enter
cmc
lret
add
sbb
cmpxchg
xchg
leave
cmp
mov
or
out
mov
test
cs
dec
mov
mov
fsubs
add
int
repz
imul
jge
and
adc
mov
mov
fcomi
loop
xchg
lret
sub
cmpb
out
jle
int3
mov
popf
dec
add
fisubl
cld
fcomps
inc
rorl
xor
push
cmp
mov
jne
ror
movsl
xchg
jg
sub
lret
test
mov
js
add
pop
and
mov
mov
and
inc
or
and
inc
test
inc
sbb
into
mov
adc
mov
dec
mov
ds
mov
int3
insb
adc
out
pop
dec
cld
mov
inc
adc
adc
mov
movsb
rorl
ss
out
xor
adc
sar
and
mov
jle
ja
cmp
pop
or
or
out
stc
or
xor
into
outsl
pop
clc
cli
lcall
adc
lods
pop
adc
fisubl
lea
fdivl
ja
xor
or
xlat
into
xchg
inc
or
push
in
and
sub
push
repz
mov
mov
xor
push
into
xor
xchg
pop
decb
test
int3
sbb
cltd
dec
sti
adc
leave
mov
push
gs
fists
pushf
inc
stos
fisubl
orb
xchg
movsb
mov
lret
dec
test
cmp
mov
inc
lds
jmp
ss
add
movsl
dec
test
xor
push
mov
pop
std
mov
jb
push
mov
in
and
out
fs
nop
push
mov
insb
mov
nop
movhps
frstor
ret
pop
cmp
in
lcall
call
test
fisttpl
repnz
push
stos
dec
dec
punpckhdq
xor
mov
ficoms
or
ret
sbb
leave
xchg
xchg
mov
gs
sbb
mov
sahf
rcrl
jbe
decb
adc
scas
adc
cmc
mov
cld
mov
in
and
repz
lahf
jne
mov
cmc
add
sub
add
addr16
aas
shlb
mov
insl
out
mov
xchg
imul
jp
mov
imul
loope
pop
sahf
fwait
or
mov
dec
jnp
inc
push
adc
inc
pop
shll
or
lods
push
dec
push
aas
stc
mov
das
sub
xchg
jae
xchg
jg
cmp
and
sub
ds
out
dec
add
dec
and
ja
mov
adc
sub
imul
jbe
pop
divl
xchg
fimull
xor
fidivl
mov
xchg
pop
sub
xorb
iret
xor
pop
cmpsb
mov
fstpl
inc
adc
sub
fucomip
sbb
notrack
cmp
cmp
cmpsl
shll
iret
arpl
ss
es
cmp
sbb
push
popa
pushf
std
ss
jl
push
mov
lods
in
mov
icebp
fsubl
sarb
xchg
mov
rol
xchg
mov
dec
xlat
rcrb
fs
add
int3
and
in
es
rcll
ficompl
out
cli
push
outsl
bound
test
push
inc
imulb
jne
shll
idivl
jle
push
nop
cmp
pushf
add
hlt
lret
push
cld
push
xchg
push
aaa
nop
andl
cmp
loopne
mov
dec
xchg
repz
xchg
dec
dec
xchg
out
icebp
adc
sarl
mov
je
sub
jb
ret
dec
outsb
fs
test
ds
loope
xor
aad
stos
adc
cs
call
in
jns
cld
jg
inc
sbb
jmp
mov
icebp
mov
jmp
pushl
mov
or
push
push
stos
mov
stos
pushf
ficompl
mov
adc
out
push
push
or
or
adc
popa
xchg
and
fidivs
xchg
fs
mov
imul
cs
sbb
mov
inc
loopne
mov
pop
and
loop
cmpsb
les
iret
lcall
into
xor
and
loopne
lcall
or
je
jae
add
jae
popa
mov
hlt
inc
jae
mov
mov
mov
pop
shll
cmpl
pop
adc
add
dec
xlat
repnz
pushf
bound
or
push
pop
pop
orl
sahf
fsubrl
mov
ljmp
imul
test
pop
dec
pop
jmp
shlb
pop
pop
or
push
sbb
push
mov
lds
mov
or
xchg
fcoml
mov
xlat
dec
cli
leave
fs
fcomps
and
adc
ficomps
xlat
into
push
mov
pop
lods
or
sub
or
das
pop
outsl
push
xor
loope
cs
lret
mov
mov
outsl
push
xchg
jg
lret
pop
test
pushf
sbb
push
fistpll
jg
and
xorb
loopne
or
dec
sub
sbb
add
sbb
sahf
xchg
push
call
mov
sti
ja
sbb
xchg
inc
test
insb
out
rorb
push
or
into
fsub
int3
lret
and
pop
lods
push
sbb
adc
xor
cs
cmp
add
roll
cmp
jb
pop
jg
sbb
aaa
cmp
clc
into
das
es
jg
shr
rcrb
aam
js
xor
test
adc
ret
fstpl
mov
jmp
and
xor
pop
and
ja
mov
sbb
xorl
cmp
mov
add
fwait
jo
xlat
sbb
sbb
fbld
sub
into
fstl
fisttps
mov
insl
lea
pop
enter
iret
stc
repnz
jae
pop
mov
and
incl
or
loope
xor
je
pop
mov
xor
inc
jecxz
jle
shlb
xchg
mov
sbb
stos
out
xchg
ljmp
test
push
dec
inc
cmp
test
lahf
pushf
in
dec
sbb
add
out
bound
fstpl
xlat
orl
int3
dec
push
inc
cs
dec
inc
aam
fdivs
jl
inc
notl
push
iret
inc
sbb
je
shl
push
jmp
push
inc
icebp
outsl
sub
sti
repnz
sub
enter
std
push
arpl
addr16
lods
imul
dec
sbb
push
test
mov
or
push
jle
add
lock
lods
mov
sbb
xlat
jl
adc
sbb
mov
add
out
add
jne
fnstsw
jae
cmpsb
scas
scas
sub
fisttps
jp
mov
into
jbe
push
mov
test
pop
loop
sbbl
scas
pop
mov
mov
dec
fs
lcall
add
stos
dec
ja
ss
mov
push
adc
pop
jp
dec
jo
js
out
imul
xchg
push
sub
cld
out
sub
fstpt
in
xchg
and
mov
lds
mov
loopne
cmp
mov
dec
int3
lods
in
cld
mov
and
push
push
inc
imul
aas
movl
scas
jl
xchg
sar
ljmp
mov
xor
jne
lahf
push
cmp
es
jbe
loop
fdivs
cs
lcall
pop
pop
mov
add
into
and
xchg
inc
in
int3
inc
mov
mov
or
or
leave
cmp
fcomps
lahf
xchg
dec
xor
add
ja
dec
jmp
stos
popf
pop
push
mov
ret
ret
ds
fwait
pop
test
jle
push
jns
nop
sub
cltd
js
adc
xchg
data16
xchg
imul
xor
lods
add
adc
xorl
test
mov
adc
mov
jge
cli
push
lds
call
pop
push
call
aaa
sub
loop
out
aad
xor
push
push
jge
mov
mov
aaa
negb
jno
sbb
dec
outsb
ljmp
sub
pop
out
adc
cmc
push
incl
lock
and
push
aad
pushf
mov
or
popf
bound
xor
fldcw
insl
in
in
xchg
cmpsl
enter
push
xchg
pop
add
jecxz
sbb
dec
loopne
inc
fistps
aas
cmp
pushf
repz
push
cmp
xor
sub
fistpl
mov
sub
repnz
pop
mov
lea
je
lcall
push
mov
and
int3
add
leave
ret
xchg
sti
mov
fcompl
andl
outsl
cmc
addr16
or
sub
jmp
xor
lret
mov
and
xchg
addr16
loope
adc
pop
cmp
sti
cmp
outsb
js
dec
adc
mov
shlb
xor
inc
jns
dec
mov
mov
lea
aaa
ja
ret
pop
adc
jo
leave
mov
add
in
or
dec
jmp
xor
lret
sub
mov
jns
and
adc
cmp
js
jle
jo
dec
pop
jmp
cwtl
les
push
pop
jmp
cs
or
ret
inc
std
inc
insl
daa
dec
int
push
mov
cmp
mov
cmp
icebp
cli
addl
push
lods
stc
lret
and
pop
fsubrs
pop
mov
inc
ret
and
std
arpl
mull
inc
adc
push
add
ret
movsb
pop
lods
jae
stc
pop
adc
adc
es
dec
mov
add
sbb
fldl
inc
dec
jg
and
out
loopne
imul
add
xchg
adc
or
outsb
sub
and
mov
push
clc
inc
imul
sbb
jno
push
loop
aad
inc
lock
aas
fmuls
daa
ret
add
adc
and
out
add
cli
pop
pop
test
movsb
dec
push
sbb
insl
clc
mov
stc
fs
jmp
xor
iret
sti
das
aam
jo
and
mov
test
add
scas
repz
add
sbb
ret
dec
jnp
out
xlat
mov
std
jl
pop
xchg
sbb
adc
insb
mov
mov
or
xor
ds
jp
je
ret
clc
xchg
cmp
push
and
lock
popa
std
fcoms
adc
jmp
pop
call
movsb
or
jmp
push
bound
adc
mov
popf
adc
cltd
lock
fists
mov
movsb
jl
pop
out
or
jb
cmp
lock
jns
jl
das
call
sahf
xchg
xchg
mov
mov
add
mov
aam
cmpb
sahf
add
mov
pop
mov
and
repnz
lea
out
jb
ljmp
icebp
leave
cmp
adcb
xor
mov
push
daa
punpckldq
pop
pop
sub
jl
jb
jmp
cmpsl
std
in
jbe
jg
jns
dec
mov
popf
adc
pop
ja
inc
dec
adc
cmp
call
imul
les
cltd
mov
xor
xchg
in
div
push
jl
lods
aas
addb
push
shlb
lods
pop
inc
popf
pop
lea
stos
icebp
inc
sbb
cmpsl
int3
roll
mov
xor
imul
sahf
mov
iret
lret
imul
or
ss
loopne
xor
xchg
inc
rorl
ret
fs
jbe
gs
cmp
mov
mov
mov
cmc
push
in
mov
add
cmp
sarb
cmp
xchg
test
dec
out
mov
mov
shll
fisttpl
lods
mov
push
sahf
push
ficomps
mov
adc
test
lcall
jo
sahf
pop
outsl
fwait
xor
xchg
in
sbb
call
xchg
push
inc
mov
mov
xchg
shll
xchg
lods
int3
adc
dec
xchg
movsb
dec
icebp
push
xor
loop
or
das
xor
jmp
stos
aad
sub
mov
xor
imul
xor
sub
pop
sahf
hlt
fsubrs
enter
daa
mov
and
icebp
xor
xchg
jae
mov
js
add
inc
fs
sbb
mov
sbb
pop
jo
insl
mov
lcall
stos
xchg
imulb
and
sti
cmp
mov
sub
sti
add
push
leave
inc
cli
arpl
sbb
xor
ja
ret
sub
out
push
aaa
inc
loope
mov
xchg
sbb
mov
push
ljmp
pop
mov
cmp
jbe
and
iret
inc
add
mov
sbb
push
testb
in
pop
mov
int
adc
test
orl
test
push
add
push
mov
int
out
mov
pushf
pop
jecxz
or
jmp
stos
inc
call
xor
outsl
push
inc
dec
jbe
inc
pop
js
cmpsl
dec
icebp
mov
jg
or
mov
sbb
jae
stc
xchg
adc
push
cmpsl
mov
in
aad
xor
clc
mov
mov
and
xchg
fs
sahf
inc
ficoml
push
adc
inc
loope
mov
xor
fdiv
mov
mov
lods
push
hlt
scas
or
imul
sub
mov
imul
pop
das
and
daa
test
dec
push
dec
testb
xchg
jne
lods
dec
xchg
cs
pop
push
push
and
jl
and
and
out
push
or
mov
pop
pop
lret
fs
pop
cmpl
add
or
cs
mov
push
mov
pop
call
push
nop
cmc
lds
cmpsb
mov
ds
aas
loope
addr16
and
bound
ffree
jne
push
jmp
or
inc
and
cmp
aad
mov
test
xchg
xchg
sti
jno
or
getsec
ret
mov
cmp
push
xchg
std
into
push
adc
adc
cs
scas
add
inc
sti
mov
fidivrs
sti
popf
rolb
lds
shll
jp
inc
sub
sbb
cmp
test
mov
addl
lret
xor
mov
inc
or
mov
mov
adc
add
mov
adc
lret
xor
fisubl
sbb
push
aad
addb
mov
enter
out
adc
dec
inc
imul
pop
test
xchg
dec
cs
rcr
sahf
out
sub
xor
inc
fidivrs
iret
out
jns
sti
into
test
lahf
mov
cmp
push
mov
xchg
add
fisttpl
pop
in
popa
loope
rcll
cmpsl
fsubs
sbb
adc
inc
mov
les
repnz
push
jae
or
dec
and
inc
sti
fbstp
scas
mov
lods
jbe
mov
iret
add
scas
pop
pusha
push
dec
dec
jl
inc
test
mov
repnz
rcll
cld
sub
pop
cmp
mov
and
cmp
data16
sub
and
adc
add
push
leave
ss
rorb
and
dec
mov
cmp
xchg
outsb
popa
mov
xchg
lods
jecxz
les
lods
pop
jecxz
cld
pop
cmpsl
xchg
mov
lcall
sbb
sahf
sbb
mov
pop
mov
jbe
fsubrs
mov
loope
add
dec
xchg
xchg
adc
push
xchg
and
sub
jl
mov
leave
into
subb
cmp
dec
sub
arpl
std
std
aaa
sub
sub
gs
jl
push
push
cmova
stos
mov
jmp
clc
pop
cmp
pop
and
loopne
dec
repnz
jle
xor
lods
fisubrl
jno
dec
int3
xchg
addr16
mov
shrb
push
rcll
in
rclb
push
xor
sub
mov
cmp
outsb
loope
adc
cltd
stos
ret
and
jle
int3
jg
clc
jle
pop
bound
dec
inc
das
int
xchg
mov
cltd
cwtl
pop
cmpsl
mov
shlb
inc
repz
mov
mov
setl
xor
cmp
push
or
push
int
scas
dec
cmp
ja
jmp
or
xlat
sbb
mov
push
aas
cmpsl
jns
js
jp
dec
out
in
cmp
push
pop
scas
mov
and
sub
loop
pop
and
push
dec
add
int3
orb
inc
push
mov
mov
scas
or
xorl
leave
cwtl
sbb
outsb
adcl
pop
xor
scas
out
lods
imul
jo
sub
inc
call
testl
mov
inc
mov
notb
rorl
stos
mov
and
pop
fistl
and
mov
mov
or
ja
cmpsl
out
and
sahf
les
sbb
ficompl
inc
jecxz
add
ja
sub
out
mov
stc
dec
ret
dec
pop
out
cld
dec
enter
es
mov
sub
lcall
inc
pop
jmp
jp
clc
sbb
addb
lret
or
jns
adc
cmpsb
cltd
rolb
mov
xor
push
inc
sub
mov
xchg
fsubs
sbb
hlt
addr16
sti
cwtl
push
test
sbb
js
pop
dec
rcll
xor
repz
and
cltd
popa
aad
rol
in
test
lret
jle
repz
add
aad
jnp
inc
sbb
fmul
add
arpl
or
pop
imul
subb
cmpsl
add
fs
pop
cmpl
divb
lea
movsl
fldt
push
rolb
into
and
dec
xchg
push
fstps
dec
orb
xchg
cmp
enter
out
movsl
push
push
jl
pop
add
dec
jmp
cltd
loope
mov
push
aam
lahf
fldt
aas
add
mov
push
subl
sti
pop
inc
mov
xchg
xchg
mov
xor
add
shll
jecxz
jne
adc
ja
mov
adc
lea
push
enter
or
les
insb
inc
std
and
ss
pop
mov
xchg
lret
push
and
clc
insb
mov
lahf
lret
mov
shll
fwait
sti
and
stc
add
and
ja
cli
or
cmp
les
xor
cmp
push
cmp
lock
push
or
jb
das
mov
sub
sub
xchg
xlat
arpl
lcall
je
fisubrl
cmpsl
test
adc
mov
pushf
jecxz
xorl
aam
cmp
in
shl
mov
mov
cli
out
sub
adc
and
push
fs
mov
sub
push
int3
add
fnstsw
dec
adc
outsl
rorl
jno
cmc
ds
shl
add
xchg
push
lea
inc
dec
imul
ja,pt
je
adc
jbe
std
lods
lea
pop
out
rep
stos
mov
repnz
mov
cld
cmp
pushf
sub
aas
jecxz
jns
ds
xchg
adc
iret
pop
xchg
xchg
ss
out
mov
rol
push
bnd
push
jb
pushf
js
or
pop
into
outsl
jg
sub
xor
shl
jbe
loopne
subl
rcrl
jge
iret
fisttps
mov
bnd
xchg
jle
vsubss
ret
jo
xlat
out
out
sub
cmp
clc
stos
mov
xchg
fs
cmp
imul
lods
fdivs
mov
and
jno
adc
mov
sbb
mov
push
sbb
and
lods
adc
in
and
nop
sbb
and
ret
nop
imul
pop
in
enter
mov
loope
xor
imul
out
std
ret
loop
mov
sti
inc
cld
mov
or
dec
sbb
popa
xchg
test
add
mov
add
pusha
xchg
push
insb
sub
leave
jae
jae
jb
mov
lock
xor
cmpsb
bound
push
mov
mov
push
ret
dec
movsl
add
in
mov
cld
fisttps
inc
cs
gs
ss
jb
pop
add
aaa
cmc
mov
andl
nop
fwait
cltd
les
jns
in
and
mov
pop
xchg
punpcklbw
scas
cmp
ljmp
mov
orb
mov
jge
sub
add
fldcw
inc
icebp
mov
cmp
jnp
jg
out
xchg
decl
pop
inc
cld
pop
pop
push
cmpsb
xor
repnz
adc
jae
into
stos
movsb
lcall
mov
push
sub
mov
int
xlat
jecxz
leave
push
and
es
loop
mov
pusha
sub
in
js
test
jne
inc
jmp
xchg
and
pop
lds
pushf
sahf
rolb
fs
fcmovb
cvtps2pi
dec
sub
dec
imul
shl
adcl
xchg
leave
pop
inc
push
jb
cmp
cmp
in
xchg
popf
fisttpll
xorl
imul
mov
add
ret
jle
fcomip
adc
and
sub
cmpsl
scas
push
and
dec
push
push
aaa
or
test
cmp
mov
mov
cltd
fwait
pop
cmpsl
mov
fwait
repz
push
mov
out
sub
push
mov
sbb
neg
je
add
mov
mov
scas
loope
loope
hlt
outsl
mov
adc
stos
pop
sbb
adc
fidivl
pop
inc
jg
data16
test
lods
xchg
xor
xchg
fwait
push
cmp
cmpsb
cmp
cltd
xchg
xor
sub
xchg
add
mov
outsl
mov
lock
repnz
scas
push
mov
cmp
addr16
inc
addr16
dec
cmp
jno
and
cltd
pop
add
test
stos
sbbl
sub
shl
mov
xchg
ja
inc
mov
xlat
divl
dec
cmpsb
xchg
xor
ljmp
dec
nop
aaa
add
insb
dec
insb
xchg
ret
ljmp
or
dec
les
in
fs
add
test
subl
xchg
mov
fildll
sbb
sub
mov
xchg
sbb
mov
push
mov
fbstp
jae
add
out
nop
imul
mov
ds
pop
cmp
aam
pop
pop
out
mov
cmpsb
inc
das
call
mov
subb
jno
pop
mov
or
xor
lock
loopne
popa
sub
ja
rol
dec
xlat
fwait
movsb
adc
cmp
adc
je
xor
sbb
sti
push
sbb
dec
lret
sarl
push
sbb
lea
push
shrb
pcmpgtw
test
gs
xchg
sbb
mov
dec
push
das
jge
xchg
inc
push
sbb
fadds
dec
jb
sbb
push
sahf
popf
negb
cmp
mov
push
sbb
pop
jnp
inc
das
jno
pop
nop
imull
mov
pop
adc
pop
fs
lock
sti
push
icebp
push
cwtl
jnp
dec
inc
fs
lds
leave
int
int
out
xchg
jp
sbb
movb
cmp
popa
sbb
xchg
jle
sbb
sar
sbbl
mov
jle
lret
cmp
std
xor
mov
outsl
in
mov
fs
mov
leave
mov
iret
test
adc
dec
or
nop
lock
in
int
cmove
cld
rolb
outsl
imul
in
stc
and
sbb
ljmp
xlat
sub
mov
jl
imul
gs
nop
aas
mov
les
mov
fsub
push
subl
xchg
mov
cmp
xchg
lahf
pusha
roll
nop
in
ljmp
cmp
cmp
fbstp
arpl
int3
outsb
jo
aam
xlat
push
sahf
sbb
push
mov
mov
pop
and
movsb
push
mov
ss
je
daa
jns
mov
adc
roll
cmpsl
adc
scas
mov
fmuls
lds
xor
aas
xchg
mov
out
loopne
jbe
or
loope
xor
mov
lret
imul
push
movsl
into
add
jmp
xor
ret
popf
out
push
mov
inc
pushf
lds
je
cmpsl
xor
adc
std
push
hlt
fistps
jp
jmp
je
mov
add
andl
sub
call
fs
mov
cmpsl
inc
pop
sti
cmp
fnsave
push
jno
pop
aaa
in
dec
mov
mov
dec
dec
dec
xlat
pop
xchg
mov
pop
xor
mov
inc
repnz
cmp
sub
sbb
or
xchg
pop
and
xor
jle
adc
lds
rcr
addr16
int3
and
jge
and
jge
lret
test
incb
pop
jmp
in
sbb
jle
inc
mov
in
imul
mov
mov
mov
hlt
mov
sbb
pop
cmp
pop
mov
into
cmp
inc
mov
xchg
ja
sbb
or
push
cli
jge
addr16
call
ja
call
movsl
inc
and
and
shrl
imul
ja
fdivl
lods
aam
dec
mov
mov
dec
push
mov
dec
in
xlat
jp
lock
sbb
test
push
jbe
imull
dec
bound
adc
fildl
adc
int
lods
mov
or
fiadds
mov
ret
inc
loopne
cltd
and
loope
mov
loope
out
mov
movzbl
adc
adc
sbb
mov
outsb
iret
jnp
cltd
cmp
mov
faddl
ljmp
je
pop
xor
mov
inc
dec
ret
push
mov
repnz
bound
dec
popf
and
loope
loope
add
int
push
stc
mov
xchg
mov
mov
cld
cmp
and
inc
stc
and
cmp
fucomip
out
ret
inc
jge
lock
dec
xchg
aad
mov
or
test
dec
sub
stos
leave
pusha
xor
mov
xchg
dec
test
and
ret
je
idiv
sbb
push
lcall
sbb
push
test
sub
movsl
pop
sbb
insb
adc
push
jmp
push
pop
inc
mov
in
leave
cwtl
xor
xlat
popa
adc
sub
push
lret
repnz
aam
xor
mov
mov
enter
insb
out
sbb
int3
cmp
hlt
test
pop
into
out
cmp
insb
arpl
adc
outsb
jno
xor
adc
pushf
gs
div
jp
dec
daa
push
and
rcr
sbb
push
mov
ss
mov
aad
mov
pop
adcb
cmp
mov
pop
fsubrs
lods
or
sarb
or
dec
mov
mov
stos
sbb
jl
test
add
mov
sub
jge
push
cmpsl
dec
inc
sahf
jl
ja
pushf
dec
push
mov
addl
xchg
xor
fildll
push
jecxz
stos
andnps
mul
pusha
jecxz
jnp
add
std
or
out
lods
insb
imul
or
dec
pop
jno
cmpsb
mov
and
jno
lcall
int3
aam
scas
push
repz
sarb
sub
cmp
cltd
push
cmp
sub
adc
test
sub
call
sbb
add
out
ss
cmp
sub
popf
pop
cmp
xor
jno
js
out
stos
mov
inc
xchg
mov
mov
pop
dec
out
gs
mov
xchg
gs
dec
inc
sub
mov
into
xor
sbb
insl
pop
out
in
dec
or
rcrb
jmp
jno
inc
jmp
insl
pusha
and
testb
lock
jg
hlt
pop
add
jmp
mov
shll
sub
pushf
stc
push
mov
fildl
mov
or
loope
jg
ljmp
cmp
or
daa
adc
mov
sub
dec
dec
xchg
jne
adc
fbld
lret
lods
aas
push
loop
dec
insl
jle
mov
shrb
dec
shl
xabort
out
mov
adc
in
and
pop
ljmp
shlb
je
popf
dec
loop
mov
dec
shl
dec
cmp
icebp
xchg
ret
and
ret
pushf
lock
jmp
lods
dec
fsubrl
dec
cltd
imul
rcr
ret
pop
addr16
adc
inc
jo
outsb
cmp
dec
clc
and
shll
sub
pop
cmpsb
mov
lods
testb
loope
popf
sti
xchg
out
and
jmp
bound
mov
out
outsb
das
shll
int3
mov
push
mov
push
mov
or
cmp
inc
sti
mov
adc
cltd
sbb
popa
and
and
loop
das
roll
sahf
cmp
dec
xchg
call
inc
hlt
fcmovne
insl
sbb
add
adc
push
call
divb
fcoms
or
cmp
inc
sarl
imul
mov
adc
push
xor
fldl
scas
inc
mov
ljmp
jbe
movsl
insl
in
lods
jl
jns
adc
inc
jne
xchg
icebp
xorl
sub
inc
fisttps
sti
adc
xor
jecxz
mov
sarb
sub
sub
fcoms
sar
sahf
pop
bound
out
into
jp
xchg
xor
pop
dec
cmpsl
xor
out
or
sub
adc
xor
popf
or
test
clc
mov
push
outsb
outsl
mov
jne
and
jb
or
popa
cltd
dec
shlb
ja
push
sbb
jns
adc
in
mov
bound
pop
shlb
mov
jge
xor
or
repz
sbb
addr16
arpl
sbb
or
inc
inc
lcall
and
cmp
leave
or
and
icebp
adc
scas
xorl
rclb
jnp
dec
xchg
dec
jle
pop
adc
mov
ret
aad
push
mov
mov
cmc
jmp
enter
es
outsl
test
push
pop
in
lea
mov
sbbb
mov
inc
adc
mov
add
fimull
jp
jp
xor
shlb
lea
jg
out
movsb
stc
xchg
test
dec
mov
aad
in
adc
aas
out
pop
xchg
cmp
dec
outsl
jecxz
iret
dec
movsl
dec
jecxz
in
mov
and
leave
xlat
imul
xor
nop
jne
or
inc
mov
pop
or
sub
aaa
idivl
push
push
jns
hlt
cmc
in
ja
rcr
aaa
gs
aad
test
ds
jl
jne
das
fdivp
vpunpckhwd
mov
je
sbb
push
push
adc
xchg
hlt
aas
les
sbb
nop
adc
cs
push
rorl
dec
insl
int
rol
outsb
cmpsb
cltd
sub
push
xor
lds
inc
or
jp
shlb
xchg
emms
out
mov
jge
mov
push
test
fmuls
pop
idivl
jno
fistps
shrl
and
movsb
movsl
xchg
out
xor
int3
aad
xchg
into
mov
shrb
push
movb
mov
leave
pop
sbb
ljmp
or
dec
adc
or
cli
xor
ret
xorps
loope
int
jge
sbbb
adc
jae
mov
sarl
mov
pushf
ja
dec
xchg
arpl
imul
clc
and
test
add
cli
jp
cmp
test
shll
xchg
adc
les
frstor
js
sub
in
sub
pop
cld
sbb
inc
repnz
add
jle
or
mov
arpl
popf
mov
pop
jne
push
stos
xchg
lods
into
add
mov
jmp
out
sahf
out
add
xchg
pop
and
fimull
imul
or
das
fdivr
fwait
pop
call
pop
pop
cmp
loopne
adc
cmp
mov
incl
inc
rcrl
ret
jae
sbb
sub
add
cmp
add
hlt
mov
mov
popa
or
lahf
aad
xchg
push
stos
sbb
sub
lea
mov
shrl
push
mov
xchg
mov
sbb
push
lods
call
imul
insl
mov
add
sbb
and
test
inc
ficomps
rcll
push
jle
and
movd
pop
push
cltd
mov
adc
jmp
popf
dec
push
lods
adc
pop
pop
sub
push
les
mov
and
push
push
cmp
fs
xchg
fistpll
xchg
cmp
ja
lcall
mov
mov
sbb
jb
mov
xchg
jb
cmc
out
sub
mov
ret
lods
ficomps
pusha
popf
jp
cmp
imul
into
daa
pop
mov
inc
pop
sub
cld
in
clc
aaa
adc
dec
subl
sub
jecxz
jb
leave
lcall
rolb
push
popf
or
adc
mov
mov
arpl
in
xchg
fisubs
add
mull
sub
sbbb
sbb
sub
xlat
mov
push
int3
repnz
pop
xchg
je
aas
lcall
fwait
adcb
imul
jmp
jl
cltd
shrl
cmp
pop
rorb
cmpsb
sub
lock
xchg
lcall
cli
mov
cmc
and
jnp
sbb
mov
xchg
lret
fldcw
sar
dec
xlat
push
mov
cmp
je
pop
jnp
out
data16
addl
xor
push
xor
xor
fnsave
stc
ret
mov
aaa
pop
and
push
xchg
dec
sahf
mov
shrl
sbb
push
cmp
sbb
mov
or
das
mov
add
and
and
jmp
nop
cwtl
xchg
repnz
xor
mov
cltd
and
push
pop
out
mov
ret
push
mov
in
lds
scas
cwtl
cmpl
cwtl
fisubrl
cmp
es
stos
in
mov
sub
mov
jge
mov
mov
ret
sbb
call
inc
jno
xorb
sub
sar
or
cmpsl
inc
leave
dec
mov
and
push
in
xor
nop
insb
push
mov
sbb
insl
push
in
pop
rorb
mov
inc
mov
and
cmc
into
loopne
std
mov
dec
stc
dec
and
imull
xor
and
shrb
add
mov
out
rcrl
mov
stos
lods
inc
les
lahf
mov
pop
inc
lahf
adc
add
and
in
stos
fdivrl
icebp
cmpsl
push
outsb
xor
push
sbb
std
adc
add
and
jns
xchg
scas
arpl
stos
mov
mov
inc
out
in
hlt
or
push
sub
fwait
cmpsl
out
int
xor
adc
mov
aaa
add
mov
inc
xchg
lods
std
pop
adc
cld
xchg
scas
out
sub
mov
sbb
sbb
mov
ja
mov
data16
int
sub
shll
cmp
mov
xor
mov
xchg
push
pusha
cmp
fwait
lds
int
xchg
adc
adc
pushl
dec
or
call
mov
push
inc
jbe
icebp
ljmp
sub
std
cmpsl
or
mov
jne
add
lock
imul
mov
pop
add
and
scas
fnsave
adc
mov
in
inc
clc
jne
pop
xor
jecxz
fiaddl
ret
scas
sub
xor
push
and
add
jno
mov
rclb
dec
pop
jb
repnz
fimuls
insb
in
add
jp
roll
and
pop
mov
pop
repz
insl
xchg
test
jne
ja
or
jge
data16
cmp
pop
ss
test
mov
popf
lods
push
call
bound
pop
jb
imull
aaa
sahf
jecxz
xchg
jge
cmp
push
loop
fdivl
enter
and
movsb
mov
dec
repnz
dec
xchg
decb
mov
lcall
jno
push
repz
aam
and
pop
sahf
pop
pop
inc
insl
cli
push
rcrl
clc
mov
int3
xchg
dec
mov
cmp
xstore-rng
cmpsl
test
stc
pop
invd
int
jae
sub
push
fsts
push
pusha
cld
ljmp
and
ret
leave
sbb
ljmp
jecxz
jb
push
jnp
jg
jl
cmp
jae
jae
inc
adc
dec
cmp
in
dec
scas
cltd
lret
xchg
mov
cwtl
mov
cmp
sbb
xchg
lods
xchg
outsl
mov
xchg
xchg
lock
push
jmp
cmpb
mov
lods
sbb
scas
add
es
cld
nop
nop
sbbb
xchg
pop
add
dec
cmpsl
les
leave
popa
mov
ljmp
aad
out
cs
ds
push
sbb
lahf
xchg
jo
sub
xor
sbb
add
jp
pop
sbb
fimuls
insb
in
adc
or
pushf
inc
call
mov
cltd
sub
mov
fs
jl
popa
add
jns
loopne
xchg
add
xchg
incl
out
gs
sbb
stos
dec
mov
subl
arpl
hlt
sbb
fstl
imul
jbe
push
mov
sbb
mov
sarb
cmc
out
mov
arpl
rsm
lret
out
rcrb
rcrl
jbe
inc
gs
sub
in
add
je
adc
insl
inc
jecxz
int
push
sbb
jnp
sahf
and
xchg
jno
imul
icebp
inc
cwtl
sbb
jmp
inc
sbb
jne
pop
fs
push
sbb
enter
icebp
xchg
cmp
xor
ds
shl
ljmp
or
xor
add
imulb
call
push
imul
repnz
repz
xchg
clc
in
mov
sbb
repnz
rclb
aad
rolb
fists
mov
lret
addr16
mov
outsl
cmpsl
dec
mov
popa
xchg
and
push
fcomp
cmpl
mov
je
loop
outsb
jmp
or
lret
incl
inc
adc
xor
push
movsl
xchg
test
arpl
cli
push
push
popf
sar
dec
fsubs
popa
add
pop
pop
dec
add
jle
xor
imul
out
jle
pop
aam
bound
dec
in
push
pop
sbb
fidivrs
xlat
or
js
pop
cmpsb
push
test
pushf
lahf
std
rol
sub
jle
sahf
lcall
add
stc
scas
js
xchg
test
or
and
and
ret
mov
xchg
ret
add
push
aam
xchg
in
cmpb
outsl
jns
pop
fisubl
sti
cwtl
adc
xchg
xchg
xchg
cmp
inc
movsl
mov
adc
mov
ret
dec
je
or
dec
mov
in
mov
stos
inc
loop
inc
popl
cli
xlat
mov
out
aam
pushf
sarb
stos
inc
lret
ret
ret
or
enter
testl
xchg
mov
mov
mov
imul
fisttps
mov
ret
or
daa
test
gs
cmp
inc
cli
mov
pop
xchg
xchg
mov
xor
inc
test
sti
js
fdivrl
add
or
dec
enter
notb
xlat
movsb
inc
xor
inc
push
jnp
dec
adc
aad
sub
aam
xchg
pop
push
xor
iret
mov
mov
ljmp
push
jae
xchg
stos
adc
dec
dec
hlt
adc
or
lock
pop
lods
pusha
xlat
dec
xor
sub
dec
mov
and
scas
in
sbb
std
fdiv
mov
inc
cwtl
mov
fstpl
mov
pop
lret
out
mov
mov
repnz
jo
push
xor
cli
clc
xchg
xorb
mov
ja
int
pushf
ds
into
push
pusha
pop
sub
inc
mov
aad
test
andb
lods
sub
add
dec
stc
add
cli
das
or
mov
loope
ss
mov
out
dec
xlat
mov
test
mov
test
ja
lods
adc
push
sub
in
jmp
mov
pushf
stc
mov
and
fcmovnb
xor
roll
dec
in
lea
stos
test
xchg
cmp
mov
rcr
ficoml
add
pop
cmp
nop
lcall
es
mov
stos
les
es
push
inc
mov
sahf
pop
mov
mov
mov
in
and
push
or
push
sub
lea
cs
lret
pop
fdivrl
daa
push
pop
ret
dec
cmpsb
fmul
rol
shll
movsb
loop
in
pop
or
or
or
sti
adc
clc
pop
ja
inc
mov
mov
fcmovne
decl
les
sub
mov
jp
icebp
inc
cmp
adc
pop
pop
enter
punpckhdq
bound
inc
jns
pop
adc
add
add
adc
cmpl
out
movsl
mov
push
ror
push
cmp
js
in
xlat
inc
sbbl
inc
inc
add
mov
and
dec
pop
jle
mov
idivl
inc
popa
ret
cltd
mov
repnz
int3
inc
mov
ret
push
xor
lret
and
add
adc
lcall
add
orl
frstor
mov
mov
mov
jle
xchg
xchg
and
mov
inc
jo
pop
call
and
das
add
mov
and
mov
xor
jmp
jnp
fs
lock
pop
cmp
int3
adc
add
xor
dec
xor
push
aaa
sti
sbb
cmp
ret
push
fidivrl
and
fldl
dec
and
dec
in
mov
mov
bound
xchg
into
out
loopne
lahf
pop
pop
jmp
inc
addl
lahf
ret
xchg
push
arpl
test
mov
and
add
lds
inc
out
cmp
pusha
dec
or
dec
testl
push
sahf
out
cld
mov
out
outsb
mov
jns
int3
xchg
sar
sub
mov
cmp
std
movsb
mov
cmpsb
pop
gs
gs
cli
push
sub
xchg
add
cmp
sbb
shll
jnp
lods
jnp
sbb
fcompp
sar
mov
xor
mov
jne
inc
pop
or
jmp
pop
mov
fstpl
jmp
xor
andl
fs
scas
pop
push
daa
loope
mov
xchg
mov
add
ljmp
mov
mov
cli
shlb
or
xchg
es
cs
rcrb
mov
lret
mov
cs
in
jno
sarl
xor
testb
in
inc
jg
sbb
push
aaa
aaa
dec
inc
sysenter
shlb
add
jno
movsl
xchg
push
push
mov
cmpsl
sarb
sti
shl
xorb
lds
out
cmpsl
and
mov
jb
xchg
mov
repz
dec
push
fsubl
fcmovb
lea
lret
pop
or
clc
icebp
das
sarl
or
jecxz
hlt
push
mov
cmpsb
inc
fisttps
pop
out
pop
inc
push
adc
lock
or
sub
enter
xchg
call
sub
movsl
or
inc
cmp
inc
push
mov
lds
pushl
in
jns
push
out
push
cmp
cmp
sarb
jp
inc
and
adc
lock
inc
mov
cmp
pop
mov
sub
jbe
out
add
ret
lods
pop
aas
inc
push
ss
into
jbe
lods
jmp
push
aad
pop
pop
xchg
or
je
scas
xchg
iret
mov
xchg
test
lahf
aaa
dec
and
adc
dec
std
push
pop
mov
xchg
jne
sub
cmp
jmp
xor
xchg
insl
in
cmp
jmp
and
jle
mov
cmp
add
push
cmpb
mov
and
test
clc
jp
push
ret
arpl
int
jmp
repz
xchg
xor
mov
int3
mov
into
ja
test
xor
inc
and
jbe
cltd
or
imull
mov
into
jo
insb
adc
jmp
pop
add
pop
push
xchg
xchg
mov
mov
out
in
mov
jmp
dec
mov
aas
inc
pop
jns
push
or
lds
dec
push
iret
rcrl
fld
nop
sbb
xlat
stc
ss
xor
xlat
pop
daa
ret
xchg
sbb
subw
cmp
mov
or
in
enter
xchg
rorb
aaa
mov
ja
xor
scas
dec
lds
push
inc
stc
iret
sub
push
pusha
outsl
mov
stos
jno
stc
int
neg
imul
arpl
out
les
sub
sub
into
mov
stos
aam
in
int
cmpl
out
mov
int3
movsb
stos
pop
push
add
loopne
adc
xchg
add
loope
aas
icebp
dec
lock
cmpsl
jo
cmp
adc
push
fldcw
or
cmp
lcall
testb
in
xor
data16
inc
aas
and
mov
leave
mov
adc
sti
cmpsb
cmp
mov
test
cmc
ja
cs
pop
cmpsb
in
or
xchg
call
les
mov
lahf
mov
xor
es
fst
pop
fnstcw
xor
dec
sbb
fsubrs
imul
clc
sbb
in
adc
jmp
fcoml
ret
cmp
mov
adc
or
push
insl
mov
mov
loop
sahf
jae
outsl
cmovp
popa
and
mov
pusha
popfw
mov
test
fistpl
js
push
cmc
js
adc
inc
addl
fnsave
and
mov
sub
out
jbe
sub
or
mov
xor
sahf
jle
sti
and
je
dec
std
rcr
mov
fiadds
sbb
inc
cmp
les
jmp
iret
lret
cmp
fadd
mov
shr
mov
out
cld
bound
pusha
mov
or
mov
lods
mov
lcall
loope
fiadds
movsl
cmp
inc
aas
das
repz
push
sub
jbe
xchg
aam
ret
inc
mov
mov
dec
push
push
fsub
xchg
in
add
test
sarl
cli
adc
ja
enter
mov
jecxz
aam
or
dec
and
jae
jecxz
in
cmpsl
shl
push
jp
mov
mov
push
std
int3
movb
or
rcrb
jo
adc
add
shlb
mov
repz
ret
sub
jmp
jne
push
call
outsl
pushf
mov
fwait
ljmp
inc
jg
imul
xor
out
pop
xchg
cld
popa
aam
jae
and
loope
testb
xor
or
mov
jbe
mov
fildl
push
add
sahf
mov
call
out
sbb
shlb
out
pusha
cmp
pop
push
repnz
les
or
movnti
sub
loop
and
jb
xor
jecxz
pop
lock
sbb
mov
mov
pop
ret
xchg
add
sarl
pop
or
dec
addl
mov
test
adcl
mov
out
cmp
or
andb
outsb
mov
nop
cld
sbb
sti
icebp
daa
stos
incb
add
cmp
jne
mov
adc
mov
inc
orl
lods
push
mov
jno
pop
inc
sahf
pop
cmpl
mov
mov
enter
pop
dec
sub
in
jle
cld
out
cmp
inc
and
mov
and
mov
idivb
cmc
xor
gs
insb
scas
lea
je
sub
push
test
divl
or
arpl
fsubrl
jne
jno
fldenv
or
dec
push
outsb
xor
aam
lret
fcoms
xor
es
loop
mov
stos
dec
pop
iretw
push
aas
shll
cli
scas
lds
and
fs
mov
addr16
dec
fisttps
test
cli
xor
pusha
loop,pt
out
mov
and
fistl
or
mov
mov
js
ss
popa
mov
mov
push
icebp
jne
adc
pop
xchg
notb
dec
cmovnp
test
sbb
or
pop
adc
ds
xor
push
test
jne
lcall
jb
lret
and
push
call
fnsave
mov
sub
push
ret
leave
cmc
test
mov
fcmove
std
arpl
push
hlt
int
jge
inc
ja
push
add
jg
bound
jp
addr16
or
sbb
movsb
icebp
andb
lret
data16
adc
cmp
rol
sbb
leave
test
lods
in
fidivs
xchg
fnstsw
cmp
dec
int3
hlt
addr16
js
xchg
cmp
and
jns
pop
lret
sbb
das
lret
adc
xor
sbb
xchg
out
lods
push
shll
mov
mov
sbb
in
dec
sahf
inc
clc
dec
flds
mov
dec
aaa
push
jge
iret
inc
loope
cmpsl
scas
jge
ret
dec
mov
ja
scas
shll
dec
sbb
add
push
mov
aas
sti
pushf
loopne
outsb
xrelease
fisttpll
ret
cmp
xor
or
cmp
mov
cld
xchg
and
aaa
xchg
call
fiaddl
pop
lock
test
lahf
std
mov
pop
push
or
push
jmp
lret
add
jae
xor
mov
imul
ret
mov
je
outsl
inc
imulb
mov
daa
subb
scas
ds
xor
pop
lret
mov
out
push
sbb
aad
outsl
sub
mov
fwait
iret
push
mov
mov
scas
cmp
call
jmp
popf
mov
jp
fsubrl
xchg
ss
ret
inc
decb
aaa
pop
sbb
rep
and
or
dec
movsl
insl
or
xlat
sti
jl
and
and
mov
or
mov
dec
xor
es
mov
out
pop
lret
cs
jmp
sbbl
mov
and
jp
jg
dec
ljmp
and
out
das
rolb
in
insl
sbb
js
mov
mov
push
std
bound
rcrb
add
gs
adc
mov
popf
out
jns
xchg
xchg
pushl
push
add
mov
lods
mov
lea
ficoms
lods
mov
lcall
test
and
pop
or
mov
arpl
mov
sub
mov
fistpll
mov
repz
mov
testl
mov
cwtl
ud0
jp
test
pop
push
pusha
and
mov
jns
test
xchg
and
shrb
pop
jge
sbbb
add
sbb
jno
mov
xor
and
mov
jge
jns
andl
jmp
gs
imul
jl
out
jge
xchg
pop
mov
in
xchg
mov
pusha
mov
int
adc
clc
cmpsb
out
loopne
les
adc
xor
out
pop
movsb
cmp
repnz
incl
and
push
pop
and
jecxz
out
fcomp
scas
mov
jb
sbb
dec
mov
or
mov
inc
sar
mov
mov
loopne
sub
mov
sbb
inc
aad
mov
inc
and
addb
cmp
int3
iret
mov
cmpsl
outsb
xlat
dec
jne
daa
pop
xchg
jnp
scas
mov
fiaddl
fisubl
mov
cli
add
lret
inc
je
aam
dec
ret
and
ja
sub
sub
movsb
and
push
mov
les
xor
fdivrl
dec
int
not
lds
mov
fsubrl
xor
std
jl
subl
jne
loope
mov
movsl
inc
jb
mov
cwtl
add
pop
pop
fildll
sub
xor
dec
shrb
dec
test
sti
bound
lea
fwait
dec
lea
xchg
mov
jno
or
sarb
add
aad
inc
mov
jbe
int3
xor
dec
fiadds
ret
mov
or
sbb
out
or
xchg
cmp
jae
stos
insl
push
stc
cltd
scas
jg
std
xchg
daa
xor
sti
sbb
insb
cmpsb
outsb
mov
xchg
arpl
enter
aaa
lcall
cmpb
xor
sub
gs
rclb
push
lret
xor
fsubrp
mov
sub
lcall
mov
out
jmp
inc
dec
ds
adc
jne
repnz
jae
push
jne
inc
cmpsl
testl
bound
xchg
int
movsl
gs
es
stc
push
cmp
mull
pop
std
dec
test
enter
adc
pop
pop
adcl
sbb
testl
or
ljmp
push
pop
sub
adc
push
lahf
pop
sahf
sarb
inc
scas
and
dec
jbe
pop
cmp
lcall
mov
pop
cmc
ds
subl
jle
push
pop
movsl
jne
jne
sbb
push
out
lret
stos
jecxz
dec
cmp
call
insb
inc
stc
mov
fcomip
ss
les
push
add
pop
sarb
cmp
push
jbe
jge
push
jge
test
lret
cltd
cli
movsl
sbb
push
cmc
or
fcompp
repnz
mov
inc
cmc
ret
pop
adc
jb
fcomip
dec
aam
pop
add
jo
mov
lcall
jge
jne
and
ret
lds
out
das
dec
fldcw
jmp
loopew
push
cmp
lea
lret
xchg
mov
dec
cmpsb
repnz
xchg
cmc
pop
dec
jno
jmp
shlb
insl
xor
inc
stos
ss
add
decl
in
repz
sbb
arpl
stc
adc
ss
dec
cmp
lock
inc
push
and
ds
sbb
ret
lods
clc
fs
clc
lcall
pop
ss
insb
mov
pushf
inc
pop
jb
jg
mov
sub
nop
mov
mov
cltd
mov
sub
jns
aas
dec
inc
cmp
inc
xchg
xor
inc
xchg
lods
push
mov
add
mov
push
pop
mov
push
scas
pusha
xor
cmc
dec
inc
popl
cmpb
push
add
mov
popf
mov
mov
xor
fsubl
pop
and
dec
lods
adc
test
mov
cmp
sub
roll
and
xchg
mov
cli
xlat
lds
sub
push
pop
sub
mov
xchg
fistpll
fbstp
add
cli
aad
fwait
adc
cmp
push
scas
jns
sbb
adc
pusha
arpl
adc
and
out
insl
sub
sbb
mov
adc
in
pop
cmp
not
inc
pop
fisubrl
mov
idivb
jo
notb
push
outsl
fidivrl
das
jne
add
js
mov
push
jnp
xor
sub
scas
sbb
xor
pop
inc
adc
test
sbb
fldl
imul
loope
outsb
pop
mov
jge
cmc
negl
ret
push
repz
cmp
out
sub
lret
mov
popa
inc
mov
nop
ss
out
mov
faddl
dec
int
scas
lods
xchg
mov
daa
je
jl
das
adc
dec
mov
rorb
lahf
shl
mov
ficoml
addr16
icebp
pop
adc
mov
and
ffreep
push
ret
inc
popf
test
scas
jmp
pusha
std
orb
cli
andl
enter
xor
data16
mov
shll
rolb
xlat
add
or
dec
cltd
aam
pop
ljmp
jecxz
inc
fsubr
jnp
inc
fsts
lret
orl
aad
xchg
aad
sub
ror
es
and
add
push
xlat
filds
icebp
testl
add
add
dec
pop
mov
fnsave
cwtl
ret
xchg
cmp
lret
cmp
xchg
in
mov
jecxz
je
mov
cmp
jl
data16
jae
push
adc
xor
dec
outsl
mov
push
fdivr
insb
mov
mov
adc
out
arpl
insl
mov
pop
mov
insb
or
sub
jl
movsb
inc
mov
pop
arpl
sbb
rdtsc
inc
adc
les
jb
js
andl
aas
lods
daa
or
jge
test
lods
mov
ds
mov
mov
mov
mov
mov
ljmp
or
mov
fdivrs
rolb
out
pop
xchg
sbb
imull
xchg
xchg
insl
jo
sbb
jbe
pop
cmpsb
jne
mov
jg
mov
in
push
inc
scas
jmp
addr16
out
cli
rcll
mov
sbb
inc
ljmp
jae
mov
dec
call
into
jbe
xlat
icebp
pop
sbb
inc
pop
ljmp
mov
cmp
ficoms
mov
mov
jg
push
mov
add
push
xor
jmp
push
ficomps
mov
jne
adc
mov
cmp
mov
repnz
mov
movb
rcl
xchg
pop
mov
cmpsb
orl
andl
je
in
mov
inc
push
xchg
xor
imul
outsl
jae
vmovss
mov
sbb
aam
push
inc
push
sti
flds
nopl
movsb
dec
out
jg
dec
aaa
xchg
inc
xor
loope
movsb
mov
or
add
shrb
or
pusha
pushf
sub
cwtl
lock
pop
xchg
imul
adc
outsb
push
or
xor
push
cmp
outsl
std
in
pop
popa
xor
xor
movsb
fldlg2
inc
push
subb
sub
lcall
stos
into
leave
loop
loopne
cmp
test
scas
sti
aam
fisubs
jne
cmpsl
xor
xchg
sub
mov
leave
dec
or
mov
pop
data16
js
push
add
fisubrl
leave
pop
cmp
pop
adc
xchg
inc
lea
add
inc
in
mov
mov
xchg
rorb
cmp
mov
mov
lock
push
sahf
shl
cmc
xchg
pop
sbb
rclb
loope
add
into
jns
in
dec
adc
mov
jl
jmp
lods
stos
arpl
daa
adc
fstps
insb
mov
aad
inc
or
outsb
mov
cli
push
dec
loop
add
jle
mov
negb
and
mov
inc
fdivrs
mov
call
leave
lcall
xlat
lock
mov
out
sub
lcall
cmp
in
inc
xor
add
call
cmp
cli
movsb
in
xor
jecxz
daa
testl
pop
fidivrs
imul
js
lock
stc
adc
dec
or
mov
in
lods
or
arpl
fmuls
int
dec
out
xchg
mov
out
shrl
sub
mov
into
lret
insb
mov
in
jae
lahf
enter
sub
mov
sbb
fildll
sbb
sub
xchg
scas
mov
push
je
loopne
fwait
pop
or
in
jecxz
adc
inc
lcall
and
pop
fistl
es
mov
inc
mov
pop
add
pop
mov
daa
adc
add
orb
push
fistps
mov
xchg
vphaddbw
shlb
mov
jp
pop
sysenter
lret
fs
mov
mov
ret
inc
test
sub
pop
mov
js
dec
aam
xchg
loopne
jle
and
sbb
movsl
outsl
outsb
mov
sbb
mov
push
jmp
and
outsl
bound
testb
das
out
xchg
dec
dec
mov
add
add
xor
xor
loop
adc
test
mov
out
sub
loope
les
notl
pushf
push
fisttpll
xchg
mov
xorb
sub
les
jecxz
push
dec
dec
cmp
mov
mov
ret
dec
scas
rclb
xor
mov
sti
fwait
addb
arpl
rclb
lds
push
and
and
push
out
xchg
lret
lcall
icebp
cmp
xchg
leave
or
mov
xlat
jne
add
fwait
or
mov
out
cmp
arpl
or
ljmp
push
lea
adc
sub
aam
jae
incb
test
stos
mov
mov
insb
iret
cmp
pushf
pop
mov
popa
xor
enter
dec
fsub
notl
cmp
test
or
sub
aaa
data16
aam
mov
sti
int
enter
outsl
int3
cmpsl
xor
or
mov
push
mov
jle
cmp
dec
add
arpl
xchg
sarl
cmp
mov
mov
fcompl
lods
insl
xlat
cmc
hlt
xor
das
mov
sbb
dec
hlt
popa
leave
orb
fdivrl
pop
xchg
inc
and
push
inc
xor
mov
xchg
sarl
pop
dec
sub
cmp
dec
dec
icebp
mov
frstor
and
outsb
pusha
mov
cs
shll
popa
fists
popf
rol
and
pop
mov
and
daa
loop
out
adcl
push
lretw
add
cmp
lock
loope
sbb
repnz
mov
mov
xor
sti
in
pop
dec
push
push
mov
sbb
rclb
pop
movsb
faddl
testl
sbb
lcall
push
in
enter
sub
xor
addr16
imull
daa
cmpsl
lods
fucomp
mov
xor
call
or
popl
adc
stc
jo
lcall
add
jl
mov
adc
pusha
std
mov
cmp
and
jmp
xor
jmp
add
pop
pop
push
push
cmp
jmp
inc
inc
fs
mov
sbb
and
sub
test
jo
pop
sahf
mov
stc
mov
fwait
int3
push
and
std
fsubr
fistpll
lods
jecxz
add
in
flds
xchg
xchg
les
or
sub
enter
arpl
popf
out
insl
iret
and
mov
pop
sub
pusha
mov
test
ficoml
inc
movsl
lock
pop
jmp
mov
repnz
enter
xor
adc
xchg
mov
lcall
pop
sbb
pop
stc
or
movsl
sbb
rclb
mov
test
or
jl
orb
test
adc
mov
imul
push
aad
pop
sahf
mov
insb
ret
divl
aas
mov
out
rclb
sarb
and
scas
lods
lret
xchg
lret
mov
cs
repz
pop
xor
add
stos
xchg
test
shlb
std
push
sbb
cmp
cs
jp
xor
jecxz
adc
and
aad
fs
mov
shr
sbb
in
incl
ss
jns
xchg
dec
jae
rcll
scas
aad
xor
lods
dec
and
cmp
push
xchg
es
in
xchg
ds
add
add
push
out
pop
add
loopne
sub
jp
or
outsb
dec
cwtl
adc
sbb
cmc
dec
loopne
sarl
sub
mov
or
push
dec
jl
jge
jecxz
addr16
pop
jno
outsb
into
pop
idivb
push
push
mov
ja
idivb
jl
xchg
addr16
mov
nop
fisubrl
out
test
xor
push
scas
and
mov
rclb
mov
jns
and
movsb
repz
pop
adc
or
mov
sbb
dec
aam
popa
mov
daa
stc
in
hlt
push
push
xchg
cli
xchg
add
imul
or
lahf
imul
jnp
scas
sbb
and
rcll
shlb
push
clc
aam
jmp
ljmp
and
cli
cld
jnp
cmp
mov
inc
cmp
dec
xchg
ret
push
aaa
pop
fcompl
sbb
sub
in
sbb
xchg
test
mov
data16
add
data16
ja
push
mov
and
loop
or
cld
call
popa
outsb
bound
cmpsl
xchg
stos
popf
jg
jl
shrb
pop
xchg
arpl
push
loopne
jg
jne
cmp
das
call
or
adc
aam
ss
mov
sbb
ret
aam
xchg
mov
sbb
enter
add
mov
or
dec
shlb
in
mov
mov
sarb
cli
dec
ret
das
pop
push
loop
fldt
cmpsl
add
inc
stos
push
movsb
adcb
cmp
mov
cld
push
jbe
xor
mov
flds
push
in
dec
nop
cmp
mov
mov
inc
ja
je
test
xor
out
nop
ret
jp
sub
xchg
push
notb
pop
jle
xor
or
ljmp
in
es
push
sub
pop
aas
mov
jp
inc
outsl
es
adc
mov
loopne
int
fdivrp
inc
and
mull
movsb
mov
mov
mov
add
cmpsb
movb
mov
adc
dec
cmp
std
pop
lods
sbb
jae
inc
leave
xchg
sahf
addr16
mov
mov
jp
mov
add
mov
imul
aam
pop
vmovhps
sti
cmp
lock
in
ljmp
in
xor
push
or
xor
xchg
in
push
or
stc
out
cld
push
movsb
dec
sbb
sbb
push
es
je
xor
mov
dec
inc
in
mov
sub
in
add
loopne
pop
mov
dec
sub
xchg
popl
imul
jmp
mov
add
les
cmpsl
xchg
lahf
scas
add
mov
xlat
jbe
call
mov
jb
test
adc
sahf
or
ja
or
arpl
jns
sub
adc
jle
inc
lods
cmp
lods
mov
pop
adc
adc
xchg
add
shrl
mov
fs
mov
fisubrl
cwtl
inc
jbe
mul
rcll
cltd
xchg
push
adc
movsb
lds
xchg
push
into
sbb
mov
addr16
aad
fdiv
sub
in
push
cmpsb
repnz
aam
lret
inc
outsb
mov
rcrl
jl
fnsave
dec
sub
movsl
sahf
inc
sub
adc
in
lcall
add
xchg
push
scas
push
dec
int
add
mov
lret
jecxz
mov
loop
dec
mov
int
fadds
je
int
inc
pushf
aaa
fisubrl
dec
and
lahf
push
pop
pop
add
xor
and
pop
fsts
xchg
out
ss
cmp
pop
iret
hlt
in
jnp
cmp
sti
push
dec
pop
movsb
std
jp
addb
xadd
pusha
nop
lock
stos
inc
xchg
scas
bound
iret
push
mov
mov
pop
dec
sbb
mov
nop
shlb
dec
test
daa
mov
pop
mov
aas
ficomps
repnz
and
mov
repz
ret
sub
fsubrs
jns
cmc
mov
daa
loop
mov
inc
pop
jo
test
mov
xchg
xor
pop
jmp
inc
xchg
and
mov
push
pop
mov
sbb
ss
xor
add
popl
mov
pusha
in
push
sub
mov
scas
adc
aas
pop
aam
inc
outsl
dec
mov
lret
xor
xchg
or
jecxz
aas
test
jae
aas
lods
movsb
sbb
push
or
dec
fistl
jecxz
mov
shrb
bound
sbb
mov
fistpll
xchg
dec
mov
inc
sahf
stc
ja
into
fiaddl
aam
out
fistpll
cs
mov
lea
ljmp
inc
xor
stc
jmp
jnp
adc
sbb
jmp
insl
aam
push
push
inc
enter
frstor
adc
mov
nop
cmp
or
cmp
mov
xor
jbe
lods
sub
jno
mov
xchg
sbb
out
jnp
sti
mov
outsl
pop
arpl
aas
dec
pop
aam
test
jmp
jmp
jb
sbb
aaa
daa
inc
mov
stc
repz
adc
add
es
insb
add
adc
xor
subb
into
out
add
rcrb
fcompl
mov
mov
rorl
sub
mov
jge
pop
cmp
mov
fs
jge
jle
sarb
or
xlat
mov
jns
inc
push
mov
xchg
loope
sub
jbe
les
pushf
cld
adc
adc
xchg
add
jg
scas
mov
notb
mov
out
xor
mov
xchg
adc
fnstcw
stos
cwtl
add
jbe
mov
xor
call
inc
lret
xchg
int3
xor
mov
jno
out
cmpsb
mov
push
dec
int3
and
pop
shlb
clc
in
mov
insb
adc
ljmp
and
imul
sbb
outsb
jle
daa
mov
sti
mov
dec
es
out
and
mov
cs
or
lcall
dec
cmp
dec
rcrb
stos
or
hlt
or
inc
push
add
or
xor
ja
bound
pop
xorl
dec
fwait
dec
jns
xor
push
jnp
lret
inc
in
xchg
dec
jbe
xor
sub
rclb
or
fadd
mov
ret
inc
push
jg
jae
mov
in
jb
cltd
xlat
mov
popa
mov
jo
or
push
mov
ror
jg
cli
xor
movsb
and
shlb
push
or
ficompl
mov
repnz
fdivs
push
xchg
mov
mov
xchg
mov
popf
js
jl
orl
scas
mov
push
dec
push
std
inc
or
sbb
mov
js
mov
mov
dec
fcoms
nop
or
xchg
cmp
add
rcll
enter
dec
jno
test
or
ljmp
ret
orb
pop
adc
mov
cmpsb
jo
sbb
pusha
loop
sbb
movsb
mov
inc
mov
inc
fiaddl
jno
fstl
adc
mov
adc
jmp
ds
mov
clc
inc
xchg
pop
iret
pushl
subb
leave
mov
idivl
jle
mov
movsb
inc
mov
push
cmp
jle
dec
popf
addb
ret
movsl
inc
stos
jns
jge
out
mov
mov
out
enter
inc
lods
sarb
daa
mov
jle
outsb
lret
xor
xchg
mov
lcall
aad
sbb
outsb
orl
sub
rclb
iret
sbb
or
adc
fists
or
cmp
je
lods
pop
xchg
arpl
cli
movsl
mov
mov
out
fldcw
cli
add
mov
inc
sbb
loopne
cmpsl
push
movsb
scas
add
pop
sbb
dec
stc
fs
or
mov
mov
mov
jnp
sub
movsl
movsl
das
lea
cmp
sti
mov
sub
and
mov
sarb
loopne
jp
cmp
mov
push
pop
std
cld
cmp
stos
out
punpckldq
adcl
cmp
adc
sti
fstps
add
lock
push
fidivrs
pop
out
shll
sub
pop
push
cli
xor
dec
jno
cmpsl
or
adc
hlt
push
dec
popa
ret
cmp
loop
mov
ds
mov
add
stos
sub
popf
les
inc
sub
cmc
push
mov
lds
test
addr16
je
pop
movsb
pop
movsb
subl
fsincos
inc
jae
xlat
test
push
ret
mov
dec
mov
mov
jb
cmp
adc
std
mov
add
pop
and
xchg
xchg
pop
lret
ret
mov
mov
pop
dec
jns
outsl
imul
fcomi
mov
xchg
scas
arpl
popa
iret
jo
les
es
jge
sarl
or
lahf
mov
into
in
dec
dec
lret
sub
mov
jl
xor
adc
mov
adc
cld
cmp
cmp
push
rcrb
push
dec
mov
mov
add
gs
sub
in
and
adc
fs
jae
dec
pop
xchg
in
es
inc
test
fistpl
mov
fwait
movl
test
hlt
fstp
sahf
cld
sub
add
xorb
movsl
cli
out
cmp
lods
jno
sub
jmp
stos
mov
mov
adc
or
sbb
xchg
inc
gs
out
adc
xchg
cmc
jbe
mov
xchg
sub
outsl
fisttps
and
xchg
in
cmp
aaa
add
adc
and
xchg
xchg
lret
stos
jecxz
enter
inc
push
sub
or
inc
adc
notb
pop
sub
bound
xor
add
clc
push
cwtl
jns
mov
cmp
fneni(8087
dec
outsb
or
push
fidivs
ret
pushf
inc
xor
aad
sub
cvtps2pd
mov
push
sti
test
mov
pop
mov
push
pop
xchg
outsb
push
sbb
popa
popf
or
call
out
mov
and
lret
je
mov
jno
jb
jae
sbb
cmpsl
jno
aad
bnd
lret
xor
sbb
jge
fnstenv
cmp
and
add
sbb
sbb
dec
scas
mov
or
mov
adc
test
xchg
lea
xchg
push
and
mov
pushf
push
stos
test
pop
xchg
push
sbb
out
mov
xor
lahf
xor
stc
jae
clc
cmc
lret
fldenv
fstpt
sub
mov
xchg
and
mov
jb
mov
int3
dec
mov
jnp
sub
mov
cmc
push
icebp
gs
xchg
test
es
loope
in
daa
gs
sub
adc
out
cmp
aad
and
push
sbb
bound
jg
stc
jmp
and
adc
repnz
loopne
cmp
or
pop
mov
test
lods
sbb
pop
adc
rcrl
in
mov
cmpsl
and
popf
sub
mov
dec
inc
jmp
idiv
push
push
adc
fdiv
aad
push
mov
arpl
in
fldz
push
xchg
mov
lds
sbb
subl
and
cmc
mov
xor
aam
jmp
dec
mov
dec
js
shll
xchg
sub
in
cwtl
scas
push
sahf
xor
cmp
push
add
test
cmp
insb
cld
jle
adcb
fucom
fs
xor
or
cltd
add
jp
sub
movsb
bound
inc
xor
cltd
daa
ja
js
insl
mov
inc
lcall
inc
and
or
dec
jmp
test
in
push
jo
inc
in
push
mov
cwtl
stos
movl
imul
xchg
mov
inc
les
or
call
dec
popf
mov
insl
jmp
jl
push
mov
pop
fisubl
fadd
or
daa
sub
adc
out
mov
inc
add
dec
insl
dec
outsb
add
push
inc
scas
loope
dec
lods
or
data16
adcl
std
icebp
jnp,pn
and
ret
sub
xor
mov
movsl
adc
js
mov
ret
mov
cmp
xor
imulb
push
mov
imul
sub
push
push
mov
and
imul
xchg
call
inc
cmp
sbb
and
cld
pusha
jne
mov
mov
fucomip
ret
loop
jg
gs
addr16
jnp
aam
jnp
xchg
mov
lods
dec
lret
hlt
out
or
mov
lds
addb
int
and
mov
test
xor
movsb
or
push
shl
xchg
xchg
push
stos
fldl
mov
jae
xchg
jbe
call
pop
fxch
mov
cmp
adc
fiaddl
sbb
dec
out
inc
pop
jecxz
push
icebp
xchg
mov
ja
ds
out
ljmp
ror
pop
cmp
cmpsb
inc
insl
mov
mov
bound
push
call
cmpsl
leave
sub
xlat
lock
movsb
mov
insb
adc
jl
push
add
in
ja
ret
pop
test
jb
pop
lret
mov
add
insb
out
push
loop
sub
or
mov
jbe
cmp
pushf
sbb
aas
mov
cmpl
lods
mov
mov
mov
xor
cmp
cmc
outsb
xchg
mov
enter
and
cmp
imul
icebp
adc
enter
popf
push
idivb
xor
aaa
add
std
push
out
mov
add
repnz
and
jle
imul
in
mov
cmpsb
xor
mov
das
mov
cmovl
mov
popa
xchg
mov
inc
xchg
jmp
dec
sbb
dec
mov
sbb
sbb
push
sub
arpl
push
xor
mov
call
jl
ja
and
movsl
mov
xchg
sbb
xor
je
stos
and
push
fmull
and
cmp
xor
mov
inc
repz
js
outsb
dec
xor
mov
pop
adc
mov
add
pop
addr16
add
sahf
push
mov
mov
dec
sahf
testb
sub
or
push
aaa
movsb
test
repz
xchg
iret
jnp
in
push
mov
ss
sti
call
adc
repz
mov
mov
fistpll
jmp
pop
stos
sub
inc
insl
rcl
fnstenv
lret
sbb
rcl
push
sbb
ss
jge
lock
scas
pop
mov
pop
popa
xchg
add
fistl
mov
pop
inc
dec
sub
das
mov
push
mov
ss
dec
lods
or
fcoml
mov
pop
rcrl
sub
es
iret
clc
pop
lds
pop
adc
mov
mov
sbb
xchg
adc
dec
and
pushf
sub
lahf
add
insl
movsb
mov
pop
ja
pop
loopne
pop
or
lods
push
mov
in
out
scas
push
je
adc
je
jne
pop
inc
xor
mov
scas
out
push
fdivr
je
sbb
outsl
push
pop
cltd
xchg
scas
jl
pop
xchg
sahf
data16
subb
sti
lods
in
jb
pop
iret
int3
les
jo
adc
add
in
cmp
pop
test
out
sahf
dec
daa
mov
rcr
mov
pop
loop
ljmp
and
je
add
pop
jo
sub
inc
je
and
mov
push
aad
mov
andl
lret
das
sub
adc
jge
jnp
xchg
sub
lea
test
les
stos
inc
push
shlb
stos
bound
or
and
dec
into
push
sbb
ret
loopne
adc
xor
aad
daa
ret
in
nop
mov
ja
inc
lock
cs
lock
mov
scas
sub
jnp
stos
movsb
sub
mov
mov
mov
sbbb
into
mov
sub
into
jbe
mov
sbb
dec
test
ret
adc
popa
cs
loope
jg
js
jbe
push
xchg
mov
cmp
repnz
cld
mov
pushf
insl
iret
lds
and
jo
shlb
lods
out
push
jbe
aam
iret
call
push
push
adc
or
or
arpl
mov
lcall
sbb
lcallw
in
mov
mov
cltd
into
pop
decl
test
mov
adc
cmp
aas
mov
pop
dec
mov
pop
mov
lea
test
fs
xor
iret
bound
pop
jmp
jp
dec
sahf
push
xor
push
and
cmpsb
data16
jnp
push
and
pop
push
in
sub
and
xor
fs
sti
push
cmp
inc
push
test
int3
mov
popf
xor
out
xrelease
jecxz
add
repz
jecxz
test
mov
mov
cmp
sar
test
movl
cld
cmp
in
push
xor
pop
inc
loope
dec
mov
xchg
xchg
or
xchg
mov
pop
mov
mov
lock
push
inc
mov
pop
xor
sbbb
repz
test
loop
test
movsb
pusha
jae
fwait
mov
xlat
sbbl
xchg
xor
int3
xchg
push
outsb
bound
mov
lret
jo
push
pop
mov
mov
pop
add
xchg
insl
ret
sbb
mov
decl
mov
ret
add
es
mov
jecxz
xor
ds
mov
bound
cmp
mov
mov
push
xor
andl
ljmp
enter
out
mov
jbe
pop
xchg
lret
mov
orb
adc
sbb
flds
mov
fsts
pop
lcall
mov
mov
dec
pusha
pop
rcrb
push
push
ja
popfw
mov
pop
mov
pushf
stos
sbb
imull
push
cmpsl
lds
subl
mov
imul
sbb
pop
dec
mov
dec
pusha
negl
push
mov
mov
and
jb
inc
or
push
push
mov
das
or
cltd
in
repz
in
mov
js
mov
rcl
ret
and
add
push
sbbl
mov
int3
sub
mov
enter
push
mov
or
jecxz
mov
pop
jne
dec
pop
cld
mov
popa
or
leave
jnp
in
xor
push
fnstsw
lcall
fstl
nop
jge
push
or
insl
outsl
cmpsl
adc
mov
aad
dec
push
loop
mov
mov
lret
es
jle
and
xor
aas
cwtl
mov
jp
adc
dec
mov
cwtl
cmp
ret
call
inc
inc
sub
ficoms
push
ljmp
fisubs
sub
and
and
outsb
jnp
add
and
mov
leave
cmpsl
cli
jge
std
inc
dec
lds
ficoms
ficomps
push
inc
popl
fdivrl
into
xor
mov
sub
xchg
xchg
add
hlt
out
sub
or
sub
addr16
rorl
ja
sbb
and
stos
mov
movb
xchg
inc
jb
insb
mov
in
or
in
out
loopne
and
xor
movsl
ret
sbb
pop
jb
dec
movsl
jo
mov
mov
inc
xor
mov
push
mov
sub
mul
dec
sbb
rorb
dec
leave
cwtl
out
mov
dec
jge
repnz
in
iret
aas
test
cmpl
push
aas
sbb
subb
insb
orl
cmpsl
data16
jbe
xchg
aaa
mov
out
push
push
adc
inc
mov
or
mov
clc
xchg
adc
test
dec
mov
nop
xchg
push
pop
dec
xchg
and
ja,pt
insb
sbb
xchg
mov
insb
add
scas
andb
out
mov
mov
mov
jnp
xchg
cmc
fidivl
roll
pop
sub
lret
xchg
fsub
cmp
rol
xchg
in
aam
sub
rorl
ret
ret
push
addb
mov
sub
testb
outsl
bound
adc
or
xor
test
loopne
or
fistl
outsl
jnp
filds
inc
das
adc
xlat
loop
cmpl
testb
push
or
cld
lods
cmpb
xor
cmp
sahf
daa
fisubrl
js
cmpb
mov
loopne
sahf
addr16
and
test
inc
pop
mov
in
rorb
cld
jne
iret
jns
call
jmp
mov
imul
jnp
je
cltd
or
add
or
jb
xlat
xchg
mov
or
pop
aas
pushf
fcmovne
mov
in
xlat
dec
dec
cltd
fistpll
addl
jmp
decl
pop
cmpsl
cmpl
clc
pop
xchg
mov
pop
into
mov
jb
adc
lea
bound
std
adc
aam
cmp
mov
pop
fsubp
inc
mov
dec
jne
xchg
outsl
loope
sti
sbb
xchg
inc
sarl
adc
pop
and
push
out
mov
mov
stos
mov
aaa
lret
sbb
outsl
add
insl
inc
or
and
push
mov
in
pop
pop
push
rcrl
pop
pop
dec
xchg
shll
fs
xchg
push
xor
dec
jge
dec
jo
cld
shll
sub
imul
shlb
push
inc
and
jbe
test
mov
mov
stc
mov
xor
xchg
xlat
int3
mov
lock
or
push
aad
gs
cltd
roll
outsl
jne
loopne
add
nop
and
jbe
iret
push
inc
push
dec
addb
arpl
insb
in
fs
dec
repz
adc
xor
stos
cmp
hlt
and
inc
addr16
imull
inc
rolb
mov
mov
fs
or
or
and
aaa
fstps
fistps
orl
inc
dec
dec
push
sbb
js
push
mov
cmp
mov
cmp
mov
jnp
arpl
arpl
stos
dec
mov
pushf
loopne
xchg
cmpsl
bound
icebp
dec
push
or
test
jge
in
subb
mov
jmp
gs
stos
enter
sbb
or
inc
inc
jmp
xor
or
pop
cmpsb
push
lahf
mov
ja
pushf
iret
ja
cs
jb
xchg
ja
incw
cmpsb
inc
std
jecxz
cmp
mov
cwtl
add
std
lea
stc
mov
mov
or
inc
or
dec
cmp
push
fcomip
sbb
lcall
push
movsl
out
popf
add
js
repz
and
adc
lret
mov
fistl
add
out
in
and
lods
adc
dec
jl
stos
ds
adc
mov
mov
mov
and
mov
int3
std
dec
push
jg
xchg
inc
xchg
pop
sub
push
cli
test
mov
hlt
mov
mov
adc
sar
pop
inc
movsb
mulb
push
int3
je
sbb
xor
jle
fisttpll
ret
xor
mov
and
out
jbe
sbb
stc
jecxz
xchg
dec
outsb
loopne
hlt
push
jle
sbb
in
or
add
ja
test
pop
pop
mov
xchg
lods
cmp
or
aad
out
les
je
cmp
jbe
or
dec
cld
pop
ss
aam
inc
outsb
sub
out
jbe
into
cli
pop
mov
jo
nop
inc
or
ja
push
mov
testb
mov
dec
nop
int
adc
int3
add
ljmp
mov
cmc
std
clc
adc
mov
ja
lods
in
ss
add
icebp
sub
inc
sbb
xchg
int
stc
sub
out
lds
lods
lcall
stos
fildl
movsb
push
inc
mov
fmul
jb
xrelease
rolb
push
dec
push
xchg
cld
or
pop
icebp
mov
mov
xchg
decl
scas
leave
add
xchg
std
imul
push
les
xor
and
adc
into
or
push
les
adc
or
jbe
mov
pop
push
push
pusha
imul
cmpsb
jge
xchg
fnsave
mov
add
aad
repz
lret
adc
xchg
sbbl
cmc
xchg
mov
or
push
aaa
push
es
mov
lds
pop
cmc
push
dec
sub
notb
push
stos
pop
daa
ret
jecxz
or
push
out
push
xor
ret
and
add
dec
imul
cmpsb
fiaddl
aad
mov
pop
mov
add
es
xchg
cltd
and
loope
insl
inc
xor
pushf
movsb
movsb
movb
mov
jno
add
sbb
ljmp
pop
mov
shrd
dec
cmpsl
or
dec
cmp
xor
scas
js
pop
mov
stc
or
jbe
into
mov
cmp
add
xchg
imul
inc
bound
lods
frstor
pop
inc
mov
les
mov
ror
popf
int
inc
test
rclb
and
push
mov
push
mov
inc
lock
ret
movsb
roll
sub
adc
mov
add
inc
sub
sub
sbb
dec
das
push
sbb
shrb
fwait
scas
adc
and
mov
outsl
push
into
out
dec
inc
jbe
xor
out
mov
int3
orb
rorl
sarb
adc
mov
pop
mov
inc
in
mov
push
loopne
cmp
test
cmp
and
lods
cmpsb
decb
lds
fidivrs
ja
add
add
orl
shl
adc
jno
lods
in
pop
cmp
jl
loopne
imulb
fdivs
cmp
test
mov
leave
insb
gs
aam
inc
dec
test
in
popa
nop
das
dec
dec
jae
fwait
and
sbb
dec
cmpsb
imul
mov
mov
stos
mov
cli
xchg
xchg
hlt
aam
adc
cmp
inc
loop
pop
adc
push
nop
push
in
rcl
rcl
clc
push
out
mov
mov
scas
cltd
jl
hlt
lock
std
in
add
in
lret
push
sub
and
dec
dec
rcr
dec
pop
add
sub
int
push
lock
out
aad
cmp
inc
aad
cmp
aam
xlat
lahf
idivb
hlt
mov
or
int3
adc
pushf
or
adc
xlat
sub
fs
and
ss
les
pop
sub
adc
mov
roll
sbb
xchg
or
lret
cmpsl
jmp
and
jmp
repz
xor
fiaddl
addr16
and
rorb
mov
sbb
and
clc
mov
mov
fcomps
fimull
mov
jle
fstpl
fisttps
and
arpl
sub
neg
fdivl
adc
xlat
xchg
clc
push
xchg
or
mov
pop
mov
insl
adc
lds
mov
sub
dec
insl
fs
rorl
addr16
mov
xchg
xchg
dec
push
sbb
jge
push
or
imul
out
mov
enter
mov
fistps
loopne
jl
jp
rcr
lods
or
jge
sub
inc
cmp
cmp
sub
push
ror
test
xor
add
pushf
pop
out
cmpl
push
mov
add
jbe
sahf
mov
push
enter
jne
pop
lahf
lock
dec
sarb
cmp
das
xchg
mov
pop
shl
fnsave
cld
and
cmp
inc
pop
inc
cld
addr16
pop
dec
popa
xchg
lods
out
ds
jmp
andb
clc
mov
xor
push
shrb
out
sarb
loop
xor
sbb
xchg
jne
jmp
repz
insb
xchg
stc
inc
out
mov
ret
cmp
dec
fisttpll
sahf
bswap
outsb
mov
fs
pop
outsl
or
lret
or
push
jp
jnp
cli
or
pusha
subb
nop
mov
pusha
ljmp
cwtl
imul
or
mov
xorl
ljmp
sti
or
imul
add
dec
sbb
ret
add
jne
jno
xor
xor
stc
pusha
xchg
inc
hlt
xchg
jbe
add
mov
add
push
push
sbb
lret
pop
out
pop
sub
xor
test
xchg
sub
lock
or
test
fiaddl
sub
jne
inc
push
dec
mov
xchg
or
inc
pop
insl
push
inc
inc
pop
mov
xor
cld
outsb
mov
in
or
inc
push
pop
xor
inc
ficompl
push
push
jae
sub
test
push
cmp
jae
pop
jb
sbb
fcomps
stos
xchg
and
outsb
mov
movl
fwait
pop
push
mov
xchg
xchg
xlat
mov
das
xor
fstl
mov
xchg
ds
or
dec
and
jle
popa
mov
jne
fimull
jo
mov
ffreep
or
leave
cltd
shl
dec
enter
cmp
mov
aaa
jecxz
dec
xchg
jl
and
loop
sbb
jle
push
xchg
cmc
in
xor
aaa
pop
mov
sbb
aaa
jp
cwtl
movsb
cmp
push
call
scas
sub
movsb
jmp
ret
fwait
int
or
fmull
jo
insb
lods
xchg
enter
fisttpl
push
in
or
shll
dec
jne
cmp
int3
lahf
adc
fdivr
lods
add
rorb
xchg
mov
subl
pop
inc
jl
or
cmp
data16
into
cltd
sbbl
das
pop
xor
cmp
lcall
aas
push
mov
cmp
push
adc
scas
and
insl
imul
insl
in
mov
in
loop
cmp
inc
mov
xchg
lcall
push
dec
addl
add
cmc
cmp
xor
stos
pop
jnp
lods
sub
jle
push
jns
arpl
mov
jne
ret
pop
jno
daa
xchg
and
mov
and
xchg
xchg
cmp
loop
out
sahf
aaa
jnp
lcall
std
repnz
lods
idivb
stos
rcll
xor
cltd
add
pop
and
or
arpl
scas
out
inc
sti
adc
or
push
adc
push
dec
sbb
dec
mov
decb
js
mov
outsl
lret
add
or
pusha
lahf
mov
jl
and
je
nop
rcll
xchg
push
inc
cmp
mov
push
cmp
mov
clc
xor
mov
push
cmc
test
mov
mov
test
mov
pushf
pushf
cmp
daa
movsb
cld
cmpsb
xor
push
jb
jo
mov
sbb
sbb
add
cmc
xchg
test
lods
and
xchg
sub
jae
push
push
add
xchg
and
popa
xor
xor
xlat
xchg
imul
jmp
sub
popf
jno
call
sahf
mov
pushf
mov
mov
xchg
adc
push
roll
gs
ss
inc
lcall
stos
rcrb
in
xor
xchg
lahf
pop
or
sbb
inc
push
nop
fildl
std
inc
dec
xchg
jmp
pop
xor
adc
jbe
sub
daa
or
hlt
mov
loope
sub
jle
out
lahf
jns
test
and
xorb
jo
loopne
pusha
push
push
cmc
imul
imul
loopne
int
aam
mov
cmp
mov
xor
or
pop
pop
repz
arpl
dec
push
or
movsl
iret
enter
jne
dec
pusha
stc
je
es
adc
sarl
pop
mov
xor
mov
jl
pop
cmpl
stos
sub
jl
xchg
scas
jae
stos
xchg
adc
xor
cmp
sti
jle
sbb
aam
ret
lds
fimuls
into
adc
cld
fnsave
and
lock
fisubs
mov
and
je
push
ja
fimull
dec
repz
or
adc
das
push
cmc
adc
test
sub
jno
ljmp
push
jb
xchg
lea
bound
mov
in
lcall
jbe
push
movsb
mov
inc
in
dec
inc
fidivl
dec
imul
dec
jb
call
scas
lret
mov
std
fcompl
sti
cmp
rol
dec
jmp
movsb
mov
push
xor
xchg
fistl
jecxz
dec
lret
sub
lahf
lcall
xchg
loop
lock
es
lret
push
cs
cmpsb
sub
mov
push
adc
cmpsb
jl
loopne
push
scas
bound
cmp
jb
int3
mov
xchg
daa
out
cmpsb
and
daa
pushf
push
pop
cwtl
dec
jmp
push
leave
xchg
push
fdivs
cmp
adc
sahf
push
mov
cmpsb
shl
ljmp
icebp
mov
cmpsb
adc
pop
cmp
jmp
dec
cltd
sub
insl
das
xor
lret
pop
test
mov
data16
mov
scas
imull
movsl
push
daa
or
inc
rcrl
push
sbb
pop
les
push
dec
pusha
cli
sti
ljmp
pop
cli
dec
pop
je
stos
sub
cmp
repnz
or
outsl
xor
sbb
enter
in
inc
pop
pop
or
mov
lods
jbe
es
repz
mov
cltd
push
mov
mov
cmp
sub
or
insb
icebp
lcall
ss
addb
call
fs
push
popa
inc
lret
mov
daa
in
cltd
mov
jne
cli
into
lods
stc
scas
jle
adcl
xchg
daa
or
inc
pop
jg
mov
in
cld
push
leave
jno
add
xchg
mov
push
jb
lcall
inc
pushf
jmp
xor
jge
outsl
outsl
fistps
ret
stos
sub
dec
ljmp
mov
push
cmpsb
je
pop
xchg
mov
lods
jne
and
jecxz
or
add
popf
cmp
int
mov
lcall
dec
or
and
pop
jo
imulb
dec
or
cmc
sbb
loopne
stos
into
cmp
sub
fists
hlt
icebp
ds
out
rcrb
stos
lods
call
add
sub
dec
sbb
int
pop
fcomps
lods
sub
mov
or
mov
cmp
pop
inc
push
dec
jbe
jmp
push
mov
jle
and
dec
push
mov
daa
adc
xchg
sahf
mov
adc
and
inc
out
push
jp
call
xchg
xor
xchg
mov
enter
mov
or
sarb
cmp
stos
out
insl
arpl
push
cltd
testl
icebp
dec
and
push
jmp
jmp
cmp
fcoml
cwtl
xor
lret
push
out
sub
or
imull
int
xchg
sahf
mov
pop
and
jmp
push
jmp
in
ss
inc
fisubrl
andb
cmc
fstpt
sub
or
xor
in
icebp
or
test
cs
mov
stc
nop
add
pop
mov
push
loopne
inc
call
jae
push
sub
test
xchg
and
sbb
cld
add
pop
fimuls
out
mov
cmpsl
jl
in
repz
popf
mov
orb
cmc
push
push
test
xchg
mov
aad
cwtd
out
dec
add
mov
xor
and
call
std
jmp
dec
test
int
xor
loope
sbb
cmc
sbb
mov
repnz
dec
jmp
fimuls
push
sti
sbb
xchg
pop
shrl
add
imul
mov
fstl
xchg
aam
int
sbb
mov
fisubrs
flds
push
pop
fisttpll
add
mov
adc
ret
xor
push
fdivl
rorl
add
dec
out
pop
scas
inc
xchg
inc
imul
mov
lcall
sub
push
mov
icebp
clc
push
adc
in
into
inc
xchg
std
cmpsb
xor
adc
inc
xchg
lea
and
cmpl
rcrl
out
testl
dec
aam
ss
subb
push
shrb
mov
lods
stos
inc
jae
insb
lock
mov
mov
pushf
jge
addr16
sub
xorl
sti
or
ss
xor
xchg
scas
shrb
leave
xchg
mov
pop
jmp
fisubs
mov
outsb
push
dec
popa
xor
iret
in
add
aad
dec
popf
add
dec
inc
dec
jg
cmpsb
xchg
mov
movsb
mov
jmp
ds
std
sbb
repz
mov
fists
ljmp
xchg
jl
rorb
je
push
or
add
out
aad
xor
test
fldt
lods
idivb
pop
fidivrl
cmp
cmc
jg
mov
jl
movsb
test
std
pop
jge
xor
lods
dec
and
push
mov
push
bnd
mov
lret
mov
fistl
pop
inc
inc
jb
lock
xchg
cmovo
lea
jo
and
out
push
inc
inc
xchg
pop
push
xchg
test
push
sbb
pop
popf
jne
or
inc
mov
push
adc
test
pop
mov
out
fcomps
jae
xchg
popa
mov
in
mov
dec
fmuls
data16
popf
loop
lret
hlt
shll
jb
add
pop
adc
inc
out
push
sub
stos
push
sub
and
shll
inc
imul
repz
xchg
and
notl
cmp
push
mov
dec
test
xchg
test
out
lcall
push
shrl
sahf
call
xor
and
fs
fsubrl
ret
xchg
mov
inc
jne
lahf
jno
and
xor
ror
lret
mulb
pop
mov
mov
mov
pop
fsubrp
roll
mov
loop
push
adc
adc
jle
dec
ficomps
sbb
push
lds
and
insb
cld
cmp
fnstsw
popw
or
push
test
or
out
int
decl
xchg
dec
xor
das
iret
and
xor
xchg
mov
sub
stc
cwtl
outsl
dec
adc
xchg
mov
stos
psubw
sbb
add
mov
data16
jp
xor
ficoml
push
jae
ret
shl
stos
lret
js
sub
dec
add
mov
fwait
and
jle
pusha
jo
aad
cmp
dec
out
imul
or
cld
pop
cmp
stos
xchg
mov
jg
fsub
xor
outsb
cltd
mov
and
in
dec
xchg
into
fs
add
cwtl
adc
sti
mov
pop
mov
jne
shr
es
ja
cmpsl
mov
inc
inc
pop
xchg
mov
xchg
insb
jp
outsl
aad
cmp
in
cmpl
rorb
push
pop
inc
fldt
cmpsl
test
addr16
jne
popl
iret
imul
lods
pop
dec
je
mov
testl
rorl
outsb
popl
lea
sbb
jno
push
cmpsl
dec
sub
mov
push
fsubs
xchg
out
in
xchg
sbb
arpl
adc
mov
mov
sbb
mov
pop
pop
into
add
sahf
or
mov
leave
ficompl
fisubrl
iret
addr16
loop
cwtl
aaa
scas
jbe
fiaddl
mov
or
aad
ds
pop
stos
in
cmp
iret
cld
sub
jmp
imulb
leave
repz
xchg
jmp
aam
mov
xchg
out
arpl
imul
push
fiadds
inc
xchg
cmp
cmp
xor
adc
sbb
out
xor
adc
lea
jecxz
pop
mov
xchg
imul
mov
movsl
xchg
mov
test
adc
sbb
leave
out
lods
mov
dec
jb
and
dec
mov
xchg
repnz
sub
js
lahf
testb
push
aad
outsb
outsb
mov
sbb
lods
movsb
in
xor
sbb
dec
addb
insl
cmp
push
pop
adc
and
bound
mov
stos
xlat
outsl
test
inc
lock
loope
jns
mov
cld
rorb
mov
mov
out
mov
test
sub
mov
pop
inc
lods
jle
out
daa
sub
add
cmpsb
pop
mov
sbb
add
jmp
mov
mov
mov
scas
sub
out
and
cmp
pop
ss
enter
xchg
out
adc
fldl
fs
mov
js
inc
inc
mov
shrl
jno
out
mov
pop
cmp
scas
sbb
mov
out
dec
mov
sub
cmp
aaa
dec
int
xchg
stos
sbb
sub
dec
ljmp
push
repz
out
xchg
rclb
ret
sti
add
adcb
cmpsl
fwait
cmc
jp
inc
lret
loop
cmpsb
out
out
jae
pop
leave
and
ds
jbe
out
push
iret
mov
out
push
dec
fidivrs
call
and
sbb
xlat
scas
xchg
addr16
fildll
or
jecxz
repnz
add
push
jg
jnp
xlat
dec
repnz
mov
stc
pop
fistpl
dec
jg
adc
out
insb
push
pop
ret
popa
push
jecxz
and
sub
cmovbe
adc
xor
in
lcall
xor
mov
mov
pop
sbb
andb
jp
gs
cmpb
sti
test
das
movsb
or
pop
sub
call
jl
loop
and
test
jp
and
or
mov
imul
int3
dec
adc
dec
xor
rorb
adc
and
lahf
add
pop
mov
fbstp
sub
stc
jp
jbe
or
push
dec
cmp
lea
in
jae
call
lret
sub
lret
mov
sbb
xlat
clc
mov
xchg
mov
xchg
es
and
lcall
dec
fstl
inc
push
andb
rclb
and
in
pop
out
add
int
push
mov
lret
xchg
into
adc
jp
mov
cmp
lods
mov
sub
pop
xchg
insl
sbb
leave
add
pop
xchg
fstps
subb
rcrb
es
push
lods
test
js
sub
inc
mov
subl
cmc
cltd
iret
sub
jnp
ss
pop
mov
or
jb
lea
push
sbb
pop
ficoml
xlat
cmc
iret
std
mov
inc
insl
jb
cld
out
punpcklwd
jne
push
or
mov
int3
xor
xchg
mov
test
push
cltd
jno
imul
push
push
push
addr16
xor
fcomps
jge
arpl
scas
js
adc
mov
outsl
sub
shr
lds
rorl
std
sbb
push
xchg
dec
ror
icebp
cs
pop
xchg
aaa
lock
xchg
jp
daa
lcall
iret
int3
fwait
cmp
out
popf
aad
inc
mov
aas
dec
insb
jp
add
sahf
ljmp
rcrl
hlt
aas
int3
pop
mov
int
pop
mov
push
and
dec
loopne
test
add
inc
xor
push
mov
cmc
dec
cmp
subb
loopne
lret
adcb
xor
jns
push
cmp
jmp
ret
aaa
add
inc
fsubl
push
pusha
sub
out
inc
pop
sahf
jb
fnstsw
mov
dec
daa
jp
mov
jecxz
adc
pop
jp
mov
fdivs
dec
test
xor
loope
in
scas
and
shlb
in
mov
mov
mov
mov
and
ror
dec
mov
dec
xchg
popw
movsl
mov
xchg
mov
scas
mov
adc
sub
lds
movsb
mov
enter
or
mov
sub
dec
xor
inc
aaa
sbb
imul
bnd
dec
mov
shrl
out
test
xchg
add
out
stc
pop
xor
inc
xor
fmulp
mov
pop
aad
ss
and
jge
jae
popa
stos
outsb
and
pop
adc
fisttps
xor
add
hlt
dec
pop
mulb
and
mov
mov
outsl
xchg
pop
jno
lods
pushf
mov
mov
notb
sarl
cmpsl
sarl
add
mov
xchg
and
into
ljmp
push
fdivp
ret
pop
lahf
push
aad
pop
adc
inc
or
bound
cld
mov
fwait
sub
push
pop
es
mov
fbld
mov
lahf
dec
push
int
push
push
out
in
mov
test
sti
int3
or
push
and
sub
lock
dec
xor
cmp
insl
cmp
inc
outsl
jl
mov
idiv
pop
mov
pushf
lods
sub
push
pop
inc
out
mov
or
test
sub
repnz
mov
stos
xchg
fsubrl
xchg
mov
jo
sbbl
mov
fbstp
jo
or
push
xor
rcll
xsha1
cmpsb
dec
popf
shl
pushf
push
sub
mov
jg
inc
andb
and
lret
cld
mov
and
mov
sbb
mov
push
cmpsb
daa
push
test
xchg
push
cmp
pop
push
std
dec
fsts
aaa
push
or
mov
clc
arpl
lahf
add
xchg
xlat
add
dec
enter
insb
out
clc
fimull
jae
cmpsb
mov
dec
cmp
sbb
out
cltd
ror
mov
inc
aad
xchg
mov
and
jnp
adc
push
pop
stos
fildl
or
test
inc
loope
sti
sbb
mov
and
dec
sub
xchg
das
test
cs
mov
jae
cmpsl
mov
aad
sub
mov
push
mov
fs
sub
cmp
lods
pusha
call
cmp
je
add
sub
jns
and
data16
fiaddl
rorb
sbb
aaa
adc
xor
adc
jnp
enter
jns
dec
and
cli
pusha
adc
add
cmpsl
push
stc
imul
stos
push
mov
push
fs
add
shl
jbe
gs
shlb
add
rep
jge
aad
and
or
and
fcompl
popa
iret
repnz
enter
cli
mov
inc
shlb
js
lods
aas
dec
jl
jnp
dec
repz
mov
xorl
leave
test
in
xlat
inc
jb
in
pop
add
and
lret
cwtl
dec
add
test
lcall
pop
loope
lods
stc
xchg
mov
andl
inc
stos
mov
add
cmp
add
sbb
sarl
test
add
subl
pusha
add
aas
add
inc
lahf
mov
std
stos
rcrb
divb
leave
cmp
pop
sahf
insl
jge
lods
icebp
pop
leave
mov
lea
mov
pop
pop
sub
mov
lds
push
sub
flds
inc
out
inc
fmuls
sub
outsl
add
adc
cmc
js
bound
in
in
jne
jbe
sbb
inc
fs
sbb
pop
cmp
fildl
add
arpl
cmp
lahf
push
adc
mov
pusha
sub
jae
rcl
insb
jne
pop
mov
incb
dec
jmp
and
nop
ljmp
decl
inc
xor
push
ljmp
rol
mov
inc
lret
cld
jge
in
ret
add
add
ss
lods
outsw
mov
inc
jp
cmp
mov
push
loopne
cld
pushf
jg
js
cmp
jp
push
mov
outsb
push
or
cmpl
adc
fwait
sbbb
mov
xchg
cmpsl
sub
mov
dec
testb
xor
push
mov
inc
popf
test
jns
stc
add
fwait
jp
add
arpl
imul
ficoms
and
push
ljmp
pop
add
std
xor
call
mov
or
sar
outsb
jae
push
das
ds
push
mov
push
cs
jne
gs
aad
loopne
rorl
loope
push
scas
sbb
inc
mov
jae
lahf
sbb
and
push
jge
jmp
dec
cmpxchg
mov
lods
sar
sub
push
cwtl
add
mov
push
xor
cmp
fldt
ss
pop
hlt
cmp
les
testl
addb
test
jno
adc
scas
rclb
loopne
jno
mov
cmc
js
adc
sbb
aaa
and
jo
ljmp
jns
in
and
out
pop
mov
xor
or
int
lods
test
fsubs
cmp
mov
mov
ret
insl
lea
add
stc
push
cmp
sub
jo
movsb
adc
fdivrp
push
mov
sub
inc
add
insl
das
mov
push
push
and
ja
pop
outsl
add
repz
xchg
shrl
and
rorl
lahf
roll
cmp
enter
push
lods
aam
push
stos
cmp
fadd
test
ja
lret
sbbl
mov
aam
adc
inc
sub
sbbb
jmp
test
push
cmc
cld
add
sbb
std
adc
fldl
in
fnsave
xchg
mov
cmp
mov
std
add
mov
fadd
and
xor
xchg
adc
jne
push
sbb
xchg
and
push
dec
sahf
jge
mov
mov
inc
icebp
mov
aad
in
adc
iret
dec
mov
cld
adcl
dec
add
lahf
sbb
push
pop
cld
pop
clc
loop
jg
jg
pop
cli
cmpsb
mov
ds
aaa
mov
pop
jo
leave
test
inc
jle
call
or
sub
lods
add
popa
idivl
push
lods
jl
stos
jg
mov
xchg
xchg
push
aam
jl
mov
mov
inc
jmp
add
and
aas
and
xchg
std
sbb
jno
enter
cmp
cwtl
stos
jnp
xorl
xor
pop
cmp
cmp
pop
inc
lock
lea
add
cmp
adc
mov
dec
dec
and
or
das
lret
and
pop
fdivrl
adc
xorl
cmpsb
loop
loopne
inc
ret
xlat
orl
dec
dec
lods
roll
clc
sub
push
inc
dec
inc
inc
inc
pop
test
xor
in
pop
inc
add
cs
sbb
sahf
inc
div
xor
add
daa
shl
gs
sbb
mov
inc
sarb
fisubrl
pushf
imul
jmp
xchg
aas
aas
pop
mov
or
mov
lea
mov
fistpll
pop
fdivl
test
movsl
dec
adc
mov
mov
or
ljmp
pop
mov
or
add
jmp
mov
fistl
pop
xchg
xchg
cmp
sub
ljmp
sti
iret
enter
daa
in
fisubl
mov
inc
sbb
sub
jmp
call
jo
add
jo
orl
sub
push
jne
andb
push
mov
mov
pop
pop
pop
enter
addr16
adc
adc
mov
je
pop
rol
jge
add
aaa
fcmovnb
sbb
push
push
jecxz
ret
idiv
and
xor
addr16
out
stc
mov
mov
fldcw
lods
jae
cmpl
dec
pop
aam
ret
or
cmp
sub
insl
inc
mov
cmp
stos
std
dec
mov
rcl
jo
add
mov
idiv
sub
shrl
cmp
sub
scas
ja
xorl
cmpsl
ret
testl
jns
in
push
outsb
outsb
lcall
cmp
adc
ss
cwtl
pushfw
sbb
push
shrb
leave
sub
data16
mov
std
push
jno
adc
jns
or
mov
dec
cmc
sub
fisubrl
xchg
sub
imul
shl
fsubrl
sub
ret
push
mov
fwait
cli
arpl
dec
cmp
xor
cmp
jbe
daa
or
pushf
lods
aam
jmp
cs
add
popa
lcall
and
xor
jbe
mov
mov
mov
sub
ljmp
movsl
movsl
imul
lods
mov
mov
adc
cmc
lret
push
lret
push
arpl
cld
jecxz
mov
cmp
pop
jl
dec
ss
mov
lahf
pop
or
imul
pop
outsl
xchg
mov
push
shll
out
lods
mov
int3
push
add
popf
mov
and
push
ljmp
dec
icebp
add
mov
mov
sub
lods
rorb
add
int3
fucomip
sbbb
fildll
adc
ljmp
imul
push
fsub
sub
and
cs
adc
cld
jbe
enter
mov
xchg
inc
gs
mov
sub
js
icebp
xorl
xor
add
push
jmp
sahf
inc
stos
ljmp
in
cmp
call
xor
dec
mov
adc
ljmp
xorl
mov
xchg
cli
aad
es
jecxz
jp
repnz
inc
call
pusha
insl
add
mov
pop
dec
sarb
addr16
shll
xchg
pop
mov
mov
rorb
adc
pop
test
mov
rcrb
test
clc
cmp
in
mov
cwtl
mov
jg
or
sbb
xor
jmp
lods
lret
jnp
std
mov
and
mov
and
iret
addr16
mov
add
fcoml
mov
xchg
push
mov
or
rorb
fisubrl
fistps
fwait
cmp
insl
inc
inc
data16
dec
push
cmpl
shll
cmp
cld
mov
sub
subb
lock
in
rclb
xor
xlat
mov
xor
dec
push
movsl
inc
pusha
push
mov
dec
pop
mov
jl
pop
lds
cmp
movsb
out
push
or
sub
roll
xchg
into
rorl
leave
xor
fwait
negl
inc
nop
add
inc
loopne
or
jge
lods
es
std
movsb
inc
loop
sub
in
push
mov
mov
rol
pop
test
andb
test
daa
in
gs
stos
mov
adc
or
loop
mov
stos
lahf
sar
pop
andl
add
inc
leave
bnd
bnd
jb
ss
lea
js
sbb
inc
jl
call
add
mov
in
rcr
push
xchg
dec
jp
jbe
fdivrp
outsl
stos
sub
in
jp
cmpsl
or
inc
or
or
mov
mov
cmpsl
dec
and
dec
outsl
movl
out
push
mov
mov
out
cmp
sarl
imul
jle
dec
cltd
arpl
cs
arpl
sarb
aam
dec
mov
mov
fisttpl
aaa
cmpsb
stos
xor
shlb
mov
ss
loop
sub
outsl
gs
pop
sbb
jecxz
pop
in
aaa
in
pop
repnz
mov
test
mov
inc
xchg
sti
or
enter
inc
adc
xor
scas
rorb
lock
pop
imulb
and
orb
ret
test
in
pop
out
dec
icebp
je
stc
mov
xor
inc
push
mov
jb
fucomp
fstps
lds
idivb
decl
jmp
test
int
jg
repz
scas
mov
adc
mov
xor
xlat
cltd
es
adc
or
ss
sar
xchg
xor
mov
mov
adc
mov
ds
mov
aaa
ss
jmp
dec
movsb
mov
shr
cmp
jns
hlt
and
xor
movsl
cbtw
xchg
test
jmp
rclb
pop
sbb
insl
ss
scas
ss
test
sub
mov
testl
movsl
push
fnsave
in
in
repnz
adc
outsl
std
cmp
adc
fwait
ret
mov
clc
or
nop
xchg
lods
push
or
xchg
jl
outsl
sbb
inc
dec
pop
icebp
or
xor
popa
sub
aam
insl
cs
cmpsb
mov
xlat
lahf
mov
mov
loope
out
fistpl
adc
xor
sub
add
cmp
inc
push
xor
mov
arpl
je
jle
jmp
pop
cmpsb
mov
pop
add
mov
push
cltd
stos
xor
xor
mov
call
mov
xchg
sub
pop
iret
hlt
mov
push
add
sti
enter
pop
mov
sbb
or
mov
xor
lock
inc
nop
pop
pusha
mov
xor
cmpsb
aas
or
inc
dec
cmc
outsb
stos
xchg
mov
push
push
test
add
icebp
jns
fcmovnbe
push
xchg
fcmovu
cltd
sbb
mov
or
into
arpl
scas
xchg
pop
imul
cmp
stos
push
out
mov
pop
pop
movsb
in
xor
cmpb
movsb
sahf
xor
mov
call
jae
push
xchg
es
test
int
jbe
enter
jb
pop
and
pushf
xor
mov
xlat
jle
add
adc
jbe
jmp
push
rcrb
adc
in
pushf
or
in
testb
js
push
iret
dec
ja
push
aas
jge
ficoms
stc
jmp
mov
or
sub
mov
mov
sbb
jp
mov
xchg
shl
ds
xor
mov
ds
insl
inc
xchg
orb
xchg
mov
sub
or
jle
mov
nop
jo
ret
loop
inc
cmp
xchg
cld
rcrb
outsl
mov
insb
je
ret
out
inc
inc
out
add
jns
out
lret
xchg
mov
in
inc
and
mov
cmp
push
test
loope
popa
call
sub
mov
and
inc
inc
dec
pop
rol
push
imul
int
sbb
loop
out
rclb
mov
xchg
cmc
add
mov
xor
inc
pop
add
arpl
ljmpw
sub
mov
inc
mov
mov
xchg
cmc
icebp
hlt
test
clc
add
jl
in
mov
dec
add
xor
lods
pop
adc
pop
xchg
mov
fdivl
and
addr16
xlat
icebp
or
xor
sahf
cmp
add
sub
ss
push
mov
pop
push
sahf
cmp
xchg
iret
lret
outsb
xchg
push
loope
cwtl
dec
cmp
lea
sbb
mov
xchg
inc
cmp
mov
cs
mov
xchg
sub
mov
pusha
enter
jnp
xor
insl
int3
jmp
nop
jecxz
sbb
lods
add
bound
dec
mov
xchg
jg
xor
dec
stos
mov
aam
xchg
es
ret
pushl
aas
ret
cmp
in
mov
adc
mov
and
dec
pop
dec
pop
xchg
lods
or
test
and
push
shl
subb
outsb
jbe
cs
add
mov
ljmp
loope
sub
push
adc
add
dec
fucomi
pcmpeqd
bound
sbb
sbb
xchg
mov
xchg
pop
jae
cld
loop
in
push
sbb
dec
add
xor
jecxz
pushl
cmp
fs
dec
mov
scas
out
rol
inc
es
shll
adc
and
movsb
push
cmp
in
div
xlat
mov
xchg
shl
mov
cld
mov
and
outsl
ljmp
push
mov
scas
sti
jmp
cltd
mov
adc
cmp
sbb
aaa
js
out
xchg
sarl
mov
jnp
cmpsl
push
fisubl
pushf
ljmp
xchg
cmc
addr16
xor
cwtl
sbb
sahf
mov
push
subl
aam
or
lret
fnsave
cmp
movsl
add
xchg
in
in
popf
mov
mov
fidivl
lods
xor
stos
pop
sub
xchg
icebp
cmp
jp
jae
jmp
mov
adc
sub
mov
cmpsl
movl
add
scas
lock
jl
pop
push
fldt
sbb
in
lcall
push
ljmp
into
cmp
mov
imul
dec
xchg
jmp
xorb
and
ljmp
bound
je
push
cmp
ret
xor
mov
daa
sbb
jg
cmp
sub
mov
outsl
cmp
in
inc
bound
push
outsl
es
lds
push
or
insl
mov
int3
adc
inc
adc
adc
push
cmp
lods
cmp
and
cmpsb
pop
push
shrl
xor
es
fwait
and
or
jae
movsl
insb
pop
dec
pop
pop
neg
into
out
push
call
cld
sub
push
dec
xchg
mov
test
push
mov
or
push
mov
sub
jns
mov
dec
adc
jmp
sub
gs
mov
in
jb
int3
stc
mov
xchg
cmp
adc
aas
cmpsb
sti
mov
add
imul
mov
pop
call
adc
xorl
push
je
xor
fimull
push
push
ljmp
outsl
push
or
shll
mov
dec
push
inc
jo
lods
sub
std
inc
out
xor
notb
xchg
jl
mov
in
add
sbb
and
mov
test
imul
cltd
stos
pop
movsl
movsb
push
ret
and
push
adc
aaa
adc
dec
pop
ret
sbb
push
leave
or
out
xor
push
fisubl
inc
cmp
std
add
test
ds
mov
jmp
in
sbb
mov
popa
pop
and
xchg
and
sbb
outsb
pop
sub
loope
and
in
mov
sbb
mov
loopew
mov
sub
jp
mov
lea
in
push
ja
cli
jge
shl
push
les
xchg
incb
mov
in
mov
test
aad
sahf
mov
lret
int
jnp
mov
pusha
repz
insb
jno
sahf
nop
je
icebp
pop
fistpl
lock
les
ret
flds
add
jmp
out
call
push
or
xlat
loopne
fdivs
flds
add
repnz
scas
jnp
sub
inc
jecxz
cs
cmp
icebp
xchg
fiaddl
aam
adc
ret
adc
cli
xchg
mov
pop
jl,pn
cmp
loopne
ret
int
insb
inc
pop
std
pop
add
dec
lret
cld
clc
inc
je
dec
mov
cmp
push
mov
mov
clc
or
pop
push
imul
test
inc
push
addr16
test
and
pop
out
out
sub
mov
pop
pushf
popa
pop
cmp
sti
inc
xchg
popf
xchg
add
adc
mov
xor
mov
lods
dec
rcr
mov
sub
sub
jno
mov
hlt
ficompl
cwtl
divb
xor
add
testl
in
lock
mov
movsb
je
sbb
and
fsubrl
dec
or
push
or
insb
or
mov
jle
inc
push
xchg
pop
dec
hlt
sti
and
stos
xchg
cs
or
push
stos
rorb
pusha
cmp
cmp
mov
pop
imul
rcl
inc
sbb
xchg
pop
cmpsb
cmp
xor
mov
aas
xchg
xor
into
int3
popa
mov
mov
lock
pushl
repnz
stos
clc
leave
notb
out
push
xor
out
lcall
sbb
mov
lods
lock
mov
mov
add
jle
jno
mov
inc
jno
loope
daa
xor
andl
push
push
and
jmp
fs
xchg
mov
mov
adc
cs
call
or
sub
dec
sbb
cmp
cmc
or
push
cmp
popa
or
out
mov
push
inc
ds
sub
aad
in
mov
stc
pusha
mov
aad
jae
imul
add
mov
and
popf
sbb
sub
outsl
sub
sbb
rolb
jne
mov
leave
arpl
aad
les
sub
scas
push
pop
mov
enter
mov
arpl
enter
jmp
adc
push
jbe
mov
test
xchg
rclb
leave
pop
mov
xor
cltd
xor
add
xlat
pop
ds
push
inc
xor
push
fistpl
ljmp
repz
jg
cmpsb
jp
add
xchg
mov
pushf
in
lret
push
and
fisttpl
rcl
adc
lret
in
leave
pusha
and
sti
xor
pusha
mov
mov
cmp
pop
adc
adc
cwtl
negb
jp
push
xor
data16
mov
and
or
xor
push
xchg
aaa
and
faddp
push
xchg
mov
mov
jo
and
pop
jae
fildll
rorb
repz
xchg
cmpsl
loopne
pop
fiadds
xor
push
pushf
sub
es
jge
and
call
scas
adc
and
xor
push
outsb
bound
insl
mov
or
xchg
xchg
jg
jns
mov
xor
outsb
gs
sub
not
lds
divb
sub
pop
inc
and
je
scas
out
js
xchg
sub
lret
sub
cmp
in
push
sahf
dec
push
jg
cmp
dec
jo
jmp
shlb
nop
push
in
xchg
into
stos
ret
outsl
push
inc
cmpl
xor
hlt
or
push
dec
and
xlat
insb
int3
xchg
mov
mov
std
xlat
adc
fwait
bound
movups
mov
xor
aaa
sub
mov
mov
mov
jo
fldcw
aas
je
and
scas
dec
stos
mov
lahf
test
push
jbe
bound
mov
mov
adc
inc
test
sarb
stos
pop
imul
pushf
mov
xchg
ror
jne
fnstenv
add
add
dec
sbb
xor
mov
cmp
mov
ljmp
mov
cmp
jge
mov
mov
pushf
fsts
jae
in
mov
js
sbb
pop
mov
insl
movsl
lret
ret
lea
test
out
iret
cmp
cmp
jg
adc
pop
aam
cmp
dec
clc
addr16
xchg
mov
ds
ret
jecxz
xor
addr16
ret
mov
fdivl
pushf
test
push
test
xor
daa
jp
fistpll
mov
add
out
jb
inc
sbb
leave
shlb
mov
mov
add
cmp
xchg
lods
cmpsb
dec
sbb
std
scas
jb
or
dec
mov
js
push
add
outsl
jg
and
xchg
imull
or
add
mov
pop
jl
cmp
xchg
nop
int
cs
hlt
and
jbe
das
out
aad
leave
jmp
cmp
push
js
into
sub
pop
dec
aad
mov
or
push
lods
arpl
jno
fdivl
sbb
dec
icebp
inc
xor
sub
or
scas
xor
push
icebp
pop
xchg
pop
aas
or
cld
cmp
pop
mov
stos
stos
das
out
les
add
aad
idivb
xor
sub
push
inc
xchg
mov
std
mov
stos
pop
xchg
sbb
mov
and
xchg
in
popa
test
push
test
out
lods
cmp
mov
les
les
in
or
or
fsubs
jne
pusha
sub
ljmp
jecxz
sub
push
sbb
jle
in
mov
aam
bound
mov
in
mov
ret
jnp
adc
ret
or
and
movups
mov
sbb
pop
sub
push
test
in
mov
mov
pop
sbb
mov
mov
lods
mov
cmp
je
mov
sbb
je
mov
insl
repz
adc
jae
push
push
lea
arpl
jb
lcall
imul
jb
jo
sub
jmp
fwait
jns
int3
stos
es
or
add
mov
mov
and
xchg
or
cltd
jo
fs
sbb
inc
mulb
push
repnz
mov
xchg
and
jl
aas
push
testb
add
cmp
arpl
ja
sub
js
bound
imul
roll
cmp
pushl
push
jae
xchg
daa
insb
pop
cmpsb
adc
scas
pop
loop
movsl
add
arpl
xor
lahf
insb
sbb
push
push
je
ret
inc
pop
sbbl
jle
stos
push
jno
inc
xor
push
pop
out
mov
and
xchg
mov
sti
push
dec
out
testb
std
call
inc
lahf
mov
xchg
std
gs
data16
push
push
fstpl
bswap
lods
test
stos
xchg
stc
adc
jne
test
imul
pop
xchg
push
adc
loopne
cmp
xor
mov
mov
add
xlat
pop
sub
adc
mov
fnstsw
pop
jle
insl
xchg
ret
fs
inc
inc
frstor
xchg
mov
pop
cmpb
jne
test
xor
mov
aad
scas
inc
or
sbb
mov
mov
push
sub
in
hlt
mov
xor
imul
gs
orl
push
cmc
dec
test
ds
or
cmpsl
xchg
sbb
inc
dec
mov
adc
mov
test
mov
hlt
jns
dec
jl
add
cltd
icebp
imul
mov
and
in
sti
sbb
pop
pop
insl
adc
test
std
mov
jo
pop
lea
pushf
fisttpl
mov
aaa
adc
lds
jle
out
addr16
pop
add
jo
jne
sbb
daa
jnp,pn
enter
inc
mov
roll
pop
stos
loope
and
gs
mov
scas
sub
xchg
push
out
mov
sti
cmpsl
into
pushf
out
push
mul
fidivrl
xchg
pop
cs
std
mov
orl
lret
push
push
scas
lods
inc
pop
push
xchg
ror
mov
pop
pop
mov
lahf
cmpsl
mov
adc
addb
mov
xchg
out
mov
movsb
flds
sub
mov
in
xchg
jne
or
xlat
mov
cmp
push
dec
add
mov
mov
insb
mov
dec
adc
outsb
jno
jg
out
lret
in
hlt
insb
mov
std
ret
dec
pop
mov
mov
hlt
and
scas
pushf
dec
and
in
loop
xchg
xchg
mov
cmp
pop
mov
sub
scas
out
add
into
sbb
push
js
aam
icebp
shll
sbb
std
and
inc
adc
cs
adc
int3
jbe
sub
int
fnsave
cld
loopne
xchg
addr16
mov
mov
mov
mov
mov
pushf
ss
out
mov
dec
xor
cmc
mov
fisubrl
aaa
cmpb
cmp
push
insb
dec
adc
xor
and
xlat
pop
adc
ljmp
cmp
insl
cmp
test
movsl
jb
mov
leave
adc
mov
dec
mov
ljmp
add
add
adc
lret
dec
int
adc
cld
test
jl
mov
testl
mov
jmp
lahf
pop
aas
mov
repz
popf
sub
cwtl
repnz
xor
test
dec
jne
adc
xchg
test
mov
lahf
pop
mov
stos
pop
inc
fwait
clc
jae
cli
push
jp
sub
in
mov
int
mov
hlt
and
test
sub
dec
xchg
xchg
mov
popf
mov
call
pop
pop
int3
in
les
sbbb
mov
ret
mov
sbb
mov
jmp
push
push
xor
sbb
int
fcmovnb
sti
insl
lret
test
and
insl
inc
sbb
and
popa
test
mov
mov
in
mov
xor
loopne
xchg
cltd
jge
push
test
leave
in
sahf
fistl
loop
sbb
insl
arpl
dec
insb
sarb
loop
aam
loope
or
mov
jmp
das
push
sub
rcl
pop
aas
mov
and
sti
xchg
aad
mov
ja
movsb
xchg
ja
mov
jecxz
mov
push
lea
mov
or
or
stos
sub
sbb
andb
push
cmpsb
out
mov
ret
xchg
divl
sub
jns
imul
mov
lret
xlat
out
jae
mov
lods
or
shlb
and
cmc
mov
fcmovnbe
in
iret
add
xor
xchg
jg
mov
subl
xchg
pop
add
xchg
pop
sbb
add
push
xchg
loop
inc
jae
int
js
and
out
dec
rcll
mov
xchg
stc
and
xchg
cmpsl
in
lods
nop
cwtl
dec
in
add
sub
aam
mov
ret
fs
sahf
inc
aam
sbb
cmp
sub
mov
test
sahf
mov
lds
push
out
insb
adc
jmp
or
xor
mov
sbb
out
lea
xchg
shl
aas
dec
insb
stc
dec
pop
jg
rorl
push
shrb
jle
dec
int
inc
inc
ja
das
in
jns
dec
lea
iret
jge
mov
test
mov
into
sahf
xchg
lcall
adc
inc
leave
imul
lcall
jno
cmp
scas
ja
sbb
jne
cs
stos
xor
and
mov
scas
fldenv
cs
inc
jnp
cmpsb
pop
pusha
dec
out
pop
aad
ret
ljmp
test
cwtl
lods
adc
xchg
xor
adc
xchg
pop
movsl
xchg
gs
jno
std
sub
xorl
adc
enter
mov
pop
mov
shlb
xchg
subl
ljmp
mov
sbb
and
imul
mov
test
mov
fcoms
sub
jns
ret
fimull
clc
loopnew
dec
shll
call
lahf
add
jl
cmpsb
lods
aam
xchg
xlat
jg
lcall
xor
xchg
stos
aaa
or
mov
icebp
cwtl
fdiv
aaa
popl
lods
xor
pop
push
add
loop
test
andl
sub
mov
mov
out
es
jo
or
and
pop
jmp
fsubrl
sub
fistps
xchg
sbb
mov
cmp
ret
mov
adc
push
and
loop
lcall
test
push
inc
and
or
stc
xchg
lds
les
jno
push
fcmovne
or
test
shl
lahf
adc
cmpsb
xor
mov
mov
fiaddl
and
das
mov
mov
xchg
mov
popf
cli
lcall
or
jl
push
imul
scas
imul
jb
loop
push
or
jno
xor
lods
popa
and
mov
stos
mov
rolb
and
or
cmp
cmc
es
je
bound
cli
pop
dec
ret
or
jnp
cmp
stos
imul
sub
sub
dec
ljmp
jp
adcb
xchg
mov
or
xor
mov
push
or
sti
mov
stos
out
and
mov
std
imul
shrl
or
fs
lock
in
jbe
loop
pusha
sub
sbb
das
dec
es
mov
inc
in
sub
int
icebp
rorl
mov
mov
adc
mov
dec
idiv
shrb
das
xchg
jmp
pushf
sbb
lahf
sbb
dec
rolb
jl
fcomip
or
lods
out
out
inc
pop
and
movsb
cltd
mov
scas
repz
shll
or
adcl
add
insl
enter
add
in
jns
sbb
push
inc
and
pop
fstl
fldl
sbb
jne
mov
jae
add
add
inc
adc
ds
insb
shr
cmp
js
sbb
jle
icebp
cld
das
lock
insl
sub
pop
mov
cld
lds
lods
cmp
mov
ror
inc
xor
pop
inc
adc
mov
out
and
xchg
out
rol
or
pop
stc
mov
and
mov
mov
mov
xchg
cmc
out
xchg
xlat
lret
je
xor
inc
test
sbb
sti
adc
lahf
lods
mov
in
daa
ret
sbb
lds
clc
ja
sbb
pop
lds
pop
xchg
xor
xlat
xor
loope
adc
mov
insb
pop
rcrl
inc
les
inc
cmp
adc
xchg
add
and
out
push
add
pop
leave
cmp
daa
mov
das
mov
ljmp
pop
mov
scas
sub
jge
psrld
push
test
jo
lods
and
test
cmpsb
add
sahf
xchg
je
or
push
jo
pop
aam
ret
cmp
add
das
add
imulb
lods
inc
sbb
adc
dec
out
insb
or
dec
sub
pop
outsb
sbb
in
jg
dec
in
mov
cli
jmp
or
xor
jnp
movsl
jle
jle
data16
leave
lret
das
cli
int
cs
int3
dec
inc
dec
xchg
pop
jnp
xor
loop
add
cmp
cmpsl
lret
clc
cmpsb
nop
fcoml
push
sahf
insb
test
sub
dec
aam
xchg
pop
es
sub
push
cmp
int
addr16
scas
xor
xchg
cwtl
ja
jbe
jbe
or
add
push
inc
jnp
adc
inc
icebp
inc
adc
xchg
std
pop
jno
push
aaa
cmpsl
fsubp
xor
pop
mov
sub
fstps
pmulhw
imul
pop
cmc
mov
js
pop
adcl
sahf
out
sub
repnz
sub
es
sarl
fldl
popa
mov
push
mov
pusha
popa
xor
lds
mov
jg
aaa
cld
aad
sub
jnp
lock
lods
cmc
mov
pop
int3
fimull
pusha
in
stc
bound
lods
mov
test
cmp
mov
pop
test
xchg
push
mov
dec
ss
pop
push
rorb
cli
cmc
loop
mov
fwait
pop
sub
fdivl
idivl
cltd
ret
imul
cmc
adc
mov
inc
faddp
out
pop
sarl
idivb
xor
mov
cmp
pop
out
mov
cld
adc
and
outsl
cmpl
arpl
lret
icebp
sbb
lcall
das
pop
pop
cltd
jecxz
movsl
adc
push
sti
dec
push
out
mov
mov
and
data16
scas
inc
pusha
arpl
imul
xor
ljmp
mov
add
out
lret
out
dec
js
aam
push
inc
insl
cmpb
fimull
push
add
icebp
cli
jae
jle
fdivrs
mov
jno
fdivrp
lea
cmpsb
dec
jno
sahf
add
push
dec
inc
cmp
sub
xor
adc
mov
in
mov
mov
cltd
scas
fidivl
mov
mov
push
punpcklwd
adc
lret
sub
jge
mov
imulb
aaa
lahf
dec
cmpsb
xchg
mov
icebp
lods
jns
loop
or
das
sbb
arpl
icebp
cmpsl
pop
insb
loope
shrl
jecxz
jl
lea
dec
inc
jmp
xchg
xor
mov
sub
dec
fdivl
mov
xchg
icebp
sbb
sub
ror
outsw
call
jp
mov
pop
and
inc
movsl
sbb
adc
adc
mov
dec
adc
out
cmc
jge
pushl
push
inc
cwtl
ljmp
mov
ljmp
mov
hlt
fisttps
inc
mov
in
inc
fwait
dec
or
sbbl
mov
mov
ret
das
pop
fs
test
mov
aas
xchg
lea
mov
cs
stos
xchg
aad
in
outsb
xchg
vmovshdup
idivb
or
and
dec
ret
push
call
je
cltd
mov
push
ret
shlb
js
mov
xor
inc
lcall
mov
or
loope
add
ret
ja
sub
ss
lds
pop
pop
cmp
xchg
dec
xor
enter
loopne
push
dec
sarb
outsl
jle
insl
xchg
loopne
jp
pop
incl
int3
cmp
mov
aad
push
fmuls
fmul
insl
call
outsl
mov
adc
insl
xchg
xor
psraw
mov
xchg
add
test
clc
add
and
pop
lret
orb
jle
es
mov
or
dec
xor
je
mov
xchg
and
jge
or
dec
shll
insb
mov
xor
icebp
sahf
ret
mov
outsl
pop
jge
xchg
xchg
mov
lret
adc
cmpsb
rcl
scas
xchg
pop
popf
jl
cmp
and
cwtl
into
or
pushf
adcl
ficoml
dec
addr16
jg
dec
sahf
mov
sbb
mov
ret
aam
lahf
inc
sub
cmp
in
arpl
inc
addl
add
shlb
sub
sbb
les
mov
jp
sub
jg
movsb
cmc
test
adc
hlt
insb
sub
sub
pop
jbe
jbe
leave
xchg
es
pop
ret
xchg
mov
movsb
sbb
adc
outsl
scas
mov
aas
mov
inc
iret
hlt
lret
test
and
std
pop
test
popa
and
sbb
nop
jecxz
add
in
clc
enter
ret
into
aam
rcll
notl
or
xchg
adc
bound
shll
iret
adc
or
xchg
flds
insb
insl
inc
push
jne
sub
ret
ss
mov
subl
dec
movsl
es
icebp
leave
add
mov
dec
and
mov
out
inc
push
adc
jns
mov
enter
mov
adc
xorl
cwtl
jge
jecxz
and
and
jg
aas
jg
sbb
sub
stos
cmpsl
popa
adc
ror
push
pusha
jmp
xor
add
adc
cld
les
cmp
andb
out
mov
shlb
pop
jmp
mov
lods
add
inc
jp
push
or
push
data16
mov
rcrb
push
jb
jo
dec
out
pop
add
fidivs
rorl
shll
xchg
movsb
pop
mov
push
sub
int3
roll
out
rcrl
push
xor
add
mov
fimull
jecxz
popa
ds
lea
leave
lret
out
pop
mov
sarb
inc
imul
sbb
sub
andl
call
mov
mov
fldenv
fdivl
adcb
imul
push
push
jb
inc
mov
jle
add
test
xchg
popa
imulb
xchg
bound
jo
rcr
dec
xchg
sub
clc
dec
sub
js
outsl
jne
mov
or
scas
inc
rclb
jmp
repz
shlb
std
adc
push
xchg
adc
lods
mov
jmp
xchg
mov
int3
pop
pushf
or
movsb
bound
mov
mov
mov
mov
and
adc
movsl
mov
shrb
inc
xchg
ds
ja
cmp
adc
hlt
test
mov
in
lahf
sbb
mov
jno
jae
push
mov
es
jns
mov
jns
sbb
adc
lods
sub
outsb
or
and
mov
popa
nop
test
repz
and
clc
into
dec
push
sub
in
cmp
stos
mov
pop
bound
or
and
fidivrl
mov
in
in
ffreep
adc
std
lods
sbb
repnz
scas
sub
cs
ja
cltd
sbb
push
and
xchg
or
jg
xchg
in
sub
pop
cmp
mov
js
ret
mov
mov
leave
pop
fs
cmpsl
ljmp
adc
mov
sahf
sbb
inc
jg
xchg
popf
mov
shrb
clc
jmp
add
cmc
mov
pop
cmp
jo
xchg
cmpl
flds
adc
pop
adc
outsb
cs
jbe
popa
mov
sbb
mov
mov
ret
or
add
or
insl
sar
int
sbb
sbb
mov
mov
sub
sbb
inc
or
xlat
loope
sbb
rorb
fstp
push
lret
cmpsb
mov
adc
push
jle
fistpl
adc
repz
outsl
and
imul
aad
loope
in
jl
pop
adc
stos
mov
and
sbb
xor
movsb
lods
lcall
cs
je
add
jp
leave
ljmp
outsl
sbb
cltd
shl
push
add
mov
fisubs
or
and
mov
pop
add
adc
rcrb
push
pusha
xlat
xor
into
stc
mov
mov
lret
fs
cli
cmp
mov
mov
popa
push
sbb
push
sahf
outsl
gs
and
shlb
lret
pop
sbb
jb
fimull
push
aad
test
ja
mov
adc
and
sub
or
sbb
or
addb
imul
ds
cmpsl
pop
inc
mov
js
sub
rcll
cmpsl
into
stos
push
shlb
xchg
dec
sti
mov
push
xchg
call
and
jne
push
repnz
outsl
dec
test
pop
jns
mov
sbb
aad
push
sub
and
adc
andl
fs
cmp
adc
js
movsl
cld
lods
lds
ja
insb
lret
imul
lods
in
mov
xor
push
xlat
fidivs
fisubrl
sub
pop
sub
xchg
daa
push
jae
fnstcw
jo
shrl
dec
push
mov
in
xor
cs
rolb
cmc
es
ret
pop
fsubrs
imul
sbb
jnp
in
scas
imul
dec
xlat
js
sub
cmpsb
addl
cmp
addl
pushf
test
cmpsl
fucomp
mov
mov
ficoml
adc
cmp
add
stos
adc
iret
shrb
and
push
mov
inc
pop
xor
ficompl
out
adc
lahf
test
outsl
mov
popa
ds
push
mov
dec
ljmp
aaa
sub
mov
add
imul
fisubrs
jno
sub
sub
inc
icebp
inc
jp
xor
lods
jle
in
testb
mov
or
mov
outsl
insb
cmp
lret
divb
fistpll
push
popf
into
nop
pusha
fsubs
xchg
fstps
stos
js
lret
sub
mull
sbbb
sub
jns
cwtl
mov
jmp
add
mov
and
inc
jno
call
imul
cwtl
cs
xlat
movsl
and
mov
xchg
mov
sti
loope
data16
gs
jg
pop
repnz
push
ss
push
notl
jne
or
mov
jno
inc
jns
xchg
push
scas
pop
roll
add
aam
rclb
or
lcall
in
pop
icebp
mov
cltd
rolb
mov
mov
inc
and
push
rcrb
mov
push
add
xchg
jbe
xor
cmc
repnz
or
adc
je
mov
hlt
adc
xchg
loop
xchg
mov
sub
cmp
outsb
divb
mov
negb
cmpsl
lds
sub
lcall
bound
xchg
cmp
mov
mov
xor
sub
add
xchg
mov
mov
mov
mov
sub
int
movsb
and
lods
mov
repnz
int
xor
icebp
lahf
push
test
adc
adc
fs
adc
stos
xchg
jp
push
lods
stos
push
cmpl
sub
daa
mov
inc
lcall
outsl
cmp
or
aas
adcb
in
dec
push
in
xchg
cli
cmp
arpl
jbe
sbb
test
push
cs
rcrb
nop
daa
mov
or
add
lock
movsb
stos
dec
aas
pop
nop
or
xchg
popf
sub
mov
aam
lahf
call
sbbl
adc
ret
lods
fistpll
adc
pushf
mov
or
and
adc
fs
adc
push
jge
sub
out
mov
or
sahf
fwait
sti
adc
sarb
jae
into
sub
lahf
jle
cmp
sub
adc
mov
lcall
idivl
jmp
dec
test
cmp
jns
pop
and
sbb
arpl
shrb
popa
aad
cwtl
jmp
mov
arpl
push
lea
inc
jns
xor
dec
hlt
iret
add
jecxz
sbb
ficoms
jno
mov
cmpsl
ds
int
adc
adc
push
sub
push
cli
jae
lea
adc
ds
das
ljmp
mov
cltd
mov
fdivs
lds
arpl
jecxz
jno
push
cmp
cs
insl
lcall
insb
dec
loopne
sub
jbe
fxtract
mov
enter
ss
mov
push
rcrl
das
fwait
repnz
jno
je
in
and
add
push
add
cmp
add
mov
jp
test
pusha
aad
mov
mov
aam
scas
jmp
xor
fiadds
imul
mov
mov
push
inc
mov
pop
cmp
scas
icebp
mov
sbb
jmp
xor
lahf
adc
mov
inc
mov
dec
mov
dec
push
ds
xor
adcb
popa
icebp
jg
push
out
cmp
xchg
sbb
xchg
fmull
lahf
ret
aam
or
mov
jmp
xchg
stos
push
jns
in
or
jnp
stc
mov
jno
inc
jmp
aaa
jmp
pusha
out
mov
or
call
inc
jge
add
xor
loop
sbb
lods
mov
iret
jb
xor
rorb
pop
or
pop
inc
outsb
aas
jge
stos
in
scas
mov
test
jno
jg
fwait
mov
and
mov
insb
ja
jno
dec
ficompl
fs
lahf
pop
sub
dec
mov
jo
xor
mov
mov
cmpsl
inc
ds
jns
adc
add
dec
mov
mov
dec
rclb
xchg
stc
pusha
rolb
stos
or
fcmovbe
jecxz
push
cmp
daa
sub
popa
pop
loop
xorb
in
loopne
cmp
inc
gs
cmp
inc
pop
fwait
mov
dec
mov
scas
cmp
cmc
aas
call
mov
or
sbb
push
push
dec
mov
lahf
mov
fcomp
mov
inc
xor
sub
cld
mov
inc
cmp
sarb
pushf
adc
lahf
add
test
adc
mov
mov
cmp
rcrb
mov
sbb
fisubrl
scas
out
ficoms
in
push
xchg
lcall
cwtl
pop
pusha
loopne
in
stos
enter
ja
cmpsl
fiaddl
mov
push
lods
sub
int
xchg
fwait
mov
xchg
jecxz
in
mov
loop
imul
enter
loope
shrl
pop
pop
pusha
xchg
sbb
xor
cwtl
push
push
or
push
mov
xor
sbb
pop
loop
rol
sub
sub
inc
jle
mov
cltd
mov
push
mov
xor
jl
into
mov
mov
imulb
repz
xchg
lods
outsb
ljmp
push
mov
pop
test
cs
mov
and
xchg
pop
xor
in
ljmp
adc
mov
and
mov
xor
sub
movsl
or
jle
mov
scas
cmp
test
push
inc
dec
idivl
enter
pop
mov
das
add
lcall
leave
sbb
loop
jb
and
mov
lahf
subl
push
iret
pusha
and
jge
pop
pusha
sub
mov
addr16
test
pop
lea
ret
aam
xor
in
push
faddp
lea
aad
fwait
sbb
mov
mov
and
lcall
adc
pop
mov
xor
sub
mov
cs
outsl
sub
cltd
or
mov
rcrb
cmp
jnp
xchg
es
negl
outsb
int3
into
xchg
fstps
lds
mov
aas
xor
adc
dec
and
decb
and
push
cmp
dec
cmp
arpl
jg
push
add
mov
mov
jae
jo
mov
xor
frstor
or
negl
mov
or
dec
lods
ja
dec
cvtps2pi
mov
rcrl
adc
jb
push
out
push
dec
shrl
sahf
jnp
mov
jns
lock
pop
xchg
sbb
add
stos
or
mov
mov
dec
mov
jne
xor
mov
sub
pop
pop
lcall
test
aaa
test
shr
jecxz
pop
pop
push
jl
or
pop
add
mov
rorl
dec
push
jmp
adcl
xlat
cmpsb
lds
out
mov
mov
fs
jns
enter
push
loope
mov
and
xchg
movsb
fstl
xchg
clc
xor
xor
push
jp
add
insl
and
fnstsw
xor
mov
mov
cwtl
ficomps
fnstsw
mov
je
inc
and
jg
test
push
xchg
andb
xor
or
push
in
xor
mov
fldenv
fnstenv
hlt
push
mov
lock
arpl
addr16
or
xor
lahf
inc
rcrl
out
mov
or
cmpsb
das
stos
push
push
dec
inc
movsl
xor
jo
in
icebp
addb
cmp
test
inc
jbe
and
jnp
cmp
iret
repnz
sbb
cmp
mov
clc
or
ja
out
sbb
and
mov
imul
mov
sbb
fwait
fwait
push
sub
or
sbb
scas
inc
shrl
sub
pop
hlt
ret
aas
mov
push
jl
inc
xchg
and
or
mov
dec
push
dec
jno
aam
jb
mov
fbld
sbb
popf
and
mov
lock
incl
ds
popf
sub
jbe
icebp
xchg
push
dec
cmpsl
ret
mov
leave
je
popa
and
inc
mov
jle
incl
repz
dec
test
sahf
sarb
mov
sub
pushf
sbb
lret
jns
inc
int3
sub
pop
pop
sub
cwtl
sti
sbb
add
test
pop
or
lret
mov
and
xor
dec
lahf
pop
hlt
xchg
ja
test
push
sbb
loopne
or
subb
shrl
pop
mov
mov
out
inc
mov
inc
test
inc
pop
insb
mov
in
imul
jge
jbe
or
js
ss
imul
sub
jnp
imul
mov
xchg
movsb
sahf
cltd
arpl
mov
fsubl
popf
xchg
les
mov
iret
cmpsb
mov
sub
sbb
xor
sbb
jg
inc
sbb
mov
pop
das
rcr
inc
clc
sub
mov
int
loop
adc
xchg
cs
popaw
sahf
insb
or
fdivrs
stos
sub
and
add
jl
jae
cmp
fucomi
sub
jmp
sub
dec
fadd
movsl
je
popa
pop
lret
cld
jno
cmc
lods
cmp
sub
je
push
dec
and
mov
fcoml
cli
jno
shl
or
rclb
sti
mov
push
out
divl
std
mov
mov
sbb
dec
cs
pop
mov
outsl
add
sub
mov
xor
pop
or
dec
in
arpl
ficomps
lret
sarl
stc
jo
xor
fsub
xor
cmp
cli
pop
stc
jae
stc
inc
call
dec
jns
js
adc
mov
push
or
or
adc
ds
cmpsl
xor
jns
push
in
fstpl
testb
aaa
jp
or
cmc
in
jmp
jbe
repz
jecxz
xor
insb
xchg
ljmp
stos
test
mov
js
cmpb
pop
fidivrs
in
arpl
mov
ja
sub
dec
or
lahf
lret
dec
push
adc
pop
xor
lret
insl
out
das
aad
lahf
push
inc
incl
xor
pop
jecxz
arpl
cmp
shrb
push
shlb
shrl
shlb
cli
ja
sbb
mov
sbb
jnp
pop
hlt
cwtl
mov
push
mov
aam
cld
xor
leave
mov
pop
push
pop
cltd
or
fidivl
sbb
mov
lock
loopne
int
sbb
push
leave
dec
or
jno
loope
sbb
mov
js
or
dec
sbb
lods
aad
ja
pop
mov
push
popa
and
cwtl
mov
cld
push
ja
pop
jb
lcall
outsl
jns
aaa
mov
dec
xchg
data16
test
cld
lret
mov
enter
push
dec
rcl
lock
jnp
xchg
mov
cld
sub
movsb
daa
test
arpl
or
out
mov
shll
sub
mov
xchg
sar
loopne
push
sub
inc
xlat
push
push
jg
jg
adc
inc
nop
jnp
imul
jne
add
test
clc
stc
jg
pop
fs
mov
int3
push
inc
mul
push
lcall
in
ret
ljmp
or
hlt
movsb
sub
jbe
adc
mov
jns
sub
test
mov
nop
subl
inc
jp
testl
and
gs
inc
test
clc
pop
or
mov
rcrl
testl
fnstsw
sub
std
push
aas
push
jne
test
insl
lea
adc
iret
xchg
into
sbb
out
sbb
push
imulb
sub
ljmp
mov
outsl
sbb
jmp
pop
fsubs
or
jb
fs
test
mov
dec
testb
outsl
pusha
inc
push
fsubl
pop
mov
pop
inc
scas
stc
je
sbb
repnz
mov
xor
mov
aam
cld
popf
enter
pcmpeqw
ds
outsb
push
outsb
jae
mov
rcll
lret
push
out
push
xchg
fnsave
iret
adc
xor
xorb
or
fistl
jmp
sbb
inc
mov
xchg
cs
pop
jno
add
fstpt
mov
divb
idiv
and
or
push
dec
dec
jge
add
fcomip
cmp
fisubl
fdivrl
and
bound
xchg
aad
out
pop
and
out
cmp
mov
js
dec
sub
inc
pop
sub
push
sub
push
mov
jo
fidivl
js
xor
adc
ss
adc
xor
adc
les
jg
cwtl
data16
pop
into
cmp
cmp
leave
cltd
xor
inc
in
xor
or
mov
in
clc
andb
scas
lret
or
aaa
fisubrl
sbb
dec
lret
fdiv
cli
in
popf
inc
popa
sahf
mov
cmpsb
xor
ds
mov
mov
mov
jmp
sub
mov
cmc
rcll
pop
push
mov
jge
lret
jp
and
out
mov
pop
and
lds
inc
pop
push
or
test
and
scas
add
clc
jp
dec
sbb
dec
mov
in
xchg
mov
lret
lds
mov
mov
push
inc
push
lods
test
pop
or
jb
xchg
popf
adc
jl
dec
xor
lock
jbe
and
stos
jecxz
xchg
and
mov
jne
jbe
adc
aad
jo
or
rcl
xchg
ljmp
pop
fs
ds
call
mov
push
stc
shlb
leave
in
pop
cs
pop
add
js
xchg
mov
imul
xor
push
popf
or
movsb
cmp
ret
sahf
aad
movsb
jne
out
pop
mov
pop
out
pop
int
xor
les
cltd
cld
xchg
push
out
sbb
adc
scas
inc
leave
pusha
adc
mov
mov
dec
dec
add
lret
cmp
inc
and
cltd
lds
dec
pop
ret
xchg
in
sub
adc
test
push
inc
jl
test
jae
shl
dec
push
je
movsl
jae
hlt
pop
sub
fs
cmpsb
test
mulb
mov
sysexit
test
mov
cs
fwait
jmp
pusha
out
popf
pushf
nop
icebp
add
lea
push
jge
insl
roll
std
push
sarb
pushl
mov
jno
fdivl
popa
or
jmp
adc
mov
sub
mov
and
iret
mov
ss
inc
out
inc
mov
fucom
xchg
dec
mov
int
push
insl
sub
pop
mov
lock
jae
inc
push
and
pop
dec
xchg
imull
jle
pusha
cmp
or
les
xchg
enter
outsl
adc
push
pop
adc
pop
dec
push
push
shlb
nop
pop
btr
sbb
sbb
xchg
mov
adc
nop
fistpll
xchg
xor
subl
adc
push
ret
sub
sbb
lock
ret
xlat
loop
flds
adc
xchg
ret
outsl
xor
jns
inc
jb
aaa
ret
dec
pop
mov
ficomps
mov
push
fnsave
jb
leave
rdmsr
enter
pop
int3
icebp
sarb
pop
test
repnz
jmp
mov
cmp
mov
cmpsb
cmp
mov
ja
insb
push
pusha
ret
into
jo
xor
cmc
jmp
inc
cmpsb
out
lock
mov
mov
cs
cli
inc
mov
add
add
test
xchg
dec
jnp
push
mov
mov
ret
jns
in
jae
lahf
mov
sbb
int
sahf
push
inc
jle
hlt
mov
sbb
mov
push
icebp
push
fldt
and
outsl
fdivrp
dec
or
fidivrs
insb
into
jns
jo
mov
jnp
sub
and
cmp
pusha
sub
mov
push
xorl
xchg
adc
sub
xchg
popa
inc
subb
lods
jl
das
hlt
xlat
iret
push
cwtl
out
jmp
inc
sar
fisubl
fistpll
stc
cmc
out
cmp
sbb
xchg
fdivrl
push
adc
dec
cmpsl
xchg
cs
pop
push
jmp
sbb
dec
inc
shll
mov
loopne
sub
mov
cmc
mov
out
repz
xlat
mov
xchg
mov
addr16
pop
hlt
mov
sub
xchg
outsl
lods
out
sbb
xchg
add
adc
pop
mov
push
mov
add
int
sbb
mov
push
xlat
or
xchg
or
out
pusha
jne
aam
sub
jg
shl
lock
xorl
xchg
add
or
cmp
cwtl
push
movsb
adc
adc
push
out
and
lods
pusha
adc
movsl
es
mov
mov
sahf
jae
adc
push
lret
add
int
cmpsb
cmp
out
fidivl
into
cld
fists
or
imul
test
iret
mov
js
xchg
ljmp
cld
cmp
push
gs
xchg
mov
fcomps
adc
push
and
dec
dec
xor
shrb
cli
sbb
insl
dec
sbb
call
mulb
add
rorb
fstpl
and
add
fs
mov
aam
cmp
repz
dec
shll
xchg
jl
call
xchg
ficoms
push
js
int3
inc
scas
cmp
repz
jle
mov
or
rorl
mov
and
popl
nop
loopne
insl
imull
insl
add
push
mov
shrb
inc
cmp
add
out
jmp
mov
sahf
arpl
fwait
pop
sub
push
xchg
adc
in
dec
outsb
fisubrl
add
xchg
cmpl
leave
or
les
cmc
fidivrs
and
das
or
leave
outsl
adc
jge
add
fdivs
cmovo
aam
andl
push
int
mov
cs
in
jmp
loope
xor
test
xlat
dec
jle
in
sbb
push
push
jo
cmc
dec
sarl
adc
es
xchg
leave
iret
stos
loopne
xchg
dec
jg
pusha
mov
add
outsb
out
jae
add
in
cld
inc
cs
cmp
lock
nop
test
mov
fcomps
mov
rolb
stos
xorb
fnsave
and
stc
dec
push
mov
xchg
dec
jae
jo
dec
push
dec
push
icebp
inc
sbb
adc
adc
dec
pop
inc
inc
aam
mov
sahf
ret
mov
divps
cld
fldlg2
pop
cli
add
jecxz
ss
daa
push
cmp
dec
rcrl
cmp
nop
stc
pop
outsl
dec
mov
mov
add
rorl
jg
sub
jmp
dec
jb
mov
or
push
idivl
in
mov
ficompl
xchg
or
push
jge
loop
sbb
jo
sub
xchg
sarb
es
sbb
and
xor
pop
fs
sub
test
cli
mov
xor
inc
inc
mov
sbb
push
mov
out
mov
pop
daa
insb
add
gs
sbb
movsl
sbb
or
and
inc
jb
and
mov
mov
in
inc
cmp
jb
fstl
mov
add
or
andb
les
mov
pop
and
xlat
push
int3
sub
imul
call
sub
jae
or
clc
push
fs
jge
int
push
enter
je
sbb
jns
cmp
aam
aaa
test
adc
cs
lods
pusha
pop
mov
or
or
lods
out
lods
or
jae
sarl
dec
mov
pushf
inc
dec
ror
inc
ds
jns
lock
jb
sbb
pusha
and
mov
and
leave
mov
pop
jns
mov
jbe
call
jle
lods
or
mov
iret
xchg
mov
shrl
mov
fwait
divb
xchg
in
or
sbb
dec
cmpsb
into
lret
inc
and
shr
stos
add
push
push
clc
sbb
shr
es
push
cmp
mov
pushf
cli
or
dec
mov
sub
push
mov
push
ds
push
cli
bound
cmpl
add
cmp
lcall
cmp
cs
in
cltd
push
adc
js
xchg
jbe
sub
push
xchg
in
push
cli
out
sub
mov
out
cmp
or
movsb
out
movsb
iret
sub
cltd
inc
stc
pushw
mov
scas
mov
cmp
pop
test
cld
sbb
in
insb
or
rcrl
jae
cmpsb
clc
jae
int3
aam
fstl
leave
push
push
dec
mov
loopew
lret
push
add
add
imul
xor
dec
sarb
mov
adc
in
imul
mov
cmp
inc
mov
jb
push
mov
adc
mov
sbbl
inc
call
dec
pop
xor
xchg
or
pop
pop
cld
xchg
test
rep
push
popf
aam
popa
test
and
arpl
and
loopne
mov
test
jmp
xchg
mov
lcall
sti
lea
push
inc
mov
sub
pop
sbb
push
cld
or
insl
addr16
mov
test
mov
lock
out
xchg
inc
xor
ljmp
ds
negl
fcom
sub
push
cmp
pop
xor
jg
lods
cmp
push
ss
cltd
xchg
out
fimuls
pop
jp
sbb
add
mov
sub
sub
je
pop
mov
adc
clc
inc
test
xchg
int
sbb
je
pop
or
sahf
sarl
push
inc
repz
out
pop
ja
sbb
pop
in
mov
repz
pushf
decl
fcompl
lahf
and
push
cmpsl
adc
test
mov
cmp
xchg
stos
mov
in
sbb
lock
test
and
out
incb
mov
imul
push
and
jle
add
inc
push
sar
xor
adc
subl
xchg
ret
imul
incl
jecxz
and
sub
mov
dec
hlt
cli
test
fxch
ficompl
dec
cmp
icebp
dec
inc
cwtl
fisubl
sti
mov
pop
sub
in
call
xor
movsl
xrelease
or
into
jle
xlat
sbb
xor
hlt
push
divb
or
ficomps
or
mov
jge
add
xorb
adc
jmp
loopne
addr16
mov
out
aad
outsl
xlat
es
popa
das
lods
mov
loope
pop
fsts
xor
sub
pop
inc
sub
cmpsb
les
int3
lret
outsb
mov
pop
out
nop
cs
test
loop
outsb
adc
mov
jecxz
outsb
imul
mov
int3
scas
out
sbb
adc
nop
add
outsl
jbe
lea
push
adc
xchg
xor
test
sbb
cmp
add
jmp
xor
jns
mov
push
and
int3
and
nop
inc
or
jecxz
push
mov
fidivrl
lret
lods
sbb
call
or
scas
in
and
jge
rcll
loope
or
lahf
loopne
imul
lcall
inc
lods
pop
adc
outsb
jp
stc
adc
dec
sub
data16
movsl
push
sub
or
test
and
mov
jmp
sarb
movsb
cmp
pop
in
ss
js
pop
scas
stos
push
out
mov
xchg
dec
mov
jecxz
int
or
addr16
loop
cld
xchg
mov
icebp
test
int
repz
in
mov
xchg
lock
xor
mov
adc
push
and
fimull
push
or
xor
cmc
pop
mov
adc
inc
pop
xchg
pushf
arpl
loopne
cmp
aas
sbb
pop
mov
mov
test
loop
ss
imul
rcr
fneni(8087
rcrl
push
jo
ljmp
sbb
mov
xor
movsl
push
xchg
jl
data16
mov
pop
out
ja
stos
int3
shl
ret
popa
and
push
mov
inc
cmp
jle
pushf
rcrb
fdivrl
adc
cmp
sar
out
pusha
test
and
loopne
idiv
arpl
mov
mov
sub
lcall
dec
sub
fwait
ss
mov
sbb
scas
jb
hlt
enter
test
arpl
out
inc
nop
iret
addr16
outsb
insb
or
adc
loope
in
movl
cmp
dec
add
je
scas
lods
es
aas
movsb
lcall
stc
xor
sbb
fsubrs
mov
jne
mov
pop
inc
sahf
or
dec
fsubrs
scas
xor
jecxz
and
repz
outsl
lods
in
adcb
cwtl
lret
scas
and
push
in
pop
out
ljmp
sbb
mov
repz
sbb
cmp
lds
pop
test
add
rclb
adc
mulb
and
cmp
and
enter
push
std
std
or
hlt
dec
and
add
cmp
add
in
jae
or
sub
and
popa
arpl
jmp
cmp
sub
shrb
lods
sbb
pusha
inc
test
cmp
pop
shlb
ljmp
push
lds
lahf
fucomi
out
adc
sbb
enter
divb
icebp
insb
mov
movsl
push
adc
pop
cmp
xor
cmpsb
jbe
test
dec
std
inc
jno
push
inc
fildl
add
add
nop
ret
inc
aaa
mov
aaa
inc
dec
fs
mov
outsl
sbb
pop
stos
add
cmp
lods
xlat
mov
stos
pop
sbb
or
inc
or
add
ja
push
bound
add
insb
ret
adc
leave
xor
cmp
adc
mov
and
xchg
pop
push
adc
les
xor
loopne
leave
lods
cli
jl
shlb
andl
pop
inc
das
pop
jp
or
out
lea
xchg
into
int
mov
xor
adc
push
loopne
fimull
inc
dec
inc
insb
movsl
mov
add
nop
adc
imull
leave
jmp
roll
lcall
mull
sub
inc
cmp
sub
popf
clc
std
stos
add
shrl
pop
test
mov
push
xchg
hlt
cmc
aas
inc
fidivrl
adc
or
pop
mov
lret
mov
jge
test
lret
aaa
xor
std
and
xor
xor
loopne
and
mov
out
jle
fnstcw
push
mov
int
call
fstl
outsb
mov
mov
xchg
mov
repnz
add
outsb
xchg
xlat
inc
jb
or
xor
fwait
and
mov
mov
or
pop
adc
inc
cmp
pop
mov
pop
push
int
jb
pop
push
jmp
mov
adc
das
or
push
cmp
ret
jb
mov
lahf
inc
jo
mov
xor
stos
cltd
push
outsb
pop
mov
fidivl
rcrl
ret
lea
nop
mov
and
stos
test
adc
ja,pt
or
push
in
and
mov
aad
dec
fdivr
js
xchg
sbb
or
add
ret
iret
mov
mov
sbb
and
xor
jbe
loopne
ja
mov
imulb
hlt
int
add
insb
push
add
mov
cmp
dec
xchg
test
leave
xor
dec
cmc
icebp
mov
imull
mov
sbb
pop
stc
rorl
jg
int
repz
jo
out
sbb
in
jmp
adc
xchg
cwtl
cmpsl
sub
int
js
add
js
mov
lret
jl
mov
pop
gs
pop
pushf
push
mov
adc
in
test
or
or
jle
dec
mov
mov
or
cmp
xor
loopne
lret
daa
xor
sbb
dec
and
daa
loope
push
add
pop
cmp
mov
xor
mov
and
insl
push
inc
out
daa
jo
inc
dec
das
rol
in
xchg
push
in
rol
cmp
mov
notl
or
sbbb
mov
xor
dec
mov
cmp
mov
outsb
sarl
ret
sbb
cs
movsb
sbb
adc
mov
arpl
mov
cwtl
mov
or
scas
cwtl
mov
movsb
and
into
mov
xor
in
popf
sub
pop
pop
sub
push
mov
je
xchg
sub
push
movsb
movsl
jb
mov
mov
xchg
jl
je
data16
into
cmp
gs
dec
fistps
pop
ret
xor
faddl
cmp
mov
adcb
outsb
test
adc
dec
jne
sbb
mov
sar
ffreep
out
xor
pop
fnstcw
fs
jbe
jl
add
call
mov
add
outsl
dec
popf
inc
outsl
cmc
mov
mov
mov
iret
outsl
dec
cmp
lcall
cmp
stos
das
xchg
in
popf
lcall
ret
cld
in
lret
xor
mov
mov
sbb
mov
das
cmpsb
es
cmpb
mov
lret
es
push
sub
mov
xor
es
fmuls
aaa
cmp
loop
pop
test
xchg
aad
sbb
push
push
xor
or
stos
andb
inc
push
mov
shll
aad
mov
decl
mull
loop
xor
test
imul
sub
sbb
jecxz
ja
inc
add
pop
jb
xchg
push
icebp
stos
ja
mov
sti
adc
sub
mov
test
cmp
push
dec
pop
dec
iret
mov
or
adc
outsl
shrl
cld
out
clc
cmpsl
daa
xchg
lock
mov
xor
xor
mov
push
outsl
jp
jecxz
sahf
imul
push
sub
sbb
mov
roll
cli
arpl
imul
outsl
mov
jp
xchg
cmpsb
movsl
push
insb
lods
pop
pop
xchg
pusha
in
call
leave
push
jge
mov
jb
xchg
dec
popa
ret
in
movsb
outsb
into
test
mov
mov
es
adc
push
jne
test
dec
jecxz
int
inc
inc
in
inc
incb
xchg
loope
and
sbb
in
insb
adcl
out
jmp
mov
inc
jns
jns
or
in
sbb
por
lods
dec
cmp
es
push
negl
aaa
cwtl
cmp
mov
mov
fists
test
sbb
xor
les
xchg
gs
les
rolb
inc
push
mov
scas
loop
cld
movsb
les
xor
js
and
jl
fnsave
xchg
imul
enter
push
jle
xchg
jae
fnstcw
mul
jne
insb
or
cmc
dec
lret
add
ss
push
mov
dec
enter
mov
xor
out
popf
ret
sti
push
adc
cld
mov
lods
call
inc
mov
ficoms
add
and
jne
mov
mov
jnp
enter
sub
bound
push
mov
dec
outsb
iret
mov
fcoml
shrl
and
or
sub
sub
inc
pushf
aad
sub
xchg
xor
sub
aaa
sarb
fwait
stos
inc
stos
mov
fldenv
push
ret
pop
jnp
add
mov
adc
sbb
test
fildl
inc
mov
in
dec
je
inc
and
test
test
test
mov
mov
mov
shlb
mov
rcl
mov
das
test
loope
xchg
imul
cwtl
xchg
movsb
into
mov
sti
rorl
xor
cli
cs
dec
inc
push
imul
jne
movsb
in
rorb
sbb
aas
add
mov
or
fdivp
lret
inc
ja
cmp
pop
push
sbb
mov
ss
inc
sbb
repnz
pop
fmuls
test
push
icebp
mov
mov
jbe
stos
and
cmp
call
sbb
pop
push
fdivr
mov
dec
pop
push
push
shlb
push
cmpl
xor
xor
int
ja
add
xchg
adc
mov
ds
loopne
in
bound
cmpl
cmp
xor
cmpsl
cmpsb
jg
shr
iret
popl
aaa
leave
shll
data16
jno
out
testb
mov
mov
leave
scas
cwtl
jp
aam
cltd
sub
jo
jns
fnstcw
mov
pushf
enter
xor
and
test
adc
gs
adc
fucomp
repnz
mov
pop
popa
xor
sub
loope
jge
shl
push
sar
dec
cmp
inc
xchg
imul
mov
pusha
mov
dec
popl
xchg
xor
shlb
lods
rorb
pop
push
movsb
sub
cli
xor
mov
push
or
mov
pop
fiaddl
inc
sbb
push
or
add
sub
mov
sarl
je
mov
ret
les
rcr
xchg
pop
sub
test
stos
es
pop
mov
mov
lods
ret
cli
jbe
push
jge
cmp
lcall
hlt
cmp
cs
jb
adc
add
and
sub
jne
fs
ret
xor
add
mov
rcll
frstor
sub
pop
xor
pop
rcrb
add
push
shrl
push
adc
in
loope
xor
add
push
dec
inc
pop
pop
mov
mov
ret
ror
jne
push
sbb
cmp
out
mov
mov
xor
mov
push
inc
push
and
popf
cmpsb
mov
sub
imul
pop
fcmovu
mov
scas
frstor
or
add
mov
sbb
mov
dec
and
and
pop
sbb
lcall
dec
xchg
cld
or
jne
jo
cmp
add
add
mov
incb
stos
out
popf
stc
pusha
mov
sub
pop
add
push
testl
xchg
mov
es
ret
jo
lock
mov
test
sub
in
mov
out
outsl
out
aam
mov
jle
sub
lcall
cmpsb
cltd
lret
add
cmp
outsb
adc
pop
xchg
rclb
pop
fwait
add
jns
or
out
dec
fwait
push
cli
popa
adc
pusha
icebp
lods
jp
jne
jo
outsb
shl
sahf
pushf
fadds
jl
mov
pop
pushf
xor
and
scas
dec
roll
jo
push
push
xchg
aad
fdivrs
inc
fdivrl
clc
lock
mov
pop
pop
data16
cli
movsl
je
lcall
dec
inc
dec
mov
jns
mov
mov
mov
or
sti
jle
stos
cwtl
push
pop
inc
adc
xchg
ret
push
sub
jae
mov
inc
nop
dec
test
pop
in
pop
xchg
inc
and
sbb
dec
idivb
fmull
push
enter
or
test
jmp
ror
xlat
dec
add
scas
xor
in
cwtl
sub
pushf
jo
es
cli
sbb
push
mov
pop
add
mov
add
fsubrl
sbb
push
mov
push
dec
out
repnz
mov
je
inc
mov
ficoms
fdiv
fcmovb
push
addr16
insl
lods
sbb
outsb
jg
outsl
sub
push
sbbl
mov
jecxz
call
dec
pop
insl
std
cmp
sub
insl
adc
jne
test
movsl
ja
fwait
pop
sti
hlt
ljmp
add
mov
dec
push
pushf
xchg
push
push
xor
xchg
mov
ss
xchg
test
in
adc
popf
and
shll
inc
in
testl
int3
imul
js
daa
ds
in
jmp
mov
in
repz
jne
jnp
xor
adc
or
dec
leave
sbb
xor
push
enter
lock
jle
adc
popa
aaa
and
pmulhuw
inc
popf
rcll
adc
and
imul
add
push
push
jbe
add
jecxz
xor
mov
imull
arpl
pop
pop
push
aaa
aas
add
xchg
mov
xor
adc
pop
fdivr
cmpsl
ds
dec
cmp
inc
sbb
jbe
push
popf
xchg
push
cmp
loopne
insl
cmp
inc
add
hlt
lahf
scas
lret
hlt
addl
pop
adcb
and
std
push
mov
rorl
xchg
adcb
pop
jns
loopne
dec
inc
mov
push
out
in
scas
and
xchg
cmp
fs
mov
dec
inc
jmp
jge
ds
dec
sbbb
mov
vmread
sub
cmpsl
adc
jno
jno
mov
xchg
xchg
sbb
xchg
cmc
pusha
aaa
xchg
int3
jp
popa
aad
dec
enter
in
mov
xor
add
stos
jb
pushf
pop
aam
xchg
sbb
insb
aam
jns
outsb
ds
xchg
les
call
adc
mov
ret
or
and
lcall
dec
dec
or
pop
cmpsl
pusha
or
aaa
in
data16
out
mov
ret
and
mov
insl
push
rolb
dec
inc
inc
cmp
pop
dec
aas
pushf
js
xchg
int
xor
ja
jne
decl
iret
xchg
xchg
dec
orl
lret
outsb
insb
cmp
cld
out
add
xchg
stc
jg
shl
jns
decb
mov
mov
xchg
dec
add
repnz
das
lret
inc
xchg
jl
addl
mov
and
inc
and
int
mov
xchg
adc
test
nop
push
xchg
xor
xchg
mov
add
add
popl
shll
test
pop
mov
into
in
jns
mov
mov
fldenv
ljmp
movsb
push
movsb
leave
les
daa
pop
imul
lods
outsl
xchg
jbe
adc
mov
jle
add
sbb
shrb
push
mov
inc
fcomps
push
pop
cmc
cmpsl
gs
xchg
clc
push
cmp
cmpsl
stos
dec
or
movsb
adc
rol
or
cmp
and
imulb
subl
mov
les
add
or
push
xchg
dec
je
pop
xchg
jae
shlb
lahf
in
adc
pop
fbld
mov
insb
cmpsl
jp
in
inc
enter
insl
repz
add
or
fcoms
in
inc
mov
cwtl
rcrl
cmp
int3
inc
repz
insb
push
cmp
fmull
mov
lods
sub
popa
jmp
push
int
push
xchg
pop
mov
pop
in
addr16
loopne
xchg
sub
in
push
fwait
rclb
push
xchg
adc
addr16
lea
fcmove
mov
and
outsb
xchg
dec
mov
add
sahf
lret
push
ret
jo
mov
add
mov
mov
int3
xor
sahf
insb
movsb
cmp
inc
lock
mov
fistps
out
lods
psraw
pop
add
or
stc
popl
lds
fsubrp
insb
les
mov
sbb
add
mov
jmp
ror
mov
outsl
mov
dec
test
add
pop
inc
test
dec
in
test
popf
shl
push
enter
inc
lcall
pop
test
lock
popa
push
adc
and
add
bound
roll
push
je
add
imul
add
xor
pop
sub
push
jnp
pop
mov
out
scas
mov
or
daa
push
lds
es
pop
add
xchg
popl
fsub
dec
jno
push
rcl
mov
fwait
sbb
mov
mov
out
das
pusha
push
lcall
int
mov
sbb
sahf
fdivl
jecxz
xchg
xchg
popa
jmp
add
fmul
cmp
pop
lods
std
cmp
sub
jo
fwait
push
mov
xchg
jg
pushfw
mov
roll
out
aad
sub
dec
sbb
jge
cltd
loopne
push
adc
scas
ja
inc
js
pop
dec
xor
add
sbb
dec
jno
cmp
mov
sbb
sti
xchg
xchg
data16
or
jbe
add
cld
mov
je
mov
or
mov
mov
xchg
inc
sti
jbe
scas
lret
adc
xorb
pop
or
in
cmpsb
ret
lds
adc
push
enter
sub
sub
add
test
adc
inc
sbb
je
rcl
lret
sahf
test
sbb
imulb
aas
jnp
sbb
out
inc
aam
sbb
inc
mov
out
sar
adc
and
xchg
cltd
mov
sahf
add
scas
dec
push
dec
and
mov
fwait
lahf
xlat
cmp
dec
pop
and
mov
add
fsts
push
int
mov
shll
stos
imul
xchg
lret
in
jle
and
sbb
into
sahf
fnstcw
xor
cld
push
jb
shl
je
add
xor
dec
call
int
aaa
dec
cmp
ljmp
mov
mov
stos
mov
clc
shll
sbb
test
insb
xchg
mov
or
pop
adc
aad
je
divb
mov
sbb
cmp
adc
js
addr16
loopne
cmpsl
out
xor
sbb
and
mov
xchg
ja
dec
mov
enter
insb
jmp
mov
dec
and
leave
sbb
jae
inc
mov
mov
xchg
cmp
pop
mov
sbb
and
jge
pusha
mov
lods
jns
push
push
pop
mov
or
repz
mov
fsts
call
xchg
les
pop
imul
imul
fisubrl
out
xchg
cld
into
mov
push
or
pop
push
xchg
xor
dec
or
inc
into
mov
stc
or
fwait
jne
shl
mov
mov
or
popf
ljmp
ja
nop
in
mov
or
xchg
lods
and
aam
popa
inc
inc
pop
std
cmpl
cld
lea
dec
not
in
jns
push
je
fs
push
dec
and
jl
int3
push
test
lcall
movsl
pop
xchg
lods
and
dec
pushf
mov
xchg
inc
push
aaa
test
hlt
mov
sbb
sub
add
add
and
sbb
xchg
iret
aad
add
add
add
sbb
jge
dec
push
cwtl
sub
lret
cmp
push
ljmp
xchg
out
jb
cmc
lcall
push
sub
mov
mov
stos
xor
dec
out
sub
shlb
decl
adc
cltd
sbb
insl
cmp
into
fstps
push
insl
mov
lea
sub
ljmp
xchg
dec
push
ret
sbb
adc
sbb
dec
cmp
adc
jae
ja
loope
pop
rcl
jb
jbe
cwtl
sahf
aad
enter
mov
sti
sbb
sub
loopne
jns
cmp
cmp
movl
daa
jb
mov
adc
or
mov
push
test
test
xor
push
arpl
push
inc
mov
mov
fisubs
dec
push
sbb
jge
lock
repnz
dec
sbb
mov
cmpsl
jmp
sbb
aaa
xor
in
cltd
enter
cmc
gs
hlt
in
ret
adc
insl
jmp
aas
inc
cmc
jle
les
cltd
sarl
jg
test
pop
or
mov
sahf
fildl
push
add
sbb
cmp
decl
or
jmp
loope
aas
dec
clc
pop
ljmp
and
out
clc
jle
addr16
push
loop
es
xchg
ds
cmp
lods
cmp
int3
sub
testb
aam
imul
add
fwait
cmp
xor
mov
call
push
jnp
fwait
shl
cmc
mov
mov
lock
dec
push
iret
and
push
ss
ret
xchg
repnz
sarb
push
mov
mov
xor
jmp
jp
and
dec
push
enter
ror
nop
leave
jecxz
jbe
sbb
aad
mull
lcall
push
mov
push
push
mov
hlt
xchg
mov
cmpsl
add
scas
gs
sbb
out
lea
sbb
adc
outsb
xchg
jl
adc
rorb
ss
lret
call
xchg
data16
incl
xchg
ss
js
sub
pop
loope
notb
jge
sbb
popf
test
cmp
cmpsl
dec
xor
cmp
pusha
lock
xor
mov
dec
mov
adc
call
dec
lock
cmpsb
mov
or
adc
xchg
inc
pop
lock
mov
sbb
ss
ret
xchg
repz
sub
dec
loopne
insb
out
lock
out
outsl
sbb
ret
cmpsb
push
add
cli
push
add
mov
jge
jnp
xlat
pop
movsb
jge
enter
inc
inc
fstps
add
xor
cmp
mov
test
outsb
adc
adc
and
in
jp
movsl
fiaddl
or
lahf
ret
inc
outsl
jno
insl
pop
xor
shll
hlt
mov
dec
sahf
out
sub
mov
pop
pop
or
mov
cmp
inc
sbb
xchg
int3
lret
aaa
pop
movsl
push
lds
les
add
mov
imul
aam
enter
jg
inc
ss
mov
mov
outsb
gs
movsb
adc
lahf
lock
jne
and
mov
test
fnstcw
and
pusha
in
rcll
jmp
adc
enter
push
hlt
call
xor
mov
sbb
sub
add
mov
cmpsb
mov
mov
xor
mov
es
mov
mov
mov
dec
clc
mov
jp
sbb
ja
and
and
jle
push
mov
push
pop
nop
jbe
lods
pop
lret
daa
ss
das
push
sbb
mov
test
pop
inc
xor
xchg
cmp
cmp
cld
inc
mov
add
or
push
xchg
cs
jge
jno
mov
or
inc
mov
scas
jae
adc
out
sbb
pop
addr16
jne
jno
sbb
xchg
dec
lods
sbb
dec
lock
pop
mov
nop
jo
pop
cmpsb
or
scas
and
cltd
jo
shll
mov
or
dec
push
outsb
fwait
ret
push
pop
push
or
pop
daa
ficoms
shrl
pop
jp
jg
in
lds
pop
mov
push
ret
test
popa
mov
loopne
xchg
iret
rcrl
loopne
or
loope
mov
xor
aaa
pop
fwait
sbb
xor
pop
sbb
cmp
jb
popf
or
add
int3
divb
mov
popa
jp
dec
sbb
mov
cmc
ja
sti
xchg
pusha
pop
loopne
mov
lods
call
add
mov
stos
arpl
popf
mov
push
sbb
lds
and
pop
inc
mov
gs
and
dec
pop
fwait
out
xchg
sahf
push
daa
outsl
xlat
mov
popf
add
shl
or
ss
jbe
aad
arpl
dec
mov
push
fldcw
clc
and
nop
or
mov
push
lret
lock
xor
into
lret
in
ret
lds
mov
repnz
cmp
or
jg
shll
push
jbe
mov
xchg
push
std
mov
fidivrl
ljmp
inc
mov
sbb
shl
push
frstor
mov
mov
jo
movsl
out
xchg
sbb
add
xorb
xlat
mov
inc
popa
ret
rolb
cs
mov
jne
jb
or
icebp
push
divl
jne
test
add
sub
popf
popa
sbb
sbb
mov
adc
sbb
sbb
sub
std
and
jp
fidivl
xor
out
xchg
out
filds
insb
shl
inc
or
sub
outsb
dec
out
pop
push
push
ja
insb
shll
sbb
aad
push
jl
fs
push
clc
cltd
rorb
xor
inc
lds
xor
xchg
mov
lds
jmp
cwtl
cmp
inc
lret
xchg
ret
loopne
push
xor
xor
insb
xchg
pop
adc
or
fmull
adc
sub
mov
and
cmpsb
bound
std
adc
sbb
inc
movsl
daa
and
and
jns
js
movsl
push
mov
jp
rcr
andb
lea
inc
arpl
mov
cs
test
cwtl
out
ds
push
add
sbb
cmpb
ljmp
fisttpll
inc
ja
mov
cmp
test
add
std
mov
jp
cmpsb
movsl
filds
sbb
xchg
shrl
je,pt
sub
fisubrs
ret
jecxz
gs
sbb
aaa
push
clc
push
out
in
stos
cs
xorl
add
jbe
mov
cmp
movsl
out
xor
insb
xlat
loope
lock
clc
sbb
mov
push
incl
cmpl
push
outsl
aaa
iret
scas
mov
cmpsl
jg
je
xor
enter
cs
arpl
adcl
pop
xchg
mov
cli
lret
mov
mov
addr16
mov
fsubrs
fsubr
repz
pop
loopne
or
enter
int
pop
adc
icebp
icebp
outsb
lock
push
out
mov
rorl
inc
inc
adc
pop
jle
push
fldcw
pop
sahf
in
sbbb
rol
push
pop
addr16
jge
stos
add
mov
sub
lcall
cli
out
inc
aam
sbb
xchg
cmp
lods
push
loopne
cmp
test
push
in
arpl
test
push
into
movsb
aad
fldl
mov
sbb
repz
pop
fs
mov
jmp
call
sbb
testl
jmp
daa
adc
cli
dec
pop
sarb
stc
test
adc
sbb
jmp
sbb
mov
nop
inc
nop
xchg
and
hlt
or
int
imul
in
and
xchg
or
sbb
rcr
arpl
cmp
jecxz
popf
nop
movsl
dec
pushf
sti
cmpsl
notb
cmp
test
or
fisttpll
cmp
rclb
adc
jmp
and
shl
daa
mov
int
insl
adc
scas
sbb
fcmovbe
das
adc
dec
ja
pop
lcall
sarb
dec
fsubrp
xchg
cmc
mov
cmp
hlt
add
pop
adc
outsb
lods
jg
mov
push
nop
xor
cmp
das
cld
outsl
xor
out
out
sbb
mov
and
aad
lret
and
jge
div
push
push
sbb
inc
lahf
loop
cmc
cs
xor
pop
pop
jle
sbb
pop
mov
shrl
lcall
sbb
jb
or
lods
push
data16
and
shll
cmpsl
adc
stc
stc
cltd
in
fwait
inc
xchg
in
cmpl
cmp
push
jnp
inc
and
cmp
or
pushf
jge
xchg
jl
mov
jne
and
lock
fs
cmp
adc
ja
push
and
addr16
and
jl
std
push
mov
bound
out
shll
sub
or
sub
stos
in
sbb
jg
lea
sub
adc
cmp
add
push
lea
pop
add
lock
mov
nop
add
mov
lea
popa
sbb
ljmp
std
pusha
lods
ds
repnz
xor
push
js
pop
out
daa
and
push
popf
cmpl
push
pop
push
daa
pop
fcoms
lds
adcl
xor
cmp
inc
std
push
adcl
fstpl
imul
lret
mov
icebp
adc
pop
sub
es
aaa
test
fs
idivb
inc
jle
pop
sub
lock
sub
inc
test
jae
icebp
fbld
call
push
outsb
sub
push
out
movsb
mov
loop
sub
test
adcb
fsubl
scas
insb
adc
pop
cmpl
push
and
movsl
adc
mov
outsl
dec
aas
push
repnz
and
inc
mov
push
mov
mov
mov
nop
cwtl
or
jl
stos
imul
test
adc
inc
pop
les
inc
fdivrs
stc
xor
sti
push
dec
mov
mov
mov
enter
or
test
jl
fwait
es
add
xor
insl
jae
aam
es
sbb
add
lahf
add
into
pop
lahf
mov
mov
addr16
sti
push
add
aad
repz
cwtl
push
sub
ror
jne
mov
stc
jae
or
push
sahf
outsl
into
das
adc
or
sbb
mov
sbb
xchg
sbb
inc
xor
mov
arpl
add
popa
fisttpll
inc
adc
and
fidivrs
int
and
push
into
jbe,pn
jo
vpaddd
lock
sub
mov
jae
xchg
das
jb
mov
pop
jbe
fadds
rcl
out
fmull
rclb
and
dec
jne
ja
mov
pop
cmpsl
or
loope
sahf
and
xchg
imul
repnz
sub
sbb
lds
movsl
lds
jo
xchg
add
pop
dec
pusha
sti
jecxz
aad
dec
stos
ja
loopne
sub
out
andb
scas
xor
mov
cmp
dec
mov
cmp
mov
orl
mov
imul
jmp
sub
js
sbb
inc
cld
in
inc
ficoms
and
dec
out
shl
cmp
or
mov
add
xor
sub
jbe
pop
xlat
lret
cmp
xor
movsl
pop
cmpsl
adc
cmp
or
push
mov
movsl
inc
test
popf
insl
je
pminub
inc
or
mov
mov
lods
push
add
aas
fdivrp
in
mov
dec
lock
inc
imul
and
test
insl
mov
pop
pop
mov
or
mov
iret
dec
mov
vmread
paddsw
pop
mov
inc
xchg
mov
or
les
sbb
loop
and
jne
jbe
arpl
loope
and
sub
movsl
popa
xchg
adc
inc
jge
shll
adc
inc
scas
sahf
popa
xchg
jo
jle
push
mov
popf
dec
enter
adc
popf
imul
jbe
lods
push
adc
je
je
mov
jno
cwtl
sahf
scas
inc
dec
mov
stc
fldt
bound
enter
cwtl
sbb
popa
jo
push
jge
cmpsl
int
in
fnstsw
movsl
int
pushf
repnz
and
or
sub
sbb
or
cmp
inc
insb
add
jecxz
jle
out
rcl
call
lret
push
xor
lods
dec
cmc
lds
or
int3
and
lods
cmpsb
fmull
lods
cmp
fwait
sub
mov
push
pop
sbb
into
sbb
arpl
add
jge
cli
pop
push
mov
out
mov
repz
ja
cmpsl
dec
jbe
lret
pop
sbb
sub
fimuls
pop
sub
and
movsl
cmp
jmp
pop
shl
cld
jbe
and
pop
xor
inc
cmp
inc
add
dec
popf
std
push
jae
lahf
dec
popa
push
mov
jle
data16
dec
mov
sub
es
insl
dec
lods
sbb
int3
scas
adcb
jo
dec
je
shlb
mov
adc
inc
enter
push
jl,pn
mov
cmp
lret
fwait
into
lds
addr16
mov
rcrb
repz
outsl
push
les
jg
out
mov
jle
adc
les
add
icebp
mov
icebp
jmp
push
shl
nop
mov
xchg
xor
stos
out
and
hlt
pop
sub
div
mov
mov
shrl
stos
or
repnz
push
insl
xor
pop
pop
add
hlt
pop
mov
leave
mov
xchg
ret
mov
cmpsb
mov
mov
out
push
mov
cmpsb
stos
xchg
gs
xchg
mov
mov
orb
dec
out
mov
inc
jge
mov
cmpl
cwtl
insb
jecxz
and
repnz
mov
ret
add
jmp
jg
push
and
add
paddusw
inc
movsb
scas
mov
add
dec
or
sub
fimuls
shll
sbb
lret
push
sub
lret
mov
jnp
insb
jne
push
rorl
gs
push
mov
fsubl
aaa
dec
jns
and
cmp
popa
dec
jns
xchg
xchg
jae
arpl
lds
fwait
js
pop
loope
add
dec
xor
dec
clc
movsb
int
cld
dec
mov
aad
outsl
imul
scas
repnz
ret
loop
je
jno
xchg
daa
or
adc
mov
imul
cmpl
push
pop
jp
hlt
xlat
ljmp
mov
ror
ds
loope
insb
notb
sti
jbe
fbstp
xor
scas
daa
rorb
dec
hlt
aam
pop
kmovb
pushf
jae,pn
jmp
push
fistl
das
ds
andl
into
add
mov
mov
imul
add
or
inc
cmp
jne
fistps
sbbl
arpl
int3
gs
dec
lods
add
pop
cli
js
push
inc
xor
inc
into
pop
xor
add
aas
cmpsb
sbb
movsb
adc
sub
xchg
daa
outsb
scas
pop
mov
jbe
outsl
adc
ret
xchg
xchg
sub
fiaddl
jns
sahf
lea
in
and
add
or
sub
das
or
inc
jmp
popf
sti
cmpsl
aam
cmp
mov
rol
dec
push
xchg
push
out
adc
adc
adc
mov
add
mov
sbb
or
jmp
outsl
lea
push
mov
jbe
push
xor
out
popa
xlat
adc
mov
mov
jg
iret
and
ret
fcoml
fldt
xchg
sub
mov
subl
arpl
aad
xor
subl
cmp
sarl
gs
stos
int3
es
stos
test
nop
lock
sbb
lahf
cli
mov
pop
and
sbb
mov
jecxz
xor
adc
xchg
lds
xlat
pop
jl
sub
shrl
test
stos
mov
fcomip
push
lar
xchg
and
xchg
insb
xor
sbb
mov
orl
pop
adc
lods
dec
cli
inc
int3
rcrb
push
inc
std
cmp
jmp
and
call
repnz
out
hlt
imul
mov
mov
jecxz
outsb
ss
mov
push
pop
fucomp
push
cmpsb
push
imul
mov
dec
sbb
or
push
shll
xor
xchg
xchg
lret
fistl
mov
push
push
je
roll
inc
in
rcl
jp
sub
rolb
fimull
or
pushfw
adc
xchg
int
jbe
repz
ficoms
mov
sbb
test
int
mov
subl
and
orl
mov
inc
pusha
pushf
jp
pop
jns
mov
test
adc
sub
dec
in
and
mov
jl
repnz
leave
mov
cmp
xlat
leave
cmp
scas
out
rcrb
scas
jbe
sub
mov
sbb
movsb
cwtl
div
sub
add
xor
movsl
sub
testb
cmp
int3
test
xor
loopne
sbbl
mov
fildll
jb
jae
inc
or
xor
nop
loop
call
ja
scas
sub
pop
inc
fdivr
das
inc
insb
pop
sub
push
xor
push
outsl
imull
adc
xchg
jbe
xchg
test
push
lahf
arpl
dec
aad
andb
add
rorb
or
orl
pop
je
scas
pop
adc
inc
call
inc
and
xor
push
divb
push
sbb
insl
or
dec
pop
test
sub
xchg
xor
sahf
mov
dec
scas
or
lahf
pushf
mov
jecxz
gs
outsl
jge
test
loopne
sub
mov
enter
push
jnp
fnsave
mov
cmp
test
inc
sbb
cmp
xlat
int3
dec
test
push
jle
bound
and
test
push
cs
mov
xchg
cmp
rorb
cmpsb
xor
jnp
adc
stc
mov
push
or
in
xchg
xlat
sbb
clc
inc
cmpsl
push
aas
loopne
insb
xor
push
mov
filds
inc
xlat
ljmp
mov
ret
gs
pop
mov
pop
daa
sub
inc
out
lret
pop
out
dec
sbb
add
aas
lcall
repnz
mov
push
int
push
sar
mov
lahf
fwait
add
inc
sbb
scas
cmc
mov
jg
cvtps2pi
add
nop
lret
jmp
mov
cwtl
loope
std
cld
shlb
inc
cmpsb
mov
lods
scas
mov
ret
mov
add
fwait
decl
inc
lahf
enter
sahf
or
ljmp
sub
push
fwait
xchg
or
inc
cwtl
mov
pop
movb
push
or
fistpl
mov
outsl
hlt
iret
testb
jp
adc
das
cmpsl
jns
pop
cmc
sub
testl
fdivrs
iret
and
or
addr16
setg
icebp
dec
inc
lea
imul
pop
adc
aaa
nop
dec
jb
push
negb
inc
and
xor
dec
scas
int3
add
xchg
pop
pop
aas
add
and
outsl
ret
cmp
sub
add
lods
movsl
dec
and
xchg
cmpsl
xchg
data16
pop
lcall
das
jbe
xchg
mov
cmp
cmpsb
loop
push
xchg
adc
and
test
mov
insl
int
shrb
in
xor
jno
or
movsl
push
mov
mov
stos
sbb
hlt
scas
pop
xchg
or
or
adc
movsb
cmp
test
aas
sbb
test
pusha
clc
sahf
int3
cmp
nop
out
push
das
mov
mov
jns
mov
sbb
popf
sbbb
jp
loope
and
shlb
int
add
xor
ficompl
and
fwait
sbb
cmp
jbe
insb
push
mov
fisubs
adc
inc
nop
dec
pop
inc
fs
mov
pop
xor
adc
dec
pop
loopne
lret
lret
xor
shlb
ret
adc
mov
xor
sbb
inc
movsl
cmp
testb
pop
out
push
lea
pop
jp
in
xlat
ror
pushf
sub
test
dec
pop
dec
mov
cwtl
xchg
out
fisubrl
xchg
xchg
sahf
fdiv
lds
pop
in
lds
jecxz
push
and
mov
sub
lcall
pop
adc
mov
push
daa
ss
insl
int3
movsl
std
xchg
es
inc
push
aad
jl
ds
dec
sub
das
sbb
pop
and
lea
inc
rol
or
sub
xchg
push
movsl
imul
test
insl
lret
xchg
jae
cltd
mov
loope
leave
cmp
jp
xchg
in
paddsw
cmp
and
inc
xchg
xor
mov
test
imul
outsb
xlat
std
pop
scas
cmp
dec
push
or
sbb
out
adcb
mov
scas
mov
xchg
jcxz
shl
std
cmpl
dec
ljmp
das
dec
or
sbb
fisttpll
pop
and
dec
xor
dec
hlt
pop
sbbl
cwtl
and
mov
jle
adc
push
das
je
cmpsb
mov
inc
mov
divb
and
lds
fmull
mov
sub
fistpll
sahf
push
inc
rorb
cmp
cltd
pop
sbb
inc
push
and
les
outsb
pop
in
xchg
mov
movsl
pop
add
sbbb
lods
sbb
sub
call
xchg
cmc
mov
cmp
daa
push
loop
movl
push
xchg
cmp
dec
and
subb
jp
add
push
hlt
fwait
je
inc
pop
lahf
mov
pop
sbb
cmp
frstor
and
mov
jp
xlat
cmp
jmp
mov
or
imul
jne
mov
mov
push
xchg
jno
sbb
lock
adc
stos
ja
and
pop
cmpsb
das
stos
mov
push
aam
xchg
in
xchg
inc
mov
xor
mov
or
push
mov
aas
mov
clc
mov
xchg
arpl
push
adc
je
in
push
dec
xchg
aas
enter
jmp
lret
fwait
mov
sarb
ds
mov
and
loop
movsl
push
shrb
fidivl
mov
mov
loop
pusha
lods
sbb
shl
mov
and
mul
add
xor
jmp
js
pop
pushf
out
and
xor
or
push
call
xchg
aam
loop
jmp
push
sbb
enter
cltd
and
fdivrs
dec
cmp
std
test
inc
mov
push
lock
icebp
inc
loop
lret
adc
es
pop
enter
push
das
dec
lods
movsl
test
jge
inc
pop
mov
lock
xlat
rorl
call
inc
pop
das
push
arpl
sub
out
mov
call
pmuludq
subb
adc
fwait
cmp
mov
inc
mov
iret
cmpb
shl
mov
ret
in
int
adc
or
add
sbb
stos
inc
std
dec
dec
pushf
cli
push
xchg
add
mov
fisttpl
or
adc
gs
enter
pop
fdivr
push
aad
ljmp
cltd
push
loopne
dec
push
lods
cmpsb
orb
jne
push
pusha
fs
mov
test
mov
cli
pushf
lahf
push
into
mov
add
and
popf
aam
cmp
cmpsl
mov
test
scas
es
xchg
popa
add
mov
xlat
cltd
sahf
mov
out
mov
xor
rcr
ss
dec
je
movsb
pop
push
das
xor
push
inc
push
sbb
daa
mov
ficoml
push
xlat
dec
inc
xchg
mov
cmpsb
sarl
cmpb
fisttps
push
xchg
lods
loop
bound
or
js
ret
jl
cmpsl
inc
or
ds
or
mov
pop
mov
lods
inc
bound
bound
out
std
jbe
mov
jmp
jo
cmp
add
mov
outsb
pop
mov
and
mov
sub
cmpb
sbb
push
mov
shl
mov
sbb
lods
in
pop
shl
rclb
int3
xchg
inc
scas
jecxz
mov
movsb
inc
sbb
or
inc
das
pop
cmp
orb
xchg
xor
push
adc
cmp
int3
mov
jge
cmp
insb
mov
mov
mov
in
adc
push
subb
xchg
inc
jp
lahf
cmpsl
push
xchg
mov
inc
sub
mov
fcoml
mov
push
xor
push
fwait
out
pop
lret
push
pop
rorl
dec
fsub
gs
or
cmp
xor
jecxz
fidivl
pop
mov
pop
mov
inc
aad
cmpsl
push
dec
test
cmpsl
xchg
scas
pop
repz
inc
sti
cmp
cmpsb
test
pop
leave
ss
pop
mov
movsb
or
sti
mov
pop
mov
fimuls
inc
ret
xor
xchg
pop
add
add
dec
jbe
push
add
imulb
mov
fldenv
sbb
nop
insb
shll
xor
jmp
out
popa
sub
dec
out
jb
pop
dec
bnd
sub
pop
aad
mov
inc
cltd
dec
das
pop
outsb
pop
push
test
cmc
outsl
lods
cmp
sti
shrb
fwait
cmp
cmpl
popf
test
mov
jp
notb
cmpsb
fildll
mov
inc
mov
lret
aaa
arpl
mov
sbb
and
xlat
ss
sarl
dec
rolb
or
lret
test
imull
popf
pop
ret
sub
cs
dec
xor
inc
xor
and
andb
xor
test
out
mov
ret
push
in
jo
shll
mov
stos
test
add
and
es
push
or
push
js
cmp
hlt
add
ljmp
xchg
ja
ficoml
or
and
inc
int3
fdivrl
mov
es
adc
mov
dec
inc
sarl
subb
dec
and
ret
out
xchg
cld
test
pushf
push
mov
add
clc
dec
ljmp
mov
jbe
std
mov
ja
push
and
inc
jnp
int
nop
jg
jp
stos
xor
pop
xchg
adc
adc
sbb
mov
rclb
test
je
jge
in
pop
outsl
sahf
test
lock
adc
out
test
xchg
add
mov
or
faddl
cmp
mov
loopne
push
mov
pop
inc
xlat
andb
inc
adcb
mul
adc
pop
cmp
jae
push
icebp
bound
pusha
cmp
hlt
clc
ret
or
rcr
sub
in
and
pop
jle,pn
or
enter
pop
mov
sti
mov
inc
xchg
dec
mov
adc
adc
add
jge
adc
sub
ror
ja
das
lods
movsl
sub
push
adc
push
xchg
sub
loop
jle
dec
xchg
shrl
loope
fwait
repz
clc
int3
test
aad
test
aad
mov
rorb
in
ljmp
push
mov
ljmp
xor
sub
sbb
mov
jecxz
in
fnstenv
aas
pop
fiadds
loop
call
pusha
jp
push
xor
sbb
orb
movsl
jae
pusha
push
cmp
sbb
push
mov
jg
data16
push
fmul
cmpsb
push
testl
daa
xor
cmc
push
outsb
mov
shll
cmp
das
add
adc
bound
pop
cmp
inc
outsb
mov
jg
mov
outsb
rolb
mov
lods
das
jae
dec
aad
lea
xor
aam
or
sti
fidivrs
pop
cli
inc
jb
mov
push
jge
dec
jb
dec
movsl
movsl
push
mov
lahf
movsb
cld
ja
in
cld
aaa
cltd
xor
fwait
jbe
add
divb
push
xchg
or
pop
jle
xchg
into
fld
adc
push
out
adc
xor
mov
stc
xorb
pushf
sbb
clc
push
imul
test
cmp
sub
test
test
cli
and
aam
mov
sub
fwait
jb
mov
xor
das
or
pop
jbe
enter
mov
enter
clc
jp
bnd
ret
mov
xor
push
adc
cmp
bswap
and
pop
pop
push
lcall
dec
fcmovnbe
jb
clc
ss
add
xchg
lcallw
js
and
jnp
inc
or
aam
jo
inc
mov
jecxz
test
scas
or
xchg
pop
pop
cli
push
mov
adc
mov
xor
inc
jae
add
rclb
inc
fisubl
dec
es
jne
push
negl
xchg
call
cmp
out
mov
push
mov
aad
insb
outsb
xor
xlat
aas
cmp
push
add
testb
mov
mov
dec
cmp
cmp
sub
stc
mov
cmp
popa
cmp
mov
jb
add
imul
mov
mov
adc
mov
jo
sub
inc
mov
jnp
sub
mov
in
add
mov
xchg
sbb
mov
push
fdivrs
push
xchg
int3
aad
lds
out
into
imul
orb
sahf
fwait
in
imul
mov
pop
test
jo
sub
popf
mov
sub
stos
or
sub
iret
fwait
xor
and
test
inc
aaa
inc
xor
loopne
cltd
in
mov
out
lock
in
lret
jl
jge
cmp
push
push
jecxz
add
jg
repnz
out
shll
notl
inc
rclb
pop
test
inc
xor
cltd
mov
shll
sbb
xor
xor
cmp
adc
fsubl
push
imul
in
jne
mov
or
cmp
and
dec
aam
lret
sarb
mov
dec
into
add
mov
nop
mov
mov
push
or
fs
add
mov
push
stos
xchg
xlat
xor
loop
push
stc
cmp
add
test
xor
jmp
loopne
sub
jmp
inc
shlb
mov
fsubp
es
xchg
dec
pop
mov
das
jo
pop
lcall
add
jne
in
lods
mov
leave
xchg
mov
mov
jp
sub
push
dec
push
or
aad
int3
cmp
and
adc
push
xorb
or
dec
jno
sbb
pop
mov
xor
xor
jmp
push
cs
in
mov
cmpsl
inc
add
xchg
jbe
andb
mov
push
out
fiadds
js
add
imul
aad
or
lret
fs
lea
in
hlt
xchg
inc
jp
dec
scas
out
jbe
push
add
in
sti
adc
fsubr
in
lcall
or
cmp
imul
dec
dec
std
lds
mov
nop
dec
jl
cmp
ljmp
or
fucom
push
cwtl
loop
hlt
cmp
pop
lods
faddl
jno
mov
aaa
jmp
insb
popf
xorl
icebp
popf
xor
stos
xchg
jb
or
add
mov
cmp
sarl
mul
inc
sbb
push
or
in
outsb
xchg
addb
sub
clc
add
xchg
hlt
pushf
daa
xchg
pop
jae
scas
push
pop
pusha
stos
test
imul
outsb
pop
and
mov
sub
push
popf
ljmp
pop
pop
jne
cli
es
sbb
dec
cmc
loop
mov
test
inc
pop
adc
push
xchg
ss
test
scas
xlat
mov
xchg
mov
stos
imul
lods
xor
xor
pop
sahf
xor
inc
and
movsl
pusha
repnz
es
dec
push
int3
outsb
ret
sbb
inc
mov
jg
test
dec
addr16
shl
jo
addr16
xchg
shl
and
arpl
aam
and
mov
aas
arpl
mov
xchg
fs
sbb
pop
inc
cwtl
cld
and
sub
sub
mov
inc
inc
pop
jmp
jb
aad
fs
dec
imul
xchg
dec
movsb
bound
int3
ljmp
jae
and
adc
jbe
testb
ja
popf
xchg
mov
mov
testl
ds
movsl
mov
rcrl
sbb
stos
mov
add
cmp
xor
xchg
xchg
int3
repz
jb
cltd
mov
pop
xchg
dec
into
push
ret
lods
cmp
sarb
insl
dec
jmp
test
push
mov
imulb
push
sbb
mov
rcrb
xor
fwait
lods
stos
out
push
pop
sbb
int
dec
mov
and
daa
add
xor
insb
inc
frstor
int
push
mov
fcomps
adc
pop
loopne
xor
scas
and
fidivrl
pop
cmp
pop
push
int
jae
xchg
lock
dec
pop
lds
push
cmp
addr16
inc
mov
or
out
mov
or
jg
dec
aad
pusha
and
dec
pop
std
or
and
inc
imul
cli
pushf
iret
adc
pop
je
daa
mov
out
jae
jnp
neg
dec
in
sahf
cmp
cwtl
cmpsl
daa
and
lds
dec
mov
popa
mov
sub
sub
lcall
dec
fcmovnbe
mov
subl
mov
mov
insb
jl
adc
insl
lea
sub
push
gs
or
outsb
fbld
jl
cmp
push
icebp
inc
push
jns
adc
add
jns
add
bound
shrb
cs
fildll
in
xor
inc
adc
mov
xchg
dec
and
mov
jb
js
lret
xchg
int3
push
in
testl
iret
test
cmpsb
xchg
jbe
and
mov
iret
sub
pop
arpl
cmp
pop
cmpsb
lods
mov
stc
out
aad
cmp
bound
dec
cld
mov
cmpsl
into
aas
cmp
roll
push
jb
mov
push
jne
popf
xchg
incl
data16
out
es
dec
xor
popf
loopne
mov
jae
pop
out
ds
stos
cmc
lcall
push
movsl
je
out
mov
lods
push
mull
cmp
mov
mov
je
in
shrl
or
jg
ss
mov
sub
xchg
out
pop
dec
ljmp
leave
dec
xor
xchg
jl
cmpsl
jp
psrlq
and
sbb
std
xchg
int3
pushw
push
or
mov
mov
popa
imul
or
push
sub
and
xor
mov
sub
cmp
arpl
xor
sub
sbb
int
out
mov
mul
jb
cs
cld
cmp
jp
sbb
cwtl
push
fcoml
ror
jp,pt
sbb
in
shlb
xor
sbb
jmp
adc
in
enter
lcall
push
adc
insb
push
leave
cwtl
jnp
clc
paddusb
mov
int3
out
pop
or
xchg
xor
lret
popf
mov
ja
incl
addr16
iret
jbe
inc
mov
mov
mov
xor
lret
xchg
push
iret
mov
mov
jge
cltd
pop
ja
mov
inc
movsl
bnd
jl
push
add
ret
jno
push
loope
add
sbb
cmp
add
int
rclb
mov
cmpsl
mov
jno
mov
push
mov
jo
in
add
in
test
in
pop
sub
mov
stc
xor
cmp
pop
lret
repnz
push
pop
mov
pop
imul
push
fcoml
push
and
adcl
pmaxsw
or
mov
test
test
xchg
ret
xchg
jns
push
mov
xchg
outsb
test
pop
add
ss
rcl
jle
cmovno
cmpsb
xor
jo
out
lcall
scas
jge
imul
and
jne
mov
xchg
stc
les
sub
mov
repz
les
pop
aas
fstpt
repz
pop
sub
push
pop
inc
test
pop
or
pushf
mov
repnz
cmp
aad
dec
cmp
xchg
jo
push
cs
adc
or
frstpm(287
imul
dec
shll
hlt
stos
or
pop
and
shr
xchg
inc
sbb
sub
jne
cmp
add
movsb
arpl
cmp
add
sub
dec
xor
hlt
outsb
xor
or
stc
lea
cld
testl
mov
icebp
in
jne
fnstenvs
mov
fisttpll
jl
push
data16
cmp
mov
mov
xchg
clc
adc
cmc
add
adc
xchg
push
push
cmp
hlt
dec
adc
imul
sub
addl
and
push
mov
fsubrs
push
add
pop
fwait
jmp
movsb
pushf
cmp
inc
shl
dec
clc
jnp
sub
fs
adc
cli
lret
add
mov
stc
jno
pusha
push
and
jno
pop
lret
xchg
clc
mov
inc
push
rorb
inc
push
pop
add
mov
data16
mov
xor
jle
xchg
nop
lahf
jnp
lock
popa
repnz
mov
orb
lret
cmpsl
push
pop
push
stos
imul
jo
xchg
sub
or
out
inc
push
jle,pt
negb
aas
mov
ljmp
xor
cmp
imul
outsb
mov
test
push
and
ret
or
sub
test
insb
pop
xchg
lea
cmpsl
int
jle
dec
push
loope
jb
in
iret
mov
rclb
cmc
cwtl
xchg
dec
shl
loope
js
pop
inc
imul
outsl
rcrl
lods
stos
xor
ret
jmp
repz
in
xchg
jle
nop
inc
insb
orl
xor
mov
repz
mull
ds
jp
inc
mov
pop
jmp
dec
test
push
mov
adcl
xor
in
lret
pop
add
and
adc
lock
pop
inc
inc
and
fs
sbb
and
jns
fmul
push
push
and
in
out
repz
insl
cmpsb
sbb
sbb
xor
les
jle
lods
pop
out
and
repnz
sub
clc
dec
in
loop
mov
xor
mov
or
sti
adc
test
jns
outsb
aaa
xor
push
mov
sbb
and
mov
outsl
jno
add
push
pop
ss
pop
test
arpl
pop
pop
out
or
xchg
popa
pop
sub
frstor
pop
sbb
test
and
fidivl
lods
negb
pop
ret
call
sub
mov
sub
mov
mov
repnz
mov
xor
aam
pop
jns
orb
cmpb
ja
cwtl
stos
faddl
ret
data16
and
jp
in
fsubrs
add
fsubp
pop
cmp
mov
jmp
mov
jo
sahf
dec
pop
pop
inc
and
cmpsb
hlt
jae
lock
inc
mov
imul
jns
leave
scas
mov
cld
cmp
dec
leave
sub
dec
jae
repz
scas
call
ljmp
xchg
pop
aam
add
and
sbb
xchg
in
fdivs
xor
jecxz
xchg
pop
xchg
push
test
pop
pop
xchg
pop
aad
inc
fsubp
fistl
cwtl
mov
push
idiv
cmp
add
dec
addb
insl
mov
pop
clc
xlat
fistpl
or
dec
add
push
pop
sbb
jle
outsl
dec
insb
dec
pushf
iret
out
fsubrs
mov
aam
mov
jb
imul
push
dec
inc
add
dec
push
leave
mov
add
aad
jbe
std
js
cmp
xchg
enter
cmpsb
push
rol
add
stc
je
jecxz
lods
outsb
pop
outsb
inc
inc
aaa
test
adc
std
out
sub
icebp
xchg
sahf
adc
cmp
cmp
rcrb
pop
je
mov
sar
fcompl
cld
mov
pop
int
xor
mov
iret
sub
rolb
ds
jo
inc
or
fprem
push
push
xlat
sahf
dec
mov
in
lock
in
call
sub
int3
vandpd
sbb
xchg
outsl
mov
shlb
sub
sarl
sub
out
movsb
sub
stos
stos
push
sbb
sub
rcrb
fisubrs
popf
or
xchg
pop
add
inc
shll
and
xorb
jl
daa
daa
stos
ficompl
popa
pop
das
out
int
inc
and
jno
imul
adc
mov
push
pusha
pop
jbe
lahf
test
in
lret
out
pop
dec
cmpsb
sbb
mov
aam
lock
lret
sti
xor
mov
sar
out
sbb
lahf
xchg
mov
push
jmp
lds
pop
insl
imul
ret
aas
pop
lea
movsl
in
mov
cld
pop
sub
int3
movsl
gs
mov
stos
cs
insl
adcl
sub
and
test
jnp
pusha
xchg
aaa
sub
cmp
xchg
xor
loope
dec
add
ja
ja
mov
sti
mov
pushl
dec
inc
mov
dec
push
movsl
dec
cmp
lcall
insl
push
scas
movsl
out
mov
pop
inc
jnp
cltd
push
push
shl
mov
sbb
or
xor
mull
dec
jg
sahf
xchg
sahf
jns
and
movsb
inc
dec
pushf
dec
or
push
stc
out
mov
mov
xor
add
pop
inc
jl
push
xchg
dec
add
imul
fsubp
ficomps
arpl
test
pusha
mov
xchg
add
lret
jo
sbb
mov
sarb
add
sub
aam
nop
fistpl
aad
test
sbb
hlt
lahf
mov
cmpsl
and
add
dec
dec
into
ljmp
rolb
or
sub
push
push
jae
aas
ret
fucom
mov
int
in
out
loope
in
sub
aaa
fidivrs
or
gs
xchg
cmp
aaa
or
add
cli
dec
dec
sub
or
scas
popf
mov
addr16
cmp
fiaddl
dec
les
inc
and
test
mov
mov
push
and
and
mov
nop
or
shrl
xchg
inc
lods
movsb
flds
and
xchg
sub
jnp
and
push
inc
or
inc
xor
roll
ljmp
mov
sti
mov
inc
pop
pop
stos
mov
sub
xchg
ljmp
sbb
in
push
cmp
add
rcrb
dec
mov
push
mov
aaa
mov
dec
jae
mov
imul
loop
push
jmp
insb
add
jg
pop
fcomps
mov
vpminub
sub
inc
dec
in
test
hlt
pop
into
pop
mov
int3
loop
jg
mull
mov
mov
mov
dec
mov
xchg
jecxz
xchg
out
out
mov
scas
adc
lods
mov
mov
lock
jl
out
adc
cmpsl
test
popa
test
pusha
outsb
cmp
mov
cmp
stc
into
pop
push
mov
fcomps
shrb
mov
lret
jl
test
cmpsl
cld
jb
mov
scas
sub
int3
and
push
xchg
enter
sbb
jae
sub
sub
lea
jo
add
bound
rorl
in
pop
sub
cld
dec
xchg
jle
mov
sbb
xchg
repnz
dec
mov
inc
mov
adcl
mov
xor
sbb
test
push
mov
adc
cmp
cltd
mov
leave
iret
add
ljmp
mov
fs
push
rorl
daa
arpl
stos
xor
dec
pop
std
push
push
dec
dec
pushf
sub
int
sbb
inc
sbbb
test
inc
arpl
jae
pop
rcrl
imul
xchg
enter
ret
xor
dec
and
dec
ret
mov
and
shlb
cmc
add
test
sub
imul
scas
jle
pushf
xchg
lret
add
mov
jnp
xchg
lret
mov
xchg
js
push
adc
ljmp
add
jnp
mov
movsb
jmp
jle
imul
jnp
jl
pop
andl
jmp
mov
lods
icebp
push
add
inc
bound
mov
xchg
xor
sahf
ja
xor
cld
and
jo
cmp
cld
inc
leave
dec
xchg
and
in
leave
cli
fistpl
out
sub
mov
mov
mov
xchg
imul
shlb
push
adc
jl
cmp
ja
cmpsb
gs
jecxz
sub
rcll
loope
into
or
adc
addr16
movsl
cmp
gs
mov
sbb
xlat
mov
lahf
ret
push
cs
cmp
imulb
add
cmp
mov
push
out
sti
adc
inc
mov
je
mov
adc
cmp
mov
daa
push
fcomps
add
sbb
jg
into
mov
jecxz
daa
and
repz
push
sbb
jmp
rclb
movsl
inc
pop
xor
pop
mov
cmp
add
in
test
clc
push
ds
fdivs
daa
jl
cmovo
adc
push
sti
sar
addr16
enter
loope
test
sbb
adc
int
fwait
sbb
xchg
jnp
out
jne
or
lret
xchg
or
ret
ds
mov
pop
mov
adc
aad
loopne
ss
and
or
clc
aad
fwait
sub
lahf
sti
or
xor
in
lods
rclb
andl
repnz
and
nop
pop
popf
and
test
loopne
inc
imul
push
sar
pop
into
sbb
jmp
scas
imul
dec
mov
test
jnp
inc
lods
ds
cmp
xchg
mov
fwait
aad
cli
popl
negb
movsb
cmc
jae
addr16
das
sub
xlat
jge
inc
xor
aas
adc
push
add
cmpsl
fucom
xchg
idivb
adc
insl
cmpsb
testl
shl
stos
hlt
or
adc
out
test
and
shrb
cmpsb
adc
and
mov
ljmp
add
fistpl
push
dec
and
testb
jg
stos
xlat
lods
ret
push
jmp
nop
cli
repz
mov
pop
xchg
sbb
jecxz
add
xchg
cs
sub
sbb
into
sub
stc
imul
push
out
and
add
pop
int3
jle
repnz
pop
imul
pminsw
pop
jo
test
in
mov
push
jg
mov
push
mov
insb
outsb
and
sbb
cmpsl
pushf
movsb
rcrb
and
daa
mov
cli
dec
pop
sub
aam
pop
test
movsb
and
xchg
mov
mov
or
dec
and
mov
xlat
dec
repnz
fsubr
mov
and
bound
mov
retw
jno
rclb
dec
pop
mov
loop
aad
or
inc
loopne
nop
jne
aas
mov
les
cmpsl
dec
jns
add
lret
enter
outsl
out
int
pusha
jle
jle
cwtl
sbb
clc
xchg
mov
sbb
cmpsl
daa
inc
lea
mov
aas
push
dec
das
out
cmp
fidivs
lret
lcall
pop
cmpsb
out
or
xor
incl
inc
inc
lret
mov
aas
xchg
pop
pop
jmp
repz
and
rcll
imul
inc
nopl
xor
mov
and
testl
pop
lock
mov
or
push
jmp
call
cli
stos
mov
aad
pop
fcmovnu
lods
rcll
jge
dec
aaa
sub
sbb
into
fwait
add
pop
aaa
sbb
ret
out
jl
or
je
push
dec
jo
sub
std
sbb
lret
push
push
mov
popa
sahf
fbld
in
into
push
xor
cwtl
lcall
mov
mov
movsl
dec
testl
test
or
and
mov
cmp
xor
fsubrs
jmp
int3
mov
push
fwait
xchg
mov
rcrb
arpl
fcoml
push
pushf
jle
jo
pop
add
test
mov
out
add
repnz
jno
insl
test
push
xchg
push
cmp
jno
sti
ret
hlt
inc
out
adc
mov
mov
push
jge
jns
aas
adc
fistps
push
clc
pop
and
out
dec
call
mov
test
rorl
push
bound
lret
add
mov
xchg
inc
aad
cmc
icebp
dec
xchg
cmc
mov
sbb
test
pop
dec
cs
sub
adc
jp
sbb
inc
lcall
adc
dec
shrb
adc
mov
sbb
je
xor
cld
jg
fildl
rorb
rol
push
xchg
mov
add
test
aad
push
mov
pop
hlt
pusha
sti
jo
sub
scas
ss
push
xchg
gs
pop
dec
sub
psraw
push
mov
in
pop
dec
shlb
rorb
mov
xchg
loope
in
fldcw
sbb
xchg
cmp
ja
lea
jb
dec
mov
mov
mov
sahf
aad
sarl
add
push
xlat
pop
les
push
popa
test
lret
pushf
and
mov
mov
repz
sahf
fidivs
repnz
scas
pop
nop
pop
sbb
jecxz
jnp
stc
add
xchg
ljmp
jae
int3
mov
ja
dec
mov
ljmp
xchg
movsl
loopne
sti
push
cli
or
and
aam
stc
lock
fwait
jl
lahf
out
movsl
pop
jb
add
push
sbb
mov
and
imul
cmp
cmpsb
fstpl
jno
je
lcall
xor
cmp
dec
mov
push
das
int3
dec
or
xchg
fildl
xchg
stos
loope
insb
sub
inc
mov
mov
repz
call
add
fisubs
mov
jbe
sarb
cmp
pop
out
dec
ljmp
inc
mov
es
sbb
pop
dec
jecxz
test
fbld
dec
or
or
xchg
pusha
xor
imul
lret
add
cmp
mov
jp
pop
sbb
mul
and
into
in
xchg
dec
addl
fildll
ljmp
and
mov
dec
jp
adc
xor
or
push
add
addr16
push
scas
stos
js
dec
jg
dec
mov
lds
mov
roll
sbb
shlb
ljmp
roll
ja
and
lcall
mov
jo
sub
xchg
xchg
adc
mov
cmp
mov
inc
push
push
jno
cs
loopne
popa
adc
ljmp
xchg
dec
or
mov
in
rcr
sub
mov
ljmp
and
inc
in
pop
cli
ljmp
jae
rorb
addr16
fcmovnbe
std
inc
fdivrl
adc
stos
rcl
inc
pushf
sbb
movsl
popf
not
adc
push
lret
push
stos
pop
imul
adc
leave
sbb
adc
push
jo
ljmp
repnz
mov
cmp
cli
push
mov
jae
sbb
xor
jb
mov
and
dec
push
cmp
sbb
push
mov
ret
movsl
lret
jmp
mov
cmp
stos
xor
xlat
pop
in
fucomi
pushf
and
lahf
cmp
fcmovb
xor
test
punpckhbw
aas
sub
pusha
shl
mov
adc
lods
fldl
je
and
test
add
dec
ret
jge
div
hlt
cmp
mov
jnp
sbb
lds
cltd
cmp
add
sbb
dec
lock
xchg
xchg
imul
dec
jle
cmp
mov
sti
fidivl
xor
xlat
jecxz
mov
fadd
and
or
and
inc
cmp
or
in
imul
sarb
mov
es
mov
fistl
mov
cli
sub
repnz
nop
mov
test
stc
push
js
jne
stc
sbb
insb
inc
ret
lahf
outsb
dec
and
in
lret
fcmovnb
sbb
jp
enter
and
je
mov
dec
jmp
xchg
cmp
rcr
stc
jne
loopne
add
test
pop
push
cmpsb
push
lret
notl
inc
adc
sarb
lahf
xchg
hlt
jnp
shrb
cli
mov
out
mov
adc
or
ljmp
mov
mov
xchg
sub
xlat
imul
mov
leave
inc
dec
cld
enter
mov
cmpsb
outsl
jae
dec
dec
push
lahf
fmulp
hlt
test
nop
ret
fidivrs
cmp
mov
pop
jb
dec
pop
xchg
pop
ljmp
mov
mov
mov
and
add
lods
popf
stos
test
push
jne
and
bts
out
cmpsl
pusha
mov
mov
add
insl
xchg
push
mov
iret
sub
scas
rcr
lds
ds
or
and
push
hlt
push
jne
push
push
sub
cli
ficompl
and
loope
das
nop
inc
sub
ficompl
int3
or
lds
loop
rorl
daa
xorb
pushf
mov
pop
jmp
stc
mov
arpl
xchg
pop
lods
and
in
out
pop
jp
mov
stc
nop
push
icebp
stc
mov
cmc
and
pop
dec
pop
mov
adc
and
sub
gs
popf
jne
xchg
out
out
cs
pusha
pop
mov
mov
aad
aaa
int3
dec
lods
push
ds
jmp
xor
jnp
or
mov
mov
cmpsb
mov
jg
pop
fmul
iret
and
pop
sti
push
outsl
cld
push
ss
test
imul
jb
cli
shlb
ja
mov
cwtl
jp
movsl
fsubrs
push
stc
fistpl
fwait
or
push
gs
dec
popa
insl
lods
out
sbb
xlat
shlb
test
sub
int3
mov
in
shr
lods
xchg
fsubl
shrb
mov
mov
push
jg
jns
dec
pop
push
icebp
lcall
rolb
mov
scas
je
mov
pusha
sbb
bound
stc
jl
xchg
clc
popf
iret
jp
mov
loop
inc
jge
scas
rorl
inc
ret
xor
push
pop
jo
mov
hlt
dec
push
jmp
pushf
test
xchg
jge
cmp
mov
add
daa
mov
xchg
das
movsl
scas
roll
je
cld
push
sbb
mov
stc
popf
arpl
xchg
testl
mov
data16
lds
aaa
pop
pop
add
sub
stos
addr16
jmp
adc
push
mov
mov
lds
xchg
lahf
mov
inc
fisubrs
icebp
aad
lgs
dec
out
ja
call
mov
xor
into
int
int3
fcoml
sub
hlt
dec
pop
pop
push
cmp
cmp
out
in
into
add
insb
pop
adc
insb
jmp
cmpsl
int3
aaa
leave
xor
inc
and
das
push
outsb
sbb
cmp
in
dec
int
mov
lahf
ss
ljmp
mov
or
xchg
out
pop
mov
xchg
ret
rclb
cmp
out
cmp
fmuls
push
xchg
push
mov
outsb
pop
dec
cmp
mov
pusha
jp
jg
shlb
in
shl
dec
inc
sbb
cmpsb
das
cmpsl
push
pop
dec
add
rorl
jle
jnp
ret
adcb
in
mov
test
inc
mov
in
or
push
or
mov
jge
rcrb
add
pop
xchg
adc
inc
sbb
inc
dec
pop
addl
mov
fmuls
repnz
jecxz
mov
shl
mov
pop
daa
mov
arpl
fstpl
xor
cmp
mov
pop
fldcw
xor
mov
test
cli
pop
jmp
inc
xchg
sub
mov
in
test
mov
fisttpl
loop
mov
in
in
or
pop
cs
rcll
mov
push
cmp
or
sbb
or
and
jne
dec
stc
add
inc
adc
jmp
or
sbb
inc
lret
mov
sub
stos
mov
cmp
jbe
mov
stos
imul
pop
add
add
nop
xlat
and
cvtps2pd
popf
jle
pop
dec
cwtl
cmpsl
aad
or
leave
arpl
pop
xchg
movsb
push
push
into
pop
xchg
out
mov
lcall
lea
adc
mov
call
jl
fucomip
jp
dec
cmp
popa
inc
sub
mov
mov
dec
jmp
imul
fs
add
cmp
int3
add
sub
pop
add
test
mov
aaa
mov
call
pop
pusha
mov
push
sub
clc
cmpsl
and
in
jns
mov
aas
add
jnp
cmpsl
sbb
xchg
adc
jmp
mov
clc
loope
sbbl
popf
lret
stc
sahf
pop
nop
loopne
mov
sbb
pop
push
cwtl
fchs
jge
mov
push
adc
scas
sub
mov
and
push
lods
pop
data16
dec
imull
jne
push
xchg
mov
mov
call
loopne
iret
inc
subl
jno
hlt
dec
cmp
pop
pop
xchg
push
lock
sub
push
mov
vmovlps
jge
mov
mov
mov
adc
addb
and
and
fistpl
xchg
sbb
loopne,pt
mov
push
test
int
pop
mov
pushf
shll
mov
rorb
fcompl
mov
stos
xor
mull
dec
push
outsl
fisttpl
mov
test
pop
fisttps
cmp
ja
jno
sub
jmp
push
fwait
jae
adc
mov
ret
test
sbb
mov
cmp
imul
xlat
insb
inc
jne
imull
mov
dec
cmp
fimuls
xor
repz
jmp
imul
pop
mov
mov
mov
jbe
xchg
jbe
mov
adc
add
arpl
insl
xor
rcrb
aaa
push
loope
xchg
mov
add
cmp
xlat
adc
aas
dec
sarb
mov
fisubl
sub
cmpsb
lods
pusha
rcl
jecxz
cmpsl
cli
cld
or
mov
xor
cmp
mov
add
xchg
iret
lahf
mov
lret
add
jne
pop
mov
pusha
cmpsl
repnz
bound
repnz
push
faddl
push
dec
dec
cmp
xchg
sbb
mov
enter
nop
xor
adc
sub
xor
mov
ficompl
adc
and
out
js
adcb
mov
inc
das
jo
loopne
pusha
add
inc
xchg
jmp
jae
js
test
add
sti
lret
dec
sbb
test
xor
xchg
inc
repnz
cmpsb
and
out
bound
sbb
jp
xchg
mov
push
cld
inc
mov
ret
or
sub
les
repz
mov
lods
lock
imul
cmpb
mov
mov
js
cmp
jl
data16
scas
hlt
movb
push
xor
add
push
jmp
push
mov
stos
add
stos
sbb
adc
repnz
push
push
mov
aam
sub
setae
pop
and
jg
or
sub
enter
pop
scas
push
sbb
outsb
ret
inc
cmpsl
mov
jo
bound
or
aas
push
adc
adc
or
mov
dec
jg
xchg
jmp
sub
sahf
test
ret
rcrb
and
dec
pop
fildll
ret
enter
dec
pushf
xchg
imul
ficomps
lods
mov
icebp
cld
data16
add
mov
stos
std
les
scas
scas
sqrtps
lcall
fs
aaa
mov
jp
ret
test
lods
jl
mov
fldcw
test
lea
jnp
std
add
push
dec
or
dec
fnstcw
mov
les
jecxz
xchg
add
ficoms
mov
in
out
bound
call
mov
clc
iret
and
mov
cmp
sub
sbb
mov
cmpsb
les
aas
outsl
daa
xchg
cmp
enter
shr
mov
mov
inc
sub
out
movsb
int3
repnz
push
dec
add
jne
ds
lret
lock
xchg
divb
push
lds
pusha
xor
cs
lahf
fwait
jbe
push
pop
mov
adc
inc
mov
mov
sbb
fnstcw
push
imul
add
inc
sbb
cltd
fs
insl
lds
daa
scas
ja
loop
jae
cmp
sub
mov
mov
push
pop
xlat
or
out
xchg
adc
mov
out
adcb
or
fmuls
xchg
xchg
pop
or
call
in
daa
mov
pop
inc
aas
inc
std
and
jecxz
cmp
push
leave
sub
loopne
cld
jne
movsl
and
fwait
cmpsb
cmp
xchg
and
inc
push
xor
inc
cmp
adc
outsb
stos
xor
or
mov
aas
sbb
stc
push
cs
ret
or
sbbl
cmp
adc
adc
mov
or
fbld
pop
ljmp
dec
in
lds
sub
add
shr
ss
and
repz
push
out
fs
push
in
mov
pop
sbb
int3
jnp
cmc
pop
cmp
sub
scas
add
add
dec
and
mov
int
ja
lock
sbb
add
rcrb
enter
bound
addr16
loope
mov
pop
adc
pop
repz
into
mov
jecxz
addr16
cs
mov
orl
aam
pop
adc
ja
movsl
mov
inc
mov
movsb
lods
mov
stos
les
jle
jb
jge
sbb
or
mov
lcall
adc
add
sbb
adc
inc
cmpsl
jmp
shl
push
xchg
mov
loope
shl
xor
dec
jo
movsb
enter
js
bound
cs
ret
xchg
lahf
out
test
ret
pop
inc
loop
or
pop
outsl
bound
push
xchg
cmc
push
mov
jae
xor
and
sbb
ret
imul
test
ret
dec
imul
in
xor
inc
pop
pop
mov
fistl
inc
jno
push
push
stc
jmp
int
pop
into
push
inc
xlat
out
mov
cltd
mov
xchg
xor
sbb
mov
sub
mov
cmp
dec
jp
fisubs
cmp
cmc
add
idiv
pop
in
xor
push
mov
mov
xor
and
pop
stos
xchg
jecxz
ds
or
aas
xchg
xchg
int
and
fisttpll
xchg
add
clc
daa
outsb
pop
aaa
push
in
cmpsb
jl
mov
int
inc
mov
jmp
cwtl
jle
sahf
mov
cmpsl
cmp
shlb
cmp
test
xchg
repz
mov
dec
pop
les
adc
rep
ror
jb
or
jle
fmul
sti
jge
cmp
add
mov
cli
xor
test
inc
sbb
icebp
xchg
daa
test
inc
icebp
or
mov
pop
cmp
xchg
push
cmc
jns
xlat
out
or
xor
shrb
lds
and
xor
inc
pop
les
cmp
xchg
faddl
xchg
cmp
shrb
push
push
sbb
adc
gs
dec
lret
scas
into
cltd
cmp
or
adc
lea
push
dec
sbb
fstp
insb
out
mov
xchg
insb
mov
repz
lock
mov
dec
adc
clc
inc
or
dec
adc
jmp
iret
cli
mov
pop
sbb
fistpll
and
insb
addr16
cmpl
sbb
xchg
dec
jns
jp
push
loop
sbb
lods
sub
or
test
and
mov
addr16
cmp
dec
cmp
mov
icebp
xor
ret
xor
xor
cli
mov
stc
xor
cmp
in
rcrb
les
and
mov
out
xchg
jge
fisubrl
mov
cld
sbbb
outsb
mov
in
inc
jo
mov
lret
stos
adc
lock
xor
mov
scas
call
roll
add
js
push
leavew
std
sub
add
inc
iret
or
stc
push
rcrb
test
pop
or
mov
xor
push
cmp
sar
les
cmp
or
mov
int
scas
aaa
fidivrs
dec
or
mov
xor
jg
mov
inc
xchg
dec
dec
jg
inc
dec
xchg
mov
push
cwtl
cmp
inc
pop
nop
cltd
xchg
in
cmp
and
mov
sbb
xor
les
mov
sub
stc
xor
test
pop
flds
in
es
cmp
add
rclb
push
aam
fcmovbe
lds
sarb
popf
dec
add
mov
int
scas
in
add
jp
pop
mov
mov
jmp
pop
xchg
aad
push
sub
in
cmovns
xor
sub
xchg
jg
mov
call
mov
xchg
fcmovb
sub
repz
iret
sahf
lea
and
and
hlt
pop
pop
rcl
inc
xorl
push
inc
int
mov
stos
fiadds
push
and
add
xchg
pop
xchg
mov
in
arpl
jno
cmp
ljmp
hlt
addr16
gs
inc
xor
cld
cmpsl
and
movsb
adc
mov
test
ret
stos
push
or
adc
mov
lock
pop
test
xchg
xchg
mov
and
jle
jae
mov
mov
pop
loop
xor
pop
aaa
push
mov
jns
and
cs
addb
dec
or
or
mov
leave
dec
cmp
dec
insl
jae
add
xor
jb
dec
jns
mov
stos
pop
imul
cmpsl
and
das
inc
xchg
inc
rorb
dec
js
aam
int3
mov
inc
stos
orl
and
insb
popf
cmp
jg
subb
dec
out
in
mov
enter
rcrb
in
stos
call
mov
mov
xchg
push
sub
xor
in
loope
fdivs
lock
hlt
adcb
mov
cmp
in
cmp
cmp
in
adc
cltd
data16
sbb
repnz
cs
mov
sbb
stos
add
es
dec
dec
or
xchg
ljmp
push
mov
and
sub
retw
imul
push
push
in
mov
sti
cmp
xchg
rorb
sbb
adc
xor
sbb
outsl
orl
add
ljmp
mov
nop
cmpl
lock
loop
lea
mov
cmp
lcall
or
push
push
fcomip
mov
dec
aad
xchg
mov
repnz
mov
aam
sbb
jge
scas
or
fwait
inc
fdivrp
mov
imul
icebp
insl
cld
cmp
rolb
sub
mov
dec
cltd
mov
mov
dec
insb
into
shll
xchg
cmpsl
insl
mov
daa
aaa
mov
xchg
mov
lahf
test
xchg
inc
adcb
fcmove
or
jl
xor
inc
push
jmp
add
mov
cld
cmp
imul
fimuls
sub
or
add
sub
fdivs
repz
dec
daa
mov
inc
popf
xchg
pop
mov
test
test
inc
test
js
stos
lea
push
scas
xor
test
aad
testl
cmpsb
fisttps
cmp
pop
xor
sbb
or
inc
daa
push
mov
mov
jg
idivl
push
andb
jae
mov
dec
cmpsl
jle
mov
mov
popa
dec
and
and
xchg
pop
fidivrl
cmpsl
ficompl
hlt
cltd
mov
jb
mov
lahf
movsl
dec
orl
adc
xchg
push
dec
inc
stos
pop
sub
lods
fsubrs
sub
and
sub
mov
pop
int
jmp
xor
movsb
cli
stc
js
adc
leave
aad
pop
insb
sub
into
and
out
mov
dec
in
ret
jl
std
jo
cli
nop
repnz
jp
cmc
inc
cmc
push
jns
rorb
int
fcompl
jecxz
or
lret
inc
arpl
cmpb
adc
cmpsl
push
incb
push
pop
jo
dec
call
icebp
jnp
inc
repz
inc
mov
inc
mov
push
xlat
pop
add
xchg
adc
push
pushf
sbb
mov
pop
or
fs
dec
lods
pslld
lods
aam
loope
fbld
mov
mov
push
push
push
pop
mov
mov
in
pop
xchg
sbb
push
add
pusha
ficoms
test
inc
es
mov
jo
jno
fmull
xchg
nop
mov
std
jo,pt
mov
mov
mov
inc
cli
pop
xor
ljmp
jno
dec
push
jno
xchg
rclb
pop
jo
push
inc
call
pop
push
rol
sbb
lcall
imul
test
cmp
mov
fdivp
ffree
scas
inc
jmp
jmp
jo
in
insb
cmc
inc
insl
mov
mov
js
jmp
outsl
test
xor
addr16
lds
fwait
lahf
mov
mov
mov
xor
xor
in
pop
push
and
add
push
les
shl
jne
andb
jp
cwtl
fnsave
cli
jmp
mov
mov
in
das
notl
loop
lea
sbb
fcompl
jns
stos
andb
inc
add
push
xor
lods
leave
sbb
imul
scas
xchg
sbb
dec
insb
aaa
pusha
pop
mov
cmp
jne
xchg
mov
fs
push
arpl
jo
cwtl
orl
pop
outsl
roll
mov
adc
pusha
inc
ja
aad
addr16
inc
adc
stos
jno
add
mov
out
sub
sarb
in
idivl
sub
xchg
lods
iret
dec
shlb
xchg
pop
mov
movsb
movb
mov
cmp
or
out
push
mov
push
faddp
in
inc
jmp
xchg
xlat
cmp
xchg
sub
outsb
inc
popa
dec
sbb
mov
mov
sbb
jmp
push
aaa
or
jge
push
push
sbb
cs
xor
cmpsl
es
and
mov
fisttpll
out
rcrl
int
mov
das
pop
fbstp
jecxz
jns
pop
jl
mov
sub
and
orl
cmp
pop
or
aas
fsubp
push
push
pop
and
xchg
mov
cwtl
jne
push
out
testl
sbb
or
out
pop
xchg
in
dec
xor
int
mov
stos
into
movsb
imul
xchg
add
pop
sbb
inc
inc
jbe
mov
daa
lods
pushf
gs
sub
xor
daa
mov
popa
mov
movsb
mov
xor
mov
icebp
inc
das
aad
in
scas
mov
mov
addr16
fbld
push
js
and
push
inc
div
cmpsl
inc
cwtl
pop
push
mov
shlb
pop
in
xor
push
movsl
adc
ss
push
push
or
sbb
sub
sub
mov
insb
mov
sbbb
mov
andl
jb
adc
and
cmp
adc
in
mov
imul
scas
xchg
lahf
cmc
mov
push
push
jl
unpcklps
aaa
stc
lahf
jle
jns
je
je
jmp
xchg
dec
addr16
cmpsl
rcrl
and
xchg
jns
cwtl
iret
stc
test
scas
int
pop
fnstenv
push
outsb
xor
mov
pushf
out
outsl
pop
xor
dec
test
int3
jo
je
jmp
cmp
rolb
xchg
icebp
push
xor
cmp
mov
ss
int3
enter
iret
stc
jl
sbb
jne
mov
jg
cmp
xor
in
xorb
cli
subl
xchg
in
xchg
adc
mov
xchg
test
je
xchg
add
hlt
cmp
arpl
das
mov
sbb
jmp
ja
cs
fldl
shlb
wrmsr
cmp
ljmp
mov
jmp
int3
jmp
mov
cltd
mov
sti
mov
push
xor
fmull
jno
push
addr16
test
cmp
mov
aam
cltd
xchg
loope
xor
aas
fiaddl
pop
mov
push
adc
rclb
push
add
repnz
push
jle
sti
shld
or
mov
inc
cltd
imulb
das
sub
call
adc
bound
adc
call
ficoms
push
jg
cmp
lods
pop
xor
mov
add
mov
mov
push
cld
cmovo
mov
ds
out
add
cld
cmp
xchg
pusha
xor
cmp
stc
mov
cmp
stos
push
stos
or
or
sbb
nop
pop
xchg
adc
repnz
pop
test
mov
into
fbstp
lods
repz
scas
fcompl
or
fnstcw
and
mov
es
adc
aas
setae
inc
pop
mov
pop
adc
jmp
js
ret
dec
mov
lods
in
mov
lret
insl
mov
into
inc
xchg
mov
data16
xchg
push
jl
push
outsl
push
pop
pusha
lods
push
ds
dec
pop
cwtl
out
cmpsl
inc
fstl
pop
leave
push
mov
cmp
pop
pop
sbb
dec
jb
dec
pop
and
ficompl
iret
data16
inc
xor
jb
dec
lock
fwait
mov
in
xlat
xchg
or
sub
dec
push
push
add
jl
pop
cld
or
out
sbb
je
jo
cmp
jp
js
les
xchg
shrl
mov
shlb
add
jnp
aad
add
xlat
cmp
or
mov
insl
pop
ja
popf
pop
cmpsb
mov
add
jmp
xchg
cli
jb
jo
cmc
push
cmp
sahf
push
out
fsub
cs
adc
fldt
pop
push
pop
cltd
test
shrb
popa
jecxz,pn
push
xor
or
das
pop
aaa
rorl
dec
ficoms
xchg
pop
fcomi
jge
inc
lock
push
leave
lret
sub
mov
or
mov
pushf
adc
xchg
mov
jnp
shrb
mov
or
adc
leave
cmpsb
mov
cwtl
add
pop
or
jae,pt
shlb
mov
mov
dec
mov
and
test
dec
orb
cmc
pop
sub
sub
gs
mov
insb
ss
xchg
jns
mov
mov
sarl
mov
push
cmp
js
sbb
fs
mov
call
mov
xchg
cli
cmp
pop
lods
xlat
popf
cmp
in
add
cs
xor
xchg
or
fimull
or
mov
mov
cltd
dec
xor
xlat
dec
imul
jg
xchg
jns
arpl
mov
jp
jbe
int3
fstp
xor
in
int3
ljmp
loopne
sahf
jg
adc
cmpsl
das
test
mov
js
je
jbe
test
pop
daa
sub
xchg
aas
loope
shr
inc
call
pushf
add
mov
rcll
xchg
lret
imul
mov
movsb
or
clc
sbb
test
push
adcl
loope
movsb
jae
fcmovnu
lods
es
push
imul
jns
adc
xchg
lahf
jnp
roll
add
push
mov
mov
dec
mov
loope
imul
jmp
call
repnz
es
int3
add
inc
sarl
jp
lds
sub
rcl
sbb
sahf
add
inc
sub
imul
mov
lods
add
lock
es
xor
adc
fists
mov
mov
movsl
mov
sti
ret
push
and
cmpl
jle
cmp
rorl
mov
mov
stos
push
aam
push
pop
lret
cwtl
jge
cltd
cli
dec
adc
push
jnp
call
dec
in
aad
dec
out
daa
sahf
mov
jbe
push
xor
cmp
xor
ret
or
mov
in
or
mov
lcall
mov
enter
cmc
test
and
dec
pop
cld
and
mov
adc
xor
adc
sahf
xor
iret
cmp
in
xor
jbe
loope
cmp
push
mov
sbb
sub
stc
roll
scas
lds
mov
out
adcl
hlt
sbb
cmp
mov
fidivs
cmp
pop
imull
fwait
add
mov
mov
pop
or
fidivs
xchg
push
orb
mov
fwait
repz
out
xchg
mov
xchg
pop
fs
xchg
sub
aam
mov
mov
mov
popa
jbe
enter
imul
xorb
push
out
je
or
mov
jge
repz
data16
xlat
pop
aad
loope
dec
jb
mov
pop
and
fwait
jne
mov
or
xchg
call
mov
je
xchg
fwait
std
dec
mov
cmp
jbe
mov
stos
or
leave
mov
dec
mov
jns
icebp
ret
xor
inc
mov
sub
dec
jmp
arpl
push
stos
or
movsb
push
jne
repnz
pusha
jae
sbbb
repz
xor
leave
sub
lahf
dec
in
lea
sub
sbb
or
jecxz
push
push
xadd
xchg
jmp
loopne
nop
xor
subb
test
lcall
in
sub
leave
sub
test
fdiv
addr16
add
mov
aaa
jge
loopne
inc
divl
fmulp
or
mov
cmp
mov
pushf
push
clc
sub
add
negb
les
xchg
push
or
push
xor
ljmp
fidivrl
es
and
aaa
mov
lock
aad
int3
sub
mov
lret
push
push
xchg
and
sbb
pop
stos
aad
mov
xchg
xlat
rorl
pop
adc
jno
dec
pop
mov
mov
hlt
xchg
test
in
and
sub
adc
loopne
or
xchg
mov
das
adc
adc
xchg
push
pop
insb
sub
push
loopne
ljmp
lods
and
cwtl
pop
cmp
int3
jp
icebp
daa
cs
movsb
sahf
repnz
push
addr16
lret
out
imul
xchg
je
jecxz
mov
sarb
iret
sbb
jp
scas
cmp
sub
js
in
lock
inc
mov
xlat
loopne
arpl
outsb
in
gs
dec
repz
or
mov
std
out
lds
cmp
mov
iret
sbb
pop
mov
mov
ljmp
ss
dec
inc
pop
int3
ret
xchg
and
stc
add
nop
nop
pop
aad
jb
out
imul
gs
ror
popf
dec
fbstp
mov
fsubrs
inc
add
sub
xor
cmp
call
aad
rcr
stos
icebp
out
xchg
mov
adc
jp
sbb
mov
and
hlt
sbb
stc
cmp
ss
out
cmpsl
outsb
int
mov
mov
roll
cli
jecxz
mov
jmp
jp
repnz
mov
push
imull
xchg
cmp
cs
outsl
subb
loopne
into
sarb
nop
scas
inc
xor
bound
shlb
cmpsl
xor
mov
in
cwtl
into
outsl
gs
mov
in
dec
enter
repnz
in
aas
mov
mov
add
insl
testb
lret
pop
or
inc
mov
sub
sti
jp
xchg
pop
nop
shrb
cmp
jnp
cmpsb
pusha
or
push
mov
in
add
mov
loop
repz
dec
fnstcw
jecxz
loop
mov
xchg
call
xchg
xchg
jno
or
pusha
xor
loope
test
dec
int
push
pop
add
mov
push
scas
add
mov
shlb
dec
lcall
scas
add
dec
jo
rorl
repnz
sub
cmp
push
inc
dec
xor
mov
out
adc
xchg
add
test
pop
pop
xlat
mov
iret
and
push
pop
xchg
mov
adc
pop
jns
repnz
adc
lret
int
nop
es
cmpsb
cwtl
add
sbb
aaa
lcall
jno
call
test
into
jno
pop
jne
and
xlat
fidivrl
xor
ret
xor
add
mov
push
daa
in
insb
mov
loopne
test
lods
sbb
inc
xor
andb
jge
ljmp
xor
mov
lahf
mov
cwtl
push
pop
sub
jo
or
les
sbb
inc
xor
lea
push
hlt
mov
jp
into
sub
mov
aas
add
loope
or
cmp
pop
adc
stos
jmp
cmp
jg
jbe
pop
cmp
setge
dec
cs
sub
je
jnp
push
out
arpl
push
ret
jp
mov
adc
mov
xor
lods
add
sub
test
lret
insl
loope
push
dec
pop
xor
dec
push
hlt
push
ret
adc
shrb
xchg
rorb
sbb
mov
push
stos
xchg
fstps
imul
jl
jb
aaa
mov
push
test
xlat
arpl
and
mov
aaa
pop
dec
sub
loop
fsubrp
adc
xchg
je
push
out
movsb
jb
ret
repz
jp
or
js
imul
shrb
iret
in
mov
mov
xor
xor
js
xchg
lea
pop
dec
mov
xlat
push
sbb
lock
movsl
into
addr16
xchg
dec
lods
roll
mov
hlt
adc
push
and
adc
fnsetpm(287
in
fucomi
or
add
add
gs
pop
idivl
xchg
push
shl
in
lcall
cmp
mov
add
pop
std
add
dec
imul
mov
movsb
sub
repnz
and
push
ds
xchg
ret
jecxz
cli
cld
addl
stos
divb
inc
fdivs
push
mov
or
mov
aaa
adc
cld
or
mov
jb
test
push
jg
fildll
push
fisubs
arpl
xlat
dec
dec
or
xor
jb
mov
cmp
test
mov
mov
in
cli
push
push
int3
into
loope
inc
ja
or
mov
pop
loop
pushf
or
movsl
inc
xor
add
sub
pop
data16
fwait
cmpb
ja
pushl
xorb
sub
aas
push
lods
add
lea
push
pop
pop
cwtl
gs
popa
inc
flds
lret
insb
imul
popf
aas
cwtl
mov
iret
loop
push
sub
fiaddl
repz
xchg
dec
xchg
dec
sahf
sub
dec
pop
and
scas
sub
cmp
adc
add
push
idivl
loope
imul
loope
mov
sahf
mov
push
jl
outsb
test
jo
rol
sub
insl
mov
enter
nop
sbb
sbb
fsubrl
insb
xor
cmc
lahf
and
pop
sub
xchg
ret
loopne
xchg
sbb
lret
leave
pop
inc
or
add
cmp
jecxz
pop
call
push
outsl
in
and
addr16
sbb
sti
xchg
imul
popa
pop
jns
into
scas
mov
pop
sbb
std
inc
ffreep
daa
cmp
inc
xchg
and
mov
pop
call
jg
xchg
jae
and
movsl
mov
push
jge
into
sub
mov
lea
test
jle
pop
fisubs
pop
sub
mov
leave
and
sbb
sbb
lahf
ja
xor
jl
mov
jmp
data16
cmp
in
imul
in
mov
fistpl
dec
sub
inc
inc
or
into
lds
mov
push
arpl
xor
and
xchg
aam
cmp
and
jnp
pop
mov
scas
mov
push
sub
nop
jmp
ss
mov
sar
leave
jp
pop
jmp
cmp
and
hlt
aad
mov
outsb
lods
or
daa
push
int
inc
je
clc
int
aad
scas
xchg
add
mov
cmp
add
daa
adc
ds
jns
cmpsb
out
xchg
in
testb
cmp
popa
notb
cwtl
add
push
insb
push
jl
inc
sarb
add
incl
mov
mov
sub
xor
xlat
cli
xchg
push
and
xchg
mov
mov
mov
pop
cmp
repz
pop
sbb
pop
jnp
sti
out
movsb
add
push
mul
xlat
mov
jns
sub
sub
clc
inc
arpl
insb
inc
je
push
loop
pop
fstl
popa
inc
out
cwtl
es
push
daa
jge
dec
out
loop
scas
inc
imul
mov
sbb
fsubl
inc
jb
stc
inc
adc
daa
outsl
mov
mov
jl
sbb
push
insl
cltd
xor
and
pushl
inc
add
xor
ljmp
adc
ljmp
sbb
addr16
imul
push
mov
dec
and
add
mov
outsb
fisubs
lods
aad
pop
inc
jle
lret
mov
les
push
mov
mov
scas
and
mov
test
xchg
xadd
je
jl
xor
test
sti
push
and
iret
imul
aaa
imul
iret
dec
test
test
movsb
jbe
gs
lods
fsubl
cmpsb
loope
sbb
sub
cmp
and
xor
pop
sarl
outsb
adc
scas
fs
jae
or
repz
cld
sbb
sbb
inc
ficomps
push
loope
inc
jle
leave
lods
adc
mov
rolb
sub
adc
sbb
push
mov
hlt
xor
sbb
rorl
sub
loopne
shl
push
cld
cltd
mov
adc
pushf
pushf
pop
pop
push
sarl
pushf
and
pop
fcompl
lahf
imul
cmp
add
xchg
adc
add
dec
and
or
or
inc
push
clc
pop
stc
mov
adc
repz
or
mov
mov
sub
pop
cld
call
jl
data16
pop
xchg
mov
adc
stc
cld
mov
xchg
xor
pop
test
sub
and
mov
xchg
setnp
add
mov
push
in
pop
sbb
push
setbe
sbb
lods
outsb
and
sbb
cwtl
clc
cmp
cs
mov
mov
lahf
jns
call
inc
out
xchg
push
std
mov
xlat
mov
push
adcb
jle
fcmove
dec
jne
out
fistps
jmp
test
sbbb
push
cwtl
iret
lret
mov
jmp
imulb
cmp
faddp
adc
ret
mov
mov
fisttpll
push
fdivs
and
jmp
out
fcompl
in
inc
ljmp
adc
cmp
loopne
fmul
xor
out
jg
insb
test
inc
ss
ljmp
mov
loopne
pop
icebp
idivb
mov
cmp
sbb
popa
rorl
test
fnstsw
mov
cmp
icebp
inc
scas
lods
loop
add
mov
fstpl
test
xchg
or
push
lock
xchg
lret
enter
or
jge
outsb
and
xor
je
push
fisubrs
jge
xor
mov
pop
in
mov
bound
push
cmpl
fdivrl
xchg
cmpsl
push
test
jae
popf
jo
jne
xchg
ret
repz
out
sbb
dec
pop
addl
dec
test
adc
pop
mov
dec
xor
xchg
ja
push
insl
call
imull
and
pushf
fbstp
add
mov
xchg
lods
test
cmpsl
push
imul
enter
xor
data16
addr16
je
out
adc
fisubs
lods
jle
loopne
nop
add
xchg
mov
jge
leave
lock
sbb
jo
cltd
sahf
dec
or
aaa
rcrb
aas
sbb
sbb
sbb
jne
sbb
xchg
xor
mov
popa
mov
aad
leave
lods
push
btr
out
stc
loopne
jecxz
adc
fidivs
pop
xor
sub
cld
cmp
push
out
subb
int3
idivl
xchg
mov
into
lds
dec
ficomps
mulb
push
mov
bound
out
lods
js
push
xchg
sahf
push
movsb
inc
and
addl
shl
outsb
xchg
subps
add
mov
push
jo
xchg
std
repnz
dec
pop
add
adc
jb
outsl
idiv
adc
lcall
gs
shlb
dec
jnp
inc
les
pusha
push
dec
aam
and
loopne
loop
call
sub
scas
pop
mov
out
sbb
xchg
pop
fisttps
cmpsl
sub
xor
mov
ret
clc
sbb
je
dec
inc
cmp
test
mov
movl
or
cmpb
psllw
mov
inc
dec
mov
loop
int
ror
xchg
mov
sbb
cli
and
into
sub
cwtl
dec
pop
adc
pop
movb
push
add
push
stc
cmp
mov
rcrl
mov
add
ds
test
pop
mov
inc
mov
inc
movsb
addb
and
sti
sbb
xor
aaa
jl
cmp
fs
cmpsl
je
xchg
pop
in
jne
mov
pop
stc
pop
xchg
in
int3
push
insl
mov
shlb
movsl
push
mov
cmc
mov
inc
sbb
push
mov
std
xor
mov
jmp
movsb
testb
mov
ja
jl
leave
nop
push
sbb
test
rclb
lahf
jns
es
push
mov
ja
movsb
cmpsb
movsl
jl
mov
fwait
mov
and
fwait
adc
jo
dec
lods
or
lahf
repnz
ds
adc
mov
ja
mov
icebp
mov
mov
out
xchg
mov
or
test
aad
push
xor
jae
xchg
cltd
mov
scas
mov
mov
lret
scas
dec
out
or
adc
xchg
push
dec
daa
mov
or
mov
sub
push
push
cmp
mov
addl
mov
mov
lods
push
fistpl
psrad
lcall
inc
push
in
cmpl
les
imul
push
sbb
cbtw
or
mov
jbe
sbb
mov
xor
scas
mov
cmp
popa
push
add
js
mov
in
mov
jge
fs
sti
neg
pop
add
les
and
lahf
jno
sub
loopne
add
in
xor
pop
cltd
mov
and
fld
hlt
inc
xor
inc
cmpsb
arpl
sub
shlb
rcr
xchg
aaa
lds
push
sub
mov
xor
pop
or
inc
cmp
shll
insl
mov
les
dec
rcl
subl
xor
addr16
xorl
testb
fcoml
in
popa
dec
leave
push
cmp
adc
inc
pop
and
sub
jp
push
pop
in
in
fmuls
dec
xchg
outsb
sbb
shr
lods
and
cmp
out
bound
push
push
gs
adc
mov
aas
movsb
jmp
or
rorl
add
scas
dec
mov
clc
ror
and
icebp
cltd
sub
test
pop
add
or
cli
add
ss
adc
fmul
test
dec
or
cmp
add
addr16
popf
jg
push
jg
nop
fisttpll
js
dec
iret
aad
out
popa
jno
cwtl
pop
xor
pop
jl
sub
loopne
roll
mov
sub
xchg
pusha
out
aad
fsub
insb
test
jb
test
fsub
pop
popl
loop
test
adc
daa
into
jo
in
aam
bswap
sub
push
jecxz
pop
sbb
and
mov
dec
pop
sti
lret
adc
aad
inc
mov
arpl
lods
mov
pusha
mov
scas
xor
mov
pop
les
xor
jle
or
inc
in
cmp
push
in
stos
xchg
push
lret
jns
sub
cmp
cmp
mov
stos
pushf
in
sub
inc
lahf
cmp
ret
mov
inc
jnp
xchg
add
sub
lods
jg
pop
addr16
movsl
cli
mov
fsubl
addr16
insb
data16
xchg
pop
push
imul
pop
aad
stos
push
add
mov
das
dec
ljmp
xchg
les
daa
fidivrl
pop
cmpsl
mov
imul
mov
cmpsl
cld
sahf
fidivrs
jo
pop
pop
cmp
inc
movsb
push
subl
loopne
sbb
jae
imul
inc
pop
test
xchg
jmp
adc
fnstsw
cld
jl
xlat
rcrl
clc
clc
iret
cld
dec
cltd
cwtl
push
mov
pop
shrd
out
pop
xor
sti
push
mov
xchg
insb
inc
les
pop
test
pusha
mov
pop
arpl
popl
frstor
cmp
pop
in
push
mov
mov
and
xchg
call
inc
in
sahf
add
sbb
mov
in
outsl
outsl
mov
jmp
in
fsts
fstl
in
sbb
out
sbb
push
shrb
in
sarb
pop
insl
les
push
insb
fcompl
scas
icebp
add
cwtl
imul
repz
push
gs
popa
jns
in
mov
jge
lods
adc
sbb
push
sbb
xchg
test
inc
fidivs
lds
xchg
ljmp
imul
arpl
aam
lret
mov
sub
jl
push
les
lea
mov
xchg
push
test
inc
test
imul
out
sti
mov
cmp
push
shl
push
push
cwtl
sub
jge
mov
leave
xchg
inc
add
pop
inc
es
push
or
push
ret
push
fstl
add
add
add
push
aam
rorb
lods
pop
jge
ret
mov
scas
mov
mov
scas
cmp
fdivrp
cmp
stos
mov
jbe
push
sbb
andl
divb
das
out
mov
das
jmp
jmp
aad
push
cmp
mov
std
pop
stc
xor
adc
sbb
stos
add
nop
out
pusha
insb
xchg
filds
mov
test
out
in
push
in
gs
sahf
cwtl
cmp
mov
sbb
jl
mov
pop
mov
fiaddl
sub
popf
jl
repz
decb
jbe
adc
cmpsl
pop
js
mov
pop
das
std
lret
xor
ljmp
daa
mov
jecxz
shll
movsb
gs
nop
aad
call
lahf
filds
xchg
sub
sub
dec
and
jle
adc
push
repz
lret
xchg
mov
pop
inc
dec
dec
mov
jmp
out
jmp
inc
jne
push
nop
xchg
jle
dec
das
mov
iret
mov
leave
nop
sub
or
outsl
clc
sub
imul
xchg
mov
stc
ficoms
inc
jp
lds
stos
xchg
imulb
jnp
imul
rorb
cmp
clc
jp
push
pop
in
mov
neg
lods
imulb
mov
fidivrl
rolb
inc
adcl
ret
cmpsb
lret
jb
mov
jne
push
iret
rol
sbb
sbbl
out
inc
call
fsubl
push
in
ret
ss
inc
jo
xor
popf
scas
mov
ljmp
push
int3
push
repnz
mov
ljmp
xor
pop
mov
jp
mov
xchg
jge
inc
std
rcrl
push
enter
sub
ljmp
faddl
icebp
ficoms
mov
or
mov
out
jae
std
xlat
loopne
mov
cmp
inc
ss
out
aas
push
shll
push
dec
psubsw
cltd
push
xchg
pop
pop
ret
stos
cs
push
hlt
pop
jl
push
sub
xor
or
add
mov
fistps
cs
cmp
xchg
xchg
cmp
xlat
add
pop
dec
xor
les
pusha
enter
and
outsb
push
mov
dec
loop
in
adc
or
inc
fimuls
les
addr16
dec
ss
imul
or
ret
jp
imul
mov
mov
ja
pop
pop
das
push
or
in
xchg
add
pmaxub
in
pop
cs
jbe
notl
cwtl
je
ja
aam
sbb
add
mov
test
loop
in
popf
popf
jbe
xchg
xchg
inc
js
and
push
push
std
loopne
ds
jle
ja
ret
inc
js
dec
data16
push
push
cwtl
fnstsw
xchg
mov
adc
mov
pop
inc
xor
in
inc
int3
xor
cmpsb
out
dec
pop
xor
pop
and
mov
pop
mov
and
xlat
cmpsl
cmpsl
adc
orl
outsl
xlat
lcall
ret
je
lds
push
sbb
jmp
sahf
xchg
dec
int
adc
aad
adc
imul
out
dec
inc
mov
mov
arpl
in
add
xor
mov
movsl
cmp
out
pop
xor
cmpsl
adc
test
out
arpl
in
jge
inc
movsl
arpl
xchg
mov
mov
mov
scas
out
jbe
divl
push
adc
jle
insl
jbe
mov
cmpsb
loop
dec
or
xchg
push
fnstenv
gs
or
mul
je
sub
pop
sbb
cmp
stos
and
inc
sub
pop
aas
mov
add
aaa
push
dec
dec
mov
aas
mov
out
mov
test
mov
iret
push
fcmovnu
add
jne
ss
call
cmpsl
and
in
lahf
xchg
lds
cltd
mov
xor
das
stos
fcmovb
push
andb
bnd
inc
addr16
aad
js
test
xchg
outsl
pushaw
jae
imul
mov
mov
xchg
inc
push
ret
ret
xchg
mov
cmpsb
loopne
adc
mov
fisttpl
gs
dec
and
or
lods
add
jle
adc
jae
int3
shlb
sti
jecxz
cs
push
repnz
adc
jl
or
cltd
xor
mov
movsl
aad
lcall
aam
inc
pop
sarl
inc
mov
fs
std
inc
cmp
jle
mov
fstpt
fscale
mov
xchg
cmp
out
ret
ja
shrb
xchg
ss
inc
test
sub
or
loopne
in
js
aad
inc
mov
aam
cmp
push
fisubrl
push
orb
sub
mov
xchg
adc
or
or
inc
mov
mov
loopne
cmp
call
mov
sub
ficoml
test
jne
jbe
jne
int
pop
fiadds
mov
adc
inc
popa
pop
outsl
mov
mov
inc
mov
outsb
mov
je
hlt
rorl
repnz
push
insb
fstps
mov
xchg
pop
insl
pusha
jle
push
jl
mov
sti
std
scas
mov
mov
out
xchg
fisttpll
mov
push
mov
addr16
fildll
arpl
pop
pop
mov
jge
and
sahf
xchg
loopne
in
pushf
fisubl
mov
in
pop
jo
sbb
repnz
lds
and
inc
dec
lds
inc
push
cmp
push
sbb
imul
cmp
cld
xchg
test
fdivs
in
lret
mov
add
outsb
call
xchg
dec
pop
push
xor
jge
call
and
add
popa
sub
sti
cmpb
rcl
xor
lods
mov
js
cmpsl
pop
repnz
pop
jle
in
dec
sahf
in
push
add
sti
loopne
jl
lahf
in
cmpsb
sub
pushf
cmp
push
call
push
test
lods
stc
and
cmpsl
cmp
inc
sub
xchg
pop
or
xor
negl
push
shr
hlt
xor
mov
sbb
mov
iret
push
out
inc
mov
sbb
mov
sbb
sbb
movsl
fisttpl
and
leave
cmp
popf
sbb
or
int3
daa
cmp
push
aaa
xor
dec
aaa
add
mov
gs
sbb
ret
jbe
jne
fwait
jecxz
das
add
shlb
xchg
or
and
adc
inc
xchg
icebp
js
adc
mov
ret
inc
shlb
mov
icebp
jno
int
stos
out
rcr
sti
or
xor
mov
xor
popa
sub
test
mov
insl
cmp
inc
push
sub
pop
xor
mov
xchg
jo
imul
xlat
lret
dec
stos
mov
mov
xor
in
out
lds
xlat
imull
or
cmpsb
fwait
into
adc
mov
btr
testb
adc
fistl
fnsave
xor
inc
mov
in
hlt
mov
push
inc
push
pop
ljmp
add
lods
outsl
cmp
ljmp
mov
shrl
cmpb
in
stos
cltd
xchg
cld
push
flds
cltd
lods
scas
pop
add
mov
sub
mov
inc
roll
pushf
aaa
test
add
jo
movsl
push
push
pop
fmuls
push
jmp
sbb
dec
add
lods
xchg
xchg
fsub
jecxz
sbb
icebp
and
cs
xor
pop
popa
idiv
adc
and
orl
les
mov
jp
lods
lahf
es
mov
mov
mov
aaa
aas
sbb
dec
xchg
adc
inc
movsb
cmpb
inc
dec
outsl
int
stos
mov
push
dec
cmp
scas
pop
xchg
pushf
test
stc
aas
scas
aaa
sarl
inc
adcb
loope
in
xor
push
test
inc
mov
add
sbb
insl
mov
and
sub
mov
shl
jge
out
stos
or
mov
xchg
sub
ret
cmp
jo
mov
pop
and
fists
pop
pop
add
add
or
push
mov
dec
ret
cmpsb
mov
adc
inc
dec
mov
pop
test
jbe
stc
sub
inc
subb
test
int
jns
jle
mov
mov
jno
adc
and
pop
das
add
adc
adc
lret
scas
adc
add
adc
cs
test
add
out
leave
and
js
dec
cmp
cmp
iret
cmp
and
stos
dec
xor
add
sahf
inc
add
cmp
mov
inc
outsb
pop
cmpsb
data16
in
xchg
js
enter
imul
data16
xchg
ficoml
mov
fiadds
xchg
inc
pop
andl
jmp
std
pop
fnsave
aam
cmc
hlt
pushf
aad
xor
inc
sub
adc
enter
mov
mov
addr16
dec
lods
icebp
sarb
pushf
sahf
sub
aas
sub
rorb
arpl
outsb
outsb
push
sub
cs
push
xor
jl
adc
fucomp
imul
jnp
lds
fwait
out
or
ljmp
adc
mov
imul
xor
or
xor
and
jno
popa
mov
fistpll
dec
sbb
mov
gs
dec
xchg
pop
sbb
sti
mov
jae
stos
cmpsb
pop
mov
mov
or
addr16
call
pop
sbb
sbb
out
push
cli
pop
fsubr
aas
test
pop
scas
mov
addb
mov
aas
sbb
sub
xchg
adc
push
loope
adc
out
fwait
dec
lret
jbe
adc
icebp
imul
arpl
cmpb
sub
inc
push
fs
insb
jns
pop
movsb
inc
test
sbb
adc
pushf
lea
mov
mov
or
jl
cli
xchg
ljmp
inc
mov
jne
lahf
jg
fcmovne
ror
sbb
dec
inc
push
hlt
out
xor
in
cmp
out
mov
cmc
leave
inc
cli
xchg
mov
in
push
jmp
rcr
roll
mov
out
sub
push
jb
jns
dec
es
xorb
pusha
lock
lea
mov
pop
mov
jnp
js
icebp
call
inc
mov
push
xlat
inc
test
push
stc
sbb
fcom
sar
push
pop
call
add
daa
mov
imul
and
sub
pop
mov
mov
in
jb
adc
hlt
repz
dec
xor
push
jns
mov
arpl
cmp
dec
xor
jno
dec
push
aas
xchg
popf
push
xchg
and
rorb
fdiv
lret
pop
popf
mov
fwait
xlat
adc
les
and
adc
dec
rcl
dec
cwtl
xor
or
lcall
out
add
arpl
or
arpl
into
cwtl
add
js
or
inc
and
jo
outsl
popa
lds
aas
mov
orb
hlt
mov
cs
mov
ja
test
in
inc
adc
adcl
push
out
ret
pusha
add
sub
inc
mov
add
gs
fabs
addb
aas
pop
adc
cmc
cmpsl
movsl
fwait
mov
sbb
push
xor
lret
repnz
movsl
loope
jge
jbe
test
fwait
mov
mov
pop
imul
xchg
push
xchg
add
xchg
jbe
pop
add
pop
inc
sbb
hlt
imul
out
dec
inc
hlt
lock
sbb
into
xchg
xchg
or
repz
jg
dec
jmp
pop
adc
xchg
or
in
into
out
xchg
out
call
push
pusha
pushf
js
add
clc
shlb
sbb
adc
mov
mov
div
lahf
data16
adc
jge
es
int3
clc
dec
test
movsb
pop
ljmp
inc
jecxz
ret
int3
adc
cmc
dec
hlt
aam
sbb
inc
jmp
sbb
xchg
mov
test
and
pop
enter
push
iret
mov
adc
push
push
lods
sub
notl
fsubs
sbbl
or
stos
pop
dec
cmp
imul
mov
mov
push
cmpsl
jp
loope
pop
sbb
dec
inc
outsb
jbe
lcall
push
das
pop
adc
ret
cmp
inc
mov
lods
jl
xchg
ja
push
movsb
test
js
lret
sti
jge
mov
mov
stc
or
xor
movsl
sti
or
push
push
mov
and
xchg
jns
fld
sbb
stos
mov
xchg
push
dec
insl
imul
jb
je
push
faddl
add
push
mov
jle
adc
mov
mov
in
int
sbb
mov
cltd
fiaddl
jb
cmp
movsb
add
popf
mov
pop
insb
scas
stos
faddl
stos
es
and
xor
pop
test
jne
push
icebp
add
dec
loopne
add
leave
cmp
mov
mov
repz
das
push
and
cld
div
push
lea
jo
adc
aas
xchg
ljmp
int
sub
movsl
jecxz
lea
addb
test
adc
loop
ret
sahf
adc
mov
push
lcall
xor
push
xor
loop
clc
cmp
insl
sub
mov
sub
sbb
xor
lods
inc
push
xchg
mov
aaa
dec
insl
movsb
push
add
addr16
jp
sub
sti
popa
pop
das
pop
jno
out
cmp
into
int3
jle
xchg
pop
in
push
int
data16
test
mov
mov
mov
cmp
jo
mov
repnz
leave
mov
loope
mov
push
inc
jbe
push
daa
das
test
sub
fistps
rclb
adc
lock
clc
dec
mov
std
push
push
bound
push
and
xor
pop
cmpsl
inc
and
jb
fidivrl
mov
xor
push
leave
pop
mov
loopne
lods
iret
ret
loop
test
pop
jnp
pop
dec
sahf
jae
std
mov
es
std
xchg
push
sbb
jne
je
negb
cmp
sub
push
test
push
xor
jae
add
xchg
sahf
sbb
pop
ret
add
inc
idiv
loope
push
loop
loope
jo
lret
xchg
jne
pop
fs
je
cmp
inc
and
fwait
shll
idivb
jnp
mov
js
sub
fidivs
adc
pop
push
dec
in
inc
shlb
sbb
pop
adc
push
shl
xchg
sub
stos
inc
ror
mov
call
int3
xchg
movl
decl
int3
ss
test
repz
dec
test
ljmp
xchg
fwait
sarb
xchg
daa
insl
mov
repnz
mov
push
leave
xor
lods
les
adc
xchg
pop
dec
insb
push
xor
dec
lret
imul
cmp
loopne
cli
dec
nop
les
sub
pop
test
aad
mov
xchg
rolb
pop
adc
clc
mov
test
aaa
test
xor
inc
outsb
cmp
cmp
in
stos
lahf
cli
add
adc
mov
fbstp
sub
stos
mov
popl
sbb
pop
fisubrs
bound
imul
insl
pop
cmp
scas
test
fsubl
pop
push
push
mov
dec
mov
mov
adc
jmp
mov
popa
int3
fdiv
dec
enter
ret
fiadds
lock
jmp
add
cwtl
add
test
es
dec
mov
cltd
out
add
push
mov
cli
pop
sub
fnstsw
in
adc
imul
lret
loop
pop
add
add
or
pop
or
ss
test
mov
xchg
add
sub
bound
int3
jmp
into
int
jge
ds
lcall
dec
arpl
jns
inc
lret
fs
loope
dec
test
sbb
mov
mov
mov
inc
aam
repz
push
cmp
jo
rol
stos
lods
sub
cmp
int
jle
or
lods
mov
push
clc
mov
pop
mov
ljmp
lds
sti
mov
aad
mov
insb
mov
xlat
les
dec
jb
test
dec
pusha
adc
or
xchg
pop
jno
outsb
mov
mov
int3
cwtl
rorw
mov
ret
push
movsl
jmp
int
inc
mov
add
loopne
jbe
shrl
pusha
push
popf
clc
stos
jae
jb
dec
dec
pop
add
or
rcrl
mov
andb
and
jns
popa
test
mov
jne
pop
cld
jo
dec
jg
ret
inc
icebp
leave
lahf
dec
mov
jbe
mov
jo
mov
jle
sbb
dec
mov
cmpsb
lods
lret
xor
mov
adcl
icebp
cld
push
cmpsb
shrl
fwait
jp
mov
pushf
fucomip
scas
fmull
ficomps
movl
jns
es
xor
lods
movsl
int
imul
aaa
lcall
inc
sahf
xchg
movsl
scas
ret
xor
inc
fnsave
cwtl
insl
outsb
outsl
jecxz
lret
sub
lahf
cmovae
pop
jae
cli
lea
subb
jb
aad
lret
and
enter
jns
pop
cmpsl
push
mov
cmpsb
mov
lds
outsb
mov
orb
add
jns
mov
repz
inc
and
jno
ljmp
ficoml
cmp
xor
subb
mov
cmpsb
les
mov
jge
js
fmul
cmp
lret
or
push
push
mov
adc
iret
and
mov
xchg
jno
ljmp
js
cmp
faddp
or
in
sub
mov
pop
pushf
push
jle
addr16
jmp
xchg
daa
aam
iret
es
das
inc
sti
std
lcall
sbb
out
popf
pop
ljmp
mov
leave
pop
mov
fldt
test
jg
jle
into
popf
jge
sub
mov
lahf
or
cmc
xlat
adc
call
inc
cmp
gs
xchg
pop
mov
jne
es
test
mov
cltd
xor
jecxz
cmp
and
jge
pushf
mov
imul
stos
xchg
addl
add
or
ret
jmp
mov
fistl
outsb
stos
andb
pop
fstp
call
pop
fidivrs
mov
insb
jnp
push
lea
mov
mov
or
js
jo
push
daa
out
fninit
push
scas
call
imul
les
ds
lret
mov
test
mov
rcrb
add
aaa
or
leave
mov
aas
in
fadds
fnstenv
push
mov
or
xlat
push
shlb
test
fsubrs
aam
or
incl
fstpt
xor
dec
cmpsb
aam
fldcw
mov
xor
js
mov
dec
test
jns
and
daa
dec
xor
cmpsl
mov
imul
pop
pop
or
out
sbb
add
lock
das
loope
mov
or
negl
loop
outsb
dec
clc
insl
or
push
add
and
mov
enter
and
loop
roll
mov
push
pop
divl
cld
push
insb
mov
sub
cltd
push
jo
shlb
xchg
mov
dec
add
jecxz
sub
lds
and
jns
mov
cltd
pop
idivl
cmp
jge
jmp
frstor
add
lods
mull
stos
inc
aas
jne
loope
imul
adcb
push
jne
jbe
lods
mov
and
fistpl
adc
pop
jl
push
cwtl
jp
lea
scas
add
ret
std
sub
push
push
in
push
xchg
es
lcall
and
sbb
jl
pop
in
test
and
adc
loope
inc
data16
fsubrs
add
shll
cmp
movsb
es
xor
outsb
jle
mov
in
mov
adc
dec
daa
in
mov
sbb
setae
xor
cld
lcall
push
cmc
adc
pop
and
movsl
push
jae
cmp
and
jle
lds
mov
cltd
cmpsb
xor
mov
fs
jl
test
and
rolb
pop
xor
adc
mov
mov
lods
aam
push
ror
mov
shll
sbbl
push
into
dec
pop
dec
dec
gs
pop
mov
dec
cld
jno
stos
test
cs
in
add
in
data16
pop
xchg
scas
outsl
push
mov
cmp
pop
pop
push
sbb
lcall
add
dec
insb
sbb
push
add
jbe
jl
inc
mov
inc
push
jle
sub
jne
and
aas
cmp
scas
add
rol
sub
xor
nop
or
mov
lods
lret
ds
movsbl
push
rcl
jecxz
mov
fwait
orl
out
push
mov
inc
jp
mov
aad
xchg
add
outsb
mov
cmp
pop
pop
gs
mov
sti
mov
ds
sub
add
xlat
pop
mov
inc
fidivrs
ljmp
movsb
cmc
inc
xor
mov
into
sub
leave
loop
push
popf
jns
jmp
aam
sahf
pop
mov
mov
adc
mov
dec
fstl
sbb
or
stos
dec
into
addb
call
mov
iret
test
in
xchg
fildll
mov
scas
mov
fwait
daa
jp
out
cwtl
lea
imul
outsb
cmc
push
imulb
loop
xor
xor
mov
pop
sbb
icebp
and
and
cli
jp
icebp
cmp
roll
xchg
add
popf
icebp
fdiv
rol
test
cmpsl
add
push
mov
dec
cld
jge
pop
frstor
lock
sub
mov
imul
in
lret
gs
jne
idivl
cwtl
icebp
adc
popa
lds
leave
dec
ja
pop
or
adc
in
fimull
add
dec
in
lods
stos
mov
insl
push
shlb
push
dec
push
mov
jbe
mov
jns
in
mov
in
fucomip
outsl
xchg
iret
mov
repnz
xchg
imul
jg,pt
std
push
pushf
sub
cltd
jge
and
inc
dec
xchg
push
mov
bound
fs
sub
and
std
int3
xchg
les
out
fsubrl
sti
xchg
xchg
sub
movsb
mov
pop
lret
icebp
sbb
fistpll
std
divb
jae
gs
mov
or
pop
mov
push
mov
jae
das
incb
mov
jle
jmp
xor
jae
add
push
maxps
pushf
add
outsb
push
popf
aam
bound
pop
xchg
push
andb
test
ret
push
ret
mov
add
and
shl
sarb
jns
mov
loop
push
clc
xchg
xor
jno
stc
mov
fnsave
sub
xor
mov
add
xchg
mov
pop
popf
and
xchg
shr
add
lcall
jne
test
push
xor
xchg
test
enter
outsb
cmp
test
adc
lods
jno
cmp
les
push
mov
imul
in
sar
ror
sub
push
aas
or
push
lock
repnz
sub
xchg
shr
outsb
imul
inc
xor
cmpsb
xchg
sbb
fimuls
je
in
pop
push
pop
xchg
lock
xchg
loope
sbb
testb
stc
into
cmpps
cmpsl
xchg
orb
sti
cmp
mov
push
sub
setb
mov
int3
bound
dec
out
add
adc
int
xchg
pusha
sbb
and
sahf
leave
inc
lods
das
xor
or
add
mov
and
push
scas
es
pop
insb
mov
mov
pop
mov
iret
jbe
rorw
dec
in
and
sub
addr16
arpl
mov
pop
test
jns
addl
jns
sub
dec
sbb
and
fisubs
enter
outsl
dec
or
xchg
daa
and
scas
enter
lds
mov
in
rcll
iret
add
mov
inc
xchg
xchg
add
xchg
ja
add
mov
or
add
pop
leave
xlat
push
lock
ds
xor
lcall
lret
js
enter
out
push
xchg
push
idiv
shlb
fldt
stos
mov
pop
xchg
enter
sub
insb
mov
ret
mov
daa
xor
jnp
cmpsb
jae
lock
xor
jmp
in
movsl
movsb
loop
sub
repnz
das
cmc
dec
and
sub
sbb
lods
outsb
lret
insl
data16
and
jge
mov
xchg
dec
movsl
insl
jge
ret
xor
scas
int
push
sar
lods
push
mov
negl
mov
mov
movsb
in
cwtl
or
cmp
aam
test
inc
fldcw
call
push
xlat
sbb
add
push
xor
push
xchg
sub
dec
enter
dec
mov
dec
rorb
inc
push
aaa
in
xlat
xorl
mov
xchg
cmp
lock
mov
test
cmp
pop
or
xor
mov
push
rclb
sbb
cmp
inc
cld
fsts
ja
and
sub
mov
cmp
dec
mov
aad
fildl
sbb
cmp
jne
clc
dec
and
fcmovnu
rcr
pop
xor
clc
mov
mov
pop
xchg
dec
and
adc
sbb
mov
cmc
cmc
popf
mov
push
shufps
sub
sub
cld
xchg
jmp
sbb
pop
dec
iret
mov
cwtl
mov
push
sub
fbstp
mov
loop
xchg
xchg
pop
cmpsb
cmp
outsb
stos
push
inc
cmpsl
xor
inc
data16
jnp
mov
bound
inc
jno
call
cs
mov
xchg
pop
inc
and
out
mov
jmp
cmc
rcll
daa
jno
xchg
adc
adc
test
xor
add
jo
lods
sub
sbb
add
out
sbb
loope
int3
and
push
clc
push
clc
roll
add
xor
or
pop
sbb
cwtl
rol
jo
inc
xchg
dec
mov
dec
add
or
inc
dec
jae
clc
popf
and
mov
sbb
inc
push
negl
sbb
lods
jle
popa
mov
push
in
outsb
andl
xchg
xor
scas
shrb
stos
sahf
sbb
cmp
cs
insb
xor
add
outsl
shlb
test
shlb
adc
or
rclb
jg
cmpl
repz
mulb
xor
push
addr16
js
pop
mov
fisttps
mov
cmp
aas
adc
test
jae
inc
sbb
fsubs
mov
mov
dec
loop
dec
and
addr16
shrb
test
repz
dec
jb
psllq
popf
xchg
inc
mov
xchg
sbb
xor
or
repnz
std
xchg
cmp
cmpsl
sub
adc
or
jl
mov
fnstsw
mov
es
pop
sar
push
mov
lods
repz
xchg
cli
rol
jnp
loope
mov
pop
or
xor
xchg
loop
xlat
dec
inc
sbb
cmc
call
adc
shrb
lret
das
js
ror
or
jno
in
or
jns
jp
sbb
sub
pop
mov
jp
sbb
lods
sahf
and
in
mov
mov
push
fldt
adc
mov
rorb
in
xchg
aaa
les
ds
mov
pop
cmp
mov
imul
mov
push
xorl
data16
das
cmp
fistpl
adc
subl
xor
dec
imul
cvtpi2ps
inc
push
xchg
jne
ds
mov
mov
movsb
pop
or
dec
ror
mov
xor
jo
sub
hlt
lcall
int
rcrb
das
jae
xchg
pop
jb
mov
add
jns
mov
push
bnd
ds
jne
dec
or
sbb
jle
xor
imul
cmp
and
aaa
pop
push
push
jl
int
push
adc
lods
fldln2
mov
mov
ffree
std
call
add
idivb
pop
dec
dec
scas
daa
in
insb
jae
jle
mov
notb
into
daa
lcall
sbb
ret
fimuls
and
adc
sbb
mov
jo
and
jno
insl
in
stos
mov
mov
mov
pop
out
lret
mov
ss
adc
aaa
pop
movntq
scas
sub
scas
icebp
xor
xchg
enter
popl
out
jmp
into
push
bound
fwait
and
out
mov
jns
test
inc
mov
ds
dec
scas
aaa
out
fisttpll
pop
sahf
adc
cltd
loop
stos
adc
cmp
mov
pop
xchg
iret
test
cmp
fwait
lret
out
insl
mov
sub
into
mov
or
roll
mov
mov
pop
jecxz
dec
je
out
data16
inc
out
icebp
mov
pop
lahf
cli
mov
lret
xor
dec
icebp
movsb
nop
jge
pop
dec
and
sbbl
jecxz
and
lods
cmpsl
rorb
mov
mov
int3
xchg
jg
loope
cmpsl
ljmp
ret
push
fstp
lods
test
xchg
outsb
and
ds
lahf
test
mov
jp
ret
cwtl
dec
outsb
aam
xor
push
dec
cmp
mov
ret
shll
jge
push
push
xchg
loope
shrl
mov
test
aam
pop
pop
jle
mov
popf
xor
mov
dec
cmp
add
mov
shl
sub
add
sub
xor
push
or
outsb
dec
pop
jnp
call
xchg
rcl
out
icebp
and
popa
insb
push
jae
or
mov
dec
adc
js
out
pushf
dec
shrb
popf
inc
jp
jbe
mov
outsb
inc
in
sub
cmp
xchg
xor
int
xlat
imul
fwait
mov
adc
iret
mov
rorb
orb
stos
rclb
xor
cmp
cs
cltd
push
into
cltd
cmp
js
adc
jecxz
xlat
fwait
testb
or
jmp
add
xor
int3
leave
inc
imul
ljmp
cmp
pop
fistps
sahf
pop
into
cmp
mov
add
dec
jmp
adc
arpl
lods
push
xchg
push
ds
mov
loopne
filds
arpl
jae,pt
push
mov
rol
ss
xchg
pop
pusha
push
movsb
cmpb
mov
xchg
xchg
pop
xchg
mov
fldenv
loopne
add
mov
xor
cmpsb
xchg
mov
je
cwtl
mov
adc
frstor
jle
jno
paddb
fucom
icebp
adc
push
ljmp
rcpps
or
ja
xor
sub
into
jle
pusha
pop
cmp
fcoms
inc
bound
jmp
sub
mov
repnz
adc
scas
inc
xchg
xor
inc
sub
test
sbb
dec
cmp
jbe
rcl
add
imulb
xchg
ret
add
clc
in
repnz
jne
pop
fidivl
push
mov
and
mov
push
insb
push
js
pop
push
and
cli
adc
ljmp
push
repnz
mov
cmp
stos
pop
xor
arpl
sbb
popa
negl
push
push
lahf
daa
dec
mov
mov
push
or
subb
xchg
add
cmpsb
addb
push
sbb
out
mov
shlb
nop
je
aas
jbe
adc
jae
sub
inc
orl
shr
pusha
add
pop
dec
jecxz
inc
outsb
adc
add
add
popf
test
loopne
rol
jecxz
cltd
inc
cli
or
mov
xchg
sub
out
hlt
push
lret
or
ret
lea
jb
add
mov
subb
cmpsb
xor
fcmovnu
jno
mov
push
incl
rcl
xchg
adc
mov
inc
inc
dec
lret
adc
dec
stos
ds
push
loope
sbb
pop
xchg
loopne
cmp
jmp
mov
negb
and
mov
adc
mov
lock
pop
rcrb
in
je
fidivrl
mov
push
aas
test
push
das
or
sub
adc
pop
aam
jnp
into
sahf
or
cpuid
and
cmpsl
push
cmp
leave
lret
adc
sti
aam
ja
xor
add
sbb
push
lods
dec
test
filds
scas
xor
sub
jb
dec
and
and
lea
inc
push
stos
dec
jmp
push
fucomi
xchg
call
lods
shlb
es
fisubl
test
sbb
pop
into
ja
rclb
sub
ljmp
jbe
push
out
adc
loop
sub
dec
xchg
in
xchg
mov
jne
mov
mov
clc
into
insl
jle
into
xor
mov
inc
popa
sbb
pop
xor
xor
data16
sarb
sbb
imul
pop
jns
scas
fnsave
inc
and
mov
pop
ss
stos
add
or
ljmp
rcrl
push
test
mov
sbb
repnz
gs
pop
cmpb
imul
cltd
mov
cmc
mov
or
push
or
movsl
movsb
repz
and
lds
cmp
and
cli
jmp
and
scas
stos
out
ljmp
push
ror
insl
and
mov
leave
xchg
pop
cmpsb
mov
mov
out
mov
outsl
hlt
std
mov
rclb
or
mov
xlat
pusha
aam
loope
xor
negb
mov
or
sub
mov
cld
mov
call
mov
mov
inc
inc
outsl
dec
movsl
pop
repz
mov
cmp
jmp
sbb
cmp
arpl
lahf
pusha
push
jo
inc
sub
lock
mov
sahf
arpl
call
pop
push
test
cmc
in
cmp
aaa
into
pop
lods
fldt
push
mov
dec
add
push
mov
sbb
bound
sbb
les
pop
fimuls
popf
in
jb
test
aas
aad
mov
cmpb
mull
inc
push
xchg
push
add
loop
xchg
add
or
rol
je
pushf
lcall
mov
outsb
jp
lret
fwait
mov
call
cmp
dec
rorl
sti
cmpsl
jne
stc
sbb
ret
mov
push
jle
dec
adc
mov
xchg
js
push
aad
sbb
jno
dec
sarb
shll
xorl
nop
cmpsl
pop
mov
jecxz
push
jge
lcall
dec
arpl
sti
push
push
int
gs
lea
dec
jb
gs
loope
push
in
push
scas
scas
pop
cmp
mov
sbb
leave
cli
sbb
filds
mov
sahf
push
sub
push
outsb
xlat
mov
or
neg
add
adc
dec
aas
js
dec
jbe
into
jge
add
cmpsl
pop
add
cld
out
mov
inc
mov
mov
call
stos
adc
sbb
sbb
xchg
sti
leave
mov
shll
rorl
ret
test
dec
ret
or
jo
dec
sub
jns
inc
jae
pop
or
add
sub
adc
xchg
mov
pop
insb
xor
mov
pop
in
adc
lahf
rcrb
pusha
imul
cmpsb
sbb
fadd
pop
mov
push
inc
cmp
jbe
push
mov
mov
inc
test
xchg
sub
mov
aad
pop
inc
in
ja
lret
jne
cmp
add
xchg
cmp
movsl
cmp
dec
mov
xchg
leave
mov
and
rcll
xchg
in
dec
shrl
imul
jl
jnp
pushf
in
xchg
insb
sahf
sbb
cmp
mul
mov
sbb
int3
xor
fimuls
jo
imul
sahf
push
or
arpl
xlat
mov
or
or
inc
roll
add
icebp
dec
dec
push
dec
bound
dec
into
sahf
mov
pop
loop
fbstp
cmp
ss
jp
incl
in
loopne
push
out
lock
aam
inc
movsb
and
in
sub
aaa
cmc
in
cwtl
in
rcl
sahf
jl
lods
pop
or
mov
dec
in
dec
sbb
lods
mov
call
in
cmp
arpl
shll
ja
and
cli
lds
jge
aaa
jns
jno
outsl
aaa
fcomip
or
jnp
xchg
mov
push
jo
sub
vhaddpd
dec
jbe
fisubrl
pop
pushf
dec
vmovsd
jns
mov
inc
push
and
inc
test
int
insl
pop
aad
imul
xor
movsl
mov
aam
push
in
sbb
sub
mov
and
lods
test
lock
add
aad
insb
fisttpll
inc
addr16
sti
dec
enter
repnz
jg
imul
imul
or
mov
je
jl
cli
in
and
icebp
sbb
loopne
push
sub
fcmovbe
jb
popf
rcl
fistpl
xor
imul
stos
mov
cmpb
inc
jb
adc
outsl
test
mov
ss
or
adc
mov
dec
cmp
adc
int
mov
rclb
xchg
sub
mov
js
pop
mov
iret
xchg
stc
fadds
lahf
add
mov
repz
mov
fcmovnu
int
and
mov
pop
fwait
inc
mov
ds
rorb
cmp
int3
push
inc
pusha
push
push
jae
insl
jns
dec
sti
out
sbb
pop
add
jns
fsts
push
or
adc
mov
push
jno
push
adc
sbb
leave
fcmove
or
mov
ds
add
lret
add
das
xchg
sbb
shll
outsl
or
or
xchg
add
and
call
shlb
jns
adcb
pop
loope
and
adc
xorl
xchg
inc
mov
dec
pop
mov
mov
ucomiss
adc
leave
inc
out
xor
fwait
rclb
cmp
dec
mov
xchg
dec
pop
mull
out
push
fcompl
scas
adc
xchg
mov
mov
and
inc
xchg
adc
xlat
je
add
push
or
adc
dec
sub
push
mov
mov
pop
scas
push
xchg
xchg
arpl
test
orl
lret
jg
push
push
xchg
inc
call
cmc
mov
invd
out
inc
push
mov
cmpsl
pop
dec
or
add
mov
cmp
sbb
mov
ds
mov
sbb
add
dec
sub
cmp
pop
lods
and
and
outsl
ds
lods
sub
and
cmp
in
es
test
test
pushf
xor
bound
sti
inc
and
in
movsl
sbb
std
mov
je
sbb
mov
inc
dec
cmpl
cmpsb
cmc
out
insl
jno
xor
push
shrb
test
xor
js
stos
push
cs
cmp
sti
push
aad
mov
repz
inc
jge
sbb
outsb
insl
clc
mov
adc
inc
cmpb
insl
jne
push
add
test
mov
cmp
int
mov
push
or
cli
pop
aam
sub
out
sub
imul
inc
lea
arpl
shll
cmp
or
clc
addl
push
in
xlat
leave
scas
inc
push
fiadds
repz
mov
scas
mov
cltd
aaa
int3
adc
int3
lock
mov
fwait
icebp
incl
xchg
mov
jbe
push
aad
adc
xor
pop
jmp
mov
push
pop
std
es
or
test
lcall
dec
jmp
mov
mov
incl
cmp
sub
cltd
sub
jo
imul
inc
out
xorl
out
adc
xor
mov
inc
or
and
out
or
push
sbb
pop
jnp
mov
dec
fldcw
popf
imulb
fisubl
scas
add
dec
daa
pop
add
adc
js
cmpl
outsl
and
xor
dec
in
fsubrl
stos
adc
fwait
mov
test
insl
scas
xor
add
and
mull
jnp
mov
push
lret
inc
mov
jne
xor
faddl
ss
mov
push
mov
mov
icebp
adc
in
or
mov
addr16
inc
adc
push
adc
cmp
stos
cmp
and
icebp
or
fadds
add
fistpl
jnp
mov
cli
shrb
nop
test
add
xorb
add
shrl
xchg
dec
data16
div
lret
xor
mov
ret
pop
stos
adcb
inc
out
cmp
cmp
mov
leave
jo
mov
xor
sub
lods
xor
mov
sahf
add
xor
in
mov
xlat
jmp
pop
aaa
xlat
and
inc
out
pop
jge
jg
xchg
js
das
dec
movsl
add
imul
mov
dec
xor
ficompl
mov
xor
dec
iret
test
sbb
or
lret
cmp
inc
insl
jnp
pop
gs
adc
add
pop
inc
mov
sbb
hlt
out
adc
imul
adc
xchg
jb
fstpl
rcrl
bnd
std
clc
inc
stc
aas
sti
dec
inc
mov
push
outsl
jmp
dec
and
jmp
out
inc
jbe
dec
lods
add
out
dec
int
into
inc
sbb
mov
test
adc
rcrl
push
enter
jb
or
mov
out
sbb
imul
mov
pushf
testl
es
jge
in
std
bnd
push
aas
addr16
dec
lods
sbb
ja
loop
mov
fldenv
push
add
adc
push
fidivl
fwait
dec
loop
mov
jle
int3
mov
xlat
push
mov
mov
adc
jo
push
push
sbb
adc
stc
hlt
sub
sbb
lcall
call
push
pop
fildll
mov
and
mov
jnp
push
out
jae
mov
adc
xchg
mov
sti
add
jnp
aad
sub
mov
mov
ror
inc
sbb
outsl
mov
mov
scas
inc
xor
movnti
xchg
xchg
fsubl
adc
hlt
scas
xchg
dec
fnstcw
flds
lcall
mov
dec
nop
call
mov
cmp
inc
adc
and
sbb
or
xor
aam
cmp
dec
jbe
cmp
lds
in
ss
jnp
add
push
pop
xchg
adc
lods
dec
gs
jbe
jae
icebp
cs
in
fcmove
cmp
call
cmp
aaa
jmp
out
scas
mov
cli
pop
call
mov
pop
mov
adc
push
xor
cmpsl
adc
mov
dec
mov
pop
dec
mov
dec
mov
inc
popf
stos
dec
xchg
pop
pop
insl
jmp
sbb
xor
mov
lret
pusha
aas
mul
or
push
mov
outsl
lods
ret
mov
mov
xor
pop
enter
mov
adc
dec
sti
add
xchg
mov
outsb
leave
inc
pop
lahf
push
lock
jnp
mov
and
fwait
hlt
sub
sbb
mov
dec
mov
loopne
test
mov
lahf
bound
data16
lods
rcrl
or
jb
cmp
and
lret
fcmovnu
popa
fldt
xor
out
xor
fdivs
insb
xchg
shll
mov
out
xor
pushf
stc
aaa
mov
insl
jge
sub
scas
jne
fistpll
jne
xor
pop
cmp
rcrl
pop
fists
enter
ret
cld
push
fnstcw
xchg
loop
mov
xchg
and
ss
nop
mov
dec
out
les
add
clc
sbbb
push
movsb
mov
push
loope
inc
iret
cmpsl
push
sbbl
addr16
jg
mov
mov
pop
dec
ss
repnz
mov
xchg
jmp
fcomps
push
xchg
cmpsl
xchg
popf
rol
adc
scas
jmp
dec
mov
dec
sbb
cmp
outsb
cmpb
jg
pop
fwait
cmp
aam
jmp
mov
call
fwait
adc
or
jmp
stos
icebp
xlat
out
inc
out
test
sub
adc
xchg
aaa
jg
cmpsl
cmp
xchg
mov
xchg
cmpb
or
mov
cld
aaa
inc
mov
orl
push
mov
fdivrs
and
xchg
cmpsb
and
adc
andb
addr16
icebp
mov
mov
mov
ss
mov
mov
xor
testl
push
fisttpl
cmp
loop
cmp
sti
orl
nop
outsl
inc
loope
mov
imul
orl
mov
ficoms
jp
sbb
push
repz
adc
sub
inc
repz
int
jle
xchg
enter
gs
sub
xchg
add
mov
dec
ret
jg
sub
mov
and
and
fadd
xlat
movsb
out
dec
imul
jle
outsb
cmp
outsb
ss
ja
push
or
adc
in
dec
adc
test
dec
xchg
lret
mov
xor
mov
divb
loop
sbbb
repz
repnz
mov
daa
push
jle
pop
jne
or
jnp
add
scas
jp
roll
out
fldenv
insl
les
inc
test
loope
xchg
push
mov
adc
mov
mov
mov
add
cmc
sub
lods
mov
or
aaa
cmp
ret
imul
clc
pop
jo
xor
add
hlt
jle
xchg
xchg
pop
loope
pop
cmp
push
aam
cmpsl
sbb
and
out
test
cld
push
out
repnz
jae
xchg
mov
adc
cmp
stos
mov
lret
leave
and
cs
push
arpl
fsincos
repnz
gs
or
icebp
or
inc
into
ret
arpl
mov
test
int3
xchg
loop
addr16
sbb
pop
push
pop
cmc
and
mov
mov
test
sub
fadds
loope
cmp
sbb
cmp
mov
pop
or
lret
std
pop
lret
daa
stos
lods
sbb
xor
xor
cmpsb
adc
and
xchg
call
jb
in
ja
sub
test
imul
cld
int3
xchg
std
popa
mov
push
push
xor
out
cmp
push
lret
sahf
xchg
jge
push
insb
cmp
add
xchg
pop
push
add
test
sti
xor
orl
inc
enter
inc
sbb
ret
mov
jne
test
stos
adc
enter
inc
lods
fnstcw
adc
lret
in
nop
push
cmpsl
mov
clc
aam
xchg
pop
cmp
mov
ret
xor
mov
mov
out
cli
loope
cmp
xchg
int3
jmp
sub
and
pusha
push
nop
xor
insb
mov
mov
hlt
int
xor
xchg
mov
sub
pushf
jg
mov
stos
xchg
adc
pop
mov
push
xor
or
jbe
int3
sar
jnp
cs
cli
ficoml
xor
test
jecxz
stc
js
push
in
adc
and
test
mov
push
push
stos
or
lret
jmp
insb
add
andb
int
and
dec
andl
inc
jne
popf
sbb
mov
mov
cwtl
hlt
stos
shll
dec
in
push
popa
push
adc
dec
sub
enter
pop
insb
xor
dec
pop
mov
mov
mov
sbb
fs
imul
mov
cmpb
hlt
lods
cmpsl
fdivrs
sbb
xor
into
pusha
pop
adc
int
cmp
pop
mov
fwait
cmpsb
lods
iret
mov
aad
mov
xchg
leave
mov
ljmp
icebp
xlat
arpl
push
int
or
jge
jp
je
jp
sub
lcall
or
xor
aaa
mov
dec
enter
mov
sub
dec
xor
mov
stos
out
push
mov
int
fs
adc
mov
les
xchg
mov
movsb
inc
stos
mov
mov
ja
ljmp
and
pop
add
mov
push
stc
xchg
lods
pushf
dec
sahf
les
fwait
lea
xor
lahf
in
js
cwtl
push
cmpsl
fcomps
mov
mov
rorl
add
lcall
adc
sti
jecxz
inc
imul
popf
les
push
pop
enter
jbe
push
jg
add
push
std
ret
cmp
arpl
adc
aam
in
jmp
sbb
jns
mov
push
test
incb
cli
jbe
pop
rcrb
mov
cmp
push
loope
adc
lock
jnp
lret
inc
out
mov
dec
sahf
or
int3
mov
sbb
int3
fmul
mov
outsl
jne
sub
int3
outsb
mov
xchg
sahf
icebp
push
mov
xor
ficompl
mov
adc
sbb
scas
pop
mov
imul
clc
mov
and
into
jnp
jne
xor
dec
inc
ret
pop
jb
shrl
cmp
aaa
repnz
adc
loope
cmp
add
loope
pop
leave
push
sahf
jae
or
sub
mov
inc
cmp
cmp
out
dec
mov
jb
sub
rolb
leave
push
adc
mov
ret
loope
mov
ja
or
leave
insl
test
hlt
lock
and
mov
into
pop
enter
lods
mov
imulb
stc
push
call
and
push
enter
bound
adc
jb
jge
cmpsb
imul
sub
add
loope
xchg
fisttps
mov
popf
les
nop
negl
inc
pop
cmp
mov
jg
enter
stc
or
rcrb
lods
lcall
adc
or
lea
ljmp
and
add
jp
in
out
cmc
loope
cmp
cli
mov
push
std
jbe
sub
and
push
push
inc
stc
ret
push
inc
inc
call
insl
ja
shll
mov
cmp
mov
push
jp
inc
popf
xchg
xchg
mov
xor
and
scas
data16
pop
pop
push
int
xchg
ljmp
cmc
inc
idivb
cmp
shl
push
aad
dec
xor
rolb
bound
push
push
mov
lock
out
lret
loopne
lret
sub
add
sbb
xor
push
and
imul
addb
mov
xchg
stc
lods
hlt
cld
mov
inc
addb
hlt
hlt
int3
dec
adc
vmread
test
sti
test
outsb
mov
jb
mov
int
aas
out
mov
in
arpl
cmp
mov
shrb
dec
insl
in
fisttpl
out
jmp
out
push
in
gs
cmp
adc
pop
jbe
arpl
sahf
bound
sub
das
test
cmp
dec
push
orb
pushf
sbb
cmp
inc
add
sarb
jno
dec
enter
mov
push
pop
lds
cmpsl
lahf
xchg
sub
xchg
cs
mov
add
call
les
cmp
js
sbb
pop
ja
in
pop
mov
in
mov
insb
ret
cmpl
push
or
jmp
lods
jecxz
sub
xchg
gs
inc
xchg
mov
sti
sbb
out
jge
bound
fdivl
sbb
test
sub
repz
cmpsb
sbb
cld
cmp
call
rol
mov
push
mov
int
or
rolb
mov
test
mov
inc
test
int
leave
bound
push
sahf
rolb
incb
scas
push
pop
xlat
cwtl
aad
jo
adc
cmp
add
mov
in
jbe
cmp
sub
mov
and
in
cmpsb
in
sti
sub
fistpll
loopne
xor
sub
imul
les
or
imul
xchg
stos
aad
xchg
stc
pop
fwait
adc
mov
dec
sbb
xor
xchg
mov
bound
stos
das
adc
adc
push
les
repnz
stos
cmc
dec
jno
mov
std
push
pop
xchg
cmp
aam
dec
pop
jne
mov
pop
in
inc
mov
scas
je
faddl
xor
jmp
xor
adc
cmp
insl
or
adc
inc
nop
fdivrl
aaa
and
jle
enter
subps
pop
daa
mov
dec
stc
xchg
cltd
lds
push
rcll
xor
outsb
pop
out
sub
push
push
clc
cmp
cmpsl
testl
lcall
imul
and
sbb
mov
xchg
int3
mov
ja
lahf
stos
js
jg
or
cwtl
imul
xor
inc
cs
outsl
cmp
add
iret
push
lock
fisttpl
fs
ds
adc
popf
inc
sub
pop
add
int3
gs
int
je
jge
dec
leave
sbb
shlb
incb
mov
cmp
mov
lret
les
push
sbb
add
add
mov
cli
push
inc
popf
fdiv
fldt
cli
sbb
mov
push
jo
add
sub
loop
jnp
leave
jle
mov
test
jle
ffree
dec
aam
iret
inc
push
sbb
mov
jne
push
push
sub
mov
jns
inc
inc
jle
insb
adc
push
jmp
mov
fwait
ret
xor
mov
loopne
in
je
sti
pusha
lret
mov
repnz
les
sbb
dec
ljmp
or
shll
ret
in
push
cwtl
stos
mov
imul
in
or
repnz
xor
lea
and
shlb
or
jg
add
pop
fiadds
out
imul
loope
sbb
test
dec
lods
xchg
push
mov
stc
jecxz
pop
mov
xchg
mov
jp
pop
xor
aas
rol
loopne
adc
mov
jg
adc
lods
hlt
mov
and
pop
sarl
in
pop
xor
iret
inc
testl
ds
les
adc
fimull
cmp
sub
es
dec
and
fcmovu
lods
fwait
in
nop
mov
mov
lock
jle
outsb
rol
daa
adc
xchg
inc
pop
mov
push
cmp
sbb
ret
out
aas
in
leave
movsl
das
jne
dec
mov
cmc
mov
pause
xlat
xor
stc
aas
sub
mov
jno
dec
add
ss
sbbb
mov
loope
and
pop
mov
fsts
mov
push
jl
and
add
push
cld
negl
mov
xor
adc
adc
sub
xchg
mov
mov
loope
adc
push
add
gs
out
jmp
jge,pt
xor
xchg
jecxz
addr16
testb
sub
push
ljmp
pushf
pop
xchg
mov
sub
jns
and
sbb
ja
or
ljmp
in
pop
push
jb
fwait
movsb
sbb
hlt
mov
and
fistps
add
inc
xchg
mov
add
into
iret
adc
xor
movsb
adc
push
sbb
cltd
push
lea
add
leave
dec
cmp
outsb
adc
adc
mov
jo
inc
sahf
lods
push
cli
mov
pop
loop
ret
mov
xchg
sti
mov
addb
mov
push
leave
rclb
lock
dec
loop
dec
pop
or
test
call
outsb
test
cwtl
arpl
in
repz
cmc
pop
sub
pusha
xchg
pusha
mov
or
imul
iret
fildl
popa
mov
jg
xlat
xchg
cmpsl
dec
and
jne
fwait
cmp
std
mov
cmpsb
gs
lahf
pushf
stc
mov
repz
into
push
loop
jp
push
jge
mov
es
adc
rcrl
dec
dec
into
mov
dec
test
inc
fadd
dec
mov
jne
sahf
fs
jb
test
mov
inc
stc
insb
mov
add
xor
mov
mov
inc
xor
inc
mov
pop
rcrb
pop
pop
sbb
stos
or
les
mov
iret
sub
pop
push
test
mov
sub
sbb
ds
shlb
fiaddl
xchg
ja
aas
mov
nop
xlat
les
jmp
dec
push
sbb
mov
sbb
inc
and
sbb
push
or
xchg
mov
sub
pop
lcall
mov
int
inc
adc
jg
or
or
inc
sti
mov
imul
nop
jmp
xchg
push
pop
cs
dec
scas
rorl
loope
test
cwtl
sbb
xor
cmc
add
push
aam
cs
scas
test
add
mov
scas
xchg
push
xchg
mov
push
pushf
dec
inc
loop
inc
xchg
add
roll
insl
cmpb
jmp
movsl
sub
mov
movsl
pushf
adcb
daa
jae
rcll
mov
bound
hlt
leave
gs
pop
lods
in
call
arpl
add
leave
push
mov
adc
ret
inc
sbb
lret
test
shrl
adc
sarl
pop
inc
dec
aas
test
push
cwtl
in
xchg
cmc
into
fdiv
sub
mov
or
add
lcall
jmp
shlb
insb
mov
js
lds
and
insb
out
xor
cs
in
dec
cwtl
cmp
stos
pop
call
pusha
pushf
cmpsb
rcrb
jge,pt
fmuls
addl
les
jns
aam
push
add
fdivrs
lods
mov
popf
adc
shrb
popf
je
bswap
jl
sbb
mov
sbb
loope
imul
cmp
ja
pop
sub
clc
ret
rcrl
arpl
rclb
sub
lahf
ja
pop
adc
out
xlat
nop
adc
pop
test
and
fsubrl
cmp
lea
adc
jp
movsl
xchg
insb
dec
sbb
adc
idiv
stc
push
push
leave
xor
mov
popa
cmp
push
mov
scas
push
mov
lret
mov
xchg
dec
mov
cld
dec
movsb
subl
sub
mov
mov
sbb
fisttps
cmp
shrb
loope
dec
fsubp
cwtl
outsb
fldcw
push
jb
sti
inc
in
stos
sub
movl
add
mov
dec
imul
jmp
out
divl
testb
adc
icebp
dec
xchg
jo
pop
push
jmp
nop
mov
cwtl
loope
test
and
xchg
inc
xor
clc
xor
aad
sbbl
and
lods
dec
push
push
push
jne
fists
inc
jge
int3
lods
dec
rcrl
bound
or
fdivs
scas
sub
fimull
push
push
pop
mov
add
mov
jl
adc
cld
xchg
jo
daa
push
mov
dec
push
or
shll
pushl
cmp
ds
dec
xor
adc
sahf
mov
cmp
lods
xor
add
std
push
mov
inc
adc
clc
in
dec
jne
aas
dec
lods
mov
xchg
cmp
inc
test
dec
bound
adc
push
xor
lods
fsubrs
and
jle
scas
stos
das
enter
push
xor
xor
mov
mov
shrl
es
iret
adc
or
jl
cmp
ret
inc
imul
lock
ja
adc
cltd
aad
stos
out
lret
aaa
aaa
dec
enter
stos
jge
cwtl
lret
outsb
out
and
push
jp
cmp
sub
stos
dec
aas
popf
xor
or
dec
aam
adc
lea
roll
push
aad
lret
push
jmp
mov
xchg
mov
hlt
inc
jns
push
inc
repz
pop
adc
test
mov
xchg
dec
xor
xlat
mov
cmp
adc
es
pop
outsb
push
add
cmc
fmuls
push
adc
fmull
ja
sbb
cmc
mov
fucomi
dec
mov
or
andl
inc
je
sbb
aaa
adc
add
inc
in
je
into
or
pop
repnz
or
sub
lea
je
push
mov
inc
mov
jo
imull
pop
pop
fadd
test
mov
add
xor
int
lcall
jo
and
dec
icebp
and
push
movsb
xchg
dec
les
and
into
cmpsl
idiv
sub
sti
dec
and
and
add
or
out
ljmp
mov
push
or
fsub
jmp
lret
pop
jg
jp
sbb
pop
movl
cmp
mov
rorb
xor
sub
and
hlt
ja
pop
jnp
cmp
jb
xchg
or
mov
lcall
mov
mov
les
mov
adc
sub
pop
push
pop
pop
iret
jnp
push
inc
scas
xchg
loopne
ret
and
test
fsubs
add
adcb
push
adc
pushf
adc
gs
jl
or
jl
aaa
jne
movsl
jo
pop
dec
scas
sub
fisttpl
inc
rolb
dec
stos
jp
fwait
aam
sbb
xchg
mov
sahf
push
ja
mov
add
adc
int3
ror
fisttps
pop
jns
inc
outsl
jno
dec
fiadds
jmp
loope
inc
adc
insl
or
outsl
shl
pusha
insb
jl
dec
dec
cmp
aas
cmpsl
call
cwtl
mov
or
incb
lea
shlb
into
jbe
push
das
mov
nop
mov
sub
jbe
mov
lea
cmp
repz
jae
fnstcw
adc
pop
test
iret
notl
fs
out
aad
mov
stos
mov
xchg
aad
roll
fisttpl
fidivl
add
stos
in
mov
inc
dec
stos
imul
push
gs
pop
lahf
in
mov
ret
pop
and
push
mov
inc
and
imul
paddusw
lods
adc
mov
test
shll
test
ret
pop
cltd
cltd
dec
rorl
div
in
push
pop
repnz
and
or
imul
jno
fxch
loope
out
and
sbb
cmp
pop
sbb
das
and
roll
jl
ja
mov
or
nop
divl
repnz
pop
and
sahf
mov
mov
cmp
xor
push
test
adcl
jle
mov
jae
imul
in
pop
cmpb
lea
sub
dec
imul
fsubrs
stos
or
test
xchg
das
shll
pop
in
pop
inc
mov
xor
shll
iret
fistpl
sbb
mov
inc
and
lock
roll
mov
sub
push
stos
popf
pop
mov
push
xor
stos
insb
inc
xchg
inc
enter
popf
ffree
js
jns
pop
testb
xor
and
mov
jp
das
sbb
xchg
cmpsl
jb
pop
add
sbb
into
inc
pop
push
aam
mov
loopne
repz
lock
incl
xor
and
jg
fstpl
cmp
xchg
add
xor
pop
fbstp
clc
or
mov
mov
roll
js
xor
xor
aad
adc
in
pop
sti
and
incl
xacquire
push
or
dec
lock
xchg
ficomps
inc
pushf
rorl
pop
xlat
out
out
mov
shll
and
and
mov
repz
inc
fwait
sbb
loope
add
mov
fldl
insl
mov
lods
or
outsb
add
mov
outsl
sub
shr
shrl
adc
incb
mov
cli
aas
gs
jno
sahf
jmp
sbb
xor
push
dec
jmp
mov
ficoms
inc
pop
xor
jnp
mov
lods
adc
inc
jp
call
psrlw
cmp
or
dec
xor
shr
loopne
inc
adc
push
lret
push
pop
mov
push
mov
xchg
bts
pop
inc
or
jno
and
sbb
sarl
cmp
aad
fwait
minps
lret
xchg
inc
inc
sbb
jnp
shll
mov
mov
sarb
jns
lods
inc
popl
push
lret
cwtl
sub
inc
mov
out
jnp
add
out
sbb
inc
add
mov
pop
push
test
push
sub
or
aad
and
inc
push
popa
mov
mov
inc
decl
and
pusha
sub
neg
imul
mov
cmp
and
mov
xor
sbb
sahf
inc
cwtl
sti
fstpt
loop
cli
mov
aas
gs
ljmp
inc
dec
ljmp
mov
cmp
pop
cltd
cs
into
dec
loope
loop
jmp
add
adc
push
xor
jge
mov
mov
jne
cmc
jecxz
stc
or
jae
adc
fisttpll
mov
jne
pop
jmp
fldl
cmp
cli
orl
cli
cld
jle
clc
xor
xchg
jle
and
or
sub
push
push
push
jge
loopne
sub
lods
ja
jne
and
flds
jb
push
push
loop
daa
mov
loope
addr16
imul
pop
jne
mov
cmpsl
ljmp
jmp
std
pop
insb
and
jbe
std
mov
loope
fldl
insb
vaddsubps
xor
in
adcl
mov
pop
add
mov
ret
ja
out
std
fisttpll
in
xchg
mov
adc
or
loopne
leave
sbb
and
pop
xor
xor
jnp
add
outsb
or
jb
and
inc
push
push
mov
lds
ljmp
aaa
jb
sbb
mov
lds
mov
call
dec
scas
insb
fwait
jge
fwait
leave
test
lea
jecxz
cwtl
pop
sub
mov
scas
or
mov
mov
mov
mov
jo
int3
xor
fnsave
jnp
imul
fwait
jg
xor
jb
fisubl
mov
sub
aam
cld
adc
xchg
pop
std
les
fldenv
in
in
cwtl
dec
aas
inc
fcompl
jle
in
mov
jge
jle
and
mov
mov
int3
fdivrl
adc
jge
mov
mov
mov
cmp
inc
dec
or
repz
cwtl
les
mov
addr16
ja
adc
dec
fs
enter
rsqrtps
jecxz
sbb
ret
js
inc
pushf
jg
pushl
loop
dec
dec
mov
pop
daa
daa
cmp
push
ret
push
dec
scas
test
jbe
xchg
mov
mov
int3
aaa
adc
std
sbb
int3
popf
repnz
xchg
enter
movsl
and
pop
mov
and
cmpsl
cli
mov
mov
jnp
in
lret
jbe
pop
xchg
or
scas
insb
aaa
ret
push
sbb
test
pop
dec
push
jg
fcmove
cmp
mov
sti
and
jno
xchg
sti
fcmovb
add
xchg
rcll
xor
or
nop
into
shr
mov
adc
xor
std
loop
cmp
test
out
out
stos
fdivl
mov
addr16
or
inc
mov
or
addr16
aas
pushf
loope
fisttpll
mov
mov
add
stos
push
sub
addl
xor
pop
iret
dec
shrb
dec
mov
addr16
xchg
fsubl
xchg
inc
outsl
pop
xor
push
mov
lret
clc
xchg
push
out
or
div
adc
push
or
aam
cvttps2pi
inc
jo
and
in
clc
sub
nop
fdivrl
cld
icebp
or
sbb
xor
add
jge
fiaddl
inc
ret
inc
popf
outsl
stos
sub
lahf
add
lret
imul
imul
push
ds
rorl
push
rcrb
push
cwtl
bound
xchg
cmp
dec
orb
test
dec
inc
dec
sbb
test
iret
lods
outsl
pushf
in
es
test
jb
fcompl
or
or
pop
jge
clc
or
popa
in
leave
mov
and
cltd
mov
mull
out
icebp
or
cli
sbb
fisubrl
into
mov
out
jge
mov
xchg
movsb
cli
jne
sbb
cmp
in
pop
loopne
imul
cmp
or
jns
cltd
inc
enter
inc
mov
in
stos
in
push
lcall
push
inc
adc
imul
in
mov
in
sbb
jle
push
aaa
mov
mov
jo
xor
xchg
lret
and
push
sahf
leave
mov
bound
mov
adc
xchg
push
add
inc
inc
cmp
fistpl
lods
xchg
adc
test
xchg
fisubl
pop
stos
out
fucomp
aad
fwait
dec
xor
sbb
imul
xor
and
or
xchg
nop
push
jno
xchg
fcomps
sbb
pop
inc
or
popa
sbbb
ret
and
xchg
add
repnz
jg
test
mov
mov
dec
pop
fbstp
push
jmp
xor
ja
shlb
mov
es
jp
push
fdivr
jmp
push
push
loope
inc
add
push
idivl
ljmp
push
push
push
xchg
shrb
cmp
dec
popf
rcl
inc
or
xchg
lods
pop
xchg
test
xlat
and
inc
xor
in
sbb
enter
mov
mov
cltd
aas
in
pop
mov
nop
ds
aaa
mov
push
rcrl
dec
pop
scas
shlb
cmp
jae
sbb
xor
imul
lods
stc
pop
mov
outsl
push
sbb
xor
ss
push
mov
out
or
mov
adc
cmp
repz
push
push
loop
xor
sub
stos
push
test
notb
cli
or
xor
mov
jmp
paddsw
dec
sahf
sub
ret
cwtl
xchg
stos
in
cmc
sbb
push
add
xchg
mov
mov
out
mov
in
pusha
adc
push
mov
dec
pop
mov
lods
in
mov
popa
das
cltd
adcb
push
push
dec
or
imul
outsl
mov
inc
gs
out
call
adc
mov
pop
leave
jge
pop
pop
and
pop
sbb
and
ljmp
loope
push
add
mov
cmp
pop
enter
sar
out
or
mov
mov
push
out
in
pop
sub
loopne
mov
jb
mov
lock
movsb
xchg
fwait
cli
pop
popa
js
adc
enter
adc
cli
aad
or
push
sbb
inc
mov
pop
aad
mov
and
cmp
scas
pop
push
push
mov
pushf
lea
dec
lods
mov
mov
sub
jmp
pop
or
cmp
or
add
xlat
testb
jmp
call
jne
or
arpl
rcr
adc
js
jp
cmp
aaa
push
mov
sub
fdivr
jle
adc
cwtl
repz
stos
cmp
cmovo
jae
cli
fistps
pop
out
ss
inc
xchg
dec
orl
pop
xor
add
das
fistps
push
jecxz
or
mov
or
or
mov
pop
sbb
stc
fldl
cmp
xor
mov
dec
ret
aad
outsl
dec
push
jmp
push
movb
pop
add
fincstp
test
push
adc
enter
out
loope
sbb
or
push
in
xlat
int3
test
frstor
fildll
rclb
dec
inc
std
cwtl
pop
cltd
imul
jne
mov
aam
mov
clc
test
push
cmp
pop
les
mov
out
xchg
push
pop
xor
mov
pop
sti
jg
inc
loop
xchg
dec
fucomp
pop
jle
fs
fisttpl
inc
movsb
pop
and
icebp
mov
add
mov
inc
rorb
xchg
cwtl
daa
inc
push
or
xor
jne
mov
loope
cmpsl
sbb
out
jb
out
rclb
aaa
xlat
xorl
js
xchg
xlat
mov
mov
je
es
lret
cmp
dec
xchg
nop
cmp
sarl
mov
inc
ds
icebp
sub
push
xchg
cmp
lds
dec
iret
mov
adc
in
and
push
cmpsb
jg
jns
xchg
cmp
mov
inc
mov
add
push
imul
mov
add
mov
aaa
pop
push
and
in
add
add
notl
aad
pop
in
cmpsl
mov
dec
inc
mov
push
inc
push
clc
xor
fildl
mov
mov
arpl
test
mov
insl
or
push
aad
mov
mov
out
icebp
insb
mov
nop
add
lock
das
inc
cmc
and
push
push
shll
in
mov
cli
jns
stos
cmp
pop
mov
into
mov
xlat
adc
cmp
mov
add
mov
jno
add
ja
ret
sub
adc
lret
xchg
cmp
cmp
stc
imul
mulps
hlt
negl
cmp
xor
daa
mov
cmc
outsb
adc
out
mov
push
aam
sbb
and
mov
xor
mov
or
sbb
pushf
or
add
adc
push
or
xor
sbb
bound
faddl
in
dec
sbb
test
subb
call
xchg
inc
out
cld
mov
or
int3
lds
sub
cwtl
lock
out
or
mov
inc
rolb
or
notl
sbb
icebp
pop
fst
popa
in
call
lcall
push
outsb
xchg
inc
push
xorl
dec
mov
fwait
int3
repnz
das
dec
repnz
push
jnp
sahf
inc
data16
or
inc
call
add
rcr
mov
push
sbb
inc
lock
cmp
insb
jo
xchg
or
pop
cmp
adc
int
inc
sub
mov
mov
lds
pushf
push
mov
inc
hlt
stc
lods
popl
mov
sub
inc
icebp
xchg
and
mov
scas
push
mov
lret
cli
out
mov
mov
fwait
xor
add
lcall
mov
and
add
mov
mov
mov
cmc
cmc
lahf
call
std
rcll
mov
int
sbb
inc
mov
sbb
mov
dec
mov
jne
movsl
addr16
mov
inc
xor
or
test
stos
or
not
adc
addl
mov
lret
jmp
pushf
pop
pusha
int
mov
add
inc
mov
aad
mov
sub
out
xor
and
insb
shr
mov
inc
sbb
inc
in
sub
cmp
fs
add
cmp
sub
xchg
fisttpl
ss
ret
xor
pop
mov
ja
test
mov
adc
add
fnstenv
call
nop
xor
pop
xchg
push
dec
pop
mov
out
mov
arpl
dec
fcomp
fbld
push
enter
lret
xchg
inc
push
cmpsl
sub
movsb
aas
cltd
fs
ss
xchg
cs
add
pushf
xor
mov
or
fdivs
cmp
fucomi
mov
mov
mov
mov
fcomps
outsb
inc
stos
add
nop
xor
ds
cmp
loopne
addb
jecxz
bswap
dec
movsb
mov
sbbb
pop
shrl
or
sbb
push
stos
inc
push
cvtps2pi
in
mov
xor
scas
mov
xlat
cld
and
cs
sahf
inc
xchg
or
pop
int3
repnz
sti
mov
stc
adc
data16
adc
jne
inc
pusha
daa
test
jmp
push
xorb
mov
mov
and
mov
cmp
out
cltd
fisttps
mov
mov
sbb
cmp
mov
inc
into
push
xchg
jo
int
adc
xchg
xor
jge
aaa
push
and
push
jecxz
sub
mov
ljmp
push
movsl
dec
mov
inc
adc
xchg
neg
stos
fadd
clc
imul
sbb
cmpsb
xchg
jp
ret
adc
ja
jmp
fnstenv
rorl
imul
imul
in
push
sbb
cwtl
cmpsl
xor
mov
out
sbb
adc
push
lods
lret
daa
icebp
dec
out
lret
iret
iret
dec
adc
mov
repnz
gs
stos
imul
mov
dec
pop
outsb
add
and
jo
mov
dec
popf
in
cwtl
int
sahf
pop
adc
lds
pop
lret
jne,pt
mov
xchg
or
shrl
in
push
lcall
pop
in
movsl
mov
push
mov
sub
mov
sub
test
dec
inc
push
and
lahf
cmp
gs
lods
outsl
and
stc
insb
and
push
push
inc
out
mov
xor
mov
jcxz
cmp
inc
xchg
jbe
pop
fiaddl
lret
xchg
inc
push
mov
cmp
xor
loopne
push
mov
fcoms
and
mov
cmc
mov
sbb
pop
sbb
push
js
xchg
sub
mov
xchg
fcompl
dec
fiadds
sub
jge
cmp
mov
imul
pop
mov
xchg
push
data16
cmpsl
push
cmp
scas
pushf
ret
cmp
sbb
cmpsb
jb
mov
call
mov
mov
mov
mov
inc
leave
pop
xchg
xor
leave
pop
push
mov
xchg
mov
inc
ja
ljmp
cmp
shrl
push
aad
jbe
fsubs
mov
or
popf
xor
mov
pop
pop
fmull
fiaddl
dec
sub
jne
push
push
or
mov
inc
push
ror
lods
fsubrl
cmp
dec
or
in
test
jne
push
sbb
or
sarl
les
inc
mov
xor
dec
pop
mov
sub
mov
or
cli
jmp
popa
imul
xchg
xlat
inc
in
pusha
mov
repz
cli
push
push
call
sub
test
jne
and
adc
jp
jae
pop
push
jecxz
pop
aaa
mov
lock
outsb
inc
inc
cmpl
and
jge
out
scas
mov
sub
repz
and
and
and
shlb
ffree
loop
test
push
jne
ljmp
sub
cwtl
nop
dec
cmp
sub
out
mov
push
int
mov
in
imul
das
mov
movsb
add
das
xchg
ljmp
and
fists
lcall
sarb
push
scas
jle
push
xchg
mov
pop
je
cmp
test
fs
cs
push
push
rcll
sbb
jge
pop
adc
inc
xchg
mov
idivl
pop
add
mov
adc
push
int
mov
mov
fsubs
jns
add
fsubrs
pop
ljmp
dec
lret
inc
sbb
cmp
nop
ret
jnp
mov
dec
scas
add
mov
cld
leave
test
mov
sti
repnz
cwtl
rcrl
pusha
je
jb
cmc
and
aam
cmp
sar
cmp
mov
xchg
push
pop
add
adc
sbb
cli
ss
fcmovnb
scas
xor
cmc
out
pusha
sti
addb
push
jle
inc
frstpm(287
jl
jg
sub
pop
scas
xchg
movsl
or
out
loope
lock
daa
lea
jno
cmp
add
or
je
loopne,pt
mov
dec
pop
lods
inc
cli
add
inc
loop
push
nop
xchg
push
test
lcall
andl
mov
jmpw
sbb
or
mov
pusha
fs
push
pushf
stc
and
inc
ja
popa
out
notl
stos
fwait
jg
push
mov
in
push
lret
push
loopne
push
inc
leave
shlb
jbe
cmp
repz
sbb
push
mov
aaa
sub
mov
sbb
inc
jo
xchg
push
mov
les
sahf
pop
stc
and
xor
in
leave
push
cld
in
mov
cli
push
js
xor
data16
in
xchg
fstpl
cli
xchg
ja
adc
lds
sub
mov
xor
inc
inc
push
loop
lea
jae
sbb
imul
or
push
cmpsb
and
add
neg
sahf
aam
or
adc
adc
test
jmp
pop
pop
mov
cmp
std
mov
mov
test
cmp
or
les
adc
sbb
fs
imul
rcrl
in
lret
jnp
int
ja
js
mov
gs
orb
fsubr
cmp
push
push
popf
cld
call
inc
ret
push
div
rorl
mov
jbe
sbb
mov
dec
push
inc
cmp
xchg
incb
shlb
xor
cmp
dec
mov
std
into
shlw
add
mov
pushf
mov
jnp
arpl
pmaddwd
push
jnp
jg
fistpl
sub
pusha
fdivs
les
lods
leave
push
call
adc
xchg
cwtl
push
dec
pop
push
in
xlat
jae
idivb
aaa
xchg
fwait
sbb
in
or
or
fs
dec
xchg
dec
cmp
xchg
movsl
into
fldl
std
push
inc
les
inc
fs
jnp
test
lahf
mov
loope
cmp
in
adc
shrl
icebp
iret
test
mov
in
out
cwtl
jg
test
mov
mov
popa
bnd
push
add
mov
les
xor
and
sub
iret
and
mov
mov
mov
push
or
cltd
cmp
dec
mov
pop
jo
lods
aam
pop
mov
repz
xchg
xchg
cmp
fldt
fistpl
xchg
test
pop
in
loop
scas
xorl
cmp
mov
sbb
jg
or
loop
pop
inc
or
inc
jb
divl
imul
inc
int3
dec
pop
inc
leave
bswap
mov
sub
subl
das
add
add
jmp
push
pusha
cmp
ljmp
shrl
enter
loop
flds
loope
popa
loop
xchg
push
jg
rorb
or
push
out
and
pop
call
xchg
shl
addr16
andl
pop
pop
shlb
xchg
sbb
fisubrs
mov
cld
cs
dec
notb
and
xchg
cmp
xlat
aaa
icebp
push
sub
dec
test
int3
daa
aam
dec
jb
icebp
or
pop
insl
xor
pop
cmpsb
xchg
sub
lahf
jl
int
jbe
mov
xchg
into
idivl
popf
les
mov
sbb
add
xchg
aam
imul
daa
in
pop
insb
push
outsl
mov
shrl
dec
mov
shrb
in
jns
popa
js
aaa
cmp
mov
insl
dec
addl
loopne
cli
or
lods
fldl
movsl
sbb
int3
jecxz
or
dec
enter
inc
sti
stc
lret
or
adc
rolb
pop
xor
das
jle
out
push
sahf
js
test
adc
hlt
jae
mov
ja
jmp
repnz
fimuls
jo
rcll
fdivl
mov
sbb
xchg
adc
out
fdivrl
cmpsb
sub
xchg
pop
jo
xchg
mov
jmp
mov
ja
cmp
jmp
sbb
outsb
xchg
aaa
and
cld
jl
or
sbbl
test
ror
sub
lods
and
or
pusha
or
movsl
dec
cwtl
movsl
mov
mov
xchg
cmp
sbb
pop
lock
out
ja
xchg
insb
cmp
into
fprem
fisubl
sarb
sub
lahf
test
or
sub
push
sub
and
cli
orb
pop
in
or
sbb
enter
xor
jge
dec
lods
int3
fsubrl
pop
push
mov
push
lea
stos
shlb
dec
rcrb
cmp
cmpsb
gs
sbb
sahf
push
lods
pop
in
mov
mov
inc
int
jl
hlt
test
lea
adc
push
jmp
cs
stos
xchg
cvtps2pi
adc
in
jbe
fsubr
sub
rcr
push
rolb
adc
test
notb
out
pop
insl
pop
or
hlt
sarb
dec
les
repz
movsl
xor
fadds
aam
push
pop
imul
ficompl
lret
or
out
scas
rorl
sti
arpl
call
iret
adc
xchg
xor
repnz
mov
cmpsb
or
stc
jmp
xrelease
or
lods
jecxz
data16
aad
in
cmp
cli
push
dec
jae
or
sub
cmp
push
lahf
fisttpl
aaa
cmp
inc
pop
out
aaa
insb
imulb
filds
lods
xor
lock
int3
jmp
js
mov
mov
bound
pop
add
mov
sbb
pop
xor
dec
insb
push
test
push
ret
sub
jnp
sbb
mov
jne
xchg
or
movsl
orb
adc
add
adc
add
push
pop
in
pop
or
pop
cmp
jbe
mov
xchg
or
fs
insl
sub
pop
cmpsb
inc
add
pop
mov
fisubrl
test
jne
jmp
outsl
mov
adc
pop
mov
das
ret
out
add
sub
and
pop
into
lock
fstl
inc
js
mov
xor
xchg
pop
mov
adc
lods
xchg
jmp
mov
adc
orb
xor
and
push
pop
scas
pop
jge
fcmovu
dec
cmpsb
mov
lods
fsubr
adc
lahf
std
cmc
sub
or
icebp
mov
cs
aaa
popa
stos
roll
enter
lcall
dec
mov
push
cmp
jo
jg
insl
dec
xchg
and
inc
mov
inc
jne
mov
movsb
enter
and
cmp
inc
xchg
popf
jp
idivl
test
adc
test
icebp
scas
xor
or
add
pop
jmp
lcall
xchg
xchg
xchg
push
inc
cs
dec
mov
add
mov
jecxz
adc
sbb
cld
push
sub
fucomi
xchg
xchg
mov
inc
out
test
insl
sub
ljmp
lods
insb
mov
jl
bound
shlb
das
outsl
or
imulb
aad
pop
movsb
fnstcw
arpl
lods
pop
fcmovne
mov
mov
addr16
inc
ljmp
pop
clc
scas
mov
repnz
imul
lret
xchg
mov
stos
add
mov
jl
pop
pop
test
test
mov
push
pop
out
ja
dec
lahf
mov
inc
inc
outsl
xor
and
or
add
xchg
pop
movsl
inc
imul
fwait
xchg
pop
ss
outsb
push
mov
and
and
test
dec
ret
shl
adc
dec
inc
shrl
xchg
jne
test
jae
or
cmp
push
out
adc
xchg
stos
and
add
dec
in
dec
cmp
sub
fwait
cs
sbb
idivl
out
sti
dec
adc
imul
lret
add
testl
aas
jb
movsl
push
mov
cmp
ljmp
add
addr16
xchg
fcoml
aas
andb
jle
cltd
xor
jge
jb
dec
lahf
pop
in
test
cwtl
lret
lods
sbb
xor
push
inc
push
jbe
jns
imul
stos
out
movsb
mov
mov
and
sbb
fidivs
xchg
bound
xor
jmp
cmp
jne
xchg
pop
jnp
push
outsb
cld
leave
loop
sbb
pop
jnp
sbb
cli
dec
sbb
icebp
lret
mov
mov
push
and
lret
mov
xchg
pop
xchg
jg
xchg
loopne
adc
lds
das
movlps
push
pop
adc
movsb
out
push
pop
and
std
mov
add
adc
cltd
loopne
or
jg
xchg
test
pop
loop
push
and
lcall
jmp
push
pop
pop
cmp
shlb
movsb
stos
ds
out
fwait
outsb
xlat
rcll
into
and
fisubs
inc
popa
in
loopne
mov
and
mov
daa
xor
pusha
jp
lods
dec
subl
es
sahf
dec
int3
fs
daa
pop
stc
cmpb
xor
dec
pop
insb
les
rorb
sbb
into
mov
mov
inc
mov
jo
outsl
out
daa
in
or
xchg
pop
inc
sbb
push
pop
insb
push
pop
popa
mov
mov
dec
sub
mov
fdivp
cmp
push
addr16
push
xchg
add
dec
fidivl
insl
gs
lcall
cmp
push
xchg
sbb
les
mov
or
cmp
popf
cmpsl
sti
mov
push
or
inc
jg
mov
push
mov
cmp
stos
int3
imul
mov
adc
ss
insl
and
inc
cmp
xchg
sbb
pop
mov
pop
repz
out
and
jnp
sub
rorb
xchg
outsb
adcb
into
inc
out
jb
out
rol
stos
enter
mov
ljmp
hlt
ss
push
xchg
rcrb
xchg
adc
rclb
lret
pop
mov
aas
cmc
shll
add
int3
test
movsl
xor
mov
lea
out
add
push
loopne
cwtl
jg
test
dec
push
enter
dec
and
pop
mov
or
cwtl
mov
xor
fwait
mov
jnp
repz
sub
lcall
add
leave
movsl
sub
mov
sub
adc
and
rcll
mov
add
into
mov
mov
les
pop
jo
dec
jmp
icebp
movsb
in
or
cltd
jmp
clc
cmpsl
loopne
stos
ljmp
or
xchg
imul
xor
mov
adc
cmp
add
jae
cld
push
lret
xchg
and
push
push
adc
dec
testb
fwait
ret
pop
arpl
pop
aad
jbe
nop
jp
add
js
fstl
fisubl
cmpl
jmp
dec
adc
jo
xchg
dec
nop
xchg
jmp
popa
mov
stc
data16
es
arpl
rolb
sbb
mov
test
sti
pop
sub
add
pop
mov
out
xor
mov
lcall
xchg
imul
loopne
sbb
or
sarl
out
sbb
mov
pop
aam
or
movsl
lcall
cmp
or
mov
rclb
loopne
lods
and
out
jae
movsb
data16
rcll
into
or
xor
out
pop
dec
mov
adc
push
mov
cmp
incl
sbb
jns
test
mov
push
les
or
sub
sahf
adc
addl
enter
jae
lret
jae
pop
pop
xchg
call
out
stos
jb
pushf
fcoml
push
jp
inc
push
mov
arpl
std
xchg
loope
jp
xchg
cmp
repnz
inc
addl
daa
sahf
add
lds
fst
sub
imulb
cmp
insb
cmp
cmp
sbb
inc
shll
jbe
jno
jmp
aad
push
jnp
add
shrb
fbld
push
or
adc
sbb
cmc
mov
xchg
pop
sbb
mov
sub
scas
scas
xchg
pop
cmpsl
jb
xchg
sub
mov
jg
xchg
push
je
add
sub
pop
sub
imul
test
int
stc
and
sub
out
shlb
xor
mov
flds
cmp
data16
imul
in
je
cmp
ja
xchg
dec
stos
imul
ret
out
popa
pop
xor
fwait
jge
jl
dec
rcl
clc
iret
fstp
sbb
inc
cs
sub
test
xchg
mov
jle
xchg
fsubrl
aas
sub
adc
xor
test
cmp
mov
mov
stos
mov
stc
movsl
pop
jbe
jno
jg
out
adc
lcall
xor
cld
or
cmpsb
adcb
add
into
enter
inc
pop
sbb
in
jno
adc
pop
xchg
push
cmp
dec
pop
mov
push
push
inc
scas
sbb
popf
adc
enter
cltd
dec
pop
loop
dec
sbb
mov
mov
jmp
jle
pop
in
sbb
fdivr
inc
jl
into
push
and
idivb
loop
or
iret
and
pop
cmp
aam
pop
mov
cltd
xor
sub
iret
call
cmp
cmp
mov
adc
cmpsb
orb
mov
or
aam
aad
inc
rcrl
addr16
out
or
loop
mov
or
sbb
and
push
ljmp
pushf
inc
test
imul
aaa
dec
mov
and
push
test
jp
xor
jmp
out
cmp
test
push
fiadds
lcall
or
push
xor
and
xor
mov
add
repnz
in
fiaddl
jb
mov
dec
adc
jmp
popa
sahf
loop
and
adc
mov
push
pop
ja
mov
nop
xor
mov
insl
jle
jno
out
inc
cmp
lock
test
scas
lods
aas
jmp
add
fldt
je
mov
cld
out
pop
and
inc
out
stos
jecxz
movb
or
dec
pop
imul
inc
sbb
test
inc
icebp
imul
lock
push
mov
imul
sbb
and
inc
inc
lret
lret
in
lahf
mov
sbb
repz
lret
into
push
ret
jnp
xor
adc
pusha
insl
ficompl
adc
or
in
fldenv
sub
ja
pop
cmpsl
call
test
push
cmp
sbb
jno
mov
mov
inc
lods
shrb
ljmp
sub
aaa
rclb
and
rclb
lahf
cs
andl
push
std
jo
mov
insb
dec
out
pop
aas
jle
and
or
pop
inc
popf
and
cmp
inc
lds
icebp
push
dec
push
arpl
xchg
dec
aaa
into
fisubl
mov
jp
sbb
adc
loop
mov
lods
xorl
and
dec
dec
sub
adc
int3
push
mov
loop
das
or
pop
in
inc
or
enterw
je
jle
testl
xor
out
stc
stos
sbb
testb
sti
leave
inc
adc
out
lret
mov
push
int3
out
push
lea
stc
mov
mov
jo
out
mov
jg
jecxz
out
mov
aam
sub
sahf
cmpsl
sbb
int3
out
fisubs
push
sarl
xchg
jmp
sbb
sub
mov
sbb
mov
cmc
adc
cmpsl
push
cmp
loop
insb
movsl
je
gs
mov
call
call
loopne
fsubrl
dec
jle
and
testb
dec
add
cmp
lods
add
cs
mov
scas
jbe
mov
jno
mov
mov
inc
sub
add
mov
mov
addr16
push
mov
mov
add
sti
push
int
mov
lcall
mov
cmp
scas
fsubs
xchg
pop
inc
jmp
daa
dec
lods
mov
leave
out
jg
lods
lods
test
shl
fcos
pop
pushf
dec
mov
xor
xchg
mov
push
out
jle
xchg
in
sbb
mov
xor
imul
mov
andb
xchg
and
nop
jp
pop
sub
pop
mov
ljmp
iret
lret
dec
or
xchg
lods
aam
mov
bound
add
in
xlat
gs
and
jbe
push
loop
mov
lahf
or
outsl
push
loope
out
sbb
sbb
fistl
inc
adc
outsb
pop
out
inc
or
call
jne
fwait
mov
xchg
pop
mov
lcall
adc
inc
add
aam
pop
nop
jl
fidivl
das
and
cltd
add
jno
popa
push
inc
fmul
cmp
outsb
mov
cmp
rolw
jns
jns
outsb
push
out
ljmp
and
xor
stc
add
push
fisubrl
sti
cwtl
call
push
add
inc
pop
jo
pop
cmp
cmpl
inc
ss
cmp
insl
ret
inc
pushl
test
in
popa
scas
ja
imul
sub
enter
mov
cmpsl
lcall
inc
sbb
cwtl
xor
adc
cwtl
lret
into
lahf
aam
lea
cmp
ljmp
iret
inc
mov
clc
or
xchg
pop
adc
lods
shlb
stos
fdivrl
les
out
sbb
cmp
sbb
xchg
in
mov
scas
lahf
pop
jb
sub
cld
es
pop
and
dec
xchg
outsl
push
xlat
jp
push
mov
sti
xchg
dec
xchg
xor
shlb
sub
mov
andb
mov
dec
dec
push
fldt
call
xchg
scas
and
lock
cmp
pop
lods
icebp
mov
insb
jmp
lret
and
leave
inc
and
cmp
dec
aaa
or
dec
lahf
jmp
and
push
icebp
mov
mov
xchg
lods
push
stos
imul
mov
rcl
mov
add
sub
imul
leave
xchg
jg
sti
lods
jp
out
or
jp
mov
inc
sub
sub
pop
jle
xchg
jle
push
sahf
fisttps
clc
cld
xchg
insl
sub
iret
sbb
pop
and
int
pop
scas
lds
pop
out
cwtl
aad
lcall
inc
out
xchg
sbb
and
or
leave
push
inc
xchg
arpl
sbb
fst
mov
sti
arpl
push
arpl
pop
gs
in
fadds
pop
ret
arpl
testl
clc
cmp
mov
les
and
out
sub
aad
insb
je
inc
jge
add
mov
mov
cmp
cmp
cmp
aad
xor
loope
push
pop
push
fstl
lahf
ret
dec
mov
cmp
movsb
mov
ret
stc
push
imul
ficomps
mov
inc
gs
adc
add
jl
pop
inc
fisttpl
xchg
add
shlb
xchg
loop
jo
pop
sarb
mov
push
std
rorb
ljmp
in
hlt
fistps
push
mov
ljmp
jge
lock
imul
dec
aad
xor
test
lret
cmp
fmull
mov
fimuls
pusha
addb
add
cltd
div
mov
or
mov
stos
xor
mov
test
inc
mov
inc
and
lods
push
xor
fiaddl
into
rclb
xchg
cmpsb
out
or
aad
mov
or
adc
cld
and
inc
mov
call
xchg
cltd
outsb
dec
pop
sti
adc
mov
sti
pop
imul
out
mov
or
ret
es
mov
cmpsl
and
add
add
xchg
push
mov
xchg
pop
mov
cmp
inc
sub
xor
pop
js
inc
frstor
mov
mov
inc
cltd
mov
imulb
jae
dec
jnp
test
ljmp
lcall
mov
sub
adc
ret
popa
sub
jp
cltd
mov
mov
fldenv
pop
popa
cwtl
xchg
imul
repnz
fs
or
das
fildll
jns
push
cli
outsb
mov
sbb
dec
add
popf
dec
add
and
ret
into
jg
pop
mov
test
mov
xchg
jmp
inc
mov
hlt
and
mov
pop
outsb
enter
lea
addr16
stc
and
aad
into
lcall
pop
mov
das
arpl
in
push
mov
jne
idivb
sbb
sub
adc
dec
pop
adc
lea
mov
mov
cli
mov
mov
push
sbb
pop
sbb
sbbb
mov
imull
pop
mov
xor
std
push
testl
push
xor
xchg
pop
jne
scas
mov
aad
out
movsb
cmp
xor
lds
xchg
int
or
mov
nop
iret
push
mov
cld
pusha
mov
mov
jle
pop
sbb
sbb
mov
mov
in
pusha
lret
mov
xchg
jle
lods
divb
daa
addr16
pop
insl
sti
iret
add
hlt
jb
repz
dec
outsb
push
mov
mov
dec
scas
mulb
test
pop
call
xchg
mov
inc
add
ljmp
lcall
xchg
push
mov
sbb
xor
mov
cmp
fdiv
jge
adc
in
cmc
mov
lds
and
jbe
arpl
je
push
hlt
dec
rol
and
in
mov
aas
mov
or
mov
mov
pop
shlb
xor
pop
xchg
cltd
cli
mov
out
sbb
mov
in
test
lahf
xor
jle
inc
imull
je
out
lret
rcll
std
jbe
dec
shrb
imul
repz
rolb
sub
aam
add
inc
mov
pop
inc
cmp
mov
movsl
inc
pop
nop
jbe
imul
push
adc
mov
repz
or
ficompl
jmp
rcrl
adc
and
outsb
jge
outsb
and
add
and
cmp
shl
push
sbb
notl
push
shll
mov
dec
pusha
out
cli
inc
mov
dec
not
or
jl
pop
fwait
out
xor
bnd
stc
cmc
fistpl
es
mov
mov
cwtl
into
dec
stos
mov
jmp
push
xchg
popf
mov
daa
push
in
std
sti
jg
add
jecxz
mov
loop
inc
lods
dec
int
xchg
jbe
xor
call
pushf
mov
add
loop
or
mov
cmp
repnz
xchg
addl
push
xlat
shlb
pop
call
jle
add
cmp
jo
add
mov
pop
xor
add
pop
adc
pop
jne
inc
sbb
xchg
or
aam
fcoms
bound
fisubrl
leave
test
and
fidivrl
fcomip
cmp
inc
inc
push
lcall
mov
jecxz
sub
mov
sbb
cmpsl
mov
insl
mov
setne
movsl
fdivp
sarb
fsts
dec
outsl
push
mulb
out
or
push
fisttps
aas
aad
xchg
mov
scas
or
cwtl
mov
stc
lods
dec
push
and
addr16
add
pushf
cmpl
jle
or
stos
lret
xchg
sti
push
and
les
cli
lahf
movsb
mov
push
xchg
mov
lret
pusha
arpl
nop
mov
or
movsl
test
jo
iret
pop
lahf
lret
sbb
sbb
push
push
out
push
aam
jl
pop
call
pop
rcll
mov
fwait
push
jg
sbb
out
test
jge
jge
lds
cmpsb
cltd
push
pop
sub
add
sahf
xchg
mov
jno
cmp
idiv
xchg
sahf
sbb
fstps
mov
insb
push
fwait
ret
out
sub
popa
outsl
adc
fstpl
xchg
pushf
add
inc
cmpsl
mov
pop
xchg
or
add
clc
test
push
or
call
push
mov
in
jbe
mov
scas
jle
ljmp
dec
adc
mov
rcr
pop
fsubp
punpckhwd
movsl
dec
xor
lahf
leave
xchg
lock
rclb
pop
sub
nop
std
pop
mov
xor
adc
aas
add
fisubrl
push
inc
sahf
loop
jmp
fiaddl
test
fistps
stos
scas
lahf
sub
stc
push
test
adc
cmp
pop
mov
sti
mov
cli
and
push
mov
ss
das
rorl
dec
aam
lods
and
inc
enter
adcl
mov
or
in
in
sbb
outsb
or
div
sahf
mov
mov
es
cwtl
shll
sahf
pop
test
jo
sahf
pushf
sbb
incb
dec
inc
rol
xlat
loop
data16
and
and
mov
jns
repnz
repnz
sub
leave
iret
mov
stos
xor
jne
mov
scas
in
dec
mov
push
out
fdivs
pop
imul
dec
or
fistps
dec
nop
cltd
ret
and
addr16
hlt
and
mov
call
add
sub
cmp
out
out
cld
or
aas
sbb
loopne
dec
adc
lods
cmp
out
movntq
jmp
xor
repz
sub
or
sub
out
lds
cmp
dec
int
mov
lret
push
lods
mov
jb
inc
xchg
scas
fs
and
lcall
mov
rol
mov
js
inc
subb
push
and
adc
into
lret
xor
repnz
dec
inc
push
jo
push
outsb
fwait
enter
push
rcrl
std
fwait
or
shrb
jne
fiadds
insb
or
pop
mov
cmpsl
int
jle
sbbb
push
popa
jp
sub
pop
xchg
dec
lea
popf
adc
push
cli
hlt
lret
into
fsubrs
loop
inc
out
dec
repnz
jmp
xor
and
sub
fstpt
stos
adc
cmp
push
inc
xchg
sub
mov
ljmp
sbb
cmp
sbb
repnz
pop
lea
cltd
cmpsl
push
clc
adc
bound
mov
into
scas
cld
ja
scas
sbb
mov
mov
stos
pop
fsubl
subl
insb
arpl
mov
arpl
push
mov
jmp
jge
inc
adc
mov
push
add
pop
jno
stos
mov
adc
ret
dec
inc
cmpsl
xchg
mov
dec
or
pop
pop
mov
or
push
clc
push
pusha
mov
fsubrl
mov
adc
xor
pop
pusha
repnz
loopne
bound
rorl
sub
cwtl
dec
test
and
subl
mov
add
popf
adc
shll
sub
call
test
cmp
or
push
hlt
mov
out
mov
sub
fs
cs
and
xor
jmp
adc
or
ljmp
das
nop
xchg
dec
popa
jge
cwtl
xor
aaa
sti
out
frstor
pop
lret
xor
sub
jns
push
jae
or
movsl
add
imul
sahf
scas
add
cmp
test
scas
or
xor
dec
ret
cmp
rcll
jo
inc
pop
popa
dec
das
je
mov
adc
call
sbb
mov
fld
sbb
sbb
in
push
and
dec
add
mov
popf
sub
sti
cs
add
call
bound
roll
sahf
pop
and
dec
pop
cmp
gs
ja
test
inc
call
pop
mov
inc
add
aam
loop
stos
ds
ret
mov
imul
inc
push
push
movsl
mov
inc
lret
ss
inc
or
mov
add
ljmp
call
fistpll
adc
dec
mov
in
inc
insb
or
arpl
mov
das
add
movsb
test
pop
std
pop
insb
inc
mov
js
inc
movsl
xlat
scas
out
movsb
push
add
stos
inc
push
lock
imul
cld
lcall
mov
dec
pop
std
call
insl
jb
test
xchg
scas
pop
cmp
pushf
cs
dec
mov
das
cmp
or
lods
in
fists
fiaddl
adc
add
cmp
jmp
jb
mov
jnp
jmp
and
sbb
or
add
and
out
cmpsl
sbb
mov
jbe
out
lret
movsl
xchg
inc
leave
cmp
out
mov
mov
jns
inc
xor
xchg
ljmp
and
test
push
sub
dec
into
lea
mov
je
std
push
insl
push
push
jns
lahf
sbb
testb
lcall
pusha
lods
call
popl
outsb
mov
mov
imul
pop
loope
mov
mov
cmp
inc
push
push
push
add
mov
data16
dec
sub
push
adc
outsb
xor
or
cmp
movsl
and
sti
jnp
lret
data16
test
sbb
jo
test
jl
lret
inc
cmp
cmp
iret
pop
lods
rolb
mov
mov
jne
mov
aam
scas
repnz
sti
push
int3
mov
xchg
xorb
andb
lods
pop
stos
or
sbb
les
jnp
arpl
fidivl
mov
pushf
mov
call
fsubs
out
jg
and
sti
sub
clc
mov
push
lret
jae
arpl
sub
pop
imul
xchg
xchg
into
es
aaa
repnz
lcall
sahf
ret
pop
add
pushf
xor
lock
aam
jmp
lahf
push
aam
mov
mov
les
pop
cmp
fsubrl
adc
lds
or
imul
pop
or
jmp
cltd
jmp
fistl
mov
xchg
adc
add
mov
jl
test
shll
cmp
mov
xchg
lret
call
shlb
inc
cmp
dec
test
mov
lds
daa
mov
mov
xor
repnz
in
sbbb
cmp
push
or
mov
adc
cmp
test
xor
loop
mov
mov
lods
pusha
mov
jb
scas
outsl
sub
rcrb
push
pop
xor
fxch
in
iret
sbb
je
sub
bound
and
xchg
push
ret
xorb
mov
mov
or
pop
je
fistpl
xchg
ds
out
into
inc
das
rcrl
stc
xchg
mov
je
bound
pushf
push
lret
js
pop
jge
push
dec
cs
jnp
in
xchg
icebp
dec
int3
adcl
je
sti
aaa
sti
repnz
pusha
add
push
pushl
xchg
sub
add
lcall
pusha
test
mov
add
in
rol
cmpb
in
dec
paddusb
outsb
shlb
add
sbb
xor
and
jb
sub
fs
sbb
dec
xor
mov
out
fwait
sub
insb
hlt
popa
in
js
jne
cmc
das
sbb
xchg
sahf
das
add
loop
jg
out
adc
movsl
or
and
mov
or
into
jp
addr16
into
xor
xchg
push
mov
jp
aam
ss
mov
into
jb
sbb
mov
adcl
inc
mov
sbb
cmp
cwtl
and
sbb
repnz
bound
jno
add
xchg
cmp
adc
pop
jp
or
xchg
mov
ds
dec
sbb
inc
cmp
cltd
jno
out
jae
outsl
in
jb
fidivrs
mov
cld
xchg
cltd
xchg
negb
xchg
jle
add
in
into
stc
sti
cmpl
lahf
ljmp
push
xchg
out
pop
mov
outsl
mov
xchg
pop
mov
jns
lods
inc
adc
roll
jb
sbb
cli
push
adc
jle
pop
int
data16
xchg
mov
cmp
xchg
lcall
jb
stos
shl
xlat
lods
mov
movb
mov
and
out
rolb
in
imul
and
idivl
pop
cmp
mov
and
pop
aaa
call
dec
ljmp
aaa
test
pushf
addr16
fidivrl
sti
lcall
xchg
mov
das
lds
lock
pushf
adc
mov
pop
dec
xchg
clc
out
cmpsb
dec
out
or
sti
push
jp
cli
imul
xchg
cmpl
pushf
loope
imul
cltd
jns
ret
sub
subb
xor
sarb
and
dec
push
cmp
or
push
cwtl
mov
mov
jae
mov
mov
ds
add
sbb
pop
add
mov
xchg
sub
arpl
cltd
adc
or
xor
aaa
outsl
mov
mov
mov
cld
stos
mov
cwtl
sbb
rol
movsb
enter
dec
fimull
xchg
in
in
sbb
pop
lock
in
fs
sbb
sub
mov
cmp
push
fiaddl
sbb
mov
jno
push
stos
cmp
sub
sar
ror
loopne
sarb
mov
jb
mov
sbbb
test
push
test
pop
stc
pop
xchg
and
scas
std
pop
icebp
std
mov
enter
jp
lock
push
aam
pop
mov
jle
and
int3
xor
stc
scas
aaa
inc
cmp
ds
cmp
inc
sarl
fadds
push
xchg
adcl
mov
outsl
pusha
out
sbb
loopne
jb
inc
sbb
inc
pop
fldcw
add
xchg
insl
xor
xorb
cwtl
cmp
adc
les
xor
mov
add
sahf
and
push
loopne
lea
push
mull
loopne
add
adc
mov
std
into
lods
movsb
sub
sbb
push
push
notl
pop
in
push
ja
sub
dec
mov
into
test
arpl
adc
out
test
ror
mov
dec
jne
loope
lret
sbb
out
in
hlt
cltd
fwait
xlat
movsb
inc
and
or
mov
addl
xor
and
sbb
dec
sub
int
popa
pushf
sbb
aaa
jbe
inc
mov
or
in
xchg
flds
ret
mov
sub
aas
dec
mov
dec
add
xlat
mov
dec
sub
mov
shll
mul
dec
scas
and
in
mov
xchg
in
ret
mov
lcall
inc
sub
mov
cmp
stos
adc
sbb
outsl
sub
repnz
ds
cltd
adc
cld
cmp
or
pop
mov
leave
dec
mov
dec
shll
mov
sarl
fists
xchg
aaa
ret
mov
fisubl
or
xlat
dec
sbb
xchg
rcll
mov
jle
push
leave
call
cli
mov
and
dec
outsl
jb
pop
mov
inc
or
adc
and
xchg
lods
arpl
pop
push
repz
dec
dec
and
pop
clc
cmpsb
sbb
add
fadd
cltd
int
stos
pop
xlat
aas
pop
cli
in
mov
jg
adc
mov
fstps
leave
insb
cmp
and
lock
hlt
frstor
pop
rolb
add
jb
int
or
sbb
das
or
clc
mov
test
std
imul
lods
std
push
scas
inc
jmp
mov
lods
dec
fs
xchg
stos
and
aaa
mov
dec
dec
into
xchg
inc
add
movsb
sbb
ficoms
xchg
int3
out
xor
test
adc
stc
cmp
inc
mov
and
pop
cmp
push
lea
out
stos
int
sub
jne
not
or
mov
add
cmp
sbb
push
cmp
sahf
iret
outsb
mov
orl
cmpsl
cmpsl
faddl
xor
cmp
inc
js
and
lock
jge
jmp
inc
test
xor
cmc
ljmp
out
aas
jne
fsubs
xor
ss
push
ret
cltd
jns
jg
cmp
jbe
pop
jg
cmc
lds
gs
cmp
and
aaa
sub
dec
sub
adc
fstps
xor
test
mov
sub
inc
jns
cmpsb
clc
pop
stc
sbb
lea
out
sbb
mov
lret
loope
and
push
inc
int
insl
es
sahf
mov
sbb
push
sub
outsl
pop
mov
shr
imul
fsubrs
mov
push
mov
add
dec
add
out
mov
push
lods
and
mov
sti
outsl
repnz
push
mov
lds
sbb
push
pop
pop
cmpsl
hlt
scas
sbb
lcall
push
shr
adc
adc
loop
fstpt
sbb
push
jl
into
pop
or
scas
add
push
sub
int3
pop
sub
jp
push
pusha
adc
cmpsl
aam
mov
rcll
leave
pop
mov
mov
sahf
xor
popf
mov
imul
sub
stc
mov
mov
inc
pop
sub
int
inc
es
dec
push
mov
pop
mov
in
dec
jl
lea
lea
sub
mov
pusha
popa
addr16
push
and
test
push
iret
cmp
lret
jecxz
add
inc
sbb
and
push
adc
pop
sub
icebp
xchg
mov
stc
pushl
mov
push
jmp
js
push
pop
loopne
lea
pusha
pop
pusha
outsb
push
or
mov
pop
mov
push
xchg
mov
lahf
mov
or
mov
or
mov
pop
ret
mov
mov
enter
mov
in
sbb
mov
sub
lods
xchg
sbb
nop
in
movsb
fistps
inc
js
inc
cmp
or
push
or
in
sbb
push
add
int3
movsb
mov
in
enter
mov
nop
xor
aam
mov
dec
jp
sbb
ja
mov
sbb
inc
mov
lcall
das
imul
insl
data16
or
sbb
xchg
adc
fsubrs
fcom
loopne
mov
loope
sbb
cli
je
pop
scas
imul
ss
in
stos
sarb
das
xchg
mov
adc
dec
sub
mov
rorl
mov
mov
jl
xor
scas
testl
rorl
pop
stos
into
inc
inc
inc
cmp
dec
cmpsb
sbb
cmp
xor
inc
roll
push
ja
mov
jo
add
inc
add
mov
imul
or
xor
lods
or
sub
shrb
inc
mov
mov
mov
sub
adc
mov
lret
cwtl
or
sbb
xor
rorl
push
cmp
push
jbe
adcb
jae
idivl
pop
and
mov
es
push
iret
pop
push
les
dec
mov
jl
cwtl
add
sub
lret
xchg
jp
dec
mov
sbb
mov
mov
push
rolb
shl
jle
push
insb
repnz
pushf
jg
mov
adc
adc
xorb
lahf
lret
push
push
stos
sub
mov
out
leave
cmp
xor
sbb
dec
and
shll
addr16
inc
cltd
in
jns
xchg
fwait
je
sub
jl
int
rclb
jno
mov
cmpsb
out
jge
adc
hlt
sub
faddl
sub
jg
ljmp
cmpsb
or
cld
aas
aas
nop
add
daa
push
pusha
int
push
dec
mov
pop
add
push
xchg
cmp
in
add
into
nop
je
fidivs
or
insl
inc
or
clc
pop
sbb
and
xor
mov
sbb
mov
dec
outsl
clc
push
cmc
fidivrs
jecxz
fstps
sub
outsl
push
xor
add
jb
inc
sbb
mov
je
xor
jle
xor
ss
mov
jnp
and
rcrb
jle
mov
sahf
fmulp
in
stos
inc
add
bound
in
stos
fsubrs
clc
jp
sarb
in
sub
cmp
int
imulb
leave
mov
pop
es
xor
or
gs
sub
sub
dec
mov
pushf
and
pop
add
and
inc
pop
dec
rclb
orl
fdivs
fs
xor
int3
das
cmp
push
dec
ljmp
and
add
dec
xchg
imul
and
stos
push
in
mov
and
mov
dec
mov
push
lea
xchg
sbb
sbb
mov
dec
in
or
gs
mov
sub
inc
push
mov
icebp
leave
icebp
ret
jg
mov
xchg
in
push
lret
into
out
mov
dec
sub
mov
jge
push
pop
imul
mov
pop
mov
mov
ret
int3
or
sbb
add
dec
push
mov
addb
push
lods
pop
adc
repz
or
gs
jo
cmp
pusha
or
xchg
inc
or
mov
test
dec
cld
fisttpll
lret
scas
xor
lods
xchg
call
push
inc
xorl
lock
jb
mov
popf
push
mov
adc
xor
mov
mov
jno
jp
xchg
cmpsb
out
pop
mov
pushw
sub
lock
xchg
daa
aaa
dec
jecxz
add
int3
pop
xchg
lods
aaa
std
ss
pop
xor
ss
subl
les
jl
insl
loopne
or
xor
xor
mov
mov
clc
and
cmpsl
mov
add
jno
adc
test
and
outsb
pop
clc
xor
ds
add
mov
fistps
mov
cli
cmpsl
xor
sahf
inc
leave
jno
cmp
orl
out
pop
sbb
push
cld
cmpsl
negb
dec
fwait
test
lea
push
out
mov
add
shl
test
inc
pop
icebp
jge
rorb
fisubs
sub
lahf
ror
dec
push
pop
stos
mov
fmul
adc
jo
aad
nop
sbb
cmp
push
add
jno
insb
jnp
out
mov
push
sub
inc
or
repnz
xchg
xchg
push
fdiv
scas
test
sbb
dec
fldl
rol
adcl
or
loope
cmp
xrelease
adc
call
outsl
mov
inc
imul
xchg
mov
test
sbb
sub
xor
push
jne
mov
lahf
jl
fidivrs
push
imul
sbb
sbb
push
arpl
sbbl
xor
push
mov
mov
ret
cmp
lods
divb
out
xchg
in
outsl
mov
dec
lahf
and
add
roll
aaa
inc
movl
imul
add
cld
fstl
pop
xchg
push
mov
fsubrl
sbb
mov
cwtl
jbe
lods
xlat
inc
lret
mov
clc
sti
xchg
sub
test
and
mov
adc
fisubs
xor
xor
sub
mov
or
pop
cmp
xor
mov
mov
push
and
lods
popf
mov
adc
dec
movsb
and
bound
add
adc
inc
fdivs
repnz
out
clc
repnz
and
fs
add
test
xlat
js
xchg
mov
push
je
add
out
xchg
xchg
push
or
cld
mov
das
loopne
cmp
xchg
jbe
jb
mov
or
xchg
int3
clc
or
mov
or
jmp
cmp
or
test
mov
repz
jge
lds
inc
pop
cmp
jecxz
jb
inc
cmp
cmc
cltd
loop
in
scas
imul
mov
lods
mov
xchg
fcoms
repz
sarb
fistps
inc
ret
xchg
insl
cmp
mull
jno
leave
xor
xchg
movsb
dec
push
mov
adc
pop
jno
cmp
nop
jge
mul
cwtl
ret
fwait
ds
jle
xchg
cli
jp
popa
movsb
repnz
or
mov
xchg
lret
xor
loop
or
xor
out
push
push
pop
jge
dec
mov
pop
inc
loopne
lods
mov
or
dec
pop
mov
xor
lahf
mov
xchg
pop
loopne
call
cs
mov
push
cmpsb
test
in
jb
add
shll
es
adc
mov
sub
xchg
push
fs
clc
cmc
shlb
rol
cmpsl
or
jecxz
sbb
stos
jne
mov
stos
dec
and
inc
cltd
sub
test
incb
sub
inc
jmp
addl
mov
or
sbb
test
cld
sub
fcomip
mov
loop
sbb
mov
push
push
insl
inc
sbb
sub
sub
out
push
dec
test
lock
fildl
mov
ret
int3
dec
mov
repz
test
adc
mov
cmpsb
mov
and
dec
xchg
push
clc
add
aam
in
aas
aas
xor
lds
pushf
push
rcrb
loopne
cmpb
dec
cmpsb
mov
jno
lea
adc
mov
fmull
js
sub
lock
sbbb
xor
pop
ljmp
clc
std
pop
push
outsl
and
int
bound
fs
mov
fwait
sbb
sar
imul
mov
test
sbb
or
jns
sub
popl
rcll
dec
mov
and
mov
or
pop
sbb
xchg
xor
jbe
lahf
arpl
xchg
fldt
sub
push
cmp
pushf
sub
pop
imul
jecxz
and
int
js
jbe
inc
cmpsb
xor
pop
ret
aaa
push
sbb
jl
push
push
mov
push
into
mov
inc
cmp
shrb
mov
jns
popf
pusha
scas
and
xlat
arpl
fimull
les
lahf
pushf
loopne,pn
test
cmp
loopne
stc
and
lret
fcmovnbe
adc
mov
pop
mov
addr16
data16
mov
mov
ds
shlb
jo
shrb
jge
int3
or
xlat
mov
cmp
lret
rcll
popf
mov
xchg
in
mov
loopne
repz
inc
rcr
ss
lds
mov
lds
in
into
loopne
adc
out
in
pusha
sub
fcoml
mov
inc
xchg
xor
out
pop
and
cmpsb
pop
dec
stos
into
sub
aam
sbb
push
jo
cmp
mov
ljmp
push
mov
test
pop
jle
inc
inc
shlb
in
outsb
in
lods
rorb
or
xorl
dec
jns
sub
jo
mov
fcomi
je
fsubrp
sbb
int3
add
ds
shll
and
icebp
jecxz
insl
add
scas
or
adc
add
sub
je
imul
cld
push
pop
cld
insb
daa
je
dec
ss
xchg
sbb
cmp
dec
inc
xchg
inc
mov
cmp
mov
test
ja
scas
rolb
insb
and
les
xchg
jle
repz
fs
loopne
xor
xchg
jo
nop
adc
in
test
pop
shl
push
sbb
xchg
mov
dec
push
xchg
stos
push
out
xlat
rorb
pop
pushf
cwtl
fadd
daa
aas
jbe
push
dec
mov
out
adc
add
add
push
filds
mov
stc
jns
xchg
dec
aaa
pop
xchg
jae
hlt
fdivs
out
inc
fcomp
psubsw
lds
mov
iret
outsb
jb
aas
aam
xor
push
add
hlt
mov
cmpsb
insl
out
stos
pop
dec
mov
jge
into
nop
pop
into
sbb
push
pop
jle
rcrb
dec
inc
cmp
cwtl
cmp
adc
pop
ret
mov
out
cmp
cmp
loope
cltd
cmp
dec
mov
or
push
aaa
jbe
push
int
ret
aad
pop
push
lahf
push
adcb
jle
jne
mov
fsubs
fildll
movsb
scas
imul
sbb
fwait
lcall
xchg
daa
xor
ljmp
mov
pop
pop
add
das
popa
jmp
xor
gs
cmpsb
push
adc
or
add
mov
xchg
leave
pusha
scas
into
push
dec
xchg
outsb
loop
mov
or
push
xchg
cld
imul
xor
xchg
add
scas
daa
mov
jmp
test
in
fldenv
lahf
movsb
push
sub
pop
lcall
in
ja
sar
push
mov
sub
jb
adc
dec
jg
lods
test
lods
pushf
test
jbe
nop
repz
push
addr16
inc
icebp
in
xchg
pop
push
aam
jp
outsl
push
adc
pop
push
jb
lret
and
push
sub
shlb
aas
daa
into
dec
mov
test
and
lcall
push
nop
lahf
inc
add
xlat
xor
mov
add
mov
ret
in
jae
pop
imul
stos
stos
cli
setae
xchg
call
pushf
negl
cmc
cmp
mov
push
inc
adc
mov
std
jecxz
enter
fldl
sarl
enter
sarl
pop
add
lock
lock
cld
call
lods
sbb
outsb
and
pop
repnz
sbb
xor
aas
mov
pop
ret
xor
add
cmp
dec
mov
dec
sbbb
outsb
shr
sub
sti
ret
in
and
xor
xchg
push
inc
or
sbb
inc
add
adc
and
call
call
sub
sub
xor
insb
xor
fsin
add
or
dec
push
jl
insl
add
xor
push
ret
mov
dec
bound
lock
mov
cltd
sbb
xchg
in
cmc
movsb
mov
cmp
push
cmp
mov
fisubs
ljmp
fstp
fisubs
push
pavgw
xchg
insb
aas
mov
pop
mov
test
push
call
inc
jo
pop
pusha
pop
pop
pop
mov
cmp
sub
or
add
enter
sahf
std
pushf
sub
sahf
mov
bnd
jge
subb
inc
xchg
js
cltd
jl
clc
sub
cmp
jge
sbb
inc
orl
out
inc
pop
imull
inc
adc
add
cmp
test
and
mov
fsubrp
rclb
roll
test
fcmovb
inc
xor
lods
push
inc
mov
and
inc
push
jae
popa
fcmove
push
jnp
mov
repnz
jle
xorl
inc
stos
inc
idivl
pop
jmp
cmc
add
cwtl
or
push
fnstsw
cmp
mov
or
xchg
cmpsl
loopne
jns
sti
loope,pt
or
adc
xchg
iret
aas
xor
fs
lods
push
dec
jmp
adc
out
movsb
int
scas
inc
test
pop
mov
into
xchg
xor
push
fstps
mov
pop
push
mov
add
jne
inc
test
bound
push
mov
mov
popa
or
jbe
lea
mov
pop
movsb
adc
or
mov
fs
push
add
je
push
stos
cs
mov
jg
fwait
mov
cmp
out
imul
mov
xor
sbb
push
push
loope
push
dec
sti
xor
mov
inc
aas
sbb
in
or
scas
lea
push
fldcw
sub
dec
rolb
push
dec
and
fildl
cmpsl
mov
int
jecxz
fdiv
mov
sub
mov
pop
pop
xchg
xlat
into
dec
sub
in
mov
std
dec
mov
jecxz
andl
xchg
adc
je
fisubrl
jnp
call
fsubl
pusha
dec
sbb
sarl
aam
dec
xchg
add
pop
fldenv
ret
add
inc
cwtl
mov
leave
xchg
pop
xchg
sub
xchg
iret
push
push
inc
sub
mov
lcall
mov
adc
inc
jb,pn
ret
add
inc
inc
or
out
repz
jne
and
mov
clc
idivl
pop
push
test
jl
icebp
shlb
add
mov
mov
insb
xor
jle
push
cli
and
dec
cmp
mov
cmp
or
scas
enter
xor
movsl
lock
and
jbe
cmp
fwait
stos
into
test
mov
mov
stos
addr16
add
mov
xchg
xor
xchg
mov
push
jle
xchg
mov
inc
sbb
push
cmpsb
mov
mov
cld
push
sub
add
push
xchg
mov
inc
es
incb
inc
sbb
out
xor
pop
sbb
add
mov
dec
cs
popf
out
int3
popf
pusha
inc
prefetch
or
inc
out
inc
and
xchg
xlat
jecxz
lea
out
jns
pop
or
movq
push
inc
push
inc
inc
sbb
mov
in
push
int3
dec
addl
test
cmpsl
add
jne
loop
arpl
outsb
push
outsl
jbe
xor
add
jmp
or
fisubrs
jl
test
push
xchg
lcall
mov
fdivl
or
mov
sti
add
mov
pop
hlt
xchg
jne
out
mov
insb
push
sbb
mov
add
pop
movsb
sbb
xchg
iret
mov
loopne
fwait
notb
insb
xor
xorl
push
outsl
test
ret
test
enter
mov
daa
aaa
rol
ljmp
push
cmpsl
xchg
das
inc
aam
leave
cli
push
xor
outsb
ret
xor
mov
cwtl
insb
and
je
mov
jmp
mov
aam
ret
fadds
lock
dec
aas
mov
out
lret
mov
lock
rcrl
sub
add
scas
mov
stos
scas
and
cmpb
stc
test
and
iret
inc
hlt
pushl
out
stc
and
sbb
pop
mov
inc
cmp
sbb
lahf
xor
dec
xor
adc
adc
dec
loope
aas
outsb
jp
push
ret
sub
shll
xchg
mov
mov
frstor
hlt
dec
jnp
lods
test
sti
inc
repz
mov
sbb
jb
jmp
or
outsl
mov
jge
ja
or
in
pop
test
pop
pop
stc
ja
xor
jge
inc
jbe
push
cld
insb
jl
movsl
jle
call
cwtl
clc
mov
mov
xor
test
pop
sbb
mov
adc
and
jns
cwtl
mov
push
dec
cmp
push
testl
aaa
ss
mov
imul
adc
xchg
pusha
imul
dec
sub
pop
pop
xor
divl
xlat
adc
and
and
test
imul
or
out
in
imul
ftst
stos
popa
subb
cmp
xchg
ret
adc
dec
bound
int
dec
and
add
stos
popf
sub
sub
dec
sahf
inc
in
addr16
stos
push
push
jo
rclb
xchg
test
mulps
cwtl
sub
jns
loopne
out
xchg
mov
lahf
imul
rorl
sahf
rcrb
test
mov
add
add
imul
xchg
add
test
or
mov
fnstcw
ja
sbb
jno
pop
sti
fwait
mov
adc
fdivrl
addb
xor
rol
pop
rcl
nop
inc
roll
jb
sbbb
ret
xchg
lcall
xor
icebp
pop
cmc
pop
jb
xchg
mov
aaa
jbe
pushf
imul
and
mov
lods
and
mov
pop
and
or
pop
sbb
dec
inc
dec
sbb
addr16
fucomip
ja
jl
daa
shrb
fwait
scas
loopne
bnd
dec
je
add
inc
enter
jbe
mov
mov
mov
in
sti
dec
xor
cltd
pop
sub
sbb
and
bound
pop
decb
inc
push
sbb
mov
scas
and
hlt
lret
int
sbb
test
inc
sub
push
xchg
jge
int3
pop
ficoms
aaa
in
fwait
mov
int
and
xor
mov
dec
das
test
inc
mov
push
mov
cmp
aam
leave
adc
mov
test
imul
and
subb
pop
xchg
test
lea
jo
jl
mov
sahf
sub
out
fmull
cld
cmp
cmp
inc
je
dec
mov
notl
addr16
in
notl
add
loope
leave
add
in
outsl
jne
adc
daa
sbb
inc
lds
mov
outsl
iret
jmp
sbb
sub
cmp
adc
addr16
sbbl
imul
call
pop
adc
pop
shlb
pop
mov
xchg
pop
fmulp
lods
loop
push
xchg
test
lods
add
ja
mov
pop
jmp
nop
sbb
cli
imul
push
ss
sahf
pop
and
out
jns
shl
inc
cmc
dec
xchg
mov
or
aas
insb
sub
xchg
sbb
push
xor
mov
sbb
add
gs
comiss
inc
push
xor
sub
aad
cmp
pop
ss
and
pop
push
ss
sub
xchg
scas
cmp
jl
outsl
jge
mov
scas
movsl
fnstenv
mov
cli
push
inc
and
stos
in
pop
or
xchg
mov
mov
xchg
mov
cmp
adc
sub
mov
pop
cmp
mov
test
in
in
in
and
out
jecxz
pop
in
mov
pusha
ja
mov
cmp
test
ljmp
mov
dec
cs
gs
std
std
es
lds
subl
aas
cmpsb
loope
cmp
mov
imul
push
sbbl
rorl
inc
pop
loope
jae
xor
dec
and
mov
fcmovnbe
cmp
pop
cmp
test
jnp
or
mov
dec
pop
sbb
out
aam
jl
add
sbb
dec
fcomp
dec
nop
in
add
add
leave
daa
sub
jge
mov
jns
jnp
addl
fisttpl
add
std
sbb
add
iret
adc
dec
ror
into
mov
push
adc
xchg
lock
mov
xor
in
and
inc
int
mov
sub
into
pop
testb
cmp
and
iret
hlt
or
les
arpl
insb
mov
lret
xchg
ret
or
imul
repnz
mov
or
sti
loopne
loope
xor
fistl
orl
pop
cmp
xchg
add
aaa
or
xchg
data16
stc
xchg
jg
ss
incb
jmp
fidivl
addr16
das
or
jl
inc
sbb
or
add
xchg
mov
pop
aad
inc
sub
ffree
ret
and
sub
sub
stc
and
xor
dec
pop
ret
cmp
scas
inc
mov
mov
sbb
and
in
in
fwait
int3
add
cmp
dec
addb
out
mov
dec
jecxz
inc
jl
xchg
arpl
xor
ss
jle
and
fyl2x
out
arpl
int
repz
aam
push
mov
das
loope
jmp
addl
mov
pop
fidivl
test
and
mov
lea
fistl
add
add
imul
repz
test
pop
pop
rorb
cmp
dec
out
add
and
mov
fcmovnbe
cs
pop
test
sub
in
jecxz
xchg
iret
orl
add
push
rorl
mov
es
psubq
add
or
scas
subb
add
push
mov
imul
sbb
insl
rorl
iret
popf
xchg
mov
das
adcb
das
dec
in
mov
pop
outsl
mov
test
adcl
jb
je
and
adc
push
movsb
insl
push
ja
aas
movsb
je
xchg
pop
jmp
dec
sahf
popf
das
and
mov
sub
or
jnp
mov
test
mov
push
imul
subb
jl
into
mov
pop
dec
out
mov
push
in
test
inc
adc
fcoms
std
paddusb
push
stc
and
sahf
mov
push
xchg
inc
andl
mov
iret
jp
lds
iret
cmpsb
std
outsl
sbb
arpl
xor
and
cmp
fcoms
mov
dec
inc
xchg
jbe
sti
mov
or
push
add
call
mov
mov
xor
lret
inc
das
movsl
cmc
inc
and
mov
loope
dec
xchg
mov
mov
cmp
cmp
xchg
xor
aam
cmp
adc
inc
adc
test
out
shll
mov
rol
push
dec
jl
mov
and
xchg
pop
imul
adc
loop
stos
cmp
lret
dec
and
dec
imul
cltd
loope
and
pop
sarb
adc
aaa
cmpsb
scas
jns
out
mov
das
aam
pop
rcrb
enter
adc
je
and
and
repnz
into
dec
mov
push
xchg
cmp
inc
pop
in
push
repnz
sub
popf
loope
cmpsl
jl
push
jb
dec
ja
mov
orb
pop
xor
inc
xor
sbb
les
mov
ret
and
mov
mov
sbb
xor
shlb
into
in
inc
daa
pop
bound
pop
scas
cmpsb
dec
xchg
loopne
xor
cwtl
cltd
mov
in
imul
std
jo
jo
enter
leave
fsubp
mov
jl
push
push
add
sub
xchg
jecxz
ja
sbb
lods
shrb
or
inc
push
loope
jo
sub
mov
test
jg
jae
or
sbb
dec
mov
das
lods
test
fmull
rcrb
mov
aam
inc
mov
ss
ja
xlat
popa
mov
pop
jae
or
xor
push
btc
xlat
mov
loop
push
dec
push
sub
xchg
pop
addl
das
lret
adc
cmp
jo
movsb
mov
in
dec
clc
ret
dec
outsl
push
inc
sub
call
jo
sub
andb
add
cmpsb
mov
inc
pop
fildl
mov
das
or
stos
mov
adc
inc
adc
fnsave
xor
or
mov
inc
pop
mov
inc
in
pop
insb
pop
dec
insl
fucomip
xor
pop
push
adc
pop
lods
push
add
rorb
js
out
fcmovb
pop
inc
push
sbb
mov
lds
or
aas
popf
push
leave
dec
pop
addr16
mov
pop
pushf
xor
dec
pop
sbb
xor
cmp
mov
stos
notb
lds
jge
sbb
xor
mov
inc
pop
insb
sti
sub
jno
aaa
mov
ja
cmp
sub
bound
mov
add
pop
push
stos
data16
es
mov
mov
in
xchg
stc
pop
or
mov
roll
push
push
in
mov
push
repnz
dec
daa
jge
xor
out
scas
or
aam
jge
pop
push
mov
sub
ficoms
mov
outsb
jbe
dec
sbb
lods
xor
push
push
jecxz
stc
imul
xor
and
sbb
adc
inc
xor
out
bound
out
push
fldcw
sbb
filds
jg
test
insl
pop
cmp
xchg
mov
cmp
js
ss
sbb
pop
inc
lock
dec
inc
cmp
mov
fildll
sti
ret
pop
je
add
dec
sarl
pop
add
push
xor
push
and
pop
add
outsb
and
xor
xchg
jp
fwait
fwait
sahf
pop
cmp
ret
repz
mov
fdivrs
int
pushf
aaa
adc
xchg
mull
mov
loope
daa
mov
xor
clc
addr16
jg
mov
push
or
ror
adc
movsl
jnp
imul
dec
repz
fwait
push
test
das
add
mov
stc
sub
sbbl
jge
mov
push
push
pop
mov
adc
hlt
out
cli
scas
push
mov
fs
and
cmp
xchg
mov
adc
push
leave
movsb
call
mov
fisubrl
xor
or
pop
test
outsb
rorb
push
push
jp
pop
pop
mov
nop
scas
xorl
inc
push
jge
inc
rorb
xor
and
dec
xchg
inc
in
pop
mov
aam
test
mov
popl
xor
notb
fwait
add
dec
sub
iret
cmpsb
adc
sub
sbb
or
mov
cld
adc
and
mov
mov
test
mov
std
rclb
xor
sub
test
xor
bound
mov
fwait
mov
inc
fcomps
mov
daa
or
xchg
insl
dec
leave
and
cmpb
popa
and
in
cld
push
shll
and
adc
daa
addl
icebp
out
sbb
enter
xor
bound
sbb
dec
xchg
leave
cmpsb
and
pop
ret
sub
test
aaa
movb
nop
mov
mov
out
xor
jl
jmp
pop
into
bound
xchg
pop
shr
push
cmp
jle
jno
shll
sarl
fsubrl
dec
dec
outsb
std
stc
mov
or
stos
push
add
push
je
fwait
jg
sbb
mov
pop
ficompl
push
out
inc
xchg
inc
popf
movsb
insb
sub
cs
jmp
sbb
inc
orl
leave
ficoml
and
mov
repz
es
sbb
sbb
adc
or
flds
cmp
adc
jns
push
fcomi
orb
xchg
adc
test
sub
mov
mov
fisubl
sub
add
xchg
in
jne
ljmp
cli
sbb
pusha
ja
stos
jae
cmpsb
add
int
and
push
xchg
mov
ret
fcmovb
dec
and
pusha
insl
sbb
dec
push
cltd
dec
dec
cli
icebp
push
or
pop
stos
adc
loop
jnp
jmp
scas
push
mov
mov
mov
out
imull
js
jp
daa
jmp
mov
fisttpll
sub
xor
fstl
test
cmp
cmc
push
mov
icebp
dec
mov
lret
or
sub
push
into
pop
shrl
int
ret
pop
aam
jecxz
fmuls
mov
dec
mov
in
xchg
imul
gs
es
lods
xchg
pop
xchg
jg
or
cmc
in
test
pop
jg
or
jns,pt
pop
xorl
icebp
dec
add
jmp
ja
mov
mov
das
dec
jmp
lahf
cmpsl
mov
push
add
push
stos
ret
lds
and
mov
mov
dec
fmuls
ss
or
clc
jns
push
test
ficoml
shll
ljmp
cmp
fs
outsb
push
lahf
inc
push
jmpw
cli
adc
vcvtss2si
push
adc
push
cmp
sub
lods
or
mov
test
or
or
pop
int
notb
subb
cli
mov
lret
flds
stos
dec
int3
sub
mov
cmpsl
mov
jle
xchg
call
and
push
add
fs
or
imul
mov
mov
mov
jmp
enter
or
pop
xchg
and
mov
out
jp
clc
mov
mov
out
inc
test
sti
arpl
add
arpl
sbbl
xor
outsl
dec
je
ret
outsb
shlb
inc
dec
cmp
dec
mov
jns
xor
adc
sti
sub
cmp
mov
sub
jge
ja
pop
enter
pushf
aad
ds
mul
push
xlat
xchg
fisubs
pop
jp
dec
cmp
sti
loope
int
mov
shl
mov
jmp
cmp
int
and
aas
sbb
mov
int3
jns
cli
and
add
push
pusha
mov
pop
aas
sub
dec
clc
lahf
rcl
mov
push
sub
mov
in
jp
enter
fwait
push
lods
inc
insl
dec
lea
pop
in
add
xlat
jp
sub
dec
jg
add
orl
sbb
imul
test
and
mov
mov
sbb
jns
mov
inc
scas
enter
leave
stos
movq
in
mov
sarl
dec
jns
mov
adc
jge
jmp
mov
dec
mov
mov
inc
ss
mov
pop
xor
jl
mov
jl
lret
xor
dec
mov
and
dec
xlat
lcall
negl
aad
mov
sub
lea
fwait
ja
stos
and
or
sub
cmp
jno
les
loop
notl
cmp
pop
ljmp
mov
nop
lret
lcall
jmp
jne
lock
inc
enter
test
inc
dec
mov
loop
pop
bswap
sub
sti
push
sarl
pop
jl
pop
fcmovnb
movsl
lahf
sarb
sub
push
inc
mov
sub
mov
mov
out
jl
pop
sub
inc
daa
sbb
mov
push
arpl
jno
shlb
sub
sbb
jnp
cli
pop
xor
in
cltd
adc
dec
mov
dec
lahf
cli
and
xor
test
lea
loope
push
lods
mov
cld
jg
cld
pop
sub
lcall
outsb
xchg
mov
fimull
mov
insb
imul
mov
notb
hlt
cmc
jl
xchg
and
mov
inc
jecxz
mov
fstpl
jmp
mov
mov
lods
and
push
out
movsl
dec
pushf
pop
adc
roll
jo
gs
adc
inc
sbbl
xor
dec
scas
and
dec
out
adc
shr
xchg
lea
mov
xchg
outsb
into
fnstenv
xchg
sub
push
xchg
lret
mov
lods
aas
dec
cltd
adc
notl
jge
imul
scas
sbb
and
lock
cmp
add
imul
jbe
leave
or
stos
popf
movsl
jg
or
sub
stos
iret
outsl
mov
push
push
loopne
sbb
shll
cmp
enter
into
addr16
in
or
pop
and
cli
and
mov
js,pn
sub
imul
pop
cmpsl
mov
ja
leave
mov
push
mov
lds
int
sahf
push
jge
sbb
insb
pop
pop
je
mov
int3
sbb
movsb
imul
adc
imul
andl
and
xchg
xor
out
mov
inc
ffreep
mov
fiadds
mov
mov
shl
arpl
movsb
xchg
inc
mov
push
cwtl
inc
mov
xchg
lret
xchg
int
out
nop
add
push
mov
fprem
lahf
nop
test
pop
jp
sbb
mov
dec
fwait
cwtl
setle
or
xor
push
in
sbb
mov
cld
ret
jno
lcall
xchg
adcl
adc
cmpsb
sahf
jae
out
sub
movb
jnp
mov
push
push
mov
into
pop
inc
jp
js
mov
pop
call
outsb
jne
mov
pop
cmp
or
xor
js
xor
and
mov
jge
scas
mov
jp
push
and
cmpsl
lcall
xor
sub
lds
sbb
decl
test
sub
mov
scas
pop
or
xchg
pop
push
stos
add
or
out
dec
or
push
and
or
cs
movsb
cli
nop
popf
adc
xor
gs
mov
add
sub
push
push
jb
scas
mov
loop
or
hlt
inc
jg,pt
xor
testl
in
ja
mov
jle
fidivl
scas
inc
mov
push
xchg
push
xor
pop
xchg
sbb
adc
dec
adc
les
arpl
in
lcall
xchg
sbb
jbe
movsb
in
push
jae
out
jle
lret
idiv
mov
mov
movsl
aad
enter
loop
fdivrs
cwtl
jle
lcall
lods
popf
push
push
dec
ret
cmpsl
inc
jo
sub
pop
xor
jae
in
mov
jns
inc
popa
jl
push
push
add
adc
shll
popf
int
or
jns
xor
in
cmp
or
aaa
mov
loop
mov
roll
mov
int
add
lret
ficompl
leave
nop
das
cmpb
cmc
out
fsubp
in
xchg
mov
xor
mov
fs
insl
shlb
cwtl
mov
jge
pop
aam
sub
cwtl
sbb
xchg
int
cltd
jnp,pn
stc
sbb
cmc
add
in
mov
out
outsb
sarl
push
fwait
adc
cmp
nop
ret
jg
cmp
and
pop
in
pop
mov
mov
adc
stos
sahf
jbe
cmpsl
push
in
adc
rclb
pop
or
xchg
je
lods
imull
fimuls
or
notb
sub
lods
sbb
arpl
fadd
pop
sbb
cld
mov
dec
in
ds
icebp
push
jnp
push
jno
cmp
sahf
stos
dec
adc
inc
es
add
inc
test
aam
sub
inc
mov
xchg
cli
push
rolb
dec
sbb
add
data16
push
pushf
cmp
popf
push
push
and
inc
ret
repnz
xchg
aam
hlt
and
cltd
cld
enter
sub
dec
incb
shlb
adc
fadd
sbb
xchg
ss
xchg
insl
or
cmp
xchg
outsb
movsb
stc
sub
cmc
jle
std
or
push
imul
jo
xchg
dec
lahf
adc
jnp
repnz
push
test
fistps
cmpw
repnz
lahf
mov
mov
lea
jmp
add
pop
call
jecxz
dec
and
cmpsb
ds
std
decl
jo
movsb
mov
dec
cwtl
lret
fldl
pop
adc
pop
into
insb
or
out
jg
sbb
jbe
pusha
add
dec
sbb
inc
mov
jg
scas
out
or
das
sarb
sub
cltd
jbe
in
pop
js
cmp
mov
mov
ljmp
mov
adc
lret
xchg
and
push
movb
lret
inc
fsubrl
sbb
cmp
or
mov
cmp
cmp
popa
jp
mov
test
lret
lds
je
rcrb
jns
in
test
shr
cmp
mov
psrad
xor
test
test
dec
lahf
loop
jns
or
addl
pop
jne
insl
and
jge
jns
std
and
sub
sub
push
sar
mov
fs
out
and
pop
std
mov
ucomiss
fucomi
cmc
mov
mov
imul
add
clts
dec
mov
loop
popa
cmp
mov
clc
popa
xchg
mov
pop
or
mov
jne
and
adc
jb
add
xchg
and
push
imul
xchg
mov
out
int3
lret
ss
je
int
hlt
inc
push
jns
fsubrs
fcmovb
or
test
faddl
arpl
and
sar
fldenv
jmp
sarb
cmp
or
daa
push
push
out
mov
cmpsb
jmp
cmp
movsl
lahf
or
cmpsl
push
cmpsl
cld
pop
js
pop
inc
lcall
dec
arpl
add
push
push
xlat
mov
iret
or
sub
pop
pop
lock
rclb
inc
lret
sub
jg
mov
sub
push
xor
mov
imul
or
lods
xchg
cmp
js
into
inc
enter
ds
fiaddl
shrb
ret
xor
inc
mov
stos
ret
pop
shll
mov
push
dec
xchg
and
mov
jecxz
mov
repnz
jnp
pop
pop
movsl
movzbl
dec
jle
mov
iret
jno
and
mov
test
push
fwait
dec
rorb
out
adc
add
lahf
lea
cmp
in
lds
sub
clc
pushl
sub
int3
rcrb
scas
fwait
lods
sbbl
push
push
sub
push
adc
aam
pop
mov
aas
mov
ja
cmp
sbb
or
addr16
hlt
insb
jo
aas
lcall
sti
push
cmp
jl
rclb
sahf
inc
stc
roll
cmpsl
scas
cmp
push
addr16
fnstcw
mov
das
mov
lret
and
addr16
push
into
iret
add
out
cli
adc
xchg
ja
sub
push
test
cmc
int3
xor
ret
inc
sub
fdivrl
pop
int
add
sbb
mov
aad
pop
xor
inc
rcrb
mov
out
xor
int
stc
jb
or
test
out
push
out
adc
push
xor
in
loopne
mov
dec
mov
jp
data16
mov
adc
scas
lods
xor
into
jbe
sub
and
dec
insb
repnz
jmp
pop
iret
or
sahf
arpl
mov
insl
pop
push
jno
cmp
push
nop
inc
sti
jo,pt
ljmp
inc
cmpsb
ret
sbb
sbb
pop
xor
mov
inc
mov
maxps
push
xlat
imul
mov
and
loop
loopne
pop
dec
mov
fidivrs
push
in
insb
and
add
cmp
testl
mov
xorl
cmpsl
repnz
jbe
sbb
std
fiaddl
push
cld
loop
xchg
xor
jg
dec
cmp
and
insl
dec
sbb
xchg
push
jmp
xor
lahf
mov
mov
xchg
inc
in
stc
dec
call
in
mov
mov
inc
std
xorl
pop
dec
mov
arpl
enter
jmp
sub
xchg
add
es
loope
or
orl
and
push
mov
sbb
xchg
gs
mov
dec
mov
push
push
lds
xchg
lock
test
jl
mov
into
outsb
mov
pop
bound
mov
cmpsb
xchg
popf
insl
into
dec
push
test
aam
sub
dec
xor
frstor
dec
push
pop
shr
enter
jge
and
nop
subb
add
popf
xchg
xchg
push
lock
cmp
pop
test
mov
jo
addl
popf
mov
jne
bound
addr16
add
mov
sub
cmc
sbb
cmc
sahf
inc
inc
cli
and
ja
jl
dec
bound
ss
out
add
mov
dec
insb
scas
push
in
jp
aad
or
int
sbb
fildll
xor
and
data16
movsb
push
ljmp
mov
cwtl
xchg
jg
dec
sbb
and
repnz
pop
push
xor
sbb
test
xor
mov
jg
mov
jns
push
adc
mov
fisttps
test
mov
jecxz
dec
mov
jge
mov
pop
aad
int3
pop
sub
dec
fidivs
in
mov
inc
mov
jg
hlt
pop
movsl
cmp
and
rorl
xor
mov
sbb
push
pop
stos
fcomps
cli
lret
inc
sahf
stos
push
and
ja
stos
clc
sbb
and
sub
loopne
popf
xor
add
mov
xchg
lret
pop
sahf
repz
mov
in
cltd
out
jge
jb
dec
std
push
mov
call
xchg
mov
inc
aad
shll
loope
and
add
popa
sub
aam
sub
sub
pcmpgtw
in
andl
mov
mov
call
test
in
or
pop
loope
pushf
test
mov
shrb
lcall
icebp
cmp
aas
and
test
cmp
add
loopne
jle
popa
push
int3
or
scas
dec
push
xor
mov
xor
mov
mov
jnp
repnz
out
jmp
cmp
sub
test
in
inc
or
fstp
jle
xor
xchg
loop
jno
inc
xchg
pop
test
push
jmp
mov
inc
imul
xor
or
sbb
sbb
sub
or
jno
into
sub
jae
negl
or
and
lods
sub
mov
pushf
aam
movsl
xlat
dec
dec
xchg
xchg
outsl
rorb
cmc
scas
std
flds
adc
cmpb
movsl
pop
in
xor
leave
adc
add
sub
sti
subb
les
dec
orl
loopne
cmp
mov
mov
aad
lcall
das
test
pop
push
repz
xchg
jl
cmp
aaa
cmp
rorl
sti
mov
xor
push
rorl
push
fistpl
sub
loope
mov
repz
out
sbb
lret
ja
jne
scas
fildl
mov
repz
je
xor
mov
and
or
rcrb
xor
cmp
pop
jl
cli
lods
movsb
mov
fisubrl
pop
iret
das
popa
xor
push
jp
shlb
mov
sbb
aaa
and
pop
push
movsl
pop
les
and
sti
jbe
clc
jecxz
imul
xor
test
fs
sbb
push
shrl
je
sbb
aam
xchg
cmc
cmp
repnz
or
std
jae
push
xor
pushf
ds
test
push
push
in
addl
cmp
dec
stc
mov
and
inc
adc
inc
scas
sahf
out
out
jb
outsl
pop
sub
nop
cmc
aas
mov
xlat
mov
dec
movsl
lcall
out
pop
or
loope
jno
dec
pop
jae
mov
mov
inc
pushf
fstps
xchg
sbb
pop
mov
push
mov
pop
gs
fwait
cmp
xchg
stc
movsb
scas
cmc
cmc
sub
lcall
stos
cli
push
lret
inc
stos
pop
xor
dec
out
push
mov
dec
xchg
ja
xor
sti
pop
push
rclb
pop
outsb
or
ja
cmp
jmp
mov
into
adcl
xchg
or
ds
xchg
test
fsts
negl
push
aad
push
sti
frstor
cltd
loop
rclb
pop
adc
push
sbb
inc
mov
dec
aad
flds
mov
or
scas
sti
pop
psubsw
jge
aad
sub
cmp
adc
mov
xchg
mov
negl
push
jecxz
add
xor
pushl
stos
aaa
outsb
js
mov
lahf
lahf
mov
xchg
cmc
jo
cmpsb
hlt
cli
pop
arpl
adc
pop
or
push
jns
xchg
pop
aaa
inc
ss
stos
ficoml
inc
push
rorb
dec
jecxz
cmc
push
daa
pop
sub
pop
sar
add
jno
insl
jbe
mov
or
sub
rorl
inc
sahf
faddl
dec
pop
cmp
jge
fsubl
add
xchg
inc
imul
fsin
enter
push
pop
lods
arpl
nop
icebp
outsl
cpuid
adc
popf
test
pushf
in
icebp
push
sti
or
lahf
sub
rcrb
dec
stos
sub
clc
cmp
in
sbb
enter
pop
push
or
ret
lret
je
ljmp
data16
iret
jbe
out
and
negl
inc
movsb
mov
sbb
loop
lds
pop
mov
cmpsb
xor
or
mov
dec
push
mov
xor
insb
adc
xchg
mov
ftst
mov
repz
imul
mov
je
sbb
jg
mov
insb
xor
dec
divb
fsubr
dec
cmp
pop
aaa
dec
cmp
insb
imul
mov
mov
dec
mov
xchg
out
shlb
xchg
stc
popa
inc
mov
dec
nop
dec
inc
cwtl
aam
cld
mov
cmp
pop
out
out
adc
mov
gs
xchg
int3
and
fstps
ss
xor
or
mov
fs
cmc
mov
fmull
fwait
sbb
sub
add
xorl
icebp
es
ljmp
pop
cwtl
scas
mov
andl
xchg
jae
pop
or
imul
adc
out
dec
jg
push
lcall
jge
aas
test
inc
fs
es
mov
xor
sbb
shll
cli
nop
pop
mov
std
rol
jae
jle
dec
mov
jmp
add
mov
inc
push
dec
push
aad
xor
inc
xor
pop
sbb
pop
or
push
xor
sub
xor
int
inc
xchg
cmp
pushf
jle
pop
pop
int
push
aam
lods
lret
stos
outsb
xchg
xchg
pop
aad
push
jecxz
filds
shrb
scas
cmp
pushf
stos
xchg
xorb
mov
or
or
adc
out
scas
in
pop
add
sub
pop
daa
mov
or
and
xor
movsb
sti
ss
jnp
mov
mov
clc
xchg
mov
stc
test
xchg
aad
in
pushf
mov
add
lret
in
push
arpl
mov
mov
push
xchg
and
clc
or
sub
fists
scas
add
out
pop
lea
cwtl
mov
inc
in
std
inc
in
adc
loop
sbb
jle
inc
ss
or
imull
cwtl
add
sbb
mov
fcoms
xchg
and
push
sahf
xor
lods
fisubl
jmp
test
outsb
mov
adc
push
push
sbb
cmpsl
cmc
scas
nop
stos
jae
into
int3
es
mov
or
xchg
lock
jno
icebp
dec
call
aaa
cmp
xchg
scas
jg
test
ss
dec
dec
pop
lock
inc
stc
cld
push
or
lods
jne
jo
ror
inc
push
push
pop
pusha
mov
or
xchg
push
push
loop
push
ljmp
mov
sub
fs
ds
adc
inc
mov
or
push
lret
andb
and
or
xor
mov
add
lods
xchg
pcmpeqw
inc
scas
mov
inc
sbb
sbb
test
or
mov
push
push
mov
incl
xchg
dec
test
pop
pop
jo
push
and
pop
ljmp
jle
rorl
jmp
lods
xor
jae
jnp
faddl
into
rclb
lahf
lods
test
cs
fbstp
je
in
mov
dec
lahf
pushf
xchg
and
aad
loopne
out
pop
pop
dec
jae
dec
mov
test
mov
jb
movsb
sub
std
cmpsb
mov
mov
add
ficoms
inc
mov
xlat
ficompl
add
icebp
sbb
adcb
push
inc
jge
int3
or
pop
dec
sbb
mov
xchg
or
jp
test
adc
cwtl
mov
mov
pop
mov
lock
shlb
mov
insb
xchg
mov
push
mov
cmp
rorb
daa
das
cwtl
push
lcall
icebp
sub
xor
mov
jae
aam
ljmp
in
sbb
adc
jns
xchg
dec
jnp
mov
je
fisubrs
inc
inc
dec
and
scas
push
in
adc
aam
xchg
inc
mov
or
push
ja
into
mov
adc
mov
test
jbe
xlat
pop
mov
mov
das
adc
aad
loopne
addl
stc
push
push
sub
xchg
lret
hlt
mov
stos
xchg
movsl
mov
add
push
negl
push
add
mov
lret
lcall
jb
fisttpll
cmpsl
dec
fnstcw
mov
or
mov
xlat
add
jbe
pop
ss
mov
out
push
and
sub
fs
jmp
cmpsb
xor
out
flds
popf
bound
leave
jmp
push
ficoms
pop
pop
sbb
pushf
idiv
mov
fbld
sub
push
cmp
loope
cmp
test
adc
outsl
andl
sub
int3
mov
stos
xchg
pop
dec
scas
mov
or
sbb
sahf
mov
xchg
inc
mov
ja
jne
jecxz
outsb
add
xor
insl
cmpsb
sahf
jnp,pt
pop
push
push
iret
add
dec
mov
jae
xor
in
sub
les
call
ret
adc
clc
insl
jno
into
dec
mov
jge
idivb
int3
jg
in
fs
cmpsb
je
cmp
mov
or
lods
pop
js
sub
lcall
aaa
icebp
ljmp
loopne
push
out
stos
test
or
push
gs
push
xchg
nop
dec
mov
stos
cmp
pop
or
imul
inc
aad
xchg
mov
push
lods
jnp
and
fsubrs
sub
loopne
popf
js
les
sub
int
addr16
loopne
pop
mov
sahf
add
mov
cmp
mov
mov
enter
jnp
and
xlat
icebp
add
daa
xchg
arpl
rcrb
scas
ja
adc
js
jge
pop
and
sub
fnstenv
dec
or
push
jecxz
loope
addb
pop
outsb
jl
mov
clc
pop
ds
mov
gs
pop
dec
arpl
inc
in
pop
cmpb
std
adc
ljmp
mov
in
js
add
lret
push
sbb
push
fsubr
loopne
negl
andb
push
inc
jecxz
mov
xor
adc
int
sub
cmp
jp
repz
fwait
push
xor
imul
mov
pusha
jle
shrb
sarb
mov
dec
sub
out
das
dec
stos
inc
js
jl
sub
subb
rclb
mov
arpl
je
xchg
mov
mov
pop
inc
in
pop
pop
inc
xor
or
lods
dec
pop
inc
popa
gs
lock
mov
mov
sub
xor
and
inc
mov
sbbb
das
scas
loopne
aad
cld
push
mov
sub
fisubs
neg
icebp
push
jnp
inc
aam
pop
out
push
or
stos
gs
testb
mov
outsb
dec
push
xchg
fidivrl
icebp
gs
loopne
std
clc
je
mov
or
push
inc
sbb
rcrl
shl
mov
gs
inc
push
lods
mov
xorl
les
jp
js
rolb
idivb
mov
adc
hlt
cmp
mov
sbb
adcl
inc
jb
and
xor
pop
jb
pop
sbbb
xchg
push
jns
repz
inc
cli
mulb
int
xlat
dec
nop
xchg
pop
lods
fwait
or
cltd
sub
mov
xor
cmp
imul
jo
lret
shrl
xchg
push
mov
cmpsb
push
mov
mov
ffreep
push
loopne
pop
cli
ja
loope
stc
cmp
addr16
lret
sahf
pop
xchg
test
push
dec
or
stos
ds
dec
scas
inc
mov
and
and
mov
fcmovnbe
jp
mov
inc
ss
icebp
les
aad
mov
hlt
and
push
popf
cmp
dec
mov
shll
add
shll
rcll
into
out
shl
xchg
sahf
out
rcl
xchg
pusha
add
ret
lods
adc
icebp
xchg
add
into
inc
inc
dec
ficoms
nop
dec
daa
popf
push
cmp
and
faddl
sbb
sarl
aaa
imul
pop
and
test
xor
mov
jne
enter
or
add
cmp
idivl
jp
insb
inc
ljmp
jmp
iret
mov
fninit
jecxz
sbb
loopne
pop
adc
add
fadds
add
pop
testl
adc
mov
jmp
out
push
aaa
sbb
rcrl
mov
arpl
int
dec
je
arpl
jge
nop
cmp
je
pop
inc
outsb
sub
xchg
cmp
sbb
push
sbb
test
adc
jl
mov
addr16
inc
xlat
inc
movsl
hlt
cmpsl
push
mov
adc
xor
rclb
in
fidivs
mov
pop
add
dec
fisttpll
xor
fs
daa
mov
sarl
imul
outsl
add
aas
leave
push
push
lods
jo
int
insl
dec
dec
mov
pop
call
xlat
add
mov
and
jmp
mov
rol
cmpsb
ret
dec
sbb
jl
lret
mov
ljmp
xor
movsb
int3
enter
out
dec
push
shll
inc
insb
sub
lods
addr16
and
mov
mov
sbb
scas
ss
add
dec
push
mov
xor
imul
lcall
sub
adc
insb
or
xchg
cmp
cmp
bound
sbb
dec
pop
insb
mov
cs
xchg
fwait
mov
cmp
cmpsl
and
ret
and
std
ljmp
lds
sbb
arpl
and
movsb
cmpsl
out
or
xor
dec
xlat
cmpsb
xchg
cwtl
pop
in
mov
or
loope
int3
in
outsb
jne
gs
push
pop
xor
jo
jo
notb
mov
adc
xor
sub
mov
adc
mov
mov
mov
and
cmpsb
sub
or
and
popa
and
into
test
mov
inc
stos
clc
add
fwait
sub
cmp
iret
dec
mov
popf
xlat
lmsw
lods
push
inc
add
push
int3
mov
jmp
cld
inc
out
aaa
test
push
pop
jbe
fldt
cmpsl
js
sbb
dec
cmp
sub
rcrb
in
and
call
cmp
jae
sbb
mov
dec
lcall
test
push
or
test
or
aas
dec
test
mov
push
in
xchg
sbb
push
repz
dec
xorb
pop
pop
xlat
sbb
jb
jg
dec
add
movsl
loop
or
mov
xor
or
xor
inc
mov
sub
aam
xchg
cmp
imul
jbe
lahf
mov
pop
adc
xchg
insb
jno,pt
cld
push
inc
jns
jge
jge
jbe
cld
imul
dec
xchg
inc
mov
ds
mov
sbb
jae
xor
fdivs
insb
dec
stos
int3
jp
pop
xchg
pop
pop
bnd
add
std
jo
jecxz
scas
insb
or
in
ror
jne
pop
ret
in
push
lahf
xchg
pop
inc
pop
inc
inc
int3
inc
adcb
or
jb
sbb
lods
xchg
xor
jns
shlb
jno
js
leave
lock
int
daa
ljmp
ret
mov
inc
inc
shr
ds
adc
rorl
dec
dec
cmp
xor
pushf
pusha
push
mov
cld
inc
sbb
sbb
roll
cmpb
addb
mov
das
dec
outsb
int3
sarb
lds
inc
xchg
je
mov
dec
push
js
sarl
and
sub
lret
add
andl
mov
sti
xchg
popa
fwait
scas
inc
cmc
pop
cltd
loopne
mov
adc
test
fisttps
ljmp
fistps
mov
mov
lods
mov
filds
aam
fcomps
xor
mov
or
clc
mov
mov
dec
xchg
cld
movsl
push
into
das
cmc
pop
adc
rcrl
xor
fiaddl
push
cltd
sahf
ret
dec
ret
movsb
jmp
stos
movsl
push
xchg
sub
mov
in
ljmp
outsl
ja
aas
lods
inc
and
jecxz
xchg
ret
xor
outsl
popf
pushw
ret
stc
sub
dec
mov
rcrl
mov
mov
mov
inc
push
test
sbb
add
jbe
fldcw
inc
nop
mov
mov
ror
das
push
ljmp
jg
stc
push
gs
mov
xchg
fimuls
out
adc
repnz
flds
add
pop
pop
fnstenv
mov
ljmp
dec
mov
fdivs
xchg
out
in
out
adc
adc
das
jecxz
sub
test
xchg
int
dec
fs
sub
imul
test
std
roll
or
pop
dec
enter
dec
lock
in
insb
mov
and
inc
fwait
cwtl
cwtl
push
fistpll
mov
mov
les
add
stc
sub
jle
push
imul
stc
pop
xchg
and
jae
jecxz
push
ja
outsb
cmp
cmp
or
jge
or
les
rolb
inc
jo
mov
ss
mov
sbb
loopne
sub
inc
insl
pusha
pop
inc
int3
or
xchg
adc
cmc
cmp
test
xchg
cmp
movsl
dec
shll
in
pop
mov
mov
out
mov
pop
adc
pop
fmul
movsb
push
xor
cmpsl
cmp
decl
in
pop
pop
ljmp
lods
add
pop
or
pop
aad
out
xchg
dec
sub
adc
test
sbb
mov
movsl
fldenv
movsb
xchg
push
dec
clc
cmpsl
aas
shll
cld
stc
fs
jne
push
pop
inc
dec
cmpsb
pop
sbbl
rcll
mov
inc
mov
clc
jnp
lock
lcall
insb
xchg
xchg
mov
inc
mov
cltd
ror
js
jle
mov
jb
mov
inc
sub
pop
and
mov
cmpsl
adc
in
testl
aad
daa
stos
leave
into
pop
dec
insl
or
jp
shrl
mov
aas
mov
adc
or
mov
daa
aad
punpcklbw
sahf
jbe
int3
das
jne
je
push
sahf
ret
adc
inc
xchg
andb
cli
jg
push
icebp
cltd
leave
and
cmp
fcoms
repnz
dec
jo
mov
les
xor
out
pop
sti
pop
ret
in
push
adc
or
aaa
test
xlat
cmpsl
ljmp
pop
push
and
out
or
mov
add
sub
jns
mov
pop
adcb
mov
outsb
pop
mov
adc
rol
push
insl
push
nop
ficomps
xchg
es
jae
adc
push
dec
adc
lcall
push
icebp
jl
popf
pop
testb
mov
movl
leave
cli
fisubl
push
xchg
push
ficompl
sbb
cmp
pop
inc
lret
fcomp
push
mov
mov
inc
mov
scas
cmp
and
add
scas
jmp
jmp
std
or
pusha
push
fdivs
hlt
xchg
and
mov
cmp
add
outsl
or
inc
and
loopne
fiaddl
lods
jo
push
loopne
out
loope
sub
mov
outsb
gs
push
aam
sbb
fucomip
dec
fstpt
inc
mov
jp
mov
stos
test
cmp
insb
insl
loope
adc
les
inc
sbb
push
outsl
insl
sbb
jae
call
add
adc
into
loop
dec
and
push
scas
jno
and
or
rorl
lahf
xchg
aad
scas
repnz
lods
adc
xor
jmp
or
lods
imul
jno
or
imul
mov
loopne
or
stos
lahf
jp
test
cmp
adc
jmp
sbb
andb
imul
sarl
sti
or
fcomps
fs
adcb
lock
mov
mov
jno
push
jae
push
ret
jge
imul
out
gs
insb
push
or
enter
push
leave
out
movsl
mov
inc
leave
mov
xchg
push
popf
adc
inc
aam
aad
sbb
cmp
into
push
add
or
cmpl
aam
add
push
xchg
les
cmp
enter
notl
pop
pop
cs
mov
addb
aam
fwait
sub
and
sbb
adc
loopne
arpl
lea
sbb
popf
mov
mov
push
frstor
fdivl
jge
cwtl
fdivrs
mov
test
fiaddl
test
clc
rcrb
mov
insb
sbb
aaa
jle
rcll
mov
rol
cmpsl
mov
aam
insl
data16
add
pop
add
orb
fs
stos
push
test
adc
inc
jae
pop
iret
xor
cmc
xor
hlt
push
inc
add
cmpsb
fwait
inc
ds
mov
xor
inc
mov
mov
dec
fnsave
push
inc
dec
mov
test
sbb
ret
lds
mov
mov
scas
cmp
ficoms
mov
ds
dec
push
js
sti
push
cli
sub
xor
push
jns
push
int3
sbb
sub
and
sub
push
jae
jge
or
std
imul
dec
call
fmull
dec
add
dec
mov
add
popl
scas
popf
pop
xchg
jle
mov
push
dec
jmp
stos
jae
add
shll
std
inc
mul
popf
xchg
lock
cmp
or
aad
mov
fdivrs
xchg
popa
in
inc
xorl
sub
mulps
jns
xor
cld
sbb
mov
into
ds
xchg
adc
jmp
push
mov
ret
sub
cli
lahf
mulb
mov
fists
ret
adc
sarl
data16
mov
push
into
sbb
test
repnz
je
inc
jecxz
popa
mov
mov
inc
lret
pop
push
je
movsb
dec
pop
lock
icebp
add
mov
dec
pop
mov
dec
xor
ljmp
in
sti
pop
inc
xlat
push
int3
pop
or
sbb
jecxz
or
inc
or
dec
movsl
inc
push
cltd
inc
scas
jg
jne
sub
adc
sar
js
cwtl
aaa
xchg
insb
mov
push
mov
sub
cwtl
ret
adc
fstl
lcall
cmp
push
cs
scas
pop
jo
icebp
nop
lock
das
icebp
mov
push
mov
sbb
mov
loop
cld
in
push
fyl2x
sbb
in
lock
scas
sbb
mov
jbe
and
cli
pop
cmpsb
mov
adc
jge
loop
mov
notl
xchg
dec
or
in
jns
xor
lds
mov
mull
mov
mov
int
push
push
mov
pop
push
into
push
sbbl
jne
setp
pop
mov
in
xor
mov
mov
rclb
lret
pusha
ffreep
jle
mov
mov
pop
divb
jae
in
mov
push
leave
sbb
insb
or
test
enter
test
push
xchg
adc
dec
mov
cmp
jle
lret
std
in
into
lahf
aad
push
sub
cmp
push
test
inc
pop
lcall
xchg
ja
pop
test
cmp
sub
outsb
mov
add
filds
bound
jo
ja
adc
es
push
cmpsb
cmp
nop
popa
dec
adcl
sub
jp
rorb
mov
je
lea
jnp
or
js
cmpsb
aaa
repnz
mov
rcrl
outsl
add
sub
or
sub
add
jo
stos
ljmp
adc
and
stc
mov
arpl
xchg
xchg
dec
push
sbb
cmpsl
pop
ja
jl
gs
je
es
data16
lock
jne
jns
xlat
sbb
and
stos
pop
push
inc
popa
mov
pop
lahf
mov
xchg
push
inc
mov
sub
fbld
pop
out
add
pop
or
hlt
in
iret
lea
jle
stos
and
push
adc
mov
sbb
or
es
scas
xchg
and
mov
sbbb
push
dec
cmp
or
mov
pop
pop
pop
mov
test
add
mov
or
jg
sbb
jae
test
push
xor
cmp
hlt
gs
int3
cmp
hlt
rolb
fstl
mul
in
jb
popa
in
mov
hlt
pop
mov
inc
inc
out
mov
pop
mov
inc
mov
stos
fwait
xor
cltd
cmp
stc
insl
mov
fisttpl
popf
dec
das
and
ss
cli
fmuls
cmp
xor
rclb
bound
inc
ljmp
in
sub
xchg
stos
movsl
sub
dec
rorb
lds
mov
dec
fisubl
add
sbb
pop
dec
es
stos
lret
movsb
fnsave
mov
pop
lret
pop
or
pop
and
add
push
inc
pop
inc
aam
pop
pop
test
out
jns
pop
aaa
lcall
and
scas
jecxz
das
mov
mov
orl
jle
in
test
outsb
aas
adc
in
sarb
dec
movsl
mov
pop
out
dec
adc
sub
mov
xchg
int
pop
xchg
sarb
mov
addr16
lahf
orl
push
sbb
pop
lock
or
jge
sbb
xchg
or
movsb
mov
adc
loope
push
sub
iret
push
into
mov
ljmp
mov
and
pop
pop
test
fistpll
xchg
aas
imul
fiaddl
aad
cltd
lock
sbb
mov
movsl
xchg
daa
frstor
inc
jo
outsl
scas
shll
inc
jl
inc
inc
fiaddl
icebp
jnp
outsb
in
jle
insl
fdivrs
mov
das
pop
mov
inc
mov
outsl
cmp
or
cltd
out
xor
jmp
popa
sub
insl
pusha
aas
cmpsb
adc
cli
adc
enter
sub
pop
jo
aad
sahf
or
xor
mov
sti
stc
xchg
sub
negl
lcall
adcb
inc
xchg
out
cwtl
ss
ds
and
stos
jno
sub
pcmpeqd
dec
arpl
mov
cmp
mov
pop
std
jno
lret
sbb
xlat
and
adc
roll
pop
push
iret
adcb
mov
das
mov
pop
jmp
pop
xlat
jg
inc
xchg
jnp
rcrb
add
adc
add
mov
pop
mov
pop
jge
stc
cmp
sahf
clc
push
jp
gs
sub
loope
push
arpl
mov
mov
in
loop
jl
out
ljmp
dec
jl
outsl
dec
test
sub
or
test
lods
mov
pop
cmpsb
dec
sbb
inc
test
and
inc
and
pop
cmp
scas
and
xchg
fmull
mov
std
hlt
cld
dec
mov
sti
pop
xlat
inc
sub
jmp
adc
es
mov
or
mov
das
ds
shrl
rcr
sub
push
adc
sbb
fucom
cltd
pop
inc
clc
orl
sub
negl
stos
sub
dec
xlat
andb
sub
inc
cmp
mov
outsl
mov
jne
add
and
add
dec
push
xchg
mov
mov
data16
mov
mov
test
inc
mov
int3
std
outsb
push
in
inc
test
vmovdqu
cmp
xor
sti
add
sbb
mov
lret
fdivrp
add
push
sub
jnp
rcrl
aaa
int
xor
popf
pop
xor
roll
cwtl
adc
mov
push
out
jle
fstpt
and
rdtsc
and
icebp
pop
inc
in
dec
js
xlat
faddl
insb
out
fldl
ljmp
rol
lcall
das
popl
ss
add
adcl
mov
int3
enter
mov
enter
fwait
sbb
pop
aam
and
test
cltd
and
jnp
stc
mov
aas
test
repz
pusha
dec
jne
ja
or
jmp
outsl
inc
sub
leave
push
lret
in
inc
sbb
sahf
push
in
push
mov
lods
ret
mov
or
push
ret
or
insb
xchg
lock
mov
in
mov
fldl
jno
mov
daa
out
stos
mov
fdivl
nop
xor
fsubrl
scas
pop
aad
xchg
je
pop
stc
sbb
ret
das
dec
push
or
mov
push
pop
shrb
cmpb
fmull
push
cmp
adcb
cs
fbstp
fimuls
pushf
xor
add
mov
mov
cmp
cmp
sbb
cmpsb
mov
stc
push
rclb
fistl
adc
push
adc
adc
xacquire
xchg
in
arpl
cmc
mov
outsb
push
int3
xchg
push
outsl
fs
out
arpl
shrb
icebp
fadds
ds
lret
add
daa
lret
inc
sbb
mov
cmpsl
test
xchg
dec
ret
lcall
testl
insb
lock
or
shl
sbb
xchg
xor
mov
jns
fsubrl
jl
inc
mov
ljmp
repnz
cmc
sarl
mov
pop
inc
adc
stc
loopne
push
push
sub
push
fstps
pop
fcmovnbe
fmull
call
shl
test
idivl
rorl
jno
pop
adcb
add
ss
xor
cmp
je
cmp
adcl
imul
sbbl
add
cmp
sub
jp
mov
mov
mov
push
and
popf
mov
pusha
mov
add
xchg
jg
jecxz
sub
std
loop
push
push
push
xor
mov
insl
mov
popf
jbe
mov
cmpb
cmpsb
ret
test
shlb
into
fxch
mov
sbb
lret
imul
mov
mov
jg
push
lret
dec
xchg
insl
dec
addr16
leave
std
mov
xchg
fimull
xchg
fdivrs
xchg
out
les
adc
push
punpcklwd
ret
mov
and
sbb
xlat
aaa
fneni(8087
mov
js
push
pop
cmp
sbb
ret
arpl
dec
fldenv
cmp
fsts
xchg
cmp
push
cmp
aas
mov
test
jnp
jmp
ror
mov
in
pop
mov
mov
xlat
pop
pop
pop
cwtl
scas
negb
lods
pushf
insb
sub
movsl
frstor
cltd
inc
imul
les
xor
pop
add
inc
movsl
dec
pushf
xchg
or
push
or
sbb
adc
sbb
pop
mov
mov
sub
mov
push
mov
adc
xor
mov
mov
mov
inc
and
inc
stos
sbb
out
cmpsl
ds
lods
mov
fidivs
imul
rorl
fwait
icebp
mov
mov
mov
int
call
xchg
gs
mov
ror
push
jp
jae
xchg
lea
cmp
xchg
iret
pop
push
or
daa
xchg
add
jecxz
inc
rorl
mov
add
dec
xor
shlb
test
pop
jecxz
aam
cmpsl
mov
scas
cmp
xor
sbb
add
cltd
into
jecxz
inc
repnz
mov
mov
shll
and
jno
adc
and
inc
fistpl
pop
insl
add
jae
sub
mov
xchg
sub
mull
scas
js
xlat
scas
sub
dec
test
pop
cmp
sbb
dec
fdivs
mov
fs
adc
push
addb
pop
xor
mov
roll
rorl
std
lock
push
rcrl
pop
test
cmp
dec
sub
jg
sbb
lea
xchg
sahf
lcall
mov
cltd
test
mov
jnp
cmpsl
push
cmp
loope
jo
and
mov
xor
test
shlb
pop
sub
in
mov
pop
arpl
loopne
xor
fst
sbb
rorl
jo
add
aaa
inc
stos
call
int
push
test
scas
and
jmp
xor
test
push
cltd
aam
pop
dec
xchg
and
cmp
pop
das
sbb
and
mov
sbb
addr16
fwait
dec
add
hlt
push
call
add
xchg
inc
insl
push
out
mov
ret
rcrl
mov
lea
push
xchg
mov
xchg
xlat
jb
and
mov
pop
notl
jbe
jne
mov
pop
sub
adc
inc
jle
bound
xor
mov
out
int3
fwait
bnd
into
clc
mov
sub
push
and
mov
rcr
cli
dec
dec
cmp
aad
out
push
pop
ror
test
fdiv
iret
loop
mov
dec
xchg
jge
sub
popl
fs
mov
dec
dec
mov
jg
cmpsl
mov
out
push
loopne
mov
cmpsl
and
push
cmp
int
std
leave
add
pop
cmp
dec
imul
sbb
and
in
sub
cwtl
xor
jmp
jl
out
jb
mov
movsb
cld
sbb
sbb
sarl
jl
icebp
mov
lods
and
mov
cs
cmp
cmp
insb
cmpsl
dec
clc
stos
lcall
fadds
pandn
imul
sbb
or
xchg
sbb
inc
sbb
inc
lea
lcall
pop
data16
jnp
popa
scas
cmpsl
movsl
sbb
jl
fcoml
flds
inc
mov
pop
loopne
pop
lock
jo
sub
and
lahf
add
push
mov
jmp
fdivs
pop
xor
outsb
xor
jne
mov
jo
sbbl
push
aam
add
xor
fmull
movsl
bound
xchg
test
int
adc
pop
sti
cmp
pusha
push
jmp
pop
xor
and
or
mov
out
mov
leave
and
mov
mov
inc
sub
loope
decl
sti
out
add
bound
daa
cwtl
and
cmp
mov
push
ds
mov
cmp
and
out
repz
mov
xor
ret
and
and
ret
fsubrl
mov
lds
push
and
push
mov
sub
xlat
cmp
adcb
xor
ror
aas
clc
aas
lret
rorl
jb
jg
add
out
decb
mov
dec
cld
adc
std
dec
adc
sbb
inc
xorb
repz
mov
int3
repnz
dec
cmp
out
data16
cmp
roll
dec
cmp
sbb
leave
ret
popf
jge
mov
sub
mov
jns
nop
jno
imul
cltd
push
jge
xor
add
or
jmp
popa
jb
nop
popl
ret
push
iret
dec
insl
jecxz
out
pop
ss
jno
stos
out
shl
popf
gs
jo
jmp
push
in
xchg
out
fwait
test
cmp
mov
sti
mov
adc
pop
bnd
icebp
cmp
aaa
and
jp
or
lds
push
jo
lahf
or
pshuflw
push
mov
test
jns
cs
insb
sti
loop
rcrl
mov
sbb
jnp
mov
js
int3
lea
sbbb
je
jl
dec
dec
pusha
jns
cltd
xchg
xor
cmp
push
out
xor
inc
xchg
in
pop
shl
iret
adc
dec
loopne
push
adc
scas
mov
jmp
pop
ljmp
push
imul
ror
sbb
out
sbb
cli
fnstenv
or
sub
mov
test
adc
jbe
dec
stc
or
and
cli
fdivs
shrl
mov
add
insl
out
sbb
fimuls
add
and
cmp
inc
xchg
sarb
jno
lea
adcb
pop
enter
xor
sub
or
pusha
xorl
cli
arpl
cmc
outsl
inc
scas
aas
dec
push
cli
aas
jecxz
inc
imul
aad
out
std
imul
cmp
flds
cmp
lds
inc
outsl
es
push
adcl
push
bound
sahf
mov
jl
jne
pop
dec
cmp
hlt
inc
lret
rcrl
pop
scas
scas
pmullw
jno
push
pop
ret
jg
iret
push
bound
pop
sbbb
fisubrs
dec
push
in
out
xorb
int3
mov
sbb
push
cs
je
xor
shll
aas
loope
imulb
pop
mov
and
cmp
xchg
mov
pop
adc
pop
xor
cmp
test
pop
add
mov
pop
pop
scas
je
adc
cmp
lcall
mov
and
loopne
andl
push
cli
and
xchg
add
pop
push
mov
notb
int3
into
xchg
pop
addr16
sub
sub
or
lock
scas
cmp
inc
lea
hlt
dec
pop
xchg
inc
pop
aaa
xchg
mov
pusha
adc
addr16
mov
addb
mov
popf
adc
sbb
idiv
test
mov
scas
mov
mov
or
shrb
add
mov
pop
fildl
cmc
mulb
jg
push
shr
push
mov
adc
pop
mov
adc
pop
lock
mov
pop
pop
mov
xchg
ret
mov
jo
icebp
loope
jb
pop
pushf
sahf
adcb
sbb
cmp
inc
xor
mov
movsl
adcl
fldt
mov
pop
notl
pop
test
andl
inc
adc
or
pop
jp
lea
ret
add
pusha
jno
xor
pop
mov
test
repz
jo
pushf
mov
add
pop
ljmp
add
push
imul
cmp
sbb
mov
jns
dec
loop
mov
xor
and
iret
xchg
out
fneni(8087
subb
mov
pusha
fstpt
shlb
insb
les
jecxz
sbb
dec
shr
fmulp
aaa
cmp
mov
xchg
sbb
push
sub
xor
mov
loopne
inc
fdivrs
mov
sub
lods
and
pusha
jle
popf
fildll
shlb
pop
jo
xchg
push
mov
mov
push
cmpsb
test
push
push
sub
push
stos
mov
xchg
cld
pop
jl
add
sub
inc
jns
jno
push
in
mov
dec
xchg
mov
out
or
sbb
xchg
lret
ss
movsl
fsubl
xchg
cld
or
fcmovnb
mov
and
lods
scas
subb
out
test
lcall
xchg
sub
push
mov
fsubs
mov
jmp
sub
fld
cld
push
out
test
int
lcall
jecxz
aad
addl
dec
add
jb
dec
xlat
inc
into
sub
test
mulb
cli
insb
jns
mov
dec
cmp
push
pop
dec
push
xchg
into
push
aaa
bound
inc
cmp
pusha
push
imul
jns
inc
jecxz
mov
lcall
xchg
or
fidivs
push
inc
loop
repz
fmuls
push
push
xor
sti
sub
jl
sbb
cmp
pop
lahf
jmp
jb,pn
ds
lcall
mov
fcoms
testl
lds
stos
pop
mov
call
lds
movups
sti
mov
jnp
pop
pop
fbstp
mov
aad
dec
push
push
push
and
and
jno
aaa
pop
std
std
shrb
and
out
sti
push
pop
jns
out
test
xor
xor
paddw
and
fldenv
sub
inc
rolb
ret
sbb
inc
push
mov
inc
adc
mov
inc
mov
imul
pushl
popl
jl
lods
add
cmp
push
int3
xor
jno
xchg
cmp
cmp
arpl
leave
rcl
push
fs
sbb
add
push
adc
pop
fcmovb
push
add
out
mov
stos
out
xchg
pushf
sub
push
sti
or
jae
push
int3
mov
daa
push
pop
incb
stc
xchg
sbb
inc
or
jns
lock
xor
xor
cltd
jnp
fdivl
icebp
cwtl
dec
push
pop
repnz
or
sbb
cmpl
hlt
fnstsw
adc
loopne
or
add
imul
lret
xor
stos
jno
push
fbld
or
jae
push
and
cmp
ljmp
dec
lret
add
idiv
and
pushf
sub
lcall
jb
shll
and
xchg
out
mov
xchg
cwtl
jge
mov
mov
dec
pushl
xchg
mov
jb
mov
pop
pop
out
adc
mov
pop
js
add
and
sahf
cld
adc
pop
cli
decb
pusha
xchg
lahf
loope
pop
and
nop
jecxz
in
add
mov
mov
push
ljmp
adc
lock
mov
add
inc
rclb
pop
mov
push
dec
or
mov
testl
dec
cld
sbb
into
adc
and
xchg
pushf
loop
mov
ret
cmpsb
test
outsl
xor
dec
addr16
outsl
ret
mov
and
test
mov
mov
test
xorb
dec
gs
rol
jg
or
shll
lock
inc
xor
jge
xchg
pop
push
stc
mov
mov
push
ss
and
dec
dec
push
jbe
insl
enter
pop
in
and
jae
and
mov
sub
mov
popa
push
mov
jnp
rcll
adc
pusha
addb
xchg
test
mov
leave
inc
push
rcll
inc
ss
or
xor
movsl
stc
jg
pop
mov
scas
inc
jae
ret
pop
in
ret
fcoms
mov
pop
scas
and
jae
repz
aaa
or
adc
stos
ret
mov
and
pop
inc
xchg
cwtl
aam
arpl
repnz
adc
les
mov
movsl
pop
sub
lcall
lods
push
cmp
pop
test
insl
or
lods
push
cmp
aam
xchg
test
or
sub
jmp
xchg
jge
rcrb
pop
andl
imul
push
cmc
je
or
jnp
inc
imul
jns
cmp
push
cltd
lods
sbb
or
repnz
adc
xor
fisttpll
in
aam
dec
xchg
xchg
dec
add
inc
xchg
test
xchg
xchg
mov
push
push
dec
fadds
dec
mov
and
xchg
loop
mov
inc
ret
call
out
add
popa
std
repz
aad
push
int3
sub
icebp
jbe
loop
lds
repnz
mov
pop
int3
es
xlat
test
mov
or
sbb
mov
xor
pop
fcmovnu
xlat
ret
flds
test
xor
outsb
lret
xor
int
lds
mov
push
jecxz
or
jmp
loope
mov
andb
dec
cwtl
roll
inc
xchg
inc
pop
mov
add
jo
inc
hlt
mov
pop
xchg
outsb
jecxz
inc
pop
mov
push
mov
xor
loopew
cmp
arpl
pusha
mov
andb
dec
loop
mov
xor
cmp
cmpsb
shrl
sbb
je
aam
mov
jge
push
add
and
inc
sbb
push
jg
xor
call
add
daa
jno
push
in
add
das
hlt
ret
lea
mov
lods
orb
pop
mov
inc
repnz
or
rorb
or
jns
mov
imul
cld
loop
or
jbe
sbb
sbb
mov
lods
fadds
xlat
jecxz
cs
sub
aam
cmpsl
pop
dec
fmuls
pop
push
fcomip
push
pop
or
jecxz
or
xchg
jmp
and
bound
jmp
frstor
xchg
cmp
sbb
mov
addr16
shll
ret
xchg
inc
and
imul
adc
call
and
stos
ficompl
or
and
sbb
jl
xchg
test
xor
fstpt
pop
or
pop
push
xor
fwait
loopne
arpl
pushf
iret
cmp
cwtl
test
pushf
jno
xor
push
pushf
push
and
xor
push
adcl
stos
pushf
dec
and
mov
mov
inc
and
js
jecxz
pop
fdivp
sub
repnz
outsb
push
or
mov
out
cmp
fistpll
int
mov
roll
push
pop
sub
subl
ss
imul
pop
mov
cld
xor
xor
adcl
js
xor
out
mov
loopne
mov
sbb
cmp
mov
daa
out
and
out
icebp
push
mov
mov
adc
mov
aaa
test
mov
fdivs
scas
mov
pusha
out
fimuls
pop
mov
pop
data16
daa
jno
pushf
loop
mov
out
adc
mov
mov
pop
aaa
lret
cmp
fcmovb
in
or
xchg
or
inc
roll
mulb
mov
mov
xor
in
cmpsb
jl
mov
outsb
xor
mov
sti
leave
movsb
insl
xchg
call
pop
in
mov
add
shlb
xchg
out
jnp
fs
xor
jge
repnz
in
cmpsl
test
mov
test
mov
loope
sbb
sub
int3
push
dec
push
mov
cwtl
or
iret
lods
pop
jnp
lock
mov
sub
xchg
adc
es
dec
inc
add
inc
hlt
xor
add
mov
mov
inc
and
or
ret
repz
and
das
xchg
loop
jne
xor
sahf
xor
enter
mov
lea
mov
int
lock
mov
inc
push
cmp
in
and
add
sahf
mov
adc
outsb
and
push
outsl
xor
jp
mulb
mov
adc
in
lock
adc
cmp
into
or
xchg
test
xor
xor
pusha
movsb
cmp
xchg
inc
popa
sbbl
in
xchg
ja
cmp
sub
cmp
add
xchg
pop
push
pop
or
in
insl
push
xor
pushf
add
lret
jno
ljmp
xor
mov
push
imul
mov
seto
movl
in
test
mov
inc
movsl
and
outsb
lods
pop
std
adc
or
sub
adc
and
sub
cs
xorl
add
pop
aas
xchg
cmp
inc
testl
inc
pop
test
test
jge
push
stos
add
scas
out
or
inc
mov
adc
jo
jno
sbb
ljmp
mov
int
sub
cmpsb
cmpsb
rcl
mov
cmpsl
dec
cli
mov
cmp
push
xchg
loopne
and
jmp
ljmp
sahf
sahf
dec
mov
das
push
mov
addr16
adc
pop
loop
pushf
fnstsw
icebp
mov
andl
jl
pop
pop
mov
push
jae
mov
lret
ror
js
test
push
and
jecxz
js
dec
xchg
mov
in
inc
in
ret
out
daa
xchg
pop
popa
lcall
lea
fsubs
or
jecxz
pop
cwtl
pop
jp
fadds
and
dec
mov
mov
jl
jno
inc
into
mov
outsl
mov
sbb
lds
gs
xchg
sub
adc
cs
jae
int
mov
mov
mov
test
lret
mov
cmp
imul
test
pop
jbe
lret
inc
mov
not
dec
or
hlt
push
out
mov
lods
or
rcr
or
sarb
push
in
scas
sahf
inc
imul
dec
mov
in
xor
mov
jns
inc
lods
repz
pop
xor
and
mov
push
adc
fwait
sbb
inc
inc
xchg
and
popa
xor
inc
ljmp
fnsave
cmp
inc
pop
and
test
shll
mov
jmp
pop
popf
das
jge
push
fldt
mov
loopne
fildll
sbb
movsl
inc
adc
inc
lds
and
aam
pop
adc
fidivrl
add
repnz
sub
mov
cltd
sarl
lods
iret
nop
movsl
lcall
aas
movsb
mov
js
scas
insl
xchg
in
pop
cwtl
test
stos
cmp
sub
cmp
push
jns
xchg
mov
mov
aad
mov
inc
push
out
out
mov
enter
ficoms
xor
fwait
or
pop
or
or
ja
cs
mov
push
test
pusha
and
mov
clc
or
fs
cmp
mov
test
pop
push
xchg
pop
and
cmp
int
sbb
in
adc
js
mov
xor
stos
enter
cld
xor
lods
icebp
jnp
adc
dec
in
adc
notl
lods
jg
aad
cmp
mov
les
outsl
sbb
add
stos
jmp
shll
mov
inc
call
push
xchg
adc
jo
nop
sub
popa
ret
enter
or
dec
adc
dec
or
out
nop
jno
fsts
dec
or
xor
or
add
pop
xchg
idivl
rcrl
dec
mov
jns
loope
jl
sub
loope
sti
jae
js
faddl
ljmp
adc
mov
iret
pop
repnz
mov
xor
jmp
in
and
push
mov
inc
push
and
outsb
insb
in
popa
outsl
pop
outsl
jmp
cmp
add
jl
stos
pop
mov
in
mov
lods
push
lea
testb
and
fldt
pop
cmpsl
adc
cltd
js
iret
scas
ja
daa
popf
inc
outsl
lahf
push
rcl
popa
sbb
out
in
pcmpgtd
loope
cmp
mov
ss
inc
push
mov
add
sti
mov
insl
sbb
pop
daa
lds
xchg
jmp
call
jns
mov
ss
cmp
xchg
or
adcb
aaa
jne
stos
les
lret
mov
ljmp
pop
adc
bound
into
stc
sub
lret
lea
add
jns
scas
cmp
call
inc
jle
mov
popa
ret
mov
nop
call
adc
decl
pop
aaa
cmc
fwait
int
or
or
xor
dec
pop
xor
out
jae
sbbl
ret
or
mov
stc
push
lods
mov
jmp
xchg
scas
pop
jne
pop
lret
pop
mov
ljmp
outsl
sahf
push
xor
xchg
idiv
mov
pushl
imul
pop
fldenv
inc
rcrb
pop
sbb
xchg
push
cwtl
jae
xchg
in
cmpsl
stos
out
add
mov
shll
pop
or
xchg
lcall
pop
movsl
or
mov
mov
jp
dec
pop
es
ja
mov
in
test
pop
mov
xchg
mov
sub
scas
push
rcll
out
scas
sbb
fldt
add
int
mov
aas
inc
fwait
and
cli
test
sti
dec
shrb
imul
adc
jg
xchg
cmp
inc
nop
xchg
xchg
pop
xorl
out
push
lahf
ljmp
out
inc
xchg
jmp
and
pop
mov
lcall
xor
add
inc
xlat
scas
sbb
es
mov
xor
jp
sub
lret
fisttps
cmp
pop
test
mov
mov
fildll
mov
push
sub
xchg
sbb
jns
out
ss
dec
es
dec
sub
pop
inc
imul
imul
mov
ja
fldenv
or
retw
jle
call
out
mov
test
lods
imull
ret
adc
lods
shll
cwtl
daa
jb
xchg
add
sahf
arpl
mov
mov
xor
add
ljmp
mov
sub
xor
mov
jp
je
lds
in
in
lret
nop
popa
std
add
repnz
dec
adc
sub
add
add
mov
pop
popf
scas
fnstsw
pop
mov
mov
sub
or
mov
call
jae
mov
push
test
pusha
js
roll
dec
add
xchg
push
add
jns
out
lcall
das
inc
push
pusha
ret
enter
lock
xor
xchg
fwait
idivb
xor
xchg
loopne
cmpsb
lods
inc
xor
mulb
mov
repz
inc
out
pop
jl
fadd
sub
push
sub
adc
add
mov
push
jnp
pop
cmpsl
mov
mov
or
mov
js
leave
adc
jge
ret
rcrl
test
inc
fldcw
imul
xor
je
adc
jecxz
jne
out
lods
bound
aaa
cltd
inc
push
jb
incl
adc
xor
xor
aad
pushf
pextrw
cwtl
test
pop
and
jno
fcmovnbe
std
mov
ror
and
ret
cld
aas
mov
shll
dec
outsb
pop
lcall
dec
adc
inc
push
sahf
scas
fisttps
fnsave
stos
lock
mov
add
test
xor
das
fnstcw
or
repz
mov
mov
mov
cmp
mov
in
lds
sub
dec
unpcklps
stos
aad
dec
sbb
pop
test
scas
mov
dec
in
sub
or
xchg
lahf
pushf
and
cmp
xchg
rolb
add
sbb
es
dec
mov
mov
push
rcrb
jno
loope
ret
sub
jmp
das
dec
push
dec
lret
push
mov
pop
pop
dec
sub
ret
add
fistps
insl
adc
jo
dec
ficoml
out
mov
mov
or
sub
cli
stc
out
mov
test
stc
arpl
movsl
xchg
mov
push
outsb
xchg
scas
xchg
pop
lds
pop
addb
dec
incb
push
adc
mov
divl
enter
iret
or
adc
cli
insb
mov
add
jnp
cld
and
mov
or
mov
push
es
cli
movsl
mov
push
data16
lahf
out
adc
sub
les
mov
leave
aad
mov
sarl
fldt
or
dec
leave
imul
or
roll
rolb
sub
ja
es
cmc
push
lods
dec
push
or
sbb
xchg
fcompl
inc
loopne
out
in
mov
or
cwtl
sub
xchg
dec
or
jae
sub
in
dec
sbb
mov
adc
xor
loop
hlt
inc
xor
xor
in
shr
test
icebp
orl
add
imul
int3
mov
jecxz
adc
ror
outsl
jg
cmpsb
insb
push
xor
insb
push
test
je
arpl
scas
hlt
cwtl
daa
shr
and
loopne
int3
ss
pop
icebp
xchg
push
mov
sbb
aad
shll
xchg
and
mov
cmpsl
test
add
testl
cwtl
cld
jl
call
imul
mov
push
stos
addb
lahf
add
mov
add
mov
push
mov
mov
adc
lods
out
sar
or
lret
push
cmp
test
cli
orb
dec
pop
push
jp
mov
jp
sbb
mov
arpl
lret
mov
xchg
int
inc
loope
dec
dec
sahf
int
add
mov
out
dec
orb
inc
adc
enter
sub
daa
loopne,pt
in
add
xor
icebp
outsb
pop
fstp
sahf
jne
jl
movsb
lcall
xor
cmc
mov
mov
cmp
sbb
inc
frstor
cmp
add
fmuls
sbb
icebp
movsb
xchg
loop
xor
outsl
movsl
jo
jns
pushf
pop
out
adc
xchg
lahf
pop
orb
aas
iret
mov
xchg
clc
push
cmp
sub
les
ds
mov
cli
cltd
sti
dec
xor
or
data16
dec
mov
push
mov
call
lock
mov
stos
out
test
xchg
jne
xlat
xor
adc
out
mov
scas
insl
pop
shl
sti
lret
push
shrb
stc
es
push
stos
repnz
and
and
jle
lahf
fbstp
inc
pop
pop
es
lods
aas
or
jne
dec
outsl
adc
in
insl
sbb
sbb
jmp
rcrb
push
mov
sub
push
cld
dec
fcompl
push
je
dec
loopne
pop
test
movsl
sbb
icebp
pop
inc
sub
mov
clc
andb
lea
lock
or
movsb
lock
pop
cmp
xlat
adc
aas
sti
popf
cmp
fists
jge
mov
in
inc
add
jo
xor
imulb
xchg
mov
adc
lcall
stos
pop
popa
inc
fisttpl
jl
lea
pop
hlt
bound
ljmp
dec
mov
sarl
xor
lods
mov
pop
sahf
sbb
scas
clc
sub
popf
and
js
dec
pop
sbb
pop
lret
jecxz
mov
pop
fimull
scas
mov
int3
fisttpl
mov
xchg
in
jb
xchg
push
mov
push
push
push
lock
fs
sbb
cltd
jnp
cmpsl
leave
adc
lcall
arpl
sbb
repnz
jae
mov
dec
dec
mov
xchg
sub
push
pushf
addr16
into
sahf
notl
das
shlb
mov
sub
xchg
push
loope
xchg
push
ss
push
inc
rsqrtps
scas
in
loop
sbbl
or
hlt
popf
repz
jno
cwtl
stos
orl
ret
mov
es
flds
push
repnz
add
test
adc
or
fnsave
jns
cmpsb
mov
mov
cmpsl
dec
pop
rol
mov
jl
push
int
mov
xchg
stc
xchg
mov
push
or
shll
cld
jle
fiadds
fsubl
push
das
inc
movhps
pushf
stos
mov
jecxz
inc
sbb
mov
push
cmp
ss
xchg
and
xchg
mov
out
inc
das
inc
int3
movsb
push
inc
mov
pop
and
sbb
adc
pop
sub
das
cwtl
lds
inc
rorb
notl
mov
jns
inc
dec
dec
mull
mov
mov
pop
cli
mov
pushf
lods
mov
and
push
add
insl
sbb
xlat
icebp
cmc
popa
cli
mov
cmp
jne
fbstp
fdivr
mov
aas
fwait
lock
or
dec
jne
jg
ds
mov
dec
adc
cs
dec
icebp
enter
mov
jns
sub
adc
and
rcrl
push
cmovae
loopne
push
dec
pusha
je
jge
test
fisubl
cmpsl
aas
inc
pop
fistps
add
mov
cld
outsb
imul
sahf
push
dec
fisttpll
and
mov
pop
ret
mov
aam
mov
ljmp
cli
sub
rcr
inc
add
add
sbb
push
cmp
rorl
aas
out
jle
cld
inc
sti
cltd
or
sub
out
jecxz
jl
mov
pusha
aaa
push
mov
ljmp
cmp
hlt
cmc
scas
adc
push
cmc
add
js
cmp
and
repz
sub
push
sub
xchg
pop
out
mov
icebp
icebp
mov
movsl
pushl
mov
adc
inc
dec
cld
shll
push
push
cmpl
push
ret
fwait
mov
xchg
test
xor
push
xor
arpl
pop
insb
xor
loop
cmp
je
cmp
xlat
push
ja
dec
or
push
xchg
cmc
fiaddl
popa
aaa
adc
mov
pop
cmp
xchg
adc
mov
sarb
or
inc
add
push
mov
dec
dec
xchg
push
dec
dec
jo
iret
es
or
std
lods
push
mov
pop
sbbl
add
sar
push
mov
in
lahf
pop
xor
or
sbbl
add
sub
pop
fs
ret
out
sub
mov
daa
sub
mov
sarl
fs
mov
mov
data16
adc
jmp
push
rep
or
sub
pop
and
fwait
sbb
cmpsb
mov
sub
dec
inc
push
les
stos
mov
inc
mov
imul
nop
cmp
movsl
repz
divb
cltd
popa
iret
lret
cmp
push
sbb
mov
xchg
xor
mov
orb
mov
scas
jns
fcom
cmpsl
sub
stos
fcmovnb
bound
das
mov
std
nop
and
iret
xchg
xchg
outsb
pop
lcall
mov
movb
pusha
popa
rcll
pushf
aas
clc
scas
shl
je
in
jmp
nop
imul
fcmovnu
cmp
jecxz
mov
stos
imul
adc
xchg
mov
xorb
pop
ljmp
jno
mov
inc
jmp
mov
cld
fdivrs
add
cmpsl
std
mov
adc
sahf
jnp
in
pusha
dec
dec
hlt
or
xor
hlt
loop
pushf
xor
jmp
fadds
mov
mov
and
arpl
push
cmp
jge
or
repnz
repnz
arpl
les
rcr
add
inc
sub
mov
mov
jne
into
fwait
or
hlt
sahf
mov
push
xchg
enter
sbb
pop
std
push
jo
and
xchg
in
xchg
popf
nop
js
gs
shrl
mov
adc
adc
scas
xchg
dec
imul
imul
jnp
leave
mov
shll
and
pop
lds
and
and
add
ret
loope
repnz
xchg
jecxz
sub
pop
cmp
xor
shr
sub
sub
jge
xor
jg
mov
jp
adc
sub
dec
fstpt
add
sub
mov
jmp
sbb
fisubrl
xor
in
dec
and
aaa
sbb
xchg
add
mov
lcall
mov
pop
cmc
mov
ja
neg
pop
cs
rcl
sarb
mov
hlt
rolb
inc
dec
jge
mov
outsb
xor
inc
sub
mov
popf
leave
aas
test
push
sar
ljmp
sahf
sbb
xorb
fisubs
iret
jbe
inc
xor
fstl
inc
into
repz
sbb
push
scas
sbb
xchg
mov
xchg
cmp
sbb
mov
imul
adc
sub
int
xchg
lahf
xchg
lcall
test
sahf
iret
stos
movsl
jg
daa
test
inc
cmp
int3
add
hlt
movsb
push
and
adc
inc
adc
mov
mov
pop
add
hlt
shll
jne
add
stos
xchg
cmp
inc
in
out
idivl
cld
push
in
idivl
jae
dec
jp
sbb
addl
lock
jmp
adc
int3
sbbl
negl
pop
scas
or
push
loope
pop
xchg
mov
clc
inc
ror
and
push
sub
inc
mov
inc
lds
jb
push
jl
jno
sahf
mov
lods
loope
cmpsl
push
inc
leave
mov
clc
push
cmp
cmp
jle
mov
adc
mov
in
and
enter
fisubrl
aam
sub
or
ror
jnp
dec
mov
cmp
sbb
add
dec
mov
xor
mov
or
pop
adc
loope,pt
fs
jecxz
pop
mov
aam
cmp
in
sub
std
je
sbb
pop
cs
inc
mov
sbb
push
and
sub
mov
out
dec
daa
mov
dec
jb
jecxz
aam
stc
mov
fstpl
insb
les
mov
jae
xorb
dec
adc
in
mov
int
cmp
dec
jl
mov
jg
jle
dec
pusha
clc
mov
mov
inc
pop
dec
out
fcmovnbe
adc
scas
fdivrl
adc
inc
ljmp
push
stos
xchg
add
fdivrs
hlt
add
xlat
sti
imul
adc
jmp
scas
mov
sbb
dec
cs
sbb
int
sbb
sbb
pop
sub
pop
imul
mov
pop
call
sbb
mov
bound
xchg
inc
and
inc
ret
sub
push
ret
aam
inc
or
hlt
out
or
xor
push
fsubrs
cmpsl
jnp
push
int3
lods
lss
sub
pusha
lahf
dec
hlt
les
pop
shl
out
xor
sub
into
aad
sub
inc
lock
clc
jmp
lock
fwait
cltd
or
int
cmp
or
jl
inc
cmp
sub
add
jecxz
jmp
repnz
and
dec
and
xlat
jl
out
xor
repnz
and
dec
xchg
cmp
std
or
xchg
addr16
inc
rcll
repnz
xor
or
mov
rorl
jne
dec
shrl
cmc
pusha
inc
repz
cs
sub
adc
lea
xchg
scas
imul
loope
adc
fwait
sbb
movsl
sbb
rcl
jmp
adc
dec
sbb
imul
in
xor
xor
mov
mov
mov
ret
sub
mov
xlat
jns
adc
pop
clc
mov
dec
xchg
add
and
add
pop
push
dec
mov
ret
out
fldl
push
xchg
dec
inc
in
movq
cmp
pushf
xchg
out
xchg
xchg
sbb
dec
mov
pop
mov
sbb
sub
dec
jne
das
push
jmp
call
push
outsb
or
xchg
mov
xchg
add
jp
shlb
pop
lods
xchg
or
addr16
imul
test
data16
dec
inc
xchg
ljmp
jo
sub
jo
mov
cmp
je
arpl
xchg
fidivl
jle
iret
xchg
call
bnd
divb
shl
sbb
xor
lods
jl
lea
dec
mov
jbe
fcomps
dec
pop
jp
and
bound
movsl
fidivl
jno
cltd
hlt
es
or
test
jno
in
arpl
es
lock
sbb
adc
enter
pop
scas
ja
dec
dec
daa
xor
dec
or
pop
orb
ret
sbb
xorb
sbb
sbb
mov
ss
adc
xchg
mov
repz
jle
mov
or
push
mov
test
mov
lods
pop
add
movl
sahf
inc
cli
in
loopne
sub
rcrl
mov
or
flds
dec
add
ja
add
xrelease
xchg
clc
lock
hlt
adc
out
sub
mov
push
cld
call
dec
rorb
aad
popl
shrb
in
and
adc
sbb
ja
add
push
mov
add
test
sub
out
int
movsb
mov
dec
in
sub
int3
mov
and
mov
das
iret
mov
pushf
cmpsb
lock
or
add
mov
cmc
jg
fisubl
lret
repnz
test
icebp
test
lods
jp
lahf
xor
rclb
xsaves
cmp
mov
xor
mov
mov
clc
sub
inc
fs
shl
pop
mov
xchg
xchg
fildl
or
cmp
repz
clc
fldenv
iret
xchg
sti
adc
cwtl
xchg
js
adc
pop
out
aam
mov
mov
add
leave
in
jns
cltd
mov
fldt
fmull
sbb
mov
mov
mov
ret
js
jle
xor
mov
jno
add
test
lea
cld
cmpsl
mov
loop
add
ljmp
mulb
js
push
sub
scas
push
adc
add
pop
cmpsl
out
inc
arpl
les
mov
ret
adc
loope
shl
cli
push
pop
pop
out
orl
sbb
out
or
js
push
push
inc
js
aaa
or
arpl
xchg
inc
mov
cltd
xadd
push
aas
ss
jb
dec
push
bound
jns
int
pop
outsl
fildll
andb
xchg
sahf
fxch
daa
pop
maxps
mov
cmp
out
xor
mov
cmpsb
ja
pop
pop
cmc
push
inc
xor
and
movl
int3
inc
cmp
nop
cmp
movsb
lds
add
push
fmuls
js
cmp
lods
notl
scas
out
mov
out
outsl
inc
xorb
test
orl
xor
inc
and
dec
mov
push
lds
push
jmp
mov
pop
ss
adc
pop
mov
fnstsw
xchg
push
lods
lahf
sub
popf
xor
or
loopne
cmpsb
shrb
aam
jne
dec
into
sub
fadd
mov
pop
cwtl
les
mov
cmp
xor
inc
pop
add
js
std
pop
dec
or
xor
push
fwait
inc
fistps
xor
mov
sbb
jae
js
sti
movsl
jae
xchg
imul
loopne
sub
imul
cmp
aaa
inc
xchg
es
arpl
sbb
pop
cli
out
cmpsl
dec
clc
push
mov
lret
es
lret
js
jo
clc
mov
ret
mov
dec
adc
sbb
sbb
inc
iret
loop
lcall
je
inc
or
or
dec
or
fmull
push
pop
int
vmulps
clc
int3
shl
xchg
bound
in
mov
adcb
pop
aaa
xchg
pop
xchg
das
jmp
mov
adc
hlt
inc
ja
or
and
out
lahf
xchg
inc
icebp
inc
pop
push
push
dec
in
test
mov
mov
cld
es
cld
sbb
sbb
inc
outsb
sahf
xchg
repz
sub
in
insl
fadd
cmpsl
loop
lahf
sub
push
cld
push
xchg
daa
clc
adc
or
dec
xchg
out
and
pop
movsb
addr16
jns
movsb
push
jmp
repnz
mov
dec
sub
es
into
push
pop
pop
ret
add
loopne
jl
mov
pop
icebp
or
cltd
fistl
xchg
fidivs
subl
dec
mov
subl
add
sahf
mov
daa
jecxz
fldenv
pop
adc
adc
xor
hlt
inc
inc
out
or
lcall
push
mov
cmp
adc
in
out
push
pop
mov
scas
int3
jnp
into
adc
xorb
dec
adc
add
stc
adcl
sti
out
or
popa
mov
dec
in
lahf
jmp
cmp
dec
inc
fdivrl
daa
xor
leave
scas
cmpsl
push
inc
cli
cs
pushf
jbe
or
icebp
cmp
das
jl
pop
mulb
mov
or
or
pop
bound
out
repnz
inc
ror
add
xchg
and
stos
dec
jae
inc
mov
int3
loopne
fstps
sbb
xchg
add
cmp
notb
pop
jbe
push
dec
xlat
pop
cmpsb
push
std
pop
int3
rcll
dec
jl
test
xor
inc
add
insl
add
mov
push
pop
sarl
mov
dec
pop
xchg
mov
push
cmp
push
pusha
xor
and
mov
jne
jne
xchg
dec
mov
inc
lret
push
jl
cmp
and
mov
mov
adc
xchg
pop
pop
out
cwtl
mov
mov
pusha
push
adc
and
xchg
dec
fs
stos
dec
icebp
out
inc
push
mov
call
mov
adc
cltd
dec
xchg
xor
dec
lahf
fimuls
mov
push
imul
cltd
sbb
sbb
int
mov
jg
xchg
lret
jg
fldenv
sub
daa
syscall
fnstenv
divl
sub
sub
dec
mov
jnp
outsl
dec
and
jmp
pop
aad
arpl
out
test
inc
cs
mul
xchg
adcb
pop
ja
sub
out
out
lret
jecxz
cmp
mov
test
push
mov
sbb
incl
dec
std
stos
pop
rorl
xchg
cmpsb
jg
movsb
outsb
outsb
les
outsb
xchg
sub
rcrb
cld
inc
out
jecxz
push
fs
faddl
mov
dec
mov
lahf
sub
push
mov
mov
add
test
push
dec
icebp
mulb
pop
out
enter
jne
daa
sub
jns
pop
hlt
cmp
cs
lcall
dec
cmp
aas
mov
dec
les
mov
mov
mov
fs
out
or
pop
dec
xor
add
xchg
or
jecxz
mov
pop
cli
fildll
shlb
out
jl
mov
les
inc
mov
or
mov
mov
cmc
sub
xchg
sub
push
lods
pop
into
jl
and
es
inc
ljmp
lcall
xor
xor
arpl
pop
xor
sahf
fcoms
fcoml
jge
add
daa
xchg
jne
mov
ja
ffreep
cmpsl
cmpsb
inc
jns
movsl
fdivr
lock
mov
je
fdivr
rorb
sbb
pop
xor
mov
js
mov
lods
jbe
scas
ja
cmp
sbb
mull
packuswb
xchg
icebp
ror
ret
jne
and
pop
addr16
cmp
leave
outsl
xchg
xchg
xchg
mov
int
cmp
testl
sub
lds
icebp
sub
pop
clc
push
fdivrp
into
push
shl
jnp
or
fstpt
ds
inc
sub
pop
int3
pop
jmp
push
pushf
mov
dec
data16
ret
aad
push
test
adc
addr16
push
xlat
icebp
or
mov
jbe
es
jnp
mov
mov
sbb
dec
test
inc
aas
fcoml
cwtl
add
jns
mov
notb
xchg
enter
fsub
scas
repz
jbe
push
jle
aas
js
fnstsw
dec
mov
fnstcw
pop
repz
int
inc
movsl
mov
and
cld
or
mov
lods
mov
std
inc
call
repz
loopne
cmp
cmpsl
stos
cmp
jnp
repnz
rorl
hlt
mov
sbb
imul
or
mov
es
outsl
sub
call
xchg
jmp
cltd
hlt
stc
xchg
lds
mov
sahf
pop
fsubrl
lea
mov
imul
dec
ja
mov
mov
add
jae
or
and
xor
adc
pusha
jne
mov
or
lret
jge
das
gs
in
stos
pop
add
pop
lds
rdtsc
mov
aaa
sub
and
mov
or
stos
out
fildll
push
xchg
test
rcrb
sub
xchg
cwtl
cmpsl
inc
scas
test
scas
inc
mov
js
ficomps
push
xor
cmp
inc
int
lret
popf
jb
adc
rcrl
sbb
sbb
mov
cs
inc
imul
ficomps
lods
stc
ret
sbb
or
in
dec
dec
dec
int3
push
jno
push
cli
aaa
rolb
xor
repz
ficoms
pop
or
mov
and
pop
jno
cwtl
cmpl
and
in
add
xchg
shl
adc
push
scas
pop
adc
dec
imul
fsubl
push
mov
inc
or
xlat
ret
test
int3
sahf
stc
xor
div
pop
xchg
dec
test
popa
xchg
mov
popa
push
fisubrs
aam
stc
clc
ds
add
cmpsl
jge
adc
les
icebp
xchg
pop
out
push
adc
inc
sbb
ret
push
out
test
bound
or
aam
jb
fs
clc
jo
imul
cmp
jo
jle
xchg
xor
fwait
in
sbbb
mov
out
cltd
cmp
jae
xor
cmp
add
repz
or
leave
push
mov
movsl
js
jl
pop
pop
in
je
and
in
push
dec
mov
jg
jbe
rcrb
test
push
jecxz
pop
xor
cs
fimuls
nop
inc
xchg
jb
adc
inc
fldl
jns
pop
aas
sub
hlt
adc
add
popa
jle
mov
ficoml
push
hlt
popa
xlat
push
addr16
scas
ss
mov
ror
dec
mov
ret
xchg
gs
enter
std
cs
dec
and
sbb
fstpt
adc
outsl
sbb
pop
cmpsb
add
out
fldt
idivl
xor
sub
sub
cmpsb
pop
rcrb
and
lock
sarl
jge
or
adc
jmp
in
in
jge
es
xor
xor
jne
int
aas
movsb
pop
pop
cld
jno
adc
xor
adc
xor
inc
enter
mov
loopne
addr16
test
sti
fsubr
mov
adc
push
pop
bound
repnz
aad
imul
pop
mov
insb
jbe
jg
and
mov
fcoms
mov
inc
test
shlb
adc
mov
dec
fwait
stos
aam
jbe
jp
adc
inc
lds
push
push
in
xchg
andb
cmpsl
stos
cmp
ret
hlt
lock
mov
cmp
adc
addb
push
mov
pop
push
sub
lds
lret
stc
sahf
mov
mov
cmp
repnz
cmpl
sbb
les
inc
xor
orl
mov
nop
pop
mov
popa
sub
dec
ss
mov
sti
pop
faddl
fnsave
dec
aas
sbb
leave
lock
sbb
jg
push
ret
pop
cld
imul
sub
jg
insl
sub
out
xor
push
mov
stos
mov
in
sahf
aad
adc
xor
lret
push
fcoml
pusha
add
or
in
xchg
mov
orl
pop
das
das
rol
mov
push
call
sbb
test
cmp
sbb
or
insl
adc
loopne
jb
out
lods
jb
outsb
push
pop
push
lret
mov
cs
push
test
mov
add
jbe
int
bound
adc
fsts
or
aaa
push
cmp
lahf
push
dec
ret
sub
pop
mov
sbb
out
adc
stos
pop
mov
insb
insl
fisubl
sbb
sub
inc
jmp
sti
enter
pop
orb
scas
dec
ret
mov
jno
xor
inc
jp
mov
jge
mov
xchg
cmp
mov
bound
and
cld
or
inc
mov
sbb
int3
mov
roll
add
xlat
inc
test
jno
gs
out
pop
scas
mov
xor
jb
sub
hlt
lret
and
negl
add
test
sub
std
fcoml
add
in
in
jne
fisubl
mov
jo
sti
jmp
test
ljmp
xchg
stc
test
xchg
push
fdivrs
cmp
cwtl
pop
lea
dec
fistps
bound
push
jae
mov
inc
cli
xor
adc
cli
fnstsw
adc
cmp
pop
in
cmp
mov
push
or
mov
push
dec
cmpl
es
adc
mov
inc
mov
scas
inc
aas
sub
add
das
sbb
pop
gs
das
adc
mov
sbb
fidivrl
sub
dec
dec
test
call
jl
mov
xchg
leave
jmp
inc
and
arpl
icebp
subb
xorb
add
test
jg
xchg
das
xlat
sbbb
rcr
les
scas
add
or
stc
int
mov
fstpt
in
bound
test
mov
mov
and
add
adcb
xchg
jle
push
jmp
xchg
mov
fwait
jnp
fisubs
or
ret
inc
inc
lods
sbb
addl
xchg
push
and
sbb
movsb
or
call
ljmp
lahf
or
or
fnstsw
in
mov
in
imul
jne
sub
leave
push
mov
shrb
cmp
aas
addl
lahf
daa
mov
pop
mov
into
and
imul
pop
repnz
sbb
pop
or
adc
mov
cs
mov
dec
fcompl
lods
adc
push
cmp
iret
mov
dec
push
mov
xor
xchg
adc
xchg
data16
mov
aam
or
adc
inc
push
movsb
add
add
push
fistpl
or
inc
jl
movsl
push
jle
fnstsw
leave
and
repz
mov
xor
out
mov
arpl
clc
addr16
mov
out
test
popf
cmp
mov
lret
stc
lret
push
jbe
xchg
push
and
mov
xchg
jp
jne
mov
stos
jge
addr16
xor
sub
jnp
aaa
hlt
repz
ret
xchg
dec
mov
ss
adc
xchg
pop
pop
jle
xor
and
adc
shr
in
or
cmpl
add
push
jne
xor
pop
fistps
es
xor
sub
pop
imul
sub
or
arpl
mov
hlt
sbb
xchg
arpl
xchg
pop
inc
jae
mov
in
pop
jle
adc
sub
out
jp
rorl
and
adc
shrl
cmp
imul
xchg
and
outsb
hlt
inc
pop
mov
jb
jo
and
cwtl
jbe
or
and
loope
mov
inc
dec
ja
dec
or
cmp
outsb
inc
jno
push
das
inc
mov
mov
fcomi
cld
jecxz
pop
push
dec
cmp
xor
sub
daa
xor
addr16
insl
idivb
es
adcl
adc
jmp
es
jg
inc
xchg
mov
push
sub
addr16
and
fiadds
jae
cmp
fsts
or
fsts
popf
pop
rcr
out
lahf
sbb
in
xchg
sahf
dec
adcb
or
pop
mov
cmpsb
inc
jns
stc
sub
lds
fbld
and
leave
or
lds
inc
or
out
arpl
jnp
pushf
dec
cmp
inc
lods
ret
add
mov
cmp
lret
push
push
jno
int
pop
call
or
xchg
jecxz
aam
popf
inc
je
jns
xor
repnz
jle
cli
sub
mov
pop
dec
sahf
pop
in
jnp
push
push
addr16
cmp
popf
mov
mov
push
test
int3
xchg
cld
lods
lds
inc
xor
xchg
inc
bound
scas
pop
sbb
jmp
push
in
dec
push
inc
add
and
repnz
sub
mov
push
test
sbb
fistpll
test
xor
cwtl
fsincos
in
cmp
push
decb
rorb
mov
dec
fistpl
inc
dec
sbb
push
push
inc
cmpsb
imul
js
lret
jo
lahf
mov
repz
mov
mov
or
pop
mov
sbbb
fildll
lods
dec
fimull
cmp
leave
popa
loopne
mov
xchg
mov
dec
pop
inc
xor
movsl
mov
push
pop
fstpt
shlb
inc
fsubrs
lds
and
mov
push
inc
lcall
mov
cltd
sbb
and
in
aaa
das
les
mov
jecxz
and
test
xchg
pop
and
push
divl
cs
sar
mov
lret
sub
xchg
nop
xor
outsb
not
pop
xchg
jns
and
inc
dec
adc
mov
xchg
mov
pop
outsl
leave
sbb
or
sbb
mov
and
xchg
xor
es
sub
insb
mov
jp
push
enter
jmp
test
stos
ret
sbb
out
sub
xchg
loope
pop
push
pop
inc
popa
xchg
add
jnp
out
mov
lods
cmp
js
enter
push
fnsave
jg
jne
cmp
ss
insb
adc
push
cmpsb
hlt
mov
std
xor
mov
dec
xchg
icebp
xchg
add
jmp
outsb
mov
xchg
or
sbb
in
leave
mov
les
movsl
arpl
and
xchg
and
int
or
jno
xchg
xchg
imul
shlb
lret
or
mov
js
push
in
sbb
ljmp
hlt
lock
dec
stos
jo
xchg
das
sbb
dec
loopne
bound
jae
xchg
sbbb
sbb
test
mov
inc
lock
cmc
or
test
jge
ljmp
pushf
and
aaa
dec
aam
dec
mov
fwait
sub
mov
xchg
out
loopne
test
adc
mov
jo
leave
sub
pop
sahf
jmp
lcall
jne
mov
ljmp
lcall
add
sbb
popf
test
das
xchg
dec
mov
fidivrs
inc
and
or
dec
adc
sub
fists
pop
jnp
icebp
jne
iret
mov
sarl
arpl
sbb
xchg
ret
pop
insb
sub
filds
in
push
lahf
push
gs
xlat
das
stos
sub
push
sti
and
es
pop
subl
subl
outsb
call
add
jb
jmp
mulb
mov
sbb
in
fildll
jg
ds
aaa
sbb
jo
push
sub
testl
fldl
mov
adc
addr16
popf
lock
xchg
sub
mov
into
xlat
shrl
repz
jb,pt
sti
xchg
xchg
movl
push
and
mov
jnp
lret
jg
dec
pop
das
fcoms
adc
xor
aas
call
push
imul
lret
fs
cmp
mov
or
cmc
sbb
adc
aam
scas
adc
lods
sbb
dec
fcomi
dec
xor
cmc
mov
shl
in
cmpb
push
inc
adc
dec
scas
movsl
dec
mov
cmpsb
jae
jb
jp
out
shll
adc
fnstsw
push
jns,pt
cmp
fisttpll
push
xor
call
cld
lahf
xchg
stc
jg
aam
movsb
ror
das
mov
push
push
inc
fldl
xorl
fcompl
cmp
pop
dec
push
push
jmp
inc
or
hlt
push
pop
int3
nop
rorl
mov
push
ss
xchg
sub
fisubs
rcrb
add
call
ljmp
dec
adcb
mov
pop
xor
cmp
mov
dec
mov
jbe
xor
mov
bound
or
pop
addb
icebp
loope
dec
outsl
into
inc
jmpw
sbb
sarb
mov
dec
pop
pop
mov
sub
loopne
lcall
call
stos
das
add
cwtl
dec
inc
cmpsb
inc
sbb
fwait
push
push
mov
cmpsb
sbb
inc
push
pop
out
daa
add
mov
jb
jp
mov
adc
dec
mov
pop
xlat
fisttpl
loopne
ret
pop
test
or
pop
iret
icebp
push
push
adc
sarb
enter
inc
stos
fisubrl
sbb
nop
or
pop
movsb
mov
stos
dec
adc
jo
xchg
mov
mov
sbb
popf
and
mov
test
pop
dec
ret
test
mov
xchg
in
xchg
repnz
rcr
mov
push
popf
sahf
ret
xchg
lret
jno
fadd
xchg
inc
jno
lahf
mov
xchg
add
int3
shrb
sbb
hlt
mov
mov
jae
mov
mov
xchg
xchg
movl
jae
mov
outsb
sub
pop
fiaddl
adc
adc
add
sub
mov
sbb
xchg
sbb
mov
rcll
cmp
mov
sbbb
outsb
mov
mov
sbb
sbb
mov
loopne
pop
sti
and
inc
cltd
je
or
jle
dec
in
mov
jl
xchg
bound
lods
enter
inc
subb
out
jae
mov
mov
imul
mov
das
popf
jae
sbb
pop
pusha
in
lret
int
lods
mov
sub
pusha
sub
and
aam
cmp
mov
ret
and
sbb
push
lods
or
cmp
cmp
stos
mov
in
mov
ret
push
xchg
and
pop
push
push
add
jns
jo
ficompl
out
jno
out
sbb
hlt
loopne
ret
adc
or
or
rorl
mov
jle
xchg
std
mov
ds
mov
ret
ljmp
nop
pop
dec
pop
mov
add
and
bound
mov
lea
push
sub
std
mov
leave
out
sbb
out
xchg
inc
adc
cmp
xor
leave
loope
imul
xchg
xchg
mov
loope
pusha
pop
xor
jle
lea
push
enter
or
sbb
cmp
imul
mov
add
iret
cs
pop
sbb
cmp
xorb
dec
push
adc
cmp
add
int3
xchg
scas
stc
or
jnp
mov
xor
mov
jge
xor
push
xchg
xor
cmpsl
add
push
push
pop
pop
jno
daa
sbb
jecxz
jbe
inc
pop
xchg
cli
repz
xor
out
inc
shrb
jb
pop
mov
push
mov
test
scas
popf
lods
mov
add
popa
xor
dec
mov
outsl
push
xchg
lret
fnstenv
and
cmp
or
movsl
pushf
mov
stos
mov
cmp
das
cmp
xlat
jg
mov
jl
arpl
sti
push
push
mov
in
sbb
daa
push
iret
pop
test
or
pop
and
loope
aad
xchg
xchg
cmpsb
cmp
jo
and
movsl
fcoms
out
das
stos
xor
xchg
inc
push
xor
sub
mov
push
outsb
and
aam
pop
popa
in
nop
std
lret
mov
popa
xor
mov
add
xor
sahf
jmp
stc
push
pusha
in
and
mov
mov
les
cmp
fwait
jo
sahf
jb
mov
inc
jb
subb
clc
movsb
les
jbe
cld
test
xchg
or
push
fisttps
xor
mov
into
mov
add
add
cmpsb
rolb
push
aad
lret
loopne
lods
jo
imul
inc
mov
sbb
inc
jle
or
and
jo
push
std
xor
lock
jb
sub
mov
add
dec
push
lahf
push
sub
lret
jecxz
xor
sbb
dec
lahf
repnz
jl
mov
inc
stc
adc
jmp
mov
mov
or
loope
xchg
lret
pop
enter
xor
or
mov
dec
mov
idiv
and
mov
repnz
sbb
dec
xchg
lcall
mov
add
aam
fcomps
insb
push
mov
cmp
lea
mov
leave
jns
mov
jne
pop
jmp
push
push
lock
rorb
outsl
out
push
jp
push
shlb
mov
pop
or
mov
pop
add
mov
inc
sahf
stos
cwtl
mov
les
mov
push
test
push
inc
nop
enter
loopne
xchg
pusha
aad
lret
mov
mov
arpl
or
test
jbe
inc
icebp
fs
push
aas
fistpl
lret
mov
out
add
pop
mov
fimuls
mov
test
and
mov
aam
mov
mov
mov
jno
lods
push
cli
fidivl
or
test
in
loop
sub
stc
subl
sbb
xlat
fiadds
dec
mov
stos
out
decb
stc
xor
ret
pop
push
pop
mov
mov
lods
xor
das
mov
mov
inc
jecxz
push
pop
in
mov
dec
in
xchg
jb
stos
inc
bound
mov
jmp
jge
outsl
add
divl
jmp
mov
sbbl
mov
dec
or
xor
in
push
mov
cmp
adc
je
cwtl
jmp
mov
iret
icebp
cmc
sbb
pop
fcomps
and
mov
xor
push
imul
sar
rolb
inc
pop
mov
mov
push
stc
iret
push
gs
cmp
dec
pop
mov
jecxz
pop
sbb
outsb
mov
cli
aaa
repz
je
les
xor
sub
icebp
mov
out
call
or
aad
loope
enter
scas
fistpl
arpl
int3
xor
fnstenv
mov
mov
mov
add
pop
dec
dec
xchg
pop
cmpsb
sub
and
adc
mov
and
add
stc
mov
cmp
mov
fdivs
pop
jg
mov
imul
fimull
xor
add
cmp
jecxz
mov
sti
inc
out
pop
dec
xor
out
mov
cmp
sahf
push
mov
rorb
and
push
xlat
push
gs
outsb
sub
xor
rcrl
inc
add
xor
nop
or
insl
pop
repnz
aam
pop
shll
adc
cld
repz
mov
lds
jle
subb
pop
jae
out
cmp
shrl
inc
or
and
vpcmpgtw
hlt
mov
test
nop
popa
jl
add
jecxz
aad
enter
rep
add
sti
arpl
das
push
ja
push
inc
in
push
xor
push
xchg
dec
movsl
push
xchg
sbb
scas
inc
sbb
jne
pusha
test
pusha
mov
imul
loope
rorb
cmc
xor
inc
cmp
dec
dec
xchg
xchg
clc
sbb
loop
xchg
dec
dec
mov
sub
inc
and
in
fistpll
sbb
insl
xchg
sub
pop
pop
ret
fdivs
mov
out
jp
jmp
jl
push
dec
jmp
and
xchg
push
add
add
mov
cmp
jae
fcoml
or
adc
cmp
es
int3
jbe
fs
clc
xlat
enter
mov
shlb
jg
sub
xor
loope
je
loopne
arpl
or
roll
cmp
sub
test
dec
insl
inc
cmpsb
rorl
sbb
lahf
sub
negl
inc
cwtl
jle
mov
push
adc
jecxz
cmpsb
fdivl
sbb
test
mov
xor
cmp
or
pusha
jl
js
dec
sub
popf
test
pop
dec
int
scas
or
sbb
aad
cmpsl
cmp
xor
sub
stos
lea
xchg
jl
add
add
fstpt
push
jno
inc
dec
inc
jp
fneni(8087
and
jbe
push
xor
bound
xorl
in
cmc
pop
pushf
int3
inc
shrb
daa
mov
inc
stos
leave
add
push
and
out
pop
mov
xchg
es
add
push
notb
loop
push
sub
push
xchg
popf
daa
fdivrp
xlat
movsl
decl
out
je
push
or
mov
push
add
cmp
jmp
adc
pop
test
xchg
xchg
prefetchwt1
or
ret
sub
mov
aaa
imul
inc
mov
orl
testb
adc
fbstp
repz
xchg
call
jbe
cli
pop
mov
cltd
lret
mov
sub
in
lcall
add
adc
mov
fisttpll
rcrl
jg
in
inc
sbb
adc
push
in
jbe
cmp
andl
stc
sub
ret
leave
push
xchg
jbe
loope
xor
shlb
lea
inc
loope
in
shrb
in
out
or
dec
scas
mov
and
fstl
cmpsb
aad
pop
sbb
add
lret
stos
push
jne
xchg
push
mov
scas
mov
adc
aam
fwait
xchg
jle
lcall
dec
pushf
dec
roll
xor
dec
and
inc
push
addr16
push
xor
ficoms
in
aad
xor
es
mov
divl
mull
mov
mov
mov
rcrl
lods
pop
xchg
repnz
mov
xor
cmc
mov
dec
jbe
popf
loope
data16
pop
jge
mov
rorb
xor
inc
jmp
cmpsl
and
cmp
mov
popa
inc
stos
divb
jne
leave
push
and
outsl
cmpsl
jl
adc
aad
test
push
mov
jae
cmp
cltd
cs
aas
add
shlb
fiadds
test
jl
orl
cmp
adc
imul
iret
xchg
or
jecxz
test
push
or
in
pop
and
mov
xchg
mov
aas
sub
adcl
cltd
xlat
out
mov
sub
pop
rclb
xchg
les
imul
aas
sbb
sub
imul
fs
mov
sub
mov
or
aaa
or
insl
adc
movb
cmpsb
jg
popa
adc
sbb
fimull
cmp
outsl
imul
jne
ljmp
enter
aad
xchg
mov
pop
pop
iret
jo
ja
mov
cmp
lret
lods
pushf
and
lret
cmp
hlt
fsubl
imul
scas
sti
mov
push
addr16
mov
int
or
negl
xchg
mov
daa
add
xchg
call
jne
pushf
aas
jecxz
jbe
cmp
arpl
mov
push
pop
rorb
rcll
push
ret
aam
jno
cld
push
adc
das
rcll
fcomps
push
cmpsl
cmp
loop
invd
fistpll
insl
out
mov
pusha
add
mov
mov
sbb
cltd
in
scas
and
mov
xchg
cli
mov
das
dec
fsub
repz
movsl
clc
mov
int
imul
jp
pop
jmp
add
aam
inc
cmp
rcrl
inc
mov
cltd
std
dec
cld
jecxz
lock
sub
add
and
rep
das
adc
cmp
or
imul
hlt
popa
cli
xor
dec
aaa
ret
mov
cld
sahf
jns
dec
movsl
sub
call
les
int3
cld
loop
nop
lds
add
bound
inc
insb
pop
in
out
and
idiv
clc
call
inc
arpl
or
push
pop
sub
test
inc
mov
cwtl
xchg
and
jmp
and
jne
xchg
cmp
cmc
js
push
insl
shlb
add
nop
scas
xor
add
rcl
ja
dec
test
sahf
faddl
gs
cld
jnp,pn
mov
cmpsb
add
and
or
sub
into
lea
add
dec
ds
pop
in
adc
pushl
mov
out
sub
data16
sub
outsb
adc
pop
add
js
push
jl
lcall
inc
jl
sbb
imul
mov
ret
cmp
ljmp
ds
adc
adcl
icebp
adc
arpl
push
stos
inc
pop
xor
leave
mov
jnp
push
sub
jg
dec
fs
mov
enter
jb
sbb
push
pushl
mov
mov
scas
icebp
cld
enter
imull
adc
cld
fimuls
push
fs
fwait
mov
jg
stc
js
sub
push
lock
adc
mov
mov
sbb
xchg
pop
test
cmc
test
dec
das
inc
cmp
js
das
sbb
jg
xchg
test
pop
sbb
pop
cmp
sbb
or
adc
adc
xchg
addr16
jmp
pop
rorl
cmpsb
imul
scas
and
cmpsb
push
jecxz
loopne
cmp
test
in
stos
jl
pop
sbb
sbb
je
jb
push
jns
imul
cmpsl
daa
es
xor
xchg
push
dec
xor
mov
xor
sbb
sub
pusha
dec
push
and
sub
jo
jbe
xchg
push
pop
adc
out
ret
dec
add
aam
and
popf
sub
and
iret
lock
insl
testl
divb
test
cmp
mov
mov
xor
js
sub
fiaddl
add
inc
xorl
mov
lea
xlat
sub
pop
cwtl
fwait
pop
sub
mov
push
mov
clc
mov
dec
aam
xchg
or
add
sub
push
cs
cmp
push
cmp
push
int
jge
enter
lock
lock
or
rolb
xchg
loop
xor
jnp
stos
fmulp
xchg
shll
pop
inc
xchg
cmp
mov
push
jecxz
push
jmp
cwtl
and
out
sub
std
cmp
adcb
inc
call
cltd
xchg
push
lcall
and
es
inc
loopne
test
add
test
xchg
sti
ja
lcall
xor
xor
lds
fidivrl
sbbb
imul
sub
or
fidivs
roll
jp
push
xchg
mov
push
jp
xchg
and
in
out
mov
jns
aam
mov
jns
xor
sahf
dec
sbb
push
rcr
repnz
mov
xchg
mov
out
imul
rclb
mov
bound
dec
lahf
stos
mov
push
lret
cmp
int3
pop
imul
mov
mov
mov
fs
or
mov
gs
pop
shl
std
and
fstps
push
and
jne
mov
lret
xor
add
mov
imulb
imul
and
adc
push
iret
mov
fdivrs
shlb
fwait
pop
pop
sub
mov
ds
inc
or
push
icebp
fs
imul
test
js
push
orb
xchg
leave
in
mov
jne
ret
cmp
jmp
das
test
lcall
xor
pusha
mov
lahf
push
xor
xchg
sahf
daa
xlat
cli
mov
jle
push
adc
jmp
orl
test
ja
js
stos
dec
ret
ss
les
test
pop
repz
xchg
inc
add
pop
stos
push
xlat
popa
call
mov
leave
clc
adc
sub
mov
aas
xchg
xor
pop
sbb
aam
movsl
mov
lods
mov
xlat
out
arpl
std
hlt
sbb
sbb
jl
ds
lea
jo
sbb
push
add
mov
fwait
gs
or
out
cmp
int
mov
int3
lea
push
lret
pop
adc
sub
mov
ret
and
insb
xchg
sahf
movsl
xchg
test
cmp
push
jbe
adc
mov
into
cmpsl
sbb
inc
outsb
dec
test
dec
jno
mov
pop
stc
pop
and
sbb
inc
lds
xor
push
insl
cld
cmp
lahf
nop
sbb
mov
das
inc
lcall
movsl
fsubl
jle
mov
jp
add
cmp
and
pop
push
addr16
in
insb
mov
cmp
mov
test
add
push
sub
mov
push
shrl
mov
or
gs
je
in
mov
lahf
mov
outsl
lds
ljmp
in
out
push
adc
or
addr16
nop
aad
fiaddl
gs
fdivl
lock
cld
ljmp
out
inc
stos
lsl
jmp
sbb
nop
imul
pop
in
dec
int3
jle
add
mov
xchg
movsb
mov
jne
aaa
fnstenv
js
xchg
int
mov
pop
cmp
aaa
push
lods
xor
scas
sahf
je
in
sub
arpl
mov
loop
xchg
jge
or
mov
xor
sahf
push
sbb
lret
enter
mov
mov
addr16
xchg
addr16
cmp
pushf
in
in
in
fistpll
aad
mov
daa
jne
lret
pop
ljmp
mov
and
arpl
jae
cmpsl
and
sub
jb
cld
mov
insl
adc
btl
mov
mov
pop
mov
lcall
filds
cmpsb
mov
mov
jmp
fs
push
push
fwait
mov
loope
mov
dec
dec
push
xor
pop
xchg
mov
xchg
adc
push
aam
pop
and
loope
shll
mov
xor
ror
pop
pop
pop
cmc
loop
test
sbb
les
fimull
out
cld
jne
inc
cwtl
sahf
fwait
in
int3
xor
addr16
jo
push
or
sub
js
pop
out
add
popa
lret
sbb
sahf
loope
pop
js
test
lcall
pop
movsl
loop
cltd
inc
movsl
mov
push
adcl
jae
andb
cmp
test
bound
fwait
push
imul
ja
cltd
sub
push
lret
aaa
aas
ds
subl
xchg
lcall
fldcw
push
mov
ror
pusha
rcr
push
lret
inc
mov
loop
push
mov
dec
hlt
subb
inc
pop
push
jne
xor
and
cmp
xchg
leave
mov
repnz
lret
xchg
mov
lcall
add
add
rcr
inc
jl
sub
shl
adc
movsb
cmp
rol
pop
cwtl
mov
es
xor
xchg
cmc
movsb
lods
pop
xor
and
jp
add
sbb
jge
xchg
movsl
mov
add
or
inc
enter
loop
mov
rclb
int3
add
xchg
sarb
cs
xchg
mov
mov
out
insb
adc
xchg
mov
insb
dec
or
push
cmp
fcomps
mov
mov
adc
sbb
or
mov
xchg
xor
pop
jne
sbb
jo
out
sbbb
xchg
and
mov
int3
xchg
fdiv
mov
jne
lds
jmp
rcrl
dec
cmp
inc
pop
fidivs
mov
data16
adcb
sbb
sub
jge
mov
push
mov
pop
and
shrl
mov
scas
popf
dec
les
xchg
test
xchg
test
es
mov
popa
aaa
xor
cmp
lea
push
adcl
test
repnz
inc
jmp
les
dec
or
push
jp
clc
adc
cmp
daa
clc
adc
sahf
mov
or
lcall
cmc
xchg
lcall
test
dec
lods
in
out
push
push
int3
sub
nop
in
xor
xchg
cs
ja
mov
or
push
pop
popf
inc
or
mov
outsl
fildl
in
or
repz
sbb
dec
add
mov
mov
daa
jp
ss
sbb
bound
aaa
sbb
fcmovnbe
fs
jns
loopne
sbb
iret
mov
adc
cmp
lret
addr16
mov
push
rcll
fdivrl
cs
push
nop
mov
repz
pop
rorl
inc
dec
cld
inc
dec
or
and
dec
stc
scas
xor
lds
cmp
and
les
sub
pusha
outsb
dec
fistpll
mov
sahf
inc
negb
or
pop
ja
lcall
xchg
stos
mov
iret
lcall
dec
xor
das
test
insl
decb
sub
movb
rol
stos
and
and
pop
adc
das
data16
insb
call
into
cmp
xchg
adc
pusha
pop
sub
pushf
xor
rorl
aad
mov
dec
cmpsb
cmp
xchg
insb
std
or
pop
call
repnz
in
dec
sbb
std
or
popa
or
int3
fwait
push
pop
mov
jno
or
ljmp
cmp
into
lret
adc
aad
cmp
pop
push
add
addr16
adc
adc
and
pop
pop
mov
pop
xchg
dec
sub
dec
mov
sbb
bound
pusha
lock
dec
mov
mov
ja
ds
xor
cmp
clc
loop
lods
jle
mov
fcompl
bound
mov
mov
xor
fs
int
jne
pop
jbe
push
es
in
int3
sahf
cmp
es
adc
mov
movsl
movsl
adc
lcall
pop
adc
mov
pusha
mov
dec
scas
and
inc
xchg
pop
xor
cs
test
scas
jmp
rorb
ret
mov
dec
int
lret
sub
out
push
jg
sbb
sbb
pop
sbb
cmp
int3
stc
or
arpl
add
dec
add
gs
sbb
mov
sub
or
movsb
popa
fcoml
stos
lcall
in
or
aaa
pop
aaa
xchg
push
cmp
pushf
aad
fidivs
and
push
fld
insl
in
dec
loopne
mov
ret
aam
mov
jnp,pt
inc
jo
outsl
or
cwtl
xchg
pop
mov
xor
icebp
jg
xor
xchg
sbb
inc
testl
mov
jmp
dec
pop
adc
dec
xchg
adc
repnz
lahf
into
mov
jne
adc
mov
dec
mov
xchg
push
dec
rorb
inc
mov
lcall
mov
push
inc
shll
or
dec
mov
dec
rorl
push
xlat
sub
stos
data16
or
cmpsl
fs
enter
cmp
enter
std
push
test
andl
dec
inc
ret
out
andl
push
lods
cmp
fsubrs
ret
test
rol
jl
pop
sub
movl
lret
mov
mov
cmp
jmp
mov
add
into
movsb
les
xor
and
xor
and
outsb
scas
daa
daa
sbbl
movl
pop
pop
subb
jb
fs
movsb
and
add
mov
pop
rol
js
cmp
imul
mov
outsl
push
xor
lret
lret
sahf
loope
mov
fwait
popf
cmp
cmp
xchg
arpl
mov
sbbl
sub
sbbb
mov
shll
mov
loopne
xlat
mov
push
sar
push
aam
push
mov
stos
mov
add
sbb
xchg
and
nop
xor
popa
das
test
xor
les
cmp
cmp
push
into
stos
pop
loop
xchg
inc
jmp
mov
push
pop
pop
cmp
xchg
jb
push
push
addl
in
mov
test
mov
addl
push
repz
loop
test
inc
sbb
mov
in
in
test
xor
or
fcomi
fldcw
jo
mov
or
jnp
add
shlb
sub
pushf
sbb
sbb
addr16
out
mov
les
mov
stc
bound
test
pop
jecxz
les
cmp
cmpsl
and
mov
enter
imul
btc
push
aaa
jg
xchg
cmovs
sahf
mov
cwtl
xor
sub
mov
je
xchg
dec
and
jns
sti
mov
mov
lock
add
sub
mov
aas
adc
daa
and
add
in
jg
out
cwtl
pop
aas
cs
jbe
and
mov
pop
sub
cwtl
cmpsb
or
mov
fdivr
pop
es
sub
mov
cwtl
sbb
lahf
cmc
icebp
xchg
es
mov
jp
mov
lock
mov
gs
fmuls
je
out
jae
sub
mov
jge
dec
subl
jns
and
mov
xchg
sbb
in
dec
push
lret
pop
inc
je
mov
push
mov
adc
mov
mov
jle
imul
push
lret
jl
mov
aaa
xchg
pcmpgtw
mov
aaa
clc
or
test
mov
popa
xor
cmp
dec
outsb
xor
sbb
dec
andl
outsl
or
sbbb
mov
leave
sbb
movsb
lods
add
dec
das
or
cmp
cmp
in
pusha
mov
arpl
jb
mov
aaa
jb
mov
and
in
mov
mov
adc
jg
mov
mov
adc
int
xchg
dec
fiadds
cltd
test
out
bound
xchg
xchg
dec
sbb
pop
mov
and
xor
test
notb
and
mov
cmp
mov
mov
cmp
mov
inc
and
es
pop
sub
into
lods
cwtl
push
test
inc
dec
mov
pop
mov
mov
sub
mov
dec
fs
pavgb
test
mov
jmp
cmp
mov
pop
xor
mov
into
jmp
dec
pop
je
outsb
enter
mov
dec
or
or
cli
inc
xor
in
aam
cmp
cmc
mov
ret
in
test
cld
pop
jge
jns
push
pop
rorb
mov
in
fcmovnb
pusha
shl
dec
fadds
daa
lret
sub
dec
repz
or
imul
xor
pop
sarl
cmp
dec
jl
mov
inc
in
adc
into
xor
mov
pop
push
mov
pop
ret
test
ljmp
and
loop
sbb
js
bound
repnz
mov
into
dec
outsb
scas
cmp
xchg
inc
imul
movsl
or
pop
je
adc
es
add
sbb
addb
je
pop
in
add
movsb
mov
cld
pop
push
loope
jo
mov
pop
scas
test
jae
out
aaa
outsb
push
mov
inc
jne
cltd
int3
sti
cmp
pop
repz
pop
outsl
push
pusha
inc
add
inc
adc
xchg
cmp
mov
icebp
iret
jo
inc
jmp
sbb
popa
aam
jno
pop
stos
outsb
inc
test
ficomps
lea
xor
je
sub
test
xchg
pop
or
int3
push
js
aaa
sub
rcl
leave
clc
jae
fwait
mov
xchg
dec
aad
scas
mov
push
shl
mov
fbld
pop
loope
daa
sub
icebp
jnp
scas
lods
jns
and
ljmp
sbb
adc
andl
imul
or
imul
mov
add
xlat
movsb
mov
cli
ljmp
out
mull
aad
inc
scas
scas
in
call
sbb
repz
repnz
mov
stc
in
enter
jle
shlb
rcrb
jl
pusha
xor
lahf
mov
add
adcb
stos
mov
addr16
or
mov
or
daa
xchg
pushf
inc
xor
lret
sub
pop
push
jecxz
inc
push
or
sahf
mov
cwtl
jg
mov
and
sub
xlat
pop
add
lods
sbb
sbb
cmp
push
fistl
inc
cmpsb
mov
lds
mov
add
mov
cmpl
in
mov
ret
pop
out
pop
pop
inc
imul
push
pop
loope
es
sub
mov
adc
mov
pop
dec
push
xlat
dec
xor
push
or
xchg
sub
or
in
fcoms
adc
aam
cmpsb
xor
mov
and
mov
fucomp
imul
push
dec
and
and
mov
push
testl
push
leave
into
dec
pop
xor
push
das
leave
push
subb
push
inc
push
cmp
fs
or
xchg
push
int
cmpsb
xchg
mov
pop
repz
pop
scas
pop
inc
sbb
mov
or
and
xor
movsb
dec
fldenv
out
fs
cltd
jae
movsb
les
sbb
sbb
add
sarl
sahf
lods
sbb
leave
mov
jb
repnz
or
inc
jmp
inc
cmc
rorb
stc
sub
out
daa
loop
aas
dec
repnz
stc
pushf
dec
je
mulb
mov
mov
xchg
data16
mov
pop
fs
fcomps
xchg
cmp
add
test
imul
ret
mov
in
or
cmp
aam
lret
jecxz
clc
mov
xchg
jecxz
sbb
lret
adc
mov
mov
ret
jo
push
out
sbb
daa
test
je
mov
mov
je
cmp
pushf
lea
test
add
pcmpeqw
pusha
sbb
sub
jo
jl
or
mov
ficoms
xchg
repnz
or
xchg
rcr
sbb
or
leave
lea
aam
je
push
fwait
xor
jl
xchg
sbb
push
add
or
mov
cld
add
pushf
in
popf
dec
or
jnp
shll
mov
scas
shll
ret
xor
pop
ja
push
aas
xor
insb
sbb
test
pusha
mov
test
repnz
lret
pop
scas
push
dec
data16
pop
adc
nop
lcall
jl
loopne
jae
and
or
daa
mov
and
dec
fsts
xor
add
fnsave
mov
cmpsb
inc
xchg
pop
mov
jae
adc
xchg
cmp
push
dec
and
fidivs
loopne
mov
jns
mov
pop
xor
jne
sub
xchg
push
jno
jle
xor
mov
fs
mov
cli
xchg
cmp
movsb
roll
sub
faddl
push
imul
and
push
inc
push
mov
lcall
pop
loope
and
mov
adc
dec
push
jl
adc
in
iret
insb
loope
test
sbb
sbb
loop
mov
inc
es
pop
stc
push
push
push
push
mov
cs
mov
inc
inc
pop
inc
out
popa
xchg
mov
mov
cmpsb
mov
inc
push
hlt
dec
outsl
cs
and
fldcw
mov
or
jle
outsl
jo
dec
pop
adc
dec
jge
mov
dec
sti
and
add
jge
lock
test
adc
stc
fwait
adc
dec
int
jbe
push
rcrb
jbe
insb
xor
test
repnz
push
xor
xor
inc
xchg
dec
clc
mov
lahf
das
pop
lcall
fldcw
and
add
and
mov
sub
xchg
pop
lahf
in
in
pop
insl
sbb
or
ret
add
pop
push
pop
mov
xor
and
jae
out
loop
dec
test
lds
cli
pushf
les
aas
pop
sbb
sbb
int
test
and
xor
xchg
mull
adc
xor
imul
xchg
inc
jmp
xlat
and
leave
fisubrl
jnp
mov
cli
scas
lea
fdivrl
mov
mov
fildll
sbb
ljmp
lods
adc
inc
mov
push
or
add
and
inc
pop
iret
scas
in
mov
pop
lods
outsb
mov
pop
sub
enter
adc
push
mov
mov
stos
aam
loope
shlb
and
setl
dec
mov
test
mov
sub
push
hlt
std
jl
adc
sahf
loop
dec
push
cmp
mov
rorl
arpl
xchg
std
sbb
cli
dec
addr16
pop
lcall
jb
aad
test
cmp
shll
shlb
adc
sub
add
dec
int3
cmp
or
inc
inc
arpl
data16
outsb
jae
aaa
lcall
test
out
out
clc
lods
lock
cld
inc
enter
adc
inc
popa
inc
mov
in
cwtl
and
loop
adc
lcall
and
mov
je
pop
xor
jl
or
imul
addr16
fildll
pop
mov
xchg
dec
xlat
or
ljmp
jle
int
jae
inc
stos
stc
fildl
fstpl
clc
cmc
cld
cmp
loop
add
sbb
repz
orb
mov
fdivr
and
shl
jbe
in
mov
outsl
sti
mov
in
and
arpl
xchg
or
mov
ds
ficompl
aam
lret
call
cli
ss
cmp
jb
in
jge
data16
imul
repnz
stc
inc
and
dec
lahf
lea
loope
add
lret
sbb
insb
aam
push
faddl
dec
cs
jbe
inc
adc
dec
test
jnp
mov
xchg
inc
andl
jae
rcll
mov
lahf
and
push
mov
mov
or
mov
mov
bound
flds
dec
movsb
cmc
mov
int
dec
pop
mov
test
cmp
dec
jg
mov
jnp
ss
loope
movsb
dec
or
les
int3
and
add
repnz
ret
dec
cmp
in
or
pushf
mov
mov
push
mov
sbb
jl,pn
cmp
jge
dec
insb
jg
and
das
pop
jp
inc
lcall
push
dec
fiaddl
xor
pop
aas
sbb
filds
push
ret
ficoml
mov
push
loop
ret
scas
push
les
and
sbb
and
and
sbb
add
jmp
stos
sub
push
inc
mov
insb
adc
xchg
pop
dec
es
jge
jns
dec
mov
jge
push
mov
inc
into
mov
sbb
jns
xchg
push
or
jle
mov
jmp
enter
ss
fwait
int
adc
mov
cmp
scas
lcall
inc
movsl
pop
outsb
pusha
test
mov
xchg
jnp
inc
sbb
mov
repz
jg
xchg
lret
push
into
test
mov
jge
jne
mov
mov
inc
xor
mov
or
lcall
inc
and
int3
xor
cmc
das
adc
insb
xor
outsl
in
jecxz
sahf
sub
enter
mov
or
push
cmp
sbb
fxch
xlat
in
jno
mov
jns
jg
ja
loope
ret
out
jns
xchg
pop
in
mov
rclb
insb
mov
cmp
incl
mov
mov
cmp
sbbl
imul
adc
in
negb
scas
test
cmc
add
in
insl
push
push
cld
cli
stos
rorl
mov
inc
mov
and
pop
mov
inc
cmp
out
pop
imul
pop
str
xor
push
xchg
out
nop
mov
inc
stc
out
nop
rorl
adc
sar
lods
add
xlat
pop
aas
mov
fcmovnbe
nop
daa
cmp
imul
divl
mov
out
xchg
jl
sbb
dec
cltd
add
mov
clc
sub
and
mov
mov
push
sbb
jb
pop
iret
movsb
imul
dec
cwtl
xlat
std
cmp
fst
mov
xchg
pop
add
loopne
mov
or
repz
xchg
lods
test
jp
pop
jo
jecxz
adc
in
mov
fld
imul
lea
shrl
cs
or
cmp
mov
push
outsb
das
cmc
sub
inc
pop
das
and
dec
rorb
cmc
sahf
pop
add
fisubrs
mov
mov
xchg
pop
lock
dec
cmpsl
mov
std
pop
das
dec
leave
inc
push
insb
and
pop
xor
movsl
je
loopne
pop
sbb
jnp
or
jne
inc
push
or
adc
and
enter
mov
call
ficomps
sbb
das
in
fcomi
pop
jmp
xchg
sarb
push
pop
fsubr
xor
push
data16
loope
fisttpll
push
push
shl
test
out
lcall
daa
cwtl
or
iret
fisttps
add
ljmp
shll
dec
mov
xchg
enter
and
test
add
jb
sbb
out
lods
jp
jae
movsl
adc
xor
aas
cwtl
popa
lock
hlt
sub
in
sti
adc
fistl
or
aam
jle
pop
cmp
xor
mov
lods
shll
jmp
xchg
xchg
jle
cmp
mov
push
ror
inc
push
lret
insb
inc
mov
jae
outsb
mov
pop
adc
es
and
mov
xor
repz
scas
hlt
xor
fcmovnb
inc
aaa
lahf
xor
xchg
fsts
adc
pop
mov
out
test
mov
cmp
das
jg
rolb
js
loop
loop
ror
lods
ja
adc
bound
mov
mov
imul
sub
arpl
notl
repnz
xchg
sub
cs
in
hlt
cmc
rcrl
pop
rol
push
arpl
ja
cwtl
push
xchg
pop
shll
mov
nop
push
sbb
fwait
push
dec
aad
shrb
xchg
mov
das
mov
jmp
push
cmp
enter
inc
out
aaa
xor
aam
outsl
pop
in
ds
ja
xchg
mov
test
add
and
push
xchg
cmpsl
mov
call
adc
int
shrl
mov
mov
xchg
push
xchg
repnz
lcall
lods
jbe
jae
mov
cmp
dec
std
mov
in
mov
std
std
fcomi
push
insb
les
mov
mov
test
sub
nop
out
notl
xchg
xor
roll
inc
add
sub
insl
out
test
jb
sbb
dec
leave
mov
push
xchg
dec
mov
out
repz
xchg
test
pop
jns
cwtl
jp
xorl
jle,pt
inc
dec
addr16
leave
ljmp
pop
inc
push
xchg
sub
inc
das
iret
sub
out
cltd
mov
fsubrl
out
ds
cmp
add
arpl
insl
pop
cmp
jns
xorl
pop
cmp
xor
rcl
nop
add
pop
fistpl
lods
imul
data16
or
cli
movsb
insl
fmull
pop
sbb
jmp
es
fisubrl
and
mov
sbb
mov
movsb
mull
mov
push
jne
ret
push
lods
outsb
aad
jmp
dec
and
mov
sahf
sahf
mov
xor
pop
in
push
sbb
pop
cmc
jbe
mov
shl
xchg
mov
mov
out
fxch
pop
mov
es
pop
and
popf
loope
xchg
imul
pop
inc
jecxz
cmp
mov
dec
cmp
icebp
sbb
jne
jnp
rcrl
repz
mov
or
mov
std
push
mov
movsb
mov
dec
xchg
mov
mov
js
std
cmpsl
adc
add
mov
pop
data16
data16
fs
outsl
pop
outsl
push
test
mov
and
stos
outsb
push
cmpsl
pop
sbb
jmp
mov
push
xchg
das
outsw
es
pop
das
sub
sub
sub
les
sti
inc
outsl
inc
insb
popa
pop
lcall
mov
loop
frstor
movsb
inc
pop
or
mov
mov
dec
es
imul
repnz
or
jle
in
test
xor
mov
aas
stc
mov
mov
movsl
aam
mov
pop
fnstenv
xchg
sahf
and
popf
mov
mov
sbb
cmpsl
add
push
adc
and
inc
lods
sbb
aad
jg
cli
jmp
ljmp
ficomps
ljmp
inc
addr16
dec
decb
jnp
inc
pop
int
inc
inc
pop
xlat
pop
xchg
ret
ret
outsb
or
loope
or
mov
xchg
imul
pop
and
test
pop
jno
jo
and
push
add
in
repz
sub
mov
add
cmpl
imul
fidivrl
out
sub
test
shlb
test
pop
icebp
and
sbb
xor
fldl
nop
pop
mov
push
pop
lret
dec
mov
sbb
mov
fsubr
jge
testl
dec
cmp
jge
in
xor
mov
xchg
ljmp
call
pop
pop
je
cmovl
mov
sar
dec
cmp
cld
sbb
dec
leave
je
ret
fst
add
sbb
jl
xor
or
bound
inc
pop
shl
gs
std
lock
ljmp
lods
xor
loopne
rorl
xor
lods
cmp
rorl
imul
hlt
mov
sbb
adc
out
notb
xchg
or
or
ds
add
xor
pop
mov
leave
bound
mov
lea
outsb
mov
fldcw
jmp
mov
test
testb
popf
xor
outsl
push
mov
push
sub
mov
iret
jae
xchg
push
loop
jb
js
cld
bound
leave
xlat
mov
add
sbb
loop
mov
mov
cmpsl
insl
lret
leave
sub
push
fdivrl
pop
out
aad
push
mov
xor
xchg
or
orl
sbb
repz
mov
popa
divb
or
mov
int3
push
stc
mov
jae
scas
outsl
mov
adc
lret
jbe
and
or
scas
cltd
inc
popa
outsl
lret
adc
or
cmp
lcall
adc
loop
loopne
or
cmp
jle
lret
rcrb
xor
out
fdivl
push
inc
mov
fildll
cmp
int
xor
xor
jmp
fistpl
pop
sbb
sbb
call
sbb
xchg
shl
push
repz
idivb
pop
jp
aam
add
ss
and
jae
cltd
ljmp
pop
sbb
dec
lds
lea
rolb
arpl
loopne
fildll
xchg
jnp
movsb
nop
or
aas
inc
xor
jo
adc
outsl
rcr
int
pop
mov
ret
sub
jae
imul
fwait
out
xchg
outsl
adc
jecxz
test
addb
xor
xchg
imul
jecxz
jne
fs
mov
xchg
sub
push
rcr
jl
sbb
bound
cltd
jno
add
dec
arpl
insb
cs
fildll
cmpsb
adc
test
into
cmc
repnz
dec
mov
das
jl
add
pushf
inc
fxch
lock
push
mov
xchg
sti
sub
mov
into
ret
and
ds
data16
sbbl
test
mov
inc
pop
mov
mov
push
xor
mov
adc
fsubrp
roll
hlt
nop
rol
sub
xchg
lock
adc
inc
clc
daa
cmpsl
fmul
push
xor
mov
jecxz
jno
clc
and
push
dec
mov
add
inc
scas
lods
lods
pop
enter
jnp
jl
enter
ror
xchg
jg
sbb
sub
inc
lods
pop
or
je
cs
daa
xor
adcl
jns
xor
cs
pop
and
mov
pop
mov
jle
movsl
nop
movsl
aad
sub
xlat
push
adc
hlt
js
adc
out
and
aad
push
add
popl
ljmp
mov
ljmp
insb
sub
repnz
sub
mov
cmp
sub
dec
jg
or
pop
addl
cmpsl
pop
stos
jecxz
loop
mov
in
sbb
enter
or
mov
xorl
mov
add
add
into
cmp
adc
mov
int
call
jae
sahf
add
std
jo
xchg
pop
mov
nop
pop
add
mov
fisubs
movsl
fcomip
int
mov
dec
iret
loope
cwtl
sbb
sub
push
xor
sarb
lods
xor
je
aam
mov
das
sbb
int3
scas
movsb
and
adc
js
xchg
jle
in
and
push
push
dec
popa
fdivs
mov
pop
and
into
shll
in
je
in
xchg
ljmp
lock
inc
sub
mov
in
nop
das
mov
jns
push
pop
push
and
arpl
push
sahf
inc
jmp
iret
sub
es
pop
aad
lea
or
push
cmp
outsb
mov
mov
out
icebp
js
cmp
addr16
aas
data16
pop
sub
sub
scas
mov
inc
cmp
dec
test
pop
das
outsl
pop
pop
into
mov
movsl
fistl
fldt
xchg
and
cltd
stc
jecxz
push
daa
and
and
addl
sbb
les
cmp
jl
hlt
add
sbb
mov
pop
scas
jge
push
leave
xor
stos
ret
pop
out
and
in
movb
out
test
jo
call
and
dec
pop
xor
pop
daa
or
push
cmpsl
insb
xchg
jecxz
scas
outsl
mov
lret
inc
push
pop
and
jae
pop
jecxz
sub
add
aad
leave
arpl
je
cmp
jmp
fisttpll
cmp
dec
into
lods
sbb
mov
push
int3
fsubrl
and
xchg
dec
loopne
jo
push
test
xor
adc
lahf
mov
inc
mov
push
outsb
and
shl
stc
fcmovbe
dec
scas
cmp
cld
dec
outsl
fwait
inc
and
lods
xor
gs
jle
test
mov
inc
dec
inc
push
push
and
imul
xchg
dec
outsl
addr16
ljmp
jae
cli
ljmp
mov
adc
sub
xchg
jne
xchg
pop
mov
inc
stos
test
loope
push
dec
sbb
fidivrs
and
popf
adc
gs
dec
mov
test
ret
stos
neg
icebp
jge
cmp
mov
ljmp
call
mov
fidivl
fwait
popa
mov
mov
int
popa
fwait
das
adc
xchg
mov
sub
popa
xchg
or
je
mov
push
push
xchg
fs
xchg
jae
mov
xor
js
and
or
aaa
xchg
mov
push
nop
mov
fisttpl
fcmovnb
sbbl
add
or
out
das
lahf
xchg
and
sub
enter
xchg
das
adc
sub
cmpsl
and
pop
mov
shll
ljmp
sahf
adc
mov
add
adc
dec
loope
xor
lods
push
ja
loope
xor
sbb
xchg
fcomps
xchg
pop
mov
jl
lods
adc
inc
nop
pop
scas
cmp
daa
je
push
sub
mov
sar
loop
mov
jmp
adc
test
cmp
dec
mul
and
sarb
incb
test
sarl
xlat
dec
dec
fldenv
push
sbb
test
pop
insl
push
mov
outsb
test
aad
adc
jno
insb
jecxz
sbb
xor
and
sub
push
jg
adc
mov
icebp
adc
fstl
and
out
mov
adc
pushf
adc
push
add
repz
mov
lret
cmpl
insb
ss
xchg
inc
popa
jmp
out
dec
cmp
loope
js
popf
testb
add
jnp
ret
dec
rolb
add
test
and
pop
push
push
fs
lcall
mov
and
cmpsl
pop
dec
add
sbb
repz
out
jno
aas
out
inc
repnz
arpl
aaa
daa
mov
and
dec
and
xor
push
push
daa
xor
bound
mov
enter
test
or
out
adc
xchg
cmp
adc
sub
lods
ret
lret
cmpsb
adcl
pop
enter
mov
shlb
sti
fdivrl
pushf
hlt
sahf
xchg
inc
pop
pop
ret
mov
sub
inc
pop
sti
push
push
jp
ror
push
jo
and
cli
ja
xor
lds
std
adc
popa
aad
pop
clc
dec
daa
mov
sub
jmp
pushf
jo
sbb
movsl
and
repz
aam
sub
loopne
shr
es
push
push
imul
mov
outsl
add
pusha
rcll
add
inc
stos
or
xor
dec
stos
mov
xorb
das
mov
adc
das
cmp
aam
fisubs
or
jmp
pop
or
sbbb
and
mov
nop
mov
ret
test
bound
mov
pop
lcall
filds
xor
leave
insb
lock
outsl
orl
sub
push
inc
or
sti
int3
cmpl
fdivrs
sub
loope
je
jns
inc
mov
jbe
and
stc
pop
push
or
jb
daa
cld
les
lcall
cltd
push
sub
mov
or
ret
push
and
or
add
mov
sbb
test
mov
and
pop
test
jb
decl
cmp
pop
fucomip
rep
enter
fs
cmc
inc
xor
hlt
inc
mov
jmp
adc
stos
loopne
dec
pusha
cmp
sub
dec
gs
and
cwtl
lock
in
icebp
sbb
inc
push
lret
into
xchg
aaa
fwait
add
loop
outsb
sarl
ret
xchg
mov
xorl
sub
iret
out
and
xlat
bound
push
and
push
mov
and
mov
sbb
pop
mov
jno
in
sub
nop
add
push
int
fnstsw
jecxz
int
in
xchg
push
in
iret
rep
jecxz
cltd
add
frstor
insl
inc
cmpsb
imul
sub
fidivs
imul
or
into
sti
in
testb
push
dec
repz
jo
add
rorl
xchg
arpl
push
out
push
std
notb
xchg
and
clc
fisubrl
dec
adc
cmp
pop
add
das
push
leave
rolb
lds
lcall
ss
sti
ret
adc
xlat
push
jecxz
dec
mov
sbbb
cld
adc
push
or
pop
icebp
mov
adc
test
fstps
jp
add
push
xchg
cli
dec
out
mov
inc
cmc
in
hlt
es
or
inc
mov
data16
sahf
inc
mov
mov
fiaddl
push
ja
push
dec
cs
push
pop
fstps
fcompp
das
adc
push
pop
ud0
movsb
xchg
movsl
call
int
loopne
dec
inc
test
adc
fwait
mov
adc
test
cmp
mov
jo
xor
loop
inc
pusha
mov
notl
ljmp
rcll
pop
repz
call
mov
je
stc
fadd
out
sti
jb
popa
mov
mov
or
mov
jle
mov
cltd
sbb
cmpsl
jmp
mov
pop
scas
push
orl
xchg
cmp
scas
pop
daa
imul
daa
inc
dec
cmpsb
add
xor
pop
sahf
sub
and
inc
push
mov
stos
jle
jnp
shl
stos
jns
push
cmp
sti
cli
into
sarl
in
mov
sbb
mov
flds
enter
mov
movsl
push
cmp
subl
add
dec
mov
pop
out
popf
sbb
pop
imul
fwait
adc
inc
stc
pop
adc
loopne
and
mov
and
lods
add
and
mov
mov
mov
mov
cmp
mov
add
sub
mov
mov
int
cltd
dec
jnp
adc
stos
add
lds
roll
and
sti
add
pop
xor
daa
ss
test
inc
test
das
xchg
pop
adc
mov
lods
loopne
push
add
cmp
scas
out
mov
test
test
cld
mov
and
in
loope
into
add
xchg
sbb
cs
sub
scas
movsl
push
enter
stos
inc
add
dec
sahf
push
xor
jl
jns
pop
lds
cmp
lock
in
pop
rorb
lret
push
push
push
lcall
adc
jge
adc
push
lahf
jle
xchg
flds
stc
stos
fsubr
xchg
sbb
inc
xor
pushf
push
pop
cli
cmpsl
inc
stos
fisttps
or
dec
stos
and
push
mov
cmp
inc
dec
jge
and
or
inc
cmpb
jl
pop
test
aas
aaa
cmp
inc
repz
and
imul
es
xor
daa
adc
iret
pop
jmp
int3
lretw
fbld
adc
jl
jle
lods
data16
pop
pop
in
inc
mov
dec
pop
pop
jno
xchg
repz
mov
push
fdivrl
and
add
push
test
aas
rcll
rorb
push
mov
icebp
insb
or
outsb
mov
cmpsl
cs
pop
mov
sub
nop
aaa
xchg
jno
inc
daa
orb
cmp
and
pop
xor
push
or
testb
in
pop
jge
push
sub
mov
mov
loope
fwait
jae
ret
rorb
cmpsb
xor
xorb
cs
xor
jmp
clc
test
in
shrb
inc
aas
lods
push
test
mov
push
nop
test
movsb
mov
loop
cltd
add
sbb
mov
cld
lcall
fmuls
mov
mov
fwait
mov
xchg
or
ror
mov
sub
push
or
pushf
lret
mov
mov
sub
xor
sub
xor
jno
daa
fs
pop
adc
sub
pop
je
pop
lock
mov
and
sub
push
adc
mov
cmp
mov
mov
mov
adc
and
repz
fmuls
and
ljmp
fcompl
jnp
pop
push
pop
mov
shrb
push
test
push
addl
cmc
call
add
pop
cmc
push
sahf
mov
xchg
sbb
xor
xchg
int3
xor
call
adc
mov
in
push
jg
sub
dec
jmp
dec
mov
push
cmc
push
mov
and
xchg
mov
inc
lcall
xchg
sub
inc
add
iret
enter
sub
shlb
push
xchg
lcall
jecxz
pop
jecxz
inc
insl
imul
outsb
dec
cmpsb
pushf
xorl
jne
cmp
repnz
outsb
xchg
xchg
pushf
sbb
or
fistpll
sbb
or
hlt
pop
jo
pushf
cmp
cmc
pop
sub
test
pop
scas
cmp
jp
cmp
mov
cmp
push
fnop
add
out
inc
push
ret
frstor
cmc
inc
into
xchg
hlt
dec
mov
jp
push
fidivl
daa
xchg
cmp
inc
xor
sub
xchg
add
jmp
repnz
inc
mov
mov
test
or
das
fcmovbe
dec
mov
sbb
jle
push
sub
dec
shrl
or
mov
push
ret
cmp
sub
mov
xchg
jmp
fdivrs
bswap
lods
imulb
test
mov
fiadds
add
push
fcoms
cmp
imul
add
adc
insb
add
inc
push
mov
es
sbb
fistl
into
jbe
xor
daa
mov
jle
popf
ss
push
test
movsb
cs
cmpsl
xor
iret
mov
fbld
push
mov
ret
pop
mov
mov
push
call
shrb
jmp
outsb
or
push
xor
inc
sti
cmpsl
xor
rep
mov
and
cmp
xchg
pop
movsl
pop
push
lods
cmpsl
fldt
xor
stos
test
jecxz
lods
xchg
dec
jl
add
mov
inc
jae
decl
aas
lret
cli
jns
ss
subb
jle
xabort
sbb
testb
push
sub
jge
fcompl
add
loop
arpl
dec
fcmovnbe
xchg
fadd
outsl
out
jb
das
sti
lods
loopnew,pt
mov
sbb
jg
and
push
into
jns
out
cltd
dec
push
cmp
push
mov
daa
roll
push
ja
jae
lods
rcrl
pushf
xor
movlhps
jmp
pop
push
or
push
xchg
imul
mov
mov
or
and
popa
jmp
iret
xchg
subl
sbbb
ficompl
mov
or
cmp
pushf
out
mov
scas
mov
pop
add
xchg
mov
dec
mov
jno
rorl
test
ret
mov
cmc
ret
inc
add
cmp
cmp
popa
jmp
dec
ficoms
xor
inc
add
jnp
icebp
arpl
lds
scas
nop
out
xor
dec
and
insb
bound
and
pushf
sub
outsl
out
shrb
fisttpl
out
dec
insb
sti
cmp
mov
add
sub
nop
inc
inc
push
dec
push
and
or
add
xor
and
ja
pushl
mov
fwait
inc
push
sarb
and
subl
out
jo
add
xor
into
pop
outsl
mov
loopne
mull
aas
pop
push
das
inc
mov
test
mov
fnstcw
inc
movsl
adc
nop
pop
add
mov
lcall
sub
clc
jno
sub
or
cmp
jmp
loope
cmp
jmp
cmpsb
lahf
pop
mov
out
addb
pop
popl
push
push
ret
and
push
popa
insb
das
and
cmpsb
test
push
orb
lods
sarb
or
dec
stos
shl
pop
jmp
pop
push
es
inc
in
or
cwtl
cmp
rolb
pop
fwait
xchg
popf
sub
push
orl
jne
push
jb
bound
mov
add
lcall
sbb
out
push
add
cmc
pop
xor
pop
add
push
mov
mov
dec
pop
daa
adc
and
in
call
pop
fs
stc
mov
lahf
xchg
inc
fucom
mov
stos
xchg
cmp
stc
aas
roll
loop
mov
jg
or
pop
inc
jne
fstl
jo
loopne
mov
scas
xorl
movsb
inc
ss
jb
mov
je
dec
mov
pushl
xor
popf
jl
stos
sub
mov
fisttpll
mov
es
dec
xor
stc
int
pop
icebp
add
sbb
sub
lret
inc
inc
cs
adc
das
push
adc
daa
adc
cmpsl
stos
add
decb
jmp
or
ficomps
cld
mov
in
adc
jns
and
mov
and
out
and
xor
inc
lret
movsb
stos
sub
in
or
and
xlat
fstpt
pushf
push
js
dec
cmp
or
imulb
lahf
test
add
aaa
fmull
xorb
cmp
or
movsl
rclb
sbb
movsb
jbe
popf
fisubrl
mov
add
iret
xchg
adc
shlb
das
sbb
and
jo
jmp
jbe
add
fimull
aas
mov
add
jl
add
sub
xor
jbe
xor
movsb
fs
es
adc
aam
pop
popw
data16
sbb
movsb
fwait
icebp
fnstcw
push
cmp
mov
imul
push
jge
dec
outsb
push
fnstsw
adc
and
and
sahf
adc
jae
dec
test
popl
jmp
scas
dec
xchg
xchg
cs
in
addb
stc
push
jl
imul
dec
dec
or
xchg
pop
addb
adc
test
in
outsb
mov
add
fbstp
dec
and
mov
or
popf
fisttpl
scas
xor
cmp
jecxz
adc
pop
lock
cltd
mov
shlb
stos
cli
fistpll
fs
push
vmovsldup
dec
les
xchg
movsl
mov
lea
ret
aaa
arpl
leave
jo
aam
cmp
shlb
call
sbb
pusha
jbe
faddl
out
push
lahf
leave
adc
iret
adc
add
rcrl
pop
push
lcall
or
ljmp
cltd
out
mov
sahf
and
cltd
into
xchg
arpl
cmpsl
cmp
imull
xchg
xchg
inc
xchg
imull
out
dec
loope
mov
cs
les
push
mov
sbb
push
out
push
cmp
pop
mov
xchg
xor
and
jecxz
cmp
mov
and
jp
bound
pop
ret
mov
loope
pop
aas
mov
push
xchg
imul
loop
mov
cmp
lahf
or
stos
lock
jecxz
rorb
mov
lds
sbb
push
lcall
hlt
int
bound
sahf
adc
jp
loope
sub
pop
dec
pop
loope
inc
xchg
cmp
cmp
es
scas
arpl
fsub
jb
inc
xor
cld
inc
xchg
lret
cmp
in
add
cld
sub
xor
imul
jmp
mov
notb
lahf
leave
in
dec
add
sub
testb
test
repnz
pop
pop
mov
push
cmp
and
inc
shrb
dec
loope
mov
imul
sbb
adc
jmp
out
lcall
xor
mov
in
movsl
shlb
push
fldl
test
or
xor
pop
push
mov
mov
push
shrl
fcoms
push
cltd
faddl
stc
sbb
in
movsl
andb
outsl
fistpl
pop
out
in
hlt
out
inc
lock
xchg
ret
mov
out
daa
out
pop
xor
jmp
mov
mov
test
add
call
std
push
add
scas
jno
mov
ljmp
leavew
jp
outsl
stos
mov
dec
push
mov
pop
shll
lods
cmp
sub
ss
mov
outsb
movsl
inc
fnsave
jge
movl
xor
test
ljmp
xchg
bound
cltd
outsb
movsb
fdivrl
sbbl
add
sahf
dec
fisttpll
fistps
loopne
add
iret
push
sub
fadd
inc
push
lcall
ss
enter
mov
shr
push
or
mov
std
outsl
aad
pop
mov
mov
dec
in
fs
mov
mov
mov
fisubs
pop
loop
sbb
das
push
fdivs
ljmp
cmp
sub
jne
mov
cmpsb
mov
inc
sbb
std
or
int3
aas
mov
xor
popf
mov
mov
cmp
push
or
pop
pop
ret
arpl
repz
in
mov
shr
xor
cmpsb
cmpsl
scas
mov
adc
inc
iret
inc
dec
scas
shrl
or
mov
mov
cmpl
js
call
into
addr16
jecxz
test
push
pop
sbb
mov
std
repz
and
adcl
gs
cwtl
repz
ret
jecxz
fs
sub
and
mov
loopne
push
xlat
fcmovu
add
cld
dec
les
add
push
test
and
push
movsl
jne
stos
es
mov
and
push
xlat
sub
in
cmpsl
push
mov
mov
icebp
adc
js
xchg
fists
sbb
daa
push
mov
into
ljmp
xor
ret
pop
popa
dec
aaa
and
lret
repz
call
push
adc
mov
xorb
push
imul
add
mov
xchg
mov
adc
adc
xchg
cmpb
loope
pop
es
jge
jecxz
dec
ret
sbb
pop
or
jecxz
movb
ljmp
pop
cmpsl
fdivrs
pushf
sub
subl
push
imul
sbb
jl
stc
aad
std
lock
pop
or
and
cli
scas
lock
sbb
nop
mov
or
syscall
in
shrl
into
mov
lret
test
push
xchg
ljmp
jns
inc
sbb
lahf
es
test
push
test
adc
nop
jg
jns
ret
imul
ds
les
aas
out
and
cmpsb
mov
fcomps
loop
jne
sti
xor
es
pop
mov
lea
mov
es
int
rcrb
mov
movsb
cmp
ds
xor
add
test
pushf
cli
cmp
in
add
mov
leave
sub
mov
mov
push
add
ficompl
push
and
into
xchg
xchg
adc
nop
pop
ficoms
insl
mov
and
psubb
xchg
out
dec
mov
insl
loop
loopne
jb
in
rorb
xor
jbe
mov
test
cmp
cmp
sub
mov
xchg
inc
cmc
inc
shrl
jmp
dec
test
testl
cwtl
inc
mov
lahf
adc
fs
ret
mov
push
or
fwait
mov
xorb
dec
das
dec
in
ds
adcb
cmp
sahf
cmp
insl
add
xor
daa
imul
ret
pop
add
fiaddl
mov
stc
and
movzwl
inc
cld
lods
inc
mov
outsl
mov
sahf
jnp
pusha
lds
lret
pop
pop
sarl
jne
jmp
hlt
lods
or
xchg
cli
int
or
ja
pushf
xchg
fsts
or
xor
sbb
iret
ljmp
and
mov
add
faddl
insb
inc
xchg
outsb
loopne
jmp
dec
iret
pop
jl
and
lahf
loope
movb
mov
dec
mov
dec
xor
pop
cmp
inc
jo
jne
push
lcall
push
xor
lods
aaa
out
dec
aaa
dec
out
fwait
pop
mov
clc
fistpll
jb
pop
subb
mov
aam
mov
jecxz
mov
mov
xchg
sub
push
repz
notl
fbstp
xor
xor
xor
adc
gs
and
xchg
cmpb
push
ja
shr
shl
js
ja
adc
test
pop
mov
shll
pop
cmpsb
hlt
adc
pop
popa
dec
pop
cltd
ss
mov
or
ss
add
pop
sbb
test
test
sub
add
arpl
mulb
and
test
jg
imul
mov
xor
test
fimuls
xchg
data16
ja
push
test
dec
dec
adc
jl
cmp
push
xlat
sbb
in
jp
inc
push
fwait
xorl
movsb
dec
mov
lahf
repnz
aas
cmp
sbb
gs
push
or
roll
sub
jp
int3
dec
pop
mov
xchg
mov
lds
and
xchg
sub
jg
and
inc
les
inc
push
clc
lds
xchg
jl
lahf
xlat
aaa
rolb
sbb
je
iret
stos
adc
or
pop
adc
jge
scas
xlat
insb
xchg
or
mov
xchg
inc
pop
lahf
add
sbb
cmp
xlat
jbe
push
xor
adc
cwtl
mov
rcrl
dec
inc
jge
sub
and
dec
and
in
xor
mov
mov
and
pop
mov
out
and
cmc
push
mov
pop
xor
out
out
shlb
xor
in
js
adc
aas
test
fstpt
cs
out
pop
sbb
out
sbb
fs
push
in
pop
fwait
dec
pop
dec
ror
adc
decb
pop
push
mov
lods
xchg
and
enter
icebp
add
dec
cmp
loope
jb
insb
js
scas
nop
mov
inc
and
cmp
cmc
out
dec
cmp
and
lret
in
fistpll
xchg
mov
addr16
leave
or
sbb
mov
or
adc
roll
dec
lret
jmp
cltd
sub
mov
addl
push
std
lret
dec
popf
push
inc
pop
lock
es
call
pop
or
pop
sti
jnp
jnp
pop
adc
or
rorb
mov
cmp
jbe
dec
pop
pop
xor
mov
lahf
xor
stos
cli
mov
mov
enter
xchg
dec
add
xor
inc
xchg
adc
outsl
push
loope
div
and
lret
ds
cmp
out
cmp
lahf
mov
clc
pop
push
mov
ret
xchg
push
adc
jle
mov
out
lcall
and
xor
test
mov
bswap
int
xchg
ret
xchg
clc
movsb
mov
push
int3
push
aam
lods
fsts
mov
jo
mov
stc
pusha
or
cmc
jecxz
std
lds
or
push
in
cld
or
and
fsubrs
add
scas
inc
dec
js
mov
push
imul
pusha
cmp
lret
inc
bound
xlat
or
mov
movmskps
ret
cmpsb
inc
push
push
cmp
pusha
popa
push
lret
pop
stos
mul
dec
loope
inc
xor
jp
cmpsl
mov
pop
test
das
push
inc
rorb
dec
push
sbb
ss
and
add
sahf
mov
lahf
add
rol
shr
or
shr
test
mov
shrb
push
inc
nop
mov
sbb
mov
xor
cltd
cwtl
sub
pushf
and
in
ret
cmp
jmp
iret
cli
roll
and
imul
sbb
repnz
jns
cld
rcrb
fstl
xor
pop
loop,pn
es
mov
pop
inc
and
add
ffreep
fisttps
jle
stos
mov
and
or
lret
mov
dec
in
lods
es
mov
xor
jmp
jae
scas
xchg
outsl
cld
addr16
sub
cs
fimull
test
js
icebp
cmp
ja
out
cmp
xor
xchg
mov
les
jbe
popa
lds
scas
iret
jl
mov
ret
call
ficoms
mov
popf
pop
ret
inc
mov
push
daa
mov
cltd
or
push
xor
or
dec
mov
lds
jb
popf
pushw
in
xor
pop
mov
arpl
jno
and
push
ljmp
mov
into
xlat
xchg
mov
add
mov
lds
pop
call
leave
or
jbe
pop
inc
repnz
in
lret
and
jne
dec
aas
jb
lahf
sbb
into
movhps
dec
dec
stos
mov
and
xor
and
jl
xchg
insl
xchg
mov
nop
xlat
jge
rcrl
movsl
rcrl
dec
ja
lret
shrb
mov
push
sub
push
ljmp
pop
sbb
xor
mov
xor
add
outsb
int
mov
in
and
adc
jno
push
or
adc
rsm
pop
imulb
ret
dec
xor
nop
sub
pop
pusha
insb
cltd
adc
adc
adc
mov
cs
xchg
icebp
fisttpll
dec
sbb
xor
dec
pop
and
cmpsl
cld
sbb
add
push
mov
pop
mov
test
test
xchg
arpl
jecxz
pop
out
lock
loope
test
push
shlb
jp
int
cs
lods
push
jg
lods
lds
xor
mov
mov
adc
insl
jp
and
insb
out
stc
mov
dec
jb
push
scas
fstl
xchg
cmp
mov
xchg
popa
int
lds
lea
sbb
movsl
fimull
inc
cli
inc
push
stos
scas
mov
adc
data16
push
cld
jmp
mov
lahf
pushf
ljmp
or
aaa
stos
cmpsl
jmp
push
mov
push
sub
mov
add
incl
adc
imul
data16
pusha
aad
gs
dec
or
test
cmp
xchg
inc
loopne
adc
push
fstps
sub
add
in
sahf
jno
sbb
pop
jne
dec
pop
stos
mov
movsl
adc
ds
not
jmp
push
ret
js
loopne
lods
hlt
jo
sbb
mov
pushf
cmp
sarb
sbb
jp
push
pop
adc
xor
arpl
sbb
sbbb
push
outsl
iret
cwtl
jg
fwait
and
mov
lret
add
mov
or
xor
lods
mulb
les
cmp
insb
cmpsl
imul
sbb
lcall
xchg
js
jno
rol
outsb
dec
shl
push
dec
cmp
and
test
outsb
push
enter
gs
inc
dec
jmp
int3
adc
or
mov
jmp
scas
push
add
jne
mov
adc
and
xor
dec
fists
pop
mov
push
je
ss
fdiv
xlat
push
cmpsb
xchg
fadds
ss
xchg
stos
rorl
fiaddl
inc
stos
mov
push
xor
mov
push
std
ror
iret
int
rcl
adc
push
int
lret
dec
into
jb
imulb
xor
cmc
in
scas
sub
mov
sti
les
icebp
push
dec
mov
test
fistpl
rclb
sub
or
adc
push
dec
adc
add
push
dec
out
cmpsl
mov
xchg
test
enter
adc
mov
xorl
loopne
add
out
scas
rcll
xlat
fcmovnbe
dec
stc
popa
cs
lahf
outsb
push
stos
or
mov
sub
mov
xlat
adc
cmp
mov
insl
ja
lea
mov
sub
dec
cltd
gs
sub
mov
popf
mov
lock
cmp
fimull
xchg
ret
or
jbe
jecxz
or
ficompl
mov
pop
int3
fnstsw
rcll
orl
das
int
adc
aas
pop
shr
aas
mov
test
addb
push
lods
divl
lds
ss
enter
xor
xchg
sbb
mov
cmp
jns
iret
aas
push
inc
push
pop
aad
enter
and
add
inc
jns
inc
mov
pop
mov
and
jb
sub
jl
dec
jecxz,pt
jmp
ds
and
push
xchg
push
add
pop
loope
loop
jmp
pop
mov
repz
icebp
inc
clc
or
loopne
lahf
scas
add
jl
cs
jmp
test
push
lret
aas
mov
sbb
cmpsb
sub
sbb
test
lcall
lret
orl
jmp
add
pop
in
pushf
xchg
test
rclb
pusha
jne
loop
lods
dec
or
lahf
cmp
push
push
sub
mov
test
sbb
sbb
test
add
int
mov
push
pop
aas
xchg
in
sbb
or
idivl
out
sbb
popa
cli
xchg
ljmp
cli
in
in
cmp
fadds
in
sbb
adc
shll
push
and
push
fucomp
fsubrs
lahf
gs
fwait
mov
pop
adcb
jle
xchg
dec
shrl
sub
dec
scas
add
or
das
in
pop
inc
mov
sub
fimull
dec
incl
clc
shlb
sbb
shlb
lock
add
jns
mov
sub
add
sbb
iret
aaa
dec
aad
mull
dec
sahf
adc
adc
enter
xchg
mov
nop
cmpsb
inc
jo
gs
push
or
push
insb
testl
out
push
xchg
sti
clc
mov
scas
into
mov
scas
mov
scas
jnp
pop
and
mov
test
iret
cwtl
dec
into
inc
int3
mov
cmpsb
in
rorl
outsl
push
cmp
sub
lock
or
push
adc
inc
cli
dec
sahf
adc
testl
push
loop
dec
test
out
fsubl
jmp
mov
sub
xchg
das
adc
pop
pop
cld
cmp
cld
testb
pop
int
fidivs
mov
arpl
out
or
push
outsl
pop
inc
jp
cmp
xchg
dec
inc
movsl
sbb
adc
jbe
test
mov
je
icebp
xchg
and
test
mov
cld
and
or
dec
sub
inc
jo
iret
mov
bound
cmc
cmc
xor
jg
mov
clc
push
iret
test
push
popf
loop
xchg
sti
and
ficoms
outsl
mov
sub
gs
cmpb
jecxz
sub
pop
ss
cwtl
lret
stos
lock
pop
jnp
imul
dec
jmp
fstps
adc
lret
inc
push
lret
pop
outsl
jecxz
hlt
out
cmpsb
cld
in
jb
dec
or
cmp
xor
lahf
nop
inc
push
or
jno
sbb
push
mov
mov
movsb
stos
mov
arpl
or
push
push
mov
or
add
lret
ret
mov
push
mov
aad
xor
int
fisttpll
jbe
pop
outsb
sbb
or
sub
adc
mov
pushf
or
mov
xor
fadds
ja
out
outsl
ja
and
jp
sbb
dec
test
jg
fdivs
lret
aad
mov
loope
mov
repnz
pusha
or
leave
jb
in
in
pop
mov
jno
xsaveopt
adc
mov
cwtl
hlt
pop
outsb
in
push
fistpl
and
sub
int
rolb
mov
pop
stos
lret
adc
sahf
popa
bound
xchg
mov
shll
sub
dec
in
mov
sub
aas
or
fwait
repnz
cltd
in
addr16
dec
ljmp
push
dec
in
dec
mov
imul
lcall
push
lea
arpl
mov
or
or
stc
sub
inc
pop
mov
shlb
push
shr
clc
sbb
nop
enter
fsts
test
mov
mov
xchg
pop
cmp
call
ss
or
mov
orl
loopne
dec
int3
aas
push
stos
in
sub
jl
popf
pop
mov
cmc
mov
es
das
arpl
dec
stc
mov
push
fstl
dec
xchg
faddp
mov
loope
push
jne
fsubrp
jmp
fistps
dec
add
xchg
lock
push
sarb
mov
loope
nop
xchg
cmp
xlat
sahf
sarl
dec
pushf
cwtl
push
lock
xchg
fsubs
mov
add
xor
pop
pop
xchg
jb
pop
push
cmp
stos
mov
scas
and
sahf
mov
or
cld
inc
xchg
jecxz
pop
pop
ficoms
dec
test
or
ja
mov
pop
fistps
pop
mov
jns
push
out
rcll
mov
cs
push
filds
test
jb
test
xchg
out
cmp
mov
mov
imul
movl
icebp
xchg
std
dec
push
dec
out
cwtl
nop
mov
scas
ja
sub
push
add
sar
rol
cltd
xchg
cli
arpl
psrlw
int3
cmp
and
xor
out
xchg
lods
or
adc
jbe
in
sub
inc
out
jmp
mov
inc
clc
scas
inc
dec
loop
push
fwait
add
lahf
pop
fwait
je
aam
mov
sbb
fisubrl
xchg
jecxz
stc
stos
and
xchg
cmp
xchg
ficomps
cmp
mov
cmp
and
jnp
stos
jno
test
xor
pop
mov
rclb
cs
inc
mov
cld
and
fisubrs
xor
jmp
daa
pop
jecxz
ljmp
ss
shlb
xor
push
es
test
mov
sbb
mov
stc
and
inc
std
movsl
nop
add
xchg
imul
cmp
outsb
mov
notl
test
mov
sbb
sub
movsl
pusha
pop
mov
jbe
aaa
dec
into
loopne
mov
inc
jne
xor
mov
out
jb
scas
mov
andb
pop
jno
lock
daa
cmp
enter
push
and
inc
mov
push
bound
lods
pushf
push
mov
lods
addb
cmovo
repz
mov
jle
lret
mov
lret
xchg
adc
movsl
pop
out
hlt
sti
and
icebp
and
loop
sbb
rcrl
jecxz
pop
stos
xor
mov
xlat
adc
sbb
loop
cmc
ret
movsb
sbb
or
dec
popf
shlb
int
nop
xor
sbb
cmp
push
cmpsb
or
sbb
mov
rcr
jae
aam
ds
push
mov
test
jg
loop
mov
adc
fwait
out
clc
add
andb
pop
lods
add
sbb
mov
clc
rcl
dec
ljmp
aam
lods
arpl
pusha
scas
ljmp
fnstcw
and
rep
mov
dec
push
mov
aam
daa
in
arpl
mov
pop
cld
push
sti
je
test
xchg
scas
lcall
and
adc
mov
loopne
lock
push
and
insb
sbb
dec
shll
adcl
pop
adc
shll
in
insl
sub
imul
hlt
leave
int3
xchg
sub
icebp
jmp
jle
je
push
dec
and
ret
stos
hlt
mov
scas
sub
cmp
pop
rclb
xor
inc
add
xchg
mov
mov
inc
mov
fs
insl
dec
xorb
push
insl
xchg
mov
lock
insb
js
faddp
rorb
gs
sbb
mov
lock
xchg
mov
push
jbe
mov
dec
push
jnp
stos
mov
pop
imul
pop
xlat
andl
mov
push
movsb
cmp
les
andl
cmp
test
fidivrs
add
and
fcoms
mov
xor
sbb
fisubs
mov
jns
mov
cwtl
or
notl
ficompl
insb
call
cld
cmpsl
or
push
daa
cmp
dec
lock
mov
out
pop
sub
ret
filds
cmpsl
xor
es
sbb
adc
fisttpl
pop
stos
and
add
cmp
lcall
mov
out
ss
pop
xor
mov
jl
cli
lock
mov
mov
icebp
stc
shrb
fdivrl
dec
jmp
vorps
and
mov
xchg
mov
cmp
xor
cmc
mov
and
pop
sub
fucomp
icebp
sti
or
mov
xchg
bound
jb
mov
pop
dec
sbb
jne
push
mov
adc
outsb
adc
jl
outsb
adc
and
out
cld
imul
add
mov
jnp
int3
mov
and
and
sbb
xor
repnz
into
and
xor
xlat
aaa
jp
outsl
ret
std
fldt
int
mov
enter
in
pop
push
cli
jmp
testl
lock
sbb
shrl
lea
cltd
mov
das
xor
jbe
inc
mov
mov
cmp
mov
mov
sub
in
leave
jnp
inc
mov
arpl
mov
daa
das
mov
test
addr16
xchg
inc
scas
push
in
xchg
add
sub
insl
jns
cmpsl
sub
adc
sub
xchg
stc
shlb
into
mov
cmp
lods
out
mul
ficoml
and
pop
dec
mov
xchg
aas
mov
lcall
jne
gs
adc
dec
push
xchg
push
das
cld
xlat
push
push
sbb
sbb
gs
add
lds
loop
cltd
lahf
add
lcall
inc
sbb
arpl
das
and
xchg
sbb
jno
mov
xchg
push
mov
subl
out
test
mov
lock
mov
add
scas
dec
loope
mov
mov
dec
pop
out
ret
xor
lahf
push
fmul
jae
sub
jge
out
mov
push
mov
test
mov
lods
int3
jle
ljmp
cmpb
lds
push
or
and
mov
scas
xchg
sub
cmp
rcll
movsl
inc
and
ret
out
loopne
iret
cmp
fs
lods
icebp
inc
aas
std
fnstcw
mulb
frstor
imul
out
movsb
icebp
movsb
add
adc
push
add
popf
pop
rcrb
fs
ja
mov
out
ret
pop
cmpsl
push
sbb
xchg
cmpsl
xor
out
enter
and
sahf
or
cmpsb
gs
addr16
or
jb
icebp
push
cpuid
fwait
cmpsb
jnp
push
cmp
sub
call
out
les
xor
sbb
cmp
lock
cmp
imul
pop
loop
or
jmp
fdiv
sbb
pop
lds
dec
movsb
out
inc
xchg
xor
inc
cmp
int3
popf
iret
mov
cltd
xchg
testb
mov
xorl
out
into
jnp
subl
shlb
jno
jno
adc
icebp
pop
sub
pmaddwd
gs
push
mov
push
cli
sbbl
outsl
pop
and
pop
dec
xor
fs
jle
inc
andb
lods
jp
loop
ljmp
in
jbe
dec
add
sbb
adc
inc
or
mov
jo
cmc
mov
imul
add
push
out
cs
call
mov
loopne
mov
scas
and
test
adc
xor
fildl
push
mov
insl
cld
jae
popa
fcompl
inc
mov
testb
ds
add
loop
test
lods
fisubl
mov
fwait
cmp
ds
inc
lcall
stc
jb
lea
mov
xor
dec
div
inc
jo
jl
xor
push
ss
mov
and
divl
divb
dec
imul
out
dec
jmp
out
pop
or
jns
push
add
setg
fiaddl
sub
mov
test
ret
push
jnp
fsubrs
inc
push
scas
sbb
push
in
imul
dec
xchg
xchg
fs
ds
sub
adc
mov
cmpsb
loope
imul
pusha
push
xchg
sub
xchg
pop
sub
out
jae,pn
in
call
cltd
dec
mov
or
fs
and
mov
cmp
lock
xor
in
push
adc
mov
loopne
scas
push
pop
xor
adc
push
xor
and
cmp
inc
mov
fnsave
cmp
out
add
pop
pop
mov
cmc
mov
inc
and
lods
loope
push
rclb
or
adc
xor
fidivs
push
loop
dec
dec
fstpl
add
out
scas
push
out
in
lods
inc
aam
dec
sub
adc
sti
test
pop
test
mov
xchg
mov
out
int3
cmpsl
stos
mov
jno
lret
clc
jnp
sub
in
call
iret
hlt
xorb
lea
pusha
xchg
cmpsl
aam
sbb
jp
xor
cmp
cmpsl
sahf
call
mov
cltd
ss
fldcw
jns
pop
lds
mov
and
xor
mov
stos
in
out
fdivrl
jb
jg
sbb
or
mov
mov
cmovae
sub
insb
mov
fadds
in
push
mov
cmp
in
or
xchg
add
cmp
add
dec
mov
push
mov
test
xchg
aas
fadds
es
pop
push
mov
and
andb
and
imul
jge
inc
jae
dec
sti
sahf
and
mov
push
aad
sti
pop
jge
add
jno
pusha
add
aas
inc
mov
mov
sbb
mov
push
fldt
dec
jecxz
fucom
sti
and
idivl
xlat
push
loopne
cmp
stos
in
or
jecxz
xor
jg
jl
stos
dec
push
sbb
mov
inc
mov
mov
xchg
or
or
sbb
and
xchg
jg
ds
shll
sub
fisubs
cmp
ror
mov
sahf
cwtl
int
xor
inc
les
mov
repnz
dec
pop
mov
test
push
dec
push
jbe
pop
dec
iret
cs
push
adc
jp
fildl
xchg
mov
enter
pop
pop
orl
out
lods
mov
jge
lods
std
and
inc
and
jmp
dec
stos
shll
stc
loop
dec
fcoml
jb
pushf
cli
not
xor
shll
stos
mov
jmp
xchg
enter
nop
dec
les
sbbl
mov
xchg
cs
xchg
test
insb
and
cmpsl
adc
push
je
mov
add
into
mov
ss
sbb
stos
sub
adc
push
shrl
movsb
mov
jae
and
jo
or
add
cmp
xchg
lahf
lock
or
pusha
movsb
cmp
jnp
testl
xlat
sarl
mov
fld
xchg
inc
repnz
cmp
ret
data16
xchg
jle
lds
aaa
movb
inc
movsl
jge
or
pand
pop
pusha
cmp
and
repz
or
and
adc
cmpsb
jle
jmp
push
push
outsl
add
and
xorl
push
sti
fmul
adc
sub
loopne
cmp
int3
test
mov
sub
stc
mov
and
sbb
mov
inc
mov
int3
ret
push
out
push
or
dec
xchg
mov
push
aas
into
add
sbb
mov
mov
pusha
pop
xlat
faddl
jnp
jb
pop
dec
mov
sub
adc
fmuls
rorl
adc
in
data16
jnp
lahf
pusha
pop
pop
sbb
xchg
idiv
ja
and
jl
ss
sti
adc
xchg
clc
xchg
xchg
mov
pop
lret
loopne
lret
or
push
cmp
rcll
dec
sub
stos
pushf
dec
iret
jge
scas
jae
sbb
xchg
dec
xchg
test
loopne
xchg
je
gs
dec
add
test
cmp
sub
adc
call
cmc
mov
faddp
push
icebp
sub
fstps
stc
int3
test
cmp
inc
outsl
cmp
dec
lods
cmp
sub
xchg
insl
mov
testl
dec
fildl
frstor
or
negl
pop
int
dec
cmpsb
pop
mov
mov
faddp
bound
rcrb
out
out
and
xchg
fdivr
lcall
and
jecxz
add
xchg
mov
xchg
xchg
add
inc
push
out
fldt
shr
or
cli
add
jns
and
call
pop
leave
inc
mov
pop
xor
jnp
mov
jecxz
mov
ret
or
lock
push
dec
test
mov
xchg
xlat
lds
fdivr
fnstsw
mov
nop
sub
xorb
out
cmp
mov
pop
dec
adcb
shr
popf
inc
adc
mov
pusha
pop
icebp
lods
or
xchg
popf
cwtl
cmp
xchg
adc
in
add
sub
xchg
pushl
xchg
icebp
leave
mov
popf
mov
mov
call
or
sub
movsl
inc
jb
adcb
dec
sub
ret
insb
mov
push
jmp
movb
pop
test
sub
ss
pop
xchg
pop
test
inc
popf
adc
stos
call
sbb
lahf
lahf
addb
mov
cs
jbe
pop
pop
jno
popa
or
fpatan
imul
mov
arpl
xchg
mov
shrl
dec
imulb
mov
dec
jno
and
xchg
dec
out
push
jl
add
xor
or
int
inc
add
jbe
fs
sbb
or
inc
aas
mov
cmp
sbb
jg
out
ljmp
int3
cmc
out
sbb
ds
add
cmp
jb
add
xchg
sbbb
mov
pop
aad
mov
or
stc
and
ss
int
inc
push
cmp
push
nop
mov
lds
lcall
mov
or
dec
fcmovnb
add
add
ss
nop
push
xor
inc
sarb
inc
push
pusha
in
into
inc
jno
sbb
dec
mov
imul
mov
or
mov
inc
jno
fldenv
or
fsubrs
sahf
std
jmp
ljmp
clc
xchg
or
movsb
cwtl
repz
mov
sub
lcall
or
dec
mov
call
mov
xchg
mov
out
fidivrs
xchg
adc
imul
lods
or
je
pop
loopne
sbb
outsl
xchg
fsubl
dec
fimull
cmp
xchg
inc
dec
xor
mov
loopne
mov
xor
mov
jmp
push
mov
fcoml
push
cwtl
test
mov
filds
mov
push
decb
dec
pop
hlt
xchg
add
lret
sbb
mov
call
mov
dec
cld
jnp
dec
icebp
fdivrl
sub
sbb
sub
or
in
adc
fs
jne
adc
inc
xorl
jle
adc
jmp
aas
rolb
pop
pop
in
decb
cmpsb
push
lret
in
cmp
popf
and
mov
loope
jb
xchg
fwait
pop
fmul
jbe
cmc
cmp
add
cld
mov
and
inc
pop
cmpsl
test
xchg
adc
cmp
popa
pop
jle
cmp
sbb
mov
mov
and
or
xchg
je
popf
repnz
pushf
push
daa
int3
add
loope
and
nop
sub
adc
jb
test
pop
mov
rclb
mov
jmp
push
das
dec
xchg
add
daa
add
mov
in
cmp
out
jbe
cltd
lcall
cmp
pmaxub
in
scas
jg
es
dec
mov
sbb
mov
cmp
and
mov
pop
mov
pop
mov
js
out
mov
jecxz
ret
andl
outsb
sti
mov
scas
and
or
xchg
pop
data16
jnp
or
sbb
sub
stos
shll
shrb
lods
bound
and
sbb
xchg
cmpsl
mov
push
jb
imul
repnz
mov
add
jnp
or
lods
or
addr16
cld
lea
test
xlat
lds
cwtl
daa
mov
outsl
push
fidivs
sahf
loop
or
nop
int3
mov
ret
addl
popa
or
in
mov
inc
inc
fnstsw
push
xor
shlb
jecxz
add
fcomps
aaa
mov
pop
add
int3
add
sub
push
xor
nop
dec
mov
data16
adc
dec
push
xchg
jle
cmp
das
xor
lods
dec
lcall
add
mov
hlt
fsubrs
or
lret
jl
fisubl
cwtl
mov
push
inc
fstpl
push
ja
xlat
cmpsl
in
dec
lahf
inc
adc
out
fs
lock
xchg
aaa
sbb
inc
pushf
dec
push
mov
jbe
int3
in
icebp
mov
arpl
insl
mov
xchg
adc
xor
sub
gs
nop
inc
sbb
js
push
or
sbb
negl
insb
aam
test
and
imul
inc
outsb
adc
decl
xor
mov
fsqrt
cmc
cmp
pop
sub
insl
sbbl
out
and
adc
cli
sub
xchg
add
jno
jnp
iret
adc
pop
adc
fwait
sbb
mov
enter
bound
xchg
xor
fsubr
pop
inc
mov
sub
rcl
inc
sbb
dec
jmp
pop
sbb
cmp
dec
in
sbb
sub
loop
cmovb
mov
sbb
loop
inc
js
lahf
dec
cmp
shrb
mov
les
dec
out
and
cmc
jmp
xchg
into
add
mov
gs
gs
xor
cmpsl
repnz
adc
push
stos
xchg
daa
or
cld
add
inc
ja
mov
loop
aam
std
push
popa
push
push
test
mov
loop
push
dec
pop
cmp
popf
or
push
xchg
push
jne
jp
or
cmp
ljmp
mov
aam
icebp
negb
adc
out
daa
mov
faddl
out
daa
and
pop
lcall
jp
add
pop
xor
xor
pop
sti
pop
push
pop
fcmovbe
mov
and
lds
add
dec
push
imul
insb
adc
inc
cmp
add
xchg
pushf
or
mov
nop
mov
test
hlt
xchg
fwait
or
xor
fldl
ret
out
repz
cmpsb
mov
and
xor
into
or
and
sbb
rolb
dec
cmp
dec
insl
popa
push
xor
inc
pop
pop
pop
insl
lds
dec
mov
sbb
xchg
mov
rclb
fisubrl
pushf
xchg
mov
inc
push
stos
movsl
ss
sub
cmp
stc
or
pushf
adc
hlt
sbb
std
or
xchg
lods
mov
dec
sbb
nop
test
nopl
push
mov
mov
in
into
stos
or
jbe
or
aad
pusha
or
jbe
outsl
jmp
aam
cmp
outsl
sub
push
out
test
dec
or
pop
inc
or
push
or
sahf
ret
pop
cmp
out
or
pushf
jno
pusha
pop
add
add
in
mov
sbb
pushf
cmp
jmp
or
and
iret
pop
xlat
mov
int
jbe
sub
mov
push
mov
pop
ja
out
dec
push
icebp
xlat
push
out
outsb
pop
shlb
mov
cmpsb
jle
push
cmpb
xchg
cmc
sbb
pop
push
lods
fildl
inc
jns
add
mov
mov
jl
shll
outsl
std
das
mov
fwait
lock
jmp
sbb
lock
jb
aam
dec
cmp
repz
int
cmp
mov
hlt
adc
mov
dec
mov
sub
imul
cmp
insl
push
mov
cmpl
push
and
out
xchg
or
imul
in
push
xchg
xor
lock
sbb
xor
jbe
lret
int
les
push
adc
sbb
mov
fadds
pop
xchg
cmc
add
lahf
adc
mov
scas
in
testl
mov
repnz
lods
push
mov
inc
or
fldl
or
push
sbb
andl
mov
int3
aam
mov
sar
das
fisubrl
out
lcall
nop
jno
dec
push
pop
inc
and
jl
jnp
loope
inc
add
mov
call
jno
and
or
or
jb
lock
fs
mov
nop
pop
jg
or
clc
dec
sbb
repnz
ret
bound
nop
pop
das
dec
inc
sbbb
sub
adc
add
dec
loop
jl
pop
mov
pushf
setle
sti
and
aam
jmp
hlt
outsb
je
adc
mov
add
dec
stos
mov
jp
cs
pop
aad
call
adc
xlat
cltd
xchg
mov
or
outsb
cwtl
bound
push
inc
sub
and
dec
scas
loop
push
mov
das
mov
ror
outsl
test
sbb
mov
push
mov
aad
popf
iret
pop
add
push
cmp
repz
fisubl
add
imul
mov
and
adc
je
lods
int3
cmp
xchg
pop
repz
les
add
mov
xorb
mov
iret
repz
ds
stc
adc
sbb
mov
inc
push
mov
rcll
xor
push
ljmp
clc
xchg
in
jecxz
sbb
fnstcw
xor
int3
sub
aad
mov
test
sub
inc
jae
mov
and
sarl
push
nop
sbb
push
jge
out
jg
and
sbb
out
sbb
inc
mov
js
ret
out
mov
xor
push
and
push
mov
pop
rep
mov
outsb
rcll
rclb
les
or
jecxz
sbb
sbb
cmp
mov
add
or
shll
jge
roll
addl
mov
push
sbb
lahf
aas
or
arpl
insl
test
and
push
insl
cltd
and
ds
test
xor
loope
fisttpll
xchg
pop
sub
in
cmpsl
xchg
das
mov
push
mov
adc
imul
sbb
sub
sub
jmp
sub
or
out
mov
jb
cmp
pop
jns
sbb
mov
cmpsb
push
ret
js
fwait
shrb
cmp
fstpt
xor
movl
lret
out
adc
imul
inc
test
mov
lods
push
add
inc
jno
outsl
dec
insl
and
mov
cmp
inc
mov
clc
sub
loopne
inc
adc
pop
call
in
or
fwait
mov
bound
andb
inc
repnz
cmp
leave
lea
in
imul
movl
sbb
das
js
push
mov
inc
popf
mov
dec
test
ljmp
jbe
sub
or
cs
shl
fiaddl
push
mov
popa
loope,pt
or
rclb
in
sub
mov
cmpsl
outsl
loope
mov
in
push
xchg
jmp
jnp
mov
in
xchg
pop
jns
add
pop
ret
mov
shlb
mov
sub
adc
pop
lret
push
mov
mov
sbb
and
adc
pop
jae
mov
insl
lock
out
in
sbb
push
pusha
jbe
inc
adc
pop
and
ja
ljmp
sub
das
mov
and
je
popf
pop
in
xor
int3
mov
sahf
push
pop
dec
push
test
add
insl
test
xor
rcl
mov
sbb
xor
aaa
bound
or
jl
mov
push
pop
nop
rcrb
jle
fimuls
cmp
pushf
sbb
popw
bound
push
jno
dec
loope
out
push
lcall
int3
xchg
cld
inc
aam
cmpsl
lcall
jecxz
in
push
adc
adc
rorl
jne
jb
fidivrl
pop
xchg
push
push
out
push
out
mov
in
inc
adc
cmp
std
int3
test
pop
pop
sbbb
or
sbb
mov
jns
fdivl
jmp
adc
pop
dec
call
pop
mov
cwtl
icebp
or
decl
lea
dec
push
in
mov
mov
ror
mov
sbb
jb
or
mov
or
aaa
addr16
xchg
sub
push
dec
jae
in
jbe
dec
inc
in
fdivrl
rcrb
ds
jl
add
push
leave
stos
pop
je
mov
pop
das
insb
adc
sbb
xchg
shlb
pop
xchg
sahf
adc
cwtl
xor
pop
mov
mov
and
and
adc
push
sub
cmp
loop
scas
pop
add
cld
sbb
imul
pop
addr16
mov
mov
in
lea
sbb
jl
dec
xchg
jg
pop
repz
or
or
pushf
pop
mov
jmp
repz
jbe
cmp
lahf
or
or
nop
repz
sti
rorl
lods
ja
sub
or
xchg
jge
aas
and
xchg
in
sbb
fsub
sahf
test
icebp
lds
pop
leave
xor
hlt
rcll
xor
sub
enter
popf
fidivrs
in
out
nop
mov
xor
pop
test
mov
addr16
movsl
out
sar
movsl
lods
fmull
xchg
xchg
or
arpl
stos
push
insb
push
inc
bound
inc
push
lret
repnz
mov
in
xchg
push
mov
jp
sbb
pusha
loope
dec
dec
clc
and
jne
add
lret
jae
dec
xor
lahf
sar
inc
clc
cmpsl
fdivr
mov
fcmove
repz
rcl
fcmovnbe
imul
aam
lret
hlt
xor
inc
pusha
icebp
ljmp
and
cmc
into
xchg
cmp
cmpsb
jl
mov
cmp
xchg
pop
sbb
xor
aaa
pop
rorl
jbe
xor
fdivl
jl
and
cli
pop
and
inc
or
int
cmp
int
xchg
sub
pushl
inc
int3
xchg
cwtl
cmp
enter
dec
cs
and
out
in
or
fs
add
lcall
sbb
ret
or
scas
xor
fisubrl
lcall
and
adc
push
ret
out
inc
xchg
xor
mov
ljmp
xor
jecxz,pn
sub
add
cmp
mov
xor
pop
xor
aad
pop
or
test
mov
scas
cli
loope
mov
into
test
cmp
jmp
stc
mov
mov
call
mov
push
fistl
jecxz
dec
out
pop
orl
or
jmp
inc
lret
mov
add
aas
int3
adc
jmp
mov
adc
lret
aas
pop
sub
aaa
adc
adc
movsl
xchg
adc
scas
xor
nop
adc
and
mov
imul
mov
lock
mov
mov
jecxz
adc
xor
mov
scas
testb
daa
int
scas
fimuls
xchg
dec
pop
xchg
cmpsb
out
push
cli
ss
in
sbb
int3
aaa
cmp
sbb
pop
push
and
dec
js
gs
dec
jae
fcmovbe
shlb
lahf
jne
int3
pop
xchg
push
sub
insl
sbb
mov
fnsave
pop
adc
movsb
xor
jmp
jg
out
jb
push
shll
out
pop
or
addb
pop
pop
mov
mov
push
jns
mov
cld
sbb
adc
outsb
and
dec
call
xchg
and
stos
sarb
mov
dec
cmp
hlt
lods
popl
lret
mov
out
xor
jne
pop
jo
xchg
cmpb
mov
gs
ja
inc
xor
aaa
pushf
jnp
gs
sbb
pushf
mov
xor
jg
push
movsl
xor
loope
cmp
movsb
dec
sahf
sbb
jo
jl
xor
fstl
pop
mov
jae
int
scas
ja
adc
dec
push
loope
sub
push
xchg
pop
cmp
and
inc
xchg
mov
imul
xchg
aad
cmovns
adc
mov
gs
movsl
mov
xchg
mov
xor
mov
or
lret
clc
mov
dec
jp
mov
push
ds
sarl
adc
add
pop
enter
ret
arpl
pop
sub
fucomip
cld
pop
cmp
pop
mov
push
push
sub
sub
sbb
push
test
ljmp
aad
sahf
in
inc
mov
xor
in
lret
clc
cmpb
aad
je
push
mov
and
lahf
sahf
cmpsb
imulb
test
inc
bound
sub
rcrl
jb
jge
jo
pop
mov
cmp
enter
ffreep
rcll
addr16
fs
adc
stos
xor
lds
push
jno
mov
mov
sbb
xchg
jecxz
sbb
sahf
cmp
xchg
and
clc
xor
jb
iret
push
push
aad
mov
xor
pop
mov
xor
cmpsl
sbb
mov
jno
add
push
mov
mov
adc
mov
incl
push
cmp
test
ja
push
sub
xor
loop
pop
insb
sti
pop
xchg
rcll
pop
dec
xor
out
sub
pop
push
pop
cld
cmp
cmpb
jnp
or
lods
jb
sbb
mov
test
sbb
outsb
ljmp
and
ss
pusha
sbb
sbb
dec
jnp
mov
mov
sarb
ljmp
cs
aad
adc
repz
cmp
jo
inc
adc
jmp
mov
movsb
xor
mov
out
and
jbe
push
mov
xlat
mov
push
cltd
cmp
sub
ljmp
add
int
gs
cwtl
cmp
pusha
cmpsl
adc
dec
jne
rclb
loope
dec
inc
or
xor
test
scas
js
xchg
push
push
xor
jge
rcr
or
outsl
adc
push
add
dec
jl
scas
ljmp
xor
jecxz
and
js
mov
pop
xchg
inc
pop
mov
hlt
push
xlat
notl
dec
pop
outsl
inc
std
test
xor
pop
mov
popf
test
pop
leave
popa
lock
jno
or
xor
push
pop
lahf
adc
sti
mov
mov
mov
push
xchg
push
inc
dec
xor
sbb
pusha
das
jnp
lods
and
int
mov
push
pop
sub
mov
add
ret
and
aad
cmc
xchg
jecxz
gs
movsl
push
mov
xor
fs
scas
dec
test
imul
test
stc
jb
aas
push
and
jne
mov
pushf
sbb
arpl
add
stos
leave
outsl
sbb
mov
popf
mov
pop
xchg
mov
pop
in
push
addr16
push
aaa
xor
stc
in
es
cli
aad
dec
mov
jmp
and
sbb
xor
mov
mov
ret
testb
sub
xchg
loopne
push
mov
push
push
mov
pop
popa
mov
aam
in
jb
sub
mov
mov
mov
mov
sub
rcll
icebp
lds
stos
testl
out
test
outsb
pusha
rorl
jns,pt
fdivrp
lcall
sub
mov
push
mov
popa
push
or
mov
jbe
mov
or
mov
mov
cmpsl
fisubs
fs
out
push
out
sub
mov
repz
inc
les
jle
jmp
aaa
xchg
sarb
mov
xchg
mov
or
pop
jmp
cmpsl
xor
icebp
sub
mov
negl
insl
out
sbb
iret
shll
popa
cmp
aaa
das
mov
cli
cmp
cmpsb
mov
pusha
loope
out
or
call
pushf
and
jl
dec
mov
xlat
push
pop
xchg
and
outsb
and
pushf
scas
jl
rorl
pop
sub
pop
inc
cmp
xchg
aam
sub
lret
mov
mov
call
mov
cmpsb
push
aaa
mov
cmpsb
or
in
mov
mov
aam
mov
nop
sub
clc
pop
adc
mov
jmp
out
vmovntps
pop
xchg
add
negb
xchg
insb
cmp
add
out
fdivr
pop
ss
test
xchg
mov
cmp
inc
sbb
or
loopne
add
cmp
jg
mov
jp
inc
mov
fwait
stos
ror
in
xor
fildl
js
or
rep
adc
inc
js
mov
dec
mov
and
popf
lcall
mov
insb
ja
loope
xchg
xchg
xchg
pshufw
sbb
out
sub
push
or
push
lods
popf
mov
out
add
cld
or
mov
clc
add
inc
pop
pop
mov
js
loop
mov
les
scas
cmc
and
shrl
enter
xchg
push
xlat
adcl
xor
stos
mov
stos
adc
inc
and
and
add
pop
add
cmp
push
xchg
pop
mov
sbb
ja
jb
xor
or
into
and
mov
mov
adc
ljmp
add
pop
add
pusha
into
sub
push
stc
iret
in
mov
in
in
push
das
jns
fisubrs
jmp
mov
sub
movsb
rcr
cmp
or
arpl
test
adc
and
xchg
jb
ret
inc
sbb
xor
pop
stos
sbb
dec
jg
jl
fmulp
bound
mov
pop
into
inc
sub
fs
movsl
testb
es
adc
add
pop
adc
push
inc
push
mov
inc
fcompl
jnp
and
pop
cs
xchg
xchg
addr16
scas
aad
mov
xor
push
std
or
jle
inc
shll
imul
test
jle
cmp
sbb
fidivl
aam
xchg
xchg
ret
faddl
cmpsb
ljmp
jmp
int
std
cmpsl
or
sar
mov
mov
call
sti
fwait
and
outsl
dec
aaa
mov
fildll
mov
jne
lea
les
adc
aaa
push
pop
cltd
sub
cmp
adc
inc
mov
mov
int
fsubrl
scas
leave
test
xlat
push
push
push
xchg
or
sbb
xchg
sbb
and
lods
inc
add
xchg
in
lea
mov
mov
enter
cmp
jg
push
insb
mov
stos
outsb
outsb
ja
sub
es
sub
pop
fwait
sbbb
cmc
pop
or
push
xchg
cltd
mov
sub
inc
mov
test
mov
mov
sbbl
roll
pop
cmpsl
and
dec
mov
jmp
push
aaa
aas
cli
pop
or
pop
fistpll
mov
mov
negl
hlt
xchg
xor
xchg
sbb
cmp
jnp
and
xor
dec
mov
aam
mov
ljmp
pop
ds
sbb
fisubrl
jmp
mov
mov
push
cmp
scas
xor
test
mov
pop
adc
into
xlat
xor
inc
jb
ret
cmp
mov
in
cli
adc
xchg
int3
mov
into
cwtl
sbb
cmc
fbld
jbe
lods
push
sub
shrl
test
lret
sbb
movsl
jecxz
sub
call
lods
push
and
jmp
std
jno
fisttpl
jnp
mov
sahf
dec
xchg
mov
hlt
jg
hlt
cmpsl
pushl
dec
xor
add
add
iret
nop
pop
push
andl
xchg
xor
sbb
fsubrs
in
sbb
adc
rclb
mov
fistps
and
popf
add
mov
xchg
imul
lcall
aas
inc
add
pop
pop
mov
add
add
jge
xchg
aam
icebp
xchg
xor
sub
and
test
push
insb
add
inc
pushf
ret
and
fcmovne
into
mov
dec
ret
pop
ror
iret
xor
push
pop
repz
mov
cmp
mov
mov
sub
cmp
mov
int
fidivs
call
inc
dec
aad
inc
push
jb
jmp
sub
dec
jns
dec
mov
mov
addr16
mov
lods
mov
sbb
es
pop
pop
stos
mov
dec
or
pop
pop
mov
xchg
stos
pop
pop
mov
sub
sub
ljmp
xor
push
mov
movsl
xlat
and
int3
xor
lcall
jb
lret
shlb
xchg
dec
add
mov
scas
dec
push
fildll
cmp
ret
sub
xor
jp
fs
jp
sub
mov
dec
add
xchg
ret
je
fnstcw
icebp
mov
or
or
sub
pop
mov
pop
movsl
sub
pop
ss
xchg
addr16
fldt
mov
leave
push
fistl
sub
icebp
cmp
mov
inc
test
int
test
jne
jns
xchg
and
test
out
test
scas
les
lahf
pop
mov
das
pushf
or
jl
inc
mov
ds
in
xchg
ror
cmp
out
mov
mov
and
lods
pop
mov
mov
push
lret
pop
dec
inc
cmp
inc
xchg
adc
rorl
into
cwtl
sub
sub
insl
lock
stc
test
xchg
std
imul
inc
movsl
call
mov
mov
and
std
cltd
pop
out
and
mov
sub
movsl
pushf
repnz
cmc
push
fstl
ficomps
pop
or
ljmp
jmp
xchg
xchg
adc
scas
icebp
call
sub
sti
adc
lds
lods
sub
loope
loope
sti
shl
jg
add
inc
xchg
rcrb
xchg
xor
jbe
daa
pop
sysexit
cld
ds
sub
lahf
mov
int
dec
clc
lret
ret
jne
add
or
in
fwait
sub
fs
fnstcw
mov
mov
push
lret
dec
mov
or
mov
imul
vpsllq
jns
insl
pop
mov
aad
dec
xorl
int3
fildl
jb
xor
push
cmpsl
cli
nop
push
xor
add
aam
cmp
clc
push
xor
mov
sbb
cs
repz
lods
pop
sub
mov
push
mov
cmp
sub
test
push
dec
inc
rorl
cld
add
std
xor
mov
neg
addr16
mov
xor
mov
cli
pusha
or
shll
and
push
loopne
push
and
out
inc
xlat
mov
test
jbe
pop
test
cmpsl
lods
pop
ds
mov
mov
mov
leave
in
pushf
inc
iret
cmp
dec
mov
cli
jmp
andl
inc
movl
jle
mov
hlt
cmp
adc
push
mov
pop
xor
lods
xorb
repz
mov
lds
ds
adc
mov
lock
fidivs
adc
mov
sbb
dec
adc
out
fistpl
dec
mov
cltd
push
test
jae
aad
jecxz
das
xchg
popa
daa
ret
or
pop
mov
sbb
cwtl
hlt
int3
into
stos
outsl
orl
mov
mov
jl
adc
out
push
ljmp
xchg
cmpl
cmp
fs
push
or
sub
cmp
sbb
ljmp
push
and
filds
lcall
inc
jl
jnp
xor
mov
mov
aas
xchg
iret
rorb
je
xchg
mov
xchg
inc
cmp
sub
ret
cwtl
lahf
lcall
add
sarb
sub
jmp
jnp
jge
lea
test
ror
sub
mov
repz
or
jmp
dec
push
jnp
imul
jge
and
ja
pop
loope
aad
pop
or
or
inc
out
push
and
push
stos
sbb
jl
adc
jmp
inc
and
cmc
subl
loopne
push
pop
insb
xor
jbe
cmp
icebp
lcall
out
ss
cmp
mov
inc
push
cmp
dec
sbb
repz
rclb
loope
out
cmp
or
jp
scas
add
daa
jg
movsb
dec
fisttpll
in
loope
ds
ret
das
fcoms
ret
xor
xor
push
jl
addr16
arpl
popa
cltd
mov
fwait
cmc
mov
movsl
repnz
dec
jo
and
xchg
xor
mov
in
pop
lahf
fbld
jmp
mov
cmp
out
cmc
xor
daa
push
dec
shrl
lcall
icebp
fstps
pop
and
mov
mov
fs
adc
stos
mov
addr16
push
pop
pop
dec
inc
sbb
packuswb
or
xor
test
dec
push
and
out
js
sub
ret
arpl
lret
cmp
mov
xchg
inc
sub
dec
repnz
lds
das
mov
ds
and
push
lea
test
data16
add
icebp
pop
push
and
cld
xor
mov
pop
jmp
sahf
add
and
out
shlb
xchg
or
arpl
enter
sub
inc
xor
cli
loop
negl
imul
ret
in
inc
dec
iret
scas
cmp
dec
aaa
loope
pop
cmp
fidivl
dec
jle
clc
sar
xchg
jge
mov
or
stc
fisubrl
aam
or
loopne
inc
les
push
ret
icebp
and
xchg
enter
pop
inc
xor
and
daa
xchg
mov
out
enter
mov
xlat
loop
dec
add
jge
lea
push
leave
jge
roll
mov
jae
lcall
xchg
adc
push
ret
stc
mov
fwait
notb
fs
xchg
mov
popa
lret
cli
fsubp
xchg
out
and
cmp
jle
push
jle
ja
cmpb
mov
mov
fldt
addr16
rcrb
imul
add
imul
xchg
mov
clc
shlb
idiv
imul
mov
movsb
cltd
dec
stos
sub
adc
pop
sub
mov
scas
or
push
mov
or
fdivrp
add
pop
mov
or
sbb
outsl
add
test
inc
xor
dec
xchg
cmpsl
or
cwtl
xchg
xchg
test
test
fs
push
stc
jmp
push
les
mov
add
mov
arpl
inc
lret
mov
push
inc
testl
ja
rclb
add
insl
das
mov
les
mov
test
loop
mov
fstpt
dec
adc
mov
sbb
shrl
jl
fists
cs
and
nop
jle
mov
lcall
adc
iret
out
sar
inc
repnz
mov
xchg
xor
jbe
cmp
sarb
mov
sub
rcll
lock
add
or
and
or
xchg
push
test
outsb
jle
pop
mov
lahf
dec
jne
and
xor
imul
mov
mull
adc
ljmp
jno
rcrb
jno
sub
lret
mov
mov
xlat
fimull
shrb
popa
push
sub
ret
stc
out
sub
mov
mov
nop
push
cmp
movsl
xor
jp
cld
ljmp
in
xchg
dec
add
add
fiaddl
fcomps
pop
adc
sbb
mov
adc
xor
dec
mov
and
add
test
jb
sbb
into
fimull
mov
mov
insb
jae
lods
mov
es
sbb
push
push
pop
adc
or
or
or
imulb
or
imul
jge
test
fstps
mov
sub
push
scas
pop
movsl
inc
mov
mov
mov
imul
movsb
and
sbb
rclb
sub
adc
std
shrl
addr16
push
add
fcoms
push
inc
push
add
gs
rol
mov
clc
cmp
lods
cmp
adc
jmp
aas
push
sbb
push
sub
daa
inc
cwtl
jo
push
sub
and
stc
and
aaa
call
repz
cmpsl
cmp
or
mov
aam
or
mov
in
mov
pushl
sub
mov
xchg
cld
rolb
cmp
sahf
add
cmpsb
gs
imull
call
stos
push
cmp
push
ss
or
dec
xchg
addb
inc
and
lods
arpl
andl
or
sbb
adc
ljmp
sarb
hlt
add
add
test
push
add
into
shll
scas
mov
add
ror
push
insb
push
inc
xlat
jns
push
lahf
test
fcmovbe
push
xchg
mov
pop
push
mov
xchg
mov
jl
push
sahf
push
add
shrl
std
mov
in
cltd
roll
cmpsb
add
mov
add
push
pop
pop
mov
sbb
popa
sbbl
insb
mov
mov
jge
xchg
push
cli
mov
xchg
jecxz
mov
inc
test
cmp
imul
xchg
adc
popf
dec
xor
imul
cmpsb
inc
lahf
mov
imul
popa
mov
mov
sbb
jo
xor
mov
in
push
jmp
pop
xchg
dec
mov
pop
lahf
mov
es
lret
cld
mov
idiv
stos
cmpsl
div
shl
addb
cmpsb
or
and
out
in
pop
push
mov
sub
addl
adc
xchg
int3
pop
sbb
int3
dec
test
cmc
pop
add
jg
cmpsl
xchg
mov
repnz
inc
mov
jbe
outsb
xchg
orb
call
test
es
sbb
xchg
pop
push
or
mov
stc
imul
popf
cmpsb
mov
xchg
cwtl
loop
push
icebp
and
test
add
xchg
inc
adc
ljmp
adc
int3
popa
imul
movsl
mov
xchg
adc
addr16
inc
fmulp
negl
pusha
xor
jl
pop
jp
aam
int
shl
adc
cmp
data16
jno
loopne
fistl
adc
pop
into
pusha
mov
daa
mov
mov
inc
xacquire
jno
mov
lods
popa
jmp
and
scas
mov
movsl
and
repz
call
sub
jecxz
push
mov
rorl
ret
testl
in
imul
or
into
mov
fs
test
repz
pop
sub
imul
pop
add
inc
fisubs
das
shrb
mov
inc
outsl
sarb
mov
jle
push
mov
add
and
andl
in
mov
adc
push
rorb
mov
jnp
or
ljmp
jae
and
mov
mov
push
or
xchg
push
mov
in
test
jne
shll
xchg
mov
mov
adc
movsb
mov
sub
or
flds
and
inc
pop
out
popf
cmc
mov
outsb
inc
jne
adc
xor
aad
loope
insl
outsb
or
das
movsb
jg
mov
clc
pop
and
add
leave
mov
dec
scas
cld
sbb
or
lods
xor
add
add
out
sub
in
daa
inc
inc
mov
dec
movl
loopne
or
sub
test
push
je
jbe
repnz
dec
ljmp
mov
sbb
inc
jl
mov
lcall
push
notl
inc
test
ret
aas
dec
inc
mov
scas
pop
outsl
jle
insl
outsb
cmc
cmp
jl
mov
mov
loope
lahf
mov
xchg
or
xchg
jle
imul
jno
cwtl
mov
inc
push
mov
pusha
cmpsb
stos
inc
js
leave
add
popa
shlb
jbe
sbb
mov
xchg
jge
xor
into
mov
jo
dec
sbb
sbb
fwait
shll
movsb
mov
lahf
andl
mov
dec
out
lds
adc
mov
add
scas
add
jmp
int3
dec
rolw
popa
sbb
in
cwtl
push
mov
inc
fwait
das
or
push
aad
mov
adcb
popf
test
scas
iret
xor
nop
xchg
pop
fwait
ret
adc
push
sti
mov
inc
mov
shl
jmp
adc
sub
lds
jl
cmp
aad
sub
popa
cmp
fwait
inc
loop
sahf
and
cmpsl
inc
sar
jge
cmp
dec
cltd
inc
jp
inc
push
outsl
aad
xor
sbb
adcl
jne
push
jnp
jp
jnp
dec
jecxz
cmpsl
loop
push
cmp
dec
int
sub
ror
add
adc
out
lock
xor
out
pop
mov
cmpsb
xor
pop
call
adc
pusha
cmp
shlb
jnp
push
pop
and
int
cli
mov
test
out
push
pop
cmp
ljmp
fxtract
sbb
jp
inc
xchg
cmp
mov
push
in
pop
pop
pop
loope
jge
jno
stos
pop
jge
shlb
mov
lea
sub
inc
cmp
mov
clc
shll
jo
xchg
sub
mov
dec
jp
fisttps
jbe
jns
mov
sbbb
sub
insl
cwtl
ja
jmp
xchg
stos
cwtl
hlt
sub
lcall
jne
movq
stos
repz
enter
inc
jp
xchg
add
or
ljmp
roll
sub
ljmp
out
mov
pop
pop
push
sbb
test
cwtl
outsl
mov
inc
mov
sub
or
jno
xor
sbb
mov
scas
loop
dec
xchg
cmc
call
fisttps
fimuls
je
pop
jbe
repnz
mov
js
or
cmp
add
jnp
mov
pop
sbb
add
hlt
adc
sub
ds
mov
adc
mov
fnstcw
push
add
dec
stc
add
fxch
jecxz
sbb
jno
sub
pop
inc
test
dec
jno
fs
test
xor
jge
mov
push
imul
push
push
xor
nop
xor
jns
into
inc
add
pop
or
rol
mov
clc
rcll
adc
mov
and
push
lahf
rcrb
jae
and
adcb
xor
lcall
sti
mov
xchg
add
std
leave
adc
subl
icebp
sbb
pop
xchg
stos
adc
cltd
mov
push
fbld
insl
mov
and
pop
pop
dec
xchg
push
pop
pop
jbe
jno
inc
stos
jb
imul
outsl
lods
icebp
mov
movsl
cmc
sbb
addr16
orb
add
sbb
loope
imul
adc
sub
fsubs
pop
sub
test
divl
and
je
add
mov
jne
cli
adc
sub
xchg
je
cmpsl
es
repnz
cmpsb
add
xor
xchg
es
jb
stos
xchg
mov
mov
das
cmp
push
inc
jle
subl
sbb
enter
movsl
popf
xchg
sub
sbb
jo
mov
rorl
test
mov
or
test
shll
inc
cmp
iret
sbb
dec
lret
add
inc
mov
jae
jge
xchg
inc
mov
sbb
push
loop
shrl
fsubrl
adc
mov
clc
lahf
adc
jmp
mov
fsubp
std
push
jnp
pop
push
clc
sbb
sub
and
jnp
outsl
mov
sub
jge
or
test
arpl
add
js
jns
mov
jl
xor
sarl
mov
dec
ja
fisubrs
sub
std
sub
movsb
lret
jl
dec
dec
xchg
mov
jecxz
mov
pop
add
loopne
inc
test
cmp
push
in
push
cmp
adc
dec
out
ss
mov
mov
cs
inc
xchg
inc
orb
jne
push
outsl
cmp
pop
ss
ds
aam
xor
adc
cs
dec
mov
push
push
fwait
hlt
sbb
inc
xchg
jecxz
xchg
rolb
inc
clc
cmpsb
je
mov
cltd
jge
rcrl
push
push
inc
dec
sub
pusha
and
inc
call
xchg
xchg
adc
rorb
stc
shll
repnz
outsb
xchg
out
lret
jmp
xchg
inc
insl
sub
jb
xchg
testl
push
jge
fwait
scas
cmpsl
fmul
jl
stos
in
cli
sub
sarl
jbe
pop
jmp
adc
sub
ss
mov
xor
adc
add
mov
cmc
inc
idivb
cld
daa
pop
rolb
out
xchg
sub
vpmacssdqh
mov
cmpsl
push
test
fsubrl
andb
mov
daa
xor
push
mov
sub
loope
imulb
adc
jne
adc
cmp
scas
sbb
adc
daa
inc
into
jle
aam
push
sub
and
jge
sbb
popf
mov
jmp
dec
adc
mov
mov
or
mov
cmp
pop
test
dec
sti
shll
mov
movsl
test
mov
out
stc
mov
push
push
jecxz
fisubrl
sbb
je
cs
mov
lret
mov
ljmp
aaa
mov
jae
mov
pop
cmp
mov
sbb
out
fldl
aas
pusha
fiadds
sbb
sub
xchg
xchg
cld
mov
cwtl
mov
imul
jno
mov
mov
scas
jle
lea
lahf
push
ss
aam
rcrb
outsb
or
je
pop
pop
out
dec
scas
or
adc
hlt
negl
xchg
out
or
sahf
mov
shl
cmpb
mov
sti
push
mov
insb
push
stc
lret
jne
push
sub
lret
jae
sub
jge
fwait
loopne
adc
lds
sbb
pop
pushf
pop
outsb
dec
mov
sbb
cmp
aaa
xor
push
add
mov
test
add
icebp
fld
push
int
fs
outsl
sub
or
inc
push
add
jl
xor
xor
das
fcomi
test
jle
enter
addr16
pop
fisttps
aas
mov
lcall
pop
pop
jb
mov
mov
adc
or
add
bound
pop
pop
push
mov
cli
icebp
dec
shrb
mov
inc
roll
notb
jge
je
jp
popf
inc
or
add
movsl
incb
jns
enter
ficoms
mov
mov
aaa
and
mov
cwtl
fldenv
jnp
das
jecxz
cmp
mov
sahf
aas
inc
fidivrl
sbb
mov
jae
dec
scas
mov
cmp
cmc
fmull
cs
iret
inc
iret
cmpsb
jmp
fcmovbe
aam
fists
movsb
push
cmp
ret
sbb
pop
loop
add
subb
hlt
loop
out
add
mov
adc
push
pop
lods
dec
jb
and
aad
jae
sub
jne
mov
xlat
in
sub
sti
shlb
loope
pushf
out
fldenv
xchg
mov
in
repz
xor
fstpt
es
pusha
pop
push
test
and
cmp
cmp
into
movsb
scas
pusha
push
mov
sbb
sbb
adc
mov
ret
jg
dec
mov
dec
pusha
push
mov
dec
cli
insl
mov
int
fiaddl
popa
mov
dec
or
sub
ret
add
int3
daa
mov
jge
xchg
mov
lock
mov
js
mov
adcb
lds
loopne
cld
pop
call
jg
adc
out
cmpsb
sub
ljmp
push
inc
and
outsl
or
dec
cmp
scas
stos
aam
mull
out
add
jecxz
das
jp
xor
rorl
sbb
dec
repnz
sbb
adc
sarl
dec
ja
cmp
pop
testb
out
jle
fcomps
test
cld
out
push
sub
in
push
je
sbb
outsl
movsl
pop
and
pop
ficompl
mov
mov
test
or
adc
mov
gs
aas
cli
loop
mov
mov
xor
ret
sub
jb
or
fstps
daa
pop
les
cltd
repz
repnz
ja
les
add
lcall
xchg
ret
lods
ds
ja,pt
and
inc
jae
je
dec
ret
shrb
mov
cmp
imul
inc
inc
lock
adc
mov
ret
addl
cmp
mov
fsubrs
push
adc
inc
stc
jnp
shl
sub
cs
inc
rolb
aam
outsl
add
xchg
out
sub
cltd
jns
and
sub
and
xchg
ret
daa
and
xchg
mov
pop
out
xor
push
dec
roll
push
mov
daa
cmp
pop
pop
fmull
xor
ret
imul
jg
mov
imul
das
xor
ret
dec
jmp
push
push
inc
shrb
jb
pop
mov
pop
or
lahf
das
lock
out
dec
cmp
xchg
enter
call
fmul
js
xchg
pusha
push
dec
aad
sub
clc
loopne
stos
fucomip
mov
cmpsl
xor
mov
imul
add
lea
mov
mov
jne
out
cwtl
or
inc
das
cmpsl
shlb
dec
shl
movsb
mov
sbb
cmp
dec
outsb
negb
fsubrl
insb
popa
pop
addr16
mov
pop
cmpsl
fbld
inc
xchg
ja
xor
rcrb
std
pop
movsb
in
lds
hlt
rcrb
pusha
int3
imul
daa
out
js
jge
stos
mov
aad
or
add
rcll
push
lods
xor
jmp
pop
popa
loope
inc
mov
gs
sub
in
adc
ss
gs
sbb
and
pop
sbb
mov
incl
xor
bound
cmpsb
xchg
fsts
jl
out
xchg
mov
sbb
scas
clc
iret
cli
mov
xor
cwtl
mov
mov
xchg
fildll
int
insl
pop
pop
aad
call
nop
jns
sbb
dec
mov
xor
daa
sbb
inc
adcb
sbb
andl
mov
mov
or
push
incl
dec
jae
test
mov
sahf
sbb
xor
mov
stc
jge
dec
add
sub
bound
sub
jae
pop
mov
mov
test
aas
in
in
jns
cli
in
xchg
cltd
cmpb
outsb
and
or
xchg
lret
mov
push
xor
das
sbb
xchg
dec
fstps
sbb
xchg
dec
and
push
jae
dec
incl
sahf
bound
dec
lcall
fnstsw
push
mov
int3
xchg
ret
std
enter
dec
pop
mov
xor
je
mov
and
es
out
pop
inc
dec
out
jl
aas
std
xchg
repz
scas
hlt
and
popa
dec
cmp
jl
sbb
aad
loope
stc
test
mov
iret
dec
sub
mov
add
add
ret
or
inc
and
sti
int3
adc
cmp
sub
bound
mov
mov
mov
aam
test
cmpsb
mov
dec
gs
fsubrs
dec
js
lret
movsl
or
bound
dec
into
cli
and
iret
das
orb
inc
or
or
leave
xor
jne
ljmp
outsl
mov
lret
inc
cmpsb
jns
lcall
cmp
ljmp
jmp
push
or
arpl
outsl
ret
jb
iret
push
imul
or
push
adc
ss
jl
pop
pcmpeqb
lock
jg
add
pop
mov
shl
inc
xchg
test
iret
iret
mov
shrb
pushf
cmp
fnsave
pop
idivb
xchg
fistpll
pop
call
inc
push
rcr
jp
and
out
jbe
push
cltd
jnp,pt
add
ss
and
adc
or
sub
enter
or
mov
shlb
incl
pushf
dec
out
and
dec
iret
mov
xor
fmul
jno
jnp
js
shll
cmp
or
cmp
loopne
sub
and
xor
dec
adc
dec
sar
es
lcall
push
add
xchg
push
mov
mov
out
sar
cmc
aam
mov
stc
and
sbb
insb
loopne
xchg
cmpsb
movsl
mov
cmp
xor
xchg
lret
jle
dec
mov
int
push
dec
dec
aam
pop
idivb
xchg
dec
iret
int3
mov
mov
and
push
cmpsb
cmp
lret
mov
dec
ficoml
cmp
jbe
inc
jo
lret
cmpl
adc
push
cwtl
xor
out
inc
mov
push
dec
fdivs
iret
pop
push
lds
push
in
mov
mov
lods
gs
fbld
jae
mov
cld
aam
es
subb
scas
inc
fadd
push
test
xor
adcl
mov
nop
ljmp
test
mov
pop
jno
xor
repz
mov
sar
add
dec
push
sub
and
add
cli
or
or
inc
xchg
push
gs
fadds
xor
test
in
xlat
or
push
mov
fstps
int
add
out
add
fcom
xchg
mov
cmpsl
mov
mov
or
out
lret
adc
adc
leave
cmp
inc
xchg
cmovo
add
test
sbb
mov
push
jo
iret
xchg
or
add
xlat
pop
imul
jmp
in
cmp
cmp
xchg
std
push
push
mov
or
test
lret
push
sbb
or
sub
jg
repnz
add
or
xchg
test
adc
or
in
push
jg
mov
lret
or
imul
scas
fwait
mov
dec
xchg
lahf
or
lods
mov
cld
faddl
je
push
bound
cmp
ss
stos
jne
and
leave
mov
mov
xor
jne
mov
lahf
in
or
cwtl
mov
fisubs
push
les
mov
push
out
xlat
and
iret
test
push
sarl
hlt
xchg
pop
mov
into
fstl
cltd
push
sarb
in
push
out
rolb
jns
cwtl
in
jae
aam
das
cli
xor
inc
jle
leave
stc
cmpsl
xbegin
adc
test
inc
scas
adc
push
push
mov
pop
adc
mov
lock
insl
cmp
sbb
dec
ds
inc
leave
fistl
cmp
and
inc
jle
jle
lret
das
push
aaa
imul
js
lea
repz
sbb
xor
mov
sbb
sub
outsb
mov
push
repz
dec
dec
jno
dec
leave
je
cmc
les
pop
inc
mov
pop
stos
adc
mov
push
out
sbb
loopne
push
or
xor
lret
mov
lret
cli
js
cmp
or
cmp
hlt
add
call
rcrb
adc
sub
fiaddl
push
int
repnz
scas
outsl
sbb
fsubrs
rcrl
fwait
ljmp
cmpb
cmp
js
dec
stos
mov
push
jbe
xchg
les
shrb
push
out
jle
out
push
bound
fdivrp
les
mov
lret
or
cmp
data16
cmp
ficompl
xchg
jae
roll
push
fimuls
out
add
insl
cli
enter
lea
fsts
lds
aas
jecxz
and
mov
popa
push
cld
aam
addr16
cmc
ret
out
add
mov
jl
data16
dec
orl
cmp
jbe
mov
inc
xchg
jns
ret
mulb
mov
imul
cmp
or
aaa
cwtl
imul
mov
xchg
and
mov
dec
fldenv
mov
pop
out
fstpl
fxch
xchg
mov
mov
cwtl
adc
jl
xor
xchg
sbb
test
mov
inc
clc
xor
xchg
clc
nop
ja
popa
test
jae
repz
sub
aam
insb
out
adc
repz
cmp
or
mov
mov
mov
mov
mov
testb
aaa
pop
lds
xchg
jnp
outsl
or
xchg
dec
jns
mov
out
pop
subb
lret
fcomp
bound
dec
push
xchg
leave
int3
test
lea
adc
dec
xchg
push
bound
inc
sub
loopne
mov
in
push
dec
scas
jb
das
push
movb
cmp
mov
push
jbe
enter
xchg
push
dec
fidivrs
out
pop
icebp
subl
jo
xchg
imul
sbb
cld
jmp
xor
fistps
shll
mov
jo
and
mov
or
loope
jp
mov
xor
push
ret
mov
cld
mov
push
je
inc
jmp
ret
call
aad
mov
or
shrl
test
cmp
aas
xor
push
aad
push
fnstsw
das
lods
sub
push
or
mov
pop
cltd
ret
push
insb
sbb
pop
mov
pop
jcxz
stc
or
inc
nop
mov
sbb
fwait
rolb
mov
aaa
sbb
icebp
jecxz
cltd
lret
int
push
xor
push
psrld
add
subb
movsb
sub
inc
std
in
cld
cmp
ret
pusha
or
add
cmp
inc
lods
lahf
pavgb
shl
sbb
add
enter
popa
ret
inc
push
fldenv
std
cmp
cmp
jnp
shll
xchg
jo
jb
adc
pop
adcl
sbb
stc
jns
addb
aam
insl
mov
inc
pop
pop
sub
push
sarl
inc
roll
jns
out
dec
arpl
add
mov
sub
adc
ds
sarl
std
fsubr
popa
add
insb
hlt
push
sbb
cld
jmp
scas
shr
lret
xor
jle
mov
inc
cltd
or
mov
sbb
xchg
push
push
jbe
sub
mov
lods
roll
pop
call
and
lea
jmp
xorl
mov
cld
daa
mov
push
push
or
inc
pop
es
sti
mov
cwtl
cmpsl
inc
sub
xor
aam
aaa
pop
mov
jmp
addr16
sbb
ds
jmp
pop
lret
cmpsl
sbbl
jne
pop
lods
jns
mov
enter
std
sub
cmpsb
jb
les
test
shll
iret
push
in
lock
dec
jno
sbb
mov
adc
ret
jbe
out
push
testb
testl
push
movsb
inc
pop
lea
test
jo
xor
adc
dec
push
jp
pop
cwtl
inc
xor
inc
push
outsb
inc
popf
cli
dec
mov
mov
ret
xor
jb
dec
loop
repz
add
ficompl
cmp
shll
jnp
push
divb
ret
std
cmp
clc
test
push
in
sub
mov
insb
lahf
push
int3
mov
push
sbb
sbb
cltd
jge
cli
ret
pop
mov
cmp
popa
mov
decb
xlat
bound
mov
inc
popf
cmpsl
sub
xchg
call
jno
sbb
ret
pushl
xchg
mov
int3
fwait
dec
dec
iret
sti
movsb
xchg
pop
add
scas
push
push
pop
rcll
ret
jle
sbb
fwait
dec
pop
iret
rcll
push
fcoms
fisubrs
ss
sbb
dec
push
sbb
mov
out
sbb
pop
fldt
add
or
push
mov
popf
imul
nop
lods
in
pop
dec
insl
jp
stos
xlat
lock
add
imul
dec
and
push
cmpsl
cs
ficoml
loope
and
pop
adcl
lcall
lret
je
in
sub
ror
mov
dec
and
out
shrl
dec
sbb
sub
ret
inc
xor
mov
mov
mov
xor
or
cli
pushf
dec
push
idivl
pop
and
xor
xchg
cmp
mov
lcall
mov
jno
jae
jp
cwtl
jae
leave
jne
adc
test
inc
mov
out
mov
das
in
cmp
adc
add
stos
inc
aad
push
dec
rorl
jae
mov
ds
mov
insl
xchg
lret
mov
add
je
jne
les
xchg
mov
ds
adc
mov
mul
xchg
push
pop
movsb
rcrl
bound
stos
mov
shll
or
jecxz
dec
cmpsl
mov
ljmp
insl
mov
adc
add
adcb
mov
add
cld
jne
xorl
sub
or
sahf
cld
push
aaa
int
mov
pop
mov
mov
inc
jno
int
mov
sub
cmpsb
or
dec
or
ret
int
cld
mov
mov
icebp
dec
pop
mov
test
sub
pop
mov
fstpt
and
sub
jl
jnp
rcrl
cwtl
push
in
ss
hlt
mov
mov
push
je
aaa
add
popf
sbb
iret
out
clc
insl
out
scas
mov
stc
arpl
pop
cmp
push
push
sub
xor
and
scas
lods
mov
bound
or
loope
in
cwtl
aaa
out
fwait
xor
lea
cmc
addr16
gs
sti
and
iret
mov
jmp
cmpsb
ds
rorl
lods
mov
jp
xchg
jge
xchg
mov
mov
and
push
pop
rcrb
jae
inc
rcll
int
sub
or
push
cli
jmp
cmc
aaa
shlb
je
cmpsb
push
into
stc
xchg
sbbb
outsl
fsubl
bound
sub
jae
mov
and
sub
xchg
pop
push
mov
test
and
fldl
insl
test
subl
dec
pop
mov
cmpsb
stos
repz
pushf
sbb
into
out
add
loope
pop
loopne
loopne
mov
add
or
lods
mov
or
mov
pop
popf
jp
imul
adc
cltd
push
icebp
adc
mov
dec
test
jne
ror
xchg
xor
mov
adc
in
test
pusha
sub
sbb
fstl
and
sub
pop
lods
push
call
or
inc
mov
dec
pop
add
dec
fisubl
sbb
addr16
mov
loop
arpl
pop
stc
jae
fdivl
fucomip
daa
mov
inc
adc
iret
xor
pop
lret
fists
ret
push
loop
xchg
fwait
popf
stc
inc
outsb
jg
fimull
jecxz
fwait
loopne
pop
push
pop
ret
cmp
xchg
iret
aad
nop
jge
push
cmc
aas
aas
data16
jmp
loopne
add
decl
jecxz
les
std
push
jbe
dec
xor
fadd
je
nop
orl
inc
jne
imul
mov
add
add
xlat
pop
pop
cmp
test
add
adc
mov
adc
cltd
pop
sub
push
dec
mov
or
jle
mov
cmp
arpl
xor
inc
jnp
and
leave
les
dec
jl
mov
mov
lds
popf
xor
rorl
bound
push
cltd
shrb
jmp
call
xor
cmpsb
cltd
idivb
mov
mov
cmp
fidivrs
out
and
jecxz
std
pop
fisubrs
fs
xadd
cwtl
pop
ss
in
sub
xlat
test
add
aam
lods
hlt
mov
mov
add
cmpsb
pop
lods
and
push
shl
call
aas
cmpsl
mov
mov
pop
inc
sbb
js
sbb
push
and
imul
sbb
xor
ret
call
add
xchg
mov
xlat
arpl
add
aas
lock
cs
pop
test
jbe
mov
inc
mov
inc
outsb
mov
pop
push
or
fsubrp
hlt
xchg
xor
push
sahf
movsl
imul
mov
enter
pop
jo
jnp
mov
daa
data16
outsb
test
adc
mov
jecxz
faddl
mov
pop
cmpsl
repz
cmp
outsb
das
int
adc
packsswb
outsb
mov
cmpl
push
push
pop
push
cmpb
cmp
lret
add
fcmovnb
insl
daa
fstl
clc
addr16
mov
aam
rorl
jae
lock
andl
add
jle
jnp
push
outsl
xorl
push
stos
push
xor
orl
or
sbb
inc
loopne
fimull
dec
sti
or
ss
cltd
mov
push
fildl
push
ud2
push
cmp
sub
jno
insb
daa
lods
leave
out
adc
int
pop
push
movsl
int
ficoml
jle
mov
xlat
sbb
sbb
shll
cmc
or
cltd
cmp
sub
adc
jno
test
outsl
call
clc
mov
dec
cld
ds
rorb
repnz
xchg
xchg
mov
mov
fcomps
jns
loop
aad
push
xlat
shr
rorl
je
jnp
push
push
jo
xchg
adc
jne
cld
or
filds
adc
mov
scas
adc
movsl
int
lods
popf
inc
adc
fidivrs
scas
test
mov
subl
sbb
cmpsb
sar
xchg
aam
rclb
daa
sahf
mov
mov
jl
pop
data16
cmp
sub
dec
sbb
pop
jle
xlat
pop
cmp
test
imul
xchg
jae
neg
mov
popa
aas
pop
repz
mov
in
icebp
loop
dec
jb
cwtl
xlat
jnp
imul
out
mov
cld
xchg
inc
sarl
adc
mov
insb
inc
mov
lock
mov
arpl
and
or
sahf
pop
mov
insb
fstpl
or
dec
fmul
popf
and
enter
sbb
xor
ret
cmc
cmp
jg
dec
mov
pop
jne
popf
test
dec
mov
mov
sbb
jbe
jb
mov
mov
lds
mov
outsl
cld
or
cmc
adc
inc
outsl
cmpsb
in
add
pop
pop
pushf
cmp
fists
or
mov
push
jb
nop
mov
jle
mov
adc
in
popf
push
je
stc
jmp
mov
cltd
push
les
mov
popa
sbb
xor
push
ficoms
add
cmp
int3
jl
das
aam
xor
fcoml
or
ja
scas
mov
inc
mov
call
cmp
dec
or
sbb
mov
cld
dec
or
or
mov
dec
bound
sub
enter
dec
sahf
pop
lret
pop
xchg
sar
insl
movsb
loope
mov
mulb
insl
jp
mov
jp
fistl
or
sti
and
pop
sub
popf
loop
and
lret
lret
cmp
insl
push
ret
stc
cmp
cmp
xchg
push
negl
dec
inc
int
mov
js
mov
pop
lods
xchg
xlat
loope
fwait
dec
mov
bound
mov
imul
outsb
bswap
loop
frstor
je
push
pop
pop
inc
je
mov
int3
aaa
or
mov
in
jg
add
shlb
push
fnstsw
inc
clc
stos
scas
pop
fwait
xor
fwait
jo
bound
sub
dec
mov
mov
xor
repnz
ds
add
in
aas
xchg
push
dec
fistl
mov
into
cli
pop
push
xchg
rorb
mov
cwtl
das
lret
add
push
or
test
jl
xchg
test
repnz
das
mov
scas
add
out
jmp
scas
push
mov
xchg
dec
cli
sti
movsb
rolb
lahf
pusha
mov
movsb
jecxz
lds
jge
test
arpl
mov
mov
loop
mov
dec
xchg
push
ljmp
sahf
or
pushf
pop
jle
aas
cmpsl
aaa
es
adc
xchg
add
ljmp
arpl
push
into
push
xchg
xchg
sub
cmp
subl
or
sub
add
sub
jns
push
int
dec
push
gs
jp
cmp
fcomi
mov
cmp
fsubrl
and
fldt
dec
repz
adc
pop
push
dec
incb
push
xchg
sbb
adc
jmp
outsb
stos
outsl
sub
enter
aas
jge
inc
mov
cwtl
std
mov
daa
push
pop
and
sbb
sub
ret
mov
ljmp
adc
jg
inc
aam
mov
mov
mov
cmp
xchg
adc
call
clc
outsl
inc
mov
js
dec
mov
mov
add
jp
ss
leave
sarl
mov
and
loopne
sub
ja
jl
mov
cmpsl
sub
push
push
jo
insb
cwtl
cwtl
push
push
push
jne
sbb
icebp
xor
sahf
iret
nop
push
aam
mov
push
out
daa
lcall
imul
xor
test
pop
xchg
xlat
mov
cltd
cltd
addb
rolb
int3
xchg
inc
dec
adc
repz
push
call
inc
inc
or
lods
jecxz
mov
movsl
adc
and
jecxz
cmpsl
inc
cmp
pop
and
loop
leave
or
xor
mov
rol
add
cmp
dec
stos
aaa
sar
inc
xor
repz
aas
les
ds
ja
jle
punpcklbw
push
stos
mov
pop
test
int
lea
scas
jecxz
pop
pop
jb
int
sbb
sbb
lea
add
out
mov
frstor
sub
or
dec
and
lret
gs
push
lock
subl
and
jp
icebp
jl
out
pop
xchg
inc
inc
or
push
imul
mov
test
cmp
xchg
jo
loope
mov
xchg
idivl
fistps
pop
cli
push
dec
das
sti
dec
mov
push
sub
insl
dec
push
xor
fnstenv
xchg
sbb
popa
inc
mov
das
push
loope
jge
mov
sbb
xor
xchg
xchg
cmc
adc
daa
lock
stos
pop
or
bound
mov
dec
data16
dec
cmpsl
adc
xchg
mov
pop
or
or
pop
push
jnp
out
adc
cmpsb
push
inc
sbb
inc
or
popf
adcl
mov
jne
xchg
and
orl
sub
cmp
mov
test
stos
mov
mov
adc
mov
or
mov
popa
repnz
cli
mov
fneni(8087
daa
les
jo
inc
rclb
sbbl
inc
adc
clc
stc
call
imulb
test
mov
lahf
std
mov
pushf
xchg
lock
add
aam
fdivrl
pop
daa
imul
ja
sbb
jp
mulb
popf
loop
fisttps
lods
roll
outsb
xchg
xchg
js
mov
inc
mov
xchg
cmc
sub
add
scas
jb
pop
ljmp
fisttpll
scas
mov
mov
sub
jle
sub
jns
dec
icebp
stos
add
dec
repnz
clc
cmp
fmul
push
pushf
cmp
out
or
sub
rcr
fst
push
sub
mov
icebp
rcrl
or
pop
inc
sub
outsl
sbb
mov
int
cld
test
es
push
lahf
inc
not
dec
inc
fists
mov
loopne
jb
loope
adc
fmuls
xor
pop
mov
pop
sub
test
ret
pop
lds
scas
popf
push
and
shlb
inc
into
cmp
outsl
lret
xchg
sub
lahf
adc
sti
fists
lahf
sub
xchg
jno
mov
push
cmp
test
xchg
dec
push
jmp
lds
sbb
push
push
xchg
insb
jge
fisubrs
jge
icebp
dec
outsl
aas
sub
fmuls
mov
xchg
popf
xor
xor
stc
lahf
test
add
push
jg
ffree
and
cmp
mov
sbb
mov
lret
xor
daa
das
jbe
je
cmpsl
xchg
leave
push
mov
lds
rcll
out
cmpsl
xor
ss
neg
ror
int
nop
pop
fnstsw
out
adc
sub
xchg
icebp
push
cmp
ret
aam
push
stos
adc
xchg
test
mov
mov
movsl
sbb
into
aad
and
push
imul
mov
mov
mov
or
loope
iret
inc
mov
dec
pop
je
rolb
popf
int3
or
popf
fcmove
or
out
push
jne
hlt
js
sub
inc
adc
fwait
mov
mov
scas
cmp
dec
push
lret
xchg
jp
sbb
mov
aaa
pop
adc
scas
scas
in
mov
movsl
repnz
sbb
dec
pop
aaa
sbbb
jg
mulb
flds
fnstcw
rorl
out
shlb
cmp
das
lock
stos
movsb
cmp
cmp
lea
js
xchg
push
push
push
aas
sbb
insb
aas
into
add
repz
adc
popf
dec
sub
mov
arpl
aas
sub
cli
in
dec
xchg
push
push
in
mov
xor
adc
xor
mov
jb
push
into
dec
and
in
jg
add
mov
ja
sbb
popa
imul
mov
jns
push
add
cmpsl
cmpsl
insb
mov
xchg
movsb
cs
stos
call
mov
movsl
int3
push
test
loope
and
sbb
push
adc
into
mov
addr16
mov
or
stos
mov
jle
xchg
inc
pop
sti
mov
xor
stos
dec
outsb
test
push
lea
testl
icebp
mov
lods
icebp
push
jmp
shrb
push
lods
rorb
mov
xchg
jmp
jo
push
jl
and
mov
mov
pop
mov
clc
inc
addr16
pop
add
cmp
xor
stos
adc
cwtl
dec
xor
gs
fildl
shll
mov
pop
mov
mov
mov
jne
cmp
ss
jecxz
aam
fnstenv
pop
popf
sbb
cltd
mov
es
fbstp
insb
dec
movsl
outsb
in
lds
add
stc
and
repnz
adc
add
mov
adc
arpl
adc
inc
pop
jb
mov
repz
out
fnstsw
pop
stc
stc
in
add
daa
push
push
mov
jecxz
cmp
push
popf
adcb
mov
fcomps
cmp
pop
inc
mov
test
enter
jne
pop
push
enter
lea
sub
and
fisttpll
movsb
packsswb
aam
jae
xchg
cld
mov
inc
push
jge
mov
cwtl
inc
cmp
loope
fidivrl
pop
mov
xchg
inc
sbb
shlb
call
push
mov
mov
sub
enter
mov
xor
jle
xor
movsb
cmp
scas
arpl
adc
mov
push
test
pop
bound
inc
outsb
ret
push
pop
cmc
test
or
dec
and
dec
in
jmp
xor
mov
add
fidivl
mov
cmp
nop
inc
push
mov
ja
sub
adcb
in
stc
hlt
jp
mov
xor
mov
and
sub
aaa
inc
add
sub
add
fldt
ss
outsb
lcall
mov
jnp
jl
xchg
add
mov
shl
cltd
roll
es
mov
jmp
lock
shlb
fbld
dec
in
mov
xor
out
cmpsl
and
je
in
in
jne
mov
pusha
pop
dec
nop
fstpl
loop
inc
and
sub
fists
movsl
mov
dec
clc
inc
inc
mov
cmpsl
mov
in
pop
dec
jnp,pt
cmpsb
push
mov
push
ds
xchg
jecxz
push
jnp
pop
push
mov
xchg
dec
subb
mov
xor
loopne
inc
stc
nop
int3
movsb
fistpll
mov
hlt
test
in
clc
lret
jnp
and
call
rorl
cmp
lahf
inc
mov
push
adc
inc
jle
mov
sbb
mov
mov
ljmp
bound
dec
sbb
imul
mov
cmp
into
xor
pop
xlat
sub
push
decl
mov
cmpsl
mov
push
pop
mov
mov
scas
andb
cmp
or
lret
adc
mov
mov
mov
mov
add
push
lret
pop
hlt
xor
out
xorl
inc
mov
xchg
pop
movsl
cmp
ret
aam
es
insb
movsb
xchg
cmp
dec
jg
aaa
addl
or
sti
jnp
mov
or
test
loope
out
fldenv
dec
xor
push
pop
cmpsb
cmp
sub
outsl
dec
sti
loopne
sbb
mov
jg
lcall
and
daa
movsb
cmp
mov
cli
mov
xchg
mov
movsl
dec
pop
fstl
xchg
dec
clc
xchg
jo
xchg
sbb
add
aad
push
cmpsl
push
fsts
fisubrl
sbb
rolb
inc
lods
inc
push
fidivl
jne
mov
int3
je
or
pushf
movsb
mov
mov
js
lds
adc
sbb
and
xor
iret
das
jp
sub
ret
sub
jg
pop
cmp
int3
sub
pop
mov
mov
jp
push
inc
js
sub
repz
dec
jle
xchg
loop,pn
loope
test
into
inc
insb
movl
dec
in
testl
mov
sbb
xchg
push
mov
les
ret
sbb
fcomip
daa
lods
and
ret
or
addb
mov
lcall
jns
adc
imul
aad
jg
add
ja
and
inc
outsl
or
and
push
popf
int
dec
daa
mov
leave
jnp
xor
sub
pusha
sbb
jo
add
dec
int3
sub
dec
imul
push
test
jno
je
scas
xor
mov
sahf
sar
into
jle
leave
insl
popa
push
lds
fwait
add
cmpsb
jne
push
adc
fdivr
lahf
std
lcall
jmp
pop
mov
inc
and
xchg
xor
sbb
sub
lock
outsl
stos
mov
scas
mov
jbe
sub
xchg
shl
sub
test
loopne
popf
pusha
js
add
dec
mov
sahf
fsubs
aam
inc
xlat
push
push
jle
push
int
nop
test
out
cmp
mov
inc
pop
jbe
mov
jb
lret
mov
dec
add
cmpsb
inc
cltd
int3
nop
dec
xchg
lds
push
test
or
test
nop
push
repz
sbb
mov
lahf
stos
xchg
cltd
add
and
lds
adc
sbb
jmp
xorl
xor
xor
mov
cmp
pop
adc
jecxz
ds
mov
mov
xor
mov
add
mov
repz
ljmp
aad
jecxz
xor
lcall
scas
push
test
jle
sarl
lock
push
jge
mov
out
ret
add
sub
into
stos
sahf
add
aam
fwait
in
es
insb
pop
push
loopne
push
arpl
mov
pop
lock
adc
inc
xor
sub
ljmp
dec
add
lcall
push
clc
jle
insb
pop
mov
sbb
cmp
jle
arpl
xor
fbld
nop
mov
push
mov
pushf
xchg
pop
lods
popa
sbb
pop
mov
sbb
pop
add
in
inc
or
stos
ret
pop
and
cmc
sub
push
sub
cmp
cs
dec
mov
mov
int3
pop
mov
add
mov
fistpll
adc
ljmp
cmp
jg
out
cli
test
stc
test
or
pop
lret
test
scas
jns
push
je
repz
sub
xchg
push
nop
lods
fdivrl
jne
loopne
adc
mov
xchg
sbb
mov
cld
inc
jb
and
pop
lock
and
fimuls
ss
push
jecxz
je
add
sbb
adc
out
inc
pop
insb
fs
aad
sti
cmp
push
adc
inc
cli
aas
mov
jns
sbb
mov
jge
dec
in
push
dec
push
ds
mov
cwtl
sbb
sbbl
mov
xchg
lahf
lods
sbb
pop
repz
dec
add
dec
stos
dec
mov
cmpsb
sbb
xor
cmp
in
sbb
or
cmp
jne
divl
lods
mov
cmpb
push
lahf
jno
ljmp
arpl
call
enter
js
or
mov
mov
xor
arpl
leave
mov
enter
subl
pop
mov
ficompl
adc
dec
js
xor
or
xor
aam
jp
mov
inc
ret
dec
fidivl
pushl
mov
lea
cmp
iret
gs
int
out
cwtl
xchg
push
cwtl
push
ss
divb
jns
lret
push
pushf
addr16
sub
dec
lahf
cmpsb
je
popf
xchg
pop
imul
or
pop
scas
push
faddl
push
mov
xchg
dec
push
and
cmpl
scas
inc
stos
mov
pop
lahf
add
cmp
les
sub
dec
cli
mov
pop
fst
or
in
mov
cmp
jns
sahf
pop
repz
mov
xchg
lea
push
out
jb
loop
fdivs
jno
sbb
adc
xchg
loop
sbb
pop
lcall
outsl
mov
xchg
push
jbe
arpl
gs
adc
stos
fwait
idiv
mov
rcl
fistps
les
loopne
test
sub
mov
xor
shlb
dec
inc
or
enter
mov
imul
sbb
loop
mov
jmp
add
sub
out
mov
xchg
fisubrs
inc
mov
out
or
xchg
mull
ret
or
cltd
repnz
mov
adc
sub
icebp
xor
xor
cmp
mov
popf
stos
js
cmpsb
or
aam
xor
mov
adc
mov
jae
pusha
lret
xor
test
push
push
mov
push
dec
jl
mov
in
dec
or
cmp
xor
outsl
adcb
fwait
sbb
rorb
jne
cmp
push
stc
into
xor
sub
and
insl
lcall
sbb
out
sbbl
ljmp
lret
mov
loop
xchg
pop
mov
out
std
imul
movsb
shll
fidivl
dec
pop
jge
pop
pop
mov
and
cwtl
sub
push
cmp
lock
ds
add
dec
push
scas
cs
lock
dec
scas
add
addr16
mov
iret
add
mov
stos
mov
xchg
in
fcompl
lcall
addr16
mov
gs
lahf
roll
pop
xchg
add
pop
and
lods
in
cmpsb
int
jo
mov
inc
cmp
mov
dec
inc
mov
and
test
insl
mov
push
pop
add
fsubrs
cmp
bound
push
mov
dec
add
outsb
sahf
fs
mov
stc
jns
clc
inc
pop
pop
loope
into
sub
aam
push
lock
push
jge
adcl
adc
cmp
sbb
or
outsb
js
push
cmp
adcb
lods
add
pop
add
dec
notb
imul
shrb
pusha
mov
jg
pop
scas
leave
ja
dec
inc
mov
fiaddl
rcr
lret
aam
repz
xlat
mov
cltd
adc
push
mov
dec
xor
pusha
push
pop
inc
ljmp
xchg
into
dec
jecxz
loop
sti
sub
push
pop
add
popf
fucom
lahf
adc
mov
mov
cmpsl
jnp
jl
and
lret
mov
test
ror
xchg
imul
xchg
cmp
ret
aad
lret
nop
inc
sub
stc
xor
stos
fimull
push
xchg
jno
push
push
pop
out
push
sbb
adc
jns
sti
jbe
ja
add
dec
sub
mov
ret
and
sub
sbb
imull
cmp
xor
and
imul
std
add
xchg
and
out
ret
mov
mov
call
jns
lahf
jne
mov
mul
jo
or
stos
mov
cld
negb
cwtl
das
popf
cltd
enter
loopne
inc
nop
dec
mov
ret
mov
mov
lret
xchg
mov
imul
sbb
push
mov
cmp
std
lock
mov
bound
jle
addr16
ljmp
dec
mov
and
push
push
stos
scas
mov
xchg
repz
popf
push
rsqrtps
decl
addb
push
jmp
cmp
mov
cltd
js
ret
xor
lods
cmpsl
mov
xchg
jo
cmp
mov
pop
dec
insb
out
inc
and
or
mov
mov
xor
lds
and
pop
lods
pop
dec
shll
fldcw
mov
int3
lcall
ret
jl
js
push
cmpl
fwait
lods
rcl
xchg
xchg
xchg
stos
xor
mov
pop
test
jle
pop
fs
dec
imul
mov
dec
testl
and
call
mov
cmp
out
xchg
cli
mov
mov
bound
out
push
ja
mov
ds
int3
and
xor
out
jnp
mov
lea
data16
adc
mov
sbb
push
adc
mulb
push
add
mov
inc
iret
sub
pop
out
and
hlt
pop
pushf
ret
jbe
cli
xlat
rorl
push
cmp
push
rclb
sbb
mov
mov
jmp
in
fdivrl
enter
or
xor
cltd
jb
pop
lea
insb
pusha
or
sti
mov
jne
push
sbb
test
pop
sahf
je
push
loop
mov
rcrb
push
pop
xor
push
popa
mov
int3
pop
pop
pop
pushf
test
add
fcoml
sub
call
cmpl
push
xor
outsl
popa
cmpsl
jne
pop
fs
adc
add
mov
loopne
dec
aam
ret
mov
iret
clc
loop
sub
xchg
xchg
stos
jo
iret
mov
sbb
push
xchg
std
mov
pop
adc
das
sub
jle
das
into
test
pop
lock
adc
call
pushf
int
cmp
mov
adc
adc
mov
sti
rcrl
mov
jp
notb
arpl
imul
leave
sbb
mov
fld
jle
inc
filds
sahf
and
or
out
not
sub
xor
sbb
pop
push
jnp
leave
popa
cmp
movsl
pop
push
mov
push
lea
fdivrs
push
rcrl
cmp
imul
out
movl
jl
imul
add
cwtl
cltd
cmpsl
and
xchg
jb
mov
pop
push
adc
stos
push
loopne
dec
test
mov
lds
pop
in
push
add
sarb
lret
and
xchg
orl
fsubl
out
popf
adc
push
mov
adc
leave
adc
dec
add
push
jecxz
shl
add
xchg
lods
xchg
loope,pt
xchg
imul
fstpt
les
push
and
dec
out
enter
imul
cmp
lret
addr16
jbe
dec
xor
xor
inc
out
scas
cmc
int
jge,pn
push
mov
pop
fsubrl
xchg
icebp
fisubl
mov
xchg
add
out
test
mov
mov
sub
push
pop
divb
or
fdivl
add
pop
add
pop
xor
std
sbb
imul
fwait
leave
mov
adc
jmp
push
jmp
inc
pop
repz
xchg
cmp
and
xchg
mov
sbb
jg
push
jle
addb
xchg
insb
dec
arpl
ret
adc
add
mov
jecxz
mov
lock
mov
loop
push
std
jne
testb
inc
inc
mov
scas
dec
jae
mov
add
addb
das
and
sarb
push
lcall
pop
xor
ret
stos
dec
jae
hlt
js
cltd
lods
inc
push
test
xchg
push
jne
je
sub
ffreep
sbb
arpl
pushf
mov
and
stos
pop
out
test
insb
push
mov
sub
lret
ljmp
sub
inc
adc
movsb
stos
adc
fcmovu
mov
fcomp
daa
adc
movsl
inc
cmp
addl
push
mov
pop
mov
insb
in
in
dec
adc
les
aaa
arpl
outsb
out
adc
xlat
scas
cltd
js
stos
or
pop
dec
popa
stc
pusha
jg
jmp
aad
mov
push
mov
int3
sub
push
imul
lcall
es
into
ret
lds
scas
jp
outsl
add
xor
stc
arpl
jnp
pop
mov
aam
je
decb
and
jp
mov
out
call
test
test
inc
outsl
xchg
ret
dec
fidivs
pusha
inc
jecxz
stos
jae
pop
imul
sub
jb
popa
fcmovnbe
inc
test
or
iret
cmp
fnstsw
xlat
push
xlat
daa
cs
insl
cmc
mov
push
dec
sub
or
jg
nop
incb
pop
mov
rcrl
data16
repnz
or
popa
jp
and
pusha
mov
fcomps
add
into
roll
aam
mov
sub
repnz
add
subb
or
fisttpll
dec
daa
mov
jo
idivb
push
rcrl
pop
dec
mov
lahf
cld
mov
xchg
xchg
pop
mov
jne
sub
cvttps2pi
repz
push
cmc
into
add
push
subb
lcall
push
dec
mov
add
or
stos
dec
pusha
movsb
jmp
xor
test
jne
or
iret
push
out
jl
in
dec
pop
jg
push
xlat
jecxz
test
jge
mov
push
setl
and
mov
cmp
mov
jge
mov
xchg
cmp
add
movsb
or
mov
fwait
cmp
mov
out
repz
iret
or
dec
xorl
lret
jmp
pop
push
popa
mov
mov
lcall
ja
rol
add
xchg
mov
cltd
inc
in
icebp
ret
xor
pop
ret
repz
mov
pop
dec
shll
pop
pop
push
mov
flds
xchg
lahf
cmp
lods
test
or
dec
sbb
add
xor
jl,pn
inc
xlat
adc
push
mul
pop
jp
xchg
outsl
pop
js
xchg
arpl
xor
lock
cltd
xor
xor
mov
dec
lock
insb
mov
mov
sbb
dec
sbb
and
adc
and
dec
cli
sahf
mov
out
out
adc
pop
enter
aad
fstpt
roll
and
das
xchg
es
test
fwait
mov
add
cltd
push
or
add
mov
adc
lds
jg
out
pop
mov
les
test
outsb
jne
ret
mov
mov
fsubrs
add
jecxz
mov
mov
cmpsb
dec
std
xor
inc
cmpsb
mov
dec
ljmp
popa
add
in
push
out
add
hlt
fldt
adc
cmp
stos
or
sub
fnstsw
mov
mov
clc
sub
or
cld
cmpsb
mov
std
jmp
mov
push
xchg
add
outsl
push
adc
or
xor
jl
pop
cmp
outsb
shr
jae
cmpsb
add
loop
pop
jo
sub
adc
cli
rclb
sbb
push
loopne
pop
xchg
pop
mov
cmpsb
push
xor
cwtl
or
mov
ljmp
test
outsb
dec
mov
sub
xchg
push
lahf
data16
test
jge
sub
pop
mov
aaa
fadds
stc
inc
in
xchg
test
or
add
out
insl
cmp
mov
mov
inc
adc
out
mov
sub
or
pop
pop
andb
daa
push
fisttpll
inc
repz
xchg
insb
andl
and
popf
popf
ret
mov
popf
insl
and
fldt
lea
cwtl
and
out
lods
stc
push
inc
sti
xchg
je
jns
std
mov
pop
sbb
mov
xor
adc
push
dec
sub
repnz
es
imul
fcomi
or
add
cmp
xchg
notl
cmpsb
les
pop
enter
fdivrp
mov
rcr
mov
jne
fildll
jne
subl
adc
mov
and
cs
pop
enter
out
xchg
jle
jge
das
cmpsb
icebp
jle
xor
jno
pop
xor
mov
decl
je
mov
shll
cmpsl
lcall
in
cs
sbb
ja
imul
cwtl
rcll
xor
pop
vunpckhpd
sub
mov
loopne
inc
add
andl
cld
push
push
addb
mov
push
push
push
lahf
fdivl
push
adc
inc
fdivp
fiaddl
push
pop
aam
mov
repz
orb
dec
add
adc
xchg
enter
sarl
cwtl
pop
fcompl
call
jns
test
int
in
cmpsl
xor
std
outsl
jno
sbb
daa
fistpl
xlat
out
fbld
lea
nop
ja
loope
ret
lcall
sbbl
push
outsb
lods
arpl
sbb
push
shll
xchg
xchg
or
push
sti
lds
jle
js
pop
jle
xor
fadds
cld
lea
inc
daa
lcall
mov
pop
inc
out
or
es
fiadds
scas
adc
out
mov
sub
xchg
sub
pop
pop
lods
xchg
dec
rclb
mov
mov
enter
aaa
sti
xor
test
out
xor
cmp
xlat
movsb
sahf
xor
pop
in
xchg
imul
rcll
popf
imul
mov
jmp
push
sub
sbb
dec
push
mov
repnz
cmp
outsb
dec
popa
cmpl
jnp
outsb
test
sub
cmp
gs
je
inc
sbb
sbb
mov
add
pushf
testl
popf
push
loope
xchg
inc
dec
lods
lods
and
mov
lock
cmp
cmpsl
sbb
fwait
sub
sbb
jb
cli
xor
std
cmp
in
shlb
pop
push
cmp
arpl
inc
subl
lret
cmp
clc
adc
clc
les
stos
lcall
xchg
stos
cmp
push
pusha
dec
negl
sub
push
jbe
add
insb
rcrl
scas
imul
loope
adc
push
xchg
sub
adc
push
pop
sbb
jp
out
pushw
enter
jns
in
mov
addb
ret
add
inc
clc
mov
enter
xchg
popa
and
mov
add
adc
test
add
into
cmp
rcrb
cli
hlt
in
mov
push
and
push
sub
mov
xchg
loop
test
xchg
jo
das
cli
notl
testl
js
add
movdqu
and
or
push
imul
mov
insb
fs
gs
ja
sub
sub
stos
fstl
mov
fdiv
sub
lret
stos
outsl
add
stc
mov
pop
cmpsb
mov
xor
lret
pop
pop
jl
push
xchg
sbb
dec
xchg
pop
mov
mov
push
repnz
in
inc
cli
mov
pop
pmaxsw
rcll
stos
add
xor
xorb
call
icebp
cmp
xor
xchg
mulb
jge
adc
xchg
insl
adc
lcall
out
jbe
dec
mov
lds
cmpsl
test
push
int3
jmp
mov
adc
mov
data16
lods
sahf
jl
test
sbb
test
inc
cmp
mov
lea
pop
cmp
jo
push
mov
daa
and
lds
jno
dec
ljmp
test
mov
loopne
lret
cwtl
jge
fiadds
orl
fisubrs
jl
js
push
iret
pop
push
jbe
lods
xor
pop
and
dec
insl
mov
int3
mov
shrb
fwait
test
mov
jb
loope
leave
xor
cltd
movsl
mov
test
add
ja
rcrl
xor
pop
push
pop
or
outsl
fnstsw
xor
out
stos
scas
dec
mov
sbb
and
jmp
cmp
mov
rcll
and
mulb
add
push
popa
xchg
sub
mov
aaa
jmp
inc
cmp
sub
sub
adc
mov
push
insb
mov
in
es
or
push
outsl
jae
dec
test
pop
movsb
adc
inc
ja
cmp
cmp
inc
js
pop
out
jmp
jg
fs
mov
jno
dec
push
sbb
add
leave
inc
jbe
adc
shll
dec
push
les
pop
pop
call
popa
push
ja
lds
outsl
push
cld
xchg
sub
fisttps
mov
enter
sbb
pop
bsr
std
cmp
js
xchg
or
xchg
or
out
fstpl
mov
pop
filds
sbb
and
xchg
mov
ret
xchg
lret
movsb
mov
xor
cmp
call
jnp
adc
test
fisubl
mov
faddl
adc
mov
out
std
push
pusha
fcmovbe
fiadds
push
dec
push
jb
lods
xor
adc
jb
mov
jnp
push
stos
arpl
daa
pop
mov
fwait
cwtl
aaa
idiv
push
insl
xchg
jecxz
mov
adc
push
hlt
je
dec
aaa
out
mov
add
lret
and
rcrb
sbb
data16
jmp
adc
jg
add
inc
std
lock
repz
leave
subl
aas
cmp
pop
jns
dec
sub
int
cmp
cwtl
jl
jns
mov
push
in
popa
mov
fstpl
sbb
imul
in
add
adc
shr
mov
push
jns
cmp
rorl
sti
stos
sbb
or
mov
movsl
sub
sbb
mov
cmc
stc
jbe
arpl
push
jecxz
xchg
mov
sub
outsl
mov
in
out
movsl
sahf
push
xchg
popf
fldt
cmc
insb
cwtl
sub
scas
pop
dec
cltd
jns
test
mov
sub
imul
lahf
pop
imul
scas
cs
mull
mov
lods
inc
and
dec
mov
dec
pusha
dec
jb
mov
jmp
decb
push
xchg
loopne
jecxz
xchg
xchg
pop
jmp
mov
sub
cmpl
dec
aas
imul
cld
xor
in
movsl
es
add
and
data16
nop
popf
aam
sub
adc
fdiv
test
lahf
aad
orl
test
mov
jb
js
mov
enter
les
int3
repnz
or
sahf
pop
or
xor
out
inc
dec
xor
aas
mov
lea
adc
adc
cli
xchg
bound
and
ret
loop
mov
xchg
popa
fcmovbe
roll
mov
ficoms
call
insb
pop
into
adc
imul
mov
enter
hlt
into
mov
in
fcoml
mov
out
test
cmp
mov
xchg
data16
outsl
sub
popf
or
adc
cmp
add
ror
out
ret
push
pop
dec
iret
stc
roll
inc
lods
test
pop
jge
and
push
xchg
mov
inc
es
loopne
jmp
push
jle
xchg
enter
shll
in
rolb
jl
sbb
fidivl
pop
sub
or
sbb
and
sahf
dec
sub
fs
mov
imul
inc
push
mov
jnp
cmp
pop
or
and
mov
stos
xchg
nop
xchg
adc
loop
xchg
mov
mov
mov
int
lret
mov
cmp
adc
enter
add
add
and
aad
orl
sbb
les
or
sub
mov
repz
lds
add
aaa
jne
enter
push
inc
jmp
jmp
aad
pushf
icebp
imul
scas
into
inc
inc
pop
dec
jg
mov
lret
xchg
imul
push
jmp
sub
jl
adc
mov
cmc
pusha
pop
and
cld
jb
in
ljmp
mov
jnp
movsb
cmpl
mov
sbb
clc
push
std
push
push
pusha
dec
call
sbb
mov
lods
jl
sbb
iret
add
adc
dec
dec
insl
cmpsl
or
movsb
loope
adc
cmp
add
roll
xchg
xor
clc
push
mov
icebp
mov
mov
xor
in
inc
inc
in
xchg
pop
lods
clc
cmp
sbb
inc
std
push
shrl
arpl
xor
addl
push
mov
xchg
iret
outsb
push
mov
sbb
hlt
fsub
scas
pop
dec
pop
dec
sbb
andb
in
aam
stos
sub
lret
loopne
cmp
pop
mov
pop
adc
out
loop
cmc
sti
lret
mov
outsl
out
xor
push
dec
lcall
aam
xchg
xor
outsl
mov
and
inc
adc
lods
xchg
ds
inc
cmp
push
cmp
dec
aam
pop
and
insb
and
ret
pop
scas
jmp
mov
movsl
ds
test
push
xor
popa
mov
pop
push
xchg
jmp
outsl
aam
jne
scas
push
jnp
rcrl
ret
push
es
bound
aam
fadd
dec
ljmp
sbbl
bound
pop
pop
or
rcrb
push
inc
out
inc
in
divb
pushl
scas
cmpsl
out
mov
clc
xor
aad
jno
cltd
mov
lock
xor
and
or
addr16
or
or
xchg
arpl
or
push
cwtl
or
mov
cmp
aad
jbe
or
les
xchg
pop
leave
jmp
inc
lds
sbb
cmc
sub
cmp
and
clc
xchg
add
pop
fmul
push
xor
mov
loopne
push
sbb
inc
fldenv
mov
movsl
shl
movsl
jb
and
div
enter
insl
cmp
push
pextrw
mov
or
rorl
in
in
push
out
push
jp
inc
jge
mov
incl
shrl
xchg
out
adc
out
push
rcll
mov
pop
adc
insl
cmp
pop
lds
out
cmpsb
push
sub
pop
cmp
mov
xchg
or
test
push
sub
mov
fisttpll
out
shll
lret
add
sub
xchg
mov
adc
fistl
push
adc
jb
push
mov
mov
xchg
jb
cwtl
pop
jae
dec
addl
fsubrs
adc
stos
shll
gs
mov
cltd
cmc
flds
sub
lret
divl
adc
mov
adc
out
icebp
orl
jp
into
lods
test
cmp
in
and
jle
sub
xor
repz
ds
lock
mov
out
xchg
fimuls
mov
lods
rcrb
sub
or
add
lret
lods
insl
aam
fdivl
popw
push
sti
subb
movsl
scas
add
mov
inc
in
mov
add
push
fisttpll
dec
and
subb
ret
mov
dec
rcrl
jecxz
xor
insb
push
mov
mov
lds
or
mov
jns
jnp
adc
push
mov
in
adc
in
jp
outsb
icebp
sub
mov
addr16
or
jge
sbb
cmp
call
mov
add
inc
cmpxchg
or
cli
jae
mov
jl,pn
and
rcrb
mov
mov
sub
xchg
fnstenv
out
inc
pop
sbb
cli
cmpsl
xchg
fisubrs
ss
lock
idiv
mov
push
test
inc
mov
cmp
xchg
out
fiadds
rcrl
imul
inc
aaa
stos
imul
mov
dec
push
repnz
adc
mov
push
sbb
push
icebp
aad
push
add
sarl
mov
lahf
iret
push
movsl
sti
jp
adcl
xor
inc
das
mov
bound
sub
sbb
js
dec
rclb
testl
sub
mov
fisubs
fidivrs
pop
mov
jg
mov
arpl
pop
shll
add
jle
lds
fimuls
push
jp
outsb
pusha
xchg
fildl
xchg
inc
sub
pop
jg
mov
inc
addr16
sub
inc
scas
pop
xchg
xor
xchg
rcrl
js
js
lds
mov
sbb
sub
xor
mov
shl
mov
in
xor
and
imul
addr16
test
stos
imul
dec
ss
sub
dec
nop
sbb
jnp
sub
mov
adc
xchg
lahf
sub
mov
dec
inc
lock
out
xchg
mov
repz
push
lock
mov
mov
add
idiv
lcall
shrb
jge
outsl
aam
mov
jns
sbb
adc
sub
push
out
rorl
pushf
mov
popa
dec
aas
mov
xchg
rclb
add
sub
fs
inc
push
mov
outsl
sbb
dec
mov
sub
pop
sbb
adc
imul
pop
shlb
mov
mov
xchg
jg
jge
xor
xor
insl
add
imul
mov
xor
xchg
pop
adc
pop
mov
ja
je
jae
sbbl
mov
pop
push
in
inc
mov
and
mov
push
les
or
rcll
cmpsl
call
loopne
or
ret
or
push
push
das
call
mov
pop
adc
xchg
aad
sbb
and
aam
cmp
mov
pop
mov
add
mov
loope
xchg
gs
aam
into
pop
out
xchg
es
fcomi
xchg
out
mov
movsl
shlb
mov
mov
outsl
popf
mov
sub
push
testb
in
loop
pop
xor
std
stos
inc
ss
fwait
fwait
mov
jl
push
fwait
lret
xchg
mov
or
mov
jge
arpl
dec
or
xchg
cmpb
push
fnstcw
mov
dec
mov
add
inc
xorl
mov
scas
mov
jae
in
pop
mov
xchg
jb
mov
mov
dec
es
push
jae
mov
jns
ss
cwtl
ficoms
rorl
or
xor
mov
sub
lahf
xchg
push
out
inc
scas
in
dec
push
xchg
adc
jmp
lods
jl
jle
fs
lock
les
pop
cmp
push
mov
mov
je
pushf
pop
popa
mov
lcall
mov
out
and
mov
xlat
or
add
inc
sbb
lock
imul
push
mov
loop
sbb
mov
push
iret
push
andl
test
cli
sbbl
fwait
or
iret
fcmove
loope
inc
imul
lock
pushf
lods
add
jno
push
lret
das
loop
adc
add
hlt
xchg
sub
sti
dec
fnstenv
ret
jbe
or
mov
or
bound
cmc
leave
in
ljmp
jecxz
mov
push
jns
jg
dec
mov
or
jbe
loop
mov
fwait
mov
xchg
add
push
inc
mov
jns
ret
sbb
jg
cmp
mov
or
jae
cmp
and
sbb
lcall
or
repnz
dec
ljmp
dec
add
push
lahf
xor
sahf
imul
fldenv
jns
and
aad
mov
div
xor
movsb
aam
pop
out
and
jl
orb
aaa
ds
arpl
scas
rcr
push
push
jbe
pop
xchg
dec
jne
sbb
popf
mov
js
rol
das
dec
sarl
out
rcrl
testb
xor
lret
and
mov
mov
insb
sbb
xchg
shrl
mov
in
loopne
lret
adc
jle
sub
xchg
mov
xlat
sar
rclb
sti
xlat
loope
in
popf
jmp
out
adc
mov
pop
out
xlat
in
mov
inc
sbb
sbb
jmp
movsb
ja
shrb
or
fisubrs
jp
leave
or
data16
jae
mov
cmp
dec
xor
cmpsl
sub
xor
mov
mov
cltd
mov
lock
inc
outsb
js
fstps
cmp
out
popa
and
inc
pop
sub
cmpsl
sahf
rol
push
dec
cmpb
sub
frstpm(287
into
mov
and
nop
dec
push
add
dec
fldenv
jns
pop
out
xchg
jns
push
mov
hlt
outsl
pop
shll
sub
or
sub
pop
repz
fsubrl
imul
jp
insl
sbb
jae
loopne
mov
addr16
sbb
sub
rcr
nop
push
push
cs
stos
push
loopne
ret
sti
lahf
das
xor
pop
hlt
je
fdiv
insb
add
add
scas
jnp
outsl
xchg
push
xchg
and
ljmp
jbe
outsl
jae
std
adcl
inc
jnp
push
mov
xchg
fsubrl
aas
mov
call
inc
and
shll
aas
cmpsb
xor
aas
jno
cmc
sub
std
mov
ss
sub
mov
or
sub
cltd
mov
add
and
in
out
mov
sar
xchg
sbb
inc
cmp
sub
out
dec
sbb
mov
push
dec
fs
les
and
mov
lret
ja
insb
and
fmul
std
sub
mov
inc
mov
insb
pop
pop
loope
je
cltd
test
das
in
cmpsb
sub
arpl
mov
cwtl
push
iret
mov
clc
mov
and
fwait
jb
std
pop
aam
mov
divb
std
adc
inc
int
mov
lahf
push
jnp
adcb
je
cmpsl
lods
and
mov
xchg
xor
cs
sbb
call
test
dec
aas
adc
push
iret
loopne
mulb
and
in
iret
sbb
and
loope
outsl
pop
test
xor
mov
int3
mov
lock
xor
popa
in
xchg
cs
dec
jno
push
xor
mov
inc
int3
mov
test
jp
mov
pop
mov
add
aam
lock
loop
xchg
addr16
test
adc
cmp
pop
fisubrs
ret
pop
push
stos
mov
in
lods
jbe
or
mov
idiv
in
negl
pop
inc
call
pop
sub
pop
jbe
pop
adc
pop
je
stos
inc
lock
push
daa
xchg
cld
sbb
jl
arpl
mov
call
ds
das
jmp
jecxz
cmpb
sahf
scas
movsl
mov
cmp
popa
aas
fcmovb
sub
sbb
mov
cs
scas
jg
mov
mov
sub
sub
jecxz
mov
repz
out
mov
pop
and
sbb
inc
jae
jmp
movsl
stos
arpl
and
inc
lcall
sub
movsl
add
sub
inc
aas
gs
shrb
scas
mul
icebp
lds
inc
xchg
or
fmul
int
fwait
das
mov
repz
push
ficomps
arpl
xchg
push
orb
jg
mov
cwtl
je
dec
lods
cmp
pop
jne
xchg
mov
test
loop
movsl
sub
mov
pop
cmc
jns
scas
jae
clc
pop
fwait
add
stos
outsb
outsb
xchg
add
test
lds
imul
movsl
cmp
mov
in
cmp
xchg
sub
ljmp
dec
je
cmp
mov
icebp
popf
mov
test
sbb
js
cmp
fmull
dec
cwtl
pop
jmp
jo
or
mov
fs
rcrb
clc
into
roll
out
fdivrl
aam
imul
mov
sahf
negl
and
mov
sbb
jnp
in
inc
xchg
imul
ja
out
enter
adc
add
sbb
out
mov
into
mov
push
cmpsb
sbb
jae
mov
jns
mov
sub
call
mov
inc
popf
adc
push
outsb
inc
cmovs
dec
or
stos
sti
jge
loopne
fnstenv
dec
jns
cmpsl
nop/reserved
inc
xor
dec
aas
xchg
and
and
daa
lods
dec
xor
jp
enter
adc
test
inc
lret
sti
jge
fdivl
pushf
sti
pop
cmp
or
out
es
cmpsb
ret
adc
mov
int
repnz
test
jecxz
sub
mov
sbb
test
mov
sbb
adc
dec
cwtl
sti
aam
cmpsl
loopne
xchg
data16
push
out
aad
jg
dec
push
and
mov
loop
sbb
repz
sti
and
outsb
push
insb
enter
clc
push
pop
xor
or
xchg
js
loop
jge
mov
fstpl
mov
push
jbe
test
sti
push
addr16
mov
and
ds
aad
mov
and
jmp
imull
sbb
adc
out
leave
pop
pop
fwait
test
add
nop
clc
adc
mov
cmp
loope
inc
jge
adc
sub
rol
leave
fs
dec
ja
testb
ret
adc
xchg
inc
add
and
lcall
dec
cs
loop
mov
scas
jle
mov
bound
sub
push
sub
add
dec
mov
loope
stc
mov
pop
mov
imul
cmpl
popa
popa
loopne
lock
fistl
inc
mov
sbbb
xchg
int
mov
jmp
ds
das
push
xor
cmpsb
jbe
sub
sbb
insb
sbbl
mov
add
nop
add
mov
mov
mov
mov
xor
or
xchg
jo
sahf
movsl
pop
push
xchg
dec
sub
xor
cli
jne
cmpsb
out
mov
mov
cmp
adc
mov
movsb
pop
mov
imul
in
cmc
mov
or
xlat
push
jne
push
ja
and
or
lret
and
lret
negl
dec
dec
lret
out
jle
mov
out
std
and
adc
dec
cmpsb
push
cmpsb
loop
dec
imul
jge
lahf
xor
sub
lods
iret
sbb
adc
push
unpckhps
rcr
sbb
pop
sub
xchg
jb
into
fcmovbe
jcxz
and
push
loope
adc
or
call
sbb
pop
mov
adc
jno
sti
push
mov
mov
xlat
rcl
push
or
push
mov
mov
notl
push
sub
cvtdq2ps
jne
sub
sti
scas
adc
push
js
and
jmp
js
mov
push
or
stc
add
adc
xchg
xchg
push
cmpsl
adc
dec
pop
clc
pop
scas
scas
in
add
push
out
insl
xlat
jo
inc
lock
mov
sub
cmp
in
adc
sbb
sub
adcb
mov
mov
add
adc
pop
xor
clc
aam
adc
push
andl
lahf
stc
mov
and
pushf
lcall
sbb
mov
jnp
sbb
sti
pop
mov
xor
pop
stos
xchg
pop
jp
xorl
inc
and
fs
fists
hlt
push
pop
mov
test
out
aad
insl
int
dec
int
jns
adc
jae
loop
mov
push
loope
enter
pop
jbe
movsl
dec
pop
and
jb
sbbl
mov
xchg
aam
mov
push
jl
outsb
movsl
mov
shll
sbb
dec
push
jg
out
cmc
test
lock
lock
xchg
and
lahf
xchg
adc
adc
lods
fnsave
mov
repz
adc
jb
negb
mov
sbb
pop
lret
mov
or
scas
push
xor
scas
mov
int
imul
insl
xchg
bnd
xchg
adc
ret
add
or
int3
scas
mov
or
stos
jb
adc
xor
imul
adc
scas
mov
push
rcrb
loopne
loop
loop
cmpsb
pop
fisubl
xor
jae
jg
int3
push
out
mov
leave
jle
inc
iret
in
dec
inc
movsl
jae
sarl
adc
ret
jg
mov
dec
sub
jnp
cmpsb
jmp
fisttps
sub
into
inc
adc
arpl
push
cmp
cmpsb
ss
push
data16
xor
or
xchg
rolb
inc
leave
xchg
adc
popa
fsubrl
dec
test
sbb
jmp
repnz
jecxz
test
out
adc
rclb
dec
or
cmpsl
dec
ds
fisubs
andl
jno
pushf
dec
fcmovnb
add
testb
les
dec
mov
sub
mov
jl
rcrl
cltd
or
loopne
push
mov
ret
dec
scas
sbb
xchg
aad
hlt
cmp
and
add
cmp
and
jmp
jmp
add
into
push
add
pushf
imul
movsl
jae
inc
jae
and
pop
sub
test
out
lret
add
mov
arpl
jne
out
icebp
xor
lock
inc
push
icebp
pop
push
sahf
lods
sub
add
imul
mov
xchg
adc
int3
das
out
in
and
sbb
xchg
push
add
push
or
scas
sub
dec
mov
add
push
mov
fstpl
xor
sbb
cmp
xor
mov
xchg
or
test
arpl
leave
jo
or
xor
cwtl
std
inc
daa
jl
repnz
es
bound
mov
fbld
movsb
bound
xchg
pop
sbb
outsb
xor
add
cmpsl
inc
cs
pusha
xchg
or
mov
js
mov
dec
xlat
sbb
add
pusha
mov
das
pop
out
pop
icebp
rorl
mov
jg
nop
call
insl
or
fnstcw
shl
lods
mov
jbe
into
xorl
inc
xor
lret
cmp
out
mov
in
out
sub
enter
lret
push
xchg
mov
testb
push
pop
cmpsl
pop
jno
incl
cli
test
loope
dec
pop
dec
repnz
xlat
popa
test
shl
xor
and
cltd
push
xor
pushf
hlt
into
add
inc
add
cs
sti
jns
jp
dec
je
pop
inc
cmpl
xchg
mov
adc
inc
and
jmp
cmp
in
dec
pop
mov
sub
push
bound
dec
fstps
push
in
push
pop
repz
adc
sbbb
stos
push
lahf
sub
pop
jl
xchg
cmpl
xlat
pop
xchg
stos
rcl
adc
roll
jb
mov
dec
or
sbb
ja
into
push
daa
or
shrl
insb
popa
pop
sbb
push
push
int3
aas
or
jbe
pushf
rolb
push
jp
repz
in
sub
xlat
shlb
push
cmp
pusha
cmpsl
mov
pushf
inc
nop
fwait
ret
jg
or
clc
add
mov
pop
cmp
xchg
sub
or
arpl
xlat
test
cltd
lret
inc
cmp
inc
arpl
arpl
mov
aam
xchg
push
out
inc
cmp
jl
sub
enter
subb
xor
mov
shrb
add
lods
pop
lret
insb
jns
push
adc
lcall
cmp
shr
arpl
pushf
notl
lods
icebp
add
dec
xchg
out
pop
out
stos
xor
mov
sub
decb
shrl
pushf
xchg
jecxz
sbb
jae
popa
cmc
jecxz
rcll
es
test
or
add
test
dec
popf
push
cmc
add
mov
clc
jae
jg
clc
scas
out
push
mov
mov
pop
jecxz
outsl
test
andl
push
and
mov
in
into
cmp
sub
sub
gs
push
pop
add
leave
or
jo
out
xor
and
mov
push
out
mov
adc
imul
arpl
iret
fwait
push
outsb
add
rcl
pop
dec
pop
cmpsl
xor
adc
outsl
adc
cmpsb
mov
dec
ds
movsb
dec
or
xor
cltd
lea
jb
xchg
and
cmp
test
out
je
idiv
jae
and
lahf
popa
and
ss
dec
mov
push
pop
imulb
cmp
sub
inc
pushf
dec
or
mov
inc
jle
push
jmp
mov
mov
in
xchg
inc
sbb
and
dec
repz
cmc
sub
icebp
sub
xchg
dec
test
pop
enter
sbb
cmpsl
aam
sarb
adc
movsl
movhps
repz
jnp
mov
pop
xchg
xchg
sub
mov
loopne
push
and
in
mov
mov
sub
push
ret
fadds
scas
dec
scas
or
mov
pop
jae
test
jne
stos
xor
fadds
fwait
ret
add
mov
out
pop
insb
push
sahf
or
ja
cmpsb
out
push
xor
icebp
lret
icebp
imul
enter
popw
pusha
shrb
xchg
imul
cmc
mov
adc
mov
int
frstor
inc
les
xor
out
test
out
mov
mov
adc
mov
sti
lock
jnp
jge
inc
mov
and
cmc
shl
mov
ja
in
push
mov
int3
push
scas
icebp
outsl
test
xlat
fs
inc
pop
jne
xor
add
and
enter
mov
clc
das
aas
repnz
mov
out
testb
push
stos
jo
jecxz
fs
jl
ret
cmp
jb
or
mov
and
rcll
ret
mov
inc
push
inc
or
mov
dec
sub
cltd
les
or
jle
iret
repz
cli
roll
mov
hlt
mov
sbb
mov
mov
add
fisubs
pop
clc
xchg
out
inc
push
lds
mov
mov
fcmovne
push
mov
sub
xchg
pop
bndstx
in
jecxz
xchg
je
cwtl
pop
xchg
outsl
fidivrs
mov
pop
mov
inc
push
repnz
js
es
jae
xchg
mov
std
aad
pop
es
jb
sbb
mov
in
js
insb
js
mov
rolb
les
es
mov
pop
cmpsb
ret
dec
dec
add
pop
adc
arpl
inc
fs
push
sbb
inc
test
xorl
fisttpl
pop
lret
push
sub
dec
jb
cld
std
cli
imul
dec
adc
sub
leave
sub
and
xchg
popa
xchg
xor
add
dec
es
pop
cmp
cwtl
lea
mov
mov
cli
js
sub
cmp
data16
cmp
mov
in
sbb
int3
out
mov
jmp
mov
ficoml
bound
or
out
call
mov
jns
jl
jo
lret
stos
pop
shr
push
mov
pop
mov
dec
sub
pop
push
lock
mov
cmp
jns
mov
pop
push
mov
cmp
pop
out
mov
mov
addr16
cmc
or
das
xor
fwait
leave
clc
jne
popa
dec
fstpl
cmp
pop
dec
rol
mov
scas
adc
jo
ret
mov
enter
push
movsl
push
pop
popf
daa
inc
add
out
test
stc
idivb
or
dec
fsubrl
inc
les
xor
mov
add
mov
sub
push
add
or
rclb
mov
mov
mov
xchg
aam
sub
xor
call
cmp
sub
into
cs
lcall
fs
dec
adc
imul
xchg
xchg
jns
arpl
push
adc
fisttpl
insl
lahf
inc
std
gs
pop
inc
adc
out
icebp
stos
sub
stc
flds
roll
add
sub
std
sub
ljmp
adc
fwait
inc
pop
xchg
outsb
in
cmp
movsb
test
out
adcb
rdtsc
inc
fdiv
bound
dec
divl
fidivrl
dec
ljmp
mov
adc
in
test
jmp
arpl
test
pop
xor
push
pusha
aaa
dec
sub
sbb
cld
pushf
and
xchg
popa
or
sub
adc
jge
cmp
and
popa
xchg
add
pop
jecxz
lahf
mov
test
sahf
push
push
scas
fisubs
loopne
pop
cs
fmull
test
pop
rolb
add
cmp
cmp
pop
and
pop
int
pusha
movsb
push
jp
dec
out
jge
xchg
pop
sbb
imul
or
sarb
cld
pop
aas
outsl
cmp
mov
jns
push
in
xchg
lea
enter
and
pop
fnsave
mov
stos
ds
pop
jp
inc
lods
dec
shll
push
or
xor
xchg
xor
xchg
xchg
or
and
clts
xchg
stc
mov
xchg
sub
aam
inc
push
xor
movsl
push
out
adc
pop
inc
pop
fldl
xor
in
lret
enter
gs
in
jo
cmpl
int
adc
int3
sahf
xchg
lret
cmpsb
fwait
cltd
loop
insl
mov
loopne
mov
int
repnz
test
in
pop
inc
insl
lods
xchg
stc
sub
lahf
sar
sbb
pop
and
push
inc
ds
lock
cmpsb
cmp
ljmp
push
mov
jb
jb
pop
mov
aam
push
out
cmp
or
aas
and
dec
xor
lock
test
jae
mov
bound
ljmp
mov
stos
in
movsb
jg
jecxz
mov
xor
sub
cld
in
xchg
inc
sahf
mov
cmpsl
mov
movsb
lahf
jmp
rorl
rorb
mov
decb
popf
mov
test
cmp
xor
fcos
fwait
push
out
scas
push
mov
outsb
data16
scas
insl
lret
pop
in
pusha
xor
and
ljmp
pop
push
pop
fs
stos
pop
fidivrs
dec
cwtl
or
pop
aas
push
mov
mov
int
fnstcw
xchg
mov
cltd
jno
jecxz
mov
inc
mov
cs
sbb
push
daa
test
call
out
mov
outsb
call
mov
cli
sbb
push
mov
scas
stc
loope
mov
sub
pop
fnsetpm(287
lret
stos
xor
int3
adc
decl
jae
std
addl
sar
or
mov
push
jb
pusha
inc
lods
xchg
ret
or
jl
or
int3
dec
cs
pop
into
das
pop
mov
data16
cmp
test
fistpl
sti
dec
xor
jnp
stos
in
test
cld
jg
push
jns
in
nop
call
jmp
inc
arpl
inc
andb
jae
iret
divb
bound
xchg
into
push
cmp
cwtl
adc
arpl
xchg
imul
mov
xchg
xor
push
mov
dec
pop
sbb
mov
insb
xor
xchg
in
xor
inc
inc
fs
clc
test
pop
popf
mov
adc
jno
orb
jae
frstor
or
push
inc
adc
stos
in
pop
xchg
or
in
dec
popa
inc
pop
bound
add
xorb
mov
adc
or
pop
enter
movsb
jno
jg
push
dec
gs
cmp
mov
adc
mov
pop
sub
out
lret
inc
aam
fildl
or
daa
out
sbb
xor
sbbb
out
xchg
adc
test
hlt
out
loope
sub
mov
mov
pop
pop
rcrl
sbb
test
cmp
std
sub
shlb
popa
enter
adc
fidivrl
dec
jb
pushl
sbb
shlb
mov
fs
xchg
jmp
int
lea
mov
add
pop
dec
push
ds
int
pop
ds
mov
or
mov
int
ljmp
pop
and
test
out
pusha
xchg
rolb
insb
jo
jbe
test
testl
les
or
adc
pop
mov
out
popa
sub
xor
mov
mov
nop
mov
or
shlb
mov
out
xchg
mov
jmp
jmp
enter
cwtl
scas
outsl
pop
mov
jmp
dec
es
xor
dec
jle
out
mov
shlb
sub
dec
xlat
pop
push
mov
orb
out
lock
cmp
pop
test
pop
mov
sub
mov
cmpb
mov
adc
popa
mov
sub
movsb
ss
mov
sub
sub
and
loope
movl
mov
mov
adcl
test
dec
scas
shl
movsl
xlat
and
movsl
push
jmp
dec
mov
mov
push
push
insb
fnstsw
or
ljmp
outsb
and
cld
lret
pop
mov
cmc
xchg
dec
sbb
dec
xchg
mov
fs
sub
mov
cmp
arpl
add
push
scas
xor
mov
push
sbb
push
in
mov
or
int
xor
adc
mov
push
iret
imul
bound
mov
jae
mov
adc
jnp
sbb
mov
sbb
loop
inc
icebp
in
xchg
daa
repz
pop
sbb
sub
add
and
insb
mov
leave
sub
popf
xchg
or
push
pop
aaa
sbb
pop
arpl
fs
rclb
test
adc
nop
bound
xchg
pusha
adc
out
push
push
pop
push
xchg
jb
addr16
pushf
pop
popf
and
pop
dec
cmpsb
push
lret
out
testl
das
push
das
sbb
mov
sub
pop
imul
cld
cmpsl
leave
jl
mov
mov
pop
xchg
jmp
insl
loopne
mov
inc
shrl
stos
das
mov
insl
xor
dec
stos
pop
mov
cltd
inc
or
or
popa
xchg
ret
pop
imul
shll
iret
es
nop
or
fbld
cmp
ficoms
orb
sbb
orl
push
test
fistps
test
push
insb
add
pop
mov
fiadds
lret
gs
xchg
sub
cmp
lahf
and
out
in
cmp
pop
fdivr
ret
push
jmp
outsb
call
push
cmp
mov
cmp
sub
mov
and
out
test
loopne
test
out
jecxz
lahf
xchg
adc
sub
xlat
xchg
in
push
sti
xor
mov
push
repz
lds
dec
and
mov
lods
jnp
es
loope
adc
cwtl
enter
xchg
push
jle
mov
push
iret
call
jo
xchg
jae
add
jb
mov
xchg
fstpl
fstpl
inc
inc
add
pop
mov
and
iret
out
push
adc
test
xchg
mov
jle
mov
mov
sbb
std
cmpsb
or
lret
xor
mov
push
je
sub
push
push
sti
cmp
ret
lods
popa
aaa
and
mov
fsubrl
mov
mov
mov
int3
inc
btr
cmp
xchg
ficomps
adc
xchg
jg
lcall
mov
and
clc
dec
mov
push
sub
push
push
mov
cmpsb
xchg
push
push
cmp
gs
inc
adc
push
dec
jns
jnp
fs
fisubl
cltd
cmp
icebp
xchg
repz
scas
in
imul
pop
aad
xchg
iret
out
jmp
mov
fwait
out
repz
mov
cmp
shrl
sub
fcmovnb
lock
lahf
sub
mov
cltd
dec
jle
lret
or
scas
mov
rcr
mov
adc
pop
or
pop
lods
dec
divl
gs
xor
es
mov
dec
jae
push
iret
cwtl
jge
jp
add
cltd
call
dec
xchg
xchg
lret
push
cmp
dec
ror
lea
and
xchg
imul
pop
pop
rcll
popa
xchg
dec
incb
inc
aaa
xor
mov
lods
jo
in
push
subb
ja
mov
xlat
test
sub
in
cmovp
xlat
fadd
cmp
dec
jo
int3
mov
shrb
mov
addr16
cltd
dec
movsl
xor
data16
dec
xlat
cmp
ss
std
movb
inc
ljmp
rcll
adc
xor
cmp
andl
mov
inc
fildll
stos
cmp
pop
mov
mov
or
dec
add
mov
push
jmp
cmp
sbb
test
divb
mov
add
cmpsb
shll
mov
cmp
dec
cmpsl
mov
inc
bound
mov
mov
mov
int3
rcrb
add
pusha
insb
jp
lds
imulb
lahf
xor
lods
les
std
ret
popf
dec
std
dec
lahf
aam
es
xchg
xchg
daa
sti
daa
out
sub
fimuls
sbb
jae
jl
and
mov
dec
sahf
rorb
mov
push
mov
popa
fsub
xorl
adc
test
pop
inc
andb
dec
jp
mov
fsts
inc
fs
mov
sbb
shrb
loope
sub
pop
or
mov
incb
sbb
mov
dec
popf
jecxz
or
jnp
or
jp
fwait
clc
lret
out
rep
mov
push
adc
rcrb
push
pop
fcmovnb
mov
dec
scas
call
xor
sti
push
mov
out
aam
aas
push
inc
and
inc
rclb
jmp
fucomip
stos
cmp
out
xchg
std
fmull
ret
jb
jno
clc
and
dec
jae
xor
mov
mov
mov
jge
ffreep
inc
mov
cli
pop
out
mov
mov
add
cmp
mov
push
jno
fwait
fs
fnsave
std
jp
mov
xor
aam
xor
sbb
loop
mov
arpl
stos
and
popf
sub
mov
lock
xor
inc
test
ds
cmp
stos
cmp
out
push
mov
adc
jo
rcr
lea
lods
mov
xchg
push
push
and
add
xor
or
dec
jmp
fcom
test
in
lret
insb
mov
repnz
jmp
add
loope
stos
dec
push
notb
pop
cmp
mulb
fldcw
dec
sub
icebp
std
add
inc
scas
negl
inc
sarb
rolb
iret
xchg
lahf
lock
and
fdivp
out
xchg
cmp
push
mov
cs
aam
mov
add
sbb
cmp
es
mov
aad
leave
jae
sbb
mov
sub
sar
sub
hlt
pusha
pusha
or
push
push
adc
outsl
pop
adc
add
fdivrl
adc
icebp
bound
out
ja
stos
cmpsb
lret
xor
pop
sub
adc
nop
inc
xchg
jp
out
push
cs
sbb
rolb
sti
mul
cmpsb
fildl
ret
gs
data16
sub
cmp
shrb
adc
lahf
xchg
inc
inc
adc
das
jl
fistps
xchg
aas
test
mov
mov
sub
les
or
sahf
lods
cwtl
cmp
push
xor
out
xchg
push
mov
js
pop
cmp
inc
out
or
pushf
inc
addl
jmp
jecxz
push
jb
das
add
xor
mov
scas
push
ss
jmp
pop
movsl
sub
mov
rcll
cltd
or
test
push
in
jns
cmpsb
mov
sub
mov
out
add
das
xchg
xor
pop
inc
add
addr16
inc
cltd
jg
and
xor
lret
adc
imul
idiv
rcrl
xchg
xchg
add
addr16
mov
jns
inc
in
aas
sub
fucomip
adc
xor
adc
pop
mov
in
mov
insb
sbb
imul
movsl
mov
and
adc
enter
sbb
addr16
pushl
aas
das
xchg
fisubrl
pop
mov
iret
jle
orl
add
xchg
outsb
jp
test
ss
mov
mov
lcall
and
gs
out
cld
push
xchg
stos
jl
stc
outsb
sub
rcll
sbb
sti
pop
jo
in
cmp
jo
popf
mov
pop
pushf
dec
sub
lea
sub
sahf
push
pop
and
xlat
hlt
mov
mov
push
dec
push
cmp
cmpsb
or
xor
fld1
sub
cmp
or
stc
ja
icebp
jle
jle
je
mov
fucomip
mov
push
outsl
or
gs
mov
insl
mov
sbb
cmp
lea
sahf
push
into
adcb
jg,pt
div
fwait
push
hlt
cmp
push
sbb
inc
push
test
adcl
out
dec
jp
cli
jle
shlb
mov
sbb
xor
push
and
aad
add
jp
pushf
or
je
in
popf
cmpsb
inc
dec
sub
mov
or
aas
adc
cmp
fsubr
sub
test
jmp
sbb
jno
xor
frstor
fmulp
push
ja
xlat
aad
cwtl
pop
jle
xchg
cmp
fnstsw
nop
xor
sbb
mov
cmp
out
xchg
add
xor
fmuls
jge
or
xor
inc
fnsave
fistps
mov
pop
jge
sbb
lea
jno
dec
mov
aaa
cmpsb
rcrb
or
sbb
cwtl
adc
and
outsb
imul
out
or
mov
or
push
lods
inc
xor
cmp
push
js
add
adc
mov
cmc
inc
add
push
xor
pop
add
subb
data16
pop
jns
mov
push
cmp
sub
mov
aas
repz
into
jg
repz
cmp
xor
fsubr
mov
xchg
lds
mov
subb
sbb
xchg
cmp
inc
xchg
cld
xchg
ret
inc
or
pusha
sub
xor
daa
ret
lock
cwtl
setns
repnz
in
push
inc
cmp
pop
clc
test
push
mov
loope
out
or
mov
push
xor
cmpsl
xchg
inc
jae
cmpsl
or
hlt
xlat
insl
jne
adc
mov
rcl
xchg
scas
in
inc
adc
adc
frstor
orb
sbb
sbb
dec
inc
dec
cmp
int
subl
les
mov
dec
mov
sub
add
mov
add
inc
pop
adc
and
mov
dec
mov
add
sub
outsb
insl
out
leave
sti
pop
inc
testb
stc
loope
inc
pushf
mov
or
addr16
movsb
lods
push
mov
push
sub
mov
les
and
inc
mov
pop
adc
add
push
xor
inc
mov
jp
int3
test
rclb
jae
int3
jne
xlat
insb
xchg
jp
pop
lock
ret
add
xchg
mov
dec
sti
mov
ds
add
aad
sbb
or
cmp
mov
fwait
lods
lods
sub
sub
xchg
stos
inc
loop
mov
mov
jmp
dec
xchg
push
aad
ret
filds
mov
jb
lahf
mov
adc
and
or
add
jl
or
negb
pop
fwait
jnp
cli
lock
xchg
push
sub
push
out
mov
and
and
pop
scas
xchg
cmc
scas
mov
stc
pop
add
pop
fldt
stos
pop
test
mov
pop
addr16
dec
push
sbb
stos
rolb
std
in
mov
dec
xchg
movsb
mov
sub
arpl
sti
fwait
test
repnz
push
mov
jb
sub
ds
sub
xorl
push
push
int3
test
mov
aam
shlb
das
add
xchg
and
sub
pop
pop
cmpsl
mov
fildll
jnp,pn
jecxz
push
into
sahf
xor
mov
cwtl
hlt
idiv
es
popa
dec
loope
push
fldcw
or
out
xor
add
test
and
je
cld
push
mov
lods
push
sub
mov
imul
neg
sbb
scas
imul
mov
div
movsl
dec
loop
pop
movsb
sbb
push
andb
adc
push
repz
and
mov
add
mov
in
int3
cmpb
sbb
int3
jge
ficompl
mov
or
fdivrl
rclb
mov
shl
sub
cld
les
sti
mov
iret
xor
pop
fildl
inc
mov
loope
imul
scas
imul
aaa
lds
add
jp
mov
loop
push
je
cmp
pop
xchg
imull
scas
add
sbb
movsl
les
xor
shrb
fdivrl
xchg
cmp
int3
cmpb
cltd
inc
clc
or
scas
adc
movsb
sub
pop
int3
xor
sub
mov
cmp
dec
stos
pop
in
cmp
jo
adcl
sub
fimull
xchg
pusha
mov
dec
inc
inc
sbb
and
mov
mov
add
sbb
daa
jb
test
nop
lock
sub
pop
jge
jge
xchg
inc
jne
sar
dec
or
cwtl
push
cmp
mov
xor
add
arpl
mov
mov
dec
pop
imul
push
ret
cmp
pop
push
adc
jns
add
push
and
jle
lahf
mov
sub
cwtl
pop
cld
ret
push
sub
mov
call
dec
jne
ds
repnz
jne
insl
insl
bound
rolb
push
ljmp
cmpsb
std
mov
out
inc
cwtl
push
inc
mov
into
mov
enter
xchg
js
sbb
xor
lods
mov
cmp
sub
lods
dec
hlt
xor
sbb
in
add
call
leave
push
push
adc
adc
jle
xchg
or
pop
addr16
cltd
sbb
ja
repnz
hlt
xchg
mov
out
dec
rorb
int
dec
pop
xor
fisubs
movsl
mov
jle
cmp
popa
insl
daa
repz
jnp
or
and
pusha
lahf
ret
mov
inc
xor
fisttps
mov
push
mov
ret
addb
pop
lds
push
mov
stos
lods
testl
and
aam
cmp
cmp
fsubrl
jmp
iret
loope
pusha
shrb
lret
mov
std
rcrl
add
inc
mov
cli
pop
stos
enter
ds
lds
or
xchg
xchg
ds
mov
cld
test
mov
popa
jns
enter
out
fcmovnu
inc
jmp
add
imul
gs
pop
lods
xorl
mov
xchg
push
fs
cmp
inc
xchg
test
mov
xchg
into
jmp
loope
jo
or
scas
push
xor
sub
cmpsl
jp
sub
mov
ret
add
mov
pop
shlb
xchg
bound
mov
jns
jno
or
fisubrs
mov
sub
inc
push
fdivr
ret
movsb
mov
jmp
clc
sbb
jae
mov
out
ret
add
or
and
xchg
imul
lahf
push
push
xchg
add
sbb
pop
aad
push
das
test
pop
adc
fadd
xchg
shrl
mov
inc
and
adc
or
fwait
ret
notl
xor
and
roll
cwtl
fcoml
sub
xchg
sub
mov
cmp
mov
mov
jns
add
push
pop
xchg
in
mov
inc
aas
out
mov
push
mov
lods
mov
mov
dec
mov
aas
add
mov
lea
xlat
adc
shr
sbb
mov
cs
jl
sub
add
out
int
cmpsl
repnz
push
cmpsl
mov
push
pop
dec
xchg
jne
mov
mov
pushf
imul
push
push
jp
ret
sub
test
jb
mov
popa
popa
mov
mov
test
and
mov
pop
decl
movsl
or
jecxz
mov
jno
sbb
cmp
addr16
pushl
sub
dec
push
jbe
adc
ds
outsb
push
cmpsb
cmpsl
push
inc
xor
int3
aaa
hlt
rcrl
fs
stos
xor
mov
jmp
sub
adc
xor
adc
je
gs
mov
inc
shlb
pop
aad
push
sub
pop
mov
imul
popf
in
add
imul
and
pop
ret
adc
movsb
test
mov
dec
ret
push
das
movsb
pop
sub
dec
movb
popl
push
mov
into
icebp
mov
int
mov
iret
or
call
icebp
jo
push
movsl
pop
int
push
ret
pop
repz
js
dec
dec
pop
lahf
or
pop
jns
lock
fisttpl
push
sub
loop
sbb
dec
fs
pop
and
fdivs
pop
pop
mov
rcr
ljmp
shll
fs
cltd
loopne
and
lcall
add
inc
pop
rorb
xchg
mov
aam
iret
nop
fs
jnp
jmp
std
cmpsb
jno
movsb
test
push
jae
negb
xchg
fidivrs
inc
lock
gs
cs
push
and
gs
xlat
xor
or
xchg
adcb
leave
cmp
std
lods
xchg
lahf
mov
and
ljmp
adcb
jp
dec
in
subb
or
pusha
xchg
pushf
ret
enter
outsl
and
in
cmp
xchg
jnp
lret
mov
cmpsb
lods
es
mov
rcrl
push
push
mov
jns
lret
pop
in
data16
pop
ret
jge
pusha
add
xchg
hlt
mov
std
test
add
sbb
fidivl
mov
ja
jnp
jbe
push
mov
pop
dec
dec
jecxz
and
sbb
cwtl
loopne
andb
sti
pop
cmp
dec
sti
pop
cs
icebp
cwtl
sbb
ret
lock
arpl
push
cmp
xor
int
andl
xorl
lret
aad
mov
mov
xchg
nop
lods
pop
inc
pop
jno
or
dec
daa
push
jb
adc
ljmp
mov
lret
dec
mov
bound
lcall
dec
inc
pushf
sbb
in
or
sbbl
int3
cmp
push
les
mov
hlt
scas
loope
aad
cli
push
out
call
enter
lock
das
lret
repz
and
inc
subb
mov
jmp
inc
jno
pmulhuw
push
sbb
mov
push
jo
call
aam
mov
lods
mov
icebp
mov
dec
and
out
mov
inc
lods
enter
mov
mov
lret
scas
fwait
inc
or
jbe
add
out
sub
xor
lcall
ljmp
pop
pop
push
push
add
aam
jl
cld
test
loope
into
addr16
xlat
outsb
sbb
mov
dec
addr16
fstps
xchg
mov
mov
jo
xlat
loop
jp
std
addl
sahf
adc
mov
test
cltd
divl
pushf
mov
insb
lea
pop
xchg
rorl
out
xor
fistpl
flds
lock
fistpl
negl
push
dec
movsb
pop
dec
dec
dec
fiadds
xor
jne
mov
dec
popf
xchg
cs
cmp
mov
xor
aas
and
test
add
mov
cld
or
cld
mov
adc
pop
popf
int3
movsb
cli
cmp
cmp
aas
int
movsb
and
add
dec
sti
jecxz
jbe
aam
aas
xlat
shlb
imul
cmp
popf
xor
stc
adc
pop
ljmp
jmp
jmp
mov
add
inc
popf
popa
push
xchg
icebp
fincstp
sbb
mov
lods
movsb
fmull
pop
mov
push
and
jmp
inc
mov
movsl
push
mov
mov
inc
jge
push
pop
negb
pop
sub
loopne
sub
push
dec
push
leave
sub
jbe
cmp
xor
aam
jo
push
loopne
adc
sbb
lock
mov
and
scas
add
jbe
xchg
mov
inc
xlat
lea
push
lea
inc
ljmp
pusha
and
mov
mov
movsl
inc
daa
push
movsb
repnz
enter
fwait
int3
iret
out
out
xchg
rcrl
testb
mov
jb
mov
aaa
inc
int3
xchg
leave
lret
cmpsl
ss
ldmxcsr
xchg
adc
das
adc
xchg
lea
dec
cs
scas
rclb
lea
mov
xchg
xor
outsl
jle
push
clc
lcall
mov
lahf
cld
pop
push
sub
and
daa
mov
mov
cwtl
pop
adc
mov
or
hlt
mov
dec
cmpsl
mov
xchg
xchg
fmull
icebp
dec
aad
clc
xor
jo
mov
sbb
loop
gs
inc
lods
int3
aaa
into
jae
xor
xor
lea
push
mov
xchg
pop
jle,pn
xchg
lock
lock
mov
fsubrl
jo
mov
in
cld
sub
lcall
shrb
mov
rorl
xchg
cs
dec
in
add
cmp
data16
js
inc
shll
daa
xor
pop
jl
cmp
add
je
xor
mov
je
pop
inc
fisttpll
rcrl
test
inc
adc
cwtl
int3
lcall
adc
xchg
push
xlat
mov
cwtl
shll
mov
jbe
test
ljmp
lea
sbb
aad
jno
dec
jecxz
movsl
dec
xchg
andl
dec
pop
cmp
and
loopne
xchg
mov
cld
xor
outsl
int
inc
push
cmp
call
mov
clc
hlt
or
cs
mov
xchg
es
shrb
pop
xchg
out
mov
shll
sub
hlt
popa
pushf
inc
xor
jae
ljmp
add
and
xchg
cmp
cmp
stc
and
add
lret
enter
cwtl
push
ja
inc
xchg
cmpsl
repz
add
dec
pushf
insl
rcr
loope
cmp
or
fldt
sahf
dec
mov
mov
dec
scas
or
xchg
inc
mov
fwait
push
cmp
fs
inc
into
xchg
in
ss
es
sbb
jmp
jmp
adc
nop
jno
clc
lods
pop
mov
cmpsl
adc
add
jecxz
ja
jp
mov
pop
enter
mov
sub
jae
sub
ret
adc
mov
in
fstps
imul
ja
mov
sbb
insl
add
adc
inc
enter
push
sbb
xchg
rcrl
in
jno
push
stc
out
mov
hlt
movsb
roll
inc
imul
inc
out
outsl
int
dec
push
add
into
in
out
add
mov
adc
sbb
mov
pop
test
xchg
xlat
out
mov
xchg
call
mov
inc
mov
das
add
and
clc
call
pop
bnd
fldcw
in
mov
sub
xor
pop
pusha
mov
lods
mov
or
sysret
cmp
lcall
in
outsb
in
and
fwait
or
popa
pop
mov
shrl
sahf
dec
mov
ljmp
adc
in
inc
pop
lret
or
int3
hlt
ds
or
sar
lods
jns
jne
lods
mov
xchg
xor
push
js
jne
stos
sub
add
adc
mov
add
aad
mov
roll
cld
fisubl
push
enter
xor
mov
and
shlb
cld
sti
jno
dec
sbb
jge
xor
test
insb
or
inc
sbb
mov
adcb
sub
adc
pop
cld
ja
arpl
rorl
cmpl
jbe
divb
adc
xor
push
pushf
pop
aad
loopne
jg
push
inc
and
mov
adc
jb
leave
add
inc
sar
lock
and
shl
adc
jb
out
ljmp
imul
jbe
test
lods
jle
jbe
shl
add
orl
mov
int
cmc
stc
add
xor
pop
jae
imul
or
xorb
fcomps
jne
loope
ds
nop
pop
and
stc
and
lds
stc
aad
add
jns
hlt
ret
loop
out
pop
fcmove
pop
adc
push
xchg
mov
sbb
cmp
jmp
jl
push
cld
jg
sbb
cmp
call
test
jge
xor
ss
and
fildll
xor
mov
mov
ficoms
cli
idivl
push
add
cmp
cs
cmp
sti
xchg
movsb
ss
xchg
cmc
inc
dec
or
and
pushf
gs
orl
xchg
sbb
shlb
pop
cli
sbbl
int
pop
push
push
xchg
and
push
mov
adc
das
ja
adc
dec
and
movsb
push
jecxz
xor
xor
cmp
fidivrl
mov
mov
ret
lret
or
cmpsl
sbb
and
pop
cmpsl
mov
daa
movsl
lcall
adc
mov
int3
in
mov
ljmp
fnstcw
sbb
movsl
hlt
jle
ljmp
or
xchg
call
dec
popf
push
sbb
jg
cmp
jno
std
pop
aaa
cwtl
mov
and
cltd
and
sbb
jmp
sub
in
mov
into
add
pushf
add
and
cmp
mov
stos
in
fimull
ret
cmp
jb
inc
inc
stos
add
insl
xor
sbb
cmp
rorl
push
xor
add
sbb
or
fidivl
jmp
pop
icebp
xchg
mov
mov
in
fdivrs
scas
fnstcw
jae
adc
rol
pop
cmp
out
dec
jp
mov
jp
mov
out
adc
sti
je
xchg
jne
std
pop
loope
pop
jle
stos
ljmp
and
sbb
lds
push
fstps
icebp
push
dec
lahf
pusha
inc
and
aad
mov
jne
sbb
loopne
out
sbb
xchg
mov
pop
das
push
daa
enter
cmp
out
in
fwait
ret
push
adc
xchg
iret
pop
xchg
jg
push
lods
sbb
and
lret
jne
add
and
daa
aas
fisubrs
sbbl
movsl
jo
mov
out
pop
notl
jae
outsl
or
repz
pop
jnp
scas
inc
in
loop
dec
test
add
xchg
lock
mov
fwait
clc
xchg
sti
mov
xchg
jbe
mov
xchg
cmp
inc
fwait
je
lods
cmp
mov
mov
mov
jns
or
xor
inc
rorl
sbb
stc
mov
jnp
xchg
pop
adc
mov
jg
rcrl
insb
inc
in
es
stos
pop
mov
jl
pop
mov
xchg
push
aam
mov
push
jl
shll
adc
mov
or
xchg
fistpl
aaa
iret
addr16
adc
fsubrl
std
dec
jg
mov
adc
jg
dec
xlat
gs
mov
mov
out
mov
inc
stos
inc
inc
out
and
xlat
mov
aad
dec
sahf
mov
sub
rcrl
sbb
sbb
push
int3
push
push
mov
es
jae
adc
or
into
sahf
lock
sbb
aas
and
mov
add
or
lret
pop
or
mov
inc
cmc
fistpll
push
sub
cltd
shl
mov
fsubr
mov
popf
fistl
adc
in
sub
call
add
cld
mov
scas
lahf
ss
popa
pop
in
cmp
push
jl
mov
and
fmull
pop
lahf
sbb
adc
sahf
lret
fcom
jmp
popa
mov
sbb
cmc
pop
pop
cld
scas
in
movsl
popa
mov
adc
dec
sahf
lock
sub
mov
xchg
mov
ror
sahf
sub
mov
out
popl
mov
cli
icebp
mov
push
lods
push
adc
cld
sub
out
ja
xor
dec
pushf
arpl
cmp
lock
sbb
mov
in
sti
add
lods
in
adc
popa
mov
mov
adc
sub
aad
out
lret
jnp
dec
push
adc
inc
xchg
das
insb
outsb
mov
lea
fnstsw
adc
xchg
add
icebp
movl
adc
repz
mov
cmp
lcall
mov
hlt
sbb
cmpsl
fwait
in
pop
sti
sbb
lds
mov
xchg
pop
mov
rcll
fcomp
pop
pusha
jno
enter
mov
mov
mov
sbb
inc
je
mov
loopne
jnp
in
ds
in
jmp
jg
iret
sarl
outsl
call
jne
call
lea
rorl
movsb
mov
xchg
cltd
sub
mov
pop
add
mov
je
das
mov
sbb
leave
sub
xor
outsl
xchg
xchg
cli
add
lret
call
xchg
add
mov
fisttpl
push
ret
mov
sbb
pop
cmp
decl
xchg
mov
popa
ds
mov
xchg
mov
sahf
fstl
fmulp
imul
xchg
and
in
mov
xchg
fwait
popa
repnz
test
roll
jno
insb
sub
cmpsl
adc
mov
sarb
push
cmp
add
test
inc
out
out
shll
sbb
sub
jecxz
add
cld
int
je
in
sbb
or
out
add
leave
lcall
popl
push
fdivs
push
outsl
ljmp
mov
cwtl
fiadds
jbe
mov
das
aaa
push
pop
xchg
xor
jae
pusha
lcall
xchg
lea
aam
push
jb
or
nop
push
test
sbb
inc
shrl
rolb
hlt
ljmp
xchg
push
adc
xchg
lahf
outsl
neg
jb
add
iret
pop
imul
xchg
roll
shrb
dec
imul
and
xchg
and
mov
pop
or
sbb
push
mov
pop
jle
lock
int3
jae
arpl
mov
rcrb
scas
mull
add
push
addl
ret
add
cmp
adc
mov
insb
movsb
test
mov
pop
mov
jmp
clc
js
inc
int
pop
inc
dec
xor
aad
xor
into
xor
push
or
push
int3
xor
lds
xchg
ja
imul
mov
movb
out
aad
adc
mov
or
daa
sbb
out
pop
out
cmp
sub
ja
lahf
stos
rolb
imul
fisttps
mov
xchg
scas
mov
adc
jns
cld
cmp
or
and
pop
mov
aaa
cwtl
ljmp
ja
cmpsl
adc
ja
push
jbe
jns
cwtl
flds
xor
xchg
out
jb
fistl
cld
dec
daa
pop
cwtl
gs
push
fsts
adc
dec
mov
scas
cmp
adc
ss
and
hlt
sub
mov
add
adc
mov
jmp
and
xchg
or
sbb
scas
xchg
pop
in
test
std
fldl
je
inc
sahf
adc
xchg
and
mov
dec
lcall
xor
or
mov
jb
jl
nop
push
dec
gs
adc
sahf
sbb
rcl
mov
cs
mov
mov
cmp
jno
cld
iret
sbb
mov
adc
test
in
lret
xchg
aaa
fistpll
sub
std
loope
push
inc
pop
mov
jmp
adc
or
scas
add
ficoms
cld
scas
stos
loopne
add
adc
insb
shrl
xchg
xchg
xchg
into
loope
push
fabs
and
out
lret
push
fsubrl
outsl
cmp
pop
ficoms
sbb
push
data16
data16
mov
cwtl
cmpb
push
add
repz
fldcw
int3
ss
inc
pop
adc
pusha
addr16
icebp
ljmp
data16
xchg
mov
jae
xor
jge
jp
mov
mov
mov
ja
or
pushl
inc
and
lret
push
test
cmpsb
in
inc
and
sbb
push
and
sarl
sub
in
in
shlb
xchg
inc
sub
mov
mov
jge
mov
mov
sti
sub
dec
dec
jns
fxch
push
cld
shrb
call
push
jae
and
push
cmp
int
scas
mov
jns
add
inc
jle
out
mov
adc
inc
dec
bound
fmul
add
mov
ss
mov
and
sbb
sub
mov
add
out
push
stc
cmp
cmp
lea
stos
pop
arpl
nop
fs
mov
or
sbb
pop
pop
xor
fisubrs
lcall
hlt
dec
fbld
or
in
notl
mov
mov
loopne
push
pop
mov
push
mov
xchg
out
test
sbb
jne
jo
jo
mov
inc
aas
lods
imul
mov
mov
fsubrl
lahf
fstpl
xchg
jle
push
scas
xor
addb
ficompl
addr16
adc
test
inc
daa
and
fiaddl
out
mov
or
push
ds
jbe
loope
leave
xlat
push
bound
out
fwait
andb
imul
mov
ficoms
sub
lret
adc
fidivrl
fwait
scas
out
mov
xlat
cli
jns
push
push
sub
fldt
pushf
mov
xor
xchg
lds
cmp
push
mov
xchg
push
pop
das
xchg
mov
popa
daa
stos
rcrl
jl
lret
movsl
push
dec
pop
in
iret
popa
jp
add
push
lds
mov
push
inc
imul
movsb
mov
hlt
and
mov
fscale
mov
sub
mov
cmp
sbb
sbb
popa
out
sbb
loope
into
stos
out
or
push
jge
sub
into
push
in
fucom
cmc
sti
fdivrs
jle
fnstenv
add
sti
repnz
push
jl
pop
jmp
adc
push
cmp
mov
jnp
in
inc
pop
jae
cltd
cmc
subl
movsl
es
std
hlt
loop
xor
icebp
fdivrs
pop
lods
sub
fstps
out
lea
pusha
clc
sti
or
hlt
test
mov
fwait
push
jle
cmp
ret
cmp
jmp
subb
lahf
in
in
push
and
pop
lcall
jl
and
popa
dec
jg
pusha
nop
int3
inc
mov
or
popa
loop
pop
pop
jecxz
sbb
xor
lret
into
mov
shl
adc
xor
int3
jge
fwait
or
fildl
stc
add
jecxz
dec
sbb
push
mov
sbbb
push
je
test
insl
mov
addr16
xchg
or
lret
sub
out
je
ljmp
mov
popl
adc
cltd
and
cmp
pop
insl
pop
and
or
add
aas
inc
adc
xchg
pop
jbe
pop
add
xor
mov
mov
pop
xchg
or
fdivrp
and
xchg
aas
mov
imul
mov
add
push
mov
sub
dec
shr
shrl
pop
sub
outsb
imul
cmp
dec
decb
push
pusha
jo
ss
daa
push
rcll
aam
xchg
add
mov
jg
std
popf
dec
movsl
cmp
or
out
aad
xchg
leave
into
into
add
adc
jmp
jno
sbb
mov
push
imul
testl
into
clc
mov
push
lahf
and
adc
xor
subl
mov
cwtl
fsubrs
sub
add
sbb
mov
mov
add
mov
lcall
inc
rcrl
lahf
jle
cmp
jp
mov
lds
jno
mov
loope
and
stos
rcll
aam
xchg
leave
aam
mov
fistl
out
outsl
es
mov
pop
inc
sub
data16
ss
shr
enter
call
sbb
setno
aas
js
jp
loopne
push
addb
and
add
jo
bound
pop
xor
lret
outsb
outsb
pop
xchg
jbe
adc
bswap
cmp
and
mov
out
ja
scas
lret
and
imul
aam
sti
arpl
sbb
cmp
sub
xchg
and
cli
xchg
ret
jg
inc
and
lods
lret
xchg
aaa
scas
std
shlb
das
je
sbb
cmp
jp
les
or
popa
jnp
sub
fistps
add
sbb
lahf
dec
xchg
push
nop
jle
fidivrs
push
cmc
fisubs
jmp
jmp
cmp
xchg
mov
sub
xchg
mov
push
sbb
popa
lds
mov
pop
rcll
xchg
loopne
cmp
sbb
in
imul
subb
imul
xchg
rolb
jp
in
xchg
test
sub
xlat
mov
and
push
or
int
jmp
cmpl
popf
mov
cmp
mov
dec
mov
cmove
inc
shll
inc
mov
push
adc
dec
adc
lods
pop
int3
dec
pop
sbb
cmp
add
gs
pop
std
jg
rcrb
mov
out
push
cmc
and
icebp
insb
or
mov
test
hlt
sbb
mov
sub
push
dec
imul
and
popa
imul
jl
cmpsb
sbb
rcrl
movsl
shlb
sub
mov
inc
pop
jmp
sub
aam
js
mov
pop
fadds
cmc
out
cltd
cmp
push
cmpsl
test
push
or
fisubs
adc
out
iret
lahf
icebp
fdiv
lcallw
fists
mov
les
iret
insl
in
sbb
or
cli
and
andl
inc
inc
test
mov
jecxz
and
and
jle
pop
loop
push
jecxz
mov
mov
jle
je
jge
repnz
incl
sbb
dec
sub
ds
jmp
insb
xlat
xchg
pop
add
pop
fistps
fisttps
push
jb
mov
enter
cmp
andl
or
inc
popf
push
out
pop
inc
sarl
les
adc
je
cmc
stos
es
pop
xlat
scas
add
inc
jae
cld
test
pop
mov
fidivrs
fsubl
adc
into
push
cmp
movsb
shrb
jno
mov
add
xor
jo
lock
xor
inc
fistpll
repnz
cmp
call
loop
add
aas
xchg
popa
dec
mov
sarl
arpl
mov
dec
jne
movsb
ss
ret
cmc
mov
out
out
xchg
fcomps
hlt
lea
push
or
jno
push
mull
jns
pop
ss
mov
repnz
and
jge
cmc
sub
mov
pop
or
scas
dec
push
repz
mov
cltd
and
in
cli
cmp
mov
pop
sbbb
dec
dec
cmpsb
roll
cmpsb
movsb
and
sbb
fnsave
xchg
mov
sbb
into
mov
add
aad
aas
repnz
mov
dec
jge
jmp
dec
arpl
mov
push
idiv
inc
cmc
outsb
mov
and
cld
pop
and
jecxz
cltd
cmp
dec
jp
xor
or
sub
jp
jne
cld
and
adc
mov
jmp
mov
pop
sti
push
ret
cld
outsb
pushf
jno
aas
add
xchg
mov
push
pop
push
sub
scas
pop
inc
je
je
call
ret
divb
or
jbe
mov
jg
mov
xchg
mov
mov
outsb
push
push
sbb
xchg
mov
dec
out
and
sbb
test
insb
xchg
add
iret
fldcw
fwait
ret
sub
mov
mov
pusha
cs
fwait
cmpsl
mov
jne
inc
inc
sub
xor
mov
sub
into
xchg
rcll
xchg
cwtl
mov
lcall
sub
jns
outsb
inc
bound
pusha
sub
std
dec
dec
out
sbb
mov
pop
adc
pop
int
lahf
imul
jnp
add
dec
outsl
push
push
fidivrl
jg
xchg
dec
xchg
xchg
mov
int
ds
sar
mov
mov
sti
jnp
sbbb
dec
pushf
add
xchg
int3
fistl
mov
lret
repz
xchg
mov
jecxz
jb
out
das
adcb
inc
lret
jbe
call
rcr
and
dec
cld
and
fildl
xchg
pop
jnp
jnp
xorl
ja
aad
shlb
inc
orb
jne
lods
mov
or
lret
ss
arpl
repnz
mov
cmp
pop
xor
jle
push
movsl
push
sarb
mov
movsl
dec
dec
inc
jbe
mov
pop
addl
out
push
mov
xor
or
shrl
push
adc
inc
xor
cs
push
xchg
data16
jb
lret
cltd
negb
sahf
loop
inc
divl
jg
mov
or
xor
pushf
out
sub
jg
sub
mov
outsl
adc
outsl
adc
or
fidivl
push
adcb
fidivs
mov
mov
leave
movsl
adc
ret
cmpsl
or
jno
push
cs
dec
in
and
inc
mov
in
fcmovnb
stos
mov
mov
push
shll
ds
test
aaa
idivl
add
test
mov
inc
jo
gs
outsb
push
sub
into
popf
mov
sti
and
or
jbe
jmp
mov
pusha
outsb
iret
inc
pop
xchg
sbb
loop
mov
iret
xchg
lret
inc
cmp
es
add
jecxz
shll
xchg
add
sbb
sbb
fs
sub
sub
pop
cltd
pop
cmp
sbb
xchg
enter
int
stos
xlat
into
xchg
inc
add
mov
jns
lea
shl
int3
sbb
push
sbb
pop
clc
and
lea
fidivl
push
ljmp
cltd
je
pop
and
ficoms
hlt
imulb
adc
adc
stos
cli
pop
daa
test
arpl
pop
and
push
xorb
and
mov
pop
inc
insb
sub
cwtl
push
inc
push
jne
push
xchg
clc
mov
push
jnp
enter
cs
and
imul
bound
mov
test
into
das
loope
enter
mov
out
push
subb
stos
bound
jle
sub
fsubrl
arpl
scas
xchg
out
sub
pop
push
stos
mov
xor
push
inc
cmp
pop
cli
mov
outsb
lret
and
test
cmp
push
push
xor
add
dec
mov
adc
sub
mov
stc
xor
rclb
mov
icebp
nop
sbb
in
and
shll
cli
lahf
sahf
cli
fldl
lcall
daa
jle
pop
mov
xor
int3
js
and
out
pop
dec
cmpsl
pusha
adc
and
push
xchg
stos
push
jle
add
xchg
mov
adc
data16
clc
cmp
test
pushf
fldenv
mov
dec
cmp
jns
sub
xor
nop
stos
or
jecxz
cmp
ss
test
icebp
sub
inc
inc
movsb
lock
mov
dec
arpl
lock
lods
ficomps
call
dec
sub
cmpsl
add
mov
mov
mov
cmp
cmp
movsl
outsb
push
cmpsb
mov
push
loope
jns
lret
or
xchg
mov
push
sub
mov
lahf
sub
adc
push
insb
scas
push
loopne
push
xlat
sub
jecxz
push
fidivl
das
push
jno
sub
push
mov
clc
and
dec
rorb
sbb
push
bound
dec
pop
cmp
adc
mov
mov
or
repz
mov
aas
inc
arpl
pop
jns
fsubl
fldl
jns
lds
cmpsb
pop
fmuls
push
adcb
in
sbb
jecxz
mov
and
es
sub
ljmp
push
mov
je
push
ds
mov
push
adc
pop
pop
or
jns
mov
xor
jo
and
ret
cmpsb
jp
lock
cmp
fisubs
add
lret
pop
mov
pop
dec
dec
cli
pop
cltd
cmp
push
pop
sbb
jmp
call
mov
lret
fistpll
aas
dec
mov
dec
call
rorb
add
stos
inc
test
push
pop
dec
aaa
jecxz
or
shll
in
outsb
sahf
cld
jge
add
lds
push
lods
push
xor
fsubp
pop
sub
movsl
inc
pop
mov
mov
je
lods
ret
nop
push
sub
in
push
xchg
push
pop
aam
daa
and
mov
addb
lret
mov
data16
rcll
mov
jbe
mov
xor
mov
testl
dec
add
inc
xlat
inc
test
and
xor
fnsetpm(287
cld
sub
mov
mov
and
mov
add
or
outsb
mov
outsl
insb
inc
jge
fucom
jo
pusha
xchg
adc
testb
outsl
pop
mov
pop
repz
jbe
or
push
fists
dec
xchg
cli
setge
adc
jae
sub
jp
adc
lea
in
push
shll
lds
sub
pop
dec
jnp
clc
inc
fwait
sbb
insl
filds
ljmp
dec
test
iret
in
sbb
adc
sbbl
sahf
mov
mov
aas
fwait
roll
inc
sar
mov
hlt
mov
cmc
pop
ljmp
arpl
jmp
aad
rcrb
in
mov
in
les
popa
xlat
push
adcb
in
sar
mov
ret
lea
lods
inc
in
and
lret
test
arpl
call
lods
int
add
xchg
xor
mov
ret
fchs
lret
mov
cmp
movsb
icebp
mov
add
mov
and
mov
pushf
mov
lods
testl
hlt
es
dec
cli
dec
pop
stos
cmp
jmp
pop
adc
adc
imul
or
int3
ret
sbb
add
ficoml
mov
cs
sub
inc
jbe
cmp
sbbl
js
jae
mov
jo
mov
push
adc
enter
icebp
mov
xor
fimull
pop
ds
stc
insl
mov
sbb
popa
fildl
adc
jg
push
mov
daa
loope
pop
cmp
xchg
add
cmpsl
sbb
lcall
scas
push
sub
imul
pusha
or
inc
pop
cmpsb
or
and
sbb
shl
sub
mov
inc
lahf
shrl
ret
mulb
xor
jge
add
push
aaa
je
sub
mov
sbb
arpl
pop
xlat
ja
icebp
inc
shlb
popa
jge
sti
sbb
adc
lds
add
js
pop
jg
mov
adc
inc
fstpl
jge
test
mov
dec
lods
sahf
dec
pusha
sub
inc
dec
addb
xlat
popa
mov
add
adc
sub
cld
mov
pushf
jmp
mov
lods
pusha
aam
xor
mov
lcall
ja
mov
inc
and
xor
in
xchg
popa
jecxz
cs
or
adc
and
sbb
jl
mov
sub
push
pop
mov
sbb
lea
xchg
imul
push
xlat
adcb
outsl
pop
aas
cmpsl
pop
shrl
addr16
stos
clc
add
jge
stos
outsl
push
push
push
dec
dec
mov
lods
mov
cld
in
adc
mov
mov
sub
sbb
dec
mov
mov
es
loop
int3
imul
and
loopne
imul
cmp
test
and
into
dec
xor
into
test
out
cmp
adc
aas
aad
add
inc
test
xor
inc
jo
jl
inc
std
test
dec
pop
jnp
fldt
push
pop
cmp
in
pop
mov
mov
and
mov
or
dec
outsb
lods
test
or
xor
mov
lcall
inc
and
fistl
adc
pop
aad
rcrb
andl
cmpsb
das
add
adc
stc
loopne
add
popf
jmp
push
stos
imul
xchg
loop
gs
adc
mov
bound
dec
stos
stos
push
jns
xor
arpl
cltd
jno
mov
adc
popf
fstpl
adc
jb
test
lods
aas
pop
and
jns
cld
call
or
popa
cld
jns
inc
sbb
push
std
rol
repnz
mov
sahf
stc
sbb
sbb
jnp
jp
and
pop
lds
loopne
int3
fucomp
mov
dec
cmp
or
mov
sbb
mov
xor
stos
shl
jp
jno
cmp
stc
shlb
clc
cmp
sub
mov
dec
xor
pop
jbe
pop
ds
xchg
movsb
pop
cmp
sti
jmp
cmp
cmp
adc
mov
adc
sub
cmp
push
jl
repz
je
xor
mov
pop
mov
lods
test
push
lahf
mov
std
adc
movsb
mov
mov
cltd
les
lods
xchg
mov
jle
outsb
jg
add
jno
xchg
sub
dec
jge
lock
adc
or
cmp
out
roll
xor
aas
sub
icebp
stos
cltd
lods
sub
xchg
adc
insb
aas
insl
enter
mov
dec
lds
out
outsl
sub
mov
adc
rorl
add
add
inc
sbb
das
mov
div
xor
mov
sbb
fildll
lods
and
or
add
into
inc
cltd
fisttpl
test
mov
bound
sti
pop
or
adc
and
pop
bound
mov
push
pop
mov
adc
das
mov
data16
and
or
test
mov
test
or
mov
aam
and
jmp
rorl
fisubl
stos
popa
fstpl
int3
pop
fidivs
popf
add
fdivrl
mov
xor
jecxz
fs
dec
mov
rcrl
xor
insb
mov
test
push
sbb
mov
mov
loop
mov
and
int
mov
ret
enter
mov
in
push
and
das
xchg
mov
repz
add
add
je,pn
adc
pop
arpl
jmp
adc
push
and
mov
cmpsb
test
jge
and
leave
imul
push
jp
ror
add
sti
add
test
hlt
or
jns
arpl
adc
es
push
fld
adc
sub
inc
inc
dec
mov
sar
int3
cmp
int3
fwait
ret
test
shlb
mov
mov
dec
dec
push
ret
mulb
dec
clc
jo
pop
sbb
mov
int3
daa
push
xor
cmpsl
xchg
gs
fs
mov
mov
lock
jns
pop
fisttpl
es
icebp
xchg
sbb
mov
lret
xchg
or
shl
add
sub
push
fs
adc
out
push
sbb
pop
add
or
lret
fstpl
es
pop
mov
xor
sbb
push
dec
imul
sbb
flds
roll
arpl
aaa
das
sub
xchg
dec
xchg
lcall
std
popf
sahf
sarb
xchg
mov
test
mov
cld
mov
aad
gs
push
pop
sub
push
pop
mov
inc
ss
mov
incb
push
push
pushf
cmp
cs
add
jne
xorl
cli
sub
out
out
inc
popf
movsb
movsb
or
rcll
sub
punpckldq
xor
inc
and
xchg
fcmovu
imul
daa
lahf
or
sahf
in
mov
jo
lods
lock
aam
mov
inc
lods
les
mov
push
into
es
xchg
xor
lahf
rolb
fiaddl
fcoms
rcr
pop
inc
out
clc
repz
std
arpl
and
pushf
clc
ja
rcrb
mov
push
popa
xchg
xor
sbb
outsl
mov
mov
loop
or
sbb
push
out
sti
test
sbb
jne
cmc
mov
push
pusha
mov
mov
jg
sub
push
cmp
xchg
inc
cmp
cltd
add
addl
pop
mov
mov
pop
cmp
mov
sub
push
dec
popf
jle
jbe
test
clc
xchg
jnp
and
popf
push
lahf
xchg
cmp
add
cld
lcall
push
mov
xor
mov
cld
out
mov
and
sbb
add
fimull
movsl
test
je
cli
cmp
xlat
xchg
popf
enter
out
inc
jb
sub
push
ja
insb
sbb
push
mov
loope
push
xor
mov
push
fnsave
sub
push
aaa
repz
xor
or
mov
push
pop
das
jp
pushf
cmp
push
mov
mov
inc
test
cmp
mov
int
jge
jns
loop
mov
cmp
cmp
fisubrl
dec
mov
xlat
mov
out
test
nop
and
pushf
lret
pushf
xor
arpl
jg
sub
mov
sub
xor
push
pop
pop
into
xchg
mov
loope
sbb
xchg
mov
imul
ljmp
add
hlt
mov
rcrb
xchg
cmc
inc
mov
test
push
in
arpl
iret
das
nop
mov
or
xchg
adc
push
mov
or
aam
mov
outsl
lock
xchg
mov
push
jg
pop
aad
xchg
jge
sub
fs
add
arpl
adcl
xor
in
mov
inc
sub
outsb
inc
out
xchg
test
es
sub
mov
cmp
mov
cbtw
jo
jl
inc
add
enter
jns
outsb
shll
fwait
sub
repz
ds
pop
out
js
mov
xor
dec
rcll
mov
aad
cmc
fidivrs
pop
ret
jno
imull
jmp
sbb
mov
cmp
pop
loop
repnz
aam
xor
add
pop
or
cmc
xor
xor
mov
fidivl
fdivrl
iret
mov
sub
int
inc
and
stc
daa
lahf
das
mov
mov
test
inc
aad
or
idiv
pop
lret
inc
sarl
add
push
inc
xchg
pop
test
loopne
add
popf
mov
call
adc
jmp
sarb
jecxz
nop
in
addr16
push
frndint
in
xchg
mov
mov
push
cltd
pusha
sub
xor
or
pop
or
mov
push
xor
test
out
dec
jecxz
stc
sbbl
push
lock
dec
enter
inc
loope
xor
and
push
push
addr16
xlat
lahf
adc
inc
repnz
xchg
fdivrs
fs
mov
inc
mov
mul
adc
jmp
test
lods
sub
add
into
outsl
in
mov
sbb
mov
pop
pop
xor
aam
add
cltd
mov
inc
mov
jmp
inc
outsb
inc
and
outsb
mov
mov
ret
mov
mov
sbb
sbb
dec
repz
div
pop
jns
jge
test
scas
lods
sub
and
mov
jmp
fcoms
sbb
in
pcmpgtw
mov
std
ljmp
fildll
mov
inc
mov
repnz
xchg
push
lcall
aad
jge
jmp
scas
mov
fnstcw
fsub
in
or
lods
ja
sub
stos
pop
lret
adcb
and
add
and
out
sbb
movsl
js
dec
faddl
jns
das
lds
cmp
push
int3
xchg
push
fsub
lret
sub
mov
and
into
lcall
movsb
xchg
lods
dec
cmp
jmp
in
les
cld
std
add
mov
sbb
insb
mov
push
sahf
dec
aad
adc
adc
add
out
lret
jae
and
or
faddl
fdiv
addr16
xchg
mov
xorl
sbb
dec
and
fwait
jno
mov
neg
dec
nop
incb
sbbl
or
and
add
sub
into
lret
stos
aam
es
adc
push
addl
add
lahf
fcmovu
cltd
jl
leave
pop
and
fnstenv
cwtl
aas
xchg
or
aaa
iret
rolb
mov
clc
hlt
lds
rcll
decb
add
in
add
sbb
push
push
loop
mov
pop
cmp
cmp
adc
insb
and
loope
cmpsl
dec
les
xor
testb
test
test
pop
dec
jne
insl
insb
mov
sbb
inc
lods
ds
mov
jne
aad
push
cwtl
push
sbb
sub
jmp
in
loopne
xchg
lret
push
pushl
mov
add
xchg
loop
mov
int3
mov
mov
stc
jo
mov
pop
mov
mov
and
bound
mov
sbb
les
cmpl
sbb
fs
sub
lds
in
insl
pop
roll
mov
inc
dec
sub
lods
loope
cs
les
cmpsl
adc
xor
jg
fidivl
std
fs
lret
ficomps
fidivl
sti
je
loop
cmp
xor
jno
hlt
aas
shlb
hlt
int
lds
pop
faddl
adcb
lds
fstpt
mov
outsb
jp
das
xchg
aam
and
dec
xor
hlt
mov
loope
scas
lds
out
clc
aaa
mov
cld
outsb
rorl
andl
outsb
fcomps
dec
adc
cmpsl
pminsw
cltd
sub
xchg
mov
adc
sub
test
les
scas
dec
mov
xchg
mov
lods
or
dec
pop
aam
movsl
or
xchg
or
dec
test
jmp
mov
in
mov
mov
mov
movsl
pop
push
pop
rorb
sub
in
adc
test
dec
popa
aam
xor
loopne
mov
xchg
pop
fnstenv
sub
inc
mov
mov
push
sbb
mov
mov
inc
stos
shlb
in
dec
loop
cld
jae
aam
mov
cmovbe
jle
mov
das
movsl
lds
add
xor
outsl
push
jo
cs
mov
in
push
pushf
popf
xor
adc
cmp
imul
out
dec
push
fisubs
jb
jne,pn
arpl
idiv
test
push
mov
and
hlt
in
mov
cmovb
lods
push
fistpll
sti
mov
sub
loop
sbb
imul
or
ljmp
cmp
std
sub
test
jle
fsubrl
aad
push
ja
loope
sbb
or
dec
xor
lcall
popa
inc
std
in
lcall
adc
mov
sahf
aas
mov
and
scas
adc
mov
jge
push
cmpsl
sahf
repz
js
imul
xor
int
mov
jl
imul
sbb
sub
xchg
sti
je
or
add
popa
lahf
cs
subb
or
and
out
sbb
xor
mov
mov
and
cmp
cmp
push
iret
and
imul
mov
int3
inc
adc
push
cmp
leave
mov
loopne
pop
inc
xchg
push
out
cs
lcall
pop
ds
movl
mov
subl
fdivrs
mov
mov
mov
cltd
aas
rcl
jecxz
and
fldcw
jno
neg
or
mov
fsts
in
push
loope
push
sti
or
dec
mov
out
movsl
inc
pop
popf
test
ret
sub
cmp
ja
jnp
and
into
test
inc
pop
dec
loopne
dec
sub
dec
das
in
mov
mov
jle
mov
cmp
mov
fwait
dec
sbb
fimuls
pusha
in
ja
dec
in
add
mov
lahf
decb
rcrb
mov
mov
enter
xchg
adc
ljmp
subl
stos
jmp
push
push
xor
or
das
es
imul
pop
push
or
inc
shrb
cmp
xor
jmp
lret
imulb
sahf
xor
mov
cmp
mov
adc
mov
sbb
add
aam
adc
xor
int
push
or
xchg
loop
fidivrs
inc
lahf
ret
lods
aas
xor
add
dec
in
cmc
gs
jecxz
sbb
sahf
jne
xor
push
inc
std
xchg
or
push
lret
int
imul
divb
lcall
aaa
popa
lret
std
add
mov
mov
cmp
dec
mov
push
fidivs
cmp
xchg
int
gs
pop
push
add
aam
push
sbb
pusha
inc
aam
xchg
pop
ret
pop
pusha
or
enter
pop
sub
mov
and
packsswb
cli
out
push
mov
xchg
or
add
mov
sbb
mov
testb
test
push
jecxz
hlt
bound
ret
pop
xchg
hlt
call
inc
test
mov
sbb
fistpll
scas
xor
xor
adc
xchg
sbb
pop
in
sub
lret
or
push
pop
mov
push
sti
adc
jo
xchg
push
in
xorl
or
es
cmp
fisttpll
imul
int3
adc
sbb
jne
dec
cmpsl
adc
shrb
xchg
cmp
xchg
pop
xchg
pop
in
fiadds
and
jno
jnp
add
mov
sbb
dec
inc
mov
js
xor
pop
test
fnstcw
popf
sub
mov
mov
xchg
jle
xchg
mov
movb
xorb
shll
sbb
lret
push
rorl
sti
je
pop
pop
push
gs
and
cld
js
adc
adc
add
mov
xchg
popa
cli
or
mov
push
mov
adc
out
push
icebp
scas
aas
jecxz
dec
fidivs
cmovae
out
int3
orl
dec
pop
lret
adc
repz
push
inc
xlat
or
arpl
sbb
mov
imull
ret
imul
pop
stos
push
addr16
sbb
xchg
mov
wrmsr
fwait
imul
arpl
jle
loopne
hlt
jge
and
push
mov
pop
and
insb
pop
js
outsb
nop
in
mov
push
sbb
add
test
add
sbb
inc
imul
testl
fwait
sub
lds
dec
je
stc
cmp
adcl
std
daa
cmc
adc
xchg
cmp
xchg
sub
inc
data16
mov
repz
push
pop
lret
push
and
inc
pushf
lds
and
ds
sbb
jnp
push
orb
mov
dec
or
add
xchg
lods
inc
mov
cwtl
lcall
movsl
jne
test
xor
iret
jno
call
orb
push
or
and
ret
sbb
stc
mov
fdiv
lcall
outsl
mov
add
inc
xchg
pop
pop
shll
out
rorb
push
jb
and
xor
xchg
sbb
pop
mov
push
sti
dec
adc
imul
cmp
mov
mov
popf
or
iret
dec
cmp
cmp
cmp
fwait
sub
dec
fildll
mov
popa
cltd
insl
pop
insb
inc
add
sbb
test
cmc
add
and
add
data16
sbb
jne,pt
pusha
jns
jb
pop
push
divb
outsl
adc
movsb
mov
xchg
stc
popa
out
mov
adc
push
sbb
pop
leave
gs
add
jle
stos
mov
aam
movsb
out
in
cmpsl
pushf
mov
add
pusha
mov
xor
mov
pushf
cmp
lods
add
pop
in
cmp
out
dec
les
aam
popl
sub
fcomps
pop
or
push
mov
ficoml
aam
divb
xchg
cmp
xor
mov
and
mov
mov
loop
call
test
scas
push
mov
add
pop
and
cs
mov
sub
sub
push
cmp
xchg
inc
mov
mov
addr16
out
call
hlt
sbb
xchg
out
fsubrs
cmp
and
mov
fdivl
not
mov
mov
cmp
adc
mov
cmp
mov
push
cmp
stc
mov
xlat
mov
shll
xchg
in
pop
das
xchg
int
mov
mov
rolb
nop
jle
std
sar
hlt
xchg
hlt
call
mov
mov
shlb
fsubr
mov
movsb
dec
test
or
mov
adc
cmc
enter
aaa
adc
mov
ljmp
imul
or
dec
cmc
sar
nop
push
shlb
mov
loopne
cltd
sbb
and
jo
jae
mov
out
fisttpl
lock
ficomps
loope
jns
pop
sbb
testl
es
adc
push
iret
addb
out
aam
mov
mov
int3
aas
mov
mov
and
lcall
fwait
add
or
js
lock
fistpl
dec
jnp
push
outsb
pop
out
fsubrp
sti
sti
fldenv
pop
or
pop
fcmovu
repz
into
out
stos
cmp
dec
mov
ret
std
jp
and
daa
orb
xchg
cwtl
fnstsw
xchg
xlat
out
jmp
xchg
mov
and
out
jne
adc
fcoms
jnp
sub
mov
mov
inc
mov
popf
cmc
mov
ss
and
pushf
xor
gs
aaa
mov
imul
inc
pop
push
mov
leave
xor
rolb
push
inc
test
sub
lock
jmp
pop
mov
mov
in
mov
add
fists
in
sarb
pop
jg
cmp
and
push
mov
loop
icebp
pop
test
cmpl
cmp
cs
pop
pop
stc
dec
xor
lcall
repz
sub
fcomps
or
xchg
push
sub
jo
pop
aaa
mov
aad
pop
mov
imul
jecxz
ss
call
repnz
outsl
das
testb
mov
cmpsl
pop
sbb
adc
sti
pop
pop
jns
dec
jg
lds
mov
cld
dec
in
divl
add
jb
jne
loope
movsl
pop
pop
or
cltd
jns
cmp
push
icebp
mov
inc
scas
dec
fcmovnb
mov
es
sub
icebp
lahf
divl
outsb
xchg
adc
lcall
or
aam
es
pop
xchg
mov
push
repz
xchg
idivb
sti
testl
mov
test
js
push
dec
in
inc
jae
imul
les
cwtl
push
fdivrl
int3
cmpsl
mov
mov
push
add
push
sub
add
xchg
jae
add
mov
daa
inc
xlat
cmpsl
inc
scas
stc
jb
or
mov
adc
xlat
inc
cmpsl
jl
dec
daa
lds
push
lahf
ds
dec
adc
je
xor
dec
pop
cmp
cmp
dec
jp
mov
pop
inc
inc
cld
xchg
inc
and
push
xor
movsb
dec
jge
sbbl
scas
jns
sbb
test
movsl
ja
jnp
test
push
cmp
in
adc
addr16
add
dec
lcall
stos
mov
lret
imul
mov
ljmp
pop
pop
add
sbb
inc
adc
movsb
scas
push
pop
and
scas
xchg
dec
cmpl
test
sti
lock
test
jl
outsb
jle
xor
mov
fsub
add
or
loopne
push
xchg
adc
mov
xor
sub
add
fcomp
jns
add
xor
inc
cltd
hlt
jle
and
int3
jae
out
out
cs
imul
inc
cmp
sti
adc
out
ret
in
jle
sub
mov
inc
mov
movsl
mov
scas
pushf
popa
aas
test
gs
out
xor
sub
xor
mov
and
xor
in
dec
mov
das
lods
test
repz
mov
out
fucom
inc
jmp
fildll
insl
cmp
enterw
xchg
iret
mov
and
mov
xchg
sbb
adc
lods
inc
mov
pop
sub
adc
push
sbb
jne
cmp
inc
adc
int3
mov
ret
fsubl
mov
incl
or
and
shrb
cmp
jno
add
pop
mov
ret
add
cli
sbb
sub
adc
in
loope
mov
mov
push
inc
jp
xchg
ret
push
lods
pop
sub
add
inc
push
push
imul
pop
sub
inc
jbe
add
rcl
shl
jge
push
lds
arpl
add
xchg
jle
bound
enter
shll
leave
jg
jb
jae
dec
dec
mov
mov
test
fsubrp
adc
dec
aaa
addr16
push
dec
mov
lret
sub
sbb
cltd
clc
sbb
jg
and
jmp
or
inc
xor
inc
mov
je
sti
push
inc
cmp
rcrb
add
lods
push
cmpsb
xchg
out
jbe
pop
and
push
sbb
push
clc
sbb
jo
jge
mov
and
out
lret
cs
mov
fsubrl
call
and
cmp
adc
jmp
lods
das
adc
sub
sahf
push
xorb
adc
std
push
push
std
pop
das
test
push
dec
orb
inc
out
loop
mov
movsb
inc
lods
cwtl
or
mov
push
loope
adc
mov
int3
mov
add
fstpt
dec
ret
cmc
in
push
mov
sbb
bound
cmp
jmp
mov
adc
cvtps2pd
fcompl
insl
nop
test
nop
loopne
pop
or
adc
out
jl
xchg
xchg
arpl
or
js
jl
cs
clc
filds
add
dec
stos
xchg
or
mov
jge
pop
insb
push
mov
fildll
xor
cmpsb
popf
xchg
je
pop
das
loop
shr
popf
adc
mov
pop
outsl
pop
push
out
push
mov
push
stos
imul
arpl
mov
xchg
shll
jmp
test
pop
mov
and
in
or
pop
lods
loope
cmp
push
ret
clc
push
aaa
mov
hlt
fmul
jmp
mov
leave
jmp
les
mov
out
arpl
dec
popf
int
loope
nop
xor
jnp
or
inc
pop
shll
mov
out
cmpsb
cmc
in
add
cli
ret
call
mov
mov
or
jb
sub
dec
int
sbb
rcll
mov
push
sbb
pushf
gs
jg
lret
inc
sub
rcll
inc
and
xchg
int
lcall
sbb
jge
shll
mov
jle
mov
daa
adc
or
mov
outsl
inc
xchg
cmp
jl
adc
je
xchg
push
push
scas
aam
pop
inc
xchg
aaa
lock
xor
mov
cmc
scas
adc
mov
aad
negl
in
and
jne
jle
imulb
int
or
enter
inc
pop
jnp
push
adc
sbb
sub
dec
insb
dec
cwtl
js
push
add
jmp
xchg
inc
daa
push
jb
mov
dec
mov
out
push
lods
jns
das
dec
test
in
xchg
pusha
in
mov
cmpsl
bound
aas
loopne
dec
push
push
fisubs
and
push
jns
mov
outsb
pop
sti
mov
in
scas
mov
rcr
jle,pn
fwait
and
jnp
ret
push
xchg
mov
out
roll
ret
sub
mov
dec
xlat
bound
in
scas
sub
pcmpgtd
scas
push
mov
xchg
and
sbbb
mov
mov
loope
dec
js
add
cmp
fists
or
lcall
lret
push
bound
push
and
sub
or
mov
mov
cmpsb
mov
xchg
add
inc
lds
out
adc
sahf
cwtl
ss
call
sbb
in
stos
movsl
cwtl
push
ret
mov
mov
push
int3
mov
sbb
xchg
push
loop
sahf
sbb
cwtl
aas
icebp
loope
add
xor
or
sti
sbb
jmp
add
pop
xor
mov
sbb
lahf
das
inc
test
fldcw
fwait
jl
mov
jnp
inc
pushl
cmp
into
cmp
push
inc
mov
dec
jnp
and
or
cmc
ds
jmp
xchg
xchg
dec
out
inc
cmp
daa
notb
pop
jne
push
cmp
repnz
adc
imul
adcb
push
push
jnp
pop
mov
mov
daa
jns
dec
jno
or
inc
add
jmp
add
xor
or
xchg
ficompl
imul
jo
lcall
xor
ret
add
inc
int
int3
mov
adc
sbb
div
int
enter
pop
cmpsl
mov
xor
lea
add
dec
or
loop
fnsave
fadds
clc
dec
push
and
sbb
add
sarb
adc
lret
add
dec
xor
mov
cld
fucom
ret
pop
sub
jecxz
hlt
cmc
xchg
pushl
sub
inc
lahf
loop
fmuls
pop
rol
fidivs
imul
push
push
adc
stos
test
pop
mulb
jl
and
aas
scas
out
lock
cmp
add
pop
dec
enter
ds
jae
loop
dec
or
neg
cmp
roll
imul
add
mov
inc
mov
mov
mov
dec
outsb
pop
dec
sub
jmp
mov
test
in
test
call
test
jbe,pn
mov
frstor
out
repnz
loope
cmp
nop
loopne
push
sahf
xchg
and
mov
bnd
pop
ss
daa
ss
hlt
inc
jp
adc
int3
stc
pop
add
mov
pop
cs
sub
fwait
inc
pop
inc
push
cmp
insl
sbb
xchg
pop
clc
loop
add
push
les
push
lahf
lock
repnz
xchg
jp
in
mov
fimuls
pop
push
pminsw
out
or
sahf
and
mov
and
rcrb
and
sbb
dec
aad
mov
test
lods
mov
decb
ljmp
out
out
xchg
scas
mov
sub
push
fs
pusha
push
loopne
cmp
inc
mov
jle
jno
ljmp
divb
mov
jp
push
test
arpl
mov
js
mov
dec
repz
sub
jmp
add
mov
jge
scas
push
insl
mov
in
addr16
loopne,pn
call
pop
stc
cld
imul
pop
aam
testb
aam
fcoml
outsb
mov
push
jnp
sub
pop
add
jnp
cmp
sbb
xchg
addr16
dec
adc
loop
xchg
or
push
loopne
hlt
ss
inc
arpl
jge
fcoms
jns
in
adc
inc
mulb
push
mov
add
sub
cmp
mov
add
dec
out
dec
aaa
sbb
sub
xchg
xor
jg
in
mov
setne
lea
and
adc
fcomps
pop
fcompl
mov
cmc
dec
ja
into
jmp
repnz
fyl2xp1
test
das
test
inc
and
jg
push
mov
ret
mov
jmp
aad
cmp
addl
jae
push
push
adc
push
xchg
stos
add
cmp
sbb
test
mov
pop
imul
imul
divl
mov
iret
hlt
test
push
jp
stos
mov
adc
pop
imul
loope
adc
imul
jbe
out
es
fdivrl
js
lods
xchg
adc
rolb
lods
loop
fcompl
xor
and
xor
loopne
dec
repz
xlat
outsl
push
mov
nop
jb
push
aas
mov
in
out
cwtl
fwait
orb
stos
mov
lahf
out
and
mov
jge
dec
cmc
xchg
add
fildl
pushf
and
fwait
lock
xor
adc
icebp
push
dec
clc
gs
loope
lds
pop
test
sbb
xchg
rcrb
popa
test
push
push
adc
mov
mov
ja
inc
mov
shlb
loopne
adc
out
js
or
xchg
dec
pop
push
sub
les
test
push
sbbb
pop
repz
push
pop
adc
push
mov
in
fldl
sti
mov
push
stos
sbb
jo
pop
out
jg
xor
fiadds
mov
xor
mov
out
jbe
dec
inc
in
and
leave
xchg
outsl
and
mov
fidivs
sub
jecxz
cmpsl
add
adc
cli
push
push
movsl
lock
out
mov
lods
fsts
mov
mov
ds
xor
lret
movsb
xchg
lds
jo
cld
cli
movsb
shlb
pop
je,pn
cmp
jge
lock
pop
in
xchg
fcmovu
and
or
xchg
sbb
push
mov
lods
xor
in
xor
jne
dec
pop
pop
pop
adc
inc
fstps
icebp
icebp
sti
dec
mov
add
xchg
xchg
mov
add
leave
jbe
pusha
cmp
flds
pop
les
out
xchg
xchg
xor
add
mov
add
test
xchg
adc
loop
fldt
add
in
test
xchg
xor
adc
pop
ljmp
pop
orl
mov
inc
mov
xlat
lret
fimuls
mov
jmp
pop
int3
lcall
into
inc
lock
inc
in
in
jmp
pop
adc
leave
out
fidivrs
xchg
test
mov
imul
xor
insl
xchg
pop
fiadds
ret
sbb
rorl
sbb
and
in
aaa
jge
cmp
sbb
sub
and
push
xchg
lea
imul
decb
jmp
jmp
movsl
push
stos
jl
push
hlt
cmp
mov
daa
ss
mov
in
dec
and
or
std
rcrb
lcall
je
ljmp
mov
out
xorb
xor
decl
mov
repnz
lret
mov
jecxz
cli
ss
decl
add
nop
cmp
gs
jnp
mov
sti
push
mov
xor
mov
lret
shrl
shll
xchg
lahf
mov
fidivrl
in
inc
dec
aas
and
in
pop
mov
sub
pop
shll
mov
pop
pusha
xchg
mov
shlb
sbb
into
xor
cmp
inc
dec
rorb
xor
sub
sahf
out
adc
pop
rcr
mov
sbb
out
fstpl
jno
jns
imul
pop
test
fstp
hlt
add
test
mov
jmp
enter
jns
jno
cmp
adc
ret
loop
imul
adc
pop
jo
inc
or
call
mov
aad
imul
add
dec
jg
sub
je
cmp
popa
add
pop
mov
push
adc
sbb
mov
stos
push
ret
aad
xchg
sub
inc
pop
pop
add
outsl
push
mov
inc
mov
jle
push
xchg
cmp
fs
arpl
hlt
lret
fsubp
push
or
subb
sbb
loope
movsl
arpl
outsb
cmc
jne
repz
xor
mov
orb
add
popa
rolb
pop
repz
sarb
pushf
aas
addr16
repnz
fistl
flds
popa
test
imul
pop
lods
lcall
xor
aas
lcall
lret
loop
xchg
xchg
inc
test
xchg
xor
mov
jno
cmc
add
mov
adc
cmp
lret
add
ret
out
mov
cmp
lods
js
cmp
xor
test
stc
jns
lret
fs
psraw
das
xor
inc
push
js
xor
das
mov
pop
repnz
cmp
jge
xchg
pop
in
jnp
xchg
xchg
clc
cmp
sbb
mov
fwait
mov
sub
xchg
mov
repnz
call
adc
push
arpl
add
ds
out
mov
clc
push
arpl
cld
pop
push
lods
std
xlat
in
mov
pop
cmp
cmp
and
lods
xor
xor
pushf
push
fistps
icebp
mov
fdivs
add
sub
mov
adc
rcll
cli
sbb
ja
in
lds
mov
and
rorl
sbb
or
jns
hlt
pop
jnp
je
mov
add
mov
je
xchg
xchg
inc
push
push
fnstsw
xor
arpl
cmpsb
mov
cmp
or
lea
stos
jecxz
cli
mov
shr
sahf
xor
xchg
int
jae
in
mov
add
pop
dec
call
and
shrl
mov
test
xchg
adc
add
or
or
lcall
mov
sub
push
movsl
nop
mov
cs
add
mov
sub
jle
addb
xchg
push
or
xchg
and
mov
inc
into
sbb
shl
inc
dec
mov
or
mov
adc
jae
sbb
xchg
mov
scas
mov
icebp
xor
push
das
fsub
mov
or
loopne
insb
shlb
cmp
mov
jbe
std
mov
mov
mov
xchg
push
pop
fdivrp
push
push
mov
das
bound
mov
rorl
insb
jae
xor
dec
and
popa
mov
test
add
mov
test
out
mov
fs
jge
mov
or
es
adc
xor
or
dec
jno
add
test
sbb
mov
jg
and
cmp
cmp
xchg
push
or
and
mov
ljmp
mov
mov
cmp
ficomps
ret
cmpsl
scas
push
push
dec
sub
inc
fisubrs
add
iret
sub
test
pop
jmp
sahf
movsb
repnz
mov
pop
test
ljmp
popf
mov
push
mov
ja
mov
inc
push
repz
cmpb
in
dec
das
shl
mov
sbb
inc
in
push
xchg
lret
inc
test
add
mov
add
xchg
subb
ret
adc
rcrb
xchg
sti
pop
jecxz
fs
jge
or
arpl
inc
or
sub
lahf
pop
addl
mov
cmp
fidivs
pop
adc
shlb
pop
cmp
jo
mov
xchg
dec
in
jno
pop
jb
xor
and
or
pop
add
addr16
dec
adc
inc
movl
out
sbb
in
cmp
pop
cli
sbb
jmp
fistps
push
xor
dec
adc
rdtsc
shrb
jb
pop
adc
pop
push
xchg
cld
pop
aaa
aaa
int3
ljmp
jb
test
push
sub
pop
jae
aam
mov
inc
fists
fstp
aam
adc
out
xchg
leave
outsb
mov
scas
push
xchg
xchg
jg
rolb
cmc
or
mov
push
push
lock
or
push
lahf
fbld
pop
call
pop
dec
aam
pop
adc
lods
mov
cmp
mov
clc
rcr
jns
cmp
mov
sbb
xor
xor
push
push
adc
mull
aas
xor
lret
sub
add
push
stc
ljmp
cmp
push
js
jae
jns
dec
test
daa
sbb
adc
pop
push
ja
pop
pop
hlt
xor
icebp
imul
pushf
mov
jg
jbe
popa
cld
adc
lea
pushf
call
cmpsl
or
dec
sbbb
mov
mov
loopne
jge
mov
inc
pop
pop
movsb
sti
sub
je
xor
adc
adc
sbb
push
jmp
add
jno
sbb
adc
iret
cwtl
inc
or
stc
icebp
push
pop
xchg
imul
iret
lds
jno
hlt
push
jmp
in
ss
or
icebp
mov
xor
dec
mov
loope,pt
arpl
bound
inc
in
js
sbb
popf
and
dec
push
inc
add
xor
jg
pop
in
ds
in
adc
xchg
leave
add
xor
rclb
sar
sbb
sbbb
push
xchg
hlt
dec
jae
mov
test
sub
and
xor
loope
inc
shl
out
add
pop
inc
push
out
xor
jnp
inc
int3
mov
add
cli
mov
rcr
imul
iret
into
je
inc
or
in
lret
dec
dec
or
shl
xlat
sarl
es
mov
add
cmc
xchg
into
lods
popa
cmp
insb
push
int
xor
cmp
icebp
lods
js
pop
stos
icebp
and
push
jg
cmp
cmpsl
repz
test
jae
insb
js
add
loop
jg
adc
cld
mov
cmp
or
das
out
sub
addl
test
loope
lahf
adc
jbe
xchg
and
push
lcall
sbb
mov
xor
fwait
inc
sbb
in
fidivrs
or
mov
aaa
sbb
ja
in
out
ret
pop
mov
scas
es
les
insb
loopne
adc
int3
je
dec
or
jle
sub
mov
and
or
jae
aaa
js
iret
push
inc
out
xchg
mov
movsb
popf
outsb
xor
jae
inc
clc
loope
cmp
cmp
es
xor
xchg
add
xlat
call
inc
not
lret
xchg
cmp
pop
lcall
jne
sub
filds
or
cmp
outsb
icebp
add
inc
mov
mov
inc
add
sbb
es
mov
imul
or
cli
dec
mov
fidivs
sub
mov
xor
fildl
and
repnz
cmp
loopne
ss
pop
xchg
es
xorb
sub
fsts
jno
cmpsl
push
mov
xchg
sbbl
ljmp
ret
dec
push
or
and
pop
imul
add
cmp
imul
jb
psrlw
jecxz
shlb
ror
xchg
hlt
xchg
aaa
cmp
or
stc
outsl
lods
sub
mov
test
or
fistl
andb
and
ljmp
lea
xor
jge
divl
inc
out
sub
jle
sbb
jp
jl
rcrb
in
or
in
test
xchg
stos
fcoml
push
inc
sbb
xor
mov
jmp
mov
fildl
sub
mov
shrl
xchg
mov
pop
nop
loop
notl
lock
les
stos
lret
push
and
lcall
in
jmp
jp
sub
inc
adc
sub
push
pop
scas
out
std
dec
pop
scas
fiadds
je
movsbl
nop
jmp
mov
mulb
dec
adc
jne
and
pushf
xor
insb
cwtl
fiadds
push
rorb
scas
push
sub
imul
or
xchg
jp
scas
xchg
push
xchg
call
inc
in
jb
out
pop
adc
fsubl
sbb
jne
mov
jl
loop
hlt
int
pop
inc
repnz
mov
repz
in
inc
xchg
test
push
insb
or
mov
and
movsb
mov
mov
xlat
daa
push
push
outsl
mov
pop
or
xchg
jne
or
and
out
mov
rcll
icebp
push
and
jae
cmc
std
push
push
push
push
and
mov
jo
sub
int
xchg
lahf
into
cltd
lret
add
pusha
xchg
pusha
or
std
in
mov
gs
cli
xor
push
jmp
test
loope
push
mov
mov
cmp
movsb
ja
mov
cltd
ret
test
inc
sbb
fildll
lcall
into
mov
cs
out
daa
insb
xor
xchg
shrl
adc
mov
rol
cmp
push
sub
lahf
mov
roll
js
outsl
aas
pop
pop
jecxz
not
fistpl
cli
das
jl
sarb
scas
outsb
insb
addb
sub
cmp
xchg
mov
stos
mov
insl
adc
dec
lcall
sbb
adc
mov
insb
pusha
test
fldz
xor
lea
addb
lds
sub
aad
push
les
dec
inc
lahf
jo
cmp
xor
pop
mov
pop
sbb
cmp
repnz
mov
ret
insl
cld
int
ljmp
push
mov
dec
adc
sub
faddp
jp
sub
inc
rorb
iret
push
xchg
mov
cmpsb
test
ja
je
sbb
cmpsb
mov
push
push
adc
and
inc
dec
xchg
sbb
mov
out
adc
sbb
cltd
testb
lahf
orl
cltd
jo
xchg
xor
lcall
mov
cmpl
inc
test
aad
add
in
notb
popf
rcll
pop
mov
sbb
sbb
imul
inc
pop
imul
psrlq
ffreep
mov
and
mov
and
pop
insb
in
jbe
mov
out
cmp
and
repz
push
xor
or
or
std
outsb
pop
jb
clc
arpl
push
mov
arpl
das
or
sbb
mov
inc
jae
jg
test
mov
pusha
lock
jmp
push
test
inc
dec
insb
mov
mov
fisubrl
lcall
ja
loop
popa
popf
dec
lahf
dec
and
shlb
mov
stc
fidivl
push
in
mov
imul
scas
outsb
loope
out
or
in
push
fistpl
out
xor
daa
test
in
xor
lret
xor
mov
bound
xor
or
adc
jmp
jl
xchg
mov
fsubs
mov
xchg
sub
imul
cmp
add
mov
push
dec
dec
push
mov
in
lds
add
movsl
mov
cmp
pop
cmpsl
dec
cmp
adc
jb
adc
mov
loope
add
mov
mov
movsl
cmp
xor
mov
dec
mov
mov
mov
dec
dec
and
out
sub
mov
sbb
xchg
add
adc
roll
sahf
pop
adc
push
outsb
pop
mov
test
js
mov
jne
int3
ds
pop
sarb
push
push
adcb
fwait
stos
or
sub
push
or
fs
scas
cmp
or
jp
hlt
xor
and
out
inc
data16
inc
mov
jb
sub
add
bound
pop
cli
cli
jb
imul
mov
or
xchg
outsb
andb
or
sub
orl
clc
cmpl
ljmp
call
test
push
cli
jp
stos
mov
push
imull
push
jge
jg
shl
scas
les
pushf
mov
cwtl
lea
ljmp
xor
out
fimull
cmp
repnz
popa
jge
scas
inc
pushf
in
clc
fwait
inc
xor
adc
loopne
push
lods
or
mov
or
fistpl
test
pop
dec
mov
fistpll
pop
shlb
adc
inc
loopnew
jle
aas
rcr
push
add
sub
gs
push
fmuls
arpl
cmp
in
insl
mov
iret
loope
dec
ret
jmp
cmp
add
and
mov
mov
mov
mov
pop
inc
fstpl
shlb
mov
xchg
cmp
popf
mov
test
lret
stos
xor
clc
mov
sub
fdivs
ret
push
and
aam
sbb
pop
push
push
inc
mov
int3
movsb
sbb
inc
xor
sbb
cmp
orl
mov
xchg
pusha
movsl
xlat
sbb
and
fisttpl
and
pop
and
xchg
popa
adc
push
test
es
mov
pop
lods
repnz
insl
sub
mov
dec
out
mov
mov
and
out
add
xchg
jns
cmpl
lcall
inc
ret
call
push
in
jnp
lock
nop
loop
stc
cld
or
mov
xor
pop
sbb
sbb
pop
lods
cmp
pop
mov
cwtl
jns
mov
push
rorb
mov
lea
seto
sbb
orl
imul
and
sub
lcall
test
fsubrs
aam
cmpsb
pop
dec
inc
aad
add
cmp
in
jo
or
push
fnsave
jnp
mov
add
into
test
mov
jle
cmp
sbb
ljmp
lcall
rclb
fstpl
mov
repnz
push
mov
mov
pop
jnp
imul
dec
aaa
ret
shlb
and
inc
icebp
push
xor
fistpll
sbb
xchg
stc
push
es
pop
mov
mov
mov
dec
push
dec
mov
dec
add
scas
xor
aam
notl
lret
dec
lea
in
jne
cld
mov
movl
je
mov
pusha
xchg
xchg
sbb
jns
inc
jmp
test
push
shrl
in
pop
xor
lods
cli
jbe
in
popa
adc
loopne
xor
lods
xlat
mov
jl
ds
ret
movsl
push
in
mov
das
addr16
in
add
scas
and
out
fmul
or
bound
outsb
outsb
insb
push
dec
stos
and
xor
jbe
pmaxub
add
pop
fdivl
clc
push
ljmp
lds
ret
xchg
neg
pop
out
sbb
out
push
jno
cltd
pop
sbbl
sbb
popa
sbb
movsb
scas
mov
jae
mov
push
mov
and
dec
xchg
mov
fbstp
dec
loopne
cmpsl
mov
jae
add
and
jo
adc
orl
push
adc
rclb
inc
loope
lods
mov
push
hlt
or
dec
xchg
adc
dec
inc
mov
movsl
in
jmp
lods
mov
sbb
pop
insl
mov
insl
cwtl
inc
cmp
filds
nop
sub
roll
shrb
fstpl
mov
daa
inc
ret
inc
cmc
and
daa
rorl
adc
pop
pop
and
out
into
xor
arpl
pop
pushl
movsl
aas
dec
int
pop
lds
push
xchg
loope
sub
mov
xor
rcl
pop
mov
sub
lds
xchg
inc
lret
sub
ljmp
push
into
mov
adc
rcl
in
gs
test
adc
into
lock
mov
fnstenv
mov
pop
pop
inc
cmp
fld
add
popf
mov
lea
sub
nop
mulb
ss
pushf
lret
ja
dec
xchg
inc
addr16
xchg
pop
fstps
dec
sub
jmp
ss
or
inc
mov
jge
mov
mov
push
fmuls
push
and
mov
dec
fs
sarl
and
clc
clc
jbe
push
lock
cmpsb
pop
imul
mov
in
add
into
jmp
mov
test
ss
fisttpll
insb
xchg
insb
dec
adc
frstor
pop
stos
mov
fisubl
sub
fsubs
cmp
dec
pop
jb
in
dec
sbb
stos
inc
out
push
divl
or
and
and
sar
stc
shl
dec
dec
mov
je
in
jo
cwtl
push
pop
or
pusha
and
and
dec
jmp
shr
mov
dec
sbb
and
popa
xor
or
mov
test
sub
lret
cmpsb
cltd
cs
or
mov
mov
gs
mov
pop
adc
adc
inc
push
jl
xor
movsl
sub
mov
xor
push
pop
cwtl
inc
mov
mov
push
adc
repz
inc
mov
mov
add
mov
xor
xor
roll
aad
cltd
xor
add
leave
cmpsl
sti
inc
mov
sbb
xor
pop
repz
lret
lds
outsl
popf
test
aaa
push
and
fstsw
sub
push
or
cltd
fs
cli
scas
in
jo
movsb
cld
fbld
push
mov
add
loopne
ljmp
jb
mov
cwtl
mov
outsl
inc
ds
jecxz
cld
jno
dec
pop
push
adc
mov
in
xlat
or
mov
sub
icebp
data16
subb
dec
cld
sbb
pop
push
inc
scas
out
mov
push
mov
sub
lret
lahf
ja
je
pop
ljmp
rcrl
adc
xor
aas
mov
cmp
stos
xor
or
sbb
cltd
enter
flds
stc
ljmp
xchg
sbbl
mov
jo
sbbb
pop
push
xchg
cld
roll
cmp
add
xchg
dec
cmp
mov
negl
add
cltd
push
mov
add
leave
rclb
jb
and
fs
ss
pop
neg
mov
dec
xchg
aas
or
sti
xchg
cld
mov
mov
jb
jmp
mov
ret
popf
dec
stos
fwait
push
vmovhps
pushf
push
pop
and
fucompp
pop
inc
pop
and
jnp
mov
mov
or
adc
movsl
push
xchg
in
lods
xor
ljmp
not
fs
push
std
pop
push
ret
imul
mov
jp
dec
jp
pop
jmp
xchg
in
cmp
cmp
jbe
fsub
andps
jbe
mov
mov
dec
mov
sbb
sbb
outsl
aaa
lds
pavgb
sub
loop
xchg
mov
test
cmp
push
int3
fstpl
lret
dec
orl
add
push
cmpl
hlt
outsl
dec
inc
pop
add
adc
inc
mov
pushf
pusha
xor
aas
dec
cmpl
scas
pusha
sti
sub
decb
pop
jo
sub
test
jns
fs
repz
mov
loope
lock
push
test
pushf
in
push
sbb
test
cmp
xchg
clc
cwtl
push
add
push
push
or
xor
into
orb
sahf
sbb
mov
xor
sarb
and
cmp
adc
or
sbb
in
cld
sbb
out
cltd
pushf
mov
push
repz
sub
fdivs
and
sbb
push
sahf
lcall
fdivl
popa
ret
dec
sub
sub
or
ljmp
mov
rclb
mov
lcall
sub
nop
je
test
lret
into
push
xchg
pop
sub
pusha
mov
or
xor
and
or
cwtl
inc
loop
mov
add
ja
and
das
inc
das
scas
rolb
divb
xchg
setno
fisubl
aam
fs
sti
cmp
cltd
cmpsl
adc
jp
cmpsb
mov
outsb
nop
mov
stc
int3
mov
push
fdivrl
mov
push
out
inc
mov
negb
es
add
xor
xor
insl
xchg
repnz
int3
sarl
jne
jne
pop
fdivrp
icebp
push
andb
jge
jae
mov
addl
push
repz
xor
jecxz
lea
je
bnd
cmp
test
mov
punpcklbw
jle
cmp
cmp
or
sub
fxch
xor
xchg
sub
nop
mov
pusha
das
das
cmp
mov
das
es
pushf
push
push
jmp
call
ja
dec
dec
ja
mov
dec
xchg
fs
jle
and
fwait
sub
or
cld
rcrb
test
cwtl
xor
rep
sahf
push
popf
jb
mov
sbb
pop
out
pop
cmp
jnp
fisubrl
out
imul
jns
lret
fwait
call
push
loopne
out
cmp
and
add
addl
adc
movsl
push
sbb
mov
outsl
xchg
push
cmp
dec
out
bound
ja
jns
sbb
sbb
clc
push
rcll
scas
jns
mov
sub
jne
push
sarl
sahf
repnz
repz
fwait
push
aad
enter
or
imul
and
dec
add
mov
cmc
and
add
sbb
add
push
test
adc
cmp
sti
in
js
fs
repz
sub
cltd
adc
mov
sti
paddsw
jmp
add
push
pop
ja
ljmp
movsl
inc
inc
movsb
fbld
mov
and
jne
sbb
pop
ss
ret
sbb
outsl
mov
iret
stc
and
add
pop
fstl
cmc
insl
mov
fistl
dec
sub
mov
mov
das
mov
ds
adc
aam
sub
mov
stos
and
and
dec
mov
fsubrl
or
xchg
or
push
add
push
mov
movsl
mov
dec
pushf
in
inc
xlat
pusha
and
or
ret
jno
call
je
cmpsl
sub
fisubrs
into
adc
push
lret
scas
shlb
push
ss
or
push
push
cld
mov
ror
xchg
jbe
daa
adc
push
mov
cli
test
js
or
jb
adc
out
xchg
data16
add
pop
call
mov
mov
push
xlat
call
adc
popf
adc
loopne
orb
cmp
into
jo
ret
int
adc
jns
aaa
push
push
push
hlt
or
add
jo
pusha
mov
jns
popa
enter
and
popa
push
mov
fldl
icebp
in
jnp
fmul
movsb
inc
mov
adcb
clc
loop
mov
std
adc
push
adc
bound
cmp
xchg
cld
scas
insl
aam
loope
add
push
pop
lcall
adc
xchg
popa
loop
nop
pop
mov
lds
gs
es
inc
mov
imul
ret
jg
enter
push
mov
pusha
arpl
out
add
mov
jmp
pop
imul
jg
sub
sbb
stc
clc
xor
and
daa
and
rcl
fstpl
fidivl
push
jg
cmc
mov
icebp
aad
pop
dec
pop
rcrb
imul
sbbl
mulps
dec
stc
mov
mov
add
sbb
push
je
sbb
out
jb
xchg
xchg
cmp
jle
pop
div
movsb
inc
mov
ss
xor
test
cmc
lods
lds
jge
dec
lea
aam
sbb
shlb
lret
lock
sub
gs
inc
mov
adc
xor
out
sarl
aas
pop
in
aaa
es
add
imul
mov
adc
repz
inc
cltd
xor
std
cmp
sbb
sar
repz
aad
aaa
adc
mov
and
and
les
and
in
mov
dec
add
lret
stos
insb
outsb
push
pop
dec
push
pop
pop
mov
lods
ret
sub
sub
mov
orb
push
pusha
fistps
outsb
inc
sahf
mov
cld
aas
cld
leave
push
std
shlb
inc
into
pop
or
cmpsb
sbbl
in
cmc
and
inc
mov
mov
out
inc
mov
mov
mov
sti
into
push
scas
ret
std
pop
xchg
arpl
xor
mov
add
icebp
xor
es
data16
insl
mov
inc
out
mov
sbb
mov
xor
jecxz
mov
shll
mov
outsb
add
jns
push
out
dec
cmpsl
adc
dec
xchg
jl
sub
repz
sbb
cmp
jg
hlt
pusha
mov
lret
xor
leave
lcall
xor
xchg
andb
subb
jae
leave
mov
mov
mov
xchg
sbb
ret
add
dec
fsubr
and
add
lds
popa
mov
out
push
jo
and
aad
insl
xchg
lret
lret
int
testb
cmp
cwtl
push
and
jp
outsb
es
push
jbe
cmp
cmpsl
repnz
leave
cmp
ficomps
inc
xor
sbb
and
shlb
mov
loop
pop
les
repz
xlat
and
add
sbb
das
mov
jmp
pop
push
mov
mov
push
inc
loopne
stos
sbb
jns
adc
sbb
daa
insl
ds
or
inc
mov
lods
bnd
pop
sbb
mov
cmp
lock
mov
mov
push
clc
clc
dec
and
sbbb
or
pop
scas
xchg
mov
nop
or
mov
mov
push
movsb
jge
rorl
frstor
jae
pop
sub
std
test
pusha
and
push
mov
xchg
das
or
leave
jle
clc
loopne
push
add
sbb
jge
pusha
imul
add
add
stc
pushf
inc
lea
std
ficomps
mov
pop
jb
pop
dec
stos
dec
loopne
inc
xchg
in
into
push
jns
stos
arpl
mov
push
mov
adc
xor
mov
add
sti
add
cli
pop
sub
xlat
shll
xchg
xorl
fmul
adcb
add
je
scas
jne
inc
andb
push
test
sub
sbb
jle
in
mov
fs
das
cmpsb
jge
push
push
rclb
sbb
into
enter
jne
add
aas
add
push
xor
stos
fisttpl
push
sbb
into
mov
insl
or
push
jge
fdivrs
icebp
sub
xchg
je
push
ja
fwait
clc
sbb
lods
stc
mov
adc
jmp
xchg
mov
negb
pop
iret
pusha
shrb
dec
push
lea
adc
add
insl
hlt
outsl
lret
out
cmp
fiaddl
or
lret
clc
inc
cltd
pop
push
cmpsb
inc
dec
int
xlat
fdivp
and
push
jo
cld
fstl
das
shlb
and
cmpsb
jne
movb
sahf
mov
aam
mov
loop
jb
daa
jo
pop
and
jl
mov
mov
test
dec
add
mov
lods
cmp
xchg
ljmp
out
jb
loope
gs
dec
mov
fwait
sbb
aaa
mov
mov
dec
stos
adc
xor
insb
popf
sbb
inc
bound
add
out
mov
mov
push
dec
push
mov
mov
xchg
cmpsl
pop
inc
xor
rclb
mov
stos
cmc
stos
xchg
inc
gs
iret
mov
jl
inc
push
fiadds
pushl
rclb
out
and
cmpsl
adc
cltd
xchg
mov
jnp
xchg
pop
dec
sbb
inc
sbb
push
mov
std
sub
decl
cmpsb
pop
push
jecxz
jmp
and
jns
les
insl
test
push
mov
fndisi(8087
push
lret
out
daa
xor
mov
sbb
mov
bound
cmp
dec
jp
jmp
push
add
cmc
ja
jmp
je
cmp
adc
test
mov
xchg
leave
insl
jp
or
out
sbb
cmpsb
imul
les
pop
pop
cmovl
mov
pushf
movsb
mov
pop
xchg
or
xor
lock
stc
movsb
mov
sub
aaa
xchg
sbb
mov
add
and
pop
add
push
iret
pop
pop
into
cwtl
push
sbb
cmp
in
loopne
mov
rcll
adc
mov
xor
cwtl
jns
mov
addr16
jo
inc
jmp
rol
std
imull
xor
or
sbb
imull
fdivs
dec
or
fcomps
or
cmp
pop
lods
icebp
sahf
psubq
sub
mov
mov
aad
ds
dec
das
scas
pop
or
lahf
dec
les
dec
cmp
das
dec
pop
sbb
pop
mov
adc
aaa
dec
inc
jns
int3
and
pop
ret
icebp
sahf
sub
cmc
int
out
movsl
add
shrb
sub
or
mov
cmp
mov
incl
dec
xchg
sbb
xorl
adc
add
xchg
mov
push
fimuls
cmp
mov
pop
cmp
push
inc
jp
jnp
cmc
xchg
pop
push
or
jecxz
sbb
mov
fildl
stc
lods
sti
sub
jns
jo
add
fldt
es
lea
mov
push
and
popf
xlat
and
adc
dec
cmc
aaa
push
push
inc
insb
xor
ficompl
out
xlat
dec
aaa
mov
pop
inc
daa
xchg
dec
mov
stos
or
xor
mov
mov
ds
xchg
mov
or
aas
pop
inc
mov
das
mov
in
push
xchg
dec
decb
or
lock
pop
mov
mov
test
fnstsw
js
popa
mov
loopne
cmp
cld
jge
jle
mov
dec
in
mov
sub
icebp
or
lret
push
loope
fmull
shlb
test
sub
sbb
aam
scas
into
mov
cli
cld
lahf
movsl
fwait
rep
enter
push
imul
mov
fwait
xor
call
enter
lret
mov
ss
mov
add
push
sbb
daa
lds
addr16
and
xchg
cmp
popa
mov
bound
stos
mov
ret
mov
push
jns
rclb
ds
idivl
or
xchg
popf
cmp
dec
push
pop
popf
and
aas
cltd
fsubrp
or
std
stos
stos
shrb
leave
cmp
mov
fisttpll
cmp
shlb
or
sahf
inc
push
adc
loopne
cmp
out
mov
or
mov
mov
stc
fsubrl
nop
pop
xor
frstor
dec
jb
mov
xchg
mov
push
bound
adc
inc
loope
aad
push
or
adc
sbb
push
fldt
push
mov
inc
sub
pop
sub
push
xor
sbb
sbb
cmp
imul
or
movsb
mov
in
testb
cmc
sub
xor
test
inc
inc
mov
int
inc
push
aad
push
dec
xchg
dec
adc
jp
push
test
and
je
outsl
aaa
inc
jnp
and
jae
lcall
add
cmp
in
jb
pop
mov
orb
iret
ror
cmpsb
inc
and
iret
stc
sub
leave
bound
mov
cmpsb
sbb
xchg
negb
cld
test
inc
sbbl
iret
test
pop
addl
sbb
jg
jecxz
out
pop
arpl
testl
fstl
out
adc
mov
adc
pushf
and
or
xor
mov
mov
sarb
std
cmpsl
imul
add
add
mov
ljmp
int3
jno
xchg
out
dec
and
mov
jb
push
inc
cmp
lods
ret
pop
sub
push
pop
call
cmp
push
daa
jl
jle
ljmp
jg
inc
sbb
out
mov
imul
xchg
stos
dec
dec
aaa
sub
out
scas
pop
pop
cmpsb
push
movsl
mov
fsubrl
add
rclb
jnp
rclb
or
pop
test
mov
test
ret
mov
fbstp
and
in
cmp
jbe
mov
in
cwtl
inc
mov
cmp
adc
inc
xchg
add
pop
repnz
aam
testb
mov
jmp
notb
call
mov
in
sub
test
cld
push
imul
xor
ljmp
leave
lods
push
dec
pop
into
rolb
sbb
stos
test
scas
pop
xor
mov
test
xor
jb,pn
int3
fistpll
shlb
popa
mov
sub
stos
dec
das
fidivl
mov
inc
addr16
icebp
inc
pop
es
mov
pop
popa
negb
lods
push
daa
pop
sti
std
push
scas
lahf
inc
xchg
fidivrs
enter
loop
mov
adc
adc
xor
sbb
cmp
xchg
pusha
xchg
mov
mov
push
mov
sbb
jle
mov
repz
sti
sbb
sub
imul
pop
add
repnz
mov
xchg
fsub
fiadds
and
insl
mov
push
mov
mov
pop
pushf
cmp
push
aas
inc
and
ficomps
dec
mov
gs
sbb
push
cwtl
and
add
jae
movsb
lcall
das
xor
jbe
mov
inc
and
pop
aas
cmpl
mov
lea
lret
sbb
es
pop
pop
xor
cmpsl
cmp
xchg
mov
repz
int
dec
cmp
shr
dec
insb
icebp
stos
cmp
pushf
decb
dec
push
insb
andb
dec
imul
mov
inc
cmp
addr16
push
cmpsl
jnp
into
loopne
std
push
gs
cli
cmp
mov
xchg
jp
push
mov
mov
pop
mov
mov
jbe
in
mov
pusha
lahf
lea
sbb
hlt
call
and
push
popa
add
gs
sbb
xor
xor
scas
add
push
loopne
push
jnp
les
jne
cs
jle
xchg
incb
stos
rcrb
adc
sbb
outsb
sahf
or
mov
sub
jb
or
rorl
adc
out
mov
jno
add
inc
pop
ret
fisttpll
enter
adc
inc
push
xchg
mov
fcmovb
mov
inc
sbb
jb
test
jo
aaa
jge
jne
adc
das
mov
lret
shrb
std
outsl
repz
loopne
popf
ret
cmp
jmp
cmp
mov
stos
mov
pop
popf
mov
scas
mov
int
div
ljmp
popa
dec
je
xchg
jo
aas
mov
repz
fwait
stc
movsl
xchg
enter
adc
lcall
dec
mov
lods
jb
int3
stc
sbb
arpl
sbb
ror
sarb
stc
xchg
sbb
movsb
lret
mov
popf
mov
xor
popa
sbb
lea
repz
cmpsb
mov
or
or
lret
jo
pop
pop
inc
mov
call
or
inc
jns
jge
adc
out
shlb
out
push
cmpsb
nop
mov
dec
imul
or
inc
js
dec
lcall
cmp
push
or
loop
bound
int
add
lea
pop
add
or
xchg
insb
add
mov
cs
xor
arpl
lea
lock
sbbl
fsubl
xlat
call
mov
xchg
inc
aaa
and
dec
aas
push
outsl
xor
pop
mov
testb
and
in
pop
loopne
jge
enter
ficoml
sbb
out
movsb
adc
test
popa
in
aad
testl
dec
aad
out
sub
repz
loop
mov
and
clc
in
or
lods
mov
test
xchg
daa
jbe
dec
push
pop
cmp
aam
clc
loope
cmpsl
imul
aad
outsl
dec
cwtl
mov
outsb
clc
fcmovbe
mov
sbb
adc
sbb
push
and
dec
fiadds
test
mov
shll
push
dec
filds
push
cmp
ret
insb
mov
stos
aaa
xorb
shl
fiadds
orl
inc
jecxz
push
fst
lea
push
sbbl
stc
lock
and
pop
xchg
adc
xlat
sub
xchg
insl
sub
pop
and
mov
enter
cmp
das
push
and
rorb
pop
inc
mov
outsl
test
or
mov
sub
xchg
and
mov
mov
lock
mov
testl
sub
jmp
inc
push
push
leave
int3
icebp
mov
mov
mov
faddl
xor
pinsrw
es
bound
mov
mov
add
cmp
shrb
push
cs
mov
push
pop
jo
adc
loop
jne
shrl
mov
shlb
push
in
jns
pop
jbe
out
xchg
jecxz
imul
dec
pop
pop
add
sti
mov
pop
push
aas
fxch
mov
cli
mov
adcl
out
pop
lods
ret
bound
out
mov
xchg
lds
out
push
xlat
in
or
jle
and
jbe
sub
pop
or
int
mov
inc
sub
push
faddl
xor
xchg
mov
mov
mov
shll
lcall
lods
mov
xorb
push
cmp
arpl
pop
jns
sbb
shlb
sbb
ljmp
jnp
push
stos
and
movsl
adc
fnstenv
sbb
into
and
movsb
rcll
inc
cmp
mov
jae
or
icebp
xchg
imul
and
rorl
in
jge
lret
shrb
and
pop
mov
dec
mov
xchg
xor
loope
pop
mov
scas
push
ds
pusha
or
iret
mov
add
inc
cli
sub
or
cltd
lods
into
cmc
pop
ss
aad
add
ds
pop
inc
and
repz
lea
sub
popa
fstpl
push
and
jl
pop
sbb
jle
das
mov
xor
in
rcll
mov
neg
movsl
pop
sarb
das
sub
adc
push
loop
std
sub
pop
adc
jmp
jns
cmp
pushf
movsl
mov
push
enter
cmp
sti
movsl
push
insl
push
jnp
xlat
inc
aad
sbb
push
in
rcrb
jmp
push
dec
mov
pop
xor
pop
popa
dec
imul
cmp
ljmp
add
mov
lods
jle
lock
xor
xchg
icebp
add
mov
push
dec
jns
jb
pushf
cli
sti
in
adc
aad
adc
adc
pop
jle
mov
mov
ficomps
jbe
in
lret
test
cli
dec
mov
add
mov
or
mov
sbb
xchg
sbb
pop
aad
push
sbb
cmc
ss
cs
lcall
mov
and
movsl
push
or
mov
xchg
jmp
pop
iret
cwtl
cmpsb
or
mov
mov
add
inc
mov
jb
fwait
or
icebp
imul
loop,pn
cmp
cmpb
inc
aad
shlb
arpl
push
jmp
sbb
sbb
clc
data16
lods
sbb
jge
jecxz
push
or
test
jmp
in
daa
cmp
push
fiadds
loope
fwait
repnz
out
mov
add
mov
repz
xchg
fisubs
aad
mov
inc
aaa
movsl
addb
pop
sub
fimull
sahf
and
inc
add
fstl
pop
and
std
test
stc
sbb
mov
popf
dec
mov
std
in
lock
data16
fadds
js
cwtl
dec
pmullw
jecxz
aaa
test
bound
dec
gs
aaa
add
mov
mov
push
adc
aad
jns
idivl
mov
and
push
in
ret
mov
mov
jge
xchg
sbb
pop
adc
out
sbb
mov
into
subl
pusha
jmp
repz
sarl
mov
ljmp
cmp
lods
ljmp
sbb
push
add
mov
xlat
js
fcmovnb
jb
push
push
dec
lds
cmp
rcll
in
adc
icebp
mov
sub
jnp
jl
repnz
icebp
nop
sub
inc
aam
ja
inc
push
lods
lcall
test
xchg
lock
insb
enter
xchg
push
divl
inc
jns
mov
dec
dec
ret
jbe
adc
push
clc
cwtl
mov
mov
je
add
jns
clc
and
push
mov
repz
dec
mull
push
jg
inc
jl
outsl
sbb
arpl
sahf
js
xor
jle
cmp
jae
test
jns
cmp
push
mov
mov
testl
inc
leave
dec
insb
add
sub
jecxz
xchg
test
jo
andl
inc
xchg
and
scas
vpmuludq
mov
jecxz
push
xor
mov
inc
add
mov
leave
mov
jle
es
mov
and
enter
lods
insb
push
cs
mov
lret
mov
push
mov
popa
cld
adc
cmp
mov
adc
loopne
cltd
xor
cmp
lods
sub
daa
jbe
mov
rcl
call
mov
or
jnp
leave
testb
shr
sbb
outsb
cmpsb
pop
cmp
lds
jns
outsl
jl
in
rolb
cwtl
pop
mov
mov
gs
pop
pop
imul
stos
xor
cmpsl
xchg
shlb
pop
sbb
adc
lea
push
out
cwtl
cs
std
pop
rolb
insl
hlt
aam
sahf
adc
ljmp
xor
fidivl
iret
ret
popf
mov
pop
cmp
lcall
pop
xchg
dec
iret
gs
xlat
fbld
adc
mov
scas
inc
jl
push
insl
dec
std
mov
rcrl
bound
mov
lods
std
scas
xchg
add
lret
xorl
mov
out
pop
test
fidivl
cmp
push
clc
or
inc
out
sub
es
lock
adc
enter
cmp
push
add
loop
and
add
jp
xchg
scas
xor
jge
ret
popf
divl
popa
mov
cwtl
push
adc
push
ret
sub
mov
outsb
insl
mov
jo
and
dec
cli
lret
xor
pop
pop
data16
and
filds
sbb
or
jecxz
lock
popa
xorl
jb
insl
fs
ds
cmpsl
inc
pop
mov
icebp
xchg
adc
jmp
aam
aam
rorb
stos
es
adc
cltd
inc
sti
pop
jo
inc
push
bound
call
mov
dec
dec
mov
add
or
pop
rclb
inc
push
loop
push
xchg
in
cs
or
jae
cmp
inc
out
pushf
faddl
out
xchg
stc
jge
mov
mov
mul
xlat
out
push
dec
jbe
add
xor
jo,pt
mov
mov
dec
lea
jnp
dec
mov
inc
mov
ret
adc
scas
scas
scas
xor
imul
add
dec
add
inc
xor
xor
cwtl
inc
sbb
and
cld
or
or
mov
cmp
xor
xchg
mov
xchg
cs
push
jge
stos
jl
dec
lahf
loope
call
xorl
mov
mov
sbb
sbb
jne
pop
sub
ds
lock
ret
sahf
leave
popl
movsb
push
pop
cmp
mov
test
xor
outsl
ds
ret
xchg
out
into
gs
add
xchg
cmp
mov
pop
and
sbb
push
jno
sub
add
cli
xchg
fsubr
int3
stos
mov
into
xchg
fwait
push
lret
dec
add
rcrb
push
sub
test
fdivl
sbb
dec
and
or
insb
sti
push
das
jns
mov
mov
push
dec
bound
daa
xor
pop
adc
dec
pusha
dec
mov
pushf
jb
xchg
mov
push
bound
jbe
lcall
sub
xchg
aaa
jae
pushaw
stos
out
and
sti
rcrb
lcall
pop
jbe
icebp
orl
ds
sbb
outsl
add
jae
je
cmc
stc
cmp
push
ljmp
fdivs
insl
mov
pop
and
dec
xor
shll
fwait
jle
fimuls
gs
xchg
scas
out
loope
or
test
add
xchg
xor
mov
jb
lds
push
data16
test
test
pop
cmp
jecxz
jle
xor
data16
xor
lahf
lret
idivb
adc
mov
push
pusha
inc
adc
push
int3
aas
mov
jmp
mov
mov
pop
mov
cmpsl
add
and
jb
push
in
dec
in
mov
inc
xor
jae
adc
wbinvd
mov
push
push
in
fbstp
push
mov
addb
fsubrl
xor
pop
inc
push
andl
mov
lds
mov
jp
ss
adc
leave
outsl
xchg
sub
pop
js
aaa
sbb
and
pop
jp
imul
mov
pop
cmp
xlat
rorb
pop
int
cmp
adc
test
outsl
ds
xor
cltd
dec
mov
int3
add
std
mov
mov
insl
test
lahf
xchg
jno
push
mov
cwtl
xlat
pop
lahf
repz
clc
push
lock
sub
xlat
repnz
mov
neg
jecxz
inc
mov
ret
push
aam
ror
mov
add
and
loopne
mov
add
test
jo
test
jb
xor
xchg
inc
mov
mov
jne
shlb
repnz
mov
aam
popf
dec
jp
das
arpl
sub
lahf
aaa
xchg
jbe
mov
cmp
out
inc
sbb
mov
mov
rorl
dec
sbb
subb
test
imul
rclb
faddl
sub
add
bound
sbb
rcrl
sti
mov
loopne
push
rcrb
arpl
arpl
or
xor
pop
jecxz
in
mov
xchg
xor
inc
jecxz
mov
imul
repnz
pop
lods
mov
lock
fsubrs
lcall
mov
sti
iret
loope
mov
xlat
aam
push
pop
xlat
xor
pop
or
sbb
mov
popl
imul
pop
subl
cmp
push
xchg
xchg
jbe
ja
ds
pop
mov
out
adc
outsl
cwtl
in
sub
movl
dec
jl
push
mov
stc
mov
pop
mov
rcl
adc
loope
cmp
pop
hlt
adc
jmp
jle
mov
mov
add
ret
scas
mov
push
dec
loop
pop
pushf
add
loop
hlt
xchg
sar
test
sub
inc
inc
dec
test
clc
cs
ss
mov
popf
aam
fldl
out
dec
push
push
cmc
ss
sub
in
and
push
shl
mov
cmpsl
notl
sub
pushf
sbb
add
or
fwait
gs
push
imul
jno
add
nop
fcompl
mov
or
lods
mov
aaa
cmp
stos
and
dec
sub
loope
pop
cmp
add
jo
fcmove
jno
out
in
pusha
pop
pop
movzwl
repz
xlat
mov
xchg
mov
jbe
test
repnz
push
mov
ficomps
push
outsb
jmp
insl
je
jl
xchg
rclb
jnp
inc
mov
shlb
imul
fdivrl
mov
push
cmp
pop
shrl
or
loope
loop
popf
cmp
fwait
push
outsb
gs
dec
dec
inc
movsb
subl
xor
adc
push
inc
stos
iret
cmp
shll
popa
sub
xor
lahf
inc
cltd
cli
xlat
scas
push
movsb
inc
jl
shlb
pop
es
cli
push
das
push
xor
fcmovnu
and
stc
rol
sub
or
out
push
outsb
push
sub
popf
push
test
mov
in
popa
loopne
mov
mov
ret
cmp
shl
jae
ficoms
pop
das
mov
mov
or
xor
lods
sub
fwait
cmp
xor
mov
fsubl
aaa
inc
inc
pop
enter
pushf
ret
push
mov
and
jecxz
sbb
push
lahf
test
aas
sti
aad
mov
adc
pop
xor
sarb
icebp
fs
lea
ljmp
cli
or
cli
xchg
es
lock
ds
and
outsb
ror
mov
and
jnp
out
movsl
xchg
dec
sbb
stos
sbb
add
mov
and
leave
add
mov
add
lds
imul
mov
mulb
inc
fwait
in
inc
sbb
rolb
jmp
xlat
inc
lea
ja
test
bsf
outsl
cli
sub
in
push
repz
cltd
dec
subl
divb
mov
lret
cmp
arpl
adc
jne
sub
in
sbb
mov
outsb
add
pop
mov
insb
movsb
push
pop
jecxz
mov
inc
mov
sub
push
lret
insl
and
into
in
dec
xchg
sbb
jne
orb
sub
pop
push
jns
cmc
lds
mov
mov
and
loop
dec
cmp
es
std
push
sahf
loope
ret
sub
or
unpcklps
push
mov
out
mov
or
and
xor
push
cmp
cmpsb
cmp
xchg
adc
pop
pop
imul
cmp
xor
jns
push
or
jmp
cli
jmp
xchg
jle
sbb
mov
inc
xchg
pop
xchg
out
xchg
jnp
rcr
and
gs
insb
int3
mov
mov
out
addr16
sbb
pop
out
repz
loope
scas
push
dec
fwait
or
into
bound
mov
or
inc
imul
cmpsb
mov
inc
cmpsb
dec
mov
test
aam
xor
inc
in
test
sarl
mov
xchg
sbb
cli
mov
cmc
add
js
sahf
stos
dec
sub
xchg
xor
mov
and
xchg
stos
pop
pop
clc
loop
lock
outsl
jle
loop
jno
mov
and
sub
lods
pop
test
adc
and
mov
xorl
mov
push
and
push
mov
popa
add
ds
ljmp
jecxz
nop
push
xor
outsb
pusha
arpl
pop
jae
xlat
push
test
xchg
nop
jmp
mov
hlt
sub
in
adc
xor
sub
cld
jb
xor
popa
or
ds
or
loop
pushf
rcrl
lcall
xchg
and
fistl
mov
ret
adc
lock
mov
nop
hlt
dec
test
mov
inc
fdivrp
jge
or
jmp
xchg
je
pop
mov
mov
in
pop
idiv
lret
jge
inc
stc
arpl
inc
daa
clc
mov
mov
adc
mov
xchg
sbb
repz
cli
sti
scas
mov
jl
mov
add
sbb
inc
gs
or
cmp
aas
aaa
xlat
dec
mov
in
sbb
inc
jmp
mov
out
fisubrs
lea
mov
sti
push
lock
aaa
cmpsl
in
js
mov
mov
xchg
push
push
call
jo
sbb
outsb
nop
std
sub
sbb
dec
push
jl
and
push
cmp
mov
dec
in
push
leave
xor
jns
push
xor
mov
fstpt
ja
imul
jp
fldt
aam
sub
inc
data16
push
inc
ficompl
sbb
xor
dec
mov
mov
mov
cs
stos
fadd
idiv
cmpb
inc
xor
test
inc
inc
push
xlat
mov
popa
push
inc
mov
mov
outsl
ficompl
or
out
mov
gs
dec
mov
imul
rcrl
inc
pop
outsb
sahf
push
inc
in
mov
fldenv
stc
mov
call
adc
aam
fcomp
idivl
pop
test
mov
inc
aaa
mov
jl
mov
push
in
repz
hlt
push
inc
sub
dec
xor
push
or
xor
mov
pop
lret
xchg
fwait
dec
dec
xor
jne
sbb
xor
fimull
test
dec
jnp
push
dec
push
cmp
sub
dec
add
cmp
repz
push
jp
pop
push
sub
xor
cmp
ficompl
sub
mov
lds
aad
adc
xchg
push
das
notb
bound
mov
dec
push
xchg
cmpsl
pop
les
incb
icebp
repz
mov
sub
dec
sub
call
lock
imul
pop
out
mov
pusha
cmp
mov
scas
pop
lea
lret
out
mov
cmpsb
pushf
sub
in
inc
pop
xor
inc
ja
jmp
push
aaa
test
pushl
sbb
pop
sub
adc
out
jno
loopne
add
ret
pop
out
int3
mov
add
add
ds
sub
stc
xor
popa
les
inc
out
add
jecxz
sarb
cltd
dec
dec
stos
jne
xchg
mov
push
inc
xchg
sub
sarl
lea
jns
int3
test
add
xor
xchg
pushf
arpl
hlt
cmpb
ret
mov
jo
xchg
push
xchg
test
xor
inc
ss
cld
int3
movsl
les
add
cmpsl
in
nop
mulb
lret
jl
ljmp
xor
jmp
mov
cmp
negl
push
inc
in
xor
mov
fcmovbe
mov
xchg
repz
xor
push
xlat
data16
aam
dec
pop
imul
aad
sbb
add
xchg
or
and
dec
andb
cmp
cmp
sbb
mov
sub
std
arpl
sti
pop
pop
inc
add
pop
pop
mov
jp
cmp
mov
xor
lea
xchg
inc
stos
adcl
dec
popf
popa
pop
insb
cmp
xlat
decl
cwtl
inc
cmp
pop
sarb
jno
in
mov
dec
mov
mov
pushf
dec
sub
out
lret
inc
jae
mov
pop
push
mov
mov
ret
or
bound
pmullw
loope
mov
cmpsb
sahf
scas
pop
into
push
insl
lods
cwtl
fs
daa
je
and
adc
push
aaa
adc
mov
sbb
dec
in
push
sbb
jae,pn
dec
es
scas
dec
sub
rcpps
inc
sbb
std
mov
cmp
cmpsb
data16
bound
dec
add
fwait
xchg
call
dec
inc
xorl
dec
int3
mov
xchg
mov
test
loopne
adc
push
gs
fdivl
pop
fidivrl
fldl
or
imul
sti
inc
jmp
lahf
mov
int3
xchg
cmp
xor
push
jle
lahf
popa
les
sub
xor
fxch
add
add
and
mov
xchg
jle
ja
push
push
unpckhps
mov
mov
hlt
inc
cmp
sub
mov
sub
mov
xchg
inc
gs
std
test
adc
cs
imul
mov
rorb
in
daa
and
xchg
clc
jne
cbtw
fstpt
js
and
aas
mov
dec
lea
cwtl
ds
dec
and
dec
imul
push
shlb
sti
mov
dec
std
mov
lret
sbb
xor
gs
adc
xlat
or
loope
psubq
cmpb
cmp
roll
pop
lret
mov
dec
lea
test
adc
cmp
or
ljmp
lret
repnz
call
ret
ret
jne
stos
stos
mov
or
sbb
negb
sbb
jae
jns
dec
dec
inc
jbe
adc
mov
push
mov
pop
lods
call
inc
aad
popf
clc
popa
cmp
dec
mov
leave
iret
lods
sbb
mov
dec
push
nop
fdivl
mov
xchg
int
sbb
mov
mov
test
push
dec
or
test
mov
jbe
push
push
mov
adc
mov
jae
inc
ret
shl
mov
orb
hlt
add
cmpl
adc
in
mov
popa
gs
xchg
ret
fisubrs
cmp
test
ret
jb
or
lea
stos
jp
es
jle
jns
sbb
xor
pop
pop
aam
stc
xchg
aam
rcrl
sub
dec
insb
sar
or
sub
mov
data16
sbb
inc
das
test
push
bound
iret
dec
add
jl
mov
inc
repz
mov
fwait
add
sahf
loopne
inc
fcoml
xorl
mov
add
mov
jnp
jae
sbb
dec
xor
push
or
adc
and
popa
hlt
ja
repnz
inc
jo
loope,pn
lret
adcb
in
lret
sub
rcrb
cmc
xchg
lea
adc
movb
xchg
push
and
dec
fcomip
mov
notb
mov
xchg
xchg
mov
push
jne
fcmovb
mov
repnz
mov
jecxz
mov
cmc
jne
repnz
adc
ljmp
jp
test
fs
or
pop
and
pop
mov
test
xlat
loop
sbb
movsl
xchg
daa
dec
dec
and
out
push
mov
in
xchg
xlat
cmp
xor
scas
xchg
pop
cli
bound
imul
fs
jl
loop
add
ss
or
or
nop
repz
stc
mov
cmp
clc
jp
mov
rorl
or
mov
jl
mov
push
and
cli
cs
enter
pop
jns
xor
mov
hlt
mov
pusha
aaa
pop
inc
addr16
fistpll
clc
push
movl
rorl
mov
stos
cmp
or
adc
and
leave
rcr
cmp
nop
test
out
lods
add
add
inc
pop
xchg
and
mov
push
mov
sbb
jno
fs
int3
and
das
bound
jmp
pop
sub
addb
pushf
xchg
int
nop
jns
out
adc
inc
pop
arpl
sub
push
ljmp
jecxz
xorb
std
xchg
jle
mov
push
xchg
addr16
mov
bound
mov
in
mov
mov
stc
mov
and
int3
shl
mov
and
sub
xor
xor
dec
mov
mov
xchg
pop
cli
jne
jo
int
adc
jns
aad
xor
rorb
adc
and
mov
test
push
stos
test
jmp
andb
scas
js
inc
push
ret
imul
icebp
testl
cmp
xorl
cltd
jae
cmp
xor
xor
fstpl
fs
pop
push
cmpsb
mov
mov
cs
jp
jg
shr
pop
and
das
jge
inc
in
adc
ss
outsb
sub
sub
mov
movl
dec
je
jle
sbb
jbe
dec
lret
cmp
repz
jmp
mov
xor
sbb
in
arpl
or
iret
pop
push
mov
int
mov
mov
out
and
pop
mov
fwait
rorl
std
pusha
rcrl
fxch
cld
adc
sbb
test
cmp
faddl
xorb
mov
les
lods
and
adc
mov
and
shrl
sbb
push
mov
adc
hlt
ret
mov
into
aad
repz
add
or
stc
jp
test
push
jae,pt
clc
mov
out
lods
notb
push
push
pusha
je
sbb
or
fcom
or
push
pop
fimull
xor
je,pt
jbe,pt
stc
imul
cmpl
nop
xchg
fstpt
sub
pop
sub
rcrb
sbb
add
je
mov
and
add
inc
sbb
jecxz
pop
loop
aas
xchg
lock
dec
mov
inc
repz
and
xchg
xor
and
div
pop
push
lret
pop
mov
mov
stos
mov
test
addr16
xchg
sbb
cmc
mull
cmp
lret
cmp
sbb
lret
mov
push
cmc
xor
and
mov
sub
adc
rorb
std
cmp
or
outsl
xchg
int3
pop
int
in
jecxz
sub
pop
push
lret
test
sti
add
add
pop
ljmp
or
sahf
sbb
sbb
sbb
adc
cmpsl
sub
das
adc
in
lea
or
fsubs
sub
cmc
adc
xchg
sbb
stc
ljmp
sub
arpl
mov
nop
and
add
movsb
inc
dec
mov
adc
call
sub
add
xor
scas
and
shlb
dec
hlt
out
loop
outsb
mov
std
lds
data16
dec
aam
jae
mov
ss
nop
lcall
outsl
add
sarb
xchg
shlb
sub
lods
imul
fdivs
add
mov
popfw
adc
sbb
inc
repnz
mov
lahf
and
adc
je
decb
xor
xchg
pop
adc
arpl
sahf
xor
in
xchg
lret
lcall
dec
cli
popa
popf
pop
jmp
sbbb
inc
bound
jmp
xor
sub
mov
pusha
sub
adc
sbb
cmp
nop
sub
cltd
out
inc
adc
cmc
outsl
mov
xchg
pop
or
inc
sbb
hlt
arpl
jno
je
mov
je
dec
dec
lods
mov
out
daa
mov
xor
add
mov
and
repnz
sbb
pusha
adc
xchg
xchg
and
sbb
mov
jb
loopne
or
pop
sub
inc
mov
hlt
mov
call
test
icebp
xchg
icebp
pop
cwtl
jecxz
ret
lea
adc
sbb
inc
leave
xchg
dec
mov
mov
aad
testl
dec
fisttpl
and
sar
std
fbld
inc
mov
sahf
movsl
sbb
lcall
add
clc
lret
out
mov
call
push
inc
or
repnz
inc
xchg
in
mov
je
repnz
xchg
iret
scas
testb
int3
lret
sbb
cmp
fucom
rorl
les
sahf
ljmp
mov
or
shlb
mov
cltd
rclb
test
cmp
lahf
xchg
fwait
xchg
and
inc
mov
jno
flds
mov
push
inc
insb
insb
aaa
jg
jns
cld
clc
mov
push
xor
mov
jns
div
bound
int3
xchg
or
jne
fwait
mov
outsl
rol
push
test
pop
jg
in
dec
fadds
leave
pop
shr
xchg
adc
jmp
dec
mov
loop
sbb
adc
scas
cmc
fsub
lcall
mov
pop
mov
lret
mov
insb
mov
and
push
rclb
out
or
push
cmp
mov
xchg
pushf
xchg
lcall
std
outsl
fbld
or
mov
enter
mov
sub
add
xchg
jno
daa
mulb
lcall
jbe
fiaddl
sub
jb
mov
push
xor
cmpsl
mov
sub
jne
sub
xor
lea
adc
inc
sub
jecxz
or
or
hlt
pop
out
push
clc
loopne
jbe
insl
push
iret
cmpsl
push
movsl
lods
xchg
and
ja
aam
lds
inc
xchg
fsubr
pop
fidivs
cmc
lret
stc
inc
and
aad
lea
ret
cs
push
sub
int3
or
sbb
jmp
sti
jo
mov
jb
scas
stc
movsb
push
in
in
test
js
outsl
sahf
pop
pushf
scas
popl
mov
das
mov
jmp
fucomi
pop
jg
pop
enter
cmpsb
mov
cmp
mov
cwtl
pop
wbinvd
ret
loop
mull
cli
mov
or
push
xlat
xchg
rol
push
jecxz
cmpsb
pop
sub
sahf
xor
xchg
fstps
jns,pn
dec
aam
bound
dec
mov
pop
iret
sub
xchg
out
sar
dec
int
inc
ficoml
cs
dec
sub
pop
dec
dec
scas
fdivp
fwait
out
mov
sahf
sti
test
or
sbb
mov
mov
dec
lods
jnp
fsts
mov
mov
decb
adc
in
mov
push
adc
out
insl
ss
mov
mov
dec
insb
mov
ret
mov
hlt
sahf
xchg
into
pop
inc
push
leave
ja
pop
arpl
scas
cmp
jnp
in
and
inc
in
adc
or
incb
sub
or
addr16
mov
aad
cmp
add
jae
xchg
inc
xchg
or
ds
mov
mov
hlt
mov
fbld
mov
xchg
mov
outsl
ret
xchg
inc
mov
rorl
mov
add
scas
cmc
fstpl
fnstenv
scas
js
cltd
mov
and
jp
addb
je
imull
in
push
xor
popf
mov
pop
test
cli
jecxz
stos
aad
pop
shlb
leave
fildll
xchg
test
pusha
xchg
mov
add
xchg
fadds
mov
mov
cwtl
add
adc
mov
lods
sub
cmp
lret
xchg
testl
stos
int3
scas
xchg
push
sahf
mov
movsb
aaa
add
mov
inc
push
insb
adc
insl
pop
fildl
outsb
movsl
jmp
dec
repz
xor
cmp
push
add
in
ret
mov
jae
push
push
sahf
popa
dec
enter
cli
push
jbe
repnz
lock
cmc
cli
xchg
stos
scas
add
cmpsb
pushf
insb
test
arpl
dec
insl
fstl
add
and
sbb
xchg
sub
imul
and
arpl
jbe
add
jne
mov
lcall
ror
inc
js
sbbl
ficompl
popa
cwtl
mov
pop
fcoml
jb
flds
sub
mov
or
test
in
dec
dec
mov
ds
mov
fstps
mov
inc
out
push
mov
insb
pop
outsl
dec
dec
int3
jmp
cli
add
mov
bound
mov
into
cmp
arpl
xor
into
mov
enter
jnp
in
push
cmp
cs
and
inc
push
mov
filds
gs
cmp
mov
les
icebp
shll
add
and
stos
mov
mov
add
cmp
mov
mov
mov
jmp
test
repnz
sti
and
xor
aad
popw
mov
das
testl
or
inc
inc
rorb
sub
sbbb
jl
lret
pusha
cmp
cmc
pusha
mov
jns
jnp
cmp
test
aam
fisubs
jae
and
hlt
mov
jge
jmp
inc
int3
add
mov
jg
pushw
mov
cwtl
or
mov
idivb
pushf
andl
sbb
cmpsl
mov
jmp
hlt
xlat
cmp
cmp
xchg
push
xchg
in
je
fsts
aaa
enter
arpl
xchg
cltd
pop
push
push
inc
pop
xchg
rorb
mov
push
pop
inc
mov
sub
inc
push
int3
mov
enter
into
xor
gs
in
sub
subb
mov
dec
cmp
mov
pop
clc
std
int
mov
mov
aas
frstpm(287
nop
xchg
lds
sub
ret
xchg
scas
cmp
out
mov
sub
arpl
and
fmuls
add
fdivrl
ljmp
or
out
inc
addb
sub
cwtl
inc
cld
mov
sub
ja
sub
mov
jl
sahf
fpatan
and
fs
call
xor
xchg
jnp
fdivr
dec
xchg
sub
lods
fisttps
ja
sbb
push
ret
loop
repnz
pop
es
je
dec
or
pop
mov
jmp
inc
adc
shlb
fists
adc
xchg
cmp
loop
es
inc
add
ds
out
xchg
and
rep
mov
int
adc
inc
cmpsl
cwtl
mov
arpl
es
dec
iret
pop
ret
ret
cmp
in
or
pop
jo
inc
mov
mov
mov
pop
push
dec
sbb
sub
inc
addr16
ss
mov
sbb
aam
fsubrs
out
jbe
cmp
xor
jmp
inc
loopne
enter
pop
pusha
cmp
dec
scas
mov
lcall
leave
fnstenv
out
stos
sahf
jle
das
push
xchg
mov
fadd
faddl
sbb
cmp
and
fisubrl
out
es
push
loopne
jmp
jns
jmp
or
iret
cmp
popf
mov
cli
movsb
divb
xor
sub
xchg
xchg
add
push
mov
sbb
jns
xor
jg
xchg
aam
sti
jns
inc
push
roll
setae
dec
pop
xchg
popf
fldl
cmp
add
and
inc
fmuls
fs
nop
lods
adc
iret
scas
loope
jecxz
adc
repz
scas
mov
mov
cmp
stc
adc
das
mov
xchg
jne
xchg
in
popa
subb
push
icebp
and
in
and
iret
xchg
inc
lock
sar
movsb
ret
or
jp
add
rolb
xchg
jge
ret
or
jb
push
loopne
lahf
push
shll
xor
aas
sahf
scas
outsb
arpl
sub
mov
xchg
rcr
inc
outsl
fimuls
pop
aam
push
clc
mov
xor
ss
hlt
dec
rcr
stos
jb
or
fs
cmp
flds
out
xchg
adc
pop
fs
dec
push
rcrl
sbb
push
std
ret
ss
ja
and
xchg
inc
xor
dec
mov
out
xor
mov
mov
mov
sub
xlat
jp
lahf
popf
gs
inc
rcrb
jae
je
sub
push
jns
mov
out
mov
daa
inc
sarl
cli
adc
mov
mov
or
add
out
inc
xchg
inc
inc
adc
jg
add
loopne
daa
cld
jl
and
notb
mov
test
xchg
leave
jae
mov
in
faddl
xor
push
sahf
pop
ret
jecxz
clc
into
into
and
lret
inc
sti
cmpl
sub
mov
ds
mov
and
pop
flds
or
outsb
pop
or
sbb
cmp
sub
cs
cltd
sarl
dec
cmpsl
mov
mov
outsl
jbe
ret
fidivs
pop
xor
push
sbb
popf
xchg
inc
cmpl
stc
popa
push
sbb
xor
mov
clc
and
fdivl
mov
mov
push
loope
std
mov
mov
cmp
xor
aam
mov
mov
leave
lret
rorl
fnstsw
and
jge
jmp
dec
push
mov
lods
inc
in
sbbl
sbb
movsb
arpl
fidivs
fdivrs
mov
pushf
cmp
adc
jmp
not
repz
xor
pop
int
xchg
cmp
or
rep
nop
pop
fsubs
jge
out
pop
push
shll
or
fwait
int3
jo
inc
adc
mov
gs
into
xlat
ret
fadd
divb
jg
dec
sbb
dec
loop
push
ffreep
imul
lea
clc
std
or
cmp
dec
cld
aam
inc
adc
pushf
add
adc
inc
loope
jae
loopne
repz
imul
or
push
sarb
daa
mov
repz
in
hlt
mov
push
xchg
lock
addr16
fstpl
sbb
movsl
shll
jmp
adc
negl
iret
aad
and
or
lret
aaa
mov
movsb
xorl
mov
test
std
insb
mov
repz
push
shl
int
ljmp
push
jae
mov
into
cwtl
mov
cltd
stos
lahf
sbb
mov
leave
sbb
les
push
imul
sbb
test
mov
xor
sbb
mov
cmpb
cmp
mov
fsubrs
add
cwtl
call
or
mov
test
xor
xchg
in
outsb
jno
and
fsubl
cmc
mov
sub
or
inc
and
jmp
imul
clc
mov
mov
daa
jge
xor
sahf
mov
ds
add
inc
or
or
call
xchg
ss
notl
adc
dec
mov
inc
popa
inc
sbb
sahf
cmc
test
mov
rcll
jg
inc
sbb
jmp
mov
push
fsubs
add
orl
cli
add
xchg
xchg
cmp
into
popa
pop
xchg
mov
pop
movsl
push
in
into
mov
pop
inc
and
jne
outsb
mov
insl
lea
mov
jl
cmp
data16
sbb
imul
pop
add
xchg
jb
jg
idivl
mov
push
fisttps
enter
out
fisttps
dec
out
loop
imul
in
inc
nop
mov
rcrb
xor
xchg
test
sbb
js
jecxz
mov
xor
mov
inc
xchg
jno
test
es
push
ret
inc
sub
push
xchg
xchg
or
xor
out
mov
negl
repnz
lret
xchg
movsb
adc
shrb
icebp
popf
test
push
xchg
fwait
pop
call
iret
sbb
mov
mov
stc
cmp
mov
lock
push
pop
push
xor
cli
jae
iret
nopl
test
dec
jp
mov
jecxz
fisubs
js
jnp
cmp
dec
jns
in
cwtl
pop
mov
mov
aam
push
in
inc
out
fsts
mov
cmp
sbb
jmp
and
mov
push
cmc
pop
loope
shll
xor
je
cmp
imul
inc
outsl
or
jbe
jb
mov
xor
or
into
stos
push
xor
cmp
pop
imul
outsl
pop
sub
aam
lcall
push
mov
lock
push
dec
lods
and
sbbb
mov
nop
cltd
cmp
sub
sub
xchg
int
out
dec
pop
enter
daa
outsb
sub
sbb
out
dec
and
sbb
inc
mov
repz
lds
call
dec
mov
ss
sar
mov
mov
lods
pop
fsubs
addr16
push
call
jl
sub
pop
pop
mulb
or
jo
leave
sbb
cmpsl
mov
inc
cmp
mov
call
test
cmpsb
adc
mov
popf
clc
mov
jle
mov
adc
xchg
push
xchg
push
jp
subl
in
movsl
jmp
inc
mov
outsb
out
sub
aaa
mov
jae
dec
xchg
fildll
ja
lods
jb
jns
push
rdmsr
push
ret
jecxz
pop
cmpsb
mov
ret
pop
pop
pusha
jge
push
add
fldt
jmp
aam
cmpsb
and
jb
xchg
dec
mov
jg
mov
inc
xor
std
lret
cmp
leave
pop
out
iret
ret
iret
bound
aam
xchg
pop
xchg
sub
out
sbb
or
pop
dec
lods
push
ss
cmp
imul
jne
xor
mov
aad
push
mov
das
std
push
fbld
cmp
pushf
push
fsubrl
pop
sub
jmp
mov
shrb
movl
insb
loopne
es
cmp
mov
imul
inc
test
in
test
xchg
loop
lahf
loop
xor
std
mov
shl
scas
push
arpl
sbb
adc
adc
pop
mov
fisttpl
push
fildll
inc
aas
cmp
andl
lcall
sub
lcall
pop
pushf
sbb
and
fildll
xchg
fstl
jnp
dec
cmp
in
rcll
daa
adc
cmp
out
js
dec
jbe
jecxz
inc
mov
sbb
sub
push
inc
add
mov
dec
push
mov
ret
int
adcl
sarl
cltd
ljmp
and
fs
int3
bound
xchg
lret
mov
mov
push
adc
push
cld
and
fistpl
sub
addr16
mov
pop
in
icebp
mov
jno
dec
cmp
mov
pushf
xchg
sub
mov
push
dec
jg
movsb
cmp
ffreep
xchg
mov
std
bound
mov
mov
out
dec
cmp
scas
test
xlat
mov
jp
mov
scas
xchg
pusha
out
sub
lret
sub
lret
adc
cwtl
rclb
loopne
sarb
jle
je
shlb
fidivrl
js
push
test
mov
out
xor
jecxz
and
sbb
fsts
and
cmpsl
sbb
push
xchg
cld
xchg
push
cmp
xchg
jmp
lods
sub
mov
lret
dec
loop
sub
jl
sub
imulb
jecxz
fmull
mov
xchg
pop
sbb
inc
aam
mov
in
lret
xor
mov
and
int
lret
inc
jp
pushf
jl
popa
out
sbb
mov
dec
daa
fcoms
ja
lock
fstpt
jg
mov
repnz
push
js
aad
jno
loop
cmp
xchg
xchg
pop
into
test
sarb
or
dec
cld
push
jg
add
repnz
das
add
sti
jge
and
cmpsb
jbe
xchg
adc
mov
stc
loope
add
sub
pop
out
pop
dec
adc
stos
cmp
pop
ja
push
mov
and
push
cld
roll
cmp
es
mov
and
mov
inc
mov
jne
adcl
sbbl
test
jae
mov
arpl
bound
or
fcompl
mov
sub
call
stc
repnz
clc
pop
jle
pop
xchg
pand
add
mov
push
rclb
push
jae
lcall
fs
inc
push
sahf
jne
add
out
pop
lods
shll
cmpsb
push
xor
imul
mov
jo
int
pop
lret
sub
sbb
jg
inc
imul
fld
dec
mov
fldt
add
ret
xor
fadds
pop
mov
iret
lahf
inc
dec
push
and
jl
inc
mov
sbb
stc
adc
sbb
pop
add
lea
mov
add
push
mov
sti
mov
pop
lcall
xor
mov
cwtl
cmp
sub
in
xor
in
jl
mov
push
scas
dec
dec
sbb
aam
push
test
cld
jmp
mov
adc
mov
bound
pop
inc
sbb
xchg
int
mov
ret
cmp
add
pop
in
or
addr16
add
bound
movsl
adc
add
cltd
inc
inc
cmc
bnd
negl
movsl
jo
or
mov
push
mov
mov
rol
addr16
mov
outsl
and
test
iret
int
xchg
aas
push
filds
outsb
dec
and
mov
push
inc
xchg
jle
out
mov
xor
pop
insl
xor
fs
sbbb
add
fstpl
movsb
xor
pop
mov
stos
mov
pop
scas
sub
xchg
dec
out
rcll
mov
inc
cmp
fidivl
sbb
pop
xor
dec
or
cmp
pusha
test
outsb
dec
push
cmp
or
inc
xchg
xchg
lret
inc
sbb
rorl
repz
lret
arpl
jmp
or
sub
cmp
jl
pop
test
nop
jbe
push
jmp
shrl
dec
mov
hlt
cs
mov
bound
lcall
ss
aam
xchg
and
adc
outsb
lcall
sub
aas
rolb
push
push
sub
mov
lret
xchg
rol
xchg
stos
cmpsb
rclb
int
test
sub
bound
dec
stc
and
js
mov
fmul
mov
in
insl
frstor
mov
mov
ljmp
imul
lret
or
icebp
xchg
sub
mov
or
mov
mov
add
xchg
dec
cs
aaa
cli
imul
nop
jne
gs
in
jae
inc
iret
lret
inc
and
int
mulb
cmp
rcl
das
test
pop
mov
pop
jno
mov
mov
mov
fisttpl
mov
dec
sti
fisubs
sahf
stc
pusha
mov
filds
aam
and
dec
idiv
cmpsb
sbb
mov
push
mov
add
pop
sti
ret
jecxz
jle
sar
mov
mov
lock
sti
jp
pop
and
jne
inc
out
push
or
adc
out
stos
addb
shll
mov
dec
mov
fs
test
rcl
push
pop
js
aas
adc
popf
push
lret
pop
mov
mov
and
sub
dec
call
xor
iret
lea
jb
std
or
pop
dec
pop
cmp
stos
dec
movsb
aam
sub
dec
leave
sbb
popa
dec
rcrb
ss
fdivl
ret
hlt
je
test
xor
call
fistpll
outsb
add
sub
mul
lea
shrl
push
adc
outsb
mov
sbb
call
mov
and
fisubrl
xchg
jmp
ret
cmp
xchg
xchg
xchg
mov
fcmovne
pop
shl
dec
add
add
adc
stc
adc
cmp
imul
std
fld
mov
aaa
cli
lcall
push
pop
outsl
jp
pop
cmp
xlat
adc
out
scas
sub
push
in
mov
fldt
mov
xchg
inc
add
fists
stos
ret
jecxz
cmp
mov
jmp
ret
jae
inc
nop
cmpsb
cmp
ret
sbb
adc
decl
or
cmp
jbe
daa
ds
jno
std
push
sub
ds
das
loop
jb
push
cmc
rorl
mov
stos
movsl
push
xchg
sub
xchg
sbb
in
push
popf
leave
fwait
std
test
sahf
inc
fucomip
xchg
jp
and
mov
ljmp
cmp
outsl
pmulhuw
fdivr
xchg
jae
rorb
insb
outsb
inc
fisubrl
inc
cmpsl
imul
pop
xor
xor
cmpsb
jb
xor
sbb
lret
jne
and
insl
dec
lea
fs
push
mov
and
pushl
adc
pusha
sarb
jae
mov
mov
push
jno
adc
dec
mov
push
cmp
lock
jb
mov
mov
mov
fwait
js
sub
pop
js
les
inc
adc
fwait
subb
mov
es
out
pusha
lret
sbb
cmp
adc
mov
push
lods
pushf
popa
aaa
pushf
push
shl
xorl
jp
mov
and
add
pop
cmp
sub
jno
push
sub
xor
mov
fs
lock
add
sbb
or
jle
adc
mov
push
dec
mov
shlb
les
mov
lret
aas
jbe
jecxz
outsl
movsl
xchg
pop
je
popa
jne
rorl
sbb
out
sbb
pop
aad
cld
stc
xor
int3
fldt
cmp
or
incb
dec
subb
cld
cltd
fsubl
iret
inc
mov
jns
pop
xchg
or
xchg
sub
sub
sub
test
test
ret
or
xchg
mov
jl
addr16
adc
int
mov
je
jp
stc
stos
add
aam
mov
cmpsb
mov
mov
cwtl
and
or
and
push
cwtl
stc
in
out
pushf
outsl
ss
stos
add
je
sbb
rcl
dec
xor
or
popa
fistpl
enter
pusha
imul
cmp
cmp
aaa
mov
add
dec
cmp
mov
or
inc
jl
mov
roll
loope
jns
pop
mov
adc
inc
inc
shlb
xchg
mov
and
mov
jo
lods
fmull
andl
cld
and
jl
outsb
mov
in
xchg
adc
inc
xchg
das
rcrl
pushf
arpl
push
xor
cwtl
insl
flds
sbb
fstps
aas
andb
cmp
sub
adc
out
lods
out
insb
mov
fiadds
cmpsl
rcr
lods
dec
dec
popf
xor
sub
xchg
add
xor
imul
test
sbb
scas
sub
lds
jge
pop
pop
add
fidivrl
inc
fdivrp
pop
shll
daa
sbb
lcall
test
stc
cld
inc
push
lcall
cmp
enter
jg
sub
push
xchg
stos
pop
mov
adc
popf
cwtl
fwait
mov
xchg
in
ja
xlat
inc
xchg
arpl
adc
fistps
xchg
mov
add
nop
mov
aam
leave
mov
xchg
int
gs
push
jge
xchg
roll
ficoms
fcomi
pcmpgtb
jp,pt
ret
std
lcall
push
pop
js
dec
sahf
jp,pt
clc
ret
lahf
jp
js
inc
jb
xchg
aas
adc
stc
mov
repz
cmp
xchg
cmp
mov
dec
lcall
push
mov
mov
dec
movsb
push
mov
in
ja
add
xchg
inc
lret
std
adc
sbb
inc
add
sub
sub
and
ja
cmp
cwtl
adc
in
stos
push
cltd
sbb
jae
adc
outsl
jb
push
or
xlat
ds
inc
insb
rorl
repz
jmp
cmpsb
or
adc
xchg
inc
sbb
mov
dec
or
movsb
cs
xchg
ds
ja
xchg
inc
imulb
push
and
mov
addl
jmp
lret
push
stc
popf
adc
js
faddl
xchg
lahf
dec
in
mov
or
pop
int
mov
jbe
dec
fcmovu
je
pop
and
add
shll
mov
dec
lret
mov
scas
sbb
mov
ljmp
xorl
adc
mov
divl
inc
jb
or
aad
push
cmc
ret
in
sub
push
cmp
cmpsb
pop
fimuls
je
mov
mov
adc
pop
xlat
sub
add
sbb
xchg
xlat
jnp
jp
js
cmpl
adc
pop
dec
pop
adc
adc
adc
or
mov
cwtl
shrb
ret
xchg
popa
out
adc
xor
jmp
pop
pop
scas
dec
adcl
in
pop
shrb
pop
or
or
jp
mov
andb
lea
jne
push
mov
shr
jge
dec
iret
cs
dec
add
xor
xor
sbb
iret
cltd
cmp
push
in
xor
jnp
in
sbbb
pop
or
in
popa
ds
push
mov
psraw
popa
inc
push
testb
rcr
and
mov
jl
out
push
push
dec
out
cli
pop
rcll
in
es
cmp
sbb
and
mov
mov
push
mov
cwtl
push
mov
mov
movsb
add
mov
leave
adc
push
or
gs
lret
push
rcr
ja
popf
addl
sbb
out
cmc
and
jne
pop
adc
cld
sarb
mov
sub
ds
nop
xor
int3
dec
divb
aas
jl
hlt
fidivrl
and
int3
adc
es
cmpsb
pop
lret
inc
inc
clc
mov
out
scas
cmp
fptan
sbb
xor
lahf
leave
xchg
or
xor
sbb
out
push
cmp
dec
popf
fiaddl
mov
sub
scas
xor
stc
pop
pusha
xor
mov
stos
scas
fcomps
jo
scas
les
push
or
xchg
cmc
pop
cmp
fldenv
mov
push
jle
out
mov
mov
xorb
mov
aaa
loop
into
sub
std
xchg
arpl
jo
mov
xchg
icebp
std
stc
out
pusha
arpl
cmp
cmp
adc
insl
mov
jg
dec
adc
shll
pop
insl
push
inc
mov
add
idivl
or
fstl
sub
xor
sub
push
adc
adc
stos
pop
rorl
arpl
push
mov
ljmp
add
push
mov
enter
adc
je
inc
lods
dec
sub
in
mov
es
in
mov
cmp
mov
dec
fwait
cmpsl
fnsave
mulb
das
ret
es
leave
cld
or
sbb
inc
jb
xorb
adc
cmpsb
imul
adc
inc
cmp
outsl
cli
hlt
cltd
adc
std
mov
push
push
popa
xlat
mov
out
xchg
int3
sub
les
mov
sbb
sub
fnstenv
rorl
stc
adc
ret
lock
push
repnz
loop
imul
js
lds
adc
mov
sub
and
add
mov
jp
call
call
adcl
pop
test
aam
or
push
xor
pop
stos
xchg
in
mov
dec
pushl
and
xor
mov
shlb
lret
stos
cmp
insb
xchg
xchg
aaa
pop
sbb
jmp
popf
in
pop
jge
pop
repnz
adc
inc
mov
jo
out
mov
push
push
aad
sub
xor
pop
inc
stos
pop
cmp
dec
xchg
push
push
sbb
popa
inc
mov
daa
cs
mov
test
sbb
xor
xchg
pusha
lock
gs
mov
fldl
pop
mov
and
dec
cmp
push
xchg
into
mov
cmp
imul
dec
stos
sub
daa
es
repnz
rolb
push
dec
push
inc
scas
rclb
mov
pop
movlps
cmp
popa
inc
orb
je
push
shll
in
dec
inc
and
add
dec
adc
push
movsl
sti
arpl
ret
push
mov
jecxz
sbb
pop
dec
jle
divl
roll
push
movsb
dec
subl
mov
pushf
push
fidivs
js
je
pop
jns
outsb
aad
pop
aaa
fimull
je
sbb
ret
push
fistpll
nop
jmp
pop
and
xor
add
mov
xchg
push
sub
mov
push
xchg
stos
jge
xor
popa
sub
mov
xor
lcall
push
push
popa
push
loop
lock
mov
sbb
mov
in
pushf
loopne
jp
aas
jns
or
mov
mov
ret
sbb
mov
arpl
xlat
and
call
mov
adc
mov
or
movsl
push
fnstenv
fiadds
pop
nop
lahf
pop
fldt
mov
mov
xchg
mov
movsl
loop
outsb
jl
pop
push
pop
mov
and
pop
cmc
ljmp
xlat
pop
adcb
and
sbb
addl
lret
movsl
dec
add
aaa
xor
sbb
jb
push
sbb
mov
add
xor
cwtl
pop
imul
push
xor
xor
jl
sub
aaa
fsubl
push
inc
popf
xchg
lret
xchg
movsl
cmp
sub
adc
mov
xchg
push
ja
pop
inc
dec
pop
shll
repnz
je
push
cmpsb
push
loope
nop
mov
pushf
ja
mov
mov
cmp
cmp
movsl
xchg
sbb
cmp
ds
pop
lahf
fwait
lahf
insb
imul
test
dec
xchg
jns
cmpsb
aad
stos
adc
fs
mov
pop
push
dec
inc
or
push
repnz
add
and
sub
or
adc
mov
jmp
or
rorb
push
mov
repnz
out
shl
cld
pop
or
xchg
adc
adc
in
popf
imul
fisubs
fnsave
inc
adc
scas
mov
inc
and
push
jno
lea
out
cld
push
les
repnz
cmp
gs
mov
dec
or
jno
aas
xor
pop
jg
xor
jecxz
sub
pop
fnstcw
add
js
or
je
movsl
icebp
jae
jne
adc
lea
pop
jl
adc
dec
popa
lods
jo
cli
fwait
daa
int3
icebp
jmp
xchg
ljmp
frstor
movsb
mov
rorb
into
inc
mov
clc
dec
sbb
fwait
and
jno
ret
lret
and
outsb
pusha
xor
mov
js
stos
jbe
fcmovnu
hlt
nop
sbb
mov
inc
adc
arpl
jb
sbb
sub
bound
add
cmp
pop
sbb
sub
data16
fdivr
or
leave
js
push
call
inc
xor
or
js
ret
mov
mov
and
sbb
mov
cwtl
dec
sahf
loopne
add
neg
mov
sbb
cld
ficoms
cmp
cmp
test
aaa
in
adc
gs
mov
xchg
xor
sbb
add
aas
ja
cmc
repz
repnz
psubw
pop
adc
bound
leave
cli
or
test
jl
jecxz
sub
and
loop
ja
pop
pop
nop
xchg
dec
inc
mov
xchg
out
xor
jmp
js
cld
int
test
pop
sahf
lods
imul
fidivrs
enter
or
rorb
xor
stc
mov
inc
dec
les
pop
test
mov
sbb
jnp
pop
jmp
movsl
in
jnp
sbb
xchg
jecxz
arpl
loope
negl
repnz
cmp
push
data16
jo
xchg
xchg
je
mov
sbb
sbb
loopne
pusha
xor
imul
inc
push
xor
test
jge
hlt
jo
addr16
ljmp
int3
xor
cmpsb
sbb
jns
int3
stos
mov
mov
push
outsl
jl
mov
aad
push
xor
rorl
and
repz
ret
out
insb
and
sti
jecxz
imul
push
ss
inc
and
cmp
lahf
sub
jp
adc
jns
sub
pop
xchg
mov
and
shl
movsb
aaa
and
test
xchg
mov
xchg
cmp
cmpsl
popa
mov
adc
xchg
mov
je
cmpsb
add
mov
jae
jle
das
sbb
sbb
js
jmp
push
pop
lret
loope
xchg
cmpb
fnstenv
rcll
adc
fsubr
cltd
cltd
cmp
repz
insb
int3
cmpsl
aaa
mov
jno
or
les
mov
xchg
sbb
int
loope
in
xor
sub
pop
dec
push
mov
addl
gs
push
add
dec
insl
enter
push
outsl
sbb
sub
xor
cmp
mov
inc
cmc
int
jecxz
pop
mov
scas
mov
cmpsb
sbb
imul
push
leave
push
aad
xchg
jnp
xor
jle
fincstp
push
lcall
cwtl
lea
push
hlt
and
ss
cmp
lret
sub
test
sub
xor
fwait
les
inc
test
jecxz
enter
cwtl
stos
les
xor
dec
ljmp
lret
or
hlt
adc
bound
repz
mov
adc
mulb
jo
inc
js
xor
pop
inc
pushf
call
sbb
mov
repz
sti
cmp
add
repnz
pop
mov
sub
fstl
sub
xchg
pop
adc
mov
mov
inc
aad
cltd
shl
jnp
dec
ret
mov
arpl
xchg
ss
daa
fwait
mov
adc
in
repnz
xlat
add
mov
repnz
jmp
and
adcb
xchg
gs
push
hlt
cmp
fcomps
cltd
aam
pop
sub
dec
cmpsl
mov
mov
ret
push
cmovg
pop
push
repz
lods
aam
stos
fdivr
jge
call
ds
xchg
and
lret
adc
sub
cmp
cld
xor
push
xchg
sbbl
insb
mov
push
mov
mov
mov
adc
push
lds
cmpl
push
lock
cmp
push
arpl
jmp
es
int3
pusha
cmp
adc
pop
pop
mov
ret
loopne
mov
out
inc
push
cmp
fwait
lret
push
add
xorl
jno
jo
lock
mov
lret
daa
cltd
sbb
xor
adc
jecxz
mov
mov
dec
sub
sub
cmpsl
mov
cld
hlt
dec
or
cmp
jo
mov
aad
jecxz
aam
test
or
push
outsb
mov
push
sub
or
ret
adc
xchg
dec
fwait
mov
es
inc
divl
dec
inc
fs
sbb
or
pop
add
mov
xlat
xchg
in
inc
pop
mov
outsl
xchg
mov
mov
popa
mov
sahf
push
test
addr16
mov
mov
cli
mov
jmp
add
call
out
les
inc
mov
movsb
sub
jne
xorl
and
arpl
pop
inc
rcrb
cld
fs
jg
aad
mov
dec
mov
cmpsl
or
xor
hlt
jge
and
pop
sub
adc
push
mov
cltd
xchg
enter
outsb
mov
ret
in
xor
mov
scas
xor
scas
lret
jle
addr16
lds
dec
sbb
dec
bound
lahf
in
icebp
push
mov
pop
push
or
fidivs
inc
in
pop
enter
ficomps
pop
rcr
test
mov
ret
mov
xchg
cmpsl
push
subl
in
lahf
rcll
xor
mov
push
outsb
push
and
mov
cmp
pop
cltd
inc
dec
dec
and
fldenv
aaa
and
cmp
mov
adc
ret
sub
cmp
idivb
cmpsl
shl
pop
inc
cltd
fbld
pop
js
xor
mov
fildl
cld
xchg
inc
mov
sub
lods
hlt
or
adc
jecxz
mov
jae
inc
out
and
pop
in
jl
xor
dec
pop
inc
lods
cmp
xor
aas
outsb
xchg
icebp
dec
add
fucomip
inc
aam
mov
mov
push
or
pop
inc
ret
sub
mov
jnp
jo
mov
lcall
std
sarb
jbe
mov
xor
out
pop
divl
adc
push
dec
pop
sahf
or
dec
dec
mov
divb
lret
inc
pop
ja
sub
or
in
add
cmpsb
lods
sbb
adc
movsl
fnstcw
test
mov
movsl
sbb
icebp
aaa
sub
fwait
stos
js
adc
fmulp
lret
pop
mov
mov
pop
lret
lods
and
cli
xchg
pop
out
mov
fwait
and
movsb
mov
xchg
xchg
data16
cmpsb
into
cmpsb
adc
dec
sbb
pop
jmp
cmpsb
out
adc
add
sbb
lahf
sbb
jl
and
std
nop
pushf
sub
or
les
pusha
lret
jns
inc
add
sub
loop
adc
sahf
push
jne
or
mov
inc
mov
inc
mov
sub
stos
scas
lock
push
jmp
fdivl
sub
cmc
popf
repnz
dec
cmc
js
nop
push
out
idivl
cld
fistpl
xchg
jns
mov
notl
cmpsl
dec
add
sahf
fimull
fcoms
push
push
adc
repz
in
ja
inc
stos
inc
enter
scas
in
arpl
sbb
xchg
xchg
mov
mov
mov
subb
mov
inc
xchg
fisttpl
cmpsb
mov
mov
lea
lods
outsb
pop
cli
ret
xlat
loopne
xchg
lret
pop
jp
loopne
ds
dec
stc
push
daa
push
sub
inc
and
sbb
sbb
jb
popa
xor
dec
out
or
cmpsl
cwtl
cwtl
rcll
sbb
scas
aas
mov
xlat
xchg
arpl
loopne
sbb
rolb
xor
cmp
jmp
or
out
leave
sarb
cmp
jnp
rorb
ds
pop
or
pop
sbb
jecxz
bound
mov
cltd
mov
push
jmp
lahf
adc
sub
sub
fidivrs
mov
and
jo
mov
fwait
js
nop
pop
data16
xor
lret
or
ss
mov
nop
test
movsb
sbb
std
mov
jnp
test
push
inc
or
inc
and
mov
andb
icebp
ret
rorb
data16
add
fldcw
cli
or
add
push
xor
pop
mov
int
push
aaa
pop
sbb
pop
jmp
enter
mov
shll
in
xchg
add
mov
jecxz
push
cwtl
imul
loop
push
lods
gs
dec
repz
lahf
ffree
mov
nop
mov
scas
out
scas
loopne
inc
leave
loopne
ret
scas
imul
pop
adcb
sbb
and
lahf
or
aad
inc
push
loope
lcall
jbe
outsb
ficompl
das
fisttpl
or
lret
les
xchg
push
sub
jp
js
lahf
out
stos
push
shrl
sahf
and
pop
pop
xor
mov
push
lods
out
xor
out
rcr
push
jns
mov
push
or
jle
jl
test
adc
sahf
mov
mov
dec
popa
iret
jge
int3
and
imull
push
cli
aas
out
orl
xorl
cltd
insl
dec
adc
dec
fldt
das
loope
std
scas
push
jae
dec
aam
cmp
dec
cmpsl
lahf
adc
btc
mov
sbb
xchg
lods
fildl
cltd
sbb
add
clc
addr16
inc
jle
lret
cmp
ret
imul
or
or
fiaddl
or
pop
or
push
jp
mov
xchg
lea
sahf
mov
addr16
fnstenv
in
bound
jmp
dec
outsl
int
ror
in
jne
dec
insb
out
inc
mov
sub
mov
xchg
je
pop
jge
pop
lds
add
mov
fucomip
lods
cli
mov
jp
pop
nop
push
inc
jp
fists
cmp
xchg
popa
cwtl
gs
jno
mov
rcl
ret
sbb
or
jo
pop
add
mov
bound
sbb
jge
call
push
jecxz
daa
cmpsb
pop
jmp
or
movsl
les
lea
dec
sub
std
or
adc
cwtl
or
insl
out
inc
lret
fidivrs
sub
xchg
cmp
call
mov
xor
cmp
jle
and
push
pop
call
arpl
icebp
and
sbb
push
cmpsl
dec
mov
adc
dec
dec
cs
sbb
andb
clc
xchg
movl
xchg
add
xor
push
xlat
cmc
cmc
inc
add
loope
pop
repz
inc
sbb
pop
fdivs
xor
pop
adc
push
daa
lahf
xorb
sahf
sub
mov
jmp
mov
ret
ret
push
xor
jb
xlat
dec
fimuls
mov
adc
aas
mov
adc
fxch
pop
xchg
adc
iret
sub
cmpsl
cwtl
pop
cltd
dec
in
dec
fcomip
add
repnz
cmp
in
out
sub
add
push
icebp
shl
es
and
cmp
inc
inc
outsb
mov
dec
out
movsb
inc
int3
out
cmp
inc
loope
xorl
jcxz
xchg
jp
or
fldl
out
adc
jno
pop
in
pop
jne
xor
push
jne
std
pop
sub
push
pop
pop
lods
or
inc
stos
loop
dec
xchg
cmp
addr16
jnp
sub
mov
test
into
stos
lcall
ljmp
pop
mov
mov
dec
and
mov
pushf
mov
push
push
lods
ret
enter
adc
outsb
in
pushf
into
jne
addb
add
and
push
sbb
pop
sub
mov
idivb
mov
xor
hlt
loop
ficomps
mov
dec
cld
jecxz
sub
sbb
mov
mov
or
lea
notl
push
xchg
xchg
xlat
xchg
repnz
inc
out
jge
insb
mov
addr16
jl
call
bound
outsl
xor
mov
lock
mov
enter
loopne
jge
int3
mov
push
mov
das
mov
mov
std
lock
gs
addr16
clc
cmp
stos
in
dec
test
add
or
dec
sti
xor
xchg
test
dec
out
sbb
divb
xchg
pusha
in
pop
mov
outsl
leave
adc
mov
popa
xchg
dec
cltd
leave
data16
ja
mov
popa
mov
add
push
iret
repz
call
jecxz
out
sub
push
mov
adc
dec
pop
and
mov
cmp
xchg
mov
mov
icebp
sbb
stc
or
shrl
jge
subl
xor
fsubrl
sbb
sbb
cmp
enter
add
or
inc
jno
stos
fldt
pop
lock
iret
cmpsb
sbb
dec
mov
enter
adc
sub
and
test
lahf
fldl
jge
push
fldenv
hlt
icebp
push
mov
hlt
imul
inc
dec
ljmp
in
shlb
adc
fildll
nop
nop
mov
dec
mov
outsl
out
sub
in
push
xorb
sbb
cmp
mov
adc
xchg
cmp
fstpt
mov
push
push
cmp
inc
push
dec
cmpsl
lds
jnp
fs
hlt
enter
in
push
dec
add
lret
mov
and
pop
rolb
imul
xchg
lds
mov
fcompl
outsb
imul
jne
popf
aad
cmp
fisubrl
pop
pop
mov
xchg
mov
mov
xchg
andps
jae
lahf
cmc
cmp
cltd
inc
daa
fstpl
mov
lea
cli
stos
pop
repz
test
xchg
cmp
xor
cmp
inc
imul
movsl
inc
loopne
push
fstpl
sub
xor
or
imul
adc
sbb
adc
xlat
dec
mov
mov
jle
push
or
call
xor
xor
fildll
dec
push
sub
out
sbb
das
mov
pushf
adc
cmp
jb
sub
rcrb
xchg
popl
pop
push
enter
or
cmpb
fs
mov
sub
arpl
and
sbb
in
sub
clc
xor
and
aam
jmp
sbb
mov
cmp
push
inc
push
lret
popa
jbe
dec
sti
mov
push
jne
adc
or
mov
scas
fnstcw
adc
sbbl
or
lret
mov
cmp
jle
ficoml
in
cmp
pop
push
mov
int3
stos
mov
push
inc
cmpsb
ret
mov
inc
lods
sub
jp
cmp
or
jne
popa
and
js
push
js
fsubs
lret
jns
cmp
xor
xorl
mov
popa
enter
mov
xchg
mov
push
outsl
hlt
dec
or
xor
jl
fcompl
into
push
or
js
lock
das
roll
aas
mov
and
enter
cld
mov
pop
mov
out
mov
dec
xchg
pop
jo
pop
xchg
inc
imul
sub
std
xchg
pop
sub
je
xor
movsb
stc
or
out
push
xchg
push
mov
adc
push
call
and
mov
out
xchg
xchg
fimull
pop
aas
lcall
push
scas
aas
dec
repnz
and
or
dec
stos
testb
cli
cmc
add
dec
orl
orl
sbb
add
lods
popf
mov
push
push
mov
mov
xor
push
dec
xchg
and
mov
sti
lea
movsb
jle
push
inc
shlb
mov
push
push
adc
or
arpl
cmp
cld
push
cmp
ljmp
inc
mov
das
push
aad
xor
jb
push
pop
imul
lcall
in
add
repz
and
xchg
pop
pop
aad
xor
sbb
mov
push
sbb
or
ret
sub
mov
insl
cltd
mull
mov
movsb
lods
int3
out
pop
xor
or
sbb
outsl
scas
xor
and
cmpb
loopne
call
mov
int3
sub
movsl
add
and
mov
rorb
dec
scas
mov
fdivrl
and
sub
adc
mov
push
lahf
or
lret
sahf
test
test
xchg
or
mov
push
cmpsb
out
jnp
inc
dec
add
mov
mov
out
ja
sbb
mov
in
adc
cmpl
stos
xchg
mov
dec
dec
sbbb
mov
and
and
dec
jmp
adc
adc
in
pop
scas
loopne
mov
ja
pop
mov
dec
xor
inc
jbe
in
ds
add
add
cmp
or
jecxz
cmp
aaa
xor
mov
repz
mov
pop
fstcw
in
dec
jne
rolb
sub
ret
notb
dec
jecxz
movsb
pusha
clc
shlb
js
dec
dec
inc
xor
fisttpll
fwait
cld
outsb
mov
mov
mov
scas
xor
add
rcll
jg
adc
shll
js
andb
mov
jnp
dec
or
fnstcw
int3
mov
scas
cli
scas
ds
rcl
das
sar
pop
jae
call
push
cld
xor
sti
cmpsb
fadds
enter
lea
xor
jmp
xor
jmp
lahf
cli
popf
psubb
fwait
out
or
mov
xchg
into
ds
xchg
mov
xor
pusha
dec
pop
ja
leave
sub
xchg
sub
aaa
leave
lcall
or
and
cli
fstpl
ss
cmp
shr
sub
mov
repnz
push
adcl
outsb
ja
adc
add
push
loope
insl
enter
call
fisubl
fsubl
clc
pop
loope
push
pop
test
js
inc
xchg
sar
xchg
out
mov
sbb
jae
out
mov
sbb
pop
lcall
adc
sub
cmp
cmp
loop
das
cmc
add
jmp
jae
icebp
pop
fidivrl
push
cs
push
xorb
mov
push
mov
int3
iret
test
andb
adc
push
int
inc
loop
cli
aad
mov
mov
jns
cmpsb
int
jmp
daa
xor
dec
pop
insb
mov
inc
sub
pop
jl
fnstcw
movsl
mov
and
mov
leave
sub
out
dec
enter
lret
jno
push
out
repz
sub
adc
xchg
daa
in
shlb
mov
and
add
int3
out
cmp
cli
clc
stos
outsl
xor
xor
dec
lods
addr16
lahf
pop
push
call
xor
mov
mov
out
fxch
cwtl
adc
add
in
jo
cwtl
loopne
xor
iret
mov
adc
int
jle
andl
test
sub
dec
mov
movsb
mov
add
cmc
add
xchg
cld
mov
pop
lret
mov
addr16
push
scas
dec
into
out
jmp
insl
lock
and
fcomip
das
stos
es
outsl
pop
in
mov
dec
jp
or
cmpsb
subl
fisttpll
push
test
out
push
lret
pop
dec
int
jo
push
pop
notl
add
mov
push
clc
in
loope
pop
pop
push
addr16
jecxz
push
fdivrs
bound
cmp
cmp
aad
fwait
mov
xchg
cmpsl
cmp
mov
mov
out
mov
mov
cmp
ret
add
nop
test
in
rol
or
xor
popa
ficoml
ss
xchg
jmp
mov
and
cmp
or
inc
lods
rorl
in
add
inc
std
adcl
jp
mov
inc
mov
mov
vfnmsub132ps
sbb
pushf
dec
mov
lret
loopne
adc
inc
xchg
and
pop
cmp
scas
pop
xchg
xchg
cmc
push
pop
and
rcll
jmp
fwait
and
repnz
mov
xchg
jae
ficompl
xchg
mov
std
mov
loop
orl
test
test
inc
push
rorl
aad
inc
cmp
jmp
data16
push
rol
pop
pop
loope
xor
mov
mov
psllw
dec
and
jb
repz
leave
xchg
mov
or
pop
or
xchg
leave
les
movsb
push
adc
into
inc
outsl
popa
or
mov
xor
cmp
scas
xchg
fstpt
push
push
push
pop
xchg
rcll
int
add
xorl
sbb
sub
jmp
popf
lcall
insl
sbb
push
je
cmp
add
sbb
push
push
popf
add
addr16
movsb
jmp
sub
in
repz
push
decl
ja
popf
pop
jns
lret
inc
enter
pop
daa
movsb
daa
jns
adc
cmp
dec
jb
add
mov
outsl
and
jae
lock
sbb
pop
in
test
rcrb
aas
push
mov
cmp
lcall
dec
push
sarb
addb
out
insb
hlt
dec
xchg
cwtl
outsb
jno
stc
pop
xor
stc
lods
inc
stc
mov
push
mov
iret
div
in
pop
mov
cmp
sub
lahf
pusha
fwait
fwait
adc
cli
jmp
push
mov
adc
lahf
frstor
add
adc
aad
sbbb
push
in
fcompl
subl
xor
scas
or
outsb
bound
mov
jns
xchg
iret
daa
in
dec
cmp
aaa
sub
mov
test
ds
lods
push
xchg
in
jge
jp
fistpl
out
pushf
test
repnz
xchg
adc
sbb
inc
xor
movsl
je
ret
fdivs
xlat
lds
adc
add
mov
xchg
jecxz
fsubrs
mov
push
in
jo
dec
dec
xchg
repnz
jne
push
and
mov
xchg
aad
jbe
shll
mov
mov
xor
mov
test
enter
and
xrelease
js
or
movsb
in
sbb
daa
adc
outsb
arpl
and
loope
sti
cld
gs
repnz
cmp
bound
rcll
sar
sar
addr16
jb
xlat
or
pop
cmc
mov
push
mov
and
cwtl
cmp
cmp
dec
pop
mov
xchg
jbe
mov
xchg
adc
or
mov
orl
aad
xor
ljmp
adc
pop
out
js
mov
mov
push
pop
lock
insl
xor
mov
inc
mov
leave
add
andb
mov
ds
div
ret
add
dec
int
test
mov
arpl
push
sbb
xchg
in
push
enter
cmpsl
mov
mov
outsb
lcall
mov
mov
cmp
sub
mov
outsb
cmpsb
jb
icebp
je
leave
mov
neg
ret
ss
jmp
jno
sub
pusha
test
mov
int
sbb
mov
jbe
push
pop
movsl
push
or
sbb
mov
xchg
xor
out
mov
push
and
mov
ret
add
je
push
pop
out
xor
shrl
in
out
test
adc
sbb
scas
xsaveopt
sub
xchg
lods
jnp
mov
xchg
adc
cwtl
cmc
dec
sbb
dec
loope
fdivrl
or
div
roll
or
loop
test
fcoml
and
lods
stos
fwait
jle
inc
aam
arpl
test
dec
pop
frstor
sarb
lock
xor
cmp
jnp
cltd
outsl
mov
call
or
pop
ja
out
les
jnp
xchg
fmuls
cli
clc
dec
jne
jns
push
test
pop
xchg
mov
scas
xchg
and
dec
jp
cmp
jnp
shl
out
push
jns
adc
add
rcrb
push
pusha
insl
ljmp
mov
mov
pop
movsb
notb
jmp
xchg
out
jecxz
outsl
int
jns
mov
pop
dec
sub
push
adc
mov
pop
in
push
sub
sbb
clc
pushf
xchg
mov
jge
scas
adc
jmp
dec
div
jb
and
sub
nop
stos
push
data16
jae
nop
sub
add
xor
and
test
xchg
mov
aam
cmc
jle
xchg
stos
repnz
fcomps
adc
add
dec
lods
jmp
lods
mov
arpl
cltd
sbb
sub
xorl
movsl
mov
push
lods
bound
rorl
testl
cmp
test
sub
fcomps
rorb
pop
pop
sahf
inc
xchg
push
cmc
push
ss
or
stos
call
inc
imul
pushf
mov
xchg
inc
mov
ss
sbb
xchg
fs
lds
jns
or
mov
mov
xchg
xchg
das
subb
gs
jno
fdivrs
mov
cmp
loop
or
popf
movsl
stos
loopne
or
mov
mov
lret
pop
lock
lret
lret
and
pop
rcrb
push
add
nop
repnz
or
test
fdivs
add
xlat
and
mov
aaa
fisubl
inc
jbe
and
out
xchg
or
dec
out
cwtl
into
xchg
cli
les
loopne
cwtl
insb
pop
adc
xlat
pop
jae
mov
jo
jns
mov
repnz
arpl
inc
fldt
xchg
call
inc
call
add
ret
jae
loopne
sbb
cmc
sarb
and
ret
jle
lds
adc
xchg
test
xchg
push
push
sbb
cli
nop
mov
dec
cmp
jle
mov
xor
and
cmp
jl
mov
jae
fsubl
jmp
add
mov
shll
add
xor
mov
pop
sti
push
pop
cmpsl
lods
lods
imul
dec
adc
fbstp
arpl
jb
mov
jo
fisubrs
sub
iret
cltd
lock
xor
pop
fstl
iret
sbb
std
into
andl
iret
xor
xlat
repz
nop
mov
sahf
dec
mov
das
aas
pop
mov
pop
insl
mov
imul
lret
addr16
fdiv
stos
rcrl
gs
push
mov
and
popa
dec
mov
or
adc
loopne
cli
xorb
es
mov
push
mov
movb
lcall
mov
repnz
and
outsb
mov
and
pop
negl
stos
sbb
push
mov
add
daa
faddl
sub
mov
push
aaa
mov
dec
rcrl
sub
jg
pop
shll
cli
sbb
xchg
test
cmp
dec
xor
xor
inc
stc
pop
jnp
inc
pop
cmp
repz
lock
repnz
ljmp
pushf
aam
fnstsw
jecxz
push
bound
push
add
jge
pop
xchg
out
cmp
or
aad
add
outsl
and
add
mov
inc
addr16
jle
ret
mov
jge
sbb
sbb
popa
pop
add
dec
jo
pop
or
adc
cmp
push
adc
inc
mov
mov
fcmovb
cmpsl
push
jge
add
mov
and
pushf
js
in
lret
cmc
inc
es
ja
std
repnz
inc
mov
fsubs
cmp
scas
out
pop
pop
cmp
cmp
inc
xor
repz
xor
je
pusha
adc
push
mov
je
fnstsw
movsb
xchg
fcmove
xor
pop
or
dec
push
dec
mov
inc
loop
xor
jno
addr16
xchg
ss
adc
jg
js
enter
addr16
les
cmpb
sub
pop
stc
sti
cmpl
mov
xor
mov
push
pop
mov
mov
scas
fsts
les
leave
shrb
test
sti
out
scas
and
dec
and
aad
in
mov
xchg
pusha
daa
lret
dec
leave
mov
pop
int3
push
inc
jnp
mov
mov
add
mov
sarb
cmpl
insl
sbb
sbb
pop
add
rcrb
and
cli
ss
inc
inc
sbb
push
add
out
mov
xchg
sti
clc
popf
or
loopne
mov
imul
push
movsl
mov
insb
xor
imul
lret
mov
dec
push
jbe
popf
push
lret
add
dec
test
mov
test
and
cmp
sub
shll
xchg
js
jae
movb
pushf
sub
aam
add
jb
sbb
xor
repz
inc
sub
sub
inc
cmp
js
dec
lahf
jmp
xor
out
add
inc
pusha
cli
mov
push
es
hlt
cmp
inc
popa
cmp
dec
imul
daa
js
inc
dec
in
mov
jg
inc
jl
lods
in
cmp
ljmp
mov
mov
mov
jo
bound
xchg
outsb
stc
loop
paddw
jne
pushf
movsb
sub
sbb
xor
mov
xlat
aas
or
xchg
punpckhbw
lea
cmp
cmp
enter
repnz
daa
movsb
add
cmp
aas
or
mov
in
out
out
push
sti
dec
rcrb
sub
xor
mov
adc
mov
mov
fwait
and
xchg
jns,pt
repnz
or
fldcw
jb
stos
lcall
xchg
lock
jne
mov
cmp
fucom
jl
mov
neg
mov
adc
xchg
dec
jnp
pop
insl
mov
or
aad
fcomps
test
xor
jmp
sub
aaa
xchg
inc
xor
adc
sub
cmc
test
push
pushf
inc
cmp
xor
fcmovnu
mulb
outsl
or
and
cmp
push
jmp
lods
imul
xchg
jl
sarl
mov
xchg
fcmovnb
sub
jg
adc
repz
mov
out
les
mov
mov
adc
rolb
add
mov
mov
pusha
mov
ja
out
pop
scas
out
popa
add
mov
jae
faddl
mov
and
push
repnz
iret
push
mov
mov
jecxz
sub
jl
jno
lcall
in
mov
stos
std
sahf
cld
xor
and
push
jns
xor
sub
lcall
mov
repnz
xchg
xchg
jne
mov
das
push
scas
jl
inc
dec
sub
cltd
jns
subl
cmc
push
mov
mov
iret
lock
pop
jae
dec
adc
mov
jb
test
loopne
jp
imul
xchg
sti
mov
ret
aaa
add
xorb
shrl
mov
push
adc
adc
dec
push
std
outsb
mov
add
fwait
sbb
jbe
and
xchg
iret
adc
int3
mov
xorl
test
mov
and
xor
ss
pop
and
int
jbe
lds
mov
mov
push
mov
repnz
dec
fbld
fsubs
mov
jmp
fists
jb
fldt
mov
push
pop
mov
fldcw
xor
ds
dec
sbb
fcmovnbe
add
push
fisubs
cli
std
call
mov
lret
mov
pop
cld
fistpl
lcall
insl
inc
dec
fmull
icebp
mov
xor
int
fcompl
or
jb
sti
cwtl
dec
insl
cwtl
inc
fisttpl
xchg
rolb
adc
xor
jnp
aam
roll
call
mov
mov
divb
int
jbe
repnz
rcll
sbb
add
mov
add
xchg
adc
push
xor
cmp
and
pop
mov
ror
sarl
imul
dec
scas
xor
push
push
jg
fs
mov
insl
pushf
jmp
mov
dec
xchg
push
inc
adc
js
repz
add
cmp
and
in
ljmp
sbb
xchg
pcmpeqw
jp
je
lock
jle
jae
lcall
aaa
xchg
mov
es
mov
jge
sub
pop
test
mov
ret
scas
inc
repnz
sub
fisubs
inc
pop
idivl
adc
call
in
xchg
loop
mov
leave
or
std
pushl
xchg
adc
mov
inc
jl
cmp
ficoml
cwtl
insl
dec
mov
lds
xchg
xor
test
testl
ja
ret
mov
mov
adc
xacquire
js
ss
push
int3
incb
xor
std
ret
hlt
jl
or
fidivrl
ret
test
pop
out
sbb
xor
fsts
xchg
das
mov
jns
adc
insb
sbb
cmp
mov
cwtl
xor
add
out
pop
cmp
dec
in
test
cmp
cwtl
lea
inc
lret
inc
sbb
loop
in
or
add
sbb
roll
cmp
subb
fwait
sbb
jae
shrl
cmp
adc
mov
ret
or
call
addb
cld
dec
mov
inc
mov
mov
sbb
es
ja
loope
stos
push
movsb
inc
mov
scas
dec
jns
sub
cmp
pcmpgtd
in
ds
mov
jmp
leave
xor
xor
dec
hlt
cld
sub
xchg
nop
fs
xchg
mov
dec
pushf
in
mov
mov
jo
xor
inc
int
jb
sub
in
sub
scas
daa
inc
js
xchg
loop
fldenv
mov
fnstenv
pusha
aad
leave
fcoml
int
push
sub
add
inc
and
arpl
inc
pop
mov
jnp
jbe
push
mov
shlb
jmp
dec
out
or
test
ret
xchg
mov
dec
or
int
lea
popa
addr16
test
xchg
loopne
mov
sbb
cmpsb
jo
fists
pop
insl
mov
fistl
insl
mov
fmuls
or
inc
aam
jno
inc
fldt
xchg
xlat
and
cs
fst
sbb
adc
shll
or
push
adc
lods
loopne
xor
xchg
mov
jg
fs
pop
dec
outsb
ds
sub
xchg
nop
aas
lret
setle
xchg
cmp
mov
mov
lcall
fwait
addb
jle
dec
adc
scas
adc
je
je
and
mov
movsl
cltd
pop
lea
or
xor
xchg
fdivrs
xchg
dec
jecxz
sbb
sbb
rorb
mov
pop
jnp
stos
push
jge
add
jge
dec
xchg
inc
jns
pushf
mov
ret
lods
push
jecxz
int3
push
xor
scas
xchg
stos
aad
cwtl
xchg
mov
mov
add
test
cmp
push
fistpll
cmpsl
mov
out
out
mov
pop
or
sarb
inc
xchg
fs
mov
and
adc
sbb
adc
sarb
cltd
nop
sahf
stc
std
and
into
nop
mov
pop
fwait
or
jge
jnp
push
or
and
push
scas
aam
cmp
cmc
sahf
mov
in
fmuls
dec
shlb
icebp
add
push
mov
or
pop
je
call
adc
scas
push
sub
xchg
pop
and
mov
pop
int3
and
das
inc
repz
push
xchg
js
dec
imull
mov
jmp
divl
inc
mov
inc
shlb
xor
arpl
mov
enter
push
jns
jl
add
push
mov
popa
cmp
les
ljmp
pop
lds
mov
pop
jae
imulb
pop
inc
adc
push
jmp
sub
mov
inc
jo
cld
sub
jl
movsb
outsl
mov
dec
pop
gs
dec
loope
fdivs
mov
mov
sbbb
xchg
roll
and
inc
push
leave
cvtdq2ps
outsb
push
jecxz
jmp
mov
ja
fwait
lret
adc
in
mov
and
cmp
ret
fisubrs
dec
inc
in
loopne
pushf
loop
stos
adc
push
pop
sub
xchg
push
ja
inc
push
lods
mov
test
movsb
in
or
popa
mov
dec
loope
and
xor
lock
mov
push
mov
je
ret
cmp
or
test
icebp
sbb
mov
lret
or
pop
in
and
js
sub
cli
and
add
aad
bsf
fs
pop
add
adc
ljmp
xor
mov
and
fsubl
orb
into
jo
push
adc
lahf
in
pop
xor
mov
dec
push
xchg
dec
adc
insl
xor
cmpsl
jo
dec
outsl
sahf
loope
imul
lahf
lcall
add
imul
cmp
call
cmp
stc
rorb
ret
sbb
inc
in
dec
push
ret
nop
add
jl
dec
clc
pushf
mov
dec
add
xor
inc
adc
mov
pop
lds
cs
xchg
sub
testl
lea
ss
ja
cli
dec
popf
roll
ret
fwait
sbb
xor
in
ret
and
ficoml
stc
xor
jmp
xchg
dec
je
sub
adc
je
jmp
sub
xchg
push
inc
loope
push
pop
push
hlt
sbbb
add
dec
insb
daa
xor
mov
fbstp
idivb
int
jae
lods
pop
loop
mov
movsb
xchg
aas
scas
mov
and
inc
cmpsl
dec
std
dec
dec
mov
mov
ret
dec
lcall
sbb
xchg
dec
fwait
and
roll
cli
or
add
mov
test
sbb
bound
je
bound
or
dec
in
int3
xchg
pushf
add
dec
in
bnd
adc
and
dec
adc
orl
push
ja
jns
sarl
push
inc
sbbl
outsb
imul
xor
dec
inc
in
jo
rorb
sti
movsb
mov
fcomip
sub
jae
xor
push
xchg
lcall
push
test
sub
leave
call
rolb
mov
jecxz
adc
jnp
pop
lcall
adc
mov
mul
push
scas
addr16
sbb
ja
and
mov
sub
in
push
jns
mov
sub
dec
fwait
jnp
sti
ficomps
cmp
xchg
push
pop
ret
int3
outsb
adc
jne
loopne
out
push
filds
arpl
dec
xor
mov
adc
movsb
mov
cwtl
gs
imul
cmpsl
fistl
dec
popa
sub
into
hlt
adc
testb
fwait
xchg
cltd
pusha
mov
ja
cmp
out
data16
inc
adc
cmp
ja
cwtl
js
sub
nop
arpl
mov
xchg
cmp
mov
lock
sahf
push
mov
push
or
iret
cmc
nopl
inc
cld
out
push
jle
call
dec
sub
sub
pop
fwait
aad
nop
add
lea
lret
pushf
and
mov
mov
xchg
sarl
iret
in
jg
push
cmp
fildl
imul
mov
mov
in
rorb
aam
or
push
arpl
mov
inc
lret
flds
adc
mov
adc
adc
stc
stos
lock
pusha
jbe
jne
outsl
jle
add
pop
inc
mov
repz
ror
xchg
fidivrs
ja
dec
xchg
xchg
jae
aaa
add
adc
test
fldl
daa
loopne
pop
cmpsb
fs
adc
insl
xchg
daa
ljmp
xchg
mov
fistps
pop
jp
jb
ret
push
stos
cmp
push
mov
mov
pop
xchg
push
loop
sub
mov
or
addr16
xchg
xorl
pop
mov
dec
cmp
les
and
sub
loop
xor
ret
or
pusha
or
rclb
jmp
shlb
xchg
sti
ds
loop
xor
push
dec
mov
jbe
mov
or
cmp
bound
frstor
icebp
loopne
cmp
push
repnz
pop
fistl
std
dec
loope
jmp
loop
pop
ss
rclb
push
add
enter
into
sub
adc
cmp
and
rolb
or
loopne
mov
cmpsb
in
mov
pop
xor
sbb
push
lcall
notb
loope
mov
push
xchg
sub
lods
adc
mov
sub
fsubrl
add
or
es
pop
ljmp
sbb
clc
pop
mov
push
cmc
xor
xchg
inc
ss
movsb
mov
clc
mov
andb
scas
pusha
enter
add
out
lock
and
add
mov
mov
popf
insl
scas
or
jns
adc
shlb
ljmp
cwtl
jns
lock
xchg
fadds
ficoms
in
ljmp
add
and
or
aaa
sub
push
psubw
mov
mov
pop
adc
inc
mov
imul
ficoml
js
xor
into
fdivrl
shrl
inc
push
dec
mov
aas
and
sbb
add
cmp
sub
push
ret
or
cmp
outsl
loopne
shr
fst
fwait
mov
xor
dec
add
push
mov
or
jae
mov
cltd
daa
hlt
iret
shlb
loop
test
faddl
jl
sub
je
cmp
pop
ret
mov
jns
dec
adc
xor
arpl
mov
xchg
fimull
push
icebp
je
js
mov
icebp
shrl
inc
inc
fmull
movsb
int3
int3
xadd
or
lock
fidivl
jns
xor
xchg
jns
into
jb
xor
movsb
xorl
or
cmp
outsl
xchg
jge
pop
test
push
dec
incl
add
dec
xchg
insb
xchg
mov
jns
pop
xchg
cmpsl
jb
mov
aaa
arpl
cmp
sbb
fimull
adcb
cmp
mov
shr
and
and
shlb
and
inc
int
cltd
sub
outsl
dec
andl
insb
in
dec
pop
xchg
or
or
aam
sub
gs
adc
xor
cmpsl
adc
push
mov
cs
sbbb
cli
rcl
es
jmp
jecxz
adc
xor
pop
mov
add
push
divl
inc
repz
sbb
mov
filds
mov
inc
pop
pop
inc
push
push
rcll
dec
inc
fs
lret
jl
mov
aas
mov
ljmp
lret
mov
jne
mov
cs
mov
lret
lea
std
call
or
subb
xor
sub
xchg
test
lock
ret
fists
fsubrl
addb
push
mov
or
push
push
fdivs
mov
in
cmp
mov
into
icebp
or
push
int3
std
rcrb
xor
xor
mov
gs
add
fistps
lods
inc
fdivrp
xor
pop
inc
je
mov
subb
push
and
push
sbb
adc
jl
push
popa
cmpsb
rcll
xor
fildll
pop
lods
cs
cmp
orl
jno
test
dec
fimuls
movsb
outsb
out
sub
adcb
push
insb
lcall
int
aam
adc
fsub
sub
icebp
jle
daa
mov
sbb
ja
in
sbb
sub
gs
or
pop
push
mov
pusha
lahf
outsb
lds
inc
jg
mov
jne
cmp
iret
test
cmp
mov
adc
jmp
fdivl
pop
inc
xor
push
pop
push
test
pop
push
cmp
shrl
or
mov
lahf
leave
out
sub
rcrb
sarl
sub
rcll
lock
and
fidivl
or
jle
xchg
mov
std
xor
cmpsb
mov
add
scas
scas
add
mov
jl
mov
mov
pop
mov
push
push
jmp
mull
popa
sbb
or
inc
aam
mov
nop
pop
outsb
lcall
xchg
inc
jg
pop
sarb
lcall
jnp
adc
rol
cmpsl
cwtl
je
inc
std
mov
dec
imul
push
lock
lcall
imul
push
pusha
lret
or
jae
gs
test
xor
push
inc
clc
inc
sbb
mov
icebp
in
dec
push
pushf
aas
adc
adc
into
out
jo
sahf
test
jb
xchg
loope
leave
cld
add
jecxz
movsl
into
jecxz
cmpsl
addl
std
lcall
scas
mov
pop
lods
adc
shlb
mov
mov
xor
or
pop
hlt
xchg
or
arpl
mov
addr16
notb
negb
adc
aas
cs
mov
mov
push
xor
mov
fidivs
dec
adc
mov
jmp
cltd
mov
dec
xchg
adc
aad
adc
cmpsb
or
call
mov
scas
mov
outsl
orl
test
loop
cld
push
adc
fsubs
ss
addl
sub
mov
cmp
jecxz
adc
es
rcl
pop
push
in
ds
jp
movsl
push
imul
mov
xchg
outsb
out
lahf
fisubrl
xchg
xor
dec
adc
cmpb
sub
fsubrs
xchg
out
mov
adc
fildll
imul
and
in
jge
jp
dec
mov
push
and
xor
xchg
pop
lret
cmp
ret
mov
repnz
pop
sub
pusha
cmp
bound
cmp
jge
adc
shll
mov
inc
out
int3
push
data16
xchg
sub
add
push
dec
push
pushf
lock
sbbl
jmp
or
in
xor
das
jmp
jp
mov
icebp
xchg
in
cld
jae
xchg
and
insl
stc
sbb
fisttpll
push
lods
imull
mov
mov
subl
and
jge
or
wbinvd
pop
mov
int
cmp
adc
xor
int3
xchg
and
mov
fs
fldl2e
sbb
add
xor
loope
pop
stos
push
xor
push
mov
fcmovnbe
lahf
mov
ljmp
adc
xor
ljmp
jp
dec
je
fildll
pop
andl
cltd
xchg
sub
cmp
fcomps
aaa
pushf
js
rcrl
add
ret
enter
mov
imul
ja
jae
ja
push
mov
clc
and
popf
sub
lret
addl
mov
xor
and
dec
div
test
bnd
push
xor
pop
add
in
cmp
pop
repnz
popa
inc
aas
xchg
mov
add
mov
lahf
insl
cmp
jle
and
cmc
mov
adc
cwtl
mov
xlat
lcall
insb
shl
jo
sbb
sbb
test
dec
loopne
dec
mov
addl
sub
xchg
imul
xchg
push
pop
into
push
popf
inc
jno
outsl
test
cmpb
pushf
or
insb
mov
pop
pop
daa
push
dec
fsubl
pop
xor
jne
adc
push
loope
test
sub
dec
cmp
pop
popa
mov
push
push
cwtl
das
fmul
push
inc
andl
clc
xchg
inc
fistps
dec
xor
add
es
cmp
ljmp
and
add
xchg
and
push
mov
or
jge
xor
inc
xchg
loopne
orl
or
std
fcoml
cmp
stc
cmp
ret
inc
imul
adc
cwtl
movl
xor
jmp
sbb
jnp
push
stos
lret
loopne
in
sbb
lea
popfw
jo
and
jo
aam
mov
xor
and
ret
and
test
nop
adc
cltd
in
stc
in
das
xchg
mov
outsb
ret
xor
loop
lret
dec
jecxz
inc
lds
icebp
add
in
in
testl
pop
pop
push
pop
or
xor
push
or
subb
outsb
jecxz
repz
pushf
sti
push
jl
dec
pushf
xchg
xor
xlat
mov
jnp
inc
xchg
test
xchg
jb
ja
xorb
lods
std
or
xchg
lret
add
test
and
int3
call
stos
mov
lcall
leave
inc
loope
xor
fdivp
adc
mov
xchg
sti
je
push
fistpll
pop
and
sbb
inc
popf
cmpsl
imul
pop
mov
sti
mov
dec
adc
out
adc
mov
jns
push
mov
jge
inc
cmp
enter
jg
dec
jb
jbe
sbb
push
jge
jl
mov
fmuls
dec
fbstp
adc
inc
or
jmp
mov
movsb
cmp
and
pop
mov
mov
stc
adc
add
hlt
mov
pop
daa
popa
inc
out
ds
push
stc
jb
sbb
rorl
cmp
mov
push
into
fisubl
cld
pop
call
out
or
jno
xchg
stc
jecxz
push
push
cld
shrb
jp
inc
scas
mov
pop
lods
add
adc
enter
xchg
imul
xchg
in
push
insl
jo
movsl
add
enter
fs
pop
push
lock
inc
inc
mov
notb
add
inc
xchg
push
fs
add
lea
jg
sti
iret
out
cmc
lret
ret
pop
dec
mov
mov
mov
mov
loope
rolb
inc
mov
xchg
cltd
in
popf
leave
pop
int3
in
les
pop
mov
pop
add
mov
cltd
and
jecxz
xchg
daa
sbb
dec
in
or
jp
mov
lods
jl
sub
pop
cs
outsb
nop
daa
mov
jne
arpl
lods
cmpsl
sbb
pushf
xor
mov
adc
sti
cld
lods
leave
js
sbb
cmpsb
xchg
push
mov
xchg
cld
dec
pop
mov
mov
jle
xor
mov
and
mov
repnz
stc
stos
roll
jmp
bound
cli
scas
sbb
mov
jne
ss
rcrl
dec
lea
aad
mov
js
ret
daa
lahf
push
icebp
ss
push
jl
pop
fld
repnz
jle
fwait
xchg
inc
int3
mov
enter
add
sbb
and
subb
scas
lcall
xchg
mov
sub
mov
dec
sub
jns
ret
je
push
and
add
adc
dec
push
push
cmc
xchg
shrl
mov
and
pop
mov
jae
cmp
and
mov
and
lahf
cmp
push
xchg
sarl
ds
or
pop
into
mov
mov
rcll
stos
push
sub
aaa
ret
repz
into
and
inc
popf
leave
loop
jle
and
call
dec
push
mov
jmp
pop
stos
dec
bound
sbb
fcoms
popa
and
sub
xor
push
mov
mov
cmp
push
lcall
xchg
pop
pop
mov
movsb
cmp
push
pop
mov
add
mov
aaa
stos
push
lods
pop
push
sbb
out
sub
adc
les
stos
xor
dec
mov
leave
jle
outsb
mov
shll
push
cmpsb
jmp
xlat
sbbb
xchg
pusha
imul
xlat
pop
push
arpl
mov
push
and
shlb
pop
add
sbb
inc
cltd
jle
out
sbb
aaa
fs
idivb
fwait
std
jmp
out
pop
mov
cmp
sbb
movsb
rcrb
push
jo
std
lahf
faddl
fisubrs
dec
dec
repz
and
jmp
dec
add
xlat
lahf
push
pop
insl
sbb
das
outsb
or
sub
add
inc
frstor
mov
jb
pop
jg
fwait
dec
push
mov
xor
les
clc
pop
es
mov
inc
mov
nop
shrb
fstl
fimull
sahf
outsl
mov
jmp
jb
loope
aaa
nop
push
cmc
add
cmp
mov
jne
std
mov
push
push
push
cmp
mov
aas
shrl
add
and
loopne
xor
push
adc
mov
js
shll
fwait
mov
sahf
rclb
in
lret
sbb
add
mov
pusha
push
test
mov
popf
sahf
push
push
mov
sbb
dec
ds
xchg
cmp
push
aaa
xchg
jp
push
mov
loopne
xchg
mov
mov
xor
lods
xor
jns
cwtl
xor
leave
xchg
test
jb
pop
and
xchg
mov
repnz
clc
lods
in
test
mov
jg
shl
out
push
adc
adc
cwtl
xchg
pop
andb
sub
and
sbb
test
sub
lret
out
fsubl
inc
out
push
adc
jnp,pt
data16
imul
lea
scas
nop
outsl
or
and
ss
hlt
mull
sbb
or
lock
rclb
insl
gs
and
out
lods
imul
lods
aad
shll
pop
cmpsl
adc
into
cmp
cmp
imul
int3
aad
cld
bound
ffreep
pop
xchg
adc
jge
inc
xchg
inc
fisubs
or
mov
pop
jno
push
push
push
addr16
xor
sub
pusha
adc
mov
jmp
daa
inc
push
js
mov
popf
mov
push
and
data16
mov
push
jp
push
ja
and
pop
out
mov
xchg
fwait
push
test
push
leave
or
xlat
sbb
dec
xchg
inc
aas
test
addr16
pop
sub
inc
sbb
fdivrl
dec
push
stos
xchg
aam
ss
repz
mov
adc
fistl
dec
adc
shl
mov
mov
inc
lret
das
pop
xchg
jo
pusha
mov
or
bound
jl
divb
cmp
jecxz
cli
scas
or
mov
sbb
inc
cwtl
je
sub
mov
jp
flds
sbb
sbb
ds
loope
in
mov
cmpsl
outsl
pop
adc
int
sub
xchg
adc
xchg
inc
sbb
into
xor
mov
lods
jno
pop
leave
out
inc
hlt
sub
mov
in
enter
inc
leave
pop
mov
or
inc
sub
mov
dec
addb
fbld
sub
or
jne
movsl
andb
adc
in
xchg
mov
insb
and
dec
lock
sbb
jecxz
sub
push
jmp
push
cwtl
xchg
cmpsl
aam
xchg
pop
dec
lock
punpckhbw
push
sbb
sbbl
shlb
enter
inc
push
leave
enter
xchg
dec
pop
mov
xorb
out
add
rorb
lcall
mov
push
in
gs
je
xor
insb
sahf
xor
xchg
lock
fsub
shl
inc
xor
fistpl
add
inc
sbb
mov
sahf
lret
pusha
dec
adc
rolb
movsl
mov
mov
adc
inc
or
loop
int3
scas
pop
in
inc
fs
jg
int
js
je
jmp
std
test
xchg
daa
push
or
mov
cmp
orl
and
dec
xor
adc
test
mov
les
sbbl
dec
fisttpll
cmp
or
adcl
xor
mov
or
add
pop
jecxz
popf
xor
push
lock
sub
jecxz
ret
cmp
and
fldl
mov
ja
std
jge
and
mov
push
or
lods
pusha
sub
lret
in
or
cwtl
push
mov
xchg
jmp
dec
pushf
cli
jns
shrb
scas
xchg
pop
inc
mov
jmp
clc
std
cmp
mov
leave
and
test
in
mov
pop
repz
sub
cli
mov
lea
pusha
cmc
movsl
mov
or
pop
insl
cld
mov
sbb
dec
das
fidivs
inc
andl
lret
ss
mov
popf
or
jmp
fbstp
sti
inc
mov
into
mov
movb
mov
aad
dec
inc
mul
cmpsb
rcr
pop
in
xchg
xchg
mov
push
aam
pusha
adc
jge
pop
int3
jae
inc
mov
push
leave
jg
stos
out
sti
sub
inc
pop
mov
jae,pn
loopne
pop
pop
pop
add
adc
lret
pop
ret
pop
popf
lods
bound
sbb
mov
mov
xchg
push
sbb
pushf
jl
js
mov
loop
cmp
mov
jp
in
ljmp
adc
out
mov
movsb
fstpt
mov
xchg
add
hlt
fsubrs
xchg
push
ss
sub
pop
jb
push
popa
std
mov
ficoms
jo
enter
ret
push
sbb
test
cmp
dec
add
not
in
stc
cs
shr
mov
xchg
imul
in
je,pn
adc
push
and
jae
dec
sub
cltd
in
scas
dec
xchg
mov
fildl
mov
dec
subb
lock
sbb
cltd
jne
xchg
sub
or
shrl
inc
mov
sub
and
push
xor
cwtl
divps
pushf
mov
fists
mov
mov
rorl
arpl
addl
insb
push
fwait
sbb
fsubp
test
pop
push
or
and
aad
adc
mov
es
lret
add
ljmp
aad
imul
pop
jo
sbb
push
or
xchg
out
sbb
mov
push
cmp
dec
adc
mov
lret
popf
dec
push
pop
xchg
sub
mov
jl
mov
repnz
out
iret
fidivrs
test
fsts
inc
mov
dec
dec
addr16
fists
sub
adc
jmp
mov
cmp
or
cltd
in
aad
sub
xor
push
aas
xchg
push
push
add
sub
push
push
roll
push
and
adc
lods
dec
movsl
adc
pop
shrl
pop
jp
sub
jb
jp
dec
insb
push
stc
push
mov
cld
loopne
popf
push
mov
jp
aaa
orb
jp
or
enter
push
inc
sahf
mov
add
call
shlb
outsb
gs
sbb
scas
fwait
add
cmp
mov
add
int
cli
sub
mov
adc
jecxz
mov
xor
inc
push
and
out
fadds
mov
xor
mov
xchg
xor
in
repnz
mov
adc
jge
rcll
sbb
add
clc
push
sbb
ficomps
xchg
mov
cmc
jecxz
or
aaa
jno
jbe
xchg
in
fistpl
aam
and
lods
cmpsb
dec
sbb
sti
adc
popf
and
adcl
jne
jae
fs
insl
scas
xchg
das
nop
or
sub
or
cmp
iret
mov
rclb
or
push
mov
hlt
xchg
dec
dec
and
mov
and
stc
fmull
addl
movups
daa
mov
js
dec
xchg
xor
mov
imul
push
in
jbe
ljmp
cmp
out
ds
scas
aam
inc
dec
push
jbe
inc
addr16
sub
arpl
add
movsb
cmp
dec
dec
sbb
sarb
in
pop
icebp
add
hlt
dec
or
in
lahf
sbb
mov
stos
subb
repnz
mov
sub
xchg
mov
cmpb
lcall
sub
dec
fistpl
xor
or
je
pop
scas
sahf
stc
div
loop
dec
cltd
cltd
jne
xchg
rclb
sub
and
into
lock
stc
test
and
insl
icebp
push
je
xor
xor
lods
aas
int
adc
insl
jae
stos
and
fldcw
out
and
mov
andl
aam
lock
loop
jp
bndldx
dec
aad
and
ret
mov
or
add
movsl
xchg
cmpb
test
or
mov
adc
je
push
xlat
aad
push
dec
cmpsl
pop
jl
mov
test
xchg
je
mov
or
sbb
in
sbb
shll
lea
insl
mov
adc
mov
sbb
or
sti
mov
cmp
xlat
and
jle
mov
push
daa
mov
dec
aam
cs
idivb
imulb
loopne
cmc
xchg
push
inc
movsb
jl
jp
xchg
xor
sbb
test
push
lods
fnstsw
inc
leave
and
stos
xlat
repz
or
andl
leave
stc
or
add
aad
and
rol
dec
pop
pusha
stc
stos
ret
sub
ss
cmpl
mov
add
or
pop
xor
jmp
xchg
mov
pop
xchg
decl
in
lods
stc
imul
and
mov
add
cmpsb
and
pop
sbb
out
test
cli
push
and
js
aas
lods
fwait
mov
insb
mov
dec
jne
jle
ret
fwait
jnp
xchg
testl
rol
xchg
push
xlat
push
fadds
mov
shlb
je
push
inc
ja
add
mov
ret
mov
and
mov
mov
sti
cmp
cmpsb
daa
mov
cmpsb
jnp
or
nop
clc
ss
add
mov
pop
adc
and
enter
mov
mov
adc
pop
push
idivl
sbb
vunpcklps
test
cmp
addr16
jbe
dec
xchg
popf
int
mov
fstpt
mulb
and
iret
lahf
shrb
clc
pop
std
pop
xlat
notl
scas
jmp
daa
adc
pop
roll
push
fxch
lock
fdivr
outsb
pop
xchg
jmp
mov
sub
cli
ret
jae
loopne
roll
nop
mov
mov
jno
es
loop
rclb
ds
in
lods
xor
push
add
and
jno
add
mov
cmpsb
and
xor
dec
lahf
dec
repz
push
push
in
ljmp
fsubr
mov
sbb
pop
cmp
fldcw
aas
outsb
gs
jge
sbb
sub
jl
or
loope
je
pop
cmpsl
outsl
stos
jecxz
pop
mov
push
out
mov
enter
cmp
xor
loopne
push
push
icebp
dec
jo
jne
shrb
mov
lds
dec
sbb
and
inc
loopne
pop
testb
lcall
aaa
sbb
pop
jp
xor
lds
movsl
das
xor
mov
xchg
xchg
gs
xchg
xchg
cmc
test
xchg
adc
inc
inc
push
mov
cmp
hlt
test
jb
movsb
movsb
or
cmpsl
sub
push
push
adc
jnp
jbe
mov
into
mov
fs
fidivs
fwait
xor
imul
fwait
adc
cmpsb
fistpll
popl
jmp
popa
xchg
adc
xchg
lcall
insl
mov
lds
sti
es
enter
mov
loop
xor
rcll
pushf
mov
insb
inc
arpl
lcall
mov
jle
inc
adc
or
out
xchg
movsl
pop
xchg
sbb
lret
ja
jmp
repnz
add
mov
mov
stos
cmp
psrlw
orl
arpl
movsl
popa
insb
fistl
mov
test
loop
dec
mov
lock
jbe
xor
pop
xchg
sbb
out
xor
dec
into
lods
sub
sbb
enter
mov
loope
or
test
add
adc
push
inc
jl
es
arpl
cs
into
mov
inc
ficoms
push
cmp
sti
rcrb
iret
mov
lret
add
cmpsb
xorb
mov
xchg
fsubr
aad
pop
arpl
lods
cld
xchg
and
enter
and
lret
repnz
mov
popa
addr16
mov
adc
sahf
sbb
dec
dec
fdivrl
aam
mov
xor
inc
leave
or
lahf
aam
pop
jae,pn
fsubr
jne
xchg
xor
in
push
popa
insb
inc
xor
and
sub
rol
loopne
pop
dec
sbb
jge,pn
push
iret
sti
loopne
scas
aaa
add
and
fsubrl
pop
dec
jl
test
push
mov
inc
push
bound
pop
push
testb
dec
arpl
pop
imul
xor
add
fistps
xchg
mov
daa
cltd
inc
addb
std
imul
loopne
outsl
nop
mov
or
loope
loope
xchg
repnz
cmpsb
or
out
pop
mov
adcb
lret
add
lods
mov
stos
rolb
cld
popf
cmp
pop
and
push
ss
pop
lock
push
cmp
mov
sbb
in
inc
loopne
dec
es
je
mov
pop
pop
jns
out
movsl
xchg
dec
add
cmp
push
xor
aaa
push
or
mov
cs
ss
minps
outsl
add
js
aaa
push
pop
cmp
dec
lods
mov
push
fnstenv
jns
xor
push
pop
sub
push
cmpsl
in
or
cli
shrl
xchg
clc
pop
jle
aas
jo
mov
sub
test
add
push
subl
jmp
mov
inc
xchg
shlb
lea
adc
mov
aad
push
fs
cmpsb
xor
sbb
push
push
ret
xchg
bound
cmp
fs
nop
jecxz
popl
push
in
outsl
cmc
in
xor
push
xorl
jbe
jbe
nop
jl
sti
mov
xchg
mov
vpsubusw
stc
pop
mov
cmp
iret
pop
sub
pop
in
aas
xor
pop
inc
pop
loop
fildll
add
jb
jg
cmp
inc
add
inc
repnz
addr16
xchg
mov
xchg
scas
outsb
cmc
xchg
enter
push
mov
scas
cmc
cmp
pop
mov
pop
lahf
add
push
je
fisubs
add
dec
jne
jl
pop
pop
iret
fsts
jg
js
mov
lcall
mov
loopne
out
lahf
pop
mov
lods
movsb
add
mov
cmp
mov
add
fistpll
mov
fisttps
out
pop
cld
scas
addr16
lahf
scas
push
popf
push
ja
jnp
addr16
out
sbb
push
jnp
mov
dec
call
mov
ss
int
jg
loope
in
mov
or
imul
sbb
dec
call
or
gs
or
int3
dec
xchg
call
pop
test
jns
xchg
jnp
mov
jae
dec
mov
xor
ret
or
call
lods
jno
mov
mov
mov
inc
loopne
out
test
push
int3
jb
sub
pop
orb
mov
dec
mov
pop
loop
mov
xchg
cmp
pop
mov
cmp
scas
fidivrl
andl
sub
or
pop
aam
xchg
pop
imul
adc
imul
ret
jle
xchg
ja
jl
gs
popa
fst
dec
imul
lcall
pop
test
mov
pushf
negb
test
repz
mov
insl
cmp
jns
pop
scas
xchg
in
xchg
repnz
pushf
push
push
mov
cld
sub
shrb
pushf
mul
pusha
push
rorb
adc
stos
pop
ja
les
add
lods
and
cmc
jle
lock
and
fwait
call
imul
mov
mov
jno
cmp
call
ljmp
cmp
jmp
into
add
sbb
push
push
icebp
lahf
repnz
add
pop
push
fcoms
sbb
xchg
sarb
daa
cld
jns
in
mul
mov
push
jle
push
rorb
in
test
loopne
shlb
fs
loopne
and
sti
jmp
mov
inc
sub
sbb
jns
push
sub
das
lret
gs
jmp
or
xchg
sub
adc
pusha
xchg
or
pop
ret
cmc
addr16
loope
push
inc
repz
mov
fsub
jle
daa
inc
cmc
enter
idiv
push
sub
aad
jb
daa
pop
aad
shll
lods
fs
repnz
pop
add
out
jle
frstpm(287
subb
jb
outsl
fbstp
sub
int
push
movsb
pop
cmpsl
pop
lret
adc
shrl
push
mov
enter
sub
or
mov
inc
dec
inc
imull
adc
jb
and
dec
xchg
xor
test
int3
insl
xor
ret
ret
push
aas
inc
imul
out
jbe
inc
mov
xor
sub
pop
loope
pop
gs
adc
lods
lods
in
adc
mov
xchg
incb
stos
lock
into
and
gs
clc
push
mov
mov
imul
sbb
arpl
das
jne
icebp
mov
mov
adc
pop
lods
jmp
sbb
cmp
mov
aad
mov
sbb
or
adc
fsub
test
and
and
clc
push
dec
ss
addb
cli
into
daa
pop
xchg
push
lret
dec
dec
test
cmp
cmc
nop
out
jb
xor
out
lcall
mov
xchg
jne
push
cmp
fwait
sub
cmp
scas
mov
mov
out
xor
lret
pop
cmpl
adc
aaa
cmpsl
cmc
adc
jle
stos
sbb
stos
in
pushl
aad
ret
or
lret
xchg
sub
adcb
xchg
les
cmpsl
xchg
sbb
daa
dec
aaa
push
lret
jae
mov
mov
shlb
stos
mov
cmp
dec
xor
cltd
aas
jno
inc
iret
lods
cmpsb
xor
jg
inc
ljmp
add
pop
out
push
jle
xor
xor
or
nop
push
cltd
adc
test
or
daa
jmp
xor
xchg
ljmp
xor
mov
jnp
stos
adc
xor
mov
jp
lret
jns
push
jae
inc
pop
lahf
push
jae
mov
insl
clc
jp
bound
cmpsb
gs
adc
or
fidivs
sbbl
idivl
cmp
jg
add
or
dec
mov
xchg
loope
dec
and
push
das
ss
hlt
push
pop
cmp
flds
fdivrs
cmc
jge
outsb
je
pop
repnz
mov
stc
cwtl
aaa
aas
imul
movsb
movsl
or
or
push
cmp
mov
sub
jp
pushf
lret
xor
dec
cmp
aad
cmpsb
mov
adc
xor
in
ss
fwait
mov
xor
fcomps
out
pop
push
inc
cli
add
fiadds
sub
sub
pop
cs
add
push
inc
cmp
in
cwtl
cmc
and
lret
sbb
cmp
fidivrs
mov
jo
ficompl
rorl
dec
cmpsb
jmp
lcall
inc
or
mov
and
and
fdivl
pop
js
mov
jnp
lcall
dec
and
repnz
loop
push
ljmp
fwait
push
sbb
mov
mov
push
leave
insl
lock
lock
sbbb
push
sti
movsl
insl
rclb
pusha
andl
push
popl
ja
cmpsb
push
cmp
cmp
test
aam
imul
es
cli
sbb
pushf
lcall
loope
dec
push
andb
orb
shr
inc
and
sahf
cmpl
lock
xor
clc
sub
sub
cmp
jns
scas
inc
mov
inc
adc
and
sbb
pop
dec
test
and
pusha
iret
leave
fmull
or
and
bound
jp
add
xchg
pop
stos
mov
aam
push
fwait
mov
add
loop
int
pop
dec
arpl
adc
add
or
stos
inc
adc
outsl
dec
test
jmp
or
lcall
popa
xor
inc
or
push
jl
addr16
in
mov
xchg
lret
mov
cmp
jmp
lfs
or
cmpsb
insb
divb
mov
sbbl
inc
dec
inc
add
push
aas
sbb
fidivrl
or
xlat
adc
jb
cli
jne
xor
adc
daa
fldt
pusha
shlb
add
dec
push
push
pushf
pop
mov
cltd
ds
jecxz
xor
test
movsb
or
insb
xchg
push
push
sbb
sbb
add
lahf
dec
lock
push
cmp
inc
pop
xchg
mov
clc
stos
push
jl
orl
inc
xlat
imul
and
xlat
mov
fstp
push
and
fmuls
dec
push
ds
lret
loopne
fiaddl
jae
or
cmp
addr16
loop
push
mov
pop
jmp
jb
sbb
xchg
repz
shl
stos
or
movsb
sbb
enter
xor
leave
pop
addl
xchg
cmpsb
int
xor
mov
lock
sub
ret
and
sbb
xor
jne
fstl
add
add
arpl
dec
call
popa
into
decl
fwait
push
xchg
mov
aam
call
stos
mov
mov
rcll
and
cmp
jecxz
xchg
cmp
aaa
dec
lahf
std
dec
dec
xor
or
mov
repnz
xor
cwtl
sahf
ljmp
lret
pop
sbb
xchg
mov
mov
shll
fcomps
in
das
iret
inc
push
mov
xor
aas
aas
out
lds
aas
push
aam
test
rcrl
pop
fcompl
nop
or
loope
or
xor
ljmp
data16
inc
mov
in
push
mov
mov
jae
aam
nop
and
xchg
push
and
jbe
loop
jo
test
ret
mov
mov
jge
popf
inc
ret
dec
jbe
cld
add
popa
test
adc
movsl
push
xorb
orl
add
jmp
xchg
xchg
jae
dec
sub
lcall
in
adc
je
out
gs
test
or
dec
inc
loop
mov
icebp
jecxz
fwait
or
or
and
cmp
adc
filds
add
out
aaa
dec
sti
pushf
jmp
jne
fdivrs
adc
mov
pop
repnz
ds
rorb
scas
mov
lds
movsl
fdivrs
arpl
insb
xor
xchg
cmp
out
mov
and
movl
lods
inc
lcall
or
int3
repz
call
jle
mov
ret
mov
loope
stos
add
push
push
pop
push
movl
push
mov
aas
xchg
daa
cmp
shrl
imul
mov
rclb
test
out
outsb
popf
sub
mov
inc
popf
push
test
sbb
xchg
dec
lcall
or
fwait
rcl
movsb
inc
xor
jp
cli
rcl
dec
jl
sub
cmp
or
add
data16
mov
jo
xchg
mov
sbb
xrelease
jnp
sub
dec
fs
aas
test
jbe
sbb
enter
rcrb
mov
sarb
inc
sbb
mov
sbb
leave
mov
or
push
mov
shll
push
or
test
push
pop
and
push
outsb
scas
jge
mov
push
and
mov
cltd
cmp
xor
xlat
imul
mov
loop
xor
add
ret
jno
push
push
xchg
seta
mov
lcall
lret
pop
icebp
fstps
jecxz
stos
or
pop
jge
mov
aaa
inc
fmull
shlb
test
and
pop
stos
add
test
loop
out
lret
adc
lea
add
inc
arpl
xlat
aas
ds
pop
add
imul
push
bound
repnz
insl
push
ret
jecxz
ds
in
adc
push
xchg
rcrl
loopne
add
lock
push
testl
jp
lea
sub
push
add
inc
leave
xchg
iret
push
xchg
adcb
call
jnp
jae
push
or
jle
jecxz
mov
xchg
cltd
and
gs
inc
push
out
stc
bound
je
lea
in
jecxz
xor
lcall
ss
mov
outsl
outsl
inc
push
xchg
scas
jecxz
cmc
or
xor
addr16
out
mov
mov
test
mov
adc
cmp
pop
ret
leave
incl
imul
pushf
pop
mov
pop
mov
ss
or
call
bound
cmp
jge
xchg
insb
adc
mov
and
cmpsb
ljmp
xor
aam
in
int3
call
pop
fsts
in
mov
aas
aaa
mov
cwtl
mov
or
sub
fbld
addr16
and
adc
mov
sub
movsl
cltd
adc
fs
inc
in
xor
cmp
mov
push
das
mov
dec
push
adc
push
jge
mov
fldt
mov
aas
dec
pop
mov
mov
sbb
xlat
cld
sub
cmp
loope
dec
daa
and
jle
jg
push
aam
out
inc
push
mov
sbb
popa
mov
out
pop
sbb
jmp
xor
jp
pop
pop
arpl
mov
daa
inc
idiv
xor
adc
fildl
mov
mov
inc
mov
mulb
cmpsb
and
int3
ljmp
hlt
loop
mov
jmp
testl
in
inc
ds
fnsave
dec
clc
xchg
pusha
pop
test
mov
popf
sub
push
or
xor
jns
adc
sbb
fwait
lcall
fsubs
add
ror
xor
or
lea
ja
sub
lea
cltd
loop
lds
call
cmp
enter
ret
out
push
mov
and
dec
lds
fcompl
lods
dec
xor
data16
fmull
popf
test
add
decb
xchg
dec
movsl
pushf
dec
ss
mov
sbb
inc
mov
out
mov
cmpsl
xor
insl
mov
push
imul
testl
jnp
jmp
nop
sarw
fld
adc
ret
rcl
cmp
jl
and
inc
loop
mov
mov
push
in
xor
stos
dec
jae
pop
movsb
clc
or
inc
mov
fldl
scas
mov
je
mov
jns
fwait
aad
and
xchg
inc
call
vmovmskpd
mov
push
mov
or
jno
mov
rol
hlt
jnp
adc
jbe
or
push
int
cs
mov
bound
pop
mov
push
mov
push
inc
cmp
jnp
jmp
movsb
imul
loop
ljmp
movsb
push
repnz
inc
lods
push
and
aad
js
add
enter
ss
sbb
fwait
push
jne
dec
nop
cmp
pop
pop
fs
out
xor
icebp
fisubrs
idivb
xchg
aas
or
fstl
daa
xchg
ret
inc
jmp
cmpsl
int
lods
xchg
push
push
mov
adc
stc
cmpsl
out
out
mov
js
or
ret
ds
xchg
jge
jecxz
mov
dec
nop
out
test
mov
ds
sbb
scas
mov
cld
loopne
inc
xchg
loopne
int3
sub
mov
into
sub
lock
ret
pop
mov
lds
lods
enter
test
xchg
push
xchg
inc
xchg
leave
js
jnp
repnz
dec
xor
xchg
pop
jg
mov
ja
and
lahf
call
dec
or
pop
fwait
or
popa
pop
mov
add
test
cli
addr16
rcll
xchg
dec
outsb
pusha
mov
cmp
sub
dec
aam
mov
ret
mov
iret
bound
sahf
mov
lock
ja
mov
movb
lds
mov
pop
jno
jecxz
xchg
aad
cmp
push
jl
jae
aad
sbb
mov
dec
int
dec
cmp
popf
sti
mov
movsl
scas
rolb
out
pop
idivb
das
imul
mov
mov
pushf
pop
rorb
jbe
mov
es
and
sub
jne
cli
xor
mov
push
rcrb
stos
sub
inc
mov
in
add
mov
ja
lods
jmp
or
xchg
xchg
jge
cwtl
jbe
sarb
fnstsw
lea
adc
mov
cwtl
popf
mov
cmpb
push
outsl
pop
mov
pop
xchg
cwtl
mov
js
loopne
cmp
shll
cmp
adc
mov
outsb
sbb
bswap
push
adc
fildll
out
fwait
dec
jbe
lcall
pop
std
cmp
out
pusha
out
mov
adc
jno
in
pusha
push
cmp
mov
in
xchg
fnstsw
rcll
inc
outsb
sbb
hlt
mov
movsl
and
cltd
shr
push
dec
dec
mov
inc
sbb
test
push
cmp
mov
mov
xchg
cmp
jae
mov
shll
jae
and
int
and
or
or
and
aam
sub
xchg
bound
dec
sbb
loop
in
or
pop
shrb
jae
mov
jns
add
jnp
negb
daa
jmp
fcoml
xlat
fmuls
inc
rcl
and
mov
rcl
jae
cld
mov
test
dec
aad
mov
gs
cmc
push
sbb
aas
pop
and
stos
iret
pop
shlb
insb
and
cmp
pop
sbb
pop
fucomip
mov
mov
jae
sahf
adc
or
mov
xor
push
jae
test
push
xor
jnp
jae
les
ds
xchg
push
cwtl
inc
and
mov
inc
xlat
sarl
sbb
aad
push
push
dec
pop
out
fwait
and
cmp
out
cld
mov
mov
lret
adc
cmp
je
daa
sbb
dec
aad
iret
mov
out
loope
imul
or
adcl
sbb
and
sbb
push
xor
adc
dec
xchg
inc
sub
fistps
cmp
aas
in
das
bound
pop
or
imul
push
pop
int3
push
dec
mov
rep
cmp
xchg
mov
cs
mov
add
inc
lcall
repz
push
std
shlb
cmp
cmp
les
xchg
les
xlat
test
fdivrl
in
loopne
aad
es
cmp
mov
sti
sarb
cmp
andl
in
testl
mov
fldcw
add
xorb
xchg
aaa
arpl
mov
inc
popw
sarb
xor
int3
insl
leave
scas
mov
mov
jne
xor
xor
or
jecxz
test
lock
test
inc
jb
push
push
add
mov
xchg
inc
in
push
adc
add
and
test
out
jno
mov
xchg
sub
jno
xchg
scas
shll
rcrl
xor
mov
test
pushf
adc
push
add
lcall
or
sub
scas
fwait
push
outsl
pop
pop
iret
cmpsl
pop
xor
mov
shl
ficompl
fstpt
movl
dec
push
mov
push
mov
popf
ds
or
lds
shrl
or
aad
mov
data16
and
in
push
sub
or
adc
cmpsl
cmpsl
xor
jg
push
cmp
dec
xchg
xchg
or
push
scas
pop
out
fadds
lock
pop
and
cltd
lret
imulb
pop
mov
add
mov
adc
pop
frstor
add
xor
jecxz
movsl
or
add
addr16
inc
xchg
out
jno
inc
mov
andb
fisubl
mov
lcall
mov
mov
lds
negb
cmc
jmp
stc
pop
sbb
fs
pop
cmc
loope
lods
fdiv
push
rol
out
je
loope
rclb
pop
sub
sub
inc
loopne
iret
pop
jmp
loop
fisubrs
cmp
pop
fstl
ja
pop
je
pop
std
dec
jle
jne
fxch
push
call
mov
push
sbb
test
jbe
movsl
pushf
push
push
leave
daa
pop
pop
test
out
les
movsb
std
and
cmp
and
sahf
in
ss
lods
rcll
cwtl
fs
shrb
push
mov
sbb
mov
xchg
nop
fadds
loope
shl
aas
xor
ds
movsb
push
jmp
loop
sbb
push
mov
cmp
lods
sti
test
cmc
pop
xchg
ljmp
xchg
int
je
enter
inc
pop
mov
fwait
call
in
rcrl
and
cld
jae
pushf
mov
leave
bound
repnz
and
fidivs
xor
insb
inc
jecxz
dec
push
jecxz
sbb
sub
mov
pop
add
out
clc
leave
or
pushf
add
cmp
lret
rolb
xchg
lods
fsts
jnp
fwait
aad
mov
dec
pop
pop
xchg
lock
loop
lods
dec
daa
xor
or
mov
mov
mov
add
dec
ficomps
hlt
pop
sub
in
mov
sub
gs
inc
pop
pop
hlt
xor
int
sarl
mov
jp
js
imul
xchg
mov
mov
mov
xchg
dec
inc
mov
xchg
ret
notb
icebp
cli
imul
and
sub
call
mov
push
adc
je
or
jmp
out
les
mov
mov
mov
nop
xlat
cmp
jmp
push
loopne
mov
mov
pop
mov
scas
cmc
mov
lcall
test
jge
xchg
and
jecxz
mov
sub
cmpsl
loop
pop
scas
xor
mov
push
aad
hlt
mov
adc
std
int3
addr16
push
sbb
push
cmp
and
rorb
lcall
mov
push
xchg
xchg
sub
mov
and
sahf
mov
or
mov
rorb
add
adc
jno
in
loope
add
or
jbe
clc
add
push
inc
and
inc
loop
mov
lds
jl
js
sub
testl
mov
inc
aam
pop
scas
cmp
mov
into
aam
in
add
insl
dec
pusha
icebp
push
sub
lea
pop
mov
pop
je
sbb
jp
adc
jecxz
rolb
out
and
inc
enter
add
enter
pop
push
sub
inc
loop
enter
iret
xor
mov
adc
cmp
outsl
ret
jl
push
test
and
pop
jg
jl
add
sub
js
xchg
gs
xchg
push
pop
push
pop
push
mov
scas
pop
movb
jae
movsl
out
scas
jmp
jmp
and
test
sahf
fcoms
ret
iret
fdivrs
mov
adc
fisttpl
jne
movsb
and
xchg
cld
jae
mov
movsl
mov
or
mov
add
push
mov
std
fidivl
push
sub
movl
push
mov
dec
fwait
inc
push
adc
pusha
xchg
dec
pop
mov
pop
mov
adc
sti
lcall
pop
stos
ja
jb
xor
mov
mov
roll
cmc
in
clc
movsl
xlat
in
sub
mov
mov
cmpsl
push
jecxz
xor
jmp
mov
xchg
inc
gs
rolb
bound
incl
neg
xor
das
pop
je
call
sbb
xor
sar
dec
jp
and
xchg
mov
inc
adc
jle
and
sub
jns
cmp
fdivrs
mov
sub
dec
stc
ficompl
xchg
add
pop
fnstsw
xorb
push
push
inc
adc
nop
pop
pop
pop
push
xchg
inc
outsl
lahf
js
mov
jge
xlat
std
lock
sub
mov
aaa
dec
and
dec
inc
and
popa
into
daa
inc
mov
in
push
or
fbld
or
movsb
lods
out
ss
les
pcmpgtb
jae
imul
imul
jl
test
or
mov
mov
mov
push
data16
loop
pop
jnp
stc
sub
popw
dec
repnz
cmp
add
lods
aam
xchg
in
mov
test
push
scas
in
outsl
pop
out
cli
cltd
mov
xchg
adc
fimuls
mov
stos
cmp
insb
ficompl
jne
lock
push
mov
out
pop
pop
mov
sub
push
out
push
push
dec
mov
xchg
sarb
xchg
dec
test
ss
into
lahf
out
add
cmp
lcall
loopne
or
lahf
lea
aad
leave
mov
insb
inc
pop
push
fwait
jne
lret
push
push
addl
loop
push
push
repz
cmp
stos
or
xchg
pop
adc
xchg
cli
xlat
mov
in
lcall
and
cmp
dec
popf
popf
and
xchg
xchg
xor
scas
xchg
lcall
pop
cld
or
adc
mov
sahf
dec
mov
ficoml
out
fwait
cmc
repz
mov
jne
enter
sub
movsb
hlt
jne
int
dec
insl
test
xchg
inc
jmp
cmp
je
addb
pop
das
inc
and
push
xor
cmp
cmpsl
shl
outsb
push
cmp
sahf
jle
outsl
mov
and
test
pop
dec
test
push
adc
scas
cmc
movsl
into
and
pop
popa
or
cmp
sbb
ss
push
into
xchg
jge
jp
popa
in
lret
adcb
in
mov
xchg
bound
dec
pop
mov
pop
mov
add
in
and
gs
sbb
mov
mov
jmp
pop
xchg
dec
inc
mov
rcrl
jae
add
inc
mov
pop
dec
popf
gs
ljmp
mov
fcompl
into
in
sbbl
repnz
jns
inc
fdivrs
mov
jle
cmpsl
push
jle
in
sub
xchg
sbb
mov
or
jne
mov
insl
cmp
xor
cld
cmp
mov
fstpl
iret
sbb
addr16
fwait
pop
test
lds
push
fwait
mov
adc
out
sbb
adcl
fdivrs
rcl
jno
in
xchg
mov
jns
pop
xor
fdivrl
mov
mov
jo
pmullw
js
jmp
test
sbb
cmp
adc
in
mov
roll
mov
and
and
bnd
sub
outsb
cmp
cltd
mov
xlat
aas
adcl
push
imul
rcr
lret
out
jp
or
pop
push
dec
xchg
lods
mov
pushf
test
fdivr
push
leave
aas
pop
dec
test
rcll
and
sub
fiadds
or
nop
in
mov
clc
cmp
add
ud2
sub
push
mov
push
mov
mov
inc
jb
inc
sub
inc
es
mov
movsl
jmp
inc
or
fcmovne
cld
mov
cmp
iret
cmp
adc
insl
daa
jbe
and
inc
fistl
jmp
test
gs
imul
nop
mov
clc
mov
repz
ret
xchg
push
jecxz
pop
cmpsl
mov
mov
outsb
or
mov
push
mov
xorb
xor
add
testl
dec
dec
mov
inc
sub
lret
mov
cmpl
add
add
sub
mov
inc
sub
adc
pop
scas
imul
pop
out
aaa
inc
int3
sub
xor
lret
add
subl
es
ficoml
dec
mov
and
cltd
sahf
cmp
fs
sub
dec
in
inc
xor
les
push
and
ja
je,pt
cs
lcall
xchg
in
pop
lret
in
jp
pop
mov
inc
fisubl
andl
popf
out
push
jne
divb
rcl
cmp
stc
aas
sahf
loope
aas
ret
and
sbb
aas
jecxz
cmp
xchg
cmp
test
dec
and
pop
in
pop
test
mov
bound
into
popf
lahf
sarl
pop
xor
leave
or
sbb
loope
push
pushf
adc
sub
fdivrs
push
es
and
insb
arpl
inc
aad
std
jae
add
bound
mov
add
xchg
cwtl
int
inc
sti
dec
aad
popa
mov
push
ret
scas
neg
les
fisubs
into
out
pop
mov
xor
push
jns
movsl
pop
dec
or
pcmpeqw
test
sub
lcall
mov
or
movsl
xchg
push
loopne
mov
push
push
lret
filds
daa
mov
jno
insl
sbb
fs
aad
mov
push
lods
stos
mov
mov
lret
sbbl
es
je
jge
es
je
testl
fildl
cld
les
repnz
mov
sub
fmuls
adc
mull
pop
in
inc
mov
push
adc
mov
mov
into
cmp
loopne
mov
mov
or
jae
mov
mov
test
pop
std
pop
repz
pop
mov
mov
mov
mov
lods
pop
cwtl
in
jns
inc
test
and
fldcw
push
pushf
out
ss
mov
cmc
cmp
fsubl
xor
mov
inc
xor
push
daa
push
or
stos
or
mov
stos
push
or
insl
xchg
or
cmpsl
pop
data16
cmp
daa
loope
shlb
mov
sarb
sbb
jg
mov
sub
mov
cmp
scas
addr16
sar
cmp
pop
push
in
gs
push
xor
mov
fmull
or
add
into
ds
aaa
lretw
jns
es
or
push
push
lret
into
pop
push
sub
push
cmp
push
add
hlt
adc
imul
inc
dec
popf
mov
mul
mov
arpl
test
sbb
mov
aam
lret
xlat
outsl
lret
ds
adc
in
mov
outsb
or
fildll
shrl
sbb
or
mov
jns
fs
fidivrs
xchg
loope
xor
cmc
pop
mov
gs
scas
push
jmp
lret
rcl
sub
adc
mov
mov
cs
sbb
arpl
sbb
dec
mov
sub
sub
cmpsb
lods
inc
xchg
cmp
imul
mov
sub
cltd
adc
adc
dec
pop
outsb
bound
mov
mov
push
mov
out
rcr
cmp
add
mov
call
and
stos
cmp
leave
leave
add
add
int
push
bound
mov
in
xchg
jmp
popf
cmc
push
aaa
push
adc
xor
or
lods
dec
sbb
ret
shrb
mov
lods
in
pop
fs
sub
shll
add
cmp
call
movsl
cmp
cmp
mov
push
mov
sub
add
sbb
pop
pop
stc
pop
lock
sub
mov
aaa
adc
cmp
ret
jg
jmp
scas
fistpl
sbb
in
or
sub
sbb
inc
cltd
jmp
movsl
sbb
test
adc
mov
adc
repnz
sti
ret
dec
lret
inc
push
adc
xor
fisttpl
addr16
xchg
pop
sub
into
add
dec
mov
adc
icebp
aam
sti
lea
jge
cmpl
adc
or
inc
movsl
adc
rolb
xor
dec
xchg
mov
outsb
push
adc
rcl
xchg
fs
dec
sahf
mov
std
add
adc
mov
sbb
adc
and
lods
fidivl
cmp
sub
inc
rcr
mov
sbb
cwtl
aaa
imul
xchg
mov
sbb
dec
hlt
mov
sbb
orb
jl
cmp
jae
inc
cs
add
jne
cmp
cli
inc
das
addr16
and
xor
jg
mov
outsl
fnsave
stos
insl
jl
dec
movsl
and
adc
lods
add
add
lret
adc
add
cmc
lret
add
xchg
loope
lods
scas
push
stos
mov
orl
cmp
inc
cmpsl
adc
cmp
push
ljmp
hlt
movsb
push
mov
mov
push
popa
sub
cli
push
sub
insl
or
xor
xor
lahf
in
adc
sbb
das
jns
jmp
push
ret
xchg
mov
aas
adc
mov
repz
lret
jmp
jg
popa
in
fwait
mov
std
fwait
cmp
roll
xlat
hlt
pusha
scas
ss
mov
adc
xor
pop
inc
mov
cld
ds
push
mov
adc
or
imul
dec
in
mov
or
out
not
push
leave
cmp
and
test
pop
mov
sbb
std
adc
mov
jg
mov
xorb
test
jno
and
clc
xchg
mov
loopne
adc
mov
xchg
loop
movsl
cltd
inc
inc
jge
cmc
xchg
mov
sbb
daa
out
imul
add
ds
fstp
out
or
repnz
dec
or
js
xorb
sbb
in
out
cltd
dec
fnstcw
pop
sub
add
adc
mov
and
add
mov
aad
mulb
pop
jo
mov
sub
adc
push
or
sbb
clc
add
enter
jnp
repz
xchg
icebp
xchg
test
cltd
jg
addr16
mov
inc
bound
push
ljmp
mov
push
mov
testb
dec
cmp
mov
xchg
xor
mov
push
das
test
push
mov
xor
clc
sub
pop
or
in
mov
push
add
xor
or
je
mov
addr16
rolb
aas
xchg
xchg
mov
sahf
adc
int3
aaa
adc
ds
test
push
hlt
pushf
pop
mov
jae
notb
rcrl
data16
push
lcall
flds
cmp
push
push
imul
popa
cwtl
lods
das
mov
and
pop
negb
or
sbb
sti
xchg
aas
pusha
cmpsb
xchg
sbb
jg
sub
push
fst
mov
stos
int3
add
push
in
loopne
insb
mov
fwait
mov
rcl
inc
dec
lock
jnp
mov
adcb
test
movb
dec
dec
enter
push
or
cwtl
mov
jge
mov
xchg
mov
jg
mov
xor
jl
push
mull
dec
iret
or
mov
adc
xchg
faddl
and
rcl
jbe
xchg
aas
lret
mov
mov
bound
es
dec
mov
or
inc
sbb
je
mov
pop
ljmp
or
xchg
int
adc
xrelease
sbb
cltd
dec
pushf
and
pop
jmp
orb
pop
xchg
mov
idivb
inc
dec
xchg
movsl
cs
and
fcmovb
dec
scas
test
dec
int3
cmp
xor
stos
insl
mov
adc
xchg
ljmp
or
adc
add
adc
sbb
out
pusha
subl
cmp
sub
cli
xor
inc
dec
xchg
inc
ljmp
cltd
imul
arpl
aam
adc
add
mov
inc
fadd
inc
sbb
dec
movl
push
jle
stos
rolb
popa
xor
mov
in
loope
xchg
loopne
repz
cmp
arpl
aaa
push
insb
add
ds
cs
push
pop
mov
call
mov
js
mov
lahf
ret
arpl
lds
popf
push
jnp
add
jmp
sub
mov
repnz
sbb
lea
mov
push
inc
cmp
mov
pop
sbb
pop
sti
jp
cmp
enter
and
es
mov
sub
pop
sub
sbb
adc
mov
cs
cmp
movsl
or
push
cmpsb
inc
push
push
and
loopne
pop
lea
xlat
jbe
and
fcomps
dec
xchg
cmp
xchg
jl
mov
mov
jae
nop
shll
rclb
or
or
ret
cs
adc
and
lds
pop
mov
sbb
mov
lods
shlb
adc
enter
jge
cmpl
or
cmp
sti
icebp
das
lods
aam
hlt
cltd
sbb
cmpsb
push
jo
sti
sub
iret
aas
mov
add
stos
add
popa
adc
aam
adc
sub
aaa
push
icebp
add
jge
xchg
push
dec
mov
adc
cmp
shlb
lret
push
pop
lcall
fildll
mov
jne
scas
jo
push
pushf
add
push
lret
ret
fistps
adc
or
orl
rcll
lods
pop
out
stos
jl
sub
scas
cmc
inc
mov
xor
mov
pusha
out
mov
sbb
cmp
dec
icebp
inc
add
xchg
ret
add
push
push
push
xor
nop
mov
test
mov
cltd
inc
cmp
push
push
inc
sbb
or
xor
mov
test
pop
outsb
pop
mul
pop
sarb
loop
stc
shrb
add
mov
scas
push
int3
cwtl
imul
aaa
daa
jp
xor
enter
clc
lahf
popa
shrb
test
in
cltd
movsl
setle
mov
fiadds
mov
shll
lods
mov
jae
arpl
es
push
mov
xchg
shlb
jle
jmp
pusha
xchg
push
daa
scas
add
lcall
jb
mov
cld
loope
shll
popa
sarb
and
push
inc
cmc
jge
movsl
test
roll
xchg
mov
jo
mov
aaa
dec
or
xchg
or
ficomps
das
mov
in
fs
xlat
cmpb
xchg
sbb
xchg
and
vmwrite
push
rclb
cmp
lods
push
in
dec
and
cmp
out
rcll
dec
adc
popa
push
jnp
and
mov
dec
dec
jns
fs
pop
lret
iret
lea
pop
push
addl
push
sub
mov
repz
fpatan
int3
ficoms
int
jl
xor
mov
push
ss
sub
mov
jns
aad
xchg
cld
mov
cmpl
in
loope
aaa
mov
aad
pushf
je
sub
std
push
xchg
push
push
cld
subb
mov
std
xor
mov
add
xor
mov
arpl
ret
sbb
and
or
jl
cmp
cmp
sub
lret
mov
and
jns
lret
inc
jb
repnz
in
andb
fcoml
jmp
sbb
push
mov
scas
or
pop
mov
das
data16
loopne
sub
call
aas
mov
dec
xor
adc
sbb
cld
xchg
mov
pop
mov
or
sbb
sub
lret
fldenv
test
ror
dec
dec
adc
mov
aam
or
jmp
fistpl
inc
push
pop
pop
addr16
insb
and
aas
sbb
adc
cmp
xchg
mov
lret
pop
test
mov
sub
jp
loop
iret
and
sbb
jl
push
lcall
lds
push
inc
sbbb
ficomps
cmp
movsb
add
js
sbb
dec
mov
lret
mov
leave
add
leave
jmp
aas
out
repz
pop
sbb
mov
xor
loop
inc
mov
imul
xchg
orb
and
sbb
ss
cli
fwait
inc
les
jb
lcall
shl
repnz
clc
adc
xor
outsl
mov
mov
add
sbb
and
or
mov
dec
neg
pop
sarl
loopne
cld
cmp
mov
sub
sub
xchg
loopne
cmc
fmull
jmp
push
testl
cmp
loop
aam
mov
jo
cmp
mov
or
loop
in
mov
inc
xor
push
mov
imul
sbb
shlb
call
and
pusha
loope
into
fldenv
inc
xor
loopne
outsb
xor
out
and
mov
adc
imul
in
les
nop
lds
adc
negb
xlat
ss
mov
movlps
ficoml
cmp
mov
xchg
imul
repnz
jae
mov
or
jnp
jmp
mov
adc
roll
out
add
pop
mov
pop
or
push
in
inc
les
push
fistl
mov
les
mov
inc
insl
or
ljmp
arpl
fwait
xchg
inc
cltd
fbstp
movsl
xor
cmpl
jo
inc
loopne
xchg
jb
lahf
or
es
adc
push
jbe
or
aam
and
push
popf
jle
sub
or
xchg
pop
mov
pop
ja
leave
mov
arpl
fcmovnb
xchg
rorb
shrl
mov
shl
or
xchg
pop
je
and
xorl
push
jmp
jg
xor
scas
sbb
lcall
nop
mov
jb
push
lock
and
add
out
sub
das
xchg
dec
repz
dec
mov
mov
hlt
fimull
cmpl
pop
lcall
or
xchg
push
push
outsb
push
pop
jecxz
or
les
mov
sbb
repz
insb
pusha
pusha
rorl
outsl
fldenv
ret
mov
adc
and
sub
enter
shr
js
jl
mov
pop
mov
jecxz
fisttpl
fadd
or
sbb
adc
mov
cld
data16
insb
pusha
and
xor
xchg
jns
pop
cmp
sub
insb
ret
pop
sub
in
jbe
push
daa
pop
mov
mov
repnz
sub
mov
jmp
cltd
cmpsl
shlb
rcrb
lret
lahf
pushl
lret
inc
cmp
add
and
sbb
aam
mov
jge
or
mov
in
adc
sub
adc
fists
fwait
repz
fidivl
mov
dec
inc
lahf
lods
fildl
jmp
xchg
push
inc
sbb
or
lahf
cltd
xor
sbb
into
xchg
fcomi
cld
lds
sbb
sub
dec
fidivs
sub
xchg
sub
int
rolb
cmp
xor
imul
xchg
mov
dec
mov
das
adc
subb
setne
mov
je
add
popf
andl
xchg
pop
lcall
push
push
or
test
cld
shrb
jecxz
ficomps
push
int
repnz
fidivrs
mov
outsb
xlat
mov
inc
jbe,pn
lahf
dec
mov
sub
add
test
mov
mov
jmp
pop
push
test
xchg
inc
cmp
mov
data16
sahf
mov
mov
push
or
rcrl
push
sbb
pop
cmp
dec
ja
push
sahf
adc
test
loopne
sub
add
cwtl
aaa
adc
in
jnp
aad
cwtl
test
xchg
outsl
push
lock
fsubs
lahf
dec
dec
mov
iret
xchg
push
idiv
fistpll
adc
cmp
add
mov
fwait
in
push
je
xchg
jne
out
push
sbb
adc
cmp
push
push
jns
lock
add
ficomps
adc
xchg
sbb
mov
xchg
jmp
dec
inc
jbe
add
fnstcw
sahf
push
enter
sub
inc
in
ret
inc
pop
sub
xor
lods
add
adc
bnd
adc
sbb
push
pop
out
mov
push
xchg
fwait
sti
enter
jno
and
or
mov
mov
das
or
in
or
xchg
insb
test
roll
push
cmp
lcall
adc
out
iret
movsb
cmp
lret
jge
jae
pop
add
icebp
cmc
jno
adc
nop
jno
adc
aad
mov
cmp
push
sub
sbb
and
jge
adcl
ss
insl
push
imul
inc
in
leave
xchg
mov
leave
lcall
dec
fstps
inc
sub
cli
add
lock
cli
je
xor
cmp
push
jle
jge
mov
std
in
mov
pop
or
mov
fisubs
pusha
push
and
sbb
lret
jp
jbe
sub
lahf
add
ljmp
in
or
scas
lret
cmp
mov
or
repz
xchg
xchg
and
xorl
fisubrl
test
adc
mov
jnp
adc
mov
and
inc
push
cmp
push
bnd
out
mov
in
mov
dec
and
xor
mov
mov
sbb
jbe
aam
cmpl
in
mov
jnp
push
js
je
wrmsr
or
sub
mov
outsl
adc
inc
std
add
clc
pop
cmp
cmp
xlat
test
out
adc
idivb
mov
dec
mov
stos
xchg
mov
and
xchg
test
aas
mov
mov
mov
jecxz
xor
inc
mov
mov
ss
movsb
ljmp
sbb
negl
dec
clc
mov
test
aam
mov
fiaddl
dec
out
fs
add
push
stc
pushf
jge
and
mov
inc
out
je
mov
adc
lods
lahf
cld
stos
xchg
add
mov
jns
push
inc
sbb
data16
pop
cwtl
cmpsl
dec
xchg
jl
jns
sbb
rcrb
cmp
dec
sti
addr16
fbld
in
out
xor
mov
clc
push
mov
js
je
sbb
into
jecxz
mov
adc
xchg
lcall
adc
mov
stos
sub
add
sbb
rorb
push
add
cmp
rcrl
or
lahf
std
push
int
push
addr16
mov
dec
push
js
adc
mov
pop
dec
shlb
dec
mov
aaa
jecxz
divb
rolb
or
shl
push
mov
xchg
dec
mov
faddl
or
lret
dec
imull
and
loopne
and
outsl
inc
add
aaa
mov
test
out
mov
in
je
mov
arpl
inc
sbb
test
cmp
mov
out
icebp
or
mov
mov
test
push
jecxz
mov
jge
ror
ljmp
xlat
andl
iret
dec
ss
mov
les
cmp
or
cli
mov
mov
fldl
xchg
mov
adc
aam
mov
jb
aas
sahf
pushf
sub
pusha
adc
shr
sub
sbb
jae
fwait
mov
mov
mov
mov
bound
jbe
jge,pn
mov
lret
cmc
dec
bound
pop
or
scas
dec
fisubs
mov
in
arpl
add
ret
je
jo
sbb
fsubl
xor
xchg
std
in
and
xchg
mov
out
jmp
scas
push
xchg
aad
mov
sar
mov
es
in
xchg
sti
xchg
dec
pushf
sar
repz
repnz
in
push
js
ja
icebp
pusha
out
outsl
cltd
out
inc
enter
lea
mov
shlb
sub
mov
cld
fisubrs
sub
mov
xchg
movsl
out
push
mov
dec
arpl
jmp
stc
into
push
test
inc
xlat
out
rorb
xchg
jnp
xor
mov
insl
sub
sbbb
mov
jmp
or
xor
sbbb
push
inc
scas
pop
mov
add
leave
sbb
fnstenv
dec
fisttps
jp
pop
jecxz
pop
lock
inc
cli
xor
ja
or
mov
add
rcr
gs
and
sarl
mov
dec
add
cmc
jnp
mov
inc
mov
xor
mov
and
fsubs
cmp
loope
push
in
and
aas
sub
test
cmpsl
popa
fst
lock
mov
std
inc
adc
sbb
mov
sti
in
cltd
mov
mov
jbe
int
xor
jg
or
test
ds
subl
xchg
std
loopne
xor
adc
lcall
dec
pop
loop
repnz
pusha
jp
das
mov
inc
cltd
cmp
xor
test
pushf
lea
sbb
in
stos
dec
xor
sbb
into
sahf
leave
jmp
inc
and
decb
jno
push
mov
das
adc
jg
jne
push
out
test
and
mov
pop
mov
loopne
cmpl
sub
shlb
loopne
dec
add
cmp
repnz
mov
fs
mov
in
adc
jl
dec
aam
xchg
fbstp
cmp
test
ja
sub
shl
lret
stc
movsl
jle
mov
into
mov
pop
sahf
dec
inc
push
call
adc
cld
lret
cs
xchg
inc
fsub
push
adc
rorb
daa
in
mov
pop
test
pop
push
cmp
rcr
mov
lret
cmp
sbb
pop
mov
lea
outsb
and
hlt
jne
cmpsb
flds
jl
mov
movsl
push
repnz
xchg
pop
inc
jo
repz
ja
daa
lret
cmpsb
mov
fcmovne
or
inc
loope,pn
dec
rcll
mov
ds
dec
sub
popf
push
aad
mov
pop
out
lods
ds
adc
or
outsl
in
daa
pop
or
mov
ja
mov
inc
xor
nopl
lahf
dec
sbb
les
sbb
xchg
pop
mov
rclb
adc
or
imul
ss
lret
gs
fdivp
push
mov
mov
lret
mov
sub
sub
and
fcmove
ffree
push
test
insb
mov
lods
xor
mov
sbb
test
mov
xchg
and
and
pop
daa
scas
xchg
insl
pop
xor
out
mov
or
frstor
mov
add
push
mov
cmpsb
lcall
xor
rclb
loope
jne
and
adc
aas
out
mov
nop
cmp
cmp
dec
jb
push
adc
jmp
ret
insl
scas
lods
int3
int
mov
cmpl
jo
lods
jb
and
lock
movsb
fs
cmp
cmp
iret
xor
rorl
mov
test
inc
pop
aas
xchg
arpl
insb
dec
cmp
out
test
adc
xor
mov
imul
sub
rcll
pop
enter
mov
adc
movsb
jnp
push
sub
mov
scas
dec
cmp
or
rcl
call
fisubrl
add
cwtl
fwait
xor
pusha
ficompl
enter
adc
jle
fsubs
jmp
je
dec
push
push
pop
addr16
imul
repnz
jl
dec
add
pusha
pop
popf
ss
imul
push
leave
and
push
jbe
sub
and
test
jg
into
fists
imul
test
pop
rcr
cmp
sbb
and
add
pop
lret
lods
lods
unpckhps
stos
inc
and
xchg
mov
jae
sbb
xor
std
aaa
clc
adc
and
push
shrb
inc
jle
mov
cmpsl
xchg
xchg
sbb
inc
inc
cmp
popa
imulb
jmp
lods
add
adc
or
addl
popa
or
xor
stos
in
inc
mov
jae
push
xor
shrl
test
pop
add
mov
and
into
aad
inc
addl
clc
ret
xchg
or
mov
sbb
scas
in
negl
sti
repz
insl
hlt
mov
mov
stos
into
in
mov
enter
movsb
dec
pop
xchg
loope
or
xor
scas
xor
mov
add
imul
xor
loopne
cwtl
mov
repz
cmp
aas
mov
out
jbe
adc
mov
xlat
sub
pop
xor
popa
out
adc
and
pop
add
loop
dec
dec
mov
push
rcll
pusha
es
test
jbe
push
jl
jmp
xor
push
cmp
adc
xchg
jne
arpl
or
cmp
sbb
pop
aam
xorl
push
lods
cld
jb
mov
sbb
push
or
and
mov
call
sub
push
fnstsw
out
cli
push
repz
or
ret
cmp
fisttpll
xor
es
enter
push
call
dec
fst
inc
or
repz
ja
xlat
cli
add
mov
scas
mov
or
je
inc
shlb
cmp
sahf
shll
cmp
movl
das
nop
pop
mov
rcll
add
cmpsb
xor
dec
or
push
loope
xlat
std
addr16
mov
lahf
or
ja
sbb
push
mov
dec
inc
add
cmpsl
sbb
dec
jo
jb
and
and
and
push
push
test
shrl
mov
sarb
das
push
mov
lock
mov
sbb
scas
daa
push
fs
inc
xchg
and
mov
sbb
push
lods
addr16
cmp
aas
cmp
test
mov
stos
popa
jae
in
sbb
jae
movsl
stos
fbstp
jne
cld
stos
iret
pop
insl
pop
jge
xor
outsl
and
and
push
mov
or
dec
inc
stos
insl
fldenv
jbe
and
mov
xor
jbe
xor
aam
xor
sub
in
adc
fld
and
dec
pop
pop
pop
push
push
test
sbb
aaa
inc
xor
add
mov
adc
aas
or
enter
cltd
jl
xlat
out
pop
and
xchg
xchg
arpl
lret
lcall
dec
adc
clc
pop
or
xlat
loop
inc
mov
sarb
das
mov
lods
and
mov
adcl
aas
js
in
and
fwait
scas
push
mov
aaa
aas
fstpl
mov
incl
mov
adc
adc
in
je
fs
dec
pushf
test
jae
mov
cmp
stos
sbb
xor
addr16
movsb
ljmp
sarl
jg
xchg
fwait
adc
push
ljmp
dec
mov
cwtl
dec
popf
fsubrs
in
int
push
scas
adc
das
scas
out
cmp
imul
inc
lock
push
ja
or
or
inc
pop
decl
cld
push
add
mov
mov
sbb
pusha
roll
loope
clc
adc
push
cmpsl
pop
ret
pop
repz
out
mov
or
mov
sub
stc
cmp
xor
rcr
jg
bnd
popa
shrl
push
testl
lods
lret
xchg
inc
or
xor
das
mov
inc
xor
out
and
mov
shlb
cmp
pop
mov
pusha
or
aam
mov
daa
outsl
dec
push
xchg
add
out
jb
jae
inc
pop
sbb
lds
call
fwait
es
iret
pushf
add
jp
inc
push
mov
and
fisttps
fs
push
jp
xor
mov
jo
cmp
lret
inc
push
xor
mov
cmp
sbb
iret
ret
test
das
pop
sub
test
iret
stos
cmp
stc
mov
arpl
pushf
negl
pop
inc
cld
mov
cmpl
fcmovne
add
mov
cmp
aas
add
sbb
int3
inc
pop
pushf
ljmp
sbb
cmp
mov
daa
aas
jle
and
push
dec
out
sbb
sbb
push
mov
test
movsb
sbb
fwait
mov
je,pn
inc
or
mov
repnz
push
test
mov
cmp
out
cs
adc
jb
mov
jg
imul
test
cs
std
xchg
movsl
into
les
ret
sub
imul
and
push
or
cwtl
xchg
push
int3
jns
jb
addr16
mov
aam
pop
and
stos
jns
inc
adc
xchg
cmp
cmp
add
fwait
repz
sub
push
clc
std
sub
mov
in
or
or
dec
lds
or
es
test
mov
arpl
into
sub
sti
jecxz
cmp
adc
std
jmp
jae
sbb
xchg
imul
lock
jb
idivb
inc
andl
ret
adc
xor
xchg
jmp
add
xchg
push
sbb
adc
repnz
lods
sbb
imul
movsl
fisubrl
or
mov
sti
push
cli
in
or
pop
xor
clc
adc
lea
cs
mov
out
rcrb
ror
inc
mov
jecxz
mov
xor
xchg
hlt
hlt
ja
je
ret
adc
push
adc
xor
add
xchg
divl
or
sbb
xchg
cmp
fsts
sub
xchg
popf
sub
ja
mov
andl
push
add
outsb
dec
mov
leave
adc
add
xchg
iret
popf
xor
bound
call
and
cmp
sbb
rcll
xor
push
push
out
cs
arpl
lahf
and
jne
inc
push
movb
xchg
test
outsl
js
int
lea
push
ret
nop
pop
xchg
sub
std
xor
jecxz
fimull
gs
push
cmpsl
sbb
arpl
push
pop
movsl
mov
or
xchg
dec
and
iret
sub
loopne
xor
mov
mov
lods
add
pop
push
es
mov
mov
mov
push
xor
mov
mov
dec
dec
daa
pop
fildll
xchg
and
inc
jl
shll
insb
repnz
into
mov
inc
mov
aam
sub
cmpsl
xor
clc
shll
xchg
aas
out
mov
jne
jle
adc
lds
gs
mov
fisubl
pop
pop
xchg
imul
ret
jl
mov
pop
nop
fwait
xlat
lods
icebp
or
push
xchg
sbb
dec
cmp
sbb
pop
or
pusha
add
add
fmull
pop
sub
mov
insl
add
in
cmpb
xor
push
jbe
repnz
adc
and
jnp
sarl
lcall
push
push
push
sti
inc
idivb
lret
jge
push
ljmp
mov
adcl
repz
cmp
or
and
sub
les
cmpsl
pop
cmp
mov
jge
mov
inc
rorl
cmp
ss
loopne
fdiv
jecxz
push
sbb
cmp
cli
xor
popf
movsl
pop
out
push
pusha
iret
mov
rcrb
les
pop
dec
pop
inc
adc
pop
in
sub
das
shlb
loope
xlat
push
int
mov
mov
mov
lea
adc
inc
or
dec
shrl
and
stc
jge
sbbl
pop
popf
and
lret
movsb
add
cli
pop
fldcw
push
popa
les
sub
add
jp
sbb
mov
outsb
push
sbb
or
pop
push
adc
and
push
pop
jne
cmp
bnd
scas
mov
push
push
int3
mov
iret
add
ror
popf
sarl
mov
repnz
push
add
add
cltd
jns
dec
sub
or
addr16
adc
xchg
sbb
cmp
out
and
jbe
xchg
pop
push
inc
mov
daa
test
xchg
stos
pop
jns
fmuls
ret
xor
insb
and
sub
stos
dec
jo
dec
xchg
movsl
mov
je
push
jg
sub
sbb
pusha
adc
test
icebp
dec
sub
jno
or
test
mov
lret
fsubs
mov
or
ficoml
xchg
jl
mov
mov
js
or
aad
mov
mov
sub
jae
and
lds
pop
arpl
cmp
cmp
or
jno
test
sub
xchg
dec
mov
test
jb
fldt
into
inc
inc
ret
mov
mov
push
pop
push
sbb
pop
cmp
xchg
jbe
and
pop
push
test
in
xchg
jno
std
mov
and
les
add
and
add
xor
out
mov
and
cmp
mov
jmp
insl
rol
dec
sub
pop
xor
xchg
out
inc
inc
les
xchg
subps
push
out
icebp
and
pushf
push
xchg
sub
ret
or
or
mov
mov
lds
lahf
mov
fstps
cmpsl
test
shl
inc
in
mov
fcoml
sub
js
cltd
mov
push
loopne
push
dec
enter
and
mulb
jecxz
aas
push
sub
fdivs
imul
sub
sbb
jg
push
jbe
data16
push
inc
xchg
in
mov
mov
sahf
iret
cmp
outsl
add
xor
andb
pop
ret
popf
push
xchg
jo
push
xchg
clc
mov
mov
jns
fidivs
cltd
divl
jnp
sbb
int3
mov
arpl
cmpb
add
sub
jecxz
decl
xchg
jbe
rcrb
jge
lods
and
fsubrl
and
ja
mov
fwait
inc
jno
xor
loopne
xor
push
pusha
sub
sti
insb
outsb
pop
aas
mov
pop
das
sbb
jle
dec
in
iret
test
jbe
mov
fisubrl
mov
sti
stos
or
cwtl
inc
adc
dec
jo,pn
lds
inc
lods
inc
dec
fimull
mov
pop
aas
xchg
or
fstpt
pop
enter
or
jl
sbb
insb
test
sub
nop
push
dec
push
xchg
movsb
or
das
movsb
test
mov
jae
bound
push
fcoml
in
stc
inc
int3
clc
sub
sub
imul
into
or
pop
loop
inc
int3
ret
testb
push
in
scas
fsubrp
lcall
insb
test
jne
addr16
addr16
mov
add
and
jne
in
inc
jl
pop
ja
add
pop
popf
pop
shl
std
rol
sub
mov
cmp
pop
nop
daa
test
mov
xchg
lcall
scas
lds
jp
add
push
out
xor
or
fdiv
es
push
jl
stc
popa
ljmp
dec
and
add
lods
push
stos
mov
xchg
aad
and
mov
cmovl
flds
in
ret
lcall
loop
andl
in
test
xor
mov
mov
or
stos
cmp
imul
in
es
sbb
push
sub
push
push
and
dec
mov
out
cwtl
pop
aad
fstl
pop
imul
cli
push
insl
mov
xchg
pop
cmp
inc
setno
sbb
fisttpl
dec
movsl
xchg
cmp
cmp
jl
mov
dec
inc
pushf
push
or
xchg
int
adcl
in
inc
das
cwtl
ret
stos
ja
sub
mov
std
pop
sbb
pop
cmp
scas
test
cmpsb
inc
popf
push
xchg
adc
mov
mov
ds
int3
outsb
aas
shlb
hlt
subl
dec
inc
mov
imul
xor
dec
std
clc
movsb
lret
rol
enter
inc
jbe
test
dec
add
mov
scas
movsb
sub
movsb
lods
cmp
jl
jbe
aaa
loope
rorl
mov
cli
pop
push
fwait
mov
inc
ret
imul
into
scas
jecxz
lcall
inc
sub
aas
shll
lds
jl
fstps
add
orl
pop
pop
mov
int3
mov
sbb
xor
mov
mov
push
pop
dec
into
testb
adc
ret
rcrb
or
cs
std
add
push
mov
inc
sbb
dec
adc
jle
out
jge,pn
mov
mov
push
ret
xor
cld
xorb
jmp
imul
int
or
jecxz
dec
imul
in
ja
add
in
gs
out
mov
jbe
push
sahf
push
cli
push
push
sub
cmp
movb
lock
or
out
and
ret
gs
jno
fs
js
mov
fwait
jmp
inc
and
dec
adc
fs
mov
mov
adc
mov
jge
pop
cltd
mov
add
in
mov
cmpsb
mov
lock
fucomp
jnp
jno
lahf
test
jecxz
cwtl
xor
push
or
dec
cmp
sbb
adcb
sbb
and
mov
sti
in
out
push
rol
xchg
hlt
mov
cltd
iret
out
ret
mov
pusha
fstps
jbe
jb
add
lret
insl
xorb
int
rcr
jle
jecxz
int
xchg
lods
loop
dec
in
inc
inc
push
aas
pop
std
mov
dec
sub
add
rorl
jp
pop
push
add
mov
xchg
xlat
adc
jbe
pop
xchg
mov
pop
jns
dec
cld
mov
rolb
dec
mov
jle
in
test
js
jnp
mov
testb
enter
fs
clc
or
sub
pop
dec
ss
pushl
pop
jecxz
add
xchg
sbb
popf
mov
pop
or
das
jecxz
dec
test
and
lds
clc
out
gs
dec
and
lods
stc
xchg
out
fwait
repnz
ljmp
ss
or
xchg
int
jge
pop
in
pop
xchg
cs
out
sub
pop
scas
sar
push
sbb
add
mov
add
leave
inc
fnstcw
adc
in
inc
cwtl
and
and
das
and
stc
inc
dec
inc
xor
ret
clc
fsubr
mov
lods
mov
jg
ja
addr16
mov
mov
mov
jge
fs
xor
add
lcall
or
lods
dec
hlt
in
mov
adc
xchg
jg
inc
rcrb
pop
push
js
fwait
call
pop
sahf
xchg
sbb
cmp
and
call
push
sbb
ret
pop
test
adc
jmp
pop
lods
add
adc
fs
inc
inc
mov
adc
in
unpckhps
test
mov
lods
or
jne
and
jae
stc
jp
mov
xchg
lods
inc
ret
loop
or
aaa
jae
popa
rolb
adc
pop
shl
xorb
cmp
data16
data16
mov
sbb
dec
adc
out
sahf
sub
sbb
sub
clc
cwtl
inc
jb
pop
jl
movsb
inc
mov
js
addl
mov
lahf
add
ret
aas
call
mov
pop
push
jb
repz
cwtl
cld
iret
mov
call
jne
stc
push
mov
jae
ss
inc
test
gs
mov
hlt
push
out
mov
test
scas
jb
lods
arpl
fimull
jno
jmp
mov
insb
inc
mov
jb
xlat
scas
cmp
ds
fnstenv
sub
mov
inc
adc
cmp
xchg
pusha
sub
jge
cli
scas
xor
push
pop
shll
mov
cmpsb
push
mov
push
imul
out
nop
out
mov
aam
add
or
sbb
cmp
push
call
mov
xchg
arpl
shlb
insl
mov
dec
and
dec
jns
es
inc
cltd
push
fdivrs
mov
cmovno
dec
icebp
jns
adc
add
xchg
dec
fcomip
dec
dec
xlat
add
fcomps
in
sbb
movb
pop
inc
xlat
jmp
adc
xor
jg
mov
xchg
aad
ljmp
jle
rcll
scas
js
int
lea
mov
mov
mov
xchg
shrb
pop
sbb
ja
xor
mov
test
adc
popa
pop
aas
dec
lcall
add
pop
fcoml
in
arpl
out
ret
inc
dec
mov
xorw
inc
and
lods
or
shll
inc
stos
andb
testl
xor
inc
mull
loopne
push
sbb
push
mov
and
aas
lock
mov
mov
imul
push
adc
mov
ret
aam
sbb
jne
je
js
lret
insb
inc
imul
inc
dec
or
loope
jae
cmp
lea
push
aam
das
cmpsl
scas
lahf
jnp
stc
push
mov
adc
push
fistps
lods
push
rorb
mov
enter
lcall
xchg
lcall
insl
outsl
popf
lea
dec
gs
xor
fstl
insb
cmpb
js,pn
hlt
dec
pop
gs
jae
sti
dec
xlat
cli
addr16
pop
stc
fistpl
cmp
mov
cltd
xlat
insl
jne
js
fcmove
push
mov
mov
pop
jne
popa
aam
push
sbb
add
xor
sbb
adcl
push
mov
jo
pop
sub
xchg
and
mov
sub
out
call
push
mov
mov
mov
pusha
addb
fisubl
subl
arpl
hlt
mov
mov
add
push
or
mov
mov
stos
adc
aam
fisttpl
mov
iret
leave
and
shl
aas
clc
movsl
ss
sub
nop
jmp
adc
mov
jle
mov
out
mov
fisttps
xchg
pop
push
inc
lret
mov
loop
icebp
subb
call
bound
pop
pop
mov
lahf
push
xor
sub
mov
jbe
out
mov
or
ss
les
scas
fwait
mov
mov
call
int3
shlb
mov
xor
subb
imul
aaa
pop
adc
sbb
mov
jo
pop
xor
mov
testb
sub
outsb
jnp
inc
jle
xchg
stos
or
cmp
int3
sbb
mov
idivb
aas
xlat
imull
pop
add
pushw
or
dec
push
push
dec
insb
test
cmp
mov
or
or
mov
stos
xlat
jnp
imul
in
sbbl
xchg
in
stos
push
pop
nop
mov
hlt
popa
mov
enter
lret
xchg
mov
fwait
orps
xor
lret
push
mov
pop
adc
mov
imul
dec
sbb
out
and
cmp
mov
mov
push
dec
popf
sub
gs
dec
pop
fcmovbe
in
lods
rcll
dec
and
inc
push
xchg
mov
lcall
loop
fbld
call
data16
push
push
stos
dec
xor
call
aam
push
mov
push
ret
in
sarl
pop
xchg
jge
pop
inc
shl
mov
or
fildll
je
popf
int3
adc
ja
push
mov
inc
jecxz
xchg
mov
mov
jg
loope
or
sub
scas
jecxz
negb
xor
popa
sti
xchg
jne
or
enter
ss
sbb
mov
mov
mov
cld
and
cld
jae
in
outsb
mov
mov
mov
insb
lea
pusha
stos
xlat
leave
jp
outsl
les
clc
cmp
pushf
cmp
pushf
out
add
popf
adc
cs
dec
mov
xlat
or
shll
xor
sub
add
loopne
lds
pusha
pop
lds
push
fcoms
xchg
fadds
xor
push
in
shl
idivb
mov
inc
adc
insl
or
xorb
rclb
mov
and
inc
std
push
cmpb
stc
or
sub
out
push
add
roll
out
in
mov
rcl
sub
xlat
pop
mov
enter
xchg
lahf
arpl
push
jb
inc
pop
repnz
es
push
add
out
cmc
or
loopne
ljmp
int3
sub
adc
jb
loop
cltd
orl
lcall
pop
pop
ret
inc
push
push
arpl
mov
sbb
cwtl
add
sti
clc
les
mov
rorl
lock
add
adc
fwait
leave
popf
sub
dec
or
pop
pop
mov
rcrb
pop
mov
push
mov
repz
leave
dec
fidivrl
jne
xor
fisubs
outsl
push
jns
loop
icebp
jns
jmp
aad
insl
loopne
jb
cmp
shll
loope
in
imulb
xor
int3
rcr
andb
test
pop
fcompl
das
nop
mov
stos
mov
idivb
nop
inc
std
mov
fldt
pop
mov
popf
jge
icebp
sub
add
loope
std
jle
xor
movb
loop
mov
sbb
dec
fsubrs
bnd
in
jp
push
xor
js
fistpll
dec
nop
cltd
add
lcall
sahf
std
jmp
push
lods
add
out
lret
inc
mov
dec
repz
sub
les
int3
shlb
xor
mov
ret
and
out
jg
add
sbb
push
ret
dec
lcall
idiv
jne
ja
and
pop
push
insl
adc
inc
or
loope
into
out
xchg
shrb
cmp
cld
xchg
pop
jecxz
jg
test
xbegin
jo
jecxz
cmpsb
inc
xor
leave
rcl
or
add
mov
push
dec
pushf
in
aas
jg
out
xlat
jmp
jbe
imul
popf
into
xor
or
adc
into
xor
mov
or
lret
xor
std
dec
shrl
adc
cmp
pop
add
lods
sub
sbb
data16
rcr
xor
push
out
out
fs
sub
xlat
fwait
scas
sub
bnd
adc
mov
xor
sbb
pop
sub
das
test
dec
push
sbb
imul
nop
mov
mov
fiaddl
dec
mov
xor
cmpsb
mov
sub
aad
push
inc
sub
mov
pop
sbb
out
add
sti
dec
lret
stos
mov
push
inc
gs
dec
pushf
dec
les
divb
adc
shrl
push
pop
push
dec
dec
testl
sub
sbb
sub
sub
std
mov
xlat
insl
mov
sahf
test
in
sub
mov
push
pop
jns
orb
fs
enter
jecxz
sahf
test
inc
push
hlt
mov
ret
lret
xchg
mov
and
insl
jecxz
add
notl
nop
nop
in
dec
imul
adc
into
fistpl
sbb
movaps
push
jge
xchg
lea
scas
lret
xor
outsl
xor
js
push
fists
pop
cmc
jecxz
imul
es
mov
aas
ljmp
sub
in
and
mov
lds
scas
leave
fadds
es
dec
inc
pop
mov
cmp
pop
cltd
aaa
cltd
fsubrl
add
jge
ja
roll
inc
push
dec
or
jae
jnp
jle
jns
jns
das
pop
iret
jecxz
mov
loop
jmp
pop
pop
adc
rorl
mov
or
xchg
push
mov
push
lock
test
pop
loopne
fdivrl
or
pushl
add
aad
xchg
sub
in
insb
sbb
ret
jno
mov
inc
test
pop
cmp
ja
fwait
pop
lahf
hlt
sub
mov
mov
and
jae
test
dec
mov
xchg
fwait
lret
js
out
xchg
lock
mov
adc
aam
adc
data16
ds
mov
rcll
xor
push
aad
lcall
ds
loop
cltd
dec
mov
mov
nop
sbb
lods
sbb
pop
adc
sbbb
add
dec
inc
popa
movsl
sarl
jecxz
arpl
fiadds
nop
ss
mov
iret
jne
emms
pop
out
lock
push
mov
jg
mov
xor
fstpl
pop
lods
filds
mov
subl
xchg
rcrb
movsb
into
cmc
jno
mov
mov
daa
imul
rcrl
int
xchg
aaa
dec
iret
outsl
mov
sbb
xor
sub
jb
aam
bnd
pop
int
sbb
push
pop
pop
popf
xchg
fadd
and
lock
sti
movzwl
add
std
ja
push
cwtl
push
inc
gs
fstpl
leave
cwtl
jae
add
jo
jle
sbb
test
aam
mov
popa
mov
mov
cmpsb
out
add
mov
cmp
sub
mov
xor
in
iret
mov
mov
jg
add
mov
pushf
and
mov
sub
jl
mov
mov
fwait
lcall
xchg
xchg
dec
cmpl
sub
mov
inc
cmp
lret
orb
insl
sbb
push
fldenv
jae
jbe
dec
xorb
sbbb
in
js
inc
stc
xor
sub
push
fidivrs
jmp
pop
sbbb
xchg
bound
scas
or
mov
aas
sbb
xorb
movl
pop
jp
pop
cmp
push
pop
ljmp
mov
mov
lahf
addr16
stos
out
out
sbb
sahf
pop
or
data16
in
push
sub
adc
push
cwtl
mov
nop
loopne
adc
test
pop
les
sub
pop
add
rclb
mulb
insb
pop
aad
fildl
lods
mov
cli
lock
pop
pushf
adc
fisubl
inc
mov
adc
std
ss
xchg
sbb
enter
ljmpw
xchg
sbb
fs
adc
lret
xchg
push
lcall
aad
add
dec
or
xchg
iret
mov
pop
sbb
xlat
mov
sbb
sbb
call
push
insb
mov
sub
pop
ficompl
add
adc
and
pop
shrl
pushf
aaa
leave
fwait
insb
pop
push
nop
leave
add
xor
hlt
inc
xchg
push
add
jle
cld
dec
xor
push
and
sub
lea
xor
xor
mov
push
jl,pt
cmp
jp
adc
ja
nop
pop
adcb
cmp
nop
push
dec
aam
mov
cwtl
subl
js
out
in
and
adc
xor
mov
out
psllw
dec
jnp
insl
roll
push
push
sub
cmp
xlat
push
and
in
movsl
mov
pop
sbb
sbb
pusha
stos
jne
jbe
in
pushl
aas
xor
cmp
loopne
outsb
inc
pop
dec
test
jp
cld
aaa
inc
ficoms
xchg
sbb
add
mov
clc
gs
push
inc
sbb
lcall
outsl
or
stc
out
movsl
cmp
mov
insl
xor
enter
dec
subl
jle
dec
dec
push
push
popf
je
mov
fisubs
stc
xor
out
lods
jl
pop
cltd
aas
outsb
dec
pop
xchg
jmp
inc
scas
pop
call
call
pop
push
lahf
fcmovnbe
push
iret
out
xlat
cmp
push
push
std
push
add
sbb
sar
inc
fs
loope
xor
addr16
or
mov
or
std
pop
inc
lret
xor
fistl
test
loop
xor
fstpt
lret
mov
xor
call
sti
gs
pusha
xor
shlb
adc
jbe
fsubp
out
push
cmp
pop
lahf
mov
mov
jnp
pop
aad
lahf
xor
mov
xchg
dec
mov
clc
cmc
and
dec
clc
mov
loop
stos
pusha
push
jo
cli
montmul
cmpsb
les
add
insl
jp
mov
jns
dec
or
cmpsl
mov
inc
inc
aaa
imul
fnsave
jno
xchg
adc
out
ljmp
mov
mov
aam
iret
adc
pop
or
popa
and
inc
iret
gs
pushf
xor
adc
std
scas
mov
dec
dec
mov
inc
mov
jg
lret
test
test
cwtl
shr
dec
cmp
sbb
jecxz
push
int3
add
lea
mov
hlt
xor
and
test
or
or
mov
adc
fnstcw
xchg
push
jno
dec
subl
xchg
xchg
into
lods
pop
idivb
cmpsb
sbb
pop
jns
xorl
and
outsl
mov
mov
lds
out
stc
inc
jmp
sub
adc
dec
xor
jmp
push
pop
das
push
dec
idiv
adc
dec
test
sub
popa
mov
xchg
mov
jmp
popa
sub
mov
jne
call
popf
ret
fs
xchg
and
scas
mov
adc
inc
out
pop
lods
push
je
xchg
lret
sub
mov
fcmovne
xor
pusha
ja
xchg
cmpsl
and
arpl
ficoms
int3
dec
in
mov
icebp
sti
lds
cmp
pop
into
pop
push
push
xor
shll
mov
dec
insl
pop
jne
jmp
fwait
movsb
out
jns
sub
call
dec
fimull
push
in
sarb
mov
mov
pusha
sub
enter
shll
add
dec
jnp
sub
nop
sar
popa
je
inc
push
or
jo
sahf
cltd
repnz
add
mov
test
push
add
out
push
stc
push
std
stc
loop
push
leave
mov
mov
sub
xchg
pop
sub
add
sbb
adc
sbb
cmp
adc
cmpsb
fsubrl
int
xchg
pop
and
or
incb
in
mov
out
divl
subl
add
pop
rorl
sub
lea
and
iret
fsubrs
fldl
pushf
lahf
ja
cmpsl
xchg
jp
push
push
rep
sbbl
xchg
data16
pop
or
jnp
inc
add
dec
xchg
cmp
mov
sub
je
or
pop
xor
sub
outsb
incb
movsb
dec
or
xor
jmp
addl
pop
mov
clc
iret
ficompl
or
pop
inc
xabort
enter
outsl
pop
lock
sbb
push
in
push
xchg
fnsave
or
cld
xor
loop
pusha
xor
or
xor
insl
and
std
jge
push
int3
testl
adc
pop
cli
gs
mov
stos
xor
gs
loopne
aam
push
dec
out
jno
aas
mov
mov
into
bound
fstps
shlb
add
pusha
mov
outsl
in
mov
mov
push
or
or
add
dec
inc
mov
pop
fldcw
imul
icebp
loope
jbe
xchg
cmpsb
sbb
hlt
sub
repz
loop
rolb
pop
mov
ret
sar
xchg
sti
movsb
add
sbb
inc
and
sti
adc
pop
ja
in
mov
pop
shrb
jecxz
mov
xor
data16
xor
push
loop
aas
pop
adc
jl
sbb
xchg
pop
push
add
push
or
xchg
icebp
lret
js
adc
pop
mov
adc
test
sub
add
hlt
jmp
jno
and
mov
xor
es
fsubr
pop
push
fdivrl
in
inc
add
xchg
nop
rcrl
or
mov
cltd
scas
lcall
mov
lock
dec
icebp
cmp
je
cmc
ja
out
xchg
adc
into
stos
push
push
imul
jbe
pop
and
repnz
aad
sub
data16
cld
mov
mov
jb
shll
add
out
sar
sahf
bswap
xchg
dec
xchg
icebp
xor
loop
cmp
add
sbb
imul
add
adc
jne
mov
mov
sub
fidivrs
mov
dec
mov
cmpsb
inc
sub
das
js
int3
lds
sbb
dec
daa
fwait
xchg
sub
std
cmp
cmpsb
dec
dec
neg
dec
cmp
add
adc
rep
arpl
cli
xchg
mov
mov
and
jmp
mov
or
xor
xchg
les
fiaddl
xchg
mov
sti
jno
and
arpl
ret
jo
adc
addl
sbb
mov
int
test
xchg
cmp
jbe
mov
cld
pop
out
xchg
mov
xchg
icebp
bound
out
and
inc
inc
sbb
and
out
test
add
lock
push
and
pop
inc
push
mov
pop
pop
stos
test
rcrl
into
inc
jns
jmp
xor
mov
int3
fsubl
inc
mov
std
ja
adc
lret
add
xor
jmp
dec
cmp
xor
and
out
out
popf
push
out
pop
xor
loop
dec
lds
inc
adc
inc
cld
mov
das
fimuls
cmp
pop
bound
pop
or
jbe
pop
push
cmp
dec
xor
fnsave
lods
adc
mov
loope
xor
movsl
es
and
imul
mov
cwtl
decl
cwtl
out
or
in
mov
and
fwait
inc
adc
mov
rcrl
jmp
xchg
push
pop
loop
fdiv
adc
and
out
pop
rclb
jnp
sbbl
dec
add
es
mov
mov
ret
inc
cli
sbb
inc
pop
lcall
out
fists
mov
adc
mov
inc
pop
jbe
nop
inc
repz
mov
xor
pop
rcrb
mov
mov
sub
jae
mov
or
mov
and
adc
mov
push
jmp
iret
sbb
adc
jp
push
es
cltd
pop
jmp
jae
xor
shrb
mov
ficompl
adc
adc
jp
mov
outsl
dec
mov
ret
mov
ret
loop
sub
and
jl
cltd
sbb
mulb
inc
rep
cltd
push
or
mov
mov
subb
mov
inc
xor
cmovle
imul
pop
arpl
mov
inc
es
inc
pop
xor
adcl
movsb
inc
rcl
sub
jmp
pop
or
popf
js
push
cmpsl
mov
jmp
inc
repnz
and
in
loopne
pop
mov
ret
jl
ret
idivl
outsb
xlat
out
sub
or
nop
addr16
fidivl
push
mov
xorl
sub
mov
les
xlat
into
xchg
iret
or
mov
enter
insl
aaa
push
pop
jecxz,pn
js
scas
int
imul
jnp
mov
dec
xor
mov
data16
pop
push
int3
roll
inc
xor
popa
push
sahf
data16
add
or
shl
stc
lds
cwtl
int
sti
popf
xlat
mov
cmpsl
mov
xor
xchg
dec
outsl
lds
fpatan
cs
push
xchg
adc
mov
lcall
inc
sarl
sub
fistps
jge
popa
shlb
jg
in
fcoms
test
loop
sub
insb
xchg
pop
fdivs
mov
jnp
imul
lods
mov
sub
sti
adc
leave
xchg
in
mov
ret
cwtl
ljmp
cmc
divl
sub
sbb
scas
movsl
push
cmpl
inc
fldcw
ret
dec
xor
jbe
jbe
es
lret
mov
sbb
sti
xchg
mov
add
or
in
xorl
cmp
in
push
sub
cmp
sbb
mov
xchg
and
loopne
sbb
adc
sub
xchg
repz
insb
gs
stc
mov
leave
mov
jle
cltd
dec
dec
loopne
sbb
mov
pop
dec
iret
xorl
mov
in
jno
cmp
hlt
repz
or
mov
pop
dec
sub
add
dec
stos
in
dec
popa
imul
int3
das
push
jecxz
std
pop
inc
lods
jmp
cltd
dec
add
out
adc
inc
outsl
aaa
or
scas
and
aas
cmp
push
push
jmp
inc
rclb
inc
lods
xchg
in
and
adc
ret
adc
mov
mov
mov
xchg
std
pop
dec
pop
icebp
sub
pop
test
xorl
dec
add
mov
out
mov
mov
push
rorl
inc
outsl
xchg
push
add
jmp
sbb
stc
pop
stos
push
aaa
pushf
cli
rcrb
mov
jp
inc
pop
xchg
pop
mov
aam
mov
js
cltd
call
jg
jmp
jnp
mov
jl
and
leave
xor
rcrl
jae
shrb
mulb
adc
fbstp
ja
jne
fidivs
scas
or
jp
aas
jbe
sbb
js
push
jecxz
ds
movsl
dec
mov
adc
push
cmpsb
pop
fildl
aam
pop
mov
pop
dec
repz
inc
cmp
in
xor
ficomps
test
pushf
in
xor
push
inc
loop
pop
cld
outsl
outsl
jg
fdivp
decb
jbe
stc
sahf
lds
stos
imul
cld
in
out
mov
out
pop
xor
mov
arpl
data16
lods
fs
lods
addr16
fdivp
cmp
stc
std
les
pusha
movsb
sti
mov
scas
xchg
xchg
repz
xchg
dec
aaa
fisubrs
jb
mov
mov
dec
mov
mov
cmp
es
les
and
push
jo
cmpsb
outsb
jmp
inc
clc
and
cmp
outsb
sbb
jnp
pop
mov
lcall
fdivrl
insl
divl
ss
aas
leave
arpl
scas
xchg
ss
mov
xchg
testl
fisttps
loopne
push
mov
and
push
xlat
ss
pop
icebp
clc
shll
mov
mov
push
xchg
pop
gs
in
daa
push
fcoml
int
insl
call
lods
aad
in
push
jnp
adc
cltd
pop
jbe
xchg
jbe
divb
leave
cmp
jp
inc
push
xchg
pop
push
ds
aaa
mov
xchg
add
cmpsl
pushw
test
mov
aaa
sarb
xchg
out
adcl
lahf
mov
repnz
test
xchg
xor
daa
iret
inc
mov
or
fnstsw
cli
inc
push
dec
subl
and
and
sahf
pop
stos
shrl
lds
rorl
push
sub
sub
pop
add
pop
outsb
sub
inc
mov
and
dec
jmp
cmp
dec
jns
cltd
rcll
jno
int
sbb
ret
xor
rcr
fs
cli
inc
cmp
push
pop
std
test
sahf
pop
mov
ss
stos
dec
jae
arpl
mov
stos
mov
iret
or
cmp
xchg
shlb
xor
cs
arpl
insl
dec
or
xchg
lock
mov
pushf
mov
push
loope
fcmovu
loop
xchg
mov
fwait
cltd
dec
mov
and
xchg
and
repnz
fbld
xchg
pop
div
cmpl
fildl
push
fistpll
test
xchg
aas
mov
fs
add
sbb
sbb
mov
gs
mov
dec
jge
pop
dec
mov
movsb
inc
xchg
sbb
in
xchg
mov
jb
mov
shlb
add
lahf
mov
xchg
pop
cmp
mov
xchg
ja
push
mov
stos
mov
divl
orl
pop
leave
test
popa
xlat
xor
jl
add
sub
jg
fiaddl
frstor
push
enter
mov
in
push
mov
inc
adc
cltd
cwtl
aaa
push
nop
inc
jnp
and
outsl
lds
and
inc
outsl
aaa
leave
push
in
xchg
and
push
andl
cmc
rorl
fsub
outsb
and
mov
cmc
jno
arpl
es
popa
outsl
xchg
call
cmp
dec
xor
aam
dec
sbb
or
das
pop
outsl
sub
and
pop
mov
cmp
mov
push
ja
add
lds
jbe
xor
out
mov
aam
movsb
lods
pushf
sub
sbb
ret
push
pop
mov
mov
push
pop
sarb
testl
cmp
fldl
pusha
mov
es
cmp
std
aam
divl
adcl
mov
fnsave
scas
addr16
dec
sbb
xor
push
adc
sub
push
jl
add
imul
jne
push
lret
call
stos
test
shrb
into
pop
lock
out
hlt
rolb
add
add
fimuls
cmp
icebp
test
add
aas
dec
xor
out
mov
loope
insb
xchg
and
lods
mov
dec
mov
jge
stos
pop
daa
enter
inc
imul
sbb
ret
inc
clc
and
rol
sbb
imul
xchg
daa
int3
das
sahf
lcall
adc
lock
in
test
stos
outsb
push
mov
push
pop
push
and
sbb
jl
addb
sbb
test
xchg
imul
out
jbe
call
fwait
pop
push
es
mov
mov
mov
test
inc
rorl
incb
jns
popa
enter
stc
sub
cmp
movsb
push
jno
rcll
push
pop
mov
mov
xchg
mov
mov
xchg
fwait
push
insb
test
movsb
mov
ja
xchg
sub
or
mov
das
inc
xor
dec
ljmp
imul
xchg
arpl
hlt
repz
pmaxub
or
sub
mov
pop
aaa
add
jmp
shrl
sbb
jb
pop
inc
loopne
test
inc
push
outsl
jecxz
xchg
lock
and
xor
cli
sbb
jp
xchg
push
das
mov
insl
or
loopne
jb
sbb
inc
popa
scas
out
inc
pusha
dec
push
cmp
xchg
ja
scas
mov
ljmp
std
push
jbe
jle
jl
push
outsl
pusha
xorl
pushf
jge
sub
scas
push
in
dec
loopne
lcall
movsb
push
mov
je
push
push
inc
jns
loopne
jecxz
sbb
mov
mov
lea
push
out
jo
fisttps
sbb
xlat
das
sub
cwtl
cmc
mov
mov
jae
sahf
cmp
in
xor
cltd
xchg
bswap
test
jo
bound
inc
fcompl
fisubrs
mov
rol
das
cmpsb
jbe
popa
jmp
int3
or
inc
cmpsl
std
test
and
cld
pop
mov
add
dec
lods
adc
xchg
jae
xchg
test
jae
inc
mov
loopne
pop
aas
popa
jp
add
divl
pop
sbb
add
push
xor
ds
mov
xchg
stos
mov
ss
fdivrl
les
icebp
loop
lea
dec
mov
dec
aam
aaa
sahf
adc
fdivl
or
mov
mov
lds
sub
in
and
jno
sahf
inc
mov
addr16
jb
inc
pop
icebp
sub
xchg
push
mov
je
push
jno
mov
cmp
inc
xchg
sti
lea
push
mov
outsb
cmp
and
in
lret
aam
mov
std
inc
mov
add
dec
dec
adc
cmpl
fldcw
adc
or
adc
lods
xchg
jae
nop
shrb
cwtl
sub
bound
idivb
xor
adc
mov
out
mov
bnd
jecxz
mov
arpl
icebp
ljmp
ret
fld
addr16
sub
push
mov
cmp
push
insb
sahf
insl
shl
into
xchg
adcl
cmp
addl
and
sbb
prefetcht2
inc
mov
leave
mov
stc
mov
jne
fisubs
push
rol
inc
mov
test
repnz
xor
roll
sub
mov
out
stc
sub
jnp
jno
test
cmpsb
push
shlb
aas
loopne
xor
cmp
fiaddl
mov
scas
movsl
xchg
jb
lret
in
push
jae
mov
xchg
mov
push
cmc
fbld
xchg
mov
in
lock
arpl
or
jnp
in
mov
cmc
test
out
call
mov
mov
mov
push
insb
sbb
xlat
imul
lock
jecxz
and
fisttpl
pushf
arpl
sub
add
in
js
mov
push
popa
test
aaa
or
fisttpll
mov
outsb
adc
decl
imul
sbb
jbe
flds
xor
fcmove
popa
ficoms
xor
cmp
mov
aam
data16
lods
mov
into
stos
cmp
nop
dec
sti
into
inc
inc
cmp
jns
sbb
cmp
cltd
test
pop
fwait
popf
dec
jne
jge
aas
cs
jge
mov
jp
jns
out
jns
adc
adc
ja
xchg
inc
shl
dec
mov
pop
fnstenv
jne
sti
or
or
fwait
imul
xor
sti
ds
inc
pop
sub
insb
xor
enter
cmc
sti
xchg
jnp
cmpsl
or
jp
jbe
cld
add
jg
inc
add
leave
cwtl
mov
add
ret
shlb
adc
inc
mov
mov
mov
imul
rcrl
or
dec
adc
ljmp
leave
mov
adc
xor
lods
enter
rcll
pop
adc
jae
mov
sbb
shrb
mov
and
pop
adc
jns
lods
lret
pop
push
imul
jmp
cmp
aad
sub
mov
fnsave
xor
jnp
or
aas
fwait
xchg
xchg
fsubl
std
or
pop
push
andb
insb
insl
loop
stc
sub
pop
sbb
aaa
sbb
cli
mov
stos
pop
add
mov
cmp
fbld
add
daa
sbb
roll
stos
pop
cmp
xchg
js
mov
mov
inc
push
push
inc
add
movsb
adc
rclb
sbb
mov
mov
inc
cmpsb
out
jmp
aas
push
mov
inc
inc
adc
add
jle
std
mov
data16
pop
push
test
push
or
mov
cli
cmp
in
bound
cmp
insb
cmpsl
test
pusha
mul
push
mov
xlat
sub
xor
sub
jo
stc
popa
adc
pop
fisttpl
cli
sbb
jmp
ffree
out
and
and
loop
dec
leave
add
arpl
pop
cmpsb
add
rolb
hlt
and
sub
lods
xor
push
cwtl
subl
xchg
into
or
and
push
sub
dec
pop
mov
in
testl
add
mov
enter
inc
sarb
stc
cmp
movsl
ficoms
divb
das
in
add
mov
mov
into
xchg
fsub
mov
adc
or
ja
mov
and
pop
jle
pop
das
dec
rcl
imul
scas
ret
mov
push
dec
fnsave
ljmp
rorl
lret
push
clc
jp
pop
push
xchg
xor
nop
mov
out
arpl
jo
out
push
out
fcompl
or
test
mul
sahf
inc
out
or
mov
lods
inc
mov
sub
idivb
and
jne
lret
dec
leave
ret
mov
testb
pop
lret
xchg
pop
mull
and
mov
roll
test
rorb
nop
mov
in
xor
sub
loopne
add
push
jl
push
or
sub
mov
or
insb
inc
mov
or
fnstcw
push
loopne
outsl
jg
xchg
lds
lcall
ss
fadds
inc
insb
loopne
inc
in
inc
mov
sbb
pop
out
jb
mov
stos
push
stos
xorl
int3
and
push
negb
inc
outsb
adc
mov
fsubr
pushl
outsl
jo
out
dec
into
xchg
and
xor
lret
push
xchg
sbb
push
mov
push
jnp
mov
mov
iret
imul
mov
inc
fs
loopne
stc
xor
or
mov
jmp
popf
pop
dec
repz
inc
les
xor
or
cmc
and
imul
lret
jmp
in
test
or
jl
cli
and
push
pop
scas
iret
out
jg
test
into
insl
push
ja
add
icebp
sbb
push
cld
call
push
ja
push
loope
rclb
in
push
inc
cwtl
cs
dec
negl
inc
cltd
loop,pn
dec
loopne
popa
shlb
pop
lock
xchg
ja
inc
mov
xor
push
inc
in
inc
orl
and
ds
jecxz
pop
mov
movl
jns
insb
jge
mov
mov
inc
push
movsb
adc
xchg
cltd
insl
pop
sti
pop
shll
sbb
bound
ljmp
mov
gs
pusha
dec
adc
xchg
add
cmp
and
push
jl
dec
pop
subl
iret
adc
xorl
loop
jno
mov
mov
sub
and
push
jbe
pop
inc
jecxz
push
sub
test
sub
inc
sbb
jne
mov
in
test
pop
lret
in
or
shlb
cmpsl
lds
jp
lods
mov
fcmovnbe
jnp
in
bound
imul
pop
inc
pop
ret
xor
pusha
cmp
lods
push
or
rcll
pop
gs
pop
adc
sbb
jno
inc
lods
into
sbb
arpl
aad
scas
sti
xor
xchg
cmpsb
inc
es
testb
movb
cwtl
xchg
inc
inc
jbe
adc
dec
sbb
xchg
xchg
or
mov
jb
icebp
imul
jno
xor
sbb
repz
adc
cld
xor
add
or
add
adc
xlat
sbb
and
ljmp
mov
and
dec
pop
pop
xor
or
mov
push
inc
ficoms
jne
push
mov
xor
sbbb
dec
dec
stos
incl
scas
loop
jg
pop
insb
stc
sub
sub
dec
ja
orl
cld
dec
pop
rcr
testl
push
mov
jmp
xor
or
mov
pusha
adc
insb
mov
dec
pop
push
in
pop
into
loop
xchg
and
cld
dec
and
jb
pop
sub
push
push
pop
mov
out
pop
mov
mov
imul
stos
sarb
cmp
jo
sub
inc
cli
pop
pushf
sub
push
int3
pushf
sahf
push
lret
sbb
aad
cmpsl
dec
orl
mov
icebp
jecxz
xchg
stos
aas
jle
jb
sbb
cwtl
adc
pop
pop
or
pop
adc
in
xor
aaa
mov
lret
je
rcll
cmp
hlt
lahf
out
data16
and
jnp
xor
push
mov
inc
xor
shrb
xor
jno
lods
xchg
adc
imul
loop
test
mov
xchg
fnstsw
aad
sbbl
push
jp
add
jnp
dec
into
fs
ret
out
jl
test
dec
mov
leave
mov
pop
lock
fiadds
nop
pop
outsb
jp
daa
std
rclb
sub
movsb
pop
cmpb
push
ret
mov
outsb
xor
mov
adc
out
pop
pop
lods
push
push
xor
and
nop
sbb
jne
jl
mov
cmp
aaa
movsb
and
jg
and
test
and
fists
xchg
lahf
adc
rcll
addr16
push
sahf
pop
fmuls
enter
daa
jne
iret
or
xchg
imul
inc
in
sarl
push
push
push
fnstsw
jb
mov
mov
cmpsb
or
push
pop
mov
mov
sbb
psllw
mov
dec
dec
enter
sbb
xchg
or
scas
shll
lods
push
mov
fdivrp
mov
dec
mov
cli
es
pop
stc
push
ds
jp
out
push
xor
imul
push
insb
cmp
test
andb
lods
insl
stc
inc
push
jno
push
xor
jnp
loopne
xchg
cmp
mov
inc
mov
push
pop
jmp
xor
test
popf
dec
dec
into
inc
clc
adc
and
sbb
jmp
les
mov
mov
and
mov
xor
data16
in
shll
idiv
lret
adc
and
jnp
and
sub
pop
loop
jbe
sub
ret
xchg
jo
pop
popa
cmp
sbb
cltd
loopne
mov
testb
cli
pop
mov
mov
jge
lcall
dec
cmc
adc
sarl
cmp
cmpl
push
sti
sbb
jmp
pop
loop
dec
imul
dec
lcall
jbe
sbb
pop
or
inc
adc
adc
push
in
fs
cmp
or
ficoms
cmpsb
loop
in
sbb
mov
pop
cmpsb
dec
fcmovnb
mov
mov
sub
sub
add
hlt
xor
fnstenv
icebp
mov
int
sub
mov
adc
push
xor
jg
bound
jle
lret
pop
sub
cmp
xchg
shll
movsl
jb
inc
shll
xor
popa
pop
sbb
jae
pop
xor
sbb
or
psllw
mov
mov
jo
sbb
push
stos
sbbl
sbb
dec
out
add
and
jmp
pop
push
xchg
jne
in
ss
scas
mov
out
iret
sub
xchg
sub
popf
dec
dec
loop
outsb
cmp
cmpsb
sti
ds
rclb
mov
insl
push
mov
sbb
or
in
imul
inc
in
pop
fisttps
dec
and
ds
nop
pushf
icebp
popa
cli
rol
rcll
cs
mov
jne
nop
pop
or
fdiv
lahf
out
push
je
or
outsl
iret
nop
jae
mov
pop
inc
dec
cwtl
in
pop
sub
pop
ss
sbb
jecxz
imulb
jbe
mov
fistpll
mov
es
mov
test
jmp
push
bound
aaa
insl
shll
sbb
sbb
jecxz
idivl
mov
dec
push
push
or
pop
pop
jae
add
aaa
nop
inc
mov
pusha
repnz
mov
pop
addb
je
int
dec
out
jno
mov
or
pushf
ret
xchg
pop
icebp
mov
jno
outsb
sub
repnz
jno
lods
fidivrs
test
fcoms
out
jae
jge
pop
mov
cmp
ds
in
pushf
push
pop
sub
cmp
mov
jne
jp
adcl
push
mov
push
enter
push
ljmp
or
sub
incl
xor
rol
mov
movsb
fidivl
jmp
mov
add
loope
or
call
lea
cmc
fdecstp
push
scas
jl
add
xor
jecxz
dec
xchg
push
aad
fnstenv
push
in
xor
into
or
out
jae
sbb
pusha
ret
sahf
sbb
jns
mov
jge
mov
cli
fldenv
dec
or
or
shrb
movsl
push
pop
ds
xchg
fdivrs
nop
sub
adc
pushf
push
lock
cmpl
sub
call
insl
test
dec
jne
cmpb
or
lahf
xor
fucom
and
ret
sub
inc
aaa
push
in
add
mov
rolb
gs
jno
xchg
jle
test
xchg
fcoml
mov
fsubrs
and
pop
adc
cmp
sldt
mov
out
shl
mov
sbb
pop
test
and
sbb
das
mov
add
cmp
addl
cmp
adc
aas
sub
push
leave
push
rorl
in
push
outsl
push
jmp
cli
insl
sti
insb
xor
mov
inc
fldenv
loop
push
cmp
imul
push
adc
mov
and
xor
cld
xor
pop
and
xchg
cmpsb
sub
or
mov
fisttps
jp
pop
push
inc
cmc
mov
xchg
out
lock
fsubrl
cmpb
or
js
shlb
mov
cmc
mov
lds
iret
rorb
scas
repz
push
jb
test
dec
push
addr16
sbb
sub
jne
push
xchg
rcrb
push
popa
pop
jb
in
push
pop
lret
push
mov
scas
int3
mov
lret
das
jl
inc
dec
sub
push
repnz
rclb
sub
loop
incl
jae
std
mov
inc
stc
or
mov
cmp
gs
rorl
int
mov
jb
push
mov
xor
cmp
jecxz
mov
mov
cmpsb
mov
rcrl
jl
adc
pop
int3
es
out
mov
sub
lds
or
fdivrs
dec
add
cli
es
cli
dec
roll
das
loope
shrb
scas
mov
outsb
or
pushf
shl
in
xor
pusha
outsl
shlb
push
xchg
dec
enter
out
push
xchg
dec
jl
push
jg
imul
xor
jecxz
and
jmp
dec
lahf
test
cmp
xor
imul
push
pop
and
jns
mul
je
dec
les
xor
leave
mov
pop
pop
sbb
mov
test
iret
icebp
insl
test
mov
test
add
pop
jno
mov
mov
jae
dec
jae
insb
inc
popa
jne
loope
push
adc
sar
mov
and
out
fwait
notl
cmpb
mov
test
or
std
in
push
lret
dec
ljmp
push
imul
mov
mov
add
xor
js
mov
imul
sbb
testb
dec
or
add
rol
jb
adc
cmpsb
mov
sub
shll
pop
int3
dec
dec
adc
xor
and
ja
imul
jg
mov
imul
clts
fwait
outsl
mov
jecxz
push
mov
pop
ret
jns
cmp
scas
ss
mov
xor
xor
sub
sub
fcomps
mov
lahf
pop
ljmp
mov
xchg
test
dec
mov
call
ss
cmp
sti
or
lds
and
pop
sbb
push
stos
mov
divb
mov
lea
pop
sbb
popf
adc
sub
jl
pop
jg
adc
xchg
push
inc
xor
mov
xchg
mov
and
subb
cmc
and
push
mov
jns
or
leave
leave
sbb
push
xchg
push
xchg
sbb
incb
push
xchg
ss
gs
xchg
call
mov
pop
stos
pop
fistpll
movsb
push
jmp
jmp
enter
sarl
in
inc
in
int
test
sub
addb
gs
jne
test
sbb
sar
fwait
loopne
ds
mov
popa
in
jge
scas
mov
pop
outsb
cmpsl
clc
pop
push
pop
sub
xchg
loopne
or
xchg
and
xor
iret
int
mov
mov
xchg
data16
cmc
pop
aaa
xor
add
inc
jmp
mov
sbb
mov
jno
mull
xor
jg
pop
pop
repz
dec
lret
loop
adc
loop
fcoml
cld
sbb
jno
stos
xchg
xchg
mov
cli
daa
int3
xor
sub
loop
and
add
add
or
mov
pop
push
mov
inc
fdivs
pop
adc
das
xor
sbb
jge
test
out
mov
fldcw
cltd
jg
pop
jae
adc
jmp
xor
push
dec
les
mov
int
stos
rcr
jno
and
dec
or
popf
aas
sbb
fisubrs
xchg
lods
test
mov
ror
in
cld
sbb
stos
and
pop
mov
xor
sbb
xor
cmp
pushf
insl
sub
add
inc
dec
sub
roll
xlat
sub
push
mov
stos
mov
jmp
jmp
sub
xchg
cmc
mov
lock
xchg
rolb
inc
cmc
ret
icebp
adc
sub
ljmp
cmp
mull
push
lret
fimull
sahf
insb
and
cwtl
ror
mov
das
es
stc
mov
jmp
push
mov
mov
lock
out
roll
and
xchg
fists
lods
add
ret
insl
mov
decb
daa
mov
lcall
jmp
mov
pop
push
sbb
mov
sub
lock
stos
int
daa
je
iret
sbb
push
mov
ds
dec
stos
pop
mov
jbe
add
jb
cmp
inc
jl
add
inc
jle
add
clc
mov
fldl
mov
loop
and
dec
lcall
daa
enter
pop
mov
and
sbb
mov
push
loope
dec
orl
sbb
mov
push
fstps
cmpl
out
add
test
dec
sub
add
mov
nop
jnp
fbstp
ss
dec
pop
hlt
adc
dec
in
sti
add
mov
jge
out
adc
or
jge
mov
into
filds
mul
lret
push
pop
call
push
out
test
mov
cmp
push
add
fwait
push
or
ror
pop
leave
fs
jmp
mov
enter
or
das
jge
and
cli
enter
mov
pop
pop
aam
mov
fcompl
sub
js
or
cld
push
xor
ret
mov
and
psubb
es
push
lods
push
mov
out
sbb
inc
and
mov
inc
push
nop
mov
sbb
push
mov
push
cwtl
clc
fisttpl
jnp
lods
push
cmp
lods
movsl
scas
nop
add
out
repz
pop
cmp
mov
add
cmpsb
push
lods
inc
adc
pusha
and
cltd
and
clc
dec
leave
jne
xor
push
mov
mov
ja
stc
pop
aam
dec
cmp
into
and
decb
jbe
cmc
or
jmp
or
iret
jge
sbb
xchg
insb
testb
jb
pop
lock
repz
pop
jne
xchg
push
lea
jb
addl
clc
add
leave
sub
je
out
xor
cld
movsb
dec
sarl
popa
clc
cmp
cmp
gs
andb
mov
lods
loopne
jbe
sbb
pop
sub
dec
and
daa
dec
test
cmpsb
push
test
js
pop
sub
inc
push
arpl
mov
mov
and
or
sub
push
mov
aam
push
out
mov
lahf
mov
cld
and
rcl
xchg
int
stc
vfnmaddps
sti
int3
add
inc
movsl
xor
pop
lea
xchg
jb
xchg
popf
mov
ficoms
dec
cltd
mov
das
rcll
jle
push
mov
loopne
jnp
inc
arpl
jp
sbbb
inc
mov
int3
test
in
add
mov
push
sub
aaa
cmp
daa
mov
xlat
mov
dec
inc
fldt
aaa
loopne
mov
fisubrl
jnp
fisubrl
fwait
xchg
orb
bnd
test
mov
jg
ss
xchg
cmp
sbb
ljmp
and
sub
pushf
movsl
push
push
or
inc
notl
js
mov
xor
push
sbb
mov
in
in
out
adc
loope
mov
xlat
pop
mov
sbb
popf
cmp
inc
adc
loope
pop
notl
jl
std
xchg
ja
dec
hlt
xor
mov
lock
ljmp
fstpt
jnp
sub
or
daa
pop
cmp
popa
addr16
loop
sbb
inc
add
sbb
sbb
in
push
xor
or
les
jae
cmp
pop
mov
mov
rcrl
sub
add
aad
in
inc
mov
das
int3
mov
pop
insb
rcrb
cmp
mov
popl
push
aam
scas
xor
aas
out
scas
repz
dec
add
sbbb
stc
jge
out
xor
pop
jno
jle
sbb
dec
dec
push
std
mov
jg
mov
and
out
push
movsb
mov
pop
ds
sbb
inc
inc
mov
sbb
inc
lock
add
pop
mov
cltd
or
jb
rcrb
mov
sarl
mov
jns
lods
jb
jle
cltd
sub
adc
pop
xor
pop
lods
cmp
hlt
jno
jns
push
lret
sub
call
mov
bound
push
int
cmp
aam
out
cmp
in
dec
hlt
sbb
jmp
cld
sbb
inc
subl
jno
mov
pop
xchg
cld
test
mov
insl
std
popf
xchg
shrb
vmovdqa
xchg
shl
or
sub
test
cld
cmp
imul
inc
dec
cmp
or
inc
push
std
insb
jns
mov
shrb
pushw
mov
dec
fbld
push
mov
sti
roll
in
cld
pop
add
push
pop
inc
jo
mov
mov
push
pushf
repnz
rolb
dec
mov
add
jmp
idivl
aas
mov
xor
cmp
adc
cmpl
add
pop
pop
sbb
icebp
shlb
inc
push
dec
out
sahf
fwait
pop
int3
add
andl
mov
add
jmp
or
sbbb
stos
cmp
nop
aas
les
xchg
outsb
data16
mov
insl
popa
push
das
mov
push
adc
push
call
and
push
push
lods
mov
xchg
mov
inc
cmpb
cmp
push
mov
adcl
movsb
sub
mov
lcall
mov
cltd
xchg
jns
clc
imul
adc
dec
sbb
ja
stos
pop
out
sub
outsl
hlt
pop
mov
iret
clc
xchg
out
add
mov
ret
mov
ret
outsl
int
hlt
cmp
dec
outsl
dec
aam
lock
popa
pop
sub
les
mov
jge
jecxz
jo
adc
and
pop
dec
xchg
xor
out
mov
adc
ljmp
ds
icebp
outsl
scas
inc
mov
add
mov
mov
aad
sub
xchg
into
add
pop
cltd
mov
and
fsts
jmp
js
pop
sahf
js
add
mov
rcrl
and
jae
iret
imul
ljmp
iret
add
cltd
test
mov
jg
frstor
push
lea
jl
jne
icebp
inc
push
mov
popa
gs
mov
dec
lods
mov
sbb
adc
cmc
insb
fdivrl
lahf
lret
and
xor
push
push
data16
daa
scas
mov
dec
push
mov
adc
xor
jl
jne
jae
cli
outsl
inc
lahf
cmp
push
xchg
mov
bound
mov
popf
daa
scas
lods
addr16
arpl
inc
sbbl
cmp
and
jecxz
sbb
jnp
dec
fnstenv
je
jns
stc
sti
and
xchg
idiv
sub
or
cmp
iret
ja
fcomip
rcrb
in
daa
sbb
lret
mov
adc
jmp
or
addr16
push
sub
sahf
jo
movsb
xchg
sbb
shlb
loopne
out
inc
pushf
or
stc
dec
movsb
test
jb
pusha
mov
xorb
xchg
fistps
push
cmp
mov
inc
dec
gs
pop
push
mov
sub
into
adc
push
stos
and
sub
js
mov
lret
mov
rorl
inc
adc
and
mov
jno
cwtl
inc
jb
xorb
cli
mov
in
lock
adc
movsb
sbb
add
fldl
inc
push
repz
mov
fldt
push
cli
push
pusha
jecxz
and
pop
mov
mov
push
scas
mov
aas
xlat
jle
mov
or
sbb
and
ret
sub
jl
cmc
mov
ffreep
je
bound
rolb
aad
cmp
call
sub
daa
pop
or
sbb
or
ret
idivl
roll
mov
cmpl
ret
push
clc
xchg
pop
cwtl
mov
out
mov
xlat
push
mov
mov
scas
rorb
fldlg2
fistps
and
les
idivl
cmp
sahf
pop
mov
cld
sti
sub
add
aas
cmp
push
mov
pcmpeqw
mov
lds
jae
add
ret
mov
adc
cltd
ret
loopne
test
jbe
or
lret
fiadds
out
fwait
push
ss
movsb
pop
sub
mov
push
jge
popf
loop
adc
fdivr
jle
and
test
xor
ds
sub
mov
sbb
xchg
dec
sbb
jb
out
push
sbb
adc
push
push
test
xchg
xor
push
push
js
mov
dec
fadds
mov
aaa
dec
adc
loope
jno
xor
jge
enter
fwait
pop
jmp
out
shrl
inc
imul
test
add
sub
fdivrl
sub
movsl
adc
mov
add
in
xor
into
mov
dec
loope
lock
pop
cld
mov
daa
mov
repz
std
push
hlt
jae
sub
js
cmpl
push
mov
pushf
or
js
xchg
sub
movsl
bound
pop
imul
lods
jne
cmp
sbb
lods
dec
std
mov
pop
pop
iret
out
shlb
ret
jbe
adc
shll
int3
iret
jns
xor
subl
stc
jl
stos
mov
xchg
mov
popf
cli
pop
fidivs
test
cs
mov
mov
jo
stos
xor
mov
xor
and
add
lahf
dec
test
jo
outsl
mov
clc
leave
and
mov
mov
inc
pop
stos
repz
mov
mov
jns
and
pop
mov
faddl
pop
data16
out
adc
les
jmp
jg
shrb
mov
xor
xchg
xchg
mov
stos
cmp
mov
xchg
cli
dec
mov
xor
test
fsubl
dec
add
xchg
lea
and
pop
adc
in
mov
jno
xlat
insl
mov
shr
mov
addl
push
sbb
pop
rcrl
popa
and
leave
adcl
sub
jae
mov
jp
push
xchg
mov
push
lods
lea
in
mov
xchg
rcrb
push
addr16
in
dec
movsl
mov
jge
imul
xlat
pop
mov
fwait
std
fwait
andl
jmp
push
xchg
sub
or
add
push
inc
mov
sub
xchg
cmpl
cmp
daa
mov
pop
xorl
sub
jmp
adc
out
call
insl
jne
imul
adcl
daa
sub
shl
sbb
xchg
stos
pop
fidivl
mov
pop
mov
fwait
aad
adc
or
popa
or
cmp
mov
mov
xorl
sbb
jl
negb
mov
in
fwait
scas
mov
lret
fisubrl
jle
call
jo
cmp
cmp
sub
dec
dec
out
lock
cli
popa
add
push
add
fsts
push
daa
repnz
mov
pop
test
outsb
stos
clc
xor
dec
popf
clc
lods
jecxz
pop
pusha
inc
out
ja
sbb
lahf
bnd
orb
mov
mov
mov
cmpsb
cmc
es
es
out
add
or
xor
out
popf
lret
dec
je
and
dec
clc
out
inc
dec
popf
shlb
mov
pop
push
jge
mov
adc
jle
add
or
jle
aas
mov
add
mov
jl
gs
pop
cmpsl
jge
dec
test
or
scas
mov
sub
stos
pop
int3
arpl
cmc
or
xchg
or
pop
loop
std
push
mov
or
daa
pop
out
call
sbbb
sbb
pop
sahf
insl
jle
and
mov
xchg
add
adc
mov
std
jp
out
lds
aaa
pop
icebp
mov
clc
sub
dec
mov
ds
xor
pop
out
mov
neg
mov
ja
pusha
push
sbb
sub
cmp
add
enter
lcall
push
xchg
jle
stos
mov
xor
pop
sti
into
mov
neg
cwtl
subb
pop
dec
mov
cmp
fsubrp
add
in
fmul
aas
outsl
xor
loopne
lahf
xchg
ret
out
jbe
inc
mov
mov
shlb
outsb
mov
mov
adc
push
pop
sbb
push
pop
push
jae
jge
jmp
xlat
mov
mov
jl
lahf
jns
push
and
jne
pop
jg
js
stc
mov
push
mov
cmp
int3
in
mov
push
je
lcall
push
adc
xor
mov
les
sub
dec
dec
push
fldenv
movsl
movsl
mov
and
jns
mov
into
rorb
repz
inc
jmp
cld
mov
sbb
aaa
scas
insb
push
push
push
or
bound
fdivp
mov
jne
sbb
movsb
popa
push
mov
push
imul
add
mov
data16
bound
jns
fdivp
sub
jl
shlb
sbb
xchg
mov
lock
in
and
adc
xor
mov
lret
movsl
pushf
rcl
mov
jo
mov
test
rcl
repnz
filds
mov
push
xor
pop
push
add
clc
adc
jmp
out
add
jle
xor
cmp
cmp
jno
jns
stc
push
mov
xchg
scas
hlt
ja
aas
jecxz
scas
mov
or
sbb
popf
sub
in
sbb
pop
pop
popf
ds
pop
jb
sub
mov
adc
sbbl
fbld
and
mov
pop
outsl
pop
out
movsb
mov
ds
push
rorl
dec
lcall
out
mov
call
push
mov
std
mov
dec
mov
add
sti
jmp
scas
test
pop
and
push
mov
or
jge
mov
mov
push
push
mov
or
dec
cmp
call
xchg
mov
cs
pop
xchg
lcall
test
sub
cmpsb
mov
dec
insb
pop
fwait
ss
pop
jecxz
adc
or
sbb
fcomps
sti
loope
and
fdivs
adc
cltd
and
mov
jb
cli
rol
fwait
mov
lds
or
in
ss
mov
repnz
xor
mov
xchg
or
jp
dec
lahf
mov
fs
sub
mov
jp
dec
das
loopne
jb
stos
faddl
mov
daa
outsl
jle
mov
subl
call
aam
mov
inc
ss
adc
clc
pusha
mov
ds
popf
lds
push
pop
jb
push
test
jl
in
mov
jl
adc
lret
jnp
fnstenv
cld
test
mov
jns
icebp
and
lret
jl
in
mov
fs
xor
xor
es
gs
stc
bound
or
ret
int
in
outsb
cmp
fldl
sbb
idivb
cmc
sbb
imul
loop
fildl
aas
mov
test
sahf
or
mov
in
dec
push
outsl
into
js
push
aam
bt
mov
pop
jnp
or
xor
xchg
mov
out
push
bswap
xchg
test
add
loopne
out
cs
in
push
mov
sbb
jle
mov
stos
in
sahf
inc
cmp
pop
add
rcrl
aas
sbb
scas
into
fs
mov
mov
sbb
pop
sbb
sbb
aaa
iret
jns
lds
sbb
or
in
in
sub
imul
xor
dec
pop
push
push
je
cmp
push
pusha
push
repnz
fistpll
jne
nop
jbe
popf
sar
outsb
bound
arpl
mov
push
fcomp
pop
pop
fs
clc
lods
enter
pop
mov
mov
test
out
push
xchg
dec
xor
dec
jb
ja
loope
mov
jmp
mov
test
add
mov
sbb
xchg
push
xor
lcall
hlt
into
xorb
in
inc
mov
ret
xchg
aad
ja
dec
movsl
inc
push
jne
xchg
movsb
xchg
sub
xorb
and
jno
inc
inc
test
sahf
popa
aaa
lret
lds
or
mov
mov
in
add
fidivl
jo
adc
mov
vmptrld
dec
and
adc
pop
cmp
or
nop
add
imul
pop
push
scas
cltd
pushf
mov
std
mov
mov
imul
and
outsl
cld
data16
fs
mov
shrl
xchg
orl
lock
dec
sbb
fiaddl
xor
cmp
test
in
jnp
pushf
negb
jp
sub
sahf
pusha
popf
and
xchg
fldenv
mov
loope
repz
sarb
cmp
imul
mov
mov
js
into
jge
or
repz
pop
andb
sbb
sarb
mov
mov
or
popf
add
lds
dec
ret
in
jp
imulb
call
fwait
test
lods
mov
mov
or
lods
adc
xchg
sbb
push
xchg
je
mov
sbbl
out
sbb
sbbl
adc
pop
adc
mov
ja
clc
mov
and
loop
int3
test
sbb
cwtl
repz
bound
mov
jnp
out
cwtl
or
jb
mov
loop
adc
cmpsb
add
xchg
call
adcl
iret
mov
jmp
sbb
lock
fwait
mov
adc
scas
stos
adc
lea
daa
les
adc
jp
adc
out
add
insl
sbbb
mov
rcrb
mov
and
sti
push
xchg
loope
daa
sahf
dec
xor
push
sbb
js
sti
lahf
xchg
or
out
mov
popa
movsb
movsl
orb
enter
aaa
cmp
push
dec
into
mov
xchg
or
xorb
shrb
pop
mov
mov
movb
sahf
xor
sbb
fisttpl
push
cli
xor
pushf
or
push
repnz
or
and
pop
lds
aad
mov
cmp
in
pop
ds
jno
sub
push
sub
push
cmpsb
pop
loopne
mov
stc
ja
mov
xchg
and
push
fs
fcompl
and
or
mov
dec
and
add
dec
dec
push
dec
sub
jo
nop
mov
push
sbb
cmpsb
out
inc
daa
enter
jmp
or
ss
cmc
mov
push
pop
clc
adc
leave
add
dec
adc
leave
stos
cmp
sbb
stos
sbb
bound
inc
aam
push
jl
mov
jne
cmp
jp
lcall
insb
xchg
cmp
xorb
xor
push
jle
add
nop
adc
mov
daa
and
jnp
ja
xchg
daa
push
aaa
sbb
stos
iret
cmp
ja
cwtl
mov
add
lahf
dec
jl
mov
sbb
ret
xchg
call
mov
shlb
sahf
clc
and
pusha
mov
mov
call
fxam
and
lret
add
mov
push
bound
jbe
popa
mov
dec
jle
shll
or
jmp
out
xchg
lods
mov
lcall
lods
adc
lock
push
pop
mov
sbb
cmpsb
aad
mov
cmp
sub
mov
cltd
push
sbb
icebp
int3
sbb
push
outsb
xor
subb
cmpsb
dec
lea
inc
xchg
std
in
sti
loope
inc
icebp
lret
jl
rcr
xor
xchg
aad
sbb
cmp
pop
icebp
and
jg
jbe
xchg
and
leave
pop
in
fimull
subl
inc
cmp
enter
ret
daa
pop
jg
ret
dec
cwtl
divb
xchg
mov
mov
mov
cmp
mulb
jle
je
jnp
fisubrs
pop
xor
dec
ss
jmp
mov
or
out
fidivrl
int3
mov
pop
iret
sub
push
xchg
rol
inc
inc
nop
xchg
jne
pushf
dec
fcoml
into
pop
push
test
call
ret
mov
jp
mov
insb
and
ja
mov
adc
inc
aas
das
movsl
gs
jns
mov
outsl
xlat
sti
xchg
pusha
add
sbb
jnp
xchg
pop
movsl
mov
enter
mov
push
pop
ljmp
pop
and
outsb
vpshaq
dec
sbb
adc
push
lock
ror
pop
mov
sbb
dec
test
icebp
push
dec
jl
nop
cmp
mov
nop
out
jmp
push
test
ret
push
movb
pop
pop
push
clc
lret
pop
dec
fnstenv
xchg
gs
mov
out
and
xchg
in
shlb
jge
xchg
fwait
xor
mov
nop
fwait
cmpsl
imul
aad
or
and
stc
dec
dec
mov
lcall
movsl
in
fnsave
inc
cmc
fdivrp
or
pop
scas
xchg
testl
cmp
dec
repnz
adc
pop
sahf
mov
pop
inc
and
imul
xchg
cs
cld
std
mov
sbb
pushf
fnstcw
aas
rcl
orw
lcall
dec
fwait
ss
xchg
push
pop
data16
in
push
ret
in
jge
pop
add
pop
test
lea
xor
push
jge
dec
lds
stc
sti
inc
rcrl
nop
xchg
in
mov
mov
dec
pop
rcrl
mov
shl
mov
pushf
mov
rorb
sub
repz
in
lds
lods
cmpsb
xchg
leave
mov
dec
mov
test
outsb
sub
xor
and
fdivrl
sub
dec
mov
xchg
push
ss
xor
xchg
mov
int3
inc
push
addr16
cmc
inc
inc
xchg
mov
int
js
and
dec
stos
outsb
sbb
out
push
imul
int3
dec
repz
dec
adc
mov
mov
je
test
out
call
test
shrb
or
cmpsb
add
movsb
and
divl
xchg
jg
xchg
xchg
lods
pop
movsb
mov
sahf
popa
rcll
jns
enter
out
cmc
fwait
gs
xchg
xchg
test
mov
xor
mov
add
test
jle
or
shl
lods
dec
popa
clc
ja
or
add
in
mov
mov
jge
lods
arpl
sysret
out
test
in
div
xor
daa
cmc
aad
psubd
jp
in
in
adc
ja
decb
lret
lcall
in
inc
enter
lods
mov
mov
roll
sub
jbe
inc
mov
pop
push
mov
pop
inc
mov
push
jbe
xor
lock
and
stc
sbb
fimull
sbb
pop
add
lods
dec
ljmp
das
mov
mov
dec
in
shl
adc
mov
pop
and
dec
dec
imul
push
xchg
xchg
cmp
xor
lds
shll
fxch
cwtl
ja
xchg
sub
cmp
fwait
mov
lods
push
scas
sub
jecxz
in
xchg
dec
mov
les
out
test
fistpll
dec
xor
cwtl
fs
sbb
stos
dec
les
and
push
add
add
and
jle
nop
ds
ret
sub
xor
or
xor
mov
rcrl
out
mov
jmp
cmp
leave
lods
push
xchg
scas
jmp
and
pop
jg
mov
push
das
xchg
mov
in
cs
test
lret
fstpt
dec
mov
or
jge
mov
shrl
shlb
mov
mov
pop
sub
shll
mov
sbb
or
push
lock
xchg
push
or
jg
jno
sti
jo
fbstp
mov
bound
and
pop
mov
mov
and
arpl
fcmovnbe
add
lcall
fs
fldenv
xor
shrb
dec
movsl
aam
push
frstor
sbb
fwait
int3
mov
sarb
es
inc
icebp
or
mov
sti
and
push
ds
in
out
scas
lcall
jns
jae
icebp
ja
mov
rolb
aas
sti
fnstcw
push
paddsb
lcall
or
in
or
mov
std
and
or
mov
jecxz
sub
mov
jae
jl
mov
lds
pop
iret
pop
and
clc
mov
xchg
lea
insl
test
les
lret
push
movsl
stos
icebp
iret
mov
pop
cwtl
xchg
or
sub
push
lcall
cmp
mov
sub
call
mov
dec
fucom
jbe
xor
sbb
lret
dec
sbb
inc
out
cmc
jno
loope
push
addr16
jno
or
cwtl
hlt
mov
pop
verr
dec
pop
ret
int3
mov
jbe
jno
shlb
sahf
push
jle
mov
decb
cs
jmp
arpl
ret
mov
pop
dec
or
test
pop
pop
loope
insb
push
ja
sub
stc
and
pop
xchg
xor
sub
inc
mov
icebp
notb
xchg
sub
rep
cmp
push
push
xchg
sbb
dec
adc
gs
cmp
jl
clc
fsubr
outsb
out
adc
loope
mov
push
push
or
jp
cmp
add
cmc
mov
mov
ds
fsubrp
std
fdecstp
pop
push
jae
push
xor
jno
push
inc
mov
lods
test
inc
adc
or
mov
aaa
aaa
add
iret
insl
gs
lock
xor
aas
mov
mov
jmp
sub
imul
adc
or
pushf
lret
adc
aad
shl
outsl
xor
rcl
jp
push
sbb
mov
les
adcl
mov
stos
or
jnp
add
xchg
mov
lods
mov
icebp
cmp
in
add
arpl
mov
cld
inc
add
sub
jmp
add
sbb
ja
jmp
insb
gs
jo
imul
mov
mov
push
cltd
lock
sahf
jae
add
or
pop
inc
xor
push
lods
jno
push
jmp
push
les
add
lcall
iret
cmp
cwtl
mov
pop
push
enter
and
pop
mov
jp
mov
sbb
jb
inc
gs
out
ljmp
pop
ja
ja
xorb
nop
jb
cmp
pop
add
das
mov
in
sbb
xor
in
lea
std
in
jo
jnp
fwait
cmpsb
mov
xchg
sbb
or
add
jns
mov
movsb
cmp
jb
aas
dec
push
lret
xchg
pop
cmp
jne
cmp
call
ficoms
jae
imul
lock
mov
test
pop
pop
jmp
mov
inc
cltd
cmp
or
mov
mov
mov
test
sbb
jno
sub
sub
and
or
pop
int3
pop
and
jmp
xchg
pushf
xchg
es
or
jge
out
sbb
ficompl
les
bswap
shl
or
icebp
and
mov
jmp
nop
or
mov
and
imul
inc
fcom
mov
lock
fucomi
shrl
jecxz
mov
int
aam
mov
out
aam
lods
jge
adc
mov
in
enter
ds
sti
aad
adc
pop
dec
push
outsb
xor
je
pop
scas
sub
inc
lcall
insl
adc
mov
dec
and
ret
repz
mov
into
and
dec
lea
lahf
jl
lret
pop
jge
push
das
jb
subb
dec
mov
add
xchg
dec
loope
push
std
push
dec
cld
jbe
stc
or
lret
xor
nop
inc
sub
or
or
xor
cmp
pop
inc
dec
dec
enter
js
lea
shld
mov
bound
js
push
ljmp
imul
shll
mov
dec
popa
jecxz
lcall
stc
stc
xchg
sub
pushf
add
or
mov
jmp
lret
push
cmpsl
movq
xlat
pop
movsl
sbb
mov
push
pop
fsubrl
insl
je
inc
mov
mov
inc
fwait
push
loope
sbb
xor
cmp
add
cltd
jp
xchg
std
sbb
out
leave
ja
fs
cmc
rcrb
xchg
xor
out
inc
jne
int3
adc
sub
mov
movsb
sbb
fisttpll
fists
xchg
bound
mov
nop
ja
and
cmpsl
xchg
test
ja
sub
std
inc
add
test
xchg
outsl
in
mov
fnstcw
ss
xchg
push
jmp
out
jecxz
lock
pushf
es
mov
sbb
cmp
mov
cmp
adc
and
inc
sbb
dec
sahf
dec
jbe
xchg
add
add
or
jg
dec
cli
pop
jp
mov
push
mov
enter
pop
dec
xchg
mov
add
mov
push
jnp
mov
xor
xchg
or
add
shll
daa
aad
inc
fldcw
das
dec
sub
imull
sti
mov
in
daa
push
jmp
stos
sub
pop
mov
push
pop
jge
ja
pop
mov
test
sbb
or
xor
sub
cmp
jmp
pop
push
push
xor
xchg
fsubrl
fbstp
mov
mov
cmp
pop
dec
xor
and
xor
rorl
js
jne
xor
lahf
cmp
pop
mov
ret
push
repnz
push
pop
inc
cmp
dec
enter
popf
mov
xor
addr16
ret
loop
sub
cmp
cmpsl
mov
cmpsb
loopne
xchg
inc
push
lea
sub
out
mov
pop
push
insb
mov
test
adc
ret
sub
mov
test
enter
lcall
push
mov
pop
ret
fbld
insb
loopne
dec
lahf
dec
push
pop
repnz
mov
fsts
aad
fisttpll
testb
sbb
ret
pop
push
add
xchg
outsb
fdivs
dec
xor
mov
xchg
jmp
enter
in
mov
adc
mov
adc
cltd
clc
pusha
sahf
jg
leave
insl
cmpsb
push
test
adc
sub
sti
xchg
jns
push
pop
adc
sub
cmp
insl
adc
pop
mov
xchg
inc
les
stc
lea
cs
jns
sub
jle
jp
add
loopne
and
and
ss
pop
setg
inc
gs
lods
ljmp
ret
into
adcb
inc
push
test
loopne
sbb
loope
xchg
clc
add
fsubrl
mov
hlt
hlt
divl
inc
jae
push
cmp
xor
or
mov
sbb
fs
jb
mov
jmp
into
sar
inc
loopne
jno
jmp
ja
cmp
aad
add
mov
repnz
dec
insb
jle
sar
fwait
mov
cld
js
call
in
mov
enter
adc
pusha
loope
push
adc
add
cmpsb
movl
or
stos
in
jmp
adc
mov
movsb
sbb
insb
scas
jg
pusha
push
fwait
loop
je
mov
ss
nop
fisubrl
pop
xchg
out
sbb
mov
sub
test
inc
repz
cmpsb
test
lds
xchg
mov
test
cltd
pop
mov
or
sbb
ja
or
out
and
mov
xchg
xchg
mov
jb
pop
stos
push
hlt
adc
loop
xor
mov
outsl
jl
mov
movsb
jb
cltd
lret
xchg
daa
adc
pop
arpl
int
mov
sub
nop
js
addr16
incl
jo
gs
mov
and
aaa
or
push
inc
dec
mov
call
sub
jnp
sub
rolb
arpl
add
hlt
ror
jl
lods
ds
test
inc
out
lcall
lahf
hlt
cmp
lods
or
push
mov
mov
sub
or
rorb
into
dec
stos
mov
pop
mov
test
add
mov
stc
rolb
dec
jb
rcll
add
xchg
out
fnstenv
add
pop
pusha
jns
popa
cmc
insl
and
nop
rcl
aaa
std
je
mov
inc
sahf
xchg
inc
and
lock
pop
test
adc
dec
les
and
into
xor
xchg
leave
sbb
fstpl
mov
nop
push
mov
xor
push
jg
jne
push
jo
mov
test
sbb
jae
dec
xchg
inc
dec
shlb
pop
cmp
sahf
mov
hlt
pop
jl
cmp
mov
out
push
ss
loope
dec
sbb
fs
jno
mov
and
adc
push
scas
arpl
vpsubq
sub
jecxz
and
mov
sbb
gs
ret
push
lret
push
arpl
xor
push
mov
add
test
adcb
arpl
sbb
int3
push
lods
push
mov
cmpb
aaa
iret
cltd
mov
mov
xchg
and
sbb
fstl
xorl
mov
dec
in
aam
aas
push
jnp
jnp
or
repz
and
adc
push
mov
jmp
and
sub
orb
fistps
gs
jne
add
sub
pop
stc
fcoml
dec
sbbl
mov
cmpsb
mov
mov
or
and
xor
jmp
xor
mov
add
jae
push
adc
push
and
push
inc
ss
and
cmpsl
nop
mov
cmc
fwait
or
int
xor
popw
cli
aaa
rol
out
int
push
jge
cmpsb
int3
movsl
mov
inc
jecxz
mov
mov
sbb
incl
repnz
daa
movsl
shl
in
fcmovnb
lret
xor
ret
or
in
out
or
in
mov
jne
push
mov
xor
or
cmc
cmp
dec
pcmpeqb
repz
dec
mov
add
rolb
push
data16
iret
cmp
add
sub
aas
jg
sbb
cmp
pop
inc
mov
je
sbb
mov
call
mov
outsb
lret
dec
inc
push
das
leave
xlat
and
test
ja
loop
xchg
mov
lahf
jge
sbb
es
add
mov
rcrl
lock
push
je
mov
sbbb
sarl
ficoms
jg
cli
or
cs
scas
mov
inc
hlt
out
ficoml
pusha
mov
out
mov
xchg
data16
sub
fidivrs
mov
pop
jb
in
rclb
push
pop
imul
adc
push
cld
fistpl
shrl
pop
and
nop
sbb
mov
jp
ret
push
lea
add
cmp
gs
cli
adc
loope
or
push
adcb
lcall
xor
add
push
and
loopne
aam
fxch
cmp
jle
ljmp
les
pop
xlat
mov
mov
imul
mov
cmp
and
sbb
dec
mov
mov
mov
iret
jl
add
movb
aad
outsl
cmp
push
je
and
xor
lds
mov
pop
imul
cmp
int3
inc
std
mov
mov
cmp
dec
pusha
test
adc
xchg
jge
adc
sbb
fs
push
cltd
dec
hlt
jbe
xchg
xlat
fistpll
stos
xor
pushf
addr16
push
cmp
into
cltd
daa
cmp
dec
inc
stos
test
xor
sbb
rcll
xor
repz
jne
sahf
jl
mov
call
sbb
inc
ljmp
into
sbb
cmp
xchg
icebp
push
xchg
cltd
jne
add
addr16
jne
sarb
das
mov
mov
push
mov
mov
out
push
das
push
lds
test
jecxz
and
mov
fs
dec
loope
popf
add
stos
lret
dec
push
jbe
push
enter
rcll
or
ffreep
adc
mov
push
dec
fidivl
pop
movsl
aad
sbb
and
adc
mov
mov
ret
lea
ja
sti
fcmovnu
sarl
mov
jl
and
inc
out
inc
incb
inc
aam
push
imul
stos
into
out
repz
add
ds
aam
lock
scas
sub
or
push
aam
and
jl
jnp
jns
dec
daa
sbb
xor
mov
scas
xchg
inc
inc
jae
inc
pop
flds
pop
scas
mov
cmc
hlt
sub
adc
andb
mov
enter
jb
mov
mov
enter
in
xor
jno
iret
and
xchg
dec
daa
mov
xor
mov
cmp
lods
lock
out
jp
cmp
fisubl
pop
std
orb
or
xchg
push
sbb
adc
aas
mov
ds
mov
xchg
icebp
add
ss
out
out
xor
lock
fdivs
stos
cmpsl
jl
stos
out
loopew
cmp
aas
mov
mov
shlb
je
insl
adc
pop
jnp
lcall
orl
xchg
ret
mov
xchg
call
cli
call
pop
inc
sbbb
cmp
pop
bound
loope
imul
xchg
cwtl
cs
inc
cld
popa
mov
adc
inc
mov
lcallw
inc
jb
xchg
mov
cltd
jecxz
add
je
mov
mov
mov
test
repz
sub
fs
pop
xor
stos
cmc
test
mov
ror
xchg
xor
sbb
ret
cmp
in
clc
inc
jb
bndstx
pop
xchg
fdivrs
push
les
inc
mov
in
lods
fnstcw
mull
leave
ss
mov
pushf
mov
add
vcvttsd2si
into
mov
xorl
sbb
push
cmp
cmp
adc
pop
pusha
push
stc
fs
jbe
fcomps
sbb
and
inc
daa
mov
popf
xor
cli
push
les
sbb
sub
inc
lret
scas
dec
repnz
bound
push
les
xchg
jg
jg
nop
dec
sub
cmp
jno
cmp
sahf
rolb
shl
sti
mov
maxps
rolb
jno
fstpt
repnz
adc
fidivrl
xor
pop
sbb
push
stos
add
or
daa
daa
sub
or
rcrb
int
push
fisubs
int3
fs
out
push
adc
dec
jmp
push
popa
push
xchg
outsb
xor
jno
loope
pop
in
xor
and
and
push
test
push
jmp
clc
ficompl
or
jmp
lcall
fs
add
pop
scas
outsb
dec
sbb
push
mov
mov
repz
pop
insb
dec
pop
adc
inc
inc
mov
jle
inc
outsl
jmp
pop
insb
sahf
in
mov
jbe
sub
lock
sub
test
in
pop
push
push
repnz
call
jo
mov
rcl
mov
mov
das
mov
mov
in
inc
popf
ret
and
and
add
sub
sub
int3
cmpsb
movsb
ficomps
hlt
cmp
rorl
pop
or
adc
fwait
movsw
jns
mov
daa
insl
cmp
gs
xlat
and
add
test
call
outsb
xor
xor
pop
data16
cmp
movsb
lods
xchg
xchg
cli
popa
pop
mov
inc
ret
sbb
sbb
scas
xorl
inc
sarb
adc
jne
inc
addb
adc
sub
repnz
gs
lds
add
xor
inc
mov
in
stos
jge
pop
xchg
xchg
sar
push
cli
sbb
jge
mov
loope
ss
lds
sub
push
jb
or
int
pop
inc
xchg
push
cltd
ss
mov
jecxz
fildl
xchg
cmp
leave
loopne
lods
mov
add
daa
fmull
insb
jns
fs
mov
cwtl
sbb
call
or
mov
inc
aam
data16
cmp
rorl
cmp
negb
ret
lahf
push
and
adc
ljmp
fsubl
sub
loop
jle
and
sub
cmp
pop
jbe
push
add
hlt
sarl
fs
dec
sbb
xor
jno
repz
add
push
pop
mov
les
std
lahf
and
sbb
aam
xor
incl
fcmovnu
into
mov
pusha
cmp
hlt
jl
add
dec
lock
fsubrl
cmp
fs
daa
push
out
push
sahf
sbb
sahf
ret
sub
cmp
mov
fsubl
addr16
adc
push
pop
int3
adc
jb
decb
pop
dec
bound
xor
mov
mov
fsubs
mov
and
int3
xchg
cmp
xor
sar
mov
xor
in
sub
sub
into
jl
adc
scas
and
mov
push
ljmp
andb
pop
loop
mov
jne
js
jge
jns
cmp
mov
movsb
aaa
push
jne
shrb
cmp
sub
popf
adc
sbb
leave
sbb
icebp
fcompl
ret
out
push
in
je
mov
cmp
cwtl
js
mov
dec
push
mov
fists
stos
jne
jns
dec
or
fldcw
mov
cmp
rcrb
sub
push
daa
shll
in
and
mov
mov
out
mov
xchg
sahf
push
xchg
jb
imul
dec
je,pn
push
ret
push
sub
orb
mov
mov
cwtl
jnp
mov
arpl
repnz
or
call
insb
fnsave
mov
push
pop
xor
and
bound
hlt
fdivrs
sub
popa
xor
sahf
mov
xchg
aam
sub
arpl
adc
leave
ret
mov
cmp
xor
push
rcrb
lsl
ss
xor
mov
repz
fldt
out
fcoml
mov
add
data16
sbb
push
adc
mov
adc
mov
sbb
repnz
ljmp
jb
sbb
inc
out
mov
push
out
scas
xchg
lcall
pop
out
jb
jo
sahf
sbb
or
sub
repz
cmp
cmp
lods
pop
xchg
lock
gs
fisttps
imul
and
jbe
cwtl
mov
push
and
ljmp
xchg
cmc
inc
sub
stc
mov
or
test
mov
jo
inc
lods
xchg
inc
dec
addr16
and
inc
adc
stc
and
in
cmp
jb
orl
mov
mov
jne
movsb
fs
push
int
mov
hlt
mov
inc
aaa
shll
jnp
mov
cmc
pop
or
xor
push
into
orl
add
xor
les
and
lds
jbe
cltd
std
enter
cltd
iret
sbb
and
stos
dec
jl
sahf
push
sbb
push
test
fs
sbb
pop
inc
mov
lret
xchg
sub
lea
ljmp
data16
mov
lret
scas
and
xor
push
mov
addb
pop
push
clc
add
cmp
jg
arpl
inc
ss
jnp
fsubl
fisubl
adc
jae
shr
mov
pop
sub
inc
push
lret
mov
arpl
push
cwtl
sbb
xchg
xor
in
xchg
xor
es
adc
test
arpl
test
sbb
pop
mov
ss
aam
adc
outsb
movsl
push
test
sbb
or
sahf
mov
push
mov
subb
xorl
cmp
clc
dec
mov
inc
and
mov
jmp
push
orb
inc
push
xchg
mov
pop
aam
arpl
divb
xchg
lods
sbb
jecxz
dec
imul
xchg
addb
push
sub
sub
test
inc
repz
pop
sub
add
mov
dec
js
mov
sub
fisubs
cmp
mov
xor
dec
in
je
sbb
out
outsb
aas
shlb
add
pmovmskb
mov
shll
inc
pusha
fmul
insb
js
add
jae
loope
in
aad
inc
je
lock
xchg
and
fidivrs
repnz
or
inc
push
xor
call
sub
ret
sbb
movsl
or
mov
fcoml
mov
mov
shrb
jg
js
mov
mov
fdivrs
bound
cmp
or
fcom
cs
xor
arpl
in
xchg
popf
aam
leave
xchg
sbb
inc
dec
lret
mov
push
sub
lret
jl
inc
loop
out
inc
dec
insb
in
xchg
pusha
shll
mov
mov
sub
or
jle
or
stos
sbb
out
jecxz
mov
je
int
das
dec
push
mov
push
adc
jge
jecxz,pt
or
nop
scas
inc
mov
rorb
cmp
xchg
std
sbb
mov
and
ja
push
dec
leave
jo
sbb
xchg
dec
jl
loope
adc
adc
add
int3
pop
dec
outsl
cmpl
mov
xor
pop
js
cmp
pop
push
pop
sub
psrld
outsb
xor
test
or
int
out
jno
and
test
daa
pop
fimuls
stc
repnz
inc
aas
lret
rorl
cmp
inc
inc
add
lds
dec
jge
push
fwait
mov
pop
or
stos
push
push
stos
sub
fsubrp
daa
es
test
std
loopne
pop
cld
stc
jmp
sbb
imul
mov
push
les
movsl
test
push
pop
aad
sub
pop
dec
cmpsl
loop
shrb
out
or
dec
or
sbb
outsl
jg
in
out
or
adc
lock
data16
xor
nop
sbb
in
fisttpll
and
sbbb
pop
jmp
mov
in
out
inc
xchg
aas
test
xor
lock
jmp
dec
das
add
mov
cmovns
ss
sbbl
mov
stc
jb
dec
outsl
mov
cmp
push
push
dec
add
add
bound
fmul
cmp
ficomps
xchg
dec
gs
inc
sub
mov
mov
out
setp
cli
dec
imul
push
dec
dec
leave
mov
sar
xchg
mov
cmpsl
dec
add
stos
add
in
fwait
out
fcom
mov
inc
add
adc
adcl
clc
push
lods
cmp
jecxz
cmpsb
push
xchg
clc
dec
xchg
or
sbb
leave
mov
fisubrl
loop
xchg
daa
push
iret
jb
sub
aam
dec
sub
lcall
push
addr16
inc
mov
mov
and
add
lock
jecxz
and
push
jns
pop
jnp
bound
shrl
lahf
push
ss
jbe
mov
adc
and
bsr
push
adcb
xchg
push
shll
push
loopne
clc
cmpsl
js
test
mov
insl
mov
pop
testb
pop
out
inc
cmp
adc
lahf
in
pop
ds
push
popa
arpl
mov
les
test
shl
xor
or
repnz
cmp
int3
dec
addr16
inc
movsb
add
std
out
testl
sbb
cmp
cmpsl
icebp
mov
lods
jae
lock
jecxz
fiaddl
mov
das
mul
push
sarl
or
mov
jae
jb
fyl2x
xchg
fcmovnu
cltd
jge
xor
and
cwtl
xchg
add
fisubs
in
pop
sbb
cmp
rcrl
inc
pusha
pop
sub
add
cmp
je
test
jecxz
fstl
cmp
pop
add
pop
push
int3
aaa
lahf
lahf
xchg
add
adc
pop
jb
movsb
adc
int
inc
jle
cmpsl
rorb
add
mov
dec
cmc
cld
cmc
mov
std
jmp
movsl
hlt
stc
jno
xchg
add
stos
sahf
loopne
int
test
xchg
pop
mov
popa
sbb
imul
imul
xorb
test
sub
jb
mov
pop
bound
orb
in
mov
mov
xlat
pop
mov
mov
dec
repz
mov
orl
add
cwtl
rcll
addl
clc
cmp
mov
pop
aas
inc
stos
enter
push
out
loope
ficoms
insl
fadds
das
loopne
adc
mov
shr
xchg
notb
mov
lods
jae
imul
mov
fstl
jge
push
hlt
dec
mov
iret
xchg
jg
notb
push
bound
and
inc
pop
mov
push
shrb
pop
push
add
loope
cmp
aas
cmp
pop
xor
ss
sbb
mov
cmp
ret
data16
push
jo
dec
push
cli
bound
pop
test
or
insb
aaa
je
aad
pop
inc
arpl
fwait
fs
cmpsl
scas
movsl
cltd
pop
aad
arpl
push
jb
gs
and
lahf
enter
out
jmp
lods
or
pusha
xor
jecxz
addr16
pop
fbld
pop
mov
ljmp
std
out
mov
xchg
in
dec
imul
cmp
in
jmp
lcall
and
int
pop
faddp
jnp
inc
mov
mov
mov
fldenv
shlb
in
cmp
ror
push
in
mov
insb
dec
or
aaa
outsb
sbb
push
insb
jae
sbb
sub
push
popa
lret
jge
pop
xor
popf
int3
mov
cwtl
fdivp
hlt
mov
pusha
jle
inc
add
loope
mov
mov
sub
popf
xchg
xor
js
push
movsl
sahf
test
jns
mov
push
xor
scas
push
sub
popf
mov
pop
sub
push
add
pop
lcall
mov
shrl
stos
fcomip
es
or
sbb
aas
add
dec
push
mov
sti
loope
dec
push
add
mov
mov
je
cli
inc
add
pop
scas
mov
fadds
and
pop
inc
clc
push
repz
cld
xchg
int3
outsl
jecxz
and
push
jo
pop
incl
push
inc
pushf
test
dec
push
movsb
sbbb
out
inc
jne
and
adc
imul
ss
pop
in
lret
jp
push
and
jge
adc
jmp
xchg
stos
jmp
and
aas
and
lret
sbb
mov
out
das
stos
sbb
or
inc
js
and
adc
sbb
cmp
jecxz
jae
imul
mov
test
loope
inc
popa
imul
cmp
sub
lea
push
add
cld
lret
push
inc
mov
lret
scas
test
lea
lds
incl
gs
repnz
cltd
outsl
xchg
cmp
in
add
int
mov
sbb
and
lods
pop
aaa
push
xchg
jns
sub
cld
or
xchg
mov
dec
cmp
lods
inc
dec
leave
stos
pusha
or
sbb
les
out
lahf
inc
mov
mov
pusha
mov
xor
hlt
jne
lock
and
loopne
push
dec
int3
popa
jecxz
stos
cltd
cmp
enter
cmp
aas
xchg
mov
cld
les
push
lock
cmpsb
int
xchg
mov
sub
divl
test
and
jo
mov
fimuls
or
shrl
or
jge
sbb
cmp
push
dec
mov
push
js
sti
in
mov
popa
mov
jle
pop
add
sysenter
pushf
xchg
add
adc
lods
adc
movsb
mov
gs
leave
pop
out
xor
jg
aad
lret
add
es
mov
mov
ljmp
lret
scas
cli
adc
sbb
mov
leave
fwait
gs
xorb
push
adc
inc
add
push
fmuls
rcl
adc
xorl
dec
inc
adc
repz
rcrb
leave
dec
push
sbb
dec
push
sub
ss
in
push
popa
cmpsb
rcll
loop
jbe
or
push
xorb
int
fdivl
xchg
sub
out
test
push
subl
mov
pop
inc
inc
rcrl
jae
or
imul
or
lret
ljmp
add
fst
jle
inc
mov
popa
dec
mov
sbb
xchg
pop
adc
addr16
pop
push
lds
mov
jge
loopne
cmpsb
dec
push
pop
lds
pop
xchg
dec
clc
je
cmpsb
adc
mov
or
pop
ret
cli
jmp
hlt
out
mov
push
sub
cmp
dec
mov
in
gs
pop
pop
fcmovnu
sub
or
aas
pop
daa
mov
lods
mov
xor
aas
daa
add
in
jl
xchg
lcall
mov
mov
jns
cmpsb
testl
dec
mov
jmp
outsb
jno
pop
leave
loope
and
into
movsl
in
inc
add
xchg
xor
fcmovnbe
leave
pop
and
sarb
repnz
es
add
addr16
mov
or
sbb
movsl
pop
mov
cmp
sub
xchg
outsb
inc
pop
repz
mov
ja
cmp
pop
cmp
adc
es
inc
filds
mov
cli
cmp
aam
or
out
mov
adc
sub
sbb
rcrb
lds
xchg
lds
sub
inc
mov
rcrl
push
inc
repz
cmp
inc
xor
imul
jmp
lods
testl
outsb
dec
cmp
pop
lods
cld
imul
mov
xchg
sbb
in
pop
dec
jb
pop
add
pop
movb
nop
fwait
sub
or
xchg
in
int
insb
mov
loopne
mov
jb
les
or
icebp
mov
push
dec
sbb
popa
les
pop
loop
je
aas
add
mov
jbe
es
or
mov
rep
test
in
in
nop
aad
inc
fldt
scas
shl
xchg
ret
lcall
or
enter
mov
push
xor
rcll
xor
rolb
adc
add
sbb
ret
mov
popa
add
inc
mov
test
add
cmc
dec
shll
push
inc
aad
xchg
loope
es
fcoms
adc
repnz
loope
push
mov
xor
icebp
les
sbb
aad
push
mov
jbe
sub
push
mov
arpl
ja
push
lods
cmp
pop
test
call
ret
add
std
adc
push
lock
rcl
imul
sub
or
or
push
jl
roll
push
rcr
pusha
testl
bound
mov
fs
mov
inc
out
push
cltd
divb
insl
aam
add
mov
pusha
and
add
jge
int3
pop
xchg
inc
jnp
std
popa
add
and
repnz
insb
mov
stos
cli
push
outsb
ja
stos
add
push
movsl
mov
xchg
fcom
aam
lods
push
ret
cmc
ss
add
xorb
push
mov
mov
dec
push
sbb
sti
sub
inc
into
mov
sbb
ja
clc
xchg
pop
push
and
lcall
int
outsb
pop
xchg
xor
jp
int
pusha
or
les
nop
test
mov
push
xlat
adc
mov
add
pop
inc
jge
dec
pop
mov
fcoms
xor
out
sub
sub
xchg
xor
xor
sub
call
pop
dec
sarb
mulb
xor
in
lds
test
in
scas
lcall
daa
or
cmp
jle
or
pop
mov
sbb
push
std
pop
push
inc
inc
xor
mov
enter
push
add
inc
cltd
mov
mov
enter
mov
sub
daa
mov
jne
jp
imul
pop
into
push
or
cmp
push
dec
les
xchg
push
mov
loopne
jle,pn
mov
stos
inc
mov
mov
in
pop
js
pop
cmp
mov
mov
in
sub
push
push
adc
push
out
inc
mov
push
je
jmp
aad
fisubrs
xchg
xor
shrb
jle
icebp
pusha
inc
xor
sbb
daa
in
in
dec
inc
fs
push
xlat
jg
xchg
outsb
gs
imul
stc
loopne
xor
shll
dec
lahf
mov
jae
push
jns
pop
push
daa
les
push
sbb
push
pop
testl
fadds
fwait
cltd
pop
icebp
repnz
aas
mov
repnz
ss
mov
imul
test
sahf
dec
test
aam
rolb
mov
cmp
std
cmp
out
inc
inc
xchg
dec
jmp
cld
dec
sti
pop
dec
les
inc
lcall
scas
inc
mov
popf
loope
cmp
lcall
xchg
mov
mov
nop
add
repz
jp
xor
adc
test
xchg
xlat
cmp
mov
adc
xchg
imul
pop
cmpl
inc
popl
or
push
icebp
fiaddl
add
push
mov
mov
ss
pop
xor
pop
aam
ja
fwait
cmp
test
pop
cmp
fsubp
js
lods
ljmp
push
call
lea
int3
jmp
loop
mov
das
cmp
mov
mov
in
repnz
das
mov
mov
pushf
and
mov
jno
punpcklbw
inc
jmp
das
mov
pop
xor
imul
mov
ret
xor
dec
xor
fisubrs
xlat
int
sti
push
sahf
mov
subb
pcmpgtb
call
add
loop
xchg
enter
pop
roll
or
xchg
xchg
jno
aad
add
jg
ds
add
aas
sbb
jno
out
inc
fimull
add
pop
sbb
pusha
cmp
mov
pop
or
mov
cli
loopne
inc
mov
sub
pop
cmp
add
lret
stos
insb
mov
jns
pop
jns
hlt
sbb
jo
mov
jnp
adc
aas
loope
inc
test
add
inc
ja
aas
je
mov
int
fs
inc
cmc
imul
sbb
jge
push
movsl
dec
sub
adc
cld
out
sbbb
cmp
mov
push
xchg
xchg
lret
ds
repnz
pop
jae
aas
into
inc
mov
cmpsl
inc
pop
scas
mov
sub
out
mov
mov
mov
sbb
mov
jmp
nop
insl
and
outsl
pop
aam
popa
and
mov
sbb
sbb
pusha
shlb
cmpsb
bound
es
xchg
or
test
mov
iret
mov
xor
lea
push
shlb
xor
dec
scas
repnz
push
cmp
test
jmp
push
jmp
mov
das
fucomip
scas
add
fsubrs
popf
mov
jle
gs
adc
inc
arpl
lods
and
xor
movsl
shll
rcrb
sbb
lock
pop
stos
push
loopne
pop
loop
push
and
rcr
cmp
xchg
std
push
and
adc
jl
jno
sbb
in
xor
mov
lods
push
out
or
fneni(8087
daa
out
les
roll
sbb
lahf
xchg
int3
pop
add
pop
mov
cmp
pop
mov
loop
lds
xor
and
rcr
loope
sarl
out
mov
sub
push
jecxz
mov
adc
ss
xchg
add
pop
fadds
lock
movsb
xchg
btc
jmp
ret
mov
mov
in
adc
pop
shrl
cmc
jmp
outsb
push
or
out
sarb
mov
lcall
xchg
fcoml
adc
or
cld
and
pop
mov
mov
adc
add
or
insl
mov
and
cwtl
jns
or
pop
in
stc
add
cmpsl
je
popf
sbb
mov
xchg
sbb
in
setge
jne
mov
popf
or
cmp
sbb
fsubrl
jno
iret
enter
mov
inc
cmp
pop
ja
mov
pop
jae
xchg
out
pop
lods
iret
inc
add
cwtl
dec
cmp
aaa
nop
push
mov
pop
adc
jle
fwait
mov
clc
loop
xchg
aaa
sub
rcll
xchg
stc
xchg
in
xchg
add
mov
xchg
xor
imul
mov
jbe
jp
ffreep
dec
xchg
dec
subb
movsb
or
jecxz
mov
and
pop
dec
mov
je,pn
imul
out
adcl
mov
call
shrl
push
ja
xor
mov
nop
mov
adcb
jecxz
or
iret
stos
jmp
push
stc
addr16
inc
or
mov
hlt
imul
adc
mov
add
test
arpl
mov
jns
pop
push
mov
cmpsb
daa
add
nop
jge
push
mov
inc
shrb
dec
stc
cmp
andb
inc
icebp
out
loopne
add
data16
jecxz
mov
popf
cmp
push
mov
adc
cmpsl
sti
ds
jmp
movsl
push
repz
repz
cmpsb
push
mov
inc
xor
pop
mov
mov
jne
push
inc
fsubl
push
out
sbb
dec
in
sub
mov
cld
stos
add
mov
in
jecxz
ds
in
jle
js
lods
pop
ja
lret
popa
fnstcw
xchg
fsub
scas
rcl
loope
jl
scas
inc
push
push
les
out
incb
loope
push
lret
dec
or
fisubl
in
sub
lock
in
inc
imul
test
xchg
ficomps
pop
or
mov
idivb
xchg
fcmovb
orl
test
test
aaa
dec
and
add
mov
and
xor
cmp
mov
jo
mov
bound
es
std
pop
xchg
sub
mov
xchg
sbb
out
ret
ja
fcompl
pop
addr16
jne
js
in
mov
repnz
cmp
mov
inc
cmc
jp
jo
jne
add
rcr
mov
je
cmp
leave
loopne
mov
sub
jo
inc
lea
push
js
xchg
push
xchg
xor
dec
icebp
pop
ja
and
mov
adc
insb
push
and
mov
add
mov
pushf
xchg
mov
mov
rolb
out
xor
pop
into
mov
mov
mov
sbb
push
les
clc
sbb
mov
ss
pop
aaa
sbb
punpcklwd
mov
fiaddl
xor
and
cmpsl
arpl
jge
adc
sub
les
dec
lea
bound
mov
pushf
sub
sbb
scas
push
pop
fistps
pop
mov
mov
jl
cmpsb
add
andl
ffree
mov
mov
xchg
cmp
jb
sbb
pop
scas
les
lds
roll
xchg
leave
or
jno
roll
mov
mov
xor
jno
push
push
dec
loopne
dec
or
jne
cmovbe
inc
pop
pop
mov
push
dec
or
dec
add
imul
dec
addr16
movsl
dec
xor
cmp
pop
xor
sar
lods
dec
dec
sbb
out
sbb
imul
data16
test
cmp
add
scas
popf
mov
mov
xchg
sahf
jmp
ds
lret
xchg
add
bound
cmp
mov
pop
xor
adc
imul
mov
mov
dec
jecxz
inc
jl
pop
test
mov
and
cld
test
xlat
cld
sbb
pop
jno
xchg
sbb
pop
inc
lret
lods
dec
scas
imul
stos
sub
test
imul
sub
mov
jle
outsb
xlat
mov
into
fstpt
stc
addps
and
pop
mov
adc
outsb
xchg
mov
cwtl
or
imul
pop
add
dec
cld
xchg
rcrl
test
dec
pop
shl
mov
sti
sbb
xorb
mov
mov
xor
frstor
add
mov
lret
scas
dec
aas
inc
mov
mov
and
cmc
xchg
lret
out
dec
cli
in
jo
sub
mov
pushf
sbb
popf
mov
or
imul
and
or
mov
cmp
mov
pop
addr16
sub
jecxz
add
popa
dec
dec
jae
movsb
and
jmp
aaa
dec
sbb
sbb
andb
cmc
pop
sub
int
mov
int3
adc
in
adc
rcl
or
lods
push
inc
xor
dec
adc
xchg
cmp
mov
les
jbe
inc
pop
sarl
inc
ljmp
mov
sub
pop
leave
push
push
daa
mov
dec
lcall
outsb
int
mov
fwait
or
call
push
jge
mov
outsb
mov
push
push
repz
push
adc
push
cli
xchg
sub
xor
xchg
rclb
shl
cltd
jge
and
imul
jle
daa
push
xor
sub
hlt
dec
push
jp
sub
adc
cmp
mov
mov
sub
sbb
pop
out
aas
or
mov
mov
out
cmp
jae
xor
add
fnstenv
into
fwait
pop
jae
leave
and
push
sbb
sub
testl
cmp
mov
push
sbb
inc
mov
dec
test
xchg
js
xchg
clc
mov
imul
js
outsl
xor
leave
sbb
and
lcall
jecxz
fsubrl
fwait
movsl
pop
pushf
or
into
and
cmp
cmc
ja
dec
cmpsl
fs
add
faddl
push
push
in
inc
jmp
push
sbb
jb
mov
sbb
imul
out
out
jg
mov
or
lock
outsl
test
inc
xchg
test
push
fnstsw
popa
aam
in
dec
xorb
mov
nop
mov
test
sub
jmp
inc
enter
xor
jae
lock
sub
mov
push
popa
enter
inc
jge
pushf
push
das
pop
xchg
cs
jno
cmp
mov
lret
jecxz
dec
adc
std
mov
sbb
mov
mov
push
xchg
inc
add
leave
xor
jne
lahf
clc
aaa
or
and
push
sub
aaa
mov
flds
push
and
sub
mov
xchg
sbb
add
push
jno
pop
inc
push
es
ljmp
sbb
xchg
lcall
mov
sub
lcall
cmc
aam
xchg
xor
fisubs
pop
mov
cmpsb
cmp
popf
push
jp
test
adc
movsb
popa
jmp
orl
pop
test
and
mov
mov
add
cmp
or
pop
xor
mov
nop
cwtl
faddp
push
adc
ljmp
mov
cltd
repnz
scas
push
ljmp
pop
das
scas
loop
jmp
gs
icebp
mov
xorb
xchg
or
call
adc
mov
loopne
shrb
arpl
lret
push
push
insb
imul
lods
mov
or
das
aas
pop
test
mov
out
outsb
sti
xor
out
jecxz
add
in
lock
in
or
fwait
dec
mov
mov
test
jae
mov
add
mov
cmc
in
cmp
cltd
pop
add
lret
iret
push
faddl
dec
andb
mov
inc
add
mov
stos
andb
ljmp
jmp
adc
leave
les
pause
int
ret
or
sub
and
sbb
add
jo
test
fnstsw
popa
mov
sbb
mov
add
mov
out
bound
pop
rclb
out
lret
pop
jne
mov
cmc
insl
mov
in
xlat
adc
shrl
mov
repz
out
test
or
inc
jle
dec
xchg
mov
dec
dec
sub
xchg
gs
add
lods
push
xchg
mov
cmpsl
jmp
andl
sbb
test
pop
cmp
pop
pop
and
test
push
out
inc
jge
bnd
cmp
inc
je
push
mov
cltd
mov
cmp
nop
sbb
ds
sub
push
or
imul
and
ret
sub
lds
cmp
fmull
shll
dec
sahf
mov
mov
pop
flds
push
add
lock
fs
shl
push
and
aam
ljmp
dec
test
test
xchg
sarb
ret
sub
nop
jae
gs
mov
lods
fs
fs
js
xchg
insl
push
adc
xorl
pop
sbb
daa
mov
lods
inc
cwtl
frstor
sub
push
pop
mov
cltd
and
push
mov
jmp
sarl
shrb
adc
push
nop
lea
inc
inc
into
xor
aad
test
pop
and
sarb
xchg
add
stos
sti
and
movsb
iret
sbb
lods
out
dec
fisubs
jge
inc
xor
aad
adc
es
dec
sub
hlt
jp
cld
leave
lods
xchg
cmp
lock
in
dec
faddl
mov
or
leave
pushl
ret
adc
xchg
pop
seta
test
in
sbb
out
cmp
sahf
add
jmp
inc
and
das
sbb
lods
pop
adc
push
fnstcw
leave
inc
popf
cmpsl
push
outsl
pop
cmp
mov
icebp
data16
pushf
jbe
and
test
mov
jbe
xchg
mov
and
movsb
movsb
inc
and
cs
js
fs
les
das
xchg
mov
mov
mov
xchg
dec
mov
loopne
addb
and
loope
pop
out
inc
int
call
jb
mov
mov
scas
shrb
bound
fs
inc
int3
loopne
out
mov
imul
adc
daa
push
pop
ret
clc
repnz
cmp
sbb
mov
and
ret
sub
and
cmovae
jbe
jp
movsl
das
mov
test
xchg
repnz
fs
jge
pop
dec
and
xor
shlb
pop
cmp
jne
ret
jnp
fbld
pop
repz
clc
jge
clc
push
mov
leave
add
jbe
sub
mull
or
ss
jp
adc
decb
adc
dec
imul
adc
ret
mov
loop
xor
mov
cmp
ljmp
dec
xor
and
xchg
int
lret
mov
test
jmp
mov
in
push
push
or
mov
lret
cltd
scas
mov
in
in
into
jge
in
pop
cwtl
sub
js
test
and
js
in
imul
mov
xor
push
cwtl
jmp
fwait
add
stc
jmp
pop
push
pushf
or
pop
enter
fimull
pop
insb
nop
push
addb
clc
loopne
add
fsubp
push
or
cmpl
adc
cwtl
pop
inc
hlt
psllw
out
lret
sub
sub
fxch
or
jmp
xchg
addr16
pop
test
out
mov
aad
popf
aam
mov
fs
add
lods
sti
cmpl
inc
mov
popa
hlt
iret
xchg
jae
adc
scas
movsl
fstpt
jnp
cmp
cmp
loope
pop
aad
or
imul
mov
mov
inc
stc
ljmp
sbb
cmpsb
dec
cmpl
xchg
mov
xchg
jmp
sub
or
ss
sti
jp
sub
hlt
lret
arpl
jecxz
pop
jnp
mov
sarb
ds
imul
cmc
push
ud0
sti
cmp
jp
sbb
inc
push
dec
mov
xor
xchg
andb
pop
lcall
fstpl
inc
out
cmp
pusha
xor
pop
jne
popa
inc
mov
pop
cmc
xchg
addr16
sbb
popf
stos
dec
les
jns
pop
movsb
sbb
int
or
inc
or
xor
aam
notl
xor
jne
in
or
stc
nop
jle
jo
out
aad
sub
mov
mov
test
pushf
add
xchg
xchg
lret
sar
ret
add
pop
push
pop
pop
xor
cmp
jg
push
aas
bound
aam
push
and
addr16
dec
dec
push
mov
dec
jb
pop
or
push
pop
add
xchg
or
ret
ret
in
cwtl
or
popf
test
xchg
xchg
call
rcll
jns
or
xor
ret
shr
cs
xchg
test
out
mov
cld
jmp
add
sbb
adc
xlat
jnp
xor
jno
sbb
lds
mov
ret
dec
mov
push
in
rolb
jae
push
or
pop
imul
xor
cmp
inc
mov
mov
fwait
cwtl
mov
or
fisttpl
cmp
aam
aaa
mov
outsb
inc
push
fnstenv
dec
sbb
push
fisttpl
inc
gs
adc
add
sub
repz
xchg
mov
inc
mov
cwtl
popa
in
pop
movsl
je
arpl
xchg
aas
mov
xchg
cli
sub
push
jns
dec
add
mov
mov
jp
adc
push
mov
cwtl
cwtl
stc
push
loop
cwtl
movsl
dec
cmpsl
jno
dec
xchg
mov
pop
loop
les
mov
lret
jno
mov
cltd
ficoml
lods
jo
adc
adc
daa
inc
sub
stos
inc
and
mov
hlt
inc
subb
mov
jno
mov
xor
in
fcoml
iret
mov
fmuls
shll
daa
sbb
cli
loopne
loop
pushf
add
push
inc
ljmp
mov
lret
nop
insl
aam
lret
inc
mov
and
gs
inc
out
out
sbb
push
jno
mov
scas
push
hlt
push
sub
int3
xlat
scas
mov
scas
mov
ss
add
xchg
xor
pushf
mov
adc
sbb
stc
xor
push
jg
inc
loop
test
lds
fdivrs
lret
or
adc
jg
jo
loop
sub
mov
aaa
shlb
or
jb
stos
xchg
push
push
dec
cmp
sbb
imul
loopne
ljmp
adc
dec
xor
fisttps
dec
sbb
dec
mov
mov
xchg
push
inc
add
insb
xchg
dec
jne
xchg
ss
jb
pop
pushw
push
mov
int3
jo
mov
xor
cmc
xchg
and
xchg
sbb
in
push
jle
out
xchg
inc
push
mov
outsl
dec
pop
and
pop
ljmp
jle
gs
rcll
aad
jbe
test
inc
mov
mov
jmp
or
cmp
test
ss
or
push
dec
lods
out
inc
dec
push
clc
inc
add
out
cwtl
mov
movsb
pop
add
pop
jno
negl
xor
cmp
push
in
fadds
rclb
dec
sub
movsl
scas
inc
jnp
push
arpl
scas
adc
stc
push
inc
stos
aad
shrb
add
mov
xor
clc
cmp
push
or
test
lea
jl
push
push
fs
xchg
dec
xor
sub
ljmp
lock
pop
or
mov
sub
sbb
mov
out
cmp
sti
jecxz
and
sub
insl
or
pop
push
mov
int3
mov
xlat
sbb
inc
inc
mov
add
mov
adc
out
pop
dec
xchg
scas
bound
scas
sub
or
mov
jle
imul
or
repnz
lods
std
lods
mov
repnz
xadd
push
jnp
mov
lret
bound
ret
fbld
add
fs
pop
movl
push
adc
mov
sbb
xchg
jle
xor
mov
popf
cmp
adc
pusha
add
mov
push
arpl
push
jb
addl
sub
mov
jl
add
and
or
sbb
cmp
lods
jmpw
dec
jnp
lret
sbb
cltd
jbe
or
cwtl
pop
push
or
jb
jg
push
push
ret
push
pop
and
inc
rorb
cli
mov
hlt
pushf
ret
addl
movsl
mov
aam
xor
push
jmp
shrb
mov
cmpsb
sbb
inc
pop
sub
lods
mov
jg
jnp
insb
xchg
add
mov
mov
addb
lahf
lock
test
sub
or
mov
rol
pop
outsl
imul
aad
in
stos
adc
sbb
push
data16
sbb
ds
fnstcw
lods
ret
cmp
lahf
pop
adc
add
mov
popl
adc
clc
bound
xor
fistpl
cld
mov
jnp
out
or
xchg
in
popf
ret
jle
adc
das
aam
cmpb
clc
mov
mov
or
int3
arpl
mov
loopne
and
dec
push
mov
xchg
les
shlb
push
adc
xchg
iret
dec
pusha
inc
mov
arpl
xchg
clc
fidivrl
cli
sub
jns
sbb
mov
inc
mov
leave
mov
out
dec
aad
pusha
stc
frstor
or
sub
insl
in
xchg
mov
flds
imul
jp
std
add
dec
pop
imul
enter
push
addr16
sar
jnp
or
lods
mov
mov
add
mov
cmp
and
dec
push
in
test
and
sbb
pop
dec
add
push
pop
push
inc
icebp
pusha
xchg
std
add
pop
nop
mov
ficomps
lea
cli
mov
das
adc
repnz
pop
adc
sarl
js
sbb
popa
fsubl
xchg
ret
in
lcall
inc
fsubr
cmp
pop
pushf
pop
or
mov
fwait
dec
mov
adc
sbb
cmc
fs
bound
rcrl
aas
mov
push
xchg
pop
xor
pushf
inc
stos
adc
enter
clc
repnz
xchg
push
js
xchg
mov
movsl
push
sub
sub
add
adc
jae
pop
andl
xor
into
xchg
push
or
scas
stos
and
adc
pop
outsb
test
in
lret
push
sub
push
fmull
ljmpw
or
out
jg
mov
xchg
or
iret
add
lea
aam
arpl
imul
jbe
imul
inc
movsl
xor
lds
xor
adc
imul
lds
add
test
pushf
aad
ret
dec
pop
imul
mov
inc
in
movsb
sub
xor
jne
orb
mov
or
xor
jmp
pop
lods
jg
adcb
mov
in
fmuls
out
mov
xor
cmp
and
dec
ljmp
shl
sub
rcrb
push
arpl
ss
dec
loope,pn
fs
mov
jl
inc
mov
fwait
pop
xor
sarb
popf
gs
sbb
incl
jp
je
sbb
xchg
inc
inc
movsb
iret
scas
or
nop
or
inc
test
ss
sub
sub
lods
push
xchg
dec
dec
xlat
sahf
movl
mov
stc
push
je
jge
mov
jl
cmc
xor
and
in
jecxz
xchg
lds
or
jae
shll
push
stos
insb
scas
add
aaa
add
rorb
leave
push
sub
es
ljmp
shlb
cmc
inc
push
jo
mov
sub
cmp
lahf
out
out
lods
cmp
into
add
in
inc
cmpsb
enter
push
and
or
xor
pop
jno
jae
andl
jg
adc
mov
xchg
pop
mov
movsb
cmp
push
lods
rep
jns
and
lahf
mov
mov
and
popf
fsubr
push
scas
mov
je
pop
push
imul
test
dec
jo
or
call
dec
and
or
pop
scas
add
jl
mov
lea
shlb
rcrb
lea
xchg
cmc
das
or
xor
cltd
or
mov
movsl
aam
mov
sub
lock
ficomps
pushf
xchg
sbb
xor
xor
je
adc
and
insl
aam
xchg
jg
inc
mov
ret
and
imul
sub
pop
dec
popa
scas
dec
fdivrp
addr16
fdivrs
sbb
cmpsb
int
fwait
add
mov
repz
mov
xchg
mov
pusha
sarb
inc
movsl
loop
xchg
aam
or
lods
xor
xor
pop
test
lock
jge
in
les
lds
clc
jg
inc
rclb
inc
pop
push
pop
divb
fcmove
sbb
fadds
sbb
pop
mov
shlb
stc
sub
mov
loope
lret
test
sub
xchg
pop
dec
mov
jae
mov
jecxz
icebp
pushf
test
xor
xchg
add
popa
sbb
push
adc
je
dec
mov
fstps
nop
lahf
xchg
std
cmp
test
sbb
mov
xchg
dec
pop
mov
ret
into
cld
sub
repz
sub
aad
sub
addr16
xor
cmpsl
pop
outsl
in
mov
inc
mov
stos
jg
leave
out
xor
ljmp
xchg
and
sub
pop
mov
pop
lea
mov
adc
pop
lahf
inc
or
in
push
inc
dec
push
pop
mov
cmpsb
inc
or
orl
cmp
das
addr16
mov
jg
fimull
lods
int3
push
jmp
pop
cmp
gs
and
dec
retw
imul
jmp
lahf
ljmp
jns
in
js
xchg
fistpll
loop
xor
ds
or
iret
xor
push
fmulp
roll
inc
mov
outsl
fdiv
icebp
jg
sbb
int
pop
aad
mov
rol
insb
dec
mov
xchg
mov
imul
lods
dec
sub
insl
not
sbb
and
add
vmovhps
rorl
stos
popf
fxch
cmc
mov
je
nop
inc
xchg
pop
lods
jp
sub
fxch
sbb
jg
popa
stc
add
push
and
loop
lock
inc
dec
iret
dec
pop
loope
pop
call
aad
push
pop
ljmp
lock
hlt
cld
aaa
jb
dec
push
mov
pop
pushf
mov
ljmp
jmp
test
lods
jb
ficomps
data16
push
mov
cmc
xor
and
pushf
call
pop
ljmp
xchg
aaa
push
cmp
call
jb
nop
push
scas
adc
cmpsb
mov
jo
jb
movsb
inc
mov
sub
daa
and
insl
popa
orb
sti
sub
jbe
add
lock
test
aas
mov
inc
xor
pop
gs
push
push
nop
sbb
rolb
testl
lods
mov
orl
icebp
mov
xor
adc
xor
into
sbb
mov
icebp
aad
rcr
ss
subb
shlb
and
mov
adc
out
mov
sbb
out
mov
jmp
push
add
insb
push
mov
loopne
rcl
cli
cmc
add
rcr
lahf
repnz
loope
cmp
popa
push
lcall
clc
adc
add
pop
pop
int3
push
xor
push
cltd
dec
fs
lahf
fs
or
les
mov
and
pop
lret
jle
and
jb
rolb
scas
lods
leave
std
xchg
movsl
nop
lds
scas
mov
out
mov
inc
dec
stos
jl
rcrb
or
addr16
cmpsb
adc
mov
rcr
ljmp
loope
inc
lock
mov
adc
test
xlat
dec
orb
sarl
push
in
les
add
sahf
fidivs
jp
add
mov
dec
adc
ret
push
out
int
cmp
aad
mov
add
mov
mov
adcl
call
push
push
pushf
arpl
sti
mov
mov
std
outsl
adc
movsb
xchg
sub
std
les
sarb
mov
lods
scas
inc
mov
pop
xor
aad
push
sub
mov
push
xchg
fisubrs
jb
pop
xchg
decl
push
aaa
fwait
out
add
xchg
and
mov
jo
cltd
mov
inc
mov
ficompl
out
stos
mov
jnp
sub
repnz
xchg
enter
pop
pop
rcrb
pop
les
inc
call
lods
loop
dec
out
adc
push
aam
out
adc
loopne
es
mov
lock
loop
mov
xchg
inc
sbb
and
stc
leave
or
cld
les
popf
popa
dec
and
xor
wrmsr
add
outsl
mov
pop
out
das
and
xchg
jecxz
pop
inc
pop
add
sub
sub
jecxz
jge
cmc
dec
aad
cmovb
push
out
mov
sbb
test
mov
adc
sbbl
sbb
adc
inc
out
cs
into
sti
cltd
inc
cltd
dec
pop
pushl
aas
addr16
aam
push
mov
mov
iret
jecxz
nop
lahf
add
xchg
sbb
add
outsl
pop
cmp
and
inc
push
out
mov
pop
repz
inc
push
push
mov
shrb
pop
xor
mov
lcall
loopne
popl
outsl
lods
pushf
inc
dec
mov
sub
sub
jl
in
mov
iret
xor
dec
lea
push
int
incb
pop
jo
pop
pop
sbb
xchg
addr16
jne
and
repnz
inc
xchg
dec
push
je
mov
subl
sbb
sub
adcb
add
ffreep
adc
mov
test
mov
hlt
stc
pop
rep
sbb
arpl
cmpsl
test
xchg
std
mov
jg
je
adc
adc
sub
lock
rorb
mov
scas
test
iret
test
inc
inc
ja
movb
shll
sbb
pop
cmpsb
cmp
push
xor
sub
pop
mov
test
xor
mov
insb
mov
aaa
aam
add
dec
in
out
sub
idivb
inc
cmc
push
gs
fldenv
and
adc
mov
push
cld
imul
inc
jecxz
aam
ret
outsl
jo
adc
sbb
ds
rclb
ret
inc
lcall
push
popa
rclb
xchg
outsl
jp
imull
xchg
sbb
xchg
mov
clc
sub
pusha
or
sbb
outsl
xor
popa
add
add
or
xlat
mov
test
and
dec
xchg
ds
sub
ljmp
push
ds
ss
fdivs
std
push
cli
les
adc
push
push
xor
pop
push
or
ret
mov
push
xchg
mov
pop
popa
push
push
pushl
pop
mov
cmp
es
aam
cs
push
sub
mov
inc
mov
mov
pop
test
push
bound
outsl
jge
and
jp
sub
jbe
ds
sti
or
pop
insb
outsb
jo
mov
sbb
fisttpl
pop
add
popf
test
dec
mov
lret
adc
adc
mov
test
sbb
mov
cmc
scas
jl
loop
out
jl
pop
jl
and
fldenv
dec
stc
inc
mov
xchg
sbb
stc
sub
test
mov
dec
fidivrs
fwait
dec
mov
sub
movsl
hlt
dec
mov
lret
bound
dec
cmp
dec
inc
std
popf
std
mov
int
ret
mov
dec
sbb
mov
and
and
repz
cld
test
pop
scas
jp
jo
jnp
imul
pop
push
cwtl
xchg
inc
icebp
add
sbb
jge
popa
outsb
mov
sub
xchg
lcall
mov
cmpb
mov
jbe
push
jbe
js
into
or
push
leave
sbb
xchg
sub
clc
movsl
imul
je
adc
test
push
dec
jp
gs
ss
jno
sub
insb
push
add
popa
sbbb
sti
ror
push
add
jecxz
lods
cmp
jle
fidivrs
jb
jns
cmpsl
int
shrb
jmp
pop
dec
sbb
inc
inc
mov
imul
jo
or
dec
es
mov
push
fidivs
adc
enter
mov
inc
mov
fcompl
repnz
mov
xor
mov
cmp
jae
adc
mov
ja
inc
dec
loope
mov
xchg
xor
jnp
jge
cmpsb
fwait
sub
sbb
insb
xlat
clc
testb
daa
shll
jle
push
out
cs
add
mov
mov
and
mov
cmp
mov
or
or
jge
mov
ret
add
arpl
dec
jo
je
out
pop
xor
xor
outsb
out
daa
and
mov
push
inc
inc
pop
mov
movsl
fists
enter
sbb
loopne
xlat
ds
loope
mov
push
pop
loopne
aam
or
mul
push
out
or
outsl
xor
push
icebp
xchg
out
loope
inc
sbb
fs
ljmp
jmp
jae
xchg
cmp
mov
je
aad
add
inc
out
iret
add
and
fistps
lea
inc
mov
inc
fiaddl
dec
rcrb
loope
loop
sbb
fucomp
aad
scas
push
fwait
cmp
adc
adc
pop
xchg
push
test
imul
push
in
mov
cmc
mov
sar
or
adc
mov
sbb
shl
pushf
push
pop
dec
push
push
xchg
dec
or
jnp
mov
out
lock
jg
dec
mov
es
mov
mov
scas
xchg
lds
rolb
test
mov
mov
shlb
pop
test
and
pop
sbb
cmp
test
cmp
pop
add
scas
jge
lahf
icebp
nop
sti
lods
jecxz
sub
dec
or
mov
sahf
cmp
inc
cwtl
subb
sub
dec
mov
inc
cwtl
xor
sbb
aam
dec
inc
repz
inc
xchg
jb
pop
repz
mov
out
adc
add
cmpsb
dec
sbb
lret
jmp
jnp
scas
hlt
xchg
mov
in
jmp
push
adc
lahf
push
xor
sahf
enter
xlat
bound
adc
cmp
push
jecxz
test
out
mov
jle
push
gs
adc
cltd
push
ret
lock
xor
les
sub
lods
sar
out
or
inc
mov
and
inc
shrb
aas
bound
jle
push
icebp
cmp
mov
add
in
fs
int
push
jge
jb
dec
test
outsl
xchg
sub
sub
es
ss
daa
int3
sti
jg
jge
mov
cmp
jg
pushf
dec
dec
repz
add
jmp
rcll
lods
mov
cmp
jmp
cwtl
adc
sbb
mov
imul
out
dec
sbb
pushf
idivl
inc
pop
and
adc
pop
into
mov
mov
jge
mov
jmp
js
icebp
orl
mov
jmp
mov
repz
adc
adc
xchg
out
and
dec
push
call
dec
movl
sub
mov
pop
inc
adc
mov
fldcw
test
fdivr
or
xorl
add
mov
and
inc
fdivl
push
mov
jns
pop
push
fldcw
push
pop
stos
call
sub
mov
test
stos
std
notb
xchg
mov
mov
enter
cmpsb
add
dec
mov
mov
inc
mov
push
mov
out
stc
adc
sbb
mov
ja
testb
push
and
iret
sub
sarb
leave
xchg
jne
xor
jne
push
xor
in
cmp
sbb
mov
push
mov
add
mov
push
ret
stos
mov
sub
add
mov
cli
rcll
cld
xchg
pop
and
push
shl
mov
push
shrl
movl
std
push
push
adc
mov
out
push
cmp
jg
mov
push
push
dec
pop
push
in
and
xor
nop
int3
mov
mov
mov
add
sub
jmp
loopew
inc
cs
xchg
and
lods
mov
pop
mov
ljmp
ds
aaa
fldl
inc
insl
xchg
sub
lods
in
bound
xor
test
cli
push
push
dec
and
cld
dec
jmp
jmp
lret
fists
adc
les
inc
xor
pop
or
pushf
mov
lret
xchg
sbb
lahf
xchg
cmp
lock
adc
hlt
out
stos
dec
sbb
out
lods
xlat
adc
ljmp
mov
fwait
test
insb
adc
jno,pn
sbb
jecxz
gs
mov
in
mov
mov
adc
leave
xor
mov
mov
cmp
sub
adcb
into
sbb
cld
cmp
pop
lock
outsl
iret
insb
mov
icebp
in
bound
mov
dec
sbbl
test
sbb
mov
lea
ljmp
jmp
lcall
gs
into
jmp
icebp
insl
loope
pop
bound
inc
lock
aam
jne
sti
imul
test
jg
pop
adc
cwtl
sub
stc
movsb
int3
mov
dec
pop
or
jg
jge
test
jnp
push
nop
fstpl
repnz
jno
out
stos
ds
sub
loop
inc
clc
dec
ret
push
xor
jl
movsl
fs
or
mov
inc
dec
ss
mov
sub
mov
xchg
cli
sub
loope
cmp
mov
xor
add
in
xchg
fldl
gs
pusha
dec
int
sub
dec
and
repnz
push
xchg
dec
aam
cmp
out
popa
xchg
clc
or
adcb
in
mov
mov
out
mov
cmp
and
imulb
sbb
out
cmpsb
mov
jo
push
jl
xchg
dec
repz
shl
xchg
cmp
sbb
or
loope
cmp
lcall
into
lcall
idiv
push
cmpsb
adc
mov
pop
scas
sub
push
fcomp
das
arpl
add
dec
jle
pop
xchg
enter
outsl
cmp
fldt
loope
fcomps
enter
loope
addr16
imul
pop
mov
out
push
adc
jns
nop
xchg
mov
cwtl
xchg
jecxz
sbb
push
out
insl
sub
rolb
inc
or
or
or
lods
jno
imul
xor
shrb
dec
sysret
adc
sbb
mov
movsb
insb
mov
and
sti
cmp
pop
aas
aaa
rcrb
pop
mov
adc
loop
aaa
lods
jge
jg,pt
pop
jl
scas
sbb
inc
push
mov
push
mov
iret
jno
stc
push
sub
pop
ret
lahf
sub
cmp
cmc
pop
aam
out
mov
pushf
mov
push
imul
ljmp
adcl
lods
jne
push
mov
enter
repnz
inc
into
pop
or
pop
es
sarb
out
shlb
aam
adc
fs
insb
imul
std
outsl
cmpsl
mov
xchg
pop
incb
cld
fidivl
js
roll
or
ror
pusha
and
jge
cmp
xchg
jb
xchg
es
rcrb
adc
mov
stc
popa
xor
aam
push
pop
fcoms
fiaddl
sub
or
xor
gs
icebp
xor
sbb
repz
adc
adc
pushf
call
icebp
inc
jg
adc
call
push
jle
adc
mov
push
inc
cltd
pop
out
andl
cmp
leave
stc
pop
movsb
push
sub
and
push
inc
fucomip
push
ljmp
nop
mov
add
mov
ljmp
inc
cmpsb
or
repz
ret
xchg
out
adc
das
mov
cmc
sbb
sbb
xor
lock
ret
push
sbb
sbb
clc
sbb
lds
ror
jge
mov
mov
adc
inc
dec
dec
jo
xchg
and
push
pusha
xchg
pop
adc
mov
into
push
ja
ret
add
pusha
fs
js
jge
test
nop
rcl
iret
fs
mov
fisubs
push
and
or
out
pop
and
scas
sbbl
mov
adc
mov
xlat
mov
dec
stos
or
mov
adc
call
in
mov
inc
test
out
adc
or
std
xchg
sub
fistps
repnz
add
jmp
adc
xor
dec
xchg
xchg
in
pop
inc
in
sbb
xchg
pop
aas
ds
jle
mov
sub
sbb
sbb
mov
aas
mov
inc
mov
sbb
mov
dec
adc
out
fistpll
mov
jne
fwait
sub
xchg
cmp
out
fdivrs
push
verr
mov
ds
and
sub
push
cmc
inc
or
mov
in
ror
xchg
xchg
xchg
and
fs
jo
xor
mov
sub
xchg
and
jne
bound
leave
mov
dec
ljmp
out
ja
xchg
cltd
cmp
cmp
lret
ret
and
lods
js
jo
das
and
out
lcall
xor
xchg
push
cmp
ja
mov
adc
addl
xchg
orl
mov
pop
es
repnz
mov
nop
jae
adc
push
push
popa
test
fildl
push
and
or
sbb
adc
out
cld
mov
jmp
mov
pusha
sbb
aad
or
hlt
push
xor
inc
jge
addb
lcall
cmpsb
daa
loop
mov
dec
mov
out
jns
hlt
cmp
int3
xlat
mov
notb
adc
push
jns
cmp
dec
dec
adc
xchg
outsl
xor
add
jb
xor
ret
cmc
lret
xchg
loope
outsl
aam
out
sbb
mov
loopne
loopne
push
add
daa
push
ss
nop
or
xor
mov
test
push
xor
mov
pop
leave
fadd
pusha
push
push
mov
xor
sub
nop
xor
outsl
xor
jb
push
mov
jnp
orb
rcrl
rcll
stos
out
ljmp
push
nop
cli
int3
lea
das
push
test
inc
xchg
jge
cs
xchg
loopne
in
or
aam
in
mov
xchg
repz
lods
jg
lods
hlt
addb
pop
iret
pop
sub
aam
incb
mov
inc
outsl
js
xor
adc
jb
push
mov
test
fsubs
pop
gs
xchg
cwtl
leave
clc
fisubs
mov
rdmsr
mov
and
ja
jne
mov
xchg
in
addl
add
dec
jg
cmp
or
call
int
xchg
pop
jle
push
ret
outsb
mov
mov
jl
mov
fsubrp
adc
pop
pop
ficomps
xor
in
push
sbb
push
lahf
mov
iret
test
adcl
cmpsl
adc
adc
in
push
push
adc
fwait
xchg
mov
in
jle
fld
sbb
out
lea
sbb
dec
cmpsl
dec
lock
sbbb
mov
iret
cmpb
dec
stc
aad
mov
mov
jmp
add
sbb
inc
push
dec
cmp
jecxz
mov
ficoms
clc
cltd
jno
pusha
inc
stos
jno
leave
push
testb
fbld
sarl
cwtl
int3
cmp
int3
dec
cmp
sti
ja
and
xchg
rcrb
pop
mov
hlt
jge
scas
mov
fstps
xor
test
jmp
sbb
and
out
cwtl
jnp
dec
test
cmpb
jae
cmp
cmpsl
push
bound
and
push
jno
invd
mov
mov
test
jns
sbb
test
int3
idiv
inc
push
fsubrl
out
dec
mov
in
ja
mov
jmp
or
cmpsl
mov
ds
movsl
sub
lahf
insl
pop
sub
jmp
dec
inc
sbb
pop
sbb
jns
adc
xor
stos
mov
sub
lcall
inc
lret
js
xor
push
jl
cmp
popa
push
outsb
xchg
ret
out
sbb
js
test
test
loope
pop
cmpsb
mov
lods
popf
stos
into
sti
std
in
aad
inc
incl
cli
jg
dec
push
push
add
add
fidivrl
xchg
cmpsb
and
test
sbb
pop
je
je
inc
fidivrl
xor
sbb
int3
cltd
xor
mov
or
mov
mov
inc
adc
dec
in
xchg
mov
jle
inc
xchg
shll
and
push
pop
imul
push
data16
lahf
fmull
adc
fs
jmp
mov
jl
cmpl
or
aaa
fsub
jno
in
popa
stos
dec
sub
out
adc
data16
xchg
fidivrs
or
jl
loopne
push
adc
inc
movb
arpl
dec
aas
shrl
ja
cmpsl
dec
mov
push
sub
xor
jl
jae
mov
dec
sub
adc
mov
shlb
inc
xchg
fmuls
in
mov
insb
adc
pop
and
inc
ficoml
jb
or
push
push
divl
pop
jge
inc
shrb
pop
mov
mov
sbb
xor
test
dec
ret
xchg
xchg
call
xor
in
nop
xor
mov
jne
mov
cmpsb
mov
inc
fs
je
mov
jbe
inc
mov
mov
cmp
adc
test
lods
pminsw
xor
mov
push
shrl
pushf
es
xchg
jo
mov
lock
movsl
std
clc
sub
imul
lods
push
lret
adc
pop
inc
mov
pusha
dec
mov
addb
addr16
cmp
xor
pusha
int3
in
push
pushf
pop
sbb
push
xchg
and
dec
and
repz
roll
mov
out
in
ja
cmpsl
loope
fstps
js
shll
pushf
arpl
mov
movsb
jo
lods
mov
adc
in
ret
jle
pushf
jge,pt
push
popa
cltd
nop
scas
repnz
out
dec
xchg
dec
jg
mov
xchg
nop
int
xlat
fdivp
addl
add
addb
or
movsl
sbb
lcall
movsb
mov
inc
sub
mov
lret
cli
pop
mov
popa
push
mov
push
movsl
movsb
pusha
pushf
lods
scas
sbb
lods
cmp
xchg
repnz
or
shrl
push
cmp
cmpsb
test
pop
xor
int3
mov
jns
push
add
pop
sbb
mov
sbb
out
das
fimuls
jae
jnp
prefetch
inc
xor
mov
addr16
mov
in
xchg
cs
xchg
jle
icebp
and
lahf
cmp
popa
mov
mov
pop
cld
stos
in
sahf
and
mov
ret
lods
stos
data16
in
jmp
pop
fs
fdivrs
pop
xor
divps
gs
sbb
insb
mov
pop
or
mov
mov
xchg
shll
dec
mov
mov
push
pop
out
jmp
inc
ja
dec
mov
mov
dec
es
pusha
xchg
in
mov
dec
mov
insb
push
rorl
or
and
cmp
adc
stos
jge
stc
sub
cmc
sbb
jno
test
xchg
mov
mov
push
fwait
xchg
cld
xchg
dec
cmp
test
dec
mov
or
mov
jae
test
ret
arpl
shl
adc
mov
in
roll
dec
mov
clc
xchg
and
sbb
lods
loope
lds
pop
xorb
clc
lret
enter
xor
push
sbb
pop
fwait
add
add
arpl
push
ret
sub
jo
pop
xchg
cwtl
mov
mov
cmp
xchg
fwait
cmp
adc
adc
push
xor
test
dec
pushf
shll
fidivl
xchg
mov
daa
mov
jnp
dec
sahf
lock
mov
cmp
push
pop
mov
sub
lea
stos
pusha
dec
push
cwtl
xchg
test
test
iret
mov
jg
rclb
dec
addr16
push
data16
and
mov
sti
mov
dec
jae
push
movsb
xor
push
mov
mov
loopne
test
gs
push
loop
mov
push
out
or
outsl
ret
mov
out
inc
xchg
test
lret
dec
jp
cld
mov
sbb
dec
stc
push
test
dec
sbb
iret
mov
inc
ret
subb
test
test
jae
scas
add
es
mov
idiv
and
mov
xor
jge
lcall
mov
xchg
aad
aaa
cmpsb
lahf
enter
incb
cmp
mov
pop
pushf
mov
mov
dec
test
enter
or
xchg
add
mov
out
lret
xchg
mov
ljmp
inc
and
out
sub
add
pop
push
and
sbb
popf
pushf
cmp
ja
sahf
out
sbb
aas
push
add
adc
mov
mov
ret
and
int3
fnstenv
pop
inc
dec
sbb
fwait
js
sub
incl
pminsw
cmpsb
and
mov
push
outsl
jmp
cs
sarb
outsb
xchg
jmp
outsl
ljmp
icebp
mov
outsb
lcall
jnp
cmpsb
setbe
ljmp
pop
pop
jae
or
mov
fucom
lcall
mov
enter
aam
push
daa
jecxz
mov
fildll
add
adc
sahf
sub
ffreep
dec
jl
jb
mov
sub
repz
push
fidivrl
enter
loope
xchg
fdiv
icebp
adc
cli
inc
negl
in
sbbl
cmp
adc
mov
nop
cmpsb
cmp
or
push
push
cmp
ret
sbb
stc
mov
and
test
dec
popf
fildl
xchg
inc
push
push
mov
negl
dec
ret
bound
jge
rcl
jae
shrb
ret
sub
or
add
push
mov
cmp
out
mov
pop
push
scas
jns
adc
std
pop
mov
sbbb
inc
outsb
loop
in
inc
stc
rcrb
leave
push
fistpll
iret
cltd
rcll
aas
lock
scas
loopne
push
popf
ret
xchg
mov
repnz
jle
sbb
xor
lret
cmovo
sbbl
stos
xlat
insw
push
add
xchg
and
fneni(8087
push
mov
out
lret
and
mov
stc
nop
mov
sub
cmc
jecxz
cmp
mov
sti
loopne
hlt
xor
mov
movsb
inc
das
adc
dec
scas
sub
loope
mov
adc
test
inc
xor
inc
push
ret
dec
xor
dec
clc
rorb
pop
pop
dec
inc
shlb
jecxz
dec
and
jae
mov
imul
lcall
inc
je
lahf
push
sbb
dec
dec
dec
and
mov
test
lock
sbb
addl
addr16
push
out
call
andl
scas
sahf
daa
out
aas
mov
sbb
xchg
out
lea
std
cltd
xlat
jge
or
push
xor
push
les
dec
mov
repnz
notb
js
in
addr16
out
mov
mov
inc
fdivp
jecxz
inc
or
scas
mov
mov
push
push
sbb
pop
js
adc
cmp
fldcw
loop
add
sub
add
cmp
push
ret
xor
fbstp
aaa
mov
cmp
adc
cld
mov
or
in
cmpb
lret
rcpps
call
add
add
push
push
xchg
pop
and
push
pushf
shrb
andb
inc
aad
fcmovnbe
ss
sub
mov
dec
aad
lret
and
das
pushf
push
mov
xchg
loop
cs
loopne
dec
test
outsb
pop
xor
mov
dec
xor
xchg
notb
cmovg
test
aas
scas
mov
add
mov
in
ss
sub
das
aad
rcrb
ret
js
lret
or
jns
cmp
scas
fisubrs
sbb
insb
pop
stos
inc
xchg
stos
cmc
pop
stc
xchg
rcll
adc
adc
sbb
mov
hlt
leave
sub
lods
inc
fs
test
cmp
shll
mov
mov
lods
in
cld
rclb
popa
push
mov
xchg
sub
aaa
and
pop
xchg
arpl
movsb
push
in
mov
xor
cwtl
jmp
push
ret
sahf
call
in
ret
mov
std
call
pusha
jne
inc
jo
push
ficoms
mov
push
shll
stc
sarl
cld
es
xchg
int
inc
insb
push
xchg
jbe
mov
xor
jmp
ret
stc
and
shlb
nop
mov
xchg
inc
fisubrl
cmp
les
xor
mov
das
sub
dec
cmp
ficoml
mov
out
shl
lock
int
cmp
adc
icebp
negl
iret
icebp
and
cmpsl
inc
scas
jne
add
mov
jbe
das
sbb
arpl
xchg
mov
lods
out
inc
fists
sub
pop
sub
mov
stos
imul
lea
jns
inc
cmpsl
jmp
lock
jb
js
outsl
and
dec
xchg
mov
jmp
mov
fsubrl
arpl
test
xchg
or
mov
pop
lea
outsl
dec
cmpb
mov
aam
les
jne
push
decb
pop
enter
rclb
fsts
mov
test
adc
ficompl
sub
add
push
jb
les
xor
into
push
ds
push
mov
push
jnp
cltd
push
dec
mov
pop
add
les
jle
push
and
pop
push
lea
ljmp
pop
mov
in
scas
cmp
xchg
insb
dec
into
cmp
lds
divb
xor
ret
push
sub
jnp
ljmp
sub
add
in
pop
push
ret
popf
adcl
jb
pop
ret
lahf
sbb
test
pop
bound
in
xor
in
outsl
aaa
das
pop
push
aas
mov
pop
xchg
add
loopne
push
inc
hlt
jnp
xchg
push
dec
inc
leave
das
sub
pop
pop
xchg
enter
sbb
and
shl
les
in
fsubrs
jl
mov
cmpsl
fwait
or
or
ljmp
testl
enter
sbb
mov
sub
fdivr
or
neg
shlb
mov
cmp
aaa
or
inc
or
pusha
xor
jo
lods
lahf
repnz
loop
mov
lcall
push
ficomps
and
push
in
inc
push
lcall
mov
mov
fildll
inc
bound
or
sub
aam
push
push
sub
stos
data16
mov
addl
push
mov
mov
pop
xor
inc
sarb
movsb
inc
and
hlt
rorl
fxch
pop
jp
xchg
rcrl
cmp
pop
pop
ret
aaa
stc
xchg
xchg
shll
adc
add
ja
ficoml
addl
sbb
jne
and
dec
jg
inc
xchg
push
pop
es
loopne
sbb
sbb
test
or
cmp
fs
cmp
in
mov
jo
pop
mov
jmp
and
iret
int3
and
pop
jno
aaa
sub
movsb
arpl
xor
fldt
lcall
fcomps
sub
shll
xchg
inc
mov
dec
daa
mov
das
add
fisttps
lds
les
mov
sub
cmp
dec
rclb
mov
inc
dec
in
fcomps
mov
dec
call
pop
xchg
add
repnz
enter
int
mov
inc
fwait
or
mov
lret
push
inc
ret
fidivrl
sub
lock
and
or
jno
dec
pop
or
cmp
xlat
sub
nop
push
ja
roll
dec
push
jl
cli
jecxz
lds
xchg
lods
cli
rcl
lcall
ret
and
add
sti
inc
pop
jb
or
imul
mov
lock
addl
jbe
lahf
jnp
daa
push
sbb
jb
mov
inc
adc
push
pop
or
aaa
pop
loope
out
addr16
push
repnz
push
inc
pop
mov
cmpsb
xchg
cmp
add
push
fistpll
fildl
and
repz
ret
mov
cmp
jge
cli
pop
mov
push
push
mov
and
outsb
data16
arpl
dec
enter
jmp
sub
scas
test
lahf
divb
repnz
xor
jmp
or
push
add
testb
scas
adc
and
push
sahf
sbb
dec
stc
dec
in
inc
mov
jl
jp
inc
test
and
insl
lcall
je
push
lret
inc
push
push
cli
cmc
dec
cmp
stc
or
dec
inc
scas
push
movsl
sub
mov
adc
pop
ljmp
ja
mov
xchg
imul
scas
in
adc
cwtl
sbb
out
test
pop
push
dec
cmp
test
lds
addl
lods
out
lret
jns
pop
ss
sbbl
xlat
test
mov
xchg
xchg
and
inc
xor
mov
xor
incb
cli
sbb
ljmp
out
movsl
jnp
lods
xchg
arpl
push
mov
pop
xchg
xchg
adc
xor
inc
daa
push
add
add
adc
mov
mov
movsl
decb
ljmp
lods
call
jl
jb
push
loopne
push
jl
adc
dec
mov
jg
inc
push
push
xor
push
xchg
lds
out
and
sahf
ljmp
loope
dec
push
mov
ja
lret
adc
cmp
out
xor
xor
jmp
popa
sbb
add
cmp
sahf
bnd
leave
inc
sahf
adc
or
adc
addr16
stc
es
cmp
faddl
test
mov
out
xchg
dec
ja
push
push
jbe
mov
push
mov
scas
push
dec
mov
ret
cld
repnz
lret
adc
mov
push
stos
mov
inc
adc
jne
mov
pop
xchg
mov
push
fwait
mov
imul
xchg
xlat
lea
dec
rorb
pushf
es
cli
test
mov
cltd
outsl
jecxz
popa
cs
lods
add
sbb
adc
add
daa
inc
mov
pop
xchg
data16
add
test
sbbl
int3
daa
cmpsb
add
mov
lds
cmpl
pop
int3
and
addr16
insb
or
cmc
ret
les
sub
fcomi
xchg
xor
and
jno
dec
frstor
test
xor
dec
xchg
or
int
add
cmp
add
enter
push
xlat
test
popf
push
adc
add
dec
repnz
push
adc
adc
out
repnz
outsb
push
test
sbb
fstpt
pop
ret
sbbb
mov
aad
xor
data16
inc
loop
fwait
or
xchg
jge
inc
xor
xlat
mov
faddl
mov
push
fildl
sbb
in
roll
std
and
mov
xchg
mov
mov
mov
sub
out
inc
push
xchg
dec
and
xchg
cmp
mov
test
movsl
in
loope
lods
push
ret
or
cmp
dec
and
aas
dec
sub
mov
jmp
lds
lea
dec
pop
sbb
fists
pop
xor
mulb
out
out
adcl
inc
and
lea
and
cmpsb
cld
pop
bound
loop
mov
adcl
or
cmp
out
movsl
test
cmp
int3
loopne
mov
dec
mov
mov
ret
fwait
mov
mov
dec
adc
adc
jno
fisubrs
fstl
fnsave
clc
mov
es
jbe
jae
xchg
stos
repnz
jb
adc
es
dec
insb
push
mov
ds
mov
lds
sub
inc
outsb
in
mov
add
iret
cmp
jbe
fists
push
mov
bound
sub
xchg
pop
pusha
fstp
xor
aam
insl
cmp
sbb
pop
push
mov
test
xchg
push
jne
adcl
mov
test
jno
scas
pop
sti
pop
scas
cwtl
outsb
sub
js
popa
sub
jle
push
dec
out
loop
shl
mov
push
mov
mov
inc
add
and
inc
test
in
pop
mov
imul
mov
mov
cmp
mov
push
rolb
loop
xchg
fmull
mov
lret
lock
loope
pusha
ret
cmp
movsb
adcb
mov
adcl
das
mov
mov
ja
or
and
in
pop
loopne
jg
mov
adc
xchg
leave
std
ja
dec
jno
jecxz
lds
insl
inc
sub
pop
mov
outsl
lods
data16
sub
cmp
cmpsl
jge
push
inc
add
xor
movlps
push
mov
xchg
push
cmp
pusha
push
cli
xor
sbb
jne
movsl
or
mov
pop
jb
leave
inc
mov
mov
das
sbb
inc
adcl
mov
popl
or
ds
addl
xchg
test
out
mov
popa
cltd
mov
out
xchg
repz
xlat
data16
pop
jmp
into
xchg
sub
test
lret
out
lods
xchg
leave
in
jae
jmp
adcb
cmp
or
sub
ds
jno
push
pop
lahf
cld
jne
testb
aaa
outsb
dec
mov
mov
shlb
mov
push
xor
cli
roll
loop
sti
mov
add
movl
jns
and
xchg
pusha
push
popf
test
add
out
mov
add
mov
shll
sbb
cmpsl
jo
insl
imul
xor
xchg
jp
icebp
test
imul
mov
mov
cwtl
lret
cs
clc
mov
mov
cmp
xor
ret
jg
fstpt
lds
movsb
mov
lock
xchg
not
ds
jbe
cmp
shr
mov
out
out
inc
sbb
cli
xchg
scas
stos
push
mov
cs
insb
sub
movl
sub
scas
mov
sub
ret
aam
hlt
push
mov
and
test
in
out
sbb
shll
push
int3
loopne
or
es
iret
inc
and
sahf
jl
mov
xchg
jo
clc
cmpsl
shll
pusha
stos
add
bound
cwtl
dec
fwait
jae
mov
inc
sub
cmpsb
fiaddl
outsl
rcrl
roll
add
xor
jae
in
cld
push
pop
xor
add
dec
mov
xchg
push
adc
rcl
fstps
cmpsb
adc
pop
or
add
sub
xchg
mov
mov
cmp
aaa
aad
stos
jmp
adc
sbbl
ret
movsb
mov
cmp
mov
loope
mov
cmp
aas
xlat
jmp
cs
inc
push
adc
mov
add
inc
adc
lcall
mov
lock
push
and
adc
push
push
xchg
aaa
xor
stos
daa
in
xchg
pop
out
or
push
mov
dec
pmulhw
shrb
mov
xchg
lea
or
sbb
dec
pushf
or
cld
mov
decb
dec
adc
je
int
pop
xlat
push
mov
mov
mov
sub
lahf
mov
push
out
movsb
and
popf
sahf
xor
mov
mov
cmp
xor
mov
mov
sub
in
mov
mov
in
pop
inc
xlat
scas
push
add
pop
push
jl
bound
mov
leave
dec
mov
call
inc
mov
out
dec
out
xor
inc
xor
cs
jno
std
push
fdivrs
iret
mov
faddl
outsb
inc
cmc
out
sbb
mov
jno
bound
mov
push
push
inc
add
lds
push
mov
cmp
jno
sub
fidivs
outsl
in
fildl
sub
or
pusha
aaa
pop
scas
andl
aad
popf
or
stos
loop
enter
mov
out
mov
sahf
and
or
popa
cmc
jae
pop
cmp
nop
or
out
cltd
mov
test
test
xchg
arpl
jl
push
out
int3
pop
int
aam
mov
push
adc
pop
push
leave
out
sub
mov
popa
cmp
jl
mov
jb
arpl
aad
stos
inc
outsb
inc
pop
mov
sub
inc
mov
push
cmpsb
in
adc
jno
enter
ret
jno
xor
mov
or
pop
xchg
insl
inc
adc
mov
clc
ljmp
sti
and
push
cmpsl
test
popa
fidivs
imul
mov
or
push
outsl
mov
mov
repz
mov
sbb
popa
shll
mulb
mov
inc
clc
test
and
sbbl
loope
loop
dec
or
push
xchg
popa
xchg
fidivrs
daa
in
popf
flds
jns
pushf
stos
and
lret
cmc
jno
pop
xchg
loop
cltd
addl
mov
inc
in
int
ret
inc
gs
gs
push
test
mov
lahf
insb
hlt
shll
lock
shlb
test
fsubp
xor
in
iret
mov
cmp
pushf
scas
add
jnp
test
dec
gs
pop
pop
push
mov
push
push
jmp
xchg
mov
jle
inc
xchg
mov
cld
in
xor
pop
and
jmp
fstpl
jecxz
ljmp
mov
inc
in
inc
lods
addr16
mov
mov
imull
rclb
movsl
and
call
leave
mov
stos
jp
hlt
push
daa
out
ljmp
sub
lods
mov
xor
lock
cmpsl
bound
lret
fs
inc
adc
jnp
mov
arpl
cmp
or
pop
inc
mov
int
inc
rorl
adc
aaa
or
pop
sbb
pop
ja
aam
xor
cmp
mov
fisubs
xlat
in
dec
fdiv
jl
lods
andb
ljmp
cmpsl
lret
stc
outsl
dec
fs
push
mov
push
xor
aam
push
xlat
subl
rcrl
shll
pop
in
aam
push
mov
inc
push
push
xor
jae
mov
outsb
repz
mov
sub
mov
pop
jae
adc
nop
pop
xchg
or
jg
stos
int3
inc
adc
jo
aam
add
jge
lods
fst
adc
adc
int3
js
jb
inc
ret
jo
cltd
dec
mov
jo
ss
gs
add
arpl
mov
insl
orb
ja
cmp
test
push
enter
push
pop
jl
push
pop
cs
lock
push
arpl
push
mov
loopne
sub
es
mov
or
sti
jbe
dec
pop
ret
mov
push
mov
addr16
mov
inc
lods
sub
popf
pop
pshufw
in
hlt
mov
xchg
in
sar
and
mov
pop
rcr
mov
push
mov
mov
xchg
mov
pusha
pusha
or
ficompl
jle
pushf
mov
in
sbb
pusha
dec
mov
xchg
stc
int
mov
dec
mov
fidivs
mov
push
xchg
sub
xchg
iret
leave
std
or
push
pop
lahf
pop
lahf
in
inc
vpaddw
jnp
rclb
outsl
in
jl
dec
mov
mov
and
jmp
cli
call
cwtl
mov
lods
lods
and
pop
adc
xchg
sub
mov
mov
jo
jl
cmp
or
sub
push
dec
mov
jb
lods
subb
and
mov
mov
lds
dec
aaa
ljmp
stc
lock
jge
or
mov
mov
or
enter
andl
jbe
mov
insl
mov
sar
dec
dec
imul
inc
inc
les
fisttpl
pop
sbb
test
scas
sub
es
stos
push
dec
pop
xlat
faddl
push
mov
cwtl
push
jmp
jns
xchg
pop
les
aas
xchg
sub
add
std
dec
jb
push
ret
cltd
push
inc
in
or
mov
pop
jne
insl
je
pop
inc
std
or
pop
push
stos
pop
xor
push
xchg
pop
jo
cmp
push
psubusb
xchg
push
cmpsl
xchg
lock
pop
push
dec
aam
fidivs
lahf
push
pop
js
mov
mov
int
push
stc
push
add
or
aam
jmp
or
sar
and
pop
cmp
cmp
lea
jp
inc
pop
push
ljmp
ds
fisubl
sarb
sbb
in
mov
dec
push
mov
pop
les
or
xchg
fwait
test
test
ret
or
mov
or
fdiv
inc
in
ret
push
sarl
dec
cs
cld
sbb
pop
xchg
jns
testb
xchg
jmp
xchg
test
movsb
or
jmp
and
aaa
sub
mov
cmpl
xchg
dec
shll
sbb
push
insl
in
popa
bound
or
cld
shll
xchg
pop
rol
and
jo
cwtl
jbe
jmp
std
jmp
sbb
mov
repz
or
stos
mov
pop
xor
inc
add
push
popa
lea
ss
or
xor
inc
xor
outsl
inc
in
int3
mov
loop
adc
or
jne,pt
sub
out
fistpll
stos
jle
adc
mov
pushl
cwtl
jnp
jmp
lock
mov
inc
push
pop
pushf
ret
cli
shr
cmc
insl
mov
sbb
add
inc
loope
jl
loopne
sub
lods
add
jae
int
sbb
mov
mov
pushf
push
mov
shlb
xlat
fdivrs
out
int
push
stos
rcll
subb
pop
add
inc
les
inc
mov
es
fistps
movsl
clc
adc
mov
adc
inc
inc
and
pushf
cmpsb
inc
mov
loop
jno
mov
insl
popa
repz
sbb
and
mov
out
add
xlat
iret
bound
clc
test
jmp
das
out
aam
sub
pop
push
jl
mov
in
aaa
cmc
mov
pusha
xchg
icebp
mov
cmp
mov
fs
push
inc
lds
dec
enter
sbb
mov
ss
mov
je
gs
mov
outsb
testl
xchg
xchg
stc
push
mov
out
jg
dec
inc
cmp
out
loope
ds
nop
and
movsb
jl
xor
sahf
dec
dec
scas
call
cld
out
bound
movsb
xor
pusha
push
jnp
inc
jbe
lds
mov
mov
adcl
dec
sbb
ljmp
repnz
jle
xchg
ret
mov
or
fstpt
mov
mov
push
fimull
cmp
inc
adc
incb
add
insl
pushf
test
out
xchg
mov
adc
insl
sub
pusha
cmp
xor
ds
xchg
repnz
add
and
pop
imul
iret
ja
outsl
popa
or
aaa
xchg
pop
dec
xchg
mov
and
mov
sar
cmpsl
out
outsb
inc
mov
sbb
jnp
xor
adc
mov
mov
clc
pop
sub
adc
lret
xor
lods
or
ljmp
fwait
lahf
xchg
test
mov
sahf
icebp
fidivs
cmpsl
test
in
push
push
popa
rcrb
lret
jge
clc
inc
jno
icebp
add
ret
push
mov
loop
mov
popf
insb
lock
sbb
rorb
and
enter
cmp
fnstenv
sub
jecxz
shl
cld
roll
xchg
sub
jge
and
xchg
adcl
push
mov
cmpsb
cmp
adc
mov
ds
pop
movsl
xchg
pop
xor
pop
xchg
adc
push
dec
in
xor
inc
cld
mov
jne
mov
imul
pop
mov
lods
adc
movsb
int3
mov
imul
fucomip
repnz
enter
shrb
cmc
aad
ret
call
das
das
cmpsb
roll
in
cmp
fildl
inc
call
or
repz
sbb
aas
in
testl
into
out
dec
lcall
mov
loop
js
fistps
pushf
sarb
mov
movsl
je
outsb
daa
xor
mov
xor
pop
sarl
xchg
lock
bound
insl
sub
arpl
cmp
inc
or
xlat
or
xchg
std
lcall
add
mov
push
testb
dec
xchg
inc
jecxz
mov
pop
inc
xorb
xor
out
lahf
push
pop
xor
dec
xchg
and
test
xchg
stc
lds
or
mov
js
shl
adc
pop
cmp
push
cmp
pop
imul
fists
xchg
dec
lods
sbb
aaa
jmp
std
xchg
lret
popf
scas
and
movl
mov
mov
lcall
jae
adc
test
sbb
sub
adcl
and
sbb
dec
lods
jmp
sub
call
incl
xor
mov
pop
out
std
mov
jbe
fs
stos
xor
scas
test
sbb
mull
repnz
sbb
inc
fists
out
jecxz
push
add
mov
std
add
pop
cmp
in
jecxz
sub
cmp
out
push
mov
enter
dec
repz
dec
inc
fists
bound
pop
sbb
test
mov
sbb
je
rol
jnp
adc
jae
in
cltd
clc
sub
mov
stc
in
and
push
fiadds
into
fistl
dec
ds
xor
inc
jecxz
imul
scas
pushf
ljmp
cld
repnz
xor
lods
repnz
lahf
add
cmpb
push
dec
or
xor
cmp
imul
xchg
mov
cmp
inc
cmp
cld
fists
gs
jb
xor
in
push
or
mov
add
cmp
popa
insl
mov
mov
adc
addr16
pop
in
sub
push
lea
jg
mov
xor
js
popf
fstpl
arpl
mov
mov
inc
imul
int3
ja
imul
xor
mov
out
in
jmp
and
jo
inc
push
xorb
test
xchg
icebp
enter
out
cmpsb
dec
push
negl
enter
xchg
adc
add
std
mov
fbld
sub
gs
pop
sub
es
iret
imul
adc
js
ljmp
negb
lds
mov
movsb
add
mov
inc
dec
fwait
pop
mov
in
ret
inc
add
nop
cwtl
push
adc
pusha
xorb
mov
cmp
mov
in
adcb
adc
xchg
add
cmp
xchg
pop
aam
das
aas
push
sbb
mov
and
movsb
mov
mov
rcll
mov
addr16
clc
pop
push
push
cmp
sub
jl
dec
mov
in
stc
fs
pop
lods
aaa
pop
faddl
jle
push
adc
orb
xchg
in
pop
test
xor
xor
xor
fsubl
in
sbbl
and
inc
push
jb
mov
adc
std
dec
scas
jo
adc
aam
out
fidivrs
cmp
sub
adc
mov
xor
push
gs
lahf
inc
out
lods
outsl
daa
adc
xlat
mov
xchg
inc
ljmp
mov
inc
rcll
xor
andb
loope
mov
hlt
ljmp
test
mov
jle
pop
and
mov
sub
jg
push
cmp
jmp
loop
sub
pusha
mulb
xor
bound
or
lock
int
ss
cmpsl
bound
js
loopne
jne
divb
or
mov
mov
in
pop
jns
jnp
add
fsts
test
sbb
addb
pusha
sub
sub
out
fisubl
sbb
add
jne
jnp
repnz
dec
pop
xchg
fcompl
sbb
pop
cmpsb
jb
in
cs
push
into
adc
out
lds
dec
inc
call
cmp
mov
pop
mov
xchg
mov
push
hlt
data16
dec
mov
jns
jbe
or
ficompl
aaa
pop
xchg
jecxz
and
jo
adcl
mov
sub
out
add
ds
lds
push
xchg
fistpl
cmc
add
arpl
xchg
jp
ja
call
mov
mov
je
mov
push
dec
repz
mov
mov
or
or
jno
jns
mov
cmp
lods
push
fwait
jle
pushf
mov
adc
cmpsb
mov
cmp
adc
cwtl
push
dec
fwait
mov
out
in
add
inc
cmpsb
fdivl
ror
sbb
mov
inc
enter
push
fistpl
add
lods
jmp
int
fcoms
and
mov
push
gs
mov
pushf
add
adc
sub
mov
gs
stos
and
fdivs
adcl
pop
mov
sub
mov
fwait
aaa
jno
pop
mov
in
insb
addb
cld
jle
outsl
clc
sbb
lock
mov
xchg
mov
aad
mov
dec
adc
adc
inc
popa
js
xchg
cmp
push
push
shl
shrb
push
mov
mov
dec
lahf
inc
or
xor
xor
jo
xchg
out
xor
addr16
call
repz
lret
ja
imul
and
mov
aam
int
addr16
xchg
out
sti
push
xchg
pop
dec
out
mov
mov
aad
jbe
les
adc
mov
pop
sub
pop
mov
adc
cmp
stos
cwtl
jecxz
dec
shl
ljmp
adc
push
pop
mov
mov
adc
pop
mov
andl
cli
aad
gs
ja
and
or
cmp
loop
pop
test
aas
dec
lds
push
add
jbe
rcrb
mov
fdivl
roll
sahf
xchg
sbb
stos
jle
test
add
bound
sbb
push
outsl
inc
cmpb
push
lods
push
push
shrl
dec
pop
push
cmc
jg
dec
jge
mov
inc
test
stc
enter
push
pop
insb
mov
sbb
test
cmp
imul
jmp
mov
pop
scas
inc
icebp
push
mov
cmpsb
xor
sub
adc
stos
les
scas
test
inc
jns
mov
pop
xor
popa
pop
rclb
out
sbb
sti
insl
mov
push
xchg
sbb
sbb
rclb
xchg
or
ss
jmp
daa
js
lahf
sbb
ficoms
insb
aam
imul
mov
cmp
pusha
sbb
jnp
imul
inc
js
push
push
mov
inc
mov
int3
pop
push
fbld
xchg
push
cwtl
gs
loopne
out
scas
pop
add
mov
ficomps
mov
lret
jno
repz
mulb
xchg
pushf
sti
lods
out
push
lds
je
hlt
sbb
clc
mov
push
aam
dec
xchg
add
dec
cli
lret
and
push
adc
cmp
sbb
jb
and
mov
adc
addr16
notl
incl
jl
pop
pop
adc
xchg
test
jns
pop
xor
mov
sub
sub
imul
fcoms
xchg
repnz
shll
push
sub
cmpsb
xlat
fistps
test
dec
inc
xchg
pop
push
sbb
mov
popa
adcl
arpl
maskmovq
ljmp
jnp
int
sbb
adc
enter
gs
in
leave
rcrb
icebp
ret
push
out
pop
cmp
lock
sbb
xor
adc
jg
daa
pop
movsl
push
lods
mov
jae
or
dec
sub
jb
mov
cli
and
ljmp
mov
inc
mov
jo
rorb
pop
inc
xchg
test
or
adc
cltd
and
sub
addb
movsl
and
std
pop
mov
loop
cld
mov
push
scas
xor
out
cmp
xchg
enter
mov
iret
inc
outsl
and
jo
cltd
cli
ja
dec
mov
jmp
lcall
test
jo
test
cmpsl
push
loop
je
pop
xor
lds
stos
out
lret
lods
xor
pushf
testb
lock
in
in
nop
xchg
inc
mov
dec
sbb
push
repz
mov
push
add
mov
lods
jle
ds
xor
mov
addr16
ret
lahf
dec
leave
mov
add
add
jge,pt
and
out
jecxz
mov
repnz
or
inc
cmovb
push
imul
rcrb
fsubl
xor
scas
mov
gs
cwtl
adc
clc
sbb
adc
xchg
call
imul
int3
mov
sti
aam
push
sarb
bound
shrl
enter
test
test
adc
orl
bound
push
sbb
aas
adc
je
mov
loopne
xchg
and
add
fwait
inc
inc
push
adc
arpl
nop
arpl
cld
out
adc
mov
adc
and
das
dec
sbbb
imul
xor
sbb
ja
es
inc
xlat
adc
mov
sub
shl
addb
mov
push
jbe
mov
xor
gs
mov
fstl
mov
push
adc
mov
adc
mov
je
add
jmp
cmpsl
sahf
xorb
fcompl
rolb
xchg
sub
jp
xor
out
frstor
mov
mov
dec
cmp
stc
das
lcall
jae
mov
lods
cmp
pop
push
jne
mov
test
ds
mov
hlt
dec
push
add
popa
lds
pop
cltd
xchg
das
rcll
cli
dec
sbb
xor
push
and
xchg
clc
jae
out
arpl
insb
inc
mov
sbb
mov
dec
sbb
sub
movq
insb
xchg
lods
xor
jnp
jle
loop
loop
fildll
sub
lea
fiaddl
rcr
out
aaa
add
xor
and
push
in
dec
adcl
test
and
sbb
fmulp
arpl
dec
sub
rolb
jg
hlt
gs
lret
ret
in
sub
jb
lods
sbb
mov
jo
fldcw
imul
add
int
jl
fstpl
gs
jle
jge
jns
pop
xor
pop
shrb
jp
mov
out
dec
stos
pop
call
int
sub
divb
pop
popf
and
cmp
ret
mov
xor
sbb
test
mov
and
jg
cs
repnz
sbb
mov
xchg
aas
mov
push
add
in
jb
lret
push
xchg
movsl
repnz
movsl
lds
data16
inc
inc
sbb
shll
inc
xlat
clc
outsb
insl
cmp
loopne
pop
sub
push
push
out
pop
dec
enter
es
lods
push
cmpl
sahf
mov
push
mov
push
shll
stos
in
inc
enter
movsl
mov
xchg
sbb
cmp
mov
aas
mov
xor
mov
sbbl
mov
and
sti
lods
je
outsb
arpl
fidivs
sbb
aad
cmp
in
fmuls
push
jbe
movsb
pop
lods
push
xor
pop
mov
ss
add
ret
faddl
add
subl
mov
push
or
sbb
lock
add
lahf
leave
and
fstpl
orb
pushl
xor
push
or
lahf
xor
ja
mov
xor
stc
add
cmpsl
lfs
push
aad
ss
xchg
adc
je,pt
ret
pushf
in
outsb
xchg
mov
clc
out
js
in
scas
jae
sub
and
pop
inc
cmp
pop
sbb
lods
insl
mov
dec
fcmove
xor
faddl
adc
rolb
jae
mov
adc
clc
push
add
adc
outsb
rorl
pusha
sahf
decb
loopne
into
xchg
cmp
loopne,pt
xor
lret
shll
push
mov
insl
cmp
sub
cmovge
ror
mov
enter
push
pop
aam
je
sub
in
xor
pop
sub
iret
pop
test
cmp
lret
cmc
cmpsl
dec
ja
mov
sub
inc
aad
mov
sarl
insl
and
push
mov
inc
xchg
inc
sbb
scas
mulb
hlt
adc
add
imul
in
dec
loope
pop
les
adc
fstps
fdivr
loop
shlb
adc
nop
lods
outsb
fsubrs
clc
outsb
enter
shlb
mov
add
push
push
scas
arpl
push
mov
lea
push
jb
sub
dec
adc
mov
lret
push
lcall
ror
add
dec
es
mov
sub
adc
dec
fcomi
int3
shlb
jmp
adc
flds
mov
xchg
push
sbb
js
inc
aad
orl
add
cld
mov
inc
xchg
jb
popf
jo
mov
push
daa
dec
inc
sahf
mov
add
cld
sub
push
pop
add
sbb
mov
jo
lods
xchg
sbb
pop
dec
call
out
mov
jge
or
lods
mov
lcall
push
add
push
fisubrl
mov
mov
adc
insl
int
or
cli
mov
adc
push
clc
jae
mov
icebp
dec
jno
mov
repnz
shl
fdivp
in
jmp
push
scas
pop
std
repz
inc
stc
mov
sbb
cs
fstpt
jns
das
hlt
ja
sbbl
in
loope
xchg
inc
xor
or
ljmp
cmp
mov
shrb
cmp
loop
mov
cmc
js
add
in
bswap
inc
imul
add
xor
mov
dec
ficoms
pop
js
sbb
mov
incl
fsts
cltd
imull
add
sub
sahf
shll
test
cld
add
movsl
out
push
fistpll
mov
xchg
sub
push
lea
idivl
inc
cltd
ss
xor
pusha
test
dec
push
pop
enter
in
testl
lret
cmp
cmc
ljmp
pop
icebp
lea
insb
push
fcoml
sbb
stos
xor
mov
stc
jmp
bound
sbb
pusha
mov
sbb
lret
xchg
jle,pn
inc
mov
xor
add
sub
jns
fwait
imul
jo
jmp
mov
xor
lret
leave
jbe
jl
inc
push
pop
dec
adc
cmpsb
test
dec
rcl
mov
scas
adcl
andb
or
xchg
and
aas
mov
into
mov
ds
aad
cmp
std
outsb
add
add
loop
arpl
cmpb
or
jl
inc
or
lods
and
xor
outsl
mov
lds
pusha
add
sbb
xchg
xchg
in
icebp
mov
leave
test
int3
aam
ljmp
and
lcall
xchg
das
inc
mov
mov
pop
dec
or
add
mov
pusha
pop
push
stc
ss
xor
jb
cld
and
adc
es
loopne
add
das
cmp
loopne
mov
pop
lea
and
mov
pushl
in
outsl
lret
jecxz
imul
loop
es
xchg
movsl
dec
loop
add
dec
jnp
lods
lcall
mov
jmp
out
iret
adc
test
sbbb
pop
dec
adc
push
testb
cmc
ljmp
divl
sarl
inc
cld
push
mov
mov
ftst
sub
fadd
sbb
jmp
cmpsb
pop
mov
fbstp
imul
sbb
movsb
push
sarb
or
sub
jg
test
push
dec
adc
inc
push
addr16
lcall
xchg
lcall
mov
shlb
sub
insl
or
ds
fbld
xor
mov
pushf
sbb
adc
or
mov
sahf
sub
stos
inc
cmpsb
xchg
or
mov
repz
lods
xchg
popa
hlt
jnp
cmp
push
outsb
stos
pop
repnz
dec
test
in
mov
bound
scas
fsub
stos
lret
mov
mov
push
dec
jle
in
jecxz
jnp
jecxz
adc
add
and
sbb
in
lret
gs
adc
cmp
cmc
mov
out
loop
xor
mov
dec
xchg
fs
test
pop
shl
adc
popa
mov
xor
bound
adc
lock
sbb
cltd
dec
sbb
test
xor
xor
fs
aad
jo
adc
push
test
cmc
ret
push
xchg
jmp
ljmp
rorb
pop
rolb
test
in
out
sarl
dec
xor
repz
popa
and
and
leave
cmp
lret
mov
aad
adc
mov
sbb
sbb
mov
movsb
fsubs
or
loop
icebp
cmpsl
or
leave
add
addr16
lods
mov
jne
fsubs
lret
mov
lret
jnp
daa
dec
outsl
push
jnp
xor
cmp
enter
out
rcl
sarb
xchg
push
andl
add
dec
xor
mov
orb
movl
xor
mov
in
lret
cmp
push
outsl
dec
scas
lock
lock
jl
out
aaa
andl
jp
push
fsubrl
cmovo
or
mov
xchg
fsubr
cmp
inc
insb
or
daa
stos
mov
lahf
xchg
xchg
lock
mov
push
mov
movsl
jmp
adc
movsl
mov
mov
fsubs
mov
jb
je
js
out
adc
sub
fstl
and
sub
cs
out
shlb
aaa
add
push
call
sarl
push
imul
div
or
fcoms
into
cmpsb
negb
dec
loope
dec
pop
and
adc
int
xchg
inc
mov
mov
push
in
adc
js
add
or
pop
or
xor
or
data16
ss
test
mov
js
sub
mov
or
dec
jne
divl
push
cmp
mov
pop
fisubl
test
mov
mov
stos
cld
or
pop
js
shlb
fwait
cld
pop
imul
mov
cmp
push
mov
sub
dec
sub
sbb
jne
push
jmp
pushf
push
or
loopne
rcrb
fistpll
push
sbbb
stos
in
add
mov
mov
insl
xchg
sub
mov
or
movsb
leave
pop
pop
loop
pop
lods
jne
mov
fcoml
xor
jmp
or
ja
in
xor
xchg
in
mov
out
aaa
jno
scas
cld
push
jmp
sbb
mov
insl
sbb
pop
and
adcb
std
js
jbe
popa
in
ljmp
aaa
fimull
mov
jns
ret
pop
pop
jo
std
pop
pop
xor
jns
push
xchg
scas
push
pop
lds
loope
pushf
iret
adc
jmp
ss
cmp
jmp
and
push
and
push
mov
test
enter
sbbl
jbe
push
mov
jo
pop
sub
push
or
popf
and
fnstenv
sbb
cmp
cmp
popa
faddp
or
subl
pop
cmp
addl
scas
and
aas
loope
jno
push
or
cli
and
ds
push
aas
jp
out
mov
loop
addr16
out
inc
pop
mov
add
inc
fldenv
cli
mov
pop
in
add
arpl
sbbl
sbb
shll
sub
pop
test
fwait
js
adc
test
and
inc
add
xchg
lock
cmp
sbb
into
mov
icebp
mov
in
jecxz
out
and
sbb
mov
test
sahf
fnclex
imul
sub
iret
push
push
dec
cmp
in
movsl
jo
in
sbb
cwtl
inc
jle
adc
inc
and
or
add
es
jo
cli
xlat
fidivl
jg
cmp
cmp
mov
in
sub
xchg
inc
and
mov
movsb
outsl
movb
cwtl
inc
xchg
push
or
lods
xor
push
aaa
cmp
jae
cmpsb
subl
jle
mov
xor
push
fstpl
add
int
pop
daa
fldt
flds
aas
sub
cmp
pop
jnp
bound
xorb
test
mov
adc
call
das
inc
pop
jle
into
mov
mov
aas
int3
mov
jae
loop
adc
data16
inc
addr16
mov
daa
scas
subb
sti
in
mov
loope
sbb
lret
sbb
test
out
sub
sbb
insb
xor
imul
mov
xchg
jno
mov
or
prefetch
or
mov
fcompl
adc
push
lock
les
jg
dec
addr16
std
xor
xor
and
aam
shlb
inc
dec
ss
mov
push
adc
popf
fstpl
adc
movsl
bound
mov
in
stc
add
mov
jne
adc
or
xor
notb
or
mov
test
repz
les
icebp
cli
fpatan
and
mov
jl
adc
into
mov
adc
in
cwtl
mov
or
xchg
ljmp
dec
adc
fwait
orl
xchg
test
mov
andb
aad
mov
cli
lahf
outsb
jb
daa
inc
jns
imul
inc
inc
das
jle
rol
mov
imul
fnstcw
movsb
lcall
inc
mov
jle
in
or
cmp
pop
push
pushl
cmovb
sbb
add
push
call
movsl
jg
pop
mov
sub
lea
push
std
mov
cmpsb
push
imul
or
scas
outsl
mov
xchg
lret
lock
adc
dec
cmp
fsubl
fimull
pop
jae
jmp
and
pop
in
add
mov
cmpsb
je
lods
jo
rolb
ret
arpl
gs
push
lahf
iret
jmp
lods
fiadds
inc
mov
inc
push
adc
fxam
jp
sbb
sbb
out
in
pop
jge
push
gs
cmp
ret
insb
bound
xlat
insl
mov
mov
jp
pusha
adc
pop
ss
mov
lods
lock
fstps
push
mov
fisttps
push
rolb
fyl2xp1
push
push
out
rcrb
loopne
and
lcall
adc
pop
test
fwait
adc
and
aam
int3
rol
mov
stos
jl
ret
sbb
gs
or
add
push
jae
adc
sub
lret
mov
mov
lret
mov
push
or
or
dec
jbe
rcl
sbb
mov
lock
pop
inc
jno
sti
mov
test
jp
mov
pop
repz
xor
lods
mov
fwait
or
add
push
adc
jb
andb
or
fs
ficoml
dec
cmc
mov
or
mov
aad
stc
popa
lret
adc
mov
push
push
das
push
adc
imul
push
mov
in
cltd
sar
jecxz
mov
or
sub
mov
fcmove
adc
ja
sahf
dec
out
push
mov
movsb
lcallw
in
or
js
sbb
xor
adc
sahf
sub
cmp
test
sbb
lahf
cld
cmpsl
icebp
addr16
clc
cmp
cmp
mov
nop
out
adcb
cs
ljmp
cs
lahf
clc
mov
xchg
mov
dec
cmp
sub
movsb
and
dec
ja
rcrl
push
shl
and
leave
js
dec
andb
leave
fucomi
inc
dec
mov
mov
out
repnz
xor
jmp
test
gs
push
stos
loopne
adc
and
jp
jnp
into
xor
lahf
les
mov
lock
mov
jnp
test
ljmp
jecxz
pop
subl
pop
lahf
rcrb
nop
mov
jmp
hlt
cmp
nop
add
pop
in
adc
add
sbb
and
jmp
dec
jmp
sar
xor
and
outsb
push
fstp
pop
and
cmp
mov
ds
xor
mov
inc
mov
fisubl
jp
hlt
cmp
loopne
cmp
add
ljmp
jno
enter
in
inc
fldl
lods
xchg
pop
xchg
sub
or
and
and
dec
mov
push
in
xchg
push
xor
frstor
add
fcmovne
pop
jne
pop
pop
pusha
adc
int3
out
sub
adc
sbb
sbb
cmp
jb
pop
inc
lcall
bound
loope
test
shr
push
xchg
xor
scas
xor
xchg
inc
push
rorb
push
addr16
cmp
jmp
ljmp
data16
fdivs
scas
add
push
das
sub
je
jmp
push
aad
jecxz
xchg
push
mov
test
rclb
inc
lret
push
les
add
mov
int3
aaa
jne
mov
cwtl
scas
inc
movsl
xlat
jne
cs
adc
push
cmpsl
mov
inc
pop
sub
cld
daa
into
mov
cld
push
movsb
jae
sti
lcall
mov
push
add
pushl
cltd
lods
shrl
xor
shl
xchg
data16
popf
ljmp
test
fs
xchg
std
jle
cmp
adc
inc
adc
clc
sbb
adc
ss
vpshufd
das
mov
adc
mov
js
shlb
cs
mov
mov
and
mov
xor
nop
pop
pop
je
cmp
inc
inc
inc
dec
push
icebp
cmpsl
push
pop
hlt
push
inc
adc
and
scas
in
sbb
stos
in
add
fsub
movsb
xchg
ret
aaa
push
dec
sub
shll
icebp
cltd
push
test
movl
xchg
xor
sub
fiadds
ds
xor
stos
sub
push
popf
mov
mov
inc
push
into
ss
mov
ds
fscale
and
xorl
sbb
movsb
in
iret
adc
dec
imul
sahf
sahf
push
cli
int
rcrb
dec
mov
sub
je
popf
fs
adc
lret
push
ret
jg
cmpsl
cmp
icebp
inc
shlb
insb
push
hlt
xor
mov
sbb
mov
icebp
push
mov
les
imulb
clc
xchg
imul
mov
das
dec
scas
xchg
rcrb
inc
out
movsl
loop
arpl
rcr
cld
lods
lock
dec
pushf
test
or
adc
and
push
push
stos
movsl
add
in
push
pop
inc
push
push
ficompl
inc
ja
lea
jbe
nop
xchg
cs
cli
inc
mov
lea
mov
shl
sarb
aas
repnz
dec
xchg
test
jp
cmp
das
or
cmpsl
xor
and
mov
aaa
mov
aaa
push
bound
adc
lock
push
cltd
shrb
jle
stos
into
loope
cmpsl
adc
mov
jp
pop
or
ret
jge
in
aam
cmp
out
int
adc
std
add
fbstp
out
outsb
xchg
xor
xchg
bnd
div
les
ja
mov
xchg
sub
loope
inc
and
repnz
in
arpl
hlt
lock
or
jno
ficompl
stc
and
gs
xor
stos
pop
imull
sub
xor
incl
inc
push
cltd
daa
ss
mov
jge
push
jmp
sub
sub
cld
xorl
push
fs
add
add
lret
jmp
jbe
std
addr16
subl
add
push
cmpsb
out
bound
js
test
ss
cmpsl
push
mov
xlat
push
or
jbe
fsts
xchg
sti
outsl
aaa
sti
nop
xchg
pop
sbb
and
push
repnz
lret
cwtl
shrl
cmp
jle
xchg
xchg
pop
mov
mov
aaa
add
push
cmp
insb
xor
cmc
dec
xor
scas
pop
jp
nop
xchg
dec
data16
xor
mov
dec
cmpsl
and
fcomps
bound
jno
mov
sub
jbe
jns
pop
cmp
outsl
jno
stos
push
sbb
xlat
bound
or
mov
out
cmp
andb
dec
jmp
out
jecxz
push
jo
popa
ja
cmp
mov
insl
push
popa
ljmp
mov
fcmove
inc
inc
out
sub
cmp
data16
and
xor
movsb
adc
pushf
push
cmp
outsb
das
clc
sub
lock
jp
xlat
insl
insl
daa
lahf
push
cmpsb
icebp
push
lret
out
pop
mov
mov
pop
in
adcl
orb
ficompl
test
jns
dec
loope
cmp
add
popa
dec
xor
pop
lea
xchg
scas
in
pop
call
dec
cltd
inc
aam
push
scas
loopne
aas
mov
push
mov
and
shlb
daa
xchg
outsb
out
jl
clc
pusha
and
outsl
pop
adc
push
jmp
fimull
jns
pop
test
pop
push
jmp
or
push
lret
push
and
bound
dec
jno
mulb
shll
test
mov
movsb
xchg
inc
rcrb
mov
int
les
addb
loope
cltd
jg
mov
ret
push
cs
int
loopne
cmp
cmp
sbb
cmp
in
mov
push
jns
loope
xchg
add
jbe
sbbl
add
shl
pop
mov
ja
mov
xor
push
enter
cmpsl
jnp
scas
scas
xchg
push
mov
mov
js
orb
xorl
sub
push
add
xor
das
aad
pop
push
lcall
cmpsl
xor
out
pop
adc
leave
mov
jno
push
dec
scas
fdivrl
pop
dec
adc
jp
into
hlt
fldt
xor
and
hlt
cmpsb
jl
or
add
dec
push
mov
add
les
outsb
out
iret
mov
mov
int3
in
cmp
cmp
shlb
sub
dec
xor
in
adc
lods
mov
ror
sub
test
mov
xor
push
sub
lds
adc
jne
out
push
lcall
shlb
iret
out
mov
hlt
loopne
mov
pop
test
jg
mov
rcl
pop
lret
mov
in
sub
mov
cltd
add
jecxz
fs
cmpsl
pop
add
dec
out
push
insb
hlt
and
loopne
adc
clc
push
mov
push
inc
mov
dec
xor
or
addr16
fstps
adc
cmp
xchg
push
sbb
ds
scas
push
rolb
shrl
out
push
call
cmpb
pop
pop
pop
add
fdivs
out
sub
aas
xchg
inc
add
in
sub
dec
sub
and
iret
aas
cmp
jge
jno
je
ret
and
pop
cwtl
mov
dec
ds
aas
pop
loopne
push
dec
gs
inc
jle
aas
cmp
dec
add
sbb
sbb
mov
test
add
mulb
cmp
add
mov
or
xor
inc
inc
sub
inc
jns
lret
repnz
xor
lret
sbb
add
dec
je
mov
inc
cld
pop
dec
jg
xor
add
jno
aaa
fisubrs
int
fdivr
testl
jmp
mov
adc
stc
inc
aad
aad
adc
mov
mov
sahf
jae
pop
in
lds
bound
out
fistpl
in
mov
cmp
imul
andb
cli
dec
sub
or
push
xchg
les
sub
xchg
xchg
int3
decb
mov
cmp
movsb
jl
popf
inc
mov
sub
jns
cli
cmp
stos
push
test
out
ret
cli
shrl
iret
sub
or
stc
inc
cmpsl
jp
cmp
mov
mov
sub
pop
jbe,pt
cmp
add
xchg
repz
jl
cwtl
and
inc
or
mov
push
gs
push
movl
or
outsb
xchg
mov
out
add
mov
cmc
add
inc
cmp
xchg
cwtl
loope
mov
inc
mov
enter
daa
subl
sti
xchg
pusha
xor
fxch
mov
mov
jne
test
cmp
mov
sub
mov
addr16
dec
mov
aas
push
sub
push
iret
lock
out
insb
mov
xor
and
and
xchg
mov
lahf
cli
adc
ret
mov
cmp
cmpsl
cld
sti
and
adc
cmp
fldenv
push
dec
pop
psubb
pop
imulb
addl
pop
mov
cmp
enter
jg
in
addr16
xchg
std
enter
inc
and
lret
jno
fnstsw
dec
mov
push
sub
stc
lret
and
xor
test
jnp
shr
adcl
dec
outsl
ja
push
add
jp
int
stc
out
rcl
adc
lods
xlat
mov
stos
or
pop
loopne
push
aam
orb
dec
lock
sbb
lahf
lcall
pop
loope
dec
jecxz
jecxz
test
aaa
insl
pop
jnp
lret
inc
inc
cmpsl
jnp
into
scas
xchg
popa
cmp
cli
push
cmp
iret
enter
nop
sub
stos
imul
flds
or
xor
push
sar
or
jecxz
insl
lret
or
mov
outsb
mov
les
mov
bound
push
dec
or
gs
lahf
stos
mov
or
sub
iret
aam
pop
jp
push
adc
jbe
jp
and
xchg
popf
fwait
mov
lock
daa
outsl
jbe
sbb
cmpb
inc
stos
mov
ja
or
jbe
mov
sahf
out
mov
fldl
inc
sub
xor
inc
sbb
cmpsb
int
loopne
sar
fwait
das
and
pop
push
or
into
divps
scas
adc
or
pop
or
and
jb
into
mov
mov
in
cmp
inc
mov
outsl
sub
sbb
or
jns
cli
mov
and
or
push
push
decl
inc
inc
mov
mov
cmp
mov
gs
xorb
loope
add
mov
jno
bound
cltd
clc
and
mov
sti
in
sbb
divb
cld
gs
mov
mov
jae
add
and
push
test
mov
in
les
inc
lock
jle
repz
or
mov
pop
jmp
cmpsl
xchg
mov
and
pop
adc
cmp
sbb
mov
push
fiadds
and
mov
fs
mov
mov
sbb
je
test
pop
call
sub
pop
das
cmpsb
je
add
fwait
inc
test
inc
sbb
jo
dec
adc
flds
adc
out
imul
in
dec
xchg
jo
add
inc
cmp
xchg
aaa
fsub
mov
in
sbb
pop
int3
sub
shl
jl
cmp
and
lret
mov
hlt
mov
or
in
repz
lret
pop
fdivp
out
add
jmp
mov
aad
mov
or
xor
test
repz
inc
inc
loopne
pop
xor
sub
push
dec
imul
adc
movsl
in
test
push
addb
and
test
dec
in
ja
adc
fcom
dec
fs
cld
jg
add
push
fnsave
pop
and
pop
ret
cltd
out
adc
add
add
xchg
scas
cmpsl
fisttpll
jb
push
mov
xor
mov
xor
int
mov
adc
mov
or
and
cmp
push
inc
mov
cld
adc
test
inc
mov
orb
outsb
enter
pop
adc
lahf
jp
arpl
mov
xchg
loopne
push
mov
enter
xor
aad
test
fisubrl
dec
fildl
imul
mov
je
imul
add
rolb
push
pcmpgtd
mov
cmp
cmc
inc
adc
ds
sub
ss
lock
xchg
add
jge
aaa
ret
or
test
shrb
fiaddl
mov
jle
jb
pop
int3
pop
test
cld
sahf
stos
mov
mov
cmp
insb
ss
rclb
jae
inc
and
clc
imul
dec
mov
jl
jbe
movsl
mov
das
loopne
cmp
inc
mov
mov
jecxz
sub
jnp
sbb
adc
pop
mov
sbb
adc
addb
mov
mov
jle
mov
loope
or
xchg
cmp
sbb
lds
stc
cld
insb
xorb
js
test
push
dec
ds
adc
nop
aam
dec
loopne
adc
aad
mov
mov
push
sbb
or
outsb
int3
adc
cmp
and
int
adc
cmp
inc
or
push
dec
pop
repz
or
sahf
rclb
mov
jmp
or
ret
test
and
push
mov
xor
jbe
fidivrl
les
mov
xchg
shlb
push
xor
sbb
in
call
pop
sbb
add
aaa
push
or
xchg
mov
adc
ret
xor
imul
insb
lock
test
popa
out
daa
jne
lret
mov
stos
push
cltd
movsl
add
mov
sbbl
in
sub
rcl
ds
cmc
mov
lahf
and
arpl
push
push
lods
rclb
paddsw
repnz
insl
add
lods
or
icebp
lods
shrb
push
cwtl
cmc
popf
pop
or
cmp
add
and
std
push
lock
fimuls
dec
lret
adc
int3
xchg
inc
cmp
jae
insl
cli
jno
push
sbbb
aad
incl
pop
lahf
imul
sub
js
dec
inc
dec
negl
push
jbe
int3
ja
xchg
jbe
stos
cwtl
out
adc
mov
mov
cmp
leave
xchg
sbb
fdivs
mov
imul
mov
gs
aam
je
outsb
lock
sbb
pop
pop
push
jb
xor
loope
mov
pop
sbb
xor
inc
pusha
push
repz
hlt
insb
push
mov
rcrl
jg
cmpl
call
flds
imulb
and
push
and
fwait
pop
pop
mov
ss
xor
sbb
cltd
jmp
dec
pop
test
mov
push
fsubrs
dec
lret
or
ret
shl
scas
popf
push
sbb
mov
xchg
ret
jb
push
int3
adc
xorb
and
repnz
push
mov
push
stos
xchg
lea
subb
mov
inc
xor
out
inc
cmpb
jmp
xchg
xlat
sbb
or
jno
cmpsl
imul
or
sub
std
popf
mov
jecxz
xor
popa
cli
imul
mov
les
jmp
jl
pop
out
sub
jp
mov
addl
scas
and
idivl
add
enter
cmpsl
fstpt
mov
add
ret
push
or
adc
cs
fcoms
or
imul
cmpsb
gs
lret
adc
call
push
mov
xor
icebp
movsl
outsl
addr16
push
xor
mov
mov
pop
popf
add
add
test
aad
addb
sar
insl
dec
fldl
inc
xchg
cwtl
pop
fwait
or
mov
fucomip
bswap
xchg
shrl
dec
arpl
loope
xlat
mov
or
int3
mov
cmp
mov
in
inc
jp
imul
jbe
int3
add
dec
xchg
mov
pop
adc
mov
cmpsb
dec
out
jle
mov
jnp
mov
mov
int3
pop
call
imul
cmp
or
shr
lcall
push
repz
mov
lock
sbb
lahf
imul
mov
or
inc
sub
sbb
scas
jbe
and
adc
xchg
rolb
iret
popf
push
dec
mov
imul
out
mov
jge
fldt
or
arpl
sbb
sbb
aas
or
fisubrl
das
mov
adcb
pop
sbb
lahf
ret
jmp
mov
cmp
sti
popa
and
mov
jae
xchg
and
xchg
add
arpl
fdivrl
jecxz
jb
mov
aam
lock
mov
xor
mov
mov
rcl
mov
add
loope
pop
cmp
dec
cmpsb
into
das
and
xor
pop
inc
cltd
jno
mov
ret
mov
ret
inc
divb
fldcw
push
jl
mov
add
dec
add
inc
pushf
scas
mov
das
adc
lods
mov
stos
dec
das
sub
mov
mov
or
dec
xchg
fcmovu
push
dec
aas
add
push
push
sbb
xor
sub
xlat
movsl
jb
popa
or
xorl
add
adc
nop
shll
lods
or
fidivrs
mov
inc
mov
inc
out
push
arpl
std
ret
jo
ret
pop
rolb
mov
push
xor
sbb
dec
sbb
adc
dec
popf
dec
sbb
cmp
xlat
shlb
jbe
adc
xlat
jecxz
fucom
repnz
inc
lahf
inc
push
xor
xchg
dec
push
dec
and
fmul
pop
mov
dec
test
add
inc
mov
insl
xchg
js
mov
xchg
inc
sbb
stos
push
fcmovbe
setne
into
mov
push
pop
add
in
or
jecxz
add
arpl
ret
inc
aas
fwait
orl
mov
popa
push
pop
jo
cmpsb
cs
mov
cwtl
jo
push
sbb
filds
xchg
or
mov
movsl
outsb
mov
add
and
iret
dec
inc
fs
icebp
lods
pushf
hlt
addr16
shll
insb
scas
push
aad
mov
dec
lods
adc
adc
ficomps
dec
negl
fwait
push
fwait
mov
push
loopne
and
push
add
and
xchg
loop
les
repz
jp
pusha
cwtl
add
rolb
and
push
pop
rol
adc
pop
stos
mov
es
test
pop
push
pop
xchg
fnstenv
cld
mov
addr16
jmp
out
bound
dec
lds
scas
xchg
cmpsl
mov
sbb
mov
push
mov
sbb
xchg
adc
fisttpll
ret
pop
cwtl
cmp
orb
xor
imul
or
ret
mov
jbe
call
stos
fs
in
mov
and
sub
inc
jb
lahf
dec
push
mov
mov
mov
lea
sbb
xchg
flds
jle
sahf
sbb
mov
push
jle
cmp
mov
or
xor
inc
into
mov
fwait
dec
cli
push
popf
bound
xchg
sbb
sub
cmp
pop
pop
pop
mov
js
test
aad
loopne
in
mov
pop
mov
adc
adc
jb
push
xchg
add
jmp
dec
mov
sub
add
mov
push
test
ljmp
in
xor
daa
cltd
or
push
lods
or
sbb
jge
push
cmp
shrb
icebp
imul
idivl
xor
pop
testb
inc
int3
inc
mov
movsl
dec
xlat
pop
das
addl
cmpsb
lret
jne
adc
mov
dec
sub
cmp
sub
lds
pop
lcall
scas
jle
je
push
lea
lods
pop
test
js
imul
add
pusha
rcl
mov
xlat
fwait
sti
sub
fisubl
les
push
loop
and
sub
movl
xor
es
daa
imull
xor
ss
add
aam
dec
rol
push
mov
stos
dec
xor
aam
xor
mov
jmp
movd
pop
inc
sub
mov
cmp
dec
fidivrs
jecxz
and
movsb
fs
push
daa
fwait
lods
sbb
outsb
int
and
xor
xor
cmp
fimuls
sub
mov
dec
push
cmpsb
aam
cli
adc
sbb
sbb
xor
xlat
cmp
lcall
mov
repz
sbb
xlat
ficompl
ljmp
mov
ss
mov
imul
filds
mov
xchg
cli
dec
inc
andb
jge
out
aaa
xor
sbb
adc
fstpl
sub
pushl
push
add
or
jmp
sbb
subl
jg
in
pop
or
out
lcall
dec
in
es
lods
inc
in
pop
ja
mov
adc
push
fincstp
pop
lods
fcompl
lea
dec
fadds
enter
lods
xlat
dec
sbb
push
leave
mov
pop
mov
pop
or
mov
jp
insl
in
gs
in
fildl
jmp
push
push
mov
add
cmpsl
xchg
jns
add
mov
mov
and
mov
or
ja
cmp
dec
mov
push
aas
or
js
icebp
cmp
iret
std
or
sub
push
dec
into
and
xor
pop
cmp
and
fsubl
js
pop
adc
in
jp
clc
imulb
xchg
imul
jnp
push
pop
jno
mov
xchg
sbb
loopne
or
movsl
jmp
adc
xor
mov
insb
inc
xchg
jp
lods
cs
test
xor
cltd
movsb
ret
adc
pop
sub
fwait
inc
xchg
adc
and
xor
mov
mov
outsl
mov
popa
mov
repnz
je
inc
mov
or
nop
mov
add
ljmp
cmc
dec
mov
test
enter
cmp
mov
mov
leave
pop
xchg
mov
idivb
stos
dec
push
je
push
call
scas
pop
inc
or
add
dec
sti
fcomps
sbb
ret
arpl
inc
inc
inc
xlat
cmpb
jno
loop
push
outsl
inc
fldl
inc
or
movsb
int
scas
xchg
enter
sub
xchg
outsl
js
adc
xchg
shlb
mov
in
movsl
mov
dec
sub
jp
mov
mov
xchg
rcrl
push
mov
mov
adc
out
loope
and
stos
pop
xchg
notb
test
xchg
mov
inc
jp
call
dec
ret
jbe
mov
shll
repnz
mov
sbb
and
out
xor
aas
lock
loope
inc
cmpsl
gs
push
bound
cmpl
jne
and
call
std
stos
lret
scas
shlb
add
mov
sbb
loopne
xor
pop
mov
das
mov
mov
jbe
push
negl
ss
mov
xchg
aad
adc
imul
aas
mov
mov
add
jo
into
cvttps2pi
jge
inc
sbb
mov
sub
sbb
cmp
add
mov
iret
sbb
fucomp
stos
sub
or
popa
bound
cmp
sbb
xorb
gs
mov
notb
call
adc
push
push
push
cmc
lcall
jl
dec
or
xor
inc
lcall
aad
mov
xchg
fsubrs
in
insl
sub
sbb
cmp
scas
inc
or
mov
cwtl
aaa
scas
push
jg
cld
ret
jmp
hlt
add
dec
das
popf
test
inc
icebp
and
fimull
sarb
rcrb
out
jecxz
xorb
enter
mov
rorb
add
inc
dec
cmp
outsl
mov
test
push
jbe
mov
and
cwtl
sub
gs
inc
andb
pop
imul
arpl
add
shrl
mov
outsl
jae
xchg
inc
jmp
in
cs
sahf
inc
pop
rep
int
mov
jne
add
cmp
adc
add
fs
lret
es
mov
lods
cmp
inc
inc
jmp
pop
test
pushf
fildl
pop
test
fidivrs
stos
jp
repnz
cmp
dec
pop
sub
sub
ja
std
xor
mov
mov
push
jae
inc
mov
push
inc
nop
fs
or
int3
in
lcall
bound
mov
add
jo
pop
mov
ss
jl
rclb
pop
mov
mov
jno
push
dec
test
ss
clc
or
mov
cmp
inc
enter
outsl
push
test
jnp
cmpsb
mov
loope
subb
scas
pop
adc
iret
mov
inc
dec
cmp
stc
sbb
popa
test
lret
xchg
clc
cmp
lock
jnp
and
inc
lods
jmp
mov
adc
aad
push
outsb
xchg
cmp
pop
and
cltd
rolb
push
pusha
adc
or
scas
scas
mov
add
repnz
pop
fstp
jle
js
jl
push
xlat
stos
aas
inc
test
popf
int3
movsl
popf
dec
mov
bound
mov
adc
xor
mov
lret
xor
inc
mov
cmp
movsb
and
mov
daa
sub
jmp
dec
cltd
mov
pinsrw
push
shll
int3
sbb
dec
adc
mov
lea
xlat
sub
lds
and
adc
test
xchg
sarb
das
cmp
xchg
lret
mov
pop
cmp
sbb
or
repz
xchg
xchg
movsb
sbb
cmp
push
xchg
push
into
inc
mov
or
and
xor
aas
ret
insl
push
jno
lods
pop
or
cmp
push
bound
fstl
xchg
jecxz
and
push
xor
pop
dec
dec
std
or
into
cs
gs
cs
roll
and
pop
and
xor
dec
addl
add
into
out
pop
mov
mov
mov
xor
pusha
cmpsl
push
xor
mov
inc
test
mov
inc
and
jbe
in
or
fisttpll
add
aas
sbb
dec
xor
mov
jp
test
rdmsr
inc
das
jmp
fdivr
mov
sub
idivb
enter
or
outsb
and
out
inc
mov
sbb
mov
cmp
or
loope
or
bound
movsl
insb
add
cmp
xlat
aam
and
out
xor
pushf
jnp
es
daa
xchg
and
out
pop
and
cmpsl
inc
dec
jmp
sbb
mov
iret
fwait
jmp
lock
int
sub
sarb
aam
dec
imul
notb
sub
or
lods
or
cmp
xor
fsts
or
fs
rcl
xor
xor
xchg
or
sub
push
inc
int
mov
negb
xorb
lea
test
iret
mov
xor
imul
xor
push
int
push
mov
std
xchg
mov
je
cmc
lret
clc
negl
mov
cmp
filds
out
fldcw
mov
adc
loopne
or
mov
movsb
adc
xchg
pop
cmpsl
adc
inc
ljmp
pop
std
xchg
lea
or
adc
add
inc
movsb
fcmovne
je
and
leave
lahf
bound
mov
mov
mov
mov
jb
call
ret
cld
daa
call
dec
repz
dec
int
sub
sti
sahf
in
push
dec
je
popf
sbb
cmp
insl
dec
sarb
lahf
stos
in
arpl
mov
lods
mov
jno
cmp
sub
out
ljmp
add
cmp
shr
dec
clc
inc
rol
pop
mov
pop
mov
repnz
int
dec
aad
inc
repz
js
dec
jae
mov
daa
call
pusha
pop
mov
mov
jmp
mov
sub
ja
call
xchg
xchg
outsb
mov
lock
ret
xor
jmp
mov
mov
in
pop
jecxz
mov
ja
xor
mov
and
or
int
mov
sub
cmp
stos
inc
xchg
out
adc
push
mov
jmp
adc
ss
inc
push
xor
aas
inc
add
jp,pn
mov
xchg
add
aad
xchg
sub
push
mov
jnp
out
mov
push
lods
int
adc
lahf
stos
mov
ret
shlb
pop
fwait
idivl
hlt
into
int3
ret
xor
ja
fsts
dec
leave
loop
mov
popf
loope
xor
int3
or
setno
xchg
pop
jg
lcall
stc
test
mov
mov
pop
mov
arpl
sub
ljmp
xchg
test
dec
dec
dec
xchg
mov
mov
out
sbb
and
test
or
push
mov
repz
ret
xchg
subl
and
or
dec
cltd
outsb
xor
push
shl
inc
jmp
inc
es
fdivrl
or
jle
cli
sahf
ja
jmp
loope
std
jecxz
and
rcll
aas
inc
lret
and
push
and
sbb
inc
jae
outsb
dec
rcl
sub
sbbb
xor
popa
xchg
xchg
jge
imul
fucomp
add
jmp
sub
int
loop
aad
xchg
fiaddl
sbb
push
pop
les
fldt
xchg
xor
aam
sbb
xchg
mov
sub
xor
or
icebp
ret
movsl
inc
sahf
loopne
xchg
push
inc
ud1
ret
mov
xchg
into
lods
cmp
inc
sbb
xchg
mov
data16
xor
lods
pop
in
daa
cmc
js
dec
ja
shlb
mov
fldenv
adc
pop
loope
into
dec
add
adc
push
add
jns
xor
mov
popa
in
shl
jbe
dec
push
jns
in
lret
adc
sub
pop
add
jnp
cli
and
in
xchg
dec
push
mov
jo
push
jns
adc
xchg
repnz
xchg
cmpsb
insb
pop
in
lods
sub
movsl
loope
cmp
fwait
lock
popa
mov
ret
or
cmp
fisubl
jmp
mov
cmpsb
xchg
roll
cmc
in
test
mov
or
pop
in
mov
lock
in
add
jb
out
sbb
cmpl
hlt
pop
push
xchg
xor
sub
cmp
adc
mov
imul
out
mov
jmp
test
add
push
in
adc
mov
rcll
mov
mov
inc
fisubl
adc
imul
push
jmp
clc
mov
xchg
mov
arpl
rorl
insl
push
pop
mov
rolb
insb
pop
jnp
inc
popa
repz
lods
jno
sub
ror
jbe
std
leave
or
int
je
testb
lcall
sbb
scas
insb
daa
sbb
popf
mov
aas
mov
das
jb
lcall
enter
push
pop
rcrb
sbb
dec
shrl
sbb
push
cltd
ljmp
outsb
xor
imul
stos
nop
pop
popl
sbb
lret
pop
cmp
and
aam
out
lea
repnz
aaa
idivb
xor
jl
aad
jns
in
cwtl
lods
leave
out
xchg
and
push
imul
std
sub
and
out
fnstsw
lret
mov
std
adc
fld1
or
add
lret
rorb
sub
push
sub
jb
push
sub
mov
sbb
xchg
jns
and
pushf
fwait
pop
clc
push
pop
out
inc
sub
jae
ds
adc
lock
pop
mov
sub
scas
lods
mov
dec
and
lret
jno
out
imul
ret
jnp
lods
pop
sub
jns
push
cmp
pop
bound
out
ret
rclb
ja
outsb
push
aad
xor
pusha
in
mov
pop
data16
mov
mov
xchg
inc
xchg
lods
je
xchg
fucompp
insb
dec
jecxz
iret
imul
push
cmpsl
mov
mov
scas
cld
push
mov
mov
lea
dec
shll
mov
cmp
push
or
xor
pop
inc
mov
mov
test
push
xor
xor
pop
mov
jnp
pop
rorl
lret
mov
daa
lock
lret
insl
dec
mov
or
fistpl
aas
stos
push
push
mov
mov
mov
and
jle
push
outsl
adc
ror
push
fcompl
pop
inc
dec
movsb
add
hlt
and
aaa
cld
lret
add
data16
mov
jmp
loopne
mov
cmp
or
adc
xlat
jp
dec
lods
and
mov
lret
fildll
insb
or
push
in
push
mov
sbb
cmp
callw
aas
ja
xchg
xlat
push
pop
xor
filds
test
lds
mov
out
dec
pop
mov
adcl
push
push
lds
jns
fstpt
ljmp
cltd
je
xchg
cmp
cltd
mov
cmp
mov
xchg
test
test
stc
push
scas
imul
leave
push
js
add
lcall
xchg
mov
lcall
mov
icebp
lea
mov
or
or
call
xchg
pop
xchg
push
push
fnstenv
fwait
sub
lcall
sbb
popf
mov
xchg
mov
adc
cwtl
jbe
repz
js
mov
xchg
jbe
push
xchg
inc
popf
adc
cmc
shll
xlat
cltd
iret
or
mov
dec
ret
into
jg
push
pop
dec
push
mov
add
insb
or
or
pop
sub
adc
pop
shll
cmp
mov
inc
fbld
xchg
clc
or
sub
out
iret
arpl
cs
or
add
mov
movsl
push
lret
mov
iret
pusha
mov
popf
dec
push
ret
pop
test
je
fists
shlb
fsubl
pop
mov
or
daa
outsl
and
sub
nop
xor
lea
mov
js
sarl
and
pop
mov
mov
adc
xchg
jae
xchg
pop
sub
pop
shll
ds
or
sub
sbb
lret
xchg
cmp
stos
cmp
mov
push
roll
push
and
outsl
mov
jb
cmp
cmp
jb
int3
sub
call
push
test
or
push
and
sub
sbb
shll
push
xlat
mov
pop
sbb
xor
push
adc
ljmp
in
roll
jbe
hlt
mov
mov
and
jle
lret
push
or
andl
lds
sbb
xchg
push
outsl
icebp
jecxz
dec
xchg
push
pop
dec
or
jp
and
mov
stc
rcll
inc
or
out
mov
hlt
mov
mov
xor
pop
scas
dec
mov
jp
mov
and
int
imul
shlb
sub
iret
and
dec
hlt
mov
adc
inc
inc
sbb
addl
dec
mov
stos
xchg
mov
dec
inc
fldl
pop
fsubs
lock
mov
out
jl
sbb
jne
scas
or
jbe
cltd
fdecstp
gs
xchg
mov
adc
xchg
cmp
shlb
pushf
flds
ds
dec
dec
sbb
lcall
outsl
out
sbb
lock
lods
mov
and
add
les
mov
out
mov
mov
push
stos
or
lcall
pop
pushf
fidivs
ss
sub
loope
js
ljmp
pop
mov
mov
dec
cmpl
imul
test
jge
cmp
es
or
or
sbb
jno
cli
das
sahf
jnp
xchg
sbbb
jge
lock
shrl
clc
xor
idivl
dec
push
push
adc
xchg
push
jae
shrb
and
dec
adc
and
mov
movsl
loopne
orb
aam
int
rcrl
cs
inc
repz
or
cmp
dec
int3
leave
push
jno
test
ret
adc
xor
push
push
pop
lcall
loope
adc
aaa
adc
xlat
push
pop
pop
in
in
jns
sbb
scas
mov
cltd
sub
xor
jmp
cli
xor
faddl
and
xorb
jle
mov
sbb
loope
push
pop
pop
adc
enter
leave
shrb
pop
cwtl
movsl
lea
inc
jbe
stos
jge
adc
jae
xor
test
jl
and
mov
xor
push
das
das
jmp
cmp
fnstenv
xchg
es
fcoml
cmpsl
push
outsb
or
dec
push
mov
xchg
mov
fwait
scas
jb
ja
divb
jo
inc
add
push
sahf
cmp
jecxz
pop
inc
rol
cltd
xchg
lods
or
loop
jg
pop
rcl
iret
dec
jl
out
lds
and
xor
adc
scas
jp
add
cmp
dec
sahf
jbe
mov
mov
xchg
aas
pop
xchg
jns
push
push
xor
sbbl
imul
push
fadds
xchg
add
xor
mov
jmp
adc
in
insb
xor
stos
mov
shl
jmp
sub
cwtl
cmp
mov
addl
repz
pop
add
cmp
cld
iret
jecxz
fwait
mov
jp
dec
std
je
mov
sti
xor
clc
adc
sti
arpl
ja
xor
xchg
pop
pop
add
mov
jle
imul
jnp
outsb
call
shlb
xor
sub
pop
jae
pop
testl
fcoml
insb
push
jge
and
outsl
add
and
leave
aam
pop
cwtl
and
js
lds
add
lahf
pop
out
test
cmc
xchg
mov
jmp
orb
dec
sub
cmpsl
xlat
js
jae
cmpsb
mov
adc
sub
sahf
or
inc
test
jg
lret
pop
xor
mov
dec
xchg
insl
sbb
pusha
jp
or
fisubrl
sub
adcl
ret
loopne
testl
cmp
jg
mov
loopne
mov
shlb
clc
push
push
push
rolb
pop
jp
movsb
movsb
cmc
push
or
jbe
or
push
fs
dec
rcll
in
cmp
adc
mov
lret
ret
xlat
scas
push
lock
xor
mov
push
mov
mov
sbb
mov
fadd
loopne
inc
mov
repnz
push
mov
push
or
mov
test
push
push
pushf
and
push
pop
mov
imul
dec
fwait
or
je
add
cmc
pushf
int3
negb
rcrb
mov
pop
loope
pop
jne
mov
pop
add
pop
push
icebp
or
iret
popf
cwtl
iret
insl
pop
mov
push
repnz
xchg
cmp
jo
arpl
gs
out
pop
xchg
xchg
add
leave
shl
pop
mov
mov
or
add
fisubrl
in
loope
xor
xor
jb
insl
dec
lcall
xchg
cli
xchg
not
ret
jg
adc
fisttpll
mov
stos
leave
inc
jg
jns
fnstsw
sub
mov
sub
push
sub
inc
js
loopne
nop
adc
imul
jns
add
or
jne
dec
or
mov
mov
push
mov
shl
push
dec
repz
pop
push
into
lahf
mov
movsl
lods
out
loope
fcoml
inc
add
data16
sbb
inc
pop
mov
in
mov
and
cli
imul
mov
sub
pop
xlat
and
push
repz
out
addr16
sub
push
mov
push
dec
leave
cmpsb
lcall
or
mov
push
icebp
repz
inc
mov
out
enter
aas
or
outsl
xor
add
and
adc
hlt
pop
out
fs
xor
jmp
int
lods
sub
pop
pop
ljmp
test
daa
xor
xchg
inc
fistpl
jae
cli
fwait
pop
imul
test
addb
dec
dec
addl
xchg
sub
mov
daa
shll
xchg
rorl
ds
add
popf
stos
js
mov
ret
pop
bound
inc
and
cmp
dec
dec
repz
cmp
int3
push
jb
sub
xchg
xchg
xchg
push
cmc
ja
jae
dec
rcll
scas
push
sub
in
add
and
cmp
popa
xchg
aas
sbb
addb
adc
or
jne
cli
arpl
ffree
xchg
loop
jno
mov
jge
data16
in
push
mov
decl
push
out
lret
clc
jns
dec
jg
lret
aad
add
adc
jg
inc
cmp
dec
push
add
pop
insl
divl
aaa
pop
mov
test
and
icebp
popa
je
sub
aaa
push
xor
mov
nop
out
adc
cli
mov
mov
push
jnp
popf
adc
sub
gs
sbb
imul
inc
push
imul
or
ljmp
packssdw
fs
stos
and
and
js
cmc
ret
sar
or
movsl
adc
sti
xchg
sbb
xor
mov
adc
push
xor
ret
icebp
nop
jnp
mov
jno
push
or
sbb
or
cmpb
lret
push
cs
jl
ja
ss
test
out
dec
test
repz
leave
xchg
dec
setle
movsb
sub
fcom
mov
lret
fcmove
add
fidivrs
push
cmp
inc
sub
adc
xor
mov
xor
dec
jp
aas
lds
fs
out
inc
dec
jo
cmp
shll
jmp
adc
clc
or
sbb
cmp
mov
out
dec
fsts
popf
pop
das
testl
jge
add
lds
out
int3
sub
jl
mov
jo
iret
call
pop
dec
jne
lods
frstor
popl
pop
add
xchg
clc
xchg
dec
sbb
push
dec
add
in
leave
jg
loope
in
cmp
cmpsb
jle
or
pusha
pop
sarb
insb
pop
mov
loopne
pop
xchg
mov
cltd
gs
pop
pop
pushf
jns
ja
inc
push
aas
mov
sbb
and
or
xor
pop
cltd
sbb
sub
iret
push
xchg
xchg
dec
test
loope
cmc
sbbb
push
cmc
xor
sar
repz
mov
pop
rol
out
inc
outsb
mov
idivb
cmp
jle
pushw
jb
stc
mov
sbb
sahf
push
jp
ss
in
notl
inc
cmpsl
rorb
sub
dec
add
mov
xor
mov
aam
adc
je
add
pop
xor
mov
fists
jno
cmpsb
jo
sub
cltd
and
ds
jg
adc
scas
fisubl
test
fs
or
repnz
jbe
pop
adcl
xor
shl
out
lock
imul
mov
mov
push
mov
nop
scas
in
popaw
int3
sti
mov
push
push
cltd
cmp
xor
inc
cmpsl
sub
xor
adc
inc
nop
sarb
dec
in
jge
or
jle
xchg
or
mov
js
mov
stc
push
shl
or
sub
ret
pusha
sub
mov
add
or
adc
iret
in
ljmp
cltd
jnp
jp,pt
enter
rorb
push
cmp
popa
imul
sub
dec
adc
ss
jle
cmc
sbb
inc
movsl
loop
in
and
sbb
lock
stos
cmc
add
jo
gs
cs
sahf
jmp
xchg
xor
loop
jne
inc
inc
push
inc
aad
pop
inc
inc
int3
mov
cli
lcall
iret
or
and
test
sub
xchg
pushf
inc
mov
notb
cmp
mov
inc
sub
xor
fadd
repz
int
addr16
and
inc
jl
es
ljmp
outsb
jge
out
dec
pop
outsl
scas
jno
push
dec
sbb
leave
mov
shr
fistpll
fcomps
imul
pop
pop
dec
mov
fists
ret
pop
nop
sub
and
orb
or
push
sub
sbb
inc
push
aad
lcall
xchg
loopne
dec
mov
or
cmpsl
sbb
repnz
ficoml
pop
les
push
xor
add
sahf
shll
aas
adc
lock
shll
clc
test
xchg
add
faddl
cmp
push
and
mov
pushf
cmpsl
ret
divb
push
adc
or
aad
inc
cmp
push
in
jl
xor
inc
xor
and
and
push
popf
fs
mov
dec
push
out
es
test
shrb
adcl
jnp
cmp
lea
sub
inc
mov
sub
jl
mov
mov
repnz
mov
aam
flds
jge
sbb
cmpsl
push
addr16
adc
push
pop
inc
dec
jecxz
push
lods
stos
xchg
push
jmp
mov
lock
insb
push
xor
outsb
add
lods
inc
push
push
insb
add
gs
mov
mov
sahf
jnp
inc
mov
repnz
cld
lcall
nop
push
in
fdivl
mov
mov
mov
mov
mov
loope
in
mov
jae
push
push
add
push
or
xchg
push
cmp
xchg
bound
push
push
and
pop
dec
adc
lea
jp
mov
insb
add
sbb
mov
in
test
ljmp
push
mov
enter
mov
add
stos
cmp
pop
inc
adc
rcr
cltd
out
pop
test
dec
fstl
lods
fcomip
into
xor
loope
pop
jns
push
lods
fyl2xp1
push
add
fisubrl
and
mov
push
mov
out
data16
or
add
jmp
arpl
test
jbe
xor
jge
sbb
sbbb
pop
push
push
aaa
mov
push
out
pushf
mov
and
popf
imul
aaa
sub
push
repnz
push
push
aas
in
std
xchg
ret
mov
mov
push
out
mov
xor
bound
std
push
mov
mov
xor
stc
js
xchg
jb
stos
dec
out
aaa
sbb
imul
pop
add
mov
ret
movl
shrb
cmpsl
xchg
xor
sub
pop
stos
mov
adc
int
push
push
sub
stos
test
jne
cmp
adc
add
les
pop
ljmp
pusha
push
cs
lock
cmp
popf
mov
and
arpl
adc
sbb
and
jns
sbb
aad
cmp
push
xchg
lea
jmp
add
push
stos
aad
cmpsb
sbb
jle
sub
ss
xchg
add
xchg
test
xor
iret
or
lahf
mov
push
insl
stos
mov
mov
jbe
je
inc
stc
out
lcall
call
in
das
and
jp
cwtl
ja
mov
clc
push
dec
push
flds
xlat
std
out
lock
cmp
shlb
xchg
mov
add
popa
sub
repnz
cmpsb
push
test
pop
pusha
jecxz
addb
add
fists
pop
or
xchg
std
mov
dec
out
push
lret
sub
jg
ret
out
pop
scas
pop
call
mov
ljmp
jmp
or
in
xor
lds
sbb
dec
jns
xlat
ss
not
ret
into
and
xor
test
shrl
adc
sub
adc
mov
lds
add
stos
pop
in
or
xchg
clc
mov
and
arpl
popa
jnp
popa
stos
scas
aas
sbb
fisttpll
call
int
repz
and
mov
sub
out
shlb
xlat
jne
ja
fs
jge
add
dec
jns
rolb
shll
push
lds
jae
push
out
push
xlat
stos
sub
jne
loopne
dec
jp
push
xchg
mov
and
cmp
sub
add
add
jnp
push
out
fidivl
jae
xor
push
push
popf
mov
lods
mov
shlb
dec
jle
fadd
add
cmp
inc
lock
mov
jg
xchg
inc
sub
shrb
cmpsl
fisubrl
cli
leave
inc
pop
dec
push
enter
mov
out
lds
lahf
mov
inc
mul
mov
add
mov
adc
xchg
pop
je
repnz
cli
jo
add
gs
mov
or
sbb
pushl
jge
lcall
adc
mov
sbb
test
mov
lds
xchg
or
cmpsl
loope
loop
sar
xchg
sub
rcll
cmc
lret
aad
or
into
cmp
and
icebp
inc
jbe
xchg
jmp
push
pop
fiaddl
pop
enter
lret
adc
dec
cmp
sbb
cmp
sbb
ds
jmp
test
or
cmp
xor
fnstenv
pop
popf
rclb
sbb
jl
iret
int
imul
stc
aaa
sahf
pop
out
out
dec
inc
lret
shlb
jge
push
jl
pop
jecxz
mov
mov
into
in
mov
aas
xchg
aam
mov
cwtl
mov
lods
orb
jnp
or
lock
push
mov
jecxz
push
es
loopne
mov
inc
mov
mov
jge
dec
popa
jp
sub
push
cmpsb
cmp
jmp
cmpsl
jmp
mov
jno
xchg
push
test
add
mov
into
pushf
pop
lods
push
ret
lahf
jbe
jle
mov
dec
add
clc
ret
xor
xchg
int
mov
inc
out
dec
in
xchg
add
mov
fldt
push
adc
cld
popf
pushf
mov
jo
imul
dec
jo
icebp
lret
pop
push
inc
rclb
push
mov
les
fdivrl
loope
push
pop
pop
jecxz
mov
xchg
push
and
mov
addb
jbe
pop
popf
adc
pushf
pop
inc
jns
and
out
shl
cmp
mov
ss
sbb
jg
or
mov
jl
or
adc
and
xor
mov
xchg
or
nop
int
loop
push
cmp
mov
stc
cmpsb
fistl
mov
jg
out
adc
movsl
jp
fistpl
das
mov
test
sub
cld
dec
iret
jne
cmp
std
out
mov
dec
dec
shlb
sub
xchg
push
mov
cmp
aas
inc
inc
out
adc
out
pop
dec
or
push
sbbl
jecxz
mov
popf
xor
popa
cmp
aad
jbe
mov
outsb
and
cvttps2pi
stos
rclb
sub
push
push
sbb
test
xor
loope
ss
jnp
jno
inc
sub
test
inc
sub
xchg
xor
dec
inc
xor
subb
dec
jmp
addr16
int
in
ret
sahf
fadds
adc
scas
mov
stos
inc
pop
mov
or
jbe
mov
and
jl
stc
fcoms
insb
in
enter
negl
mov
mov
fcmovnb
push
scas
mov
stc
sbb
jecxz
call
imul
out
dec
jne
popa
out
mov
mov
push
outsb
sub
mov
mov
mov
sbb
loop
mov
mov
cli
sarl
out
sbb
inc
xor
pop
pop
fidivrl
inc
or
cmpsb
xchg
add
lret
dec
or
jmp
xor
in
fsubrs
ds
jae
dec
mov
xor
into
jo
nop
fistl
outsl
mov
mov
push
dec
aam
rorb
addl
jp
jbe
es
daa
pop
shll
cmp
lret
sti
xchg
stos
in
cmp
push
jbe
dec
cli
repnz
mov
data16
ret
sbb
in
hlt
push
xchg
jmp
repnz
jp
nop
mov
shll
adc
cmpsb
adc
cwtl
adc
mov
outsl
xchg
jne
jp
cmp
leave
cltd
in
clc
pushf
movsb
mov
jle
lods
sahf
xchg
ret
push
bound
std
loope
jne
cmp
loop
int
int3
ja
sub
mov
stc
cs
jbe
add
jmp
mov
sbb
in
add
jmp
lods
jns
add
adc
movsl
mov
cli
int
aaa
inc
xchg
adc
pop
add
mov
xchg
fisubrs
test
jp
mov
adc
jbe
xor
pop
xchg
aaa
xlat
push
out
shl
xchg
sbb
fists
cmpsb
aam
sub
jge
in
push
clc
ret
mov
jbe
push
popa
arpl
xchg
or
out
rcrl
pop
add
jnp
inc
add
nop
jae
push
rol
addl
in
pushf
clc
sbb
mov
cmovbe
push
push
ja
adc
adc
fmul
loop
rolb
dec
pop
add
or
and
rolb
add
int3
dec
addb
mov
movsb
filds
in
and
addb
bound
push
cwtl
or
outsb
cmp
add
jnp
out
push
cmp
inc
loop
sahf
mov
and
into
out
sub
pop
leave
adc
sub
sbb
push
movsl
mov
adc
lock
mov
pop
mov
das
repz
jl
sub
rcl
repnz
out
or
test
repz
rolb
imul
inc
mov
push
sub
ljmp
mov
sub
and
push
ret
add
add
xchg
jns
dec
enter
push
addr16
into
aas
fmull
outsb
insb
jmp
shrl
cltd
xlat
sar
mov
adc
je
xchg
insb
call
lcall
cmc
push
rorb
and
cmpb
enter
scas
dec
iret
adc
nop
ss
mov
lcall
mov
dec
jns
lods
jo
popa
jnp
into
push
rorl
and
add
and
daa
push
xor
sbb
dec
sbb
jp
mov
push
mov
mov
sarl
stc
push
nop
sbb
adc
push
xlat
mov
addr16
es
mov
push
orl
lods
push
hlt
ss
push
cmp
or
aas
nop
inc
sbb
adc
xchg
push
fldt
sbb
cmp
jae
mov
lret
movsb
push
jmp
mov
or
cltd
mov
dec
imul
adc
pop
adc
daa
sub
ret
add
rcll
cmp
sbb
adc
stos
xchg
adc
mov
out
fdivr
gs
outsl
jb
out
mov
into
and
mov
lahf
repnz
jb
xor
and
xchg
dec
hlt
outsb
xor
or
push
aaa
and
pop
mov
in
jl
cmpsb
mov
adc
pop
test
aam
pusha
aad
cs
movb
or
mov
shlb
sbb
test
sahf
fsubrs
nop
adc
inc
xchg
mov
pop
jno
inc
int3
divb
in
in
es
mov
arpl
pushf
dec
loopne
push
dec
jle
ret
push
dec
inc
out
repnz
fwait
or
lods
pop
jl
adc
addb
xlat
frstor
test
dec
js
and
xor
jg
sub
fcmove
fisttpl
pop
stc
adc
loop
sub
mov
or
push
jmp
loopne
pusha
push
fstpt
filds
ljmp
mov
inc
and
sbb
ja
stos
rorb
adc
fst
sti
pop
pop
dec
inc
and
mov
sbb
and
or
clc
or
xor
mov
std
sub
clc
insl
jge
xchg
lds
out
mulb
sbb
add
aas
stos
jp
and
movsl
out
popa
inc
cmp
mov
out
sbb
orl
sbb
js
mov
pop
fs
les
or
adc
les
cld
subb
add
add
mov
or
mov
xor
into
aad
imul
in
add
cmpb
fdivp
test
imul
scas
push
mov
pop
stos
push
or
and
jne
fld
add
cmpl
xor
sbb
and
push
insb
aam
xchg
ja
pop
mov
mov
adc
pop
outsl
push
xchg
cwtl
jmp
dec
dec
insl
ret
imul
add
mov
sub
lahf
bound
cli
movsb
imul
add
mov
popf
insl
addl
es
dec
jl
pop
mov
fmulp
pop
dec
mov
cltd
mov
dec
stos
cmpsb
dec
pop
rorb
into
inc
cmc
popf
push
in
jg
mov
lcall
push
insl
mov
test
and
mov
inc
xorl
jnp
sub
aad
cmpsb
addl
and
fcmovu
int3
lahf
push
sarl
insb
xchg
loopne
mov
adc
sbb
lret
ds
dec
xchg
outsl
dec
xor
call
push
push
test
xchg
xlat
leave
gs
mull
in
ljmp
stos
mov
jb
in
into
flds
neg
mov
inc
loop
mov
xchg
test
xor
imul
push
and
xchg
notl
ja
sbb
and
add
sbb
shrl
mov
or
xchg
cmpsb
sbbb
pop
dec
or
cmpb
lret
ret
add
scas
push
or
sbb
cmpsb
pop
cmp
cwtl
dec
push
incl
and
popa
push
jecxz
leave
sbb
testb
movsb
nop
xchg
icebp
ret
xorb
sub
cltd
out
outsl
pop
dec
lock
dec
bnd
shrb
add
mov
mov
dec
imul
js
cmp
push
xor
cmp
mov
mov
xchg
push
fsubp
adc
lcall
inc
or
lds
test
inc
rol
dec
cmp
push
sbb
lods
adc
in
dec
sbb
cmc
rclb
cmp
cmc
add
mov
das
dec
xchg
dec
mov
ds
push
mov
dec
fbstp
and
push
xchg
sti
push
movaps
adc
mov
sbb
ret
push
sahf
jg
mov
pop
imul
lock
ret
push
inc
pop
add
mov
loope,pn
ret
lret
cmp
das
repz
imul
cmc
xchg
and
shrb
lods
outsb
in
aad
or
lods
add
dec
seto
test
dec
push
test
fmulp
call
adc
cli
les
mov
call
daa
icebp
lods
cmp
movsb
xchg
flds
adc
out
sbb
inc
cmpsl
out
mov
sbb
push
repz
clc
icebp
out
adc
or
mul
add
push
push
cmpsl
push
outsl
subb
push
cmp
cmpsl
ja
mov
movsb
cli
inc
xchg
mov
jb
aas
push
jp
inc
mov
outsb
out
dec
mov
inc
xchg
pop
jecxz
and
jbe
or
fstl
lea
clc
cmp
imul
mov
cmp
repnz
mov
ret
adc
lahf
mov
mov
cmp
mov
adc
pop
xor
jae
mov
xor
stc
scas
xchg
jbe
imul
cli
cmc
mov
nop
mov
sub
jg
in
orb
adc
in
fst
and
cmovns
mov
pop
addr16
inc
pop
in
or
jl
jnp
adc
inc
mov
gs
jp
cmc
mov
jge
cmpl
mov
fsts
add
and
pop
mov
shl
mov
inc
mov
pop
pusha
dec
inc
cmp
xchg
add
daa
cmovp
adc
addr16
fdivrs
jno
xor
shll
adc
jno
sbb
xor
push
pop
movsb
adc
push
inc
in
lock
push
andl
or
icebp
es
in
jg
pushf
cltd
mov
and
sub
add
sub
mov
sahf
pop
add
mov
ds
adc
arpl
mov
lods
js
mov
arpl
jo
and
mov
inc
jb
ds
sub
popa
pop
pusha
sbb
xor
inc
aas
inc
daa
sbb
and
fbstp
ds
mov
push
shrb
mov
xlat
sahf
loop
jae
nop
repz
leave
movzbl
jecxz
xchg
lods
data16
fsubrl
mov
lret
and
loope
add
inc
xchg
cltd
out
sbb
into
jl
mov
pop
cmp
nop
rcrl
fwait
xchg
popf
cld
movsl
cmpb
inc
es
push
shlb
lods
cmp
xor
popa
and
mov
xchg
sub
sbb
and
dec
mov
cmpsl
inc
cld
lods
pop
adc
loop
inc
or
test
stos
outsl
cmp
jbe
fwait
bound
daa
xchg
add
adc
std
jecxz
stos
loopne
mov
in
mov
jns
jbe
lock
pop
lods
add
xchg
ja
mov
xchg
scas
push
divps
xchg
pop
mov
mov
mov
test
jbe
sub
dec
adc
pop
lret
add
loop
cmp
cmp
loop
je
stos
or
clc
nop
jecxz
dec
daa
dec
fsubl
xor
jno
cmp
adc
pop
sbb
xor
idiv
push
aad
pop
enter
xchg
xorl
adc
dec
ret
cmpsb
or
jl
xchg
add
andb
stos
inc
lods
sbb
mov
dec
int
fildll
xchg
fstpl
or
mov
jnp
dec
fistps
xchg
sbb
lea
stos
pop
inc
outsl
movsl
lock
imul
xchg
adc
insl
shll
fsubs
add
out
stc
xchg
das
repnz
mov
sbb
pop
jno
in
adc
push
mov
sti
or
ret
jns
sbb
xor
pop
fucomip
rolb
add
mov
mov
mov
inc
push
xor
jecxz,pt
pusha
push
fistps
hlt
or
lods
xchg
leave
push
jp
pop
and
or
lcall
pop
xor
xchg
cmc
push
dec
mov
lret
xor
push
adc
jbe
ret
push
xlat
push
aas
sbb
jl
or
jge
or
insl
xchg
out
ja
mov
jl
mov
repnz
xorb
jl
bound
mov
cmc
ret
repnz
pop
push
inc
and
xor
push
outsl
jnp
aaa
lds
pop
adc
inc
mov
dec
mov
add
cmp
adc
inc
or
or
xor
mov
mov
mov
pop
and
jecxz
xlat
fstpl
mov
or
lock
push
mov
loop
add
daa
xchg
fdivl
rcl
adc
mov
nop
test
and
dec
cltd
or
fdivrl
push
clc
cwtl
stos
mov
mov
pop
and
lahf
sub
jo
out
xor
out
flds
jb
into
cwtl
sbb
pop
sub
sub
cmp
push
sti
popf
pop
mov
je
popa
xchg
stos
xor
ss
mov
loop
cld
sub
in
inc
leave
ficompl
fdivrl
pop
out
loop
mov
insl
mov
jne
sbb
xlat
aas
lcall
xchg
bound
cmpsl
mov
movsl
mov
inc
ds
movsl
sub
mov
sub
jns
mov
xchg
out
sbb
push
push
mov
and
add
cmp
lods
sub
fstpt
addr16
das
and
pop
test
nop
leave
and
stos
cmp
mov
adc
lock
mov
outsl
cmp
sbb
push
call
or
rol
mov
sub
xchg
aad
pop
mov
push
cwtl
call
nop
dec
in
clc
hlt
loope
lret
cs
les
rcrl
daa
xchg
jnp
nop
push
bound
or
mov
daa
xchg
fisubrl
jecxz
xchg
jge
mov
negb
xchg
and
push
clc
mov
adc
jecxz
xchg
push
pop
pop
arpl
gs
xor
in
push
xor
adc
imul
ja
fmull
sub
fmuls
insb
pop
lds
pushl
add
mov
pop
push
adc
pop
pusha
and
imul
popf
std
sar
call
js
mov
movsl
je
cmp
aad
or
mov
push
call
imul
xchg
daa
add
aam
xor
dec
sbb
xchg
jne
int3
jne
or
push
or
imul
mov
jle
mov
mov
call
xor
mov
imul
mov
dec
mov
cmpsb
ja
or
push
mov
mov
rcrl
les
nop
mov
leave
adc
test
clc
repz
incl
flds
std
cmp
leave
mov
mov
xor
fiadds
idivb
xchg
daa
rclb
lds
mov
pop
push
ljmp
sub
test
xchg
out
ja
push
rcrl
shll
push
cld
enter
pop
xchg
rolb
xchg
or
cltd
cmp
popa
gs
test
pop
adc
sub
cmp
push
dec
or
in
test
arpl
mov
fiaddl
adcb
ret
xchg
dec
push
fwait
sbb
sbb
decb
mov
sub
jecxz
hlt
xor
pop
jl
mov
and
inc
fnstenv
mov
xor
dec
sub
or
nop
ds
jne
loopne
adc
inc
std
cmpsb
imul
cmpsl
sbb
int3
lret
lock
sbb
movsl
jno
in
xor
shlb
decb
imul
pop
lea
outsb
lcall
daa
mov
enter
add
loop
or
and
and
mov
int3
loop
rorb
xchg
xchg
push
cmpsb
adc
inc
test
and
std
jae
sbb
lcall
sbb
jbe
rorb
fisubs
xor
push
incl
xchg
test
jne
out
push
xor
adc
xor
sub
or
ret
or
cmp
push
mov
ljmp
xchg
sub
dec
nop
inc
popf
iret
dec
dec
rcr
inc
lea
and
stc
xchg
js
popf
mov
xchg
mov
dec
bnd
and
je
addb
and
mov
mov
in
mov
mov
inc
fnsave
mov
into
rcrb
fstps
cmp
mov
mov
fldenv
cld
push
ja
rolb
ja
adc
inc
jne
leave
and
and
pop
ja
sahf
loop
aad
icebp
xchg
pop
int
jo
rclb
hlt
setp
int
add
push
seta
cmp
xchg
add
mov
cmp
add
jecxz
push
mov
popf
pop
xchg
xchg
adc
inc
sahf
add
sub
subl
mov
pushf
test
or
nop
mov
test
cli
test
xchg
mov
mov
add
mov
pop
out
push
jb
adc
fsubrp
hlt
sbb
xor
test
ja
mulb
iret
sbb
cmp
xor
pop
or
adc
scas
and
adc
aas
jno
or
aas
je
jne
iret
fsts
filds
in
dec
or
add
lcall
push
in
pop
mov
jbe
or
jecxz
push
jnp
adc
push
xchg
pop
adc
jb
scas
popf
xorb
lods
movsl
push
int3
push
jnp
or
rcrb
or
rcrl
mov
fdivrl
adc
or
insl
das
lods
loope
mov
and
jg
xchg
and
sub
aaa
sbb
dec
ret
in
xchg
mov
hlt
pop
lcall
cwtl
adc
cmp
or
mov
cmc
dec
sub
pop
lds
arpl
push
divl
cltd
mov
add
inc
icebp
jmp
jb
pushf
jl
add
pop
int3
jae
dec
rclb
int3
enter
fimuls
dec
loope
shr
and
sbb
xchg
xchg
mov
jno
test
popf
scas
inc
test
cmp
mov
mov
cltd
fstpt
pusha
div
pop
dec
add
xchg
mov
movsb
fstps
mov
sti
andl
xor
pop
lret
divb
lcall
cltd
jp
mov
mov
imul
scas
mov
xchg
in
daa
stc
stos
or
cmc
mov
scas
es
dec
stos
or
in
xlat
dec
cli
lock
xchg
andb
sub
pop
mov
mov
cmp
pushf
xchg
cmp
inc
xlat
es
adc
cmp
jp
push
inc
ljmp
mov
movsl
jg
push
lods
sub
jecxz
negb
xor
jl
repz
cmp
mov
pop
mov
dec
clc
and
lahf
rclb
int3
popf
daa
add
pop
popf
xor
lahf
mov
aas
imul
aad
mov
pop
or
or
jne
mov
and
inc
cmpsb
sbb
push
xor
mov
mov
ret
nop
hlt
daa
push
mov
scas
scas
mov
enter
xchg
out
shrl
outsb
lea
adcb
jo
cmp
jecxz
ds
jo
loop
xor
dec
sub
sub
jmp
mov
rclb
cmp
fildl
clc
xchg
test
or
fiadds
pop
mov
mov
imul
in
packuswb
notb
sti
sbb
pop
movb
test
add
shrb
lea
inc
imul
xor
rcrl
mov
arpl
pop
aam
jge
out
xchg
sbb
add
shrl
sti
mov
mov
lcall
aad
add
push
jnp
mov
cmpsl
shl
mov
inc
mov
ret
xchg
gs
xor
out
test
add
sbb
xchg
addr16
dec
jns
fidivrs
inc
mov
lods
arpl
stos
sub
fwait
or
cmp
push
mov
jb
dec
sbb
adc
adc
test
mov
inc
pop
jmp
pop
jne
xchg
sub
push
jmp
arpl
pushf
fwait
int
jle
push
movsl
imul
lahf
sbb
mov
frstor
push
push
les
fs
aad
int3
push
inc
pop
and
cs
add
jecxz
sub
push
xor
mov
test
mov
loope
add
mov
les
dec
sbb
aaa
xchg
xlat
ret
xlat
gs
jle
std
mov
xlat
aaa
push
outsb
add
jnp
aam
in
mov
xorb
sti
out
out
push
mov
mov
call
sbb
add
mov
insb
fistpl
xor
daa
jne
sbb
pmulhw
std
adc
imulb
lret
push
mov
aad
mov
push
pop
inc
in
cmp
mov
xor
push
adc
jnp
into
mov
jnp
pop
jo
adc
scas
push
xchg
mov
lods
movsb
dec
xchg
push
repz
loopne
cltd
aad
cli
push
shl
decb
cmc
push
adc
jl
sahf
dec
push
sbb
push
ja
dec
sbb
fwait
mov
mov
movsb
aaa
dec
cmp
jb
call
cmp
pop
mov
add
loope
fmull
hlt
outsl
mov
aaa
pop
sub
fld
push
pop
mov
mov
loope
fnstcw
push
dec
cmp
ret
add
arpl
and
mov
push
xchg
add
loop
gs
mov
pop
test
mov
lods
hlt
rcll
repz
mov
inc
js,pt
xchg
and
cli
bound
or
sbb
mov
jg
into
cltd
gs
push
sub
cmp
leave
ret
clc
inc
rorb
dec
insb
ss
or
mov
sub
or
mov
mov
or
fstps
lea
pop
nop
ficompl
pop
pop
fidivrl
fwait
xor
sbb
sarl
outsl
js
hlt
loopne
push
cmpsl
in
xchg
mov
and
xchg
clc
lods
jg
xchg
lods
inc
pop
aam
and
sbb
daa
pop
and
jge
dec
outsl
fsubl
mov
or
out
lahf
mov
adc
cmp
filds
pusha
bound
mov
out
cwtl
rcll
dec
jno
test
enter
lret
js
jmp
jecxz
popa
shrl
inc
jle
adc
jge
xchg
das
cmp
add
mov
or
pop
ljmp
ret
ss
aaa
push
jns
fucomi
cmpsl
xchg
fwait
aas
xor
sarl
inc
gs
jne
adc
lock
xchg
test
fisubrs
fwait
inc
scas
jmp
cltd
cs
adcb
lea
imul
adcl
xor
cmp
mov
outsl
cld
cmc
and
pop
lock
in
pop
push
dec
push
sub
aaa
sub
enter
popf
adc
sbb
cmpb
pop
inc
mov
fstl
mov
add
dec
leave
mov
add
iret
sub
add
push
pop
icebp
in
xor
pop
jmp
sbb
arpl
cmpsb
xor
dec
add
sbb
js
sahf
cmp
aaa
sar
rorb
hlt
pop
aam
xor
pop
xor
add
jle
ja
mov
loop
cmc
movsb
into
push
test
ja
ret
cltd
enter
fadds
sbb
or
or
mov
and
mov
xor
bound
cmpsb
push
mov
arpl
mov
xlat
mov
popa
stos
push
adc
adc
mov
and
mov
sub
lock
hlt
adc
mov
sbb
rclb
jl
jo
add
inc
jp
sub
cmp
bound
mov
or
push
push
cmp
inc
jnp
das
inc
mov
jmp
test
fs
into
je
cs
or
ss
sbb
dec
dec
sti
jg
jp
or
jecxz
loopne
xchg
xor
stc
dec
clc
stos
jle
lret
pop
outsb
cmp
or
jge
inc
loope
cmpsl
mov
and
sahf
push
adc
mov
lret
push
add
jae
loop
xorps
inc
data16
push
dec
aam
out
sub
movsl
mov
mov
sbb
dec
mov
loop
sub
push
pop
jae
fstpt
mov
sub
sti
jno
sub
add
add
incb
or
scas
or
dec
pop
sbb
mov
lcall
mov
inc
das
cmc
add
packssdw
out
jo
inc
dec
insb
xor
lret
mov
cmpsl
inc
sbb
mov
cmpsl
mov
dec
xor
cwtl
xchg
push
fcom
loop
fidivl
sub
jns
sub
inc
or
cmp
aas
sub
xchg
jbe
into
cmpsl
inc
pop
loop
mov
add
pop
rcrl
lods
or
pop
jmp
sub
xchg
mov
outsb
add
dec
adc
add
push
sub
xchg
out
insb
les
push
inc
adc
mov
popa
mov
out
push
cmp
in
mov
cmp
mov
inc
mov
push
cmpsb
mov
or
notl
cmp
push
jo
aad
cmpsl
pop
test
push
pop
or
push
sbb
loope
mov
push
lock
push
pop
cwtl
scas
cmp
ja
lds
lods
in
dec
xor
out
xor
and
pop
and
cmp
inc
out
inc
loop
mov
jno
into
jne
add
fsubl
out
fucomip
or
lods
rorl
rclb
popa
leave
pop
dec
cmp
repz
sbb
cmpsl
lret
roll
sub
jp
pop
cmp
push
push
add
mov
fwait
sub
das
in
xchg
mov
fmul
push
in
stos
scas
xlat
mov
push
jae
pop
inc
popa
mov
mov
outsl
repnz
cmp
xor
test
or
cli
insl
mov
in
sti
add
insb
ficomps
dec
pop
sub
dec
rclb
sub
punpckhdq
cmp
mov
outsb
and
jmp
rorb
lock
xchg
pop
outsl
jnp
mov
lock
cltd
jo
outsl
and
lods
cmp
rcr
push
inc
arpl
cmpsb
jmp
out
push
jg
ficompl
mov
mov
xchg
rcr
js
mov
inc
jmp
pop
rclb
outsl
ja
mov
xor
daa
cltd
subb
mov
mov
mov
cwtl
testl
pop
xor
adc
cmp
mov
stc
sub
das
repz
fistpl
mov
sbb
cs
pop
or
adc
es
pushf
xor
or
ds
out
es
fisttpl
dec
xchg
arpl
xor
inc
iret
mov
fcomi
push
and
push
inc
rolb
cltd
xor
lcall
lret
jb
sahf
add
mov
adc
mov
jns
ja
xlat
adc
sti
fwait
cltd
imul
aad
movl
or
xor
addb
add
sub
xchg
int
nop
and
out
nop
hlt
test
inc
lea
or
jg
fmull
inc
lcall
mov
lods
jo
and
scas
and
cs
insb
out
mov
add
idiv
in
and
adc
add
je
mov
sbb
cmpsb
inc
sub
fwait
jmp
loop
mov
scas
dec
aas
xchg
sahf
dec
pop
pop
cmp
test
cs
inc
mull
or
jg
addr16
ljmp
cli
shrb
xor
push
out
adc
jnp
pop
das
cmp
std
mov
je
jecxz
and
lea
imul
cld
out
inc
and
mov
cmpsl
std
mov
cmpb
push
sbb
add
sbb
xchg
xor
sub
mov
push
jb
paddusb
inc
cmpsb
and
jae
add
pop
pop
add
aas
lret
push
aas
pop
xchg
xor
pop
cmp
cmp
in
repz
mov
stos
arpl
sbb
shlb
rcrb
fnsave
sbb
xchg
push
pop
je
cmp
pop
mov
out
xor
or
dec
fs
sub
pop
push
stos
aas
jmp
mov
fisttpl
dec
jbe
test
idiv
push
sub
mov
shlb
addr16
add
sbb
inc
xchg
or
movsb
sbbb
pop
dec
data16
inc
mov
pop
jmp
movsb
loop
in
jmp
data16
aaa
aad
stc
or
movsl
jge
lods
hlt
mov
insb
sbb
mov
add
rclb
and
push
mov
mov
inc
rorb
lret
ja
insb
andl
xchg
nop
repz
pop
cld
stos
sbb
rcl
leave
xchg
lods
sub
mov
idiv
mov
xchg
mov
sub
pop
add
cli
dec
adcl
test
add
enter
popf
rolb
ret
ss
dec
hlt
add
sub
in
popf
cmp
sti
daa
adc
fidivs
xor
scas
jne
bnd
imul
in
sub
cli
sti
bound
pop
mov
lea
xchg
popa
rcrb
leave
clc
pop
outsl
cwtl
lahf
movsl
dec
stos
sub
call
xchg
lret
xchg
dec
mov
mov
lods
stos
push
add
sti
add
xor
xor
push
adc
fcoml
xchg
aad
loope
xchg
int3
jl
mov
outsl
mov
loopne
or
mov
test
pop
nop
stos
mov
lea
sub
pop
add
adc
mov
lds
xor
fisttps
xchg
pusha
dec
mov
mov
adc
int
lea
pop
scas
fildl
daa
mov
sub
adc
test
aaa
adc
jp
xor
outsb
mov
inc
test
cmp
jge
dec
leave
out
inc
adcl
ficompl
addr16
xor
inc
inc
seto
or
femms
or
cmp
push
outsl
popf
in
xchg
inc
pushf
ds
dec
add
xchg
jno
cmp
bound
push
mov
adc
cmpsl
jl
test
fbld
pop
xchg
scas
inc
lret
mov
push
jp
scas
adc
push
xor
dec
dec
fs
or
dec
out
jecxz
mov
jg
in
push
imul
pop
enter
or
sub
in
add
pop
jg
pushf
dec
dec
add
xor
cli
pop
lods
dec
xor
add
adc
loope
int
sub
jns
decl
dec
adc
adc
xor
fimuls
lea
imul
in
fmuls
stos
mov
sub
pop
ret
cmovne
add
imull
jae
int
iret
stc
sub
mov
jge
cmp
fdivrl
mov
or
dec
iret
mov
jne
push
cmp
pop
cmp
daa
int3
push
daa
jg
cwtl
sarb
cmpsl
out
gs
in
xchg
test
test
push
inc
adc
je
mov
shlb
push
push
fldl
test
push
mov
std
jmp
fldl
sub
movsl
sub
icebp
inc
inc
loope
mov
xchg
push
sbb
mov
scas
lahf
adc
jecxz
adcl
pusha
mov
push
clc
add
js
ss
mov
sub
xchg
xchg
pop
pop
repz
aaa
jae
sub
movsb
dec
fsubp
lds
xor
push
mov
sbb
mov
lcall
dec
jge
dec
ret
dec
push
fwait
jns
movsb
push
add
mov
cmp
cmp
or
xchg
and
push
stc
repnz
rcrb
pop
scas
ret
fucomi
push
in
sub
psubusw
popf
sbb
or
mov
xchg
adc
pop
call
std
loope
cmp
add
adc
loop
push
jnp
dec
fiadds
push
inc
insb
dec
das
stc
inc
dec
pop
test
not
lods
movsl
movsb
sarl
push
cs
pop
ljmp
fstpl
sbb
and
shl
ljmp
lods
fdivrl
rorb
pop
pop
and
loop,pn
jmp
nop
jnp
push
in
jecxz
lret
adc
andb
add
pop
mov
roll
add
roll
ljmp
adc
sti
jo
push
hlt
fwait
iret
xor
pushf
clc
arpl
mov
cli
mov
pusha
mov
in
int3
fs
rolb
pop
adc
sbb
nop
fstpl
and
hlt
pop
hlt
testb
pop
pop
das
mul
movsb
sti
rorl
loop
les
push
xchg
push
pop
mov
push
or
out
or
lahf
out
icebp
cli
outsl
mov
ds
outsb
and
push
and
mov
fadd
mov
jmp
out
arpl
or
jg
pminsw
xchg
mov
mov
fistl
add
and
pop
mov
ds
or
daa
add
jae
mov
cmpsl
divl
jg
movsb
repz
ret
jp
daa
sbb
test
dec
roll
pop
sub
je
jbe
push
aam
inc
orb
cmp
out
inc
out
daa
sub
lock
sarb
push
inc
push
insb
lock
push
pushf
mov
mov
mov
adc
push
inc
in
push
inc
leave
mov
enter
sub
cmp
xchg
ficompl
push
inc
shll
je
pop
or
cwtl
inc
mov
mov
mov
pop
leave
push
aas
shlb
sbb
mov
js
dec
ficoms
pop
mov
idiv
mov
fsubs
ficoms
add
loopne
loop
inc
lea
jge
es
sarb
inc
clc
sbb
aad
movsl
cmp
pop
inc
pop
jno
std
mov
loopne
xchg
popaw
shlb
jmp
das
adc
xor
inc
lcall
test
xor
cs
inc
jmp
adc
push
inc
mov
hlt
arpl
sahf
xchg
and
jmp
push
arpl
ds
aam
in
and
enter
jno
icebp
repnz
adc
mov
mov
rolb
movsl
push
sbb
pop
je
stc
add
push
adc
bound
add
jae
sbb
jmp
push
jle
shrl
fld
pop
xchg
jl
imul
sbb
sti
out
std
cmp
lahf
out
gs
das
mov
repnz
pop
dec
inc
mov
cmp
pusha
mov
es
mov
xor
rol
fbstp
lret
stos
test
mov
jg
ds
xchg
xchg
lahf
push
test
bound
inc
add
mov
popf
ret
or
mov
xchg
xchg
out
enter
xchg
lods
int
mov
push
loop
xchg
pusha
or
test
dec
mov
bound
hlt
movsl
jge
dec
rcl
push
dec
shrl
mov
xor
in
sbbl
js
push
fstl
xor
testb
mov
icebp
fldl
enter
cmpsl
in
stos
outsb
xor
call
lods
or
aaa
or
sbb
mov
cmovge
pop
pop
loopne
bound
cmp
jnp
mov
lods
call
inc
dec
in
push
and
mov
insb
lret
sahf
nop
shlb
add
pushf
out
cmp
fcmovnbe
stc
rol
push
push
lock
jnp
cld
int
pop
add
jle
pop
xchg
out
adc
nop
xchg
test
out
inc
xor
movsl
sbb
push
out
shrb
add
bnd
aas
mov
shlb
pop
adcl
add
dec
add
sub
call
lods
mov
push
nop
in
insl
decl
push
add
xor
cmp
xchg
mulps
dec
dec
adc
mov
pop
pusha
lock
xchg
cmp
loopne
dec
fists
fistpll
push
stos
cmp
push
cld
lret
xor
mov
and
cmp
adc
orl
ja
mov
sub
dec
sub
popf
ss
push
lahf
call
loop
shr
dec
js
sub
xchg
in
sahf
mov
clc
mov
add
dec
outsb
pop
mov
aam
bound
loope
xor
outsb
test
pop
cmpsl
mov
aam
inc
pop
push
mov
mov
inc
lahf
inc
mov
rorl
cmp
or
decb
jmp
xchg
cmp
out
mov
cmpsl
xchg
mov
dec
outsb
jno
mov
fcmove
jl
xchg
sbb
daa
out
cmp
xadd
and
dec
jmp
mov
out
into
lahf
inc
jno
or
mov
lock
push
jmp
sbb
inc
das
mov
test
ss
jecxz
lret
movl
fstpt
xlat
xchg
hlt
pop
in
imul
ja
sbb
and
sbb
dec
in
push
xor
bound
pop
subb
aas
jo
dec
inc
cmp
sub
sbbb
fs
ss
cld
cvtpi2ps
jge
aaa
pop
pop
cmp
sbb
push
sbb
lret
das
dec
test
mov
fs
dec
popf
ds
mov
icebp
mov
imul
inc
mov
add
movzbl
lea
dec
inc
add
sub
add
inc
movzbl
imul
mov
movzwl
dec
mov
imul
inc
add
add
mov
mov
add
inc
inc
dec
mov
cmp
jb
mov
xor
inc
sub
mov
mov
add
mov
dec
inc
xor
mov
and
add
add
dec
mov
inc
xor
cmp
jb
dec
xor
imul
mov
or
and
lea
xor
imul
imul
sub
xor
dec
inc
xor
movzbl
imul
pop
and
inc
test
jbe
add
mov
dec
lea
add
lea
inc
mov
mov
mov
add
inc
movzwl
mov
add
imul
mov
inc
dec
mov
lea
mov
lea
dec
and
inc
or
mov
add
add
movzbl
dec
mov
add
movsbl
imul
and
mov
mov
mov
inc
add
mov
inc
movzbl
mov
mov
and
mov
dec
inc
inc
dec
dec
dec
jne
add
mov
movzwl
add
sub
or
movswl
add
sub
dec
mov
mov
inc
dec
mov
mov
inc
dec
inc
add
mov
dec
inc
test
jbe
mov
lea
dec
mov
inc
inc
or
inc
add
or
dec
lea
inc
mov
mov
inc
inc
inc
dec
dec
imul
jmp
mov
and
inc
lea
mov
mov
dec
mov
lea
inc
and
xor
inc
mov
and
mov
lea
dec
mov
pop
ret
push
dec
mov
lea
push
xor
mov
dec
lea
dec
add
dec
imul
sub
call
mov
add
mov
add
sub
inc
sub
dec
mov
add
movzwl
sub
mov
mov
mov
inc
mov
mov
dec
imul
or
sub
call
sub
imul
inc
lea
mov
lea
dec
inc
inc
dec
add
imul
lea
mov
or
dec
dec
add
sub
mov
xor
cmp
je
inc
xor
dec
dec
call
call
add
test
je
mov
push
lea
and
dec
mov
sub
or
add
mov
movsbl
call
sub
ret
dec
imul
inc
dec
inc
or
inc
inc
add
mov
lea
dec
imul
or
dec
add
movsbl
inc
mov
or
and
lea
and
mov
inc
dec
inc
add
mov
sub
dec
dec
pop
add
ret
push
imul
mov
dec
inc
push
dec
mov
add
movsbl
mov
push
add
push
jmp
mov
and
inc
dec
mov
dec
lea
movzbl
sub
add
add
sub
and
and
add
inc
mov
sub
inc
movzbl
mov
add
mov
lea
and
mov
lea
dec
movzbl
inc
dec
add
mov
sub
and
mov
lea
movzbl
or
mov
xor
mov
inc
inc
lea
inc
add
mov
inc
lea
or
lea
dec
jne
add
mov
lea
dec
sub
movsbl
pop
sub
mov
pop
add
and
pop
and
movzbl
or
inc
dec
inc
inc
sub
lea
add
ret
push
add
add
movsbl
imul
and
lea
imul
imul
push
push
push
push
mov
add
sub
push
inc
lea
inc
inc
dec
mov
and
imul
add
mov
lea
push
xor
lea
xor
mov
mov
push
imul
dec
push
inc
and
pushl
add
call
add
add
mov
mov
or
inc
mov
inc
add
pop
ret
add
push
inc
or
push
lea
call
add
or
imul
push
dec
inc
xor
mov
mov
dec
mov
mov
dec
mov
dec
dec
test
je
dec
mov
mov
mov
dec
dec
inc
mov
movswl
mov
add
dec
mov
imul
mov
lea
mov
repnz
mov
add
add
mov
jmp
sub
and
mov
inc
sub
dec
mov
and
dec
inc
pop
pop
ret
push
imul
sub
inc
dec
dec
inc
dec
mov
imul
sub
dec
dec
inc
dec
inc
xor
dec
movswl
lea
add
dec
inc
dec
inc
dec
sub
dec
mov
pop
ret
sub
add
mov
dec
dec
mov
inc
dec
mov
dec
sub
mov
and
dec
xor
lea
dec
mov
dec
dec
inc
dec
add
mov
add
inc
inc
cmp
jb
imul
push
inc
lea
mov
mov
add
push
movzwl
mov
push
mov
xor
xor
imul
inc
xor
add
inc
xor
sub
imul
push
lea
dec
xor
xor
jmp
loop
push
add
adc
add
test
add
add
mov
scas
add
push
add
adc
add
add
add
bound
mov
mov
add
iret
pop
imul
add
push
inc
movzbl
mov
lea
add
dec
lea
inc
and
inc
movswl
inc
mov
sub
call
mov
add
add
add
inc
lea
mov
mov
inc
inc
add
add
add
dec
and
mov
add
dec
sub
inc
inc
mov
mov
call
inc
sub
inc
sub
call
add
inc
dec
add
call
lea
push
movzbl
imul
mov
inc
mov
call
dec
mov
lea
dec
lea
dec
call
mov
pop
inc
add
dec
add
movzwl
pop
imul
inc
pop
mov
dec
sub
and
pop
add
movzwl
dec
add
inc
inc
imul
mov
pop
lea
mov
pop
movswl
inc
mov
mov
inc
call
mov
dec
sub
movsbl
ret
mov
mov
push
dec
inc
push
inc
mov
push
xor
inc
push
add
inc
push
lea
add
mov
xor
push
mov
ret
push
dec
dec
dec
imul
add
sub
imul
dec
inc
dec
inc
mov
dec
or
inc
lea
dec
dec
add
inc
inc
or
inc
movzwl
dec
dec
sub
mov
jmp
repnz
decl
les
in
adc
mov
pop
fnstcw
rclb
lock
and
and
movsl
inc
pop
push
in
xchg
out
xchg
movsb
mov
in
cmp
insb
xchg
push
jb
movsl
shlb
cmp
inc
push
mov
into
loop
xchg
mov
shl
cld
and
iret
fimull
or
jle
andb
mov
outsl
push
popf
pop
inc
xor
loop
lahf
mov
in
pop
jbe
insl
paddw
fwait
daa
cmp
push
mov
cmp
lcall
aas
dec
outsl
cmpsb
mov
sbb
fs
or
orl
pop
dec
mov
mov
roll
xchg
or
and
mov
add
dec
or
pusha
cs
pop
jne
pop
mov
insb
push
dec
xchg
fisttpl
jg
sub
inc
out
inc
decb
stc
sbb
jns
pop
sub
jns
xchg
stos
inc
cmpsb
sbb
dec
push
out
ret
hlt
sahf
ret
pusha
sub
jmp
or
repz
imul
dec
lods
div
in
xchg
rcll
jl
xlat
pop
jb
dec
xchg
jmp
and
sub
ret
push
xor
aam
sub
rcll
push
dec
repz
fdivl
inc
cs
les
xchg
repz
cmpsl
gs
lahf
and
push
wrmsr
adc
hlt
inc
adc
ret
loopne
and
mov
jo
inc
fdivrs
lcall
jl
jl
xchg
ror
stos
enter
scas
xchg
movsb
cmp
xor
inc
push
sub
je
js
cmp
mov
push
jp
les
jo
insb
shll
cmp
add
loop
rcrb
popa
mov
rorb
or
clc
notb
xchg
xlat
sbb
mov
clc
xchg
adc
push
jl
mov
fwait
dec
xchg
or
popa
sub
insb
adc
sbb
xchg
dec
sub
push
xor
pop
and
or
adc
je
pop
fiaddl
pop
outsl
push
out
jge
cwtl
adc
fs
xchg
rol
arpl
xor
stos
push
fistpl
xchg
cmpsb
xor
fisttpl
push
mov
xchg
pop
pop
push
cmp
dec
jmp
pop
fimull
repz
addr16
jnp
jmp
aam
xchg
inc
mov
addb
mov
or
lock
fsubp
imul
int3
gs
outsl
push
repz
lret
mov
sahf
add
sbb
pop
inc
cmp
mov
jecxz
push
xchg
inc
or
xchg
aad
pusha
nop
sub
mulb
in
mov
lea
rol
sbb
pop
cmp
dec
mov
cmp
pop
insl
and
or
std
test
out
repz
aaa
xchg
ljmp
insl
add
inc
fiaddl
adc
repz
fcmovnu
pop
int3
fldt
clc
mov
mov
out
jl
ja
jmp
ja
jecxz
in
test
lods
and
dec
adcl
stos
shlb
rolb
out
adc
mov
and
in
push
idiv
imul
adc
xchg
mov
ret
xchg
orl
push
addr16
stos
movsb
out
pop
loop
andl
jg
and
pusha
mov
cltd
cmp
pop
ficoml
aaa
sbb
xor
out
mov
push
or
cmpsl
pop
xchg
mov
xor
xchg
add
test
mov
outsl
cli
push
pop
pop
mov
mov
inc
loope
mov
jo
cmp
cmp
call
or
into
cwtl
int3
or
sbb
pop
jno
je
inc
mov
scas
add
ss
push
ljmp
sbb
inc
decl
int
outsl
ficoml
push
mov
push
push
shr
mov
out
fdiv
aad
pop
jae
mov
adc
repnz
cwtl
dec
push
add
inc
in
iret
xor
push
mov
jge
inc
add
mov
inc
fwait
gs
jno
add
repnz
imul
dec
sahf
leave
ds
xor
push
dec
into
rcrl
mov
inc
lods
jae
arpl
in
fmuls
cmp
cwtl
lods
push
or
pushf
outsl
ljmp
stos
mov
cmpsl
jbe
xchg
mov
stos
loop
xor
rclb
adc
mov
inc
jmp
rcrl
insl
scas
mov
add
pop
mull
mov
mov
push
mov
mov
inc
cmc
gs
stos
cs
leave
das
inc
jbe
sbb
insl
in
inc
aam
in
in
imul
jo
cmp
mov
shrb
xor
xlat
cmpb
mov
xchg
js
mov
mov
mov
mov
dec
in
loopne
mov
test
push
in
insl
fstl
stc
test
pop
push
lret
mov
sbb
xchg
add
cltd
sub
mov
xchg
mov
add
sbb
pop
inc
imul
cmpsb
adc
mov
out
call
or
cmc
xor
push
sbbb
cmp
sub
jae
add
push
inc
inc
gs
clc
shlb
add
pop
rcrl
in
outsb
and
push
enter
insl
mov
and
mov
adc
inc
loop
imul
push
push
push
cld
sbb
pop
inc
pop
mov
hlt
dec
mov
int3
inc
sarl
icebp
lret
rcr
push
daa
aam
cld
push
leave
mov
sbb
pusha
data16
mov
push
and
dec
sarl
mov
lods
jmp
xchg
lahf
es
leave
shll
pop
neg
jb
movsl
aaa
mov
mov
push
loop
out
int3
loop
sbb
mov
ficompl
popl
or
loopne
sub
cld
push
cmpl
daa
in
mov
pusha
pop
cld
aas
mov
call
sbb
cmp
call
dec
sub
push
xor
cmp
in
pop
loope
jae
out
in
inc
and
pop
testb
hlt
xchg
lret
fistps
test
dec
xor
mov
adc
loop
inc
lcall
loopne
mov
cmp
sbb
call
ficoms
inc
jp
jne
inc
push
inc
push
xchg
dec
rclb
dec
fstl
jecxz
shlb
jge
shlb
mov
fbld
xor
rorb
pusha
adc
inc
out
hlt
fwait
mov
push
xchg
scas
inc
into
sbb
or
or
aaa
test
sbb
adc
insb
mov
dec
sub
out
dec
and
jo
adc
jno
cmp
and
sarb
dec
jmp
or
in
mov
or
xor
sbb
nop
or
clc
stos
sub
inc
jle
xchg
dec
aaa
cmpsb
shlb
mov
dec
jge
dec
xor
jmp
sbb
fcmovnb
mov
pop
fwait
add
jae
sub
adc
fcom
cmpsb
fistpl
loope
adc
iret
aam
mov
rclb
pusha
or
mov
test
fs
cmpsb
rcrl
dec
mov
nop
sub
ret
cmp
lock
in
mov
xchg
std
or
pop
jg
mov
xchg
sbb
push
sub
jmp
lahf
hlt
sti
addr16
push
cmpsl
aad
pop
pusha
mov
push
test
mov
mov
sbbl
cmp
loope
pop
push
nop
cmp
sub
lahf
popf
dec
add
js
fstps
push
insl
adc
pop
ds
mov
out
jbe
sahf
divl
into
fs
xor
sti
cmp
push
xorb
les
mov
popf
mov
sti
lret
or
pop
add
mov
jecxz
test
cmp
xor
hlt
push
sbb
ja
ds
jle
xchg
xor
push
out
fdivr
mov
jp
sbb
and
mov
xor
sub
sub
push
add
xchg
pop
mov
push
ljmp
dec
xchg
inc
fisubs
fdivs
popa
mov
sbb
jp
mov
adc
fisubs
pop
enter
out
pushl
movsl
inc
or
jp
leave
fwait
int
mov
mov
mov
mov
cmpsl
xchg
sti
insb
cmp
rol
not
out
or
cmc
mov
fs
inc
lea
bound
scas
enter
mov
or
dec
dec
jmp
ret
ss
xchg
andl
rcll
mov
fst
and
dec
push
push
cwtl
jnp
negl
clc
int
arpl
add
cltd
jns
shll
inc
jge
mov
mov
mov
cmp
pop
test
rolb
inc
lcall
sbb
pop
push
add
mov
loope
mov
rcrb
ss
outsb
xor
dec
dec
dec
mov
pop
gs
and
xchg
popf
push
imul
mov
stc
cwtl
in
fidivrl
test
cmpsb
test
xor
push
cmp
jb
push
fsts
mov
les
add
fidivrs
inc
fists
rcrl
sbb
dec
nop
jle
je
jno
and
mov
dec
loopne
outsl
roll
fisttps
inc
jecxz
lret
es
lret
push
xor
push
dec
xor
push
test
dec
stos
cmp
daa
and
or
mov
loop
addb
or
repnz
hlt
mov
push
jle
jle
sub
sbb
xor
leave
sub
xchg
cmpsb
aaa
mull
sub
stos
loopne
jle
push
xchg
aaa
or
xor
inc
jae
stos
and
dec
xchg
jne
dec
adc
idivb
fldcw
lock
test
roll
pop
sub
mov
inc
adc
add
or
aam
sbb
dec
daa
push
negb
pop
inc
sub
fisubrs
or
lock
insl
push
mov
dec
outsb
xchg
push
cmpsl
outsl
jns
shll
or
inc
cmp
dec
pop
mov
test
enter
mov
stos
xchg
or
or
cmp
es
nop
aam
pop
mov
xor
xchg
int3
popf
cmp
push
inc
movsl
xchg
scas
push
idivb
lret
stos
mov
cltd
sbb
test
and
sbb
imul
push
xor
mov
inc
push
arpl
ss
imul
cmpsb
jne
sahf
divl
jbe
fimuls
push
cmpsl
cs
scas
and
gs
dec
add
cmp
orb
test
jno
dec
hlt
popf
jo
es
xorb
inc
bound
xor
leave
push
imul
out
ror
clc
mov
cld
xchg
mov
xor
mov
xor
ret
pop
clc
ljmp
repz
rcr
iret
mov
pop
into
imul
cmp
incl
xor
cmp
sbb
cmp
ret
jl
xchg
fidivl
movsl
mov
jns
jl
jp
cmpsl
inc
jmp
addr16
xchg
mov
inc
sub
inc
sbb
lods
sbb
dec
fists
out
push
aas
add
dec
data16
lret
je
test
mov
add
sbb
in
stos
cmpsb
sub
mov
push
or
mov
mov
xor
pusha
mov
fs
jnp
sbb
dec
and
out
loope
cmpl
or
adc
lret
xchg
lea
cmpsl
test
js
pop
es
sbb
mov
xchg
loopne
adc
dec
mov
sub
scas
and
ss
push
mov
dec
stos
dec
leave
dec
lea
pop
dec
xor
cmpsl
fidivl
push
jbe
lock
out
and
sti
pop
or
add
cmpl
inc
test
lock
jmp
div
in
or
or
pop
pushf
push
es
lret
push
xchg
adc
cmp
xchg
lock
mov
mov
pushf
leave
decl
jbe
sub
mov
lock
xchg
out
leave
test
sub
movsl
pop
std
push
adc
sti
mov
adc
push
xor
push
fisubl
pop
jnp
cmp
push
and
add
arpl
mov
xor
sbb
in
push
fwait
lcall
mov
je
mov
or
out
xor
or
cmp
subl
pusha
in
pusha
cmpsl
shll
mov
call
jl
cli
mov
mov
sbb
stc
rcrl
inc
xchg
pop
mov
outsb
cmp
test
inc
in
add
push
or
lds
pop
add
ret
mov
jle
sub
or
xor
sbb
or
jns
sub
test
push
dec
pop
dec
adc
les
mov
cmp
gs
mov
in
sti
add
ds
adc
push
lods
dec
sub
test
stos
ja
jnp
cmc
incb
inc
clc
addr16
pop
mov
in
mov
sbb
mov
andb
adc
add
pop
or
sbb
dec
es
push
int3
or
mov
popa
fs
and
sub
rorb
jo
dec
cmp
jmp
movd
xor
mov
stc
mov
pushf
outsb
ss
push
push
mov
bound
repz
dec
int3
outsl
fdivrs
or
add
and
adc
ljmp
or
test
sbb
lcall
fdivl
out
leave
mov
lret
scas
rcll
ss
loop
outsl
ret
jl
mov
xchg
xlat
js
xor
mulb
xorb
jp
mulb
xor
push
or
xchg
or
inc
out
sbb
in
add
xor
loopne
pushf
insl
rcr
loop
add
arpl
std
add
cmpsb
jne
adc
mov
mov
fsubl
test
nop
add
sbb
sbb
push
stc
or
mov
mov
pop
jmp
jns
add
jp
pop
mov
inc
inc
adc
stos
adc
push
or
hlt
int
in
or
pusha
adc
lods
xchg
mov
adc
and
arpl
popf
mov
xlat
cmp
xchg
and
cmp
cmp
fwait
push
mov
push
xchg
push
addr16
out
dec
fisubrl
cmp
pushf
lods
mov
xor
jo
xchg
pusha
sbb
mov
ja
movb
movsb
iret
frstor
cmp
jae
rorl
aaa
scas
pop
add
mov
repz
push
pop
dec
daa
pop
xlat
inc
mov
repz
cmpsb
push
mov
adc
jge
hlt
cmpsl
daa
or
inc
aad
ljmp
es
sub
jo
jae
addr16
push
bound
mov
lcall
jno
inc
and
or
push
xchg
unpcklps
push
inc
cli
xchg
ret
ljmp
scas
inc
aas
out
adc
jge
in
rcrl
cmp
dec
out
negl
rcll
lahf
pop
cltd
fs
or
jmp
mov
or
sbb
inc
hlt
or
stos
scas
shlb
mov
scas
repz
fidivrs
lods
es
loop
into
sub
pop
xlat
aad
xor
pop
lahf
popa
inc
imulb
iret
ss
into
es
test
pop
add
dec
sub
jp
lods
jno,pt
jecxz
adc
sar
rorl
and
mov
mov
pusha
mov
repz
mov
ljmp
cmc
cmp
pushf
mov
jg
repnz
sbb
in
shlb
movsl
sbb
stos
dec
popa
push
loopne
lret
je
add
ret
loopne
add
pop
clc
into
xor
fstl
roll
sub
jmp
mov
aas
push
xor
xchg
mov
orb
int3
xchg
push
xor
xor
test
movsb
rolb
dec
rcr
fisubrl
mov
fisubl
data16
inc
cmc
sahf
mov
test
js
lea
pop
or
lods
in
push
jbe
aaa
fs
jg
mov
inc
push
adc
sub
sarl
inc
dec
shrl
sub
icebp
in
sar
mov
fcoml
gs
inc
sub
jp
lods
mul
push
and
ret
mov
lea
xchg
insb
scas
inc
clc
js
das
in
std
adc
rol
inc
mov
scas
mov
jmp
rol
jp
pop
rorb
pop
loopne
test
loop
sti
mov
cmp
movsb
sbb
enter
idivl
int3
and
and
adc
mov
ss
xchg
loopne
jmp
jge
inc
fwait
sub
sbb
out
fs
pusha
and
shlb
movhps
in
sarb
rclb
rclb
mov
adc
js
sub
pusha
mov
testl
pop
aas
int3
mov
or
sub
mov
jae
sbb
xchg
stc
pop
scas
xchg
out
dec
dec
dec
jmp
sbb
lods
pop
popf
xchg
xchg
rolb
movsl
iret
cmp
pushf
stos
dec
or
xor
sub
dec
mov
hlt
cmp
ja
sub
push
add
dec
cmp
je
xor
fistpl
cld
gs
cmp
pop
mov
jp
imul
adc
jl
je
int3
roll
pop
jo
sbb
mov
mov
sub
mov
sbb
cmp
test
pushl
cs
sbb
out
inc
or
sbb
adc
aam
movsb
mov
ftst
in
adc
dec
js
aad
adc
ss
enter
loopne
jp
clc
lahf
push
push
leave
incl
xchg
lcall
cmp
mov
sbb
mov
icebp
arpl
fdivrl
sarl
mov
shlb
pushf
shll
xorb
rcr
fdivp
jmp
push
push
jns
hlt
jo
pop
mov
push
xor
inc
push
jg
std
xor
add
js
push
and
dec
in
cs
aaa
cwtl
inc
out
mov
xor
add
pop
cli
pushl
fisubs
loope
into
xchg
add
lret
sub
popf
cmovge
jge
push
inc
pop
lods
mull
adc
sub
pusha
push
stc
mov
sbb
sub
hlt
in
sbb
fisubrl
push
movsl
add
mov
push
or
std
ficoml
mov
aam
insl
test
dec
je
jae
cmp
push
and
ds
mov
fldcw
rorb
or
lods
sub
jns
loop
js
idivl
into
pop
rolb
xchg
fdivs
sub
mov
dec
cmp
xchg
add
repz
dec
rol
jns
or
into
xchg
les
push
into
sbb
lcall
insb
shr
pop
fcomps
and
jg
push
ret
cmpsl
mov
and
jne
jno,pn
or
dec
dec
push
sbb
jo
pop
mov
nop
pop
aad
mov
mov
loopne
jb
pop
aas
testl
xchg
adc
test
mov
sahf
rorb
dec
arpl
add
cs
xchg
cli
sbb
mov
add
lds
jmp
xchg
or
mov
imul
pop
cmp
xor
pop
call
lock
call
xchg
popf
cmpsl
mov
pop
xor
enter
adc
mov
push
add
lret
adc
pop
lea
ds
dec
lock
fwait
sbb
imul
leave
sbb
mov
gs
mov
int
push
push
dec
sbb
movsl
mov
addl
outsl
sarl
aad
rcr
mov
std
cmp
mov
push
xlat
test
push
mul
dec
inc
mov
test
inc
iret
popf
test
lret
out
sub
bound
scas
add
push
fimull
push
cmp
inc
insb
inc
scas
dec
pushf
xchg
testb
subl
fucomi
addl
pushf
mov
fdiv
rolb
int3
repz
fdivl
out
cld
xchg
dec
or
in
adcb
jne
mov
jnp
out
cmp
insl
test
sar
cwtl
ret
cmp
or
ljmp
pop
aam
jp
or
inc
push
sbb
jbe
clc
movl
mov
xor
cmp
mov
dec
sub
inc
test
lock
lret
mov
jl
data16
cmp
mov
xor
mov
subl
cmpsl
sbb
adc
icebp
mov
out
fs
mov
cmc
jb
jmp
or
mov
xor
aam
bound
or
mov
repnz
dec
and
test
out
xchg
or
mov
nop
dec
lret
mov
xchg
xchg
dec
pop
aad
inc
push
into
in
repz
dec
pop
loopne
gs
or
repz
sahf
push
dec
pop
xchg
mov
inc
or
leave
sarl
dec
out
sub
lret
adc
push
cltd
rcll
test
sbb
icebp
lods
jbe
jg
in
adc
movb
cmp
or
push
adc
idivl
lods
repz
and
lea
stos
push
daa
shlb
pop
data16
popf
cmpsb
pushf
mov
into
enter
stos
or
xor
dec
xor
pop
sub
mov
movsl
xchg
add
pop
std
leave
notb
jns
cltd
aas
leave
lret
popa
add
fs
ficoms
inc
aam
adcb
adc
cmp
cmp
push
mov
jo
out
scas
ret
mov
leave
or
jb
fiadds
mov
lret
loope
jle
daa
shl
in
fmuls
mov
test
ljmp
mov
cwtl
or
ss
sbb
mov
aaa
je
sub
jnp
daa
fwait
sbb
sahf
outsl
jo
inc
fsubr
sbb
jbe
inc
popa
les
daa
xor
dec
mov
sub
call
push
pop
fisttps
gs
add
test
std
pop
inc
push
pop
adc
aad
lock
cli
adcl
lret
push
fidivrl
jo
mov
pop
push
dec
inc
lcall
incl
mov
inc
cwtl
int3
aam
nop
lods
in
bound
int3
inc
fiadds
test
arpl
push
pusha
lret
xchg
dec
mov
lods
loope
sbb
cmp
ret
mov
loop
lods
and
xor
cwtl
rol
xchg
inc
inc
jg
mov
loope
push
and
sbb
fdivl
or
lret
and
pusha
push
loopne
cmpb
and
mov
mov
cmp
add
lcall
stos
scas
ret
or
lret
rorb
lds
dec
sbb
sbb
cmc
cmp
int
xor
mov
insb
cmp
adc
mov
fs
sbb
inc
push
jge
xchg
sbb
popl
jmp
pop
mov
ljmp
or
jns
int3
mov
hlt
cld
sbb
push
mov
jo
call
cwtl
inc
mov
je
and
xor
mov
repz
insl
mov
sub
or
jno
cmp
cmpsb
loop
sub
sub
mov
sbbl
adc
sbb
xchg
cld
scas
pop
mov
ret
insl
sbb
ror
mov
dec
mov
mov
mov
push
and
xchg
cmpsb
sbb
jecxz
stc
mov
or
or
sarb
adc
int3
or
mov
fs
ret
cmp
adc
fimuls
lret
rcr
jl
imul
sbb
fs
repnz
mov
add
aad
or
fsubrp
push
and
jge
outsb
sahf
mov
inc
cs
cmpsb
and
push
mov
leave
into
icebp
dec
cmp
sbb
fisubrs
mov
pop
ret
lods
daa
inc
cmp
xchg
fnstcw
fwait
jge
push
movsb
test
add
jns
mov
stc
mov
or
sub
ret
inc
loopne
pop
outsl
and
cwtl
add
xor
mov
lret
test
jo
in
in
mov
xchg
lods
pushf
sbb
je
daa
xor
mov
sbb
mov
adc
pop
aad
stc
scas
xchg
rcl
shll
push
outsb
mov
xchg
cmc
pop
in
mov
aaa
mov
nop
icebp
imul
sub
decl
lods
add
jo
stos
test
int
jae
cmc
pop
mov
lods
jae
mov
hlt
push
push
pop
jl
sbb
inc
inc
jns
icebp
popa
stc
pop
arpl
mov
add
loope
test
cwtl
mov
je
xchg
andl
cmp
jg
sub
scas
mov
das
shll
mov
mov
popf
movsl
movsb
add
jb
pop
mov
xchg
xor
out
mov
sahf
frstor
xor
mov
mov
adc
pop
bound
pop
cs
jmp
xor
mov
movsb
add
xchg
dec
inc
fldenv
xchg
pop
dec
repz
scas
in
mov
into
cli
and
lds
mov
xor
mov
push
adc
pop
cmp
mov
and
lcall
iret
stc
cmp
push
insl
and
push
and
es
jl
scas
mul
lcall
sahf
loopne
lahf
out
out
ret
cmp
xchg
mov
mov
mov
fsubrs
aam
aad
addr16
setne
cld
lods
pop
xchg
scas
out
sub
repz
jns
mov
lods
hlt
xor
cmpsl
out
sti
jmp
inc
fdivrp
cmp
es
aad
sub
adc
insb
jno
sbb
lods
es
xchg
outsl
iret
cmpsl
sbb
xchg
iret
push
rcrb
pop
rcl
add
call
mov
aam
xor
sahf
pop
jo
xor
imulb
mov
cmp
sub
push
pop
mov
shll
or
mov
lret
mov
fists
push
xchg
mov
push
push
add
pop
fsubp
jno
sbb
and
aad
mov
imul
xorl
jno
and
addr16
xlat
dec
cmc
std
mov
jne
in
je
leave
loope
adc
jge
or
push
outsb
loope
into
mov
pop
cmpsb
or
lret
dec
adc
orb
pop
xor
mov
imul
in
add
xlat
leave
add
insl
pop
iret
stc
pop
sbb
adc
push
sbb
push
xchg
xor
repz
testb
xchg
dec
xlat
xchg
push
xlat
out
pop
out
mov
add
fstpl
mov
cmc
dec
jns
xchg
inc
pusha
sbb
stc
add
mov
xor
cli
lcall
ja
inc
cmp
loop
ret
sbbl
out
test
adc
jl
cld
xor
pop
mov
mov
hlt
or
addr16
arpl
pop
or
icebp
loopne
sbb
imul
sbb
or
cltd
inc
das
in
mov
loope
or
adc
xor
push
loopne
push
out
ds
outsl
sbb
orb
sub
sub
lds
je
lcallw
call
jbe
or
lcall
ret
shlb
fidivrs
cli
xlat
sbbb
psubusw
popa
push
psrlw
subb
add
insb
addr16
mov
push
fidivrl
jp
add
and
sarl
sti
cmp
push
out
stos
lret
mov
sbb
scas
into
push
js
inc
int
cwtl
cmp
in
inc
loopne
pop
pushf
xor
jae
pop
nop
rorl
inc
sub
or
mov
push
and
outsb
ds
sbbl
test
cmp
ret
rclb
adc
jecxz
lea
sahf
int
mov
push
js
xchg
movsb
pushf
lods
dec
pop
ja
lahf
xchg
loope
insl
in
add
sbb
xchg
jle
inc
mov
hlt
lock
pushf
adc
scas
inc
lahf
aas
lods
jle
cmpb
push
adc
xchg
xor
mov
push
sbb
mov
out
xlat
xor
add
mov
sti
outsl
pop
cmp
jle
decb
mov
mov
je
rorl
aad
test
fcompl
outsb
jl
mov
std
sbb
xchg
inc
scas
cmp
gs
loope
mov
adc
or
inc
mov
lods
stc
mov
fldl2e
stos
jne
sahf
mov
push
mov
outsb
movsl
lret
adc
rcl
loopne
leave
mov
sti
cmp
loop
stos
rcll
ds
push
repz
mov
test
sub
mov
mov
scas
mov
sub
xlat
lds
pop
fstl
into
jecxz
inc
fsubr
bound
aam
ret
js
fstpl
rolb
mov
or
jo
push
icebp
xchg
xchg
or
dec
mov
jmp
lahf
cmp
scas
xor
rcrl
fmulp
fistl
lret
dec
jmp
out
fidivl
and
je
or
mov
sub
loopne
pop
mov
adc
mov
sub
xchg
xlat
enter
pusha
cli
pop
stos
mov
sarb
inc
enter
loopne
mov
mov
xchg
xchg
add
mov
mov
out
sbb
push
mulb
clc
aad
adc
xchg
mov
stc
xorl
insl
mov
mov
or
fmuls
mov
sub
cltd
pop
cmp
pop
popl
in
ret
fidivrl
fsubl
aas
add
in
cltd
mov
mov
test
cmp
dec
push
lret
scas
cmp
cmp
int
xor
jl
adc
mov
or
movb
mov
jmp
loope
pusha
idivb
cmp
pop
sti
movsb
inc
js
fsubrs
xor
movsl
mov
push
pop
add
test
cmp
pusha
fadd
xor
adc
adc
out
mov
mov
mov
inc
fnstenv
xchg
rolb
mov
lods
pop
xchg
jge
pop
bound
pushf
call
mov
jae
lret
jecxz
into
fildl
das
pop
je
adc
pop
pop
in
xchg
sarb
sub
sub
jmp
in
or
in
out
fwait
in
into
cmp
adc
and
xor
popa
inc
sub
jae
enter
enter
clc
inc
mov
fnstcw
cmp
pop
or
scas
stc
sbbl
sahf
and
pop
pop
leave
ss
mov
add
add
fs
xchg
shl
ret
mov
inc
cltd
fbld
into
les
rolb
dec
lods
push
enter
lock
shl
or
mov
addr16
jl
popl
mov
sbb
movsl
sub
cmpsl
jb
push
test
stc
mov
xchg
incb
add
adc
jl
stos
outsl
sahf
fsts
mov
subl
xchg
rclb
xor
popl
adc
sahf
push
mov
lods
pop
es
dec
mov
testl
dec
mov
inc
lods
xor
imul
test
dec
jnp
hlt
jmp
mov
mov
out
mov
adc
insb
in
jl
push
push
push
aas
repnz
divb
cmp
call
jne
or
fmull
jno
rcll
pop
xorb
inc
stc
out
rclb
aas
cltd
js
xlat
in
add
aaa
and
mov
and
dec
cmpsl
sub
mov
adc
mov
sub
mov
fistl
inc
mov
mov
cmp
inc
mov
pop
scas
dec
inc
movsb
inc
movsl
mov
lds
popf
add
pop
jne
sbb
push
lahf
fs
cs
xchg
dec
push
jbe
push
or
xlat
outsb
mov
xchg
test
or
jecxz
push
pop
aaa
arpl
inc
popf
popa
test
test
push
push
jo
sbb
out
nop
es
push
xchg
mov
xor
aam
ret
jle
int3
test
adc
sbb
mov
cmp
dec
ja
cmp
dec
insl
clc
mov
sub
inc
rclb
sbb
add
pop
sub
jp
adc
in
ljmp
push
ja
mov
xor
jl
or
xchg
mov
mov
notb
jne
mov
daa
int3
jp
push
jl
iret
lret
lods
ja
das
inc
jbe
outsb
dec
aad
divb
jecxz
cmpsl
push
jmp
jno
sbb
movsl
mov
jg
pop
fwait
mov
jb
fidivl
pop
aaa
test
fstl
jl
stos
pop
xchg
mov
outsb
test
jne
dec
adc
lret
fcmove
jns
add
sub
and
pop
lods
inc
data16
adc
sti
push
frstor
mov
or
jmp
and
insb
popf
test
add
jne
cmp
aaa
test
inc
in
dec
inc
cmp
mov
shll
adc
pop
cs
mov
jp
fdivr
in
xchg
mov
dec
es
inc
xor
cmc
inc
add
leave
mov
std
mov
jno
jo
loop
push
sub
dec
ds
bound
inc
jae
das
xor
test
sub
inc
push
push
mov
sbb
call
repnz
mov
rcll
loopne
pop
adc
cmpl
dec
out
inc
call
cmc
push
in
call
ss
or
xchg
mov
and
xchg
push
xchg
repz
ret
push
push
and
jmp
into
in
pusha
test
cmc
sub
dec
push
jp
enter
push
in
andb
adc
pop
pushf
rorb
ficoml
xor
mov
repz
sti
mov
stos
andl
push
out
in
enter
mov
shrb
add
mov
and
repz
rol
daa
jnp
pop
into
adc
xor
pop
out
in
icebp
sub
dec
test
sarb
aam
adc
iret
movsl
enter
sbb
pop
or
faddl
add
das
cld
ss
insb
pop
jmp
fisttps
push
test
xor
inc
xor
mov
ss
inc
popa
int
sbb
sti
call
and
in
dec
sbb
imul
fsubl
dec
cmp
jns
mov
dec
add
xchg
dec
lret
fwait
mov
leave
int
push
mov
push
push
sbb
enter
ljmp
sbb
push
pop
cld
inc
inc
add
imul
aad
adc
lret
jne
out
jle
loop
lods
nop
push
cmp
enter
sbb
dec
xchg
push
sub
nop
sbb
add
add
sarl
sbb
jno
mov
stos
sti
sti
dec
stc
sbb
sub
stos
int
cmp
test
xchg
push
int
fwait
adc
push
movsl
push
aam
adc
mov
push
cmc
test
sub
jae
ja
sarl
cwtl
pop
jg
stc
cmpsl
test
xchg
ror
pop
or
sbbb
xchg
mov
cmp
mov
pop
int3
lock
out
cli
mov
add
and
inc
jge
nop
ja
outsb
pop
cltd
adc
outsl
fidivrl
jle
repnz
ss
fisubrs
lret
arpl
adc
dec
jmp
adc
fildll
lahf
outsl
mov
je
cmpsl
sub
add
shlb
ucomiss
js
inc
insb
and
out
mov
pop
fldt
mov
jle
or
mov
mov
sbb
aam
sub
out
outsl
lea
push
fstl
pop
mov
rcrl
cmp
sub
xchg
push
mov
jmp
ret
in
mov
shll
outsl
out
mov
clc
movsl
les
aad
loop
xor
push
jp
adc
ret
mov
int3
inc
stc
fsub
jle
leave
cmp
mov
mov
aas
mov
fs
fs
je
and
daa
adc
pop
or
movsl
cmp
shrl
mov
mov
xchg
xchg
inc
bound
repnz
or
inc
adc
fs
lret
out
cmpsb
jl
adc
jp
das
sbbl
inc
bound
cs
or
lea
dec
mov
sub
out
rcr
cmp
insb
sbb
movsb
cmc
pop
in
mov
lods
mov
jo
popf
lcall
dec
mov
push
xchg
or
xchg
mov
hlt
movsl
mov
adc
jo
xchg
push
add
sub
xor
shlb
andl
fisubrl
stos
or
incb
jecxz
push
xchg
movsb
jno
imul
mov
jp
cmp
pop
jecxz
cld
pop
jp
pop
mov
hlt
jbe
mov
xor
jmp
aam
stc
bound
lods
jb
add
lods
repnz
pop
mov
fnstenv
in
mov
adc
sub
lahf
sbb
xchg
mov
xor
or
cltd
push
popa
mov
cmp
out
push
xchg
mov
cmp
repnz
sbb
sub
sub
mov
dec
or
outsl
nop
std
jnp
sbb
jl
nop
ja
mov
out
sbb
mov
mov
add
outsl
push
dec
push
adc
adc
push
pop
sub
mov
and
lock
mov
sbb
movsl
mov
pop
mov
xor
notl
test
mov
sub
pop
and
jno
clc
dec
xor
sub
stos
push
sahf
aad
jbe
xor
sti
or
sbb
xchg
xchg
xchg
pop
mov
in
xchg
mov
inc
ljmp
fbld
in
mov
lock
sub
stos
push
pop
and
inc
pop
nop
or
enter
sti
mov
and
int
xchg
xchg
sbb
es
sbb
pop
sbbb
lcall
jmp
inc
add
mov
add
stos
andl
insb
xor
lock
push
lcall
outsb
gs
or
mov
sbb
xor
and
mov
xlat
jle
mov
jecxz
sbb
fsubrs
nop
in
sbb
mov
jo
bound
fisubs
push
sub
repnz
mov
inc
vpcmpeqw
shlb
rolb
inc
xchg
scas
orb
je
and
add
sbb
adc
inc
aaa
lds
notb
mov
and
jae
mov
cmp
test
jne
sub
xor
or
loopne
loope
ljmp
xchg
cmp
orb
outsb
mov
in
xchg
dec
add
push
cld
mov
adc
push
lock
sbb
pop
fsubrl
ret
jno
mov
xor
nop
out
and
mov
jl
arpl
clc
and
jbe
subb
adc
outsl
cltd
jb
sbb
sub
les
cmp
test
test
mov
push
sbb
and
push
jmp
xchg
aas
xchg
rolb
cmpsl
push
xor
add
inc
hlt
mov
in
clc
mov
cli
pop
xchg
imul
das
mov
lods
fcompl
push
movsl
sub
ljmp
push
push
xchg
stos
rcl
outsl
adc
shll
dec
jmp
mov
cmpsb
xchg
les
jg
push
mov
mov
adc
insl
ljmp
es
adc
push
xchg
push
mov
inc
mov
inc
xchg
pop
push
rcl
push
loopne
and
jmp
sbb
push
jnp
adc
icebp
rolb
xor
cmp
or
pop
cmp
xchg
mov
pop
push
out
or
add
dec
clc
addr16
pop
xor
mov
outsl
lds
mov
lretw
or
fdivs
cmc
inc
lcall
mov
fcoml
xchg
jge
xor
jle
jb
xor
pushf
xor
jno
adc
pop
lahf
push
mov
sbb
std
sub
dec
lea
pop
mov
mov
orl
xlat
add
sbb
pop
loop
imulb
sbb
aam
xor
xchg
fsts
loopne
or
lahf
out
loope
int
std
mov
xchg
sbb
cld
in
stos
mov
fildl
push
mov
mov
arpl
scas
sub
test
xchg
mov
les
aas
cmp
std
pop
lcall
sub
pushf
mov
int3
imul
imul
sbb
pop
decb
adc
bound
push
dec
push
ficoml
mov
repz
pop
lods
fbld
imul
loope
cmp
dec
adc
pop
pop
pusha
mov
insb
mov
out
mov
out
dec
mov
fs
dec
lods
in
jg
mov
scas
popf
xchg
daa
jbe
and
mov
cmp
shrl
sbb
jmp
lods
push
dec
test
pop
fmuls
pusha
int3
pop
inc
sbb
dec
inc
fdivr
aad
cld
adc
jnp
mov
sub
hlt
jp
or
push
mov
shlb
mov
mov
call
shr
imul
sti
inc
int3
xchg
mov
mov
mov
adc
dec
sub
xchg
iret
pop
cmovp
push
mov
jmp
mov
aad
jae
sti
fiaddl
sar
jg
add
or
ret
inc
lods
jnp
les
or
mov
lods
out
jg
aaa
insb
xor
rcrb
cmpsb
push
jmp
or
push
ret
fwait
scas
dec
push
ljmp
sbb
adc
fdivrl
stc
push
inc
enter
js
push
jo
jae
fisttps
jbe
shrl
bnd
sbbl
dec
lahf
out
sub
xchg
or
mov
pop
fwait
mov
hlt
cmp
sub
jb
cmp
add
adc
pop
enter
mov
stos
cltd
mov
dec
loopne
or
and
mov
xchg
xchg
test
popf
sarb
cli
inc
jns
sub
std
xlat
lods
ljmp
lea
lock
lretw
inc
mov
bound
adc
inc
sub
or
popa
aaa
jmp
lods
into
inc
arpl
cmpsl
les
je
lret
into
cli
mov
out
push
fisubrl
mov
lock
fcmovnu
cmp
pop
inc
sbb
dec
adcb
imul
fnstcw
mov
pop
mov
and
lods
addr16
lods
nop
cmp
mov
das
pop
test
mov
aad
popf
and
cmpsl
shll
mov
sahf
int3
into
jmp
pop
imul
sub
loopne
inc
pop
rcll
aaa
push
insl
fnsave
rcrb
and
int
xor
stos
mov
mov
mov
mov
xchg
xchg
jmp
mov
sub
outsl
fs
sbb
mov
xor
cmpsl
jle
dec
rclb
sbb
mov
sbb
xchg
iret
add
dec
jle
cmpsb
mov
dec
out
xchg
scas
push
push
test
inc
mov
fwait
pushf
jbe
and
mov
xlat
sbb
out
or
ja
fs
movsb
and
inc
std
xor
test
movl
adc
cmp
jbe
jne
inc
aam
pop
loope
push
outsl
adc
repz
jbe,pn
pop
mov
cld
test
pushf
xchg
cwtl
dec
pop
repz
outsl
xchg
inc
mov
cmp
xlat
imul
test
clc
xchg
out
popa
cld
push
jne
jg
cmp
xchg
js
mov
ss
adc
push
popf
fadds
les
mov
mov
cltd
daa
mov
leave
cmp
repz
popa
mov
sarb
repnz
pop
push
cmpsl
xchg
frstor
xchg
mov
movntps
mov
push
jae
mov
enter
pop
aad
movsb
in
cmp
mov
adc
stos
cmpsb
sub
mov
int
xorb
xchg
dec
daa
jnp
lods
stc
loop
xor
sub
add
loope
jg
mov
movl
xor
es
test
sub
dec
sub
sub
pop
aas
movsl
push
pop
mov
out
sbb
popa
push
add
sub
xchg
xchg
lahf
mov
or
add
lar
scas
pop
xchg
repz
daa
xchg
popa
pusha
mov
mov
sbb
mov
fistps
jb
mov
fimull
lret
mov
nop
jecxz
icebp
lcall
push
sbb
pop
pop
rorb
and
pushf
push
add
and
jo
sbb
ja
sarb
in
cltd
or
pushf
inc
pop
and
mov
dec
xchg
stos
shlb
xor
pop
lahf
jno
add
or
jle
jmp
mov
dec
repnz
add
cmc
mov
popf
pop
movsb
mov
int
pop
xchg
cmp
xchg
pop
jb
stos
sub
jbe
pop
mov
inc
sbb
insl
inc
pop
test
jnp
pop
dec
in
lea
dec
sub
sbb
xchg
cmp
xchg
push
sub
xchg
mov
out
imul
mov
sbb
in
jp
bound
sub
pop
fdivr
shll
or
shrl
adc
cmp
adc
pop
hlt
xor
nop
mov
gs
pop
jbe
mov
xchg
out
push
ret
push
mov
ret
and
bound
mov
bswap
pop
and
addr16
xor
add
and
mov
stos
in
aaa
idiv
out
lcall
dec
jle
xchg
or
jecxz
sub
pop
int
je
mov
add
or
cmp
mov
loop
sbb
je
cmp
sbb
pop
roll
sar
or
fwait
sbb
repz
push
push
jnp
jnp
outsl
out
ss
arpl
lods
and
xor
repnz
pop
add
fistpll
jo
imul
xchg
push
mov
fdivrl
pushf
mov
mov
sbbb
xchg
hlt
push
cmc
int3
leave
stc
mov
mov
xor
cmpsb
jae
cmp
test
je
mov
xchg
push
mov
inc
jns
or
shll
adc
or
fnstsw
out
lret
fdivr
clc
enter
out
pop
adc
xchg
sub
leave
xchg
xlat
subl
lret
add
cs
mov
push
sub
mov
imul
adc
or
push
mov
pop
cmp
xchg
push
sub
xchg
iret
xchg
je
test
mov
fstpl
scas
loop
imul
movb
sub
jl
subb
insb
xor
mov
mov
repz
mov
insb
insl
add
sub
mov
pusha
std
xorl
notb
popf
insl
add
and
ret
inc
fldt
adc
dec
mov
dec
cmc
popf
jno
popa
stc
lcall
mov
mov
dec
pop
fisttps
cs
outsl
jg
mov
jo
jl
test
and
in
rcll
sbb
push
or
lcall
xor
mov
xchg
jns
das
adcl
xor
push
fstl
lea
and
divb
imul
push
mov
push
pop
mov
dec
loopne
sbb
movsb
pop
mov
inc
int3
mov
jecxz
aaa
and
mov
and
leave
inc
inc
sbb
je
mov
out
cmp
or
mov
mov
sbb
div
jecxz
pop
mov
push
xchg
or
jns
outsl
sub
stos
out
cwtl
lods
xchg
or
icebp
adc
das
or
pop
dec
dec
outsb
inc
test
cmp
mov
add
fs
jnp
lock
lods
push
add
data16
dec
cltd
das
dec
mov
jbe
mov
push
sub
stc
fidivrl
or
push
and
sub
pusha
sub
out
int
arpl
jno
div
jge
movl
mov
daa
push
or
push
enter
cld
cmpb
jg
inc
or
ficoml
push
mov
cmpsl
adc
pop
imul
test
xlat
sbb
lahf
add
inc
or
mulb
jo
mov
and
push
inc
test
xchg
sub
push
jbe
sarb
aad
ss
adc
or
sub
iret
mov
or
test
testb
clc
xor
cmp
fdivl
fbld
lds
adc
xchg
fwait
scas
in
sahf
decl
mov
aas
and
sbb
loope
popf
ss
ds
mov
jmp
cmpsb
scas
inc
lcall
sub
push
movsl
popf
popa
ss
dec
or
ret
out
and
sbbb
inc
sub
xor
icebp
mov
mov
pop
add
cmc
lods
push
add
enter
push
add
and
sub
insl
or
das
lods
push
int3
mov
scas
popa
out
mov
dec
ljmp
ror
out
gs
xchg
push
dec
cmp
pop
mov
xchg
insl
or
fwait
mov
mov
pop
test
ja
std
add
enter
jle
cmp
pop
popa
cmp
jb
pop
vmovntps
sahf
sub
add
push
iret
repz
xor
push
sbb
pop
arpl
adc
fistl
cmpsb
js
add
jae
fcmovne
pop
lds
adc
inc
jp
addb
shll
ss
xlat
and
mov
iret
xchg
out
int
jl
stos
repz
xor
addr16
mov
icebp
flds
popl
pop
fs
push
push
fnsave
les
movsb
dec
mov
mov
jne
scas
mov
jns
test
pop
jl
js
test
mov
or
push
imull
or
jb
mov
mov
insb
pop
shll
xchg
and
jl
cli
inc
push
mov
pop
inc
jne
push
fcoms
movsl
mov
rcrb
jb
je
popf
pusha
imul
and
fs
adc
dec
jg
into
and
xchg
jbe
jo
iret
lahf
push
and
sahf
mov
and
and
loope
leave
sbb
jl
xchg
mov
add
lods
add
xor
cwtl
ds
xchg
dec
sub
int
push
xchg
loope
cmp
fimuls
adc
incw
dec
xlat
addr16
pop
movsb
pop
leave
out
pop
inc
xor
mov
inc
sub
push
int
jmp
cmp
cmp
adc
or
lock
sub
hlt
shlb
enter
sub
arpl
shrl
pop
ficomps
scas
push
mov
xchg
push
push
mov
jp
ret
fmul
push
jg
roll
add
test
mov
pop
xor
lea
inc
cwtl
shl
xor
addr16
scas
jg
subl
push
adc
hlt
pop
push
lock
xor
dec
jne
or
loopne
test
in
mov
push
push
mov
mov
dec
mov
stc
adc
xchg
fstpt
sbb
cmp
fnstenv
dec
xchg
cmc
ret
outsw
daa
push
es
mov
fs
andb
push
mov
or
dec
leave
ret
mov
adc
mov
daa
clc
adc
pop
xchg
push
pusha
xchg
aam
dec
mov
jno
lods
push
mov
add
jo
pusha
xor
into
cmp
sarb
cmp
lea
mov
ja
psubsb
addr16
mov
and
lret
repz
popf
jle
fs
sarb
inc
jbe
cs
sub
mov
popa
cmp
and
sbb
inc
mov
fsubrl
stc
jb
mov
xlat
xor
push
cmp
add
add
cmpsb
xchg
scas
ret
test
inc
fmul
lcall
mov
xchg
jns
adc
fsubl
stos
push
jb
sub
dec
enter
fcomps
sbb
in
sbb
push
test
data16
fnstsw
bnd
out
and
dec
push
mov
movsl
scas
sbb
sahf
xchg
push
xor
scas
outsb
repnz
sub
shrl
pushf
or
push
or
sets
rcrb
cmp
subl
cmc
data16
repz
mov
pop
jmp
rorl
lret
adc
mov
aam
outsb
daa
xor
out
mov
pop
lret
cmc
daa
jg
in
xchg
pushf
imul
push
sub
push
sub
jns
in
out
pushf
orb
js
push
std
add
adcl
and
sahf
addr16
aad
sbb
fildl
pop
pusha
repnz
out
popa
mov
mov
jne,pt
rclb
insb
xchg
dec
pop
dec
fisubl
inc
daa
or
cmp
jl
addl
jmp
andl
xchg
int
outsb
dec
insb
jg
xor
and
shrl
jge
scas
lea
ret
lods
inc
test
xor
aaa
je
or
dec
in
les
int3
or
mov
jne
jl
je
into
push
addl
loopne
leave
cld
pop
inc
out
dec
cmc
push
rorb
or
add
mov
daa
mov
andb
popf
fcmovu
sub
sbb
mov
push
loope
jge
cltd
int3
cmpsl
mov
adc
stos
mov
int
out
in
add
mov
sub
lcall
fldl
jo
pop
push
loopne
or
xor
sbb
push
out
push
push
loope
or
ficomps
pop
mov
aas
mov
cmp
xor
xchg
pop
repnz
stos
int3
andnps
stc
inc
mov
and
jge
insl
call
insl
movsb
lods
sbb
into
int3
jmp
fcomi
std
push
sbb
sbb
jl
test
scas
dec
push
adc
mov
arpl
lods
push
out
cmpsb
mov
xorb
call
into
enter
pop
push
pop
and
aaa
sbb
into
test
mov
fwait
mov
and
in
pusha
add
test
enter
sbb
mov
push
fimuls
or
popf
in
push
or
lret
xchg
stc
fldenv
loop
aam
popf
push
pop
inc
gs
sub
and
sub
fdivl
popa
dec
ficoms
inc
adc
mov
rcll
pop
mov
test
xchg
cmp
mov
sarl
cmp
cmp
stc
cmp
aaa
sbb
jno
inc
mov
mov
sub
inc
mov
push
sbb
xchg
adc
daa
adc
cld
mov
or
push
stos
arpl
inc
iret
jbe
pmaddwd
fisttps
mov
lea
in
cmp
enter
mov
xchg
daa
mov
xchg
cmpsl
add
cs
mov
ficoms
orb
jmp
dec
loopne
jae
fistpl
mov
xchg
sub
dec
mov
sub
out
push
push
dec
jne
movsl
arpl
test
xor
stos
mov
dec
cmp
mov
pop
xchg
dec
imul
call
shll
push
lds
push
jb
xchg
mov
sahf
imul
inc
mov
or
pop
push
pop
stos
xor
aaa
repnz
pop
int
shlb
les
add
scas
pop
cltd
push
xor
sub
dec
lcall
inc
mov
sub
xchg
push
rcrb
dec
push
fs
imul
insl
lods
mov
cmp
mov
jle
pushl
andb
xor
cwtl
mov
xlat
lcall
cwtl
adc
das
add
sahf
imul
xchg
and
lea
add
fidivs
shlb
mov
lcall
int
loopne
rcll
sub
mov
fbstp
sti
xchg
mov
inc
cs
mov
jno
mov
jge
push
dec
and
cmp
js
pop
gs
add
jg
rclb
jb
lcall
popf
movsl
scas
je
mov
fimull
rolb
arpl
lret
enter
icebp
das
dec
pop
les
xor
push
sar
in
sarb
pop
arpl
add
mov
mov
popa
xchg
mov
and
pop
lcall
lret
sub
hlt
add
xchg
push
addr16
lds
sub
inc
pop
cmc
loopne
mov
inc
jo
sahf
pop
out
mov
add
inc
pop
adc
aaa
mov
mov
xchg
leave
cs
cmp
fadd
inc
jno
push
out
cmp
shll
xchg
jns
pop
popa
roll
fsubl
jno
addr16
rcl
xchg
cmp
jg
movl
add
inc
test
mov
test
into
inc
xchg
std
pop
hlt
lock
or
or
push
in
jp
in
addr16
sub
pop
push
mov
push
jp
jge
addb
fldt
cmpsl
cld
mov
std
xlat
std
stos
xchg
das
add
or
xchg
sbb
inc
rcrl
cmc
mov
mov
mov
sbb
imul
das
dec
push
out
xor
dec
inc
xor
sti
pop
pop
dec
xor
xchg
imul
mov
jle
or
cmp
call
addr16
mov
dec
mov
imul
add
aad
mov
sbb
pusha
les
fisttpl
add
fcmove
push
cwtl
aam
test
rcr
mov
es
roll
sbb
cmc
lods
aas
push
jae
jle
repnz
pop
in
clc
sub
inc
into
outsl
add
push
pop
sbb
xor
push
cli
jmp
sub
aas
push
insb
xchg
bound
fcoms
cmc
jle
imul
or
mov
push
mov
cmpsb
mov
gs
sub
out
inc
outsb
mov
mov
pop
gs
out
adc
jp
filds
outsb
nop
jno
fisttpll
cmp
mov
adc
sub
bound
arpl
stos
cmp
dec
xchg
int
adc
popa
pusha
scas
and
and
jl
out
jecxz
mov
cmp
adcb
mov
pop
imulb
cmp
inc
xor
idivl
sbbb
mov
jbe
pushf
stc
hlt
popw
popl
imul
ret
in
decb
jmp
cwtl
subl
neg
mov
push
iret
popl
fucomip
mov
loope
sahf
fwait
xor
repnz
jbe
or
lcall
movsb
and
cmp
jmp
aas
imul
mov
or
sub
jbe
popf
xor
dec
jne
inc
pusha
scas
call
xor
out
mov
dec
dec
stos
xorl
clc
xlat
ss
out
pusha
cmpsb
lods
mov
rorb
sbb
jnp
cmp
adc
cs
mov
hlt
xor
sub
out
lahf
stos
lahf
mov
das
sub
jmp
adc
sarb
sub
or
mov
or
iret
sbb
pop
negb
fcoms
es
cld
inc
test
push
es
inc
loopne
test
popa
int
xchg
stos
sbb
mov
mov
pop
add
add
rol
out
into
push
lcall
dec
repz
js
test
cmp
dec
aam
sbb
xor
into
pop
pop
mov
mov
mov
pmulhuw
or
push
aas
adc
movb
insb
lcall
jbe
jne
stc
pushf
adc
lock
mov
sbb
push
outsb
idivb
inc
or
fcmovnb
popa
jo
ds
repnz
xchg
test
aam
push
pop
mov
test
mov
pop
jmp
sub
pop
sbb
repnz
mov
ds
cs
lret
clc
push
mov
dec
xchg
js
sbb
mov
sub
loop
test
and
icebp
mov
jns
push
in
push
pusha
jmp
mov
aas
cmp
mov
or
push
out
mov
pop
inc
adc
imul
fdivrs
cli
scas
mov
ss
rorb
pop
push
jle
mov
ljmp
inc
inc
sti
mov
mov
cmp
or
sbbb
mov
lret
push
inc
imul
sub
shlb
aad
ljmp
jmp
in
mov
pop
je
subl
jp
xor
adc
not
xchg
push
pusha
test
mov
sti
mov
pushf
data16
pop
movsb
lea
les
movsb
cmpxchg
sbb
sbb
mov
sbb
or
fdivl
add
cmpl
or
or
mov
out
mov
push
repnz
test
and
adc
xchg
pushf
cmc
mov
es
pop
fs
outsl
xchg
addb
add
sbb
imul
pop
insl
xchg
cmovg
std
in
sbb
xchg
ss
dec
shl
inc
mov
aas
in
aaa
fcomip
stos
aaa
out
outsl
lock
mov
push
addb
or
pop
pop
int3
jl
inc
fistpll
cld
imul
bound
ror
pop
pop
mov
scas
imul
and
call
pop
and
out
dec
lret
rcr
fwait
xchg
lret
xchg
inc
iret
sarb
pop
cmp
in
dec
or
jmp
iret
stc
push
fstpl
adc
je
out
stc
pop
popf
lock
mov
lcall
mov
jnp
push
fcmovnb
repnz
pusha
dec
cmp
xchg
xchg
jno
pop
sbb
lret
cmp
iret
sbb
dec
or
adc
inc
ds
aas
inc
cmpsl
mov
push
inc
xchg
and
mov
xchg
pusha
adc
mov
dec
mov
ljmp
out
push
lahf
out
jp
cmc
scas
inc
addl
cmp
add
mov
push
xor
jmp
dec
std
fisubrl
add
push
fcoml
insl
icebp
fcoml
stos
rcrb
mov
pushw
lods
xor
dec
sbbl
mov
and
xchg
mov
enter
xchg
or
mov
jns
loope
in
push
pop
clc
sahf
dec
sti
movsb
aad
pop
cmp
test
cmp
adc
fistpll
adcb
shlb
mov
jge
xchg
and
int3
mov
xlat
aas
sbb
shll
dec
pop
pop
xchg
orb
mov
mov
data16
mov
subl
xchg
cmp
cmpb
les
inc
push
and
les
cmc
int
arpl
push
sbb
test
push
jnp
cli
js
sti
pop
in
pop
adc
fs
pop
xchg
sahf
push
aaa
adc
xlat
pop
adc
push
lahf
push
stos
jne
icebp
xchg
push
inc
dec
sub
sbb
cs
mov
mov
adcb
mov
jnp
and
and
mov
fsubl
aam
rclb
lds
dec
inc
test
jno
movsb
xor
ret
lods
filds
push
mov
in
out
cltd
mov
push
mov
aad
sbb
out
xor
dec
xchg
clc
xor
movsb
fnstcw
mov
and
cmc
iret
popf
add
test
call
mov
add
sbb
and
add
cmc
inc
jle
mov
pop
dec
mov
add
lods
mov
and
and
std
fwait
out
mov
dec
hlt
je
loopne
xchg
lea
sbb
out
out
aam
aad
jne
jne
mov
dec
or
movsl
cmp
xchg
push
pop
jecxz
and
ret
fistps
das
lea
pop
nop
out
inc
test
pop
dec
int
scas
cld
das
sbb
mov
hlt
adc
cmp
dec
fnstsw
fdivr
xabort
outsl
pop
jecxz
xchg
aaa
arpl
lock
add
pop
or
sbb
movsb
outsb
xchg
add
mov
sub
das
jecxz
aad
out
sub
jmp
fdivs
addb
sbb
mov
add
lock
sbb
test
inc
jae
or
shl
icebp
pop
int
insl
sti
outsl
cmp
dec
ss
jo
push
mov
push
fstl
loopne
jg
lret
xor
pop
ficomps
xor
loop
loopne
movsl
xor
cmp
xchg
or
sbb
dec
cmp
dec
pop
cli
enter
arpl
stos
sahf
dec
outsl
xorb
dec
sub
pushf
jns
inc
push
mov
out
clc
nop
orl
out
pop
push
outsb
mov
cwtl
jmp
mov
inc
js
lret
add
mov
test
in
push
xor
in
mov
ret
ds
in
mov
jmp
cmp
mov
pop
sbb
fwait
in
push
fimull
filds
mov
push
push
pop
push
es
xchg
loope
int
adc
shll
jle
scas
ret
and
lret
xor
mov
lret
push
movsl
aam
in
scas
or
jns
jbe
cwtl
ljmp
movb
pusha
push
xchg
jb
dec
jns
int3
pop
test
jle
ds
mov
ret
push
aaa
xchg
aad
xchg
xchg
dec
jns
call
sub
cmp
adc
fisubs
stos
sahf
test
rcll
enter
mov
mov
and
inc
les
aam
shll
xlat
or
adc
insb
dec
pop
ret
jge
loopne
jg
adc
pop
and
push
ds
push
lea
sub
or
cmp
xchg
rorb
pause
ret
sbb
test
cmp
cmp
cld
push
lahf
mov
dec
enter
xor
and
jne
mov
inc
xchg
ficoml
ja
cmp
mov
je
sbb
sub
sbb
xchg
stos
arpl
jbe
xchg
mov
in
pop
shrl
mov
and
jg
pop
lods
addl
scas
push
mov
xchg
iret
or
or
cmp
jmp
add
insb
inc
inc
add
pop
fbstp
int
scas
sbb
pop
inc
xchg
sub
and
cmp
mov
pop
mov
pop
inc
addl
test
adc
jns
out
mov
out
dec
out
fcoms
jb
movb
cmpsl
fwait
mov
movq
and
add
push
mov
idivl
mov
les
fildl
push
or
cwtl
mov
dec
jecxz
aas
icebp
add
and
ljmp
sbb
dec
repnz
aad
dec
mov
pop
cld
fisubrs
jb
push
sarl
int3
mov
dec
gs
insl
pop
popf
pusha
lcall
sub
in
pop
sbb
frstor
inc
mov
popa
jge
out
into
ja
test
pop
shrl
lret
lock
ss
push
hlt
int3
out
lcall
or
cmp
iret
addr16
lods
sbb
push
pushf
enter
jp
cwtl
jb
push
test
popa
ffreep
repz
sub
mov
xorl
inc
or
mov
fbstp
outsb
leave
inc
mov
cltd
fisttps
fdivr
cmc
fsubs
outsb
or
sbb
and
dec
add
add
sub
je
pop
test
add
jns
daa
xchg
cmpb
addr16
xor
dec
xchg
addr16
jbe
push
js
cwtl
fwait
xor
imul
icebp
pop
ja
pushf
sbb
or
adc
stos
cwtl
push
stc
push
push
lods
repnz
mov
stos
loop
mov
addr16
addr16
sub
mov
cmp
mov
dec
sbb
in
cmp
cld
push
shrb
ret
jae
fwait
nop
addr16
xchg
stos
xchg
loope
inc
mov
dec
sub
loop
out
jo
and
addr16
andnps
push
dec
add
xchg
push
arpl
mov
adc
and
aaa
cli
fnstenv
push
sbbb
and
push
popl
repnz
sub
pop
outsl
xor
jo
fmuls
mov
sarb
jo
xchg
test
xor
insl
js
pop
sahf
xchg
pop
movl
movsb
push
mov
js
jge
dec
sub
loopne
sbb
mov
mov
cmc
into
mov
dec
enter
mov
jmp
lahf
negb
fldt
popf
imul
and
adc
mov
adc
cmp
adcb
call
out
out
sbb
cmp
and
inc
cmp
int
sub
xor
iret
stos
dec
out
leave
inc
negb
ljmp
pop
sub
sub
sub
push
clc
out
mov
sub
popa
fnstsw
leave
aam
dec
jne
pop
push
pop
fwait
imul
cmpsb
sub
lods
test
fadd
ret
adc
subl
inc
xor
mov
notb
cmpsl
loope
stos
pop
mulb
inc
sub
mov
lock
mov
or
and
sub
xor
inc
imul
es
inc
stos
jecxz
out
push
cmp
into
mov
loopne
cmp
ficoms
push
push
hlt
push
jbe
push
mov
xor
mov
mul
jb
cmc
inc
inc
xor
mov
stos
repnz
clc
or
cmp
mov
dec
int
js
in
lcall
pop
mov
popf
jb
lods
jns
fildll
jge
lret
insl
popa
pop
sbb
xor
insl
ja
pusha
lcall
adc
icebp
fisubrs
inc
cmp
dec
fsub
pop
pop
sub
scas
jmp
aaa
or
sahf
add
stc
adc
dec
xchg
dec
add
xchg
lret
add
lret
pop
jmp
out
add
nop
faddp
and
std
call
or
jno
cmp
jle
sbb
insl
xchg
cld
mov
dec
mov
mov
popa
iret
inc
gs
mov
push
mov
fisttps
pop
notb
mov
add
cmpsl
fs
and
repnz
xchg
inc
mov
cwtl
cs
xchg
mov
notb
pop
or
mov
data16
sub
scas
jmp
test
sub
cmp
or
sub
xchg
cmp
sub
mov
sahf
inc
push
mov
inc
pop
or
adc
mov
bnd
add
xor
int3
rorl
inc
test
sub
fwait
mov
xor
jns
ja
lods
and
dec
repnz
adc
loope
cmc
push
leave
aas
sbb
jle
lcall
mov
jno
mov
mov
popf
pop
lds
mov
add
xchg
pop
imul
sub
or
adc
mov
sarl
mov
fyl2xp1
idivl
nop
daa
or
push
mov
jl
mov
cmpl
and
lcall
in
sbb
cwtl
imul
addr16
stos
arpl
xchg
cmpsl
mov
or
pop
ret
mov
das
ja
movsl
test
xlat
mov
sbb
fmull
stc
pop
enter
jmp
add
jle
test
bound
adc
sub
mov
or
test
fstp
mov
jnp
jecxz
sbbl
scas
out
xor
or
leave
out
in
pop
arpl
fxch
jg
ds
pop
sbb
push
cli
cltd
jg
fldenv
sub
test
lods
cmp
pop
sub
fistl
lcall
cmp
inc
mov
mov
insb
das
rcll
adc
addl
cmp
jae
popa
iret
adc
mov
shll
sahf
out
pop
data16
mov
jns
dec
or
insb
mov
aaa
adc
cmpsl
icebp
xorb
mov
jg
jp
call
icebp
ljmp
aad
push
mov
mov
jge
mov
mov
add
push
xor
inc
mov
sbb
inc
and
sub
cmp
jp
mov
sbb
pusha
mov
push
or
adc
cmp
scas
xchg
inc
push
in
gs
jecxz
inc
xor
pop
repz
ficomps
inc
add
adc
add
pop
and
lods
cli
adc
movsl
imul
inc
push
js
imul
mov
jbe
dec
jmp
ret
int
scas
scas
mov
fimuls
or
sbb
gs
jo
movl
fcmovne
insb
push
push
push
xlat
sub
adc
test
sub
arpl
lret
je
push
xchg
leave
ljmp
lods
xor
cmp
and
inc
mov
mov
sbb
std
aas
or
cld
repnz
add
mov
aam
cld
cmc
mov
adc
add
repnz
mov
pop
bnd
mov
xchg
rclb
mov
dec
lahf
xchg
dec
popa
incl
inc
jne
sbb
mov
stc
mov
pop
stos
enter
inc
sahf
push
jp
movsb
cmp
dec
fs
bound
cltd
fwait
mov
pusha
and
imul
and
inc
add
inc
jmp
xchg
js
test
stc
adc
out
mov
inc
cmp
cwtl
stc
jg
push
out
mov
push
sbb
jo
sarb
gs
into
icebp
and
add
jmp
iret
and
jb
push
icebp
jge
imul
ret
fistl
xor
and
sbb
jnp
shll
imul
aad
mov
aad
sub
jmp
ljmp
filds
xor
imull
arpl
popa
pushf
arpl
push
push
icebp
mov
push
xchg
ds
and
test
mov
stos
dec
pop
add
cmp
fstps
inc
out
dec
inc
sbb
add
les
cmove
push
incl
jb
dec
push
cmpsb
xchg
repnz
pop
or
dec
or
lds
push
fisubrs
xor
loope
loope
jns
sarb
jl
jg
mov
roll
xchg
hlt
push
test
ret
sub
cmp
sub
inc
ret
pop
fs
inc
mov
xor
inc
scas
in
imul
imul
sub
arpl
rcr
fildl
inc
cmpsb
test
sbb
add
and
cmp
mov
int
push
je
in
stc
jne
imul
outsl
adc
fisubs
xlat
pusha
or
test
repnz
pop
repnz
pop
fstpl
repz
hlt
ja
and
xchg
add
cmc
xchg
xchg
insl
out
in
icebp
mov
xchg
daa
lods
hlt
mov
shlb
sarl
cvttps2pi
nop
push
jo
fwait
rcrb
ret
das
xor
add
xorl
gs
jmp
in
and
mov
insl
aam
mov
dec
cmpsl
sbb
out
fs
mov
add
cltd
and
imul
movl
test
ret
pushf
push
dec
outsl
loopne
gs
lock
fidivl
and
dec
xchg
cwtl
fldl
cmp
jmp
and
mov
sarb
xor
and
xchg
jmp
and
pop
in
out
xchg
mov
mov
lea
or
jb
push
push
xor
pop
mov
xor
lods
xor
std
push
sti
inc
inc
std
clc
or
out
dec
push
add
out
fdivrs
mov
pusha
enter
mov
and
addr16
sar
cmp
inc
push
cwtl
sbb
jbe
repnz
push
inc
pusha
jl
jo
pop
pop
pop
out
insb
mov
mov
cld
push
jmp
outsb
test
gs
test
dec
jl
mov
subl
movsb
cmpsb
leave
fisttps
out
jb
inc
lret
or
pusha
jno
call
adc
inc
mov
sbb
and
aaa
test
dec
push
dec
fidivs
aaa
rcrb
lds
pusha
lds
inc
pop
mov
jo
adc
orb
ret
add
or
roll
imul
inc
push
jg
imul
push
lds
inc
mov
movl
xor
clc
mov
or
push
ficomps
cmp
mov
test
adc
call
les
into
dec
mov
aas
mov
sbb
cmp
cwtl
cmp
aad
jmp
sub
xchg
cmp
pop
rclb
sbb
test
testl
mov
lock
dec
and
pop
sbb
out
xor
insl
push
dec
call
xchg
and
pop
ss
sub
outsl
mov
popa
ja
adc
push
fcmove
xlat
out
les
xchg
lock
fwait
sub
xchg
out
xor
call
out
xor
cmp
dec
or
push
jo
push
lea
lcall
dec
mov
rol
in
and
fsubr
fsubs
ss
leave
lods
xchg
inc
cli
mov
mov
and
add
dec
xor
adc
push
mov
cmpsb
rcl
sub
in
push
aas
jae
jle
inc
jb
lahf
add
icebp
jno
clc
rcrl
dec
cwtl
arpl
call
call
push
dec
imul
popa
in
ljmp
sbb
pop
in
je
adc
add
lahf
and
loopne
cltd
aaa
inc
mov
adc
stos
mov
or
aaa
and
lret
add
pop
xorl
shll
test
push
dec
ds
cmp
or
push
push
pop
into
shll
out
not
push
push
clc
sub
mov
mov
and
jne
or
push
pop
and
pushf
hlt
mov
outsl
xor
test
pop
xchg
cltd
xor
out
xor
loope
stos
lahf
push
inc
sbb
data16
jp
dec
push
mov
daa
lea
int3
call
xchg
aam
sbb
xlat
cmpsb
fcomi
test
jnp
cld
xchg
mov
test
mov
inc
or
orl
cmp
aam
or
addb
sti
add
cld
or
loop
cmpb
shr
fistpll
dec
testb
das
les
mov
xchg
mov
cmp
xchg
xchg
xor
mov
loope
dec
xchg
movsb
lock
jb
sub
jne
jmp
fstp
pop
imul
jmp
cmpsb
xchg
add
lods
insl
movl
scas
push
mov
lods
insl
pop
dec
nop
out
ds
mov
popf
into
in
jg
xchg
movsl
mov
mov
add
popf
jl
jns
out
or
in
xlat
push
pop
cs
iret
loopne
or
hlt
or
jl
int3
sbb
cmp
nop
pusha
int
in
and
shll
testb
movsl
ljmp
cmp
and
pop
mov
jne
push
pop
and
cwtl
dec
xchg
sub
inc
sbb
ds
and
mov
jno
call
fstl
xor
lods
xchg
sbb
addr16
cmp
inc
iret
mov
mov
mov
cmp
adc
insl
in
ret
sub
mov
jno
jne
cmpl
push
xchg
js
lahf
data16
mov
mov
or
call
cmpsl
inc
cs
lods
push
aas
js
les
and
cmp
cmc
icebp
test
loopne
pop
movsb
add
mov
mov
stc
jmp
stos
loop
inc
in
push
jo
stos
inc
movsb
and
test
pop
subb
push
mov
lcall
fwait
stc
fdiv
pusha
imull
lds
rcrl
movsb
fnstsw
shll
bound
lahf
sub
sti
insl
xchg
ss
repnz
out
mov
cmpsb
fwait
mov
xchg
rorl
int3
inc
sbb
enter
push
sbb
iret
jecxz
adc
bound
test
cmp
jl
subl
dec
scas
dec
popf
xchg
in
mov
jg
adc
or
fwait
bound
imul
cmp
mov
jg
xlat
push
xchg
divb
insl
imulb
std
int3
cmp
shlb
push
stos
movsl
divl
pop
or
fsts
pushf
jno
arpl
sub
push
dec
xor
std
pop
cmp
out
sbb
mov
pop
xor
xchg
cmp
sbb
and
sbb
push
cmpsl
xchg
decb
ljmp
sub
pop
xlat
mov
stos
cli
iret
sarl
ja
jo
xor
fcoms
decl
adc
lods
clc
jge
inc
stc
or
xchg
shr
ficoml
mov
jnp
outsb
jle
and
lods
lea
cmp
repz
ficomps
xchg
lahf
lret
scas
sbb
stc
rcrb
filds
stc
rcrl
pop
jge
scas
mov
cmp
jnp
clc
fmull
bound
jecxz
popa
inc
stos
mov
sahf
mov
and
mov
int3
adc
lds
fwait
loopne
movsb
loope
add
pop
jmp
mov
lahf
cmp
fisubs
test
stos
jg
not
push
iret
mov
pop
scas
mov
in
out
iret
sub
fwait
pop
lcall
lea
inc
arpl
push
lcall
inc
hlt
int
inc
jmp
dec
adc
std
xorl
mov
xchg
imul
test
push
insb
inc
cmp
xchg
sbb
cwtl
pop
rolb
mov
push
je
out
idivb
jbe
call
iret
bound
jno
add
pop
sbb
mov
cmp
popf
mov
xor
push
stos
sub
loope
adc
fldenv
xlat
jo
push
inc
mov
out
hlt
xor
push
data16
mov
cld
stos
jmp
cmpsb
pushf
movsl
jne
pop
pop
pushf
or
mov
inc
cmp
js
or
andb
cltd
dec
push
add
ret
iret
fwait
in
inc
jge
addr16
lods
popa
imul
out
cld
jo
popf
jne
out
push
and
dec
addl
fcoms
shl
fistpll
inc
pushf
jbe
shl
lock
in
cmp
cwtl
aad
jp
sbb
in
cmp
cmp
popf
lret
sbb
jne
mov
pop
push
lret
stos
jne
std
out
mov
push
inc
lcall
mov
dec
jle
mov
xchg
clc
dec
fs
mov
pop
mov
sub
mov
pusha
inc
inc
lret
movsl
in
push
xlat
pop
push
or
sub
pop
push
adc
pop
test
sub
insl
inc
aam
jp
mov
and
jmp
fnstenv
push
cmp
mov
and
pop
nop
inc
push
ss
jno
mov
fisubl
and
pop
cmpsb
or
scas
sub
popa
mov
add
scas
les
in
add
xorl
fcmovnu
lods
cli
movsl
popf
sbb
aad
lcall
or
and
andb
push
enter
lock
fwait
dec
cld
stc
dec
mov
in
push
sarl
lods
pop
or
inc
jmp
out
cmpsl
jns
sbb
fdiv
outsb
popf
jg
gs
movsl
ret
jle
int
clc
jns
enter
lret
nop
inc
inc
and
sub
jge
andl
cmpsl
cmp
xchg
pop
push
mov
lea
shlb
cmpb
cwtl
fnstenv
mov
and
icebp
adc
fbstp
xorl
aas
repz
pop
sbb
ljmp
ja
subb
aam
push
and
pop
jae
test
pop
daa
out
cmpsl
jg
push
int3
jmp
jmp
inc
pop
cwtl
mov
fwait
pop
xchg
jge
call
mov
pop
mov
aam
fisubrs
lret
jecxz
pusha
pop
mov
push
ds
or
addb
out
stos
mov
adcb
stos
cli
ret
push
test
adc
and
sub
imul
dec
xor
mov
ret
mov
pop
bound
ror
ret
mov
jp
pop
out
call
sub
loope
dec
jns
push
lret
daa
mov
imul
cli
sbb
push
sub
pop
cwtl
js
stc
lahf
mov
iret
nop
loopne
bound
out
rcrb
and
xor
mov
pusha
fisttpl
and
mov
xchg
out
adc
cmp
push
repz
fs
enter
or
mov
cmpsl
shrb
jge
enter
mov
aas
cmp
dec
lahf
push
push
rcrb
fisttps
dec
nop
je
mov
jp
adc
push
rolb
addb
int
mov
lcall
clc
mov
out
sub
push
dec
insb
out
xchg
mov
push
sbb
ror
and
gs
stos
push
push
xchg
repz
sub
pop
jno
lea
dec
je
dec
movsl
scas
maskmovq
notl
outsb
repnz
aam
sub
clc
cmp
scas
sbb
sub
outsb
add
dec
cmp
cmpsl
data16
clc
stc
xchg
leave
clc
and
jg
sub
jp
out
dec
and
mov
es
sbb
and
popa
lcall
and
jbe
int3
sbb
je
lcall
dec
mov
push
imul
dec
out
dec
imulb
xor
jnp
decb
cmp
mov
xor
aad
mov
je
out
jmp
pop
push
imul
decb
and
jns
adc
xor
shlb
loope
and
pop
fildll
ret
jle
lahf
in
xor
das
add
dec
out
sbb
sub
add
jmp
pusha
imul
jmp
sub
cmpb
daa
movsl
xor
cld
inc
push
fs
cmp
jne
push
push
jo
push
mov
cli
adc
insb
sub
sbb
jg
lock
push
mov
mov
test
inc
nop
cmp
insb
ret
pop
outsl
lds
dec
push
push
pop
roll
mov
and
fs
xor
icebp
test
adc
push
xor
sub
xchg
push
daa
icebp
sub
add
or
iret
sbb
insl
xchg
pop
push
mov
cmp
rol
sub
fcomps
add
mov
pop
push
mov
jno
scas
sub
mov
mov
pop
aaa
iret
pminub
test
sbb
and
push
mov
iret
in
jnp
xor
ja
xor
outsb
test
outsl
cli
sub
xor
mov
lods
xor
or
aam
push
xchg
sbbb
popf
mov
xchg
adc
xor
stos
push
xchg
test
cli
rcll
add
jb
xchg
add
int
pop
clc
call
aaa
xchg
mov
loop
adc
adc
fs
xchg
inc
cmpb
aas
loopne
inc
aad
xor
sahf
repz
add
lods
jnp
flds
jmp
and
mov
or
jge
inc
std
mov
dec
es
sub
es
hlt
lea
jg
cmc
and
pop
ja
push
fnsave
inc
xor
iret
adc
inc
xchg
xor
call
xlat
dec
das
into
aam
push
rolb
sbb
pop
mov
ret
and
fistps
in
xor
gs
xor
or
repz
xchg
mov
in
inc
decl
add
cmp
aad
les
scas
pop
daa
test
loopne
mov
fidivl
or
int
cmpsb
push
and
into
test
or
jns
outsb
push
push
lods
decb
jae
ret
cmp
loop
in
xor
sub
cmp
sub
mov
shrl
jns
cmp
jge
mov
pop
scas
insl
and
cmp
fildl
sub
mov
pop
dec
hlt
mov
push
pop
push
pop
jns
ret
outsl
test
sahf
fisttpll
nop
dec
adc
pop
pusha
mov
dec
jge
cwtl
pop
mov
sub
add
mov
repz
int
mov
xor
pop
inc
out
adc
jns
scas
inc
xchg
xchg
ds
mov
lods
push
aas
inc
aas
ja
loop
movsb
or
cmc
jns
stos
rolb
push
mov
jl
push
jl
adc
mov
cmpsb
cmp
std
or
and
and
mov
xchg
aas
xorl
orl
pop
scas
jge
xchg
jnp
cwtl
pop
push
repz
inc
scas
add
stos
fs
cmc
fwait
loop
mov
or
sbbb
shrl
int
aad
xchg
sbb
jnp
or
sahf
pop
mov
rol
xchg
or
push
sbb
jmp
rol
cwtl
sbb
inc
inc
cltd
add
xor
and
fwait
shrl
popf
mov
xchg
jge
cmp
and
lods
insb
mov
push
mov
aaa
ljmp
mov
adc
orb
sub
int
sub
jo
mov
cltd
jmp
push
test
pop
mov
fisubrs
shl
stos
sbb
jl
add
inc
pop
pop
sbb
xor
insb
xor
mov
push
jbe
add
rcrb
mov
sbb
push
inc
inc
push
jecxz
hlt
and
mov
xor
int
cmp
imul
rcr
and
mov
mov
jae
arpl
mov
dec
outsb
sub
sbb
pop
dec
adc
out
sbb
daa
je
push
pop
rcr
cs
push
jp
mov
sbb
pand
mov
jmp
mov
jns
idivb
rclb
jmp
out
dec
cltd
aas
out
pop
les
loop
mov
push
pop
push
jp
push
sbb
mov
cltd
fcomps
test
and
shl
xor
adc
test
ljmp
sbb
jnp
xchg
sbb
ss
push
insl
jae
pop
mov
andl
in
inc
and
lret
inc
jno
sbb
jle
out
stos
insb
je
mov
sub
or
mov
mov
fimuls
jnp
cmp
fisubrs
jp
jge
in
int3
or
sahf
fdivs
orl
mov
cwtl
dec
xchg
rcr
add
or
jecxz
dec
mov
sub
adc
and
xchg
loopne
mov
mov
test
jecxz
mov
or
xor
scas
sub
push
jle
cmp
add
sub
negb
xor
mov
push
pop
pop
and
int
sub
addr16
scas
orl
mov
int
cmpsl
xor
xchg
xchg
lds
mov
jmp
or
push
pushf
idivb
jle
data16
mov
jmp
testb
outsb
mov
mov
push
xor
push
in
adc
pop
xor
in
jge
dec
add
shll
test
leave
adc
mov
jg
arpl
lods
jge
dec
dec
mov
push
cmp
outsl
test
decb
or
mov
mov
xor
pop
jmp
popa
scas
je
pusha
cltd
stc
xor
rorl
aam
mov
sbb
jmp
mov
cwtl
xchg
sub
adc
cmp
push
subb
repz
cmpsl
fwait
and
loop
sub
repnz
lret
mov
sbb
movsb
mov
sbb
mov
mov
xor
idivb
gs
les
pop
mov
pop
and
jns
jmp
add
push
or
inc
movsl
stc
incl
adc
decb
js
xor
and
or
jae
add
push
jle
xchg
xor
popa
mov
fadds
pop
int3
dec
or
ret
popa
call
fmull
insb
push
add
iret
popa
dec
mov
stos
and
and
outsb
arpl
bnd
cli
jg
enter
jno
jbe
sahf
dec
shrb
fs
mov
xor
sub
repz
mov
lock
jmp
ljmp
je
fidivs
jns
std
mov
out
insl
xor
shlb
inc
je
mov
add
int
test
subl
shrl
pop
mov
clc
ret
gs
push
jge
mov
mov
pop
idivb
jecxz
sbb
pusha
xchg
jbe
test
loope
and
in
mov
pop
inc
and
popf
push
or
pop
mov
loopne
xor
dec
pusha
jmp
jo
lret
mov
sub
mov
pop
mov
stc
int
ds
mov
out
push
lods
dec
icebp
add
ja
jno
jo
in
push
pushf
xor
rorb
xchg
test
and
add
mov
movsb
inc
adc
jl
aas
and
xchg
aas
or
pop
pop
add
adcb
xchg
jg
adc
sti
sub
pushf
or
xor
and
mov
loope
leave
enter
push
adc
lahf
setg
movl
aas
negl
lods
and
lcall
push
mov
je
clc
mov
cvttps2pi
in
add
mov
sarl
ret
pop
or
adcl
jg
and
stos
mov
stc
mov
es
les
xchg
or
and
inc
scas
cmp
pop
add
fidivrl
xchg
gs
lahf
outsb
mov
inc
fsubr
js
sbb
inc
or
add
xchg
jno
lds
jp
jle
mov
adc
xor
sbb
std
adc
imulb
test
arpl
and
fldenv
in
leave
in
xor
mov
sbb
testb
out
lods
cli
sti
push
lret
jae
and
mov
fmul
xor
fdivrl
xor
mov
fs
mov
ja
test
fsub
or
je
mov
xor
and
mov
in
data16
in
fistl
xor
inc
jle
fucomi
leave
fildll
dec
fnstenv
jb
push
mov
sbb
pushf
ret
cmp
movsl
push
sbb
mov
push
adc
aad
sub
test
les
jg
sbb
hlt
daa
popa
sbb
push
add
jecxz
pop
out
sub
lahf
lret
inc
cmp
xor
dec
add
xchg
mov
outsb
add
in
jns
mov
mov
lahf
adc
icebp
dec
stos
push
inc
mov
int3
pop
sbb
push
jge
push
pop
notl
icebp
aas
jge
test
xorb
lea
cmp
xchg
ret
fsubrl
cmc
dec
sbb
aad
add
mov
xchg
fstps
mov
test
mov
lahf
mov
movsb
dec
cmp
shlb
imul
dec
and
enter
pop
stos
adc
stos
jnp
mov
jmp
xchg
xor
dec
dec
mov
xor
movsb
fsubrs
out
cmp
dec
xor
shll
sbb
sbbl
xchg
or
or
shlb
xor
adc
sbb
aas
add
mov
jecxz
pop
aas
movsb
pop
and
pop
out
sbb
fwait
inc
jg
xor
loopne
fistpl
rcrb
call
sarb
cmc
jb
mov
push
jmp
stos
mov
int
mov
shlb
jge
pushf
push
dec
inc
sbb
add
outsb
cmp
mov
lcall
scas
sub
inc
btr
push
push
mov
fildll
in
aam
loop
add
pop
mov
in
shl
loope
mov
dec
mov
pop
out
add
xor
dec
out
repnz
test
sbb
xchg
pop
jge
xchg
and
inc
shll
out
das
cmp
pusha
cmp
mov
aas
push
or
inc
mov
or
lods
cmc
mov
inc
scas
xorb
cmp
add
xchg
inc
stc
push
pop
push
cmp
cmp
gs
inc
push
in
faddp
adc
cmc
lock
popf
bnd
jno
add
sahf
loope
or
loope
lret
mov
jbe
xor
dec
cld
pop
sbb
dec
addl
scas
test
aam
cwtl
cmp
std
cld
pop
cmp
mov
fnstsw
insb
sbb
dec
mov
mov
cmpsb
bound
push
aad
pop
mov
adc
sbb
adc
ds
outsb
stc
aad
jecxz
push
cmpb
cmp
lret
push
dec
bound
sahf
je
and
cmp
pop
xor
sbb
push
xor
es
pop
jns
or
add
add
pop
ljmp
popf
out
fidivrs
push
stos
out
cmp
sbb
icebp
hlt
fstps
or
push
pushf
add
sbb
in
stc
push
dec
pop
lcall
popa
movsl
pop
jle
jne
jle
xchg
data16
call
sbb
mov
loop
inc
stc
mov
mov
ret
gs
mov
push
jle
int3
clc
dec
lahf
or
inc
gs
push
adc
enter
jne
cmpsl
xchg
jne
fwait
jbe
or
lock
ucomiss
push
ss
out
sub
test
xchg
test
inc
ficoml
pop
adc
stos
pop
or
hlt
sbb
and
iret
loopne
add
pushf
dec
arpl
in
fs
ljmp
rolb
test
daa
movsl
xor
mov
jp
nop
pop
and
xor
dec
fstpl
mov
es
sahf
bound
fst
nop
mov
mov
sub
mov
mov
mov
fnop
stos
inc
xlat
pop
and
shlb
cmp
mov
scas
dec
jmp
lea
jp
repnz
test
inc
sti
jmp
fisubrl
into
xchg
addr16
lods
mov
stos
cmpsl
bndstx
imul
jno
or
push
in
sub
daa
cld
ljmp
inc
xor
add
fwait
rol
cmp
pand
push
outsb
adc
xlat
or
jns
in
jg
xchg
imul
repz
push
scas
adcl
mov
rorl
pushf
mov
cld
icebp
mov
cmp
mov
loopne
into
mov
lds
scas
jo
ds
adc
dec
out
test
movsl
lods
inc
xor
cmc
cmp
mov
mov
popa
or
int
and
pop
outsb
mov
mov
pusha
in
mov
sub
inc
ja
ljmp
test
mov
pop
xor
addr16
sar
mov
std
xchg
mov
push
mov
mov
inc
mov
and
xchg
sub
fadd
dec
pop
inc
insb
scas
iret
adc
sti
rcll
mov
push
jns
push
xchg
mov
mov
add
or
xchg
clc
out
sbb
jnp
jne
jbe
dec
adc
dec
repz
lahf
pop
sub
lret
pop
push
lcall
mov
jg
dec
fwait
aaa
lret
lret
pop
xor
push
xchg
jp
lret
test
push
cltd
inc
out
mov
inc
and
pop
into
mov
fidivrl
mov
ret
mov
loope
jnp
mov
mov
test
cmp
popl
cli
push
aad
int3
stc
imul
lahf
cmc
jb
ss
sub
js
push
pop
mov
mov
adc
or
and
and
shrb
mov
push
cld
in
mov
jae
mov
jae
sub
mov
in
fsubr
outsl
mov
xchg
dec
xor
mov
test
adc
pop
mov
roll
fwait
mov
mov
push
les
cltd
xor
test
or
cmp
or
in
js
push
cli
popf
push
pop
xor
push
jb
mov
mov
or
ljmp
mov
push
out
cli
out
or
in
mov
inc
pop
imul
pop
flds
test
pop
pop
dec
xchg
fs
xor
mov
cmc
sahf
jp
sbbb
adc
clc
cs
xchg
bound
mov
ljmp
add
inc
lret
mov
cli
xor
in
icebp
mov
cmpl
cmpsb
ds
sbb
xchg
loop
arpl
mov
aad
gs
mov
mov
xchg
add
xchg
lret
or
fcompl
pop
hlt
push
fs
or
mov
leave
xchg
sti
pushf
sub
pop
xor
dec
push
lods
mov
cli
inc
lock
out
aad
jl
pop
mov
jge
fadds
sbbb
xor
aad
lret
out
lret
stos
jle
ss
lcall
push
and
push
xor
and
pop
cmp
cltd
in
mov
cld
sbb
bound
xor
popf
flds
push
filds
jnp
mov
cs
push
clc
je
cmpsb
scas
adc
or
dec
sub
movsb
aam
mov
mov
mov
or
jp
xchg
cmp
jmp
pop
pop
ss
fidivrl
cltd
mov
dec
push
repz
mov
jns
insb
push
xchg
shlb
lret
icebp
orl
lock
pop
outsl
rorb
adc
mov
mov
mov
inc
adc
inc
sbb
jmp
xor
inc
pop
cmc
jl
adc
dec
xchg
inc
jno
dec
fmul
xchg
lcall
xor
mov
dec
je
mov
jmp
adc
stc
shlb
pop
fyl2x
dec
movb
mov
fnstcw
rolb
adc
addb
sbb
iret
xor
pop
icebp
test
int3
jl
xchg
test
lock
shll
add
cmp
lcall
in
adc
lods
jge
int3
pop
jle
mov
mov
xchg
pop
xorb
inc
data16
add
pushf
pop
lods
xchg
je
addb
sub
push
jg
int
xchg
mov
rol
sahf
clc
orl
mov
je
pop
test
cmp
xor
out
xor
popa
jmp
enter
mov
imul
mov
ret
add
les
mulb
push
and
pop
mov
je
cltd
mov
ret
mov
nop
sub
popa
test
and
lahf
shr
loope
cmp
adc
and
popa
lock
mov
jl
push
mov
or
sub
mov
call
inc
fdivl
mov
iret
ljmp
dec
inc
mov
cltd
testb
movsb
mov
into
sbb
push
test
imul
subb
stos
aam
in
iret
push
nop
sbb
push
hlt
idivl
cmp
das
jge
jp
pop
lds
arpl
sbb
lret
sbb
ja
lret
dec
jo
xchg
std
cmc
mov
subl
add
mov
into
xor
insb
xor
subb
and
mov
cmp
testl
into
ds
add
dec
shl
cltd
test
adc
lahf
xchg
mov
pop
pop
aam
test
jnp
adc
lods
mov
mov
mov
sub
inc
cwtl
push
and
pop
xor
xlat
sbb
pop
jbe
adc
std
int3
sbb
jg
ja
cmc
push
sahf
movsl
out
add
add
jbe
jg
sahf
out
pop
pop
test
lret
jne
jle
mov
sbb
faddl
dec
test
pop
push
enter
test
test
popa
cmp
or
outsb
test
jle
or
popa
out
movsl
ret
popa
dec
and
mov
in
mov
hlt
add
pushf
ljmp
jg
fisubl
sbb
adc
out
hlt
fcomps
jbe
jg
sub
fcom
in
bound
js
shll
cmc
fsubrp
inc
pop
jae
cli
faddl
dec
pop
mull
shlb
jmp
xchg
push
xchg
inc
xchg
cmp
sub
or
sbb
mov
cltd
fwait
jge
dec
mov
cli
lods
mov
push
jno
rclb
xchg
mov
or
mov
xchg
lods
test
loope
xor
or
arpl
loop
adc
xchg
std
xchg
leave
xor
fsubr
inc
ror
std
lea
les
decl
mov
insl
sbb
sbb
sub
sub
xchg
adc
mov
xlat
mov
mov
hlt
inc
call
les
aas
mov
lea
and
lods
scas
movsl
call
inc
sar
inc
sub
sbb
xor
out
je
cmp
mov
adc
rcll
cmp
fs
iret
fnstcw
push
enter
cmp
fildll
ljmp
push
mov
jecxz
fildll
pushf
fdivs
ret
sbb
out
into
repnz
bound
es
jo
rcll
and
movsl
xchg
dec
in
cmc
stc
ss
add
dec
int
aam
imul
imul
addr16
xor
iret
jo
mov
fcmovu
iret
xchg
out
bound
dec
mov
jmp
stc
fadds
adc
in
jmp
mov
jnp
and
push
jecxz
xchg
push
or
mov
das
cltd
inc
xor
lea
mov
pusha
xor
cmc
mov
arpl
jae
adc
rcll
jae
xchg
push
pusha
cmpsl
or
ds
pop
fldenv
mov
and
mov
push
das
fnstenv
test
inc
or
ja
dec
inc
js
pop
add
adc
fsts
lahf
ret
jne
xchg
sti
call
xlat
pushf
into
mov
test
sahf
mov
ds
push
sub
gs
icebp
push
mov
lcall
call
push
addr16
call
dec
fistps
mov
jge
lock
popw
inc
mov
jo
cmp
stos
jbe
xlat
lock
pusha
push
rclb
jno
lea
rcrl
aaa
adc
pop
cmpsb
inc
push
mov
and
lcall
jae
inc
enter
dec
out
stos
inc
fldcw
test
stos
ficompl
icebp
lret
rclb
fmuls
out
xchg
pop
cmpl
adc
and
ss
nop
imul
popa
and
out
cld
rcrl
add
das
inc
xchg
scas
les
and
mov
dec
inc
test
sbb
das
push
shr
cwtl
nop
pop
sbb
adc
out
lret
xchg
xchg
fsubrl
bound
xchg
in
aas
inc
enter
push
xchg
imul
mov
adc
lahf
push
inc
movsb
mov
sub
stc
arpl
inc
imul
push
sarb
or
push
ja
pop
aaa
jae
clc
sbb
add
cmp
dec
adc
pop
scas
call
mov
das
in
pop
add
mov
aas
loop
jbe
aad
mov
js
mov
jl
addr16
movsl
pop
stc
aad
cmp
jae
mov
and
imul
mov
test
lret
pop
aaa
inc
lret
dec
mov
cld
outsb
jns
mov
and
mov
lcall
fistl
outsl
dec
xchg
xchg
fcompl
inc
push
jno
adc
in
mov
mov
je
or
fwait
shll
shll
out
sbbb
mov
cmc
xchg
sub
mov
ret
shrb
mov
jp
adc
xchg
or
adcl
arpl
or
lods
and
push
cmp
inc
xchg
mov
rorb
jo
mov
test
cli
lock
movnti
loop
cs
rorb
mov
fsub
xor
mov
lcall
nop
sbb
shrl
xchg
mov
icebp
jmp
shl
dec
dec
fwait
insb
out
pushf
push
test
xor
adc
daa
jae
in
aad
xor
dec
cmp
sub
fs
cmp
mov
pop
icebp
fisubl
xchg
cltd
jae
lret
dec
mov
rorl
movsl
inc
loope
jmp
push
mov
mov
dec
sbb
inc
cs
or
inc
std
pop
loop
ret
cmp
subb
aad
int
sti
cld
pop
dec
movsb
mov
or
lcall
pop
inc
push
insb
jle
bound
test
sti
inc
cld
popa
mov
jb
xchg
aam
fdiv
or
call
lahf
mov
std
jle
repz
iret
lcall
in
mov
aad
dec
sub
mov
dec
pop
xchg
jns
or
ret
test
ja
fidivs
insb
in
movb
lods
and
jle
mov
cmp
loope
lea
punpcklwd
cli
pop
icebp
lea
mov
sti
pushf
sbb
test
cmp
movsb
adc
mov
aaa
add
dec
in
add
arpl
lcall
xchg
and
or
inc
cwtl
test
enter
push
add
push
mov
scas
in
cmp
push
or
test
jno
sbb
mov
popf
mov
dec
mov
fldl
jne
popf
adcl
cwtl
mov
icebp
ja
out
xchg
ja
fcomps
dec
ret
dec
cmp
sub
or
test
imul
cmp
push
mov
out
xor
lcall
imul
dec
adc
mov
shrb
pop
repz
loope
mov
mov
imul
adc
push
fucom
add
jg
push
mov
fildll
outsl
sub
arpl
out
lret
jg
sub
jle
cmp
pop
cmp
dec
xchg
mov
das
jp
data16
push
xor
inc
inc
movsl
jnp
dec
adc
sub
jne
vpaddb
pop
xchg
pop
lea
scas
data16
test
imul
int
adc
pop
test
lea
cmpsl
inc
lea
mov
sub
push
pop
arpl
cmp
repnz
cwtl
mov
inc
mov
inc
dec
push
subb
fidivrl
jmp
mov
jns
xor
ds
sbb
push
cmpsb
sbb
xor
arpl
lea
jns,pt
inc
jo
sbb
inc
inc
mov
cli
sub
xchg
push
fwait
out
sub
pop
lock
int3
or
mov
mov
or
jae
test
xor
mov
sarl
in
int3
mov
popf
nop
subb
lock
xor
in
popa
lods
sub
adc
movsb
jmp
pop
repnz
jp
inc
into
out
jle
sub
add
outsb
sti
mov
ret
jge
or
pop
and
jl
inc
clc
jns
jnp
std
in
push
test
rcl
shr
pusha
xchg
and
dec
out
mov
mov
xor
scas
in
xchg
xor
or
fcmovne
adcb
adc
pop
mov
xor
dec
sub
mov
mov
enter
leave
or
and
mov
jae
and
pop
in
insb
jl
out
fnstcw
push
jp
pop
and
cmpsb
or
sbb
fsubs
test
hlt
mov
cltd
mov
fidivl
das
insl
push
xor
push
lock
add
in
xchg
pop
imul
jl
divl
push
nop
scas
aaa
popa
sti
sbb
fiaddl
movsb
movsb
aaa
out
leave
cli
dec
cmovl
pop
pop
enter
mov
push
rorb
xor
out
dec
xor
fwait
and
int
lea
std
cmp
sub
data16
adc
sahf
push
aad
fwait
out
push
sub
push
scas
cmpsl
test
sbb
cmp
push
jg
in
mov
mov
subb
and
inc
dec
push
cmp
and
and
andl
clc
dec
sub
xchg
add
pop
fldl
jmp
aad
and
mov
enter
dec
scas
inc
add
outsb
ja
movsl
bound
ljmp
inc
adc
sbb
or
scas
xchg
fadd
xchg
sbb
mov
jb
mov
cmp
mov
out
jmp
cli
insl
paddusb
sub
js
sub
sbb
mov
dec
lds
push
jp
push
and
pop
outsl
mov
inc
and
sub
push
dec
jno
lods
pop
pop
sub
fs
adc
sbb
cmp
push
or
stos
sub
lds
or
cli
xchg
ss
enter
gs
out
dec
out
scas
imul
loope
add
imul
dec
sti
jecxz
shrb
pop
and
stos
push
jl
xor
lods
out
ss
mov
repnz
jo
test
xchg
adc
xor
push
pop
pop
je
xchg
mov
push
mov
cmp
test
mov
dec
nop
mov
lea
xor
inc
push
cmp
repz
fnstcw
sub
mov
sar
pop
and
mov
popf
jb
mov
movsb
nop
and
aad
outsl
sbbb
or
fwait
push
imul
loope
jge
jmp
jb
insl
sub
xchg
mov
cmp
mov
lea
lret
les
fnsave
daa
movsl
pop
js
mov
push
sbb
add
xchg
sub
jl
sbb
testb
inc
jmp
les
sub
movsl
sahf
pop
sub
inc
cmp
sub
ja
daa
mov
in
inc
daa
sbb
mov
push
push
cld
repnz
mov
das
inc
mov
or
xlat
mov
xchg
ja
push
jg
in
and
mov
mov
dec
inc
loope
xchg
pop
pusha
or
mov
push
dec
mov
pusha
aad
sub
xlat
xor
mov
jl
sub
inc
pop
pop
push
lahf
mov
bound
es
rclb
insl
cmp
add
pop
xchg
sbb
rorl
lcall
out
subl
mov
int3
insb
jmp
clc
xor
adcl
xchg
js
aas
xor
insb
movsl
cmpsl
xor
adc
pop
rcrb
pop
pop
jnp
mov
adc
lods
outsl
or
jl
xchg
xchg
in
jg
inc
shlb
mov
nop
xlat
pusha
test
cs
push
test
jae
xchg
sub
inc
movl
sub
out
xchg
cmp
and
frstor
jmp
or
stos
jecxz
jb
dec
pop
sub
xor
adc
fisttps
setb
mov
fiadds
push
sbb
adc
xchg
lret
mov
mov
sub
sbb
ds
outsb
out
fbstp
test
mov
test
lret
inc
or
ss
jbe
and
jae
push
aas
aad
rclb
std
push
add
mov
jge
jl
incb
jecxz
incl
cmp
cmp
xor
jmp
push
mov
add
and
ja,pn
lcall
int3
ss
or
fimull
sub
sub
pusha
dec
leave
pop
sub
test
inc
out
cmpsb
and
mov
ds
pusha
std
frstor
mov
sub
xorl
sbb
testb
adc
push
clc
mov
aaa
jmp
in
rclb
sti
sub
mov
iret
lods
inc
pusha
test
sub
addr16
mov
pop
sti
mov
adc
ja
push
ss
lahf
and
mov
pop
cmp
push
jb
mov
std
xor
fcomps
push
out
lock
pop
xor
enter
hlt
scas
adc
mov
stos
pop
cs
dec
sub
leave
fmuls
sub
mov
jge
mov
inc
lock
xchg
ds
enter
xor
pop
add
test
xor
dec
shrb
and
cmc
cwtl
ljmp
xchg
push
sub
inc
fs
mov
xor
ja
jp
and
mov
popf
loopne
inc
cld
js
push
pop
nop
cmp
dec
or
pop
in
mov
xchg
jne
fwait
xchg
sti
repnz
add
pop
pop
xchg
xor
push
push
cmp
mov
add
jecxz
sarb
nop
dec
xor
inc
das
push
or
inc
mov
out
xchg
dec
and
inc
lret
add
cld
inc
in
add
roll
aam
lock
hlt
fsubrs
push
iret
add
mov
lcall
jl
xchg
lods
pusha
push
push
cmc
inc
and
in
je
xlat
outsl
inc
pop
mov
jge
jne
dec
xor
add
pusha
es
repz
jmp
xor
sbb
mov
xor
jp
adc
cmp
rcrb
sti
push
add
mov
jge
dec
mov
rolb
inc
movsb
adc
jge
jae
shrb
mov
ds
test
cmpsb
mov
adc
pop
xlat
lret
xor
test
das
shl
xchg
mov
je
inc
stos
stos
dec
cmpsl
xlat
sbb
lahf
add
jae
int3
jmp
fwait
and
xor
jmp
or
gs
or
andb
or
mov
cmp
mov
adc
push
push
and
mov
push
aad
movl
in
add
dec
cmp
movb
lahf
cmpsl
insb
scas
cmp
cmpsl
fs
aas
pop
jmp
std
aas
xor
lock
ja
pop
daa
sub
or
addr16
sub
pop
in
add
popf
addl
dec
xor
lahf
mov
daa
outsl
movsl
es
push
mov
and
jge
fists
adc
push
rsm
aad
mov
mov
in
inc
ljmp
iret
mov
repz
cmpsl
rcr
add
sbb
fistpll
in
les
push
cmpsb
xchg
cli
ror
inc
jg
es
mov
test
cmp
push
mov
and
rorl
aaa
mov
mov
jge
jbe
xor
test
out
jno
insl
out
dec
mov
push
scas
adc
cmp
xchg
or
sbb
sub
sbb
imull
jg
xor
test
push
das
daa
pop
je
inc
or
dec
mov
mov
mov
icebp
push
mov
xchg
jp
bound
leave
out
addr16
inc
fmul
cmp
faddp
xchg
push
mov
sub
cmp
xchg
mov
test
dec
jle
mov
mov
jg
out
sbb
mov
xchg
sbb
sbbl
push
mov
xor
jno
mov
in
jmp
or
jnp
jp
std
mov
fwait
bnd
test
xchg
popf
insb
and
ljmp
mov
dec
ja
cmp
lahf
aam
repnz
sub
push
cld
mov
icebp
repnz
and
xlat
push
lods
push
xorl
sbb
imul
les
jne
fnstsw
pop
inc
scas
repz
jbe
cmp
or
inc
or
push
or
addr16
outsb
imul
and
xchg
inc
add
int3
or
jno
shrl
sarl
xchg
cmp
pop
mov
lcall
pop
test
dec
jp
mov
xchg
or
mov
mov
xchg
setns
inc
imul
cmp
sbb
sbb
ljmp
xor
mov
fistps
push
addl
push
xchg
lahf
xchg
adc
dec
add
xchg
or
sbb
nop
movb
push
xor
pop
mov
sbb
repz
add
mov
and
dec
pop
aam
xchg
jp
out
cmp
pushf
pop
or
xor
loope
mov
and
jg
repz
test
shl
add
mov
rcll
cmp
scas
shll
xor
and
sub
stos
mov
push
push
test
xor
outsb
dec
push
mov
cmc
in
xor
and
in
and
jne
ds
xor
lret
imul
mov
jecxz
mov
in
push
enter
pop
lea
cmp
mov
not
lods
push
adc
mov
xor
sbb
sbb
or
pop
xchg
push
jnp
mov
pusha
mov
je
xor
cmpsb
pop
cwtl
sbb
pop
test
xchg
jb
enter
cwtl
pop
xchg
outsl
in
push
mov
pop
ret
js
lret
push
ds
std
sub
inc
fmull
inc
jle
mov
mov
jnp
add
pop
pop
push
insl
lcall
ret
lret
shl
add
popf
jecxz
std
test
and
xchg
scas
movsl
jo
sbb
in
push
jl
adc
jecxz
addl
loopne
sbb
pop
mov
xchg
pop
mov
popa
push
enter
pusha
into
cld
cmp
movsl
xorb
mov
inc
test
cld
mov
mov
dec
ret
sub
xor
add
mov
sbb
dec
mov
mov
stc
test
cmp
inc
fsub
adcl
adc
cmc
xchg
dec
dec
mov
testb
scas
xchg
dec
push
rcrl
adc
pop
and
mov
cmp
sbb
xlat
xchg
mov
jp
lcall
js
sbb
out
push
mov
push
add
popa
or
mov
loope
or
mov
mov
lods
cmp
push
dec
pop
add
dec
mov
nop
push
xchg
xchg
push
dec
dec
pop
mov
cmpsl
insl
imul
mul
sbb
nop
js
enter
shll
adc
xor
mov
pop
in
mov
jl
sub
xor
fs
mov
mov
aas
pop
addr16
pop
lds
lret
movsl
icebp
ljmp
cmpsl
sar
jle
xchg
andl
xchg
dec
in
inc
fdivrs
pop
pop
fxsave
hlt
arpl
icebp
ljmp
ljmp
mov
imul
xchg
adc
ljmp
loopne
mov
or
lods
jne
gs
xchg
sbb
into
xchg
push
gs
or
loopne
cmp
loope
mov
mov
icebp
push
cmp
enter
jo
xchg
aad
mov
jecxz
outsl
movsl
push
push
dec
lock
sbb
cmp
jp
mov
sub
push
xor
fidivrl
popf
stc
ret
rcrl
ret
and
rcrl
dec
jbe
sbb
lcall
push
daa
pop
xchg
insb
mov
pop
adc
ljmp
xchg
jo
and
inc
and
xchg
int
jg
fstl
mov
jg
test
xchg
int3
rcrb
hlt
cmp
add
xchg
mov
mov
xchg
movsl
popa
fucom
mov
insb
test
clc
repnz
sbb
in
out
orb
lret
inc
lret
popa
inc
and
sbb
push
push
mov
add
pop
shll
idivl
xchg
sahf
insl
nop
rorb
push
ficompl
cli
push
xchg
jo
imul
pop
lods
add
cmp
and
pop
loop
into
in
test
roll
mov
jmp
cli
leave
jb
mov
cmp
pop
das
out
outsb
sahf
inc
or
inc
or
test
test
or
int
push
subl
enter
mov
cmpsb
xlat
ss
sub
inc
test
jecxz
lret
add
fistps
test
inc
stc
ret
push
ljmp
enter
xchg
dec
xor
add
std
sbb
hlt
mov
and
rorl
into
pop
jno
xchg
adc
filds
insb
in
ret
mov
cltd
inc
mov
daa
sbb
xchg
pop
out
mov
adc
mov
ret
bound
lret
pop
shlb
les
mov
jecxz
or
jg
push
imul
lds
mov
and
leave
mov
mov
cmp
call
lret
dec
je
frstpm(287
cli
js
lret
mov
jne
cmc
adc
pop
ret
rcll
das
ficompl
lock
jae
cmp
stos
fildl
mov
fists
pop
lods
aaa
and
push
cld
les
cltd
aam
lds
nop
or
xor
xchg
repnz
aam
push
push
aaa
inc
push
mov
lea
jge
cwtl
mov
test
dec
stos
pmulhw
fisttpll
add
cmp
jnp
ficoms
push
or
adcb
data16
pop
pop
xchg
xchg
rcl
outsl
sbb
mov
nop
dec
and
sbb
push
mov
push
push
or
xor
adc
or
fcoml
jo
xor
sub
outsl
xor
xchg
xor
scas
mov
jp
adc
stos
cltd
subl
mov
add
loope
sbb
in
jmp
lods
pop
enter
mov
or
mov
and
jb
lods
icebp
xchg
xor
loope
stc
pop
jle
mov
add
adc
fptan
shll
insl
fsubs
sbb
push
orl
dec
out
pop
daa
ret
and
mov
aaa
rcll
vucomisd
mov
cmpsl
hlt
mov
or
ss
jb
fnstsw
mov
inc
movsb
jecxz
add
jp
cvtps2pi
clc
in
xor
and
dec
dec
pop
incb
adc
dec
cmp
or
rolb
in
test
fs
mov
shll
loopne
arpl
mov
data16
pop
in
aad
test
insb
or
push
or
adc
shlb
pop
jmp
push
shrb
mov
mov
imul
and
push
ret
movsl
push
xor
imul
insl
enter
cltd
sbb
push
fmull
fnsave
shrl
loope
andl
hlt
sub
add
aaa
adc
push
sbb
popf
shlb
and
adc
test
xor
xchg
int
sbb
lods
fisttpl
enter
or
movsb
fs
push
xorl
imul
xlat
sub
scas
daa
repz
sub
dec
fisubrs
mov
stos
inc
mov
and
pop
aaa
cld
sahf
xor
add
stos
inc
push
aam
gs
mov
ret
mov
sub
and
xchg
mov
lahf
or
adc
mov
lret
pop
mov
in
jno
mov
sub
mov
sar
imul
or
js
add
leave
fcoml
repz
orb
jbe
pop
mov
xor
aas
ret
mov
sub
insl
das
in
mov
dec
mov
lods
frstor
and
and
or
inc
in
fwait
std
ret
push
push
iret
test
add
pop
arpl
aad
mov
notl
cmp
jle
xor
sub
fwait
xchg
jmp
mov
loopne
sub
cmp
orb
inc
push
pop
jns
mov
add
imul
mov
sarb
test
daa
shll
bound
sahf
xchg
imulb
inc
dec
inc
inc
test
psrld
loope
push
dec
sbb
xchg
insb
mov
dec
xchg
sbbl
or
or
xchg
addb
sbb
lret
xchg
adcb
cmp
lods
mov
shlb
push
pop
push
mov
mov
dec
xchg
int3
mov
pop
xor
xor
add
imul
mov
push
xor
out
shlb
iret
mov
jb
mov
adc
push
dec
jae
daa
mov
movsl
mov
jl
add
cli
sbb
lcall
add
push
shlb
mov
sub
mov
jg
outsb
push
addr16
xchg
xchg
mov
out
xlat
fwait
jo
cs
leave
nop
jl
xchg
std
mov
push
stos
sub
fists
push
xor
aad
sbb
mov
inc
xchg
inc
or
in
cmpl
xchg
mov
push
mov
sbb
mov
enter
dec
xor
icebp
inc
lea
jns
jp
xchg
xchg
add
int3
je
mov
inc
xorb
or
mov
fwait
test
adc
jb
xor
sub
dec
push
jge
sti
pushf
pop
mov
xor
xor
pushf
push
cmp
and
cwtl
jae
xchg
je
adc
and
aaa
adc
addr16
movsb
sub
push
pop
mov
sub
pushl
nop
scas
lcall
out
cld
xor
inc
push
lahf
pop
ds
add
scas
lahf
gs
lods
aas
outsb
xchg
mov
cmp
shlb
sub
inc
icebp
sub
sbb
mov
cld
imul
sbb
mov
xchg
data16
ss
xor
repnz
lcall
arpl
xlat
lds
repz
outsb
shlb
xchg
mov
and
add
sbb
pop
out
adcl
mov
les
adc
push
mov
push
aad
inc
pop
lock
mov
or
push
movsl
pop
push
jo
rcrl
iret
in
pop
fdivrl
bound
inc
js
pushl
xor
pop
sbb
sub
adc
int3
push
out
add
shll
inc
cmp
lcall
pop
out
sub
lret
icebp
pop
xor
inc
xchg
sub
nop
aaa
mov
inc
fdivl
in
add
adc
mov
into
testl
fs
les
aaa
pop
jns
sbb
out
sbb
rcrl
divb
lods
mov
stos
push
or
in
mov
jnp
push
add
fsubl
inc
adc
aas
xchg
inc
lods
push
cltd
sub
mov
shlb
shrl
mov
mov
mov
das
push
and
dec
add
das
and
ljmp
inc
xchg
fcmovnbe
push
dec
xchg
jmp
sti
ss
or
testl
aad
xor
gs
ss
sahf
outsl
or
enter
shrb
sbb
das
inc
push
xchg
mov
push
mov
bound
rorl
out
scas
into
push
out
cmp
xchg
push
cmpb
cmp
cld
inc
jo
push
and
loopne
pop
or
mov
mov
push
fistps
dec
dec
xchg
mov
mov
cli
or
test
pop
inc
inc
dec
leave
andl
xor
in
lcall
ja
cmpsb
xor
leave
xchg
int
mov
mov
inc
lock
gs
clc
loop
push
mov
imul
imul
mov
dec
xor
xlat
sti
push
mov
in
mov
xchg
ficomps
push
or
out
test
repnz
jge
inc
inc
insl
cmpsb
out
fisubs
xorb
adc
mov
das
test
movsl
pop
push
cltd
test
dec
bound
xchg
push
outsb
mov
pop
lods
xlat
sbb
in
push
pop
subl
imulb
addr16
pusha
shlb
outsl
pop
jl,pn
scas
hlt
sbb
dec
mov
lods
movsb
jne
in
in
cld
xchg
cmpl
pop
loope
outsb
jle
popa
mov
imul
mov
fists
stc
mov
inc
jmp
xchg
jnp
mov
jns
repnz
push
xor
fwait
mov
push
dec
mov
clc
cmc
cmc
sti
inc
arpl
inc
cld
mov
inc
or
add
add
lahf
lds
jo
mov
lea
out
push
in
dec
insl
ret
pop
lret
adc
aas
cmp
pusha
bound
and
clc
sub
arpl
arpl
mov
inc
and
test
jb
rclb
mov
gs
pushf
popf
xor
pusha
dec
negl
pop
and
inc
das
mov
dec
xlat
dec
sbb
int3
dec
ds
xor
scas
xchg
shlb
mov
sarl
out
push
ja
mov
adc
xor
ss
and
mov
outsl
je
mov
jae
je
mov
jns
dec
int3
xchg
mov
dec
pop
jo
les
popa
sbb
in
jg
cmpsb
jnp
jne
push
push
xor
lcall
push
loop
rclb
js
sbb
aam
or
jns
mov
out
and
push
clc
mov
cs
nop
clc
movb
cmpb
pop
stc
std
and
mov
out
xor
pushf
push
push
fs
insb
cmova
in
sbb
pop
sbb
jmp
lds
es
sub
sbb
push
jmp
mov
arpl
fidivl
and
in
mul
mov
dec
das
xchg
add
aas
fisubrl
bound
or
sarl
jnp
ficoms
pop
cmp
mov
int3
lock
mov
add
out
dec
and
shlb
inc
dec
ret
scas
fimull
pop
rcrl
mov
je
push
push
test
fisttps
inc
mov
insl
and
adc
addr16
add
out
imul
jbe
outsb
loope
outsl
gs
mov
xchg
das
or
jl
cmpsl
inc
mov
adc
movsb
cmp
ja
xchg
popa
pop
aas
xor
xor
lds
sub
popf
sbb
and
daa
inc
pop
mov
xchg
out
cmp
imul
lret
pop
jno
mov
data16
and
inc
loope
and
addr16
sti
int
pop
pop
mov
jecxz
cmp
or
cmp
sbb
fst
sbb
stc
std
rcr
adc
jl
repnz
mov
sarl
xchg
popa
mov
jne
sub
push
pop
outsb
pusha
jb
and
or
add
jae
in
mov
out
and
sti
inc
inc
dec
cmp
fnstcw
xchg
adc
add
out
inc
sbb
lods
pop
pop
ret
sbb
gs
cmc
cmp
adc
xchg
sbb
sti
xchg
pop
bound
xchg
push
sbbb
push
and
xchg
push
lret
test
adc
pop
adc
int3
iret
shr
cmp
pop
mov
jne
cs
jne
adc
stc
lods
and
cmp
mov
lret
mov
fwait
jns
aad
in
push
cwtl
cltd
sahf
adc
cmpsl
lahf
push
aaa
fdivrl
cmp
dec
stc
enter
mov
popf
insb
pop
mov
das
mov
ljmp
sub
mov
push
test
dec
out
rcrb
xchg
dec
jno
xchg
lock
sarb
negl
sbb
idiv
jp
dec
adc
orb
mov
pop
xorl
icebp
in
jnp
in
inc
jle
aam
cmp
adc
dec
mov
sub
adc
jp
cwtl
add
mov
in
data16
das
loopne
popf
pop
into
mov
mov
or
fcoms
ror
fimull
push
push
inc
dec
mov
rcrl
xchg
xchg
in
mov
loopne
loop
add
movsl
mov
fidivrl
jge
sub
pop
push
pop
aas
call
das
add
mov
mov
loope
imul
mov
mov
mov
pop
insb
inc
das
lcall
es
mov
repnz
stc
fcomi
ljmp
stos
sub
insb
cwtl
test
loop
pop
pop
stos
iret
lret
lret
fimull
repz
push
pop
jo
fwait
in
incb
test
cmp
xor
xor
std
test
sti
mov
outsb
pop
das
add
mov
out
lahf
ds
push
lret
adcl
mov
cmovle
cltd
icebp
insl
sarb
fstpl
or
cld
mov
sbb
lcall
sti
icebp
xlat
int
mov
jb
cmp
mov
mov
lock
jg
loopne
jmp
push
add
mov
push
push
pop
dec
ss
add
mov
xchg
aad
or
ja
arpl
xchg
shlb
xchg
data16
push
cltd
fiadds
or
sbb
inc
pusha
pusha
adc
xlat
iret
cs
rcrb
jo
cld
scas
iret
jmp
aam
pop
add
mov
js
xor
jns
sub
test
pop
clc
pop
lea
add
mov
out
mov
insb
hlt
loope
ljmp
repz
pop
loope
jb
out
lock
and
aam
aaa
pushw
outsl
addl
cmp
jge
aad
mov
and
sbb
in
inc
imul
xchg
push
aas
je
add
push
sar
adc
jmp
adc
das
mov
xchg
popa
repnz
mov
popf
mov
push
mov
and
shlb
sub
jb
test
insb
cmp
and
mov
and
imul
and
outsl
xchg
xchg
dec
mov
dec
fxtract
dec
add
xchg
and
sahf
je
lods
enter
adc
les
mov
sub
adc
jg
push
pushf
mov
addl
cmpsb
mov
les
sbb
xchg
sbb
adc
xor
push
cmp
jp
inc
outsb
and
loopne
add
fistl
dec
scas
lds
std
mov
mov
lods
les
mov
xor
sub
int3
jbe
push
clc
dec
cs
dec
aam
push
xor
iret
lahf
pop
mov
mov
arpl
mov
mov
dec
pop
loope
lcall
mov
pop
shll
ja
push
sarl
data16
out
sysexit
dec
add
or
jecxz
dec
cmpsl
orb
xor
jbe,pn
xor
mov
sub
scas
jg
sbb
dec
push
lock
push
mov
xor
dec
xchg
arpl
ds
jae
adc
mov
mov
roll
cmc
es
jae
pop
stos
lcall
enter
sub
add
bndstx
repnz
adcl
jns
dec
inc
lods
xchg
sahf
xor
lcall
xlat
arpl
rcl
aad
aad
jge
fldcw
rcr
imull
push
dec
pop
stos
clc
push
jo
cs
jp
shll
mov
fsubr
cmpb
insb
jne
les
push
adc
jnp
out
sarb
jo
mov
pop
int
shlb
shl
pop
mov
shlb
jge
roll
pop
cltd
scas
sub
popa
insb
shlb
push
fcoms
mov
ja
jb
mov
icebp
and
out
mov
mov
ds
pushf
inc
arpl
sub
mov
imul
fnstenv
pop
or
sbb
or
mov
xor
dec
shll
addl
dec
int3
sbb
fistl
add
xor
pop
mov
arpl
mov
div
psrad
hlt
jle
fcompl
sub
jle
lcall
fidivl
push
mov
pop
in
inc
sub
or
stos
rcrl
sbb
add
mov
pop
and
les
sub
sub
hlt
rolb
xchg
add
add
lods
mov
imul
test
stos
push
aas
in
out
outsb
push
ss
imul
mov
jne
aam
lret
sub
or
add
mov
out
hlt
mov
in
icebp
mov
sbb
xor
cmp
adc
jnp
xor
dec
xor
in
cltd
inc
arpl
inc
lret
push
mov
out
pop
cwtl
shrl
and
jp
ds
and
pmaxub
jecxz
jmp
stc
push
int
adc
sbb
lcall
repz
lds
into
adc
mov
notb
jmp
pop
sarl
adc
sbb
into
pop
jg
insb
fcmovnbe
pop
movsl
add
les
fs
fwait
shlb
add
sbb
fdivrl
cmpsb
ja
jl
mov
xor
inc
cmp
push
lea
or
enter
das
pop
nop
cltd
insl
cltd
sar
daa
mov
imulb
mov
jp
add
inc
inc
inc
dec
stc
mov
lret
lea
xchg
daa
cmp
mov
jg
add
ret
mov
and
add
inc
inc
xchg
sub
inc
lods
addr16
les
pop
jmp
popf
add
popf
fdivrl
sub
xchg
pusha
sti
inc
psrlq
jbe
jle
push
sbb
cmp
aas
mov
lret
ja
mov
das
sbb
les
mov
xor
sahf
mov
jmp
pushf
mov
cmp
jl
and
movb
decl
mov
insb
insb
loopne
mov
pop
les
int3
jb
neg
cmp
jae
das
mov
jl
loopne
call
leave
and
jmp
scas
or
sbb
rol
loope
jbe
ret
mov
aad
inc
fcompl
ljmp
mov
mov
adc
add
mov
jae
popf
xor
clc
push
imul
push
lods
mov
xchg
fsubl
loop
dec
mov
in
xchg
push
ret
adc
or
sub
call
adc
xor
jle
imul
jl
mov
mov
add
ret
add
mov
push
jb
xor
mov
pop
jle
popf
mov
jl
jnp
push
cwtl
mov
adc
movsl
shll
sub
mov
cmc
jge
es
in
or
arpl
xchg
and
xorb
ret
push
sub
xor
pop
into
arpl
ret
rclb
hlt
out
and
xchg
out
std
jae
outsb
and
jne
call
std
mov
pop
jbe
cld
and
out
outsl
cmp
in
pop
in
gs
mov
or
stos
dec
mov
sub
inc
daa
loopne
ljmp
rclb
push
ljmp
ss
sarb
stc
mov
xor
mov
in
in
pop
mov
jl
or
ds
inc
pop
cmpsl
mov
mov
cld
fists
xchg
jnp
mov
pop
repz
in
out
xor
stc
cmp
pop
hlt
cmp
scas
jp
dec
in
dec
arpl
xor
cld
test
xor
add
pop
mov
mov
push
sbbl
sbb
and
or
pop
icebp
mov
call
push
loope
mov
push
xor
cmc
inc
cmp
push
dec
stos
cmpsl
lcall
in
decb
jmp
neg
mov
jbe
cwtl
xchg
xor
movsb
xlat
sub
sbb
test
or
inc
jnp
dec
mov
push
mov
push
xchg
ja
dec
mov
xor
call
faddp
lcall
enter
test
jge
push
mov
aas
fimuls
mov
pop
xor
adc
and
popa
mov
in
popa
xlat
pop
and
dec
pop
shl
pop
sbb
sbb
xlat
in
cmpsl
iret
in
sbb
loope
iret
xchg
or
cmpsb
insb
dec
jmp
imul
cmp
xchg
mov
pop
pusha
lahf
push
aam
call
jmp
add
lahf
lret
sbb
sarl
rcrl
imul
push
xchg
data16
xor
sbb
dec
jne
test
add
imul
mov
mov
cld
add
xchg
mov
rolb
cmc
call
or
loop
sbb
xchg
mov
mov
jns
fldenv
xor
out
xor
mov
aam
flds
mov
mov
jno
and
xchg
pop
push
repnz
mov
mov
dec
adc
jne
adc
shlb
adc
mov
vpsubsb
sbb
dec
ds
arpl
pop
loope
pop
and
aas
enter
fsubr
scas
and
ja
ds
cmp
js
push
adc
push
sarb
sub
repz
test
rcr
mov
testb
sti
outsl
mov
xor
mov
lcall
outsl
xchg
bound
and
cmp
and
push
out
mov
dec
xchg
cmp
in
xchg
andl
js
repnz
inc
fs
imul
test
cmpb
pop
mov
jae
sub
cltd
pushf
ljmp
lcall
data16
mov
inc
jmp
push
ds
push
jle
imull
jae
mov
addr16
addr16
mov
dec
mov
fsubrl
dec
ss
mov
cmpb
leave
dec
pushf
mov
outsl
adc
dec
mov
sbb
cmc
mov
les
fcoms
aas
or
outsl
in
out
jbe
xchg
in
adc
out
inc
out
jae
mov
push
dec
ret
mov
cmp
imul
and
fadd
mov
and
jo
jne
sarl
ja
pushf
filds
js
pop
ja
adc
pop
pop
pop
cld
jg
je
ja
icebp
push
es
aas
out
iret
sahf
jnp
adc
cltd
out
outsb
iret
dec
or
fisubl
test
dec
mov
dec
jnp
or
sub
jb
jae
sbb
ss
inc
dec
movsb
dec
mov
ljmp
inc
push
dec
imul
pop
ds
sub
jns
xchg
mov
pusha
in
adc
cli
dec
shld
jle
xor
add
leave
movsb
mov
pop
inc
cmc
les
sbb
xchg
nop
add
out
rcll
jecxz
cwtl
push
xor
hlt
xchg
cmp
out
adc
orl
sbb
pop
sub
or
add
inc
fistl
insb
xchg
xorb
pop
sbb
loope
insb
and
pushf
push
xchg
jmp
add
jns
and
sar
fs
fdivr
outsb
inc
aam
mov
icebp
and
xchg
and
sbb
out
int
sbb
addr16
lahf
mov
mov
leave
sbb
push
bound
bts
and
push
jg
jns
inc
scas
js
sbb
fs
lods
cltd
fmull
leave
sbb
test
sub
pop
jg
in
outsl
mov
aas
add
xchg
ror
lods
mov
pop
pop
roll
sub
and
sbb
push
and
bnd
les
dec
scas
iret
in
dec
xchg
jecxz
lret
ljmp
scas
in
fldt
jne
cmc
sahf
sbb
inc
xor
inc
js
xchg
dec
aas
push
jns
push
inc
out
mov
gs
sub
stc
add
lds
or
in
xor
sub
ds
addr16
in
int3
lods
aaa
xchg
mov
in
adc
in
mov
jg
cli
xchg
icebp
pusha
pop
frstor
cmp
sbb
mov
push
ret
stc
les
pop
or
and
mov
cmovg
push
push
xor
outsb
dec
sbb
push
int3
fnstenv
test
adc
mov
inc
in
iret
push
rorb
cmpl
out
scas
cmp
jae
xchg
das
cmp
ljmp
into
shr
and
mov
daa
push
mov
test
rcll
push
xchg
ds
subl
jo
sub
inc
adc
movsl
mov
inc
nop
mov
adc
out
stc
mov
dec
mov
cs
or
dec
or
outsb
fstps
push
roll
es
jmp
jne
sub
xchg
xchg
push
mov
gs
movsb
mov
lahf
sub
push
addr16
hlt
popa
clc
and
pusha
lret
dec
mov
bound
push
ds
jbe
jae
pop
inc
mov
iret
push
lods
xlat
daa
and
sub
push
test
cmp
or
lret
std
int
scas
lret
cmpsl
test
andl
pop
push
xchg
lods
xor
pop
xchg
dec
aad
rclb
jae
fldl
in
jl
ja
push
int
sbb
xor
push
jge
dec
mov
scas
cmp
es
xchg
sbb
scas
fsts
mov
mov
xor
jae
inc
adc
outsb
lcall
fidivl
add
xchg
out
scas
shll
bound
mov
pop
jp
shll
and
hlt
sub
pop
test
daa
xor
in
push
mov
enter
mov
mov
addb
loopne
inc
xchg
fstenv
negb
out
rclb
test
pushf
add
cmp
jae
arpl
xchg
out
xchg
arpl
fwait
arpl
jno
pop
xchg
mov
in
in
jns
out
fs
in
outsl
cmp
xor
inc
cmpb
mov
adc
mov
movsl
cmc
and
jbe
sbb
sub
mov
ja
push
int
dec
cmp
stc
sbb
arpl
sarl
mulb
sbb
bound
or
int3
and
stc
dec
mov
aam
data16
add
stos
cmp
andb
sahf
mov
call
int3
in
repz
adc
inc
push
pushl
pusha
mov
scas
ss
scas
mov
fisubs
push
inc
mov
jbe
ret
hlt
push
pushl
adc
mov
or
je
loope
pop
xchg
fsqrt
push
fstpl
std
adc
mov
mov
inc
int
add
movsl
psubsw
fnstsw
ljmp
xchg
or
xchg
mov
add
sahf
subl
jmp
jl
mov
pop
call
mov
xor
jb
mov
scas
xor
and
pushf
fmuls
add
lock
insl
pop
cld
xchg
aas
lcall
jl
mov
xor
fidivrs
sub
and
push
jle
dec
stos
movsb
mov
inc
and
in
mov
mov
pop
xchg
mov
mov
sub
shll
jbe
mov
scas
das
inc
sbbb
jno
ljmp
pop
dec
push
pop
mov
pop
xor
cmp
vpsrlw
add
and
pop
sub
pop
scas
cmc
into
and
mov
xchg
imul
push
xchg
pushf
rorb
jbe
xchg
imul
fwait
outsl
or
mov
push
sarb
jg
movl
mov
cmpsb
popf
mov
mov
into
mov
xlat
jge
test
xchg
mov
add
or
aam
add
pop
insb
add
cmc
xor
push
aam
adc
jbe
add
sub
inc
int3
popf
pop
adc
xchg
fisttpll
sti
scas
mov
mov
fcoml
mov
imul
adc
mov
or
pusha
xchg
pop
cli
inc
repnz
dec
in
cmpsl
ret
inc
mov
cs
push
xchg
add
xchg
inc
fdivr
cld
inc
loopne
adc
imul
xorb
fldcw
lods
orl
les
push
and
mov
inc
stos
addl
push
shll
jge
idivl
rorl
adc
test
hlt
enter
sbb
je
xchg
lcall
or
sbb
xchg
cmp
scas
das
movsb
notb
and
int
and
aad
test
pop
fcomp
mov
push
hlt
jp
pop
cwtl
addr16
inc
shld
in
out
or
in
test
xorb
pop
inc
adc
xor
mov
add
les
fs
mov
sbbl
popf
inc
sahf
mov
add
mov
pop
mov
mov
inc
sbbb
test
std
inc
or
dec
std
cmc
push
xchg
out
fcmovu
js
out
adc
sahf
aam
mov
mov
jmp
test
sub
add
aas
rorl
pusha
sbb
inc
out
cmp
fnstsw
repnz
cmpsl
das
cld
out
sahf
and
cmpl
es
or
mov
jbe
outsl
sub
sbb
xor
insl
in
icebp
ljmp
push
sahf
test
lahf
jne
inc
test
adc
imul
mov
pop
pop
fs
lret
dec
arpl
add
repz
pop
aad
cmpsb
lea
bound
cmc
stc
push
mov
xchg
sub
mov
iret
xchg
sbbb
bound
mov
mov
or
xorl
sub
sarb
push
adc
jp
out
pop
aas
cmpl
cmc
andb
or
cmp
cmpsb
adc
cltd
push
cmp
xchg
scas
outsl
scas
mov
insb
dec
mov
inc
adc
into
into
jl
xchg
sbb
js
xor
or
out
std
sbb
sbb
pusha
aam
pop
popf
lock
mov
xor
xchg
in
jmp
out
cmp
jecxz
push
add
faddl
sub
dec
push
pop
push
test
pop
cmp
jb
mov
mov
xchg
pop
add
call
outsl
adc
in
aad
fisttps
addb
lods
mov
and
adc
jmp
pushaw
add
das
pop
adc
loopne
in
sub
add
out
inc
sbb
adc
mov
or
sbb
inc
lahf
push
test
jle
test
pop
mov
test
mov
mov
loopne
mov
ficoms
mov
test
sbb
es
xchg
mov
mov
rolb
lock
mov
lds
add
fcmovb
or
rcll
adc
aas
arpl
insb
add
loop
dec
repz
xchg
adc
sarb
or
imul
pop
adc
adc
inc
push
jp
push
xchg
std
pop
out
jno
inc
imul
fildl
rcrl
adc
jle
jmp
cmp
mov
push
inc
mov
sbbb
sbb
mov
sub
sub
daa
fldenv
inc
cltd
dec
enter
add
rorl
imul
dec
loope
add
adc
imul
xchg
add
in
divl
dec
sbb
jl
hlt
sub
icebp
adc
xorb
lock
mov
loope
jl
xor
dec
cmc
inc
inc
addr16
or
insl
das
imul
movsl
inc
sub
int
jecxz
jmp
out
xor
das
leave
mov
mov
mov
dec
mov
out
dec
ljmp
in
pushf
or
loope
pop
and
inc
icebp
lds
in
jl
inc
aam
mov
sbb
mov
mov
xor
lret
xchg
cli
add
mov
xchg
cmp
in
test
mov
loope
test
es
ljmp
enter
sbb
aad
call
add
adc
cltd
adc
jbe
add
inc
lret
ljmp
jb
mov
add
frstor
push
add
sbb
sbb
ljmp
pop
or
and
icebp
mov
or
testb
outsl
mov
mov
sti
nop
loopne
aam
outsl
or
es
push
and
mov
sbb
mov
adc
pushf
aam
fisubl
inc
dec
mov
jo
pop
pop
add
fistpl
mov
aaa
cmp
fbld
jae
loope
push
jno
pop
mov
sub
outsl
inc
roll
cmp
hlt
aam
mov
or
jg
pushf
pop
jmp
nop
lock
in
mov
xlat
add
test
push
cld
cltd
xchg
inc
xchg
stos
aas
out
dec
mov
shll
xor
and
add
adc
lcall
hlt
call
in
cmp
cwtl
inc
fcmovnu
jae
and
add
stos
cmp
dec
inc
in
lock
cs
xor
mov
mov
pop
pop
push
inc
jne
lret
enter
pusha
ret
bound
cmp
push
mov
xchg
in
mov
sub
push
shrl
scas
lock
push
jle
pusha
outsb
adcb
aas
and
cli
ss
test
sbb
imul
loopne
rcr
push
jg
lods
mov
add
mov
int3
sbb
and
negl
outsl
xor
clc
lret
push
mov
or
je
cmpsb
pop
pop
sbb
add
fwait
cmp
lds
in
clc
lds
gs
cmp
ret
add
insl
jp
sahf
jns
sbb
add
ds
sub
push
push
fs
jns
mov
ljmp
mov
add
orl
push
push
mov
xchg
mov
out
imul
mov
call
push
aaa
add
fs
lret
subb
hlt
and
or
adc
jno
pusha
adc
mov
push
int
call
xor
pop
cmpsl
mov
mov
xor
fidivs
test
adcb
loope
mov
mov
pop
addr16
cld
mov
ja
jle
mov
movsl
or
shrb
fs
adc
mov
aas
jno
sub
mov
push
lods
mov
std
into
jl
daa
add
ljmp
mov
jle
popl
fcoml
add
or
pop
call
imul
fldenv
cmp
jbe
jnp
js
in
push
mov
fwait
or
xor
jg
hlt
pop
push
test
sbb
mov
aam
inc
arpl
pushf
leave
loopne
pop
cmp
aam
test
push
add
imul
cld
movsl
pusha
xlat
aas
sbb
sarb
sahf
dec
add
mov
aaa
inc
imull
les
popa
xchg
fadd
stc
hlt
stos
stos
mov
push
enter
or
sbb
clc
insl
pop
pop
scas
das
dec
hlt
jno
das
lock
sub
cltd
push
pusha
adc
into
filds
pop
xchg
adc
imul
stc
mov
inc
adc
sub
push
and
rclb
pop
add
adc
xor
mov
fwait
jo
cld
in
inc
pop
testb
cmc
ja
fistps
add
insl
icebp
dec
push
adc
mov
arpl
cmp
clc
xor
xchg
sbb
test
lcall
cmp
or
xor
or
fnstsw
shll
je
jnp
adc
mov
imul
sub
lahf
mov
ss
mov
leave
mov
inc
shrb
popa
mov
adc
imul
mov
inc
jb
das
ja
in
out
cmp
dec
push
faddl
arpl
inc
mov
pop
push
test
xor
filds
adc
imul
lret
sbb
jo
mov
inc
pop
sub
jg
cmp
dec
loop
add
sbb
and
jmp
add
push
jg
sub
mov
fdivp
in
cmp
mov
leave
notl
sahf
je
cmp
mov
xchg
push
addr16
shlw
loop
jmp
mov
lcall
mov
enter
mov
scas
ret
popf
orb
push
and
mov
mov
scas
icebp
and
out
sti
loop
adc
repnz
pop
imul
sub
dec
je
sub
sahf
jns
sbb
test
lret
data16
cmp
jo
sbb
insb
pop
pop
outsb
inc
loopne
pop
arpl
daa
or
mov
fistps
xlat
and
sub
call
pushf
aam
adc
push
pop
sub
mov
mov
lcall
int3
add
ret
jl
insb
cmp
addps
cmp
hlt
dec
mov
inc
sbb
xor
cld
mov
out
inc
inc
fwait
cli
std
ljmp
adc
repnz
clc
mov
imul
imul
mov
fstp
add
jo
clc
repz
shrb
sarb
push
mov
repnz
push
mov
jno
push
scas
mov
lods
or
push
fsubrs
scas
mov
xor
arpl
xor
cli
or
stos
frstor
mov
fadds
jno
inc
pop
in
adc
mov
das
pushf
das
sub
xor
dec
pop
aad
pop
dec
jl
xchg
dec
loope
out
fldcw
aas
push
sbb
ds
pop
clc
jne
les
jecxz
lret
add
sbbb
daa
ret
pop
push
out
mov
js
pop
int3
loope
lcall
mov
add
fsubl
jne
cmp
dec
add
fs
shr
mov
jp
out
pop
sbbb
mov
fisubs
imul
rcl
mov
add
pop
cmp
cmp
test
test
xchg
push
mov
dec
jno
jbe
mov
pop
jnp
sbbb
sub
xor
scas
lock
hlt
jmp
adc
test
cmp
shrl
cltd
sub
leave
xchg
popa
mov
mov
lds
cs
sbb
fmuls
pop
pop
mov
jg
cmp
stos
repz
push
pop
lcall
test
jno
and
jo
int3
test
inc
sbb
stc
jmp
or
push
add
test
and
sub
mov
xor
push
jns
mov
adc
imul
test
mov
das
test
sub
adc
sbb
fnsave
aam
ss
pop
and
enter
jg
ds
pop
scas
popa
rcrb
test
test
fimuls
jae
inc
mov
xchg
lods
lds
jmp
cmp
or
push
jne
popa
sarb
fstpt
cmp
mov
dec
jne
cmpsb
pmaxsw
rclb
mov
sbb
loopne
pop
loope
mov
push
movsb
mov
mov
clc
add
and
test
cmp
call
sub
mov
fisubrl
adc
jae
xor
mov
fcompl
popa
out
cli
pushf
aad
addr16
cld
pop
jbe
xor
push
dec
push
das
jp
push
add
arpl
pop
xchg
pop
or
dec
push
inc
xor
cmp
cmp
mov
cmp
in
fistpl
and
dec
fistl
cmp
iret
jecxz
mov
cmp
pop
sbb
aam
mov
pop
xchg
sub
js
dec
in
xchg
lods
pop
bound
rep
cli
pop
sub
nop
loope
icebp
inc
mov
add
mov
push
inc
pop
pop
push
dec
mov
jbe
fisttps
push
mov
add
xor
cmc
jbe
inc
dec
mov
sub
mov
sbb
out
cmova
les
xchg
pop
push
pop
les
cmp
in
adc
test
icebp
insb
xchg
aad
ja
subb
xchg
movsb
xor
pop
stc
clc
imul
or
push
fstp
inc
push
movb
xor
adc
jl
test
inc
pop
in
imul
jp
cwtl
add
out
mov
aad
xchg
mov
xchg
push
xor
in
enter
or
aad
jns
icebp
sub
inc
lahf
adc
push
addr16
call
add
push
and
test
nop
repz
in
stos
jg
stos
and
adc
xor
inc
loope
shll
cmp
jl
out
push
and
sub
loop
je
inc
sbb
add
notl
imulb
xlat
or
cmpsb
outsl
cmpsb
add
xchg
je
jmp
xor
pusha
cmp
arpl
and
xor
je
mov
adc
aad
cmpsl
sarb
dec
in
cli
mov
addr16
sub
shr
push
fidivs
sub
adc
xchg
pop
mov
sbb
arpl
js
sbb
icebp
lahf
cltd
aas
in
dec
daa
sbb
sub
sub
fnstenv
pop
mov
and
xlat
sub
xor
je
sub
mov
mov
cmpsb
push
icebp
mov
sub
and
mov
xor
and
das
jno
dec
pushl
hlt
or
push
rolb
aaa
xchg
pushl
test
int
pop
hlt
add
pop
sti
xchg
testb
lock
add
push
pushf
test
movsb
push
jmp
push
pop
mov
enter
jns
in
imul
xor
test
lock
mov
int
sbb
add
adc
sub
mov
adc
idivl
mov
add
fisttpll
cmpsl
push
ds
ffree
insl
repnz
and
mov
pop
out
mov
std
into
stos
mov
sbb
xorb
mov
cmp
pop
out
sub
ljmp
pushw
and
jns
push
xchg
ffree
cmp
jmp
ds
sub
xchg
mov
imul
loopne
ret
insl
jnp
into
out
rcrl
andb
mov
std
mov
sahf
lahf
lret
lret
gs
imul
adc
hlt
jl
pop
xor
imul
xchg
inc
push
movsl
jae
notb
inc
add
call
movsl
aad
inc
dec
fistpll
or
gs
push
lret
and
dec
std
dec
xlat
adcb
fisubrl
bound
shll
std
sbb
int
push
int3
sbb
pop
jp
xor
in
popa
int3
add
cmc
mov
adc
mov
cld
test
add
int3
icebp
and
xor
jbe
xchg
mov
or
jecxz
test
mov
pusha
iret
jl
out
daa
cmp
pushf
xor
push
lcall
jo
test
mov
rcrb
aas
addr16
les
inc
sub
mov
lock
lret
je
mov
movb
jnp
mov
mov
adc
mov
xor
xchg
fcoms
mov
adc
add
dec
mov
xor
cwtl
inc
add
push
out
shrl
neg
push
fisttpll
lahf
push
pop
lods
rolb
outsb
jb
pushw
jbe
cld
add
lret
push
inc
push
stc
int3
jo
sub
push
cmpsl
adc
xor
pop
adc
pop
rorb
lods
insl
push
aam
adc
cs
daa
dec
inc
mov
and
enter
cmc
fiadds
inc
loopne
fistpll
pop
jl
xchg
lods
jae
xchg
sahf
sub
fisttpll
pop
icebp
sub
out
ret
hlt
sbb
nop
sbb
jecxz
or
sbb
add
sub
jbe
fs
mov
add
sti
push
add
pop
mov
mov
xchg
ljmp
and
adc
cmpsb
lock
testl
xor
imul
popa
inc
loop
decb
adc
inc
xchg
in
out
sub
mov
adc
hlt
mov
nop
lock
aaa
sub
loop
pop
adc
in
pop
pushf
dec
in
lea
nop
aad
pop
out
mov
mov
shlb
imull
or
leave
cwtl
mov
fistpll
mov
daa
cs
scas
cmp
int3
sub
icebp
mov
lock
cmp
mov
mull
mov
jae
inc
pop
inc
and
sub
rorl
in
in
mov
out
mov
or
int
ret
push
mov
test
pushf
data16
pop
add
dec
call
push
in
sbb
out
arpl
outsb
pop
xchg
push
daa
xor
jmp
ficompl
xchg
out
movsb
cmpsl
pop
pop
sbb
sarl
push
mov
aad
iret
fistl
jge
insl
inc
xchg
push
decl
pop
adc
xchg
xchg
int
in
ljmp
mov
imul
add
add
pushl
or
mov
jl
dec
outsb
push
int3
stc
bound
in
ret
leave
jns
xor
lock
aaa
sub
mov
push
or
scas
adc
add
rol
or
cmc
or
mov
pushf
mov
sbb
and
les
push
cli
loope
lds
mov
push
sbb
call
jb
out
xchg
cmp
mov
sbbb
icebp
arpl
and
push
icebp
push
hlt
mov
ret
adc
add
adc
push
xchg
sub
mov
gs
inc
sbb
test
jb
fbld
bound
inc
bswap
repz
jmp
icebp
out
cli
inc
cli
addr16
in
bound
jge
testb
jecxz
das
enter
push
out
hlt
cmpsb
scas
into
cmp
ljmp
add
cmpsl
and
ljmp
psrad
insl
sbbb
push
mov
sub
test
add
xor
lahf
pop
push
dec
lods
dec
dec
mov
mov
jns
lahf
inc
or
mov
lret
dec
push
lahf
sti
inc
loop
and
or
adc
push
xchg
int
mov
or
cmpsb
lds
jb
lods
shrb
out
les
push
or
dec
sarb
ret
mov
sub
jo
inc
hlt
jle
fdivl
repnz
mov
pop
mov
xor
jmp
pop
sahf
fsubs
lcall
aas
or
xchg
xor
cmp
in
xorl
stos
mov
imul
fimull
jae
push
mov
clc
popf
xchg
mov
loop
add
dec
sub
testb
cmpsb
mov
add
shrl
mov
pop
xchg
or
xor
imul
inc
adc
adc
push
pop
mov
les
adc
mov
test
pop
mov
jecxz
jecxz
add
bound
gs
dec
adc
ja
pusha
pop
stos
mov
add
nop
and
je
icebp
or
loop
pop
popa
ss
xor
xchg
loop
sysexit
fists
push
pop
inc
mov
and
mov
sbb
inc
push
data16
les
fildll
mov
pop
insb
fwait
imul
xor
imull
rorl
add
sarl
imul
or
inc
or
push
and
mov
jge
xlat
loop
jmp
mov
xchg
int3
xor
pop
mov
push
xchg
outsb
sub
mov
push
xor
or
adc
or
loopne
mov
imul
pop
test
rclb
add
js
or
gs
sub
pop
in
pop
or
fisttps
fimull
push
fst
push
or
cmp
aad
mov
rorb
or
mov
xchg
enter
add
ds
mov
repz
push
jge
inc
pop
and
pop
mov
inc
mov
lret
add
mov
add
sarl
xchg
aaa
add
pop
mov
jmp
push
xor
and
ljmp
mov
pop
pop
pusha
mov
mov
addl
mov
cmp
sub
sti
shrl
test
leave
add
dec
stos
out
xor
mov
fsub
popf
sbb
and
les
sub
ret
out
addr16
int
cli
sarl
and
jae
cmp
xchg
fcoms
aam
sub
adc
pop
jno
or
nop
nop
pop
inc
sub
insb
or
push
mov
jb
fnsave
popf
mov
fsubrs
add
mov
in
fwait
inc
jge
or
cwtl
add
inc
orl
lds
jae
xchg
mov
adc
or
push
sub
push
movsb
aam
icebp
mov
cmp
mov
mov
test
add
jo
rcrl
push
das
push
sbb
and
mov
push
mov
sti
jge
xchg
mov
xchg
orl
jecxz
loope
enter
mov
mov
cmpsl
mov
imul
lret
stos
jns
inc
xchg
mov
push
and
repz
xor
mov
jg
jmp
rcl
scas
pop
data16
insl
out
dec
int
loop
sbb
pusha
movsb
xchg
ljmp
cmpsb
mov
adc
push
sbb
push
xchg
pop
lahf
jmp
xor
out
imul
pop
mov
leave
xor
add
mov
mov
pop
dec
pop
jmp
xor
xchg
mov
jne
sub
test
xor
mov
jecxz
fisttpll
pmulhuw
imul
ds
add
fadd
mov
mov
loopne
rcrb
push
cmp
mov
stc
push
xchg
test
sub
mov
repz
jmp
dec
lods
add
pushf
das
sbb
mov
sbb
xchg
addl
xchg
dec
sahf
subl
imulb
sub
jne
adc
mov
or
sub
pop
sbb
cmpsl
cmp
push
stc
nop
jge
movsb
loopne
or
dec
xor
cli
push
or
jns
sti
repnz
cltd
testb
jne
add
shll
mov
inc
fistpl
or
lss
push
enter
aad
imul
add
test
daa
and
push
add
adc
jne
xchg
sahf
dec
movsl
dec
mov
hlt
and
mov
add
cmp
cmp
jmp
scas
or
xor
sbb
push
iret
outsl
xchg
shrb
and
lods
mov
sbb
test
add
cmc
jbe
dec
add
cld
into
xor
stos
jne
push
or
mov
xlat
and
cltd
lods
lret
leave
sbb
jecxz
jl
cmp
mov
leave
jecxz
scas
testl
pushf
dec
jno
jecxz
jp
daa
pop
arpl
push
test
or
fistl
bound
or
lahf
fidivrs
push
sbb
xchg
sub
mov
dec
imul
repz
and
adc
adc
out
les
sbb
outsl
mov
mov
push
es
mov
sub
fsubs
add
ss
movsl
movsl
loopne
nop
mov
dec
loope
pop
mov
out
hlt
pop
sbb
je
pop
jno
inc
icebp
fnstcw
add
mov
push
adc
cld
push
stos
rol
jg
nop
lret
mov
adc
and
xchg
into
sbb
xorl
xchg
lds
or
fmull
into
cld
lods
sub
push
movsb
aam
je
std
mov
jp
mov
stos
adcb
mov
dec
sbb
push
add
rcll
imull
jmp
inc
mov
loop
lret
in
mov
mov
push
mul
xlat
popf
push
and
shll
fnsave
mov
imul
aas
adc
push
cmp
fidivrs
pop
insb
shufps
push
jl
cltd
test
cwtl
sbb
bound
mov
popf
mov
sarl
cmp
add
sbb
mov
pop
leave
test
dec
push
mov
rcrl
or
aaa
xorl
sbb
ds
sbb
nop
addr16
test
mov
xchg
icebp
cmp
out
leave
sub
mov
pop
mov
sub
jb
mov
addl
fdivrl
push
and
ret
movsb
dec
pop
sbb
cmp
pop
enter
inc
mov
cmp
mov
pop
call
adc
ret
sub
inc
ret
scas
inc
jbe
jnp
hlt
jp
push
sbb
popf
mov
outsb
data16
lahf
adc
sub
dec
inc
cmp
mov
jno
or
lret
sbb
filds
shl
imul
push
push
data16
sbb
xor
pop
sub
mov
stc
mov
out
ljmp
scas
aam
xor
xor
add
js
adc
adcl
push
xor
call
lods
fisubs
in
dec
or
pop
xor
je
iret
or
in
dec
in
imul
orl
mov
pop
loop
sub
push
js
rol
lds
lds
std
mov
lret
xchg
adc
rorb
xchg
pop
lcall
enter
cli
or
push
mov
adc
mov
lret
insb
out
fs
jmp
cltd
std
sub
idivb
insb
sbb
cmp
into
xchg
push
cmp
dec
notb
stos
mov
push
hlt
stc
mov
divl
jge
stc
gs
test
xchg
and
outsb
xchg
xchg
mov
cs
fninit
push
cmp
sbb
mov
xchg
test
cmp
sahf
aad
adc
dec
loopne
add
shl
mov
cmc
out
pusha
jnp
adcb
fwait
mov
pushl
addb
mov
addr16
inc
rolb
ret
pop
push
out
add
pop
mov
or
jno
insb
repz
xchg
dec
fidivrl
es
lcall
aad
pop
mov
lahf
cmp
leave
fdivs
mov
xchg
fcoms
sub
mov
mov
xchg
jge
int
inc
in
push
mov
inc
mov
fcoml
and
insl
lret
fnstsw
ds
sbb
js
add
push
push
arpl
xorb
ljmp
daa
cmp
popf
leave
mov
jo
mov
or
clc
push
dec
stc
insb
and
nop
xchg
aad
addr16
and
and
hlt
in
fbstp
stos
fsubp
sub
aaa
lret
lcall
daa
sbb
movsb
cmp
js
imul
insb
loopne
mov
xchg
stos
push
ja
std
into
mov
call
loopne
add
xlat
add
dec
js
ret
lret
xchg
adc
fwait
push
cmp
ror
push
shlb
inc
mov
nop
xchg
paddq
mov
push
xor
sub
aad
cmpb
dec
jnp
aad
faddp
pop
cmc
xchg
iret
int
sbb
mov
aam
lods
jl
mov
repz
out
jo
mov
sti
mov
jne
or
push
sub
aad
cwtl
and
mov
fwait
inc
stos
mov
das
mov
lea
notb
lds
jecxz
push
mull
pop
mov
roll
testb
cltd
push
pop
arpl
and
adc
xchg
rclb
out
movsl
test
sub
lods
mov
xchg
test
scas
je
fs
xchg
mov
mov
mov
adc
cwtl
aam
adc
rcr
push
jp
pop
jo
add
pop
mov
push
sbbl
jmp
fnstcw
inc
test
movl
sbb
xor
push
ljmp
test
fnstsw
lods
and
sub
insb
jl
mov
jns
ss
xor
cmp
lcall
mov
les
or
mov
stc
or
pop
das
inc
fs
dec
mov
jne
dec
pop
mov
mov
sti
dec
pop
add
xchg
fistps
int
mov
lcall
xchg
sub
sbb
mov
push
inc
or
hlt
xchg
xchg
ja
mov
inc
and
dec
fdivrl
sub
mov
stos
mov
pop
ror
mov
push
fbld
mov
aad
dec
popa
cmp
cwtl
out
outsb
mov
ret
fs
sbbl
insl
mov
xor
mov
sti
mov
mov
imul
mov
dec
lds
mov
sahf
add
mov
ja
lods
inc
out
sub
iret
lock
nop
cmp
imull
mov
mov
sbb
sti
dec
push
push
aam
mov
dec
cmp
adc
cmpsl
mov
add
mov
pushf
mov
pop
jno
pop
adc
ss
int
divl
xorl
pop
sbb
push
and
leave
xchg
bound
in
push
movsb
pop
mov
popa
dec
fwait
mov
cli
mov
xchg
jo
je
loop
push
ret
inc
loope
popf
imulb
pop
mov
xor
xchg
test
push
lret
imul
dec
cmp
jb
loope
stc
inc
sub
adc
shl
pop
fidivrl
test
push
pop
cmp
mov
jns
sar
and
sub
sbb
jp
loopne
pop
xchg
add
mov
iret
add
mov
mov
pop
dec
cltd
jae
pop
fldl
mov
push
mov
dec
mov
popa
pop
dec
cmpl
cmpb
xchg
cmpsb
xchg
addr16
idivb
cmc
lret
inc
jecxz
xchg
xor
adc
mov
pop
aaa
mov
pop
xor
ret
dec
mov
mov
add
fs
xor
es
inc
icebp
cs
pop
xor
ljmp
mov
test
lret
cltd
mov
pop
out
mov
xchg
dec
out
push
pusha
es
shr
fs
dec
pop
jne
sub
sub
sbb
xlat
jns
cmp
jns
add
mov
push
mov
ret
xor
rcrl
fsubs
mov
lock
int3
sbb
lods
mov
ret
mov
outsl
out
jne
xor
pusha
inc
and
je
jl
les
mov
mov
xchg
mov
nop
jl
mov
lock
scas
pushf
fpatan
test
pop
cmp
mov
adc
out
pop
movsb
pop
movsb
push
jo
mov
xchg
jp
xor
inc
mov
sub
xor
inc
sub
xchg
cmpsb
sti
push
divl
dec
mov
dec
lock
decl
pop
pop
cld
dec
mov
jmp
fst
pop
cmp
mov
das
aaa
jnp
data16
add
adc
push
xor
incl
add
mov
mov
lods
add
sub
rcl
push
ss
xchg
js
xchg
je
scas
and
cmpsb
xchg
std
std
dec
jo
push
mov
and
push
cmp
std
sti
sub
inc
xchg
stos
mov
pop
inc
sub
adc
out
inc
cld
mov
and
cmp
scas
pop
pushf
test
sti
push
adc
or
or
xchg
jno
lds
fs
cmpsb
or
daa
rolb
cmp
rcrb
testl
add
inc
push
mov
cli
jbe
add
push
xor
xchg
cltd
dec
push
std
xchg
out
lods
lock
pop
add
mov
push
dec
or
fdivrs
pop
inc
bound
cs
out
adc
mov
pushf
enter
hlt
dec
xchg
lds
mov
and
push
outsl
jnp
insl
fs
adc
test
dec
and
or
decb
add
pop
xchg
sbb
push
jmp
sbb
mov
icebp
pop
out
lahf
dec
mov
jp
pop
mov
jmp
or
pop
loopne
icebp
mov
sub
outsl
cli
mov
xchg
sti
cmp
test
pop
sar
dec
cwtl
cld
fistps
sti
xlat
es
out
mov
in
push
data16
mulb
push
mov
or
or
in
in
js
movsl
mov
sub
pop
add
rorb
push
imul
cmc
dec
cld
xchg
imul
xchg
je
mov
aam
testl
ret
add
push
es
jbe
adc
push
adc
pop
push
cmpb
push
add
lock
push
scas
lea
cmp
add
into
cmp
out
pop
push
sarl
jl
push
pop
pop
pusha
rsm
or
cmpsb
pop
cmp
inc
pop
out
jg
sbb
and
test
lods
leave
mov
cmp
push
and
mov
clc
stc
mov
xchg
pop
mov
shlb
fbstp
sub
cmpsb
xor
scas
jo
cmp
pop
inc
cmp
xchg
incb
dec
and
sbbb
loope
add
fmulp
fwait
mov
dec
iret
lods
or
inc
in
std
mov
fstpl
sarb
add
es
lret
and
push
mov
repnz
sbb
lahf
push
stos
imul
jns
mov
jns
xchg
call
jl
arpl
icebp
mov
pop
and
mov
das
dec
xor
fs
call
jmp
cmpsb
jg
push
test
xchg
shl
addl
popf
jp
outsb
jns
mov
mov
add
cmp
pop
rcl
repnz
mov
in
sub
enter
mov
push
push
insb
push
cmc
pop
xchg
mov
out
cltd
loope
adc
inc
scas
lods
or
nop
xchg
insb
and
sub
gs
icebp
fwait
sahf
das
jecxz
push
adc
sub
add
mov
mov
cmpsb
add
ja
das
repz
in
mov
inc
pop
test
xchg
mov
fsub
inc
dec
jl
repz
cltd
sub
shll
test
cmp
push
adc
xchg
fs
dec
in
mov
xchg
sbb
xor
xor
in
mov
add
push
insl
sub
adc
add
push
pop
popf
jg
adc
and
lea
jecxz
adc
stos
out
push
pop
pop
and
xor
sub
adc
xor
ss
push
xchg
hlt
iret
ffree
aad
jle
lret
mov
jge
mov
idivb
mov
and
fcmovne
and
sbb
sub
gs
insb
xor
adc
leave
orb
out
xor
ljmp
add
shrl
adc
movsl
in
push
pop
xor
mov
imul
ret
bound
jo
stos
mov
mov
jg
mov
out
fcomip
jl
xchg
fcompl
mov
adc
arpl
aas
sub
in
mov
cmp
cmp
add
ja
jmp
aaa
inc
in
mov
lahf
enter
fsubl
lret
stos
xor
shrl
dec
insl
divb
decl
mov
cld
test
mov
es
daa
xchg
fistpll
xchg
into
pushl
lahf
enter
sub
in
enter
scas
pop
xchg
add
xchg
mov
hlt
stos
mov
cmp
fistps
jle
insb
shrb
idivb
pop
aad
test
push
loop
mov
clc
inc
out
mov
stc
jmp
lahf
push
sarl
jg
pop
push
jno
jmp
ljmp
jae
popf
mov
and
scas
pop
jae
cmpsb
cli
sbb
es
data16
dec
pop
sbb
daa
xchg
mov
or
fs
ljmp
adc
inc
and
scas
cli
out
inc
fdivl
insl
cli
mov
sbb
push
fimull
pusha
lods
pop
jae
mov
mov
mov
mov
adc
xlat
mov
shlb
or
add
xchg
das
divl
cli
int3
cmp
and
mov
int
pop
pushf
push
shl
xchg
cmp
xlat
pop
adc
mov
push
clc
movsb
xorb
mov
inc
sub
pop
test
addl
loopne
stos
sbb
lods
xchg
pop
adc
cmpsl
cli
and
ror
sahf
hlt
pusha
mov
xchg
jno
lret
iret
test
popa
sub
test
mov
lahf
or
or
or
std
cmp
xor
push
push
inc
stos
mov
inc
inc
into
out
and
movsb
push
cmp
dec
sub
mov
sub
aaa
jle
fcmovne
or
popa
fsubrl
stos
fcoms
or
repnz
xchg
pusha
cltd
fsub
cmc
mov
cmp
xchg
xor
loopne
adcl
add
stc
jns
ds
inc
inc
movups
jge
inc
and
int3
mov
xchg
popf
or
or
jge
adc
es
fcmovnbe
test
xlat
scas
cs
clc
xor
imul
mov
dec
cmc
dec
insb
push
pop
addr16
repz
cmpsb
and
sti
lret
scas
mov
aad
sti
and
jns
mov
jp
inc
rorb
scas
lods
push
aas
add
mov
sarl
sbb
mov
sarl
mov
pop
std
std
popf
fsubs
mov
jge
or
mov
or
repnz
pop
leave
adc
and
push
out
mov
fldcw
pop
out
outsl
fucomi
fsubrs
sarl
xchg
fnsave
or
or
fsubrl
dec
imul
int
push
cmp
xchg
xlat
cmp
sub
dec
adc
dec
mov
inc
scas
js
mov
adc
sbb
fcoms
insl
out
jno
and
insl
xor
cltd
icebp
inc
out
mov
dec
xor
enterw
in
testl
push
mov
inc
rcl
loopne
and
jle
in
xor
enter
add
and
scas
and
stos
or
iret
scas
cld
in
idivl
xchg
xor
scas
gs
push
mov
daa
pop
ret
std
xchg
enter
mov
test
ljmp
jns
sub
push
add
xchg
fwait
xor
xor
int
xchg
cmp
or
xlat
imul
add
ret
nop
pop
push
cmc
push
mov
and
in
xor
stos
iret
sub
mov
pop
inc
aad
mov
je
or
mov
and
lods
sub
sbbb
mov
or
arpl
shlb
dec
into
jbe
lds
lcall
jnp
pop
movsb
dec
jecxz
repz
inc
je
repnz
cmpsl
sbb
jne
cmp
jg
add
mov
inc
insb
or
add
insl
push
out
lea
negl
daa
inc
inc
jmp
fs
cmpl
loope
fsubrs
push
jge
shll
out
repz
loop
out
ret
loop
push
fisubrs
push
fidivrl
stc
xchg
push
ja
cmp
lds
sub
sbb
jnp
add
mov
fs
jae
pusha
add
jmp
push
mov
xchg
cltd
pop
mov
stc
mov
mov
sbb
push
inc
jo
adc
shrl
fbld
leave
loopne
int3
jno
fsts
mov
xlat
jmp
int3
sub
dec
xor
or
and
push
ss
aam
fcomip
fmul
add
sbb
pop
push
and
test
fnsave
inc
lods
mov
cs
inc
outsb
fimuls
cld
int3
pop
lods
pop
mov
jbe
mov
dec
xchg
jae
jns
pop
mov
lret
xchg
daa
scas
je
cltd
or
cwtl
mov
xchg
dec
push
push
cmp
sahf
push
cs
mov
or
lret
je
dec
pop
shrl
insl
ljmp
fs
pop
cmp
lods
fpatan
jne
lods
mov
mov
in
jno
inc
pop
sbb
xchg
mov
adc
adc
pop
call
lea
or
xchg
lock
fsubrl
call
pushf
inc
insl
aaa
gs
mov
adc
pusha
cld
hlt
pop
mov
adc
std
loope
or
mov
cmc
sub
lock
mov
hlt
out
push
pop
orb
push
scas
lods
mov
bound
xchg
pop
sub
popa
lds
icebp
scas
and
ds
movsb
into
sbb
inc
xchg
jp
push
jge
xlat
and
mov
call
mov
scas
dec
scas
movsl
push
mov
adc
hlt
out
jge
aad
jb
xchg
dec
aad
push
adc
fs
add
add
lods
int3
je
cmp
lahf
jb
addr16
sub
int
test
fiadds
sbb
imul
adc
inc
in
push
mov
aaa
test
mov
rcrl
sbb
dec
jnp
mov
shr
sbb
out
and
daa
test
les
mov
sub
cmp
pop
add
aam
divps
shlb
repnz
dec
mov
psubsw
sub
mov
xchg
mov
out
or
iret
cmp
add
pop
loopne
hlt
sbb
push
fs
fdivrp
push
and
xor
pushl
mov
addr16
mov
sbb
clc
xor
outsb
mov
sub
sbbw
lahf
inc
push
lods
inc
fistl
repz
mov
fldt
stos
dec
jp
jae
clc
in
jmp
iret
pop
mov
sbb
gs
loope
enter
add
scas
test
sub
and
push
movsb
and
adc
cmp
xchg
test
mov
aad
scas
inc
call
fmul
jmp
dec
xchg
jecxz
test
and
xbegin
mov
or
cmpb
leave
out
lea
in
mov
sub
push
iret
add
pop
dec
cs
stos
outsl
test
test
mov
fisubl
or
xor
lret
stos
cmovno
jo
enter
mov
stos
jmp
pop
xor
push
mov
cmp
adc
in
cmp
loopw
add
jle
pop
rorb
pop
insl
xor
and
stos
sub
stos
addl
clc
or
data16
dec
mov
xchg
push
lea
push
add
xchg
jo
mov
pop
mov
stos
and
pop
scas
sbb
fldl
push
nop
gs
inc
and
pop
in
jl
aad
mov
dec
and
mov
inc
cmpsb
cmpsl
cli
push
repz
push
pop
dec
mov
mov
bound
sub
fisttps
xchg
inc
push
push
mov
xchg
rcll
hlt
adc
mov
lock
xor
out
sub
pushf
add
inc
xchg
xchg
xlat
add
pop
aas
or
jae
in
mov
iret
xchg
int
and
stos
in
xlat
and
xchg
cmp
js
js
test
pop
dec
sub
add
sub
movsb
add
jp
sbb
fwait
cmpb
lods
fmuls
cld
push
and
mov
and
lock
xchg
cmp
out
nop
mov
fs
sub
mov
cmc
mov
pusha
jno
in
bound
jns
mov
inc
xchg
xchg
aam
push
leave
mov
adc
pop
mov
push
roll
insl
adc
and
xchg
xchg
test
xchg
scas
test
cld
mov
add
mov
rorb
dec
cmp
add
addr16
fiadds
arpl
xor
lds
mov
add
lahf
inc
mov
clc
inc
loopne
mov
xor
pop
mov
fldt
xchg
rorl
pop
test
jl
nop
mov
lcall
push
cli
int3
or
xchg
fdivrs
hlt
mov
lcall
cmp
xchg
and
notl
mov
lea
ret
scas
cmpsl
add
dec
jle
xor
push
or
out
movsl
cld
addr16
pop
mov
and
mov
inc
jns
repnz
in
inc
mov
mov
cmp
mov
push
das
mov
ret
mov
inc
cs
aaa
lahf
movsl
lret
lret
cli
notl
sbb
cmp
add
fisubs
in
dec
pop
pop
cmp
push
add
lret
pop
lahf
mov
mov
adc
dec
bound
fcmovnb
add
mov
mov
lods
or
call
pop
dec
sbb
push
cmpsl
push
sbb
add
push
faddl
xchg
pushf
sar
inc
push
aaa
mov
lock
sub
jmp
pop
adc
cmp
icebp
or
movsb
mov
mov
mov
jecxz
int
cmpsl
add
aas
mov
xor
cmpb
scas
insb
in
test
aaa
nop
mov
scas
xor
fdivs
lock
arpl
inc
test
xchg
jecxz
lahf
dec
xchg
pop
mov
lods
sub
xchg
xrelease
rorb
das
nop
cld
popw
movsb
stos
push
stos
mov
pop
add
int
inc
in
sub
arpl
sbb
xchg
fs
mov
aaa
push
and
nop
popa
scas
cli
movsb
adc
dec
mov
loop
inc
jmp
xchg
jecxz
sub
inc
faddp
cli
mov
pop
cmp
ds
mov
inc
push
pop
jecxz
mov
jns
jns
xchg
push
sub
or
cmp
jne
jmp
xchg
inc
in
xchg
xlat
in
adc
mov
push
imul
stc
mov
loope
xor
jg
scas
add
sub
add
pop
cmp
addb
push
dec
pop
mov
insb
pop
clc
clc
pop
leave
adc
sub
pop
fldcw
and
sub
shrl
mov
dec
cmc
inc
dec
xchg
add
inc
ret
sub
or
push
iret
repnz
cmp
repz
sbb
cmpb
mov
jno
repz
iret
pop
lods
inc
xor
lds
movsb
pushw
dec
or
aaa
xor
pop
test
out
std
nop
mov
dec
adc
push
xor
adc
lea
xchg
jnp
xchg
out
fadds
or
xor
mov
cltd
pusha
and
inc
test
popa
aaa
ror
mov
out
movsl
add
mov
mov
out
loop
div
xchg
push
popf
add
cmc
leave
fsubl
into
jp
push
and
dec
popa
pop
add
daa
in
sub
pop
stc
lea
js
dec
or
sar
xchg
jmp
mov
pop
pusha
push
push
sbb
mov
das
jb
cmp
adc
insb
jp
or
leave
mov
add
jne
cmp
adc
mov
addr16
jae
cmp
out
cli
xchg
mov
jecxz
out
mov
mov
push
out
enter
push
sub
and
pop
fdivl
lea
out
jl
scas
cmpsb
popf
xchg
mov
stc
cmpsl
cmp
mov
repz
out
pop
orb
xor
mov
xor
xlat
jmp
cmp
ret
pusha
inc
shl
jnp
push
jbe
cmp
scas
lret
jmp
in
sbb
xchg
cmp
mov
mov
push
cmp
or
sbb
jge
cmp
cmp
out
cmp
add
mov
pop
lret
daa
fisubs
jl
mov
ljmp
fistl
push
cmpb
mov
pop
cld
scas
sub
pop
xchg
test
mov
insb
icebp
cmp
insb
sub
fistl
adc
mov
fmull
mov
out
or
push
and
mov
into
nop
mov
mov
push
roll
push
mov
jbe
xor
les
inc
int
or
dec
xor
inc
lock
in
into
push
mul
ja
sub
popf
test
jmp
leave
jp
cmc
sbb
aas
and
jb
repnz
xchg
jl
jge
mov
xor
jo
imul
add
mov
and
sub
pop
push
xor
jae
and
ss
inc
test
fwait
dec
test
scas
jg
mov
inc
arpl
adc
xchg
ds
dec
scas
fildll
dec
mov
mov
gs
mov
clc
cmp
int3
inc
icebp
adc
mov
lahf
and
xchg
stc
clc
test
scas
xlat
mov
ja
mov
pop
jnp
xor
js
pop
insl
sbb
popa
push
cmp
mov
movsb
fidivrl
dec
jae
repnz
xchg
push
ror
movsl
and
daa
lods
jb
out
inc
test
xlat
sub
call
mov
shll
popa
dec
mov
xor
imul
je
in
mov
jno
lahf
jmp
add
vpsubusb
mov
mov
jle
aaa
lods
mov
mov
lcall
jle
cmp
test
das
mov
cli
dec
sarb
fnstcw
fcomi
int
xor
ret
ret
mov
add
cwtl
push
stos
xchg
aas
xor
test
mov
das
adc
or
jmp
xlat
nop
scas
and
xchg
lret
sahf
es
mov
repz
xorl
loopne
push
mov
bound
rcrb
bound
imul
add
cmp
out
inc
push
lea
dec
adc
mov
stos
js
mov
cmpsl
frstor
sub
insl
mov
inc
fwait
js
xorl
movsb
out
xor
inc
dec
dec
adc
or
arpl
sub
into
scas
test
mov
mov
mov
mov
ljmp
cmp
sbb
lods
repz
sbb
push
lods
addb
xor
add
insw
test
lods
push
movsb
adc
inc
sbb
gs
adc
test
int3
sbb
or
adcl
std
mov
scas
add
xchg
adc
xor
pop
mov
notb
inc
shlb
pop
psubb
je
lret
xor
fsts
test
ret
cmp
test
lret
sub
imul
mov
pushf
sbb
in
clc
arpl
mov
pop
pop
push
dec
or
scas
lret
rcl
adc
cwtl
bound
pop
inc
cmp
xchg
fs
cmp
repz
mov
fstpt
push
cmpsl
es
int
cmp
mov
or
cmp
pop
mov
xor
push
mov
xchg
mov
sub
lret
push
mov
andb
mov
icebp
inc
cmp
lret
scas
sub
stos
push
push
mov
int
sbb
aam
pop
arpl
loope
fstl
push
imul
iret
and
push
push
mov
mov
mov
or
jo
cli
or
fmul
scas
jo
push
js
xchg
inc
push
xchg
mov
jb
in
dec
scas
pop
lret
clc
aam
test
loop
sahf
xor
adc
push
or
js
and
mov
jmp
pop
pop
mov
lcall
mov
dec
fstpt
cwtl
cmp
call
and
popa
push
mov
jle
mov
xchg
cmp
or
sbb
push
cmc
out
adc
and
mov
jne
jl
orl
jnp
bound
mov
push
daa
sub
xchg
mov
ja
repz
adc
int
cmp
fs
mov
andl
mov
cltd
pop
mov
xchg
push
mov
jmp
pop
aas
and
ret
enter
cmc
sbb
fs
dec
xchg
movsl
push
mov
mov
fldt
cmp
push
loope
xchg
stos
pusha
popf
jg
into
mov
push
in
xor
je
or
gs
pop
aad
push
das
rorl
dec
popa
jmp
test
and
lcall
into
dec
mov
mov
std
movsb
je
adc
mov
pop
add
mov
jbe
adc
cmp
cli
in
jmp
dec
movsb
addr16
cmp
mov
jb
in
bound
add
jnp
sbb
insl
dec
sbb
cmp
and
cmp
decb
sub
mov
insb
adcl
test
inc
call
pop
leave
xchg
jle
push
pusha
inc
stos
adc
rcrb
out
push
jns
leave
loope
push
cmp
xchg
ljmp
pmaxub
insl
movsb
cltd
testb
hlt
pop
sbb
mov
push
xchg
pusha
lret
pop
mov
test
fisttpll
dec
cmp
daa
shrb
add
arpl
fcompl
jmp
xchg
fldenv
rol
scas
dec
lods
ret
inc
jge
mov
aaa
jmp
insb
sub
es
rorb
cmp
popf
jg
aad
pop
or
push
jo
insl
push
mov
cmp
je
fs
incb
dec
mov
xchg
xchg
enter
adc
xor
or
je
sbb
mov
fstpl
addr16
mov
mov
xor
dec
adc
outsb
dec
test
fisubl
jo
add
pop
lods
jecxz
xchg
mov
int
das
xchg
pop
jp
les
dec
xor
or
mov
adc
ret
fwait
or
ret
es
shll
das
lods
nop
fimull
ret
in
aad
lds
inc
or
fs
sbb
test
jo
cmpl
mov
rolb
sbb
sub
fldenv
out
jg
bound
and
add
and
dec
mov
subb
shrl
outsl
mull
push
sbb
std
cmc
movsl
sub
nop
mov
lahf
in
inc
inc
mov
les
pop
lret
xor
xchg
adc
shll
je
or
cmpsl
pop
adc
and
shlb
pop
xchg
je
jb
clc
mov
sarl
jae
addr16
sbb
in
dec
in
arpl
xchg
sti
jne
adc
adc
lods
mov
popa
mov
pop
and
mov
das
je
shlb
inc
push
popf
xor
loope
adcb
and
aaa
cmpsl
pop
jmp
jmp
out
loopne
xor
sbb
ja
fstpl
push
add
adc
mov
jbe
xor
jle
aaa
fsubl
test
jmp
cmpsb
fwait
pop
mov
subl
mov
adc
mov
xorb
inc
dec
adc
int
lea
pop
add
imul
loope
mov
pusha
aam
js
leave
in
aas
sbbb
mov
stos
pop
in
ljmp
int
inc
aam
idivl
push
stos
adc
fwait
gs
cmpb
imul
xor
or
sub
sbb
daa
enter
and
fdivr
dec
mov
cmc
nop
lcall
xor
neg
lock
mov
sbbl
dec
rclb
mov
and
add
adc
dec
mov
and
push
push
jb
xchg
arpl
mov
nop
mov
sbb
test
lock
scas
push
frstor
daa
push
insb
sub
xchg
and
loop
xchg
xorl
ds
std
mov
inc
call
int
and
sbb
and
daa
imul
mov
mov
jp
negl
or
add
dec
lcall
sub
ret
stc
sbb
sbb
cs
sahf
xor
inc
int
jnp
cwtl
mov
push
mov
jl
in
inc
addr16
pushf
frstor
jge
iret
sbb
ret
lret
rcll
ret
mov
mov
cmp
inc
testl
test
xlat
jns
repz
push
jns
xor
cmp
lods
mov
lock
fs
sub
xchg
xchg
push
loopne
lds
sub
ja
xchg
imul
inc
jns
adc
pushf
loope
mov
xchg
add
dec
and
or
sbb
insb
sahf
add
dec
adc
mov
inc
or
andb
test
push
inc
add
or
add
lea
add
mov
das
jne
xchg
cld
jno
mov
cmp
xchg
fsts
pop
rcl
aad
lock
jbe
in
push
aad
cwtl
jne
stc
test
sahf
jne
push
mov
add
dec
sub
pop
sbb
inc
and
pop
xchg
push
loope
pusha
fsubrs
movsl
icebp
dec
and
lock
in
repz
sub
adc
xor
push
sub
push
hlt
cmc
leave
imul
xor
inc
fucom
and
jl
out
mov
xchg
movsl
pop
pop
adc
add
fiadds
mov
into
dec
test
out
loope
loopne
movsb
mov
cmp
pop
fsubl
popa
mov
stc
adc
movsb
scas
sub
sub
sub
push
rorb
mov
leave
or
xlat
and
adc
test
orb
ficoml
dec
jmp
or
and
sbb
mov
jnp
cmp
adc
cmp
sub
add
or
lock
popa
sbb
mov
insb
jle
cmc
or
mov
mov
jae
pop
movsb
imul
jne
sub
sahf
test
call
mov
sahf
loopne
addb
std
xchg
enter
and
scas
or
in
addr16
pop
repz
mov
repnz
das
dec
shlb
push
sub
pop
pop
push
nop
inc
adc
jne
dec
sbb
adc
dec
cltd
inc
or
sub
jl
test
and
imul
out
sub
fs
fsubs
push
jne
dec
cmpsb
sub
out
mov
pop
pushf
mov
sbb
es
into
loopne
add
jp
or
pop
add
mov
clts
shlb
loope
iret
ror
stos
orl
mov
mov
cs
adc
adc
mov
aaa
ljmp
ret
pushf
mov
dec
dec
scas
ja
sub
xor
shll
push
lahf
or
push
add
hlt
push
fdivrl
das
add
pop
fcmovne
outsl
jbe
inc
das
push
frstor
push
imul
inc
out
pop
sbb
xchg
or
pushl
xchg
jmp
sti
xchg
push
fsubl
push
fisubrl
jbe
dec
xor
sub
pop
add
aad
ficomps
outsb
xchg
fistpl
shll
out
das
jg
mov
mov
cltd
insl
jmp
jo
mov
int
hlt
aas
inc
test
or
push
inc
mov
dec
popa
in
or
pop
je
or
fcomps
mov
nop
enter
shl
mov
insb
push
xchg
mov
or
and
jle
outsb
movsb
jmp
nop
insb
stos
jg
and
aas
and
enter
xchg
mov
std
add
xchg
push
mov
mov
movb
cmp
adc
insb
add
mov
fs
push
icebp
cltd
outsl
xchg
mov
jo
repnz
inc
sbb
mov
std
push
mov
or
fcmove
jle
lods
jns
jmp
jns
jne
hlt
les
clc
jmp
ds
in
in
cmp
xchg
lcall
xchg
adc
insb
bound
sub
adc
mov
push
pop
mov
xlat
xchg
fdivs
lahf
stos
xchg
mov
imul
push
add
lret
add
testl
inc
push
int
outsl
es
pop
sbb
jo
ds
inc
push
jbe
leave
test
push
lds
mov
xchg
or
into
push
xor
push
les
xor
out
shrb
cld
jp
mov
test
mov
daa
rcr
subl
adc
mov
pop
cmp
mov
das
in
outsl
adc
push
lcall
lods
arpl
sbb
scas
fwait
sahf
mov
sub
push
dec
push
xchg
and
jno
or
or
ficompl
psrlw
and
int
scas
bound
sub
int
in
jo
ss
cmovae
push
sahf
mov
add
scas
xor
sbb
js
loop
nop
lret
push
push
popf
ljmp
push
dec
test
imul
xor
rorb
sahf
dec
popa
out
pushf
je
or
xchg
sbb
cmp
movsb
cmp
or
ljmp
mov
cmpsl
repnz
dec
dec
leave
push
or
jno
jae
adc
inc
repnz
fmull
in
iret
imul
sub
jo
int
sahf
call
lods
subb
mov
cwtl
aaa
mov
sub
ja
dec
adc
mov
mov
mov
mov
test
mov
test
jbe
mov
aad
dec
enter
js
je
push
aam
fstpt
popf
mov
mov
fisubrl
pop
pop
in
inc
inc
fisttpl
push
ljmp
or
mov
lret
lds
int3
sub
fwait
sub
adc
popw
fnstsw
add
loope
mov
fwait
lret
push
rcr
jmp
push
jne
imul
dec
lcall
xchg
mov
add
gs
or
cmp
inc
cli
fwait
fs
scas
cltd
sbb
push
xor
cmp
sub
xor
mov
fdivs
rorb
lret
das
add
pop
xorl
sbb
or
dec
dec
popa
mov
mov
sub
mov
fwait
arpl
or
and
fnstsw
jne
mov
pop
nop
testl
fwait
les
push
push
ja
fmuls
adc
lret
jecxz
jb
pop
sub
sbb
lret
add
mov
jo
fisubrs
int
sbb
insb
in
fdivrp
mov
xchg
push
mov
imul
xor
scas
cli
inc
shrb
cmpb
fstps
in
daa
sbb
sub
xchg
hlt
dec
sub
es
inc
cld
xor
or
into
mov
lock
pusha
aas
jmp
int3
mov
mov
jmp
pop
dec
push
jg
in
or
fwait
cmpsl
fstl
std
cmp
jns
inc
jg
dec
out
mov
push
jecxz
addr16
pop
jecxz
test
clc
mov
cli
mov
add
push
je
stos
int3
add
cmp
mov
iret
pusha
inc
lcall
cmpsl
imul
lahf
imul
dec
loope
icebp
cmp
and
ljmp
sbb
adc
jle
push
pop
ret
inc
leave
cmp
push
xchg
jnp
repnz
jmp
xchg
sub
cmp
sti
and
xlat
rorl
jbe,pn
movsl
jbe
out
add
into
sbb
std
bound
mov
cmpb
ud0
xchg
sbb
mov
sub
pop
rdtsc
cmp
add
push
push
push
mov
shlb
mov
test
fwait
sub
pop
inc
arpl
pop
das
aaa
addb
jg
xchg
and
or
cmc
push
std
cmp
pop
push
jmp
sbbb
push
mov
scas
stc
mov
std
mov
mov
sbb
inc
xorl
ja
xlat
js
pop
xor
push
sahf
and
adc
cmp
rorl
aaa
sbb
cmpsl
call
add
mov
lahf
pop
and
cwtl
dec
jae
xchg
xchg
pop
push
imul
mov
fists
add
ja
icebp
push
ja
clc
dec
je
ror
insb
xor
push
pop
mov
lret
fisubrs
mov
outsl
jmp
stc
ret
mov
imul
mov
or
sub
sub
jno
push
in
fwait
mov
mov
dec
fs
pop
ret
stc
push
pop
lret
rep
in
lret
mov
jl
divl
iret
xor
loopne
mov
ret
lock
cld
fs
inc
lods
mov
or
test
and
or
mov
jb
pop
push
addr16
dec
fs
jns
push
add
mov
call
testl
sub
pushf
or
mov
mov
mov
xlat
cmp
and
pop
test
jo
inc
sub
add
mov
loope
outsb
jo
clc
fisubs
adc
sub
jne
lahf
push
lret
je
pop
mov
dec
mov
scas
sub
cmpsl
faddl
sbb
jo
push
mov
ficompl
push
jmp
leave
jmp
xchg
mov
or
ds
out
test
sbb
and
push
add
outsl
sub
inc
jns
fistl
fisttpl
xchg
pop
in
add
mov
mov
add
mov
rcrb
popa
test
incb
xchg
xor
test
pop
mov
mov
pop
add
inc
stos
cmp
mov
icebp
fldl
aad
push
jp
pop
movsl
pop
and
imul
mov
out
stos
lret
adc
repz
aaa
mov
add
test
and
fcmovb
call
cmp
out
mov
rorl
and
lods
mov
dec
sbb
sbb
dec
enter
xchg
mov
add
lods
push
ja
push
fldl
push
cs
or
pop
mov
pusha
fs
mov
leave
add
sbb
mov
lods
lea
mov
xchg
push
lds
push
jp
daa
loope
negl
mov
fcmovbe
inc
outsl
mov
lods
out
lahf
es
mov
cmp
pop
inc
popa
dec
adc
rol
push
jl
lods
lea
sub
sbb
sbb
xchg
dec
testb
sbb
xchg
mov
stc
sbb
in
fwait
orl
cwtl
repnz
push
out
xchg
pop
or
push
shl
adc
call
scas
popf
pop
imul
mov
sbb
das
in
loope
jmp
sarb
pop
out
adc
pop
fucom
daa
push
xchg
sbb
and
je
jne
in
sub
je
inc
decl
mov
sahf
pop
std
jbe
adc
mov
ret
divl
iret
add
or
stos
fidivrl
sbb
push
aas
stos
frstor
lcall
loopne
adc
dec
leave
fdivl
sbb
pusha
mov
mov
xlat
stos
bound
fs
mov
insl
scas
inc
cwtl
xor
xchg
xchg
xchg
movsb
dec
xchg
adc
pop
lcall
mov
adc
mov
dec
sbb
lahf
jno
mov
jnp
jecxz
clc
or
popa
call
loopne
bound
lret
mov
pop
in
nop
sbb
pushf
test
imul
sbb
enter
mov
push
lods
or
or
cmpb
and
scas
mov
adc
imul
in
ficompl
mov
mov
ficompl
dec
add
sub
adc
xor
out
and
in
sub
sti
cmp
xor
mov
sbb
setg
or
das
testl
pop
testb
leave
mov
add
popf
mov
lods
cs
xor
sbb
dec
xor
push
add
shll
pop
stos
pop
lcall
mov
dec
dec
fdivs
push
cmovge
mov
scas
scas
iret
xchg
out
and
aam
inc
sahf
cmp
clc
jno
dec
inc
insb
xchg
test
loopne
ret
dec
sti
pop
mov
cmp
test
mov
push
rclb
and
push
aad
sbb
test
dec
scas
nop
mov
dec
push
or
icebp
es
dec
inc
rol
movsl
pop
inc
popf
fs
adc
xchg
push
js
mov
out
cmp
add
imul
dec
cmc
jmp
jae
iret
out
sub
mov
mov
push
lds
daa
lock
dec
imul
adc
imul
push
ljmp
push
lahf
xor
fwait
dec
jg
mov
lret
sbb
out
sub
sbb
ret
xchg
push
daa
cmpsb
sbb
dec
push
pop
cmpsl
add
popa
mov
addr16
shrb
outsb
mov
inc
aad
stos
jle
mov
mov
inc
cs
add
xchg
stc
rcrl
mov
mov
pop
sbb
leave
insb
jno
dec
stc
and
sbb
and
pushf
sub
and
mov
dec
fistpll
lods
dec
sahf
rclb
scas
or
movl
in
stc
push
and
cld
xor
jbe
pop
lret
and
cmp
pop
jl
test
ss
nop
out
pop
or
lret
jg
jns
rol
xlat
pop
out
pop
ret
pop
jo
es
and
cmc
movsb
imul
inc
leave
outsb
mov
outsl
pop
jns
mov
ss
scas
call
mov
adc
divl
cmp
lock
and
leave
scas
das
xchg
je
dec
lods
push
jl
roll
aaa
cli
into
loop
into
xchg
dec
adc
and
xchg
push
sub
rorb
or
push
cmc
add
add
add
jnp
das
pushf
movsb
lcall
popf
in
sarb
mov
mov
mov
add
push
mov
dec
ds
cli
lods
fiadds
push
push
cmp
sbb
inc
xlat
pop
add
mov
inc
jns
pop
inc
jp
inc
cli
cmp
sarl
scas
jmp
stc
add
pop
mov
adc
inc
cmpsl
xor
mov
ja
lods
nop
aam
push
jp
add
inc
cwtl
dec
dec
ss
adc
and
fbstp
cmp
jbe
xor
or
ds
push
dec
sbbl
jg
mov
fcmovbe
inc
enter
ljmp
pop
sti
mov
xorb
cmovne
cltd
pop
std
jne
int3
fistpll
loope
dec
jmp
mov
das
adc
ret
inc
adc
add
fimuls
mov
and
jae
int
mov
std
mov
sbb
xchg
jbe
xchg
mov
jge
xorb
loopne
dec
adc
test
in
ds
cmp
roll
cmp
push
sbb
lods
cmp
ss
cli
mov
pop
stc
pop
xor
in
iret
aas
orb
push
xchg
inc
mov
jge
mov
mov
in
rol
mov
adc
push
in
cld
push
adc
dec
jmp
test
pushf
sbb
jmp
sub
in
sbb
mov
inc
rorb
inc
sub
cmpl
push
fisubrl
fistpl
push
pop
jo
add
daa
pop
clc
mov
movsb
lods
imul
push
fsubr
pop
mov
add
imul
pop
fistpl
mov
mov
hlt
pop
das
mov
xor
sub
dec
add
mov
xor
pop
lret
test
cmp
mov
cltd
cmp
mov
js
das
das
enter
gs
and
dec
xor
incb
aad
jno
dec
jno
outsb
enter
rclb
int3
fstpl
dec
je
sub
nop
scas
decb
stos
imul
inc
xor
pop
mov
rcrl
outsb
inc
xchg
cmc
push
inc
jno
mov
push
leave
les
adc
out
hlt
xor
dec
ljmp
rcl
loope
cmc
lahf
outsl
mov
xchg
stos
or
xor
pushf
pop
out
dec
mov
cmp
cmp
cmpsb
loop
xchg
xor
mov
movsb
das
aad
mov
mov
inc
cmp
shrl
sbb
and
leave
pop
adc
loop
xor
sub
add
bound
xor
sbb
mov
sbb
xor
inc
xor
mov
out
mov
dec
into
mov
push
test
rcl
jmp
inc
pushf
add
dec
inc
shl
dec
es
sbbb
push
pop
scas
or
xlat
jne
gs
adc
gs
or
idivb
mov
and
movsl
mov
repnz
jg
mov
cmpsb
push
icebp
xor
scas
js
fld
push
xchg
dec
in
jp
daa
ret
adc
icebp
add
test
and
jb
lock
inc
rcrb
push
xchg
pop
pop
lock
push
xor
jl
int
lods
xor
movsl
out
fwait
dec
daa
loope
sbb
add
add
mov
push
xor
fsubl
outsl
xlat
insb
icebp
xchg
lea
pushl
mov
sbb
sbb
ret
sarb
and
pop
dec
and
push
dec
adc
lret
call
sbb
push
test
popa
sbb
aas
dec
mov
adc
call
mov
ljmp
iret
or
inc
lret
add
fistpll
xchg
lock
xchg
nop
loop
movb
pop
and
push
sarl
sub
jo
push
inc
mov
jge
mov
ja
call
int3
leave
xor
xlat
sbb
loop
testb
stos
arpl
jp
mov
mov
push
in
inc
rcrb
push
in
mov
xchg
or
int
jne
jbe
std
gs
mov
repnz
movsl
xchg
rcrb
data16
out
lods
loopne
mov
pop
mov
imul
cmp
xchg
dec
adc
pop
outsb
sbb
push
mov
sarl
dec
mov
and
add
mov
nop
mov
rclb
inc
xchg
mov
and
cli
cmp
int
sbb
fdivrl
pop
gs
rol
inc
push
cmpsb
jmp
pop
lea
in
xchg
imul
out
cmp
out
or
mov
mov
lret
pop
sbb
mov
stc
pop
push
std
pop
and
push
adcl
ja
nop
sti
aad
sub
cmp
push
idivl
icebp
icebp
enter
sub
sbb
lods
and
imul
int
jge
jg
push
and
in
mov
notl
sarb
les
mov
xlat
lds
or
sub
mov
push
cmc
mov
and
lds
push
popf
dec
mov
sub
pop
cld
insl
mov
pushf
sbb
xchg
push
inc
aaa
out
gs
mov
jge
out
les
jo
jno
imul
add
xor
loope
scas
jno
mov
test
and
mov
mov
movsb
mov
and
push
arpl
dec
pop
fs
adc
out
andl
xchg
divl
mov
les
and
outsb
pop
mov
ss
call
fs
dec
pop
xchg
add
push
mov
scas
mov
push
test
inc
xchg
and
nop
in
clc
xor
pop
sbb
mov
rcrl
xchg
sbb
add
mov
aas
std
rcrb
int3
scas
mov
push
cld
add
xorb
loopne
dec
push
jge
stc
fsubrs
pop
pop
daa
mov
jns
ret
call
ljmp
outsl
insb
inc
add
or
push
cmc
mov
notl
jns
daa
sub
mov
push
mov
adc
dec
mov
dec
lret
sbb
pop
add
dec
test
pop
insl
push
js
push
push
xor
stc
rorl
test
cmp
stc
fcoml
adc
int3
mov
stos
jns
cmp
fcmovnbe
outsb
int
and
mov
scas
jns
pop
les
mov
inc
push
out
sbb
jb
or
dec
scas
movsl
pmullw
in
iret
popa
aam
jno
cmp
fdivp
sub
xchg
rcll
cltd
loopne
jle
push
test
xchg
pusha
xor
jge
fadd
in
sub
mov
mov
inc
and
stos
jl
or
mov
in
pop
push
jmp
xor
dec
sbbl
les
adc
imul
inc
dec
xor
add
lret
sarl
sub
mov
addr16
lock
cld
pop
push
cmp
jbe
pop
mov
inc
mov
adc
sbb
inc
pop
adc
lds
rolb
cmpsb
repnz
lods
pop
movb
dec
lods
xor
pop
cli
shll
scas
mov
test
movsb
arpl
cmpsb
and
or
fbstp
and
xchg
dec
or
scas
ret
cmp
xor
lcall
pop
pop
jno
test
sub
enter
outsl
or
xchg
jo
inc
filds
dec
xor
push
pop
inc
cmp
outsl
and
movsl
mov
scas
movsb
in
xor
and
mov
cli
mov
inc
fsubrs
lock
jbe
push
movsw
js
pop
xchg
xchg
cli
es
cmpxchg
push
movsl
popf
mov
nop
xchg
out
cmp
dec
lock
scas
cmp
mov
adc
and
pop
loopne
movsb
je
dec
sbb
in
scas
or
cmpsl
icebp
out
jecxz
mov
and
lods
fstps
lahf
xor
bound
adc
popa
mov
aas
imul
ret
cmc
ret
push
das
push
loopne
pop
fildl
lret
mov
mov
mov
add
pushf
mov
push
push
dec
mov
pop
adc
iret
stos
in
es
lods
hlt
mov
sbb
cmpsl
add
sub
mov
inc
int
sub
fcmovnb
adc
dec
mov
cmc
pop
mov
xor
sub
sbb
jmp
imul
xchg
fldenv
mov
cmpsb
sbb
subb
sahf
xchg
movsb
gs
push
mov
jl
dec
in
mov
imul
shl
js
xchg
cs
adc
lret
cld
sbb
mov
fsubr
dec
mov
fldcw
inc
inc
idiv
hlt
mov
outsb
movsl
mov
jnp
fld
jns
insl
cwtl
push
cmpsb
jg
adc
sti
mov
jbe
sub
sub
jbe
ret
inc
add
sarl
dec
loop
or
sbb
mov
push
mov
push
hlt
cmp
dec
pop
clc
js
xlat
sub
pushf
cmpl
mov
lahf
arpl
daa
jge
insb
inc
xor
jmp
aad
imul
xor
out
aam
pop
out
or
test
xchg
lahf
fbstp
into
arpl
loop
aam
scas
mov
jle
aad
cmp
mov
ja
xor
dec
jecxz
mov
aas
movsl
stc
out
mov
ss
sbb
mov
lret
sbbl
xlat
jbe
jb
daa
stos
or
xchg
pop
mov
adc
enter
adc
jo
fdivr
mov
jns
in
outsl
cmc
in
inc
je
sbb
daa
lea
xor
jecxz
fwait
dec
cmp
pop
pop
mov
jmp
ss
arpl
jae
pushf
mov
fidivrs
fs
outsl
aaa
cmp
mov
bound
adc
rcl
idivb
xor
call
daa
sub
xor
out
mov
xor
test
mov
test
sub
movl
movsb
int3
xabort
mov
std
stos
arpl
mov
repnz
cld
ret
cltd
mov
push
cltd
jb
rclb
mov
xchg
sti
insb
xchg
pop
push
cmp
add
xchg
jns
mov
xor
sub
outsl
movsl
dec
push
jge
fistl
into
filds
rcl
orb
push
sbb
inc
push
jge
xchg
lods
add
insl
shll
lds
add
lret
mov
pop
mov
stos
loopne
adc
xchg
bound
xor
mov
call
xchg
and
ja
ret
xorl
push
push
cmpsl
xchg
nop
mov
fdivl
push
cmp
jmp
jns
rcrl
pop
ja
arpl
test
push
and
fldl
shrl
stos
jnp
in
ja
fcmovnb
push
pop
incb
stos
push
ret
xchg
mov
xor
adc
sbb
xchg
pop
imul
aad
into
push
dec
cwtl
rolb
push
stos
fwait
aas
sub
sub
adc
jae
cmp
in
mov
rorb
sub
cmp
fisttpll
imul
cld
ret
ret
mov
aaa
mov
ss
mov
dec
stos
mov
jecxz
xchg
mov
movzwl
add
repnz
shlb
into
js
xchg
das
test
mov
enter
cmp
inc
arpl
mov
sub
jno
ret
es
ret
daa
pop
xor
push
xchg
mov
or
dec
leave
mov
dec
pop
jle
rorl
pop
xchg
aam
cmpsl
popl
enter
and
xchg
inc
divb
inc
xlat
sub
orb
or
fs
mov
sbb
pop
imul
ret
cmp
adc
mov
jge
cmp
and
rol
int3
cli
pop
push
fdiv
xchg
mov
add
orb
subl
push
sbb
add
lock
mov
and
stc
or
mov
icebp
xchg
mov
sub
test
pusha
cmp
fstps
push
loopne
leave
insl
xchg
pop
push
sahf
mov
sarb
pop
roll
jbe
stos
jle
cmp
mov
pop
xor
cmpsb
pop
ror
sahf
data16
jg
xlat
xchg
pop
inc
sbb
movsb
inc
mov
movsl
adc
mov
out
lahf
enter
or
mov
cld
inc
xor
imul
pop
faddl
mov
or
mov
inc
icebp
cmpsl
fbstp
dec
push
out
push
loopne
fsubrs
orb
xorb
cmp
enter
mov
rcrl
call
lock
inc
sti
push
adc
fs
push
fwait
loop
lock
cmc
ds
mov
imul
adc
mov
shll
lea
loop
roll
arpl
jmp
sub
add
rcll
jno
or
in
jecxz
movsb
pop
fbld
stc
cmp
mov
push
mov
pusha
shlb
frstor
out
dec
xchg
jo
mov
lods
or
shlb
rcrl
xchg
dec
mov
call
orl
insb
xbegin
lods
adc
scas
sub
push
in
dec
lcall
sub
mov
roll
aaa
mov
adc
fstl
inc
jbe
sarl
cmp
movsl
pop
xchg
xor
push
lea
popa
mov
sub
popa
mov
dec
test
int3
fwait
push
lock
push
mov
push
or
dec
movsl
and
mov
pop
adc
mov
sbb
cwtl
mov
xor
arpl
push
inc
push
jecxz
mov
sbb
pusha
loope
mov
push
mov
cli
sbb
pusha
lea
sub
pop
dec
dec
sub
cmp
push
jns
repz
in
adc
or
out
xchg
cwtl
sbb
pop
inc
sti
daa
pop
adc
sub
xchg
mov
fisttps
shlb
out
mov
mov
nop
pop
sahf
loope
xchg
mov
repnz
neg
jae
int
rcl
test
into
mov
mov
mov
dec
xchg
cs
dec
jge
out
fadds
sub
std
hlt
cmp
int3
out
hlt
cs
jge
ds
inc
push
dec
in
and
pop
mov
pop
negl
mov
pop
jae
xor
cs
stc
into
clc
or
lcall
roll
movsl
and
jae
push
adc
sub
jg
rolb
mov
arpl
jne
mov
sbb
hlt
into
mov
xchg
imul
fstpt
inc
je
lahf
movd
popa
je
lds
nop
dec
arpl
push
loopne
sbb
aam
cmpsl
sti
or
jp
icebp
or
sbb
cmp
xor
push
xor
add
mov
sbb
rcll
inc
dec
ljmp
or
sbb
and
jae
adc
push
test
sbb
xorb
and
testb
xor
movsb
push
or
sti
enter
nop
or
xchg
daa
rclb
pusha
jo
cli
dec
mov
ds
call
pop
xor
test
jne
or
jb
imul
test
std
andl
lds
sub
aas
add
or
ds
addb
adc
add
lahf
cs
mov
lea
insb
add
xchg
xor
sub
or
and
lods
sbb
xchg
mov
popf
mov
push
fs
push
mov
lret
mov
hlt
xor
pushf
int
and
mov
fmull
xor
sub
adcl
add
pop
lcall
pop
in
int
adc
lds
inc
data16
stos
out
jo
hlt
lret
pushf
mov
add
push
out
mov
mov
ds
sbb
xchg
and
inc
repz
dec
cld
push
mov
and
xchg
add
dec
out
imul
mov
sbb
mov
inc
pop
inc
mov
jg
xchg
sub
lcall
push
das
push
sub
inc
mov
jmp
cld
lds
mov
mov
rcr
jno
xchg
je
outsl
aad
xor
out
push
clc
mov
xor
push
iret
fsubrl
in
lahf
call
dec
sbbb
xchg
xchg
sbb
xchg
push
sbb
mov
adc
xor
inc
movsl
lock
leave
dec
mov
dec
sbb
pusha
jne
dec
movswl
xor
test
mov
xchg
cmp
out
iret
leave
cli
sbb
push
dec
or
mov
ret
iret
imull
test
inc
fucomi
dec
loop
push
sti
or
cmp
and
out
adc
dec
xor
icebp
push
add
jnp
out
lcall
dec
jae
push
sarb
pop
sub
roll
fistps
mov
hlt
inc
pop
mov
pushf
andl
mov
cmp
dec
repz
sarb
mov
mov
sti
add
sub
sbb
hlt
lret
fistl
lea
cmc
jg
data16
dec
stos
dec
xor
sarl
pop
mov
push
imul
in
cwtl
lret
jno,pt
ds
xchg
push
js
jne
loopne
or
xchg
mov
mov
in
lahf
lahf
mov
push
cltd
shlb
in
cmp
push
fs
ret
lret
iret
mov
jecxz
aas
adc
mov
sar
mov
mov
rorb
dec
cmp
iret
stos
cmp
push
into
in
ficoml
popa
shlb
xchg
testb
xor
adc
notb
test
leave
lret
jb
jbe
cmp
aam
dec
test
jnp
lret
inc
lods
push
push
xchg
pop
sub
aas
cmp
push
sub
jb
and
sub
outsl
push
movl
jmp
sbb
adc
leave
add
dec
rclb
mov
loope
into
and
push
adc
jl
jp
ja
cld
adc
insl
xchg
into
sub
mov
xor
cli
aad
clc
push
dec
shlb
dec
and
in
in
cmp
in
stos
hlt
cmp
add
mov
popf
pop
fmul
jmp
sarl
mov
leave
inc
lcall
sahf
in
or
jmp
mov
cmp
popa
shll
enter
mov
cmpsl
mov
mov
popa
and
mov
cmc
and
out
add
add
daa
addr16
ret
xor
enter
aaa
lret
call
jge
mov
icebp
sbb
jmp
ret
insb
es
je
cltd
fsub
cmp
xor
imul
xchg
imul
xchg
cmp
addb
in
stc
bound
out
andl
lahf
mov
ret
mov
xlat
xchg
jp
inc
ret
pop
int3
cmp
rcr
push
push
xor
cmpsb
pop
push
sbb
add
bound
in
je
nop
pop
imul
lcall
xchg
push
xlat
xor
arpl
sbb
and
dec
push
mov
mov
cmc
test
lock
sub
xchg
cmc
cmc
sub
push
fld
jbe
adc
jnp
cmp
movsb
add
fwait
cmp
push
sbb
xchg
fistps
outsl
pop
sahf
movsb
pop
fs
lds
or
adc
or
xchg
mov
xor
flds
jo
out
sub
clc
fcoms
arpl
push
test
mov
and
mov
iret
or
in
xchg
into
mov
or
inc
and
cmc
sbb
stc
in
es
add
loop
add
jnp
sbb
cwtl
jmp
scas
mov
mov
push
lahf
aad
mov
cmp
or
mov
or
or
push
xor
jl
push
mov
loop
lds
loope
add
sbb
fnstsw
lea
adc
push
sbb
ljmp
jmp
jo
jp
sbb
mov
insb
test
popa
loop
js
adc
inc
mov
cmpl
mov
cli
cmpsl
insl
iret
in
mov
js
xor
pop
lds
mov
fdivl
push
jecxz
lahf
jnp
push
mov
cmp
jg
cmpl
or
orb
gs
jecxz
mov
mov
jl
lds
pop
roll
loopne
cmp
mov
aas
dec
adcl
adcb
ror
insl
push
push
inc
add
ret
mov
xchg
fsubrs
pop
movsl
xchg
lds
out
test
push
cmp
mov
jmp
icebp
inc
js
xor
mov
mov
cmp
mov
dec
into
stos
shrl
mov
mov
loopne
cli
fs
insb
cmp
xchg
xor
loope
cwtl
and
xor
lods
push
jmp
push
pop
or
adc
add
movb
xlat
int3
xchg
mov
jecxz
lret
in
or
or
lahf
xor
xor
andl
jb
jns
mov
cmp
mov
pop
lds
dec
lahf
lods
add
aad
popf
sbb
xor
aas
or
adc
out
cmp
repnz
fidivl
scas
dec
int
dec
aam
gs
sub
ss
cld
insl
mov
out
and
xchg
pop
cld
leave
adc
sbb
push
inc
or
lds
nop
nop
pop
cld
dec
lret
pop
gs
cmp
adc
sbb
push
adc
push
or
scas
sbb
test
mov
and
push
in
mov
call
ret
or
dec
adc
inc
jns
push
out
xchg
inc
es
sub
lcall
add
push
std
or
jne
xchg
ficomps
mov
jno
icebp
add
test
mov
mov
inc
cs
imulb
inc
imul
mov
mov
or
mov
adc
lods
movsb
jne
nop
cmp
and
or
mov
mov
dec
in
mov
pop
fidivs
ficomps
add
icebp
sub
jmp
xlat
xor
fisubs
outsb
mov
and
mov
cmc
or
ljmp
mov
out
pushl
cmp
push
push
out
icebp
xchg
or
insl
cli
add
and
insb
cmp
popf
loop
cmp
outsl
mov
lahf
clc
push
pushf
push
scas
aaa
jo
pusha
xchg
mov
clc
add
mov
or
push
and
subl
popa
clc
sbb
mov
and
sub
fbld
rol
ret
shlb
repz
into
fnstcw
or
lods
xchg
mov
fldl
xchg
ds
pop
fs
mull
jbe
rcll
adc
sbb
in
ss
mov
mov
jae
test
ret
inc
push
imul
addr16
push
or
pop
mov
imul
xorb
cld
rcll
or
cmp
cmpsl
inc
inc
arpl
repz
inc
stc
cmp
inc
dec
lret
mov
adc
fmuls
push
test
or
push
int3
pop
fistl
mov
aam
dec
dec
pusha
lahf
pop
xchg
jge
adc
adcl
sbb
hlt
rol
lds
xlat
lds
sahf
xor
aad
in
and
fwait
jle
adc
mov
lea
mov
jae
subl
xor
in
jecxz
ds
xchg
orl
ds
xchg
mov
movsl
mov
pop
dec
or
cmpsb
rcrl
jl
fcomps
fwait
inc
or
fbld
dec
inc
add
jecxz
inc
cmpsb
loop
lock
mov
dec
pop
ss
and
sub
fsubrs
in
pushf
bound
iret
pop
push
adc
xchg
movsl
mov
cwtl
js
mov
leave
hlt
push
sahf
xchg
pop
movsl
add
repz
or
mov
outsl
ljmp
stc
sub
stos
ret
add
mov
mov
rep
shll
repz
mov
fsubl
xor
mov
push
pop
dec
out
sti
insl
jle
shll
sub
loope
mov
or
xor
addr16
fdivs
cmp
inc
or
add
push
push
mov
filds
sarb
cmpsb
test
repz
test
jo
ds
sti
cmc
out
pop
sahf
loopne
in
push
fmuls
fwait
leave
out
mov
addb
mov
sub
frstor
pop
hlt
inc
xor
dec
sbb
push
sbb
cmp
leave
das
push
fcom
fcomp
xchg
sahf
into
jbe
dec
adc
mov
mov
xchg
mov
push
dec
jp
in
in
shlb
pop
jmp
cmp
cmpsb
ret
add
repnz
or
add
ljmp
add
jo
xchg
and
push
push
jge
push
repnz
fdivs
xor
lods
data16
into
aam
fistpll
mov
push
out
int3
sub
mov
ja
dec
lds
fimuls
sbb
fsubs
push
into
pop
sbb
xor
sub
inc
in
test
xchg
mov
or
or
push
call
mov
mov
dec
push
ret
test
negl
xchg
out
xchg
out
sub
repnz
dec
xchg
leave
push
lcall
push
cmpb
pop
inc
mov
dec
pop
cmp
imul
mov
std
into
outsl
cmpsb
pop
and
or
or
lods
in
roll
mov
pop
mul
xlat
subl
fld
cmp
popa
jne
rorb
mov
inc
shrl
fsub
xor
in
in
test
lds
cmc
dec
lods
sbb
adc
and
inc
setle
cmp
add
sub
dec
mov
mov
arpl
and
add
or
lcall
scas
jle
push
icebp
aas
repz
sub
mov
add
inc
and
stos
dec
dec
mov
cmp
and
in
insl
imul
cmc
lret
ret
call
daa
xchg
sub
pop
mov
cmp
in
push
jecxz
repnz
aaa
in
loop
xor
rcrb
loop
fsubr
push
push
pop
fs
jnp
sub
mov
mov
lret
and
xorl
mov
xor
outsl
dec
lods
cmc
iret
lcall
lock
jno
mov
or
popf
xor
or
jnp
mov
outsb
mov
dec
pop
push
mov
push
mov
int
push
imul
lock
mov
inc
cwtl
inc
xor
push
xchg
xchg
add
xor
and
push
cltd
pop
xchg
out
xchg
faddl
out
pop
jle
in
mov
insl
mov
dec
sub
gs
dec
imul
push
push
xchg
in
push
les
mov
ss
cwtl
pop
shll
adc
movsl
push
enter
add
arpl
pop
inc
pop
in
sbb
or
lahf
pop
sub
push
sti
mov
aad
test
xchg
cld
das
add
and
xchg
outsl
mov
ss
cmpsb
or
xchg
js
push
movsb
leave
daa
push
inc
outsl
lcall
repz
mov
ljmp
imul
cmp
fnstcw
add
add
mov
aas
pop
leave
out
and
popf
mov
sub
mov
push
shrb
int
xchg
push
test
clc
fmuls
outsb
mov
mov
mov
sbb
mov
and
and
mov
jo
mov
cmpsb
sub
cmp
jmp
pop
arpl
mov
add
jnp
ljmp
pop
cmpsl
xor
movl
fwait
xchg
js
sbb
mov
cmpsb
mov
sub
or
lret
notl
es
and
fwait
xor
scas
push
stos
xor
jb
adc
or
or
xchg
add
jg
cltd
bound
ss
movsb
cmp
roll
mov
mov
mov
push
pop
mov
push
dec
insb
pop
mov
push
fsubrl
stos
mov
sub
adcb
xchg
sbb
xlat
mov
fnsave
stc
fldcw
or
out
add
push
add
lock
mov
out
insl
xchg
push
sbb
dec
jge
lock
sbb
inc
adc
stos
xchg
and
ret
rclb
adc
and
sbb
repnz
cld
inc
or
shll
icebp
sbb
adc
in
ja
push
imul
sub
fsubrp
cmp
div
in
pop
mov
pop
scas
rep
mov
dec
int3
in
inc
mov
cmpsb
cmp
dec
push
fstp
test
in
loop
cld
inc
sahf
out
cmovs
sbb
loop
insb
shlb
jno
xchg
arpl
push
xchg
mov
xlat
sub
loop
push
push
add
test
xor
fidivrs
popf
sub
test
idivl
mov
daa
addr16
lock
cmp
in
fwait
rcll
inc
pop
cmp
inc
dec
lret
adc
lods
or
std
lods
lds
mov
jle
arpl
push
mov
mov
lea
cltd
test
push
sbb
mov
in
pop
test
testb
inc
roll
jno
scas
xchg
mov
aas
int3
aas
aaa
xor
imul
pop
sub
negb
cmp
fcoms
xchg
mov
cmc
sbb
lret
sbb
fisttpll
or
rorl
sbb
and
adc
decl
cmc
mov
or
mov
or
push
rorl
std
add
jne
out
mov
enter
or
cmpsb
out
mov
fadds
pop
les
insb
mov
xchg
mov
pop
push
in
inc
loope
cltd
js
jno
ror
call
jp
or
paddb
sbb
adc
sbb
sbb
mov
mov
repnz
insb
cmc
sub
loop
in
scas
test
mov
cmp
rorl
cmp
mov
dec
loop
subb
ljmp
or
daa
in
imul
inc
adcb
mov
pop
fst
cs
push
pop
xor
adc
add
imul
or
divb
mov
pop
adc
lds
test
inc
xlat
jae
es
cmp
dec
pushf
lds
inc
movsl
jmpw
inc
add
bound
and
popa
mov
or
add
aad
sbb
aam
pop
dec
inc
mov
aad
out
inc
in
dec
pop
cmp
mov
add
or
inc
mov
pop
lock
repz
fcomp
xlat
outsb
cld
and
scas
mov
dec
push
jge
mov
rorl
cmp
cwtl
push
mov
xchg
ret
sbb
pop
ss
lods
lret
insl
cwtl
xor
dec
xchg
sbb
loope
scas
push
fistl
xor
test
mov
pop
into
scas
push
xor
mov
int3
fadds
aad
jns
jnp
gs
xor
inc
cmpsl
push
mov
mov
push
push
cli
xchg
in
js,pn
aaa
jmp
mov
gs
inc
jno
jno
popf
lods
imul
pop
add
dec
loopne
push
add
mov
inc
xchg
sar
rorl
enter
pop
mov
movl
movsl
sahf
cmp
stos
xchg
rcll
in
cmp
pop
je
xor
clc
sub
icebp
mov
les
jae
push
fwait
pop
or
or
scas
xchg
cmp
mov
jmp
daa
xchg
insl
loope
xchg
imull
adc
repnz
add
negl
leave
adc
jmp
outsb
scas
addr16
or
inc
xorb
mov
pusha
pop
jecxz
xchg
jle
fsubrs
hlt
call
arpl
mov
dec
mov
jae
das
sbb
stos
dec
addr16
outsb
xor
mov
ror
out
addr16
andb
xchg
ss
test
and
pop
cs
sub
inc
xchg
out
cmp
hlt
dec
jns
push
inc
xchg
or
push
xor
or
jecxz
push
mov
out
popa
in
jle
mov
lahf
testb
inc
je
cld
in
mov
icebp
test
mov
jmp
cld
rorl
sub
in
mov
out
jmp
cs
xchg
inc
cmp
jno
pop
mov
xor
mov
js
push
lret
rep
lret
xchg
movsl
dec
lahf
loope
hlt
test
jp
jp
mov
xchg
and
fwait
sahf
cwtl
mov
xchg
mov
ljmp
dec
cmp
in
rcrl
mulb
xor
mov
dec
mov
pop
xor
jns
les
aaa
or
jno
std
sahf
pop
fwait
inc
push
stos
lods
xchg
pop
rorb
xchg
int
sbb
add
or
sub
xchg
dec
inc
roll
or
iret
mov
jno
jb
mov
sub
sbb
mov
mov
mov
fiadds
vpaddd
sub
inc
fiaddl
std
mov
mov
dec
mov
pop
pop
call
xchg
xor
gs
push
addr16
ficomps
loopne
in
hlt
out
push
jnp
mov
rcl
insb
shrl
push
or
popf
fimull
jb
lea
push
jp
in
ds
mov
das
xchg
in
rol
xchg
xor
mov
out
adc
arpl
mov
mov
cmp
test
cmp
push
pop
and
mov
lds
pop
test
sbb
fwait
jne
adc
out
jne
jae
add
mov
mov
jnp
ffreep
or
jo
jle
jns
aaa
sub
out
sbb
lock
sbb
add
or
test
cs
xchg
aaa
outsl
cmp
popl
stc
jo
pop
pinsrw
cmpsl
xchg
adc
xchg
mov
fwait
scas
adc
ja
mov
lods
mov
int
adc
cld
xor
out
mov
fists
addr16
cmp
add
push
lcall
xor
jb
and
lret
testb
jne
inc
sahf
addr16
sbb
icebp
mov
pop
push
lds
movsl
sub
frstor
rcrb
lds
movsl
cld
mov
xor
xor
lahf
add
xorl
loopne
das
jg
inc
sub
fisttpll
jmp
repnz
aam
notb
jle
out
or
mov
xchg
dec
ficoml
fcmovne
jnp
insb
push
ficoml
je
leave
mov
push
inc
xor
mov
jle
stos
jnp
rcrb
das
pop
add
push
pushf
fmulp
add
sarb
adc
push
xor
mov
mov
sub
xchg
mov
stc
pop
stc
test
js
or
ret
and
leave
inc
push
nop
xchg
mov
sahf
xchg
ja
movsl
push
jbe
in
xlat
mov
inc
repnz
shlb
fisttps
xchg
cmp
jno
jo
cld
cmp
mov
cltd
jno
movsb
mov
lock
cld
leave
pop
xor
xor
mov
ror
flds
sbb
and
inc
pop
xchg
mov
jge
lahf
cmc
scas
push
sub
iret
jmp
dec
imul
insl
call
push
and
lock
mov
and
pusha
xlat
rcrl
sbbb
mov
out
dec
mov
jl
insl
xor
leave
pop
dec
leave
mov
xchg
out
data16
sbb
dec
and
push
mov
pushf
fidivs
imul
or
es
inc
inc
cmp
mov
mov
or
push
lcall
cmp
cmp
rol
mov
lret
cmp
inc
cmp
dec
xchg
les
xor
dec
dec
mov
pop
mov
fstpt
ficompl
aam
aas
jb
sbb
nop
int3
aaa
adc
cmp
lds
mov
xchg
jmp
push
pop
arpl
dec
xchg
mov
push
push
mov
fwait
push
cs
mov
popf
adc
inc
into
add
mov
or
orl
clc
enter
sti
orb
aad
lods
into
inc
xchg
cs
outsl
outsb
or
in
outsb
and
inc
pop
inc
idivb
shll
int3
icebp
outsb
add
in
inc
nop
mov
sbb
mov
das
rep
pop
pop
in
loopne
popf
add
or
es
arpl
xor
pop
in
inc
repnz
push
cmc
pop
dec
fildll
mov
adcl
fdivr
dec
pop
add
pushf
and
and
xor
std
hlt
popa
fadd
mov
sub
dec
mov
popa
push
movsb
ja
jbe
dec
push
jnp
mov
push
jg
or
test
sbb
mov
popa
out
js
adc
xor
gs
inc
pop
leave
ret
cmp
and
aaa
in
fnstenv
dec
add
fnstcw
xchg
shll
sahf
xor
insl
std
push
sti
push
inc
ret
out
xchg
xchg
push
jge
sub
adc
inc
add
imul
mov
scas
push
push
mov
pop
sub
mov
stc
mov
in
movsl
sbb
mov
dec
addr16
add
mov
addr16
stos
push
adc
pushl
into
pop
inc
jbe
jl
and
pop
in
cmp
xlat
sub
daa
ljmp
sbb
lods
aad
mov
aas
push
mov
jg
aad
stos
push
gs
lock
sar
std
fadds
jb
lds
push
jno
sbb
out
fisubrl
or
pop
in
daa
sbb
aam
add
sub
pop
mov
fimuls
pop
in
xchg
pop
xor
shrl
js
add
pusha
int3
jl
or
sub
movl
fstps
cli
shlb
test
outsl
add
dec
jmp
fucomp
xor
push
les
out
cmp
imul
rcrb
adc
out
jne
jg
dec
jbe
cmp
sub
jo
xor
in
push
pusha
sub
xchg
xchg
and
jg
mul
loopew
inc
inc
pop
cmp
and
pusha
leave
push
out
movsb
sbb
sub
mov
pusha
test
lcall
xor
js
popf
lret
pop
or
or
mov
dec
enter
jg
add
and
mov
outsl
jnp
inc
sbb
cld
or
in
lds
inc
lret
xchg
or
and
mov
push
call
and
test
or
ss
sbb
stos
dec
shlb
push
icebp
add
insb
pop
cs
icebp
xchg
mov
dec
xor
add
push
xor
pop
xor
movsb
repnz
fwait
mov
popf
neg
and
cmp
mov
enter
and
leave
lret
pop
push
test
cmp
jno
mov
or
cmp
inc
popf
test
sbb
call
mov
test
xor
inc
fwait
test
mov
mov
popa
aaa
or
mov
inc
mov
iret
movl
add
orl
out
push
xchg
sarb
xchg
xor
jecxz
mov
int
insb
pop
and
inc
push
hlt
mov
in
jbe
movsb
sub
addr16
pop
cmp
inc
cmpsl
jo
push
scas
push
pop
movsl
pop
je
push
mov
and
pushf
push
sub
mov
jno
jo
pop
mov
cmpsl
das
subl
test
cs
adcb
arpl
out
cmpsl
jg
inc
lret
clc
imul
or
mov
lods
loope
repnz
sub
negb
dec
pop
mov
mov
lock
pop
testl
pop
pop
mov
cs
sarl
mov
movl
xchg
sbb
lahf
mov
xchg
mov
xor
or
or
clc
dec
sahf
pop
add
lods
insl
dec
jbe
stos
mov
daa
jno
idivl
stc
pop
addl
push
mov
leave
mov
lret
ret
push
cmp
adc
mov
pop
jl
lods
pop
add
push
out
cmp
fwait
sub
clc
mov
aas
and
dec
jecxz
imul
sbb
loopne
rclb
ljmp
mov
push
adc
test
push
fsubl
mov
or
int3
push
fcoml
mov
lret
int
shll
dec
inc
stc
clc
stos
daa
mov
cli
mov
dec
cmp
adc
jmp
aaa
xchg
sti
lock
sub
cmp
test
xor
test
mov
pop
mov
xor
rorl
dec
xchg
mov
pop
out
push
faddl
cmc
xor
aam
mov
cwtl
sub
rcrl
aas
push
in
sub
cmp
adc
sbb
xchg
cmpsb
out
mov
std
mov
pop
adc
repz
jp
pop
jbe
stc
pop
or
rclb
dec
xchg
add
sbb
push
lods
dec
or
mov
push
in
pushf
jnp
mov
in
out
sahf
pop
mov
and
push
and
jp
loope
mov
jb
mov
pop
and
rcll
pop
setne
sub
push
cli
sbb
scas
sub
pop
inc
aaa
rolb
loope
pusha
pop
adc
jne
mov
mov
mov
enter
mov
dec
hlt
jge
xor
sbb
inc
aam
push
pop
sub
ds
xor
sbb
xor
and
inc
movsl
pop
mov
xor
into
fcomip
xor
ret
cli
ret
subb
lds
mov
xor
mov
sub
add
enter
sti
jns
loop
sub
push
shlb
inc
rclb
arpl
aam
push
mov
inc
sti
jne
cmovp
xor
pop
add
roll
lret
jns
ja
cmp
add
insl
pusha
mov
jge
pop
imul
stos
out
dec
inc
orb
test
into
inc
aaa
push
push
rcrl
out
dec
adc
lcall
das
repnz
popf
out
and
xor
lock
cwtl
in
jae
pop
jae
mov
xchg
or
sub
in
hlt
int
notl
pop
add
clc
imul
outsl
jb
add
std
bound
inc
inc
add
mov
cmp
mov
inc
adc
call
xchg
lods
push
shll
jnp
outsl
adc
adc
arpl
out
add
enter
add
and
fs
add
adc
fnop
adc
test
int
ficoml
cmp
jle
cwtl
jno
adc
stos
or
xchg
xor
icebp
dec
mov
sub
and
jecxz
fimull
popf
pop
mov
xchg
jge
add
hlt
jmp
sbb
jl
pop
icebp
xchg
jo
mov
loop
mov
jle
mov
pop
js
inc
sub
scas
mov
pop
dec
popa
sub
out
xor
test
mov
jl
rorl
jge
jle
or
cmp
faddp
pop
push
cmp
scas
lods
scas
rolb
adc
mov
jne
mov
cmp
push
push
pop
push
sbb
jmp
fidivrs
cmc
cld
xchg
dec
icebp
lock
mov
lods
cwtl
aas
imull
scas
aam
mov
movsb
dec
push
mov
roll
rcrb
out
xor
pop
jecxz
ds
jns
jg
out
mov
lods
loope
add
lock
xor
pop
rcrb
xchg
imul
add
in
add
das
xor
imul
testb
aad
pop
in
out
mov
stos
pop
rcrb
push
enter
insb
or
xchg
fsubl
fists
arpl
jae
sbbb
dec
call
stos
jecxz
insl
movsb
fcom
insb
lcall
adc
jae
stos
cmp
aad
loopne
xor
or
outsl
mov
mov
inc
pop
call
mov
lock
pop
rcll
stc
push
popa
inc
rcrb
and
pop
pop
jge
stc
sub
push
jnp
push
loop
movsl
dec
or
stos
in
add
insb
into
rcll
pop
bndstx
aas
jne
cmp
mov
fnstenv
sbb
add
add
inc
imul
shl
inc
sub
into
idivl
or
idiv
daa
int
sub
dec
xchg
mov
rorb
add
mov
adc
popa
fstpl
stos
and
test
popa
sbb
loopne
bound
int
xbegin
aad
push
mov
push
aas
enter
push
push
ds
test
xchg
leave
dec
cmp
out
mov
sub
ret
xchg
enter
es
lcall
add
paddusw
adc
scas
sbb
sbb
cmp
lea
call
jno
push
jecxz
lods
mov
test
dec
mov
jl
or
jno
aas
mov
daa
jmp
popa
insl
adc
pop
fwait
push
xor
lcall
xchg
adc
mov
mov
xor
push
pop
dec
mov
xor
xor
rclb
mov
xor
test
cld
adcl
pop
lods
pop
or
cmp
cwtl
std
lret
sub
lods
movd
xor
sub
add
rcl
stos
scas
and
mov
sub
js
lahf
cmc
jns
inc
push
inc
leave
push
jbe
push
xlat
pop
mov
jb
cld
xor
lea
cli
pop
push
movsb
orl
decb
and
inc
jl
jns
cltd
push
add
push
divb
es
in
fcompl
push
mov
fcmovbe
dec
cmc
test
jnp
mov
pop
pop
cmp
jge
cld
fcomip
clc
out
jae
fcoms
repnz
add
fiaddl
insl
or
mov
mov
push
jmp
jl
in
dec
adcl
in
inc
mulb
aas
das
cmpsb
fisubs
outsl
adc
pop
inc
mov
jle
in
push
pop
fstp
mov
cwtl
or
inc
fs
jno
pop
add
ret
imul
or
sbb
shlb
lea
mov
mov
and
popl
mov
faddl
addr16
flds
inc
sub
push
mov
pop
into
lret
cs
push
lods
jo
or
cltd
jo
insl
push
mov
cmp
push
jle
cli
mov
mov
xor
mov
and
int3
add
test
or
xor
imul
cmp
mov
or
fisttpll
mov
ret
cmp
and
cmpsl
jbe
pushf
fidivl
sbb
lods
push
sarb
push
repz
xor
dec
dec
outsl
fistl
scas
insb
repnz
jne
xchg
cmp
pop
sbb
sbb
xor
cmp
in
in
xchg
pop
fs
shr
sbb
xchg
js
push
dec
mov
xchg
arpl
mov
popa
inc
push
add
sbb
sub
daa
ja
lea
cmp
insl
and
test
or
adc
dec
fists
inc
test
ljmp
dec
in
cmp
xorb
push
xchg
in
aad
mov
aas
enter
xor
xchg
data16
inc
lret
xor
push
fstps
sbb
inc
aaa
xor
sub
pop
shrd
test
push
stos
cmp
jp
inc
shll
push
sub
cli
insb
cmp
mov
xor
fs
mov
cmp
pop
int
out
xchg
jg
sahf
sub
add
loope
cmpsl
shrb
adc
xchg
aam
adc
and
cmp
jno
pop
cmp
lret
or
mov
inc
test
mov
pop
push
and
xchg
outsl
arpl
lahf
or
lcall
xchg
fistpl
and
daa
add
pop
rolb
rorb
test
ljmp
adc
int
pop
in
push
xor
xor
daa
pop
movl
add
test
sub
int3
popa
pusha
or
cld
pop
les
nop
jge
xlat
push
cltd
leave
fstps
mov
dec
add
aad
jnp
push
mov
or
xchg
mov
test
fistps
xchg
mov
push
lretw
mov
scas
cmp
scas
movsb
aaa
inc
sub
fsub
pop
jp
cmp
pop
sbb
mov
and
and
pop
popa
pusha
adc
fisubrs
dec
xorb
ljmp
dec
loop
push
inc
cmpl
mov
xor
enter
daa
aad
jge
mov
pushf
iret
out
cmp
cwtl
fcmovnb
add
ja
aad
stc
or
mov
push
rol
bound
mov
cltd
fcmove
cli
outsb
orl
inc
negl
dec
mov
in
inc
jl
fstpl
and
aam
scas
aam
loop
sbb
mov
jns
lcall
mov
mov
jl
push
imul
jo
jae
inc
hlt
jne
cmpsb
inc
lds
cmp
out
fnstsw
sub
cmpsl
mov
cmp
shlb
inc
xor
dec
mov
test
adcl
inc
dec
cli
sub
lods
jg
scas
xor
pop
cmp
adc
push
jnp
sub
and
pop
push
faddp
iret
je
jb
sub
xchg
pop
inc
orb
lahf
test
mov
popf
sbb
shr
jb
xchg
add
shlb
and
out
xor
outsl
jg
sub
adc
mov
orl
mov
aad
mov
test
lods
loopne
imul
add
mov
sbbl
jl
icebp
sub
dec
and
inc
mov
mov
push
cmp
repz
cmp
sub
imul
adc
jl
mov
xor
xchg
mov
imul
jl
mov
ret
pop
dec
xor
fistpll
mov
mov
pop
xchg
fwait
data16
mov
mov
decb
dec
cmc
jmp
loopne
dec
imul
jno
aas
sbb
aam
sbb
mov
push
dec
loope
xor
lret
cmp
push
sub
fs
fs
cmp
mov
aam
divb
cwtl
push
or
dec
enter
lahf
movsb
lds
mov
pop
cmpsb
pop
jo
push
push
out
add
ret
jo
jae
xor
mov
and
add
xor
cmc
lret
xchg
gs
cmpsb
dec
inc
rcrb
rcr
jo
out
and
cli
addr16
mov
leave
mov
inc
pop
xchg
jns
out
imul
sub
pop
xchg
icebp
rorl
aas
jge
cwtl
mov
js
out
int
cmpsb
mov
mov
ja
cltd
mov
mov
mov
js
arpl
push
out
mov
lds
test
je
lret
aam
mov
shl
cmp
jp
push
cmp
and
clc
mov
into
ficomps
and
in
cmp
adc
mov
push
sub
mov
sbb
cwtl
sbb
jo
sahf
xor
lods
pop
in
test
cmp
jl
inc
rcr
adc
gs
addl
sahf
push
push
stos
outsl
sbb
pop
mov
xchg
das
adc
out
jne
loop
sarb
dec
sarb
stc
jae
mov
inc
fstpl
int
mov
cmpsb
stos
xchg
es
decl
les
in
pop
push
add
xor
add
sbbb
in
aaa
dec
xchg
frstor
movsl
add
orl
mov
imul
cmp
test
lahf
jnp
push
loopne
adc
pop
push
mov
adc
mov
sahf
pop
mov
xor
xchg
shl
mov
lock
inc
fstpt
lcall
fidivrl
cmp
mov
outsb
push
dec
jg
mov
lahf
imul
stos
outsb
bound
je
jge
arpl
xchg
push
stc
mov
cwtl
xchg
std
pushf
lcall
call
sbb
xchg
test
das
cmp
xchg
push
xor
ja
xchg
repnz
cmp
xor
inc
xor
scas
xor
xchg
test
mov
and
cmp
cmp
out
inc
adc
das
and
pop
in
imul
popf
mov
in
push
aad
mov
cwtl
cmp
dec
call
xchg
jae
enter
mov
fwait
pop
popa
mov
ret
pop
js
mov
sbb
leave
xor
test
or
cmpsl
cli
fldl
xchg
sub
popf
fdivrs
jp
adc
jns
adc
popf
pushf
sub
mov
mov
imul
jl
cmp
push
mov
cmp
mov
lds
mov
xchg
push
insl
ljmp
mov
ss
sahf
ret
dec
test
subb
dec
xor
movsl
mov
mov
int
jl
pusha
movb
jae
push
adc
xchg
movl
sbb
and
es
add
push
repz
dec
adc
ret
dec
xchg
fcmovnbe
fildll
int3
or
mov
insb
push
jle
and
adc
pop
and
dec
out
push
and
nop
es
and
and
adc
stos
jno
data16
xchg
lret
ds
sbb
add
sbb
scas
or
xchg
add
test
aaa
adcb
adc
lods
repz
shr
faddl
jns
scas
xchg
sbb
adc
and
xchg
shll
push
out
push
push
cmp
lods
jg
lods
ja
pop
addr16
leave
je
std
aad
test
fidivrl
icebp
cli
in
stos
or
testb
out
mov
stos
addr16
dec
push
xchg
mov
aas
cmpsl
xchg
cmp
mov
sub
adc
push
lods
xor
ficompl
imul
xor
jno
out
cmp
outsl
mov
pop
imul
fs
int3
adc
push
jl
pop
mov
shlb
sbb
mov
pop
movsb
and
mov
jecxz
and
repz
outsl
mov
or
push
test
iret
out
in
or
cmp
adc
jnp
and
adc
fdivl
cmp
enter
inc
out
repnz
out
fildl
xchg
js
fiadds
xchg
mov
out
mov
out
out
pop
faddl
les
cmpsl
idiv
in
popf
popf
out
hlt
in
arpl
pop
cmpb
stos
adc
cmpsb
dec
popf
sub
imul
jae
je
ljmp
lcall
push
shll
popf
mov
out
pop
ret
push
mulb
test
add
jno
ss
aad
sti
movsb
push
jne
fcoml
iret
iret
xchg
or
pop
ret
adc
mov
cmc
cmovg
pop
mov
inc
pop
xor
lods
outsl
xchg
pop
inc
lret
fstp
add
rolb
call
push
add
jne
or
dec
mov
cmp
pop
stos
or
push
dec
and
adc
fstpl
xchg
push
cmp
pushl
sub
mov
repz
or
stc
loope
lods
sbb
mov
add
mov
cmp
shlb
xlat
mov
add
lds
imull
jle
lret
insl
add
or
sarl
flds
cltd
xlat
mov
and
xor
pusha
xor
sub
ds
xlat
int3
jecxz
loope
xor
popf
and
ja
sti
movsb
sub
test
aad
pop
mov
imul
sub
mov
clc
dec
loope
int
lds
add
push
mov
in
or
sbb
push
in
sahf
pop
dec
xor
pop
sbb
xor
pop
das
fstps
mov
push
pop
imul
ret
dec
hlt
leave
leave
inc
in
inc
data16
mov
add
ss
lods
enter
shlb
dec
xorb
mov
subps
xor
xor
gs
sbb
insl
sub
mov
fs
jl
movsl
cmpsb
add
mov
jno
je
gs
jb
sbb
adc
das
insb
push
jge
in
popf
inc
sarl
and
loop
aaa
cmpsb
repnz
mov
jb,pn
outsl
jns
insb
jge
jl
call
test
ja
cwtl
das
sub
and
daa
sarb
outsb
in
test
int
mov
cmp
sub
ljmp
lcall
and
sbb
cli
call
ss
bnd
push
mov
das
out
das
fmull
jl
daa
fs
push
es
push
je
mov
pop
stos
adc
inc
jno
call
push
les
and
mov
mov
insl
mov
inc
insb
call
rclb
mov
pop
lahf
pop
mov
mov
or
xchg
cmc
cltd
ret
in
daa
mov
add
xlat
pop
enter
and
inc
cmp
xchg
addr16
push
enter
inc
rorl
add
cmp
rcl
mov
adc
scas
jp
addb
adc
jecxz
xor
mov
repnz
pop
repnz
aas
lret
fimull
iret
rcl
mov
push
popa
pop
sub
xlat
push
int3
in
sbb
xor
pop
or
jbe
lea
lret
pop
imul
sub
lods
fsubl
int3
adc
inc
sbb
out
fs
cmp
pop
movsb
pop
xchg
add
jb
push
or
ret
repnz
pop
xor
jge
in
and
or
andl
xchg
mov
pop
pop
push
stos
mov
adcl
xlat
or
push
adc
orl
xor
cli
push
movsb
fdivr
mov
jo
fsubl
enter
and
ja
dec
in
dec
cmc
insl
test
fs
inc
fidivl
jnp
movsl
mov
mov
pop
lock
lret
in
inc
pop
pop
push
setbe
call
xor
mov
lcall
cmp
mov
pop
call
gs
dec
loopne
inc
jne
cmp
arpl
out
or
es
mov
test
jmp
pop
rol
jmp
jmp
rorb
jns
cmpsl
mov
stos
fldl2t
or
jo
or
mov
insl
jne
mull
insl
idivb
lret
adc
xchg
shll
cmp
in
cltd
or
mov
push
inc
cmp
ret
push
pop
sub
lods
icebp
in
cld
push
pop
imull
adc
aad
insl
push
cmpsb
cmp
xchg
enter
pop
fadds
orps
cmp
sub
repz
sbbb
inc
and
push
push
cmp
jne
repnz
stos
and
cwtl
cmp
push
bnd
cld
mov
lret
push
sub
mov
jb
fwait
ret
out
enter
sbb
test
les
mov
out
test
push
xor
adc
in
ja
cmp
enter
ret
cmpsl
ja
adc
mov
sarl
and
test
call
push
sub
and
inc
xchg
jl
loopne
rcrl
xchg
cmp
cmp
dec
out
xchg
arpl
iret
push
jle
clc
mov
outsl
daa
xchg
rcr
fiaddl
icebp
mov
clc
xor
sub
scas
arpl
push
dec
and
test
dec
ljmp
lret
repnz
shll
negb
xchg
or
add
mov
push
dec
test
jg
jb
orb
sbb
popf
lahf
decb
sub
pop
test
pop
notb
test
or
sbb
sub
push
sbb
xchg
in
ret
inc
and
cmp
mov
aad
decb
popf
add
out
sbb
test
les
cmp
inc
jmp
loope
stc
cmp
and
aaa
push
je
int
jb
aaa
jecxz
and
addr16
daa
loope
das
and
mov
and
xchg
rcl
sahf
or
insb
xchg
xor
adcb
les
xor
movsl
rcl
fwait
mov
mov
stc
ficomps
and
jo
arpl
inc
jne
in
fs
mov
add
xchg
fists
lock
push
inc
xor
arpl
inc
xchg
push
jmp
cmp
jno
iret
cmpsb
cmpsl
and
and
xor
mov
test
adc
sti
je
lods
ss
pop
fbstp
repz
pop
ret
xor
decl
mov
and
dec
sub
pop
pop
std
sub
mov
sar
test
addb
out
out
pop
xor
mov
stos
xchg
sahf
jp
jp
popa
rep
push
lods
dec
movsb
enter
leave
add
insl
xchg
gs
in
push
mov
xchg
add
jbe
in
out
lds
xchg
or
test
mov
sbb
mov
dec
je
je
xor
int
gs
movsl
push
out
lret
inc
jae
adcb
add
or
into
sbb
mov
cltd
fists
jno
rol
dec
xor
mov
out
xor
xchg
lods
xchg
mov
cli
push
push
fwait
ret
pusha
rorl
add
lret
ret
push
push
mov
sub
mov
dec
js
imul
dec
in
inc
popa
ja
cld
adc
imul
movsl
or
inc
pop
or
int
mul
rcr
out
call
mov
cmp
dec
dec
xorl
add
and
ja
sbbl
xor
rorb
sti
sti
mov
xor
outsb
mov
pop
pop
dec
jp
pushf
test
sbb
push
inc
mov
cmp
les
rclb
outsl
push
pop
mov
dec
loopne
and
arpl
jb
stos
mov
popf
xchg
cmpsb
ret
subl
in
xchg
icebp
jno
orl
ds
mov
jg
clc
out
sbb
mov
fwait
cld
pop
shll
mov
imul
xchg
cmp
clc
ffree
sub
push
lahf
cmpsb
cmp
adc
into
enter
pusha
in
out
push
dec
xchg
xchg
aam
pop
sti
mov
mov
shlb
enter
sahf
loope
jne
pop
mov
lcall
ds
pop
xchg
sbb
mov
movl
cmc
movsb
adc
pusha
leave
iret
adc
loop
daa
jl
std
cmc
je
fistps
leave
cmp
ja
mov
mov
cmp
andb
sbb
add
lods
arpl
nop
lods
sub
push
sbb
sub
movsb
jp
adc
add
fmull
arpl
cli
dec
cmp
pop
sbb
bound
lods
inc
test
test
jae
orl
flds
outsl
and
ds
inc
cmpl
and
ljmp
mov
xor
int
adc
sbb
dec
cmp
out
fcoms
mov
cmpsl
and
gs
pop
sbb
mov
pop
cltd
ret
mov
call
and
mov
test
jnp
out
test
adc
push
out
mov
xchg
lea
fsubl
data16
dec
les
jmp
xchg
dec
pop
mov
mov
lock
push
flds
ds
mov
test
dec
push
xlat
lea
cmp
and
add
adc
repnz
lds
rcrb
jb
in
icebp
test
push
imul
sub
in
jl
mov
faddl
push
je
ja
mov
pop
test
sbb
mov
in
arpl
dec
sbb
test
jecxz
shlb
mov
jle
push
add
jb
cltd
out
mov
aam
enter
mov
dec
mov
dec
inc
out
mov
cli
out
in
pushf
push
subb
jbe
jp
inc
iret
jae
ds
sbb
stos
test
lock
cmpsl
mov
mov
xor
sahf
jge
jle
adc
push
iret
pop
fdivs
adc
xor
aaa
pop
push
adcl
jne
mov
cmovp
mov
sub
cld
mov
das
in
lods
push
mov
jns
cltd
repz
jo
inc
cld
das
in
or
mov
mov
loopne
xchg
and
addl
sub
data16
jmp
mov
subl
fcomi
mov
jno
cld
out
ret
push
movsb
or
cmc
and
bound
push
push
and
or
jae
adc
fiaddl
inc
pop
cld
push
loopne
out
mov
fwait
add
lahf
xlat
sub
sub
nop
pop
in
addb
aaa
imul
ds
mov
ss
xor
or
arpl
jge
or
sbb
in
adc
insl
cli
adc
mov
dec
lret
cld
push
in
sti
cmp
xorl
fildl
test
andl
sti
jb
mov
into
sbb
rcll
push
pop
xchg
repz
jae
scas
and
add
or
cmp
and
push
jnp
scas
mov
mov
xor
sub
dec
mov
inc
aad
icebp
lret
xchg
out
push
out
mov
push
std
xor
cmpsb
cmp
inc
push
mov
or
out
insl
push
add
popa
inc
xorl
movsl
push
shl
iret
mov
lods
dec
inc
cmp
outsb
mov
shlb
jle
negl
out
pop
stos
dec
push
mov
pop
mov
adc
mov
add
mov
mov
loop
pop
movsb
in
stc
lds
addb
into
iret
mov
je
push
inc
jne
jno
adc
scas
push
scas
inc
xchg
dec
popa
rcrb
or
out
adc
mov
das
adc
shlb
adc
mov
je
out
jo
and
push
addl
int
cmp
je
shll
adc
cmp
sbb
inc
mov
add
jno
jo
mov
lret
clc
imul
xchg
sbb
push
or
push
ret
pop
inc
xor
add
lds
inc
mov
pop
fcompl
mov
adc
pushf
lcall
mov
mov
cmpsb
outsl
push
negb
leave
out
mov
sub
dec
adc
daa
cs
lretw
dec
dec
leave
add
imul
int
add
inc
mov
sbb
inc
jo
inc
inc
inc
nop
sbb
in
outsb
and
sub
aam
push
fildll
ret
push
mov
push
out
pusha
fdivrl
sub
dec
cmp
in
pop
dec
cmpsb
lcall
fs
test
pusha
jp
insl
out
push
mov
lcall
jg
faddl
inc
insl
mov
add
xchg
mov
sbb
ficompl
fsubr
repnz
pop
mov
ljmp
jmp
daa
leave
je
jns
out
sub
cmp
adc
insl
scas
sub
imul
aam
push
cmp
jae
scas
call
sub
jge
xchg
das
adc
xor
lahf
lret
js
jo
dec
push
das
aam
adc
xor
pop
icebp
repnz
dec
gs
stos
inc
dec
cmp
sbb
mov
ret
scas
pop
push
push
shll
jns
or
adc
and
or
ret
aas
fwait
add
scas
rorb
pop
aaa
sbb
movsl
fwait
lret
jne
repnz
jne
sahf
movsb
std
int
cmp
bnd
xor
xor
pop
testb
mov
sti
idiv
rorb
ds
add
lret
mov
ret
imul
and
sbb
fiadds
icebp
dec
cltd
sarl
enter
sbb
push
arpl
test
cs
test
stos
movsl
stc
jnp
pop
clc
fistl
hlt
rcrb
mov
lds
jns
jns
pop
lock
popa
mov
push
pop
xor
mov
sbb
mov
pinsrw
pop
stos
and
rcll
lds
fucomi
mov
iret
mov
inc
cmp
sar
mov
test
dec
outsl
cltd
inc
and
ret
nop
mov
push
pushf
adc
push
pop
popa
xor
iret
xchg
inc
nop
sbb
into
sbb
shl
mov
dec
std
cmovo
cmp
jno
enter
pop
mov
data16
int
mov
push
sbb
mov
dec
adc
testl
sbb
cmp
xor
mov
dec
daa
pushw
xlat
xor
add
lahf
mov
aam
jp
out
and
mov
fdiv
dec
insl
stc
scas
inc
adc
inc
cmpsl
call
mov
sti
mov
lock
xor
aam
pop
or
addr16
stos
inc
or
je
aaa
xlat
fwait
loop
push
scas
push
imul
jbe
lret
sbb
xor
add
cwtl
add
mov
test
popf
out
mov
mov
js
jmp
and
lret
and
test
fnstsw
ret
lock
and
cli
cli
sahf
fsubrl
xor
pop
enter
cwtl
xchg
aam
mov
xchg
mov
std
lods
jo
mov
std
or
fsubrs
dec
adc
xchg
mov
cmp
xchg
dec
jl
les
cwtl
je
jnp
push
cltd
dec
mov
sbb
cltd
daa
or
dec
adc
repnz
addr16
insl
rep
out
or
in
filds
pop
jbe
push
ds
jmp
pop
sbb
push
stc
inc
dec
les
std
lds
movsl
adc
lds
mov
push
aas
pop
fistpl
sahf
lret
in
pop
lret
lds
jmp
clc
push
stos
sarb
dec
mov
into
and
sbb
out
gs
test
mov
fldt
or
popf
popa
test
stos
and
jg
sub
xchg
sub
ss
pop
jb
mov
xor
pop
out
jg
out
ficompl
mov
cmp
enter
fimuls
movb
nop
out
xor
xor
decl
jb
fisubs
cmp
arpl
or
adc
sbb
xlat
mov
mov
inc
cmp
xor
jl
sub
imul
clc
xchg
fstl
pop
rcl
jle
push
stc
mov
xchg
cmpsb
or
add
stos
cmp
lea
push
push
xchg
popa
in
leave
pop
sbb
lock
fmuls
mov
fs
inc
xor
and
jl
push
lock
sbb
or
inc
add
aas
sbb
shr
outsl
fdivrs
add
inc
cmpsl
ss
dec
pop
aaa
es
out
dec
sub
and
mov
push
sbb
mov
out
ret
adc
lahf
xor
mov
dec
xchg
xor
fisubl
pushf
cmc
flds
rorb
xor
std
mov
int3
loop
dec
jmp
stos
out
call
sbb
push
enter
pop
jnp
jne
jecxz
or
pop
or
cwtl
faddl
lock
add
stos
dec
mov
clc
xor
mov
push
das
pop
call
mov
push
cli
rcrb
xchg
jl
mov
aad
cmp
inc
bound
test
addr16
js
push
inc
in
test
fbstp
sbb
adc
into
pushf
mov
cld
incb
sbb
mov
mov
loop
aam
lods
int
sub
out
jbe
jle
add
sar
data16
adc
mov
mov
lds
mov
dec
cmp
xchg
push
test
cmpl
jnp
repnz
and
lahf
xor
xchg
pop
adc
mov
lods
dec
insb
dec
and
sbb
mov
inc
in
jp
xorb
push
enter
ret
int
ja
jp
push
push
loope
sub
lea
test
mov
test
pop
std
pop
test
push
sbb
in
fcmovbe
mov
popa
pop
ret
lcall
lods
add
sbb
mov
push
inc
add
inc
push
scas
mov
mov
lret
dec
into
in
push
dec
mull
jp
js
xor
adc
push
mov
jl
mov
outsb
lock
dec
loop
push
out
sahf
andl
out
test
adc
pop
inc
dec
daa
push
mov
xchg
lret
subb
imul
addr16
aas
sbb
sbb
inc
mov
push
int
push
dec
xor
int3
repz
jmp
mov
inc
mov
bound
sahf
mov
fnclex
shll
fisubrl
pop
ja
xor
mov
adc
ljmp
ljmp
jnp
adc
push
and
and
outsb
inc
lret
repz
ret
lea
enter
mov
push
ds
loope
add
sbb
pop
ja
test
lods
shll
mov
popf
fsubrl
push
mov
push
dec
sbb
bnd
aaa
cmpsl
adc
pop
aad
inc
mov
icebp
pop
jb
test
aas
push
and
lret
jbe
outsb
shrb
clc
pop
mov
out
mov
mov
hlt
lea
and
dec
ficomps
jle
mov
pop
pop
arpl
dec
mov
pop
pop
mov
jo
dec
push
pop
ds
xchg
xor
test
cmp
mov
dec
sbb
add
mov
jmp
pop
repnz
xlat
pusha
ret
in
sti
pop
xchg
xor
aaa
aaa
imul
jp
dec
daa
pop
mov
iret
arpl
sub
jns
sbbl
ljmp
fld
sub
or
cmp
jns
outsb
adc
push
dec
les
mov
mov
cmp
push
xchg
or
jp
xchg
lahf
dec
push
inc
inc
pusha
xor
cmp
lods
movsb
cmp
jle
mov
jle
jne
or
pop
arpl
cmp
push
or
outsl
outsl
pop
fstpt
push
cmp
loopne
fsubl
sbb
arpl
sbb
mov
ja,pn
test
pop
repnz
push
xchg
out
jmp
frstor
leave
or
rorb
jnp
ret
fdivs
popa
lea
or
leave
or
lock
dec
cwtl
loope
and
cltd
inc
and
mov
bound
gs
daa
pop
icebp
mov
and
cmpsl
push
orl
pop
jmp
mov
aam
repz
out
mov
aad
add
or
xchg
xor
sbb
mov
inc
jbe
pop
pop
sbb
or
pop
imul
stos
popa
pop
xchg
cld
jb
movsb
cwtl
xchg
lods
jecxz
pop
cmp
push
sub
das
mov
xor
test
push
loop
pop
rcl
sub
mov
push
push
lea
icebp
in
xchg
sub
lea
inc
push
loope
out
nopl
pop
add
mov
mov
insb
cmpsl
dec
sbb
mov
sbbb
cmpb
mov
insl
pop
scas
daa
and
cmp
lcall
fcoms
or
xor
adc
adc
fmuls
filds
fldt
mov
lcall
sbb
push
xlat
mov
push
pop
dec
mov
pop
xchg
and
cmc
and
pop
mov
fistpll
push
push
mov
mov
push
stos
in
xor
push
mov
out
out
or
movsl
outsl
push
jne
pop
rcrb
cmp
xor
testl
mov
cs
fs
pop
fwait
lret
jmp
cmp
mov
mov
and
test
dec
sti
cmc
outsb
push
inc
mov
push
lret
ss
xchg
out
sub
mov
pusha
out
mov
mov
mov
lcall
add
pop
push
and
xor
xchg
pop
push
rorb
pop
jns
mov
fistpl
jbe
pop
dec
cmpsl
fdivl
xor
xor
add
int
loop
mov
popf
inc
xchg
fwait
mov
xchg
fistps
ja
mov
movsb
pop
mov
clc
inc
aam
popf
fbstp
test
es
inc
xchg
push
mov
xor
mov
mov
fdivr
prefetch
add
mov
mov
pop
and
iret
jbe
outsb
push
std
sub
repnz
xchg
push
mov
jmp
test
aad
mov
inc
fists
hlt
orl
repz
mov
push
adc
int
pushf
insl
movsb
push
add
das
push
inc
mov
je
mov
rcrl
ret
or
sbb
fldcw
jle
hlt
jmp
push
jg
in
clc
in
fstp
movsl
and
adc
sti
and
add
sbb
push
inc
js
insl
mov
inc
jmp
push
mov
mov
sbb
idiv
or
jb
ljmp
jns
lahf
daa
inc
adc
outsb
push
leave
pop
test
add
inc
pushf
push
xor
test
sub
jns
sbb
sahf
and
and
sti
test
or
out
xor
filds
loopne
lcall
outsl
stos
fnstcw
rcr
lock
add
ss
pop
add
or
std
jnp
inc
jl
sbb
inc
pushf
rcl
lods
mov
aaa
xchg
outsb
mov
test
popa
xorl
mov
rol
sub
out
dec
cmp
add
inc
faddp
lahf
push
mov
in
cmpsb
in
sbb
dec
cmp
adc
int
pop
jmp
dec
roll
push
js
dec
ret
jno
cmpb
sub
into
ja
or
repz
add
leave
adc
sarl
call
popa
dec
xor
out
push
mov
les
out
jmp
jge
sbb
mov
adc
mov
clc
clc
ret
ror
mov
push
std
jo
dec
pxor
jns
sub
push
sbb
repz
mov
fs
pop
lods
adc
gs
xchg
ljmp
test
movsl
les
dec
lcall
and
mov
jle
mov
add
mov
mov
jge
aam
mov
sub
push
xchg
test
xchg
xor
jbe
jb
mov
loope
out
imul
mov
cmp
push
push
test
xor
repnz
xchg
lcall
sti
int
loopne
imul
mov
jp
lea
fmull
js
mov
ja
xchg
jmp
out
cs
cmp
imul
orl
ret
cmp
int
cli
ror
insl
xchg
out
mov
pop
insb
aaa
out
ljmp
adcb
arpl
ftst
pop
fsub
fldcw
adc
mov
call
pop
and
adc
ljmp
push
inc
ss
mov
es
fcmovu
lcall
pop
ficomps
mov
cld
stos
es
adc
xor
lds
sbb
dec
jno
sub
add
cmp
or
test
mov
inc
pop
and
adc
push
mov
push
out
in
shlb
rcl
pop
cmp
push
jne
xlat
inc
or
insl
sub
push
int
pop
mov
jp
push
mov
xchg
ss
ds
insb
aas
push
cmp
mov
loopne
push
in
aad
pcmpeqw
xorl
rclb
out
dec
pop
dec
mov
leave
sbbl
push
add
and
aad
add
aad
fnstenv
mov
popf
pop
pop
pop
push
cmpsl
addr16
setge
sti
ljmp
xlat
adc
loopne
hlt
xchg
push
out
mov
std
xor
loop
mov
xchg
jae
out
cs
dec
mov
das
push
testb
mov
popa
insb
les
mov
bound
addr16
xchg
adc
dec
loope
pop
add
std
mov
mov
push
dec
scas
movl
push
xchg
push
push
pop
cltd
jno
shll
and
inc
dec
mov
stos
ret
jmp
push
out
adc
pop
sbbb
stos
out
cmp
loop
mov
std
adc
fimull
mov
pop
push
xor
and
dec
mov
mov
adc
lods
out
lret
cmp
add
lret
mov
repnz
into
divl
adc
imul
rorl
mov
add
and
inc
lods
and
dec
lds
js
mov
cli
push
imul
pusha
int
not
mov
sub
stc
push
xlat
pop
shlb
mov
pop
scas
sbb
adc
push
cmpsl
loop
testl
test
mov
xor
or
ss
sub
mov
and
xchg
aam
movsb
imul
shll
mov
mov
into
adc
add
xchg
cmp
jns
pop
test
es
in
lcall
insb
bound
icebp
out
dec
dec
sarl
cmpsb
loop
cmp
sub
xchg
repnz
pop
into
mov
mov
mov
xchg
sbb
cmpsb
addr16
in
leave
flds
push
ja
pop
add
mov
xchg
pop
and
in
sub
gs
and
sti
inc
movsb
andl
adc
out
nop
xchg
mov
add
push
ds
loopne
pop
mov
cltd
adc
jecxz
jcxz
lods
push
or
jne
testb
add
fcmovnbe
mov
dec
dec
sbb
roll
dec
dec
jae
and
pop
sbb
data16
repnz
repnz
and
push
out
inc
mov
mov
mov
int
out
push
jmp
cli
divl
push
sbb
lahf
mov
iret
addb
fcmovnb
cmc
lcall
push
or
or
xor
xor
cmpl
mov
loop
mov
adc
cs
fs
ljmp
add
mov
lahf
jecxz
cmpl
arpl
xor
xchg
stos
xchg
sub
stc
mov
repnz
decb
pusha
test
jmp
mov
push
mov
fldcw
xor
adc
add
iret
sbb
xchg
and
comiss
es
adc
idivb
out
inc
adc
push
addl
pop
sbb
xor
lea
hlt
sub
stos
pushf
in
loopne
jno
xlat
nop
inc
fists
outsb
mov
fimuls
xchg
mov
loopne
sahf
loope
inc
add
pmaxub
pop
push
decl
pop
or
add
cmpsl
sub
ljmp
push
js
jb
xchg
cli
pushf
xor
adc
mov
xor
out
ret
jno
repnz
add
pop
out
lea
push
xchg
or
out
jno
dec
insb
cmpb
mov
dec
call
inc
test
call
xor
sbb
jne
mov
add
es
sbb
cmp
and
pop
inc
je
dec
xor
xchg
icebp
fst
dec
mov
jno
jg
das
cmpb
push
push
sbb
rclb
cs
or
push
repz
mov
scas
sbb
jnp
push
in
loop
ss
inc
jmp
mov
pop
and
mov
test
lods
mov
mov
outsl
daa
mov
jb
cmp
test
in
addr16
push
stos
inc
insl
call
es
repnz
cs
xchg
gs
jne
aam
daa
xchg
push
movb
fs
test
stc
inc
imul
inc
push
pop
sub
fucomp
icebp
xor
xor
add
in
add
pop
mov
cmp
daa
lret
data16
push
push
daa
stc
mov
out
fstl
stc
mov
outsl
xchg
ret
lcall
shlb
popf
cmp
pop
sbb
shl
jbe
mov
dec
mov
jg
int3
xchg
xchg
xchg
add
sti
dec
cmp
mov
inc
mov
pop
fists
nop
mov
enter
bound
popf
lret
xchg
fwait
out
pushf
add
mov
mov
mov
push
pop
lret
imul
inc
mov
je
push
fsubrp
sti
shlb
cmc
loopne
mov
xchg
xchg
mov
mov
push
lcall
mov
dec
out
mov
cmp
sbb
adc
or
lcall
lds
icebp
int
xchg
fnstenv
jle
xor
std
sub
mov
sbb
lret
fwait
push
or
jge
jecxz
cmp
into
dec
adcb
or
jecxz
inc
adc
insb
out
push
fstpl
lds
cmp
call
addr16
pop
add
shlb
std
xor
icebp
jae
xchg
push
inc
push
push
xchg
lret
stc
jo
or
dec
xor
lret
test
push
jns
popl
adc
cltd
push
jecxz
lea
test
addl
mov
dec
inc
pop
cmp
push
movsb
xchg
sar
outsl
add
and
mov
rcrb
jo
clc
adc
xchg
sub
and
std
daa
sbb
adc
sub
scas
or
inc
fiaddl
arpl
jae
push
loopne
mov
insl
jno
jl
mov
es
xlat
fisttps
or
fdiv
cmp
cmp
xor
stos
ljmp
subl
les
arpl
scas
and
mov
add
mov
pop
xchg
xchg
add
sub
push
adc
cmpb
leave
test
or
shll
jg
out
push
pushf
movsl
daa
shll
mov
xor
call
pushf
inc
jns
and
ret
inc
inc
sub
sbb
cmpsb
mov
push
xchg
push
push
std
push
rep
mov
outsl
adc
add
push
dec
movsl
jno
loope
scas
fwait
cwtl
imul
into
scas
movsb
das
popa
inc
jp
and
scas
test
xor
aad
push
int3
push
jbe
out
mov
sahf
aad
sbb
xor
jne
aas
outsl
push
cltd
adc
stos
xchg
and
xchg
adc
pop
jb
scas
add
mov
and
sbb
inc
mov
mov
sbb
mov
xor
les
xchg
pop
and
cmovle
out
mov
inc
sti
mov
popf
fs
mov
dec
xor
push
bound
and
or
inc
pop
mov
cwtl
jle
ja
pop
lret
cmp
push
rolb
dec
and
add
dec
dec
push
and
addr16
loope
sub
wbinvd
push
nop
adc
ja
sbb
cwtl
imul
in
dec
sti
inc
inc
popa
sub
or
repnz
jbe
cmc
cmp
and
ret
mov
push
add
ficompl
mov
jl
dec
std
pop
faddl
int
jmp
cmp
jnp
push
sub
and
mov
fldcw
xor
add
sti
imul
test
cmp
sub
nop
dec
cmpsl
ljmp
loop
xchg
add
inc
dec
or
xchg
ja
cs
mov
mov
adc
dec
push
pop
add
pop
enter
popl
push
inc
mov
and
shl
mov
push
pop
iret
call
lock
or
xor
loopne
dec
jbe
xor
xchg
adc
pop
push
ret
into
dec
and
notl
negl
mov
fs
pop
in
dec
mov
stos
push
and
in
and
sbb
repnz
loopne
mov
rol
jge
ret
sbb
test
enter
out
or
pop
fmul
sarb
loopne
repz
mov
inc
int3
and
stos
fimuls
stc
repz
sbb
pop
fistl
pop
int
push
cmpb
out
inc
fwait
lods
out
clc
add
inc
insl
dec
adc
jns
gs
ret
adc
fcmovnbe
xchg
xchg
jns
or
stc
push
pop
test
xor
popa
jbe
and
jo
mov
mov
add
inc
adc
cmc
loop
sbb
pop
mov
shrb
push
pop
jb
xchg
in
push
loop
or
adc
xchg
icebp
outsl
ljmp
pop
sahf
push
cmpsl
ds
xsha256
cmpsb
pop
lea
mov
cs
in
and
xor
add
ja
aam
and
xor
xchg
fists
sub
test
push
out
cmpsl
xchg
ljmp
mov
add
test
mov
in
push
test
pop
inc
aam
out
push
mov
pop
add
push
mov
and
mov
sub
dec
sbb
sub
xorl
or
popa
sub
pop
xchg
dec
inc
int
rorb
dec
lods
inc
adc
or
jmp
pop
inc
daa
pop
mov
sti
mov
pop
aad
cwtl
xor
jno
mov
clc
add
or
clc
cli
or
adc
fsubs
mov
outsb
iret
ja
ss
push
arpl
test
nop
add
mov
dec
xor
add
add
jb
in
mov
cmp
fldenv
data16
pop
jbe
push
mov
mov
mov
sbb
stc
mulb
jno
fists
cmp
xchg
into
dec
gs
clc
lds
push
test
ret
and
xchg
push
fisubrs
movsl
out
mov
push
mov
mov
pop
push
out
add
push
pop
lods
arpl
adc
scas
add
and
cmp
ret
shrb
mulb
cmpsb
xor
aaa
add
mov
ds
sbb
cmp
lret
sbb
sbb
cmpsl
fisttps
lods
fnstenv
push
inc
test
xorl
sub
lea
cmp
jno
sub
or
jns
jge
fcoml
and
xor
inc
add
insb
das
mov
ljmp
pop
pop
adc
mov
inc
push
xchg
adc
push
xchg
push
mov
sub
add
adc
ret
loope
sub
xchg
pop
xchg
lcall
mov
adc
xchg
clc
pop
sti
dec
outsl
nop
dec
aas
jb
cmp
inc
out
cmp
out
push
mov
fisttpll
pop
jae
scas
cmc
dec
je
mov
repz
into
sar
aad
nop
fiadds
dec
repz
cmp
dec
pop
int
adc
sub
jns
jge
inc
lods
mov
mov
cld
pushf
mov
adc
inc
mov
pop
hlt
cmp
and
add
dec
push
adc
sbb
or
jmp
in
xor
lock
call
adc
leave
insl
js
orb
in
scas
mov
cmp
cld
loope
mov
mov
or
pop
add
push
xchg
testl
lahf
jno
outsb
sbbl
push
fwait
loope
push
push
jne
jns
ss
imul
stos
cmc
jl
cltd
mov
rorb
and
and
mov
orb
pushf
imul
adc
andb
sub
xor
sbb
xor
push
aad
jnp
ret
push
sub
stos
movsb
cmp
shll
mul
inc
pusha
nop
pop
aaa
pop
cli
outsl
fwait
hlt
adc
fbld
in
imul
lahf
xorl
sub
cwtd
fisubl
cmp
cltd
mov
adc
pop
imulb
insb
dec
add
lret
outsb
mov
or
ja
mov
fidivs
int
aad
xor
pop
adc
test
insl
pop
shlb
test
inc
out
mov
sub
jnp
sbb
jl
cmp
inc
cmpsl
or
and
incl
out
and
push
sbb
cmp
push
mov
repnz
mov
outsb
dec
pop
pop
jge
hlt
inc
cmpsl
sub
repnz
movsl
add
addr16
aad
push
cmp
aaa
mov
xchg
jb
in
pop
jnp
outsl
fidivrl
stc
pushf
pop
inc
bound
imul
adc
adc
jno
adc
aas
int3
ss
jbe
push
jg
pop
subb
inc
add
inc
stos
mov
jne
cld
sbb
stc
sub
fmull
cmc
mov
andl
loopne
rolb
int
movsb
pop
lods
sub
outsl
inc
andl
mov
dec
xchg
lods
xor
pop
dec
xchg
sbb
push
test
mov
dec
push
push
push
movsl
inc
cmp
xor
push
fdivrs
or
addb
and
nop
clc
repnz
cs
xchg
aam
pop
shll
inc
push
and
movb
je,pn
mov
inc
or
mov
xchg
aas
lret
int3
nop
mov
mov
push
add
divb
outsb
push
jno
and
in
jb
or
clc
mov
jno
sub
mov
sbb
push
xchg
push
cmp
movsl
cmp
mov
sub
out
or
or
jnp
cmp
pop
mov
popf
mov
jmp
test
mov
sahf
cltd
push
push
mov
or
pusha
sbb
jno
rol
jo
lea
jmp
push
fmul
jne
into
lcall
addb
in
aas
sub
dec
scas
pop
fsubrl
adc
das
fdivr
jge
push
clc
pop
sbb
push
pushl
add
call
push
pushf
testl
mov
jnp
out
adc
pop
inc
lods
inc
lods
int
cmp
clc
xchg
mov
pusha
inc
sub
rorb
dec
or
mov
add
daa
pop
fwait
je
out
and
and
or
inc
mov
addl
mov
mov
push
and
fwait
rorb
pusha
mov
data16
fs
dec
cmp
push
shll
sub
xor
mov
dec
push
or
mov
mov
std
inc
inc
jno
cld
and
or
ret
dec
cli
pop
fs
xor
ret
push
adc
addr16
or
ljmp
jl
jecxz
push
sbb
clc
push
sub
fmuls
jle
cmpsl
xchg
mov
js
sub
push
sub
or
jno
or
mov
adc
sub
out
pop
hlt
or
jle
je
imul
fidivrl
stos
aaa
fistpl
jnp
mov
xor
xor
ss
mov
cmp
mov
cmp
iret
stos
rorl
or
notb
dec
xchg
rolb
push
fdivs
pop
sti
divb
mov
push
xor
int
sub
test
cmp
mov
xor
sbb
shll
xor
mov
sub
dec
xor
ja
ja
xor
bound
notb
pop
incb
aaa
pop
adc
dec
push
add
mulb
push
sarb
scas
shll
test
loopne
outsb
dec
jmp
ficoml
pop
cltd
aaa
fs
arpl
inc
inc
popf
cmp
or
cmp
push
lds
sub
outsl
jo
jns
scas
push
mov
mov
dec
sbb
dec
je
pop
jne
jg
ss
movsb
cltd
jmp
sub
jo
lahf
ljmp
addr16
xchg
and
mov
scas
fs
xlat
add
out
add
addb
push
add
mov
xlat
sbb
dec
out
movsb
dec
incb
pusha
inc
sbb
sbb
imul
idivb
dec
in
enter
aaa
push
sub
sbb
add
jb
add
fs
frstor
aaa
push
dec
add
jl
sbb
or
and
jl
icebp
push
mov
and
push
aas
jbe
ja
sub
scas
jecxz
dec
or
pop
cmpsb
push
or
nop
jl
xor
leave
sub
mov
jne
jae
test
or
leave
stos
imul
jle
mov
inc
cmp
sub
clc
call
icebp
popf
inc
sahf
jne
jle
or
cmc
push
orb
fimuls
jns
xchg
mov
push
test
je
sarb
imul
cltd
or
xor
test
pusha
ret
jle
xchg
ret
adc
add
sahf
xor
jge
dec
mov
iret
cmpsb
dec
mov
push
jp
xchg
stos
mov
xor
mov
mov
push
std
or
mov
std
or
shll
sti
cmp
testl
push
xchg
cmp
mov
or
inc
fistpll
push
mov
sub
pop
sub
shrd
stos
dec
xchg
popa
popf
add
rcr
cmp
mov
aaa
mov
stos
ss
and
jmp
dec
call
inc
inc
dec
stos
mov
adc
jp
pop
int
clc
imul
js
repz
scas
call
popa
test
sub
into
cmp
stos
imul
ret
jnp
xor
cmp
cmp
scas
jns
mov
loopne,pt
cmpsl
call
pop
loope
cld
adc
cmp
pusha
push
inc
ljmp
out
adc
ljmp
js
sbb
sub
cmp
cmp
pop
mov
or
pushf
inc
and
add
stos
sbb
xchg
addr16
xchg
mov
pop
cli
scas
sub
xchg
push
adc
jae
push
adc
fsubp
dec
dec
in
mov
test
pop
gs
loop
jmp
sub
rcrl
fists
mov
int
push
jle
or
cmpb
sub
add
jo
stos
push
bound
jae
jbe
ljmp
mov
sub
enter
int3
dec
faddl
cmpsb
stos
inc
push
out
sbb
pushf
mov
sub
mov
repz
mov
jge
sub
test
lzcnt
mov
aam
ret
xchg
test
loope
test
shrl
sub
xor
rcr
pop
sub
jns
sbb
outsl
mov
add
mov
call
push
xor
fmuls
mov
into
sbb
fwait
push
xchg
je
push
xor
repnz
jbe
jns
xchg
popf
sbb
xor
or
xor
sub
jae
cwtl
add
pop
pop
mov
xor
mov
and
loop
or
jp
fsubs
sub
xorl
test
je
sbb
mov
in
adc
add
push
out
add
mov
in
xchg
xor
mov
or
test
lds
call
fxch
hlt
xor
iret
mov
xor
and
test
add
int
xchg
xchg
xchg
gs
inc
fistpll
bound
popa
lret
popa
jecxz
hlt
xor
dec
push
add
mov
iret
xchg
enter
imull
push
pusha
add
sub
mov
push
push
cmp
mov
xor
cmpsb
aas
jns
add
jbe
xchg
fwait
imul
int3
scas
aaa
dec
cld
push
and
and
inc
imul
inc
sti
push
rorl
fisttpll
push
mov
leave
je
ds
imul
movsl
addl
sbb
lret
cmp
mov
int3
push
sub
shlb
fidivrl
ja
jnp
cmp
aas
popf
adc
sub
int3
les
inc
int
mulb
out
in
clc
int
inc
pop
mov
fadds
popf
mov
push
std
addl
test
jmp
data16
inc
outsb
ljmp
out
push
fmull
rorb
leave
jge
jg
sbb
cmpsl
les
scas
sarl
jb
jle
lds
xchg
inc
aaa
mov
jne
ret
int
mov
adcb
push
dec
pop
insb
push
xchg
lods
dec
dec
std
subl
mov
sbb
leave
cmp
mov
ds
icebp
jne
pushf
in
paddusw
dec
arpl
jb
inc
cmpsl
mov
push
aaa
pop
sahf
fisttpl
and
stc
jp
mov
or
mov
es
cwtl
sahf
sbb
add
popa
push
push
rol
int
or
sbb
cmp
cmc
sub
je
insl
cmpsl
inc
lds
jbe
xor
mov
add
inc
mov
repz
imul
mov
mov
mov
xor
xchg
mov
repnz
push
pop
imul
add
adc
in
sti
xor
push
lret
xchg
fwait
xor
and
mov
xlat
jecxz
icebp
arpl
mov
mov
push
lret
stos
les
or
jle
std
out
int
or
sti
sbb
jl
pusha
sub
mov
es
fstps
mov
aas
aam
dec
test
sahf
xchg
ss
pop
dec
mov
leave
stos
push
les
iret
add
jl
daa
cli
add
push
fwait
dec
in
lods
cmp
xchg
imul
sub
cs
int
int
mov
dec
sbb
nop
lods
cli
pop
icebp
jmp
loopne
testb
shl
xchg
fimull
int
lds
mov
or
call
add
xchg
jbe
fwait
sub
dec
mov
and
pop
sti
fs
lea
mov
jne
ffreep
and
popl
fsubl
icebp
push
mov
inc
shlb
mov
stos
and
mov
pusha
xchg
push
and
mov
mov
test
dec
jnp
cwtl
push
negb
xchg
mov
push
int
fcomip
out
or
mov
mov
out
xchg
inc
test
stos
inc
mov
popf
dec
adc
and
stc
xor
mov
data16
call
gs
outsl
pop
enter
mov
mov
push
mov
shll
mov
mov
jo
lret
in
lea
pop
push
sbb
xchg
movsl
cmc
mov
dec
mov
mov
mov
lods
shll
aaa
jb
jg
popf
pop
dec
push
sbb
scas
pop
mov
mov
in
outsb
add
add
xor
repnz
mov
outsl
pop
sub
and
sub
cmp
cltd
pop
mov
jae
jmp
push
fisubrl
inc
cmpsb
push
vpshaq
nop
imull
push
push
adc
mov
adc
mov
mov
mov
push
je
jecxz
jp
fwait
cmpsb
mov
fs
outsl
ret
or
js
or
sub
gs
push
cmp
aam
into
addl
cmp
cli
rclb
in
adc
imul
lret
push
xchg
in
shrb
inc
mov
outsl
jnp
movl
fs
outsb
cmp
inc
test
rorb
and
stc
jbe
ds
leave
or
sub
push
out
loop
in
and
decb
std
popa
fs
test
xor
fdiv
jle
add
sbb
inc
shlb
in
pop
insb
cmpsb
cmpsb
outsl
or
jge
sbb
adc
sbb
arpl
lcall
push
mov
push
stos
inc
cmp
fnsave
mov
outsl
std
mov
int3
mov
dec
fs
push
aad
xchg
mov
pop
testb
or
and
gs
push
and
mov
sahf
sbb
adc
outsb
cmc
out
add
inc
pop
jg
or
mov
add
sub
shll
lcall
cmp
in
cmp
sbb
call
xchg
xor
mov
stos
or
mov
and
fbld
ffreep
lds
pop
add
gs
mov
pop
push
loop
mov
jmp
jne
adc
scas
andb
imull
adcb
ljmp
xchg
dec
or
lret
stc
jp
push
or
dec
xchg
add
icebp
mov
add
rcl
push
negb
ja
cltd
push
mov
mov
jl
js
mov
xchg
cmp
sbb
in
incb
xchg
xor
loop
mov
adc
mov
ficompl
fcomip
add
inc
ret
stos
xchg
lret
mov
fxch
pusha
scas
aad
add
lods
xchg
pop
ret
pop
adc
test
inc
test
push
gs
fisubs
fisubrs
outsb
lret
inc
and
mov
push
push
inc
test
movsl
fstpl
mov
icebp
pop
ss
xor
or
inc
test
rorb
xor
mov
or
outsb
clc
pop
mov
int
bound
lods
xor
dec
dec
cwtl
inc
sub
sub
pop
out
push
push
lods
shrl
aad
fs
jo
mov
ret
popa
xchg
dec
out
mov
jo
mov
sbb
dec
pop
stc
icebp
mov
stos
test
int
or
test
sbb
mov
dec
test
sarl
cmpsl
in
jnp
subl
movb
data16
and
push
or
mov
rcrl
or
fistps
subb
repz
test
std
mov
cmp
in
in
aas
push
inc
add
or
push
xchg
insl
jp,pn
pushf
inc
xchg
sbb
add
adc
or
fdivl
jecxz
ds
jmp
imul
add
xchg
push
and
cmp
clc
and
inc
jns
xchg
cs
into
fidivrl
adc
in
mov
cmp
add
xchg
adc
test
dec
sbb
into
sbb
dec
ljmp
outsl
jp
jae
nop
dec
sbb
cli
andl
mov
ja
bound
cmp
xchg
out
arpl
ljmp
dec
leave
jae
sub
jp
ret
leave
mov
repz
insb
push
rcrb
scas
mov
mov
jl
mov
push
pop
stos
mov
or
mov
add
cltd
mov
xor
jge
rcrl
shlb
jmp
lock
mov
pusha
or
ljmp
mov
adc
jbe
mov
test
inc
clc
frstor
xchg
dec
push
fists
inc
ds
cmp
and
push
cmp
push
push
adcb
dec
cmp
popf
mov
push
dec
or
jb
push
mov
je
movsl
push
jae
sti
decb
gs
in
aad
pop
out
aad
cmpb
cmp
push
add
inc
test
outsl
sbb
lcall
add
inc
mov
aad
repnz
mov
sbb
sub
xor
pop
push
push
mul
arpl
icebp
jle
jbe
push
sbb
std
push
mov
es
out
das
adc
int
xchg
movsl
xchg
push
mov
mov
repz
rcrb
nop
mov
xor
shrb
mov
cmp
cmp
sarl
jp
test
add
mov
lahf
jp
fdivrl
mov
lods
aas
nop
pop
mov
popf
mov
daa
push
pop
mov
inc
lahf
mov
andb
fisubs
xchg
mov
int
arpl
iret
fs
push
popa
out
push
or
pop
mov
dec
push
mov
push
inc
pop
push
or
jne
movsb
fdivrs
push
sti
pop
jbe
push
icebp
pop
aad
jo
xor
push
mov
inc
cmp
ljmp
in
push
xchg
and
xor
push
imul
sbb
lock
ss
pop
push
daa
pop
inc
minps
outsb
idiv
out
and
mov
xor
or
push
push
xchg
add
jecxz
incb
arpl
js
xchg
loope
cld
and
xchg
cmp
mov
adc
add
dec
gs
in
mov
fildll
js
ja
pop
bound
inc
mov
popl
test
stos
shrl
sub
mov
add
mov
fists
int3
popa
dec
dec
jns
cli
es
jg
fstps
and
jle
jb
inc
icebp
dec
cmpsl
jle
fcmovnbe
add
xadd
sub
inc
popa
add
int
pop
xor
aad
sbb
pop
fcompl
and
push
or
adc
test
stos
call
test
xchg
shrb
push
xor
jb
popf
gs
mov
cmpsb
inc
ret
push
push
xor
and
adc
mov
aad
lea
arpl
popa
ret
gs
stos
jg
iret
add
xchg
stos
xchg
icebp
int
cli
push
roll
and
cmp
adc
dec
fsubrp
movsl
dec
add
jb
out
adc
inc
ret
data16
mov
je
xchg
sub
inc
loopne
lea
rorl
je
fadds
stos
lods
pushf
inc
add
sahf
dec
mov
and
data16
xor
and
shll
popa
fstps
push
arpl
xor
add
cmc
out
fwait
dec
scas
pop
add
pop
fimull
insl
movsl
add
ja
inc
call
jmp
mov
pop
and
fcomps
push
mov
test
sbb
stc
ljmp
push
xchg
insb
cs
call
loop
or
push
lcall
loopne
mov
inc
xor
inc
adc
push
popa
fmull
es
xchg
fsubrs
or
adc
sub
mov
cmpsb
imul
jae
push
pop
mov
loope
imul
sub
lods
fiaddl
dec
and
sbb
add
jle
adc
mov
sub
or
and
scas
jne
push
inc
int
sbb
das
into
loopne
outsl
cmc
sub
lea
dec
fst
mov
mov
pop
into
push
gs
cmc
lock
cmp
out
push
ljmp
fs
push
cli
xor
imul
jp
int
xor
movsl
jns
push
dec
mov
mov
adc
or
test
xchg
fstps
int
rclb
inc
inc
cmp
fsub
or
push
mov
adc
mov
inc
and
jns
jns
push
pop
inc
call
mov
jle
xchg
mov
lods
jns
imul
insb
out
jae
jg
jp
daa
mov
push
call
fists
addr16
adc
fsts
cltd
push
repz
lea
jae
adc
std
bound
mov
mov
or
push
cmp
pop
inc
mov
in
sbb
popf
jns
mov
sub
aad
mov
cmp
jge
stos
roll
push
into
pop
lgs
sti
lea
mov
pop
mov
cmp
jmp
mov
loop
xor
scas
scas
gs
mov
dec
xor
out
mov
xchg
push
push
std
ds
adcb
arpl
pop
add
cwtl
adc
push
aad
in
inc
cmp
ret
jo
fs
add
ret
lcall
cmp
lea
fsubrs
and
cmp
pushf
push
add
push
xlat
jnp
sub
call
sbb
add
in
stc
xchg
mov
mov
inc
mov
xchg
lret
add
sub
ret
cmpsl
jo
jp
sahf
div
sub
stos
inc
rclb
std
inc
les
mov
rcrl
insb
pop
mov
std
adc
mov
dec
dec
xor
fdivrp
inc
enter
xchg
movb
push
cmp
and
in
test
mov
cmp
ljmp
in
loopne
pop
mov
js
pop
add
imul
in
fadds
jecxz
sub
add
push
xor
lods
lcall
adc
enter
mov
inc
sbb
test
mov
call
cmp
stos
push
pop
cmpsl
test
mov
add
add
test
lret
push
int
push
pop
in
inc
in
xchg
ror
mov
out
push
push
dec
cli
pop
mov
out
call
aam
fildll
sbb
aam
or
lcall
fwait
stc
jno
in
mov
mov
or
mov
flds
adc
cmp
fcompl
cmc
dec
push
push
loop
or
cmp
push
sahf
int3
jge
push
dec
cmc
push
or
mov
outsl
push
enter
enter
sti
jmp
pop
push
xor
jbe
cmp
in
add
xchg
dec
orb
out
test
mov
cmp
lahf
xor
mov
rsqrtps
jnp
std
int
rorb
xchg
test
mov
cltd
mov
push
cmp
lret
xor
test
dec
push
repnz
test
aaa
or
dec
pop
ret
push
cltd
inc
test
sarl
push
inc
xchg
scas
shrb
push
and
dec
xor
and
jo
sub
and
cmp
and
test
jle
xor
xor
rclb
mov
cs
sbb
ds
xlat
scas
mov
push
jp
int
jge
lock
imul
ret
inc
ss
in
jae
lea
add
xchg
in
in
pop
ret
inc
cmp
jle
outsl
inc
mov
dec
popf
mov
fcmovb
mov
adc
rclb
in
ljmp
loop
test
push
xchg
inc
sub
cld
mov
das
imul
aam
ds
pop
jmp
cmc
jle
sbb
in
xchg
pop
xchg
mov
mov
mov
lcall
fld
mov
cmp
xchg
fdivl
dec
ret
fidivs
lcall
icebp
cld
push
jp
movsb
dec
sbb
sub
lds
in
pop
push
mov
add
inc
mov
enterw
aad
cmp
jbe
pop
ljmp
inc
sub
enter
or
cmp
push
out
sbb
push
scas
lds
mov
xlat
pushf
std
subb
stos
data16
mov
or
jns
sahf
les
push
test
mov
push
pop
enter
xchg
lods
adc
lods
icebp
pop
stos
loopne
repz
xchg
mov
outsb
inc
jnp
repz
xchg
scas
dec
adc
gs
push
push
xchg
stc
cmp
and
lahf
push
movsb
xor
xchg
cmp
cmpsl
divb
add
mov
mov
mov
pop
dec
sub
and
aam
jge
pop
sub
les
xor
lock
pop
mov
sbb
ret
stos
js
add
ss
and
scas
xchg
js
or
cmp
sub
jo
jae
sub
lods
add
fs
arpl
push
arpl
lods
add
js
mov
mov
inc
jae
fwait
stos
inc
cmpsl
mov
sub
add
ds
sbb
loopne
aaa
xlat
or
xchg
rcll
cs
jmp
xchg
jnp
movsl
mov
xlat
pop
arpl
lret
insl
push
das
ret
vandps
jl
mov
dec
ja
adcb
mov
clc
and
mov
js
mov
loop
push
fldenv
cmp
xchg
ja
and
mov
add
jl
loopne
mov
rol
inc
call
mov
rorb
les
movl
adcb
inc
popa
shlb
shrb
jmp
mov
push
les
pop
shll
pusha
scas
mov
sti
cs
push
aad
aaa
push
nop
out
ss
popa
and
cmp
out
mov
mov
in
stos
cmp
sbbl
aam
shll
movsb
mov
negb
mulb
gs
movsb
dec
int3
adc
pop
test
sbb
pop
xchg
call
push
out
jle
les
xor
jae
sbb
mov
pop
sbb
mov
in
sub
repz
out
sbb
int
fcmovne
fsubl
add
dec
cli
loope
out
mov
push
fdivrs
in
push
rolb
push
mov
add
popf
lods
xchg
pop
cltd
inc
in
xor
mov
out
xlat
into
mov
inc
xor
push
pop
ljmp
xchg
shlb
ret
mov
test
adc
sub
loope
xorl
fisttpll
jmp
dec
xor
std
or
std
popf
inc
out
addr16
inc
into
xor
aas
ljmp
mov
adc
or
int
sbb
in
xor
cmpsb
hlt
iret
out
xchg
xor
or
jae
pop
add
mov
add
faddl
sti
mov
xor
jo
rcll
jo
push
es
movsb
lahf
testl
stos
or
dec
mov
outsb
addr16
cmp
ss
mov
negl
outsl
jl
frstor
push
out
sti
out
xor
sbb
cmp
ret
add
push
jb
into
stc
je
sbb
sbb
pop
inc
test
cli
xchg
or
xor
adc
icebp
popf
clc
outsl
fmuls
add
xchg
insl
sbb
aam
cmp
jns
addb
pusha
sarb
dec
andb
xchg
adc
inc
mov
dec
pop
add
leave
lcall
dec
sbb
fwait
jne
mull
rcrb
rcll
fs
cmpsb
mov
in
sbb
mov
dec
mov
stc
jecxz
pusha
xor
inc
and
dec
inc
sbb
add
cmc
adc
dec
repnz
jmp
sbb
jo
fs
jb
inc
mov
cltd
dec
lea
pop
mov
daa
pop
mov
data16
lods
rcll
push
push
lds
jge
add
and
or
fidivrl
out
jo
or
cli
push
ja
fdivs
imul
push
rcll
sub
ficompl
scas
in
movsl
inc
and
scas
dec
inc
mov
stos
jl
pop
lods
sti
into
ja
lea
mov
int
mov
out
mov
test
arpl
and
jbe
fwait
sub
adc
mov
xchg
mov
ss
addr16
or
mov
out
in
popf
stc
outsl
and
dec
mov
sub
lret
shlb
and
outsl
lret
loopne
jge
inc
inc
xor
sarb
lds
mov
sub
xchg
jmp
cs
push
cmp
cmp
int
stos
mov
inc
js
fucomip
dec
mov
mov
and
jle
sbb
xor
xchg
mov
inc
cmc
insb
daa
mov
pop
adc
je
jl
add
or
sbb
ss
lret
lods
lea
xchg
imul
andl
sub
sbb
ja
inc
cmp
int3
adc
mov
nop
fsubrs
stos
push
shrb
cmp
stos
or
push
add
cld
dec
push
mov
dec
and
outsb
mov
and
aaa
sbb
cltd
cwtl
insl
fidivl
test
outsl
mov
gs
mov
lahf
test
cmpl
ficoml
inc
dec
iret
pop
pushf
in
in
test
mov
mov
pusha
loopne
add
addr16
imul
and
clc
mov
mov
push
pushf
dec
inc
pop
add
mov
aas
xchg
cmpsb
and
lods
add
mov
dec
push
outsl
push
jecxz
fwait
aam
and
inc
add
sbb
clc
lds
mov
outsl
jge
mov
mov
scas
cwtl
cli
push
cmpb
ds
pop
xor
xchg
outsl
mov
ret
sub
dec
mov
jg
push
ja
sbb
lret
shlb
adc
jns
xor
icebp
xchg
sub
addr16
ror
loop
aad
data16
mov
popf
xchg
mov
adc
sub
push
xor
std
cmpsb
mov
aas
imul
xor
xor
in
pop
jge
mov
xor
lock
fcoms
xlat
scas
xor
xchg
daa
divb
pop
xor
arpl
mov
in
mov
mov
icebp
scas
loope
add
test
dec
mov
sub
xchg
andl
mov
dec
bound
or
add
out
ret
movsb
mov
cmc
out
imul
shl
sub
mov
mov
jle
ljmp
ds
les
jle
int3
pushf
enter
fcmovu
inc
out
pop
into
popa
insb
push
insb
mov
mov
gs
and
fnstcw
jns
dec
push
lahf
bound
jb
mov
xor
inc
dec
xchg
js
cltd
insb
xchg
out
jp
xchg
adc
lret
loop
outsb
lods
shll
lock
or
dec
cmp
pop
fdivrp
inc
and
clc
jne
adcb
cli
in
jl
loopne
cmpsl
push
jbe
fwait
cmp
bnd
data16
adc
sbb
dec
imul
lret
mov
cmpsb
push
sbb
jb
test
dec
insl
and
jo
push
jno
mov
je
cld
push
mov
mov
cmpsl
cmp
or
xchg
and
mov
daa
movb
add
inc
adc
in
loopne
sbb
pop
push
lea
cmpsb
jmp
mov
loopne
fwait
in
lret
roll
fmulp
or
mov
xchg
jnp
push
es
or
jp
call
int3
and
imul
fstps
pop
push
repz
and
cmpl
in
inc
dec
add
push
in
repz
and
je
and
mov
pushl
movsl
out
push
cld
push
lret
xchg
ret
repz
ja
test
adc
push
aaa
rclb
cmp
fstps
shr
inc
push
nop
cmp
js
in
jmp
inc
sahf
push
inc
cmc
shl
stos
fwait
stc
or
mov
xor
xor
ljmp
nop
in
sbb
mov
mov
rol
arpl
mov
ret
popf
arpl
je
push
sbb
shll
scas
xor
push
and
push
xor
mov
inc
cwtl
sub
adc
aam
into
dec
adc
lret
push
and
outsl
pop
fcmovb
rcr
loopne
xor
add
dec
imul
xchg
dec
ret
jp
mov
outsb
cld
fmulp
call
test
and
add
in
fcomip
or
mov
cmpl
mov
jmp
fmulp
lahf
jl
xor
add
or
int3
das
andb
push
and
inc
leave
insb
dec
add
shlb
cli
mov
gs
arpl
je
inc
negb
dec
sti
ljmp
add
sarl
cmpl
repnz
mov
rclb
mov
xchg
push
mov
or
jae
hlt
adc
gs
sbb
mov
lds
lret
loope
test
inc
mov
sbb
mov
jne
aaa
xchg
decb
mov
insb
fisubs
loope
xor
add
jbe
andb
outsl
sarb
adc
outsb
xor
adc
mov
mov
in
add
mov
mov
mov
pop
test
outsl
pop
add
call
loope
mov
mov
xchg
xor
mov
jbe
in
dec
or
fldenv
mov
lock
cmpsb
mov
jne
inc
sub
pop
loope
jnp
or
and
and
push
inc
test
or
fcmovu
les
jge
shl
dec
push
addr16
sbb
loope
test
dec
lea
adc
mov
adc
pop
lods
push
mov
cltd
adc
hlt
jo
cwtl
lahf
add
xor
mov
adc
sub
sbb
pop
jge
dec
cmp
pop
push
stos
xchg
xchg
pop
xchg
lret
sub
jg
push
inc
jbe
jns
loope
inc
in
adc
gs
aam
fdivrs
or
cmp
pop
daa
rorb
loope
jnp
cltd
loopne
test
xlat
cmp
inc
jmp
repnz
adc
cmp
leave
add
or
xchg
je
push
mov
adc
push
xorl
scas
aam
inc
sub
inc
fcoms
push
shr
push
add
outsb
or
and
test
std
and
rcr
aaa
int3
push
testb
jmp
mov
lods
ret
mov
iret
mov
rclb
cmp
inc
imul
xor
mov
jb
xor
or
mov
lcall
or
mov
fwait
xchg
push
mov
xchg
icebp
lret
xchg
adc
xchg
adc
jns
pop
mov
fnstsw
mov
out
in
jns
ljmp
push
aaa
xchg
outsb
mov
addb
mov
aas
bnd
sbb
fs
jge
push
ret
or
jns
cld
pop
jg
dec
mov
push
mov
bound
imul
mov
mov
sbb
aam
xchg
shl
adc
dec
outsl
out
sahf
daa
dec
and
lea
or
mov
mov
push
sbb
in
aad
sbb
leave
push
pop
or
pop
add
sub
or
push
xorl
shlb
insb
movsb
mov
in
pusha
sbb
cmpsb
sub
push
int
out
adc
and
insb
add
iret
push
sbb
in
mov
xor
or
outsl
adc
shll
loopne
movsl
daa
adc
stc
repnz
xchg
pop
and
adc
sahf
es
popf
test
xor
das
call
mov
cmpsl
jge
push
scas
push
movsl
push
sbb
mov
push
int
in
sub
aam
add
leave
xchg
mov
in
lock
or
repz
mov
mov
test
inc
notb
mov
jp
and
adc
add
xor
dec
jl
pop
rorb
add
push
cmp
inc
clc
cmpsl
push
xchg
jmp
sbb
aas
hlt
popa
xchg
mov
jecxz
inc
scas
arpl
dec
daa
mov
repz
xor
enter
popf
pusha
pusha
push
inc
jmp
lcall
imull
dec
pop
cwtl
pusha
movsl
leave
xchg
cmpsl
pop
dec
or
jo
xor
shlb
push
mov
popf
rcl
push
xchg
xor
and
insl
mov
shlb
aam
in
push
sbb
mov
lret
in
scas
jne
repz
xchg
stc
pop
sub
out
sti
cli
and
ja
mov
or
mov
sub
mov
mov
icebp
sbb
mov
sbb
inc
pop
jb
cli
icebp
dec
gs
shrl
icebp
repnz
andl
inc
sub
addr16
xchg
inc
pop
adc
jmp
xchg
ja
hlt
js
or
sbb
mov
mov
jmp
add
sbb
pop
test
push
in
push
inc
leave
in
mov
push
lock
mov
int3
in
subl
or
xchg
pop
mov
xor
call
imul
adc
mov
cli
mov
push
orb
js
jbe
pop
or
dec
arpl
aaa
shll
jmp
xor
adc
add
ljmp
cmp
lcall
mov
lret
je
pop
push
je
mov
cmpsb
bound
lahf
scas
cs
ficompl
push
jnp
mov
pushf
hlt
sbb
testl
or
sbb
adc
je
insb
xchg
cld
sub
mov
rcrl
cmp
mov
add
push
lret
in
inc
neg
or
arpl
and
mov
push
mov
and
push
mov
addr16
je
loopne
sub
imul
ljmp
xchg
lahf
ret
mov
into
sub
mov
nop
add
xchg
cwtl
in
pop
cmc
lds
cwtl
out
and
lahf
test
dec
aaa
sahf
mov
xchg
stc
fbstp
xchg
scas
js
adc
xchg
lahf
mov
or
cltd
xchg
cmpsb
sbbb
test
cs
mov
pop
mov
daa
test
out
in
fstpl
fwait
push
xor
addr16
xchg
jl
push
cmpsl
test
stos
jge
mov
dec
xchg
insl
mov
jne
out
bound
fs
rorb
push
jo
cmpl
sub
push
cmpsb
out
ljmp
mov
mov
and
fidivl
int3
fstl
pop
test
ret
jnp
aam
xchg
cli
jmp
push
jecxz
outsb
insb
inc
lods
xabort
dec
jne
xor
es
cld
xorl
cmc
cmp
sub
jmp
test
jmp
loop
rcl
addl
mov
mov
in
mov
cltd
cli
jg
loop
scas
pop
mov
pop
add
shlb
fwait
lods
test
xchg
jb
lods
imul
lds
xor
xchg
mov
sti
mov
jg
xor
and
pushf
cmp
shll
int3
push
push
push
ficoms
out
in
and
mov
movsl
add
xchg
adc
aas
iret
subl
or
mov
mov
movsb
mov
int3
push
into
int
lret
xor
or
out
mov
xchg
lock
xchg
int3
xchg
dec
nop
jns
cmp
fstps
insb
inc
ljmp
xor
test
jo
test
fldl2e
dec
jo
sub
add
rcrb
pop
push
xor
push
decl
and
loope
xchg
pmulhw
pusha
mov
lods
movsb
loope
arpl
fmull
shll
pushf
mov
sub
push
lds
inc
fcmovnu
mov
cmp
dec
jle
push
cwtl
rorb
dec
inc
out
scas
push
and
insl
dec
into
xchg
lret
or
inc
and
loope
sti
jmp
add
lods
in
dec
mov
mov
inc
and
add
add
ret
orl
test
mul
xchg
mov
push
jecxz
push
stc
cli
scas
pop
out
sbb
and
cmp
sti
ljmp
aad
jecxz
pop
cmp
sbb
ficoms
iret
pop
cmp
test
push
movsb
int3
xchg
roll
in
jecxz
and
rcl
inc
mov
ja
adc
outsl
pop
xchg
jbe
aas
pop
repz
mov
ret
inc
mov
sub
enter
push
sub
mov
das
inc
mov
mov
fistpl
pop
int3
adc
dec
xor
int3
cmp
pop
jle
inc
roll
xor
mov
std
aam
dec
xabort
btr
mov
cwtl
int
pop
into
adc
xchg
das
lret
mov
xchg
data16
mov
outsb
cli
push
fisttps
pop
mov
int3
sub
inc
int3
sbb
test
out
adc
cwtl
mov
sub
ret
push
pop
jg
daa
sbb
sbb
pop
xchg
mov
mov
and
enter
inc
lret
sbb
stos
pop
fbld
adc
stos
test
fwait
mov
mul
sub
xchg
adc
xchg
cmp
sbb
loope
xchg
cld
ja
push
add
sahf
adc
push
pusha
inc
add
loop
subb
jb
sti
inc
lods
movsb
xor
pop
mov
ret
push
xchg
sbb
adc
scas
es
xchg
shll
dec
sbb
mov
int
hlt
cmpb
xor
fisttpll
xor
stc
jae
xchg
leave
outsl
lock
and
out
js
and
add
mov
jmp
sahf
call
xor
dec
imul
sahf
push
fs
test
clc
out
enter
into
ret
mov
or
call
pop
loope
repz
test
mov
or
ja
pop
jb
ljmp
enter
sub
popa
cmc
movsb
js
xor
cmp
mov
bsr
xor
icebp
shll
outsb
ret
stos
mov
fistpl
fwait
aad
cmp
pop
inc
imul
cmp
dec
add
jnp
cmp
add
pop
pop
dec
das
test
pop
out
add
outsb
xor
imul
jnp
inc
jmp
jno
inc
cmpsl
adc
arpl
and
lods
popa
pop
das
xorb
dec
adc
push
in
in
aaa
push
pop
jnp
mov
lret
test
mov
out
push
and
mov
loopne
or
dec
in
stos
lods
jnp
incb
out
mov
add
mov
dec
call
rorb
push
scas
adc
add
lods
fbld
mov
repnz
ss
pop
pop
add
jecxz
sbb
shrb
dec
pop
stos
xor
jle
or
sbb
int
js
arpl
jecxz
jo
push
fisttpll
out
mov
push
sbb
jmp
jl
sahf
mov
movsl
or
loope
in
arpl
cmp
mov
pop
inc
dec
mov
mov
push
lds
and
inc
mov
fistpl
scas
rcr
add
popa
test
cmp
add
pop
ljmp
xchg
lcall
lea
pop
xor
loope
lods
mov
sbb
mov
and
mov
xchg
jbe
ljmp
sbb
add
lahf
sub
pop
or
sti
mov
mov
xor
in
jo
stc
test
mov
or
mov
cltd
cwtl
push
lock
shlb
pop
inc
test
mov
arpl
inc
stos
or
lahf
insl
dec
lea
stos
mov
loop
scas
shl
pop
test
js
and
inc
ffreep
dec
fildll
cmc
fstpl
and
outsb
push
leave
mov
js
inc
mov
jl
mov
xchg
adc
xchg
mov
idivb
mov
outsl
lock
cs
cmp
jne
sbb
sbb
mov
add
fdivrs
push
add
cmp
fs
cld
push
out
sbb
aad
leave
mov
fidivl
adc
mov
mov
cs
sbb
psrld
xor
je
cwtl
test
jecxz
cld
inc
imul
sub
rcl
xchg
fmulp
cmp
int
add
lret
lcall
popa
push
sub
xchg
popf
lret
cmp
and
fdivp
fdiv
jmp
pop
push
das
mov
or
jmp
nop
cli
pushl
cmp
and
sub
push
xchg
jle
or
or
pop
xor
repz
lods
loope
add
jbe
test
cs
popf
sbb
test
push
je
add
mov
mov
mov
fimull
popa
mov
out
repnz
lret
inc
fs
fistl
pop
les
sub
xchg
cmpb
sub
das
mov
das
lcall
inc
nop
jnp
sti
loopne
in
jp
bound
adc
pop
nop
add
xchg
xchg
mov
sbbl
or
cmpb
lcall
dec
call
and
out
inc
add
fidivrl
mov
pop
jge
adc
cmpsl
leave
jns
and
sbb
sub
xor
int3
add
ja
ja
xchg
dec
lea
pop
add
insb
inc
sbb
adc
mov
iret
sbb
mov
xor
pusha
dec
in
aaa
fadds
add
aam
inc
scas
imul
push
pop
pop
xchg
push
jle
scas
dec
inc
test
std
sub
adc
ret
sub
in
mov
mov
jmp
dec
stos
push
and
jecxz
fiadds
mov
pop
mov
xor
cmpsl
jno
mov
out
and
mov
into
repz
adc
int
loopne
adc
fsubl
stos
adc
adc
fdivl
xchg
mov
xor
cli
sahf
in
sbb
fsub
rorl
aas
cmp
and
cmc
ret
mov
pushf
lods
sub
ds
into
dec
aaa
std
ljmp
xchg
je
aad
repz
aam
sub
das
dec
add
dec
jmp
lds
insl
push
shlb
adc
clc
popf
ljmp
xchg
fidivrs
cltd
cli
xchg
mov
jp
xor
inc
mov
jns
in
adc
or
adc
sti
jp
loopne
and
jns
jecxz
dec
mov
cwtl
xor
mov
add
scas
push
push
or
icebp
nop
mov
test
cld
mov
gs
adc
pop
sub
inc
subb
or
lods
xor
popa
sbb
in
pop
dec
gs
add
sub
cld
lods
mov
fsubrs
adc
mov
push
or
pop
add
sbb
ret
cli
in
sbb
and
movsb
leave
in
xor
sub
test
xchg
mov
push
stos
ror
jns
push
call
inc
shlb
dec
call
stc
and
movsb
btcl
fwait
lods
pushf
movsl
jle
insl
scas
lret
aas
mov
je
sbbl
outsb
sbb
jno
leave
out
mov
xchg
mov
push
das
or
inc
test
push
xchg
mov
mov
lret
loop
adc
mov
and
loopne
sbb
add
lds
push
xor
mov
dec
in
jbe
jp
jno
aaa
xor
mov
cld
clc
pushf
add
in
shl
add
and
testl
hlt
mov
test
jge
xchg
lds
aas
xchg
xchg
and
sbb
aas
jg
mov
sbb
in
imul
jp
lock
into
lahf
mov
jg
ficoms
add
fs
jmp
out
lret
sbb
daa
out
jb
cmc
loope
and
fs
sti
mov
mov
sub
inc
jp
test
loopne
rorb
sub
pop
lods
jb
sbb
push
cs
imul
add
fdivr
push
lods
in
dec
push
jmp
fisttps
repnz
lds
pop
mov
adc
xchg
outsl
mov
dec
in
aam
cli
stos
cltd
or
xor
ds
out
popf
insl
fsubs
shl
arpl
or
lea
int
adc
push
les
xchg
push
pusha
cmp
ror
mov
cmpsl
add
setb
inc
inc
inc
mov
sub
ret
inc
push
out
mov
outsb
lret
fildll
lods
sbb
ljmp
aam
sbb
xor
jecxz
loop
pusha
push
call
lods
in
or
les
add
out
mov
jne
sbb
mov
cli
xchg
clc
lret
and
xchg
adc
fistl
loopne
faddp
popf
pop
and
cmp
loop
subl
les
jo
imul
adc
jmp
lea
call
in
xor
ficoml
and
enter
repnz
fisttpll
xchg
push
shl
and
push
lahf
cmp
add
mov
rorl
and
roll
and
outsl
sub
lock
pop
mov
test
rcrl
push
aaa
icebp
popf
dec
bound
addr16
sub
dec
adc
rcrb
fisubs
pop
xchg
loopne
jmp
sbb
outsl
sbb
in
pop
push
pop
jo
popa
es
int3
and
aad
inc
andl
popf
in
leave
sbb
insb
dec
sub
test
push
lahf
sub
pop
push
or
jge
test
fxch
inc
aaa
pop
add
adc
aas
in
jl
bound
stos
dec
mov
out
loope
imul
fcmovu
mov
push
add
sub
xor
mov
mov
inc
cmpb
mov
add
adc
repz
mov
pop
mov
jne
daa
inc
mov
mov
sbb
mov
xorl
jne
push
sub
mov
jo
dec
mov
push
lods
stos
mov
insl
popa
mov
push
add
push
and
jns
sahf
popaw
sbb
repnz
adc
loopne
xchg
insl
es
mov
jns
sbb
sbb
cmp
jbe
push
sti
cmpl
cmp
mov
stc
lock
pop
sub
mov
push
mov
decl
repnz
lds
pop
xor
outsl
xchg
pop
lock
jnp
cmc
fldt
push
test
inc
mov
fmul
or
add
or
fbld
lcall
adc
xchg
xchg
jge
rcrl
mov
test
cmp
xchg
ds
inc
push
push
inc
cmpsb
cltd
push
sbb
fstpt
mov
add
jae
push
pushf
sub
sbb
or
mov
jmp
xchg
les
aaa
data16
or
and
push
jns
test
sub
fwait
sub
enter
push
notl
and
sar
pop
pop
decb
seto
ss
push
sub
or
mov
and
aas
adc
fdivs
dec
test
iret
repnz
jne
pop
ja
jle
dec
lahf
pop
mov
aas
adc
imul
outsl
jge
sbb
ds
lds
add
test
out
push
repz
je
sbb
fsub
add
mov
fwait
dec
ss
movsl
fsts
sbb
notl
pop
fnstsw
fidivl
adc
push
ret
mov
outsb
add
mov
bound
sub
leave
nop
jne
lods
sti
aam
fwait
or
jge
jg
imul
pop
xor
push
or
push
push
push
push
and
arpl
push
adc
inc
cwtl
push
mov
stos
pop
sbb
xchg
add
addl
dec
aaa
jns
decl
fistpll
push
or
dec
jl
stc
out
jne
jle
push
mov
pop
in
test
fidivrs
inc
mov
add
fsubrl
jae
sbb
inc
mov
mov
out
mov
ljmp
movsl
inc
test
inc
popa
push
push
sbb
push
add
aas
cwtl
mov
decl
sbb
das
popf
mov
dec
mov
aam
sahf
dec
lds
push
push
shll
lret
mov
sbb
insb
out
sub
cmp
leave
cmp
test
add
sub
addr16
daa
add
inc
and
mov
icebp
dec
lcall
and
or
movsl
jl
add
fwait
sub
ret
in
or
aam
lea
fstl
cld
fdivr
mov
mov
or
and
stc
imul
sub
ds
xor
adc
pop
inc
xor
lret
cmp
ret
mov
dec
sbb
out
cli
jns
mov
adc
mov
clc
pusha
sbb
mov
pusha
std
inc
pop
cli
fsts
scas
xchg
bound
xchg
stc
out
lcall
inc
xlat
sbb
out
xor
pop
ss
dec
test
xchg
pop
mov
dec
or
out
sub
cwtl
add
jecxz
test
inc
out
pop
mov
pop
adc
jae
lea
int3
xchg
pop
cmpb
outsb
cmpsb
xor
sub
mov
pop
call
xchg
mov
testl
test
pop
dec
pop
jne
jnp
push
push
into
dec
scas
xchg
out
pop
sub
push
addr16
inc
movb
add
test
sub
mov
ficoms
pop
out
in
and
sti
mov
sbb
lea
hlt
ret
inc
or
inc
jg
out
cmp
in
pop
jae
mov
xchg
inc
jae
shl
cmp
jg
shlb
add
push
lock
dec
cmpsb
sbb
xorl
shll
sbb
popa
bound
je
cli
test
js
pop
xchg
fs
sub
mov
mov
lret
hlt
xor
addr16
mov
xchg
cmp
and
stos
add
nop
dec
pop
mov
insb
scas
mov
jb
call
fistl
sub
popa
xchg
xor
and
mov
test
test
push
xor
mov
nop
add
jecxz
mov
shrb
dec
outsl
mov
mov
sub
fwait
mov
jnp,pn
mulb
adc
xor
xor
lcall
out
cs
mov
cmp
ret
pop
fs
leave
cli
std
adc
xor
js
mov
push
and
repnz
stc
add
test
popa
cmp
xchg
out
lea
dec
fidivrs
push
std
and
clc
jae
incl
popf
jb
outsl
mov
jge
cmpsl
sbb
inc
in
nop
mov
repz
inc
leave
cmpsb
jo
or
andb
aaa
outsb
loopne
mov
cld
inc
movsb
nop
mov
jae
testb
pop
xlat
jl
add
addl
stos
or
out
enter
pop
ss
loopne
lcall
jno
add
mov
mov
xchg
jae
or
push
into
fsubl
fs
inc
and
int
sub
and
shll
aad
dec
aaa
xlat
mov
dec
test
mov
xchg
stc
cltd
mov
incb
ret
pop
imul
cwtl
jo
das
cmp
and
cltd
inc
add
sti
xchg
lods
sbb
sub
adcb
jmp
add
mov
mov
hlt
and
lods
movsl
mov
xlat
cmp
xorb
jne
out
dec
cltd
and
pop
cmp
int3
push
cmp
clc
jle
pop
outsb
or
adc
inc
push
or
cld
push
inc
int3
fnsave
mov
ja
bound
add
lahf
fistps
scas
dec
addr16
pop
and
into
int3
cmp
outsb
test
mov
int
sti
xchg
lods
inc
add
inc
movsl
js
jg
inc
push
and
stos
pop
cwtl
add
mov
sub
loopne
mov
and
insl
data16
pop
ficomps
mov
scas
adc
bound
push
xlat
inc
rorb
jecxz
out
jnp
mov
mov
leave
jbe
xor
hlt
xchg
xchg
xor
mov
gs
sub
jl
mov
push
and
out
pusha
int3
xchg
test
jecxz
scas
ret
sarl
cmc
div
add
ret
and
and
pop
ss
insb
mov
mov
mov
loopne
adc
push
ja
xor
orb
fcompl
in
ljmp
insl
je
xchg
mov
jb
ja
pushw
frstor
mov
pop
into
push
lret
test
leave
out
out
daa
dec
inc
pop
out
sub
insb
push
xor
add
mov
lahf
shlb
mov
gs
add
lock
cmc
xor
aam
fucomp
movsb
clc
loop
pop
testb
lahf
push
insb
cltd
mov
lock
imul
das
inc
sbb
stos
dec
sbb
mov
mov
push
pop
scas
jp
adc
jne
mov
jg
add
inc
repnz
pushf
dec
or
popf
or
add
test
inc
jmp
out
sub
jle
cmp
add
or
jnp
in
iret
pop
cmc
out
ret
gs
pop
insl
cmp
push
xchg
or
in
loop
shll
push
sbb
jns
jbe
sti
fsubp
rclb
sbb
xchg
jge
or
xlat
mov
fnstenv
movsb
adc
add
mov
or
dec
into
ja
subl
xchg
mov
data16
mov
adc
mov
imul
adc
fnstsw
arpl
xor
sub
aad
ss
jns
dec
add
adcb
jp
dec
pop
mov
enter
stos
sbb
mov
cmp
push
xor
out
sub
or
lds
sub
push
pop
cmpsl
sarl
or
pop
pop
xchg
loop
shlb
push
xlat
andl
pop
jmp
stos
mov
js
ja
mov
xchg
dec
adc
movsb
std
sahf
idiv
shll
mov
jbe
sub
pop
add
sub
leave
sub
and
scas
dec
sbb
inc
aaa
test
int3
clc
repnz
xchg
lds
adc
js
notb
pop
push
inc
inc
inc
adc
cmpsb
movsl
jle
or
pop
mov
pop
ret
mov
adcb
testl
loopne
inc
pop
cmc
push
aam
in
push
or
dec
fsubp
add
imul
add
stos
ljmp
xor
jae
and
pop
xchg
cmp
dec
and
rolb
pand
mov
pop
mov
shl
int
jbe
mov
mov
rcll
jnp
into
add
ret
cmpsb
cmp
jecxz
sub
scas
mov
and
jmp
mov
rcrl
sub
xor
pusha
insl
mov
add
jmp
and
cmp
sbb
cmpl
mov
pop
out
fstpl
data16
out
shlb
cmp
jno
jg
outsl
sbb
fisttpll
pop
dec
in
outsl
inc
mov
fisttps
push
xor
bound
fldt
aaa
test
xchg
popf
test
ds
add
sub
xlat
test
jl
ss
xchg
nop
pop
push
jle
mov
xor
push
sbb
lcall
cwtl
not
pop
ror
jle
mov
data16
pop
mov
in
repz
inc
mov
cmp
dec
cli
xor
sub
sbb
mov
outsl
jne
int
inc
and
cs
jmp
mov
mov
repz
aad
lret
xor
ret
mov
test
jg
test
inc
adcb
jbe
jle
out
ret
push
pop
popf
jg
mov
imul
mov
xor
adc
and
fisttps
gs
dec
mov
pop
xchg
add
lret
mulb
sarb
or
sbb
in
imul
test
mov
jecxz
pop
icebp
cmpb
add
dec
pop
push
jne
montmul
cmpsb
ret
pop
xor
imul
lahf
or
jne
lea
js
push
fldl
repz
jmp
fistpl
xor
cmp
cmp
pushf
mov
cmp
pusha
mov
xchg
aaa
xor
inc
inc
push
pop
push
sub
mov
cmovbe
mov
fbld
cmp
stc
push
icebp
ret
add
iret
movsl
dec
mov
ljmp
xor
xorb
ds
push
pop
mov
es
push
fs
mov
jp
sbb
inc
push
in
mov
cli
outsl
inc
jl
push
cmp
or
jge
addb
mov
lock
ret
xorl
adc
push
sub
in
mov
movsb
jl
arpl
add
fs
push
cmp
mov
lret
mov
dec
mov
sub
hlt
mov
pop
inc
xor
aaa
push
mov
and
out
fiaddl
leave
outsl
addr16
pop
fwait
cwtl
out
and
loopne
stos
mov
and
xor
jno
testl
ss
popa
pop
jmp
addr16
jb
dec
mov
test
loope
push
jbe
jp
xchg
fdivl
test
dec
adc
jecxz
pop
add
adc
nop
or
cmpl
insl
ficompl
addr16
leave
pop
test
push
jl
push
push
dec
pushf
cmp
loop
push
cltd
cmp
insb
inc
aam
mov
loopne
cmp
stos
int
adc
xchg
nop
in
test
aam
ret
fildll
pop
test
cmp
mov
mov
xor
aaa
xor
aad
mov
mov
push
mov
mov
js
sub
xor
stos
mov
addr16
out
jno
lods
dec
lret
das
ja
cmp
inc
jg
vpaddw
push
cmp
test
ficoms
int
mov
fldcw
fcoml
xchg
ljmp
xchg
inc
mov
inc
jne
push
cltd
fisttpll
nop
pop
or
xchg
xlat
jnp
hlt
jmp
pushf
out
cmp
outsb
cmpsl
test
aaa
and
mov
je
nop
mov
pop
subb
mov
out
roll
decl
aaa
add
dec
movsb
pop
adc
cli
movsl
sahf
lds
scas
push
mov
push
std
or
enter
rol
xchg
jecxz
fs
ret
in
lcall
test
xorb
push
dec
jb
push
xchg
movsl
mov
cli
mov
and
rcrb
sub
ds
sbb
sub
int3
jno
pop
push
mov
cmp
jne
rclb
push
mov
add
sbb
cmp
mov
push
xor
xor
xlat
push
jle
inc
ficompl
pop
xchg
sub
les
test
inc
cmp
cmp
inc
pop
popa
mov
push
es
fildll
mov
dec
outsb
test
xchg
out
cltd
lcall
outsb
ljmp
addr16
xchg
push
mov
adc
add
push
fwait
dec
mov
cmp
andb
mov
das
mov
sbb
lret
xorb
pop
xor
test
lods
or
shl
and
data16
adc
ljmp
adc
in
fst
popa
cwtl
add
push
into
shll
and
int3
ffree
fwait
imul
cmp
pop
inc
mov
shll
imul
in
fcoms
pop
and
je
data16
shrb
xor
sti
push
xchg
fisttpll
dec
mov
jae
pop
mov
pop
gs
shlb
inc
jge
sub
pop
imul
adc
sub
push
cwtl
jmp
fcmovnu
leave
sub
roll
xchg
jae
push
dec
sbb
jg
xor
sub
xchg
je
inc
lods
fs
and
adc
cmp
sbb
xor
in
mov
jbe
cmp
imul
jle
dec
push
inc
add
rcr
dec
or
call
xchg
in
xchg
inc
popf
jge
push
add
adc
dec
and
jecxz
mov
mov
lock
sti
lret
cmp
clc
lahf
cmpb
sub
das
loopne
fiadds
mov
mov
outsb
xor
inc
jne,pt
js
hlt
clc
lods
les
icebp
sti
push
jg
adc
out
cmp
pop
lahf
fimull
cmp
xchg
fst
cwtl
lock
incl
mov
nop
sbb
add
mov
jg
pop
ret
pop
dec
xchg
addr16
stos
inc
pop
jmp
rolb
pop
mov
repz
or
mov
aam
mov
jno
pop
sub
push
repz
popa
mov
fsub
movsb
xor
jo
repnz
sbb
andl
mov
lcall
out
rcrb
cmp
jp
inc
cli
jno
adc
cmp
test
nop
dec
pushf
lds
aad
insl
cwtl
push
xor
jg
inc
pop
cltd
mov
pop
popa
movsl
in
xchg
cmp
xor
punpckhwd
daa
or
or
lret
cli
push
xchg
popf
fdivs
das
out
movsl
fmul
push
mov
mov
repnz
sti
adc
pop
adcb
mov
xchg
inc
sub
sub
jb
mov
test
jl
pop
ja
icebp
lret
and
sub
mov
pop
push
xor
insl
cmp
pop
pop
inc
dec
aad
push
ret
adc
dec
inc
loopne
in
xor
sub
les
addr16
sub
and
insb
aas
xchg
ret
pop
xchg
shrb
ffreep
or
jl
sbb
lret
push
lds
shlb
xchg
nop
pop
cmpsl
jno
lret
pop
add
hlt
mov
add
dec
adc
popl
inc
subb
in
cmp
xor
sti
sub
in
repnz
out
xor
cmp
pusha
dec
ret
jl
xor
out
xchg
mov
sbb
movsl
mov
or
dec
mov
mov
test
mov
or
push
lods
lahf
and
cmp
inc
test
or
cmpsl
pop
push
out
or
repz
movsb
mov
out
clc
mov
mov
inc
sub
sbb
arpl
cmp
cmp
push
ss
push
arpl
jb
std
int3
ja
add
ror
in
test
xor
sahf
jnp
clc
in
inc
std
aam
fdiv
xor
push
xor
std
push
mov
stos
stos
push
push
out
aas
sbb
mov
mov
mov
mov
fwait
xchg
nop
sbb
xchg
xchg
inc
xlat
jne
mov
in
nop
jb
icebp
mov
ret
ljmp
add
sbb
loop
push
fists
ret
pop
mov
inc
faddl
dec
test
and
bound
xor
inc
scas
mov
aam
rolb
or
mov
mov
repz
leave
js
xor
daa
mov
inc
outsb
dec
ljmp
or
mov
imul
and
shlb
fists
cmp
aam
lods
fcomps
pop
pop
repnz
lcall
xor
stos
mov
fsin
aad
xor
jp
lahf
sti
insb
cltd
in
gs
lret
scas
and
ret
mov
add
push
ja
mov
jnp
dec
pop
fst
jo
das
pusha
pusha
xchg
mov
push
into
fcmovu
test
sub
mov
int
outsb
sbb
movsb
scas
adc
cwtl
push
xchg
adc
pop
and
cmp
and
jns
xchg
test
enter
mov
test
inc
mov
aad
cmp
sbb
sub
cltd
shr
std
add
insb
addr16
inc
dec
int
cli
jne
xor
inc
jno
mov
add
sahf
and
mov
mov
sbb
adc
xchg
push
ss
jo
jl
inc
sbb
test
inc
cmpsl
mov
orb
pop
call
jb
sub
jnp
sar
inc
out
jl
xor
or
ds
pop
cmc
sbb
mov
stos
orb
fisttps
int
ja
sarl
cmpsb
mov
scas
icebp
sub
je
call
loopne
adc
enter
mov
pop
pop
stos
and
pusha
add
into
sub
sbb
adc
mov
mov
add
and
mov
clc
mov
jge
ljmp
cmp
jo
dec
mov
sbb
cmp
stos
es
inc
inc
mov
xchg
adc
sub
movsb
jecxz
fcomip
push
ss
adc
int
ret
inc
inc
mov
push
xor
xor
fldt
loope
and
movsl
adc
popa
jbe
pop
and
adc
inc
imul
xor
add
lock
push
movntps
pop
sub
or
fwait
test
cmp
fcomps
push
les
push
or
and
xorl
lock
lds
lods
mov
xchg
aaa
add
roll
mov
push
js
imul
push
dec
jb
add
mov
leave
repnz
dec
pop
push
dec
sbb
jno
pop
adc
enter
xchg
add
jo
loope
jb
sahf
psubsb
int3
pusha
cmpsl
test
xchg
dec
ss
aad
loop
nop
dec
dec
idivl
sub
mov
inc
inc
xor
and
into
adc
dec
cmp
and
and
dec
lock
and
fistps
dec
xor
test
jns
test
or
cmp
pop
out
adc
repnz
add
pop
loope
jnp
push
push
bound
mov
jnp
mov
add
mov
jmp
lcall
fisubrl
cmpsb
into
lock
sub
movsl
mov
push
cwtl
mov
lock
sub
outsb
std
pop
lret
cmp
jns
xchg
jecxz
xorl
mov
push
jbe
xchg
decl
mov
or
ret
xchg
add
dec
jg
xlat
daa
out
fldenv
lahf
and
sti
push
sub
cwtl
repz
aaa
cmp
loopne
js
shll
rcll
shr
ja
out
stos
out
mov
negb
inc
leave
adc
test
and
jne
ja
adc
xchg
jne
mov
std
inc
cld
xchg
lea
ret
out
mov
push
mov
sbb
fimuls
loope
fwait
addr16
cmp
dec
jp
arpl
add
cli
subl
push
mov
add
push
repnz
mov
cltd
or
mov
inc
or
loopne
add
and
add
stos
mov
inc
dec
cmp
out
fcompl
clc
pop
adc
cwtl
push
xchg
dec
xor
xchg
mov
in
in
jl
mov
ficompl
sarl
jb
popf
mov
inc
jp
mov
pop
les
xor
sub
scas
addl
push
idiv
push
sbb
fstpl
push
push
cld
adc
jbe
dec
sbb
fsubrs
aad
pop
jb
cmp
ret
mov
outsb
push
cltd
jecxz
add
call
dec
ss
ret
mov
cs
sbb
movsb
xor
popf
xchg
pop
rclb
mov
lahf
xor
imul
fstpt
pop
and
in
rol
dec
cmc
in
xor
outsb
add
imul
mov
jecxz
nop
dec
popa
sbb
sbb
add
mov
pop
and
or
dec
lods
aaa
leave
movsb
lods
jno
adc
sahf
scas
mov
rorb
fwait
out
fs
idivb
inc
add
jbe
repnz
lea
dec
fisubs
cmp
sub
ljmp
in
cmp
fisubrl
iret
frstor
outsl
stos
xor
in
cwtl
popa
loope
dec
push
or
or
mov
sti
test
lea
adc
or
push
bnd
adc
shl
mov
out
jne
movsl
cwtl
js
dec
or
mov
cmc
lcall
leave
push
pop
adc
lcall
inc
push
iret
cmp
mov
dec
fwait
cwtl
cmp
or
xchg
in
testl
test
movsb
aam
loope
incb
push
aad
cmp
lods
sarb
and
pop
pop
out
push
mov
cs
mov
mov
je
in
mov
subl
fldcw
mov
int
mov
xor
adc
sub
mov
aaa
aam
push
inc
push
in
add
cmp
lret
cwtl
inc
xor
inc
pop
xchg
jno
pop
out
outsl
push
cli
mov
jnp
bound
pop
jmp
repz
sub
ret
or
add
outsb
sbb
dec
jno
push
popa
loopne
sbb
call
repnz
mov
fildll
addb
and
and
out
jle
inc
lret
ret
mov
aad
push
lret
sbbb
call
jo
lret
xchg
mov
mov
ss
cmp
pop
repz
mov
clc
and
in
cli
or
aad
test
fisubrl
inc
data16
outsb
inc
sbb
cld
scas
call
lcall
or
cltd
pop
inc
sub
ljmp
arpl
jmp
mov
sub
mov
jae
js
testl
sbb
sub
rcrl
sub
jnp
sub
mov
popf
xchg
cmp
idivl
pop
and
movsl
dec
mov
adc
mov
jmp
pop
in
mov
daa
and
cwtl
cmp
inc
pop
dec
add
hlt
jp
or
jae
cmpsb
cltd
push
mov
adc
push
data16
mov
cmpsb
push
push
ljmp
ja
icebp
sub
andl
ljmp
insb
push
adc
sub
ss
jne
or
push
mull
jno
or
push
pop
insb
inc
xlat
push
xorb
mov
jae
mov
negl
lods
dec
mov
fstps
stos
or
dec
xlat
sahf
cmc
push
not
fwait
mov
add
jl
or
or
js
dec
inc
inc
insl
in
lock
add
movsb
mov
rclb
lds
mov
inc
xchg
iret
fst
mov
lret
fstpl
mov
test
maskmovq
testl
push
mov
mov
and
mov
push
mov
repnz
mov
iret
inc
jnp
xchg
out
pop
and
fs
and
xchg
cltd
push
push
adc
lea
js
das
add
xlat
fildll
jne
cmp
notl
popa
popf
sbb
out
insb
cmp
sbbl
stos
lock
in
jecxz
or
stos
sub
bound
imul
pusha
aam
ds
adc
xorl
inc
mov
out
insb
adc
jg
cmc
into
fisttps
mov
std
pop
xor
add
sbb
mov
test
int
push
push
test
dec
adc
jno
ss
inc
mov
pop
andnps
pop
sub
sbb
xor
sbb
mov
fstpl
rclb
iret
inc
push
xor
push
stc
cmc
push
push
ja
xchg
stos
inc
xor
les
sbb
cmpl
dec
sahf
repnz
or
sbb
movsb
shll
jbe
imul
std
sti
lods
cmp
rorb
nop
pushf
mov
and
push
dec
ret
test
and
loop
stos
mov
aas
push
je
out
adc
and
not
pop
xor
pop
mov
test
inc
cld
pop
das
nop
sbb
mov
sub
pop
hlt
out
jmp
mov
cmp
jae
mov
push
push
xchg
push
gs
mov
mov
loop
imul
ret
cmp
dec
loop
or
jo
sub
cli
loopne
sub
lea
mov
js
iret
mov
or
sub
jp
jno
scas
mov
popf
imul
sbb
cli
lahf
jmp
movsl
add
loopne
inc
aas
cwtl
and
lret
jnp
iret
test
fucom
jns
loop
cmp
loopne
repz
gs
imul
fs
cltd
cmp
das
pop
push
popf
cmc
sbb
xchg
inc
imul
callw
sbb
jmp
lret
leave
sbb
int
cmp
mov
ljmp
lds
hlt
xchg
daa
sbb
xor
jecxz
add
mov
aaa
into
call
aad
cltd
das
dec
fwait
repnz
mov
jl
xlat
ficoms
fildl
and
fnstcw
mov
dec
xchg
mov
push
xor
lret
mov
jge
add
add
fsubr
lock
loope
jae
subl
mov
repz
mov
repz
data16
or
dec
int3
adc
jbe
ret
nop
dec
insl
popf
aas
test
adc
inc
repnz
lcall
shl
mov
int3
mov
call
cmp
loopne
cs
xchg
cmp
sahf
outsl
fs
or
test
dec
or
xchg
clc
push
push
mov
add
imul
mov
dec
xchg
push
mov
jae
enter
dec
into
jb
test
dec
mov
lods
ret
jb
pusha
out
lret
insl
xor
xchg
jecxz
mov
xor
xor
push
dec
addb
inc
lahf
adc
arpl
sarl
int3
add
aas
lea
call
dec
sub
arpl
inc
mov
jb
std
mov
cmp
ss
scas
mov
stos
in
in
sti
sbb
and
sub
mov
rcrb
mov
sub
repz
pop
aad
pop
out
or
lret
adc
es
shlb
fcmovu
jb
test
push
decl
nop
add
cmp
jbe
cmp
mov
jb
out
je
add
sarb
jmp
daa
les
test
arpl
pop
popf
xchg
rorb
push
jo
cltd
repnz
adc
and
test
xlat
iret
adc
xor
adc
gs
jl
mov
fnsave
sti
das
mov
jle
ss
in
dec
ds
inc
push
adc
xchg
daa
or
xchg
in
sub
movsb
movsl
mov
shll
movsb
je
loop
insl
mov
xchg
scas
push
rcrb
stos
jle
mov
push
stos
imul
outsb
in
and
lods
and
cmp
sub
lcall
mov
lcall
jbe
and
lods
mov
test
mov
and
mov
dec
pmullw
ss
sbb
inc
xchg
cmp
cmc
int
jp
push
rorl
movsb
shrb
xchg
or
sub
jecxz
mov
inc
iret
push
ret
jae
mov
mov
lds
dec
cs
lods
adc
jmp
jg
push
pop
dec
inc
xor
adc
push
pop
or
roll
loop
cmp
xchg
repz
cltd
push
jo
push
es
ss
jo
loope
and
push
fildl
mov
add
ss
xor
ds
mov
cs
sub
sbb
inc
push
das
pop
fdivs
cmpsl
cmp
and
fiaddl
mov
adc
lahf
mov
jmp
sbb
fucom
mov
cmp
xor
add
pop
add
fistpl
fimull
dec
xor
xor
dec
pop
lock
mov
insl
jno
popf
cmc
jno
mov
xchg
lea
mov
ljmp
addl
and
mov
and
push
into
cwtl
mulb
addr16
adc
mov
and
adcl
popl
insb
and
in
shlb
and
fld
sub
dec
dec
or
lods
cs
or
mov
adc
roll
dec
xchg
inc
mov
mov
adc
xor
mov
out
jmp
inc
push
xchg
push
and
fsubrl
push
push
lcall
cmp
mov
fwait
dec
dec
jne
arpl
fwait
stos
pop
push
loopne
lahf
or
mov
mov
jl
es
pop
adc
sarb
inc
loope
push
aam
leave
out
mov
in
sub
sub
lods
mov
stos
push
iret
and
mov
lock
push
je
aad
add
mov
jecxz
jecxz
in
mov
pop
enter
xchg
or
cmp
or
bound
push
or
push
mov
push
pop
decb
sub
les
adc
or
inc
or
mov
sbb
xlat
xchg
fwait
es
test
stos
loopne
cld
add
hlt
shrl
pop
add
test
inc
popa
sub
out
pop
sbb
xor
sub
sbb
adc
xorl
ss
movsb
jnp
shlb
xchg
push
push
push
xchg
test
addb
xchg
push
jg
jmp
push
in
nopl
mov
fwait
out
pop
push
imul
cmpl
or
sbb
or
test
sub
jne
xor
push
inc
jnp
adc
cltd
call
inc
icebp
push
xchg
rcll
imul
imul
push
jb
movsb
cmc
imul
cmp
push
inc
loopne
pop
lcall
out
les
dec
loop
lock
mov
into
pop
and
mov
icebp
fdivrs
or
lret
sbb
stc
fs
cmc
fnstsw
lea
xchg
leave
leave
or
sbb
dec
cmc
adc
icebp
inc
sbb
stos
das
push
pushf
in
cmp
fistl
adc
cwtl
mov
cmp
mov
out
inc
cltd
ret
dec
jb
cwtl
ror
sti
lahf
or
pushf
mov
pop
mov
dec
movsl
push
sub
cmp
fistpl
mov
xor
outsl
rorb
xchg
iret
adc
ss
out
icebp
iret
mov
test
loope
das
mov
adc
popa
mov
dec
mov
push
and
mov
imul
mov
sbb
sub
iret
dec
addb
push
add
cmp
shlb
or
sub
mov
pop
push
push
call
lods
pusha
arpl
mov
jp
bound
insl
jbe
enter
push
mov
movsb
mov
in
mov
orb
or
pop
push
fdivrl
sbb
and
dec
jmp
adc
xchg
cmp
mov
lods
xor
sbb
cmp
xchg
jns
popa
stos
icebp
enter
sbb
jl
stos
jbe
mul
movsl
pop
cmc
jmp
cmpsl
aad
incl
cmp
jbe
dec
pop
mov
les
enter
cmc
xchg
push
nop
cmpsl
xchg
into
and
les
rclb
inc
dec
mov
and
add
rcll
add
push
push
and
mov
stos
ss
jnp
sub
push
mov
loop
jb
jne
sub
rcrl
data16
sbb
mov
inc
jns
test
push
jnp
imul
daa
and
push
xchg
test
loop
rcrb
imul
add
xchg
in
outsl
out
or
movsl
inc
sbb
ret
rol
arpl
cmc
fwait
jnp
lods
dec
fcomps
into
movsl
jb
jnp
ret
xor
adcl
add
xchg
jo
lret
loop
pop
adc
hlt
dec
cmpsl
cmp
cmp
test
push
jo
cmc
jle
and
or
sbb
sbb
aas
mov
sub
jo
xor
daa
dec
and
ja
add
xchg
in
arpl
lods
pop
jb
pop
sub
cmc
inc
cmp
decb
pop
leave
cmp
xchg
lret
mov
cmp
addr16
and
fcomip
outsl
and
addr16
push
movsl
xlat
mov
pop
into
jae
push
bound
add
sbb
sub
adc
or
cwtl
repz
xor
push
dec
aas
jecxz
into
inc
jb
insl
inc
xchg
lds
adc
xchg
or
lret
aad
insb
jns
cmc
jnp
add
popa
call
cmp
adc
jecxz
dec
clc
cmp
jmp
mov
mov
lea
ss
jge
out
cmp
push
or
test
add
dec
sbb
addr16
push
or
bound
data16
xor
pop
mov
in
lods
push
xchg
pop
and
pop
and
mov
push
sti
out
sbb
rclb
inc
push
adc
mov
xchg
js
add
mov
int
ja
push
lret
mov
push
rcr
mov
scas
jb
or
xlat
jl
popf
and
push
cmpl
pop
push
cmpsb
sbb
mov
fwait
lock
and
jbe
jno
mov
mov
mov
insl
cs
xor
shlb
cld
dec
insl
sahf
cld
scas
mov
pmuludq
fwait
cwtl
bound
fsts
sub
je
dec
mov
pop
adc
std
mov
movsb
jmp
jne
inc
mov
push
js
sbb
out
dec
xor
cwtl
and
imul
push
pop
mov
dec
or
bound
lods
jb
inc
cmp
out
mov
popf
dec
data16
xchg
iret
and
jl
push
lods
sar
lock
es
pop
mov
mov
fimuls
cmpsl
fldcw
loop
mov
jnp
add
out
icebp
jns
dec
pop
loop
add
mov
repz
gs
ret
mov
mov
push
lock
lahf
lret
int3
mov
call
mov
inc
jae
dec
mov
ret
or
imulb
enter
popa
cld
mov
xor
and
aas
cmp
pop
insb
mov
jl,pt
and
mov
inc
std
daa
lret
and
pop
enter
andl
dec
jnp
jbe
into
fnstcw
mov
out
sarl
sbb
cwtl
lahf
pop
ret
mov
imul
insl
decl
adc
scas
rolb
ret
or
mov
dec
jno
arpl
fucomp
add
sbb
aam
and
jb
add
rcl
mov
insb
mov
test
mov
adc
popf
mov
pop
jno
mov
fldt
scas
in
clc
icebp
mov
sub
cs
popf
jp
stos
scas
add
xor
xchg
mov
and
fdiv
or
or
jne
mov
adc
jbe
pop
jb
ficompl
jle
inc
sbb
mov
mov
push
pop
lds
push
sbb
divl
sub
cli
in
lods
add
in
sub
adc
ja
movsb
fdivrs
sub
sub
mov
fildll
mov
mov
test
adc
in
lock
xor
xchg
lahf
mov
xor
xor
rol
aaa
push
sbb
adc
lods
out
test
pop
out
es
aad
fstpl
mov
rcll
addr16
xchg
sti
sbb
jle
and
fdivr
xlat
rolb
in
leave
out
sub
ja
jns
inc
iret
push
shl
popf
fucompp
insl
popf
jge
imul
mov
jg
mov
sbb
out
cmp
mov
push
fisubl
fmuls
dec
pop
loopne
out
jae
mov
popf
lods
adc
imul
mov
jns
mov
aaa
pop
int3
cmpsl
xor
dec
add
sbb
ret
aam
cmp
lret
jnp
sbb
xchg
mov
stos
xchg
dec
mulb
or
in
or
sbb
outsb
ss
addl
daa
jg
enter
fs
or
jl
shrl
mov
arpl
mov
adc
addl
movsl
sub
mov
clc
scas
pusha
jno
aad
ss
dec
jbe
rorb
rcrl
mov
pushf
or
or
lea
popf
bound
xchg
sub
scas
lahf
sbb
outsb
dec
cmp
adc
sbb
stos
mov
push
pop
mov
jo
or
mov
leave
lret
pop
add
sbb
and
sbb
inc
insl
add
into
popf
stos
cmp
je
cwtd
mov
adc
cmp
cmp
add
mov
fld1
cmpsb
sub
iret
outsl
sahf
pop
outsb
jbe
into
test
pop
add
pop
cli
test
inc
orb
mov
lea
roll
add
mov
stc
sbb
adc
inc
jecxz
or
shll
mov
js
adc
inc
xor
push
fdivl
fs
pop
andb
pop
mov
subb
ficoms
out
mov
or
test
adc
dec
xchg
jp
das
xor
adc
xchg
stos
sub
lret
push
lret
mull
sti
mov
lods
adc
mov
cmpsb
cmpsb
jmp
sub
adc
inc
cwtl
xchg
mov
iret
push
std
push
dec
mov
push
imul
and
iret
sub
idivb
fstl
int
sti
push
sub
mov
mov
fwait
push
mov
movsl
mov
js
out
data16
gs
jge
pop
in
inc
and
mov
fisttpll
lret
das
sub
dec
inc
in
adc
pusha
and
xchg
das
icebp
pop
push
lods
ss
mov
int
jne
mov
mov
lahf
incl
enter
push
testl
in
dec
ss
adc
movsb
adc
xchg
dec
jno
call
das
popf
push
push
and
xchg
or
cmp
outsl
pop
into
fidivrl
ds
cwtl
enter
popf
jle
adc
and
es
cmp
loopne
mov
orl
or
cmp
cmpsl
xchg
loope
dec
push
jo
adc
push
xor
xchg
aaa
sub
jmp
jp
rorl
push
lret
cmp
and
inc
mov
rorl
movsb
push
lret
popl
lds
jnp
jle
cmp
rcr
adc
adc
jl
xchg
jmp
add
out
movsb
out
cmp
mov
in
sub
loopne
or
or
push
jecxz
insl
fmuls
xor
jg
imul
pushf
scas
test
aad
rolb
inc
sbb
outsb
dec
lock
fs
xor
mov
cmp
push
jl
loop
fstp
iret
stos
adc
cmp
xor
cli
std
xor
into
pop
mov
inc
decb
sbb
outsl
dec
dec
enter
and
shr
lahf
inc
shr
popa
xchg
js
out
in
ljmp
sahf
pop
scas
mov
out
jecxz
jne
testb
mov
xchg
loopne,pn
test
into
arpl
mov
inc
xchg
push
pop
xchg
fadds
adc
test
xchg
mov
ljmp
inc
std
mov
negb
inc
dec
sbb
leave
mov
and
xorl
push
mov
adcb
jp
into
rep
cmp
xor
push
loope
loope
hlt
adc
adc
push
dec
mov
jmp
inc
aaa
or
test
xor
sub
test
xchg
call
mov
arpl
rcll
mov
icebp
lret
es
imul
inc
cmp
cmp
movsb
fdivl
jecxz
cmp
cli
ret
in
jne
adc
cmp
out
pop
jl
push
push
repnz
jne
add
xchg
jae
adc
mulb
xchg
out
jne
xchg
andl
sub
movsl
shlb
mov
lea
push
loopne
vmwrite
movaps
add
inc
and
icebp
fsubrl
mov
dec
nop
fs
mov
dec
push
call
nop
insb
aad
adc
shll
sbb
test
std
pop
xchg
push
jae
cmp
adc
popf
jecxz
lea
clc
pop
cmp
lret
aaa
subl
or
and
mov
insl
fs
neg
sti
fists
fistl
enter
inc
repz
mov
fldl
int3
loope
movsl
pusha
mov
jge,pt
in
dec
inc
push
lret
test
test
xor
fsubr
xchg
and
std
pop
aaa
add
mov
test
xchg
push
inc
testl
test
mov
xchg
popa
mov
xchg
cmp
add
jo
inc
mov
movsb
repz
mov
cs
mov
fsubrs
in
mov
aam
repnz
fsubl
lods
and
loopne
add
cmc
ss
mov
nop
mov
xchg
mov
js
pop
mov
test
sbb
sbb
xchg
pop
cli
shll
daa
sub
or
pop
mov
mov
add
or
cmp
pop
test
adc
pop
mov
jno
xor
insb
cmpb
movsb
xchg
popa
push
sti
adc
int3
out
and
xchg
into
repz
in
and
test
sti
push
push
push
test
adc
js
jmp
stc
repnz
xor
xlat
movsb
mov
mov
ror
sbb
add
xchg
jne
enter
push
mov
or
mov
jecxz
pop
call
mov
sub
in
aaa
pop
loopne
push
pop
outsl
cmp
mov
dec
cmp
addl
sub
sub
lcall
add
mov
jmp
adc
sbb
dec
cs
xchg
int3
lret
rcr
and
xlat
in
mov
aad
enter
out
incb
neg
and
adc
push
js
test
xor
or
nop
inc
fadd
pop
leave
call
or
mov
and
push
xchg
lcall
ja
sub
loop
xor
push
insb
or
fcoml
ja
lcall
push
mov
mov
and
jb
fbld
movsb
inc
xor
xchg
sub
mov
lret
mov
push
sarb
and
mov
sub
add
jne
orl
hlt
mov
daa
jp
or
pop
jecxz
pop
bound
mov
xchg
inc
lea
loope
repnz
fimull
pop
imul
aas
test
filds
cmp
push
lock
xor
lds
fildll
dec
adc
out
cltd
adc
xor
jno
adcl
mov
push
enter
test
stos
enter
aam
mov
stos
inc
mov
mov
movsl
ss
dec
and
rorb
mov
daa
inc
je
and
pop
dec
sub
gs
sub
enter
mov
not
or
loop
fstps
sbb
call
lds
adc
adc
mov
fldt
call
imul
movsl
pop
imul
push
adc
or
cwtl
in
outsl
test
dec
pop
dec
adc
cs
xor
push
fwait
sub
rclb
nop
pop
fildl
andb
ret
xchg
or
rcll
sbb
shrb
and
lret
pusha
jb
imull
mov
xor
cs
std
inc
daa
inc
pop
pop
cli
sub
loop
mov
sbb
xlat
stos
fs
mov
dec
out
packsswb
repnz
sub
dec
into
add
fwait
roll
mov
dec
je
bnd
mull
xchg
sarb
arpl
sbb
lock
jno
mov
aas
insb
cmp
dec
arpl
or
clc
bound
lret
adc
clc
mov
xor
ss
cmp
inc
add
dec
mov
cltd
dec
push
cmc
xchg
into
hlt
bound
jmp
add
sub
arpl
fisttpll
or
inc
les
cmp
cld
push
imul
dec
stos
jg
sub
pop
xor
cmp
lret
mov
add
fcmovb
xchg
mov
rcrb
pop
dec
xor
stos
arpl
cmc
iret
lea
out
mov
push
push
push
add
insl
mov
sarb
insl
loop
andl
add
mov
add
flds
outsb
sbb
fdivr
mov
outsb
sub
push
es
jmp
outsl
jle
mov
shll
push
jmp
cmp
xchg
pop
cs
ds
jmp
push
cmp
stos
fisttpll
in
test
int3
mov
out
push
les
add
jnp
cmc
ja
lret
push
mov
neg
test
loopne
adc
es
add
cmpsb
js
lods
call
std
add
adc
jo
mov
sub
push
jg
jmp
imul
je
sti
inc
cmp
lods
subl
add
sbb
fists
arpl
dec
dec
push
sbb
pop
cmc
push
add
and
sub
mov
dec
cmp
or
jne
and
lods
cmc
mov
in
jns
pop
mov
shll
fidivs
jmp
xor
cmp
dec
cmp
dec
ret
dec
pusha
sub
sbb
ss
sbb
aaa
inc
in
and
pusha
xchg
sarb
cli
sub
xchg
mov
lahf
rcll
lret
jne
pop
mov
inc
or
pop
cli
mov
add
shr
jns
in
fidivs
inc
xor
cmp
imul
or
xlat
mov
dec
xchg
pop
lds
inc
xchg
popf
in
jae
jne
fistl
mov
pop
mov
pop
push
or
dec
out
mov
mov
imul
jmp
sbb
cmp
add
lock
into
jns
mov
inc
or
shl
xor
test
adc
add
lret
and
mov
loop
dec
je
lea
push
mov
or
cmp
jmp
push
push
ret
ret
stos
arpl
xor
insl
scas
das
sahf
push
pop
dec
xor
jmp
adc
sub
pop
pop
fldcw
jp
popa
arpl
rol
das
jl
pop
mov
dec
shlb
mov
or
cwtl
nop
scas
sub
sub
dec
jb
sbb
xchg
aad
adc
jnp
lds
arpl
test
and
xchg
jp
pop
rorb
adc
insb
inc
nop
jno
jl
cwtl
movsl
xor
sub
fs
bound
cmpsl
std
cmp
jbe
pop
fistl
and
stos
fiaddl
sbb
and
xchg
nop
lret
sti
clc
inc
cmpb
imul
push
inc
push
inc
lods
mov
pop
out
adc
xor
jns
add
or
sbb
pop
test
push
ret
mov
negb
pop
out
fadd
fsubs
inc
cmp
movsl
push
lret
add
sti
addr16
xlat
cli
jmp
jae
mov
sub
aas
or
mov
inc
lods
adc
int3
mov
fs
pop
mov
adc
inc
mov
iret
and
popf
sbb
into
rcr
fstl
pop
insl
mov
push
repz
das
dec
mov
mov
xor
xchg
add
stos
dec
test
lret
jmp
adc
out
lods
js
ficomps
insb
gs
and
imul
jmp
cmpsl
aas
xlat
aad
lret
lock
addr16
xlat
lea
out
push
cmp
mov
add
cmc
out
sub
add
test
or
jmp
and
inc
xorb
aaa
leave
lahf
dec
test
loope
insl
adc
loopne
pusha
enter
mov
sub
movsw
mov
pop
mov
sub
lret
adc
stc
cmp
and
cmp
sub
shll
sbb
repz
ja
mov
test
dec
cmp
push
push
dec
cmp
inc
xchg
xlat
xchg
jns
pop
xchg
sarb
mov
in
fistl
push
inc
adc
sub
arpl
adc
inc
fldenv
imul
dec
cwtl
pop
mov
daa
scas
testb
dec
pop
negb
jecxz
std
outsb
lret
inc
inc
popa
call
or
int3
aas
mov
out
inc
push
stos
into
imul
in
pop
daa
cmc
lret
cmp
out
imul
fildl
or
ljmp
test
jne
inc
call
adc
or
fdiv
movsl
sbb
sub
loop
scas
mov
cmpsb
mov
and
imul
mov
pop
into
xor
sbb
xchg
arpl
sti
orb
out
and
cmpsl
in
and
pusha
xchg
shrb
and
lds
clc
ljmp
insl
repnz
or
imul
pop
push
cmp
repnz
cmp
cmp
ja
ljmp
rorl
and
mov
std
mov
hlt
popf
and
in
imul
or
pop
pop
jno
sub
jle
mov
xor
cmc
add
xlat
test
sbb
mov
mov
or
subl
popa
test
pop
mov
das
aam
mov
add
mov
cld
fcoml
fmuls
fs
xor
cmp
xor
icebp
pusha
push
push
pop
cld
sub
mov
add
popa
pusha
in
incb
dec
insl
cs
mov
aas
lea
push
push
in
loope
pop
jno
popf
add
and
xchg
push
test
clc
xor
mov
ja
add
shlb
ljmp
cmc
into
sub
mov
repnz
jbe
shll
notl
repz
fldl
std
cmp
push
and
loope
and
mov
test
lret
stos
mov
imul
inc
pop
fsubr
cmc
dec
roll
mov
popf
out
and
lds
arpl
loope
cwtl
inc
mov
adc
lret
pop
repnz
pop
cwtl
add
jl
lret
pop
cmp
cwtl
leave
cmc
pop
ljmp
mov
sub
push
jmp
outsb
insb
test
mov
adc
fbstp
adc
dec
fs
inc
mov
dec
mull
mov
call
stc
aaa
stos
push
sbb
lods
sti
iret
mov
sub
inc
add
sbb
mov
pop
pushf
outsl
in
mov
mov
fstps
xchg
cmp
out
mov
lea
xchg
ss
jnp
fs
add
js
sub
cmpb
push
inc
dec
sub
xchg
push
into
jecxz
js
test
lds
fsubs
mov
jp
sub
xchg
adc
insb
sub
icebp
jmp
stos
cmpl
rolb
xchg
cmp
mov
rolb
arpl
repnz
outsl
fnstenv
mov
nop
out
push
jo
jne
adc
shll
jbe
fsubrl
mov
xchg
push
andb
lret
pop
sbb
mov
ret
jecxz
and
fimull
stos
dec
leave
hlt
inc
xchg
cltd
pop
inc
push
push
jo,pt
loope
shl
jp
int
outsb
or
push
subl
and
lds
pushf
leave
xchg
mov
mov
aam
xchg
xchg
ss
popf
dec
cmc
push
adc
arpl
push
and
pop
int3
cmp
jg
push
test
pop
mov
push
mov
xchg
and
fs
in
pop
jg
outsb
jo
mov
in
cmpsb
leave
pop
mov
call
xor
jno
add
lds
rorl
addr16
jo
loopne
std
popa
push
outsb
inc
xchg
or
xchg
jb
dec
test
loopne
xchg
outsl
or
repz
lods
sub
xchg
dec
ret
pop
lods
out
sub
inc
mov
mov
jb
lea
jnp
out
fcoml
sub
ficoms
std
push
mov
mov
stc
jp
test
and
mov
pop
aas
inc
cmp
addl
call
sub
pop
jecxz
call
push
ja
inc
push
call
outsb
aad
and
xor
cmc
and
jns
shlb
lret
pop
repz
pop
loop
cmp
dec
add
add
arpl
in
xchg
outsl
jge
imul
lock
xchg
inc
mov
xchg
sbb
xchg
sbb
clc
jp
sub
test
sbb
call
xchg
mov
in
popa
fldl
outsl
or
int3
cmpsl
mov
sbb
and
jns
out
or
jg
cmp
mov
xor
mov
dec
cmpsl
and
shl
add
lret
or
sysenter
fs
mov
inc
xchg
jg
and
or
daa
iret
pusha
rcll
mov
jb
notb
push
sahf
test
je
or
lds
mov
lds
add
adc
jno
out
dec
bound
mov
dec
je
in
sub
inc
sub
push
jmp
xchg
clc
stos
data16
fdivs
lods
int
mov
inc
pusha
dec
jne
imul
sub
insb
xchg
bound
push
jp
cwtl
jbe
mov
inc
mov
sbb
lret
shll
push
outsb
cmpb
ret
or
in
lcall
dec
lret
sbb
push
aas
je
push
adc
xor
jl
mov
mov
pop
and
loope
aaa
stos
push
sbb
push
loope
ret
sbb
pop
into
xchg
rorl
insl
sbb
add
dec
and
orb
pop
mov
push
add
jnp
inc
mov
jge
daa
fwait
xchg
sahf
dec
dec
movsb
outsl
jo
cmp
push
mov
mov
sbb
sbb
pop
mov
mov
pop
sub
fisttpl
pop
lods
mov
jb
int3
gs
jmp
cltd
and
mov
xor
jae
push
cwtl
in
nop
fwait
rcr
iret
iret
mov
adc
js
popf
ret
sub
ret
cmpsb
pop
and
xchg
or
jmp
cmp
loop
push
push
xor
jb
cltd
lock
repnz
dec
mov
push
fnstcw
jmp
sbb
dec
and
fwait
or
jmp
addr16
cmpsl
out
dec
mov
xor
cmp
pop
or
lret
adc
insb
in
cmp
into
fisubrs
in
lret
cmp
dec
mov
mov
orl
mov
shlb
add
sub
vhsubpd
mov
aas
push
dec
mov
pop
xlat
inc
in
test
pop
outsl
subl
test
ljmp
adc
sub
out
jo
ja
cmpsl
adc
ror
sahf
outsb
pop
or
sbb
xlat
insl
cmp
and
insb
int3
fs
es
cmp
mov
pop
add
xor
push
ss
add
and
jge
adcb
test
test
out
pop
pop
dec
adc
pop
into
scas
mov
mov
cmc
nop
adc
sub
loope
popf
fsubrs
nop
bound
shrb
ret
and
jo
mov
cmp
mov
nop
mov
enter
jne
lock
outsl
aas
mov
pop
jmp
mov
out
push
cltd
flds
and
and
jnp
int
jl
ret
sub
add
test
lods
lock
lahf
push
lods
pop
sub
outsl
in
pop
mov
mov
mov
test
and
add
int
add
mov
inc
cmpsl
mov
mov
and
loope
js
push
add
nop
xchg
ds
int3
xchg
push
push
mov
or
cmp
xor
dec
lcall
jp
push
lahf
adc
gs
cmpsl
fadd
jno
cwtl
and
popf
jne
xor
sbb
jecxz
js
call
adc
inc
out
movsl
mov
sarl
inc
cmp
cmp
lret
and
cltd
lret
filds
inc
imul
iret
aam
mov
jae
sbb
mov
mov
les
xchg
inc
push
inc
sbb
std
add
push
jecxz
mov
sub
aam
cli
push
adc
xor
sbb
pop
mov
in
out
xchg
jl
push
test
in
and
pop
mov
mov
mov
mov
jae
fsubs
cmp
les
negb
and
pop
lods
pop
add
mov
cli
add
std
jb
rclb
xchg
xchg
inc
mov
xchg
xchg
push
outsb
cmp
mov
cld
xor
lock
test
mov
xchg
pop
add
xchg
stos
push
aaa
push
jecxz
lods
push
nop
add
add
pop
dec
sbb
dec
test
cmp
rcrb
mov
fnstcw
cmp
fmull
pop
adc
call
pop
aaa
cmp
or
xchg
mov
or
push
sub
cmp
pushf
fsubl
xchg
out
cmp
ret
lret
sti
test
xor
push
and
sahf
mov
pop
xchg
add
xchg
sbb
movsl
stc
pop
push
push
ds
aaa
mov
je
ficoml
pop
insb
arpl
lock
movsl
mov
cmc
jns,pt
and
mov
scas
sub
cmc
jle
cmc
xchg
rcrl
pop
adc
dec
stos
ss
jnp
outsb
or
add
fsubrl
popa
mov
cmp
push
lods
mov
stos
sub
pop
sarl
push
mov
and
pop
push
loop
mov
shlb
outsb
sub
fbstp
fidivrs
mov
and
and
jnp
and
xchg
enter
test
pop
out
cmp
adc
or
jo
jmp
dec
je
repz
xchg
lods
es
mov
lret
int3
jle
icebp
rol
jns
fs
pop
repnz
fimuls
popa
cli
repnz
cmp
nop
dec
and
xchg
das
mov
mov
jmp
jp
or
stos
jg
int3
outsb
aaa
in
mov
clc
sahf
insl
add
jecxz
adc
add
aaa
dec
xchg
sbb
test
mov
mov
pop
je
mov
adc
cmp
in
sub
outsb
dec
dec
jmp
push
cmp
mov
jmp
mov
push
imul
push
mov
out
add
pop
adc
add
jg
imul
loope
or
adc
or
jg
std
mov
fsubrs
xor
sub
sbb
mov
loope
jns
mov
scas
and
or
cmp
sti
pop
fs
jg
pop
gs
in
push
sbb
add
jmp
popa
clc
loope
mov
inc
xchg
je
ljmp
loopne
cmpsl
rcrl
jb
fs
sbb
dec
clc
pop
adc
cmp
stos
mov
icebp
fbld
jbe
test
in
mov
into
clc
stos
rcll
shlb
in
nop
push
fs
enter
or
dec
out
jg
xchg
adc
or
outsl
les
dec
fnstenv
adc
jnp
jmp
push
xchg
ret
jp
adc
dec
idivl
imul
lea
shll
lsl
pop
movsb
inc
call
xchg
cli
fnstenv
fisubrs
in
shrl
push
cmpsb
iret
shrb
data16
push
int3
jae
push
inc
mov
dec
lret
cmp
sbb
test
lahf
ja,pn
adc
in
scas
lea
cmp
lret
decb
fstpt
sbb
dec
int
cmp
incb
inc
aaa
outsb
inc
pop
mov
cmpsl
outsl
ror
fimull
add
imul
out
loopne
push
sbb
aam
js
cmpsb
mov
or
and
outsb
mov
rorb
int3
jmp
lea
dec
mov
or
push
loope
stos
push
jbe
repz
jo
pop
xor
add
mov
andb
cmp
fstl
and
adc
pop
xchg
mov
enter
sti
scas
stos
ss
rorl
pop
cmc
sub
adc
adc
cmp
adc
addr16
dec
pop
cmp
es
xchg
mov
ja
pop
mov
dec
icebp
jno
imul
dec
add
inc
dec
push
pop
cmp
adc
gs
or
insl
mov
jnp
dec
fstps
dec
mov
int3
push
fwait
or
mov
cmp
ja
xchg
les
lds
insl
fimull
mov
push
lcall
imul
shr
push
int
pop
inc
push
jecxz
mov
push
dec
aam
mov
mov
loop
pushf
fucom
call
push
inc
outsb
jo
pop
inc
scas
fdivr
popf
jecxz
pop
leave
mov
dec
mov
cld
adc
out
movsl
scas
adc
popf
dec
leave
pop
or
push
xchg
mov
jmp
imul
sarb
ja
jecxz
shl
mov
test
xor
mov
ss
loope
xchg
jl
mov
fstpt
push
and
pop
in
mov
cli
inc
fnstenv
mov
pop
adc
out
inc
xchg
inc
call
insl
cli
jns
mov
adc
xor
in
ret
into
push
sahf
mov
dec
inc
sub
mov
cmpl
test
xor
movsb
inc
mov
or
js
lea
jge
out
jle
ss
out
push
shll
fchs
cmc
lods
jns
lds
jb
push
adc
sbb
cmp
push
jg
cmp
xchg
or
lods
notb
pushf
dec
mov
mov
test
gs
js
rcll
ret
icebp
add
mov
sub
pop
outsb
stc
cs
xchg
imul
clc
xor
push
mov
or
cwtl
pop
fisttpll
mov
jle
mov
dec
cmp
mov
lock
dec
sbb
mov
sahf
fwait
push
sub
stos
ss
clc
out
jl
fwait
push
dec
ja
mov
push
fwait
jo
mov
jle
and
in
mov
mov
ret
inc
jge
shll
repz
jp
xchg
inc
in
out
push
rol
mov
mov
mov
mov
filds
add
pop
or
pop
pop
dec
fcoms
gs
in
jge
jne
stos
ficoml
test
repnz
jno
nop
cmp
imul
dec
jg
pop
lds
nop
imul
xchg
das
popa
ljmp
int
and
hlt
mov
fwait
cmp
cmp
divl
dec
es
xchg
cwtl
pop
sahf
mov
pop
mov
and
and
in
mov
and
ss
and
sbb
or
scas
sahf
jg
ja
adcb
inc
mov
xchg
dec
fisttpll
xor
or
or
std
mov
ror
dec
mov
dec
loop
push
xchg
sbb
cmp
sbb
dec
jnp
sbb
stos
inc
xchg
sbb
xchg
repz
or
pop
testl
xchg
mov
mov
push
ss
push
sub
jecxz
notl
xlat
imul
mov
xchg
into
mov
fiaddl
call
aad
cld
or
inc
xchg
sbb
push
jmp
jno
dec
mov
cmp
rorl
aas
jp
xor
inc
roll
loope
dec
test
mov
test
stos
xchg
xchg
ficoms
mov
inc
popf
testb
fisttpll
decb
insl
pop
mov
lret
js
or
fsubr
push
xorb
jne
sub
dec
or
cmp
movsl
or
dec
lods
or
iret
xor
xchg
je
add
xchg
mov
jge
inc
jge
push
ret
int3
cmp
dec
in
sahf
popf
jmp
lcall
sbb
js
fcomps
sub
and
adc
mov
xchg
cmc
adc
icebp
in
add
aaa
ret
cmpl
and
fwait
pop
into
mov
neg
lcall
add
xchg
rcrb
jnp
dec
adc
stc
icebp
pop
mov
jmp
dec
mov
out
xchg
jo
andb
shl
arpl
fsubp
sbb
subl
addr16
sbb
xor
add
push
iret
push
xchg
pop
adcl
lods
jp
fldenv
xor
xor
sti
mov
xor
aas
adcl
jb
icebp
rcr
mov
movsl
cmpl
imul
nop
sbb
in
xor
xchg
jg
ret
cwtl
xchg
rcr
repz
dec
and
cmc
pop
in
cmp
arpl
fsts
pop
notb
outsb
push
add
mov
hlt
dec
inc
adc
jg
stos
lahf
mov
shll
aaa
xchg
rorl
lret
or
mov
out
jnp
or
aaa
fcoms
dec
lock
icebp
sbb
insl
lea
push
xchg
sub
xchg
into
fdivl
cmp
dec
cmpsl
sub
mov
xchg
xchg
dec
mov
shlb
in
xchg
and
negb
cmp
in
into
inc
sub
shll
repnz
push
mov
inc
adc
inc
imul
mov
cmp
push
inc
mov
add
lahf
push
push
int
fcompl
mov
mov
pop
iret
dec
jbe
lcall
jne
cmp
xorl
sub
mov
clc
inc
mov
in
icebp
xchg
pop
jl
push
clc
js
mov
es
data16
imulb
xor
pop
mov
loopne
out
and
fidivrs
daa
mov
daa
sub
xor
es
das
int
mov
fisttpll
jl
or
subb
fcomps
xchg
in
mov
cwtl
xchg
and
dec
sbb
shrl
ds
rcrb
inc
je
js
repnz
rorl
int3
ljmp
stos
sbb
in
js
lret
push
imul
xor
clc
xchg
repnz
out
push
gs
sbb
sub
inc
dec
and
leave
inc
inc
fwait
mov
pop
lcall
inc
dec
iret
inc
sbb
cmp
test
iret
or
int3
sbb
jmp
and
dec
mov
and
iret
loope
cmp
sbb
push
shl
jne
add
lods
push
xor
sahf
bound
lret
xchg
dec
xor
mov
mov
mov
nop
daa
sbb
mov
fldl
cmc
stc
rorl
int3
aas
mov
inc
cmpsl
adc
pop
pop
add
sub
seta
sub
jne
inc
mov
jecxz
jno
sub
icebp
imul
repz
xchg
mov
adc
cmp
and
lock
les
push
mov
cmpsl
clc
inc
cmp
pop
sar
mov
shll
jbe
ret
mov
jl
xchg
cmp
jbe
cmp
push
js
sub
and
pop
pop
push
mov
push
or
ss
data16
or
jno
add
in
stos
pop
lods
cmc
inc
in
jp
cmp
mov
jae
xchg
push
or
sbb
sahf
imul
jo
clc
adc
int3
cs
dec
scas
filds
or
inc
shrb
jbe
lds
insl
lret
sub
or
and
fcoml
mov
or
cli
fwait
arpl
lds
stc
or
adc
mov
insb
push
loop
addb
xlat
sbb
icebp
scas
mov
mov
cs
and
mov
xchg
lahf
lcall
sub
test
adcb
mov
adc
aam
gs
gs
clc
jne
fisubl
xchg
test
insb
repnz
stos
call
outsb
ljmp
pushf
mov
test
es
je
adc
int3
jo
add
add
fs
add
rcr
rcrb
or
mov
mov
cltd
les
inc
insb
mul
add
cwtl
and
mov
int3
outsb
rcll
sub
or
dec
jns
hlt
aas
xchg
call
or
popa
jp
dec
and
push
loop
repnz
jl
imul
pop
pop
lea
movsl
jge,pn
xchg
into
cmp
or
add
ja
pushf
inc
es
pop
ret
or
inc
jne
pusha
mov
sub
xlat
xlat
dec
mov
mov
push
push
int
in
xor
pop
ficompl
shll
enter
push
mov
aam
pop
cli
mov
push
dec
popf
test
adc
push
pop
xchg
lds
sub
scas
stos
pop
ss
xchg
cs
hlt
mov
cmpsl
and
mov
push
fdivl
mul
pop
js
jmp
mov
in
mov
inc
dec
and
push
sbb
insb
lds
fs
adc
cmp
mov
xor
or
arpl
cmp
outsb
adc
cli
lods
loopne
xchg
mov
cmp
dec
int3
pop
dec
les
push
clc
ss
pushf
mov
jo
cs
ss
or
scas
or
icebp
push
sbb
xchg
dec
jmp
out
fs
push
sub
notb
fisttpll
je
push
xchg
call
call
js
loope
add
mov
and
stos
cmc
loopne
addr16
or
xor
mov
fsubl
mov
xor
fwait
jmp
cmc
sbb
xchg
sbb
aaa
adc
mov
pop
jmp
lret
lods
icebp
pushf
je
push
mov
je
xchg
add
cmp
sbb
xor
sti
mov
outsl
jp
sbb
bound
out
into
xchg
sub
and
adc
mov
jge
repz
add
cmp
mov
jno
imul
aas
iret
jl
or
ja
sub
or
fs
das
mov
lret
jmp
aaa
mov
xchg
push
mov
pop
mov
outsb
rorl
mull
in
xchg
cmpsl
xchg
pop
movsb
in
adc
push
stos
cmpsl
in
xchg
inc
call
inc
xchg
das
ljmp
push
pop
data16
js
nop
lds
leave
test
insb
ret
cmpsl
cmp
pop
popa
outsl
jae
jle
mov
add
xor
mov
popf
adc
xchg
mov
cmp
cmp
cwtl
add
gs
pop
xlat
sbb
arpl
lret
cwtl
mov
call
es
cld
in
in
lahf
ret
ss
cltd
unpcklps
jnp
xor
jge
push
cmp
cltd
lahf
ret
or
notb
jecxz
icebp
xchg
pop
mov
jl
push
push
leave
daa
fwait
adc
rcl
sub
xchg
notl
pop
add
pop
push
pop
mov
jbe
pop
jae
jns
lret
cmpsl
int
jecxz
bound
mov
sub
bnd
jnp
xor
add
pop
lret
lahf
xchg
unpckhps
out
jp
adc
std
push
out
cmp
jle
jle
push
jle
fwait
dec
or
pop
mov
pusha
or
shlb
cld
in
jae
lahf
push
adc
mov
imul
cmp
dec
aad
cmpsb
xor
out
mov
xchg
jmp
inc
mov
xchg
inc
adc
and
lcall
xor
or
and
cmc
test
mov
add
add
mov
xchg
xorb
fsubs
and
pop
pop
sbb
es
pop
xchg
test
push
mov
ss
or
adc
jecxz
jecxz
dec
rcrb
addr16
sub
xlat
fists
adc
rolb
adc
push
lock
mov
and
inc
push
xchg
cmp
adc
dec
rcrb
popa
pop
insl
out
mov
xchg
mov
mov
jbe
adc
int
fldenv
dec
je
flds
mov
out
add
xchg
cmpsl
fstpt
int3
mov
dec
mov
jmp
mov
mov
push
das
fwait
aad
cmp
lods
ret
jbe
mov
dec
sbb
cmpsb
test
shll
lret
add
aam
jg
lods
or
fadd
mov
std
sbb
jl
xor
inc
dec
mov
xor
out
inc
test
pop
xchg
adc
inc
cltd
fwait
pop
js
push
mov
enter
xor
mov
out
mov
enterw
outsb
outsb
add
movsb
inc
add
fildl
pusha
call
or
lds
inc
adc
test
dec
jb
lods
inc
int3
inc
es
mull
pop
add
rcr
cmp
lcall
clc
inc
xchg
add
shlb
cs
pop
xchg
fisttpll
pop
sub
cmp
mov
sahf
push
lea
push
xchg
or
pop
sbb
push
cmp
push
out
js
sub
jno
in
iret
popf
sbb
cmp
jbe
les
int
pop
imul
setne
std
cmp
je
mov
movsb
fcmovnu
mov
fnstenv
into
or
shl
sti
daa
int
movsb
mov
fs
push
mov
sbb
cmp
pop
jne
pop
fsub
es
scas
inc
ficoms
out
enter
cs
cmp
dec
jecxz
imul
jmp
xchg
ja
xor
cmp
cld
test
icebp
in
roll
push
sbb
pop
mov
call
jge
addr16
add
repnz
xor
jo
in
push
aam
sbb
sub
roll
push
cmpb
sub
adc
jge
scas
xor
push
add
cmp
mov
pop
rorb
push
dec
xor
jae
add
jno
dec
pop
pusha
cmp
adc
movq
dec
es
mov
push
es
cmp
jecxz
mov
jns
pop
inc
inc
mov
fstpt
jb
adc
sbb
andl
movsb
movsb
icebp
ds
lret
test
or
dec
mov
addr16
push
sbb
sbb
in
mov
ret
cs
adc
sbb
sahf
jno
xor
mov
andb
aam
or
xor
jp
loop
cmp
xchg
sub
adcb
aaa
cmp
sbb
pop
lret
push
out
cmp
sbb
aas
mov
mov
out
pop
adcb
popa
mov
and
xorl
sub
xchg
xchg
inc
ss
jae
lret
movsl
mov
sahf
mov
jbe
stos
out
and
cmp
sbb
repnz
push
mull
popa
xchg
mov
jge
dec
pop
les
bnd
jno,pt
mov
push
ret
divb
xchg
cltd
xchg
push
stos
repz
push
xor
jne
xor
inc
xor
fisttpl
nop
js
dec
adc
xor
mov
mov
push
cmpb
pop
fcompl
push
ljmp
repnz
pop
les
mov
xorl
fstl
jle
mov
mov
cltd
jns
adc
pop
lret
push
nop
aas
fwait
clc
mov
and
popf
jmp
outsl
loop
dec
dec
fimuls
mov
xchg
adc
mov
xchg
cli
lods
dec
shll
in
fisttpll
xor
cmpsb
mov
jne
mov
stc
mov
push
cmp
icebp
fldcw
xchg
pop
sti
and
js
fdiv
divl
push
stos
push
mov
fsubr
sub
dec
sbb
dec
insb
mov
les
leave
lods
ffree
cli
iret
out
test
std
push
loope
out
fbstp
jo
xchg
and
cltd
fimull
dec
inc
sbb
je
idivl
or
adc
inc
mov
jbe
int3
outsb
cmp
mov
xchg
lds
or
sub
fsubrl
sbb
xchg
mov
lret
popf
sbb
jne
shl
sahf
and
inc
dec
mov
scas
adc
mov
pop
or
mov
push
or
xor
sub
aas
push
fiaddl
mov
and
fs
data16
sbb
lea
ret
jae
and
sbb
inc
push
inc
ja
cwtl
mov
cwtl
iret
sub
inc
aas
xchg
lcall
pop
push
inc
inc
add
inc
repz
ja
imul
imul
aad
int
cli
jmp
mov
inc
and
dec
out
sbb
mov
getsec
mov
xor
sbb
in
adc
mov
rorl
imul
xor
xchg
fiadds
add
push
or
call
repz
add
pop
jmp
mov
aad
add
pop
xchg
cld
mov
xchg
cmpsb
inc
ljmp
dec
inc
flds
call
inc
nop
and
test
mov
test
jp
leave
lret
clc
pop
mov
jo
xchg
das
mov
je
js
orb
sub
subl
pop
sbb
in
dec
testl
push
mov
test
xlat
cmp
xlat
push
arpl
jno
jb
int
lret
mov
daa
rorb
push
or
iret
rol
cwtl
dec
imul
or
mov
mov
adc
xor
stos
inc
push
test
and
and
add
and
cmp
repnz
cwtl
outsb
int3
mov
aas
cmp
cld
sbb
cmpsl
jmp
popa
push
sub
xchg
movsl
xchg
mov
mov
mov
add
pusha
ljmp
jl
lea
aad
xor
dec
sub
push
mov
mov
mov
sbb
jmp
std
jo
lock
into
cmp
aas
mov
xor
xchg
notb
add
dec
ret
mov
fs
sbb
jge
dec
dec
pop
sub
mov
or
add
pop
lods
fsubs
sub
std
and
lds
gs
iret
inc
int
ror
sbb
es
xor
xor
scas
sbb
adc
inc
lods
dec
popf
xchg
into
call
idivl
lcall
xchg
insb
addr16
dec
xchg
mov
xor
xchg
mov
popf
fnsave
add
dec
bound
add
cmc
fidivl
iret
mov
add
sub
jmp
mov
jmp
dec
dec
sub
imul
jle
and
xor
pop
mov
jne
jnp
test
loop
mov
mov
pusha
dec
fisttps
lds
nop
xor
cwtl
push
std
test
gs
fstpl
xchg
in
sub
xlat
dec
orb
jnp
mov
cmc
xchg
loopne
jae
data16
dec
nop
xchg
enter
imulb
xor
lret
xlat
out
in
cmp
fmul
jnp
cmc
rcrl
lret
mov
pop
icebp
pop
gs
add
push
sub
inc
push
inc
inc
subl
mov
push
dec
and
mov
mov
mov
mov
push
inc
push
sub
roll
pop
call
jns
data16
icebp
xchg
xor
je
out
sbb
data16
sub
lods
clc
fwait
cltd
mov
mov
imul
fmulp
cmp
push
mov
or
adc
mov
pop
fs
add
xor
sub
xchg
icebp
pop
lea
inc
mov
adc
xor
out
jge
out
test
jecxz
aam
testb
sbb
scas
add
es
dec
fisubrl
fistpll
xor
sub
ljmp
sbb
sarb
rcrb
aaa
mov
add
out
pop
or
mov
bound
jle
jbe
mov
rorb
es
mov
adc
loope
fs
cli
xchg
jle
xchg
jg
or
push
jmp
inc
in
xor
sbb
stos
dec
cld
jmp
lahf
lret
mov
fcoms
and
pusha
push
pop
push
pop
jo
mov
jb
das
cmp
scas
xchg
mov
popa
rolb
jae
bound
push
xor
gs
aas
daa
sbb
je
adc
adc
ljmp
rorb
jl
sub
mov
mov
inc
mov
fiadds
fwait
mov
aam
lock
inc
outsl
xchg
sbb
push
and
ret
xchg
pop
add
mov
xor
or
stos
push
in
mov
xchg
mov
dec
jle
stos
cli
mov
sbb
push
dec
push
jge
imul
jp
loop
das
les
fadd
rcr
test
mov
ret
mov
in
and
inc
dec
inc
ss
repnz
mov
mov
xchg
xor
pop
enter
push
pop
ja
add
mov
inc
inc
adcb
add
inc
fldenv
push
and
pushf
and
rolb
jmp
xor
or
xor
in
popf
mov
loope
inc
rcll
outsl
gs
out
fst
jg
jnp
push
sti
test
out
lea
ss
shl
xchg
das
jp
xchg
out
sbb
and
lock
xchg
push
or
imul
mov
loop
gs
fidivl
and
and
and
push
mov
imul
push
cmp
add
clc
mov
lahf
in
cmpsb
push
pop
push
int3
mov
aad
adc
mov
dec
psubsw
insl
jle
mov
hlt
loope
shll
lret
mov
and
jb
mov
inc
or
pop
cmp
cwtl
pop
push
in
push
sti
xchg
divb
insl
outsb
lock
hlt
mov
dec
cmp
jne
fs
mov
mov
xchg
shrb
push
lret
popf
cmp
cltd
ja
xchg
or
bnd
adc
out
cmp
blcs
sbb
rcll
rclb
jmp
xor
push
imul
xchg
in
test
push
imul
mov
aam
decl
sahf
push
test
and
mov
dec
xchg
adc
push
pop
dec
inc
and
pop
and
cmpsl
ud1
xor
cwtl
test
jno
cmc
and
arpl
xlat
stc
icebp
push
or
push
and
xchg
clc
je
mov
test
clc
gs
stc
sub
inc
mov
xlat
jo
ret
addr16
jmp
test
fmulp
ficoml
leave
adc
std
mov
push
cld
pop
xor
add
gs
hlt
test
outsl
mov
and
movsl
add
das
fstps
pop
push
ficomps
ds
pop
add
inc
insl
loop
pop
insl
xchg
xchg
repnz
push
dec
adc
xchg
mov
fcmovne
movsl
and
aam
or
mov
repz
or
sbb
scas
jmp
mov
pop
pop
pop
imul
aaa
pop
mov
out
bound
cli
add
outsl
xor
dec
and
mov
gs
fdivrl
ljmp
mov
das
sub
fwait
sbb
adc
test
enter
xor
stc
mov
dec
sub
sub
sarb
jle
fcmove
and
lds
pop
test
pop
jmp
xor
jecxz
xchg
cmp
mov
or
aam
nop
or
add
ds
pop
in
inc
hlt
sub
mov
sub
adc
test
arpl
pop
je
pop
push
orl
lea
pop
xchg
xlat
in
icebp
xchg
rorb
scas
lcall
loop
or
sbb
push
sub
lahf
and
scas
mov
bound
sahf
hlt
sarb
xchg
out
push
je
jns
jne
dec
mov
into
cmpsl
push
sbb
or
pop
cmp
push
stos
cmpb
cli
scas
push
add
cmp
decw
push
mov
push
fildl
stos
inc
or
addr16
fsts
testl
jno
sbb
or
imul
neg
aas
jle
pop
pop
pop
call
loop
cld
pop
mov
inc
outsl
jbe
xor
jle
andb
leave
clc
mov
and
push
sbb
movsb
mov
jl
mov
cmp
jge
lds
or
fstpt
dec
mov
or
outsl
adc
arpl
mov
xor
notl
hlt
lods
loope
cmp
fisttpll
pop
jl
sub
adc
negb
push
add
or
mov
and
or
test
adc
scas
and
xor
dec
sub
fmulp
mov
repz
test
pop
andl
dec
push
dec
dec
pop
or
shll
out
enter
daa
push
add
std
and
stc
jl
es
cmp
xor
jae
addr16
inc
mov
jno
jmp
push
pushfw
jecxz
sbb
les
sahf
cld
cli
push
sbbl
stc
rcll
mov
arpl
lret
mov
in
in
and
mov
mov
add
icebp
out
pop
in
cmc
adc
scas
cltd
mov
push
add
cwtl
cmp
fists
cmc
scas
test
or
movsl
and
loopne
aaa
rcl
add
or
scas
cmp
imul
sahf
iret
mov
pop
or
xchg
call
jnp
sub
xor
xchg
or
xchg
jmp
and
addr16
ret
inc
adc
data16
mov
mov
aam
jp
jecxz
cmc
rorl
jle
sub
je
ret
xchg
aaa
adc
xor
stc
inc
lret
adc
cltd
jo
push
mov
mov
mov
cmp
into
adc
push
into
and
xchg
jns
pop
cltd
fwait
sbb
lahf
adc
sbb
lea
sub
imul
ja
xor
imul
jb
sahf
push
mov
enter
loope
lds
sbb
mov
fs
sbb
rcr
lret
push
in
jno
xor
lret
cmp
add
xchg
pop
and
fwait
mov
js
push
dec
fldenv
filds
js
or
sub
mov
popa
out
in
add
pop
popf
pop
xor
popf
cwtl
repnz
scas
mov
mov
pop
dec
jge
loop
movsb
aaa
sti
adc
rcrl
cmpsb
cli
leave
leave
or
aad
add
mov
lock
pop
mov
out
lahf
cmpsl
jnp
and
jno
and
lods
mov
xchg
xchg
mov
xor
flds
loope
xchg
fwait
in
sub
cmp
xchg
mov
push
xchg
push
sahf
mov
cmp
std
int3
pop
sub
mov
mov
xchg
pop
mov
mov
movsb
dec
pop
lods
inc
push
pop
sahf
dec
lret
lods
call
dec
cmp
mov
dec
stc
cmp
and
pop
jge
aam
leave
cld
cmpsl
das
or
mov
mov
push
pop
inc
ret
dec
xchg
gs
stos
sub
or
js
sub
cmpsb
fisttpll
xchg
push
rolb
jmp
mov
adc
push
insl
add
xchg
js
loope
movsb
jl
sbb
xchg
sbb
sbb
mov
movsl
inc
aaa
cltd
in
push
rolb
mov
fs
mov
mov
sbb
pop
loope
scas
push
mov
cmp
jp
pushf
sbbb
pop
mov
out
pop
add
shl
jae
outsl
push
dec
sbb
jae
repz
ds
sahf
ds
jge
mov
mov
sbb
adc
mov
jb
xor
subb
cmp
data16
out
cmp
cmp
dec
cs
filds
mov
test
pushf
sub
inc
add
xchg
pop
hlt
pop
and
jp
mov
xchg
fdivs
sbb
jno
movsl
insl
stc
add
cmp
dec
aaa
loop
sar
test
jp
cli
movzbl
dec
pop
mov
fsubl
jp
mov
loope
mov
jb
mov
repz
add
mov
mov
in
mov
insl
in
xor
pop
mov
ret
or
imul
mov
xlat
int3
sub
adc
xchg
xor
pop
outsb
xor
fs
scas
xchg
sbb
idivb
sub
xchg
jp
dec
cmp
adc
xchg
jle
or
jl
mov
outsl
push
rcrb
cmpsl
ds
mov
pop
scas
shlb
sub
repz
mov
je
test
adc
sbb
inc
sub
js
push
jne
mov
jmp
push
add
jae
xchg
es
ds
subl
mov
add
and
and
gs
adc
cmpsb
fmul
jl
cmp
sub
jecxz
aaa
cli
ja
fsts
ljmp
jo
sub
les
cwtl
lahf
mov
sub
jmp
ja
loop
mov
jecxz
xor
add
lods
lea
bound
pop
sbb
sti
cmp
mov
cmpsb
sub
aam
dec
nop
cmp
ljmp
mov
fnsave
iret
dec
pop
cmc
ljmp
scas
stos
mov
pop
or
jo
movsl
jbe
cmp
sti
sbb
jp
jae
sarl
scas
inc
add
inc
sub
xor
fcmovu
lret
testl
jnp
cmp
iret
lds
jg
ja
or
pop
sub
sbb
stos
test
mov
xor
add
dec
mov
adc
add
pushf
pop
aam
mov
into
leave
sbb
pop
adc
push
mov
lock
lahf
xor
xchg
xor
and
inc
sahf
test
or
jne
in
pusha
cmpsb
xchg
and
xor
mov
enter
fwait
test
filds
push
mov
xor
lea
jl
jbe
add
insb
pop
daa
outsb
popa
mov
sub
hlt
movsl
test
push
inc
pushf
leave
scas
mov
mov
jge
mov
adc
int3
jae
mov
jbe
push
dec
mov
fwait
pop
sbb
mov
stos
push
adc
push
or
sarl
fwait
cmp
ss
push
adc
in
push
pop
mov
ljmp
dec
mov
jecxz
div
test
or
mov
lock
fwait
leave
aad
sbb
test
sbb
fmuls
xchg
outsl
sub
repz
sub
xor
es
fiaddl
xchg
jge
xchg
leave
rol
xor
loope
mov
cmp
ljmp
jecxz
sbb
dec
aad
gs
mov
popf
scas
and
dec
out
aas
mov
dec
sbb
loop
mov
lcall
add
aas
jg
pop
add
push
sub
subb
mov
sbb
addr16
idiv
mov
jno
cmc
movsl
imull
stos
nop
rcll
jns
adc
cmp
mov
cmp
sub
sub
aad
xchg
push
bound
cmp
adc
add
pop
ret
sti
inc
out
popf
gs
dec
clc
ds
mulb
push
push
or
hlt
mov
imul
sub
daa
dec
sarb
and
aam
ljmp
popf
mov
iret
and
push
cmp
push
pop
dec
ja
aas
inc
push
jmp
leave
cmova
int
xor
lods
aad
xchg
sbb
aad
fstps
pop
stos
jecxz
mov
mov
xor
cmp
addr16
jo
in
jle
dec
mov
push
jno
push
fldt
inc
divb
testb
mov
in
pop
push
push
or
mov
movsb
rcrb
dec
in
das
sbb
out
fadds
sti
mov
and
popf
in
lods
dec
sub
cwtl
sbb
add
sbb
rol
pop
stc
add
orl
scas
adc
dec
into
movsb
insb
dec
mov
mov
shlb
sbb
in
leave
cmp
mov
test
add
not
es
or
orb
add
sub
inc
das
pop
shrl
sub
ret
movsb
push
xor
das
mov
sub
sub
xchg
mov
incl
or
shlb
outsb
push
mov
imul
cmp
leave
lea
jo
and
in
es
adc
jno
enter
aam
adc
pushf
sub
dec
ror
jecxz
mov
dec
movsb
les
mov
adc
pop
movsb
aad
dec
pop
inc
and
cmc
std
cmp
or
sbb
idivl
scas
push
les
pop
mov
mov
pop
lcall
xchg
rclb
outsb
test
insb
aam
xchg
insb
call
mov
jecxz
xchg
dec
dec
iret
imul
or
mov
xchg
ret
jae
les
xlat
mov
out
pop
scas
xor
sub
out
push
cmpsb
stos
outsb
icebp
mov
daa
into
ret
fstl
add
and
leave
mov
les
fisubs
adc
pop
push
iret
repz
fs
out
push
aas
orl
das
out
arpl
int
mov
xor
dec
sbb
lods
xchg
xchg
pop
lret
xchg
sub
clc
add
add
into
std
adc
and
das
add
scas
lods
jae
xchg
cmpsb
sub
inc
jae
bound
insb
lock
pushf
aad
mov
jecxz
mov
push
dec
push
in
aaa
cmp
cmpsl
push
sub
nop
and
test
sub
pop
pop
cs
cwtl
push
push
fsubrs
sbb
cmp
xchg
and
stos
cmp
repnz
and
jg
mov
mov
jmp
fists
inc
cmp
in
mov
int3
fldz
xor
dec
scas
mov
lock
subb
fwait
imul
dec
pushf
adc
js
test
aad
jo
ljmp
movsb
mov
mov
pop
div
std
out
sbb
push
fstl
leave
test
jae
aam
jmp
mov
push
insb
mov
add
jp
cmp
mov
shrb
pop
mov
lods
jp
leave
mov
or
dec
xor
or
data16
outsl
test
je
pop
outsb
fidivl
inc
les
repz
in
mov
pop
push
sahf
les
inc
insb
add
inc
add
cld
imul
loop
sbb
jno
or
mov
and
loope
sub
push
push
mov
mov
jp
aaa
pop
das
test
cmp
jp
sahf
mov
jns
add
bound
out
popa
mov
dec
aam
testb
xchg
out
shl
iret
iret
cmc
aas
adc
fsts
xchg
int3
mov
lods
xor
cmp
and
and
mov
cmp
mov
cli
in
mov
xor
std
add
bound
cmpsl
mov
test
mov
mov
push
xor
and
xchg
mov
push
adc
inc
outsl
xor
outsb
loope
xor
icebp
orl
int3
jg
cli
lods
or
cmp
cmp
bound
jmp
loopne
ss
pop
mov
pop
cmpxchg
push
cmp
stc
out
aas
popa
arpl
je
add
stos
mov
or
xchg
outsl
xchg
jae
jbe
mov
sbb
mov
rclb
sub
lea
and
xor
ret
aad
sbb
add
or
fidivl
call
lods
cli
mov
loope
test
ja
jecxz
cld
mov
xchg
push
gs
xorl
pop
lods
sbb
add
add
cmpsb
dec
jp
adc
insl
and
fsts
mov
shrb
sub
xor
test
sub
or
dec
daa
xor
pusha
mul
in
or
sahf
mov
sbb
sbb
pop
leave
sub
outsb
aas
rcrb
mov
aam
into
xchg
push
stc
jbe
jnp
das
in
cmp
mov
xchg
sbb
outsb
movsb
lds
jns
jne
out
jae
pop
xchg
iret
icebp
inc
pop
das
or
or
inc
push
mov
push
hlt
mov
cmp
insl
jo
rclb
and
out
je
addl
aam
mov
call
fidivrl
xor
imul
js
dec
xchg
cmp
jmp
sbb
mov
mov
cwtl
add
sbb
pop
xchg
scas
decb
nop
cmp
and
cli
orl
popa
pop
leave
cli
fucomi
fisubl
lcall
popf
das
mov
and
inc
lds
jbe
jge
mov
mov
pop
repz
iret
jmp
xchg
cmp
mov
lcall
push
jae
out
jge
cmpsb
push
fldl
sti
mov
sahf
inc
fiadds
mov
xchg
fcoml
cs
xor
out
call
adc
fwait
dec
stos
lret
data16
mov
sbb
xchg
sbb
cmp
jp
into
mov
push
push
push
dec
xor
das
mov
push
es
lret
imul
mov
data16
inc
xor
sbb
lea
outsl
lods
aas
stos
push
xor
inc
push
sti
inc
sbb
enter
scas
dec
jo
xor
push
jg
insl
or
mov
inc
js
fninit
mov
outsb
ret
jge
pusha
imul
or
dec
mov
cmp
data16
xchg
xor
sub
aaa
pop
les
or
in
repz
pop
adc
daa
dec
xor
pop
xor
add
and
jp
std
sub
dec
lea
cmp
sub
lahf
out
gs
jb
mov
andl
adc
aaa
and
mov
movl
push
pushf
out
lret
inc
xchg
enter
mov
mov
clc
iret
add
sub
jmp
pushf
lods
mov
or
inc
jne
ret
nop
mov
xorl
push
push
jmp
xchg
and
push
loop
enter
js
dec
and
pop
jnp
in
out
jo
das
xor
lret
xor
loope
lds
loopne
jl
pushf
inc
jno
mov
cmp
mov
lret
xor
sub
imul
pop
fs
xchg
or
es
imul
sbb
roll
inc
out
inc
mov
ret
mov
out
and
jg
mov
mov
inc
popf
mov
aad
and
cmpb
sub
push
lea
sbb
jb
pop
imul
xchg
add
clc
lret
sbb
sbbb
mov
cmp
mov
rcr
push
mov
insl
adc
adc
mov
push
js
shlb
adc
or
shll
icebp
imul
push
icebp
jns
and
insl
add
dec
jle
add
das
jnp
insb
mov
mov
cmp
inc
pop
outsl
lods
add
inc
lss
enter
jo,pt
jno
out
sub
pop
sbb
push
and
and
dec
repnz
fcoms
loope
rcll
repz
cmp
ds
call
cmp
mov
inc
mov
into
mov
clc
ljmp
cmpsl
in
fwait
lahf
cltd
cmp
mov
fidivs
call
outsb
sub
xchg
lahf
cmp
dec
xor
insb
fisttps
ljmp
rclb
pushf
jbe
dec
mov
movsb
inc
dec
and
std
daa
mov
xchg
and
or
aas
cld
pop
faddp
addl
or
outsl
pop
mov
cmpsb
lahf
leave
mov
pop
iret
mov
mov
pop
cmc
pop
dec
push
inc
or
and
xchg
or
stos
or
dec
out
pop
es
test
out
jne
in
push
add
call
pop
add
xchg
sbb
fcomps
jbe
test
js
push
dec
sub
add
add
push
dec
add
mov
int
push
addr16
out
xlat
cmp
add
xchg
add
pop
adc
cli
out
jbe
daa
stc
roll
mov
sbb
xchg
stos
xlat
and
fwait
out
push
aas
jae
sub
sbb
jle
icebp
insl
nop
mov
sbb
mov
push
push
add
bound
jmp
iret
or
in
inc
hlt
sub
outsl
xor
cmp
in
sbb
out
cmp
dec
cli
ds
inc
lret
push
and
xchg
mov
roll
mov
cltd
mov
mov
xor
push
inc
icebp
mov
fiadds
dec
lods
pop
jp
nop
mov
outsl
and
mov
jbe
hlt
and
cld
aam
je
xor
inc
std
or
test
aam
pop
aaa
shll
or
in
sar
add
mov
sti
sbb
mov
or
push
mov
xchg
jbe
cli
pop
jle
lret
sbb
pop
add
dec
movsb
xchg
sbb
sub
bound
shr
add
imul
mov
push
adc
clc
mov
adc
sbb
xchg
icebp
jg
sbb
popf
je
aam
add
fs
push
xchg
sbb
cmpsl
xbegin
or
cmpsb
sbb
shll
sub
cmp
call
push
out
jmp
fs
push
inc
xchg
push
pop
pop
dec
lods
cltd
mov
arpl
repnz
shrl
ficompl
mov
jb
jno
inc
adc
xor
sbb
or
imul
icebp
add
dec
inc
outsb
sub
cmp
or
lock
push
es
push
out
inc
ret
mov
sahf
enter
and
push
test
fdivrl
or
sahf
mov
cmc
add
push
or
mov
xchg
fsubrs
mov
cmc
mov
test
xchg
aas
push
shrl
or
jae
cmp
cmp
xchg
sbb
push
hlt
pop
cmp
daa
ss
lods
les
ljmp
nop
arpl
rclb
add
push
dec
movsb
dec
aas
pop
sti
and
aaa
mov
jl
idivl
fcomi
daa
leave
and
pop
outsb
sbb
adc
cmp
push
mov
arpl
in
loopne
ficoml
xor
xchg
jae
sahf
cli
or
mov
inc
rorl
sub
lahf
lock
jns
push
dec
shl
insb
out
mov
frstpm(287
xlat
mov
pop
loopne
cs
fildl
or
dec
cmp
dec
xchg
outsb
sbb
repz
pop
jbe
inc
pop
fwait
pop
xor
roll
movsb
jae
inc
outsl
jmp
cmc
pop
mov
or
mov
xor
fwait
in
jmp
pop
dec
data16
sarb
inc
cltd
enter
lret
dec
inc
repnz
jmp
xor
pop
fiadds
out
mov
cmpsl
lods
mov
or
add
rcrl
inc
adc
jmp
loopne
dec
pop
lret
pushf
test
into
rorb
in
jo
je
jbe
arpl
push
es
push
push
fildll
xor
pop
jb
or
jae
notl
cmc
xor
not
das
pop
fcmovne
aas
mov
inc
loope
dec
push
fsubs
and
imul
pop
xchg
or
inc
ja
nop
mov
adc
jg
gs
leave
xchg
clc
xchg
dec
cmp
add
and
adc
xchg
jp
in
subl
push
fisubl
insw
icebp
test
dec
outsl
inc
fnstcw
mov
and
mov
pop
movsb
push
and
xchg
jmp
inc
push
movsl
or
adc
add
pop
cs
mov
adc
outsb
orps
roll
mov
or
mov
cltd
push
push
mov
decl
scas
mov
cmp
jns
mov
scas
lods
insb
and
mov
push
jb
xchg
rol
into
cmp
idivb
mov
nop
push
pop
mov
adc
dec
mov
xchg
outsl
in
and
dec
add
aam
xchg
dec
cli
aas
pop
imul
push
in
inc
jb
dec
inc
orl
push
inc
shr
push
add
mov
pop
rclb
sbb
push
jp
mov
sub
xor
ret
sbb
or
pop
mov
lret
or
cmpsb
cwtl
cmpsb
pop
push
inc
fwait
popa
inc
outsl
mov
xor
xchg
pop
xchg
ret
in
fwait
and
sti
add
add
push
pushf
cmp
hlt
out
jbe
push
iret
cmpb
movd
loope
sbb
jb
pop
out
inc
cmp
xlat
inc
xchg
ret
xor
clc
sub
mov
push
jle
mov
and
jge
jnp
pop
xchg
dec
xchg
stos
ds
andb
pop
les
jecxz
ret
mov
pusha
call
jecxz
mov
mov
push
mov
fcomps
and
xor
decl
test
clc
dec
sub
cs
or
cwtl
jae
mov
in
sub
pop
mov
or
jb
outsb
pop
mov
mov
push
orl
jae
fld
icebp
test
nop
mov
and
push
clc
push
lods
idivb
sbbl
in
mov
lcall
pop
xlat
or
add
add
ret
or
xchg
aad
aas
lods
dec
sub
movl
and
or
mov
out
ficomps
inc
cmpsb
dec
insb
sub
outsb
leave
mov
sub
push
hlt
adc
out
inc
pop
jg
aad
notb
mov
test
dec
loopne
pop
sti
push
fwait
nop
insb
pinsrw
movsb
imul
dec
mov
jp
mov
mov
lret
xor
mov
mov
repz
loope
push
push
ret
dec
or
pop
push
orb
std
jo
enter
push
xlat
test
subl
pop
dec
out
into
fwait
shll
cwtl
sub
clc
sti
pop
xor
fcomp
dec
in
call
test
stc
and
pop
ds
arpl
cmpsb
add
mov
dec
imul
fcom
dec
push
mov
push
mov
dec
mov
cmp
jo
call
fadds
inc
pop
push
cmp
push
popf
mov
mov
dec
dec
push
sub
pop
dec
scas
push
mov
repnz
push
add
lock
jg
inc
notb
incl
das
pop
jle
andl
xor
int
outsl
inc
push
bound
inc
mov
pop
ss
jecxz
andb
sbb
push
mov
jp
push
shlb
das
lods
jmp
mov
fdivrp
mov
mov
cs
aad
aad
int
mov
and
popa
xor
jge
sub
cltd
pusha
dec
and
mov
test
xor
and
insl
add
sub
enter
outsl
mov
and
sbb
jns
dec
icebp
push
jmp
ficomps
repnz
inc
add
aaa
das
in
out
push
or
push
pop
cmp
outsb
subps
outsb
jns
dec
ljmp
rolb
dec
adc
cmp
mov
push
inc
xchg
movsb
loopne
inc
cli
scas
lea
shrl
rorl
aam
dec
movsb
mov
lods
jp
insl
and
int
fucomp
push
in
sbb
dec
mov
xor
xor
stc
fs
xor
les
pop
int
into
movsl
adc
aaa
push
xlat
xchg
out
jp
jle
push
test
es
test
mov
jnp
cmpb
or
arpl
sbb
adc
jg
pop
rclb
mov
push
sub
iret
fsub
jno
jecxz
adc
mov
add
xchg
mov
jg
add
pop
mov
push
pop
int3
pop
pusha
addr16
imul
rolb
mov
dec
cmp
imul
or
std
out
lret
les
std
inc
fwait
imul
lret
push
ret
or
fsubrl
pop
cmp
mov
in
dec
das
add
std
nop
jecxz
jge
mov
jbe
jne
adc
clc
iret
push
enter
dec
or
addr16
pop
bound
xor
fbstp
outsl
pop
pmulhw
jns
nop
jmp
dec
aaa
subl
pop
inc
mov
cs
jns
push
cmpb
mov
std
and
mov
inc
cli
rorb
lds
mov
inc
fistps
pop
pop
cwtd
pusha
mov
ja
lret
out
lods
imul
adc
inc
out
cmp
mov
out
sub
mov
fstps
mov
push
sub
stos
mov
cmp
pop
jnp
cli
into
sbb
ljmp
and
xrelease
pusha
ffree
dec
mov
jp
add
ljmp
fucom
inc
xchg
push
imul
mov
mov
fs
in
xchg
jp
push
rorl
push
dec
mov
inc
rcrb
adc
mov
imul
movsl
add
jge
add
out
xchg
arpl
and
daa
push
movsb
inc
mov
mov
aad
adc
lcall
lea
pop
imul
inc
xor
sahf
and
nop
out
arpl
fwait
js
ljmp
pop
mov
lret
aad
in
mov
mov
dec
jnp
sbb
push
xchg
inc
sar
dec
loope
scas
pusha
cmc
adc
push
loop
cmp
fadds
pop
push
sbb
push
jecxz
pop
mov
jbe
mov
sub
mov
scas
ss
shlb
hlt
sub
outsl
cmp
add
mov
dec
ror
sbb
enter
scas
movl
jge
enter
sbbl
xchg
sub
and
mov
es
pushf
outsb
stos
and
into
ljmp
or
in
sbb
ds
add
xchg
and
outsl
nop
inc
cltd
add
dec
mov
add
sahf
adc
jle
pop
call
cmovnp
mov
loop
add
lea
inc
fwait
dec
decb
mov
or
ja
and
xor
pop
mov
jno
adc
shll
rcrb
adc
and
stos
clc
into
loopne
xchg
or
mov
lret
xor
lds
mov
adc
mov
lock
jns
xchg
add
sbb
stos
push
insb
or
cli
mov
arpl
mov
push
repnz
mov
jb
and
mov
int3
cmpb
adc
sbbl
lds
shl
mov
add
jno
add
inc
xchg
in
iret
rcr
jg
into
fwait
jmp
jp
xchg
cmp
xor
cmp
jnp
sbb
pop
aaa
sbb
cmp
inc
push
fisttps
mov
sbb
movsl
jne
jl
mov
js
mov
and
jo
jg
negl
adc
lretw
mov
jle
pop
fwait
and
jmp
lods
aad
cltd
lea
nop
inc
idivl
test
enter
push
fwait
pushl
jmp
adc
mov
pop
repnz
pusha
dec
cmp
cltd
sub
jge
ss
jno
xor
jp
lret
insl
outsl
rcrl
add
jb
cld
push
xchg
movsl
les
pop
mov
mov
sub
cli
xchg
jecxz
imul
mov
cld
or
icebp
mov
aaa
and
cmp
or
fwait
jb
cld
jo
dec
or
dec
je
sbb
inc
adc
cmpsl
xor
sub
mov
jmp
int
fsubl
push
adc
jle
jno
outsb
pop
cmp
sbb
fmull
pusha
nop
adc
test
pop
or
movsl
sahf
push
lret
xor
cmp
cltd
js
mov
sarl
add
lret
out
cwtl
in
loopne
push
cmpsl
mov
lret
mov
jecxz
stc
lods
sub
out
addl
xlat
push
push
sarl
es
lods
dec
ror
xchg
dec
mov
lahf
xor
iret
fisubs
orl
push
imul
sbbb
jmp
sub
adc
out
adc
repnz
test
sub
lods
fldl2t
adc
jo
mov
js
cmpsb
movsl
mov
test
add
int3
mov
push
test
cli
pop
xchg
or
lret
mov
sub
not
and
push
loopne
iret
cmp
and
inc
lcall
mov
mov
xchg
pop
push
clc
das
imul
imul
sub
sbb
stc
xchg
arpl
push
sti
lret
arpl
xchg
shlb
sbb
inc
inc
cmp
inc
test
dec
add
or
pop
xor
popa
and
aaa
test
cmp
fsubp
xlat
sbbl
and
ds
push
and
test
shrl
sbb
xor
mov
dec
jnp
mov
add
insb
aas
in
xor
jle
jg
mov
cli
sbb
sbb
jns
out
test
test
add
sti
aad
sbb
dec
sub
imull
cli
aaa
pop
sbb
iret
push
fdivl
insb
sbb
mov
and
js
inc
rcll
and
test
orb
stos
dec
iret
lret
mov
jns
sub
push
or
inc
xor
cmpsb
fidivrl
andl
shll
pop
add
lods
sub
loope
loop
movsl
lds
dec
push
pop
push
bound
push
sbb
sbb
leave
loopne
in
movsl
lds
ret
xchg
je
inc
repnz
std
xor
cwtl
mov
add
jo
xor
push
xchg
cli
test
loop
and
xchg
xchg
xor
push
fs
mov
stos
mov
daa
inc
mov
pop
in
nop
hlt
xor
orb
sbb
mov
mov
cld
in
mov
fsubrl
pop
clc
jg
movsb
out
mov
pop
mov
sub
xor
jnp
jo
dec
roll
sbb
push
dec
in
mov
dec
jo
sub
adc
xor
aaa
push
cmp
jg
notl
jge
sub
dec
ret
cmp
int
loop
lcall
sbb
icebp
rcll
pop
les
xchg
sbb
and
push
movsl
aaa
jp
mov
test
sub
shrl
das
lret
jmp
xchg
mov
pop
lret
sarl
add
mov
daa
insl
xor
pop
movsl
adc
mov
outsl
hlt
or
pop
in
sbb
dec
jb
daa
inc
cmp
out
mov
fs
inc
and
dec
or
test
repnz
pop
cmpsb
std
loop
ror
sub
adc
sbb
dec
add
fstl
dec
lcall
cmpsl
inc
mov
xchg
insl
mov
or
in
shrl
mov
adc
arpl
loope
bound
xorb
or
ret
repz
stos
ficompl
ja
push
les
aaa
out
mov
dec
mov
push
xor
popa
mov
outsl
icebp
mov
aas
pop
xor
cmp
lret
sub
leave
inc
setae
dec
pop
int
ljmp
xchg
fcompl
and
aad
scas
xchg
loopne
jns
aaa
push
xchg
aaa
xchg
inc
iret
inc
movsb
xchg
lcall
mov
fwait
add
lea
loop
icebp
sarb
adc
pop
hlt
aas
gs
inc
or
push
outsl
test
xor
sbb
cmp
xor
or
decb
adc
mov
cmp
mov
sahf
xor
sbb
in
and
cltd
ret
mov
add
push
xchg
mov
mov
jnp
adc
mov
das
js
loope
rol
mov
jp
push
jns
andb
pushf
loopne
mov
test
dec
icebp
pop
xor
pop
mov
scas
outsb
inc
sbb
cwtl
or
paddw
cs
movsl
fstpl
push
mov
in
adc
std
stc
xchg
push
gs
mov
repnz
pop
push
in
or
push
cmp
je
push
adc
fbld
jl
sbb
mov
movsb
leave
test
xchg
pop
scas
sub
rorb
int3
sbb
xor
mov
dec
jmp
and
xor
pusha
cwtl
add
mov
cmp
imul
xchg
ljmp
ss
mov
dec
mov
jmp
cld
lcall
xchg
insb
xor
adcl
mov
mov
imul
xor
scas
pop
rolb
lahf
mov
xchg
mov
mov
sub
mov
shr
mov
shll
fimuls
dec
jnp
adc
add
subb
pop
push
and
sbb
fprem
call
test
jns
sub
adc
and
adc
and
jge
testb
popf
xchg
sti
mov
xor
inc
dec
enter
adc
jmp
icebp
bound
shl
mov
flds
out
stos
dec
gs
push
daa
fstps
xor
imul
mov
push
push
xor
sbb
or
and
test
push
add
adc
lret
jno
add
pop
fwait
cld
lea
daa
mov
int3
inc
push
les
push
leave
jg
xchg
push
inc
cs
add
mov
add
fcoml
rcll
inc
and
flds
shl
push
cltd
push
cmp
out
scas
push
les
insb
sbb
mov
es
je
cmp
or
fdivs
pop
in
es
movsl
cmova
adc
es
xor
gs
dec
adc
mov
cmp
les
mov
or
inc
cwtl
addb
test
cmp
out
pop
sub
pop
icebp
xchg
add
loop
test
fs
nop
aas
cmp
push
insb
enter
insb
in
mov
sbb
sub
in
roll
outsl
xchg
add
ja
bound
sbb
or
adc
sahf
gs
sub
arpl
jge
sbb
mov
scas
cmp
and
std
pop
xchg
adc
loop
push
enter
lcall
mov
test
or
sub
inc
add
icebp
lock
xlat
inc
mov
ds
insb
xchg
ss
mov
dec
mov
and
xor
and
xchg
jno
push
gs
stc
jb
mov
push
lods
lock
aaa
sarb
pusha
scas
push
inc
lret
aaa
pushf
dec
lret
ljmp
cld
lret
inc
inc
xor
mov
mull
fistl
data16
es
mov
mov
loope
int3
adc
je
shl
aaa
cwtl
mov
sahf
mov
sub
data16
jnp
imul
in
call
sbb
mov
jmp
popl
xchg
subl
jle
imul
ja
sbb
in
pop
pop
clc
jb
ficoms
inc
xchg
sbb
jns
add
daa
stc
ja
dec
movsb
xlat
jo
pop
lods
or
jb
xchg
notl
add
insl
pushf
mov
stos
fwait
push
fdivrs
pop
in
mov
add
out
push
clc
int3
jecxz
jns
sbb
inc
orl
arpl
sti
out
mov
xchg
fcomi
nop
push
das
jns
stos
push
sbb
mov
ss
push
push
popa
or
stos
pop
push
shll
lods
jge
mov
les
xor
in
adc
sub
aas
mov
pushf
rclb
repnz
icebp
mov
jge
cwtl
adc
mov
sbb
sbb
and
call
sbb
inc
sbb
mov
mov
mov
fdivp
shll
jle
pop
scas
dec
jae
mov
fdivr
xchg
std
push
adc
cltd
fucomp
imul
adc
or
movl
dec
cmpb
test
fsubs
jnp
dec
add
in
xlat
test
roll
sbb
aad
popa
xor
adc
dec
in
jp
out
stc
aam
inc
and
test
or
cmp
stos
repnz
xor
adc
call
insl
mov
imul
adc
mov
rcrl
dec
adc
xor
mov
or
pop
fstps
ficompl
pop
popa
lret
inc
pop
pop
push
repz
outsb
cmp
xor
mov
out
pop
xchg
and
cltd
addr16
decl
movsl
and
jae
jb
pusha
lods
add
shll
sub
pop
pop
loop
add
fistpl
outsb
xor
sbb
or
fldt
leave
push
inc
pop
xchg
mov
fwait
push
bound
ret
xor
dec
xor
adc
xchg
mov
je
pusha
sub
stos
insb
and
xchg
orb
xchg
out
mov
mov
sub
inc
data16
xor
loope
xchg
mov
mov
dec
push
fwait
gs
push
cmpsb
push
inc
mov
out
fadd
leave
lods
mov
jae
or
data16
pop
mov
sti
in
or
sarb
ja
pop
xor
hlt
jle
aam
jnp
jp
push
pop
nop
inc
fildl
in
in
cmpsb
mov
lds
jae
loop
push
pop
addr16
loopne
test
push
push
cmp
out
mov
outsl
js
pop
push
and
fnsave
jno
js
out
sub
aad
rorb
daa
pop
idivb
addl
xchg
in
mov
adc
pop
sbb
call
jb
fprem
dec
js
pop
or
in
out
xor
setl
pop
sub
decb
xchg
in
mov
leave
arpl
movsb
icebp
xchg
mov
adc
cmpl
xor
add
mov
xchg
mov
fadds
and
mov
in
sub
adc
xchg
adc
pop
scas
sub
fdivr
mov
addr16
mov
adc
int
cmp
pop
mov
mov
fnstsw
shl
outsb
cmpsl
xchg
sti
fsubrl
push
and
push
pop
adc
xor
stc
loope
jmp
cld
jmp
nopl
fucom
or
xchg
gs
and
dec
ret
out
into
push
mov
lcall
fwait
stos
sahf
mov
xor
push
lahf
mov
inc
cwtl
not
enter
inc
aas
out
mov
inc
xchg
push
mov
js
shrb
icebp
lods
scas
dec
xchg
jo
les
aaa
sub
leave
cmp
jns
cmp
push
mov
mov
outsl
std
mov
dec
sbb
shlb
icebp
cli
sbb
pop
outsb
cmp
cmpsl
jmp
inc
sahf
and
mov
push
xchg
xor
adc
and
imull
aam
xlat
jl
pop
loope
fiadds
daa
clc
jns
jge
or
jb
jne
or
in
push
or
iret
pop
inc
scas
jae
lcall
cltd
adc
pop
aaa
das
lds
ret
sub
jnp
adc
int3
pop
sub
push
jl
cmp
mov
mov
test
fcomp
sub
std
pop
add
adc
enter
push
jno
dec
into
mov
push
mov
imul
push
and
cmp
inc
sbb
sbb
fidivs
sub
insl
outsl
shlb
cs
xchg
mov
sbb
sbb
cli
movsl
xor
jle
aaa
out
inc
nop
inc
jmp
mov
sbb
cmp
test
or
or
jmp
pusha
fwait
mov
xchg
shlb
push
and
aad
cld
inc
jns
jne
xchg
jno
sbb
test
scas
jo
rcrb
inc
push
icebp
add
dec
fistl
push
aaa
inc
scas
inc
dec
mov
lahf
fcmovnu
mov
mov
mov
or
sub
cmp
pop
push
jno
jae
ds
add
mov
popf
mov
xlat
in
int3
mov
divb
lock
adc
mov
cltd
xor
imul
cli
mov
inc
add
mov
cltd
outsl
mov
and
mov
sti
stos
jmp
arpl
jmp
test
push
fdivs
cmp
hlt
jle
mov
call
cld
xor
jmp
mov
scas
cs
data16
xchg
les
stos
mov
insl
adc
push
push
stc
sbb
cmp
xchg
pop
and
push
arpl
test
jge
popf
and
daa
dec
mov
testb
enter
mov
sbb
popa
movlps
sub
mov
lods
xor
and
mov
xchg
push
jbe
int
pushf
in
sbb
insb
or
adc
in
clc
test
pushl
add
pop
mov
push
and
idivb
jno
push
lret
inc
les
stc
jmp
hlt
xchg
push
dec
mov
mov
in
repz
rorl
arpl
test
loope
aas
mov
push
daa
jo
push
or
mov
xor
push
adc
loope
lret
mov
or
and
cmp
pop
sbb
aam
push
sbb
lcall
mov
shll
test
jge
xor
fs
mov
jecxz
inc
jp
js
fs
mov
mov
pop
xchg
and
cmp
popa
insl
jae
sbb
mov
mov
addr16
xchg
jle
dec
stos
dec
sbb
push
fs
lods
jmp
xlat
inc
mov
icebp
cmp
jo
and
das
push
add
icebp
out
hlt
icebp
jnp
pop
fsubl
push
add
shlb
pop
lods
mov
cmpsb
dec
mov
pop
clc
cli
in
cmp
aas
ret
jmp
hlt
adc
movsb
or
pop
es
jne
std
dec
push
mov
idiv
rcrl
jge
in
adc
mov
dec
push
xor
pop
aaa
sahf
xchg
pop
and
notb
push
push
and
mov
or
in
pop
sub
jp
cli
jnp
int3
outsl
dec
rorb
inc
out
lcall
insb
leave
push
movsb
ret
mov
xor
test
add
mov
cld
jmp
cltd
mov
scas
or
xchg
stc
mov
mov
push
mov
jp
push
sub
in
popa
stos
lret
pop
adc
sub
mov
jae
gs
sub
mov
int3
or
push
and
jge
dec
stc
jb
inc
xchg
sbb
adc
push
adc
or
int
ret
decb
sarb
pop
cmp
sahf
sub
in
and
das
jb
mov
hlt
adc
push
push
mov
enter
stos
outsb
mov
out
push
fistpl
pop
xchg
into
lds
in
add
xor
mov
cmp
insl
cwtl
dec
roll
or
mov
adc
stc
addr16
inc
enter
fisubrs
loopne
stos
es
push
pop
dec
bound
scas
mov
loop
xor
stos
in
push
sbb
adc
mov
clc
and
xlat
movl
lahf
int
adc
bswap
clc
out
pushf
sbb
xchg
or
inc
mov
xchg
and
cltd
stc
icebp
out
js
cld
push
in
sbb
jb
or
lea
inc
mov
or
fsts
inc
in
adc
xchg
pop
xor
nop
mov
lcall
jbe
xor
xchg
inc
xor
daa
or
mov
leave
cmp
dec
xor
adc
aad
push
add
pop
or
or
pop
mov
roll
adc
movsl
jbe
push
dec
mov
test
push
fcompl
cli
fcmovnb
pop
pop
imul
call
fcmovnb
dec
sub
cmp
push
cmp
cmp
sbb
jmp
pop
sbb
xchg
sub
ds
inc
jl
mov
adc
stc
mov
push
popa
sbb
add
pop
sbb
mov
cmp
bound
js
ret
mov
adc
sbb
int3
xchg
sbb
sbb
or
push
or
jmp
sbb
lods
cmp
test
adc
mov
leave
sarl
add
cwtl
clc
ficomps
dec
and
int3
test
jl
lods
sar
ret
aas
cmp
xor
fwait
xor
mov
sub
stos
sbb
mov
dec
adc
cmp
call
pop
loop
lods
push
inc
inc
rolb
xor
test
jl
mov
mov
out
arpl
jno
ficoml
mov
add
mov
push
dec
out
int3
cwtl
mov
je
jp
fstpl
je
xchg
icebp
jne
fstpt
in
pop
sbb
adc
cwtl
adc
and
loope
ja
adcb
and
jmp
sti
je
inc
mov
loop
mov
xor
inc
jl
or
enter
sub
mov
out
mov
adc
jecxz
dec
imulb
jae
shll
sbb
xor
dec
shrl
outsl
test
mov
cmpsl
xor
hlt
push
ss
cmc
mov
dec
add
int3
addr16
or
ds
or
int
add
repz
pop
jo
popa
jg
push
pop
xor
test
and
popf
push
jge
add
lods
cs
jnp
pop
movsb
cmp
push
ss
imull
or
jb
dec
mov
sub
movsl
and
hlt
mov
popa
test
mov
dec
xor
imul
and
std
js
jns
dec
adc
mov
mov
inc
cwtl
sbb
bound
mov
aad
jmp
mov
xor
jle
inc
and
xor
inc
xchg
xchg
enter
xor
cmpsl
out
add
sub
lea
and
lahf
roll
aaa
and
or
pop
jns
sub
xor
jecxz
cmc
in
mov
in
mov
xchg
outsl
lea
cmp
jmp
pop
push
and
sub
sub
mov
mov
jae
xlat
pop
js
pop
std
push
inc
jl
add
jmp
loopne
mov
push
dec
ljmp
mov
fidivl
cmc
mov
dec
insb
loope
out
adc
sar
push
mov
push
shl
data16
mov
scas
xchg
loopne
pusha
xor
imul
or
jb
fisttpll
mov
out
sbb
mov
int
loopne
add
jo
pop
add
mov
test
dec
repnz
lea
cmc
or
into
xor
scas
sub
inc
add
movl
lcall
repz
mov
fmull
xor
frstor
xchg
in
in
mov
push
inc
xchg
pop
outsl
pusha
sub
scas
int3
pop
inc
in
bound
add
xor
xchg
xchg
mov
or
repnz
int
inc
loopne
cld
add
testb
incl
les
or
or
and
mov
js
das
cmp
xor
hlt
pop
movsb
fwait
adc
pushf
flds
xor
push
js
xor
out
pop
mov
add
mov
shll
lret
ss
xchg
dec
ret
add
daa
sub
cmpsl
and
xchg
and
and
test
sbb
push
cmp
cmpsl
bsr
jo
orl
test
ds
filds
pop
jbe
in
les
stos
mov
jo
iret
sbb
xchg
sub
mov
out
push
lcall
add
inc
leave
das
add
jecxz
xor
xchg
cs
xchg
dec
cwtl
fwait
cli
mov
lds
adc
xchg
inc
addr16
lahf
es
test
xchg
stos
repnz
insb
sbb
sbb
fwait
pusha
pop
movb
and
inc
jmp
push
rol
push
xchg
xor
sub
mov
or
clc
pop
scas
fsubp
inc
sbb
inc
movsl
mov
jae
add
jecxz
fucom
ss
inc
xor
ficoms
pop
sub
das
and
data16
mov
mov
sbb
sbb
hlt
bound
pop
jnp
push
push
fmuls
jb
mov
dec
movsl
out
lds
mov
int3
or
jns
cmpsl
inc
adc
cwtl
mov
js
aaa
jae
stos
xor
mov
cmp
cltd
mov
xchg
dec
shrl
lcall
lea
aaa
jle
sahf
lret
adc
arpl
ljmp
pop
push
inc
and
icebp
and
sub
push
arpl
lret
test
icebp
push
dec
nop
mov
leave
bound
xchg
add
adc
jp
jge
xchg
cltd
jns
xchg
xor
ss
outsb
push
sub
in
out
and
xor
pop
and
lret
lods
adc
std
pop
fmull
sbb
mov
sub
fstps
mov
addr16
faddp
call
ss
popf
jno
xchg
test
bound
fstpl
mov
inc
cltd
push
push
add
test
add
jae
stc
and
fsubrp
cmc
xchg
mov
aaa
ja
gs
fisubl
nop
pop
out
jmp
stos
fisubrl
cltd
xor
mov
pop
push
nop
lock
ficoms
xlat
push
push
or
test
cmc
adc
xchg
sbb
pop
aad
js
xchg
ljmp
gs
mov
push
stos
lret
sahf
stos
xlat
iret
ljmpw
jbe
sbb
in
addr16
cwtl
int
popa
aam
cli
bound
cld
cmp
dec
adc
xchg
and
or
out
adc
adc
scas
pop
sbb
jl
incb
f2xm1
icebp
sti
jns
or
cmp
xchg
xor
stos
or
in
out
or
mov
mov
repz
out
xor
jp
cmp
aas
dec
dec
adc
lea
rorb
inc
mov
dec
xor
leave
in
xor
inc
incl
xor
rorl
outsl
pushf
andl
popa
mov
in
ret
les
int
sub
add
jb
jmp
test
enter
xor
xor
mov
loope
aas
jns
add
test
movsb
cmp
jnp
or
fcmovnu
data16
int3
or
and
and
hlt
pop
adc
sbb
mov
popf
negl
cld
or
or
jge
xchg
cmp
pop
pop
mov
out
jge
mov
ret
ljmp
in
jg
sbb
int3
jnp
paddusw
dec
jno
xlat
sbb
jmp
xor
test
push
push
enter
cmpsb
data16
sahf
aaa
insb
int
inc
and
cmp
lds
ret
push
int
push
rolb
pop
inc
xchg
addr16
push
cld
inc
and
xchg
xchg
xor
xor
cmc
cs
jnp
in
xchg
cmpsl
fildl
push
fldl
cmc
cmp
push
stos
jnp
cmp
fildl
es
out
ds
dec
push
stos
sub
incl
rcrb
sahf
or
addb
mov
rclb
xchg
xchg
pop
cmp
xchg
xor
mov
cmp
sub
jmp
push
mul
dec
push
mov
mov
aam
mov
xor
sub
cmp
push
xor
popa
aaa
cwtl
xchg
mov
cld
and
gs
or
jns
push
jns
cmp
and
lods
dec
sahf
dec
jb
je
sub
jne
nop
loop
mov
pushf
add
gs
pop
mov
imul
aam
loop
ret
das
inc
lds
cltd
lock
ljmp
aaa
sbb
mov
mul
mov
mov
aaa
les
mov
int
outsb
pop
mov
mov
nop
into
addr16
mov
add
sub
mov
daa
push
das
insb
mov
lret
sbb
aaa
xchg
sub
adc
mov
cltd
pop
or
mov
test
mov
xchg
icebp
je
test
mov
inc
mov
push
mov
lret
xchg
stos
scas
iret
mov
push
mov
mov
fs
das
test
or
lods
stos
add
rcrl
cmc
sbb
push
iret
iret
shlb
xchg
push
shrb
pop
cwtl
shll
dec
pop
in
cmp
mov
pushf
sub
aad
ss
pop
push
jle
loop
jle
xchg
jecxz
xchg
shr
push
loopne
into
rcr
in
lret
inc
cltd
mov
movsb
xchg
js
hlt
mov
into
adc
jp
cmp
push
or
mov
enter
mov
test
outsb
add
push
popf
sub
roll
or
mov
pop
loop
loop
int3
lret
movsb
dec
dec
rorb
lea
dec
aas
pop
sub
pop
xchg
jns
sbb
or
or
pop
jl
pop
pop
shrb
or
add
insl
insb
sahf
repz
jbe
push
popa
int3
push
int
sti
data16
or
je
add
sbb
imul
lods
and
loope
icebp
jle
or
xchg
clc
add
loopne
repnz
test
cld
movsb
pop
push
daa
add
pusha
jne
jmp
xchg
fs
in
into
sub
sbb
sarb
dec
rcl
lcall
fsts
jae
lret
stos
mov
out
into
fisttps
xlat
or
loop
jne
enter
aas
cmpsl
pop
mov
pop
dec
cmp
mov
mov
lret
ret
or
cmpsb
ret
add
push
mov
sub
adc
rorb
cmp
pop
jl
adc
push
mov
pusha
cmp
cmpsb
xor
cmp
push
pop
rclb
lds
xchg
push
enter
or
sbb
inc
dec
lcall
sub
cltd
pusha
and
add
push
mov
lea
int3
xor
push
loopne
or
rcr
add
aas
mov
mov
std
and
addl
popa
mov
lock
in
hlt
imul
mov
cli
add
cmovnp
ds
push
dec
test
xchg
addr16
scas
popa
sarb
jbe
mov
and
fwait
jg
jno
inc
test
negl
sbb
popa
sets
lds
inc
gs
pop
inc
stos
sahf
ret
pop
inc
cmp
mov
xchg
push
pop
int
out
mov
sbb
lret
jmp
cmp
mov
pop
je
xorl
xor
ror
dec
fwait
add
lret
dec
jnp
xor
in
jae
test
push
sahf
into
jmp
and
and
xor
sti
rcrl
mov
xchg
jnp
jp
dec
insb
pop
pop
shll
int
lds
in
mov
xchg
and
orl
push
inc
sbb
sbb
out
lret
sahf
mov
in
xor
dec
adc
dec
in
imul
push
int
stc
hlt
pop
add
mov
outsl
cmp
push
push
out
add
and
test
jb
fmul
jns
mov
pop
cltd
fcoms
pop
push
idivb
rorb
mov
mov
stos
jns
aad
jge
dec
sarl
inc
xlat
ljmp
loope
push
lods
sti
jnp
jp
insl
dec
mov
inc
mov
mov
xchg
fistpll
repz
dec
std
jo
popf
mov
lret
sbb
enter
cmp
pop
inc
adc
out
mulb
inc
pop
sbb
jne
jnp
cmpl
lahf
fs
jg
jp
sub
test
or
or
mov
mov
stc
fsub
shlb
push
outsl
lock
xchg
pop
outsb
add
cwtl
mov
add
mov
insl
push
or
cli
push
imul
test
mov
cmpsl
or
sbbl
fidivl
dec
inc
lret
xlat
add
sahf
cvtps2pi
in
mov
add
daa
aam
mov
test
movsb
lock
and
fldenv
sbb
add
pop
rclb
in
and
rcr
cmp
cmp
adcl
sub
sar
lods
pop
in
push
and
mov
cmp
cmp
sub
arpl
dec
das
outsl
movsb
jecxz
push
mov
ret
lahf
or
imul
fdivs
repz
out
inc
notl
mov
insl
jmp
and
push
dec
sub
push
adc
lea
sbb
leave
mov
jecxz
push
imul
aad
enter
ss
or
push
leave
aas
sub
mov
cmp
popf
dec
popa
fcoml
loope
inc
ja
shrl
std
addb
cwtl
aaa
les
jecxz
js
dec
sahf
cs
push
xchg
jg
pop
aad
xchg
sbb
std
lds
jbe
jnp
cld
cmp
pop
js
or
mov
add
and
push
xor
sub
loopne
in
test
icebp
ds
aaa
loopne
ss
mov
fcoms
stc
jp
popf
pop
sbb
je
aas
insb
aaa
lds
push
rorl
or
sbb
pushf
mov
jo
fdivl
leave
jecxz
out
xor
add
dec
in
pop
sbb
dec
adc
pop
pop
scas
out
in
scas
sbb
mov
and
pop
mov
jns
cmpsb
ds
cmp
inc
adc
in
xchg
mov
leave
dec
lock
outsl
cwtl
testb
scas
inc
adc
mov
mov
cmpb
jbe
mov
push
inc
push
and
jns
out
mov
lret
mov
imul
movsb
push
icebp
xor
icebp
xor
out
sti
sub
cltd
pop
jbe
adc
push
lds
enter
rcr
pop
fcomps
lret
xchg
add
inc
xor
xor
lds
sub
inc
orb
add
jp
aas
dec
lret
xchg
jecxz
mov
outsb
popa
popa
push
bound
jl
inc
fwait
or
inc
mov
lea
mov
sub
loope
leave
lods
pop
pop
xor
mov
gs
sub
data16
mov
ljmp
sti
pop
lock
sbbl
inc
cmpl
outsl
ret
aam
mov
and
in
inc
sti
out
mov
mov
mov
es
add
xchg
pop
dec
data16
jl
xor
popf
push
dec
scas
dec
gs
and
mov
mov
in
movsb
sahf
push
xchg
sti
scas
pop
iret
lcall
push
sbb
xor
int
fnstcw
imulb
pop
and
cmp
fistl
sbb
adc
and
jp
add
pop
ret
pushf
outsb
es
outsb
test
dec
dec
sbb
mov
and
sbb
ret
sbbb
pusha
mov
add
add
outsl
popa
pusha
testb
leave
jbe
adc
ds
enter
insb
xchg
leave
xchg
mov
test
in
scas
test
sub
and
neg
jno
mov
and
mov
push
dec
pop
cmp
mov
in
andl
mov
addr16
pop
mov
movsb
outsb
daa
adc
aam
add
clc
add
xchg
lret
or
sub
mov
adc
inc
orl
stos
or
andl
shll
ljmp
in
jae
jnp
loope
and
in
aaa
and
or
jbe
xor
sahf
inc
mov
ficomps
cmp
imul
mov
add
mov
jne
push
pop
das
leave
adc
and
adc
and
fnsave
push
and
or
ret
dec
mov
sub
mov
in
mov
xchg
xchg
sbb
lret
aam
hlt
testl
stc
icebp
insw
or
dec
scas
xor
pop
push
pushf
cmp
out
lahf
cmpsb
xorb
repz
pop
pop
clc
mov
push
mov
push
dec
jae
lcall
in
test
loope
out
xchg
cmp
fnsave
push
out
jl
add
movsl
mov
ds
push
mul
imul
mov
idivb
test
test
ficomps
fnsave
xchg
fistpl
in
jg
inc
aas
aas
shlb
mulb
fidivs
dec
addr16
adc
lea
ret
cltd
add
mov
mov
dec
ret
push
fs
xchg
push
inc
or
es
xchg
pop
into
pop
and
lods
cmp
scas
clc
xlat
adc
in
dec
pop
cmp
mov
and
push
stos
dec
add
mov
xchg
mov
imul
test
push
dec
ret
test
int
sbbl
sbb
jp
mov
mov
loop
call
mov
popa
xor
daa
sbb
clc
addr16
adc
dec
testl
mov
pop
push
fists
xor
adc
test
arpl
add
cmp
shll
mov
call
bound
dec
push
mov
sub
test
icebp
mov
xchg
fistpll
jp
pop
pushf
or
ret
shr
add
xlat
pop
mov
push
cmp
aam
inc
and
dec
aas
in
cmp
test
mov
pop
lea
sub
and
cli
mov
xchg
push
lahf
mov
push
mov
mov
or
mov
lds
out
push
mov
xchg
adc
sbbl
inc
xor
push
fistl
nop
mov
push
adc
cmp
xchg
or
jp
dec
add
cmp
hlt
mov
push
out
cltd
out
sbb
pop
and
js
mov
jmp
mov
mov
fldcw
and
pop
leave
loopne
mov
fisubrs
cli
mov
pop
xor
call
mov
ficompl
xor
cmpsl
inc
ret
ljmp
test
test
sub
dec
loopne
push
leave
jp
pop
or
lahf
and
inc
repnz
pusha
add
lds
lea
pop
cwtl
into
dec
jb
xor
imul
add
cmpsl
vaddpd
push
xchg
xlat
mov
mov
lea
jns
je
arpl
std
push
dec
add
and
cmpl
mov
sahf
push
pushf
jb
mov
jno
add
mov
sbb
sub
mov
inc
inc
mov
leave
addr16
insb
outsb
adc
shr
adc
xchg
add
std
push
push
insl
clc
imul
dec
push
xchg
loop
mov
push
xchg
into
testl
mov
stc
int
xchg
and
lahf
aas
and
cmp
loopne
jb
data16
xor
pop
test
arpl
xchg
ljmp
push
dec
mov
and
cmp
jmp
jle
mov
cmpsb
in
setno
mov
andl
mov
shll
mov
inc
add
jae
push
pop
inc
icebp
xor
dec
xchg
pop
push
jmp
cmp
adc
fwait
adc
xor
fstl
repz
lea
pop
push
les
jne
pusha
movsl
outsb
or
mov
popa
pushf
out
sahf
mov
pop
pop
dec
jmp
push
in
add
cmpsb
mov
sbb
insb
lret
adc
ret
enter
mull
push
test
or
or
movsb
xchg
lods
jbe
cmp
push
xor
mov
push
add
mov
cltd
popf
imul
insl
stc
adc
sti
mov
ljmp
popf
xor
cmp
mov
popa
xchg
mov
hlt
jbe
or
mov
adc
adc
cmp
add
icebp
pop
cld
inc
adc
jp
mov
hlt
sbb
mov
sub
rcpps
int
test
sub
xlat
icebp
addr16
je
pop
lret
test
push
xor
push
xor
pushf
pop
xorl
into
adc
ljmp
repnz
xchg
mov
ds
dec
jecxz
stos
xchg
les
adc
adc
mov
pop
rcrl
out
jmp
scas
pushl
mulb
outsb
pxor
or
or
gs
pop
repz
addb
out
sub
xchg
xor
arpl
ret
fdivrs
mov
mov
adc
call
icebp
mov
mov
imul
out
jo
pusha
aaa
adc
test
mov
inc
xchg
ja
lcall
pop
push
stos
sub
xchg
adc
mov
enter
cmp
push
add
iret
mov
mov
lret
xchg
mov
adc
push
nop
dec
jnp
sbb
int
jle
not
xor
dec
mov
aas
push
cmc
scas
xor
lcall
mov
ja
sub
mov
dec
stc
and
pop
jp
enter
lea
arpl
xor
adc
jmp
sub
mov
fucomp
loope
push
icebp
mov
ss
push
stc
adc
xchg
mov
adc
mov
mov
adc
stos
push
push
cmp
jmp
xchg
mov
pushf
pushf
dec
cld
dec
std
cmpsl
jmp
add
push
cmp
inc
rcll
mov
repnz
es
xchg
jl
cwtl
cwtl
xor
ja
les
into
push
push
mov
fsubrl
mov
xchg
cli
sub
xor
dec
outsb
mov
mov
or
jg
inc
sbb
out
loope
adc
insb
test
dec
jb
push
imul
mov
ss
xlat
dec
in
pop
jo
movsl
add
adcl
cmpsb
jmp
push
xchg
ret
xor
cmp
gs
cmpsl
push
pop
call
inc
cmp
rclb
sub
shrl
xchg
push
mov
test
stos
leave
in
adc
jp
fidivrs
gs
mov
stos
adc
mov
dec
mov
push
mov
xchg
cmc
cmpsb
das
add
xchg
cmp
repz
mov
pop
xchg
nop
sarb
call
in
js
pop
cmpsl
gs
popa
iret
bound
mov
outsb
ljmp
iret
inc
in
mov
mov
les
cli
jmp
sti
ljmp
jae
dec
not
inc
lock
adc
jg
out
xchg
je
jmp
push
idivl
mov
inc
out
and
mov
lcall
fistpl
pushf
movsb
xchg
inc
mov
fnsave
call
jge
xchg
jp
mov
sub
loop
mov
inc
and
insb
dec
push
addr16
addr16
pop
push
data16
icebp
cmp
rorl
fldln2
jne
mov
push
mov
cwtl
xor
pop
in
subb
adc
lret
jo
ljmp
cmp
in
inc
xchg
out
rorb
cmp
lods
adc
out
cltd
clc
or
loop
fwait
push
cmc
pop
add
lea
jmp
fdivs
sbb
stos
mov
gs
mov
pop
and
push
sub
daa
inc
negb
sub
cltd
mov
ja
jp
push
jle
fcomip
scas
mov
arpl
in
inc
int3
dec
xchg
fcmovnbe
shl
leave
lahf
pop
dec
and
push
insl
arpl
and
js
inc
push
and
mov
push
sub
xor
inc
enter
xchg
test
stos
or
je
add
jle
shll
dec
jb
mov
sarb
ja
jne
out
dec
rcll
mov
shlb
mov
fcoml
xchg
mov
into
mov
lds
out
packssdw
cmpsb
mov
dec
xchg
inc
aam
clc
repz
fldl
xor
pusha
xor
insb
inc
inc
ja
xor
dec
loop
in
into
fbld
cwtl
rcll
es
loop
es
push
cmp
push
ficoms
sub
xchg
jge
mov
dec
push
cmc
jno
fisubrs
add
mov
negb
ljmp
out
mov
pusha
ret
xlat
outsb
sbb
or
mov
repz
pop
dec
inc
imul
rclb
cs
mov
scas
inc
sbb
adc
fidivl
lret
loope
test
push
xchg
pusha
inc
jecxz
stc
sar
out
jecxz
imul
movsb
sbb
call
into
into
insl
mov
shl
aam
loope
pop
lock
xchg
fnstenv
lods
sti
mov
fcomps
pop
scas
sar
dec
loope
rcrl
xchg
mov
pop
add
dec
push
jno
cmp
xor
lcall
cmpsl
fcmove
sbb
fildl
sub
xchg
cli
dec
inc
jl
jbe
icebp
es
leave
jbe
lea
mov
adc
popl
inc
gs
xor
filds
dec
jmp
pop
add
mov
into
or
data16
sbb
in
icebp
mov
movb
out
mov
outsl
add
outsb
cmp
mov
movsl
test
shl
push
or
insb
and
or
pop
cli
mov
add
imul
es
clc
data16
xchg
add
std
in
fs
mov
int3
sub
push
jmp
xchg
pusha
fs
xchg
jecxz,pn
sub
idivb
into
ljmp
les
xor
pop
dec
lcall
mov
movsl
in
icebp
push
pop
fisttpl
sub
lea
jno
push
inc
int
inc
jle
repz
lds
mov
mov
clc
mov
add
cli
pop
dec
push
mov
scas
xor
popa
lcall
out
adc
and
inc
movb
or
pop
push
xchg
xlat
jne
testl
flds
and
mov
inc
or
sarb
mov
mov
cld
pusha
and
sbb
sbb
and
adc
int
push
pop
jmp
loopne
cmc
cmp
xchg
mov
pop
jnp
mov
push
and
jb
inc
rcrl
pusha
pop
aad
xor
adcl
icebp
mov
jmp
mov
lahf
aam
cmp
out
imul
jmp
das
popf
cwtl
in
push
test
mov
dec
sbb
xorb
cmp
ljmp
cmp
sar
dec
ret
cs
sahf
adc
xlat
or
inc
fdiv
mov
lea
mov
out
fcoms
inc
test
rcrb
out
test
sti
cwtl
inc
pop
jmp
inc
mov
dec
fbstp
pusha
xchg
jbe,pt
sahf
pop
sahf
push
fcomip
lods
xchg
push
cld
lahf
and
sub
add
enter
insb
and
incb
addl
lret
lds
sarl
xchg
lods
xchg
sub
adc
inc
imul
popf
mov
arpl
daa
ljmp
xchg
xor
sahf
jle
pop
cli
xor
push
nop
sub
add
jg
mov
inc
sub
push
mov
das
inc
int
cmp
xchg
push
cmp
inc
sub
inc
jb
fsubrl
ror
push
jne
mov
dec
xchg
cli
inc
cmp
aam
mov
les
jno
cmp
sub
adc
sub
and
fidivl
subl
in
insl
fidivl
bound
push
js
dec
inc
leave
dec
sti
cmpsl
and
and
dec
mov
out
mov
dec
mov
aaa
gs
inc
mov
enter
cmpsl
or
fs
adc
sbb
push
and
xchg
ja
dec
nop
mov
loop
inc
daa
cmpl
dec
sub
push
mov
lock
js
inc
ljmp
pop
out
mov
arpl
mov
adc
imul
in
pop
sub
mov
mov
sub
jne
sbb
inc
push
xchg
mov
sub
arpl
sub
out
loope
push
ja
mov
mov
xor
pushf
repnz
jae
fstps
mov
sub
push
dec
add
cltd
stc
xchg
inc
int3
jle
je
add
or
mov
mov
test
jnp
xlat
jp
xor
clc
jns
lods
sbb
cmc
imul
adc
pop
enter
imul
mov
cmp
push
in
xlat
out
jb
js
gs
pop
leave
ja
test
ds
mov
jno
popa
push
and
out
test
jl
or
push
mov
sub
fsts
rorl
cld
ljmp
bnd
push
add
movsl
mov
mov
divl
sbb
jge
sbb
loope
jns
pop
fstl
clc
es
add
lods
leave
movsb
into
inc
out
inc
mov
nop
xor
pop
push
imul
scas
ds
pushf
dec
and
movsl
push
rcrb
and
aaa
jg
mov
sub
push
cmp
and
or
imul
fisubs
lea
arpl
sbb
cmc
out
xor
test
xchg
in
les
add
inc
pop
sub
sub
scas
loop
sub
rcr
mov
cld
add
aas
cltd
cld
mov
xlat
pop
push
les
mov
push
pop
orl
nop
xor
mov
int3
jne
pop
xor
out
notl
inc
push
loop
pop
or
fisubl
sbb
nop
ret
xchg
sahf
arpl
or
sarl
pusha
adc
mov
jp
add
push
repz
aas
xchg
pop
mov
ret
sahf
pop
pop
ror
xchg
cmpsl
xor
enter
sti
cmp
pop
mov
iret
mov
add
outsl
addl
shr
jp
pop
xchg
jge
das
mov
mov
sub
pop
dec
push
jb
sub
lock
movsl
add
stos
pop
das
pop
mov
lock
push
es
lret
imul
xor
fcomps
add
sbb
cmpsl
inc
adc
push
mov
pop
mov
sarl
addb
js,pn
shr
movb
repnz
popf
pushf
jns
call
mov
mov
mov
push
add
lret
mov
add
dec
push
sub
jle
dec
fwait
popa
fnstcw
push
fcmovb
add
xor
mov
int
into
inc
xchg
addr16
xlat
sub
popf
int
add
enter
imul
test
out
xor
sti
jb
and
jne
imul
mov
xchg
aaa
cs
lds
cmp
movsb
jecxz
add
mov
pop
adc
aam
xor
mov
popa
mov
out
cwtl
xor
pop
adc
sbb
int3
movsl
cmp
into
mov
movsb
imulb
loope
xlat
and
pop
xchg
pop
xlat
int
jp
rcrl
movsb
cmp
push
mov
sbb
xchg
and
and
cmp
mov
stc
orl
pusha
mov
push
ret
xor
leave
mov
jo
mov
mov
adc
pop
xor
mov
jl
rcll
popa
fcom
xlat
out
cltd
dec
sarl
les
cs
or
pop
cs
bound
icebp
mov
push
fwait
cli
arpl
xchg
out
xchg
in
daa
out
popa
jae
loop
roll
jnp
adc
push
adc
add
sub
jg
dec
insb
add
popf
xor
scas
dec
jmp
dec
pop
dec
adcb
hlt
cmp
je
mov
sub
cmp
fwait
clc
in
pop
dec
negb
adc
jbe
stc
jne
lods
cld
xchg
jnp
inc
push
test
mov
ds
outsl
xor
sbb
fdivrl
add
cmc
adc
stos
out
inc
mov
adc
cmovae
stos
xchg
lods
dec
pop
sub
pop
loopne
mov
jg
icebp
pop
mov
js
fneni(8087
cli
sbbb
loope
outsl
mov
mov
imul
push
xor
xchg
dec
and
insl
pop
dec
dec
ficompl
repz
lods
pop
push
lods
aas
mov
lods
ss
or
insb
xor
add
sub
daa
std
push
outsb
rclb
pop
sub
xor
notl
rcll
pop
out
xchg
xor
jns
pusha
dec
cwtl
fcoml
cmc
jmp
sub
stos
mov
mov
cmp
pop
xor
or
lea
inc
dec
jl
mov
sub
cmp
fidivs
lods
adc
push
and
inc
lret
jecxz
js
ds
pop
fidivs
jno
mov
adcb
jp
cmp
mov
cmp
inc
cmp
mov
fcoms
addr16
inc
adc
decb
adc
arpl
push
and
sbb
mov
push
cld
lret
inc
dec
cmpsb
jecxz
popf
sub
mov
enter
scas
icebp
into
fidivs
pushf
mov
cmp
nop
in
jns
pop
fidivl
or
cli
add
hlt
fildll
fbstp
into
mov
inc
cld
fistl
add
push
adc
dec
mov
std
jle
and
enter
inc
mov
mov
add
or
inc
pusha
or
sar
test
cs
stos
shrb
sub
div
sahf
scas
fistps
mov
xchg
adc
sahf
inc
mov
cmp
xchg
sub
xor
js
jecxz
add
scas
xchg
lock
pop
mov
jae
push
int
fsin
add
xor
fdivrs
pop
sbb
and
cmp
into
lret
sahf
add
push
cmp
xchg
pop
xor
sbb
and
jnp
sbb
xor
fdivrs
dec
fadds
inc
mov
push
cs
and
loope
pop
cmc
xchg
xor
mov
lock
inc
sub
cmp
sub
or
dec
test
popa
or
and
hlt
sub
arpl
xchg
and
xchg
mov
pop
jmp
ret
sbb
mov
xor
xchg
pop
pop
fldl2t
and
mov
sbb
pushf
push
cmp
lock
sbb
dec
add
jb
dec
js
iret
jl
inc
hlt
adc
test
dec
lret
repz
jo
aas
out
add
popl
or
pop
bound
cld
in
stos
cwtl
or
dec
mov
pop
xor
pop
push
int
lods
and
std
push
and
cmpsb
inc
lret
mov
out
xor
pushf
mov
xchg
stc
mov
pop
cld
adc
aaa
dec
mov
test
stc
repnz
fistpl
test
imul
mov
pop
rorl
dec
dec
push
cmc
push
mov
ret
adc
xor
in
cmp
sbb
lret
filds
ficoml
and
lds
inc
das
pop
push
push
mov
setge
icebp
dec
mov
push
punpckhwd
dec
xor
jle
fsubl
sarb
cmpsl
pop
lahf
xchg
hlt
sbb
stos
fcoml
add
fbld
xchg
mov
or
stos
nop
ja
xor
pop
mov
sub
divb
sub
repnz
add
dec
mov
movsb
mov
es
xor
scas
sub
mov
cld
xchg
xor
push
imul
clc
dec
add
mov
ret
xor
daa
lods
imul
shlb
lret
inc
push
xor
sub
dec
loope
movd
aam
sbb
xchg
aad
inc
hlt
pop
adc
lods
call
arpl
xchg
and
loop
xor
mov
loop
lds
dec
jecxz
sub
enter
mov
in
mov
mov
dec
pop
inc
dec
shll
adc
repz
call
inc
add
mov
hlt
pop
stos
cli
lods
arpl
shrd
pop
sti
addr16
inc
xorl
mov
out
xor
gs
push
pop
ss
les
jb
icebp
sub
fisttpll
roll
aaa
push
pop
pop
fprem
mov
push
addb
push
push
addl
int3
mov
pop
dec
adc
call
outsl
int3
cmp
mov
cmc
add
mov
repz
notl
xchg
pop
aam
and
pusha
adc
dec
insl
scas
hlt
cmp
ret
inc
and
in
lret
add
dec
inc
jmp
lock
movsl
out
inc
pop
inc
fisttpl
lret
ret
adc
jne
js
sub
push
lock
out
xchg
push
jmp
add
sbb
or
xor
sub
in
ret
add
push
xchg
push
lods
add
mov
xchg
ret
lcall
sbb
test
push
push
and
xor
push
call
lock
sub
mov
mov
mov
dec
add
rcll
mov
jnp
dec
fwait
pop
sub
push
adc
repnz
lcall
add
lahf
inc
call
push
or
fs
inc
add
mov
push
push
or
fstp
xchg
jecxz
lahf
es
repz
int3
mov
in
hlt
int3
mov
das
aam
loop
adc
pop
movsl
push
push
imul
ljmp
pop
and
insb
mov
int
mov
shll
das
std
sub
mov
xor
push
popf
pop
dec
insl
std
in
dec
add
xor
push
mov
xor
sbb
pop
pop
mov
fs
testb
inc
cmp
lods
daa
ds
jne
rorl
fldenv
dec
or
and
nop
arpl
lret
hlt
lcall
frstor
ja
dec
shr
xlat
sbb
ds
stc
jg
fcmovnb
imul
jae
push
xchg
cmp
mov
movsb
jae
cmp
pop
xor
jmp
mov
push
jle
sbb
sub
aaa
cli
mov
jmp
push
shl
cmpsb
jns
test
pop
pop
rorl
scas
pusha
jp
insl
or
pop
out
cmpb
fisttpl
add
and
mov
repnz
rcll
xor
fcmovne
mov
arpl
cmp
ds
dec
movsl
icebp
xchg
jno
test
int
sar
test
adc
lods
cwtl
xlat
pop
pusha
inc
das
push
hlt
jle
mulb
hlt
and
out
fildl
xor
dec
mov
jp
test
in
out
adc
jns
adc
cmp
push
mov
js
mov
or
clc
xchg
popf
loop
push
popa
sti
lods
aam
sub
jo
sub
pusha
inc
mov
mov
imul
sub
jmp
shlb
shl
ja
aam
fistps
add
sub
movsb
lods
test
push
mov
ret
cli
out
in
xchg
movlps
sub
sar
inc
jns
popa
lds
in
stos
stc
int3
sbb
and
mov
in
xchg
jl
lods
add
xchg
popa
daa
dec
out
sbb
inc
negb
pop
mov
div
jnp
pop
popf
add
sarb
inc
lret
xchg
xchg
mov
fsubrs
sub
clc
xor
cwtl
mov
mov
jmp
lret
mov
sub
lods
mov
or
push
das
hlt
jge
xchg
dec
outsb
inc
clc
xchg
add
dec
cmp
jns
cld
jle
mov
push
xchg
xor
xlat
lds
dec
dec
lods
sarl
inc
notl
repz
stos
inc
mov
or
fdivrl
imul
add
testl
jl
icebp
shll
icebp
jmp
enter
daa
adc
adc
in
sub
or
push
call
xor
fbstp
gs
aam
xchg
push
pop
inc
and
sbb
push
jle
outsb
mov
xchg
sbb
adc
pop
inc
ja
mov
xor
out
fwait
inc
popf
cmp
pop
ret
jnp
addl
add
fcomi
mov
outsl
cmp
loope
jecxz
aam
add
adc
outsl
jb
lods
mov
lea
sbb
int3
xchg
mov
lds
jmp
sbb
mov
sti
shlb
mov
xor
jnp
into
inc
sub
jle
and
test
push
sub
fwait
jne
mov
repnz
fistpl
and
add
roll
adc
push
jp
js
mov
mov
into
flds
pushf
test
arpl
int
cmpsb
mov
push
sti
sub
xorl
pop
out
adc
cltd
in
sub
movsb
pop
xchg
lahf
gs
imul
pop
xor
pop
sub
jne
ret
adc
dec
gs
fsubr
ret
or
fdivrs
pop
mov
adc
jnp
push
shll
insb
jge
xlat
mov
movsb
mov
adc
divl
inc
pop
mov
add
mov
es
jb
lcall
aaa
aaa
movhps
mov
cmpb
lea
sarb
sbb
jno
or
add
sub
lods
lods
movsl
jecxz
fwait
sub
mul
es
sub
rcrl
jns
push
push
mov
leave
xor
pusha
jp
adc
stos
sub
je
xor
push
add
mov
mov
sarb
out
xchg
or
or
add
lahf
or
mov
addl
aad
fdivl
fmull
outsl
fldl
adc
hlt
mov
xchg
in
lds
mov
rcrb
jmp
movsb
lcall
sbb
pop
xor
outsb
cmp
xlat
iret
cld
stos
pop
pop
addr16
cmp
in
dec
in
out
mov
ret
mov
test
push
enter
mov
push
imul
sub
lret
pop
pop
dec
mov
ror
mov
pusha
aad
aam
add
rcr
int3
imull
sub
inc
lret
mov
lret
iret
dec
jo
fimuls
or
xchg
in
dec
or
jmp
mov
sub
pop
jmp
jne
sbb
sub
pop
push
jae
cmpsl
mov
test
fildl
mov
test
cmp
mov
jmp
stc
sbb
sbb
mov
outsb
adc
cmp
shll
out
mov
jp
push
cmpsl
dec
sub
dec
rclb
mov
pop
pop
and
inc
dec
nop
jp
repnz
in
jle
lret
sub
push
cli
add
popa
jno
pop
jecxz
test
out
xchg
lock
jns
and
out
mov
pop
das
adcb
xor
adc
imul
jns
lds
fcom
or
sbb
fists
iret
outsb
xchg
sub
fnstenv
add
aas
sub
out
dec
xor
fnstsw
adc
std
nop
out
lret
ret
test
mov
mov
hlt
add
jns
mov
and
insl
jg
mov
mov
cmp
hlt
push
add
mov
jns
ljmp
cmpsb
jge
cmp
ds
lds
test
fdiv
jmp
outsb
ds
mov
add
mov
adc
add
xchg
imul
jns
push
xor
cmpsl
clc
icebp
and
jge
rcrb
jp
and
scas
inc
jbe
push
fadd
and
sbb
pop
jecxz
pop
lock
and
hlt
stc
pop
ret
mov
in
mov
pusha
pusha
dec
outsb
call
mov
lret
add
sahf
add
add
into
dec
mov
jns
in
push
jmp
ds
pop
xchg
addr16
sarl
repz
mov
mov
jle
jecxz
jne
or
call
repnz
or
mov
imul
cmc
lcall
out
add
sahf
pushl
ss
lods
adc
clc
cmp
stc
nop
mov
inc
mov
fsubl
mov
cmp
pop
pop
mov
test
cmova
lahf
sbb
or
add
mov
iret
mov
repz
fs
imul
fldcw
lret
adc
and
imul
push
push
xchg
shll
rcr
out
int
cmpsb
jb
and
jp
mov
in
mov
pop
into
pop
xor
nop
jl
pop
mov
mov
in
push
in
fbstp
incl
push
popf
fistpll
lret
in
mov
repz
insl
xchg
and
int3
mov
and
sub
arpl
mov
add
pusha
cmpsl
lret
adcb
and
cmp
ljmp
outsl
add
sub
sbbl
cmp
mov
sub
test
mov
pop
jle
notb
bound
addr16
cmpsb
dec
int
mov
push
xchg
mov
sahf
std
jno
fldt
les
fstps
lahf
lret
inc
jns
sub
cmc
push
ret
pop
ret
daa
add
cld
adc
jmp
xchg
mov
push
jno
roll
stc
sub
lret
dec
das
in
cmp
cmp
pusha
jp
pop
mov
and
xor
fidivs
cmp
mov
add
jo
xor
fsubrs
lret
movsb
cwtl
add
ss
outsb
pop
dec
fwait
sbbl
int
popa
sahf
hlt
ja
lret
lret
xchg
xchg
mov
in
and
into
push
xor
sahf
cmc
sti
xchg
or
xlat
test
mov
out
ja
xchg
sbb
cltd
adc
dec
mull
mov
xchg
jns
lock
lock
loopne
fdivp
test
aad
xchg
mov
add
outsb
iret
xlat
fwait
movsl
leave
adc
jbe
xchg
dec
mov
xchg
add
das
xlat
cmp
sbb
cwtl
pop
adc
jae
aam
pushf
cmp
ljmp
leave
movsl
adc
out
push
mov
aaa
sbb
xor
test
test
test
pop
cwtl
dec
in
out
ffreep
dec
aas
aaa
xchg
mov
add
das
pop
push
push
cwtl
sub
pop
sti
popa
push
dec
ja
push
fstps
jo
push
cmp
jl
std
xor
cltd
sbb
lea
aad
test
and
mov
pop
std
lea
hlt
mov
imul
repz
push
dec
mov
and
dec
cmp
sub
pop
fucom
aam
into
dec
and
cmc
add
das
lret
jns
aam
sub
stos
cmp
inc
dec
in
ja
pop
cmp
ret
xor
pop
cs
mov
push
mov
cmpsb
stos
ja
xor
and
inc
push
xor
mov
pop
mov
cltd
sub
iret
mov
cltd
ja
mov
jmp
lods
and
cmpsl
ret
dec
xor
mul
pop
mov
push
mulb
imul
mov
in
cmp
lcall
popf
in
mov
fsub
push
fmull
jmp
inc
dec
out
dec
cwtl
sub
lods
mov
fdivrs
cmp
cmp
push
outsb
pop
test
int
add
outsl
aad
iret
lret
jno
add
inc
aaa
mov
in
mov
inc
dec
and
mov
pop
pusha
fcmove
outsb
fcomps
push
stos
and
pop
jns
push
adc
xor
imul
pusha
ror
jns
fidivrs
dec
mov
mov
add
inc
jae
test
pop
sub
lret
test
int3
push
in
pop
push
xchg
icebp
sbb
les
pop
fdivrl
mov
and
imul
mov
add
lret
add
mov
push
lods
cmp
fucom
movsb
inc
mov
in
adc
cmp
cwtl
pop
sbb
incl
or
icebp
push
imul
mov
sahf
cmpsl
dec
ret
sbb
add
mov
insl
fists
mov
xor
sub
inc
jle
hlt
les
sbb
cmpsb
call
xor
sbb
mov
outsb
out
leave
leave
das
sbb
sub
fildl
lret
xor
f2xm1
int
ret
add
jo
adc
add
sbb
lods
mov
jp
pop
hlt
ret
lcall
fisubrs
in
pop
mov
pop
xorl
lds
lods
xor
aam
aad
add
mov
ficomps
xor
out
xchg
mov
mov
popa
add
jg
inc
adc
shl
jnp
sub
lods
xchg
push
xchg
aaa
jb
lcall
stos
repnz
test
sub
sub
les
jbe
es
pusha
pop
or
fdivl
divb
sub
dec
fcmovnb
push
cmpsb
jb
aas
lock
movsb
mov
pop
xchg
cmc
sbb
scas
xchg
movsb
cmp
aaa
push
and
or
xchg
push
cmp
lods
pop
bound
rol
sub
xchg
or
aas
adc
xchg
dec
mov
pop
test
outsb
and
cmp
arpl
sub
imul
scas
mov
gs
stc
fsts
loope
dec
in
jl
xchg
daa
xchg
lcall
jns
pop
xchg
xor
dec
daa
fldlg2
push
cld
jo
push
cmp
pop
pop
ret
inc
or
sbb
sub
sub
in
dec
jnp
inc
lock
lea
repnz
dec
adc
cmp
mov
stos
push
dec
outsb
jge
rcrl
out
pop
xchg
or
xor
pop
pop
mov
push
push
cli
cs
and
jp
dec
rclb
pop
shl
pop
and
leave
imul
aad
and
clc
clc
add
scas
pop
dec
sub
cmp
lods
mov
repnz
or
idivl
push
xchg
daa
xchg
push
dec
addb
int
inc
xor
das
jmp
pop
addr16
aam
sub
jmp
repz
pop
sbb
dec
mov
mov
and
cld
push
jp
sub
mov
jbe
pop
outsb
out
mov
cmp
push
outsb
fildll
cltd
orb
mov
dec
mov
insb
arpl
roll
push
sub
outsl
jmp
cmpsl
xor
testl
scas
sbb
enter
jecxz
into
xchg
mov
adc
cmp
dec
test
pushf
jae
adc
sub
jbe
push
or
push
pop
subb
stos
or
jnp
mov
pop
push
lods
pop
je
mov
bound
dec
xor
xor
icebp
sub
mov
jno
out
pop
and
nop
jmp
scas
dec
out
out
dec
int
cltd
loopne
in
mov
xchg
add
sbb
mov
fists
cmpsb
mov
sbb
sti
mov
add
rorl
sbb
sbb
rorl
cli
mov
out
dec
jmp
out
and
daa
and
mov
pop
xor
out
popf
push
dec
in
lds
sub
mov
mov
cwtl
cmc
pop
mov
in
sbb
mull
cwtl
add
xor
or
push
sub
test
inc
and
pop
pop
dec
and
jg
adc
xor
clc
jnp
mov
movsb
push
dec
jmp
jo
pop
insl
push
cs
and
dec
lahf
sbb
ja
mov
insb
adc
jo
adc
mov
xchg
mov
stos
jmp
into
sub
out
dec
adc
rcll
push
cli
hlt
cmp
les
mov
cli
or
ljmp
mov
fs
jne
or
jo
cmp
mov
shrl
test
loopne
in
push
add
adc
jle
add
cmp
ret
aas
mov
fcmovnbe
or
sarb
das
xchg
loope
cmpsl
cwtl
mov
loop
mov
mov
cmc
sub
roll
ljmp
dec
outsl
ja
lahf
xor
xchg
or
ljmp
mov
hlt
jg
popa
movsb
push
add
mov
es
cmp
sub
les
leave
mov
fcoms
push
and
add
adc
sbb
mov
jb
addr16
sbb
dec
push
stos
icebp
xchg
int3
inc
xlat
mov
pop
ud1
shlb
nop
cmp
jmp
jno
and
in
mov
fcomps
and
add
mov
adcl
sahf
in
mov
lds
or
jmp
xor
sub
xchg
cmc
xor
dec
lea
push
int
loope
shlb
out
out
cmp
cmp
inc
aam
add
outsl
add
stc
xlat
pop
aam
cmp
sub
jmp
cmc
dec
mov
and
imul
das
pop
sarl
test
push
adc
xchg
sbb
out
int
inc
mov
inc
cmp
sub
sahf
mov
xchg
les
out
stc
fldcw
mov
push
sub
xchg
pop
xor
mov
inc
test
xor
push
rol
ret
xlat
sbb
mov
sub
movsb
rdtsc
jmp
outsb
xor
pop
push
pop
pop
sbb
jge
outsl
filds
je
imul
dec
jmp
outsb
enter
stos
rcrl
inc
push
lret
daa
mov
xchg
lahf
cli
mov
sbb
rcll
sub
jg
xchg
addr16
xchg
aas
mov
jbe
and
jno
iret
je
lods
pushf
or
mov
sbb
push
xor
jnp
dec
xchg
loopne
xor
inc
repz
push
pop
enter
dec
hlt
add
outsl
xchg
loop
call
popf
or
in
jnp
mov
ljmp
sahf
mov
mov
mov
stos
or
jae
push
ja
xchg
sbb
inc
dec
movsl
nop
sbb
dec
jp
pop
and
or
lea
mov
loop
jecxz
dec
clc
push
adc
add
sub
lahf
push
xchg
gs
mov
mov
push
and
ds
or
inc
sbb
adc
dec
fisttpl
mov
notb
and
adc
les
push
or
stos
xchg
cmp
sahf
sbb
push
mov
bound
in
dec
movsb
inc
cmp
sub
inc
sub
push
and
cwtl
cmp
pop
es
movsb
test
negb
mov
lret
in
dec
xchg
cmpsl
roll
insb
pop
ja
jbe
push
sub
or
lds
mov
dec
gs
push
cmp
inc
xchg
add
iret
cmc
rclb
pop
inc
ret
xor
or
cmp
or
xor
add
push
into
cmp
pop
or
xrelease
sti
repnz
sub
addr16
ljmp
inc
test
cmp
fcmovu
scas
pushf
loop
mov
jmp
andb
int
in
add
mov
bound
aam
push
mov
aaa
adc
dec
das
insb
fmull
fbld
imul
ljmp
es
mov
jb
pop
pop
cmp
fidivrl
inc
xor
pop
inc
fisttps
imul
dec
loop
sub
repz
or
mov
inc
mov
dec
icebp
cmp
shlb
jns
pop
and
lock
inc
dec
outsb
scas
adc
push
inc
addr16
mov
or
dec
shlb
mov
xor
or
fisttpll
cs
scas
mov
sbb
mov
lods
into
xchg
dec
cmp
in
add
sbb
inc
addr16
push
push
and
cs
adc
xor
test
int3
loopne
cmpl
mov
or
xchg
mov
pusha
rcll
movl
add
inc
scas
ljmp
sbb
test
jp
mov
arpl
leave
ret
ds
inc
roll
mov
pop
subb
pop
aaa
cmp
sarl
shrb
xchg
mov
cmp
mov
dec
fwait
insb
pusha
lock
pop
fdivl
ds
daa
les
inc
fldenv
xchg
cmpsl
inc
pushf
sti
aas
pop
enter
shll
dec
test
mov
or
mov
jmp
pop
ljmp
out
fisttps
mov
cmp
jmp
mov
int
cmp
dec
addr16
push
cmp
and
pop
sub
jns
insb
fisttpl
adc
push
inc
in
mov
pop
in
pop
and
sbb
sbb
jnp
jno
in
pop
cmpsl
mov
out
mov
ffreep
xchg
xchg
xchg
push
or
fbstp
aas
xchg
popf
cltd
sub
mov
int
fidivrl
or
js
or
shrb
xor
mov
aad
fistpll
jne
mov
ja
jp
mov
inc
jg
or
fwait
mov
dec
out
test
orb
scas
in
incl
or
negl
loopne
mov
lret
lods
cmp
cmp
pop
sub
mov
cld
addb
movsb
cld
pop
jmp
popf
xchg
divb
mov
fldcw
add
insl
andb
or
mov
inc
mov
xor
sarb
call
jnp
int
fidivrs
pop
mov
cli
testb
push
pop
push
cli
test
lcall
cli
cmp
fcoml
inc
adc
hlt
pop
lcall
push
lea
push
and
pop
cmc
add
sahf
or
pushf
in
test
push
out
inc
mov
xor
shlb
imul
inc
push
imul
cmpb
aaa
and
lods
mov
pop
jl
cmp
or
ljmp
imul
outsl
xchg
xchg
mov
xchg
xchg
and
repnz
push
ss
dec
call
cmp
sbb
pop
sahf
sbb
dec
add
lods
mov
mov
out
mov
mov
pop
push
push
push
pusha
mov
push
pusha
rorb
les
inc
xor
mov
imul
add
dec
sbb
hlt
inc
fstl
jno
jne
imul
rcrb
xchg
push
xchg
cmpsl
sbb
pusha
sub
inc
adc
clc
add
xchg
movsb
ror
aaa
cmp
or
out
test
outsl
es
inc
lea
aad
scas
push
bound
popf
outsb
call
js
pop
xchg
mov
fsubrp
lods
xor
lods
pop
inc
adc
seta
inc
pop
repz
loope
mov
xor
jg
fsubr
arpl
push
jnp
dec
mov
hlt
jle
leave
cmpsb
and
cmpsl
fidivl
cltd
inc
and
sbb
imul
scas
and
mov
xlat
insb
je
pop
push
out
adc
in
pop
mov
icebp
cmp
mov
push
push
les
fbld
sarl
pop
test
jp
outsl
popf
hlt
test
push
push
js
into
mov
mov
pop
fdivl
jmp
fildll
bound
xor
inc
cmpb
pop
jecxz
jmp
push
push
jp
sbb
insl
fsubp
xchg
je
jo
les
and
cmpsb
out
dec
jle
add
push
dec
push
cmp
out
or
or
movq
sub
imul
push
pop
inc
jl
negb
outsl
imul
cmp
outsb
push
aas
add
push
idivl
lock
sbb
lcall
pop
mov
sbb
cmp
lret
js
int3
push
mov
sbb
enter
std
inc
in
ror
xchg
in
mov
push
int3
orb
rcrb
cli
inc
shrl
aaa
inc
inc
sub
lea
mov
and
sbb
mov
fnstenv
mov
push
outsb
lods
lock
insl
pop
pop
inc
add
das
push
lds
iret
and
push
sub
pop
cli
cmpsb
adc
sar
dec
shlb
push
xchg
iret
sub
movsb
xlat
incl
fstl
sbb
mov
clc
imul
addl
jl
mov
inc
into
push
or
pop
pop
je
pop
pop
shlb
into
pop
repz
jno
or
les
adc
mov
es
push
std
popf
push
fcoml
sub
in
lret
sub
add
xchg
ret
jmp
daa
cwtl
sub
scas
mov
hlt
insb
rcl
ret
mov
inc
cmp
adc
xchg
scas
loopne
jle
add
xchg
mov
popf
mov
fbstp
test
enter
push
mov
mov
into
rorl
fcmovnb
fs
sti
sub
mov
dec
inc
sti
in
or
data16
cmpsl
jg
or
aad
jecxz
push
mov
pop
push
fcoms
jge
push
mov
daa
stc
std
test
cmp
mov
movsb
push
add
js
pop
mov
fnstsw
scas
mov
ret
jmp
ja
loope
cmpsb
movl
cld
hlt
or
stos
dec
lods
sub
aas
push
pop
jp
dec
and
or
outsl
jecxz
adc
in
fdiv
push
add
dec
xor
out
data16
fwait
and
lcallw
inc
adc
pop
je
inc
out
sbb
popf
out
mov
sarb
loop
dec
notl
dec
outsl
jne
lds
or
lahf
movsb
mov
inc
mov
xchg
push
insb
test
mov
adc
pop
mov
adc
add
xor
enter
test
lods
cmp
cmc
mov
jl
movsb
mov
xor
cmc
leave
inc
ja
movsl
fnstcw
push
test
dec
in
es
fidivrs
repnz
xchg
in
ja
lret
cmp
dec
dec
add
cmp
scas
loop
filds
aas
inc
lahf
or
dec
jecxz
inc
cmp
scas
int3
push
sahf
sarl
and
stc
jbe
pop
loopne
notl
fwait
shll
pop
cli
ja
in
lock
dec
lea
mov
push
adc
outsb
xlat
xor
test
adc
sbb
fnstsw
cmp
test
mov
mov
xchg
add
or
out
push
add
out
lods
scas
xchg
loope
cmp
mov
mov
pop
add
enter
inc
and
fcmovu
mov
jp
push
notb
cli
stos
cmp
sub
mov
mov
aaa
adc
push
adc
sub
bound
imul
cli
pop
subl
pop
sbb
lea
cwtl
mov
data16
into
adc
jb
in
pop
jmp
add
mov
int
mov
mov
les
pop
insb
ficoms
in
lret
mov
sahf
add
ror
xor
inc
mov
cmp
mov
xchg
nop
cmp
cld
sbb
sub
test
add
or
pop
jno
mov
sti
out
xchg
xchg
sub
sti
movsb
sbb
or
out
cmc
stos
dec
das
imul
je
dec
pop
cmc
gs
mov
das
xchg
pop
push
sub
test
loope
mov
cmpsl
jp
loopne
dec
sbb
jmp
pop
lahf
mov
inc
js
cmpb
pop
jge
cmc
add
jle
popa
leave
loop
dec
arpl
ss
xchg
cmp
sub
ret
push
pop
dec
mov
sarb
lds
jns
push
outsl
inc
pop
popf
sbb
sub
push
pop
pop
pop
aam
pop
mov
xchg
scas
imul
aas
std
adc
or
cmp
dec
daa
pushl
fldenv
fcomp
inc
sub
cs
xor
in
fiadds
ret
fyl2x
dec
sahf
xchg
adc
sbb
stos
jmp
std
or
sbb
push
outsl
std
out
pop
icebp
test
insb
cmp
shlb
iret
cmp
out
pop
mov
movsl
test
ljmp
mov
out
sbb
add
movsl
xchg
inc
sahf
lock
aam
ljmp
push
dec
pushf
rolb
push
ret
imul
fbstp
sbb
insb
sbbb
ret
xchg
loop
push
lods
sti
stos
sub
cltd
sbbb
inc
pop
cltd
jg
push
aaa
js
fcmovb
fwait
inc
data16
inc
stc
inc
movsb
dec
pop
and
pop
out
dec
roll
xor
xchg
shld
push
mov
stos
adc
jp
incl
outsb
jp
repz
lcall
pop
sub
arpl
cmp
mov
ss
out
aam
sbb
into
xor
push
sbb
adc
mov
sahf
out
negl
sbb
movb
arpl
dec
imul
adc
ljmp
daa
or
dec
fbstp
dec
outsl
jno
jbe
and
out
dec
add
lock
pop
push
inc
jns
sub
inc
fldcw
sbb
adc
popf
xchg
jae
mov
out
push
mov
mov
and
push
cmp
cmp
in
mov
outsl
movsb
loopne
xor
adc
cmp
lea
fcoml
push
popa
ss
pop
xor
lods
lret
cli
push
cld
xor
sbb
or
arpl
fisttpll
and
fstpt
fidivrl
inc
cmc
add
mov
sbb
jbe
andb
push
idivl
ljmp
add
imul
push
mov
dec
test
jl
mov
jge
shlb
and
out
int
std
int3
stc
xchg
push
fs
in
sti
sbb
push
out
push
sti
mov
call
addr16
out
sahf
and
add
xor
pop
add
inc
ret
mov
pop
bnd
loopne
adc
mov
data16
push
jge
dec
fwait
stc
lcall
rcl
jnp
mov
or
xchg
cs
in
cmp
sbb
jmp
addb
xlat
lcall
pop
dec
add
clc
pop
in
xor
js
mov
xchg
xor
lret
call
out
sbb
fists
out
cmp
or
shl
aam
mov
test
add
loopne
imul
arpl
cld
fcoml
xchg
add
mov
lahf
in
lods
xor
insb
fwait
mov
mov
in
out
jge
inc
mov
mov
out
or
push
sbb
sub
clc
xor
inc
divb
sub
xor
pop
and
ljmp
inc
lock
iret
das
xlat
je
test
les
lds
cli
aam
inc
dec
sub
push
inc
adc
lock
xchg
orl
mov
enter
roll
subb
test
jo
jg
popf
xchg
cmc
movsl
mov
inc
sbb
mov
les
jns
dec
adc
aaa
xor
mov
out
cmc
movsl
sub
add
sub
xor
nop
ret
adc
sbb
jne
jl
or
xchg
sub
cmp
mov
insb
inc
push
sub
xor
sbb
dec
inc
unpcklps
mov
fsubl
out
stos
negl
insb
jo
icebp
push
fdiv
das
imul
inc
adc
orb
mov
pusha
xlat
jne
xor
or
aas
adcb
jne
push
jle
dec
daa
jne
mov
add
or
or
push
sub
or
xchg
enter
repnz
xchg
xor
jp
gs
push
rcrl
mov
daa
or
jne
dec
cltd
mov
xor
mov
mov
mov
js
pop
or
xchg
loop
sbb
add
push
dec
adc
adc
aaa
and
lret
mov
ds
sti
push
xchg
inc
out
adc
out
xor
cmp
test
adc
xor
arpl
andl
pusha
gs
add
imul
push
test
outsb
cld
mov
jl
jmp
mov
rclb
cli
sarb
sub
jne
xor
sbb
aam
cmp
pop
bound
iret
push
ds
int
and
movsb
xor
vmwrite
iret
rcrb
xchg
mov
lods
rcl
cs
mov
add
mov
or
iret
xchg
mulb
mov
out
les
add
cmc
cmp
lods
fdivrp
stos
shl
int3
xchg
aas
inc
dec
into
or
shrl
and
mov
jg
push
mul
xorb
fldenv
in
xrelease
mov
loopne
daa
push
lock
add
ds
stos
pcmpgtw
mov
xor
je
out
andb
enter
negb
pop
les
lcall
sahf
iret
adc
xchg
dec
and
enter
xlat
push
sbb
push
push
add
xchg
sub
mov
dec
cmc
mov
or
bound
and
xor
cmc
sbb
sbb
test
sbb
mov
push
imul
jb
popf
loope
or
ss
loop
add
xchg
inc
clc
mov
shr
mov
xchg
pusha
imul
xchg
in
es
sbb
mov
outsb
sbb
in
iret
sub
ficompl
cmp
push
inc
pop
pop
scas
cmpl
xchg
pop
push
inc
xor
add
mov
movsl
push
scas
arpl
mov
inc
cli
iret
and
mov
incl
and
pop
or
rcrb
cmp
out
xchg
pop
outsl
and
xor
call
mov
jmp
lods
pusha
pusha
sti
fidivs
leave
xchg
and
xor
imul
pop
mov
xor
jnp
divb
outsb
mov
jbe
xor
out
mov
push
mov
and
inc
lahf
insl
add
out
xchg
xchg
push
mov
mov
cmp
add
cmpsb
xchg
sbb
fucomip
jo
and
lcall
test
cmpsb
mov
jle
repz
sbb
ret
int3
scas
push
ja
orb
outsl
mov
bound
sbb
mov
add
or
orb
mov
mov
in
loope
scas
clc
xor
popf
cmp
cmp
std
jne
pmaxub
sbb
sahf
test
ret
lea
and
push
das
inc
mov
test
and
or
cld
test
ljmp
nop
xchg
jne
adc
sub
pop
shlb
xor
sub
xlat
dec
loop
sbbb
testb
push
sti
mov
or
movsl
push
cmp
adc
pop
push
imull
mov
mov
cmp
outsb
sub
pop
mov
jge
sub
push
or
mov
pop
xchg
cs
push
in
ljmp
and
negl
jae
adc
jge
lcall
test
xlat
lret
rcrl
call
add
les
ror
arpl
xchg
adc
cmp
aaa
push
push
adc
shl
cs
stos
popl
mov
dec
daa
pop
cmpsl
dec
mov
sbb
sub
xlat
dec
inc
xchg
lret
mov
in
jecxz
mov
push
jge
pop
rcr
xchg
xchg
mov
inc
or
shr
add
jnp
dec
sub
imul
aaa
inc
jb
ret
dec
jl
iret
arpl
test
mov
jns
add
inc
and
xor
je
push
lods
out
jne
or
fdivs
int3
mov
and
pop
inc
push
add
into
dec
mov
sbb
pop
fildl
pop
jno
xor
mov
idiv
loope
test
clc
or
pop
testb
jnp
sub
jp
sbb
mov
adcl
inc
addr16
inc
jmp
add
sub
and
bound
xchg
outsl
into
in
xor
jecxz
aad
push
jg
add
mov
ss
dec
mov
jae
push
or
leave
jecxz
fiaddl
xor
xchg
popa
or
rep
xchg
xchg
xor
mov
mov
sbb
fbstp
into
andb
scas
std
cmpsb
cltd
nop
push
sbb
lahf
mov
push
and
xchg
insl
ds
fst
xorb
inc
out
insl
inc
fnstenv
inc
scas
stos
pop
xor
mov
mov
out
jp,pt
inc
jae
mov
addr16
push
cld
add
sti
es
fisttps
in
xchg
movsl
ja
mov
fcomps
dec
cld
jnp
push
in
mov
pop
ljmp
adc
sub
jo
das
stos
add
cld
jle
stos
sub
xor
cmp
movsl
test
in
sbb
push
es
les
mov
mov
dec
dec
push
popf
mov
in
fmull
int3
xor
dec
arpl
cs
sbb
mov
dec
push
data16
pop
stos
popf
lods
daa
sub
ret
mov
je
adc
mov
add
mov
add
cwtl
ljmp
adc
in
in
jmp
adc
xchg
mov
mov
lods
push
pop
inc
in
lret
and
test
stos
cltd
sti
leave
js
mov
mov
sub
xor
shrl
iret
fnstsw
pop
lods
xchg
mov
sbb
mov
adc
rolb
xchg
aam
fisttpl
std
lret
dec
dec
notb
dec
mov
dec
std
ljmp
add
cmpb
push
pusha
xor
mov
mov
flds
mov
in
or
pop
xchg
arpl
mov
mov
mov
and
fcomps
imul
mov
movsl
or
cwtl
mov
out
pop
imul
inc
idivl
xchg
fcomip
xchg
into
arpl
movsl
ret
fcom
std
cmpsb
mov
outsl
gs
test
dec
lret
mov
mov
fists
push
in
push
add
in
cltd
cli
and
mov
pop
loopne
push
bnd
or
sahf
or
push
mov
fdivrl
aam
outsb
pop
into
xchg
jg
push
jle
adc
dec
sbb
xchg
fwait
loopne
mov
pushf
movsl
ret
add
pushf
or
cmp
cmp
popa
xor
cmp
pop
fimull
cmp
sbb
lods
ret
add
into
inc
out
push
sti
cmp
mov
xchg
jg
inc
addr16
mov
fnstsw
xchg
push
fiadds
mov
xchg
sub
out
dec
mov
add
pop
mov
fstpt
dec
mov
std
push
cwtl
mov
jge
sub
sub
rcrb
loopne
mov
pusha
out
je
call
push
and
inc
mov
lods
clc
dec
pop
mov
adc
add
test
ljmp
out
adc
push
sbb
fdivs
mov
aaa
cwtl
notb
fsub
iret
daa
inc
lock
jge
jnp
jbe
inc
mov
addr16
les
xor
mov
dec
xor
jp
pop
or
lcall
scas
mov
add
ret
xor
sar
cmp
cmc
inc
xor
lret
mov
jle
xchg
movsl
mov
push
add
pop
sub
sub
cmp
add
test
popl
and
jecxz
mov
dec
fcompl
ret
add
loope
mov
leave
push
mov
ds
adc
aam
daa
xor
sub
mov
jns
in
ljmp
cld
in
mov
xchg
pop
jle
xchg
sub
cmpsl
cmpsl
xor
js
test
mov
data16
sar
mov
cmp
jae
lcall
push
inc
inc
ret
pop
test
rcl
out
daa
hlt
aaa
mov
cmpsl
jge
fnstenv
cltd
adc
cwtl
inc
std
push
stc
es
add
add
mov
test
mov
cwtl
jne
cmpsb
sbb
sub
je
mov
outsb
outsb
jecxz
scas
push
es
inc
loopne
xchg
xchg
add
and
imul
pusha
or
in
cmp
insl
push
out
lahf
int
in
fmull
add
testb
push
mov
pop
dec
ret
inc
into
or
and
cmp
sub
mov
jb
xchg
sub
dec
scas
or
pop
sub
push
ret
xor
add
stos
ljmp
adc
mov
inc
rcll
fistl
cli
jbe
movups
pop
dec
adc
mov
or
pop
mov
mov
adc
mov
xchg
test
xchg
aas
pop
and
sar
xchg
outsl
inc
or
dec
mull
mov
jmp
adc
outsb
pop
test
bound
jmp
sub
mov
add
mov
or
aas
push
mov
sub
adc
idivl
jnp
cmpsb
es
outsb
insb
or
popf
push
outsl
or
dec
js
inc
in
sub
dec
imul
pop
jecxz
push
xor
std
insl
iret
in
incl
repnz
lret
call
inc
mov
lea
scas
fmuls
popa
cmc
mov
mov
test
dec
stos
or
pusha
lods
fsubl
das
lcall
out
cmc
push
js
insb
push
mov
ss
mov
xor
sbb
sub
inc
decl
gs
jecxz
or
and
pushf
and
and
out
jbe
faddl
mov
sub
push
outsb
in
pop
mov
outsl
aas
jnp
icebp
test
add
pop
xor
cwtl
xor
ret
adc
jne
add
sub
cmp
arpl
jno
add
jecxz
das
call
jg
adc
push
and
ret
pop
loop
or
and
xor
inc
pop
dec
dec
or
dec
addl
and
xchg
or
inc
scas
push
sub
sub
fdiv
jp
pop
inc
pop
jmp
mov
mov
jp
pop
dec
pop
dec
fidivl
pop
mov
inc
inc
or
lret
sbbl
mov
jle
sub
push
loopne
inc
pop
sbb
lahf
mov
xor
mov
mov
push
add
cltd
xchg
pop
cmpsb
insl
aas
inc
add
or
pop
mov
in
sub
cmpsl
add
xchg
std
push
call
rorb
ret
jb
mov
mov
lret
cwtl
cmp
stos
and
aas
add
aas
loopne
xorb
push
scas
xor
jnp
ret
add
jecxz
jb
xor
sbb
mov
cwtl
bound
pop
push
sbb
scas
es
pop
sbbl
and
out
or
mov
push
cmp
add
cmp
mov
jmp
push
dec
inc
sbb
add
cmp
clc
test
xchg
pop
outsl
lret
cltd
negl
xchg
mov
sub
sbb
lahf
imul
xor
scas
js
sub
mov
in
add
fs
lret
xchg
cmp
pop
fs
mov
push
imul
repz
mov
jl
iret
test
leave
sbb
adcl
adc
hlt
rcrb
jbe
pop
pop
ja
aam
add
ljmp
sahf
and
bnd
push
push
add
mov
into
dec
popa
neg
addb
movsb
adc
sti
lahf
pop
cltd
sub
jo
scas
out
rep
sbb
in
out
in
xchg
out
into
mov
imul
adc
or
in
or
cmp
push
lds
roll
test
test
jp
sub
jno
nop
jg
in
mov
popa
mov
xchg
or
daa
inc
cs
mov
outsl
iret
repnz
or
in
cmpsl
mov
ljmp
xor
stos
fsts
arpl
sti
shlb
mull
ja
sahf
loope
inc
test
inc
loope
sub
xchg
and
jno
scas
inc
movsb
xor
pop
mov
or
into
add
mov
mov
mov
adc
mov
mov
xor
pop
mov
adc
aad
push
sub
cmc
push
mov
xchg
push
sbb
mov
in
or
clc
and
xor
movsb
jle
js
push
add
xchg
push
push
and
adc
xchg
enter
push
cmpsb
cld
icebp
lods
pusha
or
iret
mov
push
mov
test
mov
ret
xchg
or
icebp
int3
fwait
out
in
lret
in
out
icebp
add
shl
fs
sbb
lret
daa
sbb
xor
sbb
mov
cmp
ret
insb
jns
xor
jmp
scas
fmull
add
inc
or
xorb
xchg
call
popf
sbb
enter
push
aas
mov
imul
jp
ss
shlb
stos
pop
pop
ss
pushf
inc
mov
ret
inc
in
push
sbb
push
movsb
cmp
or
divl
xlat
movsb
and
mov
mov
cld
int3
sti
cmp
jbe
mov
stos
aam
cmpsb
lahf
test
sti
and
popf
jle
stc
lock
hlt
sbb
mov
sub
xchg
add
fnstsw
fisttps
sub
mov
push
dec
ja
push
fwait
bound
add
sbb
push
outsb
ss
lret
mov
sub
jbe
cwtl
push
call
jbe
xlat
fnstenv
xor
mov
or
jecxz
push
inc
insl
arpl
and
das
pop
cmpsl
or
mov
ljmp
push
loope
xlat
arpl
mov
ficoml
mov
xchg
and
hlt
push
loopne
mov
rep
dec
notb
test
xchg
in
adc
mov
hlt
pop
in
test
sahf
jbe
loop
mov
rcr
outsb
sbb
dec
icebp
pushf
mov
cmc
fwait
pop
pop
std
push
stc
xchg
xchg
mov
fwait
sarl
sub
cmp
mov
out
clc
push
or
movsb
xor
jbe
imul
in
jecxz
cwtl
lds
mov
lea
mov
xchg
jnp
xchg
int3
and
adc
mov
cwtl
pusha
aas
xor
mov
mov
outsl
lods
push
or
cmp
dec
cltd
lret
test
inc
inc
inc
pop
aam
xor
sbb
pushl
fsubs
inc
ss
xor
inc
dec
or
and
idivl
ljmp
mov
out
scas
sub
push
pop
movsb
sub
dec
test
dec
data16
inc
dec
xlat
cmpsl
ja
stc
pop
sbb
cmpsb
arpl
xchg
adc
iret
scas
push
adc
test
cmp
push
imul
jmp
pop
enter
sahf
mov
jno
push
xchg
arpl
xchg
xchg
aam
es
mov
and
cmp
xchg
dec
out
test
mov
mov
mov
mov
pop
push
push
xchg
data16
loop
xchg
inc
pop
dec
out
inc
icebp
sub
shll
pxor
inc
repnz
loopne
aas
dec
jno
push
fwait
mov
aaa
mov
mov
stc
js
loopne
das
aam
fs
out
loope
arpl
cmp
xor
aas
in
push
lock
or
fwait
mov
orb
ja
adc
nop
test
cwtl
cld
jmp
and
out
aam
mov
stc
fiaddl
arpl
xchg
cmp
pushf
add
je
and
and
xor
int
mov
movsl
rcl
pusha
mov
inc
nop
and
inc
adc
rclb
pop
dec
or
xchg
test
ss
arpl
xlat
cmp
cmpsb
inc
iret
jl
sbb
xor
push
pop
and
imul
shll
out
lret
mov
adc
mov
jmp
xchg
cmpsb
shrb
lds
aas
sub
sbb
orb
xchg
push
adc
add
and
shlb
rolb
pop
mov
outsb
mov
aas
jb
test
subl
mov
inc
pop
push
sub
int
test
les
js
rclb
or
inc
das
rclb
mov
loop
ljmp
cwtl
jne
push
cmpl
push
imul
aaa
pop
js
xlat
inc
mov
movaps
cmp
test
mov
mov
daa
cli
das
rcrl
lcall
xchg
dec
jl
repz
add
push
mov
ret
mov
inc
cmp
stos
mov
add
xchg
mov
cmp
loopne
daa
mov
aad
fisubs
test
enter
aaa
arpl
mov
adcl
or
and
xchg
jp
sarb
pop
or
cltd
nop
jg
cmp
inc
test
xchg
dec
xchg
cmp
call
shlb
adc
fdivr
call
adc
inc
push
cld
call
out
dec
psubw
jb
out
or
cmp
jmp
add
inc
lret
cmp
lock
xchg
cmc
stc
shll
std
xor
and
popf
sub
pop
mov
inc
test
out
sarl
out
rcr
lret
aad
push
pushf
mov
xchg
xchg
push
shll
int3
pop
pop
in
or
fmul
pop
mov
sbb
xchg
aaa
dec
rol
stos
sahf
insb
sbb
xchg
outsl
mov
fwait
daa
daa
cmp
jns
je
mov
sub
xor
pushl
repz
jle
xor
pop
cmp
push
ds
sub
fst
push
push
std
enter
cmp
hlt
jnp
push
test
pop
mov
or
rcr
out
pop
inc
cld
sti
pop
dec
push
sahf
lahf
fldt
cmp
movsb
dec
aad
out
iret
mov
decb
loope
fisttpl
aaa
lret
jp
imull
jb
pop
xchg
xor
mov
mov
xchg
cmp
cld
ja
mov
jmp
lret
add
mov
sub
fidivrs
daa
sub
sbb
les
adc
in
jp
or
xlat
xor
push
mov
cmpsl
lcall
or
xchg
out
mov
jno
es
test
adc
jno
mov
test
test
add
cs
insb
jnp
xchg
pop
repnz
dec
push
mov
sbb
in
sub
adc
pop
bound
pop
xor
xlat
mov
sbb
mov
inc
jecxz
loopne
mov
xchg
cld
in
cmp
xchg
add
add
add
pop
push
add
fsubrs
leave
scas
sub
sub
in
call
pusha
xchg
xchg
aas
cs
sbb
insl
scas
or
and
cmp
mov
ret
xchg
sbb
aaa
test
int
out
es
mov
push
mov
cltd
xchg
add
dec
sub
and
fnsave
icebp
enter
jp
dec
outsl
and
mov
pop
xorb
lods
adc
push
dec
push
pop
adc
iret
mov
jmp
fwait
das
pop
les
mov
jb
xchg
daa
push
xchg
rcrb
test
sbb
cltd
jae
mov
mov
xchg
sbb
mov
xchg
lret
sub
imul
push
sub
cld
pop
mov
mov
lea
mov
inc
or
jne
adc
movsl
fidivs
sub
aaa
pop
call
in
lods
or
pop
je
test
xchg
push
xor
imul
insl
inc
xchg
loop
jl
in
sub
decl
pop
pop
pop
or
jge
cmp
cmp
mov
cs
cmpsb
out
nop
add
mov
lock
fiadds
iret
ss
jecxz
inc
inc
fidivl
out
mov
rolb
loope
imul
add
lods
xchg
int3
repz
cwtl
test
bound
add
xor
in
inc
jmp
sarb
loopne
fistl
dec
loop
stc
cmp
cltd
fstl
icebp
xchg
aaa
daa
and
hlt
xchg
jge
add
xchg
test
bound
push
cmp
push
pushf
jg
cmp
gs
std
std
jb
lret
pop
cmc
lds
bound
dec
lock
ja
sub
pop
outsl
jle
pop
dec
fwait
mov
in
xor
dec
mov
rorb
pop
shrl
mov
xchg
cli
mov
scas
loop
and
shl
sub
xor
notb
adc
add
adc
cmp
cwtl
push
pop
fisubs
ss
mov
lock
aam
int
out
popf
adc
fwait
dec
xor
call
push
je
out
dec
cwtl
dec
aad
test
stos
enter
xlat
xlat
call
mov
int
scas
pop
lods
lds
popa
jl
stc
lods
or
sbb
mov
dec
jnp
rcll
rcll
jg
nop
xchg
push
cld
mov
cmpsl
mov
pop
mov
jae
xchg
adc
dec
or
jno
push
push
mov
dec
mov
daa
sbb
arpl
mov
cwtl
in
and
push
sub
mov
flds
cmpb
xchg
mov
cmp
push
jnp
or
jmp
imul
xchg
fs
sub
divl
pop
adc
dec
out
iret
ja
shrb
ljmp
add
push
das
push
adc
push
and
sbb
rcrl
cmp
adc
into
or
and
stos
cs
jne
int
mov
pop
xor
mov
add
pop
stos
sub
push
inc
test
cmpsl
add
inc
xchg
pusha
sbb
inc
mov
or
repz
cmp
int3
lds
mov
xor
cltd
arpl
cmp
imul
or
scas
dec
sysret
mov
clc
scas
mov
sbb
js
add
ret
loope
mov
jno
sbbl
sbb
mov
push
add
faddl
jmp
pop
hlt
rcll
test
jb
dec
jnp
loopne
fstpt
shrb
rclb
repnz
cwtl
sbb
and
add
dec
xchg
xchg
adc
jb
loopne
mov
cmc
inc
stos
dec
add
or
adc
mov
insl
or
cmp
push
xchg
je
jp
add
aad
jl
js
cmp
decb
cmp
lea
pop
push
sbb
int
les
inc
jg
push
cmp
dec
mov
sahf
movsb
jnp
add
xor
movsl
inc
pop
outsb
jmp
and
xor
mov
dec
sub
push
repnz
jl
xchg
mov
lahf
dec
lahf
push
lahf
in
and
dec
inc
mov
dec
adc
adc
inc
dec
sub
mov
pop
or
ljmp
test
fsts
mov
mov
inc
sbb
xchg
sbb
xor
sbb
pop
mov
or
call
mov
adc
mov
hlt
ljmp
or
fnstcw
loop
fadds
arpl
push
cs
popf
sub
xchg
jne
imulb
icebp
cs
push
sbb
dec
push
lea
daa
dec
addr16
cmc
js
mov
data16
jno
inc
popf
cld
sub
test
cli
lock
repnz
dec
jo
mov
jo
test
pop
repz
dec
adc
fadds
fldcw
or
xor
in
mov
js
fwait
clc
inc
xchg
xchg
add
test
int
cmp
outsb
mov
mov
iret
in
ljmp
sahf
and
insl
inc
ja
push
or
mov
fstpt
scas
inc
aas
lock
xchg
cmp
pop
imul
punpckhdq
mov
add
or
movsl
je
arpl
stos
cli
adc
inc
aas
cmp
mov
jl
xor
sbb
scas
dec
insb
and
sbb
lods
aaa
mov
mov
pop
push
jecxz
push
imul
pop
dec
adc
inc
mov
into
in
xchg
dec
orl
scas
imul
dec
mov
cmp
arpl
pop
incb
js
popa
dec
adc
into
lret
lds
xlat
pushf
repnz
shl
xchg
stc
mov
in
inc
mov
cmp
nop
push
xor
adc
mov
in
add
into
adc
pop
jge
mov
xorl
push
js
xchg
cmp
lret
cli
mov
int
push
xor
jmp
sub
loop
jno
std
xchg
mov
cli
lcall
jbe
mov
or
mov
push
scas
sbb
mov
sub
pop
or
lock
icebp
int3
xchg
mov
mov
popf
push
push
call
mull
jecxz
mov
lahf
rcr
and
es
sub
aas
jle
sbb
in
push
pop
sub
js
out
in
sub
push
dec
insb
mov
push
pop
sub
es
pop
push
cmpsb
mov
out
cli
bound
int3
mov
int
push
cmc
repnz
cli
jge
cmp
inc
js
popa
test
jl
mov
mov
lds
jbe
in
movsb
cltd
mov
test
sbb
adc
jle
sub
xor
adc
rclb
dec
mov
xor
cld
in
sub
adc
outsb
mov
sbb
mov
lahf
adc
adc
test
mull
inc
jecxz
out
jae
cmc
stos
popa
jae
sbb
dec
mov
rorl
dec
movaps
mov
jecxz
bnd
jo
xchg
outsl
jge
sbb
int3
test
ud0
push
mov
in
cmp
mov
adc
bound
pop
lret
adc
arpl
sti
mov
stos
add
xor
mov
adc
or
sarl
mov
mov
mov
dec
ret
or
jne
pop
adc
inc
inc
mov
adc
and
call
xchg
push
mov
adc
xchg
and
pop
lds
scas
dec
adc
mov
jmp
push
inc
addr16
es
mov
mov
insb
adc
jmp
sub
ret
jp
call
or
rclb
cmp
mov
xor
das
sti
mov
fisttpll
pop
call
rorb
jmp
pusha
pop
loope
sub
iret
sub
mov
mov
dec
or
daa
sbb
mov
jp
jns
call
dec
fcoml
push
xchg
xor
mov
movsl
test
push
jbe
out
dec
mov
fdivs
in
lcall
inc
fists
ret
lds
xor
inc
leave
shll
inc
xchg
fwait
pop
sahf
lcall
cmp
adc
std
cmc
mov
shr
cwtl
or
dec
stc
xor
pop
pop
jge
iret
and
cmp
in
jge
sub
cli
jg
mov
and
adc
pop
xor
adc
pop
ds
xchg
jo
cmp
xchg
and
cltd
add
shlb
ret
xor
movsl
nop
adc
aam
or
push
sbb
dec
in
add
jno
mov
xlat
inc
scas
xor
xchg
imul
inc
dec
lock
cltd
dec
sub
dec
push
push
out
pushf
push
jo
les
lret
pop
and
and
xchg
test
push
mov
pop
movl
push
fstps
les
add
inc
pushf
push
repz
sub
mov
call
xchg
test
arpl
cwtl
rclb
push
dec
push
filds
cmc
dec
pusha
adc
ja
in
sbb
sti
fwait
adc
insb
push
and
fs
into
fnstsw
pop
fists
push
insb
das
inc
daa
xchg
mov
xlat
fcmovu
sbb
repz
in
cmp
xor
loopne
push
aam
loope
std
fwait
mov
subl
mov
mov
aaa
push
imul
es
mov
and
pushf
mov
pop
and
xchg
fisubl
dec
bound
mov
mov
out
ret
mov
inc
rcrl
push
in
stos
jne
scas
push
pushf
loope
in
mov
in
jbe
dec
mov
sarb
clc
pop
lock
fstpl
aaa
in
jg
jecxz
push
pop
fcmovu
lock
add
push
push
loop
mov
lcall
les
cli
or
xchg
xor
test
pushf
std
in
ljmp
adc
mov
mov
dec
popf
aaa
mov
sub
jb
hlt
iret
inc
shl
fs
nop
or
mov
mov
cld
mov
pusha
mov
jnp
jo
mov
les
mov
push
out
cmp
and
data16
in
push
inc
jne
imul
mov
jmp
inc
shll
inc
cli
scas
sub
xchg
pop
adc
loop
cmc
insb
mov
scas
les
les
cmpsb
neg
fnstsw
bound
xchg
cmp
pop
push
or
enter
enter
dec
mov
inc
mov
mov
push
push
mov
mov
clc
push
pop
mov
jp
mov
das
cmp
push
out
dec
cmp
dec
xchg
hlt
insb
testb
fimull
add
sub
mov
push
in
imul
out
add
lahf
jne
iret
mov
jne
mov
push
iret
sbb
lea
repz
inc
insl
fucom
sahf
push
mov
stc
cltd
popl
push
push
scas
cmp
jb
mov
sub
out
dec
mov
cmp
sbb
cmc
xor
mov
loop
cwtl
cmc
dec
daa
mov
int3
ss
sub
int
lcall
subl
add
cltd
mov
inc
pop
add
and
sub
fldenv
pop
test
and
mov
cmp
mov
sbb
movsl
or
or
xor
stos
inc
dec
mov
xorb
push
inc
xchg
lds
xchg
addr16
fstpt
mov
push
ficoml
int3
inc
xchg
adc
nop
mov
in
mov
in
xor
ss
movsl
enter
mov
cmpsb
push
push
lcall
out
and
push
sbb
insb
lock
daa
in
cmp
jg
pushf
call
test
imul
push
insb
outsb
xor
and
inc
adc
arpl
mov
jno
xor
ja
add
jnp
jns
imul
loope
jp
movsl
inc
mov
xchg
xchg
pop
jb
pop
jle
mov
lods
pop
or
test
pop
imul
mov
les
cmp
or
ds
inc
pop
loop
pop
popa
lret
lock
xchg
mov
mov
mov
cli
mov
pop
push
push
jae
mov
push
sbb
test
sbb
fldl
sub
lods
xlat
repnz
mov
mov
cs
sub
mov
xor
icebp
stos
shrl
les
cmc
mov
dec
jecxz
negl
scas
add
push
or
and
adc
xchg
adc
int3
or
call
dec
jbe
sub
push
insb
sbb
lods
std
jne
jge
jnp
je
std
push
jbe
push
xor
adc
js
pop
lcall
mov
jmp
outsb
testl
jns
aad
cltd
or
imulb
int
das
sub
icebp
sbb
sbb
outsl
pop
xor
xchg
enter
shrl
aaa
inc
or
aam
xor
and
and
in
ror
les
jnp
xchg
push
add
icebp
mov
bound
dec
push
and
mov
xor
movsb
xchg
lods
vmovntps
sub
dec
insb
shlb
push
in
mov
ljmp
mov
inc
xor
dec
hlt
orb
cmpsb
cs
jno
push
sbb
lcall
das
mov
outsl
dec
sti
cmp
mov
pop
out
imul
sbb
mov
xchg
outsb
ficoml
push
jmp
mov
std
add
push
nop
js
fistps
mov
test
jo
mov
das
rolb
mov
inc
add
push
sub
test
sub
mov
dec
sbb
or
cmp
xor
or
pop
push
lret
push
inc
shlb
icebp
scas
or
sbb
mov
fnstenv
mov
sbb
inc
sbb
xor
inc
and
ja
fadds
aaa
pop
les
push
adc
ljmp
xchg
into
and
sbb
mov
or
pop
lcall
mov
cmp
jge
and
imul
add
test
mov
rclb
fldt
add
adc
add
clc
adc
mov
scas
sbb
je
add
xchg
pop
pop
cmc
push
in
lea
ret
sbb
cmpsb
daa
inc
add
pushf
jno
and
and
sub
mov
push
ds
adc
jg
cltd
mov
push
lea
sub
sbb
pusha
sbb
insl
sub
test
sub
push
mov
int
fs
pop
lods
push
xchg
cmp
jne
mov
sbb
cmp
scas
dec
popa
jns
cmc
out
stc
add
mov
jae
cmc
loop
dec
das
mov
mov
ret
inc
jne
mov
insl
imul
pop
popf
shrl
add
pop
dec
sub
out
adc
in
fs
out
pop
and
dec
jmp
mov
in
dec
ror
hlt
push
lahf
in
rorl
mov
cwtl
and
adc
cmpsb
test
iret
int3
adc
sub
push
out
add
ret
repz
xchg
xor
nop
inc
filds
inc
jmp
fldcw
inc
adc
jb
mov
das
pop
push
clc
xchg
add
cwtl
stos
pop
xchg
xchg
into
leave
add
pop
jne
loopne
aas
push
clc
or
ljmp
arpl
bound
jge
mov
jl
je
movsl
movsl
and
in
leave
rclb
sub
mov
dec
test
inc
and
lods
and
mov
les
jb
or
aad
sbb
xor
cmp
mov
insb
and
xchg
cmp
cmp
xor
cltd
mov
lret
adc
add
jns
loopne
sub
pop
mov
xor
leave
fiaddl
enter
shrb
mov
pop
and
fxtract
jmp
mov
cmp
fs
cltd
xor
insb
inc
sbb
lcall
sbb
loopne
cmp
iret
out
mov
ljmp
xchg
push
mov
push
jecxz
mov
cs
cmp
ret
push
imul
inc
sub
cwtl
xorl
cmp
mov
mov
jl
cmp
xchg
lcall
inc
add
push
xor
mov
mov
mov
add
out
call
mulb
mov
mov
sbb
inc
adc
mov
xor
mov
pop
insl
scas
adcl
cld
ds
pop
adc
fwait
cmp
mov
add
push
push
scas
jmp
iret
icebp
xor
decl
jbe
xor
dec
repnz
shrl
inc
mov
cmpb
je
cmp
push
dec
out
add
xor
lret
xor
and
cmp
test
dec
or
pop
pop
stos
test
push
add
jno
sti
scas
xor
int
cmp
mov
push
enter
sub
lcall
jp
or
inc
xchg
xor
ljmp
jnp
shl
cmp
or
inc
bound
xchg
sbb
pop
paddsw
mov
and
int3
sbb
jnp
and
pushf
jns
test
ljmp
roll
ret
cli
xor
mov
add
test
dec
lods
insl
cmp
mov
mov
mov
mov
sub
dec
mov
adc
bound
jnp
jnp
mov
mov
inc
rcr
shll
or
mov
add
xor
ret
ds
aam
mov
push
xor
push
push
mov
sahf
stc
lock
add
movsl
and
push
xorb
mov
aaa
inc
xchg
popf
bound
or
mov
jl
xorb
outsl
sub
in
add
cmc
icebp
pop
test
in
jne
fs
lahf
or
pusha
mov
pop
sar
call
sbb
test
arpl
or
inc
loopne
sub
inc
mov
add
enter
mov
dec
call
popf
or
mov
rcll
xor
cmpsb
popf
sarl
lock
add
sbb
pcmpeqw
mov
cmp
add
dec
in
bndldx
lahf
adc
lds
btr
mov
sub
inc
test
pop
push
clc
jnp,pt
mull
bound
inc
cwtl
sti
adc
in
pop
insl
jno
fsubrl
or
loopne
add
dec
scas
jae
pushf
imul
stos
mov
or
popf
xor
pushw
add
pop
push
stos
xchg
sti
fdivrl
repnz
addr16
out
loop
dec
push
mov
fptan
dec
enter
inc
or
xor
jo
cmp
test
nop
dec
les
sti
aas
pop
lods
jne
mov
int3
jecxz
push
push
adc
js
scas
jecxz
inc
lret
lahf
sub
adcl
mov
arpl
or
insl
movb
leave
mov
cmp
push
enter
inc
or
mov
xchg
loop
popf
lret
mov
cmp
mov
fbstp
dec
push
divb
stos
lahf
pop
cltd
cmpsl
adc
js
push
xchg
xor
mov
in
test
mulb
mov
jp
mov
lds
repnz
push
add
aaa
stc
xor
int
test
cmp
hlt
aas
cmp
dec
mov
pop
xchg
pop
cmpsb
es
jnp
mov
popa
in
jle
xlat
push
xchg
cmp
mov
enter
test
gs
xor
jno
push
test
add
sub
jmp
and
pop
xchg
scas
push
inc
jmp
iret
pop
test
in
sarl
addr16
pop
std
mov
shll
sahf
and
push
mov
jmp
pop
std
dec
lock
aaa
sbb
or
mov
sub
push
jb
inc
aaa
dec
xchg
dec
mov
sub
adc
and
xchg
cmp
mov
clc
jne
push
add
adc
sbb
lds
and
jmp
or
jae
mov
pop
xor
mov
int3
add
pushf
out
mov
jbe
dec
scas
mov
lret
lods
push
inc
repnz
movsl
ret
mov
sub
mov
or
nop
or
nop
dec
call
mov
aas
lahf
imul
add
mov
icebp
jae
inc
push
or
or
sbb
loopne
mov
outsb
cmc
dec
bound
or
popaw
pop
fistl
js
ds
xchg
inc
mov
jmp
pop
imul
mov
push
inc
je,pn
xchg
call
adc
xchg
mov
cld
add
divb
pop
pop
sbb
or
fsubl
sbb
scas
pop
movsl
outsl
adc
ss
mov
or
insb
aam
mov
jnp
jbe
lea
rcrl
movsb
ljmp
ds
cld
xor
shll
push
jl
dec
sbb
and
stos
pop
fmul
adc
pop
add
push
add
add
punpcklqdq
xor
mov
rcr
in
sub
jge
sbb
add
call
les
test
in
loope
pop
icebp
int
gs
clc
cmc
sbb
data16
add
daa
adc
dec
leave
faddl
das
push
cwtl
imul
push
outsl
sbb
xorl
bound
sub
repz
mov
jnp
test
loopne
clc
rcll
pop
out
ja
xchg
add
mov
or
mov
pop
out
and
push
cs
cwtl
imul
xor
push
sub
cmp
in
test
mov
push
fdivrl
scas
xchg
movsb
jb
mov
lret
lcallw
push
adc
pop
daa
jp
ds
jle
in
sbb
mov
stc
mov
xorb
jecxz
popa
push
lahf
push
add
push
lret
shlb
jne
push
movsb
pop
push
lods
cld
jo
lock
pop
rorl
mov
and
clc
adc
xchg
loope
mov
scas
shlb
int
es
cmp
stos
dec
insb
mov
pop
pop
fwait
cmpsl
imul
sbb
mov
shlb
adc
mov
inc
jp
imul
mov
push
pop
mov
mov
push
pusha
sub
sub
lahf
or
fisubs
jne
xor
jae
mov
push
mov
lea
aad
xor
lea
pop
pop
aas
aas
fwait
das
lods
push
xchg
lock
iret
cmp
mov
mov
and
mov
ret
ja
xor
int
iret
sub
add
cmc
iret
notl
arpl
or
repz
in
push
rclb
mov
addr16
mov
out
ret
inc
nopl
imul
xor
add
pop
pop
push
call
push
pop
cld
cmp
nop
cmpsl
push
xor
and
insl
shll
lea
lret
or
and
mov
ja
int
xchg
mov
add
mov
sbb
dec
or
test
into
lds
addl
push
outsl
mov
adc
std
dec
cmp
add
daa
adc
mov
stos
in
xchg
jnp
xor
fs
inc
push
test
sub
lret
jno
lea
cltd
fsubp
test
push
inc
divb
iret
and
jge
mov
daa
xlat
mov
nop
inc
add
mov
je
or
inc
xchg
loope
sbb
inc
jg
jnp
dec
stos
push
rclb
xor
ds
xor
inc
aam
push
rorl
sbb
xchg
lods
lret
and
push
mov
xor
cmc
sub
xchg
mov
xchg
sbb
cwtl
std
jle
lods
push
and
sbb
pop
pop
pop
scas
add
inc
and
inc
aam
in
mov
mov
and
mov
loope
jmp
adc
inc
pop
xor
push
xor
xor
and
or
and
adc
inc
mov
push
gs
and
pusha
sti
xchg
mov
sbb
mov
mov
sbb
dec
push
mov
sub
das
ss
cwtl
roll
imul
mov
outsl
cld
leave
dec
xchg
call
or
aad
rorl
push
ljmp
mov
mov
mov
roll
iret
repnz
sbb
sbb
repz
lods
call
and
push
ss
call
filds
flds
imul
mov
stc
shll
loop
test
ret
pop
jo
orl
push
out
pop
pop
insb
jae
jbe
push
xchg
fsub
add
sub
adc
loope
push
dec
int
cmc
and
dec
mov
out
push
hlt
je
cwtl
mov
pop
add
add
pop
inc
pop
fsubrs
cwtl
xlat
test
lea
pop
subl
movsb
repnz
cmp
push
xchg
xchg
cmpsl
rclb
and
lea
clc
jbe
out
pop
xor
jnp
mov
repnz
out
adc
jp
insb
sbb
out
aaa
mov
nop
jl
ja
push
xor
outsb
mov
jbe
in
icebp
sti
out
jge
les
adc
sbb
test
outsb
movlps
dec
cmp
insb
pushf
loop
pusha
loopne
movsb
pushf
test
repz
int
add
mov
loope
or
mov
and
push
int3
fiaddl
add
push
test
mov
xor
push
cmp
je
mov
mov
es
shll
imul
cmpsb
loopne
fnstcw
pop
mov
lds
in
ds
inc
mov
stos
data16
lds
add
cmp
sub
cli
cmp
je
pop
and
fwait
pop
bound
lea
ds
ds
and
dec
pop
rolb
aam
cmp
mov
and
idivb
mov
les
push
lock
cmp
ficoml
insb
stos
pop
cmp
clc
in
mov
or
in
cmp
mov
pop
dec
sub
push
fistl
fisttpll
jo
dec
mov
xlat
insl
dec
jg
or
test
ss
movsl
cmpsb
cmp
mov
arpl
aam
mov
mov
mov
hlt
mov
push
frstor
lods
arpl
cli
pop
xor
adcl
aas
arpl
xchg
movsl
fcomps
sarb
outsl
inc
add
out
jb
xchg
ret
insb
lahf
bound
jae
or
and
call
push
in
xor
add
dec
adcl
inc
or
lahf
scas
adcb
push
xchg
into
test
mov
lds
sarb
mov
outsb
pop
pusha
push
test
push
shll
iret
pushf
aam
mov
fnstcw
insb
jo
ja
sbb
pop
dec
mov
ret
or
add
dec
dec
cld
subl
pop
lods
inc
leave
imul
cmpsl
inc
sbb
xchg
mov
xchg
mov
cli
mov
mov
sub
sub
andb
out
cmp
sbbl
push
cmpsb
lds
add
roll
jmp
insl
pop
mov
cld
addl
jge
push
cmp
call
push
inc
jbe
arpl
leave
push
xchg
jnp
int3
pushf
jecxz
push
int
outsb
or
sub
or
push
cmpsl
inc
ds
sbb
sub
or
mov
test
or
dec
fildl
mov
push
insl
sbb
scas
pop
dec
sbbb
cwtl
lods
dec
incl
add
imul
add
lret
mov
adc
lretw
mov
fstps
lods
gs
popf
push
int3
jp
test
pop
fnstsw
movsl
lds
jge
and
push
dec
loop
lods
pop
xor
mov
mov
push
sti
jle
pushf
lret
mov
mov
mov
jae
mov
imul
ret
xor
sahf
or
lea
sub
pop
push
jns
loope
and
add
popa
adc
push
jg
es
sub
scas
lods
sbb
push
imul
int3
stc
jo
repz
mov
lock
adc
dec
add
movsb
inc
adc
icebp
xchg
mov
push
xchg
outsl
scas
or
out
popa
pop
mov
ror
sub
jae
sbb
push
test
adc
pop
shr
lret
push
lock
and
mov
add
dec
sbbl
mov
cli
mov
cmp
decl
pop
mov
inc
outsb
mov
mov
jb
mov
mov
mov
jp
xchg
scas
mov
push
push
mov
mov
lret
lret
dec
xor
dec
insl
je
xchg
fistpl
add
mov
sub
push
jnp
frstor
pusha
sbb
or
pop
mov
sti
mov
xchg
mov
pop
jb
xor
or
mov
adc
cmp
sahf
idiv
imul
pop
mov
fbstp
dec
mov
cmp
push
add
cli
sbb
xchg
xor
and
mov
ret
das
mov
out
and
adc
push
jle
popf
mov
and
fcomps
nop
movsb
jae
lods
sub
lods
scas
push
add
hlt
sub
into
outsl
push
mov
add
push
xor
pop
lcall
dec
xor
push
nop
adc
in
xor
push
pop
or
popf
xchg
std
sbb
ficoml
pop
pop
jns
repz
stos
jb
je
les
repnz
cmpb
add
push
xchg
insl
push
push
pmuludq
sub
mov
push
mov
lea
dec
sahf
outsb
dec
inc
sbb
leave
ljmp
fiaddl
fistl
insb
nop
lahf
invd
mov
xchg
cli
fwait
jle
loop
xchg
notb
jp
jno
xchg
add
dec
mov
out
shll
in
xchg
jmp
add
fwait
jne
shrl
push
js
andl
shrb
pop
test
inc
fsubrs
int3
add
das
orb
inc
repz
sbb
push
sub
in
stos
arpl
push
lahf
imul
pop
mov
les
out
loopne
leave
nop
dec
push
mov
fs
jb
xor
mov
mov
call
xorl
mov
bswap
sbb
imul
adc
ss
cs
pop
xchg
call
pop
xor
push
mov
cmc
mov
jbe
leave
inc
pop
adc
mov
inc
sbb
rcrb
dec
lods
dec
pop
or
jns
sub
out
cmp
xor
mov
mov
inc
and
or
mov
and
pop
push
imul
adcb
imul
sub
sub
loopne
push
xchg
mov
dec
and
in
adc
sti
push
xchg
dec
xchg
mov
or
xor
sbb
stos
aam
adc
shll
push
jecxz
dec
or
push
popf
xchg
in
add
xchg
push
sub
mov
pop
rclb
ja
dec
insl
out
ret
daa
shll
repz
scas
loope
repnz
lock
nop
in
and
lret
push
mov
and
push
add
cmp
jbe
and
mov
repz
mov
mov
mov
inc
jno
xchg
ljmp
or
dec
pop
pop
sbb
lahf
popf
push
mov
cltd
int3
cmp
mov
aad
lahf
mov
sub
push
shrl
mov
jg
xlat
cmpsb
mov
sub
pop
add
cmp
loope
sub
lods
jge
dec
mov
mov
jno
ss
aam
or
data16
lret
jne
mov
xchg
divl
xchg
clc
push
dec
icebp
jne
icebp
ret
pop
lea
inc
int
push
shlb
in
cwtl
lods
mov
bound
cmp
ret
cwtl
ljmp
addr16
mov
sub
sub
sbb
xor
jge
loopne
lock
les
test
mov
lcall
clc
mov
sub
outsl
xchg
xlat
je
outsl
out
mov
pop
mov
xchg
xlat
insl
cmpsb
pop
push
test
leave
sti
cli
js
xorb
mov
bound
lahf
mov
fcompl
cltd
neg
aam
push
mov
in
mov
dec
push
fcomps
aad
movsl
arpl
out
or
dec
lret
mov
or
xor
and
inc
decb
pop
mov
inc
pop
pop
mov
jmp
add
pop
mov
mov
mov
notb
or
ljmp
and
lahf
push
cli
fstps
pop
fndisi(8087
clc
ret
icebp
out
push
mov
das
xchg
jle
inc
rcrb
fisttpll
cmp
cwtl
mov
jl
push
cmp
fwait
push
jbe
aaa
add
cmpsb
add
sbb
mov
or
sub
test
jbe
jmp
jle
fs
imul
jno
push
ljmp
movb
daa
lcall
ss
xchg
jnp
jbe
sub
adc
add
jb
cmp
mov
enter
psubusb
pop
cld
fmull
and
hlt
mov
pop
popa
popa
sub
lcall
pop
lret
sbb
mov
adc
cmp
shlb
subl
xor
rcrl
mov
and
movsl
movsb
cli
adc
dec
push
lret
out
mov
mov
adc
addr16
jnp
push
sbb
lock
jno
xor
mov
jg
xchg
pushf
leave
push
sti
lea
dec
lods
push
cmpsb
xlat
xchg
and
mov
xchg
push
xchg
xchg
sub
adc
ficoms
jbe
stc
outsl
insb
push
mov
pop
in
or
cmp
hlt
aas
in
sub
xor
inc
lret
pop
pop
xor
sub
aaa
cmpl
and
pop
push
ja
add
adc
and
imul
clc
lcall
inc
sub
stos
mov
cmp
pop
push
data16
and
sbb
cmp
xor
mov
dec
push
add
mov
mov
idivb
push
or
mov
inc
je
out
pop
fcoms
loope
lcall
mov
xor
fsubl
pushf
push
mov
mov
adc
scas
ret
mov
inc
mov
mov
dec
or
data16
sbb
fcompl
jne
scas
js
pop
stc
icebp
and
adc
dec
push
inc
push
xchg
in
jecxz
cmp
inc
xchg
loopne
xchg
sbb
cmp
nop
adc
xor
xor
inc
or
js
ret
sbb
xchg
stc
mov
out
push
test
jne
and
cli
addr16
fisubs
mov
lret
sub
loope
inc
push
pushf
clc
push
cmp
inc
inc
lret
rcrl
dec
fcompl
stc
cmp
dec
out
rclb
bound
inc
inc
dec
jbe
xchg
es
in
inc
dec
xor
sbb
ret
sbb
mov
mov
push
in
jbe
test
dec
xor
mov
and
repnz
aaa
popf
dec
outsl
out
pop
inc
icebp
enter
dec
xor
pusha
dec
mov
mov
aas
jl
xchg
mov
adc
aam
mov
inc
loop
dec
mov
pop
pop
pushf
leave
sub
shrl
jge
adc
cmp
dec
pushf
push
ret
rolb
jg,pn
inc
lods
pop
subl
cmp
push
lea
pop
sbb
jns
mov
mov
rcrl
push
mov
mov
xor
aaa
cltd
jbe
xor
and
ss
mov
fstl
inc
jl
pushf
cld
push
mov
inc
insl
push
pushf
imul
mov
jl
inc
les
cmp
inc
pusha
and
adc
xor
in
arpl
bound
pop
in
sbb
pop
adc
loopne
cmp
cmpsb
cmpl
std
mov
fsubs
sar
xchg
into
pop
movsl
lods
cmp
out
insl
scas
jge
mov
jo
mov
pop
mov
cli
pusha
inc
arpl
aam
in
loopne
mov
sbb
push
in
lock
sbb
mov
orb
mov
dec
cltd
sbb
or
mov
sbb
bnd
sub
in
addr16
or
or
and
xor
pop
add
inc
arpl
dec
pushf
mov
das
mov
ja
xor
call
fiadds
sbb
xchg
jns
rcrb
dec
enter
dec
mov
repz
xchg
pop
testl
mov
xchg
sub
xor
and
pop
and
les
push
loope
sahf
test
stos
lea
insl
pop
repz
inc
in
mov
inc
mov
icebp
test
push
or
dec
lock
int
ficompl
int3
push
leave
sub
popa
mov
sub
sub
test
mov
cltd
dec
repz
inc
data16
popf
aas
mov
aas
and
cltd
mov
sbb
clc
push
insb
and
and
and
lahf
scas
jl
mov
add
ret
lea
mov
loopne
inc
dec
gs
enter
rcl
sbb
sub
hlt
test
jne
lret
xchg
sbb
test
dec
imul
pop
xor
arpl
in
jmp
lods
loope
addr16
sbb
push
add
mov
xchg
push
jge
test
xor
cltd
jbe
lahf
imul
mov
xor
ret
icebp
xchg
jp
jmp
inc
mov
clc
sub
xor
out
mov
cmp
push
fsubrs
dec
pop
xchg
mov
push
mov
and
in
call
xchg
in
mov
arpl
dec
mov
popa
repz
sbb
dec
mov
dec
add
inc
xor
incl
lods
aas
sbb
lahf
outsl
fs
push
sub
shll
jno
nop
out
mov
xor
mov
push
inc
inc
xchg
mov
push
xorl
mov
adc
loop
xor
sbb
mov
lods
hlt
ljmp
mov
dec
enter
adc
loop
xor
add
lret
inc
rorl
dec
addb
shll
mov
dec
jne,pn
movsl
mov
les
std
inc
ret
adc
call
popf
add
pop
push
cwtl
jne
repnz
sub
shll
stos
add
pop
pop
xchg
pop
lret
inc
cmc
cmp
jo
adc
lea
jbe
icebp
mov
and
push
mov
sbb
xchg
jecxz
sahf
das
or
jmp
lods
js
daa
je
lods
push
cmp
mov
mov
std
and
adc
pop
xor
stos
fst
mov
xchg
mov
jle
mov
inc
push
jmp
adc
out
mov
xor
movsl
cltd
lock
jmp
ss
mov
inc
mov
jecxz
jle
cmpsl
int
icebp
call
mov
movsb
lcall
lods
xor
insb
fisttps
stc
loop
xchg
push
pop
and
cmp
lcall
add
mov
ss
sub
push
push
lcall
push
jecxz
inc
movsl
push
scas
test
imul
jbe
dec
mov
dec
add
movsb
sub
xchg
inc
les
mov
push
jecxz
cwtl
cmpsb
xchg
test
repz
xor
ret
aaa
xchg
sti
xchg
stos
loop
xor
mov
dec
cmp
pop
mov
cmp
sub
ja
insb
dec
push
mov
mov
fcmove
push
xor
add
or
xchg
adc
popa
adc
sti
jbe
loope
insb
adc
or
rcll
cmpsb
lahf
and
out
inc
aas
xchg
aad
cmp
mov
dec
push
inc
ljmp
test
pop
adc
in
fimull
sub
xchg
iret
into
test
out
mov
push
jne
pop
jae
add
not
inc
ja
xor
mov
mov
jg
sahf
pop
iret
xchg
mov
cs
ret
data16
cmp
arpl
or
popa
adc
push
inc
les
xlat
cmp
sbb
jl
and
mov
mov
push
idiv
outsl
pop
push
dec
jnp
cmp
sbb
jecxz
cmpsb
xor
movsl
fcompl
mov
pop
pop
lock
mov
addr16
loope
push
xchg
cmp
scas
xor
cmp
addl
push
lea
mov
icebp
xchg
imul
out
nop
jnp
ss
faddl
fistpl
ds
enter
sbb
jg
pop
xlat
jle
ljmp
cli
inc
clc
andl
in
pop
iret
rcll
mov
and
cmp
lahf
mov
mov
inc
mov
xchg
jg
in
stc
mov
adc
lcall
push
jbe
cmp
add
jns
out
scas
jecxz
push
jp
inc
fmul
or
stos
loope
loopne
jecxz
push
mov
in
xor
add
hlt
pop
roll
pop
or
test
sub
js
jne
jge
adc
rcll
push
hlt
pop
pushl
cmp
xchg
pop
xchg
or
and
outsl
mov
jnp
adc
or
int
dec
add
and
sbb
inc
add
adc
sbb
push
daa
fsubrs
mov
pop
xchg
cmp
adc
push
popa
movsb
cli
sub
mov
sbb
jbe
sub
inc
cmp
or
lods
mov
cld
repnz
ja
out
push
pop
or
push
out
daa
mov
or
jp
enter
in
outsb
mov
inc
shl
aad
out
out
arpl
pop
xchg
fnstenv
jns
inc
jbe
pushf
adc
addb
sahf
shrb
fistl
xchg
cld
adc
jg
cmpsl
pop
test
pop
cmp
push
lods
iret
mov
jg
xor
sbb
xchg
int
mov
mov
out
mov
xchg
cmc
sbbb
push
xlat
sub
fs
daa
out
into
sahf
imul
movsl
mov
jno
data16
mov
jnp
mov
cmpb
loope
popf
les
cld
and
sbb
je
loop
mov
outsb
cmc
lds
jle
jae
lds
ds
popa
jg
push
add
lahf
test
sbb
aad
pop
pop
adc
sti
scas
sub
cltd
int
ret
xor
stos
cmc
pop
jl
int3
shll
jo
addr16
push
push
add
sbb
rcrl
jb
pop
lcall
adcb
ja
mov
sub
fistpll
sbb
mov
pop
fiaddl
lcall
inc
les
inc
push
test
add
lret
cmc
ret
test
es
mov
or
mov
fwait
push
clc
xchg
inc
shrb
and
adc
xchg
rcl
jns
das
mov
add
outsl
arpl
push
sub
nop
lret
movsb
rorl
sub
or
or
out
xchg
je
sub
inc
mov
jmp
mov
jne
push
dec
sub
aad
jg
cmp
movsl
xchg
adc
jne
lahf
test
popf
les
shl
mov
loop
stos
and
out
test
mov
rcrb
ret
and
stos
rclb
mov
iret
jle
cmpb
sbb
data16
sarl
aaa
pop
mov
adc
sbb
jb
aaa
dec
and
mov
mov
and
cmp
bnd
es
fimull
mov
xor
fimuls
stos
repnz
add
sbb
sbb
filds
adc
mov
xchg
push
int
xchg
dec
leave
fdivl
lea
rclb
stc
shr
pop
call
jno
data16
rolb
fwait
or
int3
dec
fistl
bound
or
andb
repnz
std
xor
bound
mov
lods
data16
sbb
pop
leave
dec
push
mov
js
mov
xor
sti
pop
repz
xor
inc
cmc
dec
xchg
movsl
mov
imul
fists
insl
iret
cwtl
out
xor
es
popa
mov
lret
jae
mov
xchg
hlt
cmc
pop
xchg
sub
jmp
int
sar
xor
lret
out
fs
adc
inc
cs
dec
mov
or
cwtl
mov
mov
mov
repz
mov
fwait
lock
pushf
lahf
add
fcompl
rorl
xor
call
pop
cmpsl
cmp
es
mov
les
out
mov
pop
fs
icebp
int
pushf
mov
daa
cmp
rcrb
imul
push
push
mov
outsb
aad
out
subb
cwtl
cmp
mov
lea
daa
js
lret
jb
movsb
mov
pop
inc
push
fs
push
adcb
sbb
rcl
xor
mov
xor
sarb
in
shlb
push
int
sub
add
mov
sub
lcall
stos
xor
aam
xor
mov
inc
fistpl
lock
mov
pop
and
filds
je
aas
jmp
mov
loope
mov
jmp
pop
mov
push
jo
les
xchg
jns
lea
jge
pushf
cld
mov
sub
enter
data16
and
in
jbe
popf
call
xchg
lock
cmp
cmpsl
pop
mov
adc
outsl
cwtl
movsb
pushf
daa
cmp
adc
and
scas
out
add
mov
fwait
inc
fstpl
adc
push
mov
dec
xchg
jmp
push
dec
sti
mov
pop
inc
sbb
mov
ss
mov
push
shl
xor
push
pop
ret
xor
hlt
add
sub
hlt
xor
out
rclb
rol
add
dec
adc
iret
in
cmp
inc
pop
out
mov
xor
adc
xchg
adc
popf
leave
cmp
dec
js
sbb
cmpb
out
mov
outsl
lock
or
cmp
cli
inc
ss
or
mov
dec
test
mov
lcall
gs
push
movsl
pusha
aaa
in
repnz
xchg
adc
jne
adc
ret
pop
aaa
mov
in
pop
and
imul
adc
jae
jo
rorb
pushf
adc
xchg
mov
dec
and
or
adc
sti
jmp
adc
ss
or
stos
and
scas
call
pop
pop
outsl
push
jge
jg
femms
and
inc
mov
fisubrl
test
jge
and
inc
xchg
jns
ljmp
in
xor
pop
mov
jae
mov
lcall
mov
testb
sarb
cmp
mov
int3
push
pushf
xchg
inc
test
nop
mov
xlat
test
scas
cmpl
sbb
add
iret
xor
sbb
mov
pop
fsub
and
in
sub
aas
mov
pop
dec
fdivrs
out
ljmp
jge
mov
sahf
into
xor
lds
xchg
cmpsl
mov
mov
mov
int
sub
pop
neg
adc
cmpsb
sbb
test
cli
mov
testb
cs
and
or
fnstcw
mov
insl
cmp
dec
push
pushl
loope
lret
dec
dec
xor
sbb
mov
xor
cmp
xchg
into
mov
cmp
xor
jo
sbb
mov
inc
aam
scas
jmp
mov
loop
mov
sbb
icebp
fcomi
out
mov
cmp
ror
pop
push
dec
ud2
pushl
or
pop
cltd
xor
lret
and
imul
mov
inc
mov
mov
mov
dec
xchg
jno
lds
rol
push
sbb
adc
mov
xor
push
mov
in
add
fcmove
mov
pop
out
pop
mov
leave
mov
in
jmp
pop
sbb
or
push
cmpl
bound
in
mov
or
lea
scas
add
lahf
clc
sbb
sub
jp
sub
stc
push
mov
push
shrl
push
mov
mov
nop
sub
jecxz
or
loop
cltd
aaa
fiaddl
lods
cwtl
das
aad
insb
popa
xchg
adc
mov
xchg
mov
add
stos
dec
or
std
in
mov
xor
dec
ja
outsl
lock
cltd
xchg
out
mov
test
xorb
outsl
test
fsub
shlb
out
cmp
in
mov
pop
push
fstl
cmp
pop
cmp
adc
sti
mov
pop
outsb
mov
pop
pusha
rorb
ljmp
push
int3
sbb
nop
mov
fists
xchg
in
mov
jp
cld
lea
out
pop
dec
sbb
fcoms
mov
scas
adc
jb
ficomps
repz
aad
mov
fsubrl
and
add
jle
shll
aas
cmp
add
adc
sbb
xchg
negl
xor
add
clc
rcll
add
adc
movsb
cli
pushf
rol
lods
repz
dec
xchg
cmc
and
repz
xchg
dec
mov
aas
ja
test
cmp
negb
mov
inc
and
dec
shlb
add
inc
push
or
add
rol
jae
jecxz
sar
add
imul
scas
mov
loopne
movl
sbbb
jmp
pop
aam
jne
jns
aad
dec
adc
pop
pop
mov
dec
dec
push
in
mov
fcomps
fwait
mov
inc
hlt
and
fs
insl
iret
sub
adc
ljmp
lds
xchg
push
push
add
mov
test
sub
arpl
push
push
fchs
add
mov
jecxz
pop
cmc
xor
out
hlt
mov
dec
test
aam
stc
dec
addr16
sub
adc
or
pop
jb
pushf
xchg
mov
cmpsl
push
xchg
aad
jno
and
rol
rolb
mov
loop
fcoms
dec
in
adc
or
cld
push
jp
lret
arpl
and
dec
scas
jecxz
sti
and
aaa
sahf
subl
daa
jge
mov
mov
mov
sbb
cmp
mov
mov
pop
cwtl
fildll
add
test
add
lock
aas
insl
pop
push
aad
cmpsb
pop
pop
add
jb
pop
inc
push
mov
aam
aam
arpl
xchg
popa
ret
lret
clc
or
ss
das
xor
add
imul
cld
leave
leave
gs
and
cmp
lcall
jb
cs
sbb
jbe
sbb
or
lahf
stc
sahf
dec
orl
cltd
popa
dec
sbb
fs
outsb
stc
mov
jnp
push
xchg
in
jmp
pop
cmpsl
mov
pusha
mov
jmp
jmp
sub
rcrl
xchg
and
cmp
rorb
sub
addr16
xchg
and
popa
and
out
lret
rorb
je
ss
sub
out
testl
movsl
add
mov
dec
sub
loope
insl
jno
mov
sahf
popf
mov
mov
rcrb
clc
rol
jbe
movsl
sbb
add
repz
jmp
aaa
data16
mov
sub
cltd
cmp
ds
stc
enter
jp
dec
push
lret
sub
jmp
adc
or
icebp
lret
in
push
sub
insl
or
sub
xchg
inc
frstor
lcall
or
insb
clc
inc
dec
inc
push
jmp
inc
fmuls
sbb
inc
gs
scas
cmc
or
sub
cmp
xor
pop
lods
insb
push
push
stos
dec
jecxz
out
pop
insl
scas
stos
and
test
std
rolb
or
movsl
js
sti
out
in
sub
divl
ljmp
mov
inc
adc
lea
ret
mov
es
popa
jl,pn
mov
xchg
pop
sbbl
ljmp
push
mov
incl
fbstp
aas
adc
shrb
fs
loopne
xor
popa
mov
push
mov
popa
insb
push
push
cmp
jg
push
shll
pop
pop
mov
add
out
add
inc
iret
iret
in
inc
mov
adc
divl
xor
mov
pop
in
inc
adc
push
xor
jnp
insl
icebp
add
xchg
pusha
shrb
sbb
add
mov
add
xchg
test
mov
cmp
nop
lods
rcr
mov
xor
xor
inc
inc
and
jbe
mov
sbb
ret
push
add
repz
mov
xor
mov
clc
insl
sub
iret
sbb
popa
aam
ds
pop
inc
stos
fldenv
lcall
sub
scas
pop
lahf
inc
idiv
ret
test
jle
mov
jno
lcall
test
mov
or
mov
jb
cmp
pop
jne
mov
rcrb
dec
lret
push
data16
test
push
cmpsb
incl
popf
inc
pop
and
icebp
mov
test
testb
lock
xor
push
sbb
dec
and
xor
js
dec
mov
sbb
dec
jne
fnstenv
add
iret
xlat
lock
dec
mov
jno
cmpsl
jns
pop
dec
jb
das
fisttps
popf
pop
std
sbb
mov
xor
jg
fcomps
fistps
and
mov
in
add
mov
ja
pop
fdivr
cmc
ja
sub
enter
fisubrs
fs
in
lods
nop
stos
imul
in
test
js
add
sub
fisubrl
repz
nop
adc
out
add
push
pop
dec
fiaddl
or
or
jle
sub
ja
popa
mov
subl
jbe
mov
dec
add
mov
fbld
or
ljmp
rcll
dec
mov
dec
xor
shlb
add
sub
cld
shll
popa
or
mov
push
stos
fsubrs
xchg
addr16
fisttps
bound
jbe
mov
aad
js
pop
mov
push
aaa
stc
cs
lods
mov
add
test
mov
xor
stos
lcall
in
stos
xor
popf
roll
sub
bswap
loope
dec
mov
les
mov
sbb
fistps
sbb
enter
pop
hlt
dec
lock
dec
push
shlb
fisttpl
pop
insl
xor
adc
out
insl
pusha
adc
cmp
mov
jge
ret
push
inc
mov
and
xor
pop
es
pop
or
orb
int3
or
cmp
aam
push
mov
sub
xlat
push
mov
std
mov
call
or
sbb
int
and
dec
push
int
cli
icebp
push
insb
xchg
sub
pop
mov
pop
and
out
sub
lahf
aas
add
or
in
and
and
mov
jg
fidivrl
cmc
mov
push
loope
notl
scas
enter
jne
jae
jmp
xlat
test
sub
incb
jne
push
stos
out
jmp
xchg
cmp
dec
lods
or
pop
inc
popf
mov
mov
loopne
xor
pop
pop
inc
and
cmp
scas
sbb
fsubl
cmc
daa
outsl
nop
out
mov
pop
jge
fimuls
out
mov
or
movb
push
nop
outsl
mov
add
outsb
or
in
adc
pushf
ss
mov
repz
push
jae
cmp
movsl
pop
xchg
addr16
inc
cmp
jp
lcall
jmp
inc
or
dec
popa
out
cwtl
into
add
in
or
stos
enter
imul
iret
sti
add
push
scas
lahf
ljmp
lahf
cli
sahf
int
leave
inc
pop
flds
sub
pop
test
cmpsl
in
cmp
out
movsb
sbb
dec
add
addr16
jg
out
add
dec
mov
dec
sbb
ret
je
push
sub
jae
mov
cmp
cld
mov
sbb
fs
sub
and
sarl
jp
lds
imul
push
movsb
scas
push
mov
sub
sub
jbe
faddl
sahf
iret
shrb
sub
adc
push
adc
aad
fsincos
xchg
dec
xor
mov
add
lods
mov
push
in
pop
pop
imul
sub
mov
cld
sbb
push
aam
push
push
xchg
push
add
jbe
sbb
mov
fcoml
in
das
inc
sub
and
in
push
loop
das
mov
addb
cmp
loop
mov
mov
xlat
xor
shr
outsb
loop
fwait
es
lcall
ret
push
add
mov
scas
mov
scas
mov
popf
xchg
adc
ljmp
push
mov
mov
les
imul
inc
mov
mov
add
int
mov
pop
sub
mov
push
push
mov
loopne
sbb
jmp
fsubs
orl
jl
arpl
mov
pop
mov
pop
mov
adc
call
xor
icebp
aam
pushf
rcll
adc
jge
pop
xor
lds
dec
shrb
xor
sbb
nop
inc
mov
sbb
xchg
cmp
icebp
loop
scas
ret
sbb
mov
rcl
sar
icebp
adc
xorb
jnp
fiadds
icebp
lds
jmp
aaa
lds
xor
adc
pusha
or
fsubrp
iret
inc
into
fidivrs
repz
dec
fidivrl
xor
ljmp
or
jns
ret
jp
mov
js
pop
ja
mov
outsb
pop
add
ss
data16
scas
mov
enter
add
mov
mov
jno
mov
mov
daa
sub
ljmp
enter
mov
push
mov
jno
push
and
fcoml
pop
push
dec
out
shlb
inc
and
mov
sti
arpl
in
aas
lea
rcll
mov
push
mov
mov
ja
out
xchg
lods
cmp
sub
fildl
and
sbb
orb
sbb
xchg
cmp
push
aas
je
sbb
mov
out
push
mov
lret
popa
mov
jecxz
cs
cs
ljmp
inc
jbe
pop
and
out
cmp
sarl
sub
test
leave
mov
adc
call
clc
gs
xchg
test
sub
cmp
shr
loopne
sub
sbb
ret
mov
bound
or
mov
sub
push
ja
das
sbb
leave
jne
in
mov
in
xor
negl
mov
stos
jl
xchg
in
call
push
jb
xor
ret
cmpsb
bound
dec
mov
into
jmp
adc
dec
push
sbb
and
shrl
daa
xor
xlat
idivb
push
xchg
insl
out
addb
sarl
dec
sub
push
decl
ret
pop
adc
push
and
decl
adc
sbb
pop
fdivs
jmp
sub
lea
push
jg
cmp
xchg
push
sub
fsubrp
xlat
jnp
rcl
mov
xor
add
lea
mov
fidivs
pop
and
scas
xlat
sbb
push
test
jae
fimuls
or
mov
dec
push
xchg
pop
imul
fimull
sti
mov
rclb
xchg
push
test
ljmp
dec
push
dec
push
pushf
loopw
hlt
pop
sub
nop
fldcw
loopne
jl,pt
sbb
aad
or
in
push
mov
js
gs
xor
pop
lret
test
test
cwtl
test
out
sbb
fcmovnu
sub
lcall
or
pextrw
aas
imul
hlt
sbb
sbb
xor
jmp
jne
cmp
xchg
hlt
xchg
mov
pop
in
push
jbe
mull
int3
mov
cmp
sti
mov
pop
jns
icebp
or
loope
int3
in
sub
inc
push
mov
lods
push
inc
test
pop
mov
movsl
or
add
xchg
add
mov
fstpl
pop
adc
sbb
xchg
inc
std
dec
mov
outsl
jecxz
push
imull
xor
fisubrl
add
out
push
or
or
dec
movl
mov
enter
mov
lret
sbb
stos
adc
into
scas
sbb
addr16
lret
adc
push
push
cmp
cmpsl
jp
test
rep
popf
adc
mov
mov
loope
mov
cmp
adcl
pop
das
aaa
sbb
repz
and
mov
xchg
fcmovu
sbb
mov
lret
mov
pop
inc
leave
pusha
jnp
and
pop
add
jae
repnz
fnstenv
mov
cmp
sub
jbe
gs
jno
jge
jmp
shlb
sbb
stos
xchg
stos
push
out
fbld
xchg
jmp
adc
test
aaa
insb
xorl
mov
loopne
arpl
push
pop
ret
iret
pop
push
inc
in
mov
cmp
and
subl
std
addb
rcl
dec
orb
fldenv
dec
icebp
cmp
icebp
pop
aaa
bound
andb
lret
outsl
sti
dec
out
cwtl
ds
shlb
inc
inc
push
data16
jae
pop
pop
mov
or
or
sbb
push
and
fstpt
pusha
cmp
sti
popf
dec
add
inc
or
les
push
repz
dec
aad
popa
cmp
xor
mov
xor
repnz
out
mov
pop
add
lcall
dec
sub
clc
cs
test
push
fcomps
jb
popf
pop
in
sbb
pop
or
outsl
inc
dec
in
aas
sbb
sbb
mov
sub
and
jmp
push
fucom
xor
test
or
rcr
or
xchg
loope
jmp
fs
mov
sub
mov
shrl
mov
aaa
mov
in
push
sub
aas
xchg
mov
sahf
mov
adc
mov
jbe
or
test
nop
sarb
mov
mov
pop
or
das
sub
rol
xchg
adc
mov
xchg
lret
adc
fwait
pop
ljmp
sub
rep
cmpl
xchg
and
mov
out
mov
bound
fidivs
aas
xchg
stos
cli
sbb
test
les
mov
cli
push
dec
pop
scas
dec
mov
mov
mov
or
jmp
push
scas
movsb
enter
out
inc
or
dec
mov
dec
je
cmp
scas
pop
mov
inc
mov
adc
cmp
incw
mov
dec
lret
into
lea
or
shrl
cmpsl
fisubrs
and
or
cmp
ljmp
test
sub
aaa
out
sub
aaa
sub
cli
add
ret
mov
test
push
pusha
push
dec
mov
shlb
inc
ret
dec
movsb
ds
stos
inc
out
repnz
fwait
add
xchg
mov
popf
sbb
popf
dec
jno
xchg
xchg
outsl
pushf
cli
sub
push
stc
lcall
out
les
xchg
mov
mov
lret
js
pop
mov
repnz
mov
sub
push
fnop
es
mov
scas
or
popa
ds
cwtl
mov
mov
in
inc
pop
push
aas
and
mov
and
movb
cmc
cmc
lret
push
pop
or
pop
inc
xchg
push
or
mov
movb
push
mov
popf
imul
out
sub
mov
sar
clc
pusha
lods
in
iret
mov
mov
pushl
ljmp
cmp
mov
out
ss
add
ficomps
adc
addr16
jp
in
jg
cmp
mov
out
push
int3
pop
pop
mov
shrl
call
jae
stos
inc
rcrl
lock
jl
aad
mov
aam
inc
hlt
aas
lret
cwtl
or
sbb
scas
push
push
jae
aam
adc
popf
inc
insb
vpminub
pop
aaa
adc
ljmp
pusha
scas
scas
aas
or
pop
mov
push
pop
mov
sub
cli
sahf
aam
insl
mov
imul
push
sub
ficoml
mov
push
inc
sbb
lret
aad
gs
mov
jo
push
insb
or
push
or
test
cmpl
push
fmul
add
jb
movsl
in
test
lods
negb
addr16
testl
jae
test
stos
mov
and
jmp
cld
or
popl
fists
clc
loope
mov
lahf
xlat
aaa
fdivrl
mov
rcll
cmpsl
or
testl
aad
cmp
jmp
in
in
sub
dec
dec
pusha
cmpsl
push
adc
sub
xor
cmp
sub
popa
lods
daa
add
sysexit
jne
mov
or
jecxz
fdivl
inc
shlb
dec
adc
cs
js
mov
mov
and
and
xchg
lods
push
pop
jge
mov
xchg
outsb
gs
sti
js
arpl
jno
pop
sbb
pop
jg
lret
rolb
add
cmpsl
cltd
sbb
cmp
or
repnz
push
in
sbb
pop
jmp
popf
adcb
jo
sti
clc
inc
mov
push
pop
sbb
scas
cld
sbb
cmp
in
dec
sub
pop
inc
fistpl
gs
mov
scas
jmp
push
xchg
xlat
loop
push
mov
lret
mov
lahf
jbe
inc
push
sahf
mov
sbb
cld
and
je
mov
cmp
rorb
sbb
pushf
fimull
out
xchg
and
ss
add
mov
movsl
mov
out
cld
mov
inc
je
dec
push
cmp
jne
xor
leave
out
les
test
jl
inc
sub
mov
inc
imul
sbb
push
sub
mov
or
or
lods
outsl
xchg
and
jg
divb
mov
jno
orb
insl
movsl
jb
hlt
orb
in
inc
and
mov
inc
jbe
dec
cmp
ss
push
pop
mov
cmpsl
push
fs
out
jns
hlt
icebp
pop
fsub
xor
stos
sub
xor
xchg
cmc
or
sbb
adc
out
adc
mov
outsb
fcompl
xlat
rol
push
lahf
jo
aaa
pop
neg
stos
lret
test
inc
das
mov
fnstsw
mov
outsl
cwtl
xchg
cmp
lods
sar
cmp
outsl
stos
or
call
lods
jmp
sub
rcr
out
aam
push
lds
ss
inc
mov
movsl
mov
jo
pop
loopne
subb
mov
ret
jns
scas
jg
jmp
xchg
lea
psubq
inc
ljmp
js
push
lret
adc
ljmp
cmp
imul
push
lods
xor
stc
mov
push
mov
cmp
mov
aas
into
lds
stc
pop
icebp
add
push
inc
inc
sbb
inc
daa
outsl
test
in
mov
cmp
xchg
or
jmp
daa
clc
add
orb
inc
fs
icebp
or
lods
xchg
std
jb
sbb
rorl
xor
je
std
push
push
movsl
iret
xchg
add
push
rclb
jnp
mov
mov
js
int3
mov
mov
jae
push
std
cmp
sbb
sbb
outsb
outsl
in
jl
sbb
or
scas
jnp
push
jle
insl
jae
sub
mov
cmp
and
jae
lea
pop
mov
mul
js
lds
cmp
scas
je
gs
xor
jecxz
and
or
ret
cmp
jge
push
inc
in
in
dec
sub
mov
outsl
xor
push
cmpb
mov
pushf
aam
mov
and
ret
fdivl
jecxz
testl
jp
mov
jle
pcmpgtw
dec
scas
sub
pop
xchg
sbb
lret
lahf
mov
dec
sub
pushf
mov
divl
xor
les
lock
ljmp
adc
sub
push
and
cmp
ds
roll
xor
aad
push
lahf
add
jl
das
mov
adc
cmp
repnz
sub
mov
cmp
inc
jge
ret
inc
mov
ds
and
pusha
aaa
xor
fsubrs
jns
in
dec
or
shl
inc
add
dec
push
or
data16
mov
add
adc
sbb
inc
js
mov
mov
jge
ret
stc
rcl
add
push
sub
lock
mov
mov
cmp
scas
xchg
pop
xchg
or
lret
and
aam
xor
movsl
xchg
addr16
dec
push
cmpsl
or
xor
mov
fadd
pop
stos
leave
sbb
jo
and
popa
js
pmaddwd
addr16
jmp
dec
insl
xor
adc
ds
xlat
pop
daa
mov
push
ss
push
cmp
mov
mov
ficoml
out
xchg
push
cli
jnp
popf
pop
jno
sub
sbb
bound
mov
dec
or
outsl
or
in
pop
or
int3
push
cld
add
mov
lgs
and
mov
and
cmp
cmp
jp
cmp
adc
loopne
aad
loopne
mov
inc
push
cmp
mov
in
cs
mov
and
js
xor
adcl
lret
rcl
cltd
movsb
fisttpll
out
cmpsb
jp
lock
add
mov
icebp
and
jge
shll
xor
mov
cmp
mov
cli
dec
ds
or
mov
pop
sahf
in
arpl
jl
in
jle
xchg
daa
mov
adcl
xlat
mov
repnz
push
mov
mov
mov
and
pop
es
mov
les
lock
ljmp
xor
sub
add
pop
push
movb
out
jmp
in
cmp
xchg
sub
outsb
mov
xchg
mov
movsl
mov
es
shlb
pop
and
jae
inc
loop
es
les
xor
xchg
iret
daa
loope
jmp
imul
test
int
push
shrb
jl
cmpsb
in
cltd
or
mulb
sar
adc
jmp
decl
pop
cli
mov
cmc
and
movsl
test
mov
out
std
stc
pop
jo
stc
pop
or
loop
dec
xor
add
test
leave
sbb
dec
mov
out
out
pop
mov
pop
push
test
gs
dec
mov
adc
mov
js
inc
enter
je
lret
fldt
sub
ds
cmp
push
ljmp
in
or
adc
cmpsl
leave
jle
fucomi
jno
jmp
jecxz
mov
mov
int
imul
mov
push
or
inc
push
ret
into
adc
cmpsb
inc
clc
xor
pop
inc
dec
fs
lahf
xlat
js
mov
and
lods
xchg
cmp
push
pop
ds
sub
cs
jecxz
and
sbb
adc
inc
iret
xchg
jnp
inc
test
hlt
sub
or
inc
push
dec
mov
pop
aam
rcl
jo
lods
and
js
xchg
add
pushl
in
dec
pop
xchg
mov
loop
rclb
mov
cmp
mov
cmp
sti
inc
mov
dec
out
pop
mov
scas
or
mov
and
repz
lds
sar
push
jl
std
mov
add
pop
fisttps
hlt
xlat
cs
sub
rorl
sub
cmp
lods
test
mov
in
dec
or
dec
and
imulb
das
dec
std
mov
pop
in
call
data16
fildl
pop
push
stc
cmp
pop
std
and
add
repnz
in
dec
in
cmp
jg
int
sbb
repnz
lahf
sub
inc
andb
testl
push
jo
int3
mov
lock
mov
out
adc
add
xchg
sbb
adc
pusha
pop
dec
shll
jl
ljmp
cwtl
or
pop
xor
xchg
jo
xchg
int3
xor
sarb
jb
pop
movsb
outsb
adcb
stos
stc
dec
mov
pushf
sub
mov
es
fsubrs
inc
outsl
lock
rolb
je
cmc
and
cmp
fidivrl
jo
sub
dec
jns
push
sti
sub
xchg
sub
push
mov
xchg
or
or
aad
sti
push
bound
push
das
xor
fwait
stc
jbe
sbb
data16
es
mov
mov
pop
lret
fwait
cwtl
mov
push
pop
sarb
xchg
mov
jge
mov
stos
test
pop
popf
pop
sarb
mov
sahf
movsb
das
mov
fmul
jne
inc
inc
fcomi
mov
orb
mov
jno
mov
jno
insb
fs
mov
mov
mov
aaa
out
push
add
push
lods
sub
or
xchg
lds
sbb
je
jge
les
mov
and
gs
jns
sti
pop
outsl
sbb
outsb
cmp
in
jb
or
clc
jae
fisttpl
out
xor
mov
scas
jbe
dec
xchg
xor
mov
test
add
cs
cltd
mov
inc
cmpsb
jnp
sub
push
mov
jg
mov
iret
cltd
call
inc
outsl
out
fwait
push
out
loop
rorl
iret
cli
mov
scas
jecxz
xchg
enter
fwait
sbb
aas
lahf
int
int
movsb
leave
js
xorps
stos
xchg
pop
fs
push
inc
repz
mov
in
lock
jns
outsl
test
sub
xchg
lods
or
repnz
xchg
mov
cbtw
not
mov
inc
popl
push
cltd
movsb
repnz
popa
sarl
lods
popf
ss
inc
lock
test
mov
pop
or
lods
jbe
mov
ret
dec
mov
sbb
cmp
arpl
in
mov
xlat
or
mov
dec
add
cld
sti
shrl
in
pop
inc
dec
shrl
sbbb
or
sahf
testl
in
xor
xchg
jl
and
mov
cld
sub
push
pop
outsl
stos
add
inc
or
or
int
fnstcw
pop
adc
add
test
mov
stc
jg
push
lods
dec
and
xor
mov
int3
push
ds
or
xchg
mov
dec
push
shrl
les
es
adc
movsl
dec
daa
arpl
jge
jmp
jle
sbb
or
mov
lea
mov
adc
test
or
rclb
insb
imul
dec
xor
push
popf
mov
es
jp
jbe
fisubrs
in
cmp
cmpsl
jae
xor
bt
std
mov
ret
incl
sarb
mov
jbe
addr16
xchg
sti
fs
inc
add
add
nop
out
daa
or
sbb
adc
push
pop
ljmp
cmp
lods
rolb
subb
fidivrs
aam
aas
aam
cmp
sbb
imul
movsl
sub
loop
pop
rcrl
sub
mulb
xchg
sbb
clc
sub
in
add
and
jle
aad
fdivrl
lcall
mov
push
arpl
nop
cwtl
addr16
sbb
rorl
inc
mov
cli
adc
es
mov
push
clc
inc
test
outsl
jle
nop
mov
imul
add
or
and
insb
adc
fisubrs
fbld
cmpsb
push
jg
popa
jl
mov
push
loopne
or
inc
push
jmp
fwait
add
shlb
pop
push
fisubs
jae
addr16
stos
mov
stos
pusha
pop
cmpl
and
jmp
int3
push
repnz
mov
adc
aas
testl
int
inc
call
mov
push
xor
frstor
add
mov
mov
xor
fildll
adc
aaa
stos
aas
mov
andl
in
inc
ret
imul
data16
mov
or
in
int3
idiv
and
arpl
jp
xchg
iret
dec
jle
outsl
fistps
test
pop
sub
mov
call
enter
cmc
dec
jns
aad
ja
les
cmp
movsb
push
rorl
sub
adc
ftst
inc
lods
xchg
cmp
icebp
js
and
push
mov
testb
sbb
xor
xchg
aas
add
cmp
inc
pushf
push
push
out
std
test
stos
shrl
loop
mov
fnstcw
xor
pop
push
add
cmp
or
clc
sarl
imul
sbb
mov
ja
push
mov
enter
mov
inc
into
cld
sbb
jns
dec
rol
out
mov
stc
int3
lods
jge
repz
cmp
dec
sbb
jbe
pop
pop
lods
xor
lea
xor
and
sbb
aam
outsl
adc
sub
repz
jno
mov
rcll
rcr
cmp
xchg
mov
cld
xchg
insb
jns
dec
sarl
pop
test
lret
std
mov
decb
iret
xor
lcall
sahf
enter
movsb
cmp
pop
add
ja
je
inc
cmp
ret
pop
jns
loop
dec
mov
xor
xchg
je
lret
sbbb
loope
sbbl
push
or
into
sarb
push
ret
mov
push
pop
mov
pop
push
mov
inc
jae
dec
pop
inc
jmp
sub
mov
xor
shlb
arpl
add
jle
adcb
mov
call
xorb
cld
ja
jg
adc
movsb
push
out
insl
jle
dec
jne
mov
mov
push
sahf
decl
rorb
int3
inc
repnz
das
inc
movsb
push
pop
mov
movsl
or
out
sub
push
cmp
sub
in
lods
negb
or
sbb
cmp
push
ret
jmp
bound
add
sbb
pop
sub
mov
or
xor
adc
je
hlt
xlat
mov
pop
fs
mov
xchg
jle
es
mov
jl
push
add
sbb
jg
les
and
dec
sub
mov
andb
mov
pop
jo
lds
push
pop
add
xchg
mov
jne
aaa
lret
out
or
rcll
inc
mov
inc
jae
pop
xor
xchg
imul
clc
xchg
cwtl
mov
xor
or
repz
test
mov
jmp
aad
stos
insb
mov
xchg
mov
push
addl
push
pop
into
outsb
jnp
ss
push
pop
cmpsb
pop
push
sub
outsl
dec
pop
clc
push
cmp
adc
fwait
or
sti
scas
data16
push
popa
xchg
mov
mov
xchg
pop
inc
push
push
mov
xor
sbb
cli
std
add
pop
in
sbb
decl
sbb
adc
dec
inc
sbb
scas
or
out
adc
lods
cwtl
dec
xor
xor
xor
movsb
dec
pop
lcall
fstl
pop
mov
sti
pop
dec
shr
adc
pop
fwait
xchg
lahf
mov
das
cltd
jns
outsb
fadd
movsl
mov
add
test
pop
sti
mov
mov
pop
fistps
andps
xor
mov
jae
push
push
cmpsb
cmpsl
test
loop
push
adc
mov
sbbb
negb
sbb
call
and
mov
and
mov
pusha
dec
ja
call
sti
adc
mov
sti
and
into
pop
imul
js
shl
repnz
call
dec
jnp
sbb
ret
scas
mov
pop
ret
cmpsl
xchg
xor
mov
rcpps
dec
test
in
pusha
insl
rolb
shrl
movsl
jp
or
popa
pop
or
int
in
xchg
sub
aaa
push
mov
out
lock
push
pop
dec
iret
xchg
inc
sti
mov
sbbb
sbb
xchg
out
cmc
test
jle
xor
jns
xlat
aam
rol
add
cmp
jae
lods
sbb
stos
aad
adc
imul
and
or
pop
inc
fimuls
clc
lcall
notl
int3
iret
sahf
negb
sub
fs
mov
jbe
mov
xchg
loop
iret
nop
push
jl
jno
mov
mov
in
mov
sub
add
enter
pusha
nop
iret
icebp
sub
cltd
fnsave
scas
push
enter
and
or
mov
pop
push
mov
test
jp
test
mov
mov
movq
data16
sub
pushf
cmc
loop
mov
jno
push
addr16
lods
inc
enter
into
ja
orl
leave
inc
xchg
mov
rcl
dec
cmp
das
inc
adc
std
cmpb
call
cwtl
mov
xchg
pop
jp
movsl
inc
xor
mov
lret
push
out
jae
repz
add
inc
imul
sub
dec
or
pop
popa
pop
movsb
jg
test
pusha
xor
push
sub
sub
xchg
pop
movsl
aas
fs
int3
or
data16
outsb
and
dec
xlat
notl
cmp
arpl
shll
jge
test
xchg
add
fistpl
iret
rcrl
mov
pop
lods
xchg
inc
cmp
inc
sub
clc
aam
rolb
sub
adc
xchg
std
inc
call
clts
ds
int
dec
ficomps
and
mov
cmc
or
ds
daa
into
and
fmull
sbb
mov
add
and
adc
ret
mov
and
shll
xchg
xchg
mov
fstps
adc
cwtl
jmp
in
fsubr
imul
inc
gs
call
test
cmpb
xchg
push
mov
mov
mov
fcompl
xlat
dec
or
in
lods
das
or
rcrl
mov
testl
dec
fisttpll
xchg
imul
addb
popf
insb
inc
mov
xlat
in
pop
ret
adc
and
push
into
pop
mov
sub
aaa
mov
rorb
lods
xchg
fildll
sbb
test
mov
icebp
lds
pop
cmp
sub
test
xchg
and
cmp
push
loop
shll
dec
add
sbb
imul
cmp
adc
add
jo
dec
mov
movl
sub
and
or
fdivs
xchg
out
leave
mov
test
inc
mov
sub
mov
aad
add
push
pcmpeqd
push
jle
inc
das
fs
fcomip
dec
cmp
xchg
jge
fwait
rdmsr
test
shll
fldt
mov
sbb
jge
cli
cmpsl
das
pop
and
daa
sti
icebp
push
sub
jp
insb
jle
xor
pop
mov
jne
adc
testb
pusha
orb
jp
mov
dec
lods
cwtl
das
sahf
test
xor
daa
dec
or
gs
test
cld
popa
cmp
mov
outsb
cmp
ds
push
outsb
inc
stos
adc
lock
daa
adc
stc
jnp
mov
out
bound
rolb
movsb
push
dec
pushw
rorl
cmp
popa
xor
sub
pusha
lcall
jb
xchg
pushf
in
jne
lret
jo
add
out
sbbl
mov
add
and
or
mov
dec
push
jo
inc
push
in
je
push
adc
orl
lock
mov
shll
pushf
fildll
inc
xchg
pop
out
loop
adc
mov
std
push
mov
iret
stc
hlt
mov
fildll
mov
test
mov
lods
adc
mov
arpl
out
adc
pop
pop
sub
jb
das
daa
mov
sbbl
arpl
sti
mov
imul
xor
cmpb
and
int
icebp
aas
insl
mov
mov
sub
push
cmc
mov
lea
push
pop
lret
in
into
pop
pop
mov
cs
mov
bndstx
bnd
sti
add
pop
pop
ret
lahf
dec
test
pop
inc
cwtl
das
leave
stos
adc
add
pop
rcrl
shlb
imul
out
shl
mov
cmpsl
cld
xor
jmp
ret
out
inc
pmulhuw
jmp
outsl
mov
cli
aam
shr
or
out
leave
outsl
xor
das
das
and
and
cmp
ljmp
cwtl
or
pop
scas
mov
jl
jl
mov
in
mov
lret
cmp
fwait
loop
outsl
out
or
sub
mov
bound
leave
mov
push
jbe
and
sub
push
and
aas
stos
lcall
lea
arpl
sub
insb
mov
mov
push
into
dec
repnz
dec
xor
jae
sub
test
xchg
fs
sbb
push
push
data16
aad
or
popa
cmp
jbe
test
add
sbb
pop
das
cmp
jle
cmp
rclb
lret
stc
xor
fwait
mov
mov
xor
cmp
out
testl
cmp
es
inc
cpuid
movsb
or
sbb
mov
lock
dec
push
fstps
jmp
push
sbb
loopne
xor
mov
gs
dec
mov
xor
xchg
mov
inc
push
je
jae
push
icebp
push
mov
int
xchg
xor
sbbl
mov
cmp
xchg
js
or
out
jae
xchg
sub
out
fdivrs
ljmp
inc
gs
add
inc
out
or
into
pop
push
mov
push
or
mov
lods
imul
rol
sbb
push
mov
or
mov
fiaddl
sub
cmp
stc
and
mov
nop
out
nop
mov
inc
fmull
lds
pop
sub
xchg
pusha
in
xchg
add
pop
adc
cs
adc
outsl
mov
xchg
jecxz
xor
mov
mov
push
push
rcll
and
es
ljmp
mov
ja
sub
aaa
adc
pop
mov
inc
lods
add
imul
imul
pusha
adc
or
xor
sbb
movsb
dec
jae
mov
mov
jne
addr16
mov
xchg
mov
int3
stc
outsl
sub
fdivl
inc
std
lahf
pop
dec
mov
cmp
jmp
test
jecxz
jg
test
movsl
inc
test
push
lcall
in
sbb
push
in
aad
gs
fistpll
aas
jge
push
xor
push
icebp
and
cmpb
loopne
push
jae
pop
lret
and
xchg
xlat
jo
lahf
push
aad
adc
mov
or
pusha
inc
push
stc
cmp
lods
stos
stc
sub
jb
push
mov
es
ljmp
pop
sub
adc
jge
inc
pushf
fucomp
jecxz
repnz
sub
mov
js
or
jae
dec
stc
xchg
or
dec
mov
out
mov
mov
inc
popl
mov
mov
repnz
sahf
jecxz
cs
mov
bound
mov
cld
in
aaa
out
cltd
sbbl
mov
loop
test
cmc
mov
cli
inc
adc
push
mov
testb
ret
cmp
mov
xchg
xchg
rorb
and
jbe
dec
mov
lea
push
fs
xchg
cmc
mov
push
xor
jne
lods
cmp
pop
mov
daa
jge
push
idivl
jp
pop
das
cmpsl
fdivrl
test
scas
inc
in
sbb
sbb
arpl
insb
out
push
jns
pop
fsts
and
lret
pop
imul
js
loopne
sub
add
pop
incb
add
int3
pusha
leave
inc
scas
loop
pop
adc
sbbl
pusha
push
clflush
in
int
push
sbb
test
mov
stc
ret
push
aaa
push
int3
inc
rolb
cmp
cmp
mov
std
ret
cmpsl
xchg
inc
das
xor
mov
stos
xchg
jno
icebp
mov
sbb
dec
sub
cmp
stc
push
sbb
cmp
fiadds
or
in
lret
jecxz
push
xchg
mov
cmp
cmp
inc
sub
inc
fcom
in
jl
mov
jo
jns
loop
stos
mov
adc
std
nop
adc
jo
or
stos
into
dec
sbb
into
pusha
aaa
mov
cmpsl
scas
cmp
test
dec
adc
aad
mov
cli
dec
or
jno
icebp
lcall
mov
into
push
ffree
insl
jo
sbb
adc
cli
cmc
add
lock
aam
add
jno
repz
mov
adc
mov
add
in
sbb
sbb
jge
aas
out
pop
into
and
or
fwait
shll
pop
shrb
mov
in
in
movsl
stos
cmp
add
stos
cmp
mov
jge
cmp
lahf
lods
cmp
gs
fstl
mov
pusha
and
rorb
jns
sub
idiv
jne
out
sbb
cmp
gs
xor
inc
sbb
push
incb
cmp
and
mov
adc
adc
pop
ret
mov
jb
pop
jp
scas
pusha
imul
fnsave
pop
aas
jmp
imull
mov
es
in
out
mov
rorb
rclb
enter
sbb
sti
test
jmp
inc
out
adc
and
pushf
hlt
aad
call
push
mov
mov
popf
leave
lods
xor
mov
cmp
add
or
pop
xchg
sbb
lahf
addr16
fnstenv
in
pushf
pushl
mov
add
bound
lock
rcr
xor
cld
xchg
push
inc
mov
dec
fbld
cmp
fldcw
sbb
push
lock
nop
pop
pop
imul
in
cld
es
insl
ja
fdiv
xchg
je
adc
mov
mov
daa
clc
shlb
cli
repnz
adc
add
and
das
adc
add
daa
jle
dec
pushf
push
jbe
out
mov
adc
jno
mov
jae
pop
push
rcr
xchg
repnz
inc
or
arpl
push
cmp
mov
add
sub
mov
mov
inc
or
jle
mov
mov
push
or
test
xchg
inc
jecxz
lcall
add
add
std
jl
xchg
loopne
mov
inc
test
testb
fs
out
std
pop
push
jl
pushl
inc
adc
popa
popa
push
jl
mov
jne
dec
fisubl
add
call
andl
cmc
xchg
loope
mov
popa
daa
movsb
div
push
cmp
in
jle
lahf
mov
mov
sbb
stos
mov
in
or
out
pop
rorb
add
xchg
cmpsl
lcall
outsl
xchg
pop
fldt
pop
xchg
xlat
adc
pop
aad
mov
dec
dec
sub
push
stc
mov
mov
cmp
inc
pop
xchg
pop
ja
je
inc
aaa
fnstsw
scas
imul
int3
cmp
add
sbb
shlb
shrb
pop
scas
ret
or
jne
sbb
fistps
scas
dec
mov
and
aam
pop
negb
cld
sub
mov
or
and
adc
test
ret
addb
testb
pop
cmp
scas
mov
fwait
ss
mov
loope
inc
inc
push
in
dec
mov
inc
or
andl
push
mov
aas
lret
jmp
mov
jae
mov
push
mov
cmp
or
ret
cmp
loop
mov
fdivs
lds
push
mov
shrb
std
fldl
incl
cwtl
lret
add
inc
mov
inc
les
and
sub
mov
jno
in
jbe
dec
movsb
fmul
bound
rol
mov
add
push
cmp
sub
scas
pop
lea
out
into
mov
mov
sub
loop
inc
pop
dec
cwtl
pop
test
adcb
out
push
jmp
mov
sub
cwtl
and
lret
pop
idiv
and
dec
xor
imul
pop
fsubp
cmc
dec
cltd
stc
and
mov
addr16
push
cmp
sub
inc
pusha
dec
je
and
adc
mov
mov
jns
mov
mov
in
popf
xchg
jae
cmpl
sbb
pop
pusha
xchg
pop
sahf
mov
inc
jb
loop
xor
outsl
push
cmp
faddl
gs
xchg
dec
dec
xor
cmpsl
push
mov
cmp
pop
and
xor
mov
cmp
or
in
lea
lret
or
sti
dec
xlat
jmp
and
sub
cmp
jmp
xor
icebp
adc
repnz
dec
ja
rolb
cmc
cld
jg
push
jae
sub
jl
sub
xchg
lcall
push
call
xchg
ficomps
or
push
mov
jae
mov
cmp
fists
cwtl
mov
stos
inc
inc
jnp
and
mov
in
dec
inc
or
mov
je
lret
xchg
push
push
test
pop
stos
xor
insb
or
and
jnp
add
mov
and
push
scas
mov
sarl
adc
outsb
movsl
dec
iret
mov
cmc
loope
mov
loop
hlt
aad
pushf
int3
scas
xchg
mov
fcomps
stc
mov
push
and
jp
xchg
outsl
dec
xor
pop
sub
push
imul
out
jmp
nop
pop
test
xchg
and
lock
xor
mov
test
adc
scas
push
push
sar
push
ds
and
ds
sbb
jae
dec
xor
xor
inc
or
pusha
mov
push
and
sbb
cmp
outsl
push
ja
out
lea
nop
push
pop
mov
movl
jo
or
sbb
popf
mov
test
jmp
addr16
jne
bnd
xor
sti
adc
fistpll
cmpsl
pop
pusha
mov
sub
push
loop
das
mov
shrb
mov
cmp
inc
iret
pop
xor
jl
cli
ja
outsb
out
push
jmp
jns
das
sbb
lock
les
inc
fildll
int
icebp
andb
jg
jg
je
xchg
lock
fst
stos
push
fdivrs
jecxz
jp
ljmp
dec
mov
mov
jnp
movsl
popf
xchg
push
mov
mov
pop
scas
jmp
daa
test
dec
pop
filds
fcomps
xchg
frstor
loope
pushf
or
aaa
fstp
ret
aaa
fcomi
out
ljmp
mov
rorb
es
daa
xchg
and
jp
int3
jns
push
daa
push
inc
loope
xor
mov
dec
xchg
adc
pop
xchg
ret
stos
xor
ret
pop
aaa
hlt
adc
mov
mov
and
ds
pop
xor
sbb
into
xor
push
sbb
xchg
pop
mov
in
dec
std
cltd
xorl
lret
insl
sbb
push
jae
repz
lods
push
push
addr16
ret
adc
lods
xor
adc
xchg
add
popf
stc
push
pop
dec
xchg
dec
push
movsb
dec
cmp
cs
sub
ret
inc
xchg
add
push
fisttps
dec
aas
push
mov
cmpsb
xchg
ret
mov
pop
xchg
add
aad
test
imul
iret
loope
push
push
mov
sbb
cmc
mov
ret
je
fiadds
aaa
and
adc
cmpsb
xor
push
and
adc
cltd
xor
and
pxor
leave
in
mov
outsb
xchg
in
cli
sbb
xor
dec
sub
adc
sub
adc
enter
arpl
aaa
mov
ds
xor
enter
stos
cmp
aaa
cmp
cmp
push
ror
jno
ds
mov
test
ret
add
push
xchg
lea
or
push
ja
pop
lea
mov
pop
xor
in
xor
jae
outsl
mov
out
ljmp
dec
mov
pop
fs
xchg
xlat
cwtl
inc
pop
push
mov
into
adc
lods
pop
or
in
icebp
jg
rorb
jns
cmp
fimull
cmp
fwait
sub
int3
mov
xor
pop
int3
push
std
mov
mov
mov
and
and
xchg
xchg
imul
pop
jg
mov
pop
push
xor
mov
rol
shll
xchg
lcall
stos
dec
psubw
mov
jae
cmpsl
inc
in
adc
inc
mov
lcall
push
xor
sbb
push
test
jno
mov
fcoml
xchg
mov
or
out
inc
loope
inc
mov
and
jo
adc
push
cmp
mov
out
mov
xchg
je
sbb
push
inc
out
ret
les
jb
sub
mov
dec
aad
lock
or
sub
jmp
and
out
mov
xlat
hlt
into
cld
sbb
dec
adc
lods
sbb
insb
dec
cmp
push
add
or
dec
int
into
xchg
mov
jo
pop
inc
pop
imul
pop
popa
rclb
sbb
bound
scas
push
sub
mov
pop
push
fbld
xor
popw
sbb
mov
dec
or
inc
xor
js
aam
and
loop
push
dec
mov
es
insb
outsb
add
or
pop
pop
iret
xor
dec
fs
lret
pop
imul
add
xor
popa
pop
sbb
sbb
xchg
in
pushf
and
cwtl
je
out
inc
sbb
or
push
push
push
xor
mov
iret
cli
mov
clc
sbb
out
jle
insl
mov
call
sub
ss
ud2
xchg
sub
cmpb
sbb
pop
loop
lods
das
insb
int3
mov
xor
movsl
jno
inc
xchg
sub
shlb
sti
insl
or
es
push
scas
jmp
sahf
fcmovnbe
cltd
leave
xchg
data16
mov
mov
mov
clc
inc
xor
inc
in
dec
insb
and
test
xor
dec
in
fmuls
mov
test
jns
incb
pop
outsl
cmp
push
sbb
inc
or
xchg
cli
aam
sub
or
jg
stos
push
push
inc
mov
mov
cmc
negl
jl
xorb
loope
scas
add
and
ss
insb
das
jo
loop
insb
ljmp
sbb
and
out
loopne
mov
xlat
sub
sbb
dec
jbe
jb
dec
push
stc
inc
into
imul
jb
add
gs
nop
rolb
es
andb
jbe
push
jne
loopne
xchg
pop
xor
aad
ficoml
xchg
cli
enter
sarl
xor
add
movsl
mov
stc
pop
mov
loopne
das
lret
cvtps2pi
push
inc
int
ret
je
push
mov
add
out
xor
ret
nop
mov
rclb
lods
pop
cli
push
cmp
push
hlt
adcl
test
fmuls
in
or
fisttpl
jnp
pop
pop
insb
clc
mov
push
xlat
inc
mov
test
filds
cmpsl
test
inc
fwait
push
push
fdivr
lret
sbb
loopne
push
add
lret
push
outsl
push
insb
adc
sahf
jle
pop
pop
add
sbb
xor
lock
mov
add
mov
mov
sub
xor
push
xor
jmp
orb
mov
or
iret
mov
imul
mov
xor
rol
cmp
mov
xchg
fs
lahf
mov
mov
inc
stos
mov
lods
outsl
cmpsl
mov
cmp
mov
scas
adc
roll
icebp
dec
daa
dec
testb
mov
lahf
repnz
mov
fistpl
aam
lods
sub
push
push
xor
loop
rolb
dec
xor
mov
and
cmpsl
popf
mov
into
xchg
aas
mov
mov
and
mov
pop
cs
push
movsl
jb
sbb
sbb
mov
fnstenv
adc
test
mov
dec
dec
daa
inc
xchg
fwait
imul
push
outsl
in
jecxz
aam
test
loope
dec
xchg
jmp
mov
adc
enter
cld
push
popa
movl
adc
jp
xorb
cmp
sub
sub
xchg
jae
xor
and
mov
andl
cmp
jle
into
dec
push
imul
cmpl
out
and
sub
add
or
mov
je
ds
xchg
loop
pop
add
pop
inc
loop
movsl
sub
outsb
mov
fbstp
xchg
adc
leave
icebp
inc
add
divb
ja
cltd
pop
insb
jbe
sub
push
test
add
fbld
push
push
lcall
stc
xchg
cmp
inc
pop
cltd
ret
sti
jmp
out
sub
incb
lock
fldcw
sar
mov
cmp
aam
std
inc
fwait
or
fisttpl
repz
jb
bound
scas
enter
push
cmp
sbb
data16
scas
push
out
mov
inc
repnz
cltd
shl
jae
pop
les
xchg
push
inc
call
cmpsl
add
cmpsb
pusha
scas
adc
xchg
repz
jge
mov
lock
pop
js
jbe
outsb
or
dec
xorl
arpl
add
icebp
adc
mov
leave
mov
aaa
pop
out
out
jns
fwait
jno
push
add
xor
cli
mov
jmp
das
clc
mov
insb
mov
test
lret
xor
add
stos
cmp
or
repnz
pop
mov
push
cltd
cld
adc
sub
sti
test
fsub
cltd
arpl
pop
push
sub
push
pop
mov
dec
movsb
xor
add
hlt
aaa
mov
pop
fwait
lock
and
adc
fldt
inc
dec
inc
mov
cmp
xchg
and
es
sahf
cmpsl
int3
and
cs
mov
inc
xchg
das
mov
add
jge
xchg
cmc
enter
adc
repnz
ja
ss
jns
arpl
push
mov
pop
movsb
test
or
movsl
int
and
into
and
sbb
push
pop
pop
mov
lret
test
pop
push
icebp
sahf
jmp
inc
int3
xor
sti
adc
imul
lcall
rol
dec
or
cmpsl
mov
pop
imul
or
fdivrs
cwtl
or
jne
sar
jns
dec
rorb
jbe
mov
inc
data16
orl
mov
pop
or
mov
cmpsb
fisttpll
cmc
mov
repnz
cmp
jle
cmp
nop
inc
and
rcrb
mov
mov
push
ret
aas
xchg
sub
inc
nop
mov
roll
mov
repnz
inc
mov
aas
adc
push
mov
fadds
pop
movsl
lret
mov
test
or
add
fucom
pop
scas
stos
loop
jbe
fisubs
fisubrl
lahf
jle
test
xor
cmp
jno
inc
adc
fmuls
es
and
and
enter
loop
dec
in
sbb
dec
mov
pop
xor
jl
xlat
rcrl
push
jge
jbe
xor
mov
test
jge
cld
add
fwait
paddb
adc
push
sbb
ret
adc
and
sbb
daa
sub
or
or
or
mov
xlat
in
pop
imul
mov
insb
add
les
arpl
jge
outsl
pop
sbb
popa
setnp
dec
push
jle
cmp
aad
pushf
pop
ljmp
and
mov
inc
fimuls
icebp
mov
push
or
ljmp
dec
sti
test
cmp
lahf
notb
outsb
push
mov
adc
push
add
pop
adc
cmc
sbbb
clc
xor
xor
mov
gs
cmpsl
pop
rol
int3
and
pop
pop
sub
hlt
or
mov
js
popf
add
sbb
lret
lcall
jne
sahf
aad
or
ja
orl
or
fwait
cmp
jae
lret
pop
and
gs
call
rcl
adc
popf
ret
jo
mov
or
dec
fnstenv
popf
sub
fcmovnbe
stos
test
shrl
sbb
push
inc
jmp
pop
out
cs
addr16
inc
lret
sbb
add
in
std
jecxz
pop
xlat
mov
iret
sbb
xor
add
popa
daa
daa
arpl
push
or
sub
cmp
incl
adcb
pop
sti
in
in
xor
popf
fwait
sbb
push
cmp
das
and
sti
jbe
sbb
int3
pop
mov
and
aas
jbe
cmpsb
outsl
lods
xor
aas
push
and
cmpsl
jbe
cs
lods
int3
dec
out
out
jb
mov
shl
and
cs
mov
and
dec
adc
rolb
mov
imul
dec
stc
xchg
jnp
lcall
adc
xchg
js
sbb
fs
das
jmp
enter
out
jae
insl
or
nop
add
or
cmp
xlat
add
xorb
jmp
loope
out
rolb
inc
cmovle
stos
sub
jge
xor
sbb
pop
in
movl
mov
loope
cmp
shl
push
les
imul
daa
dec
enter
push
mov
popa
ljmp
xchg
dec
mov
loopne
mov
sbb
cli
fwait
xor
lahf
push
das
jae
jge
push
ljmp
repz
dec
subb
jp
call
jmp
ds
or
addr16
clc
mov
enter
loopne
mov
mov
mov
push
insb
mov
cmpsl
add
js
arpl
lret
adc
movsb
and
cmp
dec
lret
xor
or
jo
das
jmp
jp
sbb
add
push
fsubs
insl
dec
ficompl
pop
test
iret
fimull
add
mov
mov
sahf
leave
push
or
jmp
es
out
inc
or
aaa
shlb
and
in
mov
add
dec
repz
adc
push
shll
into
push
out
imul
xorb
xor
into
out
jne
mov
cmpxchg
fldl
in
inc
inc
loop
loop
inc
xor
out
out
outsl
mov
cmp
lock
loop
xchg
in
pop
cltd
outsb
out
inc
in
xchg
dec
jb
jbe
gs
mov
add
notb
push
loop
sbb
aad
pop
sub
jmp
add
push
jge
pop
lcall
inc
repnz
xor
insl
push
leave
mov
cltd
orb
jp
jno
xor
in
lcall
pop
mov
or
movsb
dec
mov
in
fadds
es
test
push
adc
or
ss
fs
out
stc
les
xor
je
call
adc
test
mov
cmp
gs
stos
mov
ja
adc
cmp
xchg
push
inc
fisubl
addr16
movsl
aad
and
adc
dec
mov
paddb
fldl
sbb
sub
inc
sbb
arpl
cmp
popa
lods
inc
xchg
add
cli
loopne
xchg
push
mov
stc
mov
out
adc
cmc
push
js
lods
iret
inc
mov
and
adc
cmpsl
cmpsb
jb
test
fsubrs
jg
dec
sbb
out
xchg
inc
shl
sub
sahf
and
jo
pushf
lcall
out
sbb
dec
ja
insl
aas
or
xlat
in
pop
xor
cmp
inc
imul
push
push
bound
mov
xchg
mov
outsl
pop
xchg
or
push
rclb
repz
cltd
mov
sub
xor
ret
cwtl
dec
dec
mov
pop
adc
dec
dec
mov
inc
push
into
xchg
outsb
sti
adc
inc
js
jmp
addr16
inc
xchg
sahf
stos
nop
xchg
jae
mov
sub
aad
xchg
jbe
add
sbb
mov
movsb
sub
xchg
sub
daa
outsb
adcb
lret
clc
aad
clc
push
mov
decl
xchg
push
jno
fistpl
mov
push
and
sbb
popf
or
lock
adcb
push
das
aad
jmp
ljmp
sbb
cmc
loopne
push
jl
mov
push
push
stos
xor
daa
mov
std
je
xchg
jg
jg
aas
xchg
test
mov
pop
leave
push
subb
movsb
cwtl
pop
dec
pop
jnp
sbbl
lods
xlat
xor
pop
aad
icebp
xlat
insl
jecxz
stos
pushf
jle
loopne
push
push
and
in
sub
lret
jne
xchg
divb
rorl
ffreep
mov
loopne
push
add
es
cmp
andb
test
in
flds
mov
mov
aam
push
push
cmp
fiadds
enter
cmpsb
mov
dec
dec
push
pop
inc
mov
shlb
xor
movsb
mov
xchg
jb
leave
dec
bound
cld
movsl
stos
aam
aaa
imul
mov
cmp
inc
fs
int
sub
mov
lds
xchg
mov
push
ret
rcrl
mov
nop
inc
mov
jp
fs
ss
mov
push
mov
cld
shrl
inc
cli
mov
cmc
pop
jb
mov
pop
bnd
rol
arpl
dec
loopne
mov
push
repz
pop
dec
pop
lret
test
cmp
fsts
inc
aaa
loop
mov
inc
and
xchg
rolb
loopne
enter
and
or
je
push
andb
cld
adc
incb
std
adc
lods
fwait
repnz
lods
out
jl
mov
int3
ds
movsl
adc
pop
pushf
push
inc
push
jno
dec
cmp
std
push
and
les
dec
dec
insb
daa
movsb
scas
sub
add
hlt
pop
imul
sar
adc
pusha
mov
call
inc
pop
xchg
mov
inc
and
js
in
popf
lret
stos
aam
cwtl
jb
sahf
out
outsl
les
popf
aas
and
jg
sti
lcall
xor
adc
test
push
mov
cld
pop
inc
mov
dec
cmp
push
sbb
pop
fcoms
outsb
inc
mov
lods
insl
push
add
mov
pop
mov
sti
je
adc
mov
xorl
cmp
pop
sbb
jno
loopne
rcl
mov
fmull
loop
cwtl
stc
jnp
ds
jle
subl
movsb
or
mov
sbb
popa
arpl
out
lds
nop
jmp
cmpsl
xchg
adc
jno
jecxz
mov
popa
js
out
mov
rclb
add
imul
push
push
push
aam
sbb
jns
arpl
cmpb
popa
jo
cmpsb
loop
mov
jl
or
pushf
bound
sbb
stos
xchg
shl
mov
inc
push
ss
stos
mov
or
mov
cltd
xchg
in
mov
imul
stos
mov
popa
mov
in
in
inc
mov
mov
movsb
mov
mov
aam
xor
js
xchg
in
push
pop
mov
xchg
arpl
les
movsl
ss
xor
test
dec
inc
icebp
mov
mov
popf
aam
jl
pop
adc
stos
ja
jbe
repnz
or
loope
in
insl
incl
fstps
bnd
out
cmpsl
rcrl
jecxz
aam
imul
nop
inc
mov
pop
cli
mov
js
mul
daa
divl
jns
hlt
jmp
push
push
popf
mov
out
or
xchg
pop
add
sbb
popa
ds
sub
pushf
insl
idivb
inc
sub
mov
test
mov
push
mov
pop
mov
xorb
sub
adc
inc
dec
mov
xor
xor
jb
js
push
adc
lock
mov
das
int3
xor
int
cli
pusha
and
insl
mov
mov
dec
or
lret
fisttpll
cwtl
incl
sub
jo
jl
iret
rorl
popa
scas
popa
pop
mov
mov
or
ret
pop
jle
mov
mov
mov
adc
sub
mov
pop
hlt
xor
fbld
dec
fldenv
test
and
mov
mov
dec
pop
adc
dec
pop
addr16
jo
jmp
ficoms
sub
cmp
add
inc
jb
ss
cmpsl
mov
not
jmp
pushf
sbb
gs
ss
fsub
lret
push
rclb
addl
adc
push
call
lods
cli
dec
dec
rclb
cltd
lahf
mov
push
icebp
add
pushf
sahf
test
mov
hlt
loop
aaa
dec
mov
jg
push
or
ja
int
pop
fbstp
notl
mov
or
rorb
lods
pop
out
out
sub
mov
sub
dec
and
xor
mov
loopne
clc
ret
xchg
mov
jecxz
pushf
pop
loope
out
mov
jne
clc
or
fdivs
push
push
in
lret
mov
cltd
mov
jnp
mov
fldcw
jnp
push
and
push
lgs
les
and
push
imul
mov
dec
or
push
test
adc
mov
shl
movsb
sub
in
add
push
rol
mov
scas
dec
stc
push
std
jg
dec
xchg
push
ja
jmp
ljmp
adcb
enter
mov
jo
push
aaa
mov
aaa
out
xchg
add
mov
lahf
mov
push
pop
push
lds
mov
pop
mov
fs
xlat
shl
mov
mov
add
enter
lea
push
mov
jno
and
pop
rolb
pop
lahf
aaa
pop
cli
push
push
test
popf
das
movsb
movsb
mov
test
dec
pop
dec
in
inc
xchg
mov
scas
mov
push
cmp
mov
mov
std
dec
jns
scas
pop
icebp
loopne
sti
xor
popf
clc
ror
imul
jecxz
shrb
fwait
inc
adcl
shr
xor
add
mov
mov
jmp
mov
push
add
dec
clc
mov
cmp
aas
pop
in
mov
mov
xchg
testl
cmovne
xor
daa
aas
mov
mov
and
fcoms
push
in
dec
in
sbb
xlat
pop
pop
xchg
xor
test
dec
pushf
fldt
cwtl
insl
adc
xchg
int
imull
jb
adc
mov
mov
adc
pushf
cmpsl
repnz
es
jb
dec
mov
cmp
sub
inc
cmc
fneni(8087
mov
push
movsb
lret
insl
mov
out
aam
mov
jb
fnstenv
fst
jge
das
jmp
sub
dec
mov
insl
rorb
lcall
xchg
repnz
sarb
add
pop
pushf
dec
sub
pop
and
xor
jne
xchg
pop
mov
in
shrb
insb
outsb
movsb
mov
xor
int3
sarb
dec
mov
jne
pop
lcall
sub
mov
lahf
pop
loop
outsl
xchg
pop
outsb
add
cmpsb
jecxz
pop
pop
cmpsl
pop
call
fstps
xor
sbb
xlat
fs
cld
and
iret
cmc
movsl
xchg
adc
mov
xchg
xor
sub
cmp
mov
cli
aas
icebp
int3
outsl
addr16
inc
mov
push
sub
mov
aad
cmp
xchg
push
cmp
lock
push
loope
push
or
les
or
sub
mov
and
mov
hlt
mov
cli
mov
mov
xlat
jno
xor
fmull
mov
lret
xchg
push
mov
int3
rcrb
inc
cmp
aas
xor
test
test
sbb
mov
jmp
sub
jae
mov
pop
dec
xchg
mov
scas
pop
faddl
sahf
xor
loope
mov
cli
mov
fstpt
dec
insl
lret
pop
inc
mov
stos
ret
loop
iret
cmp
in
nop
cmp
jle
notl
hlt
mov
divb
or
cmpsb
pop
pop
adc
shl
jmp
push
lock
sbb
dec
movsl
pushf
or
mov
jmp
lret
js
xchg
sbb
jae
inc
je
push
mov
mov
and
adc
out
sbb
out
xor
push
mov
sbb
fs
hlt
out
pop
and
dec
pop
je
dec
and
ja
mov
mov
js
sbb
jno
je
mov
movsl
mov
pop
mov
mov
std
leave
in
sbb
push
dec
xor
test
push
mov
cmp
ja
adc
xlat
mov
xor
imul
xor
arpl
sbbl
dec
dec
scas
loopne
sub
hlt
jp
cwtl
out
jb
jmp
arpl
outsl
clc
loopne
xchg
lock
test
inc
adc
ror
jbe
sbb
cmp
testl
lret
decb
je
arpl
push
fisubrs
pop
cmp
fsub
or
sub
mov
mov
stc
or
nop
bound
mov
dec
jo
shl
mov
add
xchg
fsubs
jo
and
shrb
test
cmpsl
or
das
aas
push
add
jecxz
push
ljmp
adc
adc
mov
dec
jp
testl
movsl
out
push
aad
dec
inc
jbe
inc
lea
and
test
roll
sub
sbb
mov
mov
sbb
jne
sub
scas
hlt
shrl
xor
inc
ficoml
scas
mov
das
sti
pushf
rolb
add
sbb
sbb
pop
cmp
dec
jecxz
outsl
mov
adc
mov
es
std
mov
decb
fisttps
aad
jge
cmp
and
jo
data16
sbb
jns
jecxz
or
pop
loope
cmp
jne
cmp
clc
jmp
lcall
fsubl
mov
sub
cltd
adc
dec
push
sub
jle
fsubrs
aad
push
cmp
mov
repnz
cmpsl
aas
sbb
dec
out
scas
adc
push
mov
lods
and
insb
ja
ds
mov
out
or
call
test
mov
jle
sbb
xchg
jne
xchg
loopne
adcl
mov
add
dec
push
jbe
lea
jno
stos
jge
popf
adc
insb
es
je
push
insb
popa
sbb
pop
shlb
add
add
and
psubb
sbbb
jg
enter
loope
inc
and
decl
dec
inc
in
mov
mov
sub
mov
add
cmc
push
mov
inc
pop
lods
sub
jbe
fadds
sbb
stos
outsb
sbb
sbb
push
dec
sub
add
in
adc
loope
mov
gs
pusha
shll
in
ss
test
mov
pop
adc
and
and
iret
pop
popa
dec
mov
mov
jle
mov
lods
sub
fldcw
fwait
lock
inc
in
sbbb
jb
xchg
scas
push
or
pushf
fcmovbe
lret
loope
adc
lret
adc
adc
xor
repz
dec
jnp
imul
pop
idivb
movsl
push
sbb
adc
jo
jmp
sub
mov
hlt
les
adc
xor
jl
and
and
sbb
stos
inc
les
lret
dec
in
loopne
cli
lods
js
arpl
andl
daa
adc
cmp
and
sub
dec
test
fstpl
insb
cld
add
mov
fldcw
sbb
imul
lods
mov
call
or
nop
inc
ljmp
sub
adc
adc
cmp
mov
sub
arpl
sbb
imul
jg
test
lds
popa
or
xchg
dec
in
enter
idivb
lcall
adc
add
and
mov
sub
push
xchg
xor
inc
into
cmp
arpl
pop
xchg
sub
ret
push
nop
cmp
repz
stos
push
mov
lock
std
mov
les
movsl
mov
push
push
dec
lea
pop
dec
arpl
dec
push
push
jnp
jnp
dec
cwtl
aad
loope
imul
add
imul
outsl
dec
or
dec
mov
nop
adc
fdivl
addr16
fdivrl
push
fcomip
pop
out
xchg
outsb
and
mov
mov
test
aas
adc
hlt
adc
in
and
inc
sysret
mov
mov
mov
xor
mov
xor
arpl
shlb
in
inc
add
dec
lret
filds
inc
ja
stc
push
add
sbb
mov
jmp
and
push
negl
stos
sti
stos
lods
outsl
jmp
aaa
jo
sti
popf
test
mov
loopne
fidivrs
pop
std
xchg
add
repz
mov
loopne
inc
xchg
push
repnz
push
mov
pop
cmp
ss
mov
dec
popa
mov
shlb
imul
fdivs
mov
lret
dec
pop
imul
sbb
mov
loopne
cltd
sbb
push
lcall
xor
lds
cmc
pop
xlat
data16
int
pop
xor
push
pop
mov
mov
jle
cmp
idiv
jb
mov
xor
mov
hlt
test
mov
scas
repz
lods
sbb
pop
ret
add
fdivrl
jmp
pusha
push
nop
test
mov
cmp
mov
xchg
or
std
in
les
dec
fildll
fisttpll
dec
add
mov
cmp
pop
dec
jp
les
mov
stc
das
scas
mov
mov
or
push
xchg
push
outsl
and
data16
lds
or
mov
or
shll
and
jbe
sbbl
stos
mov
dec
test
sbb
fidivl
insl
or
out
inc
jmp
sub
dec
push
mov
push
ss
data16
jmp
dec
loopne
adc
jmp
outsb
mov
out
cmp
dec
cmpsl
dec
mov
dec
pop
mov
mov
xchg
not
add
xchg
sub
dec
shll
clc
aas
shl
insb
sbb
push
rol
adc
jb
aad
cmp
inc
mov
pop
pop
ror
test
mov
cltd
mov
add
push
sub
jecxz
clc
mov
jne
mov
adc
or
jge
mov
aad
mov
shl
lods
and
xor
pop
jns
or
jb
fcmovu
es
ret
rolb
shrl
jmp
add
push
push
outsb
jecxz
int
loopne
test
aas
mov
pop
lods
add
pushf
hlt
pop
sti
outsl
xor
xchg
data16
lret
add
pop
sbb
int
sbb
arpl
insb
mov
sahf
pushf
mov
frstor
enter
dec
lret
scas
cli
lahf
mov
adc
pop
jmp
repnz
dec
arpl
inc
fldl
adc
sub
adc
ds
andb
aad
lcall
es
ds
test
adc
gs
dec
pop
andl
dec
push
pop
xchg
jecxz
int3
pop
dec
push
add
fstpt
ds
test
sbb
test
pop
pushw
jb
fdivl
imul
cmp
nop
stos
int3
mov
outsb
pop
out
mov
movsl
cmp
mov
divl
lret
dec
adcb
sub
icebp
clc
scas
testl
pop
loop
and
mov
push
xchg
orl
mov
push
lcall
out
mov
mov
adc
dec
xchg
sub
xchg
stc
jno
pop
pop
in
jns
mov
idivb
add
mov
push
stc
xchg
lret
stos
pusha
dec
int
xor
jle
ss
cmc
lahf
addr16
push
cmc
lods
cltd
hlt
mov
and
lods
mov
xchg
subb
mov
clc
hlt
jl
xor
lock
mov
sbb
sub
imul
das
negb
je
lea
clc
or
rcrb
mov
or
test
pop
mov
nop
insb
xor
outsl
push
xlat
fadds
mov
pop
jmp
imul
gs
dec
cmp
and
jmp
and
add
int3
inc
out
flds
mov
fldl
mov
adc
cmpsl
aas
pop
je
jmp
je
jg
in
mov
sub
rorb
clc
sub
xor
cli
sub
daa
fcmovnu
adc
add
out
jge
xor
mov
sbb
cmp
push
aad
jo
loopne
or
mov
outsl
andl
aaa
mov
inc
dec
add
test
jne
jae
and
inc
faddl
xchg
fidivrl
cli
mov
inc
insb
movsb
xchg
mov
dec
cs
bound
mov
mov
xor
cmp
scas
cmp
addr16
mov
stc
cmp
inc
dec
loop
adc
fdiv
popf
hlt
enter
push
jle
shrl
insl
scas
mulb
mov
mov
shll
or
cmp
mov
imul
mov
fwait
std
sub
ds
add
dec
xchg
push
xchg
mov
je
xor
mov
mov
mov
andb
inc
add
test
sahf
aaa
dec
adc
mov
clc
les
jnp
inc
cmp
sbb
and
test
aam
scas
cmp
xchg
pusha
cmpsb
jne
testb
push
mov
pop
lods
in
xchg
dec
cmc
lret
stc
aas
cmp
cmp
mov
add
sti
inc
sbbb
and
pop
icebp
ljmp
mov
pop
cltd
repnz
fsubs
fldt
popf
sahf
pop
pop
push
in
mov
mov
dec
or
mov
mov
xor
mov
jb
scas
pop
sbb
cmp
stos
test
push
loopne
out
daa
movsb
xor
inc
pop
mov
jae
push
sahf
xchg
cmp
popf
jp
aad
or
pop
mov
mov
pusha
jb
subb
mov
mov
inc
mov
mov
add
pushf
mov
scas
and
loop
add
dec
mov
in
mov
test
mov
push
out
iret
mov
and
je
bound
int
sbb
jmp
rcr
jb
adc
aam
insb
dec
dec
xor
fistps
cmpsl
jmp
mov
inc
xchg
pop
pop
scas
jmp
sbb
cli
je
rorb
jle
dec
add
mov
mov
call
mov
mov
out
insl
mov
cmp
xchg
adc
out
mov
pop
pushf
pop
stc
mov
mov
and
mov
adc
xor
cwtl
movl
mov
lock
xor
jbe
xchg
push
pop
ljmp
mov
xor
loope
mulb
mov
cld
inc
sub
int3
inc
or
pop
dec
mov
add
aaa
mov
idivb
add
arpl
data16
sbb
and
sub
and
adc
pop
cmpsb
bound
out
or
fsubr
repnz
in
dec
xchg
stos
fcompl
add
and
clc
push
test
out
loope
push
repz
cmp
cmp
xchg
int3
cli
popa
shll
hlt
inc
xor
rolb
into
test
inc
call
fs
jbe
jl
push
xchg
stos
outsb
jp
or
test
pop
xchg
daa
pop
test
xchg
sbb
adc
scas
ret
pop
pusha
push
mov
xor
mov
add
sub
sbbb
xchg
xlat
cli
dec
clc
or
xchg
cli
int
jb
inc
dec
loope
mov
pop
mov
mov
cmp
out
add
idivb
aad
sub
stos
add
pop
jg
repz
push
mov
add
pop
iret
jg
xchg
outsl
mov
sub
lds
mov
jecxz
pop
les
adc
stc
mov
lods
push
xor
inc
aas
xchg
cmp
pushf
inc
test
pop
lahf
mov
xchg
mov
dec
push
xchg
jno
jae
in
mov
leave
fidivs
scas
ret
jno
fdivs
daa
int
sbb
iret
sub
push
push
mov
jo
fisttpl
and
mov
rcl
add
js
inc
incb
jp
or
cmp
pop
sbb
pop
orl
push
xchg
filds
fisttps
addr16
add
fcoms
pop
lea
cmpsb
lods
jb
jns
dec
pop
lcall
stc
or
add
out
sub
and
jp
insb
pop
popf
insl
hlt
shlb
mov
cmp
test
mov
jmp
orb
je
imul
sub
repz
xchg
decb
ds
gs
jae
sbb
lret
cmp
leave
adc
pusha
xorb
xchg
sub
mov
rcrl
add
cmp
pop
pop
inc
push
sub
cmpsl
roll
ret
sahf
and
add
test
add
mov
pop
repz
mov
xor
add
inc
aaa
and
jp
int
in
arpl
dec
push
mov
xchg
movl
fcomp
dec
and
cld
push
mov
andb
mov
xor
sub
in
into
and
scas
popf
pop
and
xchg
adc
aaa
imul
mov
sub
mov
adc
inc
inc
xor
cs
sub
sbb
jo
and
push
sub
mov
leave
cmpsl
xchg
leave
clc
fmul
test
in
mov
mov
out
fbstp
outsl
xchg
xor
sub
test
mov
das
sub
xor
popa
fmull
add
out
mov
xor
xchg
jmp
mov
mov
or
or
xor
push
shlb
xchg
ret
outsl
leave
mov
lahf
dec
in
nop
insl
mov
loope
lret
repz
dec
mov
jae
hlt
jno
push
les
or
jb
mov
test
mov
mov
mov
pop
sub
and
and
enter
jne
dec
test
mov
imul
cmpsb
mov
mov
sub
xor
sarb
xchg
pop
sahf
cmp
ss
pushf
jne
leave
inc
repz
xchg
adc
push
cmc
repz
cmp
cmp
xchg
mov
push
sub
pop
leave
fnsave
dec
movsl
jp
push
push
dec
nop
cmp
enter
enter
pop
mov
cmc
jge
or
in
push
or
addl
dec
mov
fwait
inc
iret
inc
or
cld
jg
and
imul
sbb
pusha
pop
insb
or
in
and
adcl
stos
xchg
cs
inc
inc
or
sub
sarl
fimuls
inc
fdivrs
sub
jo
push
scas
mov
out
sub
int
dec
mov
shrb
inc
shll
aam
addr16
sbb
or
adc
js
fmull
out
stos
fidivs
dec
sub
mov
cltd
shl
sbb
icebp
push
add
and
fs
sbb
in
mov
imul
mov
test
or
int3
jle
pop
add
mov
lahf
mov
mov
mov
mov
iret
or
cmp
aad
hlt
xchg
int3
stos
lods
jge
outsb
ds
xchg
shl
pop
mov
int3
jle
mov
adc
cmp
pop
leave
mov
dec
bound
add
popf
adc
ljmp
ds
daa
xor
sub
in
idivb
pop
adc
lret
add
rcrb
add
pop
in
jo
pop
sub
mov
data16
lds
dec
or
mov
les
mov
add
dec
add
jnp
jmp
js
xor
pop
loop
and
and
into
jb
scas
shrl
xchg
dec
pop
xor
lcall
inc
fmuls
ljmp
jmp
outsb
xchg
je
hlt
cmp
push
stos
or
jmp
fcoml
add
or
xor
or
imul
xchg
movsb
inc
out
add
add
push
ljmp
stc
cmp
mov
xorb
fadd
jmp
and
mov
sub
add
movq
nop
xchg
daa
push
or
or
mov
pop
mov
or
mov
inc
movsl
call
leave
jle
mov
je
dec
pop
dec
sarl
inc
xor
jmp
repz
and
push
push
out
xchg
push
clc
imulb
jecxz
ret
cmp
pop
int
fwait
xchg
mov
sbb
mov
cmc
shll
dec
sub
jmp
lea
add
pop
jae
sahf
pusha
bound
loop
pop
push
sarl
fnstsw
test
mov
test
jmp
push
xchg
inc
adc
mov
xchg
aad
cmp
adc
popf
fistl
popf
sub
inc
movsl
call
mov
and
aaa
ljmp
movsl
out
lahf
out
jbe
add
rclb
or
dec
or
das
test
mov
popa
ljmp
and
lahf
jbe
push
inc
push
pop
cmp
push
dec
stos
xchg
pop
cld
stos
adc
xchg
inc
inc
adc
jl
shrb
mov
loop
cmpsl
push
jge
test
lahf
js
mov
loopne
int
lods
and
je
dec
popa
xchg
xchg
test
mov
imul
pop
cmp
movsb
and
pushf
sti
sub
push
jne
cmp
sbb
pushf
lahf
cmp
push
mov
popa
xor
dec
mov
shrb
aad
add
repz
aaa
sub
mov
xchg
sti
xor
push
sub
arpl
mov
sub
mov
jge
cmp
popf
inc
dec
das
and
push
push
jl
lds
and
sbb
mov
test
push
mov
add
sti
cmp
cmc
sahf
sbb
push
cmp
xor
imul
sub
pop
xlat
cld
dec
pop
cli
pop
push
push
push
gs
lahf
ljmp
or
movsb
es
jns
dec
in
daa
mov
stc
repnz
mov
imul
pop
aam
and
gs
or
dec
pop
std
mov
arpl
mov
mov
inc
daa
xchg
push
add
in
test
adc
pusha
dec
aad
push
dec
jl
ljmp
sub
fisttps
adc
dec
and
mov
test
in
xlat
ret
xchg
fnsave
sbb
test
jbe
ljmp
and
sahf
pop
sti
cmp
adc
xchg
lret
movsl
xchg
leave
adc
pop
mov
jo
test
adc
aas
aam
lcall
cmp
and
ljmp
in
aas
bound
outsl
lret
and
inc
or
cmp
inc
lea
push
ret
loop
mov
push
add
and
fsubrl
ret
int
std
arpl
test
push
sbbb
scas
ja
pop
lock
xchg
mov
xchg
ret
mov
xor
enter
sti
mov
jle
sub
dec
movsl
leave
jl
insb
sbbl
cli
xchg
iret
cwtl
xchg
mov
push
jnp
mov
inc
inc
inc
pop
pop
test
push
push
mov
pop
and
stos
lret
mov
pop
xlat
ss
daa
rcl
sbb
movsb
dec
xor
cmp
aam
rcl
jnp
icebp
dec
lods
mov
inc
mov
scas
mov
mov
scas
mov
or
mov
fwait
push
push
in
mov
divl
je
jmp
or
cltd
call
push
push
std
add
rcr
test
mov
jmp
jl
pop
xchg
pop
push
add
fs
stc
jbe
sbb
iret
dec
outsl
fsubl
rcr
and
cmp
lcall
lret
push
int
push
mov
rorl
pop
andl
int
dec
dec
sub
stos
iret
jo
add
mov
push
inc
ret
in
and
sbb
jp
and
leave
popa
add
xchg
movsb
mov
lret
stos
cmp
inc
sti
js
jle
lret
daa
cld
fiaddl
adc
test
pop
mov
and
dec
mov
into
fcmovb
xor
cld
pop
sub
add
jns
cmpsl
pop
xchg
sub
das
shrl
xchg
fiaddl
push
inc
mov
push
iret
add
and
negb
cmpsl
or
jo
fbstp
xchg
dec
cmpsb
jp
xchg
dec
mov
lret
pop
pop
mov
mov
jp
push
xor
dec
stc
scas
lret
xor
aad
sti
add
adc
xchg
or
fstpt
insl
fidivl
xor
or
sub
fidivrl
shrb
mov
sub
andb
jne
sbb
lret
adc
arpl
mov
aad
icebp
or
pop
xchg
stos
jmp
popa
pop
mov
bound
push
and
jg
fidivrs
out
mov
mov
ficompl
or
nop
insl
es
rorb
lods
mov
rorb
test
mov
aam
lods
rolb
pop
ljmp
sub
mov
sbb
lods
fs
fildll
xor
mov
xor
and
jle
mov
cmp
lahf
cmp
mov
in
pop
dec
mov
divb
mov
sub
mov
shll
inc
repz
aaa
std
inc
adc
pop
sbb
inc
push
ja
ret
mov
add
ljmp
push
int3
aaa
jne
push
pop
push
or
mov
sbb
lods
push
loopne
mov
push
adc
cmpsl
test
sbb
add
pop
daa
stos
push
mov
inc
push
test
xor
rorb
jge
dec
in
test
je
jp
popa
mov
in
mov
mov
or
leave
sub
shl
cmpsl
rcr
xchg
mov
cld
pop
xor
add
in
xor
mov
sarb
les
cmp
pop
pop
fstps
popa
and
inc
push
popf
leave
sub
mov
ljmp
inc
out
pop
mov
fstpl
jb
ficoml
ljmp
mov
nop
mov
rorl
in
sbb
push
fs
clc
mov
fsubr
xchg
cli
jno
mov
enter
add
xor
jno
rorl
es
insl
and
xchg
mov
out
hlt
sub
inc
push
ja
mov
sbb
je
out
jne
cmp
xor
pusha
pop
cli
icebp
cmpsb
outsb
add
icebp
out
pop
cld
loope
test
pop
mov
jl
stos
mov
xor
mov
stc
sub
cmpsl
cmp
lods
pop
lret
pop
outsl
fsubs
mov
inc
cld
push
inc
xchg
sbb
leave
loopne
es
adcl
dec
xor
rolb
or
js
xor
outsl
xor
mov
push
aam
mov
pop
dec
scas
mov
and
sub
sub
sbb
mov
out
and
pop
iret
or
stos
test
lock
xchg
xor
cmp
sub
jg
and
int3
xchg
shrb
int
das
xor
inc
jl
icebp
int
jo
addr16
jle
or
and
push
push
sub
in
sub
jns
test
dec
jno
and
dec
xchg
mov
pop
std
pop
pop
mov
and
mov
idivl
in
int3
mov
mov
xchg
sub
xchg
dec
jb
outsl
mov
xchg
arpl
es
dec
pop
cmp
push
xchg
in
or
dec
mov
jb
repz
mov
shlb
enter
xor
decb
aaa
cmp
sub
mov
lods
jne,pt
leave
mov
insl
shl
add
dec
cmc
mov
andb
mov
loop
in
jg
or
pop
xchg
dec
cld
sub
xchg
insl
dec
aaa
mov
mov
lret
push
mov
pushl
add
sbb
lea
sub
sub
shrb
mov
or
arpl
inc
jmp
mov
jmp
call
outsl
and
sbb
and
cmp
shr
daa
xchg
punpckhwd
in
sub
out
fincstp
mov
jo
popf
cmp
test
loope
push
cmp
ret
std
adc
cld
cmp
push
jg
sahf
cli
iret
fnstcw
daa
push
call
call
push
xor
imul
std
sti
ja
or
xchg
xor
xchg
inc
cmc
in
xchg
jecxz
inc
aas
stos
xor
jl
dec
lahf
xor
sbbb
adc
push
adc
fs
adc
adc
ret
jne
mov
or
add
daa
sar
sbb
lods
es
or
and
jno
call
xchg
rorl
fcmovnb
mov
repz
in
fwait
mov
call
out
pop
outsb
jl
jl
mov
push
jge
addb
stos
pop
jle
inc
aad
lret
fcompl
pop
sti
divb
push
andl
imul
lret
aam
out
cmpsl
dec
jp
push
sub
jg
dec
outsb
mov
neg
cld
mov
jae
cld
test
mov
jg
inc
pop
inc
into
imul
cwtl
cmpl
jbe
mov
jp
mov
cmp
movb
sub
add
shlb
ret
loop
lods
sti
loop
iret
xor
notb
add
pop
push
adc
cmp
xchg
or
and
sti
jmp
pop
pop
jp
jp
cltd
cmp
jl
pop
aad
xlat
mov
ljmp
pop
mov
pop
out
test
add
cld
pushf
cmpsl
arpl
or
xchg
push
mov
jne
jnp
inc
scas
les
mov
xlat
sub
stos
addr16
pop
outsb
push
push
cmp
imul
mov
fldt
fwait
pop
push
cmpb
mov
sub
int3
in
pop
mov
or
ljmp
icebp
enter
xor
ficompl
ret
lret
sub
adc
cli
push
sbb
cmc
jne
add
pop
cmc
or
push
mov
push
fmul
jnp
jo,pt
ret
xchg
xchg
mov
leave
jae
add
subl
push
xor
int3
push
xor
push
arpl
ret
inc
sbb
xlat
ss
push
in
and
call
adcb
jb
jmp
insb
sbb
in
or
mov
in
jle
loope
mov
push
sub
cmc
pop
sahf
mov
cmpsl
nop
nop
and
push
xchg
and
jge
call
sub
mov
je
addl
mov
and
add
nop
mov
out
inc
ret
shll
bound
bound
pop
int
add
or
jle
push
xor
xor
sbb
lahf
jns
cmp
mov
fnstcw
push
cmp
jg
pop
test
out
adc
ljmp
cmp
call
xor
sub
xchg
xchg
mov
mov
pop
adc
jns
sbb
sbb
repz
mov
and
test
jecxz
les
je
int
aas
in
repz
mov
jecxz
jbe
sbb
or
nop
inc
int3
stos
dec
enter
adc
or
and
xchg
xchg
sti
push
cmc
int
int3
pushf
dec
pop
out
and
sti
sahf
xor
jle
pop
push
jle
sub
push
es
adc
es
into
test
fwait
pop
adc
jne
adc
imul
verw
dec
dec
push
lcall
mov
subb
dec
int3
in
push
adc
sti
stos
or
adc
sub
jns
adc
stos
daa
mov
mov
mov
push
int3
cmp
push
loope
or
add
mov
and
fs
jmp
cmp
sub
push
add
adc
dec
gs
sti
scas
andl
sub
and
dec
pop
mov
cld
fdivs
es
or
mov
fs
sub
sbb
xlat
scas
and
or
cli
pop
or
inc
cmp
jbe
sub
and
in
dec
iret
stos
adc
sbb
jge
inc
sbb
xor
scas
lds
outsb
inc
shlb
xlat
filds
les
push
cmp
pop
sbb
test
das
xchg
cltd
dec
in
scas
jg
mov
sarb
inc
lds
je
jo
inc
jl
pop
adc
push
mov
or
pop
in
fldenv
sbb
shlb
mov
popf
jo
nop
stos
jb
jnp
cs
arpl
nop
sbb
jno
xor
shlb
lds
push
outsl
inc
or
xchg
mov
mov
and
stos
hlt
jo
rep
dec
iret
call
in
inc
int3
mov
add
lods
cmp
push
mov
sub
es
pop
or
xchg
dec
add
hlt
mov
insl
pop
xchg
pop
inc
jge
mov
mov
pop
pusha
mov
push
jo
das
pop
xchg
popa
adc
iret
hlt
jne
adc
and
add
xchg
push
lret
mov
shl
subb
dec
adc
inc
xor
and
xor
or
mov
add
xchg
sub
jae
cmp
lcall
sbb
in
inc
push
and
inc
dec
xor
iret
mov
les
cmp
adc
rol
daa
dec
mov
push
mov
mov
sub
iret
je
aad
movb
xchg
jge
testl
push
lods
inc
lods
inc
mov
xor
std
mov
mov
mov
data16
int3
dec
cld
jg
xchg
dec
cli
pop
sbb
adc
jbe
mov
xor
fnstsw
xor
insl
daa
insl
aad
dec
ja
sti
xchg
xchg
push
sbb
lock
add
mov
adc
out
dec
and
test
negl
and
ljmp
fsubrs
xchg
xchg
pop
jb
xchg
fcoms
aas
imul
into
cmp
imul
pop
cli
mov
cmp
inc
or
cltd
push
shrb
sub
pop
or
dec
xchg
scas
scas
inc
and
dec
jb
cltd
xchg
cmp
mov
insb
shll
dec
and
sti
insb
nop
lret
int
push
sub
rorb
mov
shlw
aam
icebp
stos
roll
out
aad
test
in
mov
fucom
loopne
ja
or
shrb
mov
out
dec
jb
and
inc
push
lcall
push
jmp
sbb
push
xor
pop
sbb
pop
mov
bound
insb
jp
cmp
adc
stc
aaa
cltd
dec
and
push
pop
pop
popa
push
dec
mov
popa
pop
and
inc
push
addr16
jle
ret
in
es
fsubp
jb
pop
xchg
mov
jle
adc
cvtps2pi
scas
fs
popf
dec
out
test
and
lds
xlat
bnd
fwait
pop
idivb
mov
pop
sub
nop
test
and
shll
cmpsb
xchg
sub
or
mov
shr
jne
cld
ss
mov
in
add
jg
pop
xchg
and
cwtl
es
in
or
sarb
jmp
mov
adc
xor
cs
mov
jnp
mov
jbe
imul
loopne
nop
out
or
pop
xor
jecxz
cmp
mov
and
and
mov
dec
mov
adc
sbb
dec
mov
or
mov
imul
inc
sbb
add
outsl
xor
pop
idiv
mov
lret
lahf
add
xchg
das
lea
sbb
xor
movsb
jl
into
mov
ret
dec
jl
dec
fimull
out
dec
push
fsub
fbstp
stc
imul
pop
dec
cwtl
fistl
imul
js
sahf
cmp
add
aaa
dec
adc
sti
mov
mov
subb
fcomip
pop
testl
rcr
pop
adc
rorb
dec
icebp
dec
movsl
leave
mov
and
add
lods
fsubrp
inc
stos
test
icebp
add
out
data16
add
xorl
and
dec
dec
add
ljmp
dec
or
gs
xor
sub
cwtl
cltd
inc
daa
pop
inc
ja
fs
mov
pop
xchg
jmp
outsl
mov
lahf
inc
addr16
jge
xlat
cmp
and
xor
xor
mov
and
dec
push
xchg
enter
stos
or
inc
scas
jnp
in
or
pop
popa
mov
sub
lcall
pop
inc
add
add
imul
or
or
inc
sbb
jns
xchg
mov
cmp
das
cltd
add
mov
in
push
push
cwtl
lret
cli
mov
rolb
mov
jno
xlat
xchg
js
or
inc
lret
jmp
dec
adc
hlt
pop
std
push
movsl
cmp
icebp
xchg
jnp
fsubr
adc
js
and
push
mov
jbe
enter
push
sub
xchg
outsb
inc
xchg
inc
ja
int
xchg
mov
js
dec
pop
xchg
dec
or
mov
push
jnp
ljmp
cmc
les
mov
cwtl
xchg
mov
push
movsl
enter
add
jns
bound
addr16
mov
ss
xor
aas
lods
jl
fs
cvtpi2ps
jo
jo
mov
gs
mov
pop
fsqrt
pop
jno
or
into
dec
into
fmuls
mov
xchg
loop
pop
movsb
dec
jb
xor
leave
jle
out
ds
dec
xchg
mov
add
pushf
cmc
mov
sbb
push
arpl
ret
int3
loopne
push
mov
add
mov
scas
pop
rcr
mov
rolb
jge
push
icebp
daa
inc
leave
test
jmp
in
add
popa
or
push
sub
push
mov
xor
push
outsb
jnp
sub
and
pop
inc
lret
xchg
mov
mov
cmc
mov
sub
push
imulb
cmp
push
adc
xchg
fwait
pop
mov
ret
jl
dec
sub
mov
nopl
pop
jnp
dec
rcl
loope
cmp
pusha
lahf
xchg
inc
pusha
and
sbb
pop
add
sbb
test
scas
scas
jb
movsl
push
add
mov
adc
sbb
repz
shll
dec
sub
sub
je
xor
leavew
inc
out
lock
sbb
sbb
inc
pop
push
rorl
cmpl
push
cmp
inc
mov
test
push
mov
test
cmc
iret
xchg
je
inc
test
out
and
mov
seta
out
mov
xchg
adc
in
xchg
loop
imul
xchg
cmpsb
lock
push
pop
mov
cmp
lds
insb
lahf
mov
inc
push
inc
mov
dec
xchg
sahf
jo
jmp
popa
repnz
in
dec
push
pop
adc
fsubrs
xchg
cmc
stc
sbb
daa
mov
jae
or
and
mov
jbe
es
dec
sub
sub
imul
jns
cmp
xchg
bound
xchg
cmp
lcall
lds
lods
sbb
leave
cmpsl
repz
js
rorb
jmp
das
movsb
adc
int
dec
add
jge
rolb
dec
xlat
scas
sub
sub
pop
adc
push
stos
adc
mov
outsb
push
mov
cmp
or
dec
push
sti
adc
xchg
sbb
test
in
rcl
jmp
pop
pavgb
ljmp
pop
jae
in
cltd
pop
cmp
rcrb
fiaddl
lea
xor
mov
test
scas
and
dec
lds
and
inc
adc
ljmp
mov
push
lds
jecxz
mov
jb
add
mov
push
das
mov
ja
shrl
lea
jno
cli
gs
jno
sub
cmp
out
aas
mov
into
sub
bound
scas
jl
xchg
int3
and
cmp
out
stc
dec
mov
cwtl
mov
mov
pop
lret
outsl
pop
cmp
xchg
enter
push
xchg
xor
inc
sbb
mov
inc
sbb
ss
xor
mov
jns
cmpsl
adc
mov
aad
std
cmpsb
mov
inc
orb
cmp
sbb
lock
mov
xchg
push
rol
xchg
lcall
pushf
test
jecxz
stos
pop
xchg
scas
jbe
or
mov
xchg
push
and
pop
fstpt
fbld
test
pop
add
adc
add
orps
shrb
daa
fs
jp
daa
push
fcompl
lods
mov
rorb
mov
jo
pop
out
sarb
ret
push
or
mov
inc
cmp
mov
add
sbb
or
mov
repz
lds
es
ljmp
mov
out
mov
loop
sub
sub
lods
inc
inc
jl
cmp
xlat
adc
leave
movsb
out
mov
loope
inc
or
inc
std
add
jg
out
cs
mov
adc
dec
cwtl
fcoms
push
arpl
mov
lds
mov
jle
and
push
push
add
jmp
sub
nop
inc
mov
pop
adc
arpl
sub
mov
jae
nop
mov
ljmp
call
and
jge
dec
pop
ret
push
insl
or
outsb
cmp
scas
dec
rcrb
cmp
call
or
sub
cmp
fisubl
push
sahf
roll
loopne
in
xor
data16
pusha
or
aaa
adc
cli
dec
pop
or
adc
add
aas
adc
push
sub
or
push
rol
pop
pop
pusha
xchg
mov
pushf
int3
jbe
int3
mov
lret
js
inc
int
mov
xchg
dec
adc
in
xchg
mov
inc
jbe
shrb
shlb
mov
pop
mov
jl
jns
mov
imul
xchg
hlt
je
sub
sbb
sub
mov
add
fwait
ds
push
push
popa
add
mov
frstor
jnp
aad
mov
lret
bound
out
lea
inc
push
jl
inc
addb
jbe
pusha
pusha
fsts
cs
aam
jne
cld
mov
fiaddl
fsubs
out
sub
arpl
shlb
add
sahf
dec
mov
inc
xor
push
push
es
xchg
lods
cmp
mov
inc
pop
fs
cmp
in
adc
dec
add
les
add
xor
mov
mov
fprem1
fists
pop
imul
jo
shl
push
mov
iret
jecxz
movsb
cmc
das
fwait
adc
repnz
lahf
cmp
cmp
sub
pop
fnstenv
lahf
add
cmp
or
pop
adc
dec
leave
mov
adc
mov
pusha
and
testb
mov
jle
push
add
dec
lret
lret
adc
sbb
mov
xchg
jecxz
loopne
add
adc
adc
cmc
mov
out
or
sbb
jbe
out
in
sbb
outsl
ret
mov
and
jecxz
push
xlat
shlb
daa
cli
push
and
add
insb
pusha
sub
idiv
pop
dec
push
and
push
in
add
jl
std
in
sub
dec
jecxz
sub
out
cmpb
sub
mov
test
push
lds
jecxz
adc
add
adc
xor
cli
xlat
jnp
and
arpl
data16
pop
roll
scas
mov
adc
or
push
mov
test
xchg
pop
sahf
in
inc
stc
scas
inc
in
xchg
lret
rcll
sbb
or
aaa
insl
dec
pop
dec
sub
mov
jae
mov
dec
lcall
imul
push
int3
pop
jle
ret
cmpsl
mov
xchg
jmp
mov
cmp
pop
pop
pop
pop
adc
mov
cmp
sbb
add
add
jns
push
mov
jl
mov
sub
leave
lret
add
or
jbe
push
jecxz
cmpsl
in
add
mov
loope
ja
test
sbb
incl
sbb
mov
jne
and
jg
aaa
inc
divl
jbe
sub
pop
push
insb
sbb
decl
sub
sub
mov
shl
add
les
push
out
sub
popa
scas
stos
mov
jmp
or
mov
mov
xor
sbb
xor
sahf
jb
push
mov
sub
aad
mov
inc
pop
mov
add
pop
arpl
jge
pop
xchg
dec
mov
pop
mov
jl
pop
pop
sub
adc
into
xor
xchg
imul
lods
fsts
lock
orl
mov
xchg
loop
mov
pop
xor
outsl
outsl
sub
int3
or
adc
xor
dec
mov
dec
in
xchg
jns
das
mov
test
iret
pop
leave
mov
test
push
int
xor
leave
pop
mov
pusha
jmp
pop
sbb
jge
lea
popa
iret
pop
iret
cwtl
lock
sti
in
xchg
and
sbb
cmpsb
ljmp
out
inc
jmp
fldcw
bnd
inc
jle
clc
je
dec
in
add
scas
mov
stc
imul
pop
push
jle
call
movsb
incb
jmp
cmp
fcmovnb
xor
pop
lret
xor
mov
stos
and
leave
inc
adc
lods
dec
aam
xlat
cmp
arpl
mov
cli
out
mov
pop
xchg
movsl
sbb
into
cmp
popa
iret
adc
inc
pop
mov
loopne
sub
xchg
cmpsl
mov
jp
sarb
pop
rcll
or
lcall
mov
bound
ss
add
push
fisubs
in
loopne
mov
gs
stos
push
pop
pop
mov
stos
in
mov
sbb
cmp
ret
setl
dec
popa
mov
mov
pushf
sub
jl
fs
push
cmpsb
cmovle
fxch
dec
in
out
sub
scas
xchg
xor
pop
or
fisttps
das
mov
addr16
icebp
mov
jl
cli
movsl
ficompl
jo
je
pop
mov
xlat
cltd
lock
js
fldl
add
lcall
mov
xlat
sub
sub
push
add
imul
jae
repnz
jae
stc
sahf
iret
sbb
dec
lret
call
ja
gs
jae
mov
insl
sbbl
xchg
aaa
dec
cmp
add
repnz
imul
sub
std
jae
fistl
ja
dec
xchg
repz
arpl
xor
ss
push
and
cmp
sbb
mov
lret
pop
icebp
loopne
cli
ficompl
icebp
cli
push
not
cmpsl
pop
xlat
push
jg
cmp
inc
pop
repnz
sbb
jmp
and
lret
mov
push
jle
loopne
adc
push
aad
aam
mov
mov
lcall
addr16
mov
push
xchg
or
xchg
pop
or
push
adc
adc
sbb
fmull
out
pop
rorb
xchg
inc
and
test
enter
pop
add
jp
add
mov
mov
mull
shll
loop
insb
incl
jl
xor
clc
or
adc
inc
inc
lret
fsubrs
loop
dec
dec
mov
fsubl
aas
jnp
out
push
mov
test
sbb
call
in
dec
adc
xlat
je
push
cmp
repnz
fmuls
mov
cmp
mov
addr16
xchg
clc
dec
mov
pushf
inc
mov
imul
sbb
lea
cmp
clts
ret
push
inc
add
jb
sar
rorb
setge
stos
and
push
movlps
jle
dec
aas
rcrl
jmp
clc
in
lea
mov
mov
jnp
sahf
xorl
mov
xor
es
test
xchg
mov
mov
mov
test
enter
nop
and
pop
mov
or
adc
push
lea
dec
cmp
jge
cwtl
or
push
push
cmpsl
inc
inc
mov
aad
and
ljmp
dec
loope,pn
xor
arpl
repz
push
lcall
adc
mov
rep
inc
cs
mov
mov
push
xchg
push
adc
test
and
push
inc
nop
cmpsl
loop
pop
addl
das
pmulhuw
mov
and
pop
pop
insb
or
stos
mov
daa
das
mov
insl
pushf
push
jno
stos
pop
inc
mov
pop
push
shrl
aaa
in
sbb
jns
insl
push
subb
subl
pop
sar
ret
jbe
jecxz
pop
pop
xlat
mov
push
imul
dec
push
loopne
xor
loopne
add
xor
out
pop
or
add
and
std
out
lret
out
xchg
xor
push
inc
divl
cmpb
fisttps
fisubrl
push
ucomiss
jg
leave
push
mov
jae
addr16
dec
hlt
mov
push
mov
or
mov
add
and
call
movsl
or
ficomps
rsqrtps
cltd
push
or
or
pop
leave
cmp
incl
stc
scas
sub
int
into
shl
popf
fidivs
inc
icebp
call
mov
jb
fcoml
enter
shlb
jb
xor
or
fidivl
add
ja
out
cmp
xchg
mov
lcall
repnz
xchg
stos
cwtl
pop
mov
jmp
add
sub
repz
inc
int3
dec
imul
adc
and
movhps
inc
rcrl
int
out
mov
xchg
in
in
arpl
imul
inc
ja
mov
mov
enter
stc
std
sub
fwait
loope
add
add
mov
push
jg
repz
jae
loope
pop
into
mov
xor
xor
jbe
mov
or
and
pushf
mov
add
iret
ret
add
xor
adc
mov
sub
popa
dec
dec
and
cld
xchg
repz
mov
nop
sub
push
jl
mov
dec
lock
aaa
repnz
mov
sbb
iret
scas
or
sbb
aaa
loope
jge
cmp
mov
les
mov
mov
jp
mov
je
gs
push
lahf
xchg
pop
movsb
out
dec
fisttpl
cmp
xchg
mov
pop
loope
push
jns
scas
idivb
xor
xlat
push
adc
out
dec
xchg
iret
add
test
mov
int
je
and
repz
or
mov
ret
lods
cltd
adc
mov
int3
out
xchg
cmc
or
mov
test
adc
ds
iret
sbb
jno
jle
adc
xor
pop
sub
out
add
push
dec
je
scas
pop
imul
sub
inc
jle
xchg
test
sub
pop
std
pushf
jl
test
fisubrl
in
push
xor
pop
or
cld
or
leave
inc
mov
imulb
mov
ljmp
ds
xor
fs
push
sbb
adc
shlb
test
cld
sub
mov
subl
pop
test
mov
mov
pop
push
add
int3
xchg
or
xor
and
iret
pop
dec
xchg
xor
int3
xchg
or
ja
push
sub
or
mov
adc
push
mov
jg
icebp
es
loope
enter
lahf
mov
pushw
mov
jp
imul
add
jg
xor
push
dec
inc
les
jmp
js
fldl
or
leave
add
arpl
stos
outsl
ja
movsb
mov
fistpl
stos
test
adc
lds
cmp
sti
js
push
icebp
push
dec
pop
add
xchg
cmc
sbb
int3
jmp
sub
loop
xchg
pop
dec
push
inc
pop
cltd
iret
cli
sub
and
scas
xchg
out
xchg
pop
ret
jns
pusha
cwtl
fisubrs
bnd
dec
jg
loope
jne
cwtl
dec
loope
adc
pop
ficomps
imul
loop
add
adc
mov
xchg
lea
andb
sub
cld
inc
add
cmc
or
pop
pop
fstpt
add
cmp
mov
lock
faddl
jae
adc
out
sbb
inc
repz
and
or
gs
xor
mov
in
cmpsl
cmp
push
mov
das
sbb
xchg
clc
add
out
imul
mov
push
sti
daa
mov
dec
es
mov
cmp
lock
pop
nop
mov
incb
fistps
ja
lods
pushl
or
or
inc
push
pop
clc
sub
mov
insb
in
stc
outsb
inc
lods
insl
sbbb
and
xchg
mov
fwait
shlb
mov
cwtl
mov
stos
int
lret
add
ficompl
int3
aam
add
lret
lret
sbb
add
add
std
inc
lds
mov
dec
xor
repnz
aaa
jmp
loopne
mov
sbb
add
hlt
mov
mov
cmp
lods
rcrl
mov
addr16
push
sub
pusha
push
sub
and
ljmp
add
je
shll
push
cmc
sar
or
cmpsl
jnp
fbstp
sub
dec
mov
out
daa
and
cmp
jge
test
inc
enter
push
in
jmp
and
xchg
sbb
in
pop
das
test
sub
shll
mov
mov
jmp
xor
into
arpl
or
dec
roll
ror
cmpsb
xor
push
jle
rcll
test
sub
in
fisubs
mov
pop
enter
insl
jl
and
mov
cmp
cmpsl
jno
scas
ret
lcall
xor
adc
jle
sub
mov
repnz
push
shlb
popa
cs
add
popf
movb
jbe
iret
ss
xchg
jo
xor
insb
sbbl
lock
insb
in
es
or
subb
pop
stos
xchg
mov
push
lds
mov
ror
sbb
orl
jo
inc
push
and
loop
int
inc
adc
test
and
daa
fwait
xchg
cmpsb
pushf
pushf
pop
test
sbb
pusha
pop
jl
shll
out
andnps
in
mov
sbb
mov
fdivr
subl
lods
cmpsb
cmp
mov
cs
shlb
and
cmp
inc
xchg
mov
jmp
data16
push
inc
xchg
mov
fisttpl
dec
imulb
add
cmp
repz
jmp
jmp
lret
and
sahf
addr16
pop
xchg
pop
stos
cmp
dec
push
repnz
lahf
aad
and
adc
push
movsb
adc
notb
jge
popf
mov
test
out
test
lock
aad
sub
adc
and
mov
aam
and
testl
insl
test
jp
les
pop
cmp
imul
mov
mov
push
call
jb
test
fildll
dec
mov
mov
fistps
mov
jge
cmp
inc
cld
inc
pusha
jb
mov
sti
xorl
push
in
jb
test
add
in
add
pop
pop
sbb
jbe
in
mov
in
je
cmpsl
hlt
cmpsb
xchg
sub
in
push
mov
push
stos
mov
pushf
xchg
adc
imull
sarl
mov
cmp
js
push
lret
add
xchg
ret
mov
ja
fdivrs
test
enter
pop
cmp
daa
stc
orb
je
fnstcw
movsb
or
cmpsl
sbb
and
hlt
push
mov
pop
pop
jno
xchg
ret
mov
loop
sbb
lea
jbe
or
xchg
dec
jbe
xchg
cmp
mov
adc
cmp
popa
jl
dec
mov
int3
jecxz
adc
outsl
inc
jbe
mov
outsl
divb
lea
pop
into
or
mov
loop
bound
inc
mov
sub
adc
xchg
divl
xor
add
test
cmpsl
movsb
dec
sub
out
sahf
imul
sub
mov
xor
int
mov
daa
jo
dec
js
in
xor
inc
inc
inc
push
sbb
icebp
mov
rol
sbb
call
lods
inc
pop
dec
push
out
sub
stc
out
and
test
ja
mov
mov
punpcklbw
lock
mov
inc
cmp
xor
push
sbb
jge
loop
in
and
push
jmp
xchg
push
add
or
and
loop
push
or
pusha
adc
icebp
xor
push
pop
sbb
cmp
lds
cmpsb
add
hlt
sub
loope
shll
jg
and
icebp
inc
push
add
aad
cwtl
sarl
test
sbb
out
icebp
pop
cmpsl
push
fwait
mov
adc
stc
test
loop
cmc
js
in
or
mov
cmp
mov
cld
fnstenv
push
test
popf
push
mov
dec
mov
dec
jl
dec
addr16
fisttpl
dec
add
add
jp
jecxz
inc
pop
outsl
add
rclb
mov
lcall
in
mov
or
scas
push
push
lahf
xchg
js
rclb
mov
enter
lock
pop
and
mov
icebp
mov
jmp
lret
xchg
add
call
jle
adc
call
lahf
jbe
sub
loop
insb
das
ds
lret
dec
iret
push
jge
sahf
push
mov
lret
mov
and
mov
scas
stos
addl
cmp
pop
push
repnz
inc
cmp
jmp
popf
dec
fisubs
imul
mov
dec
xor
loop
mov
dec
push
pop
jg
inc
jg
lahf
adc
test
call
shrl
es
lret
mov
popa
inc
jmp
into
ud1
inc
push
fisubs
gs
lahf
rclb
rorl
sahf
mov
mov
insb
int
mov
cmpsl
dec
mov
mov
into
jle
dec
lds
fnclex
mov
andl
add
outsl
xor
stos
sub
adc
jp
mov
cli
test
lock
fstl
and
bound
sbb
and
pusha
loopne
dec
je
add
pop
push
sub
movsl
xchg
sub
sub
add
mov
push
pusha
xchg
enter
push
clc
rorb
gs
adc
xor
xor
jne
incb
and
jo
sar
mov
dec
in
cmc
pop
and
aaa
jecxz
fcoml
sbb
lods
dec
pop
inc
popa
imulb
pop
mov
xchg
sbb
or
arpl
in
sbb
idivl
dec
rorl
push
dec
sub
mov
ds
test
jle
sub
mov
push
ss
pop
xor
mov
dec
mov
bound
sub
repnz
mov
sub
dec
dec
pop
mov
dec
xchg
jae
cmp
inc
xlat
push
inc
test
in
rclb
mov
cmp
push
not
xor
nop
movsl
test
push
enter
add
testb
popa
es
push
lods
sub
pop
inc
cli
dec
aam
cli
jl
shrd
jp
cmp
and
push
stos
xor
sbb
bound
xchg
push
notb
lcall
pop
insl
js
push
push
fstp
lods
mov
pushaw
xor
in
inc
lds
les
xchg
inc
addr16
jne
inc
jmp
xchg
outsl
cs
jp
rcl
sbb
into
mov
insb
stos
push
loopne
out
imul
jp
aam
rclb
cmp
fmuls
pop
lcall
rclb
imulb
test
xchg
or
mulb
dec
iret
sbb
cmp
adc
inc
cs
test
repnz
mov
mov
xchg
mov
shlb
cmc
xchg
hlt
mov
jg
fimuls
add
dec
xor
inc
jmp
mov
dec
cld
inc
dec
fildl
out
dec
push
mov
scas
daa
loopne
in
sub
sub
xchg
sub
sbb
sub
addl
xor
scas
dec
sbb
dec
cmp
add
and
jb
dec
cmp
test
add
jbe
add
out
jge
out
out
mov
daa
add
pop
dec
nop
push
adc
and
xchg
sbb
sarb
push
out
das
add
out
push
jp
xor
mov
lret
mov
divb
mov
push
xchg
loopne
or
ror
fldenv
cmp
mov
mov
rolb
adc
nop
dec
adc
and
jp
dec
pop
dec
mov
cmpsl
xor
ffreep
sbb
imul
cmp
test
pop
fstl
nop
nop
ret
jmp
xor
leave
push
jg
xor
mov
lea
fwait
pop
xchg
popa
jmp
dec
adc
call
or
shl
sub
xor
dec
add
cmp
jnp
insl
cltd
imul
dec
cmc
aaa
jae
enter
dec
cld
and
pop
push
aam
jns
decl
mov
or
icebp
das
push
in
adc
ljmp
into
rorb
sbb
push
cmpsl
xor
loop
add
mov
add
push
out
fwait
mov
or
sub
cwtl
xchg
mov
filds
jmp
xor
std
sub
adc
in
and
jns,pn
aad
aad
ret
adc
xchg
cmp
cmpb
xor
xor
xor
mov
ret
scas
jp
and
pop
shlb
adc
sbb
mov
cmp
and
fidivs
push
fstl
pusha
and
out
add
mov
je
xchg
lods
dec
mov
mov
js
fwait
push
je
call
repnz
mov
jle
lcall
aad
es
andb
stos
data16
fnstsw
cmp
xor
push
sbb
mov
repz
ds
sar
inc
lret
add
ret
inc
into
jp
push
mov
jl
pusha
cmpb
mov
and
jb
movsb
and
pop
add
mov
sahf
jb
dec
push
jle
lahf
dec
jg
push
insl
ss
and
ret
scas
aad
push
es
lret
mov
test
add
inc
lret
add
pusha
and
mov
xor
movsb
inc
pop
mov
or
push
fidivrs
les
jl
popa
or
adc
dec
and
xchg
or
mov
adc
sbb
xchg
jno
mov
xchg
add
fsubp
pop
xor
cld
inc
enter
jge
sarb
shl
xlat
pop
ficomps
mov
xor
jge
mov
xorl
loope
adc
dec
idivb
roll
push
dec
sub
sti
mov
je
or
pop
add
push
daa
jecxz
subl
out
mov
out
or
mov
mov
rolb
mov
repz
ljmp
sahf
cwtl
mov
cmc
cmpb
hlt
fsubrs
cwtl
jmp
es
mov
dec
pop
jge
sbb
xor
stos
movsl
adc
imul
jne
lret
or
and
lock
sub
mov
lods
cmp
pop
stos
lea
jo
and
or
and
cltd
xchg
addr16
add
push
mov
xchg
pop
sub
and
jo
fdiv
pop
fisubrs
adc
pusha
mov
jns
sub
sub
outsb
lds
stos
filds
repnz
jmp
mov
hlt
icebp
test
movsl
mov
cltd
jnp
bound
pusha
add
jp
jne
mov
lret
jns
or
hlt
sub
inc
test
jb
lods
test
insb
fidivl
xchg
test
sbb
mov
push
sub
cmpsl
pop
xchg
rolb
mov
int
dec
inc
xor
adc
in
or
or
gs
and
jo
xchg
inc
mov
cmp
out
inc
fcomps
inc
or
push
push
insl
jnp
cwtl
pushf
and
push
ret
test
in
pop
rep
jl
test
leave
cmp
pop
data16
mov
sub
inc
das
mov
rolb
movsl
insb
mov
nop
xchg
movsb
leave
orl
mov
push
imul
sub
outsb
xchg
pop
popf
sbb
stos
pop
pusha
push
call
ret
dec
ds
xchg
stos
das
jns
fdivrl
xchg
sbb
fcomps
mov
je
fdivl
jle
lods
lock
cmp
aam
pop
mov
imul
cmp
cmc
sar
cmp
push
fwait
mov
sbb
movsb
scas
dec
repnz
arpl
add
mov
sub
jp
fdivr
das
ret
cld
shlb
lcall
sahf
inc
fisttpl
sbb
and
jae
add
sahf
movsb
mov
dec
jo
inc
dec
pop
mov
sarb
and
or
pop
adc
gs
insl
inc
sub
cmp
push
jns
popf
or
xor
std
push
scas
das
nop
jns
pop
out
pop
dec
nop
in
xor
ljmp
adc
movsl
cli
dec
or
xchg
pop
fistps
mov
xchg
into
shlb
test
mov
xor
sub
cld
or
mov
in
mov
scas
shr
pusha
insb
and
dec
mov
lea
sbb
shll
add
dec
jmp
jne
pop
inc
flds
nop
scas
fwait
insl
stos
lahf
pop
daa
inc
jge
insb
xchg
pop
dec
add
mov
or
dec
pushf
rcll
lea
aam
jl
jmp
jnp
push
push
xor
fcoml
or
loope
mov
adc
test
push
loop
test
jns
cli
data16
push
and
out
je
mov
push
cmp
sub
sbb
rorl
in
xlat
cltd
and
aam
in
mov
jge
inc
ret
call
or
add
int3
ljmp
mov
mov
jmp
sub
mov
leave
fistps
imul
ss
mov
out
add
jnp
sbb
xchg
sbb
jno
inc
jle
int
rcr
cli
inc
stos
addr16
dec
sub
ficompl
cli
fdivrl
inc
test
decb
adc
test
outsl
add
daa
mov
je
ret
dec
lahf
jg
jb
mov
mov
xor
shlb
mov
and
xchg
arpl
mov
dec
imulb
jg
lahf
js
pop
sbb
int3
call
push
sub
mov
scas
xor
cmpsl
push
add
lds
add
ret
dec
xor
or
add
lea
cmpsb
in
xor
out
xchg
dec
push
sub
sahf
test
sub
mov
loope
js
push
popf
adc
outsl
clc
inc
adc
clc
sub
xchg
hlt
pop
and
pop
sarl
mov
push
pop
ja
test
iret
push
jmp
out
jnp
or
in
mov
in
fwait
xorb
mov
fsub
sub
mov
add
jae
jge
pop
sbb
inc
arpl
cmp
aam
pop
mov
sub
das
and
add
loop
sub
dec
pop
lret
cmp
lods
cmpsl
or
or
dec
xchg
push
scas
aad
fdivrs
sbb
mov
inc
arpl
out
clc
ret
inc
lods
xchg
loop
jmp
jo
das
mov
xchg
xor
out
gs
push
shll
dec
shll
das
sahf
push
mov
out
es
insl
xor
lods
loopne
testl
mov
out
pop
add
in
jne
mov
dec
stos
and
test
sbb
mov
dec
pop
or
jge
add
or
sub
inc
in
inc
cmp
push
cmpsl
fisttps
and
sub
int3
pop
push
stc
sbb
loopne
sti
and
mov
fdivrl
addr16
and
push
imull
sbb
cltd
aam
scas
push
in
fs
push
cwtl
add
jmp
inc
xlat
adc
movsl
inc
mov
mov
sarl
jmp
cmp
add
rcll
xor
outsl
pop
lea
adc
jo
mov
xchg
movsb
es
addr16
or
pop
daa
fistps
aad
pop
inc
add
pop
sbb
add
daa
sbb
or
and
imul
sarl
cmpsl
mov
or
mov
ret
lods
inc
cli
push
lret
fadds
imul
fs
lea
and
xor
dec
sti
push
faddp
test
mov
mov
dec
addr16
xchg
test
and
lods
pop
jge
loope
mov
mov
repz
daa
add
movsl
jp
mov
gs
in
and
iret
xor
add
dec
inc
inc
dec
das
pop
call
cmp
ror
roll
popf
daa
jmp
add
fs
lahf
sarl
dec
cltd
and
jo
ds
dec
lock
test
cmp
pop
push
addr16
sbb
xchg
in
dec
pop
ret
pop
lds
movsb
cmp
push
cmp
aaa
mov
pop
jge
inc
dec
mov
or
fs
cmpsl
dec
leave
cmp
aas
shl
lret
pop
outsl
add
dec
jmp
test
jbe
cmp
lods
xchg
sbb
orb
and
sbb
adc
sbb
xor
out
lret
shll
dec
icebp
mov
mov
push
adc
int3
jns
push
xchg
shlb
test
dec
aad
cmp
mov
push
ret
inc
hlt
jne
adc
imul
push
adc
xor
adc
imul
and
lcall
inc
sub
push
je
arpl
outsb
jge
dec
ret
in
out
mov
rcrl
jmp
cmc
or
adcb
mov
test
xchg
iret
add
pop
sub
out
push
pop
repnz
xchg
or
out
data16
aad
mov
dec
pop
dec
ret
imul
sbb
rcrb
xchg
sbb
mov
sub
int
int3
dec
push
in
insb
leave
mov
fmull
out
subb
inc
mov
int
dec
xchg
incb
dec
pop
xor
jae
push
or
clc
call
leave
fsubr
cli
jg
lods
inc
inc
mov
mov
lret
xorb
leave
dec
popf
lods
scas
test
and
orb
add
fs
adc
or
pop
xchg
inc
mov
test
aas
enter
ficompl
pop
xchg
out
fwait
cmpsb
inc
test
call
dec
test
pop
loope
pop
xor
daa
mov
sbb
out
pop
mov
jle
add
inc
pop
push
add
mov
sbb
in
and
jmp
sti
pop
mov
xor
pop
add
addl
cld
mov
mov
bound
xor
int
pop
inc
leave
add
sbb
jge
shlb
pop
fs
dec
mulb
aaa
or
mov
sahf
sbb
arpl
sub
add
xchg
lret
rcll
mov
mov
outsl
into
icebp
sbb
adc
xor
data16
cld
and
and
jp
ret
divl
in
push
mov
mov
push
adc
pop
adcb
sub
fwait
outsb
mov
jg
in
lock
add
cli
push
orb
frstor
cmp
push
sub
das
in
aaa
cmp
jo
test
cmp
push
hlt
das
jae
adc
mov
cli
and
mov
xchg
in
jecxz
mov
divb
inc
test
push
out
popf
pushf
pop
dec
pop
dec
or
inc
xor
int
dec
xchg
mov
dec
mov
test
pop
mov
notb
test
adc
call
ficompl
jmp
fcomip
push
cs
nop
mov
mov
cld
icebp
jno
sti
scas
xor
imul
aam
push
mov
adc
inc
mov
jns
mov
xor
and
out
and
sub
inc
mov
sub
outsb
lcall
mov
jge
or
mov
das
lahf
push
stc
scas
call
rcrl
push
repnz
sbbl
sbb
pop
adc
test
jbe
fnstcw
and
jne
xor
or
inc
stos
cmpsb
inc
outsb
mov
stc
mov
push
cli
mov
mov
xchg
ret
leave
and
adc
mov
jmp
xor
movsb
dec
mov
orl
adc
leave
clc
mov
inc
push
nop
popa
in
jmp
pop
aam
lahf
sub
push
sub
daa
push
and
mov
mov
nop
ja
imul
mov
cmp
jp
cld
bound
cmpsb
push
out
dec
cmpsb
mov
xor
dec
enter
lcall
mov
loope
in
insb
mov
test
push
inc
js
push
rorl
mov
sub
and
lret
int3
xchg
inc
xor
add
xchg
inc
popa
jno
scas
mov
and
cmp
xchg
in
push
lods
pushf
rdpmc
pop
pop
lods
or
sbb
xlat
pushf
mov
add
cmp
loop
push
data16
push
and
daa
imul
dec
mov
sti
push
sti
pop
mov
imul
fsubrl
jl
lret
stc
adc
jge
pop
fwait
clc
adc
jnp
push
cli
mov
sarl
push
jo
ror
and
push
pushf
data16
cli
ja
fnstcw
flds
icebp
dec
jle
pop
std
sub
fincstp
push
repz
movsb
repnz
fisubrs
addr16
dec
rol
dec
pushf
cs
adc
hlt
aad
std
test
mov
dec
cmp
jnp
mov
pusha
cmp
mov
mov
test
mov
push
push
pop
and
mov
repz
int
ja
xor
inc
inc
sub
pop
jb
ljmp
inc
mov
sub
add
jne
fs
ljmp
cmp
mov
sbb
push
xchg
std
sti
inc
arpl
mov
dec
sbb
sub
cmp
jo
jno
xchg
stos
mov
mov
mov
cmp
add
push
push
cwtl
pop
fwait
cwtl
mov
jns
dec
cwtl
in
hlt
lea
insb
pushf
sbb
adc
mov
and
xlat
mov
nopl
add
aas
add
xor
push
lahf
jo
ss
fldl
jo
shll
daa
xor
ja
xchg
inc
sub
in
jnp
lods
fstps
cmp
inc
loope
xor
test
int3
pop
das
pushf
shr
in
xchg
dec
push
mov
sbb
xlat
cli
sbb
push
insb
dec
mov
jl
and
mov
dec
push
sbb
xchg
leave
jb
test
icebp
mov
add
hlt
mov
mov
dec
jae
jae
notb
xchg
clc
fildl
sub
cmp
imul
jae
push
dec
outsb
xlat
ret
xchg
cmp
push
sub
insl
mov
test
mov
fsubrl
bound
cmp
sarb
inc
cwtl
inc
mov
jbe
and
jo
mov
dec
pop
jle
mov
sub
adc
stc
in
add
popa
movl
imul
push
mov
mov
add
push
and
dec
sub
repnz
lods
mov
inc
mov
popa
sub
lret
jb
test
repnz
cmp
cmp
jle
push
imul
hlt
negl
jge
mov
add
bound
jmp
and
sub
repnz
test
sub
jb
push
mov
add
rcrb
xchg
jge
jns
cmp
ret
clc
loopne
dec
or
jnp
lahf
push
cmp
xor
ljmp
addr16
je
jg
jbe
fisubs
push
or
push
mov
outsb
xchg
cwtd
inc
ret
fwait
lret
into
mov
jecxz
xchg
test
inc
jecxz
incl
aas
mov
addr16
pushf
cmpsl
movl
jno
daa
mov
push
xor
lods
mov
sarl
adc
enter
pusha
stc
fcom
pop
bound
gs
adc
lock
mov
inc
or
mov
adc
mov
inc
add
adc
mov
add
dec
iret
sbb
aad
iret
jmp
ljmp
addl
xor
xchg
sbbb
loop
sbb
xchg
add
sbb
js
ret
das
out
jmp
sub
push
pop
mov
pushf
add
out
lds
movd
or
push
fdivrl
pop
dec
push
outsl
mov
test
ljmp
jmp
mov
clc
push
sub
iret
jo
mov
ret
push
std
xor
and
xor
mov
iret
dec
pop
clc
push
rcl
jne
dec
sbb
movsl
je
fdivrs
lahf
repnz
ret
das
imul
dec
cmp
mov
int3
push
dec
cmp
insl
aas
and
enter
mov
and
sub
mov
add
inc
cmp
or
lock
gs
pop
xchg
fsubrp
ret
cmpsl
inc
xor
add
imul
lret
xor
pop
mov
out
sti
mov
push
dec
test
fisttps
bound
mov
ljmp
mov
insl
mov
arpl
orb
and
push
shrb
sbb
fcoml
inc
enter
lahf
lods
loope
mov
mov
xor
dec
fcompl
lret
dec
sbb
clc
cli
mov
xchg
cltd
jno
mov
insl
jmp
dec
iret
fisttps
mov
in
stos
xchg
push
xchg
repnz
frstor
stos
push
xchg
iret
mov
aaa
mov
scas
test
lea
cld
xor
cmp
dec
stc
jbe
out
push
push
mov
clc
imul
dec
daa
mov
jg
mov
adc
popf
xchg
mov
outsb
lock
inc
jle
lret
sti
sbb
jns
js
pushf
rcll
into
notl
adc
lret
xchg
xchg
sbb
sub
pusha
push
mov
lea
mov
dec
sub
dec
inc
cmp
pop
pushf
out
mov
iret
mov
mov
cmp
mov
shrl
test
push
out
dec
out
inc
sbb
repz
mov
sbb
mov
scas
adc
add
fdiv
cmp
mov
gs
add
scas
frstor
push
bound
inc
sarb
inc
fcompl
mov
inc
and
or
loopne
add
shl
inc
push
data16
shl
loopne
shrb
xchg
gs
mov
movsb
push
pop
data16
outsb
icebp
mov
adc
lcall
cmpsl
sub
mov
xchg
mov
mov
outsl
jge
sbb
fnstenv
cmpsl
dec
cmp
jae
push
adc
mov
cmp
int3
dec
es
sbb
jge
mov
mov
pop
push
adc
pop
std
das
sub
push
mov
push
lods
add
fwait
stc
mov
movsb
aam
outsb
inc
outsl
comiss
icebp
sbb
popa
in
or
enter
sbb
sahf
sbb
xchg
xchg
push
add
jp
movsb
pushf
fsubs
xchg
iret
xchg
adc
push
or
dec
je
cld
xor
cmp
in
and
mov
inc
in
das
pop
lods
cmpsl
test
ljmp
out
mov
xor
negl
popa
or
mov
test
popa
or
or
mov
fnstenv
sbb
push
inc
sbb
pop
into
or
jne
in
cmpsl
cmc
mov
push
inc
sbb
cld
push
pusha
mov
or
pop
push
xor
lret
sbb
xlat
mov
push
lods
dec
mov
pop
mov
mov
inc
push
sub
xchg
jbe
sbb
mov
and
fidivl
push
std
repz
fnstenv
push
es
mov
lock
jle
imul
les
arpl
fmuls
jb
or
pushf
rorb
mov
or
inc
popa
pop
or
add
mov
out
and
pusha
dec
pop
lods
cmp
jp
mov
fs
add
mov
cli
fsubp
inc
iret
mov
imul
cmp
mov
pop
aas
fs
out
push
fs
sub
mov
sbb
lock
movsb
or
push
insb
xor
dec
nop
mov
mov
fwait
das
pusha
jne
mov
fnstsw
dec
or
stc
test
push
mov
fdivrl
insl
dec
scas
dec
insl
pop
dec
push
push
cmpsl
addl
jo
or
inc
sbb
es
jmp
cs
mov
sahf
fwait
sub
mov
in
jnp
adc
or
ficoms
or
push
xchg
rorl
sub
testl
sahf
pop
ja
clc
mov
sub
xor
push
int3
rolb
and
dec
sub
fwait
js
imul
call
jp
push
push
imul
out
cmp
incb
lods
sbb
std
and
mov
mov
jmp
aas
out
pop
js
fiaddl
mov
int3
pusha
jecxz
cwtl
sub
test
cmp
out
push
lret
jae
mov
outsb
adc
or
sti
popa
xchg
jl
cmp
testl
or
mov
scas
cld
jnp
es
cmp
or
and
in
pop
setae
test
loop
pop
push
call
push
inc
aam
sub
fstps
cmp
jnp
push
cmp
lods
mov
jb
xchg
scas
jle
scas
dec
shrl
and
lea
js
outsl
mov
adc
gs
add
add
or
aam
in
xchg
sub
mov
mov
push
push
mov
mov
adc
pop
nop
pop
inc
xchg
mov
movsl
inc
mov
je
inc
lods
push
mov
pop
or
lea
xchg
xchg
jne
push
in
fistpl
insb
imul
stos
bound
xchg
add
loop
sbb
out
sub
sbbb
jmp
data16
lahf
or
test
sarl
cli
xchg
xchg
and
inc
fcmovnb
push
sahf
hlt
mov
aaa
cli
insl
pop
lds
aam
leave
adc
shrb
pop
cli
and
inc
adc
jo
or
js
dec
movsb
mov
stos
mov
fcom
mov
sub
scas
or
frstor
les
out
adc
push
mov
mov
int3
push
jle
repz
out
push
data16
test
test
jne
test
inc
sbb
xor
popf
push
lcall
fiadds
ror
movups
inc
push
inc
ret
test
shl
rclb
mov
test
orl
js
ljmp
subb
cmp
cmp
je
sbb
fildll
enter
mov
mov
cmp
out
stc
and
fisttpll
xlat
jl
dec
push
cs
push
fisubrl
lods
repnz
repz
xchg
add
insl
hlt
sbb
test
cli
jo
jp
fwait
repz
gs
sub
jno
jae
jg
adc
movsl
sub
push
addr16
sbb
add
insl
mov
push
cwtl
cli
xor
push
xchg
fsub
cwtl
test
xor
sbb
mov
or
aas
lcall
cltd
out
icebp
fwait
mov
or
cs
xchg
jne
adc
push
test
or
mov
sub
addb
sub
pop
lods
jl
inc
cmp
cltd
fdivrl
push
and
pop
pushf
push
das
les
jecxz
inc
aam
test
int3
mov
adc
jne
jae
nop
ss
cld
sub
mov
push
xchg
sahf
mov
pop
xor
sub
mov
repz
mov
ja
lret
inc
test
jg
or
fiaddl
out
inc
inc
xchg
push
pop
pop
xchg
pop
dec
repnz
inc
dec
stos
outsw
sbb
adc
and
icebp
lahf
mov
dec
imulb
and
push
and
in
gs
mov
mov
adcb
shlb
lea
jne
decb
or
test
insb
cmpsl
insb
rdpmc
shll
shll
dec
jle
mull
out
leave
xor
stos
pop
mov
aaa
pop
cs
and
push
std
pop
mov
insl
mov
or
pop
push
pop
scas
insb
fucomi
movsb
push
cmp
dec
add
sahf
hlt
test
cmpsb
mov
xchg
mov
cmpsb
push
xchg
mov
cmp
cmp
sbb
push
cwtl
cmpsl
cmpsl
xchg
cmp
movb
inc
les
xchg
test
std
aas
aaa
lods
cs
cmp
rcrb
cmp
inc
fdiv
add
decl
hlt
pop
int
data16
mov
jle
ret
lret
je
adc
jle
movb
inc
out
add
mov
nop
jbe
mov
fildl
add
mov
and
lea
out
dec
mov
aaa
pop
out
xchg
lahf
inc
fadds
mov
mov
sar
pop
shll
and
scas
fldcw
mov
mov
pop
cmp
or
ljmp
push
dec
arpl
cmp
xchg
xor
insb
xchg
jle
or
rcll
adc
lods
fnstsw
pop
dec
add
push
clc
adc
and
fs
or
mov
add
cmpsb
push
orb
sub
push
mov
idivl
repnz
sbb
jo
inc
cmpl
adc
xor
das
cli
negl
inc
das
adc
mov
or
cmp
out
push
dec
ljmp
repz
mov
jmp
or
rcll
sub
xchg
sbb
push
inc
mov
mov
call
dec
daa
lcall
into
test
sub
jg
inc
rorb
pop
clc
shlb
movsl
iret
pushf
pop
push
sub
scas
push
push
jmp
out
fwait
ds
in
push
xchg
movsl
push
jbe
lcall
sub
roll
loopne
jg
shr
add
sbb
insb
shlb
lods
cmc
daa
pop
xor
push
xchg
push
mov
xor
add
sbb
shrb
add
ret
inc
ret
jo
shll
jo
sub
jae
insl
pop
sub
push
push
out
xlat
fsubrl
xlat
aam
cmp
jae
data16
test
arpl
dec
sub
out
inc
aad
test
mov
add
dec
test
dec
aas
and
xlat
lcall
sub
pop
and
loopne
imul
mov
jne
add
repz
out
xchg
xor
push
jmp
jns
in
sbb
dec
lcall
jmp
cmp
sbb
xor
in
xchg
dec
fstl
ret
int
sub
or
cwtl
pop
mov
std
jp
inc
shlb
cmp
icebp
shrl
cmpsl
in
dec
out
lods
cmp
loop
mov
dec
aad
push
sahf
dec
inc
xchg
mov
pusha
call
lock
pop
out
xlat
adc
loope
jl
inc
mov
xlat
xor
mov
xor
jl
xlat
jbe
scas
mov
mov
scas
push
add
cld
jo
adc
push
cmp
aad
fistpl
pop
jno
xchg
mov
mov
xchg
cmp
push
cmp
mov
in
xchg
popf
dec
jmp
pop
sbb
nop
mov
jl
jmp
stc
sbb
fsts
cs
and
icebp
mov
popf
push
mov
mov
dec
cld
inc
lret
outsb
lea
fcoms
sub
adc
cmp
adc
daa
and
push
shlb
inc
insb
imul
push
inc
dec
sub
xchg
sbb
leave
fs
sarb
push
cmpsb
add
js
roll
push
sahf
mov
push
or
mov
fimull
cltd
push
or
lods
sbb
loopne
scas
enter
mov
lods
or
mov
xor
imul
push
scas
daa
and
mov
and
addb
add
std
icebp
xchg
lods
leave
xchg
inc
mov
mov
sub
sahf
arpl
lret
mov
hlt
dec
mov
add
sbb
sub
gs
imul
cmpb
mov
mov
lds
pop
mov
ret
mov
lds
in
rorb
js
jmp
inc
popa
xchg
or
mov
push
push
push
cmp
and
mov
decl
add
xchg
iret
inc
out
call
cmp
mov
stos
sarb
addl
push
adc
mov
xor
xchg
mov
mov
repnz
sub
mov
pop
xchg
or
hlt
sbb
pop
push
enter
cmp
cmp
xchg
mov
lods
adc
sbb
fsubl
stos
je
xor
popf
dec
pop
xor
sbb
in
ja
ret
out
lock
push
scas
pop
push
add
lock
mov
fildll
call
push
inc
test
cmc
in
pop
and
test
inc
fdiv
xor
das
add
push
or
insb
mov
and
icebp
inc
xchg
inc
inc
sbb
and
mov
enter
sub
jns
shlb
mov
lret
pop
ds
int3
push
loop
ljmp
in
pop
mov
dec
xchg
xchg
pop
mov
psllw
add
mov
ds
mov
push
inc
jecxz
push
test
call
push
mov
mov
xchg
sub
pop
aaa
add
pushf
test
ret
sub
imul
push
mov
pop
mov
push
stc
sti
hlt
add
xorb
jae
cmpsb
cwtl
adc
and
fcomi
leave
lss
sti
jnp
lahf
pop
imul
sbb
test
push
ljmp
cli
lods
xchg
out
jb
inc
cld
add
ljmp
jb
cltd
xchg
push
jmp
mov
push
lcall
es
lahf
mov
mov
lret
push
lret
mov
outsl
cs
sub
fs
in
jns
xchg
aaa
sbb
sub
aam
in
adcl
mov
xchg
inc
xor
or
push
push
inc
in
ficoms
mov
xchg
inc
jp
js
insl
ds
cmp
xchg
pop
mov
ret
adc
pop
sbb
fisubs
enter
mov
shll
and
inc
jne
mov
or
cld
inc
adc
scas
and
rcll
push
sti
hlt
fldenv
inc
test
pushf
cmp
iret
cmp
mov
xor
cmpsb
pop
mov
repnz
xor
and
add
xor
push
jo
fs
ljmp
jo
xchg
movb
xchg
cltd
inc
pop
out
rorb
lods
jecxz
test
cli
mov
sbb
add
mov
cmc
mov
dec
fstl
sub
js
add
jge
movsb
lods
mov
mov
jp
arpl
pop
outsb
lret
std
push
arpl
cmp
nop
fstpt
movsb
add
adcb
jge
jb
cmp
sahf
push
sub
das
xor
sahf
imul
push
xlat
jo
sarl
pop
les
xor
ss
jmp
pop
outsl
inc
cli
int
or
or
jbe
mov
xchg
test
out
shrl
scas
insl
nop
jbe
lahf
jae
shlb
sub
fsubp
js
or
hlt
popa
pop
sbb
dec
and
lcall
outsl
mov
imul
cmp
pusha
bound
jnp
loope
clc
dec
xchg
enter
fdivs
icebp
mov
xchg
mov
inc
sub
cld
iret
rcr
jo
mov
push
stos
add
notl
push
ljmp
dec
xchg
mov
lds
sub
cltd
push
xchg
fistpll
std
leave
mov
in
js
xchg
jge
cmp
mov
or
loope
mov
inc
enter
out
adc
hlt
fdivp
icebp
xchg
cmp
jg
dec
and
push
popf
fsubr
xchg
adc
mov
repnz
outsb
xor
test
aad
jnp
dec
jnp
shl
mov
push
and
mov
scas
dec
sub
insl
shlb
add
inc
jecxz
push
xchg
std
pop
mov
push
cmp
ljmp
mov
outsl
cwtl
mov
push
dec
stos
pop
imul
movsb
lea
push
and
int
push
pop
into
cmp
mov
and
les
mov
mov
sbb
xor
adc
mov
inc
popa
push
les
xor
cmp
push
mov
shl
cmc
fisttps
daa
or
pop
jp
das
fsubrl
lahf
xchg
lcall
gs
lock
cmp
inc
scas
sarl
sbb
add
lahf
scas
mov
nop
cwtl
cltd
int
je
lret
push
in
fiaddl
cmpsl
cmpb
lret
pop
xor
fnsave
test
mov
mov
xchg
test
dec
or
pop
ret
jno
xchg
xchg
test
hlt
xor
jecxz
sbb
out
or
outsl
out
scas
repnz
test
loope
jbe
pop
lods
inc
stc
and
rorb
sbb
lret
in
aaa
test
or
jno
sahf
loop
cs
xor
push
sbb
stos
mov
inc
push
pop
dec
dec
test
icebp
leave
lret
jmp
mov
xchg
mov
xchg
out
cli
sub
in
sub
imul
inc
and
and
hlt
cltd
xchg
loope
jge
subl
xchg
call
std
inc
cmp
rclb
out
stc
or
int3
dec
jp
pop
ss
sti
popf
pop
lods
mov
inc
xor
dec
xor
lcall
repnz
dec
nop
mov
icebp
cmp
lahf
lcall
out
repnz
pop
mov
data16
mov
out
xorb
xchg
sar
and
movsl
inc
mov
adc
bound
xchg
call
cmpsl
adc
sub
push
pusha
flds
sarb
adc
cmp
push
scas
insl
mov
das
test
loope
inc
dec
xchg
mov
adc
out
mov
dec
mov
clc
jge
rcrl
out
jg
fst
jecxz
and
rorb
fchs
jecxz
js
inc
cwtl
xchg
movsb
mov
aas
lock
in
push
in
or
mov
scas
mov
cmp
imul
subl
mov
adc
jg
cmp
cltd
sahf
jmp
xchg
cmp
scas
sarl
sbb
push
lods
or
sub
ret
insl
xchg
and
push
and
lahf
jecxz
inc
icebp
push
cld
mov
push
int
into
outsl
push
mov
and
pop
mov
and
mov
push
sub
icebp
adc
dec
aaa
in
push
in
out
in
rclb
push
mov
aaa
lds
mov
lcall
add
subb
fcomip
lret
adc
lret
cmp
adc
fwait
jno
sub
mov
in
lods
inc
inc
mov
or
push
gs
not
adc
shlb
insb
jno
addb
jno
stc
jo
mov
es
out
bound
jl
int3
enter
push
xor
push
sbb
fdivr
int
iret
leave
pop
push
repnz
mov
sti
dec
mov
nop
test
or
bound
sub
cmp
insb
mov
je
mov
lods
xor
xchg
std
test
push
mov
fcomi
xchg
mov
popa
das
inc
xchg
lcall
std
jb
xchg
shlb
push
lar
pop
jl
add
enter
test
cmpsl
js
pop
mov
mov
and
dec
ret
fdivr
xchg
lods
inc
mov
test
call
jecxz
icebp
sbb
adc
in
popf
std
mov
rcrb
ljmp
pop
inc
jbe
sti
mov
mov
sbb
sub
inc
jne
in
leave
std
mov
push
jne
dec
dec
jge
inc
sbb
clc
bound
testl
fmull
and
or
mov
ja
enter
das
sub
add
inc
enter
mov
xchg
inc
mov
pop
popf
push
pop
cmp
push
sbb
mov
lods
stc
addb
xchg
fcom
jae
lcall
and
sub
xchg
inc
in
pop
lret
mov
adc
addr16
cmp
dec
into
data16
push
jns
ljmp
int3
cmpsb
push
and
andb
pushf
mov
lret
cmp
xchg
into
and
xor
cmpsb
subl
pop
or
mov
cmpsl
popf
out
aam
xchg
adc
mov
pop
jle
test
mov
lock
mov
push
or
pushf
je
mov
icebp
pop
xchg
jp
xlat
inc
std
outsl
mov
outsb
fbstp
push
mov
dec
shll
jns
adc
jl
xchg
mov
shrl
lods
jl
push
ret
jno
cwtl
xchg
jnp
inc
in
lret
pushw
lds
pop
lcall
mov
sbb
std
inc
inc
movsl
cmp
lods
and
cmpsl
repz
adc
scas
xor
fldl
sbb
je
cmpsl
mov
jno
push
pop
cmp
clc
add
xchg
repnz
add
fisubrs
and
cmp
and
mov
sbb
out
and
sub
mov
jmp
push
xor
sub
jno
cwtl
xchg
inc
js
cmp
cli
lahf
xchg
ljmp
cltd
cltd
jecxz
sbb
pop
ljmp
clc
imul
mov
ltr
sub
add
arpl
push
xchg
stos
fdivrp
mov
sahf
and
fildll
inc
pop
xchg
fidivrl
js
cmp
sub
ja
mov
xchg
insl
aaa
inc
dec
addr16
scas
popf
mov
mov
std
jmp
loop
mov
jg
ljmp
cmp
and
andl
add
call
test
cs
outsb
add
mov
fwait
cmc
popa
xchg
clc
jp
cmpsl
xor
popa
and
cmc
movsb
add
xor
mov
push
pop
scas
mov
mov
shll
cmc
mov
mov
adc
jge
pop
int
fsubl
push
dec
insl
scas
mov
jmp
enter
mov
sar
dec
es
or
pop
or
mov
mov
or
xor
sahf
and
iret
in
mov
icebp
jb
aam
cmp
xchg
cmp
pop
into
jmp
or
enter
xor
and
cmp
dec
daa
daa
test
jmp
sbb
fcomps
add
out
lock
pop
lret
loop
push
mov
add
rorb
sbbl
and
das
mov
pop
cltd
mov
addl
stos
fdivs
fcmovnu
mov
xlat
pop
cmovno
imul
lahf
lret
in
ss
subl
mov
xor
pop
pop
sbb
test
or
or
stc
xchg
push
bound
sbb
call
adc
pusha
cmpl
sbb
jmp
adc
adc
insl
jns
pop
cld
mov
data16
add
push
xchg
pop
jp
daa
inc
test
scas
ret
sbb
push
les
daa
daa
jle
push
imul
lds
sbb
daa
xchg
xlat
and
or
out
cmp
daa
adc
shll
bound
cltd
pop
mov
pushf
hlt
add
dec
cmp
pop
hlt
push
mov
xor
xor
fcmove
dec
mov
xor
add
test
repnz
imul
test
push
jne
es
cmp
rolb
inc
mov
inc
xchg
push
mov
or
out
or
mov
and
inc
xchg
fcmovnu
decb
enter
push
inc
jle
mov
push
iret
and
and
xorl
push
dec
xor
ret
into
ds
jbe
push
sti
fiadds
xchg
cmp
dec
in
add
mov
ljmp
iret
pop
xor
mov
push
mov
jno
mov
in
cmpsb
out
jns
aad
ds
xchg
dec
sbb
adc
jp
shlb
repz
aas
mov
jecxz
jl
test
aas
lods
mov
shll
out
stos
bound
insl
mov
inc
jmp
pop
test
les
mov
movsb
andb
adc
mov
mov
sub
mov
xchg
bound
imul
js
fisubrs
lret
dec
out
test
out
mov
jp
mov
ficomps
dec
aas
pop
in
daa
cs
in
cmpsb
repnz
sarl
rclb
lea
or
andb
pop
jl
or
int
sub
xchg
mov
jnp
jnp
mov
leave
sar
fwait
xchg
sbb
jl
sahf
jns
mov
and
mov
das
push
fimuls
js
sbb
into
call
xchg
push
adc
jmp
loopne
pop
andl
xchg
mov
imul
jl
jl
pop
fisubl
push
xor
testb
stos
out
cmp
cmp
imul
aaa
mov
ss
mov
xchg
je
sub
adc
ss
shrl
push
out
dec
push
insb
loope
mov
pop
addb
dec
in
inc
aad
add
mov
add
sub
mov
sub
cltd
mov
int3
cmp
lret
sub
inc
ds
std
fs
cltd
dec
cs
push
out
jmp
push
std
and
subl
cmpb
jo
gs
mov
pop
add
lahf
push
pop
js
scas
repz
or
mov
push
lods
sub
js
fdivs
sub
push
pop
add
dec
xorb
rcrl
imul
lock
leave
hlt
lock
xor
xlat
jns
lods
xor
jge
pop
rcr
imul
lea
jl
rorb
pop
cmp
cmp
mov
inc
cmp
fwait
dec
pop
pop
stos
shll
xchg
es
cli
fmulp
nop
jmp
push
je
movsl
adc
rorl
leave
cmp
pushl
jne
mov
insl
cli
negl
or
dec
push
xor
cmp
icebp
jae
ret
mov
sbb
sbb
sahf
sub
mov
sub
mov
push
popa
pop
mov
std
sbb
repz
cltd
jae
popa
adc
sub
cmpsb
rorb
lret
lock
mov
enter
pop
sti
stos
sbb
mov
imul
xchg
xchg
dec
repz
loope
push
inc
add
mov
mov
cmp
mov
int3
shrb
ret
inc
sub
add
mov
cltd
pop
sub
cmp
dec
xchg
push
dec
paddb
lds
mov
xchg
mov
aad
scas
sbb
test
mov
movsl
pop
sub
pop
iret
mov
xchg
lock
xchg
data16
jbe
jne
cmp
cmp
inc
outsl
lods
jl
mov
dec
mov
pop
data16
adc
sti
or
inc
dec
iret
mov
pusha
pop
insb
test
jmp
and
mov
mov
mov
or
and
hlt
repz
pop
repz
lods
jecxz
cmp
sub
notl
aas
pushf
jno
and
icebp
les
push
and
sti
pop
or
lods
xor
or
test
lods
stc
add
mov
cmp
jb
and
pop
cmpsl
mov
cmpsl
sub
xlat
adc
nop
xchg
jecxz
arpl
dec
popl
inc
push
and
jl
push
lods
mov
das
out
push
rorl
enter
adc
inc
dec
adc
mov
daa
mov
add
push
or
pop
test
and
dec
in
pop
cli
xchg
jno
cltd
xchg
push
testl
pop
add
cmpsl
sub
fdivl
lods
cmp
mov
es
insl
sarb
nop
cmpsb
dec
mov
inc
std
xchg
loopne
aaa
mov
mov
fs
sub
dec
cmp
loop
jp
mov
cmp
pop
dec
pop
lds
lock
inc
xor
lods
cmp
xor
test
les
popf
lods
mov
mov
jmp
inc
pop
mov
push
fcom
cli
mov
repnz
xor
xor
fmulp
dec
bound
mov
imul
in
in
or
jecxz
in
ret
pop
sbb
mov
sbb
push
jno
pusha
push
mov
imul
sbb
lahf
sbbb
adc
jmp
pop
cmp
aam
mov
pop
push
mov
out
dec
ss
and
or
push
push
cmp
push
std
pop
push
js
pop
lret
push
jle
decb
pop
mov
repz
xor
cs
dec
out
inc
fisubrl
mov
test
loope
xlat
add
fnstsw
loopne
bound
xor
add
xchg
int
dec
std
jmp
jbe
and
add
xor
xchg
in
stos
js
pop
jmp
or
insb
mov
pop
inc
addr16
in
dec
in
in
cvtps2pd
movb
fildll
fmuls
ds
mov
xor
dec
mov
mov
repnz
xor
and
pusha
adc
sbb
add
lahf
mov
inc
mov
out
mov
or
stos
icebp
clc
pop
sub
add
enter
sub
cmc
movsl
jb
sbb
iret
cmpsl
xchg
xchg
movb
rclb
and
mov
and
imul
mov
jno
repz
in
jne
inc
xor
cwtl
inc
stos
int
stos
and
jmp
call
inc
pop
pop
mov
jae
or
fdivrl
out
push
insb
stc
test
arpl
jge
fstpt
and
imul
jg
aaa
pop
or
in
lock
push
es
cmp
subb
mov
push
add
shl
push
adc
int
dec
daa
rcll
shll
fdecstp
dec
cmp
adc
jl
iret
xchg
pop
xchg
mov
cmc
hlt
jbe
push
scas
dec
or
sbb
add
test
pop
scas
in
cwtl
stc
jecxz
fidivrl
adc
mov
xlat
rcrl
mov
push
cmp
ficomps
push
aad
mov
ret
push
adc
fsub
mov
push
hlt
mov
fstpl
or
mov
mov
fdiv
roll
pop
pop
popf
int
lock
inc
nop
js
iret
stos
repz
roll
nop
test
cmp
cmp
jp
jb
lea
xchg
fs
vmovsd
inc
pushf
int
sbb
lret
sub
imul
mov
add
dec
mov
pop
cwtl
cmpsb
jle
sub
les
not
and
mov
cmpb
insl
push
outsl
mov
jl
addr16
mov
jno
pop
es
sub
mov
shrb
lcall
mov
imul
in
test
xchg
out
outsl
sbb
inc
mov
ret
mov
aaa
add
lods
pop
xchg
xor
and
mov
jns
xchg
cltd
iret
inc
aas
scas
pop
mov
lcall
and
mov
je
or
sub
aaa
inc
inc
push
sub
testb
stc
ljmp
fxch
adcb
scas
shl
mov
or
pop
ror
ja
test
inc
insl
imulb
or
sbb
adc
popa
aaa
dec
lahf
jecxz
and
cmpsb
adc
mov
adc
lock
or
push
dec
aas
push
cmpl
pop
or
add
mov
icebp
movsl
or
mov
mov
push
loopne
jb
lds
adc
jmp
xorb
dec
arpl
dec
addb
add
push
cmpsb
adc
or
scas
jle
aam
mov
push
inc
xchg
mov
mov
jmp
sub
mov
cmp
cli
xchg
cmpsl
leave
pop
loope
xchg
dec
xor
inc
lcall
xchg
cmp
roll
fcomps
lods
lea
shl
xor
pop
enter
cmc
pop
cmp
inc
aaa
mov
mov
push
fisttpll
mov
leave
fisttpll
push
in
call
js
cmp
xchg
lret
rorl
sub
mov
lods
push
cmp
sub
add
sub
jno
lods
pop
jg
fs
arpl
loope
adc
loop
inc
and
out
out
jmp
fnstcw
fs
cwtl
jae
jo
mov
jp
test
lods
xor
test
cmc
or
pop
push
imul
add
pop
hlt
push
jmp
xchg
xlat
pushf
cmp
jecxz
push
out
jmp
pop
sbb
ja
adc
out
pop
push
or
xchg
popf
imul
adc
out
hlt
push
jmp
xor
mov
pop
sbb
adc
test
dec
adc
lahf
mov
sahf
or
jg
jge
jl
mov
ss
orb
sbb
mov
pop
dec
rcrl
addl
popf
cld
dec
add
jo
jae
inc
mov
cmp
adc
mov
dec
mov
xor
insb
mov
dec
bnd
pop
int3
xchg
rorl
incl
into
insb
inc
ljmp
andl
mov
push
into
sub
lea
int3
cmpsb
cli
jmp
loopne
dec
shlb
lahf
and
xchg
mov
das
jae
push
lds
add
shl
mov
jno
adc
movsl
dec
stos
push
imul
mov
addr16
mov
cmc
testl
sti
inc
stc
insl
in
cmp
mov
pop
adc
js
add
sub
dec
out
cmc
mov
or
sbb
xchg
push
cmp
insb
inc
icebp
push
jo
into
dec
jp
pop
mov
outsl
mov
mov
jecxz
push
xchg
dec
lret
sarb
aas
inc
push
inc
sahf
xchg
ds
out
sbb
jg
jecxz
out
std
out
lea
cld
cld
add
rcr
sahf
jne
mov
push
shrl
movsl
popf
enter
mov
mov
sub
shll
js
aam
shl
inc
jae
das
fwait
add
pusha
decb
les
xchg
mov
mov
and
pop
cwtl
repz
jecxz
pushf
inc
or
sub
add
ljmp
or
aad
add
aad
adc
push
xchg
neg
pusha
inc
scas
test
jp
xadd
mov
push
movsb
adcb
xor
and
jmp
fbstp
mov
adc
in
clc
mov
mov
mov
or
add
ja
hlt
mov
pop
sub
lds
mov
mov
inc
jl
ja
xchg
sub
ja
lods
addr16
cmp
add
cltd
and
ja
cwtl
xchg
xor
or
std
inc
cs
sti
mov
les
xchg
mov
sbb
inc
daa
ficompl
cmpsl
pop
repnz
xchg
add
xor
fnstcw
xor
out
fdivs
aaa
xchg
jp
push
or
mov
xor
leave
hlt
nop
dec
push
cld
in
repnz
adc
push
ret
ficompl
movsl
push
mov
pop
sbb
andl
sub
test
bound
scas
into
addr16
mov
out
mov
xor
mov
arpl
jle
mov
mov
adc
fwait
out
push
mov
sub
cmp
imul
adc
test
andl
mov
jmp
or
cltd
push
shl
lret
pop
push
test
imul
aaa
shlb
jg
imul
mov
cli
lods
sbb
dec
pminsw
gs
push
mov
jb
loop
idivl
leave
mov
lods
add
xchg
or
aad
mov
insb
xchg
jne
pushf
sbb
ljmp
icebp
or
outsb
mov
hlt
cwtl
mov
pop
push
mov
cld
clc
xchg
jle
mov
jnp
aas
lods
dec
pusha
pop
or
dec
out
jns
icebp
outsb
call
jo
mov
xor
aaa
iret
dec
fiadds
pop
aad
push
mov
sub
dec
sbb
and
fwait
or
mov
sbb
mov
pusha
fisttpll
jne,pt
lods
push
cmp
nop
test
mov
repz
cmpl
cmpsl
inc
ds
jo
adc
int3
sbb
dec
movlps
jo
out
fxch
dec
inc
popf
mov
sarl
mov
cmp
adc
dec
sti
addb
movsb
test
or
mov
sub
pop
xchg
loop
push
xchg
or
sbb
test
xor
test
les
inc
or
add
bsr
cmp
sahf
fldt
jmp
inc
adc
out
test
ficomps
divb
xchg
or
push
nop
insb
xchg
dec
cmc
enter
xchg
mov
movsl
mov
lods
movsb
sahf
ss
iret
rcrl
mov
imul
lea
adc
jb
into
in
cltd
mov
xor
and
in
xor
das
out
jnp
test
and
test
rolb
leave
addb
mov
mov
xor
pusha
push
stos
xor
xchg
or
mov
jge
rorb
push
cmp
rclb
inc
mov
es
rcl
dec
xor
gs
jnp
sbb
out
fisubs
hlt
stc
fstps
stos
movb
adc
push
jp
ret
inc
xor
cmp
fs
mov
cmp
mov
pop
ffreep
sub
push
adc
icebp
dec
adc
push
or
push
jg
sub
hlt
lea
stos
adc
add
inc
mov
jns
stos
xor
out
mov
aam
mov
dec
std
or
ret
or
mov
dec
dec
inc
xchg
lret
pop
add
add
or
dec
mull
imul
stc
adc
adc
mov
dec
pop
xor
lods
adc
dec
xchg
cltd
mov
sub
popl
jbe
lock
inc
pusha
loop
leave
ss
fisubrl
outsb
or
inc
pop
pop
shll
subl
jl
sahf
push
shll
mov
inc
jp
cmp
cmp
adc
sub
sub
repz
cmp
js
jmp
pop
imul
mov
mov
adc
add
ljmp
outsl
sbb
cmpsb
jae
add
dec
jno
xor
sub
into
and
mov
cmp
dec
xor
out
mov
xchg
ficomps
rcrb
gs
push
dec
xchg
mov
pop
and
aas
mov
aas
mov
lock
jae
call
mov
jb
and
js
cmp
and
jo
push
movb
clc
jecxz
push
cli
lcall
add
in
loopne
lock
lcall
out
stc
sti
inc
data16
add
mov
aad
mov
rorl
in
push
jo
jo
lea
sub
jge
jae
or
divb
jl
push
test
xchg
hlt
mov
pop
push
stos
call
cmpsl
mov
push
xor
sahf
add
lahf
sub
in
aad
stc
sbb
cmp
pop
scas
outsl
ds
pop
dec
mov
leave
mov
lea
mov
cmp
sub
les
fimuls
jecxz
clc
adc
je
bound
jbe
gs
mov
xor
xchg
xor
mov
cmpsl
lret
pop
lods
inc
fwait
stos
adcl
add
in
adc
or
jmp
or
inc
add
lods
or
inc
sti
movsb
push
out
push
or
mov
lods
out
repnz
jbe
cmc
and
mov
mov
into
sub
jmp
stc
jmp
cwtl
testl
push
mov
icebp
int3
cld
jmp
fistl
outsb
mov
int3
lods
test
mov
addr16
adc
dec
test
push
inc
mov
xchg
in
pop
cwtl
xor
adc
push
jg
clc
nop
inc
xlat
addl
inc
lret
in
jp
jl
push
mov
mov
jmp
jp
dec
mov
push
cmc
ficomps
rcl
mull
or
push
inc
adc
les
out
mov
dec
and
and
dec
adc
imul
loopne
shlb
dec
jl
stc
imul
in
out
sbb
mov
pushf
or
push
push
fs
pop
fdiv
pop
mov
inc
adc
and
ja
mov
in
in
mov
jl
mov
pushf
fld1
jmp
call
aas
fdivl
pop
lahf
cli
jo
or
pop
loopne
pop
sbb
pop
outsl
leave
pop
mull
add
dec
jge
jmp
repnz
je
mov
mov
push
fidivs
sbb
cmpsl
cmpsb
xor
xchg
mov
movsb
inc
fs
cmp
or
jb
pop
adc
pop
flds
shll
push
movsb
sub
cli
dec
jcxz
mov
xchg
rcll
push
mov
leave
aad
jne
dec
pusha
lods
jo
out
mov
pop
or
addr16
ljmp
mov
shrl
add
loopne
in
jg
dec
dec
xchg
jp
outsb
ret
mov
pop
mov
pop
push
push
jo
pop
scas
lds
pop
ds
ja
cwtl
shlb
or
pop
lea
shrb
xchg
fnsave
push
inc
aam
push
xor
xchg
ret
sbb
stc
add
aam
pop
pop
out
xor
iretw
lret
pop
adc
pushf
dec
adc
pop
sbb
incl
ja
sub
sub
lock
out
push
push
mov
scas
and
pop
dec
mov
push
mov
in
mov
out
cmp
jmp
gs
sub
mov
adc
mov
add
sbb
rolb
xor
cmpsb
lcall
into
les
stc
ljmp
loop
xchg
push
into
xchg
xor
in
adc
pushf
jae
xor
mov
and
cs
pop
in
je
mov
pop
ret
cmp
insb
lahf
rorb
lret
call
inc
test
or
adc
jns
mull
lock
push
jmp
pop
lock
jle
dec
lahf
notl
outsl
sub
mov
xchg
dec
repnz
mov
xchg
adc
shlb
push
lcall
out
or
rorl
sahf
dec
pusha
shrb
dec
cwtl
cmp
das
push
ds
nop
call
out
cmpsb
outsb
mov
daa
pop
push
mov
pop
add
mov
mov
popa
lret
jne
ret
movsl
sbb
repz
xor
fneni(8087
push
in
dec
cmpsl
sub
jmp
or
mov
test
ds
ss
ffreep
mov
in
xchg
push
shlb
xor
idivb
jbe
out
add
pop
and
xchg
mov
in
xor
pop
out
in
cmp
inc
sti
or
lahf
stc
xor
dec
pushl
loope
rcrl
pop
fimuls
mov
dec
or
stos
add
and
loopne
cmpsl
mov
cmc
jp
xor
and
pushf
or
inc
stos
shrl
mov
inc
xchg
pop
jns
scas
inc
cs
and
lock
inc
mov
pop
push
sbb
pop
dec
imull
xor
mov
fisubs
cld
and
push
push
xchg
xchg
cmc
repnz
mov
jle
aaa
jecxz
pop
mov
rclb
mov
mov
mov
jne
mov
dec
mov
inc
dec
mov
cltd
loop
mov
insl
int3
pop
ljmp
aas
iret
dec
push
jmp
push
dec
unpcklps
xchg
loop
sbb
pop
insb
outsl
add
aas
cmp
pop
notb
ja
int
into
mov
leave
pop
hlt
mov
mov
sbb
out
ret
xchg
test
pop
pop
cmpsl
mov
movsl
xchg
or
xorl
dec
xor
enter
jb
or
dec
cmp
mov
test
xchg
lods
imul
cmpsl
lret
pop
mov
xchg
jmp
pop
enter
cld
jne
sbb
inc
push
adc
cmp
iret
lcall
push
subl
mov
jmp
popf
lds
mov
data16
es
insb
cmp
adc
cmpsl
lret
ljmp
clc
cmp
stos
loop
cli
pop
div
jle
and
movb
add
or
mov
leave
loop
je
sub
or
sbb
das
mov
scas
cmpsl
cmp
sub
pop
popa
dec
std
mov
int
sbb
push
pusha
mov
sub
ficoml
and
xchg
and
gs
push
call
dec
fsubr
dec
incl
xchg
les
cmp
enter
xor
stos
mov
mov
nop
xchg
sub
dec
jg
add
push
pop
jg
mov
adc
das
add
inc
pop
hlt
nop
into
fcoml
es
lcall
push
inc
iret
or
xchg
ja
dec
cmp
gs
bswap
cmc
js
xchg
xchg
cli
jb
mov
push
adc
inc
xor
cmp
xchg
fidivl
addr16
jb
or
add
fldcw
jmp
lret
lcallw
in
jb
pop
pop
mov
fsubs
dec
les
jp
sub
dec
push
pop
cmc
sahf
mov
or
popa
outsl
mov
sar
and
fnstsw
cli
mov
mov
loop
dec
insb
sti
xchg
fcmovnb
dec
lret
into
inc
sbb
popa
xchg
mov
sub
add
test
popf
mov
ss
les
xchg
leave
adc
pop
inc
in
repz
fcmovne
jg
jnp
push
dec
lds
lret
push
fwait
cmp
and
int3
into
daa
xor
les
mov
scas
xor
jno
addb
jns
lods
les
xchg
sbb
adc
fimull
push
mov
das
cmc
jge
jmp
pop
std
mov
sbb
mov
pop
addb
dec
sub
or
mov
lds
ja
ret
inc
insb
mov
push
xchg
lret
pop
outsl
ss
fsubl
in
sahf
and
xlat
adc
pop
cmpsb
and
test
push
testl
sub
sarb
sbb
repz
arpl
jmp
adc
jge
or
lods
lea
push
test
std
inc
mov
rorl
jo
inc
adc
ret
outsl
iret
mov
push
dec
add
movsl
fwait
jge
ljmp
mov
push
std
inc
sarl
repz
fistl
sub
rorb
mov
pop
shll
mov
jb
lcall
inc
mov
xchg
jno
push
pop
dec
test
idiv
and
lds
adc
lret
call
jno
xchg
leave
jl
jno
sub
ss
sub
pop
jns
pop
jbe
icebp
loope
add
cmp
mov
add
bound
adc
pop
push
jbe
and
jno
and
or
call
inc
dec
pop
mov
jns
in
jbe
fnsave
std
aad
mov
push
push
mov
jge
jno
and
mov
ss
ds
test
les
subl
bound
test
sub
call
cli
mov
aam
xor
dec
jns
pop
rcrl
mov
cmc
cmp
inc
out
js
call
lods
jge
cmp
inc
dec
mov
jp
aaa
push
xchg
mov
out
in
xor
mov
and
or
imul
add
cwtl
cmpsb
mov
fldl
cli
mov
pop
arpl
outsl
or
aas
subb
dec
jl
filds
mov
data16
mov
loop
pop
insl
jb
xor
mov
das
mov
les
rorb
pop
ja
mov
sbb
cmc
and
xchg
cmp
cmpsl
cld
jecxz
fldt
jle
mov
add
push
mov
shl
sbb
int
push
mov
xor
cmc
jle
out
or
pop
dec
xor
call
sub
sbbb
mov
inc
fcmovne
push
push
and
xorl
push
or
dec
inc
mov
jbe
test
dec
jnp
cli
addr16
push
fs
jecxz
sarb
push
add
sub
out
repz
lret
out
shll
test
inc
push
sar
dec
jnp
jecxz
stos
outsl
aam
or
cmp
and
sahf
dec
stos
inc
cmp
or
or
lret
cmc
shll
and
add
xor
flds
mov
bound
je
lret
loopne
in
mov
sbb
test
imul
outsb
mov
mov
jae
shrb
adc
or
mov
mov
je
cli
repnz
mov
dec
fnstcw
stos
in
jno
jge
scas
push
outsl
ret
arpl
bound
or
sbb
fcmovne
and
scas
inc
pop
jb
leave
push
pusha
stc
mov
sarb
and
test
pop
adc
das
mov
ficoml
mov
xor
cmp
xchg
dec
mov
and
or
xor
pop
fisubrs
stc
call
cs
or
pop
push
in
bound
adc
dec
jl
out
sub
dec
sub
loopne
pop
push
aaa
mov
das
lods
stos
mov
stos
rcl
pop
mov
aas
adc
mov
ficompl
jb
cmc
mov
xchg
fidivs
in
or
xchg
sbb
movsl
pop
rolb
mov
push
pop
scas
jae
lock
lods
cltd
and
bound
cmpsb
aad
punpckhwd
mov
jecxz
jecxz
shl
and
pop
lcall
push
std
int3
inc
push
lret
sarb
push
lods
mov
ret
bound
sti
mov
dec
lods
mov
icebp
int3
adc
xchg
or
cmp
dec
push
push
add
dec
iretw
bound
shr
sar
addr16
adc
lods
and
inc
mov
std
add
add
sub
shlb
aam
ss
fists
sub
pusha
addr16
xchg
fstpt
jecxz
pushl
push
sub
xor
dec
cmpsl
mov
mov
lret
in
mov
aaa
mov
jo
ud0
lret
imul
jo
adc
ret
dec
pop
or
loopne
sbb
iret
data16
hlt
test
cli
adc
insl
inc
in
cmp
fsubr
and
add
int3
lret
push
or
loop
test
popf
lods
lods
aaa
sub
shll
push
lcall
dec
xor
dec
pop
mov
mov
mov
out
sub
add
sub
outsl
icebp
xchg
xor
daa
inc
lret
and
jae
cmp
call
pop
xchg
mov
scas
inc
xchg
out
jbe
fnstenv
pop
in
mov
sbb
arpl
mov
das
mov
negb
mov
jl
pop
mov
mov
mov
adc
mov
xchg
or
jg
xor
dec
insl
pop
xor
ljmp
xchg
mov
decb
inc
xor
ja
jae
cmp
xchg
rolb
mov
loope
nop
loope
mov
mov
mov
jns
sbb
mov
sti
pop
pop
cmpsl
mov
pop
push
push
mov
in
aaa
push
in
push
les
mov
cmpsb
push
outsl
jns
mov
int3
mov
adc
rcrl
xchg
repz
xchg
loop
push
pop
into
dec
pop
pop
scas
addr16
sub
inc
pop
prefetcht1
aad
loope
fmuls
ds
sub
cmp
loope
cltd
cmpsb
into
mov
ret
leave
cmp
xor
ret
cmp
rcr
cmp
xor
mov
mov
stc
in
mov
aas
lret
cmp
cmpsl
cmp
call
xchg
jle
popf
sub
mov
repnz
int
mov
push
jns
mov
pop
jbe
test
or
arpl
sub
xor
add
mov
arpl
int
dec
sub
mov
call
lods
lret
test
rcrb
enter
into
mov
int
sub
cmpb
cmp
arpl
add
insb
je
xlat
mov
xor
sub
rol
lock
xor
pushf
inc
sbbl
push
push
into
leave
cmpsb
lock
mov
mov
incb
xchg
adc
push
or
scas
fxch
adc
fstpl
call
add
jns
mov
leave
and
mov
pop
pop
data16
dec
data16
cmpsb
neg
xchg
out
ficoml
sbb
lock
add
inc
jnp
in
jae
xchg
or
inc
sbb
enter
pushl
out
rorb
out
or
mov
lods
and
cli
sub
lcall
push
jns
push
xchg
mov
fmull
dec
pop
repnz
push
inc
hlt
mov
inc
test
aad
mov
xchg
inc
inc
mov
jmp
arpl
add
jo
inc
cmp
push
xchg
sub
jnp
into
js
fwait
mov
cs
aaa
outsb
pop
out
mov
cmp
test
adc
je
sub
xchg
pop
xor
pop
popf
or
inc
movsl
out
dec
adc
divb
or
les
pop
adc
icebp
inc
adc
aas
sbb
xchg
leave
xor
inc
push
jmp
or
jp
xor
rclb
xor
loope
pop
mov
ror
or
jle
lahf
xchg
inc
dec
mov
int
leave
mov
cli
nop
xchg
xchg
mov
dec
shll
xchg
imul
bound
das
xchg
push
sahf
repz
fs
and
mov
xor
insb
inc
shrb
add
int3
std
mov
lea
fistpl
adc
sbb
or
pop
sahf
es
pop
negl
or
lret
add
std
ror
loop
pop
enter
or
bound
or
fmulp
xor
push
or
mov
xchg
inc
jno
inc
adc
cmp
in
jmp
in
test
test
jl
je
mov
push
loop
inc
pop
lods
jmp
add
sub
cmp
push
das
sahf
mov
mov
iret
push
ds
mov
push
push
mov
and
icebp
xor
adc
cmp
sbb
cmp
push
push
icebp
mov
and
push
rclb
mov
mov
add
lods
mov
lods
lods
std
movl
jmp
sahf
shrb
push
lea
mov
dec
loop
loopne
and
stos
dec
dec
outsb
aad
or
sub
ljmp
dec
xchg
setb
les
jecxz
mov
jmp
mov
push
add
jg
out
mov
mov
inc
xchg
in
pop
mov
pop
lret
enter
xchg
lds
xchg
hlt
stos
adc
cmp
push
mov
mov
add
stc
mov
je,pn
sub
adc
pop
in
stc
or
popf
mov
mov
das
and
pop
ss
pop
sub
loope
lods
xor
adc
arpl
pop
mov
adc
jp
dec
lcall
test
push
idivl
mov
add
and
test
sahf
rcrl
cmp
xor
lret
int
outsb
and
push
push
sbb
add
cmp
jp
testb
pop
push
mov
inc
xchg
in
add
jb
in
mov
outsb
push
int3
mov
pop
pop
jns
call
mov
inc
add
addr16
mov
int
add
call
jecxz
add
lea
faddl
mov
xor
xchg
loop
je
int
ljmp
mov
mov
pop
in
shlb
mov
pop
mov
movsl
mov
mov
fdivl
push
add
and
or
ss
iret
lock
dec
xchg
int
sub
and
add
or
mov
in
imul
loope
mov
and
aas
int
loopne
addr16
out
lcall
out
ficompl
pusha
add
fnsave
or
cmpsb
les
sbb
stos
lcall
arpl
into
inc
lds
cs
sbb
lret
dec
fs
cs
pop
jno
insl
test
aas
and
icebp
sub
faddl
and
dec
rorb
les
cltd
push
xchg
leave
mov
cmpsl
mov
xor
aas
sub
mull
iret
mov
decb
repz
cmp
popa
shll
bound
pop
andl
dec
jmp
jo
je
bound
xchg
pop
ficoml
popf
jp
xorb
aad
lock
adc
lods
js
enter
inc
push
lds
aam
push
fcmovb
mov
aas
adc
std
stc
hlt
xor
sbb
scas
ja
pusha
in
cmpsl
scas
insb
shl
lret
add
lock
inc
jb
add
and
push
test
inc
pop
mov
mov
adc
push
aad
movsl
inc
mov
sub
sub
aam
or
pushf
pop
dec
jge
mov
in
push
mov
out
push
shlb
dec
mov
jae
dec
sub
sbb
fisttpll
shl
test
push
xor
push
loop
outsb
push
jns
ljmp
sarb
ss
pop
stc
cmp
pushf
push
ds
mov
and
icebp
hlt
ret
jns
jg
arpl
mov
lock
pop
or
popa
jp
push
data16
pop
hlt
add
mov
push
adc
push
mov
sahf
int3
jp
insl
add
lds
fsubl
inc
pop
pop
mov
mov
mov
xor
mov
cld
in
pop
call
lret
dec
fwait
icebp
xor
ds
mov
push
push
mov
shl
cmp
and
shl
scas
inc
dec
outsb
jbe
cmpsl
jl
dec
std
jmp
or
fs
mov
pop
xor
pusha
sbb
xor
mov
pop
loop
int
loopne
dec
sub
add
lcall
lea
clc
ss
ffreep
sarl
xchg
sub
jb
ficompl
push
pop
pop
or
dec
pop
sub
mov
subb
lods
hlt
xchg
fsubrl
insl
dec
push
into
lock
out
pop
jns
inc
aad
sub
sahf
pop
adc
mov
pushf
inc
std
adc
mov
std
scas
jl
gs
ss
and
fadds
stc
fs
add
rcl
nop
popa
jmp
mov
pop
mov
fadds
xchg
mov
daa
dec
out
jno
imul
loopne
je
and
movsb
das
aad
lahf
std
out
pop
mov
xchg
xchg
notl
and
std
mov
jp
test
shl
pushf
inc
mov
int
call
xchg
push
push
add
test
hlt
dec
inc
pop
sub
rcrb
or
iret
add
and
jle
mov
add
mov
mov
mov
sbb
push
mov
pop
push
dec
dec
test
push
and
mov
test
sti
pusha
repnz
adc
mov
repnz
shlb
and
std
rcrl
lcall
fisubl
mov
jl
lock
jmp
xchg
sbbl
and
or
jb
jo
cltd
sbb
js
jne
popa
jmp
xor
fwait
mov
pop
xchg
xchg
testl
cmpb
mov
js
xlat
cmpsb
sbb
sbb
andl
dec
shrb
xchg
pop
insl
lea
pop
stc
pop
iret
or
pop
fs
add
sti
js,pn
push
rcrl
dec
push
shlb
xor
mov
aad
add
pop
rorl
jp
mov
inc
dec
enter
sbb
mov
mov
icebp
aas
ret
xchg
sbb
lock
mov
orb
imul
mov
and
icebp
and
pusha
sub
movsl
lcall
call
popf
call
fwait
mov
or
fiadds
stos
into
sub
call
sbb
imul
push
add
js
push
insl
xlat
cld
rorb
push
or
in
dec
jnp
loop
add
jbe
jle
dec
fwait
sbb
add
nop
insb
test
mov
mov
loopne
aas
pop
inc
cmpsb
add
jge
sbb
fiadds
dec
add
insl
pop
sbb
arpl
xlat
xor
movsb
xchg
inc
xchg
shrb
mov
push
push
jecxz
sub
repnz
jo
into
int3
xchg
pop
cmpsl
js
jo
mov
pop
pop
std
popf
and
add
imul
adc
sarb
add
inc
subl
fdivs
cltd
mov
lcall
mov
dec
repnz
mov
sub
fdivr
dec
dec
jno
add
mov
or
mov
daa
jno
shl
xchg
hlt
lcall
icebp
scas
es
mov
pushf
in
jbe
cmp
pop
add
inc
fdivl
pop
add
shlb
into
stos
mov
jmp
roll
lahf
mov
rolb
dec
adc
push
xchg
and
xor
dec
fcoms
cltd
and
mov
stos
mov
scas
cmp
fisubrl
dec
inc
mov
mov
aaa
sub
jecxz
out
add
mov
loopne
fdivr
incl
mov
and
cmpsl
test
sbb
loopne
nop
pop
add
dec
fcmovnb
test
sbb
repnz
xor
xchg
test
movsb
and
outsl
jo
or
sbb
dec
dec
jb
mov
mov
fisttps
into
mul
test
insb
xchg
mov
jmp
sbb
shll
cmpsl
add
lret
stos
notb
jb
clc
bound
pop
mov
mov
mov
lahf
das
hlt
add
sub
jns
mov
push
std
setbe
cmp
xor
and
ret
jno
add
pop
bound
hlt
pushf
orl
xor
stos
enter
iret
mov
lret
icebp
jb
cmpsb
rcll
sbb
fisubrs
sbb
fs
push
stos
mov
push
mov
mov
popa
xlat
add
cmp
scas
subl
shl
xor
xlat
sbb
or
xchg
call
stos
and
addr16
push
test
cmp
filds
and
jle
hlt
js
cli
jle
mov
push
lcall
add
mov
sbb
dec
sbb
add
test
xor
xchg
filds
jge
sub
pop
mov
add
pusha
ljmp
out
and
aad
insl
aas
push
and
push
div
push
test
filds
or
mov
mov
and
ret
inc
imul
rorb
jbe
les
cmp
mov
push
cmpsb
hlt
push
stc
dec
out
stos
jle
or
mov
lods
vaddss
sub
xchg
das
xchg
inc
lea
jne
pop
push
or
int3
mov
fisubl
clc
xchg
outsl
in
inc
js
in
dec
add
jg
dec
xchg
lods
arpl
mov
outsl
test
and
dec
lea
ret
inc
jbe
pop
pushf
in
mov
pop
xchg
jno
mov
push
je
mov
shlb
rcrb
mov
ret
mov
mov
ljmp
mov
sub
rorb
adc
fistl
inc
add
adc
addb
test
lock
iret
aas
and
xor
pmuludq
mov
xor
popl
jmp
pop
jecxz
jno
cmp
out
aad
in
sbb
mov
leave
mov
mov
push
pop
mov
filds
out
out
aaa
arpl
stc
lahf
pop
in
dec
lea
cmp
lods
shrb
xor
test
lods
adc
or
fistpll
mov
fs
adc
add
adc
inc
adcb
cmpsb
mov
scas
dec
loop
dec
mov
adc
roll
js
adc
cwtl
leave
sub
sbb
cmp
mov
mov
rorb
mov
int
pop
sub
stc
aaa
cmp
sub
dec
jnp
ljmp
inc
mov
cld
inc
push
fisttpl
inc
sahf
repnz
sub
mov
adc
mov
ficompl
addb
rcl
or
mov
repnz
movsb
mov
mov
jns
xor
pusha
addr16
lods
rorb
xchg
cwtl
lahf
adc
mov
shlb
push
sub
lock
ljmp
insb
es
cmc
mov
dec
jg
jge
xchg
mov
pop
mov
stc
pop
pop
fldenv
cmp
inc
sub
xchg
movsl
mov
lcall
or
in
bound
push
cs
sub
incb
movsb
pop
push
out
pop
movsb
mov
inc
xchg
in
cmp
inc
pop
sub
test
pop
das
stc
outsl
insl
jecxz
pushw
in
xor
inc
stos
je
iret
sbb
subl
sbb
push
jb
insl
push
mov
leave
ja
xchg
xchg
xchg
jl
xchg
pop
xor
ja
mov
psraw
sbb
pop
mov
stos
xor
jnp
mov
jp
push
arpl
adc
mov
push
mov
lret
scas
sar
ficomps
outsb
scas
ss
mov
lock
icebp
push
jno
xor
je
aas
xchg
mov
and
dec
arpl
adc
push
shrb
test
fucomip
xor
into
sub
mov
cld
fwait
pop
add
sbb
js
pushl
sub
xor
sti
mov
call
push
mov
fimull
xchg
add
cmp
mov
cld
in
mov
daa
aaa
pushf
inc
nop
mov
outsl
in
adc
xor
push
push
fstpl
mov
lahf
push
lea
cmp
or
xor
lods
jmp
lea
mov
sbb
divb
pop
pop
stos
rcrb
push
movsb
push
out
add
test
and
adc
add
mov
adc
sahf
mov
test
int
call
pop
hlt
mov
and
fwait
mov
fcmovnu
push
cmpsb
mov
cmc
mov
pop
pop
or
or
shll
sub
lahf
mov
gs
leave
adc
out
push
sbb
jb
mov
fs
mov
mov
xchg
push
lods
addr16
dec
clc
xor
popa
mov
inc
push
mov
enter
ljmp
pusha
notl
rcll
repz
mov
jo
pusha
and
and
lret
lea
dec
pop
out
jge
or
mov
gs
push
inc
xor
xor
lods
adc
or
jnp
mov
aad
and
sbb
xor
jecxz
outsl
rorb
fstpt
add
xchg
jnp
mov
outsl
in
dec
inc
das
ss
outsb
ds
cmpsb
adcb
scas
add
mov
sub
fstl
mov
sarl
repz
sbb
mov
fiaddl
xor
movsb
push
push
fsub
jge
inc
stc
sub
xor
sub
adc
out
aam
mov
fidivl
in
sbb
fs
mov
cmc
sub
repnz
xchg
adc
or
icebp
test
outsb
or
mov
jb
movsl
sbb
mov
ljmp
dec
push
ds
push
loopne
adc
inc
fbld
addr16
xlat
mov
int
icebp
subl
aad
mov
dec
xchg
aam
out
nop
ret
test
loop
push
add
and
push
fiadds
lcall
sub
pop
push
outsl
bound
popa
xchg
sub
out
push
mov
jo
fsubr
lahf
cmp
mov
in
mov
dec
mov
movsb
jae
add
xor
rorl
xchg
fwait
test
add
mov
push
leave
jnp
adc
adc
xor
sub
xor
aaa
jmp
jnp
out
mov
jne
mov
and
sub
scas
rcll
mov
jp
jno
aam
pop
pop
aam
fnsave
push
jnp
add
push
sbbb
lret
and
lcall
push
sti
jb
push
test
xor
daa
ja
ret
xchg
mov
sub
xor
dec
orl
pop
ja
rclb
icebp
mov
mov
addr16
fsubs
pop
movsl
xor
incl
test
push
mov
sbb
test
das
push
mov
add
icebp
popf
enter
mov
pushf
ss
xchg
cmp
jo
mov
in
outsl
xchg
mov
ret
imul
or
sbb
pop
ret
add
adc
imul
test
jae
cmpsb
aas
sahf
ljmp
shl
pop
sub
rorl
mov
push
ficompl
pushf
cmpsb
cs
and
add
inc
imul
adc
cmpl
test
jno
sbb
pop
fsts
sub
data16
pop
and
testl
cmp
loop
xlat
pop
mov
hlt
add
outsl
inc
and
sub
push
pop
jmp
fmull
jb
mov
clc
stos
fdivs
aas
mov
and
or
decl
xor
pusha
xchg
in
inc
fsubl
mov
lret
sarl
les
xchg
fwait
fwait
ja
add
mov
jecxz
rcr
icebp
jae
dec
divb
imul
cmp
add
sub
xchg
popa
jne
divps
aaa
fsubrp
fs
jl
shlb
sarb
fwait
shll
aad
and
adc
imul
cwtl
cmp
or
cmp
pop
iret
push
in
mov
jo
mov
cmp
jecxz
adc
adc
out
cltd
cli
ja
lea
or
or
imul
inc
mov
jnp
daa
and
push
out
cmpps
loopne
popf
rcrb
iret
push
xor
pop
adcl
imul
lods
inc
repnz
xchg
call
gs
jmp
xor
and
test
pop
jmp
sub
cmpsb
shll
cs
inc
outsb
stos
add
push
sub
in
xorl
and
test
loopne
rcrl
dec
or
loopne
fcmovnu
dec
mov
push
rorb
dec
adc
cmp
xor
adcl
cli
inc
std
mov
dec
xchg
scas
arpl
nopl
testl
mov
lock
mov
jecxz
call
ds
mov
mov
dec
xor
and
out
test
push
les
and
jae
dec
sub
and
jmp
mov
icebp
xor
int
push
pop
push
xor
repnz
inc
push
sti
gs
stc
fisubl
pop
out
and
out
mov
movsb
xchg
lock
call
mov
sti
or
add
test
push
push
and
not
aaa
shlb
jg
or
rclb
sub
into
or
jge
jge
addl
scas
js
sbb
cmpl
push
popa
call
shlb
sbb
sbb
orl
push
xchg
cwtl
sbb
movsl
addr16
into
inc
clc
adc
and
ret
mov
clc
in
fmull
or
cmpsb
sbb
adc
sub
cltd
test
adc
adc
push
ljmp
sub
mov
push
xchg
push
pop
and
cmpb
rcll
push
cmp
mov
loopne
pop
and
xchg
popf
cmpb
cmp
inc
adc
pop
dec
out
pusha
jno
mov
fpatan
pop
and
scas
cmp
sahf
push
loope
gs
xchg
ja
dec
je
cmp
repnz
aam
dec
adc
gs
iret
clc
cmpb
aad
fbld
sub
xchg
imul
dec
xorb
mov
arpl
add
dec
or
rorb
xchg
or
outsb
inc
in
sub
and
divl
jb
mov
pop
fstl
aaa
cmp
pop
cmp
rcrb
jmp
mov
xchg
or
pop
inc
popf
xor
mov
stc
xchg
dec
stos
adc
popf
stos
sbb
ret
fistps
inc
test
arpl
mov
ret
ja
push
xchg
shrw
fmuls
pop
aam
in
mov
ret
mov
fwait
jb
inc
inc
push
testb
insb
and
decl
xchg
lods
das
mov
shrb
add
bound
inc
scas
nop
je
pop
mov
insb
ss
mov
push
or
addr16
pop
sbb
cld
xor
or
mov
mov
mov
es
push
mov
je
or
pop
in
lahf
clc
xacquire
lock
in
inc
into
dec
mov
arpl
test
mov
xor
aaa
mov
push
cmp
fimull
inc
shrl
fstpl
into
mov
lahf
shrl
js
sbb
repnz
into
dec
pop
out
fldpi
or
addr16
clc
mov
test
imul
pushf
rcl
popf
mov
xchg
push
mov
stos
push
jb
sbb
gs
pop
jg
lahf
mov
xchg
xchg
shrl
iret
je
push
outsb
fwait
adc
hlt
addl
hlt
inc
push
mov
loop
pusha
test
call
psraw
adc
pop
jp
or
adc
fcomip
dec
jmp
inc
push
jb
and
in
push
icebp
push
fcmovu
sub
imul
inc
cmp
inc
imul
xor
js
adc
push
ljmp
pusha
out
mov
in
div
jns
add
cmp
fists
out
and
mov
dec
inc
pop
nop
les
mov
aam
cmpsl
dec
ja
fiaddl
std
sbb
mov
iret
scas
insb
dec
push
loop
cwtl
mov
inc
pop
in
and
test
jno
ror
and
jl
inc
loop
jl
loopne
int
movsl
push
dec
nop
pop
jnp
jo
lods
icebp
pop
pop
pushf
andb
jbe
rorb
mov
adc
insb
and
das
int
test
mov
test
sahf
sub
shlb
nop
pop
sub
leave
popa
movsb
es
jo
nop
push
xor
enter
adc
loop
jmp
addr16
nop
lods
das
jo
jne
xor
nop
xchg
fcomip
push
test
jmp
or
scas
pop
mov
fistpl
popa
sub
xor
fildl
repz
and
bound
aas
inc
jae
into
repz
iret
mov
cltd
test
adc
xor
movsb
ror
aaa
lea
sub
xor
jmp
pop
cwtl
jmp
and
mov
add
dec
or
test
dec
sub
push
jmp
mov
loope
add
pop
push
inc
dec
dec
xchg
rclb
jmp
xchg
dec
mov
dec
xor
repnz
sub
flds
in
mov
add
xchg
aas
outsb
push
sub
or
cli
cmp
sahf
sub
adc
js
xor
mov
xor
pop
cli
cmp
xor
outsl
pop
push
sbb
inc
sub
shrl
xlat
lret
clc
insb
mov
cmc
lret
fstps
rcl
sub
add
add
push
inc
rclb
insb
cmpsl
lods
ljmp
pop
inc
hlt
cmp
loope
loopne
ret
push
xchg
push
aad
cbtw
stc
xor
outsb
out
popa
sbb
sbb
popa
imul
inc
cltd
dec
test
aam
fimull
sub
inc
push
in
hlt
int
movsl
xor
cmp
gs
roll
lods
push
in
cli
xchg
test
adc
push
jne
xlat
in
cwtl
lahf
jae
pushf
out
pop
fsubp
xchg
in
fnstsw
push
inc
sub
movsb
scas
jnp
sbb
lcall
call
jo
aad
lods
pop
in
insl
in
clc
imul
imul
xchg
mov
mov
or
jno
ja
push
jae
or
inc
test
dec
test
mov
pop
push
sbb
pop
adc
xlat
xor
inc
sbb
shll
imul
ljmp
movsl
stc
dec
xchg
sub
je
push
loope
mov
in
cld
ljmp
clc
ss
jnp
fistl
pop
xchg
loopne
adc
dec
les
jl
adc
adc
adc
jae
aam
aam
lock
popf
jae
scas
rcl
xchg
leave
pusha
adc
bound
pop
rol
cmp
repz
gs
out
mov
xlat
jge
pop
push
jne
mov
jns
mov
out
cwtl
xor
daa
fcom
imul
sbb
std
stos
test
mov
push
adc
push
xchg
mov
sub
jmp
testb
mov
dec
jp
inc
sbb
sub
shld
rcl
sub
adc
mov
cli
add
and
dec
hlt
les
dec
xor
add
in
mov
push
push
push
loope
pushf
mov
outsb
push
stc
stos
sub
fdivs
dec
sti
imul
into
stos
adc
pop
mov
rcr
add
ja
mov
fscale
mov
pop
mov
push
stos
mov
and
aad
vmlaunch
sar
or
xrelease
lods
xor
loop
out
sub
out
add
pop
inc
les
sbb
movsb
jns
loopne
mov
pop
in
mov
jae
sbb
ljmp
cmp
enter
cmp
mov
cltd
cmp
int3
and
jno
sbb
or
pushf
cs
mov
in
jae
mov
js
loopne
xchg
sub
or
sahf
mov
mov
pop
mov
mov
xchg
cmc
xor
xchg
push
jg
inc
mov
lcall
pop
jbe
add
dec
sahf
mov
popf
mov
xchg
bound
jle
add
loopne
test
fcoms
adc
push
ret
dec
lret
lcall
cltd
lea
sti
cmpsl
push
push
in
adc
stos
dec
sub
mov
fisubs
lds
dec
sbb
jmp
incb
nop
mov
jo
sub
stos
imul
call
pop
xchg
or
test
fcmovnu
adc
xchg
push
push
mul
adc
cmp
cmp
add
sub
into
mov
add
and
ja
lods
iret
jle
mov
leave
imul
jbe
push
addb
cmc
mov
lret
bound
stc
pop
in
je
pop
movb
mov
lds
int
sub
cmp
push
cltd
aas
popa
shrl
arpl
test
pop
imull
imul
mov
dec
subb
ja
cmp
lcall
pop
aas
add
lds
jp
sbb
enter
dec
xchg
lret
nop
cmpl
int
addr16
mov
sbb
lea
sar
shll
hlt
xchg
fcomps
lret
loopne
aam
lods
into
mov
scas
sub
popa
mov
jmp
cmpsb
out
in
dec
pop
cmp
arpl
fcomps
mov
cli
nop
test
pop
lds
fwait
mov
mov
pop
out
or
pop
fwait
mov
call
ja
jae
das
inc
adc
add
cmp
mov
mov
mov
loop
aaa
cmpsl
inc
gs
inc
out
fnstcw
lcall
data16
jp
dec
and
pop
jg
xchg
mov
mov
in
pop
pushf
mov
test
cmp
and
mov
add
pop
mov
adc
icebp
mov
arpl
cmp
rolb
mov
je
je
loop
aas
adc
xchg
mov
lods
cmp
add
movsl
aaa
inc
testb
mov
ljmp
adc
stc
dec
stc
push
push
mov
mov
jb
mov
sub
mov
xlat
dec
clc
lods
mov
sahf
push
xchg
pushf
fists
outsb
push
test
out
ss
add
icebp
daa
push
addr16
ljmp
adc
pop
dec
adc
mov
xor
mov
popa
movsl
pop
fidivs
cmp
test
aad
iret
cltd
xchg
mov
mov
gs
pushf
in
adc
sbb
dec
sbb
cmp
call
mov
push
lahf
mov
lea
add
test
ss
icebp
pop
faddp
into
enter
inc
sub
cwtl
push
cmc
inc
mov
cltd
push
jecxz
leave
in
popf
pop
data16
into
outsl
enter
cwtl
or
sbb
pop
inc
es
arpl
add
mov
pop
push
outsb
call
test
lods
mov
and
mov
mov
mov
in
push
xchg
pop
sub
bound
inc
push
push
fldt
adc
xchg
add
mov
cmpsb
mov
mov
loop
daa
xchg
int
jno
or
or
adc
repz
inc
add
inc
xlat
mov
sub
mov
add
lock
loop
jbe
js
imul
test
outsb
aad
int
xorb
cmp
xchg
loopne
mov
dec
data16
mov
and
xor
mov
arpl
push
pop
push
mov
inc
aas
cmp
je
call
cli
fidivl
fwait
mov
pop
stc
rcl
nop
xchg
cmp
pop
add
add
inc
mov
mov
pop
das
or
and
ljmp
add
adc
push
ret
aad
pop
sbb
test
jmp
mov
adcl
inc
add
call
sbb
enter
inc
xchg
sbb
outsl
cmp
sub
cmp
inc
clc
insb
xchg
push
arpl
mov
sub
pop
cmc
leave
addl
clc
sub
push
cltd
mov
lock
xlat
add
push
xor
jns
std
sbb
int
mov
ds
mov
rcrl
sub
aas
push
cmp
jle
roll
and
rcl
out
pop
sbb
arpl
mov
xchg
adc
mov
pop
icebp
lea
movsl
inc
fsubl
mov
daa
pop
in
sub
push
and
mov
pusha
pop
dec
cs
in
cmpsl
xchg
loop
ret
scas
cmc
test
cmp
insb
pop
fldenv
cmp
fsubrs
push
pop
int
jno
or
push
pop
cltd
scas
push
dec
mov
repnz
xor
sbb
sbb
xchg
add
dec
jmp
push
movq
cs
cmp
scas
push
jp
fwait
cmp
scas
sbb
in
popf
arpl
mov
out
test
je
and
jle
lret
scas
int3
pop
ret
mov
pop
jg
out
push
jb
dec
push
sub
sti
and
cmc
jns
shlb
loopne
imul
xorl
mov
push
jne
add
add
xchg
add
add
lea
in
or
cmpsl
imul
mov
test
ljmp
out
xchg
cmp
push
cmp
pop
add
pop
iret
pop
je
popf
inc
cmpsl
xchg
adc
enter
clc
jl
jg
sbb
add
mov
mov
in
jp,pt
jno
xor
and
dec
test
or
int3
cwtl
dec
xor
lds
inc
jne
mov
fdivr
cli
in
fcoml
add
push
sti
fadd
fnstenv
in
out
mov
push
xchg
lods
outsl
shrl
and
insb
and
xor
sti
test
xor
sbb
mov
xchg
sub
sahf
adc
inc
es
mov
mov
jl
subl
cmp
xorb
inc
je
and
orl
push
sub
mov
mov
pop
dec
add
pop
jns
test
addl
fs
mov
sbb
in
sub
push
adc
cmc
xchg
mov
out
xor
and
lds
xlat
orb
add
cltd
dec
mov
int
jle
xor
hlt
rcl
cmp
les
pop
repnz
leave
mov
or
adcb
mov
movsl
mov
mov
pop
out
push
cmp
jmp
lods
mov
xor
mov
pushf
dec
xchg
cmp
sbb
mov
call
or
fnstenv
arpl
xchg
imul
jns
movsl
fsub
jmp
inc
mov
lods
dec
lods
sub
ljmp
dec
cmp
push
loope
or
std
xor
popa
int3
or
and
cli
xchg
loopne
xchg
or
daa
insb
sbb
inc
cmpb
push
add
das
addr16
lea
sub
jle
inc
loop
jae
movsb
test
cmp
lods
rcrb
xor
or
sbb
pop
inc
xchg
inc
movsb
je
and
cmp
pop
sbb
negb
and
imul
outsb
jmp
leave
dec
ds
jecxz
xchg
outsb
and
sub
or
push
sub
jns
adc
fcomps
test
cmpsl
sti
jae
lock
pop
lret
aas
jecxz
mov
xor
sahf
pop
inc
xchg
testl
cli
ja
insl
jno
pop
fwait
dec
cmc
ja
fisubs
or
pop
punpckhdq
fwait
inc
and
jecxz
push
lea
and
repz
js
pushf
call
iret
scas
xor
cmc
add
je
stos
cli
aas
cs
pop
cmpb
push
jle
sub
orl
inc
push
idivb
and
inc
rorl
jns
scas
pop
test
enter
dec
gs
test
adc
sbb
pop
mov
add
andl
shll
test
in
int
sub
dec
and
int
jne
inc
mov
int
mov
jp
nopl
std
ret
ret
clc
and
dec
aaa
lcall
cmp
addb
lds
xchg
xor
loopne
insb
xchg
imul
lahf
add
push
mov
mov
jmp
in
sub
mov
mov
subl
add
inc
int
add
popa
and
dec
hlt
add
add
add
aam
jg
fisubs
push
test
mov
jle
lret
stc
ljmp
inc
ss
bound
jle
repz
cltd
cmp
cwtl
xchg
mov
dec
out
mov
add
fdiv
or
jg
dec
mov
test
jmp
scas
jbe
mov
addr16
inc
mov
mov
mov
mov
adc
aaa
aas
adc
ja
lock
sbb
mov
mov
push
sub
je
push
lret
aas
jns
sub
outsb
arpl
push
adc
sbb
cmpb
xor
jo
and
nop
ret
inc
sbb
and
mul
leave
gs
pop
into
push
imul
sbbl
std
call
shll
or
subb
pop
push
movsl
sub
pusha
mov
sti
sahf
pop
jae
cmp
push
or
xchg
xlat
or
cmp
nop
jle
mov
cmp
push
insl
mov
ret
cli
inc
jg
pop
add
rcrl
xor
push
out
cmp
xchg
lret
lret
addr16
test
lret
cltd
lods
sti
rcrb
out
mov
fmul
js
aad
inc
fsts
or
pop
pop
push
lods
les
movsb
and
out
gs
sbb
xchg
jb
rcll
lea
mov
jl
mov
mov
fcoms
adc
sub
cmp
push
gs
fs
sbb
jge
idivb
mov
sub
andl
mov
movsb
xor
mov
test
xor
mov
or
push
dec
push
push
sbb
cmc
insb
jbe
push
mov
adc
test
outsb
adc
and
hlt
icebp
hlt
dec
lcall
ja
loopne
push
inc
pop
mov
inc
push
data16
push
inc
jp
pusha
enter
sbb
out
inc
mov
fucomi
xchg
push
jne
setb
mov
and
xchg
int3
mov
mov
fisubs
mov
sbb
push
add
out
xor
xor
stc
mov
xlat
js
rcl
loop
cmp
cmpsl
push
neg
jmp
mul
jne
and
xchg
outsb
lods
lret
popf
sub
sub
in
sub
push
push
jge
mov
mov
cmpsl
or
add
sbb
inc
cmp
sub
mov
add
xchg
adc
fildll
inc
add
xchg
hlt
mov
ret
into
cmp
out
mov
mov
rcrl
xchg
jge,pn
mov
clc
bound
aam
loop
sbb
dec
les
cmp
mov
popf
mov
fistps
mov
jo
sub
inc
and
dec
push
jge
adc
fdivl
cs
sahf
xchg
in
jne
and
jge
cs
push
inc
inc
sbb
xlat
out
jg
xor
mov
jbe
mov
add
ret
cli
inc
inc
lret
and
add
and
xchg
adc
jge
mov
iret
and
repnz
adc
pop
push
mov
cmpsb
xchg
stos
out
fnstcw
adc
mov
out
jmp
ss
xchg
movsb
aad
les
push
test
mov
or
inc
mov
jg
fists
and
or
cmp
sub
loope
es
dec
or
and
loop
pop
mov
mov
in
mov
sahf
lcall
arpl
in
arpl
repz
faddp
icebp
mov
push
cmpsl
int3
cltd
bnd
xchg
loope
lods
filds
xor
data16
mov
ljmp
dec
pop
dec
out
pusha
pop
pop
scas
iret
xlat
xlat
movsb
dec
scas
call
enter
add
hlt
sbbl
mov
mov
shlb
in
das
pop
sub
out
jae
jle
sbb
dec
shlb
sbb
mov
sub
loop
jo
testb
cmp
je
cmc
fmulp
sahf
pabsd
in
sbb
das
in
xchg
mov
fisubrl
mul
incb
sub
add
xor
aaa
cli
pop
shrb
jae
movsb
push
test
xchg
fs
sub
xchg
mov
or
sbb
xchg
je
xor
loope
inc
adc
add
jl
fbstp
sar
push
sbb
outsb
aad
cmp
inc
repnz
daa
sub
fildl
jmp
mov
push
ret
pop
and
jo
push
xlat
or
lods
cld
repz
pop
test
stos
pop
outsb
lds
xchg
cmc
lret
adc
into
daa
stc
and
push
pop
sbbl
adcb
adc
hlt
or
push
jmp
fsubrl
pop
adc
imul
mov
push
in
push
outsl
fucomip
mov
ds
mov
mov
lcall
mov
dec
jo
in
xchg
nop
sbb
mov
lahf
in
xchg
rcl
sub
jo
sarl
out
jae
dec
aad
adc
repz
adc
xchg
clc
imul
lcall
mov
and
dec
add
push
or
jg
jle
in
xor
lret
movsb
ds
push
mov
icebp
add
shlb
je
push
and
daa
xor
mov
stos
iret
add
push
jo
popf
shrb
dec
pop
repnz
jo
fisubl
hlt
mov
sti
outsb
cmpsb
mov
pop
cmp
out
test
fbstp
mov
xchg
js
cmp
inc
fadds
insb
js
adc
add
mov
loopne
notl
xchg
repz
cld
add
into
pusha
sbb
inc
mov
les
mov
popa
jg
push
in
push
mov
sub
aam
adc
mov
test
addr16
pop
or
pop
sbb
add
add
push
lcall
push
addr16
hlt
inc
call
fucomp
or
incl
dec
mov
call
xchg
cmp
lret
sarb
loopne
jne
pop
bound
or
enter
mov
cmp
push
clc
insl
lds
stc
or
rorl
enter
movsl
inc
pop
js
push
add
or
out
push
insl
dec
jne
mov
cmp
in
jecxz
push
xor
sbb
insl
stos
pop
mov
into
mov
or
clc
mov
sub
fildl
push
and
and
lret
clc
hlt
mov
jmp
dec
enter
in
mov
pop
sarl
aas
aas
lahf
sub
mov
arpl
icebp
pushf
test
adc
pop
mov
push
jb
and
inc
cwtl
fimuls
push
repz
adc
push
mov
dec
jp
popf
sbb
shlb
add
or
or
in
cmp
and
or
mov
xor
gs
add
mov
out
adc
out
mov
les
lret
jmp
dec
xchg
das
sarb
outsb
add
mov
cs
xor
bound
sbb
xlat
push
insb
stc
and
mov
hlt
popa
jbe
in
leave
mov
cltd
imul
push
cmp
xor
push
dec
scas
adc
cmp
pop
dec
sub
test
stc
outsl
bound
insb
popa
enter
inc
outsb
mov
or
inc
lcall
repnz
ret
cmpsl
rcrl
push
dec
pop
lret
out
jbe
test
dec
lret
inc
mov
out
cld
cli
je
pop
or
fstl
addr16
adc
adc
sbb
leave
cmp
out
aam
jo
add
push
std
ljmp
adc
jg
push
aad
jnp
mov
cmp
add
push
mov
loopne
cmp
xor
and
or
jle
xchg
lock
push
mov
loope
shll
cmpsb
iret
movsl
add
inc
adc
jnp
mov
aad
fisubs
je
cwtl
xor
adc
mov
xchg
jno
pop
add
ret
clc
in
xchg
xchg
in
mov
cwtl
hlt
gs
fisubrs
pop
push
adc
dec
fiaddl
gs
cmp
dec
cmp
leave
add
jg
and
cld
mov
xor
xor
into
ja
rorl
xchg
insb
dec
mov
inc
outsb
mov
push
gs
inc
das
ret
xchg
sub
xchg
popfw
push
xor
out
cmpsl
or
and
or
imul
std
cli
mov
and
adc
lods
pop
sti
push
mov
movsl
xor
out
push
xchg
ds
enter
push
jge
sub
pushf
dec
loopne
test
pop
cmp
mov
sub
mov
sarb
insb
je
stos
mov
or
popl
mov
dec
bound
fwait
pop
clc
xchg
fstps
mov
xchg
adc
push
xor
push
pop
jno
cs
ljmp
and
int
mov
cwtl
into
and
adc
stos
jmp
mov
pusha
mov
mov
aam
les
fs
imul
pop
lahf
adc
andb
inc
gs
sbb
test
xchg
stos
jne
les
repnz
scas
sub
cmp
adc
pusha
and
push
repz
add
shl
addr16
mov
dec
cmp
icebp
int3
sub
mov
lods
sbb
jne
xlat
mov
sbb
and
fsubrs
enter
adc
or
in
js
mov
mov
aad
and
sbb
sub
pop
jns
jp
stc
mov
mov
scas
xrelease
mov
insl
incl
movsb
or
dec
stos
hlt
mov
shlb
stos
loope
jns
dec
dec
hlt
das
fdivrl
in
cltd
mov
push
jb
xchg
or
dec
jmp
pop
pop
popf
js
dec
cmpb
mov
adc
sub
ja
xchg
inc
repz
std
enter
mov
pop
inc
xchg
rcr
dec
xchg
scas
stos
push
bound
imul
and
or
pop
aad
push
std
rcrb
cltd
sbb
sub
dec
jb
mov
sarb
cmp
je
push
bound
push
loope
hlt
push
jmp
mov
xchg
fdivl
sbb
mov
push
or
and
fnstsw
daa
add
addr16
addb
jae
bound
outsb
sub
imull
jbe
inc
pop
jns
stos
out
call
pop
stos
sub
adc
aaa
clc
dec
sub
push
rcrb
mov
arpl
push
call
push
mov
adc
dec
nop
sub
pusha
sbb
les
add
mov
jne
pop
int3
jge
repz
scas
mov
stos
mov
inc
jg
jge
add
cmp
repz
mov
mov
cmp
movsl
es
and
inc
ja
clc
xor
pop
sbb
loope
imul
mov
push
mov
arpl
stc
push
mov
ret
hlt
mov
pop
push
sbb
push
daa
fidivs
sub
stos
scas
or
stos
push
out
push
fldenv
enter
fisubrl
pop
mov
inc
jp
not
cwtl
mov
lret
loope
mov
xor
mov
leave
mov
sub
inc
xchg
bound
cmp
push
mov
lret
inc
ficoml
adc
dec
lock
fucom
mov
pop
pop
rcll
mov
and
lds
mov
sbb
inc
add
pop
inc
mov
scas
fstpl
daa
xor
xlat
test
push
xchg
aas
mov
dec
in
pop
test
mov
or
ja
inc
mov
pop
mov
mov
int
adc
dec
clc
xchg
lock
and
dec
mov
icebp
fistpl
shlb
dec
mov
add
cmp
pop
sbb
inc
cld
mov
push
pop
jbe
repnz
mov
or
or
adc
sub
mov
aas
adc
cs
mov
add
push
repz
fwait
lods
outsb
movsl
xchg
out
push
leave
imul
and
pop
jmp
cli
popf
or
pop
loope
inc
mov
and
stos
imul
adc
test
jle
xchg
sub
ret
mov
lcall
popa
lods
add
pop
jno
rcr
push
fldt
outsl
aas
mov
std
std
mov
stc
aaa
arpl
inc
mov
scas
jp
cmpsl
popa
std
cmp
hlt
rcrl
loopne
mov
sub
push
fwait
scas
scas
jbe
mov
dec
sbb
xor
jno
add
and
and
or
sbb
cmp
imul
dec
push
scas
push
adc
dec
push
clc
jb
inc
insl
andps
jl
in
inc
pusha
jae
pop
mov
hlt
mov
loop
adc
fimull
xor
inc
xchg
pop
and
stc
mov
aad
cmp
outsb
mov
lock
jecxz
xchg
fwait
sbb
or
loop
jno
mov
mov
fsubrl
cwtl
fistps
lret
shlb
adc
add
xchg
rcpps
mov
in
and
bound
daa
push
mull
mov
cltd
nop
test
push
add
roll
cld
push
jmp
push
push
out
shll
push
adc
test
jg
ds
hlt
xor
xchg
push
mov
scas
xchg
shl
xor
add
xlat
pop
pusha
pop
imul
jmp
sbb
jne
dec
cmp
fs
jmp
sbb
rcll
jg
imul
ja
sub
push
cmp
insb
xchg
add
xchg
cltd
sub
adc
pusha
mov
aam
out
jle
pop
mov
jne
cmc
inc
xlat
movsl
call
rcll
jnp
repz
std
adc
testb
js
pop
add
pop
lea
xchg
push
mov
test
fs
loop
or
pusha
outsl
sar
fld
xchg
clc
int3
pop
and
mov
xchg
xor
adc
rorb
cltd
mov
cmpsl
lods
inc
cltd
test
fisttps
xor
adc
mov
adc
jecxz
arpl
int
or
ja
test
test
push
xchg
loopne
pop
dec
mov
push
jne
js
in
repz
test
loop
popf
xchg
repnz
pop
xchg
hlt
push
rcrl
das
out
mov
adc
mov
popl
pop
in
outsl
in
idiv
mov
push
js
xchg
add
lret
hlt
fmull
sub
insb
outsl
dec
mov
sub
dec
jne
or
sub
out
push
into
and
fidivrs
push
nop
pop
ret
jbe
nop
and
xor
adc
fs
add
nop
adc
ds
push
js
fwait
mov
sub
pop
jl
fidivrs
outsb
mov
push
fsubs
jno
inc
sahf
cmp
and
and
bswap
loop
sbb
push
adc
or
push
dec
mov
jbe
adc
push
movsb
dec
fdivl
inc
out
mov
movsb
mov
jb
fisubl
daa
mov
mov
fmuls
out
sub
xchg
dec
loope
pop
cmp
icebp
outsl
imul
add
test
cmp
orb
lods
inc
push
loop
scas
iret
adcl
test
sub
sub
jge
mov
sbb
cmp
arpl
inc
mov
add
rclb
stc
or
cmc
ljmp
out
sub
sti
push
jecxz
dec
mov
cwtl
rep
inc
inc
mov
cmc
sbb
xchg
or
push
scas
mov
ljmp
dec
lret
jp
push
mov
inc
dec
mov
pop
mov
xchg
adc
idiv
repz
test
xchg
add
xchg
jnp
xlat
mov
xor
cmp
mov
lods
add
ja
add
out
mov
pop
xchg
push
int
cmp
lahf
mov
flds
rorb
ljmp
shlb
incl
pop
cmp
push
stos
outsb
lcall
adc
jle
push
sbb
fcomi
pushf
add
jo
pop
hlt
sub
rcrb
call
pop
push
cwtl
adc
mov
sbb
test
and
jge
aad
cmp
jge
cmp
in
mov
inc
mov
inc
cmp
insl
mov
shl
push
ret
cmc
xchg
mov
or
xor
cmp
stos
imul
fstl
push
orb
inc
mov
insl
cmp
mov
ljmp
jge
mov
push
pop
or
sbb
in
add
xchg
stos
fstpt
jb
je
jne
data16
cmp
clc
gs
aaa
jge
sbb
imul
xchg
cmpsl
icebp
fidivrs
xchg
mov
call
cmp
jl
jmp
popf
jb
imul
ret
in
pop
sbb
enter
or
sahf
and
jnp
add
push
jmp
lock
mov
faddp
lret
cmpsl
add
add
fs
int3
out
aas
pop
sar
jne
scas
lret
push
jbe
sub
push
into
cwtl
jbe
mov
push
enter
push
mov
xchg
jns
outsb
inc
roll
negb
addl
push
andb
stos
jno
mov
insb
or
xchg
xor
or
mov
and
sbb
inc
xchg
or
push
aas
aam
pop
cmc
adc
mov
mov
sbb
out
movsb
dec
or
sbb
push
xor
mov
xchg
sub
push
in
inc
xor
cmp
shr
ficoms
dec
fxam
fcomip
dec
jns
dec
popa
lcall
je
shl
je
incl
xor
aam
and
test
lods
inc
imul
fcoms
je
adc
xchg
cli
add
rcrl
insb
int
cmpsl
ret
dec
inc
stos
bound
dec
add
nop
adc
xlat
and
pop
cs
sbb
outsb
push
sti
cmc
sub
je
hlt
cmp
or
outsl
imul
mov
dec
sbb
out
shrb
sub
xlat
jmp
std
mov
xchg
sub
mov
add
fcmovne
nop
das
dec
fiadds
mov
dec
lods
push
imul
push
sub
popa
scas
cmpb
das
inc
mov
ffreep
scas
dec
shrl
aaa
cwtl
cmp
fsubrl
push
dec
fisubrs
jnp
ja
gs
shl
sbb
repz
push
in
mov
xchg
movsb
pushf
mov
and
shll
mov
aas
pop
push
div
mov
inc
cmp
out
sub
aas
movsl
inc
mov
clc
inc
ja
cmp
ficomps
xchg
lcall
mov
ja
jae
mov
movsl
inc
les
into
jmp
adc
iret
inc
sbb
jl
in
insb
jne
dec
or
mov
mov
bound
ss
xchg
jg
sbb
test
mov
jb
cmp
arpl
mov
sub
sub
xor
adc
inc
rcr
pop
stc
pushf
aas
repz
frstor
dec
mov
or
and
xor
repz
andb
sbb
adc
mov
into
mov
arpl
js
pop
pop
cli
outsl
insl
insb
cmc
mov
out
or
pop
les
xchg
pop
mov
mov
and
pusha
xchg
out
std
jp
jnp
sbb
test
out
xor
fcmovnbe
xchg
inc
jno
or
push
pop
adc
loop
push
mov
mov
xor
scas
adc
in
mov
cmpsl
pop
adc
outsl
add
into
xchg
das
dec
lods
mov
rorb
and
inc
ficoms
je
adc
push
mov
cli
adc
loop
jg
pop
inc
xor
inc
mov
inc
add
lods
fwait
lret
pop
push
pop
js
jno
insb
test
cmp
sub
push
cmp
push
mull
scas
mov
pusha
in
cmpl
andl
sti
push
int3
xor
in
mov
outsb
leave
and
cmpb
or
push
and
mov
das
push
ficompl
pop
aad
es
imul
scas
xor
jecxz
or
and
or
cmp
in
sahf
sub
ret
fwait
mov
inc
mov
or
jb
call
aad
psraw
xchg
paddusb
cs
add
xor
jp
aaa
leave
sub
push
out
sbb
sbb
movsb
cmc
pop
jbe
inc
mov
lea
and
xor
out
lea
arpl
mov
cmp
out
fld
or
subb
nop
daa
push
mov
stos
sahf
xor
add
dec
sbb
popf
jmp
pop
sbb
adc
lods
ja
movsb
mov
lret
cmpps
or
stc
pop
in
fsubs
dec
and
stos
push
cli
mov
mov
jo
roll
sub
stos
sub
cmc
xor
cmc
das
rcr
adc
or
push
and
lcall
fstpt
lahf
bound
jne
lods
roll
lds
bound
dec
lahf
xchg
adcb
sbb
lods
jno
push
insl
in
mov
and
lahf
jb
rclb
sub
mov
adc
rolb
outsl
inc
jmp
aad
cmpsb
movsl
and
add
test
ficoms
lock
mov
cmpsb
and
repnz
lods
xor
push
push
mov
mov
std
mov
sti
push
fiadds
xor
inc
and
popf
pop
mov
push
call
xchg
inc
xor
movsb
adcl
mov
shlb
idiv
xor
cltd
fisttps
lods
cltd
mov
jp
cli
dec
inc
pop
aas
lahf
out
jp
or
sbb
loope
aas
cmp
xchg
xor
enter
sbb
jno
add
mov
mov
add
subb
lahf
movsl
adc
sub
mul
xor
test
inc
in
std
imul
sbb
mov
das
sar
add
push
sahf
or
mov
shlb
test
outsb
dec
add
jno
add
frstor
call
or
and
cmpsl
popf
shl
inc
gs
push
les
add
ss
xchg
push
icebp
ret
arpl
adc
sbb
ljmp
push
push
frstor
lahf
daa
data16
inc
pop
xor
bound
daa
jecxz
pop
push
sub
sti
sub
gs
loop
into
push
adc
push
sbb
push
insb
inc
mov
xchg
mov
jns
mov
xor
adc
sub
orl
sbb
stos
adc
pop
dec
cmpsl
xchg
loop
dec
lds
sbb
mov
ret
rclb
pop
xchg
popa
bound
jb
mov
mov
cmc
or
add
nop
es
xchg
loopne
sbb
lds
in
sbb
fdivrl
stc
loope
aas
mov
popa
xchg
add
push
ljmp
mov
hlt
mov
icebp
lcall
aad
cmp
mov
sbb
pop
xchg
fisttpll
int
pop
jnp
inc
daa
and
subl
lock
hlt
daa
lods
sbb
sbbl
xor
ret
sbb
adc
cld
fwait
push
add
mov
into
test
pop
or
sub
sub
cwtl
xor
loop
mov
call
push
ret
lock
icebp
push
pop
dec
fmull
dec
jno
sbb
sub
or
hlt
out
xor
xchg
sub
inc
jg
out
inc
push
cmc
iret
xchg
jnp
or
pusha
mov
adc
js
xchg
out
rcrb
faddl
test
jecxz
das
xchg
arpl
mov
inc
dec
push
cmp
cmp
pop
outsl
jmp
stos
pop
mov
sub
add
cs
sub
scas
dec
jge
sub
aad
mov
or
xor
dec
imul
inc
sti
mov
jbe
loope
or
sbb
lds
mov
and
mov
aaa
dec
xchg
aam
push
aaa
lods
enter
cmc
ja
pushf
push
sbb
cmpb
shrl
sub
sub
jnp
xor
xchg
inc
adc
lods
in
pop
addl
and
lret
add
jbe
pop
xor
or
jo
in
and
adc
fwait
xchg
outsb
push
pop
movsl
mov
sbb
out
lods
out
repnz
sub
imul
and
add
movsb
loope
icebp
dec
or
aam
xchg
mov
fisubl
fstpl
jne
push
popa
xor
push
inc
pop
push
dec
mov
mov
sub
roll
loope
jg
add
xor
push
jo
inc
das
adc
cmpsl
adc
sti
out
add
in
dec
adc
adc
sub
mov
pop
push
mov
call
iret
sub
inc
xor
int
and
inc
mov
xchg
cmpsl
aam
jg
mov
pop
fwait
push
inc
push
mov
clc
in
insb
addr16
cmp
ret
cmp
push
aaa
cmpsl
insb
push
test
ja
lahf
movsl
inc
rcll
loope
or
jnp
sbb
repz
sub
test
and
gs
loope
push
test
cld
xchg
mov
add
or
pushf
mov
push
jg
mov
stos
xchg
pop
notb
cmp
xchg
imul
xor
jo
sti
mov
cld
nop
cmpsb
scas
adc
sub
fucomip
nop
and
stos
stos
or
int3
je
rclb
xchg
test
pop
rcrl
rcll
or
jle
dec
jge
push
jle
inc
sahf
pop
xor
fcoms
dec
xor
xchg
cmp
jnp
jns
fstp
dec
or
sub
mov
out
lahf
adc
into
mov
mov
dec
jp
xchg
mov
add
push
mov
jno
mov
cmp
test
pop
sbb
dec
fildll
mov
shll
xlat
adc
std
in
inc
mov
sub
pop
mov
pusha
leave
stos
or
xor
shl
negb
cmpsb
cli
je
add
inc
push
lods
mov
mov
push
repz
pop
adc
add
mov
lea
or
pop
jo
mov
pushf
pop
repz
and
jp
sbb
adc
negb
mov
mov
mov
call
iret
sbb
inc
xchg
mov
into
adc
sbb
inc
jns
stos
hlt
mov
cmp
pop
fidivrl
lods
xchg
cli
int
mov
mov
scas
repz
movsl
push
ja
lcall
xor
inc
mov
inc
cs
fildl
sahf
mov
pop
jge
pop
into
ljmp
int
fdivl
xor
push
mov
xor
dec
jmp
inc
push
adc
dec
insb
loope
data16
shlb
sbb
sti
jnp
rclb
incb
xchg
sbb
inc
dec
sub
jmp
scas
lock
rolb
mov
pop
mov
in
iret
pop
or
or
ja
jae
imul
shrb
dec
lds
sub
sti
sbb
sbb
mov
jl
lds
xchg
out
outsb
ror
nop
sub
rcll
mov
fcoml
lods
incl
orb
mov
hlt
add
add
lds
jae
dec
out
pop
and
scas
mov
imul
inc
inc
mov
jnp
xchg
mov
stc
adcb
lock
add
movsl
daa
das
js
cmp
cmp
pop
xchg
fistps
in
jecxz
mov
inc
mov
sti
fneni(8087
push
push
xchg
jl
fs
movsl
icebp
test
mov
leave
mov
dec
mov
mov
out
adcb
push
clc
imul
ja
divb
shlb
loop
xlat
sub
cmp
jae
mov
jp
jb
aas
cs
cs
enter
mov
push
aad
xchg
lock
xlat
fists
lods
pushf
test
pop
dec
push
fwait
out
or
xor
dec
subb
bound
add
imul
ror
lds
mov
outsb
inc
jne
mov
loop
jmp
lret
cmc
add
lods
jns
mov
test
mov
jnp
cmc
mulb
sahf
inc
inc
pop
inc
pop
and
lods
sub
sahf
pop
leave
sub
mov
pop
loopne
mov
jbe
lret
pop
xor
ljmp
lock
and
pusha
sbb
dec
xchg
fstl
sub
inc
push
mov
test
orb
fsubr
xchg
or
mulb
mov
or
and
scas
lds
or
jbe
lods
add
incb
ret
xchg
aam
pusha
test
inc
pop
inc
xor
idivl
lahf
negb
aad
mov
aad
arpl
xchg
push
cwtl
or
mov
dec
sub
into
xchg
loop
aas
sub
adc
jnp
ljmp
cltd
inc
mov
nop
push
pop
cld
loope
mov
mov
cmpsl
call
push
ficomps
ret
pop
xchg
push
lret
repz
hlt
scas
xor
push
mov
mov
xchg
adc
sbb
add
push
cmpsl
leave
add
rcrb
ss
adc
and
aaa
imul
cmp
cmp
jno
call
loopne
jb
cwtl
xor
cs
test
mov
outsb
out
jmp
sbb
loop
das
bound
sbb
ret
icebp
mov
xor
push
xchg
dec
adc
jns
lods
lret
xchg
mov
or
idivb
movsl
pushf
mov
test
push
add
lcall
mov
andb
xchg
mov
fldenv
pop
call
or
iret
adc
adc
cmp
jb
xor
xor
xchg
arpl
push
sub
adc
mov
cli
lock
mov
inc
cmp
pusha
mov
or
in
mov
push
cs
xor
pop
pop
inc
cmp
jo
jle
scas
nop
adc
into
or
aaa
jo
fcoms
and
add
xlat
jp
sub
push
cmpsb
xor
inc
mov
icebp
mov
push
ret
and
iret
add
push
inc
push
ss
fs
push
insb
dec
test
shrl
cli
pop
lock
lret
dec
divb
popf
repz
loopne
inc
in
or
jae
jp
xchg
loop
sti
mov
add
push
fsts
cmp
hlt
lock
sahf
jne
call
pop
call
sti
ret
lock
test
cmc
enter
inc
push
in
and
pushf
mov
jle
xor
dec
xor
filds
or
out
xchg
pushf
cs
sbb
cmpsb
movsl
movsb
adc
pop
loope,pt
jmp
enter
imul
fdivl
ficompl
js
sub
call
pop
loopne
testl
xchg
call
aas
es
xor
sbb
pop
in
movsl
into
mov
rclb
fwait
cmpsb
mov
stc
icebp
adc
int3
mov
mov
mov
and
loopne
fildl
insl
pusha
mov
or
xor
and
daa
jae
bound
test
shr
push
fiaddl
addr16
pop
pusha
lods
pop
lret
mov
stos
push
jb
xor
mov
loope
xlat
xchg
and
jle
mov
jg
mov
jecxz
jnp
shrb
cmp
cmp
push
adc
push
dec
dec
cld
push
cld
mov
enter
scas
movsl
in
and
dec
scas
pusha
seta
insb
bound
xchg
cli
add
pop
and
loop
xor
out
sub
call
outsb
mov
sub
xor
jae
cli
xchg
fisttps
sub
lock
sub
pop
mov
imul
movsl
imul
cmp
mov
or
into
jo
and
fwait
repnz
icebp
call
mov
add
push
sahf
fildl
loop
xchg
pop
push
or
lahf
leave
dec
cmp
scas
mov
inc
jmp
out
adc
lea
jmp
adc
test
cmpsl
fstl
mov
idivl
lods
out
mov
mov
jecxz
sub
jp
mov
add
roll
fxrstor
ja
idivb
jb
hlt
push
dec
sub
inc
ljmp
or
enter
mov
fistpl
xchg
pushf
xchg
pop
lret
push
mov
xor
mov
stc
push
rorl
pop
dec
arpl
jle
xchg
push
push
daa
jmp
sub
movsb
fiaddl
jne
fsubs
movb
push
adc
les
inc
jl
je
aaa
xlat
jl
dec
jnp
pop
pop
jne
dec
gs
dec
sub
pop
stos
cmpsl
cwtl
adc
add
jp
stos
sar
fisttpl
imul
sbb
xchg
inc
jle
lods
loop
mov
push
nop
mov
mov
cwtl
movsl
rcl
add
mov
mov
imull
pop
int
bound
jle
mov
scas
rcr
pop
clc
popa
inc
or
mov
or
pop
pop
in
shll
mov
or
pop
scas
cmc
adc
cli
sbb
jmp
cmpsb
sub
subb
and
pop
mov
jp
pop
cmpsl
in
pop
loop
out
adc
std
cmpsb
lret
mov
xor
push
pusha
jl
pushf
sbb
fst
inc
test
aas
adc
dec
mov
push
add
xor
arpl
lods
sub
dec
cmp
dec
or
imul
leave
mov
mov
popf
mov
mov
fwait
add
lcall
push
lahf
mov
insb
mov
mov
mov
xor
pop
push
and
arpl
sbb
lea
push
inc
and
sar
mov
lret
sbb
mov
je
ss
pop
popf
dec
jge
push
in
shl
int
mov
mov
loop
xor
scas
stc
sbb
int
sbb
stc
daa
pushf
inc
push
mov
int
inc
mov
push
mov
iret
ret
dec
inc
fldl
in
fnstsw
pop
mov
fisttpll
push
push
into
and
jno
call
adc
out
or
xor
mov
add
mov
ror
std
push
mov
cmp
arpl
ficomps
icebp
hlt
cmp
mov
pushf
push
fcompp
or
insb
inc
mov
mov
rcll
clc
loope
test
push
les
cli
xchg
push
lcall
cmpsl
pop
in
in
sub
mov
in
dec
test
mov
push
in
test
inc
into
adc
mov
fisubs
xor
mov
cmp
insb
dec
sti
adcl
cmp
push
dec
pop
jp
push
out
jmp
push
and
popf
shlb
and
fmull
out
mov
add
inc
in
inc
iret
aaa
xor
inc
mov
xchg
pop
ret
fdivl
aaa
mov
das
xor
jno
cmp
jbe
rclb
ror
pop
pop
push
xor
subl
cmp
icebp
push
or
enter
sub
pop
mov
shll
jb
jle
mov
mov
scas
sbb
fnstcw
call
loopne
popf
adc
push
imul
test
jmp
test
add
or
test
xchg
sub
mov
pop
mov
stos
repz
push
cmpsl
rcrl
add
fstpt
xor
imul
xlat
lds
test
mov
sbbl
or
mov
dec
push
test
ja
lcall
das
test
dec
push
jb
popa
adc
in
pop
mov
sub
sbb
mov
or
jecxz
and
push
das
push
in
mov
jae
int3
mov
cmp
ror
jo
outsb
jle
jg
lcall
outsl
dec
pop
sbb
inc
mov
lds
in
xor
mov
cmc
or
push
push
jge
jno
shr
movsl
dec
je
mov
xchg
cmp
sahf
loop
sbb
pop
fisubl
dec
and
pop
mov
cmp
fcoml
test
and
jge
popa
pusha
in
out
orl
push
xchg
adc
movsb
and
ljmp
cmc
add
negl
std
cmpsl
jno
cli
popf
bound
push
mov
ret
mov
roll
push
ret
add
scas
negb
stos
out
sbb
out
loope
pop
lahf
inc
sbb
xlat
incb
push
das
cmc
dec
roll
das
adc
in
loopne
push
into
insb
pop
scas
mov
in
rol
sbb
xor
movsl
mov
mov
dec
add
lret
leave
sub
cltd
in
xor
xchg
pop
in
pop
xor
push
mov
arpl
arpl
or
mov
ret
pop
sbb
jge
pop
jmp
lret
mov
fstps
movsl
pop
xor
pop
mov
loop
in
mov
jbe
xchg
aaa
ret
mov
push
push
movsl
jmp
lahf
or
andnps
or
push
add
mov
add
mov
jns
andb
sarl
scas
dec
and
jg
ss
das
xchg
test
popa
je
and
rcrl
andl
cld
sub
cltd
jecxz
mov
stos
imul
mov
outsb
inc
into
fisubrs
xchg
negl
inc
mov
nop
adc
lods
mov
mov
pop
lods
jae
push
incb
adc
data16
mov
xchg
mov
lcall
push
js
mov
data16
push
adc
testl
lds
jo
iret
mov
pop
or
sub
test
push
push
mov
ljmp
inc
push
test
aad
inc
lods
jnp
pop
mov
aad
cli
ret
dec
dec
lods
ret
stos
dec
stos
dec
adc
jne
daa
adc
xchg
inc
xor
hlt
push
add
fidivrs
test
aas
cwtl
dec
cmc
mov
addl
outsl
jb
push
add
rorl
fcmovnu
iretw
jbe
rorb
fstpl
mov
std
cmp
pop
cmp
test
pop
arpl
adc
inc
and
nop
and
rol
and
mov
cld
adc
jle
adc
jecxz
in
nop
cld
out
dec
clc
into
and
dec
push
aam
pop
rcr
lea
pop
xor
add
mov
jmp
movsb
fdiv
sbb
test
mov
fs
jp
lods
cwtl
jecxz
movsw
cmp
fstpl
dec
push
popa
sub
cmp
in
sub
inc
subb
add
jnp
inc
call
jge
and
and
jge
enter
mov
cld
pusha
mov
inc
out
fwait
idivl
bound
pop
arpl
sub
mov
lock
bound
adc
mov
jnp
es
push
pop
inc
cmpsl
outsb
xchg
push
or
sbb
push
lret
sub
xchg
or
out
testl
imul
into
mov
dec
mov
push
inc
popf
notb
fildll
push
push
adc
rorb
stos
pop
push
dec
or
outsl
jns
xchg
arpl
rorl
jb
adc
shrl
mov
pusha
fwait
push
adc
inc
insb
dec
lea
insb
adc
or
and
push
aam
test
sub
daa
jp
sbb
and
xor
repz
out
stos
or
notb
pusha
mov
rorl
fsubrs
jg
xchg
xor
sub
cld
jbe
jge
mov
lcall
and
repnz
pushf
sar
jnp
jmp
rep
mov
enter
loopne
clc
je
fwait
lods
xor
dec
add
add
add
inc
mov
mov
jne
sub
rcrl
mov
out
jnp
sub
fistps
xchg
cmp
jmp
pop
leave
push
iret
sbbl
push
add
mov
shll
mov
dec
out
rolb
popf
or
hlt
dec
into
ja
cmpsb
pusha
dec
push
inc
sub
outsb
push
shrl
add
orl
sbb
scas
pop
xchg
and
and
mov
and
cmp
xchg
ret
pop
pushf
cmp
das
sub
adc
pop
adc
mov
adc
cmpl
mov
cld
in
add
rep
sub
adc
daa
xor
negl
dec
movsl
scas
idivb
int3
jno
jmp
out
jno
pop
add
sub
mov
inc
cld
push
aaa
push
lea
pop
in
andb
movsl
xor
fidivrs
inc
jb
pop
repz
cltd
jecxz
pusha
mov
jecxz
cmp
into
cmp
sub
mov
mov
stc
mov
ror
sub
sbb
sub
jmp
mov
cwtl
push
aam
mov
fstl
sub
int3
and
mov
xchg
xor
sub
mov
push
movsl
movsl
or
aas
dec
sub
shrl
dec
mov
jno
cmp
in
fcompl
loope
fcomip
xlat
adcb
cs
mov
xchg
je
clc
int
jg
mov
inc
outsb
lds
push
nop
xor
pop
add
in
outsb
adc
or
ret
inc
jnp
xchg
xor
bound
dec
outsl
ret
sti
push
jb
mov
inc
jl
and
mov
fwait
insl
push
gs
mov
mov
push
jg
pop
pop
or
sarb
je
inc
add
into
stc
and
bound
and
sub
das
in
lds
and
inc
sub
mov
stos
stc
lcall
mov
fwait
icebp
imul
mov
iret
add
sbb
mov
mov
fisttpll
and
adc
inc
cmpl
sar
lock
fwait
arpl
lret
addr16
sbb
out
xchg
mov
mov
loop
cs
mov
in
xchg
ja
out
pop
daa
push
mov
in
xchg
push
mov
cli
push
lock
test
inc
cmc
pop
repz
jle
fiaddl
jno
xchg
out
sub
lods
negl
ret
fstl
mov
rolb
xor
lods
out
add
aas
jmp
mov
jbe
shrb
hlt
insl
sub
and
imul
lret
aaa
negb
pop
sub
sbb
mov
insl
jecxz
sbb
mov
int3
push
cmp
aad
lock
push
sub
mov
in
xor
fwait
aaa
adc
into
cmp
sarl
cmpl
mov
sub
adc
mov
pop
lret
jae
mov
imul
dec
mov
fwait
scas
jbe
movsb
jge
cmp
in
xor
sbb
out
fidivrs
jnp
push
ret
push
jne
cwtl
sub
iret
mov
mov
pushf
sub
mov
pop
test
fwait
xor
mov
mov
jae
sbb
aas
lods
test
add
testb
lret
pop
jmp
ret
or
xchg
lock
mov
stos
cmp
jno
jno
jp
stos
mov
loop
xchg
and
mov
divb
loop
arpl
xchg
loope
hlt
jmp
jne
je
sbb
cmp
iret
pop
sub
out
cmp
out
sub
cmpsl
inc
loop
sahf
or
lea
xlat
fwait
mov
enter
xchg
dec
decb
xor
or
xor
movsl
sub
mov
iret
inc
sbb
out
je
popf
aaa
mov
push
mov
sub
xor
lret
fadd
rcll
add
jnp
mov
mov
sbb
inc
inc
outsb
jno
aas
push
adc
js
jp
cmp
fsubrl
das
lcall
or
les
fstps
stos
test
add
cld
das
jnp
add
out
push
shll
aas
push
aaa
fdivs
clc
popa
mov
loope
add
jb
jns
mov
pop
mov
popa
mov
mov
push
mov
push
mov
jne
add
jns
pop
dec
out
psllw
ret
jb
mov
xchg
mov
jp
cmp
test
xchg
add
xchg
mov
jnp
xorl
adc
jg
pop
xor
sahf
sar
lods
cli
sar
xchg
dec
out
inc
xchg
iret
inc
mov
mov
push
adc
mov
in
xchg
ret
mov
fstpl
out
fiaddl
xchg
test
icebp
lea
and
ret
mov
inc
jne
sbb
arpl
xor
leave
mov
inc
ljmp
fsubp
jmp
je
outsb
xchg
sub
jp
jae
std
sahf
subl
es
jmp
rcl
out
loope
xor
mov
or
mov
push
sub
dec
adc
xchg
jne
scas
nop
add
dec
aaa
rclb
cmp
xor
movsb
cmp
cld
pusha
inc
inc
enter
jo
pusha
ret
push
in
jge
insl
test
sbb
aaa
outsb
pop
dec
inc
xchg
cmpsl
call
aaa
push
jne
cmp
jns
adc
or
push
test
ljmp
inc
mov
dec
cmp
cmpsl
mov
fs
test
sub
sub
add
xor
mov
xchg
loop
mov
lcall
notb
adc
ljmp
xor
xchg
mov
int
add
pushf
xlat
jmp
lret
adc
pop
int3
out
fnstsw
icebp
inc
mov
xor
scas
ds
stos
dec
and
and
mov
push
and
enter
and
gs
sbbb
push
jae
inc
ja
sub
aam
gs
leave
inc
cmp
cld
mov
fmul
xchg
jo
scas
xor
mov
and
fadd
data16
pop
das
push
scas
repz
pop
and
or
aad
xchg
jnp
sbb
ds
or
mov
sti
and
arpl
jle
push
mov
adc
jo
ss
add
popf
decb
sahf
dec
xchg
out
push
hlt
cmp
jb
add
out
mov
pop
cmpl
icebp
jecxz
jne
shlb
jg,pn
mov
faddl
rolb
lock
push
enter
add
pop
ficompl
dec
stc
jo
mov
int
stos
sbb
adc
clc
subl
loope
pop
pushf
push
imul
shll
pusha
call
divl
mov
insl
rorb
jmp
decl
movsb
fadds
mov
addr16
insl
adc
mov
es
ret
fsubr
and
cmp
cmp
daa
xorl
sbb
icebp
jecxz
es
sbb
les
or
pop
push
xchg
loop
add
and
dec
lods
sub
or
mov
mov
push
rcll
mov
lods
mov
inc
push
sub
push
mov
mov
fs
cmp
xchg
shll
mov
fbld
dec
cld
insl
scas
lods
gs
cltd
xor
das
lret
sahf
adc
mov
xchg
or
sub
stos
fimuls
jmp
dec
push
and
rcl
jecxz
loopne
cs
sahf
repnz
fiadds
filds
pop
fstpl
in
cld
adc
test
inc
rclb
repz
fistpl
or
jg
xor
mov
jo
imul
sbb
fbld
inc
shrb
dec
out
and
rorl
pop
jno
std
and
cmp
mov
push
outsb
leave
out
push
inc
and
inc
jecxz
insb
mov
fwait
cmp
xor
mov
sbb
xor
outsl
inc
popf
or
and
sar
out
aaa
roll
mov
in
rep
jb
xor
movsl
test
xor
jg
int3
ret
or
mov
jo
ljmp
insl
fdivr
repz
xchg
movsl
ficomps
xor
sub
xor
adc
jns
imul
add
jp
inc
cmp
cmc
cld
pop
ret
aad
jp
xchg
xchg
call
inc
add
push
mov
xchg
rolb
push
dec
mov
add
xor
fimull
pop
mov
mov
cmp
int3
cmpsb
add
stc
adc
mov
scas
xor
test
cli
bound
jne
dec
mov
addl
xor
or
mov
mov
testl
pop
rolb
iret
add
fwait
arpl
jl
or
stos
and
xchg
jle
loop
xchg
and
dec
xchg
jb
gs
inc
fbld
xor
cmp
xchg
or
mov
sbb
cs
adc
push
push
stc
dec
es
das
jge
fdivp
mov
pusha
jnp
mov
jge
cltd
jg
cltd
fisubl
jno
jp
shlb
insl
or
lret
xchg
xchg
jae
lea
mov
out
mov
lea
xchg
sahf
insl
cld
pop
lock
add
stc
ja
out
loopne
mov
rorb
dec
icebp
sti
les
sub
repz
and
inc
icebp
leave
inc
arpl
aad
dec
cmp
insl
iret
js
shll
lcall
aas
bound
adc
ficoms
jb
mov
jge
pop
dec
cmpl
add
mov
ljmp
cmp
insl
mov
imul
ret
cmpsb
test
xor
push
add
rol
adc
rorl
xchg
or
jnp
scas
xchg
xor
outsb
mov
push
ss
sbb
cli
incb
dec
mov
mov
adc
mov
push
sub
shlb
out
xchg
push
xchg
movsb
jge
pusha
mov
lahf
rcl
les
xchg
cmp
lahf
popl
pop
imul
ja
bound
mov
int3
data16
jnp
jl
mov
pop
rcll
pop
xor
cwtl
fwait
popcnt
push
and
lcall
jo
ja
add
xor
ljmp
xchg
xchg
aam
fnstsw
cli
les
pop
es
ret
cltd
aaa
ss
sbb
stos
outsb
call
inc
and
ret
mov
push
xchg
sbb
mov
and
cmpsl
pop
and
cltd
scas
andl
insl
pop
js
dec
cmpsl
nop
mov
and
mov
mov
jno
mov
out
push
jl
stos
mov
pusha
pushf
push
sub
or
dec
add
mov
pop
push
fists
in
daa
leave
push
je
out
jl
add
cmpsb
cmp
or
ficompl
lcall
pop
add
mov
andb
dec
daa
mov
and
push
push
rcr
inc
xchg
dec
popf
cmpsl
xchg
and
shll
sar
std
dec
jns
jmp
dec
adc
lcall
xchg
jns
ds
or
push
push
out
imul
outsl
decb
cli
xchg
daa
add
jno
push
jo
scas
xchg
shlb
mov
bound
add
pushf
out
adc
and
sub
add
scas
loope,pt
lret
out
movsl
ret
in
adc
lods
and
outsb
push
inc
inc
add
xlat
fwait
jno
in
xor
in
sbb
je
popa
das
mov
inc
push
xlat
xor
enter
add
imulb
and
lods
push
sti
clc
xor
out
mov
mov
xor
inc
enter
sbb
add
arpl
cmc
jg
aaa
push
xchg
and
leave
jge
cmp
scas
pop
and
inc
pop
lds
shll
adc
les
test
inc
or
loope
mov
loope
mov
xchg
jp
int
jne
js
cmpsb
iret
sarb
add
nop
jg
outsb
cmc
jne
mov
jg
jnp
frstor
data16
nop
fs
out
push
sub
addl
dec
adcb
adc
fildl
pusha
mov
dec
jle
insb
repz
pop
cltd
xor
jmp
push
xchg
cwtl
loopne
loop
in
adcl
xor
cld
stos
cmovbe
outsb
lock
jle
out
int
cwtl
cmp
stos
xchg
insb
out
fsubrs
sbbl
xor
faddl
adcl
adc
test
das
lret
inc
pusha
dec
je
push
push
nop
in
aad
adc
add
loope
jge
push
inc
bnd
into
or
pop
arpl
lock
cmpl
subl
mov
inc
dec
shrl
pop
fwait
std
xor
mov
mov
arpl
in
imul
mov
mov
adc
pop
mov
pop
sbb
mov
pop
ja
ss
insl
fidivrs
sbbl
aas
ret
shlb
ds
jmp
or
addr16
lret
mov
cmpl
cmp
imul
pushf
fcmovu
movsl
mov
xchg
jbe
xchg
push
es
or
or
or
and
arpl
scas
cmp
jle
pop
jb
pop
sbb
fists
in
lret
pop
push
xchg
xor
mov
cmp
cmpl
loope
lods
cld
mov
fisttps
leave
int3
xor
cmc
ret
cmc
push
mov
sub
and
sub
cmp
mov
cwtl
jl
pop
in
mov
imull
aaa
aam
leave
jb
push
pusha
popf
lods
lods
add
mov
lahf
jp
mov
movsl
mov
fisubs
push
add
loopne
sub
pop
pop
jnp
sub
ror
cmp
sbb
es
pop
stos
jne
mov
leave
in
jle
xchg
test
mov
sub
inc
and
insb
add
scas
push
imul
shll
daa
mov
dec
test
push
jp
pop
and
ja
jl
add
out
lods
stos
into
fucomip
dec
sub
jge
cmpb
mov
pop
stos
sbb
arpl
outsl
call
xchg
inc
gs
push
add
sbb
aam
insl
sub
xchg
in
lret
mov
adc
lret
aam
sub
mov
push
movsb
dec
dec
mov
pop
jo
sarl
jb
cmpsl
inc
add
jmp
data16
loope
cld
jnp
and
pop
ljmp
xorb
xlat
mov
orl
out
sahf
clc
push
js
jbe
mov
pop
pop
insb
mov
mov
add
xchg
fwait
cs
stc
test
insw
and
push
les
jg
mov
call
pop
imul
pop
mov
sub
fisttps
dec
movsl
pop
pop
ljmp
int
les
jmp
int
add
data16
cltd
shll
fiaddl
pop
mov
roll
stos
int
cwtl
cld
mov
andl
add
inc
mov
jns
std
fldcw
sbb
cmp
jbe
cmp
test
insl
or
popf
js
and
dec
hlt
or
in
dec
push
push
mov
mov
adc
inc
adc
scas
stc
or
inc
imul
mov
repnz
mov
je
xor
adc
cmp
int
int
lahf
pop
fsubrl
outsl
icebp
xchg
xor
add
pop
nop
enter
cmc
xor
xchg
int
sub
ret
push
and
imulb
push
ret
xor
pop
bound
cmpsb
ljmp
cwtl
xor
push
cwtl
and
xor
sbb
pop
ds
lret
shlb
dec
add
inc
xchg
or
insb
xchg
pusha
jnp
mov
dec
insl
insl
sbb
out
loope
add
mov
mov
xchg
inc
jmp
outsl
les
add
fstpt
adc
std
mov
imul
xor
xchg
les
push
add
cmc
aas
jg
enter
scas
stc
inc
sar
adc
sub
xor
repnz
xchg
cli
jo
cmp
pop
jnp
fwait
je
xchg
ljmp
mov
add
dec
in
adc
pushf
add
xlat
xor
loopne
and
dec
scas
inc
aad
jbe
pop
and
std
xchg
and
add
es
popf
fucomp
cmp
fimuls
mov
mov
cmp
fimuls
lret
add
jne
loopne
dec
xorl
jmp
loopne
scas
stos
fwait
inc
mov
outsl
sbb
rorb
sub
cmc
outsb
jg
mov
test
jl
jno
call
jo
ja
add
sbb
out
or
shl
add
loop
sub
push
push
outsb
and
lods
adc
pop
neg
push
lea
xchg
es
stos
fldl
les
loopne
shrb
test
lahf
ficompl
adc
je
sub
stc
and
xor
ljmp
or
xchg
push
outsl
pop
filds
arpl
cmp
and
mov
daa
inc
aaa
adc
mov
sbb
insb
inc
push
das
and
xrelease
add
cmp
icebp
loopne
mov
lahf
aas
fs
adc
cli
shlb
xchg
and
inc
xchg
pop
adc
push
test
inc
adc
test
pop
fs
lcall
cmp
loop
or
add
andl
loope
pop
dec
out
nop
xor
and
or
test
mov
sbb
leave
xchg
xor
inc
pop
jae
mov
mov
cmpsb
and
jns
dec
mov
sbb
and
ficomps
adc
int3
and
mov
and
lret
add
adc
cmpsb
xlat
cs
leave
adc
or
adc
adc
or
sub
sbb
scas
pop
scas
push
xor
xlat
xchg
into
mov
xor
das
fwait
push
aad
mov
leave
jo
into
push
lret
movsb
inc
fwait
cmp
adc
in
inc
out
xchg
push
pushf
pavgb
push
mov
xchg
cmp
jge
xlat
sbb
mov
and
adc
jmp
roll
lcall
inc
aam
inc
and
loop
nop
mov
or
and
leave
bound
lahf
or
push
loopne
sbb
lds
jmp
pop
fcomps
aaa
xor
mov
xor
lret
std
mov
cmp
cwtl
mov
mov
dec
push
mov
or
jne
cmp
inc
cld
andb
mov
es
andb
fildl
mov
call
mov
adc
sub
inc
imull
xchg
in
sbb
jl
out
out
push
mov
and
movsb
mov
jne
loope
ret
call
dec
xor
sbb
xlat
mov
push
jnp
push
mov
mov
push
add
xor
dec
push
pop
stos
ds
mov
mov
roll
or
xchg
int
mov
or
inc
adc
xchg
mov
iret
push
aad
test
lahf
adc
mov
sub
mov
mov
daa
loop
aaa
cmp
add
enter
fiaddl
insb
cmp
mov
dec
and
mov
lods
imul
xor
imul
dec
jp
push
pop
add
xor
fmul
int
adc
daa
mov
push
push
adc
sbb
adc
std
or
shll
ljmp
sub
inc
bound
xor
pop
ja
cmp
lock
sub
imul
inc
insb
pop
imul
loope
mov
enter
leave
xor
mov
ljmp
iret
fidivrs
loopne,pn
adc
das
mov
sbb
popa
test
or
divb
mov
mov
in
sarl
loopne
inc
stc
int
mov
xor
jle
xchg
jne
push
adcb
add
stos
xlat
daa
pusha
push
inc
jno
icebp
ljmp
dec
pop
and
mov
subb
data16
or
sbb
fdivrl
adc
mov
push
int3
adc
movsl
es
jne
aas
push
mov
scas
and
jae
mov
xchg
popa
flds
pop
jb
mov
out
and
in
jns
sub
cli
jmp
xchg
imul
lahf
cmp
xchg
xchg
mov
cmovb
mov
or
lcall
xor
sub
jb
jge
loopnew
cmp
inc
daa
push
gs
ret
leave
rorl
sbb
sub
add
cwtl
or
rolb
int
cltd
out
popf
inc
mov
pop
mov
stos
mov
and
pusha
push
pushl
cmp
add
lret
ret
inc
loope
imul
imul
add
aas
jnp
aam
mov
cmp
es
insl
bound
cmc
jnp
in
push
cmp
test
lods
shrb
rcll
ret
xchg
xchg
pop
leave
test
cmp
jns
pop
mov
test
jb
xchg
adc
xchg
dec
jno
jne
clc
xor
add
out
xchg
cli
ret
mull
aad
jle
sbb
xchg
dec
mov
xchg
cli
and
sbb
cwtd
lods
iret
stos
sub
hlt
outsl
mov
xchg
out
bound
outsl
imul
cmp
loopne
fisubrs
fwait
and
add
or
pop
mov
pop
xchg
sbb
xchg
adc
dec
inc
adcb
jge
or
cmp
or
iret
mov
pop
addr16
cwtl
sub
lock
mov
sbb
pusha
daa
dec
jge
adc
popa
xor
inc
addr16
xchg
push
js
fstps
ss
dec
rorb
inc
pop
fiadds
jns
movsl
and
aaa
cmpsl
adc
xchg
jmp
push
cmp
dec
and
je
in
div
jbe
stos
insb
ja
pushf
mov
and
popa
mov
add
jns
in
ficoms
xor
jb
add
xchg
jo
ret
out
mov
push
idivl
adc
inc
and
rcll
call
shll
mov
xor
sti
shl
lods
dec
popa
mov
aaa
dec
add
mov
mov
lods
insb
fldcw
cmp
stc
test
test
adc
or
push
in
popf
out
stos
aad
jp
xchg
fxch
or
add
jl
or
jb
ret
dec
mov
lock
pushf
pop
ret
inc
in
popf
rorl
das
sti
cmc
adc
jl
xchg
cmp
cmp
push
xchg
mov
sbb
jp
mov
mov
out
stos
cli
loopne
or
cmp
int3
pop
fistl
lods
shrb
mov
ficoms
mov
jge
shlb
jae
outsl
mov
lea
cmp
dec
test
xchg
mov
inc
push
sbb
fwait
jmp
mov
pop
lahf
orb
xor
out
ret
jne
setne
fildll
fsubrs
enter
lods
push
lahf
dec
test
mov
and
jno
xchg
lahf
cmp
shll
and
rorl
or
test
fldcw
fs
and
mov
shl
push
icebp
fstpt
lret
outsl
adc
pop
leave
push
scas
mov
mov
xchg
xchg
xchg
add
mov
xor
pushf
es
add
jo
push
xchg
fwait
and
dec
frstor
cmp
orl
push
add
lahf
movsb
and
mov
int
adc
outsb
xor
call
lods
add
mov
test
into
jmp
cmp
outsl
sub
xor
xor
fildll
mov
push
aaa
pushf
std
jl
push
call
fbld
xchg
es
mov
aad
mov
ss
adc
add
push
aaa
pop
and
xchg
in
or
cli
aam
icebp
inc
jns
test
adc
nop
add
and
repz
jl
xchg
dec
frstor
mov
mov
imull
aas
jbe
pusha
lcall
jecxz
xor
mov
adc
push
add
clc
dec
jp
clc
mov
or
test
sarl
cli
xchg
rorl
adc
je
lods
into
xlat
hlt
sti
push
push
movl
dec
inc
dec
xchg
inc
fs
xchg
fld
inc
mull
and
pop
jns
decb
inc
push
jae
insb
filds
push
xor
sub
pop
clc
pusha
push
pop
mov
mov
lock
sub
jle
sahf
mov
xor
ljmp
ljmp
scas
or
mov
enter
xorb
mov
mov
and
fistpll
ja
or
bound
aad
call
stos
push
sub
dec
inc
inc
les
sbb
jbe
adc
sub
sbb
out
cmc
mov
push
mov
push
outsw
lret
dec
arpl
js
xor
sbb
push
test
mov
dec
repnz
xchg
xor
xchg
ljmp
vpshufd
dec
test
je
in
dec
stc
pusha
mov
mov
pop
adc
ret
push
pop
out
fdivs
leave
lret
jl
xor
adc
cld
sbb
add
cmpsl
addb
push
push
nop
sbb
inc
loop
dec
mov
mov
cmp
clc
cmpsb
inc
addr16
inc
sbb
fadds
xchg
pcmpgtd
xchg
lods
int3
stos
xchg
mov
cmp
hlt
aam
cmc
test
push
sub
jg
lret
dec
jg
jne
sub
mov
mov
dec
add
jg
inc
ret
fs
cmpsb
dec
inc
insb
mov
popa
jg
test
adc
mov
sbbb
daa
push
pop
scas
xchg
inc
pop
xchg
incb
inc
push
dec
mov
ljmp
cltd
lea
dec
nop
out
cmp
sbb
push
inc
ljmp
ds
je
cmp
xchg
mov
stos
xchg
add
mov
aad
cld
rclb
enter
mov
pop
clc
pop
cld
cs
sbb
mov
push
inc
push
or
enter
sbb
mov
lret
pop
mov
loope
stos
mov
fimull
ljmp
inc
mov
lods
aad
mov
or
mov
inc
pop
cli
shlb
sub
xchg
inc
lahf
or
sbb
xchg
jl
jp
dec
dec
cld
imul
pop
push
enter
out
jp
jge
add
push
mov
fisttps
jns
int3
popa
mov
int3
imul
add
sbb
mov
lods
cmp
out
mov
xchg
xchg
inc
and
scas
dec
pop
andb
fwait
leave
fmull
jb
push
outsb
cli
adc
mov
pop
jo
mov
and
pop
fisubrl
add
jae
insb
int
stos
jne
sahf
sbb
or
or
push
xor
jne
andl
ljmp
out
pop
out
xlat
test
cmp
pop
sbb
inc
mov
and
sbb
sub
test
jbe
dec
jle
jp
mov
adc
xor
pop
sbb
addl
jp
loop
cltd
jo
call
mov
xchg
xchg
ja
add
push
mov
nop
ds
add
or
orps
and
adcb
icebp
insl
pop
popf
sub
pop
pop
inc
aas
ljmp
sub
mov
mov
lods
jo
test
and
jmp
pushl
cli
jp
sbb
adc
stos
inc
enter
lds
sbb
mov
inc
out
xor
in
iret
out
es
push
mov
loop
inc
mov
jle
daa
fdivr
psubd
dec
call
jp
ss
sahf
inc
ret
ljmp
aaa
jnp
sub
mov
and
int
cmpsl
fnstcw
push
adc
scas
aaa
mov
cmp
leave
sub
loopne
sbb
popf
fcoms
outsl
shrb
mov
mov
jle
mov
out
mov
inc
popf
ror
mov
add
cmp
outsl
enter
hlt
cli
scas
add
cmc
mov
out
jecxz
test
jmp
rorb
fnstsw
punpckhwd
ja
fstl
xchg
daa
dec
sbb
mov
lods
jge
xchg
daa
testl
push
lods
call
clc
fisubl
jp
js
test
jle
sub
add
jg
and
out
push
in
sbbb
adc
lcall
inc
inc
pop
mov
or
sub
clc
mov
bound
mov
dec
loopne
std
xchg
dec
jns
scas
lahf
data16
and
insl
leave
push
mov
mov
xchg
jno
enter
movsl
inc
cli
lds
dec
jmp
insb
call
iret
mov
je
pop
mov
adc
xor
iret
mov
add
sbb
test
gs
mov
push
cli
flds
int3
addr16
dec
loopne
sbb
xchg
ficomps
loop
push
imull
pop
xchg
cmpsb
push
add
jl
pop
mov
and
jmp
adc
bound
sbb
inc
cwtl
mov
xchg
cmp
or
add
je
xor
hlt
mov
inc
addr16
daa
sub
or
mov
jecxz
cmp
push
adc
mov
or
or
mov
jle
jo
jp
mov
lds
in
inc
lds
popf
fdivl
bound
xchg
inc
xor
fldcw
xor
pop
in
js
jnp
sarb
dec
pushf
dec
cld
mov
rolb
mov
dec
or
loope
add
add
push
and
inc
adc
cli
inc
inc
rcr
push
imull
roll
sbb
xor
jno
push
jl
jb
cs
out
rcr
pop
adc
add
stos
cld
dec
test
mov
sbb
push
aaa
sub
syscall
stos
jno
mov
imull
movsl
nop
xchg
pop
xchg
movsl
sub
inc
lret
fsubrs
cli
pop
inc
jmp
adc
xchg
pop
out
dec
or
jno
insb
push
in
es
inc
jno
jns
adc
loop
pop
hlt
int3
pop
and
dec
xor
cmp
pop
fisubs
scas
dec
xor
popf
push
jns
js
mov
insl
jl
aas
mov
movsb
inc
add
adc
arpl
fistpll
movsb
inc
std
loope
cli
pop
mov
aam
mov
lret
fnstcw
push
cld
xchg
jp
movsl
adc
icebp
fsubrs
nop
movl
and
rcrl
sbb
cmpsb
pop
cmp
inc
inc
or
cmp
adc
test
ret
push
iret
sub
loope
es
fcomps
scas
rcr
mov
mov
inc
add
adc
pop
pusha
sub
xor
inc
or
bsf
rcr
add
dec
outsb
push
loop
xchg
mov
push
lret
addr16
hlt
leave
lock
and
clc
mov
test
test
mov
mov
outsl
bound
mov
push
es
scas
fmul
repz
dec
test
push
jns
inc
sub
and
sbb
clc
cs
and
call
mov
enter
bound
jbe
adcb
or
testl
or
cli
adc
shl
cli
popf
xchg
and
ror
dec
dec
repz
stos
sbb
or
xor
adc
divb
xchg
cld
lret
out
in
cmp
and
int
cwtl
pop
fdivrl
pop
push
scas
cmp
ret
cmp
inc
cs
and
loope
lret
cmp
jl
push
cmp
push
outsb
or
pushf
call
ljmp
xor
mov
inc
mov
data16
cmp
insl
cmc
pop
dec
pop
lret
aam
movsl
nop
mov
dec
push
cwtl
in
lds
mov
enter
loop
mov
cmc
lods
jle
inc
mov
jp
dec
nop
outsl
mov
sub
mov
pop
push
mov
and
jl
mov
ss
mov
push
sbb
adc
mull
add
cmp
clc
mov
push
cltd
in
sub
insb
adc
repz
or
push
fstps
mov
iret
cmp
fnstsw
mov
inc
stc
insb
inc
pushf
push
mov
jmp
cmp
mov
call
pop
add
adc
mov
aaa
fnstenv
xchg
mov
push
mov
cmp
mov
inc
arpl
and
push
shll
fdivrs
notb
sbb
or
xchg
mov
stc
icebp
les
sbb
fs
cmc
stos
xchg
in
ffree
loope
xchg
push
mov
ret
dec
jnp
inc
aad
fxch
xlat
dec
fnstcw
xlat
daa
and
mov
adc
mov
add
sbb
push
shlb
aaa
and
sahf
sub
cmpl
push
ret
data16
jge
lds
inc
and
push
test
mov
dec
iret
adc
add
xchg
fsubs
dec
icebp
xchg
xchg
inc
stos
mov
sarb
push
shlb
orb
and
js
sub
lret
xchg
cwtl
mov
mov
cmc
sbb
jmp
jbe
jbe
cmpsl
push
roll
xor
ficoml
aam
ljmp
adc
imul
scas
mov
cli
dec
adc
inc
pop
sbb
inc
xor
aad
lret
shl
pop
std
pop
jp
in
sub
into
pushf
adc
enter
addr16
push
loop
out
lock
push
or
loopne
inc
in
push
stc
mov
jnp
mov
insl
movsl
sarb
loop
divl
pop
fisttpl
repz
jo
mov
or
pop
lahf
inc
clc
lds
stos
adc
adc
cmpsb
aad
mov
mov
xchg
out
sub
jl,pn
adc
inc
imul
divl
xchg
fwait
push
out
aaa
sbb
adc
cmpsb
xlat
pop
sbb
lret
xchg
outsb
push
mov
xchg
adc
mov
leave
fs
xor
mov
sub
jnp,pn
mov
or
push
rcll
jecxz
daa
lods
test
fsubl
jge
mov
mov
clc
sahf
mov
es
adcl
cmp
xor
aad
stos
out
adc
cli
imul
adcl
push
xor
pop
sbb
inc
adc
popf
cmp
out
je
orb
mov
push
or
test
test
repz
cmp
dec
mov
aam
jmp
in
adc
les
loope
push
adc
sti
adc
sarl
inc
xchg
dec
jae
sbb
jne
mov
mov
jae
insb
je
lret
lret
aad
test
mov
cmp
push
and
jecxz
pop
sbb
xchg
psubusb
mov
in
scas
into
data16
addr16
pusha
mov
sarb
dec
sti
pop
das
stos
cwtl
jnp
or
cmp
xor
sub
mov
and
sub
hlt
add
sbb
int3
test
lock
pushl
call
call
push
fcoml
ret
cmpsl
fldl
pusha
mov
repz
push
insl
arpl
sbb
sub
ss
mov
sub
sti
sbb
xor
cmpsl
lods
rorb
daa
jl
jmp
pop
jnp
ret
sbb
push
adc
call
inc
jno
push
call
push
sub
push
pop
je
adc
add
push
iret
push
and
mov
mov
mov
inc
or
dec
or
cmp
dec
bound
aas
ret
out
fdivrs
dec
dec
and
push
adc
xor
dec
jl
das
dec
sbb
ret
cld
jno
mov
rorl
movsl
or
jno
int3
mov
mov
push
add
sub
push
das
mov
int3
xchg
lods
push
cmc
pusha
loope
sbb
push
jnp
aas
and
pop
jbe
fbld
dec
pop
subb
std
je
pop
cltd
sbb
in
sub
das
push
inc
ret
cmpb
adc
sub
test
mov
pop
and
aaa
jecxz
daa
inc
add
imul
iret
xchg
push
ss
dec
outsl
pop
loop
popf
jp
mov
and
mov
dec
cwtl
mov
dec
cmp
mov
inc
lock
xchg
mov
bound
aad
jge
jbe
je
iret
and
dec
test
add
rol
push
push
pop
outsb
out
adc
cmp
test
outsl
repz
adc
andl
xor
xchg
jbe
xor
ror
das
adc
loope
lds
pop
or
xchg
mov
lods
movsb
mov
ret
xbegin
jg
sub
cwtl
xor
test
sub
repz
loop
fldt
mov
aas
pop
mov
cmp
sbb
mov
pop
xchg
add
inc
xchg
test
add
pop
inc
ja
push
iret
int
inc
into
adc
pop
pop
scas
icebp
gs
inc
les
shrl
pop
push
lahf
lock
mov
xchg
decl
les
xchg
mov
or
mov
adc
xor
xor
jae
cmc
roll
rclb
repz
push
mov
xchg
mov
jg
dec
add
jp
std
punpcklwd
xor
jno
mov
push
std
lcall
cmc
jg
out
mov
cmpsl
mov
and
jp
aam
or
sti
xchg
loop
shrl
pop
lds
notb
icebp
sarb
xchg
push
mov
fdivs
cmp
pop
lds
push
mov
in
dec
insl
and
outsb
adc
fisubrs
mov
xchg
nop
ljmp
adc
inc
or
mov
mov
inc
movsb
scas
pushf
xor
sbb
jmp
jmp
xor
mov
inc
pusha
sub
jns
cmp
in
fwait
or
cmp
mov
iret
jo
les
fs
jbe
pop
insb
and
pop
test
aad
aam
jle
or
mov
adc
sub
sub
or
push
in
fstl
outsl
adc
in
mov
mov
imul
mov
jle
sub
in
sub
out
clc
mulb
add
daa
mov
push
jg,pt
dec
inc
lea
jl
xlat
mov
jmp
rolb
test
sub
lret
rcl
fstpl
cmp
int3
inc
fcoml
js
pusha
pop
into
cmpb
adc
clc
inc
mov
pop
rclb
push
adc
sbb
inc
out
xchg
in
add
adc
add
jmp
into
mov
cmp
sub
outsl
mov
aas
xor
xchg
adc
push
sub
inc
push
int
pop
popa
or
ret
mov
scas
adc
pop
pusha
test
or
fs
rclb
sti
stos
adc
fwait
cmc
pushf
loope
adc
pop
push
sub
xor
mov
in
test
adc
mov
xor
out
js
addb
ret
sbb
xchg
scas
inc
pop
inc
inc
test
aas
ja
mov
cmp
aad
inc
clc
lret
shl
out
test
movsb
jbe
sbb
xchg
jecxz
pop
pop
xor
les
or
adc
mov
adc
outsl
xor
out
pop
dec
lahf
cmp
rorl
lahf
push
fisubrs
dec
aas
xlat
xchg
aad
mov
jl
dec
sahf
or
call
adc
cmp
mov
and
cs
sbb
call
xor
jbe
xchg
pop
xchg
cwtl
arpl
jle
jbe
cmpsb
dec
bound
mov
adc
adc
sahf
mov
and
push
and
fidivs
in
cmpsl
add
rclb
jno
into
lds
mov
inc
xor
xchg
stc
repnz
faddl
fwait
xchg
or
push
les
sbb
cmp
movsl
cmc
fcompl
xchg
in
xlat
adc
jno
outsl
out
ljmp
clc
addr16
cmp
ljmp
je
xor
popf
cwtl
fiaddl
pop
in
lods
cwtl
pop
addr16
and
jg
imul
fdivrl
push
movsl
idivl
jg
clc
adc
cmp
fnsave
sbb
inc
cwtl
mov
mov
inc
fisttps
div
es
divl
lahf
pop
pop
stos
and
adc
pop
adc
fwait
adc
jmp
sub
mov
outsl
bound
andl
test
in
iret
jmp
pop
lods
fcomps
divb
mov
pop
ja
fildl
in
pop
mov
int3
in
jno
ja
dec
jo
mov
xor
lock
les
jge
jne
aam
pop
or
daa
ficomps
mov
jle
add
loop
add
out
lret
cmp
jne
imul
pop
mov
lods
test
sbb
adc
push
popa
movsl
lods
dec
popf
mov
push
mov
out
stc
ret
ret
sbbb
and
jb
dec
mov
test
sar
mov
cmp
sub
sbb
ds
mov
cmpsb
popf
scas
loopne
mov
stos
push
xor
cs
mov
addr16
push
inc
inc
clc
out
pop
cltd
xor
lret
stos
aad
imul
rol
pop
inc
cmpb
inc
jo
pop
mov
dec
int
push
mov
xor
mov
std
pop
mov
mov
out
popf
and
mov
fstpt
in
xlat
jne
sub
jmp
mov
fistps
jb
jge
repz
mov
shlb
mov
decb
push
negl
dec
push
in
sub
decb
pop
fs
hlt
mov
popa
jbe
dec
loope
inc
jnp
mov
push
orl
or
mov
fistps
and
lret
lea
call
out
inc
dec
adc
and
dec
mov
test
cs
mov
loope
or
popa
push
xor
inc
cltd
cmpsb
or
push
mov
sbb
cmpsb
jno
and
pop
sahf
push
scas
mov
in
inc
das
sub
jg
bound
cmp
xchg
orl
push
cmpl
aas
cltd
popa
in
int3
jns
int
dec
nop
ret
stos
add
je
inc
leave
repz
rcrl
xchg
inc
add
mov
pop
xchg
mov
out
lock
jbe
mov
cmp
xor
or
loopne
out
mov
mov
sti
pop
loopne
repz
lahf
push
dec
pop
push
xchg
mov
clc
push
arpl
test
shl
insl
xor
cmp
jbe
adc
int3
out
inc
mov
xor
mov
into
outsl
add
aaa
or
push
jne
mov
cmp
push
cltd
call
pop
jge
sub
push
fwait
push
mov
mov
mov
fwait
out
jecxz
mov
mov
ljmp
mov
cli
sbb
test
mov
mov
cli
jo
mov
aas
mov
subb
mov
add
or
xor
xchg
dec
xor
mov
lea
xor
mov
cs
in
enter
adc
pop
stc
fisubrs
pop
sub
mov
inc
push
enter
jg
rorl
jmp
std
enter
cmc
push
shl
test
je
fsubr
mov
adc
and
dec
pop
xchg
and
sub
pop
mov
xchg
dec
sti
cmp
jg
lcall
cmpsb
sti
cltd
outsl
inc
lea
push
test
and
jp
xor
or
push
iret
test
xor
xchg
or
fimull
pop
push
lods
fwait
pop
push
or
hlt
popf
test
mov
inc
aaa
pop
jbe
xchg
mov
mov
stc
ret
imul
mov
adc
lods
and
rcrb
les
pop
pop
sub
pop
pop
xchg
cs
outsl
mov
xchg
xchg
push
xchg
out
sub
scas
dec
pop
mov
shrb
xchg
pop
mov
push
popf
and
imul
ror
cmp
cmp
xchg
fst
fcomps
xor
mov
push
push
movsb
cmp
push
lea
stos
sbbl
mov
xchg
fistl
cmp
sub
aas
aad
cmp
or
hlt
pop
xchg
cmc
pop
jmp
push
inc
inc
dec
fstps
adc
push
and
scas
xor
les
mov
dec
arpl
and
stos
gs
or
mov
call
lcall
shrb
scas
xchg
fmuls
sub
push
sarb
roll
inc
lret
das
add
push
xchg
jmp
out
cltd
les
popa
xor
cmpsb
xchg
sbb
mov
test
mov
and
adc
dec
pushf
std
data16
xchg
or
jmp
push
inc
aaa
sbb
inc
xchg
bound
lret
xchg
pop
int3
adc
adc
jle
jnp
ret
push
out
pop
add
int
sarb
mov
lcall
xchg
andb
pop
mov
sub
jmp
jge
mov
idiv
or
lret
pop
lock
cmp
sbbl
sarl
lahf
rcrb
mov
fisubrl
in
ljmp
sub
jmp
imul
pop
sbb
ds
jno
test
movsl
xor
imul
movsb
popf
je
jno
adc
cld
xchg
jo
cmpsb
shlb
mov
adc
mov
mov
mov
mov
roll
inc
cmp
and
into
sbb
ja
or
hlt
add
inc
dec
cwtl
stos
je
nop
imul
add
dec
sub
pop
dec
add
mov
sub
fcomip
sub
pop
rol
xchg
push
add
scas
cmp
out
push
pop
xor
jmp
adc
xorb
shrl
test
pop
inc
pop
sub
and
dec
rolb
lods
fs
aad
lcall
leave
imul
ss
push
and
in
mull
jo
mov
in
das
mov
ffreep
mov
jle
push
ret
enter
inc
bound
lea
jb
push
arpl
jmp
ljmp
mov
pop
mov
or
hlt
stos
dec
in
xchg
lea
mov
ret
cli
pop
sub
sub
popf
das
jbe
inc
bound
push
es
and
push
ret
ljmp
add
sub
out
test
out
cmpsl
mov
fcompl
or
mov
xor
mov
sub
lods
or
pop
jmp
pop
imul
cld
stos
push
mov
jbe
loopne
adc
fs
fimull
and
or
fsubrs
dec
nop
ret
fisubs
icebp
inc
fs
js
cmc
mov
jg
mov
jnp
mov
insb
ljmp
pushf
jle
pop
mov
jns
dec
shl
decb
xor
or
xchg
in
loope
ficoms
push
fcompl
or
xor
test
mov
and
jbe
cltd
repnz
nop
int3
dec
push
jle
xlat
push
cmp
repnz
int
call
dec
andb
push
fldt
leave
lods
call
cmpsb
jb
sub
inc
mov
call
pop
sub
and
xchg
and
push
pop
sbb
scas
push
loopne
and
push
adc
test
xchg
dec
xor
sbb
fcomps
lahf
xor
and
movsl
test
out
mov
xchg
test
xchg
xchg
fisttps
ja
xor
or
out
pop
cmp
cmp
ret
and
dec
inc
mov
push
add
call
test
sub
stos
fdivrl
adc
in
xchg
aas
xlat
aaa
jbe
or
in
lock
subl
int3
xchg
push
pop
adcb
adc
movsb
fstl
xor
pop
sbb
push
lods
ljmp
pop
call
hlt
dec
test
push
gs
and
das
mov
pop
dec
mov
and
fstpl
push
mov
stc
das
fsubrs
bound
inc
es
sub
sub
daa
jb
popl
mov
dec
dec
pusha
push
in
jo
cltd
inc
mov
sbb
xor
mov
push
lcall
jno
icebp
sbb
mov
fwait
iret
out
in
ljmp
ljmp
es
out
std
gs
rcrl
and
pop
jne
insb
xlat
and
cmp
cmp
js
push
mov
add
or
mov
xchg
jecxz
bound
adcb
iret
sbb
cmp
mov
mov
ja
ds
xor
lods
inc
cmp
mov
jge
lea
jno
sti
lret
add
mov
and
dec
mov
test
ss
int3
xchg
mov
scas
adc
xor
lock
addb
xchg
inc
loop
out
cmp
xor
cmp
adc
out
mov
loope
aas
xchg
nop
shl
andb
xchg
xor
dec
das
add
pop
xchg
fnsetpm(287
push
rcrl
icebp
sbb
mov
mov
outsl
cmpsl
inc
adc
jg
pop
divl
pop
filds
dec
push
sbb
mov
adc
hlt
jecxz
cmc
adc
jp
mov
in
repnz
mov
pop
push
test
scas
mov
dec
movsb
dec
push
push
pop
lret
leave
sbb
repnz
xor
out
inc
in
subl
aas
shlb
jo
fldl
lods
or
in
test
add
aam
mov
daa
jg
jecxz
mov
dec
cmpsb
xchg
mov
lods
arpl
sub
in
cld
pop
push
pop
icebp
fcompl
movsb
repz
mov
leave
orb
cmpsb
cwtl
scas
pop
dec
adc
ret
hlt
add
std
jle
sbb
jl
xchg
xchg
decb
std
stos
xchg
push
fsubrl
iret
jle
sbb
pop
call
adc
sbb
ljmp
lcall
pop
sub
push
push
scas
data16
dec
gs
mov
ljmp
push
and
fwait
in
sbb
jb
xchg
jnp
mov
sbb
push
sahf
jbe
mov
push
bound
es
out
imul
cmp
lahf
enter
out
loopne
jns
out
adc
mov
push
mov
xchg
sbb
mov
lods
jb
out
mov
pop
jecxz
jno
xorb
sbb
roll
add
faddl
mov
stos
inc
mov
adc
in
sbb
mov
mov
sbb
add
out
sub
inc
add
mov
mul
pop
bnd
idiv
clc
enter
jns
and
pop
add
sarl
bound
dec
pop
lahf
movsb
adc
or
jne
jge
aam
mov
push
stos
add
pop
pop
cmp
cld
mov
push
lahf
test
mov
dec
rolb
stc
mov
and
enter
push
imul
adc
pop
fldt
lahf
mov
jo
jmp
lds
lret
outsl
aas
push
jge
stc
popf
imul
jecxz
adc
jmp
mov
lods
xor
and
test
add
xchg
stc
popa
test
mov
insb
pop
xor
push
push
xchg
pop
xor
lea
in
sub
data16
popf
jno
cs
mov
ud1
call
or
and
addl
sbb
lcall
or
sub
xchg
jge
add
jbe
inc
test
jb
repz
sbb
in
rorl
hlt
nop
into
sub
leave
sarb
adc
inc
add
imul
ljmp
fyl2xp1
cld
out
inc
test
jbe
stos
xor
in
and
pushf
add
adc
sbb
imul
divl
fs
mov
sub
pushf
add
out
arpl
test
adcl
adc
cli
push
popf
sbb
inc
test
push
jp
or
push
lea
push
js
xchg
push
bound
push
arpl
xor
adc
and
push
in
dec
pop
mov
enter
pop
mov
mov
pushf
xor
cwtl
daa
cmp
cli
mov
test
cld
vmread
xchg
lret
push
cmovle
stc
inc
imul
bound
std
sub
mov
push
icebp
mov
cmp
mov
rcrb
bound
adc
es
mov
int
scas
and
loope
imul
int3
jae
jmp
aad
and
shrb
push
gs
cmpsl
dec
aaa
insl
cltd
inc
jns
xor
lret
sbb
pusha
ja
push
adc
push
mov
inc
mov
adc
rorb
adc
cmp
addr16
mov
in
ds
pushf
out
pop
das
pop
sbb
jge
xchg
lock
mov
icebp
add
hlt
mov
fwait
sub
jmp
jmp
cmpsl
ret
mov
jo
call
insb
es
leave
notl
mov
add
xlat
es
mov
jnp
jo
xchg
cmc
repnz
pusha
and
cmp
into
dec
or
xor
pop
dec
fistl
cmp
push
dec
push
xchg
sub
dec
cmc
or
and
call
or
pop
sarl
movsl
inc
pop
jmp
cmpsb
fldenv
cmp
shl
push
jb
fdiv
jg
fldenv
jbe
ljmp
sbb
cmp
mov
in
sti
adc
cli
sbb
rol
jb
mov
sbb
xor
inc
lea
inc
pop
jge
enter
lea
loopne
imul
jns
je
testl
mov
push
fsts
add
push
sahf
cli
mov
mov
lcall
pop
pop
lds
adc
jecxz
xor
jle
rolb
fdivs
fimull
sub
scas
mov
sbb
in
mov
jp
mov
push
and
mov
insl
fdivrp
lods
dec
insb
movsl
cmp
add
pop
xchg
xor
mov
xchg
xchg
cmp
sbb
cld
and
and
nop
fsubrl
mov
xchg
int3
lea
inc
jmp
push
sar
sbb
pop
sbb
out
arpl
dec
push
push
test
push
imul
mov
sub
add
inc
and
cmp
jb
cld
sahf
xor
mov
lahf
sti
mov
popa
pop
sbb
or
sub
iret
cmpl
jmp
mov
out
lods
loop
loopne
sub
pop
out
adc
push
dec
and
cmpsb
arpl
addr16
xchg
pop
enter
or
jbe
xor
fwait
adc
std
or
addr16
out
xor
jns
inc
and
xchg
adc
insl
adc
sarb
orl
inc
cmp
or
and
ret
and
and
lock
sbb
lret
xchg
inc
push
xlat
push
push
std
in
ja
addr16
cs
imulb
inc
je
pop
stc
push
iret
mov
flds
xchg
inc
push
dec
aad
jnp
xor
dec
add
and
mov
lods
mov
push
add
adc
ret
in
cmp
fcmovb
inc
xchg
nop
cmp
push
das
xor
sbbb
jl
int3
or
adc
fldz
fsts
insl
popf
in
dec
push
or
fwait
cmp
mov
dec
rcl
shl
mov
and
push
adc
ljmp
mov
pop
aaa
mov
cmc
sbb
xchg
inc
jmp
stc
test
scas
inc
push
loope
jl
aam
push
mov
inc
mov
mov
push
adc
int
adc
inc
mul
shrb
xlat
xlat
mov
adc
cmpsb
lea
or
dec
push
ljmp
bound
adc
lea
addl
inc
sbb
or
fdivrl
xchg
inc
test
mov
aaa
imul
mov
sti
out
insl
pop
dec
in
outsl
xchg
mov
lcall
mulb
jmp
out
repnz
jmp
movhps
sub
mov
rol
fcmove
data16
fisttps
int
loop
test
xorb
jmp
mov
pop
cmp
shr
mov
adc
iret
inc
mov
push
jno
stos
test
jo
pop
imul
lea
inc
insl
sbbl
xor
addr16
dec
rcr
push
test
cwtl
pushl
mov
push
decl
adcb
or
jns
in
push
es
xchg
xlat
stos
push
es
pop
cmc
insb
mov
jbe
out
test
or
idiv
dec
or
add
mov
lods
out
and
fcomip
enter
in
add
test
inc
sub
lahf
or
xchg
mov
mov
mov
xchg
or
push
xor
push
and
in
daa
add
sbb
cmp
sub
sbb
inc
ss
push
sbb
scas
fnstsw
sub
lods
insb
rol
cwtl
mov
es
cltd
pop
pop
hlt
std
jl
lret
dec
xorb
xor
xor
test
mov
test
sub
xchg
inc
aas
rcll
adc
and
daa
xchg
int3
dec
cmp
mov
inc
mov
xor
xchg
lock
xor
or
dec
mov
inc
mov
arpl
cmp
mov
pop
pop
insl
dec
mov
popa
pop
inc
rcl
pop
xchg
out
inc
pop
rcll
stos
adcb
rorl
subb
cmp
cmc
add
in
inc
out
paddb
xor
pop
das
ret
je
or
fyl2x
mov
or
pop
push
sbbb
mov
mov
mov
cwtl
adc
mov
inc
outsl
push
cmp
push
dec
adc
out
sub
sbb
out
adc
inc
repz
jmp
or
cmc
dec
movsb
sarb
pusha
lock
popa
pop
je
inc
test
int
orl
pop
xor
adc
cmp
out
loop
cld
xor
mov
dec
xor
xchg
rcrb
add
add
push
mov
xor
aam
and
push
sbb
mov
clc
xorl
call
dec
push
push
mov
sub
addr16
icebp
das
jecxz
add
inc
mov
cld
mov
rorl
jbe
nop
jo
pushf
pop
cli
cs
mov
adc
sub
fdivs
cs
inc
test
dec
mov
aam
mov
pop
jo
pop
imul
xchg
sub
icebp
fwait
call
xor
push
fwait
std
or
add
mov
mov
push
test
mov
movsb
or
lret
bound
sbb
sbb
jmp
cli
mov
outsb
cmp
mov
ja
mov
jne
aam
cli
fsubrs
cmp
add
xchg
sbb
data16
mov
outsb
lahf
mov
xchg
dec
xor
push
cmp
add
in
arpl
out
pop
mov
or
push
out
out
std
sub
jp
adc
movsb
add
int
mov
call
cmp
test
push
into
mov
pop
mov
scas
and
repz
push
movsl
fnstcw
cmpsb
jmp
sbb
gs
cmp
cli
jae
stos
xchg
dec
dec
jg
inc
xchg
push
cld
mov
add
inc
jl
ss
mov
xor
aas
out
xorb
sub
and
pop
mov
jnp
sub
xor
ret
scas
pop
mov
fdivr
into
test
xor
jl
ljmp
rol
jb
lods
mov
push
or
ret
dec
push
and
adc
mov
inc
cmp
sbb
je
out
aas
push
dec
mov
inc
fists
adc
scas
add
mov
int3
aad
push
and
push
lret
cmp
bound
int3
js
mov
loopne
pop
scas
shlb
sub
mov
lret
jge
dec
xor
jnp
jge
sbb
das
mov
jle
hlt
mov
outsb
ljmp
ret
or
add
mov
inc
fisubrl
lcall
clc
push
aam
lea
mov
xchg
sbb
adcb
jno
inc
div
js
xor
cmp
mov
into
dec
or
in
lret
dec
std
std
dec
lcall
sbbb
sbb
sahf
sbbb
test
test
cmp
out
mov
loopne
and
movsb
leave
xchg
test
jl
and
inc
push
movsb
leave
inc
nop
data16
das
pop
rolb
ret
lahf
cmp
in
xchg
fstpl
adc
cltd
nop
cltd
aas
out
ret
pop
cmp
xorl
lahf
mov
stos
or
mov
ret
lret
int3
ljmp
mov
icebp
mov
nop
push
jb
pop
xchg
adc
push
xchg
enter
mov
rsqrtps
fdivl
je
xchg
test
stos
out
jge
inc
xchg
in
cwtl
js
clc
into
ljmp
ret
lea
cltd
es
in
and
std
fsubs
and
or
enter
subl
out
mov
cmc
inc
mov
pop
inc
daa
insb
push
cmp
sahf
xor
pop
jnp
repnz
fstl
mov
inc
insb
push
push
addl
imul
pop
jmp
addl
mov
cld
sbb
and
jecxz
mov
jo
fnstcw
mov
daa
mov
and
sbb
lret
arpl
in
pop
rcr
jnp
mov
imul
call
stos
mov
int
mov
rcl
test
popf
scas
icebp
add
outsl
cwtl
fucomi
test
lea
xchg
adcl
add
in
sbb
pop
popf
add
hlt
test
xor
mov
mov
mov
aam
imul
fs
and
sahf
loop
pop
cmp
ljmp
mov
adc
push
bound
xor
add
notl
mov
or
adc
lods
add
ja
movsb
icebp
daa
inc
cmp
sub
xor
out
inc
mov
sarb
gs
pop
mov
or
lods
dec
stc
out
lret
loopne
cmp
jb
inc
jne
int3
out
push
pop
pop
fisttpl
dec
pop
fs
into
sub
imul
mov
jmp
sbb
int
rcr
inc
mov
dec
or
mov
cmpsl
out
mov
stos
imul
pushf
dec
adc
lods
das
shlb
std
mov
dec
cs
xchg
aad
movsl
sbb
test
nop
pop
xor
lahf
pop
mov
shll
jns
rorb
addr16
dec
inc
sbbb
xchg
lret
aaa
lods
test
sbb
loopne
shrb
clc
out
test
xor
mov
or
loopne
xchg
popa
pushf
dec
inc
lahf
mov
aas
imul
pusha
enter
movsl
cld
bnd
mov
ja
jecxz
push
and
iret
dec
mov
mov
mov
xchg
sbb
popf
mov
and
pop
dec
shl
repz
xchg
push
fcoml
hlt
xchg
cmpsl
int
sbb
lahf
outsb
sbb
lret
fwait
orl
test
sti
lret
sub
mov
push
xor
mov
dec
mov
pop
inc
mov
adc
mov
mov
mov
jb
pop
sbb
xchg
xchg
cmp
add
shrb
mov
add
sbb
mov
xor
xor
lods
sarb
sub
cli
nop
shlb
xor
repnz
mov
aas
rcrl
add
in
lods
cmpsb
xorl
mov
daa
nop
int3
pop
std
mov
mov
fisubs
icebp
test
inc
jmp
mov
in
inc
pop
shr
mov
cmp
mov
fldl
jbe
or
jns
paddusb
mov
in
getsec
mov
and
adc
mov
jo
jmp
adc
imull
jge
pop
fcmovnu
mov
jo
mov
shrl
mov
lock
std
or
test
je
mov
sbb
mov
sbb
cmp
xchg
xor
les
lret
xorb
mov
xor
xor
push
mov
jnp
insl
and
jp
jb
jmp
push
lret
mov
mov
pushf
cld
fsubrs
jmp
pop
inc
in
cli
cltd
pop
lret
mov
pop
mov
sub
ret
test
and
cmp
push
mov
xchg
outsl
popf
les
pop
sub
xor
mov
sti
in
dec
popa
mov
ljmp
jno
popf
out
pop
xchg
inc
jns
adc
cmc
xor
lock
adc
imul
xor
aad
mov
insw
in
push
pop
push
sbb
inc
lcall
das
nop
mov
mov
std
lret
inc
flds
xchg
jnp
outsl
lcall
and
sbb
mov
not
jno
enter
test
arpl
or
add
xor
sbb
mov
lcall
rcl
dec
lret
insb
sub
or
ret
mov
insl
cmp
aam
mov
sbb
mov
stos
addr16
inc
sbb
sbb
or
xor
push
dec
ss
fwait
lret
cltd
fs
mov
mul
cmp
dec
jle
clc
jge
jnp
jo
out
jnp
out
ds
enter
movsb
addb
mov
mov
push
insl
rclb
call
daa
and
xor
dec
rcrl
arpl
xor
sub
insb
sbb
icebp
roll
inc
mov
sahf
loopne
stos
daa
data16
gs
sub
mov
sti
push
mov
ret
mov
gs
iret
mov
pushf
xlat
scas
je
inc
daa
xchg
je
or
xor
add
fnsave
pop
imul
insl
aaa
xchg
push
inc
adc
push
jg
mov
add
pop
call
jmp
pminub
jno
dec
std
pop
inc
cld
cli
mov
out
sbb
in
mov
scas
pop
sbb
jecxz
mov
pmulhw
pop
or
adc
adc
mov
ds
js
lea
adc
mov
mov
repz
cmp
or
ljmp
ja
mov
push
or
xor
push
xchg
dec
jne
mov
jno
sub
cs
pusha
cmp
mov
mov
sub
pop
fs
pop
in
stos
std
test
mov
and
jge
cmp
jo
int3
or
mov
sarl
inc
aas
daa
sbb
jecxz
add
inc
or
mov
add
cwtl
sahf
into
int
out
hlt
mov
pop
test
in
mov
jne
in
in
inc
push
or
pop
add
cmpsl
adc
mov
xor
and
notb
incb
inc
jo
out
push
shr
jb
decl
fadd
aaa
lods
add
ljmp
mov
xchg
jg
mov
inc
cmp
cmp
imul
popf
std
mov
out
cmp
test
push
mov
in
clc
pop
or
out
out
int3
sbb
jmp
ficompl
adc
mov
mov
fbld
das
loopne
ljmp
lods
mov
xor
dec
push
sub
and
adc
fisttpll
adc
aas
xor
nop
jbe
sub
movsb
insl
outsb
mov
adc
sbb
cmc
inc
hlt
rep
pop
ret
sbbl
cmc
mov
push
ret
fsubl
jbe
sub
jg
scas
inc
das
pop
push
inc
sub
xlat
enter
xchg
mov
out
dec
test
mov
das
sbb
test
sub
cmp
pusha
mov
cmp
mov
pop
popf
in
ret
out
or
mov
mov
mov
mov
outsb
adc
imul
out
scas
fcomps
imul
int3
push
xchg
xchg
mov
xor
aad
dec
xchg
mov
lods
adc
test
cwtl
std
mov
xchg
std
fsubrs
mov
scas
int
ret
mov
ffreep
ljmp
xor
xchg
or
sbb
out
outsb
js
es
clc
lods
into
divl
cs
ds
shrb
mov
inc
lods
iret
push
mov
aam
enter
es
cmp
jle
push
cwtl
and
sbb
xchg
stos
stos
scas
push
pop
filds
xchg
jo
cmp
loope
xchg
test
mov
addb
sub
bound
pop
or
mov
and
pop
mov
testl
xor
xchg
sbb
and
push
imul
cmp
xor
std
sub
xchg
popw
jns
shlb
cmp
jno
mov
push
jl
adc
cli
pusha
sbbb
js
daa
dec
pop
pop
rorb
xlat
push
jbe
and
rcr
cmp
lods
pushl
jb
pop
cwtl
inc
push
pop
jle
sub
popa
push
mov
cmp
out
jo
out
jge
sar
or
ds
gs
cmpsb
lret
shrb
cwtl
fdivr
xchg
aad
ds
outsb
adc
inc
mov
jb
aas
enter
lcallw
lret
add
mov
inc
js
mov
aad
shrb
add
mov
outsb
xchg
cmpsl
cld
andb
lcall
icebp
daa
xchg
movsb
add
mov
push
sub
xor
add
daa
stc
repz
popa
inc
imul
jb
pop
mov
add
rcr
in
mov
ret
add
jno
jg
lahf
out
std
sbb
lods
ss
fcmovu
out
in
mov
cmc
scas
hlt
fisttpll
sub
test
ret
cld
or
cmp
loopne
push
sub
jle
in
out
dec
cmpsb
cmp
ja
cwtl
mov
aaa
into
xlat
push
dec
enter
jb
ret
lret
es
pop
mov
hlt
jl
sub
push
jg
loope
cmpb
aaa
pop
pop
sub
pop
cmp
cmp
and
stos
xacquire
pop
or
jle
push
mov
sbb
mov
push
push
xor
jl
daa
inc
xchg
cs
pop
jo
lret
xchg
test
inc
inc
adc
test
sar
in
push
test
mov
shrl
inc
cmp
push
idivb
pop
xor
cld
out
sub
push
cwtl
and
push
mov
xchg
pop
sbb
push
lahf
mov
push
popl
lods
out
push
outsb
loope
ljmp
and
sahf
jge
leave
fsub
pop
inc
xchg
or
ret
rorl
cmp
dec
pop
adc
in
push
call
clc
dec
pop
insl
imul
clc
fwait
jo
daa
insb
nop
jno
stos
int
cmp
xchg
leave
lcall
nop
lock
mov
pop
aaa
pushf
fcoml
inc
out
bound
push
lcall
cmp
ds
cs
xchg
rorb
mov
test
cwtl
in
fs
shlb
jnp
scas
jbe
mov
movsb
cmc
mov
imul
andl
shrl
cli
int3
pop
cmp
and
mov
jl
inc
push
jno
cmp
hlt
mov
sub
push
into
out
mov
dec
cmp
and
lret
cmpsl
jmp
or
std
rcll
iret
cmp
adc
mov
add
add
sub
or
into
pushf
jl
std
mov
ja
fstpl
cmpsl
aas
xor
inc
sub
jl
shlb
mov
ds
shll
mov
and
inc
pop
pop
cmp
cltd
mov
lock
mov
mov
fcmove
out
xchg
pop
aam
xchg
adc
outsb
ljmp
call
out
insl
in
sub
cmp
pop
push
test
lahf
inc
mov
fistps
cmp
xchg
or
xor
loope
pop
cmpsb
sub
mov
add
adcl
jle
jecxz
cli
xlat
in
add
imul
push
lcall
sbb
add
jmp
cs
les
sub
dec
adc
jecxz,pt
test
rcrl
rol
cmpsb
xor
xchg
xlat
rolb
push
fs
cmpb
movsl
xor
call
mov
mov
leave
push
into
pop
mov
pop
movsb
sub
jp
xchg
das
stc
ja
mov
jge
mov
push
or
and
iret
fwait
sbb
mov
movsb
xchg
jnp
inc
mov
lea
xchg
outsl
in
dec
in
inc
lea
faddp
mov
lea
add
inc
vandnps
pop
pop
mov
mov
mov
pop
rcr
loopne
push
stc
jmp
jae
jnp
and
je
mov
cmpsb
push
add
mov
mov
ficoml
mov
push
ljmp
sub
jns
pop
ficoms
fcmove
push
data16
ljmp
jb
movsl
pop
mov
sahf
shrb
jle
pop
xchg
add
xchg
xor
jo
mov
insb
pop
jns
out
fmull
and
jnp
addr16
cmp
adc
flds
inc
lods
xchg
xor
incb
dec
pop
cld
or
jb
or
stos
jae
lcall
jmp
add
xchg
jcxz
popf
mov
enter
mov
lcall
aam
and
aaa
nop
lock
push
mov
or
dec
stos
sbb
cmp
pop
sbbl
push
scas
adc
mov
or
sub
stc
mov
or
jmp
data16
in
mov
xor
clc
and
cltd
or
adc
in
adc
sbb
cld
sub
jecxz
and
jmp
push
pusha
mov
push
rcrb
in
fcmovne
mov
pop
xchg
xchg
cmp
fisubrs
sub
add
jo
or
jg
sub
sbb
aad
mov
push
cmc
sub
add
dec
mov
hlt
mov
fld
lea
push
dec
not
arpl
cwtl
mov
or
xchg
or
or
lret
mov
sub
xor
push
pop
xor
addr16
xor
mov
pop
enter
ret
add
mov
and
jbe
pop
inc
xor
cmp
inc
mov
hlt
add
jl
fidivrl
xor
push
vmwrite
lods
stos
mov
mov
or
mov
rclb
pand
cmp
jecxz
es
jne
xor
xor
imul
xlat
in
adc
out
ds
add
popa
dec
cmpsb
dec
mov
and
push
jbe
jbe
jnp
mov
mov
outsb
dec
mov
mov
or
leave
fs
fs
cs
clc
popa
movsl
xchg
xchg
mov
aas
push
sub
inc
cmp
sub
loopne
dec
xor
ss
or
cmp
xchg
mov
aad
sub
push
jl
sbb
cltd
xchg
in
mov
inc
jg
jge
dec
jnp
xchg
push
mov
in
stos
push
mov
cltd
and
jg
repz
jae
cmpsb
adc
popf
arpl
pop
popa
hlt
test
daa
in
js
sbb
adc
sub
rcll
mov
fs
push
push
rcr
sbb
xor
xor
popa
out
jb
and
inc
mov
sub
data16
jmp
aaa
in
jae
leave
call
lods
call
jmp
lock
cmp
mov
mov
pushf
sub
test
sub
sub
mov
sbb
out
jg
cwtl
inc
mov
les
in
sti
pop
pmaddwd
dec
cs
andb
push
mov
lret
call
and
sbb
jp
mov
mov
mov
push
pushf
add
xor
sahf
and
xchg
xchg
mov
movsl
push
daa
mov
mov
mov
push
js
es
jecxz
xchg
push
cmp
lds
dec
jne
popa
mov
fucomi
enter
cli
xor
xchg
push
test
add
cmc
in
mov
dec
push
ljmp
and
mov
or
out
rolb
xchg
inc
add
aad
jl
sub
cli
into
stc
popa
lcall
and
scas
cmpsl
inc
xlat
inc
movl
jnp
pshufw
sbb
adc
and
movsl
mov
filds
inc
inc
repz
lcall
inc
mov
mov
lods
xchg
stos
xchg
mov
aaa
mov
mov
mov
or
aad
mull
incl
dec
mov
ja
and
btc
icebp
lret
outsl
pop
sar
scas
xlat
imul
out
pop
dec
jmp
push
filds
xor
out
jno
stos
mov
hlt
jne
dec
popa
repz
and
jecxz
mov
xor
js
sarl
pop
mov
loop
out
and
pop
add
sbb
mov
lret
hlt
jo
lock
cmp
aaa
insb
xlat
lock
adc
iret
dec
push
outsl
dec
cwtl
inc
or
sti
push
cmp
fidivrs
push
jg
mov
in
lock
or
push
in
stc
lret
mov
inc
mov
xor
mov
into
roll
in
enter
dec
insl
jae
sbb
cmpsl
xchg
push
lock
jae
pop
mov
jns
cli
aas
mov
xorb
xchg
or
dec
mov
dec
lock
jns
enter
and
jno
subl
leave
je
aas
inc
xor
bnd
out
dec
sbb
xchg
imul
adc
leave
inc
jle
test
push
xor
popf
sub
mov
addb
mov
mov
sbb
pop
arpl
pushf
jb
pop
call
insl
adc
sarl
sub
sarb
xor
mov
leave
pop
out
bound
pop
jp
addr16
jnp
dec
sbb
sbb
cwtl
lret
pop
test
push
xchg
rorl
loopne
cltd
mov
or
lods
iret
jmp
pop
mov
sub
int3
movsb
test
loopne
dec
dec
push
jle
rorl
fistpl
ljmp
mov
mov
inc
loope
mov
jns
out
jne
popf
jno
sbb
jmp
shrb
jp
pop
lods
cld
popa
fcmovnu
mov
xchg
in
popa
not
je
pop
aas
or
fadd
test
imul
jmp
adc
aad
adc
inc
addl
or
loope
pop
jp
popf
out
or
divb
adc
add
add
out
ja
popf
push
out
push
int
arpl
mov
add
jmp
outsl
test
fldt
add
test
jns
add
sbb
sbb
sbb
filds
mov
lret
nop
push
dec
mov
pushf
lret
jg
xchg
fdivl
ds
js
inc
pushf
xor
cmp
xchg
mov
sbb
dec
lret
mov
stos
or
mov
fstp
popf
stos
adc
jge
xor
sahf
cs
sbb
sub
push
dec
cmp
ljmp
and
cmp
ljmp
pop
cmpsl
or
adc
notb
push
cmp
xchg
jg
inc
add
or
leave
sbbb
loop
add
pop
xchg
cmp
inc
lcall
mov
jp
jp
in
pop
test
jne
aaa
xchg
mov
inc
hlt
stos
add
mov
lret
mov
cmp
lds
pushf
mov
sub
ljmp
lods
mov
scas
shll
or
adc
sub
mov
scas
dec
sbb
adc
mov
in
pop
jno
xor
add
jecxz
xor
mov
jo
dec
loope
lock
js
test
out
ret
jp
or
push
std
inc
icebp
les
add
mov
aas
cli
bswap
ss
jp
cmp
mov
inc
mov
in
lret
mov
or
push
ret
movsl
mov
and
push
lret
sub
popa
sbb
repnz
arpl
or
stos
out
mov
adc
inc
xchg
shrb
scas
clc
sbb
ret
aaa
mov
lahf
loop
cmp
xor
pop
mov
jge
pop
pushf
dec
inc
push
repnz
dec
imul
mov
lods
xchg
fwait
pop
xchg
and
pop
xor
and
jmp
xor
test
xlat
sbb
jae
sbb
outsl
push
ret
dec
xchg
xchg
lods
dec
insb
push
add
shlb
das
bound
lea
lods
sbb
jg
add
push
fsts
sub
cmpsl
stc
inc
jp
movsl
mov
jae
dec
inc
idivl
pop
shrl
and
sub
sbb
cmp
rolb
cmp
sub
in
or
xor
dec
rcrl
fstpt
movsb
jle
popa
push
push
push
mov
test
ds
sbb
popa
mov
adc
jo
pop
in
pushf
repz
jne
pop
sbb
xchg
xchg
inc
mov
rolb
mov
pop
xor
adc
mov
repz
mov
cmc
cmp
sahf
cmp
pop
and
inc
es
adcl
dec
xor
jno
out
jp
inc
xchg
mov
jl
fdivl
iret
ds
push
mov
aam
push
mov
and
sub
les
or
shl
xchg
into
sub
and
mov
dec
int
or
scas
push
cmp
jb
mov
or
sub
cmp
data16
push
fs
pop
fcmovnu
and
inc
jmp
xor
dec
push
pusha
icebp
or
xor
adc
pop
cltd
pop
adc
dec
pop
ret
pushf
xchg
loopne
ljmp
es
cmpsb
pop
outsl
mov
cld
dec
aas
add
fnstenv
paddd
lahf
dec
xchg
dec
into
jmp
and
and
inc
pusha
sbb
sub
xchg
inc
stc
pop
sti
hlt
std
ret
into
push
mov
lcall
aaa
insb
stc
idivl
into
mov
xchg
and
fdivp
fmuls
push
push
jl
nop
xchg
and
push
gs
filds
movsb
sub
jno
pop
xlat
cmp
xchg
jnp
inc
jecxz
push
loopne
xchg
aaa
roll
mov
pop
das
inc
adc
push
fisubl
add
xchg
popf
fs
adc
push
jno
pop
call
mov
sbb
xchg
test
xchg
in
mov
xchg
stos
loope
sub
cmp
xlat
xor
ljmp
push
jg
mov
mov
cltd
adc
sub
scas
xorl
inc
inc
mov
outsb
out
cld
cmc
pop
xchg
in
pop
cmpl
in
mov
inc
jno
inc
pop
xorb
in
dec
notl
call
shrb
dec
lcall
out
xchg
mov
out
cmp
lock
insl
dec
mov
mov
push
xchg
mov
pop
mov
mov
xchg
sbb
add
js
test
add
data16
add
sbb
push
ds
movsl
ret
push
ljmp
fistpl
push
cltd
sub
and
inc
jg
gs
insl
popf
into
repz
or
pop
cmp
ret
outsb
outsb
pop
inc
test
aas
sarb
xchg
lret
jne
mov
repnz
pop
test
ret
das
jns
push
sarl
fcmovb
loopne
in
inc
dec
pop
rcrb
inc
dec
sbb
jne
cld
dec
xchg
sahf
push
mov
orb
stos
imul
push
inc
repnz
sti
int
lcall
lea
rcl
fld
lea
pop
push
pop
jne
cli
repnz
cli
mov
push
xchg
add
mov
pusha
xor
dec
xchg
insl
dec
jmp
mov
aad
xchg
pop
test
test
negl
hlt
pop
sbb
in
pop
faddl
fdivrs
pop
fsubs
sahf
sbb
clc
or
or
stos
es
mov
cmp
fwait
dec
jge
push
dec
dec
fs
lahf
lcall
and
mov
not
addl
pop
cmpsb
cmp
mov
std
sbb
pop
insb
cs
outsb
popa
mov
push
mov
ja
insb
cltd
ret
mov
xor
pop
pop
outsl
cmp
and
cwtl
xchg
xchg
xor
mov
and
mov
enter
mov
sub
mov
into
push
pop
inc
divb
adc
in
jnp
xor
cmp
lret
adc
arpl
aad
outsb
mov
fsub
dec
popf
pop
rclb
jl,pn
std
sbb
in
pop
xor
clc
fildl
icebp
jb
rcrl
or
imul
mov
inc
lret
pop
push
aad
mov
push
mov
jp
fwait
mov
or
lcall
rol
fadds
cs
push
mov
ss
dec
xchg
dec
or
cmc
xchg
nop
insb
push
sbb
pop
add
xor
jg
mov
out
aas
mov
push
int
jg
dec
cmpsb
lds
cltd
jmp
xchg
push
xor
movsl
rorb
inc
inc
fstps
mov
push
xchg
cmp
push
adc
sbb
push
pop
xor
jbe
int
xor
dec
xor
dec
pop
lods
fdivs
aam
out
jmp
push
jae
pop
mov
rclb
xchg
pop
and
jno
leave
or
imul
jnp
xlat
cmp
loope
int
jmp
lock
xor
pop
and
stos
or
in
pop
loope
mov
cwtl
mov
jp
push
lret
push
ret
gs
cmp
xchg
cmpsb
push
fmuls
inc
xor
leave
push
jp
jge
je
cmp
iret
pushf
movsl
cmpsb
hlt
roll
sti
pop
aaa
insb
adc
fisttpl
mov
dec
pop
in
mov
rcpps
leave
ficomps
pop
and
cmp
cmp
hlt
test
test
enter
sbb
push
popa
mov
xchg
daa
int
mov
cwtl
push
fistl
out
les
pushf
xor
jno
add
and
call
mov
push
gs
sbb
dec
test
pop
push
and
pop
sbb
add
and
jp
mov
pop
dec
add
or
sub
fcoml
rcll
ficoml
inc
jno
stos
incb
das
xor
xlat
test
xchg
sub
js
mov
jmp
push
push
push
push
lea
xor
fidivrl
popa
sub
stos
sti
dec
sbb
mov
iret
aam
or
push
inc
or
and
push
or
sub
insb
xchg
and
and
pop
repz
and
js
xor
ja
or
or
dec
mov
jne
dec
in
lea
cmp
jl,pt
lock
inc
push
mov
int
sub
sbb
adc
ljmp
push
inc
je
das
push
pop
jb
das
or
sbb
les
pushf
ja
fidivrs
fmuls
jg
leave
imull
cltd
ds
mov
scas
cmp
jp
mov
jb
sbb
shl
cmp
pop
push
mov
fmull
out
cmpsl
jp
adc
movsl
popa
enter
cmp
sti
idivb
xchg
push
lock
xchg
lret
insb
xchg
sbb
dec
lret
cwtl
ljmp
mov
jle
fsub
and
enter
shrb
xor
sbb
cltd
adc
and
jno
jecxz
adc
cmc
aaa
outsb
or
iret
int3
mov
dec
sahf
iret
xchg
xlat
cmp
iret
jbe
insl
outsl
and
push
cmpsl
or
cwtl
sarb
fdiv
mov
mov
les
lcall
jnp
sbb
pop
sub
sahf
fsubr
js
dec
lods
pop
adc
pusha
jmp
pop
adc
dec
push
cmp
or
xchg
imul
adc
inc
pusha
into
movsb
test
scas
clc
rcll
mov
xor
cmp
jbe
or
fs
popa
mov
xchg
add
push
add
or
out
sbb
je
cmp
dec
mov
lods
jmp
clc
ljmp
addl
popf
inc
sbb
cld
pop
jg
shll
leave
inc
addb
scas
push
nop
cmc
dec
test
cltd
or
popa
sbb
xor
inc
out
aaa
lret
adc
daa
call
popa
sub
andb
movsl
xchg
sti
fisttpll
push
movsl
sub
jl
xchg
xchg
jne
mov
inc
sti
jmp
in
stc
gs
xlat
xchg
or
xchg
jo
imul
adc
in
inc
stos
xor
push
dec
stc
aaa
pop
pop
or
mov
sbb
mov
pop
push
imul
fstp
adc
leave
and
xor
jnp
lret
or
or
xor
jecxz
mov
out
popa
pop
jns
das
insb
test
mull
jns
xor
mov
push
andl
aaa
jmp
aaa
xchg
mov
pop
or
in
scas
push
stc
movsl
fcmovnbe
mov
cs
dec
repz
push
test
adc
test
inc
out
push
adc
repz
loope
incl
jae
test
pop
cli
jg
mov
leave
xchg
nop
push
les
and
inc
sub
push
inc
cmp
shl
mov
mov
into
push
jbe
push
mov
mov
xor
hlt
add
and
repz
dec
pop
in
pop
shl
hlt
icebp
add
cs
xor
movsb
xor
ljmp
push
and
cmp
dec
adc
in
mov
nop
loop
subl
pop
psubd
stc
sarb
cmc
inc
jge,pt
dec
cmp
sub
out
xor
in
mov
jecxz
jo
ret
mov
daa
faddl
ret
shll
pushf
out
or
lds
sub
mov
shr
fsubrs
clc
lock
inc
lret
sarl
lret
inc
push
movl
mov
mov
pop
in
in
dec
lods
testb
adc
cmp
mov
sbb
and
xchg
cmpsb
ss
aas
add
test
imul
lds
dec
ljmp
lahf
imul
ror
sbb
adc
xlat
xchg
jno
sub
lock
testl
ds
iret
add
and
out
pop
xor
shll
int3
inc
add
movsb
pop
pusha
push
mov
mov
icebp
mov
dec
xchg
sbb
stos
imul
push
sub
test
imul
mov
mov
jmp
scas
into
lods
pop
add
rorb
lahf
xor
xor
jns
daa
add
mov
cs
ljmp
cmpsb
push
xchg
and
adc
sub
adc
sbb
jle
in
imul
outsl
pusha
lret
ljmp
repz
mov
cmc
jne
je
adc
push
xchg
lods
cmp
mov
lahf
push
stos
sbb
outsb
hlt
pusha
xchg
jecxz
sub
adcl
imul
inc
loopne
rcrb
xchg
test
insb
mov
out
out
sbb
ljmp
cltd
dec
and
cmp
mov
pushl
loop
lods
sti
aam
mov
repz
add
shll
mov
dec
pop
dec
mov
jns
js
pushf
xchg
push
inc
negb
int
pop
jge
cmp
adc
adc
inc
test
push
xchg
cld
popf
out
sbb
push
xchg
mov
aam
ret
ret
ficoml
xchg
sbb
scas
fucomp
inc
mov
push
cmp
popf
test
insl
jl
adc
icebp
mov
ja
ja
sub
cmp
sahf
clc
jae
adc
mov
mov
lods
sbb
sbb
sbb
xchg
scas
push
addl
sub
jbe
pop
daa
mov
outsb
sbb
test
mov
inc
gs
inc
mov
fmull
ss
test
stos
xor
xorb
and
lock
push
scas
lcall
pop
sahf
xor
pop
add
movsb
mov
jns
push
pop
and
cmpsl
and
fisttpl
andl
push
push
fwait
sbb
int
xchg
mov
jnp
or
jbe
sub
rcrl
inc
jge
test
out
mov
push
cmp
dec
loopw
pop
mov
pusha
mov
aaa
mov
push
rcrl
into
ret
sub
or
enter
ljmp
mov
and
mov
cld
daa
push
iret
sub
mov
scas
arpl
jle
cmpsb
es
cli
cmp
int
xchg
cmp
imul
pop
int
repnz
movsl
dec
shlb
adc
lock
pop
imul
mov
jns
jns
mov
adcl
out
bound
push
lock
stos
mov
aad
or
shlb
sub
nop
inc
stc
pop
xor
jmp
ret
enter
and
arpl
sub
jle
or
xchg
lods
and
add
lock
insl
jnp
addl
iret
adcl
mov
and
popa
mov
fbstp
outsb
dec
lret
rcll
pop
lret
sub
adc
mov
pushf
stc
sub
lods
bound
cld
std
rcrb
repnz
mov
adc
stos
cmpsl
mov
dec
lds
insl
fadd
sub
mov
inc
mov
xchg
jne
sub
fsubl
outsb
add
loopne
out
lcall
jae
mov
xchg
stos
sarb
cwtl
pop
lcall
dec
push
mov
jo
shlb
aam
mov
fdivrs
cwtl
enter
xchg
cmp
ds
popf
cmp
mov
lods
cmpsb
nop
add
push
pop
movaps
push
pop
lea
ljmp
add
jp
hlt
dec
in
mov
test
mov
iret
scas
inc
push
js
inc
xor
in
ljmp
mov
repnz
mov
lret
inc
insl
inc
negb
or
iret
dec
ret
and
push
and
std
xor
test
addr16
mov
test
push
push
cltd
addr16
gs
inc
outsb
push
inc
and
xor
push
imul
xchg
ljmp
mov
dec
mov
aam
lret
pop
xchg
cmp
icebp
mov
daa
into
testb
das
pushf
sub
cmp
inc
sbb
adc
dec
shlb
cmp
mov
fsubrl
hlt
mov
movlhps
pop
mov
pop
jae
repnz
mov
into
stos
fldl
rcrl
fidivl
or
jmp
mov
cmp
jne
pop
inc
xchg
cmc
xchg
pusha
push
dec
imul
jbe
xchg
xchg
cmpsb
iret
xchg
dec
stc
scas
push
mov
repnz
mov
aaa
nop
mov
or
pop
frstor
push
sub
in
pop
pop
repnz
data16
jecxz
xchg
pop
mov
cmp
jo
adc
repz
or
cmp
out
cmpsb
xchg
push
mov
xchg
xor
ja
sub
lcall
int3
jg
xchg
cmp
aas
int
stos
and
jg
xor
gs
mov
mov
movsb
xchg
and
jno
push
mov
jmp
mov
add
mov
pop
jae
addl
loop
push
cmc
xorb
fmull
in
sub
mul
jae
jbe
jne
and
pop
int3
loop
insb
cmp
cs
sbb
je
xchg
inc
fwait
pop
add
adc
jp
mov
cmpsb
pop
andb
js
mov
sub
ficomps
dec
ja
addr16
adc
and
mov
aam
bound
fstp
sub
xchg
sub
add
cmp
mov
addr16
sbb
dec
pop
pop
cltd
sbb
or
and
rcrl
add
ds
or
dec
jp
inc
or
push
sbb
inc
xor
mov
push
xchg
jae
aaa
sbb
shlb
sub
xchg
jo
adc
aad
dec
shlb
call
int3
test
mov
outsb
adc
inc
jl
stos
clc
xchg
mov
stos
in
bound
out
imull
adc
ljmp
scas
leave
inc
shll
mov
scas
faddl
cmp
push
movsl
and
lret
add
test
cmpsl
int3
mov
insl
cmp
repnz
mov
inc
fsubrs
jo
and
je
cmp
movsl
imul
arpl
ds
jo
inc
pop
inc
clc
mov
or
xchg
out
sub
mov
and
or
in
mov
push
fucompp
mov
stos
lcall
aas
mov
in
gs
test
or
jle
ret
mov
arpl
sub
inc
mov
adcl
push
pop
jne
es
add
xor
xor
xchg
mov
pushf
test
in
test
scas
mov
idivb
dec
mov
dec
push
sbb
loopne
out
sti
adc
lcall
mov
dec
and
shlb
cmc
test
enter
adc
mov
insl
inc
xchg
mov
jl
and
cmp
cli
mov
xor
mov
push
jmp
sahf
sub
push
mov
mov
dec
mov
into
mov
add
mov
enter
sbb
inc
test
adc
mov
pop
dec
shr
lock
inc
in
lahf
rclb
fldenv
notb
inc
out
jge
dec
sub
sbb
or
xor
stos
jp
je
jbe
pop
popa
stos
cli
cmp
lods
pusha
test
push
icebp
sar
and
inc
loop
fcomps
mov
clc
pusha
or
mov
cmp
push
std
repz
xchg
and
jmp
cmp
inc
cmp
loope
imul
stos
pop
push
lds
xchg
and
or
mov
add
lret
xchg
inc
xchg
roll
xor
loopne
ret
nop
sarb
das
or
arpl
leave
js
xlat
outsb
pop
or
jmp
sti
repz
adc
dec
in
lock
xchg
adc
repz
dec
adc
aas
inc
dec
mov
dec
lds
ret
shl
mov
ljmp
fistpl
push
mov
dec
mov
dec
and
inc
in
cmp
pop
or
push
test
cmp
aam
icebp
pop
dec
lret
sbb
jge
das
jge
inc
sti
icebp
pop
aaa
dec
or
or
cmp
inc
dec
or
fimull
adc
rcrb
imul
or
and
push
call
xor
fisubrl
and
jmp
mov
std
fiadds
sub
popa
mov
aam
aam
cmp
lock
loop
mov
orb
lock
pop
arpl
aam
test
xchg
adc
fcoms
pop
mov
in
pop
stc
imul
cmc
adc
enter
push
cmpsl
lods
rcrb
adc
sbb
jo
jo
aad
push
out
loop
sub
out
iret
or
imul
jbe
sbb
mov
dec
pop
lods
jne
ds
xchg
testl
gs
js
shll
add
add
push
push
add
xor
lock
popa
sub
leave
mov
fstps
jbe
fistpl
sub
roll
clc
jge
fs
fistl
lret
inc
cli
or
mov
lcall
xchg
lcall
pop
adc
in
test
call
loope
mov
outsb
addb
dec
or
lret
fsubs
testl
pop
arpl
dec
ficomps
push
or
or
sub
fidivs
or
daa
addr16
mov
pusha
lcall
cltd
xchg
jmp
repnz
mov
enter
adc
shrl
aam
push
xchg
aaa
out
mov
cwtl
in
lock
jge
pushf
stc
fistl
fsubs
shlb
adc
pop
dec
or
insl
in
call
sub
sbbl
xor
notl
mov
dec
popf
push
jle
data16
push
mov
icebp
dec
sbb
aaa
dec
jne
dec
pop
mov
out
pop
lods
xor
mov
popf
or
inc
push
jno
subl
jo
outsl
fcoml
cmpsb
dec
nop
cmp
inc
fs
jbe
pop
pop
inc
adc
cmp
or
lahf
cmp
cmp
ljmp
pop
inc
fiaddl
shll
adc
jne
adc
and
sub
mov
hlt
test
pop
xchg
and
pop
pop
daa
lods
call
mov
insl
xchg
sahf
inc
adc
dec
out
lock
mov
jecxz
and
lcall
mov
adc
inc
dec
xor
mov
dec
dec
aaa
cld
fadd
pop
add
js
inc
and
int
rolb
pop
or
daa
sbb
fs
jne
andb
out
lods
in
add
mov
je
mov
lea
std
fnstcw
ret
xlat
sbb
pop
push
lds
cld
xlat
nop
and
add
sub
imul
in
lods
or
or
lahf
xchg
or
popf
and
shlb
out
pop
dec
stos
mov
cld
js
imul
sbb
lahf
and
bound
xchg
call
jne
adc
fsubp
scas
push
out
mov
enter
cmp
fidivs
int
aad
in
test
rcl
imul
push
cli
push
sub
popf
or
cmpl
lret
incl
mulb
int3
mov
cmc
cmp
xor
cli
xchg
pushf
subb
ljmp
rcll
pop
mov
or
and
in
sbbb
ss
or
xchg
sbb
xor
xorb
or
aam
cmc
pop
push
add
testb
cmpsb
insl
negl
ror
mov
push
cmpsl
bound
jecxz
mov
inc
sub
pop
cmp
xor
inc
daa
lock
inc
ds
in
jae
repnz
mov
stos
in
cmpl
insl
lds
xlat
aaa
jnp
ret
sub
stos
inc
sbb
cwtl
js
sbb
imul
xor
bound
jmp
fs
adc
shlb
rcr
xor
sbb
fldt
cmp
ja
sub
pop
loop
dec
rclb
icebp
sbb
cwtl
mul
xor
aas
lods
outsb
adc
mov
jae
xor
lds
jbe
in
mov
pusha
mov
inc
das
cmp
or
pop
cwtl
into
ljmp
inc
insl
xchg
push
pop
int3
sahf
dec
xchg
mov
adc
xorb
movsb
push
scas
mov
push
xchg
inc
clc
ljmp
lea
adc
jne
push
xor
clc
call
pop
mov
add
mov
scas
mov
out
cmc
lea
xchg
popl
out
push
xor
cwtl
out
sub
into
movsl
mov
std
mov
sub
insl
xchg
outsb
adc
popf
and
or
fwait
dec
int
mov
sti
mov
aas
xchg
call
mov
or
mov
scas
sub
out
lods
push
sbb
movsl
pop
fldl
or
pop
xlat
pop
adc
adc
data16
or
rcrb
mov
push
sub
pop
leave
or
sub
sbb
insb
loopne
enter
dec
xor
fidivrl
xchg
cli
out
sarl
stos
loop
push
std
xor
mov
push
inc
test
std
or
cltd
shll
stc
add
es
mov
cld
pop
imul
sti
cwtl
mov
or
mov
push
sub
push
pusha
push
lret
pop
notl
pop
jecxz
out
push
popa
push
adc
push
pop
shll
push
jge
sub
sbb
pop
enter
mov
daa
xchg
in
add
pop
hlt
push
outsb
enter
or
lods
xorb
cltd
cmc
xchg
or
mov
sbb
subl
and
mov
inc
mov
sub
mov
aam
inc
jp
jns
mov
mov
addr16
adc
in
and
jle
sbb
loop
mov
cmpsb
cmpsb
pop
jbe
dec
or
cmp
xchg
adc
dec
mov
or
sub
int3
jno
dec
jbe
cli
test
fstpt
cld
and
fsts
adcl
xor
fcmovne
push
fdivrl
xor
dec
jle
add
movsb
sub
out
mov
inc
popf
dec
lods
les
inc
in
sub
mov
bound
pop
mov
scas
lret
ret
sbb
imul
xor
daa
add
jo
dec
push
mov
dec
add
dec
mov
repz
dec
daa
pop
or
push
mov
push
stc
sbb
mov
add
jp
xchg
negl
cld
mov
cs
cmp
lahf
subl
sti
lret
mov
mov
inc
scas
enter
ss
jae
fmull
lret
out
and
repz
mov
divl
sub
sub
lock
push
fmuls
sub
sub
repz
cmp
inc
daa
movsl
dec
add
data16
rclb
xor
push
stos
mov
adc
or
or
sbb
push
xor
pop
mov
lea
out
sahf
and
rcrl
je
push
cmp
push
popf
or
shll
insb
push
lcall
lea
nop
fwait
mov
adc
fldt
mov
insl
mov
stc
fdiv
mov
push
and
cmp
ss
lock
adc
stc
aas
je
mov
push
cs
push
dec
mov
stc
sub
or
cs
jp
fimull
fstpl
or
ds
push
lods
test
xlat
add
or
and
jo
repnz
jecxz
dec
inc
mov
sahf
jle
dec
push
jl
test
xchg
push
scas
aaa
popf
sub
xchg
es
test
cmpsb
mov
sbb
sub
adc
mov
mov
adc
aam
pushf
ret
jne
xor
nop
pop
and
push
or
mov
out
and
sbb
shlb
lds
ljmp
in
jbe
sbb
dec
sbb
cmp
mov
sahf
xchg
jp
adc
push
stos
or
pop
sbb
nop
xchg
mov
shll
add
sarb
clc
sbb
pop
dec
push
out
test
inc
sbb
xor
pop
xchg
sbb
imul
xchg
pop
inc
enter
jnp
mov
sar
popf
dec
dec
sub
inc
cwtl
rclb
js
xchg
scas
loop
mov
add
dec
xor
sbb
xchg
andl
enter
mov
xor
push
popf
or
popf
cli
call
mov
sbb
fnstcw
dec
rcll
lcall
mov
xchg
shll
adc
pop
gs
inc
fisubl
pop
cmp
ja
mov
sub
mull
adc
push
ror
xchg
call
sti
pop
aas
jl
xchg
nop
mov
jo
xor
sbb
sbb
mov
pushf
adcl
push
inc
clc
xchg
pushw
adc
xchg
cvtdq2ps
and
xchg
xchg
xorb
push
pop
sar
in
cwtl
mov
icebp
je
inc
pushf
fwait
clc
mov
push
push
pop
stos
stos
sub
jp
xchg
std
pop
aam
mov
and
cmpb
and
hlt
outsb
arpl
adc
add
cmp
loope
test
and
jns
lds
jnp
or
inc
mov
add
into
dec
movsl
inc
lock
sub
inc
out
imul
fsubr
test
int3
lret
outsb
dec
sub
shlb
es
cltd
aad
lea
xor
jae
scas
and
out
fisubrs
rcr
mov
pop
and
popa
out
adc
mov
sbb
sub
insl
sub
adc
xor
aaa
sub
dec
add
or
inc
cmpsl
inc
cmp
int3
cwtl
mov
negl
mov
lods
cmovnp
lods
cmc
or
dec
sbb
inc
mov
pop
push
sbb
xchg
daa
mov
add
rclb
sbb
push
ljmp
adc
movsl
jns
rcll
cmpsl
mov
ja
enter
aad
pop
push
dec
sub
cld
lret
call
jns
dec
loop
sbb
ja
add
pop
das
fs
push
movsl
adc
inc
loope
lret
faddl
add
sbb
iret
stc
and
push
ljmp
into
and
stos
jo
test
sbb
movsl
test
pop
cmpsl
mov
xchg
int3
jb
add
pushf
cmpsl
adc
das
mov
les
xor
push
test
push
cmpsl
in
test
lock
xchg
inc
sub
mov
jbe
mov
iret
sahf
repnz
cmp
inc
movsb
push
outsl
aaa
add
push
dec
push
sbb
movsb
jl
movsl
pop
jb
lret
inc
inc
lcall
pop
ja
sbb
out
xor
mov
jge
cli
ficompl
lods
loopne
mov
notb
popf
jp
mov
push
cmp
mov
sbb
mov
cmp
repnz
ds
in
adc
mov
push
imul
stc
push
insb
addr16
fimull
lds
lcall
gs
sbb
mov
mov
rclb
imul
out
sub
jg
mov
inc
sub
icebp
xchg
mov
xchg
gs
push
dec
dec
dec
in
push
mov
adcl
clts
ret
push
xor
sahf
fldl
das
jmp
daa
scas
adc
xchg
mulps
push
fs
pusha
addr16
jae
ret
pop
push
mov
test
pop
and
cld
xchg
addb
js
outsb
insl
ds
xor
lahf
test
adc
arpl
adc
mov
jecxz
out
pop
push
insl
fwait
push
mov
push
loop
fisubrs
mov
mov
sub
pop
sbb
dec
outsb
fildl
xchg
mov
icebp
out
mov
movd
jg
je
inc
mov
jno
xor
loop
sub
imul
stos
movl
push
pop
dec
cld
and
shrl
js
enter
mov
in
mov
and
push
push
test
int
push
mov
mov
push
xor
fs
test
shr
call
aam
sahf
inc
stos
pop
popf
stc
jmp
test
push
and
xchg
mov
andb
enter
stos
leave
jge
iret
cmp
test
sub
dec
pop
lret
mov
dec
dec
aaa
dec
inc
xor
cltd
mov
or
add
das
dec
add
adc
out
push
test
repnz
mov
cli
xchg
jno
mov
and
fwait
mov
cld
adc
adc
cmp
int3
cmp
ffreep
push
dec
push
cmpsb
mov
addr16
push
cld
stos
pop
xor
fdivr
cmp
pop
xlat
xor
pop
cmc
xchg
and
xorb
pop
xchg
push
pop
ja
dec
mov
cmp
sbb
jmp
cmp
inc
push
xchg
xchg
pop
mov
ja
mov
pushl
nop
ret
pusha
adc
sbb
add
sbb
sub
popa
loope
sbb
mov
push
es
cmc
mov
pop
mov
ficomps
xor
mov
sub
cmp
xorl
jecxz
mov
xor
js
sbb
scas
xchg
jb
popa
cmpsl
jle
call
xchg
lret
xchg
nop
dec
mov
aam
addl
loop
popf
sahf
mov
ljmp
pop
adc
daa
notb
push
add
cmp
shrb
sub
hlt
dec
push
insb
xor
jle
push
dec
aas
stos
loop
mov
mov
lods
addr16
mov
adc
faddl
adc
jne
dec
sub
ret
sbb
add
pop
mov
js
shrl
mov
shll
lcall
jo
iret
jns
subb
sahf
lods
add
and
outsb
xchg
shlb
push
adc
stos
enter
fnstenv
jno
ds
cmp
in
push
lea
test
mulb
pop
and
shrb
dec
fwait
lock
mov
insb
xchg
out
loop
in
cs
sub
movsl
icebp
popf
xchg
add
scas
push
negb
lock
aas
xchg
jae
xchg
adc
shrb
push
add
push
or
fnstsw
test
xor
pop
push
icebp
xlat
mov
hlt
dec
jg
fbstp
fdivrl
xor
jns
ret
lcall
push
in
jnp
int
inc
lods
fistl
shl
and
aad
xor
push
push
xchg
inc
jecxz
mulb
inc
mull
fidivs
or
push
bound
sbb
and
insl
lret
cs
jo
xchg
divb
clc
rcl
mov
ffree
jno
pop
xchg
imul
in
push
movsb
lods
in
and
add
daa
dec
push
xchg
push
jp
push
jcxz
mov
and
rcll
loope
cmpsb
rolb
push
mov
xchg
arpl
ss
fwait
cmp
imul
xlat
icebp
mov
call
lret
scas
dec
push
or
rcll
pop
fdiv
out
mov
inc
or
xchg
inc
lds
sbb
jno
iret
and
mov
daa
jle
xor
popa
and
repnz
clc
cmp
mov
sbb
pop
and
subb
scas
ljmp
pop
sahf
iret
push
pop
xchg
je
and
jno
add
jnp
cmc
aas
hlt
les
sbb
mov
jno
or
and
mov
mov
mov
cli
or
cli
or
inc
adc
cmp
add
popa
testl
or
mov
cs
inc
xchg
add
pop
mov
xchg
pop
clc
scas
fstpl
xchg
sbb
rclb
addl
jge
pop
insb
sbb
xchg
pop
out
mov
hlt
xchg
or
ret
or
dec
sbb
hlt
mov
rcrb
add
jae
addb
mov
mov
mov
adc
scas
cli
fs
aas
outsb
std
sahf
add
pop
adc
lret
xchg
mov
jae
xchg
and
push
pop
aas
insb
jmp
dec
call
insl
repnz
xor
and
out
cmpl
jae
mov
sub
pop
jne
mov
mov
xor
gs
pop
hlt
adc
scas
push
xor
outsb
jle
rcr
movsl
xchg
add
aas
sub
sbb
mov
jo
mov
sbb
sub
pop
inc
cmpsl
pop
jnp
pop
pop
fdivl
mov
or
xchg
int3
icebp
loopne
cmpsl
sahf
fldcw
pop
cmp
gs
fisttpll
icebp
std
es
fiaddl
xchg
lea
mov
daa
insl
inc
jns
in
and
jecxz
pop
mov
test
fistps
inc
jp
sti
dec
or
rclb
mov
fsubl
mov
cs
push
aad
in
add
cmpsl
mov
jne
cmp
out
loopne
or
dec
ficoms
and
in
data16
inc
add
sub
and
cmp
jge
testl
jbe
mov
orb
dec
fsubl
jle
mov
clc
push
add
cmp
clc
mov
insb
pop
push
push
mov
lahf
mov
inc
or
mov
mov
xor
stos
test
mov
add
inc
xor
insl
sti
addr16
loope
loope
aaa
aam
in
fcoml
repnz
call
lea
lea
xchg
and
sti
mov
mov
or
call
out
arpl
icebp
push
adc
xchg
sti
sti
xchg
mov
or
dec
iret
mov
jg
nop
test
aad
insb
negb
stc
sarl
xchg
aad
jecxz
cld
hlt
jnp
xorl
fcomi
push
sub
mov
adc
push
xchg
mov
mulb
push
push
pop
push
test
cmpsb
and
push
pop
push
repz
mov
push
fwait
mov
stc
ret
in
mov
dec
dec
cld
mov
sahf
xchg
dec
loop
pop
pop
xchg
daa
cli
cs
in
lret
cmp
movsl
ljmp
negl
loopne
jae
cmpsl
xchg
cmp
xchg
ds
sbb
inc
cmc
shll
movsb
dec
les
frstor
xchg
or
shrl
notb
sub
mov
or
jae
add
mov
xchg
jno
js
xchg
mov
jmp
push
sbb
mov
xchg
xchg
test
adc
mov
pop
outsl
aad
in
ret
jno
cmp
mov
jae
xor
push
imul
fdivr
sub
pop
in
mov
push
push
dec
pop
daa
inc
xor
xchg
insl
or
faddl
imul
sahf
pusha
adc
lock
or
in
stos
xchg
cmc
jb
pop
nop
aas
pusha
lcall
mov
jae
jl
test
bound
xchg
mov
jle
in
aad
repz
adc
and
sub
xchg
movsb
pop
into
push
test
mov
inc
loop
push
xchg
scas
leave
jno
add
xchg
outsl
and
fnstcw
cmc
sub
je
shlb
scas
jae
lret
ss
icebp
push
inc
aas
xor
lea
fidivs
stos
je
mov
cmp
mov
sbb
data16
psubusw
inc
or
fnstsw
mov
sahf
cmp
ror
jo
cltd
dec
js
push
out
rorb
pop
shll
xor
fmuls
jl
in
ja
pusha
test
cwtl
pop
and
arpl
hlt
call
cltd
sbb
inc
mov
stc
nop
jnp
cwtl
jo
dec
out
xor
cmp
push
jbe
fstpt
and
adc
sbbb
push
and
xor
xor
sbb
rcr
dec
push
mov
cmp
out
adc
inc
mov
data16
jge
fmul
mov
pop
xor
lods
sbb
inc
sub
pop
pop
popf
adc
or
xchg
out
repnz
jns
sub
mov
add
ljmp
jbe
cwtl
add
lods
nop
cmp
mov
push
add
xor
fisttps
adc
jno
mov
mov
jbe
loop
popa
subl
xchg
xchg
jge
icebp
mov
insl
mov
aas
popa
int3
test
mov
xchg
fidivrl
jne
call
aas
mov
stc
in
aas
movsb
jmp
mov
insl
pop
push
repz
jp
mov
je
mov
rolb
scas
int3
add
or
jae
icebp
mov
push
add
jnp
add
sahf
test
movsl
test
int
nop
mov
je
jbe
jae
push
dec
outsl
in
roll
pop
ficomps
cmpsb
mov
sbb
sbb
aas
lea
scas
cmpl
and
mov
insl
mov
cmp
adc
lcall
jae
fistps
or
popa
fld
jnp
mov
pop
jnp
inc
mov
ficomps
mov
jl
jmp
lcall
clc
pop
xchg
outsl
scas
inc
xor
push
stc
movsl
mov
aam
incl
cmp
xchg
roll
jno
mov
repnz
out
and
ret
jg
or
inc
xchg
push
and
lret
in
cmpsb
push
mov
sbb
icebp
test
iret
insb
cli
in
leave
imulb
and
xor
adc
fwait
out
dec
test
jg
stos
mov
movhps
ret
imul
fldcw
push
xchg
and
adc
mov
daa
cmp
add
mov
inc
add
mov
pop
das
ret
push
leave
fs
jb
jp
fnsave
pop
sub
iret
push
mov
push
dec
pop
adc
movsl
insb
leave
lahf
ret
or
incb
imul
adcb
cmpl
adc
popa
notb
fcmovnb
stos
jne
jge
rcrl
jmp
ficompl
std
out
aaa
enter
sub
mov
or
mov
dec
inc
inc
mov
push
fsub
test
xor
leave
outsl
pushf
add
mov
ret
cmp
dec
dec
mov
dec
xchg
leave
repnz
aam
mov
das
jmp
insl
out
jno
aam
mov
in
push
xor
fisttpl
in
and
pushf
jns
in
repz
call
into
and
dec
mov
sub
xchg
lahf
or
jns
jae
loopne
add
int
cwtl
xor
mov
sbb
call
push
adc
repnz
loop
clc
and
mov
adc
icebp
inc
push
stc
testb
adc
inc
mov
insb
fisubl
cmp
dec
push
push
jmp
aas
mov
push
push
das
in
fsubrl
insb
popa
xchg
mov
jl
push
inc
icebp
movsl
or
dec
mov
add
xor
arpl
dec
jp
out
bound
sub
ds
jnp
stos
jne
push
push
adc
in
push
outsb
test
and
ljmp
ret
mov
or
enter
cmpsb
inc
dec
jl
orb
adc
repnz
es
int3
stc
pushf
mov
mov
pop
mov
and
ds
adc
inc
hlt
jno
adc
push
in
pop
cmp
pop
and
or
sub
movsl
and
aas
imul
add
inc
push
jmp
fwait
mov
xchg
fdivrl
or
jmp
in
enter
push
mov
push
insb
in
push
push
cwtl
xorb
popf
je
cmp
into
ljmp
jmp
add
fiaddl
mov
dec
xor
mov
insl
mov
mov
dec
and
jnp
mov
push
rcr
adc
popf
pop
stos
fimull
inc
pop
hlt
pop
bound
divl
xlat
push
jb
push
ss
mov
in
jbe
sbb
mov
out
adc
icebp
mov
lea
add
test
jmp
sti
add
arpl
in
cmpsb
cmc
aam
mov
popf
popf
outsl
mov
pop
sbb
lock
cmpl
mov
dec
sahf
push
dec
dec
jns
cmp
cmp
stos
push
mov
mov
stos
or
add
test
decb
aad
inc
pop
cmp
addr16
sti
mov
and
mov
das
sub
xor
lods
mov
jns
stc
mov
lahf
data16
hlt
mov
addr16
cmp
lret
or
leave
jle
das
mov
xchg
xor
imul
imul
xor
shll
ret
xchg
sbb
rorl
xchg
leave
jmp
jae
lahf
cwtl
loope
mov
and
lods
aam
or
nop
mov
adc
scas
push
das
sahf
cld
insb
das
cmc
mov
iret
mov
decl
popa
out
fisubl
inc
pop
inc
inc
inc
movd
push
xor
icebp
fsub
inc
fmull
scas
adc
testl
dec
dec
push
push
cmp
inc
stos
lcall
movsb
push
je
and
adc
add
mov
out
mov
xchg
xchg
xor
xor
inc
jecxz
and
pusha
lahf
cmp
out
sbb
xor
shrb
mov
fucomp
adc
leave
sbb
shrb
sub
lods
xor
sbb
jmp
mov
lods
out
addr16
repnz
sbb
das
aad
out
jmp
push
repnz
ffreep
addl
repnz
push
sarb
das
pop
mov
repnz
jno
sub
xor
outsb
rorl
and
mov
imul
icebp
and
xorb
mov
jecxz
cmp
adc
pop
xchg
cwtl
jge
lods
push
inc
mov
sbb
pop
jmp
inc
jg
aas
sub
pop
pop
clc
cmc
in
inc
loopne
mov
inc
lods
out
cmp
and
lock
mov
dec
inc
lahf
pop
bound
mov
adc
mov
mov
push
xchg
js
leave
and
xor
xor
sti
cmp
pushf
inc
fcmovnb
sub
dec
mov
out
mov
cmpsb
jge
push
cmpsl
test
add
or
test
or
and
sub
add
orl
ljmp
les
cmpsb
sti
aad
jecxz
jnp
mov
repnz
sbb
cli
rcrl
fcomps
outsl
jge
bound
and
inc
or
in
xchg
inc
pop
outsb
jns
das
stc
mov
daa
mov
out
add
sbb
imul
jne
mov
push
pop
es
lds
add
outsl
pop
lds
sub
movsl
andb
popa
or
lret
sub
dec
lcall
dec
dec
mov
sub
lea
scas
push
sub
les
arpl
cmp
mov
xchg
lahf
xchg
js
add
xlat
mov
lds
clc
int3
mov
lock
rcr
lds
jmp
push
sbb
addb
cli
pop
mov
xchg
cmpsb
popa
aam
push
adc
aad
int3
add
push
aas
mov
add
fisttps
xchg
xor
inc
cld
test
xor
sahf
and
mov
fdivl
fisubl
out
pop
cmp
push
jge
mov
and
push
sub
cld
cmp
jp
test
aas
mov
adc
cs
sahf
fcoms
sbb
je
jmp
jb
add
jae
inc
pusha
xchg
sahf
xor
mov
in
jge
inc
adc
es
pop
pop
sbb
test
and
add
jo
addr16
xor
push
sbb
sar
adc
movsl
test
test
add
push
es
or
push
mov
das
dec
pushf
outsb
orb
dec
inc
mov
shlb
jmp
flds
add
cs
movsb
xchg
push
jg
les
push
ret
test
cwtl
mov
add
arpl
data16
jmp
popa
das
aam
fimuls
mov
pop
pop
mov
cmpsb
sbb
aaa
pop
lock
outsl
mov
fisubrl
push
mov
xor
push
sbbb
adc
fucomp
xor
xchg
clc
stc
aas
loop
sbb
in
notb
push
and
gs
pop
notb
in
sub
cmp
jl
into
xchg
cmp
jecxz
enter
mov
cwtl
lahf
or
sub
in
lret
or
pop
sbb
or
push
dec
jg
rcrl
dec
movsb
fnstsw
fs
mov
inc
inc
in
stos
js
lahf
jl
push
nop
imull
jno
sbb
fsts
leave
cltd
or
adc
hlt
push
test
shl
push
cmc
repz
adc
add
jle
out
sub
call
in
mov
inc
lahf
adc
lds
push
mov
frndint
data16
pop
addr16
lods
mov
xor
cmc
xchg
add
and
sti
dec
or
sbb
fwait
adc
mov
mov
cmp
sti
jmp
loopne
pushf
jns
fistl
or
dec
call
dec
and
xchg
dec
outsb
sbb
setp
out
mov
or
pop
sbb
es
das
sub
jbe
mov
or
jno
add
inc
js
fdivs
push
sub
pop
push
inc
pop
jmp
sub
xchg
cs
cmp
lods
insb
sub
cld
movsb
or
pop
and
mov
xchg
jmp
cmpsl
in
push
xlat
nop
dec
shrl
ud2
cld
cmp
es
or
xor
arpl
mov
and
dec
in
sar
out
lods
fistl
push
xor
xor
lcall
mov
in
xor
xchg
jmp
int
adc
iret
hlt
xor
movsl
lret
xchg
out
fisubrs
push
add
mull
lcall
mov
lods
pop
pop
jo
out
mov
jne
test
test
bound
or
idivl
inc
or
in
fdiv
cmc
mov
fucomi
les
imul
es
cmp
mov
push
sti
xor
pusha
mov
mov
sbb
aad
sbb
adc
aad
shlb
inc
pop
popa
fistpl
lcall
inc
mov
inc
inc
jbe
xchg
mov
test
pop
movsl
inc
pushf
lods
mov
add
sbb
fildll
lods
push
sahf
mov
mov
lret
in
cs
fstl
cmp
dec
movb
stos
repnz
add
cwtl
out
mov
pop
leave
mov
or
das
dec
push
sbb
jge
and
outsl
fimuls
daa
in
mov
roll
aaa
aam
dec
cmc
enter
enter
fldt
rorb
push
lods
and
icebp
dec
xchg
lret
pusha
xchg
shr
add
push
jbe
mov
ret
mov
mov
adc
aas
pusha
js
enter
ljmp
or
cmpl
dec
push
jnp
xchg
add
enter
ja
addl
or
aaa
int3
aam
push
sbb
sbb
or
int
adc
inc
addr16
aam
pop
mov
and
out
add
negl
and
add
or
cmp
sahf
sbb
mov
cwtl
pop
add
popf
loopne
dec
cld
mov
sub
pop
push
jge
lret
sbb
fwait
and
adc
push
inc
mov
fld
jo
cmp
lea
mov
mov
mov
lods
xor
fdivl
add
stc
or
dec
adc
into
fucomp
addr16
ret
lea
mov
adc
imul
push
xchg
cmpsb
sub
iret
mov
mov
push
push
test
test
rol
mov
stos
add
push
lock
lock
add
jb
stc
dec
ret
xchg
push
notb
jmp
add
push
pop
je
add
adc
scas
inc
add
cmp
or
and
xlat
sahf
std
sarb
sbb
shll
sarl
movsb
push
xor
testl
adc
pop
pop
subl
stos
sahf
loope
rorb
mov
mulb
sbb
jns
outsl
jp
and
push
in
xchg
pop
lea
inc
push
pop
out
or
ds
out
out
mov
fists
or
add
sbb
sbb
popf
and
fidivs
loope
ret
psubusw
jnp
dec
ds
mov
lahf
in
mov
pop
mov
pop
fwait
jle
lock
fildl
jo
mov
mov
or
pop
mov
push
cs
sub
mov
hlt
xor
mov
aas
push
in
lea
sbb
fsubrl
divps
outsl
inc
aam
loope
int3
insb
and
dec
push
out
sub
out
lock
mov
aam
call
xor
cmc
cmp
adc
mov
lea
push
test
js
inc
pop
cmp
xchg
shl
mov
outsb
sub
jg
push
xor
sub
pop
add
xchg
add
loopne
movsl
cmpsb
mov
sub
dec
stos
mov
and
fidivl
mov
sub
sbb
sub
popa
test
cmpsb
adc
lret
cld
sub
mov
and
fs
mov
in
out
push
cs
pop
insl
adc
test
or
ja
daa
adc
xchg
add
adcl
hlt
movsl
pop
rcl
pop
sbb
nop
js,pt
cmp
lcall
sbbb
jnp
mov
add
inc
xor
or
mov
cmp
xchg
or
sar
inc
sub
lock
pushf
push
movsl
add
or
adc
lods
add
dec
jmp
dec
sti
movsb
jg
cmc
cmp
fisttpll
sbb
cs
sahf
sbb
into
mov
das
jne
out
add
lods
mov
cmpsl
jl
jnp
rolb
jns
and
inc
mov
cs
cld
icebp
cltd
loopne
in
jmp
js
sahf
jns
pop
jle
mov
std
or
mov
insl
imul
inc
sub
push
pusha
mov
inc
outsb
inc
cmp
ret
test
stc
xchg
nop
jo
pop
mov
jnp
mov
or
xor
lcall
les
out
sub
dec
mov
sbbb
or
mov
or
call
outsb
iret
adc
imul
add
sub
jae
out
jle
jmp
shll
and
es
je
pop
incb
mov
xchg
xchg
inc
jb
shrl
in
out
int
cs
stos
dec
fs
roll
rcrl
popf
jp
fcomps
mulb
loopne
sbb
lcall
pop
mov
xchg
shl
pop
or
fmull
adc
mov
and
iret
inc
jle
jecxz
pop
or
or
out
push
sub
push
test
test
or
popf
sbb
jle
in
cmp
icebp
dec
outsb
cmp
popl
pop
cmp
cld
fimull
fs
iret
stc
in
push
or
lret
cwtl
addr16
std
mov
mov
rorl
test
imul
repnz
loopne
or
xor
push
iret
mov
rorb
push
pop
sub
xchg
mov
ret
lock
inc
mov
cltd
adc
ss
mov
testl
repnz
sbb
xor
filds
imul
stos
or
xor
shll
push
test
enter
xchg
mov
orb
aaa
inc
fadds
cmpsb
pusha
jbe
push
push
lea
jmp
mov
xor
adc
cmp
pop
popf
or
pop
add
rol
jb
imul
adc
test
lret
int
sti
imul
adc
lods
inc
jnp
popf
jle
cmp
stc
je
ss
add
gs
jno
enter
mov
push
lock
jnp
das
insb
push
dec
push
cs
mov
lods
test
jo
inc
jg,pt
loopne
outsl
xlat
fwait
test
les
mov
out
shlb
outsl
repnz
xlat
mov
aam
and
mov
cli
add
test
loope
xchg
or
jne
nop
adc
or
xchg
dec
cmp
call
cli
jecxz
cmpsb
insb
imul
shrb
xchg
test
inc
insb
idivb
xor
arpl
addr16
xor
mov
sbb
in
xlat
push
xchg
addb
fmull
or
data16
lds
pusha
addr16
jle
mov
xchg
jns
or
inc
and
bound
or
push
loop
clc
lods
push
mov
pop
lahf
rcrb
fwait
jecxz
hlt
fwait
bnd
push
pop
cmp
test
cmpsb
dec
sti
cwtl
cmp
sbb
faddl
jno
pop
mov
jl
jg
jnp
add
mov
inc
inc
sub
addr16
inc
nop
xlat
sub
loopne
add
nop
lahf
inc
repnz
fnstsw
xor
orb
out
repz
rclb
add
sub
orl
aam
xchg
stos
jne
mov
xchg
cld
das
arpl
jg
jle
jae
scas
loope
cli
adc
loopne
test
or
call
mov
imul
cmp
pop
or
mov
inc
iret
add
sbb
imul
out
cmpsl
dec
ja
andb
push
dec
mov
faddl
imul
sbb
sti
loopne
sub
das
pop
adc
lea
cld
push
push
sti
add
cmc
inc
mov
cmpl
sahf
jae
sar
outsl
cld
imul
jo
cmc
fdivl
xor
sub
dec
xor
aad
push
mov
ja
pop
jns
push
jmp
dec
insb
ret
xchg
add
add
sahf
movsb
cmpsb
mov
add
ret
test
mov
xchg
jne
jge
lret
mov
adc
pushf
mov
sarl
inc
add
loope
pop
outsb
lahf
sbb
inc
mov
xor
dec
addb
pop
mov
cmc
orb
and
xchg
pop
pop
jne
divb
cmc
jb
cs
sbb
jb
dec
das
mov
mov
mov
ja
out
or
push
call
les
dec
rorb
sub
mov
mov
jb
jl
sub
mov
ljmp
inc
mov
mov
mov
jnp
lcall
add
push
pop
xchg
adc
and
lea
xchg
sbb
pop
popf
ss
add
ds
mov
sbb
mov
jb
aas
dec
outsb
cmpsb
inc
sub
push
loope
adc
mov
sub
mov
aam
add
xor
jbe
mov
xchg
lret
or
insb
sar
lods
testb
mov
lcall
pusha
push
cmpsl
adcb
dec
add
repz
pop
scas
rcr
daa
rcl
pushl
in
push
pop
leave
sbb
or
mov
mov
lahf
repz
dec
in
les
sar
xchg
mov
dec
out
nop
test
and
popa
mov
jb
xor
and
sub
and
push
adc
sar
and
adc
es
cmp
cmp
inc
ss
stos
and
pop
roll
push
mov
xor
dec
sahf
sub
cmp
push
push
notl
adc
or
sub
xor
and
cmp
sbb
scas
dec
xor
push
xlat
shlb
and
das
add
or
push
push
cmp
sahf
jno
ja
sti
pushf
cld
pop
shrl
fsubrs
popa
or
or
mov
xchg
rorl
fwait
pop
in
add
aad
xchg
adc
mov
test
sbb
jmp
lods
cmpsl
adc
mov
inc
mov
mov
icebp
fcmovnbe
adc
divl
jge
popf
cmp
jmp
and
sub
mov
jg
and
int
push
sbb
inc
adc
test
fistl
in
fidivrl
repz
cmp
inc
orl
mov
dec
fisttps
fistpl
or
and
cmp
dec
sarl
jmp
stos
xchg
mov
add
push
and
jno
shrb
xchg
imul
imul
ljmp
mov
ret
cmp
outsb
mov
insl
imul
aas
bound
arpl
adc
scas
dec
rcrl
scas
adc
scas
insb
ss
xchg
add
add
xchg
lds
and
arpl
jns
repnz
pop
loop
inc
leave
adc
cmp
hlt
fsubs
nop
xchg
rcll
stc
lret
fiadds
into
or
ljmp
nop
adc
mov
iret
sbb
dec
inc
clts
mov
lahf
nop
jg
pop
add
fstp
mov
lahf
in
int
pop
and
ret
jo
or
mov
sbb
cld
sbb
mov
xor
fstpt
dec
lea
clc
or
pop
push
push
test
mov
dec
notl
neg
add
push
jne
add
or
shll
xchg
ds
xchg
jge
inc
pop
inc
jne
in
repnz
popf
iret
xchg
add
push
cltd
bound
push
pop
mov
test
push
pop
xchg
sub
mov
xchg
mov
xchg
sidtl
scas
pop
adc
inc
lret
int
sbb
clc
sbb
pop
and
sub
repz
mov
lcall
insb
xchg
clc
cmc
hlt
les
sbb
pop
or
mov
daa
sbb
dec
pop
divl
lret
inc
fsubs
mov
cmp
mov
pop
call
inc
pop
ja
pop
mov
push
jmp
lret
jecxz
cmpsl
jno
jne
mov
dec
dec
out
inc
rcrb
mov
mov
add
cmpsb
jmp
test
push
pop
fs
xor
pop
mov
sub
clc
mov
or
dec
jae
push
stc
adc
jns
shll
inc
int
cmp
xor
fidivl
dec
adc
rorb
imul
lods
xchg
mov
enter
cmp
test
mov
sar
push
filds
das
aas
in
ficoms
pop
mov
call
xchg
xchg
popf
push
and
xor
push
xchg
xor
or
add
cmc
mov
unpckhps
loope
notb
or
adc
or
into
add
mov
mov
mov
dec
mov
lcall
sbb
sub
push
popa
adc
shll
and
enter
dec
scas
in
push
icebp
pop
insb
fwait
pop
jge
cmpsl
ss
pop
sbb
cmp
movsl
stos
imul
adc
push
xor
dec
outsb
sarb
xor
adc
in
stos
daa
pop
std
or
mov
cmc
jle
sbb
push
inc
loopne
das
in
stc
stos
dec
add
dec
or
push
add
push
rorl
cmp
sbb
xchg
add
in
call
mov
imul
pushf
cmp
inc
jl
in
pop
mov
stos
movl
repz
mov
loope
pop
outsb
daa
inc
ficoms
sub
push
mov
mov
call
xlat
sub
jle
mov
mov
mov
pop
mov
xchg
push
jle
push
push
mov
add
lds
popf
mov
popf
inc
pop
insl
pop
ret
xchg
sub
cmp
and
xchg
jbe
into
cmp
icebp
push
test
movsl
pop
insl
inc
xchg
adc
jle
mov
inc
lahf
ror
jecxz
lock
jae
testl
lea
std
inc
es
not
mov
bnd
pop
pop
rorl
or
mov
in
jmp
xor
sub
out
cli
fistpl
push
xchg
ss
push
push
mov
push
pop
mov
js
adc
mov
adc
bound
or
hlt
lods
sti
andl
sbb
fisttpll
jl
hlt
inc
adc
clc
int3
pop
mov
jmp
cmp
aam
loope
inc
sbb
mov
in
cmp
jns
in
mov
out
and
mov
sbb
int
repnz
mov
push
mov
aam
in
pop
popw
or
sbb
js
rolb
out
jns
cmpsl
xlat
mov
pop
pusha
cwtl
pop
out
test
fistpl
aas
push
mov
and
mov
mov
sbb
ja
in
push
mov
pop
sbb
inc
and
repnz
imul
sbb
aaa
push
cmp
dec
push
ficoml
movsl
enter
pop
stc
inc
xchg
push
push
outsl
aaa
xor
mov
push
pop
bswap
cmp
push
or
mov
jg
sub
adc
or
popa
rolb
adc
js
mov
out
mov
lock
jl
adcl
icebp
jb
xor
cmc
syscall
stc
sub
icebp
lods
add
dec
stc
cmpsb
ds
pop
data16
pop
sub
outsl
scas
sbb
jecxz
sbb
ds
and
xchg
push
bound
sbb
in
lods
lds
jne
popa
or
xchg
mov
div
push
lret
andl
sbb
movsb
int3
icebp
adc
ret
popa
dec
adc
or
mov
int3
fldenv
mov
iret
push
add
inc
jne
xchg
sub
pop
xchg
xor
push
pop
adcb
cli
push
xchg
adcl
adc
test
inc
sbb
cmp
mov
xor
mov
lcall
sub
je
sub
fisubrl
scas
cli
psubd
outsl
mov
mov
testb
aas
cli
sub
mov
push
bound
xor
sbb
enter
imul
out
je
popf
ret
adc
fistpll
cmc
int3
mov
dec
lret
test
testb
mov
rorl
add
ja
xor
out
fists
sub
mov
test
xor
int
in
xchg
int3
mov
pop
pop
test
push
jmp
into
pop
pop
sbb
inc
lcall
imul
push
movb
lret
and
or
pop
xchg
shrl
pop
mov
insb
mov
push
jne
dec
push
frstor
sub
dec
fstpl
push
mov
mov
jns
and
cmpsb
dec
pusha
mov
mov
fsubp
and
and
fsubrl
aam
in
test
fildll
inc
pop
fcmovnu
adc
imul
mov
or
lahf
and
xor
push
xor
imul
mov
dec
adc
sarl
mov
into
push
dec
xorl
mov
sbb
mov
leave
divb
mov
push
outsl
jmp
or
fdivl
mov
xor
iret
pop
mov
leave
sub
sub
dec
cmp
fistl
add
fmulp
addb
ror
sahf
int
pop
xchg
jbe
jmp
std
lcall
inc
lods
lahf
cs
jbe
lret
jae
push
pop
sbb
jg
in
mov
addr16
jnp
push
aaa
loope
pmulhuw
pop
sub
mov
add
fdivr
jl
pop
rorl
enter
inc
and
rolb
sub
pop
icebp
sub
adc
xchg
jge
sbb
cmp
cmp
xchg
cmpsb
hlt
roll
dec
mov
jnp
test
popa
test
xchg
rcl
cmp
pop
push
add
xchg
mov
pop
mov
rclb
pop
inc
mov
xchg
in
mov
push
gs
addl
les
in
mov
cld
dec
ret
hlt
and
jne
mov
adc
testl
push
inc
pop
outsb
mov
dec
fsubrl
andb
aad
imul
xor
sub
mov
punpckldq
mov
dec
and
pop
pop
orb
incb
adc
icebp
xchg
xchg
repnz
insb
hlt
cltd
shl
icebp
xchg
fidivrs
adcl
lds
gs
sbb
push
outsl
loope
mov
push
mov
stos
pop
add
cltd
loope
or
cmp
pop
fsubrs
dec
mov
fwait
decb
js
sbb
and
sarl
push
lahf
mov
incb
icebp
sub
xor
and
ror
push
lcall
into
dec
mov
push
cmp
sahf
fs
sub
test
loop
jecxz
mov
jmp
add
jae
das
pop
mov
or
add
stc
adc
icebp
aam
jno
push
int3
add
sbbb
pop
xor
adc
jo
sbb
in
orb
addr16
jae
xchg
lds
cmp
pushf
xchg
xchg
jp
mov
shll
rolb
fimull
dec
push
xor
xor
push
add
insl
fidivl
push
xchg
pushf
fists
and
mov
cmp
fidivrl
mov
imul
dec
pop
jge
adc
mov
inc
lods
sub
jecxz
out
cli
in
sub
leave
jecxz
or
pusha
dec
ss
fsubrl
jne
outsb
popf
pop
mov
test
inc
fistpl
pop
and
mov
add
stos
inc
cmpb
adc
sub
jl
pushf
jo
sahf
inc
pushf
pop
fcmove
push
int
jae
dec
stos
lret
mov
dec
xor
fsts
pop
push
test
add
mov
jmp
roll
jno
testl
mov
repz
pop
jnp
and
ret
and
lods
aaa
cli
xchg
push
inc
mov
mov
scas
mov
pop
outsb
mov
or
hlt
fwait
clc
movsl
mov
xchg
sub
ss
pop
fsubrs
mov
in
jle
mov
scas
jnp
mov
push
inc
sbb
outsl
xchg
cmp
push
loopne
icebp
icebp
push
add
pop
mov
movsl
cld
pop
push
lret
mov
push
fistpll
pop
es
aam
test
insb
enter
sbb
sub
daa
out
addr16
mov
jp
mov
movsl
jp
mov
lahf
popa
sbb
push
fidivrl
lods
inc
dec
loope
mov
xchg
sarl
mov
inc
shll
or
and
push
out
std
lods
cmpsb
sub
push
jno
lods
jb
lret
hlt
je
xchg
popf
iret
xor
cmpsb
mov
call
jne
cmp
inc
fnstcw
mov
sarl
fdivl
lret
dec
adc
xchg
cmp
add
js
jns
mov
push
nop
aam
mov
push
int
pusha
pop
inc
sbb
xor
and
lret
leave
neg
hlt
sbb
push
mov
stc
xor
aas
andb
dec
add
scas
lock
sub
mov
mov
roll
pop
add
in
xchg
sub
sub
into
sub
popf
aam
and
test
arpl
nop
scas
push
xor
test
cmp
das
add
loopne
and
je
scas
insb
jge
push
rol
push
popa
jo
popf
inc
sub
cmp
scas
cmp
out
sahf
cwtd
scas
outsb
xchg
mov
in
sbb
outsl
cmpsl
jg
jcxz
jmp
pop
lret
lods
adc
ficoms
std
jle
aas
fs
arpl
cmp
jge
scas
popa
lock
jo
mov
fimull
insb
cltd
movsb
jb
test
dec
ret
ret
fldcw
hlt
sahf
inc
lods
push
fistps
stc
out
outsb
addb
sbb
mov
or
iret
sub
push
ror
add
jmp
call
and
mov
int3
xlat
subl
in
sbb
and
mov
push
repnz
rcrb
fsubl
int
add
cs
sti
cmp
push
jb
shll
cld
mov
adc
test
ret
add
inc
push
int3
nop
xchg
cmpsb
hlt
xor
inc
cmc
xor
jge
addr16
inc
in
jo
test
jle
push
daa
push
dec
dec
inc
je
mov
add
ret
xchg
jo
mov
push
mov
insl
xchg
push
jns
mov
push
xchg
and
mov
scas
js
adcl
xchg
sub
sbb
mov
push
push
adc
pop
in
imul
or
xorb
sub
aas
sub
adc
aas
or
push
out
push
ret
sub
cld
or
arpl
add
and
or
inc
push
sar
cmpl
xorl
inc
push
fcomps
lahf
filds
ret
or
xchg
adc
addr16
sarl
adc
fidivs
sub
testl
jl
loope
add
das
add
or
jns
cmpl
repnz
cmpsl
aad
loopne
add
lcall
cmp
dec
pop
adc
cli
sub
cmpsb
or
bsf
idivb
fsubrs
test
out
das
adc
cmc
push
movsb
pushf
out
inc
incl
and
xchg
dec
stc
cmp
pop
or
scas
push
je
fdivs
push
hlt
sub
adc
jns
or
daa
int3
push
in
aaa
pop
loopne
daa
sarb
adc
repz
imul
inc
in
xor
cmp
adc
mov
scas
add
push
ror
mov
jle
inc
ret
aaa
dec
sub
mov
sub
mov
push
out
xor
mov
insl
inc
pop
cmpsl
dec
arpl
dec
fcompl
cmp
inc
cld
jl
mov
or
pop
inc
push
test
pusha
scas
adc
jl
jmp
cmp
or
lret
jmp
pushf
pop
shrl
inc
pop
push
jecxz
sub
loop
sub
sarl
push
imul
insb
shl
hlt
mov
mov
fwait
cwtl
or
ret
xchg
call
mov
cltd
jecxz
sahf
mov
jns
mov
push
cltd
sbb
rorb
mov
ret
xchg
xor
call
jnp
lods
scas
push
mov
gs
lea
or
addr16
shll
test
mov
adc
jb
adc
mov
mov
cmp
clc
mov
subb
aas
push
lods
cmpsb
into
cmp
jns
dec
push
rorb
daa
mov
movsl
sub
pop
push
add
inc
fbstp
jne
or
add
mov
push
movsb
je
incb
inc
mov
xchg
fs
fsts
or
pusha
mov
sub
testl
test
sub
or
lea
repnz
nop
out
fmuls
pop
xchg
sub
int
stos
enter
push
mov
shll
sub
movsl
stc
pop
mov
xchg
imul
mov
lret
sbb
shll
test
insb
popa
dec
and
or
mov
xor
sbb
inc
sarl
cli
in
dec
rcr
cwtl
sub
in
mov
sub
jp
xchg
stos
push
sbb
mov
movsl
dec
test
shrl
push
mov
xchg
lods
push
mov
das
ljmp
sbb
push
cld
push
add
xchg
enter
xchg
call
sub
idivb
and
mov
jo
mov
mov
shl
outsl
repnz
adc
jb
cld
arpl
or
jae
push
sub
pusha
mov
dec
daa
orl
sub
lret
gs
cmp
jmp
pushf
enter
jge
adc
sbb
nop
insl
add
leave
inc
xor
addr16
cmpsb
out
aad
rcrl
cs
sbbb
push
pop
push
push
shrb
lahf
mov
ja
adc
add
dec
jno
and
and
fs
sbb
push
int3
std
shl
in
outsb
pop
pop
repz
cmp
jl
into
adc
orb
fs
and
dec
pop
xor
movsb
mov
xor
add
sbb
pop
aas
mov
sub
xchg
cmp
mov
outsl
arpl
pop
in
mov
das
fldenv
rorb
int
xchg
adcb
pusha
jmp
popf
aas
out
sbb
rcrb
lock
test
aad
sub
pop
fdivr
popa
shrl
or
xchg
sbb
pop
xchg
imul
inc
push
fwait
push
cmpsb
sub
int3
mov
sbb
push
pop
lods
fstl
loope
sub
rcr
pushw
sbb
nop
negl
or
test
sti
jl
mov
cld
sti
pusha
add
push
mul
repnz
dec
inc
xchg
ret
iret
pop
inc
stos
mov
lahf
cli
hlt
or
jno
sbb
push
in
lods
outsb
or
jb
roll
enter
or
add
scas
stc
enter
or
pop
cmp
aad
sahf
sbb
mulb
dec
lahf
sbb
cmc
mov
outsb
mov
call
jo
and
mov
sub
add
int
add
pusha
xchg
mov
in
sarb
push
jo
adc
movsl
xor
sub
mov
add
pop
fs
dec
inc
jae
mov
adcb
xchg
jp
sbb
mov
cwtl
ret
mov
leave
pusha
test
sbb
in
cmp
frstpm(287
xor
mov
and
xchg
jg
test
test
push
push
xor
loope
div
pop
add
rclb
pusha
inc
dec
dec
pop
inc
fisubs
sbb
adc
shrl
inc
loopne
or
push
inc
data16
pop
in
cld
jbe
es
xchg
icebp
cmpsl
jge
fcomi
insl
adc
out
pop
add
fcmovnu
std
cltd
mov
xor
subb
movsl
xorl
out
push
jnp
pop
mov
jbe
jmp
jmp
xorb
ss
mov
fwait
cli
xor
jbe
lods
test
test
int3
test
mov
mov
adcl
inc
adc
inc
into
aas
inc
stos
lods
mov
test
xor
push
test
adc
shl
xchg
dec
insb
mov
cmpsb
in
lcall
rcll
imul
sbb
rorb
sbb
and
mov
pop
push
ds
test
lods
adc
pop
ret
cmp
movsl
or
fbld
mov
out
add
pop
jb
dec
add
std
dec
pop
mov
aad
out
jge
push
daa
rorl
pop
fsub
and
cmpsl
imul
aaa
fmull
lods
xor
aaa
mov
jnp
lock
arpl
repz
clc
sub
or
jb
add
rcll
cmp
jl
inc
js
mov
data16
xor
push
lcall
inc
push
insl
mov
jbe
popf
int3
sbb
cmp
mov
loopne
lea
sahf
pop
xchg
call
test
lret
jo
out
jbe
stc
inc
cmp
inc
inc
into
jne
in
inc
fdivr
pusha
outsl
leave
mov
add
dec
data16
jnp
push
xor
jecxz
sbbb
or
mov
imul
cmp
lahf
sub
insl
rorb
xchg
idivb
mov
pop
gs
jno
adc
outsb
xlat
sbb
cwtl
jg
sub
in
add
pop
add
inc
repnz
cmc
aam
dec
push
jl
movsl
fisubrs
nop
push
daa
jl
mov
sahf
add
rcl
adc
enter
add
or
rsqrtps
out
mov
fs
hlt
pop
lock
push
dec
imul
das
movsl
pop
int3
xor
movsb
sbb
fldcw
cmp
cmc
mov
sub
aam
dec
fbstp
xor
dec
jge
jo
or
sti
call
subl
jg
inc
fsubs
into
mov
addb
insb
xchg
stc
shrb
mov
sbb
fwait
shll
nop
push
std
lea
add
mov
in
aas
xchg
xor
mov
xor
sbb
or
js
rclb
push
subb
or
and
adc
ljmp
nop
cmpsb
cld
rcrb
xor
cmpl
fcos
fildl
cltd
nop
jns
add
xchg
mov
xchg
scas
loop
inc
mov
xor
inc
mov
xor
cli
test
sbb
addr16
data16
xchg
dec
sub
push
pop
ficompl
cmpsb
pop
add
sbb
cs
out
jnp
test
and
pop
xor
cmc
fsubp
enter
lods
dec
aas
pop
insl
gs
insl
orb
jmp
pmaxub
cmpb
push
inc
cmp
mov
add
test
add
pop
mov
rcrl
mov
push
pop
shlb
xor
mov
jl
es
cmp
pop
lea
leave
xorb
jns
dec
in
stc
ds
iret
repnz
lods
ljmp
mov
xchg
in
shll
dec
xlat
imulb
mov
int
push
xchg
hlt
inc
insl
xchg
iret
mov
lahf
or
xchg
sub
jnp
jnp
or
fbstp
lods
and
pop
jmp
xor
adc
sbb
cmp
dec
popf
rcl
dec
adc
or
ret
out
ds
add
enter
xchg
fisubrl
fs
mov
jb
icebp
sbb
out
dec
and
and
jmp
mov
fnstcw
inc
xor
popa
scas
jo
sub
fstps
and
jecxz
pop
testb
ja
jbe
pop
add
dec
jmp
call
mov
pop
mov
add
mov
cmpsb
push
and
sbb
pop
dec
out
or
mov
adc
std
push
jl
rorb
mov
pop
adcb
loopne
add
inc
add
mov
js
jnp
idivl
lret
xchg
sub
ret
push
das
xchg
and
aad
xchg
mov
pop
outsl
scas
sbb
sub
xchg
pusha
inc
lods
sbb
js
add
inc
xorl
push
in
gs
xchg
push
add
pop
notb
add
mov
ret
mov
loop
jge
dec
add
push
lods
rol
rcrl
popf
and
pop
sbb
leave
int3
cmpl
jg
insb
repz
jne
pop
fnstsw
jl
and
out
xlat
jno
sarl
ds
cmp
mov
bound
loop
enter
lods
push
mov
push
es
adc
mov
jo
out
fldt
pop
pop
pop
enter
pop
out
scas
mov
mov
fbld
lcall
in
pop
jae
mov
adc
mov
mov
fdivrs
mov
loopne
cmp
fdivrs
dec
das
sbb
cvtps2pi
mov
mov
aam
dec
pop
xchg
movsb
enter
roll
cmp
sub
cmp
daa
push
adc
sahf
into
or
pop
cmp
jne
jmp
ljmp
mov
xor
dec
jns
insl
push
int
mov
push
sub
push
inc
push
mov
ret
mov
push
or
popa
jb
push
dec
sub
mov
fadds
test
ss
xor
std
sbb
rcrl
jb
mov
cmpsl
out
cmp
leave
push
push
dec
mov
jge
mov
scas
adc
movsb
ror
loope
mov
cmpsl
sub
add
inc
dec
push
cmp
movsl
aas
jmp
repz
add
push
pop
jbe
adc
adcb
scas
popf
shl
or
cmp
decl
pop
xchg
sbb
sarb
stos
dec
push
pop
and
jbe
xor
mov
inc
mov
mov
aaa
push
inc
call
in
popa
sbb
push
icebp
sub
sbb
iret
jmp
das
shll
mov
mov
fiaddl
hlt
sbb
mov
dec
cmp
add
fdivrp
inc
lods
ljmp
push
sbb
mov
idivb
stos
es
ret
mov
push
jo
andl
mov
add
and
push
mov
leave
dec
lret
push
xchg
mov
mov
sbb
and
xchg
stos
add
dec
ja
push
subb
xchg
xor
push
xchg
jg
out
mov
aas
sub
movsl
aaa
test
adc
outsl
inc
insl
xchg
fistpl
push
popl
cmp
dec
lret
pop
ds
insl
mov
cmp
mov
xchg
cmp
std
adc
dec
lods
mov
cmc
xchg
mov
repnz
xchg
inc
daa
pop
stc
inc
pop
int
ds
xchg
ljmp
mov
mov
xchg
sub
fdivl
scas
push
sarl
adc
mov
pop
pop
loope
cmp
pop
in
cwtl
or
jmp
cmpl
jo
pop
adc
or
insb
add
inc
out
ret
mov
mov
aad
sbb
push
mov
je
jl
incb
lods
movsl
rcrb
inc
sarb
jae
mov
dec
aad
mov
sbb
sbb
das
mov
lock
push
aaa
rcrb
leave
sbb
mov
xchg
jno
cli
sub
mov
fidivrl
pop
sub
mov
pop
loope
sahf
call
popa
ss
dec
lods
sbb
dec
pusha
out
mov
or
test
lea
insb
dec
daa
nop
mov
add
pop
dec
mov
sub
add
popf
out
push
and
pop
adc
andl
dec
xlat
or
pop
aas
or
adc
cmc
pusha
cltd
int3
mov
and
dec
out
push
and
clts
pop
lock
inc
add
popf
pushf
sub
push
ret
cmp
cmp
test
stos
lock
stc
hlt
je
xor
mov
xlat
and
ret
pop
add
gs
pushf
sub
push
outsb
mov
ret
les
sub
add
mov
mov
dec
sub
sahf
popf
push
mov
fisttpll
mov
sahf
sub
jno
adc
repnz
movsl
pop
cltd
xor
cmp
jbe
or
lock
cmp
testb
jo
xchg
std
jne
rolb
movl
test
pop
mov
insl
imul
mov
push
adc
xor
mov
movsl
xchg
mov
mov
fwait
arpl
aas
sbb
out
ds
adc
pop
mov
cmp
push
xlat
mov
ds
add
adc
stos
pop
xchg
rcrb
xor
stos
movsl
and
or
lods
pop
pop
pop
test
jge
lret
push
dec
addr16
out
pop
fwait
push
insl
mov
mov
in
push
mov
pop
pop
jg
mov
ret
std
pop
call
jecxz
mov
ja
add
jae
dec
js
cmpsb
xchg
xchg
arpl
dec
leave
jo
and
cld
adc
fs
lea
aaa
xchg
push
js
dec
and
sar
sbb
and
aam
sbb
or
cli
or
int3
das
dec
decb
loopne
and
lcall
and
data16
pop
lret
jns
dec
setnp
cmp
add
popa
sbb
into
in
jno
idivl
sti
das
mov
push
sub
sbb
jl
sub
xor
push
cmp
push
popf
das
mov
sub
icebp
push
dec
cmp
fcoms
lret
pop
loop
mov
mov
pop
lds
jnp
loop
hlt
xor
inc
lret
sti
daa
inc
adc
fsubs
mov
or
cmp
inc
popa
xor
sbb
ficompl
icebp
jmp
xchg
xchg
repnz
cld
inc
add
fdivrl
fs
std
es
sbb
fs
pop
dec
outsl
mov
push
aad
addr16
pushf
add
mov
imul
insb
add
pop
out
jp
jg
cwtl
aaa
cmc
mov
int
mov
lods
mov
xchg
invd
cwtl
pushf
clc
jl
cmpsb
stos
in
aam
adc
int
or
and
inc
jo
xchg
repz
mov
lret
cwtl
test
push
push
and
sub
sub
mov
mov
test
cmp
push
pop
and
dec
push
aas
inc
test
ret
shl
push
xor
jmp
jo
or
inc
int3
out
xchg
popf
sub
dec
mov
sbb
lahf
or
push
adc
enter
aam
push
out
jo
ja
test
xchg
add
jl
aas
cmpsb
fidivrs
xchg
cli
cmpsb
jae
xchg
aam
out
sbbb
or
dec
and
cmp
out
mov
imul
dec
pop
jmp
or
dec
aam
sbb
aam
shll
cmp
add
inc
movsb
dec
adc
xor
mov
push
mov
mov
xchg
fisubs
jns
test
cmp
mov
adc
dec
inc
jmp
add
mov
mov
adc
lretw
jle
ljmp
movhps
in
pop
push
ss
arpl
adc
adc
repz
jns
xchg
mov
stos
daa
and
rorb
enter
mov
aaa
je
outsb
adcb
mov
dec
lcall
fnstenv
mov
dec
pop
lret
ljmp
lea
loope
movsw
or
in
mov
xorl
pop
dec
mov
adc
sub
jle
mov
mov
arpl
movsb
add
mov
sbb
mov
add
lahf
insb
jo
frstor
push
pop
leave
nop
mov
xchg
push
inc
xor
mov
jle
mul
pop
pop
add
aaa
jb
movsb
xor
fsubl
addr16
ljmp
cld
xor
out
in
inc
adc
pop
adc
cld
pop
mov
shrl
fimull
mov
loop
loope
push
lahf
aam
fistpl
jns
or
xlat
adc
or
cmc
xor
fwait
add
jnp
and
xlat
push
ds
mov
les
into
sbb
adc
jl
pop
mov
mov
out
shrb
push
or
sti
popa
xor
mov
iret
ja
cmpsb
enter
pop
loop
addr16
adc
pop
mov
ljmp
rorb
loope
loopne
cmpsl
shlb
xchg
gs
nop
insb
mov
je
scas
outsb
bound
push
bnd
sti
mov
adc
xor
lret
pop
scas
loopne
mov
nop
data16
mov
mov
mov
push
adc
cmp
add
mov
pop
aaa
xchg
sbb
out
in
mov
call
test
xchg
cld
fadd
ss
in
in
das
jp
xchg
ds
into
jg
ss
cmp
sbb
loop
push
pop
clc
push
push
out
cmp
add
repz
test
and
cmpsb
mov
cltd
je
jb
movsb
hlt
arpl
lahf
jle
cmp
xor
mov
mov
adc
fsubs
dec
cmpsl
adc
sbb
pop
adc
enter
mov
push
lcall
and
fucomip
jne
in
pop
push
cmpsb
sub
shll
in
cmpsl
cli
cs
mov
dec
pop
stos
xchg
push
in
aad
ret
and
imul
out
mov
popa
or
je
dec
std
test
lahf
cmpsb
sub
pop
imul
insb
outsl
in
cmp
jns
add
das
loopne
push
cmp
lods
inc
mov
inc
jge
cmpsb
mov
mov
gs
xor
insb
mov
cmp
out
nop
int3
sahf
xor
testb
cli
mov
dec
sbb
xchg
call
adc
jnp
jae
mov
dec
sbb
sbb
cmp
pop
mov
pop
ds
cs
pop
dec
and
mov
data16
mov
cmp
xchg
shlb
jns
outsb
mov
in
or
xchg
es
mov
incb
testb
or
out
addb
adc
pop
jmp
xor
cmp
setle
xchg
pop
stos
jge
sbb
repnz
repz
scas
jecxz
fdivl
iret
lea
xchg
ret
or
leave
mov
pusha
sbb
jnp
dec
loope
sbb
popa
js
sarl
and
mov
out
fsub
or
leave
cmp
pop
push
in
pop
out
pop
pop
into
jo
out
mov
iret
dec
rcll
ja
cmp
pop
mov
rorb
jns
out
pop
xor
orl
andl
arpl
int
dec
insl
jb
fstpt
addl
cmp
fistpl
in
mov
xchg
popf
data16
xchg
mov
xchg
fcomps
movb
xchg
mov
push
jl
sarb
fstps
pop
cmc
or
mov
sub
jne
mov
movsl
fidivrs
nop
sbb
cltd
mov
fidivrs
cmpl
mov
jge
hlt
gs
mov
fimull
push
repnz
in
pusha
push
pop
cmp
std
xchg
ret
movsb
mov
pop
test
sbb
mov
mov
xor
dec
jnp
xchg
jae
xchg
inc
xchg
cs
dec
mov
les
inc
pop
adc
push
into
adc
pop
scas
andb
mov
je
fadd
fmuls
mov
nop
ja
lret
adc
fiaddl
mov
xor
or
mov
xchg
xor
and
pop
lret
not
push
push
sbb
ret
cmp
inc
pop
fcomps
sarl
xchg
push
sahf
imul
movsb
mov
addb
push
cmp
cwtl
jge
add
mov
daa
jns
jns
movsb
leave
ja
push
shlb
imul
ret
push
xchg
sbb
cmp
adc
xor
popa
cmc
dec
aad
add
js
lcall
cld
cmp
fbstp
jmp
add
xor
imul
xor
aad
sub
jnp
fidivl
movhps
pop
push
outsb
int
adc
fdivrs
arpl
mov
and
dec
scas
ljmp
sub
and
adc
orb
mov
sbb
sbb
rorl
xchg
mov
dec
out
jle
bound
sub
cmp
daa
test
icebp
and
sbb
push
sti
lea
ja
jl
jae
mov
mov
jg
leave
push
mov
jne
mov
dec
pop
push
sub
add
jg
cmp
popf
xor
std
sysenter
fdecstp
cmc
fnsave
and
xor
pop
repnz
inc
mov
mov
add
and
out
xor
mov
pop
popf
leave
test
clc
addl
xor
and
xchg
lock
daa
cmpsb
pop
xchg
inc
push
mov
sbb
xorb
cmp
mov
adc
xchg
xchg
push
sub
and
mov
test
sbb
fisubrl
and
xchg
test
rcrb
mov
decl
out
mov
sbb
mov
test
push
sbb
jg
sbb
shrl
mov
push
loope
notl
movsb
jl
xor
jecxz
mov
push
and
mov
arpl
xchg
mov
fistpll
mov
xor
in
dec
sub
or
and
lds
jo
in
sub
xor
pop
xchg
xor
cmp
mov
sbb
mov
scas
xor
cmpsl
rcrb
cmp
add
or
cmpl
xchg
bound
and
aaa
or
xchg
or
add
repz
xor
mov
add
jl
jnp
scas
xlat
mov
sub
pop
cwtl
jno
loopne
inc
inc
xor
mov
cmp
mov
cmp
push
and
mov
push
repz
mov
mov
mov
mov
push
fnstenv
xor
fistps
xchg
cmp
mov
cmc
insb
add
pop
sbb
int
jnp
inc
cltd
and
leave
insl
stos
lds
cmc
or
push
and
mov
or
arpl
add
mov
cltd
int3
xchg
dec
push
sar
mov
or
arpl
rcrl
int3
inc
aaa
mov
fdivrs
ljmp
fdivrp
rcll
std
arpl
mov
in
lahf
ja
inc
sbb
jae
jge
ret
jecxz
sub
jnp
scas
out
out
loope
jae
jo
mov
test
je
ss
push
adc
test
imul
cld
aas
mov
clc
test
push
or
add
fiadds
ret
cmp
loope
add
sub
adc
adc
xchg
fcmovnb
insl
pushf
jb
xchg
dec
or
lds
mov
out
ljmp
dec
or
cmp
sbb
pop
cs
divl
mov
pop
jmp
inc
xor
enter
xor
out
jle
mov
inc
dec
int3
sbbb
sbb
mov
xchg
sbb
push
and
popa
js
stos
hlt
push
fdivrl
mov
fs
xor
sub
ret
push
nop
dec
push
cmp
jae
scas
lods
addr16
jl
loop
cmp
data16
dec
imul
mov
lods
sub
xor
ja
inc
xchg
inc
and
ja
sbb
es
rcrb
mov
dec
jno
sbb
xor
inc
lock
push
fwait
cli
ljmp
xchg
jb
jbe
pop
push
repz
jo
out
jo
cli
call
sbb
sub
mov
lcall
repz
fpatan
ret
lret
insb
sub
mov
rcl
mov
stos
out
mov
std
hlt
mov
or
fcoms
jbe
addr16
cwtl
pop
xchg
in
repz
pop
out
mov
ret
pop
push
dec
pusha
cmp
test
mov
pop
ss
test
adc
lods
cmp
out
icebp
mov
mov
sti
push
cld
or
pop
mov
jge
mov
adc
jmp
imul
icebp
or
insb
scas
mov
sub
je
mov
or
fidivrs
sub
or
add
sub
repnz
mov
add
xor
mov
jmp
jno
popa
lea
sub
cmp
pop
addl
sbb
sbb
insb
inc
push
push
mov
pop
mov
mov
int3
movsl
arpl
or
roll
cmc
add
cmp
sub
pusha
and
lods
mov
or
shrb
xor
adc
fwait
stos
in
repz
adc
add
pop
and
push
clc
mov
mov
cmc
les
dec
xchg
ljmp
in
pop
or
cmp
push
dec
sub
or
sbb
cmp
andl
out
fsubrl
stc
mov
xchg
pop
xor
and
test
mov
mov
pop
insb
mov
inc
rclb
pop
jne
lret
pop
add
and
push
lods
cmp
add
xchg
xor
lret
sbb
insb
push
stos
lock
cmp
fistps
lock
sub
dec
cmp
or
adcl
inc
cltd
xchg
lret
sbb
gs
test
das
adc
nop
int3
and
mov
cmpsl
aas
xchg
xchg
test
mov
push
mov
mov
pop
sub
add
or
lret
les
mov
jns
test
pushf
and
stc
aas
insb
or
shlb
xchg
fisttpl
cli
pop
add
stos
mov
sbb
int3
lock
es
fistpll
arpl
aaa
in
out
pop
adc
push
mov
mov
jmp
jmp
pop
mov
mov
sbb
aaa
hlt
mov
out
outsl
dec
xchg
movsl
scas
mov
mov
inc
mov
mov
es
and
push
xchg
mov
adc
xchg
ret
push
ljmp
out
sbb
in
and
xchg
push
add
add
fwait
dec
aas
push
int
dec
mov
mov
sub
call
in
mov
cmpsb
mov
mov
xchg
ret
scas
rcrb
push
cwtl
addb
rcll
xchg
clc
pop
inc
outsb
nop
or
dec
cmp
inc
xchg
fcmovnb
lret
aas
push
push
pop
cmpb
in
xchg
les
ljmp
popf
subl
inc
lret
cwtl
cmp
cmp
aas
stos
ljmp
and
hlt
or
scas
and
or
mov
xchg
sub
icebp
dec
lahf
ror
hlt
mov
fimull
mov
ss
and
nop
mov
arpl
and
lods
enter
mov
adc
add
pop
jp
add
and
in
call
push
xlat
cmp
js
push
lret
pop
cmpsl
xor
arpl
lea
adc
xchg
xchg
imul
in
out
lea
xchg
std
xor
popa
jo
in
pop
adc
movsb
cmp
std
cld
mov
pop
rorb
inc
dec
enter
dec
inc
andb
fidivrl
shl
jl
mov
cmpsl
mov
push
dec
in
add
and
scas
imul
and
sbb
cmpsb
xorl
stos
fdivr
jge
jmp
dec
cli
fsubs
je
jge
jns
cmpsl
add
dec
cmc
mov
fcoms
adc
lock
out
stc
rorb
push
xor
push
lret
lret
loopne
test
sbbl
jg
mov
scas
mov
or
mov
jb
mov
movsb
adc
adc
mov
inc
push
mov
push
push
sbb
sbb
sbb
mul
jne
int
test
adc
inc
daa
add
xchg
push
add
in
sub
push
mov
sbb
and
sub
mov
sarb
and
mov
xchg
mov
mov
pusha
xor
push
adc
lea
test
inc
aas
inc
xchg
fsubs
push
adc
or
adc
push
nop
inc
xchg
and
das
test
mov
sub
xchg
lods
sbb
pop
imul
pop
jp
rol
mov
jg
push
xchg
imul
xchg
js
bts
or
xor
push
fs
sbb
repnz
sbb
xchg
nop
aas
sbb
test
inc
pop
and
mov
pop
dec
inc
pop
bnd
xor
xchg
call
scas
rcrl
xchg
inc
inc
jne
arpl
push
repnz
pop
insl
in
or
mov
push
pop
hlt
ficompl
out
ja
inc
pop
jl
int
fstl
pop
out
jo
lock
pop
add
std
movsl
pop
jge
pop
jl
imulb
mov
bound
xchg
push
pop
or
mov
mov
repz
loop
out
xchg
mov
jmp
dec
dec
ljmp
dec
mov
and
in
out
data16
lods
sbb
mov
dec
xor
cmp
shrl
xorl
push
lret
mov
push
imul
lahf
sbb
nop
add
or
dec
mov
xor
inc
or
fiadds
mov
add
push
mov
insl
xchg
or
movsl
mov
in
mov
insl
mov
mov
loop
stc
cmpsl
inc
cmpsl
inc
es
sbb
adc
aaa
mov
ret
call
mov
rclb
dec
mov
out
stos
fidivl
add
test
pop
das
sbb
jl
shlb
loope
or
test
in
inc
loope
test
leave
and
inc
and
jmp
repz
mov
pop
sti
jecxz
jl
cmp
repnz
pushw
in
imul
dec
push
mov
xchg
add
sub
mov
push
jg
mov
popf
push
mov
xor
jb
jmp
icebp
jae
js
cmpsb
xchg
fmul
lahf
outsb
pop
push
jl
sbb
xchg
push
daa
xor
popf
enter
jl
hlt
pop
cmp
push
std
mov
mov
in
xor
mov
popf
xor
sbb
sbb
shlb
dec
add
push
xor
and
cmp
fidivrs
cmp
ret
in
inc
data16
mov
rcrb
je
int3
imul
insb
hlt
ja
or
shlb
gs
jl
pop
fcoms
adc
push
in
faddl
or
lahf
addr16
inc
jp
addr16
shll
stos
and
mov
sub
or
pop
ret
daa
xchg
mov
adc
xchg
mov
push
sbb
gs
inc
out
cli
aas
shl
push
gs
mov
dec
mov
js
test
outsb
adc
dec
rcll
ret
rorb
mov
loopne
and
in
test
and
enter
scas
fwait
adc
out
hlt
lret
test
mov
addb
out
sbb
mov
or
pop
inc
cmpsl
adc
push
or
std
test
in
or
aas
mov
lret
cs
xor
xor
cmp
cwtl
push
add
loope
mov
stc
fistl
xchg
mov
les
mov
popf
shlb
mov
lcall
and
push
adc
and
pop
aaa
push
dec
loope
cmp
sub
jb
fcomps
mov
jge
dec
popa
lods
mov
pop
add
mov
adc
adc
sahf
dec
je
push
xlat
or
xlat
add
jb
pop
mov
jns
rorb
aad
push
xor
daa
ret
pop
enter
mov
adc
daa
adc
jbe
inc
dec
mov
cmpsb
sbb
sub
aaa
nop
inc
push
lods
push
jbe
fnsave
cmp
fisttpl
sub
lret
stos
dec
ret
adc
push
inc
xor
push
mov
mov
xchg
jge
adc
jmp
cmp
sbb
rol
rorl
popa
xchg
and
loope
ljmp
js
and
cmp
pop
icebp
and
xor
xchg
sbb
dec
cmp
push
add
mov
mov
negl
test
or
popa
cmp
pop
push
adc
mov
push
pop
rclb
test
bound
dec
xchg
push
fwait
fs
inc
mov
jae
cmc
mov
sbb
inc
and
enter
push
imul
and
pop
repz
dec
and
inc
jae
cmpsl
mov
fmuls
ret
pop
lret
push
roll
lea
mov
out
lahf
inc
xor
sub
fwait
cwtl
popf
sbb
stos
cwtl
push
insl
lahf
adc
and
lock
scas
lock
push
data16
push
sub
cltd
daa
mov
and
push
add
ljmp
js
and
xor
clc
daa
pop
add
sbb
add
and
xor
fdivs
xor
xor
int
sub
or
cmp
jle
pushf
pop
rcrb
fiaddl
das
cld
adcl
stos
mov
pop
jae
fwait
leave
sbb
push
push
daa
inc
aas
les
daa
test
mov
jl
scas
cmp
rolb
and
mov
xchg
cmp
add
out
push
mov
enter
loope
ja
dec
sub
and
lret
xor
lods
and
jnp
sub
mov
std
mov
aaa
mov
push
push
imul
mov
xor
add
int
sbb
sti
xchg
mov
sub
inc
jmp
push
xchg
jl
dec
div
lcall
bound
fisttpl
pop
pop
sbb
pop
addb
stos
or
dec
dec
pop
add
add
mov
push
mov
xor
and
sbb
dec
call
popa
ja
sbb
xchg
xchg
out
push
fs
dec
xor
xor
and
push
xchg
fnstcw
pusha
inc
leave
add
inc
adc
nop
cmp
dec
inc
xchg
jo
aas
jmp
sahf
jmp
cmpsl
xor
hlt
inc
ss
into
and
int
fwait
add
cld
xchg
insb
imul
push
xor
sbb
add
mov
adc
xor
cmpsb
pop
xchg
xor
or
jecxz
and
in
hlt
or
out
pop
inc
sar
pop
pop
aaa
jecxz
xor
mov
mov
andl
gs
mov
fildll
outsb
dec
lock
ljmp
ja
and
movsl
clc
movsl
clc
rcr
popf
shll
call
aam
lret
or
push
rol
sub
add
cli
adc
inc
xor
xchg
pop
in
jnp
push
mov
gs
xor
jl
sub
mov
ret
pop
adc
xor
je
sbb
aaa
push
sub
je
push
lods
mov
or
cmpl
lahf
loop
shr
adc
subl
bound
mov
arpl
xchg
mov
cli
aas
arpl
outsl
dec
mov
cmp
xchg
push
repnz
pop
cmp
loope
iret
fistps
sub
std
popa
loopne
mov
xor
dec
sahf
or
subl
pop
push
lods
das
ljmp
sbb
mov
int
push
cltd
adc
sbb
adc
sbb
cmp
mov
inc
jle
bound
add
mull
popa
dec
arpl
int
loopne
dec
aas
fwait
or
rorl
jbe,pt
imul
popf
lret
mov
fdivr
fdivl
sub
push
mov
cld
jae
xor
dec
jmp
pop
push
fldt
mov
leave
jmp
mov
notb
jg
mov
xchg
paddsb
rcrb
push
stc
out
or
imul
arpl
test
adc
push
or
test
roll
xor
add
lcall
jg,pn
cltd
mov
inc
jns
mov
mov
clc
and
andb
adc
pushl
xorb
fcomi
push
stc
insl
mov
std
jmp
loopne
fistps
out
enter
pop
rcrb
es
sbb
adc
pop
and
sub
scas
mov
xchg
or
fwait
icebp
sar
icebp
int3
outsl
sbb
setnp
xchg
fadd
pop
daa
dec
xchg
pop
rorb
push
jle
out
sub
jno
jge
or
and
movsl
test
stos
arpl
nop
push
fcompl
add
cmp
jo
jge
mov
xor
out
add
mov
mov
movsb
test
cli
ds
fsubl
ror
lea
and
lret
and
shrb
pushf
pop
sbb
aaa
sbb
mov
fdivl
or
mov
add
outsb
pop
fnsave
jno
adc
dec
xor
imull
in
sub
repnz
jnp
mov
push
scas
lods
adc
mov
stc
pop
adc
aad
jecxz
aad
xor
cmp
sbb
inc
adc
pop
jbe
jecxz
add
mov
push
xor
pop
repz
mov
mov
sbb
es
inc
push
sub
xchg
xlat
leave
xchg
lods
leave
mov
mov
outsb
or
fisubs
sub
nop
test
lods
jno
inc
inc
inc
push
xor
in
sbb
stc
out
jp
pop
nop
pop
sub
lods
mov
jp
adc
stc
cld
in
data16
push
pop
inc
adc
in
cmp
enter
xor
sub
clc
fidivl
sub
cmc
sbb
aas
es
sbb
dec
push
push
dec
jge
xchg
xor
sti
cli
or
sub
outsl
cmpsl
iret
jp
mov
aam
mov
push
push
pop
inc
out
xor
fdivl
imul
fs
scas
pop
or
inc
mov
and
movsl
orl
scas
adc
add
xlat
mov
mov
mov
and
push
outsb
lret
mov
movsl
mov
nop
dec
xchg
ljmp
aam
iret
pop
jp
push
dec
mov
paddusb
movsl
in
mulb
add
or
dec
lret
and
repz
lcall
bound
mov
pop
xchg
inc
pop
mov
call
pushf
fdivrs
loope
cmp
lock
movsb
int
das
sbb
hlt
pop
mov
jge
and
xchg
mov
movsb
movsb
addr16
ljmp
push
pop
cmp
push
or
jb
and
fiadds
sub
into
push
sbb
xor
cmp
inc
icebp
push
test
push
cli
pop
jecxz
mov
iret
shrb
lea
push
or
adc
aaa
dec
insb
ss
shlb
cmp
cmp
ss
pop
in
lret
jno
xchg
cmp
adc
faddl
mov
xchg
cli
lret
inc
enter
push
mov
push
addr16
imul
pop
push
je
dec
sbb
xor
rcll
repz
xchg
mov
jne
and
stc
mov
movsb
pop
das
add
enter
cmp
dec
add
jecxz
add
je
ds
rorb
pop
adc
and
mul
lcall
xchg
mov
adc
inc
cmpsl
pop
je
lock
negb
sahf
int3
stos
out
mov
nop
gs
insl
lret
mov
push
xchg
outsl
mov
xor
mov
mov
push
in
or
sub
ret
std
pop
mov
lahf
mov
lret
std
jns
sbb
inc
adc
mov
xchg
mov
iret
pop
cmp
sbb
dec
jle
inc
xchg
pop
add
mov
pop
imul
cmp
mov
xchg
jnp
scas
mov
into
imul
lret
xor
mov
xchg
dec
cmp
stc
xchg
lds
ss
adc
dec
fsubrl
repnz
mov
in
or
mov
sub
repnz
insl
loop
call
addr16
and
mov
adc
adc
dec
clc
dec
ja
pop
sti
jp
fidivrs
jae
data16
jno
jne
sbb
cmp
insb
push
jne
lret
ret
mov
enter
xor
pop
ds
sub
fsubs
dec
mov
pop
movsb
rorl
add
push
shll
arpl
scas
aas
ljmp
imul
mov
call
test
in
lods
dec
lcall
sub
loopne
outsl
xchg
and
in
js
add
mov
outsb
adc
adc
sub
sbb
leave
jno
inc
mov
lcall
dec
adc
push
out
ljmp
pop
stos
fcoms
cli
sub
dec
inc
push
cli
hlt
test
dec
add
fildl
out
bound
jecxz
xchg
fldl
push
stos
push
movsb
mov
stos
test
lods
inc
inc
cmpsb
fadd
roll
out
clc
or
lock
fdiv
xchg
or
push
les
dec
push
inc
sub
push
pop
aad
and
imul
scas
add
bound
cmc
pop
xor
jle
dec
cmp
dec
scas
aad
repnz
into
and
sbb
insb
sahf
popa
mov
je
mov
gs
push
aas
mov
sbb
or
or
and
cmpl
pop
add
insb
pop
cld
lret
push
or
inc
loopne
jle
dec
ficoml
les
cmp
mov
movsl
adc
add
lock
add
push
loop
mov
js
lods
add
xor
push
and
cltd
sub
test
xchg
addr16
xor
xlat
mov
or
sbb
das
lahf
jnp
je
mov
jnp
push
mov
mov
dec
lahf
mov
fnstcw
sbb
mov
lret
cltd
push
idivb
aas
sbb
dec
mov
daa
movsl
sub
mov
xchg
add
jnp
inc
inc
out
mov
add
jmp
cmpsl
push
stos
lds
jno
lret
fs
dec
dec
dec
lock
shr
fmuls
sub
loop
jp
xorb
inc
sub
inc
add
out
dec
subb
test
call
fstps
in
push
sub
cmp
cmpsl
xor
push
inc
in
test
int
test
jne
push
iret
pop
push
mov
pushf
lods
int
call
daa
rorb
push
stc
push
lahf
iret
enter
outsl
addr16
xlat
scas
test
xor
xchg
movsl
rorl
ss
mov
adc
mov
shrl
or
xor
nop
test
sbb
btr
inc
push
lcall
push
jmp
icebp
mov
cmpl
call
or
jp
mov
mov
push
jmp
movsl
sub
in
fistl
out
subl
cmp
outsb
sub
ds
clc
popa
add
mov
fsubs
push
mov
stos
inc
scas
scas
mov
jae
xor
ja
fildll
jmp
popf
and
popa
xor
addb
sbb
movsl
pusha
sub
popa
mov
sub
test
or
fidivrs
roll
mov
test
push
cmpsl
cmpb
mov
fwait
addr16
in
inc
lret
ret
sbb
dec
push
insl
mov
adc
outsb
inc
movl
bound
pop
out
add
rcr
sti
pop
lock
mov
push
sbb
or
ds
ret
xchg
mov
sub
sbb
xchg
movsb
outsl
jle
je
inc
bound
ja
mov
push
xor
push
adc
push
sbb
sbb
xor
and
jmp
push
sbb
push
add
cltd
addl
dec
nop
push
shll
stos
xchg
dec
mov
hlt
jg
shlb
daa
push
faddl
cld
inc
push
and
lods
mov
xor
jnp
mov
idiv
pop
aad
aam
fdivs
loop
sbb
jnp
iret
jnp
sti
xchg
mov
inc
pop
pop
into
lock
push
or
stos
out
and
shlb
aas
outsb
jae
mov
xor
gs
movsb
pop
ja
iret
xor
dec
outsb
pop
jg
lahf
mov
pop
addl
pop
insl
sub
ss
and
mov
call
jge
loopne
push
pop
stos
jle
xchg
dec
sbb
jbe
mov
push
outsl
rcrl
pop
fcoml
pop
nop
repz
inc
sub
or
jne
inc
or
ja
add
xlat
outsl
int
rcrb
mov
ljmp
inc
dec
movsb
pop
jo
call
shrl
fisubl
rcrb
icebp
and
sahf
mov
mov
inc
stc
or
andb
in
add
cmpsb
jne
xchg
es
js
pop
inc
mov
ficomps
xor
cmp
push
cltd
and
push
test
inc
scas
jge
in
std
jmp
push
test
pusha
fdivr
shrl
scas
lret
insb
push
ror
je
outsl
arpl
jns
sbb
mov
sbb
je
cs
fwait
stos
mov
cli
xor
xor
popa
mov
mov
jnp
and
gs
es
stc
stos
pop
cmpsl
mov
imul
arpl
and
push
mov
or
pop
leave
xor
cli
or
xchg
mov
daa
pop
std
outsb
int
setge
sub
xchg
aad
add
mov
cmpb
mov
test
adc
pop
push
jg
inc
out
ja
dec
cmp
lcall
adc
insb
pop
pop
fwait
adc
mov
repnz
dec
shlb
jne
sub
int3
dec
je
sbb
adcb
sbb
incb
sahf
insb
pop
mov
push
cmp
xchg
jg
jnp
pop
xchg
nop
test
fidivs
add
jb
jb
sub
add
inc
pop
outsl
stos
jl
scas
dec
push
push
sbb
mov
fcomps
lret
fbld
pusha
movsl
push
bound
mov
ds
clc
mov
cmp
cmc
mov
mov
and
ret
cmpsb
insb
or
cltd
lods
movsb
aas
dec
imul
imul
pop
addb
mov
pop
cmc
mov
outsb
sbb
or
cmp
dec
mov
mov
ja
lock
rclb
xlat
sub
mov
test
aas
sets
adc
jle
aad
mov
xor
pop
and
nop
sub
sbb
sub
mov
dec
ljmp
aad
dec
inc
inc
ja
outsl
cmc
andl
pop
xchg
lahf
shll
adc
cmp
scas
fildl
xchg
aaa
push
cmc
sbb
cmp
aas
jae
loope
ja
mov
shlb
popa
mov
lods
pop
xor
stc
mov
gs
out
mov
aas
loop
fiadds
xor
or
mov
mov
xchg
jp
push
int3
test
fsubrl
clc
jbe
pusha
dec
test
mov
sub
das
iret
push
mov
inc
add
arpl
mov
pop
loope
mov
add
movsb
push
clc
scas
pop
fmuls
mov
dec
cmc
aaa
jbe
pop
mov
repz
and
push
ret
loope
mov
aas
cmpsl
cmpsb
in
inc
fistl
or
roll
or
mov
movsl
repz
mov
add
pop
pop
xor
scas
jge
xor
mov
dec
mov
loopne
or
cmp
and
mov
stc
neg
mov
push
jno
imulb
outsl
repnz
stc
dec
call
jg
lods
test
es
mov
in
lret
enter
ds
loope
insb
scas
cli
mov
mov
push
xchg
fsubp
inc
lahf
leave
outsl
fisttpll
inc
std
jle
roll
mov
aam
mov
pop
cs
jns
push
test
jne
adc
stos
add
cmpsl
jne
mov
pop
inc
xchg
mov
push
or
sbb
iret
and
mov
inc
mov
into
xor
or
cmpsl
push
mov
pop
push
xchg
sbb
outsb
data16
stos
je
in
stos
push
xchg
jno
out
inc
rolb
jecxz
jle
mov
xor
andb
test
mov
addb
push
ret
ret
loope
push
jno
mov
gs
andl
mov
mov
mov
cmp
and
xchg
jl
cwtl
jbe
adc
enter
dec
das
pop
xor
and
decl
inc
lds
xorb
fmul
jge
cmp
mov
jl
gs
xchg
mov
stos
adc
adc
bound
stos
and
cli
dec
lods
xchg
ljmp
sbb
cli
leave
sub
mov
andb
loop
push
imul
fsubrp
test
loopne
fwait
xchg
imul
sbb
push
out
cmpsl
popf
and
push
push
test
mov
ret
daa
outsl
enter
js
mov
sub
gs
dec
mov
mov
sub
pushf
xor
mov
test
xor
out
sub
xor
mov
pop
sarl
add
inc
lock
sbb
in
push
inc
in
andl
xchg
dec
push
ror
in
ret
add
mov
mov
dec
int
mov
pop
sbb
leave
out
dec
arpl
jecxz
jnp
ja
in
lock
cli
outsb
pop
push
stc
inc
testl
inc
int
mov
int
mov
or
fcomi
fdivrl
jae
ret
push
mov
adc
not
or
xchg
jmp
mov
xchg
jle
out
je
xchg
dec
jecxz
andl
notb
pop
sub
daa
jp
push
shl
rclb
adc
jne
repz
mov
xor
rcrb
and
xchg
add
jo
addr16
adc
ja
ds
nop
into
test
loope
lcall
push
sub
pop
loopne
scas
out
sbb
ret
lcall
xchg
int3
aas
xor
xor
and
mov
xor
pusha
mulb
sbb
es
sbb
hlt
js
push
cmp
lods
mov
cs
add
lret
stos
fdivrs
xlat
mov
les
mov
les
cs
test
loopne
pop
loop
dec
sti
ret
out
mov
dec
pop
testl
fnstenv
push
and
mov
test
push
leave
fildl
mov
clc
loop
test
loop
adc
icebp
jno
pop
xchg
add
jno
rorl
dec
xchg
outsl
fs
jb
adc
or
in
or
xor
cmpsb
dec
loopne
mov
mov
jnp
das
xchg
inc
cmc
jo
pop
cs
or
sbb
pop
cmpsl
enter
jae
jp
outsl
pusha
mov
aam
negb
jg
xor
test
or
mov
loop
test
jge
mov
pop
test
fadd
stos
jg
js
dec
cld
xchg
scas
jl
pop
ja
sbb
adc
pop
aad
adc
dec
mov
jae
push
push
in
dec
push
pop
insb
leave
mov
and
lds
in
cwtl
inc
fidivs
and
outsb
mov
inc
imul
mov
mov
cmp
xor
es
int3
or
lret
push
fs
insb
push
aam
dec
insb
call
test
shll
push
mov
add
mov
out
sarb
dec
adc
push
arpl
icebp
sub
adc
notb
and
push
addb
cld
cmpsl
xlat
bound
add
push
out
xlat
adc
test
cmpsb
push
or
std
add
mov
inc
les
in
fdivrl
call
push
movsl
push
cwtl
push
xor
sbb
push
mov
out
daa
movsl
push
call
sub
mov
xor
sbb
inc
adc
xor
fadd
mov
lods
loopne
std
rorl
xchg
add
cmp
std
jle
pop
jns
std
das
jne
or
adc
cs
lock
fimuls
dec
mov
mov
loope
inc
popw
addr16
mov
mov
sbb
cli
mov
leave
mov
jecxz
rcr
int3
ljmp
scas
mov
in
je
adc
pop
jae
push
lods
jb
fcomps
xchg
int
test
dec
jmp
xor
lret
and
das
mov
aaa
outsb
jg
xor
jg
rcrl
push
rcrb
jl
imul
mov
gs
inc
je
orl
inc
movsb
movsb
shlb
in
pop
cmp
adc
lods
inc
and
cmp
outsb
aam
addr16
in
sbb
das
mov
jo
mov
push
mov
inc
sbb
mov
mov
in
mov
lea
dec
lcall
add
mov
jne
push
out
rol
loop
scas
gs
xchg
xchg
icebp
push
mov
and
mov
adc
jecxz
ss
jp
popf
mov
clc
fbld
mov
sbb
fidivrs
leave
adc
cwtl
and
mov
fidivrs
cmpsb
sub
xor
loope
inc
or
mov
adcb
fadd
fwait
cmp
xchg
int3
mov
xchg
or
pop
mov
loop
cmp
lock
data16
pop
out
or
jg
filds
pop
imul
mov
sbb
arpl
jmp
lods
jbe
shlb
les
mov
push
push
adc
mov
jo
pop
push
fwait
test
repnz
jnp
sahf
hlt
pop
push
inc
imul
cld
gs
push
clc
fs
outsl
add
insb
gs
jmp
adc
jnp
int
push
orl
in
xor
push
dec
loope
xchg
jl
mov
pusha
out
push
mov
push
ljmp
sbb
jne
cmp
fistl
lahf
aad
or
out
nop
inc
pminsw
je
cmp
loopne
popa
and
insl
adc
push
fs
mov
test
clc
sub
add
xchg
push
cwtl
fnstenv
out
mov
aam
jg
in
lret
push
cmc
clc
insb
int3
jmp
lret
xor
imul
shrl
lods
xchg
aam
dec
in
ljmp
fidivrl
lds
ljmp
inc
dec
movsl
cmc
loopne
sbb
jbe
cli
jmp
mov
xchg
jmp
fcmovbe
in
adc
rcrb
push
ficompl
adc
loop
ret
xor
push
jl
cmp
incl
inc
mov
sahf
lds
inc
inc
iret
out
movsb
stos
cli
or
pop
push
add
jae
cltd
movsl
sbb
mov
lcall
dec
sbb
cmp
or
test
jnp
adc
ret
out
into
fwait
fildl
push
dec
std
sbb
push
or
sbb
jl,pn
push
pop
cltd
in
hlt
or
dec
lea
ljmp
test
shrl
adc
in
xchg
jo
mov
mov
xlat
sahf
packssdw
insl
sub
fmul
pop
sub
push
sbb
pop
ret
jmp
out
pop
sub
mov
push
mov
cwtl
jno
fdivrs
hlt
mov
daa
xchg
aam
gs
decb
xchg
xchg
repnz
mov
pop
ret
gs
mov
rolb
fisttpll
push
jge
shlb
cmp
xchg
lea
add
sub
orl
and
push
push
sbb
push
lret
xor
mov
pusha
dec
ljmp
mov
mov
inc
jg
mov
lahf
sub
or
sbb
jmp
push
mov
roll
or
clc
mov
jge
jns
aad
jnp
add
or
dec
rorb
mov
imul
pushf
lods
dec
loop
mov
jne
push
mov
adc
xchg
mov
mov
sub
les
mov
sub
sbb
xor
aaa
rcrl
into
xor
mov
insb
les
data16
xchg
mov
in
mov
shrl
and
inc
popa
xor
dec
lahf
inc
fxch
sub
ds
sti
jge
lret
mov
or
stos
cmpsb
mov
ret
sub
aam
loope
out
ficoms
pushf
and
add
call
gs
xor
xchg
jne
jg
cmpl
push
insl
stos
inc
xchg
call
mov
stos
inc
int
cmp
nop
rcl
into
xor
filds
leave
pushf
lods
das
add
sbb
mov
push
xchg
jo
lcall
sbb
sub
cmc
in
movsl
je
mov
mov
or
cmp
lret
adc
jecxz
enter
jo
loope
cmp
push
sbb
jno
pop
sti
xor
push
fstp
adc
jb
aad
outsl
cmpsl
repnz
add
and
jno
sbb
mov
les
pop
xor
out
mov
test
jb
xchg
gs
or
adc
and
mov
and
inc
add
add
aaa
mov
faddp
cs
pop
push
jae
push
jb
lods
xchg
clc
sub
ret
movsl
lahf
not
iret
mov
dec
add
mov
mov
shl
jns
lret
mov
jp
or
fwait
inc
jg
aas
xchg
lods
sub
mov
mov
pusha
enter
push
jl
cmp
add
push
jns
adc
nop
sub
pop
mov
push
push
insl
lcall
jae
sahf
ss
and
movsl
sti
es
int3
ret
clc
mov
lret
mov
sub
imul
lret
sbb
or
mov
sbbl
lock
lcall
lods
push
adc
pop
subl
sarb
sub
add
imul
add
mov
mov
mov
xor
mov
pop
gs
mov
or
sbb
xor
xchg
fstpl
ret
add
out
pop
mov
pop
mov
jle
leave
jg
push
roll
lea
out
or
or
jo
mov
sub
push
in
cmpsb
scas
outsl
or
rcl
nop
or
cmp
out
mov
jmp
cmp
fistl
jnp
and
xchg
test
adc
and
arpl
shrl
mov
mov
out
imul
jle
xchg
das
mov
movsl
cs
xor
jne
add
cld
inc
pop
das
cmp
jecxz
stc
add
or
xor
sub
mov
mov
jo
ss
cwtl
popa
test
push
rclb
ss
push
jg
in
xchg
daa
addl
lret
xchg
movsb
xchg
mov
mov
add
push
push
push
jno
add
sbb
sahf
adc
mov
pushf
xchg
adc
ret
loope
ja
clc
inc
sub
mov
mov
cmp
inc
cmp
test
mov
dec
popa
jbe
push
mov
test
int3
mov
or
enter
dec
movsl
or
sbb
adc
idivb
cld
push
testb
push
jecxz
sbb
bound
rcrl
aaa
mov
repz
and
xchg
inc
in
push
test
divl
mov
les
ss
outsb
pop
loopne
jl,pt
insl
jnp
fisttpll
stos
aas
push
mov
pop
xchg
or
cmp
and
push
mov
lldt
hlt
mov
cltd
jmp
into
mov
icebp
insb
sbbb
adc
in
std
jnp
cmc
inc
mov
dec
mov
shrb
cmp
int
sub
cmp
les
in
nop
icebp
test
sub
mov
mov
movsl
jecxz
scas
int
pop
pop
jns
inc
mov
jp
mov
push
test
or
inc
lock
push
or
movd
repnz
leave
lock
ret
inc
repnz
data16
jae
ret
mov
aas
ds
jl
xor
push
rclb
rorl
sub
imul
pop
paddw
pop
sbb
mov
mov
push
or
int
pop
xor
popf
sbb
int3
pusha
subl
lcall
loop
jmp
sbb
adc
fwait
gs
jae
pusha
arpl
aam
mov
negb
dec
add
pop
xlat
popf
push
push
lods
outsl
ret
sbb
pushf
int
lds
pop
pop
xchg
loope
clc
inc
repnz
xchg
or
dec
jecxz
enter
mov
ljmp
aam
xchg
cmp
insb
fmulp
push
scas
nop
and
out
push
xchg
xchg
insb
pop
rcrb
outsl
scas
add
sub
sub
xchg
iret
movsl
sub
lret
out
adc
std
fidivl
and
cmp
movsb
sub
pop
mov
insl
dec
popa
add
shll
sbb
mov
mov
and
jbe
mov
repnz
push
test
xor
mul
add
push
dec
mov
jo
mov
lea
fucomp
adcb
xchg
add
pusha
test
xor
aad
and
jnp
mov
cli
jle
cs
mov
mov
pop
shll
repnz
mov
imul
mov
adc
mov
mov
mov
inc
mov
pusha
mov
outsl
loopne
hlt
cmpsl
icebp
ds
pop
les
cmp
stc
adc
shll
add
in
popa
and
hlt
dec
jecxz
or
movsb
imul
dec
xchg
mov
mov
xchg
dec
movsl
pop
xor
pop
repnz
aad
pop
sbb
mov
or
test
cmpsb
out
pop
or
xor
outsb
push
lahf
xlat
sub
and
in
cmpsl
loope
fmuls
mov
adcb
scas
and
push
and
decl
add
inc
lcall
mov
dec
inc
pusha
and
testl
out
xorb
lds
jl
int3
sbb
or
cmp
mov
in
jb
sub
mov
and
lahf
mov
push
sahf
pop
pop
jbe
fcmove
jg
sub
repz
movsb
aam
cwtl
mov
xchg
and
mov
push
mov
adc
pop
sbb
push
bound
adc
mov
push
mov
fs
fwait
lods
jno
rol
ret
mov
cwtl
data16
xlat
mov
inc
push
pushf
ss
mov
xor
mov
pop
or
ret
mov
inc
jns
xchg
scas
or
int3
add
test
ret
sbb
enter
cmc
lcall
je
xchg
mov
xor
fiadds
sti
cltd
fwait
add
jg
out
cmpsl
pop
cmpsl
xchg
aad
and
lcall
cmp
in
mov
and
sbbb
mov
mov
nop
mov
out
add
sbb
push
pop
mov
mov
mov
mov
mov
ljmp
pusha
mov
jl
add
mov
sbb
addr16
ret
and
pop
xchg
sub
mov
stos
mov
jnp
lock
xor
repz
mov
lods
dec
mov
lret
dec
dec
jbe
test
adc
ret
dec
gs
les
push
cmp
dec
ss
aad
push
mov
test
repnz
inc
mov
pusha
outsl
out
outsl
sub
cmpsl
sub
repz
cld
aaa
outsl
repz
pop
mov
out
or
loop
or
mov
adc
sbb
or
repz
push
push
sbb
idivl
push
dec
cmpsb
test
insl
inc
mov
mov
sub
sahf
ds
jae
call
or
rorb
cmpsl
ss
jbe
or
es
arpl
cmp
adc
pop
jae
scas
xchg
aas
pop
std
jge
popf
loopne
into
in
xor
das
mov
clc
jg
leave
rorl
aas
xchg
lahf
dec
imul
aad
xor
jl
xlat
jle
jl
jle
mov
daa
les
push
clc
xchg
pop
scas
mov
sub
dec
mov
jle
lock
or
cmp
inc
mov
shl
jp
push
jmp
fwait
jmp
xor
adc
mov
clc
vcvtsd2ss
adc
lcall
adcl
imul
cmpsl
cli
out
lcall
loop
and
rclb
jmp
scas
fstpt
loopne
and
xor
sahf
fdivrl
inc
cltd
aad
xor
aas
imulb
push
jge
mov
sub
sub
fwait
cmp
es
pop
adcb
dec
add
stos
jnp
xchg
out
outsl
jmp
jb
bound
mov
js
lds
xchg
xor
stos
js
pop
jbe
mov
mov
aad
test
sub
sbb
fiaddl
xchg
lret
mov
lock
adc
or
jge
jae
or
lods
fcompl
out
xchg
inc
cmc
xor
lods
sub
jae
fisttpl
pop
inc
movsb
sub
out
and
mov
stos
adc
rorb
mov
cmp
push
mov
jno
mov
or
cltd
or
cmp
lcall
fmull
leave
insb
test
imul
mov
mov
add
test
push
test
xchg
jmp
inc
pop
imul
jecxz
call
into
insb
js
mov
and
nop
mov
test
and
shlb
out
lock
inc
fwait
lods
stos
fwait
aad
and
mov
fidivl
adc
cmc
loope
push
add
aaa
cli
pop
pop
jne
mov
push
xchg
mov
jb
iret
adc
mov
inc
imul
out
ret
adc
lods
mov
mov
xchg
idivl
shll
test
cld
inc
mov
or
jnp
sbb
pusha
inc
outsb
ret
sbb
pop
adc
mov
add
jo
add
popf
push
jo
aad
xchg
outsl
inc
sub
nop
fadds
push
out
mov
sbb
jo
sub
cmp
test
ljmp
adc
push
or
mov
push
dec
ret
arpl
stc
sahf
mov
mov
pop
jge
js
sbb
stc
dec
jo
inc
fldl
std
insl
fbstp
or
out
mov
aaa
fidivrl
movsl
daa
sub
sub
sbb
cmpsl
push
xchg
loop
lods
mov
dec
outsb
loop
mov
push
ss
push
add
xlat
push
dec
leave
lods
sbb
testl
cmpsb
add
and
push
mov
xchg
daa
cmp
data16
xchg
push
and
popf
and
in
pop
ret
les
sbb
pop
std
jmp
popf
push
lods
lahf
sbb
mov
out
cmc
lods
jnp
inc
xor
ss
in
or
fildll
push
popa
inc
sub
testl
stc
dec
test
sbb
fmuls
shl
lret
incb
and
outsl
jecxz
jmp
xor
rcl
aam
ret
ret
cli
divb
xchg
jmp
rcrl
sbb
cld
xor
xorl
rclb
mov
add
add
rclb
sub
ja
mov
rorl
imul
dec
ss
loop
add
inc
sbb
dec
fmuls
out
inc
ja
xlat
xchg
push
lret
xor
int3
dec
mov
or
xchg
xchg
cli
push
bound
int3
jle
test
gs
xchg
cmp
cmpsl
movb
sbb
mov
ffree
adc
test
jns
push
jns
mov
mov
cmp
call
lret
push
sub
add
sub
add
aam
lods
fcomip
inc
or
xchg
js
pop
cmp
inc
jmp
adc
mov
push
arpl
jmp
sbbl
rolb
adc
adc
xchg
xor
fisubs
lret
sbb
jecxz
and
dec
or
in
loope
cmpsb
dec
xchg
out
jno
cmp
push
aas
ljmp
or
cmp
fistpl
push
sub
icebp
xchg
pop
sub
in
je
out
icebp
pop
popa
xchg
push
mov
cmp
sub
sarb
stc
fdivrl
push
fwait
repz
les
nop
sti
imul
dec
cmc
aaa
cmpsl
jb
mov
aad
insl
sahf
jmp
jb
xor
pop
add
movsl
scas
adc
out
inc
adc
mov
dec
into
jp
fdivp
pop
jmp
and
sbb
insl
dec
js
inc
jnp
mov
jle
inc
bound
repz
adc
test
movb
xor
imul
cmpsl
adc
repnz
jge
ficompl
pop
aaa
push
mov
and
xchg
cmpsb
mov
cmp
and
adc
repz
jmp
dec
mov
fmuls
nop
div
xchg
jge
jns
movsl
sbb
pop
out
xor
ffree
or
lret
stos
das
fmuls
nop/reserved
dec
inc
scas
bound
pop
lret
add
movsb
cmc
mov
insb
pusha
push
mov
mov
in
adc
mov
in
movsl
or
clc
sbb
xor
stos
pusha
sub
gs
and
das
sub
add
mov
xchg
pusha
or
mov
mov
mov
shl
sub
inc
push
in
or
lcall
addr16
cld
pop
out
cs
fcmovb
cld
fsubr
pop
jo
outsb
xchg
mov
inc
mov
lcall
mov
ficoms
xchg
jp,pt
repnz
cs
push
mov
arpl
xchg
xchg
push
int
mov
iret
jmp
sbb
mov
int3
aaa
int
movsb
push
inc
push
sub
fs
repnz
xor
cld
stos
jo
push
mov
jbe
test
adc
lret
addr16
sbb
push
jp
rol
inc
cld
clc
mov
mov
clc
lds
scas
pop
xchg
mov
mov
fistl
sub
mov
xor
cli
lret
fisubl
inc
cs
jnp
jp
mov
pop
xchg
add
add
call
imul
mov
mov
or
adc
test
pop
jnp
sti
in
out
sti
and
popa
lret
xor
popa
and
push
mov
push
dec
andb
jo
mov
bnd
test
jg
xor
xlat
xorb
mov
dec
lret
jno
sub
dec
mov
jns
fwait
ds
adc
jl
in
jmp
jb
dec
add
mov
mov
mov
in
mov
mov
lods
clc
mov
leave
clc
add
icebp
ds
inc
sbb
xchg
cmp
adc
lods
rclb
mov
subb
add
adcb
lcall
mov
fcomp
push
stos
add
pop
imul
test
jge
out
pop
and
xchg
inc
jo
lahf
mov
ficomps
pop
adc
mov
or
roll
repnz
sbb
test
and
outsl
or
imul
adc
repz
xor
addr16
adc
add
pop
divl
adc
cmp
fucomi
in
inc
fcoms
add
or
sub
adc
xorl
jb
stos
out
lcall
mov
icebp
mov
xor
sbbb
cmp
dec
std
sbb
repz
je
imul
sbb
notb
out
dec
sub
pop
sbbb
enter
je
mov
leave
arpl
popf
adc
mov
lock
adc
lret
les
shl
ss
xor
lahf
and
add
enter
aad
inc
xor
jmp
ret
shll
sub
mov
and
pop
adcl
mov
fwait
arpl
inc
mov
add
and
mov
js
jne
push
mov
insl
mov
mov
popf
cpuid
imul
out
sub
test
and
lahf
cmpsl
fisubrl
pop
ja
lret
in
pop
sub
dec
mov
aam
mov
lea
repnz
or
ja
int3
movl
mov
cmp
mov
dec
push
cmpsl
xor
je
std
loopne
les
ja
nop
push
add
data16
xlat
cli
cmp
adcl
repz
xor
imul
sbb
mov
fwait
inc
leave
lods
push
je
pusha
push
aad
dec
mov
aam
xor
fnsave
mov
int3
repz
xor
call
into
cs
xchg
xor
pop
jmp
jne
inc
clc
fnstcw
push
hlt
dec
push
lock
xchg
ds
outsl
cmpsb
mov
cmp
xorb
mov
jl
lds
test
popa
movsb
or
pusha
movsb
scas
fisubrl
mov
jae
lcall
mov
test
and
filds
ret
adc
bound
lret
xchg
inc
imul
mov
pop
loopne
imul
lock
call
imul
jns
jno
adc
adc
jno
jne
aad
cmp
std
sarl
dec
adc
in
inc
sub
pushf
sti
aad
push
mov
push
sub
sbb
and
scas
test
xlat
xchg
lds
enter
fs
mov
mov
test
sub
mov
imul
mov
ja
insb
cmp
push
adc
nop
fisttps
js
dec
xchg
loopne
lds
ficoms
jns
add
cmpsl
inc
xor
mov
fwait
push
dec
push
daa
jns
pop
arpl
push
inc
jo
inc
cmp
jae
std
mov
or
or
lods
adc
xor
xor
mov
subl
sbb
mov
aam
adc
adc
into
sbb
adc
lods
xchg
jno
or
mov
leave
inc
jae
lcall
jbe
ficompl
insb
negb
jo
push
insb
call
cmp
push
sbb
mov
lahf
xor
or
jo
fiaddl
mov
adc
mov
in
pop
lods
cmp
mov
cmp
cmp
lret
fwait
sub
sahf
and
dec
icebp
popf
xchg
mov
cmp
sbb
popa
jle
jns
add
repz
lock
pop
xchg
popf
xor
push
nop
xchg
sbb
xchg
mov
inc
push
mov
int3
cmp
scas
jbe
loopne
fistpll
sub
into
or
inc
mov
sub
nop
mov
hlt
shl
mov
push
mov
and
loop
inc
mov
xor
or
fwait
lcallw
xor
int3
rcr
push
sub
jle
xchg
cs
das
addb
movsl
inc
pop
jmp
ljmp
loopne
jae
inc
push
js
dec
enter
dec
and
shlb
pop
pop
mov
inc
pop
jo
insb
popf
loope
sarb
sbb
movsl
inc
dec
pop
inc
dec
jbe
mov
push
enter
jmp
pusha
mov
or
nop
repz
inc
les
add
in
sbb
aas
and
mov
sub
mov
outsl
inc
shll
test
push
xchg
dec
sbb
fwait
hlt
and
push
cmp
sahf
arpl
dec
incl
int3
add
cmp
test
iret
fwait
test
xor
cs
and
mov
or
pop
pop
cmpsl
rep
xor
inc
push
aam
mov
outsb
jl
cld
pop
mov
aaa
fld
out
sahf
rcrb
mov
pop
xchg
in
out
rcrl
fbld
dec
xor
andl
sbb
inc
insl
aaa
cmp
push
lahf
in
cwtl
jns
or
sbb
push
out
mov
jp
pop
lock
xchg
push
cs
mov
dec
in
pop
inc
pop
call
lahf
pop
lret
sub
daa
arpl
add
cmpsl
xchg
jle
je
mov
mov
fcomps
lods
imul
outsb
mov
leave
daa
dec
pop
dec
jl
xor
and
xor
xchg
daa
xor
aam
lock
cmc
sub
into
mov
adc
in
push
mov
std
and
adc
inc
inc
or
push
mov
push
mov
dec
mov
int
mov
jns
sbb
sti
and
sbb
push
movsl
cmp
cli
pop
sbb
pop
cld
jne
mov
les
jmp
mov
popf
mov
push
stos
cs
test
mov
fisttps
jp
mov
pop
lods
gs
sbb
mov
iret
in
and
out
xor
ds
xchg
jns
inc
mov
shrb
out
pushf
dec
mov
aam
jb
xchg
loopne
idivl
cmp
add
shr
mov
push
mov
out
sahf
jp
test
ljmp
cmp
fmull
pop
mov
pop
fadds
and
lahf
test
or
jb
add
mov
clc
cmc
fstl
repz
fnstcw
fidivrl
add
pusha
std
mov
adc
cmp
lods
cltd
add
imul
mov
and
mov
add
fwait
sbb
jnp
dec
loopne
inc
adc
or
xor
call
jmp
push
lods
jb
xor
fs
mov
sahf
je
lcall
pop
sbb
ror
mov
jae
mov
jb
cmp
push
lret
fwait
test
adc
divl
pusha
adc
sub
sbb
xor
mov
lds
xchg
ret
sub
sub
nop
pop
jecxz
js
cli
lea
mov
fldenv
das
outsb
mov
pop
lods
popf
popf
or
cmpsl
mov
mov
scas
dec
int3
stos
and
or
push
jno,pt
mov
loop
dec
test
xor
push
int3
push
or
xchg
movsl
inc
nop
clc
jae
clc
fcomps
lock
xor
ss
stc
mov
popf
ds
jl
jg
pop
mov
movb
in
xor
xorl
js
movsb
insl
cmp
cmp
add
add
sbb
and
pop
inc
rorl
aad
inc
nop
inc
aas
push
jns
dec
push
pop
arpl
sub
mov
pusha
cmp
out
and
aas
fwait
out
xlat
movb
sub
shll
enter
in
or
fcmovnu
jge
xor
scas
loopne
inc
hlt
scas
xor
push
nop
push
mov
enter
and
jne
dec
adc
rorl
mov
xor
dec
push
push
dec
nop
adc
popa
adc
pop
xor
mov
sbb
add
add
mov
imul
enter
xor
sbb
mov
dec
jmp
sbb
out
dec
pushf
inc
sub
sbb
popa
ja
cmp
imul
dec
or
or
cli
dec
push
xor
lock
push
in
cltd
shlb
repz
fs
es
clc
shl
movsl
pop
xorb
pop
rclb
jg
movsl
movsb
insb
data16
xchg
cmp
fistpl
aas
mov
xorb
fdivs
jge
addr16
clc
jb
mov
cld
cli
mov
xchg
cli
jmp
dec
popa
push
jb
mov
mov
mov
xlat
outsb
fsubp
or
inc
add
push
mov
popa
cmp
fwait
movsb
loopne
dec
mov
fadds
xor
scas
push
sti
ficoml
rorl
jnp
sbb
inc
clc
ss
inc
push
fisubs
push
add
inc
sub
cmp
adc
cmp
sti
jmp
xor
mul
dec
das
cmpsl
pop
and
xor
adc
icebp
push
adc
jmp
out
adc
or
sbb
mov
ds
xchg
mov
pop
xchg
divb
jecxz
mov
xor
push
enter
pop
push
mov
and
imul
sbb
out
jle
nop
movsl
mov
aam
pushf
movsl
in
aaa
js
das
sahf
dec
test
adcb
mov
pop
add
int3
jge
mov
inc
push
cmp
jmp
pop
dec
ljmp
cmp
fs
outsb
mov
mov
clc
adc
mov
dec
lds
xor
enter
cmp
fisubs
lahf
adc
or
dec
sub
xchg
push
pop
xlat
push
jne
pushf
dec
hlt
stc
inc
lret
and
xchg
xor
mov
cmpsb
xchg
decb
imul
bound
out
lock
jno
xor
adc
and
mov
xchg
fwait
sub
cld
inc
and
insb
adc
movsl
and
sti
push
mov
and
inc
loop
inc
cmpsb
cltd
inc
cmp
jl
lods
sbb
test
and
mov
mov
hlt
adc
fs
inc
push
into
push
jne
pop
and
inc
jle
gs
mov
jno
das
adc
call
mov
adc
jg
pop
subps
out
jg
and
loopne
sub
mov
ror
sub
xchg
test
jl
into
dec
pop
mov
pop
xchg
jns
loope
lds
push
faddl
dec
jb
mov
adc
iret
stos
jb
sub
cmp
jmp
std
dec
xchg
or
inc
mov
xlat
imul
test
xchg
adc
pop
and
dec
or
push
out
rcll
clc
adc
outsl
popa
sub
sar
add
popa
imul
imul
andl
sub
cwtl
out
mov
sbb
dec
push
mov
mov
jge
jmp
inc
sbbl
xor
call
mov
sahf
add
push
mov
jns
lea
fdivr
shr
push
jno
xchg
pop
and
clc
adc
or
cmp
add
daa
leave
fmull
stos
sub
scas
jae
outsl
sarl
adc
jae
push
int3
xor
push
test
pushl
ja
pop
sub
xchg
gs
xor
in
pop
fdivrs
std
mul
adc
add
cmp
mov
orb
jae
stc
insl
cmp
loopne
fidivrs
push
in
shrb
sub
outsb
dec
push
int
inc
xchg
sbb
cmpsl
insb
sahf
bound
mov
hlt
jle
jp
arpl
lret
repz
std
or
mov
sub
mov
add
push
push
jb
fldcw
mov
mov
nop
fimuls
fucomp
xchg
jb
neg
cld
cmp
pushl
mov
pop
cmp
sub
push
mov
or
pushf
lret
sbb
jge
clc
xor
iret
mov
lock
fisttps
aam
rclb
lock
push
lcall
jne
cmpsl
movsl
mov
jp
mov
pop
sbb
sbb
inc
out
push
outsb
in
xor
xchg
addr16
sbb
lret
mov
sarl
dec
negb
inc
push
sub
cmpsl
sar
sub
ficoml
inc
in
fldenv
divl
imul
mov
js
mov
mov
mov
xor
mov
jge
nop
fstl
stc
push
mov
pop
xor
mov
icebp
cltd
sub
xor
cld
jp
sbb
lock
add
pop
repnz
jp
inc
push
imul
lret
adc
add
loop
scas
pop
adc
and
add
mov
pop
mov
sub
mul
xchg
sahf
loope
jge
jns
cmp
fimull
and
fstpt
xchg
pop
adc
or
xchg
test
xchg
cltd
rorb
fnstsw
cmp
pop
aam
sub
out
cmp
sti
jmp
in
daa
ret
jo
or
nop
mov
jecxz
rolb
jae
or
mov
gs
dec
inc
pop
push
push
sbb
push
int
hlt
xchg
into
pusha
xchg
mov
test
xchg
mov
in
out
sbbb
ret
sbb
test
outsb
pop
ja
cmc
xchg
pusha
inc
pop
xchg
xchg
outsb
and
jno
das
or
inc
daa
rcl
in
xor
cmp
int3
in
fcomi
adc
or
shrb
push
movsb
mov
push
adc
mov
rclb
sub
test
mov
add
dec
ret
cmp
inc
cld
leave
icebp
ret
dec
mov
lret
pop
or
mov
andb
jno
jmp
push
sub
xchg
dec
cmp
ljmp
daa
inc
mov
popa
or
adc
or
or
add
jmp
in
ljmp
sar
pop
jp
sub
lret
not
cmp
dec
js
aaa
xor
sbb
pusha
test
pop
subb
jecxz
jnp
loop
mov
sarl
repz
mov
fxch
cwtl
lods
push
sbb
push
push
repz
loop
cmp
or
fcompl
mov
cmp
iret
dec
or
leave
xchg
cmp
cmp
stc
jle
cmpsb
ds
xchg
inc
cld
lock
inc
sbb
pop
sub
fs
fcoml
push
pop
jo
sbb
or
mov
int3
mov
xchg
xchg
lock
movsl
mov
hlt
mov
mov
mov
add
popa
adc
sbb
push
movb
jb
cwtl
adc
xchg
movsl
add
movsl
pop
inc
xchg
xchg
mov
call
and
cs
push
jbe
mov
push
stc
sbb
vmovd
mov
repz
add
inc
or
mov
in
arpl
popf
stos
jo
out
mov
inc
cltd
adc
add
fnstenv
hlt
mov
js
sbb
mov
mov
xchg
push
and
inc
sbb
ja
insl
dec
push
incb
aas
movsl
repz
lcall
and
cmp
movsb
cli
fs
xchg
adc
js
imul
cltd
and
cwtl
sahf
loopne
jb
in
arpl
repz
jmp
or
sub
aaa
and
dec
repnz
mov
add
stc
test
leave
mov
xchg
mov
xor
mov
rcrb
xor
or
lods
pop
dec
jecxz
adc
jno
pop
xor
jb
add
icebp
addr16
jge
mov
aad
lret
jnp
push
test
xlat
fwait
or
mulps
out
add
xorl
add
inc
pusha
daa
mov
out
nop
sbb
xor
incl
fmul
xchg
push
inc
js,pn
ret
push
stos
mov
inc
aam
xchg
or
jge
fmul
mov
data16
fidivrs
in
ds
pop
sub
lock
push
push
mov
shr
xor
stos
mov
jle
test
pop
fmuls
fisubl
pop
sub
adc
xor
pop
cltd
push
clc
mov
int3
dec
cmpb
pop
xchg
add
pop
loope
sub
lea
jno
xchg
movsl
lods
cltd
add
mov
push
lds
inc
out
jmp
or
mov
pop
jnp
stos
cmpsl
ja
out
fwait
mov
mov
inc
jae
add
data16
gs
jae
std
jg
mov
ss
repnz
mov
xor
inc
leave
scas
in
and
insl
xchg
mov
adc
push
jg
hlt
xchg
mov
mov
icebp
add
stos
subb
mov
dec
cli
sbb
mov
aad
cmovne
and
ror
xor
push
mov
fsubl
in
lea
adc
test
cmpsb
leave
xchg
xchg
or
jl
jbe
sar
mov
int3
adc
jmp
lahf
lods
pop
aam
jno
mov
xchg
sub
inc
rcrb
ja
dec
aam
sub
adc
rorb
and
xchg
icebp
xor
les
inc
aas
enter
bound
jmp
pop
mov
aaa
and
dec
inc
or
mov
sub
arpl
jp
rcl
inc
mov
mov
mov
sbb
xchg
push
or
cmpsl
aas
xchg
mov
sahf
int
cltd
std
sti
es
cmp
cmpsl
pop
idivb
loopne
xor
mov
push
xchg
fs
pop
and
dec
jns
add
sub
xchg
adc
int
das
mov
xchg
insl
adc
or
push
cwtl
out
pop
gs
mov
jmp
gs
ret
into
dec
push
test
rol
inc
pushf
xchg
xlat
ljmp
and
add
and
push
sub
cmp
pop
inc
in
xchg
je
mov
shl
mov
cmp
loope
cvtpi2ps
jbe
sub
fisubrl
ror
inc
xchg
xor
lret
dec
inc
incb
ljmp
movsl
xchg
bound
sub
cmp
movb
es
dec
pop
pop
sbb
inc
and
insb
popa
ret
fistps
jl
jmp
out
imul
shrl
fs
sub
mov
dec
repz
mov
int
xchg
jmp
fmul
scas
or
bound
jnp
sbb
lret
mov
enter
pop
enter
cltd
and
rcr
movsl
test
nop
repz
es
jge
movsl
mov
arpl
fwait
out
inc
insb
inc
cmp
lret
fimuls
or
shlb
add
test
loope
je
pop
add
jp
fstps
or
sbb
or
stos
xor
pop
cmpb
inc
jbe
push
sbbb
in
mov
mov
push
in
jae
xor
mov
xchg
pop
jp
cmp
adc
popf
pop
inc
hlt
dec
jle
jbe
mov
mov
mov
sub
ds
sub
sub
add
in
sub
int3
mov
jo
int3
orl
fadd
movsb
jp
pop
add
adc
outsb
and
testb
out
fstl
pusha
or
repz
xchg
stos
subb
in
cltd
push
fwait
push
bound
lahf
jo
jns
mov
sahf
jle
jne
inc
lret
fistpl
pop
xchg
outsl
mov
in
adc
jl
xor
outsb
ud1
sbb
sti
popa
popf
push
dec
push
xchg
push
imul
dec
call
test
adc
jo
xor
sbbl
xchg
in
dec
loop
adc
xchg
lds
icebp
mov
roll
out
mov
out
add
sub
in
jnp
push
test
arpl
pop
in
test
add
out
fwait
sub
fimuls
popa
int3
dec
in
push
xchg
add
stc
sti
dec
xchg
cld
cs
xchg
mov
sti
lahf
mov
adc
lea
repnz
xchg
test
aaa
xor
mov
lds
imul
jmp
ljmp
sbb
mov
lret
push
icebp
sbb
and
ss
xchg
ret
or
std
push
dec
lods
fs
lcall
enter
dec
mov
xchg
mov
clc
loopne
cmpsl
mov
push
cmp
dec
mov
mov
stos
push
cmp
call
xchg
int3
pop
mov
mov
xchg
dec
cmp
jge
gs
xchg
jmp
push
jecxz
cmp
pop
jge
push
pusha
jmp
mov
push
movsl
cmp
sbb
clc
int
jecxz
mov
push
add
xorl
out
xchg
add
ljmp
push
js
pop
xor
xorb
inc
nop
push
loopne
pop
int
icebp
in
inc
lahf
cmp
imul
mov
mov
loopne
mov
xchg
movsb
inc
dec
mov
jnp
loopne
sbb
insb
rol
stos
push
ljmp
call
rolb
sub
loop
pop
push
ljmp
mov
ja
lret
outsl
cmpsb
xor
pop
subb
xchg
cmp
repnz
js
or
pop
push
push
mov
scas
sub
adc
dec
mov
es
inc
test
andl
out
mov
rorb
add
call
push
mov
or
jbe
loopne
cwtl
mov
push
cs
bnd
or
rorl
in
xchg
adc
lea
dec
push
mov
xchg
js
jbe
inc
aad
in
scas
pop
das
fmulp
rcr
loopne
js
jbe
sbb
inc
adcl
in
sub
dec
pushf
push
gs
out
enter
adc
push
lods
in
and
pushf
lret
cwtl
jb
inc
scas
xor
mov
and
jne
cmp
push
mov
push
in
fldz
adc
outsl
pop
andb
dec
inc
mov
mov
xchg
cwtl
push
scas
adc
icebp
stc
mov
test
fs
jecxz
cmp
lock
pop
mov
std
ss
lahf
insb
ja
xchg
ror
sub
or
inc
push
jge
cld
xor
or
pop
out
cmp
pusha
jge
xor
mov
int3
fildl
ret
jne
aas
inc
mov
lods
es
mov
ffreep
outsb
sbb
mov
pop
adc
leave
jns
into
hlt
pop
out
push
adc
sbb
jbe
mov
sbb
mov
xchg
xor
add
addr16
loopne
or
test
sahf
push
push
cmp
fucomip
mov
fwait
jg
push
xchg
icebp
imul
pop
sahf
xor
pop
jle
sti
add
sbb
pop
mov
daa
sub
cwtl
imul
mov
fnstcw
push
mov
xchg
dec
pushf
push
stos
leave
dec
fsubr
into
ffreep
cmpsl
mov
fisttps
sbb
or
stos
push
push
fsubrs
lret
push
pop
cmp
lahf
sub
adc
pop
lret
rcl
add
sbb
mov
leave
xchg
orb
scas
test
add
cltd
stos
or
mov
sbb
leave
mul
mov
cmpsl
in
mov
shlb
test
pushf
or
mov
jae
xchg
jmp
call
fadd
xchg
lock
lret
jbe
push
mov
mov
lods
jae
push
jle
into
mov
insb
mul
cmp
push
mov
jbe
fwait
pushf
insb
inc
lret
xor
xor
adcb
jmp
movsl
mov
daa
mov
jbe
mov
xchg
es
cld
push
pop
pop
dec
dec
bnd
fiaddl
inc
push
dec
pusha
aad
inc
push
dec
mov
jo
xchg
insl
dec
aas
mov
mov
dec
xchg
cmc
mov
sub
inc
cmp
shll
jle
push
xor
stos
call
shlb
test
jb
xlat
stos
aad
fld
leave
in
pop
xor
cmpl
jno
xchg
js
xor
popa
aas
mov
mov
insb
mov
mov
das
scas
dec
ret
imul
push
sbbb
shrb
fsts
sbb
sbb
dec
jo
mov
mov
adc
xor
mov
mov
mov
cli
or
sub
cmp
xor
and
xchg
dec
ja
lods
shll
lds
clc
mov
int
adcb
js
iret
jnp
or
xor
add
dec
pop
sub
dec
stos
xor
daa
or
in
add
xchg
js
dec
xlat
adc
iret
sbb
sbb
lods
movsb
xchg
cmp
mov
push
fisttpll
inc
pushf
cltd
push
shrb
inc
adc
loopne
pop
fildll
subl
addr16
fistl
andb
popa
xchg
and
push
or
test
insl
cld
ss
sahf
add
ljmp
sti
loop
mov
jo
mov
cmpsl
cmp
test
sti
xor
ror
jg
xor
bound
add
adc
xchg
push
into
pushf
lods
xchg
dec
sub
ud1
ja
fsubs
outsl
lods
fdivr
cmp
pop
add
les
popa
add
outsl
js
rcrb
xchg
out
pusha
pop
das
add
xor
pushf
ljmp
jmp
test
ja
cmp
cmp
movb
mov
pushf
dec
mov
xlat
rcl
inc
lahf
push
cmp
xor
negb
lret
pushl
aas
xor
shll
sbb
int
cmp
in
imulb
add
leave
call
or
lods
mov
push
out
in
sub
loop
pop
imul
pop
cmp
and
mov
jne
mov
inc
xlat
mov
dec
xor
dec
mov
sub
dec
jno
or
jae
pop
popf
imul
jle
mov
cmc
cmp
test
add
add
in
pusha
js
in
bound
lret
sbb
and
inc
cmp
out
aaa
jmp
adc
cwtl
mov
idiv
xor
es
mov
jmp
jae
mov
or
cwtl
clc
popf
jns
xchg
mov
mov
mov
call
shll
jae
sub
shll
xchg
jns
inc
adc
add
subl
jbe
mov
shrl
push
lock
fmulp
repnz
lods
daa
dec
mov
popf
popf
push
test
repz
adc
das
arpl
jg
pop
xor
mov
pop
lret
test
mov
outsb
in
arpl
loope
add
icebp
push
call
shr
inc
inc
lret
cmp
mov
xchg
xchg
lret
pop
pop
shrb
shl
sub
clc
negb
or
add
fisttps
push
and
add
jo
cli
shlb
sbb
rol
push
cmpsl
mov
shll
push
inc
ja
push
xchg
pop
mov
es
cmovs
notl
add
push
out
lahf
test
and
cmp
and
push
cli
outsb
adc
outsb
cld
mov
jmp
adc
inc
out
mov
in
ret
push
jmp
fisttpll
or
aad
lret
insb
icebp
inc
mov
mov
clc
jb
fs
mov
lock
adc
pop
aam
mov
push
fimuls
pop
adcl
scas
sbbb
cmpsb
and
lods
pop
inc
pop
or
or
outsb
mov
popf
pop
out
inc
test
mov
sbb
les
cmp
movsb
sarb
pop
jne
adc
mov
inc
loopne
add
outsb
and
dec
jno
rcr
mov
negb
lcall
cmp
bound
es
int
mov
movsb
xor
rcll
xor
sbb
ss
ljmp
mov
mov
add
into
jle
inc
add
and
int
movsb
sub
into
xchg
mov
outsb
mov
rcrb
and
xor
xor
negl
jnp
in
sub
mov
push
cmp
pushf
les
cli
dec
cld
xchg
ret
out
pop
or
sub
je
xor
dec
shll
adcl
test
sbb
into
add
mov
rclb
rclb
pop
mov
test
cmp
aad
ficoml
in
mov
jle
inc
aam
mov
hlt
xor
mov
cmp
imul
pushf
inc
pop
or
sbb
ret
es
mov
jno
jo
in
mov
mov
add
and
pop
out
or
sub
clc
mov
sub
jle
jmp
mov
jmp
imul
int3
loopne
pop
inc
sbb
fwait
dec
xchg
lahf
or
test
movsb
push
xor
lcall
xchg
ret
push
cmp
dec
xor
stos
mov
xchg
xor
mov
icebp
ret
inc
mov
jo
push
dec
cmp
pop
imull
out
and
mov
mov
jmp
negb
in
mov
imulb
out
wrmsr
cmp
pop
pop
test
add
popf
or
outsb
mov
rcll
stc
sub
push
cmovg
jae
lods
jle
popf
jb
jle
pop
jno
subl
sub
fdivs
lods
add
cmc
ja
popf
lods
jne
jl
fcomip
loopne
push
push
xor
or
mov
jbe
and
fscale
jne
enter
jns
pop
xchg
sub
sahf
lods
sbb
int
dec
nopl
cltd
orl
idivb
jbe
lods
scas
scas
lods
cmp
rcl
movb
adc
fnsave
fsub
push
push
insl
adc
loope
adc
pop
pop
mov
shrb
int3
mov
ss
popa
and
jae
sub
inc
imul
call
mov
addr16
pop
in
sbb
bound
jge
mov
mov
xor
push
test
jae
mov
inc
push
shrb
xlat
lret
xor
mov
sbb
movsl
jne
inc
icebp
les
push
movsb
enter
push
xchg
adc
lret
in
repz
lret
cs
add
mov
cltd
sbb
out
add
jp
int3
sbb
or
loopne
mov
mov
in
push
shrb
hlt
mov
add
out
sub
dec
in
and
mov
loope
xor
add
pop
in
xorb
push
lods
jmp
sbb
mov
inc
cmpsb
pop
xchg
add
and
cmp
test
pop
sbb
gs
std
sub
push
xorb
insl
cwtl
mov
jg
insb
jne
clc
dec
sti
mov
std
lds
js
ja
push
adc
push
ss
jecxz
in
cmp
in
out
pop
enter
xor
ret
cmpsl
sbb
cmpsb
fbld
rcr
cld
xchg
lds
das
imul
lahf
mov
loope
cmp
cmp
push
pop
jbe
lds
and
adc
or
scas
mov
fidivl
xchg
std
cmp
fisttpll
pop
and
jne
xchg
inc
jl
jl
sbb
les
iret
push
dec
test
lcallw
pop
lahf
cmpsl
mov
pop
ja
cmpsl
xchg
loop
or
inc
sub
add
jnp
xor
pop
imul
stc
sub
sub
or
fcoml
inc
test
cld
iret
ret
inc
cmp
int
imul
or
testb
faddl
es
or
decl
jge
xchg
lea
lahf
test
subl
cmp
mov
mov
fcoms
dec
repnz
cs
xchg
sbb
nop
push
outsb
shrl
movsb
loope
mov
lods
aaa
cmp
mov
dec
test
movaps
adc
shl
pop
flds
mov
sub
call
bnd
push
inc
add
mov
iret
inc
mov
sub
scas
or
mov
mov
cmpsl
ljmp
mov
adc
mov
std
enter
cwtl
sub
or
or
cmp
test
push
ret
jo
pop
mov
xor
shll
bound
testl
mov
mov
out
scas
inc
cmpl
jmp
or
leave
popa
adc
ret
pop
leave
icebp
dec
push
pop
sub
leave
sbb
rclb
pop
add
add
addr16
mov
ja
and
pop
fstps
std
add
aas
xor
xchg
pop
adc
cld
mov
xor
sub
shr
jbe
lock
jmp
mov
sub
jge
fidivrl
je
inc
sti
js
jns
push
shl
cli
jnp
aad
stos
ja
mov
shlb
xor
sbbl
je
or
movsb
addr16
cli
mov
lods
xor
aaa
mov
xchg
outsl
jne
aam
scas
sub
int
dec
clc
iret
jns
stc
inc
inc
stos
xlat
push
jb
ret
popf
push
inc
pop
aaa
cwtl
mov
shll
pop
jb
loop
rorl
adc
add
enter
insb
mov
xchg
scas
fmul
rol
push
orl
pop
and
inc
hlt
adc
xchg
push
lahf
cmpsl
sub
cmpsl
mov
into
sub
sbb
push
inc
jp
mov
xor
xchg
push
lea
movsl
aas
mov
jle
filds
test
mov
sub
mov
jnp
mov
cmp
xor
mov
xor
je
xchg
dec
inc
std
mov
ljmp
fs
mov
sbb
mov
adc
loopne
arpl
imul
cmp
jle
sbb
inc
std
sbb
cmpsl
repnz
mov
les
sbb
and
and
mov
ss
cmp
shlb
daa
xchg
pop
add
push
mov
out
xor
and
sub
and
in
inc
mov
iret
or
insl
je
popa
jb
in
adc
adc
pop
mov
xchg
cmp
je
cld
insl
popf
jae
pop
push
test
js
inc
shll
sbb
xor
aam
lea
push
mov
scas
scas
mov
jg
pop
inc
andb
daa
fiaddl
xchg
fcompl
push
out
ret
jmp
pop
inc
popa
xchg
imul
fstpt
fcompl
or
rcl
inc
sahf
loope
out
aaa
cmp
out
xchg
push
out
mov
mov
and
imul
jo
stos
fbld
dec
sbb
dec
xchg
test
in
and
lcall
sub
lock
push
jno
mov
aad
test
in
push
cmpsl
sti
add
out
stc
sub
adc
mov
jge
repnz
mov
pushf
ja
mov
in
add
sbb
pop
cmp
jecxz
out
push
pop
mov
push
gs
loope
int
push
or
int3
cmp
mov
cmp
lds
es
clc
fadds
xchg
cmc
or
push
adc
subl
sub
inc
fdivl
out
mov
or
sbb
repz
imul
mov
pop
ret
icebp
add
sahf
movsb
cld
inc
jge
repz
fnstcw
sarb
mov
inc
mov
jns
push
sbb
push
mov
mov
and
and
icebp
loop
daa
cli
sub
push
jno
icebp
xchg
mov
xor
xchg
jbe
out
es
sub
cmp
lret
pop
insl
frstor
scas
fistpl
clc
push
jnp
std
push
je
in
ficoml
rorb
jbe
lods
sub
gs
jecxz
mov
pop
and
pop
add
lds
dec
mov
fs
xchg
cld
fidivl
jbe
fcompl
adc
push
push
std
jge
mov
xchg
push
iret
dec
adc
xlat
sub
jb
and
add
pushl
mov
mov
and
sub
adc
push
xchg
mov
into
push
ss
popa
lahf
sbb
mov
jo
in
and
loope
mov
sub
ds
dec
or
icebp
in
jle
mov
xor
adc
insb
sub
cwtl
cmpsl
mov
sbb
push
or
lea
in
pop
mov
inc
imul
nop
fldl
das
lcall
mov
xlat
mov
mov
or
mov
xor
mov
cmp
jae
xor
aad
xchg
sbb
fsubrl
mov
xchg
xor
xchg
dec
loope
pop
rclb
enter
mov
test
lahf
push
inc
mov
inc
xor
scas
data16
or
std
ljmp
hlt
push
jnp
movl
xchg
data16
mov
add
jg
dec
push
stc
mov
jns
es
sub
jae
dec
loop
out
ja
push
into
mov
hlt
sub
push
push
test
stos
int3
scas
repnz
mov
sub
cmc
mov
js
or
mov
xlat
or
dec
repz
sub
pop
lcall
cmp
aad
add
mov
lahf
inc
jnp
or
inc
sub
jb
fildll
rcr
dec
mov
mov
repz
out
cltd
xor
jge
je
jns
int3
imul
add
stos
cmp
lahf
xlat
aad
je
out
ljmp
sbb
jbe
xor
jno
push
mov
paddb
or
cli
mov
subb
jns
xchg
jnp
and
jp
ret
pushf
mov
push
sbb
and
fs
push
incl
aaa
bound
dec
jg
lret
push
pop
test
in
movsl
scas
pushf
sarl
cmpsl
imul
addr16
inc
push
bound
cli
out
test
jge
lds
icebp
push
inc
push
sub
cltd
movsl
adc
movsb
imul
mov
jbe
push
insb
lods
gs
scas
jecxz
xchg
add
fcomps
int
outsl
insl
mov
jb
xor
out
and
inc
fildl
fdiv
jns
cmpl
dec
add
addb
out
mov
or
lds
enter
ret
adc
jecxz
es
or
mov
pop
adc
call
in
les
jg
xchg
and
add
adc
lret
jge
outsl
and
xor
clc
ret
rcr
cmp
push
insb
mov
xchg
push
std
jbe
adc
mov
lods
mov
ds
daa
inc
clc
int
orb
shlb
cmpsb
mov
inc
dec
int3
ja
xchg
in
nop
jmp
inc
sbb
movsl
sub
cli
adc
jne
xchg
jae
and
out
mov
aad
cmp
sbb
inc
add
lret
push
daa
mov
bound
cmp
pop
jne
scas
jb
sub
cmp
push
sbb
jne
stc
repnz
xchg
inc
int3
mov
add
enter
sbb
in
bound
mov
inc
jbe
sbb
imul
in
and
jle
iret
imul
scas
jge
jecxz
and
add
xchg
sub
out
insb
ret
das
inc
or
in
shlb
xor
outsb
xor
insb
jmp
xor
add
cmp
adc
movsl
and
rcll
sahf
shrl
adc
jl
or
andl
dec
adc
ja
jp
outsb
faddl
das
ja
bound
and
jnp
popf
ljmp
gs
cmp
sahf
bound
sti
aad
ja
scas
mov
or
jmp
xchg
cmp
test
cmp
pop
and
out
cs
movsl
loope
out
and
xchg
aam
cmp
cli
test
xchg
fists
jno
mov
jno
jbe
div
pushf
add
inc
fcmove
sbb
mov
sub
stos
pushf
sbb
ret
mov
lock
pop
cmp
jmp
dec
cmp
adc
mull
adc
mov
mov
sub
nop
fistpl
pop
pop
xchg
inc
leave
out
cmpsl
adc
lcall
repnz
mov
mov
push
or
ss
push
dec
mov
mov
bnd
loopne
xchg
adc
cmpsb
sub
inc
fsubl
xchg
ror
or
push
push
xor
xchg
out
xchg
movsl
or
dec
xor
and
or
call
cmpb
sub
pop
out
mov
pusha
lods
imul
xor
lcall
inc
sub
loop
scas
loopne
cli
sub
bnd
dec
fdivp
xorl
mov
jae
stos
sbb
and
std
fdivl
mov
jbe
mov
fwait
xor
lods
xor
aas
sbb
mov
jo
mov
mov
sub
jl
sbb
cmp
test
cmpsb
mov
aaa
icebp
xlat
pop
jle
in
xchg
cmp
icebp
fwait
test
addr16
repz
push
inc
jb
lods
cld
jne
mov
sub
push
outsl
mov
das
out
cli
cmp
cmp
movsb
mull
push
mov
mov
fisubrs
call
fsub
add
fmul
mov
adc
lret
mov
sti
pop
rorb
jecxz
cld
fnstsw
sahf
cwtl
or
ss
jo
fbld
test
xchg
mov
loopne
lahf
cmc
mov
xor
cwtl
adc
imul
hlt
inc
repnz
dec
mov
pop
ds
jb
cltd
out
push
jns
in
out
mov
gs
or
subl
std
adc
lods
fnstsw
cmp
jecxz
in
sub
rcrb
xchg
fs
cs
dec
scas
or
out
xchg
ficoms
or
xor
cmpsb
clc
and
test
pushf
mov
mov
int3
adc
test
jne
cli
sub
cld
js
dec
in
cmp
addr16
push
jb
xchg
js
pop
frstor
pushf
adc
cmp
xor
push
cmp
lret
mov
clc
movsl
inc
sarl
add
das
mov
jl
insl
cld
imul
sbb
mov
xor
push
fidivs
cmp
out
lcall
insb
or
fwait
stos
leave
cmp
jae
cmp
pop
mov
push
stos
cmp
dec
mov
mov
movsl
lahf
scas
cmp
outsl
push
fldl
out
xor
gs
xchg
scas
sub
sub
lods
mov
mov
je
aaa
cmc
xchg
push
inc
stos
cs
dec
cmpsb
test
fadds
fwait
stc
jb
cmc
hlt
inc
test
and
and
dec
call
push
jecxz
jb
or
xor
sbb
inc
lods
lods
jae
inc
rcrb
lods
xorl
fcomps
rcr
sub
fsubl
fucomp
sbb
mov
add
aas
jno
xchg
lods
inc
add
push
out
popa
mov
sbb
mov
lods
outsb
scas
mov
daa
jp
lds
dec
xchg
imul
xchg
xchg
call
push
dec
cld
popf
mov
mov
pop
push
inc
push
cld
cmpsb
push
sbb
add
or
jns
insl
mov
leave
scas
fildll
out
sbb
call
dec
arpl
imul
fdivrl
leave
push
push
outsb
rol
fdivrl
addr16
adc
fdivl
les
cmp
fucomip
push
inc
inc
mov
fldt
push
xchg
xchg
or
filds
test
mov
icebp
mov
add
push
push
cmpsl
psrld
cmp
std
js
aad
mov
in
stos
push
inc
mov
pop
push
push
xor
mov
loopne
xor
shl
test
and
mov
mov
pop
stos
leave
adc
mov
fldl
cmc
sub
push
or
or
pop
inc
fdiv
and
sarb
ret
fadd
jecxz
out
pop
cmp
loop
jae
dec
sub
loopne
int
rcrl
inc
mov
repz
les
jmp
int
repz
mov
out
xor
rolb
pop
sub
es
imull
dec
std
mov
repz
xchg
inc
xchg
mov
int
sub
mov
repz
les
jo
pop
push
mov
xor
push
lods
das
fistl
je
leave
push
lret
or
sub
gs
aas
ss
iret
cmp
imul
in
scas
sub
sub
pop
pop
mov
sar
cli
cmp
or
enter
sub
xor
rolb
push
push
push
pop
loop
int
cltd
xchg
jl
adc
push
adc
pop
outsl
repz
into
jns
and
divb
stos
stc
pusha
xchg
test
dec
pop
mov
xchg
movsl
mov
cmpsl
jne
adc
push
mov
call
les
arpl
dec
inc
dec
jae
xchg
xorl
add
sbb
push
adc
dec
int
jae
push
jbe
in
push
jmp
mov
arpl
dec
cwtl
outsl
xchg
fdivrs
mov
repz
sbbb
jecxz
fwait
js
lcall
xchg
es
sub
pop
sbb
cmp
or
add
mov
inc
enter
lret
hlt
sti
popf
adc
xchg
shll
fldt
inc
cmc
flds
push
in
adc
pop
rcrb
jns
mov
in
lds
jg
bound
jb
pop
ljmp
cld
mov
xchg
and
pop
movl
push
std
cpuid
jno
pop
xor
mov
xchg
ja
cld
psllq
outsb
mov
mov
popf
sub
std
cmp
lcall
aam
imul
call
xchg
popf
dec
gs
das
mov
and
pop
faddl
imul
ret
int3
xchg
mov
mov
add
cmp
push
scas
xchg
cmc
sub
or
cmpsl
pushl
mov
leave
dec
jl
jb
push
xchg
pop
out
push
pusha
sub
sub
sbb
icebp
sub
je
in
pop
and
imul
push
mov
mov
sbb
mov
inc
jnp
fstpl
inc
xchg
mov
add
push
lea
aaa
pop
jg
enter
fldl
cmp
popf
movsl
xchg
into
int3
or
jp
and
ret
andb
test
cmp
xor
aad
stos
fisubrl
adc
sbb
out
sub
cmp
pop
out
dec
or
adc
movups
add
push
ljmp
add
xor
mov
mov
movsb
sbbb
pop
cmp
jb
dec
shrl
fs
repnz
jno
jg
inc
lahf
cmc
jp
pushf
lods
inc
push
ss
popf
adc
pop
cli
and
xchg
xchg
aam
jecxz
insl
cwtl
mov
push
in
hlt
insl
rep
jmp
negb
or
cltd
jp
pop
daa
mov
inc
jmp
pop
insb
or
mov
sbb
cmp
push
jo
pop
mov
jns
mov
and
inc
fiaddl
jmp
loope
lds
inc
loope
cld
adc
mov
fs
outsb
pop
xchg
cmp
sub
xor
dec
adc
or
push
mov
hlt
or
add
sbbb
aas
data16
mov
jae
mov
sbb
push
arpl
scas
and
mov
add
ret
and
sbb
jmp
sbb
add
or
and
pop
adc
add
lcall
push
mov
xchg
repnz
jns
mov
xchg
push
jl
js
lcall
lea
add
in
dec
cmp
ds
mov
ljmp
lock
xchg
xor
adc
fcmovbe
out
decl
lods
inc
adc
in
cmp
adc
and
dec
mov
ljmp
adc
fs
repz
push
xchg
insb
sbb
imul
call
inc
div
cmp
jne
sahf
or
pop
daa
fwait
jb
shr
cmpsl
cmpsl
shlb
sub
push
mov
jmp
fcmovu
lea
pop
sti
jno
xor
or
add
cmpsb
add
jl
add
pushf
mov
iret
scas
fs
jno
jg
negl
inc
mov
leave
sarl
aaa
add
mov
push
sahf
ret
test
push
mov
xor
push
push
lods
jle
ds
lock
rclb
mov
int3
movlps
dec
lea
in
adc
pushf
pop
fcmovb
jl
out
jmpw
popf
out
pop
sbb
scas
adc
push
add
push
xchg
pop
mov
pop
inc
mov
scas
adc
enter
pop
aaa
roll
or
test
add
imul
inc
push
push
ret
xorl
shlb
addr16
and
repz
stos
adc
mov
das
sbb
xchg
std
inc
iret
insb
and
cs
pop
js
cltd
fldcw
fimuls
add
rolb
das
enter
pop
xchg
or
and
jle
andb
orb
sub
stos
aad
xchg
popa
or
es
imul
mov
push
add
mov
lret
ror
mov
dec
sbb
pop
jmp
and
mov
sbb
subb
sbb
cltd
fisubrs
gs
dec
shll
ja
pop
fwait
sar
out
cwtl
jno
mov
and
mov
xchg
add
jne
rorb
inc
lods
jo
popa
fcom
push
mov
pop
mov
shll
rcrl
sub
fldt
mov
hlt
xor
aas
xchg
daa
lock
or
mov
jl
sub
push
movsl
mov
cmp
push
pop
and
nop
cs
jns
lods
shrb
inc
lods
pop
dec
fistps
jmp
dec
inc
cmpsl
adc
repz
add
fs
inc
in
jl
fstl
divl
sub
movsl
dec
and
mov
outsb
sbb
sbb
icebp
xchg
mov
push
or
test
addr16
outsb
and
das
inc
sbb
mov
xor
or
cmpsb
out
sub
loop
dec
pop
hlt
cmc
push
lretw
pop
cld
stc
jle
scas
loope
cmpl
push
aad
push
or
popf
adc
outsl
mov
testl
sbb
out
or
inc
outsl
push
mov
arpl
enter
inc
inc
popl
mov
mov
int3
sbb
adc
cmp
fistpll
push
fidivs
xor
add
mov
mov
aad
mov
ret
sub
cli
dec
xchg
out
arpl
rcll
ficompl
mov
mov
sbb
and
in
push
rclb
sub
or
dec
cmpsb
sahf
dec
mov
add
xchg
shl
cmp
xor
cmp
xchg
mov
rcl
and
out
fistl
loopne
jns
push
js
ret
clc
and
in
stc
lea
push
fldenv
mov
out
xor
in
push
xor
xchg
int
and
mov
scas
adc
xor
cmpb
scas
lret
xor
mov
push
push
mov
lds
sub
push
dec
or
sbb
shl
sar
mov
push
adc
jae
xchg
cwtl
arpl
fadds
pop
je
lret
dec
sbb
mov
sbb
ret
jne
and
cld
or
in
jg
cmp
pop
or
das
ds
ret
push
xchg
and
dec
andb
sbb
int3
mov
call
faddl
dec
mov
inc
notb
adc
cmp
and
add
pop
ror
shlb
push
test
popa
add
xchg
mov
les
and
test
jg
std
push
mov
fistl
mov
inc
sar
push
das
mov
inc
ret
mov
sarb
sbb
inc
out
je
outsl
or
push
mov
cs
sub
ret
nop
mov
sub
jne
mov
shrl
adc
repz
dec
mov
mov
mov
out
jle
fsubrl
adc
mov
sbb
mov
push
cs
mov
cmp
mov
mov
dec
xor
and
sbb
cmpsl
mov
cmp
arpl
es
pop
scas
cmpb
cmp
xchg
mov
lcall
jb
xchg
fabs
push
pop
out
fists
push
push
stos
dec
xchg
cmp
aad
and
bound
and
int
and
loop
push
mov
fs
cmp
enter
outsb
lret
sti
jmp
fcomi
iret
sub
push
out
xchg
lea
xor
xorl
sbb
pop
ss
loop
inc
bound
adc
outsl
stos
in
push
in
sahf
clc
xor
pop
mov
inc
push
sbb
push
xchg
push
or
cmpsb
hlt
add
and
push
shlb
mov
adc
es
cmpsl
add
jle
xchg
inc
psubsw
add
ljmp
xchg
mov
xchg
cli
sbb
popa
movsb
push
aas
popa
cmp
cs
fcoms
sbb
jns
mov
shll
jg
mov
xchg
cmpsb
mov
pop
ljmp
sbb
pusha
orl
xor
sti
pop
push
iret
out
sub
sub
cld
in
sbb
mov
pushf
daa
stos
mov
or
dec
inc
outsl
xchg
loope
mov
xor
mov
or
push
rolb
inc
xchg
fwait
dec
in
loope
adc
lds
dec
inc
bound
in
adc
fdivrs
aas
or
mov
fdivl
leave
pop
jne
mov
into
jae
pushf
int
xor
fmull
mov
jbe
and
xchg
add
jno
rol
or
mov
inc
inc
add
xor
jae
xor
jecxz
stos
aad
mov
popa
cltd
insl
lea
mov
sti
inc
sarb
sub
sub
aas
and
test
out
rorb
aas
mov
stos
xor
xor
or
les
nop
push
push
leave
packuswb
out
adc
jmp
push
cwtl
push
xchg
aam
jp
xchg
jmp
insb
aad
adc
inc
mov
pop
repnz
push
rclb
or
jns
sti
xorb
and
lahf
mov
xchg
sbb
ds
addr16
mov
mov
jnp
leave
adc
jg
out
aad
fs
cld
adcb
add
xchg
dec
imull
sub
adc
fildl
pop
adc
or
loope
movsb
cmpsl
sub
fisttpll
dec
adc
and
ffree
xor
jns
out
mov
mov
xor
add
pop
fcmovnu
in
out
loop
sub
sub
lock
out
sbb
xor
fs
repnz
sahf
pop
inc
ret
int3
popa
call
les
mov
mov
inc
inc
adc
aam
sahf
sti
jo
or
mov
mov
sbb
out
das
shl
mov
cltd
mov
stc
fcoms
mov
aam
add
sbb
sbb
js
dec
xor
add
andb
cmpsb
push
iret
mov
sbb
gs
push
pusha
incl
lret
fwait
ret
jns
cmpsl
and
xor
outsl
shrl
xchg
aam
gs
sub
or
push
ret
inc
lods
jp
inc
loopne
dec
push
dec
ds
fildll
cmpxchg
les
outsb
jo
negb
pop
push
cmpb
test
jp
testl
clc
lods
adc
push
sbb
inc
mov
psubq
movsb
mov
fwait
mov
mov
mov
mov
add
mov
scas
sbb
and
out
inc
popf
loopne
sar
in
push
cmp
sub
mov
fidivrs
insb
or
lock
dec
iret
adc
mov
rorb
pop
dec
mov
arpl
lret
pop
in
loope
jnp
cli
fs
loopne
pop
sbb
mov
dec
ljmp
jp
mov
mov
fbld
test
adc
xchg
fstl
ss
cli
xchg
out
mov
cmp
scas
xor
xor
cltd
xor
jp
loope
enter
nop
je
ja
cmp
lahf
pop
fcomps
push
dec
fidivl
cli
lds
mov
pop
out
push
push
pusha
in
arpl
fidivrs
xor
stc
jnp
xchg
mov
jne
hlt
mov
or
or
adc
pushf
test
mov
rol
push
sbbb
pop
inc
fldt
jge
push
scas
adc
mov
xlat
scas
stos
fsubrl
rcrb
mov
mov
stos
and
fwait
dec
aaa
lock
cmpsb
jmp
negb
pop
int3
insb
dec
mov
inc
pop
scas
mov
and
subl
jno
xchg
in
icebp
sub
cmp
jl
out
js
imul
imul
mov
outsb
push
sub
xor
add
xor
jp
cmpb
or
subb
fwait
lds
jl
or
ret
cmpsb
lods
jne
xchg
mov
addr16
shr
inc
sbb
sub
pop
cmp
fnstenvs
or
outsl
xor
shr
xor
outsl
xchg
add
mov
int3
add
xchg
mov
sbb
sub
fs
jo
decl
shlb
in
inc
pop
pushf
scas
and
vmovsd
adcb
inc
xlat
iret
dec
stc
adc
lods
sub
xlat
aam
mov
mov
fwait
jns
cmpsl
jl
idivb
js
inc
sub
xchg
out
dec
mov
mov
pop
test
fs
jo
mov
rcrb
out
popf
or
imulb
mov
sahf
loop
pop
in
cmp
cmp
jle
xchg
rcrb
mov
ljmp
push
or
rcrl
repz
loope
mov
ljmp
inc
aas
dec
adc
pop
jle
pop
repz
scas
dec
dec
sbb
ret
mov
jno
jno
clc
sbb
mov
aad
nop
push
arpl
sbb
add
and
cwtl
js
pop
pop
and
push
mov
fsubp
lahf
sbb
mov
push
xor
dec
inc
xor
and
adc
adc
cmpsl
mov
in
and
dec
fwait
orb
call
jnp
ds
xor
xor
std
outsl
mov
xor
push
or
sbb
inc
dec
mov
adc
les
fbld
adc
testl
frstor
mov
and
dec
addr16
pop
sar
rcrl
pop
movsb
in
stc
jbe
xor
addr16
cmp
push
pop
pushf
or
jbe
pop
popa
mov
cmpsl
mov
jle
lods
int
and
dec
decl
cmc
mov
adc
in
pop
pop
mov
fisttps
lcall
cmpsl
xchg
lret
pushf
cltd
fidivrl
mov
shl
aaa
pop
scas
lock
and
enter
out
mov
sbb
pop
les
lods
pop
add
das
mov
loop
push
and
dec
mov
out
jge
lods
jmp
cmp
push
xor
inc
test
adc
mov
loop
xor
fcmovnbe
pop
push
add
fnstenv
aas
test
clc
es
frstor
mov
add
test
push
xor
lret
push
jecxz
fwait
lods
jnp
xor
call
mov
dec
or
xchg
daa
movsb
pop
mov
add
push
lea
bound
jno
adc
push
lds
arpl
sub
outsl
inc
aad
mov
dec
mov
mov
mov
inc
mov
popf
add
stos
imul
add
mov
mov
in
loope
loop
cmc
fsubrs
negb
mov
lret
cld
scas
mov
lods
mov
cwtl
lods
je
push
stc
cmp
stos
mov
xchg
inc
push
jg
sub
inc
cmpsb
test
lds
arpl
lret
jo
mov
cs
and
mov
loop
adc
mov
aam
mov
xchg
arpl
mov
cmp
jno
into
pop
orb
dec
cmpsl
add
mov
jp
xchg
add
push
mov
dec
inc
sub
mov
cmp
lret
test
sahf
dec
aaa
ljmp
pop
mov
outsl
jl
push
mov
out
fldenv
push
sbb
inc
mov
jo
and
std
data16
pop
xchg
fwait
jnp
mov
sub
fstl
or
leave
mov
stos
jp
int3
mov
aaa
dec
cmp
pop
xchg
dec
loop
popf
lcall
subb
outsb
insl
lods
insb
gs
shlb
sub
or
mov
and
adc
aas
ljmp
add
into
rol
fbstp
stc
pop
nop
lcall
sub
xchg
int3
jae
vmread
imul
dec
bswap
sbb
cs
ss
adc
rcr
stos
test
movsb
sbb
insl
idiv
jo
xlat
mov
imul
test
mov
in
pusha
xchg
cmp
fstp
call
movsb
sub
scas
movsl
pop
jb
loop
jnp
add
add
pushf
nop
dec
or
inc
inc
push
fstpt
jb
and
jle
das
mov
aam
mov
mov
cwtl
dec
cld
repnz
popf
cmp
je
add
sub
sbb
daa
jge
lret
repz
and
insb
adc
lahf
dec
push
stos
jp
rcl
into
pop
stc
jno
mov
mov
jne
mov
jmp
je
add
adc
arpl
int3
mov
outsl
aas
arpl
clc
pop
jns
dec
ret
call
aas
push
adcb
push
popf
lret
adc
loop
add
inc
dec
push
pop
shr
jp
mov
lret
scas
ljmp
xor
fdivr
jne
imul
mov
imul
jge
lods
inc
shrl
jecxz
mov
push
je
add
jl
fldt
addr16
xor
xor
std
jmp
mov
pop
std
pop
dec
cmp
and
fs
in
jg
pop
test
mov
push
imul
xor
pop
call
je
jne
jb
jbe
sti
push
leave
sti
mov
js
lds
shlb
lret
inc
cmpl
jmp
popf
inc
mov
mov
mov
sti
or
inc
idivb
cs
xchg
cmp
stc
inc
add
fistpl
mov
call
pop
push
jg
sub
aad
xchg
jae
xor
cltd
cmp
mov
popw
inc
xchg
pop
jecxz
mov
xor
sbb
fistl
xchg
push
mov
nop
aad
mov
rcll
js
scas
inc
ds
dec
xorl
scas
sar
test
mov
mov
sbb
clc
ss
mov
aam
mov
cmp
cmpsb
call
mov
or
xlat
cwtl
mov
add
mov
popa
inc
push
mov
ret
subl
jno
lcall
xor
hlt
iret
sub
adc
push
and
test
outsb
mov
and
jbe
in
fmul
out
pop
insb
xchg
es
jbe
cmp
xor
xchg
dec
sub
lock
adc
inc
xchg
jl
popa
sbb
in
xchg
sbb
out
mov
call
add
jmp
subl
sti
in
lcall
out
dec
pushf
xchg
xor
out
fst
test
xor
pop
xchg
dec
loopne
pop
dec
mov
das
stos
cmpsb
loopne
cmc
mov
pop
mov
xchg
inc
mov
cmpsl
xchg
add
imul
push
adc
mov
mov
jnp
adc
push
pop
pusha
push
shrl
popa
aas
sub
xchg
inc
pop
insl
add
adc
cmp
hlt
rcr
fsubs
sbb
repz
nop
pop
loop
sbb
jle
pop
mov
ficompl
jae
cmp
stos
or
lods
lahf
jmp
and
adc
inc
aaa
pop
ror
and
sti
int
sub
clc
fnsave
sub
addr16
test
rorl
adcb
or
sub
cs
out
cli
aam
push
test
adc
push
dec
mov
jmp
pop
adc
cmp
jbe
insl
sahf
push
jno
test
hlt
rcr
popf
mov
xchg
aas
pop
jne
mov
sbb
jmp
ret
loope
push
or
shld
sub
or
pop
bound
out
jb
je
call
xor
movb
sub
sub
and
adc
in
clc
mov
negl
cmp
call
add
add
movsl
out
cmp
and
jg
sub
xchg
mov
pop
pop
in
inc
lock
js
push
cltd
sub
shr
xchg
push
xor
adc
shlb
sbb
cs
push
mov
stos
sti
mov
sahf
and
jbe
in
and
push
mov
in
jo
movsl
fs
fnsave
das
pop
mov
rcll
js
sbb
sub
or
mov
add
icebp
sub
cmp
fwait
lock
ja
iret
fmuls
mov
cld
add
shlb
push
push
scas
inc
sti
lods
pop
pusha
add
and
push
test
fsubr
subl
ss
inc
jmp
add
add
fisttpl
shl
xlat
adc
scas
dec
dec
fdiv
scas
aaa
inc
mov
xchg
cltd
inc
cltd
dec
xchg
pop
sub
and
shlb
xor
into
jl
add
sub
fcomp
sti
cmp
sahf
mov
adc
testl
sbb
test
and
inc
add
in
mov
lret
inc
pusha
ret
mov
mov
stc
loopne
or
stc
jg
loopne
dec
loop
repz
push
movsb
mov
sbbl
mov
insl
mov
pushf
push
sbb
or
out
mov
in
inc
subb
cmp
add
add
out
or
jne
xor
sub
lods
dec
cli
out
inc
dec
dec
or
jmp
ljmp
repnz
jge
mov
sti
mov
sub
ret
hlt
mov
jo
jne
mov
xchg
jge
push
bound
xor
ret
push
adc
sahf
cmp
mov
shrl
inc
dec
jb
gs
idivl
push
lock
mov
repz
xchg
mov
out
mov
sbb
cmp
int
ja
sahf
jne
bnd
xchg
xchg
ficoms
pop
les
int
lret
add
jo
fadd
mov
push
lahf
outsb
das
cmp
inc
repnz
outsl
mov
fisttps
cltd
daa
lock
ljmp
aas
xchg
std
mov
or
xchg
out
inc
mov
cmp
mov
sbb
aaa
xchg
xor
push
add
shl
pop
mov
stc
nop
push
or
mov
sub
dec
or
lods
pop
cmpl
ss
lods
mov
mov
std
mov
cmp
cwtl
mov
sub
mov
ret
lret
or
shlb
fwait
hlt
popf
mov
aad
sub
and
sarb
push
ret
jl
xchg
mov
pop
xor
push
in
jnp
mov
adc
repnz
push
dec
xor
push
fnsave
sub
aaa
jg
fdivrs
mov
sbb
jecxz
mov
jmp
mov
xor
jl
lahf
inc
push
rcr
daa
inc
test
loopne
dec
adc
pusha
je
pop
dec
in
jp
xor
pop
popf
inc
insb
clc
imul
xor
mov
andl
fsubs
int
and
outsl
lods
dec
enter
cmpsb
adc
jl
ret
xchg
dec
push
add
xor
in
jge
imul
dec
rcrb
adc
mov
insl
test
ret
jns
test
pop
adc
loop
add
or
jae
stos
or
push
mov
push
mov
mov
cmp
outsl
sar
pop
cwtl
cs
movb
int3
clc
push
aaa
movsb
xorb
stc
popa
push
test
cmp
pop
mov
sbb
push
aad
sub
clc
aad
sub
xor
fldenv
cmp
jmp
mov
mov
sbb
sti
out
loope
in
mov
fadd
adc
sbb
cmc
addr16
jne
stos
cmp
ja
je
mov
repz
mov
inc
scas
push
dec
and
mov
add
inc
sbb
fldcw
das
jnp
scas
jne
and
lahf
add
or
bswap
adc
out
mov
pop
insb
stc
inc
mov
xchg
or
sbb
cld
jbe
fldl
xor
or
mov
movsl
repnz
addl
test
iret
jmp
pop
xchg
inc
push
pop
ret
and
adc
push
sub
xor
push
cwtl
inc
aaa
jp
jecxz
mov
push
and
mov
mov
inc
jmp
xchg
cs
imul
dec
mov
sbb
jmp
xchg
out
rcl
fists
inc
addr16
adc
imul
loope
mov
cwtl
sbb
jmp
out
arpl
xchg
cmp
cld
xor
aas
es
push
push
push
movsl
lahf
jmp
adc
pop
lret
mov
lret
fistpl
dec
stos
cmp
sub
mov
aad
imul
sbb
jo
dec
cwtl
adc
fsubl
leave
pop
es
jo
add
cmpsb
jbe
cmp
mov
test
ds
shlb
ds
xchg
xor
loop
out
icebp
lods
pop
jo
push
xchg
dec
jecxz
dec
in
imul
cmp
xchg
pop
cmpsl
or
mov
adc
lods
push
xchg
dec
in
pop
cs
xor
mov
jo
mov
sbb
jnp
mov
ficompl
mov
aam
cmp
gs
mov
repnz
out
arpl
lahf
mov
outsb
fsts
mov
add
push
mov
dec
scas
stc
test
push
sub
or
addb
mov
icebp
adc
test
xor
incb
sbb
cs
and
fisubrs
cmc
or
repnz
jno
mov
std
xor
in
jl
inc
cmp
adc
sbb
mov
dec
inc
popf
leave
stc
jo
mov
sub
and
mov
xchg
sub
pop
rcl
dec
pop
jnp
push
lahf
adc
adc
sbb
cmpl
fcoml
or
rorb
addl
adc
sub
jl
ret
ds
add
jae
sahf
jno
out
push
mov
lds
and
mov
daa
lcall
xor
adc
into
adc
js
fucom
sbb
pop
cmpsl
add
pop
rorl
out
push
fadds
mov
xor
movsl
pop
push
xchg
aaa
repnz
popa
add
cmp
dec
mov
nop
loop
sub
and
insb
mov
stc
mov
xchg
push
or
jecxz
push
ret
clc
repz
loop
or
mov
rcrl
mov
xor
push
stos
outsl
das
sbbl
dec
dec
add
fisubs
addr16
inc
fwait
push
mov
and
fcomps
cmp
repz
int3
mov
mov
mov
jns
inc
xor
gs
jno
es
pop
dec
popa
inc
fcoml
mov
hlt
adc
jo
pop
add
notl
push
mov
sarl
loope
ret
push
into
mov
lds
in
data16
pop
test
lcall
out
cmp
nop
cwtl
sub
adc
sbb
jl
hlt
loope
jbe
mov
rcrl
xor
jbe
jbe
pop
mov
mov
movsb
imul
push
pop
inc
xor
pop
dec
jno
inc
ja
fwait
xchg
pop
xchg
push
adc
jmp
and
int
mov
push
bound
test
xchg
subb
or
mov
div
adc
and
fcmovbe
push
imul
call
arpl
push
mov
scas
fcom
cltd
push
movsb
jmp
sub
insb
pop
add
addr16
xlat
gs
outsl
mov
mov
cmp
jmp
clc
fwait
sub
add
clc
xor
pushf
mov
fstpt
test
dec
fisubrs
dec
jecxz
pop
mov
inc
dec
imul
xor
ds
sbb
or
sbb
jae
int
xchg
and
add
sub
push
fsubr
aad
ljmp
fisttpll
loope
aaa
xor
test
xchg
inc
or
xor
jmp
or
dec
mov
rol
sub
out
rclw
in
jae
das
cs
adc
lods
jns
aam
push
add
adc
mov
mov
push
adc
jge
addl
sbbb
adc
mov
sti
adc
or
or
or
xchg
jge
inc
push
dec
subb
aad
dec
fcoms
xlat
in
cld
inc
mov
push
imul
mov
dec
fidivrl
add
dec
jnp
lcall
fdivl
xor
daa
pushf
rcl
fnstsw
pop
mov
ljmp
push
or
and
scas
xor
push
in
lds
hlt
nop
xor
or
cmp
jns
call
dec
movsl
repnz
adc
or
cmp
and
faddl
jmp
ja
test
sub
test
pop
test
movsl
ja
andb
jne
addr16
or
adc
sbbb
inc
push
lret
testb
shll
xchg
loop
xchg
popf
pushf
and
jge
cmp
jbe
mov
arpl
jle
pusha
pop
cmpsl
les
shlb
jmp
add
lret
push
mov
movsl
cmp
mov
and
int
orb
add
lret
and
jge
xor
mov
push
cld
leave
jp
lcall
lret
push
sub
stos
cli
sti
cmpsb
cli
lahf
jns
or
test
idivl
cmpsl
out
jmp
les
shrb
pusha
rorl
adc
popa
push
and
or
movsl
mov
cmp
std
gs
push
outsb
enter
push
and
pop
or
sub
push
imul
jl
add
dec
push
je
inc
insl
pusha
in
aad
mov
push
std
and
sarl
out
pop
test
pop
rorl
into
inc
xor
xor
mov
xchg
imul
mov
cmp
pop
or
cli
xorl
or
shrl
sbb
fwait
adc
imul
iret
xor
stos
fcmovu
iret
fs
push
imul
push
mov
loop
imul
sub
hlt
les
std
or
jle
push
orb
mov
dec
out
mov
sbb
jno
lahf
movsb
imul
imul
cs
rcll
jmp
push
lret
gs
sub
cmpsb
xor
cmp
push
insl
push
sbb
xchg
cmp
fdivr
cmp
ljmp
adc
arpl
push
or
std
jge
cmp
ss
push
ret
cwtl
out
adc
add
jo
je
addr16
xchg
pop
ret
nop
lret
out
pop
add
jp
fwait
pusha
cmpsl
pop
not
outsb
mov
fbstp
das
les
stos
sbb
iret
pushf
scas
inc
daa
ja
pop
insb
xor
lret
mov
add
add
jge
adc
xor
mov
xor
sti
xchg
out
insl
push
mov
addr16
shrl
push
stos
imul
out
rcrb
imul
and
sbb
movsb
xchg
xchg
push
test
sbb
mov
sbb
ret
sub
jle
sbb
dec
sbbb
movsl
aaa
js
or
or
cmp
cmp
lods
adc
sbb
jecxz
ss
jo
ficompl
mov
sub
inc
mov
enter
out
push
jae
lea
dec
aas
popf
adc
add
and
call
lea
push
sbb
out
std
fldenv
dec
loopne
add
pop
pop
lods
mov
jno
mov
push
out
xor
out
jbe
jge
mov
pop
or
mov
mov
push
pop
jno
jo
orl
push
testb
outsb
mov
push
push
jle
push
shlb
mov
cli
sub
in
inc
cs
mov
sbb
mov
out
movl
mov
xchg
inc
into
lret
inc
mov
cld
mov
sahf
dec
pop
dec
jg
aaa
xor
pusha
loopne
lea
or
cmp
ficoms
mov
dec
jae
clc
and
adc
sub
dec
gs
repz
add
lret
idivl
ja
fs
pop
mov
pop
aaa
sti
imul
int
sub
dec
sbb
push
into
dec
adcl
ret
cltd
dec
cmp
mov
dec
pop
pop
dec
cmp
shl
push
imul
sub
cli
popf
jle
push
sbb
les
mov
dec
sti
push
cmp
in
dec
inc
sbb
xorl
inc
and
mov
cwtl
push
jle
jnp
and
inc
xor
int3
repnz
mov
mov
sbb
adc
arpl
loopne
inc
and
cmpsl
out
xchg
sbb
inc
push
pop
fisttps
lods
out
cld
inc
sarb
xchg
mov
outsl
mov
mov
push
pop
stos
loop
or
pop
movsw
adc
test
dec
aas
clc
adc
jns
das
popf
xchg
mov
insb
out
lret
fistpll
gs
or
mov
adc
push
arpl
cmpl
adc
xchg
mov
xor
mov
int3
hlt
jge
les
rorl
mov
jae
scas
xor
add
test
lcall
jp
mov
lcall
push
pop
testb
mov
mov
mov
andl
stos
cmp
in
mov
jae
pop
xchg
pop
outsb
gs
fcoml
repz
lods
addl
or
or
icebp
ja
mov
push
mov
rcrb
mov
mov
lret
je
dec
sbb
xchg
test
test
pop
std
jg
lahf
clc
sahf
jl
ficomps
push
xor
stc
test
jmp
mov
sub
jmp
mov
dec
mov
xchg
int
xchg
fsubl
jbe
push
clc
imul
jge
xor
push
jl
jmp
cmp
sbb
or
lcall
cmpsb
inc
inc
xchg
fidivrl
mov
repnz
loope
cld
dec
cmp
lahf
cmp
push
cmpb
and
push
aas
mov
and
add
xchg
mov
and
data16
push
fidivrs
and
pusha
push
jb
jle
or
ljmp
adc
xor
push
cmp
lods
ret
clc
out
cli
testl
lret
xchg
sub
loop
pop
mov
jnp
in
es
inc
fmulp
push
pop
jge
xchg
sbb
gs
sbb
idiv
stc
rol
test
cmp
pop
adc
mov
sub
xlat
outsb
das
or
mov
ficomps
add
dec
insl
xchg
dec
xchg
dec
mov
adc
push
rcrb
mov
mov
jno
sub
testl
gs
pop
lea
test
pop
int
ficompl
jno
cli
filds
xchg
mov
and
cmp
ror
cmc
insl
mov
int3
sub
push
pop
rolb
in
leave
pop
or
jb
jb
pop
add
sub
mov
sbb
lea
xchg
jo
out
dec
inc
sub
je
int3
shrb
jge
mov
pop
jo
sub
add
add
lods
sbb
mov
stos
or
adc
rclb
clc
daa
jb
push
pushf
ret
es
sbb
jbe
test
stos
jns
jns
in
adc
pushf
xchg
mov
cli
jge
add
mov
xchg
jp
in
shrl
push
imul
jmp
or
push
or
int3
or
repnz
nop
sbb
adc
mov
inc
repnz
aas
repz
out
and
or
sbb
mov
inc
fsubrl
cmp
and
pop
inc
xchg
sub
jmp
xchg
arpl
push
repnz
xchg
bound
stos
add
pop
movsb
sbb
aaa
out
call
cmpsl
shll
sub
mov
inc
dec
shrb
mov
in
cmp
shlb
out
imul
std
dec
push
icebp
sbb
cmpsb
jns
test
xor
mov
in
or
push
mov
or
push
push
ds
ffreep
push
mov
mov
xchg
push
ret
fldl
or
xchg
sbb
nop
push
mov
sbb
push
fwait
dec
mov
addl
ljmp
and
leave
mov
xchg
adc
dec
mov
fdivr
push
pop
mov
mov
pop
mov
fidivs
jae
mov
or
cmp
add
or
js
or
bound
sub
xor
mov
dec
outsb
orl
mov
or
and
sub
mov
sbb
jp
add
cmp
outsb
out
outsl
and
call
push
xor
jp
xlat
pop
cltd
xchg
stc
lea
insb
incl
shlb
pop
mov
mov
jnp
insb
pushf
and
cmp
inc
ret
mov
rsqrtps
cmp
and
jg
cmp
jo
mov
mov
push
xchg
pop
ds
insb
sar
jb
jns
add
mov
cmp
inc
popa
out
pop
inc
outsb
pop
sbb
jnp
push
mov
std
mov
out
sbb
rcrl
jno
adc
inc
ret
jp
repz
jge
cld
xor
test
add
ret
cmp
cwtl
gs
mov
daa
insl
mov
inc
pushf
repnz
pop
mov
mov
xor
mov
gs
rol
shrl
lretw
cltd
cmpsb
loop
icebp
fwait
mov
scas
xorb
lea
cli
or
mov
clc
add
stc
outsl
pop
push
aas
xlat
fisubs
pop
mov
movsb
fiadds
adc
fbstp
lahf
out
adc
push
cwtl
sub
sub
loopne
push
shl
stos
xchg
inc
fisubrl
add
mov
inc
mov
cltd
sar
outsl
xor
mov
and
out
lahf
xchg
sbb
jb
adc
jp
in
fsts
stos
jg
lret
dec
mov
dec
inc
mov
or
popf
mov
dec
sub
dec
pusha
subl
stos
cmp
ss
xchg
jmp
mov
sar
xor
jbe
es
cmp
xorl
xchg
cld
cmc
std
in
push
mov
loopne
jns
and
dec
ficompl
lock
sti
lahf
fistl
jecxz
into
push
push
sahf
mov
xor
lock
sbb
sbb
dec
js
test
loopne
ficoms
icebp
mov
outsb
and
lock
pop
pop
call
adc
test
in
leave
push
into
icebp
sub
int
or
arpl
or
ja
hlt
push
stos
pop
jno
aad
out
push
xor
sbb
mov
xcrypt-ofb
cmpsl
lods
xchg
sub
sahf
push
pusha
call
stos
push
jl
outsl
jnp
scas
insb
xchg
dec
or
mov
sub
xchg
pop
imul
test
ja
xlat
cmp
push
fcomp
je
and
clc
pop
mov
mov
les
jge
pop
cmp
add
out
and
or
scas
les
lock
test
int
les
and
pop
addb
push
testb
sbb
jmp
push
dec
add
inc
pop
xor
repnz
mov
cmc
rcrl
jp
mov
popa
ss
cmpsl
sub
add
data16
ds
jns
xchg
imul
outsb
ljmp
aad
jo
or
aaa
popa
push
int
out
dec
and
jmp
inc
pop
sub
and
les
test
insb
imul
aam
or
mov
enter
mov
iret
sbbl
test
push
mov
xorl
mov
pop
dec
std
mov
and
push
jno
xor
push
add
mov
popa
jp
rcrl
sahf
pop
mov
je
sbb
icebp
sbb
sbb
mov
mov
xchg
nop
push
testl
or
popf
pushf
push
jmp
or
jg
xor
xchg
push
xchg
mov
inc
movsb
xor
cmp
call
incb
cmp
aad
cmp
inc
sub
stos
out
push
jbe
in
sub
aaa
and
push
addr16
ds
add
mov
mov
or
aad
loop
sbb
mov
lahf
inc
mov
leave
ds
outsl
jle
leave
sbb
out
scas
stc
mov
cmp
repz
jnp
inc
mov
mov
jl
xchg
lea
cltd
push
loope
push
push
movsb
mov
sbb
mov
pop
xlat
sbb
movsl
xchg
add
test
fnstsw
loop
movsl
stc
sbb
dec
arpl
test
orl
jge
fisubrl
ja
sub
test
push
pop
sarb
mov
sub
jo
mov
xchg
mov
addr16
test
push
icebp
cmpl
mov
adc
jp
mov
sbb
cmp
mov
xlat
repnz
cld
fstp
in
add
sub
push
and
fisttpl
xchg
ja
in
sbb
or
mov
mov
repnz
sarl
jno
sbb
cmp
xlat
lds
call
mov
sbbb
inc
hlt
popa
ds
xor
cli
push
cli
xchg
leave
imul
push
clc
pop
mov
sub
sti
mov
mov
ret
push
or
mov
icebp
xchg
scas
lret
pop
push
in
cs
xchg
aad
shrb
mov
mov
xchg
cli
and
mov
cld
sub
mov
je
adcl
xchg
adc
pop
sbb
add
adc
jge
xor
mov
cmp
das
test
add
sbb
cli
pop
sbb
and
sbb
hlt
mov
pop
scas
enter
push
lret
adc
fs
inc
cltd
cmp
movsl
mov
js
ljmp
inc
push
inc
adc
mov
inc
push
sahf
lock
mov
mov
sbb
inc
mov
add
sbb
scas
xchg
xor
pop
push
jp
cmc
mov
int
inc
pop
xlat
loopne
xchg
insb
push
notb
lds
dec
jo
xor
fimull
pop
js
mov
pusha
ret
out
mov
fdivrs
jo
sbb
sbb
or
add
cs
add
mov
cmp
mov
jnp
ja
sub
push
ficoms
and
in
dec
scas
testb
jle
mov
cltd
fisttpl
mov
mov
bnd
nop
loop
cmpsl
pop
rcr
push
shr
dec
adc
jmp
in
jnp
popa
sub
lods
iret
or
out
jmp
lods
loop
repz
stos
cmp
fsubr
ljmp
popf
xchg
cs
lret
inc
xor
and
and
fisttps
and
negl
in
rorb
and
mov
xchg
push
popa
add
bound
jmp
daa
jp
jmp
jecxz
pusha
out
dec
mov
xchg
cmp
add
inc
sub
int
jecxz
pop
int3
shrl
inc
js
mov
mov
xchg
add
jbe
lods
adc
xchg
ss
movsb
cwtl
sub
push
cmpsl
sbb
fcmovb
mov
inc
inc
cwtl
imulb
push
xchg
or
stc
lcall
pop
or
std
icebp
push
pushf
pop
test
in
iret
inc
fwait
or
fcomps
test
lds
dec
mov
jecxz
pop
fs
stc
mov
pop
xor
cwtl
sbb
jge
mov
and
fsubl
push
jmp
cmpl
out
pushw
insb
mov
jl
jno
stc
jne
sarl
mov
je
cmpsb
int
cltd
jb
jl
mov
leave
mov
cs
enter
faddl
imul
mov
lock
xor
mov
lcall
pop
mov
call
lods
enter
stos
std
push
pop
insb
lods
and
xor
adc
fisubs
jmp
daa
mov
in
ret
and
dec
mov
or
jnp
dec
add
mov
jnp
xor
xchg
dec
cld
cwtl
bound
clc
pop
cwtl
cmp
adc
aas
or
cld
mov
ljmp
ss
lahf
rcl
inc
mov
popa
jnp
push
movsl
xlat
push
das
add
iret
imul
std
xchg
mov
movsb
daa
jmp
and
ja
mov
cwtl
xchg
push
jle
lahf
sub
jge
mov
pushf
xor
push
jecxz
icebp
cwtl
mov
inc
repnz
outsl
cltd
fcomps
pop
data16
dec
jge
cli
sti
mov
mov
outsb
fsts
push
pop
sbb
mov
push
xor
data16
in
push
daa
xchg
xor
add
movsb
mov
jo
int
dec
repnz
hlt
xchg
stos
jnp
adcl
test
add
daa
sbb
lcall
aad
or
adc
or
dec
lods
pop
test
sbb
call
jnp
sahf
xchg
push
rcrl
add
popf
rcl
dec
scas
pmulhw
push
outsl
inc
cmp
xchg
daa
hlt
xorl
dec
add
dec
bound
inc
push
pushf
sbb
mov
into
sahf
jo
push
aam
sub
xchg
push
loop
sub
and
push
pop
nop
mov
push
imul
xchg
mov
jae
rcrl
inc
sahf
mov
push
sbb
push
push
dec
adc
mov
je
and
notb
js
fsubrl
add
and
cltd
fldcw
sbb
mov
jo
jae
cmp
mov
pushf
cs
jne
xchg
test
shlb
ret
sbb
cmp
cmp
in
fldenv
cmp
inc
add
nop
ret
ja
sub
mov
sbb
cmp
mov
inc
ja
cld
out
jne
stos
inc
xor
push
sbb
imul
push
cltd
mov
mov
inc
xor
xor
out
mov
xor
ja
test
in
cmp
push
xor
movsb
push
push
inc
outsb
sarb
push
es
sbbl
ds
sbb
into
out
jl
push
mov
or
test
cmc
scas
inc
adc
pusha
fs
push
cmc
in
cmp
cmp
aam
rcrl
fiaddl
ljmp
mov
lds
fdivrl
imul
iret
sahf
pop
xchg
xor
ljmp
aas
ss
in
jne
pop
xchg
sti
sub
mov
ret
mov
fwait
xor
shr
cmp
mov
mov
imul
mov
ds
daa
xor
sarb
pmuludq
scas
pop
cmp
scas
add
mov
dec
std
shl
or
rorl
pop
into
ss
dec
jns
aas
xchg
out
or
mov
int3
dec
or
loop
loope
addl
pop
mov
outsb
add
adc
addr16
aam
lock
es
out
stos
popa
ljmp
out
cltd
push
mov
lods
addr16
mov
push
dec
jae,pn
add
daa
int
push
cmp
andb
arpl
push
in
inc
xchg
test
cmpsl
xchg
cmp
ss
mov
push
mov
scas
dec
mov
jno
xchg
and
repz
neg
xor
jbe
subb
loop
rolb
nop
scas
add
xchg
sbb
sub
inc
pop
pop
mov
add
or
lods
in
cld
xor
pop
imul
arpl
in
sub
lods
gs
cmpsb
test
repz
cmpsl
mov
sub
nop
add
and
in
pop
mov
jl
or
inc
dec
cli
ficoms
mov
mov
rorb
jl
and
daa
xchg
push
popa
push
test
adc
test
cmpsb
cmpsb
mov
in
mov
and
cmc
jns
lea
cmp
jo
xor
test
pop
push
cld
jne
pop
dec
or
pusha
repnz
in
sbb
lods
mov
sub
mov
adc
or
jle
adc
stc
test
aaa
jmp
adc
rolb
int
movsb
mov
out
leave
add
scas
mov
sbb
addl
xor
out
rcll
hlt
aad
pop
es
test
pop
mov
je
pop
popa
cmp
cmpl
out
div
push
cmpsl
scas
ljmp
and
lret
rcl
lret
sub
cltd
sub
jae
cmp
pop
imul
cld
pop
es
jbe
sub
cmc
or
fisubs
scas
arpl
adc
ljmp
dec
push
cmp
aas
mov
lea
cmpb
mov
inc
add
add
and
andl
repnz
scas
ljmp
es
sub
inc
jno
mov
adc
cmc
mov
jae
sbb
pop
xlat
xor
add
sti
repnz
dec
sub
adc
push
aam
leave
insl
or
je
stos
jns
in
dec
loop
jnp
cmp
mov
cltd
lea
aaa
movsb
cltd
sbbb
lds
or
in
xor
mov
subl
mov
cs
fs
xchg
lret
dec
or
jns
jl
cmpsb
push
sbb
pop
pop
movsb
es
cmc
and
sub
negb
or
fsubl
adc
sub
sbb
das
movsb
out
mov
sbb
mov
data16
jae
dec
xor
ljmp
je
in
mov
mov
push
fcmovnb
rorb
xchg
inc
imul
lret
sub
sub
mov
or
dec
adc
inc
icebp
out
not
insb
sub
jl
jle
sub
jno
flds
xor
out
sbb
adc
jo
fsts
lret
and
fs
add
push
out
or
and
addb
and
inc
mov
dec
xchg
stos
sbb
mov
ja
jno
pop
aaa
sbb
pop
cmp
adc
lods
add
add
dec
scas
sub
sbb
lock
and
fsubrs
mov
jne
pusha
pop
fimuls
cmpl
sub
jo
js
sub
aad
ljmp
das
pop
cmp
xchg
lret
outsb
inc
or
sbb
loope
lret
mov
adc
outsl
lret
into
insl
sub
pushf
dec
ljmp
pusha
dec
shlb
das
and
fidivs
in
dec
mov
adc
and
pop
daa
out
or
outsl
dec
test
icebp
adc
jle
adc
sarb
outsl
inc
inc
or
cmp
bound
push
into
arpl
or
dec
mov
add
movsb
out
subps
insl
pop
sub
dec
cs
aad
adc
stc
and
sub
and
mov
jb
jns
aad
xchg
push
popa
scas
pop
pop
inc
mov
les
outsb
roll
xor
and
inc
repnz
push
adc
ret
lcall
fcmove
mov
pushf
loope
mov
ds
jae
jns
pusha
enter
mov
addr16
jp
xchg
aaa
mov
daa
pop
mov
mov
data16
in
test
imul
test
mov
push
mov
js
mov
pop
mov
xor
aad
jne
jb
dec
bound
pop
neg
bound
dec
movsb
mov
gs
push
fs
psubsw
rclb
push
mov
jns
pusha
push
mov
das
mov
pop
cmp
push
and
pop
subl
mov
lods
adc
pop
xchg
out
or
jle
cltd
mov
loopne
std
ja
arpl
jnp
push
jp
mov
xor
push
push
mov
imul
int3
xor
rorb
mov
mov
std
pshufw
push
jecxz
imul
push
call
xor
adc
or
lock
insl
bound
lret
loopne
test
orb
lods
repnz
xchg
lods
cli
shrb
movsl
scas
cmp
insl
les
cmp
fsubl
adc
xorl
movsl
cwtl
jmp
dec
movsb
mov
mov
fs
add
nop
adc
ja
xor
ljmp
push
addl
aam
or
push
xor
mov
jo
in
ja
cmp
mov
push
cltd
xlat
lds
data16
icebp
inc
mov
mov
arpl
sub
add
enter
push
stos
insl
adc
push
mov
xchg
xor
sbb
aas
add
shll
lret
mov
push
repz
ss
enter
jo
mov
jl
es
jle
arpl
and
or
jo
int
fiaddl
lods
inc
push
lret
dec
fidivrs
in
dec
js
test
xor
mov
mov
popf
xor
in
insl
imul
xchg
pop
xchg
leave
int3
pop
scas
ss
jle
nop
inc
int
mov
inc
mov
cmpb
jbe
in
pop
repz
aam
nop
int
adc
dec
adc
xor
inc
push
test
cmpsb
jb
aaa
lods
idivl
dec
sahf
addb
lahf
cmpl
shrl
ja
cmp
push
pop
cmp
push
mov
or
andb
mov
pop
xchg
jne
pop
pop
stos
lahf
and
adc
xorb
pop
jno
dec
xor
pop
xchg
es
shrl
aad
insl
or
sub
jb
shrb
mov
xor
cmp
cmc
jl
shrb
xchg
adcb
push
in
cld
push
inc
lods
aam
nop
outsb
mov
ret
or
into
repnz
push
push
ret
flds
sub
nop
in
add
push
sbb
mov
or
sbb
xor
insb
cltd
inc
frstor
repnz
rclb
or
push
loop
jle
popa
add
or
loope
xchg
in
popf
es
mov
and
arpl
add
add
xchg
inc
xchg
test
xchg
lods
mov
ja
cltd
fistl
fs
aas
pop
sub
jnp
cmp
inc
jo
icebp
and
push
mov
in
ljmp
fmulp
stos
stos
mov
mov
sbb
stc
ds
mov
aas
push
adc
cltd
xlat
xor
adc
js
imul
enter
outsb
aam
pop
or
mov
repnz
jbe
inc
xchg
cmp
clc
sbb
push
andb
sti
sub
pop
loop
sbb
in
xchg
jae
and
insl
les
test
fistpl
adc
in
fucomi
pop
insl
mov
inc
xchg
outsl
daa
xchg
sbb
push
movsl
pop
xchg
cmp
jp
jnp
mov
das
pop
std
push
fsubs
jp
jne
xlat
out
pop
imul
incl
or
sub
fimull
xchg
jnp
mov
out
sbb
ret
xchg
lea
and
dec
push
ds
jmp
test
imul
jp
push
sub
sub
inc
adc
out
cmp
jbe
sbb
xor
std
bswap
icebp
jp
jne
mov
call
aas
sbb
xor
in
dec
in
inc
aas
aad
mov
popa
sub
xlat
dec
subl
popf
pop
push
shll
add
fistpll
push
sahf
lods
push
mov
addr16
inc
into
out
inc
inc
mov
lahf
xchg
stc
xor
jl
push
int
mov
lods
out
mov
sahf
jge
in
cwtl
paddusb
adc
and
jg
add
add
out
push
lahf
inc
and
cmp
mov
outsl
in
cmp
add
rorl
notb
cmpsl
bound
dec
and
mov
mov
add
push
jle
mov
lea
cmp
mov
lods
xchg
xchg
in
cld
add
aam
lock
bound
push
mov
loope
sub
xor
pop
jns
xor
insb
lds
call
shl
push
cli
pusha
gs
adc
jp
xor
adc
test
ret
xor
inc
jg
lods
in
push
enter
loope
ret
inc
jo
stos
bound
mov
sub
pop
imul
jne
push
push
lcall
pop
out
aam
xchg
adc
mov
shrl
dec
testl
pop
dec
hlt
pop
jne
and
mov
jmp
mov
ja
lea
repnz
dec
inc
lods
out
or
hlt
pop
jmp
add
add
loope
or
repnz
sar
js
xor
sub
xchg
out
and
lcall
mov
push
js
das
out
mov
pop
fiaddl
in
movsb
outsl
adc
add
cmpsl
pop
loop
push
pop
loopne
pushf
sbb
jnp
lds
je
ds
outsb
rol
inc
jp
hlt
dec
adc
push
sub
mov
test
aas
cmpsl
pop
xchg
or
adc
mov
dec
inc
in
cwtl
ss
jl
bound
inc
sti
adc
inc
popa
mov
nop
xlat
cmp
inc
mov
insl
sub
mov
shrb
push
pop
push
mov
pop
xchg
mov
loop
push
mov
mov
push
sbb
jp
mov
data16
lods
jne
push
mov
xor
dec
inc
int3
pop
mov
jl
mov
rorb
adc
jns
incl
mov
pop
in
jle
pop
les
test
shld
mov
xchg
fistpll
in
or
outsb
sbb
sbb
xchg
shll
and
lahf
mov
fs
ljmp
mov
fisubrs
and
push
xlat
ds
inc
mov
xor
sar
mov
sarb
jle
stos
ja
ret
xor
and
mov
into
or
std
enter
std
and
cmp
push
push
aaa
lret
mov
pop
int
jecxz
jg
test
ret
je
mov
loope
mov
push
mov
imul
cmp
scas
dec
das
lock
jnp
test
jnp
out
push
jg
add
push
and
mov
fbld
xchg
jae
fisubs
inc
dec
rcll
mov
adc
push
lea
in
mov
sub
jle
sub
cltd
and
or
imull
aaa
mov
pop
adc
in
lods
shll
rcrl
mov
cltd
fimull
mov
xchg
jecxz
fstpt
dec
xchg
pop
push
jbe
mov
jnp
mov
data16
mov
pop
xchg
gs
fldcw
push
out
dec
icebp
mov
nop
pop
imul
int3
jmp
or
jo
push
nop
jecxz
or
jecxz
enter
in
leave
pusha
sbb
dec
das
movsl
xchg
subb
lods
mov
in
fistl
cmpl
outsb
sbb
movsb
xor
arpl
inc
mulb
push
add
sbb
das
mov
pop
mov
adc
jns
lods
repz
sub
push
dec
pop
jbe
cltd
outsl
mov
aad
call
aam
ljmp
mov
insb
aad
xchg
add
and
scas
popf
rcrb
sub
add
das
lahf
call
rcrl
mov
jmp
pop
mov
inc
hlt
mov
jg
push
cmp
out
mov
add
mov
inc
les
dec
mov
ret
cmc
jmp
mov
push
int
lret
pop
movsl
scas
idivl
repnz
fs
cwtl
shr
mov
stc
xor
adcb
lret
dec
xor
xchg
xchg
dec
jb
push
dec
in
in
rorb
sbb
or
xchg
and
and
mov
sub
push
cli
pop
test
mov
pusha
inc
out
scas
aaa
push
mov
ljmp
adc
fld
ljmp
popa
mov
xor
in
ret
adc
les
push
dec
xor
mov
and
pop
pmulhuw
dec
push
imul
push
fists
xor
sub
aad
or
xor
lock
dec
dec
or
add
je
mov
jmp
jl
xchg
cmpsl
lods
call
data16
inc
cmpsb
repz
xor
addl
dec
call
pop
testb
pop
cmp
mov
mov
mov
mov
cmp
jp
enter
das
xor
pop
mov
adcl
stos
inc
dec
out
mov
inc
mov
cmp
jae
and
and
fnstenv
jnp
mov
cmp
inc
jo
cmp
push
pop
popa
cmpsb
mov
sahf
jnp
imul
jmp
fcoml
std
mov
sub
lcall
leave
scas
mov
fldt
and
daa
or
mov
mov
enter
pop
inc
shll
jae
xchg
pop
mov
aam
jne
cwtl
jo
mov
jl
outsb
xlat
jp
imul
pushf
rcrb
popf
ss
push
cmp
push
xor
xor
cwtl
iret
pop
jp
ljmp
mov
insb
ficompl
orl
test
xchg
xchg
inc
mov
or
popa
outsb
pmaxub
xchg
hlt
out
outsb
cmp
xor
mov
call
fisubl
cmp
cltd
push
add
push
and
jae
jle
jle
stos
sub
imul
push
icebp
shl
mov
add
mov
popa
adc
gs
out
and
dec
sub
pusha
sub
and
adc
push
push
dec
xchg
adc
add
push
imul
ret
scas
push
daa
xlat
loopne
mov
test
sahf
hlt
shll
notb
int3
hlt
pop
pop
loope
sbb
pop
orb
scas
rorl
repnz
dec
xchg
mov
adc
push
jns
jge
xchg
ljmp
cs
outsl
bound
fs
aas
repz
cmp
push
and
pop
jae
stos
dec
cmp
xchg
xlat
pop
and
in
int
pusha
lahf
insl
faddl
cli
inc
add
xor
adc
int
or
js
ret
jo
outsb
sub
scas
jp
int3
mov
jbe
out
idivb
inc
ss
cmp
inc
outsb
fildll
rcll
mul
dec
pop
ljmp
pushf
dec
fcoms
popa
jno
lea
outsb
std
inc
xor
popf
sub
into
lret
mov
sub
fisttpl
es
mov
sbb
sub
add
cmp
and
cmp
test
xchg
aad
or
or
arpl
or
mov
loopne
cmp
dec
add
mov
dec
pop
outsb
mov
lahf
push
pop
adc
mov
cmpb
in
mov
push
xchg
hlt
addb
clc
gs
push
js
aas
cmc
and
or
hlt
pop
sbb
xchg
mov
lret
pop
mov
mov
test
mov
out
inc
out
or
xchg
sub
bound
stc
aam
ret
pop
test
rolb
xor
mov
mov
pop
test
or
fldl
pop
stos
and
movsl
ljmp
scas
dec
leave
ljmp
push
mov
pop
mov
push
and
sar
test
mov
inc
and
adc
js
test
xchg
movsb
addr16
pop
pop
jle
or
test
rorb
cmp
loope
imulb
insb
push
lcall
mov
cli
and
push
pusha
sbb
arpl
mov
jno
sub
mov
bound
call
push
es
mov
adc
faddl
dec
sub
out
aam
xor
dec
cmp
icebp
jne
cmp
in
jp
cltd
test
in
lret
mov
inc
mov
xchg
sub
jl
daa
notl
or
or
cmpsb
mov
and
or
mov
dec
out
iret
int
dec
lods
lods
popf
arpl
testl
xor
add
stos
mov
imul
fsubr
or
or
cltd
sti
sub
xchg
mov
xchg
stos
stos
mov
push
aam
xchg
popa
bound
dec
cmp
ret
jbe
pushl
push
xchg
pop
mov
stos
filds
inc
adc
jno
js
mov
xor
cmp
popa
jb
popa
shl
jo
add
pusha
sti
mov
loope
mov
jbe
jns
in
shll
lea
push
scas
ja
mov
movsl
jne
inc
push
jo
lcall
shrb
mov
pop
cmp
lret
dec
or
ja
cmpsb
jns
mov
aad
imul
xchg
popf
push
inc
stos
stc
and
cmc
in
adc
inc
lds
sbb
jne
xchg
push
int3
rcr
xchg
pushf
icebp
aad
sbb
cmp
in
add
loopne
add
rcrb
or
cltd
mov
mov
call
cmp
popa
push
in
rolb
and
and
push
pusha
mov
out
movsl
sbb
jge
cwtl
adc
xor
add
xor
sub
xor
sbb
pusha
cmp
fwait
and
inc
fwait
stos
lock
popf
cmp
push
je
jo
ret
bnd
push
int3
and
cmc
dec
icebp
xor
lahf
adc
fstpt
pop
dec
pop
mov
repnz
dec
aaa
cli
test
jb
addr16
les
aad
aaa
aas
or
inc
push
push
ljmp
mov
insb
icebp
mov
cmp
add
mov
imul
jne
inc
bnd
fistl
pop
mov
sbb
or
mov
xor
out
into
cltd
shll
imul
jmp
push
jns
es
test
mov
lahf
shlb
sbbb
int
dec
mov
cpuid
mov
jl
ret
jo
push
jae
add
jmp
movb
push
arpl
insl
add
js
add
repz
lods
andnps
sub
pop
inc
clc
inc
jmp
xchg
xor
adc
fimuls
test
jp
or
stc
jecxz
inc
jg
cwtl
dec
das
cpuid
xor
out
call
decb
add
fisttps
mov
mov
push
shrl
push
mov
decb
sbbb
mov
mov
and
push
cmpb
push
cltd
mov
pop
int
jae
fnstenv
xchg
sub
popf
js
and
data16
cld
cmp
adc
cwtl
lock
jae
in
adc
lods
mov
insb
xor
jb
cmc
inc
xchg
cmp
jo
mov
or
mov
in
fdiv
dec
xchg
sbb
in
sub
push
pop
push
leave
fists
xor
or
imul
cmp
mov
dec
adc
dec
addb
jmp
sub
xchg
and
mov
hlt
mov
cmp
add
mov
arpl
cli
sahf
add
sbb
into
mov
in
sub
and
fcoms
hlt
pinsrw
adc
popa
fs
sbb
lcall
inc
push
push
mov
adc
pusha
sbb
hlt
enter
sarl
push
inc
repnz
movl
mov
in
pop
mov
dec
outsl
dec
outsb
jge
insl
dec
movsl
mov
rclw
out
and
js
jb
cmpsl
lock
mov
sti
mov
dec
mov
in
xchg
dec
ret
fwait
mov
dec
ljmp
xchg
cmovb
xchg
inc
fimuls
push
mov
mov
enter
insb
dec
lock
add
mov
xchg
xchg
rorb
jne
faddl
or
lock
sub
mov
xchg
xor
mov
jne
mov
pop
or
and
fwait
jb
bound
pop
cmpsl
xchg
add
out
icebp
stos
lahf
jge
jno
fcmovne
fucomp
repnz
dec
push
lcall
dec
cld
xor
aaa
mov
xchg
stos
in
lds
nop
dec
xor
jecxz
dec
or
or
mov
stos
jmp
or
inc
dec
addb
in
arpl
inc
sub
inc
mov
mov
lret
or
insl
pushf
cmc
ret
jns
or
insb
mov
xor
add
pop
cmp
inc
xlat
cmp
out
mov
mov
lcall
or
push
inc
push
mov
sub
xchg
pushl
sbb
iret
mov
cmp
das
cmpsl
outsb
addr16
dec
inc
inc
mov
xchg
mov
inc
push
nop
lret
mov
test
mov
push
icebp
imull
inc
xor
pop
stos
pop
dec
adcb
cwtl
or
jg
ror
xchg
int3
push
addr16
inc
jae
std
push
sub
in
xor
mov
gs
mov
fbstp
mov
hlt
xor
pop
mov
nop
inc
cmp
adc
jno
pop
test
mov
and
gs
out
add
ds
aas
sbb
faddl
cmp
gs
xchg
stc
dec
out
mov
shll
es
popw
pop
pop
mov
arpl
popa
xor
sub
jb
repnz
in
push
pop
jmp
aam
stc
sbb
shrb
cmpsb
aad
push
inc
mov
cmp
xchg
lcall
inc
dec
mov
data16
in
pop
test
mov
stc
xor
mov
xchg
mov
push
pop
jo
xchg
das
sub
lods
mov
in
int
in
mov
out
sbb
jecxz
push
aam
pop
xchg
push
imul
lret
lds
enter
ljmp
pushaw
and
ja
mov
shlb
mov
arpl
call
xlat
fiaddl
ss
daa
lods
add
int
call
push
jns
addr16
shll
test
subl
in
repz
push
das
ficoml
pop
mov
cmpsb
pop
daa
and
cmc
bound
aas
sub
pop
mov
push
dec
popa
cmpsl
xchg
cmp
fbld
sub
dec
lret
jnp
xchg
xor
fiaddl
inc
pop
pop
orl
xor
in
jae
loope
ja
dec
xchg
repz
mov
or
dec
add
ja
lock
add
dec
add
in
pushl
movsb
inc
shrl
lret
pop
loopne
mov
sub
mov
int3
pop
fsubrs
or
sbb
jae
cmp
xlat
sbb
test
sub
inc
fbld
pop
cmp
push
fstpt
cmp
xor
je
ja
fmull
push
out
dec
lret
das
mov
xor
mov
insb
add
insl
and
mov
pop
sub
js
mov
mov
lods
shll
stc
cltd
lret
jecxz
add
sarl
movsl
xlat
cmovns
sub
ljmp
iret
mov
xchg
fwait
pop
stos
adc
cli
les
push
and
xchg
es
lods
xchg
ja
lcall
mov
shll
loopne
mov
out
nop
mov
mov
sahf
mov
push
mov
stos
loop
repnz
in
xchg
pop
or
adc
aaa
in
lea
jmp
jle
iret
or
jnp
pop
test
imul
mov
loopne
dec
daa
gs
cmp
xor
lods
mov
jge
testb
xor
insb
std
or
pop
cmp
sbb
or
jl
daa
dec
pusha
inc
fnstsw
add
and
mov
sbb
daa
adc
andl
sbb
or
insb
and
cmp
imul
aam
out
cltd
mov
push
std
add
jae
xchg
lahf
les
imul
jnp
lea
mov
xchg
inc
aas
and
inc
ja
xor
mov
mov
mov
cmpsb
test
push
jp
push
adc
cli
jmp
es
and
jo
loop
cmp
add
sub
out
adc
pusha
mov
mov
insb
push
cli
push
out
iret
sbb
out
addl
pop
cmp
push
cli
int
pop
imul
insl
sbb
fwait
pop
cmpsb
add
ss
jns
pop
mov
add
mov
push
inc
inc
inc
roll
inc
addl
sub
push
stos
jge
setp
sbb
or
aam
push
lds
mov
xchg
xchg
mov
dec
ss
sub
cs
pop
fdivrl
dec
andl
mov
insl
sbb
repnz
imul
aam
adc
scas
or
cmp
cmpsl
and
inc
and
testl
pop
jns
out
sub
xchg
sarb
sbbb
adc
imul
cmpsb
mov
cwtl
es
stos
in
in
dec
dec
sti
arpl
int3
adc
or
aad
push
mov
es
push
inc
insb
mov
aad
sbb
dec
mov
aaa
mov
pop
mov
and
imul
and
mov
xor
xchg
mov
sbb
xchg
xchg
mov
into
xlat
loop
add
xor
or
adc
imul
inc
cmp
sbb
sub
inc
mov
in
ja
or
adc
je
dec
cs
pushf
xor
mov
cmpsl
or
pushf
mov
xchg
das
test
jns
mov
repz
dec
jg
addl
and
lahf
lods
jns
shll
inc
test
enter
insl
xor
adc
repz
es
popf
repnz
mov
fildll
lock
fdivr
repz
mov
loop,pt
jg
cmp
ljmp
jns
adc
mov
cmp
addr16
cltd
adc
or
loopne
cltd
sbbl
fucom
lock
les
xchg
test
jno
int3
insb
jl
adc
and
repnz
gs
mov
inc
rclb
dec
push
xchg
mov
mov
hlt
daa
or
adc
sbb
fsts
fstpt
jne
lock
out
scas
pop
mov
mov
inc
sbb
jns
fidivrs
jecxz
imulb
ds
sub
sub
int
cmp
out
hlt
addr16
sbb
cli
out
bound
data16
aam
sub
adc
cmp
and
pop
andl
add
jnp
mov
adc
mov
push
sbb
pop
jp
and
int3
mov
imul
iret
xchg
aas
stc
movsl
or
mov
push
and
pushf
stos
push
sub
add
push
mov
ja
pop
roll
int3
cmp
mov
push
jl
inc
or
lods
add
xor
aad
scas
cld
jb
push
push
inc
lock
mov
pop
fidivrs
mov
loop
subb
xor
lcall
in
lods
je
jo
adcl
test
cmp
movsl
pop
popf
push
test
fcoms
pop
jo
pop
mov
test
dec
movsl
int3
cmc
test
popf
adc
inc
fs
fmuls
aad
fs
mov
cmp
jg
cld
or
xchg
cmp
mov
xor
pop
xchg
mov
ud2
mov
mov
gs
cmpsb
xchg
push
test
mov
push
loop
cmp
dec
mov
enter
push
movsl
fimull
icebp
in
xchg
mov
lret
cmc
push
adc
jmp
dec
lret
incb
dec
sub
dec
pop
lret
test
inc
mov
cltd
pusha
je
add
mov
stos
pop
dec
jge
movsl
sub
push
and
or
jg
jmp
mov
leave
scas
push
mov
ret
inc
pop
rorb
mov
mov
add
sbb
pop
jae
pop
sub
sbb
cmc
mov
in
sbb
xor
out
xchg
cmp
pop
shr
je
sti
mov
repnz
mov
mov
jg,pn
cltd
sbb
push
push
push
arpl
fdivp
cmp
dec
mov
push
sahf
pop
pop
aaa
fnstcw
mov
imul
pop
push
cld
xchg
jno
dec
enter
mov
pop
movb
add
mov
daa
loopne
jbe
mov
ret
sbb
push
push
movsb
or
mov
into
out
lret
lret
cltd
cmpsb
addr16
fs
xchg
jge
fsubl
aas
or
sahf
pushf
stmxcsr
lahf
push
sub
pop
lds
mov
shrl
clc
jmp
mov
out
inc
iret
mov
jecxz
sub
ror
ja
mov
into
sbb
xchg
add
movsl
pop
and
cmp
test
inc
mov
push
or
cmc
mov
cmp
movsb
dec
sbb
andb
dec
test
fmuls
scas
adc
lcall
jecxz
mov
mov
push
mov
in
xorl
lods
mov
sbb
jne
mov
dec
jp
jae
pushf
xor
cmp
ret
pop
cmpb
mov
push
popf
jo
pop
mov
fstps
setge
or
cmp
hlt
pop
xor
jae
test
or
sbb
or
inc
dec
add
inc
add
adc
mov
xchg
orl
mov
in
cs
pcmpgtd
cs
jnp
xor
xor
and
out
mov
imul
aad
adc
adcb
and
mov
sub
shrb
lret
xchg
add
mov
dec
or
xlat
fisttps
dec
push
lret
repz
inc
mov
pop
rorl
xchg
out
addb
lock
sarb
mov
imul
or
xchg
sub
cmp
dec
push
mov
out
movsl
out
push
jo
out
in
adc
nop
cli
pop
aad
loopne
sbb
sub
sbb
stos
das
mov
out
jl
or
stos
data16
pop
xlat
xorb
int3
cltd
add
cmp
jge
bound
or
cltd
fadd
nop
pusha
mov
stc
jae
sarl
les
mov
cmp
outsl
push
test
inc
mov
lahf
lods
xlat
sarl
cmp
std
test
fs
insl
add
lods
adc
leave
sub
mov
mov
mov
push
mov
in
and
mov
push
pop
testb
jge
cmpsl
xchg
loopne
or
fidivrs
pop
ja
xchg
mov
outsb
push
push
cmpsb
rolb
adc
fisttps
or
mov
mov
jno
inc
cwtl
xor
adc
cmp
sti
int
fstpt
push
or
add
pop
nop
inc
sub
inc
dec
jns
lret
loop
jmp
jmp
pop
xor
out
enter
mov
fiaddl
fimuls
push
aad
sti
lea
jl
dec
cmc
sub
sbbl
inc
push
sbb
mov
or
sub
mov
sbb
cmp
and
fnstenv
ds
mov
in
stc
sbb
inc
push
mov
enter
and
fs
fstps
int
inc
xor
scas
or
pop
xchg
inc
aaa
movsl
and
mov
dec
in
repz
repnz
jp
pop
and
aas
stc
xor
imul
push
mov
mov
fildll
xchg
cmp
fs
mov
lret
fs
testl
cmp
lds
test
cmp
xchg
push
mov
inc
adc
fwait
pop
aad
mov
or
test
pop
lods
aad
call
test
and
movsl
sub
push
neg
fadd
cmc
fdiv
popf
pop
pop
sbb
inc
fcoms
cltd
push
push
add
shll
and
je
jmp
or
sub
inc
sbb
add
xor
call
mov
mov
aaa
imul
jno
fiaddl
pusha
jl
xchg
sbb
lcall
in
cmc
mov
cmpsb
jno
xchg
stc
int
or
out
in
pop
sar
fdivs
mov
cltd
fstps
movsl
sub
mov
nop
popf
sbb
mov
cmp
fwait
test
cmp
xchg
sarb
arpl
dec
pop
sbb
mul
ja
aad
or
push
inc
gs
notb
adc
sbb
sub
adc
adc
lret
aaa
push
mov
mov
testb
cwtl
sbb
scas
das
mov
mov
mov
loop
xchg
jnp
stc
cs
mov
pop
stos
imul
icebp
movsl
call
mov
test
or
loop
lock
cmp
pop
leave
or
and
adc
cmp
xor
sbb
addb
pop
rcrl
ret
cld
fwait
out
aad
inc
mov
sub
mov
stc
xchg
sub
mov
sub
mull
push
mov
icebp
data16
or
add
mov
cmpsb
push
mov
sarb
pop
cld
and
fisubrs
shrb
or
lahf
lods
add
flds
mov
inc
movsb
pop
jg
add
jo
mov
mov
scas
roll
lock
fsub
mov
jmp
ljmp
mov
clc
scas
or
mov
pop
in
inc
js
jg
dec
enter
mov
mov
pop
dec
es
lahf
leave
pop
push
rorb
dec
jne
das
ror
mov
pop
addl
cmp
or
mov
mov
push
xchg
mov
lret
or
cmp
add
les
cmpsb
push
arpl
out
loop
jne
jl
or
pop
sar
rorb
repnz
jno
jne
addl
nop
or
repnz
notb
add
scas
movsl
and
cli
lahf
in
cs
out
cltd
pop
xor
sbb
rcrb
or
pop
rcl
mov
andb
push
jnp
sub
imul
jle
test
sub
mov
fwait
stos
jb
rcll
lcall
and
cli
push
pop
repz
inc
in
aas
dec
ficoml
mov
scas
mov
adc
add
add
ja
jp
fcmovnu
sbb
popl
outsl
out
inc
mov
mov
xchg
adc
sub
jl
or
in
adc
mov
mov
notb
push
sub
pusha
jo
out
lcall
arpl
pop
ss
out
mov
les
mov
push
outsl
call
hlt
inc
int3
scas
sti
inc
and
imul
sbb
sbb
dec
je
stos
in
clc
cmc
add
ljmp
gs
dec
mov
mov
std
sbb
mov
add
add
sbb
outsl
cmp
lods
jnp
add
sub
cwtl
pop
inc
sahf
es
pop
add
sahf
out
nop
mov
mov
dec
mov
xchg
mov
inc
pop
xchg
xchg
lds
ret
pop
pop
pop
and
jecxz
mov
imul
insl
das
mov
xor
cmc
adc
pop
enter
pop
or
popa
dec
jnp
hlt
mov
xchg
push
mov
and
xchg
mov
popf
mov
add
addr16
cmpsb
imulb
inc
hlt
sbbb
add
popf
mov
push
add
jae
movb
lods
ret
das
out
lea
insl
sub
mov
incb
imul
shll
xchg
andl
js
hlt
scas
outsb
adc
push
cmpsb
sub
cmpsb
inc
aad
cmpsl
push
inc
mov
data16
int
sbb
mov
fistl
jmp
xchg
xchg
mov
sub
push
das
hlt
cmpsl
sbb
std
xchg
pop
fsubs
mov
data16
sub
pop
and
push
xchg
outsb
fcomps
dec
mov
out
int
xchg
inc
aam
stos
lcall
and
dec
jmp
push
lea
in
call
out
fisubl
in
ret
rcl
das
add
push
pop
mov
lret
test
pop
movlps
xlat
inc
lcall
lret
xor
mov
cmpsl
adc
out
mov
cmp
inc
cs
pop
aaa
xor
rol
pop
mov
mulb
shlb
jnp
sti
dec
mov
mov
push
jb
aaa
cmp
sub
cld
cmp
or
out
aaa
shll
sbb
repz
sarb
shl
nop
pop
pop
lret
ficomps
shll
cwtl
mov
pop
cwtl
dec
lea
lods
fs
mov
push
test
adc
mov
rorl
es
jp
cmp
outsl
aam
or
mov
repz
push
ret
pop
fcompl
mov
mov
ret
pusha
or
mov
and
aad
mov
push
ss
fldl
jge
adc
adc
sub
mov
enter
and
ja
test
inc
fchs
aad
test
pop
adc
dec
adc
lret
jo
or
test
mov
mov
fdivl
daa
outsb
xchg
iret
dec
cmc
mulb
rcr
mov
and
jae
fistps
mov
rcrb
or
mov
mov
test
iret
add
mov
cwtl
dec
or
mov
jle
jmp
push
aaa
mov
cmp
and
cs
adc
mov
xor
mov
addr16
dec
stos
jb
mov
into
repz
or
int
sbb
add
lds
and
les
int
mov
imul
cs
shlb
inc
xchg
sti
lods
nop
mov
repz
popf
mov
cli
jecxz
cmpsb
jnp
xchg
aad
imul
add
mov
sbb
push
cmc
in
jmp
int
aas
pushf
mov
mov
mov
sbb
dec
dec
cmp
pop
mov
mov
jge
fs
sub
out
push
ret
adcl
cmpsl
mov
or
mov
enter
cld
aad
std
jns
mov
cmpsb
cld
daa
mov
pusha
mov
jg
push
mov
sub
pop
xlat
dec
mov
dec
xor
dec
adc
repnz
clc
int3
mov
xchg
push
cmp
push
dec
sbb
outsb
jmp
mov
inc
mov
sub
roll
mov
insl
mov
data16
incl
pop
in
outsb
aam
mov
int3
das
nop
mov
js
and
stc
fnsave
arpl
pop
pop
sti
insl
mov
icebp
push
hlt
pop
or
fwait
lods
jge
cmpsb
pop
test
test
xor
lods
fisubrl
mov
in
fisubs
mov
mov
mov
jp
arpl
adc
ss
mov
and
cmp
sbb
mov
ret
xchg
jo
adc
into
out
dec
adc
mov
xlat
fnstcw
cld
hlt
xchg
push
pop
repnz
fwait
lods
icebp
jo
pop
xchg
data16
pop
sub
mov
sbb
rclb
mov
pop
and
push
mov
les
or
jge
and
sbb
add
jmp
popl
mov
sub
adc
ret
inc
jmp
jle
pop
push
push
and
mov
dec
dec
mov
xchg
cmpsl
or
negl
cmpl
mov
hlt
mov
stos
inc
jae
inc
repnz
push
xor
sbb
in
outsb
inc
stos
fidivs
out
ja
outsl
repnz
psadbw
es
scas
push
inc
inc
mov
xchg
xchg
push
sub
in
imul
inc
jnp
inc
data16
mov
adc
sub
jge
int
leave
lea
insb
xchg
add
and
sbb
mov
iret
and
xchg
sub
mov
dec
jb
xlat
fistpll
loopne
sbb
aam
mov
sub
inc
push
and
inc
out
xchg
xchg
aaa
pause
loopne
mov
fs
cmp
or
aad
cmp
in
mov
aaa
xor
xchg
push
mov
xor
push
sub
ja
outsb
das
adc
orb
cmp
inc
in
push
pushf
jmp
cs
mov
sbb
testb
fdivrs
pop
add
fs
rorb
ja
aas
push
mov
aaa
hlt
flds
std
xchg
jp
stos
dec
xchg
fwait
test
outsl
sahf
movsb
add
stc
sub
push
lods
mov
sub
vhsubps
imul
stos
inc
js
jbe
jmp
out
cltd
dec
mov
jns
mov
lea
ds
test
push
negb
ret
lds
and
mov
or
inc
lahf
xchg
push
push
add
dec
adc
and
sub
sub
dec
mov
es
pop
leave
inc
jge
mov
pop
outsl
push
in
aad
aaa
gs
cmp
call
sbb
adc
test
jecxz
sbb
ljmp
or
fimull
in
arpl
aam
xchg
push
dec
and
lock
and
and
fldenv
icebp
in
loopne
add
xor
push
insb
cmc
movsb
inc
sbb
and
jno
cld
and
pushw
ja
jecxz
push
fdivrs
enter
movsb
mov
mov
mov
or
dec
xchg
add
lds
popf
add
add
push
mov
cmp
xchg
mov
cmpsb
and
or
xchg
popf
popf
sbbb
add
jo
mov
push
sbb
cmp
inc
xor
add
sbb
xor
cmpl
sub
pop
aas
lock
cmp
pop
repnz
pop
js
cmpsb
jne
loope
pop
jecxz
add
sti
cmc
fs
pop
js
int
faddl
cld
cmp
push
mov
mov
test
popa
out
arpl
jnp
xchg
mov
movsl
pop
rclb
pop
sbb
hlt
mov
xchg
dec
loope
imul
call
insl
sbb
inc
lcall
repz
push
xchg
mov
gs
xor
xor
push
lock
xor
jp
sahf
dec
sbb
notl
pop
sub
pop
into
jnp
mov
pop
cmc
cmc
fs
fs
leave
xor
xor
and
xchg
xchg
mov
je
mov
fstps
push
shll
mov
push
mov
push
pop
and
ret
test
les
icebp
jmp
popf
inc
adc
pop
jns
daa
xor
sahf
xor
xor
adc
pop
imul
popf
inc
aam
sub
inc
lret
push
fidivl
outsb
or
xchg
push
imul
cwtl
scas
sbb
lret
cld
pop
das
inc
or
lock
aam
std
aaa
mov
insb
cmc
mov
cmp
loop
frstor
lea
loope
cltd
fisubl
ss
movsb
sbb
mov
jmp
insb
add
lock
cmp
gs
xor
mov
shr
inc
pusha
push
add
jb
rolb
leave
cmp
or
xchg
and
mov
xor
stos
push
data16
dec
dec
sti
adc
push
iret
mov
stos
stos
xchg
dec
pop
loop
jne
inc
addl
or
dec
lods
pop
adc
push
jbe
xchg
adc
xchg
mov
outsb
push
movsl
cmp
cmpsb
mov
aam
outsb
rcrb
jnp
aad
cld
sbb
cmp
imul
xchg
add
pop
out
mov
es
lods
xor
jns
cs
clc
out
inc
lahf
xchg
sub
xchg
cwtl
pop
pop
sub
adc
cltd
xor
add
jp
mov
movsb
pop
and
outsl
aam
scas
rcrl
cmp
jno
add
jmp
inc
outsl
push
insb
dec
push
movsl
filds
pop
jnp
push
fistl
jno
inc
stos
out
aas
in
in
xor
push
fstpl
ret
lret
mov
add
es
adc
scas
push
ja
insb
ja
in
popa
adc
pushf
cmp
xor
xchg
add
mov
jbe
ret
cmpsl
sub
ret
jg
arpl
or
dec
dec
dec
das
cmp
stos
inc
scas
cmp
cs
divb
or
sbb
adc
mov
aas
cltd
jno
mov
adc
rcll
ja
adc
push
aam
sbb
data16
cmpsb
or
inc
and
xchg
cmp
pop
addr16
inc
pushl
stc
imul
sub
mov
dec
jo
xor
repnz
into
mov
sti
cmc
cmp
int3
test
nop
jg
pop
mov
jne
call
shll
and
dec
int3
or
arpl
sbb
cmp
pop
push
popf
mov
clc
add
lock
gs
stc
pop
mov
push
inc
push
jle
add
jmp
icebp
jmp
push
cmp
repnz
sub
out
rorb
loop
popa
shlb
imul
lods
jnp
mov
mov
jge
gs
enter
loope
scas
loop
sbb
pushf
mov
sti
xchg
mov
jb
jb
sbb
push
cmp
lds
inc
movsb
jmp
xchg
xor
mov
in
push
int3
mov
mov
or
in
leave
xor
jl
pop
lret
imul
arpl
xor
mov
cld
loopne
adc
adc
and
cmp
mov
lahf
pop
sub
and
mov
dec
cltd
loopne
push
lds
mov
mov
arpl
mov
js
cmp
pusha
fiadds
test
das
popa
out
icebp
jnp
mov
jp
js
jno
and
xchg
xchg
sarl
mov
ficomps
data16
mov
xchg
fxch
hlt
or
adc
ds
jmp
cmp
stos
xor
ljmp
push
mov
mov
or
test
adc
in
xor
sbb
stos
test
imul
adc
in
xchg
cmp
cmpsb
cmpl
pop
mov
cmp
adc
stos
iret
jns
sahf
ret
sbb
test
jmp
cltd
aad
jmp
sahf
orl
movsl
push
mov
or
fwait
mov
mov
push
sub
out
into
lock
aad
shll
ficompl
xlat
cmc
and
mov
cli
xchg
cmp
inc
sbb
adc
aaa
lea
lahf
sahf
sahf
mov
imul
dec
adc
cltd
pop
or
das
movsb
pusha
in
je
xchg
cs
nop
dec
add
frstor
cli
add
jbe
pop
sub
mov
jp
xlat
xor
mov
aam
dec
pop
jmp
rcrb
or
xchg
ds
push
or
pop
or
xor
xchg
mov
and
pop
daa
inc
fbstp
jl
mov
dec
xchg
sbb
pop
mov
aaa
lods
mov
rcr
mov
pop
push
sub
cmp
fimuls
or
das
hlt
daa
sbb
fstps
xchg
adc
ljmp
je
jl
aas
aad
mov
test
into
cs
leave
testl
movsb
xchg
rolb
fistl
pop
sub
mov
mov
call
popa
add
out
xchg
cmpsl
out
xchg
mov
xchg
dec
mov
lea
jp
and
mov
scas
nop
jb
mov
mov
nop
imul
xor
jne
pop
jge
dec
clc
repnz
imul
push
in
push
mov
xor
call
les
in
ret
movsb
scas
add
pusha
cmp
sbb
mov
pop
mov
jo,pn
testb
or
aad
lret
in
dec
xchg
cmpsl
movsl
push
negl
inc
xor
xor
push
iret
sbb
fdivrp
idivl
sti
cmc
cmp
pop
inc
mov
fcmovb
out
cmc
jg
dec
dec
mov
mov
stos
lret
mov
int
int3
ljmp
ret
aam
fistl
testl
push
test
test
daa
imul
mov
repnz
mov
xor
dec
shl
pop
inc
xchg
add
jo
int3
daa
pop
cmp
inc
aaa
xchg
pop
movsb
adc
lock
movsb
xlat
mov
rcll
add
je
iret
sahf
test
xchg
stc
jae
mov
ds
aam
mov
xor
str
lods
fs
or
mov
in
jg
push
mov
lcall
mov
xchg
adc
jp
test
loope
addl
or
pushf
psadbw
lcall
insl
mov
das
xchg
nop
xor
sahf
aas
mov
mov
in
cltd
fbstp
cmp
icebp
mov
mov
push
decb
imul
adc
pop
pop
adc
jb
fcoms
and
outsb
jae
adc
sub
in
pop
pop
mov
jno
decb
inc
cwtl
adc
adc
or
shrb
push
inc
mov
faddl
imul
lcall
in
lock
sbb
push
push
dec
lret
pop
add
add
insl
dec
mov
lahf
xor
sub
imull
cmc
mov
mov
fidivl
rdmsr
ror
jo
loope
test
mov
rcrl
push
mov
loopne
sub
insl
xchg
adcl
leave
cwtl
mov
mov
stos
xchg
repz
ds
sbb
mov
or
repnz
movsl
pop
jns
stos
cli
adc
mov
dec
negl
mov
pop
lods
cmc
stc
pop
out
xchg
pushf
lret
pop
jmp
xchg
inc
bound
cld
incl
jbe
cmc
aad
stos
rorl
mov
mov
repnz
push
lret
ss
mov
fcoml
addr16
insb
and
in
pop
imul
mov
arpl
ficomps
xchg
and
jecxz
mov
mov
aas
mov
push
inc
xlat
adc
lods
aad
sub
mov
xchg
dec
data16
or
rcl
movsb
cmc
cmp
stc
mov
add
test
or
xor
subl
or
sub
xchg
popf
cltd
out
xchg
int
imull
mov
imul
cmpsl
cltd
inc
sub
ret
imul
bound
xor
test
imul
adcl
mov
and
push
jo
mull
mov
icebp
add
aaa
mov
sub
aam
xchg
mov
xchg
popf
cli
sbb
lds
lods
fs
ss
fmull
xlat
bound
scas
jg
andb
xchg
inc
pop
xor
cwtl
iret
mov
in
pop
pop
repz
lcall
cmp
mov
pushl
adc
stos
cmovno
das
out
lods
push
xchg
clc
cmpsl
shlb
decb
pop
arpl
add
add
outsb
sub
sbb
push
sbb
inc
mov
loopne
jmp
mov
out
pop
mov
or
xchg
es
mov
sub
cmp
das
fcomip
insl
insb
out
in
outsl
add
mov
inc
cwtl
xlat
mov
pop
cmp
mov
scas
sbb
lahf
jne
sub
push
rolb
xchg
mov
jge
leave
stos
or
movsb
and
cmpsl
cmp
inc
in
jbe
lret
xor
ljmp
fsubrl
xor
mov
pop
faddl
sbb
mov
repz
enter
xlat
mov
testb
mov
test
movsl
fnstsw
jge
jno
cli
ds
mov
jns
fwait
and
lret
xor
mov
insl
test
adc
mov
push
mov
sti
int3
mov
out
push
dec
sub
mov
push
jle,pt
out
mov
mov
inc
push
jns
mov
nop
xor
stos
lahf
je
adcl
js
test
mov
scas
mov
lret
imul
pop
ds
cwtl
aaa
leave
fiadds
jns
das
hlt
addr16
dec
gs
jmp
or
push
mov
inc
incl
push
jge
jbe
xchg
mov
testl
cmp
push
lcall
jne
or
in
out
lea
cmpsb
mov
je
add
add
lods
out
mov
fadds
fidivrs
pop
mov
shlb
dec
sub
lcall
inc
xchg
inc
movsl
dec
adc
les
gs
mov
dec
ret
jp
stos
pop
fistpl
push
cmp
jecxz
adc
rclb
mov
jno
pop
movsb
mov
cmp
sub
mov
fnclex
pop
inc
fnstcw
aas
xchg
cltd
pop
shl
outsb
pop
stos
ret
test
jmp
push
push
dec
push
xorb
inc
add
shrl
sarl
or
out
daa
iret
test
loope
sbb
and
daa
mov
out
cli
and
mov
test
dec
fistl
mov
cli
jnp
inc
jmp
bound
aas
push
cld
xor
sarb
inc
sub
jecxz
inc
add
adc
int3
add
les
cli
repnz
sbb
xor
adc
inc
arpl
mov
repz
test
push
leave
scas
cltd
sti
inc
shll
push
mov
cli
xor
icebp
in
mov
sahf
xor
sbb
pop
orb
jbe
mov
mov
or
push
out
out
fcoml
mov
and
jo
mov
popa
shrb
dec
inc
and
mov
xchg
mov
std
dec
insb
or
mov
stc
jmp
cmc
push
adc
mov
push
shrb
adc
loope
and
mov
pop
fisubrl
xchg
lahf
lret
xor
lcall
ja
inc
scas
rolb
mov
adc
pushl
push
sub
ret
inc
icebp
inc
dec
stos
mov
pop
xor
cmp
or
mov
jbe
dec
inc
ret
jne
loopne
fsubl
cmpsl
int3
dec
je
aaa
in
lahf
jge
rorl
fdivrs
repz
cmpsb
mov
cld
outsl
or
iret
push
iret
fists
xchg
and
pop
xchg
cmp
mov
std
ret
les
ja
pop
aam
xlat
insb
sub
data16
imul
xor
lea
inc
sbb
xor
mov
cmp
fwait
mov
ret
shl
les
push
mov
test
and
mov
into
xor
mov
ja
ds
outsb
aad
std
mov
imul
int3
xor
xchg
mov
cmp
pop
jo
js
xorb
sub
leave
test
and
inc
pop
movzwl
repnz
call
gs
jbe
arpl
and
push
aaa
mov
gs
or
scas
cmp
imul
mov
jg
mov
push
dec
push
push
popa
test
in
lods
cltd
pop
xor
pop
push
jge
mov
inc
fsubl
or
movsb
fxam
mov
bound
mov
and
mov
hlt
popa
test
xchg
jnp
movsb
insb
dec
loope
sbb
xor
daa
int3
aad
mov
xor
popa
cli
into
sarl
xchg
stos
mov
mov
std
sub
mov
clc
mov
xor
push
dec
mov
orl
add
addb
out
lcall
xor
mov
mov
stc
out
inc
mov
mov
es
add
dec
jne
xchg
xchg
cmp
es
out
xchg
ljmp
or
push
mov
addr16
dec
int3
rcrl
xchg
xorl
je
int
out
lock
lret
clc
xor
mov
and
cmp
cmp
mov
insb
lea
xor
cmc
xchg
mov
add
mov
xchg
mov
mov
push
and
jge
jae
out
jecxz
cmc
scas
fsubr
mov
dec
mov
push
inc
repnz
dec
pop
dec
sbb
sbb
pop
js
dec
xchg
addr16
jge
test
cltd
push
push
cld
push
and
cli
xor
or
push
add
shl
pushaw
sti
ljmp
ficoml
pop
mov
nop
dec
cmpsb
push
push
pop
test
push
aam
pop
pop
ljmp
lods
and
push
xchg
and
mov
cmp
fstpl
movsl
and
int3
xchg
inc
cmc
jle
idivl
mov
loop
sbb
pop
xor
sbb
mov
mov
xchg
inc
loope
jl
out
sub
test
stos
ret
or
mov
xchg
mov
subl
inc
mov
and
sub
jge
xchg
dec
push
movsb
mov
lcall
sbb
lods
cld
int3
add
sub
push
add
or
dec
or
adc
sub
xlat
push
jmp
pusha
xor
and
sub
mov
jmp
pop
je
jge
mov
push
and
cmovle
cmc
imul
test
pop
pop
push
andnps
and
xor
cmpsb
cmp
sub
cmp
cmp
mov
fdivrl
cmp
ret
mov
int
jl
xor
cs
sahf
push
mov
adc
mov
imul
icebp
int
ficompl
mov
inc
fisttps
add
jecxz
pop
aas
leave
hlt
ljmp
jl
sbb
mov
lods
jae
lea
loopne
loopne
inc
call
pop
loope
xchg
addb
icebp
es
roll
ret
or
ds
pop
flds
xor
inc
mov
adc
js
repz
and
jmp
stc
ja
imul
adc
xchg
addl
xor
sub
cmpsb
dec
inc
stos
sbb
mov
jnp
stos
ret
pop
push
imull
sub
dec
pop
out
sbb
stos
xchg
aad
stos
pop
xchg
jle
inc
sub
dec
fnstenv
pop
cmp
pop
cmp
pop
aam
fisttpll
pop
and
hlt
xor
or
sbb
iret
mov
inc
ret
sbb
bound
aas
mov
and
mov
icebp
sub
pop
xchg
dec
test
pop
adc
xor
data16
sub
add
mov
stos
mov
jb
nop
jo
data16
push
cld
xor
dec
cs
ret
in
scas
xor
pop
repz
jg
insl
adc
sub
sub
jne
xlat
shlb
xchg
add
dec
or
dec
aad
movsb
or
fisttpl
inc
leave
sub
add
shrl
jae
or
sub
mov
ds
outsl
mov
add
and
pushf
xchg
pop
ja
loope
ljmp
dec
inc
lock
lret
push
leave
outsb
pop
ja
push
ret
jns
cmpsl
cmc
loopne
adc
mov
adc
pop
call
test
rcr
stc
xor
dec
push
cmp
jns
data16
xchg
mov
add
cmc
insl
leave
rorb
add
gs
add
cmp
adc
loop
sbb
pusha
hlt
and
test
jmp
imul
sbb
xchg
xor
push
insb
into
ret
outsl
inc
jne
push
xchg
adc
dec
and
repz
sbb
cmp
push
adc
loop
in
stos
inc
adc
fwait
loopne
mov
inc
aaa
lds
inc
inc
hlt
push
mov
neg
in
int3
push
mov
inc
mov
cld
sbb
scas
push
pushf
cmc
push
sbb
jnp
pop
cmpsb
sbb
daa
popf
inc
in
xor
adc
dec
push
negl
jo
aam
imul
std
xor
xchg
scas
jno
mov
test
cmpsl
xor
xor
icebp
adc
jns
or
mov
cmp
mov
jg
es
mov
xchg
lea
mov
add
loopne
push
jae
inc
xchg
pop
cmp
aad
or
jno
adc
mov
xchg
sbb
das
dec
in
hlt
pop
imul
dec
or
pop
mov
idivl
xchg
inc
xchg
nop
pushf
movaps
xchg
push
xlat
xchg
aaa
mov
inc
push
add
js
and
data16
cmpsl
sbb
ljmp
pushf
dec
fdivrl
stos
and
out
negl
jae
ficomps
push
mov
data16
xchg
jnp
xlat
ds
icebp
adc
data16
stos
or
inc
pop
jp
cmp
es
ja
aad
lret
aad
lahf
stc
insl
mov
cmp
or
sub
repnz
jle
pop
ds
cwtl
jmp
jecxz
je
or
out
pop
lcall
mov
aaa
or
daa
jnp
cs
xor
mov
cs
xor
cmp
add
dec
lea
push
stos
dec
or
adc
add
sbb
sub
insb
mov
and
add
stos
cmpsb
sti
inc
push
stos
push
sbb
pop
push
mov
push
or
adcl
ret
out
sub
ljmp
xor
push
dec
test
ds
cmp
js
fcmovnu
rcrl
stos
add
pop
adc
cli
outsl
xor
jp
inc
inc
or
lods
iret
cmp
dec
xchg
pop
lret
in
or
rcrb
ficompl
fldenv
outsb
mov
xor
cmp
mov
push
add
iret
dec
scas
subl
or
leave
mov
sub
scas
in
or
loopne
cwtl
ret
sbb
mov
or
xchg
mov
sahf
shl
jo
jbe
daa
stc
inc
shll
hlt
xchg
andl
fcmovu
sbb
ss
cmpsb
popf
cmp
inc
adc
cmpsl
mov
int
add
std
push
clc
sahf
and
scas
push
cmp
jmp
sub
and
xlat
jle
std
xlat
icebp
xor
sub
dec
sbb
insb
xorl
inc
push
pop
pop
inc
stos
decl
jmp
shll
mov
xor
or
cmp
pop
gs
pop
mov
insl
inc
add
or
jge
rcr
out
ret
std
inc
push
mov
xor
pop
inc
stos
add
mov
shl
pcmpeqd
cmp
mov
and
mov
jle
adc
mov
xor
xchg
sub
mov
lcall
pop
leave
sub
je
sub
lods
sub
pop
sbb
mov
xor
pushf
in
mov
xchg
mov
jmp
das
inc
mov
inc
or
fcoml
cmpl
add
xlat
out
out
loope
dec
adc
js
adc
add
cmp
dec
daa
shlb
addr16
mov
or
stos
and
enter
mov
fildll
xchg
out
pop
leave
adc
pop
inc
mov
pop
sbb
inc
mov
add
jmp
push
pop
xor
inc
and
sub
lcall
cmp
aas
jae
dec
outsl
rorb
jae
mov
popf
pop
int
nop
lock
jp
add
ljmp
ds
fldl
insb
mov
inc
or
leave
sbb
mov
mov
add
pop
adc
sbb
pop
fwait
mov
push
loopne
inc
lret
cli
shlb
loop
cmp
dec
lcall
jg
add
mov
int
cld
leave
nop
jnp
loopne
mov
loop
call
add
in
or
sbb
inc
or
add
jne
and
addr16
push
xchg
ud1
addr16
add
mov
jb
and
pop
cmp
inc
and
loopne
in
ss
out
rcrl
and
mov
mov
shrl
jno
je
hlt
into
sub
das
sbb
fimuls
xchg
sbb
loop
sbb
and
push
stos
test
inc
cli
mov
shrb
orb
fists
add
inc
inc
jno
ja
pop
cmp
sbb
add
or
gs
mov
les
sub
or
stos
movsl
out
pop
push
mov
loope
andl
push
push
nop
xchg
add
mov
insb
and
sub
lret
or
cmp
add
adc
add
fmulp
leave
sbb
push
push
xchg
jecxz
les
aaa
sbb
sub
test
mov
dec
or
push
pop
sbb
fcom
mov
daa
inc
fadds
cmp
lret
push
cmp
aam
pop
or
shll
cmp
cwtl
and
ficoms
hlt
aas
cmp
inc
insb
push
in
repz
sbb
bound
ret
lods
mov
js
mov
insb
int3
pop
cmpsl
sub
xchg
test
mov
pop
int
or
jl
push
fisttpl
xor
bound
push
repnz
mov
lock
mov
insb
dec
pop
inc
cmpb
mov
out
jns
dec
stos
xchg
pop
std
fadds
sbb
jmp
imul
ljmp
mov
shlb
dec
jmp
mov
mov
es
out
aas
push
sar
adcl
out
out
loopne
outsl
sub
bound
loope
mov
shll
xchg
pop
inc
mov
jb
shlb
xchg
fs
fs
sub
iret
fdivrs
xchg
out
cmp
jnp
adc
add
sub
jl
cmc
xor
roll
adc
pop
or
cwtl
out
std
dec
jge
inc
in
and
imul
xchg
mov
inc
pushf
repnz
xchg
mov
lea
test
insb
mov
imul
mov
sti
cwtl
ret
clc
cmovg
repnz
call
dec
dec
pop
or
rcr
or
sbbb
popf
ficoms
inc
sbb
pop
fmuls
lret
mov
mov
add
enter
inc
cld
lcall
mov
aad
shlb
jecxz
pushf
inc
fiaddl
mov
lock
jl
inc
or
sahf
adc
xchg
add
push
loop
movsb
adc
shrb
out
jle
popa
loope
into
loop
sbb
or
inc
fisubs
rorb
cmp
ror
ret
in
ljmp
shrb
mov
mov
dec
push
xor
jmp
sbb
mov
xchg
lcall
jne
mov
nop
ja
outsb
inc
push
cmp
lea
adc
push
call
xorb
clc
xchg
xchg
rdtsc
add
cs
rorl
sbb
loope
xchg
sub
push
addl
int3
inc
fcoms
mov
enter
das
xor
int
lods
or
pop
cs
bound
or
xorl
mov
pop
and
jbe
sbb
pop
fcomp
sbb
test
pop
jmp
fstpl
sub
popw
adc
inc
pusha
mov
or
ss
insb
inc
push
pminsw
jne
aam
xor
imul
jno
lea
dec
and
pop
dec
dec
and
out
xchg
cltd
stc
pop
fcomip
nop
lret
push
jecxz
push
inc
sbb
xor
das
fs
in
and
jle
testl
inc
fsubrs
out
jl
icebp
sbb
add
bound
sti
scas
sub
fists
mov
and
pop
insl
mov
faddl
push
push
inc
je
or
out
fidivl
sbb
dec
rcll
data16
xlat
sbb
scas
iret
adc
imul
xchg
or
out
outsb
out
dec
inc
into
adc
xchg
add
cmp
push
jno
pop
sub
enter
into
pop
and
mov
cmpsb
ret
inc
cmpsl
and
sbb
push
xchg
je
lret
je
jo
xchg
inc
sbb
ret
sahf
adc
add
mov
mov
adc
psubd
add
mov
les
stc
adc
sub
lods
and
jns
mov
test
mov
mov
xor
mull
push
negb
xchg
inc
scas
shlb
jge
aaa
js
jne
adc
ds
paddq
xchg
addr16
fnstsw
loopne
mov
js
jnp
mov
mov
gs
mov
xlat
or
add
lret
leave
out
in
push
pop
add
push
xor
dec
push
and
add
jge
or
hlt
repnz
jecxz
sti
lahf
inc
inc
mov
lods
mov
jecxz
and
in
or
push
fsts
xor
ret
add
fisttps
add
jmp
aaa
xchg
inc
adc
andb
ficomps
push
jge
xchg
adc
scas
test
lock
arpl
adc
fisubrs
ljmp
mov
xorl
stos
loope
sbb
popf
pop
cmpl
addr16
ss
mov
push
ficomps
mov
pop
xor
add
xlat
fimull
and
into
pushf
adc
dec
fwait
in
or
loope
rorb
ficoml
pop
sar
or
xchg
dec
and
inc
push
fisubrl
adc
lret
aam
jmp
fisubrs
jecxz
pop
and
lret
sub
pusha
add
pop
arpl
lcall
inc
mov
pop
push
pop
pop
xlat
pop
xlat
adc
lds
test
or
testb
xchg
test
aas
mov
fnstsw
xor
out
aam
fdivr
fisttpll
ror
jns
and
dec
xchg
cltd
stos
idivl
ljmp
sub
or
popa
sbb
pop
pop
ret
mov
loope
xor
mov
popf
je
mov
mov
dec
push
jb
xchg
cmp
or
or
stc
mov
rcrb
cltd
lret
dec
das
sub
mov
orb
lret
push
pop
or
pop
push
stos
js
jp
fsubs
out
mov
push
mov
xor
mov
out
mov
pop
pop
subb
lret
je
pop
aam
sbb
push
out
fisubrs
jns
repnz
cld
and
xor
stos
xchg
mov
add
repnz
jmp
je
lock
cli
fucomp
add
mov
cltd
sub
bound
lods
ret
negb
out
cmp
mov
push
mov
mov
mov
rcr
pop
out
xor
andl
test
jg
ret
mov
scas
jmp
push
push
add
fsts
hlt
push
imul
inc
pop
jo
mov
dec
and
sub
xchg
pop
push
or
inc
push
sbb
pop
dec
xchg
mov
or
xchg
xchg
gs
fstpl
pop
movb
in
xor
fstl
inc
faddl
dec
out
push
jle
std
aas
adc
and
leave
movsl
mov
mov
pop
leave
cld
std
sbb
fstps
mov
push
pop
ss
jl
ret
add
jno
inc
stc
mov
sub
or
sub
popa
sub
sub
xchg
or
lret
std
test
rcrl
addb
and
mov
sbb
negl
fdivs
push
push
jecxz
mov
je
insb
aaa
popf
xor
addr16
or
add
push
and
add
mov
adc
std
add
mov
add
fdivrl
xchg
jl
dec
shr
push
jecxz
pop
push
cwtl
stos
push
rorl
leave
add
xor
and
pushf
arpl
outsb
xor
add
mov
inc
pop
in
cltd
jb
xchg
dec
xchg
movq
leave
pop
dec
gs
leave
mov
imul
xor
pop
mov
add
iret
xchg
test
pop
mov
xor
leave
gs
sbb
sti
lea
push
or
out
jne
push
rcrl
lret
cmpsl
addl
and
bound
xor
adc
out
push
push
mov
push
mov
xchg
push
lea
pop
push
jg
mov
mov
fisttpll
pop
fildl
pop
push
sub
push
dec
sbb
push
xor
jno
or
shlb
and
jns
pop
ss
and
pop
inc
inc
cmp
and
dec
cwtl
pop
mov
mov
sahf
dec
mov
incb
mov
xor
test
lds
fisttpl
dec
mov
aam
dec
movb
xor
jne
cwtl
in
cmp
add
dec
cmp
dec
mov
fsubr
xchg
inc
cmp
jnp
stc
inc
fcmovnb
int
stos
pop
mov
scas
cli
cld
sub
pop
fmul
sub
test
cmpsb
test
jg
mov
pop
cmp
mov
sub
sub
lods
sub
xchg
mov
ficomps
adcb
dec
subb
int3
paddsw
shrb
xchg
mov
adcl
jge
loopne
mov
adc
aad
xor
jbe
leave
movsb
ljmp
xor
or
fwait
xor
loopne
enter
in
andl
mov
ljmp
lcall
jle
fisubs
xchg
cld
das
stc
mov
or
imul
clc
stc
jnp
lret
mov
jecxz
out
adc
mov
and
mov
jbe
push
cmp
push
cmpsl
xchg
call
nop
push
dec
aam
jle
adc
and
cmp
sub
dec
add
sbb
cwtl
xchg
adc
clc
jg
mov
insb
insl
jp
add
inc
sarb
rcll
movsb
orl
pop
out
test
fsubrl
adc
jnp
and
inc
std
push
xor
xchg
mov
test
sbb
xchg
call
orl
lahf
outsl
sti
jnp
xor
or
xchg
fsub
xchg
cltd
or
test
jbe
mov
pop
arpl
mov
push
adc
adc
sub
inc
and
outsb
xlat
pop
xorl
arpl
in
daa
or
out
or
or
and
adc
in
popf
repnz
xor
mov
mov
ficoml
xor
ret
outsl
push
mov
and
fists
in
in
mov
flds
fisubrl
jg
xchg
test
ds
inc
pop
movb
adc
lret
fs
dec
sti
movsl
xor
pop
push
sti
mov
scas
and
cwtl
jae
jp
xchg
ss
iret
add
stc
mull
ret
lea
pop
ljmp
outsl
add
xor
test
sti
xlat
cmc
sbb
ret
jno
xchg
or
cld
and
pushf
sub
sbb
mov
xor
sbb
cld
pop
or
xor
dec
lods
jb
lods
fs
jnp
jg
fbld
movsl
lea
inc
mov
sbb
xchg
add
div
cwtl
test
or
ja,pn
ljmp
bound
and
pop
adc
and
sub
mov
scas
or
leave
xchg
inc
sub
shl
adc
lcall
and
es
loope
ret
dec
gs
loope
xor
inc
inc
cmp
push
push
adc
dec
push
jo
insl
xchg
push
adc
cmp
adc
jmp
repnz
aaa
jns
adc
dec
test
add
inc
das
xor
push
push
cld
push
sbb
mov
paddb
mov
jge
insl
fsts
sub
adc
xchg
or
pop
cmp
mov
and
cmpsl
out
inc
fstpl
rcr
mov
test
roll
sahf
xchg
mov
daa
lods
adc
jge
test
fwait
jnp
add
jle
sbb
int
mov
xchg
mov
cmp
mov
push
dec
push
outsb
sar
adc
mov
fcmovnbe
out
sbb
test
inc
jbe
mov
ret
add
xlat
lods
cltd
xchg
dec
sub
jmp
mov
roll
pop
loope
xchg
jo
outsl
mov
cwtl
repnz
mov
outsl
loope
cmpsl
adc
rcl
pop
fistpll
xor
push
ss
inc
lods
loope
xchg
pushl
push
sub
cld
aam
add
add
xchg
hlt
adc
mov
divl
iret
mov
add
mov
fldt
push
xor
scas
jno
xchg
out
push
out
mov
adc
or
adc
add
outsb
xchg
or
cmc
cmp
dec
push
pop
xchg
mov
mov
fadds
stos
dec
jne
cs
frstor
sub
div
pop
mov
daa
nop
out
add
lret
faddp
sub
push
enter
mov
out
add
out
shrl
push
adc
sbb
sub
je
call
mov
mov
loop
dec
clc
clc
add
push
jecxz
lret
or
push
es
push
rcrb
ret
xchg
cmpb
shll
inc
pop
pop
test
xchg
push
add
xor
xchg
stc
in
sbb
sub
dec
cmp
push
es
jns
imul
repnz
je
loopne
loop
cli
push
mov
orl
mov
inc
out
pop
into
lret
sbb
ss
dec
jl
iret
hlt
xchg
test
pop
inc
leave
clc
lods
outsl
add
sbb
pminsw
inc
call
or
js
cmpsb
pushf
or
outsb
sub
dec
cli
add
xchg
adc
dec
stos
divl
out
test
mov
sub
push
popl
sub
aam
leave
jo
or
jle
sbb
js
mov
test
es
pop
push
mov
or
cmpsb
call
lods
xor
fcmovbe
ss
mov
pop
add
jne
repnz
cmp
or
divl
cmpsl
pop
incl
iret
add
mov
mov
lock
int3
xlat
test
mov
adc
gs
out
mov
out
arpl
mov
aam
push
mov
mov
lock
push
lahf
jno
jecxz
hlt
adc
xlat
mov
mov
in
sbb
xchg
inc
rorl
pop
sbb
inc
scas
sar
mov
push
test
sar
xor
out
ja
testb
js
and
jne
lahf
shl
shl
fstpt
insl
adc
mov
push
mov
rorl
lock
sarl
add
lcall
in
cmp
cmc
jp
ret
cmp
test
lods
push
ja
mov
mov
sbb
stos
mov
jne
jp
xor
xchg
xchg
mov
ret
call
shr
stc
pop
xchg
inc
arpl
jb
mov
push
inc
mov
jp
test
adc
mov
dec
addl
ret
hlt
push
jno
mov
das
scas
pop
or
mov
xchg
fwait
mov
xor
mov
inc
das
push
jbe
push
pop
addl
cmp
mov
pop
add
adc
js
lret
cli
mov
aas
xchg
mov
cld
fs
fmull
call
jmp
sub
jns
or
popf
fbld
in
dec
in
adc
movsb
hlt
mov
lret
scas
lock
xchg
aad
out
pushf
cmc
inc
frstor
jne
mov
js
adc
mov
mov
xor
jbe
out
cmp
mov
imul
mov
jae
xchg
aas
xor
cs
mov
jge
fnstcw
adc
testl
mov
mov
or
lret
ja
xor
sbb
popf
mov
rcr
repz
inc
sti
sbb
pusha
add
jge
push
cld
sahf
sub
enter
mov
xor
fiadds
push
dec
adc
insl
dec
xor
pop
leave
addr16
add
in
sbb
shlb
call
cmp
shrl
test
xchg
imul
or
ret
cmpsb
in
jmp
mov
hlt
inc
or
dec
test
push
psllq
loop
cli
xor
jl
outsl
mov
xchg
mov
jmp
mov
fwait
adc
testb
xchg
sub
pushf
into
cmpsb
mov
pop
mov
push
push
push
mov
or
xor
leave
mov
push
pop
xchg
cmpsl
dec
subl
jno
sub
movsb
mov
pop
mov
pushf
or
xor
and
jp
test
sub
mov
loope
mov
mov
xor
jo
push
out
dec
movsl
and
xchg
xchg
or
push
add
imul
jo
pop
or
xor
mov
pushf
cmp
jne
loop
pop
movsb
leave
mov
hlt
push
orl
lret
add
cmc
mov
add
mov
out
lret
insb
ffree
push
or
daa
pusha
xchg
sub
jnp
xchg
bound
dec
push
push
cmp
mov
mov
xor
iret
dec
fdivr
jne
insl
imul
mov
mov
sub
shl
dec
test
mov
out
pop
push
dec
jge
in
stos
stos
rcrl
inc
pop
popa
repz
jl
cwtl
adc
pop
sbb
clc
aad
inc
push
inc
std
cltd
shlb
inc
sbb
mov
iret
sub
movsl
sub
cld
pushf
jg
in
fistl
xor
and
push
push
xchg
repnz
ret
les
stc
pop
arpl
enter
fwait
rcll
aam
mov
pop
and
pop
pop
das
jo
mov
push
inc
mov
hlt
cmp
les
scas
js
repnz
int
push
mov
addr16
xor
sarl
cmp
xchg
add
ds
test
jle
jp
inc
scas
iret
leave
cmp
call
out
inc
or
insl
test
icebp
pop
or
mov
pushf
bswap
lahf
or
loop
lea
insl
loop
xor
cmp
and
xor
push
fs
mov
mov
and
fs
and
mov
cmp
fdivl
mov
roll
pop
test
pop
lock
push
push
jb
push
les
dec
pop
jnp
aad
jp
cmpb
loop
out
mov
jg
das
aam
or
cwtl
nop
and
add
adc
in
aad
pop
sub
pop
jnp
pop
or
xchg
jmp
push
gs
test
lods
mov
test
mov
loope
adc
jno
call
fucom
jnp
dec
loope
jp
subb
mov
popa
lods
outsb
fimull
push
xor
xchg
push
out
outsb
push
lahf
pusha
mov
cmp
cmpsb
out
jns
inc
arpl
dec
cmp
adc
sbb
mov
dec
enter
dec
push
sbb
mov
subl
pop
daa
loop
scas
sahf
mov
orb
xor
xchg
sar
iret
aas
sub
ja
test
push
cmp
adcl
repnz
pop
call
or
fwait
mov
idiv
cmp
pop
fwait
dec
mov
inc
add
scas
push
xorl
xor
into
nop
xchg
imul
or
icebp
lods
rcrb
inc
inc
je
add
movsl
jo
cmp
xchg
jno
add
insb
xbegin
lret
es
cmp
push
or
loopne
cli
mov
test
ret
mov
nop
mov
mov
sub
lea
sti
sti
in
fcmove
cmpsl
add
sbb
and
pop
sub
popa
das
popl
cmp
push
jg
shlb
mov
test
imul
fdivl
xchg
adc
inc
aaa
push
cmp
int
leave
scas
out
dec
mov
mov
shll
lock
pusha
jns
cmc
lds
adc
loop
cltd
mov
xchg
mov
push
out
or
push
cmp
inc
addb
inc
insl
ljmp
pop
cmp
xchg
push
pop
inc
xor
jecxz
pop
cs
movq
adc
dec
pop
mov
shrl
ljmp
aad
push
adc
out
xchg
aam
insl
sbb
popf
pop
shr
pop
scas
mov
inc
pushf
shll
out
mov
icebp
xor
in
push
adc
jge
into
pop
js
popf
push
jbe
pop
add
and
pop
cmp
add
aam
inc
xchg
loopne
xor
insl
fcoml
aad
rclb
mov
xchg
cmp
push
loope
fstpt
sub
nop
cmpsb
pop
fs
add
in
mov
flds
jne
les
mov
out
loope
nop
cmpsl
and
xor
outsl
jp
lea
adc
or
out
and
daa
outsl
sarl
cmpsl
fcmovb
popa
sarb
nop
nop
pop
aad
xorb
mov
mov
filds
lcall
xor
lahf
lret
and
sbb
xchg
xor
lods
jns
sbb
orb
and
fidivrl
dec
fwait
sbb
add
ret
sbb
xchg
insl
mov
and
or
xchg
ljmp
inc
movsl
lds
cmpsb
dec
jge
cld
lahf
cmp
rcl
jg
and
out
lea
or
and
inc
and
xchg
sub
scas
dec
lret
cmp
or
jno
in
mov
mov
mov
xorl
fiadds
jmp
push
mov
lret
clc
aaa
dec
xor
add
ret
divl
mov
push
arpl
mov
sahf
sbb
shr
mov
cli
les
sahf
mov
fdivrl
sub
in
ret
lahf
lock
jle
pusha
popf
fistpll
cmp
lahf
mov
xchg
xchg
add
cli
dec
rorl
iret
xabort
jns
lock
lds
push
es
add
test
das
mov
je
into
fcmovb
fwait
je
pop
pop
sub
sub
add
fwait
mov
in
push
cli
push
or
push
jle
and
sbbb
inc
outsl
pop
cmp
push
pop
stc
les
iret
xorl
jnp
in
lock
icebp
and
cmp
cwtl
cs
stos
push
sahf
cmc
mov
rorb
jns
ret
fidivrl
scas
shll
and
mov
mov
cmp
stos
dec
mov
sub
sub
mov
pop
fadds
stos
je
xor
insb
xor
imul
push
mov
jns
inc
cmp
ds
fxch
and
sub
jle
mov
xor
xchg
cmp
adc
mov
jnp
aas
movsl
and
jmp
lcall
xorl
pushf
push
mov
ffreep
inc
iret
sbb
std
inc
or
push
xorl
push
out
fbstp
testl
and
or
scas
or
rcrb
sub
mov
fdivs
cmp
mov
lgdtl
test
fidivl
in
out
clc
dec
adc
ret
in
stos
ja
inc
shlb
orb
push
xorb
sbb
aam
nop
pop
jne
sub
das
aaa
adc
jmp
push
mov
pop
jmp
push
push
push
push
mov
jnp
push
xchg
push
adc
outsb
psrad
add
push
xchg
pop
movsl
ja
sbb
add
mov
dec
popa
inc
jae
fbstp
adc
mov
ret
shl
je
sub
aad
leave
sbb
mov
stos
or
jmp
out
xor
in
or
aad
push
pop
pop
stc
jmp
mov
add
ss
cmpsb
call
xchg
lods
popf
enter
iret
mov
dec
fcmove
pop
mov
repz
inc
jp
rolb
dec
xchg
iret
lret
daa
cwtl
lret
cli
ja
sbb
sahf
cli
sti
sbb
push
xchg
dec
inc
je
stos
jge
jne
pop
mov
in
lock
add
sbb
dec
mov
mov
push
cmpl
adc
push
in
jbe
mov
lahf
sub
in
sbb
repz
xchg
mov
push
mov
xchg
std
xchg
fistpl
inc
push
add
scas
aad
nop
ss
dec
mov
jns
pusha
pop
std
jns
mov
or
int3
xchg
movsb
dec
xor
mov
adc
ja
imul
jp
aas
les
repnz
and
cmp
iret
sbb
push
and
cmpsl
inc
popa
loopne
push
mov
inc
out
adc
in
pop
inc
pushf
mov
fdivrl
popa
mov
or
and
in
push
dec
cmp
mov
mov
mov
fs
data16
push
imul
mov
pop
ret
jbe
in
push
cli
mov
mov
loope
xchg
cmp
adc
add
pop
dec
cmpsb
ficoms
add
sbb
xor
adc
fnstsw
imul
push
jmp
in
stc
loop
xchg
imul
mov
popa
loope
inc
repnz
mov
or
scas
orb
jb
jg
in
sub
mov
sbb
xor
mov
and
adc
dec
out
push
pop
testb
cs
add
push
xchg
sti
daa
sbb
fs
sarl
jbe
and
gs
ja
or
or
test
push
mov
fxch
sbb
pop
imull
mov
movsl
out
popf
loopne
mov
call
jle
pop
fstps
cltd
out
lret
jne
leave
inc
mov
out
es
addr16
mov
add
sub
sbb
fistl
testl
push
mov
inc
push
jnp
sub
xchg
sub
imul
sub
fbld
push
xchg
stos
mov
test
cwtl
fwait
pop
pushf
mov
xor
sub
add
or
push
jle
xchg
adc
push
pop
stos
inc
scas
icebp
fmuls
dec
ja
fdivrl
nop
jo
inc
js
imul
mov
inc
scas
pop
sub
lods
or
mov
lods
xor
bound
in
sbb
call
inc
push
sbb
cmp
cvtpi2ps
outsl
lds
fisubrs
subl
push
stos
aam
fisubrl
dec
bound
imul
push
xchg
dec
mov
mov
das
pop
add
or
sub
std
xchg
inc
cmp
xchg
pusha
testl
add
aad
sarb
or
cld
cli
test
ds
sub
in
into
inc
rolb
inc
insb
jns
insb
dec
pushf
pop
push
sbb
mov
lret
dec
xor
nop
jae
loop
js
xchg
mov
sub
loope
movb
xchg
mov
pop
aad
cmpsb
mov
movsl
mov
push
sbb
fsubp
pop
xchg
out
fildll
adc
nop
xor
jo
jecxz
shr
or
in
mov
mov
jmp
repz
dec
mov
nop
fcmove
data16
leave
in
adc
pop
jmp
pop
dec
and
jecxz
sub
das
out
inc
or
push
stos
nop
lret
dec
adc
aaa
jp
cmp
sub
adc
add
mov
fsubrl
mov
inc
iret
mov
mov
sub
cmpsb
jo
loopne
sub
loope
inc
loop
jl
mov
dec
and
mov
stc
test
icebp
jmp
dec
cli
sub
lcall
push
jmp
xor
adc
sbb
fisubrs
lods
mov
cmpsl
daa
push
sub
fistps
inc
imul
pop
adcl
sarb
mov
jns
inc
repnz
push
mov
int
jle
jl
out
fld
pop
lret
cs
pop
sbb
jmp
test
imul
push
xor
and
in
pop
stos
push
outsl
scas
mov
fwait
lret
mov
hlt
push
into
push
add
dec
cmp
rorl
fnstcw
fwait
sub
div
jnp
inc
add
cltd
and
pop
jg
test
add
std
and
call
mov
push
pop
je
rcll
cmpsl
push
ret
icebp
dec
mulb
pop
xor
push
pop
mov
mov
mov
dec
pop
pop
shlb
jbe
fucomip
dec
gs
int
lret
xchg
mov
scas
dec
pop
mov
mov
loop
lods
xchg
push
dec
rcrb
out
dec
and
movsl
pop
shll
scas
data16
popf
out
mov
and
in
push
sub
sub
push
pop
push
lret
out
add
insl
push
ja
mov
mov
cmpsb
scas
test
xor
mov
dec
aaa
jo
test
xlat
jnp
add
inc
lods
sbb
xlat
iret
jne
mov
and
test
inc
std
bound
and
faddl
push
icebp
or
sti
cmp
addb
xchg
push
jg
nop
es
push
or
in
xor
and
sti
mov
sub
imul
cld
push
lcall
mov
lret
pop
mov
out
imul
popf
sbb
iret
add
stos
mov
repnz
sbb
jg
in
repz
add
sub
mov
vprotw
stos
push
pop
dec
cltd
out
test
popa
pop
push
pop
xchg
outsl
test
jo
out
test
jns
outsb
xchg
push
mov
stos
out
dec
inc
stc
in
stos
inc
adc
fidivrs
mov
cmp
popf
sub
js
ficoms
xchg
lea
mov
jb
and
adc
and
loope
int3
push
cwtl
insl
xchg
pop
add
repnz
mov
aas
xor
shl
in
push
mov
aam
lret
lods
xor
sbb
dec
push
idivb
lret
imul
nop
dec
test
push
jmp
std
dec
xchg
adc
pop
nop
push
cmc
sti
dec
and
loopne
pop
mov
fimull
ret
add
roll
mov
call
imul
dec
loopne
in
out
mov
ret
jne
push
xchg
jo
stc
push
add
sti
out
xor
adc
pop
jno
cmp
or
mov
sbb
rorl
clc
popf
frstor
sub
testb
push
call
ret
push
repnz
or
and
test
xchg
imul
mov
push
notb
aad
and
loop
das
mov
mov
and
lcall
rorl
outsb
inc
adc
cmp
mov
jmp
movsb
mov
imul
sbb
mov
mov
add
mov
outsb
ljmp
insb
cmc
jne
dec
leave
pop
and
push
add
test
mov
shlb
jp
push
test
push
ljmp
repnz
push
adc
mov
pop
mov
pop
push
fiadds
dec
jge
stos
sbb
movsl
ficomps
cmp
xchg
and
mov
dec
enter
loop
pop
test
fiadds
add
pop
int3
xor
outsb
fwait
dec
mull
cwtl
imul
cli
sti
cltd
aas
adc
fsub
hlt
rcll
pop
xor
addr16
shlb
insl
ss
jnp
push
pusha
xchg
rol
lret
mov
adc
ja
cmp
mov
cld
lret
xor
push
lods
push
pop
inc
adc
das
in
stos
out
pop
leave
inc
sub
push
sub
xor
push
in
adc
cs
sub
sub
push
cmp
xchg
ss
and
mov
pop
popa
cmp
decl
data16
cmp
cmp
add
stos
cmp
aaa
outsb
int3
enter
aaa
ljmp
je
cmp
mov
hlt
ss
push
xchg
sbb
test
sub
add
test
arpl
repz
rorb
push
and
nop
push
xor
xchg
or
xchg
stos
in
fcompl
fcomps
rorb
mov
add
push
jmp
mov
or
jnp
ja
lods
xor
jbe
data16
xchg
push
and
dec
inc
xchg
jae
movl
das
fdivr
lods
fnstcw
movsl
sub
and
sbb
lods
cltd
add
cli
aaa
or
or
adc
xchg
or
jbe
xor
add
imul
lock
in
mov
push
push
loop
insl
and
mov
xchg
cli
or
fistpll
and
pop
pop
adc
shlb
pop
pop
out
jns
cld
std
lea
inc
cmc
dec
fisubs
in
mov
mov
fwait
call
xchg
int3
out
ret
loop
jns
daa
mov
push
test
push
xor
mov
leave
jge
xor
pop
cwtl
jle
out
cld
mov
gs
mov
inc
test
add
je
sti
das
fnstenv
adc
inc
dec
inc
add
mov
sub
fimuls
push
sarl
mov
cli
gs
stos
ja
jge
jle
xchg
or
hlt
adc
xor
aas
sarl
fsubs
mov
push
inc
mov
enter
cld
sub
mov
add
stos
cmp
mov
scas
cmp
mov
daa
adc
mov
ds
lea
inc
addb
jl
cmpsb
addb
push
push
push
mov
lcall
add
shl
cmp
xchg
lock
mov
lcall
rcrb
mov
adc
jae
inc
cmp
sti
repnz
or
sbb
jno
inc
xchg
vcvttsd2si
sti
icebp
es
nop
inc
in
mov
xchg
xor
xor
in
jle
and
and
out
or
popf
fdivp
insb
ljmp
push
loop
push
add
lods
leave
les
cmp
cmpsb
push
daa
xchg
add
bound
shlb
adc
pusha
push
cli
or
in
mov
fidivl
pop
in
in
push
loopne
in
popa
outsl
rorl
movsl
xchg
mov
push
in
outsb
sarl
and
aam
xchg
pmulhuw
and
test
stos
je
jl
adc
push
add
gs
push
int3
push
stos
xorb
in
daa
lea
out
and
dec
lods
xor
mov
aas
mov
cmp
ret
inc
push
and
mov
xchg
xor
in
mov
movsl
mov
sub
add
xor
nop
test
add
out
movsl
jno
add
push
adc
in
test
push
ljmp
pop
iret
cld
test
sub
jge
sti
imul
mov
pop
lahf
cmpsb
lahf
jl
xchg
ds
shlb
scas
jl
mov
in
add
xlat
imul
inc
sub
clc
icebp
ss
stos
lods
xor
pop
ret
push
sub
clc
into
data16
int
lret
lret
and
or
bound
shlb
sbb
and
xor
std
add
fcomps
inc
jb
hlt
into
loop
stos
inc
inc
jb
scas
iret
rorl
pop
iret
dec
fistl
pop
push
jmp
clc
mov
repz
adc
adc
adc
xor
fimuls
mov
mov
mov
loopne
cltd
xchg
add
xor
cmc
fwait
jmp
push
outsb
fnstenv
cmp
xor
cs
out
sti
call
xor
out
dec
cmpsl
mov
mov
push
jno
and
icebp
add
ljmp
ret
push
mov
push
or
and
repnz
ljmp
push
loop
cmp
mov
fwait
xchg
dec
dec
jbe
fwait
or
adc
lods
pop
es
jecxz
dec
pop
ret
popa
jge
faddp
mov
jp
cmp
xor
arpl
mov
jne
sub
xlat
push
lds
in
int
mov
sbb
leave
xor
icebp
xor
cwtl
cmp
jns
pop
insb
test
or
call
aaa
fs
ds
leave
mov
push
jmp
jmp
sbb
leave
fs
pop
test
push
mov
fwait
mov
clc
mov
sbb
mov
cmp
lea
clc
add
mov
lods
mov
fisubs
pop
imul
pushf
mov
push
sub
sub
insl
mov
addr16
daa
xchg
sub
loop
sbb
push
adc
jle
mov
sahf
addr16
xchg
mov
mov
movsb
xor
pop
fdivl
outsb
pop
cmp
nop
les
fucomip
test
jg
imull
cs
pop
ss
mov
test
insl
mov
jle
mov
pop
fwait
lcall
dec
cmp
mov
leave
push
sub
mov
repz
dec
mov
scas
sbb
sahf
iret
fwait
in
mov
jle
inc
mov
ss
xchg
pop
xchg
dec
xchg
xor
sub
arpl
xor
addl
mov
sbb
daa
ja
dec
addr16
mov
test
and
lret
lahf
addr16
sbb
or
push
mov
xchg
popa
ja
or
mov
and
stos
mov
pop
fimuls
sbb
and
dec
inc
and
dec
bound
push
mov
mov
jmp
es
push
dec
inc
aad
pop
xor
repz
fs
aad
lock
cmp
imul
pusha
mov
ret
imul
cmp
negl
jmp
mov
in
jnp
mov
inc
push
gs
out
sbb
in
cs
xchg
mov
addr16
sbb
xor
enter
and
out
shlb
jae
scas
sub
fsubr
ja
mov
adc
popa
repz
mov
xlat
dec
mov
mov
fidivs
rcl
push
movsl
loop
fcomps
lahf
loopne
scas
rdmsr
int
out
add
fimull
aad
lret
mov
mul
shll
and
jmp
pop
xor
xchg
mov
lods
out
repnz
cs
stos
outsb
cmp
sarl
push
cmp
mov
push
js
iret
pop
outsl
cld
jg
inc
lea
push
mov
es
movsb
or
test
lret
jbe
or
mov
fs
shrl
test
pop
mov
call
cmpb
xchg
stos
ss
inc
push
adc
loope
xor
cmp
fwait
sbb
dec
xchg
dec
std
mov
clc
xchg
jmp
cld
pop
jno
or
enter
inc
faddp
lret
je
addr16
xor
mov
sbb
js
call
mov
or
roll
mov
xor
sbb
and
push
cmp
sub
outsl
test
and
adc
cmpsb
pop
xor
xchg
sub
mov
xchg
xchg
cwtl
xor
dec
cmc
push
sbb
nop
push
nop
aad
mov
or
fisubl
scas
pop
nop
adc
adc
divl
stos
pop
push
dec
fsubs
sbb
sub
cmp
orb
leave
sub
pop
mov
jbe
sbb
rorl
pop
mov
lods
shlb
jnp
call
leave
inc
jg
cltd
jbe
rolb
push
sub
mov
add
movsl
std
test
and
or
jmp
int
outsb
sahf
das
dec
sbb
jp
icebp
jno
add
jo
sub
jns
jge
xchg
repz
loopne
out
orb
out
lea
fxch
mov
cmp
aaa
cmp
and
mov
and
idivl
sub
test
sub
lock
sbb
arpl
int
and
pop
pop
sbb
jecxz
mov
sbb
mov
cmpsb
fwait
push
jp
or
pop
pop
xchg
iret
and
cmp
notl
mov
add
jb
mov
movsb
jnp
pop
cmpsl
mov
pop
ja
gs
insl
sbb
jp
sti
xchg
js
in
mov
out
out
das
sub
inc
xchg
add
in
cmp
fsubp
sahf
and
add
mov
mov
decb
fsubrs
outsl
cmc
insb
adc
pusha
aas
sub
ror
and
and
xchg
test
push
mov
mov
and
ret
jge
pcmpeqd
and
sub
push
mov
pop
adc
dec
mov
xorb
mov
xchg
hlt
jns
cmpsb
outsb
add
adc
lcall
ret
cmp
mov
iret
mov
aaa
arpl
aad
mov
mov
addb
sahf
lods
mov
sar
test
filds
xor
mov
xor
xchg
pop
mov
push
inc
inc
les
push
dec
cmp
cltd
and
cltd
mov
and
data16
lods
fs
cmp
sahf
mov
dec
jmp
aam
jnp
int
or
mov
ljmp
scas
mov
cmp
fldl
mov
cmpb
push
mov
int3
xchg
nop
jmp
sub
add
xchg
add
cli
movl
lcall
and
jmp
mov
sbb
xchg
push
add
mov
insl
and
pop
pop
lea
push
mov
sub
fcomps
add
rcrb
fnsave
icebp
adc
xchg
mov
and
adc
mov
incl
lock
sbb
out
ror
stc
hlt
das
xchg
inc
lea
adc
nop
lds
cmp
scas
mov
ljmp
sub
push
or
fs
sub
cmp
xchg
ljmp
jl
test
dec
pusha
addr16
insl
inc
cmp
pop
adc
mov
loope
pop
rorb
sub
addl
leave
push
adc
aas
cmp
sbb
scas
mov
js
mov
and
push
imul
les
stos
cmpb
jnp
test
xor
int3
pop
xchg
fdivl
xchg
or
mov
push
ret
jp
dec
inc
cld
std
sub
scas
out
jl
push
in
test
mov
pop
repnz
dec
ja
push
mov
sbb
mov
adc
pop
mov
gs
ljmp
and
mov
lods
xor
cld
dec
xor
cmpsl
mov
aad
dec
lret
mov
ret
fnstenv
and
jmp
adc
push
divl
loope
cmp
fmull
lret
xor
hlt
stc
mov
in
lcall
sahf
decb
shr
dec
loope
int
cld
cmpl
movsb
fnstcw
clc
jge
data16
xchg
pop
or
dec
negl
xchg
push
je
into
in
pop
or
jecxz
adcl
adc
enter
das
adc
jo
ss
mov
jge
adc
mov
insb
adc
sbb
dec
ret
out
je
xor
jns
mov
cld
jo
lcall
cmp
or
cmp
cmp
lds
rorb
pop
lret
gs
ja
mov
xchg
cmp
mov
jmp
pop
mov
xor
int3
nop
nop
dec
fldl
iret
adc
inc
push
mov
ficomps
imul
pop
mov
out
push
inc
mov
out
jge
test
xor
mov
ret
push
out
sub
test
cmp
bound
mov
add
add
shl
lret
add
clc
repz
or
fsts
fcomp
addr16
sbb
stc
or
mov
call
cs
adc
sbb
mov
adc
cmp
out
push
sbb
sub
inc
add
dec
jge
or
mov
clc
in
out
cmp
inc
dec
shrb
in
negb
imul
sub
test
dec
repnz
add
mov
xchg
sbb
pop
out
push
jge
sbb
sbb
aam
push
jo
fstpt
cli
or
nop
mov
pop
imulb
jno
data16
or
jp
stc
popf
sub
dec
adc
sbb
in
ficompl
clc
pop
cld
das
mov
call
sbb
xchg
push
jecxz
sbb
inc
mov
mov
xchg
ljmp
cwtl
cmp
jge
orb
fwait
test
fcoms
or
sarl
xor
xchg
stos
xchg
pop
adc
mov
testb
in
roll
mov
push
or
jno
xorb
das
cmp
lcall
mov
dec
movsb
out
imul
jge
pusha
loopne
jmp
sarl
fmull
mov
fldl
add
sub
ljmp
pop
scas
icebp
xlat
outsl
fcomp
imul
xor
ret
dec
stos
pop
inc
jno
or
dec
mov
mov
xor
les
fbld
xchg
push
aas
sub
push
outsb
xchg
lods
lods
pop
out
enter
mov
shl
lea
jo
jp
and
dec
xchg
cmp
dec
jmp
inc
lock
leave
sbb
jne
push
incl
or
scas
lea
lret
out
jle
xchg
xchg
test
lods
pop
sub
sub
sub
or
cmpsl
mov
xchg
test
mov
jecxz
push
int3
call
movsl
imul
stc
loopne
pop
data16
push
inc
in
mov
cmpsb
stos
loope
xchg
or
scas
add
xchg
dec
cmp
lds
sti
xchg
call
cmp
ds
mov
jmp
daa
jl
mov
pop
cmp
lods
out
mov
call
out
or
lea
loop
in
shrl
rol
inc
sub
pop
int
arpl
push
jo
and
lcall
in
sub
scas
push
fcomip
mov
cmc
int3
sbb
xor
fdivs
ret
enter
in
dec
jo
inc
enter
dec
pop
push
jb
rcll
mov
int
imul
sbb
sbb
pushf
inc
jl
mov
shr
push
shr
int3
mov
sbb
cmpsl
fs
in
std
sbb
fdivl
stos
shrb
push
aam
frstor
repz
pop
icebp
fadd
dec
inc
in
in
iret
mov
icebp
xchg
sub
inc
push
aaa
pop
jmp
and
cmc
pop
xchg
ret
loop
and
test
test
dec
cmp
movq
cmp
lds
and
push
dec
push
xchg
int
daa
aas
aaa
pop
sub
cli
xchg
test
repz
fucom
mov
sub
icebp
inc
lock
mov
sar
loope
out
loopne
pop
lods
lods
jmp
xchg
std
dec
fistps
xchg
movsl
sbb
jecxz
ret
mov
inc
add
sbb
adc
and
mov
iret
adc
push
mov
pop
aam
sub
sub
lea
inc
insb
inc
sub
and
push
mov
mov
xlat
dec
mov
mov
mov
aad
rcrb
cmp
and
push
lods
pop
jno
testb
inc
push
lock
adc
mov
jnp
xchg
aam
adc
cmp
mov
adc
cmp
mov
sbb
xchg
mov
mov
inc
fstpt
lea
pusha
cmp
jmp
pop
cltd
ret
add
push
push
out
pop
xchg
mov
hlt
jnp
popa
sbb
pop
inc
sub
lret
int
repnz
dec
mov
in
sub
ljmp
decl
xchg
out
jbe
push
mov
rclb
mov
push
leave
jns
imul
jle
xchg
mov
ret
push
cltd
mov
orb
xor
dec
cs
outsb
cmpb
fwait
call
repnz
add
sub
xchg
or
test
jno
cwtl
push
idivb
sbb
xlat
push
bound
xchg
movsb
inc
shrl
sti
dec
lret
rcll
sbb
in
gs
sbb
xchg
jne
or
mov
les
mov
daa
mov
fldt
inc
arpl
cli
sub
test
jo
call
in
outsb
inc
mov
ds
sarb
shll
xor
loopne
int3
jb
movnti
or
mov
mov
clc
mov
mov
in
fwait
mov
pop
jo
loopne
repnz
push
incb
push
lea
inc
js
fistl
push
addb
fwait
bound
enter
cmp
movsl
out
ret
ret
sub
xor
mov
fs
adc
in
fwait
push
jmp
xchg
aam
hlt
dec
inc
adc
mov
cmp
pop
jb
lret
imul
mov
xchg
inc
out
and
jb
fimull
inc
dec
adc
pop
sbb
movsb
lock
dec
test
xchg
mov
idivb
push
pop
sbb
and
std
inc
fsts
cmc
inc
fmuls
sar
adc
sbb
lods
test
into
imul
inc
std
int3
lods
sbb
shlb
xchg
mov
xor
jp
xchg
enter
push
addr16
sbb
pop
mov
movsl
popf
iret
jecxz
mov
mov
std
push
push
dec
push
xchg
push
xor
cmc
pop
std
push
dec
jge
inc
mov
arpl
jb
das
fwait
js
fbld
mov
idiv
sti
insl
clc
jecxz
jl
cmp
jb
sub
imul
mov
aad
movl
dec
mov
mov
test
mov
mov
jmp
pushf
aaa
inc
sbb
mov
fmull
stos
pop
stc
or
cmpsl
cs
loope
imul
sbb
dec
xchg
aaa
xor
ret
adc
jns
jae
xchg
lods
adcl
fcmovnb
mov
in
cltd
outsb
sarl
cs
cs
mov
and
dec
jge
push
xchg
loop
cmc
inc
mov
inc
adc
fisubs
mov
or
push
pop
repz
adc
mov
das
xchg
jecxz
jle
mov
pop
mov
ljmp
test
lcall
cmp
scas
cwtl
imul
sbb
push
inc
mov
insl
inc
dec
cmpsl
dec
lea
jae
inc
or
dec
push
in
xor
lret
cli
popf
rcll
inc
xchg
ss
popf
xor
aam
ds
mov
fidivs
inc
les
mov
mov
movsl
int3
in
push
mov
pushf
into
dec
mov
add
arpl
mov
psubsb
push
lret
repnz
mov
imul
popa
lcall
js
aad
pop
mull
mov
rolb
xchg
scas
xor
lock
ret
lcall
pop
insl
insl
xchg
dec
add
rorb
addr16
mov
xchg
mov
jae
add
loope
in
xchg
ss
enter
dec
adc
lea
jecxz
imul
jnp
lcall
jmp
popa
inc
dec
loopne
sbb
xchg
bound
inc
push
orl
lods
jbe
cld
dec
sbb
cmpsl
mov
inc
xor
movsb
lahf
inc
minps
dec
mov
mov
imul
jg
das
psubd
xor
ret
cli
lods
xor
or
push
je
xor
pop
imul
movd
imul
sti
icebp
mov
inc
shll
das
jmp
sti
out
mov
add
popf
xor
repz
sub
out
pop
arpl
test
and
shrb
and
cmp
dec
xor
cmpsb
nop
xchg
ret
sarb
xchg
mov
movsb
subl
cmp
push
mov
sbb
mov
fcomps
test
xor
and
dec
popa
pushf
sbb
or
shlb
movsl
add
dec
fwait
scas
or
fistl
mov
in
popa
cltd
es
sub
inc
cmp
push
in
add
mov
js
loop
xor
mov
popf
mov
mov
cmpsl
mov
aad
addr16
mov
js
imul
in
pop
push
jecxz
add
mov
lea
sbb
lods
xchg
stos
das
mov
adc
cmpsb
test
in
mov
xchg
ret
dec
push
xchg
dec
icebp
enter
mov
mov
int
aam
add
notw
mov
lret
das
ljmp
pushl
and
cmp
mov
xchg
add
mov
and
sarb
les
pop
adc
xchg
std
movsb
add
mov
nop
and
roll
ficoml
xor
pop
adc
pop
movsb
sub
call
inc
push
out
mov
xlat
pop
cmp
sbb
call
mov
insb
push
shr
sahf
push
push
xchg
cmc
jo
mov
sub
call
test
and
fwait
testl
out
add
mov
jno
pop
shlb
inc
popl
hlt
pop
mov
stc
cmp
fs
xchg
sti
add
push
pop
mov
pop
lock
mov
xchg
mov
push
in
cmovle
lahf
flds
jg
mull
aad
push
push
xor
mov
shr
inc
test
add
jb
icebp
push
gs
aaa
ds
loope
out
in
dec
ja
test
lret
bound
jp
cmp
js
jge
cmp
fidivs
cmp
lret
data16
jmp
inc
test
movsb
lcall
xchg
fadd
outsl
sbb
ret
vpunpcklbw
in
adc
push
movsb
shl
pop
out
adc
xor
push
repnz
jnp
lock
sti
mov
pop
add
lds
in
nop
pop
xchg
cltd
mov
ja
or
cmp
push
or
mov
je
hlt
cwtl
lock
sbb
out
dec
repnz
addr16
dec
outsl
inc
das
jl
int3
popa
int3
push
inc
pop
pop
dec
pop
cmp
jnp
and
adc
adc
idiv
mov
jns
aaa
shl
sbb
aad
sbb
sub
jne
pushf
sbb
or
cmpsl
sub
push
xor
fcmove
jb
fisubs
jns
mov
dec
jl
mov
mov
rclb
adc
adc
xchg
push
cmp
fs
pop
pop
mov
data16
orl
mov
mov
aas
arpl
arpl
and
in
js
cmp
fstpl
add
movsl
sub
dec
sub
ljmp
mov
sub
outsl
dec
jmp
mov
stos
loope
and
inc
mov
lods
bound
and
popf
adc
dec
cmp
mov
mov
or
xchg
add
jbe
sub
pop
inc
jae
mov
and
push
mov
movsb
das
push
sahf
xchg
call
popa
jo
mov
pop
call
lds
out
mov
es
push
scas
sti
mov
pop
fwait
out
jecxz
rolb
das
sbb
mov
xor
dec
mov
mov
js
loope
dec
inc
out
xor
out
pop
mov
pop
xchg
push
stos
popa
sbb
jns
push
pop
pop
pop
testb
inc
mov
cmp
fidivl
cs
jmp
and
or
add
adc
mov
xlat
push
lea
leave
mov
stc
adc
dec
dec
in
lcall
xchg
add
add
mov
aaa
repz
xorb
adc
insl
addr16
adc
inc
xchg
add
dec
push
lret
lock
pop
es
dec
and
out
sub
call
fistpl
mov
pop
sbb
aad
or
cwtl
stc
inc
mov
call
pop
jmp
mov
and
dec
enter
ljmp
std
jl
and
mov
or
adc
enter
mov
aaa
push
adc
cmp
xor
push
ret
push
add
cltd
cmpl
mov
xchg
loope
ljmp
gs
xchg
ja
push
mov
and
pusha
jecxz
inc
lea
rclb
inc
movsl
dec
cmc
xchg
rclb
arpl
test
inc
or
and
aas
test
shrb
xchg
mov
in
testl
inc
mov
sub
fs
mov
mov
jmp
inc
cmc
ja
cmp
sbb
xor
dec
or
adc
or
stc
mov
push
lcall
sub
push
call
std
lods
mov
jb
pop
fdivrs
pop
int3
repnz
push
maskmovq
negl
into
xchg
xchg
ljmp
cmc
push
clc
push
repz
test
sbbl
jg
stos
shll
daa
jae
loop
arpl
stos
ja
sbb
iret
repz
stc
mov
imul
in
or
sub
xchg
and
movb
lds
repz
insl
jbe
in
insl
and
inc
dec
add
pop
push
adc
push
inc
sbb
negb
push
pop
test
scas
pop
mov
push
mov
daa
mov
xchg
test
dec
pushf
push
jbe
int
xchg
shlb
xchg
ja
jbe
sub
xor
rolb
push
mov
shrl
add
xor
inc
push
jg
sub
xor
jo
xchg
jp
insb
mov
dec
push
xor
mov
rorl
ss
dec
test
inc
ret
into
leave
je
stos
out
xor
outsb
data16
ja
sarb
xchg
mov
sbb
ret
and
adc
adc
xor
cmp
jge
into
pinsrw
jnp
scas
mov
aaa
mov
in
push
dec
push
push
sub
adc
cld
das
mov
daa
cmp
inc
out
sbb
lds
pop
and
sbb
xor
dec
mov
lahf
inc
cmp
jge
in
out
adc
call
stos
sub
pop
add
jp
xchg
test
mov
push
aaa
lea
push
fldenv
push
call
mov
arpl
cwtl
les
hlt
mov
iret
pop
adc
ss
les
push
push
loop
mov
add
in
in
data16
loopne
push
inc
enter
mov
in
add
push
jl
mov
lds
lds
orl
and
push
pop
sub
or
nop
pop
dec
lock
in
cmp
mov
ljmp
addb
push
adc
push
js
mov
mov
jg
sub
scas
das
lds
inc
mov
cli
push
setle
jge
iret
fisttpl
cmp
imul
scas
ret
repnz
cmp
dec
or
jae
inc
add
push
dec
sub
scas
cmpsl
jg
clc
das
add
scas
pushf
dec
sbb
ljmp
fldcw
mov
stos
cmp
inc
jp
cmp
mov
shll
cmp
lea
fsubl
xor
in
orb
xlat
sbb
xchg
in
test
push
clc
out
and
or
lcall
cmp
adc
pop
dec
mov
ror
mov
add
jp
push
xor
xor
dec
jmp
dec
aas
adcb
jmp
cmp
and
je
pop
enter
sbb
pop
push
xor
call
orb
cmc
in
loop
rcll
adc
out
insb
push
out
stos
adcl
cmp
cmp
jno
ret
jg
dec
xor
dec
cmp
dec
popa
fs
sub
cwtl
push
jae
loopne
xchg
and
les
clc
inc
mov
pop
mov
shll
push
insl
add
sbb
inc
div
fbstp
in
movsl
rcpps
std
jbe
test
mov
add
push
cmp
xchg
push
dec
fcomip
mov
add
xorb
add
pop
jmp
mov
cmpb
mov
ja
sbb
push
jne
ljmp
and
push
ljmp
add
xor
and
scas
shrl
mov
and
xchg
repnz
test
packssdw
jmp
lcall
stos
inc
in
insl
jle
scas
lods
mov
je
pop
cs
xor
sub
cmp
fwait
clc
rcrb
rcrl
inc
ljmp
push
or
ret
mov
je
ret
dec
pop
hlt
out
xor
cwtl
in
std
or
mov
pop
push
fidivs
popf
jns
lock
jns
xlat
addl
add
lea
roll
mov
rcrl
mov
lret
add
fidivrs
lock
ficoms
inc
push
adc
dec
jae
dec
xchg
xchg
ficompl
je
aaa
pushf
push
push
pushf
mov
cwtl
test
incl
call
test
rcr
ret
movsl
nop
sub
aad
mov
pop
aam
mov
lods
fwait
inc
fdiv
xor
sbb
sbb
test
aaa
fstps
out
sahf
mov
xor
sub
jmp
les
ret
sbb
test
and
xchg
add
rorl
lods
test
xchg
cwtl
fwait
mov
adc
lret
cmp
pop
scas
insl
test
cmpsb
insl
push
xchg
xor
mov
jge
mov
dec
cmp
and
fcompl
mov
ret
hlt
mov
cmpsb
add
xor
mov
decl
in
mov
ficoml
incb
ljmp
jmp
in
std
mov
mov
lods
dec
out
js
cmc
aam
in
stos
movsb
cltd
ficoml
pushf
shlb
enter
inc
mov
mov
jp
xor
or
lcall
in
push
sti
xchg
mov
vaddss
mov
mov
mov
test
dec
rol
xor
xlat
fadd
mov
nop
test
and
inc
or
mov
xor
mov
dec
mov
les
inc
test
sub
dec
adc
pop
addb
test
test
dec
adc
xor
and
fsubr
push
sbb
add
out
test
mov
pop
outsb
sub
in
adc
push
daa
rorb
xchg
mov
adc
lds
pop
movsb
jge
ds
mov
inc
mov
mov
add
mov
xor
lds
mov
arpl
mov
cwtl
dec
cs
mov
xchg
insl
jge
and
in
jle
cltd
mov
popa
fisubrs
rcrb
sub
jno
imul
enter
shr
mov
or
ljmp
sub
scas
cli
inc
adcl
scas
iret
xchg
jp
mov
xchg
aaa
mov
sbb
and
add
outsb
mov
push
push
mov
pop
stos
into
and
mov
dec
pop
outsb
fistps
stos
mov
imul
and
and
addr16
incb
mov
aaa
fistpl
sub
sahf
xor
and
and
push
push
aam
leave
in
cmpsb
mov
lock
movsb
dec
push
lahf
ss
push
lock
xchg
mov
lock
pop
lret
inc
orb
pop
stos
mov
xchg
push
in
les
inc
jnp
popa
popa
add
push
ret
and
leave
fisubrs
lret
xchg
rcr
pop
push
subb
pop
inc
adc
subb
and
ljmp
lods
out
test
loopne
js
idiv
dec
pop
jecxz
cmp
sbb
enter
ret
add
in
or
clc
dec
mov
xchg
stos
dec
inc
test
push
cs
mov
mov
push
jecxz
sub
icebp
mov
inc
pop
mov
or
les
imul
fcomi
dec
rclb
pop
add
mov
jbe
fidivrs
adc
aaa
push
jns
or
shrl
xchg
iret
push
mov
mov
sbb
sub
pop
je
rorl
daa
enter
jl
sahf
dec
insl
xchg
stc
pop
sbb
push
pushl
add
in
jns
sbb
imul
cmp
dec
mov
mov
inc
dec
cmp
mov
sbb
and
sarb
call
fwait
adc
mov
jge
push
and
xchg
pop
mov
and
aaa
mov
and
pop
push
lods
imul
and
mov
jne
dec
stos
outsl
repz
in
add
jg
int3
adc
aad
lods
scas
push
loope
cmp
mov
adcl
fs
icebp
jo
ss
and
icebp
aaa
pop
or
inc
ret
insb
push
cltd
inc
jns
cltd
je
ja
in
mov
mov
mov
shll
mov
int3
cmp
mov
out
lods
sbb
ljmp
stos
push
sbb
xchg
mov
std
fcmove
sub
ss
or
in
cmp
add
cltd
add
sbb
aam
popf
dec
inc
jae
add
jne
daa
idiv
sub
cmpsb
pop
repz
xchg
cmpsl
mov
mov
dec
imul
adc
ds
pop
movsl
scas
ret
sbb
mov
inc
leave
stos
push
rolb
xchg
inc
xlat
ja
pop
dec
pop
out
mov
sub
dec
dec
xchg
push
lret
loopne
mov
lds
lea
jno
lods
fstpt
xchg
mov
mov
push
jnp
or
add
xorl
shll
cld
js
sub
icebp
js
clc
mov
sub
mov
mov
pop
mov
pushf
pop
pop
shlb
pop
fldt
lea
mov
fwait
in
dec
and
shlb
addl
leave
cmp
daa
adc
mov
cmpsl
and
lock
dec
arpl
xchg
sbb
gs
std
data16
test
icebp
dec
fimull
lret
adc
mov
mov
push
andb
mov
pushf
or
dec
fisttpll
xor
and
jno
xor
pop
push
dec
and
dec
dec
inc
jmp
stos
stos
dec
sti
sub
jecxz
stos
or
out
lds
movsb
rolb
imul
hlt
adc
mov
pop
nop
push
insb
pop
ss
lea
gs
js
jp
in
dec
out
adc
decb
inc
nop
cltd
addb
push
and
add
pop
cmp
sub
pop
shrb
or
int3
sub
mov
pop
sub
and
mov
and
fsubrl
fmul
xor
xor
test
loopne
inc
or
adc
push
dec
lcall
jl
sub
push
enter
fdivr
test
pusha
or
fcomps
cmp
sub
cmp
jl
mov
lret
hlt
les
idivl
lds
les
in
push
or
adc
and
mov
lahf
mov
jge
pop
mov
ds
mov
push
dec
and
sub
je
push
push
add
adc
scas
mov
inc
addr16
out
push
inc
jmp
mov
lock
xor
mov
push
lahf
test
loope
int3
movsl
ja
mov
lret
rcrl
or
mov
imul
mov
ret
sbb
pop
xchg
mov
loopne
and
mov
gs
mov
mov
sub
push
fsubrl
flds
jmp
pop
jmp
push
jns
adc
lock
inc
xchg
jns
and
out
popa
adc
jmp
imull
dec
fs
call
pop
xchg
lret
mull
mov
jle
fdivl
push
adc
dec
mov
sbb
and
aaa
xlat
cmpb
sahf
ja
sbb
jns
out
es
testl
jne
orb
ds
pop
dec
mov
pop
jno
pop
jbe
mov
dec
push
mov
sbb
push
sbbl
out
cld
xchg
imul
mov
xchg
sub
dec
xor
lret
adcb
push
mov
lcall
add
push
inc
mov
out
int3
fwait
les
xchg
and
pusha
sbb
xor
imul
jp
and
xor
jo
sti
js
push
cmp
insb
shl
cmp
lret
add
mov
ds
jmp
shrb
fistpll
lock
sub
test
loope
cwtl
push
iret
gs
jl
mov
mov
rorl
lret
xor
mov
pop
sub
push
cmp
out
dec
inc
call
push
adc
fisubrs
xchg
push
and
mov
xchg
lock
gs
clc
adc
repz
push
mov
jae
jge
cmc
xor
mov
fcoms
and
in
cmp
test
mov
xor
mov
pop
int3
push
push
sti
test
rcrl
cmp
hlt
aaa
xchg
mov
pop
mov
es
out
mov
fwait
mov
fisubl
or
mov
aaa
leave
jp
es
lea
int3
dec
les
inc
inc
hlt
mov
mov
js
mov
push
adc
pop
xchg
sub
push
cmpsb
addr16
ret
pop
push
xlat
stc
jle
and
cmpsl
fsubl
fnstenv
pushf
movsl
imul
data16
iret
push
push
shl
aam
call
insl
and
int
or
dec
and
repnz
cs
push
bnd
mov
sbb
movsb
add
movsl
ljmp
aaa
or
sbb
mov
or
mov
lret
xchg
ljmp
std
mov
or
mov
jne
ficomps
adc
inc
xchg
repz
inc
xchg
test
mov
loopne
cwtl
mov
and
mov
in
call
inc
hlt
mov
js
dec
in
fistl
aam
sbb
mov
popf
xchg
cmp
jae
pop
mov
incl
daa
xchg
pop
popf
or
or
nop
pop
fldt
cmp
aam
push
xchg
xchg
sbb
mov
and
lcall
roll
pop
push
in
push
leave
mov
xor
mov
dec
adc
mov
sub
test
enter
mov
fdivrs
cmp
xchg
insb
adc
mov
mov
ret
in
and
pop
sub
or
mov
mov
sbb
or
movsb
je
dec
push
rcll
test
sub
jb
cs
iret
in
pop
and
shlb
mov
sahf
stos
inc
add
les
out
xor
sbb
xor
std
adc
push
sbbb
gs
fucomp
imul
fdivr
sbb
fld1
hlt
lret
jmp
aaa
xchg
inc
mov
pusha
into
pop
inc
les
aam
fbld
fidivs
pop
shlb
and
repz
xchg
mov
rcrb
les
or
cmp
in
in
pusha
cld
lea
mov
mov
xor
sub
or
jbe
pushf
sub
adcb
fs
push
inc
lock
or
cmpsl
mov
and
push
iret
repz
pop
dec
aas
ret
lret
gs
xchg
cmpsb
scas
cmc
loop
sbb
mov
cmpsb
push
sti
push
mov
cmp
test
movsb
test
push
mov
push
in
or
jns
jmp
lahf
in
out
inc
icebp
fnstenv
imul
aam
sti
gs
sbb
fcoml
adc
aas
xor
shrb
arpl
dec
ret
sbb
inc
enter
jmp
orl
add
adc
add
mov
and
repz
xlat
mov
lods
jecxz
sbb
jne
or
dec
aas
sarl
cmp
aam
cld
movsl
aaa
dec
sahf
rorl
jmp
lods
jb
sarb
mov
outsb
cmp
mov
nop
movsb
xchg
mov
lods
xchg
pop
dec
andb
fstps
jecxz
push
inc
or
cltd
bound
rcll
into
push
and
sub
xor
add
test
enter
repnz
hlt
mov
push
or
data16
test
jmp
push
jns
fcoml
xchg
loope
xchg
or
add
mov
cld
lret
adc
addb
rclb
jle
adcb
mov
lods
push
hlt
js
rorl
adc
mov
push
ret
pushl
stos
pop
stos
inc
adc
mov
dec
xor
movb
sub
push
ljmp
mov
dec
push
add
mov
jb
mov
mov
mov
adcb
mov
xchg
mov
push
jne
or
and
loope
jle
add
inc
sbb
int3
adc
out
repnz
xor
mov
mov
add
popa
rcll
jnp
push
push
mov
jl
repnz
sarl
pop
adc
inc
pop
cmp
dec
jle
dec
fsubrp
adc
mov
mov
dec
pop
jmp
add
sub
popa
movsl
xchg
stos
cmpsb
mov
push
mov
push
movl
ror
in
sbb
dec
mov
push
mov
xor
cmpsb
xchg
cmc
xor
ficompl
inc
std
inc
mov
test
push
push
jae
scas
sarb
xchg
sub
push
cltd
mov
cmp
fwait
inc
lods
nop
dec
popf
inc
mov
mov
scas
stc
std
test
js
cltd
insb
xchg
out
inc
add
mov
pop
fidivrl
lahf
lahf
arpl
xlat
xchg
mov
jmp
mov
dec
dec
mov
scas
dec
stos
mov
push
pushf
shl
jo
ficomps
dec
pushf
leave
xchg
fdivl
cmp
lea
lds
leave
nop
push
add
lods
and
push
sbb
movsb
lea
xchg
cmp
enter
and
roll
ljmp
dec
and
and
dec
loop
sub
mov
hlt
movsb
es
jp
out
clc
iret
sub
jb
push
movb
scas
loopne
or
imul
scas
ficoml
gs
addl
cmp
dec
cmpsb
dec
jae
int
xchg
in
pop
mov
bound
dec
sub
loopne
scas
bound
xchg
sub
inc
xchg
sbb
je
pop
ss
cs
stos
sbb
inc
jp
sub
xchg
mov
xchg
mov
push
xorl
sub
and
sbb
sti
jnp
or
enter
mov
ss
or
pop
sar
jb
sbb
inc
movsb
mov
jae
into
es
dec
xchg
orl
insb
xor
pop
aam
mov
dec
fsubp
cmpsl
pop
punpcklbw
add
ljmp
cmp
aaa
jmp
out
xor
or
mov
sub
push
pop
xor
out
mov
in
ss
decl
pop
push
xchg
xchg
lock
cmp
repnz
imul
push
xchg
insl
scas
es
cmpsb
shrl
fcoml
cmpsb
xor
pop
push
push
subl
jp
pop
xchg
and
xchg
out
sbb
std
push
xor
lahf
cmp
jne
sub
imul
out
cwtl
inc
cmp
lock
lcall
popa
test
xor
sub
adc
mov
ror
push
cmp
mov
add
mov
into
inc
aas
leave
or
clc
push
jle
push
scas
mov
ja
jg
mov
int3
int
clc
cli
mov
divb
outsb
or
sbb
push
and
sbb
push
fmul
dec
leave
mov
scas
addr16
outsl
cld
int3
push
testb
and
scas
daa
shlb
dec
or
shl
repnz
sub
scas
sahf
add
dec
aaa
push
mov
int3
sbb
out
stc
stc
popf
inc
pop
xor
inc
or
fsubrl
xor
push
mov
adc
sar
aaa
push
cmp
push
xchg
jne
scas
nop
pop
fisubl
mov
gs
mov
mov
stc
enter
in
fsubs
bound
data16
sbb
repz
inc
pop
shl
loop
aam
or
sbb
pop
pop
out
xchg
out
sub
pop
pusha
push
push
aam
insl
xor
test
jle
repz
sbb
clc
cmp
jb
adc
xor
mov
mov
loope
cmp
lret
jo
stos
cmp
jle
inc
movsl
push
out
push
xorl
jne
cmp
int
fwait
loope
lods
mov
lcall
pop
scas
add
xor
adc
or
mov
push
repz
pusha
push
test
mov
jg
push
stos
jnp
mull
push
cmp
xchg
lods
xchg
loopne
loopne
mov
pop
movsl
lret
cmpsb
mov
insl
xor
mov
jo
lret
sbb
dec
mov
iret
je
fldcw
xchg
leave
repnz
sbb
jbe
cmpsw
sbb
shlb
pop
jl
repnz
aaa
cbtw
xchg
cmpsl
cli
mov
push
xchg
mov
in
ja
addb
sub
push
sub
sub
cmp
adc
cld
les
sub
iret
out
pop
inc
add
add
and
clc
xchg
inc
sbb
sahf
adc
pusha
into
ficompl
inc
push
mov
test
scas
pop
ja
aaa
movsl
fs
jns
pop
lret
add
add
mov
fwait
aam
lcall
test
incl
lods
push
inc
jl
xchg
fsts
mov
or
enter
movsb
fincstp
adc
bound
ja
xchg
mov
pop
dec
es
rorl
pop
ja
out
push
or
cltd
in
arpl
cs
sub
gs
lret
or
adc
add
and
ret
sti
mov
xchg
hlt
icebp
mov
mull
pop
cmpl
pop
push
xor
aam
cmp
push
and
arpl
movsl
pop
sbb
imul
mov
push
jb
popa
in
ljmp
push
imul
inc
je
mov
adc
mov
cli
pop
shll
enter
add
add
xchg
stc
imul
stos
lock
das
cwtl
pop
mov
and
mov
sbb
test
push
scas
jns
sbb
pop
push
sub
mov
push
push
or
xchg
adc
div
jae
adc
jp
stos
test
cli
std
lods
mov
jp
xor
mov
stos
cmp
movsl
mov
inc
xchg
arpl
shll
dec
sbb
fnstenv
out
inc
cmpl
xor
clc
in
xchg
jo
and
ja
pop
dec
or
loopne
cmpsb
cld
xchg
lock
dec
sub
les
adc
pop
pop
cs
sub
mov
lds
xchg
mov
jle
popa
mov
mov
lds
jae
mov
loope
cld
test
jae
push
push
and
dec
push
jmp
mov
movsl
inc
adc
mov
dec
sbbl
pop
and
fistpll
pop
pop
bound
sbb
lahf
jno
add
popf
popa
cli
out
sub
mov
cmc
cs
std
adc
mov
rcrb
aam
rcrb
jae
inc
lahf
mov
xor
out
dec
jb
cmp
ret
add
push
loopne
mov
xor
inc
ret
imul
mov
cmp
adc
jns
dec
cmp
ljmp
pop
ljmp
mov
sbb
cmpsb
je
imul
mov
lcall
in
fstl
dec
test
xor
pop
test
movsl
std
bound
loopne
cmpsl
cmp
int
xchg
jmp
in
cltd
jo
xchg
lods
jbe
sbb
jns
test
filds
mov
in
loop
movsl
jmp
jle
rclb
ljmp
inc
push
push
outsl
loop
hlt
push
dec
ret
ja
pusha
daa
adc
push
jge
mov
shll
aam
inc
pop
dec
or
dec
dec
ss
popf
or
sbb
lods
push
mov
sbb
inc
and
cmp
lret
push
je
pop
jae
and
xchg
testb
jo
inc
mov
nop
or
mov
inc
bound
push
xor
icebp
jge
fidivrs
xor
pop
popf
stc
adc
outsl
repz
pop
adc
adc
push
or
or
sbb
gs
push
int
adc
dec
cmp
ficomps
insb
lods
xchg
dec
push
fimuls
push
mov
inc
andl
pop
mov
and
popf
push
jle
mov
or
mov
sbb
nop
call
test
iret
iret
mov
pop
push
shlb
or
mov
jp
sarl
inc
ret
lods
sub
hlt
lods
ds
aas
add
jg
and
add
mov
je
mov
sahf
es
and
in
into
scas
stos
inc
cld
and
or
xchg
sbb
sbb
jle
mov
cwtl
jmp
or
inc
add
jne
mov
daa
push
and
aas
push
repnz
shll
sbb
ds
and
xor
and
dec
pop
addr16
testb
push
inc
fs
mov
mov
scas
pop
xor
test
cmp
adc
inc
out
jo
jno
arpl
ds
xor
or
addr16
ja
mov
mov
mov
push
mov
push
cmpsb
leave
scas
pop
push
imul
jl
sub
mov
jno
js
jp
dec
fldl
mov
lock
shll
movsb
repz
cmp
sbb
lret
or
cmp
jne
push
sbb
fisubrl
out
adcb
add
inc
dec
sub
adc
mov
inc
sub
mov
xor
sub
js
pop
iret
repz
sub
popf
inc
xchg
jns
sub
and
in
test
test
stos
fstpl
add
or
imul
je
shrl
scas
lods
jo
mov
xlat
dec
fadd
int
pop
addr16
mov
jnp,pt
andb
mov
cmp
pop
pusha
inc
jmp
lods
pop
lcall
leave
inc
pop
pop
inc
orl
filds
mov
jge
push
insb
das
jl
push
jb
cmpsl
repz
cmc
and
sub
xchg
mov
in
adc
and
arpl
pop
repz
mov
xor
scas
dec
or
imul
inc
xor
add
mov
out
sub
es
jne
icebp
test
mov
nop
lret
sub
in
cmpsb
pushf
push
in
xor
lcall
push
out
dec
fcmovu
mov
xchg
pop
or
pop
sahf
sbb
adc
icebp
call
jp
stos
sub
inc
mov
mov
popa
push
xchg
pop
out
lret
sbb
mov
mov
jnp
adc
push
sti
adc
test
shrb
dec
push
sarl
jp
sbb
js
lret
outsb
out
pop
push
push
push
lods
in
inc
push
bound
aad
roll
pop
mov
jnp
sub
orb
negb
add
cld
mov
push
push
lods
sub
pop
xchg
mov
push
push
sub
cmp
cmp
aam
jnp
xor
mov
mov
test
add
stos
pop
dec
push
pop
cmpl
ret
or
xchg
or
pop
jno
add
bound
imul
ja
dec
inc
test
or
cmp
pop
lcall
mov
cmp
pop
sbb
nop
xchg
gs
scas
ret
aas
and
jle
mov
xchg
jnp
lret
sbb
sbb
or
ljmp
shll
pusha
outsl
push
adc
xor
sbb
insb
scas
out
push
leave
jl
add
and
mov
and
adc
jmp
push
fmull
sub
cmc
pop
dec
out
dec
sahf
clc
hlt
sub
fidivrl
dec
adc
frstor
sti
rcll
mov
cmp
inc
out
out
jp
dec
mov
adc
and
mulb
jg
push
in
aaa
in
add
js
aad
les
pop
xchg
insb
xchg
and
xchg
push
xlat
addr16
test
stos
xchg
mov
cmp
jno
and
jnp
mov
outsb
xchg
insl
fsub
push
xorl
or
in
mov
enter
add
or
sbbl
jne
jge
into
daa
bound
xchg
jmp
clc
mov
jge
dec
push
in
inc
xchg
pop
dec
push
jmp
js
mov
pop
rcll
sar
adc
mov
in
in
pop
sbb
ljmp
loopne
popf
js
jnp
hlt
subb
inc
sub
cmpsb
fimuls
mov
xchg
repz
nop
inc
pop
pop
loop
cmpsb
and
fisubrl
mulb
loope
push
testb
in
jno
lock
pop
leave
pop
cmp
pop
pop
push
sarl
adc
add
inc
push
sbb
push
out
outsl
imul
test
xchg
sub
aas
jmp
push
adc
mov
adc
jo
aaa
rcll
mov
out
inc
enter
xor
sarb
shlb
push
sub
aam
cmp
popa
xor
popa
pop
push
inc
jmp
fmull
push
das
xchg
adc
repnz
mov
imul
mov
mov
movsl
sbb
std
sub
sub
add
std
leave
icebp
je
or
das
hlt
xchg
and
jmp
inc
cmc
xlat
loop
jnp
inc
and
inc
out
js
cs
inc
pushf
cmpsb
xchg
lret
inc
testb
in
cwtl
or
jbe
nop
push
xlat
and
cmpsl
jl
iret
in
hlt
mov
mov
fwait
mov
and
lods
lret
push
cltd
inc
stc
jmp
dec
mov
lock
cmp
push
negb
mov
out
sbb
adc
addb
gs
hlt
mov
push
out
sub
pop
xor
int
mov
xchg
push
idivb
sbb
ret
in
and
push
xor
cmp
imul
lods
test
mov
cmp
sub
fs
push
fstps
out
inc
sbb
xor
fwait
test
imul
mov
cmp
daa
jp
pop
push
gs
add
jl
outsb
sbb
sub
es
lcall
pop
out
sarl
push
or
or
into
cltd
sti
pusha
mov
out
mov
mov
in
or
dec
dec
mov
gs
std
in
scas
int
pop
adc
sbbb
xchg
xchg
fsub
dec
arpl
cli
pop
xchg
fidivl
mov
dec
ret
loope
xchg
dec
cmp
fnstcw
daa
int3
adc
lcall
mov
fwait
adc
dec
nop
pop
adc
mov
adc
sub
mov
lea
xchg
mov
xchg
mov
and
pop
pop
mov
insb
ss
push
or
mov
icebp
sbb
in
lock
insb
adc
jns
inc
ds
jno
inc
lret
jb
test
dec
inc
inc
stos
shll
or
jns
push
loopne
fsubr
sbb
mov
ss
sbb
addr16
jne
aas
pop
inc
and
popa
push
fwait
mov
pop
sti
pop
jecxz
subb
aam
pop
xchg
sub
shr
jno
mov
mov
test
push
push
sbb
push
popf
pushf
mov
inc
sub
hlt
dec
fstp
loope
adc
out
subl
mov
xchg
add
cmp
jmp
fsubs
jo
mov
in
cmp
clc
outsb
dec
push
fmull
sub
inc
inc
and
test
loop
pop
jnp
add
bound
cmp
push
cmp
and
push
jmp
iret
sahf
icebp
test
cld
mov
shll
inc
out
stc
pop
xchg
push
sub
fnstcw
outsb
push
imul
aam
mov
int3
push
xchg
push
sar
and
xorl
and
repz
call
jmp
or
and
add
pop
call
dec
dec
shl
mov
sarb
push
les
pop
int3
pop
jmp
cld
pop
fsubs
cmp
push
cli
adc
and
sub
mov
pop
loope
mov
mov
mov
icebp
ss
cmp
aaa
jmp
in
xchg
mov
xchg
or
nop
xchg
dec
or
scas
imul
jno
aad
sub
pop
or
pop
ficomps
mov
test
lret
int3
pop
mov
push
or
in
mov
dec
outsb
adc
scas
sbbb
fcmove
inc
cld
xlat
aam
es
pop
xchg
fwait
pop
inc
jno
mov
icebp
fcoms
in
sub
ficoms
sahf
maskmovq
add
xor
ds
pop
and
adc
fs
lcall
jns
dec
dec
or
or
and
inc
xor
pop
cmpsb
and
ficompl
xor
add
xchg
xor
mov
scas
add
iret
fcom
cmp
xor
xchg
stos
dec
jo
std
int3
cli
mov
icebp
mov
js
mov
mov
scas
mov
out
mov
mov
mov
test
pop
int3
and
addr16
inc
push
xor
arpl
popa
jmp
jge
add
xor
rclb
test
into
inc
mov
popa
out
mov
add
test
mov
adc
push
cmpsb
repz
push
mov
mov
dec
ror
fsubl
or
jo
test
or
inc
or
fisttpll
fsubrp
fwait
and
sahf
dec
scas
xchg
fimuls
outsl
loope
mulb
xchg
pusha
cmovge
mov
mov
iret
push
cmpsb
fcomps
repnz
inc
cmp
adc
data16
xlat
loopne
test
incb
shlb
stc
mov
inc
into
call
jle
jb
filds
std
inc
in
or
cld
add
or
sbb
add
loopne
xchg
inc
pop
lods
xchg
xor
push
std
mov
mov
push
es
sub
lea
sarb
mov
in
and
insl
scas
push
pop
dec
int3
cmpsl
lds
adc
and
sahf
js
leave
jg
push
jp
xchg
int
int
mov
aam
dec
out
add
or
cmp
sub
cmp
jns
lret
jo
mov
push
xchg
lahf
mov
inc
xchg
mov
add
shlb
popa
mov
add
scas
negb
xchg
subb
test
test
inc
mov
sub
in
mov
rcll
loopne
out
and
dec
jae
sub
mov
ds
push
test
insl
or
dec
and
mov
aaa
dec
push
mov
xchg
unpcklps
push
je
mov
rcrb
lods
mov
scas
rcl
sarl
lret
inc
sub
cmp
xor
adcb
and
mov
fucomi
xadd
loope
and
or
ret
test
add
sub
and
addr16
cmpsl
cmpsl
mov
and
inc
shll
jb
movsb
mov
dec
mov
inc
scas
repz
mov
imul
inc
mov
push
mov
fwait
jb
insb
dec
lods
loopne
or
adc
xchg
cli
pop
dec
addr16
sbb
sahf
arpl
inc
xor
xchg
enter
mov
ret
in
icebp
push
aas
jno
sbb
mov
into
mov
pop
jbe
inc
fidivrs
xchg
push
lea
pop
lea
stos
insl
push
in
cs
or
xchg
mulb
fnstenv
not
fst
ja
scas
xor
roll
push
xlat
popf
cld
inc
cltd
js
jl
test
push
jmp
ja
xor
push
and
in
mov
mov
or
sub
sub
mov
push
sub
cld
mov
mov
cmp
ja
iret
sti
insb
cmp
bound
cltd
and
js
sahf
mov
aas
add
cmp
ja
jmp
cmp
aaa
shlb
sub
ljmp
xlat
xor
movnti
int3
jg
xchg
dec
data16
xchg
mov
test
out
dec
addr16
movsl
repz
cltd
addr16
sbb
in
aam
xchg
inc
into
aam
cltd
add
test
cld
cltd
mov
sbb
in
push
insl
push
jne
nop
xor
jb
and
pop
daa
outsl
cmc
roll
push
xchg
test
inc
or
or
cmp
nop
xor
pop
sub
jge
or
sahf
pop
daa
fmull
pop
ret
adc
pop
xor
adc
cmpsb
mov
inc
push
xor
and
call
out
pop
lds
jmp
or
lds
or
jecxz
mov
adc
mov
and
dec
xor
jl
inc
xlat
loopne
jp
mov
push
push
sub
inc
mov
out
jns
lock
jns
jecxz
push
sbb
repz
gs
mov
leave
pushf
pop
or
movsb
dec
ss
outsl
fwait
sbb
ret
hlt
scas
lods
mov
jo
or
cmpb
jo
int3
push
push
popw
jae
jo
xchg
inc
jae,pt
test
add
sti
dec
jg
xchg
cmovs
cmpsb
mov
inc
mov
push
jne
push
mov
sahf
ds
push
fwait
imul
or
ret
sub
movsb
cmpsb
sub
lods
sti
sub
fldt
iret
arpl
pop
mov
fidivrs
or
cmp
inc
les
and
icebp
in
shrb
cld
adc
pop
ja,pn
xchg
xor
sub
hlt
lret
mov
fsub
imul
cmp
scas
jb
jno
stos
aam
jne
aas
repz
pop
sahf
fisubrl
push
inc
ficomps
cld
stc
or
push
xchg
mov
cmpsb
cmp
shrb
push
mov
xchg
dec
lods
xor
in
sub
ror
iret
loopne
faddp
mov
iret
pusha
lahf
xchg
add
fisubl
push
inc
cmc
pop
loope
sahf
sub
cltd
add
lcall
push
cld
jno
mov
add
mov
nop
xchg
dec
roll
push
or
aad
std
push
mov
sahf
aaa
push
push
mov
imul
ds
out
adc
inc
xchg
aad
mov
and
or
loope
inc
xor
sbb
mov
test
ret
or
mov
ret
addb
push
push
mov
das
add
inc
add
adc
push
xchg
test
fwait
cmp
dec
pop
loop
push
sub
mov
cmp
mov
and
inc
or
clc
cwtl
out
push
and
cmpsl
sub
jne
loop
dec
in
lea
shl
sub
pop
xchg
rcr
pop
add
sahf
out
mov
sub
test
negl
std
ret
pop
rolb
or
scas
dec
cmp
mov
into
cmpsl
jp
push
inc
popa
fidivrs
lds
loope
mov
cmp
out
push
push
adc
sbb
jae
mov
cmp
jae
cli
mov
cs
sub
ret
das
mov
mov
ret
cmc
and
stc
cld
outsb
sbb
push
clc
loope
dec
addr16
call
arpl
fs
jne
mov
mov
push
scas
xchg
mov
jnp
xchg
lret
adc
jns
sub
push
xor
cltd
dec
sti
xorb
mov
sbb
xor
add
outsb
add
lret
iret
xchg
sub
xor
sbb
push
mov
jp
loope
jle
cmc
mov
sbb
jb
enter
rclb
outsb
push
inc
fisttpll
jp
adc
mov
push
ret
cmpsb
xchg
jbe
call
mov
dec
lea
icebp
enter
fdivr
mov
xchg
jae
adc
sbb
mov
push
pop
mov
push
aam
les
push
inc
es
in
adc
cmp
add
and
adc
stc
scas
pop
mov
mov
and
inc
in
cmp
decl
mov
sub
lds
data16
testb
std
loopne
sub
xchg
test
je
out
mov
xchg
jne
jo
in
into
rorb
test
loope
jns
jle
sbbb
mov
jne
adc
rol
dec
cltd
pop
movsl
add
add
or
mov
mov
pop
xor
jge
mov
lods
pusha
mov
inc
popl
lret
xchg
push
jb
adc
stc
dec
cmp
xchg
mov
add
xor
sub
mov
std
pop
out
sub
sbb
testb
out
jno
cmp
fisttpll
sub
ds
and
mov
call
mov
lahf
out
repnz
call
jle
into
fidivrs
mov
rcrl
dec
cld
test
fistpl
push
xor
lahf
xor
inc
cwtl
pop
add
iret
adc
icebp
cmp
lahf
dec
cmp
insb
push
jl
adc
jns
addr16
test
loopne
ret
push
mov
dec
aam
adc
sahf
data16
add
or
cmpsl
out
mov
dec
testl
adcl
jae
xor
push
vprotw
jmp
out
jmp
xorb
dec
pusha
push
pop
inc
cmc
xor
push
xchg
rolb
icebp
lret
repz
data16
popa
push
cmpsb
push
inc
stos
mov
and
rdmsr
lea
ss
mov
pop
aam
jbe
cs
int3
rolb
xchg
insb
dec
jae
mov
popa
mov
push
mov
xlat
cwtd
out
mov
xchg
ss
jbe
push
mov
and
into
gs
dec
push
insl
popw
lahf
in
dec
dec
sub
je
sti
jl
jmp
loope
inc
dec
mov
xor
push
xchg
fcoml
in
lods
in
push
and
ljmp
adc
push
mov
imul
mov
jecxz
mov
insl
xchg
lods
stos
add
imul
test
loop
mov
add
or
cs
and
pushf
mov
fdivrs
inc
mov
dec
jnp
shl
jecxz
and
in
pop
and
es
inc
adc
or
jp
mov
inc
push
lock
fstps
xor
fcoml
test
cmp
sub
xchg
bound
push
xor
cmp
or
cmc
sarl
xchg
fs
mov
adc
loopne
insb
xchg
fistpl
adc
jnp
mov
and
adc
or
inc
mov
sub
or
push
iret
adc
mov
mov
mov
mov
imul
lock
mov
inc
gs
mov
mov
fs
mov
dec
dec
pop
mov
xchg
and
jg
add
nop
pop
test
leave
xchg
push
push
insb
scas
mov
pop
and
insb
mov
adc
imul
pop
adc
mov
adc
cld
and
sbbl
lcall
add
stc
pop
rcl
pop
fsubs
xor
call
or
sub
sbb
testb
lcall
jge
aad
jmp
cmc
fnsave
movsb
sub
or
add
adc
iret
dec
xchg
and
leave
subb
xor
jno
frstpm(287
adc
cmc
scas
dec
repnz
mov
insb
inc
sbb
in
and
in
push
mov
mov
sbb
push
roll
push
dec
mov
and
or
imul
cmp
xlat
push
push
push
pop
jae
xchg
ficomps
adcl
dec
std
xchg
lea
sbb
adc
fmulp
andb
out
out
mov
mov
and
xor
int3
idiv
mov
or
popf
movsw
cmp
ffree
xchg
inc
mov
idivl
je
xor
leave
xor
xchg
arpl
jbe
cli
popf
inc
sarl
ljmp
push
test
jo
scas
xchg
mov
loop
inc
or
or
out
xor
jnp
clc
inc
adc
aaa
cmpsb
adc
mov
sbb
mov
mov
and
out
jno
int
cld
pop
aas
idiv
cmpsl
sub
orps
fnstenv
repz
push
scas
mov
add
fidivrl
xor
jns
cmpsb
sub
xor
shl
push
xchg
aas
inc
push
jnp
inc
sbb
rcl
outsb
jae
outsb
mov
adc
test
pushf
sub
test
and
mov
cld
or
adc
test
fistpl
pop
movsl
hlt
cmovb
fists
fdivrl
subl
rcl
test
mov
enter
aaa
mov
int
lds
cmpsl
pop
mov
lcall
fiaddl
cld
stos
imul
jae
pop
push
mov
adc
icebp
mov
bound
jp
lods
pop
add
dec
scas
inc
lcall
add
shrl
fildl
leave
mov
inc
inc
and
xchg
out
push
jmp
xchg
lret
ret
cmp
fdivr
dec
mov
lret
mov
popa
andl
insb
adc
pop
andb
ljmp
jae
cmp
xchg
es
out
push
frstpm(287
fnsave
or
xor
cmp
and
shrb
pop
and
ret
xchg
xchg
sub
push
cs
leave
lret
xchg
and
mov
stc
sar
adc
adc
push
adc
shlb
jns
push
in
inc
pop
adc
or
adc
cltd
test
mov
loop
mov
xchg
adc
mov
cmp
xchg
or
mov
mov
ss
jmp
mov
xor
stos
mov
xorb
jnp
push
dec
testl
sbb
and
xchg
je
push
pop
dec
push
cwtl
mov
push
jp
add
sti
push
aas
mov
push
ja
cmpsb
cmp
cmp
in
out
xchg
cli
push
cmp
dec
and
sahf
je
popf
daa
andl
loopne
adc
mov
sarl
push
mov
push
out
lods
push
add
or
sub
movsl
jns
xor
jge
popf
dec
stc
sbb
jmp
adc
sub
or
xlat
and
out
inc
insb
stos
js
cmp
inc
inc
or
dec
cmp
or
lcall
xchg
dec
adc
pushl
adc
add
into
call
sbb
sub
adc
shll
sbb
jbe
mov
hlt
inc
lds
repnz
adc
das
push
shlb
sub
mov
pop
fcoms
cmp
jb
or
add
xor
repz
cmp
adc
or
pop
push
hlt
dec
push
inc
cmp
popf
mov
movsb
mov
cmp
xor
lcall
or
fs
sub
js
stc
push
jg
xor
out
xchg
mov
pop
inc
sub
into
mov
cmp
cmp
cld
sti
push
push
ret
dec
inc
sbb
dec
xchg
push
adc
test
jne
adc
bound
out
jle
lods
insb
aaa
xchg
popl
or
or
add
mov
mov
and
imull
scas
test
dec
stos
roll
cmp
out
nop
xchg
pushf
das
pusha
mov
xorb
sbb
add
xchg
idiv
push
in
cmp
adc
mov
jmp
leave
ret
xchg
movsb
xor
mov
cmpsl
dec
xor
data16
dec
aam
out
cwtl
xor
ljmp
sahf
add
lret
sti
je
in
ja
js
adc
loop
and
insb
or
add
ss
push
stos
cmp
and
sbb
jle
sub
out
cmp
lcall
in
add
xor
arpl
sbb
and
stos
loopne
cmp
ret
mov
insb
inc
sbb
push
hlt
in
xor
jg
xchg
es
push
iret
mov
lock
adc
and
cmp
andb
adc
mov
jecxz
jecxz
dec
dec
adc
test
jns
jnp
cld
std
js
jnp
sbb
push
test
jmp
je
repnz
add
call
mov
pop
xchg
xchg
sub
mov
call
jns
pop
mov
mov
push
rcl
xlat
fcmovb
int3
mov
call
push
jo
aam
sbb
aad
mov
xchg
mov
shlb
shr
sub
shll
and
js
sbb
lahf
and
pop
loopne
pop
in
inc
jle
fistpll
scas
xor
inc
scas
popf
shl
lcall
lcall
sbb
or
pop
dec
adc
sbb
outsb
aad
dec
jp
adc
js
movsb
add
out
fld1
and
pop
push
xchg
mov
cmp
jo
rorb
sbb
mov
xchg
dec
sbb
sub
sbb
sbb
adcl
fdivs
push
lods
mov
and
mov
sti
mov
out
aad
dec
sti
or
fldz
negb
leave
fs
dec
cltd
repnz
jns
mov
imul
mov
nop
cld
push
cmpsb
test
push
loopne
test
insl
ja
cmc
sbb
int3
jg
xchg
pop
dec
aad
mov
pop
jecxz
push
gs
daa
add
loope
jb
ja
mov
fs
repnz
addr16
movsl
adc
sub
dec
adc
mov
push
cwtl
pop
mov
rclb
mov
jae
push
lahf
mov
push
sub
mull
adc
mov
movsl
lods
adc
adc
sahf
cmp
aas
lods
mov
shrl
out
outsb
loope
cltd
cwtl
xor
and
lahf
aad
std
cltd
inc
xor
pop
and
fsubr
pop
sbb
mov
jbe
mov
cwtl
je
ds
and
and
xor
dec
and
xor
jo
dec
or
dec
shlb
test
adc
pop
iret
mov
lds
push
and
sbb
dec
adc
sub
das
fs
mov
mov
daa
jns
pop
push
xor
fcomps
sarb
stos
sub
adc
cmp
inc
dec
sbb
cs
ljmp
je
inc
popf
mov
in
push
lahf
push
movsl
mov
mov
scas
movsb
stc
aam
sub
ds
ss
and
mov
pop
shrl
jmp
sbb
das
push
inc
pusha
push
xchg
stc
fimull
add
mov
fidivrs
call
nop
dec
xlat
pop
pop
outsl
or
xor
jle
adc
stc
mov
lret
sbbb
scas
insl
cmc
pushf
lds
xchg
or
sub
sbb
jp
lea
cmp
adc
jo
lock
sti
pop
ljmp
je
and
stos
js
sahf
ret
sub
ret
sub
lock
rclb
cmp
xchg
adc
adc
dec
mov
fisubrl
add
pop
xor
jae
cltd
lcall
fisubl
mov
fsubr
cwtl
cmpsl
sahf
pop
add
push
and
fwait
inc
cmp
fsub
fdivp
cld
lret
mov
push
iret
mov
out
insb
pop
cs
repnz
inc
sub
push
scas
xlat
pop
sub
lock
jae
popf
gs
pop
push
or
in
pop
emms
add
sbb
loope
add
pop
push
mov
add
fistl
clc
in
aaa
enter
fwait
push
mov
adc
inc
sahf
cld
cmp
xor
or
fcmovnu
jns
mov
movsb
push
push
pop
pop
stc
mov
xlat
cmc
mov
sub
ret
loope
movsl
jge
in
xor
cmpsl
jmp
imul
add
mov
mov
adc
push
push
bound
shl
aaa
xchg
mov
push
outsl
pop
jle
inc
add
ss
pop
sub
btsl
lock
mov
test
in
data16
push
sbb
aaa
sbb
push
je
push
or
xchg
pop
bound
cmp
push
mov
add
mov
out
mov
jp
lret
jno
scas
repz
xor
mov
in
es
ja
mull
push
xchg
ljmp
popa
mov
push
repnz
dec
mov
aaa
inc
test
divb
fld
pop
xchg
ret
mov
mov
adc
xchg
dec
xlat
mov
cmp
xor
or
pushf
xor
pop
fnstsw
cmpsb
fcoms
repz
inc
faddl
lods
pop
addr16
inc
cltd
mov
mov
incl
cmc
shl
xor
jmp
je
imul
xchg
adc
and
sub
add
mov
cli
lea
or
jecxz
pop
bound
test
mov
cmpsb
repnz
mov
fimull
shlb
sub
sbb
mov
ss
sbb
mov
dec
std
loope
push
xlat
push
cmpsl
shlb
mov
loop
xchg
fstp
popa
cli
sbb
and
shl
xchg
cli
loope
sahf
mov
dec
fsubrs
mov
aam
sbb
mov
mov
enter
mov
ret
inc
pusha
inc
xor
sub
out
or
mov
insl
lret
sub
mov
add
xor
or
stc
repnz
call
dec
mov
dec
pop
je
iret
test
and
sbb
fistpl
xchg
cli
xor
scas
xor
js
inc
inc
psrlq
int
adc
ljmp
std
jmp
mov
sub
out
cli
mov
icebp
cmp
out
or
inc
adc
add
popl
or
pop
dec
xor
or
insb
adc
pop
lcall
jne
loope
sbb
or
ret
jae
mov
clc
jp
lret
adc
insl
sub
jnp
mov
inc
aaa
cld
clc
mov
mov
cmc
push
jg
outsl
jne
stos
mov
in
or
mov
xor
aas
lea
ret
jmp
call
adc
iret
push
or
add
pop
pop
inc
cmc
cmp
jle
sub
int
add
jae
out
mov
or
mov
pushf
mov
adc
inc
push
repnz
out
insb
mov
rcl
out
arpl
pop
dec
lds
imul
aam
and
dec
and
xchg
add
add
or
jp
dec
dec
cmpsl
inc
cmp
push
jge
xchg
push
dec
sahf
sub
ret
lret
jl
push
data16
mov
sbb
mov
lahf
xorl
mov
insl
xchg
cmp
sbb
push
or
mov
daa
or
or
sbb
addb
mov
sub
pop
rcll
psrad
inc
cmpsl
jno
sbbl
test
xchg
sbb
sub
sti
jle
movsb
add
dec
jae
xchg
jo
xchg
add
std
mov
or
arpl
lock
subb
and
in
lahf
or
bound
iret
dec
pop
test
addr16
mov
jge
enter
inc
lock
or
inc
jb
lds
enter
fistl
mov
std
sub
aam
std
imul
dec
pushf
movsl
popa
push
aam
or
mov
sahf
test
mov
sbb
mov
leave
mul
cmp
pop
xchg
jmp
xor
add
add
test
notl
repnz
into
test
je
es
imul
ds
adc
lea
cmp
or
fisttpl
mov
cmp
in
pusha
and
pop
sub
mov
and
and
nop
adc
pusha
inc
mov
jmp
test
add
jg
mov
adc
pop
add
sahf
data16
xchg
bnd
das
test
in
negb
jns
nop
jmp
cmp
sbb
cli
xchg
gs
ljmp
xchg
arpl
fwait
jns
xor
cmp
mov
call
xchg
arpl
push
jecxz
cmc
leave
arpl
add
or
dec
or
aad
sub
pusha
pop
arpl
push
jmp
ljmp
sub
push
or
push
je
test
and
xchg
mov
xor
lcall
xchg
xor
add
outsl
sub
mov
push
arpl
fimull
cli
es
push
das
sub
loop
pop
fstl
push
movsb
xor
mov
inc
clc
or
or
aam
jg
dec
fldenv
movsb
inc
mov
imul
out
xor
mov
cmp
test
mov
stos
ja
icebp
mov
rol
push
sub
insl
adc
cmpb
mov
dec
sub
sub
push
sbb
xchg
fisubs
fwait
add
sbb
xchg
jp
ja
js
leave
mov
push
popf
repnz
xchg
lea
xor
cltd
pop
hlt
xchg
rcrl
ja
xchg
adc
aas
jne
jge
inc
stc
mov
rcll
push
scas
add
mov
sahf
adc
mov
scas
adc
ljmp
out
inc
mov
xchg
cmpl
jge
add
sbb
mov
dec
fidivrl
dec
jp
shlb
dec
push
cmpsl
movsb
add
dec
icebp
aas
xchg
ja
pop
jns
int3
xchg
mov
mov
out
xor
cmp
ja
dec
arpl
int3
fidivrl
scas
jp
sub
in
out
jo
enter
fldcw
jecxz
or
pop
rorb
mov
mov
nop
adc
push
imul
fdivrs
jo
push
mov
pop
cmc
and
mov
mov
lahf
cmp
and
add
pusha
fistps
pop
push
call
fidivrl
and
xor
pop
movsl
mov
sbb
or
rorb
xchg
or
hlt
dec
add
movsl
dec
xchg
dec
sbb
out
out
and
addr16
cmp
and
mov
xorb
decb
pop
pop
or
inc
mov
and
inc
les
mov
flds
xchg
push
push
xchg
stos
and
jno
out
or
cmp
push
jbe
js
mov
adc
add
sahf
mov
jnp
dec
cmpsl
mov
pop
jno
pop
mov
and
mov
xchg
or
jecxz
mov
mov
xchg
push
mov
cmpsl
ret
push
cmpsl
mov
push
mov
mov
ljmp
xor
js
lods
out
cmp
jg
out
pop
clc
xchg
cltd
aas
std
dec
mov
jo
xchg
xor
xchg
fdivl
and
out
orl
negb
xor
test
in
mov
mov
dec
andb
es
jo
mov
mov
inc
call
cltd
lods
icebp
dec
rcrb
or
inc
call
les
data16
jnp
adc
push
cmpsb
push
sbb
push
pushf
enter
mov
inc
insl
test
testl
iret
and
dec
aaa
lret
mov
and
cmp
xchg
test
mov
out
jae
jmp
mov
lods
jge
cmpl
sahf
das
rcl
cld
or
lret
test
test
rcr
and
inc
push
mov
push
lret
cmc
mov
loop
push
fmull
daa
aam
mov
icebp
sbb
mov
lds
lcall
mov
pop
mov
stos
adc
mov
push
outsl
xchg
andb
pop
push
je
out
add
mov
mov
jge
mov
out
jle
mov
mov
adc
loop
repnz
cmp
test
inc
iret
jecxz
cwtl
pop
aas
mov
or
mov
jbe
out
mov
xchg
xchg
jmp
mov
push
sub
jmp
xlat
dec
mov
xchg
shll
push
aad
inc
pop
add
bound
mov
cmp
es
add
jnp
icebp
sbb
and
mov
rclb
lahf
lahf
loopne
cmp
ret
out
mov
pop
jp
xor
vpsadbw
xchg
cmp
ret
jae
jecxz
jl
and
cmp
lods
inc
call
adc
int
push
dec
dec
pop
fnstenv
add
int
aad
testl
imul
cmp
in
sub
pop
jg
int3
mov
imul
mov
repz
scas
jmp
iret
icebp
inc
mov
xor
je
cmp
xchg
js
push
mov
fwait
sub
out
adc
rcll
les
sub
xlat
or
push
inc
jae
shll
mov
mov
in
lock
rsqrtps
jecxz
jl
mov
adc
mov
out
out
lds
fstpt
mov
mov
dec
inc
push
iret
addr16
sub
sbbb
test
mov
sub
cmp
mov
and
jnp
enter
lods
fmuls
sbbb
push
ret
push
std
xchg
sbb
sub
mov
idivl
out
ficoml
cmp
dec
lahf
push
xor
jbe
and
mov
push
xchg
sbb
mov
jmp
pop
jns
leave
inc
xor
out
int3
int
imul
xlat
je
test
dec
out
cmp
shrb
dec
inc
imul
aas
rol
lcall
loopne
cwtl
sbb
ret
arpl
or
imul
sbb
fisubrl
xor
rcll
sub
mov
pop
jge
fcoml
hlt
movsb
or
sbb
enter
jmp
add
jmp
cltd
gs
shlb
test
arpl
mov
push
and
xchg
cld
and
xor
ret
cmp
out
int3
and
xor
fcomi
and
ja
daa
sub
fldt
loope
cmp
inc
pop
or
mov
mov
sahf
jg
or
cmpl
or
mov
sbbl
aad
iret
andl
stc
jecxz
mov
fnstsw
in
enter
pop
inc
dec
rclb
cld
js
iret
out
rclb
mov
and
shrl
push
ret
xor
lea
jmp
xor
sub
inc
mov
push
fnstsw
pop
loop
pop
lock
xor
int3
xchg
fstl
adc
out
ret
enter
bound
cwtl
mov
rcll
in
mov
xchg
aad
push
ret
movapd
out
in
ss
mov
andb
push
and
inc
icebp
lock
movsb
ja
dec
mov
jno
mov
and
sub
jecxz
cltd
movsl
aam
mov
rcll
pop
in
scas
cmp
scas
pop
jno
mov
test
sbb
test
ret
push
lret
and
mov
or
ret
dec
cli
cmp
cmp
scas
xchg
iret
lods
sbb
aam
negb
aam
sbb
test
imul
mov
loopne
imul
inc
pop
iret
addr16
inc
or
dec
movb
and
mov
call
inc
fistpll
adc
xor
cmpsb
push
cmp
lcall
xor
shlb
adc
pop
sbb
movsb
fwait
cmp
nop
mov
adc
dec
mov
inc
cmp
scas
cltd
or
and
xchg
je
in
lcall
popf
loopne
fcoml
pop
rclb
push
adc
dec
or
pop
loopne
jo
sbb
xchg
mov
test
subl
mov
mov
rclb
fsubs
or
jns
aad
jno
pushf
pop
mov
adc
inc
fcoml
je
jns
mov
stc
imul
std
mov
add
sub
sub
in
mov
cmp
add
jle
subl
xor
xchg
pop
out
repnz
jmp
inc
jb
dec
mov
jge
test
andb
xlat
out
lret
or
loop
lret
jb
aas
push
scas
cmp
stos
fs
jp
or
and
push
cmp
pushf
incb
jne
add
push
ds
mov
movsl
outsl
push
add
test
mov
out
cmpsb
xchg
fnstcw
je
xor
daa
push
mov
stos
lods
xor
mov
outsb
xor
mov
mov
jb
adc
cmp
int
pop
xchg
mov
pop
add
mov
sub
xor
jne
and
jmp
sbb
into
sbb
add
cmc
mov
out
and
push
sub
push
inc
in
test
orl
push
dec
lods
loop
adc
mov
adc
push
mov
sti
xor
jo
lret
xchg
mov
repnz
test
xor
or
lods
push
inc
cld
arpl
lret
and
xor
fs
testl
or
repnz
sbb
or
sbb
or
test
push
into
mov
ficoms
rclb
shlw
dec
aad
popa
adc
xor
push
mov
insb
adc
and
mov
sub
push
sub
enter
sbb
idivl
inc
lods
mov
jo
xchg
popa
popa
push
loope
subl
insb
or
pop
cmp
jle
leave
ljmp
cmpsb
movsl
adc
fscale
add
repz
adc
jg
mov
nop
mov
inc
incb
xchg
js
cmp
mov
loop
xchg
inc
rorl
mov
jecxz
pop
pop
push
in
les
sbb
shlb
push
cld
insb
cmc
xchg
or
sbb
dec
xor
cmp
sub
xchg
inc
ljmp
jge,pt
push
cltd
mov
pop
test
jnp
mov
gs
and
mov
push
add
push
lea
push
adc
jae
das
xchg
gs
pop
cmpsl
push
xor
lods
nop
cmp
sbb
out
int3
cmpl
pop
test
outsb
ds
nop
scas
popf
andl
push
mov
xor
push
gs
jne
cwtl
mov
int3
pop
les
mov
lcall
inc
or
ss
mov
xchg
pushf
repnz
mov
dec
mov
push
outsl
imul
and
xchg
jbe
fucompp
dec
movsl
cli
xchg
test
xchg
inc
out
fwait
cmpsb
ja
sbb
or
pop
inc
into
inc
aaa
les
repnz
pop
sti
sbb
enterw
mov
adc
decl
push
test
int
dec
jmp
mov
pop
add
push
lret
add
mov
push
push
push
aam
fistpl
mov
dec
adc
mov
dec
es
xor
mov
stc
xchg
fldenv
in
rclb
sahf
jmp
cmpsb
int3
adc
xchg
fdiv
xchg
pop
pop
inc
cmp
cmc
loop
pop
pop
xchg
mov
mov
push
clc
mov
push
mov
or
ret
add
mov
lock
sbb
sbb
sbb
dec
jno
mov
dec
mov
hlt
arpl
jmp
cmp
xor
int
cmp
or
mov
loopne
mov
adc
sbb
out
aad
inc
xchg
mov
aas
adc
sbb
ret
ret
dec
adc
sub
gs
dec
mov
out
jbe
xchg
push
arpl
loope
mov
js
shrb
inc
cld
mov
sbb
dec
cmp
xor
in
xchg
cmp
inc
lds
test
repz
and
addr16
movsl
cmp
inc
sub
in
jne
mov
ret
adc
xor
inc
insl
aaa
xchg
xchg
andb
push
aam
push
push
adc
leave
shl
sub
sub
xchg
cmp
or
insl
aad
mov
rcr
mov
inc
nop
pop
jg
push
mov
ljmp
sbb
mov
mov
cmpb
mov
mov
setae
int
xor
jmp
add
scas
and
orl
fstl
gs
dec
repz
mov
das
lcall
das
cmpsl
ret
ja
scas
ret
and
mov
xor
mov
pushf
pop
cltd
enter
push
stos
roll
out
int
in
nop
cmp
mov
inc
cmp
loop
fnstcw
outsb
cmpsl
ds
shrl
cmpb
mov
push
hlt
testb
dec
add
mov
movsb
lea
lahf
xchg
and
dec
ljmp
dec
cld
mov
mov
xchg
cld
mov
das
adc
adc
xor
scas
cld
xchg
push
jge
icebp
and
push
cs
xor
or
add
xchg
stos
mov
icebp
mov
test
cmp
gs
repnz
xchg
cmp
mov
scas
sbb
pushf
jne
inc
sub
jecxz
dec
in
hlt
xchg
push
xor
xor
add
insb
negb
fsubs
sbb
iret
out
in
jge
lock
repnz
adc
shl
adc
xchg
push
or
mov
or
mov
pop
enter
sti
and
pop
cmp
inc
lods
jge
push
je
cmp
sub
sbb
mov
and
or
dec
and
xor
lret
nop
aam
mov
xchg
sbbl
xchg
pop
or
in
std
cld
sub
rolb
loopne
lret
and
xor
push
sub
push
or
jecxz
leave
inc
icebp
shlb
mov
ficoms
cmc
jle
dec
dec
fidivrs
push
clc
or
rcr
ss
ds
aaa
inc
pop
lea
lret
outsb
imul
cmp
cmp
add
addr16
push
fsub
arpl
add
add
jne
and
add
fdivr
cmp
adc
xor
or
mov
call
mov
mov
xor
fcoms
sub
bound
xor
add
jnp
mov
test
inc
je
fldenv
xor
xor
dec
es
inc
cmpsl
test
mov
inc
movsb
mov
cmp
cmp
dec
test
dec
adcb
movl
jnp
and
push
leave
adcb
push
nop
sti
adc
imul
insl
cld
add
sarb
lcall
and
push
je
or
sbb
or
and
xchg
cltd
cmp
and
sub
jl
sbb
jns
hlt
insb
out
push
add
xor
mov
cltd
popa
mov
adc
inc
xchg
mov
pop
mov
lcall
orb
cmpsb
fsubp
rolb
jmp
cmp
mov
stc
inc
mov
pop
jl
loopne
cmpb
dec
adc
jno
hlt
xchg
adc
push
lds
clc
nop
test
jge
std
jp
mov
outsb
mov
xor
mov
push
maskmovq
aad
sbb
lea
adc
inc
jecxz
push
stos
inc
jle
lret
in
out
dec
outsb
stos
mov
addr16
sarl
in
push
adc
xchg
cmpsb
rolb
ds
or
test
pop
cmp
inc
shlb
push
movl
loopne
lea
enter
pop
push
fucomp
or
cwtl
jle
dec
pop
xchg
out
popa
inc
sub
pop
iret
test
lock
je
insb
pop
sbb
ret
popl
in
into
dec
stc
or
adc
push
mov
jle
ja
mov
sub
js
movsb
mov
pop
ljmp
out
sbb
test
jle
add
jmp
push
fiadds
and
dec
mov
jnp
fcoml
sbb
repz
sbb
lcall
aaa
pop
xor
inc
ss
out
cs
jbe
inc
or
jo
inc
cld
dec
jnp
jmp
sbb
cmp
scas
cwtl
sub
mov
dec
filds
inc
mov
gs
or
aam
in
cmc
and
test
xor
xor
daa
dec
sbb
addl
int
hlt
push
and
push
imul
jb
sbb
cmpsl
pop
lods
mov
popf
push
cmp
test
gs
xchg
fisttpl
icebp
cmp
ljmp
fsubp
addr16
pop
adc
mov
scas
sti
fs
pop
ret
cltd
and
push
sti
jmp
inc
int3
mov
clc
mov
stos
clc
xlat
in
into
mov
and
mov
add
lock
pop
push
cmp
in
push
jo
pop
inc
push
xchg
jecxz
pop
mov
adc
dec
xor
lods
pop
rorl
je
ds
out
add
pop
inc
fadds
lcall
ficoml
dec
mov
mov
inc
inc
lods
jl
lds
dec
shll
lods
testb
adc
mov
scas
pop
jg
or
and
incl
ret
mov
loop
pop
inc
pop
jp
xor
xor
in
mov
jg
les
loope
push
int3
inc
add
adc
xchg
pslld
add
push
sub
mov
mov
sub
mov
popa
into
adc
sub
js
ja
insl
dec
mov
cltd
xchg
add
inc
or
enter
jb
sbb
arpl
jmp
popa
mov
mov
or
mov
pop
inc
xor
loope
inc
int
cld
lods
sarl
push
lds
inc
loop
dec
pop
stc
int3
xchg
movsl
xchg
push
int
in
xor
dec
mov
sti
std
fldt
js
sbb
testb
sbb
outsl
pushf
or
push
xor
cmc
out
iret
or
cmp
jnp
push
lods
xor
sub
inc
dec
shr
popf
pop
pop
leave
sbbl
adc
lahf
cmp
lea
xor
out
cmp
push
subb
int3
xchg
sub
mov
stc
mov
aaa
cmp
push
cltd
je
fsts
pop
pop
aas
jp
movsb
fsubrl
setl
sbbl
cld
adc
jmp
jp
mov
xor
test
addb
pop
cmpsl
add
mov
jae
aaa
insb
stos
pop
fiaddl
xor
outsb
pop
sbb
jg
out
ret
mov
mov
mov
in
and
or
daa
and
mov
pop
sub
push
out
push
push
push
push
push
fildll
pop
nop
fildll
cmp
scas
les
cwtl
jmp
cltd
push
daa
cli
and
mov
popf
ljmp
sbb
movsl
adc
call
add
mov
sbb
adc
in
push
lahf
xlat
mov
jns
xchg
or
fmull
gs
add
js
sbbl
scas
mov
mov
jl
and
call
es
lods
mov
jns
mov
mov
sub
inc
fs
mov
ret
add
add
xlat
or
cmpsl
shll
aad
pop
inc
lods
mov
jns
sbb
push
mov
jae
ja
orl
xor
in
sarl
mov
in
lret
aad
je
lods
xor
jbe
adc
fildl
sbb
mov
mov
or
inc
orl
ljmp
mov
out
inc
add
popf
cmp
test
adc
mov
fs
dec
ret
jb
test
adc
enter
out
ret
add
mov
sub
pop
xchg
pop
mov
jb
or
adc
ds
sub
ret
les
orb
test
mov
bound
out
sbb
cmpsl
push
test
int
ret
iret
cld
loope
push
pushf
bnd
icebp
aad
mov
sbb
mov
mov
push
mov
je
sub
fdivrs
jp
into
arpl
mov
xor
xor
jecxz
jbe
shl
pop
push
imul
hlt
idiv
loope
sub
fistps
aam
repnz
rorb
ret
push
push
loopne
mov
stos
add
aaa
lods
xchg
push
insl
mov
mov
movsl
or
hlt
lods
xchg
or
push
inc
outsl
lds
ret
mov
dec
push
divb
inc
and
dec
and
inc
sbb
push
lahf
arpl
xchg
add
stos
adc
movups
xor
sub
hlt
push
push
aaa
xor
xor
stos
jnp
adc
push
mov
in
adc
pop
pop
jno
repz
add
adc
fadds
jb
fcomi
mov
pop
lret
sbb
mov
or
roll
out
mov
imul
inc
xchg
sbb
dec
mov
xchg
and
leave
push
xor
and
inc
and
popa
mov
jb
mov
test
push
cmp
loop
or
xchg
dec
loop
pop
xor
mov
inc
lods
dec
fsubrs
dec
rolb
cmp
push
leave
cmpsb
dec
imul
sbb
cmovge
push
or
pop
dec
fstpl
jnp
xor
push
xor
lahf
cmpsb
push
out
add
push
mov
mov
xchg
pop
movzwl
lahf
xor
xchg
cmp
fcmovnu
ret
gs
nopl
jnp
dec
xchg
lahf
sub
xchg
cwtl
push
mov
mov
shr
fs
xchg
inc
cmp
jge
pusha
xor
aam
pop
mov
addr16
push
pop
xor
lock
pop
mov
cmp
pop
movsl
inc
insb
adc
sbb
xchg
cwtl
pusha
xchg
repz
mov
outsl
cmpsb
lock
fmull
sbb
jmp
notl
mov
mov
cmp
in
push
or
and
mov
je
sahf
leave
test
jmp
sbb
lcall
dec
stos
xor
aam
clc
mov
test
int
es
negl
lods
push
sbb
pop
into
fwait
mov
repz
cmpb
insl
jle
mov
lock
adc
jo
int
push
out
and
xchg
or
popa
popa
jecxz
push
cmp
cmc
int
cli
xor
ja
and
aam
sbb
aad
lcall
mov
mov
adc
daa
js
mov
mov
jne
sbb
iret
mov
sub
add
js
push
mov
jns
dec
in
xor
sti
icebp
stos
cmp
push
aas
cmp
aam
jmp
xorl
jecxz
in
insb
jb
arpl
mov
cmp
rorb
inc
push
sub
outsb
cmp
mov
add
adc
jb
int
test
pop
xchg
pop
fsubrs
aam
mov
test
andb
insb
in
adc
mov
mov
xor
aam
ret
jne
inc
push
ds
out
inc
fisubrl
adc
incb
pop
pusha
stc
adc
test
insl
mov
pop
adc
sbb
cmp
aam
sahf
xor
ffreep
sbb
loopne
cmpsb
and
cld
lods
in
jp
dec
call
rclb
mov
mov
sarb
push
jle
negl
inc
and
popf
dec
mov
mov
sbb
cmp
sbb
fcmovb
clc
psraw
popf
lret
xchg
mov
in
testb
ds
shrl
les
rcrb
jmp
sbb
xorb
xchg
stos
je
test
ljmp
cwtl
mov
aad
mov
in
mov
sbb
jl
sub
mov
dec
dec
ret
or
push
mov
lods
mov
lods
cmp
fstps
adc
bound
xchg
and
xor
popf
hlt
sub
inc
fdivrs
cmp
push
inc
xchg
jns
push
add
sarl
sbb
out
fxch
or
mov
mov
adc
pushf
mov
push
jb
lcall
pop
test
dec
aad
adc
cld
or
call
stc
push
push
out
jo
mov
mov
dec
loopne
mov
vpunpckhbw
ret
add
outsl
into
mov
mov
push
adc
in
mov
dec
aam
add
jmp
shlb
push
cmpb
jmp
aam
scas
subl
out
sarl
cmp
pop
les
mov
push
call
imul
xchg
push
fstpt
adc
xlat
adc
into
hlt
xchg
iret
mov
lret
outsb
roll
mov
repnz
push
cmc
mov
pop
cmp
sub
mov
leave
xor
mov
sti
int3
and
fcmovnb
adc
xchg
push
mov
xchg
subl
icebp
mov
movsl
jae
sub
jns
insb
xchg
mov
in
mov
mov
sbb
fadd
testb
cmp
jae
insb
jo
and
data16
pusha
push
xlat
push
lock
in
outsl
fnstsw
push
inc
clc
loop
cltd
in
scas
jae
jmp
cli
xchg
cltd
scas
push
jae
xchg
out
lcall
push
les
push
xchg
xchg
aaa
mov
daa
test
inc
cmp
jmp
sbb
js
sub
mov
jp
repz
push
out
or
bound
fs
outsb
insl
jns
ds
clc
inc
into
and
fnstenv
fiaddl
inc
out
xor
adc
and
clc
incl
mov
cmp
int3
and
sbb
pop
xor
leave
loop
cmp
xor
xor
cmp
sub
addl
and
mov
mov
outsb
dec
sub
sar
and
and
pop
push
fcmovbe
mov
test
push
pop
imul
test
add
popf
jo
dec
loopne
scas
xor
push
add
insl
enter
jno
fcmovu
arpl
adc
add
xchg
cli
sarb
rorl
fsub
pop
pop
sub
cld
pusha
rcrb
nop
ja
cmp
or
scas
mov
cmpsl
in
mov
fiadds
xchg
xor
push
cmp
pusha
data16
mov
hlt
jb
in
rcrl
pop
push
jo
dec
mov
hlt
stos
inc
mov
inc
jno
and
sbb
gs
test
xchg
push
test
nop
out
xchg
inc
inc
add
sbb
mov
and
adc
enter
jmp
ret
shl
ss
xchg
fwait
out
andb
push
and
gs
ss
mov
push
das
cmp
cmp
lock
stos
sub
jl
push
pop
in
into
inc
xor
clc
in
push
pop
mov
mov
cmp
jmp
aad
cld
stc
cmpl
xchg
sbb
outsl
pop
sti
mov
rcrb
mov
jo
mov
fnsave
test
aaa
xor
call
sub
inc
mov
mov
lret
pop
cmp
cmp
xchg
inc
mov
daa
mov
rcrl
pop
xor
xor
xchg
dec
dec
mov
jp
shll
pop
sub
stc
cmp
push
xor
mov
testb
xlat
lods
leave
add
ja
fucomip
test
rorb
mov
out
push
in
mov
jp
pop
adc
jnp
lahf
sbb
jecxz
pop
push
fucompp
loope
das
fsts
xor
rcrl
add
sub
inc
in
mov
mov
pop
or
add
push
xchg
cmp
pop
fucomp
lret
pusha
add
jbe
mov
int3
jp
pop
inc
rol
pushl
pop
sub
out
adc
mov
jge
mov
jbe
fcmovu
ud1
movsl
xchg
push
ja
jecxz
sahf
jmp
sbb
mov
stc
mov
data16
xchg
cmpsl
inc
mov
dec
inc
add
pop
jecxz
lods
or
jg
xlat
mov
je
jnp
imul
sbb
mov
inc
push
sbb
stos
loope
in
std
mov
xchg
insl
loope
push
in
andl
and
pop
inc
or
or
enter
jo
test
cmpsl
lahf
mov
pop
add
xchg
mov
and
add
xchg
push
jae
push
xor
sub
mov
jnp
fdivrl
aas
mov
xchg
scas
rcr
in
mov
dec
pop
jge
lcall
in
inc
jno
jno
lahf
flds
addr16
cmp
fisttpll
lds
lock
dec
lret
mov
sbb
daa
xchg
push
pop
mov
xor
pop
ud0
cmp
mov
sahf
inc
mov
sbb
jg
fdiv
xor
clc
ficomps
rol
int
xchg
push
jae
inc
inc
cmpsb
cwtl
mov
xor
mov
push
push
or
add
pop
inc
jp
sahf
jle
jo
hlt
lret
std
testl
sub
cmpsl
xchg
rclb
lret
ret
bound
mov
jle
std
cmpsl
adc
daa
das
aaa
pop
popf
cs
add
push
xchg
xlat
mov
das
mov
inc
or
sbb
adcb
je
insl
push
lret
sbb
dec
data16
les
imul
inc
and
mov
loop
pop
sbb
adc
in
and
jbe
push
mov
mov
movsl
lds
jno
mov
mov
mov
jae
xor
jge
bound
pop
jmp
inc
mov
mov
lea
out
in
loop
mov
and
cmp
xchg
gs
arpl
fs
pop
mov
and
xor
fcomi
call
lret
pop
pushf
rep
cmp
les
ljmp
daa
lret
mov
fs
inc
xchg
cmpsl
pop
xchg
cmpsl
out
ret
xchg
and
jnp
lods
cmp
fstl
into
aam
fsubp
jne
loop
les
mov
inc
lret
sbb
dec
xor
or
mulb
filds
inc
add
or
out
jnp
push
xchg
inc
lods
aad
pop
incb
mov
aad
add
test
push
inc
iret
fs
push
and
xor
out
sti
mov
mov
dec
push
adc
add
dec
or
push
pcmpeqw
push
adc
loope
sub
arpl
mov
mov
stc
cmp
bound
scas
out
daa
clc
mov
dec
mov
fdivp
loop
jecxz
test
and
and
cbtw
mov
xor
mov
into
pop
sbb
pop
jb
and
push
push
enter
aam
enter
and
shl
push
dec
inc
je
dec
daa
cs
lahf
inc
fcoms
and
mov
xchg
lcall
add
xor
inc
fldt
clc
and
jmp
lods
and
cmp
mov
lock
inc
xlat
aaa
das
mov
sub
outsb
pop
jbe
flds
jle
jbe
or
mov
sbb
test
out
pop
int3
test
loope
mov
inc
fadds
sahf
inc
cmp
or
sahf
xor
jl
mov
fmul
ss
out
push
leave
xchg
imul
jge
or
xchg
in
dec
add
jnp
dec
add
xor
inc
xchg
repz
aaa
lahf
cwtl
pop
push
mov
jns
jmp
in
movsb
icebp
dec
mov
vucomisd
push
mov
add
mov
retw
dec
insl
xor
sbb
cmp
mov
xor
cli
sahf
mov
int
repnz
push
decb
ret
inc
pusha
jno
out
ss
test
repnz
add
push
std
imul
cmp
and
shr
outsl
jno
into
jg
movsb
add
and
addl
mov
testl
add
push
fcoml
mov
int
sbb
repz
or
inc
out
nop
je
push
popa
es
jb
inc
mov
push
dec
xchg
xor
or
mov
ljmp
cli
movsl
movsb
popa
in
cmp
call
bound
and
lods
in
mov
pop
leave
xchg
xchg
pop
xchg
repnz
mull
pop
sahf
add
les
gs
cli
cmpsl
push
leave
loop
mov
xchg
mov
mov
xchg
dec
push
faddp
push
imulb
inc
mov
jp
mov
mov
mov
repz
out
hlt
jle
loop
jg
mov
cltd
pop
push
sbb
xchg
lods
shlb
pop
ret
sub
add
or
adc
ja
add
jge
pop
mov
dec
pop
pop
jbe
sbb
push
les
stos
nop
push
in
push
fsin
je
gs
push
push
xor
bnd
cmp
je
div
add
insl
insl
iret
lds
sbb
mov
mov
jmp
int3
pop
outsb
ss
mov
mov
out
arpl
data16
in
inc
dec
rcl
add
and
mov
adcb
or
aaa
cmp
int
popf
iret
ljmp
pop
sahf
push
push
movsb
ret
imul
lock
push
dec
and
xor
sbb
mov
ret
daa
shll
aaa
lock
insb
outsl
hlt
test
adc
and
rcrl
and
dec
xor
sti
and
data16
adc
sti
mov
mov
loope
cmc
into
out
xor
cmp
and
xor
ret
jne
xlat
mov
lea
adc
cmpl
jmp
push
movsb
ljmp
xor
std
sbb
imul
push
dec
mov
mov
cmpsl
fcmovnbe
lea
dec
movsl
push
push
cmp
data16
sti
cwtl
sbb
adc
xchg
sbb
or
imul
movsb
mov
loopne
jne
dec
ds
inc
repnz
fisttpl
sub
subb
insl
loope
out
stos
mov
push
shll
dec
jae
mov
jl
ljmp
jne
sub
scas
ror
adc
xor
stc
inc
pop
neg
inc
inc
adc
adc
add
dec
mov
and
in
mov
ror
adc
cmp
insb
bndldx
cmp
gs
cmpsb
shlb
mov
dec
xchg
icebp
pop
hlt
lds
dec
or
cmp
xchg
lods
cmpsb
test
pop
mov
sti
ds
call
jle
mov
enter
insb
pusha
outsl
adcb
aam
jns
imul
in
lret
cmp
rcrb
sbb
jle
mov
addb
adc
adc
sbb
inc
xlat
xchg
lret
mov
mov
outsl
cmp
loope
in
imul
aaa
push
xor
ret
negb
lock
into
das
dec
xchg
add
pop
sbb
xchg
mov
inc
enter
push
push
xchg
or
das
fsubs
sbb
out
sub
cmp
mov
adc
adc
leave
int
fisttps
insl
ret
ja
cld
mov
pushf
dec
jmp
ds
mov
movsl
add
ret
and
add
incl
rcll
test
icebp
in
hlt
adc
fadds
add
mov
test
sub
pop
dec
stos
mov
fxam
aaa
push
inc
inc
jb
orl
or
stos
mov
xchg
jb
mov
bnd
or
stos
fimuls
lcall
jmp
loop
cwtl
insl
cmc
fwait
dec
fimuls
sub
cmpsb
movsl
and
ljmp
push
jo
ss
push
sub
jo
les
jno
loop
adc
push
test
pop
mov
iret
pop
int
aam
movntps
gs
add
lods
icebp
cmpsb
xchg
popf
ret
xor
or
stos
repz
cmp
mov
fnsave
mov
add
add
aad
pop
pop
mov
xchg
cmpsb
call
nop
iret
xchg
jbe
sarb
fdivl
add
cmp
xchg
cld
cmp
sbb
jp
push
jle
sti
scas
sbb
or
mov
mov
lds
negl
lret
mov
cmpsl
imul
sub
loopne
push
mov
stos
out
xchg
pop
pop
jb
lock
cli
mov
inc
je
add
and
push
mov
fcoms
bound
push
addb
fistpl
fstpl
scas
jo
loope
and
jae
mov
aad
or
jns
push
inc
dec
sub
adc
adc
call
adc
int3
hlt
inc
pop
dec
mov
fidivl
loop
imul
pop
rcrl
test
rcl
jg
add
lahf
mov
jo
ja
faddp
div
pop
je
add
es
popa
out
clc
push
jns
dec
mov
sbb
xchg
enter
inc
jp
repnz
mov
loope
cmpsb
js
cmp
dec
xor
push
sub
addr16
or
xchg
sbb
lock
sbb
mov
sub
rorl
out
mov
xchg
std
lret
leave
sar
xchg
outsl
in
insb
subl
out
pop
mov
mov
and
xchg
mov
int
es
scas
scas
ljmp
pop
lds
daa
add
push
test
sbb
pop
or
and
mov
test
push
pop
mov
popa
insl
out
test
xchg
cli
clc
pop
push
adc
or
xor
pushf
das
jmp
out
and
cmpsb
ret
mov
xor
xchg
and
aad
inc
xchg
xor
jmp
mov
cs
lds
sbb
pop
sti
inc
xor
xchg
cmp
sti
in
addr16
sub
sub
mov
lahf
hlt
insb
adc
cmc
pop
fs
push
insl
into
les
cmpsb
push
pop
inc
lret
push
pusha
jb
mov
lods
into
and
fst
xlat
cmp
and
movb
push
adc
pop
or
jnp
loope
inc
mov
int
push
imul
rcl
dec
dec
inc
pop
rcrb
leave
cmpsb
or
jns
out
insb
pop
fdiv
sub
gs
nop
pop
inc
xor
adc
push
aaa
mov
aam
pop
lds
das
imul
jnp
shrb
mov
repnz
xor
sbb
inc
jmp
pop
addr16
scas
fimull
jecxz
sahf
or
sbb
xchg
sbb
xor
jp
inc
bound
push
pop
mov
sbb
fists
dec
pop
in
jb
loopne
lods
sbb
lcall
aas
sub
sbb
iret
inc
jle
stc
push
xor
mov
int
mov
nop
add
clc
in
in
push
bound
test
nop
pop
add
push
jmp
mov
dec
cltd
lods
inc
ficompl
mov
enter
mov
sbb
sarb
sub
adc
imul
push
inc
or
push
add
fmuls
leave
cmp
xchg
lods
jae
loopnew
inc
notl
shll
push
iret
jb
mov
push
inc
jno
int
mov
pop
pusha
ja
fisttpll
mov
sbb
in
push
int
hlt
out
jg
adc
fidivs
mov
imul
clc
jnp
jns
adc
inc
ja
ret
in
jmp
adc
hlt
lcall
mov
aam
out
jl
sbb
ror
sub
in
adc
mov
adcb
icebp
std
aad
jbe
fistps
push
leave
push
ds
lea
push
mov
pop
test
pop
cmp
mov
cmp
push
xchg
inc
test
xor
test
lahf
je
aam
int
push
leave
jnp
mov
add
repz
cmp
les
jmp
push
rcrb
inc
cmp
jbe
mov
aas
inc
mov
aam
gs
lock
insl
jns
rcr
mov
jp
jge
push
filds
in
andb
dec
fwait
inc
aaa
jno
popa
xor
mov
shrb
lret
lods
and
jno
out
cmp
nop
inc
dec
mov
iret
faddl
test
ljmp
pop
test
cmpsl
xor
in
cmpsb
lock
sar
add
add
jns
xor
pop
or
out
fsubs
es
xchg
pop
call
stos
ds
jno
or
mov
fiaddl
or
cmp
inc
sub
lret
cmp
jne
cmp
pop
inc
jne
mov
out
and
in
loopne
jb
aaa
adc
mov
lret
scas
jle
in
mov
arpl
les
sarl
ret
mov
mov
xor
ficoms
mov
je
into
push
orb
push
out
push
push
xchg
pusha
shlb
xor
das
shrb
pop
mov
xchg
mov
arpl
pop
std
xchg
lea
shlb
mov
shrb
and
mov
inc
xor
ss
clc
push
xchg
test
cmp
cmpb
inc
mov
ret
and
insl
xchg
sbb
mov
in
mov
xor
pop
inc
insb
mov
daa
gs
fwait
lock
shll
add
and
dec
xchg
xor
mov
test
outsl
outsb
adc
into
outsl
int
mov
inc
mov
xchg
cmp
sub
hlt
xor
xchg
stos
mov
test
cmp
xor
cmpsl
aaa
jle
les
inc
adc
cmp
and
insb
aad
push
push
mov
dec
adc
inc
ljmp
test
daa
add
sub
cld
ss
popf
push
and
cld
je,pn
pop
popa
jne
addl
dec
testb
in
and
in
pushf
lods
sub
xor
daa
jns
insb
int3
es
aaa
das
loop
xchg
idivb
and
and
pop
jg
or
or
xchg
or
addb
outsb
lods
les
aad
jb
ss
stc
shrl
je
hlt
sbb
cld
test
insb
test
cli
mov
xor
repnz
movsl
ja
lds
xchg
gs
inc
fs
push
xor
inc
jle
push
xchg
mov
ljmp
cmp
out
clc
aaa
lock
inc
and
jbe
repz
push
popl
loope
jge
stos
cli
loopne
pop
inc
pushf
mov
scas
dec
pop
icebp
repnz
fsubp
or
popf
cwtl
or
push
push
mov
imul
xchg
pushf
jbe
int3
mov
inc
test
cmp
loope
push
gs
lahf
test
jp
add
aas
inc
sub
loopne
lea
outsl
pop
fisttpll
dec
cmpsl
aad
das
loope
mov
add
enter
xchg
insb
test
jg
lods
inc
jnp
mov
lcall
in
loope
je
sar
adc
or
xor
jecxz
imul
mov
sub
sbb
mov
inc
jmp
std
add
stos
popf
adc
loope
popf
sbb
cltd
push
sarb
mov
ljmp
jno
fs
dec
push
xchg
add
mov
js
aaa
mov
mov
sbb
xor
test
mov
push
mov
mov
add
pop
fadd
ds
mov
or
xchg
sub
into
add
jo
adc
in
dec
push
mov
adc
sub
pop
movsl
arpl
bound
sbb
mov
push
out
dec
lods
repz
mov
adc
adc
aas
inc
mov
addr16
shll
aaa
push
inc
cmpsl
lock
pop
rcrb
jle
add
xor
dec
mov
insl
test
or
pop
pop
fidivrs
cwtl
mov
xor
and
push
pop
inc
rol
faddl
lcall
adc
push
shll
imul
cli
jns
cmp
push
das
out
pop
dec
in
sub
cmc
mov
mov
out
inc
mov
mov
push
inc
loop
dec
inc
or
fisttps
lods
stos
add
mov
or
cld
test
xchg
xchg
mov
lds
inc
sbb
push
mov
cmp
adc
push
aas
outsb
pop
out
mov
dec
push
xchg
idivb
insb
mov
mov
inc
and
mov
or
mov
push
pop
push
mov
mov
mov
xor
dec
push
inc
in
cld
lock
mov
push
sub
in
mov
mov
stos
insb
lea
inc
leave
or
das
dec
leave
and
and
cld
and
lds
insl
loope
lock
mov
push
and
xchg
jo
add
xlat
pop
arpl
sub
cs
jle
jbe
icebp
jbe
test
xchg
xor
dec
xchg
mov
mov
fcomps
add
iret
xor
aas
imul
in
aas
cmp
lock
add
mov
or
sbb
mov
lret
pop
iret
cmpsl
rcr
cltd
adc
fbld
jecxz
out
fcoml
cltd
mov
adc
lock
fbstp
jne
int
add
repnz
std
jnp
mov
test
push
mov
pop
popa
jbe
jecxz
mov
mov
xchg
andb
loope
shlb
xor
cmp
xchg
enter
imul
xchg
mov
xor
cli
push
cs
pop
iret
fwait
inc
or
call
sbb
js
xchg
add
jge
mov
dec
adc
mov
int3
dec
icebp
mov
aad
std
adc
adc
add
mov
mov
xlat
call
dec
mov
dec
pusha
aam
sbb
inc
dec
bound
enter
sbb
lods
mov
push
adc
cmp
or
pop
mov
sti
stc
test
xchg
inc
sub
in
cmpsl
mov
inc
fidivrl
enter
xor
cmp
enter
sbb
pop
aad
mov
mov
jp
or
or
inc
scas
dec
mov
scas
in
filds
adc
fbld
fsubrs
sbb
dec
jns
int3
std
cmp
test
xor
sub
popf
adcb
jecxz
mov
jo
popf
xchg
ret
ficomps
and
and
cs
or
dec
ficompl
in
insl
gs
ds
jae
and
repz
add
iret
lgs
push
xor
cld
fiaddl
mov
movsb
jge
xchg
pop
cmp
std
sub
imul
adc
pop
jge
rcll
lock
or
pop
call
push
mov
clc
mov
xchg
add
divb
mov
stc
mov
pop
inc
clc
sbb
fdivrs
stos
push
add
in
call
push
fistpl
and
add
jle
idiv
movsb
lret
int
push
xchg
sarl
jg
xchg
pop
fisubrs
ja
jae
jbe
push
mov
adc
cmp
adc
stos
repz
xor
xchg
jle
cmp
jmp
stos
xor
and
shr
stos
insb
jmp
clc
xchg
pop
sti
ficoms
cwtl
sub
rorb
or
int3
or
jg
mov
mov
jle
das
mov
mov
roll
xchg
and
cmp
xor
dec
sbb
jo
mov
adc
pop
cmp
enter
hlt
sub
jmp
lock
sbb
inc
lcall
ja
xchg
cmpsb
mov
dec
sub
sbb
daa
loop
int
rorb
hlt
hlt
sub
sbb
in
dec
mov
arpl
pop
or
jne
push
fwait
jmp
sbb
or
jmp
xlat
popf
mov
rol
sub
aas
imull
xor
addr16
aas
and
cmp
pushl
cltd
mov
and
subl
xchg
hlt
jb
fst
enter
stc
mov
jl
jmp
add
out
cmp
sbb
xchg
cs
jne
daa
lahf
lods
and
jo
pop
mov
stos
mov
xlat
test
or
xor
and
ds
xor
and
in
idiv
xor
jne
cli
stos
pop
sbb
iret
cmp
add
popl
test
stos
mov
push
xor
fldt
js
jl
dec
out
inc
nop
mov
jl
cmp
xor
add
das
add
xchg
mov
xlat
cmc
in
test
xor
clc
fdivrs
xor
sub
pop
lock
mov
shlb
sarl
dec
mov
jecxz
scas
jl
sahf
mov
dec
jl
jbe
mov
fisubs
aas
es
mov
testl
mov
dec
out
and
sub
mov
imul
jg
insb
push
into
jmp
adc
and
flds
mov
xchg
lret
mov
mov
xchg
popa
add
cmc
jb
scas
movsb
nop
pushf
push
lods
jg
scas
nop
add
and
incb
jbe
xlat
jl
push
insb
add
pushf
sbb
or
xchg
cmp
mov
aaa
mov
mov
cwtl
adc
shll
dec
pop
mov
out
mov
aaa
or
lcall
les
mov
jg
scas
loopne
jo
push
lods
sahf
jns
jmp
xor
mov
push
lds
addr16
lret
loop
or
pusha
test
xchg
mov
negb
adc
adc
push
jle
inc
add
notl
dec
pop
xchg
inc
jb
or
std
lcall
lcall
in
iret
lret
fdiv
mov
add
push
dec
jae
lcall
insb
inc
push
adc
lea
sub
inc
sub
addr16
fcomip
lea
aam
int
das
cmp
dec
mov
dec
push
or
sbb
jle
jmp
test
dec
ret
adc
insb
push
dec
xchg
cmp
xchg
dec
pop
test
imul
pushf
dec
xchg
fisubl
and
jecxz
das
ja
cwtl
sub
lret
ficoms
mov
jge
and
fbstp
imul
rclb
je
aaa
shrb
das
xor
call
jns
mov
mov
xor
lahf
push
jns
data16
pushw
pop
push
ljmp
push
sub
mov
xchg
subl
add
cli
pop
outsb
jns
jae
mov
mov
adc
xchg
xchg
mov
and
sbb
sbb
xor
adc
lods
sbb
fwait
pop
jns
push
cltd
add
sub
lods
push
out
push
mov
jmp
leave
inc
lret
outsl
mov
ret
push
icebp
aaa
adc
mov
jge
xor
add
pop
jmp
push
loop
arpl
mov
lds
and
pop
enter
push
pusha
mov
adc
lods
inc
call
fs
pop
mov
adc
scas
sub
adc
lods
ds
mov
add
icebp
mov
and
inc
sub
dec
cmp
pop
popa
int3
jbe
cmpsl
adc
push
mov
in
sub
sahf
or
push
call
pop
inc
outsb
addr16
lea
inc
shlb
pushf
jno
or
fs
pop
inc
pop
push
fnstenv
aaa
int3
inc
stc
sub
rorl
mov
andb
cld
sbbb
sbb
and
test
inc
adc
cmp
rorl
push
fwait
addr16
std
lahf
pop
mov
jns
in
mov
inc
adc
lcall
test
int
loope
mov
xor
and
into
sub
jge
data16
stos
cld
sub
push
add
out
fwait
sarl
pop
xchg
ret
jecxz
fldl
icebp
fwait
subb
mov
pop
js
test
and
or
jmp
in
stc
adc
rol
jae
cmpsl
xor
imul
pop
adc
into
scas
push
mov
cmp
les
sub
mov
sbb
push
cli
push
in
adc
lret
pop
jl
pop
xlat
push
adcl
mov
test
addr16
inc
push
loop
cs
scas
pop
out
xchg
rcrb
movsl
xchg
enter
fidivrl
mov
xchg
fildll
repz
cmp
or
sub
push
out
nop
lret
fldenv
cmc
aaa
adc
xchg
scas
or
mov
aas
xor
ffreep
push
pop
ret
dec
xchg
mov
nop
add
xor
movsb
pop
out
cmp
daa
fldcw
jle
mov
and
push
xchg
in
cmp
xchg
sti
add
std
jae
test
into
dec
fsts
scas
pop
lods
add
outsb
decb
mov
xlat
roll
repnz
into
inc
add
or
cmp
push
and
sub
push
inc
xor
and
cs
jae
leave
shlb
mov
sub
rolb
sbb
cli
iret
adc
mov
arpl
out
jns
xchg
pop
add
pause
cmp
lock
pop
inc
push
xchg
ss
mov
ret
iret
mov
pop
stos
mov
sbb
stos
pop
out
fdivrs
test
jmp
jns
cwtl
sub
push
dec
lret
shrb
ret
and
mov
orl
jae
test
or
nop
xor
cld
push
sbb
or
fsubrs
sbb
add
jnp
outsb
or
cmp
fisubrl
or
mov
sub
and
scas
cld
mov
test
int3
stos
sbb
push
out
mov
repnz
jnp
pop
outsl
lods
leave
and
mov
out
mov
arpl
sti
and
xchg
mov
lret
push
jecxz
dec
sbb
adcl
mov
xchg
addr16
and
pop
rorl
mov
outsl
int3
outsl
inc
pushf
fs
repz
leave
jp
dec
push
and
pop
cld
dec
or
jge
iret
les
lret
rorb
push
nop
mov
shrl
es
pop
in
mov
xchg
andb
xchg
pop
pop
adc
mov
adc
inc
shl
jns
xlat
sbb
leave
adc
sbb
ret
pop
pop
out
mov
and
rcrl
jno
test
testb
in
pop
jle
or
stos
mov
in
xchg
lds
jb
pop
jno
mov
xchg
test
cltd
pop
adc
in
cli
xor
or
jl
int
inc
aas
dec
pop
push
jmp
enter
arpl
jno
inc
fsubr
and
and
jge
push
mov
cmpsl
ljmp
jne
movsb
lock
adc
call
pop
sub
shll
mov
aad
pop
icebp
xchg
xchg
mov
inc
dec
bound
out
out
add
push
mov
test
stos
mov
cmpsl
cs
xor
pop
or
adc
je
sahf
mov
xchg
mov
shll
dec
hlt
mov
mov
jmp
mov
cmpsl
inc
int
enter
sub
jp
jae
or
jnp
adcl
sbb
sbb
add
mov
fcmove
cmp
movsl
outsb
sti
and
dec
pop
call
rorb
inc
dec
test
ret
lea
add
add
sub
adc
dec
scas
dec
daa
aad
or
cld
dec
out
cmp
imul
repz
stos
gs
dec
and
arpl
xchg
dec
mov
test
lods
enter
popf
add
andl
or
daa
xor
sub
jbe
inc
or
ss
jns
push
sbb
and
insb
xor
inc
daa
lcall
dec
fstpt
mov
mov
or
inc
test
sbb
adc
jb
cmc
sub
mov
mov
fisubs
aam
or
push
or
xchg
xchg
pop
adc
gs
xchg
std
push
jns
fwait
mov
cmp
mov
fdiv
mov
pusha
or
jbe
es
ss
in
stos
aam
lods
cmpsl
lahf
jp
out
adc
lods
cltd
inc
or
leave
stos
imul
subb
lahf
sarl
inc
imul
sbb
or
int3
pop
fwait
movsl
test
xchg
roll
add
dec
movsb
pop
sbb
add
fwait
outsb
push
call
xor
pop
dec
mov
xchg
call
mov
es
mov
push
and
sub
xchg
out
xor
cmpsb
popf
ret
cltd
mov
push
rcrl
adc
jmp
idivb
jne
mov
nop
fistpll
addb
jae
adc
aam
lods
xchg
ret
js
stos
in
cmpsb
dec
dec
mov
xchg
gs
jne
into
add
jge
jmp
scas
jecxz
adc
xchg
sbb
adc
inc
dec
inc
sub
and
pop
dec
xchg
sub
enter
pop
sbb
sbb
int3
pop
test
call
das
aam
fsts
flds
lods
test
xchg
mov
ljmp
adc
or
xchg
andl
adc
mov
lods
fs
jmp
push
mov
roll
mov
xor
insl
sub
jle
nop
mov
es
pop
jge
scas
cmpb
sbb
aaa
arpl
sub
ja,pn
xchg
jbe
pop
cmp
or
mov
jmp
test
lret
jp
add
shlb
test
fisttpl
lret
push
sbb
add
pop
cmpsl
sub
mov
or
sbb
xchg
jno
dec
add
sbb
call
mov
push
mov
das
add
cmc
lock
jae
push
jno
add
inc
xlat
cmpsl
int
aas
icebp
fmuls
in
mov
imul
ret
out
stos
ret
mov
jae
push
shr
push
mov
adcb
xchg
shrb
pop
lcall
cs
adc
push
aaa
fstpl
pop
mov
xchg
movsl
push
test
dec
icebp
aas
pop
andl
xchg
adc
lcall
imul
stc
xchg
push
fmull
adc
xchg
loop
cmp
js
dec
add
inc
imul
data16
lock
and
mov
mov
aam
push
shrl
int3
sbb
mov
pushf
push
repnz
push
jge
sets
push
aam
shrb
nop
aad
mov
insl
gs
popf
insl
into
into
jno
mov
es
xchg
roll
cmc
aas
ret
xor
call
ds
cwtl
jnp,pt
adc
insb
into
cwtl
and
dec
push
inc
js
sbb
ret
psubusb
outsb
mov
jg
push
sbb
pushf
jg
out
fidivl
nop
jns
ret
sti
call
pop
cwtl
pop
mov
test
scas
data16
loop,pt
cli
mov
mov
repz
xor
dec
jecxz
and
fistl
push
out
mov
mov
push
sub
sbb
mov
mov
insb
mov
mov
lock
daa
adc
jg
pop
cs
add
xchg
aas
addr16
pop
xchg
inc
and
inc
jbe
jns
or
nop
out
adc
pop
jo
mov
gs
in
jmp
mov
push
addr16
pushf
jne
dec
and
repnz
mov
xor
popa
lcall
cmp
ret
lods
add
mov
scas
out
stos
add
mov
out
pop
fwait
and
mov
sub
jge
imul
cmpsl
sarb
enter
cwtl
jg
or
mov
addr16
inc
sub
in
mov
mov
xchg
sub
sbb
ret
js
insb
hlt
test
loop
inc
mov
mov
lret
cli
lds
jg
jo
pop
out
mov
test
sub
mov
and
insl
mov
mov
cmp
in
or
push
mov
jp
sub
fs
sahf
dec
mov
mov
pushw
or
sbb
or
adc
sarl
fdiv
aaa
jbe
and
out
in
and
sbb
cmp
jmp
mov
dec
sbb
sbb
sub
les
cs
lock
dec
jmp
pop
jae
mov
cltd
rclb
sbb
in
push
add
push
xchg
push
roll
mov
scas
fcmovnu
or
pop
push
fstpt
xorl
mov
xchg
jl
dec
or
mov
popa
fstpt
mov
adc
xchg
jmp
dec
xor
stc
sbb
les
sbb
push
push
push
movl
mov
into
aas
ret
mov
test
loope
xor
lods
repz
mov
lret
roll
or
cmp
push
mov
mov
xchg
cld
mov
xchg
sub
push
cmp
cmp
add
xchg
sub
test
mov
adc
xor
mov
jl
lahf
and
or
mov
lock
inc
test
out
fnsave
add
mov
pop
jmp
pop
arpl
in
ret
in
add
xor
jge
pop
shrb
test
jne
and
cli
pop
mov
xchg
repnz
cs
flds
ds
push
jge
cmp
xchg
sub
jl
jg
xor
arpl
mov
cli
in
jae
jl
mov
pop
loopne
xor
sbb
mov
inc
push
ss
add
out
mov
pop
cmpsb
and
push
mov
sbb
dec
scas
xor
out
push
pop
sub
and
mov
in
add
test
dec
inc
cwtl
out
push
out
mov
ds
leave
pop
jno
xlat
lcall
jmp
mov
add
pop
movsb
fidivrs
popa
fldcw
adc
cmp
jno
frstor
mov
xchg
ljmp
imul
xor
mov
loope
sub
loope
fbld
push
or
jl
xlat
push
mov
js
pop
icebp
outsb
push
mov
iret
jmp
jmp
or
push
mov
pop
push
sub
cli
test
stc
out
push
add
sbb
push
int3
out
insl
xchg
xchg
xchg
cmp
lret
testb
mov
test
leave
stc
cmc
out
fldl
out
sub
sub
pusha
jge
xor
daa
cmp
sbb
and
mov
rcll
or
cli
les
iret
insl
es
negb
imul
mov
lods
test
cmp
pop
jne
sbb
loopne
add
jmp
push
sub
std
or
mov
add
push
mov
out
pop
mov
adc
xchg
adc
hlt
loope
dec
sbb
dec
or
fs
gs
pop
xor
mov
in
adc
data16
pop
pop
sub
and
cwtl
outsb
cmc
mov
repz
adc
out
hlt
push
adc
mov
cmp
imul
xor
inc
je
push
jg
jne
cwtl
shll
ss
adc
fadds
loopne
xchg
ficoms
xor
jmp
stos
cmp
dec
push
push
xchg
les
or
xchg
mov
out
stc
insl
cmpsb
cmp
sbb
pop
pop
into
in
mov
dec
dec
fadds
adc
pop
mov
xor
fdivr
repnz
jecxz
sub
int
lock
lret
fimull
cmpsl
mov
aad
imul
jae
push
shlb
arpl
arpl
sub
aas
cwtl
xchg
dec
and
lret
mov
mov
inc
xchg
in
jp
xchg
nop
lods
cmp
arpl
scas
dec
xor
insl
pop
je
inc
jae
sub
out
pop
jge
mov
loopne
xor
int3
sar
cmp
mov
ror
xor
loopne
nop
inc
insb
or
int3
je
adc
jge
sub
sti
pusha
pop
popa
inc
fisubrs
mov
mov
add
nop
jo
sbb
mov
xchg
cmc
inc
jmp
pop
js
mov
pop
das
add
cltd
jae
in
aam
jecxz
sub
mov
es
rorl
pop
out
sbb
data16
outsw
lcall
fwait
xchg
cmp
xchg
into
ss
mov
push
jmp
inc
frstor
or
test
imul
mov
xorb
jbe
movsl
enter
insl
dec
mov
in
nop
pop
xchg
jecxz
xchg
push
test
xchg
addr16
movsl
push
or
cmp
or
mull
mov
jmp
xchg
push
daa
mov
push
push
inc
xor
imul
enter
jmp
movsb
xchg
cmpsl
jns
lock
sub
xor
sbb
sbb
in
inc
icebp
ficoml
dec
in
add
xchg
ret
imul
bound
out
imul
test
out
ret
inc
fbld
add
mov
arpl
mov
sub
stos
jo
pop
or
mov
mov
data16
sub
mov
addr16
daa
add
inc
stos
dec
push
test
rolb
stc
fstps
mov
sti
xchg
sub
xor
add
cmp
jecxz
adc
mov
lea
in
outsb
sarb
iret
sti
lahf
push
outsl
jle
pop
dec
out
test
push
pop
lods
add
lods
pop
stc
fildl
out
sbb
inc
in
add
and
int
pushf
fsubrs
cmp
cmc
scas
push
and
dec
scas
in
icebp
sub
es
repz
pop
and
or
jbe
dec
add
cli
xchg
fdivs
cmp
dec
xchg
stc
add
pop
pop
movsl
jno
add
mov
fnsave
and
clc
fadds
dec
cmp
scas
sbb
addb
out
inc
xchg
repnz
insl
pop
testl
cltd
int
mov
cmp
xor
xchg
pop
pop
sbb
mov
push
cmc
jae
jmp
fldt
test
jbe
fmull
or
nop
cmpsl
sti
add
inc
pop
inc
mov
push
ret
cmp
aad
add
ret
jge
pop
sbb
xor
xchg
push
sbb
mov
out
imul
cltd
outsb
cmp
lock
lahf
mov
bound
cltd
sbb
leave
popf
js
and
lods
xchg
shrb
pop
and
cmp
arpl
mov
insl
test
loopne
mov
and
xor
xchg
cmp
scas
sub
lea
push
popl
roll
int3
aad
pop
sbb
lock
into
xchg
scas
add
cmc
inc
gs
sbb
out
dec
mov
in
jge
jp
cmp
pop
jmp
cmpsb
ret
js
sbb
mov
scas
or
adc
sbb
jns
stc
jo
jmp
rcrb
xchg
jl
mov
cmpl
cmp
push
push
xchg
inc
cli
aad
jo
jbe
bswap
fidivrs
inc
and
cmp
sar
dec
stos
mov
mov
les
lods
lcall
in
es
lahf
outsb
add
inc
add
sbb
enter
je
jne
mov
andl
sbb
sbb
enter
adc
xchg
jecxz
dec
jecxz
imul
mov
popf
jp
mov
ret
push
xor
popa
scas
cmp
mov
out
jae
pop
jbe
adc
nop
lods
in
inc
aaa
in
adc
add
push
fnstsw
add
xchg
int3
in
sti
xorb
ja
adcl
call
xchg
inc
inc
jae
loope
les
scas
pop
in
jge
xchg
pop
mov
loope
icebp
jne
or
mov
mov
aad
and
mov
hlt
xor
push
leave
sub
inc
imul
das
movzbl
pop
ret
dec
test
enter
adc
mov
jbe
rolb
add
cmp
cmpsb
jns
mov
fldcw
pop
lock
ss
cli
xor
jo
mov
and
push
pusha
and
or
and
jb
adc
aam
push
popf
pop
sbb
add
sub
fs
sbb
in
imul
mov
aas
scas
cmpsl
add
cmp
adc
pop
popf
mov
xchg
lods
mov
adc
inc
lods
pop
filds
aas
mov
call
mov
or
or
xchg
push
out
in
aas
aas
push
jo
sub
mov
xchg
adc
call
and
ret
sub
push
lds
mov
adc
das
bound
sub
lahf
adc
jle
int3
in
insl
pop
inc
sbb
stos
mov
popf
jb
or
out
xor
pop
mov
fcompl
mov
cmc
leave
inc
xor
je
inc
inc
lods
inc
rclb
mov
inc
push
mov
mov
repnz
mov
dec
sbb
sbb
jl
fdivrs
test
movsl
stc
cltd
rorb
cld
es
iret
fstpl
xlat
insl
movsb
je
insl
pop
rclb
addr16
repnz
outsb
or
es
xchg
dec
cwtd
mov
xor
xor
enter
push
fwait
adc
mov
popa
gs
in
popf
fists
iret
sbb
and
lods
mov
bound
xor
sti
popf
cltd
xchg
xor
cmp
pop
or
mov
out
je
pop
js
adc
cltd
iret
cli
jb
push
inc
idivb
mov
repz
orl
shlb
dec
out
mov
sub
jmp
sti
test
addr16
test
lea
and
push
ljmp
xor
test
lret
arpl
pop
test
xchg
test
outsb
sub
mov
mov
rorb
cmp
daa
adc
int
and
rcl
mov
aas
leave
jb
push
das
orl
movsl
lods
nop
pop
ret
mov
ljmp
xor
cwtl
inc
fistpll
sub
pop
out
dec
outsb
cmp
arpl
pop
dec
add
je
adc
std
jl
cmpb
loopne
out
push
es
loope
adc
aas
cwtl
pop
xor
in
sbb
fwait
ret
fdivl
roll
lods
jmp
cmp
fstl
pop
jecxz
aad
push
stos
jnp
cmp
repz
mov
repnz
adc
fisttps
cmpsl
mov
sti
dec
cld
movhps
adc
jb
or
ljmp
mov
pop
pop
test
nop
hlt
inc
xor
mov
pop
push
or
pop
fiadds
push
add
fdivr
push
cmpsl
xor
aaa
dec
inc
adc
sbb
in
mov
xor
jno
out
sub
lods
mov
fisubs
sub
jns
es
mov
mov
push
and
or
fstpt
sbb
dec
cmp
adc
mov
outsl
inc
test
dec
pop
subb
or
mov
dec
xor
pop
jb
dec
aas
mov
dec
js
push
pushf
lahf
pop
jb
mov
loop
cmc
in
out
scas
imul
call
in
pop
add
ficompl
dec
test
mov
into
loop
pop
mov
add
pop
jnp
fwait
outsb
push
inc
sub
mov
rorb
lret
out
inc
mov
or
sbb
imul
or
stos
shrb
mov
mov
repnz
push
mov
add
ret
bound
push
mov
ljmp
arpl
movsl
daa
mov
mov
jmp
sbb
stc
decb
imul
lods
fnsave
fstpt
push
xor
aam
invd
dec
pop
sahf
mov
pusha
ss
mov
aam
jb
adc
xchg
int3
inc
popf
or
fstps
mov
stos
cmp
sbb
inc
mov
lock
ja
out
shrb
jne
fs
lea
sbb
out
jp
mov
mov
pop
and
pop
jle
les
mov
pop
push
push
scas
mov
arpl
pop
in
mov
scas
arpl
inc
fidivrs
xchg
jnp
je
and
jge
or
dec
and
sbb
xlat
repz
enter
cmp
fwait
js
mov
xchg
sbb
mov
into
pop
jmp
rolb
movsl
jmp
cld
and
movsb
xlat
sub
mov
addr16
add
pusha
jecxz
fmul
fistpll
xchg
idivb
ja
cmp
pop
fnstsw
dec
jb
lahf
ljmp
xor
call
xchg
dec
jnp
jns
das
call
sbb
mov
jmp
lret
lock
lock
test
sub
mov
sbb
aam
push
add
mov
int
ja
inc
and
sbb
sbb
adcl
fwait
rcl
xor
xchg
idivb
cmc
mov
shl
xor
jg
sub
aad
or
xor
dec
mov
fwait
inc
xchg
hlt
outsb
dec
icebp
inc
pusha
loopne
pop
cmpsl
cmp
xor
pusha
rcl
mov
popa
cli
pop
lcall
sub
call
jbe
and
add
ljmp
xor
mov
xchg
xchg
push
mov
fstpt
mov
push
sub
mov
xlat
mov
mov
or
and
pop
sbb
stc
mov
sbb
roll
jbe
and
sbb
enter
adc
fists
cmp
sahf
addr16
jne
fwait
out
or
mov
aam
ret
xor
mov
jbe
add
inc
push
loop
push
mov
dec
imul
jae
cmp
push
pop
jno
add
mov
mov
pop
roll
or
pop
dec
fadds
ss
sbb
pop
inc
mov
xlat
mov
mov
orl
in
cmp
imul
adc
jmp
dec
jne
inc
faddl
pop
data16
cwtl
jl
pop
popf
cmpsb
popf
loop
shll
dec
sub
pop
mov
pop
cwtl
dec
dec
dec
adc
test
idivb
outsl
add
sti
sbb
mov
inc
stc
cmp
mov
cmpsb
dec
std
dec
pop
xchg
cmp
xor
sub
shrl
dec
cmc
lock
sbb
inc
inc
out
adc
mov
cmp
xchg
sub
rclb
jno
lock
ja
xor
xor
fwait
and
or
mov
inc
or
enter
pop
or
imul
jecxz
pop
dec
mov
cld
jg
stos
jo
mov
or
inc
sbb
jecxz
mov
cs
inc
icebp
mov
mov
or
icebp
pop
xor
adcw
xchg
inc
cmp
orl
call
in
insl
cmp
std
cwtl
arpl
aad
jecxz
dec
adc
sub
push
push
mov
lods
push
pop
ret
insl
adc
mov
mov
icebp
sbb
xchg
popa
icebp
dec
xchg
or
pop
jno
nop
lahf
and
push
add
add
push
jnp
data16
xchg
rorb
cltd
movsb
stos
jp
mov
loope
ret
xchg
dec
testl
cmp
sbb
dec
and
addl
mov
push
movsb
mov
fiadds
aad
dec
out
add
xchg
ret
dec
push
loopne
fstp
add
icebp
dec
gs
mov
mov
xchg
jmp
mov
std
xchg
sub
push
dec
xor
pusha
out
push
movsb
dec
jnp
mov
mov
into
ljmp
pop
cmp
xor
xor
push
pusha
mov
sarb
pushf
or
jge
mov
mov
mov
fidivs
push
jae
cltd
and
sbb
fnstsw
arpl
xor
fwait
sbb
mov
adc
mov
and
sub
cmp
sub
cltd
mov
mov
int
jmp
sbb
das
jp
test
scas
mov
inc
int3
inc
push
dec
jbe
xchg
dec
xchg
repz
out
sub
mov
clc
adc
dec
push
addr16
clc
mov
jp
popa
sbb
jae
inc
mov
pop
icebp
sub
xchg
xor
js
adc
or
fldl
sbb
ljmp
cs
ret
nop
fptan
loopne
xchg
inc
outsb
stos
ds
lods
addr16
dec
hlt
mov
push
cld
xchg
test
or
xchg
fisubl
xor
mov
dec
jmp
cmpsb
push
cmp
add
push
ja
mov
push
jne
dec
cs
add
jb
jecxz
fcoms
das
inc
cmp
out
inc
jmp
jg
jb
sbb
fwait
pcmpgtw
cli
lock
inc
jg
cld
and
subb
add
sub
hlt
movsl
cmp
push
mov
jne
dec
cmp
sub
pcmpgtd
push
or
in
sbb
adc
sbbl
adc
dec
ret
stos
dec
aas
loop
and
cs
cmc
jno
loope
cwtl
scas
adc
sti
lds
inc
push
sahf
jb
jl
sub
adc
js
ja
inc
dec
loop
ljmp
xchg
push
ss
push
bound
jmp
fistl
popf
iret
out
test
push
adc
icebp
mov
mov
int3
push
xchg
ror
pop
add
popf
pop
xchg
mov
stos
xor
jae
or
jp
pop
jp
gs
pand
in
std
lahf
pusha
test
push
vsubsd
repz
inc
negl
xorl
clc
scas
add
shr
inc
jae
mov
repnz
negb
test
int
sbb
rolb
pop
cmp
mov
inc
cmp
shlb
cmp
inc
je
insb
inc
repz
orb
and
xchg
jl
adc
dec
pop
inc
repnz
dec
mov
cltd
rclb
cmp
rclb
popl
inc
cmp
outsl
cmp
cld
add
pop
sub
push
into
les
scas
addr16
mov
dec
out
inc
mov
loopne
test
aas
push
sarb
fldt
cmp
cwtl
cltd
aaa
pusha
add
xchg
ret
enter
pop
dec
aas
add
xor
xchg
jl
or
dec
jmp
testl
out
nop
int
cmpsl
popa
adc
nop
fbld
adc
pusha
dec
pop
mov
mov
add
xchg
push
add
dec
xchg
and
push
fwait
add
ret
pop
imul
lahf
repz
pop
sbb
mov
and
int
rorb
cmpsb
push
lods
shlb
xor
aaa
in
cmp
fwait
cmp
clc
mov
sti
jp
mov
je
sti
mov
in
xor
repz
jns
mov
jne
mov
xchg
sti
inc
ja
xchg
mov
cmc
xlat
inc
and
sbb
pop
testb
fistps
fwait
sti
pop
xlat
add
ret
mov
shll
subb
sbb
repz
lds
push
mov
leave
xchg
xchg
outsl
mov
adc
pop
ljmp
enter
mov
mov
mov
mov
lahf
sub
jb
repz
and
push
pop
push
cmp
mov
cmp
repz
call
dec
in
push
sahf
pusha
xor
sub
xchg
test
xchg
xor
std
cmovo
dec
in
mov
outsl
pusha
inc
shrb
xchg
loopne
rorl
mov
or
add
inc
sarb
or
mov
mov
movsb
out
inc
xchg
mov
imul
fcoml
lock
pop
sub
sbb
adcl
jae
xchg
pop
test
sbb
add
test
in
pop
or
out
xchg
jmp
out
frstor
ds
mov
mov
xor
or
push
or
pop
es
push
sbb
dec
adc
fsts
and
sub
sub
cmp
lcall
add
je
ljmp
cmpsb
fld
repnz
stc
lret
mov
xor
shlb
dec
mov
jns
pop
and
dec
imul
jb
dec
inc
jg
or
mov
pop
rcrb
stos
pop
out
clc
adc
jmp
xchg
fiaddl
lahf
out
dec
sbb
jmp
sti
ljmp
arpl
dec
add
sbb
fnop
lods
out
repz
inc
stos
push
jg
inc
pop
daa
or
int
mov
out
gs
xchg
push
mov
push
aaa
pop
or
adc
mov
jecxz
out
xor
daa
ret
frstor
xor
shll
sub
xchg
or
daa
mov
sbb
inc
mov
and
mov
jecxz
inc
pop
shr
push
data16
pop
lcall
jle
xor
mov
push
push
fcmovnu
cmp
jbe
pusha
scas
jecxz
outsb
or
aam
xacquire
pushl
mov
pop
xlat
mov
enter
rcr
lock
adc
adc
mov
lds
push
and
xchg
dec
loope
stos
dec
mov
sbb
ljmp
outsb
and
hlt
sbb
add
mov
popf
hlt
jecxz
shlb
push
es
imul
xor
cld
sahf
pop
aaa
addb
push
shrb
scas
fadds
xor
jo
push
mov
xor
add
xchg
dec
xchg
stc
xchg
fwait
jno
inc
cmp
jbe
sti
xlat
fnstsw
pop
sbb
add
dec
arpl
mov
fs
dec
out
jl
mov
push
imul
inc
frstor
std
fstl
sbb
jp
lods
imul
pop
adc
mov
or
jne
mov
lahf
inc
adc
jle
adcb
scas
sbb
adc
mov
push
icebp
cmp
iret
dec
inc
out
sbb
fwait
incb
jge
dec
mov
je
jae
xor
lahf
fidivrl
mov
inc
test
imul
xchg
int
arpl
test
inc
fsubs
dec
and
mov
repz
scas
inc
xor
push
sub
mov
shrl
int
mov
adc
or
ret
dec
in
dec
js
popa
pop
jmp
mov
bound
pop
jle
aam
mov
push
or
cmp
sbb
or
sbb
aad
lahf
push
std
adc
dec
xorl
sbb
add
sarb
pop
roll
inc
inc
xchg
out
orl
mov
pop
cltd
jae
jnp
insb
test
ficoml
mov
test
cmc
xchg
cltd
sbb
out
gs
out
push
mov
adc
outsb
aas
xchg
add
imul
mov
iret
xor
xor
xchg
aam
xor
jno
scas
and
rcrl
inc
or
push
loope
icebp
adcb
and
inc
xchg
mov
cld
movsl
jb
insb
sbb
or
inc
xorl
pushf
lret
das
lcall
movw
adc
adc
stos
inc
outsb
adc
inc
je
push
gs
mov
pop
pop
and
dec
mov
mov
adc
mov
outsl
ljmp
push
and
jg
into
sbb
insl
sarb
sbb
test
push
adc
jmp
cld
icebp
xchg
push
mov
adc
dec
movsl
popa
jne
mov
aaa
pop
add
push
shlb
mov
mov
jns
loope
cmpsl
loop
test
stc
pop
scas
jecxz
inc
mov
jp
jl
cltd
cmp
pushf
popa
lret
inc
mov
mov
test
xor
shrl
push
pusha
enter
adc
mov
mov
pop
cld
movups
pushf
lahf
sti
cmpsl
or
cmp
call
lods
cmp
subl
mov
les
mov
stos
pop
fwait
out
push
jg
jne
xchg
push
lods
into
stos
sbb
sbb
pop
and
dec
inc
add
out
sub
cmp
mov
xor
int
test
push
out
cmp
push
and
bound
push
shl
aam
outsb
adc
cmp
add
int3
and
sub
ret
xor
aaa
loop
ja
roll
fwait
adc
sub
das
int3
dec
jbe
test
mov
dec
mov
adc
testb
jge
adc
into
pop
lds
lods
cmpsl
nop
cmp
or
in
push
mov
sub
sbb
sbb
cmc
scas
push
cmp
daa
push
insb
xchg
test
ds
jns
push
push
and
rcr
mov
lret
push
inc
sub
add
sbb
jae
sub
pop
test
aam
adc
xor
fwait
pop
scas
iret
je
iret
sub
add
add
and
shrl
andl
add
dec
push
in
subl
jb
jno
jbe
fiaddl
bound
out
mov
mov
mov
jp
mov
mov
mov
lret
stos
jecxz
add
arpl
in
in
and
pushf
scas
addr16
or
xchg
jl
lret
loope
mov
sbb
test
xchg
xchg
or
mov
mov
and
out
scas
add
mov
fxch
imul
clc
inc
mov
int3
dec
in
cmp
xor
stc
aaa
and
lret
leave
xor
dec
xor
scas
inc
xchg
sub
leave
stos
mov
outsl
test
sbb
sbb
loopne
and
sub
push
sbb
xor
rorb
pop
and
fisubs
and
aaa
inc
inc
stc
mov
nop
int3
dec
test
mov
cmp
adc
shl
jbe
loopne
sbb
in
dec
test
mov
jle
scas
sub
xchg
mov
push
imul
sbbb
or
jg
int
movsb
pop
add
lock
or
push
repz
clc
mov
cwtl
clc
mov
ret
push
ja
xor
mov
cmc
inc
ljmp
out
mov
fdivr
jecxz
and
sbb
push
jmp
stos
daa
jle
imul
es
test
in
or
jl
stc
mov
loopne
stos
bound
pop
mov
mov
loopne
or
popa
jb
mov
clc
stos
mov
outsl
sbb
fcmovbe
fsts
mov
pop
mov
xor
cmpsb
daa
mov
in
ss
add
push
push
lahf
loope
lods
adc
xor
adc
cmp
dec
lret
arpl
xlat
in
inc
and
mov
adc
lds
ret
mov
addb
jle
push
aaa
lea
inc
out
xchg
cmc
push
scas
je
pop
xor
add
fcoms
inc
mov
int
adc
popa
sub
js
test
xor
pop
stos
inc
mulb
repz
adc
xchg
inc
movsl
or
es
out
mov
scas
push
lea
mov
ljmp
fiaddl
pop
and
mov
cmp
and
or
mov
insl
mov
ss
pop
dec
cmpsb
push
roll
cld
rcll
pop
aas
pop
lods
daa
push
cmp
and
xchg
xor
jg
push
xor
add
mov
sbb
call
cmp
fdivrs
lret
lods
and
cmp
mov
lret
imulb
inc
lea
aas
popa
xchg
rorb
daa
cmp
mov
pop
rolb
mov
cmp
popa
sub
jns
sub
sbb
mov
fmuls
je
ret
repnz
pop
ficomps
scas
mov
jmp
shr
pop
stc
jnp
cs
sarb
sahf
pop
leave
das
ret
andl
out
jb
jp
xchg
pop
jbe
in
xchg
adc
nop
outsb
out
testl
shrl
add
mov
dec
cmpsl
cwtl
fadd
add
xchg
push
bnd
ret
icebp
fildl
fld
loope
int3
cwtl
adc
mov
push
sbb
add
rolb
ret
cmp
push
sbb
mov
jmp
jne
clc
lods
fbstp
popf
mov
jae
loop
jae
add
inc
test
xchg
inc
pop
xor
inc
add
adc
pusha
dec
pusha
dec
pop
and
mov
dec
or
repz
xchg
cmp
jle
loop
pop
dec
add
lea
cld
loopne
bound
jmp
push
in
sbb
lock
dec
cmc
push
jb
sbb
push
jle
xor
scas
in
nop
and
xor
fs
ja
lock
push
bound
inc
clc
dec
pop
jp
fidivs
cmpsb
sbb
xor
adc
jo
decb
ficoml
add
inc
jno
enter
pusha
sub
aas
repz
pop
sbb
out
sti
xlat
adc
shll
ficoml
stos
jne
mov
jb
mov
dec
xchg
into
mov
ja
xchg
cmp
sbb
mov
divl
sub
jbe
mov
imul
mov
sbb
pop
movsb
pop
xacquire
insb
loopne
cmc
test
loope
clc
test
aad
sbb
outsb
imul
mov
test
fsts
pusha
or
in
out
and
imul
jle
add
push
fisttps
fwait
pop
lret
or
dec
mov
lods
jno
lcall
into
bound
std
mov
cli
xor
xchg
inc
cwtl
pop
movsl
or
sub
dec
imulb
rcrb
fcomi
and
das
movsb
lods
add
add
xchg
lcall
mov
lret
pop
call
scas
ss
fstps
jle
push
mov
movsb
xchg
sub
fdivr
sbb
jne
leave
xchg
cmpsb
int
jno
mov
xchg
lock
loope
fwait
push
xor
mov
cmp
shrl
pop
xchg
outsb
adc
jecxz,pn
dec
repnz
jb
sbb
movsb
jae
pop
or
mov
push
das
pushf
mov
sub
xchg
mov
pusha
add
xchg
jmp
test
mov
loopne
lds
add
out
jns
ss
adc
and
adc
jns
out
lock
ret
cmp
testb
xchg
fldcw
dec
hlt
int
or
jne
fnstcw
dec
mov
and
mov
dec
xchg
xor
xor
cmc
mov
hlt
movsb
les
out
out
shrb
cmp
les
xchg
lret
inc
or
test
mov
xchg
lcall
bound
adc
in
sub
fisubs
js
xchg
and
hlt
lock
mov
icebp
mov
cmpsb
popa
jns
mov
in
dec
mov
pop
in
jns
shlb
pop
cmpsl
fldln2
xchg
mov
sti
imull
dec
mov
cli
or
rorl
pop
xor
fistpl
loope
pop
sbb
into
popa
adcb
mov
mov
movsb
pop
jo
cmp
mov
pop
dec
jmp
dec
and
mov
sti
fwait
cmpsb
push
rclb
mov
jo
adc
fs
scas
mov
inc
in
add
gs
mov
cs
adc
xchg
push
push
aas
movsb
popf
in
clc
xchg
mov
bound
mov
ds
xchg
in
iret
xor
dec
repnz
sahf
aaa
push
movsl
push
sti
bound
aas
pushf
cmp
popf
mov
ds
jo
frstor
adc
add
testl
xchg
mov
sub
add
ret
fisubl
sub
inc
adcl
lds
mov
push
cmp
cmp
in
mov
nop
add
ror
xchg
pop
mov
call
add
push
adc
pop
popf
pop
cmp
push
shl
into
out
xor
jle
mov
insl
lods
mov
das
push
or
jbe
faddp
imul
pushf
stos
data16
sbb
xor
cwtl
sbb
les
jnp
dec
pop
dec
mov
fimuls
dec
xchg
push
mov
inc
jmp
loop
or
test
divl
lret
inc
inc
or
xchg
cld
dec
dec
jp
fbld
sub
adc
xchg
cli
sbb
push
xchg
frstor
sbb
sbb
mov
repnz
ljmp
add
mov
test
not
adc
les
sbb
cmc
jg
sub
rolb
xor
ret
or
loopne
mov
sub
xor
das
dec
mov
stos
sbb
rorb
test
inc
pop
dec
mov
pop
outsl
sbb
sahf
or
movq
adc
test
pop
xor
lret
arpl
add
xor
mov
dec
sahf
xchg
fwait
pushl
inc
movsb
fcompl
nop
or
or
inc
pop
sub
cltd
push
data16
pop
mov
sub
cmp
sub
loop
push
rol
sub
mov
and
adc
xorb
mov
cmp
sub
mov
dec
pusha
xchg
jne
push
imul
pop
imul
clc
jge
fwait
mov
jmp
clc
inc
push
movsb
mov
sbb
outsb
repz
ljmp
pop
adc
jp
push
in
insl
lock
ret
lds
add
sub
loope
movsl
shrl
int3
sub
daa
push
mov
pop
or
adc
xchg
pmaxsw
mov
sub
test
lea
ret
shll
loop
add
mov
push
into
fistpll
cmc
lock
into
add
insl
push
xchg
test
arpl
cmp
movsb
cmp
mov
scas
and
adc
ja
out
cmp
cmp
int
in
stos
sarl
or
push
fsubr
jbe
xor
dec
sahf
add
jmp
fcomp
mov
and
xor
jg
out
add
ljmp
sub
xor
and
adc
loop
int
lea
pcmpeqb
movsl
jl
or
das
cmp
jp
cltd
ret
mov
sbb
loope
sbb
dec
mov
iret
sbb
daa
je
mov
mov
or
push
orl
arpl
js
js
jl
cmp
jmp
push
add
outsb
lahf
nop
fs
data16
push
mov
jl
push
cmp
rorb
in
pop
jnp
aas
sbb
in
lea
push
insl
fs
dec
sahf
mov
xchg
cmp
and
leave
add
imul
adc
xor
add
add
lret
add
mov
and
mov
pop
cld
jns
inc
imul
and
pop
mov
into
sbbl
cmp
dec
fwait
repnz
dec
mov
sub
aam
cld
sub
lea
xor
mov
jne
adc
dec
or
inc
cmpsb
aaa
aaa
pop
scas
data16
lahf
cmp
int3
mov
jae
push
std
imul
stc
cmp
in
subb
nop
and
stos
flds
cmp
loop
sub
int3
add
jne
and
into
hlt
bound
and
mov
mov
iret
into
cmp
xor
fistl
gs
push
imul
and
mov
xchg
in
mov
adc
fs
inc
fildl
dec
xchg
xchg
imul
mov
sub
sbb
push
xchg
ret
je
xor
shlb
rcrb
xabort
push
inc
add
rolb
into
cld
lret
pop
add
push
sbb
jb
adc
clc
mov
mov
incl
out
push
in
dec
std
testb
cli
ds
adc
or
bound
ret
xor
rcrb
and
cmp
and
inc
cltd
and
and
sbb
or
dec
cmp
mov
cmp
dec
dec
std
mov
pop
mov
cmpsl
and
push
xor
or
fisubrl
insl
gs
test
mov
and
sub
pop
mov
or
loop
mov
iret
cmpsl
cmp
pop
call
movsl
pop
pop
add
pop
jecxz
repz
loopne
and
jae
loop
mov
pop
fldt
out
adc
js
addl
insl
adc
outsl
adc
jge
sahf
incb
mov
fwait
popa
enter
or
inc
mov
and
jo
pop
outsb
mov
push
or
movsl
shl
out
sub
jae
je
push
fbld
fsts
js
ret
hlt
addl
fwait
xor
adc
jmp
xchg
mov
jo
mov
pushf
xlat
faddl
imul
inc
mov
pop
clc
pop
mov
cmp
stos
xchg
bnd
cmc
push
xchg
inc
fdivrs
fst
ljmp
sbb
pop
loopne
shl
and
loop
mov
mov
cmp
das
and
cmpb
mov
xchg
inc
and
out
push
cs
xor
ss
sbb
jne
xchg
adc
test
sub
outsl
imul
rol
mov
pop
and
mov
js
iret
sbb
push
lret
lods
jecxz
xor
pop
jae
in
mov
xor
cmp
mov
sbbb
leave
jae
jbe
in
inc
inc
aas
fwait
xlat
mov
imul
cli
jb
pusha
push
mov
in
sarl
pop
aad
daa
rorb
or
sub
jecxz
shrl
xchg
fdivrs
pop
mov
add
pop
xchg
fwait
adc
cmp
and
adc
icebp
adcl
fdiv
or
icebp
and
jge
out
testl
cs
pusha
sbb
sub
movsl
les
mov
inc
std
mov
pushf
mov
xchg
jmp
aad
sti
add
xor
outsl
push
lcall
daa
stos
shlb
inc
mov
dec
imul
and
mov
shll
xchg
loope
push
pop
imul
addr16
mov
mov
jle
xchg
scas
mov
inc
in
xor
xor
cmp
test
mov
push
sti
mov
inc
enter
sbb
mov
std
inc
inc
mov
lods
in
fdivr
and
jne
xchg
nop
dec
or
mov
outsl
and
cmc
mov
and
and
fcomps
xor
inc
add
xlat
add
add
movsb
insb
jl
sbb
pop
mov
fdivr
dec
lcall
xor
in
loop
mov
imul
adc
int
stos
ret
roll
mov
inc
cmp
cmp
pop
andl
add
jbe
or
insb
cmpsb
fmull
add
out
loopne
mov
insl
mov
cs
bnd
fdivrl
push
jne
pop
dec
jno
cmp
jmp
jg
dec
clc
cmp
fidivrs
add
sub
int3
lcall
fwait
arpl
das
movsb
cltd
clc
adc
jle
dec
push
pop
xor
add
loopne
jns
dec
push
jbe
or
mov
cmp
dec
xchg
push
fucomi
sub
out
es
and
fsts
add
test
xchg
add
test
push
jmp
enter
popa
rclb
xchg
clc
and
mov
jl
xor
ljmp
pushf
je
push
and
enter
mov
and
and
frstor
push
out
or
push
fistl
jp
inc
int3
adcb
nop
mov
cli
inc
pop
int
mov
and
hlt
mov
inc
or
bound
insb
cmpsl
fbstp
out
jecxz
scas
mov
loope
mov
add
pop
divl
aad
movsb
xchg
sbb
xor
xor
push
sbb
xor
rcl
add
push
adc
cmp
nop
push
push
dec
pop
mov
cmp
xchg
call
aaa
mov
hlt
stc
jecxz
jecxz
sub
and
push
and
popaw
daa
pop
xor
imul
cld
in
push
pop
cmp
inc
roll
jno
iret
cs
jnp
fdivp
or
loopne
xor
xchg
cltd
inc
xchg
in
cmpsl
faddl
xchg
fcoms
sbb
sbb
ror
cmpsb
clc
test
adc
lods
adc
lea
mov
sbb
push
aaa
out
cmpxchg
sbb
inc
xchg
in
nop
jnp
jl
div
test
stos
add
adc
mov
insb
sbb
xchg
rcrl
into
ja
out
testb
mov
fcoml
shll
or
xchg
popf
aam
sbb
into
and
and
jns
in
mov
mov
loop
cld
fwait
repnz
pusha
fbld
push
loopne
add
iret
lahf
cli
mov
pop
sbb
es
out
rol
sbb
adc
lea
ja
jmp
sub
mov
push
pushf
jl
testb
pop
xchg
idiv
js
pop
mov
cmpsb
rcll
xor
push
dec
pop
leave
and
test
and
jmp
cmc
push
mov
bound
pop
mov
mov
loopne
orl
imul
popa
insb
cld
xchg
in
test
and
jp
inc
push
scas
clc
stos
cmp
pop
out
cmp
das
outsl
fs
xchg
jne
mov
mov
out
xchg
popa
lea
and
push
sbb
dec
adc
and
mov
xor
xchg
ja
mov
loope
or
rolb
xchg
fnstcw
sub
js
pop
mov
inc
xor
push
andl
icebp
add
leave
jg
mov
hlt
xorps
xor
dec
fimull
fidivrl
sbb
lret
sbb
and
push
movsb
and
pop
test
pop
jne
ds
mov
les
popf
sub
subl
aaa
cwtl
mov
and
pop
dec
push
adc
jo
test
add
out
push
xchg
xchg
sub
leave
aaa
adc
jnp
pop
or
insb
cmpsl
or
mov
loopne
fstps
sub
sbb
pusha
xchg
aam
mov
repz
mov
mov
pusha
sbb
dec
sub
data16
iret
cld
scas
jl
cmp
lea
pushf
aam
mov
or
jle
pop
fistl
js
jns
sub
xchg
xor
pop
or
repnz
std
mov
cmc
insb
pop
fxch
or
leave
incb
hlt
aaa
sbb
shll
rcl
imull
dec
add
jno
loop
ds
and
mov
jae
hlt
lret
inc
clts
movsl
cmpsb
fildll
mov
rcl
divl
psrad
or
sbb
and
push
mov
aad
hlt
push
gs
ja
mov
fistpl
fcomp
lret
out
out
lret
xchg
jle
mov
sbb
repz
xlat
jb
sahf
imul
ficomps
cmp
es
ret
inc
sti
hlt
popa
cmp
rcl
das
loopne
addb
push
cmpl
lock
adc
cmc
notl
lock
sbb
adc
cmpsl
out
jnp
shrb
jbe
sarl
add
cld
or
pop
jae
mov
push
inc
clc
xor
nop
mov
mov
movsl
xchg
icebp
fstpt
add
arpl
jo
sub
data16
cwtl
rorl
lret
xor
int
sub
lock
imul
dec
push
sbb
cmc
fwait
subl
lret
jo
out
jmp
jge
out
inc
sub
cmpsl
push
jl
push
xchg
mov
xor
insl
shrl
mov
push
loopne
jmp
jno
cmp
in
inc
dec
pop
sahf
adc
addr16
xchg
inc
mov
sarb
cwtl
ja,pn
repnz
jl
mov
scas
jl
cltd
mov
adc
xchg
sti
or
cmp
sahf
movswl
push
jae
mov
iret
into
mov
or
outsb
xchg
sahf
jbe
and
fists
stos
lret
xor
jnp
cltd
mov
in
dec
xchg
pop
pop
push
insl
add
test
scas
jg
adc
movsb
adc
aad
cmpsb
ret
aaa
sub
push
cli
into
test
and
mov
into
xlat
jb
sbb
sbb
mov
mov
fwait
adc
cs
push
mov
and
jmp
repz
dec
lds
add
bound
fld1
cli
addr16
les
cmp
cs
imul
hlt
adc
cltd
gs
push
mov
movsl
jg
insl
sub
in
cmp
or
inc
inc
test
mov
mov
xor
lret
xchg
insl
mov
lret
mov
jmp
jae
pop
xor
cmpsb
xchg
jns
ret
or
dec
test
cmp
xbegin
mov
dec
pop
pop
bound
xchg
push
mov
add
cmpsl
xchg
repnz
fdivl
mov
loop
pop
xor
cwtl
insl
mov
xor
jmp
lea
mov
cs
jge,pt
sub
les
out
xchg
push
sbb
inc
imul
mov
inc
mov
ret
and
insb
ret
dec
xchg
cmpsb
push
pop
or
arpl
inc
cmpsl
icebp
fs
inc
jno
sbb
scas
jne
icebp
addb
nop
xchg
aad
mov
mov
pop
leave
jge
xor
fld
scas
rcrl
call
xchg
jmp
mov
aad
inc
movsl
pusha
mov
mov
mov
lret
push
push
cwtl
aam
rorl
jle
push
cmp
or
lea
insl
xor
mov
inc
mov
dec
bnd
hlt
sub
adc
or
dec
jbe
pop
loope
mov
jnp
stos
adc
inc
mov
mov
out
popf
test
push
mov
cs
loop
dec
inc
mov
lea
mov
push
adc
into
sub
adc
out
cwtl
or
xchg
jg
jo
nop
mov
jns
add
pushf
cmp
repnz
sub
rcr
movsl
movsl
or
or
repnz
push
imul
xchg
out
and
int3
pop
pop
shr
aas
xchg
cmc
stc
les
jno
xlat
insl
jbe
jg
xlat
pop
pop
xor
mov
cmp
inc
lret
movnti
xor
inc
sbb
aad
ja
add
jl
dec
andnps
mov
jg
shrb
aas
es
fcmovu
pop
sub
decl
xor
or
cmp
and
loop
add
sbb
mov
mov
wrmsr
fwait
pusha
sbb
lods
aam
cmp
sub
push
xchg
out
decb
push
mov
call
jae
jle
xor
lcall
in
xor
or
xor
xchg
sarl
mov
mov
xor
push
ret
rcrl
sar
xchg
ss
rorl
add
fwait
jg
jmp
insl
jae
or
pop
mov
sub
mov
push
aad
sub
jmp
iretw
adc
inc
in
cli
jne
and
pop
imul
idivl
iret
sbb
testl
scas
ds
xchg
push
aas
cld
fdiv
mov
pop
mov
and
inc
mov
mov
xor
sub
out
push
xchg
push
jge
inc
cwtl
outsl
and
push
scas
int
stos
gs
stc
mov
orb
aas
lods
xor
mov
leave
inc
shlb
jge
mov
stos
outsl
or
push
fs
mov
dec
adc
dec
and
mov
inc
in
push
popf
lret
out
dec
xor
push
js
mov
out
ret
pop
sbb
add
popa
xor
and
ffreep
mov
mov
dec
fcomps
adc
add
sbb
mov
cmp
int3
xor
xor
or
jmp
add
mov
lock
ret
imulb
stos
xlat
pop
pop
sbb
js
popf
mov
jp
xor
dec
jmp
int3
mov
popf
pop
adc
push
sbbl
jmp
loop
js
int3
inc
daa
fwait
call
ficompl
rclb
notb
push
mov
scas
cmp
loope
jmp
in
sub
sub
scas
cli
call
fucomp
dec
cld
jecxz
adcl
xchg
fsubs
clc
adc
faddp
loop
je
dec
nop
lea
addr16
fdivs
xchg
test
out
out
iret
aad
lahf
xlat
or
cs
pop
xor
sub
xor
pop
sbb
movsb
shll
enter
enter
int3
xor
cmpsl
adc
fwait
lds
sub
and
lahf
push
xchg
xor
jbe
insl
and
clc
orb
fcompl
xchg
jno
mov
test
les
jbe
repz
push
daa
adc
mov
jbe
dec
out
mov
cwtl
or
pop
lahf
jbe
and
in
fsts
mov
dec
cmpsb
push
pop
xor
jb
adc
fcmove
out
fs
push
jg
movsl
add
rolb
fists
xor
shlb
dec
xchg
ret
aad
mov
or
mov
adc
jmp
sbb
addr16
push
fbld
push
pop
mov
jg
fwait
je
rclb
jl
pop
int3
loop
pop
inc
xor
push
test
add
out
ss
push
inc
xchg
sti
pop
loopne
add
cmc
mov
bound
insb
mov
and
insb
cmovb
insb
ljmp
and
sub
xchg
push
in
aam
mov
and
jge
dec
shlb
mov
or
mov
sahf
cmpsl
xor
aas
fstpl
add
sbb
outsb
mov
jb
push
shrb
popf
xor
mov
sti
int
xchg
and
adc
sbb
lods
jmp
xchg
jle
stc
sbb
arpl
icebp
xchg
xchg
scas
sarl
bound
test
lods
adc
inc
aaa
add
cmp
mov
clc
cltd
ljmp
xchg
and
xchg
xchg
inc
repz
out
cmpsl
or
jl
roll
ret
and
cmpsb
mov
xor
das
add
and
sahf
test
cld
push
ja
cld
mov
lahf
dec
andl
mov
shr
test
push
lahf
roll
mov
xchg
imul
adc
and
mov
mov
js
in
sahf
enter
push
jne
int
das
sbb
ds
outsl
arpl
dec
cs
and
dec
test
outsb
xchg
out
dec
jnp
ss
inc
scas
movsb
out
push
arpl
and
mov
nop
push
inc
sti
inc
into
decl
xchg
xlat
adcl
xor
arpl
or
lret
gs
and
mov
or
outsb
sahf
popa
roll
pushf
sub
mov
clc
cld
add
cmp
sbb
mov
jmp
in
xor
xchg
cmpsl
leave
jo
insb
out
sbb
xchg
xchg
inc
lods
pop
lock
cmp
ret
inc
xor
sub
cmpb
mov
leave
xor
push
mov
ljmp
jle
js
or
xchg
mov
adc
out
mov
sbb
in
cmp
ja
sbb
push
mov
sub
scas
out
xlat
ljmp
cmpsb
imull
jae
dec
sahf
pop
data16
xor
pop
dec
neg
push
rclb
neg
je
or
mov
pusha
jge
and
mov
mov
in
out
scas
int
sub
scas
xor
add
lea
imul
push
mov
loop
mov
imul
or
std
xchg
int
jno
test
ficompl
inc
es
push
pop
scas
sbb
xorl
and
pop
aad
imul
mov
aad
incl
movsl
sbb
inc
xchg
outsb
iret
loop
push
rol
add
mov
inc
repz
fildll
cmp
jno
xchg
jo
inc
inc
mov
insl
je
jns
pop
push
movsl
fmuls
mov
pop
add
es
jne
outsl
mov
push
inc
movsl
xor
fsubp
fwait
movsl
xchg
xor
inc
mov
andl
mov
cmp
mov
dec
stos
adc
nop
and
and
mov
das
lcall
cmpsb
je
test
sbb
inc
jae
and
sbb
mov
cmp
inc
int
loope
aas
into
cmp
and
inc
xchg
ss
ss
fs
in
ficoms
fwait
imul
pop
cs
sub
xor
cmp
mov
or
adc
data16
imul
inc
xlat
gs
out
mov
sub
jg
shrb
sub
add
fwait
mov
ja
je
fst
scas
lock
xchg
jne
sub
add
jl
daa
mov
loop
iret
jo
js
xor
lods
sti
cmp
adc
in
pop
pusha
and
xchg
daa
leave
test
insb
mov
inc
push
push
xchg
mov
sub
addr16
jo
jl
cmc
lahf
mov
out
jge
dec
lods
ret
jp
mov
xlat
mov
imul
sahf
icebp
test
sub
mov
sub
inc
in
jecxz
sbb
loopne
popf
jg
rcll
cmpsb
icebp
xchg
cld
mov
aas
inc
cltd
mov
jo
mov
mov
push
das
lods
pop
std
xor
add
add
and
pushl
subb
sbb
pop
and
mov
cmpsl
xlat
sbb
arpl
mov
dec
xor
iret
scas
hlt
in
pop
mov
dec
adc
cmc
mov
push
cmc
loope
les
pop
lcall
hlt
aad
inc
pop
in
dec
mov
push
mov
or
jp
jnp,pt
out
mov
outsb
pushf
in
outsl
lock
and
js
pop
loope
jl
cld
jp
loope
jg
mov
movsb
xor
jae
popf
xchg
movsl
xor
mov
sub
icebp
movb
pop
aam
repnz
imul
push
int3
outsb
repnz
je
xchg
jge
push
mov
jg
and
mov
xchg
outsl
mov
addr16
jbe
push
aad
jo
jnp
dec
sahf
inc
loop
fmul
ss
jns
or
sub
push
adc
and
sub
adc
fsubl
jne
clc
mov
jg
pop
jge
hlt
adc
pop
adc
add
cmpsb
imul
mov
insl
jae
cmp
in
xchg
and
adc
aam
mov
adc
cmp
loop
pop
push
inc
xchg
lock
mov
inc
inc
xor
xchg
sbbl
into
daa
xor
cmp
and
cmpsl
cld
inc
mov
scas
pop
testl
mov
pop
lret
adc
cmp
mov
inc
int
lret
lret
and
pop
movsl
sbb
dec
mov
jae
loop
ja
dec
dec
aam
je
pop
into
arpl
mov
fsubs
test
decl
je
add
ja
jbe
stos
jbe
pop
orb
outsl
mov
sahf
aaa
loop
jo
test
cmp
jmp
mov
aam
out
mov
mov
jbe
mov
inc
push
daa
pop
adc
mov
jbe
mov
xchg
mov
adc
push
jg
inc
test
push
jmp
mov
push
mov
push
ds
pinsrw
and
or
inc
nop
daa
fsubs
ds
push
out
mov
mov
into
nop
sbb
mov
das
add
aam
cmp
and
lds
ja
adc
push
xchg
add
fldenv
clc
push
jnp
popa
and
popf
xor
add
mov
je
jmp
pop
xor
dec
xchg
cltd
jmp
cwtl
int3
mov
fdivl
out
pop
add
out
mov
mov
push
mov
cmp
mov
bound
imul
pop
mov
sbbb
outsb
xor
jmp
add
xchg
inc
sub
and
dec
push
or
ljmp
aaa
mov
js
fcmovb
cmp
mov
out
jb
cltd
int3
and
jecxz
imul
sar
sbb
fidivrs
push
sub
mov
icebp
mov
mov
inc
hlt
les
xor
ljmp
xor
pop
xchg
aas
ljmp
test
cmp
push
cwtl
ja
hlt
mov
adc
out
cmpsl
lods
sarb
in
sbb
sbb
jo
jno
xchg
jae
adc
inc
xor
add
cmpsl
push
repz
adc
add
fisttpl
cltd
cmp
in
movsl
out
hlt
and
out
push
ljmp
push
fwait
movsl
push
mov
stos
fwait
mov
movsb
and
push
lcall
outsb
push
push
aas
xchg
nop
mov
cmp
xchg
mov
pushf
xor
cmp
pop
inc
or
mov
vpextrw
lds
mov
adc
mov
sahf
push
sub
out
add
insb
and
js
sub
je
rcrl
fisubrl
push
sti
insb
das
cmp
mov
pusha
nop
xchg
sbb
enter
ja
mov
xchg
dec
loope
stos
mov
ss
repnz
hlt
cs
cwtl
test
and
shll
cwtl
sti
lar
int
and
out
ljmp
out
cli
and
stc
push
bound
push
ret
dec
jns
test
sbbl
stos
ljmp
jge
sbb
iret
ret
dec
sbb
lds
jbe
clc
cwtl
pop
mov
lock
sahf
inc
mov
xlat
loop
add
movsl
inc
imul
shlb
mov
xchg
mov
sub
cmp
adc
cmp
dec
mov
leave
mov
les
pop
mov
jecxz
mov
lods
cmp
cmp
or
xor
aam
fucomi
mov
xchg
sbb
inc
inc
jno
fldl
cmp
add
mov
in
sti
inc
in
mov
sbb
mov
pop
lods
add
in
inc
mov
jg
leave
mov
mov
notb
mov
xlat
sbb
jae
and
mov
popf
fadds
adc
adc
mov
cmpsl
adc
push
cmovnp
jb
notl
cld
pusha
popf
mov
dec
mov
stos
pop
inc
jb
out
stc
scas
pop
push
mov
imull
mov
jb
and
stc
jnp
in
xor
gs
mov
fisttpll
mov
push
or
fdiv
imul
fwait
push
into
lcall
or
cmpsl
test
movsb
test
inc
jg
push
jecxz
movsl
repz
push
inc
fwait
cltd
fdivl
pop
dec
jns
fwait
dec
je
jae
push
mov
and
sahf
lret
scas
shll
mov
lcall
adc
mov
js
fists
sub
jae
hlt
fistpl
and
decb
push
pop
sub
out
jno
negb
sbb
js
jle
sub
sub
sbb
inc
adc
pop
shlb
xchg
adc
push
pop
rclb
addb
push
xchg
dec
jecxz
mov
xor
and
out
xor
xchg
sbb
fdiv
frstor
xor
in
cli
adc
push
adc
xchg
cmp
repnz
and
cmp
push
jbe
jno
ret
fcmovnb
repz
cs
and
or
pop
xor
push
call
movsb
rolb
test
ja
mov
outsb
and
inc
adc
cmp
fistl
out
testl
jmp
sub
cmpsl
xchg
pop
xchg
ret
dec
repnz
or
jns
ret
dec
mov
fcom
pop
out
xor
iret
cld
add
add
js
popf
pop
push
jbe
mov
scas
xchg
or
fstp
cmp
repnz
sahf
push
lods
xor
leave
push
pop
cmc
mov
xchg
icebp
add
sbb
repz
cs
pop
mov
pop
push
jge
jbe
xchg
fdivl
sbb
xchg
push
or
jno
cmp
lret
sub
dec
lret
nop
cli
mov
cmp
lds
mov
ds
fcompl
push
mov
lret
pop
dec
nop
mov
popf
mov
pop
jmp
out
sahf
lret
push
mov
mov
jp
sbb
scas
xchg
xor
fldt
mov
rclb
or
out
dec
sti
mov
mov
xchg
fwait
and
sahf
jge
cmp
decl
lahf
and
mov
adc
push
scas
mov
repz
jnp
jg
stc
das
pop
dec
mov
mov
jbe
mov
out
jmp
rorl
jmp
testl
sar
pop
sbb
mov
je
mov
dec
push
test
jp
cmp
mov
xor
and
lahf
ljmp
mov
cmpsb
add
xchg
inc
mov
call
loope
pushf
jmp
pop
int3
jle
mov
xor
imul
mov
sbb
aas
test
xor
adc
pop
subb
add
int3
das
inc
push
and
out
add
fwait
ds
inc
and
xchg
in
xchg
mov
jmp
ret
movsb
fwait
out
lret
mov
gs
lahf
push
lcall
stos
mov
sub
xor
mov
fbstp
gs
insl
push
adc
push
lods
outsl
adc
cld
push
clc
pusha
sub
sub
and
sbb
orb
mov
into
loop
lahf
aas
mov
and
mov
inc
push
test
and
and
push
in
loop
into
fists
mov
xor
jo
pop
test
rclb
ja
dec
inc
outsl
shll
out
mov
ror
decl
shlb
or
ret
imul
icebp
stos
or
adc
pop
pop
subl
out
fldt
rorb
das
jge
je
cs
jle
lock
jl
not
push
int
push
pop
jecxz
cmp
cli
or
mov
mov
rolb
in
lds
loope
cwtl
int
sub
loopne
cld
stos
mov
out
mov
stos
inc
mov
mov
mov
fldl
int
add
insl
lds
or
notb
sbb
out
sarl
sti
cmp
int
sub
outsb
ljmp
push
aam
cmp
inc
dec
test
into
scas
call
insl
push
enter
je
sub
lret
lret
mov
paddusw
xor
sbb
jmp
push
cmp
jne
popa
mov
insl
adc
imul
pop
fwait
mov
cld
mov
mov
inc
cmp
daa
dec
in
push
out
nop
or
in
push
adc
addr16
outsb
sbb
sbb
lahf
incl
dec
mov
jl
add
loop
imul
mov
clc
jg
inc
pop
cmp
adc
xchg
outsb
out
mov
loopne
orl
aam
inc
les
xor
loope
mov
mov
fxch
test
test
jecxz
add
mov
or
dec
mov
inc
mov
rcrl
sbb
cmpl
jnp
dec
loope
pop
push
sub
adc
mov
fstpl
cmp
push
cmp
add
movsb
xchg
outsb
jo
cwtl
pop
orb
je
cltd
popa
sbb
mov
mov
pop
mov
pop
imul
mov
adc
aas
int3
mov
dec
loope
stos
das
or
mov
repnz
leave
je
cmpsb
leave
pop
xchg
and
ss
lock
cmp
shr
jnp
shlb
cmp
aas
xchg
dec
test
rclb
icebp
xchg
pop
mov
nop
add
mov
adc
jae
jne
mov
pop
movsb
inc
inc
ds
push
cmpsl
dec
movsb
int
inc
clc
pop
mov
nop
mov
stc
pop
clc
fcmovne
rcrb
jbe
decl
inc
les
inc
out
mov
sub
aad
push
mov
lea
xrstors
mov
push
jno
stc
cmc
mov
push
in
xchg
inc
adc
inc
mov
js
or
or
cs
ljmp
jne
pop
out
movsb
jo
popf
dec
adc
xor
mov
repnz
std
sub
lods
ficoms
out
es
pushf
std
lds
sbb
ds
aam
mov
aas
cmp
mov
pop
loope
out
dec
add
shr
xchg
jle
arpl
xor
outsl
inc
ret
cmpsb
insl
xlat
les
aam
mov
es
insl
dec
jbe
jb
mov
mov
mov
mov
dec
int
jge
nop
adc
repz
jne
and
loop
add
push
cmp
xchg
mov
xchg
xlat
sbb
jg
pushf
mov
sbbb
lods
cwtl
add
into
fsubp
shrl
push
push
xchg
push
or
xor
mov
jae
ret
sar
jmp
arpl
push
xchg
aam
in
test
cmp
int3
mov
emms
test
mov
push
xor
push
pop
jmp
repnz
mov
mov
mov
or
adc
pop
jecxz
cli
xchg
dec
sub
nop
movsb
sti
inc
repz
fptan
inc
repnz
insb
scas
mov
xor
dec
jnp
cmpsb
int3
outsb
repnz
push
sub
add
pop
mov
loopne
xchg
push
mov
iret
sbb
pop
cmp
mov
push
sub
scas
adc
in
shrl
fwait
sbb
or
mov
pop
fwait
add
jle
test
sar
and
jbe
pop
ficoms
out
jnp
add
inc
repz
out
mov
and
imul
hlt
cwtl
into
and
loop
lret
push
jbe
rclb
into
jg
rolb
dec
mov
or
jbe
jl
rorb
bound
mov
pop
jo
jns
dec
pop
push
adc
fildll
mov
dec
xor
and
rol
xor
gs
je
sub
popa
mov
in
inc
mov
cmpsw
insb
or
out
jne
movsl
xor
add
dec
and
popa
aad
in
sbb
das
cmpsb
lock
pop
add
pop
mov
out
jl
stc
add
mov
xchg
cmc
sbb
xor
xor
lcall
adc
int
sahf
fistpl
aad
push
xor
movsl
ret
test
jl
test
mov
mov
xchg
cmp
int
cmp
out
and
mov
adc
stc
add
es
push
cmp
cmc
gs
push
xchg
fidivl
out
cmp
cmpsb
sbb
mov
mov
mov
clc
dec
insl
out
adc
push
mov
adc
in
out
cli
mov
fstpt
xor
je
ret
inc
ret
mov
sbbl
mov
cmp
subl
push
insb
xchg
lods
pop
sbb
aam
push
jg
mov
aad
pop
jb
rorl
mov
adc
addr16
add
lcall
stos
in
das
xor
mov
loope
sub
int
xor
add
int3
mov
xor
jle
sbb
jl
push
or
aad
sub
or
pop
pop
fsubrl
pushf
or
repnz
decl
imul
mov
test
lock
js
push
aam
sbb
cmp
in
mov
popf
adc
add
mov
lahf
mov
testb
push
add
add
xlat
movsb
addr16
jne
enter
fiadds
or
loope
loopne
out
insl
mov
outsl
xor
sub
and
mov
mov
aam
sbb
es
call
out
data16
call
mov
cltd
arpl
xorb
pop
push
push
cmpsb
sbb
mov
jge
pop
cli
icebp
jmp
sub
fiadds
xchg
lock
std
out
jle
scas
scas
cmpsb
lea
adc
shlb
cld
xor
dec
in
andl
loopne
data16
xchg
mov
xor
jb
into
pushf
iret
mov
and
and
es
jb
ss
jge
cmp
orl
arpl
insb
popf
mov
add
and
loopne
mov
std
jp
data16
xor
cmp
outsl
repnz
sub
pop
and
out
loope
in
jae
add
sub
ja
and
pop
sub
test
mov
mov
push
nop
xor
xlat
push
or
adc
fwait
add
rolb
add
push
mov
scas
inc
push
scas
add
sbb
pop
dec
movsb
lahf
in
int
adc
mov
leave
ja
inc
js
outsl
orb
loopne
in
mov
jnp
or
mov
xor
cmp
bound
adc
loop
mov
mov
or
enter
jle
repz
pop
jno
jns
imul
cmp
mov
in
enter
lcall
fsubl
adc
out
iret
cmp
jns
int
jl
repnz
std
and
and
inc
inc
jne
sub
push
cmp
mov
dec
pop
mov
add
test
sub
mov
inc
shlb
push
jge
fisttpl
xchg
test
xlat
jmp
es
loop
pop
mov
cs
sbb
fwait
push
xchg
push
mov
adc
daa
iret
int3
iret
adc
cltd
in
add
testl
out
lret
and
scas
sub
mov
mov
dec
mov
ret
gs
mov
fcmovu
dec
jo
ficoml
sahf
mov
cmp
jno
mov
cmp
push
stos
rcl
int
pop
dec
mov
mov
cmp
into
inc
cld
lods
adc
rcrl
fmuls
outsl
cmpsl
ljmp
cwtl
int
dec
js
ror
xchg
mov
daa
xor
xlat
ja
or
clc
add
cmpsl
test
xor
pop
mov
jg
push
fistpl
sub
mov
mov
test
add
mov
sti
sub
jg
jb
mov
mov
test
push
iret
imul
jo
sbb
scas
or
sarl
sbb
lock
jb
sub
subl
ja
repnz
xchg
insl
into
xchg
xchg
sbb
lret
dec
sub
call
test
scas
xchg
lock
jbe
test
enter
xchg
adc
shl
pop
data16
cmp
sbb
inc
xchg
es
mov
or
stos
lea
test
pop
test
dec
lret
aad
dec
dec
fcomp
pop
push
cmp
adc
mov
fcompl
push
addb
or
and
sti
xchg
dec
mov
add
inc
mov
fwait
leave
mov
and
adc
add
xor
in
sbb
aas
push
andb
cmpsl
xchg
leave
shll
or
hlt
subb
lea
xlat
and
cmp
sbb
mov
mov
pusha
adc
xchg
cld
std
icebp
or
mov
enter
push
fwait
sbb
stc
je
into
cli
lret
movswl
cmc
dec
int
push
pushf
push
inc
sbb
mov
sti
mov
adc
adc
pop
daa
bound
cmp
dec
or
pushf
in
pop
mov
cmp
pop
movsb
imul
mov
jl
sbb
pop
stc
pop
mov
fstpt
cmp
fisubl
xchg
dec
push
xchg
mov
sahf
aas
inc
data16
ret
xchg
rcrl
jg
or
jns
xor
mov
andl
and
mov
sub
cwtl
test
stos
xchg
jae
test
dec
pop
das
add
into
mov
bound
mov
add
daa
or
fsubp
and
jnp
mov
push
aas
mov
sub
cmpsl
jmp
jmp
push
mov
test
movsb
mov
xor
xor
repnz
les
movsb
mov
inc
fisubs
adc
sbb
test
lahf
mov
inc
add
ljmp
cmp
sub
insb
adc
mov
adc
je
adc
pop
mov
rorl
mov
mov
sarl
mov
iret
gs
cwtl
fnsave
push
fisttpll
xor
mov
imulb
outsb
jge
scas
movsb
popa
or
std
lcall
mov
repz
cltd
sbb
or
mov
es
jge
jge
jmp
cmp
jge
xlat
push
in
insl
dec
ret
inc
jl
xor
scas
and
imul
xchg
pusha
add
pop
insb
mov
fldenv
and
and
inc
push
orb
test
fistpll
mov
xor
push
loopne
adc
or
add
jp
jb
loop
addr16
jae
daa
fimuls
cmpl
xlat
inc
addl
mov
lods
mov
mov
jo
jecxz
or
idivb
add
mov
push
push
test
in
ficoml
push
aad
leave
add
lods
xchg
sub
jo
lds
cmc
mov
fincstp
cwtl
pop
ljmp
daa
mov
dec
mov
fbstp
push
aaa
jle
push
dec
ljmp
pop
pop
into
or
sbb
lods
mov
es
arpl
and
call
aaa
out
mov
int3
mov
pushf
test
loope
ds
ds
dec
aaa
in
mov
push
insl
pop
cmp
dec
test
mov
movb
pop
push
mov
loop
lret
add
fucomp
mov
stos
in
inc
mov
sbb
pop
xchg
outsl
shlb
xlat
push
leave
pop
in
dec
dec
bound
pushf
daa
push
fld1
repnz
ljmp
and
hlt
ret
jb
pushf
xchg
inc
and
push
gs
sub
in
ds
mov
stos
clc
fidivl
into
mov
test
addb
in
mov
dec
pop
and
mull
lods
mov
cmp
push
fldenv
sub
jg
inc
or
icebp
mov
inc
mov
in
out
push
add
rcrb
aad
mov
pop
cltd
adc
adc
fstps
subl
or
adc
sbb
das
adc
mov
push
adc
lcall
cwtl
leave
lods
mov
leave
xor
imul
bound
cmp
repnz
or
es
sbb
cmp
push
adc
xor
outsl
lcall
daa
addl
cmp
movsb
in
sbb
lret
pushf
pusha
popa
imul
mov
adc
je
cmp
push
mov
out
lods
in
cld
aad
mov
dec
lret
popa
int
cmpsl
in
aam
rcr
jg
jo
loop
loop
adc
mov
sbbl
rcrb
fidivrs
in
mov
mov
xchg
fcoml
adc
push
sbb
mov
dec
dec
xor
jno
sub
mov
lret
push
int3
push
cmpsl
sbb
sbb
xchg
inc
mov
jns
or
pop
loopne
mov
je
pop
cmp
int
cmp
adc
fisttps
xchg
mov
adc
fcmovnu
dec
lret
dec
pushf
push
shll
test
cmp
sbb
sub
pushf
mov
push
cmpsb
mov
lock
stos
add
stos
mov
adc
in
std
arpl
nop
pop
aad
mov
push
mov
fadds
lret
mov
pop
jge
insl
inc
xor
nop
fisttpl
arpl
ljmp
lea
scas
rcrb
xor
mov
jbe
outsb
jnp
cs
std
bound
fxch
push
add
imul
aaa
aad
mov
addb
lds
aas
mov
mov
push
or
daa
xchg
and
xchg
stos
int3
mov
outsl
mov
push
repnz
or
xor
int
ljmp
out
mov
lods
mov
push
add
push
adc
jns
cmp
mov
pop
adc
lods
pop
shr
dec
xor
sbb
adc
dec
adc
pop
xor
inc
adc
mov
nop
stos
test
pop
mov
adc
lret
mov
stc
or
ljmp
lock
inc
xchg
push
in
pop
int
dec
mov
insb
std
inc
add
repz
sub
outsb
out
es
addr16
cmpsl
aad
stos
and
jbe
clc
cmp
jno
cwtl
mov
pop
add
lea
addr16
xchg
adc
adcb
sbb
outsb
and
outsb
imul
bnd
adc
xchg
ret
or
in
mov
movsl
jle
in
xchg
cmp
test
test
inc
sbb
addr16
and
int
ss
fmul
adcl
mov
push
stos
jae
lock
jle
cmp
push
std
stc
jo
xchg
mov
pop
out
pop
shll
add
jl
icebp
repz
mov
lahf
jnp
clc
fidivrl
jbe
jp
aaa
call
adc
fs
cmp
ljmp
jecxz
push
aam
pop
jne
sarl
mov
dec
shrl
leave
cld
mov
inc
cld
fldenv
xchg
mov
jo
enter
mov
popf
repz
cmp
decb
pop
mov
les
jne
mov
xor
repnz
pop
sub
cwtl
push
jae
lahf
and
sub
jo
iret
xchg
pop
xchg
sti
repz
sub
or
movsb
in
push
mov
js
ljmp
dec
int
ret
leave
out
adc
xchg
nop
icebp
test
jl
pushf
lods
ret
mov
insl
sbb
lds
loope
mov
in
xchg
popf
jnp
popa
int
bnd
out
xor
pop
push
nop
idiv
sbbb
push
xor
xchg
inc
sbb
mov
int
das
sub
icebp
mov
nop
int3
out
sub
iret
insl
and
adc
adc
fcmovb
out
stc
inc
pop
add
les
daa
sub
and
mov
int3
lock
pop
out
mov
sahf
xor
xchg
and
or
cmp
mov
jns
jae
ret
mov
sub
iret
nop
ljmp
dec
leave
cmp
mov
cmp
adc
inc
lret
dec
sub
lret
xchg
cmp
jne
mov
xchg
cmp
add
fstpt
lahf
xchg
sahf
into
xchg
dec
js
xchg
dec
dec
movsb
arpl
mov
and
iret
rcr
lret
cmp
cmp
xor
dec
add
push
sub
jg
add
inc
cs
int3
fisubrl
lds
mov
mov
dec
push
call
pop
xchg
and
icebp
cmp
add
movsl
xchg
data16
xor
and
test
inc
cmp
jb
push
je
mov
or
enter
cwtl
sbb
sti
scas
shlb
cltd
push
in
fstpl
int
fstpt
insl
or
mov
idivl
mov
adcl
sub
lods
jecxz
and
out
popa
mov
jge
push
xor
scas
mov
stos
lret
inc
add
xor
inc
lret
mov
push
mov
ds
sub
jbe
loop
pop
mov
loope
icebp
loope
pop
dec
stc
mov
movsb
popf
loope
adc
rsm
and
ljmp
cmp
mov
xchg
pop
jg
ficomps
inc
adc
cmc
xor
sbb
cmp
bnd
and
sbb
xor
hlt
add
jle
inc
mov
adc
pop
imul
adcb
ret
pop
add
cltd
ja
sbb
mov
mov
inc
cmpl
lcall
adc
xchg
shrl
xchg
arpl
mov
sbb
sti
pop
push
jg
adc
nop
outsb
mov
dec
or
cmc
ss
cmpb
into
xchg
lods
cld
xor
dec
push
add
out
test
fimull
jne
fnstcw
ffree
inc
ret
insb
ret
inc
mov
xchg
popa
adc
out
add
repz
or
dec
xlat
jne
decl
or
ret
ljmp
sub
out
cmp
xchg
add
lock
inc
push
pushf
cmp
shrl
or
xor
xchg
sub
adc
sbb
outsb
sahf
cwtl
cmp
dec
bound
mov
push
adc
fwait
ret
lcall
adc
fmull
jg
pop
mov
xchg
pop
in
add
mov
adc
inc
into
pop
loopne
xor
xorl
push
gs
jmp
xchg
fs
push
mul
ror
call
hlt
call
dec
negb
scas
inc
mov
iret
mov
stos
mov
enter
in
dec
lods
jmp
cmp
add
mov
cmp
inc
arpl
out
gs
mov
push
add
cmp
lret
jecxz
push
xor
xlat
repz
sbb
sub
push
xadd
jns
sahf
push
adc
push
ret
cmp
cmpsb
mov
enter
rorb
jmp
fbstp
pusha
pop
add
rorb
sahf
push
fcmove
into
movsl
icebp
jmp
stc
adc
sahf
jnp
popf
push
test
rclb
stc
and
loope
dec
add
mov
out
adc
and
pop
icebp
sub
push
inc
and
mov
jg
jmp
orl
insb
push
loopne
fbstp
popf
call
and
shlb
roll
sub
sbb
mov
mov
pop
add
in
movsb
cli
mov
xchg
lret
push
and
jae
test
fucomi
std
adcb
mov
fmull
sub
xchg
es
int
jns
mov
or
pop
pop
fdivp
jne,pt
fnstcw
ja
das
lret
sub
push
cmp
loopne
xor
mov
and
out
js
sub
cmp
fidivrl
movsb
inc
mov
inc
jbe
roll
sbb
xchg
sbb
push
repnz
mov
jnp
adc
dec
subb
and
jl
in
add
aam
inc
or
mov
scas
mov
dec
mov
jne
sarl
dec
je
inc
fiaddl
icebp
adc
testb
xchg
cs
movd
lock
clc
cmp
dec
movsl
out
fnstenv
add
icebp
les
mov
fdivrl
ja
stos
sbb
cltd
dec
rcll
mov
pop
mov
je
push
mov
cltd
pop
or
push
pop
fwait
mov
stos
or
xchg
inc
cmovb
out
dec
cltd
outsb
ds
push
imul
mov
loope
adc
rcrb
lea
shrb
lock
es
and
mov
daa
mov
test
outsb
jno
mov
adc
inc
mov
or
add
call
in
mov
add
cmpxchg
mov
push
xlat
sub
push
or
shll
mov
ret
or
loope
lds
jle
pop
inc
mul
sti
ljmp
sub
jnp
jl
push
or
adc
xchg
ljmp
shrl
inc
pop
movsb
adc
adc
cmp
sbb
push
cli
dec
jns
rep
ret
lret
jo
push
aam
hlt
lret
push
or
cs
fildll
mov
out
in
dec
add
inc
clc
push
lahf
mov
mov
test
and
push
pop
xor
add
sti
iret
mov
aad
cmpsl
sub
lcall
daa
es
dec
jle
out
sub
xchg
loope
out
or
lods
and
lret
lods
xor
pop
outsl
pop
dec
nop
jno
jno
fs
mov
push
dec
sbb
cli
and
dec
cmp
or
roll
loopne
test
divl
xchg
lods
fwait
add
and
xlat
sub
push
mov
mov
inc
cltd
repnz
pop
test
add
vpmacsdqh
and
xchg
pushf
idiv
lcall
pop
aaa
and
sbb
jmp
rolb
rclb
push
sbb
push
push
sub
xor
or
jo
scas
jbe
jg
mov
cwtl
pop
mov
adc
xor
inc
flds
mov
sti
jne
add
shrl
in
inc
adc
add
das
and
int
mov
sbb
jno
pushf
push
inc
aam
cmp
mov
dec
fcom
xchg
das
jl
mov
ret
mov
scas
push
mov
lock
cli
push
fldcw
push
stos
cwtl
jle
push
jmp
aam
dec
repnz
stc
in
push
xchg
pop
jb
lods
push
mov
vpmacsdql
shr
lock
jle
mov
lock
xchg
push
cltd
data16
mov
cmp
mov
mov
adc
jmp
push
sub
sub
dec
and
add
jno
repz
pop
dec
sub
xchg
push
mov
cltd
scas
roll
push
stos
into
je
rcrb
out
dec
pop
test
fistpll
mov
mov
rorl
sub
jb
sbb
push
aaa
jb
mov
hlt
mov
aad
outsl
cmpsb
imul
loop
pop
push
inc
mov
je
out
jg
xchg
and
dec
jl
out
mov
pop
mov
repz
rcrl
fsts
sub
jecxz
xor
lret
cmc
push
xchg
aaa
jno
xor
test
les
inc
cmp
push
shrb
push
pop
lea
sub
sbb
xor
scas
inc
dec
loop
mov
mov
mov
out
jecxz
jg
mov
out
xchg
mull
mov
adc
jne
mov
shll
inc
int
in
push
fbstp
movsb
add
daa
xchg
negl
inc
lea
fnstcw
jns
cltd
shrl
in
rcrl
jno
mov
add
mov
adc
mov
or
dec
mov
test
pop
out
adc
jmp
inc
loopne
icebp
scas
and
add
or
sysenter
rcrl
into
out
mov
jo
in
adc
icebp
inc
xor
xchg
ficompl
jg
push
add
nop
aaa
shrl
dec
jne
lea
dec
xchg
mov
adc
add
xchg
lret
clc
inc
add
jno
scas
pop
adc
out
and
sbb
mov
cmpsb
mov
iret
sbb
add
sub
cltd
add
adc
inc
leave
push
push
movsb
das
shl
ss
mov
jl
push
mov
mov
dec
decb
test
negl
adc
decl
out
hlt
movsb
xor
loop
enter
aas
nop
and
andb
stos
ficoml
mov
xchg
push
mov
and
mov
int3
shrl
jb
popa
addb
arpl
mov
push
or
push
pop
inc
and
pop
push
aas
call
out
shl
mov
jo
mov
fstp
sbb
arpl
popf
out
add
enter
or
aam
scas
or
mov
dec
loope
xchg
cmp
push
lods
xchg
mov
outsl
out
repnz
stos
clc
jne
mov
shl
xor
xchg
cwtl
aam
mov
xchg
stc
aas
daa
mull
mov
ds
sbb
xor
imul
cltd
dec
mov
xor
nop
outsl
xlat
ret
xlat
mov
add
imul
cwtl
mov
shrl
outsb
shrb
and
js
xchg
int3
fdivs
adc
in
loop
ljmp
sbb
andb
add
dec
clc
je
lret
inc
in
rolb
jno
pop
out
inc
xchg
jns
ss
push
push
xor
mov
divl
sbb
pop
stos
mov
shll
in
lock
sbb
add
add
dec
shll
incb
faddl
pusha
add
test
add
push
ret
int3
mov
cwtl
cmc
xor
and
sarb
test
sub
cmpsb
sub
dec
jg
jb
mov
add
clc
stos
mov
xchg
push
nop
sysret
jecxz
or
pop
mov
and
mov
lret
pop
mov
subb
pop
in
jge
fwait
test
mov
lahf
aaa
or
aam
sub
and
cmpsb
adcb
pop
lea
push
pop
sbb
pop
add
inc
je
loop
and
inc
aas
movsb
mov
je
dec
add
push
sub
cmp
and
xor
pop
or
mov
sbb
leave
cli
cmp
mov
ljmp
add
or
sbb
ljmp
fdivrs
push
bound
cld
pop
into
sub
clc
push
push
xor
pop
fsubrl
xor
rcrl
push
daa
adc
push
jnp
out
out
adc
shrb
je
cs
es
jmp
jmp
xchg
fisttps
repz
mov
sar
enter
mov
sub
push
jo
nop
into
test
call
pop
clc
jl
or
xchg
pop
xchg
ljmp
xchg
jbe
xor
mov
push
jbe
xor
in
aaa
bound
cmp
cmp
fdivrl
insl
mov
mov
or
or
adc
bound
jno
inc
and
pop
push
mov
aam
popf
rorl
test
jl
adc
dec
push
test
xor
xchg
out
gs
dec
ss
and
mov
imul
popa
sub
imul
testl
imul
ss
jp
xchg
fnstenv
enter
notl
inc
adc
dec
cld
jecxz
and
popl
das
call
lret
pop
lcall
sub
cli
incl
jns
test
cmpsb
jp
cmp
gs
fsub
mov
inc
push
sbb
cld
mov
pop
xor
int3
mov
andb
in
lock
jne
mov
test
xor
pop
pop
movsb
loop
add
jb
jae
inc
xchg
jnp
test
or
in
xchg
and
and
mov
add
push
icebp
loope
int3
xchg
dec
in
mov
push
test
inc
add
dec
repz
scas
sub
mov
fbld
shl
fsubl
push
add
test
test
cmp
int
mov
ljmp
fists
gs
add
lds
cmp
faddl
loope
jmp
lret
sbb
in
icebp
push
mov
xchg
pop
outsl
dec
and
push
repnz
shll
je
fwait
jo
jne
inc
imul
popa
xchg
pop
movsl
xchg
mov
or
rolb
lods
and
shlb
mov
mov
pop
adc
rcrb
jb
pop
cmpsl
adc
hlt
lret
stc
call
xchg
add
call
insb
bound
mov
jg
into
into
fnstcw
push
mov
fstpt
call
lods
mov
fimull
dec
out
enter
adc
bound
mov
es
add
std
jno
dec
out
adc
mov
rorl
inc
cmp
jne
push
pop
jl
clc
les
inc
rcrb
cmp
mov
pop
test
and
xor
stos
sahf
shr
sbb
movsb
repnz
pop
scas
fildl
shl
dec
std
lret
or
js
vpaddsb
mov
cltd
pop
push
pop
orb
or
xor
test
push
adcb
lahf
lret
or
int
mov
je
xchg
sarb
rcrb
xchg
jp
hlt
adcl
rolb
mov
adc
mov
in
mov
js
out
push
in
and
bnd
daa
sbb
or
mov
mov
push
pop
leave
push
cmp
imul
push
aaa
jno
mov
xor
add
pop
sub
out
jg
data16
ljmp
notb
mov
cmp
xchg
lds
xor
sbb
lret
add
in
mov
jecxz
int
sub
pop
mov
and
sub
push
xchg
ss
xchg
xchg
sub
aaa
imul
adc
jae
push
push
mov
xor
and
xor
pop
ljmp
pop
pop
jb
inc
call
lds
jns
dec
out
add
or
sbb
pushf
orl
ljmp
imul
mov
mov
mov
dec
mov
and
cmp
cmp
shlb
or
and
jbe
dec
adc
int
out
push
in
lea
decb
test
daa
addr16
dec
pushf
idiv
add
je
push
jg
sbb
jnp
mov
testb
pop
mov
ds
cmp
mov
je
movsb
pop
bound
iret
mov
cwtl
adc
jne
jle
pusha
loopne
jg
cmpsl
roll
pop
insb
push
mov
outsb
adc
nop
dec
xlat
cmpsb
cmpsl
fsubp
jnp
fisubrs
gs
inc
dec
and
pusha
cmpsl
mov
aaa
enter
stc
jb
sub
pop
cmp
subb
cmp
dec
adc
sbb
leave
loope
dec
sti
ret
mov
and
or
and
dec
cltd
xlat
jecxz
cs
shlb
and
push
add
test
sbb
mov
mov
xchg
lea
pop
inc
fiaddl
cmpsb
lret
rclb
mov
addl
dec
lret
cmpsb
jmp
dec
pusha
jp
adc
jmp
popf
ja
xchg
jne
nop
ret
hlt
jo
fs
xchg
addb
push
pop
out
pop
mov
in
xor
mov
ret
fildl
push
push
rolb
enter
mov
movsb
xchg
or
xor
enter
insb
ss
in
gs
jl
jo
mov
adc
jle
add
outsb
cld
lds
push
scas
xor
lods
and
xchg
fidivrl
int3
adc
jl
cltd
cld
aam
dec
xor
pop
sbb
cmp
sbb
pop
shl
scas
pop
lret
dec
adc
inc
icebp
je
stos
mov
inc
testb
cmp
jbe
cmp
or
lock
mov
sub
out
paddb
dec
inc
repz
push
adc
sarb
out
test
stos
jl
test
mov
cs
and
push
mov
cltd
js
clc
cmpsl
xchg
mov
aaa
incb
insl
ds
jne
jno
stos
sbb
sbbl
mov
sub
xor
xor
xchg
mov
aaa
stos
lock
rorl
mov
or
dec
iret
add
das
rorb
ds
cmc
and
cmpsb
and
outsl
lods
int
adc
loop
repnz
add
mov
mov
pop
es
movsb
push
cltd
arpl
xchg
gs
fcmovnb
mov
and
aad
leave
mov
add
xchg
sub
shr
hlt
mov
out
mov
mov
sub
and
inc
js
or
sbb
or
sbb
mov
inc
lea
out
cltd
das
mov
leave
dec
pop
outsl
bound
adcb
jg
clc
orl
inc
loop
test
adcb
dec
ffreep
or
out
or
jbe
push
or
outsb
iret
pop
cmpsl
xchg
les
and
iret
jge
pushf
push
sub
test
mov
and
push
add
les
out
or
add
out
xor
out
mov
cmpsb
xor
jno
xchg
adc
sub
loopne
out
mov
cs
aam
gs
in
push
sbb
shrl
testl
xchg
sbb
push
lret
mov
test
lods
dec
jne
je
xor
dec
add
rorb
ret
jb
push
xchg
neg
sti
cs
and
xlat
inc
insb
jne
push
fistps
push
xchg
or
ret
mov
jg
or
pusha
fmul
sbb
popf
cli
add
sub
or
sbb
pop
cmpsl
cmp
cmpsl
rorb
ror
jnp
pop
pop
repnz
pop
lods
inc
nop
cmpsl
xchg
or
adc
push
repz
mov
cld
jp
imul
inc
xorb
sbb
and
pop
add
inc
or
pop
mov
mov
in
cmp
dec
cmp
mov
or
push
lret
cmpsb
mov
test
int
daa
mov
jge
outsl
shrb
cmp
bound
cmp
dec
dec
out
mov
or
adc
xchg
das
inc
movsl
inc
jmp
enter
mov
cld
in
mov
roll
insl
fcomp
lock
cmp
or
ret
shrb
xor
pop
mov
jle
push
cmpsb
xchg
sahf
mov
jnp
arpl
inc
ljmp
mov
jge
add
insl
pop
xor
ret
icebp
cmpsb
int3
cwtl
pusha
aad
sub
fsubs
scas
add
stos
jg
sti
lcall
or
xchg
es
movhps
or
adc
lcall
into
popa
bound
xor
add
test
aam
ljmp
xchg
popa
and
pusha
test
inc
jecxz
sbb
jno
clc
je
movsb
dec
jnp
xor
out
push
jns
in
and
arpl
mov
adc
lret
add
xchg
loopne
aas
pop
testb
xchg
dec
in
mov
scas
mov
cltd
in
jns
cmp
xor
clc
jp
lahf
pusha
fimuls
add
mov
out
jp
push
jp
push
adc
inc
stos
jae
or
test
test
add
pop
fcmovnb
dec
movsb
push
out
lret
fsubrl
popf
adc
in
push
lds
call
xlat
sub
xchg
inc
jnp
and
imull
jne
xchg
dec
cmp
jnp
push
fdivrs
call
ja
rcr
bound
cltd
and
fs
sbb
bnd
insl
jb
pop
pop
fstl
ja
jp
fimuls
dec
lods
pushf
dec
sahf
pop
inc
xchg
fdivrl
push
in
cmp
ja
scas
jne
js
popf
sub
clc
pop
sub
fwait
sub
negl
push
mov
rolb
cmp
inc
xlat
dec
lods
rolb
xor
fcmovnbe
pusha
iret
jne
add
test
ficoms
repnz
jbe
pusha
lods
into
inc
xor
xorl
mulb
test
dec
ret
mov
jmp
les
push
xchg
add
iret
dec
mov
insb
mov
bound
fstl
jnp
incl
lret
aaa
push
je
dec
repz
or
or
push
gs
inc
ds
mov
jbe
loop
sbb
ret
add
push
pop
adc
dec
xlat
test
mov
jg
or
mov
addb
or
xor
cmp
in
repnz
dec
inc
jb
repnz
jecxz
hlt
add
adc
cmp
rcrb
pop
xchg
adcl
or
lcall
mov
sahf
dec
sbb
out
sub
insb
pop
cld
insb
inc
outsl
xchg
idivb
inc
dec
mov
cltd
movb
lcall
decb
stos
xchg
inc
sbb
and
adc
cltd
pop
push
and
aaa
sbb
out
imul
cwtl
dec
xchg
sub
dec
push
xchg
pop
jbe
aam
mov
mov
pop
iret
fcoms
test
adc
popa
inc
jecxz
cli
out
stc
or
gs
outsl
push
nop
cwtl
into
sahf
mov
sbb
xchg
int
shrl
mov
movsb
inc
movsl
mov
int
cli
dec
pcmpeqb
and
cli
fs
pop
sbb
or
push
ss
xchg
inc
insb
jg
mov
orb
sahf
add
in
repz
aas
inc
adc
frstor
sti
pop
jbe
mov
test
bound
call
push
xchg
cmp
and
and
adc
xchg
xchg
push
sbb
cltd
lret
loopne
fistl
je
mov
gs
pop
inc
xchg
out
jmp
outsl
add
lods
push
sti
xchg
daa
std
ja
inc
data16
pop
sub
repnz
add
bound
mov
push
mov
and
outsb
test
rolb
xor
or
ror
inc
xor
sub
inc
and
aam
or
push
jp
jns
insb
pop
movsb
push
fisubl
test
xchg
das
xor
orl
adcb
cmc
pusha
jmp
or
add
xor
or
xor
enter
add
insl
out
mov
js
pop
mov
rclb
push
nop
fsubs
mov
xchg
or
outsl
mov
mov
mov
add
lock
stos
gs
sbb
jno
xchg
test
xor
and
or
enter
pop
mov
xor
or
pop
mov
imul
inc
ss
xchg
mov
pop
mov
popf
push
mov
pop
xchg
popa
movsw
hlt
dec
shll
lods
lods
jl
rcrb
test
gs
test
or
outsl
scas
adc
dec
ret
loopne
imul
inc
inc
xor
mov
and
test
out
inc
add
sub
mov
fsubrs
lahf
xchg
xchg
mov
push
aaa
mov
jnp
lea
shr
xchg
shrb
mov
dec
scas
mov
push
jo
stc
inc
lret
dec
xor
mov
mov
xchg
stos
jae
mov
enterw
sbb
sub
mov
jo
mov
pop
xchg
sbb
sbb
stos
xchg
fisttpll
faddl
jb
std
push
xchg
out
orb
jae
decb
and
out
mov
xor
xor
cmc
cmpsb
xlat
dec
rcrb
xor
inc
imul
adc
add
pop
jecxz
popf
dec
push
leave
fdiv
sbb
scas
shr
ret
xchg
adc
pop
pop
mov
sub
sub
mov
mov
jle
xor
push
cmp
sub
sarb
pop
push
fdivl
push
jo
punpckhbw
inc
inc
aam
pop
or
inc
addl
rcrl
pop
mov
add
iret
and
into
cmp
arpl
or
lahf
add
or
and
add
rcrl
sub
loope
push
sbb
jp
cmp
sbb
ret
cmp
bound
jl
lds
xlat
in
xchg
clc
inc
inc
sub
loopew
inc
sbb
lcall
cltd
mov
loope
lcall
sti
rcrb
call
enter
fs
and
stos
cmc
daa
cmp
xor
mov
mov
cmp
jnp
mov
pop
mov
scas
dec
mov
xchg
sbb
push
add
cmp
jp
fucom
loopne
dec
das
cmp
pushf
pop
push
jnp
insb
xorb
aam
fdivrs
stc
mov
outsl
shlb
rcll
cmp
inc
insl
gs
inc
mov
cltd
mov
out
sub
jb
pusha
lods
cmp
stc
into
pop
stos
movsl
sahf
stos
inc
repz
mov
push
pop
je
sbb
and
jns
add
inc
mov
mov
shrb
ljmp
sub
test
les
push
sub
dec
je
cmp
mov
cli
out
aaa
and
cltd
cmp
mov
es
sbbl
adc
movq
dec
or
dec
jno
mov
into
jae
shlb
adc
js
cmp
out
jle
fs
dec
mov
sub
fld
pusha
scas
ja
add
mov
sarl
xchg
aaa
inc
mov
jmp
in
xor
sub
insl
leave
ja
pusha
test
sub
icebp
mov
rcll
js
outsb
jmp
into
js
xor
xchg
mov
cmc
gs
mov
jbe
sbb
bnd
loope
push
dec
fisttpll
sbb
mov
call
push
sub
nop
test
cltd
aad
shr
popf
cmpsb
cwtl
jb
or
fists
adc
xchg
dec
fdivs
push
sahf
es
inc
push
lds
pop
insl
add
mov
mov
mov
xor
arpl
rcll
sub
shll
pop
into
and
push
lods
out
jmp
jne
xchg
mov
inc
addr16
pop
sbb
scas
arpl
clc
in
jp
add
notb
iret
mov
mov
loope
test
jne
clc
pop
add
mov
scas
loop
test
int
inc
mov
in
lret
pop
mov
js
mov
mov
xlat
pop
fadd
cwtl
ljmp
je
pop
mov
inc
add
ret
push
sub
and
jns
and
mov
scas
mov
jl
sub
mov
sub
mov
aad
mov
shl
xchg
xor
adc
or
jge,pn
inc
or
mov
cs
lret
inc
js
inc
nop
sti
test
in
inc
mov
fsubrp
mov
test
jg
data16
clc
push
clc
test
mov
hlt
inc
adc
in
leave
into
out
jecxz
out
dec
dec
cmp
aas
das
bound
insb
rcll
stos
out
fstps
and
mov
ret
pcmpgtd
inc
mov
adc
inc
aaa
stos
xor
lods
mov
dec
mov
std
xchg
or
iret
adc
mov
or
xor
mov
dec
jne
mov
pop
sahf
mov
les
daa
mov
lea
mov
xchg
rcrb
pop
mov
pop
jl
in
dec
pop
in
pop
aas
cmp
out
or
add
scas
adc
jl
popa
or
dec
xchg
xor
and
and
jns
jbe
frstor
arpl
std
shlb
cld
cmp
ret
pop
icebp
jne
int
dec
aas
movsb
fcomps
stos
std
mov
xchg
add
sarl
add
pusha
push
pop
inc
loopne
lret
inc
mov
push
cld
stc
fwait
popf
inc
jbe
and
add
daa
push
or
pop
mov
stc
cmp
icebp
movsb
jo
jecxz
xor
mov
clc
lods
pushf
jns
xor
push
mov
cmpsb
clc
test
adc
pop
std
push
pop
mov
mov
mov
mov
fwait
call
clc
movsb
enter
add
mov
or
inc
jecxz
addr16
jns
mov
int3
xchg
push
cmc
or
jnp
cli
xchg
jae
inc
call
test
outsl
sub
pusha
push
stc
mov
cmc
mov
jne
push
push
ror
int3
adc
dec
dec
imul
inc
or
clc
je
call
ja
gs
scas
and
ret
jno
fnstsw
icebp
neg
push
jae
xchg
cmp
dec
rol
mov
inc
mov
add
scas
sbb
fsubl
mov
pop
sbb
add
je
ret
and
push
out
fs
push
in
out
xor
lods
jecxz
pop
test
jne
and
mov
aaa
fs
dec
sar
fs
dec
sub
lods
inc
test
call
add
loop
nop
ret
gs
aaa
and
out
pop
push
jb
fwait
cltd
adc
pop
cmp
movsl
dec
fcmovne
sub
push
xchg
imul
flds
inc
aaa
xchg
addl
out
gs
sub
add
add
push
mov
pushf
push
cmp
inc
out
push
pop
jnp
adc
mov
jo
daa
int3
inc
fimuls
add
daa
pushf
in
adc
inc
cmpsb
add
testl
adc
adc
call
cmp
cli
out
pop
movsb
mov
insb
xchg
inc
pop
fwait
mov
ret
icebp
iret
test
xor
pop
fcompl
repz
insl
and
sbb
and
and
mov
add
and
pusha
shll
mov
rcrl
enter
lahf
scas
add
fwait
xchg
jb
fcomps
scas
mov
adc
call
push
shrb
mov
lahf
mov
loope
sub
adcl
addr16
xchg
cld
jecxz
cs
imul
dec
stos
ret
push
jecxz
jmp
jb
mov
pop
lock
xorl
adc
push
mov
mov
or
mov
out
test
jecxz
sbb
outsl
or
add
sbb
sub
jbe
and
xor
pop
mov
xchg
movsl
mov
xchg
and
test
and
pusha
inc
adc
and
jmp
insl
dec
mov
pop
es
mov
jo
add
testl
insb
cli
jb
adc
out
xlat
test
mov
cld
sub
mov
outsl
xchg
cmp
push
bound
dec
or
in
inc
sub
fldenv
pop
movsl
jnp
mov
iret
ds
sub
and
dec
and
mov
jb
mov
mov
dec
xchg
and
adc
sub
repnz
push
fbstp
in
enter
movsb
stos
dec
push
fnstsw
mov
cmp
daa
sbb
sub
push
jmp
stc
or
ljmp
mov
push
sbb
and
aaa
fcmovnbe
add
in
loop
fiadds
inc
lea
mov
inc
cmp
mov
push
negl
pop
stos
jne
jae
xchg
jnp
imul
in
lock
clc
dec
lods
out
pop
mov
mov
sahf
pop
out
pop
roll
lret
sub
pushf
sahf
dec
or
mov
pop
sbb
fsubrl
jbe
sub
push
add
adc
push
push
out
push
and
hlt
ret
cmp
lahf
fildl
sbb
cmc
orb
ss
lea
xchg
cmp
mov
lcall
movsl
dec
divl
or
or
ret
test
sahf
xchg
je
cmc
adc
cmpsb
ss
mov
jns
call
cmpsb
jae
lods
incb
cwtl
add
out
fcmove
xor
push
inc
sbb
adc
xchg
inc
stc
sbb
fmull
sbb
dec
jle
ret
call
test
pop
rcll
pop
inc
pop
ret
pop
pop
push
mov
xor
das
cltd
mov
and
xchg
jle
sbb
cld
lcall
repz
fs
xchg
loop
cmpsl
sbb
cmpsb
sub
fadd
inc
cmp
sub
stos
mov
or
jnp
dec
pusha
mov
clc
stos
pop
pushf
mov
scas
xor
inc
jns
imul
mov
scas
jo,pn
imul
lahf
cmpsl
sub
lea
scas
mov
clc
or
pop
mov
inc
xchg
mov
test
dec
mov
cs
cmp
jo
jg
cmp
outsb
outsb
js
and
cwtl
in
std
imul
cmc
dec
push
ret
or
dec
orb
xchg
inc
ret
stos
mov
cmp
loope
das
sub
xor
xchg
push
clc
mov
aaa
push
fwait
sbb
sub
out
das
fldenv
jecxz
adc
xor
sbb
dec
lock
mov
or
adc
mov
add
cltd
push
mov
jae
cmpb
dec
xchg
stc
dec
pop
aad
sti
out
dec
sub
andb
pop
cmc
ljmp
loope
lcall
and
adc
hlt
fs
sbb
iret
enter
imul
mov
cmp
addr16
xchg
aaa
pop
mov
inc
in
call
pop
add
mov
and
shll
jle
xor
loope
push
mov
xor
sti
dec
jp
mov
jmp
dec
int3
jmp
cwtl
in
xor
dec
leave
bound
push
xor
dec
pop
aad
and
cmpsl
fldcw
mov
or
xor
inc
sbb
mov
insl
je
push
sbb
int3
pop
dec
loopne
pop
cs
or
push
repz
jg
in
push
push
inc
cmp
sbb
push
xor
push
inc
mov
data16
pusha
mov
in
mov
in
inc
push
in
inc
push
or
es
enter
and
add
inc
cmp
aaa
xchg
push
and
fwait
icebp
lods
push
jge
popf
mov
mov
fcom
pusha
lret
fcmovne
jg
xchg
add
ret
shr
rcll
or
xchg
dec
dec
push
fdivrl
cmpsb
fdivl
push
cmpsl
addr16
sub
mov
adc
and
shrl
xor
es
pop
in
lea
repnz
shrl
add
adc
adc
addr16
add
leave
xor
lods
mov
jecxz
cmpsb
sub
ljmp
push
sbb
push
push
nop
mov
aas
pushf
mov
cwtl
sbb
adc
pop
jb
hlt
push
outsl
mov
push
push
leave
pop
xor
cltd
xchg
dec
arpl
or
cmp
mov
in
enter
sbb
rorb
call
stos
shll
insl
push
push
bnd
push
xor
pushf
lahf
jg
mov
mov
xor
lods
and
out
rclb
fstp
mov
mov
push
aas
jns
jnp
push
fadds
mov
fnstcw
addr16
pop
loopne
xchg
push
cmp
outsl
mov
push
outsl
out
cmp
push
push
dec
xchg
or
insb
jmp
or
clc
fwait
addb
pop
xchg
lahf
xor
imul
push
in
xchg
sbb
dec
ja
mov
testl
stos
jle
push
sbb
or
imul
into
sub
icebp
and
popf
xor
int3
inc
adc
es
push
jl
xor
repz
lahf
push
adc
mov
addr16
and
loopne
add
cmpsl
cli
in
pop
ds
es
dec
pop
ja
push
jns
inc
push
movsbl
xlat
lock
push
test
jb
add
sub
pop
xchg
fidivl
outsb
xchg
ljmp
loopne
mov
jae
mov
out
inc
xchg
out
adc
mov
cmp
mov
xor
add
jns
into
stc
in
push
jno
pop
lock
mov
jp
jge
jb
mov
adc
cltd
pop
roll
mov
lahf
pop
in
dec
and
loopne
push
xchg
pop
xor
cmpsb
rcrb
adc
pop
mov
out
pop
push
out
sbb
pop
daa
jp
add
push
xor
push
mov
test
cltd
adc
stos
sub
outsb
in
fisubl
sub
mov
pop
into
jne
pop
push
out
inc
fstl
mov
and
leave
es
scas
loop
dec
arpl
and
fsubrp
loopne
sar
or
sub
xchg
dec
jns
xchg
mov
add
sbb
inc
and
xchg
sub
xlat
jl
mov
sub
daa
test
xchg
test
stos
xlat
inc
sub
inc
ret
xchg
aas
inc
jl
mov
inc
orb
push
mov
out
or
es
mov
dec
push
push
fs
add
imul
outsl
cmpsb
cmp
inc
xor
test
xor
or
stc
sub
aas
add
inc
scas
pop
mov
rorb
ficompl
xor
mov
xchg
pop
jmp
or
jmp
lea
xchg
popa
fsts
lea
in
and
sbb
test
aam
leave
push
out
out
dec
cmp
fdiv
xlat
dec
lcall
add
add
lcall
aam
sub
add
ljmp
fdivr
call
xchg
push
cmp
jnp
insl
pop
add
jg
sub
fs
shlb
std
movsl
xor
das
das
adc
aam
hlt
into
lods
xchg
lods
gs
mov
gs
dec
out
int
das
arpl
mov
jno
xchg
fsub
sub
outsb
mov
pop
andb
test
lcall
loope
mov
insb
ss
lock
loopne
xchg
ficoml
and
push
pop
fsubl
jne
fs
movsl
inc
test
or
mov
push
xchg
mov
shll
ror
leave
add
and
movsb
lods
cld
dec
movsb
clc
insb
pop
xchg
cltd
pop
adc
mov
xchg
inc
push
mov
inc
ret
out
das
test
mov
outsl
fchs
test
lahf
popa
jnp
mov
imul
cmpsl
fnstenv
fdivr
dec
aas
jo
push
popf
jo
xor
mov
adc
jmp
stos
xor
cmp
mov
pop
pop
enter
ss
mov
dec
out
jne
out
pop
test
xchg
and
test
dec
call
cs
cli
ficoms
pop
or
fdivs
pushf
in
and
pop
popa
xchg
aas
sbb
xorb
adc
push
fistpll
sti
sti
mull
inc
mov
clc
lcallw
xchg
lahf
cs
movsb
sbbl
push
cmp
cmpsb
ret
inc
cmpsl
lret
mov
add
xchg
adc
jnp
and
inc
scas
fisubs
push
jg
call
notl
hlt
sub
pop
int3
dec
xchg
dec
inc
mov
shlb
or
test
xor
dec
xor
ror
push
daa
js
and
pop
mov
xchg
mov
enter
adc
or
loop
pop
into
rorl
xchg
mov
sahf
adc
sub
dec
push
sub
xchg
mov
stos
and
fcompl
sbb
int3
fildl
jbe
jo
sub
mov
int3
mov
daa
cwtl
repz
add
dec
pop
mov
stc
cmp
mov
cld
rclb
sar
inc
push
stc
jecxz
push
cmp
xor
test
outsb
outsb
push
inc
daa
lcall
je
rclb
pop
jb
cmpb
fs
xchg
loop
xchg
enter
je
lahf
mov
inc
ja
sti
loop
inc
cs
sti
jmp
stos
mov
sti
test
xor
jb
pop
in
xchg
mov
mov
testl
pop
test
push
lods
stos
jb
push
stos
fs
push
jne
in
xor
sti
jo
bound
pop
push
ror
pop
mov
movsb
cmp
std
stc
or
popf
outsb
xchg
mov
ret
sub
inc
dec
adc
ljmp
push
xchg
iret
xchg
mov
in
lret
jl
test
dec
xor
and
hlt
leave
and
into
jae
push
pop
insb
hlt
dec
mov
xor
rcr
or
rcl
cld
idivb
addl
xchg
loop
jg
inc
or
adc
xchg
mov
scas
mov
sub
sub
pop
fs
xlat
mov
pop
dec
cltd
jge
xorl
and
out
push
test
push
mov
sbb
inc
mov
rclb
mov
push
cmp
sbb
sub
insl
lcall
aaa
out
adc
mov
inc
repnz
cmp
sbb
inc
xchg
and
push
test
or
dec
dec
and
loopne
push
mov
and
jno
outsb
sti
sarb
jle
or
int
mov
adc
mov
xor
popa
repz
and
fnsave
das
mov
dec
adc
pop
push
sti
movsl
cltd
aad
sub
xchg
lock
stos
mov
push
pop
inc
cmp
pop
cmc
out
or
icebp
inc
cli
inc
icebp
insl
push
gs
push
pop
scas
sbb
outsb
push
out
aas
xchg
imul
push
mov
xchg
add
push
addr16
cmc
dec
cmpsb
andl
ja
mov
cmp
test
cmc
rcll
jnp
mov
imul
mov
inc
and
scas
gs
inc
negl
mov
jge
jno
test
xor
push
enter
adc
popf
mull
xor
repnz
ss
shr
jle
mov
out
aad
adc
push
jle
dec
imul
jae
mov
inc
sahf
lret
sub
movsb
cwtl
gs
mov
jb
mov
sub
insb
jmp
jno
call
adc
into
jb
jecxz
repz
hlt
insl
dec
or
mov
outsb
cmp
fs
add
int3
imul
ret
jmp
lds
push
dec
adc
xchg
std
push
mov
int3
ss
push
mov
or
insb
adc
fldl
mov
mov
push
cmp
mov
add
mov
jle
enter
adc
cmp
xor
stos
or
ds
lcall
ja
sbb
mov
cmp
jo
sbb
adc
mov
mov
push
cmp
mov
mov
xchg
rcl
sbb
mov
pusha
mov
leave
bswap
jle
add
lds
push
add
xchg
xor
shrb
mov
add
leave
lret
or
and
mov
fwait
hlt
adc
insl
adc
and
fwait
idiv
xchg
adc
test
std
jo
shlb
mov
sub
and
xchg
mov
jg
and
push
jbe
fisttpll
adc
sub
mov
mov
in
jb
mov
pusha
mov
mov
xchg
jl
mov
adc
int3
sub
sbb
and
icebp
mov
imul
gs
xchg
ret
fwait
xchg
add
add
sbb
push
data16
and
sbb
jo
jmp
ret
loopnew
imul
pop
test
nop
mov
daa
insb
or
push
movsl
xor
js
jno
in
mov
mov
das
mov
mov
loop
mov
popf
int
pop
ret
and
lods
push
mov
and
jp
push
inc
xchg
andb
cltd
ret
dec
or
mov
cmovns
xor
push
pop
dec
sbb
scas
pushf
mov
lcall
push
dec
xchg
xor
jge
movd
jmp
push
jecxz
fsubrs
gs
insb
stos
call
arpl
jp
cmp
or
hlt
xor
xor
or
daa
shll
negl
popa
icebp
insb
lcall
mov
aas
cmp
add
je
cmp
inc
repz
rcll
lret
xchg
scas
xchg
jno
cmp
jae
sbb
and
clc
out
cmp
in
jle
jp
pop
movsl
stc
sub
lea
in
cwtl
dec
mov
fwait
mov
outsl
sar
out
dec
out
sbb
adc
push
fidivs
sub
or
jge
cld
jbe
stc
pop
adc
lods
call
ds
xchg
decl
into
movsb
loop
int
add
sub
hlt
and
mov
subl
inc
aam
repz
or
dec
repz
ja
cmp
rcll
out
mov
outsl
mov
enter
lret
movsb
lahf
xor
enter
leave
pop
sbb
pop
or
sub
jae
insb
mov
in
fnsetpm(287
rcrl
pop
neg
mov
push
dec
cmc
rcll
mov
mov
imul
jae
or
repz
mov
push
test
js
jb
xlat
mov
push
inc
movsl
xchg
in
popf
adc
sar
and
mov
jl
ja
pop
fidivrl
aad
in
xchg
mov
pop
loopne
jp
lret
pop
push
and
addl
add
leave
test
push
je
jo
mov
into
clc
sub
ja
and
inc
mov
inc
push
xchg
dec
jns
cld
lcall
popa
add
mov
mov
cmp
movsb
jae
jle
fadd
and
pop
add
stos
jge
or
xor
inc
xchg
dec
rcrb
jne
mov
shr
stc
sbb
or
ds
push
rcrb
push
add
and
xchg
xchg
push
sbb
sti
or
jl
jnp
cmpsb
dec
jl
vpand
jl
imul
xor
jle
repnz
les
enter
xor
xchg
loopne
lods
adc
shrl
jle
stc
out
aam
jg
jbe
nop
stos
sbb
xchg
sbb
bound
add
aam
sbb
mov
lds
and
mov
scas
fimull
and
jmp
out
push
sbb
outsl
sub
adc
cmpsb
mov
mov
mov
loopne
fwait
inc
pop
mov
add
mov
jg
in
jle
imul
mov
pop
mov
std
cmp
inc
repnz
lea
push
and
mov
xchg
mov
xor
imul
pop
xchg
call
outsb
adc
and
popa
imul
je
stc
and
mov
adc
test
inc
add
xchg
ss
in
paddsw
cmp
jp
popa
sbb
scas
sbb
int3
outsb
or
insb
lods
aas
aas
cmp
xor
cmp
stos
movsb
jno
sti
and
sbbl
jae
movsl
sub
stos
sbb
ffree
mov
outsl
in
mov
sbb
das
lahf
jne
sbb
mov
pop
adc
mov
sti
popa
les
mov
mov
les
xchg
rcl
daa
adcl
jns
xchg
repnz
xor
sub
daa
mov
inc
shll
in
pop
jo
xor
adc
cwtl
mov
push
pop
out
fisttps
push
aad
and
mov
mov
add
adc
ja
loopne
and
mov
imul
push
dec
fwait
insl
je
or
stos
fcomp
loopne
and
dec
sar
leave
mov
pop
shrl
int
loop
xor
repnz
or
out
pop
or
adc
scas
das
cmc
hlt
rol
out
cmp
push
popf
mov
icebp
dec
jnp
pop
out
adc
jns
dec
imul
out
sbb
lea
adc
fs
sbb
lar
sbb
sbb
mov
or
sub
negl
aaa
sbb
pop
cmp
lahf
fcmovb
data16
test
imul
xor
out
mov
in
ret
inc
jp
sbbl
sub
arpl
pop
cwtl
mov
mov
mov
or
insb
push
jno
sbb
jp
lret
and
adc
mov
push
std
jmp
hlt
in
adc
pop
push
stc
push
clc
mov
iret
jns
sub
incl
add
and
movsl
test
or
mov
cli
jle
cmp
adc
mov
decl
ret
fnsave
shll
sbb
ljmp
push
daa
cmp
insl
push
mov
sbb
test
inc
lret
ss
inc
mov
imul
iret
aas
pop
push
outsb
ret
sbb
mov
xchg
out
aad
dec
aad
xor
pop
lods
movsb
int
in
repz
mov
pop
dec
adc
jne
repz
sub
jns
pop
and
jno
xor
out
cmpsl
jl
add
enter
add
dec
mov
push
jno
and
stos
fwait
jnp
rep
cs
lahf
sbb
sbb
shrb
sbb
xchg
das
mov
jmp
aas
out
call
dec
jg
arpl
push
mov
push
adc
imul
and
cmpl
jl
mov
xchg
out
adc
pushf
dec
and
and
outsb
lcall
mov
cli
pusha
push
test
stos
ret
jmp
push
loope
imul
and
jg
pop
mov
jmp
or
test
xor
push
mov
scas
in
sbb
xchg
sbb
lret
mov
add
cmp
jb
loop
xor
add
xchg
insb
in
test
shl
mov
loope
jmp
leavew
in
in
adc
dec
pop
inc
call
add
pop
ljmp
push
fbstp
jns
clc
div
xchg
add
ja
repnz
mov
outsl
mov
js
movsb
int3
popf
decl
not
jg
mov
stos
dec
sbb
mov
pop
and
fsubl
adc
pop
subl
icebp
inc
sub
adc
bound
mov
iret
repnz
xor
jecxz
outsl
jbe
data16
ja
enter
push
jl
dec
rcrl
push
mov
fs
rclb
xchg
mov
push
jmp
ret
ret
cmp
mov
xor
adc
arpl
sub
push
mov
ret
xchg
pop
xor
stos
push
jns
pop
out
push
cmp
cmp
add
push
xchg
cwtl
sti
stos
in
cltd
sbb
je
lock
cltd
ficoml
cmp
xor
int3
mov
in
push
jne
cmpsl
add
jg,pn
mov
std
lods
fucomip
sbb
loopne
stos
push
inc
insl
mov
xchg
sti
repnz
stc
push
fisubrl
or
enter
std
shr
xchg
adc
push
idivb
pushf
int3
test
mov
mov
cmpsb
or
pop
sub
lcall
repz
pop
in
insl
jp
fstps
or
sbb
fcoms
mov
cli
pusha
mov
mov
scas
fisubs
mov
arpl
gs
fists
dec
outsl
cmpb
push
fwait
gs
repnz
out
dec
int3
lock
lods
inc
cmc
push
add
sub
mov
shr
cli
rol
das
sub
aad
pushf
lret
lods
lds
out
jbe
fdivrs
jo
adc
and
cmp
mov
hlt
outsl
lret
or
xchg
repz
xor
shlb
enter
cwtl
add
sub
sub
push
in
jmp
xor
xchg
adc
xchg
adc
clc
add
mov
push
push
push
mov
cmpb
incl
mov
adc
lcall
mov
push
je
jle
arpl
inc
lret
jg
aam
movsl
cmc
sub
mov
std
jne
mov
jge
dec
stc
inc
cmp
xchg
pop
or
cmpb
sbb
stos
and
dec
cmp
fsubs
ficoms
mov
push
nop
ss
jmp
inc
movsl
popa
in
adc
insb
int3
iret
cmp
pop
dec
repnz
push
or
into
adc
mov
and
in
push
pop
inc
fs
neg
lret
jae
imul
pop
pop
gs
lcall
mov
fadd
std
adc
cld
xchg
in
insb
outsb
out
bound
sbb
pop
out
sub
jae
or
sub
stc
sbb
pop
cmp
pop
scas
loop
lcall
iret
inc
sub
in
ret
add
pop
pop
adc
ljmp
lods
pusha
mov
popf
push
fwait
xchg
and
mov
pop
dec
scas
mov
lock
jl
test
mov
shl
out
push
jbe
xor
push
inc
ss
loope
or
pop
cmp
mov
mov
inc
xor
mov
sbb
mov
lret
jg
inc
into
push
idiv
sub
aad
push
lahf
cwtl
pop
out
ja
mov
dec
dec
mov
loopne
fwait
mov
shrl
fwait
pop
add
cwtl
int3
test
xchg
jp
decl
xor
sub
into
mov
jnp
frstor
mov
push
dec
pop
and
pop
or
je
mov
subb
mov
adc
daa
add
outsb
jne
jo
test
outsl
lcall
scas
add
xor
addr16
in
or
lret
push
lea
xchg
pop
icebp
mov
mov
inc
jo
mov
arpl
shl
jmp
cmp
sbb
cmpsb
fucomi
cwtl
mov
and
scas
xchg
aaa
loop
mov
mov
lods
and
and
ds
jae
ljmp
lea
mov
inc
test
and
test
xlat
push
adc
pusha
pop
popa
sti
es
xor
mull
pop
mov
push
loopne
test
xor
add
sbb
cmp
sbb
out
sub
mov
push
dec
shlb
dec
cmp
xchg
mov
xchg
adc
mov
cli
sub
cmp
mov
xchg
or
inc
sub
lcall
vldmxcsr
lock
sahf
std
xchg
nop
and
ret
pop
sub
adcb
xchg
dec
cmp
xlat
rcrb
add
ss
sbbb
insb
sti
push
xchg
mov
fisubrl
mov
dec
test
in
add
icebp
dec
jns
pop
or
push
int3
movsl
cs
pusha
mov
jge
out
push
fisubrl
push
test
fadds
dec
sar
cmp
inc
sbb
jl
das
movsl
in
dec
adc
xor
stos
jo
fcoml
scas
push
arpl
jae
std
ja
mov
push
mov
jne
push
pop
stc
fadd
incb
pop
test
push
test
and
dec
loop
aas
mov
sbbl
push
jl
inc
call
push
mov
testl
popa
outsl
sub
out
sub
dec
sahf
int3
xchg
mov
and
inc
sbb
mov
pop
aam
fwait
jbe
xchg
add
popa
adc
sbb
popa
jg
jns
add
add
hlt
out
mov
fnstenv
outsb
or
pop
push
jge
and
adc
dec
xchg
jmp
imul
sbb
test
add
fistpl
push
stos
out
ss
mov
test
fcomps
lea
mov
inc
sub
mov
jg
movsl
fadd
in
mov
or
mov
std
push
loop
mov
and
or
add
dec
mul
je
js
jb
add
or
cmpsb
mov
sub
sub
pop
pop
imul
icebp
aad
test
rolb
lret
ds
pop
add
mov
mov
jge
nop
lds
mov
push
lcall
das
xchg
or
adc
lea
sbb
into
in
dec
or
dec
jl
mov
stos
push
sub
and
into
sub
je
test
pop
mov
push
lods
repz
in
and
mov
cmp
sub
fucom
dec
not
dec
add
and
orb
loop
lret
sub
test
cmp
sbb
push
jmp
sub
je
shl
add
lds
xor
jnp
in
fnstenv
rolb
aad
ljmp
enter
nop
cmp
adc
fstp
ret
mov
jbe
lea
dec
inc
push
sub
rcrl
or
loope
inc
pop
js
sarb
scas
cmp
js
loopne
ror
mov
push
int3
mov
aad
sub
out
movsb
ret
mov
mov
lock
lcall
pop
mov
das
sbb
mov
ja
jge
movsl
shr
jl
int
or
outsb
push
pusha
cmpsb
inc
dec
clc
aad
enter
jmp
sub
dec
sbb
push
mov
rcr
sub
lahf
cld
push
mov
popf
rcrl
pushf
imul
fsts
sbb
lret
cld
aaa
push
sti
pusha
mov
xchg
sbb
xchg
ror
out
sarb
push
scas
int
inc
xor
mov
pop
popf
push
add
adc
sub
mov
inc
fwait
lahf
scas
dec
sub
cmpb
call
sbb
jecxz
adc
sbb
mov
push
mov
adc
xor
xor
mov
add
cmp
frstor
sub
mov
or
pop
scas
xchg
or
lcall
es
nop
mov
mov
aas
ret
in
dec
inc
shll
test
shlb
adc
rorb
popf
addr16
xchg
stos
stc
aad
add
ss
inc
rorb
mov
or
xchg
pop
mov
inc
notl
mov
push
leave
add
inc
jbe
cmp
sub
push
mov
pushf
mov
xchg
ds
arpl
cli
aam
adc
mov
and
shrb
inc
add
sti
ja
xor
push
inc
cmpsl
jnp
push
push
pop
mov
jp
dec
mov
jg
out
cmp
mov
cltd
mov
cmpsb
out
dec
push
xor
dec
cmpsb
loop
xor
scas
lock
push
xchg
add
repnz
gs
add
push
cmp
mov
xlat
cltd
imul
pusha
cli
data16
mov
xchg
xlat
pop
cmp
mov
mov
add
mov
fisttpl
adc
rcl
ret
xchg
loop
lods
dec
push
jmp
jg
insl
daa
sub
pop
sub
gs
movntps
mov
clc
dec
lret
ljmp
cmp
push
in
das
fsts
inc
data16
push
push
shll
push
rclb
int3
insl
push
add
or
mov
mov
aas
aad
xor
push
push
cwtl
cmpsl
or
lcall
lods
cmp
pop
nop
arpl
pop
dec
pop
pop
cli
bswap
sub
mov
icebp
aad
hlt
jle
pop
test
dec
add
jnp
arpl
xchg
ret
rorl
iret
sub
outsl
sub
shl
dec
aas
ljmp
mul
outsb
leave
imul
ja
shlb
data16
adc
fsubrs
pusha
and
movsl
mov
sbb
sub
cmpsb
int
ljmp
ljmp
pushf
mov
add
jmp
xchg
cli
pop
fisttpll
clc
xchg
int
test
popf
hlt
iret
dec
bound
mov
xor
sbb
in
popa
sbb
divb
xchg
add
mov
cmpsb
sbb
pop
mov
out
mov
test
hlt
mov
mov
repz
jns
ret
nop
shll
mov
hlt
rcl
xor
outsl
cwtl
in
std
jg
and
adcl
mov
and
mov
pop
push
and
push
cmc
xchg
add
cwtl
inc
fsubs
mov
lods
loopne
fs
inc
jbe
and
jl
xor
jno
jl
das
cmp
xor
aad
popa
adc
push
jno
and
in
icebp
xchg
mov
daa
xor
lret
push
lods
push
divb
and
or
xchg
push
test
pop
mov
aad
push
loop
xor
jns
push
je
lcall
stc
cld
mov
fsubp
rcll
outsb
ret
pop
js
in
mov
andl
xchg
stc
xor
pop
push
xchg
inc
mov
push
adc
xor
adc
add
xor
mov
mov
popf
lds
push
les
xchg
pop
ljmp
cmpsb
shrl
xorb
cltd
jae,pt
pushf
mov
jbe
sub
bound
cmpsl
lods
mov
out
test
xor
sti
adc
es
push
daa
cmp
jecxz
sub
push
dec
jno
imul
sbb
dec
xor
jno
push
mov
mov
loop
push
into
jl
int
add
arpl
push
jp
sbb
ja
xchg
sbb
fidivl
popf
add
xor
sbb
xchg
pop
fs
push
push
daa
imul
xor
call
pop
push
cmp
xchg
or
cltd
je
scas
cwtl
mov
movb
ret
adc
mov
fadds
mov
pop
nop
mov
xor
imulb
mov
xor
fcoms
mov
ljmp
movsl
cmc
xor
cmpsl
mov
ret
cmpsl
xlat
std
push
jb
mov
out
mov
test
stos
out
add
inc
pop
push
push
mov
shl
sbb
sub
loope
sub
mov
popf
call
dec
push
jge
rclb
aas
pop
roll
mov
sub
enter
mov
and
sub
sahf
jg
mov
into
xchg
loope
arpl
mov
rcrl
xchg
cmp
sti
mov
cmp
ljmp
inc
add
sarb
adc
lods
mov
div
pop
rcr
dec
push
cmp
aaa
cmpsb
andl
sahf
clc
data16
xchg
cmp
push
mov
inc
xor
jns
inc
sub
movsl
sarl
cmpl
dec
mov
and
jno
loop
test
loopne
in
enter
adc
xchg
inc
xor
jg
dec
insb
mov
mov
ss
sahf
push
add
aam
xor
mov
cmc
lods
mov
stc
push
cs
das
pop
cmp
jne
popf
adc
inc
idivb
jne
call
call
faddl
cmp
fnstenv
jmp
in
and
lret
addl
inc
pusha
imul
xchg
push
dec
out
xchg
mov
jecxz
data16
sbb
adc
sbb
cli
test
cmovo
inc
inc
sahf
fs
ret
aad
cld
pushw
popf
mov
stos
cltd
mov
gs
dec
out
loope
arpl
inc
mov
xchg
std
mov
enter
sbb
mov
das
xlat
imul
lods
xor
repz
pop
mov
mov
jo
mov
mov
dec
test
jnp
inc
lcall
les
xor
sarb
sbb
lret
fsts
loop
mov
aad
movsb
jae
mov
inc
orb
xchg
movsb
lods
sahf
push
mov
js
call
dec
dec
xchg
scas
mov
test
fisubrs
addr16
rcrb
sub
sbb
jne
pusha
inc
divl
cmpsl
stc
bound
insb
pop
pushf
sbb
shlb
sbb
ficomps
mov
jl
push
outsb
adc
pop
pop
adc
test
mov
stos
mov
add
adc
js
ljmp
cmpsb
imul
arpl
loop
fmul
and
inc
ret
jg
push
cmc
push
jl
push
add
aam
fcompl
dec
dec
fstps
xchg
mov
xor
jge
xor
mov
cmpsl
mov
arpl
mov
into
inc
repnz
fidivs
jle
test
lret
lahf
pop
mov
out
mov
adc
xlat
xlat
sbb
arpl
cwtl
dec
call
rcr
push
das
mov
xchg
jae
xchg
and
mov
cli
mov
aaa
xchg
lahf
pop
push
and
dec
mov
aam
inc
jecxz
pop
inc
cs
idivb
cwtl
addr16
cli
cmpl
sbb
jle
cld
sub
adc
cmp
dec
mov
fwait
mov
sbb
pushf
mov
push
sti
dec
push
in
cltd
xor
into
repz
ds
xor
outsl
push
push
sub
insl
push
stos
lods
adcl
in
imul
push
mov
es
outsb
pop
in
and
xor
lds
ja
mov
push
pop
cmp
and
fsubl
mov
inc
pop
fisubrl
fsubs
mov
fcomps
popf
int3
or
dec
ss
pop
dec
dec
out
repnz
fisttps
lods
push
push
push
fwait
xor
xor
push
mov
popf
adc
inc
mov
into
ss
cmc
xchg
or
mov
xor
sbb
xchg
in
ds
cmc
fld
ret
xlat
pop
repz
push
jecxz
adc
ja
mov
push
mov
cli
and
and
push
cwtl
sub
jge
stc
mov
int
notl
icebp
pop
rcr
jb
js
adc
push
in
sti
dec
sub
js
scas
sbb
insl
outsl
sbb
pop
jp
xor
add
mov
stos
stos
inc
test
int
std
pop
or
cmp
jmp
int
cmp
rclb
mov
inc
ret
popa
pushf
and
sahf
stos
loope
xor
mov
les
idivb
dec
mov
xchg
scas
and
repz
xchg
xor
mov
push
push
push
fs
shll
sub
pop
dec
pop
cmp
or
adc
subl
mov
sub
or
icebp
mov
dec
movsl
sub
fbld
ss
dec
mov
aam
xchg
push
mov
cmp
out
sub
mov
iret
out
addr16
lods
ljmp
clc
add
inc
xor
and
jecxz
iret
inc
imul
jb
hlt
jne,pt
mov
or
shr
mov
icebp
add
clc
imul
dec
lret
out
mov
mov
inc
int
inc
inc
jno
xchg
mov
xchg
lods
cld
popa
insl
bound
mov
jge
shll
test
js
mov
cltd
mov
int
or
jo
adc
push
mov
hlt
cld
incb
inc
sahf
das
xorb
xor
dec
or
xor
aad
or
pushf
insb
lds
cmp
dec
fwait
xor
int
adc
mov
loope
pop
mov
jo
pop
movsb
mov
xor
aam
fidivrl
insb
xchg
jbe
js
adc
push
ret
scas
xchg
and
pop
xor
notb
push
push
adc
dec
jge
cmp
mov
je
cmp
cmp
fsubrl
jle
dec
pop
push
loopne
mov
mov
fsubrs
mov
hlt
jg
mov
clc
sub
int3
mov
ljmp
std
inc
loope
aas
imul
out
push
repz
jno
daa
lods
in
or
pop
inc
addr16
scas
das
or
lds
and
mov
inc
mov
add
mov
testb
inc
sub
lds
es
push
gs
mov
cmpsl
add
pop
dec
pop
psubb
or
pop
repnz
outsl
xchg
call
popf
aam
pop
cmp
insb
mov
jo
inc
cmp
xchg
lea
cmpb
aaa
dec
loop
jg
mov
add
cli
mov
dec
loope
call
xor
xchg
mov
pop
jno
xor
jge
cwtl
icebp
in
mov
xchg
sub
cmp
push
int3
push
dec
or
insl
testl
js
ja
mov
jnp
rorl
xor
dec
or
add
jnp
repnz
lret
iret
fstps
icebp
cs
mov
and
inc
negl
jle
add
divb
pop
jno
cmp
insb
nop
add
shrl
pop
es
dec
addr16
lea
adc
add
cmp
lret
cltd
cmp
nop
pop
xor
jecxz
mulb
out
add
ret
pushf
push
mov
push
cmp
pushf
mov
ret
mov
and
cmp
sub
ret
dec
insl
lods
dec
int
cltd
nop
xorl
push
aaa
xchg
sub
fadds
or
loope
mov
neg
push
xlat
push
mov
orl
add
mov
sbb
mov
arpl
fs
imul
and
dec
jge
or
aad
sbb
add
gs
in
repz
and
push
repz
add
test
sub
cmp
je
imul
in
jle
push
ja
imul
or
xchg
and
cmpsl
jo
lods
pop
pushf
push
xor
movsl
sub
ljmp
cli
pop
testb
movsl
inc
adc
push
mov
orl
enter
pushf
ret
into
jl
andl
and
pusha
test
inc
xor
aam
jge
xor
das
adc
jmp
call
and
push
in
ljmp
rcll
push
movsl
int
cmp
outsl
mov
jg
jne
insb
pop
sub
loopne
lret
inc
jo
jb
out
xor
pop
pop
inc
ret
out
mov
pop
fcomp
out
jp
fidivs
lock
mov
cli
pop
mov
test
out
mov
scas
into
sbb
out
mov
add
and
xchg
or
push
dec
rcl
lret
push
and
das
push
xor
enter
jmp
or
rcl
xchg
inc
cmpsl
mov
and
dec
dec
icebp
pop
or
sub
add
sub
fadd
out
in
daa
add
div
push
inc
ds
in
push
push
pop
lahf
sub
mov
scas
push
ss
mov
movsb
and
pop
jo
shl
mov
clc
insb
mov
cli
xor
iret
pop
cmc
xchg
fdivl
mov
mov
movsb
jp
cs
jge
out
mov
adc
cmpsb
shr
adc
mov
pop
add
xchg
repnz
jmp
cli
into
cmpl
adc
aaa
pop
mov
adc
sub
push
and
or
sar
stos
out
addr16
adc
fwait
sti
das
pop
dec
push
arpl
mov
mov
mov
fwait
pop
mov
jecxz
pop
and
aam
jecxz
and
fs
xor
lahf
fsubl
push
roll
into
xor
dec
fwait
addr16
outsl
inc
sub
dec
popf
jmp
mov
or
cmp
add
push
test
addr16
mov
jbe
ficoml
ja
mov
sub
or
xchg
test
push
or
xor
mov
add
das
movsl
scas
and
push
push
enter
xchg
inc
shrl
imul
jo
lock
push
pop
out
lods
out
jb
sub
out
loope
pusha
inc
fidivs
movsb
out
mov
xchg
sub
out
push
scas
lods
mov
test
and
xorb
sarl
dec
and
or
or
flds
mov
rcrl
cmc
mov
lcall
xchg
int
xchg
jbe
push
lret
pop
fdivp
xchg
push
push
mov
xchg
ret
and
push
jno
aaa
pop
push
iret
pop
testb
leave
and
add
imul
sahf
mov
scas
ds
je
icebp
and
sbb
cmpsb
push
cld
cltd
sub
dec
rorb
inc
mov
sub
lret
pusha
cs
mov
xlat
xchg
cmp
les
rcrl
mov
iret
test
mov
addl
loopne
fwait
aam
lds
jns
ss
cmp
sub
mov
inc
push
in
cld
sub
incl
aad
rcl
cs
das
int
outsl
jmp
fsub
repz
cmp
insl
push
sti
leave
scas
dec
dec
ljmp
iret
pop
fcoml
mov
jne
arpl
dec
aad
insb
pop
xor
insb
and
in
sarb
push
test
sub
add
repnz
lret
popa
jno
popa
add
xor
or
shld
outsl
pop
and
clc
mov
mov
dec
adc
vcvtdq2pd
mov
inc
mov
popa
inc
addr16
mov
push
push
pop
in
repz
mov
data16
push
cmp
iret
sub
js
arpl
sbb
pop
cwtl
cmp
dec
lret
scas
push
xchg
fwait
iret
cmpsl
icebp
push
inc
lods
loop
or
repnz
mov
mov
ljmp
stos
cmpsb
cmp
xchg
xchg
and
pusha
es
pop
je
push
mov
das
dec
incb
test
sub
and
test
adc
cmp
int3
cld
int3
jg
mov
ljmp
out
mov
stos
mov
rcll
arpl
push
mov
xor
shlb
jb
andb
push
adc
movsl
cmpl
or
gs
enter
jae
rcrl
mov
fnstenv
in
pop
pop
les
out
jg
lcall
sub
in
push
clc
jbe
and
adc
mov
add
lahf
out
mov
sub
dec
aam
in
adc
push
adc
xorb
stos
fsubrs
mov
inc
psrlq
sbb
sub
popa
popf
mov
push
scas
cmp
sbb
fdivrl
mov
add
and
je
aam
scas
shll
shrl
mov
fnstsw
repnz
bound
push
cli
icebp
cs
or
sbb
inc
test
stos
xor
lahf
outsl
mov
stos
push
outsb
loope
jg
jge
clc
and
fs
je
inc
cmc
sbb
dec
mov
out
xorl
idivb
dec
pop
push
loop
insb
cmp
stos
lock
cmp
repz
dec
ja
cmp
je
imul
push
fmulp
dec
inc
dec
dec
inc
jbe
mov
lods
ss
or
pop
rclb
cwtl
xor
and
push
out
jae
mov
or
aam
dec
mov
pop
xchg
inc
subb
clc
cmp
fiadds
sbb
enter
pop
jecxz
orb
es
mov
lock
stos
in
lret
xchg
add
es
jns
dec
mov
shll
push
mov
pop
fstl
cmp
fdivrl
div
push
or
and
hlt
enter
cmp
aas
sbb
scas
sub
jmp
repz
jo
mov
les
xchg
push
scas
pop
out
cmpsb
dec
xor
mov
mov
fs
pop
das
cmp
ret
push
jb
test
jecxz
jecxz
xchg
fs
fcomp
imul
push
outsl
popa
in
pop
xlat
jbe
push
leave
push
rcll
sbb
push
mov
push
bound
es
cwtl
stos
sbb
dec
mov
cmp
xchg
xchg
lock
or
xchg
sub
rorb
add
push
pop
ficomps
inc
adcb
jl
mov
lret
fs
mov
js
loopne
push
jno
mov
pop
mov
push
cmp
shr
xchg
xchg
jl
and
fwait
jmp
cmp
ss
sahf
pop
mov
fsubl
in
hlt
push
fldenv
mov
mov
aas
js
push
xor
mov
cmp
and
jne
xchg
jo
insb
mov
dec
in
dec
sbb
cmp
pop
popf
dec
je
movsb
jae,pn
sub
movsl
bnd
xor
aam
and
push
cltd
xchg
dec
push
nop
and
aam
pop
jns
cs
das
jmp
dec
inc
push
or
idivl
and
pop
mov
mov
roll
xchg
cmp
jbe
cld
pushf
mov
xor
jg
lods
lahf
insb
fnstenv
rcll
bound
std
popf
mul
xlat
fbld
mov
jl
lret
sub
pushf
bound
popf
sbbb
xchg
rorb
add
cmp
sar
xchg
mov
or
fisubs
or
scas
xchg
jbe
add
xor
jmp
mov
sub
ss
pop
je
push
dec
cs
xor
push
jg
cmc
pop
sub
call
pop
arpl
mov
and
inc
xchg
lcall
pop
leave
pop
mov
jmp
outsb
and
cmpsb
adc
loopne
fwait
lock
mov
mov
sub
push
xchg
sub
out
outsl
lods
and
lret
rol
ret
push
pop
push
xlat
imul
xor
sub
xor
jecxz
pop
cmp
in
cmp
push
ljmp
xor
test
xor
pusha
jbe
mov
sub
sbb
out
xor
imul
lahf
mov
push
jb
lock
pop
jae
testb
dec
pop
out
mov
mov
ret
sub
test
ljmp
addb
mov
cli
add
mov
inc
xchg
iret
jge
push
sti
sbb
mov
mov
jl
aad
outsb
and
mov
insl
loope
scas
or
mov
shrl
dec
out
mov
xchg
adc
stos
and
inc
hlt
add
sbb
rcrb
adc
ret
or
mov
jge
sub
sti
bound
lret
in
jmp
pop
mov
mov
pop
lds
adc
xor
ljmp
bound
mov
push
xchg
aad
and
push
pop
xor
push
popa
in
cmp
mov
dec
jecxz
pop
mov
add
adc
imul
inc
add
sbbb
lret
sub
mov
call
mov
in
fisubrs
clc
test
dec
dec
cld
rclb
es
mov
iret
mov
loopne
pop
rcr
enter
inc
pop
xor
add
jbe
xor
mov
mov
lahf
nop
pop
lret
mov
pop
aad
xchg
mov
sbb
jno
pop
imul
imul
outsl
int3
sbb
and
jne
sti
pop
hlt
icebp
bound
jnp
xchg
mov
lods
pop
jae
repnz
inc
lock
mov
jns
mov
in
add
in
call
cmpsb
xorl
jnp
pop
test
and
fists
mov
mov
xchg
push
fsincos
push
jmp
dec
repz
shll
jmp
adc
xor
out
fcmovnb
std
mov
outsb
dec
or
and
mov
outsb
ret
pusha
mov
add
sarb
rcll
je
test
dec
push
shr
mov
cwtl
in
inc
and
and
inc
dec
lock
je
and
je
mov
xor
xchg
and
mov
fs
test
push
or
leave
ret
dec
cltd
pop
enter
inc
popa
add
fs
int
rorb
cmpsb
mov
mov
test
mov
push
in
insb
mov
mov
dec
or
mov
mov
mov
mov
and
pop
lods
idiv
movsl
scas
jbe
xchg
call
cld
sub
pop
rcl
addr16
sahf
std
mov
aas
cltd
dec
movsb
sub
hlt
repz
jmp
lock
add
cld
cmp
dec
mov
movsb
out
stos
cmpsb
into
add
in
dec
das
outsl
mov
inc
xor
cmp
push
mov
or
adcl
mov
dec
and
stos
dec
push
push
jmp
aas
cmpsl
mov
mov
jge
jns
faddp
push
mov
std
pushl
cltd
sub
sub
adcl
inc
es
jmp
test
sub
mov
repnz
dec
pop
repz
sub
jnp
mov
inc
out
xor
xchg
dec
inc
jnp
aas
xchg
mov
sub
faddl
dec
mov
and
push
loopne
push
movsb
adc
out
popf
leave
sbb
inc
jmp
sbb
adc
cmp
movsl
test
and
mov
mov
and
mov
sub
cmp
fstl
lods
stos
jecxz
jbe
push
pop
mov
lahf
push
jne
and
jp
inc
add
repz
testl
shl
cmc
pushf
xlat
xchg
cmp
cld
dec
jae
and
lock
pop
or
cmpl
jno
cmp
pop
xchg
jp
jmp
inc
arpl
sbb
inc
addl
stos
repz
push
stos
mov
mov
xlat
push
cmp
xchg
out
ret
aaa
popf
rolb
cmp
add
aam
jp
shlb
lcall
cmp
mov
xchg
pop
xchg
pop
lahf
adc
notb
frstor
aam
sti
outsb
or
cmp
jo
xchg
xchg
es
imul
hlt
mov
lea
std
dec
mov
and
shll
mov
aam
mov
icebp
xor
sub
xchg
jns
adc
mull
cmc
dec
ds
aas
adc
jb
push
fdivrs
fcmovbe
inc
je
add
mov
xchg
out
testb
xchg
pop
pop
test
push
or
push
push
cltd
adc
pop
in
sti
add
add
mov
popf
fwait
push
loopne
jbe
stc
sbb
fcompl
jb
lret
sbb
mov
js
in
push
rcl
rcrb
cmp
xor
pop
stos
mov
mov
pop
lcall
outsl
dec
mov
in
push
pop
mov
push
cwtl
out
std
lds
cmp
outsb
stos
lods
or
test
stos
and
adc
fiadds
ret
jp
aas
scas
shrl
and
sbb
and
rcrb
mov
ds
arpl
push
aam
jb
pushf
sti
mov
sub
xchg
jecxz
push
mov
inc
aam
cmp
popf
xchg
lods
sub
dec
out
pushf
stos
out
out
push
mov
je
repnz
jle
ret
push
in
mov
sub
xor
fidivs
jb
xchg
fs
out
pop
or
inc
jmp
scas
sub
int3
gs
test
push
test
sbb
lret
ret
ss
sub
sarl
ljmp
inc
lods
mov
ja
cmpsl
pop
pop
call
add
xchg
push
imul
xchg
sarb
adc
aaa
lret
sarl
jbe
mov
dec
add
ja,pt
lods
pop
add
imul
and
push
dec
cld
add
inc
jbe
sub
outsb
sbb
je
mov
xor
cmpb
push
sub
jecxz
std
and
mov
fimuls
fwait
jne
mov
loopne
fcmovnbe
out
fldenv
test
or
jp
inc
test
adc
into
and
pop
dec
ljmp
pusha
in
inc
ret
or
in
or
iret
push
nop
xor
inc
pop
fs
push
daa
xchg
mov
push
adc
adc
mov
leave
sbb
jecxz
mov
enter
and
mov
mov
scas
mov
mov
inc
jo
push
ret
pop
jp
test
int
adc
in
lds
mov
or
loopne
lcall
or
mov
test
adc
hlt
push
test
mov
adc
sub
mov
dec
es
sub
icebp
movsb
ljmp
clc
dec
mov
ja
mov
test
lods
addl
cmp
mov
mov
pop
lret
gs
lods
mov
sub
int
testl
jne
in
testb
fdivrs
sub
jns
and
jnp
or
aas
dec
sub
mov
mov
lock
lcall
inc
cmp
outsl
mov
or
lock
outsb
in
insb
pop
jge
in
add
hlt
sbbl
adc
xchg
mov
cmp
xor
pop
stos
enter
add
cs
inc
dec
pop
cmpsl
js
in
movsb
outsb
icebp
xor
orb
fs
and
int3
mov
sub
arpl
add
ficomps
or
mov
lock
dec
push
push
mov
ficoml
test
and
test
into
xchg
lret
aam
jae
sti
js
out
sub
int
jbe
dec
cs
test
hlt
std
std
ss
and
mov
mov
ret
xor
sbb
fdivrs
and
or
enter
les
sahf
cld
cmp
adc
pop
jb
sbb
xor
stos
mov
mov
inc
pop
inc
dec
cmp
push
xchg
add
mov
push
cmp
cwtl
mov
movsb
add
inc
xor
cwtl
arpl
xor
mov
aaa
or
ret
rcrb
outsl
or
sub
mov
mov
leave
or
mov
sbb
popf
fdivr
out
xor
ret
pop
xor
outsb
dec
xchg
jl
fwait
aaa
inc
ficoml
into
pop
daa
dec
push
xchg
adc
lock
loop
xor
aaa
je
and
add
add
test
mov
sbb
cmpsl
mov
test
popa
mov
push
stos
mov
or
jno
fldenv
stos
sbb
sbb
dec
mov
mov
inc
fwait
push
mov
mov
inc
adc
sub
int3
push
mov
les
sbb
jmp
arpl
cmpsl
and
fisubl
cld
jns
insl
xchg
jp
and
leave
pop
mov
push
sbb
push
fs
outsl
test
and
stc
cmp
jmp
mov
inc
ficompl
xor
arpl
mov
push
cmc
mov
ds
inc
adcb
push
xorl
aas
hlt
int3
fdivrp
repz
push
call
and
out
in
pop
pop
fisttps
stc
sub
ja
or
pop
sub
sbb
jns
sbb
in
inc
out
xchg
mov
gs
mov
leave
movsb
pop
fcomi
mov
andb
and
inc
and
lods
lahf
or
inc
ret
dec
stos
xchg
testl
bound
xchg
popf
stc
adc
imul
std
loopne
ret
push
sub
jno
jnp
stos
cmp
das
add
jge
sbb
adc
xor
sub
jmp
jae
push
lret
lahf
mov
jmp
xchg
arpl
xor
xchg
jno
gs
cmp
or
ds
faddp
push
xchg
adc
fstl
jne
gs
lret
dec
pop
in
sub
cltd
mov
xchg
leave
adc
std
fiadds
in
repz
xlat
sbbb
mov
jmp
jecxz
push
std
insl
xchg
fucom
or
and
cmc
inc
in
dec
xchg
cmp
xchg
pop
call
repnz
dec
cli
jb
orl
std
pop
cwtl
lods
rolb
aam
ret
push
sarb
jecxz
shr
cmp
add
fnsave
test
jle
popf
cltd
mov
movsl
lock
pop
inc
jmp
cmp
sti
cmp
or
pop
into
scas
rcll
push
ds
dec
out
arpl
jnp
jp
push
sahf
leave
sub
test
pop
add
jl
sub
lods
jbe
mov
adcb
jmp
test
fmuls
mov
std
insl
or
notl
ret
sub
push
mov
lret
add
cmp
aaa
mov
lcall
es
and
fwait
mov
incl
fmul
or
sub
data16
shrb
push
xchg
repnz
insl
rcrb
in
push
movb
pop
pop
cmpl
scas
cli
aaa
in
adc
fadds
jecxz
ret
int3
sub
add
push
gs
in
sbb
lret
push
int3
les
dec
pop
cld
dec
inc
cmp
cmp
mov
js
push
and
push
mov
icebp
in
outsb
mov
aam
jp
cmpsb
xchg
cld
mov
dec
mov
xor
loop
dec
mov
in
mov
dec
xor
fwait
rorl
sarl
outsl
test
or
int3
aad
jns
in
lret
iret
and
cmpsl
xchg
lods
cs
aad
lret
cmp
jmp
push
lahf
xorb
cli
sbb
mov
mov
xchg
mov
faddl
mov
in
in
pop
cmc
and
js
push
add
sub
xchg
test
push
cmp
cmp
mov
popa
fsubl
mov
iret
and
mov
lods
jle
mov
aaa
sbb
movsl
xchg
sub
in
xor
or
push
orl
adc
ljmp
pop
jmp
jnp
jge
adc
mov
ret
lcall
mov
cmp
pop
fistl
lods
test
add
stos
in
mov
scas
dec
inc
pop
mov
call
cmp
mov
scas
stos
xchg
sbb
sub
mov
mov
add
cmp
add
sub
mov
mov
out
testl
std
jmp
sbb
pop
pmuludq
xchg
mov
mov
out
lahf
dec
xlat
dec
pop
lods
ret
data16
icebp
movsl
rcll
and
adc
inc
xchg
leave
mov
loop
mov
xor
cmc
add
js
pop
sbb
ror
dec
je
push
hlt
xchg
push
sti
std
data16
fwait
lds
sahf
rcrl
loopne
adc
in
into
cmp
pop
cld
movl
sub
ficoms
jmp
shlb
insb
mov
lods
or
inc
mov
or
sbb
ljmp
aaa
cmp
stc
call
dec
ljmp
mov
stos
iret
mov
stc
mov
dec
ljmp
add
jmp
ret
push
cwtl
adc
sbb
sub
pop
inc
in
outsl
dec
rcr
adc
jo
push
loopne
scas
and
adc
pusha
push
int3
inc
adc
push
data16
xchg
mov
sbb
lret
repnz
add
mov
mov
rcr
push
bound
popl
rolb
cs
call
lods
shl
movsb
cmc
pop
fsubl
sti
popf
or
sub
jbe
dec
dec
scas
jp
adc
ret
dec
rcrl
or
imull
cmp
and
cmp
ljmp
or
pop
test
pop
xor
cmpb
sti
or
xlat
hlt
lock
add
out
and
inc
ret
inc
popf
leave
popa
dec
lcall
cltd
int3
and
jo
push
leave
push
mov
arpl
aas
in
out
sbb
stos
cmp
nop
and
inc
adc
in
xlat
inc
push
hlt
sub
xchg
push
mov
adc
mov
mov
xchg
clc
jnp
cmp
fdivr
fcmovne
repz
fadds
stos
stos
mov
push
dec
mov
mov
xchg
inc
sbb
mov
mov
stc
inc
pop
xchg
pop
aam
fisubrl
jne
les
sub
or
cld
popf
jns
or
push
iret
xchg
lcall
ror
mov
jl
mov
jmp
mov
dec
jp
xchg
test
out
das
jmp
dec
repnz
and
stos
jae
pop
ficoml
push
mov
nop
cs
dec
imul
pop
and
scas
mov
mov
adc
mov
not
nop
test
jae
sarb
push
sub
lcall
icebp
jae
mov
push
sbb
into
inc
nop
cmpsl
cltd
jnp
es
sarl
pop
and
cld
mov
inc
dec
lcall
mov
lods
loopne
or
in
xchg
ret
jo
cmp
push
lods
sbb
loope
lcall
jae
clc
mov
push
call
sub
shll
xchg
mov
lcall
xchg
push
and
adc
cld
mov
fidivs
addr16
jb
pop
push
jnp
pushf
mov
data16
add
cmpl
and
in
cmp
sub
incb
mov
xor
mov
fidivs
addb
out
sbb
sbb
xchg
pop
xchg
scas
adc
fsubl
mov
subl
jnp
stos
sbbb
fbstp
mov
mov
cmp
addr16
test
xchg
fisubrl
sub
add
cmp
fwait
mov
jbe
inc
sbb
pop
icebp
xchg
ds
out
xor
insb
add
mov
insl
ror
mov
xchg
mov
add
pop
hlt
mov
cs
and
pushf
imul
push
lret
xchg
clc
push
inc
and
les
xor
shrb
sbb
aas
jo
push
sub
ja
xor
cmp
inc
je
arpl
ficompl
push
lahf
pop
aas
andb
jne
cmp
or
sbb
bound
inc
push
mov
jns
std
xor
pop
les
out
cltd
mov
xor
and
cwtl
pop
mov
push
xor
cs
sbb
bound
mov
and
clc
das
xchg
xor
fcmovnb
push
mov
add
sahf
or
inc
mov
xchg
test
jo
adc
jecxz
push
cmp
rcrl
stc
lret
fwait
arpl
mov
dec
popf
pop
popa
or
sbb
mov
std
push
pop
bound
adc
xchg
pushf
jns
aad
cmpsb
fs
xor
shlb
lcall
push
out
cmpsb
stos
sub
lret
movsb
or
pop
mov
pop
add
jne
cmp
cmp
jno
mov
pop
xchg
cmp
adcl
mov
jle
loopne
inc
cltd
jle
jnp
pushf
push
repnz
sarb
mov
dec
mov
bound
stos
in
testl
fmull
fwait
xchg
or
pop
mov
mov
lods
imul
jno
sbb
outsl
xchg
jnp
and
mov
fcomps
or
pop
xchg
or
ja
inc
sbb
push
jb
fadd
test
fwait
jl
into
fidivs
sub
je
xor
add
push
push
push
jecxz
sarb
push
dec
mov
cmp
push
push
mov
mov
pop
sub
pusha
push
pop
lret
mov
cmpsl
repnz
pop
add
adc
mov
outsb
adc
mov
popa
cmp
and
jecxz
sub
lcall
push
cmp
lock
jne
ss
nop
adc
lret
sbbb
aad
loop
in
incb
loop
outsb
fcmovu
dec
pusha
fstpt
hlt
fnstenv
mov
ds
cwtl
mov
mov
loope
xor
push
cs
sahf
gs
xchg
aad
orl
inc
mov
jg
outsb
cmp
orl
and
and
in
out
aaa
jl
sti
mov
jnp
imul
arpl
xlat
inc
inc
mov
sub
jno
out
jp
jns
outsl
adc
leave
adc
out
in
scas
mov
dec
in
in
fnstcw
loopne
mov
pop
jg
jb
movb
loopne
cmp
lahf
mov
mov
repz
aas
test
movsl
inc
add
jnp
iret
daa
dec
and
jge
cli
and
bound
aam
mov
addr16
cmp
dec
mov
hlt
or
xor
repnz
jbe
sbbb
mov
repz
pop
aaa
adc
sub
push
adc
pop
ret
cmpsl
mov
xlat
xor
add
mov
fsubr
pusha
jnp
cmp
xor
mov
sbb
scas
dec
jmp
push
call
fldcw
in
inc
cmp
and
icebp
xor
rorl
lods
cmp
pushf
jmp
xorb
inc
push
xor
stc
das
repz
inc
sbbl
push
hlt
into
aam
adc
or
lds
add
test
gs
pop
jbe
popf
sbb
aaa
std
jle
xchg
movsl
pop
shrl
xor
xchg
mov
enter
into
xchg
inc
inc
pop
sti
loopne
jmp
call
ss
insb
pop
push
adc
les
imul
mov
ret
loop
or
inc
jbe
call
out
mov
push
fs
mov
inc
fwait
mov
stc
adc
movsl
cmp
nop
mov
pop
and
jmp
push
je
frstor
mov
int
lods
test
add
xchg
lods
scas
dec
add
cmp
add
add
jg
xor
sub
gs
and
es
inc
xchg
or
pop
xor
sahf
js
call
mov
mov
sti
je
movsb
out
push
popl
xor
mov
fwait
outsl
lock
aad
pop
push
sarl
inc
out
xchg
mov
pop
arpl
sti
push
je
popf
or
add
test
cmp
xor
hlt
jmp
mov
fdivs
xchg
je
ss
mov
test
push
frstor
rcrb
out
lcall
int
adc
jo
push
nop
inc
push
inc
sbb
xchg
cmp
jo
adc
mov
inc
cmc
jne
or
pop
mov
mov
inc
cwtl
xchg
enter
andb
push
mov
sbb
jmp
lods
jo
xchg
sti
xchg
popl
cmp
or
aas
push
pop
add
cltd
dec
daa
pop
in
pop
or
dec
popf
sbb
loop
sub
fs
inc
daa
or
jno
mov
inc
sub
loopne
faddp
jle
lret
pushw
pop
push
dec
cli
lods
add
insb
cmp
call
outsl
mov
loope
dec
pop
movl
mov
jb
sbb
mov
mov
mov
pop
ret
dec
aad
jns
adc
mov
push
jl
and
xor
and
mov
push
int
lret
mov
jns
fbstp
or
lea
nop
stos
cld
out
gs
push
mov
push
xchg
lret
jbe
dec
cmp
lret
ret
lcall
pop
and
sbbl
add
mov
nop
std
or
rcrb
sar
ja
mov
mov
cmc
adc
fidivs
loop
fcoml
add
and
ljmp
out
cmp
icebp
out
movl
adc
fs
inc
cmpb
sbb
mov
roll
jle
sbb
inc
js
xchg
ja
imul
cmc
stc
dec
mov
dec
js
jns
les
add
ret
xchg
lods
jge
das
inc
or
jl
pop
inc
adc
pop
aad
dec
xlat
inc
or
ja
test
test
mov
cltd
xchg
mov
lret
test
mov
adc
push
hlt
test
pop
push
pop
xchg
pop
int
fsubrl
scas
pusha
ja
push
jg
mov
xchg
bound
test
xchg
sti
cmpsb
fldl
test
adc
inc
outsb
mov
push
pop
data16
xor
cmpsb
pop
and
or
js
mov
outsb
sub
and
sub
fadds
daa
insb
mov
test
scas
aam
test
loopne
jp
xor
mov
es
fsub
scas
fs
and
mov
call
sti
xchg
adc
call
pushf
and
pop
inc
and
in
mov
outsl
stc
das
add
std
cmp
xor
mov
fs
push
imul
ret
mov
xchg
jns
push
fiaddl
icebp
sbb
jno
mov
leave
cmpl
leave
xor
das
add
inc
mov
inc
dec
dec
fbld
inc
movsl
bound
jmp
cmp
mov
cmp
sub
sub
shl
inc
jge
push
cs
and
mov
imul
out
cmp
in
dec
mov
dec
insb
jg
jle
out
xor
jmp
outsl
add
fsubrl
scas
adc
aad
mov
or
inc
xchg
lods
or
push
cs
ficomps
push
adc
mov
xor
fwait
mov
jns
push
or
fsts
cltd
inc
adc
sbb
out
sub
or
xchg
out
aam
inc
movsl
test
pop
test
rcl
movsb
sbb
nop
sbb
jae
lret
std
xchg
fdivs
popa
les
sbbl
outsl
ss
fistpll
scas
ret
mov
subl
insl
mov
jb
icebp
leave
xchg
stos
bound
nop
pop
lahf
fimull
cmp
lret
aaa
dec
and
push
sbb
insl
outsb
mov
adc
mov
js
sub
mov
lcall
rolb
cmp
jnp
sub
aam
xchg
push
adc
inc
arpl
ja
cli
and
ss
daa
sbb
push
pop
scas
lret
sahf
movsb
push
sub
imul
dec
jl
pop
add
test
repnz
sbb
dec
aas
inc
cmpsb
jbe
sub
and
xor
dec
data16
insl
shlb
sbb
int
mov
lods
shll
xchg
pop
daa
mov
mov
cmp
pusha
into
fdivr
xchg
addr16
dec
sbb
add
jmp
adc
xchg
cltd
add
xchg
sub
sbb
mov
hlt
dec
je
or
mov
repnz
insl
mov
jmp
lods
outsb
push
sbb
outsl
rcrl
adc
popf
rorl
insl
sbb
lcall
pushf
mov
int
inc
inc
jb
fwait
popa
mov
out
push
mov
jp
into
into
cmp
xorb
out
nop
dec
popa
lret
mov
out
mov
test
rorb
loope
jbe
ret
fwait
lods
cwtl
or
es
push
repnz
inc
adc
sub
cmpsb
xchg
es
in
and
mov
xchg
xchg
adc
mov
loope
cmpl
pop
ret
mov
pop
rol
out
pusha
scas
xchg
mov
mov
push
orl
or
sub
xor
lcall
in
mov
movsb
cld
push
in
dec
lahf
jle
in
cmp
cltd
adc
inc
and
sti
imul
sti
pop
mov
mov
test
mov
xchg
mov
lahf
shll
cmp
xchg
pop
mov
or
jp
in
and
divl
movsl
jg
dec
push
and
push
jnp
sahf
out
popa
out
xor
cltd
push
sahf
je
aas
pop
push
sub
xor
mov
or
test
jle
adc
xchg
add
inc
fmuls
scas
push
sbb
xor
aas
cwtl
cwtl
lret
lea
adc
push
mov
fs
or
adc
push
test
pop
out
lahf
lahf
data16
xor
mov
out
fnstsw
xor
or
cmp
lock
mov
data16
fwait
push
sbb
dec
shrb
out
add
shr
jo,pn
rcl
fldt
adc
fcompl
shl
inc
xchg
xor
mov
pop
test
rol
lods
clc
pop
mov
jmp
fcompl
and
adc
or
cmp
pop
pop
sbbl
mov
jae
jae
and
insl
out
mov
inc
popf
push
xor
jecxz
popf
outsb
inc
pop
imulb
bound
outsl
sbb
adc
cmp
insl
cltd
pushf
xchg
pushf
jno
or
mov
inc
inc
outsl
data16
sbb
out
mov
cmpl
pop
test
inc
adc
sarl
mov
aam
test
in
pop
test
mov
adc
andb
mov
pushw
daa
mov
or
pshufw
gs
mov
sbb
or
xchg
mov
cs
add
je
shl
push
ficompl
fisttps
or
or
imul
adc
cltd
or
mov
push
mov
push
cmp
stc
mov
hlt
jmp
aad
adc
sub
xchg
fldt
mov
mov
loopne
push
cmp
push
data16
and
dec
int
les
loopne
jnp
dec
xor
jb
shl
push
mov
mov
shlb
or
jge
dec
bound
cmpsb
aam
jmp
dec
dec
cmp
in
arpl
ds
xor
mov
push
out
mov
dec
add
xor
jg
fcmovnb
push
xchg
insl
mov
sub
inc
pop
in
fistpl
lock
push
mov
gs
cmc
and
cmp
push
ss
das
adc
sub
sbb
xor
cmp
add
pop
lret
adc
inc
or
movsb
stc
fdivr
data16
jl
jl
stc
pop
adc
add
jp
jns
jg
push
mov
cmp
out
scas
movsb
std
testl
and
mov
add
pop
and
cmp
cltd
iret
test
mov
fcmovu
leave
xchg
push
add
xchg
adc
fs
mov
push
mov
in
fwait
aam
xor
repz
dec
or
dec
aaa
push
in
jge
sub
shrb
jnp
fcoms
xchg
and
adc
xor
xor
andb
mov
mov
sub
mov
push
ret
dec
lret
pop
xor
loopne
pop
test
out
fsubl
pop
and
mov
fs
pop
negb
mov
pop
and
pop
movsl
push
sti
lret
ljmp
movd
pop
push
mov
lahf
imul
cmp
mov
or
lds
jmp
push
out
enter
inc
call
mov
rcrb
outsb
iret
push
js
mov
jo
clc
fstpl
sub
mov
fnstenv
test
xor
orl
cmp
stc
adc
jg
add
in
mulb
push
fsubrs
xchg
sbb
scas
pop
aam
arpl
loopne
gs
imulb
jge
lahf
jne
sarb
cmp
loopne
add
fidivrl
in
sbb
stc
dec
inc
sbb
pop
cmpsb
xor
repnz
adc
fcompl
in
mov
or
jle
xchg
dec
adc
push
mov
cmp
aad
adc
xorl
jge
dec
sbb
xchg
and
movsb
or
shll
data16
inc
je
mov
cmpsl
mov
ret
xchg
jo
inc
xor
mov
icebp
repnz
push
call
or
xchg
fucomp
fld
lods
cmp
out
testl
xor
ret
mov
sbb
cmp
or
and
push
mov
jecxz
jns
sbb
das
daa
in
inc
and
dec
lcall
movb
dec
ljmp
jb
xchg
jne
pop
enter
jp
adc
popf
stos
fld
enter
and
std
push
push
mov
mov
std
decb
or
dec
aas
das
sub
add
dec
and
or
push
into
arpl
mov
sub
daa
adc
imul
sub
mov
or
mov
mov
daa
in
ret
mov
dec
addr16
cmp
in
enter
mov
js
mov
mov
xlat
sbb
andb
test
mov
stc
call
mov
adc
daa
and
lret
scas
mov
sub
pop
cmp
push
mov
jb
scas
movsl
les
repnz
or
xor
or
cmp
mov
scas
dec
inc
aam
gs
xchg
sub
fbld
cmp
loop
sarb
mov
pop
leave
dec
inc
push
push
lock
jne
sbb
or
add
and
or
jle
pop
faddl
in
ficoms
int
dec
inc
js
jmp
repz
in
mov
std
prefetch
or
fmuls
jnp
movsb
cld
jecxz
gs
fisttpl
lods
cmp
mov
cmpsb
push
inc
push
add
jmp
mov
imul
out
push
je
mov
sbb
jp
inc
cmp
sbb
mov
xchg
add
sbb
jno
in
lock
testl
add
and
pop
mov
out
push
jg
jle
mov
rcll
push
out
arpl
ss
add
sbb
sbb
xor
daa
mov
popf
out
mov
push
fistps
fidivrs
dec
lods
jg
dec
lock
fimuls
jae
fsub
sub
int3
push
aam
mov
jno
sbb
shrl
shlb
add
imul
or
pcmpeqw
mov
add
push
lahf
imul
popa
sbb
mov
xchg
mov
push
icebp
push
test
mov
loopne
fs
out
roll
mov
cmp
adc
outsb
movsl
icebp
xor
outsl
inc
add
scas
add
loopne
xlat
push
and
push
popa
mov
repnz
cli
lock
xchg
push
push
mov
push
xorl
jl
xchg
dec
in
pop
mov
roll
mov
xor
outsl
imul
push
lret
add
or
inc
sar
xor
ljmp
and
xchg
dec
mov
mov
xchg
ret
jmp
dec
sub
loop
subb
into
inc
mov
or
sbb
mov
shlb
or
ds
sbb
cld
pop
loope
fwait
lcall
dec
in
dec
dec
mov
ljmp
add
fldenv
movsl
gs
xchg
fldcw
and
mov
fldt
hlt
dec
imul
xchg
push
stos
xchg
sti
push
sbb
in
push
loopne
cli
xchg
in
or
ss
adc
xchg
pop
ss
mov
push
xchg
adc
push
mov
shlb
loop
xchg
jo
outsl
sbb
ljmp
cld
adc
or
subl
xchg
sub
push
mov
les
neg
outsb
inc
inc
pop
addr16
and
cmp
lock
gs
xchg
rcr
cmp
and
decl
into
sbb
rcrb
or
inc
test
jecxz
jne
mov
mov
out
xor
fsincos
push
jns
jnp
jbe
dec
es
push
mov
push
rcll
cli
pop
mov
dec
movsl
mov
mov
lcall
addr16
cld
dec
cmp
in
sbb
dec
mov
out
inc
pop
jns
dec
and
hlt
xchg
cli
sub
pop
lret
xor
sahf
push
ffreep
mov
imul
out
mov
addr16
jo
stos
cs
ljmp
lods
and
imul
inc
fisubs
pop
fmul
repz
scas
mov
cmp
xchg
gs
lods
mov
das
adc
roll
lea
pop
xchg
push
sbb
shl
push
mov
imul
dec
or
in
ret
mov
jbe
lret
jge
loopne
jbe
hlt
mov
xchg
mov
clc
std
mov
sahf
sti
push
jno
add
ja
ds
lock
cmp
jns
cmp
data16
sahf
mov
cmc
jmp
adc
adc
es
loop
pop
aas
xor
xlat
sbb
sbb
mov
ljmp
js
push
push
lock
lretw
xorb
push
dec
cwtl
pop
bound
xchg
enter
pop
jbe
loopne
ret
push
jmp
pop
gs
mov
lcall
and
sub
add
sbb
lds
clc
add
dec
shlb
inc
mov
and
push
imul
movsb
mov
out
inc
fiaddl
fwait
add
ljmp
es
mov
test
gs
xchg
les
mov
fbld
imul
xchg
and
xchg
aad
jns
stos
adc
in
push
lret
dec
pop
mov
aad
popf
ret
mov
js
pop
hlt
ds
cmp
jmp
pop
dec
outsb
mov
popa
xchg
aas
ljmp
insl
and
fwait
aam
in
pop
jnp
movsl
mov
popa
sahf
mov
dec
mov
daa
mov
xchg
lods
and
dec
testb
jge
ljmp
mov
push
in
lods
popf
gs
stc
fldl
jecxz
cmp
and
ret
pop
mov
aaa
push
fs
data16
data16
sahf
data16
popl
sub
insb
daa
and
mov
or
push
and
shlb
ret
test
dec
jbe
mov
xor
lods
scas
addr16
rorl
insb
push
icebp
loope
cmp
out
shr
jecxz
add
mov
movsl
andl
jg
mov
adc
sbb
jg
out
mul
push
and
mov
jg
es
push
mov
popf
push
mov
mov
pop
jle
dec
cltd
loope
mov
mov
mov
xchg
pop
jnp
movsb
pop
sbb
mov
pop
fwait
inc
and
lods
xlat
nop
in
xchg
xchg
mov
jo
in
cmc
les
sub
push
push
mov
xchg
fadds
adc
dec
dec
leave
adc
sbb
sub
fidivs
add
cmp
idiv
popf
mov
jb
ret
lret
jle
push
mov
adc
dec
sub
int3
dec
pusha
sbb
das
mov
inc
iret
dec
add
adc
add
outsl
rolb
iret
sbb
mov
dec
adc
or
aas
push
push
jp
push
and
mov
sub
pop
inc
sub
cmp
mov
xchg
cltd
inc
lea
rcl
jmp
je
pop
or
xor
outsb
data16
mov
mov
push
hlt
xor
sub
scas
aas
gs
sub
mov
mov
imul
in
test
fcoml
and
mov
inc
scas
and
rcll
cltd
adc
dec
paddusb
jbe
or
pop
xchg
mov
xchg
lods
lock
ljmp
xor
das
sahf
cmpsl
dec
rcl
mov
push
stos
ror
movsl
in
add
add
nop
or
adc
xor
pop
xchg
sub
scas
mov
xchg
sbb
mov
push
jmp
pop
and
test
xchg
ss
inc
into
in
sti
pop
insl
push
inc
lea
divl
inc
mov
icebp
jg
xchg
ja
jbe
lock
imull
outsb
rcl
leave
xor
enter
jle
shlb
movsb
jae
mov
pop
or
sbbb
popa
sub
sbb
mov
popa
gs
sti
jecxz
in
cmc
lock
dec
xor
fmull
cmp
icebp
mov
sarl
adc
test
mov
mov
loope
add
hlt
mov
cs
pop
popf
cmpsl
dec
imul
dec
add
int3
add
mov
cmp
cmp
adc
and
gs
sbb
xor
repz
xor
cmpsl
and
orb
mov
jle
mov
nop
aaa
push
mov
mov
mov
loopne
xlat
cs
lahf
mov
movsl
in
xchg
bound
mov
cwtl
lods
ds
add
or
movsl
test
mov
leave
mov
dec
xor
daa
xor
ja
xor
shll
dec
xchg
dec
xchg
lock
shll
mov
fld
adc
or
lock
sbb
imul
push
fwait
hlt
mov
push
les
xchg
fsubs
mov
xorl
test
add
jb
roll
mov
cmp
ficoml
inc
das
popa
outsb
push
push
jecxz
xchg
pop
test
cli
js
pop
mov
inc
dec
ror
push
data16
xor
push
jae
xchg
mov
ljmp
push
pop
imul
xor
xchg
sub
test
mov
or
in
jl
mov
xchg
test
and
sub
mov
cld
pushf
mov
mov
xchg
lea
iret
fsts
repnz
cmp
sarl
fisubl
je
add
aas
fdivrs
movsb
scas
inc
xor
xor
cmp
push
xchg
in
data16
jg
mov
jns
sbb
call
test
xchg
clc
and
mov
adc
pusha
or
dec
mov
mov
adc
cmp
repz
lahf
add
sub
andb
and
push
push
pop
mov
jo
sbb
gs
data16
lahf
leave
sbb
or
sub
in
nop
mov
inc
loopne
out
sub
sbb
jnp
cmc
lea
das
cmpb
xor
dec
xchg
jns
add
dec
addr16
cmpsb
xor
and
test
push
dec
sbbl
and
stos
ljmp
fldcw
mov
leave
cmp
movsl
lods
arpl
dec
inc
aam
pop
sub
js
leave
cmp
dec
mov
inc
pop
pop
addr16
je
lret
add
inc
and
sbb
mov
jns
sti
ss
ja
les
ret
in
fbld
das
scas
push
and
imul
fsubs
popa
mov
bound
pop
test
adc
mov
xor
xor
out
data16
push
mov
sub
out
mov
cmp
dec
stos
xor
add
insb
and
push
fwait
xor
hlt
xchg
mov
dec
addb
loop
popa
clc
fidivrs
gs
pop
lock
adc
lret
sub
push
and
push
or
mov
push
sbb
jns
aam
dec
sbb
lahf
lahf
xor
fdivrl
xor
pop
add
mov
mov
jmp
stos
cmpsl
mov
jecxz
and
xor
loope
push
addb
shrb
inc
sub
mov
cmp
and
push
push
lahf
sub
stc
xor
pushf
scas
cli
push
sub
mov
inc
aam
ret
xchg
ss
push
xor
xchg
imull
pop
push
insl
mov
dec
ret
mov
dec
adc
lock
or
cmp
pop
fisubrl
and
cmp
or
cli
mov
or
shl
test
popf
in
jl
xchg
fstps
adc
lret
test
pop
xchg
icebp
jmp
jae
stos
lods
push
into
adc
sbb
jo
or
iret
fldt
cmp
lret
or
inc
xchg
jmp
add
cmpsb
cmp
inc
push
sub
fbld
repnz
mov
stc
daa
fldenv
ret
dec
sbb
mull
mov
loopne
or
xorl
shll
xchg
pushf
xchg
add
xchg
ds
fildl
cmc
ret
fucomp
jge
mov
push
dec
rcrl
mov
xor
rcrb
jp
movsb
stos
jnp
nop
sub
jp
es
push
test
adc
movsl
outsb
push
lods
jb
add
js
adc
sbb
cmp
mov
fucomip
aad
mov
out
mov
sub
pop
sti
rcl
out
inc
push
adc
cmp
les
aam
jle
pop
out
decb
loope
or
mov
ret
or
cmpsb
cwtl
int
addr16
jmp
ljmp
addr16
xchg
jl
jle
push
pop
lods
ds
cmc
leave
and
shll
andb
mov
rclb
hlt
pusha
in
push
fisttpl
add
outsl
mov
js
xor
push
dec
faddl
jb
inc
push
icebp
int3
xor
pop
pusha
loop
mov
pushf
mov
xor
dec
xchg
mov
dec
hlt
xchg
fs
outsb
outsl
fs
xchg
push
out
push
mov
fwait
dec
xchg
cwtl
sbb
mov
inc
cmpsl
push
pop
add
mov
xor
push
jae
push
mov
int3
xorl
cmp
shlb
xchg
insb
andl
inc
nop
inc
sbbl
lahf
pop
push
jb
push
icebp
jbe
xchg
call
fwait
lcall
sub
insl
das
push
ja
leave
fisubrs
and
addr16
idivb
popa
sti
inc
test
mov
push
add
loop
ffreep
icebp
xor
movsb
pop
sub
sub
pop
inc
cltd
adcb
add
cs
movsl
and
iret
add
shlb
and
loope
pop
ss
fists
jae
daa
mov
or
sbb
rcll
pushf
arpl
push
sbb
pop
sbb
inc
and
fadd
std
xor
sahf
and
mov
push
movsl
mov
xchg
mov
xchg
sub
rorb
add
dec
dec
push
mov
cs
das
aam
adc
or
jge
jnp
jno
dec
movsb
lcall
mov
fldt
cld
fstp
bound
push
cmp
push
pushf
and
adc
mov
jp
inc
test
cwtl
cmp
lcall
loopne
arpl
inc
lcall
sbb
loop
popa
and
cmc
nop
fs
test
cmp
mov
xchg
and
movsl
stc
adcl
jns
fdivr
fwait
nop
push
gs
arpl
shll
dec
sbb
and
push
pop
js
push
inc
shrb
orb
lock
sarb
mov
jno
or
js
or
adc
imul
mov
leave
jae
add
lret
sbb
fmul
das
int
mov
pop
movsl
imul
sub
aad
cmp
fisubrl
mov
and
aam
lods
bound
cmp
bound
mov
jmp
sbbb
daa
and
and
cmp
push
and
sbb
mov
mov
test
push
dec
push
sub
adc
js
jno
dec
out
in
arpl
ja
lods
stos
les
jle
sahf
pop
test
bndldx
sbb
mov
sbb
sbb
inc
rcrb
imul
call
add
imul
or
std
in
ss
cld
fisttps
pop
lcall
dec
add
cmc
sti
sub
test
push
add
jmp
sahf
jg
imul
add
sub
int
hlt
adc
mov
imul
inc
sbb
push
mov
xchg
mov
jae
test
add
jns
mov
pusha
inc
insb
insl
pop
inc
cmpl
lahf
xchg
dec
jbe,pt
adc
mov
sbb
rcrl
push
xor
dec
xchg
orl
add
subb
jge
and
cs
lret
mov
out
hlt
pop
sti
jne
pop
jg
inc
int
jmp
sarb
sub
inc
jg
enter
mov
sbb
adc
shlb
sbb
mov
lcall
stc
call
sti
cmpsl
mov
jns
jecxz
jnp
push
es
inc
mov
divl
sti
xchg
sub
cmc
in
call
xchg
mov
int
xchg
lock
stc
add
mov
push
adcl
scas
adc
iret
loop
fadds
scas
sub
divb
jne
jecxz
xchg
or
and
insl
push
jl
cmpsb
out
jns
rolb
icebp
add
rorb
mov
lods
lods
mov
cmp
fs
call
mov
pushf
mov
aam
mov
sbb
mov
cwtl
or
add
push
lret
or
loope
fistps
outsl
leave
add
cmp
les
cmp
call
dec
inc
mov
mov
int
sbb
mul
inc
xor
mov
adc
pop
outsl
nop
or
cwtl
add
dec
pop
test
push
iret
inc
mov
pop
or
add
fwait
or
popaw
push
xchg
lds
test
pop
sbb
lcall
data16
mov
arpl
outsl
int3
testb
mov
pop
je
adc
nop
push
xorl
inc
cld
movsb
add
or
dec
sti
out
jge
adc
imul
sub
lods
cli
stc
or
das
idiv
dec
sbb
add
pop
dec
push
mov
in
movsl
push
test
jp
or
clc
adc
mov
cmc
sbb
xor
mov
scas
inc
lods
stc
aas
call
mov
cld
or
mov
sarb
or
cmc
stos
dec
cmp
jns
rcr
mov
sahf
pop
push
pop
in
dec
shll
je
inc
and
and
inc
cmp
sahf
scas
push
bound
shlb
mov
sub
xchg
pop
pop
xor
adc
cmp
lcall
mov
imul
sub
mov
rorl
iret
fs
iret
ljmp
ja
mov
mov
mov
pop
xchg
ss
popf
popa
loopne
adc
cmp
xchg
xchg
jb
ds
shll
mov
and
outsl
scas
push
xchg
cs
nop
shll
movsb
cmp
mov
movsl
xchg
mov
in
inc
std
jne,pn
ljmp
aad
hlt
sbb
fildl
out
loop
hlt
and
stos
pop
es
int
aaa
cmp
test
inc
cltd
ljmp
inc
popf
pop
mov
clc
mov
jb
dec
out
pop
xor
xor
pop
in
scas
je
push
fdivp
push
adc
scas
mov
je
and
cs
std
mov
les
adc
stos
jp
cli
sbb
sbb
pop
ljmp
jmp
lahf
sbb
xchg
adc
inc
sub
add
add
in
mov
inc
scas
nop
inc
mov
jl
inc
xchg
sbb
push
loop
mov
into
popl
mov
into
lret
pop
in
stos
pushw
sub
cmc
test
cld
push
dec
mov
lret
jae
push
mov
lods
adc
gs
push
and
aad
jp
out
or
sti
ss
sbb
xchg
and
je
dec
add
ja
test
xchg
add
sbb
fucomi
fsubs
mov
test
ja
outsb
inc
lods
ss
add
dec
and
xchg
push
int3
adc
add
push
leave
mov
cmp
imul
mov
mov
clc
cmc
sti
cmpsl
lock
mov
and
test
dec
jle
push
stos
lods
hlt
jne
jne
cli
js
xlat
inc
clc
lea
inc
dec
push
jae
add
rcrb
add
aad
inc
jbe
ror
push
lea
xchg
sub
dec
mov
or
fs
loopne
iret
movsl
adc
das
ds
sbb
xor
mov
imul
lds
imul
and
hlt
xchg
fucomi
xchg
jg
aad
add
lret
push
add
cmp
fildll
pop
sahf
insl
mov
cmp
cltd
sbb
jp
jo
sarl
xchg
sub
inc
out
lea
movsb
ljmp
pop
sub
push
fcomps
fucomp
imul
shrl
xchg
adc
cmp
ljmp
rcr
lcall
push
pop
jmp
pop
sbb
iret
fadds
mov
js
rol
xor
ja
jne
or
pusha
sbb
gs
call
jne
shrl
repz
dec
mov
aad
push
decb
jmp
mov
push
lret
add
add
jns
mov
test
cli
or
push
lea
adc
rclb
je
leave
add
mov
mov
test
test
xlat
xchg
push
push
push
insl
pop
dec
lcall
xchg
ljmp
in
pusha
jg
pop
inc
dec
jg
pushf
stc
icebp
je
inc
imul
fiaddl
and
adc
pop
fsubrs
lret
pusha
lahf
fisubs
inc
push
rolb
test
rcll
push
shl
repz
sub
in
shlb
jmp
mov
mov
sahf
mov
mov
fs
push
ss
cltd
pop
idivb
roll
iret
out
mov
or
or
and
push
xchg
xchg
mov
or
add
and
std
lcall
adc
mov
mov
xor
jmp
ret
add
xor
sti
movsb
sahf
sbb
js
or
ljmp
jmp
into
aad
xchg
add
mov
sti
mov
inc
xor
push
dec
pop
cmc
jbe
fsts
fdivp
lahf
icebp
xor
mov
mov
and
movsl
cli
aaa
adc
inc
testb
iret
jae
add
and
cmc
in
push
ret
jg
xchg
mov
push
cmp
stos
pop
insb
pop
jmp
sbb
dec
std
stos
pusha
outsb
ret
das
lock
imul
mov
ja
pop
sarl
pop
xchg
jge
mov
inc
lds
movsl
mov
mov
dec
jp
ss
fsubrs
iret
mov
popf
les
cltd
push
fisubrl
push
xorl
push
fs
in
repz
inc
hlt
outsl
fistpl
pop
or
dec
call
add
gs
sbb
scas
jbe
sti
xchg
popf
cmpsl
aad
cmp
push
sub
xor
cmp
push
rclb
fcompl
aad
sar
das
dec
lds
cwtl
out
pop
cmc
mov
arpl
daa
insl
mov
pop
iret
or
lret
jmp
fs
gs
fwait
mov
xchg
clc
xchg
loopne
or
out
adc
les
adc
dec
mov
add
call
loope
leave
adc
lock
adc
and
in
je
sahf
cmp
arpl
testl
pop
sbb
lcall
cs
mov
cmp
sub
mov
inc
leave
in
add
or
push
jo
pop
dec
ret
into
negl
xchg
loop
int3
hlt
daa
xchg
jb
sbb
mov
jno
pop
cltd
lret
sub
into
aas
cmp
loopne
xchg
test
in
adc
adc
add
cmpsl
mov
cld
popl
pop
jae
cmp
and
cmpsl
ret
and
sbb
daa
roll
inc
icebp
cmp
lea
stos
add
push
sub
mov
int3
xchg
inc
iret
cmpsl
jp
mov
mov
mov
movsb
add
mov
movsl
push
fsubrs
and
mov
cmc
xor
orb
mov
xor
jmp
lock
call
inc
fwait
nop
add
mov
adc
mov
imull
in
jl
scas
out
adc
jg,pn
jecxz
jb
ja
data16
pop
ret
pusha
jmp
stos
push
dec
imul
cmp
xor
imul
dec
add
xchg
xor
ret
popl
jo
imul
movsl
mov
pop
stos
or
xor
es
cmpsl
jne
pop
jae
push
cmp
fnstsw
and
sbb
cmp
mov
dec
pop
repnz
cmc
cmp
xchg
sbb
subb
cmp
outsl
jne
push
add
ret
sub
mov
pop
xor
cmp
inc
outsb
mov
pop
les
push
cmpsb
pop
inc
orb
jo
aaa
xchg
mov
lret
cmp
xchg
jp
movsb
hlt
enter
sbb
push
push
pop
popa
rcrb
dec
aam
setg
repz
mov
out
mov
mov
pop
ss
aad
pop
hlt
dec
popa
mov
and
int3
ret
mov
dec
xchg
pop
jnp
and
aad
and
fstpt
mov
mov
xchg
pop
push
mov
mov
subl
stc
int
int
in
fdivrl
jo
popf
repz
mov
or
inc
jl
mov
aam
repz
sbb
mov
int3
jbe
inc
dec
xchg
imul
and
test
sub
aam
dec
jg
insb
cmpsl
and
pop
push
out
mov
movsl
cs
hlt
pushf
movsb
cli
lret
xchg
int3
pop
addr16
loope
daa
xchg
bound
lret
data16
sbb
mov
pop
mov
repnz
fidivl
push
repz
xchg
outsl
push
push
mov
xchg
xchg
mov
push
mov
sahf
or
inc
mov
stos
xchg
mov
leave
leave
pop
push
aam
aad
or
pop
cmp
adc
jp
mov
fisttps
fxch
mov
jmp
pop
mov
decb
fisubl
pop
adc
sarb
mov
xchg
xor
repnz
xor
lea
daa
jmp
pop
imul
sbb
xchg
mov
aam
jg
mov
jae
mov
push
mov
xchg
sarl
mov
dec
and
daa
jg
jge
push
mov
lret
cmpsl
mov
dec
jno
lds
rcll
inc
xlat
insl
addb
int
stos
loopne
testl
das
cld
dec
inc
clc
pop
jp
dec
dec
stc
sbb
mov
sub
aam
aad
mov
movsl
out
dec
cmp
push
movsb
ds
push
xchg
dec
aad
out
jae
and
mov
push
pusha
sti
xchg
leave
fbstp
lea
out
mov
and
add
push
jno
push
scas
pop
rcrb
scas
push
add
and
sbb
shl
jmp
xchg
gs
xor
xor
insl
mov
adc
jnp
pop
xor
fdivs
shlb
dec
loop
movsb
push
icebp
cld
jb
es
js
xchg
out
xchg
movsb
ds
insb
dec
dec
add
call
sub
jne
xor
push
int3
sub
lds
sub
mov
cli
das
cmp
add
int
cmpsl
imul
aas
fdivrs
push
subl
ret
outsb
lahf
mov
fwait
xchg
lret
push
stos
push
enter
adc
push
pop
orb
or
sbb
sahf
jne
andb
addr16
jp
mov
cmp
leave
repnz
mov
push
cmp
jae
cmp
push
jmp
sub
adc
sbb
jg
push
into
sbb
fs
cmp
jo
mov
movsl
hlt
movsl
adcl
pusha
push
pop
fldl
jle
jae
adc
xor
inc
pop
sub
adc
sub
mov
xchg
stc
pop
lods
or
das
inc
xchg
cli
aam
inc
jne
enter
lds
cmpsb
ss
pop
or
add
je
test
imul
or
and
fisttps
bound
push
mov
lea
popf
lods
pop
outsl
mov
enter
iret
xor
jo
pop
rcl
sbb
iret
lret
push
mov
mov
les
cmpsb
out
and
cwtl
push
ret
jmp
ljmp
test
dec
xchg
inc
mov
movsb
dec
push
stc
inc
ds
ret
jnp
fsubr
push
dec
lcall
pop
mov
sub
rorb
push
xchg
push
ja
sti
negb
inc
lcall
xchg
and
dec
in
push
insl
jge
mov
adc
jge
or
pop
rorb
mov
lods
xchg
sahf
frstor
pop
cmp
sbb
loopne
pusha
int
ljmp
mov
fidivrl
negb
mov
ljmp
mov
sub
scas
cmpsl
and
jb
bnd
lret
in
adc
outsl
sub
xchg
sbb
sbb
xor
cmpl
aad
bound
pop
jp
or
sub
cmp
or
push
ret
ljmp
or
push
add
dec
jmp
jmp
mov
fucom
rcrl
xchg
aaa
and
xchg
sbb
repnz
daa
icebp
mov
push
je
movsl
mov
push
dec
out
in
mov
cmc
je
bound
cmpsb
sbb
leave
dec
pop
lret
inc
mov
mov
inc
mov
jl
xchg
test
xchg
out
mov
jg
hlt
cwtl
push
add
xor
ljmp
cmp
shrl
shr
xor
pop
xchg
or
pop
bnd
cmp
and
push
fnstenv
pop
std
sub
jb
xchg
dec
lcall
call
popa
gs
mov
cmp
mov
movsl
pop
les
jno
adc
xlat
jp
jne
int3
test
jge
enter
shrl
inc
icebp
dec
lret
clc
push
inc
mov
fsubrl
push
iret
stos
movsb
bound
fidivs
arpl
or
xorl
movsl
jle
out
inc
adc
adc
insl
outsb
addr16
push
out
inc
and
sbb
sti
out
rol
add
and
test
mov
cmpsl
pushw
bound
int
sub
mov
scas
push
stc
mov
lock
loope
add
lahf
pusha
cmpsb
insb
sbb
int
imul
shrl
sti
out
cmp
cld
sub
xchg
mov
jnp
cmp
jno
mov
pusha
cs
xchg
xchg
xor
in
mov
loop
mov
in
xchg
inc
mov
cmpsb
pop
add
jb
int
push
jecxz
jbe
dec
mov
bnd
mov
mov
or
xchg
sarb
aad
fwait
lahf
sub
lcall
and
cmp
inc
aas
xlat
cs
jbe
sti
cld
les
call
mov
add
outsl
sbb
jg
call
ret
mov
pop
stc
and
sbb
mov
xchg
aam
mov
mov
dec
xchg
test
std
cld
cmp
shll
mov
enter
xchg
rclb
inc
sbbb
sahf
jbe
cld
popa
fildl
cld
fisttpll
out
dec
in
cmpsl
pop
cmp
int
outsb
mov
pop
or
loope
clc
movsb
mov
arpl
pop
pop
movsl
inc
aas
les
mov
cmp
mov
aas
pop
mov
mov
or
mov
or
jmp
cmp
push
das
sub
sub
push
jle
in
adc
push
add
call
in
lret
out
dec
jle
cli
xor
or
int
jge
js
outsb
imul
mov
mov
mov
test
in
sub
enter
mov
jecxz
lods
nop
add
mov
jne
fs
les
push
lcall
adc
mov
push
sar
in
aas
push
movsl
adc
repz
fsubl
add
leave
cltd
hlt
popa
in
or
repnz
ror
mov
sbb
mov
dec
mov
sub
cld
outsl
mov
loopne
les
aaa
sub
popa
xchg
pushl
icebp
inc
add
jge
mov
sub
mov
dec
add
pop
adc
sbb
loope
mov
push
stc
scas
pop
clc
push
add
out
scas
outsl
addr16
jl
std
adc
xor
fldcw
rorl
fs
dec
and
int3
sub
mov
cmp
stos
push
rcrl
xlat
mov
or
push
testl
cltd
into
mov
test
mov
sbb
push
dec
popf
inc
xchg
imul
inc
fs
iret
mov
adc
out
pop
or
gs
jecxz
cwtl
jb
sbb
out
rcrl
mov
pop
in
cmp
aas
movsb
repz
add
rcr
inc
and
cmp
jle
and
xchg
push
mov
mov
and
test
mov
xlat
or
lock
lahf
das
in
call
sti
aaa
fisubs
dec
dec
shll
inc
aas
push
mov
dec
xchg
loop
bound
xchg
dec
addr16
test
mov
dec
adc
jnp
es
out
adc
push
or
and
lock
cmp
sub
bswap
test
adc
popf
mov
mov
stc
push
xchg
cmp
mov
mov
sbb
sahf
push
out
pop
pop
mov
and
test
out
xchg
add
jg
mov
mov
mov
mov
dec
ret
icebp
sub
rcl
xchg
sbb
xchg
das
push
aaa
decl
push
inc
testl
mov
xchg
lcall
mov
mov
push
test
ret
ficoml
push
push
shr
or
stos
adc
jo
jge
hlt
test
pop
cwtl
inc
push
xchg
inc
jns
subb
test
testb
cmpsb
cld
jo
jns
mov
mov
decl
ja
adc
and
adc
pop
scas
imul
addl
add
es
sub
int
sbbb
daa
leave
xorl
add
pop
lock
or
xlat
push
aam
loop
cltd
and
ss
xchg
jo
pop
inc
jecxz
xchg
mov
xchg
out
popa
test
scas
or
xor
jb
sahf
mov
out
push
insb
jnp
std
jle
sbb
ret
pop
xor
sti
push
js
dec
ss
inc
bound
mov
mov
mov
adc
sbb
and
sti
xchg
gs
nop
dec
inc
xchg
pop
inc
dec
or
and
pop
add
xchg
jmp
lds
adc
iret
leave
fs
push
pop
xlat
cmp
mov
ret
sub
mov
std
in
pop
cmpsb
add
es
aad
cld
and
lods
pop
es
and
das
dec
add
and
scas
imul
icebp
mov
enter
jg
xchg
popf
xchg
in
ftst
xchg
mov
cwtl
xorb
jg
mov
mov
imul
out
xchg
jae
push
push
mov
cmp
mov
in
pusha
cmpsl
or
pop
xchg
jns
stos
push
jge
pop
repnz
xor
xor
sar
dec
push
jl
mov
dec
or
jl
mov
icebp
out
sub
pop
xchg
sbb
jo
pop
pop
lcall
mov
sbb
jae
pop
pop
xchg
std
pop
out
sahf
in
fs
clc
sbb
lcall
sti
push
or
out
test
xchg
lret
xor
scas
test
dec
xchg
xchg
mov
pop
jecxz
jp
std
sahf
and
adc
fsubrl
push
pop
scas
in
or
mov
mov
mov
pop
push
add
repz
aad
adc
std
fpatan
lret
cltd
loope
xor
imul
out
cmpsl
shl
in
addb
cmpsb
push
fwait
in
add
sbb
nopl
mov
cld
push
mov
mov
in
mov
cs
push
mov
shll
jg
ret
dec
xor
mov
pusha
pop
shrl
jns
test
sarb
pop
sbb
outsb
and
bound
mov
mov
mov
scas
cmp
in
sub
cmp
mov
fsubl
shlb
sub
jge
jo
sub
shl
mov
add
mov
test
cmp
adc
cltd
je
pmulhuw
xchg
or
add
push
mulb
cmpsl
cmp
rorl
out
adcb
fdivrl
inc
fsubrs
outsb
idivb
ret
lock
ret
into
mov
ficomps
sbb
jo
or
mov
mov
pop
cmpsb
ret
dec
ficompl
testb
cmp
mov
pop
push
and
int
ror
or
es
jne
mov
xor
and
jl
les
push
dec
out
jo
test
xorl
jnp
cs
sbb
rcr
xchg
pop
fidivs
in
in
push
mov
fwait
ret
decl
test
ja
add
ljmp
push
roll
lds
jp
pop
or
in
inc
js
cltd
cmp
fisttps
pop
mov
int
cmpsl
addr16
cwtl
cld
pop
xor
adc
mov
push
ss
mov
xchg
pop
jl
mov
sbb
add
call
xor
movsb
push
loop
js
lods
neg
adc
lods
sub
mov
sarb
mov
adc
sub
pop
into
popf
fstl
fdivs
aam
mov
es
fs
popf
cwtl
pushf
jne
sar
rcrb
or
and
insb
iret
leave
sub
not
aas
stc
mov
cmp
add
fidivl
xchg
push
movsb
cmpsb
adc
iret
faddl
push
pop
pop
xor
scas
add
pop
rclb
ret
mov
mov
add
adc
xchg
inc
cld
xlat
ret
into
push
jbe
jge
aaa
in
add
mov
mov
mov
out
loopne
mov
xchg
out
push
sub
dec
out
or
lret
roll
xor
and
pusha
push
int3
or
jno
mov
out
or
dec
mov
int
jnp
outsl
fcmovbe
call
shrb
shll
lret
sbb
out
mov
stc
xchg
jnp
fidivrl
mov
repz
push
xlat
xor
lds
in
xchg
add
mov
sarb
jmp
fxch
fidivs
pusha
inc
call
jl
scas
mov
cmp
daa
cmpsb
call
into
jmp
or
les
mov
adc
pop
mov
call
aad
pop
mov
out
shrl
jg
cmp
xor
pop
inc
cmpsb
cmp
out
xor
out
shl
outsl
mov
xchg
inc
lcall
loope
pop
or
cmp
cmpb
mov
dec
dec
push
xor
jb
out
pop
sbb
cli
ja
in
gs
out
sbbb
stos
xchg
int
test
mov
jbe
fwait
jae
and
cwtl
xchg
add
sub
sbb
test
in
mov
cmp
push
mov
mov
pusha
mov
rclb
xor
in
stos
sub
ret
xlat
or
cmp
stos
mov
xor
sbb
jmp
out
and
out
pop
xchg
dec
jb
sti
sub
xchg
stos
shlb
mov
cmp
sbb
aam
pop
sbb
js
xor
imul
loope
xlat
jbe
xchg
sti
sub
add
je
mov
sub
adc
scas
adc
jmp
in
test
aaa
jbe
inc
and
notl
notl
xchg
inc
in
xor
sub
cmc
jmp
dec
outsl
imul
inc
jl
push
cmp
fsubl
inc
pop
jmp
inc
inc
in
xor
lahf
icebp
ret
and
insl
jno
add
adc
out
call
push
js
fwait
mov
rcrl
mov
pusha
outsl
ss
or
insl
jae
pop
inc
cmp
in
cmpsb
ficompl
fwait
mov
and
jae
or
xchg
push
pop
pusha
sbb
pop
jo
xor
lcall
xor
wrmsr
jl
call
cld
push
lcall
jp
dec
mov
repnz
xor
jae
out
pop
sub
mov
mov
rorl
shrb
or
dec
and
cmpsb
int3
pop
stos
mov
sub
ret
aas
dec
movsb
es
repz
in
shll
pop
les
inc
out
xor
movsl
repnz
pop
cmpsl
fildll
cmp
stos
xchg
cmp
add
mov
rolb
inc
test
loop
sub
mov
adc
dec
outsl
or
pop
sbb
loop
add
sub
mov
cmp
push
xchg
enter
test
in
pop
shrb
push
sahf
rol
fsubs
jae
xor
mov
xchg
mov
xor
sub
lret
cmp
mul
divb
cs
cmp
pop
inc
popf
rorb
and
mov
xchg
or
jl
repz
add
or
out
push
aad
mov
stos
outsl
test
or
loope
dec
xor
call
fcmovnb
dec
stos
mull
xor
jmp
xchg
ret
loop
add
hlt
mov
jnp
add
int
out
lods
jo
aas
xchg
lcall
sbb
pop
xchg
pop
cmc
jne
push
je
mov
nop
or
mov
cmpb
mov
sbb
test
jae
mov
sub
lock
fisttpll
pop
dec
clc
and
movsl
sbb
in
push
loopne
or
push
insl
adc
out
in
pop
sub
or
dec
aam
mov
push
cmp
aad
enter
push
insl
xchg
add
test
inc
xchg
int
adc
pop
js
stos
in
push
xor
es
stos
push
push
dec
mov
and
fwait
insb
cld
mov
hlt
cmpsl
jne
inc
add
xchg
ret
out
shr
or
aaa
dec
cltd
fldcw
mov
test
mov
pushf
adc
icebp
aam
mov
cmp
inc
push
xchg
or
xchg
ret
pop
mov
mov
sub
sbb
out
xor
in
push
cwtl
inc
adc
jb
sbb
enter
pop
xchg
push
ss
add
mov
js
mov
jb
xor
arpl
mov
pop
mov
xor
dec
or
das
push
push
adcb
xor
and
leave
cmc
cmpsl
pop
cmpsl
cmc
mov
jnp
repz
dec
and
cmp
nop
mov
inc
enter
dec
xor
push
and
aam
aaa
push
mov
insl
mov
add
pop
lods
or
mov
insb
sub
jno
xor
sti
dec
or
movsl
adc
dec
dec
in
sub
lock
mov
mov
cmp
ds
xor
jmp
dec
fistl
and
xor
out
les
adc
bound
pop
inc
push
leave
fcoms
fdiv
dec
sbb
mov
jnp
bound
in
pop
add
fisttps
out
and
rcr
xlat
lods
pushf
scas
jns
cs
xor
push
or
test
test
jo
orl
or
dec
fistps
xor
mov
or
hlt
in
cs
mov
ss
mov
popf
fsub
mov
cmc
jne
adc
scas
imul
sub
ficoms
loope
or
fidivrs
mull
pop
popf
in
jnp
imulb
xor
inc
mov
xor
out
test
cltd
sahf
xor
fsubl
addr16
xchg
jmp
loope
addr16
push
jae
hlt
rol
push
cmpsb
lret
frstor
movsb
sub
push
fcomps
or
hlt
mov
outsl
pop
mov
testb
xor
ftst
dec
push
js
adc
cmpsb
gs
jl
movsl
and
sbb
dec
adc
sub
imul
mov
push
lcall
pop
sbbl
and
movsb
push
and
pop
aam
xchg
icebp
scas
push
bound
xlat
das
cmc
or
aam
sarl
ljmp
insl
jno
mov
fiaddl
pop
sbbl
insl
cmpsl
pop
out
addr16
popf
loope
lds
xor
jge
arpl
xchg
int
jl
cmc
inc
outsb
fiaddl
add
pop
pushf
xchg
pop
int
int
mov
jle
mov
cltd
fidivrl
xchg
nop
sub
jg
pop
sub
lcall
popf
jne
mov
popf
les
mov
jo
fidivs
daa
xchg
cld
dec
jp
scas
or
push
imul
sub
xor
lds
pop
mov
push
shll
ds
aas
push
jnp
test
dec
cmp
xor
jmp
or
push
lcall
dec
mov
cs
inc
pop
push
mov
pop
mov
sbb
jge
mov
mov
sub
cmp
loop
lods
cmp
lds
add
cmc
push
hlt
stos
mov
lret
into
xchg
sar
sub
push
inc
loop
cmpb
xchg
outsl
push
inc
lea
lods
push
repnz
sbb
sbb
imul
movsb
adc
mov
and
push
sbb
aam
inc
push
insl
mov
scas
mov
sbb
push
pop
mov
jmp
dec
cmp
dec
push
lods
lahf
loop
dec
lods
push
and
out
add
pusha
hlt
push
or
shlb
push
mov
aas
add
push
dec
fwait
dec
jl
out
fcompl
dec
iret
cmp
out
es
jae
lahf
xchg
push
repz
push
sub
int3
and
mov
or
mov
std
pop
and
lods
add
or
jp
adc
sub
jle
outsl
loop
popf
xchg
dec
aas
mov
or
loop
mov
xor
addr16
int
jp
dec
pop
xor
scas
pop
fildll
adc
in
sti
iret
or
shll
in
flds
repz
jmp
jmp
stc
loopne
rcrl
xchg
sub
pusha
mov
inc
mov
or
es
lcall
enter
mov
loopne
addr16
outsb
out
shlb
xchg
pusha
xchg
inc
xchg
xchg
shlb
jp
cmc
push
mov
stos
pmaxsw
int3
repnz
fiaddl
in
cwtl
pop
lea
xorl
push
xor
dec
mov
add
jg
sub
cmp
adc
lahf
inc
mov
sti
adc
cli
fsubrl
aad
ror
push
sub
pop
sbb
lahf
cli
add
mov
rcrl
fstpt
fstps
jo
jo
inc
mov
repz
hlt
and
ja
bswap
pushf
in
loopne
pop
add
stos
in
repz
leave
imul
pop
fidivs
mov
mov
dec
xadd
pop
adc
lret
inc
cmp
ret
fwait
rcll
lahf
stos
in
sbb
dec
pop
xor
out
icebp
or
dec
jae
aaa
rorb
lock
addr16
mov
ds
mov
or
xlat
leave
gs
adc
jo
push
ljmp
rclb
sbb
ret
mov
inc
or
add
ljmp
or
sbb
hlt
cmp
adc
loop
cmp
mov
dec
fiadds
fnop
bnd
inc
stc
scas
sbb
daa
mov
outsb
mov
xchg
orl
test
push
testb
lea
inc
push
mov
push
pusha
daa
popa
dec
jp
lods
add
out
es
and
mov
jp
daa
pop
bound
xor
lea
out
mov
pop
outsb
stos
flds
sti
inc
fidivrl
in
jmp
adc
lock
arpl
cmp
mov
bound
subb
mov
mov
dec
arpl
js
test
pop
jno
fsubrs
mov
pop
iret
mov
lahf
lahf
cmp
dec
and
clc
fsubrs
lods
dec
pop
ficompl
xchg
lds
lret
notl
add
enter
fsts
rcrl
popf
psubq
repnz
mov
mull
shl
pop
xor
sti
or
out
sbb
xchg
mov
jg
loopne
push
ret
incb
mov
sub
xor
ja
mov
sarb
cmpsb
push
inc
sahf
pop
or
enter
inc
das
aad
ror
jle
ja
gs
fldt
loop
repnz
mov
rorb
enter
mov
adc
lds
dec
mov
mov
xchg
enter
int
sbb
jmp
or
imul
mulb
mov
pop
pop
inc
imul
xor
pop
jge
imul
and
sbb
rcrb
lock
sub
fdivrl
cmp
xchg
pushf
xchg
loop
mov
aaa
repz
leave
add
xchg
xchg
cs
cmp
dec
pusha
and
les
jne
cmp
ja
gs
mov
imul
in
or
das
in
push
mov
jl
imul
cmp
jle,pt
inc
clc
sbb
and
mov
and
add
aam
sub
pop
int
popf
cmp
dec
testl
cmp
ret
cmp
ret
test
pop
jo
jae
sub
fldl
cwtl
gs
mov
cmp
cmp
iret
pop
jp
cmp
cwtl
jge
lds
outsl
sub
into
inc
push
lods
sub
pop
aas
test
sub
add
rorl
aad
fildl
cmpsl
aad
js
jmp
xlat
sar
inc
xor
push
jecxz
xchg
xchg
ret
fimuls
and
sbb
or
arpl
in
pop
xchg
fs
cmc
push
js
sbbl
jmp
mov
xor
pop
add
or
adc
lahf
and
test
ds
and
dec
inc
inc
scas
jg
mov
mov
aas
lahf
cmp
xlat
and
push
jle
mov
dec
sbb
or
mov
pop
pop
mov
push
jno
pushf
imul
and
cmp
sub
xor
insl
popf
jge
cmp
orl
add
jnp
and
pop
cmp
ret
loopne
jns
outsb
mov
mov
jmp
fdivr
cmp
inc
sahf
push
cwtl
dec
les
int3
inc
inc
int3
cmp
in
aad
das
aad
dec
ss
xchg
add
test
les
idivl
ss
mov
sbb
and
xor
fldl
adc
sbb
push
push
mov
aam
cmp
push
jg
pop
cwtl
mov
mov
testl
xchg
rcrb
add
mov
adc
xor
cmpsl
sbb
and
ljmp
mov
pop
dec
adc
mov
mov
push
inc
sub
adc
inc
or
mov
lock
shlb
movsl
and
pop
vmaxpd
idivb
xor
lcall
push
incl
clc
das
in
pop
iret
out
nop
mov
or
push
xchg
in
mov
notl
inc
pop
test
mov
cmpsb
stc
imul
outsl
daa
xchg
add
cmpsb
ret
xor
adc
aad
rcrb
scas
pop
add
cmp
jp
arpl
repnz
or
loope
mov
out
sarb
mov
outsl
cmp
outsl
sub
aas
dec
sbbl
dec
inc
orb
inc
fimuls
mov
popf
dec
push
mov
mov
shrl
sub
add
dec
lock
std
into
xchg
sbbb
mov
into
cmp
add
or
jl
xchg
add
xlat
repz
movsl
sub
push
das
xor
mov
notl
lods
jmp
es
mov
and
xchg
cmpsl
jbe
mov
push
mov
sbbl
add
push
and
in
inc
in
sbb
in
dec
out
mov
mov
fcom
addr16
iret
push
in
sbb
mov
or
cmp
jno
xchg
data16
mov
ds
mov
jl
dec
loope
mov
or
jp
cmp
adc
jge
dec
ret
jbe
cmc
push
enter
outsl
push
adc
mov
xchg
dec
cmc
mov
pop
aam
or
pusha
jmp
mov
flds
push
cli
xor
outsb
xor
test
mov
mov
jecxz
push
adc
dec
mov
push
rorb
jo
sub
stos
scas
cli
mov
mov
pop
pusha
cmp
and
ljmp
jnp
add
and
xchg
pop
push
dec
jnp
xchg
test
cmpsl
xor
jmp
les
leave
ja
rolb
mov
or
out
push
mov
and
pop
test
scas
and
add
ficoml
jne
sbb
sbb
popl
insb
test
lods
jbe
adc
int3
popa
scas
pop
push
mov
sbb
imul
add
dec
adc
adc
lret
mov
imul
inc
and
cwtl
push
iret
mov
jno
shlb
xchg
push
cmp
loop
scas
aam
das
pop
push
inc
outsb
xchg
sub
inc
in
inc
sub
xor
add
outsb
xor
aas
add
into
sub
shrl
add
or
cltd
insl
ret
into
push
dec
mov
push
inc
mov
lock
cli
inc
mov
aaa
call
sti
add
and
gs
add
adc
cltd
mov
imul
clc
data16
testl
movl
jle
mov
jp
jmp
xor
mov
ja
sbb
cmp
fistpl
and
test
imul
mov
mov
pushf
fs
sbb
cmp
adc
mov
repz
jbe
fcmovu
rorb
mov
xchg
xchg
sub
shlb
sbb
xor
push
orl
xor
adc
mov
sub
push
pop
dec
cwtl
scas
mov
call
std
mov
push
ss
dec
ss
loop
mov
das
pop
out
cmp
add
cltd
adc
fwait
ret
mov
mov
fldcw
xor
pop
mov
popa
mov
xlat
or
fsubrs
jecxz
nop
mov
test
fimuls
sub
in
and
ret
cmpsl
lock
aaa
or
jb
outsb
pop
outsb
jp
outsb
sbb
mov
jle
and
mov
pop
mov
or
xchg
pusha
enter
cmp
mov
arpl
and
je
adc
push
add
rcr
adc
or
sbb
orl
push
fwait
test
cld
mov
mull
adcl
and
aas
cmpl
cwtl
fisubrl
std
imul
dec
test
mov
xor
gs
inc
mov
cmp
mov
dec
adc
loopne
mov
cmp
shll
popa
fs
and
adc
add
scas
dec
jae
fildll
fnstcw
out
push
adc
mov
push
jae
pop
aas
pop
lcall
mov
in
cwtl
dec
loop
into
jge
dec
les
push
popa
pop
mov
push
scas
sbb
test
iret
insl
mov
in
movsb
xlat
ss
inc
mov
jo
icebp
adc
rcr
lfs
outsb
ficoml
xor
pop
adc
cmc
xlat
mov
test
sub
add
test
stc
dec
push
adc
jne
notb
jmp
mov
insb
out
jbe
inc
out
cmp
xor
xchg
sbbl
inc
and
shll
insb
push
js
push
cmp
pusha
out
pop
sarb
fldl
adc
xchg
cmc
rcll
out
pop
rorb
dec
jae
fs
add
add
xor
mov
or
lods
out
cmp
je
call
mov
ja
notl
ss
iret
dec
lcall
lahf
lock
test
mov
add
je
mov
test
push
jecxz
pop
fisttps
push
lock
mov
in
jecxz
push
push
push
fsubl
sub
inc
cmc
data16
leave
cmc
or
enter
add
xchg
push
das
sub
pop
cmp
int
and
lret
xlat
dec
pop
loop
subl
sub
jne
call
dec
push
fsubl
xchg
add
jg
and
or
add
aas
mov
out
mov
scas
pop
adc
int3
mov
aaa
jno
xchg
jae
pop
ficoml
mov
cs
pop
pop
pop
testl
pop
movsb
inc
lds
sbb
incb
int
adc
inc
adcb
and
pop
jne
cmp
or
adc
ljmp
pop
inc
pop
lret
lds
sbb
push
mov
and
in
xor
lret
test
stos
out
adc
jmp
insb
mov
add
lea
fsubl
fst
setae
cmc
adcl
sub
js
adc
std
jb
mov
and
data16
stc
pop
jp
jno
jmp
call
int
xlat
inc
jecxz
push
mov
sub
dec
or
mov
leave
aas
mov
ljmp
push
roll
mov
mov
dec
add
sub
lret
sub
add
push
sub
mov
cmp
loope
jle
mov
cmpsl
pop
bound
bound
test
popa
aam
xchg
push
pushf
dec
adc
mov
or
icebp
aas
call
sub
inc
ljmp
ret
test
push
cmp
pop
cmp
adc
add
add
push
mov
sbbl
jecxz
adc
insb
push
push
es
inc
and
ljmp
pop
les
sbb
fdiv
jge
mov
iret
mov
xor
pop
mov
shll
push
inc
inc
pavgw
jnp
mov
and
add
ret
cld
outsb
xchg
inc
adc
xchg
or
cmpsb
rorb
data16
or
xorl
popa
fwait
imul
sbb
gs
and
cltd
mov
repz
mov
push
mov
push
stc
nop
gs
loop
repnz
jle
mov
pop
jae
pop
mov
jge
mov
lret
das
mov
mov
negb
pop
mov
in
xchg
mov
in
mull
add
stos
leave
fstpt
roll
or
push
sbb
into
dec
pop
inc
int
fldt
out
mov
sub
push
dec
pusha
fpatan
stos
pop
jnp
jp
mov
ret
sub
cmp
inc
out
xor
leave
fucomi
rclb
imull
push
push
repz
and
icebp
lock
pop
push
sbb
jb
and
xor
push
push
stc
hlt
loopne
mov
leave
out
push
das
shrl
cmp
arpl
sbb
dec
das
fwait
xchg
pop
mov
jle
mov
je
fs
mov
xchg
insl
pop
fstpl
push
jecxz
add
xchg
xor
sub
divl
xorl
sub
dec
daa
cmpsl
push
cmp
fsub
enter
mov
hlt
xor
imul
leave
sbb
inc
aas
xlat
lret
or
in
repnz
inc
jecxz
packuswb
sbb
lcall
and
cmp
cltd
insl
mov
and
cmp
push
imulb
data16
jmp
mov
clc
pop
shr
aam
dec
lods
fidivs
in
pushf
xchg
data16
or
dec
cmc
fildl
scas
cs
mov
add
xchg
xchg
arpl
stos
ret
and
ficoms
aad
sbb
cmp
xchg
inc
fs
lds
cltd
or
andl
scas
arpl
mov
imulb
xchg
into
leave
xchg
outsl
andl
pop
or
neg
jmp
and
xchg
adc
ret
ds
adc
mov
testl
cli
aam
jmp
rclb
inc
pop
scas
fbld
jns
mov
fs
mov
rcll
outsb
mov
pop
insl
jl
xchg
add
lods
mov
xchg
es
insl
mov
popf
gs
rcl
cs
test
aad
xor
mov
enter
mov
cmc
push
jmp
data16
or
or
iret
mov
lds
mov
mov
cmp
sbb
sbb
mov
lock
sbb
mov
cmc
sub
shr
cmp
mov
scas
dec
movsl
sbb
push
in
test
adc
jg
jo
adc
scas
mov
and
iret
mov
pop
mov
adc
pop
xor
sub
test
push
inc
add
jge
cmpsb
in
add
add
imul
scas
pop
jno
cmp
and
daa
in
bound
sbb
loope
lcall
xorb
arpl
and
in
xor
shll
ret
stc
adc
mov
and
push
jecxz
inc
stos
xchg
in
cltd
nop
push
insb
in
mov
div
pop
xchg
outsl
insb
ljmp
test
push
cmc
fbstp
imul
xchg
in
cld
nop
ljmp
popa
das
xor
sti
cltd
rorb
lock
pop
pop
addr16
mov
imulb
sbbl
movsl
or
inc
imul
push
ret
mov
pop
mov
movsb
sub
int
stos
or
gs
jb
push
dec
or
out
sbb
push
jo
pop
orl
inc
notl
dec
fs
add
and
push
out
push
xchg
mov
les
cli
leave
pop
mov
ds
cmp
sbb
sub
or
dec
ljmp
xor
adc
jbe
sbb
stos
jecxz
mov
ficoml
sarl
and
flds
mov
push
pop
aaa
es
pop
les
push
insl
inc
mov
sbb
ss
dec
ret
sub
dec
dec
mov
jmp
rep
mov
or
mov
lahf
stos
ret
movsl
dec
mov
mov
into
cmp
test
jp
cmp
xchg
cmp
aam
and
jbe
sub
aam
mov
jecxz
jmp
jo
inc
arpl
pop
call
sbb
mov
out
sub
cmpsb
outsb
push
or
stos
pushf
jmp
enter
mov
loopne
loope
mov
sbb
mov
lods
adc
push
lods
push
mov
jmp
ja
enter
xchg
lahf
popf
shl
out
test
outsb
mov
enter
or
jecxz
adc
nop
inc
mov
ds
loope
pop
jns
xchg
repnz
outsl
iret
adc
or
xlat
fldenv
mov
adc
out
inc
ljmp
mov
cmp
add
into
sub
enter
and
dec
lcall
stos
push
adc
sub
push
mov
mov
lea
push
jg
jmp
push
orl
sti
xchg
push
jno
shrb
jns
push
pop
mov
and
or
jge
clc
inc
sub
sub
jmp
mov
data16
push
insl
sbb
xor
pushf
cmpl
push
sbb
xchg
shll
xchg
jle
negl
jnp,pt
sti
sbb
push
imul
incl
cmp
iret
rorb
pushf
adc
dec
xchg
cld
dec
inc
test
and
divb
push
jns
stc
jne
lds
add
xchg
mov
adc
ja
test
imul
jno
scas
jo
jbe
shrl
jb
out
pop
xor
jne
cltd
or
cwtl
push
repz
fwait
sub
and
inc
fwait
imul
xchg
rcl
add
jge
dec
inc
jbe
dec
jae
inc
xor
sub
mov
dec
imul
loope
and
pop
sub
ret
pop
notb
push
xchg
jo
xor
push
sti
mov
mov
mov
jo
inc
or
push
xchg
and
push
push
dec
mov
or
sar
pop
lods
rcrb
mov
pop
mov
repnz
inc
or
mov
cltd
pop
mov
mov
je
test
mov
jge
adc
dec
push
push
repnz
ficoml
push
cwtl
in
pop
sbb
scas
xor
lea
lds
xor
sbb
rorl
mov
mov
fildll
inc
pop
mov
sbb
cmp
xchg
scas
pushf
adc
lret
in
push
fidivl
push
cmp
pop
iret
les
aad
inc
dec
iret
sub
or
inc
subl
lds
mov
shll
dec
lret
jae
xchg
dec
loop
xchg
mov
ds
jns
jae
pop
or
mov
push
adc
faddl
rolb
cmpsl
repz
lret
add
add
mov
xchg
mov
sub
ffreep
cltd
xchg
mov
push
mov
sbb
clc
push
adc
sub
adc
bound
or
pop
xor
xor
popa
bound
push
sbb
mov
mov
lea
stc
stc
loop
out
mov
mov
pusha
outsl
push
cmpsl
nop
ret
xchg
mov
pop
sub
ret
sub
cwtl
xchg
mov
arpl
and
rolb
out
ffree
bound
sub
add
std
movsl
jno
loope
inc
xchg
mov
add
pop
xor
fbstp
push
iret
and
cmp
mov
dec
sbb
mov
mov
js
lods
pushf
inc
pop
test
and
pop
dec
shrl
fstl
ret
popf
cmp
ss
xlat
add
mov
fsubp
sub
daa
loop
rorb
mov
decb
adc
jnp
loopne
ret
shll
insb
xchg
sbb
xor
mov
adc
fimull
test
scas
ficoms
adc
cli
jnp
pop
sar
inc
adc
push
mov
fwait
push
repz
inc
rclb
xchg
add
inc
mov
in
iret
jecxz
mov
xor
adc
xor
pop
enter
jno
xlat
mov
jns
adc
and
sub
pushf
and
cltd
sub
mov
jns
fisttpl
loope
xchg
adc
out
jmp
add
mov
xor
cmp
pop
test
lock
and
out
loopne
jmp
shl
test
push
jg
cmpsl
mov
dec
and
je
outsl
mov
mov
adc
je
shll
or
mov
sbb
daa
test
ja
lret
pop
sahf
addr16
adc
adc
xchg
jecxz
cwtl
lods
xor
mov
jbe
das
mov
push
aas
and
ja
jge
lds
fadd
sbb
sub
pop
fistpl
jmp
jmp
out
sbb
movl
cmc
jg
iret
leave
push
pop
cltd
mov
add
packsswb
push
cmp
arpl
test
cmc
xchg
js
lgs
inc
sbb
inc
xorb
jl
inc
fisttpll
imul
mov
shrb
test
ja
lahf
xor
fsubrl
insb
std
popa
add
xchg
adc
fistpll
jne
pop
push
jnp
cmpsb
jns
insl
icebp
inc
fldl
outsb
mov
sbb
xor
shl
inc
outsl
aaa
sub
push
rcll
inc
shll
test
ss
and
jge
xor
roll
pop
adc
mov
shrl
xor
xchg
dec
mov
call
jmp
inc
ret
inc
loopne
clc
inc
lret
pop
sbb
xor
mov
xor
fstl
sti
push
js
addb
push
add
dec
or
inc
in
cmpxchg
call
xchg
cmp
inc
sub
repz
imul
pop
cli
adc
pop
setb
and
push
xchg
and
xchg
es
adc
fisubrs
or
mov
jns
mov
lcall
test
and
sub
stc
scas
sbb
pop
xor
dec
jbe
aaa
dec
notl
adc
xlat
jp
and
stc
pop
pop
mov
hlt
push
pushf
roll
sbb
inc
cmp
xor
and
pop
xchg
cli
cmp
aas
inc
inc
lahf
sub
jg
jnp
cltd
pop
in
jb
jb
xchg
mov
shl
push
shlb
ljmp
lods
enter
sub
outsl
es
ror
sub
jge
subb
popa
sub
mov
xchg
fimull
fs
and
xlat
popf
cmc
mov
inc
mov
or
push
imul
pop
and
mov
dec
cmc
cwtl
push
add
jns
mov
aad
enter
push
add
or
inc
iret
jmp
lret
push
adc
rep
ljmp
cmpsb
add
mov
rolb
and
int
fistpl
pop
enter
pusha
adc
add
jno
movsb
mov
lret
adc
push
pushf
andl
ljmp
and
mov
cmpl
sub
std
dec
mov
cmp
pop
mov
jnp
or
inc
sub
pop
scas
dec
pop
cltd
sbb
ret
fcoml
mov
imul
movl
jge
cmp
sub
into
dec
jp
sbb
fimuls
mov
or
pop
xchg
popl
dec
add
sub
pusha
sti
imul
je
aas
test
mov
mov
adc
sbb
aad
jbe
sub
movsl
push
dec
mov
lcall
hlt
lret
xor
mov
adc
mov
or
xor
jnp
sbb
jne
pusha
test
pop
cmp
cwtl
pushf
inc
adc
or
into
pop
ds
pop
lgs
jns
lods
hlt
addl
adc
xchg
sbb
cmp
inc
fcoml
test
out
xor
xchg
iret
push
or
mov
push
std
outsb
sbb
pop
lods
xor
mov
daa
stos
pop
mov
add
mov
sub
test
imul
fistl
jl
sub
sub
pop
mov
inc
sbb
and
inc
pop
je
xchg
inc
push
pop
out
push
daa
addr16
iret
inc
xchg
or
data16
add
aad
adc
ds
xor
xor
jno
mov
movb
adc
xchg
mov
loop
leave
int
cld
and
xchg
xor
sub
movsb
ss
and
mov
mov
inc
je
dec
cmpsl
div
ss
int3
sub
mul
adc
xchg
gs
inc
lret
xchg
lret
int
pop
and
pushf
push
cmp
fbld
mov
mov
mov
fcmovnu
sub
cltd
fidivl
ja
and
test
sahf
jae
scas
jo
bound
cmpsl
iret
sub
sub
rcl
in
movsl
sbb
xor
mov
clc
jnp
inc
into
mov
jb
xchg
popa
push
xor
mov
test
xor
adc
pop
pop
lods
clc
lahf
bound
scas
popf
inc
mov
dec
ret
sbb
xor
jl
or
dec
push
aaa
test
je
xchg
aas
orb
fwait
inc
cld
jl
mov
xchg
cli
notb
mov
pop
push
sbbb
xchg
mov
inc
push
jns
dec
jae
fdivr
mov
cmp
sarb
fidivl
loope
stos
jmp
call
jae
popa
mov
rorb
sbb
mov
testl
mov
cltd
bound
xlat
cmp
pop
mov
mov
jle
dec
pusha
adc
ret
mov
jb
and
dec
sbb
pop
adc
test
mov
popa
test
and
lds
cmc
mov
xchg
lcall
add
hlt
into
fnstenv
repz
cs
jge
ret
leave
hlt
cmp
mov
adc
pop
push
imul
hlt
jnp
addr16
imul
enter
lds
and
fbstp
repz
adc
adc
push
std
fstpt
xor
dec
cwtl
push
mov
test
cmp
movsb
pusha
mov
and
jae
testl
jae
out
or
xchg
aas
stos
sub
mov
mov
lret
outsb
and
pop
cmp
fcomps
enter
pusha
repnz
ja
dec
xchg
push
adc
loope
inc
add
jg
pop
sub
adc
jns,pt
je
scas
mov
mov
lret
xor
cmpsl
sahf
jno
das
in
mov
dec
mov
enter
shrl
lock
scas
call
shl
jmp
stos
xchg
test
jge
cmc
jecxz
or
adc
mov
xchg
adc
jp
ja
xor
iret
lcall
ljmp
mov
fdivr
xchg
push
mov
mov
sub
sbb
daa
aaa
imul
daa
adc
cmp
add
sub
fimull
jno
orl
push
stos
push
pop
mov
sti
sub
cmp
outsl
mov
sub
test
and
daa
outsl
sbb
push
inc
pop
or
adc
lret
loopne
inc
mov
in
pop
add
jg
push
add
push
cs
xchg
push
int
mov
fdivr
and
mov
daa
insl
jmp
and
arpl
cmp
fstpt
subl
aas
int3
mov
cmp
int3
fptan
xchg
test
pop
xchg
push
repz
enter
jb
or
inc
mov
mov
fnstcw
mov
out
std
dec
add
adc
enter
andl
sub
pop
outsl
xchg
jmp
sub
cmp
xchg
shl
xor
leave
outsl
cmp
and
mov
sub
out
pusha
xor
nop
repz
jmp
jl
and
push
pop
xchg
outsb
test
aad
icebp
scas
adc
lock
xchg
nop
in
repz
sub
and
dec
js
or
imul
dec
lahf
rorl
ret
mov
xchg
pop
subb
mov
mov
int3
or
movsl
or
add
and
pop
dec
cld
fidivrl
adcl
lock
xchg
lahf
push
into
pop
loopne
fistps
mov
xchg
mov
xor
cwtl
fisttps
and
nop
cld
sbb
inc
in
dec
dec
jl
xor
aas
inc
ljmp
mov
mov
in
sbb
mov
leave
add
int
sub
xchg
pop
repz
cld
xchg
out
mov
dec
cmp
xchg
in
aaa
enter
push
out
xchg
test
aaa
ret
js
lods
test
out
movsl
dec
imul
daa
iret
adc
inc
stos
sub
sub
sbb
leave
aad
clc
xchg
test
aaa
rorl
fsubrs
fldenv
inc
test
jp
or
rorl
add
int
jl
jns
aad
fdivrs
push
call
ss
fsubl
sub
enter
fimull
dec
orb
jae
xchg
adc
push
lret
jnp
push
and
dec
xor
ret
arpl
push
les
adc
cltd
push
xchg
or
mov
stos
cmp
mov
adc
call
lahf
call
push
nop
or
and
dec
jns
bswap
daa
aad
sub
sbb
adc
lods
pop
xchg
push
sbb
roll
insb
xchg
xchg
pop
ret
in
ret
jmp
popa
jnp
daa
mov
testb
push
addb
int3
cld
mov
xor
ret
ljmp
sub
cmp
push
push
dec
cmp
push
ds
in
loop
mov
push
cmp
mov
les
adc
adc
jp
mov
idivb
addr16
pushl
xchg
dec
inc
outsl
fisubs
movsb
subl
xor
jno
aad
rcll
jns
jmp
into
jbe
pop
xor
fcmove
inc
hlt
fdivl
mov
rclb
xorl
lahf
loope
icebp
add
dec
xchg
sahf
and
inc
mov
sub
lock
mov
cmpsl
mov
xor
movsl
jns
mov
fisttpl
push
xor
icebp
mul
cmpsl
lcall
jmp
cltd
cli
out
cmp
jmp
mov
and
popf
repz
in
decl
cs
mov
push
rcll
xor
xchg
push
xor
xor
xlat
xchg
mov
into
dec
inc
mov
fistps
and
xor
xchg
rcl
xchg
inc
adc
loop
mov
in
jo
ss
neg
xor
subl
cltd
and
jb
add
and
out
out
cmpsl
lods
sarl
popa
cmp
stc
pop
shrb
movsl
stos
mov
mov
mov
fadds
sahf
mov
daa
and
lds
sub
dec
pop
adc
mov
scas
bound
sbb
push
mov
fcmove
cs
popa
sahf
adc
loop
dec
imul
jge
cmp
lods
pushf
cmp
maxps
adc
sarl
outsb
pop
jnp
adc
mov
out
sbb
arpl
aaa
mov
inc
push
push
push
jno
data16
ret
jl
lahf
fildll
shr
iret
xchg
test
inc
dec
xchg
pop
int3
jge
and
jmp
in
xchg
js
jle
test
and
out
sbb
dec
ja
fisubrs
xorb
lea
lods
call
hlt
sub
lcall
xchg
xchg
pop
fldcw
inc
add
xor
inc
cmp
in
or
mov
cmp
out
inc
mov
adc
push
push
into
repz
add
fimuls
filds
leave
xlat
push
push
aas
shll
fdivs
mov
insl
sub
das
sub
in
inc
lds
ret
sub
popa
pop
popf
jbe
in
xor
cld
fs
mov
adcb
jl
test
popf
or
les
pop
movl
outsl
aad
nop
clc
push
lods
dec
cmp
mov
jecxz
in
out
addl
pop
jo
inc
or
xchg
rcrb
mov
orl
add
adc
add
iret
sub
test
lock
mov
insl
popf
sahf
mov
cmpsl
cli
fistps
subb
mov
dec
into
sbb
pop
inc
ljmp
dec
jo
test
shr
cwtl
push
inc
fldt
cmp
adcb
jge
ds
arpl
pop
mov
pusha
xchg
rcrl
or
mov
xorl
cmp
adc
dec
pop
xor
shlb
js
mov
into
mov
add
arpl
xlat
xchg
xor
xchg
mov
sahf
je
dec
and
mov
xchg
dec
in
xchg
test
bound
or
test
mov
jns
std
mov
sbb
pop
xchg
aaa
or
rorl
xchg
out
push
jb
out
jl
cld
jne
out
lret
ret
cmp
aaa
cmp
push
fwait
nop
xorl
push
xchg
sub
int
je
std
mov
lret
aaa
sbb
mov
jns
jae
and
mov
cmpsl
test
orps
push
lock
push
movsl
cld
mov
aas
sub
fnstsw
jecxz
xchg
dec
hlt
push
jne
repnz
mov
dec
cltd
cmp
jg
ret
jb
pop
cmc
adc
test
sub
mov
shl
sbb
je
aaa
sahf
test
rclb
or
pushf
out
rcr
xchg
in
xchg
stos
ret
in
inc
jno
fwait
and
mov
ja
subl
scas
imul
outsl
jnp
js
mov
sub
inc
icebp
dec
movsb
and
push
repz
insb
pop
cli
movsb
loope
dec
mov
add
inc
or
inc
or
cltd
std
rorb
mov
or
inc
aas
and
mov
stc
mov
mov
inc
mov
fidivrs
imul
out
jp
ds
mov
inc
movsl
sbb
stc
or
mov
lahf
xchg
in
cltd
pop
mov
fsubl
xchg
test
inc
std
mov
outsb
stos
fldenv
in
push
cmp
dec
jo
mov
aas
pop
jb
call
cmpsb
push
fdivrl
gs
pop
sbb
jbe
and
imul
pop
addb
inc
fadd
cmp
imul
push
movsl
mov
jmp
out
shrl
in
cmp
lea
xor
xor
adc
ds
sbb
mov
hlt
pop
mov
and
subb
xchg
pop
loop
lret
ljmp
stos
lsl
in
cmp
sub
push
das
js
cwtl
cmc
push
insb
aad
and
adc
jle
dec
mov
add
pop
sub
sub
pop
gs
push
push
sarb
test
int3
gs
scas
push
cltd
jp
xchg
sub
cwtl
sbb
ss
in
hlt
xor
push
ret
mov
repz
or
cmc
xchg
pop
lock
cmp
ljmp
sarl
outsb
sbb
outsl
aad
cwtl
je
and
sbb
test
int
sti
dec
push
and
leave
cwtl
fistps
mov
xor
pop
and
outsb
add
repz
xor
cmp
iret
mov
enter
jle
ja
enter
insl
fimull
enter
push
insb
dec
aaa
sti
adc
mov
lcall
int3
add
xor
out
stos
push
mov
shlb
pop
xchg
xchg
lret
mov
ret
cmp
insb
cmp
setne
iret
sahf
jo
cli
aaa
outsb
mov
lahf
and
les
cli
and
jecxz
jb
xchg
test
orb
inc
push
hlt
sbb
loopne
jl
pop
iret
shr
js
ljmp
jbe
dec
dec
jg
xorb
jmp
push
scas
inc
aas
rcll
movsb
int
inc
add
add
sub
andb
fcoms
test
rorb
fmull
cs
add
pop
mov
hlt
cli
imul
xlat
xchg
rep
jbe
js
mov
dec
inc
xorb
jo
add
sbb
aam
lahf
jnp
pusha
into
mov
mov
mov
xlat
and
adc
mov
xor
cmp
daa
fnstcw
stc
stc
or
jae
nop
pop
sbb
sub
push
xor
in
adc
cmp
jno
ret
fwait
pop
jp
xchg
xchg
cmpsb
scas
pop
mov
inc
xorl
nop
rcl
add
mov
out
dec
inc
sub
lcall
es
push
lret
fisubs
jne
scas
sbb
ja
mov
repz
dec
and
jno
inc
test
mov
das
jne
frstor
in
jne
in
fisttpll
push
fldcw
jl
xchg
mov
mov
mov
mov
int3
cmc
sbb
loope
scas
addb
add
lret
pop
pop
mov
pop
sbb
adc
hlt
test
adc
xor
int3
push
or
pop
push
ja
push
bound
aad
push
fcoml
es
mov
inc
popf
pop
push
outsb
ror
pop
pop
mov
and
xor
adc
leave
mov
divb
jg
mov
mov
jb
cmp
push
jb
xchg
sahf
imul
push
mov
xchg
cltd
rcrl
mov
adcl
mov
dec
scas
sub
mov
sbb
push
insb
jmp
lods
jne
sub
movsl
sub
pop
mov
leave
jg
cmp
sub
lcall
in
nop
cmp
xor
popf
or
sub
mov
outsl
arpl
xor
push
xlat
add
leave
mov
mov
ljmp
mov
xor
jnp
cs
dec
sbb
lock
test
stos
mov
mov
xchg
add
andl
xor
adc
xchg
sub
mov
rcrl
adc
fdivrs
filds
jge
pusha
adc
dec
rcll
push
mov
cmp
repnz
adc
shlb
pop
mov
aam
cld
cltd
cmp
stos
mov
inc
and
int
mov
divl
cld
dec
and
sbb
aaa
shl
arpl
adc
pop
sub
pop
incb
push
push
xlat
and
adc
xchg
pop
lds
pop
xor
dec
dec
or
movsb
push
sub
mov
test
lods
and
aam
dec
jmp
and
and
cmp
jg
and
lahf
sbb
or
jmp
fwait
clc
inc
ret
add
mov
in
das
and
inc
mov
int
dec
pop
xor
sbb
add
mov
insl
jnp
mov
xor
add
dec
fidivl
inc
gs
cmp
aad
cmp
leave
or
outsl
pop
pop
and
xchg
mov
aaa
mov
sub
add
and
add
push
jae
es
scas
or
dec
xchg
scas
bnd
ljmp
outsb
sub
imul
add
or
imul
mov
adc
lods
mov
mov
int
cwtl
testb
adc
mov
sarl
pop
imul
loope
inc
movsl
iret
subl
and
paddusb
inc
scas
sub
lea
and
pusha
inc
xchg
mov
fcomps
sbb
pop
addl
xor
lret
xchg
movsl
and
scas
jl
and
out
insb
jecxz
shlb
and
stc
outsl
gs
mov
dec
dec
popf
adc
jge
stc
es
inc
rorb
gs
in
xlat
mov
push
or
inc
mov
sub
scas
and
sbb
push
imul
lret
daa
or
rcrb
lahf
outsl
push
test
mov
cmc
sahf
adc
lods
sahf
mov
adc
adc
mov
or
mov
test
jecxz
xor
sti
loop
call
mov
mov
xchg
xor
adc
pop
xchg
mov
fidivs
xchg
mov
mov
lds
sbb
popa
sbbl
int
xchg
js
repnz
push
push
mov
scas
shlb
stos
int
xor
pop
mov
inc
push
sbb
jns
sub
ss
stos
mov
shl
arpl
mov
mov
ja
or
imulb
adc
pop
fsubl
inc
int3
pop
jmp
ds
fisttpl
hlt
mov
ja
mov
clc
pushf
imul
mov
inc
jbe
sbb
or
movsb
or
ljmp
jmp
push
pop
jns
pop
out
ret
mov
movsb
mov
imul
add
in
jmp
mov
fsubrl
test
out
xchg
mov
sbb
pushf
mov
sub
nop
ds
and
pop
xchg
pop
adc
dec
imulb
popf
fists
dec
sub
jne
and
jb
mov
orb
pop
dec
sub
xor
push
test
lcall
xchg
mov
inc
mov
clc
cli
adc
sarb
outsl
and
xchg
fidivs
sub
popf
jecxz
inc
cmpsl
mov
nop
cmp
movsb
in
mov
push
aas
push
cmpsl
mov
cmpsb
add
dec
repz
fisttps
out
sub
pop
inc
cli
sub
fdivrl
jbe
shlb
jae
pop
dec
shl
gs
je
add
arpl
push
mov
and
repz
out
int
mov
pusha
and
pop
jo
and
imul
push
xchg
dec
pop
mov
or
dec
jae
test
loopne
dec
test
jbe
adc
outsb
out
mov
jle
in
lds
loop
lods
cwtl
adc
into
jb
sbb
aaa
add
dec
rdpmc
adc
cmp
mov
cmp
xor
xchg
xchg
cmpsl
pop
mov
sahf
inc
mov
flds
pop
std
inc
out
or
or
ljmp
dec
xchg
out
addl
cld
push
in
cmp
mov
lret
xchg
ds
or
dec
add
movsb
adc
movsb
push
mov
pop
cmp
mov
sub
imul
repz
es
test
decl
fbstp
mov
stos
cmp
imul
jmp
xchg
sahf
or
out
daa
add
fbld
shlb
dec
fcom
pushf
sbb
xor
cwtl
or
in
sub
xchg
subb
jbe
neg
add
jg
or
pop
shrb
xchg
sub
xchg
dec
add
cli
lahf
fmuls
dec
or
das
push
push
cli
cmp
pop
mov
lods
push
int
in
sbb
movsb
mov
pop
adc
lret
arpl
xor
fisubl
std
mov
popf
sub
js
inc
jp
clc
xlat
dec
scas
push
fstps
stos
movl
add
xchg
movsl
arpl
cmpsb
loopne
add
out
repnz
in
mov
mov
mov
call
scas
leave
cmp
rol
sbb
mov
mov
repz
pop
push
sub
lret
popw
or
push
and
sbb
xchg
mov
stc
loop
ret
inc
adc
lret
scas
mov
cs
dec
mov
stos
and
frstor
outsl
jg
popf
jle
or
inc
imul
inc
add
je
lret
xchg
adc
pop
ljmp
and
sahf
sub
mov
mov
jae
daa
insb
jns
adc
add
push
loope
fprem
xchg
mov
push
add
ljmp
repz
mov
jge
push
mov
cmp
fldcw
cmc
ljmp
notl
enter
mov
ficoms
dec
andl
cmp
cli
xchg
fstl
inc
jbe
and
mov
or
inc
or
pop
lcall
clc
ror
add
pop
ficompl
pop
adc
or
jp
cmc
lahf
mov
arpl
mov
xor
mov
or
jl
add
adc
lcall
xlat
ds
test
pushf
cltd
in
pop
adcb
xchg
mov
mov
ret
mov
fwait
pop
mov
nop
sbb
pop
je
xorl
fisubrs
mov
push
xlat
std
js
pop
mov
mov
mov
pop
or
pop
xor
fstpl
or
fdivp
sbb
test
movsb
adcl
lahf
popa
xor
enter
mov
pop
sub
mov
inc
int3
or
pop
xor
movsb
aad
sbb
sub
push
gs
sub
and
cmc
push
dec
add
loope
jmp
mov
mov
movsb
shlb
pop
push
dec
pop
out
jmp
adc
cmp
fdivrp
dec
dec
cmovb
sahf
in
leave
xchg
jle
inc
addr16
fucomp
mov
dec
mov
pushf
or
pop
or
insb
enter
jge
arpl
shlb
and
aaa
xchg
jge
ficompl
icebp
dec
mov
and
aaa
mov
pop
lret
push
add
push
test
int3
jno
aam
xor
out
dec
mov
iret
jnp
cmpsb
lret
jo
push
scas
dec
loop
fidivl
mov
in
mov
pop
call
fwait
sub
pop
mov
aaa
mov
scas
xchg
fcoml
ss
xchg
mov
movsl
inc
pop
enter
ret
xchg
pop
bound
sub
xor
rol
xchg
fdivp
aaa
xchg
cmc
push
addr16
inc
test
insb
xor
popa
test
shrb
test
mov
les
jae
lods
fs
hlt
sbb
mov
jmp
adc
std
inc
xchg
out
mov
mov
andb
xchg
cld
sbb
cmp
arpl
mov
jge
insl
fiaddl
adc
jecxz
adc
repnz
mov
sbb
and
adc
cs
clc
mov
xor
movsl
mov
call
data16
popa
xchg
mov
inc
dec
xor
push
or
iret
out
mov
cltd
sbb
mov
mov
lcall
xchg
cmp
mov
data16
adc
in
aaa
push
jae
cwtl
daa
push
add
ret
mov
popf
adc
and
lahf
inc
in
pop
pop
or
lock
lahf
pop
or
lret
into
xchg
lds
dec
jl
push
lods
jmp
xchg
pop
dec
sahf
outsl
adc
out
test
adc
sbb
repnz
cld
jmp
dec
rolb
sub
mov
xchg
call
jne
or
fisttpl
pop
fstps
pop
in
add
out
repnz
mov
xchg
lods
stos
call
jmp
cltd
mov
adc
push
adc
mov
jne
add
ljmp
movsb
sbb
sbb
into
loope
ja
inc
outsl
leave
repz
xchg
xor
pop
inc
out
jp
das
xor
cmp
les
push
mov
dec
movsl
shrl
subl
pop
pop
mov
aam
xchg
push
popf
aam
leave
xorb
adc
sahf
cmpsb
jg
lods
adc
and
or
pop
loope
insl
idivb
call
jb
add
and
icebp
and
insl
shlb
pop
aas
pop
pop
ret
out
idivb
in
addb
cli
mov
push
pop
sarl
cmp
xor
fadd
dec
lds
xor
cltd
fwait
cltd
popa
sbb
mov
sub
add
pop
orl
cwtl
loope
push
lds
xchg
dec
push
enter
and
std
lds
pushf
sub
jns
push
cwtl
mov
or
or
mov
mov
jo
arpl
sub
rcrb
xchg
not
idivl
sub
test
push
add
push
xlat
shl
roll
mov
imul
idivl
mov
inc
mov
jmp
clc
fs
mov
popf
push
dec
jnp
sbbl
mov
jae
lods
fs
add
mov
fildl
and
bound
mov
ret
dec
lret
int3
dec
inc
add
mov
cmpsb
aad
jns
jno
iret
insb
out
add
in
inc
or
lret
mov
jg
pop
sbb
roll
xchg
push
movsl
in
js
mov
push
sbb
mov
or
repnz
scas
sbb
mov
cwtl
sub
repnz
sbb
jbe
dec
dec
enter
mov
sub
nop
push
jmp
cmp
mov
sub
stos
into
dec
icebp
mov
fcoms
test
rorb
popa
js
pushf
jecxz
decb
push
mov
sub
lret
out
mov
mov
ret
outsl
pop
mov
adc
xor
enter
jp
shll
es
xchg
je
aas
mov
and
fistpl
imul
jb
inc
aam
inc
or
mov
sub
fmuls
cmp
mov
bndldx
dec
out
and
sbb
test
out
dec
and
xor
rol
lret
in
xchg
sub
pop
das
add
loopne
aaa
push
pop
inc
mov
mov
std
loop
in
cmp
cmc
mov
mov
xchg
cmp
or
mov
sbb
jge
insb
xchg
add
jle
sahf
aad
push
fbstp
cs
pusha
movsb
fcomip
sbb
mov
outsb
repz
das
push
call
xor
stos
push
popa
push
and
rcrb
cli
femms
in
loopne
es
loope
outsl
negb
imul
inc
inc
movsb
test
aas
aaa
fldt
adc
nop
test
fs
xor
fwait
xor
sti
stos
std
sbb
repz
push
cmpsl
sahf
push
rolb
adc
xor
cmp
or
push
mov
hlt
adc
lret
mov
sarb
xchg
jp
pushf
cmp
jle
popl
stos
popa
jecxz
xor
push
imul
scas
addr16
inc
fs
jne
adc
movl
cs
add
mov
fwait
push
mov
cmc
sti
dec
and
in
int
pop
xchg
int
pop
xor
mov
jecxz
push
rcl
pop
inc
aaa
flds
xor
or
clc
xor
stos
cmpsl
fcoml
xchg
sbb
pop
xor
cmp
add
jnp
push
lock
jmp
push
fisttpll
push
and
fisttpll
jge
out
dec
jo
mov
dec
cld
out
sbb
mov
dec
movsl
pop
cmp
sbb
cld
aas
xlat
enter
movsb
xor
leave
adc
or
mov
jg
ret
movq
divl
mov
lock
hlt
test
bound
lods
iret
ret
cltd
jg
insb
or
andb
jg
add
dec
mov
xor
cltd
mov
movb
loope
add
scas
stos
pushf
xchg
je
fidivs
cmp
rcll
mov
into
stc
or
testb
xchg
mov
enter
test
stos
ret
stc
dec
insb
mov
fnstcw
mov
push
add
add
mov
sbb
and
loop
lods
loop
and
xchg
idivb
cmp
sbb
lods
or
rolb
fimull
cs
push
stc
mov
mov
or
ljmp
push
mov
mov
dec
cmc
iret
pop
lret
mov
mov
xchg
popf
les
mov
and
daa
out
dec
je
mov
stos
dec
das
xchg
dec
stc
mov
cmpsl
fistps
pop
xor
cmc
insb
jbe
or
mov
cmp
cli
cli
clc
xchg
outsb
mov
cmpsl
cmp
add
cmp
cwtl
clc
lret
cmc
loop
movsl
faddl
inc
jns
or
jne
add
jnp
mov
pop
imul
shll
enter
std
imul
xchg
inc
jns
mov
loopne
lret
dec
lret
test
ret
xor
idivl
out
xchg
mov
mov
mov
cmp
and
addr16
jno
cmp
cmpsb
cs
ficoml
cmpsb
jb
xor
xchg
jnp
or
xchg
sbb
mul
xor
and
test
mov
sub
js
dec
in
pop
clc
ror
sub
insb
mov
adc
sub
add
je
dec
ja
mov
pop
jne
imul
xchg
lds
pop
push
mov
adc
data16
movl
jp
stos
pop
push
dec
in
cltd
pop
psubw
push
and
out
test
dec
push
loope
pop
cmp
pop
dec
ret
lds
fs
cmp
mov
pop
lock
rcr
pushf
mov
mov
and
dec
adc
mov
test
pop
dec
adc
mov
and
jbe
add
test
adc
sub
shrb
icebp
jge
clc
xchg
shr
cli
pop
inc
push
and
sbb
imul
mov
out
inc
push
pop
add
or
test
int3
cwtl
shll
pop
xchg
andl
cmpl
movsb
leave
cmp
dec
jbe
mov
int
data16
mov
out
push
pop
or
out
gs
adc
sbb
xor
arpl
xchg
pop
nop
lock
jae
jo
mov
cmp
jbe
fcmovne
cld
sub
jecxz
push
sbb
xchg
ja
aam
add
cmp
fistpll
roll
or
pop
mov
mov
cmp
fdivr
cltd
lret
mov
test
cmpsb
decb
or
inc
mov
sub
in
push
ss
es
cmp
test
add
ljmp
add
pop
pushf
inc
dec
jae
xor
cmc
scas
fisubl
mov
sbb
xchg
shlb
sub
mov
mov
jmp
mov
fidivs
pop
addr16
cltd
iret
insl
sub
fs
sub
mov
incl
xchg
das
sub
xlat
orb
xchg
enter
stos
xor
mov
pop
sti
push
jo
pop
xchg
das
pop
insl
cltd
pop
xor
je
jne
jne
or
popa
enter
cmpsb
pop
xlat
mov
scas
xor
leave
sub
pop
dec
test
jno
mov
popf
add
pop
jbe
loopne
fs
adc
dec
sbb
pop
xor
and
sub
in
pop
mov
es
rclb
pop
mov
inc
push
pop
mov
push
inc
mov
dec
int
xor
jle
mov
sbb
popl
or
sbb
es
movsb
jmp
pushf
push
add
addr16
and
cmp
sbb
daa
push
je
adc
push
popa
adc
test
mov
jp
lahf
adc
fmulp
and
negl
xchg
inc
inc
add
outsb
inc
adc
lods
mov
push
rcl
push
loop
xchg
add
or
pop
dec
mov
mov
ja
movsl
aaa
or
dec
push
aas
xor
xchg
xor
push
xchg
mov
mov
test
divb
imul
add
and
mov
and
scas
std
add
dec
out
xor
repz
or
jb
mov
push
xchg
mov
movsb
mov
fwait
pop
notl
sbb
mov
pushf
dec
add
stc
mov
sbb
mov
push
dec
push
pop
inc
dec
sbb
pop
cld
inc
insb
daa
jle
lahf
sbb
mov
xchg
dec
sub
lcall
pushf
sub
sbb
test
scas
jmp
aaa
idiv
push
lcall
jbe
push
fs
or
cvttps2pi
or
int
in
jmp
das
pop
and
and
xchg
daa
cmp
aas
cmp
shlb
mov
adc
nop
clc
das
mov
scas
fisttpl
shll
test
repz
dec
andb
ret
in
aad
dec
lcall
out
sub
lock
and
mov
cmpsl
xlat
arpl
dec
sub
hlt
gs
jne
mov
mov
xlat
jg
pushf
stc
sbb
or
andb
mov
in
leave
into
inc
jb
insl
les
repz
fldl
mulb
push
xchg
push
fdivl
iret
push
pop
es
imul
repz
push
addb
test
outsb
repz
jne
jp
pop
mov
sbb
mov
and
lds
ds
mov
cmc
adc
ljmp
dec
cmp
not
bswap
jbe
ret
cmc
out
mov
stc
sbb
fcomps
enter
les
adc
fs
sbb
out
xsavec
mov
or
andl
and
std
adcl
xchg
or
orl
mov
arpl
jl
push
mov
sub
das
in
adc
jno
cmc
sub
or
sub
xchg
cld
adc
adc
xchg
pop
testl
cmpsb
das
mov
lods
cmpsb
sub
idiv
mov
pop
lods
dec
push
out
or
mov
sahf
pop
mov
rcrl
add
push
gs
and
lahf
push
xlat
adc
mov
jmp
jmp
inc
sahf
add
dec
xor
xor
add
lock
jno
add
out
test
test
mov
nop
pop
sub
or
repnz
jg
stos
jmp
ret
stos
movsl
ds
or
mov
push
cmp
imul
pop
xor
fcoml
mov
movb
lret
int
dec
out
inc
xchg
mov
aad
stc
sub
ss
sub
ljmp
jge
pop
pop
mov
adc
fidivrs
push
or
sahf
xor
insb
jg
fisttpl
adc
push
add
xor
mov
popa
pop
loop
fimull
scas
xor
jno
xor
and
lahf
into
mov
mov
test
addl
mov
mov
sbb
and
cmp
popa
or
push
cmp
pop
popl
jno
mov
fcoml
lds
add
xchg
jnp
pop
mov
pushf
sbb
xor
dec
mov
ss
jbe
gs
aad
xchg
cmp
sahf
inc
and
jns
aam
inc
arpl
enter
push
and
jbe
scas
outsb
or
or
dec
nop
in
scas
fistpl
fwait
cmp
test
add
cmp
mov
dec
imul
lock
mov
and
fdivrl
cmc
lods
pusha
cmp
sbb
lea
mov
or
std
cmp
fidivrs
inc
xor
fsubs
fsubrp
dec
sbb
mov
out
dec
pop
xchg
enter
mov
pop
xchg
lods
pop
add
xchg
test
stos
xor
jno
imul
sbb
pop
in
shrl
ret
cs
mov
cltd
cmp
roll
test
cmp
mov
fwait
add
xor
icebp
mov
push
in
lods
icebp
cmp
cltd
inc
push
out
decb
add
lods
sub
lea
cli
jno
andb
out
push
call
in
sti
shll
jb
mov
fidivl
into
cltd
inc
or
pop
sti
test
inc
es
in
adc
idivl
lret
xchg
inc
push
dec
stos
roll
or
sub
int
inc
rcll
mov
mov
or
lea
fdivrs
gs
sbb
mov
popf
mov
jecxz
xor
sbbb
mov
push
pusha
aas
adc
imul
stos
jb
xchg
popl
push
mov
mov
scas
dec
push
pop
or
fwait
pop
test
js
dec
lods
ds
jae
inc
sub
cwtl
fwait
ret
stos
popf
call
cli
xchg
sub
lea
add
mov
lds
and
dec
xchg
mov
sbb
fs
je
inc
divl
mov
pushf
push
xchg
add
rcrl
xchg
mov
test
jle
dec
dec
imul
add
sub
addr16
ja
sbb
lods
pop
xor
aas
xchg
movsl
test
mov
sub
shrb
push
pop
dec
cwtl
cmpsl
shlb
mov
or
wrmsr
pop
aam
mov
out
xchg
lahf
sub
fistpl
decb
loopne
pop
mov
jge
repz
popf
and
push
push
clc
int
mov
mov
loope
imul
sahf
movsb
xor
rcll
int3
nop
jne
arpl
mov
outsb
jl
insb
push
mov
out
sub
pop
jb
inc
mov
dec
cs
ret
mov
enter
sub
add
lret
cwtl
insl
sahf
or
ss
pop
mov
xchg
outsl
mov
fistpl
jg
dec
or
popf
xor
jns
jge
mov
sti
bound
sbb
or
ds
loopne
xor
sbb
cmp
adc
repz
xchg
test
xor
into
xchg
ja
out
sbb
dec
sbb
inc
je
ja
incl
stos
push
popa
or
iret
dec
in
mov
push
mov
popf
daa
std
loop
test
jg
and
jbe
mov
pop
dec
jp
enter
mov
mov
popf
cmpsl
loopne
push
mov
mov
pmulhuw
ljmp
test
and
sub
aad
push
and
rcl
adc
inc
push
jae
sub
pop
lock
outsb
dec
sub
ljmp
imul
aaa
insb
lret
mov
stc
cmp
adc
push
mov
test
jecxz
mov
js
leave
not
add
pop
iret
jbe
je
loop
out
out
fmull
test
ret
mov
pop
jmp
imul
xor
dec
cmp
xor
stc
mov
xchg
pop
cmp
call
addr16
subl
cmp
enter
cmp
xchg
outsb
iret
xor
dec
jne
in
xchg
xchg
lea
jnp
ss
sti
pushl
push
jecxz
into
xchg
mov
cs
popf
fsubr
sbb
mov
mov
test
pusha
inc
mov
and
push
inc
jecxz
xor
pop
dec
pop
ret
into
aas
mov
push
outsb
out
xchg
jl
dec
popf
lods
fcmovnb
push
nop
adc
pushf
jns
pop
lcall
add
jno
and
add
cli
imul
inc
js
cmp
xor
or
lock
pop
push
in
mov
push
lds
cmpsl
sahf
sbb
push
and
mov
jne
ds
cmp
movb
movsb
mov
pop
xor
mov
adc
scas
sub
dec
xor
pop
and
mov
rcrl
inc
dec
adcl
out
sbb
in
icebp
call
out
daa
dec
inc
sbb
or
hlt
je
xchg
nop
int
loop
mov
lahf
out
add
cltd
or
subl
lea
jo
mov
xor
mov
movsl
jge
lds
les
and
mov
sbb
popf
aad
inc
jl
repz
in
mov
insb
pusha
mov
cld
push
add
mov
inc
push
cmp
pop
in
pop
xchg
fsubrs
push
loope
fs
pop
cmpsl
and
xchg
shr
jmp
aam
mov
adc
jno
fwait
add
inc
cmp
nop
push
stos
mov
mov
loopne
adc
sbb
fisubs
pushl
ret
push
addr16
add
add
xlat
dec
mov
aam
sarb
adcl
stos
loop
cli
pushf
in
jmp
jecxz
ljmp
in
lods
sarb
xlat
mov
fcmovbe
or
test
jg
push
cmp
cmp
push
push
repnz
pop
int
cld
jnp
xchg
imul
adc
lahf
dec
sbbl
pop
mov
mov
or
js
cmp
ds
test
test
xlat
xor
addl
outsl
jp
insl
jns
add
fistl
sbb
in
mov
popf
dec
xchg
mov
sub
sbb
mov
sbb
mov
call
stos
in
lea
inc
jbe
dec
test
pop
inc
xchg
add
jp
xor
or
add
in
sbb
pop
push
push
adc
out
jne
sbb
xor
scas
stos
pop
jl
cmpsb
rorb
push
mov
mov
arpl
bound
push
aam
push
mov
push
push
push
push
into
mov
add
mov
cltd
loop
sub
push
jmp
into
imul
fsubrs
push
xchg
push
dec
cmp
xor
fnstenv
mov
in
fistpll
cld
dec
shrl
idiv
add
aam
icebp
jg
inc
cmc
call
or
gs
cmp
xchg
xchg
push
movsb
xchg
adc
sub
lea
sbb
daa
xor
cs
cmp
aad
shrl
cmpl
lods
cmp
inc
out
mov
pop
rcrb
push
xor
int3
shl
sbb
xchg
ds
loop
cmp
pop
jecxz
cmp
orb
out
and
jg
sub
out
cmpsb
xchg
fs
rorl
lds
push
push
pop
push
arpl
cmp
dec
lods
fwait
loope
lea
pushf
rcl
pop
cmp
or
js
xor
jno
into
cmpsb
push
sahf
aam
inc
mov
jmp
stos
daa
push
cmp
push
jnp
sbb
xchg
pop
xor
test
test
mov
or
xchg
mov
lcall
pop
pop
push
ret
pusha
push
sub
shll
in
pop
add
sub
lret
ret
pop
hlt
or
lret
or
or
jb
mov
movl
mov
mov
mov
and
or
ror
xor
shrb
pop
and
insb
lret
push
xchg
push
jle
inc
dec
shrb
pop
xchg
mov
push
iret
push
rclb
push
fsubrs
scas
movsb
addr16
jbe
mov
scas
mov
inc
pop
inc
jmp
xrelease
test
add
iret
cmpsb
xchg
and
dec
sbb
or
lahf
fstpt
xor
cli
adc
cmc
add
in
inc
xchg
jecxz
cwtl
filds
fidivs
xlat
fdivp
clc
mov
xchg
mov
jmp
mov
movsb
cmpsl
add
popa
pop
xchg
data16
fwait
jp
xchg
cmpsb
and
hlt
mov
mov
xchg
add
movntq
jle
loop
fs
rcrl
repnz
push
sub
shrl
or
adc
jno
inc
imul
mov
das
pop
push
cmpsl
rolb
push
jge
sbb
fmul
or
jp
xor
mov
test
add
jae
loope
mov
in
lret
push
push
dec
or
paddq
rolb
dec
and
xor
inc
dec
fwait
mov
inc
outsb
repnz
mov
inc
and
loop
cmp
fldcw
mov
enter
xor
inc
popa
fisttps
aad
in
int
xor
xor
repnz
push
cwtl
sbb
popa
stos
cli
sahf
stos
xchg
cs
sbb
clc
icebp
mov
fstp
xchg
lret
data16
mov
xor
mov
add
sub
ds
loopne
sarl
adc
int3
mov
mov
pop
les
add
or
cli
nop
add
outsb
xor
test
aam
out
or
cmc
aad
mov
fcomp
add
inc
inc
sub
jl
add
mov
sbb
loopne
push
push
xchg
mov
pop
in
pop
mov
inc
mov
call
cmp
dec
fsubp
push
add
data16
popf
push
inc
rcl
xor
outsl
mov
mov
xchg
ja
loop
sub
mov
into
bnd
ret
mov
cmp
add
cmpsl
xor
fildl
aad
dec
xchg
cmc
inc
aaa
stos
sub
sar
mov
push
cmpl
xchg
lea
mov
fsub
pop
pop
test
in
mul
cmp
mov
shr
mov
push
dec
xor
xchg
pushf
and
test
and
nop
nop
sti
mov
outsl
pop
sub
int
sbb
fstpt
push
out
scas
mov
movsl
xor
inc
push
mov
mov
daa
adc
andl
jne
aad
in
or
repnz
enter
clc
add
scas
movsb
mov
jle
xchg
inc
popa
xchg
mov
rcr
pop
lret
adc
jle
xor
nop
stos
push
arpl
std
ja
mov
jl
or
xor
push
insb
inc
out
lods
popf
mov
subl
es
jae
pop
sti
aad
not
xchg
into
mov
insb
inc
icebp
nop
jle
repnz
jle
mov
xlat
cmp
loopne
shr
inc
mov
outsl
jle
loopne
jbe
dec
sti
and
push
ljmp
jae
inc
loope
std
ljmp
pushf
push
mov
inc
mov
xor
lcall
sub
movsb
mov
jecxz
pop
pop
int
mov
jg
pop
loope
mov
ds
insl
mov
cmp
mov
push
pusha
dec
es
cmp
inc
adc
dec
loopne
loop
ret
fcmove
xor
add
sbb
js
or
imul
xchg
in
add
mov
push
dec
push
and
inc
cwtl
xchg
adc
inc
adc
cmp
out
pop
xor
je
and
ror
pushf
daa
or
lret
push
es
in
push
add
fbld
adc
leave
hlt
cmp
sub
aad
cmpl
out
addr16
sub
jmp
sahf
cmp
cmc
dec
std
inc
inc
popf
cwtl
andl
imulb
out
mov
inc
adc
or
cmpsb
push
cs
xlat
mov
mov
lcall
jnp
mov
aad
mov
aam
jg
outsl
sahf
xchg
push
das
and
test
inc
xor
cmc
or
pushf
insl
xchg
push
ljmp
scas
jae
mov
sub
lret
imul
out
jg,pt
call
adc
test
imul
mov
hlt
fistl
mov
aam
mov
in
dec
outsb
rorl
idivl
pop
xchg
jle
pop
sub
xchg
cwtl
fyl2x
cmp
aaa
lret
fisubs
cmp
sahf
mov
sub
pop
mov
mov
insb
movb
push
xor
loope
test
add
outsl
cli
lret
push
push
jmp
mov
dec
adc
jg
das
mov
mov
cmp
jecxz
into
pop
inc
inc
push
push
sarl
outsl
mov
ficomps
sbbb
call
outsb
xchg
adc
sub
dec
je
mov
andnps
push
stos
jmp
out
mov
dec
mov
adc
xchg
and
rcl
rcrl
add
xor
mov
fdivrs
lds
rorb
cmpsl
shlb
mov
xchg
ljmp
insb
leave
loope
ja
xorb
mov
jnp
lahf
or
sbb
rclb
out
or
xor
inc
leave
push
scas
and
jne,pn
mov
lods
pop
cmp
cmp
add
mov
sahf
pop
lea
test
sbb
imul
push
loop
inc
roll
into
and
inc
adc
ret
and
fwait
jbe
loop
fwait
scas
pop
jg
jnp
insl
and
adc
xor
or
jns
xor
xor
je
mov
pop
cmpsb
add
sub
sti
jl
sub
pop
jno
pop
push
lea
jl
mov
arpl
mov
lahf
dec
lret
stos
pop
lret
shll
pop
ss
mov
out
sub
cld
mov
mov
lods
mulb
js
jns
mov
jge
jp
push
rorb
shlb
dec
mov
jns
out
ljmp
jne
js
mov
xlat
lret
in
scas
int
and
nop
push
les
ss
dec
pop
rorb
repnz
into
pop
cs
xchg
dec
mov
dec
out
js
adc
cmp
inc
and
bound
or
ficoml
pop
pop
int
sbb
aaa
xchg
xchg
add
out
jp
push
cli
imul
sub
adc
mov
add
jne
lret
dec
sub
clc
xchg
xor
add
in
dec
pop
sub
outsb
jno
cmp
sahf
insl
cs
mov
dec
out
je
cli
pop
lods
cpuid
push
cmp
mov
cmp
cmp
scas
test
stos
cmpsb
jmp
dec
rep
stc
ret
jg
mov
push
inc
cmp
xchg
pushf
jl
xchg
push
jns
push
push
sarb
je
cmpsb
ljmp
ss
stos
pop
dec
fwait
or
hlt
sahf
outsb
sbb
loope
xchg
nop
mov
cmp
dec
mov
aaa
inc
cmp
jmp
sbb
incb
stos
fs
xor
clc
or
inc
rcl
jl
add
cmp
xchg
shrl
xchg
pop
cmp
sbb
cmpsb
xchg
mov
jge
or
push
mov
adc
pop
ret
call
push
xchg
xchg
fisubl
mov
or
cli
call
movsl
imul
iret
jne
pop
mov
in
sub
loope
or
hlt
xchg
outsl
or
icebp
flds
mov
aad
inc
xor
jmp
jne
out
jo
push
out
pop
jl
nop
adc
and
int
cmpsb
insl
pop
cmpsl
push
sahf
cmpsb
test
jae
push
cld
push
xchg
mov
jo
or
cwtl
add
cmp
aaa
cmp
mov
mov
add
push
je
jecxz
sub
push
stos
incl
mov
push
pop
xchg
pop
scas
add
jno
or
pop
and
and
cmp
push
or
fs
test
adc
pop
add
pop
nop
or
dec
mov
xchg
in
push
je
leave
pop
jecxz
loope
xor
repz
dec
mov
add
pop
add
jnp
jp
pop
add
test
hlt
imul
les
adc
xor
fsubrs
outsb
frstor
mov
inc
dec
mov
out
sub
rcll
adc
outsb
outsb
in
sub
or
out
xchg
cmp
aas
out
jp
mov
movl
dec
xchg
xor
fldcw
push
fldcw
mov
jne
push
insb
dec
not
xor
iret
outsb
sub
aam
in
xchg
or
inc
rorb
or
jl
jle
pop
mov
mov
call
or
mov
push
das
popa
je
aas
jo
jbe
cmp
and
shll
xchg
push
mov
inc
pop
xchg
jge
xor
es
std
and
jo
fcoml
ljmp
cwtl
imul
test
sub
mov
out
inc
daa
test
aaa
enter
inc
sar
aaa
sahf
push
and
aam
or
or
sub
repnz
pop
repnz
mov
xor
inc
mov
jo
push
mov
es
add
xchg
lods
out
fpatan
addl
sub
aam
sub
hlt
xor
inc
dec
mov
sti
push
and
lds
cmp
sti
pop
es
jbe
dec
orb
or
orb
fdivs
stos
xchg
mov
inc
inc
and
jge
cmp
jnp
in
add
mov
or
cmp
xchg
xchg
in
popa
es
shrl
repz
cli
xchg
icebp
and
mov
cwtl
inc
mov
mov
dec
in
xor
sbb
rcrl
sbb
adc
fdivs
push
mov
pop
adc
mov
bswap
insl
cmp
add
sbb
das
inc
dec
leave
pop
orb
mov
imul
adc
or
test
vandpd
xchg
sub
jecxz
rcrl
dec
sbb
stc
inc
cmpsl
pop
lods
addr16
faddl
mov
pop
dec
xchg
sti
dec
jo
test
imul
jl
push
mov
aas
shr
xor
lods
fdivrl
jle
dec
pop
shlb
sbb
sbb
lea
mov
jae
loope
dec
stos
xor
bound
xlat
cmp
lcall
dec
xor
dec
xor
inc
mov
cmpsb
stc
stc
or
js
xor
adcb
popf
jg
sti
xchg
outsb
shll
lods
or
nop
fsubrl
pop
mov
fsub
mov
cmp
sti
inc
bswap
adc
cmp
and
std
and
sbb
push
pushf
mov
mov
out
sbb
inc
push
xor
cmc
sbb
xor
insl
adc
cmp
data16
sbb
and
mov
mov
imul
ffree
add
dec
adc
xor
sub
xor
adc
movsb
fwait
xchg
lea
neg
int3
inc
dec
iret
fwait
mov
flds
mov
or
mov
repz
sub
das
sbb
outsl
lods
pop
xchg
out
or
lods
hlt
inc
fmuls
cmp
loope
stc
fcmove
lods
jge
sub
mov
cld
cmp
xor
jmp
cmp
popf
fcmovnb
mov
cmp
xor
inc
mov
cmc
push
outsl
insb
outsb
mov
popf
daa
inc
es
nop
outsb
fst
in
sbbb
orb
inc
sarl
popa
inc
jne
push
mov
nop
stos
imul
fwait
xchg
mov
and
mov
aam
and
xor
mov
imul
loope
sar
imul
repnz
xor
fidivl
xor
cmp
dec
sbb
inc
call
dec
int3
mov
adc
mov
adc
pop
lds
loop
ljmp
mov
outsl
pop
adc
loop
bound
mov
das
std
mov
hlt
imul
out
push
sbb
fiaddl
test
repnz
mov
pop
xor
nop
inc
xchg
mov
fimull
out
ja
xchg
pusha
nop
clc
test
in
aad
stos
jnp
pop
sarb
mov
outsb
stos
mov
adc
add
imul
or
loope
imul
and
push
push
add
mov
lods
in
mov
jmp
or
outsb
mov
xchg
je
xchg
jo
dec
cltd
sbb
popl
and
jne
jp
outsb
mov
pusha
mov
std
dec
and
fstps
push
push
jp
xor
stos
jne
cmp
cmp
clc
mov
test
lods
mov
cltd
rcll
cmpsl
jecxz
clc
add
mov
jge
icebp
add
mov
insl
pop
gs
aam
mov
cmp
sub
pop
rcrl
outsb
add
outsl
mov
shll
stos
inc
js
mov
nop
cmc
mov
arpl
in
pusha
dec
dec
je
xor
in
xchg
pop
adcb
fs
addr16
scas
scas
mov
add
outsb
jl
xchg
ss
dec
scas
cmp
aad
mov
in
adcl
fimuls
cltd
fcompl
sub
mov
mov
or
ljmp
inc
loop
jne
cmp
je
mov
dec
scas
inc
xor
xchg
inc
hlt
mov
fdivs
sbb
push
arpl
call
ljmp
mov
shrl
aas
mov
add
jecxz
inc
cmp
aad
or
mov
mov
mov
pop
jnp
mov
and
mov
addr16
mov
popf
nop
xchg
jns
js
or
xor
lock
jno
xor
add
gs
dec
jno
and
les
adc
pop
pop
stos
outsl
push
pop
mov
out
xor
sbb
jno
popa
or
dec
mov
mov
xor
frstpm(287
in
cmpsb
jmp
xchg
push
cmpsb
fidivl
mov
insl
cld
pop
iret
add
jp
rolb
cmp
adc
inc
mov
imul
aas
push
mov
adc
dec
imul
pop
pop
jbe
mov
push
lret
imulb
ds
stos
insb
pop
mov
in
pop
leave
xchg
cmp
and
aad
lock
into
cs
cmp
movsl
mov
mov
insb
sbb
call
inc
fdiv
repnz
mov
mov
sub
pop
dec
movsl
aas
mov
xchg
idivb
xor
xor
and
xchg
sahf
fldt
daa
test
arpl
adc
pop
cmp
imul
cmp
add
jnp
lret
jp
cmp
test
sub
out
aam
sbb
into
add
jo
testl
mov
mov
mov
enter
push
mov
jno
call
sbb
popf
xor
scas
adc
mov
sub
pop
sti
push
jbe
rorb
xorb
adcl
dec
aad
shlb
inc
mov
and
xor
xchg
ficoms
mov
sub
fidivl
and
cmc
jge
loope
arpl
cmp
sbb
pushf
push
testl
xchg
cmp
test
and
mov
aas
sbb
jg
push
popa
test
pop
cmp
iret
jg
xor
outsl
into
xor
xchg
sahf
mov
sti
xor
loopne
mov
dec
in
add
mov
cmp
js
test
lods
jae
out
mov
inc
sub
xchg
test
add
scas
scas
dec
dec
adc
call
repnz
mov
inc
inc
mov
lret
pop
push
fidivl
aas
sub
pop
cltd
addl
mov
and
cwtl
adc
icebp
mov
jg
xor
in
add
xor
cltd
subb
sbb
sbb
dec
jmp
mov
mov
repz
and
stos
out
icebp
dec
leave
aad
ljmp
sbb
mov
test
mov
test
cmpsb
pop
dec
mov
jns
mov
pop
pop
scas
xor
outsb
pop
mov
loope
inc
sbb
lret
xlat
sub
mov
stos
mov
int
push
xchg
jle
adc
sti
stos
iret
call
clc
push
cltd
dec
mov
sahf
inc
in
pop
into
ret
pop
mov
pop
adc
jl
pop
lahf
aam
pop
es
dec
dec
jge
notb
adc
aam
mov
inc
xor
adc
addr16
rcll
jb
jbe
repnz
mov
das
push
lahf
aas
mov
add
sahf
pop
sahf
in
jge
add
les
dec
mov
pushf
xchg
lock
xlat
mov
inc
push
mov
lods
or
jge
fimull
mov
push
repnz
push
popa
sub
mov
or
xor
scas
test
mull
push
fwait
dec
mov
xor
adc
lret
shlb
xlat
pavgw
jmp
int3
add
xlat
rcll
ret
int
push
xchg
fsubr
jecxz
stc
ja
mov
add
or
dec
jge
jo
ja
adc
stc
cmpsb
orl
cmpsb
les
adc
sti
add
push
jmp
leave
cmp
jno
sbb
pop
push
movl
negb
repz
jge
in
sbb
xor
dec
popa
sub
testl
mov
inc
out
cmpsl
pop
adc
nop
mov
lock
mov
add
faddl
icebp
aam
ret
fcoms
call
mov
pop
aas
in
sub
scas
std
sbb
cmp
or
push
xor
arpl
add
pop
cmp
mul
xorb
mov
cmp
xor
sbb
stos
push
sti
sbb
or
pop
add
ljmp
add
mov
and
idivb
scas
cwtl
and
xchg
clc
mov
int3
fwait
rcrb
inc
out
cmp
dec
fs
lods
inc
dec
cmpsb
stos
jo
scas
in
add
scas
ret
in
call
mov
shrl
xchg
or
insb
dec
adc
addr16
das
sbb
clc
or
arpl
das
adc
push
add
mov
sbb
repz
cmp
jo
out
or
pop
xchg
lods
push
xchg
mov
and
pop
rcrl
or
aam
mov
mov
insb
loopne
lock
dec
test
jp
daa
mov
jnp
sub
icebp
data16
sub
stos
repz
add
adc
lock
ja
cmp
xchg
jle
sub
add
sub
cmp
mov
add
ss
mov
loope
cwtl
jnp
inc
fadds
pop
cmp
xorb
aad
out
icebp
or
push
xor
mov
dec
std
fdivrs
adc
into
sub
mov
xchg
xor
in
iret
das
movsb
imul
enter
rcr
sub
xchg
mov
push
adc
lahf
ud1
inc
inc
lods
movsb
jbe
cld
in
xor
or
scas
push
test
dec
in
mov
push
movsb
add
xlat
aas
inc
aad
iret
jecxz
push
mov
jns
or
or
out
adc
pop
popf
bt
into
pop
test
mov
insl
stos
sub
pop
xor
mov
add
push
jns
rclb
dec
leave
out
imul
sti
imul
jg
push
xchg
jbe
fwait
sub
int
cli
out
pand
push
incb
dec
arpl
sbb
sbb
daa
push
mov
fnstsw
push
ss
and
call
or
pop
mov
bound
lods
mov
mov
jp
out
cli
mov
xchg
add
adc
and
cltd
jle
popf
jg
push
les
test
loope
aaa
lcall
push
pop
int
pop
add
cmpsb
shlb
push
loop
testl
mov
jne
xchg
imul
shlb
push
pushf
subb
outsb
stos
in
pusha
sar
pushf
push
and
lods
in
lods
test
icebp
cld
leave
mov
add
xchg
andl
lcall
out
inc
push
xchg
in
inc
ficoms
fsubs
dec
incb
aad
outsb
xchg
xchg
cmp
rcrb
mov
fidivl
movsl
sub
jbe
out
xor
adc
inc
mov
jmp
dec
xchg
mov
jge
out
xchg
int3
cltd
sub
add
cmp
stc
repz
or
dec
pop
dec
sbb
fwait
mov
jns
sbb
and
test
enter
inc
pop
push
ja
or
dec
push
pop
sar
add
das
lds
xchg
and
or
cld
mov
enter
mov
inc
jle
addr16
mov
cli
lds
mov
sub
push
mov
sbb
stos
loope
pushf
add
out
mov
push
outsl
in
mov
int3
lcall
and
fmulp
xchg
push
push
pop
movsl
movsl
or
shrl
aad
imulb
gs
aas
lea
mov
jb
cmpsl
or
ja
es
sub
mov
shlb
fwait
std
loopne
push
or
pop
sub
fwait
lods
fwait
sub
mov
test
movsl
notl
and
inc
pcmpeqb
out
jbe
and
frstor
or
xor
pusha
icebp
notb
stos
outsl
int3
fsts
fwait
shlb
out
daa
andb
adc
xchg
push
pop
mov
jb
xchg
repnz
clc
mov
jmp
cmp
xchg
gs
icebp
scas
ret
pop
push
iret
xlat
and
jne
aas
add
mov
rorb
inc
xchg
ljmp
mov
imul
in
lret
push
pop
dec
repz
pusha
rorl
loop
dec
test
add
sbb
test
lcall
rcrb
lahf
sti
inc
imull
test
xor
xchg
cltd
das
dec
pop
int
gs
cmp
dec
mov
dec
push
add
popa
sub
mov
pop
call
mov
popf
iret
jno
pusha
cmp
dec
jg
or
cmpsl
cmp
dec
lret
or
sarb
out
xor
stos
mov
cmp
pushf
add
test
or
adc
aas
cmp
inc
pop
inc
pop
mov
out
in
xor
cmpsb
out
sbb
dec
mov
ja
mov
mov
jmp
test
dec
or
adc
mov
les
lods
fsts
dec
xorl
mov
cmp
or
fmull
add
sahf
jg
sbb
sub
cmp
ficompl
inc
push
jecxz
cld
sub
jge
xchg
out
inc
fnstcw
es
dec
inc
rcl
cltd
test
add
pop
xchg
lret
adc
addr16
adc
fistps
lea
in
mov
add
stos
cwtl
and
lret
lcall
repz
shrl
add
cmp
stos
das
push
lcall
xor
out
sub
jmp
aad
leave
int
cltd
inc
fcomps
adc
mov
cltd
pop
sahf
in
push
adc
imul
nop
rorb
mov
mov
js
jne
stc
dec
inc
cli
mov
sbb
mov
mov
mov
dec
jge
or
in
sub
pop
sbb
dec
inc
pop
dec
rcrb
mov
inc
hlt
push
testb
sub
dec
loop
xchg
pop
jp
jl
mov
stc
adc
xchg
push
xchg
test
cmc
pushf
xor
out
sub
add
int3
cmpsb
adc
roll
lods
xor
mov
sbb
xchg
jns
dec
mov
popf
or
shl
sub
and
loope
pusha
call
fldt
sbb
loopne
jmp
mov
test
int3
dec
pop
shr
pop
arpl
or
and
and
dec
lcall
lea
pusha
out
sar
mov
or
mov
ljmp
ss
and
ljmp
pusha
les
repnz
adc
cmp
shll
xchg
sbbb
lcall
fsubs
jle
outsb
mov
outsb
in
jbe
jnp
enter
imul
shrl
pop
rcrb
cmp
xlat
push
jns
jecxz
inc
mov
leave
mov
mov
mov
mov
lcall
leave
test
enter
int
cmp
ds
out
mov
inc
cltd
iret
sbb
sahf
dec
imul
xchg
jne
fcoml
jle
sbb
dec
add
test
adc
jge
dec
mov
pop
imul
cmp
rorl
xchg
mov
pop
jle
or
imul
pop
pop
adc
push
pop
pop
call
cmpb
fdivs
cmp
dec
and
dec
or
pop
fcmovu
jb
mov
lahf
and
mov
nop
outsl
loop
daa
mov
mov
jg
jmp
rolb
mov
mov
pop
test
mov
fmuls
and
fcoms
xor
out
pop
mov
mov
sub
lods
into
clc
mov
daa
sub
imul
add
lahf
fadd
jmp
lcall
int3
idivb
inc
mov
mov
sbb
xchg
movsb
lods
mov
inc
cmp
orb
js
outsl
aas
and
pop
hlt
std
mov
ret
shl
popa
bound
scas
sub
ja
cmp
jb
mov
or
add
adc
ss
ret
out
iret
cwtl
dec
pop
inc
ljmp
jmp
sbb
dec
scas
imul
mov
mov
es
add
icebp
sub
push
mov
adc
movsl
xor
mov
push
lret
gs
bnd
xor
js
pop
stc
out
mov
in
out
mov
out
clc
jle
fcmovbe
or
pop
or
loop
cwtl
fwait
mov
dec
mov
mov
add
sub
aad
pop
xchg
mov
and
add
mov
sbb
sbb
sub
push
add
push
int
mov
negl
push
andb
je
pushf
xchg
cmc
mov
push
jecxz
jg
loopne,pt
js
jae
pop
ja
cld
fs
mov
aaa
jmp
mov
test
std
cmc
shlb
das
int3
xor
repnz
test
stc
sbb
sub
ljmp
fs
ret
pop
and
cmp
xchg
inc
jg
mov
shr
leave
les
jns
enter
movsb
inc
lret
and
add
push
xchg
mov
push
xor
popf
xor
imul
jl
clc
add
sub
pop
and
mov
out
hlt
sub
pop
jmp
mov
mov
insb
cmpb
xchg
sbb
cmovne
lcall
dec
and
mov
or
in
adc
jbe
mov
or
leave
or
lret
pushf
mov
int
mov
popfw
loope
inc
xchg
jno
pop
iret
stc
nop
jno
mov
xor
cli
loop
sahf
xchg
outsl
mov
jmp
stc
out
mov
jle
fsubs
cmp
cld
aas
popa
out
add
imulb
cli
mov
or
test
out
dec
aad
and
insb
movsb
rol
xchg
sahf
jg
mov
push
scas
push
sbb
out
adc
pop
lock
adc
ficomps
enter
imull
nop
and
xchg
es
mov
fdivl
cmp
aas
sub
mov
add
lret
out
push
sbb
pop
daa
push
addr16
out
jbe
cltd
jns
xchg
mov
jecxz
cmc
mul
jge
push
clc
sbb
xchg
outsb
jle
sahf
fidivl
insb
xchg
xchg
add
mov
repnz
xchg
int3
mov
aas
or
mov
scas
mov
inc
das
inc
aam
iret
inc
loop
add
lahf
cwtl
jl
mov
mov
fcomi
shll
push
outsl
mov
mov
movsl
js
jecxz
sub
dec
jge
or
adc
push
test
ret
adc
add
testl
jnp
mov
lret
cld
pop
fidivs
rcrl
scas
sbb
shlb
das
lahf
cli
or
sarl
mov
dec
adc
mov
add
iret
dec
data16
ficomps
xchg
enter
mov
jae
cmp
adc
test
arpl
pop
push
sbb
or
adc
into
and
in
enter
outsb
xchg
sub
push
cltd
out
pop
jno
ljmp
xchg
pop
mov
lcall
fcoms
xchg
pop
xchg
and
dec
loope
add
jmp
aam
and
repz
es
bound
je
push
adc
stos
or
dec
jbe
mov
scas
sub
sbb
leave
test
les
les
mov
cli
mov
xor
add
loope
or
icebp
mov
sbb
mov
jge
adc
aaa
or
adc
pop
jecxz
incb
dec
fmuls
xor
pop
out
movsl
imul
mov
movsl
scas
je
fucomip
subb
dec
mov
adc
in
mov
inc
mov
pop
cli
popa
subb
in
lea
fdivrl
or
das
repz
sbb
and
sbb
xor
sub
cmp
ja
push
loopne
sub
loop
pusha
inc
sub
mov
cmp
fsubr
xchg
xor
sub
mov
sbb
adc
push
or
adc
lcall
pop
cmp
insl
add
xchg
fs
hlt
movsl
mov
scas
lahf
sahf
aad
ss
cmpsb
push
push
mov
sbb
cmp
mov
mov
aam
lret
xchg
mov
movl
lock
sti
ds
cmp
fcmovnu
add
push
shll
mov
add
and
or
bound
incl
cmc
sti
mov
mov
outsl
push
inc
adc
mov
mov
dec
jg
push
adc
lock
adc
pop
scas
pop
popf
cmpsl
shlb
sbb
and
sar
pushf
fimull
cmpsl
pop
addr16
roll
add
pushf
rolb
inc
ds
inc
xor
pushl
ds
loop
ret
test
mov
test
rcrl
pushf
inc
imul
int3
lcall
jmp
pop
popf
cltd
pop
aam
les
inc
in
sub
sbb
push
stos
mov
push
push
sub
adc
cmpsb
adc
xlat
test
leave
push
mov
sub
mov
xor
mov
xor
inc
in
mov
jp
xchg
hlt
out
jbe
cmpsl
mov
aaa
iret
imul
daa
mov
gs
dec
add
cmp
scas
imulb
popf
stc
xchg
pop
adc
ret
pusha
pushf
repnz
dec
nop
xor
xchg
ret
cmp
fcmovbe
insb
sti
pop
mov
ret
inc
push
cmp
push
bound
pop
shrb
scas
bound
pop
mov
andl
into
repz
push
dec
push
mov
arpl
dec
mov
insb
lods
lret
cmp
out
loopne
jo
loop
and
lods
pop
iret
cs
push
fdivp
ljmp
sahf
mov
int3
jbe
sbb
dec
inc
test
orl
int3
mov
hlt
cmp
jo
mov
jns
es
jg
outsl
mov
loopne
and
repnz
shlb
sbb
cmpsb
movb
in
add
loopne
insl
cltd
dec
lret
adc
ss
or
les
sub
in
into
push
jo
inc
into
std
cmc
inc
les
mov
call
mov
cli
mov
jne
mov
push
outsl
inc
mov
call
stos
mov
mov
pop
mov
jb
leave
pop
js
rcl
dec
out
xchg
sbb
mov
icebp
push
push
and
xor
ja
jmp
aas
mov
and
or
push
repz
into
jnp
mov
cmp
sub
jle
sub
add
int
out
mov
mov
into
sbbl
fucom
push
popf
jne
lea
sub
nop
pop
mov
xchg
lods
pop
ss
mov
sbbl
fwait
call
and
stos
or
icebp
scas
pop
cmpsl
push
sahf
xor
adc
adc
mov
xor
pusha
or
dec
lret
test
inc
jbe
jnp
mov
jns
xchg
sahf
sub
ret
cmp
cmp
sbb
mov
mov
xchg
mov
mov
addr16
mov
sti
dec
sahf
pop
fs
lahf
inc
aad
pop
addr16
je
xchg
sti
mov
mov
je
or
and
rcll
loop
sbb
mov
call
adcl
lret
jns
int
jno
loope
mov
mov
fldcw
subl
fisubs
cs
mov
add
push
stos
mov
lar
jecxz
les
dec
aas
cmpsl
mov
adc
pop
int
movb
gs
pop
in
adc
add
jl
repz
cli
sub
or
mov
jns
test
cmp
scas
cmp
imul
jl
scas
idiv
or
outsb
xor
inc
iret
mov
out
fisubrl
xchg
mov
fsubrp
cmp
xor
lcall
cs
pop
sarb
out
movsl
iret
xchg
and
jge
pop
cltd
ja
push
add
xchg
add
ds
xor
xor
pop
push
push
fmull
dec
mov
inc
inc
xorb
in
lcall
jbe
xlat
test
and
pop
dec
iret
mov
mov
mov
push
test
inc
sub
lea
inc
dec
cmc
xchg
push
and
in
lahf
int
mov
and
cmp
into
sti
mov
add
stos
adc
xor
push
pop
adc
shlb
les
sub
xchg
lods
mov
sub
psubb
mov
int
aam
mov
fdivrl
sbb
xor
movl
jp
jb
cld
aad
pop
call
sbb
dec
jns
mov
aaa
lea
xor
xchg
xor
jae
test
xchg
hlt
outsb
ret
xchg
xor
jecxz
jg
aam
xor
cmpl
aaa
cmp
test
ss
call
lcall
push
dec
vmulsd
mov
push
dec
mov
cmp
xchg
dec
jg
das
jno
or
cmp
mov
jnp
fnstsw
mov
add
mov
xor
dec
out
cs
mov
adc
repz
movsb
sbb
ss
dec
lods
imul
jae
cld
nop
mov
xchg
adc
lret
add
pushf
push
scas
imul
leave
lcall
xor
xor
lret
arpl
lock
xchg
xor
stos
ret
sbb
loope
dec
cmp
jl
push
jb
negb
jmp
lret
loope
scas
clc
hlt
jo
fbld
add
or
repnz
sti
sbb
add
cmp
out
xchg
cmp
mov
daa
mov
add
adc
pop
sub
pop
pop
push
pushl
mov
subb
dec
sbb
jle
add
and
and
push
push
into
test
test
cli
test
or
add
nop
enter
jmp
cmp
pusha
std
jns
jge
neg
lea
cmp
rclb
lret
sub
and
xchg
popf
sbb
and
dec
nop
ret
repnz
adc
jg
dec
arpl
jne
pushf
pop
cmc
popf
dec
outsl
mov
jg
or
push
xor
or
arpl
es
add
jae
daa
fildll
add
sub
or
inc
jle
sar
imul
out
arpl
data16
les
sbb
cmp
cmc
imul
aas
outsb
movsb
je
mov
pop
or
xchg
inc
cmp
pop
test
sbb
repnz
push
fidivl
cmp
pop
pop
js
enter
sahf
add
ja
fisubrl
mov
sbb
pop
fwait
mov
cli
jmp
and
cwtl
enter
add
mov
inc
ja
fsubs
jmp
dec
pop
aad
mov
sahf
mul
and
jg
outsl
pop
movsl
movsb
lret
fucomp
mov
insb
hlt
inc
outsl
inc
xor
push
testb
sbb
pusha
aad
sbb
adc
pushf
xorb
xchg
xor
push
xchg
mov
pop
jmp
fs
mov
aam
outsl
lcall
push
mov
daa
cmpsb
push
in
lods
xchg
test
sub
xchg
inc
hlt
call
cs
hlt
icebp
cltd
mov
lds
bound
pop
adc
push
jle
cmpsb
les
xchg
sbbl
push
xchg
mov
rcrl
inc
and
mov
xor
sbb
mov
dec
xor
lods
sub
mov
jmp
andl
sbb
mov
stos
cmc
pop
push
adc
jns
add
cmp
cmp
dec
mov
ret
mov
int
pop
mov
test
xor
das
push
lea
ret
int
mull
sbb
inc
mov
add
jo
int
dec
pusha
push
mov
push
lret
xchg
pusha
adc
mov
push
ret
xchg
pop
loopne
repz
adc
icebp
pusha
push
std
jl
jb
cmp
sub
dec
adc
iret
cltd
sub
mov
jp
mov
fnsave
mov
out
lea
push
ljmp
scas
mov
leave
cmp
sbb
mov
and
in
shlb
faddl
inc
mov
xor
test
fdivl
push
lret
lcall
lret
cwtl
mov
stc
sub
cmpl
xor
ficoms
mov
arpl
push
and
dec
cld
pop
cmp
hlt
imul
stos
int
push
jo
cmp
cltd
mov
jns
mov
adc
outsl
rclb
dec
mov
mov
pop
xor
int3
adc
and
fstps
push
into
out
scas
push
cs
xor
loopne
push
lret
sbb
mov
ja
repz
in
pop
cmp
scas
add
adc
cltd
xchg
cmpsl
cltd
lret
and
lcall
fwait
stos
out
lock
and
popf
fcoml
jle
sti
xor
fwait
iret
dec
jbe
aad
inc
mov
or
loop
xchg
add
orl
push
sarb
lea
inc
xchg
mov
add
jle
mov
imul
fdivl
scas
mov
inc
sbb
jecxz
sbb
in
outsl
dec
repnz
pop
mov
mov
jle
aaa
dec
mov
mov
mov
pop
pushl
dec
jbe
mov
cmp
in
mov
adc
cmpsl
mov
mov
cmp
mov
pop
mov
pop
cmp
std
mov
push
mov
ljmp
push
dec
testb
loop
xchg
scas
xchg
jno
test
repnz
les
push
cmp
je
jg
xchg
push
int3
adc
cmp
andl
sbb
in
dec
sub
add
ds
testl
xchg
outsl
in
movsb
and
push
push
push
cmp
jo
xchg
les
test
lds
sub
mov
xchg
mov
push
and
lock
cmp
push
mov
sbb
push
mov
sarl
add
fs
cli
int
jl
xchg
ljmp
push
nop
mov
mov
pop
mov
pusha
fdivrs
jo
outsb
dec
mov
dec
dec
cmpsb
mov
mov
pop
and
push
loope
xchg
mov
dec
imul
inc
and
lds
cmp
adc
movsb
mov
adc
dec
aam
aaa
mov
in
inc
or
sbb
mov
mov
or
aam
cmpsl
adc
adc
xlat
out
xor
out
cld
and
dec
add
cmp
jle
push
imul
dec
ds
cmp
add
inc
sbb
and
or
scas
subl
adc
push
mov
cs
lret
popa
add
cmp
adc
cmpsl
sub
mov
jmp
xlat
sahf
lahf
and
addr16
cld
mov
test
stc
js
aad
popa
sbb
sbb
setge
push
leave
jbe
push
lret
aaa
or
dec
cmpsl
out
add
rclb
cli
jno
es
mov
loop
outsb
jmp
and
push
xor
add
lea
sbb
movsl
lret
inc
xchg
int
mul
pop
xchg
ret
aam
cmpsb
push
sbb
sbb
pop
mov
cmc
cmpsb
gs
lret
push
jae
outsb
mov
jp
jb
mov
mov
in
dec
sahf
inc
or
aad
loope
or
in
out
mov
test
cwtl
icebp
xorb
test
xorb
dec
repnz
adc
xor
pop
cmp
jg
shrb
mov
sbb
adc
cmpsl
mov
nop
cmc
cmp
subl
mov
mov
push
lds
ret
or
xchg
cs
lcall
arpl
pop
jecxz
jge
dec
push
outsb
push
mov
mov
mov
or
cltd
popf
movsl
adc
inc
int
fcoml
dec
mov
inc
stc
addb
xchg
in
add
shrb
outsl
shl
loop
outsb
out
jle
aam
xchg
push
jge
inc
andl
pushf
cmpsl
decb
lret
xor
inc
xchg
loop
sbb
xor
cwtl
inc
jge
mov
push
mov
cmp
data16
cmp
int3
loop
lock
out
into
pop
xchg
loopne
adc
mov
dec
mov
clc
stos
add
adc
push
jae
mov
test
jecxz
xor
imul
lock
sti
jp
and
shll
loopne
fs
add
jbe
pop
test
js
sbb
mov
idiv
inc
mov
insb
and
jnp
out
dec
xchg
xor
xor
enter
push
and
movsl
cmp
testb
fisubrs
jg
and
lock
add
jl
mov
pop
xchg
das
dec
insl
pop
or
mov
mov
shl
test
pop
out
push
je
lea
push
cs
mov
cmc
sbb
ljmp
pop
push
icebp
add
pop
out
test
mov
ror
or
mov
jge
fwait
rclb
or
mov
sub
and
insb
adc
add
in
std
pop
test
pop
dec
fsts
out
stc
int3
xor
std
xor
mov
mov
cwtl
pop
jecxz
movsb
xchg
lret
lcall
loopne
mov
dec
in
cmpsl
int3
test
push
inc
outsb
fsubr
adc
or
mov
inc
and
mov
stos
sbb
pop
fsubrp
xor
sbb
mov
mov
cmpsl
sub
sub
sbb
or
mov
xchg
movsb
sbb
pop
imul
push
filds
stos
inc
pop
mov
pusha
test
fs
fldcw
sti
stos
or
or
mov
idivb
mov
push
int
shll
ja
jae
icebp
mov
sbb
arpl
inc
addr16
inc
sar
aam
mov
lahf
mov
out
scas
fiadds
stos
fs
xor
inc
pop
cld
lods
add
push
popa
or
aaa
push
shrb
repnz
and
mov
sub
popf
jmp
sbb
cld
adc
sub
lahf
sbb
lret
push
sub
mov
xchg
fdivs
bound
xchg
xor
sti
into
loope
adc
xchg
lret
cwtl
jge
dec
out
xor
fucomip
ret
mov
imul
pop
xor
push
jg
stc
fwait
or
in
adc
mov
daa
inc
mov
outsb
test
outsl
xchg
ja
push
dec
inc
arpl
jge
cltd
movsl
jbe
repz
sti
ret
jnp
testl
mov
push
cmp
jg
int
in
cmc
cmovp
sbbl
negl
lds
sbb
push
pop
adc
cwtl
inc
in
sub
pop
andb
mov
cmp
mov
inc
jb
inc
adcl
out
dec
aad
repnz
jo
in
imul
call
jg
cwtl
sbb
mov
test
fwait
push
mov
int3
add
pop
inc
addr16
jne
mov
mov
mov
push
add
lods
adc
bound
dec
fmuls
test
movsb
or
imul
push
inc
mov
sbb
pop
in
sarb
or
pop
stos
ret
leave
xor
outsl
cmp
out
or
and
js
xchg
in
out
sub
jb
sbb
mov
les
adc
decb
rolb
lods
pop
mov
lods
jne
repz
or
andb
imul
repnz
shlb
orb
cmp
bound
psllq
mov
or
cmpsl
pop
stc
or
out
push
mov
fisttps
ss
outsl
or
inc
lret
cld
aas
es
mov
and
les
and
inc
pop
cmp
daa
ret
jmp
jae
ret
xlat
add
sarb
lds
cmp
inc
xor
in
xor
push
push
lods
clc
orl
push
dec
and
pop
jbe
std
outsb
mov
pop
test
repz
mov
pop
mov
dec
push
add
and
xchg
shrb
pop
or
cmp
add
rclb
mov
aam
mov
cmovae
push
inc
adc
loopne
lret
int
inc
ljmp
faddl
icebp
loope
dec
fs
and
popf
fldln2
cmp
jne
xor
fdivrs
imul
cmc
mov
mov
cli
fdivs
repz
shll
je
mov
mov
or
lcall
or
or
pop
repz
sub
xchg
mov
scas
sahf
imul
dec
orl
jecxz
shlb
push
dec
pop
addr16
xchg
mov
mov
stos
int3
ficoml
adc
aam
prefetcht0
fisttps
out
push
xor
mov
jnp
lea
out
aam
mov
lods
cmp
jb
mov
add
xchg
imul
pop
jp
xchg
bound
dec
ds
xchg
bound
adc
stc
pop
aam
pop
sbb
insb
or
mov
pop
aaa
iret
inc
dec
jo
xchg
es
and
xchg
subb
push
out
ds
push
sub
jle
jp
pop
jge
mov
pop
or
dec
and
inc
xchg
out
mov
or
sbb
jne
mov
fcoml
pop
outsl
xor
int3
andb
lds
icebp
bound
mov
out
test
mov
decb
out
repnz
sbb
out
out
push
sbb
xor
jns
pop
imul
adc
scas
cmp
jmp
dec
enter
jecxz
movsl
int
in
xor
int3
pop
cli
xchg
jp
pop
mov
and
adc
fmuls
xor
push
and
outsb
jle
mov
movsl
shll
fistps
js
add
pushf
stos
mov
or
and
lahf
test
subb
sbb
mov
faddl
sbb
les
add
mov
ds
push
sbb
sub
push
dec
jecxz
stos
mov
hlt
dec
sbb
mov
or
test
fistl
mov
loopne
mov
jge
cmpsb
sahf
fsubl
repz
push
push
or
bound
mov
push
push
ret
jl
sahf
aam
mov
push
jp
iret
fldl
and
in
xchg
sar
je
jl
ret
and
pusha
pusha
dec
sub
arpl
std
mov
sbb
mov
rorb
or
jo
leave
mov
inc
add
add
mov
mov
sarl
cmp
mov
subb
fimuls
mov
lret
xchg
pop
pop
fldenv
rol
fstps
subl
ljmp
inc
inc
xchg
inc
lahf
lahf
xlat
sbb
fwait
outsl
loopne
sbb
out
or
jo
sbb
cmpsl
mov
push
adc
xor
and
imul
cmp
xchg
mov
jecxz
fcomp
fldenv
movups
mov
mov
mov
call
jecxz
fdivp
pop
add
pop
sbb
push
xlat
or
push
jl
xchg
mov
out
inc
mov
or
icebp
xchg
cwtl
es
rolb
xor
dec
in
inc
xchg
ret
cltd
push
mov
jns
insl
push
jnp
dec
push
jae
shlb
mov
iret
js
mov
push
out
hlt
loope
pop
in
or
mov
repz
add
mov
mov
mov
inc
addl
jb
xor
test
adc
and
aaa
cmp
mov
mov
js
add
cmc
lods
hlt
in
mov
out
sbb
sahf
or
sub
and
push
sbb
pop
or
out
mul
cmpb
xor
addr16
shrl
andb
mov
fnstenv
xchg
xchg
push
cmp
mov
push
popf
pop
or
lret
lret
push
popf
push
pop
mov
cmp
mov
sbb
mov
push
sbb
mov
cs
das
mov
mov
push
lods
inc
filds
xchg
push
dec
in
cmc
inc
jns
inc
xchg
das
jl
mov
rol
dec
dec
test
jne
jl
push
push
dec
out
cmp
mov
mov
ds
mov
or
or
xchg
xor
pusha
or
mov
ljmp
das
out
test
and
pop
shlb
das
je
cmp
fsub
mov
into
mov
out
scas
jb
lret
xor
mov
stos
sub
bound
cmp
mov
dec
pop
inc
sahf
mov
push
ret
lcall
jg
cmpsb
bound
outsb
enter
jmp
add
xchg
scas
nop
clc
mov
cmpsb
call
gs
dec
das
pusha
jecxz
mov
jo
sbb
mov
fnstenv
and
in
je
or
ret
outsl
sti
mov
and
inc
mov
out
add
rclb
inc
mov
mov
and
orb
add
icebp
jns
icebp
scas
add
mov
push
xor
sbb
loopne
sahf
jg
pop
imul
mov
icebp
loopne
scas
fsubrs
std
fstl
ss
xchg
fdecstp
test
and
mov
xchg
push
inc
lret
xchg
mov
push
popf
clc
js
xor
lods
ds
lods
mov
cwtl
fldz
outsb
std
mov
jno
sub
jle
mov
xchg
test
fists
std
ds
adc
cmpsl
mov
scas
sub
push
xor
xor
rcr
adc
fisttps
aam
or
sbb
fidivrs
jbe
or
jo
sub
addb
imul
jbe
inc
pop
divb
loope
inc
pop
push
jo
dec
sahf
gs
ja
call
jo
mov
fnsave
fcompl
ds
jl
push
sbb
loopne
pop
xor
pop
push
aas
faddl
mov
cmp
in
out
and
aas
in
hlt
sbb
adc
sbb
test
insb
xor
fmull
mov
cmp
gs
movsl
cli
sahf
adc
loopne
lea
mov
popa
movsb
xchg
sub
mov
out
push
lsl
pop
lret
sbb
mov
push
lahf
mov
scas
maskmovq
xchg
movb
adc
ds
mov
add
jmp
mov
xchg
xor
lret
inc
stc
cwtl
pop
hlt
inc
cmp
xchg
call
stos
lea
xor
pop
add
push
mov
test
cli
ficoms
xchg
int3
fildl
adc
ret
mov
xor
push
mov
test
lds
jge
sbbb
xchg
test
xchg
and
scas
push
frstor
cli
cwtl
cmc
sbb
sti
push
mov
mov
xchg
mov
xor
xor
sbb
mulb
push
pushf
push
mov
sbb
jb
in
into
xchg
pop
outsb
daa
push
cmp
and
insl
sbb
jecxz
sbb
mov
push
jns
aas
mov
add
inc
cmp
jnp
fwait
mov
in
pop
clc
jmp
cmp
cmp
xchg
push
jge
aaa
mov
mov
imull
mov
push
and
std
leave
jb
cmp
into
mov
xchg
sbb
mov
mov
adc
sub
cmp
mov
sbb
fsts
pop
imul
jmp
out
andl
loope
cs
xor
ds
lret
lods
mov
push
push
call
ss
push
mov
push
inc
loopne
lret
jnp
sti
pop
xchg
rol
jp
sbb
mov
jge
jne
sub
cmp
push
jno
dec
cltd
enter
sub
push
out
add
ficompl
fwait
push
push
fwait
or
js
ds
mov
sbb
movsl
imull
push
test
loopne
mov
dec
call
cmp
movsl
je
leave
or
popa
jmp
lahf
cmp
in
ret
stc
fucomip
push
mov
test
or
rcrb
test
std
mov
cwtl
xor
divb
push
jae
mov
xlat
inc
adc
jae
and
pop
mov
leave
repnz
addr16
ja
fimuls
dec
add
sub
xchg
repz
jno
push
mov
clc
fistps
mov
jno
icebp
les
mov
dec
dec
jmp
loop
or
push
push
pop
pop
xor
cmpsl
push
mov
push
adc
movsl
call
cmpsb
arpl
mov
mov
rol
data16
repnz
pop
arpl
stc
mov
sbb
loopne
cli
jl
loope
nop
lods
testb
ss
shl
bound
stos
sbb
icebp
mov
cmp
push
testl
push
test
lret
cld
lahf
pusha
xor
aas
push
push
frstor
sub
andl
and
dec
es
adc
repz
jmp
mov
stc
lahf
inc
or
mov
mov
sbb
in
gs
fwait
mov
dec
mov
jnp
adc
cmp
in
xchg
das
fistl
aad
mov
idivb
mov
add
roll
jl
xchg
or
popa
cmp
mov
mov
cli
popf
pop
out
fisubrl
sub
testb
mov
mov
sub
insb
mov
sub
and
cmp
sub
daa
pop
nop
mov
xchg
or
ss
or
jecxz
xchg
jmp
add
push
cltd
and
incl
adc
test
xor
jne
cmp
lahf
jno,pt
and
ficomps
mov
decb
insl
sarw
mov
sub
rorl
cwtl
or
dec
lea
repz
pop
dec
iret
lods
into
and
stos
and
adcb
push
jnp
fistl
jp
imul
pop
add
roll
fs
add
add
and
jbe
push
gs
in
ljmp
xchg
or
jmp
icebp
daa
je
and
jns
pop
inc
fs
int
insl
lret
jl
mov
xchg
lahf
mov
mov
mov
aaa
inc
ds
xchg
stos
add
cmp
xchg
scas
shr
js
roll
mov
mov
mov
std
pop
xor
jbe
dec
sub
out
xchg
jge
mov
or
iret
fwait
jne
dec
cli
cltd
dec
xor
int3
push
sbb
sarb
inc
les
mov
fldenv
enter
fwait
jo
jge
xor
jae
or
inc
push
adc
sbb
loopne
push
popl
pop
fists
and
mov
inc
add
andb
push
jb
js
push
sbb
kmovb
hlt
lahf
xor
inc
push
mov
ljmp
loop
cwtl
fcmovnu
xchg
or
mov
enter
cmp
adc
pop
xchg
int3
push
es
xchg
adc
fimuls
and
ret
dec
lea
adc
outsl
dec
adc
out
xchg
lock
sub
lret
mov
mov
enter
mov
sub
dec
push
stc
jecxz
dec
sbb
cmp
xchg
je
mov
and
notl
imul
xchg
or
xchg
mov
xor
test
rep
dec
clc
dec
pop
sub
cmp
xchg
enter
in
subl
cltd
add
push
jp
adc
xchg
data16
loopne
or
push
or
adc
sub
or
xchg
ret
mov
hlt
out
pop
sub
arpl
rcll
in
repz
add
mov
ret
imul
mov
test
dec
mov
xor
cs
sbb
je,pt
push
xchg
adc
mov
cmp
test
in
lcall
jp
aas
sub
into
cmp
jge
xor
mov
lods
pop
xor
ja
adc
mov
dec
jno
add
pop
and
mov
pop
imul
mov
jmp
push
ds
pop
adc
dec
inc
mov
mov
xlat
lods
sti
cmp
rcrb
arpl
imull
add
lret
test
xor
adc
addl
enter
pop
cmp
lock
gs
dec
inc
sarb
push
stc
dec
fdivp
in
and
test
test
movb
ror
subb
sbb
pop
cmp
into
stos
add
fmuls
ljmp
fnstenv
fistpl
jns
icebp
mov
mov
lods
adc
int3
or
aad
pop
add
or
sub
sbb
jne
cmc
xchg
lret
add
lcall
repnz
adc
inc
jae
mov
and
ja
sub
dec
mov
jbe
enter
test
fwait
add
fnstsw
xchg
pusha
mov
cmp
push
mov
inc
pop
div
xor
adc
leavew
lahf
cld
xchg
cmp
cmp
mov
and
repz
rorb
je
cmc
mov
cmpsl
fisubs
push
dec
mov
xchg
xchg
fs
add
xor
add
mov
inc
int
lcall
cmp
cmp
enter
cs
and
sbb
cmp
cmp
xchg
or
aad
dec
jo
push
xor
leave
push
inc
sbb
lret
mov
fwait
stos
inc
fstps
shlb
inc
fidivrl
loope
sub
dec
lods
sbb
jb
fs
cmp
nop
jmp
push
adc
sbb
jnp
pop
mov
xchg
fsubrs
inc
cwtl
fcmove
mov
xor
enter
mov
dec
or
enter
mov
std
movsl
mov
fnstenv
mov
int
faddp
sbb
xor
pop
cli
xchg
lahf
inc
push
sbbl
sbb
xchg
cmp
mov
jmp
imul
pop
ret
out
les
pushf
fs
mov
xor
jmp
and
add
pusha
incl
mov
sub
jne
sbb
and
dec
push
xor
cmp
std
mov
enter
and
ds
mov
pop
jae
cmpb
jns
jno
xlat
mov
stos
add
cmp
cmpsb
or
movsb
add
imul
lret
cmpsb
testl
mov
cwtl
test
dec
or
rcrl
xchg
test
repz
sbb
mov
xchg
and
dec
cwtl
mov
mov
ret
mov
sub
int3
sub
fcos
mov
xor
out
arpl
sbb
lret
sbb
adc
mov
xchg
push
loop
mov
pop
punpckhwd
sub
lahf
call
popf
xchg
adc
test
mov
pop
mov
sub
pushf
imul
pushf
enter
in
mov
fcom
xor
sub
mov
xor
xchg
out
adc
movsb
fists
mov
push
xchg
insl
pop
cwtl
mov
pop
inc
pop
lods
dec
test
popf
les
mov
pop
mov
xlat
xchg
cli
add
push
fidivl
mov
xor
aad
leave
push
push
dec
std
rcrb
add
xor
inc
and
jno
pop
cmp
outsl
mov
cmp
xchg
ror
movsb
fimuls
jae
stc
insb
mov
or
xorb
pushf
mov
in
or
mov
push
aad
xor
sbb
or
jle
inc
sbb
push
outsl
push
std
mov
mov
inc
dec
ret
aam
inc
popa
mov
das
sti
jae
lds
test
stos
popa
in
add
dec
das
xor
inc
adc
mov
std
xchg
iret
gs
add
in
inc
mov
mov
xor
clc
mov
mov
cs
fdivp
mov
lods
stos
cmc
mov
adc
test
mov
sub
jo
in
cli
push
push
fcomp
xchg
mov
push
jp
push
lret
aam
imul
daa
cltd
cmp
dec
scas
inc
iret
pusha
push
insl
mov
xchg
xor
mov
lods
mov
and
sbb
les
and
adc
aam
mov
sub
jmp
addr16
movsl
cmp
sub
insb
jnp
in
lret
nop
loop
cmp
add
push
pop
rcrb
or
or
lods
mov
or
mov
or
lock
xchg
push
and
xor
test
arpl
xchg
push
pop
rorb
divb
addr16
add
inc
in
dec
xchg
push
jecxz
push
jb
xchg
inc
out
ret
orl
lret
fists
cmp
push
or
enter
add
aaa
std
xchg
sbb
inc
pop
xlat
mov
jmp
repz
vmovhps
dec
int
mov
fistl
lret
dec
icebp
inc
iret
sub
dec
fnsave
cmp
jl
push
and
dec
dec
lahf
data16
cltd
push
cmp
out
mov
popf
test
ds
pop
clc
loopne
inc
lea
arpl
ss
scas
jno
fisubl
sub
and
pop
cmp
mov
mov
sbb
jp
in
rcl
inc
lret
mov
push
xor
push
sub
lcall
int
out
lods
xchg
test
adc
jp
aam
mov
push
test
popa
adc
pop
out
mov
mov
sbb
fdivl
jns
std
push
sahf
std
push
sbb
ret
ljmp
sbb
cli
js
cmp
cs
push
fnstcw
outsl
sub
push
mov
subb
mov
dec
jbe
mov
call
xchg
mov
pop
jb
in
dec
pop
gs
pop
jb
adc
ffreep
orl
pop
iret
mov
fs
xchg
xchg
fsubrl
cld
cwtl
or
std
bound
mov
cmp
dec
mov
call
xor
insb
or
adc
mov
push
mov
push
xor
in
dec
cmp
mov
shlb
loope
in
aas
mov
mov
js
mov
lret
add
bound
data16
jae
lahf
test
je
shl
push
or
inc
popf
pop
stos
jle
or
mov
xchg
ljmp
iret
push
fwait
jle,pn
pop
mov
push
out
jecxz
into
loopne
shrd
sbb
arpl
or
push
xchg
aas
daa
icebp
mov
inc
xchg
sti
je
pop
sbb
nop
dec
cwtl
fidivl
fdiv
sbb
pop
mov
outsl
arpl
addr16
jge
ss
mov
cmp
cld
fistpll
test
pusha
into
aaa
lret
test
pop
mov
push
push
sub
cmp
jp
xor
jge
lea
mov
gs
cmp
inc
jae
dec
mul
push
and
xrelease
shl
lret
push
xchg
les
sub
xor
pop
jb
out
mov
push
sbb
xchg
hlt
das
je
sbb
test
and
jnp
push
movsl
jmp
inc
mov
inc
cmp
push
in
iret
and
cmp
mov
sar
fstp
push
dec
mov
xor
adc
or
jecxz
popfw
mov
sub
enter
fstpl
ret
fists
xchg
xor
cwtl
movl
sti
jo
cmp
je
shrb
mov
pop
subb
mov
mov
lods
mov
xor
fisubrs
je
popf
cmp
cmp
imul
daa
repnz
loope
jl
mov
xchg
pusha
sbb
shlb
adc
ss
les
adc
inc
or
bound
data16
jno
push
xchg
add
lret
insb
push
out
cmc
shlb
sub
xchg
push
xorb
es
pop
fidivrl
and
adc
cltd
loop
in
fdivl
out
jp
cmpl
sub
adc
pop
cmp
scas
js
mov
push
loope
outsl
scas
add
mov
mov
xlat
dec
cmpsb
jb
aaa
xchg
sbb
lahf
sub
ret
ja
push
jecxz
xchg
push
sbb
push
orl
std
xor
add
xchg
je
lods
cmp
adcb
hlt
orb
push
in
xlat
xchg
cmp
enter
ljmp
mov
fists
push
lret
mov
lret
pop
mov
pusha
mov
andb
and
mov
inc
lahf
insl
add
mov
adc
shll
pop
fnstsw
or
sub
call
es
cmpsl
repz
sub
mov
mov
inc
xor
dec
mov
movsl
jg
cmp
jmp
es
lds
inc
test
push
fcmovbe
out
lds
xchg
adc
les
fistpll
xchg
hlt
pop
pop
xchg
iret
cmc
pop
movsb
cld
ljmp
mov
ret
popa
cmpsb
negb
aam
js
iret
fidivl
inc
lcall
mov
jge
cmpsl
ror
bound
sub
sbb
and
cmp
adc
inc
std
mov
cs
dec
or
push
adc
push
pop
jnp
jg
sub
sub
ja
data16
cwtl
sbb
adc
ret
lds
mov
sbb
ds
xchg
inc
addr16
push
paddsb
arpl
xor
mov
pushw
pop
pusha
gs
jo
stos
sub
sbb
shrb
mov
in
jle
mov
adc
roll
jmp
mov
stc
fwait
jp
das
push
jmp
xchg
mov
mov
xor
mov
cmc
cld
inc
bnd
mov
sub
dec
out
cwtl
jb
jg
push
xor
mov
idivl
jge
hlt
xchg
test
mov
idivl
movsl
loop
imul
mov
stos
or
adc
push
rclb
in
or
cmp
jmp
xorb
enter
jne
gs
lcall
imul
addr16
fs
mov
aas
imul
jle
movsl
leave
push
xor
add
sbb
lods
mov
fisubs
stc
js
negb
fwait
scas
xorl
pop
arpl
in
dec
jge
push
push
push
pop
mov
js
lods
mov
dec
cmpb
out
roll
scas
loopne
hlt
jmp
outsl
jo
sbb
mov
mov
outsb
insb
sbbl
int3
pop
cmp
mov
sbb
dec
pusha
sti
dec
push
inc
jle
mov
cs
mov
mov
out
mov
aaa
mov
loop
fiadds
sub
sub
xchg
adc
dec
sub
cld
adc
jecxz
dec
cmp
adc
test
xchg
xchg
in
dec
insb
rcpps
mov
pop
fisubrl
ljmp
lods
jo
mov
fistpl
inc
ret
pop
rclb
jl
jmp
xchg
je
adc
sbb
hlt
aas
notb
and
cmp
lock
jne
push
and
daa
sbb
sub
dec
sbb
mov
xchg
inc
lock
in
cmpsb
shll
pop
test
xor
adc
jnp
mov
ret
sub
jg
sub
or
out
int
lods
adc
pop
mov
aad
dec
mov
aaa
fisubl
xor
clc
lods
add
ds
sub
daa
movsb
sbb
andl
imul
adc
adc
mov
aad
sbb
in
mov
xlat
icebp
push
outsb
insb
stc
lods
and
mov
lods
xchg
inc
mov
ror
cmp
out
arpl
popf
aam
mov
dec
call
xlat
lahf
hlt
mov
mov
mov
cs
cmp
pop
jnp
xchg
inc
jmp
jp
jae
pop
daa
mov
pop
mov
push
pop
fdivs
jb
dec
leave
mov
mulps
shrl
xchg
push
sbb
sub
mov
pusha
fmuls
ror
add
mov
rorl
and
cwtl
sbb
sub
dec
inc
ss
fs
cwtl
mov
inc
ret
movsb
sub
popa
pusha
sahf
scas
pop
aad
imul
cmp
and
mov
pushf
dec
mov
and
stos
sub
sahf
jbe
sub
xchg
sahf
insb
cltd
push
adc
and
jb
bound
sbb
repz
lret
loopne
loope
sahf
jae
adc
push
ficomps
mov
sbb
insl
daa
adcb
divl
outsl
or
and
std
and
and
decl
xchg
cwtl
add
lock
lds
xorl
xchg
movsl
sar
inc
movsl
mov
or
aaa
movsb
dec
lea
inc
gs
clc
adc
cmp
pop
cmc
lods
arpl
insl
arpl
jge
sub
sbb
les
xor
leave
fmuls
sbb
aad
cmpsl
in
push
das
push
inc
mov
or
or
testl
cmp
lea
sub
test
rcrl
or
pop
xchg
and
testl
push
sub
adc
xor
mov
pop
push
and
std
add
rcll
jecxz
jg
repz
xchg
out
aam
jbe
sbb
or
cmpsb
adc
mov
rol
repnz
roll
dec
cwtl
add
add
sub
fisubl
repz
or
imul
push
pushf
push
jns
leave
push
pop
push
mov
pop
mov
stc
insl
mov
cwtl
adc
add
movsb
jne
lcall
xchg
jmp
inc
xchg
xor
mov
stos
in
cmp
icebp
int3
call
test
aam
insl
or
mov
xchg
and
sub
lods
int3
arpl
andl
shrl
sub
insl
jns
aas
sbb
and
or
out
inc
loop
nop
fadd
mov
test
pop
add
popf
int3
add
sbb
movsl
pop
bound
out
shll
jp
jae
mov
lds
cmpsl
dec
fildll
or
mov
dec
sbb
dec
sbb
fcmovb
fcmovu
addb
xchg
inc
push
mov
push
sbb
inc
mov
ret
popf
and
or
jecxz
divl
xchg
das
in
mov
into
cmp
push
je
mov
icebp
sub
adc
movsb
aad
xchg
stc
loopne
insb
mov
rol
sub
mov
sbb
int3
into
and
and
mov
xlat
scas
adc
add
popa
lret
and
cltd
fs
jb
cli
sub
fnsave
push
cmp
fwait
loopne
adc
fwait
loope
mov
cwtl
ss
pop
jp
movl
lea
ret
cld
xor
int3
xchg
cmpsl
mov
pop
ficoms
push
mov
dec
addr16
sbbl
out
and
pop
push
xor
lock
jno
imul
cmp
in
psrlw
cmp
jl
push
notb
adc
xchg
adc
xchg
xor
es
movsl
or
cmp
out
sbb
inc
xchg
adc
push
pop
jne
mov
in
addr16
or
stc
sbb
push
sbb
out
push
inc
mov
lds
imul
adc
bound
lds
pop
sbb
test
fiaddl
mov
cmp
dec
pop
jl
xchg
adcb
mov
lods
add
rcrl
das
inc
mov
es
dec
test
rdpmc
xlat
cld
cmp
or
lds
rclb
and
adc
dec
and
cltd
dec
xor
arpl
cld
push
xchg
lds
scas
js
fldt
jne
push
or
mov
push
rcll
push
cmpsb
popa
mov
mov
jmp
sbb
push
jns
dec
lahf
pop
pusha
fdivl
lret
idivb
imull
or
enter
add
push
xor
push
push
push
out
sti
jg
stos
jb
or
les
sahf
inc
inc
push
fdivl
daa
mov
adc
cmp
mov
out
sbb
jb
das
es
mov
jecxz
adc
xor
sbb
ljmp
icebp
js
fiadds
mov
sbb
clc
adc
mov
push
addl
popf
insb
cli
adc
lret
mov
adcl
dec
in
inc
xchg
xor
fsqrt
test
xchg
data16
cmpsl
sbb
adc
jne,pt
in
ja
cmp
ficoms
jae
adc
mov
shl
push
clc
cmc
repnz
dec
inc
adc
pop
mov
push
jge
lock
inc
scas
shrw
in
arpl
ret
dec
shr
pop
fisttpl
mov
add
sbb
xor
das
jb
test
test
mov
push
arpl
push
popa
and
sbb
out
ja
ds
arpl
and
cmp
iret
pop
xor
push
xor
pop
push
xchg
jle
ljmp
inc
aad
add
gs
enter
rep
ret
sahf
scas
outsb
mov
inc
pop
jl
repnz
mov
outsb
add
sub
cld
loope
bound
jl
data16
xor
xor
cmc
inc
inc
icebp
mov
adc
or
cmc
push
or
lret
mov
fdivrp
hlt
lock
lea
push
aaa
loop
mov
ss
je
add
or
add
inc
push
pushf
into
adc
ljmp
ja
insb
sbb
mov
popf
je
and
arpl
dec
adc
mov
mov
cli
fdivrs
out
xchg
sbb
cmp
add
ret
sub
mov
std
mov
push
ds
xorb
xchg
jmp
jno
or
push
xor
xchg
inc
jns
aas
cmc
loopne
push
or
mov
push
test
js
jl
push
sbb
xchg
or
movsb
outsl
mov
xor
mov
imul
inc
addr16
cltd
test
lock
sti
in
jo
adcl
lret
repz
rcl
sub
xor
scas
mov
ficomps
aad
pusha
push
xchg
mov
mov
lahf
mov
push
out
aam
test
xlat
sub
dec
aaa
sahf
pusha
scas
aaa
mov
fnstsw
cmp
mov
mov
inc
dec
das
jecxz
call
mov
mov
rcll
mov
inc
and
pop
add
cmp
push
mov
push
rcr
roll
push
push
int3
push
scas
pop
push
jge
test
stc
and
push
lea
xchg
ret
sbb
mov
push
sahf
mov
mov
mov
mov
insl
inc
loopne
push
jo
mov
inc
lods
or
cmp
xor
and
shlb
pop
xchg
scas
xchg
lds
push
adc
lods
inc
adc
lret
loopne
mov
loopne
popa
xor
xchg
mov
xchg
outsb
pop
and
mov
in
pop
pop
jl
cmpsl
aas
shlb
sahf
iret
push
mov
adc
dec
enter
test
mov
push
leave
xor
inc
lods
jg
push
inc
jb
imul
movsb
pop
stos
in
xor
jae
add
pop
mov
orl
pop
cld
jne
jge
mov
lret
sar
sbb
sub
std
popa
and
push
inc
stc
sti
mov
cs
scas
rclb
or
jno
push
pop
mov
xchg
movsl
xlat
mov
and
cltd
imul
popa
add
jp
mov
cmpsb
cmpl
jge
and
jo
cltd
and
roll
cmp
pop
packuswb
pop
push
jp
repz
ja
dec
jge
bound
and
and
popf
notb
pop
fdiv
fmul
cmp
pop
jnp
add
lds
fwait
xor
scas
in
pop
jae
filds
xor
jmp
add
cwtl
and
push
out
jo
call
mov
pop
cmpsl
pop
inc
fnstcw
mov
xor
adc
jecxz
and
lret
push
sbb
mov
jg
mov
mov
jne
insl
mov
push
cmp
pop
xor
pop
adc
into
arpl
out
clc
fcmove
mov
repnz
mov
add
stos
mov
inc
push
stc
inc
or
or
mov
mov
test
mov
js
mov
xchg
sbb
jne
adc
or
pop
sub
lds
sub
aam
outsl
sub
fdivrl
pop
add
inc
push
xchg
mov
mov
jle
mov
test
lret
pop
and
movsb
adc
mov
ret
mov
punpckldq
imul
xchg
sarl
aam
dec
mov
sub
insl
sbb
mov
sub
fdivs
lahf
cmp
lock
pop
mov
add
dec
cmpsb
mov
jmp
ss
push
cli
pop
sub
outsl
cmc
rol
sahf
loop
or
xchg
pop
mov
lret
xorb
sub
sbb
mov
pushw
mov
push
sti
imul
sbb
lret
cmpsl
sbb
fnstsw
rol
in
and
stc
cs
cmp
dec
or
pop
bound
incb
es
in
push
sbb
jg
sbbl
aas
cli
xor
inc
aam
pop
pop
push
jnp
xor
jle
cmp
shr
cmpsb
inc
fwait
lahf
jge
in
mov
push
pop
jb
or
test
pop
daa
test
mov
loopne
pop
outsl
push
push
shr
pusha
inc
inc
dec
dec
dec
dec
sub
inc
xor
mov
call
loope
push
sbb
pop
push
ja
dec
imul
aad
jae
mov
xchg
xor
shrl
jp
lret
in
int
repnz
scas
inc
out
push
pushf
or
pushl
cmp
lds
dec
fstl
out
inc
sbb
mov
xor
adc
mov
decb
pcmpgtd
inc
and
add
fsubrs
push
jge
nop
gs
inc
add
jae
cmp
call
xchg
sbbl
test
mov
inc
inc
mov
sub
jbe
adc
je
push
sbb
jge
or
xchg
out
test
lret
cltd
sub
mov
fadd
mov
enter
loopne
mov
dec
jg
lds
pop
push
jae
pop
xor
xorl
push
mov
xor
push
iret
mov
in
loopne
addr16
out
in
unpckhps
mov
push
test
sti
xor
sbb
pop
cmp
repnz
out
add
aad
push
adc
adc
dec
test
fwait
xor
pop
test
fstpt
je
outsl
cltd
dec
lods
mov
cli
sbb
mov
cli
push
inc
cmpsb
lret
adc
aam
push
subb
out
inc
jnp
cs
mov
or
pop
and
add
cld
dec
push
arpl
cli
andl
push
mov
stos
testb
scas
loope
xor
daa
imul
std
xchg
mov
push
or
mov
xor
sbb
dec
adc
lock
sbb
sub
sbbb
lods
or
aaa
xor
ret
xor
jecxz
jae
or
loopne
lea
or
ja
and
loopne
xor
rolb
movsb
mov
xchg
jnp
and
outsb
inc
enter
add
jmp
add
punpcklwd
inc
sub
fcoml
mov
orl
aas
out
sub
aad
cwtl
mulb
movsl
popa
add
pop
movsb
ljmp
lock
mov
xchg
divl
repz
cmp
cmpsb
into
mov
xor
jge
stos
sub
sub
mov
jno
adc
mov
fucomi
sub
pop
dec
sub
popa
repz
inc
or
fcoms
jae
roll
dec
out
adc
push
push
ficoml
fs
xchg
js
pop
lahf
jge
adc
les
dec
mov
mov
dec
repz
or
pushf
pop
mov
or
xlat
xchg
in
shrl
adc
add
popf
push
cmpsl
loop
out
ss
mov
jnp
idivb
and
add
sub
or
adc
push
iret
and
jno
xchg
inc
inc
loop
pop
xchg
add
lock
addb
or
mov
ljmp
outsl
pop
pop
inc
fmull
rorb
inc
pushl
arpl
jae
jmp
sub
mov
inc
dec
xchg
xchg
dec
mov
aaa
dec
popl
mov
testb
push
fdivr
lret
xor
std
sbb
in
pop
xor
jb
mov
xor
dec
pop
outsl
pop
das
mov
xchg
and
mov
jne
bound
mov
mov
fs
pop
aas
lcall
mov
gs
imul
mov
repz
movsb
push
popa
dec
pop
stc
mov
into
pop
rorb
xchg
adc
iret
push
mov
mov
inc
leave
xchg
xchg
clc
or
fbstp
add
int
jecxz
dec
sbb
imul
mov
in
mov
push
and
cmp
mov
jo
jb
jbe
fcom
push
test
inc
outsl
mov
cmc
jb
xchg
addr16
mov
nop
stos
mov
test
out
mov
ficoml
arpl
fimuls
sub
inc
or
test
int3
fimuls
aam
push
dec
mov
push
data16
jnp
inc
jl
or
push
sbbb
fdiv
imul
in
das
mov
inc
jg
mov
jg
mov
ss
mov
rcr
dec
jg
mov
out
xchg
testl
sub
dec
loopne
jnp
imul
aaa
je
dec
sub
enter
loop
mov
mov
sub
fldt
jmp
adc
stc
xchg
dec
adc
jns
lcall
xor
add
lahf
lea
mov
mov
dec
pop
xor
jbe
xchg
int3
cmp
push
push
negb
adc
push
sub
pop
mov
ret
ja
jne
addb
xchg
lret
dec
push
loopne
int
cmp
stc
xor
mov
pop
js
iret
push
cld
jg
pop
xchg
jle
aaa
sub
pop
fadd
aam
xlat
xchg
or
jle
aad
xchg
out
add
add
ds
in
addr16
into
push
fwait
add
and
jo
sbb
mov
pop
rorl
mov
call
mov
mov
data16
std
mov
fldl
adc
cmpsb
fsubrl
idiv
mov
out
test
andl
inc
ja
cmp
ret
cld
shll
das
popf
cmpl
sti
imul
adc
fsincos
pop
push
lea
push
loopne
jns
add
xchg
in
pop
dec
sbb
bnd
dec
mov
arpl
arpl
pop
push
or
jmp
or
sub
repz
loop
or
jo
sub
adc
stos
fisttps
aam
cs
inc
andl
repz
arpl
test
xchg
inc
js
mov
adc
aaa
stos
das
xchg
mov
loope
lods
arpl
adc
rorl
add
and
or
push
xor
cmp
or
push
jne
mov
sub
inc
sahf
sub
jecxz
stos
out
mov
jmp
daa
sub
jge
loopne
and
cld
lock
dec
mov
test
std
movsb
sbb
xchg
icebp
add
sbb
mov
cmp
jp
test
push
pop
addr16
cwtl
dec
jb
sub
negb
inc
cs
xlat
mov
arpl
pop
ss
es
push
das
fisubs
mov
xchg
add
mov
lret
or
imul
lcall
cmp
clc
ja
xchg
sub
pusha
stos
or
divl
cmp
jl
repnz
lret
mov
mov
mov
xchg
fsubl
imul
inc
fsubrl
jns
cmp
jbe
jp
daa
pop
inc
or
lret
push
test
lcall
mov
idivl
imul
test
rorl
loope
xchg
cmp
mov
push
test
cmp
hlt
fistps
testb
fstl
es
xlat
jns
push
sti
dec
pop
movsb
dec
push
inc
loope
jae
out
shl
imul
mov
movsl
mov
xchg
cmp
pop
sub
mov
mov
fwait
pop
je
pop
cmp
lods
adc
ror
push
jle
mov
jmp
stos
rcrb
je
dec
xor
cmp
cltd
inc
mov
fdivr
jb
jl
test
ss
xlat
mov
pop
inc
test
shl
stos
jnp
jns
mov
dec
nop
mov
out
aas
scas
loope
mulb
out
cld
mov
cmpsl
xchg
jmp
clc
insb
xchg
imul
adc
xchg
push
pop
movsb
jnp
jecxz
pop
dec
hlt
sbb
out
adc
xchg
testb
cmp
jecxz
leave
and
dec
cmp
in
sahf
sbb
and
and
call
dec
mov
jae
cmp
pop
ss
push
mov
hlt
gs
mov
es
jle
test
or
jns
ret
lea
xchg
cwtl
subb
and
lret
xchg
clc
sbb
sbb
ja
xchg
dec
dec
hlt
and
jmp
push
orl
sbb
push
clc
aad
cltd
and
xlat
pop
mov
pushf
bound
mov
lods
mov
jne
cmc
jg
outsb
std
insb
fstps
call
mov
orb
movsb
pop
lods
mov
mov
mov
fistpll
js
ss
sub
fisttpll
xchg
push
cmp
inc
fistps
loop
sbb
loope
push
dec
and
in
cltd
popf
nop
test
mov
leave
add
sbb
cmp
sahf
insl
inc
mov
clc
jo
xchg
fisttps
dec
xchg
sbb
bound
sahf
js
sarl
sub
fistps
sub
xchg
mov
iret
lock
hlt
cltd
je
rolb
pop
xor
adc
pusha
xor
dec
popf
add
jns
inc
adc
out
xchg
and
adc
push
mov
cmp
pusha
adc
mov
pop
jmp
mov
int3
aad
leave
add
aad
pop
scas
xchg
lret
ds
inc
scas
mov
add
sbbb
in
mov
or
subl
jl
outsb
mov
sti
jns
mov
sub
xor
fistpl
repnz
and
push
sbb
clc
push
xor
iret
fnstenv
into
and
shll
sbb
mov
rcrb
sbb
gs
sub
add
loope
pusha
mov
nop
sti
push
xchg
add
rcrb
arpl
xchg
stos
scas
insl
xor
test
and
mulb
jnp
and
incl
add
sbb
xor
mov
push
xor
jnp
jmp
rcrl
sar
lret
imul
icebp
ret
sbb
xor
mov
or
std
mov
adc
mov
out
or
nop
imul
adc
test
std
cmp
mov
pop
ss
repnz
fstps
sub
jmp
pop
or
mov
inc
push
add
xor
gs
cmp
pop
jge
pop
mov
lods
repnz
fsubrp
mov
jl
or
stos
mov
lcall
in
movsl
aad
imul
shlb
fidivl
bound
daa
sub
cmp
imulb
adc
adc
sub
add
ret
in
add
das
rolb
test
xor
mov
adc
inc
ret
in
sbb
aas
xor
inc
fcmovnb
and
lods
adc
in
fadds
iret
mov
dec
push
mov
clc
adcl
push
mov
push
leave
es
sub
incb
add
cwtl
and
mov
sahf
stos
cmpsb
push
cld
adc
inc
out
insb
xor
adc
push
mov
test
inc
sbb
cmp
jbe
cmpsl
pop
dec
cwtl
cs
sub
rcrl
xchg
mov
ljmp
je
sbb
sub
lods
cmpsl
sbb
cmp
dec
push
pop
mov
aaa
cmpsl
dec
sub
mov
clc
jecxz
jo
lret
stos
push
call
pushf
add
ja
xlat
addr16
in
roll
dec
xor
add
push
xchg
adc
call
dec
mov
repz
jecxz
movhps
fiadds
xrelease
adc
cmp
push
js
jae
sub
jo
mov
decl
cmp
fistps
cmp
int
sbb
xchg
jmp
sub
das
adc
jecxz
xchg
push
arpl
pop
fisubs
xchg
fbld
xchg
cmp
mov
sub
imul
enter
mov
mov
das
bound
rorb
mov
cli
lret
xor
lock
add
inc
inc
mov
scas
mov
mov
or
ja
stc
cltd
pop
push
mov
popa
pusha
cmp
ja
sahf
pop
lahf
enter
out
pop
shl
int3
pop
movsb
xor
inc
or
xorb
adc
pusha
lods
mov
sub
sahf
sti
roll
sbb
and
popa
xchg
or
mov
sub
shl
cld
pusha
lcall
mov
or
pop
cs
rorb
adc
mov
jmp
fadd
imul
in
scas
ja
jbe
test
mov
jge
sub
cmp
push
fadds
cmp
xor
cmpsl
popf
lock
adc
js
aad
add
outsb
cli
and
scas
sbb
rolb
pop
mov
mov
imul
outsl
xchg
in
and
lret
fcmovnbe
mov
je
pop
jne
and
test
or
add
lcall
aaa
jno
mov
sub
mov
hlt
les
push
fwait
mov
mov
inc
rorb
or
les
pop
gs
mov
dec
lods
sbb
push
or
xchg
popa
cwtl
movsb
jno
icebp
in
sbb
shll
cmp
and
adc
jg
xchg
xchg
push
dec
adc
adc
push
nop
js
negb
mov
lds
in
or
jl
xor
sbb
dec
mov
cmpsb
xor
jne
push
xchg
sub
cwtl
gs
fbld
xchg
sub
inc
push
cmp
dec
aam
adc
or
mov
mov
sbb
cmp
in
and
xor
addb
scas
daa
andl
cmp
rorb
arpl
out
and
fdivr
inc
dec
mov
sbb
push
sbb
ds
clc
inc
dec
outsb
inc
cmp
and
jmp
imul
and
out
jle
pusha
sbb
adc
rclb
int3
fiadds
jecxz
or
push
les
sbbb
mov
sbb
cmp
aad
data16
imul
rclb
mov
outsl
mov
adc
pop
cli
sub
mov
lret
mov
fwait
mov
int
pop
sbb
jo
test
out
in
mov
pop
aas
roll
mov
pop
inc
outsb
xlat
push
lret
mov
or
inc
jp
inc
ror
push
jb
inc
jle
push
mov
popf
scas
mov
mov
loope
xor
dec
aas
sbb
jns
roll
pop
xor
push
lods
shll
lret
sub
lcall
xor
psubsb
adc
cwtl
inc
test
add
mov
and
mov
es
sarl
out
mov
jno
stos
call
repz
jno
add
mov
rcll
call
inc
mov
out
test
pmulhuw
xchg
aas
or
fisubrs
xor
mov
pop
mov
jno
add
pop
js
mov
mov
or
jno
das
inc
addb
out
dec
ja
fldenv
fwait
mov
push
push
adc
cmpsl
inc
add
jmp
insl
mov
ja
sub
xor
inc
in
pop
cli
enter
sti
popf
or
jb
mov
sub
call
push
js
mov
lods
out
movsb
jne
push
int3
sti
pop
ljmp
int
bound
push
movsl
pop
aas
cmp
add
aam
adc
les
pop
sahf
imul
fucom
leave
jo
mov
inc
in
leave
mov
pop
lock
adc
jge
push
pop
inc
movsb
xchg
fmul
jmp
aad
and
and
jns
xchg
arpl
jl
rcrb
mov
lds
adcl
dec
out
push
sbb
add
lret
xchg
and
pop
push
or
gs
dec
mov
or
sarl
push
pop
dec
adc
xchg
das
inc
mov
cltd
mov
int
and
icebp
pusha
push
dec
sub
dec
pop
add
jns
daa
inc
mov
imul
ljmp
lret
imul
ror
fwait
mov
test
jae
fstl
dec
sbb
or
xor
sub
mov
xchg
dec
addb
hlt
in
mov
xchg
add
movsb
xor
mov
inc
and
pop
inc
mov
cmpsb
out
arpl
inc
andb
and
popa
icebp
jb
pop
rcrb
out
jb
dec
xchg
subl
sbb
repz
fstps
pop
sub
adc
mov
push
pusha
cli
mov
data16
loop
scas
mov
xor
int
outsb
add
sarb
mov
mov
xor
rorl
pop
push
jne
stc
xor
adc
roll
cmp
ss
cmp
jle
loope
inc
ljmp
jo
cwtl
push
jo
std
cwtl
cmp
jns
ljmp
push
xor
cwtl
ljmp
and
mov
shll
push
mov
push
xor
lahf
lcall
pop
imul
mov
sahf
inc
stc
fists
xchg
fsubs
pop
pop
xchg
push
dec
fdivl
mov
cli
adc
adc
add
push
jle
pop
popl
mov
pop
and
dec
add
popa
daa
pop
aaa
mov
jmp
mov
mov
and
xchg
mov
or
pusha
je
push
test
sbb
idivl
mov
or
jp
pop
mov
stos
addb
lea
mov
sbb
mov
pushf
jo
jno
in
and
sub
lods
adc
dec
jnp
jmp
xor
in
outsb
imul
jp
and
sbb
or
sbb
mov
push
push
cld
lods
aas
push
and
and
fisubrs
repnz
mov
sub
call
or
sbb
sub
imul
mov
add
lahf
rorb
lret
sub
int3
xchg
insl
adc
decl
xor
cs
imull
cli
inc
xchg
and
push
shrb
imul
ja
jnp
stos
scas
lcall
ljmp
into
and
xchg
lock
or
inc
sbb
jne
mov
lret
sbb
pop
in
push
mov
mov
push
popa
ja
loopne
xchg
faddp
pusha
sbb
add
push
xchg
js
stos
xor
shll
inc
mov
pushf
or
jnp
mov
notb
sub
and
cltd
inc
sbbb
xchg
xchg
push
sbb
into
sti
and
jnp
loope
mov
lcall
mov
out
xor
inc
mov
orb
xlat
cld
mov
flds
lret
mov
scas
fisttpll
mov
sbb
stos
mov
jno
pop
mov
into
xchg
hlt
mov
push
clc
loope
mov
addr16
push
outsb
jb
lret
mov
mov
jns
and
test
into
dec
push
push
test
sub
push
aam
fldenv
popa
test
iret
inc
mov
imul
out
leave
mov
and
daa
lcall
fcomip
mov
push
pop
push
xor
mov
cmp
jo
leave
inc
outsl
lret
daa
popl
lock
outsb
std
je
fldcw
mov
xorl
add
mov
mov
movsb
sahf
aam
mov
out
pop
js
mov
adc
test
inc
sub
gs
inc
sbb
rclb
push
aas
xchg
xor
mov
xchg
sbb
adcl
or
les
sti
ss
inc
push
lahf
jecxz
push
inc
lods
sahf
popf
xchg
pop
xor
std
dec
arpl
push
mov
adc
inc
add
js
mov
in
int
sbb
rcl
push
jecxz
dec
fisttps
sbb
adc
mov
jl
imul
dec
sbb
inc
lds
fildl
xchg
loopne
add
mov
jmp
dec
inc
fwait
sub
mov
lock
outsb
xchg
mov
repz
add
cmp
cmp
ficoml
push
pushf
stos
dec
enter
sub
rolb
movsl
mov
and
clc
mov
cmp
push
push
jp
jmp
jnp
adc
or
sbb
jge
and
adc
out
push
loop
xor
jnp
mov
and
pop
xchg
ljmp
cltd
arpl
dec
mov
add
or
icebp
mov
xchg
stos
fsts
push
test
pop
sbb
rorb
xchg
popa
cmc
push
cmp
bound
and
push
cld
popf
cmp
sti
and
mov
mov
fildll
jno
loop
loopne
xchg
cmp
andb
stos
jmp
inc
mov
add
mov
jp
fstl
jp
mov
cmpsb
stc
sub
shrb
ljmp
mov
ss
cmp
push
xor
adc
rcll
mov
push
push
aam
iret
jae
mov
jl
ss
js
xchg
mov
arpl
jmp
push
aad
or
lea
insl
sub
push
std
mov
xor
outsb
popf
push
or
loop
xor
loop
push
mov
out
jp
jp
jae
mov
aas
orb
push
xchg
sti
clc
scas
xchg
mov
and
mov
rcrl
cli
mov
push
or
incl
pop
xchg
outsb
rolb
push
mov
repz
jbe
les
inc
outsw
mov
fisubs
push
in
mov
or
cmpl
fcomps
outsb
dec
dec
adc
repnz
outsb
xchg
movsl
jne
add
stos
aam
int
dec
pop
cs
outsl
loope
outsb
xchg
and
mov
bnd
mov
mov
mov
sub
pop
mov
loope
arpl
hlt
cli
mov
sbb
xchg
inc
icebp
jp
sbb
lcall
push
pop
dec
xchg
icebp
cwtl
pusha
hlt
stos
lret
lds
movb
adc
and
inc
in
retw
add
xchg
adc
xchg
xchg
adc
xchg
ret
movsb
push
xor
sub
mov
sbb
or
xchg
and
mov
scas
bound
mov
sub
jg
ljmp
movsl
xor
push
inc
shlb
add
ljmp
testb
out
dec
jnp
ja
lret
stc
and
stos
in
andb
sub
jnp
cmp
pusha
sub
xchg
pop
inc
push
push
call
jmp
mov
scas
mov
push
scas
sub
lock
mov
sbb
adcb
stos
jge
dec
lods
mov
mov
and
rorb
xchg
pop
mov
out
ljmp
or
sbb
inc
xchg
lahf
and
pop
push
jmp
movsb
mov
fistl
jp
push
out
adc
and
insl
xor
pop
jp
lahf
dec
add
and
xorb
and
pop
push
insb
daa
outsb
das
sbb
mov
cmpsb
lock
pop
stc
push
outsl
leave
ljmp
and
sbb
cmc
scas
or
pop
xchg
and
notl
sub
fists
jl
jb
mov
adc
in
add
test
jp
mov
in
movsl
inc
rorb
xor
pop
mov
cltd
ss
pop
inc
repz
push
shr
mov
stos
xchg
imul
adc
xchg
xor
sub
test
ficomps
dec
cmp
xor
mov
int3
cmp
sbb
ret
push
xor
or
pushf
jae
and
lret
mov
push
cs
fiadds
in
outsl
xchg
and
push
jmp
data16
pop
xchg
ds
mov
movsl
lahf
mov
lods
pop
mov
jmp
mov
mov
jne
cwtl
stos
sbb
jnp
sbb
add
push
and
iret
inc
mov
xor
or
dec
idiv
mov
sbb
cmpsl
mov
sbb
push
call
adc
int
jecxz
adcb
aas
not
sub
adc
js
pop
jle
in
cli
xorb
lret
lret
fisttpl
xor
fwait
pop
subb
ror
cmpsb
xor
jns
sbbl
aam
adc
fistpl
mov
mov
push
popf
sbb
xor
imul
in
inc
int3
xor
sarl
jl
lds
xlat
xchg
inc
add
cmp
mov
aaa
xchg
dec
pop
daa
jbe
scas
movsl
outsb
jnp
xor
fstl
jnp
push
hlt
leave
lods
fimuls
popa
ficoms
push
jp
insb
cs
cmp
out
sti
dec
push
lea
or
adc
push
pop
mov
enter
dec
in
sub
mov
gs
push
imul
addr16
and
ds
sbb
gs
inc
or
dec
fcomi
decl
mov
mov
mov
nop
fcom
adc
hlt
arpl
push
cld
ss
lds
scas
jo
sbb
inc
xor
arpl
outsb
sbb
es
push
jge
lcall
sub
dec
test
jb
fists
stos
fidivl
int3
mov
jecxz
pushf
fimull
outsb
insb
and
dec
pop
popa
icebp
or
rcrb
sbb
jno
repnz
xor
stos
pop
mov
adc
jne
ret
ds
push
into
sti
gs
xchg
push
divl
sub
ja
mov
imul
repz
adc
cmp
rolb
pusha
push
xchg
cmpsl
add
cmpsl
xchg
xor
fcmovnu
push
inc
pop
mov
stos
sub
out
mov
cmpsb
icebp
out
subb
icebp
xchg
sub
push
xor
fidivrs
insb
mov
ljmp
outsl
push
xor
movsl
mov
lods
mov
push
cwtl
xor
add
push
jge
sub
mov
test
test
push
push
loopne
push
imul
shr
cli
xor
leave
mov
add
stc
pop
xchg
aaa
mov
inc
pop
inc
push
jl
iret
popf
mov
inc
out
jae
dec
shlb
loop
bound
scas
loope
repnz
fsubrl
fs
cmc
rorb
jg
mov
mov
jo
xor
mov
fmull
push
icebp
dec
ficomps
mov
cwtl
lcall
pop
sub
xlat
mov
xlat
mov
lock
push
dec
mov
or
outsl
mov
inc
cmp
jbe
dec
mov
and
fnstsw
scas
inc
dec
mov
mov
mov
xor
iret
stc
in
jl
sahf
mov
iret
int
test
into
pop
and
push
shlb
std
mov
jno
jmp
out
rcll
xchg
inc
inc
adc
pop
sbb
push
jbe
out
add
into
test
ja
pop
lock
cltd
xchg
push
jno
cli
mov
and
out
enter
cmp
mov
lahf
lret
sahf
test
inc
pop
mov
adc
mov
cmp
in
leave
mov
int
das
das
aaa
xchg
push
adc
cmp
xlat
push
mov
outsl
push
adc
cmp
dec
sbb
lret
popf
aas
sub
pop
jnp
mov
xor
cmp
lahf
nop
sub
xor
mov
add
xor
adc
pop
lods
and
clc
jae
dec
inc
fwait
mov
sbb
into
jecxz
scas
into
xorl
dec
hlt
mov
push
gs
xchg
pushf
filds
fidivl
inc
push
fnstcw
shlb
mov
push
shr
pop
mov
pop
icebp
js
add
push
and
loope
leave
sbb
jno
test
test
jb
mov
push
bound
daa
fists
outsb
fdivr
imul
sbb
sub
mov
sbb
pop
add
nop
jns
or
out
jnp
je
pop
dec
mov
in
or
sbb
pushl
sub
jo
imul
pop
enter
loope
sbb
sti
iret
ret
pop
xor
mov
frstor
jp
es
cmp
sbb
cmc
dec
clc
lods
add
add
mov
add
jns
cmp
in
sbb
jmp
mov
cs
lods
iret
lcall
stos
les
out
and
arpl
push
mov
roll
lods
jno
ss
cmc
iret
push
or
and
into
mov
fcoms
mov
adc
adc
push
inc
mov
sti
leave
xor
jp
sub
movsl
imull
dec
mov
push
sti
rcrl
jle
jecxz
push
loopne
push
add
push
push
pop
pop
out
pop
push
adc
ljmp
out
aam
out
movsb
cmp
or
nop
xor
mov
pop
mov
imul
pop
scas
mov
xchg
sub
and
dec
cltd
mov
sub
or
sub
shll
gs
lods
and
lods
nop
push
stc
insb
cmpsb
sub
xchg
mov
cmpsl
mov
roll
push
push
or
loope
ljmp
dec
fcomp
adc
scas
xchg
in
cmp
loop
sbb
inc
add
ljmp
testb
data16
dec
push
ret
mov
adc
xor
inc
push
push
pop
xor
or
es
sbb
push
loope
les
movsb
out
ljmp
and
sahf
fldcw
fidivrl
xchg
repz
and
or
pop
jno
faddl
push
das
mov
aas
aaa
neg
cmp
mov
cmp
sbb
int
push
and
lahf
in
inc
repnz
or
jmp
jle
popf
sbbl
mov
mov
add
mov
stc
or
out
idivl
adc
xchg
jg
arpl
sub
sub
loope
fwait
lods
adc
xlat
add
mov
jnp
jae
loopne
xor
ja
sbb
ss
ret
lret
mov
leave
cmpsb
adc
dec
or
scas
cmc
mov
add
inc
add
arpl
fildl
xchg
push
aaa
pop
xchg
lret
xor
xchg
fidivrl
xor
or
dec
js
outsb
mov
dec
push
or
inc
loopne
push
mov
fimuls
hlt
pop
and
mov
xchg
xchg
fstps
pop
adc
inc
sub
xchg
stos
push
scas
test
and
xor
mov
pop
mov
sbb
leave
sbb
jno
inc
int
sub
pop
mov
in
data16
push
mov
ror
in
sbb
sbb
jbe
call
jae
hlt
lods
jae
push
movsl
add
mov
or
fnstsw
fldl
loop
inc
lahf
outsl
pop
aad
push
xor
pop
out
lcall
pop
out
outsl
jge
xchg
addr16
fyl2xp1
sub
int
insl
loopne
pop
sahf
jb
icebp
insb
sarb
sub
lret
fwait
push
popa
mov
xor
add
les
test
adc
dec
rorb
ficoml
sbb
loopne
call
jb
and
xchg
push
sub
push
xlat
jecxz
adc
or
xchg
mov
pop
push
sub
add
popf
xorl
mov
popa
mov
fistpl
sub
inc
xor
fistpl
cwtl
mov
enter
in
mov
int3
jae
mov
int3
and
loope
lcall
out
cmc
cmp
inc
popa
mov
mov
imul
dec
loope
or
pop
out
mov
out
push
sbb
div
cmp
ds
fisttpl
pop
mov
lcall
cmp
ja
sbbb
sub
std
subb
lahf
dec
pop
mov
cmpb
xor
xchg
mov
fiadds
fcoml
js
sbb
aas
mov
jns
imul
add
and
mov
dec
mov
aaa
ja
cmp
or
xlat
les
mov
dec
push
insl
sbb
std
add
repz
cld
adc
or
xchg
pop
xchg
push
push
sbb
fmull
mov
in
sub
lods
loope
notl
pop
loopne
push
jmp
or
out
je
mov
cmpsb
inc
mov
iret
fiadds
pop
loopne
imul
nop
aaa
adcl
lods
pushf
test
clc
frstor
icebp
add
sub
sub
cwtl
adc
jne,pt
rcrb
mov
pop
add
jge
ja
nop
jne
jnp
rcrl
dec
dec
aas
jp
inc
pop
xchg
pop
mov
inc
jno
fcomi
or
lock
in
jo
addr16
mov
adc
pop
dec
bound
sub
xchg
aaa
shll
pop
filds
dec
lods
sbb
inc
lret
ja
push
out
insl
cmp
pop
mov
dec
cmpsb
cld
mov
sub
adc
and
in
jae
insl
push
sbb
in
cmp
pop
push
push
cld
push
sub
sbb
fmuls
test
sub
sarb
pop
aam
dec
push
outsl
aad
jg
push
jecxz
es
pop
mov
cltd
mov
out
int
push
jnp
aaa
push
fiaddl
cmp
leave
cmpl
inc
mov
jl
inc
insl
inc
mov
adc
ja
push
ret
jo
jmp
xchg
inc
and
mov
xor
rcrl
lock
lds
sub
dec
adc
fimuls
dec
push
test
sbb
fs
into
sub
mov
mov
or
xor
fdivs
test
or
mov
dec
add
popf
xchg
mov
mov
mov
test
int3
lahf
ss
adc
cmp
pop
dec
cwtl
jge
lret
stos
fmull
mov
sub
lret
sahf
push
pop
daa
dec
and
shlb
mov
out
mov
adc
dec
lods
add
inc
or
fdivp
mov
mov
inc
sbb
pusha
add
and
or
enter
mov
push
aaa
push
int3
icebp
notb
and
pop
jecxz
gs
dec
adc
pop
popa
add
sbbb
cmp
sarb
icebp
icebp
sub
iret
rcpps
mov
xchg
mov
sub
dec
sbb
and
fsubrl
leave
aam
jnp
pop
shrl
sbb
adc
sbb
ljmp
scas
mov
in
sub
repz
sti
sub
lahf
rcpps
xchg
mov
and
cmp
insb
sub
das
lds
mov
fwait
xor
outsb
ret
sub
ret
rorl
test
mov
xor
mov
pop
xor
add
xor
cmp
jo
inc
jo
or
jl
dec
sub
pop
sahf
cmc
xor
dec
push
imul
fidivrs
adc
mov
pop
fnstsw
mov
shll
cli
movsb
std
pop
push
fiaddl
push
add
xchg
or
mov
jne
inc
lods
stc
push
or
shrb
pop
jge
cmc
loopne
mov
popa
dec
int
mov
pop
pusha
push
add
adc
shrb
movsl
xchg
inc
xchg
jne
sbb
into
xor
repz
inc
jae
jmp
adc
popa
sbb
sbb
mov
or
mov
in
ljmp
movsl
daa
sub
lea
pop
mov
cld
or
std
or
in
cld
icebp
sbb
mov
or
pop
jg
or
insl
aam
les
pop
sub
xchg
cmp
mov
xchg
mov
std
movsl
popa
ret
ret
push
jae
jge
xchg
scas
rclb
std
mov
sbbl
subl
data16
stc
mov
sahf
xchg
mov
imul
repz
inc
hlt
int
icebp
ret
js
mov
adc
pop
mov
mov
jno
push
and
insl
out
fdivl
hlt
mov
mov
int3
iret
jbe
fs
mov
iret
lahf
rcrl
and
mov
cmp
je
push
in
ja
cmp
cmp
movsb
inc
orb
inc
in
mov
mov
sbb
push
sbb
out
cmpsl
sub
sbbl
lods
xchg
loope
mov
in
popf
ss
and
inc
jl
cmp
jecxz
dec
test
inc
jb
fs
dec
push
sti
in
xchg
cs
pop
sbb
cmp
test
sub
aaa
shll
orb
or
aam
mov
movsl
adc
ret
cmp
push
adcl
movsl
call
and
mov
hlt
icebp
cmp
sbb
jo
aad
xchg
enter
nop
mov
xchg
outsb
aas
jmp
adc
mov
push
pop
jle
or
cmpsb
sub
jno
fmul
js
addl
or
dec
cmc
or
lods
cltd
adc
push
fbld
push
inc
aas
sub
in
sbb
push
mov
pop
mov
or
sub
mov
mov
push
push
nop
or
xchg
push
lds
and
dec
sub
pop
pop
pop
xchg
adc
repz
xchg
push
push
fstps
push
pop
and
pop
mov
fsts
jae
push
mov
xchg
lahf
ljmp
adc
fwait
sldt
push
cmc
sub
fs
mov
jle
xlat
addr16
arpl
into
ja
adc
dec
call
xchg
or
les
add
enter
pop
mov
and
and
or
dec
dec
adc
sub
sub
lahf
leave
pop
adc
adcb
cltd
add
adc
sub
popa
inc
sub
xlat
ret
out
ljmp
in
sub
adc
sahf
shlb
mov
out
jo
jge
jbe
mov
pop
js
bound
lea
test
inc
add
aad
xchg
inc
xchg
push
push
sahf
cmpsl
xor
scas
lcall
int3
jle
int
ret
mov
mov
dec
xchg
adc
stc
shrb
adc
sarl
cltd
hlt
clc
insl
mov
jae
mov
xor
into
push
or
call
sub
adc
mov
xor
jne
cmpsb
inc
lret
xor
fsts
adc
add
addr16
mov
roll
mov
or
cwtl
cwtl
hlt
fstpl
inc
imul
xchg
pusha
cwtl
pop
insl
add
xchg
roll
jl
xor
add
loop
test
jo
out
jmp
or
pushl
cmp
push
xchg
adc
cmp
sub
das
mov
hlt
xchg
adc
mov
mov
roll
inc
in
out
pop
or
xchg
test
mov
sbb
jl
xchg
pop
cltd
push
aam
or
pop
sbb
and
test
lret
dec
fwait
out
pop
xchg
lods
ds
or
sahf
outsb
mov
push
lret
xchg
push
xor
xchg
loopne
mov
jno
cmpsb
ja
outsb
lea
mov
sbb
adc
push
scas
xchg
cmp
sbb
mov
repz
dec
movsl
mov
out
inc
jp
sub
jno
push
daa
test
dec
fisubs
out
push
mov
and
lret
gs
sub
dec
sarl
or
add
insb
mov
mov
nop
push
or
lcall
push
fsubrs
flds
inc
push
jl
stos
sbb
dec
sbb
cmc
xlat
mov
mov
mov
stos
je
mov
lret
fadds
dec
data16
lret
sbb
sysret
jge
ret
jne
xor
sbbb
inc
xchg
adc
jnp
adc
xchg
add
shrl
jmp
jg
hlt
rcr
xor
dec
adc
mov
push
pop
jp
cmovae
adc
or
pop
sbb
repz
inc
mov
cmc
pop
mov
ljmp
xchg
mov
cmp
cs
push
lea
outsl
sbb
lret
icebp
xchg
ffreep
stc
mov
lods
leave
mov
mov
mov
push
xchg
ja
xchg
aam
and
les
mov
lock
mov
mov
mov
shll
rcrb
xchg
mov
push
movsl
jns
cmp
sbb
mov
jge
stos
xor
dec
mov
add
add
jae
push
cmp
inc
push
sbb
dec
stc
pop
dec
clc
adc
jno
rcrb
push
or
adc
adc
mov
in
adc
jbe
mov
ss
lcall
icebp
or
ja
push
shr
pop
in
outsb
cmp
xor
push
xor
fidivrl
jge
add
mov
loopne
xchg
pop
pusha
test
and
lret
sahf
mov
adc
mov
lret
or
pop
or
fdivrp
push
push
inc
dec
sarb
push
cmp
shrb
jl
cmp
lret
pop
and
adc
jecxz
and
sbb
movsb
shrb
es
push
jns
sub
rcrb
xor
pop
in
sbb
mov
xor
test
dec
push
cmp
mov
lods
js
sub
sbb
out
adc
jmp
lcall
mov
scas
sbb
pop
lret
adc
fcomi
or
sub
sbb
movsb
lcall
jg
adc
jae
push
cmp
inc
das
stos
scas
loopne
pop
jb
fistpl
lea
lret
add
xchg
mov
cmp
out
jnp
sub
dec
xchg
ficomps
jo
aad
dec
bound
into
clc
dec
popa
xchg
sti
lcall
daa
pop
icebp
lock
aaa
jecxz
sahf
sbb
adc
cli
in
outsl
jne
pushf
sarl
and
inc
xchg
into
xchg
sub
push
movsl
cmc
add
xchg
push
jne
jnp
push
das
or
jmp
and
into
ret
sub
mov
loopne
adc
mov
pop
xchg
mov
in
jg
or
jle
adc
ljmp
clc
mov
rclb
lea
xor
divl
pushf
xor
mov
pop
out
cltd
enter
mov
xchg
sbb
adc
push
hlt
inc
aam
pop
cmp
sub
loope
mov
push
ljmp
ljmp
fildll
mov
inc
imul
mov
sbb
mov
sub
dec
cmp
and
xchg
add
aaa
jecxz
pop
cltd
cmpsb
sti
repnz
les
stc
leave
fmull
mov
xchg
icebp
nop
cs
and
fimull
mov
dec
push
push
enter
xchg
mov
aaa
sub
or
mov
clc
aas
mov
pop
pop
in
nop
sarl
lea
enter
xor
mov
movsb
push
adc
dec
icebp
ja
add
mov
mul
xor
xchg
lret
and
sbb
fistps
ret
ret
mov
loop
ret
ljmp
popf
shr
push
enter
add
mov
notb
cld
mov
in
clc
int
pop
orb
test
jbe
cs
push
arpl
xchg
or
loope
jg
fidivrs
cli
sub
sbb
push
nop
mov
cmp
ret
sti
xchg
int3
pop
add
xor
in
mov
inc
push
sub
mov
jns
fnsave
cmc
fisttpll
jnp
xchg
gs
daa
add
fstpl
pop
mov
xlat
stos
add
and
movswl
cwtl
lret
mov
rcll
test
sahf
sub
lds
xor
in
fimull
mov
fildll
cmp
addb
scas
test
sub
push
stos
clc
add
sbb
arpl
imull
xchg
in
int3
push
xor
hlt
adc
fimuls
es
pusha
mov
sbb
push
out
sbb
jl
adc
xchg
cmpsb
jae
dec
and
push
xor
aaa
mov
pop
shr
ret
push
fs
lcall
xor
in
jne
cli
push
dec
mov
xor
push
sub
xchg
out
scas
mov
jbe
imul
pop
push
sub
shr
fwait
or
mov
test
in
cmp
ret
roll
enter
mov
push
pop
int3
mov
push
call
mov
push
rep
sbb
shrb
jp
jl
gs
shrl
sbb
jle
test
pop
js
sbb
mov
push
pushl
in
xchg
bound
ret
push
rcl
imul
inc
ds
or
pop
loop
xor
mov
loopne
cld
iret
jge
out
xchg
mov
lret
or
add
rol
lahf
aas
fdivrl
xchg
imul
decb
sbb
adc
cli
push
xchg
shlb
imul
inc
aam
dec
push
mov
adc
pushf
lcall
scas
out
rorb
clc
xchg
pop
lods
addr16
ffree
sbb
lcall
sub
or
inc
std
xlat
ret
enter
and
push
sahf
sahf
mov
stos
push
fst
ds
push
xlat
cmp
les
jns
das
outsb
mov
loop
aas
stc
dec
popa
cli
mov
sbb
sub
xchg
xchg
push
insb
xchg
jmp
xor
mov
jb
cwtl
ret
in
dec
out
lea
mov
lret
iret
test
ss
clc
stos
and
jae
dec
pushf
adc
pop
imul
or
mov
inc
sarb
pop
mov
cmc
pop
xchg
sub
mov
sbb
xchg
mov
xchg
hlt
addr16
pop
sub
mov
scas
sub
mov
fsubl
scas
and
into
roll
jae
fs
sbb
lahf
push
push
popa
adc
ret
add
daa
xchg
pop
and
pop
inc
sarl
and
dec
push
or
js
lret
jecxz
loope
lcall
mov
enter
sub
inc
loope
clc
sub
daa
jo
aaa
xchg
cmp
xor
pop
inc
shll
fwait
lret
fwait
icebp
sahf
or
push
pop
mov
lcall
dec
jg
push
daa
sub
sbb
aam
cmp
jb
jg
loop
and
mov
mov
popa
add
neg
pop
xchg
movb
push
jbe
shl
jo
sarb
or
sub
and
pushf
adc
inc
sub
xchg
insl
std
mov
sahf
mov
pop
mov
inc
out
adc
rcl
mov
jb
ljmp
jmp
mov
cmp
xor
xchg
and
das
sbb
and
mov
repz
repnz
adc
xor
test
das
ljmp
pusha
push
icebp
mov
and
sub
dec
ds
std
sbb
dec
jnp
sub
pushf
or
aaa
cmp
test
inc
std
and
nop
mov
adc
and
icebp
xchg
cmp
jne
test
ds
insb
fsubs
sub
push
sub
cmpsb
cmpl
popf
mov
nop
mov
push
insl
pop
dec
icebp
xchg
enter
fsubrs
mov
jne
pop
xchg
sub
adc
pop
pop
sbb
add
jno
ds
mov
mov
pop
outsb
dec
lret
cmp
cli
mov
push
add
pop
and
ficoms
jno
in
in
fldt
fwait
sub
sarb
sti
push
push
mov
or
or
out
das
mov
push
adc
enter
mov
movsb
cmp
cld
je
gs
faddl
std
xchg
ja
dec
cmp
das
and
pop
sbb
fildl
sti
inc
fcmovbe
int
xor
add
xchg
cld
std
mov
cmc
add
mov
pop
jae
pop
jp
xor
jo
icebp
loope
addr16
cmovne
cmpb
js
or
mov
jmp
in
pushf
movsl
mov
fsubr
push
mov
scas
mov
adc
push
fcoms
adc
cmpl
inc
enter
sbb
repnz
sub
loopne
pop
bsf
mov
adc
les
stos
test
sbb
cs
es
dec
adc
pusha
inc
xor
loope
mov
shrl
ss
lcall
jne
push
jno
cmp
movsb
push
pop
or
add
iret
popl
loop
cld
mov
push
lret
dec
jbe
push
mov
repz
in
sub
jne
lods
js
call
test
push
loopne
test
push
xor
pop
dec
pop
add
nop
aad
lcall
movb
int3
mov
and
push
fisttpll
or
in
inc
out
xor
push
jp
arpl
repz
nop
aaa
sbb
pop
lahf
test
popf
jmp
sub
jge
sbb
xlat
movsb
push
shlb
push
lods
sub
outsl
adc
sbb
or
pop
cmc
repnz
mov
fidivrs
mov
imul
outsb
nop
inc
jl
int
enter
and
scas
cli
dec
lds
push
sti
dec
jo
add
dec
push
lret
dec
push
xchg
rcrl
loope
hlt
bound
sbbl
out
jnp
adc
add
clc
cmp
pop
into
cmp
test
mov
xlat
aas
jge
popa
das
rolb
es
in
jmp
xlat
aam
sbb
ret
incb
cs
push
es
out
cltd
sub
add
or
sahf
xor
lods
ja
pop
cmp
cmpsl
movsl
mov
pusha
sub
movmskps
inc
jl
jl
sarb
mov
daa
sbb
pop
sub
call
adc
pop
adc
inc
jno
ret
sub
lods
xchg
xchg
jne
hlt
cli
and
lret
xchg
out
ljmp
and
xlat
cmc
push
fimuls
inc
loopne
sub
sbb
mov
xchg
ja
mov
neg
cli
stc
popf
in
pop
insl
mov
or
dec
bswap
add
fs
daa
or
xchg
sarb
inc
pop
mov
sub
ss
daa
adc
addb
cmp
cli
sbb
push
xchg
xchg
push
icebp
fdivl
insl
into
pop
idivl
jns
jp
push
inc
iretw
lods
pop
push
rolb
sub
push
or
into
xchg
shll
divb
mov
outsl
lret
cltd
push
adc
cmpsl
jne
shl
ret
and
push
data16
sbb
adc
shl
lret
or
xchg
push
js
push
pop
repz
pop
cmpsb
lahf
rcrb
arpl
les
cli
xchg
push
cltd
imul
pop
cmpsl
out
push
jp
jle
ja
int
push
nop
outsl
sub
test
push
mov
rorb
insb
pop
aas
cmovo
sbb
hlt
lock
fucomp
mov
loop
test
xchg
scas
jbe
mov
xchg
mov
js
into
xchg
and
int
mov
arpl
xlat
add
pop
cli
movsl
ja
ja
dec
pop
stc
mov
mov
int
push
xchg
sub
movsb
xor
adc
shr
jmp
mov
fs
cmp
aad
imulb
into
cld
inc
sbb
cmpsb
lahf
jl
add
mov
mov
out
push
add
lds
push
call
shll
sbb
les
insl
test
inc
mov
test
pop
push
aam
adc
add
adc
xchg
add
inc
inc
cmp
out
shl
stos
fldenv
pushf
lods
imul
int3
sbb
jmp
cwtl
cmpb
sub
push
movsl
cmp
ja
addb
lock
mov
notb
ud1
icebp
xchg
sbb
push
xchg
cmp
mull
sbb
xlat
cmc
cld
into
test
pop
adc
shlb
les
jl
orl
xlat
es
rcl
cmp
shlb
adc
or
mov
fildll
aad
mov
cld
pop
fistpll
jmp
and
push
js
rcrb
lret
xchg
lcall
scas
call
lds
aam
dec
mov
stos
inc
lods
cmp
add
jp
cmpsl
pop
and
mov
sbb
fcoms
outsb
pusha
pop
arpl
push
sub
mov
into
jp
sbb
jp
or
std
adc
call
jo
pop
cmc
fstps
int3
cltd
xchg
lods
fildl
dec
mov
repz
mov
andb
sbb
xchg
out
xor
lea
idiv
shl
pop
loope
dec
add
xor
jb
repnz
cmc
call
test
rcrl
loopne
push
push
pop
out
inc
loope
and
popf
adc
sbbl
mov
test
cmp
dec
or
mov
stos
sti
and
iret
dec
clc
pop
test
push
dec
push
pop
in
xor
cwtl
xchg
insl
inc
mov
bound
test
mov
hlt
jae
sbb
xor
or
jbe
in
dec
or
cli
bound
aad
imul
int
shlb
pop
dec
cmc
jl
jg
pop
sub
lcall
inc
xchg
mov
sub
mov
orl
mov
ret
adc
pop
mov
int3
mov
gs
jae
xchg
xchg
xchg
jno
sti
mov
lcall
mov
out
inc
adc
test
lcall
popl
lods
pop
out
pop
cmp
sbb
mov
mov
push
call
and
xchg
mov
mov
mov
adc
adc
mov
push
jmp
loop
push
push
jne
cmpsb
ret
jnp
cmp
and
sbb
cmp
in
icebp
xchg
adc
and
clc
and
cltd
xchg
add
shll
test
adc
cld
lds
adc
xor
dec
daa
test
repz
mov
xchg
cmc
or
out
out
jb
push
rcr
in
xchg
test
mov
cld
xchg
cmpsl
dec
mov
or
dec
xchg
ljmp
enter
sbbl
fisubs
mov
inc
xor
rcr
push
cmpsl
lock
ja
imul
xor
push
cs
sbb
inc
xor
jne
test
clc
mov
xor
push
jbe
cs
mov
mov
lret
push
xor
ss
in
icebp
push
xchg
sub
xchg
jne
mov
stos
mov
test
push
xor
xor
mov
fisubrl
test
push
mov
pop
adc
aad
xchg
add
js
in
not
dec
pop
mov
icebp
iret
aam
iret
xchg
push
adc
inc
cmpsb
repz
pop
cmpsl
inc
pop
sahf
dec
push
cmp
jno
out
pop
jb
dec
in
imul
mov
jmp
xchg
flds
outsb
and
mov
dec
push
push
sbb
loopne
leave
in
daa
or
stos
mov
adc
xchg
pop
jns
dec
and
push
out
push
out
mov
shrb
stos
inc
inc
in
data16
or
and
or
popf
jae
fcoml
outsl
adc
inc
inc
and
mov
repnz
push
lret
mov
inc
loope
push
movl
jb
addr16
mov
pushw
mov
xchg
jp
lock
jbe
mov
fidivl
cmp
xchg
jb
mov
inc
jnp
outsb
dec
int
mov
in
dec
fidivrs
push
jb
push
push
outsl
sahf
pop
jg
into
jo
adc
pushf
js
inc
in
adc
or
aas
pop
ss
pop
mov
fisubrs
xchg
or
inc
fmuls
pusha
mov
or
cmp
test
ds
xchg
add
test
push
xchg
shll
pop
jl
into
lea
fsubr
pop
push
push
push
lret
push
xchg
popf
repnz
dec
mov
jns
push
pop
imul
ja
nop
mov
pop
mov
and
pop
jne
fs
je
out
test
xor
xchg
jl
inc
int
and
jmp
rcrl
mov
pushf
popa
add
cli
mov
or
int3
out
mov
stc
ret
cmp
and
leave
lahf
movsl
daa
aas
mov
xchg
adc
sbb
gs
dec
sahf
adc
bound
popf
insb
jecxz
icebp
inc
sbb
fsubs
loope
jg
fstl
insl
bound
mov
call
sbb
insl
dec
mov
sub
add
jge
mov
mov
hlt
test
or
cmpsb
mov
aad
mov
sbb
out
std
pop
sub
gs
test
pop
pop
jae
mov
cltd
cmp
dec
jae
aam
jge
or
xchg
shlb
shlb
adc
data16
push
ffreep
das
add
and
sbb
es
push
jl
xor
pop
mov
cmp
jg
sub
lahf
mov
lahf
jo
in
scas
rolb
fdiv
jle
inc
insl
lock
cmp
add
cld
sahf
mov
outsb
pop
dec
or
and
dec
imul
out
dec
enter
jecxz
into
inc
leave
addl
ret
cmpsb
movsl
dec
sub
push
add
bound
addr16
and
or
and
or
clc
stos
xor
pop
dec
xchg
xor
xor
nop
sbb
orb
and
pop
sub
xchg
adc
push
fsubs
dec
or
or
shll
jg
shl
mov
pushf
enter
inc
cli
lods
ja
or
imul
es
cs
cmp
pop
xchg
add
and
lret
mov
mov
mov
xchg
push
and
mov
mov
cwtl
sub
popa
pop
push
sbb
into
sub
and
jp
sar
mov
xchg
roll
bound
divb
mov
mov
push
stc
lea
fs
enter
xorb
xchg
imul
add
lahf
cmc
inc
push
mov
cmp
movsb
mov
jle
arpl
push
cmc
add
push
stos
pop
repz
push
incb
std
aam
sub
call
nop
psllw
lret
mov
pop
insb
push
aaa
ja
in
sbb
dec
push
mov
test
push
sbb
xchg
rcr
fisubrl
addr16
push
pop
movsb
jl
lcall
stc
mov
fdivrs
pop
das
mov
das
mov
xor
test
cmc
push
inc
sub
divb
xchg
push
emms
mov
pop
fcomi
mov
loope
jl
add
jns
sysexit
xlat
xchg
test
mov
cs
sub
orb
mov
xchg
in
repnz
and
xchg
shrl
mov
roll
xchg
fisubrs
stos
jp
sbb
push
shlb
out
movsb
xor
push
mov
stc
repnz
dec
shr
repnz
xchg
mov
imul
stos
sbb
daa
push
xchg
cmpsl
xor
mov
sarl
fidivl
jae
scas
xchg
mov
loope
mov
adc
jnp
in
rcrb
xchg
pop
nop
lret
cld
adcl
jge
pop
fdivrs
pop
jne
mov
stos
insl
repnz
add
loope
push
or
push
ds
leave
inc
icebp
pop
jns
mov
jnp
lcall
push
and
dec
stos
and
jecxz
inc
push
xchg
cs
test
leave
dec
pop
xchg
push
int
leave
mov
xor
insl
div
outsb
xor
inc
or
xor
push
pop
test
xchg
jecxz
test
or
jo
xor
xchg
push
enter
add
fwait
cmp
push
ljmp
mov
into
call
mov
js
push
pop
xchg
xor
pushf
jg
negl
add
jae
or
xor
pop
ja
inc
push
call
out
xchg
lds
pop
ret
decl
jl
movsb
pop
push
inc
sbb
mov
cmp
jno
out
roll
mov
xlat
jg
fcomi
push
lret
mov
push
or
push
pop
adc
sbb
mov
fisubrs
pop
dec
fs
shlb
mov
pushf
sub
fwait
rol
xchg
jle
lcall
rep
pop
sbb
push
dec
mov
lock
xchg
cmpb
fs
push
mov
jl
xchg
notl
xchg
pop
outsl
jae
xchg
xlat
dec
shll
movl
xchg
or
jg
outsb
in
std
mov
cmp
loop
popa
push
sbb
pop
jg
repz
pop
out
call
push
push
test
leave
roll
push
enter
sub
test
pop
jl
lods
aas
or
das
shlb
mov
inc
testb
dec
mov
movsb
push
into
dec
into
bound
or
jo
repz
inc
push
push
daa
add
mov
out
push
ljmp
out
in
mov
mov
test
push
les
int3
popa
mov
push
dec
cmpsb
stc
cli
and
push
int3
mov
dec
jecxz
int3
or
xchg
or
mov
int
cmpsb
sub
cwtl
sub
cmp
pop
addr16
adc
mov
push
jno
jle
lcall
sbb
mov
movsl
cmp
imul
shrl
popa
and
repnz
test
mov
test
push
cmp
cli
mov
daa
rep
pop
nop
pop
jne
mov
das
pop
adc
icebp
stc
jb
mov
ss
push
nop
xchg
jge
and
icebp
cltd
hlt
jb
xchg
dec
mov
negb
shll
add
ljmp
mov
addr16
xchg
mov
dec
xlat
rcrl
lods
xor
std
and
and
inc
push
mov
mov
dec
mov
and
pop
jo
or
jo
mov
push
xchg
movsl
dec
mov
sarb
inc
sbb
clc
movsl
in
cmc
adc
cmp
sahf
mov
and
xchg
insl
mov
icebp
or
rcrl
sbb
scas
lea
jmp
leave
mov
lods
or
out
lahf
cld
jmp
out
sbb
cli
mov
insl
pop
xlat
std
push
in
inc
cli
push
pop
rcl
stos
mov
mov
ss
mov
test
pop
icebp
mov
dec
mov
cmp
mov
mov
test
cwtl
popa
imul
fiadds
cmp
inc
push
mov
out
or
jge
push
rol
daa
pop
xor
js
ret
mov
adc
sbb
fadds
mov
outsl
pusha
aam
mov
mov
sub
negl
dec
jp
mov
dec
push
aas
js
jo
aas
xchg
in
insb
cmpsb
cld
test
push
or
insl
jecxz
mov
mov
and
or
sbb
sub
cmp
mov
in
push
test
sbb
dec
sub
lcall
sub
int
add
dec
jno
xor
and
sbb
sbb
ja
std
adc
mov
push
das
andb
or
inc
jge
adc
jmp
movsl
leave
pop
xlat
jp
xchg
cmpsl
jns
in
jae
inc
repz
loope
mov
das
sub
adc
repz
cmp
into
xchg
or
lock
dec
test
pop
sarb
bnd
fs
loop
jmp
out
mov
cltd
repnz
rcll
gs
sub
add
sub
negb
and
add
pop
jns
outsb
aam
sub
cltd
adc
mov
daa
sti
xchg
inc
xchg
popf
mov
jge
mov
popl
lods
cmp
jge
test
mov
andb
idivl
mov
cmpsb
jl
fsubrl
sub
push
repnz
mov
cmp
sbb
dec
xchg
jge
das
cmp
pop
jmp
push
hlt
push
mov
mov
rcr
jle
inc
cmpsl
rolb
mov
cmc
xor
xor
add
insl
xor
fsubs
imul
outsl
lret
jo
das
adc
and
pop
sar
sbb
ds
sarl
jmp
mov
cld
mov
lea
mov
inc
mov
rclb
jg
andb
mov
cmp
adc
xchg
enter
inc
shll
imul
fwait
dec
das
xlat
out
shll
cmpsl
rorl
adc
aaa
scas
jns
dec
jle
mov
cmp
orl
xor
inc
mov
xchg
movsb
sub
stos
dec
mov
push
inc
scas
adc
ja
std
fisubs
dec
call
in
loop
cld
fistl
out
cmp
out
stc
add
test
jmp
ljmp
push
cmpsl
fptan
fiaddl
cmpb
or
dec
add
mov
and
aad
ljmp
insb
shlb
or
lock
frstor
mov
add
mov
pop
sub
and
mov
xchg
bound
pop
push
aam
jbe
fisttpll
jo
cmpsl
fisttps
add
leave
int
inc
sub
hlt
fldt
sbb
add
pushf
mov
je
mov
and
pushl
mov
sub
sbb
push
fisubrs
mov
xchg
out
cld
cmpsl
sub
push
fidivs
push
in
push
aam
mov
dec
or
sti
cmp
daa
fwait
push
stos
ljmp
mov
sub
inc
sti
lret
mov
and
mov
imulb
clc
sahf
aam
jl
repz
dec
adc
push
lea
std
and
or
mov
out
stos
mov
push
and
inc
cmc
mov
mov
data16
jg
dec
movsl
popa
int
call
adc
cwtl
xlat
mov
inc
mov
inc
sub
and
sbb
cmp
sbb
sub
jb
push
insl
iret
push
jne
push
sub
lock
sti
in
cltd
mov
pushf
cmc
stos
jae
mov
je
outsb
fsubr
xchg
cli
jmp
pop
movsb
movsl
pushf
decb
mov
lock
push
imul
mov
adc
ja
inc
or
mov
roll
fst
dec
dec
leave
das
xor
pop
inc
shrb
inc
psubsw
cs
pushl
rolb
jl
or
add
aam
fs
notl
xchg
inc
aam
adc
std
movsb
movsl
cmpsb
mov
push
sub
push
or
inc
ret
insl
xlat
xchg
movb
bound
jnp
cmpsl
push
leave
or
arpl
jns
imulb
jg
sbb
clc
jo
inc
movb
pop
and
orb
nop
lds
mov
and
push
jecxz
ljmp
mov
sub
inc
rorl
jbe
sbb
int
mov
jecxz
or
out
jecxz
jecxz
adc
push
mov
in
pop
lcall
or
stos
xchg
adcb
push
mov
sahf
shr
sar
into
push
pop
ret
cmp
push
sbb
js
sub
aaa
jb
and
outsb
call
or
dec
sbb
hlt
stos
mov
or
lock
or
rcll
add
in
stc
lcall
add
sub
jne
and
scas
cmp
out
jmp
lock
push
or
test
mov
ficomps
dec
inc
lcall
and
fisubl
rol
push
paddw
insl
cs
mov
mov
sbb
int3
push
ss
push
into
mov
out
call
xchg
mov
add
ret
loop
lret
sbb
aas
adc
xchg
jg
out
mov
mov
in
stc
cli
gs
addb
out
sub
inc
addr16
pop
jo
ljmp
and
jb
pusha
dec
adc
xchg
out
stc
add
sbb
sub
mov
loop
xchg
xlat
ud1
mov
push
lds
data16
scas
mov
subl
dec
xchg
int
mov
push
fs
push
ljmp
shrb
loopne
add
ret
and
popf
mov
orl
push
shl
in
hlt
mov
lock
cwtl
xchg
mov
insl
or
mov
cmc
out
ret
xor
mov
xor
ret
popf
fnstsw
ret
insl
dec
push
loope
add
sub
out
jbe
movsb
dec
test
xchg
dec
or
fisubrl
cmp
jb
sbbl
add
jae
in
adc
inc
push
and
pop
jmp
subb
mov
xchg
sub
loopne
xchg
popf
sbb
xchg
xchg
xchg
cltd
mov
hlt
mov
cmpl
outsl
and
dec
jae
into
xchg
or
pop
and
cmp
sub
out
sbb
mov
jnp
mov
mov
es
mov
xchg
loope
pop
cmp
imul
fcmove
jl
pop
popf
mulb
pop
cmp
clc
pop
cld
push
add
sbb
clc
das
or
lahf
mov
int
in
fldenv
or
add
mov
movsl
imul
cmp
or
jmp
lods
push
ds
cli
movsb
cmpsl
addl
jbe
addr16
push
addb
sar
cmpsb
fsubrl
jne
mov
sub
mov
jg
dec
ret
xchg
out
lods
cmp
int3
cmc
add
aas
sub
cs
mov
xor
testl
aam
ret
sub
jle
pop
jbe
call
lds
cmp
xlat
xor
roll
jecxz
loope
imul
leave
cmp
push
cltd
sarl
xlat
lcall
cli
adc
loop
sub
push
inc
ljmp
fwait
push
xchg
mov
nop
xchg
mov
xor
mov
mov
lcall
lea
data16
out
cmp
push
out
xor
push
jl
pop
sub
sbb
pusha
aaa
cmp
dec
stos
mov
adcb
push
into
imul
mov
and
inc
bound
inc
cmc
pop
push
jnp
dec
andb
mov
sbb
bound
or
cltd
ds
mov
shrb
aam
xor
ja
jno
pop
movsl
cmpb
jecxz
push
mov
xchg
aaa
push
fcompl
cmc
or
mov
push
enter
cmp
movsl
jecxz
push
or
mov
xchg
arpl
hlt
lret
mov
inc
mov
jl
out
cld
mov
dec
adc
adc
mov
fisttpl
es
add
repnz
adc
lcall
lods
clc
adc
arpl
adc
jecxz
aas
cwtl
stos
pop
cmp
xchg
mov
xchg
or
les
out
rorb
sbb
mov
fistps
out
lods
xchg
jle
sub
pop
inc
mov
loopne
repz
idivl
lret
adc
mov
add
fisubrl
movsb
sbb
ret
fs
cmpsl
imul
ret
fisubrs
mov
pop
divb
pop
inc
cmp
aam
popf
push
mov
aad
test
dec
sbb
sahf
mov
pop
or
push
loop
leave
pop
push
and
mov
push
push
adc
add
xor
mov
cwtl
pop
sbb
dec
loop
and
jmp
jne
push
sub
test
cmp
adc
decb
and
cli
movsb
mov
jecxz
dec
aad
sti
mov
push
dec
mov
pusha
stc
jns
jbe,pn
aas
or
sub
mov
out
sbb
and
cmp
dec
xor
sbb
xchg
add
pop
pop
or
mov
mov
test
pop
pushf
inc
jo
jmp
inc
out
add
jb
pop
add
xchg
add
stos
insl
sbb
pop
xchg
mov
shlb
daa
add
mov
push
sbb
sbb
mov
out
lahf
jns
xor
in
jne
pushf
pop
or
or
arpl
push
lods
inc
imul
cmp
pop
add
or
xchg
orl
lea
js
xchg
or
popf
cmp
jge
cmpl
sbb
sbb
push
rolb
mov
out
inc
mov
dec
pop
jle
push
lahf
shlb
sbb
push
xor
pop
aam
fists
mov
cli
lret
sbb
pop
lahf
xchg
fildl
hlt
or
cltd
sbb
sbb
outsl
ffree
lret
arpl
cmpsb
pop
sub
jne
sub
xorb
std
lods
aaa
mov
push
push
nop
jno,pt
add
shl
fnstcw
inc
stc
adc
cs
aaa
dec
popf
imul
loope
sti
pop
test
dec
int
ret
lock
xchg
mov
mov
xor
std
add
in
push
popa
mov
in
fwait
arpl
in
out
push
ret
cli
add
sub
mov
lds
das
cmp
insb
add
icebp
xorl
aad
test
push
scas
ret
addr16
clc
mov
push
maxps
dec
lcall
repz
mov
xor
or
das
pop
subb
es
jns
mov
add
lahf
pushf
push
sahf
hlt
loope
mov
aas
lcall
leave
add
add
push
scas
lahf
mov
mov
add
imul
mov
xchg
jnp
je
jmp
wbinvd
push
cmp
mov
push
ljmp
fsts
scas
xor
fwait
repz
mov
and
xor
jg
int
xchg
jno
push
int
data16
shll
fcomps
lock
push
iret
xchg
scas
dec
xchg
imul
jb
add
rcrl
mov
add
out
mov
dec
cmp
push
cld
push
add
xchg
pop
xchg
aam
shll
dec
cmp
dec
movsb
sbb
xor
jg
inc
jle
xchg
cs
pusha
xchg
mov
and
or
cmpsl
ljmp
pop
negl
lds
repz
fidivrl
leave
push
add
fwait
mov
xlat
inc
mov
pop
sub
push
mov
and
mov
lods
mov
mov
mov
mov
popa
sbb
ljmp
dec
pop
mov
sbb
cltd
test
addr16
pusha
loopne
je
adc
mov
xchg
call
pop
aad
add
cmp
sbb
iret
cmp
outsb
dec
dec
repz
push
mov
adc
push
inc
inc
shlb
imul
inc
mov
mov
insb
outsl
scas
inc
idivb
fstl
stc
sbb
popl
nop
rcl
cmc
aas
jo
mov
sbb
out
movsb
arpl
fldt
mov
fs
aas
mov
mov
lahf
sub
mov
cwtl
outsl
xchg
leave
cmp
jb
mov
sub
xchg
jp
xor
inc
cmp
arpl
pushf
stc
daa
xchg
sbb
xor
imul
aam
sbb
decl
iret
cld
push
xchg
lret
neg
pop
rorb
clc
das
test
jle
stc
xchg
cmpb
stos
es
in
lock
pop
xchg
jb
inc
sub
inc
sub
lret
sbb
mov
add
fmuls
pop
push
pusha
inc
mov
daa
imul
xor
or
sub
nop
xlat
xchg
movsl
clc
push
sbb
xchg
cltd
push
aaa
pop
rclb
cmp
sbb
ret
inc
mov
mov
lods
stos
fldcw
repz
out
xor
jl
jmp
and
jns
data16
sbb
mov
xchg
je
rcll
add
icebp
inc
stos
std
iret
push
int
mov
rolb
mov
cs
jbe
mov
es
xor
test
rorl
add
test
xor
lods
stos
jecxz
pop
cmp
lds
mov
scas
and
pop
and
push
rorb
pop
sbb
add
test
cmpl
mov
pop
fbld
hlt
imul
in
or
xor
dec
dec
sub
incb
mov
pop
loopne
xor
je
fsubs
push
lds
xlat
in
and
sub
pop
push
mov
ret
xor
popf
mov
mov
insb
and
out
xchg
xchg
pop
test
xchg
imul
pop
sti
imul
or
fiaddl
pop
cmp
adc
pop
sbb
inc
add
imul
xchg
jno
shr
leave
pop
xorb
call
js
shl
sbb
fimuls
add
dec
push
pop
jnp
push
hlt
fisubs
lea
stos
ds
mov
cli
xchg
test
pop
iret
cmp
mov
in
push
add
mov
aad
adc
push
and
in
jbe
or
mov
and
pop
out
cld
adc
faddp
adc
loop
dec
loopne
dec
js
dec
dec
sub
call
pop
xor
ret
mov
inc
icebp
jle
repz
enter
jnp
mov
stos
in
nop
arpl
jp
scas
xor
cld
inc
push
sahf
push
aam
inc
push
std
std
cs
mov
ss
fsubl
popf
mov
nop
ficomps
mov
fldl
ret
and
pop
cmp
scas
fildl
xchg
sub
jae
ret
inc
and
mov
fidivs
lcall
arpl
repz
dec
sub
out
lret
push
sub
call
xor
and
test
cmp
sub
imul
inc
repnz
and
movsl
data16
xor
pop
adc
dec
lods
and
pushl
and
outsb
xchg
ljmp
pop
flds
sbb
mov
out
addr16
scas
inc
shrb
shll
xchg
cmpsb
call
or
notl
jns
mov
push
mov
xor
sbb
push
outsl
pusha
xorb
loopne
push
fcomip
leave
or
xchg
insb
adc
stos
and
mov
aad
aaa
push
clc
in
mov
jp
mov
sub
and
cmc
aaa
pop
fnstcw
sbb
dec
push
push
loop
inc
call
ljmp
add
mov
pop
mov
enter
pop
sbb
cmp
sbb
push
data16
nop
mov
test
dec
sbb
xchg
ds
lods
repnz
sub
bnd
out
pop
sar
sbb
stos
xor
xchg
bound
inc
xor
jnp
mov
pop
sti
lcall
repnz
mov
fld
iret
mov
cmp
inc
into
or
sub
adc
inc
js
clc
outsb
arpl
sahf
ljmp
xchg
stc
mov
jae
ficoms
test
adc
sbb
or
das
inc
sti
pop
mov
cmp
sbb
sahf
mov
lock
outsl
ljmp
shl
pop
push
leave
cli
xchg
cmp
mov
sbb
mov
addr16
repz
mov
pusha
clc
ficoml
cmp
scas
sub
xor
daa
jnp
jns
jmp
in
test
dec
in
add
lahf
pop
mov
mov
pop
mov
stc
outsb
mov
popa
push
imul
out
ror
dec
jg
ret
sub
push
push
sub
pop
sub
or
add
sbb
mov
mov
mov
xor
pop
inc
dec
insb
ss
aas
adc
xor
hlt
mov
scas
inc
hlt
out
adc
mulb
add
pop
pop
sbb
pop
sti
in
loopne
insl
mov
arpl
loop
das
je
or
icebp
loope
test
jae
push
insl
push
stos
push
xchg
out
mov
or
mov
dec
loope
int3
das
push
xchg
rorb
pop
sahf
es
mov
inc
leave
das
cmp
push
lcall
data16
dec
arpl
es
aas
mov
fsts
pop
mov
nop
cmpl
movsb
aaa
int
cmp
test
jo
idivb
mov
int3
insb
xor
mov
adc
inc
movsl
inc
mov
lods
and
and
jae,pt
test
jns
in
out
dec
xor
hlt
push
mov
jno
cmp
mov
faddl
lret
mulb
movsb
xchg
cmpsb
imul
shrl
pop
les
enter
sbb
mov
cmp
hlt
into
lret
push
pop
pop
jbe
dec
dec
js
cmpsl
cmp
cmp
push
mov
sbb
push
mov
jmp
xchg
scas
mov
inc
cmc
enter
pop
sarb
dec
imul
insl
nop
pop
add
pop
or
pop
lcall
in
xchg
leave
jge
test
lcall
lea
inc
lock
fbld
lret
test
in
sub
cmp
in
jecxz
test
std
and
cmp
xlat
sbb
je
es
cltd
pop
inc
shrl
sub
xlat
iret
rcrl
pop
add
lds
and
arpl
jle
push
cmp
sub
xchg
test
stos
fnstenv
xor
pop
pop
add
std
xchg
out
mov
mov
add
add
mov
jne
repz
jbe
dec
or
dec
pop
xor
adc
jb
mov
add
test
ljmp
hlt
dec
aas
sahf
fiaddl
jne
jp
popf
daa
inc
pop
xlat
aad
add
data16
dec
sub
testb
shrl
stc
jecxz
mov
lret
xor
jno
fimuls
insb
dec
add
xlat
fsts
hlt
out
mov
mov
jbe
sub
fisubs
ret
je
ret
icebp
jle
or
std
mov
xor
xor
mov
outsb
out
adcl
push
dec
out
out
adc
cmovg
pop
lods
fisubl
scas
inc
mov
in
or
dec
test
xlat
inc
jbe
inc
roll
fldcw
jo
sbb
jnp
and
cmp
scas
pop
mov
jo
mov
mov
and
push
fs
sti
lds
or
mov
frstor
mov
and
fs
ss
int
jl
sub
lods
iret
pop
ss
cmp
fs
out
mov
adcl
inc
mov
repz
push
lds
scas
or
mov
loop
sbb
pop
test
aaa
nop
mov
insb
aam
aad
jns
icebp
push
sub
fdivp
push
jl
rcll
mov
dec
les
lret
lahf
mov
in
data16
jbe
arpl
bound
add
aam
jne
out
add
xlat
sub
es
xor
jmp
fwait
mov
lds
dec
mov
out
stos
sub
sub
leave
ret
mov
xor
sub
cmp
cltd
cmp
outsb
xchg
icebp
add
or
inc
dec
push
into
test
pop
bound
jmp
mov
cmp
push
xor
out
cmpsb
jp
add
dec
push
fdivs
pop
sub
adc
inc
stos
jge
sti
hlt
jle
repz
into
les
cmp
pop
adc
loopne
ljmp
rorb
stc
xor
test
daa
popl
mov
cli
pop
mov
lret
xchg
aas
push
hlt
lretw
pop
xchg
inc
mov
addr16
repnz
adcb
aas
push
mov
adc
pop
xlat
ret
leave
dec
jp
call
xor
dec
push
in
scas
out
scas
es
loopne
mov
mov
and
aad
repz
mov
sbb
mov
lret
pop
data16
aas
pop
inc
xor
dec
in
orb
xchg
xor
mov
fadd
stc
jbe
es
inc
dec
jbe
imul
mov
xor
fistps
test
mov
loopne
lcall
dec
out
addr16
das
dec
or
pusha
cs
jg
into
cli
jno
mov
lods
lock
loope
push
shlb
ljmp
aaa
inc
cld
xchg
loopne
mov
pop
nop
nop
cld
push
xchg
outsl
push
inc
inc
push
stos
sub
sahf
insl
mov
and
mov
push
aad
jg
push
xor
stos
in
xor
outsb
pop
xchg
in
dec
jns
and
xor
icebp
or
daa
or
jne
cwtl
insb
mov
mov
sub
inc
dec
addr16
dec
add
outsb
test
stos
add
jno
mov
push
pop
popa
lahf
xor
xor
out
aad
xor
fistps
and
mov
lods
loope
jg
out
rorl
in
pop
es
dec
cld
and
mov
sub
test
js
mov
std
mov
or
dec
ret
and
add
sub
cs
and
repz
xchg
imul
movsb
data16
ljmp
ljmp
mov
in
shrb
pop
sub
call
sub
sub
xchg
and
testl
xlat
pop
xlat
add
mov
pop
aad
mov
dec
icebp
fstpt
sahf
push
xor
mov
test
xchg
daa
or
das
jb
xlat
mov
je
jecxz
cs
inc
mov
jnp
sbb
ss
xchg
in
cwtl
aaa
es
mov
sbb
and
push
orl
push
mov
xchg
xchg
pop
adc
inc
lock
xor
shlb
sub
sbb
push
loope
mov
jecxz
insb
jns
mov
adc
notl
mov
pop
push
or
and
mov
jne
iret
cmp
and
sbb
jns
rorl
mov
xchg
and
popa
cmova
lods
outsb
push
pop
inc
push
sbb
pop
mov
xchg
jae
add
mov
clc
add
scas
xchg
addr16
dec
in
daa
outsb
rorl
stos
test
mov
shlb
xor
dec
in
pop
fmull
lcall
insl
mov
mov
xchg
insl
pop
push
fmuls
pop
jmp
jne
adc
mov
adc
sbb
mov
test
push
sbb
xor
rcrb
lds
lods
loopne
lods
xchg
push
adc
bound
mov
dec
jno
je
rorl
negl
push
fidivrl
dec
jge
inc
push
loopne
or
mov
inc
cmp
divb
push
in
mov
hlt
pop
push
pusha
mov
sbb
xor
push
sub
push
aaa
in
lods
fistpll
stc
fsubl
xchg
mov
mov
jl
imul
mov
sbb
js
insl
xchg
jle
sbb
sub
add
inc
je
xchg
inc
or
loope
cmp
test
test
pop
aaa
xchg
popa
push
or
xor
push
out
rclb
jns
in
dec
stos
pop
jo
push
mov
or
rcrl
jle
clc
fcompl
jecxz
and
jecxz
sub
pop
add
fwait
pop
push
fisubrs
shl
loop
mov
xchg
mov
out
shlb
fwait
scas
push
pop
push
mov
dec
movsl
popf
shr
and
stc
push
test
ficomps
scas
mov
push
inc
jb
sbb
and
test
or
aam
mov
cmp
mov
and
pusha
sahf
inc
imul
fiaddl
xchg
jno
push
pop
add
mov
mov
mov
sub
jns
sub
popf
xlat
xchg
call
sub
stc
mov
or
dec
es
cmpsb
sbb
mov
in
jmp
out
cmp
push
push
enter
xor
cld
test
push
fbld
repnz
stc
push
mov
or
xchg
mov
mov
mov
sbb
fsubrs
rclb
pop
mov
out
sbb
lahf
roll
jecxz
fwait
cs
or
scas
lock
dec
mov
push
adc
fisubs
dec
das
jnp
mov
cwtl
add
mov
stos
lods
dec
loopne
movsb
xchg
mov
outsb
mov
xor
add
jae
pop
mov
xor
loop
push
add
das
notl
scas
push
das
jp
adc
fwait
pop
stos
xchg
mov
into
or
in
loopne
das
popa
sbb
cli
sbb
mov
test
jns
mov
dec
jae
jno
xor
and
mov
mov
jecxz
inc
ffreep
ja
bound
sbb
mov
enter
xchg
and
stos
int
mov
mov
arpl
rorb
mov
jbe
pop
movsb
loopne
or
sbb
mov
mov
pop
mov
push
lods
js
mov
jmp
inc
dec
in
xchg
jmp
pop
in
clc
mov
pop
sub
push
adc
mov
sbb
push
and
push
scas
mov
in
xlat
add
aam
mov
fstps
pop
test
hlt
movsl
aaa
sbb
idiv
adc
cltd
add
decb
into
aas
test
aaa
pop
ss
das
insb
jae
hlt
cmp
sub
lods
paddsw
ror
dec
ret
shll
cltd
ds
xchg
mov
add
adc
push
lds
addr16
push
cmc
fimuls
je
icebp
addr16
push
mov
rcrl
cwtl
test
add
cltd
insl
gs
xor
out
sub
xor
les
sub
mov
rorb
xor
loop
out
push
daa
test
lds
jl
add
sti
adc
mov
cmp
and
mov
jno
lea
xor
or
mov
out
fucomp
in
mov
popa
fwait
outsb
lea
mov
call
pusha
lods
out
mov
rclb
in
sub
add
mov
xchg
mov
in
mov
mov
fmul
shr
xor
sbb
mov
fnstsw
lcall
iret
cmc
addr16
mov
xlat
insb
xchg
repnz
adcb
pop
or
and
test
xor
es
popa
pop
push
inc
push
stc
shrl
xor
lret
dec
and
sarb
in
mov
push
outsb
cmp
hlt
das
xchg
shlb
lcall
adc
cmp
sub
pushf
incb
and
mov
pop
xor
mov
scas
cmp
cmp
add
test
subl
jae
dec
icebp
cmp
sub
mov
sahf
push
test
cwtl
js
jle
xor
or
or
and
inc
jno
sub
icebp
jl
mov
mov
or
popf
clc
por
or
and
movsl
loope
dec
mov
ljmp
push
or
addr16
or
push
or
push
mov
ret
or
push
dec
sub
inc
sub
jno
sub
xchg
ret
shl
or
les
pop
xor
jp
xchg
aaa
incb
adc
test
dec
out
insl
push
cmp
mov
insl
inc
cmp
negb
push
mov
cmp
pop
xchg
inc
xor
pop
xchg
mov
sahf
dec
mov
les
outsb
arpl
add
mov
or
cld
lds
imul
fs
testb
pop
pop
or
cmp
aam
xor
popf
orb
or
cmp
dec
or
add
dec
movb
scas
jb
test
fildll
mov
mov
xlat
stos
xchg
bnd
xor
push
or
jecxz
movsb
inc
aaa
mov
dec
xchg
pop
leave
dec
outsb
lahf
jl
ret
xorb
xchg
mov
push
pop
sti
mov
jo
xor
js
sbb
mov
sarl
dec
mov
mov
leave
and
and
inc
or
fs
out
cmc
out
push
xor
hlt
sub
jecxz
push
pusha
mov
sbbb
cltd
cmpsl
aas
and
xor
push
lds
cmpb
sub
imul
fdivr
push
test
outsl
mov
jae,pn
add
sub
xchg
adc
and
loop
xchg
xchg
xchg
cmpl
and
outsb
leave
pusha
sbb
stc
in
imul
push
or
dec
pop
ficoml
fdivs
push
sub
out
xlat
sbb
lods
add
inc
adc
xor
mov
notb
jbe
nop
subl
mov
jno
or
lea
mov
push
lock
add
hlt
inc
mov
inc
adc
out
jl
pop
pop
fcoml
std
mov
fiaddl
jnp
pop
dec
test
bound
add
cld
movsb
lretw
push
jmp
dec
stc
cmpsl
lods
mov
fisttpl
outsl
inc
lea
push
jle
sub
mov
insb
mov
je
jg
mov
sub
adc
sbb
pop
adc
daa
sub
xchg
pop
in
mov
sub
pop
cmpsb
test
scas
pop
orl
add
enter
sbb
je
push
sbb
fsubrs
sbb
sbbl
mov
jg
out
in
add
nop
fs
push
mov
add
pop
push
roll
ljmp
int3
in
gs
add
mov
inc
xor
in
push
aaa
shr
in
popa
add
xor
lock
or
inc
ja
mov
push
loope
push
cmp
in
and
xchg
pop
jl
sbb
iret
cmp
shrb
testl
aas
xchg
dec
faddl
jmp
cmp
xchg
in
push
clc
out
test
lahf
test
mov
jecxz
push
js
sub
pushf
mov
lcall
mov
hlt
jecxz
push
shll
xor
stc
and
sbb
movl
into
out
cmp
pop
cmp
cmp
cli
mov
jl
insb
and
gs
jp
push
cmp
cld
aam
inc
dec
dec
arpl
stc
or
cmpsl
das
jl
sub
jno
addr16
icebp
mov
les
aas
mov
test
in
adc
or
jg
pop
test
out
fs
xor
sahf
lret
cwtl
jl
testl
fwait
lcall
lds
hlt
jl
decl
lahf
jmp
mov
sub
dec
lock
and
cld
jmp
inc
daa
fsubrl
mov
sbb
mov
or
adc
xor
fbld
mov
or
pop
xchg
xlat
cmp
fisttpll
xor
punpckldq
out
call
sbb
fadd
fnsave
cmc
add
pusha
int
adc
clc
leave
ret
inc
xchg
mov
jmp
jp
es
xchg
or
js
cli
pop
mov
pop
mov
sbb
jle
scas
lret
enter
insb
jne
aam
xchg
js,pt
cs
shrb
sahf
iret
jb
mov
push
jbe
scas
push
sub
mov
loope
dec
jo
sbb
inc
push
out
les
in
push
and
mov
xor
push
adc
mov
sbb
scas
lret
dec
xor
int
das
dec
adc
mov
xchg
or
rclb
mov
cs
fwait
jge
shlb
fcompl
mov
push
adc
jb
sub
iret
pop
mov
ret
xchg
xor
mov
push
andb
loopne
shr
mov
pop
js
mov
mov
cmp
lcall
jge
xor
pop
ljmp
iret
fdivs
lods
data16
pop
pusha
dec
pop
addr16
mov
call
sub
aaa
rcr
mov
xor
idivb
mov
mov
adc
ljmp
pop
jecxz
push
cltd
jno
jl
lcall
repnz
xor
mov
imul
push
jo
xor
cmp
das
jno
mov
push
jg
push
lahf
loopne
inc
mov
jp
inc
sbb
sub
mov
stc
or
or
mov
mov
ss
xchg
and
and
and
repnz
pop
mov
jae
not
icebp
movsl
cmp
jg
data16
xor
mov
pop
xchg
mov
and
lock
cmp
jl
and
adc
cli
insl
int3
xor
js
push
push
lock
cmp
or
cs
adc
imul
cld
jnp
imul
inc
arpl
in
jge
ret
in
mov
lcall
ret
push
loop
orb
cmp
inc
mov
enter
sub
xlat
mov
cmpsb
dec
adc
into
ljmp
and
ja
ret
adc
in
fcmovnu
adc
sub
push
dec
jl
mov
cmp
loopne
jns
jecxz
into
aas
add
mov
mov
in
adc
lods
testl
push
jmp
inc
cmp
movsb
sbbb
ret
sub
and
fstpt
cmc
sahf
fwait
repz
or
adc
mov
dec
inc
cli
push
pop
add
enter
aad
addl
sub
aad
dec
push
cwtl
mov
sahf
lcall
outsl
push
cmpsb
or
xchg
cmpsl
sub
out
jnp
push
xchg
int3
push
lods
cmp
movsb
jno
cmp
ds
setne
jnp
adc
inc
lods
fadds
jno
inc
cld
pop
fldcw
daa
subl
jo
mov
outsl
dec
sub
xor
inc
and
fwait
cs
push
jbe
lods
jle
mov
pop
jae
ret
jo
and
std
inc
adc
xchg
mov
adc
aam
roll
std
out
cltd
test
shll
arpl
or
mov
lret
lods
push
pop
inc
jo
arpl
int
imul
lock
sbb
cmp
add
pop
xorb
cmp
and
daa
cmp
xchg
and
jnp
inc
and
orl
lea
dec
stos
sbb
and
aam
leave
mov
adc
int3
out
cmpsb
loopne
cmovbe
test
xor
pop
jo
aas
ljmp
test
test
jbe
pop
sub
sbb
adc
add
test
inc
sub
xchg
mov
leave
xchg
cli
inc
jnp
cltd
sbb
pop
cmpsl
idivb
leave
xor
in
jle
inc
pop
mov
push
mov
inc
sbb
pop
cmpl
inc
hlt
xor
xor
out
mov
orl
xchg
and
andb
test
cmp
out
int
iret
stos
shlb
stc
push
pop
or
pop
add
lods
fstpl
or
hlt
push
in
int
enter
cli
mov
idivb
jae
subb
add
push
xchg
push
data16
bound
sbb
imul
daa
mov
mov
pop
test
fldl
jbe
test
in
xchg
mov
inc
add
je
js
cld
repz
insb
fsubs
jle
ret
cmpsl
repnz
call
inc
pop
mov
stos
dec
push
xchg
cltd
dec
xor
in
movsl
ret
lock
mov
mov
movb
aam
jge
lcall
dec
pushf
dec
pop
dec
icebp
test
movsl
clc
mov
adc
and
ja
adcb
pop
pop
push
outsl
pop
push
cltd
ret
in
jp
inc
insb
test
pop
addr16
add
inc
jb
and
inc
jmp
int3
sub
ds
inc
ljmp
stos
testb
mov
lods
in
test
and
cmp
jg
inc
je
jecxz
scas
add
or
or
pop
lds
aas
jns
in
out
lret
sub
aaa
fisubl
cmpb
pop
insb
popw
cmp
pushf
fldz
test
repnz
jmp
fdivs
mov
popf
push
pop
sub
pop
addr16
push
clc
sbb
push
das
iret
outsb
clc
fdivrl
mov
stos
daa
movsb
loopne
sub
xor
sub
pop
push
or
sbb
ja
leave
push
jo
push
push
and
test
xchg
frstor
lods
jg
mov
push
lock
lea
xor
pop
cmc
pushf
pop
mov
or
daa
push
cmpsl
lea
push
push
sbbl
pusha
enter
and
jg
and
xchg
pop
mov
fwait
inc
mov
pop
add
dec
scas
repnz
sub
stos
lret
xchg
aad
jbe
mov
mov
fsubp
fs
mov
les
enter
cmc
jbe
inc
jecxz
pop
adc
int3
cmp
xchg
adc
xlat
push
icebp
std
es
fildl
inc
jb
subl
daa
pop
inc
in
push
mov
mov
out
mov
mov
imul
jnp
aam
mov
mov
in
jne
les
xchg
outsl
push
cltd
cwtl
rcl
and
push
sahf
mov
pusha
inc
ljmp
je
mull
push
arpl
call
jbe
mov
movsb
lods
xorl
jbe
in
add
xor
stos
pop
sub
push
xchg
loop
andl
push
mov
addr16
xchg
cwtl
lahf
mov
negb
insb
push
clc
popf
and
hlt
sahf
pop
jp
mov
fmull
pop
or
test
orl
cltd
push
pop
push
push
or
in
push
aam
nop
sti
jae
out
jle
ret
pop
dec
std
push
inc
mov
or
mov
cld
in
mov
push
mov
xor
mov
mov
jne
mov
inc
inc
sub
lahf
inc
push
fstpl
arpl
ret
insb
lock
mov
sbb
push
divl
xor
mov
scas
add
lds
jmp
add
js
xchg
movswl
call
in
pusha
ljmp
in
cmp
adc
xchg
adc
outsb
mov
ret
aaa
inc
sub
cmp
gs
jl
sbb
or
dec
mov
xchg
mov
add
xchg
test
mov
test
dec
and
scas
popa
lahf
inc
cmc
rorb
sub
int
push
fiaddl
aaa
mov
cld
jp
cmp
jg
pop
dec
cmc
cmp
cs
ret
sub
cmp
mov
das
sti
xchg
add
stos
push
mov
dec
outsl
out
xorb
push
outsb
adc
sar
push
lods
scas
stos
andb
sti
dec
sub
in
das
dec
or
push
aaa
and
loope
adc
sbb
pop
rcr
es
repnz
stos
add
push
popa
pop
add
xchg
clc
pop
mov
imul
data16
pop
nop
daa
push
jae
push
iret
pop
pop
stos
cmpb
sub
int3
cmp
fsubrl
inc
push
sub
dec
js
add
adc
inc
inc
not
xchg
test
lcall
jmp
inc
and
inc
aas
jnp
jne
lret
cmp
and
mov
sar
fdiv
ror
mov
add
popa
jbe
cld
dec
scas
xchg
rcll
or
icebp
testl
and
notb
movsb
xchg
test
jb
sub
rol
dec
dec
ss
roll
mov
mov
add
mov
push
lods
jnp
add
dec
js
sbb
xchg
or
jns
pop
add
sarl
and
loope
mov
filds
cmpsb
pop
mov
lret
frstor
and
or
aam
pop
jmp
notl
loope
xor
inc
adc
popa
in
insl
mov
lock
test
adc
inc
mov
dec
mov
pop
jno
push
mov
sbb
out
xchg
sbb
cld
push
js
xlat
xchg
aam
in
arpl
adc
test
loop
decb
out
jnp
inc
mov
adc
mov
xor
ja
mov
adc
pop
pop
jno
adc
add
ljmp
outsb
push
popl
arpl
mov
xchg
xlat
add
dec
pusha
cmp
loop
loope
scas
insl
stc
xor
mov
outsl
pop
jecxz
sahf
push
ja
fistl
jmp
pop
popf
inc
lods
push
mov
stc
dec
pop
cmp
cmpsl
and
in
pop
arpl
xor
push
in
mov
push
iret
inc
insb
movsb
aad
ljmp
lea
aam
and
call
imul
inc
jae
pop
scas
jge
gs
and
xchg
loope
jecxz
jo
jo
mov
out
ds
pop
mov
rcll
nop
add
jp
sahf
jecxz
jp
add
inc
sbb
pop
test
mov
pop
jl
cmpsl
mov
fs
inc
in
or
test
mov
add
adc
mov
dec
adc
loop
jnp
insb
adc
popl
rorl
daa
sbb
out
push
mov
pop
mov
pop
inc
mov
fnstenv
add
sbb
arpl
test
sub
pop
push
rcrb
bnd
sub
mov
and
movb
cmp
inc
sbb
pushf
xchg
cltd
jnp
mov
lret
out
ret
sbb
popa
push
pop
je
jmp
adc
mov
loope
and
inc
add
aaa
xor
push
xor
imul
sbb
je
and
xor
movsb
das
and
or
std
popf
lret
pushf
ljmp
or
push
inc
push
inc
cmpsl
mov
and
imul
mov
dec
test
ss
xchg
shrl
xor
inc
sarl
mov
cmp
dec
xchg
clc
sub
mov
push
test
add
stos
xchg
mov
or
xchg
loop
mov
lcall
mov
insl
sahf
pushf
aad
push
pop
cld
or
sahf
or
les
sub
mov
out
add
mov
mov
pop
scas
fwait
cmp
movsl
inc
and
inc
loope
push
sub
dec
fisttpl
mov
je
sbb
aam
imul
mov
cltd
shlb
xchg
not
jne
dec
sbb
into
jmp
mov
lods
fistpl
and
test
mov
mov
scas
inc
js
clc
sti
mov
pop
shll
pop
mov
or
cmp
inc
sbbb
inc
subl
divl
lods
xchg
and
sub
xchg
movsl
sub
jbe
lcall
adc
xor
cld
not
push
push
add
pushf
and
mov
push
adc
add
ret
js
pop
push
xchg
and
sahf
sub
or
mov
cmp
sbb
push
pushf
adc
testl
xor
out
lds
movl
xchg
out
dec
inc
repz
andb
vpsrlq
test
in
shl
subl
aaa
adc
push
in
mov
dec
inc
or
outsl
jmp
dec
xor
jle
mov
sti
push
aas
sti
jo
imul
out
push
xlat
pop
mov
pop
jmp
shrl
xchg
les
repnz
call
cltd
push
dec
dec
or
lock
push
cmp
inc
jb
lcall
mov
jae
mov
jnp
addr16
jge
sbb
mov
imul
ret
pop
fucomp
pusha
or
arpl
dec
xchg
test
xchg
pop
cwtl
push
addr16
xchg
out
pop
ss
mov
js
ret
push
ret
sbb
pop
mov
aam
pop
sub
cmp
mov
imul
fimuls
xchg
orl
jbe
dec
push
shlb
mov
inc
in
out
iret
loope
mov
imul
loop
into
lahf
imul
lahf
das
lcall
cs
mulb
cli
push
shll
sti
dec
ja
pop
rcll
insl
jge
nop
test
jno
out
fists
cwtl
and
ljmp
stos
xor
popf
out
adc
repz
jle
aad
mov
push
inc
cltd
push
dec
push
sub
sahf
sbb
js
fisttps
xor
out
and
jge
jnp
or
icebp
loopne
sar
imul
sub
rcll
add
xor
pop
fxch
sbb
je
lock
repnz
mov
cmpl
xor
fdivrl
aad
jle
mov
xchg
cmp
mov
out
lcall
loopne
in
dec
add
adc
addr16
arpl
cmp
test
adc
mov
jge
jle
jp
cmpsb
dec
sub
push
or
sbb
fcompl
shlb
dec
xor
cmp
icebp
add
test
push
push
push
dec
mov
cwtl
cmp
mov
mov
add
xor
sbb
fidivrl
gs
mov
test
xchg
cmp
es
dec
insb
adc
enter
test
sbb
mov
hlt
push
inc
cmp
mov
jg
es
jb
std
out
pusha
mov
andb
sub
pop
inc
dec
sarb
push
jb
in
int3
mov
add
jl
mov
arpl
into
testb
add
shrl
jg
add
sub
gs
loopne
js
inc
mov
sub
fcompl
and
push
icebp
cmp
jle
rolb
daa
imul
mov
scas
add
mov
xchg
and
leave
inc
fdivrs
pop
pop
pop
cmp
mov
movsl
call
imul
int
mov
ljmp
vpsubd
pop
test
push
and
pushf
xor
cmp
cs
in
js
cmc
pushf
cmp
adc
add
lcall
xchg
dec
sub
add
xor
xchg
jmp
xchg
in
mov
sub
aam
mov
mov
ds
jbe
pop
aad
leave
enter
lret
jo
dec
out
mov
jbe
movsl
mov
push
adc
aas
shll
jge
or
adc
fdivr
rcr
or
sub
xor
push
dec
loop
xchg
mov
cmp
mov
sub
jge
and
xor
rcll
ds
push
jo
jns
or
push
mov
or
fwait
sbb
cli
hlt
addr16
mov
adc
mov
jnp
pop
mov
in
or
mov
aas
in
lds
jg
push
or
inc
cwtl
mov
aaa
sub
js
movsl
pop
push
aas
cld
mov
ss
xchg
mov
push
out
hlt
fisttpll
je
mov
inc
mov
push
sbb
mov
mov
jle
or
cmc
test
rcrb
mov
adc
arpl
and
pushw
pop
adc
pop
sbb
lods
cbtw
xchg
cmp
cld
xlat
xorb
cmp
push
sbbb
sbb
fwait
mov
ret
lds
outsb
iret
pop
push
dec
ss
dec
rorl
adc
xor
xor
pop
dec
xchg
movsb
sub
mov
scas
xor
add
xor
fisubrs
repnz
sahf
ret
xorl
mov
fisubrl
mov
xchg
mov
and
jge
pushf
cmp
mov
sbb
fstps
inc
pusha
push
loope
fcmovb
scas
add
sti
cmpsl
in
jnp
out
daa
mov
sub
cld
sub
popf
test
popa
xor
fstps
dec
inc
andl
cld
jbe
out
rorl
lds
or
lods
add
loop
pop
scas
fnstcw
mov
arpl
fiaddl
scas
out
or
push
sbb
testl
data16
lahf
add
jno
adc
push
push
fucomip
bound
imul
sbb
arpl
mov
test
sub
mov
push
mov
add
inc
or
mov
aad
ret
mov
scas
repz
xor
inc
aad
mov
xlat
in
jge
inc
fstps
roll
addr16
clc
xchg
aad
imul
js
xlat
jmp
testb
adc
xor
and
bound
xor
fists
stos
cmp
pop
lock
fwait
les
dec
cmp
test
fcmovbe
into
pop
pop
arpl
push
jg
aad
rorb
testl
popa
mov
jnp
shrl
sbb
aas
jg
and
cs
addl
and
push
xchg
or
mov
and
cmp
or
push
sbb
repnz
push
mov
dec
lods
and
cmc
and
pop
fbstp
dec
inc
imul
or
jmp
je
icebp
and
mov
int
mov
xor
xchg
negb
aam
js
test
in
sbb
mov
out
mov
icebp
fists
cli
test
sbb
popa
ss
mov
shl
jmp
shl
mov
xchg
in
ficoml
sbb
aas
dec
lods
jg
daa
lods
cmp
addr16
out
pop
adc
fadds
cwtl
mov
and
jecxz
mov
fucomip
out
in
mov
inc
pop
lret
pop
dec
pop
les
sbbb
sub
inc
das
mov
dec
add
lea
sbb
mov
and
cltd
push
addl
fbstp
jne
arpl
cmp
inc
and
sub
in
add
cld
jne
ds
inc
xchg
cwtl
or
jg
inc
loop
into
lret
test
adc
cmpl
pop
movsb
push
pop
adc
mov
jns
mov
jbe
inc
lds
jmp
mov
push
dec
jmp
lahf
in
repz
adc
add
es
hlt
xor
cmp
clc
jle
rolb
mov
xor
daa
sarb
push
cmp
lock
loope
ljmp
mov
pop
scas
fwait
jmp
adc
inc
int3
dec
sahf
ss
ret
icebp
push
sbb
xor
pop
out
lock
xchg
in
mov
sbb
repz
and
sbb
and
loop
negb
or
int
out
les
sarl
push
and
ret
mov
shlb
sbb
fisttpl
insb
dec
repz
inc
xor
fs
repz
sbb
sbb
in
mov
or
inc
mov
inc
ljmp
imul
or
call
dec
ffreep
sub
pusha
sbb
mov
popa
push
test
push
repz
cmp
dec
xchg
mov
insl
xchg
push
shrb
cmp
cwtl
xchg
mov
andb
jl
push
pop
adc
lock
stc
inc
lcall
pop
outsl
mov
aad
push
pop
out
sub
mov
lret
test
xchg
aaa
xlat
xchg
mov
inc
push
outsb
test
cmpsl
sbb
cmpsb
testb
scas
jae
sub
fldcw
mov
pop
testb
xor
cmp
addr16
mov
cmp
mov
mov
sbbl
jp
lods
jb
leave
stos
push
sti
xor
mov
imul
into
bnd
mov
pop
mov
sbb
push
inc
data16
and
mov
pop
ret
jno
cli
push
jbe
xor
test
xchg
mov
fstps
das
ljmp
clc
add
mov
cmc
dec
mov
jo
add
out
aas
mov
jge
and
outsb
das
xlat
inc
jecxz
std
inc
push
repnz
outsb
test
mov
into
pop
pop
dec
add
cmpsb
mov
add
aaa
push
adc
je
mov
cwtl
movaps
sti
cmp
dec
jno
add
mov
arpl
loopne
test
lret
jecxz
dec
xor
add
cld
shlb
push
testl
xor
stc
jbe
pop
out
icebp
mov
push
cmp
add
ljmp
or
or
into
shll
adc
movl
dec
fstl
rcl
repz
repz
mov
sub
pop
push
pushf
movsb
xchg
hlt
inc
push
push
loopne
xor
xchg
ret
enter
add
adc
xchg
xlat
shrb
adc
sub
xchg
add
pushf
rcrl
ja
inc
add
ja
scas
lret
movsb
out
rcll
popa
dec
push
mov
repz
imul
mov
pop
movsl
scas
jle
out
lahf
shlb
xor
cmp
mov
adc
jbe
cmp
repnz
jns
cwtl
xlat
push
xchg
in
sahf
pop
mov
jecxz
loopne
inc
out
divb
shl
lods
loopne
mov
xor
add
int
aam
popf
add
xor
xor
scas
stc
ja
inc
pop
bound
pop
jecxz
jae
fs
pop
sub
adc
mov
push
add
pop
mov
test
pop
sar
jnp
ljmp
dec
rclb
pop
fstpl
cmovns
adc
jg
fmuls
addr16
inc
or
test
mov
popa
or
or
mov
call
fiadds
stc
mov
mov
addr16
bound
mov
or
and
pop
icebp
push
stos
mov
fiaddl
aas
ss
imul
jl
hlt
les
loop
jbe
mov
stos
lret
cltd
xchg
ja
sub
sub
add
and
shrb
and
in
sbb
insb
out
xchg
std
lahf
lods
outsb
daa
jo
mov
insl
inc
std
mov
jbe
nop
fstl
ret
cmp
xchg
cli
int
sub
inc
jb
add
jge
sbb
and
rcl
sub
xlat
jbe
adc
cwtl
inc
and
add
or
jno
inc
lcall
jo
lods
push
pop
ljmp
movb
mov
push
mov
push
out
addr16
aas
lret
dec
pop
sti
jbe
xchg
jo
pop
add
aas
dec
pop
mov
jno
jle
pop
lcall
in
push
pop
push
pop
scas
sub
dec
nop
addl
sbb
imul
inc
ja
in
orb
adcl
mov
xchg
adc
mov
mov
test
add
movsl
gs
mov
lret
jmp
lods
cmc
mov
das
and
lret
mov
icebp
es
fsubrl
cmc
aas
lcall
sub
lods
sbb
xorb
or
cltd
je
lea
pushf
int3
hlt
je
adc
scas
or
sahf
mov
mov
out
fs
mov
push
add
push
xchg
sbb
out
scas
add
sahf
or
xor
sub
xor
loope
dec
je
add
ret
jbe
lea
xor
std
mov
data16
add
insl
mov
and
insl
add
js
hlt
push
and
add
xchg
aad
push
mov
insb
adc
inc
stc
out
pop
rcrl
mov
adc
adc
mov
outsb
shll
fdivrl
sahf
or
sbb
pop
mov
inc
push
sub
sbb
sbb
outsb
adc
les
mov
jp
imul
adc
jns
scas
pop
test
cmp
push
adc
cmp
sbb
cmpsb
xchg
cmp
push
mov
ds
je
int
cmpsb
jns
sarl
push
in
repz
dec
js
lahf
mov
adc
pop
jecxz
sarb
sarl
imul
pop
and
cmp
xor
inc
lods
jb
pop
ret
mov
jmp
shlb
push
sbbl
orl
movsl
mov
dec
push
inc
aas
out
lea
mov
mov
aad
loop
arpl
push
fists
pop
push
in
sub
cmp
mov
imul
insb
inc
mov
insb
movsl
mov
lahf
pusha
int3
lahf
test
aaa
pop
xchg
inc
push
adc
dec
clc
xchg
int3
popa
add
xor
fs
jmp
mov
cmp
or
and
stos
pop
stos
jns
in
mov
inc
add
out
movsl
inc
adc
xchg
mov
sarl
jb
subb
loop
cmc
xchg
lea
in
out
pop
popa
ffreep
rorl
pushf
rcrl
hlt
test
xchg
leave
mov
dec
jae
aam
sbb
nop
add
js
add
enter
lret
push
mov
xor
inc
out
loop
inc
cli
mov
and
or
or
adc
inc
cmp
dec
xchg
xchg
int3
insl
jns
pop
smsw
out
mov
xchg
imul
test
xchg
and
lahf
loope
or
hlt
mov
xor
sbb
push
aas
sbbb
int
mov
iret
cmp
and
sbb
outsl
sarb
mov
enter
jb
imul
sbb
loopne
iret
clc
stos
adc
push
sub
mov
inc
xor
into
xchg
pusha
or
lret
mov
iret
sahf
inc
push
insl
or
popl
mov
imul
cmpsl
push
mov
pusha
or
jae
mov
cmpsb
push
gs
orl
inc
mov
jo
lods
cmp
xor
mov
into
gs
jno
lea
mov
in
sti
jmp
ret
lahf
stos
enter
int3
lods
pop
sti
mov
popa
out
lret
cmpsl
push
pushf
or
xor
std
cmc
xchg
imul
ffree
enter
or
ds
sbb
sbb
pop
scas
sbb
jg
mov
jns
cmp
std
jnp
push
or
cmpsb
cmpsl
mov
fistps
xchg
mov
mov
adc
add
cmp
addl
mov
arpl
sub
test
sub
fs
orl
ss
pop
sub
xchg
movsb
cwtl
and
dec
adc
loope
imul
add
mov
cmpsb
push
dec
jne
xchg
shrl
scas
sub
adc
repnz
push
imul
xchg
in
test
adc
lods
jg
jae
mov
pop
loopne
cmpl
loop
dec
jbe
xor
push
mov
xchg
sub
sub
cmc
pop
mov
push
sub
ret
repnz
pop
addr16
and
out
xor
pop
and
cmpb
shlb
icebp
enter
and
scas
mov
nop
inc
shl
mov
inc
push
push
hlt
cld
lods
cltd
rcl
inc
mov
lahf
pop
add
inc
push
sbb
mov
and
cwtl
clc
jmp
push
add
cmp
fidivs
xor
mov
inc
fbstp
das
mov
insb
or
jb
jp
mov
inc
aaa
mov
insl
adc
mov
jl
or
mov
orb
inc
addl
hlt
sbb
rclb
loope
xchg
add
insb
push
sbb
fwait
jno
or
push
mov
pop
push
mov
push
dec
dec
cmc
scas
mov
pushf
out
mov
inc
in
in
clc
iret
sub
pop
xor
sub
sbb
lock
add
or
or
mov
xlat
xchg
fidivrs
cmc
or
fwait
jno
ds
add
dec
cmpsb
mov
clc
push
add
mulps
das
mov
adcb
out
adc
or
add
xchg
mov
mov
imul
je
pop
shlb
dec
jmp
pop
idiv
or
push
sbb
sbb
shr
or
adc
and
dec
gs
shlb
lret
xor
insb
leave
dec
je
add
test
pop
lods
ficompl
in
ss
outsb
mov
movsl
sub
mov
sub
gs
aam
push
fbstp
sbbl
lds
in
sti
lret
dec
inc
rclb
cmp
adc
sub
xor
sahf
jl
mov
sub
les
fdivl
les
andb
push
dec
pop
clc
push
sbb
add
sub
ret
dec
sbb
setl
imul
xchg
or
jbe
popa
mov
add
icebp
out
insb
jmp
mov
mov
mov
int3
popa
jecxz
fsts
test
inc
clc
fwait
stc
cld
mov
inc
lds
cmpsb
fwait
pop
mov
outsb
mov
popa
add
adc
add
ret
ja
and
or
push
add
jns
xlat
aad
cmp
mov
out
jbe
orl
or
jae
dec
into
loope
cwtl
in
cmpsb
pop
insb
adc
jbe
inc
adc
mov
std
ficomps
sbb
xorb
aam
dec
imul
or
scas
std
fildll
ljmp
cli
cmc
and
fucomp
loope
jne
cmp
fistpll
or
es
dec
and
mov
mov
jmp
bound
inc
out
pop
dec
sub
in
inc
pop
pop
xchg
aad
push
pop
daa
add
mov
adc
stc
pop
js
cmpsb
flds
jge
mov
sub
sub
test
or
scas
xchg
nop
adc
mov
lods
or
dec
inc
and
sbb
cmp
push
jbe
pop
cwtl
arpl
mov
inc
xor
adc
fisubrl
mov
decl
jns
mov
lock
push
push
cmpl
inc
sahf
mov
js
inc
push
fidivrs
mov
cld
rcrb
inc
fimuls
out
aas
mov
fucomip
dec
ds
jns
xlat
sub
sysenter
imul
xchg
mov
push
lock
sbb
arpl
sbb
sbb
cmp
dec
sar
push
mov
pop
int
mov
jecxz
dec
or
cwtl
push
add
insl
mov
or
imul
jmp
out
sbb
sub
cwtl
cltd
cmp
out
lea
adc
outsb
mov
fisttps
enter
push
mov
pop
mul
sbb
mov
std
cld
inc
sub
mov
inc
test
stos
inc
fs
jmp
or
mov
addr16
in
inc
test
dec
into
bound
sub
dec
mov
stc
mov
aaa
pavgb
cmp
test
cs
mov
jmp
aad
and
mov
xchg
repnz
ficoml
popf
push
mov
filds
inc
int
cmc
lods
mov
loopne
or
mov
mov
out
add
jns
xchg
sub
mov
addl
or
and
pop
xlat
cmc
aam
iret
sti
sub
push
sub
xchg
adc
mov
cltd
add
insl
and
enter
clc
adc
jp
xchg
iret
notb
sbb
push
inc
adc
ljmp
mov
imul
test
hlt
sbb
dec
es
push
hlt
and
add
out
sbb
mov
jb
cmp
pop
movsl
sub
sbbb
std
or
xchg
sti
leave
test
lods
pushf
xchg
jb
in
lods
and
add
mov
popf
mov
insl
adc
out
mov
mov
cmp
mov
cmp
cmc
mov
pushf
int
pop
xor
rcrb
pop
jno
mov
and
pop
clc
sahf
xchg
imulb
mov
or
fnsetpm(287
mov
mov
in
negb
xor
jns
stc
test
sub
add
daa
push
loop
mov
and
rcll
stc
and
rcll
mulb
lret
inc
sub
dec
dec
or
adcb
sbb
daa
pop
outsb
inc
pop
mov
inc
dec
jl
mov
inc
shr
pop
aam
push
std
cmp
decb
dec
out
and
sub
cmpsl
jecxz
sbb
movsl
xor
fmuls
fidivrs
push
sbb
out
les
popf
enter
push
or
push
adcl
leave
xchg
mov
fwait
stos
and
rclb
dec
out
jl
outsb
mov
loopne
dec
clc
int
lret
scas
loopne
icebp
sub
inc
xchg
cs
and
mov
push
ficoms
in
jo
jb
popa
and
ffreep
adc
call
adc
cmc
mov
push
pushf
sub
leave
push
iret
push
jecxz
fldt
lahf
mov
cli
pop
and
loop
hlt
stc
or
mov
mov
mov
nop
test
adc
push
test
pop
cmpsb
and
insb
rcrl
mov
lock
mov
mov
pop
and
inc
pop
or
aas
lock
lock
cmp
push
nop
or
test
and
sbbl
sub
push
mov
in
mov
sub
xor
xchg
icebp
mov
jmp
mov
movsl
ret
je
out
or
popf
pop
adc
notl
fldl
inc
aas
adc
fdivp
ss
fs
push
in
mov
std
jae
xchg
sub
jle
sub
mov
cmp
cs
mov
and
sub
test
ud1
push
aas
add
stos
xor
imul
mov
cmp
fildl
js
push
lods
rcl
test
mov
pop
or
int
aas
outsb
mov
lds
pop
mov
jl
ss
aas
cmp
roll
dec
mov
imul
sbb
in
cmc
in
adc
jl
sbb
dec
subb
inc
int
repnz
scas
and
cld
mov
fimull
add
push
in
and
adc
cmp
sbb
jmp
jno
or
rcr
add
dec
dec
mov
and
push
orl
nop
mov
xlat
clc
fwait
push
and
nop
bound
xchg
mov
loop
test
rcr
jns
mov
jnp
xchg
pop
aaa
call
fs
fwait
testb
inc
xchg
sahf
xchg
mov
nop
roll
cmp
int3
push
dec
sbb
mov
sub
subb
xchg
pop
insb
add
cli
inc
bound
ja
mov
add
pop
fistl
or
jecxz
lds
movsl
outsb
loope
movsl
loopne
movsl
repnz
inc
ds
iret
fsubs
sub
cmp
dec
dec
shll
roll
push
shlb
push
ja
hlt
jne
test
in
sbb
push
xor
cld
lret
test
mov
sbb
dec
dec
insl
adc
ds
mov
mov
xor
mov
sub
std
sbb
iret
aam
inc
jge
xor
hlt
add
inc
mov
xor
mov
cmp
clc
sub
test
ret
mov
xor
push
or
adc
jge
out
in
lret
xchg
inc
insl
pushf
in
and
outsl
es
cmp
mov
sbb
aas
repnz
mov
push
pushl
xchg
in
lock
pop
push
push
sbb
and
cmp
imul
pop
movsl
push
add
xchg
fiaddl
testl
or
vsubpd
adcl
lock
in
pop
movsl
int
addr16
sub
repnz
ljmp
stc
shl
lock
mov
inc
sbb
mov
push
dec
movsb
and
adc
xchg
adc
inc
inc
adc
shrb
int3
mov
in
stc
js
das
cwtl
lock
insb
mov
sub
mov
pop
into
lods
mov
sub
in
mov
dec
and
mov
jg
xlat
loopne
icebp
dec
cmc
push
dec
pop
in
arpl
movl
stc
orb
vminsd
mov
jg
es
adc
popa
clc
clc
rdpmc
jns
mov
movsb
or
sarl
adc
pop
mov
call
add
lock
jg
imul
stos
dec
sbb
testb
decl
xchg
loope
inc
fsub
int3
dec
frstor
andl
test
dec
mov
jns
pushf
jnp
stc
addr16
mov
sub
cmp
jnp
stos
lret
push
shl
lods
cmp
jecxz
or
lods
dec
xchg
mov
fisubrl
into
add
stos
xchg
sbb
loop
in
pop
and
lea
stos
xchg
sbb
dec
sahf
cmp
mov
ffreep
pop
mov
or
inc
xchg
push
add
pop
js
xlat
fdivl
aaa
in
mov
mov
shl
dec
adc
mov
rolb
jmp
outsl
mov
lahf
arpl
lahf
fnstenv
xor
insl
dec
xchg
pusha
pop
xchg
decb
jp
mov
xchg
fiadds
outsl
cmpsb
js
cwtl
stc
andl
push
pop
lods
ficoml
adc
xor
cmp
and
dec
pop
insl
cmp
and
push
push
jge
inc
sbb
imul
jnp
out
in
insb
leave
outsb
hlt
ds
cmpsb
js
shl
mov
nop
and
fwait
push
mov
xchg
inc
pop
fwait
mov
or
xchg
inc
jno
mov
test
cltd
and
int3
xor
int3
mov
repnz
mov
add
rcr
pop
addl
daa
scas
fiaddl
hlt
inc
insl
fs
cld
ret
testb
xlat
out
xchg
dec
mov
test
mov
mov
clc
iret
push
inc
pop
lcall
push
insb
out
xor
out
adc
dec
pop
jmp
mov
inc
adc
and
popf
fnsave
bound
dec
cmp
mov
jno
daa
push
out
stc
sub
addr16
dec
jnp
daa
jno
repnz
test
fsubl
movsl
pop
jecxz
sti
sub
push
pop
push
jnp
cmp
aas
and
mov
pushf
jo
dec
ds
test
mov
xchg
ret
repz
cmp
add
aad
pop
repz
pop
xchg
mov
add
in
daa
lods
divl
addr16
mov
mov
and
cmp
jno
mov
or
je
fcoms
dec
test
jnp
fdivs
fildl
sbbb
repz
aad
jl
or
loope
add
clc
js
jne
jnp
inc
cld
data16
sahf
xchg
sub
lods
andb
adc
shrb
adc
rcr
lret
cmc
es
dec
scas
mov
xlat
repz
pop
xor
repz
add
mov
mov
lds
in
dec
orl
cmp
xlat
cmpsb
cmp
cs
jae
cmp
outsb
lret
xlat
aad
nop
push
fdivrs
mov
lahf
and
lods
dec
cmp
push
pop
je
ja
sub
stos
push
pop
cwtl
repz
lahf
sahf
cwtl
pop
adcb
cmp
fistpll
leave
div
pop
stos
ljmp
mov
jno
leave
pop
push
cmp
pop
rcll
pop
push
stos
fimuls
sahf
sbb
pop
loope
xchg
es
lea
cld
sub
js
jmp
jecxz
xchg
out
aam
mov
add
add
jb
imul
subb
les
xchg
daa
sub
es
loope
cs
mov
sub
xor
js
push
das
rcrl
cwtl
andb
or
lock
pop
adc
fsubs
jecxz
push
pop
add
pop
sub
inc
fistpll
push
iret
out
fwait
jmp
jbe
adc
xor
sbb
loope
scas
inc
sub
iret
ficompl
daa
adc
jl
adcl
mov
test
lret
std
push
mov
push
xcrypt-ecb
cmpsl
or
sub
xor
adc
sub
outsb
inc
into
ja
lods
add
out
or
dec
push
rcll
sti
fcmovbe
ds
jo
dec
mov
pop
and
cs
xor
or
addb
xchg
add
nop
xchg
mov
gs
inc
push
inc
inc
int
stos
bound
ss
lods
inc
pusha
int3
pop
sbb
repz
pop
test
test
daa
jmp
popf
rclb
xchg
sbb
pusha
mov
les
fldcw
sbb
jge
dec
push
dec
inc
repnz
sub
xrelease
int3
aas
mov
out
lods
xchg
sbb
jo
les
push
xor
jge
scas
aad
nop
loop
lahf
push
or
add
jl
dec
stos
aad
jns
enter
mov
mov
or
jp
push
cmp
cltd
mull
sbb
xchg
int3
push
push
out
ljmp
sub
dec
inc
loope
cmpsl
add
add
jnp
orl
jg
aam
clc
add
lds
ja
mov
sub
cmc
sahf
enter
hlt
aaa
or
ja
fldcw
mov
ss
jmp
rorb
dec
sbb
fwait
lret
movsb
rorb
xor
mov
xchg
into
push
cmp
and
arpl
fcomps
lock
icebp
lods
enter
xor
inc
lock
daa
test
das
pop
xor
mov
sub
push
js
sbb
adc
incb
dec
fstpt
setle
add
mov
ja
sar
jno
bound
jns
dec
pushf
inc
mov
sti
popa
or
test
or
test
aaa
or
inc
dec
sbb
test
shrb
int3
push
add
dec
xchg
scas
sub
mov
ret
pushf
cli
dec
sbb
dec
rolb
and
pop
mov
rorb
ja
sbb
mov
xchg
data16
mov
icebp
jbe
out
mov
pop
inc
pop
jns
iret
push
cmp
fs
les
jns
push
jb
mov
push
pop
movsb
and
mov
xor
test
imul
outsl
and
xchg
add
xchg
ds
add
bound
cmp
add
push
inc
call
inc
cmpsb
fwait
test
shl
movsb
arpl
ljmp
push
push
jbe
ror
xchg
mov
dec
mov
movsb
dec
mov
xor
shl
sub
repnz
test
leave
iret
mov
mov
lds
pop
pushf
push
icebp
add
mov
or
add
or
inc
push
cmp
imul
inc
dec
movaps
mov
inc
xor
adc
push
cs
dec
roll
dec
movsb
lds
cmp
jnp
test
push
jo
call
sarl
mov
mov
bound
imul
ljmp
xor
aam
into
jmp
je
les
aam
mov
sbb
adc
pop
push
mov
stos
in
lods
adc
add
cmp
mov
ja
mov
cld
pop
cmp
cmpb
add
pop
sub
pop
test
sbb
adc
fldcw
in
lret
aam
decb
fildl
push
dec
fistps
xor
cmpb
sbbb
push
in
sub
and
hlt
mov
sbb
or
adc
or
sbb
and
xchg
push
popa
or
addr16
mov
lods
mov
xor
sbb
xchg
cltd
stos
pop
cmp
sub
lret
mov
loop
jl
ror
jno
add
jbe
pushl
push
fnsave
loop
ret
xchg
xor
mov
test
cmp
push
add
jo
cmc
pop
stc
xor
pop
dec
insl
lock
add
rcrb
addr16
clc
lods
cmpsl
pushf
inc
cmp
addr16
popf
fdiv
adc
les
mov
xchg
sbb
fs
mov
incb
int
push
cmp
aaa
in
mov
mov
jnp
add
dec
pop
adc
fld
clc
pop
sub
int
xchg
xchg
loope
dec
movsl
xor
jmp
mov
fcmovb
jl
pop
loop
xchg
jno
mov
in
stc
mov
push
aaa
int
adc
sbb
cmp
mov
pop
sbb
jns
push
push
sub
jo
add
aas
pusha
xor
arpl
call
or
shll
mov
push
dec
or
push
push
inc
ficoms
seto
xchg
rcrl
push
ja
sub
mov
es
push
xor
stc
mov
mov
mov
xchg
dec
addr16
lea
mov
jmp
inc
data16
cltd
inc
lret
jne
add
in
mov
mov
mov
xchg
xchg
test
nop
rcrb
stos
xor
cmp
sub
inc
xor
pushf
lcall
fisubs
pop
in
and
or
js
clc
movl
xchg
pop
outsb
stos
fucomi
in
int
js
add
mov
dec
popa
cmpsl
sti
test
xchg
pop
cmc
lret
xor
inc
mul
xor
add
xor
fistpl
xor
mov
mov
pop
add
nop
xchg
shl
or
adc
repnz
mov
xor
xor
push
sub
pusha
cs
out
push
mov
jb
xchg
mov
testb
call
shlb
pusha
int
loope
push
aas
sub
pslld
fs
pop
jo
adc
add
mov
mov
ss
test
add
xor
inc
les
mov
jle
adc
jnp
std
and
xchg
ret
cmpxchg
jle
adc
cltd
loope
sbb
xor
xor
jmp
lret
mov
pop
test
lods
xor
dec
hlt
xchg
and
sub
cmp
sub
push
cmpsb
add
cltd
push
fsub
jle
mov
ds
enter
je
or
mov
jne
adc
pusha
repz
mov
jne
movsb
arpl
xor
enter
adc
jno
fwait
rcll
shll
test
cmpsl
push
test
adc
mov
inc
out
test
adc
popf
pop
push
in
and
int
mov
xchg
fcomp
notl
cld
mov
int
repnz
loop
jl
faddl
jle
cmpb
loope
xchg
es
lret
clc
hlt
jns
sub
insb
adc
sub
push
mov
pop
xchg
inc
xchg
cmp
into
sbb
jns
call
jecxz
xchg
mov
mov
dec
and
adc
adc
idivb
pop
pop
cmpl
xchg
xor
test
adc
jcxz
jae
mov
out
adc
mov
or
inc
out
roll
pop
jecxz
cmpsb
fisttpll
cmpsl
and
aad
inc
xchg
mov
mov
mov
pop
js
daa
inc
bound
mov
or
lret
ret
dec
insb
or
cmpsl
aad
jno
dec
pop
push
sbb
mov
mov
xchg
adc
or
dec
jp
int
movsl
in
int3
mov
cli
push
mov
iret
adc
std
in
adc
push
fcomi
fsubrs
jmp
mov
cmc
add
pop
pop
ret
dec
sbb
leave
push
dec
pop
pop
or
aam
cwtl
cmpsl
lret
hlt
insb
into
enter
dec
sbb
movsl
jne
cmc
dec
stc
inc
xchg
jns
mov
mov
jl
pop
call
and
adc
mov
jno
or
jno
cwtl
push
xchg
add
mov
pop
pop
leave
sub
push
cld
push
imul
lea
push
ja
xchg
lods
xor
dec
pop
sbb
cmp
xlat
push
and
mov
jecxz
inc
leave
pop
mov
lock
jae
sub
push
std
or
inc
movsb
shlb
xchg
fistpl
in
jo
not
ljmp
lcall
es
dec
sti
int3
sub
testl
loope
xchg
std
pop
adcl
sbb
xchg
cld
jg
xchg
add
int
out
xchg
insb
shlb
jge
ret
pop
xor
sbb
stos
adc
xchg
push
cmp
sub
cmc
or
aas
sbb
xorl
lret
xchg
adc
les
pop
sbb
sbb
jmp
pop
xrelease
call
xor
cmp
push
leave
mov
rorl
cs
jnp
mov
mov
sub
lock
or
repz
ss
mov
adc
stc
repnz
dec
scas
add
push
pop
sub
int3
push
xchg
or
mov
ljmp
mov
pop
xchg
add
dec
adc
and
add
mov
jge
mov
mov
xchg
and
push
mov
icebp
inc
fwait
test
xchg
test
and
sbb
push
or
add
scas
loope
enter
ret
in
push
mov
out
or
testl
scas
cs
in
pop
into
inc
test
and
mov
fsubs
lret
push
gs
fdivs
data16
insb
sti
mov
inc
xchg
fiadds
cmp
in
ljmp
call
sub
fdivrp
in
and
cmpb
arpl
arpl
in
jecxz
lock
rorb
adcb
inc
dec
add
pop
dec
jb
mov
in
clc
add
or
int
cmp
es
mov
dec
adc
sub
fs
mov
mov
xor
les
mov
mov
nop
inc
or
out
or
cwtl
in
adc
loopne
jns
hlt
cmpb
inc
lds
mov
lock
sarl
inc
cmp
push
or
cmp
or
xchg
sbb
pop
jmp
dec
add
jmp
sub
enter
jle
leave
jbe
scas
jle
xor
sbb
jbe
sbb
and
lcall
mov
cwtl
test
inc
aam
sub
out
ljmp
rcrb
call
lret
mov
cmp
std
jbe
int3
aas
pop
mov
in
xchg
jns
insb
mov
sahf
into
add
je
ficoml
mov
mov
in
jg
pop
out
dec
arpl
xor
sbb
testl
jne
icebp
and
fdivl
xor
mov
sub
and
out
fldenv
jno
jno
pushf
and
mov
lret
fs
sbb
into
jg
ljmp
call
mov
das
lds
popf
adc
push
ss
mov
pop
add
sbb
out
mov
lock
testb
insb
adc
dec
pop
popf
lea
cmp
push
arpl
xchg
fdivrs
or
stos
mov
jne
pusha
rorb
cmp
fs
xchg
xchg
jmp
or
insl
jno
es
daa
mov
mov
iret
jnp
into
jge
jns
lock
add
and
fldt
shrb
or
dec
shrb
rcr
enter
lcall
leave
jae
out
or
bound
popa
jp
or
cmp
push
imul
mov
inc
jnp
js
add
jle
sub
xor
jl
xchg
dec
sub
push
push
sbb
push
cld
mov
cmpsl
sbb
sbb
or
test
pop
mov
pop
ret
orl
movsl
mov
out
lcall
popw
pop
mov
fs
add
fcoml
mov
inc
imul
pop
sub
mov
pop
repnz
push
mov
pushf
jp
pop
lret
jnp
mov
cli
sarb
aam
test
loope
sbb
shl
fisubs
movsl
bound
xor
xchg
add
mov
insl
xchg
jbe
xlat
cld
test
xchg
arpl
pop
fs
xlat
mov
call
das
je
lods
out
jge
cld
test
ret
add
out
jg
mov
cwtl
js
sub
fiadds
xor
cmp
mov
xchg
push
pop
or
xor
sbb
add
data16
jp
inc
js
and
mov
mov
je
adc
out
and
jge
ret
ss
sub
dec
addr16
pop
popf
sbb
add
bound
mov
jbe
sti
scas
xchg
mov
pop
clc
mov
push
movsl
sbb
nop
jne
xchg
mov
ss
mov
pop
rolb
aaa
push
sbb
cmpb
rcll
ret
xchg
lods
xor
dec
mov
dec
lcall
xchg
push
lret
cwtl
cmp
sbb
adc
mov
scas
lret
inc
push
adc
rcll
xlat
outsb
adc
adc
xor
in
dec
jl
xchg
pop
xlat
cmp
mov
sbb
int3
fidivl
into
repnz
xchg
sbb
pop
xlat
mov
push
add
cld
adc
bnd
std
imul
test
and
push
out
cli
cwtl
test
xor
movl
fcomps
stos
fbld
sbb
jnp
sub
xchg
add
jle
sti
adcl
test
popf
cmp
cld
mov
cmp
lds
in
pop
and
lods
sub
push
imul
loopne
sub
mov
pop
je
mov
ficompl
imul
sub
subl
dec
sub
or
clc
popf
fstpl
push
fwait
dec
cmp
stos
push
xor
push
mov
inc
mov
cmp
frstor
jmp
adc
and
pop
pop
in
xchg
outsb
mov
jae
int
repnz
add
xchg
sarl
or
push
repz
jmp
int3
rcrb
enter
inc
imul
clc
lahf
dec
dec
popa
in
aam
ljmp
jo
push
push
mov
jne
fldt
roll
jmp
push
dec
sbb
shrb
inc
dec
mov
rol
in
jge
sbbb
cli
arpl
fdivrs
cltd
in
cli
sub
loop
jmp
testb
cs
mov
cmp
cs
mov
fstpl
cltd
sbb
jnp
dec
add
jge
movsb
fsubp
xor
in
jne
aas
mov
fldcw
sub
stc
je
or
movd
dec
cmpsb
out
and
mov
mov
jmp
sti
mov
mov
mov
cltd
xor
pop
vmread
xchg
inc
dec
notb
mov
pop
adcb
lods
pop
lock
mov
leave
int
clc
rorb
and
mov
shlb
test
sar
adc
or
mov
shrl
stos
stc
xor
dec
mov
js
aad
dec
xchg
add
dec
mov
mov
ljmp
movsb
das
dec
test
fisubs
fsubrs
sbb
mov
rcll
xchg
lahf
mov
sub
pop
lahf
iret
add
bound
adc
icebp
insb
mov
inc
dec
test
push
pop
xchg
popa
pop
shrl
aaa
insb
mov
push
shrl
sbb
ja
mov
and
out
xchg
dec
out
pop
arpl
imul
sub
jne
inc
inc
lcall
mov
repnz
adc
mov
jmp
loopne
dec
sbb
mov
fidivrs
xor
push
testb
pop
xchg
mov
mov
fwait
out
out
test
mov
push
movsb
or
mov
xor
mov
push
mov
adc
shll
sbb
dec
mov
je
shlb
jne
into
mul
sbb
loop
fwait
rorb
loop
xor
jae
out
out
in
hlt
sahf
aam
inc
push
mov
sbb
xchg
mov
pop
adc
mov
mov
adc
stos
outsl
or
jo
and
leave
lcall
adc
inc
sub
push
inc
inc
ret
jecxz
mov
xchg
lods
dec
rcrl
sbb
jno
adc
xchg
je
inc
std
pop
addr16
mov
mov
loopne
cltd
mov
lcall
xlat
enter
sub
mov
lea
mov
leave
mov
jge
push
mov
aaa
mov
clc
inc
adc
mov
ret
lret
pushf
xor
fwait
mov
mov
xlat
mov
jne
mov
test
or
mov
sub
ja,pt
shlb
inc
aad
imul
xor
movl
test
stos
mov
cmpsb
loopne
mov
jmp
fimuls
lcall
rcrb
sbb
mov
imul
out
sbb
xor
pop
enter
mov
adc
dec
dec
outsl
ds
fstps
jne
aaa
jo
mov
push
mov
add
insl
idiv
lea
repnz
sub
lods
jmp
or
xorb
mov
add
loop
add
ret
dec
jnp
stos
test
orb
addr16
sub
jmp
sbb
push
or
fnsave
xchg
divl
mov
adc
nop
push
addb
lods
cmp
push
rcl
scas
rorl
jmp
call
leave
cmpsl
dec
mov
sbb
sbb
fnsave
call
clc
aaa
cs
movsb
fisttpll
mov
popw
inc
mov
pop
or
mov
push
jmp
adc
inc
and
cmpsl
jg
xchg
fcoms
cmp
aam
shlb
stc
mov
cli
repz
fistl
adcb
adc
cmc
sbb
dec
mov
addb
cmp
stos
add
rcl
mov
popa
mov
sarl
mov
es
adc
mov
dec
cld
lret
mov
xchg
adc
mov
sub
sbb
lods
dec
sbb
pop
push
xor
dec
inc
or
popa
add
es
pop
push
out
xchg
stos
pop
cli
stos
fwait
test
pusha
imul
or
dec
outsl
pop
out
sbb
adc
and
in
jg
jbe
inc
jb
lods
fildl
aaa
lahf
sahf
push
testb
int3
movsl
push
sahf
test
dec
lcall
scas
or
or
dec
or
ss
std
xchg
aam
pop
addr16
iret
and
jbe
iret
sbb
rorb
adc
scas
fiadds
mov
ds
aam
das
lret
sub
mov
jmp
andl
jl
out
lcall
sub
mov
xor
int
xor
dec
sbb
lods
pop
into
xchg
in
jnp
flds
and
sbb
ret
dec
dec
stc
sbb
xchg
xlat
scas
xlat
dec
out
sub
pop
sbb
out
test
xlat
xor
test
cmpsl
imul
ret
stos
dec
imul
xchg
mov
push
out
jbe
pop
xchg
push
pushf
mov
lock
ret
pop
xchg
and
movsl
pop
push
cmpsl
outsb
xchg
inc
inc
stc
sarb
sbb
push
int
mov
das
call
popa
scas
mov
xchg
cmpsb
pop
mov
and
bound
pop
pop
xchg
jmp
or
cmpsb
jne
out
cmpsb
lock
int
pop
pop
shlb
leave
mov
jecxz
adc
push
pusha
vpshaw
jo
repz
inc
shrb
pop
inc
or
pop
jne
mov
das
aam
jnp
dec
cmp
xor
pop
or
add
lea
stc
ss
in
or
cmp
in
push
sub
shll
fmul
jmp
icebp
xor
sbb
sbb
lds
dec
ja
and
xor
push
mov
or
jecxz
int
std
inc
repz
pop
sub
leave
int3
push
gs
cli
subl
and
jnp
mov
mov
fisubrs
push
jnp
pusha
notb
jo
jp
mov
fs
loope
fwait
lock
in
imul
les
sub
stos
ret
mov
fdiv
idivl
scas
mov
sbb
jb
xor
jbe
push
mov
je
daa
pusha
scas
addr16
cmp
or
lea
nop
lods
je
aas
xchg
adc
adc
mov
loop
cld
adc
sbb
push
mov
pop
cmp
cmp
xchg
rclb
jae
cmc
cli
xlat
pop
inc
call
pusha
test
stos
xor
adc
sub
xor
clc
pop
arpl
push
push
addr16
inc
test
or
inc
push
lea
jp
mov
stos
lret
push
stos
fcos
lea
mov
cwtl
cmp
inc
cmpsl
inc
test
stos
mov
mov
fistpl
cmp
push
out
mov
xor
jnp
xor
daa
roll
lods
xchg
cmp
adc
jle
daa
add
sub
xchg
and
fiadds
adc
rclb
lods
pop
sbb
xor
adc
adc
aad
xchg
xor
xchg
movsb
add
hlt
mov
cmpb
rclb
jns
push
sub
inc
divl
push
imul
test
or
push
fs
sahf
mov
pop
ret
xchg
xor
or
push
pop
cwtl
sahf
sbbl
sbb
subl
aaa
in
and
push
test
clc
sbb
nop
daa
sahf
sbb
mov
jo
add
ljmp
loopne
add
ljmp
arpl
push
mov
cmp
pop
lock
or
mov
mov
mov
mov
or
adc
not
mov
orb
pop
insb
fs
mov
xchg
or
sbb
lahf
int
add
jo
mov
cmp
and
sub
insl
sbb
push
xor
rcrl
cvtps2pd
lock
fisttps
push
pop
nop
rcr
stos
dec
push
fisttps
push
sub
insl
cmp
movl
cmpsb
push
dec
dec
cltd
pop
sbbl
scas
jne
jno
rcl
test
icebp
sub
cmp
stc
fsubs
jb
out
arpl
iret
outsb
mov
inc
fidivrl
out
arpl
mov
cmpsl
xor
nop
xlat
jge
cmc
pop
stos
enter
pusha
sub
xor
in
imul
sbb
aas
xor
cld
xchg
movsl
lahf
ret
lret
inc
sti
pushf
call
jne
scas
clc
xor
pop
std
pushl
lds
xchg
pop
pop
jge
inc
xor
sub
test
fisttps
or
cmpsl
out
cld
aas
stc
sti
jne
push
push
mov
mov
push
inc
rcrl
xor
into
dec
pop
push
sbb
ljmp
int
test
daa
sbb
mov
popf
ja
and
mov
subb
push
scas
xchg
pop
es
sar
inc
fwait
jnp
ljmp
fstpl
fcmovu
lds
iret
ja
mov
adc
out
or
cmp
idivl
popf
sti
sub
push
lret
lods
lods
repz
lcall
sbb
jns
out
das
ljmp
jae
pushf
shl
mov
pushf
outsl
push
filds
cvtdq2ps
pop
idivl
adc
lea
leave
jp
xchg
xchg
cmp
pop
or
push
jmp
bound
dec
stc
adc
in
mov
cli
arpl
jp
addr16
cmpsl
push
inc
fsubl
int3
xor
mov
push
add
pop
nop
in
add
mov
adc
ja
pop
dec
inc
jne
push
push
push
sub
cld
jle
xchg
sbb
arpl
neg
rol
aad
out
decl
add
fldcw
and
jnp
adc
xchg
scas
add
mov
je
test
adcl
mov
andl
inc
xchg
inc
sbbb
addl
out
sbb
cmp
dec
pushf
fs
mov
push
dec
jb
xor
add
test
pop
xchg
jp
imul
inc
lods
mov
stc
push
cltd
adc
cmp
adc
mov
add
pop
jo
and
dec
rclb
push
and
and
sub
movsl
xor
fisttpl
andl
cmp
push
inc
shrl
or
leave
shlb
shrb
mov
dec
ss
loopne
add
mov
aaa
dec
arpl
push
idivb
push
push
fsubrp
and
addb
push
mov
xchg
fmull
test
repz
lods
bound
mov
mov
adc
jne
and
test
xlat
das
in
pop
ds
and
mov
lea
and
add
repnz
sti
sub
inc
lods
push
dec
xor
inc
lcall
cmp
and
pop
cmp
and
aam
fyl2x
sbb
fs
test
jl
movsl
xchg
ret
mov
push
cmpsl
add
lahf
gs
aam
std
and
jbe
mov
mov
iret
mov
lods
pushf
cmp
xor
repnz
cld
and
or
das
ficoms
ds
push
add
cmp
loopne
popa
mov
cld
repz
push
dec
mov
jnp
lds
push
sbb
shlb
pushf
adc
jo
inc
ds
movsb
xor
gs
lods
adc
mov
cwtl
push
outsl
or
shlb
test
dec
int3
jb
sbb
xchg
or
push
std
cmc
lods
mov
pop
jg
sti
fidivl
pop
mov
cmp
lods
ljmp
shrl
loop
push
ds
add
push
cmp
dec
imul
insl
or
or
es
imul
cmpsl
mov
lahf
sub
es
jle
mov
aad
lea
das
xchg
subb
mov
in
jmp
dec
jle
notl
les
dec
jnp
pop
jge
mov
mov
push
pop
jge
or
lods
push
cmp
xchg
add
push
test
mov
mov
jge
lret
gs
imul
ljmp
push
inc
adc
icebp
jbe
and
inc
js
mov
aad
fidivrl
or
push
lods
fwait
adc
pop
jo
xchg
xchg
rcl
or
dec
jno
ficomps
shlb
sub
outsb
mov
add
xorl
into
lods
pop
fnsave
out
fisubrs
sbb
cld
out
insb
mov
sub
and
inc
movsl
lcall
repnz
andl
inc
dec
ss
push
std
inc
add
and
mov
int3
xor
fwait
sbb
ds
scas
iret
nop
cwtl
cs
lcall
imul
lcall
dec
dec
lods
inc
inc
lds
cmpsl
lea
loope
scas
dec
outsb
movsb
pop
and
push
int
add
xor
jmp
pop
lcall
in
jb
pop
movsb
mov
sub
std
test
ror
gs
loope
negl
test
jo
pusha
sub
fistl
xor
out
cmp
push
popa
inc
jae
pop
xchg
inc
pusha
pop
popf
xchg
inc
xor
push
adc
jnp
cli
mov
outsb
scas
hlt
cmp
jns
sub
or
or
cli
daa
sbb
sub
mov
in
mov
lea
jno
jns
dec
dec
mov
add
jno
push
push
int
push
and
daa
mov
cs
sub
or
jecxz
iret
xchg
jmp
lods
fildl
lcall
push
mov
bnd
out
outsl
pop
pop
pushf
push
fistl
imull
out
das
cmp
std
iret
insl
or
dec
xchg
test
scas
mov
mov
in
ds
cld
into
in
sbb
sub
xchg
sbb
inc
xorb
insl
sbb
stc
lock
lcall
push
jo
fwait
gs
mov
push
jae
mov
pop
mov
sub
pop
into
adc
in
bnd
mov
cmp
imul
xchg
pop
hlt
test
divb
fistl
cmc
xchg
jns
sbbb
xchg
sahf
push
sbb
ret
cli
sub
imul
in
mov
inc
popa
adc
ss
jmp
rorb
jb
repnz
mov
fstl
dec
mov
adc
out
hlt
out
mov
les
push
jbe
push
popa
leave
adc
xor
adc
repz
xchg
into
mov
pushf
lahf
sub
mov
lret
ss
sub
push
jno
push
mov
sbb
pop
push
cmp
inc
sub
sbb
pusha
aad
clc
cmp
cmp
fs
cli
outsb
lock
in
pop
iret
mov
loopne
cltd
stos
xchg
xchg
idiv
push
dec
insl
sub
add
lds
push
inc
cmp
ret
fdiv
fimuls
sbb
jne
and
out
jne
jg
fistps
mov
popa
push
and
insb
mov
xor
stos
sub
das
ja
jns
dec
into
ss
inc
fldl
cmp
lret
push
mov
mov
sub
mov
ficoms
lea
cmp
icebp
cmpsl
pop
adc
js
scas
stos
xrelease
fsts
push
mov
rorb
adc
jb
mov
jo
xor
xchg
sbb
dec
or
xchg
sub
neg
into
lret
orl
pop
mov
inc
xchg
pop
outsb
sbb
xchg
jecxz
dec
scas
repnz
or
enter
lods
push
out
test
dec
jne
rol
lcall
lea
icebp
inc
jo
add
in
jcxz
shll
xchg
jecxz
mov
stos
sbb
clc
mov
dec
or
adc
sub
mov
xchg
sbb
inc
outsb
in
sub
or
pop
dec
jae
in
inc
pop
cmp
sahf
push
sub
nop
iret
adc
pop
stos
pop
imul
jnp
push
sbbb
jno
decl
and
xor
in
into
mov
sub
xchg
les
fnstenv
push
int3
mov
mov
ror
mov
mov
iret
inc
into
mov
or
dec
sub
mov
xchg
orb
cmp
subb
push
clc
cmc
scas
jp
xchg
out
ret
popf
and
pop
cltd
jae
cmc
iret
out
cs
test
xchg
pop
mov
das
orl
push
lahf
pop
push
jne
ret
xor
sbb
sbb
pusha
mull
push
push
mov
or
mov
mov
lcall
loopne
fcomi
mov
repz
adc
loop
and
or
mov
add
jl
mov
jae
dec
stos
lahf
mov
ja
mov
lea
adc
push
adc
pop
stc
push
push
mov
push
mov
adc
jg
xor
mov
insb
sub
arpl
adc
push
inc
cs
daa
sti
add
jmp
divb
push
jae
aam
jp
lock
scas
dec
inc
ret
jns
add
inc
pop
mov
outsb
sbb
sub
jmp
sub
addl
bound
pop
and
mov
lods
inc
push
or
pop
mov
imul
mov
pop
arpl
in
divb
cmp
fs
and
adc
bound
or
ja
mov
les
mov
sub
mov
jnp
cmpsb
ss
pop
sbb
enter
pop
jp
adc
push
rcll
sbb
mov
mov
sub
push
pusha
ror
xor
mov
int
adc
mov
jmp
loop
sbb
mov
push
nop
fwait
push
sub
or
cmp
dec
gs
in
mov
sub
or
lahf
loop
popf
mov
lea
icebp
jecxz
inc
xor
or
imul
in
xlat
loope
shll
xorb
jecxz
or
xchg
xorb
dec
out
pusha
mov
mov
fimull
insl
mov
or
lcall
insl
div
add
mov
and
insl
std
je
pop
icebp
cmp
pop
xchg
inc
repz
xor
lods
arpl
hlt
fcoms
in
enter
fdivs
in
jb
stos
cmp
mov
clc
orl
lcall
stos
shll
sahf
loop
and
popf
push
out
cld
sbb
out
pop
stc
sub
fistpll
xor
movsl
add
cmp
push
cmp
cmp
adc
cmp
leave
loopne
repnz
negb
addr16
xchg
dec
dec
clc
in
sub
popa
or
cwtl
fcomp
les
add
out
adc
lcall
jno
pop
jno
dec
mov
sbb
adc
and
inc
aam
adc
sti
dec
mov
jb
stos
mov
std
int
rcll
mov
mov
jecxz
mov
mov
aas
arpl
ss
inc
xchg
mov
test
shlb
and
subl
xor
push
xor
out
cmp
inc
cld
push
push
out
imul
and
subb
mov
cmp
and
insl
ja
mov
fwait
rcl
jb
and
xor
fcompl
xchg
sub
shr
and
mov
mov
sub
jb
sub
adc
in
jmp
push
test
mov
leave
stc
ds
je
push
je,pn
mov
rclb
dec
cwtl
mov
imul
sbb
notb
push
lds
pop
dec
stos
add
fisttps
xchg
sbb
push
subl
xorl
pop
mov
mov
mov
aad
inc
mov
icebp
addl
pop
sbb
push
es
xlat
aas
aaa
insl
mov
xor
mov
rcrb
ret
and
or
xchg
movsl
xor
xchg
leave
adc
pop
mov
push
jecxz
add
push
mov
cmpsb
adc
leave
loopne
insl
inc
cltd
stc
nop
add
test
adc
outsl
sahf
enter
xchg
int3
push
ds
stc
push
hlt
ret
jbe
pusha
and
push
inc
fsubl
fcomps
cmpsb
ret
jnp
fsts
pop
loop
xor
jp
clc
pop
nop
outsl
xor
mov
loope
sub
clc
dec
xlat
mov
negl
nop
sbb
fwait
mov
cltd
lea
lods
call
push
push
or
ret
in
jp
test
inc
jecxz
xor
out
or
das
pop
cmp
cmp
pop
jl
movsb
cld
sub
ds
insl
fisubs
mov
daa
mov
xchg
cwtl
jmp
pop
sub
mul
pop
sahf
jg
push
mov
stos
nop
imul
cld
adc
fimull
fbld
jp
clc
mov
xlat
ljmp
xchg
nop
mov
mov
imul
rcrb
or
test
dec
cmp
cmp
dec
aad
dec
or
aaa
xchg
or
loop
hlt
sbb
inc
cmp
mov
cltd
fsts
fiadds
mov
xor
push
mov
inc
into
and
mov
cltd
icebp
add
dec
sbb
dec
mov
inc
outsb
xchg
orb
pop
dec
and
andl
pop
cmpsb
mov
inc
mov
aas
decb
in
jp
rcrl
sub
sub
jge
inc
cld
mov
nop
hlt
jno
xchg
mov
xchg
sbb
dec
rcll
push
lds
jnp
ret
and
xor
sbb
scas
rolb
pop
arpl
fstpl
cmp
inc
pop
adc
dec
adc
dec
dec
push
in
in
ss
sub
pop
push
cli
cmp
xorl
rcrb
push
or
jl
int
pop
lret
xchg
push
or
lock
mov
cmpsl
shr
push
dec
push
jl
clc
dec
mov
stos
pop
and
or
sbb
mov
mov
add
or
pop
pushf
and
ss
sbb
sub
sub
push
push
push
xchg
xchg
clc
out
mov
pop
jmp
cmp
jmp
jae
mov
movsl
adc
mov
xchg
xor
cmp
outsl
sub
orb
push
outsl
push
jne
xor
rcrl
ja
sub
mov
push
fistpll
jmp
push
in
or
inc
roll
inc
cmpsl
push
and
pop
inc
subl
lods
jle
lret
adc
mov
out
popa
and
mov
and
nop
or
imulb
enter
jp
int
sub
sub
pop
test
mov
and
jge
inc
imul
xchg
pop
adc
ja
movsb
sub
mov
mov
fmul
iret
jge
push
sub
mov
mov
ret
popfw
mov
in
sbb
mov
cld
push
xor
cmpsb
cmp
je
or
inc
scas
imul
out
inc
jne
adc
xor
pop
nop
or
push
sub
adc
xchg
ret
jns
mov
cmp
mov
xchg
mov
inc
fwait
pop
out
incl
ffreep
cltd
sub
adc
sub
dec
inc
movsl
lahf
out
insl
sti
mov
inc
lods
or
loope
and
sub
sbb
or
add
mov
cmp
and
and
outsl
lods
dec
push
insl
cmpsb
sbb
jmp
into
xor
mov
stos
inc
push
lret
out
bound
fmulp
pushf
fdivr
test
fistps
adc
sti
mov
and
js
scas
add
push
aas
xchg
xor
in
mov
mov
std
jp
pushf
xchg
cli
negl
or
aaa
dec
xlat
cld
daa
loopne
ret
inc
mov
test
les
jmp
iret
dec
jge
aaa
mov
cld
mov
sbb
adc
orl
scas
inc
or
fdivr
ljmp
push
idivb
push
xchg
jge
cmp
pop
cmp
jbe
add
and
lret
dec
pushf
aas
addr16
mov
lods
mov
addr16
adc
ds
imul
aad
imul
xchg
push
jb
adc
popf
test
sub
lock
cmp
xlat
pushf
pop
lret
repz
adc
xor
inc
pop
lock
rcrb
frndint
sti
pushw
cli
mov
iret
leave
cmp
and
lahf
inc
popf
xchg
pop
jge
daa
mov
enter
sbb
test
imul
lret
mov
inc
jae
arpl
jp
repz
test
fs
jnp
shrb
mov
ljmp
xchg
fcomp
mov
add
bound
sub
in
movaps
outsb
das
sahf
std
mov
subb
cmp
mov
stos
adc
and
xchg
fdivr
sarb
je
mov
pop
xlat
mov
add
push
scas
xor
lds
adc
cs
dec
adc
add
mov
jmp
mov
cmp
sti
lods
jns
jno
out
sub
lcall
test
movsl
push
xchg
ss
repz
into
and
dec
in
xor
cmp
mov
les
push
inc
sahf
push
mov
inc
int3
and
ret
cmp
mov
je
mov
ljmp
test
mov
js
addr16
push
scas
cld
ret
mov
xor
pop
mov
out
iret
cmp
movsl
mov
xchg
pop
mov
jge
add
dec
repz
loopne
fisttps
in
mov
stos
pop
xchg
in
or
cwtl
xchg
mov
jg
imul
xor
loope
xchg
mov
mov
xorb
scas
fisttpl
jle
xchg
aas
lahf
push
cmp
xor
push
mov
out
mov
pop
mov
adc
loopne
pop
mov
sub
cltd
repnz
out
mov
xor
push
rcr
pop
loopne
rdtsc
cmp
ljmp
pop
sti
cmp
mov
pop
cltd
adc
in
fnstcw
xor
fs
push
aas
cltd
mov
push
jbe
jmp
js
xor
in
subl
pop
push
or
popa
jb
dec
cmc
xor
jp
arpl
test
sub
push
loopne
je
jmp
inc
int3
push
aam
jns
cmp
popf
ljmp
xchg
sbb
jo
orl
jp
insb
js
sbb
pop
lret
lods
lret
or
test
repnz
cmp
pop
lahf
mov
repz
or
mov
imul
push
scas
cmp
mov
lahf
xor
mov
subb
and
out
movsb
or
push
sub
add
and
js
jl
and
add
mov
mov
addr16
inc
push
in
ja
add
inc
mov
push
xlat
in
out
imul
dec
icebp
test
add
xchg
sub
sub
pop
adc
or
stos
sti
add
xchg
fwait
sbb
repnz
inc
lock
or
repnz
mov
fcomps
jnp
xchg
or
sbb
sub
je
xchg
mov
inc
mov
aad
addr16
insb
or
lds
adc
fisubs
adc
in
push
cmc
clc
cli
rcrb
add
lret
fisubs
jmp
add
loopne
push
dec
jne
push
and
cs
xchg
bound
or
cmp
cmp
ret
xor
in
mov
in
sbb
jnp
sti
cltd
clc
mov
sbb
sti
ret
inc
loopne
shll
sti
cmpsl
lahf
pop
insb
imul
dec
cwtl
fdivrs
jmp
xchg
ja
je
jecxz
out
mov
jbe
push
icebp
sub
pop
clc
sub
stos
test
or
test
es
push
lahf
fisttpll
lea
rol
cmc
lods
fisubrs
push
push
out
in
pusha
ljmp
fwait
adc
std
cmpsb
mov
sbbl
inc
pop
lcall
fadds
lea
aad
mov
gs
negb
inc
ja
jmp
jno
mov
add
dec
sbbb
dec
sbbl
inc
popa
lahf
icebp
pop
int
lahf
hlt
lret
nop
idivb
bound
push
mov
mov
jge
sub
mov
lea
sub
je
nop
xchg
add
loop
pop
xlat
inc
mov
sub
fdivrl
aad
test
int
ss
lods
out
xor
pop
jns
dec
movsb
dec
mov
adc
in
mov
in
ret
sbb
sbb
dec
out
movsl
test
jb
sti
add
orl
mov
fbld
xchg
bound
push
mov
lret
fcoms
and
lods
scas
mov
jae
fisubs
jo
ret
leave
adc
loop
mov
xchg
bound
and
mov
jle
sub
push
xchg
or
jle
dec
xchg
call
loopne
add
add
sarl
imul
push
fldt
mov
addr16
cwtl
or
pop
cmpsl
adc
mov
test
mov
aas
mov
push
cli
sub
popa
fstl
ds
pop
add
rcrl
pop
mov
addr16
or
mov
dec
mov
mov
pop
push
mov
cmovl
ficompl
test
loope
sahf
call
into
jne
fwait
dec
jmp
test
test
mov
jge
or
push
xchg
fwait
sbb
push
fwait
mov
cmc
insl
cmp
xlat
loopne
jae
dec
stos
lea
cltd
test
hlt
pop
leave
dec
sub
mov
jns
cmpsb
push
inc
xchg
lods
inc
test
rcll
push
lahf
gs
mov
dec
imulb
js
xchg
fstps
jae,pt
or
rorl
incb
xor
sub
insb
scas
lcall
fnstenv
aad
cmp
ret
inc
int
ret
scas
push
ds
jle
fiadds
inc
jp
mov
push
pop
mov
shlb
or
aam
sub
in
enter
inc
loop
mov
divb
lea
shr
inc
clc
out
mov
iret
xchg
outsl
push
mov
std
sbb
mov
xlat
stc
jnp
mov
jmp
and
dec
mov
mov
mov
push
rorb
xchg
mov
cli
or
mov
pop
int3
ret
into
cmpsb
xor
mov
lea
and
fimull
xor
popa
sbb
adcl
adc
rcll
ljmp
push
cmp
fsubrl
mov
jge
xor
pop
mov
stc
dec
inc
sbb
mov
sahf
push
push
jne
and
or
addr16
mov
jl
loope
or
daa
sbb
test
loopne
push
sbb
stos
insl
stc
adc
jmp
xor
xchg
mov
sub
xor
ss
clc
cmp
mov
add
xor
push
outsl
aam
adc
lock
dec
xchg
or
xchg
dec
inc
xchg
add
lcall
dec
or
sub
dec
and
mov
xchg
sbb
lods
xchg
mov
adc
fidivl
fildll
in
lods
stos
sub
xlat
push
sbb
push
jg
mov
sub
int
mov
or
mov
pop
push
call
inc
leave
mov
outsb
pop
xchg
add
lock
xor
sub
sahf
dec
incl
mov
fistl
mov
jg
out
insb
mov
arpl
push
cmpb
pushf
inc
lahf
adc
mov
into
dec
pop
inc
js
jmp
ficoml
mov
xchg
cld
or
or
pop
or
shr
mov
jmp
dec
std
fdivrp
push
je
lock
cmp
sub
loop
mov
and
mov
jb
xchg
dec
inc
loopne
add
and
dec
xchg
aaa
mov
nop
test
add
push
cmp
repz
or
mov
jbe
bound
adc
es
xor
inc
scas
into
cltd
xchg
cmp
out
add
lock
pop
ja
lcall
xor
stc
sub
cmp
fs
adc
mov
cmc
pop
mov
hlt
and
or
xchg
das
js
adc
xor
popf
sub
cli
mov
call
and
add
repnz
inc
pusha
mov
ret
mov
mov
or
dec
xor
or
das
lods
mov
mov
jmp
int3
mov
pop
add
cmp
pop
push
and
jge
ss
pop
bound
mull
leave
icebp
cmp
ret
in
xchg
lret
cmpsb
test
movsb
out
je
push
daa
les
lea
pushf
clc
cmp
mov
addr16
mov
cmpsl
push
aas
das
push
or
xor
repz
fmuls
jmp
rorb
out
mov
and
xor
cwtl
sub
in
or
pop
push
inc
dec
sahf
adc
jb
dec
call
sbbl
xchg
cmc
jl
or
mov
out
call
xor
mov
test
loopne
sbb
mov
enter
and
xor
cmp
rcr
filds
jge
sbb
addr16
add
enter
jecxz
ds
adc
out
icebp
jne
stos
or
cmp
push
or
cmpsb
lret
stos
loopne
into
fisttpll
popf
fs
push
cmp
clc
sbb
jae
ss
mov
pop
sbb
inc
sub
xchg
lods
jp
inc
xchg
mov
in
jns
aad
es
std
push
sub
push
test
sub
insb
sub
aas
dec
inc
lock
std
lea
xchg
fisttpl
arpl
sarb
insl
xor
pushf
ja
int3
mov
iret
out
hlt
sub
jle
fldl
pop
test
jb
aas
rep
push
dec
push
mov
adc
cmp
jge
push
or
ds
jecxz
push
mov
pop
cmpsl
push
aaa
into
xchg
aaa
movsb
inc
mov
xchg
call
sbb
jns
rcrb
out
add
xchg
bound
jmp
xor
sub
and
xor
inc
inc
jge
jg
push
loope
aam
push
scas
add
mov
dec
mov
sub
push
xor
add
and
xor
jb
scas
dec
fninit
clc
jecxz
xchg
test
scas
add
jnp
rcrl
shrb
sbb
into
mov
xchg
xchg
push
out
and
ja
jl
dec
daa
mov
ljmp
pop
test
xchg
dec
dec
hlt
sarb
pop
mov
gs
fmuls
into
inc
ret
popa
in
movsb
jbe
negl
mov
into
sar
jle
inc
mov
adc
ljmp
in
push
jnp
inc
into
push
pop
test
je
cs
test
jne
popf
cmpsl
xchg
add
aas
sbb
jae
mov
mov
ljmp
in
jnp
xchg
mov
imul
int3
sub
adc
icebp
fistps
adc
sub
lcall
xchg
das
inc
xlat
xor
xchg
sub
sti
lret
sub
mov
mov
std
nop
fisttpll
push
imull
and
in
adc
sbb
sub
adc
out
and
addl
lcall
mov
or
mov
addr16
shrb
scas
cmp
push
lea
test
jns
cltd
mov
loop
imul
dec
dec
cltd
pop
cmp
dec
scas
or
add
pop
test
in
dec
mov
cmp
movsb
mov
dec
dec
ds
sbb
pop
pop
bound
xchg
stos
rcl
es
in
cmp
xor
rolb
test
jg
out
mov
mov
mov
cmp
popf
sti
cmc
cmp
fwait
or
clc
call
xchg
movsb
jmp
add
clc
addl
xor
pushf
add
imul
xchg
xchg
xor
mov
imul
mov
lds
shll
sub
xchg
sbb
subl
ljmp
adc
jae
loop
cmpsb
mov
sbb
push
cmp
js
cltd
stos
or
mov
aas
push
mov
inc
push
test
xor
lds
add
es
xor
or
outsl
clc
loopne
mov
daa
adc
pusha
js
or
clc
mov
sbb
dec
daa
in
inc
in
shld
or
gs
lea
xchg
sbb
int3
je
into
jns
sub
repz
mov
push
pop
adc
mov
fs
xor
and
loopne
dec
dec
cs
adc
shrl
or
add
mov
inc
xchg
mov
popa
cli
xchg
add
adc
movl
enter
push
addb
xor
adc
and
das
mov
or
xor
shrl
mov
in
in
sbb
mov
xor
loope
test
iret
mov
cmp
fnstsw
or
data16
movsl
je
mov
sbb
or
or
push
ja
adc
gs
ret
ds
daa
mov
imul
iret
cmp
lret
push
mov
lahf
or
in
sub
loop
into
mov
push
movsl
inc
out
inc
insb
scas
sbb
daa
cltd
stc
mov
movsl
cltd
cmpb
xchg
fcoms
rcrl
pushf
and
outsl
outsb
dec
rorl
mov
mov
mov
pop
xchg
mov
mov
pop
pop
mov
adc
fsubrl
lcall
arpl
pop
mov
das
sub
xchg
je
mov
gs
sub
add
gs
into
test
mov
mov
pop
aas
mov
cltd
scas
outsl
cld
lods
popf
adc
scas
popf
jne
add
and
xlat
rep
movsb
inc
add
cmc
fucomip
mov
cmc
mov
lods
xchg
insb
addr16
push
insl
push
xchg
xchg
pop
lcall
sbb
das
inc
sbb
mov
mov
mov
es
fisttpll
dec
inc
and
mov
mov
imul
jae
lret
imul
insl
xor
inc
test
xchg
push
jl
subl
scas
or
dec
andl
mov
push
xor
movsl
fsubrs
cli
xchg
mov
jp
es
je
pop
add
aam
popf
mov
cmp
test
popf
xchg
and
cwtl
into
sbb
loopne
test
imul
add
ret
ljmp
cltd
shl
mov
sti
out
scas
or
aaa
xor
xor
inc
out
test
xor
mov
lods
mov
movsb
xlat
outsb
pop
aad
pop
loope
loopne
push
les
es
xchg
daa
lds
dec
push
insb
rclb
xchg
jl
arpl
inc
sbb
es
sub
mov
into
testb
jnp
mov
dec
insl
ss
pop
push
pusha
pop
aad
repz
mov
insl
ret
inc
test
aam
xchg
push
push
outsl
addb
cmp
hlt
push
popf
lahf
mov
push
or
cwtl
test
in
sbb
shll
xchg
aaa
sub
scas
loopne
rorb
xor
pusha
pusha
rclb
or
inc
cmp
repnz
fisttpl
std
pop
int3
cli
sub
sub
xor
inc
mov
vmread
daa
add
jns
sbb
ljmp
test
testb
cmp
cmp
pushl
jo
lea
sub
inc
fldenv
shll
jae
jg
lds
mov
clc
inc
push
je
and
or
pusha
movsl
imul
hlt
jno
mov
sbb
ret
vmaxss
inc
fiadds
add
addr16
cmpsb
mov
inc
mov
jg
xor
sub
std
arpl
cmp
pop
stc
or
jg
das
mov
aaa
fistpl
shll
cmp
jns
push
fucomp
mov
adc
cmp
inc
stc
fldt
sbb
mov
inc
outsl
mov
sbb
inc
das
jne
xor
fcmove
fwait
mov
enter
mov
dec
cli
aad
sbb
dec
lcall
ret
pushf
add
add
hlt
or
int
jne
jle
or
cwtl
xchg
mov
xor
push
ret
les
inc
lret
xor
push
outsl
dec
aam
sbbl
xchg
inc
sbb
aas
test
xor
outsb
mov
xchg
mov
clc
xchg
push
mov
mov
mov
mov
rcrl
test
dec
jg
fsts
leave
pminsw
out
pop
call
add
fsubs
mov
int
int3
cmp
xchg
add
js
jbe
loopne,pn
sub
jmp
sarl
add
movd
jnp
jno
jne,pt
loope
hlt
pop
adc
jp
in
fcomps
xchg
inc
shlb
push
push
popf
mov
popf
flds
xchg
xchg
xor
inc
push
hlt
sub
adc
out
add
jbe
daa
xor
and
rolb
push
push
ljmp
addb
iret
push
rorl
fbstp
jle
and
in
mov
iret
dec
and
mov
aas
adc
movsb
shll
movsb
cmp
stos
daa
mov
add
ds
mov
lods
lods
xchg
mov
sarl
ror
bswap
cltd
or
jl
push
sbb
lret
aad
xchg
xor
jo
jb
mov
pop
mov
out
pop
mov
shll
mov
je
test
je
pop
fidivl
ljmp
sub
in
mov
mov
stc
push
push
sbb
ficoms
es
outsb
cmp
mov
sub
xor
add
xchg
mov
in
xchg
sbb
or
jl
fldl
aas
nop
add
jge
sub
xlat
jle
sub
or
sbb
int
xchg
roll
das
ds
in
fisttpl
push
popf
shll
mov
dec
mov
xlat
das
cmp
and
stos
rcrl
mov
out
jl
sarb
mov
gs
sbb
sti
out
pop
shl
popa
movlps
std
mov
mov
aaa
push
push
das
xor
xor
sbb
sub
add
push
xchg
test
in
fcomi
ret
push
loopne
jmp
jmp
pop
dec
aam
test
sub
xchg
adc
mov
cs
cmp
sahf
pop
add
aad
sub
test
or
mov
iret
aam
test
cmp
inc
out
push
push
in
adc
aas
dec
stos
pusha
inc
cld
push
xlat
mov
jmp
sbb
hlt
mov
mov
push
dec
inc
lock
pop
cwtl
inc
in
sub
dec
std
jno
pop
jo
cmp
sbb
daa
test
ret
fstl
dec
insl
aam
clc
and
push
or
mov
daa
test
and
push
outsl
repnz
xchg
std
mov
pusha
push
jnp
in
sub
push
push
rcrb
push
pop
and
sbb
dec
xchg
mov
in
lds
in
outsb
fmul
jbe
mov
mov
cmp
mov
outsl
mov
push
xor
jne
jge
mov
xor
arpl
xchg
and
iret
jno
test
test
popa
lock
add
mov
or
lock
rcll
cmp
jb
punpckhbw
ja
ret
daa
data16
sub
mov
jne
pop
push
inc
les
rcll
stos
pop
dec
adc
dec
dec
in
rorl
xlat
and
aas
in
jecxz
mov
lret
stc
mov
xchg
push
mov
fisubs
push
ret
pop
push
fwait
mov
dec
enter
mov
push
mov
sub
clc
pusha
hlt
xchg
push
fsubl
sub
push
add
mov
aam
jge
out
inc
daa
les
cld
fwait
leave
popf
fwait
jge
inc
lods
mov
mov
repz
mov
push
pop
das
cltd
test
pushf
dec
je
cmpsb
sub
or
xor
jge
out
sub
ja
push
ds
pusha
pop
jae
and
in
and
mov
pop
adc
adc
mov
pop
xor
imul
mov
add
push
int3
mov
and
ret
repz
xchg
adc
and
adc
xchg
mov
inc
dec
xchg
lret
leave
mov
ss
icebp
or
mov
pop
xor
cmpsl
cwtl
sub
push
mov
xor
fistpl
out
mov
jns
and
bound
popa
mov
repz
inc
sbb
jmp
imul
ret
cltd
xchg
and
lock
popf
dec
jge
push
cmp
stc
movsb
les
mov
orb
mov
xchg
or
fidivrl
xor
cli
lret
sbb
andl
fwait
std
scas
call
jp
cmp
mov
lahf
sub
sbb
pop
add
mov
pushf
sbbl
sub
cwtl
fisubs
lret
ret
stos
mov
iret
mov
pop
and
fsubs
sbb
icebp
push
push
cmp
aam
sar
ljmp
call
imul
sarb
dec
xchg
push
nop
pop
push
jg
cli
sbb
les
inc
jmp
fstl
push
rcll
dec
inc
inc
into
xchg
push
and
leave
fcomip
fisttpl
push
cld
insl
loopne
ret
leave
push
lahf
and
mov
fidivrl
jb
and
shll
sub
rcrb
inc
xchg
sub
lahf
xor
in
scas
mov
sbb
sti
lea
es
xchg
xchg
jo
push
inc
mov
rorl
bound
mov
das
insl
cld
mov
je
or
addr16
xorb
ss
mov
and
ret
shr
and
pop
push
sub
stc
mov
xchg
cmpl
and
sbb
roll
push
popf
test
xor
inc
pushf
sarb
sbb
repz
out
jg
lea
jmp
jle
dec
pop
adc
push
mov
dec
push
jmp
repz
les
push
add
sub
fwait
and
call
popa
sub
mov
shll
in
nop
xchg
push
outsl
xchg
jge
aas
in
and
push
inc
dec
and
lcall
jg
enter
mov
xchg
sub
cld
sbb
add
cltd
lods
push
and
jbe
xor
bound
adcb
or
lret
fstp
flds
dec
sub
push
pop
jns
add
pop
xchg
icebp
out
push
imul
xchg
leave
adc
mov
iret
xor
xchg
sbb
stos
subl
xor
andl
push
cwtl
cltd
mov
pminub
repnz
arpl
and
icebp
adc
mov
pop
jmp
adc
pop
test
jno
and
rcrl
adc
mov
cmp
inc
and
sbb
and
aam
popa
daa
jno
cld
pop
mov
push
pop
adc
jnp
and
xchg
or
mov
dec
mov
ljmp
push
into
sbb
pop
push
dec
mov
inc
addl
inc
sbb
in
mov
pop
int3
push
add
out
cli
mov
adc
das
xchg
add
gs
xor
pop
movsb
adc
scas
lds
cli
daa
ret
or
mov
mov
pusha
adc
pushf
cli
pop
lock
or
mov
test
not
lcall
mov
push
mov
mov
push
andb
pop
icebp
mov
jecxz
mov
addr16
xlat
mov
cmc
cwtl
push
shl
xchg
fnsave
xlat
mov
cmpsb
mov
jnp
in
and
bound
and
pusha
daa
push
jge
push
jmp
repnz
inc
xor
fs
mov
arpl
or
mov
fsubs
jbe
ljmp
push
jne
aaa
xlat
push
in
xchg
icebp
and
dec
mov
or
lds
jns
mov
mov
add
ret
fistl
scas
insl
mov
sbb
add
pop
lret
sahf
decb
push
jl
mov
enter
sub
and
scas
fistpll
sbb
and
dec
aad
jl
mov
mov
nop
jb
mov
in
jmp
push
jno
hlt
adc
aas
jecxz
push
jne
mov
int3
notl
lods
adc
cli
shlb
cmp
cmpsl
out
xchg
repz
or
sarl
mov
fcomps
mov
pop
sub
mov
mov
cmp
add
sub
mov
shl
aas
rcl
pop
icebp
mov
inc
xorl
mov
and
in
call
xchg
lock
cmp
test
inc
push
inc
sub
cmp
cltd
mov
popf
out
pop
gs
das
add
pop
sbb
pop
mov
dec
cmp
mov
sbb
xor
sbb
mov
cltd
push
stos
jp
and
repz
xor
xor
and
xchg
sahf
loopne
iret
jbe
inc
out
cmp
sbb
icebp
sub
xor
fwait
cmpsl
mov
jmp
adc
xor
jo
pop
and
cmp
cmp
in
lret
cmp
inc
pop
xchg
mov
insw
ljmp
loopne
jnp
lods
pop
fistpll
push
mov
push
dec
push
add
pop
repz
xchg
inc
or
mov
ficoms
int3
scas
mov
outsl
into
mov
mov
jne
xor
fwait
add
dec
pushl
in
sbb
cli
movsb
dec
punpcklwd
ficompl
rcrl
sbb
or
push
cmp
xor
jmp
cmp
add
xor
pusha
mov
sub
arpl
fidivs
aam
andl
xchg
arpl
fucomi
rcl
dec
or
test
imul
dec
inc
xchg
dec
hlt
mov
lret
xchg
jnp
into
jno
jne
movlps
jbe
adc
fisubrl
lea
cld
flds
cmp
or
or
and
jge
inc
pushf
sti
int
mov
adc
movsb
mov
jl
mov
aaa
loope
xchg
int
sbb
jb
leave
dec
or
aas
movsl
xchg
push
int
call
test
jmp
xorb
lret
jg
arpl
or
stc
out
and
jmp
jbe
adc
xor
add
rol
sarb
jmp
cmp
arpl
xchg
lds
fmulp
push
pop
dec
dec
cmp
repz
jmp
ljmp
lock
mov
and
shlb
cmp
lea
mov
sub
xchg
imul
mov
add
push
sarb
insb
in
outsb
add
push
add
xchg
add
cmp
cmp
pop
sbb
das
and
aam
lretw
cwtl
icebp
or
outsb
and
in
cs
outsl
iret
or
pop
adc
mov
mov
mov
add
pop
mov
mov
lahf
cs
mov
frstor
ret
jb
jmp
jb
dec
jne
mov
sbb
pop
push
test
mov
xchg
and
or
adc
add
ja
jmp
add
cmpsb
pop
stos
sub
cmp
cmp
cld
dec
jmp
mov
and
jnp
mov
push
pop
lret
jne
mov
mov
mov
xchg
push
cmp
or
sbb
jns
dec
fnstsw
jns
mov
pop
xchg
adc
pusha
cmp
dec
adc
repz
test
dec
push
add
lcall
hlt
insl
push
int
adc
daa
add
mov
inc
mov
lcall
popa
aaa
cmpsb
cmpsb
xchg
ror
dec
mov
mov
fisttpll
jmp
loope
jb
push
jmp
sub
push
scas
xchg
dec
clc
cs
pop
xchg
or
push
cmp
push
push
xchg
jecxz
pop
xor
xchg
inc
xchg
adc
xor
cmp
jb
jne
push
in
adc
dec
out
leave
hlt
out
mov
sub
out
or
pop
xor
lods
rcll
add
and
pop
out
mov
xchg
xchg
cmp
push
stc
mov
lahf
mov
and
xchg
lods
pusha
enter
ja
push
add
repnz
test
pop
out
sub
call
dec
push
xor
in
out
ja
and
xchg
addr16
shrl
add
inc
cs
repz
scas
cltd
inc
adc
lcall
mov
dec
or
and
add
inc
das
test
and
xor
cmpsb
xchg
je
pop
ret
lods
mov
mov
repnz
aad
sub
inc
lcall
cmpsb
mov
sub
or
in
fstpt
add
loope
mov
loop
jb
cltd
les
adc
imul
push
aad
mov
mov
sbb
and
mov
add
mov
push
dec
hlt
addr16
add
scas
pushf
dec
push
xchg
lahf
int
adc
xchg
in
mov
jge
pop
out
aad
xchg
push
sbb
data16
xchg
inc
inc
aas
xchg
mov
call
and
mov
call
stc
and
pusha
dec
inc
adc
xor
and
call
ret
lock
jmp
push
sbb
dec
dec
test
fstpt
add
adc
mov
cmp
sub
addr16
adc
cli
dec
push
fisubs
lock
into
aaa
mov
xlat
xchg
pop
fldt
imul
cmp
fiadds
xchg
lahf
sub
inc
mov
xor
lcall
int3
xchg
push
sahf
push
inc
arpl
or
inc
xor
cmpsb
mov
insl
adc
jae
add
pop
jmp
es
push
sbb
leave
dec
aam
je
mov
cwtl
iret
out
loop
or
and
daa
jp
inc
insb
push
fildl
sub
jmp
pop
mov
ljmp
jecxz
popf
in
imul
push
xor
out
adc
add
ja
cmp
pop
call
inc
fcmovnu
shlb
push
fistpl
loope
push
mov
cmp
movsl
in
out
sar
mov
mov
mov
sti
fninit
jns
scas
out
lret
xchg
idiv
mov
daa
lds
fmull
push
push
adc
sbb
mov
or
popf
push
sbb
ds
fimuls
stos
stos
xchg
sbb
testb
addl
jg
or
fxch
fcomi
imul
out
fildll
test
fildl
xchg
xor
cld
push
sarb
clc
rcrb
push
or
bound
bound
jp
sti
push
std
or
xor
aaa
movsl
out
jnp
sub
jl
js
or
push
mov
out
fdivs
aas
dec
loop
negl
adc
push
test
fs
out
lods
sub
out
fstps
sub
les
enter
xchg
mov
shl
jge
or
dec
imul
sub
add
fnstsw
mov
jg
dec
sub
mov
push
fmuls
or
push
cmp
cmp
add
mov
shl
insb
sub
cs
dec
stc
cmp
push
jo
push
mov
jnp
mov
lcall
test
and
lock
sbb
push
cmp
negl
pop
js
jmp
test
and
cmp
incb
mov
movsb
push
imulb
jo
fistpl
dec
into
gs
sarl
out
into
sahf
push
lods
xlat
jo
jnp
dec
dec
xchg
push
enter
push
nop
mov
std
icebp
ja
cli
xor
bound
cmp
shl
lods
xchg
ja
ret
aad
jo
fidivrl
repnz
das
mov
gs
and
gs
out
ficoms
filds
sub
push
jg
cwtl
fimull
xor
jle
cmp
ret
fsubrs
cmp
xlat
pop
adc
aad
mov
xor
cmpsb
aad
add
lds
push
jg
cmp
ffreep
lock
test
movsl
imul
clc
jmp
ds
xor
aaa
lea
ds
sarb
fwait
mov
rcl
dec
mov
pusha
int
popf
mov
dec
lock
outsb
mov
data16
popa
adc
ffree
sbb
scas
fs
ljmp
pop
stc
outsb
lea
inc
and
cmp
out
pop
lcall
mov
xchg
cwtl
xor
xchg
cmp
ret
stos
jo
addr16
fsubl
pop
lret
mov
shrb
xlat
add
xchg
mov
imul
into
add
lods
mov
and
loope
mov
repz
cltd
mov
pop
loop
xchg
insl
outsl
not
js
nop
adc
cmp
mov
fs
sbb
sbbl
xlat
and
mov
pop
fstps
fisttpl
sbb
push
xor
xchg
mov
mov
outsl
in
aam
nop
repz
scas
mov
pop
mov
xor
inc
or
pusha
cli
cmc
xchg
inc
and
mov
dec
out
mov
subps
mov
inc
test
mov
mov
gs
inc
outsb
popa
cmpsb
sub
cwtl
iret
cld
jg
push
fs
pop
jp
lfs
adc
fwait
cmp
push
int
fmull
loop
cmp
xchg
mov
mov
push
xchg
mov
hlt
inc
lods
push
and
jle
mov
adc
stos
frstor
iret
dec
fmull
pusha
ss
sbb
inc
adc
movsl
xchg
and
sbb
sbb
out
mov
dec
jnp
mov
fidivrs
arpl
outsl
jl
push
xchg
fbstp
push
je
cmc
je
mov
pop
pusha
jns
and
fisttpl
adc
cmpsl
cs
mov
insb
inc
dec
lea
cs
rorl
mov
rcrb
clc
jno
int3
jmp
sub
enter
add
mov
push
push
ret
inc
fiaddl
ja
adc
enter
or
jg
leave
mov
cwtl
xchg
add
daa
rolb
add
cltd
and
add
test
xchg
mov
push
mov
outsl
int
xchg
push
mov
hlt
xchg
outsl
cmp
or
popf
xor
cmp
inc
mov
xor
jl
xchg
pop
mov
xlat
sub
push
cmp
xchg
push
push
dec
or
xor
push
push
push
push
ss
loope
pop
pop
psllw
pop
mov
and
dec
adc
mov
mov
lds
fstp
xor
in
xchg
push
mull
into
inc
cmp
test
pop
add
mov
mov
stc
pushf
repz
leave
fsub
frstor
jno
pop
lahf
loop
push
incb
mov
fisttpll
mov
rorb
lea
ficomps
push
sub
subl
fsts
xchg
add
xorb
out
push
movsb
test
pop
cmp
pop
test
repnz
int3
stos
sahf
xor
outsb
xor
pop
xlat
and
ja
xchg
shlb
call
fidivl
pop
cmpsl
inc
lds
into
nop
lods
sbb
ror
dec
push
xchg
or
ret
lret
mov
sub
stos
pop
mov
xor
and
inc
and
lahf
and
cmp
pop
mov
push
pop
dec
lret
loop
lcall
or
cmp
movsl
lea
stos
inc
iret
inc
lods
imul
sub
mov
or
add
pop
xor
sbb
rcl
or
das
cmp
push
arpl
jmp
or
cmp
mov
and
rorb
aaa
pop
push
negl
aam
pushf
lds
mov
aaa
xchg
xchg
push
xchg
arpl
sbb
fistpll
enter
mov
lds
dec
cmpl
sub
mov
xchg
nop
and
call
dec
lea
outsb
cmpb
cs
lret
push
and
sbb
push
cwtl
loopne
sti
cmpsb
adc
lock
xor
xchg
inc
dec
xchg
or
faddl
scas
mov
std
insl
xchg
pop
es
pop
xor
adc
add
aas
dec
out
cli
and
js
push
divl
mov
mov
ja
nop
aam
mov
out
pop
les
scas
scas
les
jmp
mov
aaa
mov
jmp
andl
jl
mov
in
push
cmc
leave
pop
sbb
imul
cmp
mov
pop
sbb
pop
insb
xchg
mov
cltd
in
cld
test
insb
xchg
cmc
rcr
in
push
movsb
pavgb
push
inc
or
outsl
push
push
ret
jae
adc
lret
push
cli
sub
add
mov
sbb
and
stc
out
adc
fcomp
bound
pop
xchg
in
incb
test
data16
lcall
rcrl
mov
leave
pusha
loope
lret
int
add
cmc
in
mov
sahf
cmp
mov
iret
and
mov
push
or
loopne
adc
adc
mov
cmp
in
mov
jl
or
pop
mov
lcall
and
fdivp
pushf
lea
pop
xchg
inc
sub
jmp
mov
mov
test
push
loop
or
inc
repz
lods
ja
push
cmp
mov
movsl
in
inc
cmp
dec
stos
push
test
ret
or
lods
push
jmp
push
rcrb
dec
sbb
cmp
jns
pusha
sub
dec
cwtl
sbb
stos
mov
xchg
xchg
xchg
add
cmovnp
and
mov
add
daa
test
stc
or
and
cs
mov
rorb
xchg
repz
scas
and
into
aad
mov
mov
push
xchg
sub
mov
adc
cmp
out
adc
xor
push
sub
mov
pop
outsb
and
idiv
sbb
pop
test
push
or
sbb
xor
imul
mov
xchg
les
push
cmc
and
out
mov
stc
pushf
enter
nop
or
fdivs
ss
addr16
xchg
and
pop
gs
mov
add
cld
xchg
adc
cmp
mov
outsl
cltd
mov
rcrb
popf
jne
adc
stos
pop
lods
mov
test
cmp
fmull
pushf
jns
adc
add
cld
cwtl
loope
cmp
pop
push
cmp
adc
add
pop
cmpsl
test
cld
jbe
gs
push
dec
in
rorb
flds
stc
int
mov
sbb
loopne
mov
jbe
cmp
jno
int
xchg
pop
loopne
jp
call
xor
pop
mov
cwtl
pop
sti
push
xor
push
repnz
xchg
js
imul
inc
repnz
lret
mov
popa
cmp
jg
mov
movsb
movsb
push
hlt
enter
sahf
mov
stos
cmp
aad
repnz
insb
inc
data16
in
push
sbb
and
mov
inc
pop
push
cmp
test
sub
or
and
xchg
cmp
cs
mov
ss
sti
cmp
mov
lcall
adc
xchg
nop
and
jecxz
es
xor
xor
cmpsl
or
outsl
shl
lret
sub
int3
insb
addl
jmp
inc
fstpt
or
icebp
stos
into
in
sub
int3
or
jne
or
inc
cmpsb
mov
arpl
shr
push
nop
and
and
mov
push
jae
bound
sbb
rcrl
push
fsub
pop
call
loope
jb
and
jne
push
rorb
mov
repnz
cmp
add
xor
sbb
outsl
fstpt
hlt
aas
jmp
pop
sbb
outsb
pop
out
ret
pop
shll
rcrl
or
or
xchg
inc
pop
adc
stc
dec
and
push
lods
hlt
mov
sub
sub
scas
outsb
jl
iret
pop
sahf
cltd
aas
filds
xlat
mov
test
mov
xor
ret
in
jg
fadd
int3
xlat
test
xchg
sub
jns
jle
insb
xchg
jnp
addr16
xor
not
ljmp
push
movsl
mov
enter
or
mov
in
imul
mov
cmpsl
adc
add
cmovo
and
icebp
movsb
rolb
sahf
and
shlb
mov
pop
mov
sahf
xlat
ret
test
and
gs
and
je
inc
adc
repz
cs
jg
enter
xchg
dec
insb
push
inc
jmp
mov
dec
test
out
sbb
or
pop
sbb
push
pop
mov
das
mov
jg
aas
adc
andl
into
mov
dec
push
arpl
cmc
decw
stos
rcll
fdivl
pop
aaa
pop
push
arpl
sub
sbb
mov
cmp
pop
sub
cmp
ljmp
dec
jg
cmp
pushf
jo
inc
lret
fcmovbe
pop
mov
pop
inc
pusha
xchg
dec
data16
inc
lods
test
mov
insb
jmp
mov
test
les
fcompl
mov
ror
xchg
push
stos
imul
int3
jg
cmp
pop
fwait
jnp
mov
sbb
pop
xchg
or
or
test
lret
pop
push
lds
push
lods
and
out
iret
lock
ja
decb
mov
hlt
sahf
adc
push
dec
clc
clc
mov
add
or
mov
leave
rol
mov
sbb
cmp
push
mov
jge
xchg
and
push
das
insl
gs
jmp
mov
cmpl
push
push
test
cmovnp
pop
adc
cmc
aad
push
std
imul
sub
outsl
add
scas
cmp
xlat
jnp
or
fisubrl
ds
mov
mov
xchg
es
inc
xchg
idivl
data16
jle
shll
aas
jne
decb
js
lret
mov
ret
mov
rcrl
imul
test
dec
and
xchg
jecxz
movsb
pop
fwait
xchg
stos
pop
imulb
ds
and
inc
je
int
data16
imul
pop
xchg
push
test
dec
ljmp
aas
xchg
pushf
sub
gs
jnp
in
out
or
push
in
movsl
daa
lods
sub
nop
add
pusha
push
mov
imul
mov
dec
sub
pop
mov
mov
xchg
sub
or
and
and
push
aaa
sbb
mov
out
rcrb
sub
cli
sub
iret
scas
sub
ficomps
xor
sub
sbb
icebp
push
xlat
push
pop
bound
mov
xchg
jne
adc
adc
hlt
adc
xchg
push
or
cmp
pop
mov
mov
inc
pusha
dec
xchg
js
lret
add
jnp
cli
ja
loope
pop
hlt
add
pushf
dec
add
cli
sub
push
inc
inc
ret
insb
ret
insl
jns
jnp
gs
mov
in
out
jne
cli
xchg
into
movsl
mov
mov
cwtl
or
loope
shll
scas
imul
sub
mov
movsl
xor
jo
xchg
int3
sarb
clc
movsl
decb
jg
push
inc
outsl
loope
aam
inc
int3
loopne
mov
cmp
and
repz
std
adc
dec
daa
js
call
lods
jno
inc
repnz
mov
push
sub
xor
push
popa
data16
sbb
mov
or
dec
push
outsl
mov
add
bound
sahf
jecxz
push
add
cmp
cmpsb
jns
xor
push
sub
rcrl
push
pop
cli
out
mov
je
xchg
mov
lods
mov
push
jae
add
jg
jae
je
les
or
in
gs
das
add
das
hlt
dec
in
adc
and
cmp
repnz
call
and
sbb
rcrb
xchg
ret
dec
mov
xor
icebp
in
xchg
mov
adc
sub
add
jp
jbe
into
ss
insl
shrb
pop
ja
shl
xlat
mov
enter
pushf
sbb
test
jle
mov
adc
push
lcall
ljmp
stos
dec
mov
cltd
scas
sub
add
loope
jbe
xchg
fwait
sbb
lcall
inc
enter
pop
cmc
sahf
aam
cmc
arpl
clc
mov
out
mov
fstl
dec
hlt
xchg
cmc
xor
hlt
adc
ucomisd
xchg
test
mov
fcoms
insl
pop
lods
repnz
loopne
cltd
bound
je
icebp
data16
xor
enter
into
js
adc
xor
sub
es
ja
iret
mov
stos
sub
mov
or
int
shll
repz
lock
and
cli
inc
pop
movsl
ficomps
jl
andl
int
js
pusha
fcmovnb
dec
in
or
mov
cmp
sbb
jmp
jae
sahf
push
fdivl
or
sbb
insb
push
or
popf
push
inc
push
and
jg
pop
pinsrw
scas
push
cmp
fcoml
dec
xor
jle
daa
fdivl
xor
stos
outsb
jge
pop
or
aam
and
orb
iret
pop
pop
lods
cmp
cmc
dec
adc
jmp
mov
lret
mov
dec
mov
lahf
inc
pop
push
xor
hlt
mov
outsl
call
pop
insb
sahf
add
cmp
pusha
call
dec
push
xchg
sbb
nop
and
stc
hlt
jecxz
push
lock
mov
fadds
xchg
outsb
stos
mov
jmp
and
jnp
mov
cmp
or
jecxz
lcall
cmp
sbb
data16
mov
sub
sbb
lods
dec
xor
or
or
dec
aaa
scas
mov
sub
sbb
hlt
and
pop
fimull
scas
mov
add
jp
lods
or
div
adc
insl
cmp
je
rclb
in
fbstp
add
add
mov
fimull
lods
pop
daa
rorl
mov
mov
int
out
push
fwait
dec
inc
scas
push
pusha
aad
sbb
cltd
insl
sub
iret
insl
cmpsb
xor
jbe
sti
rcrl
lock
and
std
aam
scas
es
jne
sub
cmp
mov
sub
pop
ds
inc
pop
push
imul
mov
cmp
imul
jmp
mov
out
jae
icebp
adc
sti
out
mov
loop
adc
inc
out
pop
push
xor
lret
push
mov
btc
and
cmp
imul
lods
bound
xor
cltd
ss
stos
test
mov
jl
iret
mov
or
stos
inc
inc
add
push
sbb
push
ss
cli
cld
push
xchg
dec
cmp
test
sbb
cmpsl
or
xchg
or
cmp
push
add
les
cmp
hlt
shr
aad
scas
orb
mov
mov
sbb
inc
cwtl
pop
repz
in
push
iret
jge
nop
dec
ljmp
movsl
jns
pushf
aad
loop
pop
fs
loopne
jmp
icebp
stc
mov
ss
repz
rorb
sub
clc
cwtl
daa
xchg
lods
pusha
lret
push
das
dec
jo
lcall
stos
out
pop
xor
cwtl
sbb
mov
dec
fwait
rol
mov
aad
arpl
inc
pop
sbb
or
mov
xchg
lods
out
es
xor
shll
jnp
inc
xor
bound
cld
xor
dec
jecxz
aas
lret
mov
int
jp
sbb
and
dec
xchg
dec
sarb
xchg
hlt
test
push
std
pop
loopne
xchg
adc
or
fldl
cmp
push
cmp
mov
mov
aas
xchg
pop
rcrl
or
mov
pop
out
dec
pop
addl
push
aas
add
icebp
sub
js
xchg
pop
imul
pop
inc
in
adc
rorl
gs
pop
xchg
jp
out
into
pop
add
in
and
dec
dec
pop
inc
sti
pop
inc
or
pushf
mov
push
jl
and
nop
loopne
notb
inc
push
and
jo
cmp
sbb
mov
lds
andl
jmp
xchg
out
fistl
xchg
mov
mov
or
dec
or
push
sub
popa
pop
aaa
xor
decb
jle
mov
iret
fwait
jmp
fmulp
jbe
xchg
xlat
aas
lods
mov
lcall
jb
repz
rcr
clc
je
in
cs
inc
gs
scas
rolb
or
fsubrs
sbb
mov
ds
push
inc
scas
sub
stos
mov
inc
jae
loop
jne
push
sub
cmp
dec
outsl
or
pusha
cmp
sbb
xor
test
cmc
out
cmpl
out
xor
jg
in
pop
mov
jecxz
inc
popf
cmp
dec
sbb
in
xor
testb
xorl
je
inc
push
ret
out
pop
or
movsl
push
and
jg
jnp
fcmovnb
mov
sbb
mov
sub
test
pop
int
lahf
xchg
mov
out
xorb
scas
xor
jge
xor
repz
cmp
mov
sbb
sbb
and
gs
loopne
ret
ror
push
jecxz
cltd
loope
mov
mov
loopne
sahf
push
sub
dec
push
jg
gs
cwtl
lods
je
or
rol
mov
in
test
xchg
push
aas
inc
lahf
dec
push
dec
int
pusha
mov
sbb
out
ljmp
pop
mov
adc
hlt
sub
mov
lret
int3
idivb
aad
adc
xor
rcr
addb
add
cmp
repz
sub
repz
push
shll
aam
ds
jo
push
or
mov
std
jbe
mov
or
daa
xchg
xor
push
cmp
int3
mov
gs
or
int3
pop
roll
vpunpckldq
xchg
aaa
leave
inc
ret
dec
mov
xchg
dec
sbb
pop
aas
or
jl
and
mov
repz
jmp
iret
sbb
lock
repz
and
push
lock
dec
or
sub
mov
sti
pop
mov
sub
iret
cmp
cmc
in
clc
sbbl
cmp
inc
dec
add
rcrl
lds
mov
sar
in
sub
mov
sbb
aad
movsb
and
push
push
xlat
adcl
xor
imul
fnstcw
cwtl
fst
fs
sub
stos
cmc
mov
popa
xchg
sbb
lret
mov
sbb
in
rcrb
lcall
mov
xchg
pop
fsts
fisubs
shl
hlt
loop
mov
fidivl
mov
insb
xor
sub
das
lret
outsl
xchg
rol
roll
mov
sub
push
xchg
push
lahf
in
mov
shrb
cmp
jmp
setg
add
lods
adc
loopne
out
je
outsb
aas
loope
jg
add
push
jo
imul
mov
loope
out
adc
je
pushf
pushf
and
sbb
add
cld
aam
ret
addr16
out
sub
or
das
popf
cwtl
repz
and
mov
inc
movsb
lock
ja
movsl
lock
arpl
fcompl
mov
and
bound
push
in
mov
push
add
iret
xchg
pop
in
mov
jbe
lock
sbb
add
rclb
mov
cmp
adc
push
popf
mov
xchg
xchg
fstl
lret
xchg
out
loop
movsl
xor
ja
pop
or
adc
enter
ljmp
stos
mov
jg
enter
iret
cmp
pop
dec
sarb
jg
add
pop
outsl
mov
loopne
lds
ss
dec
adc
hlt
pop
or
pop
andb
and
jl
andl
pop
lret
add
inc
test
lea
lods
shll
adc
xchg
cld
mov
ja
inc
lds
ljmp
aaa
pop
sub
ds
mov
sbb
dec
dec
aaa
or
cltd
push
jb
jle
es
jne
mov
xor
and
rcrl
test
ficompl
insl
test
rclb
and
arpl
mov
into
mov
outsb
clc
cs
push
xor
dec
sbb
ljmp
dec
cltd
or
mov
and
aas
inc
and
out
jb
out
cld
int3
mov
loope
jno
mov
or
push
push
jo
jb
mov
xlat
orl
mov
jg
mov
adcl
inc
scas
icebp
pusha
xchg
mov
push
cwtl
fcompl
stc
xchg
inc
mov
sub
call
pcmpeqb
bswap
inc
repnz
lock
mov
lahf
cltd
test
jb
cli
stc
xlat
dec
ljmp
js
inc
mov
xor
inc
cmp
lods
lret
push
sbb
add
rorb
fistpll
sub
jp
out
lea
mov
jb
lcall
fmul
insl
cld
pop
test
mov
js
push
addr16
add
pop
or
flds
xchg
data16
lahf
inc
inc
ror
daa
dec
ret
sbb
shll
xchg
nop
enter
mov
cld
add
add
inc
loop
cli
mov
jecxz
cs
or
jo
inc
mov
fnsave
push
movsl
addr16
adc
movsb
lcall
jmp
xchg
outsb
es
les
sub
mov
test
negl
insl
out
call
daa
add
sbb
stc
aas
mov
cmp
cmp
movsl
add
shrl
pushf
frstor
adc
shl
fcmovnb
mov
aas
ds
inc
js
mov
jp
cwtl
dec
add
add
fwait
movsb
mov
icebp
fsubl
movsl
shll
out
pop
xchg
notb
dec
sti
nop
es
lea
mov
icebp
sbb
push
repz
jle
js
cmpl
lock
push
push
or
adc
sub
jmp
mov
test
sub
mov
popf
repnz
divb
leave
outsl
mov
cli
shll
sarb
dec
sbb
cmp
andb
dec
sbbl
lahf
mov
push
test
loopne
imul
sarb
sbb
test
xchg
add
insb
aas
movsl
push
push
clc
into
jo
ljmp
fdivl
clc
shl
cmp
push
adc
jle
sti
push
repz
int3
hlt
adc
mov
loopne
sbb
inc
cmpsl
adc
xchg
test
insb
xchg
xor
add
and
push
lods
pop
daa
int3
xchg
into
xor
push
and
jl
push
mov
lds
and
sbb
mov
out
cmp
pop
test
ljmp
ret
mov
lods
pusha
cmp
push
xchg
add
or
insb
sbb
aad
sbb
imull
cli
mov
jnp
add
ret
jb
out
std
outsb
test
in
mov
ljmp
dec
mov
das
push
inc
and
aas
les
xchg
jnp
movsb
repz
les
packsswb
inc
ljmp
imul
sub
scas
and
clc
in
rorb
inc
insb
sbb
lds
icebp
jg
push
ds
mov
push
es
outsl
mov
cmpsl
mov
xchg
mov
loope
jae
outsb
loope
out
mov
push
andb
sbb
jne
adc
mov
mov
lcall
sarb
cmp
mov
ss
fxch
cmp
out
sub
jno
pop
xchg
dec
movsb
ljmp
xchg
add
push
xor
mov
sbb
cli
dec
scas
shl
mov
pop
xor
sub
jge
mov
pop
push
xchg
lock
or
xor
negl
add
mov
push
xchg
push
mov
into
out
out
into
hlt
fisttpl
add
sub
jecxz
push
outsb
xchg
repz
sub
stos
sub
or
addr16
subb
stos
sub
cld
and
inc
mov
sub
mull
sbb
stc
or
pop
add
scas
mov
stc
les
ror
stc
es
adc
shlb
pop
pusha
jns
inc
dec
sub
mov
test
out
inc
push
fs
jns
cmpsl
add
aad
and
push
pushf
fadds
lahf
sbb
ds
enter
lcall
nop
add
into
push
daa
enter
scas
push
push
xor
jp
push
scas
mulb
outsb
gs
xchg
mov
and
dec
lock
testb
imul
addr16
xchg
je
loope
mov
cmp
je,pt
test
frstor
in
cmpsb
lods
mov
adc
sub
lcall
mov
stc
imul
cmp
push
insl
ja
adc
int
adc
movsl
js
testb
shrl
clc
inc
xor
lret
jno
clc
jne
nop
xor
loopne
and
jmp
stos
outsl
ret
mov
leave
mov
mov
lea
gs
das
jno
xor
sbb
nop
jmp
addr16
mov
xor
pushf
mov
loope
les
cld
add
data16
xchg
xor
out
mov
pop
and
incl
mov
jl
lods
sbb
sti
jno
outsl
out
cmp
mov
dec
xchg
movsl
lcall
push
es
inc
xor
mov
aad
iret
inc
outsb
mov
cmpsl
push
jb
sbb
pop
add
cli
sub
gs
orl
movsl
stos
fwait
sub
jecxz
xchg
out
jecxz
addr16
jne
leave
xor
into
scas
das
dec
testl
lods
dec
push
and
fildl
dec
pop
out
xchg
imull
sub
fdivr
lcall
fimull
insb
mov
xor
in
popf
in
scas
ret
pushf
jns
dec
loop
sbb
adc
adc
inc
push
arpl
sahf
cmpsb
dec
ds
test
push
sbb
push
es
jae
mov
les
push
cmp
sub
push
xchg
fdivs
or
enter
pop
push
sub
imul
loop
lahf
loopne
clc
and
inc
daa
adc
xor
mov
lret
xor
mov
push
mov
clc
mov
adc
loop
sbb
movsb
pop
lret
in
xchg
jae
js
xchg
cmp
jle
lahf
popf
inc
pop
sbb
arpl
sbb
int3
das
xlat
sbb
mov
jl
shlb
cmp
aas
add
call
bound
into
and
fisttpl
push
dec
ja
insl
mov
fcomi
jp
nop
rcl
xor
xchg
scas
sbb
in
sbb
xchg
pop
cld
aam
mov
iret
pop
mov
aam
inc
push
push
scas
mov
jl
xchg
cltd
mov
dec
aad
inc
aas
int3
or
in
and
sqrtps
outsl
jo
data16
lret
jp
movsb
fwait
lea
clc
aas
insb
or
cmp
mov
das
add
sbb
add
aam
cmc
fldt
or
movsl
mov
and
insl
pop
xor
sbbl
jno
lods
das
mov
test
test
in
dec
sbb
push
gs
sub
sti
xlat
iret
xor
adc
arpl
or
sbb
xchg
adc
sub
ss
adc
inc
add
sbb
adc
cmc
popf
jae
movsl
pop
and
orl
popf
inc
fadds
adc
je
cs
mov
mov
xor
push
push
in
das
mov
jo
imul
push
popa
mov
cwtl
lret
test
add
push
daa
inc
mov
nop
sbb
sarl
imul
dec
gs
mov
clc
push
mov
std
push
mull
data16
mov
push
subb
outsb
data16
lret
loop
push
in
stos
stc
mull
iret
xchg
aaa
hlt
cmp
mov
stc
cmpsb
mov
je
jbe
cmpsl
sub
or
pop
lret
out
jecxz
insb
outsb
ja
jp
icebp
test
int
inc
out
and
call
ds
leave
adc
lahf
out
pushf
arpl
in
shlb
xchg
iret
mov
mov
popf
inc
int3
or
sub
repnz
add
test
xlat
xor
mov
cmp
lea
stc
lret
cmp
jp
ret
rorl
sarl
rcll
or
jno,pn
jg
ja
loope
arpl
mov
sub
gs
stos
mov
pop
pop
push
outsl
sbb
jbe
repz
adc
xchg
ljmp
mov
mov
addb
or
push
dec
xchg
inc
sbb
test
inc
push
sub
cmp
pop
lret
pop
pop
incb
inc
aam
cwtl
jl
mov
lds
les
jmp
jae
mov
sub
inc
subl
data16
push
fiaddl
scas
negb
incb
dec
mov
jge
fcompl
push
push
in
sbb
js
lahf
dec
mov
icebp
xor
ss
pop
inc
inc
insb
jae
jae,pn
adc
rcll
rcll
inc
dec
mov
adc
sti
xor
in
sub
pop
xor
ja
lcall
pushaw
pop
adc
mov
jo
cwtl
andb
sub
sahf
pop
lahf
pop
or
loopne
mov
and
int3
and
inc
sahf
pop
push
push
cmc
push
mov
int3
or
testb
push
clc
and
dec
xchg
ficomps
lcall
mov
std
lahf
insb
mov
ja
adc
pop
pushf
fists
lahf
inc
into
lds
adcl
jo
movsl
xchg
cld
ret
imul
push
pop
push
aad
dec
inc
cld
fwait
mul
iret
sbb
jae
jl
cltd
rolb
or
push
inc
jp
cli
push
xchg
cmp
int3
cltd
orl
jne
add
xchg
cmpsl
add
fmuls
push
sbb
dec
sub
jo
ljmp
mov
adc
cmp
push
fstpl
fmull
mov
sub
push
push
imul
ret
sub
pop
cwtl
adc
cmp
cmpsb
inc
cld
cltd
subb
jo
or
pop
iret
notb
and
enter
pop
inc
lahf
push
gs
fdivrs
sub
dec
dec
ficompl
push
jp
hlt
cwtl
ret
scas
xchg
loopne
jmp
jo
pop
jg
lahf
xor
pop
decl
out
push
mov
test
jb
xchg
scas
or
ja
outsl
sbb
xchg
mov
lret
pop
xchg
out
pop
nop
popa
cs
or
andl
bound
pusha
dec
sti
ret
mov
stc
mov
sti
lret
add
stos
leave
sub
lret
lds
push
shl
mov
xor
lods
xor
mov
popf
nop
and
jl
inc
notb
push
mov
mov
lods
cmp
cmp
jp
lods
bound
cmp
lea
jp
ss
sbb
xor
cmp
fdiv
stc
jne
mov
mov
xchg
jb
vmptrst
or
outsb
jmp
or
cmpsl
dec
jmp
rorl
enter
les
lret
inc
push
add
insb
push
mov
cmpsb
mov
adc
test
xor
mov
cmpsl
cli
push
lahf
xchg
in
loop
inc
xchg
sbb
cmp
out
or
pop
sub
aas
in
xlat
sbb
btl
sub
and
lods
mov
lret
cmp
sub
mov
mov
outsl
dec
das
stc
mov
ret
out
aad
sbb
mov
fldenv
xchg
lods
add
lcall
jecxz
xor
mov
cli
xor
lock
cwtl
inc
movsl
pop
xchg
mov
fildll
aaa
add
xor
xchg
movsl
mov
fwait
sub
and
fdivr
jno
and
add
rcrb
cmp
xchg
jae
push
scas
dec
cmp
ficomps
dec
cwtl
dec
mov
in
dec
out
addb
cli
mov
pop
or
dec
xor
jb
dec
movsl
pop
mov
pusha
mov
das
add
adc
add
mov
ss
outsb
loop
inc
push
or
dec
dec
das
inc
add
sub
lods
sbbl
insl
jae
mov
imul
out
popf
mov
mov
jmp
mov
xchg
stos
xlat
cmp
fs
outsb
rcrb
mov
inc
xlat
mov
jge
push
jns
test
popf
cmp
xchg
sbb
clc
sarb
xor
orl
mov
fucomi
data16
lcall
mov
mov
test
movsl
jp
int3
repnz
xchg
ret
add
out
cmp
andb
in
sub
shrb
test
ret
in
out
nop
rorl
sbb
mov
pushf
fistpll
sbb
mov
push
mov
mov
cli
xor
push
mov
push
and
hlt
imul
cmc
repnz
cmc
jo
cld
pop
sbb
jecxz
iret
push
jbe
hlt
pop
push
xchg
xchg
movsb
shrb
mov
cmp
mov
pop
aad
js
ljmp
inc
in
jo
scas
and
mov
push
test
adc
mov
xchg
lahf
nop
stos
cmp
push
test
loop
or
leave
pop
scas
push
call
jnp
arpl
imul
cli
cmpl
adc
cmc
mov
inc
scas
lds
dec
mov
mov
xchg
fisubl
popf
push
jo
jg
stos
lcall
mov
orl
and
push
inc
fxch
jno
push
xor
jb
jge
out
mov
std
ficompl
lret
rclb
jecxz
js
jle
xchg
arpl
jmp
adc
inc
and
adc
sub
push
das
inc
xchg
dec
push
xor
lcall
ja
das
cmp
jge
jbe
mov
cli
and
fucomp
je
mov
inc
dec
cld
add
loope
xor
in
daa
mov
xor
jecxz
jb
lahf
je
aas
pop
lea
xor
ja
pushf
push
or
xchg
je
pop
int
insb
xchg
out
jge
addr16
leave
ror
data16
leave
pushf
aas
int3
out
dec
outsl
xchg
andb
pop
outsb
or
call
xchg
scas
fcmove
dec
mov
lea
add
aaa
push
push
scas
pop
xlat
out
test
dec
rorb
andl
fs
sbb
aaa
jmp
push
mov
cmp
lds
push
lret
daa
dec
enter
shl
sub
lcall
out
push
repz
pushf
mov
addr16
in
jnp
mov
jmp
adc
out
and
pushf
mov
dec
and
pop
pop
lea
sbb
fdivr
inc
or
outsb
scas
cmpb
flds
mov
rorb
jg
or
jmp
std
mov
mov
icebp
adc
xor
rolb
mov
xor
pop
fldenv
fnstenv
dec
pop
and
mov
loope
andb
sbb
mov
dec
xchg
inc
mov
sbb
push
inc
ja
or
movsl
xor
jne
pop
outsb
insl
mov
xor
enter
lcall
ret
xchg
mov
fsubl
jmp
cltd
mov
xchg
mov
ja
xor
stos
addr16
call
pop
es
and
cmp
dec
dec
mov
mov
inc
adc
push
icebp
dec
lock
cli
add
addb
adc
inc
or
dec
adc
sbb
dec
daa
cltd
mov
mov
mov
pop
aad
out
shrl
js
dec
cmp
jle
jmp
test
jns
sub
xor
push
mov
ljmp
dec
je
shll
pop
dec
addr16
imul
jg
dec
or
sub
dec
icebp
outsb
aam
dec
pop
lcall
cltd
imulb
iret
rolb
dec
or
sub
idiv
lcall
daa
int3
shrb
mov
pop
les
arpl
and
je
pusha
xlat
add
xor
xlat
inc
adc
fs
shrb
aas
mov
aaa
iret
jae
pusha
movsb
push
fidivrl
pop
repz
rorl
jno
cltd
sbb
pop
test
jmp
and
or
mov
movsl
pop
push
pop
or
out
pop
dec
out
jbe
in
xchg
cmp
adc
pop
sbb
or
cs
lret
inc
lods
adc
repnz
add
and
pop
outsb
das
into
daa
inc
dec
inc
mov
fs
adcb
fcmovnb
and
xlat
pop
adcb
or
shrb
mov
pusha
lea
stc
pop
aaa
lock
addr16
int3
in
bound
fimuls
leave
jo
xor
repnz
cltd
dec
shr
hlt
mov
and
das
inc
fiadds
out
push
xchg
sti
out
aam
stc
pop
stos
push
jp
jne
jae
xchg
mov
pop
into
popf
aam
aas
xor
sub
out
dec
fcomps
mov
stos
mov
int
add
mov
mov
mov
cmpsl
xlat
out
faddl
repnz
push
dec
jno
test
test
ret
ret
lret
aad
lahf
jo
push
int
and
pop
shll
das
and
mov
mov
and
out
sahf
xchg
and
jge
test
jp
mov
rol
mov
add
data16
mov
test
sub
lret
aam
pop
hlt
aam
jbe
cli
loope
stos
fs
mov
xchg
cmp
lods
mov
xchg
and
mov
jo
les
adc
mov
push
add
mov
call
leave
add
int3
pop
jae
mov
mov
push
mov
jge
push
dec
xlat
pop
fdivrp
in
add
pop
and
and
xchg
adc
cmpb
lods
xchg
dec
or
pusha
cld
sbb
push
out
and
xchg
cli
mov
mov
dec
pop
cltd
xorb
mov
push
subl
ret
jns
hlt
pop
ret
out
inc
mov
sub
shrb
out
sbb
dec
xor
and
mov
cmp
lods
popa
scas
leave
mov
xchg
sbb
leave
out
pop
mov
dec
stos
jne
cmp
mov
out
xor
inc
imul
xorl
jno
jno
lds
inc
sbb
push
cmp
je
mov
lcall
orl
or
ss
imul
jae
xor
cmpsl
ja
mov
and
jae
scas
cmpsl
ret
xchg
mov
xchg
cmpl
pop
xchg
fcmovnbe
movb
xor
ss
or
sti
adc
jecxz
enter
insb
push
jae
jnp
sbb
push
and
jno
fmul
ds
cltd
sub
scas
popa
xlat
faddl
adc
pusha
inc
cmpsl
int
fidivrl
push
subb
addr16
push
mov
xchg
insb
push
add
xor
mov
insl
and
fwait
pop
sbb
mov
push
pop
xchg
das
jne
or
push
pop
mov
xor
roll
dec
mov
lock
mov
cmc
in
loop
mov
mov
mov
inc
mov
lea
jae
dec
xor
sbb
inc
data16
jb
lret
fildll
cmpsl
push
add
mov
add
xchg
loop
xchg
pop
stc
dec
inc
sub
sbbb
je
dec
cmp
cmp
and
mov
int3
sub
aad
pusha
mull
insb
outsl
into
fisubrl
inc
add
sbb
dec
fimuls
call
adcb
mov
pop
scas
loop
dec
cli
sbb
dec
mov
mov
shll
ret
xor
fadd
fs
inc
mov
imul
adc
insb
out
pop
cmpsl
add
mov
xor
fistpl
rorb
cmc
xor
or
ret
sub
mov
push
mov
adc
aaa
sub
dec
loopne
adc
push
flds
pop
or
stc
pop
imul
xchg
das
push
pop
cmp
pop
push
adc
in
shll
and
and
aaa
sbb
dec
adc
xor
xchg
mulb
jnp
je
mov
pop
sub
adc
add
popa
jnp
jl
popl
pop
into
imul
jle
movsl
sbb
dec
scas
or
fwait
add
out
xchg
repz
das
fists
loope
adc
pop
mov
das
andl
repnz
lods
fstpl
dec
add
dec
fwait
push
sbb
xchg
mov
adc
ret
lea
dec
xor
inc
ret
xchg
faddl
lock
sbb
cmp
adc
or
push
xchg
cld
pusha
lret
add
outsb
push
mov
cmp
mov
stos
dec
lahf
inc
sub
jno
jg
or
push
or
stos
push
insb
mov
repnz
lods
adc
push
stos
shrl
sub
jbe
xchg
jne
lahf
add
pusha
iret
mov
enter
jmp
lods
mov
push
jne
mov
cmp
insl
sahf
insb
cwtl
xchg
je
xlat
movsb
sarl
aas
or
test
push
sbb
adc
stc
test
mov
mov
dec
sbb
add
cmpsl
adc
mov
aaa
jbe
push
cld
and
mov
loop
dec
or
fcoml
jmp
ljmp
dec
and
dec
dec
orb
mulb
std
pop
pop
xchg
data16
scas
in
stc
test
add
imull
inc
fs
xchg
xor
movsb
push
adc
ja
aas
push
cmc
push
mov
stos
stos
mov
sbb
xchg
xchg
mov
and
push
test
adc
insl
cmp
jge
call
or
jg
xor
jno
into
push
dec
adc
or
adc
and
loopne
cltd
stos
push
inc
cmp
adc
inc
jb
ja
add
adcl
and
cmp
inc
or
cmpsl
adc
sub
daa
and
pop
insb
push
mov
aas
lret
stc
shlb
inc
xchg
cmp
lcall
shll
xor
leave
notb
outsb
cmp
mov
lods
mov
cwtl
add
cs
mov
shlb
ljmp
add
loope
mov
push
jle
sub
jnp
popa
adc
enter
imull
jp
fadd
sbb
xchg
out
or
xchg
dec
push
test
and
popa
setae
cwtl
push
popf
xchg
ljmp
scas
nop
loop
adc
test
scas
ds
loop
add
test
mov
div
mov
lahf
mov
push
push
xlat
inc
jo
sbb
add
inc
arpl
insb
jmp
call
das
imul
imul
mov
push
push
loopne
je
rorb
push
in
and
add
dec
jo
mov
stos
sbb
pop
push
jno
xor
repnz
mov
or
push
in
sbb
and
mov
out
sbb
jne
xor
in
ret
shlb
mov
sti
pop
out
arpl
cwtl
in
dec
movsb
sbb
add
or
loop
add
dec
mov
sbb
push
pop
sbb
daa
mov
in
or
lcall
adc
push
jb
fisubrs
push
jl
in
push
test
add
icebp
jmp
add
pop
xchg
data16
xor
iret
mov
lahf
testb
jb
andl
jp
jns
loope
in
mov
inc
and
pop
daa
call
mov
pop
or
mov
xor
loop
or
cld
loopne
inc
dec
xchg
pop
and
xor
add
dec
aas
push
imul
call
jle
idivl
int3
divb
cmp
jecxz
inc
fstps
pop
inc
xchg
mov
push
push
xor
pop
fsubp
test
mov
adc
insl
jg
or
scas
ss
mov
je
inc
movsl
fistl
out
loopne
popf
jno
adc
fdivrp
cli
pushf
fimuls
in
movsl
cmp
mov
pop
negb
inc
cmp
mov
sbb
fsubrl
popa
cmp
cmp
add
dec
es
leave
mov
test
xlat
mulb
out
ljmp
cmpsl
mov
repnz
je
test
aam
adc
add
xchg
lods
nop
lds
push
ficoms
ljmp
push
xor
sahf
cmpsb
icebp
jb
cmp
adc
pop
repnz
lret
push
add
sub
jecxz
sbb
adc
cmpsb
inc
mov
add
hlt
mov
imul
jle
lcall
mov
movsb
lret
cmc
ds
sub
and
adc
lods
fiadds
jmp
add
pop
xchg
sub
bound
cmp
sub
cmp
popf
loope
mov
mov
lret
jle
dec
nop
je
xor
sub
xor
rcll
xchg
aad
jg
loope
cltd
cwtl
cmp
jns
int
pop
push
sub
pop
pop
clc
repz
adc
cmpsl
call
js
cld
jb
fldt
data16
add
adc
imul
jo
and
sub
mov
xchg
push
push
push
adc
inc
xor
daa
scas
les
imul
scas
outsb
pop
pop
gs
xor
cltd
es
sbb
nop
or
jo
inc
call
psubw
icebp
fdivr
jb
xchg
pop
jb
pop
dec
jp
sti
js
mov
imul
test
pushf
cmp
lds
mov
sarl
inc
daa
and
test
lock
push
inc
dec
aaa
inc
mov
repnz
cmp
push
sub
dec
test
inc
daa
fcompl
jg
hlt
mov
adc
adc
cmp
mov
ret
jecxz
mov
sub
push
xor
pop
dec
cld
cmpl
mov
aas
movsl
sbb
sub
jle
loop
mov
push
sub
out
pop
mov
loope
in
xchg
add
mov
nop
xchg
je
enter
jp
sub
xlat
push
mov
jbe
addb
adc
fsubl
pushl
faddl
repnz
push
cld
adc
push
pop
jbe
shll
fistl
js
dec
cmp
push
mov
cli
in
mov
cmp
mov
std
xchg
cmpsb
push
and
iret
pusha
repz
imul
divb
mov
repnz
insb
push
adc
or
dec
xchg
inc
shll
clc
mov
imul
xchg
push
dec
mov
pop
sbb
sti
sub
pop
mov
mov
fsubl
popa
or
mov
jbe
fiaddl
jmp
sti
dec
xchg
psrlq
push
dec
inc
cwtl
outsl
sbb
sti
xchg
cli
dec
add
or
xchg
inc
popf
cli
or
and
sub
imul
cs
ret
cmc
cs
push
mov
int3
dec
or
cs
test
or
lahf
ja
sub
mov
inc
sbb
ret
ficoml
jns
hlt
imul
or
mov
push
imul
lds
push
test
pop
cmp
pop
pop
sub
dec
mov
in
jmp
lock
mov
lahf
dec
sarl
loop
roll
aad
aas
pusha
pushf
sub
icebp
sarb
jbe
or
mov
push
and
sub
daa
jne
xor
inc
cmp
out
shrb
ret
add
dec
adc
mov
scas
jl
push
fadds
stc
cmp
cmpsl
mov
jns
xchg
inc
or
mov
leave
xchg
jmp
push
jns
cmc
jecxz
push
and
cmp
push
inc
std
in
xchg
iret
inc
movsb
test
insb
pop
in
push
xor
mov
in
mov
sti
push
dec
mov
cmp
adc
adcl
call
cmp
mov
stc
pusha
fdivl
fcmovnu
inc
lods
js
jecxz
gs
outsb
out
test
test
scas
mov
mov
pop
in
jmp
aaa
insb
pop
lea
ds
cmpb
jns
aad
cli
cmc
pop
cmp
jmp
pop
push
adc
push
cmpsb
movsl
mov
push
pop
loope
bound
dec
pop
sub
jp
jle
test
mov
clc
imull
xor
cmp
pop
xchg
adc
stc
xor
dec
add
sbb
xchg
cmpsl
test
add
enter
nop
movb
push
sub
daa
dec
fsubl
xlat
xchg
jbe
mov
jle
mov
fdivrl
je
jne
inc
add
push
cmp
push
jb
pop
xchg
pop
roll
shll
in
fwait
test
jb
mov
cld
mov
pop
inc
adc
repz
and
jo
xorl
in
push
test
fcoms
mov
push
mov
adc
cmp
dec
pop
xchg
sbb
and
insl
sub
inc
jno
addb
push
push
jns
insb
nop
mov
xchg
in
bound
push
sub
insb
xchg
push
cmp
out
ss
inc
pop
pop
push
and
not
and
rcrl
repz
adc
inc
jo
je
mov
lock
mov
mov
cli
daa
jp
ror
enter
lahf
sbb
icebp
sub
pop
cs
aas
fisubl
or
lods
cmp
mov
or
in
lods
pushf
loop
mov
movsb
cli
cmp
mov
jo
dec
pop
ljmp
mov
divl
popa
jae
test
lea
test
adc
dec
cs
push
repnz
shll
out
les
out
fdivr
and
dec
sbb
cmp
jge
adc
std
popa
repz
scas
test
std
pop
lret
outsb
fistpl
add
cmp
sbb
shl
sbb
mov
cmp
rcrl
jg
or
les
dec
outsb
dec
and
and
je
mov
hlt
dec
sti
or
out
cmpsb
pop
xor
fsubrl
jns
iret
out
js
shrl
add
mov
dec
inc
hlt
xor
cwtl
sub
inc
aam
fildl
dec
mov
lret
clc
in
lea
loope
cmp
add
imul
test
mov
dec
xchg
bound
cmpsb
mov
sbb
inc
enter
push
cmp
iret
insl
xchg
pop
or
gs
sbb
in
inc
cmpsl
and
mov
push
push
shlb
mov
xchg
add
cmp
sub
outsb
jp
aam
dec
insb
mov
fsubrs
jge
dec
sub
outsl
push
mov
xor
out
push
js
push
inc
cmp
cmp
mov
pop
dec
cmc
shr
jge
mov
and
psrld
cmc
mov
lret
movsl
mov
mov
push
jle
mov
int
xchg
cmp
mov
cmc
loop
pop
jb
mov
mov
pop
push
xchg
subl
jecxz
imul
daa
ficompl
gs
test
add
push
in
inc
or
adcb
insb
mov
js
fnstenv
ror
arpl
adc
xchg
mov
xor
loop
mov
xchg
mov
push
sub
cltd
pop
shrb
pop
loope
dec
psrlw
in
xchg
inc
push
in
popf
sub
xchg
mov
decl
test
into
xchg
daa
dec
jbe
jbe
int
dec
push
sub
inc
dec
leave
xchg
cs
clc
cmp
xchg
outsl
or
pop
stos
into
lcall
repz
arpl
push
sbb
rorl
loope
fildll
loopne
std
arpl
stos
repnz
lret
lret
ret
stos
jle
lods
pop
xor
test
xor
fdivrl
mov
dec
imul
sub
inc
or
mov
add
inc
sbb
shlb
in
in
movsb
or
adc
push
xchg
adc
or
sub
sbb
lods
ds
loopne
jle
xor
jo
int3
imul
push
sbb
test
pop
mov
loope
inc
mov
lcall
fisttpl
sub
mov
sub
add
arpl
popf
sarl
xchg
imul
or
imul
repz
xor
cmpl
adc
jbe
out
stos
popf
xor
rcrl
inc
and
ljmp
or
mov
sbb
mov
repnz
cmp
inc
addb
push
scas
xchg
fcomi
in
jp
or
inc
xchg
test
cmp
or
and
mov
pop
dec
xor
cwtl
int
out
test
jecxz
das
pop
pushf
mov
rcll
cwtl
sbb
cmpsb
incl
je
mov
pop
pop
dec
jle
decb
sbb
pop
mov
nop
test
addr16
lock
xchg
aas
mov
lods
lea
enter
push
push
mov
dec
add
xor
bnd
sbb
cmp
lahf
hlt
ret
xchg
into
add
lods
xor
add
adc
mov
mov
xor
push
insl
mov
lcall
das
dec
cld
ja
imul
mov
adc
loopne
dec
icebp
pop
mov
cmp
add
sbb
cmp
sar
sbb
sub
add
pop
stos
push
into
es
xchg
xor
add
outsl
shll
xchg
add
insl
mov
push
data16
push
out
add
jbe
jecxz
sub
iret
xor
movsb
loopne
js
cli
jecxz
sbb
ret
cmp
fistpl
sbb
mov
test
xchg
jns
mov
jb
pop
movsl
xor
xchg
add
mov
mov
and
ljmp
rorb
adc
add
xchg
adc
push
xchg
outsb
dec
mov
iret
js
lock
or
xchg
pop
ja
es
xor
cmp
lea
mov
mov
lock
xchg
scas
test
push
sub
pop
mov
and
daa
dec
or
in
lods
into
pusha
rdmsr
decl
push
les
gs
repnz
sbbl
andb
lcall
push
xor
pop
repz
mov
mov
cwtl
insb
xor
negl
ss
mov
lock
sub
mov
mov
adcb
aad
inc
in
lahf
pop
inc
sti
xchg
cli
adc
and
out
aaa
sbb
jl
xchg
rcrl
bnd
aad
lods
pop
add
fiaddl
pushf
mov
lcall
inc
mov
xchg
fbld
in
xor
int
mov
in
inc
rcll
into
push
mov
mov
jmp
jmp
sbb
mov
inc
dec
mov
push
add
lods
jl
mov
jl,pn
rcrb
dec
icebp
push
es
inc
aas
psubw
je
imul
or
dec
aad
lahf
dec
fnstcw
mov
jmp
addb
repz
stos
ret
adc
jp
jb
mov
movsb
jnp
push
gs
out
dec
jo
rclb
sbb
or
cmp
pop
inc
xchg
mov
sti
jmp
add
or
lea
adc
mov
sub
push
pop
enter
pop
mov
ffreep
dec
xor
and
enter
add
push
xchg
or
sub
shlb
adc
ror
int3
ror
xchg
rclb
ljmp
lret
stos
add
mov
adc
add
in
into
cmp
jo
pop
or
pop
mov
ret
cmpsl
adc
lods
fisttps
dec
mov
sahf
mov
adc
inc
adc
ret
pop
mov
faddl
cmp
jp
xchg
repnz
add
xor
mov
cld
stc
int3
data16
loope
pop
fadds
ja
stos
push
jno
lret
imul
test
insl
mov
cmp
adc
cwtl
jecxz
mov
mov
fsubrs
imul
mov
fisubs
daa
out
insb
test
nop
cmp
stos
cmp
jae
movsb
pop
xor
inc
inc
or
mov
out
fs
mov
xor
scas
inc
outsb
lea
lret
loope
xorb
aam
subl
sub
pop
fwait
mov
push
jb
arpl
jg
jae
jle
xlat
push
stos
and
fwait
leave
add
enter
cs
outsb
xchg
fsubrp
insb
jne
jmp
cmp
mov
jns
mov
sub
dec
lret
pop
push
dec
xchg
push
mov
sub
pop
or
ud1
movsb
or
dec
es
mov
and
sbb
lret
movsl
loop
or
outsb
insb
fidivs
mov
xchg
fmull
xor
rcll
out
stc
dec
fistps
fmull
gs
ret
sub
rorb
xor
std
mov
push
jbe
cs
mov
add
movsl
ja
jo
xor
pop
cmp
pop
jns
xchg
cmpsb
in
jmp
or
shl
into
adc
inc
fisubrs
xlat
lea
outsl
mov
pop
faddl
mov
out
push
xor
in
rol
jnp
xor
push
out
pushf
xchg
cmp
xor
pop
cmp
out
pop
fnsave
jl
cli
pop
sub
loopne
cli
nop
pop
push
loop
cmpsl
je
pop
lods
mov
or
jl
into
lret
cs
push
fwait
push
gs
mov
jmp
repz
in
test
pop
mov
int
aaa
cwtl
ror
jp
fcompl
stc
insl
loop
pop
xor
sbb
sub
les
push
rorl
cli
iret
inc
jg
aaa
pusha
inc
dec
adc
lcall
and
sub
xchg
dec
fxtract
inc
shrl
dec
xor
or
fstp
xchg
loope
sbb
pop
mov
inc
jno
cltd
int
lock
cli
das
dec
mov
xchg
ja
out
mov
fdivrs
mov
addl
ret
dec
dec
jmp
mov
push
jecxz
cld
popa
push
cld
clc
fstpt
mov
or
lock
lret
aaa
iret
hlt
xchg
push
push
adc
pop
xor
lock
add
rcll
roll
or
jno
in
dec
xchg
dec
aam
lock
cmp
adc
insl
fistpll
pop
lds
mov
mov
push
imul
iret
add
pop
fsin
push
ljmp
lds
xchg
divb
sub
push
mov
xor
arpl
cs
mov
js
sbb
push
decl
jae
lret
dec
cmp
sti
das
cs
je
notl
inc
push
mov
aam
adc
cltd
jl
xor
addr16
lret
scas
test
jl
add
push
mov
push
stc
mov
pop
popa
scas
jno
mov
ret
pop
imul
je
fiaddl
dec
cmc
fsubs
mov
shll
mov
cmove
mov
jo
sub
and
shlb
cltd
pop
mov
xlat
sbb
push
fnstcw
jb
call
add
cmc
mov
das
cmpsb
or
subl
sahf
and
xor
insl
movsl
and
in
fwait
xor
popa
addr16
jle
xor
test
mov
fwait
cwtl
test
mov
js
jmp
mov
xor
data16
cmp
movsb
loopne
pusha
mov
xchg
sub
jge
jnp
inc
inc
dec
cmp
or
sbb
xor
add
jb
inc
adc
ds
mov
mov
cli
pop
or
test
fisttps
pop
push
cmp
inc
or
jns
xchg
leave
in
repnz
jnp
inc
test
je
push
rcr
out
fwait
shr
divb
mov
or
mov
and
push
aas
out
push
int
xor
std
mov
push
add
fs
fwait
xchg
movsb
pop
jecxz
jbe
mov
fdivrl
cli
pop
shlb
lcall
lods
imul
gs
fimuls
hlt
std
mov
pushf
xchg
jb
jge
fiaddl
and
sbb
dec
mov
or
ror
push
mov
lock
inc
dec
cmp
or
and
ss
inc
jg
loop
cmp
shlb
inc
adc
push
lods
mov
cmp
fcos
imul
ret
icebp
scas
sbb
pusha
pop
in
mov
imul
push
outsb
cmp
dec
xor
rcll
dec
cmp
out
stc
jecxz
mov
sub
rcrb
call
pop
and
adc
jg
jmp
lds
iret
lods
jecxz
ficompl
push
test
in
stos
cmpsl
ret
in
pop
out
cs
out
out
fwait
push
lods
push
sub
push
mov
adc
ss
xchg
and
pop
push
jb
loopne
pop
sub
xor
pop
lods
sub
test
leave
mov
into
fistl
jb
test
sahf
mov
mov
es
xchg
jbe
push
test
imul
dec
pop
fldl
mov
mov
add
xchg
out
xor
lds
out
test
xchg
ret
dec
inc
mov
pop
xor
sub
add
pop
ss
loopne
jno
scas
inc
inc
jb
cmp
stc
pop
or
sbb
inc
aas
aas
and
jne
lods
xor
dec
sahf
mov
xchg
add
jg
xchg
les
inc
call
inc
sbb
ss
pop
cs
in
cmp
xor
adc
repz
jle
jns
repnz
add
test
push
push
popa
out
fcmovbe
xchg
sbb
mov
mov
xchg
fwait
out
xor
cltd
out
hlt
jne
mov
xchg
scas
lock
mov
and
mov
add
sub
pop
mov
aaa
popf
inc
inc
ljmp
ror
and
adc
in
arpl
mov
rcrl
lock
mov
push
mov
out
fldcw
mov
xchg
xor
test
fs
jmp
dec
sbb
push
mov
inc
ret
jne
pop
in
push
filds
push
loope
mov
and
lods
add
idivl
scas
jp
lods
pop
icebp
orl
insl
push
mov
pop
inc
addr16
rorb
mov
pop
xchg
cmp
pop
lock
nop
and
ljmp
jo
out
fwait
pop
ss
cmpsl
in
into
xor
cmp
or
mov
mov
test
dec
mov
aaa
testb
dec
mov
jl
test
fadds
fists
shr
cmp
adc
push
aad
cmpsl
sub
call
les
mov
dec
xlat
pop
sbb
aam
nop
pusha
cmp
lret
data16
and
imul
stos
adc
lahf
loopne
je
pushf
xor
rolb
dec
pop
setge
push
outsl
adc
add
xchg
cmp
and
inc
cwtl
out
add
xchg
pop
gs
faddp
and
or
fisubrl
inc
sub
enter
or
lds
fs
lock
mov
mov
xor
in
sbb
push
out
pop
mov
test
cltd
add
and
add
fwait
xor
or
jp
popa
cmp
lcall
xchg
data16
and
add
push
int
mov
bound
aas
bound
mov
out
mov
sub
mov
add
pop
std
jg
push
push
xchg
addr16
sarl
pop
xchg
imul
inc
push
mov
icebp
cltd
fldt
ficoml
pop
sti
xchg
ficoms
scas
jle
sbbl
add
insl
repnz
pop
adc
inc
loop
fistps
decb
inc
adc
out
pop
mov
lock
es
mov
nop
int3
adc
jb
jmp
out
pop
ficomps
lret
adcb
dec
xchg
scas
enter
xlat
loopne
sub
or
je
xor
hlt
js
mov
fidivrl
imul
dec
repz
xor
inc
push
xchg
cmp
xchg
xorb
in
subb
inc
enter
pop
jbe
xchg
push
sub
mov
mov
cmp
imul
aas
into
cs
sbb
adc
lret
push
add
push
inc
mov
and
ret
js
xchg
mov
lds
cld
sub
push
fstpt
push
jo
or
fs
dec
mov
dec
cmc
stos
aam
shrl
cli
popf
pop
dec
adc
scas
xchg
ror
cmp
jb
pusha
jno
inc
or
mov
mov
pusha
rolb
jb
rorb
gs
pop
loopne
cmpl
imul
or
mov
lcall
jne
inc
stos
ljmp
imul
cmp
ret
pop
jns
clc
insb
adc
js
mov
xchg
scas
mov
shrl
jmp
sbb
and
out
mov
pop
mov
mov
sahf
dec
incb
out
movsb
and
xchg
shl
sbb
adc
dec
dec
pop
mov
push
dec
sbb
fwait
push
in
push
mov
iret
imul
jbe
lahf
and
fsubrl
pop
pop
pop
or
inc
mov
or
sahf
adc
jno
cmpsb
lret
dec
pop
repz
dec
enter
cld
mov
fs
test
push
jno
in
xchg
shrl
js
dec
es
xchg
inc
stos
sbb
mov
jb
sub
jno
cmp
movsb
sbb
and
adcb
inc
pop
adc
push
dec
push
push
push
add
fsubl
xor
jg
icebp
sti
mov
sub
filds
push
ds
lret
adc
or
pop
rcl
outsl
push
pop
pushl
scas
push
pop
mov
and
rclb
push
mov
and
sbb
mulb
sub
and
pop
pop
sbb
orl
xchg
push
push
aad
rorb
insb
push
out
in
pop
jnp
jl
cmp
mov
out
inc
popf
xchg
dec
xchg
inc
mov
sub
into
adc
mov
movsb
cli
jg
sub
movsb
cmp
jno
adc
jno
ljmp
xor
cmp
neg
imul
and
popf
bound
push
adcl
mov
push
pop
or
or
mov
shrb
mov
repnz
mov
ret
jb
mov
insb
outsb
loope
es
clc
out
push
int3
add
push
les
out
mov
add
fnstenv
dec
cld
mov
jnp
out
addr16
push
xchg
push
mov
inc
incb
push
mov
enter
mov
outsb
sub
xchg
fwait
push
into
mov
ja
imul
or
xchg
scas
xchg
lea
mov
imul
mov
leave
cmp
sub
add
aas
adc
bound
mov
ret
or
lds
shlb
mov
shlb
xchg
jnp
in
movsl
cmpsb
adc
addr16
push
add
adc
fwait
xor
sub
jo
jg
dec
rolb
mov
push
repz
cmp
xor
jg
sbb
fdiv
dec
int3
pop
mov
arpl
fs
int
push
je
addr16
aas
cltd
sbb
inc
sub
sub
dec
insl
shrb
lret
jnp
rcrb
push
mov
sbb
test
ret
movsb
shl
ret
jns
roll
mov
repnz
mov
jo
imul
jmp
mov
mov
fdiv
jno
cmp
leave
inc
insl
mov
stos
xor
lock
and
ret
add
inc
es
jo
cwtl
es
scas
sbb
add
js
data16
inc
pop
lods
xor
jge
nop
mov
sarb
sbb
push
enter
lcall
pusha
das
push
faddp
jge
js
sub
cmp
negb
outsb
cld
int
mov
cmc
dec
stc
fiaddl
adc
test
mov
cmc
loop
push
test
push
jbe
ja
rorb
inc
rorl
mov
xor
mov
iret
and
movsl
add
and
cld
fdivs
push
in
cmp
or
es
pushf
jno
scas
lret
pop
divl
fisttpl
mov
and
cmc
sbb
add
cmp
ret
sub
sbb
jg
add
movsb
in
xchg
icebp
int3
rclb
insb
sub
sbb
xlat
xchg
fsubs
out
js
xchg
jle
push
insb
daa
sbbl
dec
add
xchg
das
cmc
sbb
in
jl
lods
or
push
aas
les
cld
push
and
imul
sahf
xor
enter
mov
movlps
lds
loop
pushf
aad
and
sbbb
cmp
mov
jl
jp
sbb
jg
leave
xchg
xor
insb
out
or
gs
out
inc
test
jle
leave
xor
mulb
dec
in
xlat
cwtl
mov
iret
xor
mov
fxch
mov
fldt
mov
mov
rorb
bound
pop
ret
pop
inc
push
mov
int3
iret
sbb
pop
sub
cmp
adc
jb
loop
dec
das
dec
mov
jb
test
rcrb
sbb
push
and
cmp
andl
mov
outsb
cmp
aas
fiadds
gs
sub
xor
add
rorb
jo
and
cmp
or
mov
jno
and
pop
cmc
sbb
cmp
or
pop
cmp
lahf
mov
inc
and
movsl
and
cmp
jnp
cmp
js
sbb
cmpsl
enter
enter
fdivl
mov
jno
jecxz
push
jb
xchg
mov
sbb
aas
and
and
mov
lahf
pop
gs
jb
xor
pop
lret
es
sub
fwait
mov
adc
or
shrb
xor
ror
ja
xor
pop
cmp
dec
movsl
mov
int
pop
ljmp
je
inc
loopne
or
push
in
insb
lret
addr16
add
loope
mov
cwtl
push
test
faddp
xor
push
cmpsl
fwait
adc
xor
in
mov
sub
or
je
xor
jo
ss
push
adc
mov
frstor
insl
stos
data16
ret
int3
fbld
in
push
sti
mov
gs
jnp
cmpsl
scas
ja
mov
pop
in
sub
leave
add
out
in
mov
sub
insb
shrl
add
ja
jnp
push
or
gs
add
sub
fiadds
lahf
lret
mov
sub
push
insl
pop
mov
hlt
out
inc
cltd
fcomps
mov
and
inc
cmp
mov
lret
daa
push
inc
cmpsl
add
lods
mov
nop
xchg
stc
sahf
lret
sti
sti
fbstp
stc
and
mov
movsb
adc
sbb
leave
sub
sbbl
xor
xor
sarl
das
sbb
mov
mov
sub
push
aad
fisubl
insb
mov
insb
rclb
sar
imul
rcrb
add
insl
push
imull
es
sbb
sub
cltd
pusha
xchg
out
add
xchg
nop
mov
and
filds
jl
imul
cmp
hlt
sbb
clc
insl
je
popa
pop
fsubrl
sbb
jecxz
test
mov
loope
sbb
cmp
xchg
scas
movb
sahf
mov
sbb
xchg
nop
imul
or
in
fldenv
and
imul
in
movsl
push
test
cs
jnp,pt
sbb
ret
sub
sub
sti
pop
nop
arpl
aas
shl
adc
inc
mov
test
iret
ficoml
enter
mov
mov
pop
add
push
jns
sar
pop
out
mov
decl
pop
ret
repnz
ss
inc
cld
loop
sub
sar
xchg
arpl
jl
pop
push
jmp
mov
fbstp
cmc
xor
enter
push
in
mov
jne
push
repz
pushf
jg
das
or
xor
pop
sbb
inc
stos
sbb
mov
aaa
orb
adc
outsl
imul
les
push
clc
stc
pop
sbb
or
jno
jae
push
push
pop
pop
adc
shrl
bnd
cmpl
and
mov
in
in
cli
scas
mov
bound
mov
mov
ficompl
pop
sbb
dec
sbb
jge
scas
rcrl
outsl
insl
pusha
mov
sbb
cmpb
data16
mov
popf
or
pop
iret
jno
cmc
mov
mov
mov
repnz
mov
jle
xchg
enter
lcall
mov
mov
ja
xor
outsb
xlat
and
xor
xchg
push
cmpsl
pop
scas
push
inc
rolb
popa
dec
loop
adc
jno
test
ja
imul
lds
data16
movsb
inc
cmp
xor
shlb
mov
lods
cltd
mov
pop
cmp
imul
and
xchg
xchg
enter
imulb
inc
lahf
xchg
adc
stc
mov
push
int
sbb
loope
les
sub
mov
into
sub
pusha
mov
push
pop
aas
mov
ja
or
lcall
xchg
push
dec
mov
sbbb
out
ljmp
enter
adc
imul
nop
add
cmp
rorb
mov
sub
inc
outsl
and
outsl
push
aam
jecxz
xchg
or
stc
xchg
fdivrl
pop
jo
cwtl
arpl
push
cmp
aam
cltd
mov
cld
cmpsl
negl
jo
xchg
xor
mov
adc
add
pop
cmp
dec
rcrl
out
mov
icebp
xchg
data16
cmp
cmpsb
cwtl
roll
outsb
clc
sub
sub
mov
or
movsl
mov
mov
lds
iret
cmpsl
jge
cwtl
loope
cmc
pop
popa
dec
js
enter
sub
aas
mov
adc
jg
sti
jbe
xchg
mov
dec
leave
lods
int3
jns
in
cmp
sub
jbe
pop
in
icebp
shll
push
mov
stos
test
aad
aad
adc
movl
les
inc
cs
cmp
jbe
movl
stc
inc
test
dec
scas
sti
cmp
jbe
lods
es
fidivrl
jle
mov
pop
adc
andb
lret
not
inc
adc
add
inc
es
mov
xchg
pop
mov
push
fildl
fwait
xchg
pop
inc
jbe
mov
cmp
into
cmp
xlat
lahf
push
mov
es
das
pop
adc
adc
scas
addr16
sub
in
loopne
push
mov
jmp
cmp
out
insb
xchg
lods
imul
xor
int3
stos
fnsave
enter
ds
bound
jge
ret
popf
xchg
mov
sbb
push
call
outsb
pop
sub
mov
lods
fbstp
lea
andl
cmp
sub
inc
inc
mov
divb
sahf
out
sbb
fdivs
scas
push
sahf
adc
mov
movsl
jne
aas
dec
jecxz
mov
sbb
ret
fstpl
jb
dec
mov
sbb
mov
mov
call
cli
cmp
xchg
fidivrs
jb
jns
in
xchg
push
jg
jp
dec
pusha
push
popf
mov
mov
sub
and
adc
mov
push
rcrb
push
push
outsl
mov
cmp
mov
inc
outsb
dec
shlb
cmp
push
sub
scas
xor
pop
dec
adc
stos
popa
rcl
xchg
inc
sbb
lods
adc
inc
popa
leave
push
fsubrs
xchg
int
loopne
dec
popf
xchg
cmp
jo
xchg
fdivrs
mov
mov
lods
imul
sub
stc
xchg
shll
add
xlat
das
sub
out
dec
adc
push
pusha
pop
xor
jmp
sbb
cmp
push
xor
movsl
sub
in
aam
aas
out
popa
xchg
adc
push
ret
lea
xchg
imul
push
lods
lea
sti
mov
fwait
sub
fnsave
inc
popa
add
fwait
sbb
push
int3
repz
add
sti
jne
cmp
and
push
arpl
pop
add
addr16
shlb
out
mov
or
or
mov
jae
daa
xchg
movsl
arpl
fcompl
push
les
int
outsb
loop
jp
lret
adc
push
icebp
popf
loopne
xchg
and
out
adc
pop
dec
clc
jp
loop
jp
test
sub
out
mov
cmp
decb
sarb
in
pop
and
mov
jg
mov
cld
fcompl
sbb
dec
push
shlb
popa
sarl
mov
push
push
adc
jmp
pop
mov
xor
cmp
fwait
mov
pusha
adc
fwait
or
lret
jg
cli
call
xor
cmpsl
shl
push
pop
pop
daa
xor
rolb
lods
push
pop
lret
xchg
aad
std
adc
or
shll
add
pusha
popf
loope
gs
lea
inc
mov
xchg
mov
sbb
outsl
pop
les
adcl
loop
or
add
mov
loop
or
daa
xlat
outsl
ja
mov
loop
sub
cmp
mov
xchg
icebp
je
mov
sub
push
or
adc
mov
add
xchg
lods
filds
add
lock
push
popa
mov
setnp
das
add
mov
insl
insb
sti
in
lret
push
pop
stc
call
sar
cmp
das
adc
cli
sub
clc
ljmp
mov
mov
pop
push
test
cmc
clc
adc
loope
das
sbb
mov
mov
std
or
dec
xor
xchg
xlat
or
andb
jge
jmp
jbe
xchg
mov
sar
dec
cmp
push
sahf
mov
ds
push
inc
sub
ret
xor
jge
xorb
add
mov
mov
jns
test
xorl
sub
mov
xchg
xor
adc
ds
andb
jge
lods
lcall
enter
shrl
pop
inc
inc
int3
mov
ja
cwtl
clc
or
mov
stos
insl
popa
scas
adc
adc
pop
fmulp
inc
iret
aad
icebp
imul
sbb
add
xchg
fldl
xchg
icebp
clc
arpl
out
decl
adc
sbb
add
movsl
push
xchg
int3
adc
adc
add
mov
mov
jns
sub
or
sbb
dec
adc
xchg
imul
mov
addr16
or
movsl
out
rolb
xchg
mov
or
push
pushf
test
add
jmp
aaa
xchg
dec
inc
lcall
sub
and
mov
adc
sub
call
notb
rorl
stos
dec
push
fidivl
or
mov
loope
negl
or
mov
test
cmp
xor
pop
mov
xor
test
xchg
pop
fwait
mov
stc
dec
lahf
out
sbb
pop
mov
stos
mov
lea
and
scas
push
test
mov
pop
sti
jp
loopne
and
and
mov
popl
jge
sbb
cmp
xor
call
xchg
leave
imul
fdivrl
or
dec
jmp
test
inc
sub
sbb
adcl
or
inc
inc
sarl
inc
dec
cld
and
add
mov
lret
sbb
sub
sub
dec
cmp
rolb
std
fldt
clc
add
dec
push
add
repnz
popf
cmp
sbb
fwait
xor
nop
js
mov
and
cli
scas
mulb
ds
jo
inc
push
mov
xor
cwtl
call
inc
jbe
jge
push
or
push
pop
imul
jno
mov
sub
adc
pop
cmp
dec
jmp
sbb
shlb
or
popa
cmp
xchg
and
cwtl
sbb
in
lock
sahf
popa
and
jne
mov
jns
jae
or
divb
push
std
or
jno
jle
push
cmp
mov
lret
or
xor
call
push
orb
in
mov
push
mov
inc
js,pt
lds
loopne
and
push
or
jp
push
repz
es
or
outsb
mov
lods
mov
les
push
jmp
xchg
in
icebp
add
and
inc
dec
test
mov
jbe
adc
or
pushf
lea
xor
jnp
dec
shl
arpl
sub
mov
sbb
xor
out
xchg
push
pusha
mov
xor
sarl
sbb
pop
cmp
in
imul
mov
out
xchg
pop
add
jnp
ret
jae
sarl
enter
jae
push
adc
pop
mov
mov
jle
inc
test
insb
xchg
dec
dec
cltd
cli
push
push
ficompl
mov
lahf
sti
icebp
test
jp
shll
cmp
dec
in
js
insl
cmp
xchg
mov
pop
je
and
je
test
dec
sahf
xchg
add
cmp
mov
pop
mov
xchg
out
cmpsl
mov
adc
mov
cmp
aas
pushf
test
jle
cmpsl
movsl
xchg
and
movsl
inc
pop
repnz
xor
jecxz
sub
jo
add
push
ss
loop
fdivrl
xorb
push
inc
cs
mov
lods
aas
or
mov
add
jg
add
sub
jno
je
jo
add
imul
decb
outsb
pop
mov
mov
cmp
fbstp
pop
mov
out
pop
sub
or
push
jns
xor
mov
adc
cmpsl
rorl
mov
notl
push
dec
sub
add
in
iret
cli
push
je
add
mov
in
iret
mov
jmp
bound
test
jecxz
dec
lcall
push
mov
mov
negb
in
cwtl
js
dec
mov
fwait
ds
ficoms
aas
xlat
inc
in
arpl
cmp
cmp
jo
cmp
mov
insb
out
fwait
cmp
js
rolb
popf
lock
jnp
dec
push
dec
jns
dec
mov
lahf
mov
popa
pop
into
fisubl
mov
sbb
mov
lcall
call
hlt
sbb
xor
sbb
stos
cmp
mov
ret
rcl
jno
push
hlt
push
leave
sub
mov
sub
into
mov
outsb
jno
sub
adc
jne
jno
pop
inc
mov
sbb
sub
cmpsl
cmp
ja
ret
dec
and
push
pop
push
or
cmp
stc
sbb
mov
js
arpl
pop
sbb
or
push
push
mov
call
imul
mov
cld
in
popa
jae
into
inc
pop
in
or
dec
aam
dec
inc
mov
pop
sub
sub
mov
rolb
outsl
dec
fisttpll
cmp
lock
sub
dec
lods
stc
fbld
pop
fisttpl
out
gs
mov
dec
in
andl
jbe
sbb
sub
xchg
fstpl
mov
sub
popf
fsubs
sbb
jmp
mulb
stos
test
pop
in
rcrl
rclb
push
gs
icebp
and
test
dec
andb
adc
fdiv
ds
ret
mov
mov
subb
in
sub
es
sub
arpl
orb
icebp
sbb
fwait
jns
pop
gs
jl
adc
outsl
mov
je
xor
test
push
jno
stos
mov
js
imul
mov
xchg
andl
or
jg
int3
mov
or
lret
lods
repz
cmp
sbb
and
lret
mov
dec
addr16
ror
fidivrl
dec
inc
mov
leave
daa
sbb
inc
lret
in
stc
cmp
pop
adc
or
sub
aad
cmpsb
push
pop
testl
data16
pop
inc
shrl
xchg
sti
pop
mov
jmp
sub
fcmovnu
lret
lahf
out
sbb
and
data16
pop
jae
aam
loope
push
bound
adc
cmp
js
int
xchg
and
mov
mov
xor
loop
push
and
cmpsb
nop
jne
pop
nop
out
shll
or
dec
aaa
out
sar
into
dec
xchg
jmp
cmp
sub
add
sbb
lea
aaa
push
loop
aam
add
xchg
ja
pop
dec
add
inc
inc
pop
and
popf
loope
push
add
fmull
inc
popf
push
test
sahf
jae
shrl
sbb
stc
cld
inc
cld
push
pop
jmp
mov
or
psubsw
pop
push
jge
or
cmp
je
pop
mov
movsl
pop
test
sbb
out
mov
mov
jne
nop
out
jne
mov
sbb
jp
andb
adc
aad
lods
jbe
add
inc
mov
push
mov
fistps
xlat
aaa
fwait
in
push
mov
dec
repnz
sub
ds
jns
aaa
inc
cmp
jg
or
shlb
inc
dec
sbb
test
dec
xor
repz
loope
mov
xchg
out
adcb
test
in
push
ds
pusha
xor
insl
push
or
sbb
sbb
orb
xor
insb
pop
fcmovne
xor
pop
push
imul
pop
dec
inc
and
aad
test
cmp
dec
or
pop
lcall
mov
out
ljmp
mov
push
fsub
lret
scas
lea
fdivs
rorb
push
mov
mov
cmp
insl
outsb
rorl
xor
data16
mov
add
jecxz
jp
lcall
inc
testl
scas
out
inc
push
sti
clc
movl
arpl
and
xorl
and
add
pop
in
mov
push
inc
cmp
jmp
xchg
add
adc
das
push
lods
add
imul
fwait
icebp
mov
out
pushf
dec
jmp
ljmp
pushf
and
out
ret
add
xchg
dec
lds
sub
push
xchg
std
sahf
dec
loop
xchg
repz
mov
test
daa
addl
mov
insl
cmp
aad
pop
xchg
push
aaa
mov
fwait
pop
mov
jne
das
ror
cmpsl
push
sbb
cmp
adc
jp
sbbl
loope
add
jbe
movb
jnp
xor
push
jbe
leave
sbb
adc
pop
inc
pop
lcall
mov
or
sbb
fistpl
adc
push
adcb
jne
mov
inc
cmp
stos
push
jg
out
pop
dec
call
pop
inc
stos
or
sub
mov
lcall
sub
cs
mov
mov
fisubs
daa
mov
insl
cmp
cmp
inc
fidivrs
inc
sub
stos
adc
adc
add
ljmp
cmp
add
sbb
daa
pop
jo
sahf
inc
popf
mov
nop
scas
imul
in
in
cli
dec
mov
inc
adc
lret
ret
or
dec
cmp
xsavec
pop
push
add
jbe
add
ljmp
pop
push
loope
xchg
adc
push
fistps
push
mov
mov
cmp
or
in
adc
leave
jg
fcmovnb
adc
int
and
adc
ds
test
cs
push
jns
adc
addl
inc
lods
xchg
sti
clc
push
outsb
dec
adc
mov
mov
inc
clc
adc
add
or
xor
cmpsb
pushf
addr16
jnp
jnp
lock
push
mov
mov
push
lods
inc
sub
daa
dec
sbb
add
in
test
fidivl
aam
dec
sbb
mov
lods
aam
fs
icebp
cmp
mov
push
movsl
jg
inc
lock
mov
stc
mov
sti
mov
iret
inc
ss
adc
cs
or
lods
xchg
mov
imul
in
cltd
xchg
push
mov
push
and
push
es
inc
sub
lods
mov
pop
ljmp
ss
pushl
mov
inc
aaa
cmp
test
mov
imul
jns
mov
rcl
lock
das
repnz
std
xor
dec
iret
adcb
insb
dec
sbb
mov
push
std
inc
nop
mov
mov
aam
jge
insl
shl
insb
jecxz
aam
adcb
popl
lcall
in
sbb
mov
add
leave
popa
je
push
xchg
xor
dec
jmp
jo
sub
ret
xor
pusha
cmpsb
cmpsl
push
daa
lock
push
pushf
xchg
add
test
jne
leave
xchg
out
jae
push
hlt
cmc
inc
xchg
xor
pop
cmp
fildl
jp
imul
mov
mov
lods
sub
adc
repz
scas
cmp
xchg
sbb
push
jp
movsl
mov
aam
pop
mov
cmp
jg
sbb
sub
mov
inc
outsl
and
cli
pushf
add
sahf
pusha
scas
stos
sti
inc
movsl
add
movsl
sbb
jmp
mov
rcl
pushf
rol
push
ja
cmp
push
mov
int
mov
mov
push
xchg
cs
xchg
pop
pop
mov
leave
test
sub
outsb
mov
jp
paddusb
mov
jo
cmp
nop
lods
sub
xchg
jns
lret
js
inc
sbb
ja
fs
or
or
js
pop
add
xor
lret
gs
pop
loop
lcall
ljmp
lds
lahf
mov
pusha
xor
aam
sub
or
mov
fnstsw
mov
outsl
pop
test
push
mov
mov
xor
aaa
mov
pop
cmpsl
ret
push
sti
mov
or
mov
jg
fstl
out
test
je
js
dec
xchg
sbb
repnz
cmpsl
adc
push
or
test
fisubrl
mov
sbb
xchg
or
out
and
xchg
ret
ret
or
ja
sub
outsb
jbe
mov
and
ss
enter
mov
or
inc
mov
into
xchg
jle
pop
sbb
dec
and
xchg
push
push
fmuls
imul
hlt
dec
xchg
pop
fwait
sub
rcr
cmpsb
or
or
dec
inc
mov
iret
cltd
mov
ja
jnp
pop
pop
xchg
arpl
popf
int
mov
and
push
cwtl
in
gs
cltd
sub
iret
outsl
lcall
shll
iret
popf
sti
adcl
scas
orb
add
pop
nop
ja
cwtl
add
xor
rolb
pusha
in
outsl
in
nop
mulb
add
push
jmp
pop
push
xor
jp
jbe
mov
in
aad
fldt
aas
negb
mov
inc
out
sahf
add
dec
sub
mov
jmp
into
push
mov
ja
cld
aam
mov
push
imul
and
and
sbb
outsl
pop
nop
std
xor
dec
repz
jl
mov
mov
lcall
pushf
ret
scas
adc
int3
jne
pop
ret
adc
movsl
lods
mov
push
mov
insb
or
ja
and
pop
rcrb
icebp
lahf
mov
mov
sub
dec
cmc
adc
outsl
sub
imul
into
shll
ror
ud1
mov
shll
jmp
cmp
bnd
cs
daa
mov
add
or
jb
sbb
fs
xchg
and
mov
push
loop
sahf
sub
dec
arpl
mov
sbb
jp
in
dec
mov
mov
mov
dec
sub
mov
pop
pushf
mov
add
into
lods
sub
cmp
aam
jge
xchg
aaa
aam
subb
adc
out
in
and
add
stos
or
mov
shr
sub
pop
xor
cmp
or
xchg
repz
pushf
ret
sub
mov
cld
sub
lock
ror
shl
xchg
mov
adc
xchg
sbb
mov
test
pop
or
decl
stos
addr16
das
test
adc
pushf
sbb
xor
mov
adc
insb
cmp
xchg
idivb
jge
sbb
movsl
mov
dec
jae
mulb
pop
hlt
lds
jl
push
cmp
call
rclb
cmp
sahf
cli
leave
xor
outsb
jl
or
push
dec
repz
sbb
inc
add
or
dec
icebp
jb
out
mov
or
inc
mov
mov
pushl
scas
fsubs
sbb
test
pop
sbb
mov
jge
inc
test
sarl
inc
stos
push
ret
xor
adc
clc
cmpsb
jmp
sbb
push
mov
punpckhwd
mov
cmp
out
fstps
das
stc
ja
test
adc
add
xor
out
mov
jecxz
or
out
or
hlt
das
in
jb
out
sarl
fstl
xchg
repnz
adc
pop
mov
cmp
out
repnz
int
enter
popf
sub
out
adc
std
xchg
jns
scas
add
pop
test
push
div
outsb
sub
mov
mov
in
test
sbb
sbb
out
in
mov
lahf
jb
or
lods
fcoml
test
call
inc
in
push
shlb
jp
xlat
dec
push
xchg
es
mov
push
das
push
dec
aam
insl
push
cld
cwtl
adc
test
push
pop
outsl
clc
xchg
pop
cmp
scas
xlat
add
xchg
cmpsb
lahf
cmp
int3
lea
std
pop
mov
shrl
rcrb
test
fcomps
mov
nop
dec
fstpl
push
sub
faddl
jle
in
cs
jle
adc
pusha
xchg
das
jge
cmp
jbe
adc
mov
mov
sbb
and
es
subl
imul
pop
jo
or
arpl
sbb
jno
sbb
adc
jg
fadds
sub
in
jae
mov
jae
xor
cli
jg
in
stc
mov
or
mov
pop
jg
cltd
mov
push
adc
in
pushf
push
leave
adc
stos
cld
sbb
jb
xor
in
scas
and
aad
inc
dec
scas
inc
pushf
cmp
out
sub
dec
roll
shlb
fwait
mov
or
mov
mov
mov
std
scas
xchg
add
mov
jge
inc
jge
subb
jb
jmp
push
mov
xchg
xor
pop
mov
rcrl
pop
popa
push
les
jns
mov
cmp
adc
addl
lods
mov
push
mov
xchg
and
xlat
icebp
pop
and
sub
movl
and
add
sub
sub
nop
lcall
cltd
xchg
jecxz
aas
cmp
lret
push
fs
popf
mov
add
xchg
adc
mov
nop
mov
fmuls
xor
aam
or
mov
jg
dec
cmp
je
daa
mov
cwtl
pop
xor
iret
cmp
pop
movl
mov
ficomps
pop
xor
jg
inc
dec
loope
add
mov
cs
hlt
ret
andb
in
scas
negb
or
leave
or
lods
or
popa
mov
mov
std
inc
int3
in
or
sbb
repnz
nop
repz
iret
mov
mov
fisttpll
arpl
xchg
jl
clc
adc
inc
in
xchg
rorl
ljmp
jnp
pop
mov
test
scas
pop
push
xor
loopne
add
xor
mov
pop
and
xor
inc
nop
adc
jbe
and
idiv
and
dec
aaa
leave
push
xchg
push
test
and
sbb
movsl
ret
pop
mov
adc
fistpl
inc
inc
mov
loope
test
push
cmp
sub
or
movsl
add
and
or
sub
dec
mov
inc
mov
adc
fiadds
mov
mov
es
sub
aaa
lret
call
test
sar
std
and
pop
fnstcw
aaa
or
push
adc
jbe
xchg
pop
sub
inc
shll
out
add
or
or
pop
and
xor
int
sbb
mov
into
aad
rolb
ljmp
mov
adc
in
dec
out
sti
icebp
das
or
push
out
pop
stc
adc
mov
pushf
jge
ss
aad
push
scas
cwtl
and
test
and
or
sub
testl
daa
add
xchg
dec
adc
sub
stc
jge
js
test
mov
dec
mov
adc
divb
sub
scas
inc
cmp
fwait
shlb
cwtl
push
cli
sbb
in
adc
icebp
sub
or
and
iret
movsb
jo
inc
cmp
xlat
imul
inc
out
loop
mov
xor
and
int3
pop
or
adc
add
dec
shrl
push
in
mov
outsl
add
mov
fsubr
and
stos
xor
pop
jnp
sbb
or
in
out
push
insb
lock
xchg
sbb
shlb
mov
cmp
and
sbb
popf
jb
rcrl
xchg
mov
movswl
or
int3
loop
cli
es
mov
fcomps
mov
push
fwait
inc
adc
mov
push
sub
mov
pop
pop
cld
cli
loop
push
add
push
cmc
jecxz
inc
xchg
mov
movsb
mov
icebp
jo
loope
sub
jmp
xor
je
enter
int
cmpsl
stos
pop
arpl
popaw
stos
jmp
inc
bound
mov
jp
insb
cmpsl
cmp
outsl
test
lcall
fadd
add
jle
insl
mov
arpl
dec
mov
cmp
loopne
or
out
jmp
rcll
push
inc
js
xchg
mul
jb
adc
lret
leave
jno
or
pop
inc
out
fs
je
lret
pop
stos
adc
mov
out
data16
ljmp
add
mov
mov
hlt
lods
in
inc
in
cmp
popl
inc
add
push
adc
inc
stos
add
or
lret
cmp
mov
mov
test
in
mov
add
or
mov
jno
and
push
push
cltd
movsb
lret
hlt
mov
roll
in
jmp
ja
pop
mov
inc
jb
popf
lock
cmp
jne
mov
inc
scas
dec
inc
iret
and
test
int
idivb
mov
push
ret
movb
jecxz
and
cmp
frstor
js
xchg
xlat
mov
aad
std
movsl
inc
mov
leave
jno
push
adc
aas
loopne
clc
sub
cmc
rclb
fwait
aad
inc
mov
mov
cmpl
add
mov
sub
popf
imul
arpl
enter
ljmp
pop
cmp
filds
and
lret
adc
stos
rcrb
jns
sub
cltd
cs
and
and
jns
pop
pop
dec
jg
inc
sbb
inc
lahf
pop
xor
int3
sbb
adc
or
mov
rolb
enter
pop
mov
shll
cmp
loopne
jl
sbb
mov
lea
mov
push
gs
scas
inc
mov
test
hlt
pop
aam
mov
xor
xor
std
mov
xchg
push
repz
repnz
outsb
or
jb
adc
push
lods
jb
adc
mov
leave
outsb
pop
outsl
test
nop
mov
out
ljmp
jp
jp
dec
aas
mov
shrl
or
aad
enter
popf
push
gs
leave
jmp
hlt
add
clc
add
mov
jns
icebp
dec
repnz
dec
or
out
jl
push
mov
mov
insl
ja
cwtl
jb
stc
add
pop
lcall
lock
sahf
stos
inc
cmp
fdivrs
pop
push
or
xchg
pop
cwtl
and
add
or
push
jno
jmp
pop
ss
movlps
mov
lds
inc
mov
pop
cli
mov
outsb
outsb
xchg
ljmp
cmpsl
mov
loop
xor
push
sbb
outsb
xor
mov
pop
jge
jle
rorb
mov
dec
lds
xor
fwait
lcall
lret
push
clc
adc
in
rcrb
faddl
dec
dec
mov
fimuls
adc
loopne
xlat
int
add
cltd
mov
nop
mov
fcom
and
jae
jge
xchg
mov
lret
and
mov
jge
aaa
int
outsl
jns
and
stos
test
lds
lea
ja
out
push
int
mov
adc
outsl
sbb
jle
mov
xchg
sbb
and
mov
test
and
cmpsb
test
xorl
adc
and
mov
push
mov
and
xchg
jp
test
sub
adc
push
push
xor
loop
mov
pop
or
aaa
das
in
jo
pop
clc
and
mov
jae
mov
pop
sub
push
sbb
and
popa
sbb
insl
and
cmpb
inc
xchg
je
sbb
push
lea
xchg
ljmp
mov
add
dec
adc
xchg
push
sub
xchg
stos
jb
cmpsl
push
mov
mull
dec
pop
fwait
lods
js
dec
dec
cmp
fsts
ret
push
xlat
aam
xlat
jbe
dec
xchg
jge
and
fidivrs
push
test
add
inc
pushf
pop
xor
data16
mov
iret
or
mov
test
std
xor
mov
mov
inc
pop
rcll
add
lea
gs
jns
and
loop,pn
pop
std
test
cmpb
jbe
xor
sbb
mov
daa
fnsave
sub
jle
sbb
xchg
addl
sti
inc
cmc
jne
shll
or
clc
pop
hlt
or
mov
xor
xor
mov
cmp
and
add
jae
mov
add
test
lods
mov
imul
scas
out
outsl
mov
jne
mov
push
xor
xchg
adc
sahf
adc
mov
push
mov
sahf
clc
cmpsb
sub
jae
iret
loop
or
ret
dec
mov
int3
pop
mov
dec
outsb
out
popaw
and
addr16
mov
cmp
add
sub
sarb
cs
fistpll
or
dec
inc
arpl
movb
adc
jnp
js
and
out
inc
pop
adc
pop
fwait
cmp
in
jecxz
mov
rdpmc
xchg
jp
sub
jp
mov
movsb
mov
into
pop
ljmp
xor
pop
pop
adc
push
in
mov
js
and
jge
std
nop
xchg
mov
sub
mov
adcl
pusha
pop
pop
fidivl
xchg
add
into
cmpl
mov
mov
in
fcmovnbe
cli
test
lret
xchg
shrb
iret
cld
sbb
cltd
addr16
loope
sub
sti
xor
test
mov
fwait
mov
jge
jbe
mov
icebp
and
dec
add
xor
cmpsb
xchg
sar
xor
push
mov
dec
into
xchg
imul
and
enter
sbb
loopne
mov
push
xchg
sbb
or
pop
test
fisubrs
js
xor
inc
xor
lods
jp
test
mov
push
jo
inc
mov
ret
adc
cmp
push
add
cmp
imul
fs
nop
xchg
cld
ja
xchg
sub
aaa
aam
out
int3
cld
jl
push
adc
test
pop
xchg
call
pop
and
pop
ljmp
mov
mov
mov
lock
aam
xchg
or
pop
pop
loopne
adc
cmpl
mov
jne
xor
int3
pop
loop
pop
into
dec
xor
lret
sbb
out
in
pop
push
repz
mov
xchg
push
xchg
out
sub
jecxz
push
sbb
repnz
icebp
and
andl
cmp
stos
dec
imul
in
adc
push
popa
xchg
adc
sbb
jne
mov
mov
daa
inc
cmp
push
adc
pop
ficoml
iret
imul
test
insl
int3
sbb
mov
jbe
xor
mov
sub
fwait
lock
jo
pop
out
in
std
shlb
adc
fisubrs
mov
sbb
cmp
cmp
xor
daa
mov
mov
xor
dec
dec
fnsetpm(287
lret
rclb
mov
adc
xor
push
test
add
add
sub
stc
push
inc
cltd
in
mov
lods
call
cwtl
mov
adc
pop
test
mov
lret
adc
dec
add
add
cmp
dec
push
pop
test
mov
adc
sbb
cmp
mov
push
mov
fsub
and
mov
cmp
lcall
mov
fmuls
ja
cmp
imul
mov
lret
stc
adc
jo
or
mov
or
mov
imul
and
fwait
iret
xchg
pop
jnp
and
mov
sbb
sub
sbb
jbe
mov
mov
lods
dec
ret
cld
adc
xor
jbe
push
gs
push
mov
stc
inc
cmc
jl
jg
sub
out
aaa
xor
jp
aad
rcrl
jns
ret
add
jle
push
jns
jo
lock
jp
mov
inc
aam
lret
jp
out
ds
dec
jo
stos
in
rorb
mov
imul
dec
inc
mov
jo
and
sbb
mov
dec
xor
adc
xlat
lds
add
and
scas
je
subl
sarb
ds
pop
mov
or
lock
xor
xor
scas
dec
mov
sbb
xchg
mov
and
mov
in
nop
in
call
jne
push
sahf
mov
hlt
repz
sub
pop
fwait
out
mov
add
adc
mov
inc
pop
xchg
adc
inc
aad
pop
jecxz
stos
inc
jl
sub
jl
or
test
gs
pop
call
pop
popa
sbb
dec
pop
dec
mov
jb
mul
mov
push
rol
push
hlt
mov
aas
jecxz
movsl
and
clts
jmp
jle
dec
jle
mov
pop
dec
mov
adc
stos
ds
aad
xchg
add
adc
mov
sub
xor
push
xchg
fsubrs
mov
push
mov
mov
xlat
mov
pop
and
lret
fisttpl
jp
mov
cwtl
leave
aam
stc
insb
dec
or
lock
popa
mov
popfw
addr16
push
push
fidivrl
inc
mov
sub
fdivrs
jo
cmp
inc
sar
mov
push
jle
in
mov
in
jp
mov
loope
out
dec
push
jnp
cli
dec
pushf
sub
jmp
jge
mov
mov
xchg
cmp
push
lock
clc
jne
mov
sub
dec
xchg
into
inc
in
ret
movsl
or
jl
or
loop
cmp
out
jle
aas
sarl
xchg
push
pop
jae
imul
inc
xchg
push
sbb
push
push
rcl
and
or
in
dec
daa
clc
iret
push
or
pop
mov
sub
pusha
movsb
cli
push
fwait
cmpsl
jbe
jge
push
jns
and
mov
aam
pop
adc
mov
roll
in
and
sahf
jnp,pn
daa
xor
mov
jmp
aam
pusha
stos
sub
pushf
lods
xchg
pop
sbb
mov
sub
test
mov
stos
sbb
fldt
aad
nop
lret
fwait
sbb
dec
idiv
adc
cmc
fcomps
out
movsl
stos
xor
call
dec
mov
stos
push
adc
mov
mov
inc
xor
and
fwait
popf
sub
jnp
test
sub
fmul
mov
mov
jbe
repz
and
mov
jae
sub
int3
jnp
add
inc
sub
insb
pop
pop
or
mov
ja
hlt
mov
loopne
adc
jns
mov
pusha
call
incl
sub
in
xchg
jle
or
jmp
rcr
push
filds
mov
sub
sub
xlat
pop
or
nop
mov
dec
loopne
les
pop
mov
or
cmp
aam
jb
xchg
push
aad
aad
jno
cmp
dec
mov
cli
mov
add
jno
push
imul
dec
and
stos
loope
mov
or
or
push
arpl
or
add
mov
in
sti
jno
fisttps
ficompl
lahf
lds
sub
ja
add
mov
in
stc
xlat
fisubs
inc
jecxz
notl
push
adc
les
stc
or
mov
ss
test
pop
mov
inc
cmp
movsb
jmp
cmpsb
inc
in
jmp
add
add
outsb
fldl2t
aaa
inc
mov
push
bnd
aaa
push
into
pop
test
scas
out
lret
or
in
adc
je
mov
pop
rcrl
mov
sub
rep
adc
test
cld
pusha
inc
mov
mov
in
incb
xchg
roll
and
adc
jge
xor
mov
sahf
int
push
push
sbb
and
cmc
mov
clc
roll
and
pop
jo
or
push
push
add
call
test
adc
push
push
xorb
in
in
push
dec
data16
aam
xchg
push
push
in
pop
jnp
cmp
jge
xor
stc
std
jmp
xchg
je
lds
imul
pop
mov
fisubrs
sub
push
fsubrl
sub
aaa
inc
js
aaa
sbb
mov
stos
mov
cmp
mov
jle
inc
addr16
jns
mov
mov
dec
push
cmc
jle
push
mov
push
dec
add
out
xor
stos
xchg
test
and
lcall
imul
jg
or
xchg
sbb
xchg
leave
cltd
loope
mov
mov
mov
cmp
bound
gs
loope
in
repnz
cmp
fists
push
lods
stc
rclb
mov
addb
scas
popa
sarl
xor
xchg
fmul
leave
cmp
fidivs
dec
push
ss
or
mov
cs
cmpsb
outsl
rcr
nop
mov
popa
movsl
in
dec
insl
jnp
into
xchg
push
fsub
cld
loopne
mov
in
mov
mov
cltd
ja
cmp
aam
add
fdivrs
pop
push
gs
or
cmp
lea
aad
adcl
addr16
add
loop
insl
mov
and
push
shrb
xlat
fmuls
mov
inc
stc
sbb
jb
xor
loop
fists
pop
repnz
shrl
xchg
xor
lret
pop
outsb
adc
mov
adc
xchg
push
jbe
lahf
mov
mov
aam
mov
call
jb
xchg
hlt
ret
add
aas
add
mov
mov
imul
lret
daa
aam
dec
sub
sub
aaa
shl
sub
into
loop
xchg
test
scas
dec
movsl
mov
lock
xor
int
das
js
xchg
stos
outsl
inc
inc
xor
add
hlt
or
adcl
fcmovnu
bound
hlt
repz
jecxz
lahf
and
mov
sar
enter
lahf
xchg
mov
orb
cmp
xor
push
movsl
and
loope
adc
cmc
lahf
cmp
out
int
mov
pop
xlat
pop
mov
inc
cmp
ss
xchg
cmpsl
addb
mov
or
push
inc
mov
or
adc
daa
sbb
and
leave
mov
int3
fsubs
dec
test
aad
xor
cmp
inc
inc
mov
sub
sub
cmp
jmp
arpl
iret
jno
inc
lret
dec
and
stos
stc
cmp
sti
add
es
insb
add
adc
in
mov
insb
dec
xorb
test
cmp
out
add
sub
testl
cmp
mov
pop
daa
cmp
dec
dec
mov
popf
mov
nop
aas
cmp
std
xchg
sub
cmp
and
dec
jmp
gs
ljmp
out
sbb
addr16
mov
mov
lret
jmp
adc
call
jo
scas
pop
mov
gs
pop
pop
push
out
mov
fwait
add
jns
sub
mov
test
push
insb
cmp
loopne
xor
xor
mov
and
out
int3
add
jge
or
sti
neg
cmp
pusha
lahf
jo
in
dec
outsl
lock
dec
test
fucomi
rcrl
loopne
rcrl
test
push
ljmp
adc
dec
cmp
popf
ret
insb
nop
lods
stc
sbb
or
icebp
imul
js
fnstcw
jns
cli
jp
or
cld
inc
shlb
add
in
cltd
lcall
adcb
push
mov
jno
hlt
ljmp
mov
and
adc
mov
add
cmp
and
or
dec
cmp
xlat
inc
outsb
sub
arpl
push
cmp
dec
shll
cmp
js
inc
jg
js
ss
jge
aaa
cmpsb
call
sbb
das
lds
pop
sub
push
jle
xchg
inc
mov
adc
cmp
aas
jbe
or
xlat
mov
mov
mov
in
in
dec
push
ret
ret
jbe
dec
sbb
test
movsb
gs
dec
mov
pushf
cmpsl
sbb
icebp
stos
icebp
sub
cmp
xor
fcomp
loop
sub
mov
orl
dec
mov
pop
sbb
loope
iret
mov
lock
loop
mov
mov
push
je
jl
sahf
clc
test
inc
stc
test
arpl
inc
push
stos
or
add
out
pop
pop
fdivrl
sti
in
lea
ds
in
shrb
push
in
add
mov
mov
or
lahf
push
dec
jo
je
fisubrs
pop
negl
cmp
add
sub
in
xor
and
xchg
sub
mov
cwtl
pop
inc
jg
iret
and
iret
cmp
data16
pop
pop
xlat
xchg
jae
mov
shll
lret
push
aaa
jmp
lock
shll
mov
aad
add
cmp
and
mov
push
in
rdpmc
push
pop
push
and
pop
mov
test
adc
adc
fnstcw
mov
lcall
sub
or
lods
xchg
mulb
dec
pop
mulb
jns
push
jmp
xor
aas
push
sarb
into
pop
mov
mov
fidivs
push
mov
jl
das
jl
jne
push
adc
push
xchg
loope
jmp
push
dec
js
test
fldt
push
pusha
xor
leave
lds
sahf
push
pop
das
std
out
xchg
orb
daa
dec
sti
rcr
out
pop
mov
jp
sarb
inc
sub
mov
repnz
movsb
sub
jno
and
and
daa
pop
andb
xor
mov
addr16
mov
lods
xor
sbbb
cmc
int3
adc
sarl
rcrl
repnz
and
insl
pminsw
dec
adc
mov
mov
repz
mov
xor
fstl
ljmp
int3
dec
mov
out
sub
fisubrs
arpl
mov
push
in
pop
shr
push
inc
mov
pop
mov
fcomi
inc
insl
nop
cvtdq2ps
cmc
fmull
dec
sahf
pop
xor
add
je
jnp
jbe,pn
pop
xor
and
jo
cmpsl
mov
fidivl
cli
pop
xchg
sbbl
push
lods
sbb
sbb
jae
std
lods
mov
adc
inc
ja
mov
mov
pop
sub
adc
icebp
inc
les
push
inc
iret
in
xchg
inc
lock
or
push
aad
inc
sarb
jae
movsl
stos
push
mov
jo
scas
dec
xor
xchg
lret
xor
jno
cmpsb
mov
adc
wbinvd
out
cmp
test
movswl
xchg
adc
fsubp
pop
or
push
push
push
pushf
dec
movsl
cs
xor
imul
pushl
aaa
fstl
sbb
sbb
jecxz
sbb
push
dec
dec
test
add
sbb
lea
cmpsb
popf
sar
jb
mov
subb
imul
mov
in
ret
loop
mov
icebp
sbb
push
fwait
add
out
pop
pusha
enter
inc
push
cli
push
fucom
lret
out
mov
imul
sbb
clc
fisubs
dec
push
insb
or
stos
cli
cmp
mov
push
push
inc
xchg
ljmp
xor
cld
inc
dec
xchg
or
sti
loop
or
jae
fsts
and
outsl
gs
in
mov
cmp
add
xchg
dec
mov
xchg
int
pop
das
dec
xor
lods
push
inc
std
mov
push
aam
test
mov
test
shrl
cmp
aad
mov
jecxz
inc
adc
or
cmp
scas
cmp
inc
push
adc
test
ljmp
or
mov
xchg
andl
mov
mov
pushf
icebp
bnd
cmp
lahf
sub
sub
aad
mov
mov
push
daa
fmull
dec
mov
jmp
or
call
and
iret
repnz
std
cwtl
sub
pop
sub
sub
xchg
inc
cmp
in
aas
aad
mov
dec
cmpb
mov
aas
adc
hlt
pop
push
dec
jbe
and
inc
in
fsubl
mov
sub
pusha
mov
fisubl
add
cld
test
les
test
stos
inc
mov
je
lods
mov
pop
js
ja
mov
nop
fisttpll
leave
aad
imul
fsubl
mov
das
ss
push
and
fidivl
mov
insl
hlt
loop
xor
and
int3
pop
dec
shrb
idivb
out
in
push
fmuls
fmuls
jo
sbb
fmull
mov
std
inc
jb
lahf
test
jnp
cmp
mov
stos
ror
fisubs
fcomps
lret
mov
lock
addr16
jo
jbe
loopne
sub
inc
aas
mov
loope
cmp
xlat
jns
inc
addr16
mov
shlb
mov
sub
xchg
push
pop
cmp
or
in
sbb
push
add
cmpsb
insb
mov
jae
insl
cmp
xor
repz
mov
sub
pop
addl
hlt
sub
das
cld
pop
lahf
hlt
pop
and
or
dec
xchg
push
pushf
out
lahf
sti
mov
adc
mov
xchg
jle
out
push
adc
pop
adcb
sub
pushf
jo
push
jge
fsubrl
xor
and
push
add
aam
jb
call
mov
fwait
inc
adcl
repnz
xor
adc
and
push
aas
mov
push
adc
pop
xchg
mov
jae
sahf
jmp
jo
leave
pop
mov
xchg
jns
xor
ljmp
add
xchg
jmp
lcall
xor
fcoms
mov
addb
out
jae
hlt
inc
out
push
out
test
inc
cwtl
add
sub
push
arpl
test
inc
mov
loope
mov
sti
mov
mov
and
cmp
add
push
fsts
sti
mov
scas
ja
testl
outsb
cmpsl
adc
xchg
nop
sbb
movb
mov
xchg
ja
push
data16
fptan
imul
adc
jbe
adc
jbe
jecxz
mov
sahf
jecxz
sarl
mov
push
in
fistps
mov
xor
inc
push
into
push
fmul
fs
xchg
push
int
sahf
lret
rolb
hlt
insl
push
fisubl
lock
inc
stos
mov
fsub
imul
ror
cwtl
cmp
mov
pop
sbbb
push
xor
sbb
stos
movsb
fmuls
test
dec
mov
icebp
cmp
stos
or
mov
jnp
repz
lods
xor
ret
cmp
mov
lahf
int
and
sub
insl
neg
xchg
jnp
repz
pop
mov
adc
adc
dec
aam
out
inc
inc
mov
shll
fwait
rolb
test
jb
loop
cmp
insb
jecxz
sbb
sbb
clc
lds
cmp
stc
push
jg
mov
cltd
and
jmp
mov
add
sub
mov
ja
inc
into
stc
js
shr
rorb
adc
sub
mov
mov
mov
out
and
repz
mov
fbld
cmpsb
push
sub
fnstcw
filds
cli
roll
test
ret
xor
popa
data16
pop
lea
mov
sub
xchg
dec
dec
sarb
lods
and
iret
push
lock
pop
mov
cmpsl
mov
lahf
inc
fwait
scas
mov
inc
and
lcall
sbb
dec
mov
xchg
sub
mov
fwait
adc
pushf
cld
int
xor
fwait
xlat
scas
outsl
lret
insb
into
dec
sub
sub
lea
and
and
cld
push
vpunpcklqdq
pushf
jb
mov
push
decl
xor
stos
dec
sahf
adc
ja
mov
hlt
adc
clc
movsb
add
mov
xor
add
xlat
fucomip
fs
fcmovne
call
mov
xor
sub
jnp
mov
int
inc
sub
add
ljmp
rorl
movsl
jmp
jp
inc
out
popa
xor
lahf
or
mov
fmulp
pushf
mov
fstps
pop
in
mov
pop
cmp
outsb
pop
pushf
loope
or
or
cmovae
dec
pop
mov
fstpt
outsb
pop
xor
add
adcb
and
cwtl
mov
std
faddl
mov
or
cltd
pushf
push
sub
push
push
clc
pop
repz
add
fdiv
loope
inc
jno
cwtl
or
pop
inc
aas
cmp
and
pop
push
in
ret
fcmovbe
or
sbb
loope
inc
gs
std
subb
sahf
scas
mov
dec
adcl
repz
mov
add
mov
cmp
fcoms
mov
adc
gs
lret
fs
das
insb
into
or
jecxz
hlt
out
xlat
adc
inc
cld
pop
sti
dec
fmul
mov
mov
and
mov
sahf
adcl
arpl
and
dec
jl
insl
cmp
nop
shl
je
or
bound
add
and
test
jg
clc
xor
daa
popa
mov
loop
cltd
jns
jg
adc
lods
and
adc
iret
mov
fs
inc
cmp
push
scas
xchg
inc
sti
into
pop
mov
adc
push
addr16
push
add
addb
jnp
dec
sahf
sarb
js
mov
lahf
xor
or
jge
jnp
shlb
mov
mov
push
mov
pop
push
popa
sub
inc
out
sbb
pop
int
mov
stos
sub
sahf
adc
mov
loop
mov
mov
adc
dec
adc
loopne
mov
xor
lret
or
mov
push
aas
stos
xlat
scas
dec
out
cmp
xorb
push
xchg
sahf
jns
mov
xor
repnz
fsubp
jae
xchg
mov
fnstenv
jg
xor
pop
pop
sub
jg
roll
sahf
adc
cmp
sti
inc
outsl
push
mov
mov
jl
adc
cmp
ss
dec
inc
or
push
cmp
pop
or
jmp
jb
bound
movsl
push
mov
dec
sbb
call
pushf
add
cmpsl
call
mov
jmp
addr16
loop
test
xor
insb
out
pop
popl
sub
movsl
adc
lcall
fldt
adc
mov
or
mov
push
jno
idivl
jmp
add
test
pushf
sub
or
mov
push
pop
inc
repz
stos
clc
sbb
test
fdivs
cmpsl
mov
lods
xorl
out
push
mov
lds
out
movsl
insb
push
jo
adc
cli
adc
clc
xor
scas
dec
jmp
lret
shrb
cmc
adc
and
inc
fwait
mov
lret
push
mov
sbb
cli
jbe
ss
scas
lds
mov
push
xchg
ret
pop
mov
jmp
adc
sub
push
xchg
mov
push
mov
daa
mov
jge
add
movsb
dec
popa
jge
outsb
test
flds
and
xchg
or
mov
push
lret
loop
push
ret
fadd
test
clc
aam
aaa
mov
jle
ror
in
ret
adc
js
push
fs
sub
mov
push
inc
mov
xchg
jno
sahf
gs
fcmovbe
and
jmp
or
in
mov
adc
popf
out
pop
movsl
jns
pop
push
push
jle
hlt
cmp
daa
sub
movsl
pop
jg
push
xor
stos
dec
or
outsb
mov
int3
bound
jbe
cld
mov
push
pushf
negb
data16
xor
xlat
inc
add
lret
xor
test
xlat
pop
stc
popa
les
je
sub
cmp
xor
out
aas
sbb
add
or
repnz
mov
cmpsb
sahf
xor
xchg
dec
and
sub
test
mov
dec
mov
nop
mov
int3
sub
imul
push
popa
mov
xor
jg
cmp
pop
scas
inc
inc
or
sbb
ret
inc
lea
dec
cmp
adc
push
mov
lods
stos
idivb
push
stos
xchg
adc
jmp
movsb
dec
jne
adc
xor
ljmp
adc
jl
jmp
sbb
xor
sbb
and
mov
sahf
test
pusha
xor
sarl
ja
fistpll
and
jne
in
aas
rcll
mov
mov
sbb
movsl
les
jp
imul
lret
gs
mov
mov
in
out
insb
jno
sub
sub
dec
into
lcall
aad
push
adc
push
adc
dec
insl
divb
int3
std
mov
loopne
lcall
adc
push
mov
imulb
jle
sbb
mov
jg
das
push
xchg
mov
lea
pop
iret
addb
ja
xor
cli
dec
add
dec
lods
mov
aas
mov
mov
mov
lea
aad
rol
jmp
mov
aam
xor
dec
daa
or
inc
repnz
in
cmp
adc
pop
sahf
push
aaa
push
cmpsb
xlat
mov
fwait
bound
mov
cmp
les
sbb
adc
and
cmc
movsl
sbb
fcmovbe
iret
dec
lea
lock
or
jl
or
cli
sub
dec
pop
mov
lcall
pop
sbb
pop
sbb
clc
les
sbb
clc
in
xchg
test
mov
inc
jmp
pop
mov
mov
fbstp
inc
emms
jns
cmp
pop
es
push
xchg
test
test
dec
scas
ficomps
dec
in
xor
jmp
les
jg
xor
movsb
xchg
xchg
aas
pop
adc
cli
dec
in
pop
xor
mov
sbb
das
aas
mov
gs
and
ficompl
mov
pop
sbb
sbb
cmpl
add
xchg
cs
ds
mov
out
fwait
aas
adc
repz
aad
cmp
loopne
loopne
in
test
xor
int3
and
in
xchg
jge
test
outsl
into
push
aad
push
sbb
or
mov
mov
jb
add
lods
jae
and
pusha
fidivrs
push
add
xchg
repz
cmp
adc
int
daa
lock
insb
lret
mov
push
cmp
hlt
jl
scas
frstor
jbe
adc
neg
jl
bound
sub
mov
pop
subb
push
inc
shl
ret
jno
inc
cmpsl
xchg
jns
fidivrl
xor
stos
lahf
fwait
push
movq
ret
push
sub
mov
sbb
add
notl
jecxz
push
outsb
xor
stc
inc
cmp
push
pop
cmp
das
add
and
stos
pop
stos
jmp
push
xchg
sub
pop
mov
or
loop
mov
scas
cs
icebp
lcall
hlt
or
xor
sub
lock
xor
in
xor
cs
shrl
fisttpl
rorb
scas
push
test
aaa
adc
aaa
daa
mov
shr
ffree
push
push
out
cmc
pop
push
arpl
sbb
movsb
or
xchg
fimull
push
jnp
and
or
pop
into
adc
aam
pop
rcll
inc
sbb
fiadds
ret
inc
mov
inc
or
negb
cli
sub
dec
mov
jg
add
mov
cmpsl
xchg
and
lds
jg
into
adc
adc
std
adc
mov
int3
jmp
inc
addb
stc
mov
ds
xchg
test
push
enter
sar
andl
das
inc
clc
mov
sti
mov
bound
jl
es
mov
mov
test
mov
pop
jmp
stos
addb
outsl
nop
cmp
fsubp
cltd
mov
push
std
insb
shlb
jb
sub
je
or
or
imul
cmp
cmp
test
or
push
or
cmp
test
aam
and
lcall
jp
rcll
push
and
cmp
mov
jg
repnz
adc
cmp
push
cs
dec
add
das
adc
test
cmp
and
fisttps
gs
or
mov
push
jo
ret
pusha
xchg
jno
jg
or
das
fidivs
lods
cmp
xor
dec
mov
lods
cwtl
test
jmp
hlt
jae
inc
xor
mov
dec
stos
cmpsb
xor
lret
fstpl
xchg
jg
sahf
mov
je
fwait
jbe
les
mov
lahf
xchg
lock
js
adc
xchg
iret
add
fwait
fisubrs
icebp
lds
pop
pop
pop
add
or
inc
dec
pop
dec
in
push
pop
sbb
jb
or
orl
sbb
repnz
rclb
mov
repnz
lret
jp
ret
mov
insl
std
in
fmull
sub
adc
mov
push
fiadds
arpl
dec
into
push
xchg
xchg
sub
movsl
test
arpl
loope
mov
sbb
xlat
mov
aam
or
inc
out
lcall
xor
lret
insl
add
jbe
mov
test
int3
int
mov
into
cmp
dec
lods
lock
sbb
fmull
jl
shl
jns
sub
nop
ja
sbb
add
subb
ljmp
adc
lahf
paddd
inc
shlb
fs
pop
stc
addr16
xor
cmp
mov
shl
inc
lds
dec
inc
imul
jmp
or
cmc
add
cmp
push
test
mov
jl
paddusw
pop
scas
add
sti
into
jle
dec
mov
mov
push
push
sbb
hlt
cld
sbb
pop
mov
jns
jl
push
mov
mov
ljmp
data16
mov
arpl
sbb
jge
adc
xchg
dec
xor
out
icebp
ss
or
inc
sub
pop
xor
sbb
dec
rolb
sub
ds
jge
add
sub
rcl
ja
not
aas
in
add
push
mov
cmp
push
das
aaa
xchg
jo
pop
ret
sbb
push
fwait
push
or
repz
icebp
cmp
fcmovu
sete
nop
cmp
nop
rdmsr
push
and
fucomi
inc
sbb
xor
std
jmp
xor
in
sub
mov
cmp
loopne
int
pop
add
jmp
push
rolb
mov
inc
pop
js
test
pop
push
imul
out
and
sbb
fldenv
test
jp
or
sub
push
out
out
sbb
fisttpl
jle
and
mov
sub
ret
xor
mov
mov
scas
cs
out
adc
rcll
jb
inc
popa
aad
cmp
das
xor
add
cmp
sbb
cmp
cli
sbbb
mov
insl
out
jg
into
mov
cmc
push
imul
fsubrs
xchg
push
or
clc
jg
iret
dec
push
jnp
stc
push
push
mov
stc
fsubl
mov
gs
popa
data16
fisubl
rorl
rep
xchg
cmp
cli
xchg
test
jp
xchg
mov
dec
nop
fistps
scas
xorb
xchg
cltd
pop
dec
in
xchg
mov
or
sti
mov
cmp
mov
dec
stos
inc
mov
and
push
or
outsb
mov
jle
les
mov
inc
iret
loop
loope
mov
call
je
jmp
fcmovnb
adc
adc
cmp
xlat
mov
popf
fs
loope
mov
fs
shl
repz
jb
pop
xor
imul
mov
sub
addb
imul
xor
jbe
or
popf
adc
les
mov
stos
mov
or
jp
mov
and
lcall
lret
loopne
popa
xchg
pop
pop
out
jle
push
or
adc
inc
xchg
testl
jp
dec
inc
push
lret
ja
xor
das
xchg
out
mov
outsb
jp
mulb
mov
dec
add
cmc
lret
aad
jne
faddl
lods
mov
inc
filds
jnp
sbbb
adc
cmc
lds
push
jge
xchg
jmp
addl
xchg
inc
insl
add
mov
test
mov
push
mov
xlat
push
xchg
sub
sbb
xor
ja
adc
cmpsb
sahf
inc
adc
add
outsl
sbb
inc
dec
and
jp
jge
std
cmp
push
jo
scas
and
sub
add
stos
cmp
les
stc
push
mov
or
xchg
adc
adc
mov
pop
fisubrl
sbb
sbb
movsb
enter
mov
test
dec
pusha
cmp
test
iret
pop
stos
adc
imul
cmpsb
dec
mov
xor
mov
push
adc
and
push
jb
xor
cltd
adc
loope
iret
dec
pop
imul
mov
fcoml
sub
add
rorb
sbb
mov
ret
adc
cmp
adc
jb
loopne
jbe
jne
popf
adc
in
imul
xor
lods
xlat
pop
cmp
mov
ficoml
push
jbe
jp
push
repz
in
lods
pop
fwait
sti
push
push
pop
pusha
ret
pop
fdivp
xchg
adc
or
mov
jp
cli
push
rorb
test
mov
dec
movsl
ss
sahf
xchg
add
jnp
pusha
xor
pslld
adc
int3
xchg
in
adc
jo
adc
ror
inc
mov
call
push
shlb
loopne
mov
int3
push
and
test
cmp
mov
loop
xor
adc
sub
in
add
pushf
inc
push
aad
cmp
repnz
inc
push
daa
and
or
and
gs
cltd
fmuls
clc
insb
dec
mov
cs
rclb
xchg
jno
aam
xor
pushf
fmul
imul
jns
sbb
sti
andl
jns
subl
xchg
fiaddl
inc
pop
sub
sub
sahf
dec
out
add
cli
test
out
push
pusha
xor
jmp
pop
fnstenv
ret
fs
mov
sbb
xorb
or
add
push
std
jp,pn
or
push
xor
in
add
aaa
push
mov
pop
push
xchg
and
dec
sbb
jbe
movsb
stos
and
xor
fisubl
movsl
mov
rclb
xchg
sub
jmp
mov
sahf
mov
int
cld
out
aas
ficompl
imul
mov
cmc
popf
or
mov
test
and
hlt
in
push
or
inc
cmp
pop
mov
add
pop
xchg
data16
xchg
inc
ret
jns
xor
or
out
es
aad
filds
ficoml
adc
jb
sub
or
rcll
scas
lret
scas
outsb
pop
in
and
out
inc
fisubrl
dec
arpl
pop
out
loop
rcrb
inc
cli
into
xor
int
lret
aas
out
xchg
push
sub
dec
inc
sub
xchg
sbb
add
shlb
push
in
jbe
push
scas
jmp
push
mov
xor
push
fidivl
mov
pushw
xor
stos
imul
lods
jnp
rorl
mov
das
addr16
mov
pop
mov
and
mov
sub
arpl
dec
clc
pop
pop
insl
xor
out
mov
inc
mov
cld
loop
stos
sub
fs
and
repnz
jnp
rcrl
push
fcomps
jb
mov
xor
push
push
dec
dec
xchg
adc
or
clc
loopnew
jne
subb
movsl
pop
jb
pop
sahf
test
dec
pop
stos
aaa
mul
push
dec
popa
cld
fsts
mov
faddl
jge
fcmovne
addr16
pusha
adc
lcall
ror
xor
sahf
cwtl
mov
xchg
mov
mov
adc
mov
xchg
mov
adc
negl
push
xor
sti
fisubs
pop
mov
or
aas
adc
mov
fimull
inc
or
sbb
lret
xchg
lcall
bnd
out
cmpsl
pop
mov
mov
loop
ds
outsl
rcll
jne
inc
sbb
mov
xchg
xlat
adcl
insb
repnz
dec
xor
jmp
ljmp
xchg
stc
jge
or
add
or
out
jmp
into
fwait
pop
xchg
or
pop
pushf
leave
aaa
imul
imul
push
mov
mov
stos
pop
or
xor
in
jne
pop
ret
cmp
sbb
movsl
fnstsw
lahf
or
jbe
jp
call
icebp
packuswb
les
mov
pop
pop
xchg
aas
in
pop
cmpsb
iret
sub
lret
pop
dec
sbb
roll
jno
lret
stos
jmp
add
mov
rcll
inc
in
inc
shr
or
int
inc
fwait
and
test
xor
movsb
cmp
lds
dec
fbstp
jo
loope
leave
nop
rolb
mov
cmp
push
push
std
xchg
lods
subb
mov
push
mov
xchg
movsl
adc
sar
mov
cmc
lods
pop
mov
add
mov
sahf
sbb
xchg
lcall
bound
xchg
mov
lds
shrb
mov
cmp
xchg
jbe
xchg
jns
movsb
jns
aad
pop
pop
adc
inc
mov
aas
or
xchg
and
leave
std
jbe
cmp
imul
movsb
cmpsb
frstor
jp
lret
mov
mov
popf
seta
inc
mov
movsl
cs
xchg
sbb
cmp
aad
inc
test
popa
dec
inc
sarb
cmp
dec
sbb
xor
sahf
ret
movsl
jl
jnp
je
pushf
xor
sbb
xchg
les
or
data16
xor
daa
mov
subb
add
pushf
xchg
cmp
sbbb
scas
sub
rorb
jne
adc
mov
into
mov
aaa
and
andl
ljmp
add
push
sub
into
and
imul
imull
inc
rorb
neg
cltd
loop
into
cmp
inc
jno
aas
pushf
es
loope
cmp
in
mov
cli
add
bound
lret
sub
mov
adc
push
stos
pop
out
rcrl
xor
cmp
mov
mov
pop
js
jmp
mov
mov
rcl
add
fnsave
je
cmp
int
test
pop
popf
leave
inc
cwtl
xlat
pop
int
pop
adc
inc
pop
jge
mov
aaa
aam
push
jb
and
je
in
dec
cmpsl
lret
fldt
jo
and
add
inc
loope
mov
jl
jae
outsl
cmpl
or
sub
cmp
addl
repnz
mov
aam
jp
jmp
daa
cli
je
and
jl
mov
das
xor
cmpsb
inc
push
add
outsb
inc
add
cmp
add
cmp
xchg
ljmp
pop
push
mov
inc
push
lret
rorl
int
enter
into
leave
cmp
int3
sub
je
popf
xor
cli
and
mov
js
pop
adc
add
xor
mov
mov
sahf
jecxz
ror
enter
push
filds
push
stc
popf
repz
lds
roll
lds
dec
lahf
or
jns
in
push
cmp
decb
and
push
xor
push
cmp
jo
adc
sub
aaa
imul
arpl
scas
cmp
jbe
sbb
mull
jb
leave
adc
push
mov
pop
mov
lods
adc
xor
ds
daa
rorl
jbe
inc
xchg
repz
scas
mov
sbb
dec
arpl
mov
mov
rorb
stos
data16
and
push
pop
jno
mov
clc
adc
jmp
sub
sbb
or
pop
lret
js
movsl
rol
lret
add
or
mov
in
inc
jnp
dec
or
adc
enter
cmp
std
mov
add
mov
dec
test
mov
mov
mov
pop
xor
mov
into
gs
cmp
testb
leave
mov
inc
repz
xor
xchg
gs
lret
jp
stos
xchg
and
or
insl
adc
ret
xor
int
test
add
stos
jnp
leave
xorb
and
insb
lahf
mov
dec
in
cmp
adc
jno
shll
jmp
sti
or
mov
pusha
jmp
push
into
dec
or
push
inc
jp
xor
pop
negb
mov
ljmp
sbb
pop
ljmp
jmp
stos
jp
mov
adc
sbb
insl
xor
inc
dec
cmp
add
push
inc
das
fwait
sti
cld
mov
dec
test
in
xchg
repz
add
bnd
or
pop
jl
fidivl
jmp
and
insb
mov
mov
sub
pushf
adc
cmc
adc
push
cmc
mov
xchg
outsb
mov
jle
negl
arpl
add
cmp
adc
or
pop
xorb
mov
nop
lock
lahf
push
dec
gs
inc
xlat
mov
inc
cmp
in
cmpsl
aad
stos
push
les
pop
adc
dec
adc
xchg
push
pushf
mov
jae
out
aam
mov
jecxz
test
cli
add
iret
sbb
addr16
adc
cs
fnstenv
mov
dec
insb
cmp
orl
jne
adc
out
ret
call
mov
cltd
sbb
sub
lahf
jbe
addr16
cmp
fistpll
jnp
push
and
cmpsl
push
mov
cltd
mov
xchg
push
icebp
pop
jne
xchg
mov
imul
in
fdivs
cltd
fmull
mov
stos
or
cltd
pusha
je
lret
pmulhuw
mov
andl
adc
insb
sahf
loop
shll
xor
jmp
incl
nop
in
sub
arpl
sbb
cmp
mov
cld
jae
push
pusha
rorb
mov
sbbb
adc
fsubr
pop
cmp
clc
push
jbe
dec
data16
into
stc
sbb
adc
pop
in
idivb
mov
push
repz
sbb
je
stos
addr16
out
pop
repnz
push
pop
xchg
sbbl
adc
decl
lods
leave
mov
sub
iret
loopne
mov
test
mov
shl
imul
cwtl
mov
arpl
loop
pushf
sub
jns
adc
mov
fnstsw
scas
add
int
and
in
xchg
scas
dec
add
int3
sbb
xlat
pop
sbb
fists
shrl
rclb
test
call
pop
pop
xchg
mov
dec
fnstsw
sbb
js
aam
ret
sbb
sbb
mov
hlt
ret
loopnew
sub
daa
leave
aam
push
add
mov
push
sub
pop
mov
rcr
push
repnz
lds
mov
mov
inc
push
mov
xlat
fildll
mov
push
loope
adc
test
cltd
lret
or
jno
xor
dec
and
dec
inc
leave
cmp
lock
jecxz
data16
adc
xor
mov
add
sub
xchg
mov
push
mov
and
push
jle
sub
xchg
mov
das
outsb
pop
fstl
ljmp
rorl
roll
jo
xchg
adc
adc
test
jge
dec
jbe
pop
cmpsl
and
fbstp
or
data16
push
add
jecxz
bnd
shlb
push
jo
mov
into
ljmp
pop
shll
and
test
xor
jle
xchg
mov
loopne
cli
pop
mov
adc
cli
imul
cwtl
fbstp
push
xchg
test
pushf
inc
fucomi
lcall
vmptrld
mov
jmp
inc
mov
inc
hlt
cmc
push
cmpsb
push
jmp
test
pop
mov
jne
das
movsb
imul
cmp
pusha
pop
cltd
lahf
fsubl
out
dec
cmp
out
fisubs
lret
mov
mov
das
iret
aam
dec
rol
mov
inc
mov
sub
cld
testb
jno
repz
xchg
jp
jno
icebp
cld
out
push
leave
push
add
cli
or
lods
adc
daa
js
mov
out
scas
pop
pushl
push
pop
rolb
sbb
aad
in
rol
inc
fidivrl
pop
cmpsl
aam
ljmp
push
mov
loop
xlat
pushf
movsl
ret
pop
sbb
shl
push
mov
sahf
push
incl
enter
movsb
and
adc
mov
cmp
mov
fwait
sbb
mov
push
jno
shlb
out
add
xor
xorl
mov
addr16
lret
iret
bound
xchg
fsts
xor
mov
insb
repz
push
jecxz
pop
int
and
shlb
xchg
pop
sar
lds
pop
fsubp
mov
gs
mov
cmp
lret
push
xor
mov
mov
hlt
dec
pop
shlb
into
jmp
test
inc
dec
in
cld
adc
cmpsb
add
ret
lock
inc
lret
outsb
xchg
hlt
or
pop
ljmp
mov
orl
sti
mov
sarb
xor
das
das
push
mov
bnd
nop
cs
adc
leave
dec
cmp
push
ss
xchg
cmp
ffree
mov
mov
addl
imul
mov
lock
xchg
fbstp
fistps
mov
mov
push
jno
adc
and
inc
cmp
movsl
rcrl
movsl
les
testl
gs
cmp
into
mov
jae
mov
ljmp
push
dec
aaa
or
popf
ja
stos
lods
sub
testl
mov
cmc
cmp
or
inc
adc
leave
push
test
call
push
xor
outsl
adc
push
add
jno
lock
xchg
loopne
cmp
js
jo
mov
sbb
lea
jnp
nop
aam
out
mov
xchg
or
mov
xchg
frstor
test
lods
lret
and
insb
or
sbb
dec
icebp
icebp
mov
xchg
ss
dec
mov
sbb
incb
das
push
fidivs
movsb
cwtl
mov
mov
or
arpl
fnsave
movsl
popf
jg
filds
lret
pop
cmp
test
push
mov
outsl
sub
lods
fnstsw
mov
call
stos
sub
inc
cmpl
faddl
mov
push
sahf
adc
push
addl
push
cmpsb
dec
xchg
sub
std
addr16
jb
in
jl
push
mov
mov
gs
adc
lret
insb
push
aaa
push
sti
dec
lret
out
or
lret
test
jg
lcall
fdecstp
pusha
adc
push
test
sbb
loope
jecxz
cmp
xchg
int
in
pop
imul
xorl
pop
jmp
push
mov
les
sahf
outsl
pusha
adc
into
pusha
aaa
and
adc
jmp
push
xor
inc
xor
mov
fnsave
ss
add
xchg
cltd
sahf
mov
lret
adc
rcll
aad
xor
mov
in
pop
dec
insb
push
mov
jo
jnp
imul
or
jg
cmp
pop
pop
inc
insb
cltd
nop
fwait
in
mov
cmp
mov
sbb
das
jns
mov
out
mov
cmp
push
xchg
rcll
pop
add
das
mov
inc
insb
movsl
test
in
add
inc
add
push
orl
dec
scas
xlat
inc
imul
and
sub
mov
shl
jmp
subl
xchg
outsb
setg
and
pop
fsubrl
or
push
int
mov
dec
shrl
repz
subl
repz
or
dec
arpl
xchg
mov
add
lock
cs
ja
mov
rclb
xchg
add
sub
xchg
sub
out
popa
dec
int
fsubr
xchg
call
jbe
cmp
ret
testl
mov
xchg
cmc
dec
cmp
cwtl
and
jno
in
mov
test
and
and
test
push
fsts
push
pop
subl
mov
stos
jmp
rclb
push
xor
shll
ja
aam
aad
xchg
sub
imul
mov
push
fsubs
mov
or
dec
nop
sbb
pushf
lret
and
mov
aam
cs
xchg
das
and
mov
add
xor
mov
les
out
mov
pop
inc
leave
test
stos
cmp
repnz
fidivrl
in
subl
push
bnd
insl
aaa
push
iret
sub
es
iret
push
inc
mov
xchg
push
adc
cmpsb
adc
inc
out
dec
pusha
mov
adc
int
jb
rcrl
mov
imul
arpl
divl
ret
cmpsl
xchg
mov
sbb
lahf
sbb
cli
test
add
test
mov
lds
lret
pushl
sarl
gs
imul
sub
adcb
dec
fistps
xorb
inc
or
mul
outsb
out
inc
pop
push
inc
sbb
push
arpl
aam
jmp
sahf
fistpll
loopne
and
pop
popf
scas
cld
xlat
sarb
clc
pop
sbb
adc
nop
or
jmp
lock
jo
sar
shlb
test
add
jmp
fidivl
lods
sbb
and
insl
inc
call
fwait
mov
sub
inc
cmpsb
push
fld
mov
lret
cmp
pop
jg
pop
mov
push
loopne
mov
subb
add
jle
mov
das
jbe
fwait
push
pop
xor
test
gs
jg
mov
jecxz
into
cld
and
inc
nop
push
lea
stc
lock
xchg
adc
push
mov
sub
lcall
inc
xchg
mov
sub
push
roll
mov
sti
arpl
add
es
sbb
sbb
mov
pusha
adc
sub
push
or
mov
mov
lods
jo
mov
aad
cmp
int
mov
mov
hlt
cmpsl
test
mov
jle
or
xor
add
push
leave
outsb
pop
ss
movsl
out
mov
lret
sbb
xchg
xor
mov
outsl
xchg
js
pushf
stc
lock
jns
xchg
mov
mov
out
ficoms
shll
push
adc
add
cmpsl
rcl
inc
pop
lock
push
je
fwait
hlt
jnp
dec
mov
jnp
mov
lods
inc
pop
or
popf
iret
in
mov
inc
push
fidivrs
sbb
xor
mov
jecxz
daa
das
rolb
dec
sti
add
loop
push
call
std
mulb
pop
sahf
addb
mov
lahf
js
xlat
out
cmc
ret
inc
cwtl
push
inc
lahf
mov
fcmove
adc
sahf
pop
rcl
xor
shlb
pop
lret
add
sbb
ja
mov
mov
ds
jmp
jb
cmp
cltd
add
cmpsl
int3
imul
cmpsb
imul
mov
mov
loop
cmp
test
xchg
push
add
int3
inc
mov
stc
mov
push
mov
stos
inc
pop
xchg
inc
pop
pop
shlb
cmc
jecxz
std
call
push
xor
push
pop
dec
fsubp
rcl
push
pushf
fisubrl
lcall
xchg
jb
repnz
xchg
adc
mov
out
in
mov
and
aad
mov
aas
mov
inc
inc
cmc
cmc
mov
int3
enter
faddl
dec
xchg
jno
in
aad
gs
out
pop
add
xor
lret
xchg
mov
outsb
loop
aaa
leave
push
int
and
mov
xchg
mov
test
sub
mov
mov
push
mov
into
ret
pop
std
das
xchg
push
leave
cmp
jns
fsubl
push
pop
dec
sub
and
cmp
mov
mov
cmc
or
dec
fisttps
jle
mov
mov
lahf
sbb
and
mov
dec
push
data16
loopne
dec
xor
rcrl
cmp
mov
dec
sbb
arpl
sbb
or
adc
in
aaa
pop
add
pop
mov
arpl
sub
iret
loopne
mov
xchg
sub
xor
push
mov
push
push
push
and
sub
pop
mov
xlat
fisubs
stos
cmpsb
mov
add
or
mov
inc
shlb
stc
cwtl
add
dec
jp
dec
out
jns
test
push
sbb
sub
fisubs
imul
enter
push
inc
dec
nop
xor
mov
xor
push
orb
sbb
pop
sub
or
ficompl
mov
pop
repz
pop
mov
jge
scas
fmull
mov
mov
jle
leave
daa
sbb
scas
test
dec
fs
int
inc
or
adc
pop
xor
mov
scas
fisubrs
adc
add
out
cmp
xlat
mov
ret
jbe
push
daa
addr16
cmp
inc
jb
pop
mov
inc
pop
std
ds
rcll
loopne
sub
add
in
inc
pusha
or
in
stc
arpl
pusha
pop
fcmovnbe
aas
and
mov
pop
pop
xchg
push
jbe
lods
cwtl
imul
adc
and
jne
lret
cmpsb
mov
mov
and
push
outsl
mov
add
pop
sbb
push
mov
xchg
sbb
xor
je
aaa
inc
insb
mov
sbb
sub
call
fisubrl
xor
jl
push
sbbl
ret
inc
push
sub
adc
cmp
loopne
ficomps
push
jb
loop
lea
cs
aaa
sahf
sbb
xchg
xchg
movsl
jno
mov
push
not
int3
cmp
sub
adc
push
sub
jb
cmpsl
ja
mov
push
inc
leave
enter
pop
in
mov
rolb
fbstp
inc
and
fisttps
fsubrl
mov
inc
pop
iret
mov
mov
mov
nopl
and
outsb
arpl
mov
add
pop
fmuls
loope
xor
dec
jecxz
push
cmc
addr16
daa
add
xor
xor
jmp
lcall
dec
xchg
lea
rorl
fsubl
cmpxchg
lahf
mov
and
pop
test
mov
ret
add
adc
sti
mov
adc
aas
fmulp
jnp
push
add
insl
negl
sbb
dec
repnz
mov
and
cmpsb
arpl
mov
popf
dec
in
hlt
jmp
mov
push
cmp
add
jbe
mov
js
or
jg
sub
lea
fmuls
cmp
sbb
fwait
lcall
or
sar
movsl
jle
sbb
push
movsl
enter
aas
mov
aad
push
scas
lea
cmp
aam
ljmp
add
mov
cmp
nop
insl
cwtl
inc
loop
adc
loop
or
jbe
cmp
pop
jne
pop
fimull
mov
jns
out
cmc
fisubs
insl
jns
popa
insl
ret
push
aaa
outsl
stos
scas
es
and
pusha
lea
mov
sub
int
jns
mov
mov
push
inc
fldlg2
sahf
jns
xchg
add
sbb
cmc
jg
xchg
jmp
inc
xchg
inc
push
movsw
lret
mov
subb
stos
push
jp
jbe
shlb
pop
xlat
pop
inc
mov
lcall
cmp
mov
jl
mov
dec
ljmp
pusha
xchg
stos
and
xlat
cmp
inc
inc
imul
add
pop
testb
jmp
fdivrp
pop
andl
sti
mov
insl
ja
xchg
das
fstp
inc
mov
cli
fldt
mov
fwait
sahf
pop
mov
mov
sub
xor
xor
in
xchg
mov
xchg
adc
cmp
ljmp
lea
sub
dec
arpl
iret
rcl
mov
scas
addr16
or
cmp
jno
fstps
xor
je
cmp
mov
in
and
ffree
out
xor
xchg
int
test
pop
xor
mov
idivl
pop
out
mov
ds
adc
jg
call
daa
dec
loope
push
test
xlat
and
push
mov
jo
sub
sti
xchg
emms
lock
pop
cmc
inc
call
mov
mov
and
or
sub
inc
lods
out
rcl
pop
mov
mov
pop
and
xchg
inc
jg
inc
int3
xchg
xchg
mov
and
and
and
rorl
int3
cs
or
cmp
xlat
add
add
mov
adc
or
xchg
or
inc
ja
xor
fdivl
cmp
fwait
jg
xchg
pop
ficoms
imul
cmpsl
inc
dec
or
push
cmp
pop
fisubrl
sub
jno
mov
adc
add
fxch
je
sahf
das
fcmovnu
pop
lock
mov
pop
jp
pop
pop
xor
inc
aad
jge
ret
mov
fcomps
and
jnp
sub
pop
add
test
in
clc
adcl
repz
sti
in
xor
into
scas
and
pop
shll
bound
mov
mov
xchg
cmp
mov
jae
and
jmp
jb
test
xchg
push
mov
inc
mov
stos
stos
leave
enter
fcompl
ds
push
iret
movd
sub
cmp
dec
or
in
pusha
pushf
pop
mov
jmp
andb
add
cltd
dec
pop
mov
js
adc
lret
push
mov
mov
js
es
sbb
and
adc
fs
dec
push
mov
mov
iret
int
das
neg
or
push
stos
dec
adcb
out
shrl
mov
fidivl
and
es
pop
pop
adc
insl
push
fsubs
pop
or
mov
leave
add
mov
pop
inc
scas
inc
add
jp
push
call
insl
insb
clc
imull
add
ja
mov
sti
add
or
xor
int3
sbb
decb
jecxz
xchg
out
imul
out
xor
popa
pop
xor
rorb
and
std
aam
jae
inc
push
and
push
fistps
sub
jmp
mov
movsb
sub
out
je
daa
adc
shl
pop
inc
les
sti
ljmp
mov
lret
pusha
daa
mov
xchg
scas
pop
inc
mov
sbbl
rorl
mov
sbb
int3
push
and
and
adc
push
xor
je
fs
lret
lods
ja
add
bound
sbb
loopne
add
or
jge
jae
mov
mov
popf
mov
push
pop
cmpsl
mov
xchg
dec
or
xor
sahf
sti
jp
sub
jg
jnp
xchg
cltd
push
dec
neg
adc
mov
mov
cmp
fstpt
jae,pn
dec
neg
pop
adc
pop
int3
mov
and
jbe
xor
mul
dec
fnstcw
lcall
sbb
dec
pop
in
pop
push
lods
jo
pop
daa
cmp
mov
or
sbb
es
mov
fdivr
pop
mov
pushf
xor
jo
sub
push
lods
or
xorb
arpl
fsubrl
pop
in
es
andb
data16
insb
inc
mov
cmp
sbb
jg
xchg
loope
cmp
cmp
stos
test
notb
fildll
je
call
push
jnp
lret
mov
dec
or
cmpsl
jg
jge
out
jo
dec
cmp
ss
mov
lock
enter
rcrb
scas
fmul
int
add
push
std
cs
jecxz
bound
pop
fists
mov
mov
pop
lret
inc
fwait
jg
or
sub
imul
push
das
iret
std
dec
xchg
cmpsl
pusha
sub
push
mov
iret
clc
icebp
fs
xchg
das
aad
stc
shr
daa
jl
xchg
mov
in
stos
xor
jge
push
pop
inc
inc
dec
outsb
lods
add
test
mov
outsb
jno
lret
sbb
aam
cmp
lock
pop
in
cld
jle
cmp
bound
fwait
cld
lea
mov
cmp
int
idivb
pop
lds
cmp
dec
fs
ret
push
sub
mov
imul
add
test
out
add
js
ret
nop
or
xchg
sbb
xchg
sub
bound
pop
adc
jmp
adc
adc
xchg
cmp
test
mov
xor
or
into
fimuls
inc
and
jle
mov
mov
sbb
int
xor
adc
loopne
arpl
jge
mov
cli
imul
das
insb
scas
jbe
mov
rcrb
arpl
bound
call
loopne
push
aas
in
inc
push
fldcw
add
fiadds
daa
mov
dec
push
pop
data16
inc
insl
test
adc
jp
add
daa
mov
or
mov
jmp
dec
add
cmp
jl
xorl
jae
pop
dec
inc
scas
dec
loopne,pt
test
out
inc
into
mov
mov
sbb
iret
mov
ss
mov
sub
or
sbb
rcl
inc
daa
mov
je
pushf
mov
std
adcl
shll
pop
push
sahf
lret
addr16
and
ds
mov
aad
mov
pop
xchg
mov
cs
jmp
outsb
rcr
int
jmp
cmp
outsl
fdivrl
insl
stos
pushf
xchg
adc
out
test
sahf
in
je
rorb
and
arpl
scas
xlat
or
mov
adc
mov
mov
cwtl
mov
aam
notl
jb
xchg
xchg
push
jecxz
dec
mov
stos
pushf
fidivrl
pcmpeqb
cmc
les
mov
adc
in
jp
and
xor
jb
jae
in
jb
std
scas
pcmpgtd
setnp
xchg
jae
jb
sub
dec
jbe
mov
jp
push
stos
push
sbb
xchg
jecxz
jg
push
dec
sahf
pop
inc
push
xchg
lret
js
pop
cmc
or
cmp
repnz
aas
pop
dec
or
dec
xchg
addr16
or
sub
push
scas
jae
xchg
insl
ret
jne
push
jl
movsb
in
cwtl
in
vpackssdw
mov
pushf
add
cmp
pushl
insb
sbb
push
add
sarb
cli
mov
jp
test
mov
push
sub
or
jo
add
xor
int
fildll
push
nop
ja
push
mov
scas
mov
mov
and
out
dec
subl
pop
aaa
shlb
adc
push
jp
xchg
fiaddl
inc
into
es
jl
lods
mov
push
mov
xor
clc
cli
fists
cli
loopne
cli
jg
pop
lods
xor
movsb
sbb
or
pop
pop
xchg
mov
and
and
jns
mov
xchg
xchg
lea
popf
xchg
stos
cltd
ret
fucomi
mov
add
fists
stos
inc
loop
in
push
dec
js
stos
stos
test
jnp
pushf
insb
ret
mov
sahf
into
jge
lock
mov
test
pop
inc
sub
fsubrl
scas
arpl
cltd
mov
jmp
vpaddsb
das
out
mov
roll
cmp
dec
xor
aaa
pop
xchg
sbb
rep
popa
andl
xchg
lock
arpl
sub
shrb
lret
filds
cmpsb
or
sbb
mov
ja
push
fidivrs
insl
loope
sti
dec
push
dec
or
mov
jl
ret
cmpsb
repnz
aad
imul
sbb
mov
or
stc
hlt
shlb
movb
mov
jnp
xchg
jb
xchg
xchg
or
sub
sbb
xchg
je
mov
loop
out
adc
ret
or
jb
sbb
in
movsl
mov
push
mov
rclb
add
sbb
mov
mov
adc
xor
push
push
flds
jl
lock
xchg
outsl
inc
dec
dec
scas
sahf
pusha
mov
mov
dec
es
test
fldcw
scas
imulb
inc
inc
pop
or
jle
pop
mov
loopne
and
add
aas
cmpsl
xchg
popa
mov
lods
ss
mov
adcl
lret
ret
or
hlt
fnstcw
sub
mov
outsb
xor
dec
xchg
mov
push
das
imul
faddl
icebp
rorl
or
mov
lahf
inc
dec
ret
xchg
pusha
mov
pushf
lea
jae
mov
aad
sti
push
mov
repz
aad
sub
insb
xor
xor
add
cs
or
fidivs
in
aaa
mov
jne
sub
xchg
in
sub
clc
inc
add
xchg
in
or
lahf
cld
into
imul
adc
jae
cs
fisubl
cmp
cmp
or
lods
neg
dec
into
or
mov
loop
imul
fstpl
in
fsub
out
pop
mov
fldcw
inc
das
and
fsubl
popa
in
lcall
cmpsl
pop
out
mov
scas
enter
cmc
test
pop
pop
fisttpll
jmp
into
je
mov
cs
aaa
lret
sub
daa
cmp
xchg
repnz
jecxz
fwait
nop
cmp
jbe
add
cs
add
les
mov
xchg
aas
outsl
lods
lahf
dec
xor
in
sub
shll
push
leave
pop
inc
sar
push
mov
mov
add
jl
dec
mov
dec
sahf
outsb
lods
mov
and
stc
jle
insb
outsb
jnp
cmc
sbb
rorl
mov
ja
lods
pop
lock
shll
xor
push
pushf
icebp
dec
sar
add
movsb
or
insb
xor
out
cld
fwait
test
cmpsb
jnp
and
outsb
mov
lods
add
in
xchg
mov
jae
call
push
lcall
add
sbb
ja
pusha
stos
or
inc
imul
in
mov
iret
inc
daa
push
fisttps
loopne
push
adcb
loop
inc
mov
test
movsl
jne
aas
mov
sbb
iret
hlt
add
clc
push
cmp
testl
xchg
and
lods
call
in
pop
push
sub
or
sub
sar
or
inc
fwait
mov
cwtl
mov
stos
pusha
cltd
fs
pop
push
jne
lock
sub
adc
jg
das
fcmovnbe
dec
push
cmp
shrb
mov
xchg
pop
mov
pop
inc
jno
in
arpl
inc
cli
stc
lret
jae
mov
or
popa
sub
inc
or
sub
mov
cmp
or
dec
push
dec
mov
jle
lods
shlb
repnz
jb
mov
outsl
test
lcall
adc
cld
test
push
xor
xlat
mov
ret
sbb
adc
inc
test
lea
adc
fnsave
and
xor
mov
mov
rcrl
cltd
push
lret
cltd
adc
mov
cmp
dec
cmp
inc
pop
sahf
add
movsl
dec
jg
scas
fisubl
or
int
inc
je
mov
push
test
push
cmp
push
loope
rcll
sbb
mov
add
mov
addr16
lret
sbb
and
or
sbb
pop
popa
xor
test
push
aas
cltd
je
arpl
addr16
mov
adc
jbe
cs
cmp
or
jmp
add
fldenv
xchg
push
pop
loope
lods
jge
aaa
push
cmp
int
test
sbb
push
push
cs
pop
in
cs
fwait
xor
sbb
or
clc
jnp
inc
adc
into
aas
int
je
repz
stos
xor
int3
mov
fdivl
icebp
int
cmp
adc
cmp
inc
mov
jns
cmpsl
ds
jecxz
push
pop
nop
int3
adc
push
cmp
cmp
push
lea
mov
int
cli
xchg
push
in
leave
lds
test
cltd
adc
lds
xlat
push
cmp
push
ret
inc
lcall
mov
stc
push
sar
jmp
adc
out
push
aas
xor
push
xchg
sbb
nop
jo
xchg
cmpsb
jmp
stos
jne
lcall
pop
movsl
daa
jns
repz
inc
mov
scas
stos
jmp
xor
add
sub
in
icebp
inc
mov
sbb
in
aam
xor
sbb
jl
icebp
out
andl
adc
jbe
push
inc
ficoms
imul
dec
test
hlt
lods
push
sbb
adc
pop
lea
push
fstpl
xchg
ss
fwait
shrb
jnp
mov
add
xchg
sub
mov
inc
ret
in
aaa
out
jb
aaa
mov
cmp
jle
mov
leave
mov
adc
cmpsb
pop
fstps
xor
inc
sub
ss
scas
or
fsubrl
mov
movsb
xchg
mov
jns
mov
adc
ljmp
sbb
cli
inc
pushf
pop
popa
in
test
mov
xor
xchg
ss
dec
out
sub
movsl
nop
xchg
mov
dec
insb
arpl
cmpsl
outsl
ret
ret
mov
pop
sub
les
ljmp
cmp
cmpb
and
pusha
aam
pop
hlt
pop
in
inc
cmp
cmp
lock
inc
add
pop
cmpsb
stc
fistl
xchg
sahf
xchg
mov
dec
add
jno
or
mov
insl
add
loope
hlt
hlt
mov
mov
jmp
cld
jle
push
sub
pop
out
inc
ljmp
pop
das
or
into
xchg
mov
out
dec
pop
std
sti
ds
stos
cmp
jo
mov
jno
add
xchg
adc
pop
inc
test
fnstcw
fdivl
mov
xor
nop
cmp
or
push
push
loopne
pop
arpl
mov
inc
jno
push
jl
cmp
outsb
sub
mov
icebp
sbb
sub
xchg
push
pop
push
mov
push
scas
mov
cmc
movl
mov
int3
nop
in
jns
mov
mov
andl
iret
push
rorl
jmp
aam
cwtl
imul
iret
imul
inc
or
repnz
shlb
sub
cs
subb
sbb
test
fs
ljmp
orl
cli
pusha
push
pop
adcb
in
jne
pusha
fisubl
adc
mov
xchg
aaa
es
loopne
out
cltd
cmp
jb
lcall
dec
pop
pop
mov
sarl
xchg
mov
aam
movsl
inc
mov
decb
mov
aas
adcl
xchg
xchg
mov
push
or
add
push
pushf
dec
sbb
xor
lods
xchg
ret
cmp
aam
jae
mov
cmp
jg
ja
fistl
bnd
arpl
std
adc
out
in
jle
cmc
mov
pop
subl
sbb
xor
je
xchg
lret
lcall
cmc
or
loop
jbe
rol
orl
or
adc
mov
xchg
mov
push
pop
fmuls
and
roll
leave
mov
jmp
pop
xlat
scas
in
es
pop
notb
mov
inc
ds
mov
sub
enter
clc
enter
dec
fistps
loope
mov
or
test
call
movb
enter
out
add
sbb
mov
mov
sahf
inc
sbb
popl
adc
inc
insb
xchg
adc
sbb
cmc
movsb
push
les
cli
lcall
jo
stos
fwait
xlat
jle
adc
mov
sub
les
pop
rcl
push
mov
inc
xchg
cmpsb
ljmp
fidivrs
adc
icebp
xor
lds
push
cmp
inc
sub
mov
lret
std
rclb
mov
subl
repz
mov
pop
dec
mov
add
xchg
test
jo
int
or
mov
hlt
shrl
push
ret
pop
out
lret
cmp
cltd
cmp
out
mov
fs
sahf
mov
mov
adc
mov
push
rorb
movsl
pop
je
outsl
subl
lock
jecxz
mov
push
ret
mov
in
inc
aas
shrb
pop
pop
insb
fwait
shlb
lcall
in
es
mov
fistps
rol
sub
pop
sub
loop
outsl
mov
mov
loope
call
mov
clc
add
xchg
cld
dec
in
adc
outsl
cmpb
mov
cmp
jnp
xchg
divb
xchg
xor
ja
dec
and
cwtl
mov
insl
push
in
pusha
shlb
stc
sub
fsts
xchg
cs
xchg
jmp
mov
xor
and
sbb
lock
cmpl
or
aam
xor
cmp
xchg
sbb
pop
arpl
push
jnp
mov
dec
push
pop
cltd
push
int3
and
inc
inc
bound
mov
jp
mov
and
leave
sbb
xchg
movsl
int3
mov
out
call
jl
adcb
mov
jne
adc
sub
in
loop
aad
test
decl
lcall
cmp
jo
hlt
cli
push
xor
nop
mov
jo
shll
cmp
mov
pop
or
into
xlat
ret
jae
jae
mov
insl
mov
pop
sub
sbb
je
outsl
call
lods
pop
aam
and
sti
add
int
and
xor
cmp
and
loopne
in
push
sub
stos
jo
icebp
or
adc
hlt
aam
mov
imul
leave
cli
out
sub
enter
out
in
sbb
mov
sarb
pop
mov
loopne
inc
push
inc
or
push
dec
dec
aaa
lret
mov
add
cmp
mov
imul
cmp
xchg
mov
ret
in
mulb
xor
fdivr
hlt
cmp
lods
test
in
jne
aaa
jbe
dec
cld
pop
fdiv
sub
inc
pop
popf
mov
inc
call
clc
repnz
pushf
pop
push
xlat
mov
pop
push
hlt
pop
cmp
pop
pop
dec
scas
lods
ret
adc
mov
ret
shll
stos
sbb
xor
sbb
lahf
add
daa
popa
pushf
add
dec
inc
movsl
mov
outsb
mov
xchg
daa
mov
dec
and
lcall
push
pushf
add
fwait
push
fcomp
inc
lcall
lods
xchg
jle
push
arpl
stos
mov
pop
pop
and
xchg
push
jae
aas
lret
dec
lods
mov
nop
test
xchg
inc
cmpl
out
out
outsl
mov
add
cs
sub
cmp
pop
stos
nop
mov
mov
add
es
push
aam
cmc
cmc
xor
and
movsb
push
icebp
int
mov
xchg
loopne
cmp
das
add
repnz
xchg
rclb
test
filds
stos
sbb
cmpsb
scas
pushf
jnp
cmp
inc
xorl
mov
imul
push
xor
inc
leave
loope
insl
pop
enter
fldenv
sbb
mov
sbb
jl
push
into
or
aad
fistpl
aad
xchg
jecxz
push
scas
lods
xor
inc
mov
dec
sbb
inc
lret
test
jo
push
pop
jbe
bound
mov
iretw
lret
adc
push
fs
mov
jae
add
or
scas
push
stc
scas
pop
mov
xchg
movb
test
mov
fidivs
lea
sub
loope
std
fs
xchg
and
mov
icebp
daa
lahf
jl
mov
movsb
jnp
gs
sub
jmp
xchg
js
negb
push
leave
push
xor
fadds
lock
pop
push
shrb
push
xchg
bound
xchg
subb
fistpl
mov
std
cmp
lea
push
pop
sbb
jmp
mov
insb
pop
jb
popf
xor
dec
cli
xor
sbb
and
mov
mov
frstor
lods
fmull
jne
clc
fcmovnu
push
repnz
popl
int3
pop
adc
adc
ss
mov
andb
cwtl
inc
dec
push
mov
imul
push
sub
pop
jo
sar
rolb
jno
fwait
lret
in
jg
mov
sbb
movsl
js
lret
push
ja
jns
jle
into
jl
cmp
aaa
cli
inc
stos
mov
aad
sbb
hlt
pop
bound
dec
mov
xchg
and
or
into
xlat
adc
push
shr
int3
shrb
mov
outsl
in
scas
ja
push
movsl
inc
ret
imul
jl
mov
xchg
and
mov
in
pop
jmp
mov
xor
xchg
mov
imul
xlat
cmpsb
push
imul
jae
cmp
out
cmp
xor
test
mov
mov
sub
arpl
xchg
adc
adc
popa
rep
xor
js
test
mov
mov
mov
sub
inc
into
mov
pop
loop
cwtl
cmp
xchg
cwtl
out
lds
fwait
fwait
jne
jne
or
inc
sbb
push
xor
adc
push
mov
lock
mov
add
dec
xchg
pop
lods
aam
out
mov
cmc
lret
mov
or
push
ret
subb
mov
sbb
loopne
dec
mov
ficoms
mov
or
stos
loop
or
jle
inc
shrb
out
into
mov
cli
xor
mov
mov
inc
popf
aas
pop
insl
add
lret
ret
imul
out
shlb
mov
in
jge
loopne
lret
fs
inc
fucom
add
dec
mov
xchg
push
mov
mov
js
loopew
insl
decl
pop
out
popa
scas
inc
or
xor
jae
and
cli
pop
push
adc
xor
imul
stc
ljmp
lret
insl
lahf
add
lret
rcll
and
and
clc
xchg
xor
clc
mov
popa
inc
sahf
mov
mov
fiaddl
rclb
and
pop
add
loop
sub
cmp
pop
stc
add
loope
and
fiaddl
pop
shll
push
cmp
loop
imul
enter
or
or
dec
dec
aad
pop
adc
out
xor
xchg
movsl
inc
lret
and
ja
mul
xchg
or
loop
jbe
lods
xchg
fisubrl
mov
das
js
fimuls
popa
test
dec
adc
scas
shll
jne
repz
into
and
jmp
sarb
test
loop
int3
leave
mov
add
adcb
mov
test
in
inc
ljmp
mov
push
inc
arpl
out
cmpsb
adc
and
movsb
icebp
push
shl
aaa
lcall
xchg
push
je
movsl
test
sub
mov
repnz
aam
pop
std
cmp
mov
int3
push
js
or
jle
in
xchg
mov
loopne
call
and
jnp
mov
sbb
ret
dec
idiv
pusha
imulb
arpl
sbb
sbb
sub
idivl
lock
and
lock
aaa
js
adc
roll
fcompl
lahf
add
add
popa
push
cwtl
in
mov
push
fcoml
and
push
mov
xor
rclb
push
pop
imul
lods
jo
cmc
sub
mov
cmp
rolb
inc
adc
test
add
xor
leave
stos
mov
sbb
xor
addr16
out
sahf
sub
lret
adc
std
cmp
and
push
cmp
scas
inc
out
sub
nop
cmp
pop
addr16
out
addr16
inc
jl
mov
shr
je
pop
repz
sub
cs
pushf
pushf
sub
inc
out
xchg
cmp
fs
popf
jle
das
das
int
aaa
pop
inc
and
inc
mov
mov
cmp
mov
and
dec
ror
cmc
inc
add
or
or
jge
mov
repnz
pop
or
movsb
test
out
sub
insb
out
lods
fimull
add
push
leave
push
jb
mov
cmp
or
enter
movsb
fidivl
mov
and
mov
jle
mov
dec
mov
aam
inc
mov
and
rcr
fimuls
aad
nop
jno
mov
int3
inc
mov
push
jnp
addb
adc
arpl
test
and
test
cmp
rcl
fisttpl
cmp
fsts
scas
iret
xchg
mov
in
push
cmp
and
xor
dec
cld
adc
test
cmc
adc
insb
cmpsl
shrb
jmp
add
sbb
fnstenv
into
cmp
inc
addl
push
movsl
addr16
sub
mov
aas
cmp
push
jmp
out
mov
popf
mov
je
push
loopne
ljmp
mov
int
sub
mov
aad
imul
sub
xor
cmp
ficoml
jnp
into
enter
mov
sbb
cmp
sbb
xchg
xor
lcall
cmc
dec
roll
sub
mov
mov
aad
dec
arpl
aad
and
mov
mov
mov
mov
clc
adc
mov
test
ds
sbb
cld
aas
push
add
mov
and
dec
xchg
cmp
iret
stos
add
mov
add
js
mov
lret
inc
subl
jmp
or
sub
out
push
out
lods
scas
push
push
fs
jecxz
push
mov
icebp
pop
pop
in
std
dec
sbb
jp
mov
jle
inc
push
nop
out
mov
iret
mov
or
mov
mov
pushw
outsl
pop
mov
dec
mov
mov
rep
outsb
pop
outsb
sbb
or
shrb
inc
insl
aam
dec
pop
loop
inc
jbe
inc
sbb
push
int3
push
nop
jmp
sub
dec
lret
mulb
adc
outsb
mov
in
add
addb
dec
sbb
or
roll
cmp
in
scas
push
xchg
pop
mov
xchg
repnz
jecxz
add
add
les
mov
cmp
pushf
mov
or
ss
fiadds
aas
cmp
movsb
mov
bound
data16
pop
sub
add
and
fsubl
sbb
ficoml
lods
inc
cmpsl
fldl
or
jp
rorb
mov
popa
and
or
add
mov
sarl
jno
jge
push
xchg
inc
mov
inc
outsl
add
mov
mov
fldcw
in
pop
aas
bound
mov
inc
out
or
pop
pop
in
add
push
jno
out
daa
and
fisttpll
pop
cmp
dec
adc
je
aas
mov
imul
sub
fsub
jge
xor
shll
or
and
iret
mov
pop
push
and
jo
xchg
add
add
mov
stos
xor
add
or
xor
out
mov
mov
xchg
add
jo
rcrl
mov
imul
cmp
shrb
inc
das
bound
add
enter
nop
and
insl
andb
xor
test
jge
icebp
outsb
lock
xchg
iret
lret
repnz
in
test
jecxz
and
cld
xchg
mov
pop
jns
mov
sbb
jno
outsl
push
inc
jo
loopne
cwtl
xchg
lret
sahf
sub
loop
sub
cs
mov
inc
and
mov
and
cltd
movsl
pop
das
sbb
iret
xchg
inc
fisttps
jae
add
fnstsw
mov
out
sti
mov
arpl
das
add
test
sarb
cmpsb
call
aam
xchg
dec
aas
shrb
jge
ljmp
jnp
aas
stc
ds
mov
sbb
push
ficompl
cwtl
mov
sbb
or
outsl
dec
sub
mov
rorl
and
mov
setns
rcr
xor
lock
shll
jp
stos
lods
loope
jnp
sbb
sbb
xchg
jae
into
mov
cmp
pop
mov
repnz
addr16
stc
jns
pushf
scas
xor
je
pop
add
cmpsl
addr16
iret
sub
xor
push
outsl
pushf
fwait
adc
out
fistpll
lods
jne
push
fdivr
dec
xchg
sbbl
out
ja
lret
push
mov
cli
push
pop
cmpsl
repz
push
jl
and
mov
test
add
mov
cld
mov
inc
jle
xchg
pop
les
jne
bound
jnp
movsb
pop
mov
xor
movsb
cmp
mov
mov
mov
sti
cmp
clc
push
lods
mov
out
icebp
xchg
sbb
shl
andb
add
push
outsl
xchg
mov
mov
xor
sub
inc
and
cmp
std
sub
jle
int3
push
cmc
or
out
cmp
stos
lahf
dec
jecxz
jbe
call
sub
insb
mov
in
pop
insl
shl
push
stos
pop
outsb
aam
jbe
popa
xchg
mov
xor
imul
call
lods
jbe
daa
jle
mov
mov
loope
mov
testb
pop
pop
sbb
mov
bound
sbbl
icebp
icebp
jmp
in
mov
sbb
cmpsl
and
cmpsb
faddp
enter
jecxz
fcoml
inc
repz
or
or
mov
add
cmp
xor
cmp
dec
in
push
jecxz
or
repz
sub
popa
out
pop
mov
mov
out
ja
add
mov
mov
sub
xor
push
ret
xchg
cmpsb
das
fisubs
in
and
imul
sbb
adc
sbb
sbb
insb
ret
imul
jo
inc
push
dec
jns
imul
lret
es
sbb
pop
xchg
cmpsl
pop
xor
lcall
shll
roll
dec
inc
imul
scas
mov
sub
and
lds
inc
ds
dec
lds
sbb
and
adc
loop
call
mov
jno
xchg
sub
dec
pop
outsl
pop
movsb
aad
aad
mov
mov
out
out
ret
shl
add
push
push
in
pop
imul
jg
xchg
mov
imul
cmp
add
sbb
push
jg
mov
es
aaa
test
adc
adc
jecxz
stos
fisttps
cld
sbb
int
loopne
ror
sahf
push
and
insl
dec
cwtl
push
daa
sbb
call
pop
insl
fstpl
andb
dec
lds
clc
inc
xor
xchg
fsubs
dec
sbb
or
mov
aas
adc
push
push
sbb
or
push
or
push
jo
aad
or
push
fwait
xchg
or
cltd
dec
jnp
icebp
push
pop
push
enter
int
xor
xchg
dec
xlat
mov
inc
or
mov
repnz
and
pop
out
test
clc
dec
sbbb
add
cltd
sbb
dec
movsb
adc
sub
adc
jecxz
mov
xor
and
xchg
sti
push
scas
imul
jno
out
dec
ss
inc
femms
cmpsb
std
leave
daa
fwait
notb
scas
mov
push
shll
mov
push
xchg
xchg
lods
sbb
ljmp
mov
test
mov
ljmp
cmpsl
inc
sahf
xor
mov
mov
mov
mov
xchg
jns
mov
jl
imul
lods
daa
mov
rcrb
addr16
xor
push
repz
cmp
inc
xorb
popf
sub
xchg
ljmp
mov
out
mov
adc
dec
int3
cmp
fisubs
sub
subl
icebp
pop
and
sarl
cmp
test
mov
aam
dec
jge
out
sbb
mov
test
sbb
les
test
test
sbbl
lock
insb
pushf
and
fadds
or
push
cmc
dec
jmp
xchg
cmp
loopne
in
mov
out
test
sti
cmp
pusha
xlat
xor
rolb
lret
popa
or
repz
jmp
fwait
mov
inc
mov
rorb
repnz
das
mov
fdivrl
fwait
cmp
enter
xor
mov
ds
lcall
sahf
sbb
adc
push
mov
xor
in
xchg
mov
mov
xchg
pop
lds
ret
sarb
add
push
loopne
push
lods
mov
pop
movsl
dec
stos
lea
xchg
adc
dec
cli
push
outsb
jnp
jg
in
popa
xor
fs
add
mov
ljmp
call
jae
jo
aaa
sub
jmp
arpl
push
mov
jmp
xchg
cwtl
test
cmc
xchg
mov
lods
rclb
js
mov
stc
push
xchg
pop
inc
jl
push
mov
sbb
in
pop
je
call
sbb
ljmp
or
pop
sub
mov
cmp
or
popf
cmp
mov
rcrb
fs
jns
or
cltd
pop
jns
lock
subl
add
call
inc
dec
stos
in
add
jmp
rolb
xchg
cmp
mov
or
cmp
repnz
enter
mov
xchg
pop
sbb
and
and
data16
shlb
pop
arpl
mov
xchg
fiaddl
scas
mov
dec
sbb
insl
arpl
adc
jae
mov
and
sbb
pop
insl
inc
loop
fwait
pop
mov
daa
cli
stc
mov
lret
or
aaa
mov
in
cmp
push
fxch
mov
lcall
and
push
outsl
jbe
jmp
jne
lods
imul
pop
subb
xor
out
js
cs
mov
daa
call
je
in
pusha
pushf
rorl
sbb
ffreep
das
mov
test
int3
cmpb
test
jnp
cmp
dec
in
cld
aaa
test
mov
test
mov
mov
testb
cwtl
test
rcr
cmp
lahf
ja
mov
xchg
or
mov
cmp
cmpsl
mov
mov
movsb
test
lods
mov
out
inc
mov
inc
mov
data16
les
push
jle
dec
ficomps
in
js
sarl
imul
clc
test
frstor
xor
out
xor
cmp
mov
dec
ret
jbe
jg
jmp
movsl
and
dec
xchg
imul
push
jae
and
or
lcall
or
icebp
add
jl
sbb
leave
shlb
js
gs
rcr
adc
mov
fcoms
adc
test
xor
mov
mov
lcall
xor
sub
mov
ret
push
cmpsl
jnp
cmp
and
lahf
int3
jae
insl
lods
ja
and
inc
test
jbe
lock
repz
loope
ret
add
push
xchg
data16
or
pop
and
out
nop
fimuls
shl
sub
jmp
cmp
out
shll
adc
ljmp
xchg
ja
shrb
lock
bound
xchg
jbe
pushf
or
rcll
mov
xor
jl
jle
cli
stos
push
repz
and
or
or
rcl
sbb
imul
in
mov
lret
cmp
adc
inc
push
xchg
dec
push
or
mov
dec
xor
inc
add
or
jmp
add
inc
pop
cmp
out
mov
les
test
sub
mov
sub
js
cld
ret
push
fldcw
pop
adc
pop
mov
pushl
sub
out
fs
pop
repnz
dec
sbb
cmp
mov
xlat
shll
and
and
mov
push
push
sbb
push
xlat
mov
or
arpl
clc
fwait
icebp
inc
xchg
lds
cmp
popf
scas
jne
cmp
dec
movsl
fisttpl
push
sti
into
hlt
push
in
int
pop
push
push
mov
mov
add
jmp
subb
out
popa
mov
fistpl
std
xchg
push
fsubrl
adc
cld
mov
out
ret
aaa
pop
cmp
pusha
and
pop
lea
inc
testb
es
jge
xchg
adc
lahf
mov
mov
push
add
ljmp
ljmp
std
aaa
adc
mov
pop
mov
addr16
and
cld
adc
loop
pop
xchg
pop
lods
gs
add
xor
aad
add
mov
add
imul
xchg
loope
leave
mov
xchg
inc
sub
gs
adc
add
jbe
bound
lock
adc
inc
bound
add
xchg
sbb
cmp
cmp
dec
loope
jl
aad
fmuls
jmp
mov
repz
pop
scas
jl
das
sahf
jnp
inc
xor
sbb
adc
xchg
or
mov
sarb
pop
sub
repz
loop,pn
sbb
xor
sub
cs
cld
mov
dec
orb
or
test
ss
xorl
ret
insb
push
fwait
lcall
jmp
cmpsl
push
jecxz
cld
rcrl
cmp
mov
aam
sbb
sub
ret
pushf
fsubl
sahf
and
mov
sahf
rcl
int3
mov
ss
pop
mov
push
push
jnp
push
cmp
or
xchg
mov
mov
add
out
dec
insl
cmp
adc
xor
cltd
lcall
pushf
aad
sub
xchg
mov
popa
sub
mov
shl
mov
xchg
mov
jmp
flds
call
cmc
xchg
sbb
mov
and
jle
cmpsl
mov
pop
fnstcw
in
push
dec
in
ljmp
jo
jmp
ja
mov
adc
mov
fcmovnbe
fwait
push
dec
mov
lahf
negb
dec
push
imul
adc
sbb
jle
push
ds
packssdw
push
xchg
scas
mov
jnp
imul
fnstenv
add
fbld
dec
xor
or
xor
push
sub
xor
pop
popa
cld
rol
aaa
sub
dec
xchg
aad
sti
scas
push
psubsw
inc
add
fisubs
mov
mov
test
jnp
and
add
stos
push
xor
dec
cmpsl
adc
adc
push
inc
cltd
aaa
sub
xor
sub
aas
push
sbb
inc
push
adc
and
gs
or
ja
add
jne
mov
lret
adc
jl
xor
xlat
and
outsb
pop
int
popa
mov
pop
push
rorb
dec
fs
mov
cmp
mov
pushf
roll
push
movsl
sbb
call
jl
and
cwtl
ret
loop
dec
push
outsl
cmpsl
roll
add
aaa
jae
hlt
dec
lahf
movsl
stc
ljmp
nop
xchg
add
adc
ret
mov
pop
inc
fwait
mov
into
jo
loopne
mov
ss
or
pop
jl
add
xor
or
add
jns
mov
pop
dec
sahf
into
out
add
or
leave
push
insl
add
inc
sub
sub
test
pop
es
addr16
ss
pop
jno
sub
ljmp
dec
mov
shll
insl
psrld
pushf
jne
daa
jecxz
push
xchg
push
mov
mov
iret
es
push
mov
push
scas
aad
dec
enter
mov
cmp
mov
cmp
sub
sti
cli
jge
pop
into
outsb
icebp
aam
imul
pop
popf
push
sbbl
or
xchg
ret
out
mov
negb
enter
mov
cmc
pop
mov
in
cmp
roll
jecxz
xchg
rorb
paddusw
dec
test
push
mov
push
mov
xor
push
nop
in
or
and
inc
daa
out
mov
mov
icebp
jmp
or
enter
mov
fcomp
sahf
inc
aam
cmp
sbb
push
mov
mov
mov
outsl
dec
sbb
xchg
mov
jge
jb
add
mov
xor
cmp
pop
adc
mov
push
loopne
jl
sahf
addr16
mov
cmp
sub
out
xchg
sub
fs
push
fcomps
call
je
inc
mov
movl
inc
inc
std
insb
or
mov
lahf
iret
pop
adc
out
sbb
jb
data16
sub
mov
sti
cltd
aaa
pop
mov
decb
pop
xor
cmp
int
test
test
add
cli
shrb
fsubl
ficoms
adc
jmp
neg
inc
aad
or
xchg
xchg
js
sbb
or
pusha
lds
xor
test
stos
imul
push
insl
std
std
sbb
xchg
inc
das
mov
jle
dec
mov
inc
fdivrp
sbb
aad
cmp
testb
ljmp
enter
lcall
aas
xchg
mov
jns
mov
lret
iret
pop
sub
mov
lods
mov
ja
or
push
daa
pop
jle
push
out
imul
xchg
addb
xlat
sbb
fidivs
push
sarl
cmp
mov
test
fwait
dec
fisttpll
lcall
xchg
sub
jmp
pop
gs
mov
mov
or
xchg
xlat
dec
mov
mov
bound
cmp
movsb
add
mov
arpl
mov
sti
mov
mov
mov
insl
mov
imul
or
xor
add
jns
mov
pop
sub
aam
cmp
push
jp
push
inc
inc
sbb
sbb
or
jmp
fidivrs
and
sbb
fsubr
lods
into
jae
out
in
data16
fstpt
arpl
test
cwtl
dec
or
loope
xor
pusha
call
data16
sbb
shll
in
mov
fsubr
cld
dec
xchg
mov
aam
push
and
sub
sub
add
mov
mov
inc
mov
std
cltd
mov
cmp
scas
or
adcb
cmp
aam
orl
mov
adc
dec
cmpsl
out
daa
add
call
enter
mov
push
cs
jns
mov
fisubrs
mov
push
adc
pop
cmp
xchg
xchg
test
add
pop
sub
jo
sar
scas
lcall
adcb
in
leave
push
xor
out
pop
jmp
add
and
sub
and
mov
mov
and
mov
and
lds
mov
stos
mov
push
inc
scas
pop
in
mov
sub
adc
push
adc
push
insb
out
dec
mov
jmp
mov
xchg
clc
mov
sbb
xchg
cmp
pusha
iret
mov
movsb
or
mov
es
adc
push
dec
lret
cmp
and
outsl
inc
dec
or
ja
mov
in
cmpl
mov
inc
jg
ret
outsl
cmc
push
stos
outsl
and
popa
xchg
xor
hlt
fisubrl
mov
dec
lods
jecxz
repz
stos
mov
scas
xor
push
add
sub
scas
mov
lea
or
pop
sti
or
jnp
in
insb
dec
ret
sbb
sub
hlt
add
gs
xor
sub
jg
or
lods
xchg
icebp
jno
mov
mov
inc
sub
mov
movsl
jp
cmp
enter
or
dec
cli
aaa
lret
mov
pop
sbb
sbb
inc
loope
pop
js
stos
dec
inc
in
jae
das
sarl
icebp
cmp
xchg
int3
push
rcrb
sbb
push
add
lret
fs
sub
pop
lahf
insl
mov
xchg
push
ret
cvtpi2ps
lods
sub
mov
outsl
fs
into
pop
shl
cld
pop
pop
scas
sub
iret
xor
leave
call
push
aas
imulb
xchg
mov
insl
loope
adc
inc
mov
fs
jl
cltd
pop
test
adc
mov
sub
xchg
hlt
test
shll
fwait
shrb
scas
mov
jne
xor
mov
loop
push
xchg
xchg
and
rclb
push
adc
push
jge
pop
test
testl
xchg
mov
sub
mov
shlb
adc
xchg
mov
add
or
fdivr
pusha
loopne
mov
xchg
jp
cmc
pop
mov
adc
enter
pop
pop
sub
xchg
jo
je
dec
adc
xchg
push
fwait
jns
pop
pop
cmp
add
adc
hlt
adc
push
lcall
sub
sbb
mov
stc
cmp
dec
adcb
jno
rcl
stc
lea
pop
test
mov
lret
or
sbb
daa
push
jmp
mov
push
jge
pop
sub
test
faddl
orb
xlat
mov
sub
sub
call
imul
push
sub
jg
imul
test
lds
jecxz
fnstenv
mov
flds
stos
inc
push
lahf
shlb
pop
xchg
es
insl
in
stos
nop
mov
mov
aad
call
xchg
adc
cltd
fst
mov
icebp
in
dec
cmp
subl
inc
push
daa
xchg
pop
push
pop
lahf
mov
pop
cld
jge
fidivl
lahf
jl
sub
enter
les
call
add
push
mov
add
cld
ja
fcomi
std
add
popf
xrelease
pop
movsl
xorl
push
addr16
jge
aam
imulb
jp
dec
inc
pop
in
xchg
ret
ja
and
lcall
pop
icebp
jne
add
or
dec
ja
es
xchg
les
add
movsl
xchg
sar
lods
jns,pn
dec
in
xor
push
outsb
repnz
mov
push
lods
call
or
add
sbb
cmp
shl
scas
sub
push
les
imul
push
sub
mov
pop
aas
dec
xchg
ret
mov
sub
push
fisttpl
adc
nop
jb
push
addb
xchg
inc
dec
aaa
or
add
pop
les
shll
sahf
sbb
imul
lds
cmp
xchg
or
mov
jge
jae
xor
cli
movsb
fsub
mov
int3
repnz
rorb
push
dec
adc
mov
stos
dec
mov
mov
cld
dec
stos
jno
int
fcomps
outsb
inc
test
inc
mov
inc
imul
idivl
lahf
sbb
ret
fs
lret
jns
sub
test
stc
xchg
aaa
movsb
mov
mov
aas
add
jnp
insl
cli
push
in
and
push
add
loop
pusha
addr16
in
add
nop
pushf
sbb
xchg
into
sahf
fwait
add
loopne
xor
jg
clc
mov
sahf
mov
pop
mov
js
inc
pop
pop
dec
jge
ja
test
pop
ss
mov
rclb
inc
add
lret
loopne
xchg
clc
pop
push
popa
insb
repz
xchg
inc
pop
adc
lret
add
cmp
push
lds
fisttpl
xor
pop
cs
lock
sub
mov
ljmp
and
stos
iret
mov
out
pop
mov
cmp
push
jle
cld
sub
out
aam
cmp
loope
or
mov
lcall
dec
dec
std
cmp
loope
xor
push
jmp
iret
out
jl
inc
ljmp
lods
in
ds
pop
push
aas
jl,pn
shlb
leave
jmp
xchg
xchg
mov
enter
sub
fsubrs
scas
or
loop
pop
cwtl
leave
inc
repnz
movsl
pop
mov
add
inc
ret
cwtl
shll
in
push
mov
aam
into
out
inc
rcrl
xchg
dec
cs
and
loopne
int3
shl
or
out
lret
sub
scas
pop
call
cmp
push
inc
and
out
aam
cmp
push
aam
insb
pop
lret
in
std
push
imul
cwtl
int3
cmp
jle
adc
out
imull
xor
xor
sbb
pop
in
jecxz
repz
enter
push
inc
loope
lret
loop
in
xchg
fwait
dec
incb
out
mov
addb
repnz
mov
xchg
leave
mov
mov
inc
leave
int3
dec
dec
sub
icebp
sti
stos
inc
stc
adc
inc
daa
mov
arpl
dec
sti
stos
bound
lods
adc
sub
aas
jp
push
xor
aas
nop
daa
es
rolb
inc
mov
cmpsb
jno
fld
pop
int3
add
fdivrl
cmc
lcall
fisttps
push
bound
outsl
xorb
stos
inc
div
test
xchg
xchg
rcrl
pop
cmc
cmp
push
bound
xchg
stos
pop
pop
xchg
lock
inc
fildl
xor
jae
dec
repnz
xlat
mov
lahf
lods
xor
push
pop
pop
gs
jno
xchg
popf
push
sub
mov
jge
jbe
and
xlat
mov
pop
adc
into
imul
mov
fstpt
add
add
aas
xchg
cmp
or
jg
xchg
inc
bound
xchg
add
stc
pop
in
sbb
xor
mul
test
fcmovbe
inc
lea
outsb
fnstsw
pop
imulb
mov
fstpt
sbb
das
jg
in
push
or
icebp
fldpi
or
rcr
lea
mov
adc
fcompl
outsl
sbb
and
rcrb
mov
nop
lds
add
shrl
movb
and
insb
sbb
lret
cmc
jle
cmpl
repnz
scas
dec
aam
clc
movsb
popa
adc
ds
pop
ret
inc
add
and
adc
jmp
sbb
popf
dec
lea
fwait
and
enter
nop
cmp
iret
lret
movsb
xchg
push
or
bound
in
cmp
jmp
pop
xor
adc
les
inc
out
or
es
adc
and
xor
insl
cmp
test
xor
stos
push
inc
jne
xor
pop
pop
and
pop
fnsave
dec
push
jl
inc
into
mov
cmp
popa
mov
and
scas
adc
adc
mov
mov
push
movsl
in
inc
xor
mov
push
fcompl
add
xor
ret
aam
cmp
sahf
mov
mov
fwait
stos
sbbb
test
pop
inc
pop
test
fdivp
lahf
sub
pop
aaa
cwtl
jl
repz
sub
and
lcall
xchg
xchg
pop
lret
xchg
push
jmp
xchg
lock
in
add
mov
outsb
add
loopne
inc
jb
addb
iret
insb
mov
mov
sub
pop
dec
sbb
pop
pushf
push
movsl
inc
call
pop
mov
stos
inc
pminsw
or
adc
cmp
xor
cmp
popf
jbe
push
in
repz
std
loop
push
mov
add
sbbl
add
in
mov
cmc
pop
ret
mov
out
aam
clc
mov
inc
jle
mov
or
mov
adc
test
xchg
dec
testl
mov
mov
push
cli
in
sub
jle
or
fnstenv
pop
out
stos
xor
xchg
cmpb
fs
pop
lock
lahf
jge
push
push
mov
xchg
pop
dec
cmp
or
dec
sbb
mov
mov
adc
push
outsb
jns
aaa
cs
iret
add
dec
wbinvd
data16
or
xchg
aam
xor
jae
std
mov
and
aad
or
jo
fcompl
jmp
cs
test
vpaddd
and
jg
insl
ljmp
sub
cmp
xor
out
rcr
lea
leave
lea
jmp
jp
or
mov
pushf
mov
loop
aas
es
cmpsl
mov
lahf
int
jbe
inc
jp
dec
and
lret
loopne
pop
sbb
sbb
cmp
sub
push
jmp
sysret
xlat
loope
fwait
ret
push
dec
mov
rcll
dec
push
jp
lahf
adc
outsb
cmp
loop
iret
mov
cld
das
fsin
mov
jecxz
data16
or
nop
gs
repnz
mov
rol
insl
jne
enter
jae
mov
lods
arpl
test
mov
lock
sub
jg
je
je
jns
aas
das
and
iret
fsts
sarl
loope
add
out
push
ljmp
fnstsw
ds
jae
dec
xchg
stos
adc
insl
les
decb
aad
mov
fucomi
popa
test
dec
out
add
cmp
insl
mov
aam
pop
call
cmp
push
and
push
inc
and
xor
das
mov
cld
lcall
dec
mov
loop
mov
loop
mov
and
ja
fdivrs
adc
xchg
movsb
push
insl
test
fisubl
inc
cmp
roll
lret
push
mov
and
inc
jb
sti
or
gs
rol
inc
cmpsl
aas
into
lret
inc
xchg
xor
rcr
or
xor
pop
dec
mov
push
fnstsw
push
sub
xadd
push
in
ret
cmpl
in
jg
outsb
push
insb
aaa
aas
ret
push
aam
jno
add
jp
addr16
sbb
or
mov
xor
mov
and
cmp
insl
imul
xor
cli
aam
imul
lock
loopne
xchg
outsb
rcr
rcll
rep
in
sarl
cmp
ss
daa
bound
and
test
cltd
jo
cmpsl
pop
mov
ja
mov
inc
mov
sarl
scas
clc
leave
stos
xlat
xor
or
adc
cmp
cmp
mov
test
imul
jmp
adc
imul
rorb
xchg
xlat
pop
popf
sahf
hlt
repz
mov
movsb
adc
cmp
sahf
jge
xchg
roll
pop
adc
cwtl
xor
in
inc
mov
jnp
add
fimull
sbb
popf
jo
mov
xor
jp
rclb
mov
xchg
cmpsl
repz
inc
movsl
xor
lret
xlat
das
pop
mov
ret
shll
or
sarl
lods
imul
mov
psubusb
add
add
sbb
roll
push
xchg
mov
addb
sbb
imul
nop
imul
icebp
lods
out
cmc
fisubl
ljmp
sti
movsb
adc
movsl
arpl
lahf
lods
je
jg
mov
jecxz
shrb
loop
add
dec
lods
pop
fstpt
insl
std
ficoml
push
add
popf
xchg
and
iret
pushl
mov
addr16
loopne
loope
and
jae
dec
xchg
mov
mov
data16
test
pop
mov
sub
jle
scas
xchg
mov
jmp
iret
adc
lea
dec
or
jo
aaa
cmp
lods
test
enter
jecxz
jo
sub
gs
sbb
mov
popf
lcall
out
outsl
push
addr16
mov
dec
mov
lcall
in
movsl
jo
mov
rclb
dec
mov
movsb
repnz
movb
fisttpll
test
push
dec
cld
loopne
lahf
xor
shrb
inc
stos
mov
add
mov
jns
adcl
sub
rcr
inc
imull
mov
loope
dec
or
shll
lods
xchg
mov
lret
or
mov
cwtl
dec
sbbl
call
mov
rcr
mov
call
subb
popa
gs
cmpsb
jmp
adc
cwtl
das
movsl
cmp
fisubrs
lds
ja
mov
xlat
in
js
bound
fwait
imul
jae
add
jo
inc
insl
call
cmp
in
ss
lret
sub
mov
add
out
add
sti
rol
mov
xchg
fs
inc
out
imul
mov
xor
ret
lock
push
inc
sub
adc
scas
jno
push
icebp
mov
xchg
cmp
aad
movsb
fbstp
xchg
jo
mov
jne
dec
xor
mov
push
jae
test
frstor
cwtl
rcrl
xchg
cltd
test
in
mov
fcomp
das
cs
jne
dec
cwtl
sbb
sbb
mov
bound
outsb
inc
mov
shrl
xchg
jne
fisttpl
mov
inc
loopne
in
addr16
mov
nop
fcoms
mov
xchg
sub
fisttpl
push
jo
add
adc
inc
pop
cli
adc
lcall
cmp
mov
inc
mov
jmp
lds
push
test
in
fiadds
sbb
insb
jnp
clc
inc
dec
imul
test
repz
imul
ds
or
dec
dec
adc
shrl
lods
xor
out
xchg
cmc
and
enter
fldcw
and
jg
lock
sbb
pop
xchg
stc
sub
sbb
sbb
jbe
push
push
hlt
or
aad
dec
popa
and
mov
sahf
cld
cs
outsb
inc
popf
or
fstps
and
mov
fs
jge
inc
cmovno
fwait
mov
into
jae
mov
jbe
call
ljmp
xchg
jbe
or
or
xor
rcrb
or
mov
enter
cmp
ljmp
pop
ljmp
dec
ljmp
mov
cltd
fbstp
mov
mov
push
dec
or
lock
fldt
adc
mov
add
cmp
ret
jl
js
xor
mov
push
jns
jl
sub
js
inc
lret
popf
cmc
cmpsb
mov
hlt
shrb
push
dec
addr16
xor
popa
mov
mov
inc
mov
and
addr16
push
mov
lret
pushf
shlb
imul
mov
mov
bound
cwtl
xor
sahf
das
aam
xor
lcall
lret
xor
data16
gs
mov
into
mov
xchg
aad
dec
mov
mov
scas
mov
pop
and
cmpsl
imul
loope
stos
jmp
jge
add
push
imul
adc
les
dec
sub
xchg
push
out
mov
mov
gs
adc
xor
roll
in
mov
pop
inc
outsb
mov
pop
stos
pop
out
ljmp
fnstenv
and
lcall
ret
daa
mov
push
rclb
test
sahf
ja
adc
sub
xor
pop
scas
cmovbe
lods
sti
dec
and
stos
inc
sub
jmp
pop
push
test
mov
cmp
mov
cmp
mov
sub
jnp
into
outsb
xchg
adc
mov
dec
aaa
cmp
call
jge
lods
mov
or
mov
pusha
pop
pop
sbb
sub
sub
mov
andl
add
neg
ret
aas
rol
loop
pop
and
jge
and
incl
mov
lock
push
pop
push
lds
insb
cld
sub
lret
pop
shlb
shlb
insb
jl
lahf
xlat
bound
mov
in
sbb
pop
popf
ss
and
pop
jg
and
sub
mov
or
loope
insb
mov
jecxz
dec
js
pop
addr16
pop
and
inc
and
shrb
inc
push
cmp
out
cmp
xchg
pop
cmpsb
out
dec
xchg
arpl
sub
pop
clc
mov
insb
ljmp
sarl
ss
mov
sub
xor
gs
fs
cmpsb
insl
sub
test
push
or
xchg
cmc
fbstp
fstpt
cmpsb
lds
lcall
jb
cltd
dec
jl
stos
mov
and
jbe
or
adc
stos
push
push
in
push
push
sahf
xor
imul
lahf
out
jo
insl
mov
mov
mov
pop
push
sbb
aas
jmp
lods
pop
nop
sub
xor
leave
pusha
bswap
jp
insb
into
push
mov
rcrl
lock
push
ret
popa
jb
jno
push
mov
js
xor
xor
or
jecxz
sarl
nop
mov
and
insl
adc
mov
fsubl
aad
jge
adc
add
fstps
ja
pop
xchg
lds
inc
or
aam
jecxz
insl
sbb
fistps
imul
pop
jl
das
dec
push
scas
pushf
ds
in
push
adc
test
mov
adc
mov
stc
lods
lret
mov
push
cmp
xorl
bound
loopne
push
sub
push
popf
in
push
jbe
jmp
add
arpl
xor
cs
pop
loope
sbb
repnz
and
cld
out
insb
mov
cmp
sete
inc
ss
shrb
adc
shlb
pop
xor
inc
mov
outsb
cs
pop
out
sub
mov
push
cmpsl
js
lahf
xchg
popf
cli
loopne
cmpsb
arpl
add
mov
sbb
mov
inc
mov
cltd
cmp
lock
popa
adc
cmp
ret
jae
insl
xlat
stos
fsubr
cmc
fcmovnu
mov
add
inc
repz
pop
ss
mov
inc
orl
add
popa
xor
fwait
outsl
and
sti
sarl
dec
cmpsl
xchg
sahf
xor
scas
cld
push
pusha
ja
jno
mov
pusha
ret
lahf
cmp
add
loope
test
and
lods
js
ficoml
sub
ljmp
es
or
dec
bound
lcall
aad
stos
insl
fnstsw
and
call
mov
add
mov
mov
mov
xor
mov
idivl
xlat
inc
int
mov
rcl
push
mov
add
out
ficoml
sar
jnp
xchg
orl
fldt
push
arpl
xchg
cmp
jg
adc
pusha
lret
andl
out
cs
dec
leave
dec
mov
sub
mov
mov
aad
pop
push
out
addr16
and
inc
adc
mov
jl
scas
inc
mov
mov
xor
adc
inc
sarl
fidivrl
cwtl
push
inc
mov
push
xchg
xchg
and
fwait
pop
push
push
ljmp
scas
je
cmp
test
bnd
jg
test
sub
mov
mov
sti
pushf
xchg
mov
mov
push
or
cmpsl
test
pop
mov
pop
cmpb
pop
pop
addr16
cltd
ret
addr16
sti
jl
push
xorb
insb
push
jle
test
pop
xor
pop
sbb
loop
repnz
inc
add
out
xchg
pop
or
add
repnz
dec
mov
push
cmpsl
jbe
jp
cmp
dec
push
xchg
jno
push
mov
in
mov
lds
xchg
dec
femms
jecxz
enter
in
lret
jmp
sub
stc
jns
bsr
push
mov
pop
pusha
loope
fwait
xchg
xor
lret
xor
jne
cli
clc
xchg
dec
xchg
push
lods
rorl
mov
lret
cmp
notb
mov
add
pop
pop
popa
or
mov
push
jle
clc
test
cltd
jmp
pop
ljmp
or
nop
fbld
mov
movsb
int3
jmp
jg
addr16
dec
push
sar
bound
arpl
mov
into
cmpsb
cmp
divb
sbb
mov
stos
mov
xchg
push
rolb
mov
or
js
sahf
push
fstpl
cltd
fnstsw
dec
jns
mov
add
dec
sbb
mov
arpl
pop
inc
rorb
pop
repz
add
add
mov
adcb
add
call
dec
xor
xchg
orb
mov
xchg
imul
sbb
mov
jb
push
cmp
mov
pop
mov
bound
js
xor
or
xchg
lret
push
je
and
cmpsb
fwait
pop
dec
fadds
sbb
pop
mov
lcall
scas
fstpl
aas
lcall
jecxz
sbb
test
push
scas
dec
ret
daa
cmp
rol
mov
xchg
sbbb
lods
mov
repz
loopne
stos
js
push
or
push
rorl
bound
addr16
loopne
pop
mov
sub
fnstsw
or
sub
call
push
dec
fmuls
push
aam
repz
xor
mov
dec
cmpsb
add
push
test
fisubs
dec
mov
call
jno
mov
stos
movsl
dec
dec
sbb
loope
pop
pop
jne,pn
lret
sub
aam
ds
icebp
push
dec
cmp
enter
fldlg2
ret
int3
movsl
mov
mov
pop
and
cli
sahf
cmp
cmpsl
scas
out
dec
loope
cld
mov
pop
pop
arpl
cmpsb
cmc
sahf
push
adcl
scas
or
dec
sbb
dec
call
test
repz
loopne
jnp
cli
xor
sub
xor
int3
adc
bound
pop
insb
push
or
pop
inc
mov
sbb
std
jg
subb
rcrl
adc
outsl
and
or
outsb
out
push
pop
aaa
or
adc
sub
push
jmp
out
sti
push
xchg
lret
ja
mov
push
and
xor
lret
flds
push
mov
add
insl
test
stos
arpl
cwtl
je
out
xor
stc
xchg
scas
sub
dec
ljmp
push
xchg
push
fdivrs
jb
xor
dec
dec
cli
mov
decl
inc
nop
bound
movsl
sub
sbb
inc
cmp
jbe
cmp
push
cmpsb
mov
mov
pop
ret
popa
aam
popa
push
pop
xchg
push
and
dec
push
stos
das
sbb
ss
xchg
popf
dec
stc
mov
and
sbb
cmp
push
jge
pop
out
pop
mov
lcall
sti
call
in
leave
push
pop
jbe
cli
imul
mov
pushf
xchg
xchg
adc
cmc
or
adc
and
in
mov
cmc
mov
sbb
lcall
sti
fnstcw
rcr
jns
push
mov
adc
jo
mov
xor
sub
stos
aad
mov
into
jnp
je
jl
or
out
fmull
decl
jns
movsb
mov
call
sub
dec
js
xchg
pop
or
int3
mov
and
sub
insb
mov
mov
cs
add
ds
or
int3
fstps
push
iret
repnz
movsl
mov
push
lahf
jae
stos
push
inc
pop
mov
enter
fldt
in
adc
sbb
and
add
rcrb
lcall
adc
jp
mov
push
clc
ffree
jl
movsb
out
ret
sbb
push
sub
mov
push
icebp
pop
mov
rorl
xor
test
jnp
ja
xchg
pop
jno
daa
popa
lahf
lock
xor
sub
add
aaa
test
jno
or
movsl
mov
frstor
push
cwtl
jb
incb
das
sbb
pop
lahf
add
jbe
movsb
stos
test
xor
popa
adc
dec
lods
dec
fucomi
add
inc
cmpl
rcr
sub
aas
in
fwait
bound
in
jge
imul
or
adc
sbb
inc
testl
repz
pop
inc
rol
pushf
pop
pop
cwtl
aas
fnsave
cmp
scas
push
and
xchg
scas
popl
inc
push
repz
call
cmp
fistpl
dec
jmp
imul
mov
popl
jb
or
out
mov
rcrb
mov
daa
out
ds
add
adc
dec
mov
movsb
shrl
arpl
pop
dec
or
xchg
sbb
outsb
pop
aas
popa
mov
push
lahf
rcl
aas
scas
ljmp
pop
outsb
test
xor
jno
jne
mov
mov
xchg
lea
call
mov
pop
pop
mov
dec
daa
loopne
faddl
imul
outsb
fcomps
jb
dec
test
lock
and
test
orl
xchg
ret
in
mov
xchg
pop
push
push
in
dec
aad
jne
push
int3
adcl
mov
nop
push
fucom
cltd
scas
popa
jg
in
nopl
xchg
mov
or
sub
ja
push
cmp
es
push
adc
jne
pop
outsb
push
mov
dec
push
jmp
stos
outsl
cmp
fimuls
xchg
scas
iret
nop
fwait
push
sub
stos
out
adc
pop
rcll
and
pop
fisubs
push
xchg
insl
push
scas
stos
fisubrs
xor
insb
test
xchg
or
xchg
dec
jb
jle
xchg
pop
mov
or
jns
cwtl
sbb
mov
and
rolb
js
xor
out
pop
sub
xor
call
daa
adc
dec
xchg
adc
jmp
xor
pushf
in
rcll
jb
mov
or
scas
data16
pop
inc
xchg
repnz
mov
stos
mov
or
jl
popf
rolb
jmp
pop
lea
inc
ss
les
int3
sbb
cmp
inc
inc
cmp
roll
mov
sti
in
jmp
cmpl
or
scas
sub
addr16
int
movsb
mov
cld
arpl
jno
sbb
testl
ret
fs
movl
add
mov
cld
prefetch
dec
scas
and
push
mov
cmp
jl
mov
rolb
xor
and
and
stc
cld
sub
xor
cmp
add
xlat
add
sub
push
push
push
sbb
divb
xor
mov
lcall
sub
pop
aas
divl
cwtl
cmc
xchg
adc
lea
int3
cmpb
dec
mov
sbb
xor
push
lret
data16
cld
int
out
cmp
jne
xlat
test
sbbb
lahf
xlat
or
roll
test
movsb
je
insl
pop
lcall
dec
sbb
xor
cmp
inc
fs
cld
or
inc
jl
sub
pop
in
jmp
sbb
imul
sub
fidivrs
aas
mov
shll
je
mov
arpl
add
sahf
mov
cmpsl
pop
pop
sub
sub
int3
filds
roll
test
jnp
inc
mov
cmp
rcrl
jnp
push
pop
adc
xlat
pop
pusha
mov
sub
imul
cmp
gs
xchg
popa
pop
inc
pop
sbb
push
push
push
and
test
andl
xor
and
bound
punpcklbw
cld
mov
xchg
and
in
jmp
pop
jb
popf
imul
jecxz
dec
test
pop
mov
orl
lcall
gs
adc
lea
loopne
mov
mov
jns
enter
outsl
ja
jo
fnstenv
adc
mov
pop
mov
mov
lods
jp
xchg
rcrb
jae
mov
decb
sti
dec
int
sbb
cwtl
icebp
dec
ret
xchg
mov
add
cmp
push
lods
pop
aam
mov
inc
xor
movsb
jno
insl
dec
and
cmp
inc
xor
aas
push
lahf
les
sbb
sbb
push
and
xchg
fisttpl
cmp
cmp
lret
loopne
mov
pop
and
xor
mov
or
jmp
sub
lods
jg
jb
jle
fdivp
lods
jnp
mov
xchg
fcoml
mov
pop
mov
inc
jbe
mov
push
fidivs
pop
cmc
orb
pop
imul
lahf
add
test
inc
imul
push
xchg
cmp
and
jecxz
test
mov
cmc
cwtl
mov
adc
fstpt
jno
insl
popa
hlt
mov
fidivrl
into
adc
enterw
repz
pusha
and
jns
test
notb
es
mov
sub
dec
dec
mov
cmp
ss
adc
sahf
mov
jp
rolb
repz
insl
mov
dec
cwtl
mov
es
aad
sahf
inc
aaa
adc
mov
subl
sub
cwtl
xor
dec
test
dec
xor
dec
inc
jo
push
xchg
sub
les
lret
inc
in
mov
add
mov
jp
or
std
cwtl
sub
ljmp
and
clc
mov
xchg
dec
fidivl
int
stc
dec
mov
mov
stos
mov
ffreep
jl
xor
sbb
adc
into
movsb
xor
push
sub
mov
inc
fdivrs
jge
daa
loope
mov
and
xchg
sbb
dec
mov
pop
jbe
sub
mov
shlb
sti
sub
les
sar
ja
scas
call
mov
and
xor
js
out
pop
aaa
insl
xor
push
xchg
cld
lret
dec
lahf
mov
jg
mov
repnz
mov
dec
test
pop
dec
mov
inc
cmovo
and
inc
ljmp
sbb
mov
shrb
aam
jmp
inc
popa
dec
adc
mov
jg
test
cld
add
leave
and
dec
popa
pop
outsb
add
add
cmp
mov
cwtl
loop
pop
arpl
sbb
pop
testb
cltd
fsts
dec
pushf
int3
cltd
mov
push
inc
or
or
sbb
cli
cld
sti
cltd
mov
pusha
inc
repnz
leave
out
cmp
arpl
push
cmp
push
dec
mov
cltd
cs
rclb
jns
out
cli
es
in
ja
pushf
or
push
movsb
cmp
add
dec
jnp
mov
mov
and
orps
loop
std
adc
push
pop
scas
ljmp
adc
xor
pop
jae
icebp
mov
dec
dec
push
cli
imul
es
jge
add
int3
stc
and
sbbb
jbe
cmc
dec
fdivrs
pop
stc
sbb
cltd
stc
cmpsb
ss
mov
out
mov
or
shl
and
pushf
stos
rcll
shll
xor
jo
lea
scas
xor
inc
repz
fldcw
push
neg
imul
jl
mov
xchg
cmpsl
lcall
adc
sbbl
cmpsl
jne
repz
pop
imul
lret
orb
mov
cmp
nop
xor
and
sbb
and
push
sub
lods
cmpsb
repz
push
ret
xor
lret
jae
ja
xchg
xchg
mov
mov
sbb
mov
mov
dec
adc
popf
dec
cltd
in
and
js
je
dec
outsb
call
push
fldcw
pop
cmpb
jnp
cmpsl
push
iret
jecxz
xor
sub
outsb
jg
xor
in
out
cmp
or
cltd
imul
mov
clc
stc
in
or
xlat
out
jnp
push
inc
add
mov
xor
ds
jb
push
push
and
add
jg
mov
out
inc
or
psrlw
cwtl
pop
int
cld
ds
or
ret
mov
les
pop
and
stos
xor
fs
daa
add
push
inc
into
dec
loopne
inc
xchg
repnz
int
clc
mov
cmp
push
pop
gs
jae
push
sarl
jo
adc
xlat
shrb
xor
cmp
jl
ds
in
pop
sbbb
mov
nop
cmc
loop
or
jo
push
xchg
and
movsl
dec
or
lods
xchg
icebp
mov
ja
and
pop
mov
inc
pop
adc
cmp
sbb
push
sbb
sub
xchg
or
je
out
lock
movsb
jmp
orl
ret
lcall
lods
popf
cld
fdivl
and
and
stos
sbb
jecxz
jl
fisttps
outsl
movsb
addr16
dec
lea
repnz
dec
cmpl
loop
mov
push
sbb
push
jg
or
push
adc
xchg
lahf
jns
gs
ficompl
out
and
inc
xchg
pop
cmp
imul
sbb
mov
add
dec
inc
aam
inc
or
mov
inc
xchg
cmp
out
sbb
or
jge
pop
sbb
repnz
jle
sbb
hlt
mov
mov
mov
adc
or
dec
std
orl
xchg
shll
jmp
sbb
test
lds
and
mov
sbb
mov
sbbb
aad
sbb
push
inc
out
fcmovnb
divl
lcall
adc
es
sbb
add
nop
int
aaa
test
fs
jne
xchg
repz
setle
push
push
xor
inc
inc
stos
push
mov
shl
pushf
out
cmp
int3
add
and
mov
lock
cmovbe
add
add
fs
fxch
push
shl
adc
mov
out
pushw
mov
dec
std
mov
push
imul
add
mov
addr16
jmp
inc
pop
in
test
cmc
ss
push
dec
adc
fadds
imul
rorl
mov
and
push
inc
ret
mov
dec
mov
int3
and
or
ss
sub
int3
lock
mov
jne
dec
outsl
xchg
in
push
push
add
aaa
mov
push
xlat
mov
cmp
ljmp
lods
pop
sbb
pop
in
pop
fs
xor
xor
rorl
pusha
test
pop
push
pop
bound
fistpl
inc
mov
rcrb
cmp
cmpsl
test
and
inc
add
pushf
bound
pop
or
cltd
mov
sbb
adc
mov
xchg
jne
ljmp
dec
lahf
cmp
bound
inc
movsl
xchg
daa
mov
out
push
aaa
dec
test
jecxz
and
inc
mov
popf
xor
out
xchg
mov
icebp
daa
addr16
filds
push
mov
je
iret
inc
fldl2e
jnp
jo
xchg
test
mov
inc
insb
inc
movsl
sub
and
jno
loop
fwait
int
push
mov
mov
aaa
pop
cmpsl
inc
enter
insl
dec
xchg
outsl
adc
hlt
cmp
cmp
fdivl
out
in
mov
pop
insl
ss
adc
cmc
int
mov
and
jecxz
push
mov
into
adc
bound
or
lcall
add
sbb
or
pop
loopne
pop
mov
stos
fwait
sub
sub
mov
inc
inc
rorb
adc
loopne
mov
fisttpl
popl
add
rcll
pop
and
pop
dec
out
insb
push
adc
cmpl
jns
mov
pop
and
jge
clc
jns
cmp
rcrl
in
adcl
inc
gs
add
inc
leave
lret
mov
and
hlt
stos
cmp
push
repnz
imul
mov
mov
push
cld
and
and
repz
arpl
cltd
enter
call
lcall
rcll
sub
movsl
cmp
scas
and
fwait
mov
rcl
ss
push
stos
jns
mov
lret
add
xor
mov
mov
mov
push
xor
push
push
push
bound
jecxz
sti
data16
mov
cmc
and
fmull
test
adc
aam
sbb
ret
ja
je
lret
dec
insl
fucom
jne
add
cmp
test
pop
sub
mov
sub
sar
pop
fcomp
stos
test
push
out
mov
popf
cltd
nop
jmp
pushf
push
sub
sbb
fbld
scas
pop
or
push
out
jne
out
out
xor
decb
sbb
pop
aaa
push
lahf
jmp
cli
add
out
insl
push
popf
sub
sbb
sub
popf
jb
lahf
jmp
cs
adc
fidivl
fs
fincstp
sti
cmp
insb
mov
add
movhps
adc
mov
xor
jecxz
adc
mov
add
imul
dec
dec
inc
cmp
aam
or
out
push
les
test
xlat
and
dec
pop
push
cmpsb
xchg
xchg
xchg
ja
mov
cmc
fisttps
jp
or
cli
xor
adc
out
adcl
stc
in
lcall
sbb
push
and
pop
sub
or
jg
insb
fnstenv
push
pop
outsb
loope
aad
mov
mov
pop
clc
push
cwtl
sub
ds
jae
fbld
mov
ret
push
fwait
add
add
daa
adc
sbb
and
add
mov
outsb
shll
pop
adc
lods
outsl
enter
jae
push
ret
addr16
in
jno
jnp
out
jle
and
jb
push
das
enter
mov
imul
outsl
push
out
push
fcoms
lret
out
test
pop
sarb
sbb
mov
cmp
mov
and
mov
adc
in
mov
push
adc
or
std
aaa
mov
fnstsw
movsl
sbb
pop
ret
cmp
and
xor
cvtps2pi
aaa
pop
add
and
dec
xchg
push
clc
pop
inc
fisubrl
rorb
sahf
or
mov
movsb
pop
sub
push
inc
out
in
out
out
clc
sub
mov
and
sub
loope
sub
inc
mov
xchg
repz
test
lcall
mov
sti
cwtl
int
mov
push
jp
imul
fisubl
pop
std
xor
cmp
cmp
sbb
mov
xchg
push
dec
ds
aaa
jge
js
sbb
mov
push
out
out
jns
sub
jmp
out
jae
xchg
jp
in
mov
cs
xchg
or
call
dec
addr16
js
rol
je
add
cmpsl
xlat
mov
fistps
inc
pushf
mov
or
or
ljmp
sub
jno
push
int
int
jae
and
pop
mov
jo
adc
xor
repnz
pop
fwait
lds
cmp
je
and
dec
cmp
out
in
mov
ror
inc
or
pop
sub
popa
mov
int
adcl
xchg
xchg
lds
andl
adcl
sub
mov
adc
xchg
cltd
mov
mov
adc
mov
adc
xor
push
or
add
testb
idiv
xchg
jg
in
pop
nop
xor
outsl
enter
cmp
mov
das
xchg
pop
pop
inc
repz
jge
lods
sub
fcmovnu
call
mov
test
xor
inc
imul
xor
xchg
into
pop
pusha
stc
fcompl
xor
sub
mov
ljmp
push
in
in
lcall
in
dec
aaa
ja
jle
je
sbb
sbb
xor
rol
test
lea
dec
imul
ja
pop
in
mov
adc
xor
dec
rol
xor
adc
jno
dec
popf
ds
inc
int3
sbb
and
movsb
pop
std
mov
sub
mov
inc
es
add
rorb
jo
push
nop
mov
mov
adc
cs
jo
sahf
inc
in
arpl
loop
mov
xor
mov
test
adc
pop
or
loop
xchg
mov
test
or
mov
idivb
stos
scas
mov
jo
and
in
sbb
notl
fwait
std
aad
dec
jb
push
nop
push
lcall
cltd
fwait
mov
rcr
or
cwtl
mov
sub
mov
pop
movsb
and
jb
int
jge
int3
jle
pop
and
xchg
lea
or
pop
sbb
pop
jl
xor
ja
into
aad
push
sub
clc
mov
test
cmp
lock
or
or
mov
enter
imul
add
sub
nop
adc
lea
mov
daa
jl
xor
in
les
mov
push
mov
xchg
fimuls
jbe
or
xor
adc
mov
add
test
in
repnz
cltd
mov
sbb
jmp
and
xchg
jae
jb
in
imul
call
mov
cmp
sub
dec
inc
stc
ja
dec
addr16
push
xchg
nop
pusha
aaa
lods
lahf
xchg
pop
mov
sub
xchg
cmp
mull
out
dec
mov
pushl
xor
out
decb
stos
fsub
mov
nop
cwtl
mov
test
sbb
sub
pop
push
out
jnp
shlb
sbb
mov
and
pop
popa
dec
sbb
aam
pop
dec
decb
iret
ja
dec
xchg
ret
imul
cwtl
xchg
ljmp
xlat
in
out
mov
push
shrb
int
xchg
icebp
stos
add
ror
pop
leave
loop
push
mov
insl
fmulp
mov
dec
mov
lahf
cmpsl
or
jmp
test
into
pop
mov
pop
fdivl
pop
inc
xor
mov
sub
sub
lret
jle
imul
dec
aam
movmskps
js
in
fbld
adc
mov
ljmp
sbb
fadd
add
mov
call
cmp
cmp
and
into
mov
shr
js
mov
inc
jno
decl
nop
cmp
dec
int3
adc
mov
push
mov
shlb
vcvtss2sd
mov
dec
lock
stos
mov
in
pop
call
xlat
cmp
mov
and
push
push
xor
xchg
mov
jp
repnz
in
lods
ret
sahf
ss
iret
gs
cwtl
cmc
sbb
jp
pop
add
mov
in
sbb
rclb
aaa
js
adc
shrl
js
pop
xor
int3
cld
scas
dec
stos
hlt
daa
mov
testl
cmp
jae
lret
mov
push
adc
mov
xrelease
push
mov
test
test
outsb
repnz
loopne
mov
loop
cmpsb
in
mov
mov
data16
iret
jo
mov
push
dec
push
hlt
mov
sahf
inc
mov
bound
rclb
and
fbstp
je
mov
push
in
or
daa
cmp
push
popa
xlat
cmp
ss
inc
cmpsl
push
es
scas
mov
lret
xor
lret
pop
push
dec
jmp
js
mov
out
mov
lahf
sti
ret
out
imulb
pusha
repnz
lods
rcll
xor
and
sub
hlt
xchg
sub
sub
mov
test
xor
jnp,pt
lcall
pop
jnp
mov
lcall
lret
dec
push
outsb
push
cmpsb
popf
nop
lcall
mov
jle
mov
add
mov
aaa
lds
test
in
or
jo
adc
nop
cmp
in
out
cmp
or
ret
movsl
inc
pushf
push
in
xlat
ss
out
lcall
jmp
dec
cmpsl
in
adc
loope
mov
xchg
jmp
popf
push
data16
push
mov
fcmovne
adc
pop
pop
jmp
push
jp
fwait
mov
lods
or
dec
add
loopne
mov
pop
jmp
dec
and
insl
mov
add
out
adc
call
fists
pop
xchg
sahf
cmpsb
push
ficoml
add
push
mov
dec
sbb
in
push
pop
fwait
hlt
lcall
adc
dec
jne
dec
aas
push
mov
ret
mov
push
xchg
mov
cmp
push
cmp
jae
test
test
movsb
addl
mov
jecxz
sub
leave
jne
pop
dec
push
inc
out
sub
jne
popa
subb
popf
add
out
push
aas
int3
cmp
jle
add
ds
inc
aam
repnz
fs
xchg
and
cs
orl
movsl
jmp
cwtl
xor
jae
clc
je
adc
cli
sub
inc
inc
shrb
dec
mov
mov
cmp
xchg
mov
or
push
add
mov
addr16
pop
aaa
adc
xlat
xchg
push
jo
ds
xor
pop
mov
pop
pop
popa
mov
mov
and
clc
dec
dec
and
inc
xor
fwait
dec
xchg
fdivrl
pop
out
dec
dec
daa
pop
jns
push
out
jns
mov
mov
ret
push
fadd
adc
jp
lret
in
xchg
mov
cmp
adc
push
mov
cmpsb
or
add
imul
idivb
aad
and
mov
notb
pop
cmp
pop
ret
add
icebp
jecxz
xor
add
xor
enter
dec
test
and
ret
xorl
xchg
test
sahf
mov
pop
popa
mov
xchg
dec
sub
std
jg
xchg
cltd
or
xorl
ror
jle
xor
adcl
stos
movlps
jl
mov
xchg
and
into
jno
repnz
leave
cmp
lock
xchg
jmp
in
jo
daa
pushf
jo
mov
les
xchg
fimuls
dec
fbld
adc
ds
pop
sbb
js
add
and
xor
adc
mov
lret
enter
mov
int3
js
pop
lods
push
mov
clc
inc
dec
dec
xor
dec
rcl
lahf
inc
xchg
repz
lds
push
pop
fildll
push
inc
je
xorl
jp
add
or
fsubl
cmpsb
neg
repnz
cmpsb
dec
xlat
xchg
xor
sbbb
or
aam
xchg
xlat
sbb
mov
inc
aas
mov
inc
push
shll
pop
inc
xchg
cmp
shrb
lock
adc
lea
popw
xlat
out
sbb
jb
aas
jl
mov
xor
popf
and
mov
sbb
xor
xor
cmpsb
fidivl
cmp
sbb
aas
ret
add
addl
mov
xchg
stc
jne
mov
sub
and
jp
mov
jle
clc
and
adc
in
mov
sub
in
fisttps
subl
xchg
sbb
inc
dec
scas
inc
mov
sub
imul
jbe
fcomi
dec
sub
pop
lods
sbb
dec
and
xor
scas
mov
xlat
adc
cmp
sub
out
faddl
push
enter
mov
sub
aad
cmp
mov
add
inc
push
fwait
jp
orl
push
push
ljmp
xchg
scas
or
jge
or
ss
dec
fisttpll
movl
decl
and
mov
into
xor
adc
cmpl
xchg
inc
adc
mov
xchg
fidivl
add
cld
arpl
fsts
in
pushf
inc
push
adc
push
fwait
jbe
enter
addb
jno
cld
push
sbb
push
loop
and
rcrl
xchg
cmp
movsl
leave
inc
cmp
push
addr16
jns
repz
pushf
int
enter
push
shlb
xchg
loopne
stc
enter
jne
int3
fs
fmuls
sub
mov
ljmp
or
call
sahf
jne
fs
push
mov
xchg
ret
jl
flds
fs
mov
jnp
cmp
out
pop
test
xchg
cmpsl
sahf
and
adc
call
das
imul
sahf
cli
enter
lret
popf
rorb
mov
mov
jb
imul
in
add
cld
pop
xchg
test
movsb
jmp
or
insb
cmp
jae
ja
jno
movsb
in
ss
sbb
insl
fdiv
test
and
loopne
ljmp
outsb
dec
and
mov
cmpsb
insl
lret
xchg
ret
aaa
ret
or
cld
sbb
lods
popa
dec
ret
inc
dec
adc
xchg
pushf
sub
out
gs
sbb
imul
sub
mov
mov
adc
pop
or
xchg
in
or
daa
loope
mov
adc
fdivl
loopne
dec
stos
adc
push
sub
lods
frstor
sbb
in
jne
jbe
enter
pop
inc
sbb
ret
lret
out
pop
pop
cmp
pushf
lret
inc
test
xchg
xchg
add
xor
push
orl
mov
jnp
add
mov
add
fwait
dec
mov
mov
dec
sub
xchg
jo
xchg
jnp
call
jp
movsb
cmpsl
mov
push
lock
test
push
adc
xchg
jmp
inc
add
in
test
gs
ficoml
mov
test
xchg
jmp
insb
loopne
stos
aas
lock
aaa
inc
sbb
push
shll
js
hlt
sbb
xchg
stos
mov
addb
lcall
mov
sub
add
iret
imul
push
hlt
rol
ror
mov
push
pop
aam
lahf
xchg
je
andl
or
fs
faddl
mov
cmpsl
cli
xchg
add
sub
pextrw
inc
push
xchg
mov
iret
and
xlat
jb
loopne
loop
mov
push
push
cmp
insl
inc
xchg
ficompl
test
cs
and
aaa
and
mov
in
rorl
jno
loope
add
pusha
lret
int
jl
mov
pop
aad
mov
cmpsl
sbbl
xchg
insl
pop
das
popf
mov
rcr
pop
fadd
cmpsb
and
mov
pop
jnp,pt
das
fistpl
push
out
sub
sbb
push
enter
sub
cmp
addr16
outsl
push
movsl
sub
aas
pusha
sbb
jmp
dec
cmpsb
in
popa
addb
cmp
jne
cmpsb
mov
jb
mov
and
and
push
add
gs
pop
test
xor
jecxz
xchg
mov
push
arpl
cwtl
jmp
pop
aaa
pop
lahf
add
out
daa
inc
pop
or
jp
sbbb
stos
movsb
repnz
dec
sarl
sbb
ja
cmp
xchg
add
int
dec
addr16
call
xor
inc
xchg
xor
pop
loopne
gs
imulb
ja
pushf
xor
sbb
xchg
scas
cwtl
lret
test
mov
add
mov
into
jno
stc
adc
int3
pop
jb
ror
cmp
sub
jns
or
mov
or
test
push
cltd
in
sub
or
pop
mov
jp
and
std
push
jb
divb
lret
xchg
or
and
inc
xchg
mov
mov
pop
sbb
mov
dec
fistpl
mov
adc
testb
xchg
push
je
aas
sbb
cli
mov
repz
call
mov
or
mov
adc
sbbb
inc
fstl
or
mov
xor
iret
xor
stos
pop
and
sbb
mov
fs
mov
jp
mov
and
enter
in
hlt
pop
sub
inc
sub
pop
outsl
xor
cmp
sbb
out
push
in
and
leave
std
mov
jp
mov
and
add
pop
rep
ret
mov
call
xlat
popf
jae
mov
ss
outsb
or
xchg
out
mov
fisttpl
testl
sbb
pop
dec
sub
imul
pop
pop
mov
pop
push
xor
sub
xchg
push
fcompl
test
int
sbb
mov
testb
and
sti
inc
in
jns
lods
pop
gs
test
jg
fmul
popa
aaa
jmp
ret
pop
test
dec
jno
pop
sub
imul
mov
xchg
cmpb
stos
and
dec
std
mov
sbb
dec
cmpsb
cld
out
repnz
clc
pop
notb
jg
loopne
test
pop
push
or
lcall
mov
in
mov
cltd
xlat
sub
cmpsl
push
mov
leave
cmpsl
inc
mov
cli
clc
in
push
pusha
lock
sbb
roll
stos
jo
xchg
mov
mov
mov
test
call
xor
jle
mov
pop
int3
fwait
lret
push
mov
and
into
in
add
jns
addr16
fdivrl
sub
xor
pushf
into
cltd
stc
add
dec
mov
cltd
xchg
mov
push
mov
in
sub
pop
insl
xor
aas
jl
aam
xlat
push
test
sbb
jl
mov
cli
jmp
pop
out
int
or
cmp
sub
fisttpll
ljmp
cmp
cmpsb
sub
nop
adc
sub
xor
xor
mov
outsl
pop
popa
add
jo
push
add
push
lret
cmpsl
adc
sbb
fdivs
pop
sti
repnz
lahf
sbb
push
pushf
mov
testl
in
dec
gs
out
outsb
pop
dec
inc
sbb
int3
pop
mov
loop
out
or
push
dec
push
inc
clc
gs
adc
push
mov
aam
push
ret
adc
add
push
dec
mov
mov
sub
iret
mov
sub
dec
xchg
xchg
inc
insb
xchg
pusha
jo
xor
scas
or
add
out
mov
int
loope
mov
movsl
rcll
lods
scas
xchg
in
outsl
test
in
aam
iret
movsb
mov
mov
lret
xlat
add
clc
jns
mov
pop
hlt
adc
xor
clc
arpl
lcall
std
stos
movsb
pusha
shlb
inc
sarl
add
mov
pushf
and
mov
pop
cmpb
mov
sub
lret
sbb
or
pop
and
xor
mov
rolb
inc
lcall
xchg
test
mov
fldlg2
mov
dec
jne
test
xchg
lret
fiaddl
mov
xchg
gs
mov
imul
or
lds
pop
cmp
sub
imulb
jp
push
clc
sti
int3
out
mov
jnp
iret
int3
xchg
mov
cmpsb
inc
pusha
fwait
lods
dec
imul
mov
lock
xchg
sbb
test
cld
or
mov
push
or
add
inc
add
cmp
or
sub
into
addr16
cld
push
sbb
in
into
out
or
call
add
jmp
xor
mov
popf
push
and
sbb
fnsave
mov
mov
je
push
push
dec
inc
xchg
xchg
fmuls
mov
int
mov
movsl
push
enter
adcb
bound
pop
lret
dec
in
xor
in
sahf
ret
lret
or
negb
sbb
scas
cmp
pop
test
dec
pop
push
scas
scas
mov
in
sub
lods
and
fidivrs
in
dec
cltd
pop
dec
push
mov
ret
test
scas
or
incl
push
or
push
sub
push
pop
mov
push
rcll
neg
sub
in
ret
and
mov
shrb
xchg
fimull
aad
pop
xchg
mov
decl
imul
leave
rcrl
push
mov
nop
inc
xor
sbb
dec
cltd
xchg
mov
mov
rolb
ret
pop
hlt
jg
fimull
negb
sub
ret
outsb
xor
and
add
fimuls
or
add
sbb
adc
bound
adc
xor
mov
pop
je
in
stos
inc
out
xchg
psrlw
sbb
xor
mov
cwtl
xchg
pop
jmp
add
in
fwait
enter
gs
push
lods
inc
sbb
scas
insl
mov
stos
loope
sub
je
addr16
xchg
pop
popa
insb
ljmp
cmpsl
test
jmp
sub
xor
push
xchg
insl
mov
and
sub
xchg
push
jecxz
sub
test
xchg
mov
leave
stos
inc
adc
or
addl
les
sub
pop
test
adc
nop
dec
add
inc
je
pop
dec
loop
xor
xor
jb
ret
and
mov
sub
and
andl
das
ficompl
aam
daa
les
lea
cli
sbb
stc
add
and
mov
push
lcall
inc
out
ljmp
mov
mov
dec
mov
popf
dec
push
jo
jge
cmp
mov
cmp
lock
test
mov
hlt
cltd
icebp
cmp
adc
sub
pop
cmpsb
jecxz
xor
inc
adc
mov
pop
jae
sbb
xor
lods
cltd
xor
fnstcw
cmp
lock
jp
and
pop
mov
lds
sub
xor
adc
mov
insl
push
rcrl
repnz
dec
xchg
out
out
sbb
mov
ret
xlat
jmp
inc
xchg
loopne
push
xchg
fucomp
adc
fadds
sbb
ss
test
aaa
jb
lock
inc
addr16
mov
test
jae
add
pop
gs
leave
scas
jp
jge
repnz
xchg
add
dec
jg
ficomps
imul
cli
or
daa
and
push
insb
dec
mov
in
fcoml
stc
sub
aam
adc
cmp
ljmp
jl
in
mov
shll
push
sbb
inc
mov
jnp
or
cmp
fldt
adc
jns
push
or
sbb
mov
inc
push
push
sub
aad
or
inc
adc
lahf
mov
ret
sub
idiv
out
mov
outsb
push
imul
mov
lods
imull
mov
mov
xchg
add
push
jne
pop
xchg
jne
dec
mov
inc
push
shll
mov
ret
repz
decl
and
ss
outsb
outsb
add
xor
insb
stos
loope
fmull
cmp
imul
cmpl
data16
mov
mov
mov
js
ja
outsb
dec
out
sub
hlt
mov
pusha
push
jb
pop
or
pop
test
imulb
jns
mov
sar
mov
cmp
insl
mov
cwtl
insl
call
sbb
or
in
xor
mull
lahf
mov
out
jl
sbb
push
cmpsb
xor
adc
cs
pop
int
pushf
mov
fwait
add
jo
push
mov
push
aas
push
gs
jne
pop
push
add
outsl
cmp
call
cmp
cwtl
xor
pop
out
pop
in
pop
pxor
hlt
jb
push
cmpsl
stc
pop
pop
popl
mov
je
jb
jmp
test
jnp
sub
cmp
sahf
mov
add
and
in
rcll
cmp
inc
mov
xchg
sbb
cmp
sub
sub
jnp
lods
jl
xchg
lret
dec
cmpsb
xchg
js
fst
adc
xchg
lock
jmp
icebp
cwtl
fcmovnb
adc
sbb
idiv
iret
aas
dec
mov
pop
dec
and
movsl
xor
push
cmp
add
addb
sahf
repz
outsl
push
jbe
jp
mov
sub
or
ficompl
sub
ss
lock
inc
push
cltd
nop
adc
mov
mov
adc
and
lcall
leave
cmc
incb
inc
push
loope
cs
mov
gs
lds
mov
sahf
movsb
push
sbb
lock
fnsave
and
movsb
add
add
xor
sbb
shrl
fstpl
scas
pop
push
addr16
xchg
lret
into
pop
and
mov
xor
int
mov
mov
push
movsl
and
imul
mov
pop
les
lock
shll
xchg
pop
mov
hlt
jecxz
inc
psrad
out
icebp
or
pop
out
dec
adc
clc
leave
mov
pop
mov
mov
adc
or
jns
xchg
call
sbb
cltd
mov
cmp
insl
adc
fbld
mov
cmp
ljmp
mov
addl
fcoml
in
sub
add
xor
test
and
cmpl
push
inc
xchg
xchg
xor
aam
jmp
inc
xchg
movsb
xchg
xor
dec
lds
jo
push
movsl
sbb
xchg
mov
xor
lcall
xchg
inc
jne
leave
sbb
imul
xor
repnz
pop
mov
leave
push
fistl
jno
shlb
jns
dec
icebp
add
push
add
xchg
add
add
outsl
xor
pusha
int3
aaa
jnp
dec
mov
sbb
fadds
aaa
lods
xor
inc
fimull
mov
jge
pop
dec
mov
dec
and
lahf
fcmovne
adc
imul
rcrb
lock
and
lahf
sbb
aad
into
add
or
fldenv
xor
dec
inc
lock
dec
mov
cltd
pop
aaa
mov
mov
gs
push
push
and
jo
enter
fwait
fwait
xor
xchg
pushf
in
mov
ret
int3
popa
cmpsb
jbe
xchg
ds
and
xor
fdiv
test
push
adc
sub
jg
and
int
popa
rol
xchg
add
adc
jecxz
pop
pop
pushf
xor
cmp
xor
adc
test
jp
sbb
insb
cmp
popa
pop
vprotd
cmp
cmp
mov
sbb
mov
imul
mov
xchg
dec
lahf
enter
xor
xor
test
daa
fsubl
nop
adc
cmp
test
movsl
test
dec
add
out
mov
sti
pop
cld
pop
enter
or
arpl
dec
arpl
mov
jno
xchg
je
add
xacquire
sub
inc
mov
scas
jl
pusha
je
xor
dec
cltd
cs
push
enter
add
roll
inc
push
dec
sub
shl
xor
lahf
jge
inc
inc
pop
das
adc
jle
cwtl
call
daa
andl
mov
fsubrl
lahf
ds
pop
shrl
scas
shll
mov
sbb
fstps
pushw
sub
dec
mov
rcl
icebp
dec
dec
cmp
pop
xor
fnstcw
into
push
adc
add
je
hlt
dec
pop
sbb
mov
dec
mov
push
pop
popa
adc
mov
cmp
mov
ljmp
pop
push
jne
sub
jge
push
js
or
inc
push
jnp
or
pop
jnp
repz
inc
push
ljmp
lret
mov
mov
push
inc
bound
inc
cmp
hlt
fisubs
push
dec
hlt
and
add
lds
push
enter
fwait
add
dec
pop
mov
bound
jmp
outsl
adc
pusha
cmpsb
mov
fwait
jns
dec
movsl
lds
jge
outsl
jns
or
push
xlat
push
dec
jno
in
push
pop
push
xchg
sbb
rcrb
loopne
sbb
das
jg
cmp
rclb
push
aaa
ror
mov
or
stos
sbb
daa
cmp
xchg
xchg
test
roll
fildl
or
push
jle
cmp
in
and
push
jns
imul
add
xor
imul
push
in
xchg
or
stos
inc
fs
lret
jecxz
popf
xchg
bound
jae
dec
aaa
dec
push
pop
or
mov
leave
or
divl
cmp
jecxz,pn
cs
sbb
out
xchg
popf
cli
in
pop
mov
xor
push
cmp
push
inc
jae
add
pop
enter
mov
test
add
cmc
push
mov
and
aam
xor
xor
jmp
fisubl
sub
push
push
adc
mov
mov
jbe
ret
into
dec
jno
adc
add
push
and
insb
or
sbb
fdivrs
cli
mov
icebp
lods
and
mov
mov
lret
imul
out
test
sbb
sub
and
gs
dec
lock
push
mov
sarb
flds
fisubrl
sub
dec
and
lret
dec
sbb
and
jp
or
mov
mov
add
jmp
call
xor
pop
out
imul
pop
imul
mov
scas
push
call
imul
lods
and
jo
ret
pop
aas
cmc
mov
pop
jno
aaa
out
ja
pushf
hlt
movsb
mov
cwtl
sti
mov
sub
sbb
push
mov
mov
add
nop
mov
smsw
cmc
gs
leave
push
lahf
push
push
addr16
shld
sbb
int3
cmp
int3
fisubrs
sub
cwtl
sub
jg
lret
push
sub
lock
leave
mov
and
mov
outsb
sub
mov
pop
inc
sbb
lcall
and
jmp
dec
out
mov
sbb
cmc
inc
pop
fcomps
jmpw
add
scas
inc
ffreep
loop
inc
dec
iret
cld
fimull
pop
lcall
cmp
and
mov
mov
fisttpl
xchg
adc
loopne
cmp
andb
mov
jmp
dec
ja
push
imul
sub
jnp
into
lret
fiadds
adc
pop
cmp
pop
std
in
adc
xrelease
pop
cmp
testb
xor
inc
add
faddl
sahf
xchg
jnp
jp
cmp
add
dec
ds
testl
into
test
test
jae
shll
push
shr
jnp
imul
sahf
hlt
mov
pop
ret
movsl
scas
in
int
push
xor
in
mov
lret
sbb
add
pop
and
mov
mov
cmpsl
out
xor
and
stos
adc
icebp
cmp
inc
test
psubsb
cltd
sahf
stos
jae
and
cmpl
xlat
out
clc
dec
cmp
mov
testl
js
addr16
repz
mov
xlat
xchg
pop
mov
insl
outsb
push
sub
aaa
jmp
stos
and
and
mov
inc
xor
insl
add
dec
cmp
iret
std
sbb
mov
pop
sti
inc
mov
xlat
add
xor
shl
into
je
jo
dec
cmpsb
sub
sahf
cmp
dec
addr16
pop
shlb
mov
mov
std
lds
movsl
sbb
sbb
sub
fcompl
push
mov
mov
add
cwtl
jg
subb
call
add
fildll
mov
mov
addr16
loope
push
scas
or
sahf
fcomps
rcll
mov
stos
lock
lods
orb
std
aad
inc
aas
jnp
mov
nop
adc
fnsave
imul
aam
fsub
popa
iret
enter
push
inc
in
add
xor
push
push
test
jns
adc
gs
les
jl
cmp
dec
icebp
or
pop
mov
aad
adc
sub
fnstsw
loope
dec
xor
xlat
pop
or
add
and
inc
int3
rclb
insl
and
sbb
ds
mov
and
xchg
xor
pop
fucom
adc
insl
movsl
subl
and
mov
nopl
xchg
xchg
pop
mov
xchg
pushf
cmp
clc
cmp
or
push
adc
xchg
outsb
adc
fistpll
adc
mov
jge
mov
push
dec
repz
pop
pop
ss
imul
xchg
xchg
sbb
call
bndstx
mov
js
cmpsl
in
pop
jbe
dec
or
cmp
imul
imul
or
orb
adc
ljmp
dec
push
push
inc
sbb
adc
inc
in
in
xchg
inc
pop
jecxz
jl
out
jl
lahf
push
sbb
arpl
mov
mov
aad
mov
push
mov
ffree
outsb
das
arpl
arpl
jnp
jp
call
push
and
dec
cwtl
filds
inc
daa
sub
xchg
filds
stos
stc
jbe
jbe
loopne
push
sbb
jbe
adc
dec
lret
push
pushf
xchg
ret
out
test
jb
lods
jge
or
jl
cmpsl
mov
fildll
sbb
iret
not
sbb
cmpsl
daa
cli
outsl
sub
mov
inc
sub
aas
andl
repnz
and
je
int3
fucomi
movsl
in
mov
rcrl
mov
rcll
lods
cmp
ja
xchg
loop
lcall
inc
dec
dec
lcall
sub
jne
add
cmpsb
mov
cmp
ja
shlb
fildl
jnp
mov
jbe
jl
pop
pushf
pop
pop
add
xor
out
mulb
inc
popa
lods
mov
sbb
mov
das
or
je
sbb
fiadds
mov
cmp
and
mov
or
cli
insb
out
or
dec
int3
dec
sub
pushf
scas
sti
xor
xor
sub
mov
scas
sbb
push
shll
mov
xchg
and
scas
aaa
pop
call
dec
pop
mov
inc
es
jl
dec
or
fldcw
inc
adc
push
lods
loope
mov
lock
inc
mov
mov
aaa
arpl
xor
leave
mov
lods
inc
mov
xlat
mov
xor
cltd
scas
das
out
xor
sub
jnp
fwait
mov
push
push
pop
or
int
outsb
or
xchg
dec
cld
cmpsb
bnd
sti
ficoml
fisttpll
aas
stc
leave
leave
scas
mov
push
out
imul
adc
test
xchg
sbb
aam
fwait
pop
xchg
imul
cmpsl
and
repnz
and
ljmp
repz
xlat
popa
movsb
lcall
outsl
push
adc
pop
cmp
jg
jns
cld
push
push
mov
jge
roll
cs
clc
dec
sahf
cs
gs
fidivs
and
sbb
pop
jno
pop
push
inc
sbb
fcoms
xor
ret
shl
and
dec
bound
jecxz
js
inc
mull
push
sub
ds
hlt
test
lahf
sbb
pop
mov
add
into
push
push
and
stos
test
push
leave
lods
sub
rorl
mov
xchg
aam
aad
mov
loopne
loop
cmp
movsl
jl
fwait
iret
popa
xlat
jmp
pop
aam
scas
outsb
push
push
adc
inc
ja
sti
rolb
shlb
pop
sbb
pop
fcomps
cmpsb
scas
scas
dec
int
mov
push
inc
loopne
cmc
fmulp
mov
daa
pop
xor
and
out
out
mov
push
dec
repnz
decl
hlt
sar
les
xlat
jae
scas
icebp
leave
sbb
mov
cmp
pop
in
clc
icebp
fwait
shl
add
and
insl
xlat
mov
mov
inc
and
sbb
mov
mov
into
orb
adc
xor
mov
lcall
rcrl
or
push
sub
and
sub
test
fsub
lea
dec
mov
leave
or
pop
shr
jae
test
scas
scas
sbb
inc
pop
inc
ret
inc
mov
rolb
rolb
aas
daa
test
aam
dec
jecxz
in
shrb
fmul
sub
sbb
mul
and
ja
dec
dec
stc
or
loop
push
out
filds
jge
lds
mov
imul
cld
xor
push
add
int
popf
mov
pop
sub
sti
aaa
pop
test
divl
pop
iret
std
jge
inc
insl
xchg
fcmovb
repz
jbe
push
push
rcll
jp
sub
jb
xchg
pop
mov
mov
fadds
xchg
sarl
shlb
jge
push
or
xor
lock
xchg
popa
popa
inc
clc
hlt
outsb
mov
movsb
pop
dec
or
jne
push
lds
sbb
add
femms
repz
mov
sub
add
gs
out
in
fldcw
dec
adc
dec
xchg
and
jno
imul
arpl
sbb
hlt
cs
mov
and
mov
lods
loope
mov
shlb
inc
or
xor
adc
adc
dec
sbb
mov
aad
in
mov
shrl
add
cs
dec
jne
jp
and
jbe
in
mov
aaa
and
mov
in
adc
repz
add
dec
xor
ret
pop
enter
sbb
addb
xor
xlat
movsl
jne
dec
in
xchg
outsl
mov
ret
jg
adc
insb
xor
leave
jns
fistl
fnstcw
test
div
mov
les
sub
mov
sub
lcall
int3
imull
std
sub
dec
ja
repnz
popf
in
enter
movsl
jne
lcall
push
mov
mov
iret
ror
sarb
arpl
jmp
in
loopne
jno
cli
inc
jmp
rcr
cmc
movb
dec
lea
sub
loope
daa
fbstp
push
inc
xchg
insl
push
ds
jno
cmp
js
inc
aaa
xchg
scas
push
jmp
mov
inc
add
shll
stos
xchg
js
sub
lcall
xor
push
lahf
push
xchg
lods
or
std
nop
ss
or
push
sub
iret
fnstsw
and
xor
lret
repnz
sbbb
adc
mov
dec
ret
imul
sub
aad
cmp
jb
sbb
pop
inc
cmpsl
xor
inc
mov
xor
dec
and
mov
or
cs
mov
jnp
sbb
sub
addb
xor
xor
push
nop
mov
add
stos
or
pop
mov
gs
mov
mov
out
jne
mov
sub
mov
xchg
mov
inc
cmp
mov
push
lret
in
hlt
std
lahf
shll
dec
mov
or
movsl
shrb
add
sbb
push
outsb
adc
mov
jno
int3
popa
jle
mov
inc
movsl
and
and
cmp
dec
mov
mov
inc
add
fstps
dec
jno
and
add
in
mov
mov
push
out
cli
fcmove
cmp
fistps
pop
cli
pop
adc
sub
sbb
mov
xor
rorb
ret
and
loop
dec
aaa
mov
mov
es
pusha
pop
push
int
add
stos
cwtl
add
insl
lret
xlat
mov
dec
sahf
mov
add
mov
mov
push
jle
cli
scas
les
pop
dec
mov
ret
mov
or
aam
lahf
fstl
mov
jg
popf
mov
cmp
addr16
test
push
add
mov
imul
in
mov
in
je
xor
cmc
aam
xor
adc
mov
mov
outsl
and
and
imul
sahf
sub
inc
mov
mov
jne
cs
add
and
and
jecxz
or
scas
push
mov
mov
pop
mov
out
ljmp
mov
test
out
adc
cli
bnd
pusha
pop
jmp
or
or
loope
cvtdq2ps
pop
test
cli
int
hlt
xchg
jg
xor
fwait
cld
cmp
and
scas
pop
adc
cmp
iret
insb
mov
cmp
cmp
sbb
loop
sbb
mov
loopne
cmc
jbe
sbb
lods
dec
cmp
cwtl
int
jb
jnp
sarb
negb
dec
add
in
jae
enter
pusha
leave
mov
scas
and
xchg
stc
sarl
loop
jp
rorl
test
inc
out
scas
mov
fwait
cld
cmc
or
aam
ret
orl
scas
in
in
and
jbe
pop
dec
add
mov
xchg
cmp
icebp
xchg
dec
cmpsb
sub
dec
sub
roll
testb
adcb
xor
aad
in
mov
das
adc
mov
popl
xchg
or
push
and
cs
insb
jb
arpl
fs
bound
cmp
xchg
popf
inc
stc
fstps
popa
nop
mov
pop
lahf
fadds
pop
fdivr
iret
and
dec
and
mov
aad
inc
sub
hlt
orb
in
push
cmpsl
push
cmp
and
aad
xor
lock
cmp
jns
push
and
xorl
out
int3
pop
hlt
lret
out
dec
lods
mov
add
mov
push
aas
cltd
mov
repz
dec
mov
jmp
add
pushf
dec
cmp
push
cwtl
pop
pop
fwait
out
loop
inc
cltd
jecxz
pop
adc
push
lahf
adc
push
hlt
and
sub
andl
jle
push
mov
adc
cmpsb
adc
mov
fsubs
out
adc
popa
pusha
adc
fstpt
and
iret
xchg
cmp
out
xchg
fcoml
inc
mov
into
inc
jge
push
dec
push
sbb
sub
inc
cmp
frstor
sbb
or
mov
bswap
scas
pop
cmpb
cmp
nopl
lock
loop
and
mov
pusha
call
bsf
lret
add
frstor
fstps
cmpsb
push
aas
cmc
cmp
jb
mov
ret
adc
movsl
jl
loope
mov
and
xchg
cld
jl
ret
fwait
push
mov
jne
andb
push
mov
aaa
mov
cmpsl
dec
jg
in
stc
mov
mov
xor
and
sbb
push
addr16
ss
mov
hlt
cli
or
inc
pop
xchg
and
mov
and
sbb
pop
outsb
sbb
and
jnp
cmpsl
nop
xchg
mov
or
push
stos
mov
aam
mov
xor
out
mov
sbb
out
dec
push
mov
loopne
jbe
imul
xchg
pop
cmp
mov
fstl
shl
mov
loopne
pop
in
bnd
lcall
fnstcw
mov
lahf
loope
dec
mov
cmp
mov
dec
pop
fildl
int3
push
js
pusha
jecxz
insb
cmp
fdivs
pop
lcall
push
pop
xchg
iret
dec
jo
inc
cltd
xchg
int
imulb
mov
sbb
outsl
insb
mov
out
andb
xor
cmp
mov
mov
cmp
xor
adcb
aaa
inc
dec
mov
insb
or
fidivrl
or
and
inc
loope
cmpsl
sbb
sti
cmp
popf
cld
hlt
jne
dec
lcall
adc
add
sti
lret
adc
pushf
dec
inc
lcall
adc
movsb
repnz
stos
pop
cmp
add
xchg
mov
mov
imul
adc
sti
ja
adc
cmp
mov
sub
mov
int
imul
add
sbb
add
je
out
loopne
ret
popa
jb
jo
loopne
out
mov
ret
or
mov
pusha
mov
jo
jns
mov
push
pusha
aad
cmp
popf
dec
mov
shrb
dec
mov
inc
outsb
cmp
std
icebp
fnstenv
mov
adc
pop
ds
adc
pop
call
out
mov
mov
push
cmpsl
dec
lock
adc
xorb
or
scas
aad
in
stos
sub
cmp
sbb
mov
je
pop
aas
mov
sub
mov
or
addr16
jo
sbb
jo
aas
mov
jbe
imul
sub
mov
decl
add
cmp
mov
mov
pop
jecxz
mov
xor
fwait
push
mov
cli
add
mov
out
and
ret
int3
test
pop
inc
push
addb
mov
sbb
xchg
xor
gs
imul
cmp
inc
sahf
push
mov
out
sti
mov
rcrb
xor
add
aad
fstpt
or
and
fistps
push
ds
push
ljmp
mull
in
mov
jmp
in
lock
mov
movsl
lods
sub
xorl
mov
fmull
jecxz
cltd
stos
jecxz
dec
std
jne
repnz
in
pop
sarl
cs
xchg
rcr
dec
mov
pushf
inc
and
cli
pusha
enter
and
cmp
xlat
mov
repnz
add
scas
mov
sub
mov
out
jle
nop
pusha
xchg
adc
inc
adc
in
and
cwtl
sub
iret
and
test
xor
gs
mov
and
or
cmpsl
mov
jmp
stc
int
and
pop
lock
bound
xchg
rclb
xor
pop
pop
in
sub
and
cmp
mov
cmpsl
loope
mov
add
and
xor
out
jae
adc
and
nop
adc
adc
fsubs
cmp
dec
pop
std
movsl
repnz
inc
jle
xchg
pop
fs
sbb
outsb
push
dec
adc
rclb
daa
pop
cmp
xorl
iret
popf
scas
pop
adc
push
lahf
push
or
test
inc
bound
adc
imul
xor
xchg
jns
hlt
aad
mov
mov
into
fidivs
mov
push
xchg
cmp
es
ja
inc
out
daa
aas
cmp
sbb
xor
fbld
ret
xor
xor
and
cmp
jl
orb
mov
popf
std
mov
mov
scas
in
push
mov
imul
dec
addr16
stos
das
pushf
jns
adc
ret
rorl
jnp
mov
test
sbb
hlt
sahf
pop
or
adc
rorb
fcoms
sub
xchg
dec
pop
pop
dec
add
fisubrl
or
cmpsl
js
int
pop
jp
enter
xchg
in
xchg
sbb
into
pusha
ret
lret
scas
jns
stc
pop
xor
inc
in
hlt
and
pop
je
outsl
push
jle
arpl
ds
cmpsl
push
push
cmpb
pop
inc
popa
fldenv
out
xor
mov
cmpsb
out
adcb
mov
inc
cld
je
aad
push
and
mov
jae
and
push
adc
clc
xchg
mov
addr16
movsb
outsl
cmp
fnstsw
pushf
fsts
push
inc
mov
dec
cmp
sbb
cld
or
mov
mov
test
dec
std
popa
inc
ja
cmpsb
int3
xchg
xor
xlat
scas
inc
or
and
lock
iret
test
xchg
dec
sbb
jg
mov
jp
and
sbb
inc
aas
divb
faddl
cmp
outsl
mov
add
ds
sbb
add
rolb
dec
jae
sbb
mov
cmp
out
mov
movsb
insb
push
jbe
aaa
aam
fsave
lcall
sbb
je
lock
ss
push
cmpsb
jp
lock
sbb
jmp
outsb
xchg
in
aas
cmp
xchg
out
jno
and
out
shlb
push
pop
mov
aaa
sub
shlb
paddb
scas
jp
ljmp
aam
mov
pusha
inc
mov
ljmp
add
or
mov
je
jmp
rol
stos
out
lods
popf
sub
arpl
test
call
dec
lock
icebp
clc
in
daa
cmp
jb
aaa
dec
pop
mov
dec
and
dec
gs
fwait
ret
xchg
and
pop
add
cmp
push
mov
dec
push
dec
xlat
fistpl
cli
pop
push
mov
lcall
movq
bound
shr
adc
add
loopne
mov
hlt
ret
leave
in
push
pop
clc
push
mov
ret
sbb
cmp
subb
or
mov
dec
hlt
daa
sahf
xor
in
jg
cld
cmp
out
lahf
xchg
and
jnp
ret
lea
pusha
repnz
test
jo
lods
addr16
xlat
fwait
pop
aam
inc
call
lds
mov
scas
inc
inc
cltd
in
add
pushf
fcmovb
stc
out
inc
rolb
and
jmp
pushf
pop
int
inc
push
pop
add
add
add
push
lahf
adc
add
jb
cld
repnz
lock
inc
cmp
cmc
mov
xchg
ret
je
repnz
xchg
rorb
lds
jo
movsl
lret
fidivl
in
enter
mov
outsb
push
xor
push
in
jns
js
push
pusha
xor
repnz
repnz
cmp
xor
out
and
push
inc
adc
shl
jmp
jbe
push
les
mov
add
xor
fcompl
pop
cwtl
mov
inc
aaa
jae
dec
inc
sbb
hlt
ja
jno
test
jo
cmp
fdivrs
add
in
xchg
data16
out
sbb
mull
mov
cmc
sbb
lahf
in
or
mov
mov
sbb
sub
add
adc
psllq
cltd
icebp
inc
or
lds
push
or
mov
stc
or
jae
gs
push
xchg
stos
add
xchg
pop
orl
cmp
push
sbb
ret
jne
lods
pop
or
jo
inc
pop
push
mov
loop
xchg
fsubrl
lock
fcoml
xor
inc
sbb
mov
mov
bound
jl
push
mov
pop
mov
pop
sti
mov
jge
icebp
cwtl
repz
out
in
out
into
push
or
out
mov
cmp
push
iret
stos
stos
push
repnz
loop
jmp
mov
out
xchg
movsb
add
dec
mov
cmp
aam
pop
nop
pushl
adc
sub
aaa
add
aaa
mov
out
lahf
xchg
mov
mov
mov
adc
jo
cmpsb
rcl
sahf
or
xchg
pop
mov
cmp
cmp
and
xchg
loope
jl
js
pop
mov
sub
xchg
jecxz
push
cs
sbb
cmp
mov
sbb
mov
mov
inc
or
xchg
pop
jle
pop
in
cwtl
or
pop
jecxz
xlat
sbb
xor
xor
dec
icebp
pop
and
push
in
cmpsb
dec
pop
lret
fadd
nop
or
bound
popf
jp
xlat
jmp
xchg
daa
fdivs
jmp
les
lods
movsl
jmp
dec
test
pop
mov
dec
test
inc
pop
pushf
dec
js
jp
sub
adc
out
jge
aad
dec
std
jmp
sub
fbld
push
sbb
sub
sbb
out
cli
adc
xchg
and
stos
xchg
xchg
xchg
scas
loop
add
inc
sub
cmc
jbe
lahf
shrb
xchg
xor
call
out
fnstenv
cmpsl
add
sbb
cmp
icebp
daa
jno
pop
cmp
cmp
xchg
mov
fdivrp
sub
pop
out
mov
sti
pop
sbbl
mov
adc
popa
push
or
jp
fisttpll
imul
movsl
cltd
cs
jne
sub
jmp
sbb
adcb
popf
out
cmp
and
mov
test
adc
mov
dec
enter
rcrb
jecxz
repz
mov
add
mov
cmp
ret
adc
je
xchg
lods
mov
subb
pop
sbb
or
ret
jae
adc
jnp
rcrl
push
sbb
jb
xlat
in
stc
add
xchg
sbb
pushf
push
mov
sbb
icebp
sbbb
pop
sahf
pop
rolb
fwait
jl
lret
pusha
cmp
cmp
test
lret
cmpsl
fidivrs
xor
adc
sbb
nop
mov
pop
out
add
daa
cmp
mov
lret
lahf
aam
std
jns
mov
adc
push
jns
push
add
sub
cmp
insb
insb
lcall
stc
xchg
and
pop
les
aad
loop
andl
lock
pop
data16
push
mov
rorb
adc
lcall
stc
movups
add
stc
nop
jmp
rolb
rcll
sbb
and
rorb
ficomps
sub
cmp
ja
jl
dec
pushf
and
push
or
mov
js
or
daa
mov
jo
sti
xchg
xchg
movsl
cltd
and
pop
dec
push
sub
ret
xchg
add
and
dec
sahf
xchg
jae
int
adc
and
rcrl
dec
jg
jae
dec
lcall
ror
int
pop
in
mov
mov
sbb
subl
push
cmp
test
fadds
ja
repz
xor
mov
adc
xchg
je
imul
xchg
aam
lock
insl
rcrb
mov
pop
push
jecxz
fs
inc
movsl
mov
push
enter
adcb
cmp
dec
mov
scas
jmp
jns
js
out
rclb
xchg
cmp
mov
rorl
lods
inc
rcrl
cmpsb
jne
mov
scas
aam
inc
xor
mov
and
lret
push
jno
jno
repz
cmp
pop
cmpsb
rcl
adc
ljmp
test
orl
adc
lea
xchg
orb
dec
jae
sbb
shll
test
test
add
push
je
div
xchg
cmpb
and
cltd
cmp
call
enter
leave
int3
xchg
aad
inc
addr16
jno
pushf
stos
pop
shl
sub
stc
ficoms
push
mov
movsb
xchg
lahf
cmp
mov
add
sub
cltd
ds
sub
leave
mov
adc
jge
push
pop
push
cs
jl
in
adc
in
or
mov
push
cmp
xchg
test
or
lock
mov
cmp
scas
icebp
xchg
mov
sub
and
in
stos
xor
cltd
cmp
test
add
push
dec
iret
xchg
sub
arpl
xor
dec
push
sar
cmpsl
cmp
xor
mov
paddd
test
xchg
fdivr
mov
xchg
xchg
and
incl
bound
arpl
mov
sbb
outsb
test
jo
stos
inc
adc
or
fidivrl
imul
in
mov
dec
xchg
repnz
loopne
lret
sti
pop
sbb
cmp
aas
cmc
or
dec
add
fstpl
sti
div
out
in
mov
xchg
cli
cmc
out
or
adc
pushf
push
sbbl
ficoml
jge
scas
lret
adc
jle
popa
jne
jne
dec
lret
sbb
xchg
lretw
jnp
scas
call
dec
cmp
dec
loopne
hlt
nop
sbb
mov
scas
jecxz
mov
inc
leave
xor
nop
fstl
inc
rol
pop
and
hlt
pop
sbb
fldt
fsubs
xchg
jmp
iret
mov
dec
dec
lahf
jae
stc
pop
int
adc
sub
imul
shll
shr
fs
dec
mov
and
inc
mov
hlt
dec
pop
dec
fbld
xor
or
shrl
int3
mov
rcrl
daa
pop
pop
shll
jnp
jno
jecxz
or
das
jle
cmp
or
ja
gs
xchg
jge
daa
and
icebp
test
adc
bound
aas
lods
xchg
cmp
cmc
xchg
mov
mov
cmc
pop
clc
movsb
cltd
movsb
mov
mov
xchg
fs
jl
test
inc
pop
and
push
mov
test
in
inc
test
fisubrs
js
das
popf
insl
rcl
fcomps
mov
movsl
fcomps
notb
inc
imul
sub
pop
mov
mov
addr16
in
push
pop
lods
mov
pop
scas
lods
push
pushf
dec
int3
gs
into
xchg
stos
add
inc
ror
jecxz
push
popa
sbb
shlb
and
test
je
xchg
dec
insb
iret
cmpsb
add
dec
xlat
adc
loopne
lock
stos
addr16
rcrb
cltd
mov
data16
push
add
and
add
or
sbb
push
jle
push
arpl
adc
inc
lods
add
dec
in
call
fwait
dec
mov
rcll
movsl
in
notb
jnp
fisttps
pop
shlb
scas
leave
test
data16
dec
lods
ja
cmp
aas
push
insb
dec
shlb
add
inc
mov
mov
xchg
xchg
xor
xchg
scas
cs
sub
daa
aad
lds
xor
cmpsl
getsec
add
lret
push
int3
inc
ss
mov
insb
lods
sbb
or
sbb
out
pop
add
cwtl
ret
fnstenv
decb
or
xchg
pop
dec
pop
dec
pop
int3
xchg
mov
pop
in
mov
add
les
add
xchg
xchg
imul
rcrb
push
js
xor
fwait
and
sbb
into
hlt
aas
sbb
mov
call
pop
mov
in
cs
push
int3
mov
sub
test
int3
iret
xor
push
cmp
jmp
shlb
mov
mov
sbb
insl
pop
mov
pop
clc
pop
in
cmp
imul
rcrl
decb
jns
jmp
mov
pushf
inc
jne
sbb
les
pop
push
faddl
arpl
xor
sahf
loope
movsb
ret
push
mov
arpl
lea
aaa
mov
xchg
jge,pn
in
jg
or
cmp
jne
lret
out
push
or
cmp
jo
push
xlat
repz
lea
or
add
pop
add
subb
mov
ljmp
add
out
inc
adc
inc
call
xor
call
loopne
sub
jns
jmp
xchg
mov
jns
mov
mov
lds
icebp
cmpsb
sub
stos
mov
in
sub
in
int3
movsl
mov
les
rcr
xorl
es
pop
or
xor
jo
mov
int
cmp
dec
popf
cli
orl
ret
or
jns
cmc
xor
sub
inc
sub
push
push
push
popf
imul
pop
mov
mov
or
pop
mov
jecxz
inc
dec
adc
fcomps
mov
fisttps
cmp
sahf
jno
out
fwait
pushf
cmp
inc
dec
or
mov
bound
xor
xlat
push
lahf
sahf
sub
jge
jmp
repnz
aad
stos
ss
cmp
mov
jg
cmpsl
jecxz
pop
adc
mov
outsb
stc
cmc
mov
xchg
mov
adc
xchg
int3
inc
or
mov
push
push
sbb
dec
mov
pop
cmp
in
pop
pop
sub
jbe
sub
push
cmp
push
push
push
fidivs
sub
inc
rorb
insl
inc
xchg
aam
xchg
aaa
pop
adc
cmpsb
xor
sbb
fwait
jnp
jmp
jne
adc
jae
aad
mov
imul
add
movsl
hlt
dec
mov
loop
inc
cmp
inc
cmp
arpl
dec
adc
and
addr16
shrb
fsubr
pop
pop
jmp
and
das
jae
fidivl
and
inc
lods
imul
cld
adc
bound
adc
pop
adc
int3
push
push
push
mov
insb
jne
mov
enter
in
add
outsl
mov
ret
jle
xor
fisubs
out
xchg
add
fmull
stos
rorb
fsubrl
out
loop
cmp
les
lahf
in
out
fimull
adc
out
out
adc
imull
mov
add
or
jge
mov
sbb
sub
push
push
popf
lds
push
loope
fdivrl
jns
mov
data16
cmp
add
pop
or
rcll
lret
lods
sub
cli
dec
mov
sub
ljmp
mov
jp
int3
loopne
shll
jno
andl
dec
insl
add
xchg
mov
jmp
jae
negb
or
arpl
jnp
mov
cld
add
add
push
test
dec
test
das
iret
sub
test
rcr
lods
dec
mov
sub
mov
pusha
jle
sub
inc
adc
je
pop
orl
sub
mov
ret
ds
sub
enter
mov
jle
push
xor
jge
sub
insb
inc
stos
rclb
aam
in
xlat
adc
stc
fsubr
adc
fstl
jg
filds
out
lahf
testb
xchg
mov
lret
pop
push
push
mov
xchg
ffreep
das
xor
andb
arpl
movsb
lock
xchg
js
shll
loopne
push
imul
sbb
pushf
or
push
test
das
cld
cmp
out
inc
jmp
dec
ja
mov
es
ss
fldt
imul
aam
jge
sub
xchg
sbb
mov
loope
xlat
adc
cs
repz
shl
cmp
mov
rcr
enter
str
dec
mov
js
mov
fcom
es
jne
sbb
push
push
push
and
cmp
jb,pt
mov
fmuls
outsl
jae
xor
jge
data16
pop
cli
out
lret
popaw
test
mov
shrl
dec
pop
dec
and
xor
sahf
enter
pop
jnp
lods
movsb
jl
ret
lods
xchg
clc
jne
in
arpl
ss
xor
cltd
sahf
pop
pop
imul
jne
cld
adc
aaa
popf
sti
push
loopne
cmpl
cmp
mov
outsl
inc
push
test
mov
cmpsl
jmp
jne
fbld
insb
xchg
imul
outsl
addb
cmpsb
push
jl
mov
sbb
roll
in
push
jno
in
adc
push
test
call
mov
xor
sub
loopne
push
dec
push
shll
or
adc
xor
mov
stc
or
cmc
aas
adc
cmc
pop
dec
xchg
stc
out
xor
cmp
rorb
cmp
ljmp
dec
mov
std
jl
iret
stos
dec
outsb
aad
sub
add
cmp
cmc
in
mov
jl
stos
test
cmpsl
fs
and
mov
mov
jmp
xchg
repnz
xchg
sub
nop
and
clc
sti
testb
adc
pushf
ret
pop
mov
add
sbb
mov
xchg
pusha
sbb
imul
insb
or
mov
call
in
cmp
mov
fisttpl
xor
adc
xor
lret
pusha
mov
cmpsb
mov
xchg
pop
mov
pavgw
ffree
rolb
mov
daa
fsubr
push
cmp
cmp
xor
xchg
push
pop
dec
addr16
pop
repnz
adc
push
mov
or
cld
mov
in
adc
arpl
jmp
cmp
sub
xchg
shlb
pushf
lret
and
jmp
xor
lods
je
or
push
pop
adc
pop
sub
add
sbb
sbb
sub
pop
mov
push
imul
arpl
clc
test
inc
cld
or
add
arpl
push
or
xor
test
outsl
xchg
and
mov
xchg
sbb
and
ret
and
add
xor
aad
cld
cmp
mov
jnp
outsl
xchg
aad
lea
in
adc
cltd
adc
aam
xchg
mov
add
mov
ljmp
inc
test
cld
xor
cmpsb
in
add
add
scas
xor
mov
enter
repnz
insb
dec
dec
loop
mov
push
mov
sub
lret
insb
lea
jae
add
jp
xor
mov
jo
insb
loopne
or
add
xlat
imul
lret
in
add
push
lea
inc
call
test
sbb
out
scas
int
push
sahf
shrl
faddl
insl
xor
xor
fcmove
xchg
repz
enter
jmp
sbb
repnz
aaa
aad
scas
rdtsc
lods
mov
testl
add
repnz
mov
sub
mov
es
outsb
rcrl
into
cs
fldenv
xor
and
mov
stos
xchg
jmp
call
in
sub
adc
outsb
push
jmp
pop
mov
in
dec
shrl
insl
mov
push
add
push
imul
jge
test
int3
subl
loope
mov
psubsb
popf
in
push
lods
lea
lret
jp
popa
popf
shll
dec
mov
fbstp
pop
dec
dec
imul
jae
add
mov
lds
aaa
sub
add
jecxz
aam
test
daa
inc
sub
ja
in
mov
jno
sbb
pop
lds
sub
lea
push
test
push
arpl
mov
sub
adc
stc
jnp
sub
mov
jno
and
push
fisubs
xlat
jns
mov
js
add
test
cmp
pop
adc
xor
pop
sub
lds
ja
xchg
fbstp
test
fwait
jno
push
mov
or
fnstenv
negl
test
sub
cmp
movsl
test
arpl
ja
hlt
mov
insb
enter
arpl
add
imul
bound
int
inc
add
push
adc
pop
pop
push
mulb
adc
xor
inc
push
imul
pop
fbstp
jmp
shrl
jge
adcb
loop
mov
notl
mov
nop
or
scas
push
test
sarl
test
jo
sub
mov
mov
stc
ret
cmpb
sahf
ret
mov
pop
outsb
test
jnp
add
push
pushf
lds
mov
push
and
sub
rcrl
push
pop
xor
es
lods
cmpsl
std
popa
js
xlat
cltd
push
ret
or
lret
arpl
cmpsl
stos
mov
xor
push
sbb
out
adc
lret
cmp
sbb
cli
xor
in
xor
xor
insl
inc
and
jns
stc
loope
or
sbb
insl
mov
int3
sub
dec
inc
rorl
cmp
inc
lock
test
sbb
es
inc
lods
imull
fsub
add
cltd
inc
cmp
stos
inc
mov
add
cmpsl
mov
dec
pop
push
sbb
cld
leave
xor
xchg
jne
orl
sar
mov
fsubl
imul
sub
std
adc
cs
clc
sub
in
pop
mov
out
das
dec
sub
rorl
cmp
test
xchg
addr16
push
sbb
pusha
lret
jge
sub
push
pop
lahf
mov
dec
add
xchg
jae
and
xchg
and
jg
jnp
jp
incl
adc
xchg
mov
pop
pushf
sub
rolb
call
call
and
cmp
sbbl
pop
xor
inc
nop
ljmp
insb
gs
test
out
in
stos
cld
adc
cltd
in
push
sbb
push
sub
test
sar
jle
jle
push
adc
mov
movsb
ret
jns
dec
sub
sub
or
ret
jae
cmp
leave
inc
shrl
popf
mov
lock
push
pop
das
or
sahf
roll
cmpsb
inc
xchg
mov
mov
rcl
pop
add
daa
xchg
aam
test
adc
sub
add
and
jae
pop
mov
ja
stos
adc
movsb
cmpsl
add
arpl
mov
sub
das
gs
and
push
test
jg
xor
add
ret
xchg
bnd
push
push
addr16
dec
addl
dec
sbb
sbb
add
loope
cld
sbb
cmp
push
jb
data16
xchg
or
idiv
or
es
xor
insl
int3
int
cmpsb
mov
inc
clc
lahf
or
add
cmpsb
jmp
sbb
lock
scas
inc
jbe
xorl
rcll
addl
jp
xlat
outsl
or
sub
rcrl
cmp
xchg
movsb
sbb
jnp
in
sub
outsb
push
dec
hlt
inc
pop
push
loop
popa
popf
sbb
scas
mov
pop
or
xor
outsb
ret
std
sub
cmpsl
frstors
lcall
xchg
sbb
orl
jmp
and
pop
lock
pop
or
popa
lods
adc
ret
fdiv
ret
jecxz
iret
ljmp
add
mov
xlat
add
push
sti
outsl
mov
cmp
out
ja
mov
push
lahf
push
xor
sub
rol
scas
movsl
loopne
outsb
cltd
add
sar
out
inc
cltd
mov
in
and
inc
aam
cmp
mov
jmp
add
fsubrl
push
xorl
in
int
adc
adc
andb
cmpsb
sarl
notl
or
aaa
ret
pop
add
cmp
sbb
ret
jo
xchg
mov
push
in
push
pop
sahf
mov
popf
pop
inc
fsts
or
loope
mov
ss
xchg
aaa
int3
aas
cmpsb
out
mov
pushf
mov
jmp
jp
dec
mov
std
mov
mov
xorb
lcall
ret
add
jecxz
pop
mov
mov
pop
ffree
lcall
jge
pushf
test
aas
shll
ss
rcl
sub
lods
fisubrs
call
lods
jecxz
sub
mov
pop
jg
lea
add
test
cld
cmp
cmp
mov
inc
test
mov
sub
mov
repz
sbb
movsl
int
xchg
jne
mov
dec
es
cmp
int3
mov
pop
jl
jge
das
xor
jge
adc
pop
or
inc
sub
aas
stos
and
scas
xlat
mov
cmp
xor
pop
and
sbb
arpl
adc
mov
pop
jb
and
out
lods
sti
je
sub
mov
sbb
inc
xchg
dec
adc
jbe
mov
mov
imulb
sar
mov
xor
je
cmpsb
sub
xor
inc
xchg
fstpl
jb
mov
mov
cmp
sub
dec
adc
shrb
xor
or
jb
repz
add
clc
xchg
or
xor
and
jge
lcall
in
js
scas
mov
ret
dec
mov
mov
sub
sbb
mov
pop
orb
jno
add
rolb
fimuls
inc
rorb
and
out
lcall
sub
shrb
movsb
fdiv
in
sarl
outsl
ficoms
mov
loop
xchg
push
push
imul
lret
xchg
and
jmp
out
lods
int3
fwait
into
sbb
mov
flds
push
inc
push
orl
addr16
mov
xchg
push
xchg
sub
scas
pop
adc
sub
out
adc
jl
add
cs
dec
dec
inc
mov
adc
mov
cmp
mov
repnz
rcrl
push
mull
fsub
or
mov
rcrb
out
mov
or
je
shr
stos
mov
and
xchg
dec
push
sarb
js
fimuls
sti
lret
adc
sbb
push
pop
dec
adc
fisttps
mov
inc
pop
inc
pop
dec
insb
stos
out
mov
rcrl
scas
repz
and
mov
pop
nop
dec
lret
aas
jmp
mov
ja
sub
pop
or
addr16
out
adc
mov
adc
mov
gs
stos
pop
testb
in
jle
icebp
mov
mov
lret
nop
cmpsl
jmp
rcrl
adc
push
fwait
lea
stos
cmpsl
in
ret
xlat
xchg
xor
outsl
cmc
adc
daa
mov
lods
sti
xor
dec
das
xlat
pop
mov
mov
jecxz
fsubrl
mov
mov
dec
and
cltd
dec
adc
pcmpeqb
push
pop
loop
idiv
fisubs
hlt
daa
pusha
jns,pn
mov
in
rcl
xchg
or
push
loop
mov
or
cld
adc
loop
push
rcrb
je
repnz
dec
test
xchg
shrb
or
xor
adcb
add
jne
dec
fisubl
pop
fidivrs
xchg
pop
test
repnz
adc
stos
adc
cwtl
ror
int3
mov
mov
sub
pop
ss
out
dec
sbb
mov
mov
add
mov
stc
adc
scas
mov
add
dec
shlb
push
stos
aam
mov
sti
mov
cmp
xchg
ja
nop
fcompl
fwait
mov
shlb
mov
jecxz
cmp
aaa
add
cmpl
shld
mov
in
out
outsl
pop
and
scas
xor
fimuls
addr16
or
cmc
xchg
fiaddl
dec
push
inc
dec
pop
rorl
je
aaa
mov
int3
rol
sbb
lods
scas
xlat
fsts
mov
test
fsubrs
xchg
sbb
js
jp
xor
mov
mov
mull
mov
mov
dec
aam
xor
or
cmp
mov
rcll
movsl
rcr
push
mov
push
pop
inc
add
sbbb
scas
ret
push
data16
in
out
lea
test
test
jbe
nop
jns
inc
popa
out
fidivrs
cld
hlt
in
mov
fistps
adc
sbb
mov
in
xor
and
je
aad
je
adc
mov
and
dec
jne
ret
loopne
scas
dec
add
jns
mov
gs
loopne
imul
enter
cs
popa
rcll
xlat
nop
mov
movsb
test
shrl
subb
rcll
lret
lods
inc
xlat
and
push
add
das
into
adc
push
jnp
jb
mov
xchg
rcrb
enter
xor
xchg
xchg
test
call
lret
cmp
or
jmp
fmuls
cmpsb
imul
int
push
mov
aad
xlat
incb
les
loope
and
cmc
je
test
jbe
dec
js
sub
pop
shr
into
bound
pop
mull
xchg
adcl
js
push
jg
push
dec
out
xchg
rorb
push
mov
je
loopne
cmp
scas
jmp
mov
ret
jmp
sbb
push
ficompl
cmp
inc
jge
shl
mov
aaa
aam
hlt
fsubrp
xchg
xchg
add
adc
iret
add
out
or
ljmp
in
dec
loopne
inc
test
mov
mov
and
mov
pop
adc
push
mov
ljmp
mov
xor
repnz
pushf
mov
jle
sub
out
int3
mov
inc
into
mov
mov
sti
lret
out
fcmovnb
sub
adc
repnz
push
rorb
mov
test
or
je
mov
lds
or
imulb
pop
xchg
jmp
sbb
push
push
fwait
pop
das
popa
dec
test
mov
gs
notb
bound
jmp
inc
sub
xor
call
daa
inc
rol
dec
iret
xchg
cmp
out
nop
sahf
ret
imul
xchg
arpl
dec
nop
cmpsb
lds
or
test
mov
xor
inc
add
iret
adc
test
stos
push
sti
and
adc
pop
jb
mov
inc
push
dec
call
inc
in
nop
lock
pushf
adc
int
sbb
and
mov
jg
pop
ret
adc
dec
loopne
add
fwait
mov
adc
mov
fs
int
imul
mov
addb
popf
pop
dec
lods
dec
add
mov
int3
sti
pop
sbb
pushf
or
inc
jl
stc
pop
mov
jecxz
jecxz
xchg
stos
push
mov
fimuls
sub
and
out
jne
cmp
add
sub
cmp
pop
dec
inc
cmc
ret
xor
inc
lcall
push
xor
adc
pusha
hlt
push
ret
xor
adc
sbbl
push
call
int
or
push
int3
cmp
xchg
cs
xchg
jle
or
jle
movsb
mov
sub
push
add
mov
or
imul
neg
mov
pop
xor
insb
ds
daa
or
test
aad
jg
cmp
rorl
fnstsw
je
test
xor
push
mov
clc
pop
pusha
inc
xor
popa
inc
sub
pop
mov
and
mov
ss
push
lahf
popa
mov
pop
fwait
std
dec
or
xor
sub
faddl
jmp
dec
idivl
push
test
xchg
je
mov
inc
call
push
jne
pop
lods
ret
clc
xchg
rcl
rcr
mov
mov
mov
add
bound
icebp
daa
mov
push
jecxz
stos
int
fsts
push
and
add
mov
xor
push
xor
mov
fistps
cmp
push
in
nop
sbb
push
lods
inc
fwait
in
fcomps
repnz
mov
add
pushf
daa
lret
adc
push
mov
xchg
std
rorb
lahf
inc
loop
pop
rcrb
addr16
pop
xor
add
dec
xchg
jno
leave
dec
mov
sub
mov
cmp
inc
ret
clc
lods
pop
popf
jp
in
mov
movsl
sbb
pop
out
jmp
mov
daa
mov
test
add
mov
lea
sbb
sub
mov
popa
ret
cmpsb
xlat
fisubrs
dec
jmp
cltd
cmc
pop
vpsubq
hlt
mov
das
pop
mov
pop
jno
dec
test
pop
cmp
aam
sbb
sbb
arpl
dec
jns
push
jl
push
push
lcall
cmpsb
jge
pop
xor
popa
xchg
adc
repz
push
jl
clc
xor
test
stc
sbb
push
sbb
mov
popa
lret
cmpl
fldt
out
cs
jne
push
push
lret
hlt
outsb
or
mov
data16
inc
xchg
sahf
mov
cmpsb
or
in
mov
fwait
add
call
loope
lock
fsts
dec
and
jae
or
push
ret
mov
jno
rcrl
jnp
fdivr
out
dec
sub
maskmovq
divl
pop
xchg
outsl
testb
outsl
cmp
xchg
mov
xor
push
add
push
das
fisubl
stos
xor
test
jb
dec
xchg
xchg
cmp
arpl
test
dec
sub
push
cmpsb
pusha
loop
dec
cwtl
into
jne
out
jb
jbe
add
or
daa
daa
into
and
xchg
jb
jno
mov
push
cmp
jg
loopne
pop
repnz
adc
xchg
fs
pop
and
out
xor
add
dec
fldt
pop
lods
mov
cmp
pop
aas
divl
je
int
and
mov
cmp
sbb
popa
cmp
xchg
inc
popl
sub
and
dec
in
cmp
jl
and
cmp
add
andb
cmpsl
out
dec
lret
xchg
xchg
mov
out
pop
iret
iret
jp
inc
daa
cmp
bound
pushf
ret
ror
or
jge
rorb
sets
std
jmp
lret
js
add
movsl
jns
outsl
daa
push
xchg
stos
jmp
push
aas
imul
icebp
push
pop
pop
icebp
adc
sti
push
imul
jmp
inc
fsts
icebp
stc
sub
dec
sub
fsubrs
in
xor
xchg
out
dec
lret
sbb
aad
fiaddl
jmp
es
xor
sub
mov
ret
cmpsb
std
cmp
inc
sub
das
stos
shll
xor
aas
mov
ret
adc
mov
lea
mov
lret
xor
stos
push
faddl
aad
icebp
sub
jo
int
sub
paddsw
cmp
movsl
les
bound
dec
jmp
shl
sbbl
xchg
mov
imul
lretw
arpl
cmp
push
in
subl
sbb
adc
jae
jnp
inc
adc
inc
mov
rol
xor
pop
and
sub
fisubs
arpl
sub
lcall
je
lods
add
pop
sbb
scas
in
and
aad
rcll
sbb
les
loopne
sbb
dec
addr16
cmp
cld
ret
xor
xor
sub
mov
dec
cmp
inc
outsb
iret
cmc
mov
xchg
and
xchg
sar
pop
jmp
int
repnz
jge
inc
dec
std
inc
xor
shrb
pop
mov
leave
adc
xchg
int3
sbb
fidivrl
frstor
jl
mov
sti
mov
pop
and
jl
mov
cmp
jno
je
fildll
dec
xchg
jecxz
rorl
fnstenv
inc
sarb
pop
fwait
shll
rcl
arpl
add
int
xchg
jmp
dec
xchg
pop
pop
mov
mov
aad
add
xchg
push
hlt
mov
repz
add
lods
fcoml
enter
xor
test
clc
inc
mov
data16
sub
addr16
pop
jge
jb
push
out
arpl
loope
add
dec
cmc
push
xchg
jp
sti
mov
cmp
scas
push
ljmp
lahf
adc
jle
daa
scas
add
int
jo
or
repz
xor
aaa
stc
dec
dec
stos
pop
stos
cmc
xlat
bound
push
mov
jb
aam
clc
xchg
repnz
rcll
enter
loopne
lods
jnp
sbb
pushf
movsl
and
imul
mov
shlb
loopne
jp
sbb
inc
inc
mov
loope
adc
jp
daa
inc
pop
jnp
pop
scas
sbb
jo
pop
leave
add
in
mov
mov
popf
jbe
xchg
mov
and
fiaddl
jo
outsb
sahf
das
add
mov
shlb
dec
aaa
jge
sbb
pop
loopne
mov
inc
mov
mov
xchg
scas
dec
inc
xor
jl
mov
xlat
test
jg
shll
rol
orl
fidivrl
rcr
rcll
sbb
jmp
mov
scas
cmp
xlat
sub
push
jmp
loopne
pop
jno
pop
push
sub
icebp
push
orb
push
jo
stos
out
push
hlt
xchg
mov
dec
xor
ds
xor
fcmovnu
lods
aaa
dec
xor
je
sbb
or
sub
lret
adcl
fucomi
push
cmc
sub
sub
into
cmp
mov
jl
js
sub
and
dec
scas
cmpsl
pop
cld
cltd
ret
cmp
mov
sbb
jbe
and
ret
in
mov
and
push
fstpt
or
imul
gs
scas
int3
cmp
pop
xchg
dec
rcl
rclb
xchg
mov
insl
pop
cmc
loopne
and
jo
movsb
inc
roll
lods
ljmp
fs
cmpsl
jge,pt
out
aad
sub
cli
lea
xchg
ljmp
jae
ret
mov
adc
dec
js
cmp
lcall
mov
rorb
mov
xor
repz
into
adc
inc
fimuls
jns
jl
ret
in
std
xchg
dec
sbb
cmp
cmp
test
dec
ss
sti
pushf
mov
inc
dec
or
imul
fdivrl
adc
idivb
addb
out
sbb
imul
scas
vmaxsd
out
leave
repz
mov
jp
xchg
aas
shrl
sbb
push
aam
xor
test
mov
xchg
sahf
iret
frstor
dec
sti
sub
in
iret
in
sub
sub
into
ds
sub
loope
ret
sbb
and
lcall
jnp
movsl
mov
into
jle
add
push
call
dec
jne
outsl
and
mov
mov
repz
aas
cmp
and
mov
xor
mov
loopne
cwtl
xlat
pop
mov
jmp
subb
adc
xchg
jmp
test
adc
xchg
or
pop
lea
decl
mov
jbe
loopne
mov
in
jnp
lods
into
ja
std
aaa
test
vfrczps
test
jge
dec
mov
dec
mov
jno
and
movsl
or
inc
mov
xchg
add
ds
sbb
jne
imul
sub
adc
mov
pop
push
xchg
ss
lea
cmpsl
mov
js
pushf
out
inc
jle
subb
xchg
mov
mov
sub
jp
push
ljmp
jo
leave
icebp
jl
ret
mov
jbe
sbbb
repz
popf
cmpsl
aas
lds
cmp
cmpsl
inc
sarl
sub
fbld
out
arpl
cmc
imul
push
dec
add
fwait
das
sub
mov
mov
std
mov
loopne
push
out
mov
cmc
dec
jmp
lds
push
outsl
xchg
and
cmpsb
shll
push
mov
mov
gs
mov
cmp
add
out
inc
dec
out
push
gs
out
stos
inc
push
jle
jne
cld
lea
mov
push
ret
ss
addb
cs
mov
rcrb
outsl
pop
or
test
int3
jg
pusha
lods
fs
movsl
mov
push
pop
ljmp
std
add
inc
inc
xlat
xchg
xor
push
add
and
or
pop
lods
sahf
sbb
in
mov
out
mov
fnstsw
cmp
pop
cmpsl
pushf
inc
pusha
xchg
in
int3
sbb
xchg
scas
pusha
sbb
dec
lret
popw
in
inc
mov
inc
xchg
xchg
insb
inc
add
lods
xchg
mov
cltd
xor
cs
popa
add
push
inc
inc
mov
out
subb
jns
popf
xor
xchg
pop
cmp
rcrl
push
lret
inc
loope
movsl
sti
popf
cmp
in
sub
jg
imulb
adc
ret
jns
fisubs
imul
pop
mov
lcall
fldpi
push
xorl
mov
and
xor
or
sbb
in
lea
lret
add
cmp
add
jb
mov
mov
sbb
pop
add
pop
xlat
js
fcmovnb
rclb
jp
sti
mov
adc
out
xchg
jmp
inc
push
insb
lods
test
xor
out
mov
sub
or
rol
dec
stos
xchg
loop
mov
fstp
xchg
mov
dec
in
sti
pop
fprem
cli
arpl
jne
xchg
aad
test
add
ljmp
sub
pop
sti
jns
dec
inc
push
call
pop
inc
ss
je
fldl
hlt
sub
pop
dec
add
movsb
mov
test
gs
mov
xchg
and
movsb
jp
cmp
pop
jge
pop
add
fcoms
cmp
sub
mov
mov
push
test
adcb
ss
pop
test
ljmp
sbb
mov
adc
sbb
inc
fldcw
addr16
mov
jno
push
or
or
stc
sub
or
lods
sbb
mov
pop
or
jbe
push
mov
jbe
popf
mov
ret
xor
in
rcrl
push
jbe
cli
je
ds
mov
cmp
leave
mov
gs
arpl
sarb
mov
jge,pn
xchg
xor
mov
mov
scas
test
cld
pop
ret
test
dec
mov
push
inc
or
jge
adcb
les
scas
hlt
mov
jecxz
adc
add
fmul
add
psubd
repz
test
cmpsl
imul
mov
cmp
loop
stos
in
cmpsl
lcall
ljmp
xchg
lcall
ja
cwtl
pop
jns
xchg
xlat
pop
sarl
cli
inc
xchg
out
fstpl
adc
cmp
mov
pop
push
jecxz
stos
sbb
and
stc
xorl
js
insb
std
daa
sbb
push
push
jns
js
stc
lcall
pop
clc
inc
lods
lods
fnsave
bound
mov
enter
aad
decb
dec
ffreep
sbb
loope
cmpsb
and
pop
inc
cs
repnz
cli
and
or
sub
rorb
or
inc
mov
roll
jmp
and
add
fisubl
mov
or
gs
sub
xchg
xlat
or
loopne
movsl
ret
sbb
push
mov
pop
jecxz
imul
not
inc
je
xchg
mov
xchg
cmc
mov
test
mov
mov
jmp
pop
ja
mov
loop
inc
cmp
and
adc
xor
inc
fidivrs
scas
out
and
je
xor
pop
ret
iret
div
push
adc
fnstsw
jecxz
jns
es
jecxz
scas
jg
data16
push
pop
repnz
addr16
jg
and
and
inc
dec
jmp
adc
jle
repnz
pop
sbb
rcll
and
jb
or
std
repnz
mov
add
xchg
xchg
test
rcl
ss
addr16
test
mov
daa
mov
and
inc
and
push
sbb
repnz
lods
lret
andb
mov
dec
std
lahf
mov
je
mov
and
fcoml
lods
or
jg
jge
jmp
jbe
jo
or
or
dec
mov
or
adc
sbb
sbb
cltd
mov
cmp
mov
addr16
mov
cltd
sbb
xor
add
test
and
cmpsb
adc
adc
ljmp
xchg
into
jg
movsb
jl
insb
sbb
mov
push
inc
cmp
dec
leave
sub
ss
sub
nop
xchg
mov
xchg
icebp
adc
xchg
jae
data16
cmp
cmpsb
inc
sub
or
add
ficoml
fwait
ret
jg
lds
sarb
in
fwait
gs
mov
int
outsl
jp
pop
int3
scas
sbb
hlt
add
jo
jmp
pop
les
push
push
and
je
mov
push
cmp
inc
mov
pushf
stos
or
arpl
iret
and
call
test
aam
in
adc
xlat
lahf
jmp
fidivl
adc
out
xor
jne
xchg
bound
push
mov
in
pop
icebp
ja
rorl
or
test
aas
dec
fs
add
pushf
push
mov
sub
ja
movl
lahf
cwtl
sub
call
fcompl
bound
inc
pop
rcl
sbb
mov
test
loopne
mov
sub
repnz
call
xor
jmp
pop
aam
stos
add
or
mov
jge
popf
loopne
icebp
xchg
push
dec
jl
and
std
pop
and
cmp
mov
adc
cltd
cmpsb
or
dec
mov
lret
stos
stc
pusha
fistl
pop
cmp
aad
lods
xchg
fstpt
xor
mov
adcl
es
inc
hlt
pop
icebp
adc
adc
xor
mov
sbb
cwtl
xchg
sub
je
pop
and
push
and
cmp
ljmp
fisttpll
mov
ror
sbb
add
popf
sbb
cmpsl
adc
ret
cmp
push
data16
push
jns
jno
cs
push
mov
xor
aaa
popa
scas
xor
je
es
lods
mov
testl
nop
in
mov
movsb
or
or
lods
push
xorb
test
sub
push
imul
and
push
mov
jp
and
test
lret
lods
int3
inc
lahf
sub
mov
xchg
ja
cmpsl
ucomiss
lods
clc
adc
dec
mov
lock
xchg
mov
es
pop
add
movsb
dec
orb
cld
loop
push
inc
outsl
sub
scas
pushf
mov
cmovo
mov
idivl
cmpsb
push
add
ss
aas
xchg
icebp
mov
fs
push
dec
mov
dec
xchg
jmp
mov
adc
ss
adc
test
lea
scas
gs
orb
pushf
mov
xor
mov
or
inc
out
fstpl
rcrl
sub
jns
cmp
cmp
sub
stc
sub
sbb
fnstenv
mov
bound
fcompl
push
pop
movb
cmp
sbb
in
imul
xchg
jmp
and
push
lret
push
mov
out
mov
popf
mov
sbb
lahf
dec
js
xor
das
arpl
stos
mov
mov
push
adc
inc
dec
dec
mov
dec
sub
into
sub
mov
fsubr
inc
push
mov
ds
or
pop
dec
dec
push
test
xchg
push
test
and
mov
mov
and
mov
xor
jecxz
cmp
rorl
data16
mov
addr16
sbb
adc
mov
push
pop
xor
xchg
inc
mov
adcl
mov
test
mov
mov
add
pop
mov
add
in
cltd
or
psubb
cwtl
sub
jle
test
dec
ret
cmc
in
mov
decb
cld
shrl
lret
inc
test
pop
sbb
dec
imulb
loop
adc
int3
dec
daa
mov
or
jle
leave
mov
mov
jecxz
loopne
xchg
pushf
enter
lret
loop
addb
psubsw
stos
loopne
jo
adc
cld
leave
jg
pop
loopne
sbb
xchg
cs
mov
push
cli
sahf
iret
daa
and
sub
int
nop
xchg
xorl
cmpsl
adc
arpl
adc
push
or
ds
mov
and
mov
cmp
jle
lret
mov
and
testl
les
andl
sub
or
add
pushf
aaa
movsb
jmp
fcoml
or
adc
sbb
js
mov
cmp
mov
mov
xor
fwait
ss
xor
mov
adc
and
jle
fldenv
pushf
cltd
mov
xor
inc
and
js
pop
add
xlat
mov
sbb
jae
inc
scas
lret
push
jae
and
outsl
cmpsb
sar
clc
adc
mov
push
aam
aam
stc
jmp
add
or
mov
mov
xchg
test
mov
daa
xor
adc
add
dec
cmpsb
aad
mov
mov
aam
lcall
fstpl
sbb
push
cmp
sti
mov
inc
push
cmp
shrb
pop
xchg
outsl
repz
xlat
push
push
addr16
bound
in
int
scas
mov
repnz
pop
rorl
jg
mov
repnz
and
mov
push
or
cwtl
jb
push
add
notl
jmp
or
adc
leave
scas
movq
push
test
lock
inc
xchg
cmp
jae
je
cmc
scas
sbb
stos
in
lods
or
pop
inc
fists
mov
xchg
sbb
and
iret
jecxz
pusha
insb
mov
jle
aam
rcrl
push
fs
data16
shrl
xor
xchg
inc
ss
popf
lret
jnp
push
push
loope
test
mov
dec
xor
es
push
mov
rcll
push
test
lahf
xor
test
mov
aam
into
shrl
rorl
pop
jge
idiv
mov
push
cmpsb
dec
add
in
test
push
loop
leave
dec
scas
insb
loopne
mov
xorb
into
loop
inc
mov
int3
mov
sub
neg
mov
idivb
add
icebp
sahf
inc
mov
insl
mov
jmp
les
mov
and
ficoml
pop
xchg
xchg
push
popa
lock
adc
lds
pop
push
in
mull
les
add
and
pop
sar
inc
inc
and
mov
sub
jl
rorb
insl
push
mov
div
cmp
pop
scas
xor
fldcw
xor
mov
push
inc
pop
daa
lahf
fcomi
jae
jb
mov
mull
jbe
bound
add
daa
cld
xlat
mov
fs
sbb
dec
test
mov
jle
jg
rorl
ja
pop
lea
mov
inc
cmp
shll
xchg
jo
push
dec
in
mov
aaa
imul
sahf
jecxz
jbe
popa
adc
mov
lods
je
adcl
adc
std
cmp
in
xor
movsb
jle
or
sub
lret
imul
ds
or
xchg
lods
pop
iret
nop
aam
inc
push
jns
rcrl
and
arpl
push
or
repz
mov
scas
fisubs
cld
add
pop
loope
sahf
sbb
popa
movsl
sub
fisubl
xchg
cmp
rcr
jno
leave
mov
mov
arpl
cmc
fadds
popf
mov
jnp
mov
mov
fdivrs
mov
data16
mov
xor
ljmp
sub
inc
xchg
sbb
pop
int3
or
add
inc
add
arpl
ja
out
sbb
loopne
adc
pop
adc
pop
jnp
cs
arpl
gs
xchg
xchg
pop
add
dec
lea
repnz
scas
inc
rcrl
scas
cmc
pop
sbb
and
push
dec
jl
outsb
shll
cmpsl
outsl
ds
in
pop
ret
dec
add
loop
insl
in
lcall
pop
pop
pop
jbe
aam
cltd
cmpsb
negb
mov
in
popa
sbb
js
andl
lahf
xor
mov
cltd
push
lahf
repnz
fdivrs
nop
ja
xor
ret
jb
dec
cltd
xor
sub
dec
add
shrl
mov
fnstenv
dec
mov
std
adc
pop
and
les
es
cmp
fs
cmp
loop
mov
sarl
mov
ret
loop
les
je
inc
dec
mov
lock
pop
popa
or
rclb
mov
aas
bound
xchg
adc
pop
dec
loop
jmp
ljmp
mov
and
push
pop
mov
mov
xchg
mov
je
jne
mov
aaa
adc
xor
adc
scas
movsb
sub
shlb
test
add
vmwrite
xchg
add
cmp
out
mov
rcr
int3
mov
sub
inc
sub
shll
jmp
fstp
mov
jg
imul
jmp
sub
icebp
rolb
pop
adc
mov
xchg
movsb
mov
lret
push
stc
mov
outsb
xor
stos
rcll
dec
iret
in
jbe
add
pop
jae
sti
mov
dec
push
add
adc
inc
push
loop
cli
fistps
nop
test
mov
in
add
in
es
fs
mov
clc
xor
xlat
aas
shll
push
repnz
lods
lods
cmp
inc
and
rclb
xlat
inc
mulb
iret
inc
mov
dec
popa
call
pop
insb
nop
xchg
arpl
pop
mov
and
repz
cs
repnz
enter
filds
loopne
hlt
or
jae
mov
loopne
sbb
loop
mov
inc
rorl
inc
jmp
mov
test
pop
mov
imull
leave
inc
dec
mov
mov
cmp
sbb
mov
stos
adc
lret
imul
imul
mov
aad
push
cmp
jecxz
or
cs
sbb
ret
jecxz
push
adc
cmp
xchg
or
mov
cmp
mov
sbb
jmp
roll
shrb
lods
jnp
mov
jg
dec
jg
out
stc
xor
mov
push
pop
ljmp
lahf
imul
jo
mov
mov
mov
mov
or
fistpll
scas
roll
out
inc
xor
dec
les
ds
push
xchg
adc
movsl
leave
and
pop
repnz
inc
sbb
scas
popf
mov
ljmp
hlt
les
int
sbb
addr16
xor
pop
push
shll
xchg
add
and
and
jbe
je
mov
pop
xchg
cmp
dec
loopne
stc
jns
ljmp
inc
inc
mov
insb
pop
js
mov
jo
in
mov
repnz
adc
sub
fcoml
and
int
in
push
sti
test
adc
mov
and
hlt
fmuls
push
mov
icebp
hlt
xor
xor
jae
push
sbb
mov
lahf
pop
pop
mov
sahf
roll
mov
lret
in
popa
push
jl
push
mov
mov
xchg
insb
adc
leave
stos
pop
aas
aas
mov
ds
enter
cmp
add
imul
mov
mov
mov
bound
pop
lds
rolb
sub
mov
mov
rcrb
into
jbe
popl
loopne
sub
mov
jno
adc
imull
int
dec
adc
xor
push
pop
mov
fs
mul
pop
add
mov
push
xchg
bound
mov
test
xchg
inc
mov
jo
divl
orl
aad
jecxz
pop
cmpl
jnp
dec
mov
add
add
mov
dec
cmpsb
fadds
lret
jnp
inc
mov
mov
sbb
add
inc
sbb
push
outsb
fldt
aas
inc
inc
jne
sti
cmp
push
test
das
adc
or
push
mov
push
aaa
jnp
inc
insl
in
or
lds
adc
popf
mov
pop
sahf
sbbb
mov
mov
rcrb
jae
adcl
xchg
jecxz
xor
dec
push
xor
lcall
imul
test
add
add
inc
fnstsw
imul
scas
or
jecxz
inc
out
and
dec
mov
data16
sbb
mov
push
or
clc
or
add
xchg
js
mov
inc
jno
fstl
adc
rcrb
inc
dec
sbb
and
push
jae
lahf
in
dec
dec
dec
sub
jne
mov
loopne
inc
push
mov
mov
pop
xchg
fldl
std
xchg
int
jp
loop
sbbl
add
mov
out
testb
dec
lods
out
fmull
bound
pop
inc
scas
cwtl
xor
sbb
lds
mov
fidivrs
imul
or
hlt
add
loop
mov
andl
xor
scas
xor
repnz
shl
out
lcall
scas
insl
insb
inc
fcmove
rorl
minps
pop
add
push
mov
sub
sub
insb
bound
mov
sbb
je
push
popf
xor
imul
sub
add
xchg
scas
loope
js
data16
insl
jae
inc
imul
mov
jo
jne
outsb
insb
pop
popf
jmp
mov
test
fsubrs
push
pop
ds
xor
shrd
dec
hlt
nop
sahf
sub
or
jno
xor
adc
pop
aad
insb
mov
fldl
jg
push
clc
mov
jbe
pop
ds
add
fbstp
sti
subb
lods
test
int
enter
and
pop
push
cmc
sbb
popa
and
jns
mov
int
cs
add
movsl
lret
jl
into
and
dec
jg
cmp
ss
mov
xchg
int
xor
adc
mov
testb
mov
push
cmpsb
out
or
lahf
or
dec
mov
mov
cltd
pop
aaa
movsb
cmp
gs
jb
and
aas
or
add
bound
mov
jp
fwait
sbb
aad
jecxz
test
ret
dec
icebp
and
lea
outsl
sbb
sub
inc
fld
add
dec
in
ds
dec
adc
mov
xchg
shrl
push
rorb
out
jl
or
jne
adc
adc
mov
xor
sarb
test
inc
ljmp
outsb
lcall
cs
mov
lret
adc
cli
test
mov
nop
ja
mov
aam
mov
fs
dec
mov
mov
mov
cmp
mov
icebp
bound
out
pop
pop
lret
pop
or
pop
ret
mov
aas
or
jb
je
js
aad
jns
cmpb
test
mov
jge
adc
mov
cmp
jg
push
std
push
gs
xor
and
popa
lret
jno
xor
rorl
mov
mov
out
fsubrs
mov
adc
ret
in
mov
loope
dec
ljmp
arpl
or
add
jb
jb
and
pusha
xorl
icebp
ds
inc
sub
jbe
cli
push
mov
outsb
cmp
inc
stc
push
dec
push
jae
mov
cld
and
add
decb
and
scas
icebp
adc
scas
or
push
jge
das
add
ret
outsl
inc
sub
mov
lea
jmp
rcll
adc
pop
xor
sbb
lret
xchg
or
or
cmpsl
inc
out
push
xchg
loopne
mov
out
inc
cmp
icebp
pop
inc
sub
cmp
arpl
daa
stos
or
fldl
fistpll
cmp
dec
jo
inc
aam
mov
ljmp
mov
jmp
mov
arpl
lcall
and
imul
lods
movb
lahf
add
dec
clc
mov
enter
daa
mov
ds
adc
push
xor
xchg
xchg
and
imul
push
or
jbe
dec
nop
clc
ds
out
popf
adc
mov
and
ret
sub
pop
jo
adc
lods
sbb
in
fisttpl
arpl
fists
sahf
mov
mov
mov
sub
xchg
insb
mov
pop
js
mov
pop
xchg
outsb
repz
aam
out
mov
inc
shl
aad
loop
fstl
jb
dec
sarl
xor
push
jnp
push
push
pop
mov
jge
sub
jp
jl
sub
je
sbb
cmpb
fs
gs
xchg
repnz
shrb
fneni(8087
dec
shlb
xor
out
or
addr16
std
in
add
in
push
jnp
rcl
int3
mov
lret
mov
cmp
mov
mov
ficompl
or
lret
mov
or
outsl
jp
xchg
jne
push
inc
push
test
mov
lret
cltd
dec
aam
jp
sub
sbb
sub
sbb
jl
xchg
call
adc
jp
adc
adc
nop
jmp
push
sti
test
mov
xor
enter
xchg
loop
sub
xchg
scas
inc
dec
inc
push
dec
cmpsl
es
xor
pop
dec
dec
or
xor
call
xor
mov
je
loope
out
adcb
movsl
adc
out
lea
dec
shl
mov
or
mov
mov
xor
test
enter
xchg
sbb
jge
lds
stos
repnz
ljmp
stos
and
dec
mov
push
dec
jno
inc
je
add
mov
test
jl
out
adc
or
loop
push
dec
dec
push
mov
mov
lea
mov
jae
dec
fstp
leave
xchg
xchg
std
data16
mov
cmpsb
xchg
int
and
shrl
mov
mov
scas
jae
dec
lods
in
pop
xchg
loopne
add
pop
jns
rcrl
pop
pop
jmp
inc
test
pop
pop
cli
mov
ss
out
and
sahf
test
push
fucomi
stc
inc
mov
movsb
repnz
xor
and
iret
sahf
jmp
and
ljmp
cmc
incl
mov
inc
mov
xchg
pop
lods
ss
incl
inc
pusha
xor
fcompl
sti
jne
dec
scas
inc
lods
push
out
das
inc
or
clc
inc
imul
jb
cmp
dec
dec
inc
pop
lret
xor
jl
mov
push
and
cli
aad
sarb
add
adc
inc
cmp
in
fstl
clc
lahf
or
imul
or
ds
decl
add
xchg
mov
add
cmc
mov
push
outsb
lds
lcall
inc
sub
fisubrs
mov
call
mov
repnz
das
and
or
fbstp
lret
fistpll
sarb
lock
in
xchg
sbbl
or
test
pop
mov
xor
or
xchg
xchg
int
xor
xor
aam
cmp
push
jge
sub
pop
cmp
lret
jp
pusha
dec
push
leave
fwait
pop
mull
sub
fcoml
push
lahf
push
xchg
jne
push
fcmovnu
add
push
mov
pop
jle
das
ficompl
stc
pop
sub
mov
lret
int3
mov
aas
shrl
push
mov
xorl
jnp
push
imul
in
das
xchg
roll
shll
inc
shrb
and
xchg
cmp
ds
sarb
jnp
jecxz
pusha
sbb
aam
int
filds
imul
pop
jl
in
and
imul
jb
fisttps
jecxz
push
push
jae
pushf
cmp
lcall
push
sub
arpl
inc
xchg
lcall
pop
decl
mov
sbb
addr16
xor
hlt
loope
les
add
mov
cmp
repnz
push
js
mov
or
mov
adc
mov
dec
mov
sarb
pop
pop
mov
std
popa
and
fwait
jecxz
cld
xchg
stos
sub
jmp
sub
gs
sub
pop
in
movsl
nop
adc
fnstsw
int
ret
mov
push
xchg
les
push
add
mov
sub
fstl
or
dec
flds
or
push
xchg
add
cmpsb
jmp
loopne
outsl
xorb
popf
mov
add
xlat
outsl
cmp
retw
mov
push
adc
lods
adc
xor
and
mov
aas
negl
repz
movsb
mov
or
mov
cmp
push
inc
pushf
outsb
inc
notb
mov
mov
xchg
xchg
jle
jno
lea
mov
movsb
mov
mov
out
orl
pop
subb
pop
outsl
in
cmp
mov
cwtl
lret
mov
inc
jge
dec
mov
inc
addb
add
dec
mov
inc
popa
popa
repnz
enter
fildll
outsb
movsb
xchg
in
cwtl
repnz
in
add
sbb
into
jns
pop
mov
loopne
xorl
shlb
sbb
dec
stos
lds
inc
push
ljmp
outsl
jmp
cmp
leave
rcll
movsb
cs
jae
sub
add
scas
popl
mov
arpl
adc
push
and
cmpsl
loopne
add
pop
movsb
pop
or
jae
and
push
es
dec
xor
outsb
iret
or
and
lcall
add
test
scas
leave
jnp
push
ss
addps
stos
fldl
stc
push
dec
sbb
call
xchg
adc
ss
push
dec
lret
lods
stc
inc
scas
push
sub
lcall
jl
add
call
fildl
out
push
mov
sub
push
add
mov
loop
or
xchg
sbb
or
or
or
cmp
test
lods
push
pop
xchg
cltd
xor
outsb
adc
das
movsb
push
xchg
add
pop
mov
ds
mov
add
mov
jnp
subb
xchg
mov
data16
cmp
int3
outsl
cld
sbb
mov
adc
add
jecxz
sbb
xor
scas
xor
daa
subl
fisubl
push
inc
push
popf
es
mov
gs
inc
mull
rorl
ret
loopne
push
mov
mov
mov
lds
fwait
out
inc
pop
movsb
xchg
adc
pop
arpl
sahf
push
or
lret
cwtl
inc
neg
cltd
lcall
xor
cli
dec
pop
xor
mov
and
cmp
mov
push
stc
sub
rorl
lods
pop
mov
arpl
stc
xlat
jl
in
adc
adc
dec
jae
mov
mov
shll
jge
dec
lcall
ret
outsl
pop
xchg
cmp
sbb
fldt
inc
adc
add
mov
xchg
fdivl
mov
mov
lock
test
dec
mov
addr16
lret
lcall
pop
and
rcr
push
mov
push
outsb
mov
fnsave
fs
ljmp
fsubr
push
popa
and
rolb
mov
out
rolb
iret
arpl
dec
cmp
inc
mov
jae
stos
adc
mov
bnd
pop
lret
call
push
test
int
dec
movsl
mov
pusha
cmp
xor
popl
xor
test
adc
xor
sub
aas
cltd
cmc
jle
out
cltd
adc
hlt
stos
push
mov
dec
negl
pop
mov
and
dec
pop
aas
ror
test
movsb
mov
xor
mov
cld
dec
ret
xchg
outsl
push
lods
daa
mov
mov
jp
and
call
xchg
mov
adc
mov
mov
dec
inc
jae
int3
mov
jbe
ja
or
adc
outsb
dec
aad
adc
mov
cld
lds
cwtl
xor
movsb
lret
push
inc
jecxz
sbb
lock
add
ss
jae
add
mov
llwpcb
stos
stc
out
xchg
sbb
out
icebp
and
pop
scas
jp
fsubl
mov
int
xchg
push
iret
popa
clc
mov
and
cmpsl
dec
jae
mov
out
push
inc
mov
aam
jnp
cmc
inc
rorb
xchg
loope
outsb
std
sub
inc
popa
jo
xchg
jnp
adc
lret
sub
mov
or
or
mov
dec
test
fidivrl
xchg
fldcw
or
scas
shlb
pop
push
sbb
jb
sbb
insb
or
mov
pop
mov
ficoms
cmp
fbld
mov
in
leave
test
xchg
lea
mov
xor
xor
cltd
cmp
dec
pop
push
sbb
cmp
sub
and
outsb
jg
pop
ficomps
mov
ss
sahf
cmpsl
in
test
inc
test
adc
aaa
sar
xor
jae
outsb
inc
sbb
jns
enter
jbe
mov
and
jg
adcb
adcb
rorb
xchg
notl
jo
mov
xchg
pop
lret
cltd
dec
clc
std
rolb
jle
fbld
arpl
dec
outsb
sbb
repz
mul
rcr
inc
add
jl
clc
xchg
outsl
push
fwait
pop
lret
leave
sar
jg
and
cmp
loop
adc
mov
jns
sbb
pop
clc
jno
jno
xchg
lret
cmpl
sahf
hlt
sarb
jne
frstor
mov
jmp
gs
mov
mov
dec
out
repnz
jae
call
cwtl
add
test
inc
inc
sbb
ljmp
xchg
push
mov
fcmovne
loope
mov
fs
mov
addl
dec
or
xor
bswap
ds
aad
xor
cmpsb
movsl
rcll
lcall
sti
mov
dec
jno
cmp
mov
fimuls
aas
xor
jecxz
push
shrb
jnp
std
jae
cli
adc
mov
sbbl
xor
push
scas
test
xchg
ss
mov
pop
xchg
mov
outsb
and
decb
outsl
jns
push
pause
das
fsubrl
xchg
mov
adc
mov
sahf
jl
sbb
jns
jg
jle
pop
fwait
xchg
into
sahf
bound
jge
cltd
addr16
les
pop
outsl
lcall
stos
or
or
ret
push
jge
repz
ret
ja
pop
rolb
mov
mov
pop
mul
cmp
mov
add
repz
mov
inc
dec
jns
mov
dec
cs
jns
lret
xor
iret
cmp
push
rcl
fnstenv
and
pop
add
addr16
jmp
xchg
jle
cmp
mov
addr16
cmp
jne
popa
scas
ja
imul
mov
adc
mov
xor
outsb
jmp
cmp
cmpsl
dec
push
adc
testb
inc
icebp
sti
popa
jb
outsl
xor
shrb
ret
mov
add
scas
mov
fisttpll
stc
ror
into
sbb
dec
inc
add
mov
ja
mov
leave
mov
aas
and
sti
iret
adc
orl
ljmp
xchg
out
mov
cmp
jl
mov
add
test
inc
cmpb
in
outsl
bound
daa
xchg
dec
jns
fildll
arpl
into
lret
jo
icebp
and
scas
mov
aam
dec
mov
adc
push
nop
ret
cmp
lret
roll
shlb
mov
dec
sbb
enter
dec
pop
lock
setle
and
xor
inc
push
ljmp
testb
ds
dec
and
adc
cli
xor
mov
add
lahf
fcomps
aas
push
fiadds
and
adc
fsubl
mov
sub
add
pusha
pop
xchg
test
adc
jne
pushf
fimull
in
jp
xlat
mov
pop
ss
adc
ficompl
aad
icebp
mov
inc
or
lret
decl
jne
dec
dec
xchg
pop
mov
pop
shl
and
dec
jecxz
xor
add
addr16
sub
in
aaa
cmc
mov
jmp
js
lret
xor
gs
fnstenv
mov
fidivs
mov
pop
mov
daa
mov
push
adc
mov
push
jne
lods
inc
adc
sbb
sbb
cmpl
mov
jae
xchg
push
adc
testl
pop
xorb
es
jb
jl
inc
jle
cltd
mov
xchg
mov
shll
xor
mov
ret
dec
inc
int3
mov
es
testb
cmp
and
push
adc
jecxz
mov
insl
lods
sub
notb
ja
push
sbb
sub
orl
inc
and
xchg
inc
out
pop
or
mov
jecxz
cli
push
lods
setbe
movsb
cld
shrl
pop
addr16
insb
test
stc
pushaw
inc
std
repz
es
mov
xchg
sub
imul
repz
dec
aad
sti
dec
fstp
in
sub
and
pop
pop
ror
push
sbb
adc
ss
dec
test
jbe
adc
aas
or
shrl
lods
fdivl
insl
or
mov
sbb
mov
popa
call
xor
mov
pop
mov
es
call
add
lahf
shll
or
es
in
cmp
xchg
arpl
fcoml
mov
dec
push
cmc
test
bound
jge
fiadds
mov
aam
and
sarl
sbbl
lcall
jg
popf
shrb
out
nop
pop
das
sbb
pusha
pop
fists
cmp
scas
sti
mov
add
adc
xchg
mov
add
aas
dec
mov
mov
addb
lcall
sbb
jmp
xchg
sbbb
lds
mov
addb
fucomip
int3
test
cmpl
jl
xor
or
inc
lea
xchg
mov
repz
mov
jns
pop
sarl
sbb
gs
pop
mov
cmp
ljmp
test
fdivrl
xor
icebp
xor
out
mov
mov
test
mov
inc
ss
in
dec
jge
pop
stos
negl
pop
sbb
pop
imul
jb
loop
add
xchg
cmc
jb
ret
cs
inc
out
scas
pushf
daa
repnz
push
mov
imul
add
jns
loope
push
and
jns
insb
add
mov
sahf
insb
out
xchg
and
hlt
cltd
sbb
fldpi
inc
repz
xchg
aaa
scas
dec
sbb
call
adc
andb
in
inc
fwait
mov
iret
iret
testb
fistpl
sbb
inc
pusha
pusha
jne
or
mov
adc
and
mov
push
int3
fcoml
adc
shlb
mov
sti
cmpsl
mov
and
sub
mov
jb
cmpsl
enter
xor
inc
dec
adc
push
xchg
movswl
inc
fldl
pop
pop
test
lods
sarl
leave
incl
mov
popa
mov
cmp
dec
inc
pop
xor
bound
ss
and
int
mov
jns
mov
sti
imul
sti
ljmp
push
pusha
mov
std
xlat
push
mov
aam
adc
cmp
out
jbe
and
push
add
and
fs
push
lock
je
mov
dec
mulb
pop
dec
jp
cli
pop
cmp
into
and
push
dec
pop
mov
xor
scas
mov
xchg
sbb
mov
shl
dec
xor
xrelease
adc
inc
insb
sbb
sub
jbe
rcl
pushf
cwtl
push
sub
xorl
add
jb
add
sub
divl
or
mov
inc
xlat
push
stos
mov
test
imul
les
mov
mov
test
xor
mov
je
dec
enter
stc
dec
or
stos
dec
cmp
or
dec
xlat
data16
stos
ror
daa
mov
jns
dec
sar
jg
repz
push
jmp
outsb
je
and
and
pop
adc
push
jno
aaa
daa
arpl
in
jmp
shrb
or
adc
in
sub
test
loop
arpl
aas
mov
mov
movsl
jp
jg
imul
mov
in
xchg
xor
mov
icebp
mov
push
loop
out
push
dec
sub
pop
mov
enter
stc
push
mov
mov
jo
xchg
sub
test
roll
pop
mov
xlat
sbb
dec
ds
mov
inc
pop
cmp
in
lea
sub
pop
pop
imul
jecxz
insb
pop
adc
xchg
xchg
mov
inc
dec
xor
insb
insb
dec
jg
aas
mov
xchg
xor
inc
ret
sbbl
inc
inc
fwait
push
mov
mov
out
xchg
push
ss
repnz
push
imul
insb
mov
push
dec
scas
fidivl
mov
outsl
test
jmp
mov
jl
sbb
movsb
xchg
pop
ss
leave
cmp
sbb
lea
sbb
test
cmpsb
push
les
hlt
adc
mov
xchg
jmp
jge
mov
aam
ficoml
sub
inc
fsubrl
out
dec
cmp
mov
lock
rcrl
pop
xchg
jno
ljmp
fisubs
inc
addr16
jg
idivl
leave
sti
adc
jecxz
sbb
sub
and
jbe
mov
sub
xor
icebp
scas
xor
aam
ds
dec
push
popf
ja
mov
jge
push
in
add
test
jbe
push
and
iret
fsubl
cld
mov
push
pcmpgtw
ds
or
adc
lods
push
call
fldcw
dec
sbbl
xor
and
std
lcall
orl
scas
inc
push
das
xor
shrl
test
inc
mov
imul
cmp
jo
fidivrs
rcl
pusha
adc
sbb
jns
outsl
pop
mov
mov
sub
xor
rolb
fwait
mov
jae
loopne
or
test
ds
gs
add
dec
lea
scas
aad
lds
mov
leave
cmp
ds
xor
bound
divb
repnz
xchg
and
xchg
pop
jne
xchg
test
xor
sarb
jl
ret
adc
pop
inc
repnz
ffree
inc
movsb
dec
mov
cmp
jbe
test
inc
jmp
xor
dec
call
je
xchg
and
ljmp
jmp
loop
das
mov
push
pop
in
js
into
jns
xchg
push
xor
adc
out
xor
mov
cmp
fcomps
sbb
inc
jcxz
or
jnp
inc
fcomi
out
pushf
xchg
inc
cmp
cmp
dec
jb
jae
sub
mov
push
jmp
subl
adc
add
aas
stos
mov
mov
shrl
sbb
repz
out
cmpsb
cld
sbb
add
sub
mov
sbb
repz
das
std
mov
pushf
and
add
mov
xor
or
sbb
jbe
in
add
lods
pop
and
in
push
push
int3
test
aas
mov
sbb
sbb
mov
fnsave
daa
movsl
roll
sbb
cmpsl
cwtl
mov
inc
rcrw
fldt
dec
jns
sub
loopne
xchg
mov
jle
mov
sub
dec
rol
sbb
push
pushf
or
std
pop
or
pushf
fsub
mov
and
adc
data16
or
jge
jg
pop
mov
scas
and
sub
fs
je
jbe
lock
mov
clc
sub
test
cmpsl
sub
push
sbb
sub
pusha
pushf
cld
jo
out
ret
push
sbbl
mov
pusha
es
shll
test
or
xchg
push
rol
fcomp
loope
fsubr
imul
sub
sub
mov
mov
std
mov
and
pop
mov
cld
push
pop
ss
mov
imul
push
sub
movsl
cld
pop
mov
lcall
jo
test
stc
hlt
lret
sbb
addb
mov
dec
adc
xor
dec
daa
mov
mulb
and
in
inc
leave
push
push
jnp
pusha
popa
subl
sub
push
mov
xchg
out
dec
push
add
lds
in
stc
mov
or
xchg
imul
sbb
addr16
outsl
sub
pop
and
adc
and
mov
paddq
aam
jmp
enter
sbb
and
lret
mov
fcos
popa
jnp
xchg
pusha
dec
push
test
and
xlat
jle
mov
inc
inc
loope
add
lahf
out
sbb
es
out
inc
test
push
cmp
into
mov
cwtl
in
mov
iret
test
aas
or
sub
adc
jns
push
mov
mov
std
add
and
les
lods
jns
loope
mov
mov
push
xchg
mov
xchg
push
stos
imul
mov
dec
mov
shl
cmp
lock
dec
push
adc
icebp
loop
sahf
mov
xchg
sub
das
nop
xchg
mov
mov
fld
mov
in
ljmp
jb
pushf
push
nop
jge
jmp
xchg
es
ror
adc
inc
test
mov
std
sarb
scas
xorb
popf
fidivs
mov
rcrb
lret
or
loope
dec
push
push
out
pop
or
mov
inc
adc
pop
outsl
xor
sub
xor
cs
push
fnstenv
daa
stos
sbb
sahf
mov
insb
xchg
imul
xor
mov
mov
or
xchg
sbb
push
mov
cld
push
icebp
xchg
dec
neg
push
in
bound
xchg
push
nop
cli
jl
cmp
lahf
sar
mov
cmpsl
cmp
bswap
mov
mov
leave
mov
dec
sub
rclb
stos
inc
xlat
cmp
mov
xchg
stc
inc
inc
mov
push
lret
push
add
bound
mov
mov
adc
adc
dec
or
xchg
xchg
dec
arpl
jmp
dec
fsubrl
iret
movsl
adc
daa
adc
int3
mov
popa
popa
fs
cli
jne
aas
stos
mov
and
or
dec
dec
jbe
sahf
cs
pop
push
mov
cmp
pop
std
cmp
lds
stc
iret
scas
sbb
push
insl
and
jb
dec
xchg
push
fisttpl
mov
and
cmp
lea
mov
ja
jno
lods
ljmp
rorb
aam
xchg
ds
test
cmp
pop
cmp
sub
cmp
mov
repnz
ljmp
mov
inc
rolb
adc
fstps
sbb
mov
js
mov
xchg
insb
imul
or
pusha
mov
fwait
pop
fstpl
mov
lds
pop
les
test
mov
fiaddl
jne
pop
ljmp
lods
sub
adc
aad
dec
cmp
push
flds
gs
lret
in
je
outsl
lcall
scas
jb
adc
loope
xor
aad
mov
testl
std
push
sarl
ror
or
roll
xchg
nop
or
and
jecxz
imul
cs
repnz
or
jne
adc
or
jb
or
xchg
cwtl
imul
cmp
and
dec
pop
cmp
mov
xor
lahf
xlat
into
ss
sbb
stc
lcall
adc
mov
cmpsl
jbe
add
xor
lret
cmc
jo
push
mov
jne
repnz
mov
jnp
cs
fwait
andl
dec
cmp
push
adcl
sbb
mov
lea
or
xchg
ret
mov
or
and
stos
mov
sub
insl
fsincos
jg
add
popf
sub
rorl
pop
lods
add
test
inc
jbe
addr16
mov
xor
mov
in
inc
mov
movsl
outsl
scas
lods
pop
cmc
mov
cmp
cs
in
repz
sahf
mov
adc
cmp
push
push
imul
lods
std
sbb
rcrl
cmp
imul
jnp
mov
adc
call
arpl
jb
aas
inc
jae
mov
sbb
fcomi
sub
arpl
fsubrs
jp
frstor
mov
and
dec
lret
out
fisubl
std
dec
cmp
std
rcrb
in
pushf
bound
inc
fwait
mov
xchg
add
sbb
popf
ljmp
in
testb
iret
push
movb
call
xor
pop
cmp
out
jmp
insl
mov
inc
icebp
outsl
std
and
inc
sbb
push
inc
sbb
movl
sbb
adc
cmp
cmp
jo
sub
jns
es
lock
xchg
xchg
fimuls
shlb
push
adcb
aad
stos
lods
add
pop
or
push
pusha
jmp
jae
daa
sbb
rorb
mov
jns
ss
mov
adc
jge
dec
adc
jbe
out
adc
mov
fidivrl
mov
js
aam
fstpt
movsb
clc
sbb
mov
stos
loop
cld
inc
xchg
mov
push
das
ffreep
inc
js
lret
mov
and
pop
lahf
aad
jmp
push
jnp
scas
xor
in
aam
out
std
pusha
out
inc
xchg
xchg
out
inc
xlat
pop
lea
jns
outsb
inc
jge
push
xor
popf
ret
iret
fadd
adc
hlt
mov
push
adcb
xor
jnp
jmp
into
clc
insl
dec
push
pcmpgtd
adc
popf
sbb
pop
sub
loope
jnp
add
int3
and
push
cmp
xchg
xchg
xchg
test
adc
jo
push
lock
lret
mov
shlb
fbstp
and
notb
sub
pushf
mov
lcall
and
pop
test
cmpl
adc
sahf
inc
insb
or
push
test
mov
dec
inc
fistl
xchg
jbe
fmul
out
xor
testl
fidivl
js
sbb
jecxz
push
dec
cmp
aas
mov
test
mov
mov
push
fs
xchg
lahf
pop
arpl
int
call
icebp
subb
mov
pushf
outsb
inc
test
daa
outsl
arpl
push
pusha
frstor
cmpl
in
inc
cmp
popa
popa
jle
adc
mov
lret
dec
emms
push
lock
jp
push
fcoml
pop
ss
jmp
aad
fprem1
repnz
mov
inc
cmc
enter
and
in
jle
fcomps
lret
daa
je
andb
sub
aam
sahf
repz
shrl
xor
ss
cmp
mov
adc
adc
mov
iret
lock
sbb
scas
xchg
push
or
and
call
xor
cmp
roll
pop
test
ss
movsb
lds
orb
mov
enter
mov
dec
push
push
jl
inc
cltd
ljmp
push
lahf
jbe
and
rolb
push
out
mov
call
mov
pushf
or
mov
jl
lods
lock
add
scas
inc
mov
clc
idiv
or
shl
push
xor
xor
je
push
sti
ds
in
jge
xchg
push
fwait
out
lds
cwtl
iret
push
aas
rclb
add
or
stos
dec
cmp
jb
dec
adc
enter
movl
aam
and
adc
dec
inc
bnd
jnp
or
cltd
addr16
mov
lret
aaa
inc
in
mov
in
scas
mov
ret
movsl
mov
xlat
jbe
xor
pop
mov
fimull
lock
mov
scas
and
sahf
lret
push
popa
repz
mov
out
shr
sub
add
cli
sub
cmc
lds
fnstenv
sub
iret
cmp
sbb
repz
aad
cmpsl
imul
jns
dec
movsb
mov
xchg
dec
les
repnz
push
dec
aad
inc
jmp
pusha
aad
mov
stos
imul
ja
mov
sbb
fs
jg
push
add
in
mov
pop
and
jg
mov
jns
pop
out
mov
push
fbld
push
mov
test
jmp
push
xor
int
sbb
hlt
es
xchg
scas
add
mov
mov
cmp
repnz
push
fbstp
pop
test
mov
out
sbb
in
jp
nop
push
ljmp
xchg
jg
jecxz
mov
mov
xchg
testl
repz
shrb
fs
dec
sbb
imulb
jge
mov
xor
sbb
jge
dec
ljmp
jbe
loopne
lea
push
nop
mov
mov
sub
push
push
cltd
ja
mov
mov
xor
test
add
xchg
xchg
es
cmp
sub
in
mov
mov
shlb
or
add
into
fstps
adc
push
jecxz
js
push
jp
das
loopne
xchg
stc
add
pop
loop
rcrl
ret
push
fidivl
add
adc
mov
ret
lcall
fs
xchg
push
push
mov
clc
in
xor
mov
add
sub
sbb
xchg
adc
dec
jns
sub
mov
jo
dec
mov
sbb
cmpl
mov
aaa
movsl
sub
cmp
sbb
lret
sti
push
ja
adc
cmpsl
and
aad
repnz
cmpsb
push
mov
or
add
stc
out
cmpsl
inc
out
jbe
mov
cmp
jp
stos
push
rcr
dec
repz
cli
or
test
filds
push
xor
inc
test
orl
lods
dec
jno
dec
push
test
sarb
sbb
xchg
imul
nop
push
das
test
mov
sbb
lcall
mov
inc
mov
lret
out
out
xchg
xchg
addr16
fcmovb
or
test
xchg
jmp
cmpsb
mov
adc
dec
sti
adc
loopne
jne
mov
pop
pop
imul
pop
sbb
clc
adc
scas
and
jg
pop
or
mov
xchg
jl
and
xchg
or
xchg
cld
sbb
add
fldcw
xor
jl
xchg
sub
cmp
or
lea
enter
stos
ja
mov
pop
and
cmc
inc
inc
add
in
sbb
inc
lahf
xor
cld
push
nop
push
subb
out
cmp
mov
sbb
xchg
rorb
lds
pop
mov
movsb
repz
jne
in
pusha
out
xor
loop
shl
fs
push
inc
push
fists
imul
xor
sbb
orl
gs
int
es
sti
icebp
adc
xor
inc
mov
dec
xchg
mov
fwait
push
jno
and
mov
sub
sub
mov
ret
aad
push
inc
push
sub
fcmovu
jmp
xor
mov
lock
adc
sbb
add
das
jne
mov
fildl
aas
mov
xor
in
push
push
jno
out
add
sub
loopne
xor
adc
dec
rcrl
fwait
jnp
aam
test
push
inc
adc
shlb
adc
dec
out
dec
pushf
and
xchg
pop
lret
xchg
add
or
xlat
pop
lods
cmp
ficomps
inc
mov
int
mov
lahf
pop
and
fmul
je
loopne
addr16
mov
xlat
mov
bound
fisubs
xchg
inc
dec
adc
or
incb
pop
shr
jle
pop
adc
aam
scas
outsb
inc
iret
cmp
fstpl
pop
push
out
arpl
stos
or
clc
xor
or
adc
dec
roll
into
imul
inc
cmp
stc
dec
mov
add
lret
xchg
inc
loopne
jb
push
jb
mov
loope
jmp
sbbl
push
stos
idivl
sbb
cmp
mov
pop
push
cmp
mov
movsb
stos
push
fcoms
jae
mov
fsts
xchg
mov
xchg
cmpsb
inc
pop
adc
cmp
jmp
test
sbb
add
stos
jmp
inc
jns
sti
xchg
js
in
jge
call
xchg
sub
lret
scas
add
rclb
mov
loopne
jno
stc
add
add
shlb
mov
fcoml
outsb
and
pop
mov
lahf
push
xchg
lods
stos
cmpsl
jo
push
popa
mov
jns
arpl
push
add
adc
popa
lret
sbb
adc
mov
call
jae
dec
fs
pop
lcall
and
jl
jae
ficoms
and
ss
mov
and
ret
loopne
ja
scas
ret
push
xlat
push
stos
xor
testb
sub
sub
fcomi
stc
jbe
pop
add
xlat
or
inc
movsb
cmpsl
xchg
fisubrl
sahf
rolb
jae
push
adc
jbe
out
cld
incl
iret
jo
push
xor
pop
mov
mov
or
mov
mov
sub
stos
mov
sub
int3
mov
lds
stos
xchg
fchs
jle
movsl
clc
icebp
orb
pusha
out
out
cmp
pop
xor
and
stc
imul
insb
adc
cmpsb
push
pop
adc
out
sub
cmp
cli
call
push
mov
pop
popf
xchg
push
clc
call
jecxz
mov
testb
rcrl
test
push
push
jo
xor
jmp
push
xchg
or
or
outsl
dec
xchg
xor
lock
shll
pop
fisubs
mov
mov
lods
addb
jge
outsb
cmp
pusha
mov
jl
push
push
sbb
lcall
sbb
push
nop
hlt
xor
shlb
scas
xorb
xorb
jmp
mov
push
dec
inc
repnz
fnsave
mov
scas
mov
outsb
in
call
cmp
pop
sbb
push
shrb
dec
lahf
pop
xor
cmp
arpl
js
pop
cltd
jle
scas
movsl
cmp
out
lret
fstl
cmp
mov
inc
scas
push
cmc
mov
or
jne
aaa
pop
insb
pusha
push
sbb
imul
inc
mov
inc
pop
push
dec
sbb
dec
pop
sub
and
push
and
in
test
inc
adc
out
ficompl
adc
jb
ror
mov
adc
orb
in
xor
in
sbb
xchg
sti
ret
paddsb
cmp
mov
cs
mov
fbld
cmc
mov
ret
jp
es
mov
pop
push
and
inc
lods
lcall
out
cmp
sbb
fidivrl
xchg
xchg
xchg
filds
jb
push
mov
fsubrl
imul
imul
and
test
stos
cmp
cwtl
ret
push
das
mov
pop
or
rcr
adc
or
ja
jne
in
mov
lret
dec
mov
lock
sub
pop
mov
pop
push
cmp
push
xchg
xchg
fwait
add
xchg
dec
cltd
and
clc
pop
jae
mov
leave
push
in
cmp
mov
sbb
shll
popa
popa
adc
int3
mov
loopne
xchg
sub
fwait
dec
or
ja
popa
xor
aad
lods
jns
pusha
add
out
mov
or
dec
push
mov
ret
insb
mov
cmc
lods
imul
adc
and
xchg
mov
int3
imul
xchg
sbb
jge
lock
add
push
sub
add
mov
xchg
mov
sub
divl
sub
jl
mov
lcall
fwait
and
cmp
call
outsb
ds
int3
out
jbe
cmp
gs
xor
inc
push
inc
xorb
pusha
imul
mov
mov
test
xchg
cld
movsb
insl
jge
out
inc
js
push
gs
dec
rcrb
les
mov
mov
dec
pop
and
pop
adc
adc
fistpll
jecxz
jl
imul
int3
mov
clc
cli
or
movsl
or
sbb
add
enter
sub
pop
jne
inc
fwait
js
and
mov
in
stc
inc
cmp
das
ss
jecxz
cmp
fsubrl
in
test
mov
sbb
xor
idivb
sbb
inc
mov
and
sbb
mov
mov
push
fstl
sub
mov
pop
out
add
pop
scas
cld
add
loop
mov
pop
mov
push
lahf
mov
and
pop
loope
pop
sbb
clc
dec
push
mov
jl
mov
cmp
leave
hlt
fildll
fnstcw
js
inc
fwait
shl
sbb
jl
adc
outsl
test
xchg
movsb
dec
and
nop
inc
ret
test
push
cmpsb
fsubs
and
inc
scas
push
pop
cmp
add
dec
cmpsl
movb
loop
push
outsl
dec
dec
lahf
push
cmpl
pop
sbb
iret
xor
or
pop
or
repnz
sub
out
xor
into
lret
dec
outsb
cmp
fnstenv
jge
fidivrs
add
test
xchg
xlat
jnp
or
testl
cs
push
imul
ret
stos
arpl
or
nop
into
hlt
mov
enter
add
ss
dec
adc
movsb
or
icebp
dec
pop
insb
aad
add
adc
movups
inc
fcmovnu
gs
pushf
testb
negl
cmp
mov
xor
jnp
cwtl
sub
popf
loop
xchg
mov
fmul
jp
fmul
sbb
sub
jp
cltd
add
sub
mov
jo
cmp
xor
insl
loope
pop
push
push
cmp
push
aad
out
inc
inc
fdivrl
into
call
cltd
push
into
dec
popf
lods
lahf
xor
cmc
fadds
cmc
roll
lock
divl
or
arpl
cmp
xor
addb
dec
dec
inc
mov
xlat
jp
das
stos
mov
mov
pop
stc
dec
imul
lret
push
cmp
loop
pushf
std
je
loope
adc
or
lret
mov
out
xor
in
and
pop
and
addb
adc
mov
out
or
cltd
or
xchg
push
adc
sarl
jne
and
ds
outsl
push
jae
daa
pop
xor
and
sbb
scas
mov
cmc
dec
mov
mov
dec
in
dec
vpsadbw
push
jle
mov
jecxz
movaps
add
rcrb
sbb
jae
icebp
fwait
mov
hlt
inc
inc
cmp
mov
pop
dec
mov
iret
popf
cmc
int
mov
testb
adc
dec
dec
cvtdq2ps
out
mov
cmp
xor
push
or
jmp
lahf
xor
or
mov
mov
pop
dec
aas
sbbb
pop
aam
scas
push
cmpsb
xchg
xchg
sub
push
cmp
adc
imul
inc
sarl
cmp
std
es
cmp
jmp
cmp
inc
xor
lock
imul
movsb
scas
pusha
xor
pop
mov
aam
jecxz
js
testl
sub
adcl
cwtl
dec
mov
loopne
cmp
mov
call
pop
jbe
dec
xchg
mov
jmp
jmp
sbb
inc
jno
stos
xchg
cs
int
push
call
add
pop
je
aaa
mov
jns
aam
xor
sbb
mov
aad
cmpsl
xor
sub
sarb
jl
in
mov
pop
push
icebp
xchg
and
xchg
xor
popa
pop
daa
sbb
xchg
daa
imul
fisubs
mov
xchg
dec
cmp
pop
pop
and
dec
movsb
cmp
sbb
jmp
movsb
cmc
jmp
lcall
sub
push
lret
sub
arpl
gs
loope
jne
enter
dec
pusha
aaa
or
mov
stos
sbb
and
arpl
inc
xchg
mov
sub
repz
in
mov
je
popa
sbb
add
lea
and
outsl
into
jae
mov
loopne
and
leave
and
mov
add
adc
cmc
mov
in
fldpi
mov
cmc
sub
cwtl
jnp
lods
dec
cmp
and
pop
fsts
into
mov
adc
xchg
movsb
push
sub
test
sub
shrl
sbb
dec
popa
mov
cmp
mov
enter
and
test
or
ljmp
adc
mov
mov
add
repz
add
decb
cmp
and
rcl
mov
test
push
pop
fisttps
jne
cmp
lock
aas
hlt
jge
dec
or
jg
xor
add
shl
imul
and
jmp
xor
pop
xchg
out
js
movsb
push
xchg
stos
push
out
imul
dec
cmpsb
shr
sbb
aad
movsl
pop
xor
mov
inc
sbb
aaa
cs
adc
out
pop
outsl
inc
xchg
add
inc
es
add
push
sub
out
call
or
lock
xchg
notl
sbb
in
out
fisubl
mov
sbb
or
ja
xlat
outsl
dec
insb
pop
or
push
rcrb
cld
push
inc
pop
std
insw
inc
push
mov
cmp
inc
cwtl
jle
sbb
aaa
js
inc
ret
add
cmp
cltd
and
aas
or
xchg
xor
test
push
mov
xchg
adc
mov
test
push
sub
hlt
xor
aaa
lock
cmp
pusha
xlat
cmp
inc
dec
mov
and
mov
rorb
popf
pushl
sub
push
test
jecxz
sub
data16
and
pusha
rcl
loope
leave
push
push
mov
jp
addb
sub
cmc
imul
mov
xchg
adc
cmpl
stos
pop
cwtl
cmc
mov
dec
icebp
movsb
scas
and
adc
cmp
shl
or
push
and
push
sub
lcall
fisttpl
mov
das
pop
mov
mov
popf
sub
mov
mov
jns
mov
jb
stos
fs
lret
dec
pop
ret
sbb
add
popf
call
scas
imul
fiaddl
test
xchg
sub
imul
rcll
xchg
ss
pop
xchg
xchg
xor
rcll
and
out
mov
in
mov
rorl
inc
cli
repz
sahf
sub
xchg
mov
mov
filds
xchg
adc
aas
lds
mov
jns
mov
sbb
fsubp
jl
jbe
cmp
lods
cli
in
bound
ss
ret
shr
sbb
fisttps
cmp
shrb
jg
ret
xchg
nop
insl
and
jle
fnstsw
aad
pop
rcrl
jnp
in
sbb
or
xchg
mov
sub
or
cmc
dec
or
sbb
scas
repz
arpl
fs
inc
inc
lock
jge
fdivl
dec
mov
mov
push
cmp
adc
lea
adc
dec
sbb
je
dec
mov
or
movsl
sbb
xchg
ljmp
aad
in
xchg
dec
into
inc
cmpsb
cmc
adc
enter
test
xchg
sbbl
sbb
push
lea
mov
push
mov
rorb
loope
and
xchg
push
pop
loop
cwtl
xchg
jp
add
adc
test
mov
jle
js
dec
mov
sbb
add
push
lods
call
adc
pop
mov
mov
mov
fimuls
lods
push
out
pop
les
jmp
sub
pop
xor
ret
sub
inc
sbb
ret
lods
pop
inc
imul
mov
xor
jecxz
pop
fsts
or
xchg
pop
mov
inc
mov
scas
lcall
cmp
inc
pop
sti
dec
fidivrl
sub
outsl
cld
adc
push
pop
xor
je
and
pop
sub
or
pop
mov
pushf
subl
jns
xlat
loop
mov
sub
repz
cmpsb
adc
push
xor
repz
sub
or
daa
mov
lsl
ss
nop
stc
sbb
sets
and
hlt
insl
sbb
dec
sbb
push
push
pop
dec
sub
shlb
or
or
mov
adc
pop
xchg
cs
rorb
dec
stc
and
xchg
mov
cld
cmp
shrb
lods
xchg
xor
les
js
xor
pop
enter
pop
push
mov
mov
es
xchg
mov
jge
sub
lret
rolb
jecxz
sbb
pop
imul
mov
inc
les
push
filds
and
mov
adc
js
iret
push
mov
jl
add
lods
lahf
sbb
std
gs
test
or
arpl
inc
cmp
scas
out
jmp
ss
loopne
mov
repnz
jecxz
adc
jns
mov
aas
movsb
xor
mov
stos
mov
adc
xor
sbb
aam
in
jo
sbb
xlat
insl
ds
dec
fwait
xchg
inc
cli
scas
or
test
cwtl
ja
int
testl
gs
mov
mov
daa
mov
mov
js
inc
popf
ss
ss
mov
aaa
scas
push
mov
pop
lea
cli
addr16
pop
xchg
xchg
ds
and
push
sub
arpl
pop
pop
jmp
or
cltd
test
das
movq
std
cmp
mov
sbb
adc
lcall
mov
dec
mov
ffreep
lds
lcall
and
xchg
push
cmp
fwait
pop
ds
jecxz
out
inc
cmp
add
fidivrs
sbb
mov
xchg
mov
jns
mov
js
push
pop
xchg
les
repz
addr16
cmp
mov
jle
xchg
outsb
lcall
add
and
pop
je
pop
lcall
repz
mov
push
rorl
add
push
xchg
mov
sub
in
js
xlat
dec
add
cmp
popa
inc
inc
dec
daa
insl
sbb
nop
sbb
push
cwtl
call
mov
mov
scas
xor
clc
lods
and
leave
in
fstpl
lods
inc
negb
or
xchg
xor
dec
add
stos
test
stos
ljmp
sarl
sti
mov
fs
popf
push
fimuls
test
or
leave
ret
jb
cmc
les
adc
fldcw
loope
mov
adc
into
mov
sub
lea
insl
inc
ja
test
leave
pop
repnz
lahf
inc
jno
add
mov
inc
and
in
xchg
push
popf
loopne
xor
xor
mov
cmp
push
mov
inc
aas
push
adc
bound
jne
inc
xor
repnz
and
loop
js
into
ss
fstpl
stc
sarb
fwait
test
outsb
aas
xor
clc
dec
sbb
rcrl
mov
or
ss
aas
push
repnz
iret
pusha
out
xor
je
stos
add
popa
mov
sub
sub
sub
pop
test
or
movsb
xchg
xor
repz
lahf
fldl
ret
orb
bound
jno
out
dec
popw
cmp
lock
stc
subl
jns
cli
inc
pop
rorb
push
sub
mov
lods
jne
dec
inc
movsl
cmp
adc
mov
cmp
sbb
clc
aas
fnstenv
xlat
pop
adc
stos
push
xor
fdivrs
xchg
and
pushf
pop
xor
sub
xlat
sarb
mov
fisttpl
ss
iret
scas
imul
bound
iret
in
xor
test
push
mov
push
sbb
xor
in
push
fucomi
shll
call
sub
xor
dec
scas
xchg
xchg
scas
xlat
xorb
inc
push
cld
add
push
and
outsl
pop
dec
inc
inc
stos
and
push
jno
mov
jp
mov
loop
and
cmp
cmpsb
mov
mov
sbb
jno
mov
cld
mov
movsl
mov
jb
movsb
movsb
pop
mov
push
xor
cs
test
cmp
sub
pop
sbb
pop
repnz
sahf
dec
pop
mov
dec
sub
mov
mov
int
ret
fists
inc
mov
and
and
jo
push
mov
icebp
lods
cltd
mov
daa
imul
cmp
std
cwtl
add
lcall
aad
fs
inc
loope
or
into
int
neg
bound
ficomps
sbb
hlt
add
shl
mov
leave
cwtl
int3
xchg
mov
shrb
inc
insb
jne
adc
push
fdivrl
ds
mov
pusha
test
push
mov
and
cmpsl
aad
push
cltd
mov
pop
jno
cld
filds
stos
outsb
mov
subl
xchg
mov
aad
mov
push
stos
xlat
cmpsb
mov
add
lret
insb
or
mov
add
jns
or
int
add
insb
aaa
xlat
or
gs
fcoms
mov
add
dec
jge
pop
mov
fadds
mov
les
push
and
add
xchg
lea
lods
leave
mov
sbbl
xor
mov
sbb
hlt
sbb
leave
add
repnz
sbb
mov
mov
lahf
or
int3
cli
decb
fdivrs
imul
sbb
sbbb
xchg
xor
mov
add
xor
lods
lods
rcl
stos
jb
repz
vpcmpeqb
pop
sti
xor
rorb
test
cmp
cmpsl
cmp
push
push
lret
imul
aam
mov
cmpsl
sti
das
pop
or
pop
sub
dec
mov
sub
ret
inc
push
fldenv
ret
cwtl
jae
fists
mov
rolb
jle
lods
aas
mov
test
adc
fiadds
push
jae
and
inc
incb
ljmp
ja
in
jno
dec
xorl
jae
addr16
pmullw
dec
sub
call
addr16
push
data16
pop
adc
xchg
adc
or
push
clc
push
repnz
in
cmp
fwait
sahf
loope
mov
ds
lret
into
mov
push
pop
test
mov
push
xchg
cmp
fwait
mov
ja
rorl
pop
pop
pop
sbbl
shrb
call
in
aad
mov
nop
jae
insb
xor
jo
push
ljmp
inc
mov
aam
enter
jne
jbe
jecxz
daa
push
lea
ret
push
dec
ss
push
fidivrs
mov
gs
fxam
push
enter
adc
dec
xchg
ljmp
sub
xlat
jo
adc
pop
lock
dec
sub
mov
pop
jo
mov
lods
jno
and
adc
jbe
push
lods
inc
add
lret
fidivl
mov
sub
sti
jecxz
xchg
push
xor
pop
test
add
mov
ds
inc
shl
mov
add
mov
pop
sarl
mov
lret
dec
fwait
stc
jg,pt
std
or
jb
aam
push
js
sub
in
mov
out
sub
fnstcw
inc
into
pop
test
dec
aas
push
dec
add
mov
mov
addb
insb
out
mov
insb
sub
lods
repz
ljmp
and
popa
cwtl
inc
jl
cmp
stc
cmc
xchg
popa
push
roll
outsb
cwtl
jae
dec
dec
jb
out
dec
cmp
dec
xchg
test
ret
mov
ret
push
and
cmc
lcall
and
xchg
aaa
jp
push
push
and
jno
cmpsl
testb
push
cmp
cmp
or
sbb
shl
mov
xor
sub
jo
jp
or
nop
sbb
sahf
andl
pop
cmp
cld
dec
int
in
adc
push
xor
xchg
pop
xchg
inc
jp
sbb
xchg
movsb
test
aas
aas
xchg
loop
notb
push
cmp
lds
fsubs
jmp
nop
add
out
cmpsb
sahf
jl
pop
dec
orl
loop
sti
scas
cmp
out
mov
sbb
into
test
repz
push
aam
mov
mov
stos
lcall
mov
hlt
into
je
icebp
mov
stc
insb
pop
movb
mov
fnsave
and
call
rorl
cwtl
cli
loope
mov
dec
pop
or
lods
push
xlat
xchg
dec
outsb
mov
push
cmp
add
jb
cmp
sbb
sub
mov
inc
or
sbb
inc
shl
ret
shll
mov
xchg
cmp
adc
and
cmp
jno
into
push
jo
lret
lahf
out
add
test
mov
xchg
sub
filds
pop
enter
repnz
push
sub
sbb
jmp
xor
sbb
inc
mov
clc
and
xchg
cmp
push
xchg
fdivrp
jns
stc
or
xor
js
xor
xchg
rclb
pop
adc
imul
push
popa
lods
fcomps
fimuls
icebp
xlat
fmuls
inc
sbb
xor
push
arpl
push
lahf
jp
xlat
jmp
sbb
cmpsb
les
and
push
cwtl
jmp
jae
push
stos
pop
xchg
sbb
sbb
mov
out
and
xor
mov
or
push
fildll
push
inc
mov
enter
jb
loop
push
pop
adc
jbe
mov
jge
jp
mov
sbb
arpl
mov
mov
push
inc
int3
ret
lret
pop
jecxz
jle
daa
cmp
aas
push
aas
add
sub
loope
aas
lea
ret
mov
divb
xchg
mov
mov
xchg
and
icebp
jg
inc
mov
pop
in
sbbb
scas
cmp
sbb
test
stos
pop
add
jae
and
std
push
sub
mov
jecxz
sbb
out
bound
ret
or
mov
dec
in
jae
loope
jae
loop
sbb
push
jecxz
mov
mov
push
jle
fisubrl
or
dec
sbb
jmp
push
cmpsl
mov
or
ljmp
jne
inc
shlb
loopne
mov
sbb
cmpsb
lret
pop
test
cli
lret
test
add
pop
fadds
adcb
mov
pop
mov
pop
or
jns
pop
int
push
push
adc
clc
cmp
ljmp
xchg
lods
adc
bound
cltd
push
rcrl
out
adc
orl
or
mov
cmp
push
push
push
adc
aas
repnz
mov
dec
rolb
js
mov
add
mov
cmp
imul
dec
cld
push
inc
into
add
in
add
xchg
sub
sub
mov
jb
outsb
scas
not
mov
cwtl
out
jmp
jmp
das
mov
push
rolb
adc
icebp
jno
repnz
push
sub
dec
jae
rol
jge
das
dec
lcall
cld
dec
sti
jo
mov
loop
icebp
sub
out
sti
jle
lret
loope
mov
adc
cmp
sub
sub
ljmp
xchg
test
outsl
bound
mov
loope
dec
pop
daa
fsubr
fsts
mov
sub
aam
cmp
sbb
sbb
fsubl
push
xchg
dec
ficompl
jnp
out
ret
mov
repz
insl
mov
sbb
ret
dec
shr
jecxz
mov
push
loope
pop
add
loop
mov
outsb
push
sbb
cli
adc
stos
add
pop
cs
add
and
xlat
out
fwait
add
mov
sub
mov
in
xorl
mov
negb
mov
add
mov
shll
andl
in
mov
mov
inc
jne
lret
add
sub
out
mov
push
jns
repz
fmuls
mov
dec
pusha
cmp
push
mov
pop
add
subl
mov
cs
xor
sbb
in
popf
or
ja
icebp
out
rcrb
daa
pusha
mov
cmp
cs
lcall
push
and
and
test
pop
popf
lds
mov
lahf
jmp
fiaddl
add
loop
pop
mov
lret
xchg
cmp
xor
cwtl
hlt
or
lods
push
sbb
enter
mov
sar
push
and
data16
jmp
push
dec
xchg
jl
add
ss
lret
loopne
push
rolb
adc
repnz
js
xor
pop
add
ret
jg
mov
and
add
xchg
push
jns
or
mov
adc
xor
and
push
or
loope
push
sbb
xor
inc
inc
rcrl
ds
aam
jo
mov
dec
pop
pop
xor
lea
xchg
addr16
mov
lods
sub
pop
bound
fcmovnbe
cwtl
jbe
fcoml
iret
inc
mov
data16
lock
adc
mov
and
jno
xor
repnz
cmp
repnz
in
filds
push
push
repz
mov
fwait
mov
xchg
gs
mov
pop
jecxz
adcb
cli
xor
sbb
enter
shl
xchg
sbb
movsl
loopne
jnp
in
xchg
in
or
out
arpl
arpl
push
imul
hlt
mov
mov
stc
adc
in
call
dec
std
push
pop
push
cld
xchg
orl
mov
cli
mov
pop
push
stc
dec
xchg
lds
das
push
inc
jl
aas
xchg
iret
imul
fwait
sub
inc
stos
mov
add
jecxz
inc
mov
js
repnz
lock
divb
aam
dec
cmp
adc
movsl
lock
jo
mov
jmp
cmp
stc
adc
stos
popf
cmp
ret
es
sub
icebp
out
leave
mov
fidivs
push
mov
lock
add
cmp
inc
xchg
fwait
jge
push
lcall
xchg
stos
nop
or
sbb
movsl
movsl
dec
aam
mov
mov
mov
push
jo
sub
loopne
insb
add
add
inc
sub
jge,pn
addr16
cmp
sarl
les
cld
add
and
ficoml
or
imul
repz
test
inc
push
fnstsw
fidivl
insl
or
pop
push
out
cmc
mov
out
jno
out
fucomip
mov
jecxz
dec
hlt
lret
insb
arpl
es
shrb
pop
pusha
jne
icebp
sti
in
shl
xor
inc
mov
sbb
inc
mov
mov
pop
mov
mov
in
cmp
insb
mov
add
lcall
rclb
pusha
mov
push
rol
xor
test
out
ds
leave
pop
iret
and
inc
xchg
jns
jno
adc
fcoml
add
xchg
shr
adc
pop
cmpsb
js
sub
sub
icebp
push
mov
xchg
aam
or
jp
mov
lahf
inc
push
cmp
out
and
push
pop
in
imul
sbb
xor
xlat
sbb
inc
dec
ss
loop
or
es
and
xchg
cltd
in
jl
and
in
out
ficoms
int3
mov
xor
enter
lahf
dec
inc
pop
adc
pusha
fsubl
data16
js
popa
pop
lcall
lods
pop
lret
xor
or
es
mov
push
ss
sti
outsl
sbbl
jecxz
mov
add
aad
call
lock
xor
movsl
or
std
stc
sbb
call
pop
xor
aas
lods
repz
pusha
out
push
cmp
popa
mov
push
pop
xor
mov
ljmp
in
js
adc
mov
negl
popf
pop
xchg
push
sub
lea
xor
jg
jge
jns
xchg
mov
insl
stc
push
insl
push
mov
fnstenv
lcall
cwtl
cltd
jmp
pop
add
pop
sub
xor
push
ret
cmp
adcl
mov
enter
jo
jg
not
stc
loopne
xor
pop
jmp
mov
pop
xor
stos
lcall
hlt
xor
bound
clc
test
lret
fisubrs
cmpsl
jp
jno
fsub
mov
cmp
out
test
or
test
xchg
mov
jb
adc
sub
mov
dec
outsl
dec
ja
jno
inc
adc
and
jle
fcmovbe
adc
add
hlt
sbb
dec
and
lcall
cltd
outsb
adc
or
sub
xor
loopne
pop
stos
sub
addr16
mov
dec
ljmp
mov
push
lods
ret
xchg
xor
sarb
les
xchg
pop
mov
mov
adc
xor
stos
lcall
dec
imul
cmp
xchg
repnz
out
jmp
push
cmp
jge
jo
incl
pop
outsl
xchg
or
mov
gs
arpl
arpl
sbb
cli
mov
adc
push
mov
cmpsl
mov
or
mov
push
push
fcoml
mov
int
loopne
loope
cmovp
cmp
addl
lret
pop
sti
mov
lock
cli
scas
dec
std
lret
aaa
mov
out
jo
push
pop
fimuls
jb
mov
sbb
xchg
sub
or
loop
ffree
dec
mov
mov
or
in
cli
je
mov
and
test
push
add
lcall
inc
xchg
mov
xchg
loopne
adc
out
push
sbb
push
test
pop
hlt
repz
sbb
cmp
jbe
mov
sub
mov
movsb
std
loop
inc
loope
and
cmp
test
and
movhps
pop
stos
sbb
shll
mov
push
jb
daa
add
mov
lcall
mov
mov
dec
dec
xor
mov
aas
cmp
xchg
dec
outsl
push
or
jne
xchg
movsb
push
jl
addr16
imul
int3
std
and
in
les
sbb
mov
icebp
xor
and
out
xchg
lret
xor
sub
pop
inc
cltd
insl
jns
fimuls
sbb
add
inc
mov
xchg
test
add
sub
fcoml
and
jge
fcomps
push
jbe
ja
push
test
mov
dec
push
pop
or
jl
mov
jmp
bound
mov
in
aas
cltd
cmp
inc
insl
imul
into
clc
pusha
dec
test
add
mov
push
andl
mov
lret
adc
fisubl
sub
sub
mov
push
enter
mov
pusha
movsl
or
dec
push
aad
mov
sbb
jne
sarb
insb
mov
divl
mov
fcomps
mov
lods
es
jmp
add
aad
xor
jb
adc
xor
mov
fsubs
ljmp
sub
pop
or
fnstcw
or
hlt
jecxz
pop
rcl
mov
mov
add
ss
cmp
dec
xor
mov
push
sti
popf
add
cltd
out
aam
sbb
repz
lcall
xchg
cmpb
push
inc
or
push
into
cmpsl
jp
in
rcrl
loopne
push
rcr
pusha
out
not
aad
mov
sub
and
inc
xchg
icebp
pop
dec
and
cmpsl
jb
shrb
push
pop
shrl
or
mov
pop
ret
daa
sahf
stc
frstor
fmull
pusha
int
std
and
iret
js
mov
dec
push
fwait
pop
add
sub
push
cld
jae
loop
adc
rorb
sbb
mov
mov
mov
mov
adc
movsl
inc
gs
scas
sub
dec
lret
xchg
mov
xor
mov
pop
or
xchg
push
cmc
jle
xchg
ss
mov
ss
sbb
sbb
mov
xchg
lret
mov
test
mov
dec
rorl
xchg
lret
sti
hlt
or
pop
xor
stos
popa
out
jne
jp
fistl
clc
push
stc
xlat
cld
rcr
add
sbb
imul
scas
xor
mov
adc
mov
inc
fisubrl
cmp
in
xor
inc
push
ljmp
fcomp
jno
shrl
jecxz
sbb
jns
sti
and
xor
out
insl
xor
shll
cli
pushf
push
add
mov
test
fst
inc
jbe
xchg
and
add
imul
sub
addl
cli
cltd
cmp
daa
mov
dec
aas
xlat
sahf
mov
addr16
je
cld
mov
jns
jle
add
cmc
push
das
xor
push
push
mov
adc
fwait
addl
jmp
lahf
mov
cld
imul
adc
mov
icebp
shlb
aad
movsl
mov
stos
sbb
xor
or
rcrb
jmp
push
mov
sbb
pop
iret
adc
inc
xchg
fsubs
push
icebp
mov
inc
femms
scas
nop
mov
popf
stos
in
inc
dec
and
lods
mov
mov
fcmovnb
or
in
and
call
aad
inc
mov
pop
or
cmpsl
add
repz
jecxz
cmpsb
xor
push
aad
sbb
push
inc
cmp
movsl
out
mov
mov
cmpsb
repnz
repnz
sbb
add
sbb
push
add
je
rorb
xlat
jecxz
mov
jb
out
cmc
call
int
fcom
xor
mov
into
pop
pop
push
add
sub
xchg
push
cmp
stc
jge
gs
mov
in
xor
push
cli
lcall
xchg
mov
and
ret
std
aad
jecxz
aas
les
aad
add
jmp
jle
jmp
sub
mov
push
adc
jmp
mov
dec
dec
fsubl
and
sub
movsl
xor
sbb
mov
adc
mov
test
cmp
or
cvtpi2ps
jge
pusha
xchg
mov
push
scas
or
ds
mov
push
cmp
mov
pop
or
inc
hlt
mov
add
add
clc
pop
cwtl
leave
ss
and
xchg
mov
mov
fists
icebp
dec
addb
xchg
cli
es
popf
stc
sahf
mov
test
adc
aad
lods
das
cltd
cltd
ljmp
and
add
pop
sbb
sbb
pushf
lock
stos
mov
add
xor
xchg
pop
sub
fwait
enter
jbe
inc
scas
pushf
mov
mov
mov
push
std
mov
jmp
and
cmpsl
int3
je
or
pop
cmp
loopne
jl
outsl
outsl
int
mov
cmp
xchg
lds
mov
pop
das
jmp
fadds
sub
out
mov
les
and
xchg
dec
hlt
mov
andl
dec
repnz
inc
and
or
pop
jno
sbb
push
repnz
int
jne
dec
push
pop
ljmp
xchg
or
incb
or
lahf
jno,pt
scas
ljmp
dec
push
xchg
jnp
in
xchg
out
lods
es
int
inc
inc
lret
in
push
fildl
mov
pushf
insl
sub
mov
pop
xchg
mov
movsb
pop
fiadds
add
xor
mov
fcomps
mov
sbb
sbbb
ss
mov
sub
insb
pop
sbb
jl
dec
xchg
pmaddwd
pop
sti
or
xlat
and
out
or
xor
fcomps
loope
jl
jo
ret
ficomps
fwait
leave
mov
cmpb
stc
or
rcrb
mov
cmp
dec
data16
cmp
add
aas
inc
int3
pop
sahf
lock
lds
out
cltd
ja
out
push
fcomps
fsubr
nop
out
fiaddl
cmp
jl
in
in
push
push
sarl
das
ljmp
push
lahf
cmp
lahf
bound
push
imul
bound
adc
inc
adc
cmp
leave
iret
and
cmovo
out
pop
nop
jge
pop
out
sbb
test
or
and
and
pop
mov
inc
push
stos
push
stos
imul
or
addr16
loope
int3
mov
push
jns
mov
mov
mov
lahf
shl
inc
shrl
popa
add
popa
adc
loop
jbe
or
daa
ja
pop
pop
inc
test
mov
xchg
xor
mov
enter
iret
ds
loopne
dec
je
repz
push
clc
stos
adc
xchg
fnstenv
bound
loopne
xlat
fsubl
in
jg
or
cmp
dec
add
aas
data16
mov
hlt
fdivrp
stos
mov
shl
dec
int3
xchg
jge
pop
test
xlat
mov
mov
subb
cmp
mov
in
testl
add
in
stc
pop
sbb
and
xchg
cmp
sar
add
aad
mov
pop
insl
in
xchg
jo
inc
or
loope
jns
add
or
loop
lods
or
lea
dec
or
int3
pavgb
out
jo
icebp
rorb
xchg
dec
lret
pop
inc
loopne
sbb
lcall
mov
sti
jnp
fisubrs
pop
and
iret
mov
lods
cwtl
sbb
repnz
push
jb
xor
jae
mov
in
popa
mov
icebp
dec
xor
stos
cmpsb
pop
or
and
ret
jbe
test
sahf
shlb
fs
cmp
xchg
negl
jb
push
push
in
inc
xchg
inc
fdecstp
aam
out
das
fwait
pop
lahf
mov
or
imul
insl
push
jl
mov
jge
inc
rcrl
pop
mov
mov
inc
rcll
insl
jbe
xchg
into
sbb
mov
in
lock
outsl
loopne
js
adc
xchg
adc
enter
push
jns
ret
cmpsl
scas
mov
div
fs
ret
sub
stos
dec
jo,pt
dec
lods
stos
icebp
testb
inc
cmp
repnz
push
mov
js
xor
push
ss
lahf
icebp
shufps
fdivrp
jae
jno
popa
add
sub
inc
or
data16
loopne
imul
and
cmpsb
imul
cmpsl
cmp
add
mov
mov
and
scas
cmp
aaa
sbb
scas
xlat
mov
jo
lahf
sbb
fs
movb
mov
jo
mov
and
jle
bound
scas
ret
pusha
fsts
repz
paddd
dec
popa
repnz
and
sbb
pop
cmc
test
imul
mov
add
mov
stc
mov
jno
loope
flds
mov
mov
push
inc
call
cmpsl
xor
lods
add
mov
aam
scas
push
jmp
jae
dec
cltd
or
testb
int3
pop
inc
clc
push
loopne
lds
cmpsb
in
jp
in
xchg
enter
dec
xor
stos
lock
push
cltd
out
mov
pop
shrb
icebp
push
fwait
pop
xor
mov
es
lea
inc
adc
es
sub
shrb
sub
pop
loop
ljmp
aas
xchg
push
cld
mov
aam
lret
jnp
stc
xchg
je
or
in
push
jge,pt
mov
std
xor
pop
test
mov
fwait
aas
js
sbb
in
popl
nop
push
cmp
lds
adc
leave
mov
aas
cmpsb
xchg
lock
lret
push
iret
cli
out
test
sbb
push
xchg
dec
push
xchg
adcl
lahf
sbbb
xchg
bound
fldl
mov
mov
negb
test
dec
add
and
data16
sahf
movsb
out
mov
lds
dec
or
cmp
aad
lods
loop
int
iret
fsubp
in
xor
aad
mov
push
dec
insb
out
mov
push
mov
int
sbb
and
sbb
adc
mov
inc
mov
out
in
dec
mov
cs
test
icebp
lahf
or
aaa
pushf
dec
mov
mov
nop
or
popf
js
addr16
mov
movl
stos
sti
shrb
mov
inc
jbe
mov
mov
js
stos
sub
jns
sbb
sbb
add
popa
pop
and
mov
fs
fiadds
out
cwtl
mov
fdivs
rolb
loope
jl
push
sarb
ret
loope
rorb
aas
mov
pushf
daa
mov
jae
clc
dec
dec
orl
out
xchg
and
gs
leave
jne
push
mov
add
and
je
mov
in
sub
adc
movl
int
xchg
lcall
add
sbb
out
shlb
test
subb
push
jns
inc
aad
loope
cmp
push
cmp
adc
imul
ret
cmc
adc
cmpsl
scas
mov
jae
imul
jmp
pop
rol
or
xchg
mov
cwtl
push
lahf
sub
cli
xchg
sbb
mov
sub
stc
icebp
inc
xorl
cld
sub
lock
inc
add
out
jno
sbb
ja
mov
xchg
test
aad
mov
jg
push
or
in
movsb
inc
cmp
lcall
mov
rclw
mov
jle
and
adc
loopne
and
fmulp
dec
les
subl
push
inc
or
cmp
es
add
mov
xlat
dec
cmp
jmp
test
jno
cmp
mov
popf
pop
push
mov
jl
jne
loope
pop
lret
dec
test
xlat
cltd
push
jbe
adc
movsl
aas
dec
movsb
test
jbe
jno
rolb
mov
out
mov
mov
stc
xor
inc
hlt
xchg
fidivs
int3
pop
xchg
stos
xchg
rolb
add
jno
jecxz
or
sub
out
cltd
loopne
push
mov
mov
test
mov
ret
cmc
sahf
out
push
mov
mov
adc
movsb
mov
lds
cwtl
jge
insl
sbb
lcall
mov
sub
imul
imul
movsl
movsl
and
dec
ljmp
js
cmp
xor
mov
xchg
sti
adc
or
mov
jmp
jecxz
mov
mov
fisttps
xchg
sub
ret
cmp
lods
ja
ja
sub
mov
push
push
movsl
and
adc
stc
popf
jmp
andb
fcmovnu
cmp
insb
and
in
arpl
imul
mov
lret
pop
mov
test
fs
call
fisttpll
xchg
mov
mov
inc
cmp
icebp
mov
or
inc
lock
lahf
adc
repnz
subl
push
push
jb
mov
dec
outsb
xor
out
add
add
jno
adc
lret
pmaxub
stos
repnz
push
std
sbb
dec
mov
andl
rorl
repz
add
test
cltd
in
pop
dec
cmp
ss
faddl
popa
mov
jecxz
pop
jle
and
cmp
mov
sbb
xchg
addr16
pop
mov
push
cmp
cli
dec
push
jp
cmp
movsb
aam
out
add
xchg
mov
inc
push
mov
inc
mov
xchg
leave
lret
repnz
sti
fsubs
es
lds
jnp
sbb
fldcw
and
or
pop
lods
cmp
daa
push
bound
xor
or
mov
lahf
jno
push
gs
test
lcall
lea
sub
jl
fcom
rcrb
mov
outsl
xchg
inc
mov
sub
fidivl
inc
cmpsl
loop
fisubl
push
push
lods
and
stc
adc
bound
mov
rcll
aaa
mov
movl
data16
jno
int3
push
daa
xchg
add
or
scas
dec
pop
add
jecxz
lcall
lahf
nop
aad
adc
mov
adc
sub
or
outsb
inc
jg
inc
jb
push
push
movsl
jmp
mov
fsubs
hlt
mov
xchg
pop
mov
push
je
bound
mov
mov
aaa
popf
test
call
adc
mov
and
cmp
dec
not
out
jl
add
add
insl
mov
mov
mov
mov
fdivs
xchg
add
mov
xchg
sbb
cli
adc
mov
adc
dec
shll
dec
arpl
sub
lods
lcall
xlat
fcompl
outsl
cwtl
orb
jecxz
xchg
xchg
adc
es
mov
enter
mov
std
add
popf
xchg
aaa
mov
cmp
movsl
mov
jo
cld
rcll
ja
add
lods
aad
dec
push
fcomps
push
lds
cmpsb
nop
repz
cmp
fucomp
ret
adc
lds
ss
aaa
xor
jle
push
rol
shr
aam
pop
loope
int3
pop
das
xor
add
addr16
dec
std
mov
mov
jle
adc
std
out
in
jecxz
adc
lock
or
popf
xor
mov
lahf
outsl
xor
into
hlt
mov
aad
push
pushf
pusha
dec
and
xchg
mov
jae
push
adc
inc
lods
add
gs
les
scas
adc
sub
ucomiss
jl
pop
outsb
cltd
sti
xchg
pop
pop
push
sbb
sbb
ret
jg
sub
jg
ret
cmpsl
or
or
lock
jno
or
lea
mov
inc
mov
push
ret
inc
dec
out
outsl
cmp
pop
push
iret
jmp
movsl
add
sub
jne
inc
fcomps
aad
inc
cmc
into
and
push
mov
imul
stos
adc
ret
and
aas
rcrb
sbb
iret
out
xor
out
sbb
add
xchg
daa
addr16
xor
sbb
jno
cmp
dec
ret
inc
xchg
push
scas
dec
aas
cmp
mov
add
jae,pt
push
stos
mov
push
out
mov
enter
jno
xlat
xchg
nop
loopne
cmp
out
sbb
das
mov
lods
outsl
lds
sub
jge
test
js
lea
in
pop
cmp
jle
sub
mov
and
xchg
loope
or
mov
push
push
cli
and
clc
aas
adc
xor
out
jo
cmp
jmp
cmp
sub
pop
ret
sahf
popa
mov
loope
xchg
xchg
mov
aaa
mull
push
mov
into
jne
dec
mov
adcl
xchg
cmp
rcrb
leave
sahf
pop
xchg
cmp
cmp
mov
out
fistps
cld
jg
mov
fs
push
repz
adc
pop
lahf
mov
mov
scas
dec
je
mov
ret
jbe
rclw
mov
call
and
add
xchg
js
mov
mov
pop
xchg
scas
gs
lds
jns
mov
loop
jne
inc
mov
lods
xchg
dec
insl
or
jle
dec
gs
test
pop
mov
jns
lods
std
or
sbb
push
xchg
test
popf
or
fidivrl
xlat
mov
xchg
mov
push
mov
fwait
enter
sub
xor
stos
mov
cmc
xchg
cmp
mov
sbb
test
subl
jg
jmp
mov
jmp
mov
dec
scas
cmp
jle
add
dec
pop
lods
cmp
or
mov
roll
dec
xor
int
int3
mov
cltd
dec
jle
outsl
out
or
loop
mov
sub
imul
aad
call
test
or
ljmp
xchg
fdiv
lret
sbb
push
sbbb
jge
lods
adc
dec
xchg
xor
stos
inc
mov
out
out
aas
xchg
jl
out
xlat
push
scas
loope
data16
cmp
cmp
lock
inc
addb
ret
aad
inc
imul
rcrb
push
xchg
jnp
mov
push
mov
repnz
pop
sub
iret
lcall
push
xchg
pop
in
xchg
das
call
ljmp
add
mov
mov
jecxz
push
sbb
sub
cmp
jo
sbb
xchg
and
adc
call
hlt
insb
test
pop
ret
in
lcall
lock
ror
mov
jmp
sub
leave
fsts
enter
add
xchg
fcmovbe
mov
sub
and
test
ficomps
cmpsb
inc
lahf
jmp
dec
fadd
mov
xor
test
popa
scas
aas
sti
mov
sbb
aam
stc
and
cmpb
out
movsb
fldenv
pop
xchg
inc
lock
testb
and
pop
cmpsb
mov
mov
pop
ss
push
xchg
out
test
mov
pop
mov
in
imul
lret
pop
xor
cmp
and
add
xchg
sub
and
mov
sub
sahf
xchg
xchg
test
fidivrs
push
sub
jb
cmpsl
dec
sub
mov
push
test
movsl
pop
ret
xorl
push
cmpsl
pop
jecxz
in
push
mov
xor
push
jbe
fbstp
push
negl
mov
js
addr16
aaa
fldl
loopne
add
dec
add
adc
pop
mov
xchg
push
arpl
push
mov
ds
inc
ljmp
pop
pop
sahf
sub
sbb
pop
jmp
aam
aas
rcr
popl
jb
cli
or
clts
mov
das
xchg
in
and
scas
lret
add
push
lds
xchg
pop
out
add
mov
pop
lods
push
mov
cmc
dec
ret
popf
scas
xlat
scas
push
sub
or
int3
push
mov
jno
sbb
mov
mov
lret
mov
icebp
dec
mov
inc
sub
pushf
sub
fisubl
sbb
sbb
neg
push
add
cld
push
adc
sbb
lock
xchg
cmp
out
jecxz
std
push
sbb
popf
cltd
loop
jae
rcr
pop
icebp
sub
mul
insb
add
or
pop
fisttps
aad
les
push
imul
lock
pmuludq
mov
lcall
jg
push
in
movsb
outsl
sub
ret
shll
jp
xor
in
xchg
lods
xor
aas
rcr
pop
cmp
lcall
cs
test
pusha
lock
decb
movsb
dec
test
inc
sub
rcl
jmp
mov
adc
lea
fwait
xchg
hlt
mov
cmp
ss
clc
mov
jo
loop
insb
loopne
lock
popf
xlat
mov
icebp
mov
int
movb
arpl
cwtl
inc
mov
pop
notb
ss
xchg
pop
pop
inc
out
dec
pusha
aas
jecxz
ss
cmpsb
sar
add
cmp
and
sbb
jnp
lea
pop
enter
pop
in
xor
dec
add
loop
mov
outsl
push
mov
sahf
mov
hlt
dec
orb
pop
mov
adc
sub
mov
mov
mov
inc
adc
dec
jnp
loope
dec
daa
jecxz
fs
jge
es
xchg
out
shlb
imul
div
int3
stos
cmp
lret
das
or
imul
test
leave
sbb
popf
sub
adc
icebp
in
jo
sbb
pusha
int3
and
jo
test
cmp
movb
cmp
push
or
sub
lds
out
out
and
sbb
in
loop
andl
jle
cmpsl
lock
fcoml
pop
mov
fidivl
mov
jo
xchg
jl
es
movsl
out
fwait
aad
and
lahf
mov
mov
adc
sbb
leave
inc
lret
dec
xchg
add
pop
hlt
sbb
movsl
cmp
divb
sub
jl
outsl
inc
xchg
mov
lods
add
sbb
clc
cs
xor
pushw
test
stos
das
inc
rcl
cmp
xchg
lret
je
fistps
je
mov
repz
repnz
or
or
nop
xchg
pop
test
arpl
arpl
cmp
push
scas
lods
arpl
add
test
test
sbb
es
cmpsl
je
je
mov
and
xlat
ljmp
out
cmp
addr16
sahf
sbb
cmp
fs
rolb
cld
jae
xchg
push
arpl
pop
fwait
and
pop
pop
push
sbb
movmskps
cwtl
std
push
xchg
insb
add
je
lea
aaa
dec
pushf
xor
popa
push
loope
push
mov
jno
js
jl
xor
lds
add
xchg
lcall
dec
int
outsb
adc
sarb
xor
add
rol
ljmp
aaa
xor
out
inc
fistpll
in
pop
mull
inc
movsl
push
stos
movsl
push
in
nop
lret
jne
lods
cmpsl
jnp
mov
sbb
sub
loopne
mov
aam
int3
ja
repz
fldcw
and
pop
inc
or
movsb
sub
xor
aas
jmp
js
ret
lds
or
pop
mov
xchg
jg
hlt
call
sahf
inc
jmp
cwtl
xor
daa
aam
add
leave
mov
ds
cmp
cmp
test
cmp
pop
or
mov
push
les
gs
shll
lods
int3
mov
lods
int
out
adc
outsb
add
ss
dec
xor
push
aad
movsl
mov
mov
das
cmp
jmp
roll
adc
xchg
push
cli
and
dec
fldcw
cmpsb
sbb
xchg
in
lret
xor
adc
fldt
jno
fidivl
iret
popa
test
inc
sub
mov
sahf
test
loopne
scas
data16
and
ficomps
cld
icebp
leave
jo
sbb
daa
sub
sbb
mov
xchg
pop
ljmp
mov
popa
aas
or
inc
push
loope
sbbb
xchg
dec
lcall
or
test
cld
push
test
jl
mov
sbb
mov
cmp
push
scas
dec
push
aaa
add
inc
pop
sbbb
es
mov
sub
fbld
scas
js
inc
mov
jle
mov
pop
mov
ljmp
adc
cwtl
addb
scas
or
sub
jge
fistps
cmc
out
divb
dec
iret
fidivrs
arpl
lock
fisttpll
mov
mov
in
inc
adc
xchg
ret
push
adc
or
popa
mov
ss
mov
repnz
lea
shrb
cmp
pushf
out
inc
out
call
inc
lahf
jns
or
lea
insb
hlt
inc
and
lods
bound
push
dec
psubb
insl
pusha
lahf
cs
pop
imul
roll
push
arpl
aad
out
adc
xchg
nop
adc
lods
out
in
xchg
push
shl
pop
pop
mov
bound
jp
push
and
sub
inc
inc
mov
iret
fildl
mov
xor
inc
loope
bound
mov
and
and
cmp
pop
es
xchg
adc
sbb
aad
xchg
lret
xchg
ljmp
ficoml
pushf
jecxz
popf
jnp
mov
test
push
test
int3
insl
mov
js
dec
mov
out
mov
shlb
mov
or
loopne
mov
je
push
shll
push
add
xchg
ljmp
out
mov
jecxz
ljmp
addr16
sub
idivb
lock
pop
roll
mov
push
mov
sub
cmp
enter
dec
push
cmp
and
mov
sbb
call
mov
arpl
data16
jns
xchg
mov
sub
call
inc
mov
inc
out
mov
xor
mov
sub
jge
dec
jbe
lcall
dec
mov
gs
push
dec
js
mov
arpl
decb
out
push
push
out
mov
jno
lret
inc
leave
and
mov
sbbl
pop
mov
xor
adc
cli
sbb
xchg
cli
sub
sbb
test
sub
add
dec
cmp
inc
jne
pushf
sub
das
test
outsb
rol
lahf
in
pop
fs
std
ja
xor
fildll
add
dec
test
dec
xor
lret
jmp
je
into
loopne
dec
add
or
inc
add
loop
jnp
rorb
jne
mov
push
pop
and
push
sar
jmp
adc
pop
push
jg
cmpsl
mov
int
sbb
jb
fincstp
sub
lcall
cs
popf
cmp
data16
mov
fistpll
lods
dec
das
jle
adc
dec
xchg
push
cmp
fneni(8087
sti
xor
push
in
dec
adc
and
jl
sbb
andb
jb
lret
xchg
xor
je
arpl
inc
mov
in
in
push
sub
pop
es
mov
and
cmp
out
adc
stos
sahf
imul
fnstsw
fadds
xchg
nop
xlat
in
fisttpl
das
push
sub
fscale
dec
test
or
adc
movsb
outsl
xor
push
push
and
data16
pop
dec
xchg
cmp
sub
inc
push
not
ret
fsubs
fdiv
sbb
xchg
test
movsl
jns
rorl
push
inc
xor
mov
and
addr16
leave
stc
mov
add
orl
jp
mov
shr
lahf
sbb
cmpsl
negb
xor
inc
negb
mov
aas
mov
cli
cmp
sub
lds
xchg
out
mov
fwait
stc
pop
sbb
jg
ja
mov
sub
inc
mov
mov
fisttps
xchg
jg,pn
sbb
pop
fnstsw
insl
mov
imul
les
ja
xchg
jg
insl
pop
and
pop
pushl
and
cmp
inc
or
adc
ja
sub
push
leave
cwtl
pop
push
inc
cld
jmp
lea
cmp
cmp
add
cmp
gs
jmp
xlat
sub
push
ss
mov
popf
into
cld
xor
xor
inc
xchg
pop
dec
lea
sub
cwtl
sbb
pushw
xor
jae
mov
jle
movsb
jbe
cmpsl
pop
pop
sub
cli
iret
sub
mov
adc
clc
call
inc
or
mov
cmpsb
fnstsw
out
repz
fbld
lcall
xor
test
sbb
repz
ret
inc
add
jecxz
das
nop
xor
pop
pop
xchg
or
push
jg
imul
push
mov
xor
imul
mov
dec
sbb
jns
aad
cs
in
into
repnz
jmp
in
lret
das
mov
pop
ret
xor
enter
xor
mov
sbb
neg
lret
jne
mov
dec
xorb
and
enter
fdiv
adc
pop
inc
mov
aad
jo
fnstcw
push
jp
pop
ds
xchg
cs
clc
fcmovb
jb
stc
add
stos
jg
pop
inc
sub
cli
mov
or
inc
pop
jbe
xchg
lock
pop
call
lret
loop
popl
hlt
fsubs
imul
adc
mov
les
cmp
mov
inc
pop
add
xchg
cmpsb
jmp
jl
add
xchg
addr16
es
out
ret
test
or
mov
push
andb
inc
lock
mov
cmp
xor
bound
data16
sarb
xor
adc
rolb
inc
push
sub
mov
xor
jno
or
pop
add
add
mov
pop
add
fsubs
sub
dec
xor
sbb
fidivrs
pop
mov
adc
and
jecxz
imul
cmp
bound
push
xchg
pop
or
bound
insl
adc
cld
repz
sbb
rolb
mov
cmp
push
mov
loopne
out
or
jns
or
pop
insl
xchg
xchg
xchg
jmp
cmp
ljmp
xlat
mov
mov
or
sbb
ljmp
sub
mov
or
sub
iret
push
sbbb
jmp
dec
les
rcll
inc
es
loope
xchg
lds
arpl
mov
aas
xor
xor
adc
add
fiaddl
or
fs
mov
sub
pop
push
fs
sbb
xor
dec
or
add
cmp
pop
pop
add
add
imul
shlb
push
inc
pop
dec
push
ljmp
nop
push
in
xchg
and
in
mov
sbb
push
push
lahf
mov
adc
sbb
out
addb
adc
dec
xor
add
dec
jbe
xor
je
ret
mov
cmp
pop
inc
ljmp
push
je
push
pop
loope
dec
push
ret
lods
ljmp
roll
jle
inc
lods
int
sbb
push
inc
mov
dec
mov
mov
xor
xchg
mov
lcall
sbb
icebp
push
adc
loop
aas
mov
sti
adc
jb
outsl
mov
inc
mov
dec
add
cltd
stos
xchg
or
es
shrb
in
or
dec
or
dec
into
pop
sbb
sub
xor
aas
and
mov
jno
jg
jb
hlt
fcompl
mov
sbb
out
and
aad
xchg
leave
fnstcw
popl
push
cmp
dec
or
mov
push
mov
xchg
add
cmp
icebp
enter
scas
movsb
jecxz
sbb
in
push
sub
inc
jne
fcmovnb
jg
in
lret
xchg
add
pusha
jg
mov
stos
outsb
mov
cmc
imul
ljmp
cld
mov
inc
push
dec
jno
test
scas
iret
push
jnp
rcrb
xchg
cmpsl
pop
mov
xchg
dec
or
jno
jp
lds
dec
xor
ret
les
and
es
pop
outsb
xchg
je
inc
sub
mov
or
xchg
aad
inc
pop
xor
sbb
push
hlt
lahf
arpl
xchg
dec
jmp
int
cmpsb
outsb
jb
fs
sbb
jge
mov
test
xlat
adc
out
adcb
pop
mov
iret
outsl
adc
ret
mov
mov
scas
push
ja
and
sub
xchg
pop
sbb
movsb
mov
xchg
adc
repz
or
hlt
adc
sub
mov
jl
jbe
inc
sbb
add
xor
jno
int
cmpl
das
div
xchg
lock
out
mov
jp
sbb
add
jmp
arpl
push
jb
mov
xor
pop
jbe
in
insl
iret
pop
jecxz
frstor
leave
xor
pop
addr16
or
inc
or
mov
xchg
xor
xchg
cld
movsl
imul
fwait
xor
add
lret
cmpsl
mov
jle
stc
add
inc
cmp
repz
in
jp
cli
sbb
test
and
pushl
into
int3
fst
cmp
mov
or
repnz
jne
mov
mov
cmpsb
scas
xchg
cmpsb
cmpsl
cmpsb
divl
sbb
cmc
inc
js
sbb
fimull
inc
ljmp
sub
repz
cli
mov
xchg
dec
mov
imul
in
push
movsl
ret
insl
cmc
jl
addr16
fld
movsl
fwait
aam
push
mov
push
inc
movsb
cmp
jg
jae
inc
gs
mov
inc
mov
out
out
mov
rcl
jns
and
dec
scas
pop
lds
mov
fmull
rol
cs
imulb
mov
ficompl
fwait
jnp
addr16
inc
add
mov
mov
and
loopne
sub
inc
jmp
add
std
and
inc
mov
mov
loope
decl
xchg
sbb
enter
data16
push
adc
popf
push
outsl
add
adc
dec
out
dec
rcll
fldt
hlt
out
gs
hlt
dec
out
push
jns
push
roll
xchg
fs
cmc
loope
jmp
mov
mov
push
shl
adc
adc
mov
cmpsb
icebp
mov
jge
pop
mov
loopne
xchg
call
es
stos
out
lcall
mov
sub
fdivrs
in
xor
sub
pop
cmp
xor
cmpsl
mov
ret
insl
xor
test
insb
pop
mov
stos
loope
daa
push
mov
hlt
shlb
xchg
inc
mov
mov
mov
xchg
scas
ret
lock
and
fsubrs
dec
or
and
pop
pop
out
mov
cmp
mov
pop
nop
sub
mov
pop
mov
test
mov
testb
xchg
jae
mov
pop
imul
xchg
stos
es
xor
push
mov
cwtl
popa
xchg
les
mov
pushf
popa
sbb
xchg
in
or
roll
cld
lret
rcrl
inc
cmpsb
les
lcall
cs
dec
sbb
pop
outsl
ja
add
movsb
push
xchg
outsl
push
fcompl
sbb
mov
gs
cmp
gs
add
scas
loopne
and
adc
or
cli
test
mov
jno
cltd
shrb
add
and
loope
adc
sti
loopne
push
iret
sub
or
std
mov
idivl
sbb
adc
enter
jle
lcall
mov
repnz
sub
addl
mov
sub
sbb
test
jne
jle
js
loope
cmp
xchg
pop
push
mov
and
push
stc
adc
in
lret
stc
dec
in
cmc
ss
data16
in
insl
mov
inc
xchg
inc
adc
push
lock
loopne
pop
lahf
les
push
popf
popf
inc
or
jae
cvtdq2ps
cmp
mov
sbb
imul
sar
cld
xchg
jbe
xor
push
gs
pop
xlat
push
movsb
pop
dec
mov
xor
test
mov
and
sub
test
inc
adc
mov
nopl
pop
dec
lahf
push
inc
cmp
pop
jo
aad
dec
add
push
incl
add
mov
js
icebp
mov
xchg
sub
xor
mov
xchg
into
test
cli
sub
je
insl
lcall
pusha
outsl
nop
dec
repz
popa
dec
mulb
mov
sub
sti
sti
popf
sbb
xchg
cmp
inc
mov
imull
fstps
pop
mov
push
dec
aam
test
dec
ficoms
pop
enter
into
bound
js,pn
add
pop
stc
fs
jne
notl
adc
pop
rolb
test
cmp
lret
aad
arpl
push
mov
push
dec
add
adc
cmp
fldcw
aad
dec
sahf
sub
stos
and
add
insl
sub
adc
test
loop
sbb
out
testl
cld
out
nop
sahf
aam
adc
xor
xor
xchg
adc
bound
push
pop
or
jg
mov
sahf
xor
mov
leave
pop
cmp
std
xorl
xor
xlat
and
rolb
xchg
xor
pop
push
flds
push
in
js
push
lahf
fs
pop
cmc
pop
ret
or
adc
shr
dec
add
addr16
enter
clc
jle
jo
insb
idiv
cmp
dec
dec
sub
ljmp
sub
std
cli
and
repnz
inc
inc
in
cltd
out
xchg
jno
pop
inc
mov
mov
mov
sbb
data16
cmp
movb
js
icebp
mov
movsb
test
dec
xchg
jecxz
rcr
or
shl
xchg
add
inc
cs
enter
mov
mov
jae
call
das
inc
adc
test
daa
adc
mov
enter
js
mov
jo
test
sbb
sbb
mov
popf
pop
cld
inc
pushf
sti
cld
inc
imull
mov
sbb
imul
insb
out
inc
ljmp
shlb
jae
dec
dec
add
sahf
loop
in
ret
dec
jmp
pop
jns
mov
scas
imul
xor
or
das
loopne
cmp
xchg
mov
imul
das
adc
cmpsl
daa
mov
orb
mov
cmpsb
xor
jle
mov
jnp
sahf
pushf
mov
mov
aas
jecxz
jb
push
aas
mov
dec
sti
mov
mov
adc
loope
cli
gs
push
mov
pop
daa
lret
rcrl
push
jo
sub
mov
jecxz
aaa
xor
jl
fisubrl
dec
test
adc
fs
sub
push
les
js
mov
mov
sub
in
push
xchg
inc
add
mov
mov
cli
fnstcw
push
lods
jp
test
roll
and
movsl
pop
leave
fsubr
test
mov
mov
xchg
xor
pop
mov
xor
and
push
mov
inc
adc
lahf
clc
xchg
scas
push
push
dec
int3
xchg
mov
mov
mov
out
int3
inc
jnp
nop
cli
xchg
and
or
cs
xor
and
jne
lret
and
les
icebp
dec
jno
arpl
lea
jne
mov
fildl
pop
std
insl
mov
push
or
fmuls
push
fisttpll
inc
jb
jne
jg
sub
or
int
lods
add
cmp
add
arpl
push
push
scas
mov
fs
iret
les
rcrl
jb
movntq
sub
stos
jle
arpl
add
repz
lock
mov
and
outsl
cmc
shrl
xchg
outsl
cli
sub
lods
add
xor
xor
stc
xchg
push
adc
loop
and
fs
mov
push
pop
outsl
or
bound
pop
adc
call
or
or
jne
push
and
push
mov
inc
and
ss
cmp
mov
fisubrs
sub
jnp
mov
jo
arpl
lock
sbb
cltd
addr16
jns
sbb
xchg
hlt
cmc
cmc
and
add
pop
xchg
imul
jb
and
pop
mov
mov
imull
addr16
xchg
std
dec
add
mov
push
adc
lahf
cmpsb
add
xor
fdivs
and
js
mov
outsb
lcall
push
cmp
jmp
imul
pop
ljmp
in
pop
or
es
mov
xchg
add
jecxz
fisubs
jns
mov
lods
or
pop
mov
push
xor
mov
sbb
or
sub
leave
push
les
inc
inc
nop
je
mov
cmp
les
cli
ja
cmp
cmc
sub
push
ret
pop
adc
ret
mov
mov
inc
jb
sarl
adc
push
cmp
test
insb
enter
std
loopne
xchg
sub
sub
jge
pop
pop
sbb
jmp
adc
ja
cmc
int
push
inc
jge
cmp
pop
push
xchg
out
pop
outsl
mov
pop
push
hlt
jle
xchg
pop
mov
les
imul
int3
xchg
pushf
rcl
or
sahf
cmp
xchg
pop
adc
imul
and
cmc
mov
jmp
leave
std
pop
adc
popf
aas
pop
cmp
iret
and
or
jbe
jmp
and
xchg
daa
in
add
daa
jecxz
jno
add
and
xchg
mov
sbb
test
inc
rorl
rcll
std
xor
adc
outsl
std
dec
mov
mov
lea
jbe
out
pop
inc
dec
ficoms
cmp
mov
mov
dec
fisttpll
pop
xlat
mov
loopne
dec
sbb
sbb
aam
int
mov
xor
jl
mov
cmp
jne
rcl
lds
pop
orl
jmp
dec
cmp
std
mov
sub
xor
jl
pop
scas
addr16
sar
inc
mov
int
mov
or
xchg
in
mov
aad
mov
lcallw
call
xor
dec
test
loopne
je
in
test
outsb
scas
add
bound
adc
push
cmpsl
add
mov
inc
dec
jno
inc
jge
push
pusha
lret
dec
push
push
sbb
pop
push
lahf
jle
ret
sub
enter
jo,pt
pop
aaa
pop
test
xor
cmc
sub
imul
scas
jge
pop
insl
iret
jge
xchg
stos
out
lock
xchg
xchg
inc
push
adc
enter
jl
and
scas
push
inc
jge
arpl
subb
dec
cmpsl
inc
and
mov
inc
jecxz
ljmp
shl
push
pop
hlt
inc
and
mov
sbb
xchg
mov
fwait
decl
pop
fiaddl
ljmp
in
pop
or
mov
addr16
pop
into
lock
mov
mov
mov
push
jno
je
outsl
jge
push
xchg
sub
mov
stos
jmp
fadd
pop
les
fwait
iret
hlt
out
roll
push
js
clc
mov
sti
cmp
iret
add
clc
and
lods
mov
int
or
push
cmp
lea
pop
cmp
xor
mov
xor
and
lods
sarb
shll
aam
mov
add
push
mov
mov
or
mov
mov
dec
rcrl
cmp
bswap
xchg
arpl
push
adc
popf
leave
sbb
rclb
pop
sbbb
xchg
jns
push
adc
dec
addr16
dec
and
dec
std
shl
pop
xor
ljmp
pop
repnz
js
aas
fstps
and
sbb
sub
jmp
into
outsl
ret
dec
hlt
xchg
sub
mov
xchg
mov
xor
fisttps
cld
stos
cmp
in
ja
rcl
inc
or
xor
cld
pop
test
mov
mov
push
lret
xchg
xchg
flds
jg
sbb
inc
jle
movsl
push
int
les
test
and
aad
test
cmp
xor
arpl
pop
sbb
arpl
sub
xchg
sub
inc
int3
mov
pop
in
xchg
or
les
push
shrl
test
sbb
clc
je
xchg
pop
mov
fimull
dec
sbb
jge
xchg
mov
repz
xor
mov
shll
mov
stos
ljmp
push
movsb
push
and
dec
add
enter
test
sahf
les
dec
sbb
imul
pop
shlb
cmp
push
lcall
and
cmc
xchg
pop
mov
insb
cmp
adc
inc
in
repz
inc
xor
popf
in
xchg
mov
pop
cmp
popf
inc
or
lods
pop
push
enter
xchg
mov
loop
push
aas
imul
adc
cmp
and
add
negl
or
mov
loop
scas
push
push
lock
lock
jne
push
dec
mov
pop
orl
push
out
sahf
in
outsl
pminub
mov
adc
fisubrs
jecxz
popf
je
hlt
push
ljmp
sub
pop
or
pop
push
jmp
pushf
or
push
std
in
xchg
jmp
mov
dec
push
jle
rcl
mov
dec
sub
jne
sub
popf
outsb
rcl
scas
hlt
das
adc
jbe
icebp
adc
out
add
cmp
or
shrb
xchg
jno
push
push
dec
test
jle
iret
push
pop
outsb
mov
cmc
aaa
std
push
js
jne
or
popl
jp
js
dec
jl
inc
jns
andl
movsb
ret
sub
mov
gs
int3
jbe
adc
outsb
clc
jl
lret
fmul
test
movsl
inc
jecxz
sahf
or
je
sub
xor
and
jmp
mov
push
or
cmp
loop
push
je
xchg
push
in
fistl
push
lea
cmp
dec
fwait
and
call
xchg
inc
cmpsl
jb
jle
xchg
pop
jne
adc
add
icebp
fsubl
std
adc
xor
pop
inc
lcall
insl
adc
js
sbb
xlat
push
and
mov
and
pop
loope
xchg
cltd
cld
je
mov
je
jp
xlat
inc
stos
add
sub
jecxz
mov
and
sahf
or
cmp
sbb
xchg
jp
and
dec
xchg
mov
loope
imul
add
sub
mov
in
stos
in
lcall
mov
xchg
es
push
cmpb
aaa
popl
inc
es
push
fmulp
push
enter
insl
test
lods
inc
mov
test
push
icebp
xor
add
sub
push
loopne
lahf
or
xor
jo
addr16
ss
leave
test
mov
pop
enter
xchg
sub
add
cmp
cltd
sbb
or
mov
xchg
jbe
and
jne
lcall
das
sub
out
xor
add
mov
jp
enter
jge
not
mov
je
std
xchg
jp
pushf
or
dec
mov
add
jle
adc
adc
ss
movsb
jl
cmp
add
repnz
ret
insl
out
cmp
sub
and
out
or
push
sti
repnz
pop
fwait
bound
adc
jns
std
cs
push
ret
nop
loope
pop
pop
int
clc
jb
es
cltd
sbb
xchg
xor
cmp
ret
inc
and
scas
out
mov
ret
fs
mov
xchg
push
lret
jno
andl
adcl
loope
jae
cmpl
das
or
mov
and
pusha
adc
xorl
repnz
mov
lock
and
scas
rcr
inc
dec
cmp
das
frstor
jns
push
inc
push
and
pop
xor
pop
dec
jg
or
and
popa
enter
pop
outsl
adc
ljmp
das
andl
addb
mov
loop
cmpsb
mov
test
les
int
int
movsb
inc
test
ret
cmp
or
gs
pop
xor
bound
dec
in
in
or
and
mov
or
push
icebp
cld
nop
data16
enter
pushl
mov
adcl
aas
aaa
mov
jge
icebp
into
sbb
and
jmp
cltd
inc
xchg
xor
xor
push
aam
fs
dec
test
lds
xchg
fwait
jmp
push
lea
xchg
jl
inc
out
movsl
aad
jnp
xchg
gs
xor
add
jl
xorl
pop
cld
cltd
add
lock
xor
repnz
scas
jle
insl
push
xchg
sub
fcomps
mov
or
mov
push
inc
sub
xchg
in
xchg
lahf
pop
call
cmp
aaa
std
lcall
add
aas
bound
je
push
push
jbe
pop
or
test
inc
xchg
mov
jnp
xor
xor
mul
pusha
dec
xchg
aam
scas
add
inc
icebp
out
mov
loope
aaa
aas
mov
inc
lret
outsb
orb
aad
bound
add
and
sub
addl
int3
dec
inc
add
mov
rol
and
imul
mov
adc
xchg
shrl
frstor
dec
scas
jmp
fcoml
mov
mov
shrl
xor
sarb
cmp
push
jmp
or
aaa
push
and
outsb
lcall
roll
or
loop
mov
roll
dec
cltd
loope
or
sbb
test
fcoms
mov
adc
pop
popf
cmpsb
add
test
mov
fwait
inc
mov
adc
cmp
xchg
mov
stos
and
fldcw
ljmp
push
sub
ficoms
jle
jle
mov
lock
cmpsl
outsw
dec
lock
push
jmp
dec
mov
sub
add
mov
pop
loope
clc
jg
sbb
push
mov
jne
mov
pop
stos
adc
sahf
out
jns
pop
fisttpll
pop
cli
sbbb
sbb
imul
jecxz
int3
pop
cli
xor
jns
pop
add
loop
lret
lea
mov
push
pop
dec
inc
xor
dec
cmpb
pop
jl
adc
je
popf
clc
push
stc
xor
push
xchg
sbb
adc
jle
ds
clc
fsubl
pop
repnz
cmpsl
pop
push
fdivs
sbb
mov
push
sub
out
jns
icebp
mov
xchg
testb
inc
inc
dec
rol
xor
dec
das
ds
cmc
jl
loope
imul
mov
shl
repz
out
nop
outsb
cld
test
enter
jg
in
ffreep
adc
leave
call
imul
dec
jns
inc
shlb
stos
jmp
sbb
push
daa
clc
cltd
cwtl
inc
inc
loop
int
and
leave
jmp
jnp
mov
fidivrl
jnp
out
out
test
imul
add
fldenv
sbb
repz
clc
add
lahf
roll
stos
mov
je
nop
addb
lods
lock
rcrl
testb
sub
push
popf
adc
inc
sti
mov
data16
xchg
jle
outsl
leave
fsubs
lret
xchg
fs
inc
xor
jbe
enter
push
push
cmp
test
inc
mov
mov
cmc
rclb
jecxz
scas
subl
std
push
js
testb
lds
add
mov
mov
ljmp
mov
lods
jmp
adc
or
jns
and
mov
clc
and
repz
and
push
pop
aas
scas
mov
push
cwtl
sbb
sti
jcxz
addr16
adc
add
inc
shlb
fcompl
fcmovu
jmp
sahf
pop
or
shlb
fdivs
fidivrl
ljmp
leave
jmp
daa
test
fidivrs
leave
lea
movsl
test
add
sbb
inc
std
pop
std
push
push
outsl
dec
sub
cmp
inc
outsb
xchg
insb
mov
push
dec
rol
and
pusha
adc
mov
test
inc
adc
sbb
xchg
mov
inc
xchg
pop
mov
mov
roll
cmp
ret
hlt
rcrb
aaa
out
mov
xor
adc
or
es
mov
push
xchg
xchg
repnz
in
or
iret
lcall
imul
ret
dec
mov
addl
mov
lret
xor
roll
mov
adc
lcall
arpl
push
and
jl
outsb
cs
sbb
std
xor
jb
testb
adc
xor
insl
xor
mov
sub
adc
mov
into
jg
ret
inc
jno
aad
test
fs
pop
fwait
push
shll
sub
loope
bound
jns
insl
cmp
mov
lret
movsl
xor
mov
xchg
mov
mov
jp
test
jg
das
test
cmp
push
xor
cmp
in
leave
adc
out
pop
int
mov
lret
and
cpuid
cmp
mov
mov
mov
pop
out
cmp
push
leave
shlb
xor
add
test
dec
jbe
dec
pop
rorb
ss
into
rclb
cmp
test
iret
test
aaa
adc
inc
adc
pop
lret
sub
movsb
cmpsl
sub
sbb
pop
arpl
mov
adc
push
aas
fdivrl
mov
pop
pop
icebp
inc
les
mov
push
sbbl
pop
pop
sti
fsubrp
pop
xlat
enter
and
pop
cmp
jmp
aaa
cmc
or
mov
mov
sbb
cmp
lods
sbb
sar
filds
enter
adc
fcomip
or
push
lods
xor
pop
jg
das
dec
dec
cmp
jmp
ja
sbb
call
inc
mov
jb
dec
dec
cs
jne
mov
insl
data16
sahf
in
and
dec
sub
push
ja
mov
xor
jno
enter
xor
ret
cltd
imul
ljmp
pop
int
xchg
fdivp
xchg
or
xchg
call
jmp
jno
mov
jbe
ljmp
dec
xchg
inc
mov
wbinvd
adc
lods
fdivrs
bound
sub
pop
addr16
push
add
cmp
pop
mov
sbb
stos
push
pop
jne
daa
jne
xchg
mov
lcall
xchg
cmp
stc
xlat
cmp
inc
icebp
movsb
and
pop
roll
jno
xchg
pop
imul
sub
loopne
adc
xchg
in
pop
cmp
pop
cmc
mov
or
test
js
js
das
dec
das
mov
loope
and
mov
jg
inc
iret
mov
push
test
repz
pop
jb
jb
das
or
inc
out
jecxz
xor
mov
scas
jo
xchg
jmp
push
push
mov
sub
cmp
jb
fcomps
mov
cmp
sub
jbe
testb
inc
ds
rcll
or
je
ss
repnz
into
dec
cmp
scas
sti
adc
shll
inc
dec
mov
addl
push
add
dec
nop
jge
adc
mov
vpsubusb
pop
int3
lret
loope
es
sbb
xchg
jo
loop
out
cmc
cmpsl
repnz
daa
imull
out
rclb
in
inc
pop
imul
sub
pop
fidivrl
lock
jnp
lock
sbb
je
xchg
aam
lds
cmp
jbe
loopne
mov
lcall
popa
fimuls
mov
fs
jae
repnz
or
pop
adc
daa
and
and
pop
cwtl
insb
cmp
lcall
xchg
pusha
pop
push
inc
jb
jge
cmp
cwtl
sbb
shrb
jb
cli
lret
arpl
cmp
xchg
inc
mov
pop
push
jo
inc
sub
adc
repnz
add
bound
pushl
popa
xchg
sbb
pushf
xchg
inc
inc
aas
bound
dec
lea
rcr
scas
push
mov
push
pop
cmovg
dec
mov
stos
lods
lods
popf
inc
mov
imul
mov
mov
xor
iret
aad
sbb
fwait
pop
decl
shrl
dec
add
sub
fcoms
sahf
in
orb
push
ljmp
mov
pop
lahf
jns
sbb
xlat
movsb
pop
jae
in
out
pop
cwtl
inc
std
mov
xchg
inc
push
stos
jp
sbb
std
mov
outsl
push
inc
add
loope
push
or
rcl
inc
adc
cmp
lds
mov
sub
cltd
out
push
nop
insb
mov
mov
cwtl
cli
jecxz,pt
jne
sub
imul
psubsb
arpl
adc
and
xor
fwait
out
add
out
aas
cli
adc
mov
ret
sbb
in
divb
movsb
add
imul
dec
jecxz
mov
mov
out
mov
jne
loope
xlat
adc
jp
xchg
inc
jb
mov
divb
loope
dec
or
push
ds
ret
aad
inc
dec
pusha
push
dec
jno
repz
sub
pushf
push
loopne
xchg
hlt
or
lret
cmp
jne
adc
xchg
push
les
cmp
xor
dec
pop
xor
sbbl
andb
xor
or
push
dec
or
cld
lea
xchg
nop
scas
xchg
jbe
ffree
pop
push
inc
push
push
mov
loopne
les
mov
hlt
cs
js
pop
adc
out
xor
sbb
mov
xorb
aad
addr16
pop
jne
aam
cwtl
jle
cmpb
sub
jo
fstps
dec
xchg
int3
mov
in
xchg
idivb
shl
mov
push
in
push
sarl
mov
xchg
cmp
aam
inc
mov
cmp
cmp
imul
xchg
lods
pop
les
sbb
mov
mov
lods
das
sbbl
mov
lcall
cmpsl
inc
add
mov
repz
pop
rorb
movsl
rcr
lods
mov
mov
into
jo
lahf
cld
add
adcl
addr16
dec
lods
sub
testl
pop
stc
sbb
push
xor
pop
addr16
pop
pop
push
retw
mov
ret
xchg
mov
push
btsl
fmuls
fwait
js
adc
loopne
mov
daa
mov
xchg
stos
mov
jnp
lret
and
dec
sbb
lock
cmp
add
xchg
jbe
pop
push
into
out
iret
fisttpll
and
pop
dec
xor
mov
add
cmp
lods
clc
pop
clc
push
fistpll
or
jns
and
lahf
pop
pusha
sbb
jbe
in
jbe
sub
shrl
stos
outsb
fcomps
mov
bound
mov
call
cmp
xor
inc
cltd
inc
insb
or
xor
jne
popf
mov
fsubl
out
jp
inc
les
fldt
loopne
ret
jns
adc
je
loop
dec
sysenter
add
mov
push
or
mov
sub
es
add
cmp
xchg
sub
popa
cwtl
lods
jbe
lock
mov
xchg
jl
int3
jb
scas
ret
mov
xchg
mov
sti
dec
fdivr
setno
shlb
in
dec
sbbl
incb
mov
js
xchg
xchg
aam
add
pusha
pusha
cmc
inc
mov
insb
adc
mov
aam
or
lds
mov
push
push
imulb
aas
loope
fidivrl
setne
dec
lea
or
xchg
adc
sbb
mov
pop
or
jmp
dec
lods
repz
mov
pushf
frstor
nop
sbb
insl
xchg
cmpsl
mov
or
xor
and
inc
mov
out
mov
lret
inc
xchg
mov
fcoml
xor
cmc
leave
clc
inc
loop
ljmp
ljmp
imul
maskmovq
notl
cmp
dec
pop
or
lods
aas
sub
jg
push
les
or
icebp
dec
pusha
xchg
and
pop
adcl
popa
pop
xor
push
mov
loopne
push
call
mov
jo
cmp
ds
rcrl
sbbl
pop
jnp
out
cld
in
pop
push
dec
adcl
dec
inc
inc
mov
inc
insb
repnz
mov
les
add
xor
scas
lds
add
add
in
cmp
add
push
sbbl
push
lods
inc
adc
pop
inc
xor
jb
dec
ds
ret
in
sbb
ja
lcall
xor
pusha
mov
lcall
jno
notl
jp
jae
sub
or
inc
roll
sti
out
test
sub
or
pop
xchg
andl
mov
jo
inc
into
loop
fadd
cs
das
pushf
mov
gs
addr16
inc
pusha
sub
and
and
adc
adc
call
cmp
inc
dec
fs
sub
or
or
ror
push
jne
je
pusha
add
xor
pushf
jno
push
mov
shll
sahf
sub
ret
mov
sbb
arpl
cmp
push
popf
sbb
movsl
push
inc
ljmp
test
sar
push
jmp
fwait
sbb
and
dec
int
cltd
or
adc
cmp
cld
dec
mov
clc
imul
sub
sahf
aas
add
stc
loope
inc
bound
aam
xchg
push
stos
sub
lret
je
mov
add
sub
xchg
or
or
adc
ret
shrl
das
rcrb
sti
test
fldenv
int
jge
stc
or
fsubs
jg
adc
mov
into
test
test
cltd
pop
rol
scas
pop
fs
adcb
cmpl
push
xchg
out
dec
mov
inc
push
sbbl
sbb
dec
pop
xchg
imull
pop
aaa
push
lea
cmp
rcll
stos
cmpsl
cltd
sub
subl
cmp
gs
mov
data16
jo
mov
pop
mov
sub
insb
cmpb
jmp
addr16
enter
add
sbb
vaddpd
test
aad
sub
lods
adc
xor
stc
test
and
cmp
push
and
shr
mov
push
lret
les
sbb
clc
adc
dec
xor
push
adc
dec
inc
js
sub
pop
out
inc
or
aam
icebp
nop
push
ljmp
sub
pusha
in
lret
jle
push
xchg
rcll
in
stos
loope
nop
push
mov
mov
cmpsb
ljmp
xor
pop
pushf
adc
testl
imul
and
jne
dec
mov
jno
ds
ror
sub
and
inc
inc
mov
cmpsb
cli
push
cmp
pop
or
aad
cmp
xor
arpl
push
push
test
pushf
bound
adc
rolb
cmpsl
sub
int3
pop
fxch
cwtl
in
add
sbb
insl
push
sub
sub
sbb
mov
popf
inc
mov
jmp
arpl
push
fwait
cmp
mov
jo
das
js
mov
imul
in
in
xchg
bound
inc
lea
orb
mov
insb
das
js
out
xlat
out
lret
xchg
xchg
data16
data16
adc
pop
xchg
fldt
and
adc
push
sbbb
or
or
adc
or
adc
ficompl
pusha
xlat
push
jbe
cmp
jne
jno
int
dec
adc
inc
cmp
in
mov
ret
adc
sub
icebp
lret
add
mov
rcr
stos
mov
test
cmp
sub
inc
mov
inc
sti
inc
das
mov
dec
add
loopne
mov
scas
sub
iret
fists
scas
gs
nop
and
inc
lcall
add
pop
imul
sbb
inc
inc
ss
je
inc
popa
loop
test
addb
dec
lcall
repnz
test
mov
lea
movsb
cmp
lock
xchg
jp
sbb
scas
mov
sbb
jl
data16
xchg
subl
adc
scas
popf
push
xchg
sarb
loop
xchg
push
gs
popf
out
dec
and
mov
push
jp
in
addr16
mov
or
xor
ds
gs
popf
sbb
outsl
inc
test
test
ss
dec
hlt
pop
cli
adc
repz
inc
pop
add
ljmp
lret
imul
push
jne
inc
mov
fstpl
pop
mov
cwtl
jg
stos
and
xor
dec
in
inc
out
cs
out
insl
push
movsl
cmp
cld
lret
popf
mov
push
push
push
xor
xor
pushf
cmp
push
shrl
pop
xlat
add
jno
mov
loope
xor
pop
lahf
ljmp
mov
call
mov
in
dec
or
fbstp
fistps
inc
and
testl
push
lea
cwtl
cmp
mov
ljmp
ret
out
add
adc
stos
pop
fists
hlt
imul
bound
push
repz
xor
pop
xor
aad
movsl
aas
xor
cmp
test
shll
test
and
dec
inc
mov
int3
in
hlt
and
call
and
adc
fst
cmp
push
lahf
dec
and
negb
pop
sti
ret
call
fists
dec
pop
flds
or
or
es
pop
lock
mov
push
sar
push
xchg
xchg
fidivl
add
lods
out
xchg
adc
adc
movb
std
andl
xor
addps
jae
fbld
sub
push
stos
test
or
xlat
jecxz
jle
jnp
jecxz
add
xchg
cld
or
enter
and
xor
xchg
fsubrl
pop
jb
mov
sbb
jg
ljmp
pop
mov
xchg
pop
xchg
sub
add
test
scas
ret
aam
cwtl
inc
dec
jbe
pop
push
test
lock
iret
inc
sub
lret
sarb
sub
jp
fistps
loop
pop
popf
repnz
mov
add
sarl
sub
mov
movsl
xor
inc
and
fildl
and
fnstsw
cmp
outsl
fsubs
ja
push
ret
mov
add
dec
mov
out
mov
test
mov
add
fistpl
mov
lock
mov
dec
or
stc
xor
out
or
cmp
nop
fbstp
adc
out
fldt
movl
sub
xchg
lcall
adc
ret
sbb
mov
sbb
mov
xor
shlb
test
push
and
add
sti
clc
subb
inc
sub
inc
xchg
in
ss
and
scas
shll
lods
mov
fldl
sub
in
fdivr
xor
out
lea
jmp
lods
in
sub
jl
cmpsl
arpl
sbb
and
inc
xor
mov
rcrl
and
push
adc
pop
cs
pop
insb
in
and
scas
ljmp
cmp
movsb
mov
add
push
pop
je
push
mov
aam
push
daa
and
adc
fcomps
cmpsb
mov
roll
lret
mov
cmp
xchg
in
and
mov
add
sbbl
pop
ljmp
icebp
mov
push
cld
pop
lods
push
rclb
dec
in
xor
mov
fiaddl
xchg
pop
mov
aam
mov
adc
inc
cmc
aas
lret
adc
out
sti
outsl
push
shlb
or
std
push
xchg
or
cmp
dec
test
push
leave
fldl
clc
jnp
inc
jbe
jmp
sub
jbe
jge
stc
pop
dec
or
jo
les
push
scas
jecxz
mov
inc
int
daa
mov
push
jl
adc
cmp
add
xchg
jmp
inc
dec
xor
add
scas
fldenv
mov
pushf
pop
adc
mov
addr16
xor
fidivrl
xchg
pop
je
mov
jne
push
lret
add
lcall
fs
inc
test
scas
adc
cld
repnz
and
jns
cmp
outsb
jns
or
sahf
or
aad
inc
sar
test
mov
sub
hlt
in
push
adc
push
mov
subb
ss
jne
fildl
xchg
adc
pop
xchg
fdivs
fcoms
cmpsl
sub
inc
sbb
fcompl
shl
loop
lahf
lock
inc
stc
mov
fadd
shr
out
je
xor
jp
sarb
sarl
dec
push
xchg
popa
movsl
inc
push
inc
test
push
or
idivb
xchg
mov
and
mov
jbe
les
fsubr
mov
push
push
lea
or
pop
shrb
xchg
jb
add
cmp
jge
dec
xchg
daa
adc
xor
sahf
div
push
lret
sub
cs
mov
fdivl
cmp
lods
pop
int3
xchg
inc
sbb
repnz
adc
scas
fs
movsl
mov
gs
adc
std
faddl
aas
xor
decb
imul
cmp
cmp
dec
test
lahf
mov
sbb
pop
inc
cmpb
loopne
cwtl
mov
pop
mov
repz
and
gs
add
add
add
in
popa
mov
repnz
pop
cs
imul
aas
adc
out
jle
inc
pop
dec
mov
fisubrl
sub
sahf
pusha
inc
shll
mov
xchg
fnstsw
or
cs
jg
mov
popl
cmp
test
sub
xor
dec
or
cld
jnp
sbb
ja
fs
dec
insb
daa
xchg
lahf
mov
sub
pop
ss
add
fisttps
scas
jne
inc
out
xor
gs
pop
and
add
xchg
pusha
leave
clc
mov
movsl
outsl
cltd
jp
lods
sub
je
add
andl
and
shr
loopne
lods
shlb
inc
sbb
cltd
cmc
enter
cmc
ds
fdecstp
ficoml
out
rcrb
icebp
pop
jae
mov
scas
call
sbb
movsl
stos
arpl
or
inc
or
push
daa
out
cmp
dec
loope
mov
mov
loop
and
dec
jo
jae
push
inc
insl
mov
and
rcrb
cmp
sub
jne
push
push
sub
daa
add
ss
ds
test
mov
xchg
sbb
sub
clc
push
mov
out
and
or
movsl
shrl
stos
dec
cmp
mov
int
add
cli
or
dec
mov
mov
pop
ret
cltd
xchg
cmpsb
or
aam
in
pop
aas
loope
pop
cs
lock
mov
push
dec
cmp
pop
or
ret
adc
mov
icebp
lods
rclb
lahf
mov
sbb
loope
jae
jmp
stos
jno
out
xchg
aaa
aam
ds
mov
mov
imul
pop
mov
sti
ja
fisttpll
test
in
xlat
divps
sub
repz
mov
xchg
pushf
repz
lods
dec
mov
negb
nop
pop
or
xchg
popf
jp
mov
stos
insl
lods
pop
push
insl
out
mov
mov
mov
lods
inc
or
lods
inc
or
dec
mov
iret
pop
lret
dec
xor
xor
test
mov
lock
loop
xchg
outsb
add
inc
subb
arpl
mov
adc
sub
pop
jne
outsb
test
xchg
sbb
push
push
int3
adc
insb
fisubs
sbb
sub
in
inc
push
fwait
mov
mov
push
mov
mov
stos
and
cs
adc
add
pop
ret
lea
int
add
lret
negb
aas
js
adc
or
outsb
xlat
sti
test
mov
in
jge
inc
pop
inc
out
and
add
ret
jle
pop
into
mov
sbb
adc
mov
jnp,pn
xchg
sbb
repnz
adc
in
hlt
pop
enter
fimull
pusha
fstps
sti
add
inc
ret
test
xchg
divl
and
xor
dec
andl
push
inc
dec
rcrb
add
mov
in
push
gs
rcrb
sbb
push
dec
dec
adc
adc
inc
cmp
cmp
pop
insb
int
jns
xchg
dec
adc
inc
out
xchg
xchg
bound
enter
sub
push
bound
xor
int
sbb
jns
out
and
xchg
subb
add
xchg
rcr
dec
xorl
in
movl
outsl
repz
mov
adc
in
dec
and
cwtl
dec
cs
push
or
mov
and
xchg
mov
pop
test
cltd
sub
push
pop
add
test
shrl
adc
xor
popa
xorl
mov
out
andb
push
dec
shrb
ljmp
hlt
and
push
mov
arpl
stc
fs
cli
cmp
into
lds
leave
shll
scas
sub
lock
subb
push
adc
xchg
mov
xchg
cmc
inc
loop
pop
imul
dec
push
rdpmc
mov
imul
fisttpll
cmp
in
dec
push
sub
add
mov
xor
scas
or
add
push
push
push
sbb
pop
imul
sub
scas
xor
insb
jo
cli
dec
iret
rorb
push
xor
sbb
cmp
adc
sti
push
mov
movsl
mov
cmp
in
jae
arpl
sarl
test
shrl
mov
pop
pop
or
leave
jns
sbb
mov
stos
fsts
fcoms
adc
adc
add
pop
stc
ret
test
repnz
mov
and
mov
or
je
cmp
inc
mov
adc
mov
stos
shl
sub
cmc
or
or
xor
nop
xor
jnp
xor
mov
sub
xor
cld
inc
flds
sbb
cmp
or
mov
fnstenv
fcoms
aam
sbb
popa
mov
pop
ljmp
push
jle
and
adc
enter
addr16
sarl
lods
xchg
push
jno
ds
cmp
add
sar
andl
adc
enter
adc
and
test
cmp
int
out
das
cmp
repz
add
pusha
inc
cmp
add
outsl
fmull
add
and
subl
nop
mov
outsl
loop
pop
xchg
and
push
js
mov
xchg
push
bound
stos
in
lods
lods
mov
push
mov
push
scas
dec
jl
dec
lock
popa
mov
mov
sarb
je
andb
adc
xor
xchg
mov
cmc
sub
mov
ret
aas
pop
sub
bound
inc
lods
repnz
dec
adc
out
mov
sub
notb
cmp
and
or
sbb
push
aad
popf
addr16
push
das
out
cltd
ds
pop
sbb
xor
sub
pusha
sbb
sub
fsubl
mov
imul
insl
sub
flds
unpckhps
xchg
imul
jg
jmp
push
add
xchg
fidivl
int3
and
hlt
in
xlat
fdivl
pop
fsub
add
cmp
inc
out
popf
push
inc
stos
mov
mov
mov
cmpsb
push
jg
inc
and
dec
aas
cmpb
sub
fcmovnbe
mov
ja
fld
jb
or
mov
xlat
in
or
push
add
pop
ss
cmpsl
xchg
push
sarl
lret
cltd
mov
xchg
shrl
xor
mov
hlt
push
imul
cmc
jle
sub
outsl
push
jne
add
xor
jle
test
adc
inc
mov
int
push
sub
push
ljmp
mov
ss
gs
orl
shl
pusha
cld
inc
pop
iret
cmp
sbb
je
adc
add
add
test
jb
adc
out
pop
jne
xchg
cmp
fdivl
sti
adc
call
sbb
shrb
outsl
sub
outsl
mov
and
pop
imul
pop
cld
aam
pusha
std
rcrl
aas
gs
mov
les
push
and
jno
push
cmp
or
mov
icebp
push
add
sbb
dec
rcll
fwait
test
out
xchg
push
mov
nop
sub
mov
adc
xor
xor
sti
xchg
lcall
and
cld
pop
stc
mov
popf
testl
xor
cmp
mov
jae
insb
pop
xor
add
inc
pop
aaa
adc
pop
jb
test
lahf
in
in
or
mov
mov
adc
pop
in
or
bound
lcall
es
lods
mov
xchg
xchg
hlt
std
adc
adcl
cmp
xchg
mov
inc
add
push
dec
pop
mov
push
jg
mov
xchg
jecxz
int
aam
lods
into
pop
out
xor
iret
pop
mov
pop
push
out
fnsave
ror
popf
sbb
les
insl
xor
ja
ja
js
or
daa
pop
mov
fsubrs
sub
popf
cld
pop
dec
jbe
call
repnz
mov
fnstcw
mov
cmp
shll
lea
or
outsb
adc
dec
xor
pop
cmp
pop
out
push
roll
jns
lcall
test
and
adc
loop
adc
lahf
push
test
add
das
cmpsb
stc
or
negl
pop
aad
adc
out
sbb
and
jbe
push
lcall
movsb
sub
jns
xchg
mov
and
sub
add
push
jge,pt
cld
fmuls
sub
rclb
mov
dec
mov
fildl
jecxz
in
and
cmp
dec
xlat
fcmovnbe
mov
stos
ds
cmpsb
adc
out
daa
inc
dec
fmuls
leave
pop
push
loope
jmp
out
imul
mov
rcrb
dec
pop
pop
dec
sub
test
fwait
mov
ljmp
sub
or
push
cpuid
push
shrb
cmp
sub
cwtl
pop
mov
imul
sub
es
rcll
cmpb
inc
mov
pushf
shr
sbb
pusha
lcall
flds
mov
jg
jl
mov
imul
out
pop
dec
lds
lcall
ret
gs
pop
test
pop
inc
cmpsl
push
jecxz
xor
test
addr16
jg
sbb
in
icebp
fs
dec
cmpsl
mov
pop
out
shlb
fs
push
and
cmp
sub
popl
lret
lods
sbb
cmc
cmp
xchg
popf
inc
push
xchg
movsl
scas
xor
test
das
lcall
aam
xchg
adc
jmp
adc
fxch
addr16
cmp
mov
idiv
rcrb
jne
frstor
add
mov
xchg
fidivl
mov
and
add
mov
stos
push
sbb
ror
loope
cmp
movsb
cwtl
jns
xor
dec
mov
lds
leave
mov
sahf
je
dec
adc
pop
sbb
fldl
lds
or
push
nop
mov
inc
je
test
dec
movsb
mov
mov
repz
fldpi
mulb
push
ja
mov
jno
jmp
xchg
imul
pop
mov
xchg
mov
pop
fbld
jno
daa
sub
sahf
mov
bound
dec
test
inc
mov
push
inc
nop
push
rcr
adcl
jnp
mov
fstp
mov
pop
insl
xor
call
push
push
mov
orb
xor
cmp
xor
scas
fdivrl
dec
and
mov
js
clc
xchg
icebp
push
repnz
dec
push
adc
or
std
insl
into
pop
cltd
adc
iret
test
pop
mov
cmpsl
out
clc
loope
fs
clc
cld
ja
xor
push
fistpl
lret
dec
testl
nop
repnz
pushf
xchg
mov
hlt
mov
mov
adc
pop
mov
inc
adc
xor
out
ss
leave
inc
enter
pop
lea
xchg
test
and
push
aam
xor
and
data16
add
xchg
mov
stos
gs
push
sahf
dec
lds
mov
inc
mov
cmp
mov
sub
sbb
fiadds
stc
xor
popf
bound
shlb
jp
loop
adc
mov
mov
mov
js
sbb
mov
aad
rcll
or
adc
fs
pushf
inc
cmp
stos
sub
pushf
call
cmp
ss
and
push
shll
xchg
cmp
adc
or
push
pop
divl
popa
aam
sub
push
scas
jo
scas
rorb
out
adc
aam
or
inc
test
outsl
add
in
or
and
adc
or
fucomi
imul
push
popf
sub
push
daa
xchg
mov
add
mov
lcall
sti
mov
popa
adc
mov
jl
dec
sbb
in
lret
in
add
cmp
mov
or
mov
xchg
or
jb
adc
cwtl
in
pusha
daa
std
cmc
dec
xchg
pushf
jecxz
aas
pop
aas
neg
ljmp
mov
lea
mov
push
cmpsb
repz
pop
rcr
mov
in
fldenv
test
add
lcall
pop
lea
sti
mov
lret
fwait
inc
sbb
inc
jne
aad
rorl
push
add
testb
dec
jl
sbb
shlb
arpl
sbb
mov
lea
xor
out
inc
fldenv
jecxz
xor
mov
mov
adc
or
dec
out
js
je
scas
or
cs
in
pushf
fdivl
push
push
rol
int3
jb
fnstcw
int
inc
pop
test
sbb
test
xchg
aaa
data16
push
pop
mov
mov
test
stos
daa
movsb
pop
xor
and
pusha
movsl
add
jle
shll
xor
xchg
fwait
push
cmp
lret
mov
popa
lahf
inc
test
sub
cs
lods
pop
inc
stc
mov
mov
shr
and
in
xchg
inc
arpl
scas
orb
call
rcll
ss
fldenv
push
mov
icebp
sub
pushf
lock
add
add
mov
dec
push
mov
and
sub
xchg
call
jl
inc
mov
add
in
and
cmp
lds
aam
add
or
sub
and
stos
push
jp
mov
cmp
fs
dec
leave
jmp
xrelease
or
mov
outsb
shrl
sub
push
push
fwait
rol
cltd
and
inc
sub
nop
pop
push
jns
mov
pop
test
ret
stc
jge
push
xor
mov
add
insb
arpl
vmread
stos
push
dec
cmp
dec
hlt
dec
mov
mov
jns
mov
lods
push
movsl
push
das
push
push
mov
sub
add
push
mov
fistpll
mov
mov
jne
lds
push
scas
xor
jne
push
push
mov
ret
cmp
sbb
mov
jb
in
pop
dec
push
mov
sarb
pop
int
sbb
sbb
jne
icebp
lahf
adc
test
sub
mov
jo
or
add
ffree
inc
or
jno,pn
call
arpl
jmp
and
daa
sahf
and
ret
aam
inc
mov
xchg
jns
pusha
and
lea
mov
push
push
fdivrl
sub
rorl
decb
xor
fidivrs
sub
fucomi
popf
outsb
inc
adc
mov
pusha
cli
scas
clc
data16
iret
xor
mov
cmc
sarb
les
mov
cs
clc
sub
movsb
mov
xchg
in
int
jbe
sub
xchg
lods
and
sub
pop
sarb
push
mov
xchg
adc
iret
mov
stc
int3
pop
and
daa
xchg
pop
jbe
aad
aad
ss
cmpsl
lods
inc
hlt
jge
call
das
inc
dec
dec
xor
out
xchg
popa
pop
in
scas
xor
out
loope
jno
cli
lret
jmp
rcrl
imul
adc
xchg
push
movsb
adc
enter
enter
fidivrl
dec
fmul
inc
dec
mov
xchg
fnsave
lret
dec
mov
jne
jl
fidivrs
shll
imul
sbb
xchg
jne
daa
lods
int
pop
movsl
addl
jmp
jl
jp
jl
nop
mov
adc
pop
cwtl
out
cli
sub
push
imul
cmc
xor
mov
mov
sti
xor
shlb
bound
cli
mov
jle
inc
test
inc
jge
xchg
push
sbb
mov
or
outsb
lods
movsb
jecxz
jns
mov
es
xor
in
pusha
pop
inc
adc
adc
stos
test
pop
scas
int3
and
loopne
mov
ljmp
daa
pop
int3
sbb
fldenv
daa
ffree
rorl
fstpl
or
daa
sti
insl
stc
xchg
push
mov
push
test
loope
inc
shr
les
or
or
xor
dec
sbb
pop
sbb
daa
xchg
sbb
loope
and
cld
and
sub
in
add
pop
ret
in
jecxz
fisttpl
cmc
xchg
nop
lret
inc
pop
xchg
dec
push
clc
xor
insl
rep
rcrl
cld
xchg
mov
hlt
mov
push
out
cmp
push
xor
nop
imul
and
and
push
xor
xchg
jp
pop
sbb
test
push
pop
cltd
or
jno
push
push
adc
leave
cli
pop
xchg
mov
xor
enter
dec
push
addr16
insb
sbb
cmp
ret
mov
shlb
xor
jle
xor
push
mov
lcall
push
dec
push
scas
dec
shlb
mov
pusha
and
jne
pop
aad
xlat
shll
out
add
xchg
iret
jb
mov
push
addr16
jg
mov
pop
gs
xchg
inc
stos
lock
cli
gs
out
jecxz
andl
sarb
ret
popf
cmp
mov
and
push
and
push
jb
push
std
push
inc
imul
out
je
bound
jmp
jb
out
fs
cli
mov
outsb
ret
xor
call
out
and
ret
add
fdivs
call
dec
pop
sub
sbb
in
pop
cwtl
sub
scas
std
iret
aad
sub
jbe
in
or
leave
cmp
into
hlt
xchg
ss
mov
cmpsl
popf
leave
lods
inc
add
mov
fcmovnbe
push
divb
std
in
pop
pop
pop
adc
jecxz
pop
das
pop
fcomi
adc
sub
enter
push
ljmp
fcoml
push
cmp
in
mov
lcall
sbb
mov
inc
mov
ficompl
inc
aad
xchg
or
jl
rolb
jns
push
je
add
int
rol
dec
ds
cmp
cmpsl
sub
push
push
xor
or
mov
push
or
jecxz
daa
adc
jne
jbe
adc
cmc
enter
mov
shrb
out
neg
cmp
in
inc
pop
pop
pushf
inc
cmp
sub
leave
pop
sub
popf
sbb
fnstsw
mov
inc
push
popa
mov
shrl
pop
push
aam
out
push
js
sbb
scas
divb
jne
outsl
aaa
xchg
out
pop
cmp
jbe
push
xlat
lods
push
cmpsl
push
bsf
jmp
stc
inc
sbb
push
mov
inc
lods
mov
sbb
dec
ret
mov
adc
clc
jle
inc
push
jmp
fwait
pop
push
lahf
mov
addr16
rcrl
cltd
lcall
xor
sbb
insb
lret
loope
inc
mov
data16
pusha
pop
sahf
aad
lea
or
sbb
and
push
je
sbb
push
pop
mov
xchg
dec
mov
stos
push
insl
lea
xor
mov
das
mov
lret
push
test
cs
lret
lods
in
popa
cwtl
jae
cmp
push
mov
mov
imul
and
stos
push
imul
into
or
jmp
mov
cmpsb
and
dec
js
js
jo
out
repz
cltd
imul
psrlq
in
jns
cli
pop
inc
push
xchg
add
mov
mov
xor
xchg
adc
push
xchg
and
sahf
insl
andb
push
add
xor
or
sub
inc
mov
fwait
out
cmp
xchg
mov
pop
popa
dec
test
cmp
imul
aam
mov
xor
icebp
xorb
push
mov
push
sti
add
jge
mov
mov
movsl
pop
jno
cmp
out
mov
fisubrs
ds
xor
je
pushf
loope
loope
push
push
aaa
jnp
scas
dec
mov
mov
pop
jp
lods
mov
pmulhw
add
movsl
les
xor
stc
mov
mov
ror
jne
pop
ret
mov
add
jle
fucomip
mov
test
or
js
in
and
xor
mov
aam
lock
lds
mov
lcall
dec
mov
pop
mov
imul
adc
dec
jns
in
sbb
mov
dec
pushf
js
xor
dec
mov
pop
enter
pop
mov
out
jns
inc
mov
movsl
in
mov
pop
or
jmp
mov
test
repz
cmp
je
push
mov
icebp
test
jp
out
clc
mov
dec
dec
xlat
dec
fmull
jo
and
sub
pop
lahf
out
dec
pop
imul
push
inc
in
push
es
js
mov
test
pop
push
loop
xchg
int
ss
in
jmp
rcll
int3
xchg
pushf
push
shlb
push
xchg
cmp
cmc
push
mov
subl
cs
ret
or
stos
jns
orb
cli
sbb
enter
xchg
outsb
shll
jmp
or
and
lahf
dec
sar
bound
ret
push
cmp
mov
xorb
dec
int
outsl
leave
dec
push
sub
std
add
mov
loope
bound
adc
cmpsl
jo
pop
les
dec
jae
fucomip
into
imul
aas
popf
jg
aaa
xor
mov
add
pop
and
cmpl
jno
inc
mov
xor
mov
fldl
cmpb
cmp
mov
xchg
xor
stos
xchg
shrb
pop
fsubl
sbb
shlb
outsl
lds
push
and
adcl
in
and
jb
aad
movsl
pop
lea
xchg
arpl
mov
nop
mov
sub
or
in
xchg
lret
sub
mov
stos
push
popf
addb
pop
pop
mov
xor
mov
inc
fldcw
push
inc
stos
mov
cld
cmp
insb
nop
loopne
gs
ja
aas
add
xchg
xlat
inc
push
cmpl
fsub
sub
mov
and
repnz
xchg
insb
jle
rol
sub
cld
into
xor
loope
sbbl
pop
xchg
sub
push
outsb
inc
fstl
mov
test
adc
addl
jb
mov
mov
cwtl
push
cltd
dec
push
jbe
jle
rcl
lea
cli
rcrb
xchg
or
dec
or
loope
enter
test
add
mov
xorb
int
icebp
test
fstpl
mov
into
push
loop
pop
adcb
je
mov
or
push
cmpsb
loop
ds
jmp
or
sbb
mov
test
and
push
dec
inc
popw
xchg
mov
fistpll
cmpb
sub
or
and
aas
add
test
daa
mov
enter
les
xchg
rorb
xlat
int3
fsubl
pop
les
mov
jbe
jno
mov
fwait
mov
xchg
sarb
xchg
adc
popf
cmc
push
mov
pop
or
dec
sub
pop
mov
push
xor
push
push
sub
xor
arpl
lods
pop
add
andl
pop
outsl
mov
push
nop
cmp
cmp
add
mov
mov
jmp
popa
hlt
ja
mov
lret
fs
mov
test
xchg
lods
sub
xor
jae
mov
fisubs
sbb
xchg
cmpb
idivl
pop
sub
fs
cmp
out
mov
fstps
lds
sti
dec
sbb
push
pop
ret
incl
or
xchg
mov
push
pop
pop
cmp
jbe
out
mov
and
adc
push
loope
lahf
clc
and
iret
icebp
mov
out
lods
push
cmp
mov
dec
or
cwtl
push
notb
adc
stos
int
stos
sbb
ds
ret
lcall
xor
daa
xor
push
and
dec
ss
daa
enter
adc
jo
mov
lds
and
ret
mov
cmpsb
mov
xor
lea
aas
or
test
test
loopne
dec
sbb
jb
adc
ja
repz
push
fs
ret
ror
orb
into
test
mov
into
mov
out
stos
cmpl
push
lret
ljmp
idivl
mov
testb
dec
inc
mov
add
push
fnstsw
mov
pusha
in
push
movsl
add
adc
jbe
pop
mov
sbb
cwtl
out
dec
in
xor
fistl
in
jmp
jmp
mov
add
mov
xor
shlb
adc
or
push
or
mov
pop
mov
notb
dec
push
pop
lcall
mov
js
repnz
rorl
fildl
mov
inc
imul
jns
out
cmpsl
gs
sbb
cmc
dec
mov
addr16
fwait
lods
cld
ds
mov
sbb
fwait
cwtl
mov
and
push
jno
add
adc
ljmp
shll
es
nop
sbb
call
xchg
les
shlb
push
add
sub
rorb
out
cmpsl
mov
test
stc
push
jecxz
outsl
adc
stos
mov
cmp
lcall
jnp
repnz
inc
daa
or
insl
movsl
push
mov
inc
mov
xchg
pop
popf
add
lods
push
jg
jp
and
es
or
addl
repnz
dec
lds
test
sub
adc
mov
enter
jb
xchg
fmull
or
xchg
jno
jbe
cwtl
lahf
fsubrs
cmc
xchg
leave
mov
mov
jp
cmpsl
cs
cmp
idivb
test
mov
pushf
adc
movd
cs
fdiv
gs
repnz
xchg
sbbb
clc
mov
push
test
pop
out
repz
push
std
aam
add
push
inc
clc
mov
add
xchg
or
mov
rcll
lret
push
dec
add
popf
pop
mov
xchg
sbb
or
sti
clc
daa
mov
pop
add
repz
cmp
repz
mov
jns
push
jae
dec
adc
int3
lahf
and
cli
add
mov
mov
xor
bound
fstpt
xor
in
adc
pushf
cmp
push
adc
dec
sbb
mov
or
icebp
gs
imul
adc
fsubl
mov
jae
addr16
sub
xor
pop
adc
repnz
and
pop
push
push
test
xchg
insl
cmp
divl
inc
sahf
pop
call
xchg
and
out
mov
scas
lret
push
in
push
addr16
pop
adc
push
xchg
push
addr16
popf
jg
add
push
xor
mov
xlat
lock
jb
gs
daa
dec
push
add
call
mov
push
scas
ds
fidivl
lds
pop
pop
cld
mov
repz
xor
or
ds
cmc
out
pop
clc
jo
pop
mov
dec
call
cmpsl
xchg
popa
and
jae
jl
dec
gs
dec
push
sub
out
ss
out
add
adc
push
cli
cmc
lahf
mov
xor
mov
rol
mov
pop
popf
jmp
ja
sub
sbb
scas
aam
xchg
fstp
add
arpl
data16
fnstsw
xchg
test
xchg
fs
push
mov
cmp
or
in
enter
jp
cmp
cltd
pusha
enter
fdivp
in
xchg
std
xchg
int
adc
ja
jecxz
shl
in
push
inc
ja
mov
and
lea
add
jno
jno
js
imul
stc
cltd
mov
jns
pop
rol
xor
incl
push
or
dec
mov
repz
leave
jno
test
push
fbstp
jecxz
push
arpl
jne
mov
sbb
mov
pop
mov
scas
sub
leave
loopne
gs
or
adc
and
xchg
ljmp
ret
in
adc
movb
xchg
lcall
shl
inc
test
nop
xor
push
xchg
inc
and
icebp
ret
addr16
sub
stc
test
pop
inc
inc
ljmp
adc
mov
bound
add
add
cmpsl
xor
movsb
leave
das
mov
dec
cmp
adc
outsb
dec
cmpb
fsub
sub
ret
mov
or
jmp
loop
rcl
xor
daa
sahf
jne
iret
sbb
push
ret
cli
test
mov
mov
pop
aad
mov
pop
jns
sub
inc
sub
test
dec
arpl
mov
nop
cltd
inc
adc
add
or
fxch
fdivr
push
push
adc
inc
jle
xchg
or
mov
and
pop
call
test
xchg
and
movzbl
add
pop
and
ret
pop
lahf
test
xchg
outsb
add
pop
dec
dec
jmp
sbb
mov
out
xor
push
xchg
aas
and
mov
cmpsb
pop
push
jne
test
jle
xor
loopne
mov
mulb
and
cltd
stos
inc
fsubl
in
add
mov
and
push
lods
pop
in
icebp
sub
test
ds
or
daa
pop
outsb
xchg
add
mov
lds
pop
scas
movsb
mov
int
ficoms
imul
rcr
dec
push
and
lcall
lcall
dec
in
add
push
sub
subl
fisubrs
xor
mov
cmp
leave
stos
xchg
mov
sbb
push
pop
aad
xor
adc
cmp
xchg
sbb
shrl
in
int3
mov
sahf
xorl
lcall
add
cmp
mov
mov
xchg
pop
rep
dec
sbb
adc
aam
fbstp
pop
xor
insb
cwtl
adc
daa
jmp
stos
lahf
mov
fcmovu
inc
jbe
xchg
movsl
out
test
push
xor
shrl
pushf
push
adc
movsl
mov
ret
pop
adc
mov
in
ja
movsb
pop
nop
aam
fidivrl
test
aam
dec
ss
add
gs
dec
sahf
clc
push
jo
xor
andl
xchg
or
call
test
out
or
movsb
imul
call
cs
stos
or
cli
mov
js
shlb
xchg
dec
or
test
movsl
sub
adc
lods
cmp
sbb
mov
adc
lods
sub
lret
jbe
adc
cs
test
repz
mov
push
pop
dec
sub
jno
push
arpl
dec
jb
pop
js
lods
jae
pusha
bound
andl
int
mov
loop
add
lds
push
mov
cmp
call
lahf
lret
xchg
cmc
in
aad
cmp
insb
and
jp
xor
pop
pop
pop
ljmp
push
mov
xchg
cwtl
jecxz
sub
test
stc
xchg
cmp
arpl
mov
and
pop
xchg
divb
emms
cmp
jbe
mov
cmpsb
std
cmp
inc
cmp
mul
or
mov
inc
mov
sti
pop
dec
cld
jb
repz
and
sarl
or
pop
insb
aam
and
lock
hlt
xor
rorb
sub
jns
cmp
dec
fs
pop
out
sbb
loopne
mov
pop
or
mov
pop
add
movsb
mov
in
out
testl
push
xchg
clc
out
or
mov
or
mov
aad
movl
pop
mov
push
push
pop
aaa
or
xor
cmp
xor
mov
jp
fistpll
ret
dec
xor
fldt
xchg
leave
dec
mov
mov
push
daa
push
adc
out
push
icebp
cs
outsb
add
loope
pop
xchg
fistpll
je
xchg
xor
add
or
sahf
xor
ficoml
les
add
push
mov
inc
push
idiv
mov
add
lods
sbb
mov
push
push
push
pop
cli
or
daa
pop
lea
xchg
pop
aam
jg
outsl
cmp
les
push
orb
daa
gs
movsl
stos
pop
xor
aas
lcall
push
and
jmp
lret
insb
xchg
sub
lret
icebp
sbb
xchg
jge
push
insl
mov
push
fidivs
add
and
mov
mov
subb
sub
xor
jmp
push
push
push
and
sbb
mov
push
popf
movsb
arpl
imul
sub
fsubl
nop
xor
jp
pop
popa
mov
add
jl
int3
lcall
cmpsb
or
mov
add
scas
lea
inc
arpl
in
call
cmpsl
xchg
repz
inc
sti
xor
inc
inc
imul
mov
jp
outsb
ret
inc
jmp
cmp
gs
lods
jp
or
cli
mov
mov
lcall
dec
loop
mov
dec
xchg
incb
fstps
adc
add
xlat
pop
mov
repz
aas
cmpsb
leave
pop
push
fistps
pop
aam
rolb
pusha
shll
inc
xchg
mov
mov
shlb
and
mov
mov
dec
xor
mov
inc
push
add
rcll
rcr
popa
int
or
mov
pop
add
js
add
and
xor
add
in
cltd
jno
cmpsl
outsb
sbb
cmc
mov
test
xchg
aad
mov
mov
call
fidivrs
inc
repnz
ficoms
inc
call
or
shll
enter
xchg
and
pop
and
cltd
xchg
pause
andl
mov
mov
lods
mov
cld
xor
or
cmpsl
sub
shrl
das
adc
aas
inc
and
iret
adc
mov
lcall
lds
daa
sub
in
mov
gs
and
fwait
jne
adc
jbe
pop
cs
divl
in
scas
pop
push
push
xchg
ret
pop
and
enter
aaa
jbe
pop
dec
dec
bnd
push
sbb
xor
dec
adc
pop
adc
pop
push
sarb
icebp
push
or
adc
inc
ja
out
and
or
mov
pop
xlat
add
movsb
push
mov
inc
and
push
call
lods
in
jo
or
mov
mov
adc
int3
dec
jp
adc
lret
mov
je
cmp
sub
adcb
daa
fimull
dec
scas
je
cmp
sub
xchg
and
mov
pushf
mov
cmp
push
sbb
inc
adc
sbb
aaa
movsl
jb
push
inc
lods
mov
pop
movsl
pop
icebp
test
adc
push
lahf
and
sahf
dec
dec
mov
aam
xchg
push
cld
and
sub
xor
push
jnp
mov
jne
ffreep
add
mov
fdivl
and
pusha
dec
jge
lahf
das
js
xor
push
idivl
mov
mov
ror
fmull
jge
adc
push
addb
pop
paddw
in
jg
jns
mov
int3
test
xchg
insl
and
jnp
hlt
cmp
and
data16
stos
lods
pop
sbb
out
inc
out
sub
std
and
cmpl
insl
sbb
pop
add
adc
sbb
mov
inc
sbb
cmpsb
push
add
insl
fidivrl
in
jae
stos
test
mov
loop
sub
gs
xchg
add
addr16
leave
xchg
jne
jnp
insb
mov
cli
jp
dec
ud2
xchg
inc
jmp
out
nop
fdiv
into
dec
mov
fcmovnbe
add
je
fnstcw
and
and
fidivs
jae
mov
popa
add
push
or
andb
pop
lock
iret
pop
xchg
arpl
das
call
sub
pushf
mov
stos
dec
pop
mov
jne
push
imul
push
add
lods
pop
daa
inc
inc
lods
mov
push
xchg
jp
aaa
cli
pop
repz
pop
int
cli
gs
pop
lahf
sub
stos
es
inc
fistl
jmp
mov
enter
sub
sub
inc
movsb
push
jle
pop
pop
in
adc
mov
and
cmp
loope
call
add
sub
movsl
cmp
mov
test
aas
out
fwait
push
ret
sbb
cwtl
bound
push
mov
test
cmp
jbe
test
xor
movsl
pop
aam
fmuls
xchg
inc
or
pop
pop
ret
mov
adc
mov
addr16
xor
mov
or
xchg
cli
xlat
xchg
out
cmp
mov
cmpsb
stc
leave
icebp
loope
imul
dec
mov
or
mov
cli
adc
or
mov
xor
clc
dec
or
jecxz
fildll
push
ffree
out
inc
sbb
xchg
dec
sqrtps
scas
adc
xchg
and
rcr
sahf
xor
sub
ljmp
mov
cmp
stos
enter
mov
xlat
stc
cmp
cmc
pop
aad
je
into
pop
fstl
pop
jle
mov
in
imul
aam
pusha
decl
pop
pusha
scas
das
cli
dec
cmp
mov
jne
daa
sbb
lock
shlb
push
cltd
sbbb
sub
adc
sbb
sbb
ret
mov
inc
test
fmulp
dec
insl
int3
sub
fsub
stos
call
mov
mov
sbb
repnz
sub
and
movsb
sbb
and
xchg
push
sahf
jl
aad
jns
ds
inc
mov
movsl
sub
push
push
add
mov
sub
js
push
pop
dec
mov
lea
jno
mov
mov
rcll
pushf
sbb
jae
stos
ret
sti
dec
in
inc
sbb
or
and
out
sbb
and
pop
lods
inc
js
stc
jmp
fadd
nop
xchg
enter
jns
std
movl
push
rclb
nop
push
dec
xchg
sub
scas
outsb
jo
sub
push
repz
mov
loop
fs
mov
rol
sub
je
jmp
movsl
pop
pop
cmpsl
pop
add
jmp
orl
mov
sbb
clc
mov
sbb
jnp
rorb
shlb
fisubl
mov
mov
xchg
add
inc
das
mov
sub
loopne
lea
push
lds
pop
cmp
cmc
or
ljmp
jmp
adc
lea
and
sbb
lcall
addr16
inc
out
movsb
mov
rcr
cmovns
fcoml
je
jno
je
sub
xlat
ret
jae
jns
movsb
dec
add
scas
sub
nop
sbb
adc
in
bound
movb
cmpsb
mov
jp
mov
stos
mov
cld
mov
xor
push
test
enter
cmp
sarb
fsubrs
sti
loop
cwtl
idivl
xor
dec
adc
pop
clc
js
and
std
sbb
sti
cmpsl
add
aam
and
push
ljmp
fnstsw
sbb
xchg
xchg
ljmp
jge
std
enter
pop
jo
mov
pop
sub
cmp
iret
repnz
ds
pop
mov
std
inc
lret
test
dec
add
or
out
push
inc
aam
mov
and
push
jmp
sbb
inc
sti
les
les
and
mov
jecxz
cmc
je
in
sahf
sti
in
and
jp
in
or
js
adc
xchg
aad
cs
xor
push
and
stos
xor
lcall
pop
or
loope
dec
sbb
and
fisubl
shl
sbb
mov
mov
pop
jne
inc
xor
cs
pop
xchg
push
push
leave
vmwrite
push
out
popa
sti
xchg
sub
cmc
shrb
icebp
xor
cli
aad
sbb
addb
adc
in
pop
orl
aaa
sbbl
jb
mov
shl
sbb
jns
fucom
into
adc
mov
sbb
out
out
out
xor
ljmp
mov
stc
inc
cwtl
and
je
cmp
sbb
in
mov
or
out
cmp
loope
scas
add
lods
mov
into
aaa
lock
or
inc
test
push
test
sti
pop
xorb
mov
in
sbb
push
lds
xchg
mov
cltd
jg
fisubl
jo
popa
cltd
iret
inc
lods
jmp
ja
cmp
xchg
test
jb
dec
jmp
jge
repz
mov
xchg
push
cli
fldenv
int
insl
mov
sbb
pusha
push
cmp
cmp
fisttps
cmp
test
rolb
jp
jbe
sti
sbb
and
rorl
fcmovbe
jne
dec
mov
xchg
imul
inc
cli
adc
pop
adc
pop
push
pop
std
lea
ljmp
popa
mov
xor
pop
adc
jecxz
push
mov
mov
jp
ds
and
cmp
jbe
lea
ret
call
xchg
scas
aas
add
js
xorb
or
mov
jg
fidivrs
pop
push
aad
or
sbb
dec
xor
nop
or
mov
jae
in
lds
jl
sub
in
xchg
and
adc
jbe
push
insl
inc
popa
dec
sahf
pop
cli
mov
cmc
sub
pop
mov
pop
or
test
ss
add
imul
cmpsl
aaa
sbb
cmp
add
sub
inc
xchg
cld
in
mov
mov
adc
inc
fsts
out
cmp
adc
loope
hlt
mov
arpl
adc
ret
rolb
dec
inc
jo
jo
je
jg
xorl
add
push
ret
ret
dec
divb
lcall
and
inc
mov
xchg
xchg
cli
jmp
push
popa
xchg
mov
or
or
sbb
add
stos
pop
imul
pop
xor
fists
push
lret
dec
rorl
mov
sub
or
ret
fiadds
cli
push
js
mov
out
cmc
inc
jae
loopne
andb
mov
mov
andl
and
int
out
cmp
xchg
pop
cmpsl
shlb
shrb
mov
fcmovb
sub
cmc
mov
outsb
lea
jb
jns
daa
fsubrl
push
pop
jbe
insl
jp
xchg
push
ficoms
mov
sub
pop
aaa
les
ret
add
test
fnsave
hlt
aam
jp
fstp
xchg
nop
mov
lods
and
in
xchg
aas
xchg
lods
out
das
mov
push
rcl
pop
dec
and
int3
std
sbb
out
ret
xchg
push
mov
xchg
cmpsl
push
sub
test
pop
fidivrl
es
fs
dec
or
mov
xchg
or
mov
test
or
push
cltd
push
xchg
and
sbb
xorl
xor
inc
arpl
adc
sbb
aam
cld
stos
mov
push
into
mov
inc
mov
inc
push
sub
cmpsl
or
jne
loop
jl
ja
xchg
fnsave
mov
lock
pop
add
push
shl
pop
dec
push
xchg
rorb
and
scas
xchg
xor
xchg
es
cmp
mov
jge
hlt
cs
jbe
addr16
pushf
shlb
jo
mov
add
pushf
xchg
pop
sbb
mov
loop
movsl
xor
push
add
sarw
add
les
mov
pop
cltd
sti
mov
out
pop
out
popa
sbb
fldt
lret
ss
test
ret
mov
sbb
mov
cmp
dec
sbb
sbb
mov
mov
test
mov
or
and
scas
mov
enter
outsl
inc
and
dec
decl
mov
pop
xchg
and
xchg
repnz
xor
push
or
push
or
inc
popl
sub
pop
scas
inc
mov
cmp
push
mov
sub
xchg
pop
jmp
jno
xchg
cmp
inc
pop
xchg
xchg
arpl
aam
popa
mov
sbb
mov
jg
aam
dec
cmp
call
push
push
pop
adcb
enter
and
jl
push
xor
es
xchg
ret
fisubrs
out
sbb
pop
dec
lock
scas
in
adc
lret
scas
ja
jecxz
sbb
jecxz
mov
rcll
fnsave
xchg
jae
fwait
push
iret
ss
lea
or
ljmp
pusha
aad
shr
jmp
jno
insl
jno
rclb
insb
jno
xchg
xchg
hlt
mov
outsl
std
mov
ret
je
adc
pop
xor
lods
dec
mov
sbb
cs
imul
addl
stos
mov
sarl
xchg
outsl
fisttpl
or
popa
sub
arpl
sbb
or
inc
jne
fbstp
jg
fstpt
xor
cwtl
pushf
inc
mov
fbstp
and
mov
int
ret
roll
mov
mov
mov
clc
imul
repnz
adc
add
ss
add
enter
pop
or
ds
mov
add
mov
xchg
and
xchg
push
andl
jb
cmp
add
cltd
mov
sbb
push
sbbl
sbb
and
push
in
xor
push
insb
or
dec
mov
or
jl
shrb
sub
dec
jo
lds
mov
cmpsl
call
es
movsl
rcrl
and
in
xchg
mov
out
fs
sub
mov
mov
cmp
xchg
sti
mov
sub
into
mul
test
outsb
vandnpd
inc
dec
lret
lea
sbb
test
cmp
cmp
fstps
out
xchg
jo,pt
adc
fistl
notl
loop
fnstcw
mov
xor
inc
jp
inc
outsb
sbb
pop
daa
in
pop
push
inc
add
clc
test
add
insb
or
inc
jl
in
jb
subl
pop
imul
lea
mov
and
ljmp
sbb
mov
mov
fcoml
xor
roll
enter
aaa
mov
add
xchg
sbb
rolb
adc
mov
lock
xor
cpuid
fdivrl
push
cmp
out
scas
test
out
add
fistps
pop
out
hlt
into
jmp
aam
pop
sbb
pop
and
in
and
scas
inc
xor
dec
sarb
aaa
or
orl
inc
fdivrl
jl
cltd
mov
fwait
lds
pop
lods
cmp
sbb
jp
leave
pop
test
loop
adc
andl
cli
jne
cs
xchg
cmpsl
subb
enter
xor
shr
bound
jmp
cmp
xor
and
mov
shlb
js
andl
jns
cmp
lcall
pop
ss
sub
inc
test
pop
shrl
js
xchg
sbb
int3
adc
arpl
scas
addr16
jge
in
mov
xchg
je
mov
inc
dec
ljmp
lret
testb
popf
jmp
js
pop
add
fwait
addr16
dec
iret
push
pusha
sub
push
push
scas
push
jnp
jbe
push
shrl
call
mov
shl
jae
or
jnp
xor
inc
add
pop
mov
pop
sub
rorb
inc
ret
es
mov
push
jno
in
push
mov
mov
fnstenv
and
les
stos
outsl
inc
pushf
in
xchg
pop
sub
popl
cli
mov
mov
loope
stos
cmc
push
fdivrl
push
frstor
mov
loop
adc
cmpsl
out
mov
xor
lock
mov
push
out
inc
int
lahf
xchg
mov
test
mov
xor
mov
mov
es
shlb
aas
ja
xlat
not
xchg
or
call
lret
enter
out
fdivrl
je
jl
push
jge
ret
das
cmp
popf
jmp
fsubr
mov
add
mov
and
pand
cli
jle
xor
int
push
or
jecxz
cwtl
inc
lea
cmc
decl
dec
xor
sub
mov
jno
pop
sbbl
cmpsb
imul
push
jno
and
mov
cmp
jp
and
lret
fdivrl
xchg
sbb
jecxz
stc
sub
scas
xchg
sub
or
and
mov
pop
add
fistpl
repz
adc
movsb
gs
mov
lret
rcrl
or
ss
stos
or
xor
xchg
jb
jg
in
lahf
loopne
ret
sbb
stos
leave
cmp
pop
jno
push
add
test
test
cmp
xchg
xor
mov
dec
out
inc
or
shll
mov
inc
sbb
push
push
bnd
xchg
lea
mov
xchg
adc
mov
sub
adc
xchg
push
cmp
popf
sbb
xchg
xlat
mov
push
test
xor
adc
dec
mov
xchg
jb
xchg
ss
mov
pop
adc
mov
sbb
fnstsw
scas
repz
cwtl
jbe,pt
js
adc
or
sbb
arpl
movsl
cmpsl
mov
clc
cmpsl
cmp
imul
aad
jbe
mov
test
fists
inc
xor
xchg
inc
and
aad
push
jecxz
cli
pop
test
mov
insl
jmp
jg
mov
test
shlb
test
sbb
lods
flds
fisubl
out
adc
mov
popa
push
xchg
bnd
movsb
xchg
ret
jmp
push
mov
push
dec
ljmp
or
jae
es
into
repz
jb
xchg
mov
add
shrl
pop
orb
dec
mov
adcl
cmp
cmp
out
ljmp
xchg
sbb
inc
inc
cli
add
inc
lret
fmull
pop
dec
adcl
or
push
lahf
bnd
je
inc
shlb
cmp
mov
test
ds
lods
push
mov
inc
and
push
xchg
xchg
push
jno
pop
shrl
push
rcrl
loope
jbe
push
scas
fmull
fdivs
scas
xor
push
or
or
add
sub
mov
adc
fbld
repz
shl
outsl
or
pop
cmp
mov
inc
je
adc
pop
xor
mull
aas
enter
push
xor
fsubs
xor
pop
pmaxsw
fcoml
clc
jle
sbb
dec
push
mov
fidivrl
add
pop
inc
aad
in
cld
testl
mov
push
dec
flds
mov
fucomi
cli
data16
shll
push
and
je
mov
adc
mov
fiadds
fdivrs
dec
jecxz
hlt
jmp
cmpsl
loopne
ret
pop
test
xchg
adc
or
sub
dec
aam
into
scas
jge
jg
call
pushf
int
arpl
les
push
jno
xchg
or
sub
sarb
xchg
ss
xchg
hlt
inc
xorl
or
mov
inc
lock
adc
mov
mov
hlt
test
push
sbb
in
sbb
jmp
cli
adc
jnp
sub
add
xor
and
cmp
daa
in
nop
bound
dec
add
xor
and
rclb
fsubp
incl
data16
arpl
pop
xchg
mov
addb
push
ljmp
in
in
cmpsl
mov
jo
add
xor
clc
pop
push
bound
daa
sarl
adcl
lods
fsts
out
rcrl
cltd
push
adc
les
nop
jg
outsb
jnp
lods
xchg
or
ret
jno
mov
in
inc
and
enter
bound
pop
mov
stc
test
pop
mov
bound
sub
subb
sub
fsubs
in
leave
or
scas
mov
inc
movsl
fwait
adc
sub
pushf
dec
loope
loop
sahf
jmp
cmc
pop
lcall
mov
test
xor
clc
lods
movsl
fsts
dec
dec
push
mov
leave
es
xor
js
mov
jae
lea
push
and
ss
add
roll
stos
sub
cmpsb
aam
and
outsb
es
mov
sbb
clc
out
mov
mov
js
lock
test
rolb
xchg
push
mov
push
aas
add
xchg
cltd
jbe
decb
cmp
lock
mov
gs
stos
jp
idivl
inc
jecxz
add
lret
cmp
insb
insb
pop
out
xchg
push
mov
pop
es
fldenv
rolb
lahf
sbbb
arpl
dec
jg
into
insb
mov
mov
lcall
mov
jg
fisubrs
lret
lcall
das
pop
inc
jno
pusha
xchg
mov
les
mov
mov
pop
dec
dec
push
mov
push
outsb
xchg
sub
in
pop
in
inc
push
cmp
cmp
xlat
roll
pusha
stos
jp
cmpsb
mov
popa
bound
mov
fstps
inc
jnp
ds
ja
out
xchg
jne
es
ljmp
mov
pushf
and
mov
mov
jb
in
dec
test
andb
out
and
mov
rcll
pushf
or
sbb
call
shrd
out
pushf
stos
pop
iret
mov
jae
inc
int
or
nop
test
fbstp
js
push
xor
sbb
arpl
xchg
enter
das
jge
push
adc
cmpsb
cmc
pop
jl
cwtl
cmpsb
in
adc
mov
scas
xchg
mov
fidivrs
call
test
xchg
push
xchg
mov
push
sub
stc
add
sub
iret
hlt
xchg
jb
fucom
sub
push
inc
je
data16
lods
jp
cmpsb
push
or
pushf
push
cmp
xlat
jmp
test
sbb
lret
pop
push
das
movsl
or
dec
sbb
or
int
lcall
adc
js
insb
jg
je
sbb
dec
flds
or
sbb
gs
cwtl
pushf
pop
rclb
dec
xchg
popf
mov
inc
aaa
mov
pop
iret
nop
mov
fistpll
xlat
fildl
sti
stos
ja
pop
es
adc
loopne
or
test
pop
aaa
mov
hlt
and
retw
ud0
sti
xlat
call
pusha
or
pop
fildl
adc
mov
sbb
xor
mov
inc
or
sahf
pop
push
adc
aas
push
in
call
call
add
mov
push
inc
in
push
sahf
sub
sti
mov
imul
lock
stc
xor
insl
mov
xor
mov
pop
sub
lods
aad
xchg
stos
adc
push
hlt
cld
ret
mov
mov
push
push
push
dec
xchg
jbe
negb
test
jl
push
in
test
in
mov
imul
push
and
mov
xchg
aaa
int3
imul
sub
add
pop
repnz
or
leave
ret
lods
shr
lods
out
xchg
pop
push
cmpsb
mov
scas
jae
xor
aaa
incl
sbb
out
dec
inc
fistps
jmp
jle
shl
test
aas
sub
ja
inc
xorb
cwtl
arpl
sti
push
fsubrs
inc
dec
fdivrl
roll
imul
test
and
pop
sbb
push
and
loopne
cs
lahf
and
pop
sbb
or
js
jb
dec
ljmp
vpcmpeqb
fs
and
push
cmpsl
fldenv
mov
and
add
ret
sub
xchg
jo
mov
icebp
aam
sbb
mov
rol
std
sub
insb
inc
js
and
filds
popf
fisubrs
add
clc
imul
xchg
aam
aam
dec
bnd
jl
arpl
pop
stos
lods
and
bound
movsb
push
cmp
popf
and
mov
ret
dec
mov
mov
icebp
imul
and
jae
scas
jle
add
mov
scas
xorb
pop
addr16
popf
sti
adc
jae
and
jns
mov
inc
mov
dec
cmc
sbb
leave
xchg
pushf
test
xor
rcll
and
jl
mov
shr
flds
jg
and
mov
inc
jno
and
jle
shlb
inc
jge
clc
scas
sbb
cmp
xchg
std
popa
push
push
xchg
push
push
or
adc
sub
dec
adc
test
leave
insb
pop
call
aas
adc
pop
faddl
outsb
in
aad
jne
sahf
xor
lods
mov
lods
fists
aad
mov
inc
sub
push
adc
ds
xchg
test
pop
xchg
in
ret
jno
out
jae
xor
lsl
pop
popa
or
mov
sbb
sbb
jl
mov
insl
pusha
inc
lahf
lods
sub
jecxz
sbb
movsl
mov
xchg
xlat
iret
das
pop
fisttpl
xchg
repz
mov
lds
out
and
je
jno
push
jl
add
pop
leave
divl
scas
mov
fdiv
pop
sbb
jecxz
lods
and
movsb
xor
lcall
shll
xchg
xlat
pop
in
aas
adc
jp
repz
daa
loope
ds
std
mov
add
xchg
in
adc
cmp
xchg
mov
xchg
jnp
push
mov
inc
mov
in
inc
int3
aaa
hlt
cli
out
pusha
test
js
sti
xchg
cli
mov
jae
jg
dec
sub
mov
mov
push
sbb
or
cltd
stos
push
aad
inc
pop
xchg
mov
repz
mov
test
push
inc
cmp
jne
fwait
push
or
imul
mov
aaa
and
or
jno
pop
int3
hlt
mov
daa
pop
jmp
out
popa
hlt
cmp
sbb
pop
or
in
gs
cli
mov
es
pushf
sub
data16
adc
repnz
or
xchg
xor
adc
cwtl
int3
xchg
xor
jge
mov
or
or
adc
out
popl
and
ljmp
adc
sbbl
jmp
jg
test
sbb
repnz
add
ret
popa
sti
pop
test
xchg
mov
sub
pop
xchg
test
sbb
es
imul
dec
inc
xor
hlt
pop
leave
mov
jno
lea
fcmovu
rcll
addr16
fadds
adc
in
adc
dec
mov
cmpsb
scas
or
mov
mov
or
xor
scas
xor
cmpsl
sbb
mov
inc
xchg
adc
sahf
xchg
sbb
aam
loop
aam
jle
scas
mov
fwait
or
fwait
mov
mov
mulb
ss
mov
dec
data16
mov
sbb
repz
adc
pop
push
imul
leave
sub
pop
sbb
push
fstl
fsubl
push
or
and
push
scas
sbb
xor
sub
cmp
or
popa
dec
or
sub
loop
jp
in
cmp
ret
or
test
dec
bound
test
mov
and
adc
adc
xlat
push
xor
in
sbb
inc
fwait
mov
lahf
mov
pop
stos
js
mov
daa
mov
aam
pop
int
lods
repz
pop
cs
pop
es
test
fidivl
jb
shll
and
pop
jnp
xchg
sti
aas
fs
nop
leave
mov
mov
pop
lds
aam
mov
mov
mov
adc
fsub
lock
xlat
mov
ret
cwtl
push
pop
je
cmc
dec
mov
adc
cmpsb
insb
mov
fs
test
mov
shll
mov
ljmp
pop
stos
fsubs
or
int3
js
idiv
push
inc
int3
in
js
mov
add
xchg
popf
arpl
jge
fcmove
cmc
fbstp
xor
inc
mov
lods
pop
xchg
hlt
cld
ljmp
pop
aaa
and
dec
loopne
mov
dec
mov
mov
xor
and
xchg
aad
adc
sub
sbb
mov
out
mov
sub
scas
and
mov
jp
xor
xchg
lods
cbtw
mov
test
int
aas
jmp
sbb
popf
sub
in
out
aad
mov
outsl
dec
inc
lret
and
out
inc
pop
out
sbb
add
push
dec
jns
mov
jnp
jge
jbe
je
outsb
scas
cmpsl
inc
ljmp
cmp
inc
push
aaa
cltd
pop
sahf
outsl
stos
dec
mov
test
pop
test
add
inc
imull
imul
cmp
jl
jno
testl
scas
subl
ficomps
sti
mov
sbb
cmp
cmp
test
adc
scas
jl
sub
repz
pop
pop
fmull
rorl
es
sbb
sub
xor
xchg
push
test
fnstenv
jb
or
lods
push
stos
xor
out
imul
dec
stc
in
pop
mov
cmc
int3
fwait
mov
shll
popf
idivl
out
sub
cmpsl
fistpl
insb
jns
int3
js
sbb
aas
mov
sub
andl
sub
and
mov
insl
inc
pop
jbe
decl
mov
in
push
adc
mov
aam
fs
add
movsb
stc
mov
mov
mov
adc
test
int
out
insb
add
xchg
cmp
jnp
gs
fstp
test
les
push
insl
shl
ret
or
sar
mov
into
in
dec
mov
inc
and
cltd
ret
mov
push
int
mov
out
push
ja
aad
aaa
mov
pop
push
mov
test
sbb
dec
arpl
mov
out
mov
mov
out
mov
fsubrs
add
stos
pop
xchg
cmp
pop
dec
cmp
mov
lret
sbbl
movsb
and
jnp
sbb
xchg
int
out
or
hlt
rcrl
jge
mov
andl
clc
xor
test
test
les
xchg
inc
pop
in
outsb
mov
dec
push
in
addl
jne
cli
in
outsl
xor
inc
lcall
pop
push
and
adc
cltd
push
xor
pop
cmp
mov
jge
jmp
sub
out
dec
out
inc
imul
and
sti
xchg
jmp
adc
add
pop
xchg
sti
es
adc
push
pop
addr16
ret
pusha
xchg
sbb
aad
pusha
pop
outsl
lahf
test
std
inc
shrl
clc
pushf
cld
rclb
aam
xchg
and
mov
cmp
xchg
js
aas
loope
or
or
in
jbe
mov
pop
pop
out
add
sub
sub
push
mov
loop
lock
xchg
into
shlb
cld
adc
and
jbe
xchg
ret
and
call
neg
mov
in
movsb
cmpsb
lcall
repz
iret
ja
xor
lods
inc
flds
jb
data16
outsb
out
pop
push
jne
and
push
or
mov
jae
and
dec
scas
bnd
shlb
bound
mov
pop
sbb
mov
int3
insb
cwtl
xor
pop
push
insb
sub
stc
mov
inc
inc
or
push
cmc
cmpsb
jmp
mov
rcrl
mov
sbb
mov
lods
out
sub
mov
push
inc
pop
into
mov
inc
faddl
push
sub
jg
xor
mov
mov
mov
stos
push
pop
lea
lret
mov
hlt
push
mov
pop
dec
repnz
lahf
cmp
pop
xor
push
into
mov
jo
mov
adc
mov
cltd
leave
ds
loope
mov
ds
loopne
jmp
adc
cli
jg
pusha
push
xchg
mov
sbbl
or
test
rcrb
das
sub
pop
mov
into
shl
lcall
movsb
sub
leave
jno
and
mov
lea
iret
mov
lock
rorl
int3
or
sub
out
pop
and
pop
mov
jb
and
lock
sbb
add
push
sub
nop
push
stc
loop
icebp
push
push
fcomps
lret
push
xchg
or
mov
sub
enter
dec
pop
icebp
xlat
jp
imul
pause
sbb
repz
test
arpl
enter
mov
pop
pop
fs
icebp
add
mov
and
outsl
push
dec
out
cmp
enter
lret
sbbb
mov
stc
jl
and
sbb
and
sarb
in
sbb
fs
mov
insl
orb
mov
pop
gs
mov
dec
fldt
or
inc
mov
repnz
inc
mov
inc
outsl
into
lret
loop
adc
sbb
pop
sub
xchg
push
loop
mov
into
jo
mov
add
pusha
cmp
fists
cwtl
movl
arpl
and
bound
and
jg
mov
mov
push
push
sbb
sahf
push
adc
mov
inc
dec
xor
std
or
punpcklwd
adc
ret
inc
aas
jbe
sbb
in
mov
or
add
int3
sbb
sub
xchg
jb
mov
lahf
je
xchg
or
rcrl
out
test
cmp
jns
lret
imul
bound
inc
push
clc
mov
jle
test
cwtl
jp
in
lret
xor
lods
dec
cmpsl
lcall
jmp
dec
insb
rolb
jecxz
rcr
and
inc
leave
inc
pop
lods
cld
mov
push
outsb
faddl
push
inc
pop
int
aam
ret
sbbb
push
mov
outsl
in
adc
cmpsb
pop
sbb
lock
aaa
in
mov
sbb
xchg
nop
addb
add
cltd
mov
shrl
or
push
xor
adc
nop
dec
jne
into
cld
fisubrs
das
or
scas
out
adc
push
nop
aas
jecxz
cmpsl
lahf
cwtl
sti
push
xor
and
jecxz
fisubl
in
pop
jae
insb
inc
mov
or
out
mov
push
jb
sbb
int3
aam
or
andl
cmp
and
cmp
lret
lods
das
push
call
std
ljmp
ret
inc
xchg
mov
fcomps
cli
cmp
loope
dec
sbb
sbb
fs
lret
inc
repnz
flds
push
in
xchg
js
pushf
jg
sub
cmpsb
scas
nop
mov
loope
into
pop
cmp
cs
sbb
into
rclb
dec
enter
adc
mov
cld
inc
cmp
mov
dec
cmp
inc
lds
imul
out
cli
jo
lods
fdivrl
xor
pushf
stos
je
or
ret
sbb
ljmp
mov
cs
ja
sub
pop
xchg
push
ficompl
nop
jecxz
push
cwtl
cmp
push
fisttps
push
outsl
repz
call
inc
pop
aaa
jle
pop
stos
push
jo
aam
sbb
mov
or
movsb
xchg
cmp
sbb
out
jmp
enter
mov
sahf
xor
dec
jmp
aas
lret
inc
mov
addr16
out
or
sub
jns
cmpsb
clc
js
pop
push
aaa
test
repz
lods
movsb
rcll
outsl
pop
or
mov
jmp
and
add
mov
fwait
or
sbb
mov
mov
xchg
std
push
out
rol
or
jbe
jb
mov
cmpsb
scas
pop
push
insl
push
mov
sub
stos
pop
je
pop
pusha
rolb
push
int
ret
mov
hlt
add
jo
and
or
cmp
das
pop
outsb
cmpl
jge
lahf
push
pusha
call
mov
xlat
ja
and
inc
jb
rclb
push
popf
add
push
idiv
mov
xlat
mov
insb
loopne
dec
and
scas
popf
fwait
loop
jb
mov
mov
mov
imul
bound
inc
cmc
mov
ss
jb
clc
lds
loop
cli
cmp
pushf
gs
jmp
jb
pop
lret
mov
dec
dec
mov
test
sbb
sub
xchg
aaa
add
push
cmpb
cmp
and
sbb
jge
scas
and
mov
icebp
push
addr16
pusha
das
pop
cld
mov
adcb
mov
pop
mov
mov
mov
aas
push
arpl
inc
mov
je
aad
mov
pop
push
jmp
fstp
inc
jbe
or
push
cmpb
inc
in
pop
lcall
sbb
mov
adc
mov
cmp
insl
fwait
inc
add
push
inc
jae
jl
loope
push
cmp
xchg
sub
scas
inc
in
xchg
ja
fwait
aam
pop
sti
mov
xchg
pop
out
cmp
lods
xchg
mov
sub
mov
xor
shll
xor
sti
dec
aas
push
mov
dec
mov
push
push
inc
insl
xchg
jno
sub
cli
or
xchg
daa
mov
ror
adc
and
xchg
fisubs
dec
xchg
adc
testb
mov
lret
lcall
push
mov
cmp
pop
add
fwait
xchg
out
push
push
int3
stos
fists
incl
ret
jb
ret
in
push
cmp
pop
cltd
mov
adc
aad
jg
dec
add
sti
stos
iret
mov
jle
mov
jnp
dec
xor
ret
iret
xor
dec
inc
sbb
in
rorl
dec
mov
xor
rorl
test
loope
jmp
dec
jne
out
or
xchg
out
test
mulb
jge
sub
mov
jbe
inc
sub
testb
push
push
mov
adcb
lods
push
mov
or
lahf
pop
test
fisubrs
mov
pop
in
push
js
adc
cmc
sub
iret
mov
sub
adc
mov
popa
add
invd
insb
adc
sbb
cmp
das
in
popa
cli
cwtl
mov
sub
add
sbb
out
add
cmpsb
add
mov
rol
xor
outsb
roll
or
mov
icebp
lea
inc
or
mov
jge
mov
xor
pop
push
lods
inc
sti
loope
jecxz
mov
jo
xor
cmp
jbe
stc
fiadds
mov
jecxz
lcall
pop
mov
sarl
rcrb
xlat
mov
test
shr
jg
mov
cs
lods
xor
push
pop
mov
popf
sbb
movsl
clc
sbb
enter
add
pop
sahf
cmp
inc
add
jnp
sbb
iret
xchg
and
adc
lods
stc
pop
xchg
ret
mov
mov
sbb
mov
lods
dec
or
test
dec
xlat
mov
mov
xchg
mov
inc
jmp
outsb
or
insb
lret
lcall
xor
dec
hlt
dec
sub
pop
add
data16
cltd
clc
sbb
cwtl
pushf
loope
rcrb
int3
arpl
imul
in
mov
iret
les
xchg
mov
cmp
pusha
sbb
add
rorb
push
mov
mov
shl
testl
test
pop
and
adc
xor
sbb
lods
mov
adc
and
in
ret
push
cmp
push
jns
loop
pop
sahf
jecxz
das
repz
jmp
rcrb
xchg
in
fidivl
iret
pop
cmp
jle
mov
fists
fdivrp
add
push
or
adc
jle
sub
fstl
dec
dec
sub
enter
mov
mov
inc
dec
aad
dec
lock
mov
insb
push
cli
and
pop
rcr
mov
pop
cmpsl
add
jecxz
imul
mov
push
fsubl
or
int3
sub
rol
sbb
inc
aad
jge
add
dec
or
cltd
fmuls
icebp
orb
sbbb
jae
sbb
dec
inc
adc
pop
dec
fstpl
testl
push
and
out
or
clc
xchg
mov
xor
addb
add
sub
roll
clc
xor
popf
add
sub
push
das
je
xchg
shlb
imul
lret
and
mov
loope
xchg
leave
and
lcall
lret
into
out
add
push
push
in
xchg
mov
iret
sub
jns
and
loop
sub
ficoml
ljmp
ljmp
lret
sbb
xchg
lcall
sub
ss
add
or
les
mov
or
pop
imul
fidivrs
fisubs
scas
push
jl
xlat
push
mov
mov
cmpb
sub
mov
add
out
mov
adc
lcall
dec
xor
xor
cli
dec
fistps
mov
and
pop
pop
js
mov
and
jp
cmp
call
fs
push
cmp
cmp
pop
jp
and
jno
sti
dec
incb
push
stc
pop
and
jnp
fwait
push
jns
push
shrl
ret
push
popa
lods
cmp
in
pop
lahf
sarb
hlt
xor
or
or
lret
xorb
add
in
sbb
xchg
xchg
sbb
and
mov
adc
cmp
mov
pop
adc
mov
jecxz
pop
cmp
pop
loope
xchg
and
and
pop
jbe
clc
push
mov
test
sbb
or
sahf
and
and
mov
jp
sub
dec
and
in
mov
sti
test
ret
push
fnstsw
dec
inc
xor
loop
scas
mov
add
adc
int
jg
movsl
cwtl
fsubs
and
out
out
pop
xor
outsl
dec
mov
cmpsb
or
sbb
adc
movsb
shll
into
mov
lods
inc
ljmp
xorb
lret
adc
mov
xchg
cld
pop
sub
mov
call
mov
mov
mov
in
fcmovb
cmp
iret
cmp
mov
cwtl
loopne
inc
pop
jno
popa
pop
fnsave
out
sbb
push
fistl
dec
rcrl
dec
pop
daa
daa
cmp
dec
ret
in
mov
xorb
cmp
and
or
arpl
fidivrl
cmpsb
out
imul
nop
sbb
push
test
out
xor
data16
out
xchg
pop
or
jp
mov
mov
xchg
sbb
or
lcall
sbb
and
mov
fistps
mov
idivb
xchg
bound
mov
dec
push
mov
dec
rolb
inc
out
sub
cld
add
push
sbb
or
or
pop
js
or
push
sub
mov
rclb
lea
and
sub
jnp
dec
inc
xchg
ror
jnp
iret
xchg
sbb
lret
mov
xor
cs
and
sbb
mov
imul
add
mov
mov
in
xor
inc
bound
loop
add
mov
cmp
jecxz
cmc
mov
mov
fbld
pop
nop
mulb
push
ret
fidivrl
jne
xchg
inc
push
add
mov
out
imul
arpl
loopne
xchg
mov
sub
push
pop
mov
mov
shlb
clc
cli
fsts
pop
sub
das
ret
adc
sti
mov
cmp
pop
jne
sub
in
stc
cli
aam
jno
dec
int3
lcall
cld
pop
mov
sti
lret
push
xlat
int
add
incl
pop
xor
jg
loop
sbb
dec
adc
cmp
jmp
int3
sub
test
test
lods
dec
adc
imul
dec
mov
sahf
push
push
ja
int
daa
xchg
lahf
aam
pop
xor
cmp
xor
xchg
mov
xchg
sbb
aam
pop
xor
imul
or
fwait
idivl
bound
sahf
aam
jo
and
mov
les
push
mov
out
jecxz
in
ljmp
neg
mov
aas
repnz
adc
into
out
dec
mov
sbb
adc
mov
dec
loope
data16
jne
and
int
mov
mov
cwtl
xor
xchg
gs
lods
mov
mov
negb
scas
xchg
adc
fstpl
pop
inc
fmull
and
arpl
mov
bound
cmc
sti
or
pop
aam
in
das
lods
addb
dec
mov
xchg
fsts
dec
sub
lahf
popa
or
sub
push
jecxz
mov
jb
mov
sti
scas
pop
aaa
lods
sarl
stc
and
test
or
cwtl
inc
in
push
into
leave
mov
mov
ja
insl
push
dec
jnp
icebp
in
sti
and
mov
jmp
into
lock
inc
push
inc
call
cmp
cwtl
xor
push
push
xchg
out
lcall
dec
outsb
icebp
loop
xchg
int
test
inc
push
nop
sti
xchg
arpl
lds
or
xchg
sub
sub
or
adc
pop
js
outsl
mov
dec
les
enter
jecxz
dec
or
popa
dec
mov
pushf
sbb
and
rdpmc
sti
dec
xchg
in
int
pop
adc
decb
and
xchg
jb
xor
aaa
out
mov
push
mov
mov
fidivl
test
xchg
push
xchg
enter
paddsb
inc
mov
dec
push
push
dec
loope
add
push
icebp
sbb
in
jmp
je
gs
jge
dec
push
enter
into
imul
cltd
mov
sti
fldenv
sahf
mov
jmp
lret
shl
add
xchg
jmp
sbb
insb
imul
dec
es
push
mov
popa
or
mov
push
fildl
push
dec
dec
test
cmp
lods
and
notb
movsb
mov
cli
mov
mov
pop
xor
fsubs
repz
loop
shlb
push
inc
ss
decb
xchg
sub
or
ljmp
cmpb
notb
mov
sub
ret
push
push
mov
dec
outsb
pop
repz
jbe
cmp
stos
xchg
sbb
pop
in
stc
pop
adc
xchg
movhps
inc
mov
jmp
jbe
lcall
repz
jne
ss
popa
xchg
je
test
negl
pop
cwtl
dec
stos
inc
fwait
inc
orl
xchg
stos
daa
addl
cwtl
cmp
loop
xchg
ret
das
out
int3
and
ret
fistps
ret
stos
cli
popa
rolb
jae
rclb
cmp
cmpsl
mov
test
test
mov
or
xchg
adc
ljmp
loop
xlat
nop
push
cmp
pushl
es
ss
data16
daa
je
das
jecxz
mov
repnz
pop
inc
inc
add
xorl
and
xor
leave
divb
flds
sub
callw
push
jns
notb
enter
mov
jecxz
mov
xor
push
divl
bnd
loopne
stos
pop
cmp
pmullw
fwait
inc
push
cmpsb
clc
mov
movsb
jb
test
and
lock
add
std
ret
pop
mov
repnz
or
pushf
mov
inc
mov
xlat
aas
emms
add
hlt
adc
js
xor
imul
push
decl
andl
jecxz
fcmovu
push
sbb
ficompl
cli
rcll
cmpsl
iret
imul
mov
mov
adc
lahf
lahf
dec
arpl
and
inc
cwtl
fwait
jne
xchg
scas
sbb
and
out
push
cwtl
mov
dec
mov
lret
inc
pop
xor
test
mov
jg
adc
push
fwait
inc
popa
inc
enter
xchg
inc
xchg
or
lea
aaa
into
mov
mov
addr16
pop
lods
out
aam
mov
xchg
mov
dec
pop
adc
adc
pop
xlat
mov
xchg
rclb
fdivs
lods
and
dec
jno
ds
lods
jecxz
jo
and
and
sub
outsb
or
in
jbe
outsl
clc
scas
lcall
jp
fistpll
mov
xchg
mov
sub
xchg
fisubrs
lcall
hlt
adc
mov
das
lods
insl
jnp
jp
inc
xor
mov
cmpsl
nop
cmp
xor
in
push
mov
lods
outsl
lret
test
pop
mov
pop
clc
jg
sti
pusha
dec
pushf
jnp
mov
fwait
push
mov
sbb
jl
sub
fcomps
pop
xor
push
outsl
fs
bound
and
hlt
dec
dec
push
fisubrl
and
repz
enter
stc
popl
rcrb
or
out
mov
test
mov
test
rcrl
add
cld
push
add
pop
push
push
cmp
jns
sbb
js
jo
dec
pop
sub
mov
adc
or
icebp
mov
addl
adc
pop
push
out
lods
dec
dec
mov
push
cmpsb
movsl
sti
stos
cltd
lret
inc
inc
add
xor
in
outsb
and
inc
fcmove
sub
xchg
push
mov
pop
stos
cltd
and
mov
stos
in
or
cmpsb
sbbb
adc
and
jne
jae
jg
mov
jmp
mov
push
fisttpll
cmp
cmp
mov
mov
mov
inc
dec
ret
inc
mov
xchg
and
xor
lcall
dec
add
inc
popa
sbb
mov
or
mov
sbb
jmp
mov
or
lods
inc
std
imul
cli
xchg
mov
xor
icebp
subb
sbb
sbbl
and
mov
dec
ss
adc
std
mov
xchg
bound
stos
in
add
out
mov
sub
jno
pop
push
fidivrl
leave
mov
inc
push
push
fmuls
xor
rcrl
imul
add
out
pop
cs
icebp
xor
pop
pusha
gs
push
inc
xor
sbb
arpl
add
imul
addr16
cmp
pop
stos
rcll
dec
lds
mov
mov
stos
push
mov
push
and
xor
aas
xchg
mov
sbb
pop
mov
popa
stc
xchg
icebp
hlt
imul
and
test
roll
and
sbb
dec
hlt
repnz
aas
and
gs
sbb
insl
std
jnp
mov
nop
mov
mov
test
dec
inc
imul
rcll
jecxz
jnp
loope
std
loope
mov
pop
xor
cmp
jmp
inc
into
fisttps
lcall
je
int3
and
stos
pop
xorb
push
shll
cltd
xchg
push
or
bound
stos
ljmp
cmpb
cwtl
ljmp
push
mov
mov
test
cmp
stc
mov
xchg
movsb
in
mov
xchg
pop
cli
inc
push
xor
mov
xor
xchg
jno
nop
push
cmpsb
popf
mov
adc
pop
insl
or
aam
fmull
xchg
add
out
mov
or
outsl
gs
std
enter
les
and
mov
mov
pop
add
fs
and
inc
xorb
sub
dec
sub
out
pop
or
inc
arpl
lods
incb
bound
push
icebp
in
rcll
loope
mov
jl
imul
jb
push
test
and
dec
test
sbb
dec
push
dec
mov
pop
sub
cs
cmp
aas
pop
xor
inc
inc
pop
add
push
movsl
dec
jmp
pop
mov
mov
pop
call
jecxz
xchg
adc
pop
xchg
mov
cmp
gs
lods
int3
mov
lcall
and
cmp
jge
in
test
mov
dec
cmp
sub
push
xchg
lock
push
sub
cmp
add
fcompl
or
fcmovb
insb
push
mov
int
fadd
jbe
addr16
jo
pusha
xchg
lods
adc
cld
mov
popf
fadd
sbb
mov
arpl
shlb
js
push
bound
js
mov
pushf
cwtl
xchg
mov
dec
cmpsl
loope
mov
mov
xchg
insl
in
arpl
mov
outsb
push
mov
rdpmc
fisubl
xchg
movsl
push
arpl
int3
loope
mul
cmpl
dec
mov
xchg
pop
push
clc
sbb
cld
pop
jne
jo
sarl
call
adc
test
call
mov
adc
xor
fldl
test
or
dec
out
bswap
sbb
movsb
adc
push
gs
jne
loop
daa
pop
adc
addr16
insb
int3
mulb
jl
jmp
mov
add
aaa
cmp
jbe
inc
cmc
test
test
or
sahf
adc
push
push
stos
mov
out
push
pop
xchg
push
adcb
fisttpl
lahf
ficompl
mov
lahf
out
data16
leave
lock
dec
mov
in
lds
add
dec
jle
and
sub
dec
push
ja
push
dec
sub
sub
in
pop
fs
and
adc
jge
enter
test
and
xlat
add
jns
pop
aad
rcrb
test
test
je
testl
cmp
jbe
movsb
pop
les
add
and
push
xor
mov
dec
cmc
jge
mov
jl
sub
push
stos
and
call
or
test
filds
sub
popf
jp
dec
out
push
and
xor
inc
repz
pop
arpl
add
ljmp
mov
repnz
cmp
jle
sub
out
cli
cwtl
push
mov
and
les
add
pop
mov
push
ret
jecxz
adc
mov
push
in
lods
push
lea
xchg
lods
cs
test
repz
les
mov
or
popf
inc
rcll
and
cmp
lahf
sub
loopne
fwait
pop
int3
xchg
jb
push
hlt
sub
xchg
sub
dec
mov
mov
je
inc
insb
xor
lods
sub
daa
or
jg
push
jle
inc
push
xchg
and
repz
data16
and
fst
mov
lret
adc
push
and
cmpps
add
adc
cmp
adc
loop
and
sub
inc
jns
decb
jmp
mov
dec
push
sub
pushf
mov
mov
les
push
and
enter
xor
jns
loop
sub
pusha
jo
or
insl
xchg
lcall
and
in
aad
je
mov
test
imul
cmc
push
insb
mov
push
fsubr
dec
pop
arpl
or
ljmp
shrb
push
xchg
pushf
xchg
add
dec
mov
pop
push
popa
pop
add
jmp
mov
enter
stc
call
mov
jne
mov
orb
das
add
pop
and
loop
and
and
test
fidivs
xor
mov
cmp
pop
jp
and
and
dec
mov
mov
mov
pop
imulb
loope
in
out
jmp
fsubl
cmp
ljmp
sub
lret
sahf
pop
lret
xchg
mov
mov
push
sbb
test
test
adc
push
out
dec
test
adc
jne
pop
mov
inc
fnsave
out
lcall
add
jb
adc
push
pop
ljmp
mov
lahf
aad
xlat
mov
jbe,pt
xchg
adc
mov
aaa
rcl
das
jns
sub
jp
stos
hlt
cmovbe
sub
ret
in
pop
mov
dec
scas
out
rorl
mov
icebp
mov
lret
add
jp
mov
dec
adc
cmp
jmp
cltd
gs
and
mov
mov
cmc
mov
inc
out
fcomip
xorb
cli
out
into
sub
test
mov
mov
push
in
mov
shlb
xchg
test
pop
roll
xchg
pop
xor
push
lock
or
je
xchg
in
insl
pop
push
push
call
fdivrl
jl
jbe
xor
sbb
inc
cmp
mov
push
sbb
inc
jae
sub
test
inc
outsl
xor
out
inc
repz
icebp
pop
ret
ja
std
jp
mov
movsl
mov
bound
call
xchg
pop
call
pop
push
mov
mov
xor
cmpsl
shll
cmp
add
int3
lahf
and
sub
fimull
movsb
mov
loopne
lret
shll
ds
jb
into
rolb
adc
enter
imul
mov
xchg
aaa
cmp
xchg
cmc
ja
push
andb
add
call
adc
or
lods
mov
fcom
ljmp
imul
loopne
cmp
push
sahf
cmp
jb
aas
insl
fisubl
jns
cs
push
mov
adc
push
mov
adc
lret
mov
jae
xlat
and
push
push
ficoml
pop
es
js
das
xchg
fisttpl
fs
rcrb
in
mov
cmpsl
addb
mov
sub
jmp
push
dec
mov
ljmp
mov
sub
clc
pop
loopne
outsb
xchg
jmp
adc
int
std
xor
mov
cmp
outsl
push
inc
ljmp
iret
aad
jae
xor
xor
inc
and
dec
insl
mov
sub
inc
push
sbb
je
add
sub
call
xor
ret
sbb
fcoml
test
jmp
xor
lds
sub
xlat
add
pop
sub
arpl
leave
addr16
jbe
and
jo
cltd
sbb
xor
stos
shlb
jae
sti
xchg
mov
scas
cmp
or
fcomip
das
int3
insb
adc
xor
sub
add
aam
cmp
loope
mov
cmp
push
and
pop
test
ja
outsb
rorl
leave
mov
inc
inc
xchg
cwtl
movb
pop
mov
fwait
insb
outsb
test
and
adc
rorl
cs
das
cmp
mov
or
loop
and
punpckhwd
mov
ret
inc
test
or
mov
push
stos
cld
sbb
inc
adc
int
jno
sub
lods
inc
rcll
pop
lret
inc
push
cmpsl
clc
aas
fwait
pop
cmpsl
imul
adc
mov
xor
in
push
sarl
lds
or
les
addl
ret
sub
mov
shlb
aaa
adc
cltd
push
and
mov
xor
insb
mov
dec
aaa
iret
lret
adc
or
jp
repz
mov
data16
ret
push
fmull
mov
xor
cmpb
xchg
stos
ret
cmp
pop
mov
mov
scas
jge
rcl
mov
lcall
sbb
push
jbe
loope
out
sub
bsr
and
jae
adc
cld
sbb
int
sbb
mov
dec
outsl
mov
addr16
mov
arpl
push
mov
xchg
jmp
std
add
iret
les
jo
sbb
pop
out
push
mov
mov
mov
xchg
jg
rcr
cmp
dec
ret
out
sub
push
mov
jnp
jae
mov
add
mov
pop
leave
pusha
in
stc
imul
pop
shrb
pop
or
xchg
mov
dec
xchg
outsb
insl
mov
push
int3
mov
out
cwtl
lret
fdiv
outsb
es
cwtl
mov
aaa
movsb
cmp
jne
inc
fmul
xchg
or
cmp
dec
loopne
xchg
in
push
mov
dec
pop
mov
sbb
int3
hlt
jp
aad
mov
rorl
or
xchg
mov
movsb
fldt
mov
cmp
fldenv
enter
cs
xor
or
clc
xchg
rcrl
push
iret
inc
push
inc
stos
stos
mov
add
pop
adc
movsb
fistps
mov
aaa
lods
gs
cltd
pusha
xor
loop
dec
pop
sbb
sbb
fnstcw
push
xchg
jno
push
loopne
mov
mov
sub
sub
scas
dec
test
pop
rcll
scas
les
test
loopne
push
icebp
test
and
mov
xchg
mov
adc
leave
jne
or
mov
nop
ja
shl
test
out
fistpl
or
scas
in
es
data16
roll
ja
mov
test
sbb
jmp
mov
and
ror
cs
lret
pop
push
cld
lcall
xor
movsb
cmp
mov
inc
and
scas
clc
ja
mov
dec
shr
mov
gs
bound
shll
outsl
and
sub
js
sbb
idivl
add
push
inc
rol
aaa
lods
ficompl
xchg
mov
loop
int3
dec
xchg
lock
ja
jg
iret
enter
aad
int3
mov
mov
mov
fwait
imul
in
adc
vpunpckldq
cmpsb
out
add
mov
or
out
mov
dec
mov
sbb
jl
inc
add
loope
pop
mov
into
fcmovu
shl
shl
add
mov
add
nop
xor
push
pop
xchg
mov
mov
mov
lods
fmul
outsl
outsb
pop
push
lcall
inc
insl
aam
sahf
sbb
popf
lret
out
scas
test
loop
pop
push
outsl
add
into
icebp
fdivs
pop
hlt
cmpsb
pop
adc
sub
leave
cwtl
mov
rolb
lock
mov
ret
and
clc
cli
and
pop
fbstp
dec
xchg
cmp
push
jbe
push
ret
movsl
popf
and
into
sub
es
mov
pop
ror
inc
in
inc
dec
cmp
lods
mov
xor
sub
clc
and
add
pop
notb
jp
cmp
push
jmp
mov
or
outsb
cmp
sbb
iret
clc
addr16
fcomps
push
sar
rcrb
gs
fidivs
lahf
cmp
sbb
or
inc
sbb
jge
stos
sbb
clc
adc
cli
arpl
scas
repnz
out
mov
cmpsl
mov
outsb
subl
jne
or
xchg
mov
mov
xor
mov
dec
add
ret
xchg
cmp
mov
nop
push
mov
stos
adc
xor
push
cmp
out
js
mov
jae
cmpl
dec
push
pop
pop
out
mov
inc
sbb
in
mov
adc
adc
int3
add
gs
pop
lret
outsb
nopl
dec
cltd
dec
mov
cmpsb
sbb
mov
mov
outsb
cmp
stc
xor
xchg
or
adcl
sbb
push
jl
aaa
scas
std
push
sub
jae
scas
bound
pop
pop
sub
cmp
scas
jae
xor
jnp
call
xchg
jne
or
mov
ljmp
test
inc
ljmp
insl
test
and
out
sub
xchg
lods
int3
nop
dec
mov
dec
ret
icebp
mov
jle
pop
jno
lcall
mov
cwtl
dec
insl
pop
mov
imul
rcrb
xor
lods
hlt
pop
sub
jecxz
adcb
cltd
mov
testb
movsl
loop
xchg
add
aam
lahf
das
cmc
iret
negl
aad
mov
hlt
adc
sbb
stc
jmp
push
pop
mov
adc
scas
xlat
iret
dec
push
out
fbstp
lret
dec
in
push
cmp
push
int
adc
cli
and
ret
mov
addb
scas
sahf
xchg
fcompl
decl
xchg
imul
push
int
push
cs
test
insl
loopne
jnp
ds
mov
loopne,pt
mulb
adc
inc
pop
cmp
ficoms
push
push
sub
jno
xor
fistpl
cmpsb
push
push
dec
cmc
mov
popa
lea
mov
icebp
shl
jecxz
cwtl
push
aam
inc
movsb
cmpsb
ja
ljmp
rcll
pop
aaa
into
enter
stos
dec
add
adc
dec
xor
loop
mov
xor
clc
pop
jle
adc
ja
das
jno
mov
loopne
je
fldl2t
lods
add
xchg
repnz
push
test
out
nop
fadds
dec
jmp
stc
inc
test
adc
mov
aad
adcb
xchg
test
bound
cmp
jnp
lods
adc
dec
cs
push
dec
mov
out
inc
in
fstps
add
cwtl
push
roll
pushf
sub
fisttps
stc
jge
jl
fdivrl
popf
add
fsubl
fdiv
or
and
mov
sarb
push
jmp
das
mov
in
fwait
scas
mov
mov
sbb
stos
push
addr16
mov
int
fisttps
jle
sbb
out
add
adc
cli
dec
push
xor
shlb
mov
push
add
jle
add
repz
pop
cmp
sub
push
call
lret
jo
sbb
push
pop
ja
pop
jno
and
lds
jle
jbe
add
inc
ret
bound
mov
out
adc
ret
adc
stos
ror
jne
sub
xchg
cmpsb
fidivrs
jge
in
test
push
sbb
jmp
jb
sbb
fs
add
loop
stc
xchg
mov
btc
sbbb
in
bound
pop
cs
jns
jecxz
fadds
repz
xchg
shrl
in
cld
test
lock
ljmp
add
sub
jge
and
jne
lock
adc
scas
cmp
mov
inc
rorb
shl
testb
mov
xchg
adc
adc
push
sub
scas
leave
loop
pop
adc
jp
mov
sub
push
xchg
idivl
repz
aad
sti
mov
daa
xor
pop
rcrb
in
jmp
mov
les
in
fidivrl
leave
test
dec
push
sub
xchg
inc
inc
mov
dec
dec
dec
mov
ss
jbe
xchg
pop
xlat
fidivrs
pop
ret
sbb
cli
andl
nop
mov
nop
outsb
mov
aas
dec
xchg
cmp
fiaddl
sub
mov
sub
outsl
mov
mov
shl
add
das
cwtl
repz
negl
lret
sub
paddd
cltd
arpl
mov
ret
imul
push
iret
mov
imul
outsl
add
aas
sbb
mov
int3
aas
pop
js
push
add
and
jmp
outsb
mov
cmp
ds
adc
in
mov
sub
rorb
push
jo
outsl
shl
xor
andl
push
dec
xor
add
jb
les
je
cmp
nop
out
sub
jne
jle
cmp
and
aas
pusha
lock
es
aaa
ret
xchg
cld
fcoms
imul
cltd
scas
in
jge
jmp
shrl
lods
push
push
in
ret
ret
lock
lret
cltd
adcl
pop
sahf
dec
jmp
call
pop
fnsave
mov
adc
cmp
and
and
pop
loop
cmp
cmpsb
arpl
scas
cmpsl
inc
jns
dec
imul
jnp
jecxz
mov
lahf
mov
cmp
jl
ret
lret
negl
loopne
test
mov
loopne
inc
cmp
inc
into
cmp
fistps
and
es
sbb
clc
sbb
pop
ret
adc
xorl
decl
imul
aad
rcl
sarl
fistl
cltd
mov
push
bound
sub
hlt
faddl
dec
test
cltd
ret
xor
sub
jns
data16
xchg
flds
imul
sti
repnz
sub
ja
mov
mov
andl
mov
xchg
jecxz
test
test
lock
in
mov
mov
jmp
xchg
cmp
andl
outsl
mov
pop
inc
xor
jmp
push
in
push
push
cld
out
and
mov
xchg
fstp
jns
test
add
cli
repnz
sbb
pop
jo
mov
lea
in
and
pop
cmp
jle
pop
fcmovne
push
jae
jb
push
mov
jns
jg
ljmp
jae
cltd
ds
movsb
pop
adc
xor
or
dec
xor
fld
dec
jmp
sbb
dec
add
mov
loopne
std
loope
ret
rclb
sub
ds
dec
jle
cmpsl
add
insl
pop
inc
dec
sahf
insb
push
mov
xor
xor
aad
mov
pop
adc
aam
or
stos
and
clc
xlat
jb
add
pusha
mov
pop
push
cld
iret
rcll
fisubl
xchg
gs
sub
pop
push
outsb
stos
fcmovbe
aas
clc
push
mov
push
xchg
negl
fisubrl
adc
add
fwait
lock
addr16
cmp
pop
rep
or
mov
pop
int
out
pusha
inc
movsb
pop
jmp
int3
jge
xchg
push
nop
das
adc
sub
push
fidivs
mov
xchg
xchg
call
cld
lcall
aam
mov
or
mov
xor
or
into
test
xor
pop
inc
ret
pop
aaa
cmc
repnz
cli
fmull
and
add
lds
loopne
mov
test
mov
xchg
xor
xor
xor
psrlw
jno
and
andb
fimull
icebp
icebp
dec
pop
call
pop
mov
shrl
scas
fcompl
out
adc
cwtl
dec
xor
mov
lods
scas
lods
sar
aam
push
mov
push
loop
mov
mov
mov
into
nop
fisttpll
rcrb
jo
daa
sub
bts
mov
push
dec
lret
lds
jg
pop
stc
rorb
xor
mov
adc
fisubrl
stos
add
add
sarl
jmp
mov
xchg
mov
fcom
cmp
xor
test
adc
mov
hlt
add
pop
addr16
out
daa
lret
push
int
hlt
mov
sub
es
jle
sbb
adc
es
addb
push
xchg
fwait
test
fsubrl
fadd
mov
or
inc
sub
test
stos
lret
push
add
sub
popa
daa
sub
xor
std
in
cmp
cli
add
push
dec
aas
mov
pop
dec
cld
push
xchg
fldt
sarl
lahf
lcall
dec
sbb
dec
in
adc
xor
push
mov
sbb
fcomip
sbb
and
fisttpl
jg
sub
sbbl
jns
dec
xchg
repz
or
cltd
sbb
or
insl
jmp
mov
test
sbb
mov
notl
cltd
lea
push
mov
ss
adc
test
sub
mov
lret
insb
inc
mov
insb
ret
inc
inc
dec
outsl
fs
aaa
push
add
sahf
sbbb
sub
sub
into
lds
das
cli
imul
inc
into
or
ficoms
out
dec
in
out
adc
mov
add
push
call
pop
jo
fldl
xchg
pop
cmpsb
insb
lock
aaa
icebp
xchg
adc
xor
jbe
xchg
push
test
jns,pt
into
mov
in
pop
xor
int
or
xor
xor
out
loope
dec
xchg
jo
popa
and
outsl
sbb
scas
jo
inc
push
jecxz
enter
lods
sahf
hlt
mov
jge
mov
inc
in
fwait
push
divb
mov
popa
xchg
mov
clc
xlat
cmp
xchg
lcall
pop
daa
je
adc
jecxz
add
jl
cmp
loop
lea
push
mov
das
cwtl
push
cmp
cmp
sub
jecxz
popa
push
inc
ficoml
push
aaa
scas
mov
lcall
orb
add
ja
and
xor
pop
push
inc
das
add
mov
and
stos
mov
pop
push
and
xchg
pop
cmpsb
jmp
cmpsb
pop
outsl
fcomip
pop
lret
out
movsl
movsb
sahf
jo
xchg
shll
imul
nop
into
and
pop
pop
add
test
xor
test
xor
iret
xor
movsl
fidivl
out
lret
mov
fisttpll
lods
ja
jl
jae
jae
faddl
lcall
loopne
outsb
inc
sub
xor
in
fs
mov
lds
ja
mov
pushf
cmp
in
js
movsb
aam
xor
cwtl
rclb
or
jo
or
cmp
lock
sub
jnp
fwait
jmp
stos
adc
aad
test
cmp
mov
mov
xchg
pop
fistpll
or
and
dec
xchg
fisubl
je
mov
xlat
rcr
cmp
insl
mov
jmp
cmpsb
lret
adc
jl
sbb
mov
ret
mov
xor
gs
cld
adc
daa
pop
cltd
xor
ds
test
or
rol
fdivr
fcmovne
jmp
repnz
push
add
sub
mov
jbe
pop
jle
cmp
xchg
pop
test
cwtl
test
jmp
loope
pushf
in
add
jns
divl
mov
sbb
mov
cltd
rorl
shl
and
mov
jno
flds
add
mov
adc
mov
cmc
in
push
arpl
jb
sub
pop
mov
jle
aaa
mov
inc
fwait
sbb
rcl
xchg
pop
js
sbb
cld
mov
cmpsl
mov
xchg
mov
mov
lret
inc
adc
xchg
int3
jns
dec
pushw
les
ljmp
sub
iret
sub
inc
lret
cmpsl
inc
iret
les
inc
shlb
push
mov
pop
lret
bound
pushl
aas
imul
call
xchg
xor
cld
inc
jle
xor
jns
pop
ja
pop
xor
push
xor
jnp
mov
add
je
mov
cmpsl
rolb
jb
sbb
sbb
mov
mov
cli
jle
xlat
cs
and
lea
negb
lock
mov
or
sbb
push
scas
push
out
jb
push
pop
dec
data16
in
in
push
ret
pop
ret
jnp
cmp
add
mov
lret
cmp
mov
insl
add
pop
outsl
xor
sbb
mov
nop
fmuls
mov
mov
or
mov
insl
loop
mov
or
and
pop
xchg
cmc
ret
ficomps
inc
pop
popa
and
sbb
cmp
adc
cmp
imul
add
mov
pop
rorb
sar
pop
repz
mov
jbe
sarb
cltd
push
sbb
loop
stc
mov
add
mov
push
sub
jns
inc
push
ret
ficompl
push
shll
sarl
adc
lods
xor
add
add
stc
fnstsw
cmp
movsb
push
and
xchg
stos
pop
adc
or
ds
insl
push
xor
ficoml
outsb
push
mov
sbbl
mov
idiv
xchg
lock
icebp
adc
lock
pop
lds
mov
sarl
jb
cmp
orl
push
pop
in
or
add
push
imul
pop
outsb
xor
xchg
shrb
rcpps
fwait
cltd
jmp
rcrb
into
into
std
push
jb
ja
fcmovu
jmp
push
out
push
jne
insb
call
adc
scas
mov
mov
xchg
insl
les
jecxz
and
dec
je
xor
sbb
pusha
scas
orl
aas
cli
cmpsl
mov
mov
test
dec
movsb
ljmp
aad
daa
lret
inc
push
and
sbb
mov
pop
popl
dec
out
jne
xchg
and
jbe
adc
iret
cmc
sub
and
repnz
movsb
ja
inc
jmp
insl
mov
lods
jge
adc
add
pop
gs
iret
pop
pop
lea
es
sarb
dec
push
rorb
pop
fs
jl
mov
outsb
in
mov
cld
in
outsb
mov
cmp
test
mov
clc
addr16
add
out
mov
jmp
push
iret
in
pusha
jne
or
cmp
or
mov
dec
xchg
jle
test
mov
std
add
mov
outsb
pop
ficomps
pop
faddp
adc
mov
mov
push
out
sub
data16
xchg
movsl
or
dec
mov
ret
imul
dec
loopne
mov
jne
and
stos
stos
imul
enter
cmc
sbb
popa
pop
cmp
jae
cli
rolb
fs
js
cmp
inc
imul
test
lahf
push
sbb
push
mov
gs
mov
mov
xchg
out
ret
mov
mov
push
scas
add
fcompl
fadds
orb
addr16
sbb
and
adc
cmp
ds
jge
pushf
les
jmp
imul
xor
arpl
jae
add
sub
jl
jne
mov
push
adc
jae
cmp
xor
mov
sbb
adc
mov
adc
pop
arpl
push
xlat
nop
mov
xor
mov
cli
icebp
into
xchg
daa
lea
std
aam
mov
pop
inc
dec
inc
mov
fcompl
repz
xchg
dec
flds
iret
daa
popa
xchg
add
mov
mov
xchg
sub
adc
jbe
test
dec
mov
jae
and
dec
cmp
ljmp
xor
xor
inc
pushf
or
in
bound
aam
sarl
stos
jbe
dec
and
in
or
in
aam
dec
negl
into
stc
push
cmp
insl
jbe,pn
mov
outsl
inc
cmpsl
xor
dec
outsb
add
xlat
ret
std
and
int3
sahf
fidivrs
pop
ljmp
int3
add
or
push
sub
xchg
jo
inc
pop
pop
movsb
sbb
jmp
fimuls
mov
jg
sub
scas
scas
ret
jl
cmp
fildll
inc
and
pushf
inc
sub
ss
arpl
mov
out
aaa
or
outsb
lods
and
xchg
lods
gs
cmp
xchg
pcmpeqd
mov
jmp
movsl
cli
mov
test
adc
ret
mov
test
pop
xor
int
ret
fistpl
mov
pop
dec
jne
cld
call
daa
add
imul
cmp
cli
xchg
andl
xor
xchg
sub
cltd
les
movsb
sub
cmp
outsb
adc
loope
mov
push
lret
xlat
ret
adc
in
out
mov
loope
popw
clc
ss
in
mov
icebp
jno
mov
mov
dec
jbe
dec
cmp
pop
fs
lcall
sub
dec
add
loopne
cld
ja
inc
faddl
xchg
pop
pop
call
into
and
nop
mov
js
add
loopne
inc
and
mov
cld
mov
jb
xor
sbb
insl
std
or
fisttps
sbb
sub
popl
push
sahf
lods
inc
fisubrs
xchg
aas
or
mov
icebp
add
decl
pop
popf
mov
push
xor
mov
adc
inc
push
jg
aaa
and
imul
icebp
roll
and
adc
sbb
jne
aaa
xchg
das
arpl
mov
movsl
mov
adc
mov
push
adc
pop
xor
rcrl
jmp
cli
xor
ret
outsb
inc
jns
xor
dec
add
in
fidivs
pusha
outsb
mov
cmpsl
lahf
ds
loope
push
xchg
lods
rclb
inc
mov
jnp
push
cmp
into
push
and
pandn
loop
imul
mov
inc
mov
lods
and
inc
jno
std
out
pop
daa
push
jecxz
sbb
out
cmp
jecxz
outsl
adc
add
into
mov
and
push
inc
push
and
dec
test
mov
dec
mov
jnp
inc
xor
xor
push
jae
and
pusha
adc
jle
dec
test
icebp
aaa
insb
and
es
jb
xchg
mov
fistl
test
mov
mov
mov
cmp
cmp
ss
insl
push
dec
stos
test
add
dec
xchg
add
lods
lahf
cli
pushf
roll
add
inc
cmc
pusha
movsb
iret
jle
mov
xchg
fnstsw
xor
push
xor
nopl
sbb
or
pusha
ja
je
out
sbbl
jae
fs
rcl
xchg
cltd
in
repz
mov
mov
int3
mov
dec
daa
arpl
cmc
adc
fucomip
xor
dec
mov
cmp
inc
push
mov
out
mov
dec
pop
xor
pop
pusha
and
cmp
add
pusha
sbb
int
jno
testl
lods
sti
sub
mov
push
in
jb
pop
mov
popa
sahf
shll
std
pusha
imul
mov
stos
sub
inc
in
or
cmpsb
shll
mov
xchg
cld
inc
shl
loopne
in
xchg
mov
jae
mov
lea
ret
inc
sub
pop
adc
scas
cmpsl
mov
pop
orl
cmp
pop
int3
aas
mov
pop
pop
pop
or
daa
or
into
sub
dec
pop
lahf
aam
stos
fstpt
pop
js
scas
ljmp
add
outsb
movsb
dec
cmp
and
jl
xor
jnp
push
cld
ljmp
pop
or
mov
bound
inc
mov
dec
pop
mov
sahf
push
or
cmp
mov
ljmp
out
stos
loope
adc
lret
cmpsl
pop
cmp
dec
jl
dec
mov
add
inc
cmpl
int
mov
shlb
aad
add
cmp
cwtl
add
mov
ret
popf
add
mov
jp
out
popa
cmpsb
add
ljmp
shl
ljmp
inc
sub
cld
adc
es
push
fbstp
push
and
loopne
or
ret
out
xor
arpl
and
sub
cmp
add
pop
imul
xchg
mov
in
pop
inc
repnz
jge
sbb
rcrb
lret
mov
pop
inc
ja
sti
pop
add
inc
out
ds
mov
push
fidivrl
out
inc
push
fbld
cmpsb
add
and
popa
pop
aaa
imul
enter
cmpsb
data16
add
sti
mov
or
movsb
adc
sub
fnstenv
out
dec
dec
or
mov
mov
imul
push
mov
cmpb
and
pop
xor
inc
lock
repnz
addb
int
xchg
icebp
push
div
andl
push
push
out
ret
sbb
aad
sti
push
push
dec
shll
mov
pop
lahf
jnp
add
jmp
inc
pusha
sbb
sub
xor
pop
mov
shlb
sub
push
repz
sub
jnp
adc
dec
sti
lcall
cmc
xor
mov
xchg
flds
pop
inc
adc
arpl
cwtl
fwait
outsb
dec
inc
out
pop
xchg
and
popa
data16
dec
in
sbb
lods
lods
push
xor
sbbb
imul
outsb
and
cs
popf
mov
sub
inc
inc
mov
jg
pop
and
xor
push
shr
xchg
cmp
bound
roll
xchg
iret
ja
xchg
jl
jg
stc
cmpsb
mov
addr16
cmpsb
dec
push
and
roll
in
adc
jne
in
inc
mov
je
cmp
push
outsb
add
roll
fs
pop
cld
mov
pop
pop
nop
mov
mov
xchg
pop
ljmp
pusha
push
fiaddl
sbb
ja
mov
pop
jl
aam
arpl
es
sbb
or
mov
loope
mov
paddsw
and
insb
repnz
test
mov
add
cs
loopne
xchg
stos
mov
sub
loop
dec
pushf
mov
js
and
inc
ss
mov
adc
adc
mov
mov
jl
mov
jo
sbb
xchg
leave
adcl
adc
loope
push
and
xor
xchg
lock
and
jle
mov
mov
in
cmp
xchg
mov
out
push
into
jo
xchg
xchg
sub
dec
cs
lock
jmp
shrl
push
mov
mov
adc
adc
adc
add
xor
es
xor
mov
mov
in
pop
fcomps
and
in
call
push
inc
or
je
inc
icebp
ss
loope
xor
and
and
sbb
iret
jg
mov
cmpsb
add
test
addr16
fisttps
mov
pushf
sbb
aad
ss
push
pop
ret
cmc
mov
imul
adc
pop
pop
cmp
add
test
sbb
sub
inc
pop
mov
inc
addb
adc
mov
es
fisubrs
lret
fcoms
xor
fbld
push
shl
xchg
xor
cwtl
mov
inc
mov
mov
cwtl
push
popa
testl
ss
or
xchg
fcmovnbe
insl
lea
mov
ret
cli
or
insl
dec
aaa
ss
cmpsl
repnz
movsl
andb
popa
sub
idivb
divb
push
movsl
dec
pushf
jmp
xor
movsl
adc
je
sbb
dec
adc
mov
popfw
xlat
jp
sub
ss
push
push
les
xor
lods
jne
sub
and
enter
xchg
sub
inc
mov
sarb
sbb
inc
push
mov
xchg
jle
gs
lds
cmpsb
add
dec
mov
les
and
arpl
xchg
ss
std
cmp
cmp
stos
sbb
insb
sub
xchg
cltd
mov
pop
loope
rolb
imul
jl
hlt
cwtl
stos
xchg
and
or
movhps
fiadds
cmp
aam
lahf
fbstp
outsl
mov
orb
xorb
cmp
out
aad
insl
or
imul
dec
icebp
aas
mov
jo
mov
ret
xor
shll
fs
idivb
ret
sbb
mov
dec
pushf
jp
cmp
leave
mov
inc
out
mov
push
sub
or
loop
and
and
jmp
mov
sub
cwtl
sub
notb
sub
adc
mov
xor
lret
les
sti
mov
nop
frstor
js
push
cli
xchg
loop
out
fnstenv
int3
dec
jb
jb
sbb
repz
push
jge
mov
pop
and
outsb
add
jecxz
or
mull
pop
inc
xchg
imul
out
cmpb
ret
add
pop
fstp
add
out
sahf
shlb
stos
shrl
dec
mov
inc
pop
out
jb
call
pop
sbb
rcrl
in
inc
xchg
inc
cmpsl
adc
dec
sbb
aam
push
push
cmp
iret
pusha
aas
scas
jmp
lret
into
test
aad
or
aad
or
sti
sub
loopne
push
clc
pushf
or
out
cmpsb
iret
jle
js
inc
lea
sub
call
mov
inc
stos
add
jl
mov
pop
inc
insb
inc
or
inc
mov
mov
adc
repz
push
dec
pushf
inc
mov
mov
jnp
hlt
inc
inc
jl
lock
jecxz
ja
inc
add
ds
test
xorl
test
jecxz
mov
dec
es
xchg
mov
fcmovnb
xchg
in
sbb
adc
cli
mov
movl
or
dec
add
jbe
icebp
rclb
xor
sar
adc
sbb
test
stos
push
loop
test
orb
pop
cmp
jns
sbb
jg
sub
mov
pop
sti
sbb
lea
ds
adc
lock
or
xchg
scas
adc
or
cld
adc
movsb
mov
mov
mov
jp
push
sub
pop
pop
xor
add
push
inc
push
sub
jnp
cs
fxch
nop
cmp
pop
test
test
dec
outsb
ss
testb
jle
jns
add
test
sbbb
xor
subl
lahf
xor
flds
jg
jg
fmuls
dec
dec
scas
xchg
fsts
and
imul
sub
imul
jo
repnz
lret
mov
lret
xchg
aas
notb
repz
dec
dec
leave
fstpt
subb
lock
out
and
aaa
sbbb
dec
shlb
or
dec
lock
out
xchg
sbbb
leave
pop
fmull
mov
leave
xor
mov
pusha
mov
add
iret
lret
xlat
flds
int3
fldl
jnp
repnz
icebp
sub
sbb
cmp
pop
xor
adcb
cmp
daa
pop
les
pusha
lret
dec
pop
pop
stos
shlb
hlt
test
push
inc
pop
addr16
mov
aad
push
daa
loopne
inc
mov
or
sbb
xchg
lcall
xchg
jb
lods
rcl
add
cli
stc
icebp
fisubl
outsb
mov
sbb
scas
hlt
aad
outsl
mov
ds
mov
dec
pop
sahf
jb
popa
fs
divl
xor
ljmp
movsb
es
mov
mov
movsb
pushf
xchg
mov
push
sarl
test
inc
mul
mov
push
sub
loop
ficomps
aad
fisttpll
jle
mov
call
xor
lds
mov
inc
in
repnz
sub
mov
out
jo
add
cmpsl
rorb
nop
push
cmc
adc
aaa
data16
and
popf
push
xchg
mov
imul
mov
jae
xchg
mov
pop
faddp
shrl
xchg
xchg
mov
jnp
mov
pusha
shlb
shl
gs
add
ret
xor
pop
mov
test
out
ljmp
jns
push
out
ja
mov
ss
jge
cli
js
jns
daa
or
cmpsb
sub
nop
data16
dec
pushf
hlt
cli
pop
fwait
mov
mov
rorl
rol
mov
pushf
xor
std
adc
stos
mov
lret
jns
scas
stos
xchg
xor
fsubr
leave
ss
int3
inc
xchg
je
lock
dec
repz
xor
push
mov
dec
ret
pushf
orl
outsb
shr
cmp
fbld
addr16
inc
mov
xchg
leave
fldcw
adc
pop
mov
push
repnz
dec
add
cmp
add
movsl
mov
loope
cmpsb
push
loopne
xlat
xor
pusha
and
nop
push
dec
into
lock
mov
inc
repz
mov
inc
jae
mov
xchg
mov
mov
add
je
adc
and
xor
cmc
out
lahf
pop
mov
loopne
mov
mov
aam
hlt
mov
fcmove
nop
stos
xchg
nop
mov
out
fbstp
lahf
mov
add
mov
pop
data16
stc
ret
imul
outsl
push
xor
sub
dec
aad
lahf
out
xlat
shrb
stos
cwtl
test
cwtl
out
es
add
popa
inc
adc
inc
pusha
leave
iret
loop
xchg
and
jnp
dec
loopne
mov
fisubrs
mov
stos
stc
rcll
scas
inc
lcall
insb
xchg
test
loop
and
xchg
jnp
stos
push
loop
ret
xchg
out
add
push
sub
stos
fstps
notb
xchg
sbb
js
fcoms
fwait
test
dec
xor
add
rolb
dec
sbb
pop
fwait
lods
in
sub
jp
push
das
out
js
fistl
sbb
mov
pop
jb
mov
out
test
das
lock
push
jecxz
hlt
mov
ret
mov
push
mov
mov
fsubl
mov
cmc
fimull
data16
daa
pop
in
jne
mov
ficoms
arpl
test
xlat
lret
inc
and
mov
clc
dec
pop
daa
or
and
xor
xor
test
xchg
or
mov
fmull
or
pop
adc
inc
aam
fidivs
loopne
in
test
dec
push
sbb
mov
scas
cmpsl
popf
mov
lods
ds
xlat
arpl
leave
out
xor
push
sbb
int3
dec
shl
loop
mov
je
fildll
mov
fwait
stc
notb
rorb
cltd
jmp
push
sbb
rcl
xchg
lods
int3
cmp
pop
mov
lcall
jne
jge
test
cmp
adc
inc
cltd
xchg
fists
cmp
repz
ss
fistpll
adc
js
inc
mov
cmpsb
adc
mov
aaa
xor
sbbl
lea
inc
loope
or
addr16
loopne
std
sub
fadds
lret
pop
xor
popf
arpl
add
cmp
mov
xchg
push
fidivl
jo
lahf
xchg
mov
sub
xor
jb
ds
xchg
imul
add
mov
mov
xor
mov
test
and
push
addr16
push
push
mov
int
in
xchg
dec
xchg
jle
loopne
or
ret
rcrb
daa
adc
outsl
out
pop
cmp
icebp
aam
in
or
adc
sub
call
xchg
je
add
iret
aam
push
enter
mov
mov
rorl
bound
pop
mov
mov
cld
fstpl
ret
dec
leave
or
xor
loopne
and
sub
lods
cmc
dec
push
xchg
mov
mov
fisubs
icebp
cmp
roll
inc
mov
out
shr
data16
out
dec
insb
push
cwtl
xor
sarl
ljmp
push
push
fnstsw
orb
jmp
shll
fs
mov
jge
push
inc
cmpsl
inc
insb
inc
add
lods
or
or
adc
repnz
scas
mov
or
mov
out
ret
jecxz
mov
xchg
jge
lods
dec
aam
xor
mov
ss
dec
mov
mov
iret
cli
mov
adc
loop
aad
out
mov
dec
dec
pop
popa
out
mov
mov
cmc
adc
incl
add
std
mov
js
stc
mov
jl
or
pop
sbb
jg
sub
xchg
mov
push
rep
ljmp
or
aam
pop
jno
sarb
adc
fidivrl
pop
push
xchg
scas
push
in
js
sar
and
mov
inc
pop
mov
xor
roll
mov
enter
loope
adc
xor
mov
popf
cltd
push
and
jne
out
sub
ret
out
push
cmp
enter
pop
push
bound
pop
bound
addl
cmc
jl
cwtl
bnd
mov
fs
stos
xor
xchg
xor
aam
inc
daa
rcrl
pop
jge
in
mov
jne
mov
fistpll
add
pop
add
ret
repnz
out
and
mov
or
aaa
loope
out
movsl
inc
mov
clc
aaa
rol
lea
mov
clc
in
mov
pop
cmp
push
jnp
and
add
xchg
pop
pop
dec
sbb
sbb
mov
xchg
lret
pop
inc
or
mov
xchg
xchg
cltd
jae
nopl
sub
das
sub
dec
mov
leave
fdivrp
add
outsb
sbb
test
and
add
sbb
in
cwtl
xor
fbstp
and
daa
cmp
stos
xor
std
popa
push
push
insb
cmc
dec
lods
daa
jecxz
inc
sbb
leave
jecxz
or
shlb
xor
adc
mov
divb
js
xchg
and
jb
hlt
dec
in
mov
js
imul
jns
arpl
mov
in
sarb
dec
outsl
ds
add
jns
dec
jge
jae
cwtl
sub
cmp
xchg
test
xor
scas
add
pop
adc
pop
test
sub
add
jno
jmp
fistpll
adc
xor
dec
adc
stos
adc
mov
test
es
push
push
loopne
insl
leave
es
std
pop
cmpsl
push
fwait
test
sbb
jge
je
push
push
sbb
sbb
daa
push
mov
mov
sub
xor
in
loopne
inc
xchg
jnp
sbbb
pop
inc
cltd
dec
and
stc
and
fisubl
jo
mov
loopne
out
test
movsb
mov
repnz
loopne
sbb
dec
out
fstl
and
dec
out
inc
rolb
loop
sub
test
mov
mov
decl
add
mov
inc
fildll
and
add
ds
aas
cld
xchg
mov
inc
mov
and
mov
and
cmp
fneni(8087
cmp
and
test
clc
cmp
add
adc
lock
dec
stos
mov
test
jmp
mov
fdiv
test
stos
xchg
xchg
shrl
dec
sub
sub
push
int3
pop
lods
cmpsl
in
out
mov
pop
fstpl
pop
jno
daa
mov
movsl
js
inc
nop
sbb
movsb
mov
call
testb
pop
mov
sub
je
aad
xchg
mov
jns
jle
shll
mov
pushf
pushl
mov
dec
and
repnz
pop
imul
xchg
stos
jo
aas
fnstcw
sti
inc
stos
daa
mov
jl
shll
movsb
cmp
inc
les
xor
mov
sbb
mov
jmp
inc
into
imul
in
jg
jecxz
das
push
push
jo
aas
sub
ja
stos
ljmp
mov
sbb
movsl
inc
aaa
push
add
arpl
inc
xchg
cld
push
setle
jnp
jns
mov
xor
test
loopne
pop
mov
rcrb
inc
loop
xchg
sbb
loope
js
add
ljmp
idiv
jbe
sub
shrl
addr16
xchg
cmpxchg
cmp
inc
daa
negb
sbb
scas
xchg
dec
or
dec
or
ss
popa
dec
dec
jo
pop
int
js
les
loope
mov
shll
iret
pop
insl
push
lret
adc
mov
insl
cmp
cmpsl
pusha
inc
lahf
xor
cmp
xor
inc
dec
ds
ret
out
loop
lds
sbb
arpl
iret
jmp
fwait
aad
icebp
dec
push
clc
cmp
and
and
dec
cmp
and
rclb
jl
jmp
out
cmpsb
sbb
jmp
cmp
psubb
sbb
dec
and
mov
and
push
mov
add
add
fldenv
jmp
js
je
cs
cmp
push
mov
mov
into
lcall
arpl
std
sbb
lret
xor
daa
cmpsb
ss
mov
xor
fnstenv
mov
push
fcompl
aad
jge
xchg
aad
shrb
sti
call
movb
data16
dec
push
shll
xor
inc
mov
pop
dec
sbb
hlt
mov
fcoml
dec
xor
and
pop
or
ret
sbb
repnz
xchg
pop
repz
lods
push
fidivs
push
mov
xchg
or
sub
and
lea
lcall
pop
in
jne
adc
pop
and
xchg
cs
mov
push
movsl
xchg
pop
jo
arpl
ret
add
es
pushf
and
adc
cwtl
cmc
icebp
cwtl
sub
iret
pop
std
js
dec
imul
dec
cmp
inc
cmp
pop
cli
icebp
fsubrs
ret
imul
jl
inc
out
jns
test
mov
mov
adc
xorl
push
push
and
jecxz
pop
shll
sbb
push
xchg
daa
int
loop
pop
loope
inc
movsb
in
xor
fsubrs
jbe
imul
lret
fsts
rcr
cmp
addr16
dec
idivl
stc
jnp
xor
or
test
shlb
ret
rcrl
add
std
data16
pop
or
movsb
imul
lcall
add
or
push
in
cmp
sbb
push
lods
mov
clc
into
jecxz
jmp
jmp
xchg
data16
sub
pop
test
pop
mov
push
lahf
pushf
cmpsb
imul
ja
mov
adc
inc
rcll
mov
fidivs
js
push
pop
fisttpll
inc
scas
xchg
mov
aam
daa
mov
adc
sub
insl
mov
test
sub
movsb
push
jle
add
cmpb
pop
arpl
mov
out
jbe
mov
hlt
arpl
pop
xor
push
mov
cs
jecxz
rcrl
mov
mov
pop
mov
data16
out
mov
add
out
movsb
mov
push
mov
xor
stos
push
dec
ja
int3
xchg
test
and
idivl
fcomps
enter
xchg
push
xchg
push
arpl
xor
lods
fcoms
and
xor
jg
daa
stc
mov
sub
out
mov
ljmp
icebp
cmp
xor
js
call
xchg
imul
sti
mov
dec
arpl
lods
or
mov
test
mov
imul
cmp
in
roll
in
std
push
test
fsts
into
adc
mov
and
adcl
xor
stc
jl
lret
lahf
xor
jp
dec
cmp
jae
stos
int
jle
ret
in
lods
cmp
xchg
mov
pop
mov
out
outsl
je
fdivrs
test
cmp
outsb
mov
push
sub
mov
xchg
shlb
push
push
jne
mov
mov
mov
cmp
xchg
pop
rcll
ja
lret
pop
xor
stos
cmpsl
scas
es
and
rolb
pop
lods
sbb
fimull
shl
int
mov
pop
stos
mov
mov
adc
push
dec
jnp
mov
jmp
out
jp
sub
sbb
sbbl
jecxz
outsl
sbb
push
fs
dec
inc
js
adc
gs
test
xor
xor
dec
sub
lret
dec
sbb
fldt
shlb
and
stos
pushf
xor
jl
shlb
pop
je
jmp
popf
mov
test
scas
jbe
jns
stc
jle
cmpsl
add
in
cmp
push
or
cs
cmp
imul
sub
sub
pop
sarl
loop
test
or
iret
loope
loopne
mov
aaa
scas
mov
mov
cld
popa
adc
add
add
movsl
aam
push
sub
pop
pop
add
scas
mov
sub
push
jle
mov
add
mov
cld
pop
or
push
decl
es
rolb
in
xchg
mov
xor
cmp
fsubrp
inc
xor
xor
cmpsl
rolb
xlat
out
dec
mov
lock
popf
xchg
dec
lea
test
xchg
jp
xchg
aas
test
push
imul
mov
xor
hlt
xor
mov
ss
call
mov
or
mov
cltd
jp
adc
inc
sub
and
divl
out
dec
xchg
leave
xchg
out
mov
stos
cltd
out
das
push
jl
mov
pop
std
push
xor
rcll
cmc
dec
push
xchg
cmpsb
mov
stc
pop
sub
fisubrl
xchg
adc
inc
fcmovnb
clc
cmp
add
das
mov
pop
xchg
jo
cwtl
je
int3
in
popf
insl
lret
stos
push
and
in
scas
cmpsl
mov
dec
pop
mov
sub
xor
cmp
fst
jge
inc
cwtl
add
xor
sbb
stc
daa
xor
ds
jnp
mov
lods
out
jp
fldenv
mov
repz
xlat
lds
jl
cmp
or
ret
dec
push
jge
inc
lret
lds
in
fisttps
xchg
rcrl
aaa
dec
and
or
jmp
ds
repnz
pop
inc
idivl
sbb
or
stos
jnp
sbb
cmpsl
mov
push
xor
dec
ret
jmp
push
and
mov
pop
sti
pop
mov
sbbl
aad
gs
xor
in
imul
scas
xorb
xor
dec
dec
lea
js
fwait
xchg
sub
pop
mov
pushf
imulb
inc
arpl
mov
inc
xor
mov
adc
mov
fimull
push
das
jecxz
cwtl
and
inc
out
imul
push
or
repz
rorb
inc
inc
in
push
aam
fsubrs
sti
adc
xchg
mov
loop
add
cmp
mov
lret
mov
sbb
add
inc
xor
fs
mov
pop
icebp
inc
mov
xor
movb
out
pop
testb
sbb
popf
pop
mov
push
subb
mov
push
xchg
pusha
push
pushf
dec
popa
push
xor
xchg
jge
shl
jns
stos
mov
mov
cli
test
xchg
fildl
rolb
arpl
inc
push
sahf
add
loopne
push
lds
mov
mov
mov
mov
add
adc
mov
rcrb
call
inc
imul
lea
xor
sahf
jmp
insl
adc
jmp
jmp
mov
mov
dec
inc
scas
cmp
adc
mov
xor
cmp
cmp
divb
or
out
jns
push
lret
mov
jge
iret
negl
adc
imul
ss
cmp
arpl
js
add
andl
imul
das
mov
in
sub
xchg
popa
jns
in
rclb
mov
jb
es
jno
push
lea
lock
xor
mov
cli
jl
ljmp
mov
or
loop
mov
fstp
into
mov
or
sub
mov
cli
push
xor
mov
outsl
scas
pop
xchg
xlat
cmpsl
and
mov
pusha
jne
loope
sub
in
fs
push
pop
scas
aam
or
mov
dec
and
add
or
sti
icebp
inc
adc
xchg
dec
stos
test
stc
bswap
jo
fbld
scas
lds
and
cmp
push
je
cmp
test
sahf
mov
icebp
loop
les
arpl
push
pushf
push
push
pushf
inc
sub
movsb
pop
jnp
imul
inc
lock
jmp
xorl
mov
aaa
or
vminss
inc
mov
sub
xlat
scas
cmp
scas
inc
or
ss
out
pop
mov
stos
mov
inc
mov
jae
out
rolb
lcall
divb
enter
je
cmc
arpl
jle
addr16
stos
insb
dec
add
xlat
popf
adc
mov
mov
push
imul
icebp
xor
movsb
pop
or
imul
xor
push
sbb
pop
or
jmp
dec
push
mov
das
fsubrl
mov
pusha
sahf
or
pop
call
dec
or
inc
or
adc
and
cli
insb
ret
xchg
sbb
jo
dec
aad
jmp
pop
add
push
jecxz
pop
add
test
pop
call
jne
adc
xor
fists
pop
mov
dec
mov
inc
push
loopne
adc
fwait
xor
outsb
out
roll
dec
and
lcall
sbb
clc
insb
pop
rol
xor
inc
outsb
clc
aam
sbb
pop
sbb
mov
mov
mov
sbb
jb
insb
out
pop
rcll
aam
xchg
add
jo
xchg
and
pop
aas
sarb
data16
dec
dec
or
pop
xor
add
scas
pop
mov
out
outsb
in
out
sub
inc
stc
icebp
imul
popa
loop
xchg
test
mov
mov
pop
sbbl
not
idivl
inc
sbb
mov
inc
aas
je,pn
ret
push
pop
imul
test
call
add
out
mov
in
adc
sbb
mov
in
icebp
aas
nop
shlb
roll
push
push
lahf
andl
rolb
dec
fstl
push
xor
cld
mov
lret
adc
pop
jns
add
inc
hlt
adc
jne
add
not
dec
and
add
mov
sti
xor
aas
adc
ja
pop
adc
inc
mov
adc
mov
aam
jno
enter
add
adc
pop
sub
cmp
jns
sub
jo
xor
fdivs
imul
inc
mov
es
mov
mov
xor
dec
inc
inc
mov
int
cmp
adcb
repz
shlb
daa
mov
xchg
adc
sti
cmp
insl
test
and
into
je
mov
mov
mov
in
jmp
push
pop
aas
inc
sbb
fstl
push
dec
jl
fs
mov
shll
pop
addb
fldenv
mov
cltd
sbb
lods
push
les
jne
and
add
mov
cwtl
cld
adc
inc
dec
int
ds
xchg
dec
push
adc
stos
rcr
mov
push
xchg
test
inc
inc
sbb
repnz
jnp
mov
lcall
inc
inc
sbb
xchg
arpl
fists
cltd
fcoms
iret
out
imull
mov
dec
mov
jno
sub
jle
aas
jl
int3
mov
cmp
addr16
xor
icebp
sub
fadd
imul
daa
mov
push
sahf
cmp
fwait
ss
repnz
add
test
and
xchg
mov
or
scas
or
jne
jecxz
adcb
jne
add
and
add
adc
enter
cmpsb
mov
cmpsl
lds
cli
aam
mov
mov
or
in
icebp
xchg
loopne
pop
hlt
in
test
test
pop
mov
xchg
add
jns
sub
std
aas
xchg
pushf
mov
xor
fbstp
or
leave
aad
push
mov
pop
xlat
cmpsl
mov
xor
outsb
outsl
in
cmp
repnz
pmulhw
out
mov
fcomp
mov
mov
xchg
cmp
adc
cmpsl
push
into
jl
cmpsb
or
std
dec
push
xorl
lods
jno
div
dec
pop
pusha
mov
nop
cmp
aaa
movsl
adc
out
add
jge
jle
ss
fwait
enter
or
or
add
shlb
orl
xchg
int3
adc
mov
out
push
push
sub
push
pop
popa
mov
mov
push
mov
jmp
sub
mov
test
inc
int3
and
xor
stc
sub
xor
add
enter
scas
incb
or
mov
sub
xchg
xchg
xor
into
lret
insl
mov
push
ds
lock
jne
add
and
dec
mov
scas
in
fs
dec
dec
lock
in
fwait
pop
icebp
xchg
adc
add
pop
cltd
push
ljmp
cmp
xchg
xlat
jbe
add
adc
xchg
inc
mov
jb
gs
lock
mov
nop
ret
aas
inc
lcall
xchg
ret
insl
xor
scas
mov
add
jns
outsl
and
mov
mov
jecxz
and
dec
repz
movsl
hlt
leave
outsl
mov
movq
push
lcall
stc
mov
inc
xor
js
inc
pop
add
jo
sti
faddl
leave
rorb
dec
out
jb
gs
mov
add
or
popf
cmp
and
xchg
sahf
sbbb
arpl
repnz
jns
jge
daa
test
out
xor
cmc
ret
lods
dec
push
mov
negl
das
js
sub
jg
test
or
fs
in
adcb
dec
dec
loop
pop
sahf
mov
sar
pop
lea
cs
add
jnp
push
jp
inc
mov
dec
or
rcrb
xor
mov
pop
push
rcr
xchg
push
lods
cmp
pop
cmp
mov
clc
pop
je
pop
sti
jecxz
icebp
mov
pop
fmull
xor
xor
inc
cmp
jnp
lds
faddl
mov
sub
ret
dec
aas
rcl
xchg
push
mov
daa
mov
sub
shll
cmp
or
inc
int
xchg
adc
lds
iret
js
lret
add
insl
xchg
stc
push
cwtl
push
int3
orb
mov
mov
or
gs
mov
lods
lods
lcall
mov
inc
mov
mov
jne
fs
dec
push
inc
sub
dec
add
in
data16
lods
lea
test
repnz
jb
fmul
iret
mov
hlt
iret
jb
xchg
cmpsl
sub
les
movsb
dec
add
mov
popa
and
stc
test
filds
out
mov
repz
adc
es
sti
addr16
lods
dec
xor
pop
inc
test
xchg
cld
push
rcrl
dec
xorb
jl
lods
mov
xchg
mov
pop
stc
pop
push
testl
hlt
mov
jns
stc
xchg
push
das
jbe
leave
imul
xchg
pop
cmc
rolb
in
aad
in
xorb
pop
adc
test
and
fs
xchg
xor
ror
jne
neg
js
pop
xor
and
stos
jno
scas
mov
adc
rorl
pop
iret
not
lret
and
sub
adc
or
jnp
xchg
bswap
stos
dec
push
cmp
int3
pop
cmpsb
fimull
jp
cwtl
enter
cli
and
mov
jb
pop
cmp
inc
cmp
shlb
add
gs
jbe
call
test
popa
mov
andb
cmp
inc
jae
mov
or
and
jmp
mov
pop
sbb
jp
pushf
mov
inc
and
or
mov
out
test
cli
dec
outsb
popa
imul
in
lds
xor
cmpsl
insb
cli
mov
jmp
or
shrb
scas
dec
sub
popa
xchg
shll
repnz
arpl
insl
sahf
adc
int3
mov
in
xchg
pop
dec
fs
xchg
jb
cli
into
adcl
mov
fcompl
loope
cs
mov
or
lods
dec
notb
ss
fsubrp
iret
subb
xor
outsb
test
int
daa
xor
test
ljmp
xor
adc
fs
add
xor
push
ljmp
mov
dec
ds
pop
pop
stos
bound
inc
aas
fldt
cmp
or
xor
lea
xchg
mov
ret
mov
adc
sbb
notl
aas
je
lret
nop
mov
inc
sti
outsl
add
dec
mov
xchg
cli
xor
aad
push
stc
jl
lds
dec
pop
ret
cmp
mov
xor
sub
pop
loopne
mov
shlb
jns
aam
fsubrl
cwtl
das
sub
dec
addr16
ja
repnz
bound
ror
sub
outsb
mov
scas
sbb
cmp
jnp
fdivrs
addl
bnd
fisubrl
jne
mov
add
faddp
mov
sbb
ret
out
mov
aas
xchg
out
jns
sbb
mov
std
cmp
inc
cli
push
xor
pop
lods
and
add
icebp
push
out
loope
jle
jmp
cmp
sub
cwtl
push
inc
dec
sbb
fistpl
mov
aaa
imul
and
je
fdivl
dec
test
mov
out
add
js
push
and
dec
sbb
and
inc
mov
test
scas
je
adc
shl
mov
mov
je
in
mov
repz
adc
loope
enter
mov
cli
sti
in
pop
jl
dec
push
jb
dec
jbe
dec
push
in
dec
imul
mov
adc
imul
fisubrl
mov
shl
cmp
mov
push
cmp
add
pop
test
jb
sub
mov
inc
cmc
lcall
sbb
mov
jb
push
mov
imul
out
call
dec
mov
in
adc
shl
fsubrp
mov
cmc
into
movsb
inc
cli
movnti
ror
adc
jbe
add
gs
pop
lds
repnz
xchg
sbb
xor
aaa
mov
jbe
in
int3
iret
and
jo
jg
xor
inc
mov
xchg
fmull
or
sarl
packsswb
es
repnz
bound
enter
lods
inc
addr16
sub
sbb
mov
mov
cli
subl
and
sbb
sbb
int
mov
mov
pop
mov
sbb
xlat
sbb
shr
mov
scas
das
cmp
xorb
cmp
shlb
dec
pop
shlb
sub
out
jg
fisubs
js
imul
loope
fnstenv
clc
and
pusha
xor
aas
shrb
int3
ljmp
push
sbb
out
test
repnz
mov
popf
scas
mov
aas
sbb
pop
sub
rorl
int
pop
cs
in
adc
lds
jg
mov
stos
xchg
loopne
pop
pop
lods
xlat
ljmp
jne
inc
lock
push
mov
sar
stos
aaa
cwtl
loope
les
movsb
clc
sub
mov
and
and
fcoms
ret
lret
lret
bound
movsl
negb
aam
aad
rolb
popa
xor
aam
aas
in
xor
xchg
leave
test
or
jne
fstpt
add
add
add
mov
scas
sahf
cld
dec
push
sbb
dec
and
dec
das
jmp
jl
push
mov
mov
xor
mov
jnp
sub
pop
xchg
mov
xchg
xor
push
rolb
cli
icebp
mov
gs
or
and
add
cmp
test
bound
sbb
xchg
cmp
lods
add
bound
mov
icebp
adcl
imul
outsb
dec
and
neg
lret
sbb
xchg
pop
sbb
pop
mov
divl
dec
jmp
insb
sub
mov
iret
mov
and
xchg
pop
pop
gs
jns
dec
inc
or
aam
fsubl
push
pop
push
lcall
iret
insb
xor
ss
movsb
je
enter
shlb
int3
leave
lahf
test
add
aaa
inc
scas
xchg
or
dec
mov
and
sbb
dec
fs
push
stos
push
ret
testl
lods
lods
add
lahf
and
mov
and
xchg
in
mov
jnp
scas
arpl
push
sub
mov
pop
inc
xchg
stc
inc
sub
jl
addr16
xchg
movsb
shlb
mov
ljmp
bound
push
cmpsb
jb
fwait
mov
xchg
shrl
bound
or
mov
loop
pop
lds
cld
sbb
jae
or
push
push
lock
inc
cmpsb
mov
mov
es
cmpsl
push
pop
push
mov
test
int3
lcall
jl
insb
sarb
sahf
sbb
xchg
mov
jae
dec
test
push
jmp
js
adc
inc
rcll
jbe
arpl
enter
cmc
push
xor
pop
fstp
add
insb
popa
push
xchg
push
idivl
lahf
fldl
leave
pop
cmp
mov
jne
or
and
leave
push
pop
or
add
inc
jmp
xchg
mov
shlb
mov
pop
cmpl
cli
fisttpll
ret
loope
xchg
data16
jecxz
sub
loop
xor
stc
jp
xchg
mov
mov
xor
and
pop
cmpsb
fists
fiadds
adc
xchg
es
pop
das
mov
je
jg
adc
fldenv
jp
dec
push
xlat
adc
punpckhbw
lret
adc
shr
sub
xor
cmpsl
xchg
pop
lea
imul
mov
jg
scas
cmp
repz
fidivl
pop
mov
push
cmp
inc
dec
push
into
jne
call
fwait
sahf
fnsave
rorl
mov
dec
push
add
mov
jae
insl
sti
mov
int3
sbb
xor
add
dec
jle
bound
cmp
and
fcoms
sbb
aam
xchg
fldcw
mov
and
test
addr16
xchg
xor
sbb
xchg
xchg
popa
in
pop
imul
jmp
test
loope
ljmp
int
mulb
leave
pop
cld
mov
cmp
jae
add
in
add
lods
rorb
xlat
cmpsl
pop
mov
xchg
lret
in
in
xor
nop
rcl
add
xor
addr16
scas
outsl
cwtl
jno
ljmp
ret
test
imul
add
mov
jg
adc
sub
mov
shrl
les
ret
push
sbb
imul
shrb
mov
push
sbb
scas
cld
xchg
mov
js
cltd
push
fisubrl
jmp
add
rclb
test
dec
add
andb
push
insb
sub
repz
pop
inc
loope
push
sub
std
xor
add
ljmp
leave
pop
popf
nop
aad
flds
or
mov
mov
ds
sbb
jnp
cmp
xchg
aad
lock
sar
adc
dec
adc
mov
out
sub
mov
fdivrl
das
adc
adc
adc
jl
stos
mov
mov
shlb
enter
dec
cmp
adc
push
movsl
xor
cs
out
lock
pop
in
inc
adc
bswap
fisttps
int
push
mov
add
out
aaa
je
jge
loop
sbb
test
cwtl
jnp
mov
pop
and
cmc
push
aas
xchg
sub
sbb
jl
or
lods
mov
imul
ljmp
inc
ja
mov
jns
insl
lcall
fists
add
pop
jecxz
dec
outsl
mov
shl
pushf
mov
shrl
ss
pop
jbe
sub
ror
in
jmp
push
jmp
push
aas
shrb
add
mov
imul
add
pop
dec
ss
ds
adcb
repnz
pop
xorl
std
lock
pusha
fmuls
add
and
cmp
and
into
sbb
mov
pop
sbb
inc
fdivrl
inc
out
dec
in
jo
cwtl
rclb
mov
or
jl
add
movsl
div
outsl
loope
scas
mov
cmpsb
xor
stc
hlt
addr16
push
into
inc
pop
mov
inc
cmp
ret
inc
aam
mov
out
and
sub
into
sbb
cmp
aaa
clc
mov
iret
xchg
sub
lea
jecxz
adc
jo
cs
loopne
rcll
bound
inc
mov
loop
fisubrs
cmp
cmp
leave
pop
aas
jg
jl
or
xchg
mov
enter
or
add
movsl
or
mov
and
ficoms
in
jg
insl
out
daa
lock
sub
add
inc
and
nop
rcrl
push
jp
sbb
jecxz
movsb
test
lods
mov
pop
mov
mov
imul
fdivp
push
jnp
jmp
test
insb
push
mov
xchg
call
je
sbbb
or
cs
stc
fidivrl
add
push
dec
into
mov
das
sbb
xor
pop
dec
lods
shlb
sub
les
ss
adc
adc
pop
and
mov
sub
sbb
imul
hlt
scas
stos
inc
in
cmp
mov
loop
inc
or
pushf
push
sahf
xlat
mov
mov
push
fdivs
call
cltd
pop
leave
xor
sti
inc
xchg
std
in
in
sarl
jnp
popa
push
out
inc
bound
dec
mov
xchg
mov
xor
mov
stos
cmp
mov
in
int
push
leave
mov
mov
popf
cmp
and
mov
movsb
or
and
mov
mov
push
xor
add
xchg
imul
or
xrelease
popf
push
pushf
in
repnz
mov
jl
test
pop
nop
mov
jg
jno
es
xchg
sub
dec
push
mov
and
xorb
dec
std
xchg
mov
sbb
inc
int
mov
pop
out
add
push
jns
inc
bound
lods
jl
inc
add
jp
icebp
gs
aam
push
in
icebp
jp
addr16
sahf
pop
sbb
cmc
adc
test
push
ret
mov
xchg
adc
icebp
jb
jns
mov
loopne
jge
mov
push
mov
push
add
adc
or
adc
dec
dec
cli
cltd
ja
mov
rcll
into
pusha
cwtl
lret
xchg
call
cwtl
lods
xchg
jne
xor
and
cmpsb
xorb
push
fildll
push
cwtl
inc
in
jns
sub
mov
cmp
and
sahf
stos
or
dec
in
int
mov
cmp
loopne
cld
xchg
insb
clc
mov
cmpsl
or
xchg
push
call
push
or
scas
jge
mov
inc
rcrb
lahf
js
lcall
mov
push
iret
popa
lods
popa
mov
mov
mov
cmp
mov
push
mov
inc
mov
xchg
cmp
jle
pop
xlat
push
les
jge
ss
xchg
icebp
mov
das
mov
or
xchg
mov
cltd
inc
jmp
add
lret
mov
add
je
sub
in
or
mov
sbb
mov
rol
stos
rorl
test
je
dec
pop
test
jo
mov
insl
push
inc
push
xor
push
rcrl
adc
mov
aam
fimuls
es
xchg
popa
es
imul
mov
xchg
jge
push
or
lret
call
sti
jmp
lds
jp
jmp
sub
xchg
ljmp
sbb
or
dec
adc
insb
cmp
xor
dec
mov
push
out
pop
add
lock
loopne
adc
adc
inc
cli
dec
and
imul
adc
popl
fcompl
fsubl
iret
xor
and
movsl
cld
xlat
pop
mov
xchg
hlt
out
jecxz
pop
pop
idiv
or
jp
jmp
mov
clc
aad
in
fbstp
outsb
ss
icebp
mov
mov
xchg
push
in
mov
add
mov
pop
sbb
jl
lahf
sub
clc
out
mov
pop
adc
pop
jno
lret
cmpsb
decl
add
or
add
sahf
jae
insb
iret
popf
popf
mov
sahf
add
push
add
mov
mov
test
les
and
mov
dec
push
dec
dec
mov
or
mov
cmp
push
pop
push
test
lcall
jb
adc
add
dec
push
cld
xor
test
jo
repz
cld
out
xor
cmp
scas
jp
mov
test
xchg
in
and
jbe
jecxz
sarl
sub
sub
mov
addr16
push
dec
push
int
pop
cmp
push
ljmp
fcomi
sahf
dec
lret
imul
lea
rolb
icebp
mov
aad
in
sarl
dec
in
pushf
pop
iret
lds
adcl
cmp
xchg
dec
jp
imul
sub
mov
and
fisttpl
mov
push
fstl
sarb
mov
mov
mov
mov
pop
out
pop
ljmp
cmp
push
out
lcall
push
movsb
dec
jnp
les
fcmovne
mov
je
insl
in
js
outsb
lret
mov
stos
in
mov
pop
push
sbb
stc
in
lcall
xchg
gs
in
and
pop
hlt
repz
mov
loop
or
dec
test
scas
inc
mov
int
lods
sbb
sub
xor
out
addr16
test
int3
inc
popa
out
std
jp
lahf
imul
jl
ret
fs
and
out
movsl
adcb
test
leave
pop
les
movsb
ss
loop
pop
inc
into
jo
add
test
and
mov
sub
int3
pushf
and
rclb
cmp
test
jmp
mov
sahf
sbb
xchg
decl
dec
dec
filds
mov
popa
mov
ret
in
sub
js
cld
add
xor
repz
and
push
add
inc
in
test
fldl
mov
adc
cmp
inc
das
aaa
xor
pusha
js
roll
dec
inc
pop
push
stos
or
pop
pop
int3
dec
jge
pop
jae
add
lcall
push
call
xchg
sahf
jecxz
test
pushf
cmp
lods
daa
enter
leave
mov
cmp
adc
stos
ret
pop
jnp
pusha
jp
cmc
or
ret
cld
xor
fs
xchg
lods
push
jns
xchg
sub
scas
mov
mov
in
test
aaa
movsl
fistpl
xor
daa
push
mov
flds
push
push
push
mov
nop
or
jg
dec
jo
push
lea
popa
adc
outsb
jg
cmp
inc
popf
in
add
xchg
in
repz
bound
xor
shlb
out
shll
adcb
shl
std
pop
je
arpl
mov
mov
sub
aaa
iret
rclb
inc
xor
cmp
sbb
inc
inc
rclb
das
andb
adc
std
notl
loope
sbb
push
rcrb
push
sbb
jecxz
mov
aam
cli
les
mov
push
pushf
push
shl
lahf
sub
and
lea
sub
pop
or
lods
or
xchg
mov
dec
outsl
enter
sub
gs
adc
mov
xchg
aad
fbstp
xchg
ds
or
fstpl
test
data16
dec
bound
loope
sbb
insb
mov
arpl
sub
loop
pusha
cwtl
jmp
mov
sbb
push
ficoms
mov
xchg
push
fnsave
cli
push
sub
out
jl
int3
cmp
fsubs
insb
jne
pop
fsubl
pop
clc
mov
insl
int
ds
lock
or
out
add
xchg
in
cmp
adc
cmpsl
xchg
in
jae
fs
add
in
sbb
arpl
adc
jecxz
in
mov
lods
mov
not
cmp
add
mov
mov
mov
adc
rcll
pop
push
dec
mov
clc
loope
sbb
lahf
repnz
xchg
int3
stc
sbb
popa
sub
sbb
sbb
pop
mov
popl
add
jns
mov
mov
push
xchg
mov
mov
cmpb
mov
rcl
lds
cmc
sub
push
dec
lods
add
test
jno
sub
sub
movsb
fucomip
rcll
push
fmuls
sub
xchg
sub
loop
jne
loopne
fs
dec
fucom
ds
dec
fistl
mov
rclb
add
loope
fildll
mov
loope
out
add
lds
push
and
iret
cltd
jne
stc
jae
sbb
into
cli
mov
stos
xchg
jecxz
mov
adc
shll
icebp
push
xchg
mov
dec
int3
pop
pusha
mov
mov
rolb
aad
leave
jb
xor
shr
int
movsb
or
incb
or
cmpsb
cli
jmp
outsb
nop
cmp
adc
or
arpl
movsl
stos
xor
sub
mov
sub
addr16
pop
mov
mov
aam
sbb
insl
xor
shrl
popf
and
dec
xchg
test
inc
add
leave
push
push
ret
mov
or
movsb
push
sbb
outsb
int3
test
pop
dec
cmp
movsl
scas
cs
sub
lods
idivb
pop
cmc
xchg
dec
push
sahf
or
xor
xor
gs
mov
or
xchg
shrb
xor
lcall
pop
xchg
cmp
js
test
js
xor
stc
into
cwtl
jmp
push
testb
shr
xor
fs
rcrb
subb
mov
std
mov
in
cmp
lret
xchg
lahf
pop
imul
rcrl
mov
xor
inc
jae
push
inc
clc
xchg
xchg
repnz
jb
iret
stos
sahf
faddp
jb
mov
or
iret
mov
mov
dec
cmp
pop
leave
fs
popf
test
dec
iret
jnp
ja
cmp
xlat
loop
lahf
jne
flds
leave
pop
jb
gs
pop
jno
mov
jmp
mov
std
cmp
outsb
insl
mov
addl
inc
pop
mov
outsl
push
cmp
lods
cwtl
or
push
and
std
jne
dec
jge
xchg
jge
fimuls
stos
fldcw
imul
dec
and
popa
adc
insb
jbe
ljmp
enter
and
fidivrl
nop
fdivl
iret
jl
xorb
sbb
das
inc
idivl
or
lea
push
mov
movsb
out
xor
or
test
mov
gs
mov
dec
outsb
repnz
push
jge
rcl
pop
jle
cmp
xor
repnz
mov
enter
push
and
xchg
sahf
push
or
mov
jno
movsl
sub
sub
imul
popl
add
mov
pop
xor
ret
adc
out
andl
insb
mov
push
arpl
jno
dec
addr16
test
pop
dec
inc
pop
in
in
int3
push
xchg
fnstsw
add
mov
repnz
xchg
leave
xor
sub
or
test
xchg
or
movsb
adc
nop
adc
jbe
add
lcall
and
mov
fisubs
ss
cwtl
sub
push
dec
jmp
lcall
push
mov
out
sub
pop
nop
xlat
sbb
sbb
bound
and
stos
adc
cmp
mov
pop
outsl
fucomip
fs
decl
cmp
mov
adc
sbb
bound
cmp
push
lods
xchg
loope
stos
pop
ljmp
lds
imul
sahf
pop
pop
dec
dec
lods
fstl
pushf
shll
je
cmpsb
jne
aam
fidivl
hlt
in
imul
imul
jl
dec
mov
mov
push
fwait
pop
test
repz
cmpsb
sub
push
sub
push
cs
or
inc
cmp
push
push
dec
jmp
adc
inc
push
or
mov
leave
mov
and
mov
jg
xchg
fcoml
pop
aaa
and
inc
fs
cmpsb
xlat
ja
mov
push
jg
and
xchg
test
push
pop
xchg
inc
cwtl
arpl
lods
imul
jno
idiv
movsb
cmpsl
dec
sbb
pop
sbb
popa
dec
mov
dec
fsub
shrb
mov
mov
pop
stos
cmp
mov
mov
xor
insb
mov
push
cli
pop
jl
outsb
mov
jl
enter
adc
into
scas
mov
adc
les
mov
pop
daa
movsb
jbe
jnp
push
es
enter
lea
jmp
pop
and
pop
insl
pop
fs
adc
add
inc
scas
lds
and
stos
jl
gs
and
mov
cmpsb
rcr
dec
cmpsl
arpl
push
mov
mov
push
lgs
lret
aam
sub
lds
arpl
js
sub
dec
and
pop
addr16
sbb
and
inc
cwtl
adc
pop
jbe
jge,pt
mov
rcrl
mov
pop
fistl
int
xchg
xor
test
aaa
jbe
pop
test
push
and
mov
inc
je
push
push
xchg
stc
cli
dec
xchg
push
movsl
subb
dec
ds
ss
pop
mov
daa
or
je
sub
ret
pop
xchg
scas
leave
sbb
xchg
loope
xchg
sbbb
push
cmp
pusha
jbe
pop
cmp
mov
repz
mov
out
icebp
lcall
xor
or
outsl
pop
sbb
mov
inc
les
dec
jo
daa
dec
bound
cmp
out
pop
and
arpl
push
dec
mov
insl
stos
or
lret
sarl
inc
cld
push
inc
sbb
test
pop
sub
sbb
popf
fstps
push
jo
test
xor
xor
mov
popf
rclb
and
pop
ret
shrb
lods
jecxz
and
ja
cmpsb
xor
push
je
mov
cmc
cli
xlat
mov
aad
jecxz
xor
jl
pop
enter
subl
xor
fwait
ret
mov
and
mov
pop
jnp
outsl
cmpsl
push
pop
out
add
cwtl
xor
mov
loop
mov
test
mov
mov
movsb
sahf
loop
ror
add
aaa
fs
lcall
pop
fs
cmp
lcall
gs
insb
adc
mov
jmp
mov
cmp
scas
or
sbb
mov
in
cmp
bound
jae
sub
add
xor
add
pushf
cli
lret
or
pop
mov
cmp
adc
jmp
gs
nop
loop
push
lahf
inc
add
fisubl
pusha
sub
shl
xor
fcomi
sahf
cmpsl
insb
push
jmpw
xlat
dec
mov
sbb
sahf
stos
in
sbb
cld
xchg
cmp
mov
fisttps
cli
repz
jbe
mov
rorb
sbb
divb
orl
js
mov
mov
or
imulb
in
dec
pop
push
jp
std
pop
movsl
test
aas
dec
mov
adc
mov
push
mov
daa
cmp
jo
add
inc
aad
or
or
sbb
jl
insb
sub
lret
dec
sbb
inc
xchg
add
jl
stos
jno
out
push
loopne
push
lahf
stc
inc
imul
popa
cli
xor
negl
lret
ljmp
call
out
repz
push
movsl
mov
sub
fidivrl
addr16
mov
mov
stos
mov
adc
jb
sahf
add
and
es
inc
mov
adc
subb
adc
enter
call
loope
mov
int
lds
cmp
lahf
pushf
les
mov
insb
cmp
jp
jae
push
push
jecxz
loop
pop
movsl
imul
data16
xchg
xor
ja
sbb
xor
stc
push
sbb
fwait
xchg
cmpsb
icebp
into
xor
jo
inc
mov
cmp
add
push
push
jns
out
xchg
push
addr16
aas
sbb
scas
test
push
or
inc
ret
sbb
sarb
push
and
iret
nop
jge
dec
testb
xor
lds
mov
sub
sbb
mov
add
and
idivb
xchg
pop
aad
inc
and
cmpsb
mov
cmp
inc
dec
cmp
mov
adc
je
mov
shlb
fwait
add
pop
add
adc
lods
mov
out
popa
jmp
cmc
int3
xor
dec
lds
or
stos
and
pushf
push
pop
in
es
stos
es
std
cmp
sar
pop
dec
dec
add
jl
aaa
sub
bswap
in
pushf
push
sub
stos
in
mov
sbb
xchg
cmc
scas
into
mov
lret
cmp
xor
test
jo
xchg
or
cltd
ljmp
push
and
push
ja
xor
add
mov
inc
add
add
enter
pop
pop
hlt
push
push
inc
lea
jns
shl
mov
cmp
inc
push
bound
mulb
pop
dec
pop
in
adc
aaa
in
mov
cli
cwtl
nop
mov
in
shrb
pop
out
sub
dec
cltd
mov
mov
cmp
mov
xor
ret
rcr
scas
imul
push
in
and
rolb
scas
fsubr
out
inc
jle
pop
cld
pop
pop
std
int
fcoms
pop
popa
mov
xchg
mov
mov
sbb
push
mov
or
dec
add
out
inc
jle
mov
and
inc
inc
imul
arpl
inc
sbb
xchg
addl
xor
and
jmp
xchg
out
dec
sbb
movsl
push
pop
dec
popa
jo
jle
pusha
pop
aaa
mov
int3
test
or
cmp
add
inc
ss
ss
mov
adc
inc
arpl
sub
inc
ja
enter
jp
dec
and
scas
bound
ret
pop
sti
enter
xchg
clc
ficompl
outsb
cmp
push
mov
out
jmp
mov
dec
cmp
xchg
cltd
cltd
jno
pop
jae
push
aad
fists
frstor
xor
sti
sti
je
stos
inc
fcom
sbb
inc
mov
mov
fcompl
jge
inc
aas
jo
lock
mov
jp
mov
dec
ds
add
cli
mul
add
lret
inc
sti
popf
adc
int3
xor
andl
cmp
outsb
sbb
adc
dec
push
in
repnz
mov
scas
loop
jmp
pop
cmp
divps
icebp
icebp
out
cmp
lods
pushf
mov
cld
rclb
dec
roll
std
xor
scas
add
in
pushf
int
dec
cmp
in
mull
lock
mov
aad
cld
xchg
xchg
lret
fcomp
fdivs
mov
sub
push
or
in
fistpl
and
pushf
mov
cmp
cmp
mov
enter
cmp
add
mov
mov
mov
gs
push
and
cmp
sub
dec
das
stc
clc
pextrw
push
cmovns
repz
roll
mov
mov
mov
adc
fwait
xchg
push
xchg
fimull
dec
sbb
sub
pop
pop
cmpsl
mov
jmp
adc
inc
into
int3
shl
notl
in
js
xchg
xchg
mov
mov
ficoms
test
aaa
scas
adc
and
inc
sti
outsb
push
xor
in
or
fidivrl
mov
mov
mov
sbb
shr
insl
xchg
jl
xchg
jle
xchg
scas
pop
aas
mov
in
pop
shr
jo
cmp
mov
pushf
hlt
loopne
ljmp
cs
jbe
inc
jo
or
idivb
fdivrs
inc
test
clc
lods
pop
xor
and
addr16
mov
dec
mov
dec
xor
jmp
xchg
inc
mov
test
in
nop
lods
add
xor
test
lods
test
push
aad
jbe
jno
das
std
cmp
mov
test
in
add
stos
jb
ss
dec
add
mov
sub
ficoms
mov
call
fmull
sti
fldenv
out
enter
mov
cmpsl
pop
lret
and
lods
test
mov
lods
adc
cmp
cmp
pop
inc
aaa
adc
je
aad
add
add
and
call
push
mov
enter
inc
shll
cmp
and
je
dec
mov
push
mov
xor
idivb
push
push
or
cmpsl
js
xchg
fwait
and
cmp
ds
addr16
mov
adc
lds
dec
out
nop
lds
push
fdivl
shll
mov
das
fisttpl
repnz
dec
and
push
jge
popl
sub
mov
fwait
incb
jecxz
rol
repnz
leave
loope
es
sbb
repnz
xchg
jnp
jmp
jne
pusha
test
mov
jge
mov
lcall
iret
mov
cmpsl
into
cmp
xor
xchg
ret
xchg
pop
inc
loopne
addr16
arpl
movsb
call
aaa
loop
es
cwtl
and
test
pop
jnp
mov
insb
or
out
or
dec
cmp
mov
mov
push
inc
fwait
sbb
pop
shll
add
mov
je
push
inc
cmc
ljmp
adc
pop
pusha
sbbb
and
pop
idiv
xchg
inc
pop
dec
sbb
fidivs
pop
inc
mov
in
mov
sub
push
fdivrs
les
mov
push
sub
lods
xchg
cld
stc
pop
mov
cmp
test
mul
aaa
cwtl
das
jae
xchg
ret
repz
addr16
jl
lret
xchg
mov
mov
push
add
and
bound
xchg
mov
mov
fwait
pop
push
add
or
scas
stos
dec
test
dec
lahf
mov
inc
ljmp
and
clc
aas
insb
cmp
xchg
enter
mov
shr
mov
pop
js
cli
int3
mov
jno
stc
adc
mov
xlat
nop
gs
lods
adc
fnstcw
sbb
lcall
cmpsb
inc
rcll
fiadds
mov
cwtl
rorl
call
sub
mov
out
dec
or
fisttpll
cmp
push
push
push
bound
mov
outsl
jnp
xchg
mov
popl
loop
sbb
push
mov
xor
inc
mov
mov
pop
icebp
dec
mov
notl
pusha
lods
push
repz
decb
mov
mov
dec
cmp
mov
sbb
adc
xchg
ret
or
ret
sub
xchg
sub
mov
addl
out
xor
xchg
mov
in
xor
xchg
jg
and
dec
scas
scas
fnsave
in
mov
ss
outsb
xchg
lds
and
inc
mov
push
push
xor
insb
pushf
cli
rcrl
push
test
addl
adc
icebp
pop
test
mov
js
divl
paddusb
pop
push
and
fldcw
fisubrs
jnp
rorl
pop
fstl
pusha
bound
adc
push
daa
adc
insb
and
mov
repnz
cmpsl
imul
movb
test
xchg
or
scas
and
inc
jmp
add
adc
push
repnz
pop
add
mov
lock
rclb
xor
fildll
xor
xchg
sub
loopne
sbbl
adc
mulb
jnp
sub
jbe
test
into
dec
cmp
mull
push
fdivrl
pop
jl
ja
jbe
pop
ret
cltd
or
jno
gs
push
ret
cli
rorb
pop
addr16
ja
aaa
jmp
xor
mov
pop
xor
movsb
cld
mov
jmp
fisubl
pop
pop
sbb
test
mov
imul
or
mov
cmp
push
test
in
testl
mov
fwait
pusha
lahf
push
xchg
dec
iret
lock
repz
pop
hlt
xor
and
fcoml
roll
mov
pop
dec
push
fcomps
ljmp
fimuls
sbb
mov
arpl
mov
xchg
outsb
mov
out
push
mov
fldcw
cmpl
sub
mov
and
out
test
xlat
add
sbb
mov
idivl
cmp
push
mov
jp
adc
popa
and
adc
xchg
xor
out
jne
mov
imul
cwtl
loop
xor
cmc
xchg
lahf
js
movaps
out
and
xlat
es
aas
notb
push
xchg
push
js
inc
test
les
ret
mov
dec
loopne
mov
pop
bnd
fldl
cs
sub
xchg
dec
adc
jg
push
ds
jecxz
ret
pushf
dec
inc
scas
sub
out
cltd
inc
adc
loop
xchg
adc
mov
or
fwait
cmp
out
nop
push
push
adc
jnp
fcompl
fsubrs
shrb
repnz
lea
arpl
fldenv
xor
ljmp
mov
stos
jg
loope
fdivrl
jmp
pop
jle
std
xor
in
fstp
xor
out
sbb
in
std
cs
cs
pop
std
shrl
cmovp
mov
jl
xchg
mov
or
lods
xor
pushf
pop
std
cmp
arpl
xchg
js
lea
push
fxch
ss
xchg
hlt
cmp
in
test
xor
pop
or
insb
adc
test
lret
jge
aam
sub
xor
test
xor
mov
or
cmp
add
add
mov
xor
lcall
repz
xchg
pop
jbe
mov
pop
je
sub
outsb
into
jns
cmp
fisubrs
dec
jo
jmp
lods
jnp
mov
test
in
mov
sub
popf
pop
adc
mov
sbb
add
mov
sub
stc
cmp
cmp
dec
cmp
sbb
pop
int3
xor
push
stc
push
adc
out
inc
jo
imul
pusha
into
push
lods
hlt
inc
and
test
jl
les
ljmp
adc
cli
jecxz
clc
xchg
cmp
xchg
sub
sbb
cmp
cmc
xchg
aas
sti
xor
mov
fcomps
lea
mov
adc
jmp
imul
mov
ljmp
jle
and
jl
xchg
sbb
outsl
jge
clc
movsb
movsl
push
fdivrs
xor
je
fcomps
xchg
enter
dec
inc
fimull
out
xchg
ret
inc
addl
xchg
inc
mov
jae
subl
lods
mov
push
cld
dec
movsl
loope
push
cs
sbb
xchg
and
mov
and
sub
pushf
sub
mov
nop
hlt
leave
mulb
sbb
pop
ret
sbbb
and
ds
jle
nopl
mov
ss
jmp
mov
cmp
pop
xchg
mov
or
and
jne
subb
jl
sub
add
push
clc
and
pop
outsb
stos
repz
adc
fcmovu
or
or
adcb
pushf
xchg
jns
xchg
adc
stos
push
push
popa
adc
repz
xor
push
cmc
lods
rolb
jge
or
xchg
sub
int
push
shlb
push
fwait
pop
loop
repnz
rcll
ret
cltd
xchg
mov
test
mov
out
sbb
or
ret
fldenv
mov
idivb
mov
add
sahf
or
or
adc
movsb
cwtl
sub
xchg
fistpll
das
push
push
sbb
inc
add
and
aaa
or
out
shlb
notl
pop
mov
lret
or
dec
mov
or
pop
into
adc
ds
pop
ljmp
stos
push
xor
push
lods
mov
sub
nop
push
xchg
mov
and
jne
mov
leave
imul
addr16
xor
loop
push
out
pop
leave
outsl
out
push
lods
outsb
mov
aaa
aas
popa
lock
xchg
subl
loopne
or
popa
jno
lret
or
mov
in
jne
fcmovnbe
cmp
cmc
ficoms
test
add
pop
xor
rorl
std
lcall
mov
stos
mov
add
xchg
xchg
push
pusha
sub
inc
js
movsb
mov
sub
lret
jae
xchg
xchg
inc
cmc
push
add
std
or
test
je
sub
mov
js
pop
flds
hlt
xchg
push
adc
fidivrs
fldt
dec
cmp
push
cltd
or
fisubs
sub
push
xor
jg
pop
add
loopne
xor
cltd
out
xchg
rclb
ljmp
pop
into
inc
insb
stos
aam
shr
lcall
sub
inc
dec
rcrb
stc
sub
shlb
or
and
pushf
movb
lods
pushl
inc
insb
xor
movl
pusha
lods
lcall
sub
in
push
int
pop
pop
xor
fs
xchg
jbe
xor
mov
mov
imul
les
imul
push
cmp
push
and
dec
and
or
jns
int
popa
lcall
push
adc
push
arpl
fidivl
cmpsb
mov
jg
mov
jl
xchg
ret
or
insb
push
lahf
mov
outsl
popa
testl
aas
shl
mov
stc
sbb
mov
xchg
loopne
ret
cmpsb
ljmp
test
lret
mov
push
add
int
dec
add
loope
cmp
sub
scas
insl
loopne
fcmovne
fidivl
mov
and
jp
sbb
add
test
scas
bound
pop
cmpsl
xchg
jnp
fbstp
rcrl
mov
mov
mov
adc
fs
fdivs
mov
hlt
pop
add
frstor
cli
push
push
dec
loop
pop
shl
sub
sub
out
pop
inc
insb
in
cmp
push
and
icebp
and
mov
imul
aas
push
sub
jle
cmp
das
inc
pop
sar
cmpsb
sub
dec
insb
sbb
fildll
pop
cmp
sarb
ljmp
pop
cli
stos
hlt
inc
jmp
pop
xlat
mov
out
xchg
sub
cmc
pop
push
pop
sbb
fisubrs
sbb
push
and
ja
cmp
or
test
mov
mov
fs
xchg
inc
add
cmp
fistpll
pop
mov
std
dec
leave
dec
stc
in
aaa
jecxz
idivb
out
fwait
cmp
test
rcrl
jo
push
mov
add
mov
adc
push
lret
add
aaa
mov
insb
rolb
mov
dec
aas
test
sbb
std
std
xchg
pushl
pop
repz
ret
or
xchg
test
push
add
push
and
jecxz
cli
sbb
out
or
notl
fisubrs
xchg
rcl
test
or
cmp
jp
ror
pop
mov
jnp
movups
imul
movsl
das
dec
int3
adc
test
push
jecxz
test
test
and
lcall
sub
sbb
xchg
mov
mov
iret
xchg
mov
mov
mov
mov
or
fldl
imul
scas
sub
cli
sbb
mov
in
je
mov
cmc
lods
dec
inc
pushf
subb
lods
das
out
sarl
popf
testl
subb
or
jbe
popf
mov
jmp
jne
cmp
add
dec
sbb
xchg
push
cli
xchg
les
cltd
fdivs
jbe
outsb
lea
ss
push
fisttpl
adc
cmp
pop
jo
gs
bound
inc
inc
or
subl
cmp
inc
sub
lods
push
cwtl
insb
aas
test
les
pop
movsl
or
mov
fsubs
out
stc
mov
push
outsb
cmp
add
adc
fdivs
jg
push
fwait
andl
mov
or
aam
mov
jecxz
repz
adc
jo
add
mov
push
or
rcll
andl
and
push
mov
push
mov
add
cmpl
lods
idivb
out
arpl
jge
stos
popf
mov
lret
push
testl
jp
je
mov
shll
test
xchg
incl
mov
xor
push
and
mov
or
mov
aam
jbe
in
mov
clc
pop
push
dec
inc
inc
addb
cs
loopne
imul
jae
pop
mov
jmp
push
xor
shl
shl
ljmp
xchg
nop
daa
bound
push
repnz
loop
test
sub
int3
mov
test
xchg
pop
mov
iret
add
repnz
and
push
in
fmuls
adc
xor
outsl
fstpl
lods
mov
cmp
sbb
jmp
loopne
and
popl
or
jecxz
stos
cmp
es
stc
gs
jno
jle
mov
pop
cltd
sub
test
cmp
sub
cmp
loopne
lahf
adc
and
pop
push
push
lcall
and
and
es
ja
xchg
mulb
jnp
das
and
into
push
idivb
mov
in
rcrb
push
js
push
fmuls
loopne
push
lods
add
inc
movsl
mov
and
loop
movsb
cmp
lods
out
cmp
xor
inc
aad
pop
dec
jmp
andl
stc
push
je
push
lds
xchg
shlb
pusha
lret
movsb
lock
fcmovnu
cmp
adcl
cli
sub
cmp
cmpsl
add
fwait
shl
pushf
out
push
pop
in
lcall
xchg
movsb
mov
imul
cmp
rcll
and
andl
pushf
cmp
push
xchg
xchg
xchg
repz
ss
xchg
je
je
cmpsl
pushf
iret
lcall
jg
jb
dec
pop
lret
leave
mov
stos
outsb
xchg
sbb
out
mulb
call
mov
mov
lcall
push
ljmp
sbb
dec
ret
aaa
adc
inc
outsl
cmp
mov
mov
in
mov
adc
mov
or
faddl
aaa
int3
push
int
xor
or
push
loop
mov
add
fldcw
outsl
mulb
push
and
stos
adc
lahf
xor
cwtl
jl
xlat
divb
cmp
jp
push
cmp
sbb
push
mov
cmc
in
mov
ja
outsl
xchg
or
fldl
test
pop
jo
fistpl
in
lods
outsl
aas
dec
shlb
pusha
fldl
pop
fsubl
imul
and
rcrb
sub
cld
cs
loop
pop
popa
dec
mov
or
push
pushf
jmp
std
mov
icebp
ret
les
mov
mov
adcl
cld
cmp
fidivl
mov
dec
sbb
add
or
sbb
sbb
cwtl
into
jbe
xor
cwtl
push
jno
rorl
and
push
loope
sub
push
inc
fstp
jge
cmpsb
jns
bound
sbb
pop
hlt
sub
fadds
loopne
pop
ror
or
icebp
jl
shll
fmuls
idivb
add
out
je
cmp
cmp
loop
ss
xchg
jp
clc
ljmp
pop
pop
mov
stos
es
mov
int3
lret
addr16
ljmp
lods
adc
imul
mov
cltd
mov
inc
leave
dec
adc
sbb
mov
and
in
leave
xchg
push
and
cli
popf
push
pop
faddl
shrl
adc
fstl
cltd
cmp
fidivl
push
mov
pusha
mov
jnp
add
mov
imul
pop
pop
dec
pop
dec
jns
pop
push
and
xchg
imul
dec
out
sbb
mov
pop
add
ret
negl
adc
ss
push
ja
mov
xor
fcoms
sbb
mov
aad
push
shrb
cmp
les
sub
mov
or
lcall
jp
loop
outsl
test
es
xchg
lods
xchg
xor
jg
pop
cmp
jae
test
dec
aam
and
bound
or
dec
dec
cmp
lcall
imull
imul
lret
inc
dec
fs
mov
mov
push
sbb
aam
push
inc
mov
mov
aaa
cltd
scas
cmc
adc
subl
fadd
mov
mov
and
inc
mov
stos
jge
sub
imul
popa
sub
shrl
loopne
push
dec
mov
dec
cmp
iret
dec
stos
imul
lahf
es
ds
call
dec
inc
dec
lret
into
xchg
das
dec
push
xor
stc
iret
addr16
in
pushf
sub
test
xor
sub
adc
js
inc
inc
cmp
je
sub
sub
sti
out
jb
cmc
clc
cmpsl
testb
push
sub
orl
fsubrp
xor
imul
out
dec
loopne
adc
fisubs
xlat
ja
xor
dec
orl
fisubrs
out
mov
push
mov
mov
mov
mov
fsubl
lods
fisubrs
sbb
add
lret
enter
cmp
inc
inc
subl
test
xchg
xor
add
xchg
jmp
mov
pushf
jmp
std
or
test
push
in
mov
jecxz
fcom
lock
sbb
mov
cmp
pushf
rol
test
mov
in
movsb
fsub
ja
in
sahf
enter
icebp
push
sti
cmp
mov
imul
aad
or
xchg
test
dec
dec
push
add
or
dec
adc
jae
jo
push
push
pusha
jbe
and
adc
add
stos
or
popl
xor
xchg
mov
gs
xchg
mov
shlb
vmovdqu
cmp
pop
cmpsl
arpl
inc
add
cmp
pop
out
mov
test
pop
add
scas
lret
stos
aas
test
fs
les
sub
jbe
or
or
in
cmp
rorb
pop
rol
rorb
push
and
adc
dec
ds
rep
dec
std
mov
mov
or
in
inc
dec
neg
mov
enter
mov
sahf
fisubrs
adc
cmp
in
leave
in
fsub
add
ret
faddl
jecxz
in
mov
outsl
int
sahf
sbb
push
pop
les
add
test
fdivrl
out
lea
das
xchg
les
adc
mov
mov
bound
add
mov
bound
pusha
lret
icebp
sbb
pop
daa
rorl
xor
loop
in
and
dec
mov
xchg
lock
fidivrs
inc
mov
dec
scas
lds
mov
mov
out
ss
sti
xchg
push
xor
lea
adc
lcall
out
in
int
xor
sbb
mov
and
fimuls
cwtl
pop
lds
call
jle
or
xor
xchg
mov
mov
out
mov
sub
ds
sbb
fnstsw
cld
test
adc
aaa
cmpsl
mov
xchg
lahf
andl
and
mov
mov
mov
jnp
cltd
int3
aad
cmp
xchg
jae
nop
std
ret
dec
jns
mov
adc
cmp
inc
jbe
fcomi
lock
sahf
gs
fistl
rorb
int3
imul
inc
or
movsb
sub
or
xchg
adc
xchg
rcr
outsb
cld
adc
insb
je
mov
pop
aam
mov
jmp
icebp
lods
aad
lahf
test
push
repz
test
sbb
push
icebp
aaa
cli
lret
adcl
clc
arpl
mov
arpl
cld
xor
insb
cmp
push
cmp
or
inc
xorb
and
sub
ret
aaa
sahf
xor
xlat
out
jnp
pop
fistpl
sbb
movsb
dec
jno
push
mov
in
fs
add
aad
test
sbb
cs
lret
mov
mov
jl
hlt
std
pop
add
mov
insl
icebp
dec
in
iret
aaa
int3
movsl
mov
clc
xchg
aas
shlb
notl
fsubs
mov
xor
dec
jno
adc
xlat
cmp
repz
stos
xchg
nop
fcom
mov
and
mov
fldenv
and
sbb
repz
push
out
pop
mov
fucomp
jo
in
jg
cmpsl
adc
jp
cmp
das
cmpsb
inc
or
and
cmp
pop
outsl
sahf
mov
jge
movb
lahf
arpl
xchg
gs
mov
xchg
lods
mov
lea
jge
mov
jmp
sbb
and
jae
inc
jno
sarl
stos
pop
mov
add
leave
add
imul
cmp
sub
mov
ror
or
aam
lret
xchg
jecxz
pusha
test
out
push
pop
and
cld
fwait
adcb
dec
lahf
sbb
mov
insl
jecxz
cmp
cld
sub
dec
sar
imul
shlb
mov
inc
dec
push
adc
pop
xchg
addr16
das
mov
lock
push
int3
fstpl
cmc
stos
or
or
mov
in
dec
push
add
and
addr16
cbtw
jno
dec
aad
mov
data16
sbb
daa
rorl
enter
sbb
movsl
fstpt
pop
cmp
mov
lret
iret
ljmp
lret
ja
lock
sub
mov
cmpsb
sbb
inc
pop
iret
rcll
mov
xchg
add
iret
pusha
or
cmpsl
cmpsb
push
orl
cmp
mov
pop
sbb
jecxz
into
add
iret
push
in
fsubrs
jnp
test
mov
jne
test
fcmove
lods
negl
or
js
add
ds
mov
xadd
mov
push
inc
push
pop
and
les
lock
stos
add
js
mov
adc
jl
mov
adcb
stos
inc
fwait
xor
mov
outsl
sbb
xor
cmp
jne
or
in
nop
aas
pop
in
xchg
dec
cmpsb
push
dec
push
xor
xlat
fcompl
pop
in
ljmp
pop
ljmp
xor
xor
pop
adc
jnp
lret
push
test
push
xchg
push
rcrl
jno
jne
testb
mov
loop
imul
lea
int
lea
add
pop
pop
add
adc
push
int3
fldcw
pop
das
out
jle
pop
mov
inc
push
adc
cmp
xchg
addr16
aam
negl
nop
or
jmp
xchg
imul
pop
pop
pop
rcrl
xor
lods
cmp
pop
lret
dec
in
mov
sbb
repz
push
add
in
or
and
mov
and
stc
arpl
cmp
mov
subw
std
sbbl
int3
aam
sub
or
scas
pop
sub
mov
dec
and
cmp
test
add
dec
out
rcrb
xchg
lds
roll
adc
out
imul
mov
fisubrs
fdiv
jb
push
icebp
pop
mov
jg
int
mov
popa
cmp
inc
mov
and
fsubp
push
add
sub
lret
lea
inc
pop
filds
ret
xchg
and
dec
add
cltd
sub
jo
outsl
xor
pushf
xor
mov
mov
daa
mov
fistpll
frstor
pushf
mov
call
aam
adc
or
push
insl
adcb
and
fisubl
mov
push
movsb
cmp
ret
push
fisubrl
jge
lods
test
add
xchg
xchg
cmpsb
xchg
jno
xchg
push
xor
add
lss
dec
push
xchg
aam
outsl
xlat
dec
jbe
ffree
jl
pop
negb
fldcw
ret
call
aad
pop
xlat
dec
add
repz
sub
xchg
mov
or
ret
aas
repnz
xor
lea
mov
mov
cwtl
cmpl
cmp
outsl
inc
mov
loopne
or
gs
out
jge
mov
lods
sub
mov
test
popf
sbb
inc
jge
push
mov
jl
mov
xor
clc
sbb
int
jmp
lea
repnz
cli
bound
push
data16
xchg
stos
arpl
push
pop
jb
cmc
incb
test
dec
gs
push
cli
push
pop
in
pop
pop
je
dec
mov
push
cmp
pop
sbbl
add
dec
or
inc
dec
std
sub
enter
mov
sub
and
in
add
mul
addr16
outsl
and
addr16
xchg
cmp
fbld
loop
push
fldl
subl
mov
lret
push
or
mov
sahf
lret
lret
std
pushf
aas
outsb
mov
sub
push
dec
pop
mov
sbb
fsts
fldt
sarl
orb
sub
jns
insb
pop
cmp
mov
nop
les
cli
xchg
sahf
adc
and
daa
inc
shrl
mov
push
lcall
push
cs
xchg
mov
out
test
mov
mov
aad
cmc
jge
cli
mov
insl
clc
sti
insb
push
xor
sahf
sub
push
fdivr
loop,pt
fdivl
cmp
dec
adc
push
test
xor
and
fcmovnb
outsl
arpl
mov
inc
jo
xor
and
sub
sti
insb
xor
mov
push
sub
sbb
loopne
mov
aam
jbe
fisttpll
lahf
fnstcw
shll
mov
jns
shlb
push
outsl
mov
addl
out
adc
push
orb
inc
stos
into
out
shll
jle
sub
insl
inc
sbb
pop
xchg
into
fwait
xchg
jg
push
cwtl
sub
jmp
outsb
inc
ret
mov
in
cmp
adcb
fisttpll
decb
push
xor
iret
ds
xchg
pop
and
adc
loope
fdivrl
pop
push
test
sbb
mov
xchg
jns
mov
dec
leave
mov
outsb
push
jecxz
fldt
cmp
lret
sbb
popf
fwait
pop
cmp
or
mov
pop
aas
shrb
and
dec
out
das
les
push
bound
cmp
push
imull
lret
push
push
insb
aaa
insl
or
or
test
ljmp
movsb
sbb
inc
fstl
lret
sub
and
addb
shll
jg
jecxz
and
scas
cmc
push
sbbb
stc
nop
lods
or
mov
dec
xor
and
sbb
mov
mov
mov
dec
inc
mov
push
popa
fdivrl
mov
cmp
mov
gs
dec
sub
xchg
addr16
push
dec
dec
sbb
or
lcall
pop
repz
loopne
addr16
pop
ljmp
and
pop
mov
adc
pop
andl
scas
movsl
jb
lahf
add
imul
ljmp
mov
notb
sti
jl
test
adc
jle
testl
dec
shr
neg
xlat
mov
nop
pusha
clc
mov
into
das
popf
int3
enter
loop
insb
push
xchg
dec
out
push
ss
jle
cmp
xlat
push
shrl
push
pop
loopne
sbb
bound
push
push
in
cmp
jno
inc
xor
mov
cmp
jne
mov
adc
cmp
push
jmp
sub
ljmp
pop
or
aaa
cmpsl
daa
int3
and
jecxz
sbb
pop
push
rolb
into
push
push
aas
aam
repz
gs
aaa
mov
mov
arpl
mov
pusha
cmpb
mov
xchg
push
xchg
add
pop
test
pop
mov
rorb
subl
andb
inc
test
jge
lahf
adc
pop
stos
sbb
test
push
repz
mov
bswap
adc
push
xchg
shl
add
cmp
pop
lods
in
inc
je
cmc
ret
imul
cmp
int3
xlat
dec
mov
cmp
sub
inc
jp
cmovl
xchg
pop
jle
adc
or
pop
into
int
push
outsl
cltd
clc
add
pop
iret
andb
jne
jnp
adc
movsl
fldl
mull
xchg
shl
loope
mov
in
lea
into
aas
cmp
insb
xor
mov
test
jecxz
outsl
cmpsb
xchg
and
and
add
push
mov
cmp
stc
pop
lcall
jne
mov
clc
and
imul
mov
dec
adc
mov
pop
lock
shlb
call
mov
push
and
xor
xchg
jmp
loop
gs
pop
fs
mov
jb
inc
scas
mov
in
pop
aad
aam
xchg
xor
lods
adc
or
cmp
mov
jmp
cmc
shrl
cmpsb
jg
lret
jno
or
mov
cmp
or
pop
mov
adc
jp
scas
sbb
push
loop
iret
test
sti
orb
push
mov
pop
jl
mov
ss
push
xchg
xchg
cmpsl
addb
outsb
sbb
bound
fcoml
jmp
or
insb
and
sbb
rclb
test
cmc
ljmp
test
jae
add
jae
jecxz
out
aam
pop
xchg
pop
or
mov
sbb
pusha
push
rcll
xor
lret
sahf
sub
popf
add
sbb
imulb
cmpsb
int3
imulb
mov
sarl
outsb
xorl
filds
jg
bound
xor
or
add
push
inc
rol
ss
fwait
stos
mov
pop
fsubs
sub
mov
xlat
addr16
adc
jmp
inc
pop
jl
lret
fisttpl
into
fmull
cmpsb
push
fistpl
out
retw
icebp
pushl
cmp
fucomp
sbb
cmp
shlb
leave
dec
pop
pmaxsw
xlat
cwtl
push
fcmovnu
jg
cmp
ret
xchg
andb
cmp
cmp
mov
push
mov
and
push
ja
xchg
mov
nop
cmp
rolb
stc
xor
iret
add
lods
mov
jo
mov
jnp
pmullw
pop
jmp
and
adc
push
adc
orl
sbb
and
xchg
pop
nop
add
test
leave
mov
popa
mov
fisttpl
fs
negb
dec
lods
or
jl
mov
push
fwait
pop
pop
mov
popf
int3
std
clc
cmp
scas
add
pop
dec
fldcw
repz
mov
lods
xrelease
faddl
aas
xchg
dec
gs
cld
adc
cmpsb
sub
in
push
mov
adc
push
xlat
xor
inc
xchg
pop
pop
pop
and
idivl
pusha
cmpsl
jge
mov
xchg
xchg
pop
cmpsb
add
and
dec
or
xor
lds
or
arpl
mov
mov
cmpsb
loope
xor
loopne
add
mov
scas
cmpsb
xchg
add
mov
jg
scas
pop
or
fisubl
fidivrs
add
inc
sti
adc
dec
push
iret
sbb
ja
and
adc
xor
xchg
fs
pushf
rcll
pusha
dec
xchg
clc
inc
jb
test
mov
outsb
ja
daa
sbb
push
xchg
xchg
subb
jp
cmp
ficompl
lods
int
ret
cld
in
pop
add
movsb
mov
lcall
dec
jno
pop
jecxz
and
and
in
lods
add
and
adc
jp
xchg
mov
call
inc
testl
test
add
insb
jns
mov
pop
and
mov
mov
ss
and
imul
ret
shrl
xor
lds
and
les
mov
push
fs
fiaddl
call
dec
arpl
dec
daa
out
subl
lcall
add
sti
jo
mov
mov
push
ja
popa
mov
inc
jo
fisubrs
les
mov
xor
loope
aam
out
cld
add
not
cmp
dec
out
mov
aas
ds
std
insl
inc
div
jle
shl
sub
xor
inc
jnp
push
mov
mov
repnz
stc
mov
movsl
stc
stos
lods
push
xchg
mov
out
icebp
jb
pop
sbb
mov
sti
lea
ljmp
mov
pop
add
jo
or
pop
repz
xchg
add
pop
imul
lcall
sub
decb
pop
dec
insl
jo
sbb
filds
mov
ficomps
fcoml
cmp
pop
lret
mov
xchg
clc
cmp
scas
and
int3
loope
sbbl
jbe
in
push
xor
jg
mov
mov
and
adc
mov
push
pusha
cmp
stos
sub
adc
sbb
push
sbb
mov
add
in
sbb
pop
hlt
insb
mov
jb
sub
xor
popf
dec
flds
js
inc
mov
cmp
or
mov
sbb
js
std
sbb
xchg
sbb
stos
test
stc
xchg
sub
jno
imul
mov
mov
adc
mov
out
jp
or
sbb
mov
fwait
rcll
imul
scas
cmp
sbb
lea
js
pop
mov
inc
inc
jg
cs
loop
cmpsb
cmp
cmp
out
sarl
in
inc
aas
inc
std
inc
repz
xlat
inc
push
mov
mov
nop
inc
xchg
mov
fimull
ret
inc
jno
rclb
ret
xor
mov
iret
jge
lds
into
pop
ljmp
and
dec
mov
jbe
lds
bound
mov
push
fcoml
pop
mov
loopne
adc
pop
shl
imul
push
mov
aas
xchg
jp
sarl
movsb
dec
fbld
cmc
lock
in
movsb
popf
incl
icebp
rcrl
cmpsl
sub
inc
pxor
dec
cmp
lods
fnstenv
cmp
nop
lea
add
jae
cwtl
loop
xor
dec
push
cmp
mov
push
jae
inc
into
jnp
cli
and
lods
mov
ror
mov
outsl
das
cmp
lret
test
xor
lret
shl
mov
inc
into
mov
lcall
push
jp
fs
shl
stos
jo
and
ds
adc
loopne
mov
push
lea
lcall
test
jnp
adc
push
int3
out
inc
sbb
pushl
sahf
arpl
inc
loop
test
inc
xchg
mov
adc
aam
popl
push
dec
xchg
iret
mov
jle
dec
inc
and
test
in
lods
sbb
es
mov
inc
dec
lcall
dec
sbb
notl
cltd
fldenv
sarl
shll
stos
mov
xchg
popa
mov
out
inc
cmp
roll
adc
inc
pop
dec
cmc
mov
gs
aad
xor
sub
or
pop
icebp
xor
shll
shl
into
andb
loope
adc
mov
test
mov
clc
loope
mov
mov
mov
mov
push
test
push
push
scas
das
jmp
mov
cltd
cmp
out
into
aaa
push
lods
dec
xor
inc
pop
jno
mov
stc
xchg
scas
mov
inc
fwait
pop
inc
cld
mov
aas
cmp
add
in
mov
pop
pusha
dec
into
xor
inc
dec
pop
in
xor
mov
pop
movsb
ss
push
pop
mov
gs
cs
pop
fistl
rorb
jae
sahf
jb
xlat
mov
mov
rorb
daa
mov
cltd
mov
shll
add
adc
pop
adc
sbb
dec
icebp
dec
push
add
cld
std
sub
jb
rcr
hlt
adc
adc
fcoml
andb
std
mov
jae
loope
repnz
xor
insl
inc
dec
jp
int
jne
stos
inc
out
jnp
enter
jecxz
mov
mov
andb
jb
inc
outsb
xchg
sbb
push
xor
in
lock
mov
out
add
mov
jp
and
cmp
and
call
xor
aas
push
or
fsts
jg
adc
dec
inc
test
imul
jnp
inc
lret
push
test
je
loopne
into
pop
lret
int
inc
adc
inc
and
mov
xchg
daa
mov
ficompl
mov
mov
inc
repz
lret
jns
or
pop
sar
xor
push
pop
jbe
sub
cwtl
dec
cmp
lods
insb
repnz
dec
repnz
fnstsw
cmp
xor
ljmp
stos
outsb
scas
xchg
and
xchg
popf
sub
vpcomub
mov
push
cmpsb
hlt
xchg
cmc
lods
mov
in
push
inc
testl
add
push
jmp
sub
sub
bound
jns
dec
out
jnp
cmp
lret
flds
ds
push
sub
enter
lahf
ds
movsb
add
dec
push
sbb
setne
ret
xor
jp
in
mov
and
outsl
scas
shrb
idivb
fstl
mov
and
sbbl
lret
je
inc
insb
inc
adc
jmp
rorl
mov
pop
clc
inc
jg
mov
stos
mov
mov
adc
sti
rcl
dec
mov
dec
xor
aam
sub
subb
ds
cmp
fdiv
mov
mov
addr16
sbb
cwtl
nop
push
js
sub
js
mov
mov
or
and
repnz
mov
mull
inc
cmp
push
and
loop
add
in
push
cmc
jb
adc
push
fidivrl
sub
jg
mov
in
dec
movsb
mov
testl
fwait
add
imul
rcl
pop
mov
adc
mov
jecxz
lods
pop
test
or
mov
dec
mov
out
andl
jo
xor
add
inc
inc
mov
pop
push
cmp
lods
fsts
rorl
push
sbb
xchg
out
arpl
push
les
mov
daa
push
or
bound
add
pop
jne
sti
jae
adc
cmp
add
imul
inc
sub
adc
push
lds
subl
mov
xor
mov
ss
movsl
int
dec
pusha
dec
mov
jg
jl
and
add
lods
jno
jge
mov
test
inc
inc
push
pop
mov
rcll
sub
je
and
cmp
xchg
pop
mov
jle
mov
jg
or
in
push
inc
mov
mov
test
sti
test
hlt
add
mov
fcoml
popf
xchg
pop
pop
loop
ds
movsl
xchg
mov
xchg
adc
cmp
into
mov
sub
fnstenv
lret
idivb
fcomi
imul
or
out
sbb
bound
mov
mov
pop
push
in
scas
shlb
dec
lods
hlt
stos
xlat
lods
inc
mov
jo
icebp
stos
xchg
mov
repnz
subl
and
mov
add
push
mov
rorb
add
xor
inc
mov
cltd
sub
push
mov
rorb
loope
push
xchg
jnp
out
jb
dec
in
shlb
or
and
xor
subl
cmp
addr16
subl
mov
sbb
lds
shll
leave
mov
aam
call
cmpsl
xchg
fs
fsubrp
or
dec
inc
out
js
and
sub
das
mov
lret
das
mov
leave
addr16
dec
out
loop
adc
gs
add
fisttpll
and
pop
movsl
in
xchg
cli
cltd
popf
out
push
enter
cltd
clc
nop
push
add
test
mov
dec
imul
outsl
pusha
mov
adc
mov
add
add
movl
outsl
dec
adc
hlt
ss
dec
dec
hlt
imul
jnp
pushl
or
out
and
in
lcall
or
std
in
sahf
insl
out
mov
stc
scas
idivb
sbb
lret
add
mov
add
popa
mov
outsl
faddp
sbb
inc
and
jle
lret
sub
popa
mov
sbb
pop
jecxz,pt
imulb
pop
mov
les
jg
in
mov
popf
dec
and
mov
call
pop
jmp
popa
pop
jns
fstl
push
dec
cltd
mov
xor
pop
filds
addl
push
jne
xor
in
icebp
shrl
and
lds
sbb
mov
jbe
xchg
neg
stc
aad
pop
sbb
jne
xchg
int3
mov
adc
or
je
dec
jmp
into
pop
mov
jne
and
imul
mov
imul
mov
jp
sbb
pop
jecxz
in
jno
or
cmpsl
mov
je
jae
clc
cmpsb
js
inc
sub
stos
mov
or
fdivr
sub
dec
xor
push
jno
outsb
bound
js
lea
repnz
push
xor
orl
loopne
adc
insb
xchg
call
jmp
xor
sbb
loop
cmpsb
and
mov
push
add
dec
sbb
xchg
loopne
pop
mov
jnp
mov
in
inc
in
mov
push
int3
pop
cmp
nop
pop
insl
adc
mov
mov
pop
ret
fistpl
sbb
shl
mov
pusha
dec
xchg
mov
sub
mov
add
es
sbb
les
inc
lret
push
xor
push
and
aad
lcall
out
repz
sahf
int3
fcomip
dec
test
mov
loopne
clc
outsl
jbe
imul
cltd
lcall
dec
mov
xlat
and
cmpsb
dec
push
data16
dec
jae
cltd
sahf
dec
dec
test
push
sub
jne
in
jmp
pop
fucomip
add
cmp
aas
adc
fsubl
pop
push
mov
pop
mov
push
cmc
pushf
sahf
arpl
xor
je
pop
add
push
sbb
pushf
fcomps
mov
pop
fucomip
ljmp
cmp
mov
aas
xor
arpl
xor
jns
xchg
fbstp
sbb
enter
push
adc
imul
mov
test
das
imul
cltd
out
add
ss
mov
dec
sbb
jecxz
sub
add
jl
inc
outsl
ret
adc
xchg
ljmp
jns
gs
cmpsl
xor
mov
cld
mov
cli
enter
cwtl
cmp
mov
lret
pushf
sbb
cld
test
arpl
push
or
or
jne
mov
outsb
in
cltd
sub
pusha
lea
adc
mov
jecxz
dec
pop
dec
dec
adc
and
ja
pop
shufps
adc
sbb
sub
or
mov
ficoms
je
jae
inc
xchg
sbb
dec
data16
mov
mov
rorb
add
call
lds
test
cmp
sub
stos
mov
jmp
test
lcall
sbb
or
fcoms
rcrb
xor
scas
xchg
add
push
sbb
test
cmp
test
pop
pusha
sub
dec
dec
je
sti
sbb
outsl
push
adc
mov
mov
fdivrs
sahf
mov
loopne
mov
adc
jbe
mov
out
and
xor
aas
testl
mov
clc
mov
dec
xor
fcmovnu
jbe
jp
je
jge
icebp
sub
pop
bound
or
and
pushf
mov
out
jns
pop
clc
add
mov
leave
inc
cld
ljmp
xor
push
rol
add
pushf
ja
in
cwtl
dec
inc
es
cmp
inc
into
mov
adc
pop
jmp
mov
xchg
push
roll
shlb
hlt
jnp
jecxz
iret
xchg
push
cwtl
aas
mov
shlb
enter
mov
mov
and
mov
dec
std
leave
fwait
mov
jbe
adc
mov
sahf
lds
sbb
and
inc
in
lea
out
int3
jecxz
mov
cli
cmp
dec
xorl
xchg
xor
test
mov
xor
add
popa
push
fstpt
rcr
shrl
dec
add
stos
in
out
rcrl
mov
mov
loopne
dec
pop
pop
lret
mov
push
sbb
aam
fs
or
je
adc
aam
fwait
gs
lods
cmp
cmp
add
stos
sbb
movsl
stos
jnp
cmp
das
and
mov
in
or
das
aaa
lea
cmp
insl
pop
imul
gs
stos
fdivrl
ss
ret
xchg
clc
xchg
call
and
cmp
pop
jl
cli
lret
fs
xchg
outsb
clc
call
push
mov
sbb
jmp
clc
adc
push
dec
adc
adc
xor
arpl
dec
sub
adc
jne
cmpsl
fidivrs
clc
and
fdivl
das
bound
mov
jge
ret
clc
repz
sbb
ds
call
popf
inc
mov
lods
cwtl
cld
add
nop
xor
inc
mov
jo
or
jnp
jmp
stc
xchg
and
ja
xchg
jno
jl
mov
xchg
shrl
into
push
test
jl
in
stos
dec
cmpsb
lods
mov
xchg
mov
mov
mov
and
inc
jbe
loopne
sarb
sti
cmp
pushf
adc
dec
add
outsb
mov
out
xor
xor
jae
or
push
daa
and
repnz
icebp
xlat
dec
stos
push
negb
out
fldt
adc
add
xlat
pusha
shlb
cli
jg
sub
xor
mov
into
fs
pop
rorl
lock
das
out
shll
loopne
inc
insb
push
fs
std
mov
outsl
and
sbb
pop
aas
sub
sbb
mov
fwait
xor
shl
push
and
ret
enter
es
aaa
pop
ljmp
lcall
in
jmp
pop
js
xor
pusha
inc
ret
test
int
sub
jmp
mov
addl
and
jo
mov
cltd
fwait
iret
in
push
test
nop
scas
outsl
pushf
fisubrs
mov
lahf
loopne
cs
mov
data16
jo
inc
xchg
mov
cmp
shrl
xchg
and
xor
scas
daa
pand
call
mov
sub
js
add
cwtl
sub
xor
mov
sahf
jno
lea
out
mov
ljmp
or
inc
lods
sub
sti
cmpsb
shlb
xor
into
mov
or
xchg
jo
mov
mov
xor
or
mov
add
cmc
daa
or
pop
inc
mov
fnstsw
dec
in
je
int3
push
cmp
push
adc
repz
dec
mov
cwtl
inc
xchg
add
cltd
loop
icebp
dec
int
es
ret
push
cmp
loop
and
cmp
aas
stos
fdivr
xchg
pop
mov
loopne
push
and
pop
daa
lds
cmc
xor
in
fstpt
inc
out
lods
dec
cwtl
cmp
enter
inc
push
jns
mov
scas
push
popa
adc
and
and
dec
cmp
dec
iret
data16
imul
enter
jno
mov
shll
push
adc
arpl
test
xchg
jne
ljmp
sbb
mov
mov
divl
repz
cmp
pop
add
insb
stos
test
aad
gs
pop
lcall
mov
jge
xor
and
sbb
fnsave
ret
pop
mov
orl
mov
cmp
sarb
adc
xchg
mov
xchg
xor
jae
lahf
pop
shll
adc
pop
jmp
cwtl
inc
jl
inc
leave
add
pop
cld
mov
in
cmp
nop
dec
mov
repz
fmuls
pop
add
mov
xchg
clc
push
xchg
insl
sti
repz
add
ret
pop
dec
push
popf
sbb
adcb
lahf
mov
push
jno
imul
dec
out
and
xchg
sahf
cld
out
and
xchg
imull
add
cmp
push
aam
mov
in
mov
out
mov
call
xchg
pop
aam
daa
mov
xor
repnz
loope
xchg
or
and
lcall
mov
aaa
fcom
xor
xchg
pushf
rcrl
ss
cmpsb
adc
pop
loope,pt
outsl
nop
hlt
sahf
pushf
test
add
sub
mov
fidivrs
cmpsb
sbb
call
cmpsl
mov
pop
dec
aas
fsubp
adc
sbb
jmp
or
mov
enter
jecxz
scas
es
popf
into
sbb
imul
add
mov
xor
xchg
adc
jb
xchg
xor
aam
and
mov
repz
test
test
leave
jbe
cmp
mov
dec
xchg
cmp
pop
jns
mov
fs
push
mov
pop
lret
xchg
xchg
je
rolb
testl
mov
and
add
and
push
popl
cltd
and
arpl
icebp
push
ljmp
cmp
push
push
cltd
jle
sbb
and
out
mov
xchg
insl
inc
clc
push
rorb
cmpsl
fadds
lods
add
push
pop
sub
push
sub
adc
cmp
inc
push
imul
pop
cmpsl
cmp
neg
xchg
ja
jns
lret
dec
jae
xchg
mov
mov
lcall
inc
mov
hlt
mov
daa
bound
movsb
insl
xlat
push
pop
rep
push
lcall
insl
jne
push
mov
sub
xlat
pop
push
pop
scas
jp
jmp
jbe
adc
dec
push
int3
rorb
or
mov
jg
aas
aad
test
fs
mov
stc
ss
and
adc
xchg
outsb
add
mov
lahf
orb
inc
jge
xor
pop
mov
fcom
imul
pushf
out
push
insb
movsl
jmp
pop
or
lret
xor
sub
pop
xor
mov
dec
fcmove
das
jg
lods
inc
aam
fisttps
dec
bound
pop
cmp
push
lahf
push
movsb
dec
lods
mov
pop
out
divl
jp
cmp
cs
sbb
mov
xchg
leave
cmp
mov
popf
cmp
mov
xchg
aaa
fstl
mov
add
xor
cmp
rol
fsubp
cwtl
adc
sub
inc
inc
test
out
fs
hlt
int
adc
pushf
sbb
pop
fadd
push
ret
fwait
insl
les
aaa
inc
out
negl
cmp
fnstsw
cld
push
psrlw
out
add
out
subl
mov
jne
pop
ret
std
out
hlt
das
xchg
addr16
xchg
rorl
outsl
cmp
fsubs
sbb
dec
mov
iret
rolb
inc
rol
push
mov
sti
int
mov
arpl
push
pop
fisttpl
adc
inc
sti
or
ds
ss
lods
test
mov
lret
mov
or
adc
out
push
pop
shll
lahf
add
xor
das
or
mov
and
nop
sbb
pop
inc
in
pop
add
inc
arpl
out
sub
faddp
in
mov
lret
cmp
jmp
mov
lods
push
push
rcl
fdivp
insl
push
cmp
iret
fisubrs
mov
or
and
xor
call
mov
or
addb
pop
je
std
or
sbb
leave
dec
cmpsl
mov
out
xchg
xlat
pusha
jae
fbstp
addr16
adc
cmp
cmp
sub
mov
aam
pop
jmp
hlt
pop
imul
push
or
dec
xor
dec
imul
outsb
cmp
lods
mov
insl
sub
pushl
sarb
test
arpl
and
das
mov
fstpt
xor
fld
js
inc
xor
push
cmp
dec
cmp
jmp
sbb
dec
fdivs
out
jns
mov
pop
ret
and
out
lods
or
mov
sarl
roll
mov
nop
repnz
addr16
out
add
xchg
and
lock
aaa
inc
jb
mov
std
mov
dec
adc
pop
mov
jl
aam
add
fucomi
in
das
inc
enter
aaa
cmp
sbb
cltd
xor
std
jl
in
push
stos
les
mov
xchg
sbb
pop
add
in
sbb
adc
and
cmpsl
inc
cmpsl
sub
imul
lcall
shlb
pop
imul
bound
jp
xor
adc
mov
out
pop
jo
and
push
imul
sbb
bound
xchg
dec
imul
ficoms
clc
fstpl
adc
filds
pop
or
push
jb
cwtl
push
fxch
ds
ljmp
ficoml
pop
loop
and
sub
dec
push
xor
lret
xor
movsl
cltd
inc
or
ficoml
lock
rol
sbb
fiaddl
arpl
and
inc
popf
aad
jge
adcl
push
push
fisubrs
fwait
inc
lods
jne
push
sbb
push
jle
outsb
mov
sub
stos
or
xor
out
es
mov
mov
or
fmull
test
dec
sbb
scas
and
jne
dec
dec
dec
sub
mov
jg
xchg
test
mov
cmc
push
insl
lods
negb
pusha
pop
mov
jecxz
inc
push
jecxz
jbe
and
mulb
ret
in
ds
mov
shr
cmpsl
cmp
shrl
xor
sbb
nop
pop
pusha
imul
rcr
stos
cmc
dec
xor
scas
sbb
mov
fcoms
mov
xor
push
mov
or
iret
sub
pop
sbb
adc
sub
jno
cmc
push
dec
sbb
cmp
jecxz
in
aas
mov
adc
rol
repz
sbb
bound
lret
cwtl
lods
aas
aaa
xchg
adc
imul
cmc
roll
mov
mov
addr16
jl
xchg
mov
mov
ret
imul
mov
push
repnz
mov
dec
mov
sbb
stos
popf
imul
icebp
ja
fst
sbbb
clc
adc
sbb
cmp
push
movsl
sbb
cmp
xchg
mov
or
mov
orb
cwtl
inc
push
pop
pop
sti
xor
flds
dec
int
xchg
les
sbb
or
mov
aam
aad
push
dec
fldl2t
adc
leave
or
and
movsl
lcall
das
sub
mov
sbb
adcb
sbb
jbe
adc
dec
add
outsb
insb
fnsave
adcb
mov
arpl
mov
pop
jle
sub
dec
bound
stc
or
xor
leave
sbb
adc
fwait
and
sahf
adc
mov
lcall
xchg
adc
and
xlat
pusha
push
test
scas
push
mov
lods
xorb
cmp
mov
sub
hlt
jno
sub
sbb
test
adc
fwait
dec
and
imul
sub
pop
mov
int3
pop
shll
xchg
add
sub
push
jno
clc
into
push
sarl
in
adc
dec
lret
lcall
jae
xchg
sub
sti
cmpsl
cmp
and
jge
lock
cmp
fcoml
incl
cld
xchg
test
out
test
andb
loopne
mov
aaa
icebp
adc
jg
cmp
or
cld
dec
mov
adc
adc
lcall
push
out
repnz
call
or
inc
push
pushf
inc
stos
test
and
es
loopne
lret
lcall
adc
out
pop
fiaddl
sbb
in
inc
shll
and
sub
lret
xor
pop
dec
cmp
xor
dec
in
sub
cmp
or
sbb
adc
mov
mov
jb
int
aam
sub
or
pop
fidivrl
mov
shrb
incl
sub
in
insb
sbb
aaa
jmp
push
shlb
dec
pop
add
aad
pop
out
test
mov
pop
idivl
cmp
mov
cmp
test
push
xchg
dec
mov
icebp
pop
xchg
fisubrs
mov
iret
add
cmp
dec
sbb
rcll
fs
sarl
scas
cmp
inc
mov
and
sbb
push
mov
out
call
clc
jg
call
ds
and
fisubl
popa
inc
cltd
jns
imull
rcrl
imul
mov
ss
or
stos
push
mov
jae
in
dec
inc
iret
and
adc
push
stos
and
jo
xor
push
fbstp
and
in
cmpsb
xchg
pop
js
mov
jecxz
cmpsb
adc
xchg
sub
dec
imul
nop
jle
jl
in
mov
inc
loope
sbb
and
adc
bound
xchg
jne
push
pop
jp
jle
ljmp
neg
or
push
call
and
inc
rcrl
sbb
ret
in
sub
xchg
stos
jle
xor
push
addr16
mov
mov
and
mov
and
cwtl
mov
popa
pop
call
jbe
push
aas
bound
test
mov
xor
jne
jae
ret
imul
jo
pop
fs
and
call
or
cmp
xchg
outsb
xor
or
sbb
xchg
jne
rol
rcr
scas
push
dec
adc
movsl
jne
aam
or
in
inc
add
insb
dec
movsl
out
jne
xchg
add
data16
sub
mov
sbb
bound
enter
sub
imul
xchg
sbb
stc
fwait
add
xor
cltd
xor
jmp
jl
mov
aam
sbb
add
mov
push
mov
test
cmpsl
sbb
iret
inc
or
mov
sub
leave
and
ret
jb
xrelease
add
outsl
and
call
or
inc
xlat
and
cmp
push
cmp
pop
mov
mov
fwait
ret
mov
sbb
fsubrl
mov
mov
dec
arpl
loopne
and
lods
mov
fldt
push
cld
cmp
sbb
or
leave
push
mov
lods
lcall
jo
push
inc
aad
and
jbe
out
std
xor
cmpsb
icebp
insb
jo
test
push
sbb
jecxz
add
dec
inc
push
adc
ljmp
jmp
rclb
mov
or
cli
cmpsl
xchg
adc
test
xor
mov
add
dec
outsl
arpl
cwtl
and
push
fmuls
std
sbb
mov
add
mov
push
jno
int
add
pop
outsl
add
mov
and
adc
jge
nop
addb
shll
cld
roll
xchg
adc
imul
lahf
sub
pop
sbb
stc
xor
mov
fistpl
xor
mov
push
mov
xchg
fistpl
imul
or
inc
ret
jns
adc
mov
dec
jo
rorb
jnp
stos
jae
xchg
les
push
stos
and
cs
sub
inc
clc
les
popf
adc
mov
mov
lahf
push
jnp
jg
dec
fimuls
xor
xchg
outsb
push
sub
dec
pop
outsb
es
nop
loopne
adc
dec
test
xor
daa
fstpl
loopne
xchg
loopne
jo
hlt
mov
push
imul
leave
dec
out
add
mov
mov
movsb
xor
shrb
gs
xor
es
jns,pn
xchg
jge
arpl
jmp
sbb
ja
jg
sub
ret
xor
mov
adc
mov
ds
add
das
clc
mov
pop
adc
out
mull
mov
jnp
mov
aam
insl
repz
xor
lret
lcall
sbb
lods
push
pop
pop
lcall
dec
repz
mov
cmp
xchg
lods
test
or
xlat
or
push
cmp
jno
cmpsl
rcll
lods
jbe
and
xlat
lods
adc
sbb
jae
out
push
mulb
xor
jmp
mov
jno
jecxz
push
fisttpll
shll
fldenv
cmpsl
cs
ror
add
jnp
leave
testl
xchg
data16
enter
enter
add
fildl
nop
jge
lea
hlt
cmp
repz
pop
xor
mov
cmpsl
incl
lret
fwait
add
xchg
in
push
pop
loope
xchg
loopne
sbb
jp
push
adc
add
sbb
xor
xor
mov
mov
pop
jl
jne
lds
add
mov
rclb
popf
inc
jp
gs
ja
mov
and
xor
add
inc
in
add
data16
lea
pop
mov
fisubl
sub
or
je
js
insb
adc
jecxz
mov
xor
mov
xor
test
cmp
sub
pop
mov
dec
int
aam
outsl
xor
xor
loop
sbb
xchg
nop
xchg
sub
stc
notl
push
jge
sti
push
add
jmp
or
jmp
negb
fwait
incl
mov
push
cmp
adc
pslld
mov
rcll
out
rcll
xchg
ja
lcall
push
push
lahf
sahf
jno
lea
lods
lock
cltd
adc
mov
xchg
cmp
fisubs
sbb
into
inc
ljmp
inc
das
push
rcll
inc
stos
jno
xchg
test
nop
iret
jmp
pop
and
or
mov
mov
push
sub
xchg
dec
stc
xor
mov
adc
scas
data16
js
pop
push
xor
inc
movsl
jb
xchg
inc
ds
jne
push
mov
or
sbb
stc
and
mov
push
dec
inc
pop
into
adc
pop
sahf
add
mov
lahf
sahf
lods
add
pop
aaa
cmp
xor
push
pop
fiaddl
imul
in
test
sbb
rcll
and
xchg
shl
adc
and
movsl
sti
mov
ss
adc
cmpsb
pop
imul
sbb
lods
pop
scas
clc
lret
add
sub
adc
mov
push
std
scas
dec
sub
push
mov
xchg
std
inc
cltd
xor
xchg
icebp
push
xor
add
cltd
mov
stos
lcall
mov
push
jb
mov
mov
cltd
pop
fsqrt
lcall
fidivl
scas
into
test
outsl
fs
pop
sub
inc
xchg
xlat
dec
dec
test
jo
xchg
les
or
arpl
sarb
cmp
aaa
xor
mov
adc
pushf
pop
mov
fcoms
repnz
mov
cmp
jo
stos
jbe
in
rcrl
fidivrs
data16
inc
loope
mov
sbb
add
jge
ljmp
sbb
push
or
add
mov
mov
dec
add
jb
jo
icebp
test
movsb
enter
popa
adc
outsl
pop
push
sub
push
add
int3
xchg
enter
sbb
movsl
arpl
outsl
jmp
add
push
mov
xor
xchg
or
inc
mov
in
stos
mov
push
xchg
pop
mov
ret
mulb
loope
xchg
in
das
nop
lret
jns
mov
out
outsl
inc
icebp
into
dec
xlat
ss
cmpsb
sub
mov
cwtl
ja
or
mov
gs
dec
movsl
push
sub
fwait
xchg
shll
ror
movsb
mov
leave
clc
dec
mov
inc
fs
mov
jae
sub
pusha
jb
add
test
int3
mov
push
jp
dec
and
jmp
int
adc
hlt
in
inc
and
and
aam
icebp
xor
push
fs
lds
aaa
cmp
stos
insb
in
xchg
xchg
aas
inc
scas
sbb
insl
icebp
ss
mov
test
sbbb
das
les
inc
sbb
popa
outsb
cmp
adc
and
inc
out
inc
pop
stos
loop
out
xor
out
clc
mov
add
testl
pop
insl
jb
mov
xchg
jg
fstl
pop
mov
and
adc
mov
xchg
pop
mov
push
in
and
or
test
sbb
std
rorl
sbb
aas
sub
shrl
mov
lahf
in
pop
fists
pop
repnz
arpl
mov
mov
sub
or
inc
outsb
add
dec
icebp
sbb
xchg
js
xchg
outsb
xchg
test
adc
imul
in
jle
mov
fdivrs
fs
outsb
jge
xor
adc
adc
sub
adc
repnz
adc
insl
push
movl
aas
push
pop
pop
xorb
mov
orb
mov
divb
mov
mov
cld
out
test
add
jmp
fwait
movsb
insb
arpl
sub
push
daa
lods
xorb
rorl
imul
imul
jge
loopne
mov
sub
jge
mov
mov
or
gs
je
inc
pop
cmp
cli
cwtl
push
sub
sbb
and
dec
dec
and
sub
inc
cmpsl
mov
pop
idiv
mov
cmp
xchg
testb
dec
cmp
sbb
loopne
fadd
pop
add
lea
pop
pop
js
int3
xchg
int3
clc
lds
in
fisubl
adc
pop
cmp
hlt
dec
jnp
mov
lds
fdivp
add
scas
mov
push
ds
adc
or
addr16
std
addr16
mov
jb
xor
cmpsb
xchg
fs
push
out
andb
and
leave
pusha
xchg
insl
xchg
mov
pop
imul
outsb
sbb
ss
test
dec
popa
stc
popf
mov
imul
pop
scas
mov
fwait
xor
bnd
pop
bound
xor
mov
mov
inc
shr
sub
or
jb
imul
cli
xchg
mov
fucom
iret
sbb
bound
mov
mov
pop
sub
push
inc
jno
xchg
mov
adc
push
cmpsl
cmc
pop
les
in
rcrb
adc
mov
push
fimull
push
gs
stos
jne
mov
call
test
adc
add
lods
mov
clc
dec
pushw
pop
mov
mov
sub
push
aam
stos
jne
jnp
jecxz
xchg
add
lock
test
ds
mov
xlat
mov
les
fs
insb
pop
enter
test
jno
int3
pop
jl
xor
dec
cmp
inc
cli
rcrl
xchg
sbb
fisttpl
xchg
ret
lcall
push
jp
arpl
jmp
xor
inc
mov
test
stc
cmc
push
pusha
stos
push
add
insl
push
push
mov
sub
xchg
pushf
in
adc
pushf
sti
outsb
sub
adc
icebp
add
adc
data16
arpl
jno
push
scas
repnz
jns
mov
sub
adc
in
add
mov
inc
jmp
sub
adc
push
mov
fadds
test
pop
in
mov
pushf
inc
int3
lock
test
mov
inc
xchg
stos
lds
int
jg
jbe
jle
loop
icebp
test
lret
inc
xor
lods
mov
out
sub
xchg
cmc
mov
test
adc
inc
in
cld
xchg
mov
test
cltd
call
cmp
xor
add
das
mov
and
xchg
sbb
pop
jbe
lret
mov
dec
ds
xchg
loop
push
bound
jp
add
add
and
mov
aam
fwait
les
scas
hlt
cmp
aas
lock
cmp
ja
xor
pop
sub
xor
adc
xchg
cmp
orl
popa
in
ljmp
pop
mov
jecxz
push
xlat
mov
rcl
mov
xor
outsb
leave
cli
xor
mov
loop
xchg
inc
jo
shl
xchg
dec
mov
outsl
mov
jmp
xor
popa
pushl
cmp
addr16
popf
orb
repz
fisubl
mov
subl
lcall
push
ret
pslld
sbb
loope
xchg
enter
repnz
jmp
push
adc
jge
or
cs
mov
xchg
pop
sub
stos
je
call
cmc
imul
fs
fsubs
sbb
dec
dec
jns
and
jp
fists
xchg
fs
or
or
cmp
dec
lcall
mov
addr16
mov
fmull
ret
mov
ljmp
and
outsl
xor
push
mov
popa
repnz
vpunpckhdq
icebp
cmp
cwtl
push
xlat
lds
or
cmpb
cld
xchg
sub
movsl
and
add
push
ret
mov
int
ljmp
test
cmp
shll
push
repz
mov
or
xchg
push
das
aam
and
in
cmp
call
mov
push
jg
dec
cmp
and
jecxz
push
pop
push
orl
test
aas
dec
insl
lods
fcomi
push
insl
adc
or
mov
loop
shll
mov
cwtl
dec
insl
outsl
mov
jae
daa
cs
shlb
insl
mov
cmp
orl
imul
mov
iret
bound
mov
ret
add
scas
out
xor
iret
cmpsb
aas
fs
stc
cmpsb
divl
adc
cmp
es
mov
test
xchg
es
sub
test
lahf
xchg
adc
jnp
mov
jb
push
inc
xor
sbb
mov
jg
mov
push
aaa
mov
xor
aas
jae
adc
cmp
pop
ret
mov
mov
or
in
push
repz
sbb
popa
shr
dec
fimuls
fs
push
lahf
xchg
dec
lea
jg
bound
pop
mov
mul
fwait
mov
arpl
rol
test
xchg
xchg
push
pop
xor
stos
rcrb
mov
ret
mov
imul
je
rorb
jge
jle
push
adc
adc
mov
scas
xchg
sub
loop
cmpb
ja
fdivrs
aad
ja
push
dec
or
xor
mov
xor
js
icebp
lods
and
mov
pop
loopne
dec
sti
lea
inc
testb
pop
dec
mov
lds
sub
fmul
adc
lret
fst
imul
fxam
mov
pop
fmulp
mov
xchg
sub
sbb
xor
sahf
int3
push
ljmp
lods
sahf
adc
mov
stos
ret
scas
pop
mov
dec
lret
or
push
mov
adc
mov
inc
cmp
add
adc
jb
cld
loope
add
push
cmpsl
or
push
xlat
adc
ljmp
jnp
dec
adc
adcb
scas
outsl
loope
add
scas
xchg
cld
push
bound
xor
popa
repnz
fwait
jmp
cwtd
fistpl
add
mov
adc
iret
sub
push
mov
addl
repnz
or
pop
adc
mov
aaa
bound
mov
xchg
xor
shrb
mov
xlat
scas
dec
sti
xchg
or
push
fmuls
push
roll
dec
jae
mov
inc
mov
xchg
lcall
int3
and
jl
sti
push
pop
sbb
cmp
loopne
out
pop
nop
add
add
mov
pop
mov
fildl
mov
xchg
mov
and
sbb
inc
pop
call
pop
pop
dec
pop
lea
xor
out
sbb
pushf
jg
sbb
dec
jmp
sub
sub
test
fcomi
int
test
xor
hlt
pop
call
aam
scas
pop
and
imul
stc
jmp
push
mov
pusha
sub
loop
pop
add
stos
cmpsb
into
and
in
scas
mov
arpl
addb
sub
mov
outsb
push
insl
in
or
lcall
push
mov
cmpl
lds
mov
or
mov
dec
sub
decl
sarb
lds
mov
inc
fadd
and
pop
fxch
mov
add
adc
das
sub
cmc
loopne
je
adc
mov
movb
jl
push
jae
es
shll
fistl
scas
std
les
jl
imul
dec
loopne
fs
mull
xor
ja
jae
push
jecxz
inc
lret
ficoml
faddp
adc
dec
sbb
fadds
jmp
add
mov
scas
test
cmp
les
sub
pusha
lret
test
mov
sbb
xor
pusha
cmpsb
mov
inc
sub
cmp
cld
jns
push
or
jecxz
mov
fucom
jne
pop
clc
ja
loop
pop
adcl
int3
insb
xchg
in
pop
jns
cmp
mov
mov
ja
stos
push
xchg
loope
cs
mov
ja
pop
stc
add
xchg
hlt
cltd
sub
rcrl
pop
adc
mov
pusha
add
mov
aaa
xor
cltd
jb
inc
imul
pop
nop
mov
pusha
push
sbb
push
dec
sub
or
jae
add
in
je
ds
bound
in
mov
rclb
jg
cmp
pop
push
jo
imul
push
bound
push
and
inc
stos
mov
fisubs
add
pop
push
jge
and
mov
out
add
scas
aaa
inc
push
mov
sbb
aas
pop
scas
fnstsw
sbbb
cld
icebp
pop
std
xor
mov
sbb
lods
adc
rorl
movsb
xchg
xchg
pop
add
fcmovnb
mov
sbb
mov
pusha
sub
xchg
or
loop
add
or
mov
mov
ljmp
xchg
xchg
dec
iret
shll
adc
fwait
and
test
cmpsb
mov
addl
cltd
inc
cmp
imul
sbb
in
fisubrs
imul
jbe
bnd
aaa
insl
add
jno
pop
bound
stos
pop
mov
xchg
lock
loop
jl
fidivl
fs
ljmp
subb
add
pop
xor
iret
xchg
cld
idivl
push
shrb
hlt
sarb
mov
test
sahf
sbb
push
or
mov
stos
add
xorb
add
inc
mov
sub
loopne
sub
fsts
and
imul
int
not
pop
lock
outsb
xchg
ds
add
sbb
test
lea
sub
cmp
std
gs
xchg
jecxz
negb
sbb
aam
jns
hlt
cwtl
movsl
inc
pop
lods
jo
add
mov
filds
movsl
push
cmpsl
pop
xor
adc
or
or
cmpsl
sahf
mov
fidivs
rcrb
mov
dec
add
in
loopne
enter
popa
daa
in
ja
jp
out
aas
loopne
push
movsb
jecxz
xchg
push
data16
jns
cwtl
jge
xchg
jns
add
popf
dec
adc
jecxz
lods
clc
push
pop
insb
inc
fxch
into
sbb
fs
imul
xchg
rolb
int3
mov
repnz
xchg
fcomip
jmp
sub
jns
enter
pop
daa
xor
imul
pop
je
pop
ss
dec
cmovle
adc
mov
jne
mov
jg
push
aam
push
sub
or
ss
cmp
sbb
or
pop
inc
inc
and
adc
repz
stc
cmp
inc
lret
movsb
mov
xor
mov
ja
add
into
cmp
and
pop
sub
jp,pn
sub
outsb
cli
out
stos
jecxz
fiaddl
cmp
or
and
repnz
xchg
xchg
dec
inc
pusha
fdivl
or
jl
sbb
ljmpw
loopne
pop
fdivrs
pop
or
jns
ret
pop
jo
mov
jns
jno
and
sub
mov
push
js
dec
test
pop
jp
into
pop
pop
repz
cmp
fidivs
xor
pusha
into
in
lret
sti
xor
nop
daa
lahf
xor
mov
jecxz
in
inc
inc
mov
sbb
std
mov
push
mov
inc
xor
inc
ja
mov
repz
push
mov
or
mov
outsb
inc
and
arpl
daa
push
enter
subl
sub
push
adc
mov
pop
mov
xor
jno
mov
fdiv
mov
mov
leave
dec
fs
aad
or
push
insb
mov
fistps
jecxz
mov
adc
mov
jle
mov
push
lock
jle
ror
sahf
push
and
std
jmp
loope
mov
mov
rclb
sbb
in
inc
cmpl
jo
jno
out
imul
insl
repz
sbb
out
int3
xor
cld
imul
push
movsb
mov
clc
adc
dec
push
sub
scas
ds
xor
nop
dec
mov
xor
cmp
mov
popa
in
xchg
test
cmp
lret
jnp
push
mov
xor
daa
pop
xor
cmp
sub
xor
mov
push
pushf
cli
jg
in
jne
sub
and
popa
jno
into
insb
dec
pop
sub
jne
rcl
xchg
pop
and
dec
lret
mov
mov
fs
movsl
cltd
mov
pop
cmp
cwtl
divb
push
je
dec
stos
mov
bound
in
rorl
mov
inc
out
xor
mov
mov
orb
sub
cmpsb
sub
es
mov
sbbb
cmpsl
das
xlat
mov
in
rorb
fsubrs
pushl
fistpl
mov
ret
in
adc
cmp
xchg
sub
and
xor
sbb
shrl
jecxz
push
adc
add
jmp
cmpsl
test
adc
cmp
jp
idivl
stc
scas
xorb
fdivl
std
push
nop
xor
bound
bound
js
mov
xor
pushf
stos
loop
hlt
scas
xor
mov
push
lods
push
xchg
xor
xchg
ficompl
in
sub
or
aaa
das
push
jae
mov
jecxz
aas
gs
sub
and
repz
xor
std
ret
push
es
push
jp
pop
sub
int
push
ss
std
or
xchg
inc
and
mov
xchg
scas
int3
es
or
xchg
sub
popf
xchg
leave
jae
popa
ficompl
ljmp
xor
push
ror
sbb
out
mov
call
push
cs
or
fnstsw
jne
paddsw
fdiv
lret
push
pushf
std
adc
shr
in
inc
sub
xchg
stc
push
daa
cmp
pop
jae
in
dec
xor
and
xchg
sbb
aam
mov
outsb
mov
inc
mov
dec
mov
aad
push
sahf
flds
mov
movaps
sbb
or
ljmp
fcompl
sub
add
and
xor
jmp
sbb
add
out
jo
adc
or
addr16
pop
lods
inc
mov
repnz
loop
mov
xlat
mov
mov
stos
or
xchg
sub
xor
push
add
sub
int3
fmull
lods
subb
dec
arpl
pop
inc
add
inc
mov
or
out
pop
cmp
fidivrs
mov
add
pop
addb
xchg
and
adc
or
mov
push
mov
clc
js
sarl
jecxz
out
xchg
mov
stc
mov
pop
stos
adc
xchg
dec
sub
add
ljmp
adcl
fcomp
dec
imul
sub
js
jne
adc
cmpsl
sub
push
call
test
idiv
mov
push
mov
pop
adc
cli
cltd
data16
movq
popa
stos
jle
jbe
in
jae
mov
pop
into
push
and
sbb
jae
jns
jecxz
je
sti
in
inc
shrl
jl
mov
jge
add
pop
or
arpl
dec
stos
xchg
add
push
cltd
mov
adc
pusha
mov
dec
ljmp
outsl
mov
movsb
call
icebp
js
push
scas
sub
xchg
divb
shlb
and
pop
leave
mov
xor
in
cmp
cmpsl
lret
xchg
sub
xchg
fdivrs
aas
andl
mov
faddp
add
fs
jb
mov
dec
or
pushf
cld
cmp
sub
insl
jmp
pop
and
aam
jg
mov
mov
mov
testl
dec
pop
jl
fwait
outsl
push
pop
push
lret
xor
pop
mov
jmp
and
lea
mov
mov
and
dec
aas
xchg
in
or
out
inc
hlt
jae
mov
cmp
fnstcw
push
xchg
repnz
outsl
mov
mov
clc
out
push
ja
fstp
cmpsb
or
mul
fsubrl
and
mov
mov
scas
jecxz
mov
rcll
and
lods
and
jns
fdivl
shll
or
add
out
inc
fdivs
ds
push
cmp
rclb
jmp
scas
jp
lret
adc
ret
pop
lcall
cmpsl
popf
cli
fcmove
ret
imul
out
xchg
jle
xchg
xor
pop
and
imulb
sub
fs
imul
cwtl
adc
pop
ds
lret
cmp
iret
dec
pusha
adc
sub
in
jmp
mov
xchg
push
jne
fcomi
std
lods
push
pop
inc
xchg
aam
loopne
repz
mov
cmp
cmp
pop
imul
fsubl
mov
cmpb
xchg
jnp
push
xchg
pop
mov
rcrl
fstl
push
rcll
fbstp
fsubs
mov
or
aad
push
ja
xor
jg
xor
sbbb
lods
imul
frstor
dec
in
pop
insl
fs
es
add
and
mov
clc
mov
sbb
iret
test
sub
or
scas
imul
cmp
sbb
nop
mov
nop
add
push
out
sbb
inc
fidivs
cmpb
or
cltd
out
call
ja
out
add
stos
daa
and
test
xor
sarb
movd
movb
repz
in
fadd
xor
lcall
int3
dec
cmp
jns
cmc
pop
es
mov
jnp
xchg
pop
mov
decl
lea
or
jbe
dec
pop
push
sub
sahf
add
push
sarl
movsl
mov
repz
aad
or
cld
inc
sub
xchg
ss
out
and
scas
sub
mov
ret
cmp
xchg
mov
test
mov
in
std
add
cmp
lea
inc
les
sti
imul
test
cmp
ds
inc
xchg
outsl
rcrl
ret
dec
lds
ds
loope
es
leave
fbld
out
aas
bound
jl
jge
sbb
push
add
incw
out
arpl
mov
mov
nop
rcrb
mov
divb
imul
loop
and
push
clc
gs
fldt
in
inc
test
cmp
cwtl
xlat
scas
mov
ja
mov
and
ror
sub
pop
enter
xor
repnz
imul
jl
pusha
sar
jne
idivb
sub
test
cmp
pop
push
cwtl
movsb
sti
cmp
push
push
add
cmp
rcrl
cmp
insl
cs
popa
mov
jge
mov
push
fsubp
fwait
and
ret
fistps
mov
test
xor
sbb
pop
xlat
arpl
sbb
inc
mov
pusha
scas
xchg
repnz
sub
std
pop
neg
sbbl
xchg
jns
insl
and
fcoml
adc
inc
cmc
lock
stc
xor
or
push
mov
add
rcll
push
mov
icebp
jl
popf
mov
les
lock
sbb
sti
leave
dec
xorl
mov
or
inc
lcall
shrl
fisttpll
adc
orb
sarb
push
das
iret
into
ret
and
in
lea
shrb
and
sub
insl
inc
cmpsb
xchg
xlat
insl
mov
dec
pusha
aad
testl
inc
imul
rcl
idivb
leave
lock
mov
jmp
scas
xor
lods
rcl
aas
hlt
addl
xchg
std
daa
push
sub
out
fimuls
inc
sbb
ljmp
test
pop
xchg
add
or
lods
mov
je
jecxz
add
fstpl
ljmp
jno
aad
pop
adc
jl
test
data16
sti
xor
cmpsl
imul
pop
mov
xor
ljmp
or
insb
leave
ljmp
outsl
call
sub
aad
cwtl
in
cmp
lret
pop
scas
in
sbb
mov
ret
lds
mov
mov
pop
mov
jecxz
xor
aas
inc
rcrb
cld
sarb
and
push
or
in
in
das
add
add
push
and
mov
arpl
aad
push
testb
nop
ljmp
xchg
cmp
add
dec
cmp
jo
and
sqrtps
xchg
cli
fstp
push
sbb
jo
das
pop
pop
push
pop
pop
sbbl
sbb
and
add
cmp
fstpl
stos
lahf
nop
lret
in
cmp
mov
dec
jns
lahf
mov
lahf
sbb
fimuls
dec
push
test
je
aam
negb
dec
lret
data16
inc
stos
outsb
mov
mov
shll
stc
mov
mov
sbb
inc
sahf
aam
shlb
insb
cmc
scas
fldenv
mov
pop
movb
addr16
loope
mov
fists
cs
jbe
sub
out
in
scas
popf
lock
dec
lret
inc
dec
je
fucomi
pop
dec
rclb
mov
xchg
scas
out
push
inc
push
push
push
sbb
sbb
fdiv
and
cltd
stos
xlat
ficoms
mov
test
insl
imul
or
adc
mov
inc
and
inc
or
int3
add
cmpsl
std
int3
cmp
pop
push
jo
in
xlat
mov
cmp
sub
mov
es
jecxz
dec
jno
aam
sbb
or
or
inc
mov
and
out
movsl
adc
pop
dec
repz
push
mov
dec
xlat
mov
xchg
aam
mov
leave
jmp
push
scas
pop
jo
pop
sbb
sub
data16
mov
push
push
es
fwait
aam
cmp
movsl
je
cmpxchg
lret
daa
fs
mov
aam
mov
imul
cmp
ss
xlat
xchg
ds
sub
push
pop
cmp
jne
les
shl
xor
add
enter
dec
fcmove
int3
lahf
sub
divl
testl
push
mov
into
divb
jge
arpl
push
lcall
sti
jg
cmp
mov
mov
inc
pop
es
push
data16
ret
cmp
gs
gs
mov
xor
stos
loope
and
ja
or
sbbl
xchg
pop
jne
sbb
jp
sahf
pop
push
mov
inc
jne
dec
lods
mov
jnp
std
sub
mov
aad
jge
mov
movsb
push
aam
xor
jmp
repnz
loop
mov
fwait
or
mov
mov
add
inc
mov
subb
cwtl
movsb
dec
lods
mov
les
xchg
cs
repz
jbe
and
mov
or
dec
sar
ss
rorb
loopne
or
jbe
pushf
mov
push
imul
call
fistl
cltd
push
shrb
dec
lret
jbe
call
xor
or
ja
sub
rorl
sub
cltd
jl
jbe
mov
dec
xor
insl
push
mov
insl
adc
icebp
push
inc
pop
sbb
adc
hlt
inc
add
mov
sub
pop
mov
loopne
sbb
arpl
jl
dec
or
fmul
jo
movb
xor
int
sub
sub
jp
xchg
sarb
lods
movsb
je
int
flds
jle
daa
mov
cwtl
roll
outsb
xchg
xchg
std
daa
jp
in
push
mov
mov
lahf
jo
sti
mov
adc
hlt
loope
daa
mov
clc
pop
push
shll
xor
mov
push
jns
sbb
pusha
iret
mov
popa
cli
mov
aam
int
int
xchg
xchg
insl
cmpsb
in
lods
loopne
test
sbb
sbb
xchg
jmp
rclb
pop
leave
imul
push
jns
testb
mov
test
inc
rcrl
jo
inc
xor
mov
das
and
xor
lcall
adc
mov
das
lcall
xor
adc
pop
popf
std
sbb
int
pop
aaa
pop
inc
inc
pop
lret
inc
stos
das
pop
lret
mov
outsl
push
fucomp
sub
cld
lock
add
mov
lods
add
out
scas
cmpsb
int
dec
mov
rorl
cwtl
xchg
pop
lret
push
das
orb
into
cld
daa
lfs
insl
lcall
dec
or
test
or
lods
fdivs
jno
pop
pusha
xor
test
add
cs
mov
mov
mov
jle
mov
lret
sbb
in
stos
cmpsb
pusha
push
cmp
xor
add
dec
out
and
xchg
inc
ret
lahf
add
adc
orb
cld
jb
mov
imul
mov
or
mov
dec
inc
pop
dec
stos
test
jl
orb
xchg
rclb
addr16
dec
popa
ficompl
outsl
clc
mov
sbb
out
add
lea
shll
fldcw
cmp
aad
pushf
mov
loop
inc
push
jns
dec
scas
test
mov
out
subl
xorb
mov
aas
mov
pusha
jno
cmpsl
mov
pop
inc
int
outsb
lret
push
adc
pop
ss
and
fcoms
in
stc
mov
notb
lcall
xchg
inc
pop
xlat
pusha
push
mov
icebp
push
mov
fdivs
push
and
inc
insb
loopne
cmp
daa
xor
jp
test
push
cmp
aas
jle
pop
aad
cli
fcmovb
pop
mov
lret
xor
mov
sbb
cmp
out
cmp
shll
sbb
stos
loopne
lock
lods
cmp
jns
fmuls
inc
outsb
movsl
xor
outsb
fdivl
aas
insb
ret
scas
push
adc
sbb
inc
adc
aam
add
fnsave
inc
clc
add
or
cmpsb
jp
pushfw
adc
adc
push
jbe
inc
cmp
mov
je
call
rclb
aam
scas
adc
shll
cmc
je
push
ds
dec
and
dec
loope
aad
mov
jb
xor
mov
sub
stos
jle
shrl
jge
or
jno
adc
subb
insl
inc
insb
pop
xchg
push
adc
jae
jnp
rol
mov
inc
xchg
jmp
cmp
dec
lods
cld
imul
aad
out
sarl
insl
xchg
adc
xor
sub
adc
xchg
cld
adc
jp
sbb
fbld
ljmp
cmpsb
pop
lods
cwtl
fs
xchg
clc
out
push
rcrl
mov
divb
pop
popa
push
or
add
je
in
mov
sub
stos
add
lcall
adc
ret
sub
sbb
cld
adcl
sbb
dec
nop
lahf
test
shlb
mov
int
loop
shlb
xor
push
lea
sbb
mov
add
ss
sarb
imull
psubsw
nop
dec
pushf
test
fst
push
mov
call
mov
mov
add
in
jg
nop
push
pop
ss
jg
fisubs
sbb
pop
mov
pop
and
iret
popf
jno
sbbb
cmp
add
inc
fwait
cli
and
xor
dec
sub
test
add
inc
das
inc
mov
sbb
inc
mov
mov
jbe
lret
addl
ljmp
loope
rorb
mov
inc
fisubl
xor
dec
ret
xor
mov
arpl
aad
sbb
ret
dec
sar
mov
popa
jg
sub
jae
test
and
ljmp
inc
lods
mov
adc
sbbb
jae
pmulhw
stos
ss
dec
pop
sub
out
ja
inc
rclb
repz
pop
cmp
xor
mov
pop
pop
decb
ret
jnp
imul
ret
xor
in
mov
ja
adc
push
mov
push
out
mov
mov
loopne
jp
cwtl
cli
sub
cmc
fwait
popa
or
mov
xchg
sarl
test
jae
add
push
pop
jg
mov
enter
fs
adc
rcll
xchg
push
lret
ret
mov
xchg
call
iret
fwait
lret
mov
cmp
in
mov
stos
sub
sub
sbb
int
jmp
arpl
es
bound
push
add
ds
pop
cmpsb
dec
add
xor
and
iret
stos
daa
push
fistl
push
sub
jno
pop
sarl
imul
mov
push
iret
inc
iret
xor
test
mov
ds
xorl
push
outsb
xor
xchg
pop
je
out
dec
sbb
aam
mov
push
ljmp
data16
pop
add
lret
mov
ffreep
outsb
inc
sub
pop
ficoml
or
cmp
cmp
out
arpl
das
std
lods
or
xchg
inc
lds
or
addr16
inc
daa
daa
adc
xchg
inc
loop
stc
test
aad
cmp
mov
push
int3
sti
adc
mov
test
mov
or
in
loope
in
or
cltd
or
and
mov
or
inc
adc
cltd
bound
js
inc
fmul
fistpll
loopne
shll
or
in
mov
and
sub
in
mov
popf
out
xlat
in
into
hlt
lret
mov
mov
rcr
sbb
fisttpll
and
jmp
or
jne
jp
int
jecxz
stos
xor
out
jge
into
push
and
sbb
lock
cmp
mov
xchg
lods
gs
insl
ljmp
dec
rolb
pop
fcomps
add
cmp
aam
mov
movsl
jno
clc
lret
rorl
mov
inc
insl
enter
sbb
jmp
fistpl
push
push
adc
sarl
cmp
inc
sar
add
jne
mov
lret
lahf
push
mov
xchg
dec
cld
mov
pop
outsl
xor
ret
js
cmp
or
jmp
sub
push
mov
aad
icebp
mov
cs
in
inc
test
in
in
mov
scas
xlat
sub
cmp
jge
lds
sub
cmp
aaa
xor
inc
stc
pop
mov
outsl
dec
test
imul
outsb
addr16
and
in
mov
scas
je
sub
fst
jg
mov
arpl
pop
mov
xchg
stc
or
inc
jnp
in
in
dec
dec
cmp
repz
dec
inc
out
sbb
movsb
clc
sarb
dec
push
neg
push
scas
mov
jno
push
or
mov
daa
sbb
in
ret
xchg
ret
pop
dec
push
std
out
dec
pushf
int
sub
out
push
imul
xlat
int3
int
dec
xchg
dec
jne
loop
and
adc
dec
loop
into
nop
jp
dec
sarb
cmp
dec
inc
jle
add
mov
out
bound
jne
js
xchg
cmc
jecxz
ss
ljmp
mov
mul
sbb
out
adc
or
fisubl
mov
push
mov
mov
pushf
dec
dec
addb
and
or
and
xorl
out
ret
xchg
pop
outsb
mov
dec
pop
cmp
bound
movsb
dec
mov
addl
cs
adc
push
dec
xor
aam
outsb
testb
jecxz
mov
movsl
insb
cmp
rcrl
bound
xor
aas
jge
inc
push
clc
adc
mov
lods
mov
scas
inc
lret
mov
mov
inc
xor
lret
jnp
js
popf
ss
stos
in
hlt
mov
test
push
xchg
pop
jle
data16
out
addb
sahf
adc
add
push
pushf
testb
sbb
cmpsl
ficoml
popf
xchg
lret
ljmp
add
pop
xchg
lock
or
out
mov
inc
mov
lods
jmp
jmp
aam
movsl
xor
lods
adc
aaa
dec
daa
dec
mov
cmp
push
add
iret
jge
lret
fiadds
dec
jne
pushf
mov
daa
iret
ret
cwtl
repnz
mov
add
and
mov
and
fnstsw
ja
inc
roll
cmpsl
pop
mov
cmp
mov
rcr
js
mov
cmp
pop
loopne
and
insl
call
shrl
lods
push
aad
and
pop
mov
movsl
mov
mov
shlb
cltd
sahf
jae
inc
xchg
lahf
push
inc
inc
stos
pop
pop
sbb
imul
ja
out
hlt
sbb
sbb
nop
fldl
lea
out
pop
and
mov
popf
imul
xchg
nop
stos
or
mull
pop
mov
out
sbbl
inc
cmp
xchg
jecxz
adc
adc
mov
and
xor
adc
sbb
jno
lret
out
movsb
sbb
std
adc
push
roll
pushf
ljmp
orl
mov
pop
push
jbe
lahf
test
sub
xchg
or
aad
sub
adc
sub
adc
into
enter
ret
loop
les
sarb
push
sti
adc
jge
orl
sbb
lods
jmp
mov
movsl
lods
adc
lcall
outsl
sub
dec
cmc
adc
pop
cltd
xchg
pop
nop
in
mov
subb
cmova
xchg
mov
cmp
test
std
fucomip
icebp
gs
fldt
rcrb
xorl
adc
pop
les
push
insb
fstl
inc
and
insb
xchg
in
add
in
jb
mov
rcll
inc
out
mov
daa
mov
xchg
out
and
ror
xorb
mov
repnz
adc
scas
inc
loop
dec
add
adc
adc
imul
shll
mov
lds
je
outsb
rcll
gs
inc
push
pop
adc
repz
push
add
and
jb
sbb
pop
add
filds
or
mov
push
fsubrs
push
add
push
add
out
xlat
sub
lds
jbe
inc
and
arpl
sub
nop
xchg
add
push
out
lods
fs
or
cli
pop
xchg
arpl
mov
outsl
inc
or
scas
mov
add
mov
xor
pop
popf
add
lods
add
pop
test
popf
enter
fst
pop
insl
jecxz
jns
es
int
outsb
mov
lods
es
sbb
push
pop
lcall
add
outsb
test
test
xor
and
mov
aaa
and
hlt
inc
push
dec
jmp
mov
pop
sti
pop
push
adcb
push
dec
inc
arpl
xchg
dec
insl
imul
lods
sbb
sbb
dec
sahf
bound
in
sbb
cmpsb
jp
adcb
and
sbb
cmp
mov
push
imul
xor
ds
xchg
xchg
jns
sarl
push
in
enter
and
pop
adcl
daa
rcr
fwait
jae
aas
je
inc
jne
arpl
repz
cmpsl
dec
xor
pop
call
cli
adc
jecxz
or
mov
pop
outsl
test
mov
mov
out
shlb
mov
test
mov
call
fdivr
sahf
shr
loopne
mov
insl
cld
push
mov
or
mov
jbe
dec
test
and
cltd
lock
xchg
cmpb
push
popf
inc
mov
xor
nop
ds
xchg
out
pop
jle
shlb
pop
inc
xchg
cmc
xchg
enter
mov
xor
fs
mov
ret
xchg
push
in
jae
inc
rcrl
movb
jo
lahf
popa
test
jae
loopne
sbb
scas
mov
cmpl
cmp
xor
enter
clc
insl
mov
imulb
xchg
or
sbb
ja
fidivrs
pop
pusha
lds
call
mov
xchg
in
retw
imul
xor
adc
fdivrp
inc
call
cwtl
ja
xor
int
daa
pop
arpl
adcl
jge
mov
push
jge
js
fldenv
lods
mov
xor
mov
outsb
sti
or
mov
loope
cmp
push
xchg
jp
add
mov
cmpsl
imul
sub
jae
mov
inc
fwait
adc
xchg
adc
pushf
mov
or
iret
iret
rcrb
lahf
cwtl
xchg
mov
sbb
push
mov
test
push
ja
lcall
ja
negl
cltd
mov
je
testl
movsl
cmp
mov
mov
adc
cmp
xchg
push
icebp
fldt
jo
movsb
gs
test
outsl
xor
push
outsb
xchg
popf
fldenv
and
ss
fisubs
lods
xor
arpl
in
out
sahf
fildll
fldt
ljmp
or
push
xchg
add
jno
sbb
cwtl
adc
leave
sub
jl
fwait
pop
mov
in
imul
inc
or
jg
add
xor
cmova
aam
push
out
adc
test
mov
push
sub
fiadds
les
xchg
push
or
or
cmpsb
mov
xchg
jb
mov
pop
shl
dec
scas
or
scas
jbe
imul
fidivs
inc
push
mov
sub
xlat
mov
mov
push
sub
lret
cmp
cmp
jg
notl
lds
lock
lcall
shr
xchg
sub
adc
inc
sbb
add
int3
cmp
inc
dec
cltd
jne
js
mov
pusha
ss
test
stos
icebp
adc
leave
dec
int
sbbb
jl
sub
adc
pop
mov
cld
push
jae
cld
mov
xor
push
push
sub
mov
lahf
mov
dec
movlps
mov
addl
sbb
mov
fs
push
jno
xchg
rcrl
xchg
mov
lock
add
mov
das
adc
test
int
into
repz
jns
pop
lods
xor
dec
jnp
ret
add
adc
cmp
enter
movsb
jnp
mov
xor
cmp
cmpsb
insb
les
std
xor
mov
loopne
fcmovnbe
data16
jns
jno
fdivrl
mov
ja
mulb
sbb
pushf
stos
movsl
xor
into
adcl
lret
push
sbb
sbb
in
jno
sbb
in
push
dec
add
adc
mov
inc
ja
dec
mov
fstpt
cs
mov
mov
stos
lods
xchg
int
pushf
das
and
or
adc
mov
jmp
dec
nop
mov
cs
xor
adc
cmp
stc
dec
xor
sub
jbe
cwtl
jo
imul
pushf
std
insb
out
shll
aad
pop
jnp
pslld
mov
add
or
es
in
sbb
loopne
inc
mov
adc
in
cltd
or
xchg
pop
inc
sbb
push
mov
ret
aam
sub
sbb
sub
out
int3
mov
push
frstor
push
pusha
sbb
pop
xor
in
call
mov
loope
adc
out
mov
loope
sahf
cwtl
testl
dec
call
ss
pop
push
dec
negb
sbb
jns
inc
push
add
frstor
xchg
scas
push
addl
add
dec
shr
cmp
xor
sbb
push
arpl
movsb
repz
sahf
adc
jno
daa
mov
dec
out
test
lcall
or
add
fisubrl
mov
gs
stos
mov
stos
or
nop
push
cmpsb
cltd
in
pop
adc
dec
js
stc
enter
cmpsb
xchg
data16
pop
data16
shll
jae
pop
fnstenv
dec
jo
fnstcw
push
dec
dec
inc
sbb
pop
pop
cmp
fsubs
sahf
push
outsl
pop
push
add
sbb
sbb
pop
mov
or
push
push
lods
sbb
push
or
jnp
ja
ss
jo
push
jno
jo
push
mov
inc
mov
xor
insl
xchg
inc
push
iret
pop
inc
or
daa
fstps
movsb
rcrl
int3
je
nop
xor
out
mov
sbb
dec
or
ljmp
insb
sub
stos
mov
lret
imul
scas
pop
lea
sbb
inc
and
sub
loopne
sbb
cmpsl
and
ljmp
xchg
test
mov
jb
push
data16
mov
push
sahf
out
fwait
xchg
dec
in
fs
xor
mov
out
into
mov
mov
or
jge
outsl
fs
aaa
dec
mov
push
push
aaa
adc
scas
movsb
data16
add
and
cmp
xchg
adc
cmp
jmp
ret
shll
mov
and
mov
mov
insl
hlt
dec
stc
xchg
adcb
test
test
jns
fs
fdivl
lret
mov
push
in
lcall
mov
xchg
cmp
mov
pop
add
fistps
scas
fildll
jl
add
sahf
or
pop
jo
inc
mov
pop
aam
stos
fwait
add
insb
dec
popl
or
add
jmp
pop
jae
dec
cmp
loop
loop
out
rorl
inc
mov
xchg
cmp
fstpl
out
xchg
out
lods
cmpsl
outsb
movl
pusha
push
pop
divl
sahf
sub
rorb
gs
aaa
xor
fs
pop
das
fisubrl
jo
push
xchg
inc
xchg
test
add
enter
and
fs
xchg
ss
mov
fs
cmp
dec
scas
test
add
and
aas
sub
je
sbb
cmp
dec
and
shlb
je
fstps
clc
mov
push
jg
inc
add
mov
xchg
stc
movsl
arpl
lods
or
mov
cmpsl
stc
daa
jb
xchg
mov
lret
or
xorb
jp
aad
mov
das
sar
dec
xor
pop
sbb
shufps
leave
xchg
daa
iret
adc
jbe
out
pop
or
in
mov
pop
jo
outsb
or
and
imul
push
dec
clc
mov
add
mov
bound
fld
jb
xchg
inc
cwtl
bound
rcrl
jl
xlat
cmpsb
fsubrl
jg
aaa
xlat
mov
mov
sbbl
xchg
lods
cmp
inc
and
pop
addr16
mov
sar
pop
mov
mov
xchg
mov
cmpsb
fdivrp
test
mov
dec
xchg
cmp
lock
outsl
sub
outsb
dec
sbb
addl
sub
lods
hlt
inc
mov
and
xorb
call
xlat
push
adc
lret
fst
stos
jle
rolb
es
push
pop
jmp
xchg
jne
push
mov
and
sub
repz
push
mov
popa
jecxz
push
sbb
mov
sub
fsub
or
adc
mov
outsl
test
mov
rcrl
aam
jmp
loopne
out
fisttpl
psllq
add
movsb
shlb
and
fnsave
lret
and
lods
scas
repz
nop
mov
inc
sbb
and
cmp
dec
sub
out
push
xchg
sahf
bound
inc
lcall
shrb
out
pushf
or
adc
and
mov
jp
outsl
mov
jbe
fwait
in
and
pop
mov
adc
mov
in
popa
pop
insb
fs
xor
mov
fwait
xor
adc
insb
push
lret
mov
mov
dec
pop
loope
stos
icebp
scas
or
pop
pop
in
repnz
lcall
cmpsl
enter
cmp
out
and
test
add
ja
inc
jae
jns
gs
outsb
sub
fxch
ret
or
or
mov
cmp
xor
cmp
outsb
mov
sahf
popf
xchg
mov
ss
mov
fs
xlat
cmp
pop
push
xor
pop
dec
mov
push
ljmp
loopne
sub
lds
mov
rolb
movsl
into
data16
cmp
xor
mov
insl
punpcklbw
push
sbb
fstps
adc
mov
out
jge
sbb
test
cmp
sub
jo
imul
icebp
and
ret
shlb
jo
lock
ja
out
sbb
imulb
dec
rclb
push
xchg
push
xchg
push
or
jp
xor
push
inc
jbe
and
add
and
dec
jg
xor
jge
negb
sbb
xchg
xchg
lret
test
inc
bound
and
dec
repnz
inc
iret
stos
enter
mov
push
das
add
push
xchg
cmc
mov
icebp
jg
and
test
insl
and
imul
push
fwait
cmc
enter
rol
pop
outsb
jae
mov
lahf
xchg
jns
fistps
xchg
and
ss
sub
pop
mov
mov
fcompp
jge
test
ljmp
outsb
or
outsb
inc
mov
sbb
push
test
cmpsb
cmpsl
inc
cmp
and
and
dec
sub
push
dec
sub
call
mov
inc
pop
imul
cmpsl
push
int3
inc
lret
shl
mov
push
xchg
leave
outsl
or
mov
add
ret
push
iret
sub
aaa
in
les
mov
mov
into
sti
fcmovnu
pusha
cmp
imul
shrl
add
stos
gs
sub
xor
test
aad
loopne
jg
out
push
insl
mov
pop
scas
push
xor
or
add
xlat
push
fwait
adc
dec
push
inc
cmp
outsl
test
rol
mull
stos
xlat
pop
mov
icebp
push
call
sbb
mov
cmp
cmc
shr
cmp
flds
addr16
xor
pop
les
add
adc
pop
xchg
cmp
pop
pushf
pop
jae
rcrl
and
stc
ds
popa
dec
dec
daa
sti
std
stos
cwtl
dec
fsubl
jmp
push
push
jno
pop
pop
stc
int3
les
mov
lea
sahf
test
mov
fs
mov
cmpsl
cmp
out
es
jno
gs
pushf
jb
sbb
cltd
in
cmp
scas
mov
jne
adc
inc
sub
inc
push
cs
adc
mov
into
aas
cs
cmp
fildll
lret
mov
negl
jne
adc
aaa
dec
dec
xchg
xchg
sub
pushf
or
insl
mull
lahf
or
inc
xlat
outsl
int3
mov
sbb
mov
jbe
pop
or
out
testb
pop
into
mov
adc
bound
imul
fcoms
mov
and
into
jge
mov
std
mov
fistps
sub
push
ds
addb
imul
dec
push
jecxz
in
and
out
lea
inc
call
mov
scas
mov
fists
stc
adc
scas
xor
adc
xor
das
std
sti
sbb
notb
sahf
fldt
push
jo
dec
mov
rorb
mov
les
testl
mov
int
add
adc
jnp
imul
mov
pop
out
rcrl
adc
movsb
push
mov
mov
cmp
mov
hlt
out
js
imul
inc
sbb
xor
and
push
sbb
dec
mov
in
inc
sbb
jg
sub
push
das
out
mov
pusha
xor
es
mov
pop
xor
lods
sbb
mov
xor
jmp
lock
xchg
lea
fiadds
sub
pop
jno
cmp
adc
sub
sub
cmp
out
aas
fcomp
dec
aaa
lods
add
add
das
sbb
insb
aad
leave
dec
push
or
sub
mov
mov
in
loop
pusha
fnstcw
out
imul
pop
ret
push
sti
add
pop
mov
or
sbb
cmp
add
xor
push
loop
movsl
testl
in
dec
and
inc
rcrb
pushf
xchg
mov
mov
cmc
push
arpl
icebp
xor
push
sbb
lcall
rorb
call
rol
add
gs
or
loop
js
loop
jne
pop
add
clc
mov
pusha
xchg
push
es
popa
xchg
and
adc
or
fucomip
jmp
fsubr
mov
inc
daa
push
and
add
out
pop
dec
cmp
xchg
lret
mov
mov
dec
daa
push
fimull
enter
or
pusha
sub
arpl
mov
pusha
cmp
jb
fidivl
hlt
popf
add
aam
js
lods
xchg
add
or
xchg
jns
mov
aaa
out
dec
daa
pop
arpl
mov
lahf
mov
out
adc
pop
xor
insl
push
mov
mov
mov
test
loope
and
inc
mov
stc
unpckhps
fildl
insb
and
stos
out
xchg
jp
out
jo
sbb
out
jg
xchg
mov
pop
ss
pop
ja
push
adc
out
xchg
es
mov
std
mov
js
out
sbb
sub
jg
dec
cmp
mov
or
sbb
rorl
dec
add
mov
or
xchg
sub
mov
insb
outsb
shlb
sbb
jno
sub
ret
inc
rcrl
inc
clc
or
cmp
mov
pop
adc
adc
das
test
jae
sbb
int
lret
sub
call
pop
mov
sbb
test
fstl
js
and
leave
xchg
push
cmp
xor
pop
dec
jnp
fwait
arpl
jmp
inc
jge
sub
cltd
jo
xlat
test
dec
adc
push
jbe
das
cwtl
and
add
cmp
jo
aam
nop
mov
and
xlat
mull
jp
mov
ds
push
xchg
aad
inc
sub
pop
aad
nop
shl
adc
pop
negb
cmp
pop
dec
loop
sbb
cmpl
aas
iret
inc
cmpsb
xchg
mov
jns
ljmp
fimuls
ljmp
lods
mov
rcll
cwtl
push
or
push
or
hlt
inc
push
add
imul
jmp
dec
jae
jg
mov
xchg
xor
cmp
xchg
jl
jg
lods
lahf
outsl
jne
xor
inc
cmc
mov
fbld
sbb
inc
in
pop
hlt
fwait
mov
rolb
lods
adc
xchg
add
test
fdivl
clc
fidivrs
test
sbb
scas
mov
sbb
je
or
sahf
and
xchg
into
outsl
or
out
aam
xchg
cs
bound
mov
out
int3
ss
jne
rorl
inc
movsb
mov
xchg
jge
sbb
aaa
mov
mov
je
orb
jbe
ret
mov
mov
inc
push
mov
push
ret
lods
jne
pop
es
cmp
inc
jge
jg
mov
les
into
cmpsl
pop
sbb
lret
sahf
call
sbb
adc
sub
push
mull
aas
lahf
popa
lods
cltd
mov
sbb
mov
sbb
xor
dec
insb
push
out
adc
cmpsb
mov
add
inc
jns
pop
jmp
test
gs
pop
ret
cmp
lods
xchg
push
push
stos
dec
add
mov
jl
dec
xchg
jp
jo
add
push
stos
xchg
scas
inc
clc
out
adc
pop
xorl
mov
cli
test
movsl
xor
outsl
sarl
xchg
xlat
shlb
out
loop
test
and
ss
in
jae
divl
dec
pop
inc
mov
push
xchg
loope
lcall
xchg
sbb
frstor
xchg
jne
and
into
cmp
xor
mov
idivl
jecxz
sbb
xchg
stc
sbb
and
data16
lock
das
mov
jno,pn
bound
push
mov
imul
pusha
jbe
jecxz
sahf
int
xor
movsl
int
movsl
mov
mov
out
pop
xchg
mov
cmp
iret
and
mov
mov
fucomi
jo
or
popf
mov
into
push
mov
lcall
adc
xchg
jmp
mov
lcall
push
in
xlat
lock
arpl
ficoms
mov
push
push
adc
sbb
andb
int
cmp
cmp
push
cmp
lret
das
dec
adc
call
jne
jge
dec
xchg
and
mov
and
mov
in
push
mov
jecxz
mov
dec
jmp
jl
loop
add
leave
and
sbb
or
addr16
push
imul
inc
mov
pop
pop
daa
faddl
ss
in
lods
fnsave
xchg
mov
out
int
lock
fidivrl
mov
inc
cwtl
insb
jno
cmp
fwait
repnz
mov
out
loope
ret
cmpsb
inc
adcl
mov
sbb
or
mov
sub
jno
mov
inc
xchg
push
int
jmp
mov
sub
popf
mov
jecxz
cld
insb
add
inc
mov
sahf
icebp
out
pushf
lret
push
test
insb
lret
ficoml
cmc
mov
es
mov
and
hlt
out
hlt
sbb
add
ds
js
inc
inc
mov
inc
test
mov
lea
mov
or
inc
lock
clc
jg
bound
daa
cmp
mov
add
inc
mov
sub
xchg
iret
cmp
cmpb
pop
mov
add
xor
xchg
adc
adc
imul
cmp
and
or
scas
idivb
xchg
loop
inc
dec
mov
sbb
push
push
data16
out
es
iret
imul
int3
push
in
lock
sub
jne
adc
inc
scas
out
sbb
rcrl
aam
mov
sub
cltd
sbb
ljmp
jns
jmp
mov
aas
leave
mov
xchg
inc
push
inc
xor
push
add
jmp
dec
int3
lea
cmp
jge
insb
ds
fisttpl
imull
shll
neg
lods
sahf
cmp
loope
out
jo
pop
jo
sahf
call
test
dec
test
pop
cmp
hlt
cmp
sub
sub
js
fwait
sti
xorl
pop
rcl
aaa
xor
xor
xchg
ja
out
and
lahf
xchg
push
pop
inc
sbb
pop
jb
test
lods
jecxz
stos
mov
les
scas
iret
test
mov
and
mov
dec
into
imul
jl
hlt
rcl
pushf
ret
cmpsb
inc
pop
push
push
push
and
decl
inc
sarl
inc
dec
sub
mov
je
sub
stc
int3
and
mov
rclb
pop
aam
pmaxub
adc
jp
pusha
call
hlt
movsb
mov
push
jns
dec
push
mov
jmp
cmp
mov
popa
out
notb
aaa
inc
outsb
jne
add
xorl
jge
mov
ljmp
call
mov
insb
fldt
or
addb
movsb
std
mov
dec
imul
pop
addr16
les
mov
sbb
cwtl
jno
jns
lret
push
hlt
add
movsb
loop
nop
push
fstl
dec
adc
xor
xor
fdivp
loope
sub
stc
aaa
jecxz
inc
jnp
mov
stos
into
dec
inc
push
pop
push
inc
cmp
addb
pop
aas
xchg
cmp
and
xchg
sti
cld
mov
push
scas
push
and
std
xor
jae
cmp
push
inc
dec
mov
fs
mov
sbb
xor
lahf
rolb
movsb
test
sub
xor
es
lock
sbb
test
adc
xor
push
loope
lea
lds
inc
xchg
and
pop
mov
enter
jmp
or
mov
fs
int3
ds
les
je
sbb
jne
rolb
jb
pop
dec
push
pop
mov
gs
and
scas
hlt
loop
dec
test
mov
paddq
xchg
sub
test
add
gs
pop
clc
push
cmp
xor
push
push
mov
push
jae
scas
pop
cmp
mov
aad
inc
add
loopne
loopne
mov
mov
add
mov
enter
call
roll
mov
data16
out
mov
sub
xchg
xchg
add
adc
ret
fwait
jl
lods
in
add
pop
ror
add
lret
loopne
jmp
dec
mov
adc
mov
sbb
test
fistpl
pop
movsb
push
mov
pop
test
mov
sub
aaa
jnp
mov
call
fstpt
inc
popa
mov
adc
movaps
out
adcl
mov
dec
roll
out
sub
aad
xchg
push
out
dec
scas
int3
xor
and
hlt
push
cmpsb
pusha
mov
jb
cmp
shl
jle
inc
or
outsl
out
mov
cmp
mov
sbb
adc
repnz
push
jg
test
xor
dec
bound
pop
xor
inc
insl
pop
cmp
mov
xchg
xchg
mov
fidivl
add
repz
ret
or
xchg
js
mov
movsb
push
add
test
push
sbb
sbb
dec
inc
and
jge
out
push
jecxz
addr16
dec
hlt
mov
jo
ja
adc
jb
js
and
lea
dec
test
mov
mov
in
add
cltd
mov
push
mov
js
xchg
inc
movsb
repz
aad
fld
data16
shlb
lahf
cs
push
rorb
mulps
popf
xchg
dec
insl
bound
nop
jae
pop
mov
mov
arpl
push
and
scas
rol
outsb
and
or
lret
xchg
and
call
scas
loop
jbe
pop
push
add
pushf
dec
push
pop
repnz
jae
fmulp
pop
ret
or
xor
jb
jp
dec
mov
enter
cmp
sub
pop
das
dec
into
add
push
sbb
pop
ja
dec
clc
and
idivb
aas
jne
fs
fs
loope
inc
xorl
addr16
cmp
jle
pop
pop
popf
lea
jae
scas
push
ror
mov
insb
sub
fsubl
imul
xor
pop
dec
and
pop
scas
cwtl
test
mov
pop
ret
sbb
inc
cmp
andl
inc
stc
cmp
jp
push
xor
sbbl
pop
out
stc
lods
loope
or
out
push
and
sub
mov
addl
pop
mov
iret
data16
call
xchg
and
cs
out
mov
inc
repz
sbb
pop
add
mov
mov
fsubrs
mov
movsl
mov
xchg
pop
cmpsl
mov
data16
xchg
enter
xchg
jb
inc
hlt
std
xor
cld
and
lock
in
and
aam
pop
adc
xor
sbb
clc
mov
dec
loope
repnz
push
xchg
or
pop
repz
in
jl
loop
dec
pop
xor
mov
or
lock
inc
fisttps
jbe
add
jg
inc
xchg
ljmp
fnstcw
pop
push
inc
or
pop
imul
int
mov
push
xchg
int3
cmp
out
sahf
orb
mov
fists
jo
or
sub
sub
cld
sbb
jp
sub
bound
lods
ds
loope
cmpsb
jns
fsubl
mov
into
dec
mov
sub
pop
xorl
imul
imul
out
inc
mov
test
jne
mov
aam
dec
push
mov
pusha
in
xlat
scas
and
sbb
mov
jbe
add
test
jns
xor
jle
in
mul
sub
adc
shll
sarb
ja
add
outsl
mov
and
lock
jge
jbe
xor
pop
lret
xchg
int
xlat
imul
lcall
push
mov
lret
inc
add
xchg
mov
call
cld
stc
mov
fdivrs
aas
jne
in
pop
push
jb
xchg
es
jecxz
sub
mov
imulb
das
jl
movsb
lods
loopne
leave
jmp
add
in
cmc
mov
add
cmc
aam
pop
test
repz
stos
xor
sbb
pop
scas
sub
pop
pop
xchg
cmpsl
cltd
add
mov
movsb
push
aaa
fsubrs
cmp
lock
fwait
enter
bound
mov
xchg
js
mov
call
pop
popf
lcall
test
jmp
call
xchg
insl
imul
xor
add
xor
xchg
jne
push
xchg
popf
hlt
mov
push
lcall
test
out
jecxz
ss
sub
inc
sbb
call
add
xchg
imul
push
ljmp
push
jp
stc
jecxz
fsubl
out
fimuls
stos
sbb
ret
mov
inc
xor
or
insb
add
mov
jp
jmp
pop
inc
push
dec
mov
push
cmc
sub
les
sbb
cmp
and
loope
mov
pop
add
push
iret
jno
sbb
stc
int
pop
adc
inc
mov
int3
sub
into
sub
mov
nop
lock
fcomi
lret
push
bound
push
dec
push
cltd
jo
rcrb
pusha
xor
lret
mov
jl
stos
sub
dec
or
js
cmpb
or
mov
sub
fcoml
stc
es
jl
and
xchg
ss
and
push
mov
clc
inc
out
bound
sub
loope
into
cmpb
test
lods
xor
dec
and
xor
call
sbb
outsb
ret
std
add
cmp
push
dec
aaa
xor
fistps
mov
adc
cld
test
aad
fwait
repz
add
xchg
and
fadd
call
cmpsl
cmp
jb
rorl
out
jl
lods
mov
movsl
rcr
dec
jg
xor
or
cmpsl
movsl
sub
inc
in
add
jbe
pop
mov
aaa
jae
in
inc
bnd
sbb
jae
out
dec
shll
push
ljmp
fisttpl
je
push
cmpb
jne
les
dec
add
inc
addr16
lods
faddl
iret
jl
push
push
and
adc
pop
mov
xor
mov
sbb
jbe
in
and
mov
hlt
mov
mov
lds
out
jo
lahf
sub
push
js
mov
push
jle
repz
pop
dec
sub
cli
jno
popf
or
jmp
jnp
clc
popa
mov
sbb
adc
aas
pop
shr
adc
or
scas
ror
cmp
or
mov
sbb
pop
cmp
add
add
pop
imull
test
adc
data16
sub
sbb
xchg
test
incb
sbb
pop
cmp
ljmp
movd
push
xchg
dec
adc
and
jp
inc
movsb
in
js
mov
and
pushf
mov
jb
mov
or
in
ret
adc
aas
mov
add
mov
push
adc
mov
mov
sub
in
mov
cmc
dec
sub
xchg
ds
repnz
lock
adc
adc
mov
or
jns
imul
std
aam
mov
lds
popa
mov
jle
mov
data16
xor
push
jno
popa
mov
stos
or
inc
xchg
cmpsb
pop
pop
je
movsl
push
sub
iret
bound
push
inc
push
dec
into
stos
int
and
and
cs
pop
arpl
cmp
cmpsb
into
out
add
inc
je
inc
jno
ds
and
jne
mov
dec
add
push
test
fs
fucomp
jne
jle
mov
mov
fistpl
aas
push
cmp
mov
mov
mov
adc
mov
cmp
xchg
movsl
shrb
inc
add
outsl
movsb
mov
lea
or
add
ret
and
shlb
pop
jle
push
insl
lods
mov
fs
lock
cltd
sub
hlt
xchg
ss
sub
arpl
xchg
mov
add
imul
lret
inc
imul
xlat
pop
pushf
leave
mov
cli
adc
jl
ret
fidivrl
int
lret
aad
decb
dec
repz
hlt
add
aam
mov
mov
or
lock
call
dec
push
out
xlat
cmp
stos
or
shrl
and
dec
xchg
icebp
sti
pop
cwtl
lods
mov
or
gs
xchg
out
push
and
sub
pushl
ret
inc
js
inc
adc
mov
mov
adc
push
leave
ljmp
push
mov
pop
std
icebp
mov
arpl
add
pushf
mov
ret
jns
push
mov
fnclex
dec
adc
or
pop
adc
stos
sub
jbe
and
cmp
push
gs
std
jo
adcl
xor
sub
stc
std
cmp
inc
ret
ret
xchg
addl
ficoms
cmp
xchg
loop
pop
sbb
mov
dec
daa
push
mov
aaa
and
sub
or
add
cld
shll
inc
ja
or
mov
jg
cmp
ror
and
or
insb
lea
inc
sbb
pop
inc
dec
mov
mov
rorl
or
push
or
aad
lods
mov
addr16
mov
in
xor
xchg
in
fisubrl
insb
dec
inc
pop
pop
int3
iret
leave
push
aam
pushl
in
adc
push
pop
movsl
dec
arpl
stos
xchg
outsb
sahf
or
dec
push
movsb
pop
fst
pusha
pop
sub
pop
or
push
push
in
jp
jns
sbb
aaa
pop
jle
sbb
ficoml
inc
xchg
adc
add
fiaddl
push
movsb
das
lock
add
dec
inc
mov
sbb
mov
into
jae
ret
data16
ficoml
in
bound
mov
scas
sbb
cld
lahf
mov
jae
pop
inc
sbb
add
cmp
or
imul
inc
cmp
cwtl
mov
arpl
jmp
sbb
idivb
xchg
fxtract
negb
lcall
or
jns
cmpsb
int3
fdivrs
mov
inc
jno
in
testl
mov
xchg
lock
xchg
pop
xlat
inc
jg
std
or
dec
outsl
scas
stos
xchg
sahf
jb
adc
sub
std
aaa
call
dec
jo
xor
iret
imul
vmovhpd
pop
or
push
fisubs
push
loopne
shrl
jo
jp
pushl
aaa
xor
lods
scas
out
inc
imul
jmp
mov
xor
mov
and
sub
shr
fldz
scas
iret
push
ja
repz
mov
jb
jo
cmp
loopne
push
jge
inc
inc
inc
ret
cmpsb
mov
jecxz
xchg
ja
jp
test
cmc
movsl
inc
je
dec
fmuls
xor
mov
mov
rcrb
lahf
sti
xchg
push
fcmovbe
icebp
repz
aas
fwait
insl
fiadds
push
sub
jnp
iret
cmp
xchg
loopne
into
and
mov
sahf
adc
mov
imul
or
add
addr16
test
cmp
dec
pop
into
jle
int
push
into
mov
pop
in
gs
pop
push
ficoms
jo
fs
jmp
mov
pop
sbb
scas
adc
sbb
mov
adc
fildll
inc
cmp
test
je
shlb
mov
inc
mov
shl
mov
fdivs
outsb
mov
rcrl
sbb
dec
pop
push
insb
arpl
add
sbb
jmp
negl
lods
xchg
push
cmpsl
cwtl
lods
loop
outsb
repz
pop
push
inc
xchg
les
mov
stos
xchg
mov
or
xlat
pop
mov
xor
daa
or
clc
lcall
dec
lret
fs
aam
push
insl
cld
fsubrp
lds
loope
lret
es
mov
sub
out
dec
sbb
cmpb
pop
je
out
sub
roll
dec
pop
push
std
mov
mul
loopne
sbb
loope
shll
fidivrl
jmp
imulb
pushf
imulb
fisttpll
dec
outsb
enter
cmp
mov
mov
mov
jae
popf
cmp
loopne
fsub
mov
jmp
cmp
cmc
xor
sahf
les
lds
ss
mov
fidivl
lock
out
hlt
hlt
fs
pop
push
push
adc
mov
insl
into
pop
imul
adc
mov
test
sbb
repnz
xchg
xor
dec
push
movsl
cmpsb
xchg
lock
adc
dec
outsl
dec
cmp
das
mov
jae
ret
rcr
movsl
adc
loopne
jno
imul
adc
push
jae
adc
pop
jmp
mov
enter
popa
jae
int
inc
dec
sti
cmp
mov
or
push
cmc
nop
cmp
or
adc
lret
sti
imulb
mov
mov
pusha
cmp
scas
cwtl
sbb
lret
fwait
in
sahf
mov
sbbb
and
das
divl
fs
xor
mov
pop
sti
fwait
or
add
outsb
mov
xlat
sbb
or
andl
icebp
mov
inc
push
pop
sub
outsl
inc
mov
jne
add
mov
inc
cltd
or
push
or
std
jno
call
loopne
dec
es
lods
dec
testl
std
leave
cli
push
je
fmull
mov
aad
sbb
fadds
cli
aam
mov
jp
mov
sbbl
adcl
xchg
in
ds
stc
mov
xchg
xchg
sub
rcll
rcrl
sub
lret
fwait
stos
arpl
xchg
or
cmp
sbb
mov
push
push
in
mov
ja
lods
imul
loop
gs
das
lcall
sub
and
sub
insl
mov
mov
adc
iret
jmp
roll
imul
cli
int3
cwtl
movsl
and
das
or
dec
mov
repnz
test
jne
pop
dec
sbb
out
ret
or
xlat
sub
filds
cmc
ja
je
ja
xchg
nop
sub
test
cmp
push
mov
push
pop
sbb
ret
push
loope
rcrb
mov
mov
push
outsl
fwait
xlat
jb
or
push
or
les
aam
mov
jo
cmpl
shl
aad
rclb
jb
aas
ljmp
or
adc
ja
enter
dec
xchg
adc
cli
sub
sti
add
imul
hlt
into
lock
adc
test
lods
inc
mov
cld
scas
std
repnz
xchg
loop
dec
cmpsl
int3
push
xor
mov
adc
cltd
out
mov
addb
inc
add
xlat
push
mov
xchg
loop
sub
arpl
push
pand
pop
pop
leave
sbb
push
xchg
scas
pop
lret
aam
ljmp
and
mov
cmp
pop
dec
xor
shl
inc
andl
mov
and
in
cmc
xchg
in
sbb
out
outsb
and
inc
outsb
movsb
xchg
pop
call
dec
adc
subl
push
jmp
cmpsb
std
jo
inc
jne
pushf
stc
lea
popa
jmp
and
dec
mov
repz
dec
into
jne
pop
shrb
adc
and
test
adcb
dec
jbe,pn
and
or
jp
inc
nop
mov
push
rcrl
xchg
repz
and
mov
test
push
pop
shlb
fcoms
ljmp
add
dec
out
pushf
push
lcall
pop
scas
mov
enter
pop
dec
mov
cld
sahf
cmp
inc
gs
sub
pushl
jg
fwait
repnz
mov
cmp
xchg
jp
add
pop
xchg
out
cmp
shrl
repz
lock
cmp
orl
inc
ljmp
mov
adcb
and
inc
xlat
addb
jb
ds
adc
mov
xlat
into
push
ret
in
aad
xor
insb
pop
and
sbb
sub
daa
xor
push
mov
loop
jbe
fistpll
or
pop
xorb
mov
jp
lret
xor
and
dec
and
cld
sub
xchg
outsb
jb
jmp
pop
je
pop
sbb
lods
ljmp
popa
ljmp
and
push
cmp
xchg
popa
sbb
dec
mov
add
das
sub
pop
stc
es
shll
lea
stc
push
int3
in
sbb
inc
mov
push
mov
cmp
jbe
xor
mov
mov
ficoml
jmp
mov
pop
fcompl
ss
jmp
mov
pop
adc
int3
test
xor
aam
ds
jecxz
and
aas
push
lods
adc
or
sbb
cmp
enter
ss
pop
nop
add
fwait
mov
push
xchg
int3
or
xor
lret
push
add
mov
xor
xor
fstl
cmp
mov
or
sub
and
pop
shlb
add
cmp
push
cmp
push
cmp
or
xor
mov
test
xchg
jg
jp
or
jno
adc
pusha
addr16
adc
loopne
scas
das
cmp
nop
fs
xor
mov
lods
in
jp
push
mov
cmp
iret
dec
jle
mov
int
sbb
test
aam
pop
push
or
test
je
mov
test
xchg
jecxz
add
xchg
lods
idivb
loope
repnz
in
inc
imul
mov
ret
mov
jo
insb
and
jg
or
sahf
ret
cpuid
pop
ret
in
jo
xchg
cwtl
out
mov
push
imul
push
push
mov
in
or
ret
fistl
add
addr16
out
xor
es
xchg
cli
fcoms
popa
xchg
ret
or
in
pop
mov
addr16
jo
ds
mov
add
frstor
push
jge
jae
lds
insl
cmp
push
push
gs
ret
xchg
mov
in
mov
xlat
cwtl
sbb
mov
loope
or
xor
js
stc
jg
pusha
lock
ljmp
loopne
test
and
xor
jmp
xor
adc
fwait
stc
adc
lahf
jl
mov
dec
mov
adc
stc
sti
lods
punpckldq
xchg
aaa
jae
xchg
inc
jne
jmp
sbb
int
xchg
mov
popf
popf
imul
mov
out
rcl
mov
adc
and
adc
pop
sub
jae
and
enter
jnp
call
pop
nop
adc
in
sbb
iret
xchg
in
add
aam
dec
lcallw
jbe
lret
adc
imul
loope
cmp
pop
or
push
and
icebp
or
pusha
aas
test
lahf
mov
mov
sbb
ljmp
inc
aam
out
stos
fidivs
js
out
out
push
fcoms
out
and
inc
adc
or
lret
sub
sub
mov
les
xchg
pop
test
cmp
popf
mulb
sub
sbb
jecxz
push
mov
jo
or
mov
dec
jmp
dec
cmp
inc
pop
cmpsb
adc
adc
mov
out
fstpl
mov
aad
call
sbbb
dec
adcl
lock
addr16
dec
dec
cltd
imul
xor
sub
inc
mov
cmp
cmp
loope
aaa
jo
inc
sub
jne
jecxz
mov
shl
ret
xchg
dec
jg
xchg
or
xchg
and
fsubl
movsl
inc
inc
or
lods
or
cli
dec
adc
cmp
add
or
leave
mov
insl
sbb
xchg
nop
in
mov
pop
outsb
testl
in
rcrb
or
aas
loope
imul
test
popf
jl
xor
cmp
and
imul
mov
mov
dec
fisttpll
sbb
shlb
jge
push
cld
sub
cmp
jle
xor
fstpl
idivl
push
xchg
cmc
mov
daa
cli
cmp
in
cltd
or
mov
repnz
out
xchg
add
xor
jp
adc
repnz
fsubs
dec
repz
dec
pusha
or
dec
and
hlt
mov
mov
ret
fwait
mov
mov
jb
fisubs
cmp
mov
mov
cmp
mov
ljmp
insb
mov
dec
test
add
je
mov
xor
roll
popa
cwtl
nop
inc
add
stos
mov
add
mov
adc
sub
shl
push
and
arpl
pop
inc
jo
repz
mov
jne
stos
arpl
lcall
in
imul
xor
iret
into
add
je
data16
and
cld
xchg
xchg
mov
lods
stos
mov
pushf
mov
shl
rcrl
dec
lret
orb
cmp
add
xchg
and
mov
imul
lcall
insb
push
jns
mov
add
fstpl
adc
stos
sbb
cltd
sbb
fcomp
cmp
pop
lahf
cmp
add
fnstcw
lret
fldt
adc
into
mov
shrl
in
xchg
mov
sbb
push
aaa
shrl
mov
lods
jl
in
inc
or
lret
fadd
or
mov
sbb
push
insb
sub
jb
mov
or
adc
dec
je
fidivl
inc
call
push
mov
popf
nop
movsb
push
repz
fcoml
lock
ljmp
mov
jo
inc
int3
sub
adc
push
aam
pop
repz
push
dec
pop
jne
xlat
ljmp
stos
orb
lcall
out
lods
lods
and
xchg
pop
jnp
fldt
xchg
mov
icebp
mov
xchg
and
xorl
pop
xorb
or
and
xor
addr16
popa
popf
loop
mov
dec
addr16
into
sbb
jge
arpl
ret
push
push
mov
mov
fucom
cld
call
cmc
cmpsb
mov
cmp
or
icebp
jne
ror
sti
mov
pushl
jnp
enter
push
popa
fbld
mov
cwtl
mov
adc
xchg
idivb
sbb
push
cmc
or
fistps
scas
sbbl
mov
popa
or
stos
ret
pop
or
pop
jle
sbb
test
xchg
inc
jnp
xchg
cmp
clc
xor
xchg
rcl
push
sbb
xlat
fs
cmpsl
sub
inc
pop
ret
popa
xor
sahf
push
ret
lods
jle
pop
xchg
lcall
ret
sbb
pop
sub
out
lods
sbb
mov
arpl
es
xor
stos
in
stos
aam
enter
mov
mov
movsb
inc
pop
cli
jl
in
jae
and
push
adc
je
cmp
hlt
test
iret
out
pushf
mov
loope
les
add
sbb
loope
clc
or
xor
sbb
ret
test
xchg
jno
mov
add
add
out
cld
mov
and
mov
sbb
ds
pop
test
jmp
call
fstl
add
hlt
jle
subl
pusha
adc
or
inc
xor
fdivrs
mov
add
push
add
in
lods
jns
dec
ret
das
out
add
inc
mov
or
rcrl
iret
iret
sub
cmpsl
pusha
inc
sub
test
test
jne
sbb
insl
pop
push
sbb
pushf
fidivs
add
push
sbb
push
and
insb
jnp
or
sub
adc
popf
lcall
xchg
push
jb
pop
shll
xor
les
jl
pop
xor
mov
in
sbb
outsl
fs
sub
xchg
in
stc
popa
fcmovb
stos
dec
pop
jmp
scas
lret
xchg
cmp
stos
inc
fstp
pop
dec
icebp
ljmp
mov
pop
leave
jno
jnp
fsubrs
adc
mov
out
adc
out
push
cmpsb
insl
push
pushf
jo
dec
add
pop
xchg
arpl
mov
lret
outsl
fdivrs
std
push
push
jp
out
out
inc
lcall
push
or
inc
inc
loopne
lcall
xchg
xchg
nop
ret
cmc
jg
mov
push
inc
jne
jl
xor
or
int
inc
fimull
pop
adc
js
paddq
cmp
ljmp
sub
leave
cmp
mov
ja
pop
gs
xor
outsl
jecxz
pop
movsl
ds
imulb
mov
ud1
dec
shlb
cmpsb
ds
repnz
mov
push
jb
addr16
in
jno
mov
xor
pop
xchg
mov
jl
or
mov
stc
xor
pop
ror
imul
lahf
or
outsb
add
lock
jmp
mov
call
push
fldt
jle
push
inc
fisubrs
jmp
mov
iret
push
mov
aas
push
adc
pop
mov
cmp
jns
in
leave
pop
push
pop
push
sub
rcrb
jae
fbld
push
scas
lahf
repz
lods
sub
out
cs
add
divb
shlb
sub
fists
shrb
mov
sbb
fcompl
jo
mov
push
push
adc
mov
outsl
xchg
lret
insb
xor
out
scas
inc
in
div
rolb
lods
repnz
or
adc
fbld
or
decl
mov
cltd
int
xchg
adc
pop
in
inc
adc
add
xor
sti
filds
je
pushf
adc
or
push
lds
insl
xor
adc
pusha
inc
dec
pop
cmc
pop
cltd
fcmovbe
cwtl
das
and
pop
call
in
xor
xor
into
popa
inc
out
movsb
sub
jp
adc
in
inc
pop
or
movsb
data16
xchg
xor
shl
cmpsb
mov
call
inc
cmp
imull
stc
adc
imull
decb
push
xchg
test
adc
std
ffree
push
insb
mov
mov
adc
adc
testl
sub
rcrl
cmpl
mov
cmp
test
call
mov
fisubrs
add
scas
pop
mov
cmp
ja
jns
mov
bnd
pop
and
inc
imul
and
add
outsb
dec
movsl
cmp
imul
jl
jne
add
push
gs
add
pop
pop
xor
inc
cmp
in
add
adc
in
xchg
xchg
jns
xor
sub
stc
inc
mov
inc
pop
xlat
in
sbb
stc
insb
shll
xchg
sahf
dec
mov
icebp
outsb
dec
incl
sahf
jnp
repnz
push
rorb
mov
aam
jl
subl
sbb
dec
sub
pushf
aam
dec
out
xchg
xchg
test
jmp
repnz
and
pop
fnstenv
jmp
pop
aad
push
shlb
and
fldenv
fs
mov
dec
push
fstpl
in
dec
inc
movsb
adc
sbb
or
inc
xor
cmpsl
xchg
in
inc
test
inc
cmpl
xchg
dec
sarb
jmp
sub
mov
fstps
clc
shr
jbe
ja
jge
cli
ljmp
repz
sub
ret
jbe
out
and
sbb
les
mov
push
inc
cltd
out
xchg
adc
jb
cmp
and
pop
cmp
xchg
jno
andl
cmp
jmp
pop
aam
xchg
int
and
dec
arpl
lea
dec
ds
into
insb
out
xchg
mov
jb
jnp
fnstsw
cmp
rcrb
pusha
inc
push
imul
fsubrs
btc
push
ds
movlhps
push
xchg
out
mov
dec
roll
mov
jmp
jle
lock
pop
sbb
mov
ja
lret
cli
data16
fs
into
mov
int3
pop
fsubrp
fucom
insb
cmovbe
out
lea
cmp
dec
push
sti
sbb
jbe
cwtl
in
inc
cmp
aam
iret
test
add
je
xchg
mov
fnstenv
jle
stos
shrl
push
sti
pop
pop
add
sbb
ja
inc
mov
add
outsb
jno
adc
mov
lods
fsubrp
lret
sub
shl
xchg
add
add
das
mov
sub
je
xchg
or
pop
arpl
and
sbb
jge
and
mov
jae
outsb
ret
mov
jmp
js
add
lock
mov
xchg
mov
lods
sub
mov
fwait
dec
and
cmp
dec
aam
sarb
scas
sahf
inc
fmuls
pop
arpl
pop
in
pop
sbb
or
loop
ljmp
cmc
repz
imul
popa
mov
sub
dec
fdivs
inc
shld
hlt
push
test
out
and
mov
sbb
mov
mov
sbb
dec
data16
cmp
mov
and
and
js
imul
sbb
and
cmpsl
xor
fidivs
sbb
xchg
out
ss
and
fildl
cmp
pop
sub
fildl
gs
pop
int
xlat
dec
and
pop
push
cmpsb
out
imul
push
xlat
mov
repnz
in
scas
or
push
sbbb
pop
mov
into
fs
adc
and
push
mov
inc
loopne
and
test
sub
sub
gs
add
pop
xor
test
lret
inc
pop
jp
fstpl
push
push
ljmp
mov
leave
loop
add
loopne
cmpsb
push
adc
sbb
jp
mov
pop
out
sbb
insb
das
stc
notb
sbb
dec
or
dec
or
daa
push
sub
inc
dec
and
mov
arpl
fwait
subb
data16
mov
lea
xor
imul
lock
es
das
mov
std
fisubl
sahf
mov
ja
sbb
fnstenv
and
stc
push
xor
add
xor
data16
lea
addr16
jg
cmp
mov
lret
pushf
pop
cmpsb
cmpsb
into
dec
es
icebp
mov
stc
push
jmp
lcall
mov
push
lret
xchg
pushf
imul
lock
inc
push
adc
mov
pop
flds
adc
and
pop
mov
jle
jecxz
movsb
jmp
sar
mull
js
lea
sahf
push
xor
inc
sarb
adc
sahf
das
movsl
stos
xchg
mov
pop
mov
lcall
pop
mov
and
jo
add
cmp
jae
xchg
inc
aam
inc
lods
add
xlat
and
add
xchg
sbb
and
fstpl
mov
fsubl
pop
push
xor
insb
jb
jle
shll
in
insl
test
js
nop
inc
jp
jb
mov
jns
cmp
cmpsl
jne
mov
adc
das
jle
data16
push
ss
out
and
add
jb
mov
pop
sub
pop
cmp
addr16
push
adc
aaa
push
test
dec
add
and
inc
sub
add
test
add
adc
enter
sahf
ret
fwait
clc
das
enter
dec
cmc
lds
cwtl
sbb
pop
pop
js
inc
hlt
test
scas
add
ss
fwait
xor
test
std
pusha
inc
mov
and
icebp
stc
adc
push
adc
adcb
sbb
and
stos
es
push
roll
inc
out
and
into
mov
nop
movsb
inc
dec
inc
es
stos
sub
into
imul
sbb
lea
xor
loop
sbb
jecxz
inc
les
cmp
jns
dec
hlt
add
test
cmpsl
cwtl
popf
sarl
arpl
xchg
push
outsl
cltd
mov
ret
stos
inc
jb
cmp
cmp
ret
repz
mov
push
sub
mov
pop
adc
pop
mov
fmull
repnz
xchg
jmp
aaa
fwait
cmpsl
xor
or
lods
add
sub
pop
push
mov
cld
xor
sahf
clc
fwait
jb
xor
and
ja
insl
sbb
mov
imul
fdivrs
and
cmp
pop
adc
cs
and
and
icebp
es
lds
lahf
or
mov
jl
jo
mov
addb
inc
mov
sbb
jno
dec
pop
sbb
mov
pushf
lods
imul
inc
push
jne
in
mov
fbld
mov
lds
mov
pop
rolb
ja
mov
dec
push
jle
jae
cmpsl
mov
sub
outsb
mov
negb
pusha
pusha
repnz
rcr
lahf
add
fstpt
cmc
repz
mov
adc
dec
mov
and
adc
ja
inc
jecxz
cmc
int
shlb
addb
sub
cmp
inc
nop
fisttpll
lods
rorl
jecxz
in
sti
jno
dec
negb
mov
adc
xor
shlb
sub
pop
fmull
xor
sarl
fstps
sub
lods
test
mov
outsb
xchg
xchg
cmc
ret
mov
in
dec
fisubs
mov
jmp
test
inc
int3
test
inc
cmp
push
and
or
lret
add
add
mov
addb
int3
repnz
sub
lcall
adcb
fcomps
les
out
add
add
shll
and
std
jne
les
imul
add
jno
push
jb
pushf
xchg
sbb
sbb
xchg
mov
adcb
sbb
in
push
dec
add
xchg
lods
adc
and
test
or
add
cmp
arpl
pop
sti
and
outsb
pop
ret
orl
and
and
cmp
dec
mov
mov
mov
xchg
pop
daa
arpl
pop
lahf
gs
lret
scas
xor
lcall
xor
push
cmp
loop
popa
push
xchg
push
pmaxsw
test
fisubs
movb
fstl
dec
push
dec
movsb
rorl
add
test
jb
pop
gs
xchg
mov
je
shrb
push
mov
sub
daa
push
or
pop
xlat
bound
and
xchg
pop
xlat
pop
ljmp
fistps
rcll
sbb
cmp
push
lods
cmc
into
cwtl
hlt
bound
sarl
sbb
cmp
jne
xor
mov
dec
cmp
cmp
shl
inc
call
icebp
fs
aam
pop
push
shlb
test
leave
stc
subl
pop
aad
adc
push
xor
add
or
xor
dec
lock
ljmp
call
nop
ss
pushl
frstor
push
mov
pop
aad
inc
sbb
gs
mov
lret
mov
mov
out
xor
xchg
sahf
lods
xchg
pusha
lock
hlt
sub
xor
ljmp
mov
lods
leave
lcall
cltd
orl
inc
push
and
mov
shrl
clc
xchg
inc
mov
loope
cmpsl
mov
insb
fsubl
add
xor
mov
xchg
adc
stos
dec
stc
cmp
xchg
dec
lcall
outsl
cmpsl
mov
xorl
stc
pop
xor
mov
mov
inc
pusha
dec
add
sub
scas
lods
xchg
test
ficomps
mov
xchg
lea
mov
loop
jle
sbb
ljmp
cmpsb
push
jnp
in
aam
mov
or
popa
sarl
ljmp
inc
and
cs
loope
sub
sbb
xchg
ja
setae
pushf
cli
push
xchg
mov
es
pop
cltd
cmp
call
push
enter
xor
mov
int3
pop
xor
or
mov
mov
push
sbb
push
inc
push
mov
jno
stc
lea
dec
test
inc
test
mov
push
ficomps
xchg
pop
xor
inc
sbb
cltd
mov
scas
ja
rcr
out
addl
or
cmp
sub
xor
sbb
dec
pushf
movsl
dec
jns
push
das
stos
jno
jecxz
in
jp
dec
test
jne
mov
in
jbe
fisubs
jp
pop
jmp
sub
xorl
mov
mov
pop
jp
push
dec
mov
xor
cmpsl
push
fwait
mov
sub
jmp
mov
sbb
mov
int3
lods
mov
adc
inc
xchg
push
arpl
scas
push
aam
dec
or
adc
cs
cmpsl
or
dec
cmp
pop
daa
bound
mov
pop
jnp
imul
iret
pop
testl
out
movq
mov
xlat
mov
add
inc
pusha
jae
sbb
pop
mov
ret
lret
adc
adcl
aam
inc
leave
movsb
aaa
push
push
out
inc
mov
mov
mov
adc
mov
add
das
not
leave
cmp
sbb
jne
dec
cmpsl
sbb
adc
xor
push
out
pop
dec
in
scas
lock
jecxz
push
cmp
cld
js
es
mov
data16
orb
aaa
test
ljmp
jge
leave
rcr
xchg
in
dec
stc
test
lods
pop
fneni(8087
aam
xlat
xchg
mov
pop
arpl
lds
cmpsb
pop
nop
or
mov
cmp
adc
xor
or
jbe
xlat
mov
xlat
jge
int3
out
std
add
ret
lea
stos
add
xor
sahf
jb
repz
xor
ss
cmp
shlb
push
sub
inc
push
imul
jno
inc
cmp
cs
jb
fmull
fsts
dec
fimuls
lods
gs
sub
outsl
insl
jmp
orl
stos
cmp
sub
adc
mov
cmpsl
fstpt
iret
cmp
pop
xor
inc
adc
cmc
fiadds
aaa
xlat
mov
pop
cmp
ret
sbb
imull
sub
xor
mov
pop
xchg
jmp
lods
and
in
arpl
sbb
cmp
insb
push
gs
sub
repnz
mov
inc
add
lahf
jnp
mov
aas
incl
jbe
inc
sbb
jns
icebp
orb
dec
jp
add
xchg
mov
scas
fsubl
inc
dec
mov
pop
in
push
ret
in
in
dec
sbb
leave
pop
fidivs
pop
repnz
adc
push
rcll
jns
leave
loope
push
and
xor
xchg
push
movl
pop
adc
jmp
les
int
lahf
rolb
out
xchg
or
out
shll
or
and
mov
pop
je
ljmp
cmp
jl
mov
jg
lods
jo
ror
sbb
mull
push
stos
mov
mov
jbe
push
mov
in
arpl
lds
sub
rorb
testl
leave
pop
mov
enter
mov
pusha
testb
inc
insb
mov
imul
sti
and
mov
push
jl
int
xchg
and
mov
fcmovbe
push
ja
mov
movsl
pop
std
fistpl
ret
cmp
or
jns
and
sbb
xchg
pop
insb
stos
dec
divl
dec
and
out
xchg
cmp
adc
stos
cmp
or
aad
ret
or
xlat
pop
sbb
push
dec
mov
imul
in
imul
enter
sub
mov
mov
subl
sub
mov
inc
aaa
cmpsl
std
fninit
mov
lcall
cs
add
dec
gs
neg
cli
or
call
mov
mov
mov
dec
fstl
mov
loop
pop
lods
jae
push
repz
ret
mov
mov
jbe
ja
rcr
repnz
sub
mov
mov
pop
jle
xchg
push
jmp
aad
and
popf
in
sbb
jnp
es
push
sbb
push
icebp
cltd
subl
es
dec
xor
pop
sub
xchg
out
jbe
xchg
ja
xchg
jge
jmp
xor
ja
out
dec
push
loope
or
popa
outsl
ljmp
lock
inc
or
call
test
mov
and
sub
movsb
pop
in
mov
add
call
pop
lea
movsb
jmp
imul
jmp
push
pusha
fstl
lods
aad
and
adc
xchg
into
out
or
addb
adc
xchg
shll
sbb
shlb
sbb
cld
or
inc
sar
push
std
sarl
jno
cmp
lds
xlat
mov
int
sbb
mov
sbb
jecxz,pt
mov
dec
cmpsb
cmp
lock
shrl
add
sub
jle
and
lea
sbb
icebp
movsl
aas
and
iret
inc
int3
and
xor
adc
xchg
add
scas
pop
dec
mov
rcr
dec
rcll
adc
aad
and
rcrl
jae
push
scas
pop
bnd
xor
ljmp
ljmp
push
mov
loopne
insl
cmpsb
add
jo
jmp
mov
popf
adc
sub
cmc
rorl
cli
fs
xchg
popf
loope
adc
and
xchg
xor
data16
xchg
and
loope
and
or
pushf
jae
push
mov
pop
ret
leave
xchg
or
cmp
loop
adc
lcall
add
cmpsb
push
xor
xchg
fs
pop
fidivrs
scas
push
and
mov
pop
addr16
repz
data16
movsl
jo
cmp
pop
das
dec
pop
xchg
jae
mov
cld
xor
mov
xchg
pusha
testb
dec
cltd
mov
adc
inc
sub
mov
add
mov
aaa
and
sub
and
jl
pop
fucom
push
cmp
icebp
adc
cmp
or
sub
fildll
cmpsl
fsts
dec
sbbl
pop
cwtl
mov
pop
or
je
rorb
je
pop
adc
rclb
xchg
sub
sub
add
mov
and
mov
dec
ja
lcall
and
mov
cwtl
push
xor
popf
aam
push
xchg
push
repnz
std
xor
mov
and
xchg
adc
inc
xor
shl
or
dec
xor
stos
pop
push
icebp
adc
out
xchg
sub
insl
push
mov
pop
loopne
repz
das
inc
jp
and
rcrl
and
mov
mov
sub
out
jns
adc
mov
ljmp
push
shll
push
add
stos
into
push
lea
daa
jno
mov
in
sub
out
sbb
fisttps
mov
movsb
pop
adc
shlb
fs
mov
inc
ja
dec
xor
mov
repz
cmp
addr16
xor
fstp
dec
push
inc
cwtl
and
add
out
pop
adc
cmp
xchg
gs
xchg
add
adc
cltd
adc
adc
cmp
pop
xchg
push
mov
addr16
imul
insl
movsb
repz
ffreep
sar
pusha
adc
loop
and
adc
mov
xchg
lahf
insl
sbb
ret
pusha
into
ret
and
push
movsl
jbe
popa
inc
lret
jecxz
rcl
mov
jb
dec
dec
shll
repz
out
repz
mov
cmp
and
jbe
mov
lret
push
xchg
inc
dec
sub
ret
stos
in
rorb
repz
fldenv
fstl
roll
movsb
lods
test
loop
je
imul
lods
int3
adc
adc
sub
cld
shl
dec
ret
cmpsl
mov
inc
add
sub
pop
pop
xor
fsubl
in
add
scas
xchg
test
add
jne
imul
ss
dec
and
jecxz
pop
fsubl
bound
pushf
imul
icebp
dec
addl
jecxz
dec
inc
add
pop
inc
loop
jmp
imul
add
fnsave
mov
rorl
adcb
int
or
add
fwait
add
mov
insb
popa
inc
aas
aaa
cs
inc
cld
pop
inc
fimuls
cmp
addr16
mov
clc
push
xor
subb
xor
xchg
xor
mov
and
add
lods
out
pushf
jp
lret
dec
add
dec
dec
or
scas
mov
ss
nop
fidivrs
pop
push
inc
sbb
cwtl
cli
or
and
xchg
sub
jmp
pusha
dec
lock
bnd
mulb
sub
lahf
xor
pop
icebp
mov
cltd
outsl
fsubrs
inc
xchg
mov
ss
add
orl
jle
pop
cs
mov
lods
imul
or
leave
lods
or
cmp
pop
arpl
mov
cmpsl
cmp
cld
sarb
fadds
mov
repz
mov
mov
pop
outsb
pop
das
jecxz
out
lahf
xchg
pop
cwtl
pushf
std
adc
out
mov
test
in
xor
cld
je
sahf
cmp
mov
clc
push
mov
dec
xchg
jae
push
popf
add
or
movsl
mov
mov
pop
or
add
add
das
test
dec
push
cltd
mov
pushf
nop
add
xchg
pop
ljmp
push
jne
leave
das
jo
add
dec
lret
lret
dec
or
xorb
add
push
aaa
stos
outsl
mov
popf
and
xchg
cltd
repz
les
or
dec
cmc
popf
mov
adc
in
int3
cld
mov
add
and
int
cltd
add
lahf
xor
gs
in
scas
mov
jne
dec
inc
pop
adc
adc
popa
pusha
pushf
clc
jns
in
les
jns
mov
andb
scas
pop
loope
rcrl
jmp
cmpsb
add
lahf
push
cmp
fcomip
out
sbb
add
mov
rcrl
or
lods
insb
dec
stc
movsl
mov
xchg
call
xchg
jae
xor
aas
push
dec
jmp
loop
or
mov
test
daa
mov
fisttpll
xor
sarb
mov
test
into
lods
add
mov
push
pop
hlt
inc
or
adc
push
test
and
push
and
jo
addr16
pop
shll
pop
mov
add
mov
xor
jmp
jnp
mov
rorb
add
mov
out
int3
pop
in
inc
jge
cmpsb
test
push
lret
es
fisttps
mov
into
mov
into
xor
cmp
lods
sahf
sub
sbb
xor
ret
dec
dec
repnz
inc
push
fucom
clc
call
sub
jne
imul
sbb
mov
scas
jmp
test
or
cmp
sti
mov
movsl
cltd
cs
pusha
mov
or
sti
xchg
addl
sbb
pop
sub
mov
and
lock
popa
push
push
xor
jae
dec
cmp
lea
or
lret
frstor
std
add
push
dec
rcrl
cmpsl
test
ror
mov
cltd
or
mov
data16
sub
pop
inc
sub
or
cltd
popa
xchg
je
rorb
jmp
jno
cmp
xchg
imul
adc
pop
in
divl
dec
jns
or
es
lods
mov
test
push
pushf
lods
repz
push
cmp
div
push
out
sbb
test
les
cmp
loopne
or
pushf
mov
mov
negl
xor
lcall
push
xlat
ds
mov
arpl
jb
dec
jb
rorl
out
push
jecxz
jae
in
lahf
mov
mov
push
cltd
stos
add
int3
pop
ljmp
push
dec
aam
imul
in
mov
movsb
sub
fadds
cmovno
add
sub
repz
pop
loopne
dec
shlb
das
and
fldenv
push
call
clc
dec
push
out
sub
dec
cmp
dec
imul
jo
inc
adc
mov
dec
push
pop
inc
sti
pop
jmp
cmpsb
jns
xchg
dec
cltd
repz
rcrl
jl
repnz
jmp
cwtl
setl
mov
lds
xchg
cwtl
shll
or
sub
test
or
imul
push
je
in
xchg
test
lea
mov
leave
inc
inc
inc
popf
dec
mov
jns
aam
test
or
pop
jo
cmpsb
shrl
dec
xchg
jbe
and
lret
imul
mov
outsl
mov
pop
mov
fistps
jb
cmpsb
test
adc
pushf
dec
rcrl
fimull
std
cmp
mov
add
mov
jns
ljmp
xor
int3
dec
pop
insb
dec
xlat
cmp
aaa
imul
xchg
gs
dec
cmp
ret
mov
stos
sbb
pop
lods
insl
pushf
xchg
dec
jmp
and
sbb
shll
xchg
mov
pop
jl
sbb
in
out
xchg
pushf
jbe
or
mov
pop
jg
dec
mov
sub
movsb
ret
stos
sbb
sar
mov
sbb
popa
leave
daa
in
cs
xchg
adc
pop
sbb
or
sbb
mov
mov
inc
xor
inc
loopne
jl
call
cmpsb
loopne
loop
aad
mov
test
push
sub
hlt
ljmp
enter
sarl
icebp
in
test
or
mov
mov
das
fcompl
inc
daa
fstpt
pop
es
in
out
mov
aad
xlat
mov
cmpsb
vpsraw
lods
jnp
scas
fcomps
daa
enter
lcall
call
out
in
mov
sbb
or
imul
je
dec
adc
xor
aad
dec
mov
imul
push
fs
xor
call
loope
xor
mov
movsl
and
xor
jbe
cmc
testl
jae
xor
scas
cmp
js
out
enter
xchg
mov
sbb
cmp
xchg
lds
and
dec
dec
sarl
fisubrl
xor
cmpsl
shl
mov
mov
fwait
xchg
sub
leave
adc
int
and
out
inc
push
les
imul
fdivs
push
sbb
stos
jo
add
pop
out
pop
orl
test
lds
push
test
xchg
pusha
stos
arpl
mov
xor
clc
mov
pop
ror
pop
pop
mull
mov
scas
sub
icebp
insl
jb
add
hlt
push
into
pop
lret
jbe
inc
sub
xor
and
sub
shll
cmp
sub
jecxz
mov
es
cmp
push
aas
jp
inc
cli
fistl
inc
popa
mov
dec
adc
sbb
jno
mov
aad
sar
cmp
mov
repz
das
icebp
pop
pop
xor
and
push
stc
dec
mov
mov
mov
pop
dec
cltd
shrl
fiadds
mov
inc
mov
sbb
inc
mov
jg
pop
mov
push
pop
pop
dec
push
popa
and
mov
cmp
add
xor
popa
push
mov
sbb
cmpsb
adc
data16
int3
pushf
dec
jno
es
out
push
xor
pop
movsb
test
popa
xor
in
jno
leave
shll
in
and
nop
adc
test
sub
jne
mov
pop
jnp
aaa
in
cs
popa
mov
or
sub
dec
sub
lods
data16
push
addr16
mov
cmp
lahf
add
dec
adc
xor
jb
jp
gs
lret
aaa
mov
icebp
aad
mov
arpl
loopne
pop
mov
fcomip
cmp
adc
jne
lock
shll
push
inc
neg
je
or
aad
aad
mov
out
out
lods
jl
sbb
enter
mov
cmpsl
adc
rcrl
xor
cli
sub
fnstenv
outsl
push
xor
out
mov
ja
and
popf
shl
sar
sub
or
aas
ficomps
cmp
sub
loopne
or
daa
insl
adc
rcrb
roll
inc
inc
test
pop
cmp
sbb
jbe
inc
xchg
movsb
xchg
jp
arpl
or
in
cmovge
and
icebp
push
mov
xchg
pusha
addb
sbbl
or
sub
mov
filds
sbb
and
rorb
pop
shlb
ret
jmp
fists
sbb
or
jge
sbb
cmc
jg
mov
push
xor
xlat
pop
dec
rcr
stos
add
cld
pop
test
jns
ds
std
insb
inc
jp
and
adc
mull
in
sbb
stos
sub
adc
inc
jae
pop
scas
test
mov
jg
arpl
bnd
jmp
cmp
fnsave
dec
jge
or
inc
jb
pusha
shll
adc
cmp
stos
loope
je
push
mov
jo
inc
insl
adc
and
adc
stos
mov
aad
push
cld
rclb
adc
fmuls
jg
out
insb
pushf
ret
cld
aam
in
out
outsl
jle
cmc
sub
push
pop
call
btrl
dec
sub
cltd
je
loop
in
jl
insl
add
sbb
cwtl
and
aam
aad
filds
and
cmp
jae
sbb
mov
and
ljmp
push
ficoms
jae
or
pop
push
mov
scas
lcall
lcall
sahf
shll
enter
xor
fcmovnu
xchg
ds
test
negb
or
pop
xchg
adc
movsb
xchg
xor
stc
sbb
jae
popf
push
lcall
fistpll
bound
dec
adc
cmp
xchg
push
push
cld
cltd
cld
cmp
into
fdivrs
aas
jg
mov
jnp
mov
or
dec
pop
out
or
mov
fucomi
std
fwait
jge
pusha
cwtl
xchg
adc
xor
cmc
and
fadds
pop
jo
mov
es
imul
push
jne
mov
in
push
loopne
inc
jns
lahf
int
les
jmp
mov
int
int
std
stc
jns
jmp
lcall
sub
mov
inc
sti
sub
int
es
lea
movsl
pusha
sarb
pop
dec
icebp
lds
and
fwait
shll
scas
lods
stos
call
lret
push
int
inc
das
mov
xchg
lods
repnz
jo
inc
pop
sbb
gs
pop
call
inc
in
mulb
xlat
data16
ljmp
mov
loopne
mov
imul
andl
out
mov
lds
and
xlat
lods
add
popa
add
scas
jns
sahf
aam
or
cmp
mov
mov
pushf
inc
fxrstor
jb
fcompl
adc
scas
xchg
mov
dec
inc
arpl
jo
pusha
inc
ret
mov
pop
neg
or
and
dec
lds
mov
dec
call
xchg
andl
push
ret
lcall
xchg
sbb
cmc
or
nop
std
dec
stos
mov
adc
xor
scas
dec
mov
addr16
dec
rcrl
mov
sbb
lcall
adc
sbb
mov
popa
xchg
dec
stc
jne
mov
repnz
leave
sbb
dec
cmpl
pop
loop
lea
or
pop
ficomps
xor
jae
ss
inc
pop
pop
repnz
pcmpgtd
mov
inc
mov
push
cld
hlt
jns
out
push
inc
inc
or
push
mov
sbb
das
addr16
out
mov
je
clc
add
sub
enter
mov
je
loopne
jge
mov
sti
movsb
dec
paddw
jnp
push
js
fstpl
push
mov
and
pop
jae
shrb
push
jbe
clc
inc
fdiv
sahf
mov
sbb
pop
dec
sub
mov
pop
add
into
pop
clc
arpl
mov
imul
mov
scas
add
adc
and
aas
mov
pop
mov
xchg
sbbl
scas
or
out
dec
lods
xchg
or
fstps
or
push
sarl
xchg
push
fldt
in
cmp
lds
xlat
sub
daa
dec
outsb
test
movsb
cwtl
and
jne
fldt
int
clc
sub
mov
movl
cmp
xchg
push
enter
fistpl
inc
sub
stos
push
sbb
in
adc
mov
jecxz
mov
xorl
fstps
xchg
pop
add
inc
orl
out
pop
mov
cmpsb
jl
push
test
jbe
adc
pusha
sbb
inc
shll
std
xchg
loopne
into
or
cmpsl
ja
andl
lret
fstps
shll
xchg
ret
jge
mov
test
imul
mov
pop
clc
xchg
pop
pop
push
pop
popa
sbb
mov
pop
pop
mov
sahf
pop
dec
loop
aas
lods
adc
stos
adc
rcrl
xchg
cmpsl
cmpsb
leave
icebp
inc
cli
or
or
mull
push
iret
stc
and
lds
mov
je
xor
jo
jae
ret
mov
and
mov
repz
bound
gs
popf
fs
mov
pushf
jnp
adc
es
xchg
or
es
jne
pop
nop
scas
arpl
addr16
es
jo
repnz
pop
pop
sbb
into
sbb
push
fildl
jmp
test
add
data16
push
pop
jno
jne
mov
jp
imul
test
adc
xchg
inc
lahf
test
fldt
nop
add
pop
xlat
or
aam
jno
jmp
cmpsl
aas
adc
cs
and
push
inc
test
gs
jmp
mov
mov
jne
sbb
sub
fstpt
hlt
lret
or
sub
arpl
adc
jo
mov
xor
jmp
inc
push
push
add
mov
nop
ja
inc
adc
in
mov
in
lock
adc
cwtl
mov
scas
mov
outsl
ret
data16
xchg
xor
push
mov
sbb
bswap
inc
pop
jecxz
lea
test
push
cmp
fsubrs
push
inc
xor
jge
lcall
mov
cltd
and
rol
jo
dec
sbb
adc
popf
mov
mov
pushf
xchg
gs
inc
ds
dec
and
loop
mov
cld
inc
dec
sbb
add
movsl
cmp
dec
mov
mov
fadd
mov
test
lcall
pop
enter
arpl
ds
lcall
inc
pop
xor
lahf
lahf
jp
inc
lock
lea
push
sar
xor
lods
nop
lods
mov
mov
mov
sahf
pushf
xor
das
mov
pop
mov
cmp
bound
inc
push
movsl
popa
push
cmp
dec
stc
es
pop
mov
mov
xor
sub
test
jge
lea
popf
jmp
jle
inc
lret
lret
xchg
adc
sub
cmp
add
xchg
jmp
insl
xor
sbb
int3
rcll
ret
jno
imul
mov
jg
sub
sbb
and
cwtl
push
mov
cmpsl
bound
sahf
adc
xlat
xchg
clc
stos
pop
push
pop
in
lcall
push
dec
sbb
jmp
outsb
mov
sbb
sahf
loop
fdivl
lret
push
out
push
popf
sbb
sahf
pop
push
jbe
and
mov
xchg
nop
inc
mov
sub
adc
jp
add
ss
pop
int3
rcr
lahf
mov
jge
push
or
add
ds
mov
arpl
fst
or
aaa
dec
pushf
pop
icebp
xchg
jg
mov
lods
jmp
pusha
and
shl
mov
adc
test
outsl
pop
xor
rcr
cli
cs
jns
frstor
and
xlat
jl
and
rcll
arpl
test
push
adc
mov
push
mov
push
mov
jno
movsl
jo
fisubs
mov
sbb
dec
test
and
push
cmp
and
push
aad
in
mov
jns
jmp
sub
movsb
loop
push
add
mov
sti
xchg
jecxz
dec
sbb
sub
jecxz
cmp
jmp
ds
cmp
in
lds
xor
lods
xchg
xchg
sub
cmp
sub
addb
cltd
out
inc
fs
lods
pop
aaa
insb
in
xchg
push
out
test
xor
outsl
add
adc
cmpsb
stos
xor
test
pop
mov
push
adc
movsl
jno
push
or
int
pop
xor
xchg
jne
repz
hlt
push
js
inc
roll
xabort
cltd
lahf
cmp
or
lea
je
push
add
xchg
push
xchg
lods
push
inc
push
add
mov
dec
push
dec
insl
addr16
cmp
or
cltd
push
in
mov
push
in
pusha
xlat
sti
cld
int
in
inc
xchg
xor
add
lock
imul
cmp
sti
push
pop
mov
int
in
xchg
and
cmp
dec
pop
jnp
push
sub
push
sbb
mov
push
in
adc
pop
mov
mov
sbb
adc
das
jecxz
shll
or
adc
in
lret
pop
jns
xchg
mov
fdivr
mov
xchg
mov
cmp
xchg
inc
mov
or
mov
movsb
jg
mov
fs
out
sub
inc
mov
sti
inc
adc
sub
sarb
hlt
pusha
adc
mov
xchg
add
jg
mov
dec
sbb
pop
and
pop
jmp
cld
xor
loop
cmp
jg
outsl
xchg
inc
xchg
cmp
sbb
loope
mov
jbe
mov
lcall
cltd
pushf
pop
loope
testb
jl
and
pop
in
outsl
mov
out
lahf
sub
mov
cli
and
fst
mov
cmpsb
movsl
nop
xchg
in
sbb
rclb
arpl
mov
lret
pop
sub
cmp
fwait
movl
sbb
inc
les
mov
lret
scas
mov
jp
dec
lds
mov
dec
mov
mov
xlat
pusha
mov
fsub
int3
dec
pop
out
xor
fld
or
int3
std
cli
shlb
mov
push
mov
mov
sub
shlb
lahf
fildl
in
sbb
int
jb
jb
cs
sub
int3
xor
mov
idivl
sbb
cmp
std
add
ret
stc
push
pop
shll
mov
jns
cwtl
lods
or
popa
lds
sar
mov
pop
cmp
xchg
cltd
popa
and
sbb
adc
and
rcll
add
rolb
sub
jmp
push
int3
dec
lock
fdivrs
mov
fwait
add
shrd
dec
ds
cs
mov
xor
jno
mov
std
sub
push
imulb
in
lahf
mov
mov
inc
cld
fsts
js
adc
out
imulb
cltd
ljmp
test
inc
test
xor
sub
leave
add
lods
pop
mov
mov
imul
insb
jmp
cmp
mov
popa
xor
xchg
adc
add
lret
outsl
inc
cs
enter
mov
lea
cmp
aad
call
sarb
cmp
pop
sahf
ror
push
mov
mov
fst
loopne
sub
scas
fisubl
mov
rorb
cmpsb
ja
mov
mov
or
xchg
xor
and
adc
mov
lea
ss
mov
xchg
loop
rcrb
mov
popa
ss
scas
fdivs
xor
inc
inc
imul
pop
dec
mov
jge
mov
add
cmp
mov
mov
ds
xor
testb
ja
cmpb
out
sub
lcall
out
mov
in
cmp
xchg
dec
daa
cld
xor
mov
pop
mov
mov
inc
sbb
lcall
hlt
out
cmc
xor
inc
outsl
xchg
push
jns
add
push
mov
dec
pop
inc
inc
or
fidivrs
jne
popa
mov
scas
lret
jo
xor
jbe
mov
xchg
cmp
repnz
imull
xor
pop
mov
pop
or
bound
in
lcall
cmp
pop
mov
push
dec
rorb
push
popf
pusha
push
sub
sub
xor
imul
rol
fwait
push
jo
push
jp
loop
ds
mov
and
js
in
das
add
lcall
int
ljmp
mov
mov
popa
cmp
inc
cmp
jle
das
out
lea
lret
mov
cmp
sub
xor
and
sbb
stos
roll
outsb
xchg
lahf
lret
add
and
pop
inc
ss
insb
mov
xlat
mov
push
mov
adc
adc
lahf
dec
mov
jmp
push
jmp
cmpsl
and
xor
into
loop
dec
and
test
lds
adc
xchg
xor
out
mov
xor
mov
ret
xchg
sub
in
sub
mov
cmp
je
les
insl
mov
push
mov
fcmovbe
and
or
mov
pop
bnd
push
pop
js
lahf
leave
insl
out
notb
and
int
xchg
test
mov
jmp
jb
stos
xchg
pop
popf
add
iret
mov
sbb
jb
shlb
cltd
cmp
scas
gs
test
add
les
or
dec
pop
shll
fwait
scas
mov
add
insb
sbb
loope
stos
aaa
xor
sbb
cmpsb
pop
xor
push
xchg
mov
or
out
dec
push
mulb
cltd
je
mov
pop
push
int3
inc
in
and
sub
mov
or
mov
add
jmp
mov
xchg
ds
inc
icebp
jge
stos
leave
pushf
cmp
repz
push
cltd
shlb
mov
in
shl
mov
aad
pop
mov
mov
in
or
sbb
jp
pop
pushf
movsb
pop
xor
adc
adc
ret
shrl
fisttpll
int3
lret
repz
out
cmpsb
mov
insb
sbb
jbe
fcompl
repnz
add
lret
push
mov
popa
lock
xor
out
js
add
out
sbb
lcall
push
lret
arpl
mov
mov
pop
test
mov
xchg
dec
dec
fdivp
rorl
stos
mov
and
movsl
mov
call
in
pop
sahf
and
ret
out
xor
roll
pop
sbb
xor
xchg
mov
xchg
adc
rcrb
jge
in
aaa
xor
and
stc
and
call
xchg
popf
lods
cmp
movsl
stos
loope
mov
jg
ficoml
cld
repnz
setbe
cmpsl
and
in
aam
and
dec
mov
jmp
out
and
ds
lret
rcll
mov
mov
scas
cmp
push
sbb
adc
bound
push
enter
jns
call
dec
in
fistps
loop
jmp
sahf
add
sbb
inc
iret
ret
ficomps
icebp
mov
lret
inc
outsb
push
ds
insb
cmp
push
mov
subb
pop
mov
pop
xlat
pop
scas
rcll
jg
pop
add
xor
and
fnstenv
leave
fbstp
xchg
adc
out
or
and
pusha
cmpsb
inc
sbb
add
les
and
insb
mov
pop
mov
inc
push
movsb
inc
les
fldl
test
jnp
or
fidivrs
mov
sbb
imul
adc
fidivs
out
pop
push
mov
dec
scas
test
mov
es
xor
into
loopne
mov
fwait
xor
fwait
inc
insb
xchg
pop
into
cmpsb
and
sti
jno
int
inc
out
test
cltd
jge
dec
in
movsb
sbb
daa
out
or
fiadds
jecxz
lds
xchg
les
in
dec
inc
cmp
gs
jle
pop
xchg
aam
mov
mov
into
mov
and
xor
jmp
lret
mov
push
loopne
movsb
movsb
aaa
xor
adc
and
sub
cld
add
outsl
adc
cmp
mov
int3
mov
mov
call
jns
dec
sbb
shll
push
xchg
out
pop
dec
cmp
fcmovnbe
andl
inc
scas
mov
adc
or
and
pop
and
push
leave
push
scas
dec
pmuludq
leave
inc
or
mov
xor
data16
jno
xchg
dec
adcl
daa
jg
cmpsb
xor
push
push
faddl
mov
mov
lahf
adc
mov
fucomp
mov
pusha
leave
jne
imul
and
fldl
in
add
jmp
daa
jge
loop
jecxz
mov
push
stos
movsb
movsl
pushf
xchg
jmp
xchg
xchg
jge
nop
cmp
mov
ds
jl
movsb
dec
ss
mov
mov
inc
ds
out
call
sbb
cmp
pop
add
sarb
mov
add
dec
mov
mov
pusha
pop
imull
repz
jmp
movsb
inc
cmpsl
into
xlat
xchg
add
mov
xchg
ss
push
mov
jns
insb
sbb
mov
daa
or
roll
das
adc
lcall
or
cmpl
inc
sbb
adc
or
dec
pop
addr16
dec
dec
cmp
ficoml
cmc
mov
mov
fisttpl
jle
adc
rorb
pop
fsubrl
xchg
mov
sub
cmc
ret
rol
lods
shrb
jmp
add
sbb
pop
xchg
dec
filds
pop
push
or
bound
aas
leave
mov
sarl
sub
xchg
jl
repnz
inc
gs
rclb
xor
fs
dec
test
jmp
sbb
push
imul
loop
jecxz
sbb
scas
push
xchg
push
loope
shll
push
push
das
ret
insl
sbb
sbb
or
xor
sub
add
xchg
das
hlt
je
in
or
pusha
lock
mov
push
das
mov
rcrb
outsl
test
enter
movsb
jmp
dec
bound
inc
xorb
outsl
popa
cli
call
push
and
xchg
fstp
xor
daa
ss
jae
cmp
scas
xchg
inc
loop
bnd
sbb
add
cmpsl
lahf
cwtl
scas
fmull
push
shlb
call
lret
add
mov
shlb
aas
insb
dec
in
enter
nop
outsl
leave
andb
imul
pop
add
and
pop
jle
and
clc
sahf
pop
pop
pop
insl
imul
or
cmp
mov
mov
inc
pop
stos
fcoms
inc
and
orl
fdivrl
sub
push
insb
dec
dec
adc
jle
mov
lcall
popf
jne
mov
inc
decb
push
repz
test
mov
jg
pushf
in
test
mov
fistpl
in
aad
fnstenv
or
movsl
int3
dec
xor
push
mov
xchg
data16
cmpsl
jg
jbe
pop
lcall
mov
dec
nop
or
loopne
jmp
cmc
insl
out
and
out
mov
and
xor
in
cmp
push
jb
pop
cmpsl
mov
cld
and
andl
and
ljmp
push
pop
add
lret
jmp
mov
jns
mov
popa
push
or
frstor
jl
ljmp
pop
push
idivb
push
popf
pop
imul
nop
xor
xchg
inc
cli
add
pop
mov
test
cmp
sub
mov
imull
mov
and
cmpsl
sub
inc
xadd
xchg
push
push
aaa
adc
mov
sahf
mov
xchg
xor
pop
sub
addl
add
and
pop
xor
sarl
mov
std
rcrl
dec
cmpsl
imul
rclb
add
mov
inc
xchg
aaa
arpl
xor
and
push
lea
inc
lds
int
cmp
push
inc
push
xor
popa
lcall
sub
mull
jle
pop
cmp
es
jae
push
stos
sub
cli
ret
insl
dec
jno
imul
xor
sub
out
fs
pop
mov
sub
xchg
ja
fidivl
aas
jmp
sbb
rcrl
pop
sub
mov
adc
sbbb
stos
insl
mov
aam
push
test
xchg
mov
push
jmp
fists
fstp
jne
push
lcall
rclb
dec
lock
jbe
fidivs
xor
pop
js
movsl
sub
cmc
push
jmp
lock
sub
jecxz
push
out
ljmp
std
fldl
gs
push
bound
cmp
sub
mov
pop
fmul
xchg
xor
cmpsl
xchg
jmp
mull
adc
xchg
rclb
aas
mov
pop
pop
xchg
xor
in
mov
sub
icebp
fildl
into
fwait
imul
sbb
in
inc
or
inc
icebp
mov
dec
jmp
mov
int
lods
mov
je
jne
clc
jo
cltd
mov
lcall
stos
mov
loopne
cmc
mov
jnp
xchg
add
or
daa
jne
addr16
clc
cltd
mov
adc
xchg
adc
pop
pop
shlb
add
xchg
mov
lret
adc
xchg
and
shl
aad
and
test
ja
fbld
mov
jb
mov
jo
inc
pop
add
les
pusha
mov
sbb
adc
add
scas
out
push
shl
sub
dec
pushf
imul
daa
lcall
dec
cmpsb
jne
adc
lret
pushf
popa
or
mov
dec
ret
cs
jae
adc
xchg
jns
loop
or
push
add
lock
imul
mov
mov
ret
adc
xchg
cwtl
call
adc
dec
lds
mov
and
scas
fcoms
mov
pop
add
js
pop
cltd
fidivl
and
lahf
xchg
sbb
sbb
cmc
in
xchg
dec
mov
es
shll
cld
aam
rolb
push
push
sbb
pusha
out
sbb
fs
pop
mov
out
sub
xchg
xor
fidivrs
test
jg
cli
mov
jno
jb
loopne
inc
std
pop
sub
add
inc
mov
das
xchg
mov
push
dec
jo
insl
das
mov
dec
push
fcmovbe
push
in
mov
loope
adc
cwtl
outsb
jle
mov
enter
adc
bound
insb
mov
push
loope
pusha
sbb
and
push
jo
xchg
or
cmp
pop
sub
loope
shll
mov
jbe
stc
in
pushf
and
iret
fbld
adc
add
push
sbb
dec
dec
test
pop
cmc
out
jp
or
in
inc
fbld
mov
rorb
aaa
dec
or
sbb
sub
int
lret
ss
xchg
mov
xor
fistps
inc
insl
xchg
fnstsw
adc
jns
addr16
in
bsf
xchg
add
dec
inc
aas
inc
sub
dec
sub
mov
mov
inc
mov
ret
mov
ljmp
outsb
adc
fdivrs
cmp
jns
aas
in
and
jne
xchg
lahf
cmp
stos
mov
inc
in
inc
in
jl
dec
ret
fldl
cs
sub
cmpsb
jno
xchg
sub
sub
xchg
ret
and
mov
lahf
pop
add
popf
aad
inc
lahf
mov
mov
jnp
aaa
adc
loope
cmovp
cmc
xor
adcb
push
cmp
lahf
xor
mov
jp
push
jmp
out
and
loop
in
pop
je
negb
out
repnz
shrl
popa
subb
pop
jl
mov
out
xlat
jle
sub
jge
add
inc
divb
xor
jmp
push
jecxz
xorl
scas
lea
mov
jno
test
push
inc
stos
xor
mov
faddl
jl
dec
push
fldcw
stos
xchg
xchg
ret
sbb
cmp
xchg
push
cmp
cmpsb
inc
pop
lahf
sbb
pop
xor
das
jecxz
aaa
xchg
push
leave
lret
add
xor
push
and
sbb
aas
sahf
sbb
sub
dec
push
adc
mov
xchg
push
aam
scas
lods
aaa
outsb
in
add
imul
shl
mov
inc
mov
cmp
sbb
xchg
sbb
mov
mov
dec
ss
dec
dec
cwtl
xor
cmp
mov
mov
addl
arpl
inc
fstl
sub
push
push
addr16
loope
sub
cmp
loope
pop
sub
insb
aaa
jmp
xchg
mov
xchg
sbb
rclb
out
mov
or
lret
aaa
jnp
dec
stos
imul
flds
jg
xchg
cmp
adc
fsubl
adc
test
call
rcrb
add
enter
sub
sbbb
or
cs
fucom
or
inc
test
in
xor
sub
lock
je
shrl
xor
and
push
sub
idivl
or
ror
std
lret
ret
mov
leave
mov
lds
adcb
pop
jecxz
jge
outsb
fcoms
mov
push
sub
jo
and
ret
imul
pop
imul
sub
icebp
incl
cmp
jnp
and
ja
out
add
dec
push
aam
xor
jle
aas
dec
test
shll
and
inc
mov
jge
movsl
xchg
push
cmp
xor
sbb
int3
cld
mov
stos
ja
pop
loopne
sub
fwait
xor
pop
and
jbe
es
lret
mov
xchg
dec
fisubrs
jbe
fcompl
je
sub
push
dec
outsl
movsl
and
jns
ret
adc
es
inc
ds
and
scas
lahf
xchg
bound
sub
mov
in
adc
lea
rol
sbb
push
jnp
xchg
jbe
inc
rclb
jmp
rol
xor
push
fbld
iret
int
cmp
lods
xchg
mov
jns
push
jg
outsb
jnp
clc
fsts
das
add
cmp
lahf
int
sbb
jmp
push
sti
pop
int3
enter
dec
jbe
cwtl
mov
cmp
push
ljmp
sbb
in
loop
adc
dec
lods
or
sbb
cmpsb
dec
scas
cmpsl
fadds
dec
mov
fcompl
xor
shr
or
bound
inc
mov
sub
adc
ficoms
mulb
iret
dec
xchg
jl
inc
xor
xchg
xchg
lea
add
leave
jecxz
js
decl
movsl
mov
cld
xchg
std
sub
pop
jg
adc
xchg
mov
or
jmp
inc
rcll
push
cmpsb
testb
adc
movsb
adc
out
into
jg
or
and
std
lret
repnz
add
ljmp
cmp
xchg
mov
je
subb
rcrb
enter
test
mov
jl
jmpw
inc
daa
cwtl
repnz
jl
daa
pushf
ret
xor
cmp
sahf
jb
out
and
inc
cmpsl
shll
es
daa
xor
lcall
cmp
pop
adc
aas
outsb
inc
faddl
int
jnp
enter
pop
insl
lret
add
hlt
mov
add
xlat
mov
fsubl
sbb
cmp
pop
or
testl
or
pop
push
dec
adc
stos
and
adc
mov
pop
mov
out
stos
outsb
fwait
sbb
clc
rclb
cmp
pop
dec
das
test
and
out
mov
or
or
mov
imul
sub
jnp
mov
into
fnstenv
adc
sbb
mov
lret
shll
dec
int3
scas
dec
dec
push
or
arpl
lods
xchg
mov
push
xchg
jp
nop
push
dec
dec
mov
or
push
mov
jae
lock
hlt
sub
lret
lahf
out
scas
and
push
std
mov
cltd
push
cmpsl
mov
cmp
repz
jmp
negl
add
dec
data16
mov
inc
into
shlb
inc
mov
cmovns
add
mov
or
sub
adc
push
dec
cmp
and
xchg
ja
adc
add
aas
sub
in
int
stc
aas
outsl
aas
jns
xor
imul
hlt
adc
add
push
add
call
andl
xchg
and
xor
nop
shll
lods
ret
mov
and
enter
jmp
icebp
xor
movsb
int
fnstsw
jo
mov
scas
test
jmp
fcmove
mov
dec
mov
push
mov
out
add
sub
ja
mov
pop
mov
fucomip
adc
jge
lods
adc
flds
dec
call
iret
loope
stos
xchg
insb
mov
test
mov
push
cld
jmp
inc
mov
int
pop
les
mov
mov
fildll
jns
adc
aad
addr16
fistpl
insb
lcall
pop
pop
enter
mov
fisubs
add
adc
cmp
cmp
pop
add
adc
shlb
outsb
popa
add
cmp
aad
mov
lods
ret
inc
fisubs
or
dec
pushf
imul
xchg
fisubs
xchg
iret
or
sbb
fldenv
in
dec
lock
jne
dec
add
in
clc
int3
jb
push
fcmovb
mov
xchg
fs
jo
or
add
pop
pop
lods
cmp
push
sub
fistps
push
xchg
jge
cmp
popl
lods
mov
or
add
pop
out
fwait
daa
adc
lods
test
lock
xchg
std
sqrtps
push
add
mov
xor
mov
and
cmp
or
mov
xor
and
lock
lret
sub
into
mov
bound
cmp
subl
dec
rorl
cmp
dec
lds
sbb
mov
mov
mov
sarl
mov
push
out
adc
pop
mov
dec
and
jl
imul
and
int
cmp
std
shlb
sahf
dec
and
mov
xchg
jl
cmc
mul
pop
jle
adc
mov
notb
and
push
outsl
inc
loope
mov
pop
cmp
xchg
outsb
cmc
insw
bound
push
push
addr16
sbb
call
popa
adc
lret
ds
lock
adc
add
lock
jle
cli
mov
orb
jge
roll
push
outsb
jae
adc
and
enter
iret
call
or
add
movsl
bound
push
and
daa
xor
add
lret
vandnps
loope
into
shl
sbb
movsb
pop
adc
dec
push
or
xchg
cmp
inc
add
ret
or
xor
mov
adc
into
nop
sub
lahf
xor
adc
pop
push
fisubs
and
cwtl
xor
mov
aad
imul
and
stc
pop
adc
aam
xor
dec
into
mov
shrl
mov
jl
dec
mov
lea
lcall
mov
loope
lock
jecxz
inc
imul
add
stos
xchg
in
sub
stc
inc
test
imul
rorl
rorl
add
in
push
xchg
push
cmp
dec
daa
popf
xor
jp
rorl
mov
je
or
ror
sub
sti
stos
add
idivb
inc
out
adcb
xchg
or
and
jg
popa
xchg
mov
cmp
cltd
push
es
call
xor
lea
xor
out
adc
movsb
jnp
mov
mov
sbb
adc
xlat
testl
sti
mov
push
ja
pop
dec
mov
movsl
jb
test
or
stos
ds
arpl
sahf
adc
ja
pop
dec
xchg
cmp
cli
outsl
sbb
jbe
add
push
into
lcall
stc
mov
test
xchg
xchg
test
jge
pop
dec
das
dec
adc
mov
lods
dec
sti
adc
jnp
hlt
mov
pop
hlt
pop
sbb
push
mov
adc
repnz
mov
divb
lock
dec
add
xchg
pop
stos
fldt
push
std
les
cmc
aas
mov
js
push
xchg
cmp
stos
enter
and
cmp
xchg
loop
cmp
shll
repnz
jge
mov
and
add
fsub
or
std
addl
test
aad
mov
mov
fistl
xchg
iret
inc
gs
addl
das
pop
sbb
data16
pop
jecxz
stc
adc
loope
inc
mov
pop
out
popa
pop
sub
jge
bound
cld
xor
popf
xor
sbb
mov
jns
popa
push
mov
arpl
sub
inc
lods
popf
lret
int
stc
stc
arpl
in
jnp
or
xchg
rcrb
and
loop
outsl
test
sbb
mov
sub
xlat
in
sti
ret
mov
in
xor
cmp
dec
cld
dec
push
scas
lcall
xor
mov
ficomps
sbb
ljmp
inc
popa
ljmp
or
sahf
dec
cwtl
and
fwait
testl
or
and
int
mov
and
or
dec
mov
pop
hlt
clc
lret
lcall
add
sub
xorb
mov
clc
inc
cltd
mov
pop
stos
xchg
dec
mov
xchg
or
xchg
sbb
add
dec
test
je
repz
ljmp
aaa
dec
mov
or
sub
xor
or
pop
push
xlat
add
out
xor
movsb
pop
nop
push
xor
test
sub
pushf
push
push
jecxz
mov
lods
je,pt
pop
cmpsl
and
push
or
xlat
rol
fwait
lea
mov
sub
xchg
pop
push
mov
jb
scas
jns
icebp
pop
xchg
in
dec
clc
and
mov
into
add
xor
sub
adc
push
rcl
xor
pop
dec
push
mov
mov
data16
ret
loope
imul
pop
outsl
fcompl
stc
push
cltd
xchg
mov
imull
test
adc
loopne
adc
into
mov
cli
inc
mov
or
jbe
add
or
and
jecxz
sbb
dec
cmp
push
pop
ja
int
cli
add
sub
outsb
jmp
adc
cmp
flds
and
push
sbb
add
or
add
cmp
fiadds
jmp
daa
lods
add
stos
jl
or
rol
inc
pop
xor
jl
test
fbstp
lock
outsb
sub
jp
cmp
mov
movsb
add
push
das
pop
dec
cmp
enter
cmp
inc
in
outsl
idivb
add
push
stos
aas
or
pop
test
pop
setns
mov
pop
xor
xchg
pop
jns
test
test
test
dec
loope
dec
jmp
inc
dec
pop
hlt
sbb
xchg
xchg
jb
ss
pop
loop
es
lea
scas
gs
shlb
sbbb
js
xor
sub
mov
lds
push
pusha
and
or
inc
pop
jmp
mov
xchg
xchg
mov
and
dec
jns
mov
mov
jns
mov
xchg
add
adc
dec
pop
pusha
push
and
and
push
xor
icebp
inc
mov
bound
stos
gs
mov
and
push
xchg
xor
push
cmp
inc
outsl
mov
jo
pushf
out
sti
push
testb
je
adc
inc
push
cmp
js
shl
pop
in
push
nop
icebp
mov
lock
shl
pop
pop
jne
test
dec
adc
adcl
paddw
mull
push
push
ret
adc
stos
subb
ss
sbb
popa
mov
mov
lods
lret
push
add
arpl
insl
cmc
jae
mov
adc
sub
pop
push
bound
xchg
cmpsb
das
imul
or
lret
push
inc
loopne
aam
push
lret
scas
mov
in
xor
and
xchg
ljmp
cmp
mov
dec
pop
xor
add
orl
daa
outsl
sbb
popa
fucomip
lods
inc
out
fiadds
push
fs
jae
and
cmc
fcompl
adc
punpckldq
ss
mov
jle
cmp
insb
test
and
in
stc
add
bound
je
in
or
sbb
adc
pop
push
cmp
pop
imul
je
jp
xlat
and
stos
jl
pop
xchg
add
loopne
cwtd
ljmp
or
roll
mov
mov
pop
insl
arpl
mov
jg
dec
mov
push
lods
leave
stc
cmp
adc
into
lea
or
in
loopne
stos
out
out
dec
es
outsl
sbb
sub
inc
push
negb
cmp
popa
roll
lahf
pop
out
dec
sbbw
scas
xchg
pop
mov
lds
cmp
jns
push
adc
stc
jne
cmp
push
je
mov
jmp
pushf
das
adc
mov
fsubs
enter
pop
jle
sarb
and
cmpsb
out
std
xchg
jb
xor
mov
jno,pn
aam
lcall
cmp
loop
pop
xchg
mov
movsb
sbb
enter
ret
out
jae
cs
out
clc
mov
mov
cli
repz
out
lds
mov
in
pop
fisubs
sbb
loope
ret
jnp
mov
jns
stos
cmp
jle
lcall
fcoms
arpl
mov
sahf
add
fs
cmp
jmp
inc
test
test
dec
adc
repnz
pop
cmc
xor
dec
rclb
add
int3
xor
push
inc
mov
bound
rclb
rorb
push
push
xor
loop
sbb
test
popf
and
fcomip
sub
add
xchg
sub
or
inc
jnp
cmpsl
and
add
lret
cmpsl
cmp
inc
jg
mov
addr16
call
call
ficoml
jl
fldt
xchg
add
inc
sub
cmpsb
cltd
mov
cmp
pop
enter
cli
cmp
lret
adc
xor
push
out
xor
or
fadd
dec
fists
pop
dec
lret
or
and
setge
dec
jnp
les
aam
jg
pusha
imul
mov
mulb
adc
jl
fmul
out
mov
clc
fcoml
sub
lods
inc
dec
out
clc
lea
cmp
sbb
push
or
ficomps
xor
mov
in
push
push
xor
mov
xchg
stc
mov
mov
jmp
in
rcrl
leave
fistl
incb
addr16
int
das
pop
push
jae
or
decb
stos
mov
shr
xor
leave
mov
pop
fildll
fidivl
mov
in
out
aam
scas
pop
in
cli
data16
ret
mov
out
or
jo
sahf
or
push
mov
jecxz
jno
lahf
adc
insb
scas
insl
or
cmp
push
push
jmp
lods
lock
or
nop
enter
inc
add
daa
cmc
insb
adc
fs
shll
into
push
pop
out
mov
in
push
jb
add
sub
mov
jae
dec
iret
add
cltd
dec
rol
mov
data16
jo
cmc
inc
fisubrl
pop
and
aaa
sub
sbb
andb
and
xchg
hlt
sub
stos
lret
ds
mov
mov
sbb
nop
inc
cltd
pop
inc
aas
xor
adc
sbb
aam
popa
mov
mov
pushf
pop
cmpsb
rcrl
xchg
repnz
fs
and
testb
pop
xor
xor
dec
adc
dec
jecxz
sbbl
mov
mov
pop
xor
and
fs
adc
cmp
mov
hlt
in
mov
xor
mov
mov
mov
cmp
sbb
out
fmul
jecxz
sbb
cmpl
dec
inc
sbb
mov
sbb
cld
pop
bound
dec
or
scas
xchg
xor
xchg
xchg
inc
div
mov
sub
cmp
xor
inc
and
mov
pop
repnz
sbb
ret
xchg
lods
cwtl
sti
xchg
daa
mov
lds
in
xchg
add
jl
int3
sbbb
mov
dec
repz
iret
or
sti
rcll
pmulhuw
push
aad
movsl
bound
mov
lcall
shll
xor
push
sbb
outsb
jb
dec
push
test
xchg
xor
sbb
jns
inc
cmp
test
mov
shrl
insl
and
cli
mov
mov
mov
add
and
insl
jbe
jmp
jg
push
push
xor
test
mov
dec
pop
pusha
add
add
popf
fxch
pop
imul
push
lods
sahf
mov
inc
push
mov
xlat
lahf
jmp
dec
cmp
insl
pusha
int3
or
sbb
ljmp
push
nop
dec
pop
adc
sub
insb
lret
mov
addb
in
mov
xor
int
push
test
sub
popf
add
lea
push
test
cmpsb
in
adc
out
mov
push
fisttpll
outsb
lods
sbb
sbb
jl
iret
pop
cmpsl
sub
fs
mov
testl
repz
mov
jp
jl
clc
lock
adc
mov
pop
lock
pop
sub
mov
fs
add
inc
xchg
mov
ljmp
xor
cmp
fstpt
icebp
cmp
lock
jnp
fwait
inc
pop
add
jg
fwait
repnz
mov
aaa
fidivl
cmp
and
lods
push
xchg
dec
shr
mov
mov
jbe
shrb
sti
xorb
into
adc
add
push
cmpsb
mov
lea
add
mov
lock
xchg
adc
add
adc
ja
test
insb
mov
push
lock
imulb
lods
movsl
xor
adcb
xor
sub
cmpl
je
scas
jns
sbb
cmp
lret
in
xchg
mov
fldt
cmp
out
dec
cmp
mov
xor
mov
test
adc
aam
mov
sub
popa
xchg
xor
out
sub
push
fs
dec
mov
ljmp
ss
outsb
xor
mov
insl
mov
push
mov
push
mov
jb
mov
into
jg
in
int3
add
xchg
idiv
rclb
cld
jge
clc
test
sbb
mov
repz
out
pop
pop
rcrl
