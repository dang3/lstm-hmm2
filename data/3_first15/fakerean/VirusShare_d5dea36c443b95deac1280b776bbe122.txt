add
je
sbb
mov
movsl
inc
add
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
jecxz
inc
add
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
fistps
clc
call
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
xchg
inc
add
test
jne
add
add
test
jne
add
or
test
jne
add
add
push
and
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
movb
test
add
add
test
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
test
rorb
mov
add
add
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
and
pop
and
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
cmp
lea
lds
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
jge
inc
add
inc
and
add
add
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
inc
add
dec
and
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
mov
add
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
mov
cmp
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
add
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
add
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
add
inc
fsubs
repz
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
add
push
push
add
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
add
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
inc
add
dec
sbb
rcrb
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
popf
inc
add
sbb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
mov
mov
cmp
push
push
call
mov
jae
addr16
xchg
mov
pushfw
add
outsl
shlb
jbe
add
outsl
nop
out
add
in
add
add
add
add
jp
add
add
mov
push
xchg
mov
add
jb
scas
in
add
add
add
push
icebp
add
mov
incb
mov
add
add
add
add
movsl
mov
push
jnp
roll
and
add
mov
add
fstpl
jae
mov
xchg
add
je
add
ljmp
cwtl
jo
add
sarb
add
add
pusha
stos
adc
movsb
add
out
rolb
add
pop
add
shrb
pop
xchg
cmp
mov
pop
add
add
in
mov
push
mov
add
push
push
lea
push
call
add
mov
push
jp
mov
fiadds
add
add
scas
fcomps
ret
out
lock
nop
jae
sarb
add
add
cmpsl
add
test
rclb
add
add
add
mov
add
into
push
hlt
imul
jmp
add
std
arpl
adcl
scas
pop
repnz
add
pop
movl
popl
push
push
push
push
call
loopne
add
shll
lret
mov
popf
jle
sahf
mov
addb
imul
std
jo
add
add
add
mov
shl
out
add
add
mov
mov
loopne
add
cld
add
add
add
add
push
add
push
lods
fsubrs
add
aad
add
add
xchg
out
sahf
jns
les
push
push
call
pop
les
push
add
roll
push
mov
add
add
mov
add
add
test
jne
mov
add
jae
cmc
nop
stos
ret
add
cli
add
mov
pop
les
sub
mov
mov
add
popf
add
add
movsl
rolb
xchg
cli
xchg
scas
add
add
mov
lea
pop
push
push
lea
push
push
push
call
mov
cltd
add
mov
add
add
mov
add
push
pop
loope
addr16
pop
mov
sarb
mov
add
add
push
nop
mov
xchg
add
jbe
add
icebp
mov
hlt
jmp
popl
rcrb
mov
cmpsb
sahf
add
push
flds
add
mov
lea
pop
push
push
call
push
push
push
push
push
push
push
call
add
add
jge
add
pop
mov
mov
add
add
add
add
out
pop
out
popf
fwait
jns
add
add
jbe
je
pop
add
mov
loop
imul
add
push
add
popf
addl
mov
cli
push
add
add
add
cwtl
rolb
je
popf
add
mov
add
roll
mov
lea
pop
call
push
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
insb
add
xor
mov
add
mov
imul
addb
fiaddl
add
jb
push
add
add
mov
lods
add
leave
push
xchg
jo
ficompl
lret
imul
gs
mov
test
shlb
mov
lea
pop
jmp
ret
mov
push
lea
push
push
lea
push
push
push
push
call
je
pop
lcall
jl
push
negb
xchg
add
mov
scas
imull
lds
xchg
out
add
subl
in
popa
mov
addb
testb
jnp
xchg
leave
test
nop
pusha
add
in
add
add
add
add
pop
mov
push
push
push
call
add
add
add
je
int
sbbl
add
lret
lcall
fadds
add
add
add
shl
cmpsb
push
test
movsb
shll
add
add
xchg
outsl
icebp
add
shll
pop
mov
out
add
add
xchg
insb
add
repnz
iret
je
cltd
add
add
mov
ljmp
mov
lea
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
ret
add
hlt
pop
jae
add
sti
ret
pop
arpl
lds
mov
add
add
add
out
push
push
jl
enter
add
arpl
into
add
add
int
mov
cli
add
add
add
mov
push
js
add
push
frstor
add
add
add
pop
add
add
push
push
push
lea
push
push
push
push
push
push
push
call
mov
gs
pop
stc
les
add
lods
add
push
movsb
add
fcomip
mov
mov
imul
push
add
loopne
add
xchg
add
add
int
movsb
lods
mov
fstp
pop
mov
movsl
sti
jno
add
push
lret
add
pop
add
add
movsl
add
cli
in
pushf
iret
lcall
mov
lea
pop
mov
xor
push
lea
push
push
push
push
push
call
lcall
in
add
cltd
xchg
cmpsl
ja
je
add
add
data16
sti
lock
scas
clc
add
mov
pop
add
add
add
out
into
inc
add
jmp
add
out
insb
int
mov
sahf
add
xchg
shl
add
xlat
stos
addr16
xchg
add
xchg
add
cltd
mov
pop
int3
mov
bound
pop
add
push
push
lea
push
lea
push
push
lea
push
call
lret
jecxz
add
add
cmc
add
add
movsb
push
mov
std
icebp
addr16
movsb
fstpl
add
fs
jne
add
add
in
cwtl
mov
add
cld
mov
add
lret
mov
mov
jp
lcall
pushf
add
lret
fmull
adc
shll
mov
mov
add
add
add
in
push
add
add
add
cmpl
into
gs
stc
mov
add
add
aam
add
add
int3
mov
jb
rolb
push
imul
add
add
mov
andl
xchg
add
rolb
add
add
jmp
push
mov
mov
arpl
add
test
pop
xlat
add
mov
out
add
or
sbb
push
push
push
push
push
push
push
push
call
in
add
jmp
faddl
std
xchg
add
add
cmpsl
mov
loop
je
add
add
add
addl
jb
add
fildl
add
add
stos
call
fildll
push
repnz
add
add
mov
jns
aam
bound
pop
add
push
push
xor
push
or
inc
add
shr
add
lea
lea
sub
add
xor
pop
shl
sub
pop
push
push
push
call
out
sahf
jmp
add
imul
lods
filds
arpl
add
rclb
add
add
roll
add
jl
add
rcrl
xchg
add
xchg
add
add
mov
icebp
jecxz
stc
add
add
out
clc
fwait
addl
pop
add
mov
xchg
add
test
jo
add
push
pop
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
call
scas
ja
jle
js
add
add
mov
add
mov
mov
jne
pop
add
fldl
enter
pop
add
cwtl
push
push
mov
test
add
enter
test
stc
int3
add
xchg
cwtl
lock
mov
iret
add
mov
lea
pop
call
push
lea
push
push
call
mov
add
jnp
add
into
add
add
add
add
add
je
jns
lea
pusha
and
add
call
add
test
pop
add
pop
data16
cwtl
jl
add
xchg
mov
fcmovu
jbe
data16
loop
in
addr16
in
add
mov
xchg
loopne
add
mov
push
subb
add
cld
popf
pop
movsb
add
pop
stc
cli
fldl
add
mov
lea
pop
mov
movl
lea
push
push
push
call
add
add
popf
divb
add
add
add
add
mov
jae
add
add
add
add
add
roll
add
jl
add
movsb
add
add
ja
xchg
add
xchg
add
add
mov
gs
add
add
add
add
jb
add
data16
push
pushl
pushl
push
push
lea
push
push
push
call
rclb
push
add
add
ret
filds
add
add
jge
push
clc
add
add
add
fincstp
imul
add
xchg
add
pop
add
lea
push
add
add
sarl
test
rorl
pop
call
push
push
push
push
push
push
push
push
call
movsb
icebp
loope
add
add
loop
push
add
fcomps
rolb
add
xchg
add
add
add
loopne
jmp
add
push
mov
stos
fstl
insb
out
pop
add
aam
mov
bound
add
jl
stos
mov
add
fiaddl
idivb
mov
pop
stos
lods
add
mov
lea
pop
pushl
push
push
push
push
push
call
ret
aam
add
loopne
add
add
ljmp
add
add
repnz
add
lods
add
in
add
gs
add
rorb
ror
push
roll
add
mov
add
add
mov
outsl
ret
add
cwtl
mov
add
insb
push
xchg
out
add
add
add
gs
mov
add
imul
cld
lea
pop
pushl
call
push
push
shr
push
sub
add
lea
sub
ror
ror
add
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
scas
in
add
add
lods
mov
enter
cld
or
add
mov
fwait
add
push
add
int
test
imul
bound
add
add
jle
faddp
mov
add
add
test
shl
lock
in
add
add
std
insb
add
jbe
ja
push
push
pop
mov
lea
pop
pushl
call
push
lea
push
push
lea
push
push
push
push
call
xchg
add
pop
pop
add
jno
faddl
scas
add
add
jge
mov
mov
fistpl
add
test
push
iret
add
add
add
lret
jge
add
js
add
xchg
xchg
xchg
add
mov
aam
add
stos
mov
std
mov
aam
bound
push
push
push
shr
sub
sub
push
push
pop
add
shl
add
shl
sub
ror
pop
shl
shl
rol
sub
pop
push
push
push
push
call
add
add
mov
mov
arpl
cwtl
data16
add
shr
xchg
icebp
insb
add
add
add
push
add
add
add
mov
mov
scas
add
add
test
jmp
lock
int
stos
xchg
push
push
pop
mov
add
mov
pop
add
xchg
add
mov
lea
pop
push
push
push
push
lea
push
push
call
jmp
je
fildl
push
mov
add
movsl
add
mov
add
push
add
xchg
add
testl
add
cwtl
cwtl
stc
incb
jge
push
scas
jmp
add
add
test
pushf
add
roll
cmpsb
add
insb
sti
test
add
add
mov
ljmp
add
lds
adc
rorb
add
enter
add
add
add
popa
push
add
add
add
add
jns
jmp
add
xchg
add
addr16
fisubrl
xlat
add
add
add
mov
stos
jo
add
test
adc
stos
mov
add
pop
lock
add
mov
mov
lock
fld
add
pop
push
push
push
lea
push
lea
push
push
call
mov
add
xchg
add
js
add
add
faddl
lea
add
add
add
add
movl
fbld
add
clc
rcll
add
add
aad
push
jns
mov
add
add
clc
ljmp
add
jae
nop
xchg
add
pop
jo
add
add
int
xchg
popa
js
add
rcr
aam
fcompl
lea
pop
mov
add
add
push
push
push
push
lea
push
call
xchg
outsl
out
add
mov
test
scas
add
mov
add
add
add
mov
loop
frndint
mov
lret
add
imul
shr
out
add
push
out
push
jl
sti
add
push
xchg
add
add
add
fildl
imul
jmp
mov
nop
add
jnp
jp
filds
mov
add
jb
aad
add
mov
lea
pop
add
push
push
call
add
scas
add
fadds
aam
leave
add
add
jno
add
fstl
add
mov
xchg
movsl
loop
imul
int
push
pop
clc
filds
jno
jno
stos
add
add
pop
fistps
lahf
lods
mov
add
xchg
repnz
mov
add
jne
repnz
sahf
mov
idivl
add
add
sbbl
add
gs
mov
lea
pop
mov
push
push
push
lea
push
push
lea
push
call
push
jae
repnz
mov
add
int3
aad
add
add
jo
mov
sub
add
add
lret
add
add
imul
add
add
shll
add
in
add
fildl
mov
jmp
push
lods
scas
loope
add
add
add
xchg
hlt
jmp
mov
mov
pushf
add
add
add
xchg
mov
add
add
outsl
jbe
aad
add
jne
fsubs
pop
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
addl
mov
add
filds
add
xchg
in
test
arpl
xchg
fildl
repnz
add
add
add
aam
jl
jge
flds
mov
aad
add
addb
add
add
jae
in
mulb
jns
lret
in
insb
add
jmp
cltd
rcrb
add
jne
int3
lea
pop
add
add
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
xchg
aam
popl
add
add
jae
mov
stc
addr16
pop
add
add
out
add
push
js
popf
xchg
add
addb
fucomp
add
mov
fwait
jmp
add
cmpsl
fdivp
call
outsl
scas
mov
add
add
enter
add
push
in
add
lea
pop
push
push
push
lea
push
call
jno
movsb
test
mov
hlt
rolb
test
add
add
mov
ljmp
gs
add
mov
xchg
add
add
rcll
add
add
data16
add
mov
into
js
mov
add
mov
xchg
add
aam
xchg
add
add
pop
mov
xor
push
push
push
lea
push
push
push
push
lea
push
push
call
leave
rolb
jecxz
in
add
add
mov
add
xchg
cwtl
popa
push
add
mov
rclb
mull
add
push
add
fcomps
mov
loope
mov
add
add
mov
ja
add
out
add
add
add
lahf
add
add
lods
xchg
aad
roll
add
mov
lea
pop
add
push
push
push
lea
push
call
mov
stc
lret
add
xchg
add
add
add
mov
add
fwait
lret
sahf
cli
cli
add
jbe
out
pushf
add
add
add
stos
addr16
lock
mov
pop
imul
add
xlat
add
xchg
xchg
ljmp
mov
data16
mov
xor
push
lea
push
push
push
push
push
push
push
call
push
add
fildl
mov
add
add
aad
sahf
mov
jbe
stc
roll
push
add
mov
add
repnz
lahf
roll
add
ljmp
add
arpl
add
add
add
cmpb
negb
movsb
add
add
jmp
mov
add
shl
mov
mov
lea
pop
push
mov
push
push
push
push
push
push
push
lea
push
call
loopne
add
out
lock
sbbb
out
cmpsb
add
add
in
in
jecxz
add
add
repnz
gs
out
repnz
pop
add
add
add
flds
add
add
gs
jge
add
add
iret
stos
lods
xchg
add
test
mov
mov
add
shll
hlt
lea
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
in
add
mov
jle
mov
add
stos
jo
out
mov
cmc
add
add
mov
mov
jbe
mov
push
mov
lods
add
cmpsl
add
add
add
add
add
add
lds
shll
pop
movsb
test
mov
filds
add
add
arpl
mov
add
pop
mov
and
add
push
push
call
iret
movsl
int
mov
pop
out
scas
jo
fs
fcmovbe
out
test
add
fcmovb
jle
cli
push
pop
mov
push
add
in
mov
add
jno
jmp
add
add
jae
add
add
mov
addb
fildl
xchg
add
sarl
data16
pop
jl
add
add
rcll
pop
add
add
stc
data16
mov
add
pop
sub
pop
push
push
push
push
lea
push
push
push
call
xchg
outsl
cltd
cmpsb
fdivs
add
add
add
add
fwait
pop
add
jb
add
jl
add
incb
aam
cld
jbe
test
jb
add
add
testb
addl
add
out
popa
fnstsw
in
jne
mov
add
add
sbb
rep
push
push
push
call
add
mov
add
mov
test
add
add
add
jnp
movb
add
jl
cltd
shl
cmc
jl
cltd
out
mov
mov
loopne
add
lods
mov
into
hlt
loopne
movsl
mov
add
add
mov
mov
imul
in
add
add
bound
cmpsl
iret
pop
add
add
jecxz
mov
mov
lea
pop
pop
mov
add
push
push
call
jo
add
xchg
xchg
add
nop
ja
movb
add
test
idivl
jbe
jbe
in
add
in
rolb
movsl
roll
into
add
repnz
out
faddl
add
fstp
sahf
add
add
mov
cli
lcall
out
roll
outsl
gs
add
movb
scas
jne
add
add
pop
pop
test
add
subl
sar
add
scas
in
add
cmpsl
mov
lea
pop
add
push
push
push
push
push
push
call
fldl
add
mov
add
add
mov
pop
repnz
loop
add
jne
add
add
add
add
popf
mov
add
cmc
cmpsl
add
xchg
popf
mov
lock
jb
add
jne
test
enter
loop
add
add
add
je
popa
add
mov
lea
pop
add
mov
push
push
push
call
add
fisubs
add
mov
into
add
add
add
addl
mov
out
add
cld
xchg
add
in
movsb
mov
lahf
add
add
mov
repnz
mov
cli
pushf
push
push
std
pop
and
mov
add
jp
popa
jmp
add
faddp
fildl
jmp
add
xchg
shl
xchg
cmpsb
fisubrl
loop
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
xchg
cli
add
add
pop
push
mov
mov
lret
add
rolb
ja
xchg
vaddsd
xlat
lds
andb
pop
js
add
add
lahf
add
mov
add
add
popf
jne
lret
loop
leave
add
add
testl
fs
in
addl
ljmp
pop
add
push
lea
push
call
lret
roll
je
insb
pop
add
add
jo
add
xchg
add
rcll
jge
loop
loopne
add
add
clc
lock
jmp
pop
pop
out
push
scas
add
xchg
add
add
add
add
add
stos
add
add
add
in
push
add
jae
call
add
sti
mov
push
pop
cmc
clc
add
repnz
cld
lea
pop
mov
push
push
push
call
popl
rolb
add
mov
out
loope
shr
test
add
jge
add
add
rclb
push
add
sti
add
pop
pop
add
add
les
add
adcb
add
rolb
mov
pushf
sahf
xchg
add
mov
mov
lea
pop
xor
push
push
call
mov
add
rolb
ret
add
add
add
add
shrb
add
jne
loop
flds
mov
addl
add
shr
add
add
add
imul
loopne
add
jecxz
aad
stc
mov
jo
add
xchg
add
add
js
iret
mov
add
pop
jae
add
add
pusha
or
les
lea
push
push
call
sbbl
fcompl
in
push
jecxz
add
add
add
add
add
ljmp
add
add
add
sahf
add
out
movsl
popf
movsl
aad
js
pop
add
loope
add
add
push
insb
xchg
add
mov
popf
mov
mov
add
add
mov
test
test
mov
scas
jge
in
add
adcl
stc
out
jnp
fmull
dec
inc
xor
add
push
push
push
lea
push
push
call
xchg
add
push
add
add
fs
add
add
mov
out
lahf
add
add
test
testl
add
mov
popa
add
add
into
add
cmpsl
add
add
add
call
add
mov
add
add
add
mov
movsl
add
mov
add
fisubrs
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
call
add
jo
mov
add
add
add
fadds
add
pop
push
loope
mov
rcl
add
add
add
add
insb
insb
test
mov
add
repnz
arpl
add
lret
add
mov
test
add
add
mov
lea
pop
mov
push
push
rol
push
or
inc
add
sub
rol
sub
inc
pop
dec
pop
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
jae
enter
add
add
add
add
je
rcll
add
roll
add
in
pop
repnz
mov
add
leave
add
cmpsb
mov
jl
ret
gs
add
add
add
jo
insb
add
mov
popf
jb
iret
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
jns
test
ja
add
insb
add
add
add
scas
xorb
std
int3
add
add
add
stc
add
hlt
mov
add
add
xchg
add
data16
imul
add
stc
mov
add
add
fiaddl
pop
add
in
mov
lea
pop
call
push
lea
push
call
call
roll
sti
add
add
add
lods
mov
pop
enter
pop
add
add
in
sahf
xchg
divl
mov
mov
add
cmpsl
add
jns
mov
add
lods
jl
mov
cli
add
add
in
out
add
cwtl
add
pop
push
push
push
sub
add
not
push
push
pop
add
add
shl
dec
sub
ror
lea
sub
pop
lea
add
rol
pop
push
push
push
push
push
push
push
call
add
mov
mov
roll
addb
jp
out
add
mov
jo
add
jo
pop
push
mov
add
jge
fnstenv
sti
pop
mov
mov
add
mov
cmpsb
jno
add
add
push
icebp
add
rcrb
movsb
add
in
xchg
mov
arpl
mov
jo
add
popa
sbb
add
mov
rclb
jns
push
push
push
push
call
push
loopne
add
add
testl
rol
stos
add
add
add
roll
aad
cmpsl
mov
shl
sbbl
mov
add
lret
add
mov
pop
int3
add
jmp
int
mov
add
lods
stc
add
les
xchg
add
icebp
add
adcl
mov
xchg
pop
call
push
push
push
push
lea
push
lea
push
call
gs
lods
add
imul
jmp
add
add
add
add
add
cmpsb
int3
jmp
jno
mov
xchg
push
pop
fildll
in
add
hlt
add
add
add
imul
lcall
add
insb
pop
je
jbe
add
mov
mov
stos
imul
fmuls
ljmp
mov
lea
pop
mov
push
push
push
push
lea
push
call
test
aad
cmpsb
movsb
push
ljmp
mov
add
out
loop
pop
rcrb
pop
loope
add
int3
leave
fwait
imul
add
jb
xchg
add
mov
add
add
pop
imul
adc
add
xchg
add
test
out
stos
popa
lcall
cwtl
add
add
add
jl
add
ja
add
les
jge
mov
mov
lea
pop
push
push
lea
push
push
push
push
call
add
add
std
bnd
add
mov
fildl
add
add
add
sti
out
add
mov
cli
mov
jmp
mov
add
gs
fadd
addl
pop
gs
mov
mov
add
add
add
in
ja
jne
add
add
add
clc
add
mov
push
add
add
movsl
mull
xchg
add
add
add
jae
push
test
mov
leave
add
gs
loope
fmull
mov
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
fsub
mov
mov
add
add
mov
bound
out
add
pop
flds
cmp
add
subb
cwtl
into
test
add
add
add
add
addl
pop
add
xchg
add
mov
add
fildl
add
mov
add
imul
adc
add
lea
push
push
lea
push
call
rolb
lret
add
add
mov
add
add
add
mov
gs
fsts
add
jo
xchg
push
add
leave
jge
add
mov
add
fdivl
jmp
aam
pop
push
add
mov
add
mov
push
fiadds
xchg
pop
add
add
lods
test
mov
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
ret
pop
xchg
add
push
cld
ret
add
add
int
add
xchg
mov
jnp
nop
add
lret
push
add
xchg
jle
pop
int3
mov
ljmp
fisubs
out
jno
mov
add
add
add
outsl
pop
pushf
fcoms
add
add
add
push
test
fstl
push
mov
outsl
add
js
add
pusha
nop
mov
add
pop
mov
push
push
push
push
push
push
push
push
push
call
add
add
add
pop
pop
popa
mov
popf
pop
insb
add
add
rolb
loope
loope
mov
hlt
clc
add
mov
add
add
add
push
aad
arpl
add
pop
add
add
add
sahf
add
scas
lea
mov
push
pop
insb
add
xchg
add
pop
out
test
mov
add
mov
lret
lret
pop
jmp
add
pop
xor
push
lea
push
lea
push
push
lea
push
lea
push
call
add
addb
pop
push
xchg
add
pop
test
add
add
mov
jle
pop
cmp
xchg
in
xchg
add
add
scas
ljmp
xchg
scas
int
add
push
add
add
lods
addr16
add
xlat
add
cwtl
add
test
xchg
add
fxam
add
add
mov
bound
pop
add
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
pop
add
loope
add
add
add
push
xchg
xlat
ficompl
push
loopne
add
shrb
loopne
rcrl
in
gs
in
iret
add
test
faddl
jmp
push
add
add
xchg
mov
add
bound
add
fldl
shll
cltd
push
add
hlt
lea
pop
push
mov
xor
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
aam
pop
out
test
mov
add
jae
add
test
add
add
add
add
add
add
loope
mov
fiadds
add
jb
xchg
add
rolb
roll
movsb
add
movsb
add
imul
add
mov
lea
pop
add
pop
push
push
push
push
push
push
push
push
push
call
addr16
add
addr16
stos
test
sarl
stos
loopne
pop
add
lcall
add
jne
add
add
pop
add
jae
add
jae
add
add
popa
jo
std
add
add
jecxz
add
add
faddl
push
add
add
out
add
add
mov
add
mov
add
mov
add
hlt
push
bnd
mov
lea
pop
mov
xor
push
push
push
push
push
lea
push
push
push
call
popa
pop
enter
not
add
push
shl
add
jb
mov
jne
add
popl
mov
add
out
fists
xchg
sti
in
cmpsl
repnz
mov
pop
ficoml
scas
cltd
ficomps
push
jl
sar
add
sbb
leave
add
ret
sahf
jbe
add
loope
add
add
lret
push
test
lea
pop
rep
push
push
lea
push
lea
push
push
push
push
call
add
jmp
add
out
add
into
add
outsl
add
add
add
imul
add
add
add
mov
add
stc
push
add
mov
mov
jno
mov
lods
add
add
in
fildl
add
in
mov
lea
pop
mov
xor
or
je
push
sub
pop
mov
push
push
push
push
push
lea
push
push
call
cli
mov
jl
add
mov
pop
add
int3
insb
mov
add
cmpsb
push
push
pop
add
loop
ficomps
add
xchg
xchg
xchg
flds
add
cld
loope
add
pusha
stc
mov
stos
popf
scas
bound
mov
mov
add
nop
add
add
add
add
add
lcall
jecxz
out
add
add
lock
xchg
add
or
cli
mov
leave
out
hlt
lea
pop
xor
push
push
push
push
push
push
push
call
add
stos
lock
lea
movsb
add
stc
add
cmpsl
leave
add
add
mov
movl
add
add
add
lods
xchg
add
cwtl
push
xchg
add
scas
fdivrp
addl
ror
loope
add
jbe
push
mov
jnp
out
mov
pop
fbld
add
mov
add
add
jne
add
push
jns
mov
lea
pop
add
push
push
call
add
add
add
pop
add
leave
mov
add
mov
call
mov
popa
nop
add
popa
stc
add
js
fwait
mov
movsb
jp
jbe
out
jle
xchg
add
jo
in
add
movb
add
aam
lds
add
mov
insb
add
popa
jne
mov
popa
xchg
loop
hlt
lea
pop
mov
xor
push
rol
inc
sub
shl
pop
add
push
push
call
add
js
pop
add
outsl
jo
cmpsl
mov
fs
aad
stos
add
add
push
add
fmul
test
add
mov
add
jae
jp
add
roll
xlat
shll
cld
fimull
pop
test
sahf
flds
not
mov
pop
stos
bound
nop
mov
xchg
push
lds
data16
leave
test
pop
imul
add
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
repnz
in
mov
xchg
mov
pop
xchg
add
rcl
add
stc
add
leave
add
add
cmc
jle
cwtl
mov
add
add
push
nop
mov
push
lea
xchg
add
scas
enter
add
add
stos
add
add
add
add
mov
rorb
pop
push
push
sub
add
shr
pop
mov
push
push
push
push
push
push
push
push
push
push
call
stos
add
in
popf
addb
rolb
add
jo
jge
mov
add
pop
add
add
mov
add
cmpsb
test
scas
je
movsl
add
aad
mov
into
mov
shll
add
mov
xlat
add
loop
add
add
mov
add
mov
add
mov
mov
cmpsl
add
pop
xor
push
push
push
push
push
lea
push
push
push
call
jo
test
add
add
popf
jbe
add
xchg
add
add
insb
add
stc
je
push
scas
mov
add
loope
add
out
xchg
add
add
push
add
add
sar
shr
xchg
cltd
fmul
aad
mov
mov
xchg
in
test
into
xchg
ja
loope
add
add
nop
mov
add
lea
pop
add
push
lea
push
push
push
push
push
lea
push
call
add
mov
push
cli
popa
test
add
add
add
pop
add
add
add
add
jne
shlb
bound
mov
mov
add
fadds
add
out
add
in
mov
in
mov
add
add
pop
nop
add
mov
lea
fisubs
lcall
mov
add
add
add
xchg
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
call
jbe
add
sahf
stos
movb
icebp
stos
add
xchg
js
shr
mov
stos
add
add
xchg
mov
out
jge
add
mov
add
cli
lds
add
clc
add
testl
add
add
push
add
fbstp
xchg
mov
push
add
add
pushf
scas
add
add
add
frstor
add
mov
lea
pop
pop
rep
push
pop
mov
push
push
push
push
call
add
mov
jae
jle
jecxz
test
test
mov
mov
cli
add
rolb
leave
pop
add
lea
add
pop
iret
jne
add
add
call
popf
pop
nop
add
out
sbbb
add
add
in
pop
popf
stos
push
add
stos
orb
add
add
rol
xchg
xchg
pop
pop
ficoml
add
mov
lea
pop
xor
push
push
call
mov
push
lock
mov
jmp
jne
mov
add
add
add
shr
add
aam
add
mov
xchg
add
add
add
pop
loope
mov
je
fldl
push
mov
cmc
add
add
add
icebp
add
stos
movsb
mov
lea
pop
add
or
je
push
sub
lea
pop
mov
push
shr
pop
add
push
pop
add
push
push
push
lea
push
push
push
push
push
call
jmp
je
add
icebp
sarb
jnp
ja
xchg
out
add
arpl
mov
pop
jmp
mov
add
add
add
add
mov
pushf
add
mov
add
add
add
mov
leave
hlt
lods
movb
xchg
add
add
push
add
add
pop
rep
pop
push
push
shl
inc
shr
push
or
inc
add
dec
sub
shl
xor
not
shr
pop
sub
lea
add
pop
push
add
pop
pop
mov
mov
push
push
lea
push
push
push
push
push
push
push
call
fadds
pop
lods
add
mov
fcmovnu
add
mov
rolb
jae
jmp
testb
ja
mov
nop
jp
in
int3
add
mov
add
mov
add
add
pop
add
testb
test
add
lahf
loope
add
add
jl
add
lods
add
pop
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
mov
int3
in
add
je
mov
add
add
pop
add
add
fwait
cltd
lret
add
test
mov
cli
test
add
add
jl
add
sarl
push
filds
add
add
xor
nop
add
add
add
in
add
imul
add
add
add
pop
jmp
push
push
dec
shl
pop
mov
push
sub
pop
add
push
push
push
lea
push
call
push
push
jb
add
imul
js
lret
mov
rolb
jo
lret
jnp
stos
jecxz
jns
add
shl
add
enter
imul
add
push
imul
add
lcall
add
leave
mov
jns
xchg
scas
mov
rcl
mov
test
loopne
nop
add
add
add
roll
faddp
mov
arpl
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
imul
cld
add
rol
mov
lret
add
xchg
jno
pusha
add
push
ret
call
add
mov
mov
add
in
mov
add
add
roll
icebp
mov
jmp
adcl
add
add
add
faddl
add
mov
add
gs
movsb
xchg
mov
xchg
add
fstpl
mov
mov
lea
pop
push
push
push
push
lea
push
push
push
call
mov
add
xchg
pusha
andl
add
stos
mov
add
add
js
add
ja
add
ja
ljmp
int3
jle
incb
rcrl
push
fs
test
out
pop
cmc
jl
stc
hlt
add
movsb
add
int3
xchg
add
lock
add
push
push
add
add
xchg
pop
test
lcall
loope
mov
lea
pop
push
push
mov
push
push
push
lea
push
push
push
push
push
call
add
lret
push
xchg
out
hlt
test
subb
push
pop
addr16
cmpsb
test
mov
in
xchg
fs
add
xchg
clc
add
jmp
mov
add
addb
xchg
add
test
test
add
mov
sahf
push
mov
xlat
add
add
xchg
add
add
pop
push
mov
and
push
not
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
lock
hlt
add
jge
stc
add
shlb
jecxz
test
add
jge
add
test
movsb
add
mov
xchg
add
in
pop
add
out
shlb
xchg
add
push
add
shr
test
add
int
mov
aad
xchg
add
out
pop
add
add
pop
pop
leave
push
push
push
push
push
lea
push
call
roll
shll
add
add
jbe
rolb
in
add
add
test
in
xchg
lret
jmp
add
add
sarb
jo
sti
jnp
add
add
xchg
add
flds
add
add
faddl
mov
mov
imul
add
add
loope
xchg
fucomip
add
add
push
mov
add
in
int3
lea
pop
ret
push
not
pop
push
push
sub
shr
pop
mov
push
inc
pop
add
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
add
in
loop
lret
cwtl
mov
lds
add
ljmp
add
test
rcll
lock
add
add
add
add
add
gs
push
xchg
stos
scas
sahf
add
add
add
add
fildl
add
add
add
add
add
fldl
add
add
je
jge
icebp
xchg
fldenv
nop
cmc
mov
pop
push
push
lea
push
push
push
call
add
pop
add
xlat
lods
add
add
mov
popa
push
add
push
cli
add
mov
pop
add
add
into
add
add
jmp
rcr
addr16
mov
add
add
lret
add
mov
jmp
ja
fldl
xchg
add
add
and
add
fdiv
add
add
lret
pop
jge
cli
jmp
pop
add
fwait
jl
add
mov
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
idivb
in
aam
cltd
cmc
mov
outsl
add
int3
add
mov
js
add
pop
sti
pop
lods
pop
add
add
in
mov
imul
jno
test
addl
mov
cmc
add
add
add
sahf
jecxz
ljmp
lods
add
pop
add
rorl
cmpsl
cli
add
aam
bound
pop
movl
push
dec
dec
pop
addl
push
push
lea
push
push
push
call
test
jnp
add
rcr
mov
add
mov
pop
add
jb
jns
add
add
pop
add
add
push
xorl
cmpsl
int3
add
jbe
push
add
add
mov
insb
icebp
lock
into
add
int
add
pop
lret
lahf
mov
movl
jle
int
add
jo
mov
add
add
lea
pop
test
je
mov
pop
push
inc
add
dec
pop
pop
push
sub
xor
pop
pop
pop
push
shr
add
pop
leave
ret
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
rol
pop
lret
add
lret
push
bound
add
xchg
mov
mov
fisubrl
add
add
test
scas
add
movl
add
call
scas
pop
xlat
fldl
add
add
arpl
add
add
leave
add
bound
xchg
icebp
add
rol
nop
iret
mov
fisubrl
sub
in
add
push
lea
push
call
sahf
addb
shll
add
add
add
aad
pushf
add
add
add
add
add
add
xchg
clc
add
fiaddl
clc
test
push
jge
add
add
add
add
push
mov
je
add
clc
add
rolb
add
push
add
add
lret
ljmp
xchg
add
fcoms
add
add
hlt
lea
pop
push
push
sub
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
mov
fistpll
jbe
addb
mov
add
push
add
xchg
add
movsl
fwait
cmc
faddl
incb
add
popf
add
lods
fidivrl
addr16
add
add
add
add
add
popa
jb
add
add
jl
cli
mov
xchg
mov
add
add
int3
sar
lods
not
add
add
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
push
add
lock
xchg
add
lcall
mov
loopne
out
add
add
in
lahf
lods
push
add
add
repnz
add
pop
jp
stos
out
mov
add
add
mov
add
xchg
jmp
fwait
lret
add
mov
add
mov
fildl
sahf
inc
add
jp
mov
pusha
and
testl
addl
push
lea
push
lea
push
push
lea
push
call
mov
add
mov
add
lea
add
pop
jmp
movsl
lods
add
add
push
add
push
add
add
xchg
les
add
add
add
add
pop
push
shll
bound
add
int
add
fildl
rolb
add
add
aam
cltd
out
add
add
add
pop
push
call
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
jns
test
fnstcw
cld
add
in
pop
mov
add
sarl
stos
xchg
popf
mov
add
add
test
pop
add
out
jp
add
clc
in
add
ljmp
add
push
movsb
mov
add
xchg
jmp
xchg
add
add
fmull
jne
push
push
push
push
call
clc
add
scas
subl
rol
mov
add
add
out
pop
mov
inc
scas
ljmp
ljmp
add
add
add
mov
into
mov
mov
push
pop
add
aam
add
out
add
mov
add
call
movl
mov
lea
pop
call
push
lea
not
sub
shl
pop
cmpl
jne
pop
push
push
push
push
push
push
push
lea
push
call
xchg
aad
add
mov
loope
add
into
add
mov
add
jo
mov
add
cmc
add
lret
add
add
add
lock
add
jge
shll
add
mov
add
stos
imul
jl
add
add
add
test
mov
add
pop
xchg
fs
mov
mov
lea
pop
pop
pop
push
pop
pop
push
lea
push
push
lea
push
push
lea
push
call
lods
enter
popa
add
add
sahf
jo
jmp
xchg
add
add
add
shr
sahf
mov
int
je
ljmp
call
mov
add
loop
jno
jecxz
add
mov
add
jmp
add
cwtl
sarl
jge
js
add
jecxz
add
cmpsb
fisubl
jns
in
mov
sbb
push
push
push
push
push
lea
push
call
mov
fnstsw
mov
jno
stos
lahf
mov
add
xchg
sti
mov
mov
add
mov
jno
add
sar
movsl
jl
mov
pop
iret
add
arpl
add
add
add
rcrl
add
mov
add
add
mov
jno
pop
fwait
stc
push
cli
add
add
add
mov
lea
pop
ret
push
pop
push
push
push
push
call
mov
add
add
lock
clc
add
mov
mov
add
mov
fsubr
xchg
mov
add
jne
lcall
mov
movsb
call
mov
jp
add
movsl
jns
test
add
imul
add
xchg
mov
pusha
or
mov
add
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
mov
stos
add
add
iret
ljmp
addb
lock
add
test
add
push
add
stos
mov
int
add
add
pop
add
add
lahf
stc
pop
jp
xchg
addr16
add
add
add
rorb
pop
orb
mov
add
add
pop
mov
lea
pop
push
push
push
push
push
push
push
call
test
pop
jmp
add
add
cld
pushf
mov
aad
add
add
aam
add
jns
jae
ja
xchg
xchg
add
pop
in
jle
push
iret
pusha
add
enter
add
add
aam
call
mov
cmpb
stos
scas
push
lcall
cld
lea
pop
push
push
add
shl
dec
pop
push
movl
push
add
inc
dec
pop
push
call
push
push
add
pop
call
subl
push
lea
push
lea
push
lea
push
push
push
call
mov
add
out
mov
add
sti
roll
icebp
add
push
add
add
jae
faddl
pop
mov
lcall
jne
je
jae
mov
out
mov
stc
leave
fimull
fiadds
add
add
mov
int
add
add
add
loopne
add
mov
add
add
sar
mov
fwait
add
add
test
mov
add
add
mov
jns
mov
lea
pop
cmpl
jne
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
popf
add
jle
add
data16
cwtl
add
mov
lods
xchg
bound
add
mov
std
add
push
add
xchg
movsb
add
mov
add
fwait
mov
insb
movsl
add
add
rolb
push
add
in
xchg
subl
repnz
add
add
push
movl
push
mov
mov
lea
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
push
add
loope
imul
add
xchg
addb
imul
jmp
filds
pop
push
jb
add
push
ja
pop
call
push
roll
stos
in
add
fiaddl
mov
loop
add
popl
pop
push
push
mov
movsb
lods
test
add
mov
lea
pop
pop
pop
pop
push
shl
pop
leave
ret
push
push
push
push
call
mov
add
fcomi
add
mov
loopne
je
mov
lahf
jnp
add
jmp
add
xchg
aam
imul
add
in
jle
mov
mov
outsl
add
movb
add
rorb
add
int3
mov
data16
jge
add
add
mov
scas
add
add
fiaddl
cmc
arpl
cli
lret
lea
pop
mov
push
push
push
push
push
push
push
call
bound
sti
add
add
lock
add
add
out
mov
mov
lahf
xchg
add
pop
pop
lea
add
push
add
scas
add
jge
adc
cmpsb
xlat
ljmp
xchg
mov
add
out
loope
xchg
jl
lcall
add
add
mov
lea
pop
add
push
push
not
pop
push
push
push
push
push
lea
push
push
call
add
hlt
mov
add
xchg
mov
je
mov
mov
icebp
movb
mov
add
ret
mov
hlt
add
add
add
mov
jmp
jl
add
pushf
add
push
iret
pushf
add
add
test
fstps
testl
mov
lods
mov
pop
add
adc
push
mov
lea
push
push
push
push
push
push
call
movsb
faddl
mov
add
lea
add
mov
cltd
mov
add
mov
mov
fwait
clc
test
add
jns
push
add
fmul
xchg
mov
call
add
add
add
test
push
mov
in
jo
xchg
loope
sahf
mov
test
add
popa
sbb
call
push
push
call
add
add
push
ret
cmpsb
xchg
push
add
lcall
scas
jnp
add
add
mov
add
add
jo
test
icebp
stos
add
cwtl
filds
add
loope
add
je
add
xchg
mov
push
mov
add
add
ret
add
add
add
popa
adc
mov
push
lea
push
lea
push
push
push
call
movsl
enter
add
add
mov
in
cmc
aam
in
movsb
fs
outsl
cltd
test
add
sar
xchg
add
add
cmpsb
add
jl
xchg
add
add
mov
add
addr16
add
lahf
add
add
add
addl
add
add
mov
jecxz
clc
shll
int3
add
mov
lea
pop
shr
add
mov
push
ror
ror
pop
mov
push
push
push
push
push
push
push
call
mov
add
cld
add
add
add
add
add
add
push
add
bound
ret
cmc
addb
add
add
cld
add
add
add
add
add
jo
fwait
pop
mov
mov
add
int3
addl
add
fcmovnu
pop
add
fistps
mov
add
add
add
pushf
add
popa
sbb
add
add
mov
push
sub
pop
mov
push
add
sub
pop
cmp
jne
push
push
lea
push
push
push
push
call
lea
add
add
jp
add
push
notl
lahf
fadd
add
stos
ficoms
test
imul
add
addb
mov
mov
test
add
add
push
lahf
subl
add
mov
mov
jo
cld
push
out
add
fucomp
addl
push
jecxz
addr16
mov
lea
pop
cmp
jne
push
push
lea
push
call
hlt
jp
jne
jbe
stos
data16
mov
hlt
lock
add
add
jle
out
mov
xlat
add
xchg
add
add
jge
add
add
add
add
fcomip
mov
jge
pop
add
insb
add
insb
hlt
mov
add
add
push
jae
arpl
add
add
add
cltd
push
add
lret
popf
out
stc
roll
cltd
jns
mov
lea
pop
mov
movl
push
ror
rol
rol
pop
jmp
push
sub
pop
mov
mov
sub
jne
push
lea
push
push
lea
push
call
add
mov
mov
add
push
mov
add
fiadds
stos
add
addl
mov
mov
add
fdivl
xchg
lods
out
add
xchg
cli
fisubs
jnp
add
mov
lds
mov
add
lcall
add
add
jnp
add
mov
mov
lea
pop
mov
movl
jmp
push
shr
ror
shl
pop
mov
push
xor
rol
pop
mov
push
xor
shr
add
pop
cmp
jne
mov
push
not
pop
movl
jmp
push
push
push
lea
push
call
lock
or
xchg
add
add
shlb
add
rcrb
outsl
repnz
pop
add
add
lret
add
add
add
add
in
add
xchg
add
add
push
add
add
cld
mov
iret
mov
pusha
mov
int3
add
pop
shll
add
sti
jmp
lret
test
test
lods
mov
add
mov
lea
pop
mov
cmpw
jne
push
add
pop
mov
movl
jmp
push
sub
not
add
pop
pushl
push
rol
rol
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
out
ljmp
add
jnp
jb
xlat
aad
add
add
add
add
shrb
push
add
roll
cwtl
add
add
scas
add
add
add
add
mov
roll
push
add
add
add
cltd
jae
mov
add
add
push
popf
std
stos
add
bnd
addl
mov
lea
pop
mov
push
push
push
push
push
push
call
aad
mov
mov
add
rolb
add
lods
out
add
out
jb
mov
add
mov
rcl
add
mov
add
sti
add
loope
add
outsl
add
push
cwtl
lret
add
add
addb
test
cli
add
js
add
xchg
add
movsb
je
bound
lea
pop
mov
mov
push
push
sub
push
or
inc
add
not
sub
pop
dec
add
rol
pop
push
push
push
lea
push
call
add
add
in
roll
add
add
add
xchg
out
lds
add
xchg
add
jb
add
add
add
subl
add
imul
mov
add
clc
cli
in
fimull
addr16
loop
lock
push
add
call
mov
lea
pop
push
call
push
push
push
push
lea
push
push
call
sti
stc
add
aad
push
imul
xchg
fisttpl
add
jecxz
add
add
mov
popf
add
add
pop
jmp
out
add
int3
add
add
cld
mov
mov
stc
add
icebp
jl
ja
xchg
popa
add
pop
outsl
cld
addl
add
mov
cmc
lcall
add
mov
lea
pop
cmpl
je
push
push
dec
push
push
pop
add
add
sub
inc
sub
pop
shr
pop
push
sub
pop
push
call
cmpl
je
push
push
xor
push
sub
add
sub
xor
sub
pop
xor
xor
pop
push
push
push
push
lea
push
lea
push
call
xchg
rcr
roll
add
add
mov
test
std
xchg
add
std
xchg
add
icebp
add
cltd
popf
cwtl
out
add
sahf
mov
cli
push
loopne
add
add
loop
stos
push
cmpsl
mov
call
lock
add
mov
jb
add
call
neg
add
push
pop
mov
add
add
add
insb
mov
int
mov
pop
push
push
ror
not
dec
pop
call
push
push
lea
push
push
lea
push
push
lea
push
call
jle
add
mov
fidivl
add
mov
fiadds
test
add
push
add
jge
out
add
push
in
add
aad
movsb
add
add
mov
lret
lea
cwtl
pop
xchg
add
add
xchg
test
add
addb
movsb
add
icebp
add
cmpsb
in
mov
pop
repnz
add
add
add
xchg
add
add
sbb
cmpl
je
push
push
ror
xor
ror
push
xor
add
inc
add
rol
sub
add
rol
lea
lea
pop
sub
ror
pop
push
lea
xor
ror
rol
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
rolb
add
lret
add
aad
cld
add
pop
add
cltd
rclb
mov
sahf
add
loopne
iret
add
add
add
pop
bound
xchg
push
lcall
xchg
popf
add
in
lahf
add
cmpsl
test
mov
add
add
cwtl
mov
add
into
mov
mov
lea
pop
call
push
pop
cmpl
je
push
push
inc
inc
shr
push
push
pop
add
ror
sub
sub
sub
pop
add
sub
rol
ror
pop
push
push
push
lea
push
push
lea
push
push
call
in
sahf
js
enter
xchg
lcall
call
jecxz
add
enter
add
cld
xchg
pop
pop
jbe
push
add
movl
out
add
add
nop
add
les
jp
mov
add
add
add
add
add
sbb
push
push
xor
not
pop
call
push
lea
push
push
lea
push
push
call
rcll
lods
xchg
add
clc
popf
pop
mov
mov
xlat
add
pop
push
mov
cli
add
add
mov
add
imul
add
xchg
jge
add
add
jno
add
add
addr16
out
jmp
stos
mov
push
imul
mov
add
enter
add
jae
ja
xchg
add
jecxz
add
lea
pop
cmpl
je
push
push
sub
lea
dec
push
push
pop
add
add
shr
sub
shl
lea
pop
inc
add
pop
push
add
add
ror
pop
push
call
cmpl
je
push
push
not
lea
xor
push
or
inc
add
sub
sub
xor
sub
sub
add
not
pop
shr
ror
pop
push
lea
push
push
call
add
add
mov
mov
mov
js
add
xchg
add
pushf
add
xchg
jns
add
add
mov
add
test
fldl
lahf
xchg
je
into
cltd
xchg
addl
addl
arpl
add
add
add
jle
test
add
add
pusha
mull
in
testb
push
call
push
lea
push
push
call
add
xlat
clc
push
loope
mov
aam
add
fcmovnbe
push
xchg
add
add
sahf
notb
add
test
add
mov
mov
mov
add
add
add
ja
mov
add
loope
add
cmpsb
out
jnp
pusha
mov
add
push
jno
insb
push
faddl
stos
add
mov
pop
cmpl
je
push
push
rol
ror
shr
push
sub
add
shr
sub
add
rol
pop
xor
sub
add
pop
push
add
add
pop
push
call
cmpl
je
push
push
lea
push
or
not
add
dec
rol
rol
ror
sub
sub
pop
rol
ror
pop
push
push
push
lea
push
push
push
push
push
push
call
xchg
je
add
stos
jnp
mov
mov
pop
in
add
add
stos
add
add
mov
add
into
in
pop
add
fldl
jecxz
add
outsl
add
aam
add
add
jecxz
pop
add
push
jo
push
data16
out
xlat
shlb
popa
gs
add
jnp
add
lret
loopne
jo
int3
lea
pop
push
push
add
ror
pop
call
cmpl
je
push
push
shr
not
shl
shr
push
sub
add
shr
sub
shr
lea
dec
xor
pop
add
inc
shl
dec
pop
push
not
add
pop
push
call
cmpl
je
push
push
add
dec
push
and
add
dec
add
sub
add
pop
sub
inc
rol
sub
pop
push
sub
shr
sub
pop
push
call
cmpl
je
push
push
xor
add
sub
push
and
add
add
dec
shr
sub
sub
rol
pop
sub
sub
pop
push
dec
shl
ror
dec
pop
push
call
cmpl
je
push
push
not
sub
push
and
add
sub
sub
shl
sub
dec
pop
shl
pop
push
dec
pop
push
call
push
dec
add
pop
cmpl
jne
push
sub
shr
dec
xor
pop
mov
push
lea
push
push
push
push
push
call
arpl
add
jl
icebp
mov
incb
mov
add
add
mov
add
add
pop
roll
add
mov
add
aad
add
add
repnz
arpl
add
into
call
add
add
neg
mov
push
outsl
add
stc
add
add
mov
lea
pop
movl
jmp
push
push
push
lea
push
call
addr16
add
repnz
add
add
add
add
jl
add
jge
jbe
mov
add
add
push
addb
mov
add
add
aad
push
imul
add
jnp
in
jbe
add
loop
xchg
add
push
mov
xchg
movsb
add
add
mov
std
cmc
add
movsb
mov
add
add
push
push
add
lret
lea
pop
xor
push
pop
pop
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
xchg
add
add
loope
outsl
jns
pop
movsb
pop
and
loope
js
add
iret
movsb
add
pop
out
repnz
js
fxch
xchg
add
xchg
add
push
jno
fucomp
add
stc
mov
xchg
lea
into
mov
xlat
xchg
nop
insb
add
leave
roll
add
repnz
add
jae
arpl
add
add
add
enter
mov
pop
pop
leave
ret
push
push
push
push
push
push
push
push
call
mov
mov
pop
add
je
pusha
add
test
add
cltd
add
add
add
outsl
stc
mov
add
mov
push
mov
xchg
and
lret
add
lahf
add
add
pop
mov
lret
fiaddl
mov
mov
add
movsb
mov
mov
lea
pop
push
mov
push
dec
add
pop
add
cmpl
jne
push
push
push
push
pop
add
not
sub
shr
lea
xor
add
pop
shr
pop
push
push
push
lea
push
call
add
mov
loope
les
add
movb
in
pushf
add
cwtl
fwait
rolb
leave
stos
fwait
mov
push
add
push
jmp
fidivrl
add
pop
scas
cmpsl
add
mov
add
mov
testl
jecxz
add
mov
pop
xchg
mull
add
push
out
movsb
mov
mov
mov
mov
lea
pop
pushl
push
lea
push
push
push
push
push
push
call
add
cli
mov
jge
add
add
add
rol
test
push
movsl
mov
data16
sahf
add
rorb
negb
push
test
pop
add
add
roll
add
add
add
jns
pop
test
xchg
rclb
fiaddl
hlt
jge
addb
hlt
lea
pop
call
push
push
push
lea
push
push
lea
push
push
call
pop
jge
loope
add
add
addr16
add
mov
jmp
mov
les
add
xchg
jmp
push
lret
lock
pop
mov
add
popf
push
jle
xchg
jno
movsl
je
add
add
fadds
mov
xchg
rolb
cmpsb
add
add
imul
mov
hlt
lcall
cld
add
add
jecxz
imul
loopne
addl
int3
lea
pop
push
push
lea
push
push
push
push
call
test
out
add
add
add
add
mov
lret
add
push
mov
mov
push
add
add
add
in
fnstenv
jmp
fiaddl
add
add
pop
add
cltd
hlt
iret
mov
ret
add
test
mov
add
mov
add
lds
data16
shr
mov
out
mov
lea
pop
call
jmp
push
rol
add
inc
pop
cmpl
je
push
push
call
add
add
movsl
cmpsb
loopne
add
insb
cli
sahf
add
out
xchg
add
jp
jb
add
pop
fninit
jbe
jne
add
js
movsl
fwait
gs
iret
add
bound
xchg
add
jne
add
shll
mov
add
add
mov
cmpsb
jge
pushf
loope
add
add
mov
jne
jge
lahf
add
mov
add
jbe
mov
or
jge
add
add
leave
push
inc
add
pop
add
pop
pop
push
add
inc
pop
pop
push
sub
add
dec
sub
pop
pop
push
add
sub
pop
leave
push
lea
push
push
push
push
push
push
call
std
repnz
xorb
icebp
jae
add
fiaddl
pop
lods
add
jmp
shll
add
add
int
pop
xchg
push
add
xchg
add
fnstenv
outsl
jnp
in
add
push
push
add
add
leave
aam
lahf
pop
pop
lods
mov
jne
bound
sbb
idivb
mov
fmull
les
rol
pop
ret
push
push
push
lea
push
push
call
jge
mov
add
push
push
jge
add
add
mov
add
add
add
push
out
mov
cltd
out
cltd
loopne
add
add
add
jmp
add
push
mov
mov
add
loope
push
add
repnz
jnp
rorl
jp
add
mov
lea
pop
jmp
cmpl
jne
push
push
add
add
dec
push
or
inc
add
lea
sub
xor
sub
xor
inc
pop
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
call
loope
cwtl
test
lret
notl
push
clc
push
rcl
ljmp
add
add
add
xchg
add
int
add
nop
jecxz
add
cmpsl
jl
jbe
push
imul
add
stc
add
out
rcll
xchg
push
add
mov
stc
add
mov
add
add
call
xchg
sub
jne
push
pop
call
push
lea
push
push
push
push
call
ja
add
add
add
add
add
cld
add
cltd
fwait
add
add
rcll
add
add
mov
out
out
cmp
fucomip
cld
mov
add
add
icebp
add
test
in
add
enter
add
lea
mov
ret
bound
add
add
roll
add
iret
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
lea
add
mov
aad
loopne
mov
bound
mov
add
add
add
fdivrs
jl
add
add
data16
mov
add
stc
cmpsb
lods
mov
in
add
repnz
scas
add
jb
add
jle
int
push
mov
push
add
lea
add
add
lods
rol
leave
add
pop
call
jmp
cmpl
jne
push
pop
mov
mov
call
push
ror
shr
pop
push
pop
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
pop
jno
lahf
add
add
mov
loopne
fistps
add
mov
adcl
xchg
lea
clc
in
jbe
adc
add
add
push
js
add
mov
add
ljmp
jnp
out
add
mov
add
mov
sub
jne
call
jmp
push
lea
push
push
push
push
call
mov
jbe
mov
jp
lret
int
ljmp
addr16
pop
add
push
jo
add
scas
fchs
imul
jo
add
test
imul
add
mov
mov
add
add
int3
add
add
add
mov
xchg
add
add
add
add
ljmp
xlat
mov
jge
addr16
lea
pop
call
push
push
shl
push
xor
add
dec
sub
shl
pop
ror
shr
pop
push
shl
dec
lea
pop
pushl
push
inc
pop
call
push
push
push
call
jb
out
mov
add
popa
adcl
push
pop
add
add
std
out
movsb
int3
cld
data16
xchg
add
mov
stos
repnz
add
testl
add
xchg
mov
scas
idivb
clc
mov
mov
add
jo
repnz
outsl
add
sti
flds
add
in
add
scas
add
mov
lea
pop
push
call
push
push
push
push
push
push
call
lods
into
xchg
add
fdivrs
add
movsb
aad
mov
jmp
add
add
scas
add
mov
add
add
mov
addr16
cld
cli
add
into
xchg
add
mov
add
flds
push
mov
mov
mov
sbb
add
add
push
push
push
call
add
mov
add
scas
add
call
pop
lcall
add
aad
add
icebp
add
rolb
add
roll
arpl
add
add
add
push
add
mov
jecxz
mov
add
mov
faddl
jecxz
testl
shll
fs
mov
lea
pop
lea
push
push
sub
push
or
inc
add
sub
add
pop
ror
pop
push
add
shr
pop
pushl
call
push
push
dec
pop
call
push
push
shr
add
push
push
pop
add
add
xor
sub
not
pop
ror
rol
shl
add
pop
pushl
push
shr
dec
xor
pop
call
call
push
push
push
push
push
lea
push
push
push
push
call
xchg
add
mov
fsubr
add
lock
add
xchg
popl
mov
js
imul
leave
mov
add
add
add
stc
add
add
jae
cltd
out
aad
xlat
imul
add
add
cwtl
lock
mov
add
mov
aad
lret
mov
lods
lds
pop
mov
lea
push
push
lea
push
push
pop
add
rol
rol
sub
pop
add
add
pop
push
push
lea
push
call
andb
int3
in
xlat
cmpsb
add
fiaddl
pop
add
push
addb
sahf
push
pop
lret
xchg
in
popa
add
xchg
pusha
popf
pushf
addb
lret
popf
add
add
add
fadds
add
jmp
data16
jecxz
cli
scas
outsl
add
jge
add
mov
sti
add
shr
xchg
mov
mov
lea
pop
pushl
push
lea
push
call
add
or
add
xchg
iret
add
pop
add
add
nop
pop
add
lahf
add
je
add
add
movb
xchg
add
out
xchg
lock
add
loopne
test
in
call
fiaddl
gs
mov
or
add
mov
je
add
pop
call
push
push
push
push
push
push
push
push
push
call
add
imul
pop
testb
fs
add
mov
add
in
add
out
add
jno
jge
add
scas
add
insb
lods
add
hlt
add
sti
addb
cld
movsb
fwait
xchg
mov
in
roll
filds
add
add
in
fmull
add
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
addl
add
mov
call
loop
test
jnp
add
add
sahf
lds
xchg
push
pop
pop
mov
mov
add
xlat
data16
jo
movsb
add
add
data16
lcall
test
data16
loope
sar
add
add
mov
add
add
pop
push
push
push
push
push
lea
push
call
push
add
in
mov
add
add
jne
movb
add
test
lods
add
movsb
add
mov
mov
fadds
rcrl
jmp
mov
int
add
add
pop
push
mov
popf
mov
jl
add
mov
push
in
add
aam
push
add
jmp
add
pop
push
pushl
push
push
sub
shr
xor
add
push
and
add
add
inc
sub
add
pop
add
pop
push
lea
push
call
imul
fs
mov
add
lret
test
scas
popa
push
aad
cli
jns
xchg
js
add
pop
popf
mov
add
cld
add
add
faddl
jmp
lret
mov
pushf
xchg
lods
xchg
add
mov
imul
mov
add
lret
add
fildl
add
add
xchg
add
mov
add
mov
add
les
push
push
push
push
push
push
push
lea
push
call
add
ret
out
mov
hlt
fdivs
imul
pop
fwait
mov
add
mov
pop
add
add
jns
movsl
mov
mov
add
out
mov
leave
lahf
add
jo
lret
add
add
in
add
add
xchg
jp
mov
add
scas
out
mov
data16
shrb
aas
es
not
push
or
not
add
shr
sub
sub
shr
xor
pop
xor
pop
pushl
push
add
pop
call
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
std
mov
add
add
pop
add
filds
pop
fildl
fists
testl
add
add
mov
jmp
xchg
add
mov
add
add
add
add
add
add
add
popa
add
add
add
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
bound
jmp
add
jl
add
add
roll
mov
out
add
add
leave
ljmp
add
xchg
xlat
pop
jno
jae
jae
enter
out
popa
add
add
jb
les
mov
out
add
mov
lea
pop
call
push
push
ror
sub
rol
shr
push
xor
add
ror
shl
sub
ror
sub
rol
ror
pop
inc
sub
add
pop
push
lea
xor
pop
pushl
push
shl
add
pop
call
call
push
shl
shl
pop
jmp
pushl
mov
push
push
push
push
call
add
add
add
leave
add
mov
push
pop
jmp
fstp
movsl
les
add
movsl
fcoml
ret
nop
mov
push
pushf
int
lea
repnz
add
add
arpl
add
add
push
popf
add
ret
add
pop
scas
add
fidivl
add
add
add
insb
ret
mov
sahf
add
lahf
mov
add
add
cltd
add
pop
jmp
push
push
shl
not
inc
push
and
add
shr
dec
rol
sub
sub
lea
add
sub
pop
add
dec
shl
pop
pushl
push
push
lea
push
push
call
mov
fwait
add
loop
add
in
test
add
mov
mov
mov
loop
add
add
into
repnz
jno
loope
add
stc
pop
add
movsl
add
hlt
add
arpl
push
add
add
add
push
pop
mov
push
popa
add
mov
lea
pop
call
push
shl
pop
push
call
push
push
push
xor
add
lea
ror
sub
sub
ror
pop
not
pop
push
sub
add
pop
pushl
push
rol
sub
rol
pop
call
push
ror
add
not
shr
pop
push
call
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
pop
into
adc
aam
mov
add
mov
add
cwtl
add
mov
add
add
mov
add
add
add
add
scas
add
pop
pop
add
imul
cld
add
leave
mov
call
scas
mov
add
add
add
fs
add
add
cmpsl
add
bnd
push
arpl
jmp
arpl
pop
leave
add
push
shl
lea
dec
not
pop
pop
pop
push
push
push
push
push
call
add
test
loope
add
ja
loope
add
fildl
add
out
mov
arpl
add
add
mov
movsl
test
imul
jbe
rolb
add
push
imul
roll
imul
fldenv
mov
pop
pop
pop
leave
push
not
pop
add
ret
push
add
sub
pop
leave
push
push
lea
push
push
call
lock
add
add
add
mov
add
int
jns
push
pop
add
addr16
add
add
add
mov
add
add
add
push
mov
add
mov
clc
jge
add
add
popl
leave
imul
add
mov
adc
or
push
push
not
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
lahf
add
jo
cmc
push
add
add
mull
add
lock
add
popf
add
add
lods
popf
mov
add
cmpsl
xchg
add
push
jle
add
add
jae
jae
xchg
add
loope
add
push
fs
add
mov
add
bnd
add
add
gs
xchg
jb
int3
stc
clc
add
loop
fmull
jge
add
test
inc
and
jmp
push
lea
push
lea
push
push
push
call
insb
lret
add
add
outsl
in
add
out
push
fs
jns
add
in
je
movb
subl
in
fildl
shl
stos
add
add
xchg
add
out
insb
stos
add
lods
stc
push
add
addr16
jecxz
add
push
add
mov
xchg
add
jmp
pop
cmpsl
mov
push
mov
lea
pop
mov
and
xor
push
push
push
call
loop
add
arpl
ljmp
add
std
push
add
mov
fucomp
add
xchg
mov
mov
add
test
add
add
fdivr
nop
pop
pop
stc
xchg
incb
jb
add
arpl
fldl
ficompl
movsb
int
add
stos
xlat
sti
cwtl
xlat
add
mov
add
xchg
pusha
add
add
add
movsl
addl
addr16
xor
add
xor
push
pop
dec
sub
push
push
lea
push
call
lods
cld
add
hlt
test
int
add
jmp
cld
cmc
jae
into
icebp
movsb
testb
outsl
imul
add
add
arpl
int3
in
stos
mov
add
test
call
mov
aam
arpl
xchg
push
imull
add
add
add
cmc
sar
leave
mov
sti
xchg
mov
out
mov
lea
pop
jmp
sub
push
dec
pop
pushl
pop
push
xor
shl
rol
pop
sub
cmp
jne
push
rol
dec
pop
mov
push
inc
pop
lea
push
inc
rol
add
pop
sub
push
add
pop
mov
push
push
push
push
lea
push
push
push
call
mov
lret
rorb
jmp
rcrb
ja
int3
add
add
add
add
movb
add
fucomip
out
add
mov
lret
add
mov
test
add
add
add
pop
popa
add
mov
test
imul
lock
add
add
xchg
lret
push
js
mov
pop
testb
shr
add
push
add
pop
sub
push
push
push
call
mov
pop
push
xchg
out
into
add
nop
xchg
test
fnsave
cmpsl
add
add
mov
pop
add
fstpl
mov
jge
add
xchg
mov
add
add
scas
leave
repnz
mov
in
addb
add
jae
add
test
jae
aam
add
add
arpl
add
cld
mov
add
imul
ja
push
add
mov
lea
pop
pushl
push
push
push
lea
push
push
push
push
push
call
pop
push
xchg
add
add
xchg
add
add
push
jp
lret
fsubp
add
stos
add
mov
add
add
add
add
add
enter
pusha
addl
push
mov
cmpsl
add
xchg
push
cmpsb
push
add
js
lahf
add
pop
stos
out
mov
aam
add
add
pusha
mov
push
imulb
add
cld
lea
pop
pop
shr
and
push
lea
shl
pop
sub
cmp
jne
push
lea
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
outsl
add
mov
add
jl
add
pop
popa
add
shll
enter
in
add
std
pushf
jb
jmp
test
cld
mov
popf
mov
push
jns
add
push
xlat
add
data16
js
lahf
cmpsl
lcall
sahf
add
in
mov
rcr
ljmp
add
add
add
xchg
rolb
add
fadds
mov
lea
pop
leave
push
push
push
call
mov
fwait
lcall
adc
add
add
xchg
cli
mov
sti
mov
push
add
je
movsb
add
add
add
fs
mov
add
add
lea
add
add
xchg
call
arpl
iret
into
mov
jmp
loope
sti
add
jle
mov
xchg
xchg
mov
add
add
add
pop
ret
push
push
lea
push
push
push
push
push
call
test
out
mov
ret
lret
lods
add
filds
add
add
mov
add
pop
add
lods
int3
insb
add
add
roll
mov
imul
mov
aam
fldt
xchg
xchg
add
sub
add
add
lock
mov
mov
add
mov
add
test
xchg
mov
jmp
add
nop
jl
addl
mov
lea
pop
push
push
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
push
iret
lods
std
stos
mov
add
sarb
add
add
jne
add
add
add
fs
lock
xchg
ficomps
add
mov
xchg
add
push
fwait
std
fisubrl
stos
add
add
addb
add
test
les
lcall
add
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
call
xchg
add
push
add
mov
movsb
add
mov
je
add
jae
movsl
push
ljmp
lret
addl
flds
add
outsl
addb
lea
iret
rolb
into
ja
mov
add
add
sarb
rolb
pop
mov
addl
std
push
test
add
jo
out
cld
push
sti
cmc
fiaddl
lahf
les
push
addb
fmull
pop
push
push
pop
push
push
push
push
push
push
call
add
lcall
loopne
shrb
jecxz
add
mov
movsb
jnp
jecxz
add
add
add
add
mov
push
repnz
enter
fisubl
add
add
mov
add
pop
add
mov
push
leave
cmc
add
add
fiadds
add
push
add
call
add
add
pop
push
mov
push
lea
push
push
push
push
push
push
push
push
call
add
mov
add
add
pop
push
add
aam
add
test
add
add
insb
add
test
mov
in
std
lods
add
jmp
add
int
add
pop
in
movsl
pop
push
mov
add
add
add
jmp
pushf
mov
push
mov
outsl
add
mov
mov
lea
pop
lea
sub
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
int3
mov
add
mov
add
xlat
js
add
add
nop
leave
cmc
xchg
pusha
test
xchg
mov
mov
add
jle
add
mov
add
xchg
add
lea
pop
pop
add
add
imul
push
add
in
popf
add
test
mov
add
push
mov
scas
test
add
add
push
xchg
pushf
mov
lea
pop
mov
shr
push
push
lea
push
push
lea
push
lea
push
lea
push
call
incb
jl
scas
add
lds
add
hlt
sarl
flds
push
hlt
stc
loopne
mov
push
nop
add
add
mov
add
add
shr
add
lods
clc
add
add
add
xor
pushf
xchg
jne
mov
mov
int
enter
add
add
lret
ficoml
add
mov
mov
lea
pop
add
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
add
loopne
xchg
add
add
rol
sbbb
loop
add
ljmp
fcmove
jmp
imul
add
add
scas
add
add
add
mov
add
mov
pop
add
movsl
incb
jne
pushf
push
add
xchg
shl
lahf
out
nop
add
add
lret
cld
lea
pop
mov
push
lea
push
push
push
push
push
call
add
add
cld
pop
add
add
jae
add
cmc
in
mov
add
out
aam
mov
add
test
add
add
int
subb
add
add
add
mov
add
add
insb
add
add
mov
add
shll
add
add
arpl
add
mov
push
sti
jl
mov
add
les
pop
or
or
shl
pop
xor
push
sub
rol
pop
mov
push
rol
dec
ror
dec
pop
and
call
push
lea
push
lea
push
push
push
call
add
add
adcl
test
out
push
jb
rolb
int
fiadds
ljmp
cmc
out
filds
cmc
add
addr16
clc
mov
add
test
add
add
add
add
add
add
push
jo
clc
int3
int
add
out
add
ret
push
lea
test
pop
add
push
push
lea
push
push
call
jmp
pop
add
pop
add
into
testb
add
in
call
les
cmp
negb
mov
xchg
lahf
mov
add
faddl
lret
pop
incb
fldenv
add
ret
shl
add
mov
cli
scas
mov
xchg
add
test
lret
cwtl
rorb
pusha
adc
inc
or
test
add
add
dec
push
and
push
push
push
push
lea
push
call
je
add
jo
cltd
addb
lods
add
nop
stos
js
out
jb
jge
add
add
jp
pop
add
stos
xlat
jnp
hlt
add
add
test
add
mov
add
testb
add
add
add
sti
push
movl
ja
xchg
lret
hlt
lea
pop
add
cmpl
jne
push
sub
pop
xor
pop
push
add
add
ror
pop
pop
pop
pop
push
push
call
testl
leave
mov
popa
xchg
pop
add
push
push
int3
mov
add
add
jge
repnz
aam
add
aad
add
out
test
pop
je
insb
add
add
mov
fwait
shl
out
add
lds
lcall
bound
xorl
or
leave
push
pop
ret
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
incb
add
pop
mov
insb
addb
add
in
add
mov
icebp
add
jl
loopne
test
jb
pop
jo
pop
loopne
add
andl
add
outsl
add
mov
rolb
xchg
xchg
xchg
add
clc
scas
cmpsl
cld
mov
cmpsb
pop
add
jo
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
call
cmpsb
xchg
fnstsw
jmp
mov
add
leave
ljmp
add
add
mov
outsl
imul
cli
jbe
add
add
add
add
fisttpl
pop
mov
jmp
add
movsb
add
add
mov
int3
mov
scas
testl
loop
jb
add
add
mov
jle
mov
add
add
add
lea
pop
add
push
inc
pop
push
push
push
lea
push
call
push
testl
add
push
add
xlat
add
ljmp
add
popf
fwait
mov
add
pop
add
add
add
movsb
movsl
pushf
add
mov
ftst
add
rorl
lods
add
add
add
pop
test
jmp
testb
mov
xchg
in
jle
popf
add
jns
xchg
add
jns
mov
add
mov
lea
pop
pop
push
sub
pop
pop
push
push
push
push
push
push
push
push
push
push
call
movsl
movsb
add
pushf
sahf
mov
mov
add
leave
mov
xorb
add
add
push
pusha
add
add
jle
add
test
roll
lods
add
add
push
insb
fadds
andb
add
cwtl
add
xchg
insb
fwait
mov
mov
bnd
add
mov
test
insb
mov
lds
mov
lea
pop
mov
push
sub
shl
shl
pop
push
call
push
push
call
add
add
xchg
jecxz
lret
xchg
fcompl
pop
mov
movsl
jp
add
mov
addr16
arpl
add
add
add
mov
xchg
lret
in
rolb
add
add
push
xchg
push
add
add
add
lds
add
pop
test
xlat
add
divl
loopne
mov
lea
pop
xor
push
push
push
push
call
lret
xchg
movb
add
pop
lods
add
movsb
arpl
push
test
add
lods
test
add
test
push
add
into
add
push
add
roll
cli
out
out
lods
xchg
subb
add
add
add
mov
in
int
jnp
add
mov
add
add
mov
lea
pop
pop
push
ror
sub
pop
pop
pop
push
sub
shl
xor
pop
pop
pop
leave
push
push
push
lea
push
push
lea
push
push
call
mov
jb
add
add
mov
add
divl
add
stc
fildl
push
jnp
push
add
add
add
mov
clc
mov
xchg
movb
add
ja
addb
jno
cld
add
mov
mov
lahf
aam
in
add
out
add
push
xchg
je
fwait
pop
icebp
mov
movl
mov
lea
pop
ret
push
mov
push
lea
push
push
push
push
lea
push
call
ja
out
push
jle
faddl
xlat
roll
js
add
aad
push
cwtl
add
add
loopne
cwtl
cli
add
flds
addb
orb
mov
cld
repnz
fisubs
mov
add
stc
push
add
jns
add
add
pop
add
add
push
call
subb
lods
pop
add
mov
mov
lea
pop
add
push
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
call
mov
add
rcrl
filds
add
fnstenv
mov
ljmp
lock
scas
js
jle
add
std
add
jle
mov
xchg
add
add
mov
add
js
loope
add
repnz
add
push
orb
insb
xchg
add
add
hlt
mov
add
mov
lea
pop
push
push
push
push
lea
rol
inc
pop
mov
push
push
push
push
lea
push
push
push
call
ja
mov
loop
bound
push
rcrb
mov
test
xchg
add
jecxz
lods
mov
mov
cmpsb
add
addr16
add
add
mov
incb
call
add
add
add
imul
mov
add
lods
scas
add
add
xchg
pushf
xchg
add
add
mov
pop
jl
add
add
pop
pop
lea
sub
push
push
lea
push
push
push
push
call
add
add
addb
imul
lret
fdivrp
shrb
add
movsl
add
add
jp
negb
mov
add
fistps
add
add
add
roll
call
pop
add
mov
push
loope
aad
add
in
add
popl
add
mov
push
add
mov
add
add
mov
lea
pop
mov
shr
push
push
push
push
call
filds
int3
add
std
add
add
add
data16
add
mov
add
jo
repnz
add
test
fldl
push
jp
loop
add
add
fiadds
insb
xchg
je
add
mov
popa
nop
mov
xchg
xchg
add
add
out
scas
jp
add
mov
aam
add
mov
add
and
jns
mov
lea
pop
add
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
cmpsl
popa
add
mov
movsb
xchg
hlt
add
test
xchg
jle
loopne
roll
hlt
cli
call
lods
jle
mov
scas
jmp
add
add
mov
mov
pop
movsl
add
jno
add
add
push
data16
bnd
add
add
mov
lea
pop
add
pushl
popl
push
push
push
lea
push
push
call
mov
imul
fildl
imul
add
add
mov
add
add
add
mov
scas
scas
cmpsl
mov
outsl
mov
loope
lahf
add
xchg
mov
add
add
out
test
mov
in
out
xchg
add
lods
add
xchg
add
testl
lea
pop
mov
push
push
push
push
lea
push
lea
push
call
add
out
add
add
add
add
jno
shr
mov
notb
mov
jne
mov
add
add
add
in
add
movsl
jo
scas
mov
add
scas
gs
add
mov
mov
xchg
add
add
add
pop
mov
mov
mov
mov
add
add
add
add
add
sbb
stc
xor
lea
push
pop
mov
add
push
rol
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
popa
int3
add
iret
add
mov
add
clc
add
add
mov
mov
xlat
scas
jmp
mov
add
jp
xchg
iret
add
repnz
insb
mov
enter
out
aad
test
add
pusha
add
add
add
arpl
lcall
mov
lea
pop
call
push
push
push
call
fsts
add
push
mov
xchg
mov
mov
mov
jb
ljmp
add
sahf
in
popa
js
add
add
movsb
pop
add
add
add
add
push
xchg
add
mov
in
add
jbe
push
mov
stos
outsl
add
addr16
sti
pop
into
add
add
add
add
add
add
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
jo
pop
xchg
mov
lret
lock
add
push
enter
mov
lods
add
sti
arpl
add
cmc
lods
xchg
add
add
fstpl
push
mov
popf
cli
push
lahf
cltd
in
mov
add
add
incb
add
mov
add
rcrl
add
jmp
mov
lea
pop
nop
nop
cmp
je
push
pop
nop
push
lea
push
call
out
add
mul
lods
mov
pushf
loop
cltd
popa
iret
pop
add
add
add
fildl
pushf
jno
jle
xchg
add
add
push
ljmp
shl
add
add
add
faddl
loope
jnp
mov
cltd
aad
pushf
jle
add
add
jo
movl
add
jp
add
mov
add
push
lods
jge
add
ret
lea
pop
nop
push
push
call
add
push
add
jo
cmpsb
jmp
imul
pop
cmc
nop
stos
lret
lods
add
mov
add
pop
repnz
add
add
mov
add
mov
pop
mov
test
add
pop
add
add
mov
add
pop
std
add
add
push
mov
or
nop
push
xor
sub
pop
nop
push
shr
lea
pop
cmp
jb
xor
jmp
push
push
push
lea
push
push
push
call
iret
add
out
add
jb
add
lret
mov
push
test
add
cmpsb
add
adcl
mov
add
xchg
add
add
add
hlt
add
mov
fimull
jno
jb
jne
mov
fldl
jp
add
mov
lea
pop
mov
add
movzwl
push
not
rol
add
pop
mov
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
test
add
in
add
add
test
add
sti
leave
in
lock
xchg
add
pop
mov
in
add
mov
xchg
jo
fiadds
add
mov
fcmovne
add
jecxz
xchg
add
add
add
push
push
add
lock
add
add
add
rorl
pop
mov
push
rol
not
sub
pop
xor
xor
shl
push
lea
xor
ror
pop
xor
push
pop
shl
xor
shl
push
shl
not
lea
pop
xor
push
lea
push
lea
push
lea
push
call
add
mov
je
mov
add
push
pop
add
xchg
shlb
imul
jle
add
out
out
add
xchg
bound
lea
push
jge
rcrb
pop
add
add
add
add
add
add
pusha
cwtl
test
add
xchg
add
divl
cltd
nop
add
jge
add
add
add
pop
mov
push
add
inc
lea
pop
add
pop
push
lea
add
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
cmpb
outsl
add
add
add
mov
jbe
aad
ficompl
add
movsb
movsb
fcmovnb
add
add
add
pop
mov
add
add
add
jmp
stc
mov
jl
add
jl
push
stos
ret
fcomip
rolb
in
add
jge
addl
ror
test
xchg
out
jecxz
pop
add
add
add
jb
lods
leave
int3
jecxz
les
push
shl
ror
pop
pop
push
not
sub
pop
leave
push
lea
push
push
push
push
push
push
push
push
call
je
add
add
sahf
add
cli
add
fildll
add
add
lret
add
mov
add
cli
add
lea
mov
add
add
ljmp
push
in
in
add
xchg
add
xchg
cli
add
add
call
push
add
add
iret
add
add
add
add
addr16
cmpsl
ja
shrl
add
mov
lea
pop
ret
push
mov
push
inc
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
jle
jbe
add
rcrb
jbe
lahf
pop
movsl
std
arpl
add
roll
mov
lds
iret
jae
add
popf
in
ret
jecxz
jmp
add
add
fiaddl
je
add
pop
add
add
add
pop
mov
add
push
add
add
add
fs
iret
mov
xchg
jno
add
add
mov
rolb
hlt
pop
mov
lea
pop
push
mov
mov
push
sub
not
pop
mov
test
je
mov
push
inc
xor
sub
pop
test
je
mov
mov
push
rol
inc
pop
mov
push
pop
inc
push
push
push
call
push
add
add
add
cld
rcl
repnz
jmp
test
xchg
pop
jo
gs
in
cmc
arpl
mov
cmpsl
mov
cld
add
loopne
add
xchg
push
push
icebp
cld
sarb
add
repnz
mov
addl
add
add
jne
fnstsw
fsubr
jb
stos
mov
lea
pop
cmp
je
push
push
push
lea
push
push
push
call
add
xchg
test
add
data16
test
lods
add
sti
add
mov
add
add
movsb
add
add
call
add
lret
iret
push
lds
mov
add
add
xchg
push
scas
mov
sar
xchg
add
push
jo
sahf
ljmp
push
fldl
lds
mov
lea
pop
test
je
push
push
lea
push
push
push
lea
push
lea
push
call
xchg
add
in
jmp
mov
add
add
add
add
jmp
sar
mov
add
lret
add
jns
pusha
add
pop
add
jno
shr
shrl
xchg
neg
jecxz
in
popf
cld
jno
pop
add
pop
add
add
add
rolb
mov
lea
jno
add
fs
aad
add
pop
pop
xchg
enter
nop
pop
mov
pusha
sbb
mov
push
push
push
call
mov
push
jle
iret
icebp
add
leave
jbe
add
pusha
fsubrp
lcall
add
add
adcb
add
push
jnp
fisubs
add
loopne
add
cltd
mov
push
add
fildl
test
lret
cmpsl
add
push
add
jae
out
mov
roll
test
lock
fcoml
add
pop
inc
cmp
je
push
sub
not
pop
test
jne
push
push
lea
push
push
lea
push
push
push
call
int
data16
add
add
add
add
add
fwait
pop
outsl
add
add
mov
lcall
push
push
add
add
out
push
loop
insb
push
add
mov
add
mov
mov
add
outsl
jae
add
push
add
add
add
fists
add
add
add
shlb
rolb
out
add
mov
lea
pop
xor
push
shl
pop
pop
pop
push
shl
not
shr
pop
pop
push
sub
pop
pop
leave
ret
push
add
add
pop
mov
inc
cmp
jne
push
xor
rol
pop
lea
push
sub
sub
pop
mov
test
je
mov
push
push
push
call
test
add
push
nop
add
imul
lock
iret
pop
je
add
fnclex
add
in
add
lea
ljmp
add
xchg
int3
add
add
push
xchg
mov
mov
xchg
add
cmpsl
push
incb
jle
add
mov
add
int3
lea
pop
add
cmp
jne
push
push
lea
push
push
push
call
mov
push
mov
lods
pop
xchg
std
in
stos
jb
mov
add
js
add
push
movsb
lock
add
add
testl
pop
add
add
lock
add
insb
push
add
popl
sahf
add
add
jo
pop
add
add
fs
mov
je
addl
add
add
iret
fwait
push
mov
lea
pop
mov
test
je
mov
push
lea
pop
add
cmp
je
jmp
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
lea
in
test
add
roll
add
mov
fwait
lods
sarb
cwtl
add
in
mov
add
add
mov
add
cli
add
add
js
fcoml
jne
data16
mov
fstpl
jle
add
loop
mov
lea
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
jge
add
pop
rcr
add
fistps
outsl
add
add
int3
add
add
insb
stos
mov
repnz
fs
cwtl
add
clc
imul
add
js
mov
addr16
lret
add
je
push
add
repnz
push
data16
add
add
loope
mov
pop
pop
pop
push
lea
push
push
push
push
lea
push
call
jp
add
ja
fidivs
jle
add
add
rolb
test
add
add
shrb
add
jmp
rolb
in
lds
rcl
scas
cld
in
sti
jmp
add
incb
lds
out
push
push
out
add
outsl
sar
pop
jb
add
add
add
mov
add
rcrb
add
mov
mov
add
icebp
mov
lea
pop
pop
push
push
lea
push
push
call
popf
jns
add
add
jae
xchg
add
add
popa
add
aam
xchg
std
bound
mov
add
push
lock
cltd
jns
cwtl
push
add
cmpsl
cmc
add
imul
mov
add
test
enter
cli
jmp
add
mov
add
lea
lea
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
gs
cmpsl
xlat
call
in
add
movsb
jp
jae
add
mov
scas
movb
cmpsl
pop
addl
loopne
mov
add
add
test
mov
into
xchg
insb
add
out
bound
add
xchg
cmc
add
jle
test
add
mov
add
cltd
ljmp
add
add
xchg
movb
testb
push
add
pop
leave
push
add
sub
pop
ret
push
push
push
lea
push
call
fwait
push
sahf
mov
add
xchg
add
add
add
add
add
jp
push
jmp
add
add
addb
add
mov
mov
out
jge
fsubrs
cltd
add
add
jl
add
test
rolb
mov
mov
xor
icebp
iret
rcrl
cmc
mov
add
jmp
arpl
pop
lea
pop
push
push
push
push
lea
push
push
push
push
call
add
push
add
je
add
std
jp
jno
pop
jnp
sar
add
add
ficoml
aam
loope
add
add
sti
add
test
fstps
add
add
in
add
jmp
mov
in
add
mov
add
xchg
stc
add
add
add
add
aam
fildl
mov
stc
iret
jb
add
add
sar
pop
add
add
fs
add
add
pop
pop
push
xor
ror
xor
ror
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
push
add
add
fs
bound
in
addl
push
jb
add
cli
mov
add
cltd
xchg
add
add
add
stc
fnstcw
addl
jecxz
mov
nop
lret
xchg
add
add
push
out
fildl
mov
add
add
out
add
pop
sahf
add
add
imull
cmpsl
add
pop
popa
add
out
xchg
mov
lea
pop
pop
push
not
pop
leave
ret
mov
push
shl
pop
pop
pop
pop
push
add
lea
pop
pop
push
push
call
movb
fs
add
mov
add
fildl
xchg
add
add
lods
add
add
outsl
add
andl
jp
add
add
add
ljmp
out
movsb
addl
add
add
rclb
mov
mov
add
pop
leave
push
push
push
push
call
add
out
add
add
add
mov
scas
imul
lret
add
add
stos
add
scas
rcrl
add
hlt
cld
add
push
jge
arpl
pop
add
mov
pop
lods
add
add
xchg
add
leave
sahf
mov
testb
popf
cltd
out
push
add
les
aam
bound
pop
ret
push
sub
sub
pop
rol
push
dec
pop
rol
push
push
push
push
call
jne
add
add
mov
rorb
scas
add
fildl
popa
add
jae
iret
rol
jmp
fs
add
push
mov
mov
nop
add
mov
add
lcall
add
aad
lods
add
add
add
sti
add
add
mov
push
add
add
pushf
push
addb
les
add
push
call
xchg
add
add
mov
add
clc
add
stos
pushf
add
popa
add
mov
xchg
add
stos
jecxz
in
add
mov
add
jge
jbe
sub
insb
mov
add
leave
movb
add
add
add
add
add
xchg
add
pop
inc
push
add
pop
cmpb
jne
push
push
push
push
push
push
call
ljmp
add
data16
cmpsb
pop
mov
jb
jle
rcll
bnd
add
push
add
add
add
out
add
cld
add
add
add
outsl
jne
add
lock
push
addl
incb
mov
add
add
push
mov
in
mov
push
test
add
add
popl
add
add
add
addb
lcall
lea
pop
ret
sbb
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
inc
stos
mov
sti
movsb
sub
sti
aam
mov
add
sub
les
jae
push
push
push
xchg
ds
xchg
fs
leave
js
shlb
imul
dec
sbb
sbb
pop
sub
adc
sbb
and
and
adc
jo
pop
add
pop
inc
add
jnp
pop
mov
adc
mov
inc
sub
sar
cmp
adc
mov
jmp
jp
int3
mov
xchg
outsb
into
mov
test
dec
pop
out
jp
sti
mov
test
sbb
push
stos
in
imul
lods
shl
xor
add
stos
lods
scas
addl
mov
in
sub
dec
lcall
adc
push
sbb
cwtl
data16
popf
scas
shrl
push
js
lods
cmp
fnstenv
dec
dec
sub
stc
lock
inc
pusha
mov
xchg
int3
pop
out
popa
popf
clc
and
popf
jg
iret
pop
test
daa
cmpsl
jbe
loopne
push
in
sub
pop
es
shll
jnp
xor
lret
jmp
int
negb
out
jbe
xor
add
stos
inc
and
cmp
push
pop
add
mov
repnz
popf
clc
sbb
mov
shl
out
push
jae
push
js
ds
adcl
or
imul
loop
jmp
and
es
xor
pop
rcrl
aaa
mov
or
xchg
push
push
add
das
push
push
or
jae
sbb
adc
xor
push
xorl
xchg
inc
repnz
adc
idivb
popf
jbe
xchg
push
jnp
fsts
lea
insl
test
imul
orl
lock
sub
ret
adc
or
es
in
in
inc
xchg
lcall
or
push
add
sub
mov
xorb
mov
sbb
iret
scas
cs
js
pop
push
lret
fistl
adcl
cmp
cwtl
pop
sbb
lods
mov
pop
mull
std
and
push
cmpsb
dec
fincstp
movl
nop
leave
aas
push
test
jns
mov
icebp
addr16
cmc
mov
je
jnp
mov
negl
jmp
mov
loop
lods
xor
pop
cmp
lods
cmp
adc
mov
jle
cmpsb
or
push
andl
rcr
bound
ja
movntps
inc
xchg
jl
add
in
xchg
cmc
and
sbb
fbld
repz
test
cmp
and
repz
fistl
or
repz
sahf
cmc
fildl
jmp
pop
adc
sub
out
xchg
push
and
push
jle
fucom
jg
xchg
mov
add
sub
add
repz
push
sbb
pop
xchg
and
jns
xchg
sbb
fstpl
cmp
in
loope
ljmp
and
int3
idivb
es
test
fbld
inc
sbb
or
mov
jmp
arpl
jl
jae
pushf
repz
ds
aad
pop
inc
mov
rcrl
sub
mov
sub
add
pushf
jno
push
call
sarb
fsubs
sti
pushf
add
ret
cli
pop
sahf
adc
cmp
dec
mov
cmp
sahf
push
shl
daa
mov
fisubrs
loope
xorb
xchg
dec
cmp
or
cmp
dec
mov
dec
insb
fstl
push
cmp
js
sbb
movsl
pop
push
push
shll
mov
sbb
mov
inc
gs
add
or
jbe
xchg
cmpsb
jg
out
in
lock
xchg
xlat
dec
out
adc
iret
sbb
mov
add
pop
ss
and
out
push
jge
repnz
loope
lret
adc
loopne
insl
xchg
pop
dec
fs
cmpsl
data16
mov
out
mov
stc
pusha
inc
outsl
pop
mov
cmp
fmuls
xor
les
pop
xor
daa
fwait
jl
int3
pop
cltd
int3
xchg
xor
dec
xchg
sub
add
mov
adc
adc
movsl
xor
sub
adc
mov
pop
insb
fidivl
cmc
mov
test
shr
inc
sahf
std
clc
outsl
lret
sbbb
inc
mov
loope
into
aam
mov
mov
in
mov
js
pop
cwtl
jb
inc
mov
adc
lds
xchg
pop
cmp
push
ss
and
add
sets
pushf
pop
add
jmp
rcrb
inc
sti
ret
cli
dec
loope
fstpl
xchg
sbb
and
lock
fsubs
cld
or
add
je
ja
iret
mov
gs
add
push
rcrb
test
mov
push
pushf
or
in
xchg
sbb
sub
scas
dec
rcll
dec
xor
inc
sbb
pop
jmp
mov
add
es
push
mov
cld
pop
pop
mov
inc
jo
push
sub
pop
lret
out
adc
ja
dec
insl
adc
lea
out
dec
sub
mov
inc
loope
xor
inc
mov
jno
xchg
stos
and
pop
aas
bnd
sbb
xchg
xor
inc
sahf
mov
mov
mov
dec
or
jge
adc
dec
vshufps
pushf
gs
pop
pop
push
mov
icebp
and
dec
ret
sub
xchg
ds
andl
cmpsb
cld
and
or
add
inc
test
and
jo
pop
ret
sbb
divl
icebp
sub
ss
and
scas
in
scas
mov
sahf
out
adcl
mov
mov
jb
push
daa
and
stc
out
aaa
sbbb
std
das
dec
add
imul
adc
push
push
pop
inc
stos
sbb
or
mov
js
in
mov
aaa
dec
sti
sub
scas
pop
sub
sbb
jns
pop
and
cmp
loopne
je
dec
xchg
xlat
imulb
xchg
or
cmpsl
mov
xor
sbb
add
sbb
push
mov
mov
into
ljmp
fs
mov
mov
lret
pop
push
pop
cmc
andl
out
or
bswap
fwait
jl
dec
xor
movsl
adc
add
inc
loope
sbb
outsb
popf
cmc
add
outsl
cwtl
mov
and
pop
stos
rcrb
dec
mov
pushl
out
imul
pop
push
mov
jp
cli
push
pop
orl
mov
icebp
stc
sahf
xor
sbb
cld
cmpsl
sar
mov
ds
mov
sub
inc
cmc
rep
mov
mov
orl
inc
push
call
movsl
bound
push
cmp
cs
cmc
and
inc
rolb
xchg
sbb
loope
test
jge
ds
lcall
or
dec
aas
out
mov
or
add
popf
push
pop
into
inc
mov
nop
push
imul
jge
lods
lret
mov
in
xchg
fnstcw
fwait
shrl
repnz
sub
jg
inc
into
push
scas
je
rorl
cmpsb
popa
cli
pop
or
mulb
mov
mov
fiaddl
or
xchg
neg
xor
cmc
pusha
icebp
test
mov
dec
dec
js
inc
dec
sub
imul
xchg
adc
pop
mov
or
bswap
sti
test
and
push
int
jns
sti
mov
adc
pop
lock
vpmadcsswd
xor
add
xchg
rcrb
ja
cmp
orl
add
cli
xor
daa
mov
repnz
sub
add
xchg
inc
popf
jle
pop
adc
push
pushw
and
pop
xchg
sbb
notb
cli
xchg
xor
popf
fidivl
mov
outsl
lds
push
in
pop
push
mov
pop
push
fadds
enter
call
pop
out
jo
jg
lods
orl
imul
lcall
int3
or
mov
les
xchg
mov
sbb
std
jae
xchg
notb
push
shrb
lahf
push
push
push
addr16
enter
jle
lods
jp
xchg
cmc
insl
sbb
jmp
mov
cmp
xor
repnz
test
adcb
out
or
iret
imul
push
push
outsl
cmp
mov
add
xchg
pop
mov
cmp
push
bound
movsl
aad
cmpsl
push
cmp
jge
mov
dec
fwait
xchg
mov
cmp
aam
inc
insb
jne
sub
adc
sbb
mov
inc
jo
lret
out
cmpsb
jns
mov
adc
xor
dec
push
in
inc
jo
mov
or
bound
push
cmp
sub
sbb
rcrb
xor
ss
cmp
in
popf
rorb
cmp
and
sub
pop
aad
pop
sbb
popf
mov
repnz
mov
sub
dec
xchg
inc
adc
movsl
xlat
mov
dec
test
push
mov
rcr
psraw
adc
and
dec
add
scas
das
testl
sbb
sub
jp
daa
sub
pop
sbb
ret
dec
pop
mov
arpl
mov
nop
cwtl
pop
scas
sub
pop
lea
or
daa
xorl
dec
cmp
in
dec
repnz
bswap
lret
mov
mov
aas
insb
mov
lcall
iret
test
enter
fists
cmp
adc
mov
addb
cmp
hlt
popa
cli
outsl
les
mov
sub
pop
movsl
pop
scas
pop
ficoms
lods
cmp
or
add
inc
mov
js
aaa
xor
cmpsb
out
push
hlt
data16
pop
or
mov
bound
stc
repz
xchg
xchg
and
jne
ret
sub
and
out
sbb
sub
movsb
pop
adc
cmp
push
sar
ja
aas
rcrl
add
fld
and
mov
js
pop
in
rorb
cmpsb
xchg
sub
fadd
or
pushf
xchg
mov
in
and
xchg
ss
lods
inc
in
and
data16
in
mov
pop
les
nop
cmp
dec
lock
push
movsl
jge
push
les
xchg
jge
jecxz
hlt
jns
jno
mov
lcall
loope
ds
or
xorb
push
divl
add
iret
xchg
add
dec
pop
inc
lods
push
pop
aam
loope
mov
cmp
cmp
or
jne
push
sub
inc
cmp
lods
loop
xor
jb
imul
cmpsl
mov
out
shl
push
insb
jle
mov
jno
cmpsl
movsb
and
sbb
cmc
or
movsb
fcomi
pop
aas
lret
addr16
inc
dec
stc
repnz
arpl
loop
shlb
push
loopne
test
pop
dec
dec
or
push
inc
insb
mov
movsl
dec
and
xchg
push
xchg
adc
push
cmc
in
loop
adc
xchg
insb
dec
ja
repz
push
add
dec
push
in
outsl
inc
inc
and
cmp
andb
test
arpl
ss
jecxz
nopl
cli
mov
fiaddl
add
test
out
push
rcrl
inc
and
or
mov
imul
mov
test
dec
push
roll
repz
push
sub
insb
mov
or
movsl
pop
adc
fisubs
sar
out
ds
or
or
outsl
jge
adc
pop
lret
test
rcll
mov
test
loop
mov
les
push
out
cld
mull
sub
dec
dec
adc
dec
mov
mov
sahf
mov
js
ret
pop
or
jle
imul
mov
ror
inc
add
fsub
mov
shll
jge
cltd
loope
nop
xchg
loop
imul
cli
frstor
mov
imul
lods
mov
cmp
insb
lea
ret
inc
jns
mov
inc
hlt
pop
cs
bound
rcrb
sahf
fwait
cmpsb
insl
pop
and
push
movups
pop
add
mov
adc
fisubrl
pop
pop
sub
xlat
mov
dec
aaa
xchg
jl
cmpl
xchg
inc
dec
pop
decb
mov
loopne
xor
mov
aas
jne
cmp
cmp
fiadds
sbb
stos
fcoml
js
hlt
icebp
ret
cmc
ja
div
cmp
xorl
or
dec
cs
fbld
out
test
inc
in
xchg
inc
and
jnp
xchg
or
shrb
testl
mov
push
push
aad
mov
cmc
sub
les
xchg
ret
xchg
testb
adc
lods
scas
push
xor
les
test
loope
adc
or
aaa
push
rolb
add
push
and
jo
outsb
push
lahf
sahf
xchg
incb
sbb
mov
stos
fmul
cmp
xchg
jb
cmc
adc
lds
push
mov
mov
inc
xor
aad
cmova
nop
and
insl
xor
cmp
cmpb
jmp
lcall
mov
stos
add
mov
icebp
sbbl
inc
adc
mov
lahf
mov
aad
fwait
xor
int3
inc
leave
or
pop
ret
adc
loopne
in
jbe
test
in
aas
lret
mov
orl
jge
jmp
mov
xchg
call
dec
and
sahf
inc
call
push
js
je
sbb
mov
jae
or
pop
mov
mov
arpl
mov
lods
pushf
cmp
pushf
inc
das
mov
lahf
sub
inc
push
pushf
xchg
orb
lcall
add
mov
push
into
scas
xor
mov
push
enter
xchg
int3
aaa
fistpll
adc
or
cwtl
imul
sbb
xor
jmp
jmp
dec
mov
push
cmpsl
imul
mov
pop
or
lds
jle
inc
cmpsb
xor
ljmp
popl
outsb
xor
add
adcb
pop
add
xor
cld
int3
mov
cwtl
and
cli
cmpsb
fdivr
addl
test
mov
dec
and
xor
cmp
test
mov
in
cltd
lds
mov
mov
jmp
sub
push
dec
adc
fs
pop
cmp
lods
or
sti
shl
cld
mov
outsb
or
sub
add
imulb
xorb
push
test
or
mov
lcall
sti
push
push
cltd
mov
mov
ret
pop
jnp
jno
movsb
fistpl
ror
mov
or
jecxz
in
aaa
push
inc
loope
cmp
cmp
dec
insb
mov
sub
adc
sbb
mov
cmpsl
sbb
out
mov
out
sbb
pop
arpl
xchg
pop
ret
push
jmp
es
mov
iret
hlt
cmpsb
mov
mov
sbb
mov
add
in
push
inc
ret
std
adc
enter
mov
push
scas
arpl
out
push
movsl
hlt
ljmp
or
mov
inc
lahf
movntps
stos
xchg
sub
clc
adc
mov
push
insb
jl
in
int3
sbb
xchg
scas
mov
scas
inc
pop
adc
andb
jp
pop
pop
dec
jne
or
stc
lods
imul
cmpsl
scas
loopne
inc
cltd
xorl
outsb
sbb
call
in
sbb
push
lods
jl
dec
cli
jle
aam
jl
sti
in
jge
push
js
sbb
cmp
sub
mov
dec
es
sub
push
lock
and
xor
cltd
push
pusha
shrb
fdivs
mov
lea
sub
test
insl
adc
ficomps
insl
sbb
inc
movl
push
rcrl
repz
push
mov
js
push
mov
push
or
int3
dec
push
in
or
insl
in
push
fdivrp
mov
pop
inc
mov
ret
cmpsl
add
lods
negb
mov
mov
pop
sub
rcll
jno
mov
sbb
inc
adc
jb
cmp
sbb
lret
fisttpll
cltd
cli
es
lcall
jg
aas
mov
fsts
testl
sub
loopne
outsl
int3
int3
ret
mov
jo
mov
inc
leave
xchg
push
xchg
hlt
jmp
and
xlat
xchg
in
inc
jae
xchg
inc
test
jp
dec
pop
mov
dec
dec
fsubrl
mov
dec
fldl
adc
outsl
fildl
xchg
scas
ret
dec
sbb
push
xchg
fwait
mov
xor
rcrl
js
add
pop
dec
stos
jb
xor
mov
popf
push
adc
add
fwait
imul
xor
std
aam
rcll
fidivrl
push
and
ret
xchg
xchg
aad
jl
inc
mov
push
xchg
filds
push
and
jns
pop
inc
xor
dec
pop
add
insb
lods
adc
leave
adc
push
outsl
je
push
lahf
pop
jb
mov
xlat
mov
icebp
int3
pop
sbbb
pop
sub
imul
or
and
fcmovbe
icebp
out
push
xchg
mov
out
lds
scas
movsb
sbb
fstps
idivl
sub
sbb
cmp
cmpsl
scas
ds
push
adc
jb
sub
lret
cmpsl
mov
and
dec
mov
mov
js
dec
addr16
sbb
subb
data16
scas
out
and
add
push
rorl
pop
ret
in
bound
lds
lcall
es
push
in
movsl
sbb
jne
xchg
ljmp
test
and
nop
sub
out
lret
lods
in
das
cwtl
das
or
pop
fwait
leave
inc
sbb
movsb
jp
shrl
xchg
in
lret
xchg
movsl
jge
scas
enter
inc
lods
mov
mov
cmp
bnd
test
fisubs
ficoml
push
cmpsl
daa
mov
inc
cmp
pop
mov
adc
cmp
add
in
cwtl
cmpsl
mov
or
push
mov
inc
mov
dec
jbe
jg
incb
popf
inc
jno
mov
icebp
mov
adc
jb
adcb
repz
sarb
out
xor
xor
xorl
adc
jns
mov
div
in
sti
pop
inc
adc
add
aam
mov
and
jbe
shl
xchg
jmp
or
pop
jmp
inc
xchg
scas
add
lcall
jb
mov
dec
idiv
out
out
jle
inc
lcall
xchg
and
xlat
jmp
or
cltd
and
aad
mov
push
xlat
lea
inc
and
call
mov
stos
sub
fimuls
jp
push
and
fsubrl
inc
push
xchg
push
jmp
bound
jmp
mov
popa
dec
lods
inc
test
das
loopne
cmpsb
loop
ror
mov
adc
stc
lret
pop
mov
pop
dec
mov
rcll
enter
clc
pop
jbe
shlb
out
xchg
fimuls
mov
lahf
and
je
ret
test
adc
mov
dec
insl
in
inc
in
xor
mov
in
test
xchg
cmp
or
loopne
out
sahf
push
jmp
hlt
lea
or
and
mov
lahf
cmp
fisubrs
push
mov
xchg
xchg
cmpsl
xchg
repnz
xor
sbb
jnp
mov
push
or
push
pop
xor
mov
decl
sbb
mov
loop
mov
sbbb
hlt
mov
jne
lahf
pop
inc
je
xor
pop
jae
xchg
pop
pop
add
pusha
jo
sub
jbe
jle
lds
das
dec
lret
pop
js
push
mov
sbbb
outsb
mov
adc
xor
and
xchg
lods
dec
mov
xor
movsl
add
das
push
icebp
cmp
mov
mov
jmp
mov
roll
leave
jbe
sbb
add
repnz
dec
movsl
lcall
js
je
adc
mov
dec
lods
mov
aaa
push
and
dec
sub
iret
scas
push
imul
dec
negb
mov
dec
xchg
jmp
and
movsl
add
xor
dec
cltd
fwait
cld
iret
movsl
lock
xor
jb
mov
int
adc
out
mov
add
xchg
jo
dec
fwait
hlt
xchg
lods
cld
add
sub
jae
xchg
fldpi
dec
aad
shlb
icebp
aas
mov
inc
lea
js
daa
scas
je
dec
rorl
dec
xor
mov
je
or
dec
movsb
pop
jmp
repz
xor
nop
cmpsl
mov
cli
bound
es
cmp
aam
cltd
pushf
jp
loop
rorb
mov
sub
push
ret
cmp
mov
mov
out
repz
cmpsb
std
jnp
add
mov
cmp
das
add
jg
push
imul
or
adc
inc
dec
cli
jne
lahf
ret
dec
fs
fwait
ja
pusha
mov
ror
psrlw
mov
cld
adc
jge
xorb
pop
push
xor
popf
scas
sub
in
es
pop
ret
pushf
int
xchg
ljmp
stc
adc
cwtl
push
inc
dec
icebp
jl
imul
sub
mov
ret
jno
mov
pop
mov
addr16
mov
inc
push
cmp
xchg
repnz
out
push
sti
test
jb
inc
test
shll
call
xor
adc
mov
mov
pushl
sbb
mov
lds
push
in
cmpsb
sub
adc
cmp
cmpb
aaa
push
scas
xchg
sar
dec
fcomps
loopne
fsubrp
lret
pop
inc
movsb
jae
insb
movsl
bound
adc
sti
frstor
jle
ds
xor
les
iret
mov
mov
push
sbb
push
sub
nop
repnz
xchg
mov
jle
inc
data16
bound
fs
testl
inc
push
cwtl
mov
jo
fsubrl
je
into
or
lahf
sti
adc
dec
in
lock
add
xchg
add
in
mov
addr16
jmp
ficomps
pushf
int
or
pop
shrb
scas
clc
sbb
mov
test
int
cmp
test
out
mov
test
inc
jbe
mov
or
mov
inc
sbbb
push
clc
mov
and
mov
lods
push
mov
or
push
loope
or
adc
pusha
sbbl
lcall
test
cwtl
scas
dec
cmp
stc
add
lcall
pusha
ror
push
add
notl
xchg
insb
insb
or
add
pushf
rcrb
pop
jle
push
daa
mov
dec
sub
sahf
mov
push
test
jbe
mov
pop
push
lods
inc
fsubrs
mov
dec
arpl
xor
add
xchg
inc
and
pushf
jmp
xorl
es
pop
add
orl
imul
leave
and
test
push
or
push
add
mov
cs
cltd
jmp
enter
sub
inc
pop
pop
inc
das
movsb
sbb
push
into
les
aad
mov
aam
imulb
les
xor
mov
aaa
jg
cmp
push
ret
mov
push
mov
fsubrp
or
cmp
mov
test
xchg
popa
push
iret
ficoml
and
out
shlb
cmpsl
decb
out
xchg
xchg
ss
les
shl
mov
push
cmc
addr16
push
xchg
push
or
movsl
ret
stos
xorl
clc
add
inc
add
sub
cmp
cmp
xchg
or
fstp
push
ret
loope
faddp
push
jge
pop
push
pop
les
or
movb
mov
insb
sub
sbb
pop
frstor
aad
adc
mov
adc
jge
inc
sbb
push
inc
or
or
loop
int
andb
pop
mov
test
aas
sub
xchg
pop
jge
and
popf
lcall
in
call
cltd
adc
imul
enter
sbb
xor
inc
and
or
add
ficomps
push
rcll
push
in
scas
pop
popa
push
mov
mov
adc
test
dec
mov
push
mov
or
push
mov
lcall
sub
gs
js
test
test
cmp
sbb
jb
xor
testl
pop
hlt
leave
fs
mov
test
fsubr
cli
pop
loope
sub
mov
movsl
push
jl
dec
aas
div
mov
lcall
cmp
ror
jge
cmp
cmp
iret
rorl
std
pop
or
sub
mov
mov
int
xor
sbb
and
xor
jmp
xor
mov
inc
fiadds
dec
dec
data16
repnz
movsl
incb
sahf
sub
clc
test
and
sub
or
jg
jns
or
mov
movsl
inc
jae
cli
xor
test
int3
mov
fs
incb
dec
jns
arpl
aaa
call
roll
xchg
xor
sub
mov
sahf
in
xchg
hlt
mov
into
pop
shlb
dec
sbb
testb
jbe
cwtl
mov
das
xchg
jbe
in
dec
std
dec
popa
call
arpl
fldcw
mov
jmp
or
cli
mov
imul
roll
int3
shll
pop
xor
mov
fscale
sbb
sub
mov
pushf
test
mov
cmp
xchg
shrl
imul
daa
mov
adc
mov
imul
mov
dec
je
fsubrs
cmp
cmp
mov
push
mov
jge
pushf
push
enter
cmc
fdivl
inc
push
or
aad
bnd
push
pop
shll
pop
imul
loopne
jb
icebp
jmp
pushl
ss
jo
cmp
pushf
scas
bnd
fiaddl
jne
popf
int3
nop
pop
push
ds
negl
fistpl
sbb
lods
cmp
dec
in
out
xchg
std
popa
loop
xchg
mov
xchg
into
insb
mov
lret
xlat
jns
and
dec
jne
js
mov
xchg
add
xchg
mov
enter
xor
mov
push
movsl
mov
mov
mov
pop
or
add
jbe
jp
outsb
sbb
ljmp
xor
out
sbb
sub
test
mov
scas
and
gs
mov
jne
xchg
stc
dec
fcompl
pop
cmp
push
rcll
xchg
pusha
mov
mov
ror
sbb
adc
test
repz
test
fcoml
push
daa
lcall
fs
jge
push
add
incb
and
mov
aaa
xor
nop
mov
inc
push
jns
cmpsl
ja
xchg
rorl
imul
jae
add
int
fmul
repnz
add
aaa
xorb
push
loop
mov
push
shrl
xor
xor
arpl
pop
xchg
jo
inc
jb
inc
rclb
nop
push
mov
mov
test
mov
fadd
and
lea
jbe
or
push
cs
daa
loopne
and
sbb
aaa
cmp
add
mov
stos
push
or
nop
out
cmp
push
xor
aam
imul
or
test
test
out
jo
inc
mov
xor
pop
mov
clc
dec
sti
fisttpl
lret
and
xchg
shl
clc
jmp
sbb
lahf
dec
xchg
fsubs
fcmovb
jg
push
cmc
dec
push
add
jo
push
push
jl
int
dec
mov
cmpl
sbb
sub
mov
adc
in
or
cwtl
jns
insb
pop
fbstp
cmc
aad
mov
outsl
add
mov
inc
cmp
lahf
xor
repnz
in
cmp
lcall
xlat
or
pop
fisttps
lcall
jns
test
movsb
sbb
mov
scas
aaa
inc
push
push
add
jge
gs
inc
scas
imul
enter
popf
fcomps
scas
negb
imul
mov
or
lea
ljmp
stos
xchg
loope
hlt
xor
adc
mov
std
andl
or
dec
enter
cmp
cmpl
pop
pop
daa
push
or
data16
pusha
cmp
mov
fcom
jnp
or
inc
enter
cmp
add
push
aas
ret
jnp
std
lock
mov
xchg
stos
or
xchg
dec
pop
mov
pop
inc
subb
mov
inc
leave
cwtl
pop
add
ror
sarb
push
iretw
adcb
mov
pushf
mov
cmp
pushf
call
pop
push
loopne
dec
sar
push
outsl
add
jl
cmp
sbbl
jg
sarl
push
pop
sub
adc
adc
mov
mov
call
mov
aas
fildll
mov
fcmovu
loope
push
sahf
jnp
aas
xlat
lods
mov
xchg
inc
push
inc
dec
pop
mov
fstps
and
int3
inc
jns
lcall
mov
xchg
or
loope
insb
lahf
inc
mov
call
insb
mov
sbb
outsb
add
push
aas
bnd
lahf
xchg
mov
pusha
xlat
pop
pop
sbb
js
in
mov
dec
clc
sbb
aam
mov
dec
add
push
lds
inc
push
xchg
cmc
lock
mov
mov
sti
jbe
pop
or
jne
push
mov
sbb
popa
enter
jle
lods
aas
and
mov
sub
movsb
icebp
lea
outsl
lods
lds
mov
popa
test
xchg
inc
push
mov
imul
ret
enter
push
lcall
inc
test
int
lahf
inc
xchg
lret
int
aam
xchg
pusha
lcall
fadds
jge
add
adc
lret
push
xchg
cmpsb
or
sarb
scas
lds
and
jp
xor
fnstenv
in
in
cmc
xchg
out
mov
test
lock
data16
sar
aam
or
cmp
push
jge
push
std
mov
mov
and
xor
mov
dec
inc
cltd
fstpl
mov
ret
jg
loope
stc
pop
cmpsl
push
xchg
xchg
mov
cmp
push
ret
repz
xor
ror
in
add
fdivrp
popa
add
addr16
push
push
sarb
sub
jne
inc
sbb
fistpll
movb
mov
pop
push
mov
or
cmpsb
out
stos
cmp
mov
inc
jb
outsb
loope
call
movsb
ss
rorl
subl
push
inc
cmpsb
sub
lcall
push
fcoml
push
aam
div
xchg
adc
push
pop
sub
sub
xchg
nop
sbb
out
push
mov
cmpsb
lds
shl
push
icebp
jecxz
mulb
or
cmp
repz
cltd
jp
and
cmp
push
and
pop
das
sbb
testb
jge
je
shrl
out
sbb
jg
cwtl
inc
inc
shll
call
aaa
lock
mov
inc
ja
push
daa
push
mov
add
das
push
xchg
lcall
loopne
imul
pop
or
cmp
mov
sbb
imul
mov
xor
xor
add
mov
push
add
cltd
jnp
push
pusha
and
or
mov
popf
xlat
ficoml
bound
jge
cmp
jae
jl
cs
test
out
insb
xchg
mov
jle
into
cmp
add
add
push
ror
scas
adc
fists
call
sub
and
mov
dec
or
lret
mov
mov
cmp
push
or
add
ret
and
into
icebp
out
in
adc
sub
push
xor
call
popa
insl
roll
loopne
xor
sbb
test
inc
popa
mov
das
inc
xor
clc
neg
lahf
out
pop
xor
cmp
out
ja
push
mov
stos
cmp
dec
arpl
push
or
xchg
ret
xchg
ss
aas
adc
bound
jb
nop
imull
mov
out
out
or
xor
mov
lods
and
cmpsb
out
xchg
jmp
xchg
and
leave
clc
int
js
or
fdivp
mov
loope
xor
or
xlat
popa
loope
out
pmulhw
stos
adc
mov
cmp
xchg
push
rcl
sbb
pushf
bound
or
mov
es
gs
adc
jge
jns
movsb
icebp
mov
xor
mov
ss
in
leave
sub
mov
and
imul
ret
pop
ja
outsb
jno
xor
jnp
in
add
sub
adc
push
call
popa
mov
lcall
ss
pop
sub
pop
pop
xchg
mov
cs
popf
aas
inc
jno
inc
xor
in
sbb
iret
and
shlb
jbe
push
mov
push
xor
daa
mul
shlb
fwait
add
fldt
repnz
push
pop
jae
icebp
xlat
dec
mov
mov
xchg
dec
adc
fwait
dec
cmp
mov
sti
addr16
jo
je
clc
push
lods
aad
jbe
imul
insb
mov
jnp
mov
fsubrp
dec
xor
stos
pop
cmp
outsb
popa
mov
enter
cmpsl
fistps
jo
add
mov
leave
dec
ljmp
sbb
jp
mov
push
inc
lret
aaa
jne
xchg
or
xchg
fcmovb
imul
add
clc
mov
into
sti
mov
notb
push
leave
cmp
dec
adc
idiv
adc
outsl
or
sarl
mov
adc
inc
mov
xchg
or
mov
daa
je
mov
in
ja
add
xchg
imull
dec
int
add
lods
fstl
ret
mov
xchg
mov
mov
dec
in
push
mov
nop
sub
repz
push
mov
out
clc
xchg
push
fmull
dec
int3
repnz
and
mov
jbe
out
sub
mov
xchg
test
js
shll
fisubrl
jmp
xlat
mov
shl
mov
push
and
ds
and
fstps
shrl
mov
push
call
stc
dec
jl
arpl
push
fcoms
adc
rorb
das
xchg
insl
andl
mov
jb
hlt
mov
mov
pop
pop
jge
ret
pop
enter
jno
xchg
mov
and
cli
pushf
jae
jle
insb
mov
lock
jnp
shr
lods
movsl
jo
pusha
jl
loopne
sbb
mov
mov
pop
mov
cmp
dec
inc
iret
notl
movsb
lcall
jno
jg
mov
aaa
out
or
mov
mov
mov
mov
push
xchg
sub
outsl
test
out
dec
sbb
push
push
sbb
movsb
mov
dec
outsl
cs
aaa
inc
test
cmp
leave
pop
shlb
popf
arpl
xor
sbb
mov
je
sub
in
imul
int
sub
add
fs
lahf
push
cmp
inc
inc
fs
shrl
xchg
mov
cmp
addr16
add
mov
or
out
sbbb
lahf
sub
pop
pop
popf
pusha
dec
ss
pop
adc
ja
dec
jl
iret
jmp
mov
cmp
sub
mov
addb
stos
adc
pop
fists
lahf
hlt
jg
loopne
inc
out
or
arpl
inc
popf
int
gs
xor
gs
fisubl
xchg
icebp
sbb
cld
sbb
mov
xlat
push
nop
rcrb
loopne
sub
aam
or
popf
mov
jo
cmpsl
sar
mov
stos
mov
pop
mov
mov
inc
sub
adc
loopne
imul
push
loope
sbb
fstpt
dec
or
lock
push
das
mov
xor
xchg
aas
sbb
inc
mov
mov
jo
fcoml
or
leave
dec
xchg
fld
fisttps
or
sbb
les
or
lea
cmp
cmp
stos
stc
fidivrl
and
aaa
pushf
lods
out
inc
test
sbb
mov
ret
sub
cmp
xor
mov
push
pusha
pop
rorb
jne
jns
push
ja
mov
and
out
notl
cmpsb
mov
and
lahf
sub
inc
enter
push
xchg
xor
scas
jo
fsubp
sub
push
add
arpl
ja
dec
push
cmp
jae
push
enter
add
je
xchg
jb
sahf
inc
js
mov
pushl
push
je
popf
dec
lret
lds
enter
jbe
lea
mov
sub
fnstcw
js
insb
push
pop
das
repnz
aad
pop
mov
std
mov
mov
inc
add
es
ror
sub
push
cmpsl
adc
repnz
dec
jno
fsubl
add
dec
test
nop
insb
inc
cltd
int
mov
dec
xor
push
fnstsw
fs
ja
mov
rcll
sub
inc
xchg
cmp
xor
pop
leave
std
arpl
mov
notb
aas
orl
insb
cmp
popf
or
loop
loop
add
pop
out
sbb
mov
and
scas
mov
sub
sub
mov
clc
test
adc
sbb
fldenv
pop
mov
cld
xchg
jecxz
fstpt
adc
inc
dec
sub
pop
mov
dec
idivb
incb
jge
hlt
leave
imul
imul
adc
dec
xchg
popf
inc
ret
pop
jg
stos
fwait
add
test
lahf
jl
push
sub
sbb
xchg
mov
hlt
adc
push
rorb
jge
push
and
out
cmc
repz
cmpl
mov
mov
out
daa
iret
cli
push
lods
mov
cmpsb
and
jg
pop
xchg
or
je
ficompl
jle
mov
and
ds
push
xchg
jbe
repz
or
mov
aaa
and
test
sbb
call
popf
loopne
add
leave
insb
out
xlat
sub
cli
or
mov
je
push
pop
add
aaa
lahf
loope
pop
test
cwtl
cltd
in
cmp
stos
push
lods
mov
aad
orb
mov
adc
lods
fbstp
std
sub
and
adc
and
inc
jno
pop
jo
jno
cmp
repnz
scas
icebp
mov
sub
mov
ds
std
pop
outsb
sbb
ss
push
cmp
das
jo
sub
push
in
in
and
sub
xor
insl
ljmp
mov
sub
add
xchg
sbb
cmc
loopne
and
ja
fstpl
push
std
xor
addb
fsts
xor
lods
cmp
mov
int
pushf
cli
xchg
je
adc
xor
mov
stc
adc
push
dec
js
mov
imul
mov
sub
fstps
negl
jbe
aad
mov
or
add
stos
sub
push
push
mov
jp
push
or
mov
adc
lock
or
mov
addr16
negb
jb
xor
test
mov
imul
lods
cmp
push
int
xor
push
in
inc
cmpsb
scas
mov
push
jae
pop
out
jp
test
mov
jb
cmp
das
movsl
out
scas
pop
sbb
pusha
fsubrs
cmp
and
and
inc
dec
cli
sahf
int
inc
lret
cmp
mov
test
dec
sub
cmp
out
mov
scas
dec
bound
decb
orps
xchg
pop
negl
add
test
lock
pusha
aad
add
aad
aas
mov
lret
pop
sahf
loope
lcall
sbb
fwait
sub
cli
loop
cmp
mov
in
xor
xchg
sub
push
das
sub
dec
add
fld1
aam
mov
rcll
ret
sbb
repz
fidivrl
rcr
mov
loope
push
push
test
dec
mov
hlt
in
clc
push
fisubrs
pusha
or
mov
int
jecxz
ficomps
xchg
decl
mov
adc
cmp
hlt
in
scas
scas
push
iret
adc
lret
xchg
cmp
dec
add
popa
sti
out
lahf
or
fwait
jnp
inc
lock
scas
add
xchg
mov
lods
loopne
lahf
pop
sbb
cltd
jl
xchg
adc
jo
shrl
dec
xorb
filds
push
push
push
fadds
outsb
inc
push
lahf
into
push
pop
pop
inc
dec
mov
cld
push
mov
addr16
sub
xchg
mov
sub
pop
int
cwtl
pop
mov
scas
mov
mov
flds
mov
add
xchg
jg
roll
lock
mov
fdivr
mov
add
in
xchg
mov
cmp
enter
jno
add
inc
jae
pop
and
adc
inc
adc
mov
popa
leave
inc
sti
xchg
jae
lods
iret
mov
clc
dec
mov
jp,pt
out
adc
push
cwtl
pop
out
adc
xchg
pop
jmp
movsl
ret
cmp
es
adc
imul
iret
lock
fistps
fwait
and
fistps
int3
mov
jnp
push
inc
stc
xor
in
push
repnz
stc
sbb
jb
pushf
or
jg
inc
enter
xor
hlt
and
and
aas
xor
out
stos
repnz
adcb
fldcw
inc
jnp
aas
ds
mov
dec
in
dec
sbb
test
movsb
mov
or
xor
push
cmpsb
or
aaa
mov
scas
sbb
xchg
dec
xchg
notl
shrl
test
out
test
pop
and
jg,pn
aad
xchg
icebp
stos
std
cmp
lods
leave
jae
dec
das
aam
pop
ljmp
and
sbb
and
sbb
adc
pop
xchg
jecxz
arpl
nop
inc
ret
inc
inc
sbb
cmpb
mov
dec
mov
and
add
mov
push
ja
icebp
js
movsb
push
or
xorb
mov
sti
cs
je
loope
mov
aas
inc
inc
xor
jge
inc
push
xchg
mov
or
jns
sub
sbb
jl
lahf
pushf
mov
add
cmp
mov
in
insl
leave
repnz
or
xchg
test
xchg
add
in
roll
ss
sbb
daa
in
sbb
mov
adc
cwtl
xchg
jg
pop
hlt
sbb
adc
sarb
rclb
popa
sub
add
xor
cld
lcall
add
xchg
lods
push
outsl
mov
outsl
xchg
outsb
je
ja
pop
bound
aaa
cwtl
aaa
sahf
lods
test
push
mull
loopne
jb
pop
xor
xchg
mov
pop
fsubr
sub
leave
sti
jno
dec
js
lds
aaa
jle
add
sbb
adc
ret
sub
cmp
repz
jmp
fbld
xchg
jno
mov
xchg
push
in
pop
inc
pop
iret
mov
cmp
pop
jl
pop
pusha
in
and
int3
mov
fisttps
mov
cmp
xchg
nopl
aas
xchg
pop
mov
inc
popf
in
rolb
push
or
lahf
pop
cli
push
arpl
mov
and
aas
insb
lcall
mov
xor
lcall
in
fdivrp
add
mul
inc
in
push
pop
stos
cli
lock
mov
dec
pop
out
xchg
sbb
sbb
inc
int
mov
cli
imul
out
arpl
dec
adc
ljmp
jmp
lods
push
jmp
xchg
adc
xor
cmp
xor
dec
or
and
xchg
sub
push
inc
sub
fs
mov
loopne
shrb
jecxz
lock
movsl
and
jl
mov
insb
and
xchg
fucomi
rorl
sub
jp
fsubs
dec
lahf
fs
iret
mov
jnp
shlb
or
jae
rorb
imul
sbb
add
in
add
push
icebp
cmpsl
pop
mov
inc
out
adcl
fwait
add
pop
in
popf
call
mov
push
jns
outsl
mov
jl
popa
insl
push
pop
loop
adc
leave
fsubp
stos
mov
sbb
orb
xchg
add
inc
jl
mov
mov
scas
cli
test
pop
popf
out
jg
mov
popf
loop
jne
nop
cmp
dec
jae
mov
addb
jb
test
push
xchg
cmp
inc
xor
les
xchg
inc
adc
mov
and
pop
repz
or
and
fcmovne
in
insl
adc
outsl
scas
xchg
fstpl
sti
adc
and
pop
das
int3
mov
pop
rcrb
icebp
push
pop
xor
enter
hlt
cld
sarb
pop
push
jb
loope
pop
sub
sub
movsl
sub
pop
test
cwtl
lcall
sub
jle
fdivr
adc
fdivs
je
subl
or
insb
xor
dec
jne
lret
test
add
clc
push
xchg
inc
push
and
in
test
xlat
jo
sarl
notl
xor
pop
cltd
stos
sub
out
mov
pop
push
scas
roll
notl
cmpl
mov
mov
mov
ss
and
bnd
mov
cmp
outsb
es
std
xchg
pop
cmp
cmpsl
sbb
out
sub
out
insb
fcomps
call
push
adc
mov
iret
inc
push
jp
into
sbb
les
call
je
or
xchg
nop
xchg
sbb
enter
mov
stos
cmp
cs
mov
push
inc
mov
ljmp
inc
push
push
push
pop
nop
dec
pop
pop
adc
sub
stc
mov
fcompl
inc
rcrb
push
insl
pusha
mov
aaa
push
inc
or
sbb
fsts
and
jb
xchg
mov
jb
add
mov
int
shll
lods
in
dec
pop
out
cmp
enter
adc
daa
outsb
cmp
cltd
xchg
lret
jp
stos
mov
push
out
aam
pusha
in
cmp
mov
movsl
bound
mov
add
es
pop
stos
sti
adc
fwait
pop
bound
adc
cld
push
bound
mov
mov
dec
xor
mov
push
lahf
xchg
dec
adc
je
sub
jo
pop
jo
xchg
jo
jecxz
inc
xor
rcrb
pop
lods
push
loope
imul
lock
adc
mov
out
js
xchg
push
xchg
mov
sub
mov
test
push
cmp
xchg
in
int
cmp
adc
dec
sub
fwait
jae
inc
xchg
jae
rorb
push
mov
xor
push
push
movsb
shll
das
rorb
sti
in
fldl
mov
dec
lds
or
cmp
call
cmp
jge
iret
xchg
add
pop
xchg
fists
pop
cmp
enter
mov
aam
jl
push
inc
aaa
aaa
data16
fisttpl
xchg
fcmovb
popf
cli
sub
mov
pop
pop
xor
movsb
in
insl
aam
or
sub
mov
adc
rcrb
subb
push
jne
push
scas
and
cmp
xlat
inc
lds
int3
cmpsl
out
loop
mov
es
sub
sub
add
push
sub
addb
adc
and
addb
les
clc
gs
and
adc
mov
or
enter
repz
pop
lahf
aad
sub
lahf
aad
adc
adc
cld
or
mov
fisubl
fadds
les
adc
and
jmp
iret
add
xchg
and
pop
cli
dec
and
or
bound
popf
adc
fnsave
test
popf
push
popf
std
or
ja
and
inc
jl
dec
enter
mov
mov
fs
ja
sbbl
movsl
sbb
in
mov
pop
inc
adc
imul
cld
jp
jbe
add
rorb
loopne
lret
lods
pop
cmp
jmp
jle
mov
push
jno
sbb
mov
aad
mov
sbb
pop
xchg
pusha
pop
in
lret
pop
sub
xor
adc
mov
ret
incl
out
je
imul
mov
and
jge
cmc
adc
inc
adcb
fsubrl
mov
clc
sub
and
xor
xchg
jmp
pushf
testb
or
loope
inc
or
add
xchg
mov
inc
bnd
push
add
popf
loop
or
push
dec
mov
sbb
xchg
jb
sbb
sub
mov
add
push
scas
roll
test
shrb
movsl
dec
fwait
stos
mov
dec
sbb
mov
mov
rcrl
jo
or
ds
and
push
imul
stc
push
test
nop
movsl
cmp
pop
out
jle
aaa
sub
or
push
push
fs
dec
xor
add
fwait
ljmp
lcall
shrb
andb
jo
ja
add
sub
in
xchg
and
lahf
lret
popl
pushf
cmpsl
sbb
pop
xor
push
add
mov
aam
push
fwait
enter
movsb
inc
arpl
rclb
mov
mov
shr
sbb
int3
and
enter
imul
out
inc
repnz
inc
fistpll
xlat
stos
sbb
lods
lret
ret
jg
repnz
popa
xor
popf
add
fbld
mov
ja
pop
push
pop
add
xlat
mov
shll
mov
mov
xor
mov
mov
xor
push
mov
mov
cmp
pop
pop
adc
add
adc
int
cmp
xor
jmp
popa
cmp
push
testb
add
test
xor
lahf
sbb
lcall
sub
inc
addps
loopne
movsb
inc
cmp
xchg
lock
aaa
push
sub
cmp
xchg
mov
push
int
lret
push
test
sub
ret
mov
xchg
cltd
int3
sub
test
xor
adc
imul
lods
mov
mov
xor
xor
adc
shr
test
mov
xlat
xor
or
das
iret
fimull
jae
clc
stos
adc
adc
mov
xor
mov
fs
push
shl
in
sub
addr16
lds
inc
mov
push
or
mov
pop
bnd
jb
mov
mov
ret
fidivrs
mov
and
fdivrs
mov
cmpsl
cltd
and
loop
xchg
shr
mov
jle
stos
cmp
mov
cmp
xor
std
imul
sbb
lea
jmp
xor
ljmp
mov
pop
scas
fdivrs
xchg
out
rolb
les
xchg
jnp
xchg
popf
cld
mov
pop
fldl
int3
xorb
out
lahf
shr
dec
idivl
out
stc
or
cs
test
hlt
jmp
sbb
mov
outsb
or
dec
push
pop
mov
xchg
ret
dec
adc
lods
jmp
mov
mov
out
lret
imull
out
sbb
dec
inc
xchg
adc
mov
imul
imul
mov
movsl
sahf
add
mov
sub
insl
inc
pop
cmp
test
pusha
hlt
popa
lock
pop
in
popf
movsb
icebp
fstpt
sti
test
push
test
cmp
and
push
cltd
ljmp
cltd
push
sub
out
fldt
xchg
js
add
push
adc
mov
cwtl
outsb
or
insb
cmpsl
cmp
xorb
mov
repnz
fwait
movsl
cli
inc
mov
cmp
icebp
fldt
imul
xchg
inc
sub
dec
mov
inc
hlt
negl
or
dec
jmp
dec
push
mov
push
pop
test
cmpsl
jp
sahf
ret
push
test
nop
or
sbb
jae
mov
dec
call
or
sbb
call
xchg
enter
insl
pusha
mov
add
clc
adc
pusha
std
mov
and
jbe
adc
mov
int
orl
xor
enter
lds
dec
xor
mov
sbb
xor
cmpsb
mov
and
aad
sbb
divl
clc
inc
incl
repz
lods
mov
lock
cmp
shl
out
or
call
pop
ret
mov
sbb
xchg
add
add
push
sub
inc
jp
js
lahf
mov
cmp
movsl
cwtl
out
jne
dec
movsl
fimull
jg
and
or
xor
mov
push
dec
les
ljmp
sub
dec
xchg
push
xor
lcall
and
inc
test
loope
inc
rcrl
xchg
ljmp
adc
aaa
push
adc
stos
popa
dec
push
leave
xchg
cs
data16
imul
add
les
int
xor
shlb
inc
cs
or
lea
popa
push
inc
shl
dec
xchg
add
ljmp
mov
lds
pop
aas
jp
or
adc
imul
mov
outsl
iret
inc
mov
lahf
lods
pop
bound
and
pushw
mov
sahf
fcoml
jo
lods
and
jbe
nop
mov
nop
xchg
outsl
fimuls
inc
inc
add
imul
pop
xchg
ret
cmpsb
ret
jg
jnp
icebp
ljmp
ret
int3
pop
mov
sub
hlt
clc
dec
or
lret
cltd
int
and
add
insb
cwtl
mov
push
mov
popl
test
jecxz
pop
push
mov
xchg
xchg
ret
cmp
mov
push
add
bound
push
pop
imul
xlat
inc
sub
lret
and
mov
jp
idivl
addl
int3
addr16
xchg
testb
jp
inc
push
and
and
dec
subb
xor
push
xor
or
mov
das
into
mov
sar
xor
inc
dec
push
dec
and
push
push
mov
aaa
jmp
and
xchg
jnp
movsb
pusha
xchg
lea
das
addr16
jb
xor
lcall
mov
rorl
shlb
es
ja
pop
lret
pusha
lods
aaa
fstl
or
scas
sbb
inc
inc
ja
data16
pop
scas
mov
std
adc
dec
repnz
push
stos
sub
lock
sbb
fwait
leave
mov
enter
in
sub
jge
or
pop
xor
dec
xlat
faddl
test
jecxz
mov
imul
popf
or
stos
mov
shll
pop
insl
push
addl
add
pop
call
jbe
sar
arpl
fdivl
mov
outsb
adc
mov
mov
repnz
mov
mov
jns
negb
or
jp
popa
xor
in
jne
ret
insb
mov
mov
inc
loop
int3
mov
adc
lock
xchg
add
lret
cmp
inc
aad
lret
rcrb
imul
cmp
fs
js
loopne
push
push
push
inc
xor
dec
into
push
pop
sahf
cmp
and
sbb
dec
fisttpl
stos
pop
lret
ljmp
call
xchg
add
dec
mov
pop
and
subb
pop
cmp
stc
sub
aaa
sbb
lcall
fucom
pusha
shrb
mov
fmuls
mov
in
jae
rolb
enter
addr16
sahf
pop
bnd
pop
add
mov
cmp
adc
sub
xchg
cmp
xchg
push
add
mov
jne
pop
jge
sbb
inc
scas
aaa
popf
mov
push
stos
xorl
shll
shlb
dec
int3
stc
push
jae
cmc
insl
cmc
jmp
stos
je
sti
push
xor
lds
adc
push
inc
fs
nop
and
xchg
or
pop
enter
mov
pause
pop
movsl
outsb
clc
mov
mov
pop
mov
dec
add
insb
out
aas
icebp
fsubl
insb
fmull
leave
pop
mov
jnp
nop
and
cs
dec
mov
lock
xor
lret
mov
adc
xor
sti
dec
xchg
mov
xchg
inc
cs
push
adc
out
insb
xchg
inc
lock
inc
aad
push
gs
inc
out
mov
or
pop
hlt
xor
rcl
cmpsl
mov
nop
daa
dec
pusha
scas
stos
hlt
add
lret
sub
rorb
out
jb
into
add
repz
dec
mov
sbb
leave
pop
or
imul
pop
jle
and
and
cmp
test
shl
ljmp
fs
insl
mov
mov
or
push
jmp
push
aad
lahf
cmpsb
xor
adc
decb
xchg
xchg
rorb
sbb
dec
add
in
stos
pop
mov
loope
sub
or
xchg
jge
sbb
push
mov
mov
push
stc
push
sbb
dec
lods
jns
inc
stc
xor
loop
mov
xchg
add
jne
cmp
xchg
mov
inc
dec
sbb
xchg
pop
test
adc
mov
sub
cld
insb
xchg
je
mov
fadds
mov
cld
lret
and
lret
dec
dec
into
mov
cmp
jecxz
push
mov
push
xor
jl
mov
inc
jae
and
xchg
mov
out
add
sbb
mov
andl
jg
cwtl
repnz
adc
bt
lods
cmpsl
dec
sbb
ljmp
pop
sub
dec
nop
inc
jecxz
daa
mov
cli
std
adc
and
xor
pop
xchg
shl
pop
xor
lea
cwtl
sbb
sbb
testl
or
sub
xchg
jbe
cs
lods
mov
and
enter
aad
jbe
clc
push
inc
insl
or
push
cmp
xchg
imul
loopne
shrl
mov
les
aam
fwait
mov
int
ja
sbb
scas
jno
stos
mov
sub
ret
das
fstl
lcall
test
xabort
sbb
mov
lods
inc
mov
dec
adc
pop
add
jge
repz
cli
andl
jge
jbe
pop
jae
movsl
and
arpl
or
sbb
add
and
mov
sub
dec
ja
or
cmp
push
movl
loop
iret
lods
pop
add
jge
inc
cmc
fnsave
subl
repnz
cmp
lret
in
negl
int
sbb
or
test
fsubs
iret
mul
push
rcrl
mov
sahf
cltd
adc
outsb
jle
ficomps
subb
fnstenv
lahf
jl
xor
cmpsb
inc
mov
sub
jae
push
sti
mov
xchg
adc
add
mov
popa
lcall
sahf
pop
pop
pop
xchg
fldl
pushf
ja
inc
aad
mov
lea
cmp
mov
in
jae
pop
mov
sbb
pop
push
aaa
xlat
shll
sbb
outsb
jo
loopne
xor
cmp
xor
aas
adc
jl
or
in
insb
cld
cltd
js
out
pushf
hlt
leave
cmp
outsl
sahf
popf
jmp
cmp
sbb
sbb
adc
movsb
addr16
enter
sub
call
std
or
cs
cmp
cmp
hlt
int
pop
add
movsl
add
adc
jae
rol
jae
add
adc
push
push
repz
push
jb
xor
jecxz
call
nop
push
repnz
loope
bound
aas
mov
or
dec
pop
inc
add
dec
or
xor
mov
pop
pop
mov
and
inc
pop
inc
inc
mov
sub
or
push
inc
stos
idivb
or
push
and
or
xor
mov
stos
aaa
xchg
andl
inc
daa
test
fsubl
xchg
sti
mov
pop
aam
cltd
dec
add
clc
xchg
lea
jb
test
lea
shr
dec
hlt
out
lret
es
mov
aam
in
cmp
es
adc
dec
sbb
std
movsb
dec
hlt
push
fs
adc
inc
adc
push
out
loop
iret
aaa
cwtl
xlat
pop
xor
divl
repnz
cltd
push
mov
pop
std
dec
add
pusha
out
out
fstp
and
loop
stos
insl
push
call
push
data16
int
jno
faddl
fs
scas
push
mov
push
push
mov
dec
test
dec
mov
nop
xor
adc
inc
dec
adc
cmp
popa
je
push
pop
repz
stc
jg
sub
push
or
aas
push
scas
or
xor
out
xor
repnz
movsb
fisttpll
mov
add
xchg
lods
xlat
test
and
cli
repnz
dec
pushf
enter
outsb
ret
jns
stc
and
sbb
loopne
mov
in
cmp
dec
sbb
je
xor
sbb
fs
cmp
aam
pushl
pop
xchg
fidivs
scas
lea
sub
mov
es
jne
mov
ret
jle
cmp
lock
pop
gs
sbb
sti
movsl
inc
sti
sahf
dec
arpl
imul
in
daa
ja
jp
cmpsl
jge
mov
out
jns
adc
popa
adc
adc
mov
xchg
std
in
leave
lods
push
xor
andb
in
das
inc
shll
int3
or
adc
test
mov
popf
cld
sbb
dec
inc
in
arpl
test
sub
ds
shll
popf
cwtl
stos
ja
jecxz
push
lret
addl
movsl
mov
fs
dec
xor
cmpsl
repz
inc
xorl
int3
or
out
sbb
out
push
sub
sbb
lods
jg
sbb
cld
insb
pop
mov
repz
inc
cs
xor
push
movsl
xor
dec
sub
stc
mov
out
add
outsb
ljmp
gs
and
push
or
push
jo
jle
lds
sbb
dec
imul
sbb
lcall
pop
adc
pushf
xor
insb
add
sbb
xorb
out
repnz
jmp
jnp
test
aas
out
mov
pushf
cmpsb
push
mov
mov
or
mov
ret
std
js
imul
iret
sub
push
sti
addr16
mov
dec
cli
test
dec
insb
movsl
cmp
dec
outsl
insl
xor
pushf
mov
pushf
or
dec
lods
or
pop
mov
cli
cmp
xor
iret
sti
dec
jecxz
aad
scas
sub
cmp
out
sbb
fcoms
or
mov
mov
xlat
inc
pop
adc
cmp
icebp
ljmp
jmp
sub
aad
cmp
mov
jno
popf
push
inc
andb
sbb
sbb
add
sub
xchg
clc
loope
repz
popf
sbbb
push
push
xchg
loopne
sahf
fldcw
mov
stos
cmp
insl
ficomps
push
xor
in
push
add
loop
and
stos
aam
xor
stos
lds
mov
sbb
repz
lods
imul
aad
icebp
daa
aad
lods
sbb
fnsave
ret
push
pop
rorb
int3
mov
push
negb
shrl
add
adc
push
mov
std
jne
sbb
cmp
push
pop
xchg
jbe
stos
je
sub
inc
mov
cmpb
les
sub
fs
push
cmpsb
cs
filds
and
leave
je
mov
in
ret
pop
sub
sub
shll
shll
sub
iret
dec
pop
sub
push
sbb
jp
push
into
in
dec
ljmpw
orl
xor
pop
loope
mov
inc
sub
mov
sub
and
fwait
repz
lcall
sbb
std
pop
cmp
mov
jge
aaa
pop
and
pop
adc
adc
or
popf
and
cld
jbe
mov
std
cmp
lock
rcll
push
cwtl
push
push
lds
lds
mov
xchg
mov
or
in
xorb
mov
sub
push
rcll
mov
sbb
mov
pop
xor
mov
adc
xlat
dec
jmp
jb
push
scas
in
hlt
jne
iret
mov
inc
or
jnp
inc
mov
add
lods
xchg
into
mov
or
inc
sub
adc
ja
subl
outsl
mov
xor
retw
cltd
popf
fsub
fcmove
pop
test
mov
fs
jno
push
adc
sbb
inc
jge
push
hlt
scas
jmp
ds
pusha
rcr
fldl
mov
push
sbb
bound
mov
jo
inc
stos
lret
imul
cli
sbb
mov
in
test
iret
adc
cmc
mov
mov
xor
fistps
push
icebp
cmpsl
scas
inc
imul
jg
mov
loop
leave
sahf
andb
movsb
push
lea
add
lea
testl
cs
and
movsb
adc
repz
mov
sbbb
es
xchg
pop
jbe
outsl
inc
cltd
jns
insb
loopne
insl
add
jnp
gs
inc
sbb
and
fs
push
daa
jp
adc
sbb
adc
jo
pusha
repz
jmp
rolb
jecxz
sub
fwait
dec
sbb
mov
push
lods
sbb
fs
add
lahf
outsb
xlat
mov
dec
call
int3
or
negl
jmp
aaa
lods
jne
outsl
inc
push
jmp
lcall
repnz
arpl
jns
notb
sub
cld
nop
je
mov
data16
pop
in
stos
xchg
push
cltd
jecxz
iret
repz
inc
rclb
fdivrp
mov
data16
mov
push
icebp
and
bswap
cli
push
movsb
lret
add
mov
negl
sbb
inc
xchg
and
mov
gs
cltd
xor
stos
mov
inc
cli
out
and
cwtl
adc
fidivrs
push
das
pop
or
xor
inc
push
arpl
dec
mov
inc
xor
scas
or
add
pop
xchg
xchg
out
cmp
rorl
popf
and
mov
mov
mov
leave
sarl
gs
aaa
sbb
sub
scas
lahf
clc
xchg
sbb
fidivl
movlps
pop
xchg
movsl
push
push
arpl
out
sbb
repz
in
out
ret
ja
lds
cmp
push
lock
jecxz
jge
mov
popf
sbb
push
inc
mov
push
imul
inc
xor
add
imul
aam
xor
les
sub
ljmp
mov
addl
and
push
insb
and
jo
or
std
mov
cmp
ret
ret
ljmp
xchg
dec
adc
ljmp
and
lods
rcr
or
fbstp
lods
movsl
int3
xor
bound
add
dec
sbb
orps
cmpsb
cmp
mov
jns
and
xchg
test
mov
adc
out
or
addl
cltd
jae
mov
sbb
lock
daa
ret
daa
pop
popf
adc
cwtl
and
dec
or
xchg
push
cmpb
imul
lret
mov
mov
lret
out
xchg
inc
lret
rcr
in
and
or
outsb
or
mov
cmp
mov
sbb
xchg
add
pusha
adc
push
je
cmp
push
jnp
pop
lret
sub
lret
jecxz
cmp
outsb
push
jbe
hlt
mov
mov
mov
ret
inc
fwait
push
xchg
inc
and
ss
push
mov
pop
add
sub
fisubl
jecxz
and
adc
insb
push
or
stc
mov
ds
mov
js
and
out
cli
mov
shrl
imul
lahf
rep
stos
add
insb
in
mov
hlt
push
mov
sahf
dec
aaa
xor
dec
clc
xor
imul
andb
mov
push
test
ffree
pop
xchg
or
loope
push
inc
mov
lret
sbb
mov
mov
adc
push
out
dec
scas
movsb
pop
pop
inc
mov
in
fs
dec
sub
lahf
pushf
fldcw
cmpsb
test
stc
cmp
xor
push
xchg
jnp
outsl
cmc
out
aaa
dec
les
cmp
loope
push
inc
mov
mov
fdivs
lock
iret
push
call
add
aam
icebp
mov
je
and
sbb
outsb
fs
cltd
sub
in
and
movsl
divl
add
inc
int
aaa
cmc
loope
pop
add
loope
cmp
mull
rcrl
lret
fdivs
pop
std
out
test
mov
sub
fs
imul
ror
cmp
in
mov
push
add
cmpsl
cli
rcrl
idivb
push
jne
sub
lret
daa
aas
and
clc
jmp
mov
out
or
inc
gs
cs
xchg
mov
aaa
inc
or
sub
lods
scas
mov
sub
adc
insl
lret
inc
fs
lret
out
push
ret
inc
jmp
sbb
in
lcall
add
jno
sub
xchg
ss
push
dec
lahf
shll
adc
cli
jb
mov
push
mov
dec
jp
sbb
mov
adc
cmp
jecxz
out
pop
xchg
loopne
lahf
jge
adcl
stos
and
cld
sahf
dec
mov
dec
call
push
xor
push
mov
cmp
jmp
ret
fiaddl
and
push
out
dec
dec
sub
rclb
sarl
testb
icebp
mov
or
popa
mov
mov
adc
rolb
sub
popa
loope
mov
fsubrl
mov
pop
popf
add
les
out
mov
cmpl
les
or
ret
sbb
cs
inc
ret
cld
adc
jnp
sar
push
test
pop
push
test
and
gs
push
sbb
mov
clc
je
stos
shrb
mov
mov
lahf
popf
out
aaa
pop
scas
cmc
or
xor
mov
cmpsb
hlt
dec
lret
fstl
xchg
mov
and
pop
adc
bound
jns
sbb
fmul
jl
xlat
xor
ret
and
and
pop
fstpl
in
sub
jmp
push
mov
cld
out
lret
insb
rol
pop
pop
adc
pop
and
sub
cmp
push
out
imul
jp
out
cmc
out
inc
rcl
mov
sbb
lahf
sub
add
subb
adc
mov
scas
lock
popa
sub
jecxz
cwtl
mov
inc
fisubrl
fbld
cmp
xchg
pushf
getsec
jp
xchg
pop
pop
test
jle
lret
je
jnp
mov
and
push
mov
mov
inc
insb
test
inc
push
cld
inc
jo
test
cmp
xchg
or
add
lret
inc
adc
xor
movsl
add
pop
movsb
jmp
xchg
dec
pop
dec
push
sub
ret
cmp
sahf
mov
insl
jecxz
sti
mov
outsb
movsl
inc
imul
mov
mov
push
lods
and
fcoms
std
jecxz
pop
xchg
pop
les
mov
js
sbb
adc
lock
unpckhps
cltd
pop
int
pusha
arpl
les
shll
pop
pop
lds
aas
leave
int3
pop
imul
mov
adc
push
xor
mov
aas
xchg
jnp
push
icebp
inc
lcall
loopne
mov
add
pop
xor
pop
cmp
push
pop
and
arpl
stc
adc
ss
and
lds
cmp
dec
imul
or
pop
test
out
test
enter
push
and
cmpl
stc
inc
loopne
int3
or
pusha
push
or
sub
sub
fstpt
dec
jbe
enter
push
shl
mov
in
lock
aam
jno
pushf
add
addl
rolb
cmp
js
cltd
pop
scas
inc
sbb
xor
mov
movsb
ss
stos
bound
movsl
insb
jbe
sub
out
movsb
mov
test
cmp
hlt
test
inc
push
fsubs
mov
add
aas
ja
add
jmp
or
das
push
mov
mov
and
mov
xor
js
inc
dec
fisubrs
loope
cli
in
push
sbb
lret
push
sub
jae
pop
add
pop
repnz
pop
jb
insl
movsl
js
push
ljmp
xchg
mov
push
mov
shrl
and
mov
add
mov
out
xor
jno
or
jnp
pusha
cmp
xchg
and
xor
rorl
jl
in
andb
fwait
insb
push
jge
jns
jle
mov
jecxz
leave
ret
outsb
mov
dec
xor
enter
addr16
stc
inc
mov
out
pushf
cwtl
js
push
push
icebp
xchg
aaa
xchg
mov
cmpsb
in
xchg
sti
and
dec
fcomps
mov
fwait
mov
dec
jle
pop
loope
sub
fsubrp
in
sub
int3
rcrl
rclb
cmpsl
scas
and
andl
cwtl
lret
mov
das
adc
xor
mov
dec
scas
xor
incb
xchg
mov
dec
daa
daa
ljmp
fistpll
imul
loope
ljmp
call
repz
in
xor
cmp
out
notl
mov
xor
pop
xchg
aam
mov
push
rorb
popf
mov
mov
cmp
push
loope
es
bound
ficoml
inc
jge
and
jg
add
movl
and
dec
mov
xchg
or
inc
push
inc
insb
or
cmp
sub
loop
jns
mov
mov
sbb
jnp
dec
pushf
shr
nop
test
fadd
out
and
dec
inc
and
push
cli
in
jge
adc
enter
or
adc
xor
mov
sti
shrb
ss
cmc
nop
lcall
jl
mov
push
pop
jae
jmp
filds
mov
jecxz
fcomps
jne
push
test
daa
in
repz
xor
cltd
xchg
fisubs
aaa
sbb
adc
jo
sub
test
jmp
outsl
cmpsb
enter
fistps
inc
ds
pop
clc
or
lods
inc
gs
jnp
dec
mov
mov
push
rcll
jne
lock
or
push
fisubs
sbb
fistpl
dec
stos
push
clc
push
lea
sub
hlt
lahf
sti
out
out
add
cmp
filds
cmc
dec
push
rolw
xlat
repnz
pop
pop
movsb
cmpsb
pop
cwtl
icebp
pop
test
mov
movsl
sbb
leave
mov
or
std
pop
and
pop
arpl
sub
push
mov
cmp
sarb
iret
sarb
sub
xlat
or
cmpb
mov
pop
inc
xchg
loopne
add
pop
lods
lahf
mov
jbe
ds
popf
inc
das
push
fs
notl
push
push
cmp
loopne
jnp
adc
js
pop
or
int
mov
cld
nop
std
sbb
call
sub
mov
repz
js
lret
push
enter
dec
xlat
inc
cmpsb
mov
mov
adc
or
loopne
repz
push
xor
xchg
sbb
sub
xchg
xchg
outsl
movsl
mov
mov
cmp
fistpll
fildl
xor
dec
bsf
xor
push
xorl
xchg
inc
jp
nop
js
jb
push
cmpsb
aaa
inc
ret
in
and
add
dec
cmp
adc
scas
repz
or
mov
and
sub
push
pushl
jecxz
les
dec
inc
incl
sub
sub
mov
leave
xorl
pushf
mov
lds
dec
sub
imul
insb
sbb
rcrl
cltd
and
mov
cmp
mov
fadds
mov
data16
fcompl
fidivrl
push
subl
mov
enter
cmp
inc
adc
cld
push
ja
xchg
gs
push
push
data16
cltd
pop
push
xchg
mov
notl
and
sbb
dec
adcb
call
sub
xchg
out
sbb
cmp
sub
push
shlb
loopne,pn
movsb
cmc
test
dec
fst
out
lret
mov
nop
push
push
jno
pop
fistpll
mov
ss
xlat
mov
ror
mov
aas
adc
cmp
mov
add
jbe
sub
ljmp
stos
pop
dec
hlt
test
mov
xchg
sbb
clc
shrl
pop
insl
xlat
mov
lret
pop
cmc
jg
xor
jno
insb
mov
call
out
push
nop
dec
or
add
fcmovb
adc
mov
fisttpll
outsl
mov
adc
push
jmp
adc
and
inc
sub
ljmp
loopne
aam
or
popaw
dec
mov
cmp
std
sti
ret
mov
mov
cmp
add
mov
cwtl
arpl
enter
fldlg2
gs
pop
out
sahf
dec
xchg
scas
xchg
in
clc
test
xchg
fst
or
dec
push
mov
mov
xchg
mov
sti
imul
mov
fdivs
outsb
jo
pop
mov
cmp
adc
pop
mov
cmpb
ret
or
fwait
mulb
repnz
or
icebp
sub
daa
push
or
out
pop
cmp
aaa
sahf
and
sbb
adc
xlat
dec
or
pop
mov
sbb
or
shlb
aad
mov
test
andl
movsb
popf
push
and
push
push
pop
lea
lret
ss
test
sbb
lods
enter
scas
and
sub
jp
xor
shrl
outsl
adc
cmp
mov
cmp
dec
xor
pop
push
lods
fsubl
cmp
shl
insl
or
or
or
jno
mov
cmc
decl
dec
sahf
mov
orl
push
fimull
js
add
es
add
lds
test
fisubrl
test
outsb
pop
daa
mov
mov
inc
add
xor
jb
cmpsl
cmp
and
jae
sti
fisubrs
inc
mov
and
mov
js
loope
out
lods
push
push
mov
int3
and
in
cmp
mov
and
sub
jnp
js
fiadds
inc
lcall
add
ret
pop
mov
in
pop
or
adc
std
fs
insl
mov
loop
insl
pop
adc
xchg
add
dec
and
sbb
aas
scas
xchg
mov
push
je
in
rorl
hlt
mov
push
lcall
mov
adc
je
ffree
adcb
addr16
xchg
enter
jnp
pop
call
call
mov
js
and
aas
lods
loopne
jge
or
and
mov
je
mov
pop
cli
jne
repnz
stc
adc
jl
pusha
push
add
adc
nop
pop
out
mov
les
loope
out
out
pop
ret
pop
add
jae
mov
mov
repnz
push
sbb
or
mov
lret
lret
vphaddbd
push
sbb
mov
inc
dec
dec
inc
dec
mov
out
ja
popf
lret
or
fwait
or
sub
jo
lds
sbb
movsl
push
stos
pusha
mov
xchg
mov
test
repz
and
ss
gs
xchg
and
ret
or
das
inc
pop
add
int3
add
insb
sbb
mov
clc
sbb
shll
pop
lea
test
xor
test
clc
inc
jmp
test
pop
hlt
fists
int
pushf
mov
sbb
cmp
lret
xchg
inc
test
stos
dec
les
pop
sub
mov
pop
dec
mov
arpl
dec
pop
int3
push
adc
pop
pop
je
mov
sbb
sbb
insl
sbb
jl
stc
in
mov
xchg
mov
inc
xlat
cmp
dec
aam
movsl
pop
push
out
std
push
mov
and
jae
frstor
outsb
mov
je
push
push
xchg
jns
inc
repz
pushf
insb
mov
ror
sub
cmp
and
xchg
data16
scas
stos
in
lcall
aad
fcompl
loop
adc
shlb
rorb
cmp
fs
pop
leave
push
loop
rcll
add
loopne
mov
jp
push
and
dec
dec
inc
dec
add
in
dec
aas
pop
mov
fwait
mov
cmp
or
sti
test
rep
and
out
rclb
xchg
add
cld
into
outsl
xchg
xor
jl
or
sbb
pop
and
test
cmpsl
jmp
xor
scas
mov
cmp
scas
pop
add
ret
push
mov
and
inc
in
jl
mov
test
inc
jo
icebp
popf
mov
xor
cwtl
test
mov
movsb
inc
inc
inc
leave
mov
adc
pushf
pushf
fadds
lret
lods
xchg
vpshlq
pop
xchg
sub
jnp
loopne
jbe
inc
jb
dec
jge
sti
pusha
and
js
add
vprotb
cmp
int
mov
push
faddp
dec
lcall
mov
sbb
lret
mov
sub
cmpsb
cmpsl
ja
fisttps
jne
or
mov
sbb
pop
pop
jge
adcl
dec
inc
or
xchg
fld1
insb
sub
mull
in
or
les
or
add
ds
xor
add
in
mov
jle
call
inc
sub
stc
jge
out
xor
into
add
cmpl
int
fcmovne
xchg
sbb
idivb
add
jecxz
sub
mov
sbb
mov
adc
int
jno
cld
fwait
call
sbb
fcoml
js
and
jno
sbb
test
lahf
ss
sbb
enter
pop
hlt
sarb
push
cmpsb
jnp
inc
fsubl
repz
sbb
loopne
hlt
aaa
mov
rclb
in
imul
adc
and
dec
lods
or
pusha
enter
xchg
je
and
or
adc
jmp
mov
sarb
ret
push
lahf
and
push
movsb
push
push
dec
or
add
adc
mov
fcoms
sbb
push
sbb
out
mov
mov
dec
ss
jns
cmc
inc
or
imul
roll
sub
cs
or
mov
or
mov
shll
jp
jns,pn
xor
mov
add
pop
dec
ds
stos
dec
scas
shrl
dec
bound
push
xchg
mov
mov
mov
in
out
sub
sbb
arpl
sub
movsb
cmp
ret
mov
cmp
jp
bound
lea
loop
sub
loop
push
adc
test
adc
repnz
mov
xchg
adc
cli
subl
mov
int3
jae
leave
mov
push
mov
repnz
pushf
dec
jnp
add
dec
jne
out
lret
outsl
add
mov
dec
dec
movsl
xor
mov
aas
jae
and
bound
cmpsl
outsb
out
xchg
push
pusha
or
shl
adc
ljmp
mov
arpl
cmp
sub
xor
outsb
pop
outsb
xchg
popa
mov
xor
sarb
test
fadds
cmp
rcl
sarl
dec
push
in
jmp
les
jbe
jb
fcompl
ss
push
pop
leave
push
mov
fcomps
mov
xor
dec
imul
fstl
scas
ret
imul
dec
or
sub
ret
or
in
push
je
xor
int3
xor
mov
pop
push
or
inc
inc
std
mov
data16
sahf
push
shlb
in
mov
sbb
jecxz
or
cli
pop
ds
mov
adc
push
xor
sbb
sbb
pop
mov
fcompl
adc
inc
mov
and
jge
sub
adc
cmp
rcll
ret
inc
mov
or
imul
sahf
dec
aas
inc
pop
fsubrl
xchg
rolb
shll
popf
scas
std
popf
mov
mov
xchg
ljmp
jbe
xchg
mov
jmp
add
and
xor
add
movsb
push
shll
cmpsl
jns
sub
and
imul
stos
pop
pusha
push
aaa
das
and
push
mov
js
popa
or
xchg
jecxz
aaa
pop
dec
sub
insb
movsb
imul
scas
xchg
cmp
fidivs
add
or
mov
inc
mov
bts
adc
mov
inc
sbb
mov
loopne
push
add
aas
sbb
push
mov
jbe
or
lock
cmp
xchg
ss
and
cs
cmpsb
pushf
les
sub
fisttpl
dec
xchg
mov
pop
mov
out
sub
sbb
shlb
cmp
inc
mov
lret
jl
aaa
inc
xlat
mov
js
ss
cmp
pop
mov
xchg
call
mov
je
ret
xchg
inc
mov
jg
fidivl
cmovae
mov
mov
mov
mov
cltd
sbb
sbbb
mov
cmpsl
rcrl
pop
and
cmp
in
int3
xor
fisttps
jnp
pop
xor
into
inc
mov
or
pop
cmc
addr16
fsts
lret
sbb
sbb
xchg
dec
push
in
and
add
sub
mov
pop
xchg
pop
movsl
es
jge
in
dec
xor
add
mov
fwait
mov
adc
stc
xchg
dec
loopne
mov
test
aaa
inc
lcall
lret
sub
sub
je
add
add
pushw
fcmovu
movsl
inc
sub
xchg
push
stos
repnz
das
xchg
lret
adc
adc
xchg
cmp
test
ror
in
sahf
rorb
xchg
lds
rcl
xor
and
dec
fs
test
add
arpl
sub
xor
clc
push
sahf
pop
les
lods
jb
out
cmpsb
jecxz
xchg
out
popl
xchg
push
mov
paddw
outsl
xor
call
jo
inc
test
lods
popf
xchg
sub
mov
inc
pusha
sbb
adc
sub
fs
test
cmp
mov
fidivs
jg
in
dec
shlb
xchg
aam
lock
jno
sbb
bound
nop
aaa
in
sahf
aas
and
lea
orb
jmp
jmp
push
adc
and
in
sub
sbb
ret
xchg
cld
imul
pop
or
je
jmp
imul
sub
test
nop
out
and
ds
dec
pop
scas
loopne
jp
xchg
popf
dec
imul
jb
adc
cmc
lret
jno
mov
xchg
push
fldl
dec
lods
std
in
shlb
xchg
xorb
arpl
es
lea
hlt
or
sbbb
lock
xorl
imull
aas
push
pushf
fidivl
insl
lock
call
dec
cmp
xchg
mov
push
es
adc
pop
sbb
jns
inc
cmp
push
mov
hlt
aaa
nop
push
push
lret
mov
or
xchg
pop
jns
fdivl
mov
daa
sarb
cmp
mov
loopne
sbb
mov
and
in
pop
push
leave
dec
jae
lcall
sbb
ds
mov
out
lods
sub
pop
or
cmp
lds
bound
mov
adc
rcrl
sub
and
cmpsl
hlt
add
inc
mov
ret
cmp
pop
stos
mov
push
test
xchg
fistl
lock
jmp
aaa
clc
stos
push
je
mov
popa
xor
cmpsl
xchg
es
mov
in
push
pop
lret
push
sbb
pop
cmp
cwtl
sub
or
repnz
sbb
scas
sbb
mov
adc
lods
xchg
pop
jle
lds
mov
jbe
std
mov
scas
add
pop
lea
iret
xchg
and
shrl
mov
outsl
rolb
cmp
jns
add
addr16
out
sub
lods
divb
std
ror
mov
push
xor
jbe
adc
or
pop
inc
popa
dec
ficomps
adc
inc
sub
mov
push
xchg
ss
jbe
lea
mov
repnz
jbe
popf
sahf
pop
or
idivb
cli
cmpsb
aad
inc
filds
sub
xchg
xchg
mov
dec
rolb
xchg
jo
adc
shlb
adc
in
push
arpl
pop
jle
add
xor
sub
or
int3
xor
add
inc
lret
lods
cmpsl
pop
in
or
test
dec
inc
fwait
jecxz
xchg
fnsetpm(287
mov
out
jg
xchg
fs
push
xlat
dec
dec
mov
enter
lcall
popa
insb
xchg
ss
insl
test
cmp
jp
popa
in
pop
fwait
mov
insb
popf
or
lret
out
dec
push
test
loop
shrb
xchg
test
mov
imulb
js
scas
test
cld
xor
inc
fisubl
or
cmp
and
sti
je
insl
dec
lock
out
lcall
pop
push
xchg
ja
popl
sbb
xor
xchg
xchg
stos
dec
out
out
xchg
push
hlt
mov
dec
shlb
fidivl
lcall
lods
fsubrp
sbb
fs
and
or
shr
addr16
sub
rcrb
sub
shlb
jp
adc
jge
call
adc
js
pop
scas
rol
aad
in
lcall
push
in
pop
pop
and
pop
loopne
cmpsb
inc
fdivrs
sbb
cmpsb
jecxz
xor
pop
idiv
and
loopne
adc
lret
cmp
xchg
outsl
and
or
lret
xor
jb
mov
insb
dec
sti
jns
addr16
insb
mov
insl
xor
mov
mov
mov
sbb
je
cmp
sbb
call
xor
aaa
shll
inc
xchg
outsb
cmp
pusha
adc
push
cmpsb
sub
stos
xchg
sbb
xchg
lcall
stc
jl
mov
xor
stc
push
push
out
mov
es
mov
mov
iret
leave
mov
dec
test
inc
pushf
cmp
addb
dec
pop
sbb
cmpsl
xchg
inc
pop
test
pop
nop
mov
in
and
push
inc
das
call
adc
mov
ss
mov
leave
add
shl
mov
xor
cmp
xor
icebp
aaa
cmpsl
add
xor
scas
xchg
xchg
in
pushf
fsubl
fdivl
call
pushf
xor
adc
pop
cld
das
shll
xor
insl
shl
add
xlat
dec
cmp
add
sub
pop
xor
iret
and
sub
aad
cwtl
pop
in
mov
lds
bound
sbb
sbb
mov
pop
ret
xchg
repz
pop
addr16
adc
pusha
inc
out
stos
js
insl
sti
and
xchg
nop
lods
sbb
and
les
popa
add
pop
mov
pusha
inc
hlt
mov
mov
xchg
ljmp
inc
add
test
sahf
adc
movsl
inc
lahf
inc
lret
sub
js,pt
in
les
leave
stos
mov
sub
inc
in
aas
sub
sub
xchg
sub
and
push
test
out
and
loope
inc
movsl
jns
das
imul
out
jmp
fldt
pmulhuw
arpl
lock
mov
inc
cltd
std
xorb
or
ret
add
sti
dec
add
shll
pushf
bound
repnz
or
add
cmc
xor
inc
scas
pop
test
add
stos
cmpsb
int
aas
fstps
lods
push
outsb
fidivl
xchg
into
stc
xor
sub
jne
sbb
lock
or
pop
push
ds
mov
xchg
std
and
movsl
dec
and
sbb
lea
mov
data16
lahf
lods
insl
or
pusha
push
push
mov
movsb
clc
fists
in
or
mov
inc
aas
inc
add
imul
arpl
out
movsl
in
and
je
ds
lahf
inc
sarb
repz
pushf
repnz
loop
add
int
or
cmp
dec
jb
notl
sub
into
out
pop
dec
cld
cmp
mov
cmpsl
mov
int
dec
testb
and
inc
out
mov
mov
shrb
jae
lret
add
mov
inc
or
xor
outsb
and
add
ret
js
cmp
or
mov
pop
mov
dec
or
addr16
dec
div
pop
inc
jp
jns
fsubl
ljmp
pop
aam
ror
or
add
cmpsb
dec
jo
dec
push
out
in
pop
scas
lret
add
lds
rorl
shll
stc
sub
daa
cmp
sbbl
sub
jp
pop
sub
das
in
stos
push
pop
jle
mov
pop
xchg
hlt
xchg
cmpb
and
mov
jge
lret
sbb
lock
icebp
sub
incb
and
sub
stc
pop
xor
pushf
pop
lea
xchg
scas
inc
movsl
sub
mov
fldl
mov
mov
cmpsl
lods
scas
pop
mov
xchg
and
movsb
mov
or
leave
adc
pusha
push
jae
pushf
push
mov
jmp
lret
push
pop
cld
js
inc
std
popa
inc
xchg
pushf
add
mov
xchg
icebp
cmpsl
pop
xchg
in
xchg
idiv
jne
mov
imul
pop
or
sti
repnz
addr16
in
cmp
lret
cmp
and
lcall
sbb
adc
int
popf
cmp
push
shlb
xchg
call
ss
or
jg
inc
and
addr16
push
xchg
and
push
cmp
xor
xchg
arpl
aaa
jg
mov
ljmp
popa
data16
lret
out
sbb
pushl
call
sbb
sbb
hlt
sbb
xor
and
ja
dec
out
sahf
xchg
sub
add
jae
mov
jg
fimull
sbb
sti
scas
movsl
sbb
sbb
es
or
test
les
into
fs
pop
leave
or
inc
jl
mov
das
add
pop
xor
cli
cld
cltd
je
add
mov
push
std
mov
int3
movsb
call
mov
mov
sbb
xor
jl
dec
stc
sbb
pop
arpl
dec
pop
mov
jno
fwait
dec
pop
jg
cmc
or
inc
jecxz
pop
and
jbe
pop
div
sub
les
cmp
in
sbb
add
dec
out
xor
jnp
jmp
xchg
mov
insl
shr
mov
es
mov
push
mov
ret
sbb
mov
mov
sub
inc
mov
mov
cmp
std
mov
repnz
sarb
movsl
adc
mov
pop
out
jecxz
jb
mov
rol
fwait
cmc
jp
leave
pop
adc
and
loopne
cli
data16
lods
pushf
xchg
or
pop
inc
cs
inc
cmp
push
lods
xor
into
insl
xchg
scas
lds
lret
dec
xor
imul
pop
sub
fadds
cs
out
rolb
or
in
loop
js
enter
xchg
and
std
sub
call
cmp
mov
fnstsw
sub
and
addl
cltd
jbe
cs
xchg
je
call
fdivrs
cli
out
and
or
loope
cltd
inc
pusha
jp
inc
mov
in
cmp
das
jp
bound
mov
out
xorl
subl
or
mov
lock
dec
nop
dec
adc
mov
lods
lock
mov
in
inc
adc
int3
inc
xor
xchg
sahf
loopne
adc
addr16
das
or
mov
insb
and
and
push
push
loop
call
movsl
dec
jbe
fdivrl
cltd
mov
inc
addb
arpl
fnstenv
xor
jae
adc
push
fistpll
lret
movsb
xor
jge
aad
lock
lret
cmp
mov
cmp
mov
sub
mov
xchg
hlt
push
or
cltd
lahf
ret
dec
fisubl
and
adc
test
and
push
inc
mov
push
mov
lea
sub
lret
in
xchg
cmp
imul
imul
cmp
xchg
imul
int
sub
mov
lret
movsb
lret
jbe
addr16
fwait
inc
dec
push
ds
mov
je
mov
cli
sbb
icebp
or
sbb
jnp
pop
xlat
lret
rcl
sbb
dec
lea
notl
sbb
out
mov
out
push
sbb
outsb
out
outsl
bound
xor
fisubl
aam
rolb
mov
in
popa
or
lods
lock
push
ficompl
add
mov
sub
mov
and
or
xchg
rol
push
cmpsl
jbe
cmpsl
pusha
out
pop
pop
cs
test
mov
xchg
sbb
dec
ror
xlat
cmc
nop
rolb
stos
or
fstpl
imul
cmp
fdivs
mov
aad
mov
xchg
in
leave
fsubs
imul
dec
jnp
hlt
fwait
in
lods
pop
fstpt
xchg
stos
pusha
iret
fwait
adc
xorb
jb
or
push
adc
push
repnz
and
xchg
xor
jl
fwait
cltd
sbb
out
jne
jg
gs
mov
mov
je
xchg
xchg
lds
fiaddl
dec
add
pop
repz
int
add
leave
lock
clc
insb
inc
imul
les
xchg
outsl
in
popf
inc
and
cmp
out
addr16
out
cmpsb
xchg
sarl
jb
fdivrl
adc
mov
addr16
inc
xchg
cmp
and
sub
pop
dec
in
dec
pop
dec
test
in
mov
mov
mov
push
add
mov
add
fistpl
push
stc
adcb
and
pop
or
xchg
sub
mov
jmp
cmpsl
jle
mov
or
pop
es
push
bnd
int3
ljmp
jecxz
cmp
cmp
mov
push
scas
pop
movsb
mov
jae
test
mov
pop
rol
into
cld
loop
bound
add
mov
mov
mov
ret
aam
adc
pop
mov
lods
and
pop
mov
std
xor
pop
fildl
sbb
cmpsb
jbe
mov
pop
fdivrl
fdivl
lods
push
dec
subb
mov
xchg
ror
div
ja
dec
lds
pop
xchg
or
mov
cltd
sbb
test
mov
inc
dec
or
mov
lods
cltd
add
popl
adc
xor
xchg
dec
cmp
mov
cli
adc
rcrl
cmp
sub
push
jl
leave
inc
mov
xchg
xchg
cld
sub
xor
cmp
adc
adc
sbbl
xorb
ret
mov
push
pop
dec
fsubrl
int
pop
mov
data16
push
sbb
repnz
dec
cmpsb
pop
shlb
push
idivl
push
mov
lock
xchg
test
mov
pop
fiaddl
push
inc
pop
popa
or
dec
cs
loop
push
imul
lret
adc
in
arpl
adc
scas
pop
ss
icebp
xchg
lds
pop
sarb
mov
mov
mov
push
rcl
pop
rol
icebp
clc
imul
xchg
jge
adc
test
lods
lcall
xlat
adc
hlt
jnp
cmpsl
mov
dec
jge
cmp
out
or
pop
sbb
fsts
insl
mov
dec
and
sbb
cmp
add
movsl
mov
inc
jnp
sub
or
outsl
mov
daa
lods
test
mov
pop
pop
xchg
inc
lcall
aas
mov
add
loopne
adc
mov
dec
ljmp
movsl
mov
xchg
pushf
and
pop
int
adc
arpl
fs
mov
popf
call
out
ret
dec
inc
xchg
outsl
lods
or
lret
mov
stos
xor
dec
jb
xor
adc
aaa
insb
xchg
xlat
fcomps
cmp
sarl
out
cmp
xchg
mov
popf
test
and
and
push
push
push
xlat
sub
add
test
add
ret
cld
push
dec
dec
into
shll
popa
lret
pop
adcl
into
push
jmp
jbe
mov
mov
xor
or
fwait
and
test
clc
jo
aam
int3
sti
aaa
cmp
hlt
push
push
sbb
jg
out
inc
icebp
data16
loop
loope
fidivrl
jg
stos
push
dec
or
and
cltd
inc
test
xchg
adc
mov
jnp
push
in
lds
mov
cmp
lods
aas
pusha
stc
jbe
push
cmpsl
mov
sbb
mov
push
xor
xchg
arpl
fadd
cs
out
lret
adc
or
pop
pop
shufps
test
aad
in
xchg
movsl
sti
sbb
andl
call
popa
jb
cltd
sub
or
mov
push
std
lods
jg
popf
dec
add
or
rclb
jecxz
xchg
add
add
adc
bound
dec
add
jo
test
push
fsubrp
cmpsb
adc
fistps
pop
subl
loop
fwait
pop
cmp
in
inc
mov
or
sahf
sbb
adc
mov
push
test
jmp
shlb
mov
xchg
adc
insb
out
mov
sahf
add
mov
and
or
sbb
xor
jb
pop
dec
mov
jnp
jne
loopne
pop
mov
in
dec
loop
mov
push
xlat
daa
leave
movsb
sub
test
lds
inc
jl
push
or
imul
insb
cmp
pop
ja
fs
leave
xchg
aaa
jno
addb
xor
dec
adc
pop
outsl
fistl
hlt
mull
dec
xor
leave
repnz
mov
out
push
mov
jmp
sbb
filds
outsb
inc
inc
insb
popw
stos
popf
sbb
bound
loope
lcall
jmp
out
or
fbld
jbe
inc
movsl
outsb
dec
inc
lret
or
notl
mov
sbb
nop
cmpsb
adc
out
mov
movsb
jo
push
negl
xor
test
fwait
cmp
lret
sbb
cli
vzeroall
xchg
and
icebp
imul
or
push
sub
ficoms
sti
jnp
mov
into
pushf
cwtl
stc
adc
clc
ss
popa
inc
xchg
lahf
jmp
incb
or
daa
and
jns
inc
and
notb
jne
aas
lahf
mov
repz
gs
inc
add
ficomps
cmp
sarl
fldcw
stos
fadd
mov
sub
add
out
test
nop
mov
lods
xchg
fadds
shrl
jnp
push
js
leave
lock
dec
cmp
add
jmp
pop
adc
sbb
adc
lock
inc
and
xlat
push
cld
inc
icebp
pop
pop
loopne
idivb
add
inc
jp
int
cmp
lret
out
lret
loop
sahf
movsb
pop
inc
and
pop
dec
call
imul
pop
fists
inc
and
outsl
jbe
xchg
sbb
repz
repz
inc
hlt
mov
push
mov
push
in
dec
cmpb
inc
mov
es
pop
pop
push
sarb
lds
outsl
adc
incl
outsl
cmp
mov
loop
mov
add
pop
xor
std
jecxz
lock
mov
cld
push
movsb
add
push
mov
stc
popf
cld
jp
daa
or
mov
inc
repz
jnp
xor
push
idiv
out
cwtl
jbe
sbbl
sahf
adc
mov
vpmuludq
lcall
cmp
lret
xchg
push
outsb
xchg
cmp
out
addr16
xchg
push
or
cmp
lods
clc
cmc
cmpsl
leave
insl
mov
dec
mov
bound
push
xchg
mov
imul
inc
adc
mov
test
mov
xor
push
cltd
lods
rcl
cld
jp
jnp
leave
pop
cmp
pop
not
test
dec
out
push
adc
cmp
shlb
sbb
mov
jmp
iret
mov
ficoml
mulb
fcoml
cmpsb
lret
or
jbe
hlt
cmpsb
shrl
sahf
rorb
mov
xchg
in
rol
cltd
push
and
pop
dec
rcl
dec
test
sbb
aad
mov
mov
mov
stos
sub
xchg
outsl
aaa
mov
mov
inc
not
cltd
inc
push
xor
xchg
adc
and
or
loopne
sub
add
jg
pop
les
movsb
mov
and
test
fistl
or
add
popf
dec
stos
pop
cmp
or
pop
lods
mov
push
mov
les
dec
out
jo
mov
and
ret
xor
mov
adc
cmp
pop
dec
aam
xor
leave
mov
ret
pop
data16
aas
jmp
test
cwtl
fsub
in
fisubrs
ds
add
adc
insb
int3
sahf
xchg
cmp
iret
fidivl
push
fstpl
in
dec
cli
lret
pop
push
aas
movsb
test
test
nop
add
pop
hlt
ljmp
mov
mov
xor
mov
mov
mov
jmp
test
pop
popf
add
jae
nop
push
js
test
add
stos
sbb
stos
mov
jo
out
lcall
mov
dec
test
adc
push
out
add
push
or
push
test
lcall
negl
out
data16
dec
dec
lret
int3
push
inc
daa
movsl
stos
push
mov
mov
loope
inc
sbb
and
dec
mov
adc
inc
add
clc
jo
sub
decb
dec
push
cltd
push
push
sbb
mov
mov
add
sub
insl
jb
sub
in
rorl
divl
outsb
sbb
int
test
sahf
and
mov
inc
push
loopne
push
dec
jno
pop
cs
shrl
mov
mov
xorb
inc
call
and
popa
add
mov
xchg
decb
shll
mov
bound
orl
inc
ja
dec
in
loope
test
bound
jne
ret
int3
or
xlat
adc
jne
push
pop
enter
testl
lea
adc
mov
pop
sbb
mov
loopne
repz
mov
jge
repz
nop
mov
dec
mov
jbe
fnsave
jns
push
lcall
or
js
addb
jnp
xchg
leave
pop
imul
inc
xor
sti
mov
ret
mov
repnz
lahf
sub
push
or
pop
push
movb
inc
data16
jae
adc
jmp
xor
stc
out
movsl
dec
push
pop
bound
jb
xor
xlat
arpl
cmc
add
stc
fisubl
mov
arpl
push
aad
fwait
aas
clc
inc
outsb
mov
dec
push
sarb
mov
in
xchg
sub
cmp
mov
xor
iret
or
and
shrl
jecxz
lock
ss
xor
jg
dec
adc
adc
add
mov
pop
or
sub
out
xchg
push
pop
sbb
imul
lret
mov
pop
jmp
gs
fcmovnu
mov
mov
movsl
scas
popa
into
andb
nop
clc
ret
and
xchg
repz
dec
mov
std
xlat
sub
sub
jl
xor
and
cld
mov
fsubrp
mov
sub
dec
fldenv
cld
jle
push
jbe
and
nop
sti
mov
add
leave
jp
sub
sbb
pop
rcll
xchg
and
es
pop
mov
push
sub
push
pop
sbb
mov
repz
stc
dec
xchg
scas
inc
dec
or
lcall
loopne
hlt
call
add
adc
mov
out
pusha
or
cmp
daa
push
inc
pop
mov
shrb
add
and
xchg
cmpb
filds
lea
lods
divl
dec
mov
inc
jmp
stos
cmp
aas
mov
mov
ficoms
pop
aas
mov
xchg
loopne
sub
cmp
out
movl
mov
rdtsc
jne
int
cmp
cmp
bound
cmp
xchg
xor
nop
fwait
popa
push
bound
shl
jmp
mov
sub
pop
mov
lret
outsb
dec
stc
dec
adc
sbb
sbb
fisubl
jno
stc
cltd
leave
jne
push
add
test
fnstcw
jns
pop
and
mov
mov
stos
cmp
sub
dec
arpl
movsl
xor
jl
sub
cli
xchg
adc
fistl
out
movb
test
repz
cmpsb
fs
out
adc
or
sbbb
call
jg
iret
pop
das
xor
test
hlt
and
pusha
enter
or
fs
ljmp
int
stos
fwait
sbb
lcall
jmp
mov
or
and
inc
mov
mov
sub
fucomi
mov
jge
push
adc
cmp
xchg
cmc
adc
movsb
imul
push
inc
mov
call
outsb
sub
bound
inc
xor
add
iret
inc
sub
sub
outsb
addr16
sbb
aad
lcall
xchg
das
in
movsl
sbb
inc
cmpsb
mov
add
mov
rolb
shl
xor
mov
inc
mov
push
ret
int
mov
pop
in
scas
enter
jmp
cli
jge
mov
les
mov
dec
movsl
xor
mov
inc
xchg
push
xchg
ret
mov
cltd
xchg
fidivrl
or
popf
sbb
pushf
lret
inc
sbb
sbb
push
jg
jmp
add
stc
xor
gs
mov
jle
adc
pusha
daa
mov
jl
adc
dec
rclb
jnp
jbe
mov
inc
pop
xor
and
adc
inc
pop
movl
sub
add
jp
jl
int
sub
mov
enter
lods
mov
pusha
iret
pusha
push
into
cmpsb
mov
insb
cld
es
aam
sarl
lods
bound
lods
jle
cwtl
popf
hlt
ret
sub
mov
out
clc
fs
imul
out
fnstsw
jl
icebp
push
xchg
mov
and
cmp
in
jge
or
xor
sbb
or
fsubp
push
mov
in
or
movsb
cmp
je
dec
sbb
inc
leave
maskmovq
divl
pop
clc
xorb
arpl
and
xchg
pop
sub
add
repnz
or
add
in
jnp
hlt
fisttpl
jo
jp
mov
xchg
xlat
jge
fisttpll
aas
inc
add
lea
pop
and
jbe
add
xor
lcall
xor
outsb
mov
jl
popf
popa
into
js
aas
sbb
dec
mov
pop
lods
xchg
fmuls
clts
in
repnz
push
test
out
push
mov
mov
jnp,pn
std
daa
xchg
adc
cmp
jg
or
mov
push
pop
insl
repz
adc
dec
push
rorl
xchg
inc
xor
lret
jb
movsb
loopne
iret
mov
out
ds
test
mov
mov
fldpi
xchg
pop
rolb
push
xlat
mov
addr16
cwtl
movsl
inc
call
lods
sub
ss
ds
aam
out
insl
push
or
inc
push
jg,pn
push
ds
push
enter
ficompl
cltd
push
sbb
ljmp
xor
test
add
rorb
cmp
adcb
pop
sbb
cmp
cmpsb
addl
sbb
and
inc
ret
imul
mov
add
cmp
push
xchg
stos
cwtl
adc
dec
or
mov
popf
fs
xchg
fcoml
loop
pushf
sarb
popf
fcmovnu
mov
call
fimull
cmp
adc
xchg
mov
pusha
inc
add
scas
push
dec
sahf
imul
jmp
iret
test
int3
shlb
push
das
adc
rcl
xchg
add
int3
imul
xchg
mov
sbb
xchg
push
rcll
jb
pop
iret
adc
and
jno
enter
cmp
adc
jle
lahf
nop
cli
jle
cli
lcall
adc
dec
in
mov
jmp
int3
pop
or
mov
adc
outsb
out
imull
clc
add
rorl
adcl
and
stc
aad
or
mov
les
or
icebp
das
cmp
imul
or
mov
dec
push
mov
testl
ljmp
sbb
out
icebp
jo
addr16
lds
inc
sub
mov
in
xorb
add
xchg
adc
loop
xor
push
aaa
inc
or
mov
stos
addr16
nop
repz
int
and
into
call
mov
pop
stc
add
fstp
xlat
test
jp
rcrl
inc
lea
sahf
add
adc
push
sbb
dec
sub
push
xor
cmp
int
pop
test
ss
xchg
movsb
add
add
sbb
dec
loop
sub
loopne
push
inc
test
lock
mov
mov
jecxz
mov
inc
mov
push
add
sbb
pusha
imul
in
push
inc
dec
nop
inc
out
adc
std
jmp
push
pop
add
fcomi
xchg
stos
sub
hlt
mov
lds
stos
pop
jmp
ret
jbe
movsl
sub
mov
and
out
mov
lods
aaa
adc
repnz
or
loop
push
loope
mov
cltd
push
lret
xorb
lret
mov
dec
cmp
and
pusha
jmp
in
xor
inc
jb
pusha
xchg
add
adcb
loopne
mov
insb
cmp
xor
fcmovu
sub
sub
xchg
dec
xchg
aaa
lcall
inc
lods
pop
cmp
popf
je
ljmp
mov
push
push
sub
or
jbe
cmp
icebp
xor
inc
movsb
push
inc
lret
pop
sbb
push
js
daa
push
fstps
das
jge
jne
outsl
xor
lahf
push
adc
into
xorl
pusha
out
sbbb
or
fimull
shrb
adc
in
je
in
test
scas
adc
jae
aaa
repnz
pop
icebp
pop
jle
mov
mov
sub
xor
es
xchg
inc
in
push
dec
insb
lcall
cmp
pushf
fs
outsl
int
jbe
push
cld
aad
push
jecxz
shlb
cmp
adc
stos
fldt
filds
loope
pop
stc
cmc
arpl
inc
sbb
iret
stc
jno
cwtl
fadds
add
movsl
iret
stc
imul
scas
int
dec
cmp
sub
icebp
and
fucomi
rcr
subb
mov
lret
mov
sahf
mulb
dec
pop
push
push
in
jmp
jge
loope
push
into
cltd
and
jns
push
add
mov
fcompl
insb
das
mov
push
mov
inc
rcr
adc
sub
push
nop
outsb
les
jp
popa
insl
insb
or
add
shl
in
call
sub
lock
push
cmp
cli
pop
push
or
jmp
jns
insl
fisubrl
stos
push
xchg
pop
sbb
sbb
cmp
cmpsb
dec
lds
jbe
push
pusha
sub
js
fwait
push
jne
sub
lods
loop
insb
jnp
or
jb
je
pop
sbb
lret
pop
add
xor
xor
jnp
into
push
mov
lods
test
adc
or
int
imul
push
stc
xchg
pop
sub
push
out
inc
xchg
popl
out
loop
mov
xor
stc
mov
pop
mov
push
xchg
lods
sub
mov
push
fwait
cmpsb
sbb
fs
mov
and
sbb
pushf
xor
ss
jp
push
mov
push
rolb
mov
or
jne
adc
pop
push
std
cltd
out
push
sub
stc
gs
push
or
push
cmpsl
lods
push
lahf
scas
jns
or
xchg
lods
stos
lds
ficomps
jle
xor
push
jno
sbb
loope
mov
jo
rclb
daa
adc
xchg
pop
xlat
leave
loopne
and
es
bnd
xchg
sub
jno
pop
aaa
or
jb
popa
in
push
js
in
insl
fidivrs
cmpsb
shlb
dec
sub
adc
outsl
cmpsl
push
push
xor
xor
hlt
xchg
add
mov
pop
out
out
in
fistl
test
dec
push
cmp
jne
mov
cmp
cmp
xchg
rcll
push
addr16
xchg
cs
bound
cmp
pusha
adc
jle
dec
in
ja
gs
test
fstp
sub
mov
mov
test
xor
add
xlat
movsl
lret
lahf
insl
mov
andb
pop
pop
or
cmc
adc
mov
jle
inc
xor
sbb
mov
lcall
lods
xor
sub
movsb
sub
lcall
xlat
imul
cmp
shlb
lahf
inc
enter
xchg
ret
das
stos
out
inc
enter
orb
push
pop
cmpsl
add
jnp
bswap
outsb
cmp
adc
repnz
sub
iret
lret
ficompl
fimuls
lds
test
sub
shll
daa
ja
xchg
aad
or
xchg
dec
clc
insl
jle
jmp
aam
ret
mov
push
sub
mov
adc
xchg
push
mov
xchg
lods
cmp
loope
stc
and
test
or
rclb
inc
into
dec
shrl
insl
adc
adc
pop
stos
popf
aam
aas
roll
stos
cmp
lods
lret
inc
dec
lds
xor
jge
inc
or
rclb
push
jecxz
imul
and
mov
mov
cld
add
std
dec
xor
cmp
sti
cmp
div
jae
in
das
test
lods
fldenv
test
sub
movsb
add
push
mov
cmp
mov
cwtl
mov
mov
cli
pushl
ffreep
mov
fists
cmp
std
movsb
cmc
enter
ljmp
dec
out
out
pushf
call
xlat
cmp
fcoms
mov
ss
sbb
sahf
repz
insl
sub
cmpsb
sti
mov
test
mov
jl
cmp
push
pop
adc
das
sti
aad
in
pop
insl
movsb
ss
nop
and
ret
sbb
stc
mov
and
ret
inc
cmp
xchg
xchg
in
sub
std
les
and
push
shlb
dec
sbb
imul
jmp
int
daa
adc
data16
scas
sti
and
divl
adc
popf
and
testb
test
dec
cmpsb
loopne
push
rolb
adc
or
in
dec
out
mov
scas
inc
jbe
push
push
dec
paddw
dec
ljmp
mov
mov
in
in
jp
jo
pop
mov
mov
fistl
xlat
pusha
std
push
jmp
in
pusha
fbld
mov
sbb
test
xchg
les
loop
push
xchg
mov
rcl
call
dec
cmp
dec
ret
lods
lds
jmp
test
mov
push
sbb
inc
mov
fs
xor
fcomip
xchg
mov
or
dec
mov
pop
jb
push
push
enter
add
xchg
movsl
fstl
push
lock
xlat
cltd
xchg
cmp
jae
repz
cmp
loopne
insl
lea
ljmp
cmp
push
or
pusha
repnz
inc
hlt
xchg
push
js
jg
enter
stos
aaa
sub
into
inc
out
out
test
lahf
loop
push
je
test
sti
jne
inc
cmp
jo
dec
cmp
jecxz,pt
sti
sti
jle
sbb
out
arpl
jns
pushf
fs
subb
ja
in
ds
xchg
xor
pop
sub
dec
push
or
idiv
dec
inc
inc
jo,pn
add
outsl
sub
out
test
sbb
ss
jo
push
jb
lahf
dec
in
stos
out
fincstp
push
icebp
add
insl
jae
push
jns
ret
mov
and
mov
or
mov
jge
aaa
mov
fcmovbe
lock
mov
pushf
mov
pop
sbb
xchg
cmpsl
ret
sub
cmp
jbe
sub
fisubrl
adc
inc
lock
aam
push
ds
inc
aam
cmpsl
call
mov
fs
mov
xor
jmp
inc
fdiv
adc
dec
jg
test
stc
jo
sub
lcall
mov
add
jmp
xor
sahf
dec
sub
push
sub
mov
cmc
xor
lods
aaa
jne
add
nop
pushf
mov
repnz
fs
inc
outsb
xor
loope
push
cmpsl
sub
mov
pop
inc
inc
add
out
fnstenv
int3
repnz
push
insl
cwtl
mov
mov
mul
fs
outsl
pushf
add
jb
aas
cltd
push
cld
aam
dec
sub
mov
insl
adc
aam
cs
jo
fnstsw
and
movsl
push
add
mov
pop
mov
inc
in
add
outsl
icebp
adc
add
xchg
outsl
cmp
test
mov
sbb
jmp
jno
cld
xchg
loope
inc
mov
xchg
cmp
mov
in
xchg
xor
xchg
sbbl
nop
xchg
jle
inc
xchg
dec
xlat
mov
icebp
adc
js
dec
ret
outsl
addr16
mov
xchg
mov
sub
pop
jb
into
dec
into
popa
out
sahf
shlb
cltd
hlt
cmpb
fnsave
lods
repz
pop
sub
inc
sbb
add
lods
outsb
sub
cld
mov
mov
lods
cmpsb
jge
int3
stos
cmp
pusha
rorl
mov
or
sub
sub
into
aad
pop
movsl
xor
push
pop
cli
and
dec
cwtl
stos
mov
dec
jecxz
ja
imul
mov
cwtl
sbb
xor
in
lahf
jge
adc
cmp
fstl
jg
dec
xlat
mov
push
xchg
jle
push
jbe
addl
outsl
xorl
leave
addl
mov
cmp
add
or
lods
jae
mov
int3
jecxz
xor
out
cmp
ljmp
xchg
xor
jg
add
or
shl
adc
dec
mov
push
addb
lahf
pop
gs
inc
shll
aad
mov
mov
daa
aaa
fcmovne
jp
ss
inc
pop
int
or
pusha
cmpsb
in
cmpsl
int3
dec
loop
addr16
out
les
rol
std
cmpsl
sbb
pop
dec
out
lods
fldl
shrl
gs
cld
int
push
mov
and
cmp
add
shlb
data16
loope
xor
adc
int3
dec
ds
aaa
mov
dec
mov
roll
pop
cs
ja
pop
sub
dec
xchg
lock
sbb
inc
xlat
iret
scas
ljmp
mov
and
jb
cmp
xor
xchg
dec
cwtl
and
pop
aam
push
pop
ds
in
or
pushf
push
cltd
adc
jl
push
dec
or
push
mov
and
xor
pop
test
or
sbb
bound
sub
xchg
mov
add
test
out
cwtl
mov
aaa
push
mov
push
js
mov
in
xchg
ljmp
xchg
ljmp
sbb
push
out
leave
fwait
arpl
lret
les
ss
loope
adc
decb
in
aas
ret
mov
xor
push
push
clts
inc
mov
fildl
mov
test
mov
inc
ret
mov
test
or
dec
push
sbb
or
xor
lcall
jnp
push
add
mov
xor
sbb
lea
pop
stos
or
sub
aaa
insb
insb
ret
movsb
fs
je
adc
jne
popa
dec
and
cmpsb
xchg
cmp
sbb
addr16
mov
sub
pop
insl
in
push
add
sti
aam
roll
inc
sub
push
or
mov
lret
pop
andb
push
nop
mov
leave
lret
and
scas
clc
mov
lret
pop
mov
and
add
insl
test
xchg
testb
icebp
inc
dec
xchg
cs
int3
subb
and
pop
mov
pop
dec
rol
test
push
mov
je
lea
sub
addl
cli
aaa
dec
in
cmp
adc
adc
mov
mov
or
cmpsl
inc
idiv
repnz
ret
scas
sub
mov
push
cmc
or
mov
jae
pop
inc
pop
jbe
fists
out
loope
sub
js
mov
pop
cld
add
rcll
stos
cltd
and
push
paddd
leave
cmpsl
ret
cmp
shl
pop
xchg
sar
pop
lea
loopne
push
xchg
out
fidivs
iret
imul
lds
sub
gs
nop
imul
fs
imul
pop
and
lcall
mov
out
ret
push
call
std
mov
mov
repz
pop
mov
pop
mov
or
inc
push
nop
jae
dec
xor
dec
nop
lods
rcrb
fwait
les
les
cwtl
xor
repnz
in
mov
jp
mov
nop
add
mov
adc
popf
jle
jmp
pop
push
scas
mov
movsl
ret
das
mov
sub
loope
ret
mov
cltd
bound
int3
cmp
cmp
orb
or
cwtl
fnstenv
mov
push
jb
push
test
cmp
cli
gs
xor
call
fcmovnu
and
mov
jmp
ss
pop
enter
push
lcall
hlt
je
repz
sub
add
jae
leave
xchg
mov
mov
and
xchg
jecxz
cld
and
xor
jle
stos
add
fidivrs
pusha
movb
arpl
jl
adc
rclb
test
mov
fldl
outsl
xor
je
dec
ljmp
cmp
mov
jl
fcompl
pop
fbld
inc
sbb
push
call
jnp
mov
cmp
fwait
inc
lret
lahf
mov
sahf
and
test
lods
lods
popa
mov
lcall
leave
popf
cld
pusha
hlt
push
aam
inc
sub
stc
mov
loope
addb
sub
adc
mov
lock
adc
and
insb
std
and
xor
mov
cs
xor
loope
mov
ret
insl
popf
fs
jno
jo
xor
or
je
sub
mov
ret
ljmp
pushf
pusha
sti
add
cmp
adc
or
fcoml
and
add
push
jmp
inc
mov
mov
mov
aad
xchg
out
fs
arpl
cmpsb
in
xchg
xchg
rol
cmpsb
push
xchg
rolb
sub
inc
jbe
das
pop
mov
or
outsl
movsl
cmp
test
xchg
rolb
adc
mov
iret
negb
adc
je
out
mov
rorl
popa
dec
pop
je
lock
cltd
es
mov
lds
test
fnsave
stos
fmulp
dec
fdivrs
sarb
xchg
push
imul
mov
add
loope
fwait
mov
and
push
sbb
cmpsl
mov
rcl
addr16
adc
movsb
sbb
xor
outsl
pop
ret
pop
insl
mov
lods
sub
xor
jns
outsl
mov
fadds
inc
jp
mov
fldenv
and
cld
dec
icebp
xchg
adc
push
push
mov
cltd
call
sub
fldcw
addr16
aas
pusha
stos
lahf
jo
mulb
les
loopne
pop
gs
sbb
pop
inc
out
aam
cs
int3
push
in
pop
and
cmpsl
dec
mov
sahf
jb
pop
outsb
arpl
jp
dec
mov
loopne
pop
aad
jbe
les
xor
nop
imul
mov
or
or
pop
shl
ficoml
mov
push
xor
push
add
pop
addr16
scas
adc
out
cltd
pop
mov
xchg
xorb
xor
and
dec
cmc
std
push
fcmovbe
xor
pusha
into
stc
adc
popa
sub
std
sbb
lret
mov
mov
xor
lahf
ja
mov
repnz
dec
psadbw
inc
sbb
int3
jmp
das
loopne
mov
mov
mov
jno
int3
mov
push
outsb
sbb
or
xor
mov
xor
cld
push
adc
fcmove
pop
out
pop
jnp
lods
xor
jge
xchg
cmpb
cmp
outsb
inc
pop
xor
xchg
mov
sbb
addr16
mov
push
inc
xchg
and
mov
pop
repz
jge
mov
mov
in
icebp
jae
push
inc
and
xchg
or
lea
cltd
icebp
push
ret
test
dec
mov
or
insb
popf
and
stos
popf
cmc
aam
daa
sti
daa
test
inc
mov
in
push
push
sbb
mov
xchg
das
sub
mov
repz
mov
adc
lahf
xchg
xorl
pushf
arpl
in
les
jle
lods
mov
flds
hlt
popf
cmpsl
call
std
fildll
cmpsl
xchg
adc
jno
mov
cld
decl
mov
adcb
mov
jb
jns
adc
lea
test
or
mov
mov
outsl
mov
xor
push
insl
or
xchg
or
call
and
mov
jge
xchg
lcall
dec
jae
push
arpl
pop
mov
mov
jp
adc
jl
lahf
mov
cld
pop
aaa
out
and
stc
scas
jnp
xorl
push
test
xchg
lret
call
nop
imul
push
or
push
icebp
cmc
jge
xchg
xor
aas
cmp
js
jmp
fildll
fwait
mov
xchg
adc
sti
repz
mov
cwtl
cld
mov
adc
aam
ret
push
mov
lcall
sbb
lods
aam
imul
fbld
pop
stos
rcr
pop
mov
jbe
pop
in
pop
pop
fistpl
xchg
mov
and
or
loope
mull
clc
mov
sbb
leave
sahf
out
jg
test
movsb
es
cltd
pop
adc
jge
jnp
mov
fsubrl
mov
ret
ret
aam
in
lret
mul
xchg
jmp
ljmp
ss
mov
popa
push
cmpl
pushf
inc
xchg
stos
push
sub
in
inc
jae
ljmp
jl
fxch
dec
lret
mov
sbb
loop
fisubrl
xor
test
dec
sbb
mov
int
jecxz
lea
jecxz
xchg
inc
popa
inc
addr16
sbb
test
orl
adc
in
iret
jp
jg
and
mov
mov
hlt
jb
loope
lahf
jge
sub
insl
mov
sbbl
js
inc
rcll
xor
mov
mov
ss
aaa
and
sub
arpl
fs
repz
mov
pop
loope
mov
insl
and
push
jno
aam
rclb
adc
repz
pushf
dec
xchg
lret
push
stos
push
in
imul
imul
rorb
scas
sbb
popf
fdivrl
daa
lock
int3
jge
mov
adcl
data16
mov
jp
in
jns
jns
mov
mov
repz
gs
cld
aaa
mov
mov
cmc
imul
lcall
adc
inc
xor
movsb
mov
jmp
icebp
and
sbb
movsl
mov
xchg
cmp
popa
in
inc
insb
jmp
sbb
xchg
pushf
sbb
repz
xchg
popf
notb
sub
mov
xor
mov
mov
pop
fists
std
lcall
xlat
imul
shlb
cmp
out
lcall
sub
stc
mov
in
inc
sbb
mov
std
aaa
sbb
cmp
xchg
xchg
sbb
je
lcall
push
stos
mov
sbb
test
or
in
jmp
je
adc
dec
and
dec
mov
lea
or
mov
int
js
bound
imul
sub
stc
cli
mov
cmp
pop
mov
popa
pop
cmpsl
insb
mov
cmp
leave
and
mov
or
outsb
ret
addr16
outsl
incb
mov
inc
fwait
sbbl
add
icebp
addl
xor
sub
mov
xchg
lods
rorb
mov
cmpsb
mov
adc
insb
pop
shrb
mov
and
cmpsb
pop
xor
int
add
cld
mov
adc
dec
mov
out
jne
cmp
sbb
out
addr16
pop
sbb
in
mov
and
pop
sarb
xchg
mov
mov
rorb
pop
cli
ja
lds
cmpps
loopne
mov
fadds
iret
ja
dec
push
inc
out
rcll
idivb
stos
fisubrs
imul
div
mov
adc
sbb
es
lock
fidivrs
ret
fucomi
popf
aad
outsb
or
cli
mov
add
movsl
and
addr16
pop
jg
cmp
loopne
pop
mov
mov
call
push
call
mov
stos
or
popa
scas
mov
xor
sti
popf
roll
int3
jae
mov
xor
lods
loop
pop
cld
test
jecxz
movsl
mov
or
pop
in
pushf
enter
lods
mov
jno
pop
add
movsb
stc
and
inc
int
mov
popa
mov
sbb
sub
cwtl
int
sarl
iret
cs
out
jp
stc
pop
mov
fisubl
cmpsl
test
out
inc
mov
callw
push
dec
loope
das
add
rcr
ds
cmc
aas
fs
ljmp
repnz
adc
negb
in
lock
gs
and
idivl
xchg
cmp
add
scas
sbb
mov
push
cmp
and
movsl
pop
cmc
pop
lcall
dec
push
push
cmp
xchg
pop
sarl
xor
insb
ret
scas
cs
lea
loopne
dec
mov
adc
cmpsb
and
mov
jbe
leave
mov
mov
jae
call
jge
mov
add
cmp
xchg
cmpsb
mov
add
andb
push
push
aas
bnd
adc
push
jne
mov
jo
iret
imul
adc
cli
xor
adc
and
aas
popf
lods
sub
pushf
fdivp
sub
filds
fstl
sub
fdivrs
push
xchg
xor
inc
inc
ja
sub
push
sub
push
xchg
std
ret
ficoms
sub
movsl
pop
cltd
popf
cmpsb
cmpsb
mov
mov
cwtl
xchg
test
sbb
repz
daa
pushf
push
lahf
stos
mov
in
xlat
insl
mov
cmc
xchg
xchg
scas
mov
dec
cmp
jbe
add
out
je
jmp
js
outsl
push
mov
and
xchg
pop
lods
aad
adc
loope
cld
cmp
push
push
cmp
cli
push
repz
fdivrl
nop
aam
push
clc
dec
scas
cmc
dec
push
pop
data16
ds
in
leave
inc
repnz
xchg
outsb
or
push
addr16
lret
je
psubb
clc
and
sub
and
loope
sti
add
lods
sbb
cmp
add
mov
ret
pop
cmp
add
fdivp
mov
sub
adc
xchg
orb
mov
aad
sub
xchg
repnz
or
or
icebp
arpl
ret
les
mov
and
ds
fwait
insb
leave
aas
and
add
xchg
and
lods
mov
inc
add
jbe
add
dec
divb
es
xorl
xor
lock
jae
push
mov
pop
jle
xor
sbb
xchg
xchg
out
xlat
dec
nop
shlb
xlat
pop
sahf
adc
cwtl
and
ret
pop
xlat
mov
and
mov
or
ret
movsb
xor
pop
out
push
xlat
clc
mov
shr
jbe
push
mov
jmp
test
nop
cli
dec
mov
in
xchg
daa
outsb
adc
lea
dec
sub
mov
adc
sbb
pop
or
fbld
xor
xor
ficompl
mov
mov
out
mov
xchg
shrl
scas
and
divl
rolb
test
mov
or
dec
arpl
lods
cmp
js
xlat
dec
test
lods
xchg
jle
jmp
inc
fidivl
push
and
popa
mov
sub
and
jae
loopne
jae
int
fsts
cmpsl
loope
movsl
inc
js
xchg
es
inc
stos
and
push
add
bound
into
jg
arpl
loope
popf
jp
push
stos
dec
push
fistpl
dec
inc
sub
sahf
mov
xchg
stos
xchg
test
and
lret
jp
out
icebp
out
adc
mov
mov
or
push
push
lahf
outsl
xlat
aad
les
sub
sub
les
repnz
scas
aas
pop
cmpsl
mov
out
sub
cli
cvtdq2ps
sub
dec
fdivrs
adc
or
adc
mov
fdivrp
push
xchg
lcall
movsl
push
adc
movsb
mov
cmc
mov
insl
sbb
xchg
xchg
inc
mov
xlat
adc
cwtl
mov
jmp
or
and
or
sbb
scas
dec
cmpsl
pop
aas
aam
adc
stos
cmp
in
sub
stc
dec
test
pop
icebp
mov
mov
jg
test
xchg
int
add
cwtl
pop
jae
fwait
sub
jl
pop
lahf
arpl
into
mov
pop
mov
cltd
pop
or
pusha
popf
lods
cmp
xchg
ret
mov
mov
jge
push
lret
pop
sub
insb
mov
sar
arpl
cmpsb
loop
cmpsl
pop
add
cmpsb
aas
jge
xor
jnp
mov
fcmovnbe
lea
ja
cmp
push
sub
pop
imul
adc
mov
lcall
fcoms
lcall
shrb
jmp
insb
mov
mov
sbb
push
mov
pop
add
lea
es
pushf
mov
mov
pop
fadds
imul
in
push
stos
lret
jp
sub
out
cmp
in
push
push
enter
jg
sbb
mov
ficoms
jg
int3
cmp
jne
mov
test
mov
mov
push
xlat
sbb
adc
scas
xchg
out
pop
lods
push
mov
add
nop
mov
jecxz
pop
jge
xor
js
xchg
sub
sti
stos
add
jbe
cmpl
and
push
inc
inc
jg
out
adc
sti
testb
cmp
lcall
jns
pusha
push
popa
xchg
lahf
stos
mov
shlb
movsl
sbb
sub
lcall
rcll
mov
ret
lock
out
and
int
ljmp
xchg
out
add
test
cmp
mov
or
inc
cvtpi2ps
push
and
rcll
adc
inc
std
dec
sahf
and
mull
call
push
lahf
es
sub
xor
pop
mov
les
or
add
mov
pushf
mov
int
aad
mov
enter
sarb
cmp
sbb
pop
sahf
push
movsb
jnp
out
ret
movsl
bound
test
jnp
xchg
stos
push
ja
xchg
and
add
jbe
test
xchg
dec
sub
mov
aas
mov
aam
sbb
je
call
sbbl
test
mov
iret
xor
rclb
dec
mov
fs
mov
sub
data16
gs
xchg
iret
or
push
cwtl
jo
in
or
or
repz
push
cli
ja
or
fists
data16
pop
and
fwait
shrl
jns
push
cltd
scas
push
lret
mov
leave
add
fs
sbb
jle
inc
pop
addr16
nop
leave
movsl
fwait
int
or
push
dec
fldt
push
gs
sub
xchg
pop
je
test
dec
jae
sub
xor
cmp
jl
xor
push
xor
mull
inc
or
fldcw
mov
jmp
imul
jle
mov
imul
dec
adc
pusha
test
mov
into
mov
xor
jo
adc
call
xor
int3
cmpsb
dec
cmp
or
imul
fmull
addb
out
xor
xchg
sub
aad
imul
mov
adc
jne
int
mov
loope
orb
mov
pop
sub
mov
call
cmp
lahf
add
dec
adc
xchg
jmp
movsb
aad
in
pop
jmp
fistps
repnz
rcr
sbbl
or
xor
ret
iret
add
xor
and
lock
leave
jecxz
aad
xor
add
cmp
mov
and
inc
insl
aad
fadd
aad
pop
sti
inc
ds
scas
push
xchg
popf
cltd
cmpsb
add
movsl
clc
movsl
jbe
push
pop
fs
fwait
xor
push
shlb
xor
sub
mov
cli
jecxz
xchg
hlt
or
insb
test
push
popf
push
loope
push
adc
dec
dec
mov
mov
and
sbb
and
data16
aaa
jae
repz
les
push
scas
mov
xor
fsts
stos
ficoms
mov
mov
fisttps
add
in
xor
or
or
sahf
das
adc
inc
xchg
xor
sub
jnp
jg
mov
movsb
fwait
loop
push
sbb
inc
call
cmp
addl
and
and
ds
cmpsb
nop
pop
sub
jae
jb
dec
arpl
aas
dec
aaa
lds
sub
test
adc
dec
js
out
nop
cmc
popa
mov
test
sbb
cmp
es
push
insb
in
addr16
lret
aas
pop
dec
push
std
xchg
dec
iret
hlt
cli
jo
shl
add
mov
fptan
scas
jecxz
mull
cmp
bound
dec
ds
fldcw
outsl
and
out
xchg
out
lods
mull
lret
cmpl
ror
or
clc
ret
xor
call
jno
mov
fs
mov
rolb
jb
leave
stc
popa
adc
imul
xor
jbe
cmc
mov
out
neg
js
and
mov
std
dec
push
pushf
adc
mov
and
xchg
jmp
xor
pop
cld
inc
pop
add
test
out
adcb
fdivr
mov
inc
rol
daa
ret
jl
xchg
fimuls
pushf
inc
mov
mov
arpl
cli
dec
cmpl
out
sub
das
cmp
push
inc
inc
ret
dec
jmp
xchg
fdivrl
fsubr
mov
mov
mov
test
les
ja
dec
outsb
adc
mov
push
imul
mov
pushf
aam
mov
in
jb
shlb
int
xchg
fisubrs
jmp
shlb
pop
mov
sub
jae
fs
das
lds
xchg
mov
out
push
lret
mov
mov
jg
jle
icebp
adc
and
push
ss
mov
dec
lds
mov
mov
mov
mov
push
inc
sub
jb
or
in
adc
andl
push
push
out
adc
rorb
jns
xor
mov
incb
testl
mov
xor
push
je
hlt
stos
enter
pop
arpl
mov
xlat
pop
cmp
popf
test
je
jne
or
jg
add
adc
addr16
pop
icebp
xchg
rol
divl
xchg
sub
jge
mov
cmp
adcl
gs
mov
or
mov
out
xchg
inc
dec
popf
rorl
sbb
mov
cmp
test
shrl
push
jge
insb
and
dec
push
sti
out
repnz
std
cmp
push
jb
fwait
scas
sti
sbb
mov
lret
lods
adc
dec
loop
rcrl
in
cmpsb
sar
inc
js
mov
sbb
push
aam
dec
in
mov
shrb
mov
push
mov
imul
lret
sub
arpl
pop
jg
cmp
cmp
sub
ja
loopne
mov
cmpsb
in
xchg
jno
inc
inc
outsl
add
mov
mov
popf
mov
and
inc
xchg
out
icebp
xchg
jbe
add
sti
xor
nop
sbb
jo
push
repnz
mov
call
pop
imul
inc
ret
mov
mov
mov
callw
dec
push
add
fwait
sbb
mov
aad
fcmovb
and
cmpb
bnd
out
clc
gs
sti
clc
add
add
cmp
cli
sbb
xor
cmp
adc
outsb
fimull
mov
sub
mov
out
push
dec
test
mov
lods
stos
je
popf
add
aam
mov
mov
jnp
shr
sbb
cmp
in
add
push
adc
orb
stos
shrl
out
shrb
sbb
or
in
inc
sahf
push
ficoms
pop
sbbb
lea
popf
dec
jl
mov
jns
dec
fincstp
mov
repnz
inc
push
je
fcoml
xor
cmp
pusha
and
push
daa
mov
cmp
outsl
aas
xor
pusha
test
addr16
lcall
xor
pop
adc
ss
mov
enter
mov
xor
inc
dec
leave
jne
xchg
mov
pop
sbb
and
out
xchg
movsb
scas
aaa
and
push
mov
pop
inc
xchg
mov
cmc
sub
fmuls
pusha
pop
and
ds
sbb
or
cld
fs
stc
pop
fisttpll
add
mov
loopne
pop
add
add
and
fisttpl
mov
adc
repnz
lret
push
lods
ror
mov
xor
aas
mov
popa
cwtl
sbb
jnp
cmp
mov
sbb
int
jecxz
adc
sub
leave
mov
loope
pop
push
sbb
or
cmp
mov
pop
cmp
pop
ja
outsl
fsts
pop
cmp
add
pop
jns
push
mov
xchg
inc
mov
pop
rol
out
pop
push
cltd
cwtl
test
int
dec
mov
popl
and
inc
jne
fdivrs
shrb
xor
sbb
loopne,pt
test
push
scas
leave
xchg
jns
imul
xchg
pop
outsb
in
jmp
adc
pusha
jecxz
jl
testb
xchg
sbb
outsb
scas
nop
inc
xorl
sbb
and
in
xchg
jae
xor
pop
mov
jb
imul
pop
das
stos
mov
cmp
mov
popf
enter
stos
fnstsw
mov
rcrb
gs
pop
add
ss
cmc
mov
sbb
inc
inc
xor
inc
inc
push
jne
sub
pop
and
test
pop
jne
loop
jg
std
dec
ss
mov
js
aam
movsl
adc
bound
mov
shl
lds
jnp
hlt
cmpsb
loop
mov
pop
iret
pop
arpl
adc
leave
mov
xchg
sbb
and
xor
cmpsb
adc
add
popf
jle
fwait
mov
mov
aas
call
push
pop
aaa
sbb
lea
jecxz
jns
fwait
mov
out
dec
xor
mulb
adc
mov
test
fs
repnz
cmp
pop
ror
and
inc
lods
jmp
mov
pop
mov
gs
js
ja
fdivrs
jno
ret
negb
push
nop
xchg
sub
jbe
repz
or
int3
loop
cld
mov
popa
xchg
ret
xorb
clc
jns
fsubr
shlb
mov
mov
pop
mov
stos
push
inc
call
jnp
adc
cmp
pop
shl
popf
inc
jmp
xchg
or
ljmp
jbe
inc
int
cmp
fwait
rclb
das
cltd
arpl
pushf
cld
cwtl
popf
xchg
xcrypt-cbc
cmpsl
xchg
ss
mov
cmp
jae
adc
pushl
testl
jbe
adc
lds
xor
std
push
mov
enter
push
fisubrs
repnz
or
fidivrl
data16
lret
pusha
and
fs
js
lods
add
dec
loopne
je
pop
xchg
sub
pop
test
into
add
pop
enter
xor
je
push
pop
pop
fwait
ja
fdiv
mov
add
xor
ficompl
pop
inc
fcomps
fwait
enter
scas
mov
push
icebp
stos
xchg
daa
hlt
arpl
pusha
cmpsb
or
testl
push
lds
jne
xchg
sbb
fxch
loopne
sahf
in
mov
or
xrelease
sub
nop
subb
test
add
decb
je
sbb
or
test
adc
jne
mov
push
sahf
xchg
jmp
ljmp
dec
fwait
out
ss
pop
pop
push
fdivr
cmp
pop
in
imul
loopne
and
adc
sbb
mov
xchg
push
and
movsl
popf
aad
adc
in
fldenv
mov
iret
sub
lods
dec
int
xchg
cwtl
xor
pop
mov
xchg
mov
mov
and
jecxz
jl
jle
pop
mov
pop
add
mov
lea
int
flds
pop
sbb
xor
and
scas
xor
mov
scas
ret
push
adc
push
gs
mov
push
or
cmp
mov
mov
notb
shr
xor
fimuls
aas
xor
mov
or
add
js
fisubs
xchg
in
xchg
outsb
mov
test
xchg
mov
fs
jno
cltd
dec
sti
int3
cld
jmp
out
pop
pop
mov
mov
aas
lret
call
idivl
adc
jecxz
adc
jno
inc
imulb
pusha
lret
or
int3
mov
cwtl
pop
jl
pop
or
out
push
mov
dec
incb
mov
in
push
cs
push
hlt
adc
mov
idivb
add
insb
lahf
add
push
pop
popa
sbb
xchg
cld
sbb
pop
cmc
sbb
jae
adc
mov
xor
push
or
rcll
into
inc
xor
sbb
mov
cs
fadd
dec
jmp
adc
cmp
or
mov
into
test
je
in
fimull
dec
jb
inc
jne
mov
mov
frstor
xchg
outsl
adc
sbb
cs
ljmp
aaa
mov
sub
fwait
inc
mov
mov
imul
pop
xor
int
inc
add
arpl
cmpsl
cmp
pushf
or
fisttpll
or
push
mov
add
std
pop
cld
pop
add
into
scas
lock
test
xlat
lret
inc
lret
and
jmp
movsl
sub
fninit
mov
xor
jge
call
mov
in
es
jge
rcrb
aam
inc
fidivs
push
inc
notl
cli
or
out
fwait
mov
in
sarl
mov
scas
mov
aaa
dec
fadds
jb
iret
xchg
fmul
icebp
jp
jle
ds
lret
cmc
out
push
movsl
notb
add
add
sbb
add
bound
mov
decl
shl
mov
je
pop
xor
mov
mov
push
clc
std
inc
addr16
add
add
testb
rcpps
je
cmpsb
cs
mov
sbb
xchg
lods
outsl
cwtl
and
and
aaa
rclb
fstpt
dec
mov
ja
inc
iret
lds
cmpsb
cs
or
sbb
fwait
mov
mov
mov
orb
negl
repnz
push
jo
lcall
mov
sbb
sub
mov
ret
movsb
movsb
int
jl
jmp
scas
jle
test
mov
dec
enter
add
sbb
fdivl
testl
rcrl
or
fstps
cli
jmp
push
lds
adc
les
sub
sbb
push
pop
outsb
push
cwtl
ja
push
or
dec
and
cmp
pop
fdivl
xor
sbb
mov
push
or
xor
sub
jbe
xor
lods
in
scas
pop
icebp
addr16
repnz
mov
mov
jo
xchg
add
mov
mov
cmp
cld
adc
pop
fisubs
out
jge
enter
shll
pop
repnz
jns
dec
add
sbb
push
mov
fdivrs
dec
divl
adc
dec
lcall
decl
ljmp
or
xor
jno
push
js
cmpsl
outsl
mov
icebp
push
js
mov
add
or
inc
push
jle
xor
push
pop
shrl
cmp
fisttpl
test
icebp
cmpsl
pop
mov
and
hlt
sub
pop
cmp
fsubrp
adc
pop
insl
and
fsubl
test
pusha
loopne
clc
sti
cli
inc
iret
popf
js
pop
adcl
jb
popa
or
in
cwtl
mov
add
push
adc
or
xchg
mov
sub
mov
or
cmc
push
push
sub
and
pop
lret
dec
sahf
divps
sub
inc
and
popa
bound
jb
movl
gs
loopne
xchg
and
pushf
in
test
outsb
mov
gs
stos
daa
pop
xchg
inc
inc
add
imul
and
pop
aam
mov
and
push
das
gs
dec
outsb
je
cmp
jne
movsl
inc
loop
dec
dec
fisubl
mov
in
cmp
pop
pop
pop
pusha
mov
loope
daa
insl
cld
add
pusha
push
push
push
jl
loope
and
clc
add
sub
jmp
icebp
ror
jno
mov
mov
pop
push
pop
iret
es
mov
clc
nop
pop
mov
jnp
push
scas
mov
pop
inc
sub
sub
ljmp
cmc
or
sub
lahf
mov
and
sbb
jmp
jne
imul
add
lock
sbb
lcall
stos
hlt
or
mov
in
repz
fdivr
and
nop
mov
sbb
mov
mov
mov
jo
vmread
mov
adc
add
popf
popa
mov
add
push
cmpsl
insb
xor
push
jl
lret
imul
xchg
xchg
mov
xor
sahf
pop
cwtl
cmc
andb
in
adc
imul
jg
into
jbe
pop
call
loope
ss
cmpsb
insb
adc
jno
jl
inc
or
push
mov
jae
and
cs
xchg
testb
imul
sbb
sub
mov
cmpsb
imul
mov
stos
adc
out
sti
mov
cmp
in
outsb
push
sahf
int3
push
pop
lret
lret
stos
dec
rcrl
dec
frstor
add
lds
xor
gs
mov
das
sbb
pop
mov
insl
daa
mov
lahf
popa
cmp
imul
lret
dec
fdivrl
fs
leave
jl
aad
lcall
pop
js
sub
add
xor
add
inc
stc
or
fisttpl
jb
lea
mov
rcr
and
add
push
inc
cmp
out
xor
leave
inc
out
mov
fidivl
ret
add
pop
out
cmp
xor
push
push
outsl
andl
xchg
xchg
jae
xor
mov
adc
jl
mov
jmp
rorb
mov
and
mov
sbb
add
sbb
xor
mov
xor
lret
dec
dec
mov
add
and
or
mov
adc
cmp
cs
mov
aaa
das
shll
leave
dec
aam
mov
lock
imul
cs
aam
sub
lock
xor
lret
das
jl
repz
lret
fiaddl
mov
mov
ret
jne
add
and
pop
fs
fmul
or
aaa
nop
cmc
xor
xchg
data16
subb
in
les
inc
pop
cmp
aas
sbb
flds
mov
push
adc
ret
mov
lds
pushf
test
pop
xlat
push
mov
lock
fcompl
subb
insb
lods
aaa
stos
or
clc
subl
jle
xchg
sbb
add
jnp
loop
mov
push
inc
sbb
scas
jnp
aas
bound
lret
insb
xor
insb
mov
sahf
stos
jmp
mov
pop
push
adc
call
add
or
test
sub
pop
cld
xor
cmp
repnz
out
cmp
ja
jo
adc
cmc
movsb
lcall
mov
arpl
mov
add
inc
int
push
loope
mov
push
push
push
mov
lds
in
scas
dec
cltd
decl
mov
inc
sub
insl
jg
mov
jp
movsb
pop
xchg
xchg
movb
adc
rcll
rcl
pop
and
xor
jmp
rclb
cmp
mov
bound
xchg
aad
scas
aam
mov
mov
shll
cmpsb
jecxz
inc
inc
or
and
call
fdivrl
aam
cmp
out
fcmovu
pop
cmpsb
jo
xor
and
mov
sub
in
gs
call
jno
ljmp
vfrczsd
nop
push
inc
add
and
scas
pop
mov
data16
test
mov
and
fstpl
mov
lret
insl
test
js
inc
mov
sub
mov
xchg
push
loopne
outsl
sahf
adc
adc
and
mov
insb
cld
mov
daa
das
in
xchg
add
lock
lea
and
and
fwait
jmp
test
adc
cltd
jg
ror
sarb
dec
pusha
pop
and
mov
cmp
in
xchg
adc
psubsb
xor
add
out
adc
cli
adc
xchg
adc
ja
and
popa
iret
popf
leave
mov
pop
add
push
stc
inc
cmpb
fstp
cmp
std
cwtl
or
insb
pop
pop
sbb
push
xchg
jg
cmp
sahf
mov
dec
xchg
pusha
out
mov
cmp
jecxz
sbb
add
pop
fdivr
push
movsb
mov
lea
or
mov
add
pusha
xchg
xor
je
cli
mov
push
fmuls
pop
sbb
mov
mov
pushf
nop
icebp
jmp
mov
inc
mov
jmp
insl
into
mov
int3
std
jl
dec
sub
adc
jp
xchg
fsubr
adc
dec
subb
mov
mov
xchg
je
adc
gs
inc
popl
mov
sub
mov
bswap
insb
or
es
je
fstps
mov
sbb
mov
jmp
loope
ds
inc
sbb
and
dec
xor
std
and
push
cli
aad
mov
xchg
sbb
push
out
jmp
aaa
cmp
pop
je
and
shrl
and
xchg
sbb
imul
scas
cmp
push
push
gs
icebp
lea
repnz
mov
dec
sub
in
fnstcw
xchg
jp
dec
mov
cwtl
mov
pop
andl
ret
adc
xchg
push
es
gs
fstpt
insl
mov
out
es
cmp
addr16
aad
xchg
rcll
repz
inc
push
mov
pop
into
call
dec
and
mov
fcompl
xor
test
and
sbb
dec
mov
pushf
insb
adc
data16
insb
gs
sarl
js
jb
or
mov
or
or
pop
es
pop
int
push
cmpsb
in
push
sbb
fadd
inc
gs
sbb
mov
mov
jo
lcall
cwtl
bnd
lds
sbb
icebp
push
shrb
cld
lock
mov
in
mov
add
push
mov
jne
outsl
jno
xlat
xor
call
out
fimuls
lret
sub
bnd
sbb
call
mov
cmpsb
cmp
push
dec
jae
movsb
or
dec
xor
sub
popf
aad
xor
imul
aad
jge
pop
aas
loop
inc
xchg
das
aad
push
mov
stos
jle
addr16
mov
in
aam
mov
and
pop
ret
lods
mov
cmp
or
dec
mov
mov
adc
dec
inc
addb
push
or
lret
sbb
lahf
jns
lret
dec
mov
pop
pop
dec
fidivl
shr
lret
jmp
add
mov
rorl
cmp
pop
pop
sub
int
adcb
pop
fucomip
ss
fwait
lret
pop
inc
ret
inc
fwait
arpl
outsl
mov
mov
cmp
push
push
ljmp
xor
mov
or
iret
fdiv
popf
test
nop
aas
dec
mov
xchg
add
add
insl
rorl
lahf
addb
push
hlt
subb
sbb
fldenv
or
pop
std
mov
or
int3
lds
dec
clc
mov
in
push
xchg
pusha
push
sub
push
push
bound
mov
and
add
add
mov
cmpsb
jge
lret
enter
lods
mov
and
sbb
insb
sbb
push
xchg
xchg
mov
add
mov
pop
jns
sbb
cmp
mov
or
inc
adc
dec
aad
repz
sbb
rolb
addl
ds
fcoml
lea
sar
outsl
sbb
sub
dec
inc
test
stc
push
add
lcall
pop
xor
mov
decl
call
pop
loope
or
jg
fiaddl
ss
jge
lock
int3
movnti
sub
in
stos
sarl
imul
fcmovbe
cmp
xchg
mov
not
in
inc
sahf
das
aas
add
sub
cli
mov
arpl
or
jecxz
mov
or
addl
dec
add
js
dec
sbbb
fcmovbe
jl
adc
mov
les
daa
test
push
mov
dec
aaa
cmp
and
mov
in
add
insb
sub
mov
dec
negb
sbb
inc
dec
mov
out
popa
je
sti
lret
or
aas
ljmp
orb
sbbl
rorb
rcl
cmpsl
fwait
scas
outsb
bsf
pop
cmp
push
imul
pop
adc
cmpsb
add
adc
pop
jmp
mov
push
ja
cmpb
pop
pop
jne
or
dec
sbb
jmp
cmp
hlt
cmpsl
and
aas
cmp
adc
adcb
jmp
data16
xchg
and
pop
push
rcll
sbb
out
pop
cwtl
out
rolb
arpl
adc
movsb
adc
adc
add
xchg
loope
jp
pusha
cltd
adc
mov
lret
xchg
xchg
sub
or
in
and
outsb
adc
fistpl
xlat
leave
test
adc
mov
mov
add
cld
sahf
pop
push
loopne
mov
push
sar
add
sub
cld
ss
push
pop
push
gs
inc
push
add
shr
data16
jno
push
scas
movsl
std
out
popaw
inc
inc
sbb
fildl
je
mov
dec
add
mov
pop
pop
jle
pop
jo
stc
cld
sbb
pop
add
mov
fimull
popf
das
fnstenv
pop
test
rcr
call
cs
mov
push
mov
and
inc
insl
xor
rolb
sub
dec
aas
fcmovne
pop
and
jge
or
cmpsb
shl
fists
lret
jmp
hlt
mov
inc
sbb
sbb
lock
in
jp
add
push
lea
fistl
int
inc
addr16
mov
in
in
jne
and
push
xchg
out
aam
pop
jns
jb
fldl
cltd
xchg
add
add
jae
mov
shl
adcl
lcall
dec
lcall
push
lods
filds
mov
inc
lahf
or
inc
dec
lret
cltd
pop
lds
into
pop
shl
xor
inc
sub
or
notb
lret
push
sarb
sbb
in
mov
mov
dec
bound
push
repnz
sbb
test
out
insb
sti
cmpsb
out
xor
pop
dec
jb
stos
popa
hlt
and
jle
add
mov
fisttpl
jno
mov
mov
adc
mov
bound
ret
out
call
adc
and
popa
jmp
xchg
aam
stos
cmp
andb
push
cmpsb
xor
aad
aaa
inc
mov
negl
jp
xor
jbe
push
cmp
bound
cmp
sbb
xchg
mov
lock
adc
push
data16
xchg
mov
jmp
inc
adc
iret
push
mov
jae
mov
xlat
adc
testb
call
fsubrs
xor
pusha
in
ds
cltd
jl
ljmp
mov
or
enter
add
and
stos
mov
mov
shlb
jno
popf
or
push
repnz
test
and
into
fistpl
pop
sbb
aam
mov
fwait
push
mov
mov
fs
sub
outsl
insl
lods
arpl
jnp
pop
fiaddl
xor
aas
jno
fildll
inc
pop
cmp
inc
dec
fidivl
popa
push
xor
punpckhdq
cli
lods
push
out
fwait
rcl
subb
sbb
dec
push
into
out
sbb
xchg
xlat
push
jae
inc
movsl
and
lret
fmuls
sbb
cmp
jno
mov
sbb
movsb
fistpll
jl
pusha
mov
popf
dec
mov
es
jecxz
push
out
mov
pop
ljmp
mov
push
cmp
sbb
push
xor
jno
pop
jg
pop
test
inc
mulb
insb
add
ljmp
aam
inc
int
and
es
ret
lock
mov
xchg
add
jle
imull
mov
fs
dec
mov
addr16
loop
arpl
ror
enter
xor
fisttpll
cmp
inc
out
out
mov
out
push
cli
ja
jmp
sbb
adc
fiaddl
fimull
mov
outsl
inc
mov
mov
sub
repnz
jl
xchg
mov
into
movsb
in
pop
aas
pop
jo
push
cmp
gs
and
das
push
dec
inc
xor
cmpsl
mov
stos
or
out
add
inc
scas
test
fcoms
popa
inc
xor
mov
shll
rcl
hlt
test
add
sbb
jl
sahf
ror
cmpsb
stos
lret
push
repz
push
jns
add
es
or
ficompl
sbb
xchg
sub
cmpsl
lds
icebp
ret
leave
dec
dec
loopne
outsl
cmp
mov
xchg
fincstp
lods
fcomps
ljmp
xchg
scas
test
mov
xor
dec
dec
xor
inc
inc
or
test
mov
outsb
inc
mov
and
popa
push
jmp
mov
hlt
in
repnz
daa
scas
inc
xor
sub
adc
int3
in
test
jp
mov
popf
ret
fidivs
popf
xor
imul
dec
xor
lods
test
jg
sbb
dec
lcall
xor
mov
mov
out
insb
rcrb
mov
cmp
mov
sahf
clc
jno
push
cmp
js
and
jae
icebp
pusha
dec
outsb
aam
sbb
pop
test
sbb
call
stos
lds
mov
popa
sub
popf
pop
in
pop
adc
es
js
mov
mov
fnsave
in
fcomi
mov
jmp
test
xchg
clflush
adc
ret
in
add
sahf
test
adc
inc
or
mov
xchg
mov
inc
push
mov
test
push
add
adc
and
lods
insl
mov
stc
add
jmp
das
push
lret
aaa
or
push
inc
push
cmp
std
loop
nopl
xlat
jle
mov
mov
xchg
adc
cwtl
aas
fidivrs
or
dec
jl
stos
cmp
pop
cmp
test
out
lret
inc
jmp
or
push
inc
mov
fst
xor
addl
mov
lock
shrb
cs
push
inc
sbb
sub
popf
inc
loope
pop
or
cmp
xchg
xchg
adc
add
dec
ror
push
push
bound
pop
inc
jg
dec
cld
lods
shlb
rcl
xchg
sub
test
and
xor
pop
cmp
test
mov
out
xor
in
in
or
pop
sbb
das
clc
insl
out
aad
inc
and
xchg
and
inc
cmp
out
nop
fmuls
lods
loopne
inc
push
jb
pop
stos
inc
aas
dec
and
lea
xor
out
mov
mov
sbb
add
flds
bnd
rcrl
sbb
fwait
cmc
xchg
add
lahf
mov
pop
xchg
jecxz
cmp
lret
mov
movsb
pop
adc
inc
add
inc
pop
out
sbb
jb
cmp
fucomp
js
and
mov
push
sbb
daa
fcoml
cmp
shrl
nop
pop
xchg
movsl
daa
push
sbb
and
test
jl
out
and
dec
mov
inc
dec
mov
mov
dec
inc
mull
sahf
pusha
inc
pop
mov
pop
jmp
pop
push
xor
gs
out
push
or
sub
ficompl
ljmp
sti
lea
mov
jg
mov
or
xchg
add
in
or
jnp
xlat
test
xchg
lea
dec
cmp
xchg
and
sbb
xchg
fwait
xchg
movsb
pop
stos
test
sbb
push
add
insb
dec
rcrl
repnz
xor
adc
push
dec
dec
lcall
pop
sbb
inc
xor
cmp
inc
or
dec
pop
jne
xchg
loop
mov
icebp
jns
mov
and
mov
shrl
int3
sbb
nop
cmpsl
push
mov
cmp
and
leave
sub
jns
jb
cmpsl
cmp
and
inc
mov
movsl
xchg
rorl
mov
ret
or
stos
lahf
mov
dec
js
push
jg
xchg
push
fnstenv
lods
rcrl
in
cltd
sub
inc
hlt
fcmovnbe
add
or
ss
mov
push
cmp
leave
adc
xor
je
xchg
push
enter
je
mov
jg
int
jb
and
fmuls
fisttps
or
loop
dec
mov
imul
gs
add
cmp
imul
mov
adcb
jnp
add
movsl
scas
movsl
sbb
xchg
sbb
into
ljmp
push
int3
or
scas
mov
push
iret
cmpsl
stc
push
sub
in
fsubp
insl
mov
hlt
jbe
sbb
pop
xchg
gs
fldt
subb
add
inc
add
jmp
or
and
mov
fstpl
ljmp
insb
dec
lahf
jbe
test
mov
iret
imul
xor
mov
cli
in
arpl
jnp
pop
sub
and
aam
adc
or
push
aaa
push
xor
add
fldt
push
mov
out
je
pop
xchg
daa
xlat
sub
push
div
adc
add
orl
mov
cmp
clc
xorb
xchg
pop
orl
jo
or
xchg
cmp
jle
into
mov
imul
mov
sarl
push
test
orb
dec
icebp
mov
and
imul
hlt
sbb
rcrl
popa
ja
lds
shrb
fwait
lret
sbb
cmpsb
insl
adc
fsubs
push
mov
into
insb
mov
jmp
push
in
popf
inc
mov
and
push
fcoms
shr
push
mov
xor
pushf
je
scas
push
pop
or
js
push
outsl
int
mov
adc
pop
jle
xchg
inc
addr16
mov
inc
mov
leave
cmp
cmpsb
sbb
pop
push
int3
loope
xchg
fcomp
mov
movsl
out
xchg
out
lea
sahf
mov
push
ss
sbb
pop
mov
jne
aam
cmpsl
inc
mov
repnz
sbb
mov
mov
jbe
cld
and
mov
push
mov
mov
inc
adc
sub
pusha
pop
mov
lret
adc
jl
mov
rclb
xchg
mov
loopne
int
xor
dec
popf
dec
inc
push
push
adcl
mov
sub
mov
cmpsb
xchg
sub
xchg
in
xchg
aad
das
sub
jecxz
xor
inc
out
ret
lret
mov
fldenv
mov
sbb
lods
fwait
push
jbe
pop
mov
rorb
aas
xor
mov
call
xchg
fdiv
mov
mov
hlt
add
scas
loope
setns
push
sub
cmpsb
test
lcall
scas
ljmp
pop
hlt
sbb
push
in
cmpsb
pop
fdivrl
xor
out
dec
addb
in
stos
and
in
cld
xchg
sub
jb
dec
aas
cwtl
loope
adc
mov
xchg
add
jnp
nop
xchg
inc
sub
loopne
and
inc
mov
xor
mov
sub
or
sbb
xchg
out
movb
std
enter
or
jbe
aas
or
jns
cmp
insb
add
enter
test
lcall
test
adc
in
ss
adc
push
inc
or
out
mov
inc
insl
push
mov
es
ret
popf
mov
fisubrs
fmull
inc
dec
pop
jnp
mov
mul
loope
pop
mov
inc
shlb
push
leave
andl
lds
popa
jmp
mov
push
cs
pop
lcall
cmp
sub
mov
imul
lret
scas
idivl
xchg
fmull
jle
add
mov
leave
lods
or
rcr
jns
int3
or
test
les
je
or
cmpsb
aad
push
test
pop
jb
mov
and
aaa
xchg
sbb
and
fcompl
in
pop
mov
mov
xor
faddp
xor
dec
inc
insl
lods
sub
in
mov
lcall
imul
clc
mov
loopne
fsubl
repz
movsb
mov
push
mov
popa
ror
mov
pushf
or
lds
shll
aad
je
jecxz
or
rolb
mov
mov
popa
leave
pop
aad
pop
sub
sbb
in
fisubs
mov
je
inc
mov
jge
cmpsl
push
xchg
push
scas
shll
dec
mov
pavgb
jns
repnz
lret
dec
dec
push
cltd
sti
cwtl
ds
jmp
test
sbb
inc
jae
push
incb
jecxz
mov
jo
push
into
pop
std
aam
popf
inc
cmp
cmpsb
cmp
bound
test
out
lahf
xchg
ret
jnp
jbe
enter
mov
pop
xor
sbb
xor
cs
mov
cmp
jno
orb
fstps
jnp
pop
mov
cmc
or
insb
aam
xor
aad
enter
cmpl
retw
jns
ret
mov
inc
dec
outsl
mov
push
xor
jmp
fsub
sbb
loopne
pop
getsec
mov
push
inc
adc
sbb
pushf
xchg
dec
std
out
and
insb
and
adc
loope
mov
cmpsb
movsl
sub
nop
push
sbb
mov
mov
aas
mov
loop
and
popa
xchg
mov
ja
mov
clc
push
mov
adc
xchg
jmp
pop
xchg
xchg
js
xchg
fnstcw
in
cmpsb
pop
jne
in
rorl
fsts
and
xor
push
pop
ja
adc
imul
push
add
gs
out
out
fadd
jno
xor
lcall
fiadds
lret
jmp
mov
mov
shl
sti
or
xor
xchg
sbb
and
fistl
in
aam
insl
stc
fidivs
push
mov
jle
das
push
unpcklps
mov
cld
mov
dec
pop
sub
popa
je
or
push
cmpsl
loope
mov
gs
sbb
mov
pop
sbb
enter
shrl
mov
pop
add
daa
stos
or
ljmp
dec
popf
popa
in
loope
inc
arpl
cmp
and
lods
and
mov
insb
push
imul
sub
inc
cmp
cli
jo
mull
scas
cmpsb
jo
dec
lcall
mov
adc
fstl
pushf
sbb
in
ret
inc
adc
cmp
pop
arpl
ljmp
outsl
imul
push
fcoms
loopne
fwait
ja
cmp
add
mov
ss
pushf
fabs
pusha
call
sbb
jmp
cmp
lea
jbe
dec
out
shll
leave
enter
lahf
sub
popf
bound
push
outsl
xchg
cmp
mov
icebp
adc
lods
lahf
sub
jne
jmp
outsb
daa
mov
pop
inc
push
movsb
cwtl
bound
cmp
cs
clc
sbb
lcall
lcall
adc
in
in
test
or
cmp
xchg
cmc
jl
cmc
push
push
flds
fiadds
fsts
push
popa
dec
repz
int3
addl
test
lahf
mov
cmp
xor
imul
movsb
lret
loop
cli
and
push
sub
push
push
rorl
jmp
in
frstor
xor
adc
gs
insb
pop
mov
and
mov
lea
out
push
push
insb
xor
mov
xor
mov
sbb
sar
dec
dec
adc
cmp
push
mov
jge
test
fiadds
jg
test
cmpsb
fiadds
aas
push
cmp
pop
in
or
jbe
dec
repz
xor
fnstsw
add
call
xchg
in
jo
pop
out
stos
fxch
add
inc
push
fwait
in
xlat
sub
cltd
fwait
mov
sbb
push
out
in
mov
mov
shl
repnz
dec
gs
pushf
dec
xchg
sti
mov
insb
mov
int
popa
fldt
pop
sbb
mov
xor
or
lahf
jmp
sub
cmpsb
aaa
push
das
and
pop
adc
xor
cmp
sub
mov
or
dec
dec
xchg
out
aad
sub
sbb
push
mov
mov
out
mov
lods
xlat
pop
aad
inc
mov
mov
jecxz
std
xchg
test
fists
pop
es
test
mov
enter
xor
rorb
sbb
jl
jnp
pop
stos
stos
pop
jmp
add
mov
imul
fs
repnz
lret
xor
add
push
add
leave
inc
pop
insb
ret
or
jmp
inc
dec
mov
test
adc
notl
pop
fs
repnz
mov
cmp
nop/reserved
xor
pusha
push
jg
test
mov
mov
out
mov
jle
arpl
mov
insb
pop
cmpl
fiaddl
movsl
mov
or
repnz
out
mov
xor
insb
push
fsts
fs
xchg
sahf
mov
gs
scas
mov
test
pop
in
cmovo
movsl
fimuls
push
fcoms
sbb
xchg
xlat
mov
mov
cld
icebp
xor
xchg
sbb
popa
cmc
push
sarl
lock
movsl
add
push
int
jl
cli
cli
push
pushaw
cmp
bound
jae
sbb
pushf
insl
popf
sub
out
push
push
lret
stos
mov
or
mov
sbb
xor
dec
jecxz
cmp
mov
mov
xchg
push
mov
sub
cmpsb
fstpt
jns
lods
or
loope
pushf
sbb
fistps
add
jb
adc
and
pop
jmp
faddp
mov
xchg
ja
test
lods
jmp
jl
jmp
jnp
cld
xchg
aas
sub
sub
sarl
repnz
pop
test
mov
push
mov
cmp
popa
scas
shlb
mov
xchg
es
and
scas
imulb
dec
jmp
mov
orb
sbb
call
shl
decb
leave
push
xor
cmp
ljmp
push
movsl
nop
std
and
movsb
aad
cmc
add
inc
testb
enter
pusha
ljmp
inc
mov
test
xlat
test
icebp
scas
pop
xchg
mov
push
scas
outsb
push
jmp
add
xchg
jb
fstps
push
cli
mov
xchg
outsb
cmp
pop
cmp
lods
loope
ljmp
movsl
xchg
jae
jge
sub
push
jbe
test
xchg
lcall
xchg
int
insb
leave
pop
and
cmp
xor
jmp
popa
fs
or
cld
inc
mov
add
hlt
std
adc
out
shrl
lcall
sarl
lahf
mov
push
push
jmp
dec
inc
rcrl
adc
jne
cwtl
in
repnz
xchg
shll
fimuls
daa
mov
bound
and
in
cld
add
ficoml
vshufps
lock
ret
decb
in
ljmp
jle
cmp
bound
mov
lahf
jns
cltd
fidivl
pop
and
xchg
sub
jl
mov
ret
fwait
lods
stc
mov
rcrb
int3
sbb
xchg
pop
xor
mov
xchg
mov
sub
faddl
sbbl
fbstp
xor
loope
fcomi
scas
leave
mov
xor
mov
stos
test
and
cli
in
xor
dec
mov
pop
dec
adc
cmpsb
test
or
xchg
jl
dec
sub
mov
stos
clc
cld
adc
out
das
dec
inc
int3
lahf
adc
testb
stos
and
aas
xor
push
push
hlt
stos
sub
or
test
mov
mov
sbb
shll
cmc
push
pop
and
mov
or
into
adc
idivb
or
daa
cltd
jecxz
int3
imul
xor
lods
adc
cltd
mov
push
mov
adc
ss
pusha
dec
imulb
out
ja
inc
push
pop
icebp
test
xor
jp
test
insl
xor
jbe
dec
in
or
jmp
stos
inc
add
dec
sbb
or
shlb
stc
insl
test
jnp
sbb
call
or
scas
or
orl
in
cwtl
jle
out
pop
ds
adc
loope
lret
cmp
mov
jle
inc
out
clc
cmp
xchg
mov
sbb
test
nop
rcrb
popa
sbbl
loop
rcrl
test
fnstenv
clc
dec
fsub
das
mov
sub
fwait
xor
ds
or
les
mov
adc
push
mov
scas
pop
loopne
mov
cmc
jns
sub
lds
mov
sbb
lea
gs
insl
psllw
popa
dec
fnstsw
sub
lea
dec
loope
cmp
and
lock
mov
mov
test
xor
neg
negl
dec
push
inc
mov
xchg
repz
lds
mov
loopne
adc
sbb
mov
push
cmpsb
dec
dec
jae
lahf
movsb
in
cltd
jecxz
adc
imul
sbb
dec
fists
cmp
push
jo
push
mov
add
mov
xchg
divl
rorb
add
fiadds
push
lcall
gs
add
add
mov
cmp
lret
in
mov
cmpsl
dec
xlat
leave
mov
xlat
fs
xchg
sub
mov
insl
outsb
adc
fdivl
or
mov
stos
adc
repz
cmpsl
outsb
ret
dec
xchg
in
test
xchg
sbb
imul
inc
lcall
jne
inc
mov
xor
das
icebp
xchg
nop
cli
pop
iret
mov
addr16
sub
lea
adc
lcall
sbbl
nop
out
and
rclb
sbb
lcall
cmp
sbb
sub
adc
cltd
in
sub
les
arpl
pusha
mov
add
stc
mov
cwtl
gs
insl
ja
arpl
enter
adc
repz
ror
clc
subl
rol
js
and
and
bound
in
mov
shlb
aaa
jo
sbb
loope
cli
or
add
sub
iret
and
outsb
inc
jle
shl
ret
mov
jns
test
hlt
out
push
adcb
xchg
pop
or
pop
or
mov
mov
xlat
insl
mov
fsubrs
sub
cs
cmp
xchg
outsl
push
jnp
movb
lock
pop
xchg
hlt
sub
aam
aam
mov
pushf
pop
aad
mov
or
scas
fidivrl
add
iret
ja
stc
inc
sbb
nop
jecxz
test
inc
sub
fwait
outsb
std
inc
xchg
xchg
lods
cld
filds
repnz
sarb
sbb
inc
cwtl
or
adc
out
mov
jns
xchg
int3
int
fsubrs
mov
or
xchg
fnstcw
pop
aaa
ja
xor
xchg
gs
lcall
jb
test
dec
mov
outsb
add
mov
int
call
or
dec
pop
int
mov
sarl
in
addr16
jo
dec
cld
cmp
in
and
ret
mov
mov
push
push
mov
in
xchg
inc
fnsave
cltd
mov
pop
pop
adc
dec
lock
fildl
jnp
and
mov
jle
out
cmp
out
mov
js
push
ss
lea
sbb
mov
lcall
inc
icebp
ret
xchg
push
mov
lcall
movsl
movsl
sub
into
int3
imul
pusha
insb
out
adc
in
ret
sahf
sti
lods
adc
aaa
sub
nop
pop
mov
push
push
adc
sbb
into
test
mov
push
sub
xlat
aas
mov
sub
aam
das
sbb
or
xchg
cmpsl
aam
dec
push
or
pop
outsl
leave
out
dec
jl
loopne
lret
loope
mov
and
rcrb
orl
scas
aaa
shll
cmp
mov
out
dec
aaa
int
pusha
xor
push
mov
aam
jmp
push
mov
clc
hlt
ret
jl
mov
mov
mov
jle
jbe
xchg
int
idivl
inc
cmp
adc
push
pop
xchg
ljmp
mov
xchg
out
cmpsl
fadds
std
jns
jg
mov
or
scas
push
pop
scas
pop
scas
mov
sub
aad
hlt
push
insb
cmp
or
popa
in
jge
lea
rolb
dec
ret
xchg
or
adc
call
fldcw
cltd
popf
adc
pop
dec
jge
stos
cmc
inc
adc
into
lods
or
aas
sub
jne
dec
jbe
into
aad
cwtl
ss
xor
mov
into
cmp
adc
clc
jnp
jbe
std
pusha
pop
and
jnp
hlt
insb
sub
fdiv
xor
jmp
cmpsb
and
fidivrs
fs
push
add
es
pop
push
and
add
insl
cs
jo
sti
and
in
arpl
push
repnz
lret
hlt
in
mov
flds
fiadds
test
sbb
mov
or
mov
movsl
jge
je
fs
pop
shll
xor
jbe
add
lret
int3
jecxz
sbb
aad
adc
cmp
lret
mov
lods
jg
mov
outsb
mov
insl
aad
loope
in
sahf
pushf
js
stos
clc
sub
ret
aad
std
in
mov
adc
adc
lahf
clc
pop
and
test
hlt
cmp
or
add
stos
xor
cwtl
cmp
sbb
add
jmp
adc
push
cmp
ss
mov
adc
cmp
or
pop
lods
movsb
mov
cmp
dec
lds
std
dec
sub
cmp
push
outsb
sahf
mov
fs
js
shr
inc
mov
stos
stc
movsb
stc
mov
out
mov
and
xchg
mov
or
pop
pop
fcmove
iret
cmpsb
fbstp
dec
insb
mov
mov
mov
cmp
jp
test
mov
popa
enter
test
sarl
xchg
lds
aas
sbb
dec
xorl
in
sbb
lock
inc
nop
inc
adc
mov
movsl
mov
jle
push
les
test
fsub
in
cmp
lahf
test
scas
sub
or
repz
clc
jp
inc
lods
int3
dec
mov
out
mov
hlt
lods
fists
stos
push
std
sbb
lea
bound
pop
inc
push
lahf
push
sahf
push
sbb
leave
mov
lahf
pop
dec
in
sbb
stc
repnz
inc
cli
mov
mov
enter
jle
sahf
inc
add
in
mov
sub
jo
ljmp
xchg
out
add
or
out
jg
in
es
sub
outsl
xchg
pusha
les
cmp
mov
es
imul
rorl
jmp
fmulp
xchg
test
sbb
jl
cvtpi2ps
daa
xor
or
push
cmp
pop
loope
testl
das
xchg
and
add
lods
lret
mov
int3
pop
cs
and
cmpl
xchg
pushf
sbb
fsubp
out
scas
xor
pop
ds
sbb
fs
xlat
jae
repnz
shlb
push
int
push
inc
and
ret
int3
daa
pop
pop
fdiv
repz
pop
xchg
push
ss
loop
inc
cmp
push
or
rep
test
or
add
inc
mov
es
mov
dec
shll
adc
pop
ss
cmp
add
popf
nop
cmp
xor
jbe
or
shrb
push
out
ficoms
push
xchg
jge
push
enter
daa
std
and
xor
sahf
xorb
daa
mov
cmp
test
lea
out
mov
dec
call
imul
lea
cmc
sarl
fadds
push
loope
xor
and
mov
mov
shl
pop
and
jmp
adc
fdiv
sbb
cld
mov
cmp
je
jp
or
loopne
lret
out
lahf
mov
dec
or
out
push
mov
add
mov
ja
mov
outsl
cltd
pop
icebp
push
jo
scas
xchg
mov
and
mov
arpl
sub
push
mov
jmp
cmpsb
hlt
pop
xchg
sub
int3
inc
or
inc
lea
dec
sub
outsb
sbb
and
sarl
fdivl
out
and
repz
mov
jb
imul
imul
in
scas
xor
and
jnp
cli
push
sub
push
mov
js
in
fs
nop
call
or
pop
stc
or
push
movsl
sbbl
sub
test
sbb
xlat
adc
mov
push
stos
je
aaa
push
mov
js
ficompl
sub
sub
test
ficompl
xor
outsl
jmp
inc
jno
jno
dec
add
je
in
bound
dec
push
mov
out
pop
sbb
repz
pop
push
push
mov
dec
scas
jmp
stc
sub
sbb
and
cmp
adc
sti
add
jne
cmp
mov
jg
pop
cltd
push
xchg
and
xchg
xlat
es
xchg
sbb
ret
sarb
dec
or
mov
and
or
or
stos
arpl
shlb
scas
mov
aad
pop
mov
enter
clc
sbb
mov
scas
xor
in
pop
jns
enter
mov
push
scas
std
adc
lds
js
rcrb
xor
out
cmp
push
stos
xor
inc
scas
sbb
xchg
add
stos
aaa
dec
adc
pop
mov
cs
ret
fistpll
test
dec
mov
movsl
ja
lods
xor
das
xor
mov
movl
stos
loop
mov
adc
cmpsb
fwait
xor
nop
inc
imul
add
pop
sub
shlb
lods
add
sub
scas
mov
sub
lcall
push
mov
out
jg
push
fs
pop
insb
rclb
jmp
cmp
xlat
jns
push
inc
xchg
and
aaa
int
movsl
adc
lds
sub
bound
or
lock
mov
dec
cmp
loop
xor
bound
or
add
out
adc
cmc
push
mov
xchg
insb
mov
in
test
jmp
pop
bound
fnstenv
std
push
sbb
and
lock
dec
add
loop
inc
jns
xchg
mov
sbb
xorb
jno
fmul
std
fwait
sub
fdivl
jp
das
lret
mov
inc
inc
jle
sbb
shll
bound
int3
or
into
repz
add
sub
out
loop
or
loopne
xor
add
xchg
fcoms
jecxz
scas
and
lods
mov
sub
or
mov
fimull
es
jne
inc
ds
movsl
mov
cltd
ja
adc
jp
mov
ds
add
mull
mov
add
cwtl
dec
sahf
aas
xor
stos
into
fmulp
jo
jge
mov
and
mov
pop
jmp
clc
cmpb
hlt
jno
sbb
iret
sbb
in
xchg
jecxz
dec
fdivs
or
pop
adc
and
shlb
add
leave
lcall
pop
inc
call
xor
sbb
and
dec
testb
mov
hlt
mov
xor
mov
pop
movsl
push
loopne
movsb
lahf
inc
mov
fcomps
jno
in
ffreep
aam
jle
jo
daa
mov
push
fisubs
sti
and
jae
add
imul
into
cmp
fildll
dec
xchg
bound
add
ror
mov
xchg
pop
mov
repnz
out
xor
mov
out
add
cltd
dec
in
cmp
in
push
dec
in
mov
mov
and
xlat
cwtl
and
push
xchg
out
and
ret
mov
mov
adcb
or
insb
and
jmp
jb
fsubrs
mov
push
pop
push
mov
or
les
add
or
test
adc
or
add
leave
into
push
push
cltd
sbb
addl
xchg
pusha
mov
mov
cmc
nop
lahf
scas
mov
pop
mov
fiadds
subb
inc
test
xchg
stc
imul
cmpsl
mov
cmp
mov
es
mov
push
fimuls
mov
stos
add
or
js
loop
enter
into
add
imul
adc
cmpsl
test
dec
pusha
outsl
frstor
add
sub
mov
jmp
int3
popf
pop
pop
sarl
mov
rcrb
into
ja
jbe
fidivs
in
orl
adc
adc
pop
cld
xchg
mov
mov
inc
lahf
and
loopne
mov
cld
rcl
out
js
out
sub
push
loopne
test
imul
test
jne
inc
mov
fsubrs
fidivrl
je
loop
mov
fisttpll
out
and
repnz
outsb
sbb
scas
int
es
or
push
test
movsl
cwtl
fimuls
xchg
adc
inc
cmpsl
stc
add
sub
or
pushf
add
lret
cmc
mov
mov
lea
inc
orb
mov
test
sub
cmc
fwait
scas
xchg
mov
xchg
js
ljmp
inc
adc
imul
daa
movsl
sub
pusha
rorl
setno
jae
enter
sub
adc
inc
push
addr16
push
cmp
sbb
fldenv
dec
push
inc
push
dec
adc
mov
push
jnp
sets
inc
andl
xchg
xchg
pop
mov
iret
test
lods
push
dec
and
jmp
hlt
dec
cltd
int3
adc
mov
sbb
cli
push
mov
sbb
fldenv
mov
negb
cmp
fistpl
aas
shlb
out
xchg
mov
ds
and
fwait
jbe
push
repz
xchg
mov
jae
inc
or
int3
adc
mov
adcl
add
outsb
mov
fcoms
and
cmp
xchg
sub
xchg
aas
rorb
and
and
cmpsb
sub
or
pusha
dec
sbb
nop
clc
sub
lcall
mov
sub
fisttpll
pop
fptan
jno
mov
or
xor
push
mov
cmp
lods
shlb
push
push
lret
movsl
dec
popa
sbb
in
inc
test
push
mov
ds
or
push
pop
or
into
pop
cmp
bsf
andb
xchg
cmp
pop
lock
daa
sub
add
insb
cmpsb
inc
movsl
sub
insb
inc
repz
adc
pop
push
inc
enter
out
sub
mov
jp
jae
bound
stc
aaa
cmp
push
xchg
jne
cmp
cwtl
stc
sub
push
mov
icebp
push
sarb
pop
dec
sbb
add
sbb
push
push
mov
fidivl
dec
and
cmp
adcb
fstpl
mov
icebp
cmp
sahf
jb
add
adc
fstps
cmpsl
xchg
in
mov
jg
xor
outsb
add
push
inc
inc
call
lock
pop
pop
jmp
ss
test
in
jns
out
mov
inc
mov
shl
xchg
int3
aad
jle
adc
add
jge
inc
aaa
loopne
mov
into
or
push
shl
repz
inc
mov
push
pop
push
out
popf
fisttps
sub
fnsave
out
pop
iret
test
lea
shl
sbb
jo
into
xchg
xor
or
xor
into
push
dec
xchg
xlat
fucom
movntq
out
outsb
sub
sbb
fidivs
js
xchg
xor
mov
jnp
enter
lcall
mov
xor
nop
xor
adc
mov
mov
mov
ds
pop
outsl
icebp
lret
pop
xor
xchg
test
mov
adc
push
inc
push
outsb
cmpsl
into
popl
mov
jecxz
sbb
aad
mov
ss
fadds
jno
into
scas
cli
cmpsb
jno
push
sub
into
outsb
bound
out
and
movsb
mov
lahf
jl
lahf
inc
and
dec
jo
lock
jns
or
and
or
pop
dec
cwtl
loopne
cltd
aam
std
dec
clc
and
enter
sbb
shll
in
mov
div
mov
dec
xchg
mov
pop
jno
repnz
jae
mov
sub
push
jp
push
shlb
aaa
pop
mov
int
xchg
cmp
enter
lahf
dec
rcll
fs
mov
add
dec
add
sbb
jo
pushf
pop
and
mov
outsb
fldt
test
mov
push
lods
mov
outsb
fcompl
adc
in
in
lock
xor
mov
int
cld
sbb
add
scas
jne
stos
data16
lret
xchg
scas
xchg
sahf
js
push
cmp
in
jno
repnz
fldenv
pop
xchg
cmp
test
push
pop
fwait
mov
mov
sar
jnp
scas
adc
inc
xor
in
fs
jns
rcll
insb
int
in
mov
mov
xor
sbb
mov
dec
dec
cmp
in
fdivrl
lret
push
cwtl
insb
mov
out
decb
in
je
fsubl
dec
xor
movsl
and
lock
pop
sbb
cld
ficompl
adc
dec
std
ret
test
std
repnz
inc
mov
xor
xchg
out
push
xor
sbb
push
roll
lret
rorb
ret
popf
lcall
xchg
stos
jnp
popa
jl
outsb
ss
int
or
cmp
sub
pusha
inc
cmp
cmpsb
xor
and
and
sbb
cltd
jmp
dec
out
movsl
dec
icebp
push
xchg
ja
ja
lret
pop
in
fbstp
add
test
in
shlb
inc
mov
test
pop
inc
sbb
mov
jno
rcrb
adc
rcrl
xor
xor
xchg
xchg
mov
fldln2
bound
scas
pop
pop
lds
mov
or
lock
divb
or
lcall
cwtl
push
push
scas
jne
mov
mov
aam
jg
out
xlat
add
jo
imul
jbe
enter
cmpl
mov
sub
jbe
imul
xchg
in
jmp
mov
das
pop
sti
xchg
scas
push
adc
sti
out
mov
mov
xchg
xor
push
cltd
mov
push
mov
sub
pop
shl
xor
inc
pop
mov
dec
add
adcb
or
pop
adc
ds
insl
xchg
pop
pop
outsl
mov
ret
jno
xor
push
jge
add
incl
cmc
lods
std
pop
push
jnp
leave
inc
in
push
mov
scas
xchg
lret
dec
xchg
mov
ja
cmp
les
cmpsl
lds
mov
sbb
sbb
ret
leave
in
lods
data16
stos
scas
outsl
hlt
push
stos
or
push
jl
repnz
xchg
mov
xchg
pushf
loop
xor
and
xor
adc
rorb
dec
push
sbb
mov
fistl
jg
mov
mov
aaa
test
int
cli
or
push
xor
bnd
int3
ret
test
call
test
ret
cmp
fcoml
lea
cltd
jecxz,pt
cmc
gs
mov
test
and
adc
xlat
ja
jle
inc
or
sti
cwtl
jmp
in
pop
push
fistpl
sbb
sub
lret
xorl
lret
push
or
cmpsl
add
inc
dec
mov
in
hlt
lret
cmpsl
test
sbb
jbe
sbb
xor
dec
jae
mov
dec
add
stc
xchg
jmp
adc
and
dec
int
xor
sbb
jp
xor
test
sub
in
dec
adc
jge
xchg
xor
push
into
lahf
mov
data16
inc
shlb
and
xchg
xchg
cmpsl
lea
add
je
lock
pushf
push
cmpsb
sbb
arpl
sub
out
insl
movsl
mov
xor
aas
shll
int
mov
out
ss
adc
gs
adc
jmp
fwait
outsb
sahf
and
mov
or
pop
daa
fdivrs
out
popa
dec
sti
mov
daa
rcl
je
mov
fdivr
xor
inc
mov
dec
jae
mov
mov
inc
cmpsb
js
xchg
inc
add
enter
dec
mov
aaa
icebp
add
testb
les
xchg
dec
or
mov
out
stos
aam
sahf
insl
jnp
std
or
subl
lea
mov
cmp
push
aam
movsb
rcrl
push
push
dec
iret
add
cli
lea
out
cmpsb
js
mov
inc
das
or
scas
int
shlb
push
push
cltd
and
call
ficompl
sbb
sub
inc
data16
xchg
std
ja,pn
sarb
fabs
or
cmp
push
dec
aam
cld
fcomps
addl
add
jae
jecxz
push
xchg
mov
push
and
cs
push
je
and
jb
es
mov
out
sub
sub
fistpl
dec
insb
rol
mov
mov
mov
rorb
jle,pt
xchg
and
insl
or
adc
mov
fimull
xchg
sbb
dec
xor
sub
repnz
insb
popa
imul
cmp
sub
fidivrl
ja
dec
pop
push
mov
xchg
aad
dec
popa
adc
imul
adc
and
gs
out
mov
in
fxch
pop
cmp
and
into
xor
das
sarl
pop
dec
addr16
pop
or
loopne
push
xorb
pop
adc
cmpsl
ret
jb
out
stos
loope
add
iret
cmp
fcompl
push
jnp
hlt
aad
pop
inc
movsl
ds
sbb
xor
lods
loopne
imul
in
js,pn
xor
je
adc
repz
adc
mov
push
adc
sar
mov
movsb
jge
dec
lods
mov
pop
leave
push
and
notb
and
sbb
cli
mov
mov
jecxz
outsb
loop
sti
sbb
mov
xchg
pop
ja
adc
imul
xor
in
les
add
inc
testl
sahf
fdivs
repz
sbb
sub
jecxz
dec
shl
or
pop
mov
jbe
aad
mov
insb
cmpsl
cmpl
lds
insl
incl
out
pop
push
inc
lea
sub
adc
pop
push
adc
adc
sub
jbe
hlt
cmp
xor
or
pop
ja
ret
ja
adc
test
test
xlat
pop
mov
pop
fstpt
cmp
jb
cmp
es
das
push
mov
cmpsl
shlb
iret
push
iret
stos
jb
ficoml
rcrl
jne
iret
leave
movsb
fists
and
flds
popf
dec
pusha
mov
aam
and
xchg
test
iret
rcrl
cmp
daa
dec
int3
test
mov
ds
mov
jecxz
jae
xchg
sub
jmp
fidivl
and
jl
out
mov
xchg
push
sbb
jne
dec
sub
mov
jmp
popa
sahf
fsubs
out
jbe
and
stc
sbb
insb
bound
push
pushf
aas
dec
xor
mov
stos
mov
repnz
mov
inc
and
jbe
or
jne
aam
mov
addr16
push
idivl
roll
push
repnz
pop
pop
imul
sub
fld
aaa
pusha
jge
je
sbb
jb
pop
push
ret
aas
jo
cmc
mov
cmpsl
in
lcall
xchg
dec
or
mov
das
outsl
cmp
cld
xchg
add
mov
cwtl
dec
subb
lods
inc
mov
test
adc
hlt
xchg
inc
mov
jge
inc
dec
inc
pop
jmp
inc
out
sub
mov
enter
repnz
cmp
scas
pop
stos
cwtl
cwtl
call
loope
fidivrs
es
lods
cmp
out
outsl
sub
and
add
inc
pop
mov
outsl
ret
sub
cmpb
mov
popf
jno
add
push
pop
xor
repnz
into
pop
mov
xchg
lods
sbbb
push
das
xchg
insb
push
fmull
sbb
add
aad
add
mov
aas
xor
jae
sub
add
xchg
std
dec
pop
and
xor
add
repnz
mov
daa
call
js
push
in
in
imul
out
arpl
test
lods
shrb
pusha
cmp
push
clc
pop
mov
or
push
std
das
loope
out
rcll
push
pushl
mov
imul
sub
in
inc
iret
pop
xchg
mov
cmc
cmp
sbb
rorb
fcomps
es
pop
pop
xlat
xor
jne
mov
pop
in
lock
fmulp
nop
imul
aaa
inc
jecxz
neg
adc
ret
jb
pop
leave
lret
push
int3
js
les
push
mov
lea
aam
jno
jbe
std
push
mov
sub
adc
mov
sub
pop
mov
movsl
lods
push
enter
xchg
gs
push
call
xchg
cli
jecxz
mov
and
mov
sub
lds
add
sub
mov
inc
inc
push
mov
inc
lahf
jbe
pop
gs
xorl
repnz
dec
jl
adc
adc
movsb
notl
outsb
pop
lea
jmp
push
cli
clc
add
lahf
ja
ficoms
jnp
xor
out
xor
mov
inc
mov
sub
mov
leave
pop
lods
repnz
stos
push
seta
or
fbld
inc
adc
or
repz
out
test
add
add
mov
imul
adc
out
shr
sbb
inc
ret
es
mov
movsb
negl
sti
lea
sub
and
sub
into
mulb
stos
int3
cmp
repz
ds
arpl
pop
push
adc
mov
mov
es
mov
sbb
pop
xorb
imul
pop
push
cmp
mov
popa
mov
cs
cli
test
pop
push
ss
hlt
es
xchg
cmp
fbld
dec
or
aad
sub
xchg
inc
pop
test
xchg
add
shl
jbe
jb
enter
sub
sbb
push
dec
in
push
je
sbb
call
lret
lds
sub
orl
cmpl
adc
cli
sbb
xchg
push
test
xchg
test
cmp
xor
in
orl
xchg
test
inc
push
sbb
out
rcrb
dec
std
call
gs
test
sub
adc
popa
movb
mov
jecxz
mov
pop
inc
mov
lahf
lods
mov
pop
int3
shrl
pop
or
sahf
jge
scas
int3
dec
pop
call
mov
jae
jno
inc
mov
clc
fistps
outsb
popf
iret
push
out
jno
mov
and
test
fistpll
sub
sub
xor
data16
push
mov
data16
mov
inc
lds
push
cli
xor
scas
das
and
imul
push
mov
movsb
push
inc
sub
xchg
imul
cmp
ss
aad
jno
leave
int3
add
pop
cltd
jae
mov
dec
in
out
scas
fabs
out
jbe
or
jle
lcall
test
test
mov
jb
sbb
cli
jnp
or
pop
mov
testb
lock
cmc
jmp
out
fs
xor
push
pop
fcmovb
icebp
or
dec
out
mov
lahf
stc
dec
mov
mov
lcall
insl
call
scas
dec
std
in
les
and
push
add
push
mov
lods
fbstp
stc
pop
pushl
mov
std
aas
push
orps
inc
jns
pop
mul
int3
pushw
jne
inc
jne
dec
mov
mov
xor
imul
mull
sarl
je
dec
aad
lahf
in
aas
mov
repz
sbb
addr16
sbb
xor
fdivs
inc
jbe
outsb
dec
shl
sbb
push
bound
push
orb
pop
shrl
xchg
sti
aad
out
jmp
and
sbb
jl
clc
xor
mov
rorb
pushf
push
ja
repnz
push
pop
xchg
stos
xor
add
iret
xchg
leave
jecxz
dec
stc
out
pop
lahf
lcall
imul
les
sub
scas
lods
lret
sub
clc
out
in
jp
xchg
mov
mov
xchg
sub
adc
mov
mov
and
sbb
mov
test
jge
push
pop
sbb
push
xchg
xor
mov
cmp
push
stos
loop
xchg
jl
xchg
dec
push
pop
jns
test
arpl
mov
shl
sbb
jmp
in
jbe
cmp
mov
push
mov
lds
ds
ss
adc
cmc
sub
jg
inc
mov
xchg
or
jle
push
jle
cmp
dec
mov
inc
or
xchg
pop
sbb
test
pop
in
push
popl
pusha
shll
sub
sub
rorb
cmp
testl
sub
fincstp
inc
mov
xchg
add
stc
add
das
inc
sub
mov
inc
push
es
cs
cmp
pop
bound
cli
stos
pop
cmp
icebp
mov
lahf
inc
incb
lret
mov
outsl
ljmp
movsb
or
idivl
int
xorl
adcl
pop
js
imul
pop
cmp
fmuls
daa
faddl
or
xchg
sahf
mov
imul
mov
cmp
dec
bound
icebp
test
inc
loope
cli
js
push
mov
jge
xlat
ja
jecxz
popf
cmp
dec
loop
inc
mov
arpl
cwtl
int3
pop
or
xor
sbb
out
adc
lahf
push
mov
into
sbb
inc
mov
lock
add
popf
cwtl
sahf
stc
dec
and
push
cmp
subl
addr16
xlat
cmpsb
movsl
and
in
lods
mov
mov
cli
sub
sub
jg
test
test
nop
push
mov
mov
rorb
mov
ljmp
adc
int3
aam
mov
repnz
out
inc
aam
ret
aaa
and
stos
iret
dec
add
adc
dec
add
lock
pop
sub
dec
and
les
loope
lret
pop
cmp
mov
inc
pusha
sbb
pop
mov
jmp
imul
pop
sti
lds
ljmp
in
test
cli
fdivs
roll
lret
xchg
cmpsb
paddsw
nop
sbb
dec
outsl
ja
cmp
dec
popa
push
std
lods
jle
push
xor
jne
push
in
test
nop
das
and
cwtl
push
stos
pop
scas
and
or
faddp
je
fnsave
fsubp
ret
mov
xchg
ja
pop
sub
xchg
popf
inc
dec
fistpll
fdivs
scas
adc
popa
out
out
sbb
mov
clc
test
insb
inc
jno
pop
inc
imul
je
pop
pop
daa
popa
and
outsl
fcompl
pop
aam
mov
jl
push
push
enter
cltd
mov
mov
mov
push
mov
inc
outsb
xchg
dec
xchg
dec
out
cmc
xchg
jge
pop
jbe
je
adc
shlb
inc
flds
pop
lds
sarl
push
subb
sbb
shl
ljmp
jne
push
imul
fbld
ss
shl
adc
mov
pop
xchg
jnp
clc
insl
xchg
jecxz
jno
enter
ljmp
fimuls
test
popa
out
and
cs
add
jmp
in
inc
cs
fisttps
cwtl
insl
sarl
das
pop
mov
pop
jns
adc
rcrl
fwait
cwtl
jo
sahf
mov
sub
xchg
repnz
pop
mov
or
mov
adc
das
xchg
sub
sarb
scas
sub
dec
push
jae
setb
lret
mov
in
or
scas
push
lods
stc
ds
sub
dec
sbb
out
stos
fwait
jo
sub
adc
andl
xorb
sub
pop
mov
lds
lret
idivl
adc
inc
inc
or
sbb
dec
cmpsb
cld
enter
push
mov
icebp
sub
mov
push
push
push
xchg
loopne
add
testl
scas
adc
adc
xorb
leave
push
mov
cmp
or
mov
out
jbe
shl
nop
cli
xor
lret
shrl
sub
rolb
xor
bound
xor
cmp
dec
cmp
jge
add
mov
xchg
or
sub
imul
pop
andb
mov
push
jmp
add
pop
adc
repz
scas
adc
scas
and
sub
cli
scas
daa
pop
and
dec
incl
mov
lods
loop
dec
push
movsb
jne
mov
push
dec
inc
je
push
les
into
es
mov
xlat
mov
addr16
cmpsb
xchg
add
lahf
dec
push
es
shrb
mov
push
xor
scas
lret
in
or
or
push
shrb
mov
or
pop
fildll
adc
imul
push
jne
or
mov
pop
out
sub
or
add
int3
pop
sub
incl
icebp
xchg
andl
iret
icebp
std
sub
jecxz
jg
or
dec
adc
in
sub
aas
sbb
mov
pop
or
xchg
or
xchg
daa
popf
ds
or
divl
jns
dec
mov
pushf
das
shr
inc
ljmp
scas
xchg
pop
push
lds
mov
bound
jns
mov
xchg
insl
xor
jb
xor
inc
out
sbb
push
sub
push
pop
int
add
dec
mov
ret
jnp
inc
cltd
inc
out
scas
mov
fmuls
xchg
pop
ret
pusha
out
xor
loop
xchg
mov
sub
clc
jp
mov
ffree
rolb
imul
or
dec
rcrb
ljmp
mov
lods
cli
iret
jns
and
push
xchg
call
aaa
lret
leave
push
jmp
imulb
imul
paddusw
repnz
addb
push
in
test
xor
pop
icebp
ss
mov
pop
or
cli
std
lods
mov
fwait
inc
hlt
adc
sti
mov
adc
ljmp
jg
push
adc
dec
push
ljmp
jmp
ret
cmc
dec
lret
mov
fidivrl
fiadds
lret
or
outsb
les
sub
pop
pop
test
cmp
and
or
fimuls
fistpll
mov
mov
repz
push
adc
jg
es
sbb
icebp
sbb
jnp
js
rcl
fwait
xchg
inc
inc
inc
ret
push
adc
ret
dec
cmp
adc
dec
imull
imul
mov
cmpsl
push
popf
xchg
xchg
adc
and
or
xor
std
jp
adc
mov
das
or
pop
xchg
or
inc
jge
lret
test
mov
push
mov
cmp
jle
add
and
and
mov
sub
test
pop
adc
cmp
sbb
jp
jb
mov
ja
mov
ret
test
xor
leave
fwait
add
mov
imul
ficoms
mov
aas
dec
mov
loop
das
sub
add
pop
sbb
mov
pushf
leave
xchg
jge
aas
jbe
jl
cmp
push
sbbl
xchg
shll
push
jp
inc
mov
lret
mov
orl
xchg
sub
iret
repnz
ds
and
push
test
mov
addr16
mov
cld
jns
pusha
ljmp
iret
push
or
ljmp
xor
dec
mov
inc
pusha
lret
adc
jg
setl
clc
enter
pop
dec
outsl
jl
push
shrl
lods
jns
cmp
mov
inc
outsl
enter
sbb
fstl
dec
stos
xchg
add
clc
int3
int
mov
ljmp
push
inc
pushw
stc
in
and
xlat
add
inc
jmp
pop
or
or
lock
inc
fsubrs
mov
clc
push
mov
inc
jns
bnd
xchg
xchg
bound
mov
mov
xchg
push
arpl
pop
xchg
pop
and
xor
mov
loope
cmp
and
icebp
out
and
pop
imul
xor
in
mov
shlb
call
call
xor
out
mov
pop
sub
scas
push
cmpsl
cmpsl
mov
adc
push
dec
invd
ja
popf
in
xchg
inc
mov
dec
add
imul
xchg
addb
ret
sbb
mov
movb
or
or
xor
arpl
push
sub
or
and
adc
cmc
sbb
jp
xchg
sarl
sbb
in
cmc
jb
lahf
jnp
xor
jnp
mull
addr16
jmp
inc
inc
stos
xor
out
std
aas
push
outsl
lahf
jae
nop
mov
cmp
dec
roll
in
xor
pop
imul
xorb
mov
mov
popf
cmpsl
mov
push
fs
out
fcomps
xchg
xchg
sub
xor
pop
daa
loopne
clc
mov
mov
sbb
ret
in
insl
fs
mov
dec
dec
test
pushf
shll
ret
out
or
in
aad
push
fidivrs
enter
fsubs
xchg
pushw
in
adc
aaa
pop
mov
push
jmp
mov
fnstsw
cmp
jecxz
adc
stc
jp
cmpsb
enter
sub
inc
sahf
cmp
xchg
push
push
mov
stos
inc
push
dec
ljmp
add
xorl
xor
mov
mov
add
test
mov
pop
jb
pop
repnz
je
xor
sti
hlt
jg
js
dec
sub
loop
iret
pop
clc
and
sbb
add
push
or
das
add
xlat
jnp
in
add
icebp
aam
sub
mov
cmp
mov
inc
xor
mov
mov
mov
mov
and
movl
out
es
sbb
jp
or
pushf
mov
push
stc
pop
dec
pop
lock
jnp
sub
adc
daa
dec
push
dec
lock
add
or
inc
sub
mov
pop
ds
xor
sub
pop
shll
mov
push
sahf
pushf
pop
jp
cmp
stc
dec
add
xchg
aam
xchg
int3
ret
mov
int3
lret
fnstcw
jbe
lret
mov
add
enter
jno
mov
shl
jg
clc
cmp
adc
testl
sub
mov
rclb
test
xchg
fsubs
roll
xchg
enter
out
mov
in
xchg
fstpl
dec
in
dec
push
into
pop
or
cs
mov
nop
roll
xor
test
loopne
frstor
lods
loope
xor
mov
jl
dec
jne
mov
sub
fisubl
stos
dec
xor
cmpsb
int3
fiadds
pop
push
mov
sub
clc
sarl
jmp
cmp
lret
gs
in
or
inc
cli
cltd
daa
or
lea
or
gs
cmpsb
jmp
or
mov
sub
pop
scas
push
loopne
test
mov
data16
loopne
cmpb
push
aam
jb
pop
lds
jo
test
or
mov
jmp
jl
add
cs
fistps
sarb
cmc
je
rcrb
ljmp
cmpsl
pop
mov
loope
dec
rcll
xchg
or
sahf
xchg
mov
pop
lods
adc
or
cs
sti
xchg
adc
repnz
push
inc
fisubrl
or
push
sahf
in
test
mov
lret
xchg
push
xor
push
lea
xorl
in
ds
xchg
mov
sti
jnp
in
mov
sbb
enter
aaa
or
jg
mov
fucompp
and
sub
or
sbb
fdivr
adc
push
lret
imul
jecxz
bound
adc
mov
mov
popf
xor
xchg
fldcw
jmp
or
repnz
push
pop
or
dec
hlt
jmp
je
int
mov
ret
incb
cwtl
mov
jl
sahf
out
enter
jmp
test
cwtl
lock
sbb
iret
sbb
add
fiadds
pop
lahf
fdivrl
outsb
xorl
lahf
and
fcmovnu
adc
callw
push
jbe
jecxz
sbb
notl
jo
push
and
ds
jle
lock
popa
aam
add
add
scas
es
mov
cmp
bound
jecxz
and
jecxz
sbb
sti
daa
pop
xchg
imul
and
iret
sbb
push
xchg
xor
push
sbb
ss
dec
clc
or
xchg
cltd
pop
insb
cmpsl
insl
lcall
mov
testl
jb
jge
push
jno
cmp
repnz
mov
out
sti
jo
das
jnp
add
cli
jmp
sbb
int3
imul
adc
out
inc
dec
sbb
lea
sub
mov
imul
ljmp
push
repnz
sarb
std
mov
jno
jecxz
aad
and
push
xor
fsts
dec
fdivs
pop
icebp
out
sbb
add
adc
in
scas
push
cltd
dec
lret
jg
imul
mov
int
outsb
ret
xchg
or
xchg
sbb
lods
mov
adc
rcll
cmpsb
repnz
sbb
mov
addr16
lock
xchg
push
inc
cmp
add
out
dec
xor
rolb
gs
outsb
cmpb
push
inc
out
insl
push
shrl
int3
mov
mov
jno
sbb
fisubs
sbbb
and
dec
popaw
gs
add
roll
ljmp
clc
mov
jl
mov
enter
push
cmp
adc
jb
shrl
es
enter
xchg
jl
push
add
cmpsb
pop
dec
das
and
loop
cmpsl
subl
inc
pusha
pop
adc
push
test
leave
loop
xlat
daa
loopne
or
and
mov
fbld
xorl
outsl
cmp
rcrl
dec
push
push
dec
cmpl
outsb
sub
sub
mov
lret
ret
mov
mov
push
scas
lret
xchg
insl
and
shll
ja
xchg
bound
neg
or
lods
sbbb
adc
fistpll
stc
xor
call
fsubrl
leave
lret
sahf
and
inc
pop
lea
ret
xchg
cs
cmpsb
pop
jb
mov
xor
jb
xchg
jbe
in
sub
push
xchg
fsubs
xor
and
push
lods
imul
xchg
std
dec
inc
test
push
scas
inc
sub
es
in
clc
xchg
pop
je
sub
das
sub
jecxz
inc
enter
lods
sub
dec
dec
jae
movsl
jae
inc
mov
test
push
sbb
divb
stc
mov
pop
xlat
lret
cmp
cmp
fwait
ret
and
dec
les
push
orb
mov
mov
les
inc
add
fisubs
and
add
mov
mov
test
mov
adcb
scas
adc
or
jne
xor
jg
clc
sahf
ja
iret
mov
shll
xor
cmpsl
lahf
xchg
mov
lock
test
xchg
jp
or
aam
sbb
dec
ret
int3
movsb
xchg
xchg
cmpsl
cltd
fsubl
stc
mov
ret
mov
pop
cmp
fwait
xchg
or
loope
imul
pop
push
rcrb
mov
sarb
ds
add
enter
cmc
jo
stos
fisttpl
orl
mov
and
jo
adc
call
lcall
or
mov
lret
dec
cs
xor
mov
shl
ja
ja
test
or
and
push
bound
mov
rcrb
mov
jo
imul
fs
cmp
dec
jo
je
jb
cmp
adc
pop
scas
jae
or
mov
stos
ja
imul
sub
dec
push
mov
lods
mov
push
or
xchg
mov
jle
mov
jl
mov
flds
sub
cmc
push
aam
shrl
push
mov
int3
and
dec
pop
mov
and
xchg
adc
cli
sbb
sub
fscale
mov
sbb
cmp
scas
popf
inc
outsl
js
roll
inc
rol
pop
pop
pop
out
xchg
outsl
jecxz
mov
pop
ja
data16
xchg
cmp
inc
inc
fsub
loope
pop
mov
outsl
idivb
addr16
mov
mov
ror
mov
sbb
movsl
rcl
rclb
movsb
jp
fisubrl
addb
cmp
xlat
add
in
jnp
mov
aas
push
mov
push
pop
sbb
dec
sub
mov
xlat
test
popf
pop
insl
add
push
cmp
popa
jbe
jb
add
fisubs
pop
cs
pop
mov
dec
or
insl
cmp
jb
mov
mov
mov
enter
fs
add
shlb
mov
aaa
movsb
in
cwtl
addr16
rorb
and
cmpsl
insb
push
xchg
push
sub
jge
add
cmp
or
and
pop
xchg
frstor
cmpxchg
test
movsb
jg
adc
inc
cmp
and
dec
sti
js
push
scas
mov
jns
stos
daa
jl
in
inc
mov
hlt
cs
pop
test
xchg
cmp
add
lea
push
fs
mov
test
mov
repnz
mov
push
push
andb
add
insb
or
ja
repz
or
movsb
js
ret
mov
inc
jo
push
sbb
dec
rep
dec
aaa
rolb
aam
rorb
popf
push
push
fwait
dec
dec
mov
push
pop
cwtl
dec
outsb
stc
imul
out
fisubl
mov
loope
dec
frstor
imulb
scas
es
ljmp
jnp
xchg
add
jecxz
in
into
in
sub
xor
fsts
pop
je
lahf
mov
cltd
push
les
aaa
mov
aam
pop
jmp
jge
in
js
stc
test
and
jo
das
inc
cmp
xchg
aaa
outsl
lea
push
je
mov
dec
das
ret
mov
subl
ljmp
scas
dec
pop
inc
mov
inc
xchg
rorl
sbb
ds
push
mov
jb
push
jle
insb
lcall
jecxz
mov
fimuls
fs
icebp
and
dec
enter
push
fucomip
push
jae
pop
jle
xlat
scas
push
push
loopne
mov
fsub
add
aam
mov
pop
ja
outsb
cwtl
xor
push
clc
into
xchg
sahf
aaa
shll
fimuls
stc
push
in
jp
fistpll
inc
lcall
mov
pop
xchg
and
pop
fisubrl
dec
out
bound
pop
call
cmc
and
fcoms
cmp
cmp
pop
xchg
inc
out
jbe
and
aaa
in
pop
mov
xchg
jmp
fnstsw
movsl
lcall
adc
push
lods
cld
stos
inc
out
out
fistpl
cmpl
pop
and
jmp
sub
ret
or
gs
hlt
shlb
lock
out
dec
js
out
punpckhwd
inc
mov
aaa
mov
lods
push
push
sub
mov
adc
or
neg
in
jmp
test
mov
push
popf
xchg
lret
jg
movsl
add
ja
ds
cmp
mov
mov
or
out
dec
fwait
mov
inc
pushf
mov
push
das
sub
or
addr16
jns
add
fucom
movsb
sub
enter
addr16
outsl
dec
add
fstl
filds
and
into
pop
inc
cmpb
or
dec
adc
adc
and
xchg
push
fimuls
aaa
inc
ljmp
jnp
fisubl
subps
scas
push
mov
arpl
loopne
mov
sar
sbb
mov
idivl
ljmp
outsl
leave
into
mov
lcall
fidivrl
cmp
lea
dec
mov
sub
pop
adc
subb
loopne
test
mov
imul
dec
dec
pop
sub
cmpsb
in
adc
cmc
hlt
lea
xlat
xor
or
icebp
inc
lahf
outsb
and
jns
xchg
fxch
and
aaa
lret
xor
cmp
xor
xor
cld
sub
fimuls
test
jmp
js
je
sbb
in
pop
adc
fists
cld
push
xor
scas
testb
sbb
loope
and
inc
add
mov
test
jecxz
sbbl
mov
lea
and
push
sub
and
loopne
fs
jl
mov
imul
push
push
sbb
leave
mov
pop
adc
mov
mov
mov
add
add
dec
push
lret
mov
loopne
lds
shlb
insl
bound
insl
pop
test
in
rcrl
movb
jno
xor
cmp
push
stc
adc
push
fiaddl
jg
in
xchg
aaa
xor
inc
or
std
or
add
push
lea
aam
scas
dec
hlt
sahf
fcoms
mov
orb
test
and
outsl
dec
sti
xchg
and
and
xor
int3
out
mov
fisubrl
in
ja
sub
push
icebp
call
bound
cltd
out
lods
sbb
or
arpl
mov
xor
sbb
and
sti
push
and
inc
or
jmp
xor
or
mov
jno
xchg
push
add
push
push
xor
mov
imul
inc
mov
or
lock
cmp
int
mov
lds
xor
mov
cmp
inc
popf
out
add
and
push
pop
or
cltd
inc
fidivrs
mov
cli
cmp
xchg
lcall
push
aad
pop
pop
cli
push
add
loopne
and
daa
hlt
rorb
cmp
mov
sbb
sub
out
inc
outsl
pop
test
stos
fldl
and
sub
icebp
inc
add
inc
push
and
movsb
test
inc
mov
ret
mov
gs
mov
imul
xor
pop
into
adc
lret
je,pn
dec
sbb
jbe
js
and
leave
loope
mov
inc
pop
jns
movsl
add
fnstcw
cltd
aam
jb
cmpb
inc
cmc
mov
cmpsb
imul
cs
xor
cli
jns
stos
clc
pop
adc
lcall
iret
and
pop
decb
popa
loop
xchg
fwait
pop
jno
outsb
sbb
sub
cli
and
out
lock
popa
jno
mov
pop
popa
in
stos
in
jl
outsb
dec
xor
adc
push
mov
lods
mov
or
mov
xchg
or
push
aas
imul
stc
inc
xchg
adc
mov
mov
fsubrl
and
stos
mov
fbstp
xchg
sbb
xchg
ja
lret
out
push
dec
mov
repz
orb
mov
lods
xchg
fstpl
or
stos
rol
xlat
lock
sbb
add
ljmp
lahf
lret
out
mov
push
mov
lea
test
orb
ss
or
outsb
push
inc
jge
inc
jae
les
lahf
loop
gs
into
xchg
fs
sbb
out
dec
std
cmp
loop
jns
movsb
mov
push
inc
sbb
stc
shlb
mov
insb
cli
mov
testb
movsb
cmp
push
mov
and
stos
jne
aad
inc
xor
mov
out
bound
mov
xchg
jbe
add
dec
bound
aam
addr16
pop
mov
in
adc
ljmp
je
mov
fildll
pop
inc
and
push
dec
adc
xchg
or
xor
inc
je
inc
out
push
and
or
imul
cmpb
add
into
add
jle
xchg
repnz
sbb
and
pop
mov
aas
in
mov
pop
xor
and
shlb
dec
jp
dec
push
cld
ret
pop
sbb
xchg
inc
mov
xchg
mov
test
inc
test
push
sbb
push
or
pushf
sbb
rorb
add
mov
jo
xchg
scas
fisubs
repnz
insb
insl
sbb
push
enter
daa
or
cmp
popf
pusha
ljmp
arpl
jle
pop
push
add
jne
sahf
aad
adc
stos
scas
xor
imul
xlat
xchg
pop
xchg
cmp
or
xchg
lahf
sbb
jae
and
dec
loopne
cmpsl
and
jle
push
mov
test
pop
push
ret
mov
mov
cmp
mov
out
idivl
jle,pn
sbb
pop
mov
mov
inc
jb
sub
sti
out
mov
inc
pop
jg
xchg
pop
ror
push
mov
out
shrb
subl
ljmp
add
rclb
inc
inc
es
mov
jns
outsl
aas
pop
add
jb
shlb
lds
out
inc
xchg
lcall
rol
mov
lret
dec
test
ret
inc
mov
lods
cmpsb
lahf
mov
pop
loope
mov
dec
sbb
dec
subb
in
sbb
pop
test
cmp
and
push
or
jb
xor
fsubs
in
inc
out
scas
xor
jns
ds
popa
mov
call
cmp
xchg
xchg
les
mov
sti
into
jno
push
into
push
clc
and
leave
je
cs
inc
fcmovu
loope
sub
mov
lret
test
aaa
push
dec
leave
and
fmulp
mov
push
fcomps
sbb
jno
and
cmp
imull
jmp
mov
popa
mov
or
fdivp
mov
ljmp
loope
js
sti
gs
pushf
cmp
add
repz
imul
jb
push
inc
repnz
jne
fwait
lahf
sbb
add
push
lea
js
mov
sbbl
imul
sbb
jo
rol
scas
cmpsb
fidivs
leave
arpl
push
push
jne
mov
fimuls
pushf
out
jmp
fbstp
mov
mov
sarl
jmp
in
xor
pop
pusha
add
and
mov
cli
std
lret
xor
iret
int3
ret
cld
pop
dec
inc
in
mov
stc
dec
decl
cmp
inc
rclb
mov
xchg
fldcw
daa
cmp
pop
xchg
inc
cltd
fs
xchg
xor
pop
or
jmp
mov
jns
and
fs
test
mov
aam
in
jnp
and
dec
pop
sbb
add
lods
outsl
mov
das
jecxz
filds
faddl
inc
rclb
sti
push
lret
jl
test
and
pop
push
mov
ret
cld
pop
jb
push
inc
sbb
shll
mov
xchg
pusha
sub
sbb
cmpsl
inc
mov
jns
cmp
nop
dec
inc
push
shll
repnz
or
lahf
jp
scas
mov
push
outsb
daa
ret
test
xor
out
jb
sub
dec
icebp
add
adc
ja
and
cs
jnp
in
mov
es
fimull
fstl
movsl
and
test
inc
dec
stos
cmp
xchg
or
dec
stos
inc
lcall
ljmp
push
out
rclb
movsb
sbb
push
mov
ret
jg
dec
xlat
test
cmpsb
xor
add
in
mov
cmp
lret
test
jbe
hlt
mov
int
fistl
lret
add
add
jno
jnp
dec
sub
mov
mov
cld
ss
dec
int3
mov
bound
fildl
jg
pushl
jmp
push
loope
int
dec
xor
mov
lret
lds
and
adc
or
push
xchg
arpl
pop
mov
sti
cmp
pop
push
sbb
mov
pop
insb
bound
mov
fucom
in
mov
out
cmp
roll
dec
mov
aaa
sub
or
loop
mov
or
inc
out
sbb
shrb
xchg
xor
adc
mov
andb
rolb
push
dec
nop
js
loope
hlt
movsb
in
mov
es
jmp
aaa
movsl
sub
push
mov
and
sbb
idivb
in
imul
sub
or
imul
jg
lods
or
lret
in
aad
push
cli
push
mov
fdivrs
sbb
movsbl
loope
insb
ret
arpl
mov
xor
sbb
std
push
test
std
xchg
jnp
inc
and
mov
and
scas
jne
stos
push
jb
push
gs
mov
mov
or
imul
into
lods
cltd
inc
out
xor
sar
dec
add
int
fwait
mov
mov
addr16
xchg
xchg
into
outsb
jecxz
dec
sub
je
jge
or
stc
lcall
mov
aaa
sahf
nop
daa
andb
orb
cs
mov
ja
pop
push
into
imul
push
pop
das
mov
inc
cmc
lock
jge
pop
insl
test
ret
cmp
mov
xor
shll
movsl
addr16
mov
stos
xor
mov
sub
insb
xor
mov
pop
out
cmpsb
push
outsb
xchg
xor
mov
add
jmp
jg
fdivl
xchg
es
adc
std
nop
decb
cmpsb
mov
push
dec
mov
mov
out
lcall
xlat
mov
add
pop
push
push
je
mov
cltd
cs
in
add
add
jp
fisubrs
in
adc
xchg
jge
push
pop
ljmp
cli
mov
adc
and
cmp
or
cwtl
lret
cwtl
add
adcl
pop
arpl
jmp
mov
xchg
jb
arpl
adc
and
call
sbb
xchg
popf
mov
dec
push
mov
out
xchg
or
shlb
test
cwtl
repz
mov
repnz
lret
push
jne
lret
in
inc
mov
pop
xchg
je
xchg
mov
sub
ss
int3
clc
je
xchg
imul
jp
xor
lret
sarl
aas
mov
jp
fprem1
into
dec
repz
sbb
cltd
dec
jns
test
pop
rcrl
psubw
sbb
outsl
nop
repnz
xchg
xchg
fisubrs
or
fldl
mov
movsb
gs
add
cmc
repz
or
hlt
mov
jae
push
fists
shr
xor
dec
jle
clc
call
sub
mov
add
adc
fsubl
lcall
push
repnz
inc
xlat
push
fwait
mov
insl
testb
inc
adc
negl
imul
stos
ss
into
mov
popa
sub
xchg
mov
and
cmp
adc
mov
aad
xor
les
pusha
inc
pop
sub
mov
and
mov
cwtl
ret
jecxz
push
ficoms
test
movsl
adc
push
dec
add
mov
mov
mov
mov
dec
ret
push
ror
insl
mov
repnz
mov
into
xlat
or
rclb
push
push
aam
push
inc
and
push
in
add
repz
mov
push
dec
xor
add
pusha
subb
mov
arpl
sbb
popa
dec
push
fcmovne
sbb
ljmp
out
mov
dec
adc
xchg
pop
insl
jno
cli
sbb
jbe
mov
sub
and
faddp
mov
add
lock
pop
pop
js
mov
test
jo
push
pop
pop
insl
xchg
jo
lret
enter
mov
icebp
and
outsl
aad
and
loope
add
sti
sub
mov
xchg
mov
lahf
pop
lods
cmp
lods
mov
xor
stos
iret
lock
push
adc
rorl
mov
cmp
in
je
fimull
shrb
jns
adc
inc
pusha
pop
sbb
adc
out
cmc
jg
inc
mov
inc
inc
add
lods
rorb
fcmovnu
nop
xchg
adcb
inc
sahf
dec
add
int
mov
stos
xor
shr
jl
jecxz
add
dec
jbe
imul
pop
gs
std
loopne
imul
sbb
pop
jl
sbb
aas
js
test
jno
jg
ds
scas
sbb
or
jg
or
unpcklps
test
or
sub
pushf
mov
ljmp
std
pop
adcb
add
imul
or
adc
or
add
and
sbb
mov
or
or
and
sub
add
test
jg
and
inc
cmp
push
mov
and
or
nop
lods
movsb
insl
cmp
cmp
imul
sbb
jo
or
out
ds
fcompl
jbe
or
shl
fisttps
scas
mov
sbb
fmuls
lods
mov
fmul
mov
jmp
js
aam
pop
inc
fidivrl
fdiv
sti
mov
push
lcall
jecxz
mov
push
out
scas
adc
dec
xchg
sarb
dec
sbb
enter
out
jl
mov
nop
push
pmaxub
inc
xorl
jnp
inc
push
cmp
cltd
scas
cmpsb
mov
pop
or
ljmp
ds
fsub
out
dec
push
enter
rcll
clc
js
icebp
xor
jno
sub
xchg
cmpsl
repz
movb
jne
test
sub
je
fists
sbb
out
jb
shl
or
jge
repz
lea
imul
jp
push
sub
popf
dec
outsl
xchg
cmp
mov
push
add
fdivs
push
xchg
inc
mov
in
inc
inc
pop
mov
iret
fistpl
int
rcr
notb
inc
cmc
mov
xor
sahf
dec
xchg
mov
push
adc
adc
mov
mov
dec
popa
leave
imul
dec
jno
shlb
daa
out
popf
mov
das
enter
subl
mov
dec
inc
aad
cld
lods
lcall
mov
pop
aaa
and
ret
roll
stos
inc
stos
aad
dec
xchg
js
jb
mov
mov
jo
mov
je
pushf
inc
js
sub
les
pop
pop
aas
pop
lods
stos
mov
in
push
sahf
mov
adc
fisttps
dec
pushf
cmp
dec
imulb
or
xchg
gs
testb
jb
push
mov
jno
test
pop
jg
rcrb
and
add
aas
and
adc
xor
sbb
mov
mov
sbb
dec
cwtl
shll
jmp
mov
push
jge
jno
push
xchg
mov
call
cmpsl
fildl
pop
sahf
inc
mov
inc
push
test
stos
cmp
out
pop
pop
xor
inc
push
pusha
or
xor
jns
inc
mov
xchg
push
mov
in
sub
scas
sti
cmp
dec
scas
rclb
adc
cwtl
and
mov
loopne
scas
push
mov
or
sub
pop
test
mov
aas
ret
outsb
es
cmp
sarb
jo
das
sub
mov
sub
in
mov
add
xchg
jno
add
and
les
mov
jne
inc
bnd
clc
pop
imul
xor
dec
divl
sbb
dec
adc
aas
iret
jp
call
lret
mov
icebp
xchg
or
push
ret
push
out
fwait
xor
jns
cmp
and
insl
lret
inc
xor
movsl
fwait
mov
push
dec
aad
stc
mov
mov
dec
mov
pusha
std
push
xor
ljmp
xor
jne
xchg
xchg
in
inc
sbb
pop
pop
sbb
jb
sti
test
mov
push
sub
and
mov
cmp
xchg
test
shrl
pop
in
mov
mov
stos
sub
fdivrs
cmpsb
jp
pop
cli
jno
sub
mov
push
cmp
rclb
push
add
cli
jns
mov
lods
or
movsl
mov
and
cwtl
mov
or
mov
cli
lods
mov
pop
jecxz
sbb
popf
mov
orb
adc
roll
dec
sbbl
cld
in
mov
push
repz
mov
mov
fisubl
dec
jo
cwtl
jg
xchg
movsl
cmp
gs
pop
mov
mov
or
xchg
adc
mov
mov
cli
push
lret
pop
int
es
add
dec
dec
jo
mov
clc
cwtl
ds
mov
stos
stos
dec
ret
lods
add
ror
lahf
mov
xor
inc
jp
push
and
mov
outsl
sub
sbb
and
in
lcall
cltd
mov
add
cwtl
cmp
lret
call
inc
pop
and
dec
dec
pop
xor
stc
mov
dec
imul
inc
sbb
add
stos
pop
mov
xor
lret
xchg
sbb
test
jns
cwtl
jne
movsl
popa
cmp
fstp
pushf
insb
fcomps
dec
cmpb
xlat
inc
dec
fdivrs
jmp
mov
cmp
push
or
cmp
scas
and
push
in
push
jl
and
inc
xor
clc
enter
xor
xchg
clc
aas
imul
aas
sbb
adc
jecxz
mov
ljmp
jecxz
clc
in
iret
movsl
rcrl
jns
xor
ffree
gs
loope
push
or
pmullw
test
push
dec
sbb
and
fmulp
pushf
dec
jmp
lret
rep
movq
and
inc
aad
jge
inc
lahf
call
shlb
or
push
test
sahf
pop
jp
mov
mov
jo
mov
enter
lock
dec
mov
sbb
sbb
shll
xor
sub
movl
cwtl
test
fstpl
in
movsl
aaa
lret
jbe
mov
test
mov
aad
icebp
mov
xor
into
ljmp
add
sbb
mov
andb
psrlq
lahf
pop
cmp
push
cmp
clc
push
jg
jl
nop
mov
and
fs
push
pushf
dec
imul
dec
inc
xchg
and
add
out
lds
das
lea
mov
jl
repnz
sbb
imul
xchg
mov
or
lahf
pushl
jnp
jmp
loopne
in
inc
mov
dec
int
sbb
pop
rcrl
dec
je
orl
push
cmpsb
mov
fcomi
cld
sahf
shll
add
rcrb
jle
aas
mov
mov
rorl
out
cmpsl
cmp
orl
push
sarl
popf
mov
push
xor
xchg
rcrb
test
xchg
sub
adc
mov
mov
outsl
fbld
nop
mov
stos
push
jl
mov
mov
inc
les
push
idivb
shll
arpl
lret
roll
sarb
dec
lahf
test
je
mov
add
lret
dec
sbbb
pop
pop
adc
shr
in
mov
cmpsl
sub
xor
cmpsb
pusha
mov
ret
into
leave
lds
mov
push
iret
add
mov
jge
lret
ja
mov
jg
sbb
mov
adc
idiv
sbbl
repz
lods
cld
mov
outsb
mov
ss
jmp
inc
dec
mov
hlt
xor
repnz
mov
addr16
nop
lods
stc
inc
xor
xchg
add
mov
jl
cmp
sub
inc
fcmovb
cltd
enter
mov
fnsave
dec
add
mov
nop
ja
mov
cmp
sub
push
orl
icebp
adcb
enter
sub
imul
xchg
imul
fwait
cmp
aas
jns
or
xchg
sahf
icebp
xlat
mov
mov
outsb
pop
xchg
inc
fsubr
mov
xor
xor
dec
xor
mov
out
fcoml
lods
hlt
sbb
jle
xor
pop
mov
aaa
lods
and
jb
inc
jno
add
inc
cwtl
inc
jp
add
or
or
push
push
or
data16
stc
sbb
mov
adc
or
jb
cltd
mov
sub
cmp
xchg
shll
pop
push
rcll
loopne
mov
or
out
shll
aam
sbbl
jae
enter
test
filds
fnstcw
insb
mov
lods
leave
in
add
adc
mov
popf
jae
in
cmpsb
cmc
xchg
lcall
push
add
dec
hlt
push
pop
lret
mov
negl
imul
jno
rcrb
leave
pop
shlb
ret
xchg
add
clc
xchg
popf
and
inc
pop
mov
notb
mov
adc
adc
out
xchg
and
arpl
test
js
js
mov
lret
jl
push
shrl
push
add
mov
pop
jp
sbb
insb
call
dec
xor
ljmp
iret
inc
repnz
mov
adc
daa
std
mov
xchg
mov
movsl
les
ss
lds
stos
shll
mov
add
jg
sbb
push
mov
scas
lahf
dec
outsb
inc
xchg
push
rol
adc
movsb
adc
js
push
adc
mov
ja
aad
mov
and
lea
outsl
ret
mov
adc
mov
xor
push
in
cmc
stc
fsubl
jge
repz
push
inc
out
sbb
add
shll
nop
outsb
es
sub
in
adc
cs
lahf
cltd
mov
and
pop
in
push
push
or
push
mov
gs
sbbl
das
mov
mov
xor
insl
adc
add
mov
mov
ffreep
aad
test
sarb
xor
test
aam
pop
jbe
xor
repz
lahf
sti
xchg
lcall
add
add
pop
pop
jp
and
bound
or
stos
mov
stc
test
dec
sub
xor
mov
or
insb
push
xchg
sbb
fidivs
cli
decl
enter
scas
dec
dec
xchg
jle
lret
sub
mov
and
int
mov
push
dec
cmpsl
inc
les
mov
xlat
mov
roll
lret
or
push
popa
jmp
sub
add
pop
inc
pop
das
push
pop
adc
mov
mov
jnp
imul
aas
out
lods
sbb
test
in
adc
call
add
xor
imulb
out
sub
jecxz
dec
rorb
xchg
shrl
jge
fmull
push
loope
ret
push
cltd
cmpsb
fwait
jae
test
or
mov
xchg
jmp
std
in
and
in
scas
lods
add
push
stos
pushf
inc
aas
and
mov
in
push
testb
ret
or
stc
dec
sahf
pop
mov
loopne
push
jmp
add
fsubrl
stos
mov
and
xchg
push
jnp
clc
fcomps
psllw
insb
or
inc
mov
mov
mov
pop
aaa
sbb
jo
shlb
stc
aaa
adc
adc
nop
pop
pushf
mov
popf
cmp
cmp
in
and
pushf
nop
out
add
loop
bswap
loopne
jmp
leave
divb
les
hlt
xchg
adc
lods
jo
mov
dec
ljmp
cmpsb
data16
push
mov
ja
mov
insl
popf
out
sub
insb
hlt
mov
pop
and
xchg
ss
repz
daa
nop
rorl
sbb
mov
out
sbb
sub
jns
push
popf
jmp
lahf
negl
test
stos
fistps
scas
dec
addr16
ds
inc
cld
lods
std
outsl
mov
cld
pop
lea
mov
outsl
jecxz
in
negb
mov
adc
in
loope
xchg
push
cmp
cmp
or
test
mov
stos
pop
lods
int3
mov
xlat
xchg
and
pop
jno
loopne
pop
fwait
iret
push
test
popa
push
mov
or
adc
js
pop
or
mov
lret
adc
xchg
stc
fisttps
xlat
jnp
push
popf
cmp
int3
imul
in
lcall
sbb
insl
lods
and
movsl
lods
push
aaa
jle
vpsubusw
jnp
orb
outsl
mov
or
sub
mov
cwtl
incl
flds
dec
xor
je
mov
lods
dec
mov
cmpsb
xchg
xchg
popf
xchg
ret
adc
lcall
lock
pop
in
adc
sbb
mov
outsb
and
sub
jb
pop
add
sub
in
xor
sub
xchg
lahf
xor
das
sarb
test
es
xchg
stos
xchg
popf
cmpsb
loopne
out
cmpb
sahf
mov
add
sar
fisubrl
mov
sub
sbb
in
movsl
popa
stos
stc
jl
inc
jle
pop
je
dec
out
cwtl
insl
lods
cmp
lods
std
aaa
rorb
xor
push
loop
out
idivb
lods
or
and
daa
mov
fldt
adc
mull
sub
test
cmp
cmp
dec
sbb
aas
inc
add
dec
mull
lods
dec
sahf
imul
cmp
lods
pop
sub
cmpsl
pop
mov
aam
xor
inc
xchg
cmpsb
int
ljmp
mov
cmp
pop
aaa
test
xchg
dec
subb
cli
clc
xchg
dec
add
and
mov
inc
iret
scas
outsb
mov
inc
cmpsl
and
lea
sahf
and
pop
call
xchg
call
icebp
cmpsl
push
ror
insl
push
js
or
mov
cmovp
pop
stos
ds
push
lahf
data16
loop
cmp
mov
insb
mov
cmp
sbb
test
pop
shrl
xchg
xchg
or
cltd
insl
and
inc
add
jle
scas
jl
inc
fxch
shll
out
fsub
popa
mov
pushf
push
sub
sub
je
xchg
jge
sub
out
insl
call
jae
imul
cmp
repz
mov
mov
pusha
call
test
inc
bound
loopne
fistpll
jmp
cmp
nop
repnz
scas
lret
aad
sub
inc
inc
ja
lds
loopne
cld
int
dec
ret
data16
or
jb
cmpsb
and
xchg
popf
cmp
loope
sbb
orl
mov
sub
cmp
sbb
mov
dec
arpl
popa
mov
push
push
add
sub
negb
pop
aaa
pop
mov
ljmp
lcall
std
jecxz
add
pop
mul
add
cwtl
pop
dec
movsb
iret
jge
inc
aad
mov
xchg
push
pop
push
stos
adc
mov
mov
cwtl
sbb
arpl
xor
push
ljmp
xlat
cmc
dec
mov
pop
rcrl
insb
imul
inc
jg
jo
mov
movb
sub
enter
loope
mov
mov
fwait
mov
sbbb
in
mov
cmp
scas
test
and
aaa
jp
lock
out
sti
in
cmpsl
mov
mov
sbb
jno
jle
mov
sbb
loop
pop
adc
or
sub
mov
push
das
or
cmp
aas
dec
aas
or
sbb
add
sbb
gs
out
daa
das
mov
or
cmpsl
nop
or
hlt
rcrl
aas
sti
xchg
xchg
xor
dec
std
mov
mov
insb
out
cmp
push
inc
jo
push
aam
xchg
lcall
ja
or
shll
jns
cli
test
xor
lret
push
insl
aam
ja
adc
das
pusha
inc
xor
mov
in
inc
push
in
push
adc
lods
nop
inc
outsb
in
cmp
xor
clc
sbb
jno
cmc
lds
dec
mov
mov
cmp
mov
add
push
int
orl
push
fsubrp
ja
daa
lret
into
ja
test
inc
sub
ret
enter
lock
aad
sbbb
mov
xor
adc
nop
div
stc
imul
jno
mov
daa
xor
or
pop
call
cli
push
fstl
add
sahf
xor
bound
stos
sub
mov
xchg
iret
inc
adc
fcoms
pushf
cmp
unpcklps
or
insl
or
pusha
xchg
mov
arpl
inc
movsb
fdivs
popf
scas
adc
jno
dec
add
xchg
mov
lret
jnp
cltd
arpl
aaa
pop
sbb
les
std
ss
int
push
xor
pushf
out
enter
jae
push
iret
scas
and
jmp
lods
mov
jl
cmp
mov
mov
adc
incb
repnz
adc
test
dec
je
arpl
call
loopne
aad
imul
add
push
int3
push
fmulp
int3
cmp
push
arpl
inc
bound
push
movsb
mov
xchg
lahf
repnz
in
or
mov
adc
popf
arpl
test
pop
jo
add
adc
bound
xchg
mov
in
or
inc
and
addr16
repz
jbe
sbb
mov
cmp
mov
inc
cmpsl
and
fidivrl
mov
jnp
mov
mov
repnz
ds
xchg
pushf
add
je
outsl
push
andl
push
add
iret
sahf
arpl
lret
sbb
insb
fistpl
mov
sarb
mov
rcrb
xor
ss
xlat
lea
add
sbb
push
aaa
jmp
dec
mov
mov
ficoml
ss
lret
inc
mov
cltd
cli
cmp
rorb
pop
and
sbb
int
mov
testb
insl
add
fxch
ficomps
pusha
xlat
mov
fdivrs
leave
pop
cld
scas
push
loop
and
shr
jnp
lcall
inc
xor
icebp
cmp
stos
push
mov
addr16
aad
rorb
mov
and
push
jge
push
cmc
sub
sbb
xor
popa
daa
into
mov
push
lcall
mov
popf
imul
cmp
ds
xor
mov
repz
stc
mov
nop
and
negl
sub
mov
dec
ret
mov
imul
add
inc
enter
lahf
dec
addl
cmp
scas
dec
push
loop
jmp
ljmp
dec
inc
pop
pop
fisttpl
dec
js
or
xchg
jp
mov
sub
or
mov
fstpl
adcl
lcall
push
std
sbb
jnp
loope
int
test
adc
call
aam
or
cli
inc
sbb
fwait
das
dec
dec
loop
cmpb
inc
jg
mov
push
hlt
hlt
jecxz
ret
add
pop
je
mov
pop
xchg
fistpl
push
push
mov
sub
inc
into
in
pop
stc
adc
mov
mov
cmc
repz
mov
and
rcl
in
lds
adc
shl
out
mov
adc
in
lods
out
mov
jecxz
pushf
and
xor
jns
das
and
loopne
xor
xlat
or
xor
dec
cmp
xor
mov
into
dec
into
lret
movsl
cli
ljmp
test
test
stos
pop
and
push
push
sti
add
xor
mov
mov
mov
insl
in
mov
pop
cmp
inc
mov
or
xchg
mov
mov
mov
dec
sub
aam
mov
in
shll
adc
stos
out
scas
xchg
shll
pop
xor
jmp
xchg
scas
add
push
cs
popf
adc
mov
orl
ret
lahf
or
push
mov
pushf
test
mov
loop
sub
cmpsl
pop
inc
enter
lret
jb
push
out
mov
push
add
add
movsl
data16
sbbl
std
jl
or
add
mov
fsub
in
pop
cmp
arpl
sbb
fsubrl
and
out
iret
ret
rcll
shll
inc
mov
cmp
divl
int3
push
leave
mov
jmp
or
or
adc
fwait
les
push
push
nop
mov
mov
inc
cmp
jo
sub
sbb
in
inc
dec
rol
cltd
ret
testl
int3
mov
mov
xor
mov
sub
adc
pop
aas
sbb
push
xchg
test
lret
jecxz
mov
call
movl
lods
out
or
lea
fwait
jp
dec
sbb
adc
out
push
in
jecxz
or
mov
ret
jge
shr
les
negl
popa
jp
pop
iret
lea
cli
add
imul
das
sti
fnstenv
imul
push
daa
mov
mov
out
xchg
adc
xor
push
js
lods
mov
xor
fimull
stc
ljmp
mov
loope
mov
adc
aaa
sub
add
das
cmp
imul
mov
mov
jnp
int
test
addr16
movsl
cmp
rep
enter
mov
jecxz
loope
in
pop
mov
add
dec
pop
mov
pop
lret
out
sbb
sub
dec
scas
push
es
adc
mov
sarb
sti
lds
mov
gs
pop
aaa
xor
and
mov
imul
and
or
xchg
xlat
repz
sbb
pop
add
mov
divb
jnp
mov
cs
jg
in
imulb
mov
enter
imul
out
dec
sub
imul
leave
test
sbb
dec
mov
scas
imul
sbb
imul
ja
adc
xor
add
mov
mov
mov
dec
decl
popf
ficoml
jg
rcr
fs
jns
inc
stc
ds
clc
mov
sub
xor
or
scas
sahf
adc
fsubs
repz
bound
mov
cwtl
scas
and
sbb
daa
aad
mov
movsl
lock
inc
lods
sub
adc
push
xchg
lds
cmp
lock
push
subl
inc
out
inc
jl
mov
lret
add
or
add
rcrb
or
cld
push
jmp
pop
adc
push
dec
dec
imul
ja
pushf
mov
xor
cli
int
fists
pop
insl
adc
push
sti
dec
loop
lahf
inc
in
xchg
mov
adc
pop
stc
scas
nop
jno
shlb
mov
mov
inc
mov
ja
cs
mov
aam
push
dec
pop
int
dec
jge
aas
repnz
gs
and
xor
cmc
sub
inc
les
cmp
fwait
mov
sbb
jb
mov
mov
add
adc
xchg
ret
sbb
ljmp
cmp
mov
push
jmp
test
iret
sub
push
pop
xor
mov
movsb
cmc
mov
push
scas
cmpsl
mov
cmpsl
aas
push
inc
insl
call
popa
outsl
iret
out
sbb
sbb
addr16
ljmp
xor
pop
dec
mov
movsl
xchg
xor
pop
pop
inc
shll
sub
mov
lcall
stos
xchg
popa
rorl
in
repz
stos
or
daa
sbb
add
or
push
dec
insb
loopne
mov
pop
xor
xchg
or
rol
inc
hlt
mov
loop
jne
ljmp
mov
mov
mov
mov
les
mov
or
cmp
mov
add
add
mov
notb
pop
cmpsb
imul
loop
shlb
mov
lods
loopne
adc
ljmp
xor
mull
pop
in
cmpl
mov
mov
pop
xchg
js
je
jecxz
jp
mov
adc
sub
or
mov
stc
stc
test
loopne
test
scas
movsb
mov
pop
dec
lcall
std
push
je
mov
imull
fsubrs
fstpt
ret
movsl
and
addl
or
scas
push
das
mov
inc
xor
pusha
push
pushf
xlat
inc
hlt
jnp
negb
fwait
sub
or
js
clc
mov
js
xchg
mov
xchg
jle
xchg
cli
inc
rorb
mov
pop
cli
adc
xchg
mov
or
pop
repz
scas
adc
pop
jge
cs
adc
cmc
xor
mov
sahf
xor
sbb
mov
repnz
outsb
adc
dec
ret
test
mov
mov
loope
jmp
lret
xor
lods
leave
stos
mov
pushl
pop
jl
lret
or
in
dec
rol
insb
sti
out
jno
add
mov
mov
push
pop
xchg
sbb
in
mov
xor
mov
shrb
mov
sarl
rolb
adc
gs
sub
movb
push
arpl
push
inc
into
sub
cmp
das
scas
aaa
mov
jl
shlb
push
lret
sub
mov
pop
lahf
jg
push
ret
imull
cmp
pushfw
lock
add
cmp
or
inc
or
cmpsl
cmp
or
adc
push
lahf
push
xchg
std
jge
popf
xchg
jmp
scas
cmp
ret
jns
sub
arpl
mov
jno
cmc
and
xor
mov
or
or
mov
ljmp
mov
pop
loopne
push
test
adc
jmp
fwait
mov
jae
mov
xor
fildll
pusha
xor
jo
outsl
dec
imul
rolb
sbb
lahf
dec
out
xor
and
test
jbe
xchg
jo
fistl
jbe
add
mov
cmp
add
out
fwait
pop
loope
movsb
ljmp
test
loopne
das
mov
mov
test
lcall
cs
mov
fisubrs
in
mov
push
cmpsl
inc
add
mov
cltd
loopne
mov
shll
push
int3
xchg
sub
dec
lods
push
cmp
mov
ljmp
pop
or
xor
inc
adc
repz
shll
xchg
push
adcb
mov
fisubrl
pushf
xor
in
sub
les
dec
cmc
mov
cwtl
das
xor
pop
shll
xchg
sub
ljmp
testb
ja
push
insl
icebp
lcall
call
cmp
push
lods
iret
leave
int
shlb
jo
xchg
mov
incl
cld
repnz
cmp
js
aaa
enter
sti
int3
cmp
insl
out
and
out
jne
repnz
out
cld
mov
jmp
into
pusha
and
orb
xor
sbb
and
loop,pn
sub
push
call
dec
aaa
test
inc
fcmove
jnp
vpextrw
lds
int
push
inc
movntq
xchg
or
adc
inc
dec
test
xchg
pop
cli
cmp
jmp
cmp
mov
daa
leave
cmp
dec
pop
jp
inc
mov
xchg
inc
xchg
fbstp
loopne
popa
cs
mov
or
sarb
mov
jp
ljmp
and
cwtl
push
xchg
xchg
push
filds
out
insb
adc
ljmp
xchg
push
js
inc
inc
arpl
cmp
lret
loope
jecxz
lods
and
scas
jecxz
loop
add
jmp
xor
xchg
scas
in
std
scas
lea
mov
ljmp
je
lds
xchg
sti
negb
shlb
sub
xchg
or
fidivrl
es
sbb
jne
psrld
cmp
push
pop
mov
iret
pop
ds
add
pop
mov
push
or
mov
inc
jnp
sbbl
leave
imul
lods
pop
inc
xor
sbb
push
ret
xlat
pop
sub
jbe
cmp
cmpsb
jns
daa
imul
mov
adc
mov
inc
jecxz
xor
enter
mov
int
adc
cmp
loop
or
stos
cwtl
stos
lock
mov
jbe
xor
inc
call
push
testb
popa
push
push
add
out
cmp
push
rclb
cs
push
jb
test
imul
dec
jb
mov
icebp
pushf
in
pusha
push
test
in
stos
mov
sahf
pop
cld
ljmp
test
pop
and
or
dec
insb
add
pop
loope
push
iret
sub
push
add
popf
fstps
pushf
inc
dec
xchg
movsl
insl
mov
mov
lret
cld
xor
test
dec
nop
scas
pop
and
or
movsl
scas
pop
adc
int
and
pop
or
mov
sbb
cli
adc
pop
out
xchg
jle
jl
iret
sahf
cmp
lret
in
xchg
imul
push
mov
push
pop
sbb
aaa
xor
or
xor
mov
dec
cmpsl
mov
push
mov
and
pop
xor
std
outsl
enter
dec
cmp
add
scas
out
movsb
cld
aaa
xor
add
adc
jl
push
lea
cmc
in
aas
mov
push
jmp
repnz
dec
loop
xor
in
cmc
test
and
adc
xchg
adc
scas
rcll
out
lods
test
lods
xchg
sub
pop
aad
ret
adc
rorb
pop
jne
xchg
cltd
mov
imul
int3
into
fadds
arpl
rcrb
mov
adc
push
icebp
jecxz
ret
icebp
sbb
movsb
and
fmull
shlb
push
int3
lds
jecxz
cmpsl
outsl
sub
mov
cltd
sub
hlt
mov
lods
adcl
adc
dec
push
push
adc
cwtl
fs
push
int
and
mov
xor
or
xchg
cli
push
decl
dec
ss
in
jne
sahf
arpl
sub
inc
negb
pop
imul
pushf
push
sbb
loope
xchg
jb
jns
cli
aam
nop
xor
inc
orl
lahf
cld
xor
sub
lahf
dec
pop
arpl
mov
test
or
ret
push
cwtl
sar
adc
test
pop
fnsave
ljmp
or
clc
add
push
fldt
inc
in
aas
jb
xor
push
jnp
mov
xchg
jge
jbe
mov
dec
lret
cld
pop
mov
imul
cmp
add
movsl
xor
mul
out
jge
xor
and
out
outsb
inc
push
push
std
test
aad
ja
adc
push
or
jg
fbstp
idivl
jb
mov
push
sarb
mov
sub
push
inc
dec
push
addr16
inc
sbb
pop
mov
sti
pushf
pop
push
stos
cld
sbb
ds
jl
lods
in
mov
push
cmp
mov
add
inc
mov
movsl
and
fnstcw
jg
popa
fdivrl
fcoms
test
and
add
lods
pusha
int3
or
cmp
jo
pushf
cmc
test
push
aas
test
mov
out
xchg
push
clc
and
jmp
mov
mov
sub
mov
sub
inc
js
test
jbe
mov
in
aam
dec
sti
mov
pop
sbb
xor
sti
mov
mov
aad
jne
popfw
xchg
aam
pop
daa
mov
ret
out
jb
popf
ret
add
ja
repnz
mov
or
in
mov
imul
sahf
push
mov
in
stos
xor
ret
push
repnz
out
add
scas
das
hlt
je
ljmp
and
int
ljmp
xchg
out
cmpsb
jmp
cmp
pop
lea
jmp
testl
test
pop
bound
cmpsb
sti
xor
mov
xchg
add
fisubs
push
lcall
mov
mov
xlat
jp
pop
rclb
cmp
dec
call
shll
repz
repz
dec
mov
test
insb
and
jg
sub
adc
inc
jmp
xorb
std
dec
or
lds
lcall
add
inc
pusha
gs
insl
push
shll
out
mov
mov
inc
add
cmpsb
popf
test
push
push
shll
dec
hlt
pop
in
out
das
jo
pop
das
cmp
jo
mov
fisttpl
call
push
dec
cmp
into
mov
rolb
mov
stc
sbb
imul
adc
xor
ja
push
fwait
cmp
inc
out
test
ss
or
bound
jne
out
in
and
stos
mov
push
ret
dec
scas
xchg
push
ljmp
test
push
stos
dec
xchg
repz
adc
push
cmp
int3
pop
mov
mov
lret
dec
lret
fs
fistpl
jb
mov
mov
mov
xchg
shll
dec
or
shlb
in
sub
fcompl
in
in
ret
add
int
adc
lods
lahf
rcrb
push
pop
xor
leave
sub
xchg
fsubrs
and
pop
fcmovne
mov
sub
or
fisubrs
inc
jb
repz
shlb
cmpsl
roll
ret
insl
daa
ja
aam
or
popf
adc
lret
stos
add
out
xor
push
aad
jge
cli
push
sbb
sbb
repnz
and
sub
fildll
data16
dec
nop
push
inc
orl
movsl
inc
adc
sub
and
push
lods
push
add
sub
fs
jge
mov
add
outsb
decb
ja
inc
mov
jne
and
lods
stos
cmp
mov
adc
cmp
aad
jae
lcall
daa
movsl
push
out
test
mov
dec
outsb
push
loopne
xchg
push
fwait
out
loop
outsl
mov
addr16
rcrb
add
lods
pusha
push
fmulp
mov
das
or
jmp
fistpl
and
jno
lock
lea
mov
or
mov
clc
adc
xor
xchg
add
xchg
std
inc
jp
jnp
aaa
jmp
fdivrs
sub
lcall
or
and
xor
fdivs
mov
or
fwait
add
ds
inc
mov
mov
addr16
cmp
add
aad
add
cmpsl
nop
xchg
stos
aas
aam
xchg
inc
stc
sub
fdivrs
cs
cmp
notb
adc
adc
jnp
fidivrl
insb
in
bound
jo
scas
popf
push
outsb
mov
imul
lcall
test
test
push
jl
xor
sarl
fdivl
lret
mov
adc
imul
add
adc
dec
mov
loopne
pop
cmp
mov
test
repz
fimuls
inc
jae
ret
jo
xor
das
bound
inc
stc
mov
inc
push
out
xchg
mov
mov
and
add
pushf
jb
mov
std
negb
lods
sub
int3
scas
or
rorl
fwait
lahf
out
jns
leave
mov
aam
dec
ret
xchg
call
ret
popf
inc
and
xchg
or
fiadds
mov
inc
stos
cmpsb
cmp
xor
fadds
add
mov
outsl
jb
pop
jmp
mov
xor
je
inc
andl
xchg
ljmp
fnstcw
mov
pop
and
adc
popa
cmpsb
sbb
xlat
stc
jl
adcb
xchg
and
pop
cli
push
subl
mov
psrlw
icebp
push
jne
popf
cs
aam
rcll
push
addr16
push
cmp
adc
fs
out
gs
inc
and
bnd
sarb
gs
cs
xor
sub
pop
fmull
push
shl
jecxz
dec
jb
popa
test
into
mov
ja
enter
fsubp
mov
aad
adc
ret
dec
ror
sbb
outsl
enter
ret
test
dec
mov
insb
xchg
aaa
std
cli
mov
repz
add
push
dec
mov
arpl
data16
adc
andl
jmp
popf
sub
sbb
pop
xchg
into
std
inc
sbb
dec
shl
fwait
jo
js
lcall
shr
inc
fistpll
mov
pop
pop
in
fsubrl
cwtl
mov
xlat
pop
insb
rcr
inc
into
xlat
or
insl
mov
stos
pop
sub
popa
push
inc
sahf
jbe
xchg
cmp
out
xchg
dec
std
leave
jnp
cs
out
cmp
lds
and
hlt
mov
jne
notb
sbb
pop
mov
insl
or
loop
aas
popa
enter
mov
unpcklps
inc
dec
mov
aad
insb
jl
inc
or
out
or
pop
stos
jnp
inc
add
and
js
lret
xchg
sub
cmp
imul
pop
cltd
mov
jecxz
int
ljmp
jg,pn
push
dec
push
in
mov
and
popf
and
pusha
xchg
inc
outsb
in
cmpsl
outsb
jge,pt
icebp
fyl2xp1
daa
jge
mov
mov
adc
dec
stos
in
pop
pop
data16
push
add
mov
add
mov
hlt
mov
or
int
pop
pop
test
rcll
lret
in
mov
jmp
mov
push
inc
and
js
or
push
mov
and
xor
sbb
cmp
push
out
and
popf
rorl
insb
out
mov
movsb
hlt
in
or
in
add
mov
jge
sub
bound
fidivl
xlat
sbb
xchg
dec
mov
aas
js
gs
mov
outsb
outsl
imul
adc
pop
sbb
scas
call
das
mov
xchg
fldt
xor
add
mov
rcrb
out
mov
mov
insl
xchg
cs
jb
mov
sarb
fs
cmp
dec
jo
pop
add
sbbb
xorb
out
xchg
pop
mov
ds
stos
movsl
push
inc
fmulp
sub
rcrb
mov
test
mov
pop
cmp
cmpsb
js
push
jnp
jae
or
mov
out
insb
loopne
push
cli
scas
clc
jl
sub
psrld
pop
mov
dec
xchg
inc
cmp
mov
cmp
daa
mov
mov
jge
scas
sbb
xchg
test
insb
dec
inc
dec
orb
pop
dec
cmpl
lods
enter
data16
mov
or
into
cltd
imul
popa
push
dec
pop
dec
sbb
stc
mov
adc
daa
repz
inc
clc
mov
lcall
dec
mov
scas
adc
outsb
aaa
sar
xchg
clc
test
test
test
lcall
mov
push
and
pop
push
cmp
stos
xchg
mov
xchg
xor
outsb
pop
xchg
dec
out
mov
scas
xor
hlt
or
jo
andl
loop
test
jle
and
inc
test
imul
testb
push
sbb
iret
adcb
lock
shl
push
push
std
incb
jnp
outsl
pop
ljmp
jge
aam
imull
push
ja
loop
fidivs
cmc
mov
in
fimuls
sbb
into
hlt
out
repz
mov
mov
movl
rolb
loopne
pop
mov
imul
jbe
mov
xchg
mov
push
mov
xor
jb
pop
ret
and
movsl
mov
in
mov
adc
ret
mov
push
pop
mov
push
sbb
sub
shrl
mov
cltd
jnp
aaa
push
pop
ficoms
mov
adc
lds
mov
sbbl
xor
mov
clc
movsl
pop
mov
jg
mov
das
sbbl
push
mov
lods
out
test
jp
stc
push
movsb
mov
es
sahf
add
orl
or
jne
imul
add
fadds
lret
fucomip
lea
sarl
mov
out
and
and
sub
dec
push
inc
insb
clc
add
cltd
cmpsb
mov
sub
or
std
out
sti
mov
sbb
mov
ficompl
dec
dec
inc
dec
stos
pop
jmp
flds
mov
lods
dec
and
cmp
repz
pop
xchg
push
ficoml
xchg
repz
in
sub
inc
and
lock
mov
ljmp
dec
ret
js
pop
test
inc
mov
jbe
dec
cmpsl
xlat
mov
cmp
shl
repz
xchg
cmc
push
push
adc
mov
in
mov
mov
xchg
rcrb
lcall
js
adcb
push
ds
xor
lret
clc
in
mov
scas
jno
push
inc
lcall
cmp
fisubl
stos
cmp
sarb
adc
daa
dec
jge
xor
xchg
push
dec
fisttps
fs
lds
outsl
xor
insl
xchg
aam
jmp
rclb
or
std
pop
bound
push
les
mov
or
icebp
jmp
notl
leave
pop
jno
cwtl
arpl
outsb
xlat
dec
stc
stos
pop
cmp
lahf
std
aad
xor
jg
int3
sub
adc
jp
mov
dec
mov
rcll
xchg
inc
sub
cld
jp
sbb
enter
mov
xchg
into
mov
push
mov
push
loopne
xor
add
or
imul
mov
mov
movsl
subb
mov
mov
or
mov
loope
jecxz
cmpsl
pop
cld
es
sub
and
and
sub
sbb
or
shll
mov
ja
fsubrs
into
popf
fwait
imul
sub
test
arpl
out
and
sbb
sub
les
pushf
cmc
adc
inc
mov
inc
out
push
fmull
jnp
stos
fs
lock
mov
mov
or
mov
xchg
fdivrs
sti
outsl
popf
nop
push
mov
cmpsl
rolb
push
in
pop
cld
sub
iret
sub
xchg
inc
std
cmp
adc
push
testl
iret
or
push
icebp
push
inc
sub
push
mov
stos
xorl
popf
aad
and
cmc
insl
out
loop
ja
adc
inc
mov
rcl
jecxz
mov
mov
xchg
xorl
inc
inc
push
dec
push
mov
mov
pushf
fidivrs
add
jg
jle
mov
xchg
mov
enter
pop
sub
inc
sbb
inc
adc
cli
daa
mov
jecxz
cmp
xor
test
sbb
jae
lea
mov
int3
fcoms
or
cmpb
out
call
add
sti
dec
xor
test
das
mov
push
mov
inc
cwtl
sbb
or
sub
cmp
nop
jno
movsl
mov
out
out
xchg
mov
dec
sbb
mov
mov
xor
clc
mov
mov
into
lock
or
sbb
sbb
test
sbb
decb
loop
dec
insl
pusha
je
mov
outsb
push
lea
jl
data16
pop
push
jge
out
les
jbe
and
js
gs
sub
das
lds
andb
loop
sub
inc
arpl
mov
inc
aam
add
xchg
fldt
sbb
cmp
dec
add
xor
pusha
in
push
sub
xchg
push
and
sub
cmp
xor
mov
in
mov
sbb
cld
adc
pop
outsl
xchg
sbb
sbb
leave
imul
mov
in
shlb
ljmp
js
mov
sbb
pop
sbb
push
inc
adc
jno
lea
cmpsl
xor
fdivrs
imul
in
jecxz
jecxz
loopne
mov
push
add
movsl
enter
push
dec
push
jl
negb
mov
dec
ss
mov
loope
and
push
dec
adc
enter
aam
add
inc
shufps
cmp
dec
mov
enter
mov
xchg
nop
call
jns
es
outsb
xor
addb
test
dec
xchg
mov
cmp
jbe
mov
push
mov
flds
mov
inc
popf
mov
cmp
das
sti
push
insl
mov
dec
adc
lods
lock
imul
mov
in
clc
jmp
es
push
rcll
or
inc
ficoml
jbe
jno
pusha
xchg
pop
xchg
imul
pushl
xchg
push
call
fnstsw
jecxz
stos
inc
sub
xchg
pop
sub
bound
cmp
out
push
inc
push
mov
fcompl
cmpsb
outsl
xor
jae
pop
stos
mov
in
hlt
repz
stos
xor
and
pop
inc
and
insl
aad
inc
ss
add
mov
push
mov
fdivs
inc
cmp
je
jg
jbe
inc
popf
outsl
push
sbb
out
and
stos
jecxz
dec
xchg
mov
stc
pop
dec
pop
leave
lock
arpl
add
mov
jno
in
clc
divb
das
sti
and
js
mov
es
push
xchg
int
test
pusha
xchg
inc
not
sbb
mov
clc
and
xchg
sbb
push
stos
jno
repz
dec
and
movsl
mov
and
mov
sub
icebp
outsl
adc
aaa
mov
ret
icebp
xor
and
scas
xchg
dec
push
sbb
call
pop
je
scas
cltd
inc
out
dec
xor
mov
insl
aas
mov
ffree
or
movsl
mov
sbb
fistl
gs
or
or
sbb
popf
negl
test
lcall
sbbl
lret
jnp
fbstp
fildll
cld
mov
push
sub
mov
and
lds
lods
and
mov
xchg
lea
dec
loope
xchg
inc
and
pop
sbb
xor
scas
xor
popa
mov
sub
jae
test
cltd
jg
mov
arpl
inc
xchg
xor
or
rcll
aas
xchg
inc
sub
jb
xor
or
jne
rcll
sub
jg
mov
sub
xchg
lret
mov
je
mov
add
hlt
aad
sbb
pop
sbb
cmp
pop
in
fwait
ss
arpl
adc
sub
cld
add
mov
stc
popa
cli
movd
insl
mov
insb
jo
cmp
cmp
mov
mov
stc
or
out
xchg
mov
cmp
testl
push
addr16
cmp
dec
ds
inc
push
ficomps
mov
cltd
rclb
pop
outsb
jp
test
movsb
pushf
dec
inc
ljmp
sbb
test
fsubrl
sub
test
std
popf
or
fisubs
addr16
popa
mov
mov
scas
jp,pt
push
jmp
fdiv
sahf
or
push
loop
lret
push
add
leave
add
rclb
movsb
jno
addl
aaa
dec
xchg
lcall
pusha
out
mov
cld
mov
mov
mov
xor
jne
xlat
push
pop
push
mov
push
std
std
mov
scas
jecxz
dec
insl
jno
cli
cltd
lds
sbb
sbb
xchg
dec
cmp
jo,pt
mov
in
mov
mov
addr16
cmp
rcl
dec
std
call
push
mov
es
add
inc
popf
mov
cmp
call
test
in
add
movsl
or
imull
ret
mov
daa
lods
sbb
loopne
cwtl
shrb
lea
jecxz
or
xor
bound
inc
fnop
xor
rcll
jecxz
jmp
imul
mov
data16
inc
jae
lods
inc
adc
loop
out
repnz
loope
sbb
jnp
leave
add
push
xor
dec
mov
or
mov
xor
or
out
fsubl
hlt
test
decb
xchg
fsubs
outsl
push
push
jp
xor
mov
mov
pop
out
xor
mov
mov
popa
cltd
out
xor
dec
hlt
push
jge
add
insb
imul
ja
mov
fidivl
mov
mov
scas
cwtl
ja
xchg
dec
stos
push
xorl
mov
clc
loope
jb
loop
xchg
test
out
jg
sub
sbb
sbb
fwait
xchg
pop
in
and
push
or
sub
into
mov
mov
mov
aam
xor
pop
adc
cmpsb
data16
push
in
rcll
dec
jnp
xor
mov
sub
pop
movsl
addr16
pusha
push
mov
popf
pop
mov
loop
jg
cld
push
add
mov
mov
add
jl
jb
cld
or
jb
mov
dec
cmp
dec
enter
lcall
xchg
outsl
test
lret
xchg
rep
lods
stc
mov
lret
adc
inc
out
xor
jne
push
gs
mov
cmp
mov
push
fildll
and
jns
xchg
push
mov
sbb
sub
adc
mov
xchg
inc
test
cmpsl
mov
ret
mov
loopne,pn
adc
dec
fwait
inc
fmuls
fcoml
insl
rclb
or
inc
push
jl
fs
sbb
pop
adc
mov
int
sub
mov
lods
jmp
cli
fidivl
dec
loope
cmpsb
sti
out
dec
xor
mov
lret
sti
out
xchg
cmp
jge
ds
mov
jae
insl
nop
xor
pop
mov
mov
frndint
add
jnp
fwait
negl
jecxz
sub
add
dec
test
xchg
push
repz
sub
loopne
xchg
sub
push
xor
jno
test
lret
loope
fwait
aam
mov
and
xchg
push
and
mov
or
fmul
cmpsb
int
ret
push
sub
lods
fdivl
data16
and
adcl
popf
outsl
data16
pop
test
push
ret
dec
dec
ja
mov
add
and
mov
push
sti
loope
push
je
imul
mov
jecxz
xchg
movsb
test
mov
jne
and
mov
pusha
sub
add
xor
ret
out
adc
pop
dec
iret
loop
inc
mov
jns
xchg
psllw
push
jb
xchg
mov
mov
mov
das
cmpl
ss
xor
shll
jp
stos
test
sub
fstpt
inc
arpl
push
int3
stc
cmp
loopne
pop
idiv
xchg
in
adc
pop
loope
mov
mov
into
arpl
je
add
into
xlat
sbb
stos
cmpsl
aam
loope
sub
cld
fidivrs
jecxz
mov
iret
mov
cmp
out
push
js
leave
out
cmpsb
inc
xchg
pushf
adc
or
adc
mov
sbb
mov
inc
mov
dec
push
mov
lds
mov
outsl
xchg
es
lret
inc
mov
test
sahf
sub
clc
int
in
daa
push
cli
jmp
lret
sbb
stos
sarl
sbb
out
jne
sub
jecxz
lods
xlat
adc
inc
dec
add
jge
in
mov
ds
or
movsb
sarl
jnp
inc
lahf
cmp
dec
pushf
xor
insb
mov
imul
pop
mov
loop
fildll
jle
ja
ret
fidivrl
aas
or
test
popf
je
sub
push
and
es
xor
sub
add
lods
pop
xor
dec
movsl
or
xchg
dec
insb
pop
push
stos
push
lds
jmp
int3
sahf
lcall
arpl
rcr
addl
jle
mov
mov
adc
outsb
je
mov
push
inc
icebp
pop
ds
add
int3
pop
aas
jb
stos
pop
dec
test
mov
push
sti
test
lea
sbb
mov
iret
lods
test
mov
out
ret
sub
lahf
lret
xor
and
adc
scas
pop
mov
push
idivb
sbb
les
std
cmp
stc
popf
or
sub
in
jb
xchg
mov
cs
push
xchg
dec
movsb
mov
mov
jle
les
xchg
jg
das
jns
mov
mov
pop
lret
and
mov
ja
sbb
adc
mov
outsb
xor
inc
mov
fcomp
lea
jnp
xchg
or
xor
das
xor
dec
mov
jmp
pop
lret
inc
sahf
loop
lds
mov
out
mov
mov
cli
mulb
loop
les
cltd
daa
dec
cmpsl
ret
mov
lods
mov
cld
cld
jo
jecxz
mov
iret
mov
dec
stos
das
jns
or
cmp
hlt
leave
push
mov
rorl
das
inc
cmp
bound
dec
add
mov
inc
cmp
push
push
insb
scas
hlt
mov
jnp
lcall
lods
or
stos
subb
rclb
jb
fsubl
negb
sub
fimull
daa
ret
mov
fimuls
mov
aas
jns
lock
xchg
nop
sbb
add
repz
cmp
mov
mov
inc
mov
cwtl
pop
nop
inc
iret
stos
cltd
xchg
les
jmp
aam
hlt
or
adc
push
add
cli
cmp
in
jg
mov
int
js
mov
shl
cmpsl
fidivrs
push
sub
mov
ss
out
mov
adc
and
ret
cmc
or
ss
cs
aad
pushl
int
pop
xor
lods
or
dec
popf
sub
adc
in
add
xlat
cmpsl
sub
pop
imul
add
adc
jno
jp
lcall
subl
ss
cmp
in
out
inc
sbb
decl
mov
mov
sbb
jo
inc
dec
fildl
mov
xor
les
fdivs
add
mov
ficomps
mov
ret
sub
sub
js
push
push
sbb
cmpb
lcall
sub
mov
and
xor
jmp
pushf
sbb
in
paddb
and
push
adc
call
sbb
xchg
in
leave
mov
push
shl
cli
ljmp
aam
or
lahf
sub
inc
dec
les
data16
mov
sub
pop
mov
pusha
les
addl
fnsave
sbb
mov
adcb
push
mov
movsl
mov
adc
adc
add
push
lahf
fdivrl
jno
push
jb
das
dec
inc
cs
mov
dec
out
cmp
jbe
pop
ffree
cmpsl
sbb
sub
sbb
mov
pop
roll
leave
push
cwtl
movsb
mov
mov
mov
scas
pop
xchg
sbb
aaa
call
mov
sbb
push
loop
roll
fnsave
lret
mov
or
cmp
add
js
jg
or
push
and
sub
mov
mov
push
sub
jp
cwtl
imul
push
fwait
aas
and
pop
lea
fadds
popa
and
cmp
in
inc
enter
xchg
jb
out
cmpsb
pop
or
into
les
dec
adc
decb
jnp
ret
xor
sub
mov
outsl
pop
xchg
arpl
mov
jle
push
or
lods
or
incb
jge
push
add
cmpsb
jo
pop
in
loope
dec
aas
cltd
xchg
arpl
aam
sbb
mov
push
mov
pop
inc
sbb
jns
insb
mov
jle
jmp
int
add
jae
lods
bound
mov
pop
sub
shrl
mov
sbb
mov
cmp
sbb
inc
mov
mov
xor
add
ret
jo
xor
xchg
and
cmc
mov
fldcw
dec
ljmp
rorb
mov
test
mov
repnz
nopl
outsb
sahf
stos
mov
iret
pmaxsw
les
test
mov
push
movsl
fwait
daa
and
push
jno
stos
jae
cmpsl
or
imul
sbb
cmovb
imul
jecxz
add
test
sbb
cmp
fists
mov
arpl
ret
add
dec
loop
aaa
sbb
mov
push
pop
push
mov
jns
or
cmp
push
xchg
sub
sub
xor
xor
test
cld
sub
xchg
xchg
inc
xchg
shl
aam
jg,pn
jno
cld
outsb
test
add
push
movsl
test
das
iret
bound
or
fnsave
inc
cwtl
dec
sub
sbb
into
iret
mov
fwait
mov
imulb
mov
xchg
lea
push
xorl
sbb
repz
fcomi
cmp
cmpsb
cmp
ret
adc
push
mov
stos
push
ret
in
mov
push
xchg
int3
out
mov
mov
and
enter
adc
fmull
mov
pusha
loope
mov
rorl
cli
mov
test
adc
lret
inc
vpshufd
out
and
xchg
cmp
scas
inc
pop
sub
repnz
pop
daa
lea
call
mov
inc
push
jmp
adc
pop
ljmp
xchg
movsl
and
sub
inc
sbb
and
jge
dec
out
or
fs
dec
andl
mov
lcall
loope
test
xchg
call
push
or
mov
cmp
fsts
mov
mov
pop
sub
stc
inc
mov
rdmsr
rcrl
dec
mov
pop
jns
push
clc
ret
fs
jl
scas
pop
and
inc
lret
inc
xchg
and
lods
movsb
adc
lock
aad
jl
cld
in
dec
nop
int3
cwtl
mov
xor
aas
xlat
aam
rclb
mov
sti
jmp
inc
jae
push
imul
mov
in
mov
xorb
mov
pop
and
jb
xchg
xor
repnz
mov
mov
jmp
lahf
dec
cmp
das
inc
add
mov
xor
aas
add
add
jmp
dec
pop
xchg
dec
sbb
iret
cmp
jg
add
or
loopne
xor
ja
lods
shrl
in
scas
adc
les
mov
adc
loopne
es
rorb
shrb
popa
sub
sub
pop
out
js
add
test
mov
xchg
dec
xchg
pop
or
adc
lds
in
add
inc
int
xchg
jnp
idiv
pop
pushf
or
mov
loop
gs
scas
out
lds
repnz
fisubrl
mov
inc
dec
fnsave
adc
or
cmp
push
add
cmp
mov
dec
mov
and
cmp
dec
leave
fs
inc
pusha
mov
xor
sbb
fcompl
pushf
add
bound
fwait
insl
shrl
fs
aas
dec
leave
jnp
sub
and
mov
add
jle
fidivrl
mov
jmp
int3
aas
push
mov
jne
ja
lds
xor
or
pusha
pop
lods
lcall
cmp
cmp
dec
imul
out
in
jle
leave
cmpsl
push
sbb
and
and
pminub
mov
es
in
sub
mov
test
movsl
insl
lock
pop
or
mov
mov
iret
xor
mov
aaa
xchg
dec
int
pop
das
int
jns,pn
pop
pop
push
jle
fadds
add
idiv
shrb
jbe
pop
xchg
loopne
inc
cmpsl
test
mov
jae
or
fmul
xor
addr16
xchg
push
or
hlt
bound
xlat
push
lret
adc
icebp
test
cmp
xor
fwait
mov
sbb
fildll
cmp
inc
cld
and
cs
xchg
xchg
xchg
cmp
je
mov
xor
aam
push
sub
insl
push
jbe
adc
ficoms
dec
in
fwait
adc
lret
inc
mov
testl
or
repnz
pop
push
inc
fnstenv
pop
push
out
mov
xor
xchg
pop
ja
adc
lcall
or
mov
insl
clc
fdivrs
jbe
push
inc
adc
es
inc
mov
imul
test
ljmp
mov
dec
cmovnp
sahf
lea
fnop
in
push
sar
inc
sub
loopne
icebp
sbb
push
inc
arpl
fnstenv
jne
in
mov
or
jne
inc
xor
xor
iret
fwait
mov
jnp
dec
sbb
xchg
inc
rcr
insl
ljmp
or
les
lods
or
jns
jecxz
push
outsl
cmp
mov
xchg
pop
mov
jne
fldcw
cmpsl
stos
out
cli
in
stos
and
rclb
pop
xor
loop
leave
int
mov
xor
and
mov
pop
das
aas
add
fcmovnb
loop
jb
cld
jg
mov
push
mov
cmp
dec
fcomip
cmpsb
popf
add
pop
pop
and
andl
pop
sbb
stos
dec
mov
test
cmc
jge
mov
jg
ret
push
divl
out
inc
xchg
aaa
outsb
mov
cs
fistpll
xor
addr16
das
call
lahf
imul
gs
ret
pushl
pusha
dec
div
mov
je
mov
and
jae
test
pop
fnstcw
mov
rclb
mov
cmp
popf
dec
mov
push
mov
stos
mov
test
adc
jbe
xorl
test
fnsave
mov
aam
mov
xchg
jge
cmp
jg
cmp
test
pop
scas
iret
daa
ret
fimuls
dec
mov
xlat
cli
ret
outsb
pop
lahf
mov
jbe,pn
stc
dec
addr16
xor
push
jp
push
add
and
in
inc
sbb
pop
pand
mov
mov
or
out
inc
lods
int
lea
rclb
es
fstp
dec
and
xor
jge
mov
or
je
test
mov
dec
out
and
rcll
inc
mov
sbb
jne
imulb
or
add
bound
or
add
xlat
xacquire
mov
ja
xchg
mov
cli
inc
sbb
mov
dec
adc
out
or
popa
mov
cmp
xchg
xlat
in
fs
xchg
pushf
lock
jle
cltd
stos
daa
scas
sbb
sahf
mov
xor
adc
ljmp
sahf
xor
in
stos
inc
mov
ret
adc
mov
sub
cmp
sub
fs
sbb
inc
jecxz
adc
daa
xor
imul
push
mov
push
ljmp
addr16
stos
or
fnstenv
in
sahf
cmp
dec
xor
cmp
dec
jecxz
call
adc
pop
mov
dec
jae
shlb
daa
loope
imul
icebp
mov
iret
cmp
dec
or
or
shrb
pop
nop
imul
in
into
mov
rolb
iret
nop
sar
or
mov
subb
pop
mov
les
popa
jg
js
loopne
xor
cmc
jb
mov
adc
pop
or
out
inc
out
mov
outsb
outsl
aam
mov
and
mov
insb
sbb
rclb
out
in
jno
mov
pop
xor
ja
shrb
and
sahf
jae
mov
jnp
cwtl
sub
sarb
fisubl
xchg
stos
or
sbb
sbbb
push
iret
jle
lar
clc
inc
inc
inc
xchg
dec
xadd
aad
pushf
into
lahf
mov
pop
or
and
js
pop
sbb
pusha
mov
ds
adc
jp
xor
insl
xor
stos
into
std
sub
pushf
jo
shlb
push
shll
mov
push
mov
xor
xor
mov
insl
push
jae
dec
sbb
cmp
mov
add
mov
cli
jg
fcmovbe
aas
push
jg
xchg
lods
cltd
mov
sub
xor
mov
and
mov
push
mov
or
xchg
xor
pop
dec
mov
divl
sub
jmp
in
fstpl
adc
rorl
cmp
mov
sti
adc
mov
shll
pop
bound
ret
test
or
jg
mov
aam
ret
int
xor
cmc
cwtl
mov
mov
push
enter
int3
in
jg
in
inc
outsl
mov
lds
pusha
mov
popf
sub
push
lods
divl
insl
arpl
aad
negl
xchg
cwtl
mov
xchg
sub
mov
sti
push
adc
fs
lea
dec
sub
mov
in
je
mov
je
xor
jg
inc
or
mov
dec
or
sahf
fs
xchg
adc
add
xor
xor
sbb
sub
pop
imul
mov
inc
stc
ss
mov
daa
daa
ja
ret
sub
rcr
mov
jge
pop
pushf
sub
xor
loop
addr16
iret
test
std
mov
dec
ds
scas
and
lds
or
xchg
jne
or
push
test
adc
add
add
mov
push
adc
push
pop
push
out
enter
in
cmp
add
add
call
jne,pt
ljmp
pop
and
push
ror
inc
lods
in
jp
mulb
and
fs
push
fiaddl
jle
push
pop
xchg
leave
test
loop
inc
xchg
lods
lods
or
or
jmp
pusha
loop
xchg
push
int3
popf
shl
insl
pop
imul
loop
aas
cmc
inc
das
lods
and
loop
sbb
mov
dec
orb
lods
jecxz
or
inc
les
out
ret
icebp
or
or
pop
pop
sub
cmc
inc
xchg
add
loope
imul
xor
add
daa
sub
xchg
adc
mov
mov
pop
sbb
cmpb
or
nop
test
popf
xchg
sbb
or
xchg
xchg
loope
fs
stos
mov
mov
movsb
sbb
sbb
cmp
out
push
lea
dec
or
shlb
rolb
inc
and
negb
pushf
pop
jo
sbb
cli
or
jno
xor
rcrb
push
and
and
ljmp
push
sbb
in
out
inc
mov
call
repnz
les
fstpl
mov
jne
jns,pt
push
rol
das
adc
sub
jle
mov
out
inc
nop
ljmp
mov
fs
lods
aam
mov
test
negb
cmp
mov
push
divl
pop
cli
or
mov
push
mov
test
add
inc
xchg
pop
mov
mov
stos
lahf
push
je
mov
imul
dec
imul
mov
xchg
sub
clc
sub
fwait
or
mov
ljmp
and
adc
cmpb
mov
add
call
outsb
mov
jae
inc
mov
imul
sbb
add
mull
loop
outsb
jecxz
out
in
xor
push
sbb
sub
add
std
fstl
insl
mov
pop
mov
incb
xchg
xor
rcrb
aas
in
lret
jbe
lret
shll
adc
pop
mov
andl
and
ret
or
daa
into
mov
push
add
mov
test
lea
dec
push
pop
cmpsl
mov
adc
cwtl
pop
aaa
std
adc
lcall
sbb
scas
sahf
ret
loopne
bound
xchg
mov
cmp
jg
inc
dec
xchg
cmp
jbe
mov
sbb
outsb
xchg
fbld
cmpsl
and
or
scas
rolb
push
shl
rcrb
xchg
or
fists
mov
lock
adc
insl
cmc
cs
inc
mov
sbb
lods
test
repnz
fs
sub
out
mov
fidivrs
call
and
pop
or
sub
dec
push
mov
cwtl
push
jl
aas
mov
and
sub
inc
ret
xchg
pop
or
andl
add
add
xor
adc
das
mov
cwtl
xchg
jecxz
or
adc
or
inc
sub
lahf
pop
xchg
cli
xor
pop
lods
int3
lahf
cmp
mov
pusha
pushf
decb
adc
pop
mov
lcall
sbb
sub
int3
jae
lods
xchg
jns
jne
sbb
mov
dec
cmp
in
inc
std
fisubrl
push
xor
insb
aaa
insb
xchg
scas
sbb
jle
in
and
mov
int3
cmp
pop
push
out
sti
xor
clc
sahf
pushl
xor
jle
mov
mov
mov
mov
or
shlb
sub
add
pop
repz
lret
call
test
fsubl
addr16
mov
out
push
pop
movsl
popa
bound
and
push
stos
add
in
mov
dec
add
shr
sbb
es
std
lahf
sbb
jge
pop
scas
aam
test
jo
jns
loope
stc
std
mov
fucom
sbb
or
out
cwtl
mov
push
and
nop
bound
cmp
cmp
mov
fimull
hlt
jne
test
push
cmp
xchg
stc
test
insl
das
stos
add
push
mov
popf
jge
or
xorb
loop
xchg
daa
mov
stos
leave
push
pop
cs
movsl
std
or
mov
pop
fcoms
das
addr16
shrb
pop
int3
fs
lfs
inc
push
xor
jb
ror
in
aad
fstpt
or
pop
repz
popf
enter
imul
xor
cmc
je
sub
jno
cmp
in
cmpsl
lea
pop
and
jbe
hlt
jns
sbb
mov
cltd
lock
push
imul
addr16
addr16
popa
sub
icebp
jno
adc
int3
sub
push
pop
cmc
xchg
dec
inc
iret
in
xchg
in
fs
cltd
or
repnz
mov
in
sar
inc
xor
push
int
sub
xor
test
outsl
or
jnp
fisttps
fsubr
xor
pop
sbbb
ljmp
fcompl
mov
push
or
lret
push
cmp
enter
jnp
push
clc
inc
push
lret
mov
push
imul
add
enter
aas
xchg
rclb
push
dec
add
mov
and
mov
cmp
dec
adc
js
mov
sub
and
push
fldenv
xchg
insb
add
cmp
outsb
xchg
in
cwtl
jnp
jmp
adc
lods
sbb
lods
test
jb
pop
sbb
ds
std
cmp
jne
sbb
scas
add
xor
test
mov
mov
or
sbb
mov
jb
out
test
xor
mov
mov
dec
lods
push
test
arpl
xchg
mov
outsb
dec
shll
fs
add
mov
jmp
fisttpll
inc
adc
repz
pop
shrb
fs
arpl
cmp
outsb
lret
xor
out
or
mov
cmc
push
push
clc
enter
into
push
push
shlw
xor
shl
enter
pop
pop
cmp
clc
pop
jp
cmp
xor
dec
mov
xor
rol
out
iret
enter
push
mov
xchg
lret
bound
flds
push
sti
mov
jbe
pop
cltd
fcompl
pop
mov
fiaddl
mov
pop
add
stos
xor
sub
ficomps
lds
loope
repz
and
xchg
xor
mov
jmp
xchg
dec
mov
clc
and
out
inc
jmp
push
lods
sar
sub
decl
pop
jl
lods
sbb
jg
call
mov
xchg
icebp
aad
daa
or
and
ror
xchg
dec
sbb
sbb
test
sahf
jecxz
fs
jno
xchg
test
imul
cmp
adc
cltd
test
aas
xchg
pusha
cli
fcomps
fsubs
stc
loop
sbb
outsb
dec
add
ja
sub
sti
add
lods
pop
lods
dec
test
push
inc
inc
mov
nop
test
lods
adc
fldl
lcall
lods
insl
imul
dec
ss
inc
rclb
arpl
dec
lret
and
cld
adc
mov
sbb
stos
mov
sub
dec
push
or
aam
in
lods
lea
out
lds
adc
mov
sbb
jns
js
adc
add
mov
into
add
ds
jmp
insb
push
adc
cmpsb
std
int
lea
pusha
stos
dec
xchg
in
ja
inc
stc
popa
push
aas
jnp
in
leave
pop
push
stos
mov
jno
xchg
bound
lret
mov
aas
ja
mov
cmp
push
cmpsl
jnp
js
push
jno
sub
popf
dec
xchg
xchg
xor
aam
loope
leave
idivl
adc
push
shll
outsl
xor
out
test
scas
jge
push
lcall
das
js
cwtl
pop
leave
pop
pop
fsts
xchg
xchg
xor
sub
xlat
outsb
dec
pop
push
mov
adc
jno
enter
dec
mov
pop
adc
inc
into
fcomi
push
fimull
cs
dec
push
cwtl
mov
sbb
data16
in
jl
cmp
xchg
sub
out
loope
lea
push
test
dec
xlat
icebp
mov
cmpsl
or
cmp
out
cli
jmp
mov
sti
bound
int3
push
xor
fidivs
cmp
xchg
mov
xchg
leave
out
gs
movsl
movsb
mov
jne
iret
fstpl
mov
fistl
push
cmp
mov
xchg
adc
sti
fs
scas
or
ret
push
pop
adc
inc
xor
push
dec
lods
xor
pop
ljmp
sbb
movsl
mov
lea
icebp
push
divb
sbbl
test
test
inc
dec
push
insl
adcb
mov
test
or
cmc
jle
in
cs
cwtl
shll
or
and
cs
in
mov
jecxz
imul
jb
xor
pop
mov
adc
scas
cmpl
push
dec
popl
xchg
sbb
pop
test
or
movsb
mov
jge
pop
sbb
jbe
push
mov
or
jle
cld
les
mov
xchg
vaddsubpd
outsb
mov
out
add
mov
and
xchg
cs
lcallw
dec
cmpsl
flds
xchg
scas
cwtl
push
adc
add
push
sbb
fsubrs
and
cmp
in
pop
imulb
dec
add
imul
mov
jns
sub
sub
adc
xor
addr16
mov
xor
sbb
pop
mov
mov
xchg
ret
in
dec
shll
lcall
xchg
mov
xor
cmpsl
fldl
adc
int3
push
xchg
or
xchg
adc
add
fcomps
dec
out
lds
loope
mov
sub
xlat
inc
and
faddp
add
mov
ss
sub
ret
inc
jge
sub
cltd
sbbl
jbe
addr16
or
fbstp
dec
aas
mov
iret
addb
outsb
mov
daa
add
mov
and
out
jno
sti
jl
cmc
push
or
clc
xor
std
enter
stos
rcll
std
out
lods
popf
xor
and
pop
pop
cld
adc
mov
insl
movsb
int3
push
fldcw
jno
sub
pop
pop
cli
or
xchg
aaa
stos
lods
shll
neg
outsl
push
test
int3
adc
inc
lods
ss
cld
xor
div
cmc
jge
and
scas
sbb
out
or
arpl
in
addr16
aaa
outsl
shll
rcll
xor
into
int3
imul
pop
std
add
popa
or
push
lret
mul
xchg
pop
xchg
cmp
in
and
xor
add
je
aas
out
cltd
mov
or
mov
push
aaa
sub
adcb
xchg
or
aas
test
push
pop
xchg
adcl
mov
jae
cld
dec
push
inc
push
jmp
mov
lcall
xchg
out
sub
fnstenvs
push
out
test
int3
js
sub
sub
imul
addr16
mov
adc
jb
push
lods
sbb
ja
cld
leave
mov
scas
cmc
jns
inc
repnz
push
imul
jp
in
popa
adc
jb
sbb
mov
inc
movsl
xabort
dec
mov
out
xor
movsb
mov
cmp
mov
leave
aas
loope
pop
mov
sub
push
insb
fildll
movsb
mov
js
dec
mov
sbb
adc
loopne
out
pop
aas
mov
insb
push
scas
das
push
inc
fldenv
jmp
sbb
pop
std
scas
xchg
pusha
push
or
add
iret
pop
mov
pop
dec
lcall
test
or
jne
decb
cmp
out
mov
arpl
loopne
or
int
loope
mov
mull
and
pop
xchg
mov
cs
lock
mov
mov
mov
jo
mov
pushf
inc
das
fstpl
ljmp
leave
inc
shll
xchg
fs
push
push
sbb
pusha
sbb
inc
ds
pop
cmp
mov
cmpsb
sub
dec
fwait
lret
cmp
xlat
into
jle
test
and
push
and
aaa
repnz
adc
ss
gs
cmp
inc
inc
int3
lea
repz
pusha
xor
shll
jg
push
clc
push
pushf
mov
or
xor
inc
cmp
hlt
dec
jbe
xchg
in
mov
mov
adc
bound
adc
rorb
mov
jmp
push
xchg
repnz
ss
mov
in
insb
inc
inc
imul
movsb
push
pop
adc
mov
js
imul
in
add
rol
jmp
mov
jne
addl
inc
loop
dec
repnz
es
mov
fidivrs
inc
mov
mov
cs
inc
shlb
push
pop
lahf
adc
pop
push
mov
xchg
lds
jmp
repz
mov
cwtl
inc
jb
sub
dec
cmp
or
mov
cmpsb
push
loopne
sbb
sti
test
xchg
or
movsb
push
out
sbb
lea
popf
xchg
add
ret
jne
adc
out
imul
cmp
clc
jle
lcall
fsubrs
add
lret
std
push
cli
dec
and
sub
adc
nop
xor
push
scas
sbb
jg
mov
or
dec
xor
bnd
movsl
aas
xchg
dec
cmp
cs
sbb
daa
ret
mov
adc
xor
or
push
daa
inc
bound
xchg
popf
xchg
je
div
in
pop
xchg
nop
out
mov
xor
jae
movsb
sub
or
xorb
cltd
mov
jne
dec
add
ja
dec
movsb
stos
jecxz
add
div
push
sub
dec
fcoms
shl
sahf
cmpsb
cmpl
das
iret
lds
push
jo
roll
mov
add
mov
ja
adc
xor
lret
lahf
andl
mov
pusha
out
and
and
add
push
mov
sbb
jae
pop
jnp
cmpsl
adc
cli
inc
mov
pop
clc
outsb
mov
inc
push
jo
cmp
call
lcall
mov
jg
push
ret
adc
mov
or
and
into
pop
mov
xlat
adc
xor
fistpl
and
xchg
aas
cli
jg
aaa
movsb
aad
lahf
sbb
in
adc
and
xchg
xchg
or
push
adc
jnp
inc
mov
iret
pop
jge
aas
sub
push
pop
jnp
mov
xchg
mov
subb
jecxz
jae
mov
gs
idiv
cmp
cmp
xor
mov
in
mov
daa
jecxz
push
jp
xor
mov
loop
and
jmp
fmull
aam
lods
adc
sti
sbb
ret
add
add
push
insb
and
aaa
push
push
xchg
adcl
aad
pop
jae
push
leave
jle
ret
les
arpl
shlb
ljmp
xchg
adc
out
clc
imul
ret
cmpsb
cmp
sub
vmread
push
aam
mov
cmp
out
nop
shrb
and
call
pop
aaa
push
scas
cmpl
negb
movsl
xchg
or
mov
adc
ds
sub
push
aas
addb
ret
dec
lahf
aam
mov
adc
inc
bound
xchg
sbb
sub
pushf
xchg
iret
hlt
movsb
add
push
addr16
in
arpl
cld
mov
fwait
xchg
loopne
enter
xchg
sub
xchg
add
jo
icebp
data16
fwait
loope
ret
jb
int
push
add
xchg
fildl
pop
jo
jl
scas
int3
fcmove
dec
sub
push
mov
andb
cltd
testb
jge
fists
dec
mov
movsl
sahf
jg
les
mov
daa
data16
lcall
shlb
sbb
mov
xchg
inc
cmp
pop
nop
dec
outsb
repz
fbstp
mov
dec
fnsave
cmpsb
int3
fisttps
xchg
or
and
idivl
fcmove
fcmovb
pop
and
les
in
stos
sub
mov
rcrb
imul
gs
stc
or
add
movsb
sub
movsb
cmp
mov
outsl
jecxz
popa
scas
sbb
pop
lret
sbb
pop
pop
outsl
mov
and
lea
imul
dec
jb
add
and
fucomi
int
ljmp
in
dec
pop
push
xchg
ss
mov
fistpl
mov
sbb
push
jp
mov
cmpsl
shl
pusha
mov
inc
test
dec
jb
test
mov
or
cmp
lods
or
push
mov
test
iret
fucomip
mov
mov
inc
test
in
aad
js
mov
sbb
mov
idiv
out
and
das
xchg
insl
jl
icebp
adc
movsl
jb
dec
mov
cli
sbb
inc
cmp
lret
xchg
and
pop
into
xchg
xchg
pop
sarl
mov
push
cmpb
call
mov
pop
es
push
or
jle
psubusb
jge
pop
dec
push
sbb
lcall
push
xor
and
imul
xorl
and
stos
cs
dec
mov
fs
gs
cmpsb
pop
inc
cmp
sub
inc
inc
test
aam
js
enter
sbb
jge
mov
jne
push
jecxz
das
ret
xchg
add
pop
scas
into
pop
testb
sbb
add
mov
shl
pop
mov
ret
push
or
lar
jmp
xlat
sbb
xchg
sub
dec
pop
fldcw
inc
cmp
pop
or
xchg
and
add
scas
mov
dec
pop
pop
mov
and
and
jae
add
sarl
xchg
sbb
jae
jno
pop
push
pop
sti
inc
or
sub
inc
and
sbb
and
xor
xor
cld
and
mov
mov
mov
adc
sub
adc
mov
scas
fnstsw
mov
and
jo
shll
push
lea
push
xchg
sbb
daa
mov
xor
ds
inc
mov
repz
sub
aas
das
lret
gs
jp
cltd
or
roll
adc
adc
mov
jge
stc
push
lea
sub
stos
insl
mov
cmp
jle
xchg
inc
add
loope
cmp
test
lret
add
fimuls
repz
test
into
movsb
or
out
xchg
jl
push
pop
jno
mov
adc
push
movsb
popf
mov
or
or
mov
jge
dec
pop
push
jg
iret
aam
das
push
stos
fisttpll
shlb
pop
aas
mov
sbb
movsl
sahf
and
mov
dec
jno
cmpsb
lret
pop
subl
and
adc
add
jge
lret
fisubs
repz
bnd
xchg
push
push
sbb
dec
xor
push
daa
das
insb
inc
mov
push
fbld
shll
cld
sub
mov
in
in
or
cmpsl
ja
lods
sub
out
fs
arpl
sbb
xchg
test
mov
jne
outsl
adc
fcomp
in
jnp
xor
cmp
incb
out
mov
inc
dec
dec
inc
mov
aas
cs
jb
out
outsb
push
aas
fdivp
sti
test
fbld
call
incl
inc
inc
mov
int
jb
into
das
jne
stos
adc
shlb
into
mov
cli
pop
dec
mov
iret
or
adcb
cmc
aad
call
int3
xor
mov
pop
orb
decl
das
jnp
adc
mov
imull
mov
or
and
lock
sbb
xorl
or
daa
mov
lods
mov
adc
xor
clc
dec
add
adc
repnz
dec
movsb
sbb
mov
jp
js
dec
int3
cmp
test
and
cmp
mov
pop
in
inc
xor
mov
outsb
test
xchg
js
cmpsl
push
push
aas
outsl
aas
pop
add
jae
in
and
push
add
test
push
add
and
sub
xchg
push
sbb
mov
daa
xchg
push
cmp
xchg
mov
dec
mov
pop
aad
sub
sbb
je
adcb
mov
iret
rolb
push
xorb
mov
ficoms
int3
xor
iret
sub
xor
mov
cmc
xor
pop
jbe
inc
aaa
pushf
push
push
pop
push
mov
movsl
enter
repz
lahf
scas
imul
push
xchg
test
fsts
imul
inc
lock
xchg
sbb
mov
out
roll
pop
pop
pop
cmp
popa
adc
sub
lock
dec
adc
add
loope
add
adc
mov
cmp
pop
xchg
testb
cmp
add
jge
out
jl
lds
subl
sbb
jne
jb
les
mov
jp
push
adc
imul
ficomps
imul
arpl
adc
cmp
out
rcrl
mov
sbb
adc
into
jo
lahf
ja
sarl
out
pop
in
dec
sub
sub
jmp
lods
xor
fadds
xchg
adc
mov
and
lock
jecxz
imul
lret
fidivrs
test
push
xor
mov
fistpll
nop
mov
cmc
mov
jbe
shll
cmp
push
mov
adc
lods
lods
inc
pop
add
dec
ja
notl
gs
clc
xor
sbb
mov
std
xchg
mov
mov
movsl
jge
or
fldt
sbbl
or
xor
add
jne
enter
mov
mov
lcall
xor
pop
pop
idivb
pop
push
push
sbb
cltd
fsubrs
cmp
or
and
xchg
cmp
pop
sbb
push
cmp
popf
iret
imul
push
push
and
out
mov
mov
nop
jg
jnp
mov
jo
scas
mov
and
inc
and
sar
shlb
jno
adc
scas
push
lcall
mov
shrb
sbb
and
mov
fdivrl
jg
dec
sbbl
out
icebp
or
jne
ja
adc
inc
cli
push
pusha
pop
dec
into
mov
pop
mov
jo
loop
jno
dec
andl
mov
and
pop
cmp
xlat
add
mov
push
dec
jl
lea
and
adc
cmpb
in
outsl
lret
out
jmp
mov
repz
push
popf
cld
fnsave
in
arpl
jno
popf
lea
aaa
mov
adc
lock
cmpsb
stc
pop
cmp
push
xchg
jg
cmp
jle
push
mov
add
in
pop
adc
insb
add
mov
mov
xchg
popf
lret
add
xchg
pop
and
jbe
adc
jecxz
mov
mov
lock
mov
test
push
insb
jmp
les
xor
sub
push
push
push
in
or
cwtl
insl
lds
push
sub
adc
adc
subb
fiadds
ljmp
cmp
xchg
xchg
dec
jecxz
hlt
fstl
dec
and
loopne
fisttpl
inc
lret
shll
add
pusha
mov
inc
fwait
mov
cwtl
mov
adc
push
pop
fimuls
cltd
ret
xchg
sbb
pop
jg
cld
jmp
cli
gs
mov
outsl
rorb
mov
cmp
insb
lds
imul
sahf
mov
enter
jnp
mov
dec
mov
push
imul
pop
mov
jo
pop
jo
gs
mov
push
fimull
je
adc
loope
icebp
or
sub
push
adc
cs
andl
cmp
out
xor
mov
cwtl
hlt
subb
inc
flds
jle
cltd
out
lahf
inc
lods
mov
jbe
push
cli
xchg
fucomp
sub
test
lea
jmp
jb
mov
inc
fs
jne
mov
lret
sub
xchg
dec
mov
scas
aam
jb
sbb
fcoml
pop
cmp
jo
jg
gs
lock
call
adc
xor
lfs
inc
ja
movsb
mov
and
or
lret
hlt
lods
testl
cmc
mov
adc
vpaddq
or
adc
int3
xchg
dec
aad
lea
test
rorl
dec
push
or
rcll
and
push
ljmp
or
sub
in
loop
push
sub
xor
jae
aad
movsb
mov
movsb
xchg
jmp
lds
orb
stos
mov
xor
jae
mov
xor
dec
pop
jne
int3
sbb
adc
