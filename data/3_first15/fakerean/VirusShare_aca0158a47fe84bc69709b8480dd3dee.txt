sbb
add
cwtl
mov
xor
pop
cld
negb
scas
sub
scas
adc
shlb
mov
mov
add
loope
xor
cwtl
rol
add
sub
outsb
pushf
sahf
cmc
cmp
push
dec
push
jmp
push
xor
inc
in
arpl
jg,pn
pop
frstor
jmp
and
sbb
fildl
adc
int3
ja
addr16
mov
mov
sub
psrlw
push
test
test
and
loope
mov
cwtl
js
dec
and
shl
cmp
fistpl
pop
or
int
test
adc
pop
add
push
call
mov
push
repz
inc
mov
adc
jle
iret
loop
mov
fcmovb
adc
rcrb
mov
out
xchg
imul
sahf
out
fisubrs
mov
inc
push
gs
xchg
ss
fwait
cmc
jne
push
dec
in
shrl
xchg
sub
pushf
and
icebp
cmp
push
pop
mov
mov
mov
mov
and
add
hlt
jb
add
fimuls
pop
jae
scas
inc
aam
aaa
stos
or
ljmp
popf
and
adc
lods
xchg
leave
push
xor
jp
into
or
jmp
cmp
and
lods
sub
testb
jno
push
mov
and
test
push
add
adc
pop
xchg
imul
cwtl
or
outsl
push
leave
add
inc
mov
data16
pop
pop
int
cmp
fcmovnb
dec
paddusw
outsl
push
push
mov
scas
mov
roll
mov
lds
dec
ret
xchg
movsb
dec
ss
sub
push
push
test
and
test
dec
xchg
mull
jno
pop
sbb
and
pusha
push
inc
ds
dec
pop
repnz
sarb
mov
ss
inc
in
mov
or
inc
ss
movsl
mov
mov
scas
aad
mov
xor
pop
cmp
clc
movsb
ret
cmpsb
js
inc
xchg
fistpl
cld
pop
push
idivl
les
add
iret
clc
mov
lahf
jns
xchg
cmp
rcl
or
std
popa
lahf
rclb
xchg
push
pop
cs
mov
hlt
insl
jp
mov
addr16
mov
imul
xchg
cmc
push
ficomps
call
mov
lods
jno
mov
push
xchg
imul
subb
popf
mov
push
pop
pop
fldl
inc
jns
inc
sbb
xchg
mulb
xchg
and
daa
decb
pop
dec
mov
push
add
addr16
lahf
call
jns
and
adc
fwait
adc
push
push
inc
mov
xchg
fucom
into
jl
sti
and
cmc
mov
push
imul
iret
in
fdivr
jbe
push
negb
xor
fs
and
loope
stc
repnz
mov
dec
in
mov
pop
xchg
test
sub
dec
cmp
ja
test
lahf
pop
push
iret
popa
out
sbbl
push
sti
push
cmpsb
mov
cmpsl
fisubrl
ljmp
mov
in
jbe
in
nopl
fnstsw
out
pop
mov
stos
mov
mov
ret
mov
sub
jge
push
or
fnsave
ss
stc
push
mov
adc
data16
xor
mov
jle
inc
test
mov
int
mov
lods
jo
push
xor
insb
mov
ljmp
mov
loope
outsb
outsb
and
adc
mov
iret
sbb
outsl
add
pop
inc
fisttps
xor
add
fcmovnu
test
loope
into
xchg
enter
aad
aam
je
pop
stc
repz
addr16
inc
jg
hlt
insl
loope
mov
mov
test
addr16
and
adc
and
testb
push
xchg
inc
idivb
ds
pop
es
ljmp
stos
add
adc
adc
sub
icebp
adc
pop
jne
shl
adc
fnstenv
sahf
repnz
iret
add
mov
mov
sar
mov
test
loop
push
sub
sbbl
add
pop
mov
and
les
xor
in
mov
scas
fldcw
xorl
push
jmp
adc
mov
mov
outsl
xor
pop
mov
adc
lahf
arpl
push
dec
adcl
repnz
loop
pop
lahf
inc
adc
ljmp
jb
popf
push
je
cs
inc
sbb
aaa
xchg
adc
das
aad
jne
scas
aas
jge
bound
mov
ds
jns
jp
mov
cmp
je
sub
cmc
cli
in
xchg
mov
pop
add
xor
xchg
push
fsubr
sub
xor
lret
push
xor
jg
mov
das
cmp
ficoml
pop
cltd
inc
inc
movsb
movsb
xchg
pop
push
pop
mov
xchg
je
jno
add
and
push
sub
xchg
sbb
push
dec
pop
movsl
outsl
jno
jnp
popa
sub
xor
rcrl
js
cmp
jnp
test
std
out
inc
or
xor
dec
xor
mov
stos
in
add
jno
cmp
and
add
popf
push
cltd
into
inc
test
sbb
jno
mov
jo,pt
add
in
jne
shrb
aaa
add
pop
arpl
push
sarb
mov
andl
loopne
bound
adc
push
dec
xor
mov
xchg
mov
xchg
scas
js
mov
adc
adc
mov
addr16
xor
int3
inc
in
jb
jle
insb
and
roll
lods
adc
xchg
mov
pop
jae
and
adc
repnz
sahf
lea
adc
leave
ds
aam
aas
rorl
jecxz
cmp
xchg
sub
push
fsubl
push
push
cmpsl
stos
in
inc
imul
bound
jns
das
pop
add
pushf
out
mov
movsl
push
leave
jg
push
sub
fs
pop
rcll
aas
sbb
xchg
push
mov
mov
push
xchg
pop
xchg
imul
sub
in
xor
out
push
ljmp
fsubrl
inc
stos
popa
xchg
push
add
les
subl
fiadds
jg
sub
jge
adc
testb
aad
dec
pop
shlb
jle
sub
lods
pop
lds
or
cmpsb
sbb
pop
aad
jge
roll
mov
xor
hlt
dec
dec
xor
in
inc
testb
push
aam
mov
or
enter
mov
fwait
loope,pt
mov
rolb
test
or
aam
xchg
lret
fnstcw
mov
push
mov
fcomps
jmp
dec
imul
push
orb
fiadds
mov
jp
xchg
mov
inc
mov
cmp
out
js
xor
test
inc
mov
xchg
mov
jg
and
shlb
push
sbb
sub
inc
data16
jo
in
push
and
sbb
ja
movb
inc
movsb
or
xor
fnstsw
jecxz
jnp
push
xchg
enter
push
fnstcw
sbb
rcrl
rolb
cmp
push
jmp
sbb
and
mov
pushf
rolb
xor
lods
pop
pop
test
push
add
dec
fisubl
dec
ds
lods
jp
sahf
or
inc
mov
mov
sub
xchg
inc
jnp
mov
lret
xor
cmp
push
bnd
xchg
jmp
lds
pop
push
push
xchg
jl
jp
cli
arpl
idivb
test
test
hlt
jb
push
daa
pop
mov
mov
jnp
push
or
jge
iret
and
cwtl
xchg
decb
insb
int3
dec
dec
into
push
or
cmp
and
xor
sahf
sbb
arpl
xor
xor
push
imul
jns
mov
jo
lds
jecxz
sub
mov
or
repnz
jne
scas
insb
lcall
mov
jns
mov
dec
aas
addr16
cmp
je
fstpl
xor
push
pop
imul
xchg
xchg
movsl
loope
divl
pop
xor
std
popa
cmpsl
mov
stc
xchg
lods
push
mov
out
stc
push
push
add
arpl
icebp
push
dec
arpl
sbb
jae
cmp
lret
gs
movsl
loop
mov
addr16
in
pandn
lcall
ud2
imull
lods
mov
arpl
fs
test
and
add
jg
push
mov
lahf
inc
sbb
movsl
and
aas
hlt
repz
add
scas
cmp
sahf
arpl
popa
adc
pop
mov
add
cmp
fisubrl
sub
call
lds
and
insb
lret
cmp
and
pop
cmp
xchg
pop
js
push
xchg
mov
subb
jo
sbb
das
mov
repz
fisubl
fwait
mov
sbb
add
imul
dec
addr16
xor
imull
or
lock
out
sbb
sbb
test
add
mov
cmp
adc
js
insl
push
leave
pop
fcoms
and
scas
insb
in
and
movsl
cmp
mov
xchg
inc
sub
cmp
daa
ret
loope
push
dec
rorb
pop
cmp
ffree
xlat
sub
cmp
mov
movsl
pop
jecxz
add
test
movsl
inc
into
popf
int3
lcall
decb
idivl
add
dec
pop
jns
inc
inc
pushf
shrb
in
imul
rclb
in
mov
dec
js
scas
ss
les
dec
jb
ret
lea
jns
mov
es
rcl
mov
sahf
mov
call
outsb
mov
cwtl
mov
in
jne
ss
jecxz
in
mov
add
push
fidivl
mov
cmp
dec
imul
ror
xor
cmovbe
mov
leave
xlat
jno
imul
mov
or
xchg
pop
push
into
xor
roll
das
mov
pop
outsl
xchg
lcall
fcomps
or
xchg
xor
outsb
mov
mov
mov
shufps
cmpsb
fmul
adc
aam
push
pop
aad
jno
pop
push
xlat
nop
mov
jbe
inc
leave
xchg
inc
jmp
xor
xchg
lahf
sub
jl
test
divps
add
mov
scas
call
cmpsl
rcl
add
rcrl
in
ds
ljmp
fstpt
insl
xchg
lock
xor
std
in
cmp
or
addr16
push
jge
ljmp
bound
hlt
and
jle
sahf
inc
xchg
stos
scas
loope
loope
mov
decb
or
jmp
jp
outsl
mov
cmc
nop
pop
dec
loop
imul
inc
sbb
cmpsb
mov
xor
js
in
rcrl
mov
cmpb
xor
les
and
xchg
arpl
adc
shlb
push
inc
scas
xchg
push
push
fwait
loopne
jle
jge
gs
and
nop
test
pop
cmpsb
inc
inc
dec
xchg
push
test
mov
test
adc
xchg
or
inc
push
mov
gs
out
dec
fdivs
subl
jns
pop
test
or
jp
cmc
pop
xchg
add
int
jg
jp
push
sbb
sbb
sahf
mov
fildl
inc
repnz
mov
cmpsb
sub
aas
gs
cwtl
xchg
leave
incl
popa
mov
das
psllw
int
adc
push
sbb
cmpsl
sub
hlt
inc
sub
and
hlt
mov
js
sti
mov
adc
or
nop
jecxz
pop
mov
mov
mov
mov
mov
cmp
xchg
cli
push
mov
loope
stc
data16
add
cmp
out
pop
je
lret
jp
mov
inc
push
mov
mov
jp
inc
adc
std
mov
dec
ror
ljmp
jmp
mov
in
adc
push
xor
mov
xor
sub
xor
dec
mov
ss
adc
dec
fs
xchg
les
push
int
aam
loope
repz
xchg
mov
fcompl
fcmovne
sbb
leave
icebp
pushf
pop
repnz
cld
push
inc
bound
xor
loop
jecxz
xchg
sub
and
bound
shl
test
and
loop
shl
stos
dec
sub
fisubl
ljmp
pusha
insl
ljmp
jbe
sbbb
mov
jle
aaa
je
arpl
movsl
mov
push
mov
rcl
or
pop
mov
dec
test
push
cmp
movsl
addr16
ja
sub
js
jp
jge
into
stc
imul
ja
outsl
mov
test
int3
sarb
jo
mov
add
sub
mov
aad
sub
and
dec
push
into
add
sarb
mov
stos
mov
adc
mov
and
cmpsl
add
pop
sahf
push
add
test
mov
xchg
test
jo
pop
or
mov
sub
mov
mov
push
mov
inc
or
and
clc
xor
fwait
hlt
sahf
insl
add
fidivl
adcb
mov
and
adc
add
mov
sub
setne
shrb
xor
mov
aas
into
inc
jo
adc
inc
mov
jne
pushf
push
mov
mov
gs
add
jb
stos
mov
filds
xchg
add
jb
jmp
pop
dec
xchg
jne
call
cltd
les
mov
pop
test
or
ss
nop
cmp
mov
test
ret
icebp
out
arpl
cmp
sarb
pop
sti
lods
cmp
cmpsb
sahf
ss
pop
jbe
mov
jecxz
push
in
out
mov
jae
ja
je
rclb
and
inc
cs
add
in
out
out
inc
lock
xor
scas
sbb
xchg
pop
xor
fstpl
cmovbe
jns
sub
out
rclb
mov
mov
into
daa
jno
and
in
sbb
mov
xor
push
outsl
mov
mov
pushf
jns
out
jo
test
xor
int
call
jnp
fsts
add
sub
lea
sbbl
or
adc
lds
mov
sahf
movsb
ficompl
xchg
xchg
jno
mov
cmpsb
dec
aam
movsb
fscale
dec
adc
aas
popf
addr16
int
dec
push
add
ss
xor
push
lods
mov
and
sbb
out
push
push
out
popf
dec
out
fsubrs
inc
xor
inc
adc
imul
xor
fnsave
cmpsb
push
inc
movl
xchg
mov
cmp
mov
push
push
sub
aaa
outsb
pusha
push
cmpsl
aam
sbb
jbe
test
xor
push
inc
fbstp
sbb
mov
push
xor
xchg
jno
imul
int
pusha
lret
rcl
sahf
mov
das
or
leave
icebp
mov
inc
jl
out
cltd
xchg
cmpsb
sbb
addr16
sbb
cmpsl
loop
gs
xchg
xchg
inc
xchg
jb
mov
pop
inc
mov
sub
insb
dec
mov
pop
xchg
nop
sub
andl
scas
xor
push
sub
into
out
mov
mov
xchg
bound
and
cld
fdivp
dec
mov
enter
rcl
and
out
xor
insl
add
sub
or
push
aam
sti
cmp
test
mov
shlb
rcrb
jmp
les
fidivs
lods
fldt
and
xor
rolb
loope
xor
movl
jb
int
out
pusha
mov
cwtl
cld
jp
sbb
and
fmull
xchg
aaa
data16
jb
push
fbld
lods
dec
pop
ja
jp
rcll
stos
lret
dec
mov
ficoms
mov
mov
idivb
movsl
fistl
sbb
cmpsb
icebp
adc
adc
or
and
jecxz
shl
mov
inc
dec
xlat
lds
push
cmp
cmpsb
ja
aam
das
ja
fwait
inc
sub
and
pushfw
add
stos
pop
mov
repnz
xchg
rcl
std
pop
lahf
stos
add
sbb
lods
mov
push
push
sbb
cli
insl
inc
popa
cs
fstpl
movsl
cmp
into
pop
sub
repnz
ljmp
fistpl
shll
mov
enter
mov
sub
add
inc
or
xchg
ficoms
push
into
aaa
mov
xchg
out
dec
mov
sub
lret
mov
in
cmp
and
inc
testl
cmp
push
daa
das
mov
or
fadds
cmpsb
xor
and
fildll
jge
imul
xchg
dec
dec
mov
es
sub
stos
sbb
xchg
pop
mov
movsb
jnp
int
cmp
lds
jns
cmp
add
inc
xchg
xchg
jbe
fwait
dec
jb
add
xchg
cmpl
js
xor
fwait
mov
movsl
lcall
cmp
mov
in
test
fsubl
inc
cmp
mov
shlb
sbb
imull
cld
adc
in
xor
pop
ds
sti
inc
cmpsb
mov
jecxz
mov
cltd
xor
lret
lods
arpl
lock
test
push
jae
pushf
dec
jp
mov
incb
imul
push
orb
loope
sbb
packsswb
cld
jp
cld
dec
xor
pop
push
cmp
ljmp
in
jmp
or
push
pop
mov
push
cwtl
std
arpl
je
pusha
decb
mov
les
ja
inc
outsb
enter
mov
fmuls
repz
mov
jo
xchg
adc
push
arpl
mov
out
loopne
fs
loope
push
shlb
mov
jb
sbb
xchg
push
inc
and
adc
jp
mov
sbbl
add
dec
cmpl
out
mov
movsl
mov
popa
mov
movsl
or
sbb
mov
push
test
push
fsts
inc
jmp
das
inc
or
aaa
add
daa
mov
test
loopne
mov
xchg
stos
ret
out
in
and
lret
imul
dec
mov
inc
outsl
int3
loop
jbe
ret
je
fisubl
jge
filds
adc
xor
xor
aaa
or
nop
dec
or
ljmp
add
xchg
shll
movsl
loope
aad
dec
cltd
fsubrs
es
lods
jno
jg
sbb
fcmovb
dec
add
setbe
sarb
or
mov
sbb
ret
or
dec
call
pushf
aam
sbb
and
mov
lahf
leave
push
mov
ret
ljmp
pop
call
dec
call
add
lcall
enter
cmp
in
outsl
pop
sbb
mov
lret
stc
pusha
out
mov
leave
fisubrs
es
lock
in
xchg
icebp
jle
push
pop
int
popa
int
pop
mov
aas
fisttpl
fisubrl
mov
xchg
mov
or
push
ja
arpl
aaa
mov
inc
dec
fbld
and
jae
std
mov
iret
add
pusha
sub
jecxz
enter
nop
adc
shll
mov
mov
lret
sub
repnz
ja
add
aad
inc
fcomi
jecxz
mov
cmp
int3
cmp
out
test
scas
stos
mov
dec
dec
inc
xor
sub
pop
jb
pusha
aaa
or
mov
inc
movsb
das
pop
or
stos
add
sahf
jne
push
jl
in
or
mov
mov
lahf
aam
jb
hlt
lods
and
data16
into
repz
out
fwait
ret
cld
das
push
sahf
cmp
testl
testb
cld
pop
mov
cs
rcr
jmp
out
cmpsl
sub
add
xchg
dec
push
sbb
sbb
sbb
repnz
adc
push
mov
js
or
push
cli
jns
stos
enter
lahf
xor
sub
mov
sbb
dec
icebp
fnstsw
sti
scas
adc
xchg
addb
sub
test
incl
or
sub
imul
icebp
push
pop
ret
sbb
scas
jge
jp
mov
mov
cmp
sbb
aas
repz
aad
jbe
inc
movsl
lock
movsl
xor
movzwl
outsb
stos
es
pop
sahf
shl
and
fwait
push
or
jl
dec
push
cmpsb
out
lock
outsb
faddl
dec
in
dec
ljmp
cmp
lret
jmp
jp
mov
imul
xor
jnp
sbb
adc
pop
xchg
es
loop
push
ds
lods
push
stos
jle
data16
fildll
inc
adc
sbb
mov
dec
mov
stos
push
add
adc
notb
push
call
fcmovnbe
outsb
adc
out
sbb
les
movsb
adc
dec
mov
push
sub
mov
xchg
sarl
test
push
and
push
mov
js
sbb
fistpll
xchg
ficoms
or
movsl
jno
xchg
enter
ja
mov
stc
lret
aam
cmpsb
cs
rclb
int3
inc
jecxz
loope
mov
test
loop
jge
shrb
mov
in
sub
js
mov
adc
fdivrs
cmp
and
sub
out
mov
dec
xor
lds
mov
fldenv
int
xchg
mov
imul
add
xchg
add
mov
adc
int
xchg
sub
into
aaa
cwtl
repz
push
sbb
dec
pushf
mov
jns
inc
lret
inc
inc
insl
repz
test
les
xor
ja
adc
pop
ds
jae
mov
fisttps
mov
test
xchg
daa
popa
shrl
sub
iret
aas
pop
push
inc
test
mov
mov
lret
mov
mov
leave
aaa
cmp
inc
fidivrl
mov
sbb
sub
add
stos
daa
jge
jnp
les
or
aam
pushf
repnz
inc
xor
sbb
push
and
and
mov
pop
enter
fwait
orb
sbb
lds
aad
dec
lds
adc
das
sub
jb
outsb
adc
add
imul
and
xor
adc
es
sbbl
and
sti
adc
adc
fisttps
jno
aam
daa
adc
dec
popa
inc
mov
inc
fwait
sub
leave
push
mov
imul
out
int3
lods
call
jmp
lahf
xchg
arpl
movsl
and
cmpsb
dec
mul
in
xor
dec
push
daa
xchg
stos
hlt
adc
rcrl
addr16
fcmovne
stos
fldt
jae
dec
and
adc
mov
stos
mov
ljmp
pop
loopne
mov
jne
push
idivl
inc
push
xor
pop
fildl
aaa
fisubrs
cmp
into
fucomip
xor
add
clc
sar
outsb
aam
dec
pop
mov
int3
inc
dec
lcall
outsb
mov
cmpsb
xor
jle
imul
enter
lods
jns
ljmp
divl
in
clc
mov
mov
sbb
jp
dec
pop
sbb
les
rcrb
sarl
addr16
push
cmpsb
xchg
dec
negl
mov
adc
add
mov
cmp
xor
js
jg
cltd
adc
pushw
jo
aam
cmp
pop
push
in
scas
jbe
into
hlt
lds
pop
scas
push
inc
sbb
cwtl
sub
cmp
insb
xlat
inc
nop
xchg
or
inc
push
jo
mov
outsb
xor
mov
and
xor
dec
push
sbb
lea
popa
cmp
mov
imul
sti
outsl
jmp
or
jl
jp
icebp
fbld
insb
jne
inc
test
cmp
pop
xchg
and
out
out
push
aam
cmc
loop
int
and
stc
rolw
imul
in
insl
or
test
mov
push
push
ret
testb
cmp
pop
stc
xchg
sahf
loopne
popa
insl
jecxz
pushf
mov
dec
inc
or
inc
pop
push
jbe
or
and
and
sti
and
je
leave
mov
push
and
lea
and
mov
push
bound
jbe
gs
in
inc
push
scas
mov
push
aaa
arpl
out
cmp
daa
inc
push
or
cmpsb
popf
loop
mulb
cltd
and
xchg
popa
sbb
sbb
repz
mov
fcmovb
dec
imul
lods
mov
lea
push
xchg
pop
cld
jo
and
pop
loop
add
or
js
xor
stc
cmc
jmp
or
dec
test
add
inc
inc
outsb
and
es
or
xor
test
and
or
mov
cmpsl
loopne
pop
daa
add
stos
shrb
jge
lock
clc
push
xchg
movsl
movsb
cmp
and
test
dec
cmp
jo
pop
sbb
fsts
sbb
dec
sbbb
add
mov
lret
xchg
loope
das
ss
sbb
inc
imul
out
mov
xchg
dec
repz
lods
add
std
jg
scas
sub
cmp
inc
xlat
sbb
leave
cmpsb
sti
cmp
popa
imul
shlb
jb
and
scas
push
xor
dec
loopne
jp
scas
jp
pop
xor
mov
movsl
push
ror
popa
insl
shlb
push
gs
jmp
imull
rcr
pusha
shlb
add
or
or
or
or
xchg
sbb
mov
cmp
jnp
pop
add
pop
sbb
repnz
cmpxchg8b
into
outsl
xor
mov
jno
stos
jb
ret
pop
sbbb
repnz
pop
mov
xchg
xchg
ja
xchg
mov
arpl
clc
push
lret
test
jo
jnp
in
and
incb
push
icebp
imul
lret
test
std
push
orb
stc
addr16
sbb
xor
push
mov
leave
dec
pop
sbb
ret
add
jae
into
lods
hlt
cmc
push
jl
pop
adc
mov
jno
repz
hlt
xor
sbb
and
sti
inc
test
adc
sub
es
pop
cmp
popf
or
mov
or
mov
push
pop
stos
int
push
out
leave
and
add
jl
jge
and
push
out
leave
add
jecxz
xor
add
and
push
or
sub
cwtl
out
mov
mov
inc
xor
pop
lea
mov
add
addb
mov
xchg
cmp
mov
nop
je
pusha
dec
into
push
dec
cmp
inc
xor
fwait
cltd
add
rcll
pop
xchg
sbb
out
adc
adc
enter
ljmp
mull
popf
and
rol
pushf
add
hlt
xchg
imul
push
ret
dec
xor
mov
mov
mov
jnp
add
xor
sub
mov
ficomps
test
xor
ret
fiadds
das
popa
mov
mov
and
adc
cli
inc
cmc
or
movsl
inc
cs
mov
pop
outsb
ja
push
pushf
out
mov
sbb
fistpll
inc
in
jmp
xor
add
dec
insb
xchg
data16
addr16
shlb
test
mov
xlat
or
and
jnp
xchg
stos
mov
inc
dec
dec
popa
mov
fwait
popf
js
cmp
fs
xchg
movb
in
int3
mov
sbb
iret
cli
inc
out
push
pop
sbb
in
sub
xchg
mov
push
call
pop
test
loopne
jno
in
push
inc
add
mov
or
pop
ret
imul
stc
dec
xchg
xor
andb
icebp
push
xor
outsl
out
movsl
in
outsb
push
cmpsb
dec
aad
xor
xchg
shlb
sbb
outsl
jae
imul
and
addb
fsubrl
add
fmull
sbb
fstl
pushf
cli
jb
icebp
adc
loop
fsubs
cmp
push
push
in
fcmovbe
test
xchg
mov
movsb
xor
inc
scas
add
mov
inc
xor
or
addr16
xchg
out
sub
sub
jne
add
or
imulb
gs
mov
fs
fmuls
xchg
xchg
push
bound
jo
mov
rorl
movsb
push
ss
xorl
dec
cld
mov
push
daa
add
jbe
push
mov
data16
push
imul
std
cmp
sti
clc
fwait
pop
lea
cmpsl
test
lret
xor
sbb
popa
cmp
loopne
notb
jbe
cltd
icebp
sarb
nop
jo
pop
stos
jp
pop
mov
testl
dec
mov
and
das
jg
mov
mov
es
pop
cmp
xchg
sbb
or
inc
jmp
push
xchg
repz
stos
xor
mov
mov
push
xor
ss
fcoms
loop
adc
pop
mov
ljmp
sub
movsb
cmp
out
mov
ss
aam
and
imul
imul
in
lcall
in
inc
out
ljmp
ss
push
and
inc
mov
inc
cs
mov
clc
lahf
xchg
test
mov
push
shll
add
xor
adc
sbb
pop
mov
imul
movsb
inc
mov
push
xchg
mov
lret
shll
movsb
push
js
push
test
jle
std
sub
xchg
lods
xor
stos
std
xor
jbe
nop
fwait
ds
or
add
pop
xor
push
lcall
call
add
xor
arpl
sbb
mov
or
stc
jge
in
in
push
lds
fmull
inc
add
stos
lcall
in
add
ret
mov
es
or
push
add
mov
and
out
flds
jmp
je
push
sbbl
sbb
in
in
and
mov
sub
adc
pop
call
cwtl
adc
imul
push
fs
loopne
inc
out
mov
test
movsb
bound
rorl
mov
aas
jnp
mov
add
pop
in
cmp
sbb
push
hlt
xor
out
pushf
push
cmp
aad
popa
cmp
xor
push
jmp
imul
sbb
xchg
aad
add
jno
ljmp
and
fsts
lods
dec
jle
test
add
mov
out
xlat
sub
pop
inc
lock
xchg
dec
imul
lcall
pop
push
adc
fnsave
pop
scas
pop
cltd
cmc
sti
int3
inc
push
insb
ss
ret
jle
icebp
add
sub
push
insl
insb
dec
sub
test
stos
test
cmp
jne
push
push
mov
or
sub
jno
clc
and
mov
inc
negl
and
jbe
gs
fmul
xor
cwtl
mov
sub
and
imul
test
push
mov
mov
inc
pop
fistpll
pop
add
in
jmp
sbb
inc
sti
cmc
cmpsb
les
inc
add
divb
sub
push
add
sbb
and
jne
dec
cmp
mov
xor
inc
push
ret
mov
sub
mov
sub
push
fistl
outsb
ja
movsl
jo
mov
in
btc
push
xchg
mov
and
xchg
rcll
test
jg
dec
mov
inc
mov
sbb
jbe
lods
data16
jo
add
pop
inc
sub
ds
inc
or
push
add
mov
and
cli
in
push
cltd
or
mov
jmp
mov
inc
jbe
inc
idivb
jns
pop
sbb
pop
add
insl
scas
fst
and
jb
xchg
inc
fs
mov
push
mov
pop
and
cmp
lahf
iret
or
xchg
xor
cs
mov
mov
ret
imul
jae
sub
add
stc
sbb
stc
adc
cmp
out
jg
lcall
cmpsb
or
iret
in
pop
pop
clc
mov
aam
outsl
mov
xchg
call
subl
fsubr
inc
js
or
jg
adc
mov
scas
xorb
add
and
hlt
cmp
stos
jecxz
dec
into
popa
stos
xchg
inc
imul
xchg
pop
imul
dec
popa
push
ds
add
mov
mov
add
pusha
lods
sbb
out
xchg
aad
and
out
data16
mov
cltd
mov
stos
or
lods
xchg
sub
jne
pop
pushf
pop
rorl
or
xchg
loop
xor
xchg
inc
inc
xchg
clc
xchg
insl
adc
lea
sub
shll
dec
jne
addr16
cmp
int3
xor
push
orb
cmpsb
idivl
xchg
and
es
outsl
mov
sub
leave
jmp
repz
ret
sbb
push
pusha
inc
out
cmp
push
pop
and
inc
imul
ss
jae
int3
jp
mov
and
mov
lcall
addb
outsb
mov
jae
out
mov
xor
rcl
push
sub
pop
int3
ja
inc
pop
jnp
inc
sub
mov
fsubrs
push
shlb
dec
or
cmp
push
in
idivl
xor
sbb
orb
out
stos
mov
pushf
fwait
stos
into
sub
mov
adc
rclb
fcomps
in
sbb
cmc
jbe
adc
xor
or
jno
in
mov
aad
jnp
pop
push
ja
mov
mov
add
rcll
pop
scas
shlb
in
enter
dec
rcrl
jmp
in
cmc
pop
mulb
xor
inc
out
cli
inc
pushf
cmpsb
rorb
clc
mov
in
data16
pop
inc
stos
mov
push
filds
frstor
cmp
jge,pn
aam
in
jo
sti
incl
inc
jmp
cs
scas
xchg
fcom
xor
inc
push
stos
jmp
aaa
jns
adc
daa
ror
lods
or
and
adc
pop
mov
or
push
pop
das
ret
imul
push
cmc
sbb
sti
shlb
push
shrb
or
sub
mov
jbe
mov
cmc
fildl
popf
mov
and
in
jne
pop
icebp
pop
xchg
fisubl
loope
int3
cwtl
fwait
lods
shlb
dec
mov
fsubrl
cmp
sub
es
insb
and
or
data16
pop
or
aam
mov
movsl
adc
mov
fsubrs
push
inc
cmp
or
or
shll
jae
scas
sbb
rcl
imull
repnz
imulb
mov
adc
pusha
push
loop
jbe
push
jle
std
mov
inc
xor
adc
enter
and
cwtl
and
sti
stc
jbe
out
jg
pop
sub
fiadds
and
cld
pushf
push
push
cmp
adc
and
xor
fs
lcall
sbb
inc
rol
cmp
test
repnz
pop
adc
pop
cmp
mov
cmpsb
jnp
add
mov
icebp
lahf
xor
incb
jno
xchg
fsubp
cmp
int3
inc
mov
cmc
pop
sbb
imul
les
push
cmp
mov
and
mov
xchg
in
imulb
cmpsl
pop
xchg
mov
dec
popf
and
out
out
cld
sub
imul
xor
daa
pop
add
cld
adc
sub
cltd
jno
mov
into
push
push
dec
ja
add
cmp
jno
mov
add
mov
dec
adc
repnz
push
lock
push
inc
inc
loopne
adc
adc
fiadds
pop
icebp
mov
lahf
psrlw
shlb
pop
lds
rorl
jmp
adc
ljmp
movsb
loopne
jge
lock
aas
xor
dec
mov
aam
jns
sub
mov
in
jne
or
enter
xor
cmp
scas
push
insl
sub
out
cld
adc
sbb
and
mov
je
pop
lcall
lcall
pop
pop
fs
fwait
aas
aam
pusha
xor
dec
pop
adcb
sbb
dec
std
mov
sbb
xor
cmp
scas
adc
shlb
jmp
dec
dec
repz
jecxz
sbb
inc
jo
inc
js
mov
fdivrs
cli
out
das
lahf
xchg
jns
mov
je
cmpsl
xlat
xor
xchg
test
xchg
dec
clc
xorl
ja
mov
frstor
pop
fiadds
or
jmp
in
xor
mov
daa
or
lret
sahf
pop
iret
subb
cmp
movsl
test
ret
imul
inc
xchg
fucomip
xor
sub
hlt
push
mov
xor
das
xor
add
jp
gs
iret
jecxz
fstpt
pop
test
int
test
cmp
jp
mov
push
ret
sub
inc
push
push
xor
push
sub
sbb
lahf
dec
ds
sarb
cmpl
cs
test
nop
out
dec
addr16
and
fsubs
ffreep
lds
clc
hlt
push
mov
pop
inc
fs
mov
push
or
movsb
out
ljmp
fnclex
jnp
cld
inc
sub
xchg
jae
ret
jmp
xchg
pop
adc
lods
inc
into
or
mov
stos
inc
das
xchg
lahf
lahf
sbb
lods
or
mov
dec
push
ret
sbb
or
or
enter
push
jge
inc
adc
fists
or
adc
imul
aaa
push
cmc
jmp
cmp
incb
cwtl
pop
sub
aaa
rolb
std
sub
adc
aas
and
int
pushl
mov
or
leave
cmp
notb
cld
les
jg
add
lock
push
cmp
jle
data16
adc
xchg
inc
pop
pop
aam
jecxz
jae
adc
jbe
aam
push
xor
stc
shlb
pop
es
mov
in
xlat
dec
out
mov
call
cmp
stos
notrack
mov
pusha
imul
js
mov
or
int
fwait
mov
push
and
arpl
sti
fdivrl
js
xor
push
push
mov
add
push
push
lahf
or
push
inc
shlb
test
xor
add
inc
es
push
cmp
aam
outsb
mov
fnsave
pop
push
sahf
mov
sbb
into
nop
cwtl
ja
push
mov
mov
or
adc
pop
jbe
jnp,pt
shrb
mov
xor
dec
rclb
cltd
sbb
pop
mov
ret
and
and
pop
lods
faddp
in
adc
mov
adc
ljmp
cmp
aad
cmpb
jmp
bound
jnp
fwait
push
mov
cltd
ljmp
cmp
or
outsl
pop
push
test
jns
adc
in
cmpsb
pop
out
cltd
xchg
pop
negl
mov
jo
sub
pushf
in
addb
hlt
inc
pop
pop
add
jecxz
fildl
jl
mov
jp
cwtl
mov
scas
enter
mov
jmp
sub
cmp
test
fcmovb
aas
pop
mov
cmp
add
sub
fists
pusha
bound
stos
jl
jns
sub
fucomp
les
inc
fisubrl
add
mov
jno
stos
and
xchg
dec
test
jnp
fst
cmpl
xchg
xor
outsb
rolb
mov
dec
cmp
xchg
jge
mov
jl
mov
stc
mov
xchg
add
xchg
cmp
lea
mov
lcall
xor
repnz
outsl
jl
push
cmpb
les
int3
stos
aad
inc
lods
icebp
pop
inc
fs
mov
test
loope
lea
mov
add
test
xor
dec
out
lock
mov
xchg
int
rorl
add
inc
pop
cmpsb
push
cwtl
mov
lds
lods
xor
nop
aas
adc
mov
inc
sbb
divb
xor
loope
cmpsl
mov
mov
adc
and
adc
popf
cwtl
push
lcall
pop
pushf
scas
ret
sbb
xchg
mov
xor
jo
imul
sbb
push
cli
xchg
cmp
in
les
aam
addr16
pop
adc
pop
xor
mov
pop
call
sub
into
pusha
inc
outsl
fildl
mov
in
jne
in
bound
ret
add
ss
cld
imul
sub
rcll
inc
loope
dec
inc
fwait
pop
xchg
dec
scas
or
inc
push
shrb
movsl
cs
push
sahf
xchg
loopne
xor
mov
in
push
xchg
loope
sbb
jmp
sbb
sub
mov
xchg
mov
testb
mov
mov
cwtl
dec
mov
insl
popl
mov
les
dec
in
adc
test
sbb
cmp
outsl
movsb
xor
outsl
pop
jle
in
popa
leave
mov
shlb
js
cli
xchg
fistpll
ja
adc
dec
pop
mov
push
mov
push
push
mov
and
push
sub
loop
push
out
popf
jg
addr16
loopne
push
pop
addr16
ljmp
enter
cltd
pop
stos
sbb
mov
insl
call
leave
movsb
inc
cmc
addl
dec
in
mov
and
xlat
mov
mov
loope
pop
sub
pop
adc
imul
aaa
sbb
adc
cwtl
sub
cld
ficomps
mov
pop
call
repz
into
mov
jmp
jmp
mov
cmp
incb
pop
test
rorb
es
das
das
adc
stc
cltd
fucomp
aas
sub
cmpsl
xchg
mov
out
enter
ja
dec
out
cmp
mov
int
sub
sbb
fstpt
fbld
inc
ds
cli
pop
dec
repz
jae
push
shlb
movsb
es
icebp
aad
movb
and
gs
dec
sub
insl
mov
add
addl
dec
out
pop
daa
lret
mov
cmp
sahf
inc
mov
push
mov
mov
sbb
repnz
mov
lods
jecxz
nop
mov
pop
or
mov
aam
xor
rol
jb
xor
fnstcw
arpl
sub
call
mov
mov
mov
pushf
jp
sahf
jae
int3
mov
repz
sbb
mov
cld
addr16
int3
mov
jp
pop
cmp
fstl
fisttpl
pop
nop
pop
push
jecxz
jbe
xor
add
inc
sub
inc
add
jecxz
loope
fisubrl
ds
xchg
and
dec
push
cmp
adc
pusha
inc
das
mov
sarb
jno
aas
movsb
jo
add
popf
rcrb
jno
sarl
inc
cmp
imul
cmp
rcl
fistl
sbb
jnp
or
jo
sbbb
stos
adc
out
add
loope
sbb
dec
push
adc
stos
scas
lea
pop
dec
daa
add
orl
ret
jne
xchg
cmp
pop
cltd
inc
mov
arpl
dec
dec
mov
mov
jb
test
mov
jp
jns
mov
jmp
push
add
push
jmp
imul
das
repz
jae
inc
rorl
fwait
xchg
mov
scas
cmp
sahf
xchg
mov
and
jo
add
jmp
cs
lods
dec
add
cmp
nop
or
repnz
int3
dec
stc
dec
push
add
inc
and
adc
in
pop
and
mov
divl
sbb
sub
push
add
add
jg
mov
fistpl
pushl
bound
push
jg
push
sti
add
jg
inc
lock
dec
dec
sahf
push
sahf
lock
loopne
inc
cwtl
rol
daa
mov
filds
addr16
out
mov
fwait
and
sbb
jle
movsl
scas
popa
mov
add
clc
pop
into
enter
push
xor
sub
or
dec
addr16
mov
and
adc
cmpsl
jb
repz
iret
sbb
sub
cmpsb
mov
cmpsl
pop
sti
outsb
push
adc
iret
insb
adc
inc
dec
stc
and
out
pop
mov
repz
lcall
jmp
cld
mov
xchg
imul
cltd
andb
fs
adc
aas
push
add
dec
dec
sub
mov
pop
pop
loop
cmp
sub
cld
repnz
stos
lods
inc
pop
leave
push
shll
loopne
pushf
xor
mov
cmpsb
fmulp
jnp
stos
fnstcw
sbb
and
cmpsb
int3
dec
add
pop
xlat
cld
lods
call
pop
ljmp
movl
lods
xchg
int3
enter
xchg
xchg
orl
mov
push
or
inc
jge
jbe
mov
sbb
add
stos
into
in
ja
sbbl
and
mov
cmp
imul
sub
les
mov
fs
add
sti
jnp
inc
aad
or
xor
std
mov
sub
inc
xchg
ret
adc
xlat
mov
sub
xchg
in
pop
add
ret
out
adc
cmp
adc
fsubrs
jle
inc
jb
sub
ljmp
ret
xor
pushf
negb
sahf
cmc
xor
xor
push
addr16
cli
cltd
icebp
outsl
enter
dec
adc
clc
mov
sub
pop
daa
pop
mov
xchg
xchg
push
test
add
int3
fisubrl
ret
aad
int
sbb
out
mov
test
in
insl
ret
xchg
aam
insb
and
cmp
xchg
pop
cmp
shl
mov
fsubl
hlt
pop
sti
mov
cli
sbb
movsl
or
xor
aam
pop
cmpsl
hlt
arpl
cld
clc
int
xadd
inc
cltd
scas
add
push
int
cmpsb
mov
sti
mov
mov
fstps
add
fbld
in
or
lock
int
or
aas
jl
cmp
in
popa
jno
xchg
pop
cs
arpl
loope
xlat
sub
inc
push
stos
hlt
shll
imul
movsb
mov
popa
lods
inc
das
sbb
cmc
xor
mov
rclb
test
fcompl
imul
mov
loope
shll
adc
xchg
das
pop
mov
mov
add
xchg
xor
sbb
pop
enter
jne
iret
mov
es
lcall
mov
dec
cltd
lds
jl
push
adc
loopne
push
lock
mov
mov
out
push
mov
sbb
insb
into
lods
xor
add
sbb
pop
adc
pop
add
xchg
xchg
mov
cmp
xchg
sahf
or
scas
outsl
andb
stos
popf
inc
ficoms
mov
mov
fwait
cli
add
jae
sub
sub
xchg
lds
ret
lods
add
and
xor
mov
xchg
fldcw
jmp
sub
out
sub
inc
rorb
addr16
fnsave
mov
mov
cltd
sarl
test
aaa
mov
insl
gs
sti
xchg
stos
inc
test
mov
pop
jmp
mov
and
outsl
dec
mov
adc
adc
xor
jg
sub
rcrl
pop
push
cmp
nop
scas
or
ljmp
out
mov
icebp
test
pop
lods
pop
inc
inc
push
cmpsl
daa
lods
mov
pop
push
lds
push
mov
addl
dec
jae
lcall
gs
shll
call
push
inc
cmp
mov
jne
movsl
and
ds
es
mov
ret
mov
aaa
movsl
or
xchg
mov
mov
or
xchg
dec
addr16
xchg
stos
and
inc
xor
in
xlat
push
addb
sbb
push
mov
cwtl
adc
sbb
leave
loope
xchg
add
not
inc
or
jle
mov
fdivrp
xor
jb
adc
push
inc
adc
or
roll
sbb
pop
xor
and
mov
in
mov
hlt
mov
xchg
adc
movsl
popa
or
pop
cld
ficoml
sbb
inc
mov
inc
pop
xchg
jge
jno
je
ja
xor
add
mov
call
inc
lret
nop
jno
adc
int
jge
sbb
std
push
stc
add
push
xor
jb
xchg
fistps
insl
mov
dec
sahf
data16
cmp
fmulp
inc
je
sarb
lods
inc
je
pop
and
cmp
bound
jg
cltd
push
xchg
inc
repz
ss
mov
sub
mov
fdivrl
inc
xchg
adc
mov
inc
rorl
call
mov
loop
pop
inc
sbb
mov
dec
cmc
fs
aaa
xor
dec
push
jmp
add
mov
adc
lods
lds
test
test
clc
mov
pop
out
dec
cli
and
mov
jbe
mov
fdivrp
mov
xchg
push
jne
fwait
and
adc
jne
mov
test
bound
data16
rclb
das
adc
sub
adcl
sbb
xchg
lret
lea
inc
ljmp
psubsw
inc
xchg
or
mov
loope
jmp
stc
push
stc
cltd
add
adc
lods
mov
or
jmp
pop
nop
test
icebp
dec
push
lret
inc
cmp
inc
popf
popf
ret
std
cmp
sarb
fcompl
pop
ret
or
pusha
jecxz
in
fdivl
jmp
aad
push
jnp
xchg
loop
sub
sub
jae
jle
call
test
movsb
int3
insl
in
mov
sbb
mov
out
or
dec
test
data16
mov
fidivl
pop
or
cmpsl
mov
out
es
cmpsl
push
jo,pn
push
sar
dec
pop
mov
dec
out
pusha
scas
scas
insl
incl
mov
push
lret
test
or
ret
pop
js
repz
dec
into
cld
loop
popf
repnz
mov
jl
push
sub
inc
mov
push
adc
or
jo
movsb
sarb
jno
mov
mov
push
stc
push
popf
xor
inc
and
sbb
loopne
or
mov
int
jmp
pop
hlt
into
xor
push
push
movsl
dec
jns
mov
mov
push
mov
addr16
push
idivl
push
xor
push
into
push
in
stos
gs
or
je
and
mov
movsb
cmpsb
das
inc
inc
mov
xchg
outsb
test
mov
lds
sub
out
sbb
mov
aas
or
and
xor
inc
xchg
jl
pusha
mov
addr16
pop
adc
lock
sbb
sti
stos
sti
fsubrs
incl
fiaddl
stc
sbb
out
adc
adc
pop
mov
fs
ja
mov
fdivrl
and
addr16
lods
dec
inc
pusha
ljmp
push
rorb
xor
std
je
cli
or
pop
push
loop
xor
les
sub
mov
push
aam
sub
jge
add
es
adc
add
jge
adc
in
imul
push
bound
enter
sbb
xchg
psraw
jns
lahf
mov
je
int
ljmp
les
jle
jne
mov
sbb
mov
cmpsb
into
shlb
ret
push
dec
ja
leave
inc
lock
stos
ljmp
xchg
repz
xor
daa
dec
add
lahf
outsl
sbb
dec
jmp
addr16
push
mov
scas
push
jno
push
pushf
mov
jnp
stc
out
mov
bound
lock
pushf
iret
imul
repnz
inc
jecxz
es
cs
cld
adc
cmpsb
aaa
adc
mov
aaa
add
adc
jns
or
int
dec
shll
fnstsw
es
xor
in
xchg
mov
imul
jns
scas
daa
pushf
cmp
add
cmpsb
cwtl
ret
jg
repz
push
xlat
lret
jmp
in
adcl
test
adc
adc
test
repnz
movsb
int3
movsb
movsb
pop
mov
bsr
xchg
pop
mov
insb
popa
cli
ljmp
pop
mov
jp
fildl
push
sbb
dec
fs
cmp
push
or
popf
push
repz
mov
xlat
stos
cmpsb
pmaxsw
adc
dec
inc
ud2
add
fimuls
addr16
mov
jmp
xchg
or
stc
pushf
xlat
fstpl
jmp
xor
inc
cmp
outsb
mov
lea
ja
aas
jne
aam
push
jae
and
cmp
gs
push
ljmp
ss
jecxz
test
or
rolb
and
scas
mov
xchg
mov
mov
push
lea
xchg
test
movsb
dec
mov
es
je
pop
imul
xor
fmull
incb
aas
mov
sti
sbb
dec
sbb
ret
mov
adc
add
inc
rclb
xor
adc
dec
lods
popa
rcrl
xchg
shlb
test
jecxz
push
xchg
sub
push
xor
push
imulb
or
das
xor
mov
push
orl
xchg
mov
xchg
fcmovnb
lods
mov
push
cmc
stos
push
cmp
sahf
mov
sub
icebp
inc
js
outsl
dec
invd
or
and
imul
xchg
mov
js
sub
jecxz
movsb
pop
pop
in
das
jge
add
pop
je
adcl
pop
push
mov
or
psllw
adc
shll
mov
into
fistpl
in
inc
pop
mov
xchg
lds
push
xor
push
sub
ret
jns
out
and
dec
jmp
cs
cmp
mov
insb
pop
or
add
shll
fldcw
push
push
and
in
xor
ljmp
insb
ljmp
into
adc
add
cmp
jp
repnz
stos
leave
adc
xorl
or
xor
and
popf
shrl
xor
adc
xchg
xor
xor
jb
fs
aad
lock
psubsw
mov
movsl
test
das
mov
and
sbb
xor
lock
out
sbb
jl
out
adc
adc
lea
add
shrb
jmp
test
mov
jb
cwtl
pop
push
pop
loope
inc
leave
push
or
dec
xchg
insl
imul
insl
ficoml
xor
mov
xlat
sbb
push
and
cmpsb
add
fcmovne
testl
inc
add
xchg
out
lds
jg
repnz
or
adc
sub
cmp
out
adc
imul
adc
movsl
je
xor
jne
rorl
into
shl
arpl
adc
cmpl
and
push
ret
movsl
movsb
enter
fistpll
jne
loop
ficomps
in
xchg
gs
mov
dec
rcl
sub
ss
mov
jecxz
mov
sti
movsb
movsl
xchg
xor
jbe
icebp
in
mov
or
inc
sub
movsl
xlat
and
add
xchg
add
adc
ljmp
add
stos
daa
add
cs
jne
inc
or
sub
clc
cmp
pushf
loop
out
mov
fwait
cmp
clc
push
loop
repnz
add
loop
or
sarl
or
adc
cli
mov
ret
or
int
sub
sti
ljmp
gs
mov
mov
mov
xor
lock
cmp
out
bound
lock
dec
loope
jae
int
jl
dec
push
out
add
jo
fisttpl
add
adc
dec
fmull
dec
pop
call
movsb
inc
adc
jl
outsb
or
rorl
fwait
push
jge
dec
push
movsl
adc
mov
add
and
dec
push
mov
inc
js
fwait
pop
ror
into
lcall
pop
dec
pop
lock
cmc
or
dec
movsb
cmp
fbld
std
ds
iret
cwtl
lods
shll
roll
lret
jmp
lret
sbb
call
xlat
xor
stc
sbb
ja
aaa
sbb
mov
xchg
dec
iret
pop
lea
test
inc
ja
rcr
mov
mov
inc
insb
in
inc
mov
mov
mov
jl
out
inc
pop
clc
hlt
mov
sub
cmpsl
lods
shrl
negb
leave
pop
loopne
sub
xor
lahf
sbb
push
cmp
fldcw
jae
add
xchg
lods
push
gs
repz
data16
jmp
xchg
mov
jo
adc
pop
in
cltd
mov
ja
add
lods
xchg
dec
js
push
mov
ds
cmp
daa
enter
sbb
stos
mov
inc
mov
cmc
jl
cmp
cmp
mov
inc
pop
std
insb
dec
mov
fsubl
fldcw
notl
jb
insb
sbb
testb
xchg
pop
push
jb
cmp
fdivl
rcrb
cmp
mov
mov
jle
insl
pushf
in
jp
in
cmovns
or
inc
sbb
and
jno
inc
cmp
stos
ret
sub
cltd
sbb
sub
pop
push
adc
sbbl
dec
and
jge
xchg
ss
dec
xor
jecxz
shrb
lcall
test
rcl
in
or
pop
imul
adc
xchg
mov
fstl
cmpsl
das
test
frstor
insl
outsb
pusha
mov
mov
mov
ja
jae
adc
sub
addr16
push
mov
pop
jge
push
popa
jns
sbb
jl
pop
push
cmpb
jecxz
rclb
pmaxub
jbe
fildl
repz
std
adc
push
enter
aad
mov
test
adc
jae
pop
test
into
test
lret
pop
lcall
ret
jb
std
enter
lahf
add
scas
jbe
push
mov
pop
or
imul
cwtl
push
test
cmp
jo
pop
pop
mov
es
nop
pop
leave
jns
fbstp
push
push
and
dec
arpl
cmp
xor
sub
sbb
std
sub
pop
push
fistpll
jne
in
js
xchg
aam
insl
mov
jle
jl
cmc
imul
push
cmp
lcall
std
nop
mov
dec
cmpsb
mov
adc
adc
cmp
push
sub
push
out
insl
inc
cld
mov
ds
sub
add
pop
and
fwait
sti
in
dec
test
jp
std
inc
ss
or
sti
std
push
arpl
push
jne
cmpsl
in
or
les
ret
jns
out
xchg
mov
add
jae
jnp
xchg
popf
nop
pushf
cmpsb
jae
inc
and
inc
jmp
jmp
cmpsb
and
mov
push
mov
repnz
inc
pop
xchg
push
test
mov
xchg
icebp
test
jge
stc
fildll
scas
fsts
dec
and
jo
add
push
jle
xchg
jnp
mov
movsl
bound
lds
cltd
pop
stos
aad
sbb
les
out
mov
in
ljmp
test
mov
pop
in
push
adc
xchg
inc
lea
or
push
lahf
push
out
aaa
and
nop
test
enter
idiv
test
stos
mov
jbe
xor
shlb
aad
lods
push
pop
jb
mov
cmp
mov
mov
je
loope
xchg
clc
nop
pop
dec
fisubs
das
add
jmp
jle
inc
xchg
ficoms
xchg
xor
pop
pop
push
xchg
andl
imul
repz
repnz
jae
mov
loope
xor
scas
mov
andb
sub
lods
lods
mov
mov
adc
jmp
adc
push
xlat
dec
dec
lock
push
aaa
pusha
add
shr
popf
cmp
nop
cmpsl
inc
xchg
outsl
shlb
and
add
jl
xchg
out
sarl
inc
decb
push
pop
add
mov
lret
cmp
fwait
mov
call
push
mov
mov
inc
shl
aam
lds
cli
sbb
mov
aam
stc
or
into
push
lret
shl
popa
xchg
lods
pop
out
movsl
xor
cltd
xchg
push
xor
jmp
jbe
mov
add
daa
jecxz
jno
pushf
cld
int3
pop
sahf
jnp
sub
dec
add
mov
dec
xor
push
mov
sbb
lds
add
js
mov
andb
and
push
in
mov
movsb
les
inc
mov
or
call
add
push
rcl
cmpsl
in
sbb
stos
sahf
outsb
inc
das
mov
imul
inc
mulb
dec
negl
stos
loope
or
shl
fcomi
std
lds
xchg
inc
repnz
sub
lret
or
es
pop
fsubr
mov
lret
or
push
jo
test
out
pusha
jmp
cmp
sbb
mov
insl
sbb
sub
xchg
add
inc
ret
imul
pusha
xchg
xlat
inc
negb
arpl
fisttps
cmovne
lcall
fsubs
pushl
sub
add
mov
push
sbb
jg
insb
adc
xor
insl
lock
imul
push
xchg
or
pop
pushf
imul
mov
mov
sub
sub
nop
mov
adcl
cmpsl
lcall
xor
adc
test
mov
pop
xor
int
ljmp
insl
je
push
mov
push
sbb
xchg
sub
sbb
int
mov
call
inc
inc
and
jle
or
inc
pop
mov
scas
and
adc
lods
insb
adc
xor
movsb
push
sub
xchg
pop
or
push
fwait
cmp
stos
push
sub
shll
or
lods
gs
mov
sbb
jle
pop
fimull
mov
adc
xlat
mov
les
jge
stc
ja
mov
xchg
gs
fcomps
packsswb
adc
mov
gs
xor
fistps
add
sub
test
cmpsl
cmp
and
jl
stos
pop
ds
insl
sub
test
iret
enter
std
and
les
or
pop
into
dec
pop
push
mov
dec
adc
or
loope
mov
xchg
pop
or
gs
dec
jo
lcall
push
adc
enter
add
outsb
mov
jnp
jb
call
jmp
add
sbbb
scas
xor
inc
mov
pop
popa
xchg
xchg
shlb
sub
gs
jbe
in
aaa
lea
jp
mov
sbbb
jbe
push
pusha
add
cwtl
sub
lods
sbbb
fwait
idivl
in
xlat
jb
aas
push
mov
inc
jb
xchg
fucomi
ds
call
ss
jns
and
and
cli
lods
in
lock
ja
sahf
daa
stc
out
shll
push
sub
rep
fbstp
lret
ja
adc
or
outsl
inc
xchg
and
lock
outsb
mov
sti
dec
movsl
xchg
icebp
les
jp
mov
scas
jle
sub
cmp
ret
pop
loopne
push
testl
cmp
clc
push
movsb
mov
or
into
aas
ja
xchg
mov
fsub
mov
adc
pop
push
sbbl
scas
adc
int
cmp
sub
loopne
addl
lock
ret
lret
dec
lds
out
stc
dec
dec
dec
cwtl
jl
pop
inc
and
aas
scas
iret
or
lods
test
dec
inc
popf
and
or
lret
dec
es
xchg
pop
sub
aas
data16
adc
mov
fisubrl
fadds
or
add
leave
xor
sbb
mov
shl
filds
fcoml
imul
ds
loopne
es
inc
dec
in
sbbl
lcall
pop
xor
ret
out
test
in
fstps
push
inc
pop
cmp
pop
outsl
xchg
js,pn
out
lds
mov
and
cmc
aam
data16
les
mov
cmp
mov
push
push
roll
jmp
sub
xor
cmp
mov
dec
inc
mov
loope
cwtl
push
repz
cmp
jl
and
push
adc
sbb
test
ja
mov
and
xchg
fwait
std
popa
mov
push
cmp
xor
add
add
sti
dec
scas
cmc
pusha
and
ret
adc
mov
call
or
mov
out
lret
enter
int3
clc
cmp
push
je
jmp
cmp
pop
add
lret
ja
das
test
jbe
in
xor
jnp
pop
divb
dec
icebp
cmpsb
add
out
shll
cli
mov
sahf
pushf
mov
jp
mov
xchg
data16
push
mov
or
inc
mov
adcb
aam
fstps
ror
dec
push
mov
outsl
pop
insb
ljmp
jno
cmpsl
mov
loope
addr16
shll
push
inc
pop
push
cmp
movsl
push
mov
outsl
inc
call
out
mov
cmpsb
and
loopne
fsts
push
repnz
lret
add
imul
cld
push
xchg
dec
mov
into
sub
hlt
or
xor
pop
scas
in
aaa
mov
jns
dec
push
add
mov
xor
jp
lret
jle
movsl
xor
das
test
ja
sub
arpl
cmp
insb
jl
or
mov
cmp
movsb
inc
negl
stc
repz
mov
test
and
pop
add
push
jle
jge
add
adcl
popf
pop
cmp
sbb
and
push
imul
decb
pusha
stc
xchg
adc
jb
js
lcall
movl
sbb
orb
aas
jnp
aam
inc
pop
dec
push
jg
adc
pop
fadd
mov
jp
and
stc
or
xor
jae
push
and
icebp
lcall
lea
lahf
loope
mov
xor
cmc
add
outsl
and
ljmp
sbb
jb
out
gs
push
fdivs
push
mov
jnp
repz
mov
inc
mov
lods
add
jl
aam
nop
in
ds
xor
sbb
cwtl
leave
push
sub
add
std
data16
add
lret
movsl
idivb
fimull
lds
xchg
fisubrl
xchg
and
push
cmp
pop
cmpsb
pop
call
fldcw
call
sub
mov
scas
sub
out
int
mov
test
les
loop
lods
leave
sub
xchg
sub
pop
frstor
pop
sbb
nop
into
inc
cmpsb
or
aas
ja
inc
and
sub
out
pop
scas
xchg
xor
pop
jnp
mov
outsb
adc
or
fsubrl
cld
inc
inc
or
push
jne
pop
insl
or
sbb
sbb
out
jns
sbb
rcrl
test
mov
push
inc
sbb
mov
arpl
mov
and
roll
add
cli
sar
jnp
ds
sub
lret
push
sahf
out
fcmovnb
or
bound
jmp
xchg
xchg
pop
add
mov
movsb
negl
xlat
in
je
xchg
or
mov
jno
xchg
test
mov
xlat
ss
sub
lods
dec
ror
out
cmpsl
dec
mov
lods
pop
sarl
int
pop
xor
nop
mov
icebp
jns
xchg
arpl
jl
cmp
shlb
adc
ljmp
aad
cmp
mov
cmp
movsb
cmp
out
jl
in
cli
sbb
xor
jo
out
dec
jbe
sbb
lds
hlt
test
inc
push
mov
pop
roll
jbe
ret
daa
dec
aam
stos
test
mov
lcall
jg
sub
aaa
hlt
fsubs
gs
xor
jne
test
lea
push
mov
adc
inc
push
sub
adc
dec
pop
jns
jae
rcll
popa
aas
sti
push
add
hlt
mov
or
jmp
cmp
xor
pushf
std
dec
adc
daa
jb
inc
sbb
inc
or
mov
inc
mov
jne
and
pop
inc
movsb
sub
mov
daa
dec
ja
pusha
dec
push
jp
mov
dec
mov
sahf
sbb
pop
xlat
push
mov
sarl
shrb
fisubrs
push
sbb
xchg
idivl
mov
in
out
insl
test
jnp
movsl
xchg
int
push
mov
das
daa
cmp
pop
aas
sub
ja
jmp
pop
daa
push
add
dec
adc
dec
imul
addl
sbb
sti
xchg
inc
addr16
imul
push
test
iret
sub
pop
mov
cmpsl
cmp
mov
andl
fdivl
mov
mov
cmpsb
pushf
bnd
xor
inc
pop
repnz
and
jle
xchg
les
adc
repnz
jge
dec
push
or
jge
lods
mov
jecxz
lcall
lds
or
or
ficoms
aad
mov
push
xchg
sbb
mov
sub
mov
pop
sbb
enter
cmp
or
movsl
mov
roll
test
add
mov
popf
call
rcr
subl
jecxz
inc
pop
or
mov
jbe
mov
pop
add
xchg
lea
push
push
adc
push
and
push
hlt
xchg
push
fwait
ret
leave
xor
jmp
mov
jle
daa
ljmp
jp
dec
xor
dec
std
inc
int
scas
sahf
mov
out
shl
insl
dec
in
jnp
neg
int3
movsb
xchg
add
sbb
pop
adcl
insb
or
popa
test
aas
in
or
mov
inc
push
test
movsl
aas
jl
jo
sub
ficompl
loopne
ret
mov
pop
xlat
jmp
adc
clc
inc
cmp
int3
inc
mov
push
lds
add
outsb
rclb
push
lds
in
cmc
or
insl
jecxz
inc
mov
stos
xchg
fimuls
push
jns
inc
dec
out
test
fcompl
rorl
push
add
fistl
mov
jbe
lahf
xlat
push
repnz
ss
push
enter
lods
das
pop
arpl
std
inc
jl
pop
insb
ret
cmp
mov
and
add
movsl
sahf
jmp
stos
adc
gs
cmp
daa
and
vmovd
or
movsb
mov
dec
and
shl
adc
add
test
mov
fcoms
mov
mov
cmc
xchg
add
inc
xchg
push
jno
pushw
insl
push
sbb
cmp
into
mov
xchg
jo
xor
pop
adc
movsl
out
int
int3
cmc
fnstsw
mov
movsl
mov
push
dec
or
daa
xchg
shlb
sbb
pop
push
mov
ja
xor
jae
bound
ret
out
mov
inc
shlb
and
fsubr
push
cltd
mov
aam
mov
mov
sub
aad
ret
cmp
adc
mov
pop
push
sub
or
loop
das
adc
mov
fistps
iret
inc
dec
orb
xchg
mov
lea
or
mov
fmull
test
mov
xchg
into
inc
push
jmp
sbb
pop
enter
sarb
lods
jae
add
hlt
pop
xor
sahf
and
dec
mov
je
sub
scas
arpl
mov
xor
mov
mov
cmp
mov
adc
repz
loopne
inc
mov
aam
test
mov
outsb
in
jne
in
popa
mov
aad
mov
loopne
mov
xor
sbb
dec
es
ret
popa
ds
aaa
addr16
cmpb
jp
out
jmp
or
mov
xchg
aad
mov
mov
mov
pop
mov
repz
addr16
push
mov
push
cmpsb
ljmp
lcall
std
into
test
lcall
pop
test
mov
sar
xchg
loopne
sub
rolb
push
cltd
pusha
mov
fs
dec
pop
sbb
fiadds
jge
or
ds
xor
subb
das
mov
cltd
or
push
jecxz
mov
inc
xchg
add
inc
cld
mov
push
jnp
cmp
cmc
push
xor
adc
aaa
mov
lcall
pop
sub
test
inc
add
push
sub
cs
xchg
nop
sub
gs
push
jb
cmp
and
cmp
stos
jmp
mov
int
jp
push
pop
mov
mov
sub
sbb
addb
cmpsl
sub
inc
out
cs
lods
rol
stos
cmp
push
pop
scas
xorl
push
imul
popf
sahf
mov
dec
fwait
pop
orl
adc
push
and
jns
push
cmp
sbb
cmp
and
xchg
cmp
loop
add
or
and
sbb
and
sar
mov
hlt
add
mov
adc
push
nop
sbb
mulb
xor
pusha
movsb
mov
jne
insb
jbe
test
les
in
adc
insw
popa
cmp
stc
push
cmp
cs
cmp
xlat
adc
js
lods
loop
xor
popf
loop
shll
mov
iret
jl
test
add
jae
xchg
in
dec
adc
rcr
mov
or
lea
mov
mov
hlt
pusha
xchg
in
outsb
into
jmp
sbb
inc
aas
clc
aaa
add
dec
inc
mov
test
shlb
inc
fsubrl
clc
jb
test
imull
movsl
aas
push
clflush
movsb
jmp
add
stc
and
lar
xchg
push
mov
fcos
cmpl
and
and
lds
cmp
call
sbb
sbb
xor
scas
or
cmp
cmp
stos
ret
adc
or
sub
mov
ret
cmpsb
sbb
scas
pop
push
adc
shrb
or
popf
call
sub
les
adc
addr16
repnz
and
xor
aas
push
mov
gs
sub
cs
xchg
out
inc
sti
mov
fwait
xchg
ljmp
test
xchg
mov
mov
sub
lret
outsl
lods
ror
or
sbb
in
mov
pop
loope
push
lds
aad
dec
mov
jae
addr16
ja
movsl
dec
data16
ljmp
or
cmpsl
and
sbb
mov
pop
or
ret
or
fildll
pushf
add
jmp
divl
mov
inc
fldl
sarb
dec
orl
ret
incl
sbb
repz
icebp
ss
cmpsl
mov
subl
push
jns
push
popf
cmp
loope
cmp
fsubrl
mov
ja
jne
jae
push
pop
cs
cmp
fldt
mov
lcall
and
mov
cmp
mov
aas
sub
lar
jbe
scas
popf
cmp
outsl
ret
mov
gs
or
adc
sti
and
bound
lret
hlt
or
pop
leave
xchg
test
xor
stos
mov
rcrl
mov
shl
lods
cmpsb
jno
hlt
loop
cmp
sub
mov
xorb
iret
scas
cmp
jl
bnd
cltd
scas
mov
addl
inc
xor
mov
insl
pushf
sahf
iret
add
dec
xchg
and
out
and
cmp
or
pop
insb
pop
mov
adc
mov
out
mov
stos
cli
jb
pop
mov
adc
xchg
adc
inc
outsl
jo
imul
jae
push
nop
push
mov
mov
jl
inc
js
add
adc
call
xor
lds
fisttpll
jnp
divb
adc
or
mov
roll
outsb
sbb
xor
push
es
xor
mov
movsl
mov
adc
mov
add
movsl
dec
adc
call
addl
and
in
es
notb
pop
jecxz
mov
xchg
icebp
stos
adc
jne
inc
jp
hlt
out
daa
mov
adc
rcrb
xor
mov
adc
xor
out
fcmovnb
daa
dec
mov
loop
out
add
pop
loope
shlb
pop
inc
inc
cltd
cmp
stc
or
movsl
sbb
xlat
add
inc
cmpsb
add
xchg
cld
push
in
mov
int3
xchg
test
icebp
repnz
inc
jle
std
xchg
imul
pop
test
insb
and
fwait
mov
scas
cmc
mov
data16
jno
mov
in
inc
jg
push
jecxz
pop
push
and
rcr
lods
rclb
dec
sbb
or
icebp
add
mov
cmpb
stc
xor
push
inc
ret
mov
adcb
sub
mov
jns
pusha
cmp
inc
push
aaa
loopne
scas
jne
cmc
xlat
ds
imul
sti
mov
dec
imulb
stos
cmc
push
xchg
lds
dec
push
cmp
lcall
ficoms
cld
mov
pop
jecxz
imul
imul
pusha
notb
stos
push
mov
jb
xchg
adc
jne
adc
xchg
call
in
imul
aas
push
ljmp
sbb
pop
push
aad
jp
jbe
repz
mov
jbe
stos
daa
dec
pusha
leave
fistl
dec
int
pushf
and
dec
arpl
jmp
fistps
jns
mov
xor
ret
cli
loopne
xchg
test
add
push
xchg
jbe
adc
cmp
in
add
jecxz
push
mov
loope
dec
mov
sbb
jg
shll
xor
push
sbb
insb
mov
sbb
lret
les
mov
lret
inc
mov
mov
dec
mov
jecxz
or
mov
xchg
and
addl
in
jle
xlat
or
loope
adc
xor
mov
adc
popf
icebp
out
xor
mov
aaa
stc
adcl
push
fcoms
movb
lcall
pop
jbe
inc
cmp
pop
loop
push
xor
and
mov
fistpl
aad
lds
dec
fiaddl
adc
dec
inc
sub
dec
dec
inc
or
aam
cmp
sahf
jbe
pushf
push
xchg
movsl
lea
xchg
push
jmp
pop
mov
dec
cmpb
mov
inc
stc
test
pop
shrb
jnp
adc
jmp
lods
and
mov
pop
cli
insl
pop
pop
inc
add
add
inc
rorb
mov
andl
jnp
jp
adc
lret
xchg
cmc
movsl
andl
fidivrs
andl
nop
sbb
aad
or
lahf
fmull
std
push
lock
sbb
and
aam
int
fistps
dec
mov
repz
mov
hlt
mov
add
into
push
in
inc
push
inc
int3
test
pop
adc
setae
sub
test
mov
jmp
mov
push
or
add
lret
cmp
pop
and
mov
sbb
add
sbb
icebp
xor
jl
dec
xchg
xchg
aaa
mov
mov
sbb
ljmp
leave
rcrb
mov
push
outsl
xor
fdivrs
imul
mov
lret
sub
xlat
cmp
movzwl
nop
outsb
mov
sbb
jnp
subl
pop
sti
cmp
sub
es
dec
imul
bound
outsb
pop
sub
mov
xor
jae
into
cmp
mov
ljmp
lods
sbb
mov
pop
jecxz
ficoml
insl
pop
dec
and
and
or
or
sti
xchg
push
push
mov
cmp
jmp
in
stos
es
scas
les
dec
cld
aaa
mov
pop
and
mov
xor
xchg
dec
lock
mov
stos
outsl
clc
stos
imul
pusha
push
add
ljmp
or
jp
and
xchg
les
call
cmp
imul
adc
dec
xor
fcmovu
jecxz
dec
inc
mov
outsb
les
pop
push
std
scas
in
pop
cmc
popa
sub
push
sbb
test
sbb
pop
mov
out
inc
mov
dec
adc
loopne,pn
mov
xchg
or
push
sub
sub
dec
dec
jb
push
push
jae
jecxz
sub
clc
sbb
jp
loop
mov
sub
dec
cmp
shrb
arpl
mov
dec
out
push
lods
cmp
xor
adc
xchg
ja
fnsave
xchg
insl
ret
scas
jecxz
out
je
mov
add
pushf
push
out
dec
pop
and
xlat
shlb
bound
inc
mov
push
pop
rclw
inc
and
adc
mov
jne
push
out
pop
mov
inc
rcl
in
loop
notb
cwtl
lidtl
and
stc
pusha
into
in
test
push
dec
jl
mov
mov
je
aas
daa
stos
jae
js
pop
mov
pop
fisubrs
and
push
cmp
cmp
ret
inc
inc
ljmp
add
mov
js
cmc
jge
rorl
lods
adc
mov
subl
fdivs
cwtl
shrl
xlat
xchg
xchg
dec
mov
adc
hlt
shll
or
stos
js
enter
inc
sarl
xor
xchg
ss
xchg
in
jae
cli
rol
adc
fadds
and
sarb
jbe
cmp
pushw
add
jae
jecxz
outsb
jecxz
jecxz
sti
sti
shr
mov
sarb
fldt
gs
mov
lods
les
lret
inc
call
xchg
fcoms
fistl
dec
xchg
outsl
dec
or
mov
repnz
jg
xor
data16
stc
cmp
mov
es
and
pop
jge
sbb
rclb
sbb
mov
dec
fwait
rcr
aaa
inc
fildl
repnz
add
sub
loopne
add
insl
xor
pop
es
xor
nop
pop
mov
jmp
fdivr
xor
cmc
cmp
sub
mov
fsub
xor
cmc
sarb
cmp
cwtl
sub
aas
push
insl
dec
in
sbb
dec
sbb
mov
dec
fisttpl
out
sbb
pop
lds
aas
pop
lret
inc
pop
mov
flds
cmp
ss
imul
or
test
pop
andb
or
or
pop
cmp
icebp
outsl
cmpsb
sbb
xchg
adc
pop
xor
testb
jg
inc
xor
and
test
lcall
lcall
in
outsl
xchg
cwtl
push
add
xchg
cmp
adc
pop
and
mov
je
xor
mov
fs
out
cld
pusha
addr16
inc
inc
cwtl
sbb
daa
jle
bndldx
mov
ljmp
call
inc
cmp
and
into
lods
lods
and
mov
inc
adc
insb
cltd
insb
push
xor
loopne
outsl
scas
sbb
nop
stos
das
iret
scas
jl
jbe
loopne
popa
mov
dec
repz
cmp
cld
jle
roll
mov
ds
in
stos
adc
mov
mov
std
sbb
dec
pop
adc
cmp
inc
push
pop
neg
jnp
xor
sbb
pop
cltd
push
outsb
mov
aaa
sbbb
pop
sub
hlt
inc
idivb
inc
and
cmp
sub
mov
mov
push
lahf
bound
xchg
popa
fsubrs
test
dec
pusha
repnz
test
xchg
xor
out
insb
shrb
mov
lock
scas
nop
add
pushf
and
cmp
adc
mov
inc
or
cmp
or
outsl
mov
out
sbb
sbb
inc
inc
loopne
pop
push
xor
int3
aam
aam
scas
call
xchg
cmp
pop
jne
pop
push
lock
imul
xorb
mov
out
nop
hlt
fstpl
les
mov
mov
sbb
xchg
imul
adc
xchg
loope
inc
sbb
jp
inc
stc
shl
pop
in
sub
outsl
jae
aaa
jno
and
mov
insl
lds
mov
aas
lea
mov
in
sar
cmpsb
iret
iret
sub
push
int
add
jns
or
add
inc
out
mov
daa
fldenv
sbb
inc
iret
decl
int
dec
push
cmp
stos
pop
inc
pop
out
cli
jmp
mov
xchg
cmp
sbb
push
ja
leave
push
ds
fsts
adc
dec
pop
xchg
rorl
jl
into
fdivl
fists
imul
xchg
shr
movsl
aaa
xchg
add
pop
clc
lret
cmp
xor
jge
inc
add
lock
das
push
jp
rcrl
or
push
repnz
cli
add
jg
les
add
pop
ja
fs
pop
mov
jb
repnz
xchg
sarb
je
in
scas
scas
pop
push
es
lahf
in
cmp
test
lahf
and
icebp
sbb
sbb
jle
insl
neg
mov
push
jo
ss
stc
pop
pusha
jmp
pop
mov
inc
mov
ret
jmp
lods
jp
fsts
jp
cmp
mov
inc
pushaw
fs
out
push
iretw
aad
fldcw
cli
mov
outsl
inc
push
xchg
test
jmp
xchg
sbb
mov
cld
fcoml
incb
test
js
rclb
jno
imul
pop
fcmove
shll
in
jg
jnp
xor
inc
fdivrl
lea
cli
lcall
mov
testb
add
rorb
in
mov
inc
lock
ja
inc
push
xor
arpl
jle
mov
jge
es
arpl
leave
sbb
xchg
sub
push
inc
movsb
jmp
pop
cmp
aas
pop
push
jge
xor
push
push
mov
aam
inc
pop
sub
or
xor
rcrb
sahf
loopne
cltd
or
leave
mov
fs
bnd
fdivp
sbb
push
or
icebp
out
sub
xchg
add
jne
inc
negb
mov
popf
lods
jp
fldt
jmp
pop
jo
mov
imul
push
test
mov
dec
xchg
outsl
add
xchg
popf
mov
pop
ja
pop
push
push
pop
mov
or
sub
mov
dec
mov
cmp
repnz
pusha
jno
jnp
dec
lea
xchg
sbb
icebp
sbb
test
das
int
lock
aam
dec
loop
dec
push
sub
add
out
mov
cmp
mov
push
and
iret
adc
xchg
xlat
pop
pop
nop
xor
mov
add
arpl
sub
hlt
dec
jns
mov
cli
mov
push
push
rol
gs
inc
push
mov
cld
pusha
or
mov
insl
movsl
push
or
ss
mov
mov
out
cmc
lahf
sub
sbb
in
in
int
mov
nop
sbb
fdivrl
xchg
jne
cmc
push
les
mov
add
push
cmpsb
test
push
incb
or
push
add
lods
fists
out
or
rclb
popf
dec
adc
loop
stos
pop
jge
and
mov
add
clc
test
pusha
xor
jg
xor
mov
dec
mov
inc
adc
pushf
in
test
or
dec
daa
out
xlat
out
pop
stos
jno
xchg
inc
lahf
nop
or
enter
adc
out
scas
cli
out
pop
xchg
fadds
fidivs
out
mov
loopne
mov
mov
jmp
sub
fsubl
frstor
sarb
sbb
loope
mov
shrl
aaa
data16
sbb
xor
or
clc
xchg
dec
xor
mov
loope
push
sarb
leave
push
mov
stos
les
xlat
xchg
mov
lea
jo
add
sbb
xchg
imul
ret
sbb
addb
lahf
add
ljmp
lret
mov
scas
loopne
cmp
gs
ja
mov
aaa
and
inc
jmp
pop
sbbl
insl
enter
sahf
test
ds
test
push
iret
out
testl
in
fadd
adc
ljmp
fsubrp
orb
pop
lcall
cltd
test
cmp
rcrl
outsl
push
icebp
mov
jae
scas
adc
pushl
push
out
sub
and
hlt
jp
orl
xor
cmc
push
jl
ljmp
mov
jns
dec
addr16
mov
pop
iret
dec
mov
xor
xlat
mov
sub
mov
in
xor
sti
push
notl
repz
loop
lods
push
add
mov
lods
sub
pop
mov
ret
jb
stc
insl
push
jo
test
jecxz
sub
add
lea
jmp
add
push
je
lods
sub
clc
sub
aaa
sbb
hlt
xlat
sub
sbb
cmp
xor
mov
dec
or
cwtl
nop
xor
loop
push
imul
mov
add
jecxz
xor
add
scas
hlt
pop
orl
lcall
mov
xchg
bound
inc
jno
pop
and
push
cmp
lret
jp
loope
loopne
push
mov
or
push
je
out
mov
popa
or
dec
sbb
or
iret
test
push
aaa
and
jnp
mov
jne
and
fdiv
ret
pushf
xor
add
mov
fidivs
xchg
sub
mov
jb
fs
ja
hlt
ret
jb
mov
stc
inc
mov
out
push
pop
sbb
in
mov
jecxz
outsb
cmc
and
loopne
leave
push
pop
test
leave
sbb
ret
xchg
mov
and
pop
inc
rcrb
xchg
vmovhps
das
sub
pushf
rclb
adc
mov
fsubrs
xor
xor
xchg
sbb
cmpsl
and
insl
mov
aas
imul
push
add
je
in
shll
dec
pop
mov
and
xchg
mov
or
jmp
pop
and
cmpsb
inc
jg
cmpsb
popa
sarb
out
inc
std
mov
cmp
cmpsb
clc
mov
cltd
mov
cltd
js
outsl
xchg
sti
push
jge
or
ja
repnz
cmpsb
push
scas
mov
push
mov
ja
xor
dec
ds
leave
dec
popf
and
imul
sahf
outsb
lds
add
cmp
jmp
mov
xchg
jo
or
dec
cmp
aad
outsl
ret
xlat
es
cwtl
jmp
cmp
fadds
adc
add
push
cmc
mov
xor
fistpll
iret
mov
mov
push
add
cs
sub
push
cmpsl
test
mov
test
pop
fstpt
and
sub
xor
sbb
mov
push
mov
fcmovb
int
jge
jb
and
insl
test
jle
iret
mov
fisubrl
cli
cmp
push
stc
xchg
gs
mov
mov
pop
pop
decl
insb
mov
pop
xchg
test
aaa
addl
aas
lds
dec
mov
clc
outsb
or
pop
iret
jge
add
mov
cmpsb
rclb
add
cmp
out
out
jecxz
ficomps
jmp
mov
in
push
cmpsb
aaa
repz
and
pop
cmpb
lret
push
and
sub
and
sub
jp
jnp
mov
jmp
outsb
mov
loope
into
out
cmpsl
dec
adc
ljmp
addb
inc
xor
xor
sahf
inc
arpl
cmpsl
stc
ret
in
push
mov
rcrb
aaa
pop
testl
sbb
hlt
mov
or
int3
aam
lret
lahf
in
mov
push
les
int3
in
adc
rcrl
call
notb
popa
adc
cwtl
pop
mov
mov
dec
mov
rorl
pushl
test
or
rol
mov
cmc
or
rcl
jb
and
test
popf
and
out
xor
dec
shrb
dec
int
insl
popa
mov
add
adc
js
xor
push
lds
add
sub
xchg
mov
ja
jmp
jle
push
into
cmpsl
xor
mov
cmpsl
data16
xchg
inc
mov
iret
in
cwtl
dec
int
enter
pushf
sbb
mov
sbb
imul
sbb
ljmp
mov
cwtl
movsl
leave
mov
push
dec
pop
int
jmp
subb
fcoml
ret
int
pop
adc
scas
sub
jbe
or
inc
cwtl
adc
dec
imul
inc
shl
sbb
fisubl
out
vpsubusb
mov
mov
jmp
xchg
popa
stc
test
imul
cli
jne
aaa
loope
inc
popf
jge
inc
test
enter
mov
sbb
mov
cwtl
bound
and
into
jno
inc
les
arpl
and
out
sarb
nop
inc
in
enter
jno
xchg
cwtl
xlat
mov
push
jno
gs
jo
mov
in
aaa
ljmp
push
sarl
outsb
xchg
jno
cltd
inc
mov
pop
pop
or
push
jmp
sub
pinsrw
mov
shll
test
pusha
push
out
or
push
pop
push
cltd
jmp
popf
les
or
xchg
dec
ljmp
sbb
jg
bnd
xchg
in
fnstsw
push
and
mov
pop
lcall
jbe
lahf
insb
lahf
pop
enter
es
fisttpll
lds
popf
xor
sub
sbb
sub
lea
fwait
mov
ljmp
adc
push
xor
or
mov
insb
xor
cmp
mov
mov
pop
jae
xor
jge
out
inc
fs
jmp
pop
jecxz,pn
jecxz
mov
rcll
dec
mov
xor
adc
mov
andb
mov
push
daa
lds
xor
pop
call
cltd
pop
out
mov
sbb
add
push
xor
cmp
push
push
push
movsb
idivb
in
sti
in
sub
inc
call
stos
je
pop
jno
ljmp
out
daa
dec
cmc
sbb
es
mov
add
les
fists
add
sbb
cmc
mov
or
adc
xchg
xchg
popf
xchg
jb
jo
cmp
lahf
dec
jo
xchg
arpl
shlb
addr16
aad
out
aaa
fs
ficomps
jge
add
jge
xchg
imul
inc
push
outsb
shr
sbb
sti
in
roll
imul
cld
sub
pusha
imul
aad
imul
js
js
sar
dec
sub
test
lock
out
sahf
test
mov
add
pop
cmp
je
cmp
xor
lods
inc
insb
adc
mov
jns
pop
inc
cmp
shrb
lahf
xchg
push
jno
adc
xlat
ret
popa
adc
mov
mov
pop
std
pop
mov
out
pop
std
xor
into
dec
out
inc
loop
stc
iret
jle
data16
mov
xor
push
push
pop
adc
scas
int3
pusha
add
cmc
shrl
adc
pop
rcll
insb
dec
inc
xchg
test
push
icebp
cmp
rorb
out
and
push
out
stos
jnp
jp
cmp
aam
xchg
pop
imul
xlat
cli
enter
jg
lret
push
jl
popa
lods
sub
loope
mov
mov
xor
and
stos
scas
mov
push
add
mov
cltd
pop
and
cmpsl
adc
fwait
ds
inc
sbb
icebp
mov
in
adc
jl
daa
cmp
adcl
dec
pop
inc
adc
jmp
push
fcomps
loopne
scas
push
cmp
mov
test
xor
add
sub
icebp
mov
rcrl
jb
jge
movsb
fcoml
insb
inc
mov
xchg
xor
jmp
out
sbb
xchg
jl
inc
xchg
xor
push
pop
stc
or
orl
cli
pop
pop
xlat
mov
je
shrb
pop
fsts
aam
pop
stos
add
sbbb
pop
shlb
dec
pop
xchg
add
adc
loopne
lret
inc
cmpsl
fcoms
dec
cld
les
imul
add
jle
add
xlat
fsubrl
mov
xchg
inc
cmp
jbe
daa
jns
fidivrl
jo
nop
and
inc
mov
inc
aas
cltd
push
push
mov
add
pop
xor
dec
pop
and
adc
inc
cmp
push
ds
sub
notb
imul
sti
out
jno
negl
jb
lcall
mov
inc
push
jbe
xchg
pop
add
jl
dec
cmpsl
incl
pushw
fwait
out
dec
stos
push
inc
add
shr
lret
cld
shl
dec
xlat
fwait
imul
aas
jecxz
cwtl
dec
mov
jge
lret
mov
mov
xchg
popa
rorb
outsb
pushf
jg
mov
inc
sbb
mov
sbb
pop
outsl
and
outsb
mov
push
gs
lea
pop
sub
add
fildl
scas
icebp
in
jge
xor
cmp
push
sti
nop
sarl
mulb
add
xchg
popa
sbb
xor
aas
sub
add
dec
add
fsts
xchg
adc
xchg
push
out
xchg
cmpsb
test
data16
loope
or
jmp
pop
loope
in
outsb
mov
aas
js
dec
sti
outsl
and
hlt
mov
outsb
or
mov
repz
xchg
movsl
ljmp
push
out
push
sbb
sbb
fldz
pop
or
cld
adc
stos
outsb
aas
stos
daa
xor
push
jno
fadds
xor
sub
cmp
lock
mov
pop
cmp
fistps
jns
pusha
mov
add
inc
ret
and
decb
mov
sbb
aaa
enter
inc
mov
lea
mov
out
xor
mov
jge
push
adc
jp
mov
cmp
sub
or
mov
xor
clc
lcall
sub
loopne
lock
mov
leave
call
aam
cmp
add
fnstsw
test
jae
or
add
inc
fdivr
sbb
loope
and
lret
mov
xchg
mov
lods
in
jg
je
push
fdivrs
mov
pop
shlb
mov
movswl
in
xor
in
mov
stos
xchg
loope
jae
out
xchg
inc
mov
push
push
cmp
inc
pop
mov
or
sbb
outsl
in
pop
xor
dec
cmp
pop
pop
sub
dec
jbe
xor
movsl
push
and
daa
aam
cmpsl
dec
push
dec
pop
xchg
test
loope
xor
pushf
inc
dec
in
add
scas
add
jmp
sbb
mov
inc
add
cld
daa
popa
into
idivl
rolb
movsl
cmp
push
add
sub
shll
lret
and
je
mov
jle
mov
int
jmp
ljmp
pusha
inc
mov
loope
stos
test
xchg
fimull
inc
push
jmp
xor
std
mov
jae
cltd
cmp
subl
dec
fistl
xchg
cmp
cmp
mov
push
and
xor
lcall
adc
xchg
sub
fisubrs
add
pop
das
out
sbb
call
ret
mov
arpl
pop
or
xlat
shl
mov
add
sti
adc
add
cmp
mov
call
mov
push
jg
gs
push
repnz
shll
dec
ret
subl
int3
mov
push
clc
xor
and
test
arpl
or
dec
rorb
inc
ret
xor
jne
arpl
addr16
rclb
test
push
pushf
xchg
dec
fstpt
shr
cmp
xchg
ret
lahf
mov
cmc
int3
xor
xchg
xor
int3
pop
pop
outsl
sbb
pop
jbe
push
dec
ds
fwait
xor
js
ret
repnz
mov
jmp
inc
sahf
cmp
div
fidivrl
imul
out
xor
shll
out
ret
jne
ret
addr16
pop
mov
pop
push
fs
xchg
inc
cmp
mov
in
outsl
fsubs
inc
mov
jbe
and
ds
repz
into
add
cmpsl
pop
adc
imul
adc
mov
mov
pop
jle
les
cmp
dec
or
cmpsb
dec
ret
pop
cwtl
mov
pop
out
inc
sbb
mov
adc
jl
push
test
xchg
and
bound
hlt
push
shl
scas
scas
mov
xchg
ret
push
mov
fnsave
inc
popa
lret
cmp
dec
or
inc
cli
inc
mov
inc
sbb
xor
hlt
pcmpeqd
in
stc
jbe
push
subb
cmpsb
lret
xchg
lods
test
lods
mov
jecxz
mov
das
repnz
and
roll
or
movsl
xchg
movsl
cwtl
push
fs
xchg
loop
push
or
ss
inc
ffreep
or
hlt
jecxz
sbb
push
cmpsl
lahf
dec
adc
xchg
dec
pop
iret
lahf
mov
ret
popf
popl
test
or
cmpsb
pop
xor
xor
push
pop
loopne
cmp
dec
jns
js
mov
push
push
dec
cli
out
orb
pushl
pop
dec
push
movsb
sub
hlt
ret
in
jge
xlat
push
rolb
sarl
es
sub
xor
imul
sub
adc
ret
mov
clc
repz
jnp
ljmp
dec
add
xchg
pop
and
push
pop
mov
stc
scas
out
js
sub
shlb
pusha
push
test
fwait
in
mov
ret
add
dec
lods
std
int3
popa
mov
jge
xlat
test
stos
push
data16
pop
aas
fstps
lock
add
xchg
lret
sbb
xchg
mov
add
add
add
iret
pusha
pop
mov
sbb
out
lods
xchg
fwait
movsb
xchg
popa
in
xor
mov
push
jg
adc
or
cltd
fdiv
inc
sbbb
xor
xchg
pop
add
jbe
push
ds
xchg
and
jp
inc
jmp
stc
xchg
cmp
and
lea
pop
add
lcall
adc
repnz
or
fdivl
mov
aas
xchg
mov
adc
adcb
jmp
ss
cld
or
fisttpll
lods
mov
das
cwtl
stos
cmp
mov
inc
lahf
adc
xchg
cmp
popf
insb
imul
xchg
mov
loop
xchg
dec
mov
enter
pop
subb
mov
jo
movsl
insb
push
or
mov
mov
cmpl
push
js
rcrl
pop
fisttpll
mov
aaa
dec
loope
fistps
sbb
cmpsl
outsb
cld
add
repz
test
int
pcmpgtd
dec
sarb
aas
fistps
aas
scas
jbe
pop
lods
dec
enter
pop
je
repnz
and
cmpsl
pop
add
bound
aaa
mov
xor
dec
inc
leave
inc
add
xchg
imul
sahf
push
ret
in
out
push
mov
cmp
jge
lret
cmp
jns
push
fstpt
fdiv
mov
pop
outsb
push
mov
mov
dec
push
mov
dec
fsts
icebp
js
shlb
data16
lock
lea
out
lds
adc
aaa
dec
mov
and
xor
dec
cli
pop
test
mov
pusha
daa
sbbl
fdivl
mov
fisubrl
adc
inc
dec
mov
es
icebp
dec
mov
dec
sbb
xchg
dec
repnz
dec
imul
dec
out
fidivl
icebp
mov
and
sbb
and
mov
popa
and
fldt
pushf
dec
or
xchg
and
dec
inc
negb
sarl
sub
dec
adc
cld
jno
rorb
add
or
inc
frstor
mov
aas
subb
mov
mov
out
shr
mov
xchg
in
stos
stos
push
inc
push
push
or
hlt
push
lcall
or
mov
jl
sub
add
mov
mov
rcrl
sbb
mov
popf
inc
ret
imul
sub
inc
insl
jno
fs
mov
jnp
inc
mov
cli
jns
jne
sarl
and
dec
popf
imul
in
rcrb
jl,pt
add
inc
pop
mov
sub
jmp
in
leave
arpl
stos
mov
ret
jl
popf
xchg
push
jg
jo
push
sbb
mov
sub
imul
xchg
sbb
xchg
jmp
aam
push
lods
xchg
add
pop
mov
shr
icebp
push
pop
adcb
sbb
mov
mov
in
xchg
mov
sbb
in
lahf
repz
scas
jne
add
lret
rolb
mov
out
mov
int
xor
pushw
cmpsl
cmpsb
testb
jl
push
aam
aam
jno
shrl
jle
jnp
mov
fs
mov
pop
rcrl
adc
sub
shrb
nop
fiadds
cmp
out
mov
or
jno
or
xchg
insb
aaa
sbb
notb
test
stos
jbe
jge
xor
sbb
adc
mov
adc
sub
shl
mov
clc
pop
addr16
and
sbb
lcall
cs
dec
lea
and
icebp
dec
mov
or
adc
fucomp
pop
in
push
es
ja
sub
ja
iret
add
outsl
push
xlat
nop
addl
fdivrs
push
inc
mov
adc
aas
dec
sub
push
bound
outsb
sub
jbe
js
call
test
push
ljmp
popf
jg
aas
and
data16
add
cmp
fdivr
cmp
pushl
cwtl
mov
daa
cmp
xor
mov
insb
xchg
and
xchg
push
aad
mov
sub
lret
and
mov
add
repz
das
jmp
aas
inc
in
mov
adc
jge
and
inc
orb
xchg
jae
ja
sub
bound
push
aas
out
xor
xchg
xorl
pop
mov
cld
dec
rcr
popa
xchg
fsubrs
cs
adc
mov
ljmp
mov
push
inc
xor
jmp
and
and
out
iret
ret
pop
jp
repnz
and
out
stos
shll
or
lea
fidivl
or
cmp
fsubrl
sti
push
jl
or
add
mov
jp
cmp
lret
push
mov
pushf
nop
sbb
sub
ret
stos
push
popf
sbb
nop
xchg
jp
leave
enter
pushf
cmc
mov
das
ljmp
adc
sbb
xor
mov
sti
rolb
test
rcl
ss
jno
mov
outsl
add
and
faddl
inc
sti
jg
dec
cli
add
inc
in
pop
mov
imul
push
out
adc
xchg
out
sub
push
xor
test
dec
mov
or
adc
xor
scas
js
fcomip
insb
daa
cmp
jecxz
js
xchg
sub
jne
pop
bound
fucomp
sbb
push
test
cmp
nop
mov
aaa
push
test
push
frstpm(287
sub
push
loop
cltd
sub
add
pop
loopne
mov
mov
rcl
mov
movsl
ficoml
jmp
inc
lds
or
cmp
cli
mov
xlat
out
lret
pop
shll
imul
add
pop
mov
and
jl
stc
lds
imul
xchg
jecxz
outsl
aad
cli
aad
pop
sub
shrb
jbe
jbe
dec
test
add
mov
rcrl
subb
fst
shl
push
and
fwait
movsb
lds
testl
sub
in
inc
dec
in
or
mov
sahf
loopne
pop
out
sub
in
pop
into
adc
jg
push
in
jg
in
movsl
imul
add
lods
es
cli
adc
jp
ret
sub
out
sbb
mov
lds
pop
stos
xor
xor
cmp
xchg
mov
mov
insl
imul
sbb
hlt
test
mov
movq
out
out
inc
add
dec
or
jne
dec
and
push
add
cltd
mov
test
gs
aas
cmpsl
xchg
jg
dec
sub
arpl
mov
call
mov
jecxz
xchg
and
adc
into
mov
adcb
pop
mov
adc
push
adc
aas
and
aad
das
mov
pop
mov
sub
xchg
adc
push
fnstcw
je
mov
xchg
sub
mov
rcll
repnz
in
out
sti
inc
les
inc
gs
jae
ss
fnsave
xor
push
aaa
inc
jecxz
jl
sbb
xchg
int
lea
vprotd
lea
cwtl
loope
or
sub
in
inc
jns
cli
rolb
and
cmp
cmp
shrb
inc
sbb
loope
dec
inc
iret
pop
insl
in
icebp
push
ficoms
popa
fistpl
sbb
addr16
es
jg
pop
nop
and
add
dec
imul
add
and
jae
icebp
dec
mov
loope
lret
or
loopne
pop
das
rolb
or
test
mov
inc
fiaddl
mov
sbbb
cli
xor
test
lea
jmp
add
pop
lret
cwtl
mov
imul
inc
shl
mov
clc
int
push
pop
test
xor
jb
mov
or
mov
sbb
stos
or
pop
push
ds
adc
xor
das
dec
push
insl
inc
fmuls
add
in
sahf
outsb
dec
jle
loope
mov
cmpsl
ret
xchg
sti
or
ds
inc
sub
outsl
aaa
cs
pushf
pop
int
cld
xorl
dec
es
adcb
ficomps
lods
lahf
add
and
out
cld
outsl
inc
push
insl
push
or
shll
and
sub
mov
jl
xchg
ret
sti
std
cwtl
je
lret
add
and
aam
mov
xchg
das
pop
mov
pop
or
jns
adc
fldt
rol
push
loop
fldl
adcl
fwait
mov
loop
sbb
pushf
sti
jns
lret
or
fwait
xlat
into
mov
sbb
idiv
lcall
ja
push
pop
xchg
jmp
jno
mov
pop
sti
xchg
push
in
inc
enter
imul
xorl
and
sbb
pop
adc
fildll
loop
mov
xchg
push
sbb
sti
pop
xchg
pop
pop
cwtl
and
and
jae
jns
add
repnz
out
add
cmpsb
push
js
dec
mov
adc
sub
clc
call
js
leave
in
pop
xchg
fsts
std
xchg
jno
ss
push
fmull
mov
sub
push
adc
pushf
adc
cmp
inc
mov
rolb
xor
add
not
arpl
xlat
mov
rclb
jae
and
lock
mov
push
add
arpl
aaa
jb
mov
mov
jecxz
xor
lds
push
int
jns
push
add
sub
inc
sahf
cld
aas
sub
push
xor
subb
pop
cmpl
cmp
out
movsl
arpl
shlb
adc
testb
sbbb
lret
jb
fadds
fiadds
adc
jne
xchg
lea
jno
push
mov
dec
push
and
rcll
test
clc
data16
flds
mov
inc
cmp
push
mov
pop
xchg
sbb
jb
jo
sub
jg
adc
jp
das
pop
test
test
adc
lds
jno
adc
push
sahf
jp
test
hlt
pusha
test
das
mov
pusha
divl
daa
push
push
das
pop
dec
in
cltd
rcl
or
add
or
ljmp
pop
lock
fcoms
jg
dec
repnz
sbb
xchg
mov
sub
or
sbb
das
inc
ret
roll
pop
mov
pop
add
sbb
and
cmp
cmpsb
inc
addl
pop
and
jle
imul
pop
loopne
clc
mov
sub
nop
and
xchg
jo
ljmp
test
or
into
or
fucom
xchg
mov
sbb
cs
rorb
and
loopne
pop
xchg
sbb
dec
icebp
rclb
nop
pop
mov
fisubrl
jmp
insl
out
imul
push
inc
sar
fadds
hlt
sbb
fmul
in
call
xor
xchg
lret
and
sub
cmp
push
and
movsl
jl,pt
ljmp
xchg
jne
out
out
inc
sbb
clc
fsubl
xchg
xchg
pop
xchg
sbb
sub
cmp
sbb
push
pop
push
dec
adc
dec
les
inc
daa
loop
rcl
jno
inc
cwtl
in
sti
idivb
jl
inc
stos
and
mov
xor
int
mov
or
aad
fadd
mov
jp
imulb
sbb
addb
test
fstps
les
int3
bnd
sarb
adc
jecxz
inc
xchg
sbb
int3
sti
xchg
jne
mov
je
adc
dec
xor
push
jno
xchg
push
data16
fwait
add
dec
xchg
mov
icebp
mov
xchg
dec
cmc
pop
jle
decl
mov
sub
xchg
mov
call
xor
mov
push
cmp
fdiv
cmc
add
imul
idivl
jne
fnstenv
outsl
aaa
mov
inc
inc
lret
cli
aam
clc
dec
jns
xor
addr16
xchg
cmp
jbe
lock
xchg
fwait
sar
pop
out
push
add
inc
pop
nop
jl
movsb
sub
addr16
xchg
jg
mov
testb
int3
jne
popa
lret
mov
mov
sbb
mov
scas
push
add
push
jo
jnp
shlb
jae
xor
pop
add
adc
jg
scas
adc
push
rorl
mov
jl
orl
aad
xor
call
push
in
and
xchg
loop
mov
loope
push
imul
sub
aas
fildll
neg
inc
xor
jge
cli
sbb
add
xor
dec
sub
data16
pop
dec
in
std
dec
loope
addr16
mov
popf
lahf
in
outsb
push
cwtl
cltd
pop
rol
ljmp
scas
xchg
jbe
xlat
es
dec
xchg
int3
cmp
or
inc
fwait
sub
sub
jns
rorb
out
xor
mov
das
mov
fiadds
inc
xlat
leave
jecxz
pop
pop
fcomi
xchg
pop
xor
repz
inc
les
mov
pop
mov
aam
jge
mov
add
xlat
js
push
pop
add
or
cld
into
xor
mov
xchg
and
jp
test
addr16
or
and
paddw
inc
cmp
in
and
mov
inc
lret
mov
cld
inc
mov
sbb
mov
push
orb
adc
decb
pop
lea
jecxz
mov
push
adc
add
xchg
xor
stc
pop
call
popa
sbb
arpl
inc
sub
ljmp
popl
clc
sbb
and
rcrb
lret
loop
incl
aaa
jge
cmc
mov
adc
call
into
and
iret
mov
mov
xor
add
mov
inc
add
dec
cmpsb
inc
out
aaa
mov
push
dec
int
dec
loope
ja
popa
movb
xchg
cmc
cmp
int
add
jno
pop
mov
bound
arpl
ficoms
popf
cmp
insb
cmpl
loopne
loopne
fsubs
aaa
ret
insb
js
lea
sbb
jg
pop
fdivrs
cmp
mov
loope
rcrb
push
cltd
xor
push
in
sarb
mov
xlat
fdivr
jecxz
adc
test
mov
mov
or
dec
loopne
in
call
test
adcl
cmp
mov
inc
push
dec
test
hlt
popa
cmp
cmp
or
pop
jb
sahf
in
mov
xchg
sbb
cmp
mov
aas
ljmp
jb
repnz
sub
push
xchg
ja
mov
shll
nop
lods
mov
dec
mov
sub
pop
mov
inc
mov
push
loope
push
lret
lea
mov
add
addb
popa
jg
ss
push
xor
pusha
sub
cs
mov
pop
data16
imul
add
jae
mov
fisttpll
scas
add
jae
xor
lods
data16
scas
fisubrs
rol
xchg
insl
mov
dec
mov
cmpsl
mov
pop
out
add
lahf
cmpsb
sbb
mov
lahf
aaa
ret
outsl
aas
idiv
subb
and
shlb
daa
mov
test
ret
dec
cli
xchg
adc
xchg
pusha
cmp
mov
cs
and
xchg
lods
adc
jp
bound
sub
pushf
pop
sti
call
inc
fsubr
test
sbb
xlat
das
cltd
lret
js
adc
faddl
cli
and
gs
cli
cmp
and
inc
jge
adc
hlt
in
arpl
jmp
add
lock
clc
cmp
lea
pop
adc
jae
xor
gs
out
loop
mov
mov
jo
mov
psllw
pop
lcall
xor
xor
fs
or
mov
push
popa
xchg
jb
pop
cmc
std
ja
lcall
out
pop
pop
mov
sahf
clc
mov
out
push
push
out
mov
xchg
pop
xchg
outsl
rcrb
cwtl
addr16
ss
lods
filds
notb
push
inc
cld
ret
loopne
lret
aad
dec
sbb
jmp
inc
and
jne
pop
push
push
push
cmp
sub
les
loopne
push
mov
sahf
cltd
ret
ret
popf
mov
je
addr16
dec
adcb
out
xor
daa
sti
ficoms
sbb
test
adc
mov
mov
enter
dec
mov
es
and
mov
sub
jle
cmc
lahf
and
xor
cmp
pop
or
mov
pusha
xor
lahf
fisubl
imul
mov
sub
ret
movsl
jnp
adc
xorl
in
and
aam
subb
icebp
xorb
xchg
ds
aad
add
ja
push
xchg
mov
js
sub
arpl
push
jns
mov
outsb
push
add
inc
pop
aas
loop
sub
adc
mov
fnstsw
xchg
ret
out
mov
clc
pusha
mull
insb
ja
in
lea
popa
push
ret
test
sub
mov
std
mov
mov
xor
or
loopne
jb
xchg
mov
adc
icebp
mov
jne
or
cmpsb
cmp
or
insb
xchg
sbb
push
adc
mov
aad
mov
dec
fsubr
lods
roll
jo
cmp
test
sbb
shll
sti
dec
xor
xor
mov
push
and
push
inc
inc
pmullw
hlt
inc
sbb
mov
push
mov
iret
out
test
test
ss
les
or
int3
loop
lret
adcl
inc
in
jbe
push
call
nop
lahf
inc
movsb
push
loop
jb
out
xor
sub
lret
in
add
mov
out
cmpsl
inc
addr16
out
shll
mov
mov
das
aaa
push
sahf
scas
mov
rcr
xlat
insb
add
sub
lcall
xchg
fcomps
jb
push
fcomip
test
rolb
cmp
outsb
add
test
cltd
popl
add
insl
stc
in
testl
outsb
lds
shl
nop
mov
adc
dec
rorb
and
sahf
jecxz
mov
inc
decl
push
mov
insb
jp
bound
adc
test
pushf
jne
ret
daa
fiadds
das
movsb
cli
and
sub
dec
ds
mov
jbe
lods
push
or
lds
aas
scas
out
push
push
test
in
insl
mov
popa
jb
xor
loope
addr16
or
xor
sbb
inc
cmp
fcmovnbe
add
notb
pop
out
cmp
cmpl
outsl
dec
aas
or
dec
jmp
jo
lods
jns
inc
loope
out
and
prefetcht0
push
insb
cli
mull
pop
cmpb
cmp
or
sti
cmp
call
add
sbb
dec
push
repnz
xchg
pop
sbb
sbb
add
loop
lea
ss
pusha
jge
into
test
jecxz
xlat
aaa
mov
sbb
jnp
mov
in
fisubl
xlat
push
lds
inc
ja
or
sub
pop
or
and
push
mov
push
and
and
bound
aas
out
mov
mov
or
adc
jae
xorb
push
imul
inc
push
inc
push
or
pusha
fidivrs
lods
adc
mov
or
mov
xlat
or
cmp
dec
ficoml
ja
sub
inc
sbb
lahf
das
imul
fcompl
pop
inc
push
ret
ret
push
jae
and
flds
loope
sub
aaa
inc
addr16
or
test
adc
cwtl
mov
pop
inc
movsb
jno
aas
xlat
pop
push
adc
add
pop
or
inc
push
sub
insl
mov
inc
jns
xchg
inc
xor
pushf
inc
scas
inc
lods
jle
scas
push
dec
lcall
scas
iret
add
int
popf
xlat
jns
jl
dec
cmc
sub
sti
xchg
push
push
xor
cltd
sbb
imul
push
das
outsb
ljmp
cmpsb
aas
movsb
pop
clc
and
push
adc
daa
inc
jne
into
sub
jg
es
sbb
dec
imul
or
sbb
daa
lret
and
fcompl
or
int3
mov
xorb
mov
outsb
push
xor
faddl
mov
mov
or
mov
jo
xchg
ds
pushl
jmp
push
mov
xchg
into
push
adc
mov
sahf
subps
imulb
rcrl
gs
adc
dec
mov
inc
ljmp
dec
mov
sub
xchg
repnz
call
jle
xchg
sub
in
cmpsl
pop
leave
cmpsl
inc
or
js
shlb
cmpsb
add
pop
test
daa
add
arpl
xor
shlb
nop
mov
jl
add
ljmp
movb
aas
xor
jne
jl
pushf
dec
imul
xlat
aad
xchg
fisubs
out
or
sbb
in
adc
pop
and
addr16
or
ljmp
dec
adc
ret
or
xchg
inc
lods
lret
adc
lods
or
push
fwait
mov
enter
mov
and
jg
fldt
or
mov
pop
lret
aad
cmp
jl
jmp
xor
pop
rol
mov
lret
adc
inc
push
out
sbb
scas
sbb
or
sbb
cmp
cmpsl
mov
pop
pop
stos
arpl
das
loop
into
fwait
mov
divl
dec
xor
xchg
mov
sub
mov
shlb
xchg
mov
mov
mov
xor
test
mov
aas
scas
dec
sbb
pop
push
mov
mov
cmp
test
fs
mov
loope
lods
jno
xor
lret
jne
into
sbb
shlb
xor
pop
icebp
mov
incl
stc
xchg
and
clc
cmc
rclb
stc
mov
lret
cwtl
and
push
test
pop
inc
movsb
scas
inc
jecxz
or
scas
xchg
adc
xchg
lcall
jecxz
mov
lret
ljmp
ret
mov
arpl
pop
clc
test
rol
dec
icebp
push
mov
push
add
inc
test
loope
mov
addr16
movl
lahf
jmp
fwait
sbb
sub
int3
jg
adc
fsubrl
lret
stos
sbb
out
mov
pop
inc
mov
jnp
sub
add
fdiv
dec
ror
inc
lock
mov
jne
push
jne
daa
or
notb
pop
cmp
ret
push
test
in
mov
mov
movsb
inc
xchg
lret
and
int3
mov
pusha
mov
push
aaa
jo
xlat
lods
fimull
cmpsl
in
std
rcrb
loope
out
inc
and
fisubrl
in
cltd
pop
xchg
jecxz
sbbb
sbb
xchg
xchg
dec
enter
cltd
movsb
push
and
push
mov
sub
mov
es
sbb
lods
or
xchg
and
pop
adc
xor
xor
std
in
dec
in
mov
fs
lods
sbb
repz
stos
shrl
insb
into
icebp
mov
lret
adc
lcall
lret
xchg
jle
push
pop
sbb
fs
aaa
shrb
xor
push
adc
loope
pop
nop
rorb
shrl
lds
cmp
int3
popa
jo
pushf
fnstsw
pop
bsf
dec
add
inc
movsl
nop
insb
push
hlt
mov
mov
mov
popf
fstps
jbe
je
xchg
pop
out
pop
dec
scas
mov
loopne
shll
js
mov
or
into
out
xor
jbe
pop
imul
movsb
aam
mov
ljmp
cltd
inc
jg
sub
fiadds
icebp
push
pop
fnstcw
mov
push
lcall
adc
sbb
cmp
jo
jnp
dec
das
jno
shll
les
push
sbbb
xchg
adc
pop
lret
add
push
fists
inc
pop
js
pop
mov
dec
inc
lock
xchg
or
jmp
push
addr16
insb
int
pop
repnz
pusha
and
mov
scas
xchg
dec
dec
out
mov
push
popa
and
cmp
xchg
pop
scas
jg
outsb
xchg
outsl
xchg
jmp
mov
push
shlb
pop
rcrl
and
aas
push
lret
mov
xchg
data16
decb
mov
or
add
pop
js
mov
pop
cs
fwait
mov
aas
movsl
out
popa
into
js
out
add
push
movsl
ds
or
mov
test
add
cltd
mov
jge
scas
pop
lret
push
aaa
jbe
out
pop
xchg
adc
fsubr
scas
adc
mov
leave
jne
dec
fdivs
das
dec
xchg
mov
rcll
ja
fidivl
and
dec
enter
mov
cmpl
cli
add
leave
fimuls
push
sub
enter
or
push
pop
in
jmp
in
push
outsl
mov
pop
test
mov
psrlq
or
lea
mov
fdivr
test
rcll
mov
dec
ret
xchg
pop
pop
lret
fstps
movsl
pop
dec
jo
mov
scas
jae
dec
bound
mov
and
insl
enter
xorl
mov
fldenv
inc
mov
push
sub
fisttpll
test
outsb
jl
mov
in
and
int
cmc
dec
imul
xchg
jle
sub
push
cmp
mov
mov
add
pop
fldenv
frstpm(287
mov
mov
orb
filds
pop
fcompl
lea
cmpsl
dec
dec
xlat
mov
stc
cmp
lret
ret
fldl
into
jle
cltd
and
sub
xor
mov
loope
or
inc
pop
ja
push
sbb
pop
inc
pushl
inc
hlt
outsb
add
sub
mov
lret
scas
lret
mov
fwait
and
test
pushf
icebp
cmpsb
gs
movsl
repnz
pusha
lahf
dec
stos
cli
xor
push
inc
aaa
pushf
test
leave
jp
pushf
push
imul
fcoms
es
icebp
jns
adc
mov
push
mov
jno
dec
lods
daa
test
mov
js
jmp
mov
ficoms
pusha
fsubrl
sbb
xchg
aam
pop
js,pn
xchg
mov
xor
mov
fdivr
sub
mov
or
mov
fwait
mov
mov
jge
insl
mov
bound
jae
pop
xchg
mov
shl
jp
or
mov
in
roll
ja
jb
in
out
mov
jne
gs
in
lea
gs
adc
xor
xchg
add
jl
fcmovnu
jl
jge
fisubrs
cmpsl
adc
cmpsl
jb
test
push
xchg
lods
add
cmp
pop
or
outsb
mov
xor
stos
push
fsubl
mulb
fldt
jbe
or
cmp
or
inc
addb
outsl
cltd
and
lods
fstpl
mov
mov
es
cmp
pop
cmp
test
mov
jecxz
stos
pop
enter
xchg
jl
fdivs
mov
int3
clc
pop
push
sub
adc
aas
inc
lock
jae
int3
mov
cwtl
xchg
ja
sub
inc
or
xor
ss
xor
lods
scas
movsb
push
pop
popa
lcall
mov
pop
andb
leave
test
cmp
subl
pop
inc
cwtl
lods
dec
icebp
daa
pop
dec
fcmovne
fnstcw
mov
adc
arpl
popa
enter
insb
data16
in
scas
pop
cmpsb
js
push
pop
push
dec
cli
insl
fimull
mov
inc
outsl
and
adc
jge
dec
or
xor
or
and
fcoms
movsb
fimuls
mov
fiadds
jbe
cmp
pushf
jae
xchg
xor
cld
add
leave
fs
into
and
mov
and
inc
xchg
add
bound
les
jne
mov
test
fiadds
inc
cmp
pusha
stos
sbb
leave
cmpsb
pop
or
mov
or
add
ja
push
sbb
dec
insl
mov
pusha
or
stos
aad
jo
sbbb
and
cmpsl
stc
xchg
fsubrs
mov
iret
xchg
test
insl
push
cmc
sbb
dec
jno
xchg
jae
or
and
add
mov
loop
jb
int3
call
sbb
fstps
imul
pop
or
addr16
movsl
xchg
mov
pop
rcrl
xlat
mov
je
scas
arpl
out
orb
push
in
mov
adc
xchg
iret
movsl
mov
dec
sti
test
in
mov
xorl
loop
inc
mov
sub
sbbb
loop
fwait
cwtl
xlat
push
mov
xchg
pop
orl
xchg
fcoml
jecxz
sahf
pop
and
push
aas
jno
outsb
rol
jp
test
add
adc
mov
xor
std
and
and
push
bound
ret
icebp
fidivrl
pop
ss
jg
cmp
or
fs
xchg
divl
pop
adc
jl
pop
lcall
mov
push
adc
dec
or
cmpsl
push
popf
rclb
imul
mov
lods
xchg
xchg
mov
in
or
adc
pop
scas
ret
mov
rorb
sub
pop
idiv
mov
adc
nop
lret
push
inc
xor
adc
test
jp
roll
ret
lock
sbb
out
fwait
int3
mov
lcall
mov
lock
leave
ret
jge
mov
gs
sub
pop
mov
or
fimull
daa
push
add
stos
push
push
subl
add
fadds
cmp
cmp
inc
mov
xchg
cli
or
loop
jbe
movsb
lods
inc
insl
ds
push
iret
mov
out
test
into
jbe
lret
xor
and
inc
sbb
cmpsb
flds
xchg
insl
add
das
mov
mov
js
pop
sub
repz
test
mov
xchg
mov
pusha
adcb
inc
xor
jbe
jae
add
out
enter
xchg
xlat
cwtl
clc
mov
rcl
imull
push
dec
incb
cmc
jae
int3
jno
fcomi
test
aam
repnz
mov
dec
pushl
xor
pusha
mov
and
mov
xchg
insb
call
dec
rorb
imul
fidivrs
cmp
push
sub
cmpsl
push
inc
add
sbb
movsl
cmp
pop
push
jae
mul
ss
rcll
or
inc
jo
pop
inc
js
popf
adc
jl
das
mov
loopne
repz
xchg
lea
cwtl
and
in
pop
lea
xor
add
add
leave
dec
cmp
pop
dec
shrb
mov
mov
push
ret
in
mov
daa
ret
xor
xor
mov
mov
and
bound
cmpsb
in
sbb
divl
add
pop
cmp
inc
lods
lret
mov
out
pop
shr
or
dec
push
cmpsb
push
das
popf
std
cmpsb
inc
push
ds
xchg
loope
and
fwait
dec
aas
outsb
and
aaa
je
cmp
loop
mov
scas
xchg
outsl
les
aad
pop
clc
shlb
shlb
adc
cs
aad
mov
repz
xlat
out
or
insb
xchg
pop
jg
fbstp
adc
cmp
mov
mov
jne
lret
fldenv
xchg
dec
sbb
shlb
jo
xor
repnz
popa
std
mov
add
xchg
in
js
lcall
mov
push
popa
outsb
call
popf
das
dec
int3
gs
sub
aas
int3
jbe
addr16
lock
outsb
mov
cltd
loopne
sub
mov
push
cltd
mov
pop
outsb
xchg
xor
dec
sahf
xchg
dec
fsubrs
int
lock
jo
outsl
push
cwtl
jge
lock
inc
dec
bnd
in
cmpsb
movb
stos
jno
lods
dec
leave
xchg
cmp
imul
int3
in
mov
in
fistpll
xchg
jmp
mov
incl
test
repz
cli
adc
mov
daa
add
mov
fwait
push
loope
outsb
rorb
or
xlat
aad
arpl
imul
mov
mov
mov
ja
std
push
insl
fbstp
push
mov
call
test
cmc
into
xchg
int
adc
outsb
rcl
mov
dec
xchg
mov
mov
add
pop
subb
push
xor
dec
imul
push
lock
or
pop
ja
push
shrl
ret
pop
popf
pop
mov
mov
add
push
jbe
dec
imul
mov
out
pop
cmpsb
fldt
pushl
xchg
mov
jo
cmp
lods
jg
iret
jl
xor
mov
xchg
jle
pop
mov
sub
imul
xchg
adc
pop
test
movsb
je
adc
dec
in
shll
pop
mov
xchg
nop
sarl
stos
div
push
out
dec
cmpb
ljmp
mov
pop
pushf
fcompl
jl
cmc
push
lds
les
xchg
cwtl
xchg
fistl
or
jl
push
dec
push
xorb
stos
or
and
sub
lret
rcrl
clc
mov
ficompl
push
stos
sub
aam
mov
stos
data16
jnp
fisubs
push
mov
add
mov
or
ficompl
mov
xchg
xor
outsb
xchg
lcall
js
ret
aam
cld
decl
jns
imul
ret
mov
shrb
aaa
mov
xlat
sub
stc
mov
xlat
mov
leave
or
push
sbb
xor
cmp
insl
fs
imul
dec
leave
or
dec
aam
pop
sub
jae
xchg
pop
inc
sarl
and
mov
cmpsb
mov
mov
xchg
add
jg
ret
sub
lret
mov
and
jp
push
jge
mov
sub
jns
insl
jge
andl
or
out
mov
jae
test
icebp
xor
sbb
mov
push
xchg
lods
xor
pop
leave
lods
mov
xchg
in
in
or
jp
stos
sbb
sbb
or
xchg
jns
jg
incl
mov
sub
lea
stos
mov
push
push
cmp
fldt
sub
pop
lock
inc
or
xorb
shlb
add
lods
dec
or
adc
xor
xorl
xchg
pop
inc
cmp
mov
mov
push
inc
cli
lock
jne
lret
out
outsl
mov
push
jb
mov
stos
fdivr
push
pop
popf
pop
cmp
je
jmp
jns
lret
gs
loopne
add
pushl
xchg
mov
xor
stos
loope
push
es
inc
mov
adc
popf
sarl
cmp
cmpsl
and
les
jmp
jmp
jnp
nop
jnp
inc
in
jge
push
jne
mov
inc
pop
stc
in
ret
add
in
pop
mov
mov
pop
and
mov
insl
inc
xor
mov
imul
lret
lods
stc
or
cmc
mov
and
int
push
sbb
int3
adc
cmp
or
movsl
push
sub
popf
inc
xchg
in
adc
rclb
jmp
nop
add
out
fidivl
cmp
mov
das
add
adc
pusha
sub
mov
dec
in
stos
cwtl
fucomi
out
cld
dec
je
push
sbb
push
and
popa
mov
push
xchg
cltd
fstpt
addr16
xor
and
inc
repz
mov
xchg
adc
push
add
mov
jb
mov
xor
les
jbe
add
pop
mov
xchg
push
adc
scas
or
lret
sub
xchg
adc
and
es
inc
adc
cmp
in
mov
and
adc
pop
fwait
mov
fdivrs
imul
cs
vmovaps
fisubs
loop
outsl
adc
popa
jp
push
jle
and
pop
cmp
fistpll
adc
pop
ficoml
and
cli
push
aaa
xlat
inc
lret
sbb
dec
xchg
ja
or
jnp
stc
or
aam
dec
insl
jo
sbbb
and
xchg
and
pop
inc
fidivl
or
push
and
push
lcallw
or
fistl
xor
sbb
ss
imul
sub
xchg
mov
mov
jl
sbb
cmc
mov
xchg
fdivrp
movsl
or
mov
xor
cmpsl
mov
jle
shll
add
mov
int
lods
inc
pop
sub
lcall
ffree
movsb
sahf
sub
inc
arpl
scas
imul
pop
adc
nop
out
add
sub
rorl
mov
cmp
hlt
xchg
push
scas
push
and
je
jecxz
movsb
mov
int
dec
mov
push
inc
lods
xor
enter
and
repz
dec
mov
mov
shlb
pop
xor
pop
xchg
cwtl
jbe
adc
sub
or
pusha
std
sti
or
or
loope
in
sbb
loope
jmp
jle
mov
dec
mov
sbb
push
pop
arpl
sub
or
test
mov
imul
jle
std
aaa
mov
in
push
xlat
mov
iret
sbb
xor
add
pop
fistps
test
rolb
add
filds
pop
fisttps
xchg
xchg
std
lret
and
mov
pop
dec
xlat
or
push
popa
leave
les
andb
cmp
mov
or
push
jno
sbb
shr
lahf
mov
test
pop
bound
inc
popa
sbb
push
pop
imul
repz
int
xchg
mov
xor
es
pushf
jl
push
adc
test
vmovntpd
cld
lahf
inc
push
nop
push
sbb
sub
rol
push
lods
and
add
sarb
mov
xor
in
sub
or
cmp
mov
enter
sahf
cmp
ljmp
push
cs
leave
sarb
rorl
iret
lret
ret
gs
fadds
mov
xchg
cmp
out
mov
mov
jl
sub
push
dec
and
cli
cs
adc
test
mov
lahf
pop
xchg
cmp
cmp
or
je
and
add
adc
mov
insl
int3
push
inc
xor
stc
shl
cmp
push
fsubr
pushf
sub
mov
and
dec
sbb
and
sbb
pop
pop
pop
xchg
cs
mov
xchg
adc
sub
subb
cmp
in
xor
xchg
fs
inc
in
inc
and
lcall
push
pop
les
mov
mov
popa
pop
cmp
adc
mov
and
mov
and
andl
cmc
inc
mov
dec
push
lods
out
ja
xchg
jbe
xlat
inc
arpl
repnz
lock
test
movsl
cmpsl
int3
ficompl
mov
sub
cmpsl
mov
sub
mov
xlat
scas
cmp
pop
lea
rol
mov
nop
dec
and
pop
jmp
mov
stc
adc
cmpl
mov
push
xchg
out
stc
cli
scas
jp
stos
cmp
out
add
adc
rcrb
lods
push
cmp
test
mov
pop
shll
aam
push
popf
psubusb
ljmp
dec
jl
gs
adc
std
fldt
lahf
pop
cltd
js
inc
out
std
sub
dec
test
lcall
stc
cld
sub
inc
jg
cmpsl
add
addr16
add
mov
inc
adc
or
lcall
dec
and
push
sahf
std
jo
pop
mov
mulb
jne
fdivrs
push
sub
pop
fwait
xchg
or
sbb
inc
inc
jmp
fs
cmpsb
and
pop
xor
fcomps
pop
jle
or
in
xor
sbb
daa
push
lds
xchg
mov
pop
cwtl
loopne
outsb
popa
hlt
push
cli
inc
mov
sub
sbb
fwait
pusha
sbb
xor
and
adc
mov
mov
shrb
and
es
cmp
cmc
sub
test
je
push
add
rcrl
repnz
bound
arpl
ss
hlt
pop
mov
sub
dec
fs
add
mov
aaa
xchg
or
jae
or
sub
js
lahf
xchg
cmpsl
fcomps
popa
fwait
adc
or
mov
cs
mov
jecxz
dec
aas
cmp
inc
inc
pop
inc
mov
aaa
outsb
xchg
leave
mov
fndisi(8087
arpl
jp
aas
in
push
into
add
xchg
repz
popa
jmp
scas
dec
dec
mov
imul
je
stos
dec
rcll
mov
sbb
push
push
ret
xchg
adc
hlt
out
push
jb
xchg
inc
bound
xor
sahf
cltd
xor
xchg
pminub
xchg
imulb
jns
andl
mov
xchg
stos
andl
sbb
sbb
lds
fwait
addr16
mov
out
xchg
and
mov
bound
mov
aaa
push
jb
fbstp
or
mov
pusha
push
xor
xchg
aam
mov
out
imul
jb
lods
stc
movsb
mov
ss
lret
out
into
and
adc
dec
movsl
xchg
pusha
pop
mov
lret
lret
sbb
adc
or
sub
loop
xor
sbb
xor
es
popf
adc
mov
adc
push
and
and
dec
shll
cwtl
add
xor
adc
sub
dec
pop
jne
in
test
xchg
fisubrl
pusha
or
cmc
xor
mov
sbb
push
aad
out
ret
cmp
push
xor
lds
xorb
gs
bound
xor
test
jne
lcall
cltd
add
das
decb
cmc
and
xchg
cs
cmp
iret
insb
jns
mov
pop
pop
icebp
inc
les
adc
pushf
push
call
mov
out
sub
cmp
mov
inc
rcr
movsb
subb
adc
cmp
cmp
rolb
nop
aad
xchg
or
jno
mov
in
imul
sbb
push
cmpb
mov
dec
push
jbe
mov
fadd
xchg
sub
add
les
lret
inc
cmp
mov
lock
mov
popf
mov
lea
icebp
scas
outsl
fnsave
int
stos
push
mov
roll
fidivs
repnz
int3
sahf
xor
xchg
xlat
jge
push
mov
out
cmp
push
cmp
xchg
je
pop
xor
shrb
jae
test
mov
xlat
loope
cwtl
aad
add
imul
pop
outsl
out
sbb
fs
loop
push
mov
mov
add
pop
insl
mov
fcoml
or
fisubrl
aaa
popf
add
xor
and
ljmp
xor
xor
les
xor
cli
outsb
adc
push
test
cli
movsb
push
in
into
pop
pop
ja
les
mov
mov
aas
xchg
lock
mov
xchg
inc
or
ficoml
lea
in
pop
jae
gs
pop
pop
leave
xchg
cld
dec
je
mul
inc
mov
js
ret
jb
mov
movsb
mov
mov
repz
les
test
jbe
in
sbb
mov
sub
xlat
xlat
scas
cmp
mov
arpl
adc
mov
stos
stc
es
lahf
sbb
add
xchg
jp
xchg
fprem1
mov
mov
adc
fs
xor
sbb
jae
outsl
or
divl
push
inc
in
jge
jo
in
sub
pop
fs
fsubp
add
cmp
inc
setns
in
aam
int
xchg
roll
sbb
out
out
fcmovbe
mov
dec
mov
cmp
sub
movsb
and
inc
pop
lds
aaa
jnp
jbe
cmpsl
or
sbb
in
fmul
loopne
sbb
lds
pop
lahf
jae
hlt
js
aaa
scas
sub
push
or
push
sti
js
pop
jg
mov
outsb
icebp
ret
ljmp
int
popa
push
aam
je
jbe
pop
les
sbb
ret
decb
test
sbb
and
jecxz
xor
test
cmpl
out
or
cli
orb
test
mov
mov
mov
inc
xchg
jbe
cmp
sub
lcall
pop
jnp
jbe
push
andb
dec
mov
out
inc
inc
dec
shlb
dec
xor
lret
mov
xor
pop
sarb
inc
enter
repnz
xchg
repz
out
call
popf
dec
dec
pop
dec
ret
stc
js
pop
stc
inc
bnd
dec
fiadds
bound
xchg
incl
add
add
mov
stc
not
std
xor
dec
add
mov
pop
jl
sarl
jmp
int3
dec
ljmp
sub
xlat
dec
pop
push
jnp
xchg
and
xchg
mov
mov
and
in
es
push
and
or
dec
fisubrs
stos
or
inc
repz
popa
mov
in
add
mov
sub
adc
add
mov
mov
subl
adc
insb
pop
andl
xchg
xchg
dec
xor
mov
mov
cmc
mov
mov
lock
and
xchg
mov
sbb
imul
push
aaa
add
jae
mov
xchg
mov
test
nop
mov
icebp
sbb
sahf
faddp
cwtl
push
mov
ret
cltd
sarl
lret
mov
cmp
pop
jo
pop
add
sub
movsl
sub
xor
es
push
test
cmpl
stc
dec
xchg
cmp
jnp
loop
jae
scas
es
mov
ficomps
jbe
and
mov
rep
pop
xchg
mov
sbb
inc
mov
loope
push
sti
lahf
loop
adc
xchg
cmp
popf
mov
cmp
fcompp
mov
adc
mov
movsl
das
shr
cld
test
pop
in
testb
inc
popf
clc
movsb
fdivl
mov
mov
inc
sbb
add
sub
xchg
divl
test
xlat
leave
mov
mov
insb
jmp
dec
inc
jno
push
lret
cltd
xchg
enter
xchg
stos
mov
in
ds
andb
enter
xlat
scas
adc
mov
js
add
gs
fnstsw
das
adc
ss
int3
cmp
or
pop
aas
loopne
lock
pushf
int
aam
bound
cld
mov
mov
aas
xor
test
xchg
jns
insb
inc
mov
pop
jp
jmp
or
jb
and
sbb
dec
shr
mov
pusha
int
push
lods
inc
aas
xor
loopne
inc
mul
inc
pop
mov
lret
mov
add
inc
add
and
pop
mov
test
adc
cmp
cmp
in
pop
xor
sub
add
sbb
cmp
xchg
pop
jl
push
push
add
or
imul
test
loop
fiaddl
cwtl
sub
dec
aas
mov
mov
mov
rolb
gs
cmpsl
dec
incb
popa
nop
popf
je
jns
ss
add
push
out
xor
mov
int3
lds
mov
pop
mov
movsl
jo
mov
aaa
sarb
clc
push
ret
xchg
pop
add
sub
in
sahf
call
lock
fdivs
mov
ficoml
dec
or
hlt
nop
pop
lods
lret
mov
into
stos
mov
adc
es
out
xor
scas
pop
jnp
add
push
cld
or
les
mov
nop
iret
les
ja
inc
loopne
add
ss
ds
mov
mov
icebp
push
inc
or
pop
sarb
sbb
or
aas
push
inc
xlat
mov
push
sub
ret
push
pushf
mov
mov
stos
call
insb
lods
sub
shlb
scas
jb
mov
sbb
cmp
mulb
cmc
or
mov
inc
jae
aas
dec
sub
lds
inc
jg
sbb
std
dec
or
ljmp
lret
push
ss
push
out
xor
add
inc
dec
jecxz
aas
fnstenv
or
inc
ds
sub
pop
jle
aas
adc
mov
sbb
std
sub
lock
jl
sbb
mov
subl
jbe
stos
ret
sbb
mov
xchg
mov
push
addr16
mov
fwait
pusha
fcmovnb
lods
mov
lret
dec
out
push
ret
dec
fs
jle
dec
sub
or
arpl
cmp
push
dec
sub
sub
jbe
and
push
outsb
adc
add
out
sbbl
fwait
push
pusha
pop
fcoms
loop
icebp
aaa
and
fsubrl
xor
imulb
push
aas
ret
pusha
jne
std
idivb
sub
sbb
xchg
push
fs
cltd
movsb
scas
nop
push
and
push
mov
inc
lock
imul
xchg
je
cmp
imul
lods
jae
out
mov
jns
and
adc
fdivrs
inc
mov
rcl
mov
dec
sbb
ss
sbb
aas
cmp
dec
jge
arpl
dec
push
add
stc
popa
lea
fiaddl
ljmp
lret
cmp
xor
jg
xor
inc
stos
ja
or
mov
mov
movsl
clc
loop
mov
das
push
pop
data16
into
jl
and
sbb
push
or
nop
sti
sub
or
jnp
sbb
nop
mov
sbb
sbb
jmp
loope
enter
popa
das
fisttpl
pop
jnp
aaa
jno
or
int
testb
lock
mov
and
push
mov
adc
inc
pop
dec
or
mov
sub
or
addl
gs
xchg
popf
adc
mov
mov
dec
xor
sahf
dec
sub
jnp
loopne
mov
hlt
clc
dec
cmpb
push
dec
mov
or
sub
out
rcrl
addb
push
jae
lea
cmp
into
cmovge
aaa
jge
sub
and
xchg
xchg
popa
dec
cmp
xor
std
and
scas
adc
push
ret
out
lds
sbb
xor
xor
jg
sbbb
test
dec
or
in
hlt
cmpsb
bound
or
mov
and
jns
mov
jbe
lret
push
push
push
fidivs
mov
mov
and
jle
push
sbb
clc
dec
fmul
call
xchg
sub
ja
fs
jl
out
stos
pop
fs
and
or
xor
or
hlt
in
dec
out
in
sahf
pop
pop
arpl
lock
movsb
fs
inc
pop
add
push
fdivl
bound
or
mov
or
shl
es
push
cmp
je
inc
mov
jne
sbb
lahf
pushf
cwtl
cli
push
or
das
call
cmp
fidivs
imul
or
mov
adc
outsb
scas
xchg
adc
movsb
stc
sub
mov
dec
adcb
loop
mov
ficomps
mov
cmpsb
inc
fsubrl
aad
in
notl
int
and
and
cmpsl
leave
xlat
cmp
jge
ret
or
xchg
out
hlt
adc
sbb
xor
jl
push
repnz
sub
in
clc
add
mov
mov
cmp
or
dec
data16
repnz
mov
icebp
movsb
daa
jl
and
push
add
inc
mov
aad
jl
jmp
or
inc
repz
dec
loope
push
mov
lods
ret
cmpsb
and
lcall
dec
inc
insl
cmp
pop
push
repnz
in
jmp
mov
adc
jp
cmp
xlat
mov
jle
add
xchg
mov
adc
pop
xor
mov
fcomps
mov
mov
sbb
scas
dec
xlat
push
lock
jns
mov
repnz
xchg
and
jl
je
cmc
jecxz
and
push
fistpl
imul
das
lock
jle
xor
xor
dec
xor
daa
imul
and
enter
adc
mov
xchg
out
enter
sahf
mov
pop
jmp
rcrb
lret
js
out
pop
push
popf
les
cwtl
hlt
pushf
mov
inc
dec
adc
fiadds
xchg
pop
iret
sub
mov
jne
jbe
sbb
mov
pop
mov
int3
es
mov
lea
out
in
call
or
mov
mov
movsl
loope
push
xchg
cmp
sbb
mov
aad
and
rclb
pop
and
pop
sbb
arpl
hlt
movsb
es
xor
cs
in
adc
pop
mov
and
pop
mov
hlt
jp
loope
stos
mov
jl
add
or
jg
dec
loop
outsl
cmpsl
fistpl
xlat
mov
popf
sbb
pop
cwtl
mov
xchg
cmp
xor
fprem
stos
fisttpl
push
add
js
inc
mov
pop
fcoml
mov
xchg
sahf
pop
jl
inc
sub
jge
or
rorl
pop
mov
negl
mov
clc
cmp
aad
add
call
lcall
int
ljmp
xchg
adc
fldenv
in
stc
pop
pop
out
fildll
je
push
adc
scas
add
and
sub
adc
mov
dec
in
mov
fs
lcall
inc
mov
popf
in
dec
xor
out
mov
stos
ror
in
cmpsb
out
repz
inc
imul
mov
add
push
and
jle
js
stos
pop
pusha
test
ret
les
adc
orb
mov
cmp
stc
repnz
out
push
loopne
movsb
xor
fwait
call
stos
fldenv
nopl
mov
dec
ret
arpl
in
dec
cmp
push
sub
xchg
frstor
jecxz
fcoml
push
testl
repz
sbb
or
adc
xchg
xchg
imul
or
inc
push
inc
fsubl
sbb
ror
mov
test
cmp
aad
popf
and
or
and
cmc
sub
shl
or
pop
xor
fnsave
lret
pop
insb
inc
lea
iret
call
and
adcb
pushf
test
aam
sub
cmp
pushl
push
add
xchg
mov
stos
in
hlt
jge
mov
pusha
adc
xor
mov
cmp
or
mov
lds
loope
inc
push
jl
inc
outsl
cmpsb
out
push
adc
mov
shlb
adc
jl
cli
fnstenv
inc
insb
mov
jg
aam
push
je
and
or
or
push
je
adc
dec
and
rorl
push
push
daa
and
pushf
pushw
sbb
xchg
xor
call
daa
icebp
shl
sbbb
test
jecxz
or
imul
cmp
xchg
aad
sub
sahf
mov
pushf
aam
sub
inc
add
push
imul
icebp
loope
aas
test
fmull
test
mov
push
ljmp
xchg
movsb
dec
fs
lea
push
std
imul
push
mov
xchg
pop
les
lahf
mov
pop
hlt
xchg
test
or
inc
and
test
adc
mov
cmp
jmp
xorb
movsl
and
sub
sbb
jne
imul
mov
loope
xor
ja
stc
jno
mov
ljmp
cmp
jnp
mov
adc
mov
loop
daa
cmp
fiadds
pop
sbb
dec
jmp
fldenv
add
mov
jne
lods
cmp
xor
push
lret
mov
stos
dec
push
notb
in
leave
push
rclb
fsubl
cmc
int3
pusha
inc
xor
adc
xor
dec
pop
loopne
add
xor
xor
popa
inc
sti
pusha
popa
mov
imull
fnstsw
dec
xor
call
fisttps
imul
subl
cwtl
in
dec
das
or
imul
pushf
sub
push
adc
xchg
test
jecxz
cld
cmp
mov
or
push
dec
arpl
sub
sbb
pusha
inc
add
sub
in
outsb
xor
adc
pop
mov
pop
xchg
cmp
jle
sbb
inc
push
roll
mov
dec
pop
call
mov
sub
leave
pop
sahf
jle
stos
sub
mov
sub
mov
xchg
mov
add
add
andb
mov
test
jmp
push
xchg
inc
loope
xchg
icebp
aad
inc
aaa
jbe
sti
push
ds
jnp
out
incb
dec
into
mov
mov
mov
repnz
jnp
movsl
sbb
ret
dec
xor
push
daa
jns
mov
scas
pushf
mulb
es
add
iret
flds
setae
or
inc
mov
mov
adc
je
push
mov
pop
xchg
in
sub
jbe
sub
pop
aas
mov
js
lods
mov
fstpt
out
das
gs
mov
shll
popf
push
mov
pop
mov
dec
lock
mov
cmp
jmp
sub
adc
out
inc
pop
scas
push
inc
icebp
lcall
std
xchg
std
rolb
add
pop
sbb
jb
cmp
jle
adc
ret
xor
jmp
or
mov
ret
aam
push
mov
mov
ja
add
push
sub
imul
out
jmp
mov
fstl
jle
aas
or
and
divb
pop
xor
cmp
and
jae
call
hlt
sub
push
ljmp
or
rol
jb
mov
iret
or
mov
pop
cmp
arpl
int
push
movsb
mov
xchg
aaa
jns
mov
xor
dec
cmc
adc
jns
inc
insb
fldt
out
jnp
jns
mov
mov
lcall
add
push
cmp
xor
and
into
ret
cmp
cltd
cmpsb
popa
inc
pop
add
inc
test
sub
arpl
sahf
in
std
mov
inc
in
test
mov
jge
pop
aaa
pop
test
push
gs
jle
lret
mov
add
cmp
insl
mov
mov
jo
rsqrtss
and
xchg
and
cld
or
sub
inc
inc
loop
lret
ss
push
jno
mov
add
pop
sub
jge
into
sbb
xor
or
inc
negl
push
cmp
pop
out
push
push
js
popf
cs
fstpt
rcrl
pop
in
push
mov
in
pop
xchg
xor
sbb
fdiv
ss
mov
outsb
mov
pop
mov
out
rolb
pop
ret
clc
pop
push
xor
leave
push
mov
add
pop
mov
jo
repz
inc
push
mov
adc
pop
lods
imul
je
mov
loopne
stc
out
outsl
lock
jge
addr16
sahf
std
adc
jg
jecxz
cmc
dec
sub
jl
sub
inc
add
fimuls
int
mov
aas
lcall
movsl
movd
daa
jb
dec
xor
popf
and
jbe
sub
popa
movsb
aam
in
stc
and
xor
jmp
mov
push
push
sbb
fistpl
mov
sub
loope
in
das
fwait
mov
inc
fnstsw
mov
sarb
popf
sub
fcmovb
jae
xchg
sub
dec
pop
rcl
xlat
stos
loop
mov
shr
dec
sbb
mov
mov
xchg
sbb
or
cmp
outsl
es
push
pop
js
pop
pop
add
sbbl
jecxz
sub
out
sub
out
cs
mov
add
xchg
mov
arpl
out
mov
jp
mov
jg
jno
mov
mov
add
mov
dec
xchg
roll
arpl
insl
and
xchg
xchg
outsl
xor
dec
insb
xchg
divb
mov
xchg
lods
and
mov
mov
pushf
pop
out
adc
insb
stc
mov
jmp
or
push
outsl
or
fwait
or
in
mov
rclb
outsl
jne
jns
jo
loope
aas
and
inc
es
push
loop
jno
out
cmp
xor
mov
pop
xlat
cmp
and
hlt
add
lahf
and
out
mov
adc
xlat
ds
test
out
xchg
mov
fcompl
xlat
test
jnp
lock
or
ja
push
adc
mov
lods
or
fsubrp
xor
sbb
jbe
cmpsl
loopne
push
push
pop
mov
loopne
adc
push
ficoms
sub
sbb
mov
mov
jmp
test
or
scas
xor
mov
movsb
mov
sub
data16
sub
xor
fsub
js
into
push
shl
out
mov
add
sti
or
jnp
pop
add
and
inc
test
gs
cwtl
sti
mov
pop
adc
aaa
cmc
push
gs
sbb
aas
addr16
or
sub
call
sub
sub
push
dec
jge
xor
dec
es
les
lea
mov
add
pop
jae
mov
push
outsl
and
adcl
pop
add
adc
jbe
imull
cli
push
adc
notl
sbb
jbe
fdivp
movsb
hlt
mov
mov
or
xlat
push
orl
scas
fwait
xor
daa
sbb
sbb
xchg
jbe
adc
xor
adc
icebp
push
dec
pop
repz
xchg
xor
movsl
adc
xlat
push
aad
movsl
inc
lcall
pop
addr16
jns
jge
sarb
out
fnstenv
dec
in
pop
mov
push
movsl
int3
cs
mov
enter
dec
aas
lret
lock
dec
fisttpl
xor
pusha
mov
test
inc
cs
sarl
scas
out
dec
inc
xchg
pop
in
or
adc
daa
mov
cwtl
fidivs
in
gs
inc
sarb
movsb
dec
xor
je
push
hlt
lock
bound
cltd
jl
into
jg
xor
ret
add
int3
and
rorl
push
sti
lahf
fs
adc
or
lea
jl
xchg
xchg
xchg
test
push
jmp
add
imul
hlt
icebp
pop
push
xlat
and
jne
dec
jecxz
push
cmpsl
mov
add
loop
push
cwtl
pushf
insl
cmp
xchg
inc
dec
les
jmp
xor
or
fisttpl
xchg
mov
insl
mov
pop
in
int3
sub
imul
dec
int3
cmpb
dec
mov
scas
lods
fistl
pop
aas
fidivs
jo
call
pop
ret
mov
sub
xchg
cmp
add
fsubrl
dec
ja
add
out
pop
jbe
test
adc
je
nop/reserved
adc
rolb
adc
dec
cli
std
dec
fistpl
pop
xor
icebp
dec
aas
rorb
out
aaa
xor
xor
fwait
pushf
add
and
pusha
mov
dec
out
jae
inc
into
lods
xchg
jnp
mov
fisubrs
cmpsl
or
sub
mov
repnz
dec
jbe
gs
inc
inc
in
jo
xlat
out
cmpsb
loopne
ret
je
mov
ret
inc
int3
movsl
fsubs
int3
fiaddl
nop
add
repnz
inc
xor
cmpsl
inc
sbb
out
pusha
pop
shll
push
sti
call
dec
pop
dec
lcall
pop
lcall
rcrb
icebp
sarb
push
dec
jnp
sbb
jo
mov
out
inc
cmpsl
stc
sbb
jnp
cmp
inc
mov
les
cmp
jmp
jo
sbb
mov
sbbl
dec
jle
mov
push
jecxz
lret
mov
inc
fldcw
aam
mov
push
sub
push
push
mov
andl
push
iret
sbb
fsub
jno
dec
inc
bound
and
cmp
test
lahf
test
pop
sub
leave
gs
movsb
je
jp
shlb
les
jne
stos
inc
dec
aas
imul
lret
cmp
and
and
lock
pushf
movb
mov
cmc
push
push
repnz
mov
out
xchg
adc
imul
mov
inc
sahf
cmp
pushl
sbb
and
call
lahf
icebp
lea
cmpsl
movsb
adc
jnp
iret
push
in
pop
and
into
dec
shll
mov
jbe
xor
push
repnz
pop
not
mov
dec
mov
in
ja
es
imul
les
mov
mov
mov
test
or
cmp
cmpb
push
mov
arpl
loope
add
and
popf
out
je
and
dec
repnz
fwait
mov
mov
add
cmp
sbb
sbb
sti
adc
cmp
and
jge
sub
lock
jns
cmpsl
jb
sbb
jle
cmp
outsl
xchg
inc
or
cmp
mov
das
sub
insb
adc
cmp
test
jp
and
insl
dec
pop
es
sbb
mov
imul
xchg
outsl
int3
sbb
adc
mov
in
scas
mov
inc
pop
std
in
aas
push
mov
enter
add
rol
inc
cmp
test
outsb
xchg
and
sahf
push
mov
mov
mov
in
test
into
aad
mov
adc
or
iret
xchg
sahf
cmpsl
jns
dec
adc
and
clc
mov
or
push
imul
mov
rorl
dec
pop
ret
sub
mov
cmp
jns
loope
pop
stc
int
mov
sbb
mull
cmp
push
add
les
data16
push
push
lds
mov
push
sbb
lock
mov
adc
imul
insl
iret
jmp
xchg
or
lahf
mov
pop
push
adc
mov
or
cmp
idivl
push
stos
out
sub
adc
out
xor
xchg
repnz
js
pop
cmp
mov
mov
push
mov
mov
gs
jecxz
jl
push
addr16
sub
sbb
int
out
mov
cmpsb
dec
call
in
xchg
cmp
cmp
pusha
loop
mov
inc
jae
adc
and
jno
mov
pop
mov
mov
inc
dec
out
jp
popf
lcall
xor
sub
push
in
nop
insb
loopne
icebp
movsb
pop
push
hlt
and
jp
lock
adc
xchg
mov
in
push
mov
push
in
add
jnp
and
mov
ret
push
inc
addr16
push
ret
cwtl
xlat
cwtl
pop
ds
stos
sub
cmp
xchg
adc
idivb
popf
add
pop
xchg
add
mov
jns
or
fidivl
dec
into
mov
call
out
rcll
jnp
cwtl
fiaddl
ficoml
int3
loope
sub
xor
fwait
pop
fadd
shlb
pop
mov
lahf
aad
or
sub
xchg
sbb
in
out
dec
lret
sub
sbb
test
xor
loopne
lret
cmp
das
push
mov
jle,pn
xchg
mov
int
fimuls
mov
inc
mov
dec
mulb
daa
xchg
js
pop
cmp
xchg
and
loopne
sbb
sar
adc
ljmp
scas
inc
fwait
mov
syscall
cs
lods
push
and
stos
in
mov
push
fs
fistpll
sarl
sub
scas
adc
pop
popa
and
mov
stos
incb
mov
adc
idivb
sahf
jge
clc
pop
arpl
popf
movsb
jne
add
shl
fcoms
cltd
pushf
pop
in
mov
push
lret
sbb
add
cmc
bound
testb
cmpsl
lret
inc
add
shl
mov
pop
sarl
mov
xor
jmp
jns
rcrb
pop
nop
ret
cmp
add
int
lahf
jno
bound
clc
mov
mov
pushf
and
jge
scas
inc
divl
mov
popa
jns
faddl
or
lret
in
js
mov
bound
and
cmp
push
icebp
push
jge
loope
inc
xor
cwtl
xchg
fisubs
daa
dec
dec
and
cmp
loopne
inc
outsb
popa
pop
mov
out
mov
icebp
dec
jne
stc
mov
xor
bound
ret
jmp
mov
out
flds
pop
test
cli
pusha
xchg
mov
dec
and
nop
xor
add
cmp
cmpsl
lret
mov
jnp
ds
mov
outsl
add
or
testl
dec
loope
in
mov
pusha
pop
dec
xor
push
fsts
jp
in
mov
mov
ja
xchg
dec
cmp
and
fscale
jns
loope
push
aaa
in
adc
ljmp
mov
pop
adc
test
adc
adc
pop
dec
or
jno
or
cmp
mov
lret
shlb
inc
mov
sbb
cmp
hlt
mov
cli
cmovl
fcomp
cmpsb
loop
cmc
adcl
dec
clc
stos
aam
push
jns
scas
mov
jmp
inc
data16
imul
fwait
mov
sbb
adc
lcall
or
jp
pusha
push
subb
rcrl
fs
in
addb
or
inc
movsb
push
adc
xor
push
jl
ljmp
subb
push
mov
pop
xchg
pop
adc
adc
lret
inc
cmp
mov
jb
mov
das
inc
aaa
test
stc
neg
test
mov
into
scas
dec
ljmp
movsb
jge
aam
rcrb
nop
cmp
inc
xchg
and
pop
add
dec
xor
mov
dec
call
or
mov
jnp
fsubrl
fstpl
xchg
in
push
and
sti
inc
pop
aam
in
push
add
test
cli
or
sbb
mov
jne
stc
pextrw
or
loop
xor
jbe
sub
ja
dec
cmpsb
cmp
js
aas
xchg
mov
push
adc
push
xchg
mov
jg
and
sub
scas
sbb
cmp
push
and
sti
sahf
rclb
sub
jg
ds
jecxz
adc
dec
inc
sbb
aas
pop
pop
mov
sub
mov
into
push
mov
push
push
orb
xor
negb
mov
inc
pusha
adcl
inc
jg
pop
inc
nop
in
pop
push
xchg
insl
ret
dec
jne
clc
pop
sub
setp
fsubrl
cmp
dec
xchg
out
xchg
jmp
xchg
lret
sub
mov
pop
mov
and
inc
pop
mov
mov
and
insl
mov
xor
inc
pop
int
pop
xchg
xchg
lods
out
xorl
mov
std
mov
mov
add
or
movsl
popf
mov
or
mov
lods
push
dec
sbb
lahf
cmp
jo
das
mov
pop
pop
or
pop
mov
pop
sub
pop
push
lret
xor
jno
subb
push
sub
and
xchg
shrb
adc
fists
test
dec
push
test
cwtl
cmp
inc
cwtl
inc
adc
arpl
mov
pop
in
into
lea
lret
js
cmp
xor
popl
fscale
jb
jg
lahf
cmp
push
jl
add
jns
cli
jno
push
mov
imul
divl
push
xor
mov
std
mov
inc
pop
adc
sbb
roll
mov
push
xchg
sub
sub
cmpsl
cmp
stos
pop
shrl
imul
inc
imul
mov
pop
inc
imul
mov
movsl
rcr
mov
push
lcall
push
lods
js
dec
or
cmp
sbb
rclb
imul
push
in
push
paddsb
outsb
enter
sbb
mov
cmpsb
dec
cwtl
mov
call
fsubrl
fs
test
dec
insb
std
jns
cmp
lea
test
imul
sbb
dec
mov
push
adc
mov
mov
stos
pop
pop
pop
pop
gs
aam
test
and
call
or
fwait
out
dec
xchg
pop
xor
shll
sbb
nop
std
inc
out
aad
scas
xor
cmp
xor
pop
add
xbegin
add
ja
push
shrl
fdivrs
cli
pop
mov
fnstsw
jb
mov
xor
cmc
mov
adc
xor
xchg
xchg
or
mov
cmc
popa
mov
dec
xchg
mulb
mov
dec
push
pop
loop
and
push
xor
int3
mov
mov
dec
push
mov
sub
shll
out
pushf
repz
mov
mov
repz
rclb
jae
call
jecxz
pop
mov
sub
cmp
mov
andb
push
jbe
push
jge
lret
imul
jno
mov
fsubrs
add
fnsave
pop
or
in
jns
push
jl
fmuls
xor
mov
js
xchg
xchg
lcall
mov
call
mov
inc
and
inc
xor
mov
hlt
std
int3
std
xchg
and
inc
push
add
sub
mov
mov
iret
js
jnp
mov
movsb
push
movsl
aad
aad
dec
xchg
push
jno
fidivrl
aad
pop
pop
mov
pop
shlb
mov
and
inc
xor
mov
dec
int3
jmp
enter
rol
movsb
cmp
push
mov
cli
fldcw
jb
fildll
cmpsb
dec
jecxz
jns
mov
sub
and
sbb
jo
sub
fst
pop
adcl
sbb
jp
and
insl
push
test
inc
in
push
jns
push
lret
inc
sbb
cld
push
mov
and
pushf
js
adc
or
add
mov
push
aas
pop
sbb
icebp
jecxz
test
lock
ss
enter
hlt
jns
adc
inc
fcom
push
in
push
adc
ret
mov
pop
das
push
xchg
cmp
adc
enter
mov
adc
js
fptan
or
xchg
mul
repz
in
mov
into
cmpsl
mov
adc
andl
call
xchg
cltd
ret
mov
inc
xor
ja
loopne
cmp
pop
mov
jl
mov
sbb
inc
stos
push
sbb
sbbl
rep
sub
adc
clc
mov
pop
and
cmp
adc
sbb
clc
push
push
push
outsb
jnp
je
stc
mov
mov
test
mov
movsl
push
sub
mov
cmpsb
add
or
cmp
mov
loope
test
dec
push
jge
mov
addr16
popf
jl
mov
ret
pushf
dec
sbb
rorl
pop
dec
push
stc
xlat
mov
test
pushf
mov
shll
cmp
sbb
mov
sub
inc
call
jne
testb
addr16
js
fnstsw
mov
adc
push
push
xchg
cli
pop
jl
neg
btr
andb
pop
mov
push
push
jb
aad
mov
or
or
cli
xor
and
icebp
test
and
push
mov
xchg
loope
les
rcr
jp
jl
xor
jbe
int
push
jae
sarb
push
sti
add
lds
lahf
sub
xchg
and
in
cli
mov
loopne
xor
inc
xorb
cmpb
fstps
add
leave
push
mov
mov
pop
lds
mov
into
add
mov
stos
pop
out
jno
and
fnsave
and
mov
shrb
xor
fstpl
xor
cmp
jnp
pop
inc
dec
shrl
out
mov
jmp
das
out
mov
fwait
and
movsb
stos
push
xor
xchg
dec
push
inc
cmp
les
fwait
pop
mov
mov
xchg
cmpsl
test
jmp
jo
out
in
das
dec
add
sub
loope
jb
xchg
sub
clc
fs
sbb
js
xchg
aad
mov
test
mov
stos
jl
mov
pop
rclb
push
inc
inc
push
push
sahf
movsb
mov
lea
sub
mov
dec
adc
pop
push
repnz
push
mov
cmp
xor
movsl
dec
or
jae
sub
dec
push
cld
sub
std
test
jns
js
out
mov
int3
dec
mov
insb
sbb
popa
adc
pop
imul
enter
add
mov
sbb
jg
sub
daa
mov
sti
lea
imul
sub
lcall
push
pushf
sti
lea
mov
popf
movsb
lahf
or
ret
jmp
arpl
mov
call
mov
test
pop
push
push
push
and
clc
and
dec
nop
xchg
leave
call
cs
int
cmpsb
dec
test
xorl
cs
mov
adc
dec
mov
cs
stc
add
insl
daa
call
sub
xchg
pusha
jge
mov
roll
int3
cltd
popfw
pop
orb
icebp
mov
xlat
nop
int3
test
jmp
pop
xchg
xchg
flds
data16
and
mov
jbe
pop
xchg
sbb
adc
mov
mov
rcll
xlat
ss
jg
jmp
iret
ljmp
fs
jb
add
call
les
mov
sub
ja
pop
push
adc
pop
movd
ret
xor
rclb
adc
fsubl
out
mov
mov
xor
cmpsb
jl
out
jmp
or
inc
icebp
sub
nop
test
mov
add
or
push
cmp
ja
xor
xchg
inc
add
ret
je
and
das
inc
lods
les
lahf
pushf
dec
ficoml
lret
mov
jecxz
add
ret
out
stos
vpminub
sub
jl
push
outsl
sahf
out
mov
sti
xchg
cmp
adc
fsubp
aam
sbb
sbb
push
lods
push
fldl
es
sub
lret
stos
sahf
dec
xchg
in
dec
cmp
push
xor
cmp
stos
stos
rol
out
outsl
imul
adc
pop
sbb
and
mov
aas
mov
roll
pop
gs
mov
seto
adc
pusha
sub
test
imul
stos
mov
mov
or
das
inc
pop
lds
add
iret
mov
fsub
push
stc
xlat
pop
rclb
mov
mov
pusha
addl
add
data16
dec
pop
add
popa
cmp
lcall
hlt
cmp
cmc
rcl
std
int3
mov
mov
gs
les
add
push
push
or
or
or
dec
verw
or
mov
in
stos
lcall
out
mov
or
mov
lods
jp
insb
arpl
data16
insl
ret
rcr
popa
cmp
pop
loope
insl
stos
lcall
sahf
pop
aaa
mov
adc
push
out
test
xor
adc
test
mov
or
int3
insl
stc
xor
inc
inc
ss
add
pop
xor
leave
dec
ret
push
mov
mov
xor
aad
adc
jns
jecxz
daa
inc
push
inc
jb
ja
gs
cmp
cmp
push
pop
xor
sbb
adc
scas
cltd
andb
shr
outsl
sbb
add
jg
ss
or
loop
sti
jp
pop
lcall
lcall
andl
jecxz
xor
scas
xchg
cmp
dec
ss
stos
mov
loope
ljmp
cmp
cmpb
mov
std
mov
push
or
cmp
and
xchg
test
out
jns
lods
dec
sub
stos
xor
push
pushf
fildl
test
lods
inc
in
fisttps
inc
dec
scas
out
mov
inc
arpl
sbb
mov
pop
adc
lds
mov
cmpsb
adc
dec
adc
or
stos
and
jp
fadds
ret
sbb
imul
adc
test
ljmp
clc
lds
pop
jl
addl
es
mov
mov
loop
mov
repnz
popf
add
repz
push
loope
mov
cli
call
pop
push
xchg
lods
cwtl
push
stos
xchg
je
push
push
ficomps
stos
test
stos
jnp
xchg
hlt
xor
loope
js
adc
movsb
stos
xchg
xchg
rclb
lahf
pop
jno
int
int
push
push
loope
add
sbb
test
xlat
cmp
lret
movsl
fimuls
jnp
or
xchg
and
pusha
inc
subl
dec
pop
sub
xchg
insl
sbb
ret
inc
mov
pop
mov
cmp
lods
daa
dec
mov
mov
out
pushf
jge
xor
mov
cmp
aas
cmpsb
clc
addr16
pop
mov
repz
push
adc
mov
std
cmp
jb
xor
fidivs
cmp
lcall
mov
jne
add
pop
fildl
jmp
movsb
pop
cmp
ss
jl
push
jo
sub
mov
pop
movsl
xor
add
and
rcll
icebp
and
add
sbb
pop
mov
add
aam
bound
out
into
stos
xorl
fdivs
fisubrs
mov
add
shl
add
sbb
push
aam
inc
jg
or
mov
mov
sub
adc
xorl
mov
leave
mov
mov
push
imul
mov
test
adc
xchg
mov
scas
sub
sbb
push
mov
cmc
and
cmp
inc
testl
lock
jle
outsl
mov
movsl
adc
adc
and
and
leave
add
xor
push
cmp
mov
pop
sub
mov
jae
push
xlat
roll
xchg
rorl
pop
push
lods
sbb
dec
and
out
fadd
ror
jmp
fwait
add
movsb
leave
in
fbld
in
cltd
mov
dec
jp
test
pop
dec
adc
mov
pop
scas
mov
in
sbb
xchg
mov
mov
outsb
push
cmpsb
dec
jns
repz
add
mov
insl
sub
mov
nop
cmc
int3
lea
data16
fidivl
les
sbb
aaa
ret
jns
push
fisubrl
jns
dec
add
fwait
pop
cmp
pop
addr16
stos
repnz
xlat
inc
lret
xchg
sub
insl
sub
push
or
push
mov
fistpll
cli
rcll
jp
xor
xchg
stos
fnsave
cmp
push
lds
dec
in
add
pop
orl
inc
mov
inc
icebp
into
mov
mul
jb
int
push
or
popf
movsb
dec
loop
jne
js
xlat
cs
icebp
mov
js
test
ret
insb
repnz
rcr
punpckldq
movsb
cs
xchg
and
mov
pop
popf
xchg
cld
mov
outsb
dec
and
dec
arpl
mov
rcr
cmc
jno
test
push
js
cld
lahf
leave
cmp
inc
cltd
xor
and
pusha
loope
sbbb
xchg
test
test
gs
mov
int
fwait
lret
inc
in
mov
jmp
xchg
test
xlat
mov
cmp
cmp
int3
inc
es
and
test
int3
stos
in
add
dec
push
mov
jb
or
sub
arpl
test
inc
mov
inc
je
sub
pusha
lcall
push
mov
xchg
lods
std
push
mov
arpl
gs
and
popa
js
cmc
push
add
xchg
repz
mov
std
fisttps
ds
inc
adc
adc
add
sbb
jp
jecxz
inc
add
and
adc
js
mov
inc
cmove
scas
sahf
jg
inc
test
mov
or
mov
mov
dec
cmpl
sbb
mov
jmp
xchg
xor
lock
stc
in
or
std
add
xchg
into
jb
push
push
xor
lahf
shr
out
push
xchg
stos
and
add
mov
add
sub
mov
and
iret
jecxz
and
sub
sub
inc
pop
sub
imul
dec
and
lods
lret
lods
or
cli
repz
leave
jbe
jp
xor
adc
adc
mov
and
adc
iret
push
sbb
mov
mov
mov
pop
arpl
cmp
xchg
lock
cli
lods
adc
mov
mov
lret
pop
xchg
popf
cmovae
jg
mov
adc
inc
cmp
lahf
jne
xlat
or
push
xlat
aad
or
mov
movb
mov
adc
arpl
out
int3
mov
mov
push
mov
cmp
add
mov
xchg
test
pop
or
mov
aad
adc
insb
add
adc
cmp
xchg
pop
jecxz
cmp
aam
loope
ja
add
jmp
fidivs
or
imul
mov
dec
rorl
inc
lahf
or
jmp
out
movb
hlt
inc
and
jmp
rol
sbb
fs
std
sub
push
add
jecxz
test
jg
std
adc
psubd
hlt
add
or
lahf
push
out
sub
xor
sbbl
inc
popa
jmp
jae
das
in
scas
mov
jg
cltd
sub
outsl
and
and
ret
mov
add
test
jg
jp
out
sub
inc
adc
mov
adc
ja
je
dec
jecxz
add
pop
xchg
sarl
ret
jmp
enter
fidivl
jl
xchg
xchg
xor
jo
cs
outsb
aaa
sbb
mov
adc
dec
jnp
sub
clc
mov
arpl
dec
dec
imul
sbb
fdivrp
adc
cmp
aaa
test
cmpsl
rolb
pop
into
inc
fstpt
inc
mov
mov
and
jno
lret
stos
aaa
jg
clc
dec
push
dec
xor
xor
mov
lcall
das
cld
mov
add
or
loopne
scas
lahf
and
pop
sbb
push
adc
adc
addr16
scas
inc
and
shll
fistpll
lds
cli
push
iret
push
insl
stos
and
cmpsl
loopne
adc
lods
mov
in
sbb
movsb
and
nop
loope
fcmovb
cmp
mov
add
pop
pop
cmp
xchg
scas
int3
adc
shll
lds
subl
insb
dec
lods
mov
mov
jl
add
mov
imul
and
xchg
mov
pop
lahf
jp
imul
js
pusha
push
mov
shlb
movsb
push
addr16
jl
push
pop
dec
inc
fdivs
pop
mov
or
cli
mov
push
cmpsb
mov
aad
ss
vandps
stc
adc
outsl
repz
stos
sti
and
jbe
sub
sarl
sarb
test
or
jno
icebp
mov
pop
mov
push
out
insl
ror
pop
adc
jb
and
jb
out
cmp
xchg
and
dec
jnp
xor
add
aaa
jecxz
xchg
inc
inc
mov
cmc
jae
jecxz
out
daa
pop
xlat
adc
test
pop
pop
stos
push
ror
xchg
loopne
pop
dec
cmp
adc
in
pop
add
int
jae
jge
in
popf
mov
mov
loopne
xor
outsl
scas
xor
mov
add
adc
xor
sub
lds
nop
pushf
mov
jge
xchg
popa
rol
cmp
pop
cmp
push
jg
leave
sbb
jmp
jg
push
stc
add
and
xor
pop
scas
adc
push
mov
and
popa
mov
cmp
fwait
xchg
mov
sbb
into
sub
lds
jno
outsl
mov
lods
std
xor
push
scas
hlt
mov
pop
in
push
popl
mov
int3
sub
mov
mov
xor
and
jle
ja
and
lods
ficoml
mov
lahf
fbstp
cld
ja
push
mov
ror
push
mov
lock
es
pop
arpl
cmp
rolb
sbb
in
dec
adc
insl
pop
adc
movb
jp
fdivl
mov
aaa
aad
idivb
out
sbb
xor
in
sbb
mov
cmp
stos
inc
pop
out
jl
adc
mov
adc
sbb
cmpsl
mov
rsm
dec
pop
out
js
lcall
xchg
sbb
cmp
hlt
xchg
xor
mov
jb
dec
xchg
push
pop
jle
xor
ja
lods
les
pushf
out
push
cmp
cmpsl
cmpsl
pop
daa
mov
and
xorl
out
xchg
dec
sahf
ljmp
and
dec
in
aas
stc
test
dec
inc
push
aas
cmpsb
rcrb
dec
and
lock
imul
cwtl
pop
adc
repz
cwtl
out
fmul
lea
xlat
pop
pop
jno
das
pop
push
scas
jb
ret
lret
cmp
mov
mov
pop
sarb
xchg
ret
popa
or
adc
in
cld
nop
out
cmc
orl
pop
dec
lock
leave
or
mov
cltd
push
ds
jns
leave
mov
repnz
pushl
dec
mov
xchg
and
xor
jge
push
adc
cmp
mov
cmp
pop
xchg
mov
nop
xchg
pop
mov
inc
jmp
in
loop
or
inc
insb
addr16
adc
loope
cmp
inc
ffreep
pop
in
out
insl
sub
push
push
mov
cmp
adc
pop
jge
jns,pn
sahf
push
fbstp
aas
sbb
adc
add
inc
xchg
dec
outsl
hlt
sub
ljmp
filds
lds
jb
test
js
ss
fistl
lods
inc
dec
daa
mov
or
dec
dec
movb
ss
cmp
movsl
push
andb
sub
sbbl
jbe
xchg
cltd
push
pop
mov
clc
fadds
dec
push
sbb
in
dec
jb
jg
in
and
hlt
movsl
call
shlb
lret
stc
ss
push
and
rcr
or
pop
cmp
loopne
jno
mov
pop
push
int
push
or
fwait
inc
pop
leave
out
and
xor
ds
fimuls
sahf
sbb
adc
pop
push
mov
imulb
enter
gs
ss
aas
stc
ss
mov
mov
inc
ja
jg
test
pop
push
ja
icebp
jbe
out
push
pop
test
push
mov
jl
fisubrl
pop
nop
add
arpl
imul
mov
dec
loop
adc
inc
pop
loop
in
sbb
clc
xor
mov
popf
inc
into
mov
fadd
in
push
test
and
mov
into
inc
icebp
push
out
dec
and
iret
das
jmp
add
and
cs
aad
jecxz
xchg
sbb
mov
xchg
dec
mov
dec
or
inc
mov
mov
insb
pushf
xchg
stc
lds
cmp
adc
sbb
addr16
cs
rcrb
ljmp
hlt
jns
movl
leave
das
and
or
dec
test
or
push
popf
daa
pusha
sub
sub
jl
decl
fists
or
dec
mov
int
mull
sbb
jge
jge
lea
jb
dec
dec
mov
dec
les
pop
push
sub
pop
fnsave
mov
xchg
mov
aad
xor
pop
push
mov
pop
mov
dec
mov
xor
add
xchg
popf
xor
lahf
cmp
sbb
add
out
aaa
push
jnp
in
cmpsl
sbb
mov
jmp
stos
or
push
mov
int3
cmp
and
imull
push
dec
imul
jl
cld
js
mov
gs
jmp
mov
pop
sub
xor
fs
mov
pushf
mov
jb
jae
mov
xchg
stos
jno
icebp
popa
sub
in
jo
fisttpll
lds
mov
cltd
das
mov
pop
test
out
jge
nop
clc
das
popa
mov
hlt
loope
jbe
imul
setns
cmp
jb
iret
xchg
dec
mov
icebp
jmp
jecxz
pushf
mov
insl
je
sti
fisubrl
add
sub
sub
lea
sti
inc
fnstsw
int3
mov
add
outsb
jp
outsl
cwtl
jmp
test
xorb
pop
dec
rcr
push
inc
jo
out
mov
test
out
sbb
pusha
ret
sub
test
outsl
cwtl
lret
fsubrs
aam
mov
xor
fimuls
jnp
mov
inc
pop
fnstenv
inc
imul
test
movsb
clc
test
pop
loopne
push
les
loop
dec
adc
sub
shll
loopne
in
inc
add
enter
aam
aaa
out
sub
and
out
jge
add
popf
and
mov
xor
jg
in
daa
or
mov
test
or
mov
or
mov
inc
mov
ret
dec
and
dec
push
add
daa
orl
mov
sub
js
mov
xchg
xchg
push
stos
sti
idivl
lret
and
xor
iret
popa
ja
imul
nop
call
lret
mov
ja
push
lods
rcl
xor
lahf
icebp
mov
cmp
or
xor
cmp
incb
jbe
testb
andb
push
scas
lods
jle
adc
jecxz
cmpb
clc
add
jbe
cmpsb
imul
and
cmp
pop
fisubs
cmp
sub
dec
flds
sbb
add
xchg
out
sete
cmc
ljmp
xor
add
ret
pop
add
or
sbb
add
mov
jne
mov
inc
sbb
out
sti
pop
and
mov
test
aas
push
jle
enter
lea
jns
fcoml
push
int3
jmp
mov
aaa
mov
xchg
out
sub
arpl
push
lods
out
dec
pop
adc
adc
adc
and
or
mov
arpl
add
test
ja
filds
push
pop
pusha
aas
mov
enter
icebp
ja
mov
mov
push
pmaxsw
scas
mov
and
leave
mov
je
test
rolb
and
adc
shrl
push
sbb
decl
movsb
xchg
adc
dec
fs
xlat
jae
rcrl
push
mov
xlat
pop
cmp
std
pop
and
inc
push
jnp
jae
aas
sbb
in
nop
stos
adc
jnp
add
sub
push
rcrl
pop
insl
sti
int3
mov
outsl
inc
nop
push
sahf
jl
jmp
xchg
xchg
in
sbb
cmpsl
add
ss
lahf
hlt
ret
mov
pop
push
es
xchg
or
orb
sbb
or
inc
jl
mov
test
mulb
jl
sub
mov
lahf
jo
xchg
cli
sub
aad
inc
cmp
fs
ficomps
push
adc
jmp
add
push
dec
dec
daa
or
inc
scas
inc
loop
into
push
shl
jp
mov
outsb
push
lock
xorl
mov
xchg
out
adc
pop
fdivl
mov
je
pop
ficompl
xchg
js
push
hlt
loopne
cld
xchg
ret
inc
ficoms
mov
lcall
mov
imul
test
xchg
imul
add
int
push
mov
test
into
lret
dec
jl
cwtl
shll
xor
insl
fcmovb
loop
fs
fildl
sbb
push
in
inc
adc
stos
xchg
pop
loop
sub
push
push
loopne
lods
cli
sub
repnz
mov
mov
movsb
aam
jl
test
cs
ret
or
cmp
cmpsb
mov
in
or
je
mov
call
sahf
xchg
fnstcw
jecxz
fcoms
mov
out
jmp
test
movsl
push
jle
aad
fmul
mov
orl
jle
or
mov
rcrb
add
inc
jo
mov
and
mov
fnstenv
sub
xlat
and
dec
in
stos
mov
std
hlt
cmc
sbb
lret
sub
mov
cltd
and
push
sub
clc
fisttpll
mov
mov
jle
test
fs
pop
call
or
fcmovbe
stos
sarl
push
cmpsb
mov
es
inc
dec
inc
lds
adc
push
sub
push
sbb
dec
inc
dec
imul
and
pushf
shlb
ficoms
mov
mov
in
insl
dec
cltd
frstor
or
out
xchg
iret
pop
mov
mov
mov
mov
test
pop
xchg
xlat
ret
mov
mov
mov
sbb
cltd
int3
jno
dec
sub
cmp
xor
xor
sarl
cmp
xor
incb
fs
dec
lods
jne
lock
clc
pop
mov
xchg
xchg
xor
lcall
pop
mov
jmp
loope
jle
jne
nop
das
jl
aas
ss
xchg
adc
cmp
mov
aad
add
pusha
loop
and
push
popl
mov
xorl
adc
pavgw
loopne
sarl
sti
push
mov
sbb
cmp
shll
aas
cmp
dec
push
xor
push
mov
sub
xchg
scas
sub
out
lock
or
xor
icebp
aam
and
mov
clc
xchg
adcl
aas
push
cmpsl
movsl
and
daa
adc
aaa
insb
nop
push
stos
push
lods
dec
pop
jg
xchg
mov
fs
loop
filds
arpl
push
leave
popa
xor
lds
sarb
loopne
adc
inc
dec
jmp
mov
mov
js
test
sub
stos
insl
xchg
push
out
cmpsb
mov
outsb
mov
mov
xor
dec
aad
mov
addb
and
int3
cmp
jne
popf
loope
loop
pop
movsl
pop
popa
jmp
insb
pop
movsl
adc
push
shl
push
or
shr
adc
push
mov
inc
jmp
cmpsl
mov
xor
rolb
in
jnp
outsb
or
decb
cli
jp
subl
xor
xchg
dec
inc
mov
je
js
xchg
insl
mov
and
loop
test
out
dec
int3
ds
test
pop
fucomp
incb
rorb
jbe
lcall
imul
add
adc
bnd
das
adc
lock
xor
mov
clc
popa
cwtl
fwait
mov
imul
test
mov
stos
xor
gs
mov
pop
adc
sbb
inc
pop
jae
mov
pusha
inc
icebp
or
out
and
repz
sbb
mov
xchg
inc
sarb
aaa
adc
ljmp
les
pop
stc
sbb
imul
rcrl
popf
ljmp
xchg
pusha
les
pop
mov
imul
pop
push
pop
mov
test
xor
repz
fidivrs
push
sbb
mov
lods
cmp
out
mov
mov
pop
pushf
pop
inc
and
and
jb
aam
js
bound
dec
add
jno
ds
jbe
shll
or
push
sbb
insl
test
testl
push
sahf
push
data16
xchg
movzbl
icebp
pushf
sub
int3
or
ret
mov
jmp
popf
jno
scas
ret
xchg
pop
stos
mov
jne
sub
scas
or
popa
negb
xchg
xchg
shrl
outsb
out
cmc
clc
dec
clc
or
add
sub
nop
sti
jl
mov
sub
sarl
fwait
fs
fwait
sub
mov
mov
inc
aad
cli
mov
pop
mov
cli
add
or
push
imul
jg
pusha
je
and
and
xchg
xor
std
les
dec
or
je
and
dec
ljmp
fildll
scas
test
mov
dec
out
scas
cltd
push
xchg
pop
sarl
cmp
fldenv
ljmp
adc
movsb
cwtl
cmpb
sbb
xlat
mov
pop
gs
push
out
push
push
add
xor
sub
xchg
jbe
and
ret
dec
adc
adc
ret
gs
push
xchg
or
sub
stc
fsubrl
push
xchg
clc
sbb
fsubrl
dec
fwait
leave
inc
pop
mov
push
sub
push
out
mov
pop
mov
shr
aad
movsb
sbb
push
mov
mov
cwtl
pop
mov
addr16
fnstsw
push
mov
mov
xchg
xor
jg
adc
inc
sahf
js
dec
mov
imul
dec
mov
decl
insb
pushf
jns
inc
pusha
shrl
dec
adc
lret
jne
mov
subl
adc
mov
lods
rcl
jle
sarl
and
push
cmp
shlb
je
in
out
jnp
push
out
aaa
cmpsl
xchg
lods
xchg
mov
cmc
sbb
dec
pop
sbb
rolb
repz
xchg
fidivrl
leave
push
mov
pop
sbb
mov
ret
jns
js
xor
push
mov
push
pop
rclb
test
push
or
test
mov
fisubrs
sub
push
bound
lods
mov
inc
adc
jg
les
fldenv
cmp
xor
mov
xchg
adc
arpl
clc
inc
nop
sbb
aad
dec
aam
mov
pop
call
add
mov
sub
pop
outsl
mov
push
data16
dec
jae
jp
fcmove
test
aam
and
aas
xchg
jo
xchg
lret
test
clc
cmp
push
addr16
push
jecxz
jmp
aad
enter
sub
loop
inc
loop
repnz
pop
loop
jb
sbb
sarb
in
and
ljmp
mov
repz
call
hlt
ret
loopne
imul
adc
hlt
das
loop
mov
imul
push
dec
inc
nop
mov
cmp
ret
cli
es
leave
mov
pop
push
fwait
es
rcll
or
xchg
jmp
jg
fwait
icebp
outsb
xor
rcll
aaa
adc
daa
sbb
and
or
scas
ds
aad
mov
cmpl
mov
adc
aas
mov
fisttpl
xchg
mov
or
mov
pop
insl
js
inc
sbb
add
or
pop
mov
dec
jle
jecxz
imul
push
push
mov
xchg
ret
aas
repnz
lret
xchg
bound
subb
pop
lahf
lock
orb
push
pusha
enter
push
push
mov
mov
addr16
cmpl
sbb
sbb
outsl
icebp
xchg
rclb
outsb
orl
mov
dec
subb
inc
aaa
sbb
call
push
cmp
xchg
into
mov
sahf
movsl
enter
push
dec
rclb
daa
mov
mov
cld
in
mov
out
xor
xor
outsb
movsb
shll
mov
cmp
popf
pop
sub
inc
inc
xchg
mov
add
xchg
cmc
and
aaa
inc
push
cmp
das
shrl
mov
cld
shll
icebp
std
dec
sub
es
arpl
lret
sbb
popf
rcll
std
fs
xor
sbb
xor
push
xchg
decl
dec
int3
stos
aas
mov
inc
icebp
leave
ss
add
mov
add
sbb
aam
jmp
pop
sbb
mov
xor
and
inc
add
and
dec
dec
adc
push
lahf
adc
inc
fadds
stos
sahf
xchg
outsb
scas
pop
ja
pop
mov
outsb
adc
scas
add
and
cmp
mov
cmpsl
stc
mov
mov
and
ficompl
push
xor
push
dec
mov
and
rorl
sub
mov
adc
test
xor
bound
sub
fisttps
jl
xchg
xor
add
pop
sbb
xlat
sarb
or
ljmp
xchg
xorb
into
je
mov
mov
mov
fsubrp
insl
push
xor
push
sbb
adc
enter
pop
outsl
inc
fcom
mov
pop
adc
sub
sbb
mov
mov
mov
imul
cmp
jno
sbb
test
es
xor
fidivl
fs
xor
xchg
imul
add
inc
push
call
jnp
xor
push
jbe
das
pop
fisubs
idivl
and
dec
test
dec
andl
int3
or
add
jno
imul
nop
lahf
jbe
mov
sar
and
or
inc
dec
inc
push
adc
clc
mov
ss
pop
das
mov
sahf
insb
iret
inc
mov
add
pop
int
fcomps
push
movsb
jle
aas
adc
xor
fisubl
ret
orl
jns
pop
adc
std
sub
cmovp
xchg
dec
dec
cld
outsl
mov
loope
xchg
pop
jne
lahf
mov
push
pop
mov
out
inc
jnp
xchg
add
roll
rol
cmpsb
and
ja
mov
push
sbb
popa
pushf
fwait
and
ret
jo
push
aaa
and
lods
sub
popf
jge
pop
shlb
leave
jo
dec
dec
jbe
mov
add
or
js
fs
xor
cld
mov
mov
xchg
hlt
out
daa
js
ret
test
roll
loope
lea
icebp
outsl
out
das
xchg
and
mov
lahf
imul
movsb
mov
xor
inc
into
pop
in
sub
add
sar
popa
in
std
jl
icebp
xor
and
sub
dec
cmpsl
aaa
xchg
mov
adc
sub
nop
movsl
mov
mov
inc
push
fdiv
push
test
sbbl
mov
lret
out
sbb
cmp
lret
subl
dec
loopne
pop
lds
data16
and
lods
ds
popa
imul
jle
in
insl
in
xor
sbb
dec
sub
mov
sub
hlt
add
pop
xor
mov
scas
jo
inc
movsl
sub
pop
sbb
jmp
dec
inc
dec
orb
xor
jl
jecxz
stos
shll
push
push
and
lods
cmp
xchg
push
cltd
xor
xchg
mov
je
dec
push
mov
inc
dec
cltd
lods
fsubr
test
xor
into
pop
cmpsb
inc
int
jp
jne
cmp
dec
cmp
orb
int
mov
rolb
mov
daa
cmp
inc
or
add
dec
mov
mov
lds
sub
cli
js
cmp
xorl
cmp
lods
and
dec
adc
push
xor
pop
cmp
or
loope
ljmp
sub
lahf
push
sub
fnstcw
cli
fnstcw
aaa
push
std
in
dec
stos
xor
push
mov
cmp
leave
imul
mov
push
xchg
hlt
sub
lea
adc
addb
push
loop
mov
inc
mov
mov
repz
add
mov
jae
adc
and
mov
mov
jp
pop
xor
push
inc
or
jle
inc
les
scas
jo
scas
nop
or
loopne
fistpl
rcrb
jg
je
call
cmp
add
push
stos
dec
mov
jnp
int3
and
add
pop
jae
cmp
cs
sahf
pusha
loopne
mov
pop
sbb
and
mov
iret
ficoml
fstpt
fisubrl
xchg
scas
cmpsl
or
pop
or
lret
orl
push
outsl
mov
mov
shll
imul
out
jo
jae
xchg
sbb
sbb
arpl
pop
mov
jmp
dec
mov
pushf
movsb
adc
addr16
mov
inc
aas
fs
movsl
mov
movl
lret
and
rcll
lret
lods
pop
gs
test
cmp
jo
and
out
sahf
xor
sbb
rcll
mov
xor
cmp
and
sub
lea
and
popa
mov
sub
jae
jb
loope
cmp
inc
jle
and
cmpsl
call
out
sarl
aaa
and
inc
or
jnp
mov
cli
cwtl
mov
and
cli
mov
pop
xor
mov
out
test
xorl
xchg
fstps
inc
jns
bts
sbb
adc
push
dec
xlat
mov
mov
inc
sub
ljmp
test
or
xchg
test
xchg
cli
sbbl
arpl
loope
and
mov
rolb
jmp
ret
mov
push
out
lcall
pop
outsb
sbb
sub
cmpsb
je
cmp
cs
push
movsb
std
dec
pop
mov
outsl
leave
lods
lea
inc
push
mov
mov
xor
in
ret
out
aad
in
dec
daa
js
adc
repz
sbb
icebp
sbb
std
pop
xor
cmp
shll
mov
cmpsl
addr16
jmp
jmp
in
mov
mov
mov
mov
lods
cli
jp
fsubrp
mov
stos
dec
mov
xchg
jle
push
jmp
dec
xchg
fcmovnbe
fisttpl
out
lahf
cmp
mov
in
test
fs
cmp
outsl
dec
and
xchg
aam
pusha
jge
jp
jo
jne
dec
pop
sbb
fwait
mov
push
push
fnstenv
lret
loop
xchg
mov
cs
sbb
sahf
mov
xchg
sahf
lret
filds
in
nop
push
lds
ret
lret
gs
int3
outsb
add
mov
ljmp
push
xorb
pushf
mov
outsl
jp
clc
loop
popa
aam
repz
mov
inc
icebp
enter
outsb
sti
sbb
out
or
scas
jmp
sbb
push
xchg
fwait
es
mov
std
scas
loopne
scas
js
adc
mov
js
test
sar
leave
xchg
sub
jmp
and
xlat
ss
jecxz
daa
mov
add
adc
jle
mov
lcall
and
mov
mov
cwtl
inc
xor
mov
sbb
mov
jae
push
icebp
inc
ds
push
lmsw
jb
jg
adc
cli
loope
out
cmpsl
push
adc
movb
sbb
dec
inc
rclb
fistpll
loopne
xchg
scas
add
ret
cmp
mov
mov
xor
jg
inc
push
mov
js
imul
xchg
decl
xor
rclb
adc
stc
popfw
xor
inc
hlt
adc
insl
stos
jne
adc
cld
dec
fucomip
test
pop
push
ss
int
lods
mov
in
pop
ret
loop
inc
jecxz
dec
fsts
movsb
mov
cltd
xchg
dec
das
es
sarl
jl
outsb
pop
pop
mov
repz
leave
jnp
pushf
jne
fisubrs
adc
mov
mov
mov
adc
cld
idivl
ret
sbb
aas
push
cmc
inc
ljmp
adc
jg
rcl
add
xchg
pop
and
pop
cmp
inc
xchg
inc
fmull
imul
movsb
sub
push
nop
push
sbb
mov
mov
fildl
xor
dec
sub
pushf
movsl
cmc
lret
jl
pop
pop
sub
and
or
insl
sbb
mov
outsb
outsb
pushf
inc
mov
aaa
sti
inc
jmp
jo
rorb
and
pop
cmp
lret
or
loopne
imul
xchg
xchg
sub
mov
bound
cmp
jge
insl
sbb
in
sbb
mov
cli
imul
test
scas
jmp
popf
mov
cmp
int3
sbb
inc
add
aaa
cld
or
dec
shl
negl
inc
popf
mov
add
in
pop
dec
inc
cmp
jae
sbb
pop
sbb
pop
or
arpl
dec
xchg
add
clc
enter
push
inc
inc
ja
push
pause
in
inc
xchg
testb
orb
sbb
roll
mov
xlat
xchg
xchg
and
ffreep
xor
pushf
mov
daa
pop
movsl
std
hlt
push
inc
xor
jge
mov
loope
inc
and
pop
pop
lea
dec
push
in
popf
mov
xchg
mov
jo
ss
jg
cmpsb
pop
pop
shl
mov
popa
out
mov
and
call
rolb
aas
popf
andb
push
and
mov
test
aad
jge
outsl
lret
mov
push
xor
inc
sahf
xor
inc
xchg
les
sbb
sub
ds
fbld
sahf
in
pop
in
pop
imull
lods
imul
stos
cmp
vcvtsd2ss
jle
pop
test
mov
shrb
pop
mov
sbb
sbb
dec
xor
sbb
lahf
test
out
and
rcrl
sub
and
jne
addr16
adc
outsl
bound
clc
sub
and
divl
aas
dec
lcall
push
or
jae
lret
in
mov
dec
sbb
jl
insb
scas
pusha
out
testl
sbbl
xor
xchg
aas
adc
outsb
xor
cltd
sub
dec
mov
mov
adc
mov
test
mov
push
cmp
inc
sbb
jl
cmpsb
xchg
add
ds
movsl
fsts
scas
hlt
cs
movsb
cmpb
lcall
pop
mov
jo
movsl
rorb
sbb
orl
jle
sub
jp
mov
adc
adc
push
repnz
sbb
out
aam
orb
in
pop
or
mov
mov
iret
xchg
inc
mov
in
flds
mov
inc
int3
pushf
int
cli
or
jmp
cmpsl
lret
hlt
or
sub
mov
add
clc
push
mov
insb
cmp
shlb
cs
jno
shrl
xchg
lock
mov
mov
pop
ja
push
jg
loope
mov
sbb
mov
sub
insb
and
sub
call
les
inc
lods
aam
mov
dec
test
or
and
xor
ror
gs
push
xor
popf
inc
pop
pop
lcall
cmp
adc
push
adc
clc
mov
cmp
addl
xor
push
rolb
pop
pop
filds
add
xor
aas
cltd
pop
out
mov
add
xchg
or
lods
cmpsl
cltd
movsb
lahf
mov
add
mov
adc
xchg
in
test
mov
adc
push
dec
mov
cld
jns
inc
loopne
popa
sbbb
sub
and
inc
repz
inc
jae
jle
cwtl
aad
in
pop
ja
dec
and
sahf
cltd
xchg
jb
stos
inc
loopne
rclb
xor
insb
ss
ss
rorl
and
add
bound
lahf
icebp
rorb
inc
dec
dec
daa
paddusw
faddl
int
aam
loope
sarl
add
pop
ret
pusha
pop
or
scas
in
ficompl
dec
add
cmc
inc
mov
inc
ret
cmp
pushf
dec
jbe
xlat
mov
inc
cltd
add
jnp
movsb
cmp
js
adc
pop
add
iret
mov
push
jle
mov
push
add
mov
xor
loope
and
mov
rcrl
lock
mov
pop
sbb
loop
dec
cmpsb
aad
cmp
push
out
addl
mov
mov
in
popa
andb
mov
and
ret
jno
addr16
add
fs
stos
push
movsl
daa
xchg
jp
inc
outsl
mov
lods
aaa
xchg
xor
jae
imul
cs
mov
pop
add
aaa
xchg
aam
pop
sbb
clc
stc
leave
repnz
js
in
jmp
and
dec
ret
xor
inc
test
inc
push
std
sarb
je
jno
lea
sti
imul
mov
xchg
repnz
mov
pop
mov
fs
aad
pop
sbb
push
and
xor
xchg
pop
sbb
mov
push
xchg
dec
stos
add
dec
xchg
pop
sbb
dec
mov
mov
xlat
aaa
outsl
imul
jge
sbb
mov
adc
je
dec
cmp
imul
fwait
sahf
mov
sub
pop
mov
dec
pop
adc
test
shld
xor
pop
data16
ljmp
add
icebp
clc
add
in
dec
gs
xchg
test
add
pop
dec
cmpsb
pop
dec
or
ret
test
dec
and
inc
mov
rolb
xchg
repnz
scas
rol
add
cli
jle
mov
xchg
js
xlat
fdivrl
pusha
xchg
xchg
test
jae
subl
jne
xlat
jmp
scas
sub
xchg
pop
fdivs
or
insl
sub
mov
sbb
mov
sub
lods
scas
sub
fidivrs
adc
loopne
jns
into
sub
mov
jnp
mov
ret
adc
into
into
or
shl
and
mov
inc
dec
xchg
in
movnti
push
push
mov
sub
inc
sub
mov
imul
mov
aas
js
leave
in
mov
sbb
xorb
mov
mov
repnz
mov
jno
fcomi
lcall
mov
jge
sbb
and
push
jnp
pop
lret
test
int3
call
mov
int
mov
adc
imul
dec
inc
in
jl
cwtd
pop
nop
push
sbb
pop
lret
popa
dec
or
loope
icebp
repnz
mov
repnz
push
sub
mov
adc
int
adc
cmp
aam
or
mov
xor
fcoms
test
loope
sub
jge
xor
fdivrs
in
outsl
es
xor
or
lret
or
mov
test
cld
inc
nop
fstpl
push
outsb
xchg
and
lea
or
xchg
mov
ret
mov
inc
out
rorb
add
adc
jle
dec
sub
push
inc
xor
adc
pop
xor
ljmp
ficompl
cmp
pop
sbbb
psubusb
setb
fiadds
les
pop
dec
std
faddl
outsb
pusha
les
in
push
mov
mov
adc
loop
xor
jcxz
lret
shll
and
mov
sub
cmp
fbstp
jae
sub
xor
ficomps
stos
adc
pop
in
ror
fsubs
bound
xor
aad
stc
jnp
dec
outsl
inc
cmpsb
xor
dec
cld
leave
xor
out
fildll
cmp
adc
cmp
jno
fidivs
cmp
inc
push
xchg
inc
insl
or
sbb
sub
pusha
push
xchg
mov
xchg
ds
pop
cmovbe
insb
jle
mov
sbb
push
out
xchg
cmpsl
stos
mov
sub
ror
movsb
push
adc
gs
mov
push
mov
push
push
push
divl
addr16
iret
inc
ffree
inc
push
jo
mov
int
dec
insb
clc
aam
jle
paddw
out
dec
cmp
cltd
mov
popf
sub
out
je
paddq
dec
cltd
mov
mov
jae
lret
cmp
jb
pop
sti
imul
insb
sti
xor
cmc
sub
push
or
fninit
mov
aas
push
sub
add
cmc
cmpsb
ljmp
popa
cmp
push
rcll
or
mov
cmp
outsl
xor
push
cmp
ret
cmp
adc
mov
jno
cmp
dec
mov
inc
jg
jmp
pop
stos
mov
mov
or
mov
push
pop
addr16
sbb
out
push
fs
push
inc
push
ljmp
xorb
sarb
mov
popa
jmp
sub
les
aam
cld
mov
decl
ss
clc
test
dec
sarb
pop
call
sahf
iret
rcll
add
in
push
cli
dec
hlt
and
sub
dec
xor
jne
leave
dec
das
cmc
ja
popa
fimuls
pop
dec
test
outsl
mov
cmpsl
or
xorb
pop
xchg
out
push
cwtl
mov
mov
and
and
ret
lret
sar
stos
cmp
mov
ret
mov
xchg
fcmovnu
in
and
mov
and
pop
cmpsb
movsl
mov
es
push
out
mov
mov
addr16
jle
pop
mov
popa
daa
out
sub
sbb
inc
mov
jp
xchg
pop
cmp
push
dec
jl
out
popf
mov
js
adc
or
xchg
hlt
iret
push
insl
cmp
cmpsb
scas
xchg
mov
dec
arpl
cmc
scas
push
inc
sti
int3
xchg
cmpsb
lret
jle
cmpsb
lea
adc
aaa
loope
clc
fwait
xchg
call
pop
fildll
es
xor
addr16
push
mov
popf
sbb
jb
mov
cmp
mov
cltd
pop
xor
movsb
lods
lahf
sbb
mov
push
sbb
jns
stos
cmp
push
inc
mov
sub
popf
adc
xchg
adc
push
jo
or
ds
sbb
imul
and
mov
push
push
xor
repz
rorb
fs
call
lcall
push
lods
decb
js
pop
add
sarl
stos
repnz
dec
pop
loope
sub
push
cltd
push
add
sub
xlat
inc
pop
mov
arpl
or
js
stc
inc
sub
fbstp
sub
loopne
mov
xchg
add
daa
loopne
in
pop
lds
lock
inc
pop
rol
mov
jnp
inc
insb
repz
add
adc
pop
mov
sbb
dec
fstpl
xlat
pop
jmp
dec
mov
jno
push
rorb
pop
xor
cmpsl
dec
jp
clc
push
cwtl
ss
fwait
fs
cmp
jle
adc
cwtl
or
push
or
ret
cltd
orb
mov
mov
push
sub
mov
dec
fists
into
fisubl
adc
push
cmp
mov
add
mov
jae
dec
jge
and
xor
pop
xchg
pop
fcmove
add
adcb
test
mov
jle
arpl
mov
sti
inc
xor
push
in
insl
pop
arpl
adc
and
fs
arpl
or
mov
xchg
aad
mov
shrb
push
pop
rcrl
test
shrl
pop
cmpb
jo
mov
mov
sbb
add
and
push
pop
mov
pop
aaa
mov
rcrl
jnp
mov
fsts
cmp
insl
adc
out
jne
sub
iret
rcr
cmp
inc
mov
fidivrl
add
fs
nop
mov
icebp
aam
and
jns
jnp
pop
mov
inc
dec
leave
sub
orl
xchg
push
outsb
ficompl
sti
and
sub
out
lods
adc
cltd
mov
je
ljmp
sub
fs
and
in
xchg
loope
gs
inc
jecxz
shll
cmpsl
sbb
dec
adc
xchg
mov
outsb
sbb
pusha
mov
ror
cltd
xchg
and
or
jmp
sub
xchg
mov
xchg
push
pop
or
dec
imul
aam
es
movsb
push
cmc
xchg
call
adc
mov
les
xchg
mov
or
xorb
mov
mov
jge
add
or
arpl
and
into
push
shlb
mov
and
xor
sahf
lods
xchg
mov
lret
mov
mov
sbb
movsl
or
push
pop
rorl
push
aam
cmpl
fwait
leave
lret
and
push
dec
mov
mov
pop
call
sbb
fisttpl
inc
xchg
cmp
pop
scas
out
push
jg
lock
insb
mov
push
jle
sbb
das
in
add
popf
mov
scas
xchg
sbb
jl
ja
cwtl
push
push
sahf
pop
push
push
arpl
push
outsl
mov
fistps
andb
ficomps
add
cltd
pusha
mov
inc
push
sub
adc
mov
push
pop
add
dec
push
pushf
inc
push
pop
push
mov
and
js
std
adc
out
stc
or
in
jmp
push
add
cld
lahf
or
inc
idiv
jne
inc
ljmp
xchg
mov
cmp
inc
dec
outsl
sub
loope
es
or
pushf
bound
shlb
xchg
mov
stos
inc
jp
inc
jno
adc
jle
add
popa
sahf
rolb
insb
cmp
jge
out
pop
fstpl
mov
rcrb
mov
mov
xchg
pushf
xchg
lock
pop
je
jecxz
jecxz
ljmp
outsl
pop
sbb
aad
cmpsb
adcb
subb
and
scas
das
xchg
in
xchg
movsl
adc
push
fs
fildll
pop
or
andb
in
insl
mov
mov
sub
xchg
xchg
push
add
adc
pop
sub
pushf
ja
sahf
je
popa
adc
lock
shlb
or
loopne
in
cmc
push
jno
mov
dec
adc
pop
pop
pop
dec
xchg
pushf
xor
repnz
mov
mov
je
dec
xor
mov
add
icebp
divl
scas
fwait
adc
out
popa
mov
xchg
inc
adc
sub
add
fisttps
xchg
jge
inc
mov
popf
scas
and
sbb
pushf
ret
into
mov
and
pop
mov
cmp
add
mov
cmpsb
sbb
dec
pop
push
push
pop
ljmp
icebp
push
adc
mov
jp
imul
push
xchg
add
arpl
mov
push
inc
lock
out
lods
add
pop
out
das
xor
vrcpss
push
mov
push
adc
rorb
daa
dec
bound
push
lea
adc
push
push
adc
popf
dec
fwait
out
mov
pop
in
dec
inc
mov
xchg
pop
and
inc
shll
out
imul
mov
mov
and
inc
mov
cpuid
push
sbb
ret
lahf
dec
xlat
shl
cmp
sub
call
inc
jbe
mov
repnz
cmp
shrb
xor
xor
push
fsubrl
pushl
pop
repz
pop
and
loope
fistpll
test
jmp
jb
clc
cmpsl
lret
ret
mov
orl
push
mov
sbb
mov
addr16
int3
xor
test
roll
js
std
add
int
into
lods
pop
rol
repz
fistl
movsl
mov
and
ljmp
push
testl
sti
adc
pop
mov
enter
cmp
pop
lret
test
insb
pop
inc
lods
lea
cltd
push
fdivrl
in
xchg
cld
popa
mov
das
mov
sbb
in
andl
pop
pop
mov
iret
mov
or
out
inc
ljmp
jo
dec
popa
jmp
sub
sbb
push
lahf
out
dec
mov
ds
mov
or
ds
inc
mov
mov
jns
push
jbe
pop
shrl
and
mov
in
jp
or
mov
xchg
cmpsb
in
mov
push
div
or
jo
mov
xor
mov
scas
add
push
or
stc
imul
lahf
out
negl
movsl
cmp
outsl
push
outsb
into
fs
xchg
ja
sbb
pop
jo
jo
scas
mov
xor
addr16
insb
inc
lods
test
pop
mov
sub
aad
mov
jnp
xchg
mov
adc
push
scas
test
ja
push
scas
cmc
xor
mov
push
or
stc
out
out
pop
movsb
loop
and
xchg
mov
scas
iret
fstp
dec
enter
jne
cmp
sub
push
loope
sti
cs
and
pop
sub
outsb
push
xchg
mov
mov
push
int3
movsl
out
ret
push
popf
and
in
rol
jb
daa
jge
lds
fisttpl
add
pop
lds
stc
lret
adc
cmc
lods
int3
in
int3
imul
cmpsb
inc
popa
cld
dec
cmp
lret
and
adc
cmc
jb
data16
iret
add
mov
insb
or
insb
test
pop
jle
jne
cwtl
xor
lods
fisttpll
jne
data16
push
cmp
test
gs
ljmp
jo
push
jnp
add
jae
in
les
mov
push
push
inc
sahf
mov
xchg
roll
fcmovbe
jecxz
fsubp
inc
rorb
mov
jo
or
xor
sbb
xchg
cltd
imulb
jmp
lret
xchg
stc
or
xchg
or
lcall
push
dec
dec
sub
sbb
aad
mov
jb
jns
mov
mov
mov
adc
popa
inc
pop
pop
lret
xor
negl
and
fisubl
rclb
repnz
mov
xlat
mov
mov
push
push
jno
enter
lods
xlat
outsl
mulb
lea
sbb
mov
test
jle
test
insl
iret
adcl
rcl
cmp
fs
es
incl
mov
lcall
mov
xor
repnz
es
std
cmpsl
and
fiadds
mov
stc
mov
push
mov
xor
roll
xor
flds
roll
les
push
pop
imulb
xchg
add
pop
mov
and
sarl
xchg
jge
pop
mov
ss
mov
adcb
jae
scas
jmp
sub
or
xor
enter
scas
xor
icebp
fidivrl
mov
add
addr16
popa
xchg
lret
pop
push
adc
fisttps
cmp
mov
leave
clc
push
in
inc
fs
sbb
sbb
xor
add
mov
pusha
fnstenv
push
dec
jae
sbb
mov
push
sbb
inc
push
jbe
out
aad
jb
jge
imul
jg
in
push
and
dec
xchg
and
sbb
xchg
pop
scas
rol
stos
lock
and
in
adc
dec
lods
fmull
mov
pushf
inc
sbb
mov
adc
rol
jo
test
jne
out
push
cmpsl
lock
data16
mov
push
adc
add
shrb
add
mov
popa
xor
fdivs
jne
mov
xchg
rol
or
loopne
push
add
imul
jle
sub
sbb
and
cli
and
outsl
movsb
mov
shrb
sbb
push
cs
xor
scas
jg
rcrl
mov
mov
xor
loopne
xchg
or
push
inc
ja
mov
sti
pop
mov
dec
pop
jge
es
pop
rcr
data16
fimuls
insl
mov
ret
dec
call
and
sub
mov
xchg
int3
shl
mov
rcr
jmp
loopne
lods
adc
sbb
sub
es
enter
std
jge
jno
xchg
cmc
jmp
enter
lret
pop
fldl
and
pusha
cmovns
fsts
lods
movsl
xchg
dec
outsb
push
test
mov
insl
inc
dec
pop
sub
inc
arpl
hlt
mov
push
xlat
and
mov
mov
push
test
sbb
data16
add
shll
pop
mov
pop
into
push
mov
aas
jns
shll
std
pop
mov
adc
pop
and
add
insb
loopne
fstpl
dec
xchg
mov
pop
daa
pop
mov
xchg
arpl
cwtl
sbb
out
dec
addr16
xchg
cwtl
js
xchg
xchg
imul
arpl
loop
ljmp
popf
inc
addb
insl
rol
repz
fimuls
test
pop
or
push
shl
xchg
inc
sarb
les
mov
jbe
in
ret
movsb
pop
frstor
shl
into
adc
mov
aam
and
inc
sub
inc
adc
pop
add
aas
je
jl
mov
cmp
sub
mov
mov
inc
mov
fsub
cmp
inc
pop
pop
cmpsl
lret
in
sub
leave
inc
push
inc
xor
ret
mov
xchg
adc
push
mov
lcall
negb
xchg
xlat
mov
cld
sub
mov
jle
mov
xchg
mov
fucomp
and
mov
jge
adc
icebp
notb
mov
out
adc
iret
jmp
mov
into
repnz
or
or
cwtl
mov
scas
gs
fstps
insl
pop
or
loope
fidivrs
xchg
lods
aas
dec
dec
ja
inc
inc
pop
jb
pop
cli
mov
mov
jecxz
mov
outsb
loop
mov
mov
and
imul
cmp
inc
jne
xlat
cmp
pop
movsl
cs
push
fstpl
xorb
sti
je
xchg
loopne
inc
lds
xchg
lcall
mov
setne
notb
push
sbb
inc
adc
popf
iret
repnz
mov
pop
push
mov
mov
or
mov
cmpsl
add
sbb
xchg
mov
movsb
jp
ja
sbb
imul
jne
sarb
mov
popf
leave
push
push
int
push
mov
adc
clc
mov
fsubrl
fcoms
pop
mov
repz
loope
lea
rol
push
or
mov
xchg
pop
or
pop
inc
loopne
push
mov
sahf
mov
mov
in
aas
push
shll
out
std
mov
std
rcll
jmp
ja
push
inc
rorb
mov
or
push
add
leave
andb
push
adc
fwait
test
jle
inc
sbb
cmp
mov
xchg
iret
xorl
aam
mov
shl
ret
inc
inc
mov
inc
es
pop
popa
cmp
or
bound
cltd
pop
xchg
data16
add
movsl
movzwl
divb
inc
dec
push
pop
repz
sbb
sub
fsubrs
and
scas
dec
pop
test
adc
cld
addl
idivl
test
sbb
jno
testb
inc
cmp
leave
mov
arpl
gs
incb
mov
add
cli
out
xor
jbe
repnz
lcall
cmp
sub
cmpsb
aas
std
xchg
outsl
push
aad
sbb
xchg
dec
jno
bound
pop
jp
xchg
test
aaa
xchg
xor
mov
shll
cmpsl
mov
mov
rorb
outsb
je
xchg
cli
cmp
hlt
xchg
jecxz
negl
mov
push
xor
pusha
pop
dec
inc
xor
xor
aaa
cmpsl
sub
or
jp
mov
adc
cmpsb
push
iret
fmul
ss
mov
jl
imul
out
scas
in
cmp
cltd
cmp
sub
push
jge
push
lds
ss
push
inc
out
push
mov
imul
adc
mov
push
outsb
jmp
jge
stos
fidivrs
cmp
insl
fdivrl
pop
mov
mov
cmc
outsl
outsl
iret
ret
mov
sbb
stos
subb
loope
daa
sbb
into
arpl
mov
pop
pop
mov
sub
pop
xchg
adc
add
push
dec
xchg
adc
jnp
mov
shlb
or
jne
int
sbb
daa
test
xchg
lock
xchg
iret
dec
aad
xor
fs
jae
cltd
mov
mov
xchg
inc
mov
add
cmpsb
pushf
rcrl
mov
aas
xchg
xor
cmc
sbb
test
daa
inc
push
scas
mov
or
es
mov
mov
inc
mov
fwait
pop
fmuls
or
loop
sar
mov
mov
jge
int3
mov
cmp
pop
xchg
mov
mov
mov
cwtl
push
inc
or
test
out
loopne
sub
into
ret
mov
inc
stos
mov
pop
or
xchg
and
ds
mov
mov
in
adc
popl
clc
sahf
push
adc
pop
mov
out
or
dec
push
call
cmc
push
repz
aaa
nop
loope
pop
notb
inc
outsl
push
imull
pop
sub
mov
push
mov
cwtl
ja
jae
fstpt
jae
adc
push
pushf
xchg
add
push
lea
inc
jne
test
sbb
cld
mov
mov
leave
push
sub
mov
sbb
test
and
mov
sub
push
adc
xor
repnz
inc
sbb
xchg
xchg
lret
jne
lea
mov
fnstcw
or
dec
xchg
mov
pop
jae
push
adc
adc
push
mov
loopne
push
mov
jecxz
jae
out
je
adc
dec
mov
cmp
xchg
hlt
inc
inc
fidivs
inc
pop
dec
aad
mov
clc
dec
lock
adc
mov
inc
push
inc
iret
andb
mov
mov
xor
test
gs
mov
out
sbb
or
push
xchg
addb
adc
outsl
xor
ret
pop
test
fadds
fdivrs
in
cmp
xlat
pop
or
shrb
add
jo
sbb
fwait
add
aas
in
xor
repnz
or
mov
stos
sahf
int3
andl
cmc
in
mov
pop
xchg
jp
scas
jno
movsl
gs
lret
push
testb
lret
xchg
pop
repnz
dec
lcall
lret
clc
sti
push
stos
sbb
jmp
icebp
xor
pop
mov
xchg
int3
pop
mov
mov
xor
mov
or
stc
mov
xchg
and
cld
mov
pop
es
add
sub
out
fstl
cmpsl
or
and
xchg
out
fisttpl
lret
sub
dec
cmp
mov
sti
rorl
add
jg
outsb
ret
fisttpl
dec
jnp
xchg
push
pop
cmpsb
sub
lret
jl
mov
std
jo
or
mov
xor
ljmp
fwait
push
lods
or
and
cltd
mov
add
fsubl
adc
test
out
stc
imul
sahf
fs
addb
test
ds
pushf
or
and
or
test
cltd
in
dec
loope
jo
mov
fstl
dec
test
jo
icebp
jbe
rcrb
stc
xchg
xchg
mov
outsl
in
stos
xchg
int
sub
dec
or
xor
jmp
ret
inc
add
push
stos
lret
cmp
outsl
push
movb
sub
xlat
mov
cmp
ja
aaa
call
lods
lret
dec
xchg
or
mov
ss
pop
insb
ret
jle
arpl
popa
mov
stos
adc
jecxz
lea
xlat
dec
inc
movsb
repnz
pusha
push
dec
enter
loope
sbb
outsl
push
test
pushl
cmp
je
mov
in
aad
jge
add
rolb
lcall
cwtl
rorb
arpl
inc
add
xchg
add
push
xor
into
xchg
shrl
add
stos
or
pushf
mov
out
pop
inc
pop
mov
inc
sbb
stos
stos
adc
or
mov
stc
push
std
loopne
adc
xor
jae
mov
out
insb
fcomps
loop
pop
pop
gs
pop
and
mov
out
and
push
cmpsl
mov
sub
nop
ja
mov
jg
mov
add
scas
inc
push
mov
mov
stc
lock
push
outsl
mov
scas
je
lock
sub
ss
inc
mov
cmc
ja
jno
movswl
es
push
xor
pop
pushf
mov
pop
dec
sbb
cld
push
xlat
rcr
sub
push
out
lds
lret
fidivrl
scas
cmp
mov
jp
jae
push
push
fdivrs
push
lds
filds
shl
repnz
sti
sbb
cld
xchg
jle
cli
mov
jmp
and
lcall
add
scas
decl
rcrl
sbb
jnp
add
add
dec
rcll
push
mov
inc
lahf
leave
dec
inc
mov
outsb
call
fstps
ficoml
je
or
push
cli
dec
ja
scas
push
pop
popa
icebp
add
adc
orb
pop
sub
scas
fs
bts
pinsrw
mov
push
sti
sbb
pop
loope
scas
in
subb
out
out
cmp
jns
movsb
jno
cwtl
pop
mov
add
cltd
mov
rclb
inc
js
nop
inc
into
sbb
dec
push
rorl
call
subb
in
pop
jns
stc
pusha
push
pop
int3
rorb
hlt
jmp
jne
loope
cmp
sub
std
repz
fcmovnu
xor
cwtl
repz
es
aaa
std
adc
insb
push
cmc
pop
mov
insl
mov
jb
das
mov
orb
sbb
aam
adc
imul
sub
aaa
or
or
push
int
xchg
sub
les
movhps
data16
pop
jmp
inc
and
and
pusha
xor
mov
add
das
int
fwait
push
push
fnstcw
std
adc
addb
sbb
outsb
dec
fsubr
scas
ret
das
cmpsb
imul
cld
jnp
mulb
add
test
fwait
js
pop
into
cmp
pop
negl
xchg
jmp
and
ds
les
divl
jo
es
dec
xchg
adc
aaa
jbe
cld
jb
lcall
insb
or
mov
aam
mov
adc
insl
mov
xchg
xchg
lret
xchg
cmpsl
sbb
mov
push
mov
fwait
inc
add
scas
dec
cld
cmc
sub
lods
fistl
jge
sti
pushf
adc
sub
out
ficomps
scas
loope
jmp
lods
jnp
lods
jbe
pop
fstpt
mov
push
ret
sub
mov
mov
cmp
gs
cltd
movsl
sbb
adc
pop
push
or
cmpsb
mov
jnp
je
and
shll
test
sbb
xor
in
inc
fcomp
adc
add
mov
bnd
jb
std
arpl
cmp
push
addr16
sub
pop
dec
xorb
mov
jb
pop
mov
adc
mov
add
cmp
mov
cmp
es
loopne
or
es
dec
dec
and
jns
movsb
push
jns
sub
into
push
push
roll
fwait
and
stos
adc
dec
inc
dec
hlt
add
inc
mov
shl
mov
sbb
loope
adc
nop
dec
das
loop
inc
push
lcall
cwtl
aam
push
mov
mov
cmp
fildll
push
movsb
imul
fisubrs
add
je
andl
lcall
inc
pop
jl
in
insb
mov
adc
mov
mov
test
mov
and
adc
or
sbb
sub
or
xchg
pop
inc
xchg
call
xchg
ljmp
mov
rcrb
mov
mov
pop
fdivr
stos
aam
jne
xchg
fidivrs
jmp
cwtl
dec
and
mov
pop
test
cs
dec
in
inc
popa
sub
cwtl
aaa
nop
sub
jnp
call
iret
cld
ror
sbb
jmp
in
popf
sbbb
push
xor
cld
jg
jo
hlt
cs
jne
lock
mov
mov
cltd
cmpsb
stos
movsb
rcrl
mov
bound
ficompl
mov
jecxz
insl
add
shlb
mov
popa
dec
sub
adc
xor
xchg
pop
lret
cli
mov
lcall
das
mov
mov
fistpll
jge
scas
sub
push
inc
out
xor
cli
int
and
jg
out
loop
xor
addr16
outsl
pop
rorl
inc
mov
ljmp
fcmovb
mov
mov
mov
ss
xchg
dec
cwtl
test
jle
lock
dec
adc
rcrl
in
fldt
push
je
jge
xchg
movsl
pop
dec
pop
addr16
jns
add
imul
ret
jl
cli
xor
in
mov
daa
cmp
adc
xchg
cli
push
icebp
subl
sub
push
aad
sub
xchg
fstl
and
inc
dec
lcall
pop
sbb
pop
cmp
adc
push
xchg
add
xchg
push
call
subb
cmp
push
daa
cmc
mov
mov
hlt
cvtps2pi
cs
loope
mov
push
jo,pn
mov
pop
icebp
add
jae
adc
loope
iretw
fldenv
and
out
aas
cmpsl
dec
std
outsl
js
cmp
out
xchg
lds
sub
jb
gs
sbb
sub
dec
nop
xchg
outsl
movl
sbb
lods
popf
sub
mov
sahf
jmp
insb
push
mov
pushf
call
hlt
cmp
scas
mov
add
xchg
mov
or
ficoml
popf
adc
out
movsl
dec
movb
jmp
lods
popa
ficoms
mov
loope
push
inc
test
xchg
int3
stc
fistps
call
mov
push
sub
adc
adc
icebp
loop
scas
rorl
xlat
mov
fwait
leave
es
hlt
and
negl
cli
cmp
xlat
adc
mov
cmp
scas
cmp
mov
mov
cmp
push
push
sbb
mov
dec
cmp
pop
push
ds
and
in
adc
int3
pushf
add
mov
adc
test
inc
sbb
mov
sti
push
mov
ret
xchg
push
push
ja
cmp
inc
xor
sti
cwtl
push
addr16
pop
adc
cmp
mov
add
rcll
dec
cwtl
ljmp
sub
push
enter
aad
lock
repz
inc
sbbb
into
notb
pop
dec
outsl
push
rcll
mov
jae
mov
pop
aad
sub
mov
test
and
cmp
cld
dec
mov
pop
pop
mov
adc
iret
cwtl
pop
lret
inc
out
jmp
sub
dec
ss
dec
dec
lahf
cld
icebp
mov
mov
lahf
cltd
inc
inc
inc
cmc
dec
in
sbb
mov
jg
adc
pop
fucomip
jmp
sbb
test
sub
add
xchg
xor
adc
xchg
cmpsb
inc
mov
mov
rcll
cmpsl
daa
faddl
xchg
jmp
jmp
aas
push
les
pop
push
pop
loopne
pop
add
fsts
xchg
gs
fsubr
gs
push
scas
loope
cmp
jb
movq
sar
mov
adc
icebp
scas
sarb
jne
stos
dec
xchg
jg
jnp
mov
dec
add
test
inc
mov
mov
pusha
mov
out
stos
fidivs
jge
xchg
lds
xchg
ss
in
pop
jl
out
ss
dec
out
int
inc
sub
rcrb
add
push
push
lock
imul
mov
addr16
cld
sahf
mov
xchg
push
pushf
sub
jbe
jbe
jns
fnstenv
imul
rorb
mov
dec
pop
sbb
adc
stc
scas
and
sub
rcr
hlt
pop
mov
icebp
sub
mov
int3
mov
or
cmpsb
out
dec
std
aam
std
je
scas
push
int3
fisubs
out
jge
jecxz
jbe
lahf
and
push
inc
push
ds
lret
add
sub
push
add
lds
ret
inc
mov
xchg
jnp
lcall
sub
rcr
outsb
shl
mov
test
ret
and
in
jle
xorb
lods
test
imul
dec
stos
fnstsw
xor
mov
mov
jae
sbb
xchg
cmpsl
popf
cmp
lods
ss
addr16
and
mov
insl
xchg
hlt
xchg
std
push
jo
cmp
inc
xchg
es
jb
inc
cmp
xor
hlt
les
mov
xor
sub
fdivrl
pushf
sbb
xchg
mov
fnstsw
int3
jmp
mov
cmc
pop
shrl
push
xchg
testb
push
sub
aas
pop
shl
pop
mov
and
ret
push
inc
in
gs
aas
shll
out
fwait
push
add
pop
push
pop
mov
aas
sub
xor
mov
inc
pop
pop
pop
repnz
test
mov
mov
xchg
je
ficompl
cwtl
jno
xchg
ljmp
pop
push
mov
pop
arpl
xor
pslld
and
in
mov
mov
adc
das
in
xchg
fs
adc
lea
repz
pmaxsw
mov
mov
mov
leave
sbb
cli
hlt
jbe
pop
mov
mov
sub
fdivs
mov
adc
and
repnz
mov
cwtl
shl
gs
xchg
rcrb
jae
mov
loop
pop
lcall
sub
ficoml
adc
xchg
push
or
pusha
dec
leave
ljmp
inc
stc
int3
mov
push
inc
add
clc
or
push
mov
dec
rclb
adc
lahf
lds
lods
and
adc
jno
pusha
cmp
into
cmpsb
mov
cmp
push
lods
outsl
int3
pop
std
add
jnp
jge
sbb
sbb
daa
ffreep
call
jmp
mov
sahf
popf
mov
sbb
testb
rorb
dec
xchg
jae
jb
lret
push
sti
enter
jne
fsubs
fldcw
cltd
fldenv
pop
leave
push
or
inc
mov
movsb
sahf
popa
sbb
cmpsl
xor
test
pop
inc
adc
pop
xchg
pushf
in
lock
sbb
mov
xchg
sub
mov
std
cmp
insl
mov
cmpsb
popf
and
mov
sub
xchg
in
ja
andb
daa
sbb
test
insl
loopne
mov
or
xchg
adc
loop
mov
and
jne
cmp
push
loopne
cmpsl
aam
adc
and
sbb
call
mov
clc
or
in
out
lahf
inc
mov
sbb
or
cwtl
test
imul
ficoml
inc
mov
mov
test
ret
xor
fwait
lea
lret
sbb
and
push
adc
xchg
fcomps
rcl
sub
xchg
repz
or
mov
shr
push
push
int
or
test
mov
mov
cmp
adc
add
aam
les
inc
arpl
lret
dec
xor
ret
cli
outsl
cmp
sbb
aaa
mov
popf
fld
sub
xor
fimull
cmc
mov
loop
sbb
out
push
out
icebp
mov
neg
add
lock
and
dec
sbb
lret
add
dec
inc
jl
shr
fstl
and
repz
mov
cld
mov
je
popf
enter
adc
adc
arpl
aaa
movsb
pop
jmp
pop
dec
push
lds
cmp
lahf
lahf
fnsave
fisttpl
cmpsl
cli
fadds
xchg
fcmovnb
out
xchg
repz
jmp
ljmp
sub
sub
std
mov
mov
jne
inc
jle
mov
mov
mov
lret
xchg
mov
lock
nop
fwait
cmp
and
pop
xor
scas
movsl
fisubrl
and
pop
inc
xor
test
add
push
jmp
xchg
lcall
leave
dec
sub
popf
in
cltd
cli
scas
adc
mov
push
lret
imul
push
rcrl
rcrl
pop
je
push
dec
mov
out
xor
xor
xor
pop
mov
sbb
sub
xor
icebp
xor
lods
flds
loope
iret
inc
loopne
push
mov
mov
enter
push
gs
add
hlt
cmp
je
sub
out
lds
pushl
jle
stos
add
adc
push
fbstp
dec
cld
call
xchg
mov
mov
add
lcall
add
sub
das
sarl
xchg
fs
jne
xchg
repz
loope
add
dec
mov
sahf
dec
push
hlt
and
ss
mov
sbb
cmc
sub
jge
ret
les
push
insl
mov
sbb
cmp
pop
cmp
inc
mov
mov
mov
lret
cmp
movsb
rolb
hlt
std
xor
out
add
mov
dec
inc
movsb
sbbl
je
adc
or
push
addr16
inc
sbb
adc
inc
xchg
lods
dec
cmc
push
push
fldcw
mov
mov
adc
mov
and
aam
push
imul
ja
adc
ja
xor
lods
push
orl
inc
in
mov
sub
xchg
icebp
mov
jmp
mov
fldt
jmp
fldcw
cmp
push
in
dec
mov
mov
push
test
fstps
mov
mov
jg
sbb
push
sbb
bound
add
xchg
pushf
jbe
sti
add
xor
fidivl
shlb
call
sub
jecxz
lods
andb
addr16
daa
aad
repz
inc
mov
pop
in
mov
or
or
add
lret
push
loop
loope
or
loope
jne
adc
mov
addl
mov
into
cs
xchg
fisubl
jae,pt
mov
fisubrl
inc
mov
cmpsl
mov
or
xchg
mov
mov
pushl
cli
out
icebp
out
pop
cld
jns
shll
push
outsb
icebp
pop
mov
add
xchg
mov
cltd
in
in
inc
icebp
aas
lock
pop
iret
std
cmp
jnp
aad
pusha
or
cmpsl
xchg
and
inc
xor
cld
sbb
sub
inc
dec
xor
cmp
mov
sbb
sbb
and
lret
cltd
lds
outsl
out
xchg
dec
mov
cmp
mov
mov
fidivrs
sbb
cmove
xchg
push
push
ret
mov
in
fwait
sbbb
cld
lahf
pushf
shll
and
imul
push
ret
pop
or
jnp
sbb
and
mov
pop
aam
aaa
lods
insb
leave
pop
mov
mov
adc
cmp
cld
ficoms
test
incl
lods
mov
mov
mov
sbb
or
imul
mov
push
popa
cmpl
and
xchg
xchg
ljmp
inc
mov
sbbb
sbb
adcl
push
test
mov
adcl
mov
enter
sub
dec
jecxz
dec
scas
and
test
jp
push
out
enter
dec
repz
inc
xlat
sarl
dec
cli
stc
jns
inc
ja
fisttpl
pop
sbb
outsl
jb
outsl
mov
mov
int
stos
lret
sbb
mov
lea
iret
imul
sub
pop
pop
sti
test
ds
insl
pusha
ja
jno
mov
fistl
inc
push
pushl
mov
adc
nop
mov
push
bound
jecxz
mov
xchg
push
cwtl
aam
pop
pop
out
enter
fwait
out
add
fwait
mov
leave
roll
push
pop
loope
repz
xchg
and
xlat
inc
mov
into
fists
lret
push
dec
adc
lret
leave
inc
scas
mov
outsb
mov
int3
sub
xchg
imul
test
mov
insl
shr
cltd
lret
add
xor
cmp
popf
enter
pop
xor
lds
push
dec
mov
in
ret
lea
out
and
daa
in
lret
and
sub
jae
add
scas
fwait
sbb
adc
test
push
xor
in
pop
outsl
pop
inc
lcall
ss
ret
cmpl
pushf
add
ja
jecxz
aam
adc
fdivs
mov
mov
out
out
fdivrp
mov
cmpsl
mov
push
mov
or
push
mov
fisttps
inc
fimuls
addr16
out
mov
cmp
push
jae
and
xchg
nop
repz
shlb
in
adc
lret
or
rclb
mov
lret
sbb
add
jl
andl
repz
adc
in
pop
out
movsl
filds
lock
sub
or
popa
mov
sahf
mov
and
cmp
mov
push
loope
shll
dec
pop
add
movsl
and
and
mov
fldt
rorb
cld
or
sbb
das
add
aas
cmp
ffree
pop
es
inc
inc
fwait
icebp
or
mov
xor
jmp
cli
push
mov
repnz
inc
adc
adcl
inc
pop
jl
xor
xchg
mov
daa
cmp
stos
mov
add
sub
jo
popf
sbb
iret
dec
int
sar
mov
jl
mov
sub
mov
aaa
xchg
push
sub
pushf
aaa
fcmovnu
jp
jns
scas
inc
mov
repnz
mov
sub
or
pop
in
or
pop
outsb
xor
insb
test
mov
ss
and
outsl
xor
and
inc
dec
xchg
popa
jo
pop
out
data16
lods
cmpl
into
jno
mov
add
push
in
fimuls
les
xor
mov
jbe
movb
dec
push
xor
pop
lods
jno
ljmp
pushf
xor
ljmp
iret
pop
sub
inc
in
cmpsl
xor
push
inc
xchg
arpl
jge
push
mov
sub
sbb
loop
gs
inc
adc
mov
xor
cmpsl
adc
leave
sub
std
ja
mov
mov
push
pusha
jle
fisubl
test
or
lret
in
mov
stos
adcb
cmp
mov
xchg
mov
pop
pop
push
push
mov
adc
xor
jecxz
ret
or
pop
push
orl
pusha
inc
shrb
jae
inc
xor
popf
sbb
cmp
jne
push
ss
out
push
dec
cmp
adc
jl
dec
push
insl
test
loopne
stos
aas
pop
fcmovbe
decl
cmc
je
jecxz
mov
and
test
mov
push
mov
jg
or
mov
dec
add
insb
mov
cmc
lcall
ss
aas
int
mov
ret
xor
cmp
aam
out
fmuls
or
sbb
dec
xor
cmpl
enter
sub
lahf
xor
push
pop
into
or
inc
orl
cmp
or
nop
mov
stos
ljmp
pop
push
mov
and
jns
push
imul
mov
andb
mov
add
jae
cmpsl
xchg
push
mov
gs
lcall
push
inc
repz
sahf
xchg
push
sti
addr16
mov
xchg
lds
and
sbb
sbb
cmp
pushf
mov
cmpsl
icebp
fisttpll
mov
imul
xor
inc
sarb
icebp
fcompl
pop
pop
cwtl
mov
cmpsl
adc
xlat
or
sbb
and
shll
and
xlat
pop
outsl
leave
adc
jo
ret
imul
mov
mov
or
lret
mov
jno
cmp
adc
ret
jno
adc
les
push
imulb
enter
out
jp
in
sarb
ja
jp
push
pop
outsb
mov
in
mov
cwtl
mov
and
mov
leave
lods
addb
or
scas
lds
fcoml
lret
mov
es
out
insl
dec
mov
adc
jg
mov
push
push
dec
jp
jnp
pop
pushf
cmp
pop
mov
xchg
adc
out
lret
arpl
outsb
rorl
add
fisttpl
sbb
fsubrl
xor
je
mov
or
xchg
cltd
push
push
outsl
xchg
push
ss
mov
inc
rcrl
mov
ljmp
sbb
sub
xchg
inc
repnz
js
inc
aam
xchg
xlat
push
sbb
cld
lds
xlat
decb
adc
loop
push
mov
cmpsb
in
fisttps
sbb
in
mov
out
fsubp
xor
fiadds
xchg
mov
push
es
popa
lods
lret
or
pusha
cmp
aad
add
dec
inc
fildll
cli
mov
ficomps
insl
test
test
les
mov
mov
xchg
mull
add
xchg
je
dec
ss
adc
adc
dec
dec
and
lret
inc
push
pop
mov
jge
pushf
cmp
ljmp
popa
jne,pt
cmp
mov
xchg
mov
divl
push
outsb
adc
sub
xchg
mov
push
fistpll
ljmp
push
pop
pop
pusha
jge
xchg
push
lods
push
add
inc
mov
pop
mov
add
cld
mov
pusha
in
fisubl
outsb
cmp
in
mov
int
xchg
add
movsl
push
imul
stos
lret
call
leave
adc
fwait
add
lds
jg
xor
pusha
adc
nop
aas
lock
xor
xchg
pop
dec
incb
xor
mov
dec
aad
adc
out
cmp
lods
sub
mov
jns
mov
lahf
jge
pop
cmp
sti
out
andb
fcompl
or
xchg
ficoml
inc
imul
repz
jle
add
lret
jo
mov
pop
ja
mov
cs
jmp
add
mov
push
pop
jecxz
dec
rolb
push
or
jge
dec
fcom
and
and
sbb
movsl
mov
mov
inc
out
xor
mov
or
popa
xlat
mov
iret
dec
mov
push
dec
out
cltd
std
mov
jns
push
mov
and
adcb
adc
xor
lss
adc
xchg
enter
mov
pop
ss
mov
mov
scas
lds
or
cmp
xchg
cli
sbb
aad
add
mov
mov
inc
ret
cmp
jl
add
push
addr16
pop
int3
add
jge
ret
adc
dec
and
jno
mov
mov
jle
sub
jecxz
cmp
out
or
in
mov
jl
xlat
xchg
mov
fsts
jge
mov
adc
jecxz
jecxz
ss
push
stc
jge
xchg
ss
bound
insb
cmpsl
mov
sti
inc
mov
cmp
leave
xchg
mov
out
mov
cmp
jb
push
filds
lock
into
ret
and
loope
push
stc
dec
popf
aas
mov
xchg
adc
shll
cli
push
rcrl
inc
sahf
inc
insb
inc
push
loop
cmpb
lock
add
cmp
cmp
insb
jmp
sbb
fdivrl
dec
add
inc
into
dec
and
jne
push
mov
addr16
sbb
mov
divb
int
mov
lcall
sbb
jae
sar
xorl
inc
inc
mov
sti
stos
ffreep
sahf
or
fstl
jo
and
mov
dec
jge
cmp
scas
in
cltd
sub
mov
ja
push
mov
push
add
adc
imul
sbb
or
jae
loope
pushf
sbb
push
in
flds
jmp
adcl
icebp
lea
stos
sub
cmpsb
push
xor
and
inc
mov
adc
bound
push
rcrb
imul
cmpsb
int
lods
shll
add
adc
bound
cmp
pop
out
popf
ror
jp
data16
faddl
mov
mov
and
or
inc
xor
and
jbe
cmpl
and
jne
daa
xchg
or
lea
and
push
mov
and
scas
roll
int
loop
sub
add
sahf
mov
ret
fs
mov
sahf
icebp
adc
push
adc
shrb
scas
lods
les
add
add
inc
cmp
lea
xchg
push
jae
and
adc
mov
mov
test
nop
adc
mov
cmp
movsl
or
adc
sahf
cmp
xchg
ds
cs
jno
pushf
imul
sub
enter
imul
push
cmp
iret
adc
int3
xlat
cltd
repz
jmp
mov
jmp
fldenv
mov
negl
cmp
mov
xchg
repnz
int
sub
div
push
dec
call
lret
data16
sbb
inc
jne
imul
lea
mov
pop
stos
dec
or
lds
mov
sbb
into
push
stc
hlt
clc
out
out
inc
pop
ret
adc
mov
sub
or
mov
xchg
ja
popf
shlb
inc
in
mov
mov
stc
cmp
cmp
pop
xor
cmc
cmpsb
lds
pusha
xor
adc
jae
dec
cmp
xor
ss
push
adc
ja
inc
imul
or
mov
inc
inc
test
lock
loopne
leave
test
roll
shlb
pop
fnstsw
scas
leave
push
sbb
clc
hlt
jne
in
add
hlt
mov
adc
pop
mull
test
daa
ds
push
mov
add
cmp
pusha
das
jo
ss
lock
mov
xchg
sti
das
mull
mov
sub
mov
and
xor
xor
or
adc
sbb
push
fistpl
dec
mov
je
jle
in
xchg
repz
mov
xor
jecxz
sub
fs
mov
scas
add
pushf
sbb
adc
xlat
roll
mov
jne
mov
stc
in
pop
pop
pop
lods
jae
dec
pop
inc
sti
mov
js
mov
cmp
dec
xchg
movsl
stc
shl
add
mov
fstpt
xor
mov
shll
in
je
cmp
ljmp
pushf
cmp
lret
imul
loope
into
inc
xchg
push
xchg
push
and
aad
jecxz
mov
xchg
sub
pop
fldt
leave
xchg
mov
iret
ret
mov
adc
outsl
lock
call
cli
lods
cmp
mov
mov
push
and
pop
pop
js
lret
jmp
lds
pop
cmp
stos
inc
jb
cli
shrb
jge
sbb
jl
adc
mov
sti
fidivrs
aam
je
pop
dec
rorl
xor
dec
push
cmp
add
popl
sbb
add
dec
sbb
mov
mov
add
insl
mov
pop
cmp
inc
outsb
sahf
xor
ds
push
cmp
icebp
mov
pop
sub
or
bswap
push
ret
enter
mov
fisubrl
dec
sbbb
push
mov
sarb
jno
popa
pop
fists
push
and
shll
test
xor
cmc
pushf
lods
cmp
pop
out
jl
mov
cld
cmp
aas
in
or
mov
lret
mov
imul
push
add
or
xchg
jo
std
scas
or
mov
outsb
xor
stos
cli
dec
pushf
mov
mov
ret
jle
inc
lods
or
cmc
leave
inc
shr
pushf
sbb
push
movsl
mov
icebp
cmp
inc
mov
popf
fdiv
jbe
mov
pushl
jmp
pop
adc
lcall
inc
pusha
ja
popa
mov
lods
add
and
repz
mov
in
out
movsb
orl
lahf
fstl
sub
test
ljmp
pop
ds
mov
loope
pop
dec
cwtl
and
cli
xor
adc
ret
jbe
sbb
gs
shrb
push
test
fs
addr16
lret
jmp
or
mov
out
sbb
pushf
mov
cltd
sti
fnstcw
arpl
sub
pop
dec
mov
inc
ljmp
mov
icebp
hlt
outsb
loope
icebp
ljmp
mov
add
sbb
adc
mov
push
xor
jae
test
jb
jb
cmc
mov
je
mov
and
cmpb
sub
jp
mov
mov
test
aad
popa
roll
lret
std
pop
or
or
lcall
stos
pop
sbb
mov
xchg
push
ljmp
mov
notb
pop
jmp
lahf
sbb
aaa
imul
sub
and
insb
lcall
or
adc
xchg
push
jle
or
ds
jno
out
adc
mov
mov
pop
aad
jnp
push
lods
ja
sbb
in
xchg
mov
loop
notb
sub
mov
rcrb
into
push
stos
push
test
repnz
pop
neg
das
ret
inc
test
and
rcll
lock
test
cmp
inc
dec
test
jmp
cmc
add
ja
dec
xor
jb
push
sbb
jno
shrb
hlt
jg
loope
mov
pushf
pop
push
sbb
out
jmp
push
cmp
or
mov
add
mov
test
xor
cltd
adc
xchg
int
sbb
imul
test
mov
mov
imul
or
test
jg
sbb
xorl
mov
sbb
lock
ljmp
sub
lods
call
in
js
shl
dec
rcl
jae
sub
mov
mov
jg
pop
dec
mov
pop
in
cmc
test
imul
adc
push
and
push
push
lock
xor
jns
push
dec
jb
fwait
shll
inc
and
jp
movsl
rol
iret
int
enter
mov
sbb
pushf
push
xchg
xor
adc
enter
pop
xor
adc
test
mov
inc
sbb
mov
sbb
and
in
into
out
loopne
repz
shrl
cmpsb
sbb
pop
or
test
fisubs
test
mov
and
leave
mov
add
out
mov
mov
jp
mov
dec
lcall
dec
mov
outsb
in
add
lods
lea
lret
xor
cmp
mov
adc
mov
lret
and
jne
sub
je
mov
and
jb
add
sbb
aas
xchg
ss
mov
mov
stc
fwait
sahf
mov
leave
stos
pusha
sahf
outsb
fsubrs
mov
int
cli
xchg
jo
lcall
test
lods
push
xor
jb
and
cmp
push
lods
adc
popa
mov
out
mov
mov
inc
call
or
mov
inc
adcb
push
mov
and
jle
xchg
test
dec
mov
and
dec
jmp
pusha
js
xchg
mov
adc
dec
test
dec
pop
and
mov
and
stos
sub
inc
fmuls
scas
out
or
push
xchg
into
cmpsb
hlt
adc
ret
or
dec
aas
dec
std
or
sub
leave
cmpsl
push
aad
sub
imul
fs
push
imul
std
out
add
imul
fldl
xor
xor
add
in
andb
jno
int3
cmp
ss
xor
jo
mov
add
les
mov
jnp
inc
fidivrl
dec
out
push
xor
pop
dec
jecxz
sbb
lret
call
ss
ss
jne
push
fwait
paddq
pop
out
inc
fldcw
clc
sbb
jl
fs
stos
adc
enter
outsl
cmp
xchg
mov
pushf
dec
cmp
lret
xchg
sbb
or
aad
mov
subl
xor
stos
stc
cs
mov
in
dec
jnp
cmp
mov
loope
sub
int3
je
jae
int3
cltd
outsb
jb
cld
lea
pop
add
mov
push
ja
inc
mov
sarb
ds
idivl
xchg
js
add
loope
inc
inc
add
adc
ss
inc
and
push
loop
dec
call
jmp
sbb
stc
inc
ret
mov
int
pusha
adc
jbe
in
pop
mov
jle
dec
and
pop
arpl
mov
and
jbe
add
ds
stos
aas
clc
shrb
into
push
mov
movsl
or
or
fs
fsubs
push
lret
aaa
sti
cmpsb
inc
sahf
mov
push
adc
fisubrs
pop
xchg
lock
and
mov
ljmp
cli
mov
rcll
jns
and
adc
add
push
push
lahf
test
loop
ja
pop
aas
inc
mov
mov
lret
in
cld
inc
inc
fwait
notb
adc
fsubrp
sbb
mov
cmp
aas
iret
add
push
pmaxsw
sbb
sahf
daa
fdivrl
pop
subl
orb
loop
push
xlat
lds
int
dec
and
call
xchg
sub
cld
pushf
fisttpll
mov
mov
mov
setl
negl
rcr
andl
lods
mov
insl
push
mov
jnp
cmp
xor
scas
stc
xchg
inc
sub
push
into
rep
leave
imul
pop
cmpsb
sbb
out
push
int
stc
lock
popf
or
and
imul
scas
xor
inc
push
mov
or
popf
ja
icebp
mov
test
hlt
pushf
aam
in
mov
cmp
cmpsl
sbb
xchg
stos
rclb
unpckhps
jae
bound
mov
or
mov
xor
addr16
xchg
or
push
xchg
jb
push
mov
rorw
call
fcomps
adc
loop
mov
ret
mov
add
js
jo
shlb
adc
pop
mov
leave
adc
fsubl
clc
mov
std
or
sub
push
jmp
adc
xor
repnz
jbe
sub
fnstenv
adc
push
lret
sub
sub
lods
cli
aad
dec
mov
pop
inc
or
aas
adc
jne
xor
add
aas
push
jb
fsubrp
sahf
cmp
mov
faddp
inc
ret
sbb
iret
adc
inc
sub
add
out
mov
div
mov
push
int3
mov
lretw
out
xor
add
mov
xchg
cwtl
test
push
fisttps
lods
ret
xor
pop
pop
ret
and
fs
nop
sahf
jle,pt
lea
xchg
xchg
int
jp
mov
adc
aaa
cmp
xchg
push
loop
push
mov
jle
mov
fidivs
sarb
mov
pop
test
fistpll
in
jl
adc
add
inc
stc
fcoms
les
lret
jl
xchg
mov
or
test
popf
mov
xchg
mov
mov
push
outsb
sbb
xor
ss
push
popf
int
adc
push
shlb
stc
data16
or
andl
bound
movsb
sub
movsb
xor
cltd
mov
mov
mov
xchg
ret
shlb
mov
xor
subl
jno
jns
mov
into
jle
js
mov
ret
dec
outsb
mov
jecxz
je
push
ret
call
outsb
ret
pop
xchg
cs
push
loope
pusha
add
xor
cmp
dec
push
mov
pushf
inc
dec
xor
pop
inc
nop
xchg
mov
lea
dec
sbb
xor
pusha
jle
mov
mov
inc
push
jae
mov
lods
mov
sub
add
jb
inc
mov
or
imul
shrb
les
in
xlat
inc
les
adc
sbb
xor
sub
push
pushf
movsl
pop
jnp
push
fadds
inc
and
xor
jo
push
lds
sbb
xchg
in
das
das
shlb
iret
and
inc
shrl
jno
push
outsl
push
test
inc
xor
outsl
dec
and
lods
mov
sar
cltd
ja
jl
add
aas
loopne
mov
add
jmp
push
jne
rorl
and
cmp
push
inc
pop
xor
call
hlt
gs
daa
repz
push
cmp
ss
test
xchg
ja
or
mov
jge
popa
adcl
jb
add
addr16
int
xchg
jns
cmc
out
mov
loopne
loopne
adc
cltd
stos
pop
out
mov
fbld
ret
xor
xor
test
rclb
clc
rorl
adc
adc
cwtl
and
clc
and
fiadds
aam
push
mov
mov
fldl
mov
sub
incb
sub
hlt
gs
or
jns
aaa
imul
fcomip
cld
xor
inc
sub
push
cmp
inc
out
roll
stos
add
mov
test
int
pop
dec
adc
popa
mov
pop
call
shlb
jo
pop
mov
rclb
cmpsl
pop
int
lods
imull
sub
push
cwtl
and
mov
rcrb
roll
lcall
fadd
xchg
out
mov
aad
jnp
std
test
roll
mov
ljmp
dec
dec
mov
test
cmc
mov
inc
fs
lods
jmp
daa
push
filds
sub
mov
frstor
fcomps
fdivrs
add
repnz
rdpmc
sbb
rolb
fildll
lret
dec
fs
cmp
jb
xor
repnz
push
cmp
loope
mov
roll
shl
xorb
sbb
stos
jo
rcrb
inc
jae
mov
leave
and
mov
jmp
pop
xor
scas
out
daa
xchg
mov
dec
popa
pop
inc
add
lods
sub
jno
xchg
in
pop
xchg
ret
add
xor
addr16
in
in
jmp
ret
mov
fisubs
cmpsb
mov
jne
pop
or
stos
ljmp
int
push
loope
sbb
jnp
std
xor
jno
jg
in
mov
clc
or
pop
push
or
mov
gs
leave
data16
sub
xchg
loop
out
push
loopne
test
adc
sbb
fs
xor
jbe
scas
stos
iret
lcall
jne
xlat
mov
jb
cli
lds
and
cwtl
sub
rcrl
int
dec
mov
pop
mov
std
jg
std
add
xchg
pop
sub
pop
std
sahf
adc
xor
jecxz
sbbb
movsb
dec
pop
pop
push
xor
cmpsl
int
mov
lds
rcll
push
xorb
push
add
test
iret
lock
add
cmp
push
andb
js
nop
pop
and
inc
int
push
jge
xor
sub
add
das
fidivl
outsb
xchg
cmpsb
int
sar
cwtl
jae
lea
out
dec
in
lods
jne
pushf
repnz
in
add
mov
inc
faddl
push
push
mov
add
data16
test
lahf
push
push
sub
clc
xor
test
pusha
xor
push
mov
jne
jb
jns
xor
jb
pop
adc
xor
shrb
int
inc
sbb
loopne
or
push
mov
push
shl
outsb
xchg
cld
inc
push
aas
add
repz
out
or
xchg
or
or
sbbl
push
xchg
arpl
into
repz
cmovs
xchg
and
jp
xor
sbb
fidivrl
jmp
jne
push
and
xor
test
mov
je
out
mov
mov
scas
dec
jb
inc
jno
int3
mov
mov
psubusw
iret
and
call
push
inc
inc
sarl
mov
test
sub
out
xchg
jo
dec
mov
je
sbb
xchg
mov
lret
fcmovnu
aam
rcl
dec
inc
es
xorb
or
fcompl
dec
out
adc
int
fdivrs
xchg
and
clc
xlat
add
ret
sarl
das
xor
push
movsb
call
mov
mov
movsb
sbb
in
mov
enter
inc
and
in
fcos
jns
outsb
clc
insb
add
mov
jg
xor
ret
inc
add
jno
cli
cmp
dec
mov
jb
je
mov
into
jns
mov
cmpb
loope
mov
ja
sahf
pushf
xor
lea
test
and
inc
sbb
jns
in
aas
jp
push
repz
inc
push
rorl
stc
xchg
mov
mov
mov
push
pusha
outsl
push
mov
in
movl
lahf
push
je
out
and
adc
inc
push
xor
jbe
lock
sbb
jle
cmp
xlat
sbb
mov
dec
mov
fyl2x
fdivrl
hlt
xchg
sbb
inc
push
out
push
jmp
inc
ss
aas
sbb
rcll
mov
xchg
into
mov
insb
adc
push
cltd
pop
repz
mov
je
mov
mov
inc
out
jae
push
push
jbe
sbb
lcall
inc
add
mov
and
mov
dec
inc
sar
mov
aam
pop
loop
adc
mov
jns
push
dec
aam
push
setne
into
pop
ljmp
data16
xchg
pop
fwait
and
leave
cmp
xor
push
inc
mov
shl
add
shrl
hlt
out
xor
inc
cmpsb
in
jmp
xor
push
mov
scas
cmovg
fldenv
pop
or
jmp
sub
mov
pop
movsl
sbb
mov
stos
and
sbb
jbe
int3
cld
shll
pop
inc
rcrl
dec
push
jmp
jnp
or
or
cmp
adc
inc
inc
push
sub
adc
andl
or
fwait
jg
jo
inc
out
add
inc
and
enter
loop
mov
in
push
lods
test
xor
stos
rolb
xchg
les
lahf
jmp
xor
clc
push
scas
lods
push
ja
xchg
flds
std
insb
shlb
cmpsb
mov
mov
popf
or
dec
movsl
push
mov
mov
jg
iret
jmp
dec
fdivl
pushf
rolb
xchg
jle
cld
dec
mov
pop
and
and
dec
aas
pop
xor
xchg
xchg
aam
mov
cmp
in
mov
cs
sahf
hlt
jo
mov
mov
pop
push
repz
sbb
jno
cmp
sbb
cmp
dec
push
adc
inc
jecxz
pop
fxch
mov
mov
mov
mov
push
imul
aam
fcomip
js
inc
dec
push
ja
insl
jmp
jae
lret
xor
sar
loop
sbb
mov
mov
scas
addr16
jge
cmp
jno
jge
into
jo
sub
out
popf
pop
mov
outsb
fadd
mov
mov
sbb
cmc
jo
enter
shl
ret
dec
std
pop
negl
imul
add
inc
clc
and
add
jae
and
sbb
or
jge
fmul
or
popf
jb
push
jg
xor
ret
xor
call
insb
bound
mov
fisubrs
push
ret
fwait
xchg
test
mov
and
ret
loope
outsl
nop
lods
mov
loope
xor
lcall
pop
push
cli
sbb
xor
decl
jge
loop
rorl
cli
ds
clc
xchg
xchg
les
stos
jmp
dec
dec
shrl
xchg
fbstp
iret
xchg
lcall
lods
or
ljmp
sbb
stos
sub
ret
sub
repnz
mov
mov
rcrb
inc
in
movsb
dec
gs
adc
xchg
push
mov
push
pop
or
push
adc
mov
jl
enter
ss
nop
or
in
ret
shlb
insl
add
push
or
iret
mov
jns
xor
rcl
jmp
jg
jmp
lds
in
jo
and
cli
jae
xchg
push
mov
cmp
add
loop
test
adc
jne
mov
mov
adc
add
mov
and
xchg
push
scas
mov
mov
mov
pop
shll
jmp
rolb
xchg
push
mov
fsin
push
mov
pop
push
xchg
ss
dec
jl
nop
stos
sub
pop
mov
jae
mov
mov
sbb
or
hlt
test
cmp
adc
jg
dec
iret
push
test
test
stos
xlat
imul
cmp
test
dec
daa
mov
iret
adc
mov
aaa
insb
cmp
add
cmpsb
xchg
cmp
lcall
push
jns
cmp
je
iret
sahf
inc
cld
cmp
cmp
stos
inc
pop
je
data16
mov
sub
and
adc
repnz
jne,pt
cmpsb
jno
cmpsb
loopne
sar
jg
repz
lods
mov
cltd
and
and
mov
scas
int
in
cmc
add
dec
adc
mov
lret
push
xor
lret
dec
or
lock
rcr
movsl
sbb
mov
mov
data16
clc
in
push
dec
mov
push
aad
xor
mov
mov
dec
cmp
or
jb
and
jno
shr
inc
add
adc
push
jae
scas
xchg
mov
in
popf
xchg
adcb
btr
aas
jb
in
mov
inc
or
lods
pusha
mov
lret
sbb
and
mov
xchg
cmp
mov
cmp
jnp
mov
mov
mov
scas
push
leave
jo
add
and
scas
lret
mov
cltd
adc
stc
int3
add
or
mov
sti
mov
jmp
cmpsb
cmpsb
pop
or
repnz
xor
cmp
sub
mov
jne
xchg
mov
xor
ficoml
jg
cs
push
jns
cli
push
mov
iret
hlt
es
or
mov
add
dec
dec
jae
sbb
adcb
jns
mov
shrb
ds
rolb
mov
insb
inc
ds
mov
cmp
push
xor
div
pop
sahf
push
jge
pop
pop
ss
je
fistpl
sub
jbe
adc
cmp
push
jl
or
xor
stos
lods
xor
xor
dec
jecxz
xchg
dec
mov
pop
sub
mov
dec
inc
inc
pop
iret
cmp
xchg
nop
cmp
push
inc
repz
push
push
mov
iret
inc
roll
rorb
mov
push
xchg
sar
sbb
pusha
and
incb
sbb
ret
and
bound
sbb
cmp
xchg
mov
sar
mov
mov
fdiv
xchg
mov
mov
adc
iret
lods
dec
add
mov
pop
popa
fisttpl
aaa
jp
push
and
add
xchg
scas
scas
jnp
jecxz
je
push
mov
adc
andl
cmc
or
xor
mov
ret
or
loopne
stc
mov
push
pop
insb
inc
cmp
sbbl
dec
icebp
enter
jl
lods
test
into
jb
sub
inc
lret
xchg
mov
loop
pop
gs
add
hlt
iret
test
mov
mov
add
mov
test
sbb
mov
adc
lea
in
cmp
mov
fistl
rep
data16
jbe
outsl
bts
mov
out
fsubr
add
lea
mov
or
xor
or
mov
pop
jp
cmp
pop
mov
lock
xchg
or
add
fisubs
or
mov
add
push
mov
movl
cmp
mov
xor
inc
jg
lcall
loop
bound
push
inc
das
shll
add
and
mov
jg
lret
arpl
pop
mov
jle
mov
lahf
leave
mov
test
add
icebp
pop
dec
cld
nop
cmpsb
fistl
gs
mov
je
cmp
std
pusha
mov
jle
inc
jno
sbb
pop
mov
fs
cmp
ja
subl
inc
and
cltd
xlat
pop
xchg
cmpsl
je
add
lds
push
and
ss
pop
jmp
jle
jne
lret
sub
ret
popf
add
loope
push
pop
iret
sub
xor
push
sbb
shlb
xchg
leave
mov
insb
and
add
lret
cmpb
aas
lds
push
mov
mov
subb
out
insb
imul
pandn
add
gs
xchg
inc
pop
cli
mov
sti
mov
dec
outsb
nop
or
jg
dec
inc
add
out
into
dec
mov
in
xlat
test
jo
push
jle
insl
loope
jg
xor
mov
repz
jmp
dec
and
add
or
adc
pop
pushf
mov
dec
xchg
out
outsb
xlat
push
dec
xchg
lahf
ret
inc
or
aad
and
cmpsb
fmull
daa
fbstp
inc
sbb
cmc
jae
jmp
jo
imul
pop
sub
ficoml
inc
push
dec
in
xchg
adc
push
addr16
in
dec
mov
int
nop
mov
sub
stos
or
mov
filds
cwtl
daa
ljmp
adc
fs
nop
mov
shrl
sarl
je
mov
push
adc
or
push
outsb
jb
xor
stos
and
mov
push
test
push
push
xchg
jmp
jno
ljmp
add
daa
sbb
fwait
push
jmp
cmp
cmpsl
jnp
ret
sub
repz
mov
mov
dec
add
in
mov
hlt
jne
or
dec
lcall
adc
xchg
sub
pop
adc
scas
iret
popa
mov
sub
add
add
mov
add
jae
movsl
sub
orl
sbb
bound
das
push
mov
sti
xor
add
xor
xchg
subb
add
ret
xchg
lahf
aam
mov
mov
cltd
mov
xor
stos
or
loope
scas
dec
hlt
mov
insl
push
ret
sbb
sbb
add
je
adc
das
cmp
xchg
rol
xor
repz
movsl
pop
xchg
lds
scas
sub
mov
fstl
and
pop
std
dec
outsl
push
popf
incb
pop
pop
xchg
addr16
leave
push
cmc
rol
lret
scas
dec
test
repnz
cld
mov
inc
cli
lods
lcall
xchg
or
loop
lret
xchg
jae
xchg
xor
and
cld
mov
sbb
push
fidivl
or
divl
rcl
mov
pop
mov
dec
pushf
mov
inc
xor
cmp
rcrb
rcl
adc
xor
mov
cmp
jmp
xchg
xchg
cmp
mov
dec
clc
aam
sbb
shlb
adc
dec
push
jns,pt
aam
icebp
outsb
insl
push
xor
testl
add
jmp
adc
pop
mov
sahf
fld
arpl
mov
test
and
or
not
cmp
or
rcr
mov
mov
ss
xchg
cli
loopne
mov
out
pop
adc
jb
xor
lea
push
dec
jle
xor
xlat
mov
out
mov
stos
or
jbe
xchg
jbe
mov
xor
out
sbb
push
pop
pop
jle
lret
xchg
mov
bound
push
xchg
inc
pop
mov
ret
push
aaa
adc
cmpsl
movsl
cmc
push
dec
mov
jo
jb
in
push
mov
fldt
push
inc
mov
pmovmskb
bnd
pop
adc
jmp
inc
xchg
jge
and
dec
pop
push
in
and
inc
repnz
bound
xchg
idivb
or
and
xchg
cmpl
xchg
push
icebp
mov
dec
pusha
mov
fwait
bound
rorl
pop
insl
jp
mov
xor
mov
testl
sarb
fadd
scas
jne
testl
je
cltd
add
xchg
adc
mov
or
pushl
and
rorw
fidivs
arpl
out
jae
push
cmpsb
jo
inc
adc
addb
push
lds
aam
test
jb
mov
popa
daa
push
jb
jb
stos
fwait
sar
mov
cmp
xor
les
sub
xchg
and
xor
out
packuswb
mov
mov
jge
mov
bound
dec
fwait
daa
xchg
popa
xchg
cmp
add
int3
push
dec
popa
or
stos
sbb
jl
fisubs
or
cwtl
cmp
jne
mov
and
repnz
sbb
addr16
mov
lds
aad
out
add
insl
push
test
rclb
orb
data16
test
push
shr
mov
pushf
das
and
aaa
lahf
pop
popa
mov
incl
fisubl
mov
ret
sbb
andl
sub
js
xor
mov
test
pop
lods
insb
mov
push
cmp
fbstp
es
fisttps
insb
test
std
outsl
scas
push
dec
lcall
insb
add
push
mov
jb
push
mov
adc
fwait
cmpsl
sub
test
cwtl
cmpl
sub
jo
push
mov
sub
dec
mov
xchg
aad
ss
lods
push
mov
xchg
jmp
inc
or
cmp
sub
push
jmp
in
mov
ret
or
stos
lods
pop
sbb
shll
fldcw
mov
push
rclb
or
mov
in
mov
jae
lret
push
jecxz
push
into
dec
ljmp
add
pop
test
mov
call
cmpl
es
mov
js
shlb
push
sbb
pusha
in
or
idivl
push
xor
shlb
mov
pop
repnz
out
sub
decb
lods
inc
push
mov
aad
sbb
neg
std
cmp
notb
xchg
xchg
in
xchg
shlb
aaa
mov
fiaddl
or
jnp
aaa
outsl
mov
rcll
mov
ja
pop
hlt
out
pop
push
or
sub
lea
mov
push
or
rclb
stos
inc
push
cmp
mov
das
mov
and
mov
inc
pop
pop
out
mov
stc
je
cmp
testb
mov
sub
add
or
mov
jp
jbe
or
pop
fdivrp
jns
cwtl
mov
movl
pusha
loope
mov
aas
xor
rcr
lock
mov
lods
dec
adc
dec
movsb
mov
inc
lods
pushf
cmp
shlb
pop
mov
movq
jg
aam
in
or
in
push
mov
add
movsb
nop
addb
adc
sbb
shrl
mov
lcall
jno
lock
sbb
adc
mov
adc
repnz
mov
pop
pop
addr16
jmp
pop
and
shr
cli
dec
jns
jnp
dec
cmp
mov
scas
mov
mov
js
orb
mov
push
loopne
xchg
lea
mov
pop
icebp
std
cmp
inc
ds
dec
incl
jg
cs
mov
adc
test
xor
cltd
mov
sar
out
push
imul
in
push
sub
mov
std
xchg
jg
xor
stos
cmpsl
lods
cmp
rcl
xor
lahf
sub
mov
sbb
jmp
xor
xor
fsub
or
repnz
and
dec
and
pushf
mov
daa
sub
mov
test
jle
cwtl
inc
fiadds
je
into
mov
adc
add
dec
dec
int
clc
fwait
sbb
sbbb
or
stc
hlt
sub
js
mov
std
or
and
sbb
mov
mov
clc
and
and
hlt
cmpb
into
pop
jne
sub
outsb
fmul
clc
jecxz
cmc
pusha
fldcw
in
mov
jns
pop
les
and
adc
addr16
repnz
dec
sub
xchg
dec
jne
xor
sar
clc
adc
inc
cld
mov
mov
lahf
inc
in
nop
sbb
test
cmp
cli
xchg
lahf
outsb
push
add
repnz
ds
pop
mov
or
rolb
mov
out
in
stc
inc
aad
xlat
xchg
test
js
mov
out
es
lods
rclb
add
popf
js
dec
aas
xchg
jno
push
inc
sub
add
xchg
cmp
mov
push
jo
test
adc
dec
jbe
mov
xchg
dec
sub
dec
movsb
sub
pusha
arpl
aas
adc
sbb
inc
inc
call
xchg
xor
outsl
push
cmc
aad
lret
aas
ja
popa
dec
lods
xchg
ret
loop
rcrb
test
xchg
pop
fs
lahf
iret
or
jbe
lret
jmp
jnp
testb
sub
rcrl
xor
lcall
es
sub
adc
push
adc
lret
xor
adc
pop
inc
cltd
inc
mov
inc
dec
pop
imul
sbb
loopne
ss
rcl
push
int
mov
pop
xchg
jns
lods
jl
cmc
pop
lods
fstl
jno
pop
iret
or
cmpsb
mov
loopne
and
out
fldenv
gs
jns
jp
fsubr
mov
repnz
add
ret
mov
pop
mov
and
andl
inc
jp
and
jae
xor
push
les
test
sbb
mov
movsl
test
sub
jne
jne
subb
rclb
dec
pop
mov
fld
mov
and
cmpsl
mov
int3
test
dec
ja
push
cmp
xchg
hlt
push
call
or
add
sbb
and
out
or
push
out
mov
sbb
pop
aam
orl
jmp
xchg
jle
push
jmp
sbb
push
sub
push
sbb
stos
mov
mov
adc
sbb
xorl
dec
push
mov
fcomp
push
notl
addr16
rcll
mov
into
cwtl
push
mov
cmp
cmp
xchg
sub
mov
jnp
sub
push
push
add
fiaddl
gs
enter
sub
xor
add
sbb
mov
adc
jne
xchg
add
inc
adc
lds
nop
into
push
jb
pop
dec
out
push
jp
push
scas
sbb
sub
aas
sub
mov
testb
repnz
add
dec
mov
adc
les
ret
jne
out
subb
mov
or
popf
icebp
sbb
scas
aaa
mov
sub
mov
push
dec
add
into
push
mov
leave
repnz
aaa
push
mov
jnp
push
rcl
fwait
loopne
add
xchg
pop
cmp
mov
das
push
mov
test
cmpsb
mov
or
sbb
inc
dec
je
cmc
pushf
xor
pop
insl
test
clc
repz
cwtl
sbb
or
cld
dec
mov
mov
daa
insb
push
or
outsl
shrb
or
test
sbb
cmpsb
xchg
dec
int
adc
divl
push
mov
push
mov
xchg
mov
sub
push
sahf
lods
aad
pop
fisttpll
mov
ss
les
and
test
xchg
push
pop
pop
out
test
and
fisttpl
mov
in
outsb
xlat
fisubrs
sbb
aam
aas
or
adc
popa
aaa
push
sbb
jp
aas
mov
jmp
pop
mov
out
stc
sbb
pop
call
mov
iret
jge
cli
subl
fsts
dec
jb
lcall
test
mov
cmp
mov
sub
stos
mov
insl
dec
je
into
pop
out
dec
outsl
xchg
dec
adc
adc
adc
fnstsw
loopne
aas
inc
jo
jo
mov
jg
imul
popf
in
filds
lea
sbb
inc
fdivl
cmp
and
cli
call
daa
lret
jg
and
rcr
cli
cli
dec
mov
dec
in
xor
mov
jns
mov
clc
dec
inc
in
mov
adc
cli
les
sbb
mov
enter
mov
into
stc
sbb
cmp
jne
into
leave
xchg
cmc
lea
ja
in
pop
lds
aas
cmc
push
xor
sub
mov
sub
insl
sbb
loopne
or
iret
push
dec
into
gs
sar
cmp
adc
xchg
punpckldq
cli
jecxz
mov
jl
sub
jno
push
dec
add
fs
leave
shrd
xor
cmpsb
xor
dec
shrl
xchg
idiv
fs
sbb
dec
push
dec
aad
imul
push
dec
lods
dec
xor
out
jl
dec
hlt
sahf
adc
fstpl
iret
ficoms
mov
clc
in
cmpsl
shlb
cmpsl
dec
dec
sbb
scas
cmp
loopne
scas
nop
fcoms
xchg
sarl
imul
adc
pop
sbb
hlt
orb
xchg
lods
mov
test
cmp
fcoms
jae
fidivrl
adc
or
jl
adc
inc
pop
mov
inc
sbb
movsb
adc
cmc
jg
lahf
repz
repz
mov
fisttpl
xchg
jns
rclb
negb
in
int
testl
scas
cmp
rolb
cmp
stos
pop
testb
adc
scas
shll
gs
push
jns
mov
dec
test
mov
pushf
ds
mov
call
cwtl
int
adc
push
test
aaa
push
repz
xchg
xor
adc
and
sbb
ljmp
jne
dec
mov
test
xor
addr16
push
sub
into
sbb
scas
dec
sbb
pop
add
cmp
int
imul
lea
push
push
repnz
je
test
ror
or
xor
jmp
popf
lds
cmp
adc
push
mov
hlt
push
pusha
mov
jne
ret
std
out
js
fs
outsb
push
mov
fdivrs
fnstcw
cwtl
inc
test
insb
xchg
rol
dec
adc
xor
jecxz
pop
push
lds
xchg
sub
pop
or
xor
std
insl
or
popa
ret
mov
in
loope
jecxz
rol
aas
data16
jl
or
and
fimull
add
out
loopne
dec
sub
cmpsl
lret
adc
or
xor
aam
inc
mov
adc
inc
mov
jo
pop
outsb
mov
clc
cmpb
inc
notb
and
addr16
mov
sbb
pop
add
lcall
gs
out
outsl
sbb
sbb
cmpsl
push
pushf
mov
stos
bound
add
sub
push
in
push
stc
inc
shrb
shlb
imul
xor
mov
or
rorb
bound
inc
outsb
cmp
rorl
das
jbe
jp
aad
daa
sub
pop
ljmp
mov
cs
stos
push
bound
gs
mov
mov
fsubrl
cwtl
mov
pop
dec
jno
lock
cwtl
and
sbb
jne
mov
cmovns
xchg
dec
lods
inc
inc
insb
pop
popa
pop
and
out
sbb
rsm
push
ljmp
jmp
pop
adc
inc
lods
bound
dec
pop
lcall
adc
fsubr
push
sbb
addb
xchg
neg
insb
and
inc
push
sbbl
ja
mov
out
and
stos
lcall
das
xor
push
inc
pop
ficoms
xor
in
adcb
je
sbb
xchg
sbb
scas
push
movsb
cs
cmp
imull
dec
outsl
std
jo
push
mov
out
or
and
cmp
movsb
add
fmul
shl
push
test
insb
push
push
push
push
int
pop
ret
push
mov
lahf
adc
mov
leave
adc
daa
jmp
adc
sbb
cwtl
jge
mov
cmc
pop
mov
cli
aas
prefetchnta
imul
repz
shl
sbb
call
or
out
jp
xlat
fidivrs
icebp
addr16
xor
and
mov
out
add
sub
gs
pop
jo
fnstenv
push
dec
add
mov
out
or
or
push
jns
push
notb
leave
mov
cmpsl
dec
inc
push
inc
movsb
test
fldcw
pop
and
cmp
sbb
cmp
negl
mov
mov
out
es
dec
psllq
lret
test
adc
dec
sbb
fwait
sub
div
pop
jns
jp
jle
movsb
mov
fisubrl
fdivl
pop
in
pop
loop
pop
clc
xor
les
xlat
xchg
repnz
jae
loopne
fstpt
call
cmp
adc
push
xchg
adc
sahf
pop
jecxz
pop
pop
jecxz
imul
out
les
imul
test
jp
das
inc
es
mov
and
mov
mov
fwait
or
loopne
bound
int3
pop
mov
add
icebp
sub
sub
push
fldcw
cmc
hlt
rcrl
sbb
insb
arpl
int3
out
cmc
push
mov
addb
out
into
jb
sbb
mov
aam
mov
xorl
mov
dec
or
into
push
popf
adc
sbb
dec
mov
sbb
adc
lods
pop
lret
test
fnstsw
dec
dec
adc
adc
jne
sbb
popa
xor
jmp
adc
push
inc
push
adc
stos
repnz
stos
lea
mov
push
mov
push
data16
popf
jle
imul
inc
sarb
cmp
or
stos
xchg
std
sbb
sahf
test
repz
xchg
cmp
inc
out
and
push
mov
or
clc
icebp
jecxz
cmp
push
xchg
out
lret
dec
xchg
push
int3
and
adc
sahf
call
push
dec
adc
sbb
je
daa
mov
adc
std
das
lcall
negb
push
or
rolb
mov
stos
ja
icebp
mov
popf
push
movsl
jp
stos
ljmp
daa
hlt
icebp
data16
sbb
sarb
stos
vpcmpuq
sub
pop
sub
mov
xchg
pop
jl
fisubl
xchg
mov
addr16
xor
cli
outsl
mov
mov
or
andl
push
mov
enter
sahf
das
mov
cmpsb
subb
push
pusha
arpl
xlat
js
mov
fdiv
fucomp
xchg
inc
dec
jp
add
fdivp
push
jecxz
and
cwtl
dec
jne
loop
popf
sub
nop
outsl
das
or
pop
push
jne
jmp
xor
sbb
xlat
jbe
sub
push
ds
ret
mov
ss
push
and
xchg
bound
in
cmc
cmp
push
ljmp
xor
rorb
xor
leave
cs
addr16
xor
xor
mov
jp
adc
or
xchg
dec
cmp
cli
push
pop
adc
stos
mov
mov
sbb
pop
gs
call
jns
arpl
enter
adc
jnp
cmp
mov
xor
in
lock
jns
mov
jg
lea
jmp
push
sub
xchg
add
xor
or
sbb
ficoml
sahf
and
xor
mov
dec
aad
stos
arpl
jnp
scas
mov
aam
in
lock
das
mov
std
testb
inc
stos
scas
dec
and
test
inc
mov
jl
jg
or
scas
jne
mov
es
je
loop
out
sub
inc
cld
and
repz
mov
stc
add
cmp
sub
xor
mov
pop
adc
cltd
lock
stos
mov
scas
pop
test
imul
or
test
push
outsl
clc
int3
daa
xorb
leave
pop
cmp
jmp
lds
add
int
das
lahf
inc
push
iret
sbb
lds
inc
lea
mov
push
cmc
jns
fwait
jb
mov
pusha
loopne
das
stos
pop
dec
inc
test
sbb
fstp
out
leave
stos
dec
xchg
int
jne
sti
mov
xchg
movsb
movl
adc
sub
pop
pop
loop
aaa
sub
cli
pushf
insb
addr16
ror
adcl
xchg
sbb
divb
lods
pop
dec
pusha
adc
push
jl
js
and
mov
mov
pop
jmp
iret
dec
arpl
or
cs
xchg
mov
lods
adc
sti
decb
and
stc
test
pop
xchg
adc
insb
addl
insb
sti
adc
xor
and
pop
push
lahf
shrb
loope
in
in
adc
pop
sbb
dec
mov
mov
sti
movsb
scas
mov
inc
testl
loopne
add
cli
mov
iret
mov
mov
outsl
or
jbe
aaa
push
loop
cmc
or
xor
push
inc
jecxz
mov
fists
sub
or
lcall
arpl
ret
push
arpl
lea
or
insb
sbb
push
ljmp
inc
pop
mov
mov
shlb
jno
sbb
cmpsl
stos
pop
and
xchg
and
or
leave
neg
or
inc
mov
mov
lea
sarl
xchg
xor
push
outsl
out
xor
fwait
mov
cli
jno
jnp
aas
cltd
lea
xchg
cmpsl
or
std
sub
in
outsb
pop
xchg
gs
cmc
ss
ret
das
mov
sub
or
out
jge
pop
nop
aad
inc
pop
iret
push
fisubl
pop
stos
idivl
lret
sbb
pop
sub
out
cmpsl
adc
pop
enter
les
xor
or
sarb
out
pop
fwait
jne
xchg
or
sub
stos
cmpsl
lahf
or
cmp
fucomip
pop
dec
imul
pop
jb
scas
pop
add
divl
jbe
test
data16
lock
xchg
stos
aam
and
enter
bound
repz
pop
push
int
mov
push
pop
inc
jle
mov
push
cs
inc
test
or
jg
add
std
mov
pop
inc
sub
mov
ret
push
dec
adc
xchg
shld
push
or
mov
icebp
pop
das
ljmp
sub
xor
cmpsb
popf
jmp
cmp
das
sahf
jb
ds
xlat
xchg
xor
lods
test
mov
fs
mov
pop
das
pop
mov
pushl
push
sub
leave
mov
cmpsb
pop
pop
and
repnz
scas
xchg
dec
jle
push
lret
daa
jo
loop
xor
or
ret
mov
dec
lret
add
inc
jp
lahf
and
cmp
cmp
pop
xchg
cli
aas
int3
leave
pop
mov
loopne
hlt
popf
inc
pop
and
jmp
xchg
sbb
mov
out
dec
jo
add
mov
in
pop
outsb
aaa
jle
cs
xchg
roll
dec
adc
push
dec
shll
or
xor
test
mov
mov
mov
xor
daa
pop
fistpl
push
test
fidivl
xchg
push
inc
mov
xchg
xor
je
mov
ja
lret
adc
add
dec
sub
fs
mov
or
cmp
pop
sbb
movsl
adc
jle
ret
mov
outsb
pop
jns
call
jg
stos
sbb
pop
mov
jnp
sbb
jmp
fidivl
xor
mov
cmpsl
fstps
sub
lahf
sbb
push
jne
sub
cs
and
inc
dec
outsl
jo
test
jle
cli
shr
dec
pop
push
pop
test
mov
daa
movsl
enter
xor
lods
and
movsb
fildll
pop
fwait
or
in
mov
mov
int
mov
jl
dec
rcr
in
jo
aas
leave
lock
les
xorl
sbbb
push
in
add
xchg
or
jne
cmpsb
mov
es
out
test
lret
scas
add
mov
enter
popf
ljmp
fwait
icebp
jl
pop
xchg
adc
out
enter
mov
and
daa
push
mov
movsl
fsubs
inc
cs
mov
roll
xchg
cmc
in
test
test
pop
pop
test
js
into
insl
mov
rcl
mov
cltd
jb
mov
nop
add
jle
out
mov
call
jp
and
and
mov
scas
push
out
in
mov
and
mov
mov
call
dec
cwtl
pop
pop
sbb
test
lock
add
pop
fsubr
mov
sub
mov
pop
mov
mov
std
fnstenv
mov
stc
fstpl
stos
cltd
in
mov
or
cmpsb
or
jns
cmp
pop
jmp
cmp
jge
iret
js
iret
mov
adc
mov
test
cmpsl
ljmp
jne
inc
movsl
xor
or
mov
test
mov
fisubl
adc
sub
push
enter
inc
lds
jecxz
in
cmp
xchg
mov
xlat
lock
inc
mov
and
sbb
lret
int3
xchg
jnp
add
xchg
or
mov
push
loopne
cmp
jmp
inc
popf
xchg
int3
outsb
aas
inc
aaa
in
fidivrs
pop
fcmovne
cltd
nop
dec
aaa
sbb
pop
mov
push
imul
add
iret
sahf
test
cmp
sub
imul
pop
out
clc
inc
mov
pop
gs
out
in
inc
sub
cmc
adc
rcrl
mov
xor
cli
push
push
int3
fcomp
sbb
jmp
sbb
jb
movsl
mov
cmpsl
cltd
adc
mov
mov
or
jne
jmp
add
cltd
dec
inc
xchg
cmpsl
mov
fiadds
dec
sahf
or
jbe
addb
push
bound
loope
sbb
jl
sub
cmp
jbe
xchg
aad
lods
sub
call
fcomps
dec
mov
enter
cs
jo
inc
xorb
cmp
fbstp
sar
rcrb
jl
ret
dec
add
jnp
jg
jno
cmovno
sub
out
les
xchg
mov
or
bound
js
aam
daa
dec
loop
out
xor
iret
filds
adcl
std
lock
push
push
imul
mov
add
jp
cmp
clc
push
add
jnp
dec
mov
int3
imulb
and
inc
ds
xchg
out
rolb
in
cwtl
ljmp
mov
pop
pop
jecxz
xchg
push
scas
and
mov
cmc
jecxz
enter
inc
push
adc
fidivs
add
inc
popa
xor
or
mov
dec
cld
lods
and
adc
xchg
mov
clc
xchg
xor
outsl
call
pop
ror
and
mov
and
movsl
or
inc
add
lea
jns
lds
popa
out
cltd
cs
decl
jg
mov
popa
lret
push
sbb
mov
aam
jno
sarb
sbb
lods
xor
mov
cmp
jg
inc
insl
fwait
test
test
scas
add
and
sarl
repz
add
xchg
pushf
nop
movsl
add
xor
cmp
adc
test
js
and
lahf
mov
in
pop
pop
pop
fidivrs
cli
dec
in
mov
outsb
mov
loope
push
shrb
cs
add
xor
and
jns
subl
pop
in
jae
sahf
hlt
pop
test
jle
je
xchg
push
or
shll
and
xor
mov
ret
sbbb
stos
movsb
push
xchg
jg
mov
pop
mov
inc
xlat
jle
mov
add
in
pop
add
or
lods
jle
jns
or
push
in
out
cli
push
arpl
xchg
icebp
cmp
inc
dec
cmp
gs
sha256msg1
mov
dec
mov
out
adc
sarb
sub
xor
inc
or
andl
push
mov
gs
popf
jne
adc
dec
and
mov
div
iret
aas
xor
inc
push
cmpsb
add
mov
cld
cmp
leave
or
xor
pop
xor
movsl
mov
je
mov
insl
repz
sahf
into
mov
xchg
test
sub
lods
stos
mov
dec
inc
setae
repnz
popa
int3
jo
and
adc
push
sti
push
outsl
popf
dec
add
test
fisttps
pop
mov
call
or
and
imul
mov
dec
cwtl
sarl
and
call
and
add
imul
and
scas
xor
scas
fnstsw
adc
push
mov
addb
add
fisubrs
or
hlt
xlat
push
les
jmp
cld
pop
and
jecxz
movsl
add
xchg
shll
imul
jbe
mov
cmpsl
mov
subb
xchg
sub
add
or
inc
push
pop
int3
test
inc
jg
outsb
adc
sub
fsubl
mov
je
aam
or
jmp
inc
mov
test
inc
dec
lods
xor
mov
fdivp
cmp
stc
pusha
xchg
hlt
mov
and
ret
dec
xlat
pop
sbb
inc
ds
in
cmp
xor
or
mov
inc
dec
mov
dec
pop
add
adc
sysexit
and
mov
sbb
fists
push
fisttpl
out
cmpsb
push
fisubrl
sub
dec
mov
icebp
and
xchg
neg
ss
addr16
inc
cli
sub
sbb
scas
sbb
sub
outsl
scas
mov
mov
adc
xchg
mov
repnz
js
cmp
pop
jge
icebp
pop
fcomp
xchg
fwait
sub
sti
jae
mov
jle
repz
clc
gs
shrl
ja
int3
dec
into
dec
xlat
cs
sbb
mov
inc
ja
lret
jmp
mov
pop
outsl
pushf
push
loopne
stos
idivb
hlt
fstl
adcb
pop
jns
push
jl
insl
xor
arpl
in
bound
xchg
inc
xchg
sub
enter
cltd
mov
lds
aaa
or
and
and
iret
dec
das
push
push
inc
push
bound
hlt
out
push
adc
fwait
jbe
and
enter
and
push
pushf
idivl
dec
scas
cmc
mov
sbb
cwtl
and
icebp
mov
in
divl
aam
cmc
mov
add
and
sub
rolb
mov
sbb
mov
fbld
ficompl
call
iret
repnz
push
stos
jecxz
mov
sbb
addb
jnp
mov
nop
or
fcomp
lock
pop
or
adc
insb
xchg
dec
std
pop
push
push
and
loopne
xor
repnz
test
stos
jno
insl
pop
inc
daa
mov
jmp
push
outsb
fs
jmp
jg
movsl
sub
nop
leave
jne
xor
mov
sbb
push
or
mov
hlt
push
push
mulb
inc
inc
sub
mov
in
lods
sbb
out
mov
sbb
fcomps
arpl
push
xchg
neg
gs
out
xorl
push
push
test
in
and
pop
mov
cmc
mov
cld
mov
orb
mov
push
int
cmp
rorb
sbbl
mov
jmp
out
jecxz
jle
aas
pop
loop
add
movsb
and
loopne
rcll
push
push
lea
mov
cltd
jmp
dec
add
jnp
or
pop
xchg
inc
cmpsl
cmp
mov
cmp
lret
icebp
mov
xor
cmp
ret
int3
inc
pusha
push
int
dec
cmpsb
push
push
add
push
les
sbbb
dec
loop
fadd
insl
and
loop
test
mov
and
mov
mov
dec
popf
mov
push
repnz
decl
pushf
adc
add
movsl
sahf
jge
and
hlt
cmpsb
push
fucomip
int
push
sbb
cmpsb
mov
mov
push
pop
jae
loopne
aad
xor
cmpsb
test
or
adc
fisttpll
cmpsl
stc
shr
sbb
dec
push
orb
jl
ja
mov
or
push
shl
test
iret
stc
add
cmp
and
mov
and
sbb
sub
adc
movsl
lds
push
ds
push
push
shlb
scas
add
or
add
xor
aam
enter
mov
frstor
xchg
pop
jnp
in
adcl
inc
dec
sbb
sbb
xor
std
add
cld
jo
xchg
push
leave
les
insb
push
mov
sbb
stc
repz
mov
push
roll
cwtl
enterw
sub
xlat
inc
test
xor
mov
cmp
adc
data16
mov
jmp
ror
add
shll
ja
lcall
ds
inc
and
mov
adc
sbb
adc
adc
mov
out
jbe
cmp
cmpsb
leave
inc
inc
cmp
lcall
popf
add
push
mov
lds
cli
stc
push
push
inc
fs
mov
xchg
mov
add
les
add
mov
mov
sbb
xchg
mov
jl
rcrl
and
or
cmc
ja
aam
sbb
xor
dec
scas
jns
and
ret
jb
xchg
lcall
sbb
lods
fimuls
in
push
cltd
movsb
or
cmpsl
jle
mov
fiaddl
xor
inc
das
push
out
into
jns
push
das
jmp
pusha
sbb
in
cmp
pop
or
movsl
and
iret
mov
pop
in
push
lret
divb
rcl
fisubrl
mov
jle
mov
sarl
scas
frstor
in
push
pop
xor
popa
rcrl
call
cmp
mov
adc
push
xor
xchg
and
in
mov
and
pop
ret
jmp
insb
jmp
int3
and
cmp
jbe
push
add
mov
nop
in
fists
lock
xor
inc
les
xor
mov
push
mov
mov
mov
clc
addl
xor
xchg
jno
adc
nop
fldt
sub
xor
data16
mov
sti
sub
push
add
sub
test
les
imul
shll
test
loope
testb
mov
mov
push
and
cmp
pop
mov
out
pushf
les
add
pop
ljmp
ljmp
jp
mov
popf
das
lret
sbb
fadd
inc
imul
fs
jbe
or
fstps
dec
xlat
pop
xchg
arpl
ret
shrl
mov
daa
fdivs
pop
fbld
pop
jmp
adc
movsl
xchg
inc
cmpsl
xchg
pop
std
cmp
test
cld
lret
mov
push
mov
jns
out
shr
mov
rclb
inc
call
fdiv
cmp
fldt
sub
add
pop
ss
mov
lahf
mov
push
dec
je
or
stos
out
lret
fs
sbb
scas
or
in
loopne
test
std
daa
mov
dec
xchg
xchg
cmpsl
pop
in
dec
push
mov
lods
jecxz
sbb
pop
sahf
fstpt
fsts
adc
stos
pop
xchg
push
cmpsb
jle
inc
test
push
outsb
cmp
adc
or
jns
das
jnp
rcrl
test
enter
imul
mov
cmpb
mov
fists
jnp
in
loope
adc
stos
pminsw
push
sbbl
sbb
mov
and
or
dec
sbb
xchg
or
movsl
inc
jae
jle
or
push
ljmp
cltd
cwtl
xor
and
adc
add
push
bswap
adc
inc
aad
cmp
inc
cltd
stos
jge
xchg
inc
outsb
mov
sbb
arpl
push
mov
xchg
lds
gs
dec
sbb
mov
adc
in
and
sbb
jo
adc
cmpsl
push
adc
lahf
mov
lahf
leave
ljmp
call
xchg
pop
jnp
aam
outsb
loopne
and
imul
push
or
mov
repnz
add
inc
lea
jno
leave
lea
or
leave
or
lret
and
cmp
xchg
inc
mov
jle
add
int
lock
inc
pusha
inc
sub
or
add
sahf
in
and
pop
lcall
andb
scas
dec
push
inc
sbbb
imul
popa
push
notl
jae
imul
xor
jl
adc
dec
jbe
xchg
or
adc
rcr
les
mov
mov
repz
pop
push
out
adc
ret
and
lret
outsl
xor
fdivl
push
call
test
push
imul
jno
xchg
jle
rcl
or
xor
mov
popa
mov
sbb
andl
aaa
cmc
mov
lods
test
notl
aas
int3
pusha
sbb
pop
xor
fbstp
pop
mov
enter
mov
paddsw
cmp
in
cmpsb
mov
aam
lock
out
mov
scas
ja
or
and
lcall
rolb
jnp
push
jns
inc
xor
orb
cs
or
movsb
popa
aas
adc
arpl
xchg
aad
outsl
js
in
sarb
cmpsb
fadds
gs
pop
mov
sub
sub
scas
cmpsl
pop
add
scas
test
les
and
mov
adc
ds
fistpll
sbb
es
push
dec
out
nop
cmpb
ret
das
sub
xor
add
fisubs
jle
vpaddsw
imul
outsl
inc
stc
sahf
loope
add
dec
add
mov
int
add
stc
mov
jecxz
ja
or
jl
sbb
in
cmpsb
popa
insb
pop
xchg
sbb
orl
sub
inc
push
stc
out
pusha
divb
inc
pushf
xchg
cwtl
fdivl
popf
inc
imulb
xor
dec
mov
in
adc
xlat
ja
sub
insl
adc
inc
loope
sarl
cmp
mov
aad
pop
jle,pn
push
add
add
aaa
pop
ret
icebp
fmull
jnp
aam
je
add
xor
xor
mov
lret
lcall
scas
popa
cmpsb
repz
mov
shrb
xchg
push
cmp
adc
nop
xchg
cmpsl
out
mov
lds
int3
add
ljmp
mov
int3
fildl
pop
jnp
add
xor
bound
shll
fdivrl
out
sarl
stos
pushf
push
insl
fiadds
stos
aas
popa
pop
inc
or
jbe
leave
add
jmp
pop
cld
out
jmp
adc
add
rorl
push
cmc
out
mov
mov
sub
mov
push
push
sub
xor
mov
jmp
cmpsl
jbe
fnstenv
subb
push
lcall
in
push
and
loop
and
push
icebp
dec
stc
imul
push
nop
insl
adc
pop
repz
roll
xchg
adc
jecxz
in
pop
imulb
mov
add
pop
iret
nop
push
repz
xor
imul
mov
cmpsl
mov
mov
in
test
mov
mov
dec
repz
pop
push
into
inc
hlt
inc
or
push
dec
jp
test
dec
divb
xchg
mov
xor
in
loopne
daa
sti
cwtl
or
push
fwait
add
pop
adc
dec
loope
jne
clc
mov
xchg
ret
repnz
subl
lret
jg
sbb
xor
pop
into
sbb
cmp
enter
mov
lret
pop
mov
pop
iret
test
test
lea
pop
push
ds
push
sub
push
mov
aas
mov
or
lahf
or
mov
shll
lahf
mov
sbb
xor
repz
jg
jne
ret
jae
cltd
sub
mov
push
ret
mov
in
pop
imul
cmpsl
ret
push
cltd
mov
idiv
loopne
ret
jp
mov
xchg
in
fstps
inc
mov
lret
adc
popa
stos
test
je
shll
or
cmc
mov
cltd
imul
imul
sbb
int3
inc
hlt
add
mov
and
jns
lret
sarb
int3
dec
mov
mov
pop
neg
jae
sbbb
push
mov
push
mov
lret
xchg
mov
add
sahf
add
ja
inc
or
lea
cmp
lods
movsb
cmp
fs
daa
and
push
sahf
xorb
sub
cmpsb
xchg
mov
rcll
lods
aad
mov
sbb
out
scas
shlb
ljmp
clc
inc
mov
in
leave
fimuls
int
or
clc
mov
int3
inc
cmp
add
mov
icebp
or
jecxz
sbb
and
lds
pop
emms
adc
aas
sub
rcll
outsl
jge
sub
pushf
inc
repz
nop
and
clc
mov
dec
jnp
aam
push
cmpxchg
fidivrs
roll
out
pop
rcl
lds
ficompl
pop
dec
shr
sarb
in
imul
ret
push
fists
xchg
xchg
adcb
mov
ficomps
std
das
mov
ljmp
outsl
or
xchg
adc
rorb
ja
fbld
and
inc
movsl
lods
pop
mov
inc
mov
pop
and
test
add
pop
mov
pop
pop
push
gs
jno
cmp
add
decl
sub
hlt
dec
pushf
lahf
jo
cs
mov
xchg
and
and
pop
xor
iret
pop
sbb
fsubl
shlb
sub
cwtl
sub
or
stc
sub
cs
xchg
pop
jb
inc
in
cmp
xchg
xor
xchg
adc
dec
xchg
ja
repz
cmpb
pushf
dec
faddl
mov
and
addr16
sbb
or
mov
mov
xchg
mov
xlat
mov
add
jp
mov
jns
ret
and
lock
xor
int3
out
add
mov
pop
jno
out
push
pop
xchg
aas
xchg
test
push
sbb
testl
mov
push
sarb
adc
pop
add
jecxz
pop
xchg
gs
sub
and
jge
sbb
fs
pop
and
lcall
push
ret
leave
xor
xor
pop
adcb
ljmp
gs
shll
or
dec
jp
aad
lret
lret
ja
push
push
stos
mov
mov
mov
movsb
push
icebp
test
fisttps
mov
xor
movsb
or
adc
adcb
ds
add
xor
pop
and
adc
or
leave
inc
jp
pop
int
fistps
and
pop
add
shr
cmpsb
and
lret
cmpsb
incl
clc
loopne
bound
inc
cmpps
mov
std
sub
mov
push
mov
imul
lods
xor
aam
mov
psllw
ror
subl
jno
push
sti
out
int
cmc
mov
cmpb
es
lea
or
mov
out
xchg
sub
insl
push
mov
push
nop
fsubl
addr16
push
ds
les
mov
mov
jno
test
nop
test
cs
imull
sti
inc
jo
mov
jae
xor
add
lods
push
mov
cmp
pop
pop
mov
mov
xchg
test
pop
or
loopne
orb
aam
add
and
es
pop
lods
jb
jnp
xlat
adc
jecxz
cmpsb
dec
inc
out
inc
call
mov
mov
daa
xchg
pusha
and
lods
jecxz
mov
js
in
or
out
push
rol
and
mov
cmpsb
outsl
into
ljmp
fistpl
imul
aam
sub
lods
in
dec
fstpt
jmp
mov
int
leave
lds
ffreep
mov
sbb
pop
cs
loopne
jne
jns
js
cmp
das
mov
testl
das
ficompl
sahf
sub
aad
out
jl
xor
cmp
mov
movsb
ljmp
imul
out
mov
cmp
jbe
jo
jno
testl
push
xchg
test
dec
or
push
fistpll
pop
push
mov
pop
mov
test
cmpsb
push
sbbb
sti
loopne
cmpsl
add
popa
shll
lret
sub
inc
add
gs
ret
jecxz
loope
ljmp
adc
dec
scas
lahf
jl
testb
push
cmp
fstl
mov
cwtl
mov
pushl
xor
mov
fildll
push
xor
or
push
rol
inc
imul
loope
push
mov
cmp
div
inc
addr16
adc
add
in
mov
mov
pop
adc
in
popl
mov
xorl
sub
das
dec
fdivs
lcall
lret
out
xor
pop
cli
lret
ds
mov
and
iret
je
dec
xor
mov
fwait
xlat
inc
cmp
pop
mov
dec
std
test
shr
or
ret
lock
sbb
icebp
into
out
int3
dec
push
add
or
dec
pop
mov
shll
mov
jns
pusha
jp
sbb
sbbl
nop
lcall
popa
mov
mov
insb
subb
stos
fisubs
pop
inc
add
adc
imul
lret
enter
xchg
lcall
insl
mov
jb
sbb
mov
ficoml
jle
fists
xor
cwtl
sub
dec
push
test
push
mov
fs
mov
add
loope
cmc
popa
push
mov
inc
jecxz
ss
je
and
lea
mov
dec
xchg
or
out
jno
notb
xchg
pusha
dec
call
xchg
sbb
adc
jno
out
mov
js
popf
push
jg
or
dec
loope
dec
mov
cmp
into
pop
outsb
enter
notb
divb
xchg
or
inc
popf
mov
mov
inc
in
das
fnsave
push
lret
test
jmp
orl
leave
sub
movl
arpl
lock
out
aam
sub
repnz
sub
insb
xor
repz
pop
in
insb
adc
sbb
fcoml
xor
dec
dec
or
lds
outsb
pop
sub
sbb
cld
repnz
aas
mov
fstl
icebp
sbb
lahf
test
mov
lret
lock
dec
push
gs
sub
fsubrl
mov
je
stos
pop
dec
nop
dec
mov
push
mov
sub
bound
xchg
jnp
sbb
sbb
mov
pop
mov
hlt
dec
pusha
xor
dec
xor
push
xor
sbb
jo
clc
dec
call
arpl
cmp
or
dec
ss
mov
cs
jge
adc
repz
mov
sbb
push
inc
mov
rclb
mov
inc
je
int3
rcl
adc
lods
adc
addb
aaa
dec
sbb
add
cmpsb
mov
mov
enter
mov
dec
xor
sbb
jae
clc
pop
test
in
loopne
addl
pop
idiv
push
xorb
adc
bound
or
jb
xchg
cmc
insb
inc
sbb
inc
or
jl
pusha
push
insl
imul
jge
nop
insl
xor
stos
dec
sti
lock
out
inc
mov
cmp
push
xchg
fsubrs
shll
clc
push
mov
insb
or
popa
fdivr
push
int3
pop
push
push
mov
mov
ret
cmp
addr16
adc
std
pop
mov
xor
test
add
ret
sub
cmp
and
loop
dec
fucomip
insl
xchg
sbb
mov
addl
mov
push
pop
mov
shll
push
dec
sbb
xchg
jg
jle
sub
daa
rcl
shlb
and
xor
adcl
xchg
jnp
push
outsl
pop
sbb
sub
mov
push
fs
pop
xchg
insl
aad
adc
je
fs
lock
pushf
adc
mov
fdivr
push
repnz
out
sub
and
cmp
jmp
xchg
fcomp
jns
test
sarb
daa
xchg
sbb
push
scas
jle
lret
dec
fadds
mov
aas
push
adc
adc
or
hlt
pop
pop
add
sub
pushf
fildl
lret
mov
push
insb
into
xchg
repz
cltd
jo
adc
fsts
adc
sub
jbe
xchg
sahf
cmp
test
dec
mov
inc
adc
adc
inc
xor
jb
loop
push
in
leave
pop
sbb
orl
insb
xor
dec
mov
mov
xchg
xchg
movsl
push
aad
out
sub
stos
sub
dec
push
enter
mov
jo
lds
sub
ret
mov
in
inc
fidivs
int3
jb
aas
xchg
cltd
sbb
stc
cmp
xor
cmp
xchg
sub
aad
and
inc
cmpsl
mov
mov
addr16
inc
mov
addl
lds
adc
dec
dec
or
mov
inc
xchg
pop
xor
test
aaa
cmp
lret
stc
and
xor
mov
testb
pop
xor
fnstsw
int
fiaddl
add
jg
cmp
inc
in
in
and
std
repnz
sbb
mov
xchg
sbb
ror
fs
stc
xor
cmpsl
aad
cmc
lods
inc
or
fs
xor
add
pop
mov
dec
rcrb
pop
pop
cltd
clc
xchg
jmp
fs
sub
out
inc
jbe
or
jl
mov
aas
andl
push
sub
icebp
dec
xor
jns
add
jo
out
and
xchg
jnp
fisubrs
mov
xor
clc
cwtl
xchg
icebp
jo
mov
push
or
das
int3
stos
dec
xchg
sti
mov
data16
and
daa
mov
sub
int
in
xchg
xchg
mov
rol
lret
pop
out
inc
jb
pop
jb
mov
lret
xchg
es
add
dec
pop
imul
add
cmp
jle
hlt
fldenv
xchg
cmpsb
in
push
imul
mov
xchg
pop
mov
daa
inc
in
add
pop
outsb
sbb
adcb
loopne
loopne
scas
negb
jmp
rcll
out
adc
imulb
adc
add
shl
popa
dec
cmc
xchg
into
lahf
pop
pop
and
mov
dec
loop
arpl
loopne
stc
loop
arpl
lods
dec
cmp
push
insl
add
lret
test
data16
out
pop
insl
sub
adc
in
pop
xchg
xor
aaa
jnp
xor
imul
push
push
mov
popa
cmpsl
ds
sbb
pop
inc
mov
lods
lret
nop
ret
mov
or
inc
lds
mov
push
xor
dec
scas
iret
out
dec
sub
iret
mov
dec
in
inc
inc
into
and
mov
imul
mov
scas
inc
and
das
or
dec
xchg
fsubrs
test
mov
sub
lds
jp
or
lea
mov
mov
enter
into
in
stc
mov
bound
stc
pop
js
mov
or
out
inc
pop
cli
test
rcll
into
or
and
out
or
jb
leave
push
lods
movsb
cmpsl
testb
xchg
hlt
push
add
lea
sti
repnz
or
mov
or
cli
adc
mov
lahf
pop
addb
mov
jmp
int
cmp
dec
jns
add
rdtsc
fdiv
or
adc
cmp
xchg
daa
pop
stos
in
mov
les
sub
into
imulb
push
inc
sti
inc
push
jecxz
daa
sbb
movsb
rolb
test
lea
dec
lcall
pop
jle
scas
in
lahf
in
cmp
mov
add
outsl
in
aas
stos
mov
das
push
mov
mov
mov
adcl
sub
push
scas
sarl
push
negb
sbb
adc
cltd
and
int
clc
sub
mov
xor
sub
inc
scas
test
mov
mov
orl
subb
jge
dec
mov
cmp
lods
idiv
sti
out
lcall
sub
xchg
xor
pop
enter
adcb
push
cmp
into
and
xor
fstpl
leave
pop
cld
mov
add
loopne
mov
repz
addl
mov
pop
ret
popa
pop
sbb
lods
jo
cmpsb
pop
push
mov
fs
cmp
sti
sbb
cmp
rcll
rorb
pusha
andl
push
pop
in
pop
fisttpll
jmp
mov
ret
push
dec
pop
xor
jmp
hlt
or
js
sub
cmp
cmpsl
xor
sub
aaa
clc
lods
sub
and
push
cmpsl
xchg
jmp
lods
or
or
xor
icebp
loope
xlat
iret
mov
stc
inc
mov
sahf
jno
pop
jg
repnz
aad
add
lds
jg
es
popf
cmpsl
aas
cltd
imul
rcr
lea
push
daa
dec
mov
xor
xlat
dec
adc
mov
stos
scas
pop
add
stos
sub
cmpsb
gs
std
xor
mov
bswap
dec
hlt
mov
sbb
in
pop
aas
xor
pop
rcll
jo
pop
leave
add
pop
es
jb
jl
jecxz
incl
mov
jns
enter
loope
xor
inc
sahf
add
cli
out
das
loop
inc
adc
dec
adc
in
test
mov
lock
out
jecxz
filds
cli
push
dec
int3
cmpb
mov
cltd
xor
fistps
test
iret
popa
mov
dec
pop
test
ja
lret
mov
mov
out
sbb
adc
add
pop
call
or
jge
pop
sbbl
push
pop
pusha
adc
add
push
pusha
add
inc
lea
push
push
xor
jecxz
int3
dec
stos
push
fsubrs
aam
pushf
push
sub
fsubs
mov
mov
dec
add
mov
test
loope
adc
jnp
cmp
jb
test
push
cmpsb
add
dec
sbb
cmpsl
jl
fstl
stc
enter
or
mov
jb
jecxz
in
pushf
push
sahf
dec
cmp
cmc
xor
adc
push
jnp
sbb
xchg
pop
mov
adc
mov
add
in
mov
push
or
pop
xor
fldl2e
in
aaa
mov
fdivr
sub
cltd
call
add
jbe
sbb
lds
add
repz
pop
cwtl
jne
push
sbb
out
dec
or
pop
lahf
ds
mov
jbe
pop
cmp
inc
fs
ret
or
cmp
xorl
in
clc
or
rorl
movsb
lcall
inc
push
and
movsb
push
filds
cmc
incl
push
push
push
adcb
adc
cmc
mov
xor
pop
sbb
cltd
sub
cmpsl
jnp
mov
pop
sub
mov
test
jnp
imull
adc
xchg
mov
mov
push
push
jle
jmp
int
jecxz
cmp
jno
insl
push
imul
and
inc
mov
nop
out
shlb
and
cli
cwtl
lea
or
sbb
int3
sbb
rcll
xor
dec
stc
ret
bound
mov
adc
pop
jg
ror
jo
xchg
into
ficoml
sub
or
push
adc
or
and
mov
addr16
sub
jg
and
loop
lret
outsb
add
inc
cmp
aad
sti
push
adc
fwait
imul
add
inc
push
lret
pop
push
cmp
lods
das
jns
pop
cmp
mov
jle
mov
mov
test
cmp
dec
dec
imul
cmp
xchg
xchg
leave
cmc
mov
sbb
adc
inc
shrb
mov
shll
lock
xor
sahf
es
push
sarl
hlt
xor
daa
push
adc
scas
popa
pop
stos
mov
inc
rolb
insb
out
mov
inc
pop
dec
lea
roll
xchg
out
xchg
add
ja
or
xchg
cmp
mov
fidivrl
jb
ret
por
fisttpl
mov
or
pushf
lea
cwtl
sarl
mov
xchg
not
fiadds
push
stos
cmp
pop
push
cmove
iret
mov
ret
sub
faddp
mov
lock
insb
and
push
sub
lahf
cmp
dec
cltd
ss
adc
cmc
lcall
and
cmpsl
jp
hlt
jae
out
lahf
jmp
insl
sub
fistl
ret
aaa
lcall
shlb
mov
repnz
cmc
jb
ja
mov
out
pop
add
xchg
popa
pop
inc
mov
cmp
shll
pusha
cmc
mov
fcmovu
sbb
push
mov
sub
scas
call
andl
rorl
dec
mov
inc
out
cmp
mov
inc
and
mov
std
pushf
out
lds
jp
scas
lahf
popf
into
roll
adc
jp
fsubr
add
cmpsl
mov
popa
test
gs
mov
push
repz
inc
jne
and
dec
dec
out
fidivrs
jge
xchg
and
pop
inc
repnz
mov
and
add
inc
sbb
dec
dec
sub
cmp
mov
cs
mov
addr16
xlat
clc
movsb
sti
fadds
sub
int3
dec
movsb
inc
xchg
sbb
ud0
dec
inc
push
xor
xor
pop
repnz
das
cli
movsb
data16
or
pop
pop
mov
aas
lea
mov
je
push
aam
inc
or
jnp
mov
mov
push
jne
jnp
jp
sub
and
dec
ljmp
mov
dec
popa
cmp
psubw
mov
fucomp
inc
int
mov
pop
jg
inc
xchg
xor
pop
xchg
je
push
xor
or
mov
mov
mov
jnp
pop
cli
xchg
jmp
fisubrs
not
inc
outsl
mov
mov
aaa
mov
inc
mov
std
js
roll
das
into
mov
mov
ja
pop
hlt
xor
xor
fbld
xchg
lahf
sbb
add
orl
xor
fdivs
xchg
movsb
or
mov
cmpsl
cmp
push
std
test
icebp
inc
push
fwait
mov
mov
repnz
adc
les
xor
mov
mov
xchg
fcompl
sub
leave
shlb
dec
jnp
jl
je
mov
add
sub
cli
pop
sub
cli
subb
nop
sbb
in
leave
jmp
dec
addr16
xor
push
sarl
push
jae
negl
jmp
add
cmc
mov
andb
mov
cmp
iret
xchg
sub
push
or
imul
enter
jae
loop
mov
test
in
subl
lret
mov
std
ret
and
mov
test
outsb
jge
loop
push
jge
mov
mov
xchg
ja
fnstsw
incl
call
jne
push
add
inc
push
pop
dec
fimull
mov
mov
arpl
mov
hlt
insl
xchg
je
inc
cmpsl
loop
lods
aam
das
jno
xor
dec
xor
je
out
int
cltd
pop
fimuls
inc
call
push
mov
dec
adcl
pop
gs
or
mov
in
mov
mov
mov
fs
lcall
mov
lock
fiadds
and
push
jno
nop
push
jbe
int
cmpsl
xor
call
push
iret
inc
mov
add
cmp
sarl
mov
notb
cld
aad
sub
test
mov
nop
sub
cmpsl
insb
inc
shr
sbb
fwait
or
loop
xor
dec
jp
aam
add
out
mov
je
scas
cmp
or
scas
aam
dec
push
ljmp
ficoml
dec
mov
enter
adc
cli
jle
jcxz
aaa
push
push
lock
add
arpl
jae
jbe
data16
lahf
sbb
jg
popa
sbb
leave
mov
mov
add
icebp
cmp
sub
jne
sahf
aas
adc
insb
xor
subb
into
sub
js
rol
mov
and
ljmp
out
sbb
and
fnstsw
inc
xor
jecxz
xor
inc
sbb
mull
movsb
mov
mov
fidivrs
test
adc
leave
mov
fmuls
dec
jnp
ss
adc
dec
pop
or
pop
cmp
test
repz
inc
pushf
mov
add
cmpsl
in
data16
leave
mov
mov
cwtl
ljmp
ss
pop
stos
sub
or
xor
dec
xor
push
cmp
js
int3
iret
mov
inc
aaa
mov
sub
into
ss
daa
xchg
in
push
sbb
push
shlb
inc
cmp
fiaddl
fdivrl
rcrl
icebp
pmulhuw
dec
adc
jnp
xlat
idiv
nop
les
mov
pop
daa
xchg
loope
repz
push
adcb
sub
ret
fcoms
stos
imul
pop
in
repnz
clc
push
mov
cmp
cmp
dec
dec
and
insl
cmp
in
gs
jns
subl
dec
cld
les
or
call
in
adc
int
push
imull
mov
push
cmp
or
out
sbb
aaa
jecxz
cs
outsl
cmc
outsb
push
jg
or
jns
add
ds
mov
in
mov
inc
leave
test
pop
imul
popl
mov
push
movsl
inc
jns
xor
cltd
jecxz
test
xchg
pop
dec
mov
xchg
sub
insb
push
mov
lea
mov
ret
inc
cs
sahf
pop
xor
pop
adc
xor
loopne
pop
sub
lods
inc
lock
xchg
leave
sbb
jnp
inc
cmp
clc
cwtl
fdivrs
stos
sub
jmp
xchg
pop
pop
nop
jne
or
fs
inc
mov
gs
call
cmpsb
mov
or
sti
cmc
xor
pop
test
inc
pushf
xlat
sbb
push
ss
mov
dec
jge
and
add
repz
push
mov
pop
xchg
cmp
das
daa
jp
ret
add
sbb
loope
mov
mov
test
lret
mov
inc
mov
push
xchg
popa
test
data16
push
mov
xlat
sub
fisubs
mov
mov
mov
scas
ljmp
fcoms
cmp
aas
adc
jmp
aas
push
xorl
adc
inc
mov
or
dec
cwtl
cld
loope
dec
test
addl
add
rclb
push
fisubrs
pop
mov
into
test
fmuls
or
rolb
mov
test
mov
inc
pop
test
xor
mov
stos
push
fisttpl
lods
xchg
sbb
jp
fwait
mov
mov
mov
hlt
jne
lods
xorb
leave
jnp
adc
jp
out
add
mov
lret
fisubl
aas
jae
rorl
aaa
repz
adc
js
sahf
cmp
cwtl
stos
data16
dec
add
dec
daa
or
out
rorl
dec
or
cmc
jno
mov
out
fmull
loopne
push
jl
mov
idivl
iret
sbb
mov
cmp
imul
adc
sbb
test
test
adc
sub
jae
ror
dec
sbb
popf
and
push
frstor
insl
jno
arpl
and
adc
sbb
dec
scas
mov
imul
fs
dec
inc
and
jle
popf
pop
scas
pusha
adc
cmp
mov
fldcw
cmp
jle
jnp
xchg
in
mov
add
xchg
fisttpl
hlt
xor
movsl
movsb
and
ss
rcrl
pop
call
scas
sub
mov
repnz
mov
or
xor
lret
ds
nop
jae
jmp
mov
xorb
ljmp
aaa
inc
push
ljmp
mov
cwtl
lret
sahf
inc
pop
jg
cmpsb
ljmp
pop
xor
insb
scas
mov
dec
mov
aam
jg
push
sbb
mov
sbb
jecxz
test
out
fstpt
ss
xlat
and
cmp
adc
cmp
leave
sub
scas
in
push
test
or
popa
in
imul
fcmovnb
shrb
call
sbb
push
divb
mov
ret
and
mov
jp
cs
cmpsl
xchg
jecxz
test
faddl
mov
stos
sbb
daa
insl
subl
pusha
ljmp
adc
push
xchg
jns
es
jno
inc
clc
jb
jp
pop
inc
dec
in
leave
xchg
out
cwtl
repz
sar
xor
xchg
push
cmpl
imul
mov
jnp
iret
out
pop
lock
ljmp
inc
push
push
and
dec
int
sub
mov
mov
rol
cmp
add
mov
xchg
inc
cli
jae
push
test
or
inc
jbe
movsl
clc
mov
arpl
jge
into
aas
push
mov
lods
add
inc
shl
stos
mov
out
fadds
pop
bound
or
xor
dec
and
rol
ljmp
jg
jb
cmp
inc
test
pop
jecxz
daa
mov
rorl
xorl
lods
pop
inc
test
leave
pop
push
out
flds
dec
mov
sahf
pop
in
mov
xchg
out
and
inc
or
fdivrl
inc
pushfw
adc
add
sub
xlat
add
xlat
fsts
cwtl
call
mov
pop
mov
out
mov
icebp
cltd
cmp
popf
repnz
insl
ficoml
jle
js
mov
outsb
aaa
jae
lret
hlt
aas
sub
shlb
repnz
loop
out
sub
inc
bound
pop
popf
bound
repz
add
je,pn
lret
cmp
sub
data16
arpl
dec
cmp
jl
push
cmp
lods
jne
mull
push
clc
pusha
ljmp
mov
out
ja
add
in
enter
xchg
fwait
adc
fwait
jo
aam
fbld
jle
jmp
nop
ss
xadd
lcall
sbb
movsb
push
sarb
sahf
gs
jns
loopne
jns
jbe
mov
and
arpl
dec
js
jns
adc
mov
xchg
rol
add
iret
dec
xor
xor
pop
xor
mov
adc
mov
sub
fsubr
aaa
leave
cmp
imul
sbbl
loopne
mov
mov
out
pop
push
jecxz
sbb
xor
mov
mov
lret
cwtl
aas
push
add
cmpb
pop
mov
int
mov
addr16
push
xor
inc
xlat
add
mov
lret
xchg
stos
shll
jp
sub
stos
pop
jns
and
push
mov
lods
cmp
cmpsb
cmp
mov
sti
cmpsl
and
ftst
scas
xchg
add
ljmp
out
daa
inc
xor
call
xchg
inc
scas
sti
cmp
xor
xor
dec
mov
test
movsb
sbb
inc
mov
fsubl
cli
xor
mov
orb
in
pop
sbb
xlat
add
sub
jbe
hlt
aas
mov
hlt
xchg
push
out
push
cmp
out
push
push
xor
ret
decl
outsb
fldenv
out
inc
sub
ljmp
testb
push
add
sub
ljmp
lock
adc
sbb
test
dec
fstl
stos
shl
fucomp
xchg
push
mov
ljmp
mov
adc
pop
inc
addb
add
fs
fists
jle
sbb
adc
das
subb
lahf
push
fdivp
mov
pop
movsb
jmp
inc
adc
jne
mov
cmc
adc
xchg
aam
or
pop
mov
or
sub
int
out
andl
jae
rcrl
jns,pt
add
leave
aaa
sub
adc
call
cmp
insl
push
incb
pop
cld
push
ret
dec
jle
lcall
movsl
xor
add
push
hlt
fadds
imull
ljmp
push
rol
rcrl
test
mov
popa
mov
pop
inc
std
in
mov
push
jl
das
pop
cwtl
fxch
fs
jae
push
jmp
sub
dec
sbb
and
lret
pusha
cmp
mov
jle
dec
xor
xchg
mov
sub
fisubrs
scas
sbb
sahf
sbb
aam
push
jl
int3
sub
bound
inc
mov
aam
leave
cmp
jp
push
dec
aas
mov
mov
test
icebp
popf
inc
arpl
jp
cmp
sbb
fadds
xchg
jae
sti
adc
ljmp
jp
push
mov
movsl
fnsetpm(287
dec
pop
mov
mov
xchg
fisubl
dec
jg
shlb
cmc
pusha
pop
les
fst
or
sbb
fst
sarl
je
mov
pop
xchg
repnz
pushf
push
pop
sbb
inc
add
dec
inc
adc
xchg
push
add
fcmove
repnz
aas
andb
data16
stc
or
es
repz
cmp
sub
test
and
jmp
aaa
ret
sub
loopne
mov
mov
das
or
push
and
rorb
loopne
lods
xchg
into
pop
movsb
shl
ljmp
push
popf
outsb
int
lods
xchg
cs
mov
adc
sarb
sub
scas
ljmp
xor
mov
int3
nop
out
cld
inc
outsl
adc
inc
loope
in
and
mov
or
insb
mov
xchg
inc
sub
ja
push
pop
mov
and
mov
sub
iret
inc
rsqrtps
dec
dec
adc
pop
jbe
push
aad
loopne
leave
fnstcw
inc
pop
add
fsts
scas
loope
lds
lods
cmpsb
xor
xchg
mov
repz
mov
out
lret
sub
mov
jo
mov
lcall
clc
dec
adc
rcll
jp
dec
dec
dec
cmp
negl
cmp
xchg
lock
fsubrs
push
inc
lret
jg
dec
in
mov
jle
je
dec
das
adc
out
loope
dec
or
imul
lahf
and
add
cmpsl
das
subb
nop
scas
imul
call
lods
in
cwtl
pop
and
dec
push
leave
jle
inc
add
leave
xchg
das
jle
jbe
into
xchg
cmpsl
sbb
xchg
ret
add
shrb
xchg
int
loop
add
shll
jg
jo
pop
fcmove
test
sub
jno
rcl
es
jle
xchg
xchg
fistpll
xchg
movsl
and
mov
xchg
fisttpll
cmp
in
xchg
adc
mov
xchg
and
lock
bound
mov
adc
xor
jae
bound
lcall
lods
das
and
dec
je
subb
mov
stc
xor
jle
adc
cmpsl
fisubrl
stos
shrl
mov
negl
jnp
pushf
je
push
bound
fidivrs
mov
mov
mov
insl
inc
pop
rcll
mov
dec
dec
cli
repz
call
mov
adc
sub
shrl
push
push
leave
push
test
mov
icebp
test
je
outsb
fwait
popa
mov
les
sub
loop
jns
push
fsts
add
test
insb
outsl
dec
or
call
pop
addr16
popa
xor
lods
icebp
xor
sbb
out
inc
jo
sub
pop
push
sub
xor
lahf
xchg
aam
insb
mov
xchg
sti
lods
mov
push
insb
xchg
in
andl
movsb
pop
fs
pop
sub
movsb
dec
or
cld
sbb
pop
mov
xor
mov
int3
push
out
or
adc
inc
cltd
sahf
jp
mov
and
cwtl
addr16
inc
dec
xchg
or
sti
xchg
outsb
popf
mov
cmp
cs
pop
sub
push
rcll
pop
pop
clc
lds
fmul
xchg
shll
add
mov
xor
adc
lahf
jp
cmp
adc
or
int
aad
js
insb
xor
fstpl
loope
adc
out
fxch
sbb
and
push
adc
adc
or
enter
leave
cmp
add
add
xor
jae
push
cmc
ficoml
jo
lret
mov
push
out
movsb
push
mov
outsb
and
jmp
jne
loope
out
lret
and
xchg
mov
stos
mov
sbb
jbe
shrb
mov
lahf
popa
jmp
jbe
push
xchg
pop
lea
scas
mov
rolb
cmpb
shll
add
push
aad
orl
mov
frstor
in
sbb
xor
jle
mov
and
push
insl
out
outsb
add
insl
aam
and
aas
cmp
push
mov
jl
mov
adc
loop
push
ljmp
mov
cmpsb
cmp
jo
mov
aam
push
les
xchg
daa
jb
cli
stos
cli
xor
xchg
lret
test
andb
jecxz
add
aam
outsb
je
psllq
jmp
dec
out
repnz
sub
mov
repz
enter
jb
out
loope
sbbb
mov
jb
rolb
test
hlt
daa
out
dec
sub
pop
push
ss
cmp
sub
sub
sbb
mov
fcmovnu
xor
loope
arpl
sbb
fcomip
int3
push
and
in
xor
or
or
mov
mov
inc
push
scas
mov
pop
cli
cltd
xchg
push
lea
dec
pop
aad
arpl
fisttps
mov
dec
jl
shlb
pop
push
pop
in
fwait
nop
les
aaa
test
xchg
mov
push
dec
mov
fs
lods
sbb
sbb
xchg
ljmp
stos
xor
aas
cmp
xor
mov
xlat
or
roll
lret
cmp
fists
mull
outsb
into
push
adc
adc
sub
dec
xchg
pop
mov
aaa
pop
js
subl
mov
jle
sbb
test
in
cmp
mov
movsl
jmp
rcrb
add
dec
out
push
pop
pop
push
and
ljmp
dec
dec
sub
aas
mov
test
mov
outsb
bound
or
jle
shl
inc
insb
loopne
outsl
mov
mov
shrl
mov
jge
fisubrs
ret
dec
jo
dec
xor
xlat
jle
test
push
in
fistpll
das
lahf
mov
push
mov
sub
sbb
push
xlat
std
repz
jge
pop
xchg
call
push
xchg
push
mov
jp
sub
inc
outsl
loope
ror
jbe
inc
pop
adcl
push
out
les
dec
sahf
xchg
push
bound
adc
fs
mov
dec
mov
xor
pop
sbb
test
dec
sbb
or
cltd
inc
adc
cmc
mov
push
adc
xor
and
xlat
jo
sbb
cmc
mov
setns
jg
stc
pop
js
adc
or
lea
jnp
dec
lret
mov
jp
js
andb
arpl
and
call
push
add
stc
lcall
xchg
iret
es
dec
adcl
mov
push
dec
ficoms
out
mov
add
aam
xor
mov
mov
lods
cs
jns
outsl
es
mov
or
rol
jo
jge
dec
int3
push
jle
ljmp
xor
or
pop
inc
cli
out
push
mov
repnz
leave
cli
mov
cmp
test
mov
movl
jmp
jle
in
adc
dec
fisttpl
inc
iret
fmull
inc
cmpsl
cli
imulb
int
jge
push
pop
hlt
fstpt
adc
ja
pop
aaa
mov
lret
inc
movsb
inc
mov
mov
sets
push
jbe
add
xchg
test
jne
inc
xchg
dec
add
dec
fcompl
cmpsl
test
lcall
mov
lret
int3
mov
test
icebp
pusha
add
jae
inc
mov
mov
pop
lret
out
sahf
or
mov
lock
mov
pop
sub
sub
ja
sarb
icebp
test
adc
inc
addr16
and
leave
pop
pushl
dec
pop
mov
xchg
std
xchg
rolb
pop
js
pop
and
aam
std
xchg
icebp
or
mov
in
in
pop
mov
out
addr16
and
jae
ja
sahf
pop
mov
enter
cmp
lea
inc
and
clc
clc
addb
inc
inc
clc
insb
rep
loope
adc
cmp
sub
cwtl
xor
inc
push
daa
out
adc
or
sub
sbb
sti
fs
or
mov
mov
pop
sbb
sahf
inc
ret
adc
pop
pop
inc
pusha
movsl
fwait
imul
mov
mov
test
mov
sbb
fstpt
jo
ror
fwait
pop
ds
cmp
jns
std
hlt
lret
in
mov
fnstcw
cmp
ret
pop
adc
add
out
jae
push
add
xchg
mov
sahf
fsubs
or
dec
dec
test
aas
ja
push
ljmp
icebp
test
mov
paddd
iret
xor
cwtl
mov
push
pop
or
xor
mov
out
xorb
and
mov
adc
push
push
out
shll
frstor
push
sti
cmp
loop
int
xchg
lret
push
pop
vrcpss
or
jg
lds
push
in
sub
fsubs
aad
imull
sbb
push
sub
aad
and
push
mov
xor
aas
cmpsb
cmp
or
sub
test
mov
or
ret
imul
sub
cmp
stc
jg
or
push
mov
pusha
nop
xchg
dec
sub
xchg
pop
sub
test
jmp
ret
dec
jnp
lods
pop
cmp
test
pop
enter
pop
lcall
jns
push
dec
faddl
rorl
jnp
in
push
sarb
mov
andb
roll
push
movsb
lds
fs
notb
imul
fistpl
les
cmp
mov
and
xor
pop
shlb
out
fcmovne
jle
cmpsl
xor
shrl
push
and
insl
loope,pt
sub
test
fcompl
cmp
in
addr16
sub
inc
aam
xchg
cmp
xor
outsl
aad
adc
jns
jb
mov
jae
xor
cmp
push
enter
pop
shl
hlt
aaa
xor
test
ficomps
bound
iret
mov
and
insb
xor
cld
push
in
stos
movsl
fsts
pop
xor
xor
not
jb
js
scas
xchg
lock
and
sub
out
leave
jno
jmp
mov
jl
lods
pop
inc
ss
adc
cld
test
andl
lea
inc
push
mov
lods
jmp
movsl
cmpsb
cmpsb
jl
data16
and
sbb
test
inc
inc
cmp
cwtl
outsb
in
sub
push
cwtl
daa
pushf
sbb
add
test
mov
shl
cs
lods
hlt
int3
hlt
jmp
scas
mov
pop
pop
imul
mov
mov
add
or
jp
iret
in
icebp
or
mov
cmp
das
push
inc
aam
aad
fwait
mov
sbb
xchg
mov
xor
or
jge
popf
jmp
jne
pop
imul
mov
out
jns
and
jne
or
addr16
loopne
or
fxch
gs
in
sub
xor
sbb
orl
push
mov
pop
xchg
test
lret
pop
ret
jb
cli
xchg
cmpsb
out
ret
pop
add
push
and
cld
mov
jge
js
jb
adc
push
fdivs
pop
jge
mov
fdivs
dec
je
shl
nop
mov
das
insb
sti
pop
out
xor
gs
add
add
jae
frstor
mov
pop
loopne
filds
sahf
mov
mov
mov
sbb
insl
mov
notb
or
cmpsb
sbb
or
cmp
push
mov
and
sub
enter
dec
inc
jmp
ud2
xor
mov
or
push
adc
pusha
xchg
inc
cmpb
movsl
inc
in
pop
enter
icebp
jns
not
pop
leave
int3
lds
lods
xor
xchg
or
mov
xchg
jmp
pminub
test
mov
jg
test
push
jle
fcomip
outsl
sub
loop
push
jmp
lret
xchg
out
jo
lock
cmp
inc
pop
out
add
pop
ret
inc
jmp
cmpsb
sbb
clc
ret
or
and
ja
iret
or
hlt
add
lods
ja
pcmpgtb
std
loope
shl
dec
icebp
lds
out
pop
push
inc
mov
xchg
in
mov
push
cltd
dec
dec
int
jp
sbb
pusha
popa
sub
jbe
jo
add
scas
jb
in
test
nop
add
jb
push
mov
outsl
and
mov
dec
push
jg
mov
lds
push
imul
aam
in
clc
xchg
les
aam
imul
add
js
push
inc
and
add
dec
xchg
adc
fwait
jno
mov
jp
add
das
xchg
fisttps
dec
inc
mov
daa
daa
clc
xor
jp
dec
mov
fwait
imul
data16
jno
xchg
outsl
mov
pop
dec
jb
or
jns
mov
jmp
stos
rol
sbb
add
loope
pop
xchg
adc
inc
fimuls
cmp
gs
push
mov
lret
pop
cmp
mov
fstps
push
test
and
imul
mov
lods
sbb
sub
jg
testb
negl
imul
jg
xchg
pop
cmc
jecxz
mov
sub
aas
mov
or
inc
jl
sub
mov
jge
das
cmp
xchg
push
push
hlt
in
gs
or
out
push
fdivs
dec
repz
adcb
mov
xchg
jns
and
xchg
neg
cmp
fnstcw
push
ret
ja
jne
mov
jbe
scas
rcrl
dec
add
scas
add
or
mov
jp
add
add
into
sbb
andb
cli
inc
call
fisttpll
add
std
sub
insb
pop
mov
imul
cld
and
int
adc
xlat
xchg
subb
mov
dec
mov
mov
fdivrs
mov
pop
imul
or
sarb
cmc
push
insl
push
pushf
adc
outsl
test
fstpl
movsb
loopne
fmull
cmc
into
mov
push
sbb
mov
std
jg
clc
jnp
popa
dec
push
xor
je
adc
lea
push
dec
and
jno
test
mov
out
jle
push
out
mov
cmp
jge
dec
out
subb
popf
test
push
dec
add
push
test
xor
dec
mov
cwtl
cmp
or
lret
loopne
mov
push
fadds
push
or
jg
jle
mov
test
add
dec
ss
inc
pop
dec
dec
mov
push
outsb
mov
xchg
shr
pusha
push
xlat
cmp
mov
xchg
add
out
stos
add
sub
imulb
mov
sahf
in
dec
mov
dec
or
add
iret
pop
aad
repnz
imul
cmp
enter
out
cmpsb
repz
or
jnp
shlb
arpl
adc
icebp
lods
sti
xchg
xchg
lea
es
neg
sub
and
js
and
cs
bound
xchg
push
in
fs
sub
and
add
rolb
cmp
jg
loope
jmp
push
push
xchg
out
push
inc
jmp
shll
or
pop
insb
ss
icebp
popa
les
pop
movsl
cltd
pop
subl
dec
sbb
fnsave
and
push
inc
sub
ja
scas
pop
inc
fcoms
cmp
ss
inc
add
push
sub
sbb
or
adc
fs
jnp
popa
cmp
iret
test
add
cmpsb
or
test
inc
int3
adc
adc
dec
in
mov
sahf
repz
xor
cmpsl
pop
out
sbb
rep
iret
fs
les
xchg
xchg
xchg
fldt
lods
jg
xchg
add
jo
sub
or
xlat
fidivs
mov
pop
xchg
vmovapd
loopne
dec
lods
mov
jb
xchg
mov
leave
xchg
jp
jmp
push
iret
add
sub
sarb
push
xchg
xchg
fbld
sub
cmp
aam
pusha
cld
xchg
add
inc
movsb
sub
test
mov
mov
insb
mov
sub
dec
sbb
loopne
loope
daa
in
mov
xchg
xchg
popf
jge
jb
sbb
dec
hlt
inc
pop
loope
clc
es
test
sti
inc
sbb
pop
scas
dec
pusha
aaa
pop
lea
mov
cmp
pop
mov
cmc
subb
nop
mov
jbe
cmp
ds
gs
pusha
or
inc
lods
pop
pop
rorb
cmp
out
xchg
jo
xor
cltd
jp
add
daa
pop
scas
cs
add
shll
cld
sub
add
fcmovnbe
or
sarl
add
fsubl
mov
mov
not
sbb
dec
insl
mov
loop
or
test
push
aam
xor
mov
pop
in
mov
sbb
test
insl
pop
movsb
xor
lahf
cmp
orb
push
loope
pushl
fisttpl
jmp
pop
mov
sti
lock
orl
or
push
jle
fcoml
fs
rorl
fucomip
mov
pop
lds
inc
cmp
lcall
xchg
mov
pusha
pop
out
jl
rcr
push
jg
test
mov
outsl
in
stos
xchg
sub
mov
ss
outsl
push
hlt
pop
fdiv
pusha
xor
fistl
cltd
push
mov
aam
jo
and
dec
xchg
push
sub
rcr
adc
push
int
sbb
cltd
icebp
aas
jl
dec
stos
mov
cmp
sahf
mov
je
lods
jg
sub
fimuls
lcall
and
sbb
ja
ja
xor
add
mov
adc
icebp
push
jge
cmp
pop
inc
adcl
push
sub
xchg
stos
out
adc
xor
push
imul
jb
into
pop
mov
test
pop
inc
imull
call
fwait
mov
xchg
inc
loope
dec
dec
jp
subb
aad
adc
aas
lds
lods
ja
aam
call
in
cmp
mov
adc
sub
mov
adc
testb
jl
xchg
jae
popf
mov
xor
cmpsb
nop
inc
cmpsb
jle
sub
cmp
sub
dec
inc
les
rep
mov
sub
jae
es
test
test
xchg
fisubs
imul
clc
nop
loope
push
cmp
aad
sub
xchg
insl
mov
jmp
mov
xor
in
inc
lret
addr16
mov
out
ret
in
cmp
adcb
rcll
or
cmp
cmp
lret
loope
cmpsl
test
ret
insl
dec
imul
sbb
sbb
lea
test
lcall
icebp
cmc
lock
fadd
push
je
xchg
scas
aad
sub
pop
cli
test
mov
loope
pop
or
or
clc
divb
fs
shrl
dec
lock
je
or
sti
mov
inc
jmp
jmp
int
inc
int
lods
push
inc
xchg
mov
jmp
lahf
js
sbb
pop
push
arpl
sub
sbbb
stos
cmpsl
cmp
shl
into
lods
test
mov
adc
fistpll
dec
mov
clc
inc
xor
hlt
loop
adc
pop
lods
add
xchg
push
je
jmp
das
dec
pop
inc
cs
mov
inc
inc
addl
iret
inc
mov
push
sub
sahf
cmp
sub
gs
mov
mov
mov
pop
fcoml
and
shll
and
int3
push
sub
cmpsl
lcall
jmp
in
mov
nop
add
xchg
cmp
es
out
ret
sbb
push
and
ja
inc
enter
arpl
adc
fwait
inc
xor
fidivrl
insl
cli
dec
pop
mov
cmpsb
mov
ss
cmc
jo
or
ficoms
imul
loop
mov
fnsave
jne
loopne
push
fnsave
roll
lahf
jno
push
sahf
push
pop
sbb
gs
dec
stos
sar
stc
lret
iret
pushw
jmp
dec
dec
addr16
pop
in
inc
sti
les
clc
mov
mov
loop
rorb
add
xchg
push
xchg
sub
out
pop
js
push
loopne
pop
roll
aas
or
add
sub
bnd
and
or
orb
rorl
xchg
push
sbb
sbb
push
sub
add
cmp
ljmp
pop
sub
fisubl
and
xlat
mov
inc
fcom
imul
xchg
rcl
sti
pop
jp
or
and
push
xchg
fucomi
incl
pop
lahf
mov
or
push
mov
cmp
popf
stc
shlb
or
sbb
gs
fistps
fldt
or
inc
push
push
loope
mov
xor
pop
xchg
jne
jno
data16
adc
xchg
sarb
bound
cwtl
pop
xor
leave
test
pop
push
xchg
sub
add
std
scas
and
cwtl
js
roll
dec
fisubl
divb
sub
jae
jae
cmp
ja
mov
cmp
daa
ss
rolb
mov
xchg
sub
jle
shll
sbb
jns
mov
jne
xlat
sub
mov
loope
aas
shll
imul
jbe
icebp
ss
mov
aam
ret
adc
movups
inc
pushf
pusha
fcomip
rcrb
and
lret
in
loopne
dec
sub
iret
push
xor
jb
shll
fnstsw
lahf
jne
movsb
dec
jbe
leave
outsb
sahf
pop
les
xchg
mov
iret
int
jae
fcoms
and
dec
inc
in
mov
test
xchg
mov
push
arpl
sub
jg
fldcw
jb
inc
push
data16
push
addl
fnstenv
out
clc
sbb
loop
mov
mov
ja
mov
sarl
and
daa
cmpsl
pop
inc
mov
xchg
jnp
mov
xchg
fwait
cmp
adc
repz
iret
movsl
fstps
inc
jno
cmp
test
icebp
xor
dec
aas
sub
mov
sub
inc
sbb
jnp
inc
and
lds
push
sahf
mov
inc
bound
xchg
cmc
es
sbb
scas
xchg
movl
pop
jno
rcrb
outsl
mov
ja
xchg
je
clc
cmpsl
push
jecxz
or
jl
cmp
jp
mov
xlat
and
pop
jb
sbb
repz
movsl
jnp
pushf
stc
in
inc
test
jp
bnd
in
add
cmp
outsl
dec
daa
or
lds
ljmp
outsb
adc
jbe
cwtl
outsb
cs
fmul
xor
pop
add
xor
pop
jnp
xor
mov
orl
std
aad
inc
xor
fidivrs
xchg
adc
dec
cli
mov
jo
in
rolb
pushf
xchg
xchg
cmp
sub
sbb
jb
popf
mov
inc
cld
fmuls
test
addr16
bound
fsts
lcall
movsl
aas
insl
pushf
adc
cwtl
pop
mov
add
fs
sub
cmp
aam
cmpb
jae
sub
sbb
mov
add
and
ljmp
test
loopne
mov
jae
lret
push
jge
loop
push
pop
rcl
xor
inc
and
repnz
adc
push
jo
xchg
rcll
in
or
inc
lcall
sbb
cs
test
out
and
pop
inc
jno
mov
cwtl
xchg
aas
in
pop
xlat
mov
mov
mov
push
insl
fcmove
push
cmp
int
add
add
leave
push
and
lods
repnz
jg
push
test
push
mov
lahf
in
sarb
add
mul
mov
and
fmul
ret
add
adc
xchg
or
mov
cmp
and
push
push
loopne
incb
dec
jmp
xchg
xor
lea
loop
or
dec
aas
xchg
inc
jmp
into
push
js
repnz
pop
push
push
push
idivl
mov
es
pusha
outsb
bound
inc
aaa
addr16
sahf
icebp
test
aas
xchg
adc
shl
lods
push
adc
test
cmp
je
add
in
cltd
add
sbb
lcall
sbb
and
mov
add
mov
cmp
popf
xchg
popf
sbb
push
sbb
jg
out
mov
fisubs
pop
xor
nop
sub
push
rcll
cs
nop
sbb
xchg
mov
jns
pop
add
test
shl
push
movsb
sbb
inc
sbb
dec
mov
or
outsb
xlat
mov
mov
fsubl
jnp
out
std
cwtl
and
or
cmp
lds
lcall
xor
xchg
out
insb
push
test
stos
mov
loop
sahf
jns
cwtl
or
push
adc
push
andl
mov
ret
idivl
xor
jle
leave
str
sbb
sbb
push
mov
pushf
popa
arpl
xor
icebp
mov
cmp
or
inc
mov
aaa
lods
cmp
or
jno
enter
cmp
ds
sbb
jmp
jo
xor
pushf
xor
or
mov
xchg
sbb
hlt
pop
dec
mov
inc
sbb
xchg
lcall
push
add
mov
jo
dec
int3
popl
and
xor
jbe
rsm
lahf
popa
pop
ljmp
enter
into
sub
inc
inc
mov
jmp
add
fs
and
int
mov
int3
pop
or
jbe
test
aam
cmpsl
push
movsb
inc
inc
imul
dec
or
or
fmulp
cmpsb
clc
fbld
scas
je
fsubs
jo
mov
nop
ret
dec
cmp
sahf
add
or
mov
stos
fistpl
lret
loopne
rolb
jae
inc
stos
pop
cmpsl
lcall
insl
push
gs
aam
cmp
in
sub
or
adcb
mov
xchg
jae
and
xor
xchg
push
inc
bound
xor
pop
pmulhw
rcrb
cmpsl
pusha
cld
mov
mov
mov
repz
cmp
imul
aaa
inc
fldcw
lods
sbb
mov
xor
insb
mov
lds
test
dec
cld
stc
cmp
cmc
cli
push
sti
mov
mov
dec
add
es
int3
mov
mov
cmp
fs
mov
dec
loopne
cltd
cmc
rep
aas
iret
pop
push
cmp
test
mov
sbb
repz
dec
test
sar
xchg
xchg
inc
xchg
jae
sbb
pushf
mov
dec
push
idiv
arpl
stos
or
or
push
test
call
and
jge
std
dec
xor
xor
jg
sbb
push
jmp
sbbb
mov
inc
lds
fstpt
repnz
jecxz
out
cmp
pop
call
dec
ljmp
and
adc
pushf
mov
mov
jmp
jmp
add
out
shl
xor
mov
imul
div
popa
pop
and
mov
dec
or
cli
add
xlat
jge
fiadds
pusha
jo
test
movsb
pop
lods
fldl
mov
fbstp
dec
in
cmpsb
rcrb
mov
mov
sub
andb
mov
xor
stc
push
push
inc
mov
scas
dec
das
fmuls
mov
push
bound
insb
dec
xor
sbb
sbb
stc
cltd
adc
mov
bound
mov
xor
dec
jp
xorb
stos
xchg
fnstsw
jmp
aam
inc
fwait
mov
mov
cli
jl
adc
bound
movsl
jp
mov
aam
xchg
aam
pusha
outsb
cmpsl
imul
push
xor
jbe
mov
fisubrl
aas
pusha
cmpsl
push
in
je
mov
test
out
arpl
cmp
sbb
dec
and
sbb
movsl
mov
xor
movsb
cli
cmp
xor
dec
mov
std
popf
hlt
inc
cmp
out
pop
nop
adc
sbb
pop
aaa
daa
lods
xor
mov
push
push
movsl
and
lock
rol
push
gs
jae
push
xor
ret
push
imul
stos
xor
rorb
push
dec
pop
xchg
mov
imul
mov
mov
pop
sub
mov
cmp
in
cmp
clc
clc
push
mov
inc
lea
pop
dec
adc
or
outsl
add
inc
inc
in
xchg
repz
mov
nop
or
fsubs
loope
ficoml
xchg
mov
testb
sbb
mov
lahf
cli
int
inc
stos
jno
push
cmp
push
pushf
aad
rorb
pushf
cmp
sub
adc
mov
lret
test
ds
sahf
mov
cli
pop
imul
js
jecxz
mov
aam
loope
notl
ret
or
ret
jg
pusha
fwait
push
dec
in
adcb
pop
jns
lods
mov
add
fisttpll
push
mov
insb
push
add
addb
adc
loope
bound
nop
sbb
lcall
fisttpll
icebp
iret
outsb
lahf
aam
cmp
enter
mov
int3
xchg
jo
cli
nop
leave
mov
lods
fdivrs
pusha
xor
mov
dec
fldl
or
lock
cmp
scas
dec
xor
adc
xchg
and
fldl
jmp
imul
idivl
cmpsb
sub
cmc
cltd
adc
andb
jecxz
jo
aam
in
jbe
jmp
cmp
cmpsl
dec
mov
outsl
cmp
push
loop
xchg
push
or
inc
or
in
cmp
in
test
bound
inc
lcall
cmp
lods
push
jae
mov
fbld
jp
fistpll
push
cli
mov
roll
cmp
out
jmp
in
cmp
mov
mov
arpl
je
in
xor
test
mov
mov
lahf
sub
loope
and
push
jno
mov
dec
jno
int
or
ds
cmp
cmp
nop
aas
iret
and
in
lcall
leave
pop
or
loop
and
lds
cmp
pop
lret
push
das
sub
cmp
sub
push
data16
fsubrl
popf
lea
or
lock
cmp
jmp
out
push
sub
ljmp
shl
bound
sahf
call
aas
hlt
dec
cmc
fwait
xchg
mov
stos
out
shr
push
mov
pop
adc
dec
int
in
imul
add
xchg
lret
xchg
and
dec
dec
movsl
sbb
ljmp
sbbb
pushw
das
dec
sahf
lods
repz
mov
xchg
lock
adc
and
cmc
inc
mov
push
lret
push
cmp
mov
bnd
dec
add
push
jl
out
mov
cmp
mov
mov
inc
jo
cwtl
test
lret
ret
and
xchg
jg
jne
push
divb
loop
shrl
daa
fs
lock
int3
and
xor
les
inc
inc
shrb
mov
xchg
and
repnz
mov
pop
inc
outsb
leave
outsl
jae
in
movsb
xchg
ljmp
inc
and
fldenv
sti
push
movsl
cs
out
push
push
and
xchg
test
fcompl
push
or
mov
and
je,pt
fsubl
xor
push
pop
inc
rorb
ja
repz
mov
jae
add
int
push
add
pop
jb
aad
dec
jbe
jl
sahf
jle
stc
adc
mov
adc
pop
push
adc
inc
dec
ljmp
sbb
out
mov
adc
popa
rorl
and
ret
mov
aam
sti
add
mov
ficomps
lock
bound
outsb
lret
jae
xchg
jns
shl
push
mov
shr
cmp
cli
subl
and
mov
hlt
mull
adc
adc
add
cmpl
sahf
mov
mov
fmulp
xchg
pop
mov
sbb
das
dec
ret
clc
les
or
in
call
sbb
flds
inc
jle
testb
push
je
stos
and
jp
mov
and
sub
jnp
adc
or
cltd
push
and
add
scas
daa
adc
loope
jbe
mov
movswl
popa
loope
pop
push
iret
aas
cli
imul
cmp
pop
out
lods
mov
bswap
mov
clc
or
lea
loope
add
and
pop
in
jb
xchg
dec
ljmp
xchg
imul
sbb
int3
gs
pop
lret
pop
mov
add
cld
mov
push
jns
sbb
mov
inc
add
cld
cs
xchg
movsb
mov
sti
enter
or
and
mov
loopne
cmp
inc
jp
mov
inc
jmp
lea
mov
lcall
or
mov
sti
mov
ror
and
rolb
ljmp
fdivrl
jnp
xor
ja
sbb
dec
test
stos
and
scas
mov
cmc
test
push
dec
lock
imul
out
jmp
leave
and
les
jo
mov
push
mov
pusha
bound
imul
jle
push
mov
daa
mov
fst
stos
cmp
dec
rol
sub
adc
jno
mov
fsubl
stc
push
fcomps
ljmp
sarb
adc
insl
adc
or
pushf
dec
dec
scas
aam
repnz
ss
insb
jno
lods
sbb
jno
ss
pop
scas
aam
shl
mov
out
cmpl
sub
cltd
nop
mov
leave
push
cld
dec
int
push
cltd
arpl
fistps
and
or
movsl
mov
repnz
leave
mov
jecxz
xor
or
pop
pop
xlat
inc
xor
xchg
outsl
cmp
sbb
jne
push
mov
cmpsb
pushf
pop
pop
mov
imulb
mov
inc
sahf
push
dec
jge
add
int
cmp
aam
xchg
sarb
sti
cwtl
and
xchg
mov
and
sub
push
jns
insb
lret
adc
in
stc
add
cmp
xchg
ds
leave
pop
mov
pusha
inc
imul
lahf
sbb
adc
movsb
cmp
and
jae
add
mov
jl
scas
mov
push
mov
mov
int3
xchg
adc
jns
cs
pop
cmc
cmp
dec
adc
push
mov
ds
je
sub
fdivl
movsb
mov
dec
or
mov
hlt
inc
mov
xor
mov
fstps
inc
push
rcll
popa
cli
xor
sub
daa
xor
daa
inc
push
mov
pop
xchg
frstor
int3
inc
xchg
sbb
repz
lock
jne
pop
in
aas
sbb
iret
xchg
push
aad
outsl
pop
jno
sti
arpl
call
outsl
mov
jnp
mov
insl
test
aaa
ds
sbb
repz
xor
xchg
jle
dec
ljmp
push
and
or
mov
lret
stc
jno
pop
rcrb
sbb
gs
cmp
mov
jp
push
and
call
insl
scas
pushf
outsl
dec
fcom
adc
dec
movsb
lcall
shr
jp
xrelease
xchg
xor
and
xlat
mov
and
les
mov
sub
aad
addl
jbe
adc
pop
in
sbb
xchg
xchg
xchg
out
mov
xor
mov
xor
xchg
movsb
jbe
in
call
jae
pop
add
add
push
mov
lock
mov
xor
divl
inc
outsb
sbbb
mov
ds
loope
inc
xchg
sub
or
push
inc
into
mov
push
mov
je
sbb
iret
nop
fdivrp
mov
fndisi(8087
das
sub
push
cltd
lods
sub
lods
mov
clc
sub
fimull
outsb
mov
push
mov
loope
sbb
add
fists
dec
lods
jmp
in
jns
ds
fsts
insl
jns
ja
fisttpll
outsl
sbb
es
or
cltd
mov
and
push
mov
and
sub
jmp
mov
lods
cmc
andb
lret
ficompl
add
cmpl
pusha
inc
or
cmpsb
negb
push
mov
dec
xor
push
loope
iret
fldenv
ss
mov
inc
xor
pop
and
and
insl
loope
aad
pop
push
mov
ret
xor
scas
xchg
cmp
in
inc
stc
testl
loope
rep
jecxz
iret
and
ljmp
mov
mov
mov
lds
sbb
ja
fcomps
mov
popl
mov
mov
rorb
adc
ljmp
lret
sbb
xchg
push
push
mov
push
xchg
cld
std
lcall
mov
xchg
xlat
push
outsb
decl
movsb
or
inc
fbld
pushf
mov
mov
jmp
add
pop
movsb
add
test
xor
push
imul
rcr
fdivl
shl
jb
aam
and
dec
int
inc
repnz
lods
sbb
into
adc
shr
in
add
cmp
xor
mov
push
mov
out
jnp
fs
popa
add
rep
das
inc
subb
lock
data16
sub
stc
mov
negl
sbb
bound
dec
or
ja
rclb
fxch
push
pop
out
addb
sub
adc
mov
xchg
lret
mov
push
in
mov
aas
rorb
mov
call
xchg
stos
addb
leave
sub
std
pop
test
js
filds
dec
add
jnp
mov
xchg
cmpsl
mov
mov
mov
sbb
jb
loop
or
in
jmp
and
scas
cmpsl
or
xchg
inc
add
fidivrl
sbb
cmp
mov
pushf
loop
pop
imul
jbe
lods
repnz
repz
test
fs
mov
cmpsl
mov
ja
and
mov
movb
lret
xchg
jg
pop
out
loop
mov
dec
ds
xor
mov
leave
push
jp
imul
add
cli
dec
in
push
popf
mov
add
mov
cmp
fs
inc
or
lret
into
mov
mov
test
das
lods
outsb
ljmp
sub
jecxz
cmp
loope
pusha
jno
push
xchg
mov
es
or
adc
xchg
dec
pop
and
and
stos
push
mov
ljmp
lock
and
movsl
out
pop
xchg
jg
jmp
fnstcw
adc
dec
popf
outsb
call
arpl
daa
xor
aas
dec
mov
ret
mov
jae
test
xchg
mov
cmpl
lds
xchg
jbe
xchg
adc
mov
test
or
dec
push
movsb
jns
push
in
cli
sti
push
sbb
div
xchg
iret
pop
sbb
jg
sub
jnp
and
movl
mov
loopne
push
sbb
mov
je
addr16
or
xor
into
add
int3
sub
ret
pusha
pop
imul
or
inc
std
cld
jns
lret
xor
sub
or
arpl
or
sar
lret
or
les
jg
jno
js
movsl
adc
sbb
out
cmp
mov
mov
dec
dec
inc
dec
out
lds
and
call
aad
aaa
pop
jnp
push
mov
sarb
xor
mov
ficompl
test
sbb
loop
mov
pop
or
mov
mov
jmp
xchg
ljmp
loope
fists
js
loopne
pusha
add
xchg
inc
lds
and
jl
notb
lods
xchg
mov
cwtl
data16
pop
js
push
and
jae
es
insl
cmpsb
xor
xor
prefetch
or
pop
or
aam
cmp
gs
in
push
cmp
dec
jg
cltd
xchg
adc
jbe
xor
jge
fisttpl
dec
loop
cmpsl
je
jp
push
xor
add
movsl
xchg
add
es
and
push
cmp
sbb
js
aas
stc
mov
std
pop
ljmp
scas
jmp
sbb
jmp
fs
or
mov
clc
out
in
addr16
arpl
cmp
xlat
jl
sbb
out
sub
fmul
jns
jecxz
sub
mov
loope
pop
punpcklwd
lds
mov
stos
insl
jg
leave
test
imul
and
pusha
jle
adc
sahf
and
dec
inc
mov
into
and
dec
mov
loopne
cmp
fwait
mov
xor
je
cmp
mov
mov
mov
cmp
mov
gs
pop
pop
pop
je
movsl
pop
out
sahf
mov
aaa
mov
cli
push
sbb
dec
bound
cs
or
insl
es
fnstsw
jo
hlt
pop
push
icebp
sarb
inc
sub
mov
ljmp
push
imul
jbe
adc
or
or
cmpsb
xchg
idivl
mov
rolb
xor
shll
mov
cmp
jecxz
lea
pop
push
jnp
fldcw
out
iret
sbbb
in
cmp
inc
out
arpl
push
mov
and
insl
mov
lret
push
push
hlt
add
insl
lahf
inc
sbbl
fdiv
mov
repnz
adc
sub
mov
jecxz
mov
ret
dec
popf
jp
xor
cwtl
test
in
mov
xchg
pop
push
das
mov
push
shrl
xchg
mov
cmp
jns
fucomp
int
xchg
repz
jo
xchg
inc
lret
cmp
aam
mov
es
out
movsb
mull
dec
xor
mov
jb
pop
sbb
mov
pop
insb
cli
lcall
xor
int3
std
adcl
cmp
sub
pushf
or
pop
cmp
pusha
arpl
cmovns
repz
outsl
fisubrl
stos
lods
jecxz
cmp
cmp
scas
push
sbb
leave
push
daa
sbb
lcall
iret
mov
xchg
dec
sub
imul
pop
das
cli
xorl
cmp
arpl
add
mov
xor
jo
sbb
push
or
leave
xchg
sub
popa
fnstenvs
sbb
lods
xchg
andb
fwait
pop
lods
dec
test
xchg
sbb
add
sub
repnz
push
les
test
xor
push
sub
jne
pop
in
xor
mov
ficoml
cltd
sub
inc
js
sub
or
xchg
adc
push
test
and
rorl
std
sub
leave
addr16
jg
test
pop
push
fsub
das
adc
or
dec
mov
push
lret
add
xchg
ficoml
pusha
xor
sub
ror
cmp
ja
in
xor
cmp
pop
inc
jle
leave
sub
cli
frstor
mov
stos
enter
push
in
dec
std
fs
loope
sbb
lods
push
cmpsb
adc
arpl
shl
and
pop
bound
mov
or
jns
sti
jp
lret
inc
adc
shrb
lods
pop
xchg
push
xor
popa
inc
cltd
jecxz
cwtl
adc
lahf
int
sbb
out
inc
loop
mov
sub
imul
xorb
mov
lods
cmp
lret
iret
insl
dec
or
fiadds
adc
mov
pop
lcall
jmp
pop
push
test
bound
dec
xchg
push
add
jecxz
and
lret
mov
pop
dec
call
lods
pop
hlt
push
add
test
xor
cld
gs
leave
push
sub
pop
scas
and
push
cmpsl
sarl
aad
aam
inc
mov
int
lods
mov
std
dec
and
push
and
push
psubq
rcr
insb
fcoml
out
cmp
andl
mov
icebp
dec
andl
sbb
sbb
insb
jnp
rolb
cmpsl
mov
mov
mov
push
out
adc
push
xchg
mov
mov
scas
test
rclb
mov
daa
xchg
push
xchg
mov
loop
clc
xchg
dec
push
bound
jl
lds
adc
push
mov
jns
dec
xchg
pop
xchg
pop
test
jmp
mov
xchg
mov
add
mov
and
xor
adc
dec
mov
ds
roll
lods
or
dec
dec
push
mov
out
push
add
stos
cltd
jge
repz
mov
sbb
push
ljmp
adc
out
dec
push
incl
test
push
ficompl
and
push
xchg
ja
dec
or
dec
stos
gs
push
addr16
jb
stos
imul
push
and
mov
dec
or
pushf
fdivl
sbb
xchg
sub
push
clc
aas
mov
or
xor
lret
aas
in
or
movsl
jns
mov
cltd
outsb
sub
push
pushf
leave
jo
lahf
sbb
pop
rcrb
addr16
dec
cmp
mov
pop
mov
xchg
jnp
inc
adc
mov
loopne
aas
mov
mov
jb
sarl
xchg
cmp
inc
loopne
sbb
mov
fistl
inc
xlat
push
and
xchg
xchg
cmp
cs
pop
in
lret
fistps
mov
pushf
and
cmp
mov
sub
bound
jae
nop
jb
pop
es
shl
aad
sbb
or
push
test
add
nop
pop
dec
xor
lea
mulb
ljmp
fdivrl
sti
in
or
inc
in
push
in
or
daa
mov
push
inc
jnp
jo
sahf
pushf
add
or
push
inc
push
sbb
mov
and
adcl
add
ret
cmp
repnz
or
mov
xchg
mov
out
jns
or
jno
scas
fsub
out
or
xchg
jmp
push
mov
xor
xor
lods
aad
nop
xchg
lock
cld
jbe
mov
xor
dec
dec
and
leave
outsb
test
xchg
adc
push
dec
sahf
or
mov
in
inc
xchg
cltd
mov
jnp
lahf
adc
sub
adc
cmp
xlat
bound
adc
inc
sub
pop
pop
cmpsb
mov
enter
inc
lret
imul
mov
xor
or
out
adc
ficomps
outsl
mov
and
jnp
in
mov
les
pushf
xor
out
jns
popf
xchg
push
vmovaps
sub
push
repnz
inc
inc
jb
inc
or
mov
sbb
shlb
cwtl
mov
fs
cmp
mov
or
push
mov
jns
aam
mov
or
pop
xor
sbb
sub
mov
fimuls
pop
clc
out
ljmp
stc
scas
mov
sbb
fs
add
xchg
push
lds
ljmp
es
in
sub
cmp
gs
in
sub
test
mov
or
testl
or
cltd
adc
jge
fnstsw
cmc
call
dec
fidivl
fmull
jg
xchg
sahf
push
dec
stc
cmp
jne
subl
jbe
mov
jne
cvtps2pd
sub
scas
pop
imul
add
mov
fs
xchg
out
cmp
lret
add
mov
lods
inc
mov
and
mov
ret
test
hlt
or
outsl
mov
fistpl
icebp
outsb
fists
or
aad
insb
jle
rorl
dec
fimull
mov
outsb
xor
stc
push
xchg
jmp
lahf
mov
cld
xchg
outsb
cmp
xchg
out
xor
cmp
cmp
das
in
mov
pop
push
sbb
push
xor
and
push
jmp
lcall
outsb
push
xchg
dec
inc
out
inc
enter
fmuls
jl
into
xlat
xchg
xchg
or
aaa
jmp
xlat
lea
xor
cwtl
enter
popa
mov
dec
cwtl
or
xor
push
hlt
fldt
lock
mov
mov
dec
mov
dec
pop
repnz
adc
scas
bound
xorb
sbb
mov
es
daa
dec
sub
pop
mov
addl
insb
cmpsb
pop
js
aas
es
push
mov
daa
xchg
mov
lcall
add
nop
scas
jl
dec
mull
sub
flds
cmp
pop
lahf
inc
push
mov
xchg
stos
xchg
cwtl
lods
cmc
xchg
rcrl
or
and
rcrb
adc
xchg
lret
test
sarl
frstor
lods
sbb
outsb
pusha
dec
adc
stos
xor
pop
lret
stos
into
dec
xchg
cmp
jp
loopne
repz
sub
iret
das
xor
mov
ja
clc
gs
inc
xor
mov
and
gs
rol
movsb
vpcmpeqd
mov
mov
cltd
push
sub
jle
out
cmpsb
fdivl
xor
lods
nop
scas
mov
or
loop
leave
pop
fcompl
enter
orl
pop
or
and
cmpsl
fwait
into
push
xchg
sub
cwtl
jnp
xchg
xor
sbbb
mov
es
jb
mov
adc
sti
adc
movb
mov
sbb
adc
int3
push
mov
popa
popa
out
movzbl
aaa
push
inc
dec
mov
in
mov
std
cld
es
jle
ffreep
mulb
inc
clc
sub
out
loope
add
in
jp
xchg
decb
cmp
inc
xchg
add
test
popf
add
test
pop
dec
sbb
fwait
stc
test
lea
adc
push
out
mov
mov
push
jl
roll
xchg
out
push
cmp
test
mov
fwait
lea
shll
scas
popf
xor
lret
cld
andl
loopne
ljmp
and
pop
cltd
mov
sub
es
leave
add
push
pusha
cmpsl
xor
orl
adcb
jl
jo
into
adc
dec
hlt
pop
xor
adc
sub
loopne
outsb
stos
jnp
cmp
mov
idivb
in
in
movsl
pop
pop
xor
jno
mov
pop
xchg
call
xlat
cltd
jge
jns
pop
hlt
fimuls
lahf
arpl
jmp
in
leave
cmp
xrelease
sub
fwait
sar
cmp
xor
adc
mov
test
adc
imul
cli
pop
mov
fimuls
mov
mov
jnp
cs
jbe
es
ficompl
xchg
rcr
push
outsl
push
jns
pop
insl
out
adc
lret
mov
imul
mov
jmp
jb
mov
xchg
vcvtss2si
xlat
cmpb
jbe
mov
mov
mov
loopne
lods
fsubrs
mov
sbb
out
mov
imul
xchg
xchg
adc
mov
xchg
pop
push
sbb
xchg
rcrb
push
mov
mov
lret
leave
in
sub
insl
shl
jge
cmp
xchg
jg
add
into
fs
jno
stc
imul
or
dec
orb
xchg
pushf
mov
in
cmp
sbb
aaa
lea
lcall
xchg
lock
inc
popf
gs
scas
in
cmpb
int
lds
daa
push
jno
or
lcall
movsl
cmp
cmp
cli
mov
adc
sahf
pop
add
jp
data16
cmp
sti
cs
xor
repz
xchg
out
mov
les
inc
push
lahf
sahf
xor
xchg
xchg
in
dec
and
jb
push
cmp
test
call
sub
and
fwait
mov
and
js
sub
inc
adc
lods
in
and
xchg
nop
in
inc
and
mov
inc
jns
ss
add
add
lock
mov
mov
movsb
int3
inc
ds
shlb
and
pop
or
iret
enter
cmp
push
sbb
inc
push
out
cs
sbb
xchg
add
test
jo
lret
pop
ds
decl
scas
iret
or
xor
ss
dec
pop
test
adc
rcr
xchg
aas
icebp
push
lods
sti
sbb
pop
and
or
add
loop
mov
pushl
lcall
hlt
in
in
enter
or
iret
imul
icebp
ja
adc
int3
xchg
cs
mov
jo
mov
lret
jo
mov
insb
aas
fidivrl
mov
xor
test
outsl
adc
and
pop
stos
inc
repz
sbb
push
sti
jp
xor
jnp
data16
adc
cmp
jne
mov
ljmp
ljmp
lcall
add
cmp
js
lret
jns
sbb
shlb
dec
pop
jle
sub
popa
and
sbb
push
jg
test
dec
aaa
mov
pushf
mov
adc
ss
mov
test
repz
movsb
mov
movb
bound
les
std
sub
mov
rolb
push
pop
shr
imul
sbb
shl
test
pop
push
xor
xor
loopne
pop
test
scas
cli
pop
out
mov
pop
adc
shl
int
sti
imul
push
push
in
mov
scas
out
push
loopne
xor
and
fldt
outsb
cmp
push
lods
sbb
les
xor
stos
jns
ljmp
dec
mov
fwait
cmp
mov
cli
lret
jae
inc
adc
sbb
insl
outsl
pop
mov
mov
xor
pcmpgtb
adc
jecxz
fs
icebp
dec
iret
fs
rcrl
xlat
inc
fcmovbe
adc
out
lods
je
xor
add
push
leave
sbb
jle
push
mov
movsb
xor
inc
pop
xchg
jmp
pop
push
mov
or
push
xlat
mov
ja
aam
das
mov
xchg
sub
jnp
cmp
imul
ja
push
xorl
xchg
cld
xchg
imul
cmp
fstps
sti
js
fs
xor
cwtl
push
or
jne
and
xchg
add
and
stc
cmp
fwait
dec
xadd
mov
sub
pushl
fiadds
out
scas
push
pcmpeqw
fsts
shl
repz
pop
push
pushf
call
cmp
jecxz
enter
lock
rcr
int
cmp
jge
jne
test
aas
movsb
sti
sbb
pop
pusha
mov
out
stc
enter
adc
mov
and
repnz
enter
jae
scas
or
fimull
cmp
push
push
sub
mov
lret
push
into
divb
fnstenv
and
test
and
cmp
or
mov
sub
loope
sub
out
es
inc
int
mov
xchg
lret
rclb
push
lret
lahf
push
dec
add
psllq
mov
push
daa
sub
mov
aas
cmp
scas
lds
xchg
cld
push
sti
push
lds
and
inc
stos
mov
popa
repnz
push
mov
add
push
pop
xor
pop
jl
out
mov
repz
xchg
fs
xchg
lret
testl
inc
cmpsb
lock
cmc
arpl
rclb
mov
add
lock
push
cli
movsl
jg,pn
rcrb
sub
mov
jg
cmpsb
int3
dec
or
stos
fstl
loop
mov
enter
test
iret
pop
call
andl
jns
sbb
adc
mov
or
xchg
stc
bound
pop
int3
adc
sbb
fcmovnb
int
scas
jns
dec
push
cwtl
mov
jne
jnp
pop
and
daa
cld
cmpl
idivb
imull
jmp
in
xor
pop
ja
movsb
or
mov
lods
cmp
adc
imul
fists
gs
ss
shll
jae
xchg
out
fldt
cltd
mov
enter
pop
dec
push
roll
push
sti
mov
call
jg
and
outsb
sbb
dec
arpl
mov
push
lock
daa
add
and
out
sub
lods
sbb
loope
mov
pop
jle
dec
pop
mov
or
inc
xor
mull
adc
fnstenv
frstor
push
int
outsl
push
outsb
sub
rcll
push
fs
movsb
xchg
cli
das
insb
into
dec
ja
xchg
sbb
jg
add
mov
aad
xchg
lret
sbb
xor
dec
dec
mov
xor
mov
dec
dec
sub
push
xor
pop
fs
mov
mov
jle
mov
cmpsl
mov
pushf
std
xchg
mov
iret
lods
js
sbb
mov
push
popa
fcmovnu
push
dec
shr
xor
inc
jnp
sub
outsb
out
sbb
movsb
lea
cwtl
sahf
xorl
pushf
fmuls
xchg
aaa
dec
and
sbb
push
cwtl
xor
out
out
sbb
xor
cmpsb
in
mov
cmp
out
xor
in
jo
rcrb
xor
mov
jmp
inc
xchg
lods
sub
repnz
mov
mov
stos
mov
shrl
push
fstpt
cltd
adc
xor
fsubrs
xor
and
incl
arpl
cmc
aaa
xchg
loop
mov
inc
js
sub
sub
and
push
roll
push
jne
ljmp
sub
dec
push
mov
fsubr
test
rorl
movsl
xchg
add
mov
pushf
rcll
nop
or
xchg
cli
push
ds
sub
sahf
stos
push
out
pop
inc
loope
mov
mov
mov
loopne
in
aad
add
sbb
xchg
fstp
sub
test
or
dec
imul
sbb
or
hlt
lcall
test
mov
dec
insb
clc
mov
pop
and
inc
fsubrl
lret
cmpb
jae
pop
test
xchg
push
es
adc
xlat
sbb
loopne
or
xchg
xchg
call
loopne
cmpsl
outsl
xchg
call
mov
inc
push
ljmp
loop
lods
insb
mov
adc
test
in
je
outsl
scas
xchg
xor
repnz
inc
add
ret
pop
jb
cmp
fs
mov
or
push
int3
stc
inc
dec
cmp
fldl
mov
aam
mov
or
xlat
mov
pop
mov
or
in
mov
repnz
inc
cli
jnp
jne
aam
sbb
push
leave
in
and
clc
jb
add
mov
jmp
and
pop
iret
pop
xor
jge
pop
cli
test
rorl
test
lcall
popf
xlat
mov
push
sub
pop
neg
push
fdivr
lret
lods
scas
scas
call
cwtl
in
mov
sbb
out
fiadds
pop
xchg
pop
mov
iret
cmp
or
push
push
shlb
roll
clc
dec
mov
pop
repnz
les
lods
lret
outsl
adc
stos
popa
mov
daa
in
sbb
icebp
push
pop
stos
sub
sarl
inc
mov
cmp
cld
jge
dec
mov
aaa
mov
add
cmp
aas
aad
sahf
mull
in
ret
shl
clc
cmpsb
push
js
mov
push
fcmovnb
cmp
sub
lock
xor
es
sub
mov
sub
fcoml
mov
sarb
jo
dec
mov
aam
adc
adc
stos
cmc
fistpll
xor
out
sub
push
aas
iret
stos
ja
lret
inc
cmp
sbb
add
sub
enter
fs
mov
lcall
in
enter
shl
ss
insb
fucomip
adc
cmp
cmp
mov
je
lret
mov
mov
mull
ret
xchg
xchg
add
jo
sar
xchg
push
leave
ret
fstpl
xor
mov
mov
dec
inc
jns
xchg
daa
setb
inc
loope
push
ja
insl
or
sbb
push
add
test
sbb
inc
sbb
pop
aam
mov
loope
xorl
mulb
in
into
sub
fildl
popf
or
js
xchg
and
push
lock
ja
mov
fs
mov
xor
or
mov
mov
push
fmuls
sbb
in
fldl
mov
es
loop
mull
jl
sahf
sub
jae
push
and
out
xchg
mov
aas
fstps
call
ficoml
sti
dec
adc
adc
and
dec
mov
pop
cld
les
push
icebp
cltd
int3
fldt
xchg
cmp
scas
out
cmc
shll
mov
jbe
push
imul
clc
inc
subb
xchg
and
mov
add
cld
scas
jecxz
pushf
incl
mov
and
lcall
pop
pop
jns
mov
xor
jp
sbb
lret
stos
les
add
mov
sub
out
jle
cmpsb
fsubrs
leave
mov
enter
xchg
bound
mov
lock
inc
sbb
xchg
and
sbb
int
rclb
ret
pop
nop
mov
jnp
adc
out
push
ret
sub
lret
subb
mov
enter
dec
mov
int
sub
out
cld
jecxz
lahf
mov
cmp
add
mov
icebp
pop
jbe
movsl
mov
sbb
mov
xchg
sub
movsl
negb
stos
dec
push
shl
jecxz,pt
adc
mov
or
mov
or
test
push
pop
into
xor
test
and
mov
lock
andl
stc
daa
adc
test
scas
adc
fwait
lret
push
sub
jecxz
rcrl
nop
mov
inc
push
add
cli
xor
xchg
lock
loope
es
add
popf
daa
jp
fisubrs
sbb
push
sbb
loop
inc
clc
hlt
imul
pop
orl
outsl
xlat
sbb
sub
cmp
popf
inc
fdivr
jecxz
jb
push
push
cltd
adc
loop
das
divl
push
pop
jl
sub
stos
push
xorb
out
xchg
mov
loop
lret
dec
jmp
call
repnz
test
mov
dec
insb
xchg
xchg
mov
or
aas
test
fwait
inc
sbb
mov
push
dec
imul
dec
mov
pop
cmp
xchg
xchg
outsb
and
push
mulb
xor
mov
dec
cmp
shll
jns
mov
insb
and
mov
mov
ljmp
sub
fs
or
mov
hlt
call
clc
stc
xor
sub
lea
and
xchg
fdivs
icebp
addb
jns
dec
sub
movsl
ds
stc
lea
mov
jae
pop
out
iret
mov
mov
xchg
xchg
fimuls
negl
mov
js
fdivrp
xor
sub
push
ds
cwtl
ret
push
leave
addl
dec
mov
push
pop
push
mov
or
jno
aas
pop
shlb
jmp
xor
push
ret
cmc
push
xchg
loope
mov
jne
lret
sbb
inc
mov
call
and
xchg
int
dec
sbb
jo
sbb
shll
and
push
push
mov
jle
sahf
push
rolb
movsl
lret
outsb
xor
xchg
std
pop
adc
cwtl
xor
mov
push
insb
pop
pop
pop
push
pop
cmp
clc
sbb
fs
sbb
xor
mov
and
lock
mov
iret
push
or
xor
inc
jb
lret
lret
imul
mov
ss
pop
es
out
cmc
mov
pop
push
ss
and
xor
xchg
adc
and
popf
mov
roll
lea
inc
mov
addr16
cmc
stos
incl
add
test
cltd
dec
in
lods
cmp
push
test
push
inc
sar
push
sbb
dec
jnp
lret
mov
inc
ret
adc
ret
jae
xor
jo
dec
mov
pop
xor
xchg
ret
mov
aam
or
cmc
ljmp
or
xor
cmp
adc
outsl
ror
mov
ljmp
pop
fsubl
hlt
xchg
add
fs
mov
std
jmp
inc
sbb
push
adc
sbb
je
dec
aam
sub
stos
addr16
cmp
dec
rcll
jp
sub
xor
sbb
adc
sbb
cmpsb
inc
pop
xchg
in
stos
ret
ds
mov
jge
divb
in
mov
add
out
iret
loopne
add
push
mov
insl
xchg
enter
outsb
jns
xchg
mov
stos
add
xor
into
pop
add
push
fldcw
cmp
fs
pop
outsb
sarl
mov
pop
fsts
roll
jnp
mov
xchg
sbb
xchg
lods
xor
xorb
pop
ljmp
sete
or
sbb
jle
idivb
lcall
movsl
pop
out
ljmp
stos
aas
cs
jp
mov
into
das
les
push
lcall
mov
push
gs
xor
mov
xor
jmp
xchg
xlat
daa
mov
icebp
stos
lds
and
dec
inc
and
pop
lcall
mov
jnp
lods
push
dec
xor
push
or
dec
jecxz
mov
push
cwtl
pop
sub
addb
pop
iret
xor
test
jne
mov
jge
shrb
in
inc
pop
lods
xor
inc
jb
dec
pop
add
icebp
add
pusha
mov
mov
pop
faddl
je
movsl
cmpl
add
pop
addb
push
pop
push
adc
fwait
imul
clc
test
orb
jb
cmc
xchg
rcrb
mov
add
jnp
push
adc
mov
jo
jle
xchg
push
test
fidivl
iret
sbb
in
mov
int3
lcall
aas
sti
fimull
cwtl
mov
adc
outsl
imul
mov
push
shlb
and
movsb
jl
gs
hlt
sbb
fbstp
ja
loop
mov
inc
call
lahf
stc
jl
movsb
je
fldt
imul
in
clc
lret
gs
mov
mov
xchg
pop
scas
movsl
xor
test
out
mov
pop
insl
cmpsl
mov
stos
push
arpl
dec
mov
push
jg
cmc
addr16
test
ret
outsb
mov
jne
mov
pop
add
and
inc
sub
aaa
sbb
pop
add
idivb
inc
cmpsl
jae
jle
into
inc
mov
outsb
int3
jle
push
pop
mov
outsl
fs
ljmp
push
smsw
or
pop
movq
dec
sub
mov
mov
jo
jmp
push
dec
dec
pop
ficompl
mov
mov
mov
inc
xchg
lret
andb
xor
cmp
int3
js
jo
sbb
mov
ret
in
push
out
sbb
inc
pop
xchg
andb
mov
nop
mov
call
cltd
mov
repz
insb
inc
in
arpl
shll
mov
scas
lret
cmpsb
call
xor
sar
imul
shrl
mov
ss
lcall
stos
in
xchg
scas
pushf
and
icebp
in
mov
xchg
xchg
inc
jns
divb
insl
out
cmp
std
in
pushl
mov
xor
jge
mov
rorl
inc
fldenv
push
sbb
imul
in
insb
xor
mov
aad
inc
push
mov
int3
or
aaa
push
pusha
std
mov
or
xchg
bound
add
add
dec
mov
push
out
fwait
jae
sbb
jmp
pop
xchg
insl
xchg
loopne
mov
dec
pop
sub
jae
ds
or
inc
out
dec
rclb
adc
stos
je
mov
xlat
jp
out
daa
and
inc
mov
dec
adc
and
inc
test
cmpsl
in
add
xor
and
dec
movsb
pop
dec
es
mov
jmp
jge
adc
adc
into
test
cmpsb
pusha
or
and
dec
jae
or
adc
xchg
lahf
mov
pop
jno
dec
movb
jle
imul
mov
pop
int
idivl
repnz
data16
xlat
sbb
lods
adc
andl
nop
inc
mov
add
in
lahf
push
adc
mov
sbb
sub
roll
push
cwtl
mov
dec
push
fucomi
mov
outsb
mov
xor
out
jne
pushf
xorb
fcmovne
adc
cmp
int3
sub
cmp
sbb
cltd
jno
fdivr
pop
insl
addr16
aas
std
mov
pop
pop
dec
push
gs
push
pop
cltd
mov
jl
outsb
cmp
mov
jne
push
add
clc
popaw
adc
outsb
insl
icebp
stos
sarb
inc
push
jmp
mov
fistpll
and
jns
pop
aas
jge
lock
pop
into
push
out
cld
jbe
mov
int3
cmp
xchg
rclb
das
sub
mov
shr
loop
andb
cwtl
cmpsl
jno
clc
fwait
insl
hlt
jp
sti
jb
sahf
cmc
sarb
and
out
mov
shlb
imul
ja
ds
pop
xchg
leave
and
adc
das
pop
lds
add
push
mov
cmp
out
sbb
fs
stos
es
clc
stos
lret
xorl
idivb
addl
lds
loope
mov
negl
and
out
and
addr16
out
ss
push
ficomps
mov
in
lret
push
mov
in
xchg
data16
jecxz
popa
inc
fstpt
xchg
pop
or
xchg
jle
sbb
popf
fisubrl
arpl
push
popa
aaa
mov
push
sub
mov
shlb
adc
call
lods
cmpsb
lock
dec
stos
aaa
lahf
daa
out
or
add
negb
sbb
xor
xor
ficoml
sahf
outsb
test
lcall
cmc
mov
das
mov
pop
pusha
leave
pop
or
jle
dec
pop
ret
clc
inc
mov
stos
or
insb
sub
cli
push
jle
outsb
pushf
push
xchg
xchg
or
adcb
mov
ljmp
enter
mov
jle
xor
outsb
inc
outsb
jns
scas
dec
rcrl
data16
sbb
les
fdivr
sub
or
adc
jecxz
mov
sbb
pusha
fisubrs
cltd
divb
icebp
mov
and
sti
in
loope
mov
adc
xsave
dec
shrl
lcall
mov
mov
push
xchg
clc
cmp
hlt
push
in
and
jecxz
lahf
in
ljmp
push
fs
push
cmpsb
arpl
aaa
pop
push
push
xchg
ja
mov
mov
gs
mov
mul
stos
xchg
scas
lods
mov
add
fldl
push
push
fwait
ret
jae
xor
cmp
leave
mov
rcrb
clc
adc
sub
shlb
inc
gs
insb
xchg
cmpsb
test
cmpsb
leave
lcall
cli
adc
inc
push
dec
add
jnp
loopnew
mov
rcr
xor
stos
es
xor
xchg
fsub
movsb
mov
or
cmp
mov
pop
lret
jns
pop
mov
sub
pop
insl
cmc
pop
jb
jne
mov
cmp
jmp
mov
mov
dec
add
int3
add
dec
sahf
cmp
xlat
loop
call
push
das
pop
pop
xlat
test
lea
sahf
push
clc
xor
das
xchg
pop
ficompl
mov
push
jae
or
inc
adc
mov
lods
mov
add
scas
pushf
movb
int3
dec
das
add
or
dec
jo
adc
loop
mov
inc
aam
sti
xchg
pop
jo
cs
jle
push
fnstsw
mov
xchg
movsb
push
mov
sub
das
inc
popf
pop
adc
add
adc
pop
andl
jl
mov
dec
iret
imul
cmp
mov
dec
loopne
scas
rcrb
push
mov
or
xor
sar
loope
lea
jbe
call
and
cmpl
pop
xor
ja
push
jg
mov
mov
and
mov
mov
sbbb
divl
add
mov
or
cs
outsb
je,pt
bt
inc
out
fs
xchg
jp
push
das
popf
xor
test
lret
cmpsb
mov
test
std
and
jle
jae
sub
jmp
jl
loope
mov
inc
push
add
adcb
mov
inc
xor
mov
in
inc
mov
pop
test
jbe
aaa
cld
xlat
aas
xor
mov
mov
add
push
xor
or
inc
fldt
mov
fwait
inc
jbe
ljmp
lds
xor
stos
je
mov
or
icebp
add
mov
sbb
lock
fstpt
mov
xchg
ja
push
jg
pusha
clc
inc
andb
cmp
inc
xor
dec
mov
pop
dec
icebp
aas
pop
mov
fidivrl
loop
push
imul
jp
daa
scas
stos
pop
leave
pop
loop
ret
xlat
xor
fldl
iret
cmp
jg
clc
fisubs
push
cltd
ja
push
in
add
fstpl
mov
jg
cwtl
roll
insb
test
stc
xchg
mov
xsaveopt
xchg
int3
aas
push
adc
and
cltd
inc
push
inc
fadds
insb
repz
xchg
adc
cs
push
fiadds
dec
js
jns
lret
add
jo
pop
mov
xchg
js
imull
mov
cmp
pop
std
add
xchg
nop
pop
jae
push
pop
jo
enter
dec
cli
mov
icebp
test
xor
xor
aas
or
outsl
sbb
push
xlat
adc
shrl
cmpsb
mov
and
in
pop
vlddqu
fs
pop
push
jbe
fidivs
mov
inc
sbb
shll
fstp
std
psubb
loopne
mov
ja
jg
js
pop
rolb
xchg
adc
sbb
popa
push
mov
out
shl
lods
outsb
xor
mov
mov
sbb
bound
xchg
ja
xchg
or
pop
iret
mov
and
ljmp
clc
cli
loope
arpl
sbb
push
add
mov
rorb
daa
shrl
popa
aaa
jecxz
je
in
sbb
add
sub
add
imul
roll
leave
push
inc
add
mov
pop
call
sti
cmpsb
cmp
cmp
fldl
jae
dec
cmc
mov
repnz
fld
roll
xchg
in
pusha
sub
add
inc
arpl
outsb
mov
fsubr
addb
sbb
jae,pt
aaa
cmpb
lods
shr
and
mov
aam
scas
inc
sbb
jb
lods
dec
gs
hlt
adc
inc
andb
cmpl
ja
dec
lret
int3
jnp
pop
jae
mov
int
imul
pusha
xor
dec
or
fsubrl
cmp
mov
adc
insb
lods
into
inc
shrb
mov
fildll
dec
aad
cmc
lcall
xchg
add
and
ret
fdiv
cmpl
adc
push
pusha
mov
xchg
pop
pop
lock
flds
mov
aad
adc
add
xor
imul
out
mov
jl
inc
mov
in
ret
test
mov
cmpb
xlat
bound
and
inc
loop
push
mov
inc
clc
sarl
mov
imul
out
jne
imul
cld
mov
mov
push
shlb
movswl
into
scas
push
aam
inc
mov
test
popa
push
mov
add
cmp
xor
lea
pop
aam
ret
test
sub
cmc
leave
pop
rorb
mov
add
jmp
xchg
es
shlb
clc
out
jns
clc
sub
ds
cmpsl
cmp
mov
sub
insb
ret
mov
shll
mov
mov
bound
test
int3
xor
pop
jae
loopne
xchg
pop
mov
dec
imul
add
pop
mov
jae
xchg
ret
push
mov
jecxz
add
mov
mov
lock
mov
mov
ja
in
sub
enter
imul
mov
adc
mov
loope
aas
shrl
hlt
lods
adc
sub
lcall
enter
repz
mov
les
xchg
loope
pusha
cwtl
shl
mov
seta
pop
fwait
cmpsl
insb
pop
ds
test
adc
jecxz
mov
aam
cli
adc
push
push
jns
xlat
in
pop
pop
insl
and
inc
les
nop
or
adc
aaa
sub
hlt
out
loop
sbb
fiadds
js
and
jp
cmp
or
and
sbb
stos
xchg
out
xor
int
pop
xor
jge
xor
out
mov
pop
xchg
sahf
mov
cmc
jnp
test
push
rol
jb
loope
xor
insb
or
add
xor
cmc
xchg
jb
std
sti
xchg
enter
cmpsb
sub
das
ret
push
mov
add
fiaddl
push
and
mull
mov
int
repz
dec
or
jge
lods
or
cmp
jle
xor
xchg
adc
mov
icebp
mov
mov
jo
pushf
and
mov
icebp
push
test
repz
call
jp
jns
add
cmp
xor
les
pop
icebp
dec
mov
mov
jo
mov
das
pop
cwtl
rclb
repz
inc
js
into
sbb
arpl
dec
in
lods
repz
add
ret
xor
and
xor
outsl
sahf
and
mov
test
sbb
or
pop
adc
xchg
lss
add
xchg
push
movsb
gs
sub
pop
ds
mov
test
mov
lea
fisubs
push
xchg
sbb
sbb
or
add
mov
stos
xchg
dec
inc
mov
adcl
mov
test
ds
sub
push
into
mov
jle
jle
das
pop
add
leave
out
stc
add
frstor
push
mov
push
popf
inc
sti
nop
into
imul
add
mov
mov
rol
or
scas
mov
dec
or
repz
push
lea
out
ja
pushf
call
js
adc
mov
rol
out
imul
add
lcall
aam
fdivp
jns
movsl
jmp
jne
jp
out
pop
cmp
push
shrl
shl
fimuls
into
imul
movsb
sti
test
xchg
push
adc
or
push
mov
xchg
test
mov
fs
rorb
dec
cmp
subb
ja
nop
inc
nop
cwtl
sub
add
ret
mov
jge
cmc
adc
and
push
inc
pushf
cmp
or
adc
xor
or
hlt
ret
daa
xchg
xor
outsl
lods
push
adc
lds
lcall
and
push
ds
jno
std
scas
adc
mov
sarl
and
dec
mov
push
sub
incl
dec
leave
adc
push
and
int
hlt
bound
push
sbb
adc
sbb
mov
dec
cmp
aad
addps
push
in
inc
xchg
xor
sbb
rclb
shl
push
adc
mov
sub
pop
jecxz
daa
lock
pop
and
repz
pop
xchg
mov
xor
call
lods
sbb
push
xchg
loop
cld
pop
sbb
es
pusha
insb
call
sub
cwtl
cli
pusha
sub
jo
xchg
adc
adc
or
or
insl
stos
mov
mov
scas
fnstenv
pop
fwait
rol
movsl
mov
fcmovb
ja
fdivrl
popa
ret
and
std
popa
or
and
mov
xchg
add
adc
and
faddl
cmp
loop
adcl
mov
inc
xchg
jae
pop
xor
pop
pop
or
in
insb
push
sarb
push
pop
loop
dec
inc
xchg
jp
xchg
mov
inc
inc
and
data16
add
data16
sti
adc
mov
push
movsl
es
sub
mov
leave
dec
mov
add
pextrw
cwtl
mov
fsubrl
cmc
fldl
pusha
je
and
mov
and
and
mov
sbb
in
mov
xchg
sub
enter
push
bound
and
push
movsl
pop
jle
pop
fldl
dec
test
dec
jnp
jecxz
mov
xor
ds
jne
jle
add
popa
and
push
jns
adcl
push
leave
jle
xchg
mov
mov
jge
xor
pusha
adc
jb
sbb
rorb
cld
out
ret
cmp
hlt
loope
and
sub
rcll
in
push
pop
push
dec
fisubs
pop
cmp
lock
sahf
xchg
xchg
cmp
dec
push
cli
mov
add
xchg
and
leave
xchg
dec
push
or
xor
movsl
jb
cmpsb
fs
adc
xor
mov
xchg
xor
inc
ljmp
ja
vminpd
loopne
icebp
lds
xor
fisubl
sbb
cmp
push
out
testb
xor
cmp
cmpsl
fwait
and
test
cmp
scas
or
push
push
gs
mull
fs
fs
repz
fisttpll
insl
dec
dec
sub
lock
aas
sbb
mov
notb
xchg
loope
orb
inc
clc
push
hlt
mov
cmp
arpl
mov
fnstenv
xor
or
int3
push
cmp
bound
jo
leave
daa
ffreep
inc
fmull
push
xchg
mov
in
adc
inc
mov
fmuls
push
inc
push
pop
aaa
adc
test
adc
push
repz
adc
sbb
jmp
adc
adc
pop
mov
jo
cmpsl
cmp
in
out
imul
mov
sbb
ja
push
fiaddl
loop
subl
xchg
xor
inc
xlat
jae
sub
adc
es
sbb
sbb
in
or
pop
frstor
daa
aaa
push
xor
and
adc
out
xor
mov
pop
xchg
dec
pop
ljmp
aaa
les
mov
rcrl
mov
cmc
xor
sub
dec
push
push
mov
lahf
mov
mov
lea
mov
sub
dec
testl
mov
dec
in
pop
adc
hlt
addl
mov
lret
sub
mov
lock
dec
xor
adc
mov
push
clc
inc
std
or
lock
xchg
ss
mov
sarl
in
int
cwtl
xchg
cs
pop
jl
popf
add
dec
sti
and
gs
mov
inc
int
fsubrs
mov
pop
adc
dec
lahf
mov
scas
sub
minsd
mov
cmpb
daa
les
cli
int
add
enter
ljmp
and
cli
movsb
mov
sahf
sbb
addl
pop
add
jge
add
lcall
out
and
movsl
adc
mov
scas
sub
pop
inc
dec
xor
mov
fs
nop
cmp
leave
ljmp
popa
int3
and
loope
or
movsb
xchg
es
stc
in
mov
inc
scas
repz
sub
jmp
insl
aam
imul
int
decl
test
das
in
in
or
rcr
sbb
mov
cs
adc
xchg
mov
lea
jp
push
mov
shrb
xlat
stos
pop
cwtl
jge
ret
jmp
js
inc
and
aam
jbe
test
fcomps
or
cmp
mov
mov
add
inc
pusha
inc
fistl
add
mov
ds
push
nop
push
or
movsb
pop
stos
flds
enter
add
call
inc
je
xor
or
jb
shl
xchg
das
sbb
cld
cmp
adc
push
scas
enter
popf
fwait
add
aam
out
cmp
dec
outsb
push
test
jg
fisubrl
dec
and
jge
pop
leave
rcll
dec
push
out
xchg
shlb
or
push
aas
ljmp
outsb
outsb
mov
sbb
inc
inc
or
pop
mov
pop
fildll
cmpsl
loopne
xor
adc
outsl
mov
push
scas
repnz
nop
xchg
hlt
arpl
push
lods
add
loop
dec
dec
inc
rcl
inc
test
inc
ja
daa
scas
mov
jmp
jg
cmpsl
jb
notl
push
mov
clc
add
iret
mov
call
rclb
inc
movsb
out
ret
inc
clc
mov
push
mov
hlt
mov
sub
lea
or
cmp
enter
cmc
jge
ret
mov
adc
jns
pop
fs
dec
mov
push
push
or
cs
mov
fbstp
fisubrs
or
xlat
inc
inc
mov
test
loopne
push
in
xchg
cmc
popa
int
pushf
sbb
sbb
pop
cmc
or
fwait
cld
aaa
cmc
push
pop
pushf
int
sbb
out
adc
insb
jbe
sahf
sbbb
jge
sub
scas
and
inc
push
dec
add
mov
stos
pop
popf
sub
clc
scas
jns
jmp
adc
loop
cmp
ud2
xor
sub
cmp
push
arpl
clc
mov
les
dec
rolb
lcall
or
clc
imul
jecxz
adc
shrl
xchg
jne
js
mov
leave
bound
mov
hlt
clc
add
xor
lahf
jae
add
jecxz
and
mov
gs
sbb
pop
sub
lcall
jno
mov
out
incl
rorl
add
dec
sbbb
jp
mov
loop
push
push
fwait
outsl
pop
and
sahf
jp
push
dec
cmp
ror
inc
fmuls
lock
pop
lret
shl
push
inc
push
lahf
xor
fwait
mov
cs
mov
repnz
dec
inc
add
or
dec
clc
jae
sbb
stos
mov
pusha
pusha
loope
push
leave
icebp
loopne
imul
out
or
or
in
fidivs
mov
dec
sub
mov
ds
mov
test
out
into
movsl
lock
pop
sbb
sub
cmpb
hlt
addr16
lea
je
xchg
lds
pop
pushf
sahf
xchg
inc
cmp
xchg
jg
jp
mov
in
movsb
lret
cmp
sti
sub
push
add
add
cmp
adc
cld
sti
mov
pop
sub
jge
lds
push
mov
sbb
or
ljmp
out
orl
leave
adc
xor
cwtl
test
xchg
in
mov
fwait
out
ret
xchg
push
and
cmp
movsl
or
xlat
out
fidivrs
stos
ja
push
xlat
sbb
jp
pop
and
mov
push
mov
pop
sti
or
mov
shrb
adc
sub
sbb
shl
cmp
pop
mov
sbb
out
adc
idivb
cmp
lcall
push
mov
insl
push
daa
sub
in
adc
cmc
inc
mov
ss
imul
cli
pop
jp
push
fldenv
push
inc
dec
in
adc
mov
xchg
pop
xorl
adc
ret
push
dec
dec
cmpl
mov
outsl
adc
sbb
cmp
cmpsl
push
ja
sbb
mov
xchg
pop
add
add
sub
push
adc
cmpsb
cmp
sbbl
add
dec
or
outsl
xor
idivl
xchg
das
mov
jecxz
inc
mov
dec
dec
pop
push
push
and
xor
fistpl
mov
aad
cmpsl
mov
inc
dec
xchg
jbe
mov
cmp
xchg
popf
call
pop
sbb
andb
push
dec
sti
mov
outsb
cmpsb
ljmp
sbb
je
lods
sbb
xor
or
fcomps
push
rcrb
insb
fdivr
insl
pop
es
jnp
mulb
cmpsb
cltd
leave
inc
pop
shrl
clc
push
sub
push
add
arpl
sub
test
cwtl
call
lcall
xchg
arpl
fwait
fs
mov
lods
mov
lods
push
js
jnp
xchg
push
clc
jmp
pop
outsb
shll
flds
mov
lods
andb
mov
nop
mov
push
cli
filds
int
movsb
lret
into
call
scas
sbb
adc
or
ss
add
mov
jp
jp
fucomip
dec
mov
push
dec
add
dec
push
in
or
sti
cwtl
add
cld
and
or
xchg
mov
jecxz
andb
inc
icebp
or
adc
sbb
dec
stos
or
dec
in
aad
mov
call
loopne
out
popf
icebp
push
cmp
mov
sbb
mov
pop
lahf
jb
ja
or
xchg
adcl
mov
cs
jge
mov
rorb
loopne
dec
dec
sub
insb
pushf
fsubs
adc
leave
mov
pop
lea
push
lods
mov
mov
scas
dec
pop
add
dec
jg
fisubrs
sub
shll
xchg
pop
pop
xchg
ss
xor
push
clc
push
dec
mov
ret
inc
test
clc
lods
dec
scas
add
out
idivb
scas
clc
js
adc
psubusw
mov
incl
movsb
xor
pop
push
dec
mov
ret
and
and
mov
pmaddwd
mov
pop
fcompp
jge
lret
add
jle
es
push
enter
mov
out
xor
sub
fsubrs
xchg
push
xor
pop
outsb
jle
pop
movsb
movsb
std
iret
popa
mov
shll
imul
addl
xchg
stos
push
sbb
les
test
xchg
sub
fistl
add
sti
and
pop
test
cmp
loopne
int
aas
repnz
lock
sbb
cli
lret
orb
dec
test
lods
stc
and
mov
add
add
jecxz
add
dec
sbb
xchg
xor
and
nop
or
into
loopne
and
mov
lret
cld
out
sahf
js
and
jnp
inc
pop
mov
dec
sbb
inc
push
inc
cs
js
ffreep
cmpl
push
sub
arpl
jo
lea
les
les
ss
add
mov
or
aaa
xlat
out
pop
cmc
loopne
ljmp
cmpsb
fnstsw
shl
pop
leave
ja
jns
cli
cmp
call
mov
pusha
mov
inc
jmp
nop
fcomps
aam
jp
push
int3
mov
mov
or
sub
xchg
inc
inc
scas
in
mov
pushf
ret
xchg
outsl
fdivl
inc
pop
pop
xchg
enter
lods
stos
ljmp
fs
mov
loop
rorl
inc
ret
push
adc
mov
stos
sbb
pop
add
lock
scas
inc
test
cmp
call
dec
lret
push
test
idivl
push
jne,pt
inc
lods
pop
cmpsl
jbe
clc
out
xchg
call
pop
aaa
add
jae
or
jbe
bound
aad
lods
jl
jecxz
inc
leave
jl
dec
scas
gs
ret
hlt
adc
mov
decl
push
inc
daa
repz
cmp
xorb
push
es
or
push
fmul
inc
dec
xor
sbb
lock
mov
add
ja
cmp
lret
sbb
push
adcl
sub
add
repz
scas
lds
popf
push
jae
xor
inc
and
dec
icebp
ret
inc
div
ja
or
stos
mov
mov
dec
cmp
sbb
fbstp
adc
gs
insb
adc
fildll
push
jle
cli
int3
fimull
mov
jae
rorb
and
scas
cli
adc
mov
stos
or
push
and
movsl
cmp
inc
test
xor
outsb
roll
mov
cmp
jl
test
sarb
movsl
mov
xlat
push
dec
es
inc
xor
xor
jmp
inc
in
fisttpl
arpl
cmpsb
pop
orl
mov
mov
add
jge
adc
outsb
loop
rorb
jo
notl
cli
cmpb
pop
add
push
sbb
cmp
lods
cmp
sahf
lock
add
addr16
pop
in
mov
js
mov
push
test
push
xor
pop
cwtl
push
pop
dec
cli
and
or
push
cmp
inc
adc
push
pop
loopne
rol
mov
xor
lods
and
push
xchg
addb
xchg
outsb
lret
or
idivl
scas
arpl
cmp
adc
sub
xchg
nop
jns
sub
fsts
ja
xchg
data16
adc
cltd
sbb
adc
fisttpl
jno
fs
xor
sbb
scas
insl
jne
mov
fdecstp
fildll
inc
ljmp
xchg
js
adc
loop
or
insl
xchg
repnz
fcoms
outsl
jb
and
inc
fbld
xchg
push
ja
push
test
mov
rcrb
mov
fisubrs
mov
pushf
cs
pop
orb
es
and
mov
fadd
xor
mov
add
sub
push
sahf
push
clc
mov
xchg
ss
mov
roll
inc
insl
pop
dec
mov
lock
mov
sbb
fwait
iret
arpl
mov
cmc
sti
inc
or
gs
add
rcrb
arpl
je
inc
loopne
in
mov
call
pop
cmp
repnz
cmc
jns
lret
or
rclb
xchg
pop
mov
popf
out
into
dec
rcll
popf
push
or
xchg
mov
out
arpl
push
dec
add
idiv
mov
iret
pushf
pusha
test
adc
mov
xor
sti
enter
mov
sub
add
js
cmp
dec
xor
aad
add
ret
insl
call
leave
mov
imul
pop
mov
mov
vphaddwd
jnp,pt
addb
adcb
or
xchg
cmp
in
mov
sbb
push
sub
popl
outsw
int3
daa
cmpsb
mov
notb
add
outsl
cmp
and
inc
mov
push
add
loope
push
scas
inc
loop
je
ret
test
enter
enter
cmp
mov
out
dec
repnz
lret
lret
sub
pop
orl
jnp
rcll
cmp
push
pusha
pop
pop
lahf
imull
push
cmp
sub
cmp
stos
push
sub
mov
mov
adc
inc
pop
loopne
lods
repnz
mov
xchg
adcb
adc
inc
lock
adcb
or
lret
pop
outsb
stos
and
test
shl
xor
push
in
in
xlat
sbb
in
push
jno
add
faddl
aad
mull
enter
outsl
add
stos
xchg
add
cwtl
daa
jecxz
cmp
stos
out
cltd
imul
mov
test
mov
sahf
popa
xchg
mov
loope
sub
sub
pop
test
repz
mov
jb
roll
shrl
inc
mov
int3
fsts
and
popl
jae
push
mov
mov
ss
hlt
imul
mov
add
push
or
mov
jnp
pop
lock
int3
inc
ror
cmp
sbb
sub
mov
and
lahf
sub
and
rcrl
cltd
sahf
xor
mov
hlt
in
andb
dec
insb
cmp
mov
loopne
push
negl
xor
repnz
jecxz
lods
mov
cmp
clc
in
fwait
mov
lret
leave
cmc
gs
loope
xchg
mov
sub
push
sbb
xor
out
pop
sbb
nop
push
add
inc
aam
xchg
cs
sub
or
adc
mov
dec
sahf
shr
cwtl
jo
dec
push
cmpl
push
cmpsb
ljmp
push
cmp
xor
cmp
in
ret
lods
les
pop
xchg
test
shlb
test
mov
in
sbb
fnstenv
push
or
loopne
add
jle
push
scas
sbb
fisubrs
fmuls
xchg
repnz
jp
sub
aas
movlps
jecxz
push
in
aaa
add
add
shll
cmpsb
orb
jl
pop
mov
cmp
les
sub
sbb
lods
mov
int3
sub
fdivrp
xchg
jne
icebp
or
pop
push
inc
jno
test
adc
xor
mov
mov
push
ja
sub
cld
dec
in
ljmp
clc
xchg
cmpl
lock
cmc
test
outsl
mov
mov
enter
fisubrs
or
mov
int3
jnp
jb
inc
dec
inc
orl
in
shlb
jmp
adc
jb
loopne
sub
xor
xchg
xchg
push
cld
push
xor
mov
cwtl
xlat
add
add
lcall
add
xchg
mov
testb
test
xchg
ret
sti
mov
arpl
data16
scas
xor
push
shrl
push
inc
insb
lcall
mov
xchg
ret
sbb
mov
lcall
mov
xchg
daa
xor
xchg
lret
push
dec
mov
inc
push
jmp
in
and
pushf
clc
and
scas
xchg
repnz
aam
stos
or
cwtl
arpl
cmpb
out
mov
pop
fldt
xchg
cmpsb
movsb
mov
stos
shrb
cmp
jo
dec
cwtl
cwtl
clc
xchg
cli
mov
inc
push
mov
test
pushf
lods
mov
inc
flds
or
sub
sbb
push
das
mov
popf
push
mov
movsb
xchg
and
insb
outsl
cld
cmp
shlb
or
jae
dec
add
cmp
cwtl
out
mov
inc
pop
loop
mov
mov
sbb
arpl
mov
nop
in
int3
push
jns
inc
add
es
dec
jns
out
test
push
lds
sbb
mov
inc
mov
push
sub
test
mov
jmp
in
test
push
in
add
sarb
les
test
pusha
inc
jl
cmp
jl
mov
dec
push
jnp
mov
xchg
jmp
sub
les
xchg
rcl
jnp
js
lods
repz
inc
orb
xor
fstpt
cltd
xor
jo
mov
and
aaa
pushf
cmpsb
popf
sahf
mov
push
push
test
fbld
dec
lds
xchg
adc
sbb
outsl
shr
clc
jge
sub
jg
dec
and
iret
dec
popf
mov
scas
jbe
lcall
cmp
and
inc
test
mov
out
loope
idivb
and
test
adcl
iret
mov
xor
mov
int3
adc
cmp
addr16
push
xor
jmp
fsub
inc
lods
xchg
cmc
je
and
mov
ja
int
mov
ret
in
in
or
push
test
addb
scas
mov
addr16
cmp
push
pop
ror
and
mov
mov
add
movsl
push
lcall
inc
fiadds
mov
ret
jmp
test
dec
dec
leave
ret
loope
ret
mov
cmp
out
xorl
xchg
push
mov
push
push
mov
bound
and
push
lahf
cli
fwait
imul
mov
sub
xchg
xchg
pop
cmp
lcall
sub
inc
xchg
add
das
and
sub
sbb
push
insb
ljmp
add
aas
push
insl
jmp
xlat
mov
push
lods
cld
mov
or
popa
out
ret
inc
xor
int
lods
inc
in
cmpsl
mov
and
out
inc
xor
pop
mov
lcall
pop
lret
ja
clc
lahf
test
adc
lock
dec
jb
movsl
mov
bound
pop
pusha
add
aas
into
mov
stos
es
push
sbb
mov
in
jo
fdecstp
sbb
inc
mov
xchg
sbb
aaa
mov
xor
jb
lret
and
xchg
sbb
push
mov
loopne
pop
repz
mov
pmaxsw
jnp
jp
xchg
mov
or
call
cs
jmp
ljmp
jae
cmp
pop
or
scas
mov
ret
mov
dec
sbb
cmp
xor
mov
lahf
xchg
mov
adc
dec
mov
mov
mov
inc
pop
ret
int
cmp
xor
and
arpl
xor
les
sub
cmp
dec
nop
clc
add
cld
in
aad
arpl
sti
jle
xor
repnz
lods
fildl
popa
js
cwtl
movsb
inc
les
sub
in
jb
inc
xchg
jns
aas
jecxz
negl
lods
cltd
fdivl
and
mov
xchg
scas
jl
push
pop
aad
mov
das
push
mov
cmp
sub
xchg
push
jecxz
jecxz
movsl
repz
and
js
testb
repnz
and
nop
pop
testb
mov
xchg
xchg
leave
movsb
ja
xor
mov
mov
std
adc
mov
ret
gs
push
dec
ss
add
mov
test
mov
test
mov
stos
shl
inc
jmp
insl
mov
jp
xchg
sarl
jle
fdiv
pop
scas
outsb
add
mov
jp
and
add
mov
sti
and
or
lahf
pop
lods
inc
push
inc
xchg
sbb
mov
inc
les
ret
dec
ret
jg
mov
lret
ds
pusha
jne
fucomp
fiaddl
push
sub
mov
or
inc
outsl
sbb
roll
mov
and
sub
add
fisubrs
push
scas
add
cmpsl
xor
ja
mov
movsb
cmc
and
push
mov
jmp
fistpl
and
xchg
or
aam
and
dec
push
es
pop
jb
mov
inc
mov
imul
js
mov
add
mov
mov
movsl
dec
pop
cmp
jns
cmp
sbb
addr16
psubusb
ret
pop
xchg
sbb
mov
rcrb
sub
js
mov
cli
idivb
push
push
std
adc
fdivrp
ljmp
jae
lods
in
ret
and
stos
mov
hlt
inc
mov
icebp
shlb
or
xchg
decb
mov
mov
movsl
stc
hlt
rcrl
jg
adc
repnz
fisubl
in
out
dec
stos
outsb
stos
adc
bound
sbb
les
int
cmpsl
sub
inc
inc
xchg
push
mov
jle
inc
pop
add
and
adc
and
out
fs
negl
push
daa
xchg
jp
push
mov
mov
push
inc
push
sbb
cmpsb
mov
sbb
rcr
out
ja
icebp
movsl
lods
insb
fwait
in
pop
xor
jne
repz
pusha
inc
push
stos
notb
push
je
cltd
in
inc
sub
mov
pop
ret
call
cmpsl
mov
xor
cltd
mov
call
sbb
sarl
add
test
call
sbb
xchg
or
enter
sub
jnp
or
sahf
push
mov
mov
rorl
nop
inc
dec
imul
int
inc
xor
pop
fsubrs
icebp
mov
mov
dec
lcall
xchg
leave
and
jno
mov
mov
inc
pop
mov
insl
enter
cmp
mov
inc
rol
push
cmp
sub
or
cltd
jl
repz
cmp
inc
pop
stos
stc
lret
shll
test
in
xorb
and
in
scas
addb
fbstp
mov
aam
shl
scas
pop
adc
cmpsl
pop
push
das
lahf
mov
nop
jnp
sbb
sub
mov
daa
add
mov
lcall
cli
rcrl
pop
mov
sub
sub
jecxz
adc
adc
aam
xchg
repz
into
sahf
lods
fsub
adc
push
and
push
lea
nop
insb
jmp
xor
pop
sahf
ss
cs
arpl
mov
mov
add
mov
xchg
int3
vxorps
popl
mov
jecxz
pop
lock
cs
sahf
insb
test
or
add
ds
lahf
out
addr16
sub
mov
and
jnp
dec
push
repnz
sbb
cmp
in
xor
adcb
out
in
stc
xchg
aas
mov
test
stos
not
fmul
movsl
push
jp
jmp
fisttpll
xchg
jge
rcr
adc
cmp
inc
cltd
push
sbb
rcrl
jle
outsb
rcll
repz
loop
cmp
jg
mov
push
mov
mov
and
imul
bound
push
xchg
sti
popa
mov
and
mov
in
loope
jo
js
mov
cmp
sahf
cmp
cmpl
sti
popa
dec
mov
fwait
clc
sub
icebp
mov
dec
les
fs
negb
xchg
push
js
add
std
and
fbld
cld
or
cmp
fs
mov
and
into
sbb
hlt
or
sub
lods
fiadds
es
call
fiaddl
jne
jo
aam
mov
dec
xor
mov
outsb
add
lds
cmpsb
push
pop
mov
in
sub
ud0
jbe
pop
in
jmp
out
push
xor
shl
sbb
repnz
rcll
inc
inc
rolb
add
pop
out
mov
pop
and
pop
sub
lea
jp
sbb
lds
mov
add
mov
or
ss
xor
int
pop
mov
jno
cmp
mov
xchg
cmp
movsb
mov
push
outsl
fnstenv
lcall
mov
lahf
nop
or
sar
sub
lods
aad
mov
sarb
cmove
js
test
or
inc
cmp
adc
cli
cmp
ljmp
and
sub
std
mov
in
mov
mov
shlb
and
pusha
dec
out
fstps
addr16
pushf
ror
mov
add
or
inc
out
jg
jo
cli
repnz
jmp
jae
mov
add
test
xchg
test
aaa
adc
add
push
and
jmp
aad
cmp
adcb
mov
adcl
push
repnz
insb
cmp
imul
and
hlt
movsl
dec
add
sbb
cld
into
mov
in
sub
lcall
lret
cmp
popf
sub
data16
outsb
clc
orb
dec
aaa
test
xor
fwait
cli
jmp
aad
mov
insb
ret
mov
sbbb
jl
stos
and
xchg
xchg
dec
lcall
int3
sub
dec
adc
std
imul
xor
add
xor
jl
add
fstl
pusha
ja
mov
pop
add
jb
aas
push
cmp
cmp
sub
inc
jno
jmp
test
ja
inc
int3
repz
int3
fimuls
pop
add
inc
pop
lds
shl
adc
xchg
adc
repnz
out
jecxz
aas
cmpsl
in
pop
sahf
mov
lea
cmp
sbb
pop
pop
mov
ficompl
int
push
insb
fsubrl
adc
pop
or
lcall
or
dec
and
inc
pop
mov
cmpsl
add
pop
adc
xor
mov
jbe
lods
xrelease
movsl
cmpsl
add
mov
push
aaa
dec
or
scas
mov
add
mov
cld
dec
inc
push
adc
stc
scas
push
fbstp
fwait
rcr
or
in
jl
ljmp
pop
btr
xchg
mov
push
xchg
sub
in
jnp
or
push
jb
fbstp
test
mov
push
leave
jnp
movsb
mov
jnp
cmc
mov
inc
adc
or
lcall
imul
dec
mov
addl
jg
outsb
adcl
add
xchg
xor
adc
xor
lock
push
lea
cwtl
push
call
inc
xor
cs
mov
std
lea
popa
jge
pop
test
add
jecxz
pop
pushf
sbb
jle
mov
xchg
stos
and
add
sbb
mov
movsb
sbb
clc
or
mov
lahf
fs
fwait
jg
pop
cmp
jp
xchg
push
push
pop
cmpsl
mov
cmp
cmc
sbb
mov
insl
loope
out
std
daa
xchg
jmp
insl
sbb
or
into
adc
int3
jae
push
jo
jnp
fmuls
and
repnz
jns
mov
adc
in
cwtl
test
das
mov
lcall
xlat
add
cmpb
xor
out
sub
enter
and
adc
add
mov
mull
rclb
dec
jns
jmp
add
ljmp
or
out
les
jne
adc
sbb
call
cmp
dec
xor
xchg
lods
lods
ja
fsubl
sahf
bound
stos
inc
xchg
dec
dec
adc
jae
sti
jne
adc
cli
cmpsl
aas
mov
ficomps
pop
repz
sahf
push
push
jne
xlat
dec
iret
adcl
xchg
fidivl
data16
dec
rclb
arpl
sbb
adc
into
xchg
cmp
mov
inc
pop
push
mov
jle
adc
icebp
add
xor
cmc
scas
sub
popa
xor
or
mov
mov
adc
inc
stc
rcl
add
push
lock
inc
iret
push
subl
fwait
sarb
pusha
mov
and
je
mov
lcall
or
inc
cwtl
fisubrl
add
nop
inc
xchg
cmc
xchg
pop
mov
ja
xlat
pop
jl
cs
imul
jg
fs
rcr
mov
pop
xchg
pop
add
mov
icebp
decb
loop
mov
idivb
js
xchg
lods
popa
lods
add
daa
jno
push
fisttps
in
or
ja
xchg
aas
inc
xchg
cmp
arpl
sarl
jo
fs
mov
push
or
dec
jp
lods
sub
push
rorb
outsl
int
icebp
or
add
stc
mov
pop
jbe
pushl
jp
inc
fcomi
dec
js
pop
les
scas
and
fildll
scas
insl
fmull
sub
pop
fneni(8087
icebp
das
jecxz
ret
mov
cld
jg
cmp
cltd
inc
sbb
and
in
mov
rorb
je
inc
push
xor
call
lods
inc
jecxz
xchg
mov
or
xchg
cmp
mov
pop
inc
inc
ljmp
outsb
mul
icebp
mov
mov
lret
ror
gs
ficoml
stos
or
mov
cmc
sbb
mov
sbb
fldcw
cmpsb
mov
pop
or
or
cwtl
pop
dec
jb
mov
fisubs
pop
mov
jns
rolb
in
cmc
pop
xchg
mov
xchg
fs
adc
mov
out
aas
aas
and
adc
inc
je
mov
jnp
insl
cli
int
xor
push
push
subl
sub
cld
lret
dec
rcr
inc
test
jns
add
mov
mov
mov
js
shl
mov
cld
push
mov
add
jl
push
in
push
inc
addr16
xor
add
inc
fs
adc
xchg
mul
jb
xchg
icebp
mov
jmp
call
xchg
fnsave
fldt
xchg
lahf
js
dec
mov
sub
or
inc
pop
fdivrl
dec
sbb
loopne
out
push
shlb
pop
clc
add
test
mov
sahf
je
jbe
subb
in
and
in
rolb
rcl
rcr
inc
cs
mov
dec
xchg
pop
xchg
call
dec
lods
in
popa
arpl
sbb
fdecstp
dec
jb
dec
push
movsb
dec
xorl
jnp
dec
jle
fldenv
fildl
mov
sub
ds
sub
das
mov
shll
into
lcall
pop
arpl
or
pusha
mov
cld
movsl
pop
xor
loopne
pop
iret
paddusb
push
inc
clc
inc
pop
fs
fisubl
cld
sti
inc
and
imulb
dec
inc
or
add
mov
fdivs
mov
movsl
cs
rclb
lods
mov
adc
cmovnp
mov
mov
lds
xchg
or
in
call
add
repz
sub
hlt
aas
stos
cmp
std
inc
leave
cmp
sub
cmp
jnp
xor
inc
pop
test
xor
call
dec
dec
jecxz
lea
mov
pop
imul
cmp
je
mov
or
push
add
mov
iret
jg
scas
dec
loop
xchg
jns
and
dec
dec
adc
iret
ja
mov
jno
lret
push
fwait
scas
mov
enter
sub
imul
int3
jne
negl
imul
dec
stc
jne
repnz
xchg
dec
and
mov
jge
inc
mov
cmpsl
bound
imul
cltd
scas
fldenv
mov
cmp
cs
dec
das
or
cltd
loop
cltd
jecxz
cmp
pop
mov
jp
lods
or
in
imulb
ja
fucomi
imul
aas
push
xchg
push
add
sbb
mov
adc
cld
stos
loopne
test
and
cmpsb
pop
call
cmp
dec
inc
aas
fsubl
add
adc
test
andl
push
aam
mov
aaa
sbb
jne
dec
fdivs
pop
dec
clc
sbb
or
push
and
push
sbb
mov
lock
mov
push
addb
push
dec
rorb
scas
jge
pop
inc
fsubrs
add
dec
call
dec
mov
mov
fs
pop
mov
xor
repz
pop
mov
push
sbbl
mov
out
stos
sbb
jle
push
lds
sbbb
arpl
jmp
orb
stos
sub
gs
mov
mov
add
arpl
pop
aas
dec
ret
sbb
mov
mov
push
jbe
ljmp
dec
sbb
lcall
lds
out
fimuls
pop
loopne
pop
jg
leave
jmp
aad
push
xor
xchg
mov
addb
stos
mov
pop
push
pop
push
loop
mov
call
stos
aas
js
xor
int
jae
and
or
mov
loope
sub
jp
pop
das
in
or
cli
shlb
aam
testb
mov
loope
push
sub
cmp
mov
xor
and
add
jle
ljmp
mov
pop
iret
stos
insl
jmp
outsb
fs
imul
xchg
in
cltd
adc
fcoms
pop
lcall
add
das
sbb
push
sub
cmp
jns
repnz
add
scas
dec
pop
fcompl
inc
mov
xchg
stos
jg
jns
dec
dec
dec
jbe
rclb
sahf
inc
idivl
jge
lock
mov
lcall
out
lcall
imul
std
xchg
add
xor
lea
push
fwait
repnz
imul
cmp
xor
cli
das
pop
cld
mov
mov
scas
add
and
xor
in
in
mov
and
xor
and
xchg
out
and
sub
sbb
jae,pn
pop
push
sbbl
lret
nop
and
sub
cmc
insb
out
sbb
sarb
in
fdiv
rorb
cmpsl
pop
ds
outsb
push
out
or
loopne
sub
bound
adc
cmp
sub
adc
aas
sub
xchg
out
mov
stos
push
jmp
jae
cmp
movsl
lea
dec
jae
adc
mov
mov
mov
imul
mov
adc
cmp
xchg
mov
loopne
mov
js
lea
sub
in
sbb
adc
fdiv
movsl
dec
pop
sbb
jmp
in
xor
scas
add
scas
dec
mov
xchg
mov
xor
xchg
ud0
ljmp
mov
dec
notl
inc
aas
ret
fbstp
jecxz
repnz
jne
je
stos
loopne
nop
decl
addl
lret
mov
mov
scas
xor
rcl
jno
cmp
fadds
pop
mov
mov
mov
xor
dec
test
xor
mov
mov
inc
das
repnz
pop
ret
or
cmpsl
jne
ss
ljmp
pop
scas
mov
pop
jle
mov
dec
movsl
add
sub
pop
add
push
fwait
scas
mov
mov
int
enter
repnz
sub
hlt
xchg
adc
les
cmpsb
and
mov
pop
cwtl
idivb
mov
mov
mov
mov
push
subl
jp
jo
cld
mov
cmc
mov
out
push
dec
out
pop
scas
ss
mov
sub
lret
sbb
push
cmp
sub
adc
arpl
push
lock
mov
ret
test
cmp
mov
icebp
mov
mov
pop
cmp
repnz
pop
push
inc
jmp
dec
jae
in
cli
push
ds
or
push
mov
cmpsl
out
pop
pop
movsb
jne
int
enter
mov
scas
lods
or
and
out
jae
daa
out
std
push
adc
push
mov
sub
mov
adc
ja
loop
mov
lods
jnp
sbb
lds
push
push
int3
imul
xchg
cli
incl
mov
stos
mov
gs
inc
sub
pop
adc
push
lods
adc
dec
mov
push
pop
push
loopne
sbb
pop
pop
loope
cwtl
push
mov
xor
xor
sbb
es
mov
in
lods
cs
das
mov
imul
call
jo
sub
andl
mov
inc
fstps
loope
xchg
add
add
xor
lcall
arpl
adc
bound
jno
jl
fidivs
adcb
mov
inc
lcall
xlat
outsb
pop
or
mov
aas
cmp
lret
repz
scas
testl
pop
push
loop,pn
push
dec
mov
fld
jmp
or
rorb
or
sbbw
ja
les
flds
pop
repnz
in
or
push
outsl
test
nop
mov
cmp
sbb
stos
loopne
jno
scas
mov
aam
test
jp
or
pop
out
imul
push
cmc
push
xchg
mov
pushf
mov
in
inc
cmpl
sbb
cmpl
cmc
lea
inc
adc
js
pop
xchg
xchg
cmp
repz
outsl
jecxz
dec
and
cwtl
sbb
jae
fistpll
enter
cmp
aam
cmpsl
pop
adc
cmc
pop
cmp
adc
leave
ds
mov
shlb
and
mov
adc
out
icebp
dec
add
leave
rorb
jo
fdivl
call
loope
dec
scas
jmp
stc
xor
inc
and
xchg
xchg
fisttpl
lods
add
arpl
fnsave
lods
out
pusha
and
and
movsb
xor
fisubrs
sub
int
rcl
jmp
inc
pop
movl
fdivs
xor
in
fwait
xchg
insb
jns
test
push
xchg
cmp
imul
popf
hlt
jb
add
fcmovb
pop
xor
mov
test
cmpsl
int3
repnz
pop
rcll
mov
pop
pushf
loope
ds
sub
dec
cwtl
jp
shlb
or
cld
aam
out
popf
lock
call
sub
adc
repz
inc
es
das
loop
daa
cmc
lret
push
loope
out
fidivl
mov
push
sub
fcmovb
or
dec
xchg
cli
scas
push
dec
push
pop
and
rorb
inc
xor
mov
je
stos
lret
jbe
cmpsl
xor
ds
sub
mov
sbb
je
test
lock
jmp
mov
mull
sub
xchg
push
mov
jle
jb
ret
mov
pop
into
pop
cmpsl
or
inc
pusha
dec
test
out
fcompl
es
lret
scas
inc
movsb
mov
mov
fisubrl
scas
push
insb
adc
stos
mov
cwtl
movsb
fs
bound
xor
mov
mov
dec
jmp
mov
daa
mov
sahf
call
in
push
ss
leave
jecxz
lcall
ret
sahf
movsb
jmp
mov
jb
icebp
rolb
es
rorb
cmpsl
lret
adc
into
shrb
dec
jp
jne
ret
test
stos
push
push
mov
lds
sbb
out
xor
sub
dec
inc
jno
or
push
icebp
dec
std
pop
jnp
sti
stos
or
jne
push
sub
sti
or
nop
int3
adc
in
sub
sahf
pusha
lea
add
jo
xor
fdiv
adc
jecxz
dec
jae
jg
cmc
dec
ficompl
mov
adc
add
or
jge
scas
and
nop
push
or
xchg
je
mov
jo
imul
shll
js
imulb
scas
loope
into
jbe
movsb
jbe
pop
pop
test
loope
cmp
or
cld
xchg
push
push
push
mov
out
cmp
pop
mov
push
adc
out
lods
add
mov
pop
mov
dec
iret
jne
push
mov
adc
pop
mov
lcall
pop
cmp
outsb
pop
mov
test
adc
mov
sbb
mov
jno
fdivl
icebp
out
lods
test
gs
adc
sbb
popl
jecxz
ss
jb
inc
js
test
fldcw
dec
ret
push
push
dec
xor
cltd
add
jnp
enter
cld
rcr
xchg
lret
std
or
pop
xorl
cmp
arpl
inc
test
dec
push
shll
test
and
lods
pop
adc
out
stc
movsl
xor
punpcklbw
pusha
inc
sbb
jae
lods
cmp
add
inc
push
insl
inc
fwait
cmp
add
mov
sbb
mov
mov
data16
jne
data16
fstpl
test
popw
or
mov
sub
aam
js
cmpsl
and
rcll
add
aas
dec
div
and
xchg
pusha
nop
add
cmp
jge
into
mov
shrd
add
pop
insl
jge
or
jnp
lahf
xor
dec
xor
mov
xchg
fbld
sbb
mov
hlt
call
mov
or
mov
push
pop
mov
push
mov
call
mov
xchg
inc
xchg
jl
cmp
loopne
shlb
stos
and
push
xor
movsb
mov
xor
dec
je
mov
push
clc
xchg
je
decl
xchg
push
pop
jg
pop
jns
cmpsb
fdivp
mov
out
sbb
lret
ss
cmp
or
mov
pop
mov
repz
inc
ljmp
stos
iret
sarb
jecxz
pop
iret
aad
lea
jge
adc
add
lea
je
out
mov
fimull
shl
pushf
pop
xchg
push
cmp
es
lods
sbb
mov
outsb
out
pop
fcmove
cltd
ljmp
fdivrl
jmp
sub
ss
stos
and
cwtl
or
mulb
dec
lahf
cmp
add
fst
dec
pop
and
pop
insl
lods
pushf
sahf
push
mov
movb
sahf
cmpb
nop
dec
jbe
add
or
loope
sub
js
outsl
out
rorl
inc
stc
pop
fucomip
add
or
push
mov
sbb
orb
stos
jae
stos
or
pop
icebp
sub
rclb
insb
inc
lea
test
pop
cmp
popa
dec
and
jns
jle
pop
or
mov
dec
daa
add
outsl
push
es
cltd
movsl
arpl
and
shll
je
leave
inc
mov
loop
pop
fiaddl
push
addr16
icebp
popf
lret
push
inc
movsl
add
js
mov
aaa
sbb
inc
push
fisubs
cmp
and
and
shlb
mov
ret
xchg
lahf
jle
xor
loope
and
pop
mov
dec
mov
jg
sti
push
jbe
popa
ds
idivl
cmp
push
push
and
in
mov
int
filds
mov
add
aaa
icebp
aaa
cmc
adc
pop
pop
sub
jp
int3
mov
icebp
imul
pushf
sbb
fbld
call
es
popf
mov
popa
sahf
dec
pop
shlb
pop
lea
and
mov
icebp
jecxz
jbe
dec
jne
icebp
pop
pop
into
shlb
iret
pop
sbb
fwait
cli
or
mov
push
iret
mov
stc
push
push
pop
sbb
inc
outsb
stos
adc
insl
popa
scas
add
and
enter
xor
nop
add
fistl
push
or
dec
pop
cmp
pop
dec
inc
test
repnz
fdivr
aam
ljmp
inc
scas
js
push
sbb
dec
xor
gs
xorl
enter
xor
jmp
gs
loope
inc
cmp
and
jle
movsb
mov
inc
sti
arpl
mov
pop
jmp
js
jle
sarb
adc
pop
or
xlat
push
aaa
inc
xor
pop
inc
movsl
sbb
fcompl
insb
repnz
hlt
inc
data16
pop
xchg
and
lea
cmp
test
push
test
call
mov
dec
icebp
mov
sub
add
cmp
mov
cmpsl
jge
xor
cmp
fwait
push
add
inc
test
push
lds
int
cwtl
aaa
enter
mov
int3
mov
mov
pop
jg
mov
dec
or
mov
xchg
add
or
popa
dec
mov
ss
mov
lret
xchg
shrl
imul
sti
push
inc
xchg
jl
sti
jne
mov
xor
cli
add
out
fmull
incb
sbb
in
dec
dec
xchg
pop
scas
enter
iret
jnp
shrb
lock
lret
stos
popa
jge
mov
into
jecxz
jno
cmp
mov
mov
loope
icebp
scas
push
adc
dec
mov
test
xchg
dec
sti
jg
jmp
adc
xor
int3
mov
push
mov
ljmp
repnz
sub
mov
pop
mov
and
sub
mov
call
lock
pusha
dec
inc
movsl
xchg
adc
lcall
push
in
stos
outsb
push
mov
jae
pop
in
jmp
pop
inc
imul
setne
mov
pushf
xchg
jg
jne
sub
jp
sahf
mov
mov
push
sub
pop
xor
push
sbb
dec
mov
das
push
push
pop
jmp
mov
lahf
lret
bound
scas
sub
arpl
mov
adc
shlb
adc
pusha
jp
pushf
xchg
or
inc
or
xchg
les
aaa
movb
jae
movsb
lahf
lahf
ficoms
mov
loop
mov
leave
stos
stos
pop
ja
pushf
dec
gs
mov
js
hlt
loop
mulb
jg
in
icebp
lcall
in
push
inc
push
dec
mov
out
or
in
xchg
jne
sbb
xchg
inc
leave
lret
pop
xchg
xchg
outsb
mov
sbb
ror
inc
fcoml
sbb
ss
mov
inc
fnsave
adc
pusha
pop
xor
add
push
inc
push
je
pop
test
sti
add
in
fsubrl
mov
shll
xor
aaa
pop
push
cmc
daa
out
cld
xchg
adc
push
xchg
push
dec
mov
lods
dec
dec
daa
shlb
cmp
push
mov
xor
call
xchg
decl
lock
dec
push
loop
inc
xor
jae
jb
addr16
ljmp
push
pop
lcall
sbb
mov
bound
and
hlt
add
sti
andl
adc
out
inc
cmp
frstor
jmp
mov
stos
adc
test
aad
lret
imul
aaa
or
push
xchg
clc
lcall
mov
add
xchg
jno
add
cwtl
cwtl
fwait
mov
pusha
in
lods
inc
ljmp
sub
xchg
cs
xchg
sarb
jae
jp
rol
add
dec
sbb
push
outsl
jo
aad
lret
add
pop
push
xor
stos
cld
pop
pop
fwait
dec
outsl
jno
fcoms
or
xor
jbe
pushf
test
cmp
xchg
ret
inc
call
arpl
sub
pop
and
outsb
xchg
pop
cld
js
add
mov
cmp
mov
push
decb
lock
inc
cmp
jb
jno
out
pop
subl
jecxz
ds
icebp
add
leave
jno
fs
pop
ljmp
xor
add
ret
push
jle
out
pop
xor
adc
push
pop
fwait
adc
shr
mov
xchg
scas
mov
mov
adc
pushf
or
nop
ffreep
jno
add
cli
mulb
cmp
das
mov
or
cmp
or
mul
stc
std
std
pop
js
push
sub
push
sbb
xlat
test
loope
loop
and
xchg
lods
cmp
inc
push
jb
shl
push
leave
xor
out
ds
sbb
push
sbbb
xchg
inc
adc
sbbb
je
adc
aas
aas
test
loopne
xchg
inc
xor
aaa
leave
pop
xchg
testb
clc
jbe
out
dec
nop
push
rolb
call
out
lods
mov
aad
lods
mov
mov
pop
pop
outsb
test
ljmp
orl
adc
stos
sbb
dec
inc
and
inc
sbb
mov
cmpsb
mov
cmp
lods
dec
push
addr16
dec
add
aas
leave
aam
fsubrs
push
lahf
call
push
mov
sbb
push
in
jnp
jp
aam
ja
rorl
mov
jns
xor
loop
loope
mov
fdivrl
jecxz
pop
dec
xchg
mov
stos
xchg
mov
aad
arpl
adc
inc
ret
ss
push
jns
ficomps
adc
sub
pop
inc
into
jge
stc
idivl
sti
mov
cli
clc
jp
loop
into
bound
and
push
bound
pop
out
jl
mov
jmp
repnz
in
les
lods
inc
shl
xchg
xchg
pop
imul
xchg
js
stos
inc
dec
jge
mov
fsubp
inc
daa
mov
inc
mov
dec
inc
fstl
mov
lock
cmp
out
int3
push
cmp
sahf
push
inc
popf
pop
jae
iret
ss
adc
popf
push
lret
dec
push
push
add
sub
lods
mov
mov
into
pop
aaa
xlat
stos
call
mov
cmpl
adc
pop
sbb
adc
mov
cmpsb
inc
adc
add
push
jl,pt
xor
add
inc
dec
add
dec
jnp
aad
movsl
out
inc
cmp
mov
arpl
inc
sub
or
cld
out
and
push
mov
xor
les
outsb
iret
mov
sbb
popf
call
es
test
cltd
das
adc
clc
adc
mov
sahf
mov
lods
enter
jmp
mov
lea
cwtl
mov
add
add
lods
xchg
fisttpll
inc
cmp
push
pop
inc
fdivl
fstpt
leave
into
pop
out
bound
or
push
js
lds
adc
xchg
pushf
cmp
cld
mov
cmpb
sahf
adc
shrb
pop
push
push
mov
dec
fdivrl
aaa
xor
popf
popa
add
movsb
xor
clc
xchg
shrb
addr16
adc
cmp
stc
insl
aam
mov
dec
cmp
xlat
in
filds
jl
rorl
mov
subl
mov
inc
xchg
imul
fisttpl
jnp
lret
mov
dec
pop
insb
mov
les
inc
fnsave
aad
jb
mov
stc
in
pop
fldpi
push
aas
arpl
or
push
push
sub
jge
jb
in
inc
and
mov
cmp
dec
xor
xor
mov
push
fstpl
adc
les
xor
cwtl
or
leave
out
pop
movsb
into
mov
mov
rorl
or
jge
mov
rcrb
hlt
outsl
xchg
jmp
aaa
sbb
push
xor
and
jecxz
fstpl
dec
push
into
jo
lods
shr
lods
lods
mov
push
jmp
dec
movsl
push
push
mov
mov
jnp
shll
bound
dec
push
in
pop
xchg
xor
adc
fs
inc
pop
push
pop
fwait
or
and
add
jge
cmp
loop
jb
test
pop
enter
or
jl
fwait
pop
pop
mov
xchg
data16
jns
mov
cmpb
and
sub
orb
rcll
cmp
ss
leave
mov
sbb
in
add
xchg
sub
push
js
mov
ja
adc
jae
jb
jge
call
inc
out
xlat
jno
insl
xchg
xor
les
sbbb
leave
lock
or
cmp
movsb
sbb
pop
push
mov
sarb
flds
pop
cmp
pop
inc
xor
clc
das
xor
pop
xchg
xchg
inc
dec
xchg
cmpsb
dec
andb
scas
add
adc
or
paddb
dec
xor
sbb
fstps
and
or
push
mov
mov
rcr
jg
xchg
fldenv
lods
shlb
mov
pop
ret
jns
xor
movsl
or
pop
jle
in
stos
mov
xor
and
mov
mov
cli
addr16
fwait
leave
pop
les
mov
mov
in
lcall
cmp
mov
ret
jle
jge
xor
pop
jg
icebp
jnp
and
cmpl
dec
cmp
cli
scas
dec
outsl
lea
jmp
mov
add
adc
xor
mov
sbb
scas
adc
sub
xor
cmp
dec
sbb
push
ret
test
sub
lods
push
or
fstpt
pop
inc
imul
mov
xchg
adc
es
out
dec
sbb
rcrl
addr16
lcall
ljmp
push
icebp
adc
cmc
scas
insl
pusha
in
int
mov
imulb
movsb
pop
xchg
loopne
ds
and
or
xchg
ljmp
lcall
popa
fwait
insb
mov
xchg
xorl
xchg
sbb
fwait
push
adc
sub
sahf
in
lcall
test
outsb
aad
cmp
fstps
xchg
mov
lds
mov
mov
inc
shll
mov
aas
out
lret
in
push
pop
xchg
mov
mov
pop
sbb
sbb
xchg
push
cmp
jne
inc
int
movsl
orb
pop
cmpsl
add
imul
sbb
shrl
mov
inc
inc
into
push
out
leave
lds
idivb
xchg
jo
movsb
inc
sbb
mov
jg
sahf
or
push
cld
sub
jae
dec
in
fisttpll
sub
fistl
out
push
mov
push
pop
adc
and
mov
cwtl
stos
add
add
xor
imul
movsl
sarb
cmp
cs
sub
outsl
sarl
mov
lds
insb
push
inc
add
dec
sub
push
cmp
inc
lahf
data16
adc
pop
out
es
insb
inc
jno
mov
adcl
clc
push
mov
fsubrs
xor
push
inc
inc
adc
insb
into
mov
imul
stos
fsubr
out
adc
out
ja
sub
adc
nop
dec
jno
aam
icebp
movsl
lahf
into
add
outsb
lods
dec
or
xor
mov
inc
xchg
sahf
insb
and
fistps
ret
loop
test
push
js
inc
shll
in
push
rcll
dec
push
mov
cmp
lds
cmp
mov
cmp
lods
arpl
clc
mov
in
jo
dec
cmp
outsb
lret
sti
mov
aam
and
popf
fstps
cmp
imul
outsl
test
xor
and
jno
jns
adc
mov
test
cmp
mov
stos
cwtl
scas
aad
cmp
jnp
jo
inc
pop
push
push
lahf
movsb
xchg
push
ja
add
pop
inc
out
sub
lcall
jbe
xchg
pop
out
test
jl
adc
test
fs
dec
pop
pop
push
sub
pop
insl
loope
push
mov
lcall
jo
outsl
push
adc
xlat
sub
or
mul
fmulp
mov
push
ficoms
fmulp
je
aaa
cmp
or
xorl
out
inc
leave
mov
mov
mov
add
push
mov
mov
cmpsl
pusha
or
adc
jl
jo
sub
push
jp
hlt
outsb
jle
mov
sub
inc
aad
fadds
inc
std
push
mov
test
dec
ret
jmp
dec
pop
mov
jmp
mov
mov
mov
or
lcall
lret
fstps
inc
xor
sub
jnp
aam
mov
lds
push
fdivr
int3
lea
cli
mov
incb
test
icebp
cli
jnp
add
cs
std
push
and
mov
sub
cmp
sub
dec
test
pusha
shll
push
xlat
imul
pop
push
sbb
jmp
rcll
and
lcall
loop
int
jp
add
adc
in
mov
gs
jne
pop
sbb
lahf
in
sub
loope
xchg
test
test
pushf
lea
xchg
jp
mov
pop
pop
es
enter
fmuls
cli
mov
or
icebp
loop
gs
pop
jge
mov
mov
dec
sbb
icebp
push
iret
adc
cmp
inc
aad
out
mov
xchg
push
push
nop
or
mov
roll
addb
insb
shrl
jne
orl
mov
ja
scas
xchg
pop
add
cmp
arpl
faddl
dec
insb
and
dec
inc
inc
push
sub
sub
data16
adc
xchg
orl
ljmp
enter
dec
test
xchg
out
mov
aad
mov
or
hlt
mov
rcll
xor
sbb
pusha
lea
sbb
imul
pop
adc
loopne
sbb
inc
and
and
or
mov
pop
icebp
sbb
dec
xor
lods
or
push
mov
push
cmpsb
xor
mov
cmpsb
dec
pop
std
imul
mov
dec
mov
mov
dec
sti
outsb
pop
jge
jbe
dec
in
mov
aad
mov
xor
stos
and
cli
or
or
mov
test
and
add
cwtl
andl
repnz
test
pop
cmp
or
add
xchg
mov
js
xchg
aas
test
pop
adc
setg
outsb
cmp
and
sub
hlt
or
xor
and
pop
or
sub
xor
sub
addr16
mov
mov
gs
inc
mov
or
sbb
sbb
bound
dec
aam
mov
pop
test
test
rolb
in
xchg
stos
jne
push
adc
lds
fwait
cmpsb
rorl
in
push
cli
mov
add
cmpsb
pop
sub
es
arpl
in
repz
in
es
rorl
into
addr16
xor
xor
addr16
jmp
xchg
jmp
outsb
int3
mov
or
scas
repnz
test
xlat
push
rorb
jae
out
movsb
cmpsl
fisttpl
sbb
push
lahf
push
neg
rorl
dec
xlat
out
push
arpl
pusha
jmp
adc
ret
adc
or
data16
cli
xor
and
xchg
xchg
add
int
or
inc
cmpsl
fisubs
ja
cli
fisttpll
fistps
aam
push
and
cmpsb
loop
mov
add
imul
sub
repnz
out
stos
fldcw
insl
push
inc
xchg
add
nop
dec
or
mov
loope
sbb
dec
mov
sub
call
icebp
dec
add
clc
mov
insl
scas
fucomp
or
imul
pop
mov
nop
cmp
cmp
cmc
sbb
pop
lret
shlb
pushl
push
movsb
clc
fsubr
push
insl
and
inc
pop
mov
pop
xor
mov
sti
adc
jmp
shlb
sbb
lcall
test
pop
rcr
nop
cmpsl
xor
int
and
mov
xchg
xchg
sub
addr16
sub
fistps
pop
leave
jnp
jmp
or
sub
test
sub
mov
mov
mov
adc
mov
inc
mov
imul
test
jae
xchg
idivb
pop
adc
jno
mov
mov
outsl
pop
insl
cltd
js
push
push
mov
imul
subb
jns
bound
jbe
sub
inc
xchg
adc
sbb
inc
ficoml
inc
mov
mov
sti
cmp
mov
daa
hlt
into
out
mov
cmpsb
ror
mov
sbb
or
aam
sbb
xchg
add
cli
sub
mov
sub
sub
lret
cmp
shlb
jbe
lods
jne
imul
es
jne
xlat
push
push
xor
ret
adc
jecxz
pop
ret
rep
dec
sbb
mov
in
repnz
aam
cmp
mov
inc
sub
lcall
and
sub
popf
or
aas
andl
movsb
and
lret
scas
imul
imul
or
test
push
or
add
dec
lret
loop
scas
repz
push
call
mov
das
rorl
ljmp
mov
and
lock
jns
inc
gs
jne
cmp
pop
fwait
and
dec
pop
sbb
pop
loope
pushf
rorl
mov
xor
cld
mov
addr16
sbb
sbb
outsl
adc
cmp
push
add
xchg
rorb
cmp
pop
fwait
aaa
jae
call
out
push
jmp
imul
pop
out
inc
in
les
cld
mov
data16
push
xchg
pop
jmp
rolb
sbb
mov
scas
xor
das
mov
pop
sarl
jecxz
add
mov
data16
imul
or
dec
inc
sti
xchg
cmp
push
add
dec
inc
daa
out
cmpsb
aas
xchg
jp
push
dec
test
je
cmp
popa
gs
lret
test
sub
mov
jnp
mov
mov
fsubp
add
fcoml
cmc
sti
in
xchg
pop
sub
out
ret
ret
test
jle
dec
sub
pop
aad
dec
fstps
jno
ja
and
je
dec
mov
andl
mov
push
pop
pop
pop
and
repnz
mov
es
movsb
popa
pop
insb
mov
fs
mov
pop
push
fsubrl
aaa
xlat
arpl
and
jg
dec
pop
sbb
mov
jp
and
and
cmp
cmp
imul
cmp
mov
int3
or
pop
xlat
push
push
cmp
fsub
jecxz
in
test
xor
daa
and
rclb
jb
std
xchg
jle
sub
in
add
mov
push
fmulp
pop
mov
movl
or
cmpsl
push
roll
int
testb
lock
push
outsl
mov
xchg
popa
test
cltd
insl
out
in
repz
lods
sbb
push
mov
push
arpl
jg
lods
mov
mov
scas
dec
lock
inc
les
sub
rcrb
cmp
outsl
sbb
cwtl
dec
movsl
dec
test
fs
cmpsl
clc
jne
out
pop
sbb
subl
and
cmp
sbb
sbb
and
inc
std
out
jg
lods
scas
push
push
ja
insb
mov
inc
in
fisubrl
in
jbe
fimull
and
mov
imulb
repnz
add
add
das
das
xchg
mov
fnsave
push
pop
nop
aaa
sbbb
pop
or
aad
test
cmp
cmp
xor
push
push
ret
mov
negb
adc
mov
and
iret
mov
aam
inc
sub
lods
push
add
in
lahf
jbe
mov
sahf
cmc
fs
insb
xchg
xchg
rcr
es
sub
or
pop
aaa
adc
xor
out
jne
and
jle
add
cltd
sub
push
es
mov
fucompp
pop
inc
loope
mov
pop
inc
xchg
push
aam
movsb
mov
fmull
jl
fldcw
lds
ljmp
fidivl
mov
loopne
and
addr16
push
in
mov
xchg
push
ds
adc
arpl
cmpb
test
mov
pop
out
push
xor
addr16
sbb
icebp
or
mov
pusha
mov
inc
adc
inc
jbe
push
repz
rcr
xor
and
scas
xchg
subl
cmp
js
adc
mov
outsb
iret
cmp
xor
adc
lds
lods
sbb
adc
ja
mov
xor
or
in
sub
fldt
and
sbb
adc
jne
rcrb
jno
sahf
sub
pop
lods
jle
test
jns
pavgb
jnp
inc
std
sbb
cmpb
lret
mov
out
sbb
scas
xorl
inc
xor
mov
arpl
xlat
aas
push
mov
repz
mov
mov
fldl
mov
dec
bound
in
mov
out
iret
scas
xchg
fisttpll
lock
sub
pusha
mov
fcmovne
push
mov
jno
dec
pop
pop
jecxz
andl
cmp
mov
inc
mov
add
shrl
adc
pop
cmp
xchg
push
xchg
xor
gs
push
test
hlt
mov
sahf
xchg
scas
rcll
out
rorl
sub
sbb
inc
in
iret
in
push
xor
aas
repz
aaa
pop
jae
negb
push
loopne
cmp
dec
sbb
jmp
std
mov
or
push
jns
jnp
xchg
cmpsl
xchg
mov
and
lods
sarb
inc
push
ljmp
ret
mov
sbb
aam
into
xor
adc
lahf
pushf
xor
fcmovbe
repnz
lcall
dec
or
mov
lcall
or
mov
sub
sbb
xchg
or
mov
push
pop
add
sbbb
dec
mov
leave
sub
mov
mov
pop
scas
fmuls
lods
inc
and
test
add
sbb
sub
adc
add
pop
xchg
adc
ss
jno
inc
push
ljmp
popf
jo
cmp
in
test
xor
push
in
testb
cwtl
pop
sti
je
cld
sti
xchg
icebp
jp
cmc
out
xor
lcall
push
fnsave
jmp
stos
cmpsl
mov
dec
seta
and
xor
mov
pop
pop
shr
mov
loop
addb
mov
popa
inc
mov
popf
xchg
jmp
std
sti
dec
int3
pop
arpl
sbb
push
sub
mov
jbe
jns
cli
cmc
pop
aas
lods
cmp
sahf
xchg
outsl
loope
pushf
sti
or
mov
out
dec
fcoml
jge
adc
nop
sub
dec
fdivl
scas
mov
mov
out
sbb
xchg
enter
dec
in
imul
xchg
mov
iret
aas
adc
fs
or
add
stc
std
xchg
xchg
inc
jl
jge
pop
arpl
out
jmp
cli
mov
and
or
xor
test
mov
dec
test
insb
in
stos
jp
paddd
and
xor
adc
loop
je
cmc
sahf
or
aad
jae
adc
addb
push
cs
jo
add
mov
aaa
insl
int3
aaa
xchg
xorl
rcl
rorb
jbe
or
shl
orl
hlt
scas
jmp
xchg
cld
fcomi
les
jmp
add
stc
outsb
fnsave
mov
ja
cmp
movsl
xchg
xchg
movsl
imul
adc
rcrl
sbb
xorb
mov
pop
push
or
cmc
out
push
mov
and
xchg
iret
jnp
lahf
add
cmp
mov
mov
xchg
setb
jo
call
xrelease
cmp
mov
insl
iret
mov
or
push
push
es
ret
jno
dec
sub
sti
cmp
pop
test
cmp
scas
xor
inc
ljmp
pop
add
xchg
flds
xor
idiv
sbb
pop
dec
fsubrs
mov
js
leave
shlb
imulb
jns
shr
cmp
xor
pop
je
das
sbb
in
sub
clc
icebp
repz
push
jl
inc
fwait
pusha
shlb
sub
mov
mov
loopne
hlt
int3
dec
std
aam
sahf
jmp
push
adc
sub
and
inc
pop
push
mov
add
jns
push
jecxz
dec
shrl
outsl
jbe
je,pt
or
adc
pop
shlb
xor
sbb
int
ljmp
insl
inc
sub
jnp
xchg
fs
xor
mov
mov
inc
adc
mov
and
aas
sbb
and
jl
out
lods
sub
xor
jo
adc
mov
xchg
sbb
mov
lahf
cmpl
xchg
mov
sbb
cli
or
add
lods
les
into
sbb
mov
xorl
outsl
cmc
mov
mov
repnz
mov
mov
push
mul
test
pop
stos
lret
add
ror
push
cmp
pop
mov
mov
les
insl
and
movsb
or
loop
sbb
test
enter
nop
push
jecxz
pop
dec
sbb
test
xchg
sar
clc
or
adc
pop
sbbb
jns
cmp
sti
stos
sbb
pminub
xlat
and
mov
add
sub
fcmovnbe
inc
imul
sti
sub
push
mov
add
cs
or
mov
rcll
cmp
aaa
or
pop
and
imul
adc
xor
dec
out
out
sbb
push
testl
pusha
xchg
xor
jbe,pt
cmpsl
pusha
dec
xor
or
dec
popa
dec
dec
sub
les
fistpll
dec
cli
mov
stc
adc
xor
and
nop
mov
ljmp
xor
inc
stc
pop
movsl
and
nop
addb
cmc
call
xchg
mov
or
std
iret
mov
push
add
icebp
dec
lahf
xlat
mov
xor
out
pop
fnstenv
xor
into
enter
xchg
fdivs
pushf
test
jo
mov
push
xchg
repz
pusha
jb
and
and
es
loope
cmp
cmp
jl
push
push
pop
mov
ja
fs
and
push
das
int
movsb
mov
repnz
jae
dec
xchg
nop
test
cmp
add
push
sbb
sti
scas
movsb
mov
jg
ljmp
sbb
pop
das
and
mov
addr16
xor
jno
fisubl
dec
addb
in
lods
in
xor
jns
or
shrb
sbb
push
insl
jae
jno
scas
clc
loop
mov
and
sub
push
xchg
hlt
and
xchg
repz
jecxz
pop
aam
sub
stc
or
dec
icebp
dec
sti
cmc
movsl
push
cmp
loopne
cmp
inc
shr
cmp
jl
lcall
sub
lods
roll
inc
xor
cwtl
lret
sbb
pop
xchg
xor
scas
lds
mov
pop
sbb
push
int
and
movsb
adc
add
sub
inc
les
push
popa
dec
fstpt
inc
jecxz
push
std
pop
pop
and
push
lock
pop
lret
jl
pusha
adc
adc
push
pop
push
jbe
sbb
es
xchg
jnp
js
in
add
push
dec
test
jb
mov
notb
inc
push
cld
insb
lods
in
ss
cmpsb
lahf
outsb
adc
jne
mov
and
sbb
pushf
fidivrl
gs
lret
leave
shll
mov
aaa
cmpsl
push
outsb
cs
cmp
mov
jp
out
js
cmp
paddsb
sti
sbb
pop
std
imull
adc
jns
cmpsb
pop
nop
fldz
or
cmpl
xchg
movsb
call
leave
adc
sub
mov
or
jge
sbb
xchg
jle
mov
dec
sbb
and
loop
pop
xor
sbbb
loope
add
dec
cld
mov
lea
or
sub
cmpb
pop
sub
dec
mov
push
les
call
push
ljmp
inc
pushf
in
into
shl
fidivrl
cmp
or
add
dec
in
xchg
int
sub
outsb
push
adc
in
pop
sti
xor
or
push
dec
fildl
cld
sub
push
cmp
adc
or
xor
sbb
push
mov
ds
inc
cmpsl
xor
ret
scas
aas
pop
scas
std
ds
xlat
idiv
mov
xchg
pop
add
inc
jl
add
ljmp
stos
in
ret
jl
cmpsl
sub
add
or
jge
mov
add
mov
aam
inc
jbe
flds
test
dec
outsb
mov
daa
push
dec
xor
xchg
std
sbb
add
mov
dec
adc
sarl
imull
mov
fwait
cmp
pop
push
gs
add
test
into
daa
xor
jge
xchg
sub
scas
and
xchg
jl
cmp
xor
pop
xchg
mov
sub
pusha
inc
mov
fld
scas
jb
pop
gs
fs
sub
dec
cmp
jb
mov
or
hlt
sbb
or
loop
popa
imul
in
lcall
xchg
fldt
inc
sbbl
aaa
mov
sub
imul
and
test
dec
leave
insl
repz
fbld
insl
out
out
dec
mov
mov
adc
and
sub
mov
xchg
out
xor
xchg
cmpsb
ds
pusha
adc
cmp
jb
out
in
test
aad
pop
or
pop
dec
push
mov
sbb
pop
or
fidivrs
jle
cld
jae
mov
scas
pop
bound
ds
ficoml
lock
pop
pop
mov
mov
inc
xor
jno
xlat
cmpsl
pop
push
push
add
push
mov
out
mov
mov
mov
bound
cli
clc
fcmovnu
jl
pushl
pop
popf
movsl
test
xchg
in
xor
insb
sub
mov
push
movups
not
fcoml
or
mov
cli
imul
clc
xor
pop
cmp
shll
repz
in
xchg
nop
mov
popa
jnp
aad
inc
mov
xor
aas
pop
xchg
mov
mov
and
fsubrl
shrl
pop
sbb
or
imul
in
sub
dec
mov
jnp
addr16
inc
push
popa
jmp
sub
cmc
aam
ja
jns
sarb
xchg
mov
cmc
inc
ficomps
stos
push
pop
rcll
es
xchg
lret
cmp
mov
cs
sub
flds
add
aam
cmp
sbbl
cld
inc
mov
adc
in
xchg
push
sti
imul
shll
push
inc
arpl
int3
enter
int
adc
mov
scas
jnp
cs
jmp
js
std
adc
sub
jnp
stos
or
jle
imul
jmp
mov
ja
adc
jns
inc
push
call
jne
jecxz
hlt
dec
icebp
fbld
inc
jno
in
add
outsl
testb
dec
inc
mov
pop
fwait
pop
push
fdivl
out
xchg
xchg
cwtl
add
cbtw
inc
stos
out
mov
adc
dec
inc
or
sbb
adc
mov
fsub
jecxz
stc
xchg
adc
out
aad
lahf
mov
lds
xor
pop
cmpsb
sbb
iret
push
out
gs
add
sub
and
scas
xor
sbb
andl
call
ljmp
insb
inc
or
cmp
jmp
ds
iret
adc
scas
imul
cli
and
jge
nop
jne
xor
mov
or
inc
push
pop
int3
lods
mov
lahf
addl
pusha
xchg
sbb
mov
js,pn
push
mov
stc
jge
gs
mov
jns
inc
or
stos
inc
addr16
mov
dec
push
outsl
aad
xlat
pop
or
inc
dec
shr
in
add
sti
in
jge
in
sbb
testb
or
ljmp
mov
cmpsb
outsl
dec
andb
push
cmp
cmp
subb
sbbb
jmp
testl
mov
and
xchg
dec
sbbb
jg
das
incb
das
xor
and
popa
hlt
mov
fwait
popf
out
sub
fistl
adc
js
adc
add
xchg
mov
adcl
icebp
mov
sub
push
sbb
loop
cltd
pop
fisttps
inc
imul
popf
cs
and
or
mov
test
dec
push
lcall
testl
sbbl
cltd
ret
dec
xchg
lods
aas
repz
push
jb
pop
ja
int
arpl
enter
cmc
mov
mov
push
jmp
setb
and
mov
push
lret
mov
in
andb
jge
pop
pop
xor
add
sbb
in
fnstcw
orb
inc
add
js
jb
jne
repnz
ljmp
push
push
mov
scas
in
rol
sub
imul
and
fucomi
loope
pop
iret
fisubrs
push
adc
dec
xlat
in
mov
jge
jns
bound
cmpsl
stc
mov
inc
rorb
iret
call
loope
outsl
out
lahf
inc
daa
repnz
xchg
fistpll
les
xchg
scas
sbb
pop
mov
inc
call
out
iret
add
popa
in
inc
mov
sub
and
dec
mov
imul
or
jno
inc
xchg
mov
mov
cmovle
divl
adc
sbb
push
adc
xor
out
adc
ret
jae
or
mov
aas
adc
pop
mov
adcl
pop
xchg
icebp
bound
mov
imulb
stos
push
orb
fsubl
push
push
stos
dec
andl
xor
shl
test
and
fwait
imul
shl
sbb
data16
cmp
jno
out
addl
movb
inc
lahf
jbe
mov
test
clc
pop
cmp
cltd
mov
outsl
sub
data16
daa
int
cmovp
push
push
rorb
or
adc
or
ljmp
mov
outsb
cmp
cmp
jno
ret
xor
fimuls
lcall
xor
cmp
or
mov
stos
and
fs
je
mov
lahf
out
mov
pop
adc
daa
mov
cmpl
xchg
push
adc
sub
outsl
xor
add
sub
jb
ret
daa
scas
push
jmp
bound
jge
sbb
leave
dec
bound
jns
dec
fprem
jl
insb
test
insl
addr16
xlat
inc
sbb
cmp
sub
push
cmpsb
movsl
sarl
mov
out
mov
dec
or
lret
mov
arpl
mov
jp
movsl
divl
sbb
adc
xchg
pop
sbb
loopne
out
or
scas
mov
cmp
out
mov
and
out
mov
mov
mov
adc
jno
sarb
adc
enter
fldt
and
rclb
mov
or
int3
add
int
jg
add
test
cmp
jp
inc
jecxz
add
adc
add
pop
pop
repz
cmp
add
pop
lds
mov
fwait
mov
fnstsw
pop
cmpsb
imul
pop
scas
inc
in
sub
lea
sub
sbb
xchg
mov
and
adc
push
sbb
ja
add
jns
movsb
shlb
fbld
pop
mov
sub
pop
shrl
test
aad
cmp
cmp
imul
pop
scas
and
pop
iret
push
xchg
aas
push
push
sbb
sub
dec
fsubl
xchg
lods
inc
push
mov
mov
out
lods
ss
jp
out
add
ret
pop
jno
pop
inc
sbb
adc
add
pop
rcrb
or
or
stos
mov
fcmovnbe
pusha
les
mov
mov
sahf
mov
cld
inc
lods
mov
popa
mov
dec
ds
and
lret
push
push
test
or
sbb
pop
shrb
mov
xchg
pusha
fnstcw
std
orb
leave
dec
sarb
stos
push
push
jns
mov
add
dec
adc
inc
jl
inc
stos
addl
push
add
add
xlat
pop
cmpsl
push
cld
pop
jp
mov
push
outsb
pop
int3
ret
adc
adc
cwtl
mov
adc
dec
mov
push
sub
data16
cmp
iret
and
dec
fwait
fwait
ljmp
cwtl
nop
cmc
add
push
jno
mov
cwtl
add
roll
lods
out
subb
fisubrs
pop
popa
loopne
fsts
push
imul
enter
add
test
xchg
repnz
sub
stos
dec
sbb
sar
mov
sti
fisttps
sbb
neg
mov
out
fcoms
clc
insl
xor
jns
mov
cmp
stc
dec
jb
mov
mov
jle
inc
mov
xchg
xchg
adc
lret
cmpsb
mov
mov
push
rorb
pop
ss
rclb
sub
cmp
fdiv
insb
sbb
loope
cmp
jmp
dec
mov
mov
mov
sbb
jae
and
loope
pop
hlt
sbb
js
cmp
test
lret
xor
ficoms
xchg
xchg
popf
cmpsb
mov
adc
cs
cmpsb
fimull
jae
pop
pop
aas
push
cld
test
outsb
sub
ja
mov
leave
pop
movsl
xor
js
imul
jns
mov
ljmp
sbb
pop
lret
nop
adc
test
inc
push
xor
out
lock
xchg
or
xchg
js
call
popa
insb
loopne
jbe
push
jmp
andl
pop
aam
xchg
sbb
adc
cli
jbe
xor
pop
call
inc
cmpsl
stos
sub
aam
inc
bound
adc
popf
addr16
in
mov
push
jecxz
push
jae
pop
mov
aam
shl
in
shll
pop
shl
mov
mov
ss
js
cmp
sub
lock
out
lcall
js
inc
int
mov
jge
push
loopne
out
jns
lods
mov
inc
jle
cld
popf
inc
rorb
add
repz
push
imul
mov
sbb
mov
mov
fwait
dec
enter
cltd
notl
movsl
int
mov
add
pop
cmc
out
mov
mov
lret
movl
inc
sbb
cwtl
decb
movsb
mov
sub
in
or
mov
pop
popa
in
loopne
rcl
cmpsl
sub
cmp
arpl
adc
orl
out
lods
cmp
dec
pusha
dec
cmp
adc
mov
inc
aaa
mov
scas
mov
pop
xchg
into
out
add
rcl
jmp
jnp
repnz
pop
pushf
mov
sahf
lret
push
add
cwtl
add
push
lds
push
fdecstp
add
ja
pusha
fdivrl
xor
aad
repz
pop
push
aad
in
and
inc
mov
and
loopne
addr16
das
sub
push
pop
jne
mov
lcall
clc
fs
mov
inc
inc
sub
icebp
fwait
jl
jge
xor
sub
push
sbb
and
mov
lock
jnp
lds
xor
inc
inc
inc
lcall
rcr
jb
lret
andl
pop
mov
jbe
jno
aaa
stos
lea
stos
mov
ss
inc
sbb
add
jmp
mov
les
adc
cmp
jl
dec
insb
xor
std
xchg
gs
sub
jp
pop
push
pop
and
shr
jmp
out
stos
fdivrl
xor
mov
xchg
stos
or
inc
mov
cmc
mov
js
cwtl
into
rorb
sub
pop
sbb
es
push
jo
push
or
sub
xchg
jle
sub
negl
pop
addr16
mov
fwait
mov
jbe
mov
rcrb
mov
add
int3
inc
sbbb
and
lods
repnz
cli
sti
xchg
add
cmp
dec
adc
fwait
pop
jnp
mov
inc
js
inc
into
mov
iret
aam
pop
add
mov
lret
pop
xlat
lods
cmp
lret
fldlg2
inc
cmc
rol
dec
je
jnp
cmp
inc
mov
test
repnz
out
mov
mov
dec
inc
mov
or
jle
adc
adc
adc
push
add
mov
ljmp
cmp
mov
syscall
sbb
iret
call
push
sub
nop
xlat
fstpt
or
adc
ds
mul
dec
loopne
test
sbb
mov
dec
xchg
mov
stos
cltd
jle
jbe
adc
fildl
xchg
xchg
xor
and
call
lret
iret
mov
aas
or
pop
das
xchg
mov
xor
cmpsl
and
jnp
test
pop
jmp
push
or
aaa
add
pop
or
outsb
lcall
dec
sti
add
leave
clc
xor
fwait
xchg
hlt
ja
out
push
shrb
js
fildll
cmp
or
call
clc
int3
bound
ja
loope
ret
xchg
mov
xor
pusha
stos
mov
and
rcrb
push
call
adc
and
add
je
mov
mov
in
mov
stos
ror
dec
stos
add
data16
xor
shlb
stos
cld
or
lret
rolb
sbb
pop
cmp
sbb
push
push
inc
xor
repz
cmpsb
mov
ja
nop
aas
les
fs
dec
pop
stos
ss
test
cmp
inc
add
jbe
inc
push
xor
cld
push
dec
test
outsl
inc
loop
jecxz
icebp
add
and
mov
cwtl
sbb
inc
jl
int3
iret
iret
mov
in
xchg
mov
inc
loop
in
mov
inc
inc
in
pop
enter
shrb
add
fsubp
cs
sti
mov
adc
sti
mov
cmp
nop
dec
lea
cmpsb
adcb
inc
pop
add
mov
dec
push
pop
cmp
scas
test
mov
pop
xchg
sbb
in
mov
test
in
pop
add
xchg
rcr
push
pop
ret
and
daa
xor
mov
outsb
sti
insb
mov
push
sub
aas
fsubrs
dec
jl
xchg
mov
mov
data16
leave
mull
arpl
imul
cs
cmpsb
push
cmpsl
add
insb
xchg
cmc
pop
shrl
jb
or
pop
mov
std
sbb
push
adc
testl
cmc
cmp
lods
fisubrs
inc
clc
sub
or
xchg
stc
dec
mov
xor
fidivl
stos
mov
test
mov
push
fdivp
pushf
inc
xor
fdivr
pushf
loop
sbb
mov
stos
in
sub
mov
lcall
xchg
xchg
lods
pop
or
xor
pop
add
frstor
xchg
aam
xchg
orl
je
sub
jns
inc
pop
adc
data16
int
in
mov
sub
inc
cli
mov
or
or
into
mov
aam
push
cmp
jecxz
lcall
popa
jnp
dec
mov
cmp
xchg
fsubr
jbe
inc
cmpsb
xorl
pop
xor
mov
test
or
loop
jg
jle
test
dec
pop
dec
push
or
repz
adc
outsb
sbbl
pop
inc
loope,pn
jbe
ret
mov
cmp
in
xchg
jp
xchg
cmc
sti
pop
ja
push
int3
mov
sbb
add
outsl
or
scas
push
jl
dec
pushf
popf
or
ret
push
jmp
jecxz
hlt
mov
and
pop
mov
lcall
imulb
fs
enter
or
adc
pusha
fsubrl
and
or
add
lock
add
movsb
pushf
xor
movsl
cmp
aam
push
loopne
jns
scas
shrl
mov
in
sti
jnp
jae
inc
ljmp
ret
ret
les
push
mov
subb
insb
xor
push
pop
insl
jo
cmp
xchg
orl
fs
cmp
dec
adc
jns
xchg
mov
add
gs
cmp
in
push
call
adc
cmpsl
fadds
cltd
ljmp
out
nop
mov
pop
sbb
imul
mov
ds
repz
or
sbb
mov
adc
or
ret
sub
mov
insl
outsl
imul
addl
push
and
pop
sbb
iret
jmp
fwait
cmp
iret
in
cmpsl
lds
les
insl
aam
cltd
or
add
push
and
xor
jg
sub
ret
insb
in
rorl
mov
test
mov
inc
popa
sub
es
push
roll
sti
mov
push
fsubs
clc
imul
jnp
lods
dec
mov
adc
shll
nop
lret
ja
fwait
out
subl
bnd
dec
sbb
out
mov
ds
or
xor
mov
and
cmpsb
mov
xchg
and
outsl
lds
xorl
jl
add
pop
leave
dec
mov
ja
call
mov
dec
cs
stos
inc
aam
xchg
shll
jmp
out
jp
test
dec
insl
push
adc
sub
call
outsb
jle
push
int
inc
stos
add
inc
pop
mov
in
fadd
cmp
loope
and
and
push
in
xchg
pushf
or
popf
mov
ficompl
push
sub
aam
add
pop
and
popa
mov
testb
js
sahf
fcompl
jns
xchg
es
ret
mov
call
xchg
leave
mov
loopne
dec
dec
imul
push
push
xlat
mov
inc
inc
jae
or
int3
sti
add
mov
je
icebp
outsl
jnp
pop
and
aad
cltd
pushf
push
inc
xor
or
pop
sti
push
sahf
mov
inc
fdivrs
pop
addb
jecxz
inc
push
push
xchg
mov
loope
cmpsb
mov
mov
imul
inc
pusha
mov
push
adc
adcl
lcall
inc
aad
ret
jb
jb
and
xlat
stc
lods
add
sub
repz
or
dec
jl
shlb
inc
ficoms
mov
pushf
imul
inc
faddl
call
add
call
mov
addr16
inc
sarb
cld
out
inc
jge
pop
cmpsb
scas
hlt
mov
mov
xchg
pop
xchg
mov
mov
xor
dec
imul
stc
ret
sbb
imul
and
stos
or
and
je
mov
rcrl
cwtl
vcvtsi2ssl
insb
rclb
jns
scas
repnz
sbb
jns
push
add
lcall
cmp
fimuls
js
dec
cmp
int
cltd
xchg
mov
mov
jae
aas
orl
lds
in
stos
mov
pop
sbb
adc
out
neg
mov
in
cmp
repnz
cmp
sub
mov
and
inc
shll
jmp
dec
inc
pop
out
imul
imul
mov
lahf
enter
inc
cmp
mov
je
test
jno
js
in
jmp
jae
jae
xchg
push
mov
pop
int3
mov
pop
push
dec
ljmp
mov
sub
sbb
aas
rolb
enter
mov
mov
addr16
aam
mov
ret
dec
ds
lret
orl
pusha
xchg
mov
inc
mov
and
inc
xor
sbb
mov
and
push
push
call
repz
push
test
cmp
xor
fistl
push
out
inc
cmp
dec
mov
movsl
jo
mov
outsl
push
fwait
and
pop
and
inc
pusha
sub
ret
scas
ss
mov
mov
test
dec
shr
mov
and
adc
pop
outsb
xor
fyl2xp1
or
jns
inc
cld
jp
jle
xor
jno
and
fiaddl
mov
push
pop
call
push
mov
lods
xchg
inc
repz
ds
push
lret
daa
pusha
or
sub
fmull
stos
lret
fwait
xchg
repz
mov
dec
addb
sbb
pop
imul
sbb
lret
fidivrl
out
into
ds
in
push
xor
test
add
outsl
jno
jb
xchg
lea
int3
jns
int3
xchg
loop
shll
mov
fists
dec
icebp
push
fimuls
and
jle
lods
mov
pop
sbb
cmp
sub
pop
dec
or
push
out
lods
push
mul
sbb
rorl
push
push
push
ret
push
cmp
xlat
dec
adc
js
mov
fs
pop
push
loopne
fmull
test
mov
test
pop
scas
mov
scas
xchg
outsb
outsb
push
xlat
mov
movsb
cmp
pushf
negb
dec
out
out
xorl
scas
push
dec
add
scas
daa
lahf
jmp
lea
mov
jmp
xchg
jmp
mov
inc
lahf
sbb
mov
shll
fcomp
fmulp
sarl
xlat
dec
addb
leave
add
icebp
divl
jl
sub
pop
repnz
and
xor
pushf
jo
pop
pop
cmp
mov
ja
popl
push
mov
mov
add
xlat
out
mov
adc
jns
call
dec
mov
ficoms
xor
into
and
add
subl
mov
les
int3
mov
bswap
push
jle
sbb
add
inc
xor
js
xchg
inc
xor
das
insb
into
jecxz
pusha
cmp
pop
lcall
xchg
xchg
dec
cwtl
cmpsb
push
add
repz
push
pop
ss
fwait
or
push
fldenv
jnp
outsl
leave
pop
jle
ds
lahf
movsl
xchg
pushf
je
pushl
call
mov
sti
dec
xchg
sbb
cmpb
mov
je
pop
push
lds
sub
cld
in
push
ss
push
cmp
sbb
pop
push
pop
repnz
adc
mov
popf
mov
ja
mov
les
int3
mov
shrl
add
mov
dec
movsb
xor
mov
test
lahf
fisubrs
push
sbb
addr16
sbb
push
dec
nop
pushf
mov
test
jge
movsl
std
repz
xor
mov
in
xor
jp
out
dec
ss
adc
and
push
repnz
push
adc
inc
std
cltd
in
fisubrs
nop
cmp
push
int
push
sub
jecxz
and
stos
lret
xor
cmp
mov
inc
loop
inc
pop
je
shll
cwtl
mov
aas
jg
cmp
jmp
rclb
sar
in
mov
out
adc
xor
cmp
ror
sarl
cmpsl
xor
xor
inc
orl
hlt
loop
andb
pop
cmp
fimuls
lock
testb
jge
jmp
rorl
cmc
popa
and
mov
ret
inc
les
ja
pop
cmp
cmc
or
enter
xchg
xchg
xchg
mov
mov
je
or
sbb
les
and
sub
add
int3
sub
push
aas
mov
inc
nop
mov
lahf
inc
shll
repnz
imull
pop
pop
shlb
scas
je
sbb
and
dec
xor
sbb
jae
sub
ja
inc
sbb
test
cmpsb
xorl
add
dec
jae
adc
fsts
add
sub
in
sbb
lods
push
mov
sub
arpl
cmp
jmp
mov
xrelease
cltd
call
aam
mov
mov
and
into
sbb
fs
jg
mov
xor
leave
pushf
and
sub
mov
ss
fimuls
sahf
adc
jne
sub
fdivrl
mov
notb
push
mov
xor
sub
sub
pop
imul
adc
testl
add
dec
andl
sub
in
xchg
lds
inc
and
into
pop
orb
or
and
push
outsl
or
es
sbb
movsb
mov
push
and
xchg
sub
shll
dec
data16
frstor
xchg
pop
push
pop
outsl
mov
add
adc
add
push
out
outsl
xor
inc
cmpsb
loope
das
mov
clc
lods
mov
outsb
imul
popa
add
inc
pop
insl
test
mov
cmp
mov
aaa
mov
dec
int
insl
and
daa
in
out
addr16
les
or
mov
insl
sub
inc
cmp
mov
bound
sahf
pop
xchg
aam
xor
repnz
out
lcall
xchg
dec
sahf
xor
out
jge
lahf
fadds
scas
mov
sbb
movsb
inc
fnstcw
xor
mov
pop
xchg
stc
push
loopne
jp
jne
mov
in
jp
mov
lahf
dec
mov
nop
cmpsb
jecxz
lret
push
lea
xchg
xchg
add
jns
push
xor
add
sahf
jg
out
dec
cmp
lea
call
divl
jg
lret
xchg
rep
scas
add
lods
pop
jb
cmpsl
jnp
outsb
push
push
inc
stc
mov
sahf
leave
call
enter
xchg
into
dec
aas
jecxz
movsl
or
cwtl
jnp
repnz
stos
pushf
lods
fs
movsl
ss
adc
jne
fisubl
repz
shr
daa
add
jo
mov
cld
cmc
xor
aam
sbb
or
aam
stc
in
repnz
mov
jecxz
xchg
push
xor
add
in
mov
pop
cmp
cmc
mov
mov
insb
je
fwait
cmp
xor
cltd
mov
enter
xor
orl
mov
xchg
sbb
push
inc
inc
add
jns
jp
shll
push
adc
cmp
iret
cmp
jno
dec
dec
clc
inc
shll
lret
sahf
roll
xlat
jbe
cmp
mov
mov
testb
cmp
lret
std
and
mov
sub
cmc
xchg
xchg
mov
je
jno
cmpsb
cmpb
stos
ja
mov
cmpsl
mov
in
repz
mov
fwait
adc
icebp
sahf
mov
and
adc
or
ljmp
stos
lock
mov
pop
imull
daa
mov
or
test
push
arpl
in
add
or
arpl
inc
inc
mov
enter
xchg
add
ret
push
imul
add
aaa
sti
mov
lock
hlt
fistpl
in
mov
mov
mov
mov
test
jo
loop
jle
inc
push
cmp
enter
or
push
mov
and
es
aam
fldt
sbb
and
fists
fistps
cmp
sbb
jbe
int3
sub
push
pop
movsb
ja
add
adc
jmp
mov
cmp
inc
sbb
mov
mov
ds
test
sbb
idivb
loope
loop
mov
sbb
in
jb
mov
test
push
loop
addr16
pop
iret
xchg
add
cmpsb
jmp
outsb
push
test
fwait
andl
sub
arpl
or
push
pop
ds
mov
mov
int
inc
cmp
xchg
lock
pop
subl
or
xor
pop
mov
xchg
out
and
jb
mov
xor
hlt
push
daa
or
ret
fldl
jbe
lods
add
mov
lcall
xlat
or
das
mov
add
shlb
jmp
mov
pop
rol
inc
pushf
pusha
jns
xor
data16
add
push
iret
sbb
xor
cmc
add
in
sub
xor
jnp
rorb
mov
clc
mov
push
xor
push
dec
mov
jnp
xor
pop
aaa
push
shll
aad
mov
aas
mov
lret
and
bound
popf
jae
dec
inc
leave
sbb
push
test
sub
jno
sub
mov
xor
test
jbe
scas
ss
bound
insb
lret
xchg
dec
aas
orl
push
sbb
pop
adc
push
or
xchg
sbb
clc
mov
mov
sub
sbb
jae
imul
xchg
fistpll
jno
dec
std
jne
aaa
mov
mov
pop
icebp
or
fs
cli
inc
fwait
nop
sbb
test
pusha
filds
ret
pop
dec
jp
lcall
pop
push
inc
adc
xor
roll
sub
xchg
cmp
stc
mov
or
adc
mov
outsb
lea
repz
rclb
mov
cwtl
and
mov
aaa
push
inc
imulb
adc
orb
and
add
bswap
inc
fisttpll
xchg
mov
stos
cli
jle
cmp
fsubr
scas
add
es
lcall
into
fsubrl
inc
sub
cmp
dec
add
dec
xor
ljmp
nop
ret
pop
loope
lock
cmpb
test
sub
out
jmp
xchg
imul
lods
mov
add
xchg
cmp
push
cmpsl
fnstcw
sbb
iret
scas
test
push
lahf
mov
mov
insb
mov
xor
inc
push
mov
jge,pn
jne
mov
nop
xchg
mov
lahf
shrl
push
push
popl
in
mov
cmp
lock
xlat
jmp
das
mov
lcallw
push
daa
and
in
mov
xchg
cmc
cmp
imul
dec
mov
sahf
aaa
ret
vmovapd
cmc
mov
rcll
sbb
mov
cmp
lds
js
xchg
in
rcll
inc
lret
out
rcl
shlb
cmpsl
sbb
inc
push
repnz
mov
call
andl
std
inc
insb
insl
cmc
dec
adc
outsb
cmp
cmc
dec
std
outsb
pushf
cmp
pop
lret
xchg
dec
jae
mov
sbb
add
imul
xor
xchg
fiadds
stos
rcll
push
nop
test
pop
bound
test
add
enter
aad
mov
lret
cmp
lock
or
hlt
add
mov
mov
aaa
cmpb
sbb
fs
in
lds
repnz
push
mov
mov
mov
aaa
and
insl
jle
sub
scas
repz
mov
out
fdiv
sbb
dec
aas
jle
push
push
and
mov
pop
or
repz
xor
xor
mov
daa
jle
fwait
sbb
sub
shlb
pop
push
aaa
iret
js
lock
xchg
mov
test
mov
jne
ffree
scas
and
mov
pop
sbb
mov
and
outsb
outsl
outsb
pop
decl
push
mov
pop
pop
push
test
xchg
mov
and
and
xchg
pop
shrl
cmp
inc
jle
push
adc
jae
pop
and
sahf
dec
dec
jmp
push
xor
mov
out
xchg
push
pushf
in
sarl
rclb
push
lret
int
je
adc
xchg
ret
stc
mov
into
add
adc
das
push
xor
into
xchg
ja,pt
repz
adc
mov
pop
frstor
clc
xor
les
sub
aas
sub
xchg
aaa
jg
push
adc
xor
inc
inc
cmpb
imul
aaa
stos
daa
pop
pop
and
dec
aam
repz
cmpsb
and
push
inc
andl
jge
jmp
and
leave
jb
fsubrs
jae
and
das
pop
mov
fdiv
push
inc
repnz
and
aam
dec
outsl
movsl
cld
sarb
sbb
mov
lcall
shlb
hlt
das
mov
push
push
in
xor
mov
adc
pop
lret
push
and
aas
repz
ret
pop
mov
mov
inc
xchg
mov
test
adc
and
add
xchg
xor
or
shrl
pushf
dec
dec
loop
push
out
mov
mov
or
xor
cmp
shlb
mov
pop
in
adc
push
mov
ss
negl
icebp
outsl
aaa
mov
cmpsl
movsl
dec
mov
fisttps
cmpsb
in
mov
movsb
nop
out
dec
dec
dec
push
and
inc
xor
test
mov
ret
sub
mov
jne
sti
cmp
push
or
add
sub
sti
inc
jp
mov
out
cld
pop
je
insl
dec
movsb
test
cwtl
hlt
mov
fidivrl
cmp
dec
jbe
lock
in
pusha
loope
mov
push
jg
stos
push
or
push
aam
push
adc
in
sub
push
fstpt
dec
js
pop
enter
sbb
xchg
fmul
add
jbe,pt
aad
sub
stc
xor
and
mov
mov
stos
jmp
sbbb
into
dec
sti
imul
testl
lods
pop
scas
pop
hlt
push
in
cs
setae
lock
rolb
jl
shl
adc
insb
mov
add
xchg
jl
aad
xor
cmp
add
pop
std
arpl
sub
fisubrl
push
push
xor
lods
testl
or
rorb
dec
test
mov
lcall
loope
mov
in
xchg
cmp
pop
pushaw
iret
int3
nop
loop
pop
movsl
outsl
or
cli
arpl
jge
out
addb
in
xor
hlt
cmc
stos
hlt
push
test
push
push
fisttpll
icebp
mov
push
cmp
add
xor
js
out
lahf
out
pop
test
adc
sahf
rcl
mov
add
dec
aad
push
mov
sbb
or
enter
jnp
ljmp
add
in
ret
jno
fistpl
fadd
ret
jmp
int3
inc
mov
xor
xor
cmc
in
aaa
adc
xor
xchg
call
or
xchg
fdivrl
jmp
and
call
das
aam
dec
push
jb
cmp
mov
inc
add
sbb
add
test
jne
jge
jb
or
pop
test
call
addr16
lods
cmpb
xlat
in
cwtl
or
into
inc
fisttpl
push
repnz
and
jle
add
sub
shl
jbe
test
and
adc
gs
inc
dec
aas
sbb
and
lods
scas
or
insb
out
sbb
fstpt
add
sub
scas
mov
imul
mov
mov
pushf
ja
dec
sbb
pushf
and
shl
jnp
add
cmp
fwait
cs
jecxz
jnp
std
mov
arpl
out
lahf
mov
test
sar
lret
loopne
pop
dec
imul
je
xchg
sub
mov
clc
fistl
dec
mov
push
xchg
and
int
jle
int3
add
xchg
jge
imul
and
sub
xchg
xchg
jl
imul
je
repz
pop
loopne
in
roll
jle
mov
popa
fistl
shll
adc
push
int3
pop
add
sahf
push
lea
fs
sahf
popa
mov
hlt
out
cmp
call
in
sub
sbb
cmp
and
mov
jns
push
jmp
or
mov
pop
fbstp
test
addr16
mov
mov
mov
cmp
jecxz
popa
push
lds
das
bound
cmpb
or
xchg
lret
les
push
mov
push
and
xchg
or
jbe
sbb
movsb
das
jmp
inc
sub
jmp
mov
cs
mov
pop
cmp
insl
adc
push
mov
inc
mov
loopne
cs
add
and
cmp
sub
out
loope
cmc
mov
pop
jl
es
add
insb
jnp
mov
or
lds
pop
cmp
xchg
in
inc
inc
movsl
in
jg
out
stc
and
xor
jne
movb
pop
dec
adc
jb
adc
imul
lret
fwait
inc
test
stos
mov
mov
cmp
inc
push
jge
fbld
dec
aaa
sub
je
clc
loop
pop
dec
mov
rcr
mov
in
es
test
ret
addr16
dec
add
popf
bound
xor
mov
jno
xchg
and
enter
xor
cmp
cwtl
test
loope
xchg
imul
xchg
scas
add
inc
jp
stos
adcl
andb
push
push
jbe
jbe
idivl
jne
jne
shr
in
and
or
xchg
inc
dec
sub
stc
in
jp
push
popf
ds
push
in
and
mov
lahf
or
xor
mov
lahf
lret
cmp
rcl
call
fs
movsb
cli
lods
aad
divl
jecxz
xlat
cmc
es
xchg
mov
and
jp
cmpsl
out
stos
sbb
pushf
mov
jns
jbe
sbb
roll
mov
or
or
lret
lcall
push
jno
int3
iret
ret
pop
repnz
scas
mov
inc
pop
lds
xchg
cwtl
test
xor
outsl
data16
cmpsl
mov
popf
xor
cld
inc
inc
pop
mov
jge
xor
pop
add
xor
lret
mov
aaa
adc
cmp
shrb
cs
outsb
mov
cmpsl
cmpsb
movsl
scas
pop
mov
mov
stc
xorl
fisubl
jae
movsb
push
inc
and
mov
add
push
mov
je
xor
xchg
add
pop
jns
rorb
inc
or
in
mov
rolb
cmp
lods
pop
aad
dec
out
mov
jp
loope
mov
into
shll
mov
cmp
ficompl
fcomps
js
push
repz
mov
sub
pop
xchg
test
xchg
sub
mov
jo
popa
arpl
sub
jecxz
mov
ret
shrl
sarb
fisubrl
push
sarb
call
jo
cmc
data16
lret
sbb
sub
mov
dec
inc
lds
push
fisttps
or
jne
in
fistps
cld
or
or
mov
or
push
mov
aaa
lock
or
std
add
fstps
jg
or
add
add
adc
sbb
mov
lea
out
mov
pop
jmp
mov
loope
cmc
out
stos
sub
mov
pop
cmpsb
repnz
xor
jno
add
cmp
stos
mov
test
push
hlt
mov
push
movl
sub
cwtl
adc
push
into
repz
push
cmpsl
dec
pop
push
push
rolb
dec
sbb
out
dec
shll
scas
lds
fimull
cmp
xchg
outsb
or
in
sarb
push
aam
out
clc
cld
xlat
jg
rcr
sahf
inc
xor
aas
sbb
out
lret
loope
jg
xchg
enter
adc
push
xchg
mov
enter
arpl
les
shlb
mov
mov
xor
sbb
mov
jno
push
test
mov
mov
repnz
adc
rorb
stc
xor
lahf
lea
mov
push
jno
sbb
jnp
pop
push
sub
dec
mov
bound
sub
jnp
xchg
mov
mull
sub
sarl
mov
mov
jmp
test
jo,pn
xchg
dec
jo
inc
push
dec
pop
xor
fildll
fs
mov
cmp
in
lods
or
dec
inc
inc
fidivrs
rorb
inc
lods
sub
dec
cmpsb
mov
and
push
mov
shr
cmp
xor
sbbb
out
lret
sub
dec
push
jecxz
cmpsl
adc
cli
mov
ret
or
mov
mov
and
repnz
xchg
fwait
mov
mov
inc
sbb
fnsave
lods
das
cmp
mov
pop
mov
jno
into
sbb
sbb
cmpsb
lods
jne
nop
les
js
lock
stos
pusha
pop
mov
pop
sbb
push
lods
xor
mov
div
shr
xor
xchg
jg
inc
jp
pusha
pusha
mov
mov
push
mov
dec
push
xor
mov
xor
sub
xor
daa
xchg
aad
mov
jl
hlt
cs
pop
out
lcall
popa
xchg
test
cli
fildl
mov
or
sbb
and
jae
jge
mov
pushl
ret
lret
jno
in
push
add
inc
sub
pop
lret
jp
insb
into
dec
dec
push
jae
sub
fidivs
andb
xchg
cmp
fwait
pop
xchg
das
cmp
sub
movsb
cmp
cmp
inc
push
add
repnz
inc
insl
pushf
jmp
add
imul
mov
lea
js
dec
lahf
mov
int
bnd
out
addr16
lods
stos
out
or
sbb
mov
xchg
inc
cmp
xor
rolb
les
icebp
pop
cmpsl
xor
scas
pop
nop
push
inc
xor
add
testl
call
and
loope
iret
insb
cli
popf
std
mov
pop
sbb
pop
clc
arpl
xor
push
pop
filds
dec
data16
mov
or
insb
test
ljmp
or
daa
test
inc
cmp
jp
xchg
jnp
fcmovb
mov
sbb
push
flds
jg
pop
xorl
lea
sub
xlat
incb
and
or
ficoml
clc
pop
ret
movsb
adcl
nop
dec
test
mov
sbb
inc
repz
mov
scas
jmp
inc
fimuls
cltd
loop
in
into
mov
adc
sub
out
lret
nop
mov
xor
leave
sarb
sbb
ljmp
lea
cmc
jle
adc
push
xlat
jo
repnz
rorb
xor
lcall
jp
and
cld
mov
lock
sbb
in
dec
sbb
xorb
mov
jle
xchg
xchg
sarl
add
mov
mov
jns
nop
popf
mov
cmp
xor
xchg
or
sub
idivl
mov
cmp
jg
jge,pn
icebp
fldcw
sub
rorl
fwait
push
out
repz
out
cmpsb
std
xor
xchg
lcall
test
es
clc
out
jle
je
or
cmpl
jmp
pop
lret
out
loopne
inc
xchg
sub
sbb
xor
mov
push
mov
sbbl
pop
adc
pop
fucom
aaa
push
cmp
inc
fnsave
dec
pop
popf
pushl
cs
jg
add
and
into
cmp
std
repz
jle
ret
xor
int
inc
pushl
cmp
push
mov
inc
or
cmp
mov
or
lahf
add
xchg
mov
mov
push
fisttps
fistps
scas
mov
lcall
mov
mov
insb
neg
dec
iret
addl
fstpt
out
push
outsb
dec
adc
pusha
nop
mov
pop
ret
gs
mov
aad
adc
arpl
in
insl
mov
pop
xor
push
cmp
sub
sub
nop
in
ss
inc
pop
jl
xor
pop
out
ret
fidivrs
sub
mov
pop
or
xchg
testb
lgs
fistl
pop
sbb
add
outsb
and
fildl
test
fs
imul
lahf
xor
jbe
cmp
vmovd
cmp
ljmp
xor
int
addr16
pop
outsb
pop
mov
sbbl
rcl
fmul
add
adc
and
jl
fwait
jge
jp
test
aam
hlt
pop
jne
xor
sbb
in
xchg
sahf
mov
fimuls
in
popa
add
jne
mov
or
add
out
movl
ja
in
pusha
leave
jbe
cli
jae
movsb
mov
xchg
dec
push
imul
arpl
out
in
mov
adc
pop
test
gs
ljmp
andl
movsb
aaa
adc
insb
pop
dec
shll
aad
pop
add
xchg
cmp
into
imul
test
jmp
adc
lea
or
sub
sahf
push
scas
pop
fbld
rolb
jnp
dec
xchg
inc
pop
dec
lock
rolb
clc
jge
or
shrb
xor
incl
bound
fsubl
icebp
sub
mov
dec
movsb
jecxz
aad
cmp
jnp
xcrypt-ofb
cmpsl
scas
popa
ja
and
js
ret
mov
enter
cmp
jns
or
or
mov
imul
sbb
fcomip
cld
inc
and
pop
mov
jo
inc
lcall
mov
mov
inc
das
cmp
pop
pop
pop
lods
and
imul
xchg
cmpsl
adc
aam
pop
sub
loope
outsb
mov
dec
push
sbb
dec
add
cmp
ja
lcall
sti
in
or
orb
push
inc
leave
cmc
adc
imul
mov
test
cmp
in
sbbb
xchg
pop
dec
or
shrl
mov
in
mov
or
push
js
cmpsl
lds
jle
aas
das
jmp
inc
mov
pop
mov
outsl
pushf
xchg
inc
add
jne
int3
shlb
cmp
adc
movsb
mov
adc
jns
or
mov
in
jecxz
gs
ds
adc
adc
jmp
dec
negb
rcll
scas
fdivrl
jnp
cli
lea
inc
stos
mov
dec
int3
cmp
mov
fiaddl
das
ja
daa
mov
mov
movsl
int
movsb
xchg
cmp
sbb
or
ret
xchg
call
icebp
sbb
mov
int
orb
aam
lods
arpl
add
incl
sub
dec
jmp
movsb
mov
mov
or
pop
sbb
and
movsb
push
inc
adc
aas
fmull
test
adc
ja
addb
or
aas
push
stc
jno
popa
push
mov
fildll
adc
push
repz
lds
jg
push
fidivrs
sbb
mov
cmp
jns
in
imul
decl
fmull
leave
ficomps
repz
aam
lret
ljmp
adc
jno
cmc
push
cmp
mov
push
dec
lret
push
into
sbb
pop
xor
push
push
xor
lods
insl
xlat
mov
and
adc
int3
js
sub
faddl
or
rcrb
xor
ret
pop
adcl
js
cmp
data16
arpl
or
xor
and
pusha
xor
xor
out
sub
jae
add
mov
mov
add
leave
cli
rcll
fbld
push
fwait
jne
sub
fbld
jmp
aas
jecxz
add
mov
outsb
or
inc
dec
mov
dec
fildl
mov
cmpsb
inc
mov
rcr
ret
jge
outsl
repnz
addl
outsb
mov
popf
lock
dec
hlt
clc
cmp
pop
mov
out
sbb
mov
fmuls
not
orb
jge
cmp
jl
popa
push
push
stc
jge
xchg
jl
pushf
popf
inc
fdivr
and
sbb
inc
jae
loopne
cwtl
nop
lock
imul
dec
dec
popf
arpl
popf
add
add
pop
cld
lahf
test
xor
push
push
inc
jo
mov
adc
icebp
scas
enter
popf
push
or
test
pop
dec
pop
lods
jecxz
lret
mov
ret
stos
pop
lods
sbb
jno
jp
xchg
rcrb
jo
xchg
mov
mov
inc
mov
pop
jnp
jp
int
popa
and
jae
xor
fsubrs
jno
repz
imulb
les
mov
cmp
push
in
pop
scas
inc
insb
jmp
leave
lahf
roll
fsubrl
pop
in
add
jge
dec
xchg
leave
push
add
addb
stos
ret
mov
into
inc
xorl
or
nop
enter
mov
jle
mov
push
imul
js
roll
xlat
inc
xor
std
jecxz
push
mov
adc
aam
ljmp
sub
and
test
mov
adcl
mov
stos
jns
push
lcall
mov
insl
lds
in
xchg
jg
repz
mov
pop
cmp
addb
scas
xchg
cltd
mov
ds
lea
pop
sbb
imul
add
fisttps
push
jp
out
imul
sub
mov
sub
divb
cmc
test
ret
push
scas
and
lahf
das
dec
scas
jae
push
lahf
test
sbb
mov
xlat
imul
repnz
dec
jmp
enter
shrl
cmc
out
aam
fnstsw
popf
mov
cmc
cmpsb
add
loop
dec
add
fadds
adc
jl
push
or
adc
or
jb
popa
jmp
popf
cli
sub
mov
jge
adc
jae
sub
incl
mov
add
icebp
rorb
loop
fs
pop
cmp
pop
and
ljmp
pushf
fdivr
scas
fst
push
iret
pop
adc
stos
fcomps
movsl
xchg
arpl
push
mov
jbe
into
adc
es
fisubrs
cmpsl
cwtl
popa
and
iret
mov
in
sub
mov
add
addr16
add
into
stos
mov
sub
jbe
mov
cmp
cmpsb
outsl
adc
adc
lock
xor
repnz
push
fwait
add
mov
add
out
push
cmpl
js
mov
inc
mov
insb
pop
dec
push
std
sub
scas
aad
ds
sub
out
das
jge
cmp
cmpsb
xor
cld
sti
jmp
push
cli
jmp
sub
stos
arpl
test
xchg
adc
mov
imul
imul
push
int
incb
jno
cmp
repz
push
jmp
xchg
xlat
mov
inc
mov
stos
push
popa
jmp
cmp
jl
push
xchg
test
mov
and
push
mov
cmpl
daa
inc
pop
notb
xchg
daa
repz
adc
push
test
push
gs
scas
jl
push
mov
mull
xchg
push
cmp
rolb
pop
repz
add
lret
mov
js
clc
outsb
out
je
xor
pop
in
cmp
in
lods
mov
insb
jno
dec
pop
shl
addr16
sti
jp
movsb
cmpsl
test
sti
push
lret
sub
xor
push
push
or
and
sub
or
cmp
les
xchg
jb
insb
cmp
inc
or
mov
imul
or
mov
insb
xchg
call
push
cltd
mov
inc
cld
xchg
mov
test
mov
in
pusha
addl
mov
movl
mov
cmp
out
sub
test
lds
pop
sbb
faddp
dec
and
mov
imul
lret
lods
fcoml
jle,pt
mov
loop
addr16
sbb
ja
dec
mov
outsb
jmp
arpl
mov
js
dec
nop
out
add
or
insb
push
mov
push
and
popa
lret
xor
ret
lahf
pop
movsl
ja
in
and
popa
scas
subb
test
sbb
push
js
cmpsl
inc
mov
adc
ja
shll
mov
outsl
mov
mov
inc
inc
jecxz
std
inc
cld
mov
push
mov
leave
cmp
pop
das
sbb
mov
lret
xor
adc
pop
sub
imul
cmp
aam
or
fisubl
movsb
outsb
data16
push
jo
inc
js
inc
imul
mov
outsl
stos
xor
shlb
and
adc
dec
pop
adc
sti
cmp
fstpl
in
dec
mov
or
xchg
mov
scas
or
push
sub
out
outsb
pop
mov
popa
jle
add
push
adc
mov
jbe
sub
bound
xchg
lahf
push
gs
mov
or
pop
and
and
test
mov
repnz
and
mov
rcll
ss
repz
arpl
movsb
and
ret
and
xchg
les
mov
xchg
popf
jae
test
mov
mov
xchg
cmp
cmpsb
jnp
sahf
loop
fs
cmc
dec
cmp
out
mov
pop
fnsave
inc
imul
and
adc
fwait
cld
cmpb
push
mov
mov
in
cmp
inc
call
call
dec
js
mov
and
out
sbb
rclb
ret
sarb
leave
add
mov
add
and
sub
sub
addr16
fdiv
andb
aam
jno
mov
fdivrl
or
call
sub
cmp
mov
test
insb
stos
add
daa
and
jo
inc
cmp
jne
jo
fisttpl
push
fimull
call
loop
xlat
lret
xchg
xchg
ret
adc
loope
leave
sti
in
push
out
jbe
xor
mov
dec
std
sbb
aas
andl
adc
stos
int
gs
jnp
js
and
mov
ds
push
cmpsb
dec
sbb
mov
cs
outsb
push
popf
cwtl
test
push
popa
adc
imul
sub
clc
add
cmp
jmp
mov
adc
pop
push
add
cmp
loop
push
mov
in
or
add
cmp
jno
cmp
in
inc
and
xor
orb
fwait
pop
test
lcall
push
rcr
test
or
testb
aad
cmp
rorl
or
xor
repnz
xchg
or
mov
out
adc
push
into
push
jno
adc
cli
pop
mov
dec
fdivrs
lahf
sbb
push
xchg
orb
ss
xor
sar
mov
dec
push
imul
cld
inc
mov
adc
push
fs
mov
pop
je
or
jb
ds
jp
push
cmp
jmp
inc
scas
iret
out
ljmp
mov
jl
and
push
mov
adc
test
sbb
mov
paddsw
cmp
inc
pop
adc
loope
test
cmp
pushf
stos
jns
pop
test
pop
cmpl
mov
iret
jae
cmovl
into
jne
mov
jg
stos
push
pop
stc
orb
lret
out
movsl
cmpsl
dec
xor
mov
into
cltd
das
cmp
das
cmc
inc
loope
or
pop
mov
in
imul
cmc
pop
cmp
xchg
aas
lods
inc
aas
je
or
ja
jbe
rcrb
push
in
jmp
ds
jbe
jl
mov
and
push
pop
jl
inc
imul
cs
and
test
cwtl
sti
or
xchg
add
jl
jbe
and
scas
add
sub
mov
cmpsb
add
sub
or
dec
popf
xchg
inc
lds
lock
dec
adc
fnstenv
xchg
xchg
sbb
mov
jg
or
or
jmp
out
xchg
out
mov
pop
repz
mov
jnp
mov
mov
rcr
rorl
sub
gs
stos
pop
xor
or
lods
sbb
sub
or
sbb
sub
ret
movsl
leave
insb
data16
xchg
and
iret
mov
filds
mov
jnp
mov
clc
mov
jle
idivb
pop
sub
out
sbb
mov
loop
sarb
pop
sarb
and
pop
inc
xor
lahf
out
xchg
popf
mov
sub
jl
aas
das
pop
dec
xchg
jbe
arpl
sub
lods
push
popf
jnp
xlat
loop
repz
das
outsl
hlt
repz
jmp
push
xchg
mov
imul
or
insl
int3
mov
pop
iret
add
in
enter
xor
mov
adc
mov
orl
jge
pop
loope
xchg
mov
cmp
jl
scas
sub
out
fbstp
adc
jno
sub
in
mov
paddw
mov
ret
repz
outsb
xor
mov
je
insl
arpl
xchg
movsb
les
inc
xor
pop
jmp
bound
or
dec
es
pop
stc
mov
test
jl
sub
pop
adc
pop
push
mov
inc
rol
pop
repnz
cmpb
dec
mov
loop
test
leave
test
dec
insl
mov
jmp
rolb
mov
sti
inc
cmpb
and
adc
adc
push
jae
sub
mov
sub
scas
push
mov
mov
lea
cmp
repnz
ljmp
jg
pop
pop
outsb
scas
mov
sbb
sahf
nop
push
push
in
adc
icebp
jg
mov
mov
imul
js
add
add
jns
and
cmp
int
cld
cltd
jge
jp
cmp
std
pop
push
jo
jmp
rolb
int
jae
int
test
inc
push
iret
lock
out
push
jo
mov
aad
in
loope
rcrl
lcall
push
in
aam
mov
xchg
fisttpll
lods
mov
aad
dec
push
test
mov
mov
jno
aaa
or
sub
adc
sti
popl
and
cmpsb
xor
shr
lods
cmp
xchg
cmovs
scas
jl
add
shlb
shl
xor
loopne,pt
pop
fisubl
push
inc
and
test
ds
test
xor
jge
imul
mov
addb
mov
arpl
mov
test
cs
loopne
xchg
cmp
in
mov
pop
push
sbb
femms
clc
in
mov
sti
pushf
out
sub
mov
fimull
enter
pushf
in
jo
cwtl
lahf
das
pop
mov
aaa
iret
jbe
jecxz
test
inc
or
sub
stos
test
std
cmpsb
sbb
in
push
aaa
jb
fsubrs
cwtl
sarl
sub
cmp
push
push
pop
into
push
lahf
cmp
jne
test
inc
push
leave
ficomps
sahf
bound
shl
lea
popa
xchg
mov
adc
fisubl
scas
mov
lea
lret
fwait
mov
push
sbb
add
pop
and
jp
mov
mov
fisubrs
dec
xorb
push
ds
pop
shrb
mov
push
jbe
jmp
movsl
push
in
pop
inc
loope
int
mov
adcl
sbb
pop
das
and
daa
xchg
popa
divps
in
mov
repz
aas
push
cmp
inc
mov
bound
inc
cmp
adc
ret
sbb
pop
shlb
icebp
mov
sahf
loop
inc
xchg
std
pushl
daa
mov
pop
push
mov
dec
jp
or
cmp
xor
push
inc
fsubs
or
not
lret
push
mov
jno
xor
or
push
pop
add
ret
sbbb
inc
inc
bound
dec
inc
sbb
dec
aaa
inc
and
xor
pop
cmpsb
jge
cmp
pop
mov
add
jo
loope
add
mov
leave
jbe
scas
mov
fdivp
mov
dec
xor
nop
mov
in
repz
pop
pop
or
lock
adc
data16
xchg
stc
es
sub
imul
mov
loopne
or
mov
pop
or
push
and
push
jmp
mov
sbb
inc
and
or
adc
out
mov
adc
mov
fsubl
sub
dec
mov
adc
xor
js
cmp
lods
push
jbe
call
lock
push
imul
xchg
and
mov
outsb
add
sbb
and
in
hlt
mov
andw
sbb
pusha
mov
or
jbe
push
sub
cmpb
lock
mov
imul
outsb
shr
mov
adc
sbb
push
inc
pop
hlt
rorb
cli
and
into
les
xchg
dec
inc
sahf
cld
jmp
iret
iret
inc
fwait
ja
mov
inc
push
addr16
or
inc
aas
cld
lds
sahf
xor
cmpsl
loope
mov
jmp
into
aam
outsl
push
sbb
in
addb
inc
cwtl
imul
mov
arpl
xlat
movsl
nop
insb
sbb
and
int3
xlat
cmp
mov
sub
or
cmp
aad
add
push
inc
mov
jl
ja
cmp
xlat
xchg
nop
cwtl
push
mov
fdivr
xor
pop
jns
adc
and
pop
sbb
lret
jl
pop
subl
outsb
scas
cmp
ret
or
xchg
mov
aad
mov
jae
dec
fs
xor
mov
sub
ja
adc
push
mov
cwtl
xor
lods
orl
hlt
imul
xchg
clc
xchg
sub
out
fidivrs
adc
cmp
and
lock
fistpll
pminub
aaa
sbb
adc
cwtl
or
mov
or
stc
or
movsb
push
rcrl
pop
popa
imul
or
sbb
or
daa
ss
jne
mov
aad
pop
int
arpl
jmp
xchg
push
int
cmp
mov
sti
aaa
pop
push
jns
pop
and
or
jb
mov
dec
cmpsb
fisubrs
add
lret
pop
ret
pop
nop
mov
mov
jnp
cmpsl
dec
enter
sbb
mov
mov
sub
jno
fstpt
popa
inc
inc
xlat
sbb
dec
xlat
add
outsl
mov
jp
cmc
fldl
loopne
xchg
test
es
xor
and
jl
xor
rorb
imul
imul
je
mov
daa
clc
push
insl
add
mov
dec
jnp
add
sub
pusha
xchg
inc
and
aad
pop
in
add
cmpb
pop
fildll
xchg
add
sub
leave
xchg
popa
dec
jmp
orl
ss
and
sbb
sahf
or
pop
dec
dec
jg
pop
das
adc
bound
inc
fldln2
and
clc
movsb
in
out
popa
pop
mov
call
pushl
lds
mov
cld
lahf
xor
mov
dec
dec
jmp
rcrb
cmp
ds
sbb
xor
jnp
and
add
scas
in
fldenv
lea
push
loope
ljmp
xor
jmp
scas
cs
mov
dec
push
ret
xchg
filds
stos
insb
cwtl
lds
push
clc
push
out
insb
jne
lcall
call
test
lahf
jae
pop
icebp
jo
lcall
lock
in
dec
mov
repnz
push
test
inc
dec
push
ss
nop
dec
scas
and
jne
shl
mov
or
das
lret
inc
sbb
jecxz
xchg
popf
xor
mov
mov
xor
clc
cmp
aam
xor
bound
push
adcl
out
sbb
or
pop
pop
je
cmpl
movd
aas
loop
pop
int3
jge
push
add
fwait
sbb
sub
or
outsb
pop
lods
cwtl
ret
cld
es
loop
add
xchg
pop
or
mov
cld
dec
imul
pop
mov
push
or
imul
lods
sahf
jg
jns
les
jg
decb
xchg
scas
adc
adc
dec
les
shl
jecxz
outsl
bound
dec
mov
mov
inc
adc
xchg
fisubrl
test
push
sub
or
cmp
and
cmp
arpl
jno
push
and
jmp
dec
push
xchg
jns
jmp
mov
jle
jnp
stos
pop
dec
sub
test
lret
ja
inc
adc
popa
sti
add
cmpsb
add
cmp
mov
xor
pushf
pop
sub
rorb
inc
dec
cmp
dec
mov
orb
lds
sub
sub
jno
aaa
xlat
xchg
inc
xor
mov
inc
jg
imul
mov
imul
fidivs
adc
js
into
add
fcomps
jp
jnp
xor
fiaddl
add
xchg
scas
and
push
pop
cmp
or
orl
and
loop
fidivrl
adc
mov
stos
sti
jle
add
jne
push
sbb
je
loope
mov
negl
sub
cmpsb
shll
cmp
adc
mov
pop
into
jae
jb
stos
leave
lret
push
sbb
and
in
mov
or
cmc
movsb
stos
sbb
adcl
fdiv
int
jmp
or
dec
shl
aaa
xchg
xor
mov
sub
in
push
cmp
and
xlat
add
push
aad
cltd
loop
pusha
pop
push
cmpsb
jae
pushf
xchg
xchg
jp
in
dec
jmp
dec
popf
data16
rcrb
mov
shlb
jg
nop
aas
xor
adc
and
inc
mov
pop
cmpsl
nop
push
adc
sahf
sbb
js
push
inc
in
ret
dec
loop
pop
fwait
jp
out
adcb
clc
and
mov
fidivs
jnp
xor
pop
out
in
pop
fnstenv
xchg
or
xor
popa
arpl
lcall
mov
add
lahf
pop
cmp
sbb
xchg
aas
jno
cmpsb
in
or
mul
sbb
cwtl
pop
mov
inc
bound
jae
pop
or
aad
mov
cmp
jmp
rcrl
inc
add
nop
lods
and
xor
cmp
sub
adc
xchg
mov
lahf
out
sbb
xchg
aaa
dec
sbb
mov
inc
sub
orl
pop
clc
and
fsts
ror
sub
and
push
daa
in
adc
jecxz
ja
mov
jo
dec
sti
out
bound
mov
fs
movsl
xchg
out
stos
push
icebp
or
inc
inc
inc
cmpsl
ret
sbbl
cmp
mov
lods
jge
fstp
stos
clc
jo
mov
adc
adc
add
fildl
cmp
sbb
call
in
repz
mov
jns
lcall
inc
xchg
fwait
dec
lret
xor
icebp
cmp
xchg
jecxz
repnz
lret
add
addr16
aaa
out
cltd
mov
cmp
hlt
sbb
movsl
push
cmpsl
fs
adc
xchg
mov
pop
lds
xchg
add
add
add
adc
push
push
ja
jns
lret
pop
and
and
cmpsb
cmpsl
popa
imull
sti
push
das
xor
mov
out
pop
gs
sti
dec
and
gs
xchg
std
cld
mov
in
testb
push
shrl
fildll
lds
subl
jae
pop
sub
mov
insb
sub
pop
pushf
mov
pop
ja
hlt
push
jnp
arpl
and
jge
cli
lds
dec
nop
adc
jmp
cmpsl
jns
inc
rcr
push
mov
jb
fnstsw
out
clc
icebp
xchg
or
inc
xor
xchg
cmc
out
test
pop
dec
inc
imul
das
pop
cmp
ds
stos
in
into
repnz
mov
int3
scas
mov
mov
or
jp
adc
add
adc
sub
mov
xchg
mov
mov
decl
push
pop
les
or
dec
mov
lock
lcall
inc
dec
push
mov
mov
jbe
adc
jmp
loop
pop
dec
les
mov
bound
cmpsb
imul
inc
or
push
push
adc
jne,pn
stc
aad
cmpsl
fcomip
pop
add
sub
jge
test
cwtl
jmp
loop
mov
out
mov
push
hlt
lods
repz
mov
decb
dec
inc
mov
lahf
dec
or
inc
loope
and
mov
sahf
loop
lods
das
push
xchg
push
leave
pop
mov
ds
ds
clc
arpl
repnz
xor
or
pop
dec
js
xchg
xchg
push
add
aaa
mov
sbb
pop
add
sahf
cmp
mov
fiadds
std
push
add
adc
in
pop
hlt
dec
cmpsl
xchg
scas
mov
mov
adc
cmp
stos
dec
test
shrl
inc
pop
push
push
xchg
jmp
xor
jle
sbb
jg
mov
cld
ss
sti
iret
pop
push
mov
ud0
xchg
enterw
add
nop
fcomps
mov
fdivrp
test
mov
lock
lods
mov
mov
jae
les
add
mov
stc
ret
sarb
and
mov
cltd
xchg
loop
inc
out
lcall
adc
pop
xor
jne
mov
xchg
inc
dec
in
lods
repnz
enter
pop
xchg
ljmp
insb
add
adc
mull
xchg
cmc
jp
jno
lea
cli
daa
mov
cmpsb
push
xchg
sub
out
pop
sbb
mov
adc
jbe
xor
lods
xchg
mov
push
adc
cmpsb
cmp
rcl
ja
xchg
sarb
leave
add
cmp
inc
cmp
pop
fisubrs
jne
mov
mov
les
or
fildll
mov
outsl
push
lods
xchg
push
xor
dec
js,pt
mov
or
test
cmp
es
mov
dec
xor
pushf
imul
and
xorb
jmp
push
shlb
daa
nop
out
push
lret
mov
jne
fsubp
mov
mov
mov
push
mov
jmp
imul
dec
push
out
and
das
out
xor
mov
in
std
mov
mov
addb
xor
movsl
bound
mov
iret
shlb
jmp
push
jae
cmpsl
pop
divl
push
inc
mul
repnz
cmc
ror
jg
dec
out
repnz
sbb
inc
imul
cmp
stc
in
xchg
jbe
adc
rcrl
xchg
push
xchg
and
in
pop
mov
cmp
faddl
cld
fisttps
inc
mov
outsb
jb
mov
mov
mov
and
outsb
shlb
fwait
xchg
test
pop
cli
or
fcom
mov
mov
jo
fstpt
mov
movsb
leave
jne
jne
xor
daa
sub
xor
cmc
adc
lret
pop
cmp
sub
cmp
inc
jl
inc
fistpll
test
mov
mov
jl
mov
pop
xchg
mov
mov
lods
cs
push
adc
rorl
cmp
dec
lods
adc
xchg
ss
bnd
sbb
je
cmp
or
lret
fsts
fucomp
push
mov
arpl
xchg
jno
xor
xchg
test
imul
mov
ljmp
pop
sbbb
jbe
das
sub
cmp
in
ret
xlat
pop
cmpsl
cli
mov
xchg
lret
xchg
adc
popa
lret
pusha
dec
neg
leave
add
ret
cmpsl
mov
jmp
sub
mov
int
cmpsl
or
mov
jecxz
pop
popa
cmc
xor
test
xchg
jecxz
adc
dec
adc
sbb
imul
mov
jae
mov
inc
cltd
push
xor
sbb
xor
sub
xchg
test
pop
arpl
loop
sub
out
mov
xchg
and
rcrl
push
scas
arpl
ffree
sbb
mov
arpl
gs
sbbl
nop
jno
push
pop
int3
clc
sbb
stos
adc
in
cmp
inc
xor
or
ja
adc
inc
fstpt
mov
mov
cmp
push
out
in
add
fs
fiadds
iret
mov
dec
inc
in
adcl
sub
sbb
in
adc
enter
xchg
cltd
xor
dec
inc
notl
xlat
adc
pop
aaa
iret
fcmovnu
scas
int3
sub
pop
fs
inc
fstps
sub
subb
mul
test
fsubl
jo
adc
push
lahf
push
mov
mov
pusha
cmp
imul
xchg
xchg
cld
mov
rcll
push
test
mov
inc
imul
pop
inc
and
xor
pop
cltd
mov
jno
idiv
jecxz
push
or
and
mov
mov
stc
mov
pop
lods
mov
mov
push
sub
jnp
jle
pushf
lcall
push
or
inc
inc
arpl
or
cmp
call
stos
ss
inc
jae
lahf
in
mov
clc
inc
bound
xlat
or
dec
cld
cwtl
mull
ja
inc
dec
push
and
nop
mov
inc
and
es
jp
sub
xor
sub
and
rcl
fwait
mov
add
xor
loopne
movsl
cmpsb
insl
push
add
ja
sub
lds
push
nop
or
mov
lods
jbe
and
stc
imul
mov
pop
sbb
rolb
mov
frstor
pushw
sub
scas
rcl
mov
movsl
gs
push
xor
aaa
xchg
push
or
lcall
sbb
adc
addr16
pop
leave
sahf
bound
sub
mov
lock
in
cltd
ss
mov
ljmp
cmpb
or
insb
sub
push
ja
inc
mov
sbb
jne
dec
push
scas
jecxz
out
fmuls
scas
and
fst
repnz
inc
iret
popa
push
stos
sub
cs
jb
push
lods
mov
dec
pop
and
mov
or
daa
or
jp
mov
daa
in
xchg
and
jl
iret
inc
enter
sub
xchg
outsb
arpl
sub
lcall
scas
ss
out
adc
sub
add
arpl
pop
dec
adc
and
lock
dec
cmpsl
mov
xchg
dec
ljmp
or
imul
cmp
add
es
inc
je
fstpl
adc
scas
out
pop
mov
fcmovnbe
add
movsb
nop
mov
jbe
aad
idivl
movsb
or
daa
nop
stc
scas
ljmp
cmpsl
lods
cltd
movsb
sub
dec
hlt
jmp
lcall
jnp
bound
cmp
seta
push
mov
popf
xor
dec
adc
movsb
outsb
or
cmpsb
imul
push
scas
push
stos
inc
inc
push
jnp
fidivrl
lock
lds
adc
or
fistps
movl
mov
lods
aas
xor
aad
inc
and
adc
add
adc
and
inc
jae
pop
rclb
fisubrs
sbb
int
push
inc
sbb
ja
repnz
cmpsl
ss
xchg
jmp
adc
pop
dec
or
xchg
xor
pop
mov
sub
xor
test
popf
lods
enter
repnz
or
jmp
push
inc
sub
and
mov
mov
call
cld
iret
or
ret
nop
xchg
aad
push
sbb
inc
pop
xlat
jno
hlt
das
in
and
ja
inc
xchg
mov
mov
mov
adc
pop
push
nop
in
pop
sbb
rorb
lea
cld
push
dec
adc
repnz
push
dec
jne
les
rorl
int3
je
stc
push
fiadds
pusha
aad
mov
shll
push
aaa
cwtl
pop
repnz
mov
jne
iret
mov
sub
scas
loope
jnp
rorb
mov
xor
clc
test
fucomi
dec
xor
aam
outsb
push
aas
in
pop
ss
adc
fisubl
cmp
outsb
mov
movsl
inc
imul
fdivp
pusha
pop
cmp
mov
js
pop
js
adc
xor
fwait
psrld
cmp
xor
arpl
push
add
les
std
jo
cmp
imul
repnz
adc
outsb
sysenter
and
sub
fmuls
xor
aas
scas
jge
mov
ret
aas
or
push
movl
jp
or
iret
std
push
jmp
test
js
pushl
mov
xor
cmc
test
mov
xchg
mov
add
out
hlt
mov
adc
imul
into
mov
and
shrb
sbb
rorl
out
xchg
scas
outsl
cmp
cmpsb
cmpsl
inc
aam
test
adc
hlt
xchg
cmpsl
jge
inc
sub
xlat
jns
and
jae
fcmovnu
mov
push
jnp
lds
mov
cwtl
popa
pop
push
inc
pusha
fwait
jb
mov
dec
dec
inc
stc
daa
popa
push
clc
scas
sbb
cmp
jge
and
and
es
cmp
js
jle
lods
rcll
sbb
fsubl
clc
adc
add
subl
jnp
data16
xor
test
pop
fiadds
movsl
mov
adc
and
adc
int
sahf
insl
sbb
pop
cmp
add
jne
imulb
test
adc
or
outsl
or
sub
jmp
jno
or
imul
lods
mov
lods
cmp
cmpsl
xor
out
bound
es
sub
leave
ror
xchg
mov
and
call
jnp
ficompl
sahf
lret
push
ja
or
je
adc
sub
mov
shrb
jmp
jns
mov
jecxz
ds
in
iret
push
mov
or
pushf
adc
mov
movsb
mov
push
adc
jnp
data16
pop
jp
lods
cmpsb
ljmp
push
push
and
cmp
das
repz
push
push
xor
adc
mov
and
xor
cmp
xchg
fnstcw
scas
call
inc
push
data16
xchg
fsubl
xor
pop
jne
sub
add
push
pop
jo
movsb
mov
loope
loope
lods
push
or
cli
inc
out
xchg
mov
sub
in
mov
aam
mov
adc
add
sbb
rcl
scas
add
xchg
scas
fwait
adc
cltd
lea
iret
ja
adc
dec
mov
shll
sti
shlb
inc
pop
sub
enter
push
fsubrs
mov
pushf
fwait
sub
movsl
lea
fldl
dec
aad
repz
adc
cmc
lea
jae
jmp
xor
sbb
lods
ss
jbe
test
push
adc
fdiv
ss
cwtl
sahf
shrl
add
rol
dec
outsl
leave
mov
out
or
outsb
sahf
loope
insb
pop
inc
ficomps
arpl
shl
or
scas
adc
sti
jg
cmp
dec
pop
jb
test
les
outsl
push
insb
adc
sub
pop
and
xchg
dec
xor
sub
les
and
push
ljmp
mov
sub
mov
pushf
rcrb
out
add
sti
scas
pushf
cmp
stos
imul
cmpsb
jne
or
in
sub
mov
xchg
ret
push
gs
inc
or
rcll
or
in
push
call
in
inc
inc
mov
xor
mov
sarb
aad
scas
sbb
inc
insb
mov
jge
stc
mov
cmpsb
lock
or
and
test
scas
loop
cmp
mov
pushf
ja
test
addr16
inc
jle
int3
jae
jno
fadd
mov
cmp
dec
sahf
push
icebp
dec
imul
mov
roll
in
xor
cmp
and
shrb
pop
insb
add
lock
cmp
movsl
push
mov
outsb
jmp
repz
ljmp
lret
pop
ljmp
pop
roll
arpl
in
push
cmp
xchg
push
xor
jp
test
insl
scas
mov
jns
cmc
push
or
sbb
mov
or
cld
cmpsb
in
add
popa
ja
data16
pop
mov
cli
ja
sbb
push
mov
add
push
mov
call
aas
mov
dec
daa
insl
and
ret
mov
xchg
inc
bound
bound
aaa
int3
mov
pop
lds
clc
dec
xlat
stos
cwtl
jne
fcomps
sub
add
fwait
iret
add
dec
mov
into
inc
lock
pop
push
shll
mov
sub
stc
cmp
into
jnp
or
es
mov
les
xor
rclb
mov
push
aaa
negb
enter
ret
mov
inc
pop
dec
adcl
repz
mov
push
int3
mov
or
mov
sbbb
faddl
mov
adc
in
cmp
movsl
push
out
mov
mov
testl
cmp
mov
jns
cmpsl
sub
jae
or
in
repnz
cmp
pop
loopne
add
pop
or
pop
sbb
push
subl
cmp
int3
lods
jle
fxch
scas
mov
push
xchg
in
in
ret
ja
into
and
aas
jo
std
adc
jle
mov
into
or
mov
and
mov
and
xor
add
pop
or
loopne
add
fmulp
mov
jmp
pop
decl
inc
mov
jb
pop
adc
cmpl
xchg
iret
pop
imul
jnp
mov
lods
adc
xchg
cmpsl
sbb
loopne
sbb
add
repz
loop
mov
imul
or
addr16
xor
push
jl
pop
adc
lea
xchg
jno
or
jne
mov
xlat
lcall
adc
shll
mov
lea
adc
mov
xchg
das
adc
fdivrl
sub
into
pusha
and
pop
rcll
dec
test
enter
add
push
sub
sub
xchg
fidivrl
mov
mov
mov
ljmp
fwait
icebp
sub
in
cli
jo
fidivl
xchg
push
lcall
sub
shl
cli
pop
add
out
aaa
test
sbb
jg
or
sbb
out
imull
pop
cli
mov
jge
xor
andl
cltd
mov
jge
xchg
fwait
mov
mov
out
cmp
je
cmp
fsqrt
out
es
sub
pop
out
mov
jo
fisubrl
repz
sti
pop
movsl
fs
mov
bound
call
pop
xor
ret
fmull
mov
cmpsb
adc
xor
outsl
sbb
icebp
clc
cmp
lahf
cltd
jge
push
loope
call
aam
aad
and
lahf
shll
loope
jecxz
adc
lea
adc
sub
or
fmull
rcrl
mov
add
ret
push
dec
mov
mov
sub
push
add
fidivrs
xorb
mov
mov
xor
xchg
dec
cmp
cwtl
or
xor
flds
cmpsb
sbb
mov
xor
loopne
inc
daa
cmp
adc
aam
mov
into
movsb
inc
jmp
mov
lods
xor
xchg
cli
outsl
jne
adc
sub
mov
jbe
jno
aaa
lock
inc
jno
popf
lret
or
cld
cmc
lods
insb
enter
jl
pushf
sbb
mov
lods
out
icebp
lods
sub
pop
rorb
or
inc
push
push
repnz
fisubs
sbb
test
dec
pop
mov
jno
cli
imul
mov
stos
push
mov
xor
mov
adc
inc
pop
loopne
repz
and
push
sub
jnp
inc
jmp
cmp
mov
clc
inc
testb
in
sub
nop
ret
adc
sub
sub
sub
mov
or
leave
sub
sub
jae
add
pop
xor
addr16
dec
xor
sbb
add
in
int3
stc
pop
sbb
jae
dec
xchg
add
mov
push
xchg
cs
xor
out
leave
push
fiaddl
and
out
icebp
cld
pop
ja
xchg
sbb
cmp
pusha
or
push
mov
das
lret
inc
movsl
inc
cmp
rcrl
xchg
mov
cs
flds
stos
nop
sbb
mov
mull
bound
cli
push
pushf
push
or
cli
ljmp
out
loopne,pn
sti
imul
adcb
ss
bound
or
out
loopne
sti
int3
flds
push
pop
sbb
rcl
mov
test
push
loope
cmp
jg
dec
sar
js
rcll
fstpt
dec
mov
or
outsl
aas
or
xlat
lret
mov
push
int3
js
sub
and
inc
pop
rcll
mov
xor
rorb
repnz
sub
out
daa
rcrb
cmp
pusha
xlat
sarb
loop
push
cmp
rclb
mul
mull
xor
xor
pop
dec
cwtl
xor
int3
adc
fsubr
int
icebp
jmp
insb
sub
loopne
pusha
mov
std
in
test
cmp
xor
js,pn
scas
jle
pushf
add
mov
test
mov
inc
fsts
add
pop
movl
mov
repz
mov
ja
sbb
cmp
stc
or
mov
rclb
cmp
push
js
fisubrl
mov
bswap
pop
fldcw
xor
jbe
fsubs
mov
lods
nop
sbb
dec
icebp
mov
add
add
int3
fwait
and
jo
push
dec
cmp
movsl
adc
idiv
mov
out
dec
insb
or
out
and
jae
xlat
push
mov
adcb
repnz
in
iret
xchg
aas
ss
inc
imul
jle
mov
jle
hlt
lahf
sti
gs
sbb
roll
xchg
dec
subb
scas
les
xchg
mov
insl
ficompl
adc
xchg
icebp
fildl
arpl
into
push
lods
in
mov
lret
add
xor
sub
ljmp
jo
data16
fwait
push
fnsave
sub
ds
dec
cmpsl
mov
movsl
jo
mov
sub
xlat
inc
cmc
adc
adcl
add
push
out
leave
loope
lahf
out
add
dec
rcrb
aad
xchg
sbb
ror
cmp
sbb
bound
shll
mov
fsubrp
out
push
mov
jbe
cs
mov
xor
adc
mov
lds
mov
pop
rorb
icebp
mov
arpl
dec
dec
jecxz
stc
pop
xchg
mov
leave
jl
out
leave
mov
out
insb
mov
call
xor
insb
mov
repnz
jnp
dec
mov
mov
loopne
inc
add
add
fs
xchg
pushf
std
jecxz
sahf
dec
xor
xlat
icebp
in
dec
aam
pushf
insb
mov
and
jo
into
mov
cmpsl
pop
lock
scas
lret
inc
popa
mov
add
popa
inc
jb
inc
jns
adc
mov
aam
jb
scas
adcl
and
pop
dec
pushf
cmp
leave
mov
shl
daa
daa
push
or
fcoms
xor
xchg
inc
in
dec
in
mov
push
test
ret
or
xchg
or
int3
xor
and
push
push
or
pushf
and
shl
jg
aas
mov
nop
pop
lds
loopne
cltd
std
imul
or
ss
es
int
cwtl
pop
int3
lock
jmp
lahf
ja
mov
add
stc
dec
arpl
jge
xchg
and
push
mov
and
ret
popf
movsb
mov
sbb
repnz
sbb
push
cltd
fisubrl
sub
in
mov
ja
rcl
pop
mov
fnstsw
jnp
into
std
xchg
jg
es
inc
addr16
sbb
enter
aaa
adc
jp
xchg
gs
pushf
lret
xchg
fnstsw
lods
or
dec
in
cmp
aam
ljmp
and
dec
out
xor
pop
into
cs
pop
in
sbb
add
inc
add
jo
outsb
inc
push
xchg
or
fdivrl
add
lea
pop
int3
outsl
xor
pop
dec
cwtl
cmp
jae
clc
mov
mov
add
sti
cli
out
sub
mov
rcr
inc
fcompl
jbe
sbb
test
std
sahf
into
jle
jno
mov
es
cmp
or
mov
xchg
mov
hlt
jbe
mov
push
out
pushf
test
scas
xchg
cmpsl
cmc
pushf
xchg
mov
insb
dec
lret
inc
sbbb
push
sbb
lds
add
int3
push
sub
mov
push
int3
sbb
mov
test
pop
jmp
sti
ret
and
xchg
mov
fsubl
in
inc
loop
or
sub
scas
out
dec
jae
push
pop
faddl
or
fisttps
sbb
mov
fstl
inc
dec
lret
fsubrs
outsl
pop
mov
out
inc
loopne
sahf
push
cmc
mov
fistpl
dec
push
lods
xlat
scas
adc
scas
ljmp
mov
push
lock
xor
int
xlat
pop
push
or
or
push
mov
mov
aaa
or
iret
dec
and
xor
ljmp
stos
mov
jae
call
cltd
add
icebp
enter
test
xor
xor
push
test
mov
das
pop
out
jno
jp
adc
lods
pop
inc
bound
je
cmp
inc
fwait
lock
fs
dec
xchg
in
ja
cmpsb
jnp
lcall
test
repnz
xchg
orb
and
add
lods
cltd
mov
out
mov
cmp
int
shl
hlt
mov
test
cmp
shl
mov
pop
addb
mov
imul
aad
xchg
fs
dec
outsb
insb
ret
jl
inc
into
int3
inc
enter
notb
popf
push
js
add
fldt
mov
ficoml
jbe
push
mov
shl
inc
jno
sub
sub
iret
clc
jmp
cmpsl
ret
aas
adc
mov
jb
dec
adc
mov
cli
cld
xchg
sub
movsl
push
or
jb
mov
into
cs
jl
not
inc
fildll
leave
stos
fwait
and
cld
inc
and
loopne
arpl
into
shr
jg
pushf
pop
aaa
fistl
mov
js
inc
dec
sub
push
mov
mov
jge
inc
dec
xor
nop
dec
add
mov
xchg
cwtl
push
adcb
xor
xor
das
insl
arpl
inc
and
ret
shll
xor
lds
or
movsl
mov
fistpll
bound
ds
or
shll
loop
add
xor
mov
xor
push
ljmp
outsb
pop
sub
push
add
cmp
loopne
sahf
fcmovb
faddl
pop
hlt
movsl
xor
xchg
add
cltd
mov
mov
inc
sbb
cmp
dec
push
fidivrs
cmc
xchg
mov
ja
mov
sbb
ja
insl
das
movsl
mov
jo
jb
mov
jecxz
push
mov
jmp
lods
push
loope
adc
loope
add
rcll
jl
imul
push
and
adc
mov
push
test
ss
nop
xor
fstp
or
mov
outsb
cwtl
pushf
add
push
pop
aam
clc
lahf
pop
subl
add
outsb
dec
ja
cmp
push
nop
stos
pushf
test
or
cs
ret
xor
mov
fidivrl
and
movsl
dec
shll
popf
mov
out
inc
fucom
rcrb
sar
xorb
adc
adc
pushf
sub
jg
and
out
jecxz
adc
test
ret
xchg
mov
mov
insl
and
cwtl
jl
push
in
sub
lret
xor
in
push
push
push
mov
aam
mov
into
movsl
or
add
mov
cmpl
inc
je
clc
in
push
mov
jecxz
lahf
dec
sbb
outsl
pop
pop
repz
addb
cmpl
xchg
mov
sbb
push
call
dec
cmp
push
cmpsb
daa
ret
lret
scas
push
and
dec
push
lret
lds
cmpsb
fisubrs
fdivr
ljmp
test
or
cmp
popf
add
mov
test
cs
jb
nopl
xor
sbb
sbb
mov
mov
push
repz
test
rcll
add
sarw
aam
and
arpl
test
lahf
jb
inc
and
jbe
roll
out
pop
inc
sbb
bound
xchg
lock
and
mov
jno
ret
pop
repz
jo
push
in
mov
pop
insb
mov
sbbb
pushf
push
cmp
sbb
pusha
fs
mov
ficomps
ret
rcrb
jae
xchg
xlat
je
add
push
loopne
popf
cmp
pop
cmpsl
call
mov
push
test
pop
push
xchg
mov
pop
xchg
insb
test
int
dec
in
push
sub
and
jg
out
es
ss
lods
lods
pop
push
xchg
cmpsl
dec
adc
imul
in
gs
lock
dec
sub
fstpt
lods
inc
mov
out
outsb
adc
mov
int
or
dec
add
pop
dec
lret
movsbl
mov
jp
mov
std
ljmp
xchg
jecxz
dec
mov
inc
push
fdivp
test
fwait
inc
xchg
inc
hlt
mov
inc
cmc
out
push
test
js
sbb
mov
sub
dec
push
int3
das
mov
aas
lret
xlat
push
call
jge
dec
xor
jle
sbb
popa
repz
call
sub
or
lods
scas
push
call
xor
inc
inc
adc
incb
push
or
pop
insb
ds
mov
mov
dec
and
mov
mov
outsb
push
sbb
int3
push
in
shrb
or
mov
add
movsb
cld
inc
push
in
xlat
notb
scas
add
inc
pop
adc
cltd
loopne
push
ret
data16
lock
iret
int3
into
lods
adc
inc
inc
les
cmp
sarb
fcoml
xor
mov
aas
xchg
xchg
push
or
outsl
push
cld
ja
push
xchg
mov
push
sub
jno
add
loop
xlat
mov
inc
push
clc
push
and
bound
sbb
and
arpl
incl
add
das
push
cmp
xchg
icebp
scas
mov
fwait
ret
xor
jo
loopne
xchg
mov
lods
push
or
sbbl
idiv
out
or
and
sbb
and
sub
pusha
jmp
jnp
push
test
insb
inc
ja
adc
xchg
add
sub
and
jmp
mov
mov
cltd
xchg
in
mov
jecxz
mov
cmp
push
and
sbb
insl
cld
cmp
les
lods
push
cmp
les
pop
into
test
scas
test
lcall
jns
das
xchg
stos
scas
add
fs
add
cld
add
lds
sub
pop
aaa
inc
xchg
dec
pop
cmp
jp
popa
shll
fs
pusha
stos
xor
jl
push
sbb
ja
cmpsb
test
mov
xbegin
xor
cwtl
hlt
loopne
loopne
mov
mov
cltd
lahf
idivb
or
sbb
lret
fdivr
add
add
repnz
gs
test
jl
cld
inc
and
sti
xchg
int3
sub
jge
xchg
and
jmp
orl
adc
add
in
xchg
jp
fldenv
leave
jo
and
pop
pop
sbb
dec
inc
pop
pop
or
pop
mov
mov
mov
lods
mov
mov
int3
ret
call
scas
into
xor
jg
lcall
outsb
imul
test
jecxz
bound
xchg
incb
lcall
adc
mov
inc
cmpsb
cmpsl
fs
pop
stc
sbb
stos
sub
into
pop
in
inc
rol
test
lahf
xor
dec
mov
in
adc
imul
mov
loop
lds
fisttps
push
popl
lcall
popa
or
shlb
rclb
mov
scas
cmpsl
dec
fcomps
or
jae
ljmp
mov
sarb
and
lret
fisttps
and
pop
call
test
enter
xor
jp
repnz
cmp
addr16
jb
sub
test
cmpsl
idivl
mov
pop
sbb
sbb
jae
sub
sbb
lods
test
lahf
loop
out
pop
pop
pushl
add
lods
inc
aas
cmc
dec
cmp
out
mov
mov
xor
push
and
imul
ds
cmp
xchg
movsb
lahf
cmp
dec
pop
push
mov
into
adc
dec
push
inc
jmp
sbb
and
ret
and
movl
in
xor
call
ds
sub
or
pop
stos
daa
cli
shrl
mov
xor
pusha
mov
loopne
dec
push
push
adc
neg
out
mov
lods
or
repz
loop
jecxz
mov
cmp
sub
push
jecxz
hlt
addr16
cmpsl
cmpsb
dec
adc
pusha
dec
sti
push
mov
arpl
fisubrl
pop
mov
adc
dec
and
std
sub
in
cli
sahf
arpl
fs
subl
jecxz
xor
aam
shrb
stos
pop
mov
xlat
fdivrs
xor
idivl
or
cmc
leave
int3
or
pop
aaa
jmp
mov
mov
popf
mov
mov
sub
cmpsb
pop
outsb
stos
test
jb
xor
dec
iret
fstp
sbb
add
gs
in
push
ljmp
push
std
xchg
xor
or
ret
mov
je
push
fsubrl
aad
clc
cwtl
xchg
mov
fistps
inc
ss
mov
imul
mov
mov
popf
mov
ja
cld
jg
imull
or
jb
fistps
inc
addr16
aas
enter
test
dec
adc
ljmp
push
out
pop
xchg
jp
xchg
fdiv
mov
push
dec
jns
jle
dec
enter
add
imul
push
inc
mov
adc
roll
pop
dec
divl
mov
scas
jmp
cmp
out
cli
out
mov
jmp
pop
cmp
js
rcl
mov
mov
mov
cmp
xchg
add
ljmp
movsl
mov
jns
or
jb
outsb
dec
rorl
mov
xchg
add
jbe
frstor
and
mov
add
addb
pop
loopne
mov
pop
pushf
push
lods
jbe
lods
call
pop
fwait
aas
mov
mov
adc
pop
movb
lods
js
mov
add
arpl
jae
std
mov
inc
lret
mov
fucom
in
cmc
jnp
mov
fucomp
subb
mov
xor
mov
lret
mov
dec
lock
xchg
rclb
test
inc
in
sahf
pop
sub
jno
mov
aam
sub
fnsave
mov
addr16
jo
cmc
jb
shrb
jg
les
mov
cltd
lds
sahf
imul
pop
push
and
push
fcomps
test
aam
movsb
pusha
adc
lds
xchg
sar
mov
test
xchg
mov
fdecstp
dec
or
push
inc
lea
inc
movsb
movsb
sbb
xchg
mov
pop
add
xor
in
pop
sbb
int
insl
pop
enter
mov
cmp
mov
jge
pop
leave
and
or
test
push
mov
cltd
jbe
out
andb
cmp
or
aas
repnz
rclb
mov
pushf
sub
popa
aas
fcomps
or
ret
sub
fs
mov
mov
pcmpgtd
mov
std
adc
mov
mov
inc
pop
shll
fs
pop
xchg
stos
or
popa
adc
int
mov
fsubs
pop
popf
or
cltd
fwait
enter
scas
test
dec
xchg
cli
into
jo
inc
dec
in
int
push
and
push
mov
pop
pushf
aad
popf
sarl
scas
mov
sahf
sbb
insl
cmp
dec
or
call
jne
mov
cmpsb
add
enter
add
jbe,pn
cmc
pop
and
divb
and
out
cld
in
pop
fidivl
loop
data16
and
push
scas
in
orl
mov
push
pop
xchg
cmp
mov
stos
xor
cmp
dec
cwtl
or
cmpb
andl
ja
call
cmp
mov
out
test
fwait
mov
popa
and
inc
mov
jmp
adc
cli
mov
cmpsb
iret
jg
daa
push
fadds
push
out
mov
scas
sub
cmp
into
pusha
test
xchg
push
filds
mov
divb
mov
adc
cltd
pop
pop
arpl
jge
sub
scas
hlt
xchg
loop
iret
mov
icebp
inc
stos
lret
mov
xchg
push
data16
or
lods
sbb
je
addr16
fdivrl
sarb
lahf
iret
fildll
stos
mov
lods
push
mov
lret
push
gs
push
imul
leave
jmp
lods
mov
outsb
and
or
mov
jnp
loope
fcompl
and
add
mov
loop
cmp
movsl
xorl
mov
out
xchg
notl
xchg
xor
rcl
pop
jns
inc
xor
cmpsl
xchg
inc
or
lock
pop
cmp
adc
in
add
mov
je
imul
scas
xlat
dec
pop
int
mov
sub
mov
and
pop
movsb
mov
mov
push
pop
icebp
mov
sbb
popf
and
pop
inc
push
pop
sbbb
mov
adc
leave
xchg
dec
sub
sub
fdivs
adc
sbb
and
into
in
orl
push
in
sbbl
leave
add
adc
hlt
int3
jns
add
fisttpll
xlat
testb
dec
xchg
gs
sbb
sbb
mov
pop
iret
bound
addr16
data16
cld
aaa
test
outsl
roll
inc
pop
pop
sbb
sub
and
test
ljmp
aam
mov
repnz
xor
sub
jmp
insl
test
adc
dec
add
add
mov
in
call
sti
lods
test
sub
jo
pop
movsl
cmp
fmull
add
mov
inc
inc
add
push
or
out
sahf
push
push
inc
pop
rep
cli
inc
add
cmp
pop
xchg
push
or
jae
jnp
add
aam
inc
jp
enter
or
mov
jmp
cmp
movb
mulb
sub
push
sub
imul
js
xor
xchg
mov
add
pop
enter
jb
les
push
or
ja
lcall
jae
ja
loopne
push
or
push
in
call
lret
incl
jg
xor
cmp
dec
lods
xchg
mov
jl
adc
xchg
movsb
sbb
add
or
fmull
test
inc
jo
mov
mov
in
or
and
outsb
cmp
je
jbe
cmp
jmp
jo
popf
mov
pop
push
lea
pop
or
in
test
iret
out
dec
ret
pop
stc
sbb
sti
push
or
dec
xchg
imulb
sarl
jno
loopne
and
inc
add
cltd
dec
mov
test
mov
mov
iret
adc
loope
push
jmp
sub
pop
xchg
stos
gs
inc
push
sub
into
mov
inc
sub
pop
clc
push
lock
inc
mov
sub
insl
fcoms
sbb
cmp
in
dec
jbe
or
xor
sbb
or
mov
mov
dec
xchg
or
iret
mov
test
ror
lret
mov
call
aas
mov
leave
jecxz
ds
fwait
pop
cmpsb
xlat
mov
addb
cmpb
mov
js
mov
test
adc
and
cmp
sbb
mov
mov
clc
movsl
inc
enter
xor
ja
sbb
jae
cmpsl
mov
cmp
pop
sub
cmp
addr16
nop
and
or
mov
cwtl
test
mov
in
mov
fildll
add
push
loop
xor
rolb
cmpl
add
in
repnz
aas
test
lcall
cmc
gs
and
insl
inc
loopne
dec
test
icebp
enter
cmpsb
and
dec
jnp
movsb
sbb
mov
data16
ret
sbb
sub
push
test
pop
scas
repnz
xchg
loop
hlt
ja
scas
add
jg
in
insb
dec
popf
jmp
push
arpl
notb
jecxz
mov
shlb
iret
pop
and
mov
insb
addl
push
inc
mov
jge
test
jmp
test
filds
movsl
fwait
inc
xor
nop
lods
popf
pop
inc
add
mov
dec
jne
repnz
ficoml
mov
xor
fcoms
mov
lret
dec
pop
mov
fildl
mov
sub
lods
inc
dec
mov
out
sub
xchg
cli
push
xchg
pop
clc
cmp
out
insl
lret
stc
jl
add
xlat
mov
dec
rcrb
pop
xchg
jl
push
and
and
or
cmpsb
movsl
cltd
out
mov
std
ret
pop
in
jns
outsl
lods
sahf
test
nop
xor
pop
jne
inc
xor
mov
stos
adc
cmp
addl
leave
neg
cli
xchg
adc
sti
insb
nop
cmpsb
repz
fcmovnbe
add
or
pop
push
out
repnz
sub
fwait
jb
movsl
sbb
iret
mov
and
test
prefetch
inc
jb
les
addr16
push
dec
sarl
mov
mov
cmp
add
mov
mov
xor
int
int
adc
jl
scas
jnp
push
adc
stos
or
xchg
stos
mov
and
sbb
fidivl
scas
iret
mov
ss
call
cmp
sbb
push
inc
aad
jg
fildll
sub
dec
push
and
dec
mov
dec
sbb
cmpsb
adc
jle
pop
out
in
adc
jmp
push
ja
mov
loop
jno
and
push
jae
fwait
lret
inc
movsb
cmp
rorb
out
or
shr
and
and
pop
and
dec
insl
pop
push
fldt
cmc
pop
mov
cmc
sub
outsb
mull
mov
je
mov
fsubrl
daa
ret
fcomps
je
lahf
sub
loopne
pop
das
mov
test
xchg
test
nop
or
mov
inc
std
or
mov
pop
jae
fistps
cs
pop
ja
push
je
popf
add
adc
cmpsl
dec
dec
or
mov
pop
call
rol
out
pusha
push
sub
mov
sahf
sub
jmp
jne
mov
jbe
add
icebp
or
div
ds
push
ljmp
mov
mov
and
divb
sti
fs
out
hlt
outsb
jmp
decl
xchg
inc
mov
insb
adc
xlat
ret
out
rcrb
in
loopne
sti
addr16
cld
or
sti
push
xchg
sub
push
sub
pop
jge
mov
inc
insl
test
movsl
fsubrs
ret
jle
outsl
dec
mov
pop
lret
ficomps
test
mov
adc
pop
hlt
nop
push
mov
jae
inc
popa
pop
data16
mov
out
push
cld
cmpsb
pop
xor
xor
and
fidivl
ret
hlt
mov
scas
dec
jle
out
push
adc
dec
fisttpll
inc
adc
pop
les
xchg
xlat
sbb
push
mov
mov
repz
push
mov
cs
mov
push
cmp
or
insl
add
and
fisubrs
adc
push
or
lods
out
packsswb
mov
out
insl
outsl
je
aam
adc
daa
out
dec
shlb
and
pop
mov
dec
daa
xor
jecxz
pop
outsl
repz
sbb
popf
or
les
lahf
lea
jg
xchg
std
sub
jl
lods
xchg
ret
decb
test
stc
or
aas
add
addb
ret
add
mov
or
outsl
fdivrs
icebp
mov
jp
pop
lods
adc
xchg
repnz
pop
mov
lods
mov
fucomip
es
out
add
popf
dec
jno
xchg
sbb
ret
in
cld
mov
daa
mov
dec
out
xchg
fs
push
xor
movsl
call
adcb
add
cmp
inc
int
xor
inc
test
pushf
fstpt
jecxz
sbbb
pop
or
jns
addb
xor
call
fidivrl
in
push
pop
xchg
sub
addb
outsl
xor
xchg
loop
stos
or
pop
stc
adc
js
jp
test
sahf
adc
pop
jae
pop
lods
or
mov
sub
cld
jp
aad
or
mov
xor
dec
jno
add
adc
jmp
test
loop
jecxz
mov
mov
mov
or
pop
pop
push
ret
rorl
testb
adc
sbb
xor
lahf
mov
ss
sub
bound
daa
clc
aaa
sub
adc
mov
lahf
jmp
mov
xchg
fcmovnu
add
and
add
inc
les
and
mov
lods
xor
sub
mov
xchg
sub
aas
sarl
ds
push
lods
aas
subl
add
or
mov
lds
pop
cmpsl
iret
into
stos
jno
jge
fsubrl
icebp
out
insl
addr16
aaa
out
mov
int
test
jo
inc
push
push
test
mov
shll
xchg
out
adc
fistpl
clc
pop
lock
pushf
pop
in
and
stos
aaa
xor
out
icebp
or
sub
js
mov
cmp
add
mov
and
xor
adc
push
hlt
jae
mov
stc
xchg
aaa
inc
mov
jg
or
in
inc
lret
popf
xor
lea
xchg
leave
mov
imul
sarb
loope
repz
mov
daa
xchg
rolb
fstps
in
or
lea
dec
xchg
ja
test
cmp
jge
aam
pop
mov
ds
mov
cmc
adc
ror
jg
jbe
xchg
inc
mov
jecxz
adc
mov
iret
cmp
fidivrs
mov
call
negb
push
jb
int
cltd
inc
jg
jnp
push
mov
jmp
das
outsl
icebp
sbb
lock
flds
pushf
sbb
mov
sbb
jmp
dec
movb
push
outsl
cmp
mov
mov
mov
mov
or
in
mov
push
jg
adc
mov
dec
xchg
jb
negb
hlt
lods
in
pusha
mov
mov
pop
addr16
rcrl
repz
jnp
cmp
jl
nop
push
out
adc
cmpsb
mov
data16
xor
repz
fcompp
cmpsl
mov
dec
mov
sub
or
cli
clc
push
jnp
sbb
pop
stos
nop
jnp
movsl
lret
xchg
push
sbb
push
jecxz
das
mov
loope
jge
dec
sbb
pop
inc
cmc
aam
push
adc
popa
jnp
lds
outsb
pop
inc
nop
xchg
int
scas
jo
test
aam
je
fs
adc
rcll
sbb
bound
xchg
out
lcall
mov
mov
lock
aam
loop
lods
fnstenv
sti
imul
dec
dec
push
adc
test
adc
je
jge
daa
inc
jmp
sarb
or
xchg
mov
jg
rol
in
das
dec
ss
mov
shll
xchg
roll
mov
lahf
pop
ficomps
loopne
dec
sub
mov
jbe
push
cmp
cltd
dec
pop
stc
dec
xchg
and
popf
lahf
iret
adc
inc
stc
jbe
inc
jnp
enter
jae
xor
jnp
dec
inc
dec
xor
divb
fsubrs
cmp
aam
test
into
pop
jg
roll
stc
mov
dec
cmp
data16
movsl
push
cli
cmpsl
add
mov
dec
pop
ss
add
mov
ret
add
sbb
or
lods
or
jns
inc
mov
rsm
jmp
mov
cmpsl
cltd
push
stos
xlat
cmp
xchg
push
pop
mov
sbb
mov
ljmp
test
call
movsl
gs
call
pusha
add
in
imul
dec
inc
test
pop
cmpsb
nop
loopne
test
aas
mov
sub
out
sub
jns
cli
cmpl
aas
ds
sbb
jb
mov
packuswb
js
cmp
pop
adc
fldenv
cld
sbb
cmp
xchg
mov
into
xchg
xchg
xor
call
and
notl
inc
mov
pushl
mov
fs
inc
dec
adc
mov
jb
cwtl
dec
outsb
add
or
jbe
arpl
dec
sub
add
imul
shl
imul
imul
mov
sub
push
add
gs
lret
inc
sahf
rclb
scas
aaa
das
xor
mov
mov
sub
pop
shr
cmc
mov
mov
lea
mov
shr
scas
jo
jno
mov
ret
xchg
dec
or
and
rcr
test
aad
int
pop
and
jp
nop
cli
cmp
fwait
mov
xor
mov
fldl
mov
movsl
push
or
jecxz
mov
fisttpll
rorl
in
aad
jge
and
decb
push
adc
dec
adc
lea
adc
scas
inc
in
call
cmpsb
cs
pop
mov
jae
leave
jg
xchg
dec
mov
sub
ret
jo
fdivrl
adc
addr16
and
mov
in
sbb
dec
jl
out
xor
push
test
in
lahf
jb
mov
adc
sub
outsl
and
push
and
cli
cli
sub
dec
xchg
inc
adc
jle
jg
fisttps
sti
xlat
jb
jmp
movsb
cmp
xchg
lcall
jbe
aam
pop
mov
inc
imul
mov
mov
int3
push
test
test
and
ret
mov
int
cwtl
adc
test
inc
rolb
push
ficoms
loop
leave
mov
inc
aas
inc
cld
fisubl
pop
xchg
scas
cmp
or
pop
mov
or
mov
stc
imulb
jmp
stos
in
ret
mov
sub
mov
inc
jbe
test
jmp
mov
mov
dec
out
pop
addl
daa
jmp
push
jp
into
fcomip
and
mov
inc
dec
fwait
push
add
arpl
rcll
mov
jp
daa
push
or
shlb
loopne
mov
cld
jg
mov
sahf
std
or
test
into
and
dec
pushf
in
imul
jmp
xchg
adc
lods
pop
in
cld
inc
pop
adc
mov
cmpsb
xor
mov
mov
xchg
inc
clc
adc
loope
dec
ret
xchg
cmpsb
jae
stc
mov
gs
orl
or
mov
test
pop
je
sbb
arpl
add
test
cwtl
jne
xchg
and
sahf
mov
lock
jno
add
mov
pop
test
adc
or
ficoml
jge
cmpsl
rorb
cs
and
jns
cmc
inc
pushf
mov
inc
js
mov
jecxz
shlb
mov
mov
xchg
cmp
or
test
jo
loopne
pop
pushf
push
stc
call
stos
pusha
mov
inc
and
add
int
adc
mov
lods
push
and
cmp
inc
xchg
into
jmp
ss
and
stos
imul
loopne
add
lods
jmp
ss
add
jb
xchg
mov
jb
test
loop
adc
mov
loope
jns
mov
sbb
sub
mov
lretw
xor
sti
movaps
mov
pop
mov
aam
sub
add
lahf
xchg
pop
mov
aas
popa
cmc
xchg
rorl
sbb
mov
and
xchg
cmp
dec
loop
jp
jnp
mov
fists
cmp
mov
mov
sti
enter
in
or
scas
jecxz
ret
iret
and
push
imul
out
jmp
add
pop
fists
std
adc
test
push
mov
and
icebp
jg
aas
inc
mov
aam
mov
lcall
fs
inc
rcr
cs
in
or
std
sub
or
jb
int
insl
mov
imul
and
clc
cli
rol
lahf
stos
shr
lcall
inc
xor
jmp
pop
dec
jnp
sub
loope
jne
insl
xlat
mov
ss
scas
or
lds
push
rcrl
xchg
lods
cmp
mov
stc
jne
jno
push
into
sbb
cli
adc
rcrl
out
mov
testb
xor
orb
leave
push
std
jmp
jnp
sub
jnp
and
xchg
lock
jno
inc
lods
rolb
xchg
aam
das
xor
int
lcall
inc
inc
push
push
lea
fwait
or
loope
or
xchg
bnd
xor
repnz
add
jmp
addl
sbb
pop
xchg
jmp
fucomip
push
inc
mov
das
insb
cmp
sub
cmp
mov
xor
push
push
or
div
inc
push
inc
ds
subl
arpl
xchg
lods
mov
add
aaa
cld
sbb
xchg
pop
push
jl
iret
loope
add
daa
mov
out
inc
inc
loopne
push
mov
jecxz
xor
das
in
mov
dec
ss
fldcw
ficoms
mov
add
mov
jmp
mov
mov
arpl
rdmsr
sbb
dec
pop
ret
out
shll
and
outsb
daa
xchg
adc
jbe
sub
cwtl
push
jno
mov
out
out
mov
xor
mov
js
jg
push
mov
mov
xchg
cwtl
pushf
lds
int
jp
cli
push
mov
push
fidivl
daa
inc
lcall
jmp
adc
adc
sub
repnz
aaa
sbb
adc
cli
outsl
into
scas
mov
movsb
imul
outsb
les
or
dec
out
repz
or
xchg
int
mov
jne
sarl
push
sbb
adc
sub
push
mov
push
push
dec
xor
and
pushl
cli
stos
sub
movsl
movsb
nop
iret
xor
fistpl
call
in
inc
sub
ret
and
push
shrl
inc
ret
sub
je
push
das
jl
mov
cltd
push
cmp
rorb
cmpb
cmp
std
mov
lods
push
mov
ficomps
or
mov
cmp
std
jge
xorb
jle
cli
das
mov
or
insl
sahf
aas
aas
cmp
and
pop
push
dec
mov
and
mov
sbb
lahf
pop
mov
mov
ret
stc
cltd
dec
dec
lahf
mov
jo
test
pushl
mov
ficoms
jecxz
lds
and
loop
lea
mov
scas
sub
ret
mov
ficoms
adc
stc
mov
jge
shr
jmp
dec
pushf
lds
dec
xchg
add
fwait
call
jmp
lods
std
push
movsb
dec
inc
pop
fsubr
fsubrs
ja
dec
stos
adc
push
out
lcall
clc
dec
jmp
cld
mov
shrb
mov
pop
bound
push
mov
inc
cs
mov
call
stos
lea
cmovb
adc
pushf
int
add
mov
enter
ficomps
std
fdivrs
add
cmpsb
pop
cltd
push
mov
add
mov
adc
enter
mov
mov
leave
push
mov
jmp
xchg
pop
sbb
push
mov
adc
xchg
orb
ret
pop
out
lock
fldt
dec
pop
test
add
ret
or
in
pop
mov
xlat
mov
daa
popa
imul
mov
shr
xor
out
jmp
fbld
ret
and
cmpsb
adc
fidivl
ljmp
mov
push
push
jne
cmp
mov
xchg
add
js
cmp
outsb
pop
sub
adc
jmp
lcall
js
mov
or
jbe
xchg
push
mov
adc
fdiv
mov
cmp
pop
lahf
add
jmp
cmp
popf
inc
shlb
pop
ficomps
movsb
xlat
cld
imul
jae
lret
dec
mov
fstps
push
or
rol
shlb
sbb
movsb
and
or
pop
loop
ficoms
mov
ds
mov
inc
mov
mov
pusha
cmp
sbb
stos
pop
movsl
ss
or
sub
xlat
lcall
repz
pop
repnz
faddl
ss
ja
arpl
loope
imul
cmpsb
jmp
xchg
adc
daa
push
jmp
or
or
fmull
subb
cmp
dec
lods
fsub
cmpsb
loope
push
xchg
pushw
pop
int3
jae
fdivl
cmpsl
shll
inc
xchg
xor
jb
repnz
aam
aas
sti
testb
dec
imul
inc
or
xor
mov
mov
js
adc
ja
sub
fisttpll
adc
push
out
mov
sub
inc
jnp
jae
pop
inc
mov
sub
and
popa
test
addr16
out
mov
ret
dec
sahf
sub
aad
mov
xor
faddl
fdivp
shlb
jl
dec
pop
sti
fcmove
icebp
scas
test
cmpsl
mov
ljmp
shrl
out
nop
xchg
sbb
inc
repnz
add
adcb
ret
xor
mov
xchg
or
es
jl
orb
das
push
xchg
pop
xchg
int
sub
xchg
in
adc
test
xorb
or
mov
movsb
sarl
insl
fcompl
push
sub
add
or
scas
ret
test
jns
popf
fwait
mov
lock
aam
cmp
sbb
lea
les
sbb
ss
mov
out
or
jp
inc
mov
out
inc
lcall
dec
loop
in
mov
addr16
ss
bound
add
fadd
sbb
xchg
and
leave
mov
push
lret
inc
dec
mov
sub
pop
cmpsl
adc
fistpl
push
out
test
and
cmp
dec
cli
pop
call
mov
sub
xor
mov
xchg
xor
cmp
and
adc
or
imul
cmpsb
fiaddl
sbb
addr16
xor
adc
js
in
cwtl
and
mov
rclb
pushw
xor
in
in
sub
scas
mov
sbb
fdiv
or
cltd
loopne
std
in
add
gs
jmp
lea
inc
jb
mov
daa
bound
pop
fucom
xchg
or
cmc
inc
and
mov
jle
bound
mov
jp
loopne
inc
test
pop
or
jl
outsl
aaa
je
inc
mov
call
into
cmpl
lret
cmp
inc
mov
adc
incb
mov
in
xor
adc
shll
loopne
xchg
jnp
pop
imul
sti
orl
cmc
mov
addr16
shll
data16
mov
repnz
out
insl
cmpb
test
lahf
sub
sbb
outsl
add
lcall
sub
lcall
bound
jae
in
roll
push
add
sub
add
pop
inc
jmp
test
inc
pop
sbb
mov
mov
rolb
bound
dec
push
mov
and
ret
pop
jg
mov
add
jecxz
sbb
lea
adc
cltd
jle
or
fistpll
push
mov
or
rcrb
sub
nop
dec
das
ja
sbb
mov
jge
dec
dec
adc
sub
sub
gs
mulb
arpl
lods
mov
jmp
mov
outsl
xor
gs
std
rorb
fs
leave
pusha
aam
je
mov
inc
push
aam
jb
mov
xchg
dec
jo
out
xchg
push
popf
cltd
mov
outsl
ja
cmp
mov
pop
shl
cli
or
dec
mov
sbbl
xor
sub
ret
faddl
es
mov
inc
cmp
pop
push
cmp
add
dec
jmp
loope
out
repnz
std
imul
xchg
xor
scas
loope
or
bnd
int
lcall
xchg
inc
out
fidivrs
daa
aaa
jecxz
insb
or
imul
in
jp
ss
add
jle
aas
push
mov
xor
cmp
inc
repnz
mov
pushf
xchg
push
jbe
mov
lods
sub
mov
les
inc
incl
mov
pop
xchg
sbb
cld
mov
out
ds
adc
sub
in
dec
mov
stos
sub
lret
sbb
iret
rcll
pop
push
push
rolb
rcll
cmp
fs
and
lods
fidivrl
fnsave
iret
push
rolb
leave
test
pusha
pop
mov
cmc
jle
mov
push
cmp
negb
ja
xor
push
sbb
jge
jmp
push
shlb
dec
hlt
das
stc
popa
push
add
mov
mov
lea
or
xchg
cwtl
adc
pop
sub
cmc
push
inc
pop
imul
scas
or
jl
mov
cmp
cmc
lods
jo
xor
cmp
lahf
xor
xlat
xor
repz
xchg
add
mov
add
lock
int
and
nop
ja
inc
stos
jmp
push
daa
pop
test
push
rcrl
fstpt
cld
lahf
in
mov
xchg
and
add
pop
in
jnp
jecxz
dec
or
mov
clc
mov
sahf
push
push
sub
sub
lss
stos
imul
xchg
mov
jo
dec
xchg
dec
addr16
push
jle
inc
xlat
jne
adc
mov
in
cmpsb
sbb
inc
mov
add
sahf
out
jbe
jno
push
jns
or
into
jns
imul
cmp
out
and
fwait
iret
lods
cmp
jmp
push
rcrb
pop
dec
cmp
testl
sbb
imul
popa
sbb
jl
insl
add
repz
aaa
push
dec
xorb
out
std
hlt
int3
and
xor
mov
loop
add
mov
insl
mov
cmp
cmp
aas
cltd
add
and
adc
sbb
cmp
and
xlat
add
mov
rclb
sbb
int3
sbb
arpl
sbb
adc
mov
scas
repz
cli
mov
xchg
jle
gs
fbstp
mov
push
pop
notb
xorb
add
inc
inc
push
xorb
jge
fs
pushf
mov
popa
xor
shll
push
or
push
cmp
dec
cs
xor
jle
mov
hlt
jbe
fistl
mov
test
jmp
aad
cmpsb
out
out
outsl
xor
mov
cld
jb
cmpb
filds
push
fstpl
cs
inc
xor
scas
cmc
movsb
sub
lods
insl
sarb
jmp
add
ljmp
dec
jge
lcall
mov
out
mov
repz
dec
into
add
cmp
lock
push
int3
negb
or
pop
scas
mov
cmp
daa
xor
xor
push
cli
rcrl
push
clc
cmp
mov
orb
sbb
icebp
ds
or
test
loope
int3
inc
lds
jbe
clc
xlat
and
jno
inc
les
cltd
jmp
sub
pop
sbb
addr16
mov
and
ds
je
xor
xor
imul
js
imul
and
mov
lea
out
scas
insl
fidivrl
mov
je
push
mov
pop
addl
push
loop
xor
inc
push
sahf
xchg
call
jo
mov
test
addl
out
cmc
xchg
movsb
jns
push
inc
xlat
push
das
cld
mov
sbb
or
mov
out
jo
dec
push
inc
fadds
gs
shrl
ljmp
fs
push
mov
jae
out
das
dec
xor
dec
inc
dec
in
insl
wrmsr
cmp
push
mov
ret
mov
xchg
mov
xchg
aas
int
loopne
shrb
pop
repz
xchg
xor
push
jp
insb
sbb
scas
enter
mov
ja
cmp
lret
popf
leave
and
in
neg
jmp
adc
inc
push
mov
movsl
dec
or
mov
int3
insl
and
pushf
sbb
jbe
addr16
fisubl
fisttps
lea
pusha
push
cmp
pop
sbb
lods
pop
jne
lock
hlt
mov
xchg
add
out
test
addr16
in
js
das
xlat
jne
pop
or
jl
fldenv
enter
pop
scas
stos
loope
mov
add
and
dec
aas
pop
sbb
sub
mov
lods
enter
repz
lock
or
cmp
scas
jmp
mov
pop
enter
inc
dec
jnp
xorb
adc
arpl
fdivrs
gs
mov
pusha
popa
and
and
shlb
inc
push
inc
sarl
out
pop
fisttps
fwait
sbb
bound
xlat
or
add
jno
aad
push
rcl
inc
test
test
xor
mov
icebp
ret
fwait
loope
ljmp
xchg
in
in
xor
push
cld
movsl
pusha
add
les
or
es
arpl
pushf
add
add
sub
insl
imul
insb
mov
xor
ret
dec
mov
fwait
daa
dec
cltd
out
mov
mov
push
or
or
cmpsl
inc
inc
shrl
cltd
ret
mov
and
out
jecxz
sub
cltd
xchg
les
inc
jno
clc
ret
adc
lret
pop
arpl
mov
aaa
pop
jge
xor
mov
dec
js
mov
cmp
fistpll
sub
insl
mov
sbbb
xor
out
int
test
mov
and
sbb
test
dec
hlt
mov
pop
lret
cli
add
roll
and
push
mov
xchg
pop
and
leave
push
adc
test
xchg
sbb
loop
xchg
fwait
mov
mov
pop
sub
test
in
shr
loop
adc
mov
mov
push
mov
cmpsb
cwtl
jecxz
xorb
cs
mov
clc
loop
cld
fdivp
pop
mov
fs
mov
add
mov
xorl
hlt
mov
xor
push
sub
adc
mov
enter
les
shrl
fcomip
jb
sbb
or
loop
pop
cmp
addr16
int
and
stos
add
inc
xchg
and
dec
push
pusha
dec
and
xchg
or
daa
jg
jb
dec
sbb
pop
cs
push
push
cmp
mov
ds
jne
push
pop
bound
pusha
dec
test
push
mov
sub
dec
jne
pop
cmc
pushf
or
or
into
cs
stc
insl
lret
std
icebp
xchg
adc
jl,pt
cmc
fwait
in
push
cmpsl
mull
jns
push
xor
or
negl
scas
mov
and
fstpl
lcall
adc
cltd
mov
shll
loopne
icebp
cmp
mov
mov
repz
repz
adc
mov
inc
out
or
push
mov
out
inc
jo
outsl
pop
jmp
into
out
pop
lahf
fisubrl
cmp
and
and
cmc
mov
repnz
or
jge
dec
mov
pop
cli
cld
test
sbb
or
stos
out
jl
xor
sarl
jmp
push
imul
ret
roll
fmull
clc
push
adc
daa
in
jle
leave
pop
mov
sbb
dec
icebp
xorl
ja
in
test
sahf
pop
rclb
jmp
les
cmpl
mov
mov
pop
fldt
popa
addl
mov
jmp
add
push
fisttpl
cld
and
jnp
loop
push
cmp
in
jne
mov
sub
jbe
push
sti
ret
jnp
lds
fists
sbb
mov
int
cmp
cmc
add
xor
push
mov
or
js
test
clc
cld
movsb
add
mov
dec
xor
cmp
pop
cmpl
int3
repz
jmp
xchg
subl
mov
adc
ret
ss
daa
inc
lret
adc
jno
lds
jns
cmpsl
inc
sarl
loopne
mov
cld
flds
hlt
cmp
push
stos
mov
call
jnp
inc
xor
shlb
xchg
or
es
in
lret
mov
mov
inc
scas
and
jmp
fwait
and
mov
push
mov
mov
or
mov
ret
inc
imul
aam
xorb
or
mov
arpl
adc
lcall
sbb
pop
gs
mov
mov
mov
jns
lcall
sub
sub
clc
test
jo
popf
out
xchg
jmp
pop
push
in
or
xor
int
scas
and
test
pop
mov
inc
and
dec
push
pop
adc
sbb
fmull
fisttps
lea
jg
mov
jmp
dec
jg
inc
jecxz
xchg
cs
aam
movb
xchg
sbb
xor
adc
dec
jno
mov
cld
mov
stc
orl
add
pop
les
movsb
fs
push
addr16
aam
clc
scas
test
stos
popa
lret
cli
inc
adc
push
in
jmp
nop
lret
out
mov
andl
adc
mov
stos
jnp
pushf
das
push
or
push
xor
inc
dec
ss
fimull
fidivrs
shll
mov
outsb
push
mov
mov
mov
in
mov
inc
cmp
test
dec
adc
int3
cmp
sub
and
or
sub
mov
add
xor
mov
loopne
es
push
aas
test
jnp
insl
stos
inc
insb
loope
adcb
xchg
dec
mov
nop
jnp
outsl
aas
cmpsb
fucomip
lahf
mov
mov
jns
pop
adc
rclb
cmp
adc
sbb
mov
pop
push
pop
popf
pop
inc
ficompl
cltd
cwtl
pushf
jbe
and
mov
push
jmp
lret
lea
movsl
test
clc
pop
loope
rcrl
ds
or
test
cmp
and
push
add
push
stos
test
inc
xor
das
or
mov
or
fistpll
xchg
or
sbb
push
sbb
outsb
xchg
mov
fbld
mov
ja
ss
xchg
int3
mov
testb
cmp
flds
xor
popf
jle
add
jae
loopne
lds
push
xor
jne
dec
addb
mov
jle
and
or
sbb
mov
mov
add
pop
dec
call
jbe,pn
out
outsl
jmp
pop
fldt
mov
pushf
mov
inc
bound
and
pop
mov
jbe
fstpt
push
mov
repz
int3
sub
sbb
add
jo
inc
iret
push
inc
pop
lea
push
popa
movsl
inc
xor
fs
mov
shl
mov
inc
xchg
mov
dec
push
flds
sub
int3
mov
cld
cmpsl
add
sarb
and
mov
jnp
nop
sbb
testb
cwtl
fildl
pop
rol
inc
ficomps
out
jle
add
push
out
and
mov
mov
ret
cmp
mov
pusha
jp
fucomi
imul
fisttps
aas
je
rclb
test
xor
and
ljmp
mov
sbb
xlat
sub
xchg
cmpsb
leave
adc
orl
in
or
jo
xlat
fsts
in
push
stos
out
shll
mov
gs
cltd
jbe
insb
mov
ret
dec
push
data16
andl
push
jns
mov
test
sub
mov
mov
or
and
xor
push
xchg
pop
xor
rol
push
pop
pushf
rolb
stc
shll
push
imul
test
push
add
inc
jbe
rclb
iret
mov
cmp
out
test
leave
jle
jb
js
js
daa
gs
jns
xchg
or
lret
xor
xchg
aaa
cmp
arpl
lea
pop
sbb
jb
push
popa
pop
push
mov
or
mov
es
or
adc
fcomp
pop
mov
aam
jecxz
dec
jg
add
movsb
fsubl
or
jl
sbb
jle
or
stos
xor
xor
mov
xor
mov
test
sub
or
cmp
outsl
mov
fincstp
leave
arpl
in
cmp
gs
xor
stos
int3
cmpsl
outsb
loop
xchg
loop
mov
jns
xlat
fcompl
cltd
out
push
fldt
loope
hlt
xchg
sbb
fistpll
stos
mov
rcrb
test
dec
imul
enter
pop
and
outsl
lds
lret
xchg
sub
mov
xchg
and
insl
mov
pop
hlt
repnz
ds
decb
cltd
addw
fldcw
mov
adc
scas
ret
inc
push
in
rclb
and
das
pop
jb
pusha
sub
push
push
shrb
cmc
xchg
sub
dec
insl
lcall
add
lds
inc
jb
pop
xlat
test
cltd
leave
add
icebp
sbb
cltd
jo
xor
cmp
testb
adc
push
inc
js
push
sub
popa
wrmsr
and
pop
mov
out
fcmovne
addr16
in
loopne
dec
push
dec
xchg
mov
cwtl
dec
sbb
scas
in
inc
xor
sub
and
cmp
pop
jbe
push
xchg
rorl
add
sub
sub
add
loope
cwtl
lods
testb
xor
test
or
mov
cmp
inc
jne
add
es
xchg
push
in
popa
add
cmpsb
adc
test
imul
out
enter
cmp
outsl
rorl
das
aad
push
xchg
shll
push
roll
cmp
push
in
cli
jnp
pop
mov
int
pop
cmpsl
sub
ret
pop
mov
xor
movsl
jle
roll
push
xor
sbbl
out
sbb
adc
dec
es
mov
pop
mov
mov
orl
movsl
aas
mov
sbb
adc
imulb
in
mov
into
test
or
rorl
dec
filds
das
call
push
pop
lods
movl
or
aaa
mov
insb
push
lods
repz
mov
fbld
pop
add
or
xchg
pop
lcall
xor
jecxz
mov
ret
and
add
sahf
lahf
fs
in
andb
and
sbb
fsubs
add
mov
shl
cmp
fisttpll
push
stos
mov
mov
xchg
mov
clc
roll
jb
sbb
lods
movsl
mov
lea
and
inc
repz
sub
sbb
dec
sbb
fistpl
call
cmpsl
xchg
xchg
mov
mov
rcrl
lahf
mov
cmc
cmc
out
jno
or
xchg
adc
leave
hlt
std
lock
arpl
outsb
arpl
nop
rcl
cmc
inc
ss
sub
ficoms
inc
outsl
or
mov
scas
cmpl
push
sub
popf
stos
call
add
outsl
testb
push
and
lahf
jecxz
add
imul
repz
xorl
repz
movb
mov
pop
mov
mov
out
sti
inc
jecxz
add
mov
ja
xor
cmpl
mov
add
insl
inc
ror
aaa
mov
xchg
outsb
add
adcb
into
push
test
mov
pop
mov
rcrl
mov
xchg
addr16
in
xchg
mov
mov
pop
into
ffree
call
ja
stos
cs
pop
pushf
inc
mov
pusha
mov
sbb
inc
aaa
pop
insb
inc
aam
mov
insb
or
push
adc
or
loope
ja
cmp
pusha
outsb
inc
xchg
and
or
push
pop
sbb
jne
cmpsl
push
cmp
cmp
dec
sbb
es
insl
lea
jbe
xchg
mov
mov
insb
sub
xchg
fwait
out
inc
xchg
lret
cmpsl
jg
mov
push
jae
lods
iret
dec
xor
push
adc
dec
int3
mov
xor
push
push
xchg
es
and
mov
test
aaa
push
mov
daa
cmpsl
icebp
int3
int3
mov
sbb
mov
pop
jno,pt
jb
movb
lods
imul
ds
dec
shlb
mov
pop
or
adc
jne
fwait
sbb
ja
pushf
ljmp
inc
imul
sar
cmpsl
dec
jae
aam
cmp
hlt
imul
test
lcall
jno
pop
in
lcall
inc
add
add
mov
jmp
fdivs
test
nop
add
inc
into
insl
sbbl
sub
adc
stos
insb
sbb
imul
fwait
inc
xchg
cmp
jo
adc
pop
in
notb
sarl
pop
imul
pop
mov
and
adc
test
inc
mov
add
mov
inc
cmp
lock
stc
in
pop
iret
push
pop
dec
sbb
iret
mov
das
int3
or
out
shll
sub
push
pop
xchg
mov
dec
pop
jno
xchg
push
mov
mov
mov
and
inc
enter
in
inc
outsl
pop
jecxz
pusha
insb
jmp
ljmp
ss
xchg
xchg
mov
int3
sbb
or
imul
stos
cmp
rorb
hlt
cmp
and
shlb
push
lret
sarl
mov
add
ljmp
mov
sub
shr
test
mov
iret
int
mov
arpl
rcrb
jl
shlb
and
sbb
fistps
ror
mov
sub
lret
iret
mov
out
add
les
cmpsl
sbb
jbe
inc
repnz
aad
pusha
in
and
add
repnz
or
gs
notb
scas
orb
lahf
sub
pop
stos
into
jge
mov
popa
stc
leave
hlt
je
fstpl
lods
test
sbb
pop
jo
ret
jl
movsl
fiadds
ret
testb
stos
mov
push
inc
push
ret
outsb
subl
sub
js
mov
jg
fidivrs
imul
aaa
pop
pushf
lret
push
mov
clc
mov
stos
lock
mov
daa
test
xchg
mov
rol
shl
mov
adc
in
stos
inc
in
sti
in
xchg
outsb
pop
jge
xchg
pusha
jge
xchg
jns
xor
aaa
xchg
or
shlb
or
push
mov
les
repnz
pusha
fwait
add
sar
stos
push
pop
fisttpll
cmp
mov
and
das
iret
sub
bound
sbb
jmp
xlat
dec
jmp
cmc
cmpsl
mov
test
cld
jl
cwtl
sbbb
push
sub
into
dec
imul
sbb
enter
stos
push
xchg
jl
sarl
add
std
idivb
inc
lock
nop
xor
cli
imul
mov
lea
ljmp
xor
lahf
mov
inc
movsb
mov
aad
out
test
xor
cmp
cmpsl
or
dec
mov
fists
jo
jle
sub
sbb
push
jbe
hlt
adc
xlat
adc
mov
test
mov
xchg
repnz
out
ds
jge
sub
into
out
mov
enter
push
fscale
sub
pushf
sub
xchg
jne
cli
int3
xchg
sub
adc
aad
out
mov
scas
push
icebp
add
sub
aas
ljmp
loop
fsubl
andb
pop
fs
jb
into
stc
adc
mov
jbe
or
adc
lcall
adc
rcl
push
cbtw
aaa
jnp
imul
push
shlb
pop
xchg
pop
ljmp
push
jno
sbb
mov
xchg
fistpl
pop
push
jge
int3
dec
sbb
nop
mov
or
jne
jg
imul
loop
pop
mov
jae
mov
cs
in
cmp
push
dec
xchg
test
test
scas
dec
sbb
xor
pushf
pop
sbb
test
rolb
lret
insl
or
int3
repnz
adc
jbe
add
ljmp
xchg
jno
add
popa
or
test
das
mov
or
loop
cmc
adc
xchg
negl
xchg
and
push
dec
inc
push
pop
push
pushf
push
mov
or
sahf
or
cmp
xor
push
adc
xchg
outsl
jmp
add
jb
aaa
add
mov
inc
gs
inc
lock
pop
cli
mov
jge
adc
rolb
push
xor
das
jp
hlt
jnp
lods
adc
cmc
jb
aam
xchg
inc
cmp
add
movsb
cmpsl
xchg
cmp
push
or
fwait
xchg
push
jmp
stos
popw
xor
xor
inc
and
out
pop
testb
jl
mov
ret
dec
sahf
push
pop
lock
out
mov
jno
leave
cmc
push
xor
fldl
sub
cmp
pop
fstps
out
jge
orl
int3
loopne
ds
lods
jecxz
mov
scas
stos
and
adc
mov
xchg
add
lahf
stos
in
fistpl
mov
mov
dec
call
lret
in
push
mov
in
push
pop
inc
inc
mov
or
enter
push
idiv
int
pop
add
cmp
inc
enter
jmp
nop
dec
cld
fnstcw
cltd
repz
in
cwtl
repnz
out
stos
mov
lods
test
add
mov
and
mov
cmpl
add
into
jp
sti
push
push
xor
in
mov
movsb
test
into
inc
jae
inc
stos
int3
sarb
hlt
insl
scas
in
mov
ficomps
stos
imul
mov
and
inc
fidivl
rcll
push
sub
jnp
push
hlt
lock
fwait
xchg
test
xchg
pusha
pop
icebp
or
nop
sub
imul
sub
adc
test
frstor
pop
pushf
stos
pop
repnz
mov
pop
repz
pop
sarb
cmp
loopne
movsl
cli
in
inc
pop
fistps
imul
push
dec
jge
jp
sbb
sbb
xchg
push
mov
cmp
ret
inc
mov
xchg
push
das
mov
and
jmp
xchg
lods
popa
lahf
ds
mov
popa
adc
mov
mov
mov
ficomps
xchg
fnsave
out
test
cmpsb
out
or
js
cli
repz
ja
stos
movb
clc
mov
jo
enter
js
mov
lcall
mov
and
cmp
rorb
and
fsubrs
xchg
mov
repz
or
jno
xor
test
inc
push
pop
push
fucom
lret
xchg
xlat
clc
ret
stc
mov
xor
stc
fadd
cmp
add
test
lret
dec
int3
jecxz
mov
lahf
popa
and
sbb
xchg
pushaw
xchg
jno
test
xchg
dec
or
movsl
icebp
leave
addr16
sbb
jbe
add
fistpll
mov
mov
hlt
cwtl
cli
rorb
test
cmc
jle
lds
sub
loopne
xchg
aad
test
repnz
xor
mov
mov
dec
xchg
pop
jne
jg
or
in
sbb
leave
dec
pop
adc
in
jmp
mov
pop
cmp
gs
cld
test
hlt
inc
jg
jp
add
fidivs
push
adc
gs
or
sti
xchg
or
sbb
and
insb
pop
fcoms
xor
push
mov
sbb
xchg
stos
or
and
push
pop
add
or
fisubl
into
popf
jo
lea
mov
pop
push
xchg
int3
pushf
leave
dec
sbb
fwait
push
jae
push
adcb
mov
sbb
pop
lods
data16
mov
mov
fiadds
imul
icebp
sti
loop
mov
stos
in
sarl
pop
jae
cmp
xchg
das
xchg
jl
pop
jae
cwtl
xor
sub
sbbl
gs
test
inc
fisubrs
sti
stos
pop
shrl
or
lds
out
push
dec
pusha
imul
lea
sbb
into
and
lret
and
aas
xor
es
ret
mov
jg
jnp
sub
psllq
js
xchg
or
mov
aas
jge
mov
mov
adc
test
or
jmp
aas
hlt
mov
inc
mov
jae
mov
pop
mov
fdiv
dec
lea
into
push
loopne
out
imul
inc
es
dec
cmp
mov
rclb
lea
imul
xor
and
shl
hlt
in
das
adc
es
and
cs
or
jg
nop
add
mov
call
add
inc
pop
xchg
and
or
cwtl
mov
ljmp
les
add
xor
dec
es
pop
and
rolb
mov
idivl
dec
jp
lods
lds
inc
mov
repz
adc
adc
mov
sub
inc
daa
mov
cs
lods
maskmovq
imull
jmp
movsl
xor
loopne
scas
dec
dec
cltd
divb
add
rorb
and
rcr
sbb
push
bound
xchg
aad
test
inc
fcom
or
popa
jmp
fmul
cmpsb
cmpsb
xor
call
lret
lock
pop
add
cmc
ret
sub
imul
movsb
cltd
xor
sub
repz
out
or
mov
cmp
dec
aad
in
iret
sbb
xor
movsl
ror
mov
or
out
push
mov
aad
sbb
adc
stc
adc
or
jp
negl
sar
push
adc
neg
push
inc
aam
mov
out
jl
sbb
mov
nop
jmp
arpl
push
xchg
fistpll
imul
call
mov
sbb
loope
fimull
jb
sbb
aaa
imulb
je
sbbl
ds
xchg
mov
push
icebp
jae
adc
les
mov
cmpsl
pop
sub
xchg
sbb
mov
sbb
or
inc
enter
adc
test
gs
incl
mov
mov
mov
and
mov
dec
dec
xor
xchg
adc
ljmp
aaa
sarb
movsb
mov
fwait
js
and
vpunpckhqdq
adc
xor
cmp
popa
sub
jb
sbb
push
mov
roll
imul
idivl
pop
lea
imul
or
loopne
in
and
mov
pop
mov
push
into
mov
push
mov
ss
mov
flds
mov
repz
jl
insl
inc
rclb
das
jge
cmpsb
push
fnsave
mov
shll
test
fs
and
inc
dec
pop
test
sub
xchg
test
push
dec
out
imul
scas
aam
mov
jb
lock
lret
push
shlb
add
inc
push
int
iret
push
push
adc
lret
adc
jnp
divl
dec
les
lret
sarl
ror
mov
leave
pusha
shr
lods
pop
or
mov
sahf
mov
in
cmp
sub
mov
mov
je
dec
and
lock
lcall
in
loopne
adc
shlb
cmpsb
repnz
aam
out
mov
imul
pop
rcrb
fbld
roll
pop
lods
cmp
dec
dec
adc
xor
push
test
or
cmp
insl
not
jp
fucomip
insb
ret
mov
int3
fsubs
fstl
inc
js
fistl
mov
jp
jp
mov
rcr
insb
gs
fs
adc
adc
test
pop
ja
mov
outsb
mov
adc
xchg
into
out
push
mov
mov
or
pop
inc
jmp
mov
push
stc
jp
test
aad
icebp
es
movsb
xchg
mov
pop
cld
lcall
sbb
mov
fdivl
pusha
faddl
lahf
fdivrl
sub
fisttpl
push
orl
cmp
test
in
rcrl
das
aad
scas
dec
sub
arpl
push
ss
or
push
psrlw
pop
mov
push
fsub
roll
rolb
cmp
sbb
jbe
dec
mov
fld
mov
repz
pushf
andl
out
sahf
mov
sarb
xor
mov
mov
scas
mov
or
jno
cld
sbbl
or
ffree
jno
xchg
insl
sbb
inc
push
fidivrl
push
pop
test
out
sub
imul
mov
sbb
fidivl
sbb
jno
loopne
xor
mov
jnp
inc
xor
dec
push
test
repnz
jmp
in
mov
cmp
xchg
fadd
inc
ds
inc
jnp
jbe
pop
jnp
sub
mov
jge
leave
and
aaa
test
xchg
bound
inc
sbb
js
popf
jg
dec
in
into
sbb
dec
sbb
inc
loop
push
out
adc
lods
mov
push
xor
inc
xchg
pushf
out
mov
cmpsl
cmp
and
ret
cmp
push
sub
xor
adc
xor
fs
xor
in
scas
mov
in
pop
repz
sub
adc
sub
out
xchg
stos
and
enter
jp
and
xor
cmp
mov
mov
mov
xor
repnz
push
push
stos
push
es
push
lods
or
sarl
jg
insb
push
or
pop
pushf
popf
es
cltd
in
xlat
push
dec
push
mov
idiv
stos
sbb
cmc
lret
lds
mov
cli
cmp
divl
out
and
sub
pop
add
and
in
outsl
inc
lahf
mov
xchg
cmp
ljmp
xor
and
imul
jmp
xchg
call
sbb
mov
mov
idivl
movsl
inc
mov
stos
ret
jecxz
inc
gs
mov
incb
dec
push
mov
push
fldcw
adc
adc
and
xor
mov
insl
push
mov
loopne
fs
movsb
add
out
sub
xor
loope
addb
int3
sbb
jbe
fstpl
sbb
movsl
sbb
dec
jno
sarl
shlb
inc
add
rol
mov
out
pusha
xchg
push
and
inc
in
fnstenv
xlat
mov
sub
push
add
xor
push
xchg
testl
pop
mov
cmpsl
data16
out
push
adc
daa
mov
or
cmpsl
in
das
pop
loop
jmp
sub
push
push
repnz
mov
hlt
dec
pusha
pop
cmp
adc
scas
or
mov
les
rclb
sub
cmp
cmp
movsb
lret
call
les
adc
repz
inc
adc
shlb
addl
pop
test
cmpb
mov
aam
add
mov
int
lods
pop
adc
mov
subb
fcompl
pop
bound
pushf
fs
adc
cmc
not
cltd
adc
cwtl
shl
popa
int3
and
or
ret
sub
enter
shrb
pop
into
popa
xor
push
sbb
bndldx
inc
sbb
push
fs
add
add
push
adc
xlat
fldl
mov
cmpsl
imul
xor
enter
sbb
jge
cli
rol
pusha
xchg
movsb
push
sbb
lcall
in
adc
push
nop
fisubrl
popl
dec
bound
jno
or
and
je
dec
test
jmp
clc
jns
cmpsl
sbb
pop
or
aaa
in
sub
out
das
ret
push
sbbl
mov
shrb
jbe
dec
xchg
jb
aad
cmp
out
jno
lahf
imul
or
pop
cmc
stos
popf
mov
leave
into
lds
jnp
shrl
xor
inc
orl
dec
cmp
int3
jle
decb
pop
cmp
out
insb
pop
push
sbb
mov
cmc
dec
or
or
push
push
fdivs
push
add
xchg
arpl
push
xchg
jns
lahf
incb
mov
push
mov
notb
or
and
scas
mov
mov
add
or
ret
sarl
out
xchg
inc
xor
std
cmp
jle
push
insl
inc
mov
pop
jle
shrl
clc
xchg
cltd
out
mov
add
sbb
ss
aaa
test
loop
mov
push
mov
sbb
outsl
lds
scas
push
gs
push
cltd
push
jmp
sti
sub
sbb
adc
push
scas
push
cmp
js
inc
mov
sbb
mov
xchg
xor
jmp
mov
dec
cmp
scas
push
dec
outsb
daa
mov
insl
sub
adc
lret
xor
inc
aaa
hlt
sbb
jp
pop
imul
dec
push
ds
es
shl
cmpsl
push
push
nop
cmp
pop
xchg
push
mov
xor
sbb
add
or
jle
lods
mov
or
adc
mov
cwtl
cmp
push
mov
ss
adc
imul
fldl
imul
dec
and
mov
mov
push
pop
int3
aad
push
cmc
rclb
xor
jmp
mov
rolb
push
jl
icebp
bound
sbb
daa
pushf
jbe
dec
jge
push
ss
pop
push
movsl
je
xor
dec
sbb
push
jmp
or
arpl
movsl
jno
mov
sbb
insl
mov
rorb
mov
int3
inc
or
mov
lds
jle
inc
cmp
mov
aaa
inc
mov
mov
dec
xor
daa
stc
mov
lock
sub
gs
inc
jb
cmp
adc
sbb
xchg
adc
xor
and
movsb
fsubrs
sbb
mov
jl
pop
pop
dec
lods
inc
je
iret
cltd
int3
cmp
shll
cmp
jae
shrb
xchg
jnp
fidivrl
imul
adcl
push
mov
jmp
pop
and
repnz
out
push
mov
lcall
stc
dec
ds
cmp
add
mov
adc
xchg
mov
shll
pop
mov
loop
jns
aas
pop
into
pop
xchg
inc
xor
pusha
xlat
jo
nop
jnp
xorb
imul
mov
adc
shll
and
pop
mov
lret
frstor
rorl
sbb
pop
dec
lds
dec
push
pop
inc
push
arpl
add
dec
clc
sbb
arpl
stos
and
fcomi
out
insl
int
in
push
dec
ret
dec
popf
inc
outsb
stc
outsb
jecxz
adc
mov
ficoms
jns
popf
sti
or
test
aaa
lods
xchg
mov
or
out
or
inc
dec
and
dec
movsl
out
xchg
xchg
mov
or
inc
cmp
sbb
jl
dec
into
sbb
scas
pop
hlt
xor
cmp
stc
mov
mov
lret
xchg
pop
sub
pop
sbb
or
js
mov
or
jle
xchg
add
push
cwtl
mov
iret
scas
adc
adc
xor
cmpsb
and
outsb
dec
mov
ja
mov
in
das
sub
lahf
jb
inc
mov
out
sti
mov
mov
and
push
shlb
lods
mov
mov
mov
or
jbe
stos
hlt
inc
sbb
stc
push
or
mov
fdivs
jne
xor
das
lock
int3
aam
jmp
std
lea
negb
inc
xchg
jo
rcl
test
pushf
mov
cmp
imul
mov
rorl
jmp
addr16
aaa
mov
pop
sub
sbb
decl
dec
or
push
jae
clc
fildl
add
cmp
das
in
sub
cld
popa
in
mov
js
insl
test
xor
mov
and
add
mov
paddw
leave
aas
cltd
loope
aas
sbb
mov
push
pusha
and
sbb
mov
dec
add
stos
ljmp
push
imul
roll
pushf
loopne
mov
xchg
iret
push
fcmovnu
sbbb
call
divps
loopne
inc
mov
mov
push
mov
icebp
dec
cmc
jle
and
movsl
mov
gs
fildl
cltd
and
mov
int3
out
cmp
int3
xchg
fmul
popa
lock
mov
rorb
push
mov
test
mov
pop
cmp
into
add
dec
mov
mov
loopne
push
lock
out
or
add
aas
mov
rcr
aad
jg
std
mov
xor
enter
inc
mov
cwtl
mov
cmp
repz
pop
cmp
jne
and
dec
test
push
pop
lcall
mov
xlat
jp
mov
les
jle
mov
sarb
sahf
push
and
rorl
sbb
pop
dec
fdivrl
and
xor
or
outsl
nop
xchg
ret
aam
add
lods
rolb
mov
fsubrp
mov
mov
xor
stos
enter
pop
hlt
mov
and
sar
test
inc
mov
push
xchg
sub
mov
aad
out
in
loope
loopne
mov
push
xor
pushf
daa
sub
fwait
jnp
leave
or
add
and
mov
enter
sub
insb
pushf
es
cmp
push
es
aam
test
mov
daa
fldcw
cmc
jno
dec
and
xchg
enter
incb
call
pop
dec
je
jns
mov
add
stos
push
aam
mov
fsubr
jecxz
mov
xchg
sbb
in
dec
das
pop
or
xor
mov
lds
sbb
push
push
pop
and
add
and
dec
mov
repz
rdtsc
add
xor
popa
sub
loope
bound
pop
jnp
xchg
push
mov
icebp
lea
sbb
les
push
sub
inc
lods
repnz
ss
in
je
pop
mov
jae
imul
pop
ja
mov
sbb
inc
sti
stc
call
jle
pop
xor
aas
pinsrw
enter
add
clc
add
call
popa
stos
scas
shlb
fsts
rclb
lds
mov
cwtl
ss
js
movsb
mov
sti
mov
fstp
mov
cld
stos
push
test
pop
movsb
movsl
jb
inc
int3
sbb
sub
or
out
and
sub
stos
adc
dec
lods
andb
test
divl
push
popf
adc
lods
call
cmpsl
cwtl
add
out
sar
cltd
outsb
jne
fsubs
lcall
cvtps2pi
cmc
xchg
lret
mov
xchg
add
loop
mov
addr16
xchg
shrl
pushf
sub
mov
aas
and
pop
sub
aam
jl
and
cltd
int
sub
adc
mov
jle
cli
jecxz
and
cmp
push
fdivrl
mov
dec
loop
xchg
cmpsl
ja
paddb
mov
mov
xor
jmp
imul
inc
jp
fstl
sub
adc
sbb
xchg
fisttpll
sbb
bnd
xchg
inc
cmp
fisubs
lock
pop
cmp
xchg
std
lahf
dec
inc
and
sti
jle
addr16
scas
popa
or
repz
data16
imul
outsl
addr16
imul
xchg
and
push
shlb
fwait
xchg
mov
data16
cld
mov
or
fxtract
push
daa
clc
adc
sbbl
imul
je
mov
fwait
loopne
stos
mov
or
pop
add
mov
repnz
clc
push
gs
dec
push
xor
fists
mov
or
pop
xchg
orb
pop
arpl
daa
gs
scas
mov
out
movsb
xchg
in
cmp
push
pop
in
loope
sbb
pop
int3
jle
inc
and
out
ljmp
push
dec
mov
push
shlb
ss
movsb
push
mov
out
loope
xchg
xchg
fs
sbb
inc
mov
lock
pusha
dec
out
jge
mov
add
or
lock
pop
cwtl
inc
push
hlt
hlt
adc
and
mov
xchg
jge
scas
sbb
inc
jg
xchg
jmp
lahf
jne
lds
sub
push
ljmp
scas
sahf
mov
rcl
movsb
cmp
iret
inc
lods
mov
ljmp
sub
shll
add
pusha
rcrb
pop
pushf
shll
mov
adc
ja
push
insl
sbb
fwait
or
inc
loope
xor
xchg
mov
sub
cmpsb
inc
jns
bound
xor
mov
xchg
cmp
pop
sub
add
xor
repnz
push
and
popf
dec
fs
and
enter
xchg
insb
mov
scas
xchg
mov
lods
mov
add
fisubrs
xor
xorl
push
mov
lods
jne
dec
or
push
outsl
cltd
sub
in
lds
leave
jmp
lahf
outsb
push
insl
addl
std
xor
shll
pop
pop
dec
rclb
fs
add
lret
lock
out
mov
sbb
push
inc
push
pop
jp
das
mov
je
lcall
dec
and
jo
sti
enter
in
pop
mov
enter
inc
cmp
sbb
cmp
or
jnp
or
lea
pop
lods
xchg
or
sarl
les
mov
dec
sub
or
mov
pop
lds
ds
jns
add
fdivs
mov
out
test
and
xor
loop
repnz
test
adc
fcomi
imul
pop
jnp,pn
nop
pushf
icebp
ja
mov
jne
das
scas
pop
sti
pusha
stos
mov
popa
fwait
jnp
popa
adc
push
pop
data16
mov
lods
adc
cmc
scas
fsubrs
pop
or
into
or
xchg
inc
int3
shl
push
and
shlb
pop
mov
daa
mov
ss
mov
insl
sbbl
lods
outsl
mov
jbe
sti
jo
push
inc
adc
in
sbb
stc
sub
hlt
push
add
shrb
pop
sti
in
sbb
sti
inc
cmc
mov
ret
cmpsl
lgdtl
cld
lods
pop
rcrb
dec
loop
jnp
sbb
aas
sbb
jne
rcll
inc
inc
xchg
pop
mov
mov
push
sbb
mov
push
mov
jb
ds
fbstp
fnstcw
flds
xchg
xchg
les
loopne
jge
pop
int
repz
mov
loop
fcomps
gs
push
pop
pop
data16
and
cld
or
jne
sub
in
stos
out
mov
call
dec
mov
or
test
mov
cmp
stos
data16
insb
hlt
pop
lea
loopne
inc
xor
or
dec
jl
inc
repz
lret
xchg
xor
jb
imul
jl
out
pop
pop
test
push
xor
pop
stc
test
insl
lods
in
mov
mov
xchg
stos
mov
mov
push
xchg
and
lods
dec
sub
popa
loope
shlb
or
mov
inc
dec
shrl
and
and
rolb
es
scas
ror
std
pusha
mov
and
inc
jl
jecxz
mov
add
dec
mov
into
ds
mov
imul
mov
cmp
divb
push
pop
fidivl
adc
jno
bound
inc
int
lret
lret
xchg
jnp
mov
xchg
cmp
push
xor
ja
pushf
lods
inc
xchg
push
dec
xchg
fincstp
pop
push
and
rcll
mov
jbe
cmp
data16
add
es
add
xchg
add
ja
cmp
cmp
loope
pop
or
or
fildll
jle
or
out
bts
push
mov
in
out
mov
dec
lret
cmp
popf
cltd
loope
push
sbb
jp
mov
pop
mov
xor
cmp
xchg
pop
push
jge
sub
jbe
lret
jp
jbe
sub
cmp
movsl
mov
fistpll
sbb
repz
loope
cmp
xor
push
rcll
shrl
call
loope
jmp
sbb
cmp
or
cmp
xchg
fs
pop
out
imul
addb
mov
dec
stc
movsl
xlat
inc
add
jmp
xlat
mov
fs
cmp
outsl
ret
test
mov
hlt
loopne
pop
adc
aaa
push
ret
loopne
outsb
mov
xor
leave
push
pop
push
loopne
jb
mov
or
sbb
lret
and
lret
fistpl
inc
movb
mov
mov
mov
mov
mov
rorb
cmpsl
popf
sbb
pop
cli
iret
dec
xchg
mov
xor
cmpsl
add
jecxz
adc
loop
mov
or
sbb
jecxz
fistps
in
pop
mov
out
cmp
std
jo,pn
dec
xchg
mov
add
shrb
gs
mov
lahf
jne
ja
jne
mov
scas
bndldx
adc
xchg
mov
xor
add
dec
enter
call
xchg
outsb
sarb
jg
retw
sbb
jbe
push
sti
cmpsb
pop
xor
outsl
mov
adc
js
stos
push
push
into
xchg
std
jns
stc
lds
push
scas
or
stos
xlat
jnp
movsb
and
mov
mov
aas
jle
mov
dec
cmpsb
inc
testl
lea
inc
lods
push
pop
dec
shrb
addl
sub
inc
push
das
push
inc
mov
call
mov
jno
and
xchg
lret
in
lods
es
xor
adc
stos
arpl
out
imul
aad
adc
in
jbe
push
shlb
pop
loopne
jmp
adc
xor
repz
addr16
fsubl
push
sarl
push
adc
aad
add
jnp
mov
adc
sbb
push
aad
jae
push
dec
sbb
lret
subb
mov
sarb
enter
shr
ds
pop
out
mov
sbb
in
cmc
pop
sbb
int
test
inc
add
lahf
inc
mov
fcomi
jno
enter
lock
adc
lcall
stos
fmul
mov
mov
add
and
das
rcrb
mov
sbb
out
nop
cli
push
sbb
jl
jno
add
jae
mov
cmp
adc
shlb
rclb
mov
pop
dec
sub
cmp
jle
popf
sub
xor
or
cmpsb
shlb
mov
or
sahf
push
and
xchg
popf
or
jo
mov
mov
movsb
sbb
mov
inc
inc
dec
xlat
fmulp
ljmp
pop
mov
sarb
add
cmc
add
jno
arpl
push
outsl
cmp
cmp
pushf
mov
jecxz
cmp
rcrl
mov
roll
mov
in
push
arpl
jo
test
xor
fists
dec
loopne
orl
repnz
adc
fsubrs
mov
jge
rcrb
mov
mov
lods
cs
dec
bound
scas
jecxz
test
inc
mov
xor
enter
es
cltd
cmp
test
jbe
and
dec
xlat
pop
out
movsl
stc
pop
pop
cli
aam
xor
mov
fxch
cli
add
mov
leave
rolb
cmp
addl
stos
gs
dec
int
in
sub
mov
cwtl
jecxz
leave
lahf
adc
add
fndisi(8087
mov
movsl
lock
aam
or
or
ss
mov
sub
or
xchg
inc
shlb
mov
test
idivb
pop
sbb
outsb
sbb
dec
add
dec
xor
sub
xor
xor
sub
mov
push
xor
and
ljmp
add
fcomip
cmp
in
xchg
pushf
mov
push
push
or
imul
lahf
lahf
xchg
cmp
fcom
daa
mov
xorl
leave
dec
sbb
loope
shlb
jl
mov
call
pop
or
inc
adc
aam
and
fwait
inc
in
xchg
xchg
sub
int3
push
adc
scas
fs
mov
lods
mov
inc
push
ret
cmp
stos
adc
mov
mov
shlb
nop
jae
add
cmp
je
fdivp
scas
sbb
mov
xlat
ljmp
mov
push
fidivrs
sub
fidivrs
adc
or
ret
das
mov
mov
aam
sub
insb
xor
leave
fistpl
dec
jnp
outsb
inc
pusha
add
adc
mov
pop
outsb
lret
cli
jb
and
jns
test
leave
mov
out
adc
sbb
je
je
mov
cltd
pop
inc
mov
jne
imul
or
fldl
fldt
push
les
mov
push
add
add
inc
stos
loop
pusha
js
mov
mov
out
cmp
insb
cld
xchg
out
pop
or
xchg
cmp
jnp
and
ret
lods
xorl
shrl
add
cltd
lods
cmc
push
xor
je
or
cs
imul
ret
mov
inc
sbb
loope
lret
clc
mov
fcoml
jecxz
cli
mov
inc
cmp
xchg
cmp
push
inc
sub
jbe
xorb
fildll
sbb
in
arpl
jecxz
scas
insb
jno
insl
in
test
fs
ret
faddl
cmc
insl
or
jge
sub
inc
jbe
push
cmpsl
xor
inc
push
stc
rcrl
adc
push
jno
int
pop
push
subl
jl
jp
loop
insl
mov
push
cmpsb
dec
adcl
sub
add
lret
adc
mov
pushf
lods
dec
rcr
test
sub
cmc
mov
pop
dec
lahf
repz
mov
lock
dec
xchg
mov
mov
lods
scas
or
add
add
loope
dec
dec
inc
and
dec
xor
inc
cmp
aaa
cwtl
adcb
xchg
imulb
enter
ljmp
jl
xchg
fdivrl
inc
popf
mov
push
pop
jle
scas
mov
push
loop
loop
push
in
shlb
loop
mov
xchg
cmc
rcl
inc
and
mov
xchg
test
add
mov
int
pop
adc
fdivs
sarb
jno
cld
xchg
scas
fcoms
cld
xchg
imul
jb
xchg
call
mov
popl
lock
mov
push
inc
push
pop
mov
scas
pushf
hlt
in
pop
cmpsb
test
out
pusha
mov
sub
jae
mov
fcoms
test
push
inc
lret
cli
ret
push
jg
mov
push
lods
pop
xchg
mov
mov
arpl
ja
sub
leave
pop
cmc
mov
mov
inc
stc
add
clc
push
pop
push
das
mov
scas
ljmp
lods
mov
cmpb
xor
aaa
in
xor
scas
mov
stos
leave
dec
dec
bound
frndint
and
je
mov
ds
rol
or
push
and
pop
into
imul
pop
push
adc
into
leave
xor
dec
imul
sbb
push
inc
mov
sub
and
sbb
pop
jns
les
pop
push
pop
ljmp
aad
lret
mov
jae
sbb
dec
lahf
scas
push
push
popf
cs
mov
pop
cmp
push
dec
jp
bound
xchg
iret
mov
repnz
lods
dec
and
adc
jns
jmp
pop
shrl
xchg
sti
add
insl
test
mov
mov
rorb
mull
adc
enter
testl
cmp
jae
mov
push
mov
lock
dec
mov
shrl
dec
cli
data16
fdivr
arpl
cltd
add
xchg
into
jge
and
mov
out
scas
in
sbb
subl
xchg
mov
mov
idiv
test
sub
cmp
mov
cmpsb
mov
das
inc
push
mov
pop
or
ds
sbb
mov
mov
jo
cmc
pop
cltd
clc
fisttpl
shlb
lcall
mov
les
cwtl
imul
pop
daa
lcall
lods
jbe
shlb
mov
loope
fstl
jo
and
adc
mov
jle
dec
xor
mov
and
fcompl
fdivl
fimuls
inc
cmpsb
push
mov
mov
in
inc
or
leave
jg
add
repnz
insl
rorl
fisubrs
data16
mov
xor
out
mov
jp
xchg
mov
ss
adc
test
pop
subl
int3
sbbl
push
jno
lods
cltd
cmp
dec
cwtl
inc
sbb
int3
iret
adc
insl
or
mov
jle
std
imul
imul
mov
lret
push
and
pop
cwtl
jecxz,pn
sbb
xlat
xchg
push
cwtl
xlat
fisubl
and
fs
xchg
mov
hlt
mov
mov
lret
mov
fsubrl
push
add
mov
lock
push
sub
movsb
pop
call
xchg
pushf
dec
jnp
fs
cmpsl
xor
stos
xor
decl
xchg
sub
ja
enter
mov
es
outsb
push
aad
mov
fs
push
fs
mov
cmp
pop
pop
nop
push
inc
enter
jae
lret
push
pop
pop
jmp
inc
mov
sbb
imul
xchg
lods
add
ret
sub
int
test
loopne
push
lods
and
in
inc
repz
mov
lds
xchg
jns
add
jo
mov
movsb
pop
imull
inc
pop
fcmovu
data16
fistps
retw
mov
repz
rcl
leave
aam
adc
lret
inc
push
push
jecxz
jmp
inc
mov
mov
pcmpgtd
imul
xchg
pop
dec
cmp
pop
mov
or
mov
xorb
xchg
jns
into
lock
cmp
cltd
push
shr
mov
mov
dec
lods
ss
sub
sub
xor
cmpl
dec
outsl
inc
mov
lds
and
in
fildll
xor
inc
xor
cld
xlat
outsb
out
push
push
mov
out
and
pop
mov
sbb
fidivrs
in
and
inc
bound
sarb
fxrstor
xchg
inc
orl
test
cmp
jns
mov
mov
addr16
repnz
dec
dec
xchg
or
sbb
je
pop
into
test
mov
xor
push
sub
mov
divl
or
push
sub
movsb
mov
addb
add
adc
sti
xor
in
dec
aaa
sbb
sbb
pop
add
nop
loopne
idivb
xchg
dec
mov
sbb
ret
pop
jecxz,pt
leave
iret
xchg
inc
pop
imulb
xchg
adc
xchg
dec
adc
test
repz
mov
mov
xor
or
lea
add
movsb
and
int3
xchg
pop
jmp
dec
and
mov
stos
popa
enter
push
stc
out
ror
mov
into
push
and
push
add
or
jb
push
nop
inc
call
push
cmp
in
lret
sbb
and
in
add
mov
nop
rorl
mov
fcom
xchg
push
mov
xlat
fisttps
enter
ror
inc
pop
popf
push
call
or
fsubrl
loop
sub
aad
inc
add
add
stos
and
leave
stc
iretw
adc
xrelease
mov
cld
bound
jns
enter
pop
mov
call
mov
push
bound
push
sbb
xchg
out
mov
sub
jno
shlb
push
pop
fildll
pop
les
mov
cmpsl
lret
ljmp
in
mov
and
sbb
or
insb
mov
insb
mov
xchg
lret
push
lods
fidivrs
sbb
lods
xlat
divb
lcall
dec
or
push
jno
push
mov
stos
lahf
fs
jbe
sarl
cmp
andl
sbb
mov
movb
arpl
xchg
push
sub
fwait
or
mov
and
sbb
dec
xor
adc
loop
xor
mov
in
sbb
cmpsb
je
test
pop
sub
cmp
push
xchg
sbb
sbb
cmovge
sub
movsb
fildll
xlat
or
sahf
sub
fistpl
push
sub
dec
outsl
test
arpl
xchg
mov
sahf
and
mov
test
add
lds
test
shll
xchg
es
mov
jmp
test
add
xchg
mov
pusha
fs
push
or
sub
mov
jecxz
icebp
add
or
push
mov
sbb
inc
stos
les
negl
push
ja
mov
subb
dec
sub
sbb
push
inc
gs
mov
loop
adc
pop
popf
imul
xchg
push
or
jecxz,pt
jge
dec
pop
int3
mov
mov
dec
and
pop
out
inc
add
rcll
shlb
add
daa
daa
fsts
sub
adcl
mov
sub
cmp
daa
js
lods
mov
sbb
fwait
pop
xlat
inc
lcall
pop
xor
adcb
arpl
call
imulb
sub
dec
cmp
shrb
jbe
pop
aam
sub
in
xchg
loop
jo
xor
mov
lds
mov
sbb
xchg
frstor
loop
push
jecxz
push
jmp
call
xor
insb
lcall
mov
mov
or
fistpll
pop
shl
leave
ss
mov
adc
mov
and
test
and
lea
mov
jmp
and
sbb
fs
pslld
repnz
test
test
das
les
push
fistpll
test
rorl
cwtl
gs
xchg
pop
mov
loop
xlat
and
cmp
jl
pusha
arpl
jnp
mov
mov
lahf
mov
subl
fmulp
dec
out
out
mov
lret
push
cmp
out
pop
lock
push
loopne
in
das
adc
popl
test
adc
test
mov
imul
inc
mov
mov
pop
sub
lods
add
or
int
test
cmp
adc
push
cmp
lock
adc
clc
int
imul
stos
jno
in
push
sbb
repz
imul
dec
rcrb
out
lods
push
ds
push
sahf
pop
inc
sahf
testl
loope
test
add
in
jae
pop
add
sbb
xor
xor
mov
rclb
cli
hlt
xlat
xor
or
aaa
mov
adc
xchg
adc
or
xor
jne
inc
outsb
fcmovbe
out
loope
sub
in
nop
dec
jp
notl
stc
pop
stos
xchg
out
sub
mov
mov
inc
cmp
pop
mov
sbb
adc
insl
jnp
lret
pop
cmp
mov
outsb
sub
sti
mov
adc
or
mov
jns
test
das
cmp
add
jge
pop
cltd
cwtl
hlt
sub
add
push
mov
adc
push
mov
lcall
or
inc
add
cmp
clc
or
adc
dec
in
repz
xchg
push
mov
cli
cmp
cmc
inc
jno
jmp
test
fsubr
roll
cmp
in
lock
push
pop
mov
aas
ljmp
mov
ja
mov
and
repnz
push
fsts
lahf
mov
cmpsb
add
xchg
mov
adcb
popa
mov
adc
push
lea
sqrtps
pop
cwtl
jbe
jmp
subb
jnp
jmp
int
mov
add
or
push
xor
mov
flds
dec
mov
call
or
adc
or
cli
add
ja
repz
add
pop
dec
pop
scas
vpshufd
xchg
mov
js
into
mov
jo
sub
pop
fisubl
les
cmp
adcl
push
arpl
cmp
ror
sbb
in
pop
and
icebp
loop
xor
movsl
pop
int3
pop
sahf
mov
data16
testl
and
imul
test
subl
mov
push
shll
ret
and
inc
or
cmp
dec
aas
push
mov
push
test
sbb
mov
sbbb
push
sub
adc
and
xchg
out
xor
dec
mov
jle
fbstp
lcall
addr16
inc
pop
cli
or
push
dec
js
ret
cmpsl
xor
rcll
cwtl
incl
inc
movsl
mov
jecxz
addr16
fstps
cmpsl
xchg
rorl
sub
mov
mov
xor
icebp
add
sahf
mov
add
stc
iret
sub
sub
ficomps
lret
stos
lds
jge
lret
aaa
fcmovnb
xchg
dec
repz
pop
outsb
mov
cmp
jnp
mov
stc
and
mov
xchg
xor
dec
test
mov
daa
shll
jecxz
dec
mov
mov
push
ja
out
in
mov
das
push
pop
adc
mov
icebp
movsb
fwait
sub
dec
push
adc
lods
lret
cmp
faddl
cmpsl
push
repz
xor
push
in
sti
sub
and
and
or
push
pop
adc
jae
push
jb
jp
add
arpl
mov
pop
push
add
test
int
mov
sbb
ret
cmp
bound
jmp
jl
sar
xor
lock
ja
fadds
mov
add
xor
lods
frstor
mov
add
outsb
lods
push
push
mov
push
push
in
xchg
mov
fildll
cmp
into
div
out
xor
mov
scas
lea
add
xorb
lods
cld
lds
arpl
mov
push
mov
mov
push
ret
jo
mov
outsb
test
mov
nop
jge
sbb
mov
stos
add
jbe
lea
outsl
andl
add
mov
mov
mov
push
inc
dec
insb
shlb
lock
jbe
lods
shlb
xchg
or
and
pop
mov
push
jecxz
push
mov
ret
mov
daa
xlat
ret
jle
lea
bound
xor
jmp
movsl
pop
in
dec
lods
inc
rcr
popa
xchg
sub
pop
cld
xor
jmp
pop
popf
push
cltd
xor
jecxz
divb
cmp
push
dec
sub
xchg
mov
in
sahf
insb
mov
dec
xchg
cltd
cmc
sub
dec
dec
xor
cmp
jl
stos
lods
mov
ret
popf
mov
push
and
xrelease
jae
fcomp
xlat
or
aas
cld
mov
pushf
pushf
movsb
mov
pop
incl
xchg
pop
mov
and
popa
xchg
mov
jmp
iret
std
fildl
pushw
xchg
push
add
cmp
inc
cmp
ret
loope
lock
scas
enter
push
mov
sbb
das
testl
sbb
cmpsl
neg
mov
push
sbb
arpl
int
icebp
or
enter
sub
int3
push
or
mov
loope
cltd
pop
sbbl
aaa
adcl
inc
decl
repnz
mov
inc
mov
sub
pop
jne
mov
sbb
adc
aad
jo
xchg
testl
or
data16
mov
aaa
and
jl
adc
rolb
andl
pop
mov
inc
shlb
movsb
mov
and
push
lcall
xor
iret
pop
sub
dec
fnstsw
es
sbb
sti
jmp
mov
jmp
int
or
shlb
fwait
dec
add
icebp
inc
add
xor
das
leave
gs
mov
inc
lret
in
mov
mov
mov
jge
rolb
pop
pop
shlb
dec
lods
test
mov
mov
int3
fcom
push
pop
adcl
test
dec
repnz
shrb
das
subb
shlb
sub
sub
mov
cs
xor
mov
popf
das
popa
pop
push
lods
xor
mov
inc
and
adc
dec
push
roll
mov
push
stos
sbb
mov
cmp
repnz
out
push
pop
cmp
imul
icebp
add
push
mov
arpl
fisttps
je
and
pop
mov
jge
icebp
les
lcall
inc
mov
sbb
adc
cmp
lret
cmp
cld
sbb
xor
and
inc
mov
scas
ja
adc
pop
in
shl
adcb
pop
mov
int3
popf
add
pop
cltd
in
lea
sbb
fdivrs
mov
adc
call
lock
mov
cld
and
dec
adc
jp
lods
mov
cmp
and
sbb
pop
pop
sahf
imul
das
adc
scas
repnz
sub
or
dec
sahf
dec
cltd
mov
cs
cltd
insb
test
movl
lret
xorb
inc
add
push
adc
aaa
or
repnz
cmp
enter
pop
xchg
mov
mov
inc
test
test
mov
dec
dec
push
jb
stc
stos
loope
mov
cltd
rcll
jmp
add
outsb
xlat
push
xor
insl
in
or
push
repnz
nop
xchg
ds
dec
xor
jecxz
cmp
out
lock
adc
xor
sub
leave
out
jno
mov
lahf
add
mov
int3
or
loop
inc
scas
sahf
mov
inc
es
xor
loopne
pop
mov
cli
js
pushf
cmpsl
test
mov
jg
punpckhdq
aaa
mov
mov
imul
pop
repnz
or
jle
shlb
xchg
jns
shrl
stos
sarb
orb
cld
xor
lret
shll
mov
inc
je
mov
les
idivl
mov
pushf
sub
aas
inc
outsb
out
sub
in
or
iret
fiaddl
jl
dec
push
in
inc
xchg
mov
scas
insl
fmuls
int3
pop
hlt
xor
or
mov
sub
sbb
jns
mov
xor
inc
jns
push
dec
mov
insl
mov
das
in
dec
inc
je
lds
and
lea
mov
aad
cwtl
push
movsl
cs
divl
jl
and
push
mov
out
xchg
mov
push
pop
cmp
out
rolb
leave
test
sub
stc
jge
pop
or
daa
movsl
jmp
sub
addl
mov
pop
cs
cmp
sbb
xor
dec
lods
ret
aad
mov
add
sbb
mov
mov
ss
xchg
cltd
xchg
lcall
dec
repz
inc
out
dec
dec
popa
mov
dec
push
mov
add
xchg
nop
pop
orb
cs
sub
add
daa
adc
fistl
imul
in
out
push
xor
mov
into
leave
mov
shll
cmp
mov
cmpsb
bnd
sbbw
je
xor
xor
popa
pop
push
mov
push
mov
pop
add
xchg
cmp
xor
in
pop
fistl
test
popf
js
inc
icebp
push
test
cmp
sub
jb
shlb
test
add
cltd
push
ds
test
iret
fstps
pushf
mov
add
dec
js
mov
mov
cmp
leave
int
dec
inc
push
test
mov
mov
je
data16
clc
inc
stos
xchg
xor
xchg
add
inc
mov
into
ret
ret
ss
lret
mov
pop
mov
sahf
clc
lods
pop
shll
xor
movsb
cmp
pop
aas
sub
arpl
aas
inc
imul
test
jbe
shrl
mov
loop
scas
popf
adcb
and
mov
adc
ljmp
jne
dec
imul
nop
dec
jne
lret
sub
nop
cmpsl
mov
testl
adc
adc
sub
fbstp
icebp
insl
repnz
sub
addl
cmp
add
push
paddb
jne
jnp
aas
ror
xchg
mov
and
jae
pop
pop
jge
lods
jo
jb
scas
pop
jb
mov
lods
aad
mov
push
sub
inc
daa
bound
push
es
add
inc
cmp
mov
cmp
push
andb
ror
into
adc
adcb
pop
test
pop
mov
sub
out
aas
add
sahf
push
add
jl
add
hlt
xchg
js
mov
daa
pop
aaa
mov
out
andb
sti
lret
sbb
aaa
scas
push
sub
rcl
push
jmp
pop
lds
sub
mov
mov
xchg
jbe
stc
fcoml
mov
lock
mov
xor
lea
sbb
push
faddl
mov
sbbl
mov
cmpl
dec
ret
lods
les
pop
cmpsl
cmpsb
cld
cmc
inc
xor
fisubl
roll
jmp
int3
pushf
cmp
adc
mov
cmpsb
mov
sub
popa
js
mov
adc
enter
scas
adc
lahf
sub
mov
lds
fdivs
insl
pop
mov
sub
cwtl
arpl
cmp
jb
push
sbb
sbb
dec
cwtl
dec
int3
insb
dec
loop
cmpsl
out
dec
pop
pusha
xchg
call
add
jmp
std
and
xor
lea
scas
or
dec
lcall
dec
mov
mov
std
mov
sbb
dec
jbe
pop
sarb
fimuls
sbb
inc
lret
cld
and
adc
mov
jno
fmuls
aas
inc
pop
push
fnstenv
xor
loop
shr
test
sbb
jle
jo
jmp
aas
jl
cmpsl
subb
imul
sbb
lcall
xor
ret
cmpsl
sbb
xchg
in
loopne
scas
xchg
dec
xor
ds
or
mov
xor
adc
mov
mov
sar
inc
aad
cmp
mov
test
in
sub
xor
jne
inc
mov
movb
daa
repnz
popa
inc
push
clc
bound
into
loop
cmp
xchg
enter
hlt
jl
fisubrs
sub
xchg
jae
enter
add
xor
std
mov
fs
or
mov
nop
xor
or
stos
add
push
fisttpll
insb
dec
rcrl
or
and
inc
xor
mov
stos
iret
movsl
lea
lock
xor
dec
scas
or
insb
ljmp
test
cltd
dec
test
mov
ja
pop
mov
fwait
cmp
sub
lods
in
mov
iret
sbb
jg
and
sbb
ja
mov
mov
and
lret
jecxz
subl
inc
jecxz
and
inc
ljmp
gs
pop
jbe
lret
mov
mov
and
mov
call
rorl
mov
mov
adc
repz
clc
cmp
sub
or
fadds
ret
add
jg
push
pop
pop
orl
lea
push
pushf
ret
fisttpl
xchg
and
add
data16
repnz
loopne
mov
dec
or
xchg
or
subb
add
adc
mov
cmpsb
mov
and
loop
push
insl
les
push
stos
inc
push
repz
mov
sbb
or
sbb
aas
faddl
xlat
shlb
stos
test
scas
pop
dec
add
mov
jg
roll
je
sub
or
cli
dec
xchg
dec
leave
bound
out
cmp
js
cmp
jb
mov
in
fwait
xchg
cld
mov
mov
stos
sarb
lret
mov
mov
mov
and
inc
lock
aaa
in
scas
loopne
and
pusha
cltd
notl
xlat
les
mov
sub
icebp
add
bound
dec
hlt
out
insl
bound
sbb
and
or
cld
mov
add
mov
ja
sarl
cmpsl
cmpsb
test
jmp
mov
int
lret
mov
adc
push
pop
jle
mov
mov
repz
pop
in
pop
pop
add
xchg
ret
cmpsl
mov
lds
ret
push
fbld
mov
testb
loopne
fsubs
add
sub
ja
lods
stos
push
push
es
jp
jb
push
jnp
ficomps
xchg
mov
data16
add
adc
lock
lcall
mov
mov
aad
and
push
outsl
sar
cmp
setl
push
cmpl
mov
mov
jnp
in
out
xor
lds
pop
and
fisubrs
push
jecxz
mov
adc
std
insb
sbb
mov
push
nop
jmp
out
or
pop
sub
cmp
sub
mov
fldenv
jle
jecxz
sub
cmc
mov
test
mull
ss
nop
loop
ret
aad
mov
lret
stos
push
aad
mov
mov
loopne
cli
out
xchg
fcoms
sub
and
loop
jmp
pop
xchg
int3
add
iret
imul
lret
stc
nop
cmpsl
outsl
stc
test
xor
inc
rcrb
inc
fidivrs
jp
or
cmc
pop
xor
lds
xor
cmp
sbb
inc
sti
mov
mov
enter
aas
insl
ljmp
push
int
mov
lods
add
dec
rclb
pop
ret
ret
lods
adc
popl
xor
add
jmp
sbb
sbb
jb
xchg
mov
dec
inc
testl
int3
mov
mov
test
and
iret
and
push
and
push
out
arpl
adcb
hlt
sub
jp
xorb
fwait
sub
scas
insl
push
shl
jne
or
cmpl
out
je
lea
fidivrl
out
ss
pop
jmp
mov
sub
shlb
add
pop
mov
in
add
insl
mov
cld
adc
rclb
pusha
addl
cs
sbb
xchg
mov
js
cwtl
je
mov
dec
sahf
lret
lcall
xchg
jl
enter
add
fs
and
loop
or
sbb
pop
adc
loop
cmpsl
inc
xchg
sbb
aad
test
xor
sbb
mov
fldt
sub
mov
shll
movsl
insl
jle
mov
and
xchg
adc
dec
out
jbe
fiadds
cmp
movl
rcr
mov
aaa
jge
sub
mov
cmp
mov
mov
and
xchg
xor
sbb
and
mov
jb
gs
mov
cmp
xchg
cmp
ficomps
pop
xchg
push
mov
fistl
dec
cltd
daa
in
push
push
aam
enter
out
xchg
arpl
mov
bound
in
adc
fsts
push
loope
or
out
pusha
sub
insb
scas
out
or
sbb
push
out
rcll
nop
pushf
or
imull
add
ret
aad
or
rcr
pop
fs
and
mov
mov
and
xchg
xor
lret
lods
mov
outsb
aad
dec
ja
mov
call
loope
cmp
push
insl
outsb
mov
aas
xorl
sbbl
mov
mov
cmc
test
into
fs
sahf
leave
jne
int3
and
repz
pop
and
mov
es
add
stos
fdivl
mov
rcrb
pop
jecxz
cmpsl
les
sbb
mov
mov
ja
sahf
into
add
push
mov
mov
add
adc
bound
scas
imul
adc
xchg
jle
jle
dec
pop
insl
cmpsl
mov
cmp
es
popf
jmp
scas
sub
test
out
scas
gs
sub
mov
xor
or
lcall
mov
mov
rolb
repz
mov
dec
sbb
mov
into
loopne
dec
sbb
rcll
movswl
jbe
je
add
pop
ljmp
lcall
jns
or
adc
xchg
push
addr16
and
cmp
sub
loop
cmp
js
clc
in
push
rcll
push
push
out
insl
push
lds
lret
dec
mov
mov
mov
mov
icebp
push
adc
in
out
mov
xorb
popf
outsl
lea
push
testl
xchg
xchg
aaa
or
adc
push
push
lret
mov
fwait
bound
lock
xor
cmpsl
ja
mov
pop
xchg
shll
mov
xchg
pop
inc
add
sub
pop
cmp
fistpl
cmp
xor
xchg
cmpsb
push
mul
aaa
push
jbe
addl
cmp
notb
inc
mov
add
pop
push
mov
pop
dec
add
adc
test
adc
sahf
int3
cmp
pop
nop
movsb
xchg
jbe
cli
mov
and
lock
push
imul
jmp
xor
sub
inc
adc
jno
iret
push
bound
or
jns
cmp
and
and
cmp
das
sub
scas
rclb
push
int3
xor
mov
mov
mov
add
pop
outsl
or
jg
mov
mov
cmp
dec
rol
mov
pop
jno
gs
push
pop
cmpb
or
fdivrs
hlt
mov
mov
or
pushf
in
mov
mov
jg
add
push
and
sub
inc
add
mov
inc
push
add
inc
xor
adc
test
sub
imul
popf
dec
mov
mov
inc
cmpsl
les
and
adc
pusha
push
adc
push
mov
test
dec
ficompl
aam
xor
out
sbb
adc
mov
cld
ret
dec
mov
xchg
insl
adc
movsb
dec
mov
test
pusha
cmp
add
int
dec
test
shrb
movsb
xchg
fstp
and
in
imul
jnp
push
mov
pop
out
ljmp
sbb
in
add
sub
sbb
addr16
and
aas
andb
repz
sbb
sub
inc
push
pushf
inc
mov
jb
and
push
pop
pop
sbb
mov
jecxz
cmp
push
jg
out
nop
push
stc
jno
mov
xchg
push
bound
pop
sub
or
outsl
sbbl
lods
inc
add
stos
lods
out
es
dec
lret
push
cmc
aaa
pop
and
cmp
mov
aaa
lcall
mov
lds
or
hlt
inc
popa
adc
mov
jmp
call
cmpsl
pop
mov
leave
into
je
pushf
or
lea
lcall
fildll
test
jecxz
mov
jb
mov
stc
mov
or
adc
shrb
shrb
push
and
inc
loope
out
loopne
lds
sahf
enter
outsb
stos
inc
clc
fisttpll
loop
xchg
mov
sub
movsl
xchg
and
in
xchg
scas
dec
push
sbbb
imulb
int
loop
pop
jg
rcll
ja
jnp
mov
dec
mov
ret
sub
mov
push
xchg
pop
lret
iret
arpl
rcrb
fildl
push
sbb
mov
sti
jo
jg
fldln2
inc
xor
jns
jge
je
pop
mov
jmp
pop
and
push
js
insb
sbb
das
pop
fwait
into
inc
mov
shll
mov
push
test
push
std
loope
inc
lret
or
sub
xchg
cwtl
lret
or
push
aas
sub
or
in
js
xchg
std
push
imul
jns
cmp
sub
lock
fstps
in
push
adc
add
add
movsl
pop
lods
jge
and
xchg
push
rclb
ja
and
push
int
cmp
and
xchg
mov
rcll
push
sub
pop
int
daa
sbb
fcoms
adc
mov
xchg
jecxz
aam
push
shlb
and
or
adc
mov
sub
enter
mov
call
inc
scas
call
mov
mov
daa
dec
arpl
sbb
stos
push
sub
sub
fs
dec
nop
pop
mov
adc
sub
stc
mov
out
gs
scas
cmp
add
cmpsl
add
mov
jbe
add
or
mov
sbb
jnp
gs
imul
pop
mov
add
enter
mov
int
mov
in
fdivr
pop
sbb
jns
das
nop
lahf
and
adc
xlat
movsb
fdivr
or
cmp
loopne
add
das
ret
xor
sub
push
xor
mov
test
jl
inc
fimull
imul
and
adc
xchg
popl
jae
hlt
lahf
ficomps
pop
mov
jne
adc
jns
add
inc
mov
dec
inc
pop
pop
cs
xor
insl
lods
iret
rorb
adc
add
adc
in
sub
jne
xor
mov
cli
and
iret
push
sub
xchg
push
or
cmp
push
push
imul
enter
mov
xchg
arpl
mov
mov
mov
mov
int
leave
and
push
sub
test
enter
inc
sub
lea
adc
xlat
lret
pop
aad
out
les
mov
iret
incb
std
jle
adc
or
neg
and
ljmp
je
mov
cwtl
mov
pop
pop
mov
or
xor
out
and
rcll
out
int3
cmp
cmpb
jmp
sbb
sbb
mov
fwait
add
or
and
ja
lds
ljmp
mov
jb
negb
call
insl
add
int3
fmuls
outsb
lea
xor
fwait
out
js
xor
testb
cmp
shll
xchg
fnstcw
pop
cmpsl
add
scas
ljmp
push
add
mov
dec
in
sub
adc
and
cli
out
adc
cmpsl
cmpb
pop
loope
rclb
jg
pop
sahf
cld
loope
xor
repz
inc
pop
dec
pusha
mov
popf
in
das
cwtl
dec
iret
stos
push
aas
pop
iret
push
enter
and
inc
addr16
or
cltd
jp
adcl
cli
std
out
inc
imul
movsb
int
or
xchg
call
pop
lea
imul
or
dec
aam
in
xor
idivl
std
add
hlt
push
loope
les
rol
jne
mov
lret
mov
loop
push
cmpsl
xchg
fwait
ret
or
js
cmpsb
sbb
adc
jae
ss
lea
repnz
jecxz
and
ljmp
inc
bound
mov
sbb
dec
test
sub
push
int
push
xchg
jns
sub
adc
icebp
and
mov
push
add
xlat
sub
shll
mov
ja
mov
sbb
jl
ret
pop
sbb
insl
or
popf
movsl
dec
pop
incl
lds
push
add
pop
inc
pop
sbb
shrl
mov
push
lret
ficomps
push
jecxz
hlt
scas
add
movsb
sbb
ret
aam
cmp
cld
outsl
sub
cmp
cltd
sub
dec
push
sub
cmpsb
mov
cmc
push
adc
imul
sub
add
cmp
xlat
sbb
repz
incb
dec
int3
mov
popa
dec
dec
cli
or
xchg
dec
movsb
loopne
divb
push
aam
fwait
movsb
int
jl
inc
xor
mov
stc
cmpl
or
lea
add
inc
hlt
loop
std
incb
mov
dec
jae
js
xlat
popf
fildl
testb
pushf
mov
push
out
pop
sbb
cwtl
imul
hlt
icebp
sti
xor
push
pop
js
daa
inc
and
pop
adc
mov
lea
outsb
mov
outsb
mov
pop
outsb
dec
ja
mov
inc
push
gs
dec
and
mov
adc
scas
inc
aam
addb
call
cli
int
in
cmp
data16
testl
xor
xor
or
xchg
in
inc
es
xchg
clc
jae
sbb
cmp
pushf
or
shrl
in
jp
rcrb
stc
shrl
sub
mov
cmp
jmp
movb
push
outsl
or
hlt
arpl
js
pop
jb
adc
jne
aas
and
pusha
std
inc
std
ja
mov
out
mov
repnz
push
int
aas
fwait
cmp
push
push
xor
jae
jge
fdivl
sahf
arpl
inc
aaa
insb
int
dec
xchg
xor
mov
shlb
ds
or
pop
inc
jl
xlat
outsb
mov
sbb
xchg
sub
orb
imul
in
fbstp
adc
rsm
mov
ja,pn
mov
in
loop
xor
fnstcw
mov
jae
movsb
ss
jmp
cwtl
cmc
push
hlt
movsl
lods
pop
inc
iret
mov
cld
add
mov
sahf
pop
sbb
je
sub
sub
mov
cmovg
imul
xchg
stos
add
push
mov
or
mov
aaa
cmp
movsl
xor
fwait
add
sub
dec
cmc
add
pop
call
out
xor
pop
inc
cmp
pop
sbb
cli
mov
ret
rolb
es
dec
cmp
ljmp
movsl
ret
sbb
test
ss
sub
cli
push
lds
in
lret
or
push
mov
inc
mov
mov
scas
inc
sahf
hlt
imul
jge
push
aas
add
inc
pusha
in
xor
fldlg2
cmp
jecxz
push
sbb
stos
mov
cmpsl
and
rcrl
ret
aam
daa
std
stos
ds
popa
xchg
icebp
inc
nopl
fildl
ss
mov
inc
bnd
addr16
or
fwait
test
sbb
push
daa
pop
mov
popf
xchg
sbb
xor
inc
jno
mov
cmp
jb
pusha
popa
xchg
push
mov
or
sbb
pop
mov
aaa
mov
xchg
shlb
loopne
pop
add
mov
sahf
add
ss
aas
sti
sbb
pop
rorb
das
jmp
xor
inc
int3
mov
jnp
leave
xor
cmpsb
cmp
dec
mov
fcomi
add
pop
inc
pop
cmp
pop
movnti
lods
sub
int
add
cmpsb
push
push
jle
nop
cmp
lahf
daa
and
das
mov
pushf
hlt
mov
out
xchg
mov
inc
cmpsl
pop
leave
mov
cli
and
aas
fimuls
test
std
push
arpl
dec
insb
push
fwait
sbb
out
aaa
outsb
dec
in
xchg
addl
add
mov
cmp
cli
and
xorb
or
xor
sbb
mov
push
mov
aaa
ret
sarl
ret
sbb
push
movsb
mov
imul
sar
mov
fisubrl
jle
movsl
sub
dec
mov
push
add
or
pop
jmp
outsb
stos
scas
in
mov
adc
adc
xor
dec
cli
outsb
out
lret
jnp
shll
sub
mov
out
jl
add
loopne
add
aas
mov
pop
xchg
addb
pop
popa
or
out
out
mov
pop
pop
je
pop
es
es
mov
xchg
test
or
push
push
in
lret
and
or
inc
mov
cmp
loope
gs
jae
mov
std
jbe
mov
inc
jp
lds
pmuludq
hlt
nop
rorb
call
data16
aaa
pop
ret
sub
test
mov
push
jnp
push
dec
jecxz
xlat
ljmp
pop
rorl
addr16
cmpsl
lds
sbb
out
jg
mov
jno
inc
daa
cmpb
pop
mov
cmc
mov
imul
cmp
sbb
jns
fnstsw
je
xchg
fimuls
adc
jne
fcmovnb
or
iret
fs
cmp
pusha
sbb
fdivl
add
push
xchg
popf
cwtl
mov
mov
mov
in
popf
lods
push
jns
fstps
lret
mov
int
fsts
test
rorl
fldt
loopne
mov
pop
bound
stc
jle
inc
orb
out
adc
dec
sbb
add
push
pop
lods
iret
push
dec
jne
xor
sub
cmp
mov
popa
xchg
xchg
enter
lock
mov
nop
inc
push
rorb
push
mov
sub
rolb
jo
sub
xlat
jmp
mov
or
cmpsb
dec
clc
notl
push
xchg
jb
in
call
call
outsl
pop
xchg
loopne
sub
jmp
sub
mov
in
into
cmp
mov
ds
mov
cmpl
xchg
jg
sub
js
mov
xor
scas
dec
mov
inc
out
jg
dec
adc
jmp
mov
dec
push
jae
mov
sub
cwtl
subb
ror
jp
sti
add
das
sub
jmp
mov
push
test
mul
vmovups
rcl
movsb
mov
inc
mov
pop
mov
rclb
adc
jge
mov
bound
jle
pushf
sti
iret
fimuls
pop
mov
loopne
mov
in
hlt
xchg
and
int3
or
xchg
mov
xchg
out
xchg
add
cmp
js
fildll
dec
xchg
mov
scas
mov
xor
xchg
push
add
aam
mov
in
xor
out
call
imul
fstpt
loop
cmpsb
inc
sahf
mov
lods
fimull
dec
xlat
ljmp
jl
orl
lahf
out
mov
addr16
movsl
js
scas
or
repnz
daa
negl
mov
jp
loopne
aam
gs
mov
cmp
in
popf
orb
cmp
push
inc
insl
dec
scas
pop
scas
or
xchg
pushl
popa
sti
jle
xchg
jecxz
inc
lods
mov
js
addr16
cmova
test
leave
rcll
mov
in
xor
movsb
fsts
sub
jg
cmp
cmp
lcall
iret
aam
xchg
and
repnz
xchg
insb
test
js
aaa
mov
repz
imul
xchg
xchg
call
jg
cmp
nop
aaa
dec
mov
mov
outsl
xchg
adc
dec
movl
push
inc
cmp
mov
sti
xor
and
push
or
xchg
inc
inc
inc
lea
adc
mov
pop
out
into
leave
mov
dec
rcll
rcrb
and
icebp
jo
push
lods
cmp
testl
push
rcr
out
sbb
push
and
jno
xor
inc
pushf
js
adc
outsl
repnz
cmpsl
test
scas
mov
jbe
and
sbb
popa
pop
xlat
mov
mov
or
xchg
add
adc
std
punpckhbw
cltd
lods
pop
dec
stos
xor
adc
pop
push
sub
movsb
scas
ret
jge
mov
test
out
or
mov
ljmp
push
add
xor
sbb
stos
or
jmp
sbbl
adc
fstpt
inc
and
pushf
cmp
in
or
sbb
mov
add
pusha
or
mov
movsb
pop
sti
sbb
outsb
stos
dec
pop
leave
je
mov
adc
xchg
cltd
xchg
jecxz
data16
lds
fdivs
cmp
cmp
xchg
add
xlat
cmc
push
cltd
cmpsl
mov
sbb
and
cmp
mov
daa
std
adc
add
roll
repz
scas
jne
mov
inc
pop
ds
xlat
mov
inc
ss
adc
mov
fadds
and
in
sbb
dec
scas
hlt
and
or
in
je
sub
js
outsb
dec
xchg
adc
jne
cmp
jae
fistl
mov
int3
add
lcall
bswap
push
loope
fisttps
adc
das
jb
stos
add
pop
ret
mov
shl
test
mov
adc
nop
add
add
sbb
jbe
pop
xchg
scas
test
push
les
dec
inc
imul
cltd
xchg
cmp
dec
loop
roll
dec
push
xlat
in
jo
insl
mov
js
pop
cmp
push
lods
or
nop
lcall
je
lods
jmp
int
and
scas
inc
and
sbb
icebp
repz
xchg
popf
mov
xchg
and
jl
add
int3
xor
and
arpl
inc
shlb
dec
dec
out
jno
sub
push
divps
xchg
jbe,pt
and
mov
xchg
cwtd
loop
push
add
inc
jbe
in
aas
dec
int
mov
gs
dec
xor
pop
loope
push
mov
adc
data16
add
scas
mov
mov
lods
fadds
push
icebp
loopne
pop
lods
and
int3
mov
psrlw
xchg
or
enter
mov
icebp
test
in
movsb
divb
jae
lahf
mov
jle
pop
pop
mov
xor
ss
cmpsb
dec
repz
push
xor
push
sbbl
push
pop
lods
xor
movsb
inc
sub
in
mov
aad
clc
and
or
push
shr
daa
cwtl
mov
and
rol
pop
popa
lret
lcall
jl
sub
popa
lret
mov
jmp
data16
ret
add
push
sub
mov
inc
test
add
mov
shrb
mov
rcrl
mov
das
pusha
add
sbb
push
ret
ret
shll
dec
rcr
push
add
jne
mov
popf
aas
clc
loopne
jns
enter
push
bound
cli
fbstp
mov
mov
sbb
lret
sub
int3
sbb
jnp
cmpsb
imul
fadds
scas
and
dec
mov
jno
adc
loop
jecxz
sarb
jge
cmp
pop
shlb
ss
xchg
mov
loope
add
out
iret
xchg
pop
add
stos
cmp
imul
inc
out
and
sub
test
arpl
fisttps
cld
mov
sahf
mov
loope
or
lcall
iret
xlat
in
pop
ds
and
cmp
loope
pop
inc
push
sti
mov
sbb
out
repz
mov
inc
ficomps
mov
aaa
loopne
push
dec
inc
out
orl
push
mov
cwtl
fs
mov
sbb
rolb
xor
call
cmp
nop
adc
rorl
jne
jno
and
or
cmp
inc
mov
cwtl
jmp
mov
adc
jmp
sbb
outsb
cs
mov
inc
xchg
dec
insl
pop
pop
lea
das
jg
xchg
mov
pop
cli
sti
mov
jmp
adc
in
movsl
js
mov
std
rorb
fmuls
outsb
aaa
sti
pop
sbbl
or
add
sub
mov
pushl
mov
push
xlat
pop
lea
out
ret
xchg
mov
les
mov
fs
xchg
arpl
jmp
sub
aad
mov
int
adc
sahf
pop
sahf
xchg
cmp
int3
add
pop
cwtl
ficoms
repnz
xchg
ljmp
out
mov
lock
cmpsb
leave
arpl
test
or
mov
ljmp
ret
xor
cli
cmp
xor
test
sbb
and
or
lahf
insl
lds
pop
arpl
sbb
sbb
das
shlb
jmp
repz
add
pop
scas
jp
push
testl
mov
in
loope
mov
xchg
and
inc
test
popa
sbb
push
sbb
loop
lds
xor
xchg
push
mov
cli
mov
xor
push
adc
notl
jae
cwtl
adc
mov
jae
mov
pushf
mov
dec
jg
push
mov
jae
int
pop
ds
cmp
popa
xchg
das
or
fldl
jno
into
lock
addr16
mov
pop
pop
adc
jp
sti
addb
sbb
dec
mov
ret
xchg
inc
mov
xor
inc
loope,pn
cmp
testl
stc
aaa
push
movsb
xor
xorb
jb
or
sub
xchg
inc
sub
dec
adc
adc
ja
cwtl
mov
fs
push
cld
fisttpl
inc
or
adc
cwtl
cmp
cs
hlt
mov
push
cmp
mov
push
mov
stos
imul
js
rclb
adc
push
ror
mov
or
mov
add
push
data16
loopne
ret
fisttpl
push
adc
sub
mov
xlat
sahf
std
movsl
add
pshufw
or
dec
icebp
xor
inc
aad
cmp
andb
icebp
dec
inc
inc
ja
pusha
jle,pt
ror
cmpsl
mov
and
pop
sub
mov
pop
movsb
int3
cmpsb
lods
hlt
xchg
mov
adc
xchg
dec
push
jmp
leave
fs
ss
inc
jnp
push
jae
fildll
pop
or
xor
cmp
icebp
fmulp
jo
dec
lods
mov
test
lods
das
setns
insl
cmp
jns
pop
sbb
dec
cmc
cmp
repz
into
xchg
fstp
icebp
fldcw
fidivrs
ret
hlt
pxor
mov
cmp
in
jecxz
mov
inc
xor
add
iret
pop
adc
data16
jae
aaa
xchg
and
insb
jbe
fcompl
outsb
clc
stos
ret
aas
sbb
inc
dec
or
xchg
and
cmp
mov
fidivl
addb
cmp
adc
push
cmp
dec
sar
add
gs
jp
pop
pop
jg
int3
int
pusha
mov
lea
lret
pushf
pusha
cwtl
mov
jbe,pt
or
into
pop
xor
fwait
repz
xlat
push
stos
pusha
mov
repz
adc
mov
xor
ret
mov
jl
xchg
cmp
mov
shll
or
jp
adc
cmp
dec
sbb
je
hlt
xchg
inc
cmpsb
hlt
enter
out
or
push
cmc
push
jb
lock
pop
stos
bound
jl
push
cld
sub
cld
mov
repz
dec
push
test
jge
scas
in
pop
aad
hlt
mov
push
les
popa
pop
or
test
cmp
fwait
push
movsb
add
inc
and
cmp
jmp
ficoms
jbe
inc
push
cmp
dec
ja
xor
dec
call
and
pop
inc
cmp
fwait
inc
into
cmp
inc
xchg
lret
movsb
repnz
mov
add
push
data16
push
fsubs
and
rcrl
push
mov
scas
lods
outsb
dec
dec
pop
xor
sbb
fwait
dec
lcallw
imul
dec
cmp
dec
push
scas
add
dec
cmc
mov
dec
cmp
ret
mov
sbb
adc
and
movsl
jo
jne
fcmove
or
mov
inc
std
jo
mov
inc
cli
repz
fnstenv
inc
cwtl
xchg
sub
and
testb
jge
jmp
pusha
jo
xchg
iret
je
mov
rcll
popa
test
in
mov
divb
sarl
shl
mov
sbb
popf
xchg
add
test
ljmp
jge
test
push
dec
add
dec
xchg
mov
lret
cli
aaa
cli
inc
ret
dec
bound
mov
movsb
je
pop
pop
rolb
std
xchg
and
adc
push
shll
rolb
hlt
jle
dec
lcall
test
dec
dec
jg
add
ud0
or
sub
bound
lcall
inc
or
push
repnz
mov
call
imul
sbb
and
xor
int
fstpl
mov
negb
jl
sbb
stos
ret
adc
dec
scas
xchg
lods
mov
dec
pop
clc
pusha
jae
mov
lcall
sbb
pop
pusha
ss
xor
dec
push
pop
bndldx
dec
sahf
pushf
or
movl
pop
movsb
sbb
fnstsw
push
fwait
jg
dec
adc
jo
add
fisttpl
bound
pop
push
icebp
vcvtsi2ssl
in
and
inc
cmc
mov
lock
jbe
inc
cmp
adc
jb
mov
push
cmp
adc
dec
gs
pusha
test
repnz
loop
test
cltd
mov
cmc
mov
jno
aam
test
lods
add
sub
push
iret
rcl
pop
jge
popa
lcall
push
ficompl
inc
cmp
fmull
outsl
dec
push
sarb
push
out
dec
pushw
jb
adc
pushl
inc
adc
jno
pop
dec
aad
repz
push
aam
cmp
in
subl
scas
sub
lock
xor
out
sar
aam
and
mov
insb
mov
mov
and
test
cmpsb
rclb
popf
mov
adc
or
sbb
stos
and
or
mov
mov
mov
loopne
adc
pushf
stos
mov
mov
xor
and
cmpsb
scas
clc
push
push
daa
xchg
push
cmp
cmp
bound
popa
jecxz
push
adc
mulb
lea
pop
popa
mov
lds
xchg
jae
stos
mov
xlat
or
add
sti
aam
data16
inc
lcall
push
adc
out
xchg
and
mov
fbstp
imul
xchg
mov
call
pop
call
xor
mov
pop
cmpsb
js
bound
add
dec
and
xchg
mov
xchg
pop
push
mov
mov
inc
mov
push
fistpl
andl
lret
js
jcxz
jns
push
cs
pop
inc
xchg
sub
loope
cmp
inc
cmp
lea
jl
js
scas
xchg
jae
inc
sahf
mov
xlat
jne
xchg
aaa
je
ret
lods
mov
outsb
inc
xchg
push
xchg
test
jmp
sbb
xor
cmp
jno
mov
int3
or
arpl
xorb
push
mov
push
ficoml
jb
sub
mov
out
rcrl
inc
cmp
pop
sarl
sbb
xchg
push
mov
mov
cs
addw
repz
mov
mov
add
mov
mov
dec
test
or
push
movsb
xchg
dec
mov
repz
and
adc
adc
cmpsb
sbb
imul
inc
sub
adc
iret
aas
lock
les
into
xor
inc
dec
push
ja
daa
add
xchg
inc
ret
and
adc
push
sub
hlt
rol
push
xor
jl
pop
dec
mov
mov
adc
sarb
xchg
xor
jb
sarb
inc
lahf
cbtw
cmpsl
push
rol
xlat
arpl
add
jecxz
lret
push
fs
mov
xor
lods
jg
aaa
and
or
push
sbb
les
das
loop
in
cmc
xor
push
mov
int
scas
mov
pop
call
fsubs
pop
shrl
je
xchg
push
xchg
mov
lahf
es
ljmp
cwtl
dec
mov
pop
push
jmp
add
mov
std
xor
std
clc
rolb
fsubs
cmp
rolb
ficompl
lret
xchg
cmpsl
stc
fstpt
mov
pop
rolb
mov
lock
rcr
xor
mov
dec
jne
popf
out
xchg
test
xchg
sub
gs
adc
out
pop
lahf
mov
fists
lods
mov
aam
push
mov
ja
dec
mov
cmpsl
ficompl
dec
dec
cltd
lods
mov
pop
cmp
aaa
push
cwtl
push
pusha
sub
xorb
aad
cli
and
pop
insb
and
cmp
cs
xchg
sbb
cmpsb
imul
inc
xchg
movsl
xor
dec
scas
jmp
mov
ss
push
pop
lret
xchg
sarb
push
jae
lcall
out
push
jo
push
or
xor
inc
cmc
dec
sbb
and
daa
add
addl
sahf
pop
in
inc
daa
stos
sub
pop
mov
into
mov
fcompl
jae
dec
leave
popf
stos
enter
stos
fnstcw
test
ret
cmp
inc
mov
add
shlb
jg
jnp
sti
jecxz
adc
lock
test
cmpsl
js
add
pop
push
jbe
cli
push
pop
loopne
push
sbbl
cmp
pop
dec
mov
les
push
push
ret
xor
jns
orl
xlat
addb
test
adc
xchg
mov
inc
lods
or
fcomip
enter
xchg
stc
or
in
mov
pop
mov
cmpsl
fcom
mov
mov
add
xor
jge
test
cmp
push
jb
shl
sub
out
out
sub
and
push
jbe
test
sub
lret
lods
subb
jmp
lock
gs
imull
mov
jne
inc
test
push
sub
dec
or
sarl
pusha
mov
pop
pop
addb
les
mov
jmp
mov
mov
xchg
fistps
iret
inc
adc
xchg
stc
rcrb
and
inc
adc
xchg
sbb
dec
sbb
leave
cmp
les
cmpsl
insl
adc
mov
enter
ss
insl
pop
push
or
jb
fs
ss
dec
mov
adc
xor
mov
ss
inc
add
or
addr16
adc
jge
add
or
mov
pcmpeqd
sbb
leave
mov
int3
push
out
jnp
gs
std
icebp
loope
lock
jno
arpl
push
add
imul
and
pop
mov
mov
xchg
adc
dec
outsb
cmpsb
push
xchg
pop
mov
orb
repz
sub
pop
or
xor
push
addr16
jl
stos
xchg
add
xchg
inc
adc
fisttpl
dec
cmpsb
push
insl
sub
clc
dec
subl
inc
pop
add
out
in
cmp
fisttps
push
jno
adc
and
enter
inc
dec
push
fbstp
ret
adc
std
jp
pop
add
mov
movsb
jo
repnz
sub
mov
inc
enter
nop
ds
pop
dec
xchg
pop
insl
adc
dec
cmp
mov
jae
mov
add
pop
cmp
or
cltd
repz
out
out
dec
scas
cld
mov
mov
push
imul
cmp
ja
adcb
adc
inc
out
xchg
in
stos
in
pushf
sahf
pop
pop
addl
bound
xor
mov
adc
pop
xchg
popa
loopne
push
push
sarb
test
cmpsb
loop
push
movb
mov
mov
sbb
js
fldcw
push
adc
sbb
adc
mov
mov
nop
sub
in
jns
or
ja
or
stos
scas
mov
test
sub
jbe
roll
sbb
sahf
cli
lods
push
fsts
sar
inc
aaa
iret
stc
push
out
cmp
enter
hlt
lret
test
jns
fwait
outsb
or
cmp
in
mov
cmp
neg
jg
mov
outsb
addl
repnz
adc
xchg
adc
push
arpl
lret
sbb
arpl
sub
loop
sbb
cld
sub
jge
scas
adc
add
cmp
leave
and
data16
mov
sahf
add
mov
dec
lods
and
jecxz
mov
dec
sbb
mov
dec
jbe
push
cwtl
cmp
add
call
loopne
mov
cli
mov
mov
loop
pop
mov
stos
lret
jo
inc
pop
dec
adc
gs
inc
subb
les
jl
xor
aam
ret
lods
mov
mov
sbb
mov
test
sub
pop
mov
rolb
outsb
push
jbe
jo
mov
cltd
mov
jnp
dec
or
lock
test
add
repz
and
mov
lcall
dec
cld
sarl
fcmovu
stos
sbb
jmp
cwtl
inc
mov
add
inc
faddl
mov
push
or
jmp
adc
dec
or
cwtl
xchg
outsb
mov
ss
mov
jge
add
inc
mov
dec
mov
add
cltd
inc
xor
iret
idivl
stos
aam
jle
and
shl
adc
or
lods
lahf
packuswb
js
arpl
inc
fstpl
and
dec
repnz
repz
inc
inc
in
jle
add
dec
dec
inc
cmc
adc
mov
int3
mov
lahf
xchg
arpl
mov
nop
mov
xlat
int3
cltd
mov
ss
rcrb
adc
aas
scas
dec
test
dec
std
dec
stc
loop
and
push
daa
lock
or
mov
push
fsubrl
lret
mov
dec
inc
into
test
xor
add
jmp
leave
std
cmpsb
lcall
fimull
ret
ss
fcomps
pop
adc
decl
add
push
fcoms
out
xor
push
pusha
movsb
rclb
into
or
ja
xor
test
and
fnstcw
add
aas
js
mov
mov
jle
mov
lcall
out
repz
out
les
int
dec
mov
test
pop
loop
in
int3
sar
push
lock
cld
push
xchg
xor
push
fisubrl
and
stc
and
lahf
or
cmp
push
ret
pop
inc
mov
test
mov
lds
push
pop
popa
sub
sub
loopne
icebp
xchg
movsl
loopne
cltd
cmpsb
lds
xchg
sarl
andb
dec
out
mov
incl
daa
sbb
or
sbb
mov
out
sub
sub
popa
mov
test
and
punpckhwd
inc
insl
jne
sbb
xchg
push
mov
rcr
ficompl
cld
insb
adc
inc
xor
and
mulb
stos
ja
adc
ja
add
push
sub
jne
repz
add
add
ret
cli
int3
adc
lahf
pushf
flds
mov
cmpsb
shrl
and
repz
aam
sub
mov
lds
mov
scas
inc
jmp
jle
je
lcall
nop
push
mov
push
inc
and
xchg
sub
jl
inc
sub
movsl
icebp
mov
aam
jb
lcall
test
jecxz
pop
in
sbb
xlat
push
add
mov
test
mov
arpl
inc
jmp
push
pop
aam
dec
scas
or
cmc
jno
sbb
cmpsl
xchg
cmc
mov
lret
jne
subb
and
fldenv
inc
mov
jle
cmp
subl
fnstsw
push
dec
int3
mov
data16
lods
xchg
and
push
repnz
sub
mov
outsb
ja
shr
shr
mov
pop
xchg
pop
rorb
jbe
movsl
popa
into
xchg
xchg
sub
jmp
sub
or
sub
pmulhuw
test
fldl
pop
or
testb
adcb
mov
mov
xchg
or
int3
lods
inc
fdivs
push
fildl
jo
xor
mov
pop
jb
pop
push
add
push
imul
sub
loopne
imul
in
mov
push
int3
aas
std
fcomip
dec
ret
out
test
loopne
int
fsts
dec
lahf
inc
pop
and
jmp
subb
in
mov
jb
pop
xor
add
jo
cmp
cmc
push
fstpt
imul
dec
test
and
mov
sub
xor
adc
adc
and
mov
cwtl
add
or
outsl
inc
sbb
ds
sbb
movl
dec
xchg
ffree
addr16
jmp
xor
mov
leave
dec
mov
xchg
cmp
or
adc
popa
sub
test
loope
xlat
push
loope
rcrl
adc
je
xor
imul
and
stos
ds
add
add
test
pop
jl
xchg
or
scas
data16
pop
clc
leave
addr16
mov
cmp
dec
sbb
bound
decl
cmpsb
jns
adc
mov
js
push
cli
test
pop
lahf
mov
into
adc
popa
pop
or
and
fnstcw
loopne
mov
mov
pop
aad
xlat
movsl
mov
push
cs
ret
cld
mov
in
imul
push
cs
ret
jnp
lret
in
xor
push
scas
add
push
nop
ret
dec
sahf
lret
fsubs
aaa
test
movsl
push
mov
dec
mov
or
xchg
ss
sub
and
fsubl
cmpsl
pop
mov
fisubs
insl
pop
test
pop
mov
jno
and
jl
repz
popa
fwait
cmpsb
shrb
out
mov
sub
pop
xchg
aaa
rolb
movsb
or
add
push
xchg
shr
das
cmp
mov
js
pand
rcl
nop
xchg
mov
push
stos
in
xor
sub
aad
push
sbb
test
mov
test
in
mov
fimull
dec
mov
sarl
xor
mov
and
shlb
imul
lcall
mov
dec
lods
dec
lock
pop
int3
mov
dec
xchg
mov
fadd
xchg
ret
lock
mov
arpl
xorb
and
sbb
xchg
xor
rclb
mov
sbb
pop
mov
adc
add
xlat
les
xchg
addr16
mov
jp
cmc
lahf
mov
pushf
andl
dec
out
andb
xor
lea
mov
icebp
in
add
xor
or
xor
cmp
movsb
lods
push
jmp
in
jae
jne
push
lret
dec
sub
mov
lret
rcr
xor
inc
loope
popw
adc
adc
fmuls
mov
inc
lret
xchg
push
jb
mov
sub
mov
fdivrs
std
sar
jmp
rcll
das
nop
outsb
dec
inc
push
repz
xlat
cmp
mov
jb
or
stos
ja
mov
jbe
fldl
pop
adc
mov
lods
add
popa
xor
enter
daa
jne
pop
mov
lock
mov
fsubrl
or
arpl
sbb
clc
and
es
push
test
dec
dec
adc
or
mov
sbbb
mov
lods
jmp
mov
dec
das
or
push
mov
insl
orl
pop
and
push
and
mov
cmpsb
fmull
xor
or
xor
jg
or
jbe
stos
imul
dec
sbb
test
orb
xor
lahf
and
pop
adc
pop
xchg
xchg
or
cs
popa
cs
inc
mov
xor
mov
jle
inc
xchg
fidivs
push
cli
ja
sti
cs
in
lret
std
jle
enter
jmp
pop
rorl
pop
jge
or
stc
push
cltd
push
mov
push
cmp
pop
out
fildl
xorb
and
or
ficompl
stos
dec
pop
sti
popf
outsb
mov
cmc
outsb
orl
ljmp
mov
incb
inc
dec
push
xchg
or
xchg
cli
add
cmp
fcoml
sbb
rcrl
jno
pusha
and
sti
enter
lret
jg
mov
dec
stc
aad
sbb
jo
and
xor
dec
sbb
mov
imul
jmp
dec
pop
nop
push
cmp
jb
hlt
mov
in
push
addb
nop
or
pop
pop
subl
cs
aad
outsb
in
lahf
movsl
lret
bound
xchg
shll
xchg
push
scas
into
jge
negb
jns
xchg
int3
pop
orl
push
adc
inc
pop
repz
insb
mov
mov
mov
in
add
call
fisttpll
inc
jge
cmc
ljmp
test
push
pop
cmpsb
cmp
push
inc
adc
xchg
call
add
jbe
aam
rorl
jle
mov
push
rclb
jg
dec
or
mov
pop
xor
add
xor
add
cmova
addl
outsl
std
loope
inc
adc
test
mov
dec
sbb
mov
push
cmp
sub
dec
je
and
test
out
lock
pop
xchg
movsl
fstl
int
test
lods
shrb
ffree
cs
daa
push
inc
int
push
popa
add
push
movsl
pusha
add
mov
sub
jle
jg
pop
hlt
ss
aas
mov
mov
rclb
and
add
jg
jae
xor
jnp
aaa
js
dec
bound
daa
cmp
cmpsb
sbb
shr
call
jae
je
in
dec
das
cmp
cs
es
push
fnstcw
fmuls
pop
cs
cld
xor
flds
pop
cld
es
add
add
xchg
dec
pop
sti
fmul
pop
stos
xchg
add
mov
mov
sbb
pop
mov
jp
jae
shll
jbe
neg
sahf
push
pop
test
mov
xchg
testl
int
out
push
lret
sahf
mov
cs
push
stos
sub
cltd
jge
pop
mov
int3
and
xor
repz
mov
cmp
cwtl
lds
dec
jmp
ss
xor
ja
imul
mov
iret
aam
mov
out
add
add
stc
adc
push
int3
neg
je
incl
sub
mov
stc
sub
xor
leave
aam
xor
cmpsb
jae
imull
bound
jns
jnp
ss
cmp
call
aas
mov
data16
pop
mov
les
jmp
sub
cwtl
inc
in
pop
stc
and
mov
lret
subl
lahf
idiv
adc
and
jmp
leave
insb
cld
repnz
xor
pop
push
mov
lahf
xlat
inc
jl
push
sbbl
mov
inc
dec
or
dec
data16
scas
jle
adc
jo
lock
sbb
fdivrl
xchg
fadds
orl
inc
or
or
sbb
sub
sbb
incb
pop
cmp
lods
ret
ljmp
pop
pusha
stc
pop
cli
mov
xchg
xchg
mov
xchg
lods
iret
mov
xchg
repz
out
lcall
mov
pop
test
sbb
orb
and
fistps
cld
iret
mov
and
enter
sti
addr16
xchg
push
lret
into
mov
test
test
iret
bound
xor
mov
mov
aad
pop
flds
sub
cmp
cmp
dec
fld
jle
fcomps
stc
roll
pop
repz
shlb
orl
in
or
imulb
dec
pop
sbb
scas
pop
pop
iret
cmp
iret
push
mov
sub
int3
cmp
pushf
fldl2e
iret
or
cld
enter
sbb
jmp
test
cmp
lds
in
lcall
adc
mov
sbb
roll
dec
ja
dec
clc
mov
loope
push
jbe
cli
add
xor
xchg
arpl
leave
sub
push
and
inc
cmp
dec
or
lods
gs
jno
push
repz
pop
adc
xchg
inc
clc
shl
sarl
jns
xchg
mov
pop
loop
sub
mov
popa
jp
and
mov
dec
fcoml
jnp
ret
dec
push
adc
pop
daa
xor
push
fidivrl
rolb
xchg
adc
repz
push
sub
lret
add
cwtl
mov
hlt
mov
hlt
pop
adc
adc
popf
jecxz
xchg
inc
cwtl
adc
lods
adc
inc
addr16
ret
je
push
mov
mov
cmpsl
jge
sti
fcomps
mov
notl
daa
fdivs
jb
lds
mov
push
dec
sub
or
test
rolb
rcrb
fsubrs
imull
into
lcall
push
adc
call
mov
jo
rolb
aas
and
pusha
mov
push
enter
rep
jae
mov
mov
xchg
pop
xchg
mulb
fimull
jecxz
je
dec
loopne
jg
sub
rcrb
pop
sbb
cmp
repz
pop
jnp
mov
ret
jne
arpl
jl
cld
call
inc
push
out
int3
sub
popa
mov
or
mov
jno
scas
std
in
lds
xchg
or
cmp
dec
adc
sbb
or
icebp
subb
jecxz
mov
push
sbb
stc
inc
je
leave
stos
adcl
cld
push
dec
sbb
int3
push
xor
push
mov
ja
xor
incl
ret
and
dec
shll
mov
std
or
lds
dec
call
push
jmp
ret
aaa
mov
ljmp
inc
xchg
sti
addl
cmpsl
in
aad
stc
cmpb
nop
int
scas
aam
dec
xchg
dec
iret
xchg
repnz
mov
stos
or
clc
dec
xor
test
push
jmp
xorl
push
insb
mov
mov
rcll
or
push
pop
sbbb
pop
data16
sub
add
mov
lock
push
popf
pop
sbb
xlat
jnp
test
push
int3
pusha
ds
fisttpll
add
dec
fwait
lea
shrl
insl
dec
mov
add
rorl
test
iret
lea
push
or
dec
fisttps
std
dec
movsl
mov
xlat
adc
sbb
dec
cli
arpl
shll
mov
and
mov
push
stc
mov
xor
push
mov
and
or
add
and
ja
cmpsl
mov
add
js
in
cld
pushf
or
cmpsl
cmp
rcll
lds
sbb
sbb
xor
mov
mov
aad
sub
cmc
pop
ljmp
dec
jae
pop
mov
sbb
jl
and
push
fistl
sub
inc
inc
addr16
push
scas
xor
out
add
push
push
insb
aas
lcall
leave
xchg
fadds
ja
lea
ret
jno
sarl
int3
in
or
xchg
imul
inc
out
enter
xchg
jge
xor
ret
call
fabs
mov
adc
stc
bound
mov
fs
test
ficomps
in
add
icebp
adc
movl
pop
sti
movsl
ret
or
jo
mov
mov
adc
add
mov
dec
pop
xchg
jae
loopne
in
or
pushf
lock
mov
jae
int3
rcrl
hlt
iret
and
adc
inc
sbb
sub
add
add
movsl
dec
insb
jg
inc
out
dec
mov
or
and
dec
mov
insb
xor
sub
shrb
out
shll
roll
adc
mov
cmp
test
push
mov
outsl
lahf
mov
sbb
sti
test
mov
or
pop
mov
inc
mov
jmp
out
insl
pushf
dec
stc
aad
add
add
adc
fs
push
pop
mov
lds
adc
sub
outsl
sub
sbb
and
fnstenv
xchg
mov
js
lcall
dec
xchg
mov
jle
push
xchg
cwtl
cmp
sub
sbb
popf
cmp
mov
pushw
roll
in
and
repz
testl
call
mov
lea
cmp
pop
lcall
fucom
or
jle
push
ror
dec
call
push
push
stc
pop
add
fldt
add
mov
insb
add
jno
out
andl
addr16
mov
and
and
pop
dec
fnsave
dec
lods
push
inc
mov
insb
push
movsl
jmp
adc
pop
and
cli
fbld
sahf
loop
int3
mov
and
jbe
jmp
sub
inc
inc
leave
sub
les
daa
pop
hlt
adc
or
fiadds
push
jecxz
dec
lcall
xchg
add
mov
es
mov
shll
cld
xchg
rcll
or
test
inc
dec
in
xchg
shlb
out
stos
scas
dec
push
adc
scas
dec
push
pop
repnz
into
fs
cltd
pop
add
leave
jge
pop
dec
mov
movsl
test
mov
mov
jno
push
jg
sbbb
jg
cltd
jge
dec
dec
enter
cmc
push
ret
xchg
sub
or
stos
xor
jne
aad
sub
inc
xor
jge
xchg
sbb
or
insl
ror
mov
mov
mov
dec
jns
jge
pop
js
dec
int
bswap
loopne
inc
xor
mov
andb
inc
aad
subl
fwait
dec
outsl
add
mov
mov
mov
int3
addl
mov
outsl
jmp
pop
jo
insl
leave
es
mov
sbb
add
xchg
inc
shr
movsb
pop
adc
test
adc
sub
inc
scas
xor
push
jnp
imul
or
orb
fcoml
cmpl
sarb
mov
add
mov
lods
int3
ja
push
adc
mov
inc
fsubs
jecxz
cs
mov
mov
add
cmp
das
mov
sub
inc
fidivrl
xchg
aad
scas
sbb
adc
pusha
fdivrl
cmpb
xor
mov
cmovg
aas
inc
push
dec
inc
aam
cmp
fisubrs
lret
jmp
imulb
xor
dec
popf
pop
xchg
pop
inc
xchg
mov
xchg
adc
out
sahf
push
push
sbb
loope
icebp
movsl
mov
cwtl
jbe
pop
jbe
cmp
dec
or
insb
imulb
xchg
xchg
je
rcr
or
insb
adc
stos
cmp
ja
adcb
movsb
jl
iret
sub
xchg
or
ljmp
sub
adc
cli
pop
xchg
out
repz
or
sub
and
outsl
and
mov
ret
cmc
push
mov
xchg
mov
lods
fstps
jp
sbb
cmp
or
pop
test
in
stos
in
aas
ret
ret
inc
out
test
fdivrs
xchg
sub
xor
cmpsb
cmpsl
repnz
lret
es
push
mov
call
leave
sahf
push
mov
cmpsb
lods
xchg
mov
lods
xor
rolb
popa
sub
push
inc
mov
cltd
and
mov
sbb
mov
xor
jg
xchg
loope
in
sbb
mov
xor
call
pop
mov
mov
sarl
pop
jo
mov
int
sub
adc
loopne
in
in
arpl
adc
mov
xchg
outsb
sbb
fs
push
jae
call
outsl
sbb
pop
pusha
pop
jne
dec
xchg
jae
and
adc
stos
sub
lea
scas
cltd
call
jl
lea
ljmp
outsl
xchg
nop
jmp
xlat
popa
out
fwait
jbe
bnd
lods
out
jb
ret
loope
arpl
mov
push
xor
adc
pop
stos
push
mov
outsb
jns
enter
pop
scas
in
bound
sahf
cmp
cmp
push
int
dec
dec
cmp
stos
jbe
scas
cmpsl
cltd
or
adcb
dec
mov
sti
imul
popl
out
xorb
stos
mov
das
fwait
jp
dec
cmp
mov
xchg
cmpsl
inc
inc
push
out
fcmovbe
sub
fdivs
adc
sbb
nop
and
xchg
xchg
adc
push
icebp
xor
repnz
xorl
push
jmp
fucomi
inc
mov
jle
xor
leave
aaa
leave
xchg
insl
xor
cmp
jnp
cltd
icebp
inc
les
andb
mov
jnp
lahf
rclb
or
add
mov
jge
xor
sub
lcall
and
adc
xchg
ret
adcl
ror
leave
fidivs
cwtl
stos
js
jmp
test
push
inc
push
dec
or
cld
xor
addr16
stos
outsl
fstpl
pushf
mov
cli
dec
push
mov
xlat
xor
imul
xchg
mov
stc
and
push
fsts
push
pop
aam
daa
lahf
aaa
mov
es
andb
cwtl
mov
test
rolb
fstps
sub
fldt
stos
xchg
fiadds
mov
dec
repnz
adc
jbe
outsl
hlt
data16
sahf
or
pop
popa
cmp
xchg
dec
dec
insb
sbb
add
or
cmp
jb
push
ja
fldl
or
adc
testb
inc
cmp
lret
cpuid
add
fmull
jns
fnstcw
aaa
xchg
sbb
sub
jne
xchg
cmp
fstpl
pop
mov
inc
mov
std
push
mov
adc
rcrl
push
pop
insb
jnp
roll
mov
ds
sub
mov
dec
test
cmpsl
mov
jmp
or
gs
xchg
dec
fdiv
xchg
dec
inc
fnstsw
cs
stos
xchg
mov
mov
in
ljmp
insl
mov
xor
mov
mov
ja
pop
cmpsb
aas
pop
rorb
adc
addb
ret
and
imul
push
call
testb
lock
push
lods
fwait
cmp
test
xchg
jl
cmc
or
jge
imull
xchg
push
pop
mov
out
adc
and
pop
scas
popf
fldenv
lock
sub
pop
mov
insl
cmp
push
sti
ja
push
int3
out
test
leave
pop
cmpsl
sub
lods
out
cmp
or
sbb
cmp
imul
mov
les
xchg
push
rep
imul
jns
repz
es
sub
popa
mov
movsl
cld
xchg
cmp
mov
cs
lahf
movsl
cwtl
cwtl
out
push
lea
xchg
fldcw
lret
lds
lods
out
cmp
mov
in
xchg
scas
add
out
lea
sbb
and
sub
in
cmp
pop
scas
cmp
jo
cmp
inc
sub
mov
cmp
push
mov
insl
jmp
lods
test
outsl
rcrb
add
mov
mov
mov
or
xchg
sub
dec
push
mov
push
out
cmpsl
push
pop
jp
notb
lea
xor
dec
fs
arpl
jl
dec
mov
stc
fs
lea
mul
in
mov
sub
pusha
clc
push
push
pusha
mov
or
aas
aam
pop
movsb
jmp
lret
ds
adcl
push
mov
xchg
aad
test
sub
xlat
pop
add
mov
clc
mov
push
ss
ret
sar
es
or
adc
je
add
ljmp
adc
dec
popa
mov
rcl
inc
cmpb
mov
pushf
ret
xor
test
xor
add
mov
int
scas
push
pop
mov
push
add
and
sarl
mov
xor
nop
and
mov
shrl
stos
sub
repnz
mov
je
and
movsb
jle
dec
push
mov
jno
mov
mov
pop
cmc
nop
xchg
fs
stos
dec
nopl
cmp
insb
aam
imul
push
fdiv
lret
int
pop
and
jmp
mov
jb
mov
shlb
inc
jmp
test
mov
or
dec
inc
jne
or
fimuls
les
xlat
sarb
lods
incb
addr16
cltd
addr16
imul
pop
in
in
out
sbb
mov
push
inc
das
cwtl
icebp
cmp
or
pop
sbbb
dec
push
push
psraw
inc
in
mov
ficoml
pop
dec
out
cltd
arpl
out
popa
pop
cmp
fimuls
dec
mov
mov
data16
sbb
nop
dec
inc
jnp
push
out
sub
adc
popa
inc
pop
lds
add
push
mov
or
scas
shll
mov
inc
sbb
and
or
fstp
fmuls
lahf
sbb
push
or
dec
or
mov
inc
ficoms
mov
pop
xor
fwait
imul
ds
ljmp
jne
add
inc
mov
shll
sahf
sub
and
adc
jle
cmpsl
sub
jne
dec
andl
dec
sbb
fdivrl
sub
cs
insb
mov
mov
inc
push
popa
or
imul
mov
jo
pop
pop
jb
xor
ds
mov
notb
insl
in
xor
ret
xor
xchg
movsw
or
jo
jge
idivb
test
mov
sti
stc
out
rcr
lcall
sub
leave
pop
mov
cmpb
jecxz
outsl
loopne
les
dec
sbb
sub
mov
or
mov
or
adc
shll
xchg
jnp
adc
loope
lea
into
push
sub
insl
outsb
enter
xchg
adc
push
jmp
outsl
pop
pushf
push
xor
fmull
push
out
outsl
wbinvd
test
fildll
jns
adc
push
fldcw
dec
bound
adc
mov
bound
cmp
fsub
cmp
xchg
scas
or
dec
mov
cli
cmpxchg
mov
sub
movsl
pop
pop
dec
outsl
mov
jle
jns
and
mov
jns
cld
and
xlat
lea
lcall
push
cmpsl
stos
adc
andb
imul
rolb
out
and
rorb
aas
mov
aam
clc
mov
rcrl
adc
push
shlb
nop
int3
loopne
mov
aad
inc
es
divb
pop
daa
dec
cmp
inc
mov
cmpsb
iret
push
cli
mov
or
mov
xchg
rorl
aam
xlat
mov
and
or
in
sub
xor
not
adc
lahf
lds
mov
sub
jg
ljmp
popa
jbe
jmp
dec
mov
add
dec
ret
iret
leave
mov
int3
loopne
popf
inc
jo
popf
mov
fxtract
sub
or
inc
imul
xchg
sahf
subl
bound
mov
push
add
shlb
faddl
mov
cmp
repz
jl
test
pop
xor
pop
cmp
cmp
dec
adc
sub
jno
outsl
leave
mov
mov
cmpsb
xorl
cmp
xchg
or
iret
mov
pop
aam
xchg
loope
adc
pop
fs
push
lods
cwtl
jecxz
stos
fnstcw
mov
dec
mov
sub
das
jae
cli
fcoms
mov
lea
sbbb
out
out
push
stos
ret
mov
mov
xchg
int
pop
and
dec
sbb
or
or
pop
mov
mov
into
stos
push
div
pop
and
std
add
push
pop
add
ret
inc
fmulp
inc
add
mov
lea
push
inc
xchg
inc
mov
fwait
pop
roll
ss
mov
imul
popf
aaa
xchg
cmp
xchg
mov
push
out
dec
popa
jns
sub
into
lea
mov
mov
push
jle
rcrl
jmp
pop
inc
test
push
push
scas
psubsw
aam
or
movsb
shll
lcall
xchg
cmpsl
adc
int
rcl
outsb
shl
adc
add
inc
xchg
insb
bound
add
mov
rorb
fistl
jecxz
push
loop
dec
jae
fsubrs
leave
jl
xchg
insl
push
fwait
adc
xchg
xchg
and
xchg
cmpsb
inc
cmp
cmp
or
mov
cli
push
fidivrs
cmpsb
inc
push
lret
std
xchg
bound
pop
test
dec
lock
push
or
xor
loopne
mov
pop
jb
mov
sub
nop
scas
stc
add
add
pop
push
loope
in
cmp
sub
inc
pop
js
xchg
mov
pop
xlat
sub
add
icebp
arpl
lods
in
cmp
mov
and
sub
and
mov
scas
lcall
sub
mov
gs
sbb
mov
jge
and
mov
jnp
inc
sbb
add
mov
xlat
xchg
xor
repnz
mov
mov
inc
sub
cmp
in
xchg
mov
repz
ja
pop
mov
pushf
xor
popa
mov
dec
mov
rorb
outsl
mov
fdivr
mov
or
movsl
and
pop
roll
fisubs
pop
mov
mov
mov
repnz
xchg
adc
jo
rcr
cwtl
inc
sti
idivl
scas
pop
mov
sub
out
inc
das
hlt
cld
cmp
xor
xor
test
movsb
shrb
push
mov
mov
hlt
sub
shrl
xchg
mov
lds
dec
jbe
mov
shrl
cltd
pop
xor
repnz
in
cli
xchg
sub
test
push
aas
mov
inc
xchg
call
sbb
rcrl
cmpsb
in
xchg
ficomps
dec
mov
sbb
pusha
aaa
in
ss
or
daa
lret
lret
out
jmp
div
mov
rcrl
dec
in
sub
imul
mov
lods
pop
lahf
add
mov
repnz
fcomip
loop
lods
movsl
xchg
imul
inc
xor
scas
xlat
shlb
xorb
or
mov
add
xchg
pushf
push
inc
scas
lods
cmp
addl
push
mov
mov
out
in
dec
repnz
mov
fisttpll
call
xchg
adc
cmc
inc
dec
out
scas
loopne
xchg
and
leave
sub
adc
push
xchg
mov
fisttpll
inc
add
cmp
push
sub
mov
mov
mov
scas
cmpsb
ret
imul
in
leave
fs
stc
repnz
lret
dec
stos
in
or
sub
sbb
cli
scas
ja
xor
mov
xor
dec
xor
jl
popf
jbe
add
cltd
mov
js
stos
shll
les
xor
std
sbb
cmp
enter
xor
or
lea
ja
outsl
ret
mov
jbe,pt
sarb
repz
pop
loop
pop
xor
add
call
sub
mov
ret
lea
rorb
popf
xor
adc
or
inc
sub
in
je
inc
aaa
int3
and
adc
insb
rdpmc
das
xor
push
xor
addl
jl
std
dec
dec
les
mov
mov
mov
adc
add
push
dec
mov
add
or
int3
jp
aas
test
mov
test
cmpsl
pop
fistpl
les
or
les
mov
xor
outsl
dec
xchg
push
test
es
jmp
test
int
jecxz
clc
fwait
mov
pop
push
ret
mov
sbb
idiv
insb
mov
iret
into
add
mov
test
pop
dec
cmp
inc
orb
mov
mov
lds
xchg
xchg
rcr
fldcw
and
shrb
jge
aaa
call
cmp
es
fildll
mov
lods
pop
imul
sbb
daa
xchg
xchg
jnp
jnp
jb
push
and
out
int3
mov
cmpsl
jmp
movsb
xor
outsb
jp
fwait
sahf
mov
add
fbld
inc
sarl
std
sub
and
cmc
scas
ret
test
cld
mov
iret
lahf
mov
sub
fwait
pop
outsl
add
nop
and
jno
pop
arpl
scas
repnz
into
fidivl
adc
mov
shr
and
iret
sahf
pop
dec
cmp
testb
stos
shll
mov
inc
stc
fs
shlb
jge
je
adc
pop
mov
adc
xchg
mov
push
fcmovbe
es
sbb
or
dec
or
movl
ret
js
xchg
cltd
pop
add
jno
repz
mov
cli
lock
jecxz
push
ljmp
jp
or
fcmovbe
jnp
cli
lds
or
mov
jnp
fbld
call
fsts
dec
add
add
test
mov
out
cmp
pop
mov
pusha
cmpsl
dec
hlt
add
pop
out
loope
sbbb
gs
xchg
inc
into
das
jo
mov
push
pop
dec
out
icebp
jp
mov
jae
mov
and
enter
or
xor
push
rcll
into
push
movl
jne
lock
sahf
divb
add
or
in
ret
jbe
and
iret
pop
jmp
push
sub
lods
ret
cmc
sbb
stos
mov
push
cmpsl
pop
jmp
jns
cmp
push
js
mov
dec
adc
xchg
sbb
loope
pop
arpl
cwtl
in
movsb
push
ss
xor
push
js
sti
xor
int3
xor
stc
in
int3
adc
jl
adcl
clc
add
mov
xor
test
push
pop
ret
jns
hlt
adcb
push
in
push
loopne
stos
sbb
fwait
mov
aad
mov
push
cmc
xchg
jmp
adc
aam
dec
shrb
pop
adc
rolb
lea
lea
push
jle
sub
xchg
lret
or
es
mov
aaa
cmp
cmpb
scas
cmp
mov
popf
sti
mov
mov
dec
cltd
outsb
out
rorb
xchg
out
call
mov
gs
addr16
fsubrs
mov
nop
ret
jmp
rclb
mov
mov
dec
cmc
and
mov
repz
nop
je
or
jp
addb
lahf
fisubl
mov
push
clc
adc
fcomp
and
in
jp
test
jns
mov
xor
mov
in
jne
out
incl
pop
inc
sbb
nop
sbb
fsubr
int3
daa
cld
cmp
push
xchg
fldt
inc
mov
adcl
in
fdivrl
xor
cmp
addr16
xchg
cltd
cwtl
xlat
dec
add
dec
or
gs
dec
test
aas
jb
push
daa
adc
mov
push
iret
es
and
push
sub
mov
je
outsl
or
mov
add
inc
pop
pop
ror
js
nop
mov
inc
test
push
pop
bnd
adc
decl
add
movsb
fucomp
inc
lea
ss
xchg
xchg
xor
jnp
pop
push
out
xor
addr16
shlb
bound
daa
mov
call
pop
insl
pusha
test
cmp
pushf
mov
fnsave
fs
cmpsl
icebp
fbld
or
fsubs
imul
add
aas
inc
arpl
pop
scas
outsb
cs
lea
cmpsb
cmp
stos
cltd
add
xor
sarl
inc
lcall
int3
dec
xchg
xchg
fwait
or
xor
hlt
out
lods
dec
add
sbb
lea
jb
xchg
push
cwtl
int
cs
out
mov
imul
xor
incl
sub
jle
pop
mov
inc
inc
icebp
aam
inc
add
mov
add
mov
pop
xor
xor
out
out
aam
ds
push
inc
mov
dec
pop
loopne
jnp
cmp
dec
jb
in
scas
loopne
ficoml
sarl
mul
cli
daa
jmp
jbe
scas
dec
lret
jnp
jecxz
sbb
pop
movsl
ss
xchg
jne
loop
adc
dec
std
js
in
adc
inc
pop
pop
push
mov
call
test
and
ds
rorb
flds
or
rcr
push
push
repnz
push
daa
or
jge
leave
icebp
imul
adc
pusha
adc
inc
lock
sub
add
mov
push
sbb
bound
rcr
popa
mov
in
pop
sahf
cmp
aam
rcl
mov
pop
lret
pop
pop
mov
pop
subb
lock
ret
and
inc
loope
mov
dec
add
cmp
das
popf
push
inc
lret
jnp
bound
dec
inc
inc
test
sbb
pop
push
test
xor
pop
xor
jl
or
sbb
sti
dec
lods
or
dec
push
cmp
sahf
repz
out
out
and
jmp
aaa
pop
push
clc
int3
or
arpl
pop
cmc
inc
adc
mov
inc
dec
xor
iret
ficomps
lds
je
loopne
insl
in
jmp
lahf
jecxz
mov
xor
loop
scas
mov
subb
insb
andb
and
mov
adc
imul
push
jge
insb
xor
sub
sub
int
push
jl
cwtl
cs
push
mov
pop
xor
loopne
xor
scas
fsubs
or
lock
xchg
data16
leave
mov
outsl
and
adc
mov
mov
xchg
mov
aad
out
fidivs
fwait
repz
insl
imul
mov
in
cs
cs
jecxz
fldl
mov
pop
repnz
lds
push
lret
sub
push
push
movsb
jo
repz
push
push
ret
in
pusha
mov
outsl
or
gs
je
add
sub
into
inc
andb
xchg
push
es
mov
pop
push
lret
jp
in
outsb
gs
push
xchg
and
sbb
sub
in
outsb
mov
mov
push
mov
aas
xor
pop
xchg
cmp
call
mov
mov
mov
jbe
add
dec
or
loop
jo
fmull
das
push
push
in
sub
mov
addb
sub
rorb
xchg
or
cmp
xor
les
aas
inc
dec
in
scas
rorl
jge
xorb
lods
sarl
rorl
scas
xchg
pushf
sbb
dec
mov
pop
popf
mov
movsb
lock
aaa
pop
sahf
testb
push
pushf
sub
mov
repnz
mov
push
dec
cmp
out
ljmp
movsb
popf
or
mov
sahf
sarl
sbb
push
adcl
add
fisttpll
mov
mov
push
js
mov
mov
das
dec
rcrl
lcall
xchg
adc
inc
push
jp
cmp
roll
add
pushf
jns
dec
inc
sbb
inc
xorl
push
and
shlb
cmp
enter
popf
adc
test
fucom
jl
xchg
idiv
mov
int3
push
ljmp
cmp
jno
ds
jl
mov
push
test
adc
sbb
xchg
sub
mov
or
fstps
sbb
rcll
dec
add
ret
xchg
push
pop
xchg
sbb
mov
xor
sbb
xchg
jp
lcall
jl
sub
mov
dec
jp
sub
inc
push
andb
sbb
inc
incl
mov
hlt
mov
imul
divl
jo
std
add
adc
lahf
cld
adc
pop
jno
loop
push
mov
adc
xlat
lcall
mov
cli
pop
xchg
sarb
jl
into
rcr
movsl
cmc
adc
test
ja
dec
push
and
mov
adc
push
cltd
adc
imul
cmc
inc
lahf
pop
pop
out
fisubrl
leave
xchg
or
je
adc
icebp
pop
out
jl
sub
lods
lret
jb
addr16
jns
push
adc
insb
dec
clc
sub
sub
sbb
test
test
aad
and
cwtl
xchg
insb
repz
cltd
insl
add
xchg
ss
adc
in
jne
sbb
pop
inc
xor
insb
lcall
push
clc
ds
add
adc
aad
mov
mull
mov
push
mov
inc
and
ds
sti
push
int
dec
rcrb
push
insl
icebp
mov
je
in
ficoms
out
mov
or
jp
outsb
mov
adc
or
and
add
lcall
mov
mov
jge
sbb
lret
fdivl
arpl
jb
push
addr16
adc
sbb
mov
mov
rclb
mov
cltd
gs
inc
sub
sub
and
shlb
dec
loop
mov
mov
dec
xor
jge
push
loop
jp
lahf
popa
mov
popf
mov
pop
movsb
inc
sub
xorb
mov
loope
test
inc
mov
cmpsb
ss
xor
testl
flds
stos
scas
aad
mov
addr16
jb
xlat
adc
fidivs
test
stos
push
mov
std
fldt
jg
xor
outsl
shlb
cmp
mov
xor
jg
or
adc
in
dec
cli
fdivrs
pushf
jmp
es
mov
scas
or
shr
and
or
push
cli
sti
lret
mov
add
cmpsb
mov
add
cmp
jnp
adc
sti
inc
sub
test
pop
dec
stos
xchg
push
movsb
movsl
ds
fcomip
jmp
outsb
lahf
fld
mov
mov
je
lret
mov
int
fld
push
out
adc
pop
mov
mov
and
inc
divl
mov
imul
clc
cmpsb
pop
mov
mov
or
jo
in
jecxz
dec
bound
mov
add
adc
inc
sbbb
push
popa
out
sbb
in
xlat
sub
pop
aas
add
mov
lods
lahf
aas
int
in
pop
add
into
out
ret
cmp
sbb
jb
int3
sbb
and
cmpsl
xchg
sub
inc
push
aad
fiaddl
lret
pop
mov
aaa
pop
icebp
push
mov
and
sbb
out
sbb
pop
arpl
clc
imul
out
or
push
pop
addr16
adc
mov
movsl
inc
xor
scas
jns
bound
ret
ja
hlt
sbb
roll
or
test
nop
daa
mov
jecxz
in
arpl
add
xchg
inc
adc
xchg
cmpsl
cmp
gs
dec
sbb
int
push
jb
mov
insb
popf
sub
loope
stos
test
fs
or
into
das
ficomps
out
mov
dec
sbb
push
mov
nop
shll
mov
in
lds
or
xor
xchg
lahf
and
pop
filds
add
pop
and
stos
push
push
pop
sbb
loope
inc
movsl
pop
cltd
sub
addr16
pop
push
mov
or
in
fisubl
das
shrl
mov
pop
in
lret
dec
das
mov
xchg
xchg
pop
xor
inc
or
js
fldt
cmp
scas
popa
dec
shrl
test
jbe
mov
pushf
data16
xchg
stc
mov
jbe
adc
or
mov
insb
movsb
jb
cmp
mov
sahf
incb
cmp
xchg
mov
popf
mov
into
mov
mov
add
and
sub
jb
sar
or
jle
fisubrl
arpl
loopne
mov
into
bound
add
jno
adc
jmp
shrb
add
push
jmp
std
lds
push
les
addr16
aaa
pushf
mov
mov
popa
push
in
sbb
faddp
pop
aad
adc
lahf
pop
jle
sarl
lods
inc
sbb
jns
dec
cld
push
dec
pop
push
mov
pop
int3
add
push
sbbl
inc
cli
fs
out
inc
daa
loop
xor
arpl
outsl
inc
fstpt
data16
cli
jb
lret
lods
dec
pop
inc
daa
jb
mov
pop
clc
mov
ffree
dec
push
in
push
mov
sbb
dec
push
das
xor
shrl
push
push
fisubl
inc
test
sbb
aas
pop
cmp
bound
and
das
int3
mov
pop
dec
or
icebp
add
int3
push
shl
into
adc
inc
jle
sub
out
stos
inc
mov
bound
mov
cmp
sub
test
mov
pop
roll
mov
sub
int3
sti
idiv
and
sub
lods
push
sarb
inc
push
addb
dec
pushf
push
mov
pop
cmp
ffreep
pop
je
sbb
jmp
xchg
mov
push
jb
sarb
xor
push
int3
adc
mov
ror
push
mov
mov
or
std
mov
adc
cmp
xchg
jne
or
pusha
imul
push
andb
mulb
lcall
sub
test
ror
les
aad
adc
lock
movsb
scas
mov
js
cmp
cmp
inc
add
js
test
data16
sub
ret
aas
xor
dec
fidivs
in
dec
inc
fisubrs
mov
mov
cmc
out
loopne
xchg
inc
jg
dec
ret
dec
or
xchg
jb
mov
loopne
imul
lret
cwtl
iret
hlt
cmp
shlb
xchg
out
shlb
adc
or
inc
sbb
inc
fstpl
fldt
dec
or
mov
jbe
dec
jbe
lret
or
frstor
outsl
pusha
push
cmp
mov
hlt
pop
jl
sub
dec
movsl
jp
xchg
imul
adc
and
or
addl
dec
inc
pusha
movsb
aad
fiaddl
clc
pop
cld
cmpsl
mov
cmp
push
subb
push
rclb
imul
or
ret
mov
sbb
stos
mov
xchg
rclb
push
lret
sbb
insl
mov
mov
cmp
mov
and
icebp
add
xchg
cmpsb
cmpsb
leave
insl
sahf
movsb
loopne
loop
in
cmp
push
repnz
leave
xor
stos
icebp
cmp
add
shlb
pop
popf
sub
or
push
insl
jg
aas
xchg
std
mov
mov
int3
xabort
notb
mov
mov
mov
test
fs
mov
icebp
add
test
mov
push
xor
or
xor
mov
cwtl
push
mov
fildl
push
and
cs
lock
daa
dec
cmp
xor
fistps
outsl
or
shl
rorb
mov
sub
push
cld
and
jl
jl
mov
and
int3
test
mov
out
push
jl
xor
pop
jae
or
popa
mov
dec
aaa
je,pt
xlat
inc
add
add
fwait
cli
aam
inc
xor
dec
push
and
lahf
sahf
shlb
scas
xchg
icebp
dec
jge
adc
jo
mov
lods
loop
lret
lret
inc
jo
test
push
clc
rol
movsb
dec
jp
int
ret
pusha
jo
mov
ret
fistpll
sbb
pop
push
cld
adc
repnz
popa
push
leave
pushf
jmp
nop
daa
test
cmc
or
lods
push
dec
loop
or
mov
pop
cmp
sahf
insb
push
out
sub
sub
xor
out
lea
adc
fdivs
pop
jno
jae
out
xor
stos
mov
daa
shlb
cltd
into
or
push
push
int
sub
mov
jb
cwtl
sub
xor
inc
add
xor
int
or
mov
mov
adcl
add
jge
shl
sbb
push
frstor
stos
gs
xchg
out
pop
push
inc
push
or
sub
cmp
in
push
into
test
mov
add
out
out
xor
jmp
sub
mov
jp
cmp
les
pop
test
in
test
mov
pop
daa
or
aad
pop
notb
pop
mov
test
bound
push
dec
lock
lds
lock
push
mov
insl
js
pop
dec
xor
divps
ret
call
mov
testb
pop
loope
adc
movd
xchg
jno
add
test
insl
adc
ret
sub
jno
repz
pop
cmp
stos
sub
jecxz
rorb
xor
mov
int
lock
sahf
dec
fidivrs
xor
xor
ret
pushl
cmc
mov
mov
sub
call
inc
or
lea
pop
lea
test
out
sub
dec
loope
pop
cmp
mov
loope
add
jbe
jmp
fidivrl
cwtl
in
jns
push
dec
mov
push
pop
sub
push
pushf
add
imul
jno
push
rol
faddl
dec
adc
fldenv
push
clc
cmp
dec
add
scas
icebp
fistpl
push
jle
adc
or
insb
pop
fucomi
divb
and
dec
cmp
aam
fistl
pop
xor
dec
jp
jns
xchg
push
push
notb
inc
sbb
dec
lret
stos
jecxz
fimull
nop
mov
insb
andl
jle
add
rcrl
fnstcw
subb
mov
sub
insb
clc
pop
add
xchg
loop
pop
insl
jbe
jo
ljmp
pop
call
ffreep
xchg
and
in
cltd
sbb
adc
mov
pop
jg
inc
pop
scas
mov
test
and
les
lret
loopne
scas
hlt
cmpsb
shll
mov
sub
ret
in
xchg
pop
mov
pop
test
jae
insl
push
push
jb
lods
or
jae
xor
push
push
mov
inc
and
pop
cwtl
mov
stos
insb
lods
jbe
rorb
inc
xchg
push
xor
fwait
iret
leave
pop
sti
mov
fwait
xchg
add
push
and
cmp
stos
pop
cmp
sahf
ret
ret
clc
jmp
iret
xchg
call
dec
imul
insb
xchg
cmp
xor
mov
cmpsb
and
push
sub
mov
ds
adc
adc
negb
iret
sub
dec
repnz
mov
and
inc
mov
aad
mov
push
test
je
std
cltd
sub
cs
xchg
in
pusha
xchg
adc
es
or
sbb
shl
xor
cmpsl
movsl
frstor
jge
push
cmc
scas
mov
aaa
inc
call
mov
add
dec
pop
pushf
jnp
dec
add
push
ja
sbb
int3
mov
stos
fwait
sar
out
outsl
dec
mov
loope
mov
mov
jnp
test
rorb
inc
adc
in
cmp
imul
jns
popa
loope
inc
fdiv
fs
lea
es
mov
pop
rcr
les
pop
frstor
add
mov
mov
arpl
sub
adc
xor
mov
cmp
xchg
inc
push
mov
lcall
leave
loop
int
sub
pop
sbb
jmp
outsb
jnp
mov
lret
or
mov
fsub
out
sbb
push
sub
push
dec
xchg
insl
adc
push
inc
sti
push
pushf
pop
cmp
sub
dec
mov
movsl
faddp
push
pop
into
lret
mov
push
imul
mov
cmp
dec
and
lock
insb
and
cmc
ds
mov
add
sub
mov
mov
dec
mov
jne
scas
xchg
sub
mov
cs
mov
add
mov
sub
lods
test
out
push
imul
jno
sub
les
outsl
mov
adc
push
rcr
fisubl
lods
pop
push
insl
xor
ficomps
scas
adc
orl
filds
imull
ud1
push
dec
xchg
add
dec
sbb
cs
lret
test
push
aam
ja
ret
xchg
movsl
push
or
fimull
cmpsb
in
mov
or
or
pop
rorb
clc
pushf
sbb
mulb
inc
lods
sbb
xor
jne
dec
sub
shrb
xor
insb
scas
and
add
jne
jle
xor
adc
int3
cmpsl
lcall
jno
call
sub
in
pop
lret
push
popa
int3
out
test
int
push
popf
inc
push
test
leave
dec
fsubrp
jae
arpl
xchg
lods
dec
in
out
call
popf
or
cmp
add
fisubl
xchg
mov
adc
stos
cmp
jns
xchg
jnp
ja
pop
fwait
mov
addr16
inc
adcb
in
fadd
mov
icebp
cld
mov
pusha
cmpsl
cli
cmp
adc
sbb
jge
pop
sub
cmpsl
push
pop
test
sarl
inc
sub
or
jbe
jp
insl
add
jp
mov
push
aad
pop
adc
test
lock
lret
sub
cmp
lcall
jg
sarb
pushf
lds
mov
leave
dec
aas
mov
mov
mov
imul
rorb
stos
pop
xor
out
mov
lret
jp
pop
jo
xor
pop
sbb
insb
leave
fcomps
dec
mov
dec
sub
outsl
mov
pop
push
inc
loop
sub
push
pushl
and
in
lret
mov
in
dec
xchg
hlt
insl
dec
xchg
adc
iret
lret
clc
cmp
mov
mov
adc
sub
and
sub
cwtl
xchg
xchg
jno
inc
pop
gs
push
popa
xchg
xchg
std
fldt
test
push
inc
shll
pop
sub
xlat
lods
add
mov
test
pusha
cld
in
insl
sbb
decl
pop
cmp
and
mov
mov
mov
or
or
push
cs
and
push
adc
and
scas
lcall
leave
xlat
fiaddl
call
jecxz
repz
stos
in
lret
inc
ja
push
stos
iret
and
dec
jae
insl
subl
dec
dec
psubb
cmpsb
imul
sar
xchg
xor
lahf
and
call
pop
xor
repz
mov
iret
cmp
pop
jle
adc
lahf
lahf
sbb
add
jb
and
cmp
ficompl
orl
push
inc
jge
out
aam
xor
outsl
or
mov
sbb
insb
pop
repz
adc
jle
and
mov
stos
jl
arpl
and
jno
mov
xchg
fs
mov
les
loope
ret
js
sbb
mov
nop
outsb
push
movsb
fnstsw
outsl
clc
ucomiss
xor
sub
dec
pop
xchg
sbbl
pop
pop
call
in
jnp
add
pop
movsl
testl
js
add
push
aam
mov
cmp
addl
push
xor
ljmp
inc
mov
sub
push
push
sti
js
aaa
lds
cli
fsubs
and
pop
pop
mov
sub
add
leave
iret
sub
daa
mov
loope
repz
mov
sub
xor
mov
jmp
clc
sbb
je
int
xor
inc
test
jle
je
sub
pop
movsl
sub
test
ret
aas
pop
or
lret
mov
and
lea
xchg
aas
out
mov
pop
dec
pop
iret
cld
sbb
pop
iret
push
mov
ds
lcall
mov
inc
fists
xchg
xchg
movsl
pushf
sub
xorl
ret
dec
push
pop
inc
out
stc
shl
xor
cltd
lods
lods
in
adc
aas
adc
lret
lea
cld
je
jle
xor
popl
adc
ret
scas
out
xchg
or
jp
xchg
adc
push
add
mov
stc
fimuls
lods
xor
mov
int
adc
push
inc
pop
fndisi(8087
imul
movsl
mov
lods
xlat
push
ret
inc
xchg
call
cmp
lahf
inc
sbb
stos
inc
xchg
hlt
mov
push
nop
cltd
sbb
addr16
int3
push
inc
pop
pushf
sub
push
sub
cmc
cmp
test
xchg
shll
push
bound
dec
mov
mov
jmp
ficoms
pop
into
outsl
testl
cld
push
ljmp
pop
mov
rcrl
movl
imul
rolb
sbb
mov
jg
jle
xchg
rorl
dec
addr16
inc
sbb
mov
mov
xchg
pop
mov
pop
xor
and
lods
mov
leave
in
jl
rclb
jno
in
jge
pusha
js
int
pop
js
mov
loop
lds
shl
or
mov
cltd
push
xor
enter
cmpsb
loopne
aas
push
or
push
fs
insb
leave
or
insb
movsl
int3
pop
lods
push
outsb
mov
xchg
mov
fsubl
and
shrd
cmpsl
call
loop
stos
lcall
sarb
mov
std
sbb
mov
and
loope
inc
addr16
sub
data16
dec
jns
inc
push
xchg
aam
sbb
push
fiaddl
pop
dec
std
jno
adcb
cwtl
mov
pop
insl
idivb
and
xchg
jne
sbb
add
inc
jge
pop
out
out
mov
xchg
arpl
cmp
lds
in
shll
shlb
into
dec
jmp
fnstsw
cmpsl
mov
mov
mov
xchg
add
loop
imul
in
mov
inc
adc
xor
sbb
lahf
or
cltd
xchg
sub
lods
jle
sub
jge
outsb
fwait
iret
cmpsl
scas
insl
in
add
das
xor
mov
imul
adc
mov
sbb
roll
aam
insl
or
hlt
cwtl
add
pop
jl
sbb
dec
loope
loop
shld
out
data16
cli
add
jnp
mov
jns
cwtl
in
xchg
jbe
inc
cld
loope
fisubrl
les
push
pop
push
push
andb
adc
loope
fstpt
jge
adc
adc
add
mov
inc
cltd
cmpsb
sbb
mov
repz
outsb
fildll
and
lods
mov
add
xor
xor
or
ljmp
xchg
push
sub
lahf
cs
outsl
sti
cs
adc
add
xor
pop
cli
xor
sarl
sub
or
popa
or
adc
pusha
mov
scas
repz
pop
shlb
les
aad
popf
xchg
and
jge
add
cwtl
mov
dec
mov
subl
pusha
sarl
int
or
mov
int
mov
push
test
push
mov
test
push
cmp
pop
push
out
adc
imul
jmp
push
js
add
inc
or
xor
dec
mov
add
cld
add
lcall
push
inc
mov
sub
mov
cld
cmpb
pop
sub
lahf
inc
jg
cwtl
in
pop
inc
pop
in
ja
xchg
or
pop
mov
mov
mov
jne
gs
sub
lahf
lret
inc
cmpb
sbb
repz
popl
out
adc
movsl
cmp
es
outsb
jbe
mov
test
lret
in
dec
and
xor
add
and
cmp
push
test
dec
ss
jo
lret
outsb
mov
xor
sub
mov
dec
scas
jp
sahf
testb
bound
sub
orb
js
ret
push
int3
adc
jo
es
sbb
dec
adc
lcall
test
sbb
mov
sarb
cmc
inc
pusha
sub
jbe
cmp
shrb
adc
mov
dec
or
sbbl
mov
iret
and
jno
push
stos
outsl
gs
insb
pop
lahf
inc
ret
or
push
sub
loope
dec
ret
js
mov
cmp
dec
or
pop
ja
adcl
xchg
pop
jl
inc
inc
mov
aad
rclb
out
cmpsb
lds
test
std
cmc
mov
mov
ljmp
jle
cld
fdivrs
lret
mov
cmpsb
addr16
lret
adc
jno
or
clc
call
mov
adc
fistps
jl
cmpsl
jle
data16
mov
jmp
adc
sub
js
inc
mov
ja
rcll
mov
sarl
add
fdivrl
in
popa
xor
xchg
push
and
push
das
adc
fdivs
movsb
add
imul
and
or
jno
in
or
jns
dec
mov
fmull
lahf
gs
sbb
and
or
mov
mov
xor
mulb
jo
pop
mov
insb
in
push
inc
icebp
lret
jae
out
je
jne
add
push
sbb
xor
sub
imul
and
repnz
jg
pop
aas
bound
hlt
std
cmp
jecxz
stos
shr
add
test
sub
push
cwtl
sub
in
cmc
ficomps
lods
insl
cltd
sti
test
xor
inc
adc
push
nop
std
dec
je
nop
pop
mov
jnp
lcall
imul
sbb
or
mov
out
repz
dec
mov
or
mov
push
pop
pop
or
xchg
jae
inc
sub
pop
data16
in
ret
rclb
ljmp
into
dec
daa
lock
fisubl
jns
loope
inc
jae
pushf
push
lret
ret
int
out
call
jge
scas
lret
es
call
sbb
mov
dec
repz
fwait
jmp
negw
or
out
sub
imul
rcr
cmp
mov
cltd
fmull
or
cmp
frstor
push
add
gs
in
jecxz
mov
les
aad
cmc
clc
inc
add
popa
hlt
push
adc
into
cmp
push
jecxz
pop
sti
jo
imul
inc
gs
insl
cmp
jecxz
sti
push
add
mov
sbb
rcl
insl
mov
jmp
jmp
push
dec
leave
mov
lock
dec
pop
dec
inc
sbb
test
cmp
xchg
dec
dec
shl
pop
jbe
jbe
xchg
in
or
pop
sub
divl
inc
inc
adc
hlt
mov
push
loopne
pop
cmp
sub
lock
jge
cmc
sbb
aas
inc
ss
cltd
inc
push
xchg
aas
adc
inc
cmpb
sbb
sub
stc
mov
bnd
jecxz
insb
add
dec
cltd
leave
fiaddl
mov
js
xor
mov
xor
sbb
push
sbb
and
ljmp
sbb
test
xlat
pop
scas
sub
fwait
roll
loope
addr16
pop
dec
adc
xchg
adc
fnstsw
nop
je
shll
addr16
ffree
mov
pop
adc
push
stc
dec
pushf
lods
dec
enter
jp
cmp
lret
cmp
fstpl
inc
fs
js
or
xchg
fwait
add
aas
js
pop
xor
push
repnz
jne
or
aaa
ret
fcomip
insl
ret
sub
mov
repz
or
sahf
jno
dec
push
fadds
fdivr
mov
out
jne
mov
test
std
inc
stos
mov
bound
add
test
jg
call
sbb
daa
pop
cmc
pop
mov
aaa
mov
jo
mull
sub
add
jge
adc
gs
pushf
mov
sub
jle
sbb
in
leave
leave
jge
call
jmp
and
stc
ljmp
pop
aad
cltd
cmpsb
bnd
mov
je
mov
xor
jnp
xor
xor
sbb
orb
push
lret
je
repz
push
sbb
sbb
add
pop
loop
xchg
pop
pop
enter
or
stc
push
add
aas
dec
test
or
data16
jo
add
rcll
or
ss
xchg
push
cmp
xchg
sbb
cld
jnp
mov
mov
or
jb
data16
xchg
outsb
pusha
xlat
aaa
pop
xor
xchg
jle
cltd
push
ficoms
add
mov
fstps
insb
push
pop
popa
movsl
pusha
jbe
adc
sub
sbb
mov
fnstenv
fimull
mov
cltd
push
insb
pop
xchg
pushf
ja
pop
xchg
add
xlat
mov
xor
imul
clc
insb
bound
adc
ljmp
hlt
into
sub
jae
std
cmp
cmp
shrl
rclb
xchg
loop
call
dec
lahf
js
jmp
ret
fildll
inc
mov
sbb
test
iret
mov
or
or
inc
lahf
and
insl
or
int
xor
mov
mov
push
cmc
test
orl
xor
aaa
inc
jae
xor
and
add
jbe
in
adc
in
push
sbb
sub
xor
sub
cmp
les
or
and
cmc
mov
jno
cmp
inc
fmull
jne
or
ficomps
mov
ficoml
jp
adc
xchg
mov
pop
mov
xlat
js
aad
jp
popf
sub
xchg
mov
pusha
jo
mov
test
mov
lock
popf
push
imul
mov
or
jns
sub
cmpsb
loope
or
mov
sub
hlt
mov
ret
mov
pop
sub
les
dec
pop
ljmp
cmpsl
bound
adc
fsubrp
xchg
inc
sbb
mov
test
push
xor
and
ja
fwait
stos
xchg
add
xchg
pop
negl
cmc
pusha
out
adcb
jo
pop
and
xorb
stc
in
loop
pop
sub
and
jmp
fcmovne
and
aas
stc
and
ret
sti
mov
dec
rclb
jb
insb
je
fwait
nop
mov
imul
fiaddl
frstor
ss
push
hlt
jmp
imul
pop
jl
sbb
stos
lret
jle
pop
xchg
aad
push
xchg
hlt
and
mov
packssdw
mov
xlat
pop
jl
mov
aad
cmp
xor
mov
dec
lods
sbb
pop
repz
xchg
inc
mov
int
push
xchg
insl
and
loope
aad
mov
push
or
shrl
mov
mov
ljmp
adc
daa
fsubs
rorw
mov
jg
scas
pusha
std
cltd
mov
in
fstl
lret
sbb
cmp
cmp
adc
cmp
mov
mov
scas
lret
mov
scas
mov
pop
xlat
mov
mov
or
ja
push
xchg
subl
mov
in
movsb
add
sarb
jb
dec
push
addl
daa
xor
xchg
js
ljmp
gs
xchg
lds
xor
jmp
bound
dec
mov
mov
shlb
push
mov
fidivrl
inc
cmc
subb
adc
inc
es
inc
je
inc
loopne
loop
inc
xor
imul
cmpxchg
xchg
enter
pop
in
push
out
mov
jo
outsl
gs
mov
adc
cmpsl
inc
lods
test
je
or
xchg
mov
out
mov
insb
pop
inc
popa
xor
push
ljmp
mov
cmp
push
clc
cmp
mov
mov
mov
mov
ror
cli
mov
movsl
mov
lahf
xchg
push
inc
std
push
jne
push
mov
lods
and
movsb
jg
jge
sbb
cli
insb
push
les
add
in
adc
push
mov
arpl
fs
sbb
jae
cmp
adc
dec
ljmp
cmp
aam
pop
lret
xchg
fmuls
dec
testl
jne
loopne
sub
mov
xchg
jnp
sub
xchg
and
cld
mov
pop
adc
lods
outsl
scas
js
jmp
xor
imul
les
xchg
inc
stos
mov
cmp
cmp
sub
mov
mov
adc
andl
das
mov
negb
into
fdivl
ljmp
xchg
xor
sbb
cmpsb
jmp
push
sub
jnp
ficoms
lods
jge
sub
out
insb
fwait
inc
movsb
cmp
add
sbbl
call
mov
add
ss
mov
dec
addr16
cld
fcoms
hlt
aas
cmpsl
int
pop
idiv
outsl
nop
mov
gs
push
jp
dec
pop
clc
dec
cmc
out
sarl
dec
mov
test
insb
mov
stos
cmp
push
rcrl
push
push
loope
mov
mov
sbb
iret
enter
addr16
lods
repz
adc
js
cmpsl
xor
pop
add
push
pop
dec
stos
out
inc
inc
ret
mov
inc
mov
roll
ret
push
pop
ljmp
popa
mov
xor
fcmove
cmp
adc
xor
popf
mov
fmuls
test
int
stos
or
pop
or
popa
xchg
jb
out
pop
jb
cmp
js
jg
sub
push
je
aam
leave
cmp
xchg
jae
or
cmpb
xor
mov
call
xchg
aam
push
xchg
xchg
push
and
test
enter
mov
aas
xchg
bts
adc
sub
cwtl
push
sbb
loopw
lret
inc
andl
push
jmp
xchg
fs
push
scas
mov
lods
out
sbb
fsubrs
popa
dec
fidivrl
lahf
aaa
in
loopne
push
mov
sub
icebp
test
cmpsl
test
fnstcw
adc
sbb
lock
mov
jecxz
mov
ss
push
popf
cs
test
sahf
call
shlb
inc
and
mov
aas
bound
jno
dec
stc
cmp
ljmp
adc
out
adc
stc
and
pop
lahf
aam
test
and
mov
mov
jne
xlat
push
int3
sub
mov
or
sub
sbb
xchg
arpl
sbb
cs
pop
out
shlb
notb
xchg
jnp
sub
fidivs
repz
notl
jns
jo
push
mov
into
call
adc
les
sub
rorl
cmc
xorb
popfw
les
and
cmp
inc
bnd
sbb
inc
or
cvtps2pi
sbb
out
or
dec
les
cs
and
push
mov
mov
scas
mov
jnp
into
mov
inc
xor
aad
pushl
int3
push
call
lea
inc
popa
iret
push
cmp
push
push
shrb
xor
jns
je
sub
inc
nop
pop
cmp
in
push
test
hlt
pop
add
cli
pushf
pushf
ja
in
and
cmp
mov
xor
stos
jl
sub
jp
push
add
out
add
imul
ss
cmpsb
pushl
stos
add
jecxz
mov
mov
jo
or
dec
adc
xchg
mov
pop
push
mov
inc
scas
test
movsb
adc
popf
outsl
jle
adc
add
insl
rclb
mov
stos
std
pop
je
je
mov
in
jl
les
cmc
xor
mov
lahf
outsb
incb
enter
xor
ret
xor
mov
sbbl
lods
push
sti
adcl
xor
xchg
ficoms
inc
mov
test
icebp
dec
sub
xchg
jae
pop
fisubrs
das
dec
mov
sbb
aas
adc
or
pop
sbb
cld
mov
and
fucomi
or
fsts
sti
adc
fidivrl
push
cwtd
push
sti
xchg
test
xor
scas
loope
fldt
daa
sti
loop
subb
stos
mov
push
push
into
mov
mov
cltd
jnp
adcl
mov
insb
cmp
clc
mov
push
out
leave
adc
loopne
mov
mov
cmp
jo
jmp
jne
xchg
insl
mov
pop
xor
or
add
rcll
fiaddl
mov
popa
fsubr
or
xor
lea
sbbl
push
insb
cmpsl
insb
gs
mov
popa
jecxz
lds
fs
cmp
xor
add
add
push
repz
add
test
loop
je
xor
daa
jnp
outsb
cmp
mov
dec
xor
mov
movsb
imul
test
insl
xchg
and
in
leave
out
sbb
icebp
and
mov
loope
xchg
dec
inc
xor
in
mov
sti
mov
fwait
aad
dec
pop
pop
cs
dec
push
fs
cmpsb
jb
xchg
sub
pop
adc
sbb
or
sbb
inc
push
push
fiaddl
inc
mov
ficoml
cs
push
lea
stc
pop
xchg
dec
shlb
daa
addr16
divb
push
sub
addl
lahf
inc
sbbb
cmp
fisttps
and
aaa
fdivs
pop
jmp
imul
mov
les
rcll
pop
mov
dec
mov
mull
cs
je
push
mov
xchg
mov
pop
jl
mov
test
mov
pop
mov
jnp
mov
popa
scas
dec
or
jle
ds
jmp
fcomi
aad
xor
sti
fwait
in
mov
loopne
fwait
jg
fldl
inc
imul
lods
xchg
jb
mov
or
leave
imul
scas
dec
imul
sar
imul
aad
mov
fnstsw
pop
mov
pusha
adc
stc
add
mov
mov
bound
xchg
iret
leave
jb
sub
mov
cmp
gs
in
test
mov
fimull
dec
out
mov
lret
cmp
mov
add
mov
mov
cmpsl
sbb
movb
shlb
adc
testb
test
test
mov
ja
dec
pushf
cmp
and
dec
jp
lret
jle
xor
cmp
xchg
and
stos
insl
aas
nop
inc
adc
sbb
movsb
lods
and
pushf
adc
cmp
jae
fs
daa
jnp
xchg
jae
pop
outsl
mov
xor
sahf
pop
push
in
in
out
cld
or
test
mov
dec
adc
cmp
inc
sub
pop
inc
cltd
cmp
and
xor
not
xchg
shl
xchg
fists
outsb
scas
fisubrs
push
sbb
mov
insl
test
js
ss
mov
xchg
ds
jae
push
es
test
add
jns
leave
cmp
ret
mull
iret
shll
jecxz
mov
pop
mov
sub
hlt
aaa
insl
mov
ljmp
pop
ret
inc
rorl
sub
fildll
fidivs
sbb
fidivs
or
push
sbb
cld
or
ljmp
mov
or
xchg
sbb
pop
test
mov
pop
dec
test
aam
aas
add
dec
dec
shlb
cmc
insb
mov
daa
and
lcall
mov
pop
pop
sti
fimuls
pop
xor
sub
mov
lods
lock
test
mov
mov
fcomps
jge
or
scas
pop
ja
xor
jb
imul
push
push
and
jb
loope
jnp
cmp
repz
jle
in
xor
leave
les
fiaddl
or
jmp
movb
cmp
xchg
js
stos
fisubs
aad
test
sti
frstor
dec
movsb
out
mov
cli
xchg
jl
or
outsb
mov
fsubrl
xchg
adc
aas
test
test
lahf
jp
insb
pushf
std
test
cld
or
adc
fsubp
mov
mov
adc
test
pop
xlat
jo
icebp
jb
jno
div
scas
inc
jbe
incl
sub
and
jb
ret
mov
mov
jmp
ficoms
sub
mov
call
out
pop
outsb
sbb
xor
je
xchg
out
sbb
dec
out
lods
jge
pop
dec
and
insl
insl
loopne
mov
aad
ffreep
jge
mov
adc
and
lds
pusha
pushf
je
cmc
and
xor
adc
mov
push
and
out
cmp
in
pop
sti
sbb
stc
lret
cli
pop
or
mov
mov
repz
mov
pop
dec
cld
data16
scas
out
xlat
insl
adc
sub
mov
and
lret
mov
adc
mov
imulb
or
or
into
test
insb
mov
xor
jno
les
mov
bound
dec
repnz
cmp
jae
dec
rclb
xchg
std
push
xorb
adc
popa
dec
cmpsl
xchg
mov
mov
xor
clc
lret
ret
lret
add
fsub
pop
xchg
xchg
lret
jnp
mov
pusha
sbb
sbb
add
fwait
iret
cltd
lret
mov
ds
and
inc
std
lcall
jle
push
pop
cmc
lds
inc
push
jge
xchg
pusha
mov
dec
icebp
push
sbb
lock
lods
xlat
push
push
sbbl
fldl
xchg
repz
scas
add
stos
outsb
out
cmp
add
out
sti
and
divl
pop
or
jmp
rclb
xchg
cmp
lock
xchg
push
adc
ljmp
aad
add
mov
cmpsl
sbb
mov
sbb
and
push
push
sti
adc
cmpsl
mov
arpl
mov
jg
xor
and
jmp
push
sub
in
pop
add
out
and
daa
push
cltd
bound
mov
rcrb
add
cltd
fcoms
sbb
std
sahf
cmc
pusha
popf
outsl
stos
push
fdivrl
daa
push
mov
pop
aad
and
push
xor
adc
sub
ss
sahf
cli
mov
or
les
push
push
loopne
clc
mov
pushf
adc
push
sbb
stos
jl
push
outsb
aas
fcomp
mov
add
sub
or
jo
subb
stos
or
pop
ljmp
rcr
aam
add
sub
pusha
cli
arpl
mov
pop
or
cld
ljmp
and
cmp
xchg
cmp
adc
add
stos
out
sbb
call
movsl
gs
sbb
inc
js
int3
jle
inc
inc
pop
xor
inc
jo
mov
repz
cmp
cmc
xlat
inc
mov
js
in
jl
idivb
push
cmp
push
adcb
lods
jae
cmp
sbb
ljmp
jmp
adc
mov
insb
sub
nop
mov
mov
stos
cwtl
cs
sbb
inc
les
add
push
mov
mov
lahf
push
aaa
icebp
enter
int
lret
out
sbb
pop
xor
enter
xor
insb
es
clc
and
addl
pop
push
jae
and
lret
xor
mov
in
push
xorb
jg
mov
jns
imull
jecxz
rcll
ficoms
dec
bound
cmp
mov
sbb
dec
ficomps
xchg
movsl
rcll
add
leave
idivl
aas
fimuls
hlt
sub
inc
sbb
push
add
imul
imul
pop
and
mov
fisttps
xor
adc
dec
jl
bound
lock
gs
xchg
jnp
pop
pop
dec
rclb
out
repnz
leave
jp
les
jns
je
lahf
das
cltd
cmp
stos
addr16
in
pushf
out
mov
dec
out
lock
fdiv
fnstenv
aaa
lods
jl
sbb
movsb
jae
push
in
loop
aas
cmpsl
jg
imul
sub
imul
cs
and
mov
leave
addl
mov
imul
mov
or
cwtl
negl
repnz
out
and
scas
sub
mov
cmp
roll
dec
dec
imul
dec
je
push
std
xchg
int3
and
mov
mov
call
jmp
fsubr
repz
add
pop
or
add
mov
call
outsb
enter
and
push
mov
data16
dec
lret
scas
fnstcw
mov
mov
std
mov
pand
ljmp
fisubs
push
enter
xor
lods
push
add
push
push
or
xchg
daa
mov
mov
push
test
and
cmp
int3
testl
mov
nop
js
test
sbb
lahf
and
push
imul
aad
sub
push
cltd
mov
cmp
ds
shll
pop
mov
roll
out
pop
nop
xor
outsl
mov
stos
adc
aam
clc
push
imul
sti
dec
in
xchg
pop
pop
icebp
jo
fwait
pop
sub
jb
fwait
mov
push
ja
mov
pop
cmp
xor
push
xchg
iret
jbe
mov
mov
push
mov
sahf
clc
in
insl
cmc
xchg
loopne
jae
inc
xchg
sbb
dec
repz
les
jb
cmp
mov
or
gs
mov
pop
dec
mov
dec
and
or
rolb
and
jae
repnz
sbb
xchg
imulb
mov
fcmovbe
dec
jnp
leave
or
push
cld
adc
push
sti
ja
jbe
mov
cmp
ds
repnz
fsubp
cmpsl
ret
loopne
ret
lods
jns
sti
adcl
outsl
lcall
cmp
xlat
movsb
out
mov
imul
lods
jge
lea
mov
faddl
frstor
cmpsl
and
pop
push
ljmp
mov
jbe
or
xorl
out
cmpsl
scas
push
and
mov
daa
jb
xchg
leave
loope
adc
rcrl
sub
add
push
in
adc
daa
enter
jp
push
sti
pusha
popf
popa
mov
out
out
xor
pop
xorb
sbb
xchg
imul
pop
dec
mov
lret
mov
sub
sub
sbb
add
outsl
imul
adc
iret
pushf
andl
inc
mov
mov
xchg
lahf
ret
popa
das
or
popf
sbb
mov
call
adc
adc
repnz
or
lcall
fstl
mov
lock
addb
sbb
pop
repz
fsubrs
fldl
stos
addb
sbb
dec
mov
add
sub
das
dec
xchg
dec
mov
pop
mov
xchg
xor
jle
xor
xor
enter
sub
jle
cwtl
fsubrp
dec
push
inc
dec
jo
mov
lret
jecxz
jge
push
push
and
dec
fidivs
pop
adc
pop
insl
lea
gs
xlat
push
aad
cmp
fidivl
xor
loopne
lcall
adc
xor
ret
cmp
cwtl
insl
push
inc
pop
cmp
inc
pusha
cmpl
aaa
jns
sub
mov
jge
bound
and
into
add
outsb
dec
sub
adc
lret
fldl
ds
mov
lock
xor
sbb
mov
xchg
out
mov
push
out
psubusw
clc
adc
jmp
cmp
lahf
mov
fidivs
pop
cmp
push
imul
sub
addr16
jmp
xor
pop
pop
movsl
dec
jns
adc
es
insl
out
adc
call
clc
dec
push
dec
sub
add
mov
mov
ljmp
inc
call
push
push
sbb
xchg
and
mov
push
pop
xor
xchg
pop
pop
in
xor
bound
popa
push
movsb
outsl
notl
in
xchg
or
or
push
and
xchg
cltd
popf
jb
adc
mov
imul
outsl
subb
jge
sbb
add
xchg
cwtl
enter
xchg
and
int
xchg
loopne
ja
mov
sub
xchg
add
push
popa
int3
sbb
sub
aaa
dec
test
fisubrs
int
popf
sbb
je
cmp
mov
popa
in
mov
icebp
pop
subl
aaa
add
sbb
pop
jbe
xorb
and
pop
and
inc
lods
lahf
push
lret
push
rolb
imul
or
and
xor
push
enter
mov
sub
lods
jge
shlb
jns
add
insl
xchg
mov
stos
cmp
push
rcrl
cs
das
test
les
aam
jl
fs
mov
sbb
daa
jmp
push
and
call
jbe
test
roll
xor
call
call
lods
xchg
je
cmp
or
into
mov
cmc
or
xchg
xor
inc
and
imul
lea
jne
lretw
xor
mov
push
jp
gs
xor
adc
cmp
jp
sub
push
jge
stc
xchg
scas
cmp
ss
jge
sbb
loop
test
push
xchg
xor
push
push
xchg
mov
and
adc
mov
fisubrl
push
sbb
ret
jbe
stc
mov
aam
mov
ljmp
push
jecxz
pop
or
mov
mov
test
push
loopne
mov
xor
mov
out
push
or
mov
out
cmpsl
cmpsb
cwtl
pop
call
adc
insl
rclb
outsb
loopne
movsl
outsl
push
popa
cmp
xor
iret
psubusb
ss
adc
sub
insb
leave
xchg
mov
sbb
enter
pop
aad
push
mov
jno
cmp
sbb
hlt
rorl
cwtl
adc
ds
in
sahf
ja
mov
mov
movsb
jbe
xchg
lods
loopne
fs
mov
dec
dec
ret
repnz
push
fiadds
lea
dec
xchg
xchg
mov
out
repnz
adc
mov
inc
cmp
shlb
rolb
mov
lea
int3
mov
movsb
sbbl
sbb
xor
leave
mov
push
cmp
repnz
cwtl
add
jmp
pop
push
push
jae
fcompl
xor
mov
dec
jmp
and
add
push
push
rcrb
jp
add
push
mov
pop
jns
std
pop
rorb
mov
adc
ja
xor
mov
aad
xor
mov
test
rclb
mov
jp
pop
cmp
cmp
stos
mov
rorl
lret
lcall
popf
jbe
pop
sbb
sub
ficomps
jg
jge
mov
mov
aas
inc
icebp
jmp
jle
mov
add
in
cltd
push
imul
aad
stos
cwtl
add
insb
arpl
test
addr16
rcrb
mov
test
int3
cwtl
adc
jp
repz
inc
aad
xchg
push
idivb
pop
adc
rcrb
or
add
lahf
lods
shrl
clc
sub
xor
adc
lock
xor
sarl
jl
pop
mov
xor
add
popf
in
jae
or
mov
inc
out
ja
mov
push
pop
bound
call
cmp
xlat
pop
pop
dec
or
mov
arpl
push
push
jp
iret
jno
fld
xchg
bound
pop
arpl
lret
repz
lcall
sar
sub
bnd
cmp
in
in
push
mov
cmp
mov
mov
ja
inc
xchg
je
addb
cmpb
ljmp
jb
push
bound
cmpb
fiadds
jno
dec
push
jno
insb
xchg
cmp
rorb
mov
rcrb
fwait
ds
stc
in
sub
lret
sbb
dec
test
sub
ljmp
in
ljmp
std
sbbb
insb
test
idivl
jne
or
decl
cmp
cmc
outsl
pop
jl
pop
jg
mov
pushf
rorb
dec
cmp
nop
bound
lcall
shll
pop
sbb
push
or
pop
cmp
xchg
and
sbb
mov
mov
ficomps
push
push
bound
movsl
pop
aad
mov
add
adc
adc
pop
sub
int3
xor
push
js
adc
popf
repz
jno
mov
lock
adc
aas
adc
adc
mov
xchg
cwtl
out
sub
xchg
cmp
sbb
or
sub
dec
bound
jnp
jno
push
dec
filds
sbb
dec
cli
in
mov
loope
dec
aaa
in
sbb
xchg
cmc
cld
insb
movsl
pop
das
pop
push
mov
mov
xchg
mov
orb
xchg
xor
pop
lock
add
push
jbe
jb
mov
stos
leave
jne
pushf
dec
je
jge
icebp
fwait
stos
mov
cli
adc
lret
dec
pop
push
sub
jae
push
add
nop
ss
mov
movsb
jb
pop
or
inc
out
push
fldt
pusha
mov
dec
mov
cltd
mov
insl
cltd
mov
cmc
xchg
std
ss
addr16
clc
push
ret
insb
pop
xor
test
mov
add
push
xchg
add
cmpsl
subps
or
pushf
leave
ljmp
pop
int3
mov
idiv
add
repnz
xchg
inc
ret
push
xor
dec
fidivrs
cli
xchg
test
adc
sbb
fsubrp
sbb
fs
mov
ret
call
hlt
movsb
sbb
sbb
mov
sub
jno
xor
popa
sub
xlat
or
sbb
test
lds
adc
pop
pop
jb
push
and
cltd
rcrb
mov
jbe
pop
cltd
aaa
aas
push
fists
sbb
out
popf
add
call
loope
push
dec
mov
add
std
data16
xchg
xchg
scas
jae
mov
or
xor
dec
mov
jp
pop
repnz
out
test
loop
mov
jae
aas
repz
daa
iret
xchg
mov
out
arpl
xor
push
mov
sub
xor
xchg
inc
or
dec
lcall
mov
sub
mov
negb
dec
ret
test
mov
dec
inc
mov
mov
aaa
adc
or
addps
adc
jg
xor
jle
sub
xchg
ja
mov
sbb
mov
sub
or
mov
scas
and
lret
fcomps
push
jo
jno
cmp
inc
outsl
mov
setae
pop
aaa
mov
mov
rorb
mov
or
sahf
mov
pop
inc
popf
xchg
int
add
inc
mov
sub
lret
lret
arpl
cwtl
rcrb
stc
push
cmpsb
add
add
js
xchg
movsl
xchg
aam
mov
jmp
addr16
loop,pn
das
and
les
add
into
cmc
jnp
fists
mov
sub
les
xor
sbb
outsl
push
lea
hlt
add
aas
popa
movsl
lea
cld
add
jnp
adc
add
insl
stc
sbb
or
adc
add
mov
pop
inc
xchg
test
pop
enter
jne
out
test
lahf
pop
gs
out
mov
mov
ss
scas
mov
or
mov
fcoml
adc
pop
push
stc
stos
push
adc
and
subb
mov
xchg
pop
cmpsb
jmp
sarl
mov
mov
inc
jnp
adc
imul
in
mov
je
push
mov
sub
lods
cmpsl
aas
fwait
pop
shll
call
daa
or
insb
mov
repz
out
cmp
in
stc
int
imul
test
mov
add
pop
dec
gs
push
shl
loop
stos
push
lret
xor
mov
imul
stc
adc
inc
negl
jecxz
fwait
mov
sub
rolb
imul
jnp
and
or
mov
nop
mov
sbb
jne
xlat
movsb
mov
scas
arpl
outsb
mov
gs
negb
cmp
rcrl
mov
add
push
lods
and
pop
cltd
sbb
pop
pop
pop
addr16
lea
lods
xchg
push
and
aaa
cmc
jle
pop
scas
ljmp
push
mov
leave
cmpsb
les
aaa
dec
ror
dec
or
cmp
dec
imul
adc
mov
xor
andl
inc
inc
testl
or
pusha
jnp
int
xor
ja
xchg
test
mov
aas
or
pop
sub
loopne
pop
cmp
and
add
push
xchg
cmpsb
fxch
cld
movsl
loopne
cmp
jo
and
fs
xor
sbb
shrl
adc
mov
shlb
jne
pushl
dec
pop
sub
push
adc
jge
fadds
sbb
pop
mov
and
inc
dec
push
in
xor
test
and
cmp
mov
xor
out
or
loop
cli
lahf
shrl
adc
mov
pop
hlt
xor
dec
out
adc
inc
das
pushf
sbb
imul
insl
fiadds
xchg
mov
push
fcmove
cmpsl
and
xchg
mov
sub
sub
push
dec
or
inc
pop
pushf
sti
std
shrl
push
pop
or
enter
xor
ss
pop
cmp
aas
subb
push
out
dec
aam
jecxz
mov
inc
adcb
cmp
mov
pop
ficoml
cmp
loop
add
icebp
in
sahf
sbb
mov
push
xchg
push
pop
movsb
movsl
pushf
idivb
or
xchg
or
ss
fs
xchg
scas
rorb
ret
xchg
xor
imul
mov
jg
xchg
dec
dec
into
push
cmp
mov
inc
jl
adc
mov
xchg
mov
aam
and
ljmp
lea
enter
cmp
add
add
pop
mov
mov
mov
sub
jae
adc
sub
nop
std
std
scas
mov
jns
mov
push
test
push
in
pop
dec
pushf
lahf
mov
bound
xchg
lret
test
je
mov
scas
and
or
mov
out
test
fdivrs
lock
sub
test
adc
cmpsb
and
or
ret
fsubrl
and
das
sti
and
enter
pop
push
push
int
xchg
pop
nop
jmp
mov
dec
movsb
inc
mov
call
mov
mov
in
ds
stc
out
lcall
dec
pop
mov
andl
dec
mov
das
imul
adc
add
nopl
xchg
cmp
fildl
scas
mov
sarb
movsb
cmp
clc
ds
enter
lret
inc
mov
push
out
fwait
int
aaa
mov
mov
orl
sbb
jno
ret
mov
cli
loopne
push
inc
insb
cmp
push
fcomp
cmp
leave
pop
add
mov
dec
cmpsb
int
andb
and
pusha
jno
int
sub
into
in
pop
stos
ja
das
adc
fs
or
mov
outsb
sbb
xchg
or
out
adc
loope
testl
jno
xchg
fisubrl
pop
xor
pop
pand
cmc
ret
sbb
rolb
sarl
fidivl
pop
pop
add
ret
xchg
cmp
lods
sub
mov
or
daa
aad
sub
sub
testl
in
fildll
pop
scas
test
push
nop
mov
and
jle
pop
push
fadds
mov
pop
ds
les
bound
cld
jbe
out
movsl
imul
mov
adc
outsl
outsb
jne
mov
ss
cltd
hlt
sarb
leave
in
mov
lret
movsb
mov
call
adc
sbb
daa
xchg
add
sbb
push
sbb
aas
cs
push
aam
dec
sub
repnz
pop
mov
aas
std
aaa
xchg
mov
aad
pop
cli
sbb
in
ret
pop
mov
pop
insl
ja
cvtps2pi
cmpsb
sub
xor
or
outsb
xor
clc
inc
sti
jbe
repnz
scas
and
fdivs
icebp
add
sbb
xor
push
mov
pushf
pop
jle
push
pop
enter
ret
push
subb
fs
add
mov
std
xor
iret
and
xor
sbb
dec
jae
xchg
adcl
mov
push
ja
fwait
xchg
add
mov
in
mov
cli
cmp
xorl
lret
incl
mov
lods
mov
iret
fldl
cmpsb
ret
les
movb
rcll
push
adc
jnp
mov
andl
outsl
fldt
fdivrl
push
bound
in
je
mov
repnz
mov
mov
pop
rol
pop
cmp
push
into
lea
pusha
ljmp
xor
fsub
mov
sbbl
imul
adc
xor
shl
dec
fmuls
mov
aam
mov
psraw
xchg
stos
ds
fs
xor
enter
jmp
mov
ja
sbb
sub
mov
sub
out
push
mov
or
sub
and
xchg
lds
xchg
nop
mov
add
fnsave
push
inc
jecxz
sarl
inc
inc
popf
adc
jbe
lock
push
loope
imul
negl
sbb
mov
pop
addb
out
push
xor
mov
inc
mov
int
and
jno
insb
push
test
movsl
notb
icebp
xor
dec
mov
pop
cltd
adc
mov
add
into
xor
out
inc
pushf
sbb
pop
lods
push
push
mov
sahf
or
jne
cld
pop
lret
stc
stos
mov
fstl
and
test
lret
aam
mov
sbb
aad
sbb
lods
push
pusha
mov
dec
pop
jo
out
push
jne
pop
push
imul
arpl
adc
lret
pop
popf
pop
gs
or
adc
rcll
xlat
mov
popa
or
and
movb
or
idivb
daa
mov
in
repnz
stc
mov
cmp
jb
test
test
cwtl
bound
push
pop
cmp
inc
cs
fdivrl
data16
popa
call
lcall
adc
iret
bound
xor
inc
test
mov
test
add
dec
test
xchg
imul
data16
adc
jecxz
lgdtl
jnp
mov
mov
test
icebp
push
sbb
mov
adc
lods
and
addr16
push
sbb
or
out
scas
push
adcl
in
jecxz
rcl
popf
or
jp
std
sbb
fcoms
std
jmp
jle
and
sbb
ret
insl
adc
adc
cmovns
in
push
addl
ficompl
mov
fwait
pop
test
sub
scas
imulb
test
jne
data16
jae
and
cwtl
xor
test
insb
sti
add
push
and
xor
out
ja
and
sub
mov
add
dec
pop
mov
lods
or
xor
lret
cli
add
sti
sbb
mov
mov
adc
stos
inc
stos
daa
xchg
sbb
adc
int3
and
or
xchg
gs
push
inc
aam
icebp
cmp
add
xchg
faddp
inc
jmp
cvtps2pd
jl
icebp
es
out
jecxz
nop
mov
mov
fidivl
or
mov
xor
or
dec
aaa
mov
aas
in
je
scas
es
push
dec
add
cmc
jne
cmp
jne
push
rorl
test
sub
pop
stos
adc
and
subb
lahf
add
ljmp
or
xchg
sbb
push
jb
enter
orl
mov
call
rclb
push
clc
les
sub
sbb
test
xchg
enter
inc
das
out
jecxz
stc
lds
bnd
int
or
cmp
jle
loop
andl
mov
into
add
aad
mov
scas
sbb
test
mov
inc
lods
sarb
dec
inc
pop
int
repz
xchg
and
or
sub
jb
or
fcompl
xchg
sub
fmull
movsl
mov
inc
mov
rorb
sahf
push
mov
lds
filds
and
sahf
iret
sub
orl
fwait
sbb
cmp
sub
inc
movsl
push
pop
hlt
jbe
in
mov
xchg
loop
lea
lock
push
cs
leave
xchg
rcll
xor
int3
sub
cld
into
push
xchg
mov
push
sub
mov
push
mov
sbb
add
sub
arpl
leave
adc
repnz
shl
bound
add
stc
mov
out
and
adc
push
mov
push
in
test
xlat
lret
ss
clc
xchg
pop
es
ljmp
sub
fcmovnb
pop
int
dec
and
mov
lcall
lret
repnz
add
in
and
xchg
fdivrp
mov
xchg
cmp
andb
out
or
and
mov
jbe
stc
ja
dec
mov
ficoms
cmpsb
jns
jp
lods
jbe
adc
out
mov
jne
xor
mov
push
pop
subb
ja
cmpsl
movsb
pop
cmp
cmc
test
loop
js
rol
popa
mov
pop
mov
mov
outsl
jo
push
cmpsl
shll
js
inc
dec
xor
fsubs
push
inc
fstpl
fyl2x
test
sbb
pop
cmpsb
inc
pop
sbb
or
fdivrs
or
xchg
or
outsb
or
imul
clc
push
cld
addb
sti
pop
out
and
mov
add
outsb
inc
js
ljmp
fmuls
pop
mov
and
jns
fs
cmpsl
push
adc
sub
adc
pop
data16
out
shlb
sub
pop
inc
filds
pop
xchg
rcr
into
pop
pop
jb
push
cmp
add
out
push
ss
enter
popf
js
sbb
ret
add
add
push
outsl
aas
jbe
mov
lret
test
inc
push
leave
xchg
fbld
iret
popf
dec
testl
sahf
xchg
popf
fldl
imul
pop
fldt
dec
rorb
je
mov
dec
fistpll
jne
aas
rcll
add
xchg
mov
pop
jo
lret
shll
xchg
arpl
xchg
push
mov
fwait
push
adc
pop
shl
iret
or
lock
stos
fstpl
mov
out
mov
lcall
mov
ret
xchg
les
rorl
rcr
jae
rcl
sbb
ljmp
test
mov
iret
push
lds
jp
add
or
push
or
clc
or
adc
sahf
js
push
mov
out
mov
lods
mov
mov
das
xchg
icebp
mov
and
sbbb
dec
jmp
in
jl
stos
jo
push
pop
and
push
cli
scas
imul
shll
xchg
mov
and
adc
adcl
mov
or
pop
ja
pop
cwtl
xchg
or
or
orl
xor
mov
fsubrl
daa
and
in
mov
sbb
ss
xchg
mov
or
rclb
call
fldcw
xchg
lret
dec
push
shll
out
out
pushf
fistl
mov
pop
clc
ljmp
mov
add
inc
in
inc
mov
imul
adc
pop
xchg
and
hlt
sahf
and
andb
int
adc
mov
mov
icebp
lret
or
and
aam
mov
xchg
inc
pop
inc
xchg
push
cli
sub
pop
inc
dec
inc
cmpsl
jno
lds
mov
mov
out
pop
pushf
into
jb
jecxz
inc
mov
mov
fimull
or
cmpl
xchg
rcll
filds
cmp
sub
fs
jb
add
stos
cmp
cmp
jne
mov
stos
jae
mov
jmp
enter
adc
or
in
sbb
adc
xchg
inc
hlt
jb
cld
movsl
mov
xlat
ficoml
ja
mov
fildll
icebp
jo
iret
mov
push
xor
lods
enter
sbb
lcall
faddl
lock
lea
push
sub
jl
mov
fldcw
sahf
fstpt
add
gs
int
ljmp
in
push
inc
xchg
sbb
fisttpll
inc
movsb
and
imull
idivl
subl
cwtl
mov
cmp
mov
jmp
mov
aam
aam
push
mov
push
jns
stc
or
xchg
sub
jle
add
cmp
insb
lret
mov
push
mov
in
sbbl
fsts
call
jns
lea
icebp
mov
dec
aad
jmp
fcoms
inc
icebp
pop
fdivs
cmp
sar
push
fdivr
lret
lcall
or
mov
inc
ret
fbld
cmpsb
mov
cs
mov
xchg
sti
cmp
icebp
sbb
push
in
mov
lahf
aam
lds
sbb
mov
xor
mov
aad
outsb
mov
pop
ja
cmp
nop
add
out
inc
adc
rcrl
fidivl
int3
loope
fsubrp
ret
aam
in
mov
add
mov
push
and
fwait
and
or
push
dec
fs
fdivs
cs
and
aad
sbb
and
pop
and
sbb
sub
ret
push
ljmp
jbe
cwtl
cli
cmp
dec
orl
std
add
movsb
xor
sbbl
jmp
int3
inc
pushf
addr16
movsl
push
pop
rcll
lods
sti
cwtl
ficoms
sub
int3
cmpb
sbbb
jg
mov
leave
jne
lcall
loope
adc
dec
sub
push
jg
jbe
sub
mov
cmpsb
mov
adcb
dec
sub
fadds
xor
pop
jle
mov
fdivrs
fldt
jmp
fisttpl
xor
xchg
jg
shll
xlat
and
aas
sbb
sub
aad
lds
jno
ss
cli
ret
jns
jg
fcmovnbe
notb
sub
xor
sti
shll
pusha
jl
mov
sbb
or
sar
mov
jg
sub
or
xor
shr
push
pop
sub
cwtl
in
in
pop
mov
push
dec
mov
inc
and
out
aad
idivl
xchg
sbb
cwtl
mov
arpl
xor
mov
push
fidivrs
sub
sahf
push
data16
mov
je
xlat
ret
mov
mov
pushf
mov
sbb
sub
clc
fmull
lahf
roll
jmp
add
xor
repz
cmc
ss
dec
pushf
es
dec
out
test
sub
imul
fld
shlb
jnp
lods
xchg
pop
inc
int
imul
jmp
test
fidivrl
xor
pop
mov
orl
fucomp
lods
or
dec
insl
push
fistps
push
adc
inc
jne
gs
jl
xchg
mov
das
cli
xor
cmpsb
mov
and
push
roll
inc
dec
movsl
xchg
shl
stos
adc
lods
aam
fcoml
adc
push
inc
and
clc
push
xchg
lret
mov
inc
je
cmpl
bswap
movsb
mov
arpl
data16
jg
int3
out
loope
test
data16
cmp
add
and
fisttpl
adc
dec
lds
push
xchg
ja
repz
push
fstp
pushf
mov
dec
mov
std
mov
pop
outsl
push
cmpsl
cmp
xchg
dec
ficompl
popf
jmp
cld
leave
aad
add
cli
mov
pop
arpl
lahf
imul
cmp
data16
jge
faddl
popf
pop
pushf
mov
je
stos
sub
nop
es
push
pop
sub
gs
ljmp
mov
sub
pop
dec
add
dec
out
jae
jl
int
or
xor
cmp
out
andl
pop
pop
mov
mov
dec
xchg
ss
dec
jnp
mov
in
push
sbb
cmpsb
insl
pop
add
add
je
jp
push
jge
sub
pop
mov
aam
loop
stc
push
or
mov
imul
xor
cs
mov
ljmp
bound
into
sbb
insl
je
imul
pop
call
test
mov
sbb
ljmp
outsb
sbb
dec
dec
out
stos
lods
pop
jl
and
add
adc
in
int3
mov
push
rcr
jge
xlat
pop
in
and
cli
sti
lods
sbb
pop
daa
outsb
data16
mov
adc
pop
xlat
and
xlat
int3
mov
push
in
loope
movsl
fwait
xchg
lcall
mov
lahf
mov
and
icebp
mov
pop
pop
mov
pop
sbb
pop
es
je
sti
outsb
mov
inc
sahf
mov
aas
mov
ja
jns
movsl
mov
jns
in
xchg
jl
and
xchg
dec
and
stos
mov
cmp
imul
mov
aam
xor
out
scas
xchg
test
mov
add
andb
shufps
pop
lds
stc
mov
nop
movb
adc
xchg
stc
dec
loope
jecxz
push
adc
jnp
sbb
inc
dec
int3
mov
aam
ja
arpl
mov
mov
mov
mov
jmp
stc
sbb
inc
add
push
sbb
aaa
rcr
pop
in
sbb
add
js
inc
movsl
inc
mov
cmpsb
cmp
jg
adc
add
sbbb
fwait
xchg
movsl
mov
je
in
jns
or
inc
fisubl
xchg
cltd
push
xor
jle
mov
dec
aad
sub
inc
hlt
int3
aad
pusha
clc
out
call
jmp
pop
lods
push
mov
mov
jns
dec
notb
jp
shl
cmc
or
xchg
mov
push
iret
and
mov
pop
cmpsb
mov
pop
mov
mov
clc
stc
pop
rol
lea
inc
ffreep
sbb
mov
leave
lahf
outsb
add
ss
mov
push
sub
bound
mov
or
cmpsl
xor
inc
jno
dec
pop
dec
adc
in
xor
push
imul
das
in
add
push
jae
xchg
insl
cs
or
pusha
icebp
push
mov
pop
ret
add
push
mov
jnp
jle
pop
in
push
mov
stos
pop
sbbl
cmp
insl
add
and
xchg
test
pusha
pop
mov
test
into
cmp
xor
inc
xchg
push
sbb
xchg
movsl
or
call
subps
scas
cli
aaa
roll
shrd
sbb
fidivrs
jne
es
xorl
mov
cli
jg
push
and
shlb
pop
fs
add
inc
xchg
pop
pop
mov
js
daa
int3
leave
sbb
fmulp
imul
jno
outsl
clc
pusha
mov
mov
mov
ljmp
lds
cli
lock
int3
jne
pushf
xchg
mov
sarb
and
push
xchg
adc
insb
inc
stos
pop
xor
push
cld
mov
jno
nop
mov
or
pminsw
das
mov
pop
fs
aas
add
jns
test
mov
aas
sbb
xchg
add
insl
shlb
lret
mov
pop
xor
cmp
and
xchg
inc
push
mov
mov
mov
fstpt
jo
faddl
pushf
jbe
testb
mov
fsubs
jb
pop
xor
xchg
or
leave
mov
push
xchg
or
lock
mov
xchg
xchg
mov
or
ja
cmp
sub
and
dec
or
jge
ja
sbbb
aam
xor
cli
faddp
lds
add
xchg
pop
jl
fidivrl
mov
mov
test
jne
lahf
popf
jne
ret
les
push
sub
inc
pop
aaa
loopne
insb
lahf
stos
push
fldl
daa
sbb
insl
mov
movsb
outsb
sti
in
in
mov
in
add
cmp
cltd
xchg
rclb
hlt
inc
outsl
jmp
es
sahf
movsl
and
fdivs
rorl
idivb
dec
std
out
xor
pop
scas
sub
cltd
push
and
add
out
cmp
dec
adc
ss
adc
aaa
repnz
divl
pop
jae
addr16
sub
aaa
daa
test
pop
in
lret
aad
add
lock
push
xchg
inc
ja
dec
mov
mov
add
fldl
and
and
clc
movsb
push
push
sbb
imul
push
mov
clc
and
adc
inc
insl
mov
lahf
mov
mov
aam
aam
sbb
mov
test
mov
pushf
outsl
dec
or
aam
addr16
imul
dec
sarl
out
cmpsl
call
movsl
loop
gs
mov
lret
jo
add
in
add
cmp
ret
pop
jns
insl
mov
and
scas
xor
leave
bound
mov
dec
jno,pt
stos
mov
sbb
loopne
sahf
cmp
and
or
repnz
or
sti
cli
pop
dec
xlat
add
lsl
mov
pusha
dec
movsl
pusha
mov
add
cmp
sub
cmp
mov
xchg
loop
adc
loope
out
jg
mov
jp
mov
sub
dec
shrl
loope
cmpsb
mov
mov
adc
adc
mov
xor
xchg
sbb
jle
mov
lcall
cmp
cmc
popf
inc
push
ret
adc
xchg
sbb
xchg
jle
mov
add
inc
xor
or
mov
int
sub
mov
adc
push
pop
popf
stos
jno
in
xor
in
xor
pop
sbb
out
outsb
ret
sub
mov
sahf
shll
jmp
lods
jg
mov
shlb
dec
mov
test
pop
and
add
dec
jno
mov
scas
mov
test
int3
and
mov
dec
jae
sub
iret
push
mov
mov
out
mov
fisubl
insb
fidivl
mov
imul
jo
jbe
xchg
movsb
cmpb
ljmp
pop
mov
addr16
imul
mov
xor
sub
adc
mov
adc
jno
fcmovnbe
lret
js
out
mov
orl
xor
scas
push
addr16
cmp
fstp
jo
not
or
jecxz
cwtl
fwait
lock
sub
jge
cmpsb
lret
enter
pop
mov
xchg
xchg
fwait
sar
rcrb
hlt
jg
mull
insl
mov
sub
das
loopne
mov
xchg
mov
mov
lods
aaa
jmp
movl
or
lods
or
push
or
das
dec
mov
push
sub
push
inc
ja
pop
cmpsb
fldl
out
xor
add
pushf
mov
xchg
pop
push
bound
xor
jmp
sub
frstor
mov
call
dec
xor
inc
cmp
stos
xor
bound
cmc
call
jge
xchg
xor
add
mov
pop
jle
mov
rcrl
dec
cmp
fcmovnb
fbld
pop
mov
in
pop
outsl
into
xchg
dec
dec
sub
add
sti
loope
mov
cld
sbb
decb
sub
adc
repnz
fwait
arpl
mov
test
movsb
mov
xor
rcl
insl
outsl
pop
adc
dec
and
stc
loop
sbb
enter
addr16
pop
or
dec
cmpl
xlat
mov
and
sbb
data16
or
rclb
jae
jb
dec
jns
add
push
push
push
std
leave
dec
arpl
lea
inc
imul
adc
jbe
dec
push
loopne
mov
push
push
test
scas
lock
cmp
ret
aaa
cmpsl
lret
adc
xchg
xor
push
inc
hlt
add
jbe
xor
adc
lea
int
js
and
cmp
aaa
addb
or
inc
jne
jecxz
xchg
cmpsl
sti
repz
jbe
pop
cld
dec
and
sub
pop
clc
cmp
xchg
shr
fs
hlt
push
xor
xchg
outsb
in
leave
cmpb
movsb
jne
dec
push
lock
add
mov
fsubr
xor
dec
jecxz
popf
or
dec
scas
mov
push
jne
jne
cmpsl
xchg
inc
cld
ds
mov
sbb
fiaddl
es
xchg
in
mov
sub
xchg
push
sub
lea
xchg
mov
or
adc
ljmp
out
repz
inc
lods
fwait
mov
iret
pop
mov
scas
pop
hlt
xchg
scas
mov
dec
lock
lcall
test
sub
xchg
xchg
pushl
mov
lahf
out
mov
jmp
scas
scas
mov
loope
rolb
fst
insb
fisubrl
pop
push
xor
aaa
and
mov
mov
adc
cltd
pop
dec
and
pop
inc
mov
jmp
ja
jo
leave
jb
mov
xchg
lods
and
add
mov
push
push
outsl
or
hlt
add
pop
das
lret
mov
jge
in
es
lret
mov
push
insl
jno
lea
in
pop
sti
das
add
orb
mov
mov
iret
imul
xor
subb
push
add
push
add
mov
mov
add
iret
mov
cmp
subl
cmp
incb
stos
jae
cmp
dec
sub
scas
sbb
rcll
lods
push
or
adc
or
sbb
jno
stos
sti
test
push
jecxz
ret
ja
inc
jle
dec
sbb
sub
cs
ljmp
and
mov
loop
gs
es
adc
enter
inc
add
mov
pop
das
fdivrl
sbb
lea
in
pop
sub
and
add
add
addr16
mov
outsb
push
mov
push
es
push
lret
lcall
adc
stc
cmp
test
popa
xlat
cmp
test
and
sub
cld
push
xor
test
mov
mov
pop
sub
daa
hlt
pop
cs
xor
add
out
jl
dec
loope
adc
cld
xlat
add
dec
pop
xor
cmp
inc
pop
lods
mov
in
and
mov
dec
rclb
test
mov
push
loope
fwait
cmp
push
inc
dec
push
movsl
arpl
in
push
outsb
mov
xchg
add
outsb
and
jge
mov
xor
cwtl
push
inc
popa
cltd
xor
loop
pushf
mov
jbe
lret
loope
loop
add
clc
xchg
call
xor
sbb
sbb
loope
les
xor
mov
cmp
pop
mov
mov
pop
adc
xchg
aad
pop
push
push
aam
inc
lret
sub
jae
mov
dec
mov
in
push
lock
mov
pushf
sub
daa
mov
push
xor
jmp
mov
fisubrs
mov
xchg
out
popf
push
cli
xor
out
imulb
xor
or
jle
lock
loop
mov
jmp
sub
sbb
mov
mov
lods
call
push
mov
sbb
xchg
lret
xor
fcoml
ret
cmp
sub
mov
xchg
add
xor
and
loop
cltd
dec
fcmovb
repz
jb
or
xchg
scas
dec
and
fwait
sub
shll
sbb
add
lock
inc
xor
sbb
faddl
fwait
lock
xchg
mov
dec
pop
pop
loopne
or
lahf
xor
fisubl
jbe
in
sbb
addb
scas
loopne
cmp
xchg
dec
pop
fmulp
add
mov
outsl
pop
cmpsb
scas
movsl
jne,pt
sbb
push
add
movq
js
stc
cmp
lcall
add
in
ds
sub
cld
sub
cld
popa
imulb
movsl
add
mov
aam
jg
test
mov
and
pop
xchg
sub
icebp
adc
sbb
pop
cld
inc
out
mov
push
add
add
sub
jns
jae
mov
mov
lret
repnz
xchg
jge
jne
xor
addr16
push
pusha
push
push
loopne
mov
cmp
and
scas
packuswb
mov
inc
rcrb
out
xchg
pop
xchg
sbb
push
sub
inc
xor
dec
hlt
jcxz
das
rorb
lods
mov
ret
test
jmp
mov
or
xor
movsb
push
out
stos
out
sti
and
xchg
mov
out
lret
jecxz
jae
adc
scas
jl
or
add
sub
notb
into
and
notb
sbb
ficomps
mov
or
sahf
es
and
xor
fcomps
daa
xchg
jmp
nop
shl
into
or
orl
pop
xchg
inc
or
gs
aas
dec
jl
insl
in
daa
ja
leave
push
pushf
push
lods
dec
jb
mov
add
into
pop
pop
or
pop
sti
mov
inc
push
xchg
mov
mov
cld
push
jmp
adc
mov
in
pop
xchg
inc
outsb
into
jl
xor
dec
rcll
pop
xor
push
dec
cltd
mov
jnp
das
popw
fldt
cmpsl
subl
and
xor
cmp
push
mov
push
mov
and
inc
loope
cmpb
scas
cmp
addb
imul
jae
loope
sbb
dec
inc
jno
das
push
lea
jno
sbb
dec
adc
or
xchg
insl
push
dec
jle
xor
add
in
sub
dec
adc
adc
mov
sub
dec
je
sbb
icebp
test
pop
and
outsl
cltd
dec
inc
pop
call
push
lods
dec
sbb
dec
and
fcoms
cmp
test
mov
sbbb
stc
mov
stos
fnstsw
mov
lret
scas
insl
jmp
mov
repnz
jecxz
inc
into
loop
mov
mov
and
pop
inc
cmc
xchg
mov
add
xchg
pop
mov
pop
arpl
cmp
jmp
mov
pop
scas
shlb
lods
lds
fildll
pop
mov
adc
jbe
jmp
sbb
insb
add
push
fistpl
and
mov
dec
sub
and
dec
ljmp
jmp
mov
or
jb
shlb
out
dec
push
test
add
test
add
cmp
rcll
xorb
xorl
jmp
fisttps
ficoml
shll
push
adc
sahf
jo
pop
sub
sub
and
and
mov
inc
adc
xor
in
dec
adc
lea
hlt
push
and
cmp
call
leave
or
nop
or
pop
rorb
imul
scas
push
mov
pop
cwtl
mov
leave
cmp
test
add
inc
push
xchg
xchg
mov
sub
repz
enter
cmp
in
xor
pop
pop
outsb
fdivl
mov
cli
fs
testb
adc
aas
xor
add
push
lret
frstor
ljmp
mov
push
lods
lds
lods
sub
arpl
arpl
adc
jge
sub
je
out
mov
std
cmp
ss
xchg
push
pop
add
andl
and
xchg
pop
cmp
mov
jo
out
sahf
xor
jmp
icebp
in
mov
xchg
in
mov
jecxz
jnp
inc
cmp
pop
jmp
in
sbb
mov
sbb
mov
adc
test
pop
nop
gs
filds
fdivrl
dec
jo
pop
fwait
shl
mov
std
pop
repnz
loopne
sub
shl
sub
push
dec
cmp
repz
pop
fwait
inc
push
popl
sub
pop
movsb
inc
cmc
lret
jle
jmp
adc
int
fisubl
icebp
lods
or
xchg
push
addr16
jmp
out
divl
mov
mov
and
in
push
xor
cmpsl
pop
cs
or
dec
and
test
push
mov
and
mov
call
jge
jl
lsl
push
fcom
imul
fisttps
loop
stos
lret
inc
mov
push
je
aam
or
sub
or
int
cld
imul
imul
ficompl
inc
xor
push
inc
mov
xor
ss
sub
out
lock
adc
test
addr16
xchg
insb
insb
xchg
mov
lds
jmp
jl
test
dec
sbb
push
sarb
jg
or
jnp
cmp
and
and
fxam
and
popa
mov
std
sub
loope
mov
lret
pop
adcl
sbbl
push
int
pop
jge
stc
shlb
pushf
rorl
outsl
mov
lods
es
adc
lods
out
lods
in
lods
cltd
mov
ljmp
dec
mov
fxch
je
cmp
lods
je
cmp
xchg
jg
nop
mov
shrb
mov
and
sub
iret
lds
pop
inc
clc
mov
jecxz
mov
sub
mov
scas
out
divl
xchg
mov
popa
or
mov
adc
fcomip
inc
lret
das
int
ficoml
sbb
xchg
cli
mov
pop
mov
popa
push
sbb
int3
mov
fwait
ss
pop
pushf
fwait
ret
push
cli
fisubrs
inc
gs
mov
jmp
fadds
dec
dec
mov
std
push
or
cltd
or
fcompp
inc
pusha
dec
fcmovb
sbb
cmpsb
push
xor
pop
dec
push
jo
mov
in
dec
sbb
sub
jae
aaa
outsl
cwtl
or
outsb
jae
add
sbb
lds
int
popf
or
push
cmp
mov
mov
pop
lock
xor
add
cld
jo
mov
std
lret
jle
xor
pop
fisttpl
dec
jae
pusha
sub
adc
xor
adc
xor
popa
pop
in
xlat
jle
andnps
xor
mov
lods
div
cmp
or
scas
addr16
insb
push
xor
and
cltd
mov
enter
xchg
cmp
add
cmovbe
stos
or
int
sahf
clc
arpl
lret
push
pop
xchg
jnp
jle
pop
push
pusha
add
cmp
insl
push
add
outsb
nop
je
xor
mov
scas
mov
jae
inc
adc
mov
mov
mov
aaa
sbb
push
aam
aas
adc
mov
mov
sub
inc
insb
not
xchg
loopne
mov
mov
mov
aad
mov
sarl
test
lods
mov
dec
adc
outsb
and
icebp
jno
cmp
shlb
nop
ss
test
nop
lahf
test
clc
bnd
and
shlb
jne
jae
push
lds
repnz
fsin
test
clc
loope
clc
repz
je
cmp
push
in
pop
lods
xor
icebp
push
test
js
lret
in
add
jb
xor
aas
mov
add
fistps
mov
jnp
mov
hlt
cmc
repz
icebp
dec
push
jne
or
mov
dec
clc
cmp
xchg
loope
aam
xchg
sub
and
inc
rol
imul
bnd
jl
and
inc
stos
loope
adcl
push
int
sarl
aaa
sahf
in
mov
jnp
lret
jno
popf
mov
add
fs
inc
ret
out
movsb
mov
xor
daa
mov
popf
push
dec
mov
and
or
jne
add
insl
stc
jns
out
or
sub
mov
scas
pushf
adc
xlat
in
shr
pop
inc
fstpt
loop
jp
add
adc
out
push
dec
in
inc
xchg
aad
lock
addr16
and
jp
mov
adc
adc
incl
or
imull
sbb
push
mov
push
xchg
dec
or
mov
loope
cmp
leave
sbb
aas
xchg
stos
jl
mov
ds
cli
inc
imul
ret
loope
sbb
nop
aam
lcall
inc
sbb
enter
repnz
dec
push
test
loopne
fdivl
lock
movsb
pop
dec
push
cmp
stos
pop
add
dec
xor
sbb
adc
inc
and
xchg
lods
enter
cli
cmpsl
adc
das
mov
jecxz
sub
push
sbb
dec
mov
repnz
mov
add
mov
movsl
clc
lds
add
jecxz
xorl
cli
mov
in
outsl
jecxz
rolb
cmp
clc
adc
loop
cmp
in
sub
inc
pop
sub
ja
loop
ficompl
dec
outsb
jnp
scas
loopne
inc
iret
mov
insl
int3
ljmp
sbb
sar
xor
cld
and
icebp
pop
imul
mov
jle
jo
cmp
stos
hlt
mov
addr16
in
in
outsl
fidivrs
scas
mov
iret
repnz
adc
xchg
lods
ret
imul
and
xchg
jecxz
popf
dec
sahf
cmpl
loop
pop
push
mov
pop
and
pop
mov
nop
add
fsubr
data16
push
sbb
add
fs
insl
xchg
ja
push
orb
mov
lods
adc
mov
or
adc
jp
xlat
jae
ret
jnp
add
sub
in
push
or
mov
mov
or
add
jnp
push
dec
data16
inc
aas
and
dec
cmp
cmp
sbb
sti
sbbb
adc
mov
push
lock
out
loopne
insl
ss
movsl
fldenv
mov
sub
notl
and
or
mov
adc
mov
pop
loop
mov
inc
push
sbb
lods
or
int3
adc
push
push
or
pop
imul
insl
mov
or
add
push
jecxz
push
xchg
mov
loope
pop
sbb
arpl
add
mov
inc
ds
js
dec
div
or
lds
rcrb
sub
repnz
lods
pop
jno
dec
pop
mov
rclb
sub
mov
es
cwtl
in
sti
popf
push
nop
push
es
imul
imull
dec
les
inc
xorb
or
mov
sbb
ret
xchg
add
adc
std
or
xchg
add
call
jb
dec
mov
mov
std
dec
fwait
sub
mov
adc
rclb
lods
cmp
lret
fmul
int
cmp
jg
mov
adc
adc
leave
sub
ss
cld
cmpsb
int
cmc
cld
push
mov
fisubs
add
je
ljmp
loop
sub
xor
aad
mov
xchg
adc
rcrb
xchg
out
jae
fs
lret
sub
ljmp
mov
push
fcomip
les
je
xchg
pusha
es
outsb
and
pop
or
std
bound
mov
xor
adc
jecxz
and
xchg
xor
nop
sub
jp
push
inc
ret
jne
jne
lret
or
xchg
fdivrs
movsb
fsubrs
dec
mov
popa
dec
push
push
cmpsb
dec
out
jp
lcall
jecxz
je
inc
out
in
loop
lret
mov
adc
sub
imul
pop
gs
nop
repnz
and
mov
ftst
jo
jns
or
mov
sub
outsb
fisubs
scas
sbb
insb
or
jg
scas
cmp
lret
jp
leave
hlt
and
or
insl
das
mov
jge
add
loope
adc
sbb
pop
movsb
mov
inc
loop
xchg
adc
bnd
ret
vpmullw
adc
mov
cmp
cli
ret
repnz
fstpt
test
sbb
push
adc
test
sub
insl
mov
jns
int3
adc
pop
sub
rorb
inc
xchg
imul
push
movsl
imull
sbb
int
or
adc
sahf
rorb
je
gs
mov
adc
loope
mov
xchg
cmp
mov
jmp
incl
outsb
pop
adc
jnp
mov
add
xchg
pop
mov
push
sub
lcall
add
leave
xchg
inc
adc
xchg
jne
imul
and
push
push
repz
out
loope
jle
imul
popf
and
jge
xor
test
fldcw
arpl
mov
mov
inc
lock
inc
imul
push
push
pop
cmp
adc
fldenv
or
mov
sbb
push
push
scas
lods
loop
push
pop
aam
popf
outsl
aas
rcrb
xchg
xchg
inc
xchg
mov
scas
cmp
in
xchg
push
mov
inc
mov
lea
cmp
or
popa
mov
add
ret
dec
iret
hlt
sahf
jb
testb
jle
adc
jge
stc
cs
push
dec
adc
push
jo
imul
pop
adc
shlb
daa
dec
cmp
cmpsb
std
scas
scas
jg
fs
pop
pop
jne
pushf
rclb
sub
xor
jl
adc
mov
enter
adc
loopne
cmp
mov
sbb
pop
notb
add
in
add
cmp
jbe
xchg
xchg
scas
fdivrs
cwtl
and
outsl
jb
mov
iret
dec
mov
dec
xchg
mov
xor
inc
test
out
inc
xor
hlt
xchg
xor
sub
test
ret
pop
xchg
lret
lds
scas
mov
shrb
xor
pop
out
xor
dec
mov
imul
nop
mov
mov
push
stc
mov
xor
jl
insb
dec
lcall
sbb
imul
pushl
gs
push
and
pushf
dec
xchg
insl
icebp
iret
pop
xor
es
and
sub
ljmp
cmp
into
int3
push
pop
js
mov
jp
sarl
in
add
xchg
loop
pop
inc
nop
imul
hlt
mov
jne
mov
cmp
or
shl
ss
jnp
sub
pop
sbb
jbe
lds
sub
scas
mov
cmp
movsb
xchg
mov
in
daa
test
imul
hlt
xor
dec
fistps
jecxz
fcomi
xor
orl
xor
sub
and
xor
call
and
leave
rcrl
popf
adc
js
es
add
mov
aaa
lcall
test
insl
lcall
aaa
lret
cs
mov
sub
stc
or
mov
lret
xchg
add
cmpl
sub
push
adcl
imul
rcll
cmp
mov
mov
stos
cmp
cmpb
dec
lret
jno
sub
jge
lea
test
out
lret
int
int3
lea
push
ds
xor
fcoml
scas
das
insb
les
adc
sbb
je
stos
pop
mov
popa
aad
aad
mov
or
sar
add
sub
lea
cmp
jmp
vucomiss
mov
cmpsl
aam
js
mov
out
push
and
sbb
loop
fnstenv
stc
shll
cmp
out
jno
fbstp
movsb
and
test
push
clc
add
xchg
hlt
pop
mov
jne
leave
dec
mov
sbb
jl
daa
pop
and
mov
xchg
cmp
mov
inc
mov
adc
in
lret
push
movzwl
popa
insl
push
cmpsl
add
cmc
call
je
iret
pop
mov
sti
mov
iret
fdivl
mov
fwait
mov
xor
push
sbbl
cmpsl
fnstsw
or
sub
jge
fsubrl
fwait
xabort
loopne
popf
inc
xchg
cld
jg
ja
push
or
mov
and
jp
fdivrs
pop
fbld
pop
cwtl
movsb
pop
inc
dec
aaa
lods
pusha
imulb
loope
into
jecxz
jo
mov
xor
lret
andb
pop
inc
gs
movsl
jno
and
and
cli
int
shl
in
sbb
cmp
call
cmpsl
jnp
fidivrl
stc
cwtl
mov
lea
inc
clc
nop
aas
jmp
mov
incl
pop
icebp
and
add
xlat
movsl
mov
push
or
cltd
and
test
push
jbe
lahf
mov
sbb
mov
loope
add
xorb
sub
mov
cwtl
mov
outsb
sahf
movsb
aaa
mov
test
and
jbe
push
adc
sti
shll
sahf
icebp
adc
or
in
jge
lret
cmp
nop
mov
pop
inc
mov
push
push
test
sub
and
jle
jecxz
aas
pop
cmp
mov
jle
cmp
sbb
jb
mov
xor
imul
lcall
push
mov
mov
movsl
es
out
sub
not
inc
stos
inc
dec
jmp
adc
or
imulb
sbb
scas
add
pop
rcrb
mov
sbb
int
aad
jne
stos
das
gs
pop
hlt
inc
xchg
mov
xlat
xor
std
mov
xchg
xchg
aaa
adc
add
divl
sbb
push
inc
movl
push
faddl
mov
test
push
jl
lods
mov
mov
xlat
mov
or
mov
sbb
mov
sbb
test
lahf
or
add
movsb
sbb
push
xor
adc
aaa
or
rol
in
and
fcmovnb
in
mov
sbb
mov
pop
gs
cmp
imul
in
repnz
pop
jo
push
dec
scas
fwait
les
lock
mov
cmp
es
insl
add
stos
push
mov
push
pusha
adc
push
sbb
mov
insb
addr16
loop
mov
mov
dec
mov
movsb
call
fxch
loop
add
insb
sbb
popa
sub
daa
and
lcall
sahf
flds
jnp
xchg
xor
sub
and
xchg
mov
xor
sub
lret
vpcmpgtb
cmp
pop
sbb
mov
adc
or
mov
mov
add
test
icebp
in
dec
jg
mov
rorb
cmp
out
mov
xchg
push
fwait
rcr
push
sahf
rol
dec
dec
imul
stc
stos
sub
cmc
and
jl
pushf
mov
lods
jge
cmp
push
sbb
movsb
scas
cmp
stos
xchg
mov
xchg
jmp
push
popa
inc
sbb
sub
cmp
sub
and
cli
lds
xchg
and
call
sahf
adc
push
repz
out
rorb
out
xlat
jl
sbb
sbb
adc
adc
clc
cmpsl
sub
out
aad
hlt
shrl
xor
and
inc
rcr
cmpsb
pop
mov
lcall
loop
push
hlt
xchg
inc
pop
dec
mov
xor
sub
mov
imul
int3
gs
jmp
lfs
adc
mov
or
pop
lahf
adc
jb
cmp
sub
mov
inc
xor
fisttps
push
jno
mov
call
mov
jp
jae
fbstp
adc
das
jmp
xor
or
ror
ret
outsb
sub
sbb
pop
xor
jae
push
cmp
clc
inc
fdivs
adc
js
stos
aam
sar
scas
mov
inc
jo
outsl
or
mov
dec
frstor
dec
lahf
test
and
sub
and
mov
leave
cltd
pop
movsb
cmp
jg
add
enter
cmp
andl
loopne
cmovle
push
insl
cmpb
clc
iret
dec
lahf
mov
pop
out
fcomip
imul
sbbl
loop
mov
hlt
or
mov
cmp
icebp
xchg
nop
lds
or
adcl
xor
sahf
sbbb
into
mov
iret
outsb
dec
pop
or
ret
jbe
es
xchg
daa
mov
add
pop
divl
scas
fimuls
dec
mov
inc
mov
cmpsb
or
xor
pop
sbb
jnp
sbb
fptan
jae
fcompl
dec
push
mov
lods
aas
je
ret
pop
pop
push
sahf
flds
fmuls
sub
ss
int3
jecxz
loope
popf
mov
xor
adc
insb
pop
std
xor
lret
pusha
or
in
inc
popf
jmp
data16
in
sarb
mov
inc
jno
xor
push
jns
adc
int
fcmove
adc
pop
mov
data16
data16
es
push
inc
add
cmp
xchg
movb
mov
xchg
ja
or
ret
jl
push
mov
mov
sub
aad
push
lods
iret
jae
ret
jbe
xor
mov
cmp
sub
mov
andb
jb
mov
push
rcrb
aas
push
call
rclb
and
pop
lea
in
fwait
std
data16
xor
in
adc
mov
insb
push
loopne
test
push
sub
out
mov
test
jne
scas
jbe
and
mov
add
mov
xor
sbb
add
rclb
mov
push
out
xor
stc
sahf
dec
test
daa
adc
push
xchg
mov
xchg
inc
ljmp
sar
add
inc
and
lretw
or
lret
xchg
push
idivl
jne
push
or
out
xchg
aad
add
push
enter
imul
iret
out
mov
loop
data16
mov
loop
sbb
shrl
cmp
push
cmp
xlat
hlt
cmpsl
pop
lods
test
jbe
repnz
lret
push
out
aas
ja
js
or
cld
mov
filds
mov
mov
xor
lret
sub
ret
das
sub
add
lds
dec
cmpsl
in
ss
adc
pop
cmp
dec
scas
cwtl
add
mov
popa
mov
jno
pop
xor
cmp
dec
xor
sbb
xchg
jns
push
daa
int3
popa
sub
scas
mov
mov
xchg
jle
scas
fildll
mov
lock
fidivrs
addr16
mov
rclb
adc
mov
xor
push
test
jg
test
ficompl
test
repz
sarl
ljmp
jae
out
mov
orb
add
stos
incl
lods
dec
cmp
jns
sub
and
cmp
push
jp
sbb
nop
lea
jns
mov
jmp
es
mov
std
insb
call
movsb
data16
je
or
cmpl
sbb
xlat
push
mov
push
nop
movsl
sub
arpl
xchg
fwait
nop
pushfw
test
cli
popa
sbb
mov
jmp
xlat
orl
in
pop
lcall
lods
movsl
mov
loopne
xchg
jno
orl
mov
mov
rorb
adc
in
lods
xor
test
movsl
mov
mov
jp
repnz
or
pop
and
inc
ds
leave
lret
sbb
rcrl
add
addr16
cmp
push
scas
loop
imul
mov
popf
sarl
mov
jle
xchg
inc
xlat
filds
aad
aad
mov
and
or
sub
stos
nop
and
fimull
cs
xchg
addr16
push
cld
ficoms
shrl
cs
adc
scas
push
xchg
enter
sub
pop
test
movsb
insb
sub
aam
into
dec
mov
push
test
mov
test
push
js
push
mov
cltd
dec
test
lds
mov
pop
orb
jl
ss
push
loop
stc
fwait
sub
in
daa
outsb
cmpsb
in
add
lds
imul
dec
test
xchg
mov
out
xlat
add
or
pop
or
dec
popa
fxch
out
push
push
push
xchg
sahf
jo
cmp
mov
and
jmp
js
add
aas
mov
repz
jnp
push
insl
adc
outsl
jecxz
xor
pop
push
cli
les
enter
frstpm(287
sub
add
pop
rcrl
xchg
or
aam
into
js
hlt
lret
clc
rcrl
mov
sbb
add
jne
adc
dec
in
xchg
and
notb
pop
xchg
sti
lods
inc
inc
mov
out
add
push
mov
mov
push
mov
inc
scas
scas
mov
cli
mov
mov
sub
mov
sbb
mov
mov
popa
gs
in
dec
stos
sbb
or
adc
inc
fmuls
or
jne
loop
dec
mov
prefetchw
or
repnz
adc
and
xchg
test
cmpsl
rcrl
out
push
add
int
hlt
jno
and
mov
cld
sbb
out
loop
mov
xor
stos
enter
mov
mov
and
lods
daa
xor
data16
loop
or
stc
inc
cmp
mov
ljmp
mov
add
xchg
lret
andb
and
jns
pop
pop
in
mov
inc
inc
inc
mov
lcall
inc
imul
addb
cmovne
pop
jno
fisubl
adc
in
and
push
jge
loope
inc
arpl
jecxz
je
mov
push
popf
jmp
iret
lea
cmp
test
sub
stos
pop
rcl
adc
int
inc
mov
xchg
icebp
jl
imul
sub
loope
or
pop
and
and
xchg
cmp
out
sahf
cmp
ja
sarl
push
stos
ds
inc
aaa
xor
xchg
imul
cli
flds
fisubs
or
or
mov
push
pop
or
es
aam
loopne
jecxz
sub
cltd
cmp
loopne
xchg
bound
add
xor
idivl
jmp
ret
stos
sbbb
stos
rcll
jg
adc
mov
inc
push
aad
jmp
test
xchg
data16
pop
dec
xchg
mov
dec
testl
insl
pop
shlb
ficompl
in
xchg
loopne
add
insl
lret
loopne
ficompl
add
sbb
add
arpl
or
sti
mulb
leave
cld
aaa
insb
mov
aas
xchg
repnz
movsl
lds
outsl
ss
adc
movsb
and
out
rolb
fidivrs
lock
adc
and
int
dec
jge
cmp
add
arpl
lret
sbb
pusha
xor
mov
push
inc
or
inc
mov
mov
aad
mov
mov
cmp
sbb
fiaddl
mov
pop
popa
xchg
test
or
out
mov
push
cmpsl
dec
pop
xchg
adc
xchg
and
movsb
shll
sub
cmp
lods
lods
push
scas
cwtl
adc
mov
and
call
sbb
jo
jmp
cld
fsubrs
sbb
andb
insb
xor
fdivl
push
or
pop
ja
loope
sahf
or
xor
out
das
push
dec
pop
pop
into
fbld
cmp
pop
popf
pop
sti
mov
int
jl
sub
inc
mov
dec
jl
adc
dec
jne
fsub
fcomps
lahf
stos
sub
in
or
inc
xchg
ret
dec
sbb
mov
and
or
cli
mov
cs
xor
insb
cwtl
xor
or
or
cmpsl
bound
inc
xchg
ror
jmp
clc
push
sub
add
adc
and
sbb
fistpl
cmp
xchg
dec
add
negb
test
clc
xor
into
pop
pop
stc
mov
arpl
ret
dec
out
cli
roll
adc
push
out
inc
xchg
aad
push
jg
or
enter
or
sub
pop
dec
popf
lcall
lahf
les
bnd
scas
sarl
jle
test
jge
xchg
cmc
xor
jno
jmp
lret
hlt
cmpsl
fs
daa
mov
repnz
or
xor
loopne
cld
enter
pusha
xor
push
push
out
cmovne
sahf
repz
call
xchg
pusha
repz
std
dec
gs
out
mov
lret
cmpsl
and
jle
rorl
loopne
out
inc
mov
mov
sub
adc
xor
mov
xor
mov
cmc
and
lock
mov
daa
pop
mov
sbb
add
loop
xchg
mov
push
enter
add
mov
xchg
loope
jmp
dec
jb
and
sbbl
ret
mov
outsb
daa
arpl
fwait
sub
lods
push
idivl
ret
pop
jb
ffreep
xor
mov
outsl
cmp
jp
push
es
std
dec
sbb
mov
mov
jnp
and
mov
dec
inc
jl
pop
pop
shll
rcll
or
das
sti
xlat
pop
add
pop
imul
xchg
addb
cli
mov
call
jo
ret
insl
inc
mov
std
call
shl
jno
push
addl
jmp
lcall
sub
dec
cltd
jnp
imul
pop
mov
stos
cld
pop
pop
sub
popf
add
push
shrb
test
sub
fists
xor
push
aad
aaa
je
jnp
cmp
push
dec
sub
imul
testl
sub
loopne
hlt
xchg
insl
stc
pop
xchg
pop
in
jecxz
mov
lret
inc
mov
jns
fsubrp
subb
cmpsw
les
inc
dec
rclb
hlt
mov
int
divb
add
add
int
addl
fwait
mov
dec
dec
shl
adc
addr16
push
ss
add
sub
jnp
iret
mov
inc
xchg
clc
setns
cmpsb
pop
mov
pop
adc
insb
sbb
inc
sahf
outsb
lret
jl
stos
mov
xchg
jns
pushf
insb
sub
add
mov
call
sbb
pop
cmp
gs
sar
xor
loopne
aam
imul
and
pusha
push
movsb
aaa
xchg
push
stos
mov
inc
flds
mov
adc
out
sbb
pusha
lret
out
adc
movsl
testl
ror
sbb
das
pop
jo
fstpl
xor
xchg
imul
adc
sub
mov
mov
lahf
inc
pop
inc
stc
mov
gs
ret
out
mov
inc
dec
cmp
fsubrl
mov
ret
loopne
scas
pop
lahf
xlat
in
lods
loopne
int3
cld
test
push
dec
movsl
add
mov
jp
adc
je
adc
out
lret
push
add
sahf
mov
rorl
xchg
sub
sbbl
addr16
scas
int
xchg
loop
pop
gs
jg
dec
xchg
pop
push
mov
ds
repz
cli
rorl
pop
dec
fxch
iret
loope
xchg
rcl
int3
scas
xchg
repz
fisubrs
ror
jno
xor
lret
ficoms
sbb
cmp
arpl
add
xchg
dec
cld
pop
push
jecxz
mov
jp
bound
ljmp
into
adc
xchg
mov
or
adc
insb
sahf
sbb
call
test
ljmpw
iret
popl
fucom
fs
inc
jle
jmp
xchg
mov
movl
mov
fsubr
jns
pop
das
pusha
test
xchg
popf
xlat
sub
cs
loop
inc
sub
aaa
insl
mov
dec
pop
dec
xchg
xor
xchg
jne
add
testb
mov
pop
in
inc
into
int
repz
sub
push
int3
rorl
push
sbb
popa
jl
xor
mov
pop
adc
sbb
ja
lds
and
int
insb
imul
adc
rcll
cwtl
cli
andl
and
roll
movsb
inc
sarb
ds
movsb
xchg
mov
sub
add
jae
mov
lods
xor
in
out
add
jecxz
ret
xchg
sub
in
clc
jns
add
or
inc
mov
insb
rol
ss
inc
in
push
or
nop
inc
cmp
scas
xchg
in
sbb
mov
mov
dec
and
lds
cmp
cmp
fmul
xor
push
idivb
out
adc
stc
cltd
out
jnp
das
sbb
pushl
lret
xor
jmp
adc
add
lds
das
icebp
mov
inc
jmp
outsb
mov
dec
cli
pop
mov
inc
test
lods
into
and
inc
xlat
inc
push
sahf
inc
lods
inc
cli
enter
lock
flds
pop
imul
add
xor
inc
or
loopne
adc
pop
jmp
xchg
jo
xor
movsb
fs
or
stc
stos
mov
sub
lock
mov
in
addr16
pop
sub
pusha
stos
and
push
add
mov
adc
loope
pop
add
mulb
loope
push
cwtl
ret
in
xchg
xchg
in
push
adc
push
cld
inc
lock
jb
pop
sub
cmp
cmp
cmp
ret
ret
vcmppd
jnp
and
lcall
jne
xchg
adc
pushl
nop
outsb
and
xor
mov
mov
fstps
or
iret
and
shlb
xchg
or
or
mov
push
add
aaa
add
stos
dec
mov
nop
and
cld
arpl
orb
loope,pn
or
aad
test
or
fiaddl
arpl
add
sub
movswl
pop
out
mov
and
addr16
filds
stos
dec
cmp
jbe
outsb
jl
adcl
pop
sbbl
andb
mov
adc
jg
js
mov
mov
imul
roll
mov
add
js
pop
sbb
or
inc
test
popl
pop
adc
mov
stos
ret
aas
dec
into
fcoms
aad
icebp
ret
add
hlt
sub
push
xor
out
shlb
add
fs
iret
mov
sub
loope
mov
adc
cmc
sarl
or
outsl
and
in
add
ss
test
sub
test
les
sahf
sbb
inc
inc
pop
in
int
or
add
dec
cmp
loopne
mov
push
mov
xchg
dec
dec
arpl
arpl
cltd
jns
xchg
loope
aad
ds
inc
scas
enter
xchg
and
mov
xchg
pop
and
pop
mov
pop
mov
stc
mov
ss
mov
test
mov
imul
daa
xor
lea
push
inc
xor
shrl
and
ficoml
psrlw
push
mov
xchg
lret
push
cld
and
vmread
pextrw
out
sahf
shlb
in
pusha
outsl
sub
repnz
imul
fcmovne
pop
cmp
outsl
xor
sbb
repz
inc
ja
sbb
jmp
bound
stos
addl
repz
push
lret
mov
js
clc
xor
outsb
out
in
scas
stc
jp
mov
sbb
dec
or
push
inc
sub
mov
mov
mov
cltd
pop
jne
scas
jne
mov
int3
adc
mov
push
fistl
popa
cltd
repz
xor
inc
lret
ljmp
push
aam
repnz
pusha
push
fstl
fwait
jnp
shl
js
into
and
cwtl
cmp
xchg
inc
pop
dec
adc
lock
fdivrs
int
rorb
icebp
js
push
dec
mov
xchg
addb
sti
cmp
mov
call
mov
xchg
mov
and
fsqrt
insl
pop
dec
aam
jne
sub
dec
lods
sbb
push
inc
xchg
fwait
arpl
ja
jno
test
je
in
into
mov
inc
fidivrs
cltd
add
jle
inc
incl
jp
ret
xor
clc
inc
hlt
aas
jno
mov
sbb
sub
push
cmc
shrb
nop
dec
pushf
ds
pop
cld
imul
mov
inc
sub
add
std
pop
mov
sbb
jns
jb
repz
lret
sub
sbb
js
mov
in
mov
les
pop
pop
dec
stos
movsl
dec
jg
push
push
jbe
mov
inc
push
lea
std
outsl
adc
push
sbb
add
aad
sbb
jno
mov
popf
or
or
scas
jmp
cmpsb
and
jg
jge
loop
xor
cs
es
add
or
jmp
sbb
adc
daa
cmpsb
in
fbld
fsubs
push
adc
mov
push
mov
mov
xor
and
mov
push
jne
jnp
ds
shll
xchg
fs
mov
mov
xchg
jno
pop
lds
xchg
repnz
adc
fmul
xor
xor
icebp
aas
mov
push
pop
inc
popa
sbb
jge
adc
cmpsb
sahf
mov
or
enter
mov
addl
ret
repz
lret
inc
jecxz
xchg
mov
lahf
out
or
sub
cmpsl
mov
out
cmpsb
jl
cmpsl
add
dec
xor
popf
mov
mov
lods
lret
inc
or
jo
push
loop
pop
inc
mov
jl
scas
jecxz
cwtl
frstor
inc
mov
cmpl
jp
jno
out
jp
shrl
mov
inc
mov
push
aam
je
jecxz
push
xor
cli
aad
sbb
clc
iret
jmp
lret
popa
xchg
lret
cmpsl
mov
xchg
cmp
fsts
sub
addl
test
ja
cmp
cmp
icebp
pusha
repz
mov
or
stc
sub
mov
je
cmp
mov
and
dec
cmc
mov
scas
ja
jns
xchg
pop
and
sub
jnp
cmp
repnz
stos
imul
push
in
xchg
testl
push
dec
or
mov
mov
jecxz
adc
aas
ss
int
sbb
shlb
sbb
mov
jl
jmp
stos
bound
mov
add
mov
mov
sub
ret
add
lahf
sbb
test
adc
stos
imul
xor
es
loope
inc
test
mov
repnz
or
xchg
jmp
lods
rorl
sbbl
push
mov
pop
pop
sub
inc
ds
push
fsubrl
insb
sbbl
rcr
into
addr16
ja
outsl
mov
ret
inc
or
fcmovnu
stos
adc
adc
xchg
and
fstps
jge
jns
jne
mov
aaa
loopne,pt
adc
daa
icebp
jmp
mov
mov
mov
add
ljmp
jnp
fmul
and
lock
movsb
in
push
adcl
push
test
sub
sub
jp
das
jns
clc
in
sbb
fucomip
sbb
push
lods
sbb
dec
or
mov
jno
rolb
mov
sub
mov
dec
mov
mov
cmc
mov
xor
mov
shl
cmpsb
aad
push
adcb
push
loop
pop
int
incl
iret
push
sbb
gs
xor
and
das
out
test
sub
cmp
jl
sbb
mov
gs
fidivrs
dec
mov
fincstp
scas
mov
popf
cld
jo
movl
loope
fwait
mov
inc
jne
sahf
fcmovu
scas
idivl
outsl
push
ja
cmp
das
icebp
jg
adc
dec
ds
outsb
scas
jl
inc
jns
jae
std
mov
loopne
sbb
sti
sub
das
jbe
orb
loope
in
add
cmp
adcb
pop
adc
add
ljmp
push
push
outsl
les
test
add
pop
jp
xchg
scas
add
and
sub
sub
addl
mov
cs
push
call
dec
int3
lds
jnp
dec
lods
out
sahf
inc
idivl
mov
rcll
pusha
cld
push
or
and
mov
loopne
pop
sti
and
es
pop
mov
shlb
ss
pop
mov
mov
pop
cmp
xchg
cltd
or
add
xchg
sbb
push
insl
repz
fnstenv
sub
mov
or
test
cmp
mov
out
push
clc
sub
sti
loop
jno
xchg
pusha
test
insb
xchg
mov
push
jne
inc
stc
dec
out
inc
sti
sub
bswap
in
mov
inc
xchg
jo
pop
aaa
add
cmp
nop
xchg
push
in
mov
jbe
or
xchg
jo
inc
stc
lret
sub
or
idiv
xchg
adc
sub
xchg
imul
xchg
mov
cmp
or
xlat
stc
jae
xchg
xchg
push
stos
ds
loopne
jb
sbb
or
xor
mov
shrb
inc
dec
xchg
cs
bound
pop
sbb
int3
jb
mov
in
mov
in
imul
sahf
pop
pop
popf
repz
xchg
mov
test
subl
enter
pop
jne
cmp
imul
xchg
dec
add
ljmp
fisubl
lods
mov
push
fwait
dec
out
aaa
je
popa
fnsave
cmpsb
xchg
hlt
xchg
push
arpl
js
lods
fdivs
mov
ljmp
xchg
aad
mov
cmp
daa
loop
mov
pop
and
inc
movsl
push
xor
imul
movsl
call
mull
push
mov
or
or
mov
pop
arpl
andl
inc
adc
adc
jmp
outsb
pusha
cli
enter
cmp
adc
pop
inc
cld
outsl
xchg
mov
lods
testl
into
out
cli
dec
mov
push
cmc
xor
lret
pop
fsts
mov
mov
in
aas
push
test
sub
push
out
xchg
sbb
or
cli
aam
mov
cmpsl
cmp
lret
push
push
sbb
leave
mov
jb
ja
and
and
lods
or
cwtl
push
ret
lock
adc
lods
inc
and
xchg
mov
mov
mov
lret
ss
and
push
imul
mov
cld
iret
out
movsl
stos
mov
push
mov
hlt
test
cwtl
outsl
fincstp
push
es
xor
fcomps
sub
notl
fcmovne
dec
jb
clc
push
add
test
mov
push
test
bound
js
nop
push
or
mov
sahf
push
mov
js
pop
stc
fstpt
push
out
mov
lret
xchg
ret
js
xchg
data16
sub
aas
mov
sahf
sub
adc
add
dec
addr16
repz
cmp
xchg
fs
pop
add
repz
xchg
mov
inc
test
mov
lcall
fmul
pop
push
add
shlb
shll
mov
rcrb
mov
ret
jge
add
test
movsl
and
fistpl
add
popa
adc
ret
pop
cltd
pop
je
notb
mov
adc
andb
inc
sbb
into
jb
or
inc
pop
repnz
mov
fdivrl
xchg
lret
aas
jo
mov
aaa
imul
ja
jle
shrb
test
lret
xchg
sbbb
xchg
scas
adc
inc
roll
cmc
jb
dec
sub
loop
test
push
and
fistl
xchg
pop
xchg
or
loopne
test
xchg
inc
in
lret
push
or
pop
sub
sarb
cli
pop
fisubrl
lahf
andb
insl
mull
loope
cld
adc
mov
sub
test
stc
pop
jbe
aaa
in
xchg
add
mov
outsl
push
daa
sarb
sub
push
jl
std
fidivrl
aad
dec
aam
frstpm(287
stc
sti
inc
xchg
call
sti
or
cmp
nop
push
push
ret
clc
pop
popf
pop
cmpsl
cld
repz
and
jbe
mov
shll
fwait
cli
xchg
dec
iretw
jns
mov
pop
test
mov
cltd
fsubrs
cmp
jno
push
sbb
xor
sbb
cmp
mov
nop
add
scas
push
jle
xchg
sti
inc
das
xlat
xor
cmp
ss
hlt
dec
cmp
xor
lahf
sti
mov
lock
inc
in
or
push
and
cli
pusha
cltd
fnstsw
add
or
pushf
mov
mov
lds
pushf
bound
dec
pop
clc
adc
and
and
ret
scas
mov
xchg
cwtl
leave
lds
pushl
jle
xchg
mov
outsl
vmread
nop
push
bound
aaa
push
ret
aas
mov
icebp
push
xchg
or
lahf
add
stc
mov
insl
add
xchg
add
adc
or
sahf
call
nop
sub
popa
pop
sahf
xor
xor
mov
les
jge
sbb
mov
stc
sub
aaa
mov
xchg
xchg
cmp
dec
fwait
mov
loope
or
fwait
xchg
out
mov
loope
stos
add
xchg
mov
lahf
test
mov
lret
shll
movsb
into
or
sarb
mov
adc
push
xchg
pop
push
ss
outsb
and
xchg
pop
xchg
xor
xchg
sub
fstps
pushl
neg
pop
lcall
call
out
pop
or
fcoml
xor
sbb
lcall
mov
cmp
sbb
xor
and
or
push
lock
ljmp
das
sub
imul
push
push
aas
add
cmpsl
sbb
cltd
rcrl
scas
popf
lods
imul
stc
and
push
ljmp
ror
ss
add
pop
push
cmp
sbb
dec
dec
lcall
push
or
or
pop
add
orps
out
sub
mov
push
loope
cli
mov
dec
insb
cmc
pushf
outsl
dec
fstps
out
cmp
adc
add
fdivp
icebp
fnsave
outsl
add
and
pop
dec
jmp
mov
loopne
adc
push
dec
push
outsb
mov
lret
pop
mov
fcmovu
xor
adc
call
jp
into
in
mov
xchg
aas
jg
xchg
call
adc
loope
dec
outsb
inc
cs
mov
jo
push
sbb
into
rolb
out
imul
adc
xor
cmp
popl
push
cld
jl
jl
or
cld
sub
jl
movsl
int
dec
and
inc
pop
daa
cld
xchg
repz
sbb
cltd
jo
dec
pop
filds
push
push
cmpsl
mov
push
xor
or
cmpl
push
xor
sbb
and
into
jmp
divl
or
mov
lcall
cmp
clc
mov
push
icebp
sbb
loopne
or
jbe
sarl
sbb
jge
dec
sbb
pop
mov
pop
leave
inc
aad
lcall
mov
fcomip
imul
nop
dec
test
xchg
stc
and
data16
subl
jmp
pop
push
push
fidivrs
xchg
movsl
lods
pop
and
int3
jp
mov
imul
sti
dec
fs
mov
pop
xor
mov
xchg
movsl
mov
inc
shld
lds
sbb
ret
and
xor
nop
sarl
shrl
stc
mov
xchg
ss
sub
leave
or
lcall
test
sub
repz
and
pusha
testl
pop
icebp
push
inc
aas
pop
jns
aaa
mov
xchg
xchg
mov
outsb
fsubrs
and
add
inc
mov
stc
call
sbb
cltd
cmpsl
sub
stos
jmp
imul
stos
test
cmc
scas
mov
jmp
test
movb
pop
mov
dec
ja
loopne
mov
mov
xchg
cmpsb
fists
jb
pop
into
sub
lea
pop
push
andl
push
mov
and
js
cpuid
scas
cmc
pop
xchg
lods
subb
xor
outsb
push
test
xor
mov
and
clc
hlt
icebp
xchg
fldt
lret
leave
mov
adc
add
orb
push
ret
movsl
jp
mov
popf
sub
lahf
ret
cmpsb
sbb
dec
xor
pop
dec
sbb
scas
dec
and
int3
add
jnp
enter
pop
out
xor
inc
mov
inc
sub
lret
mov
mov
cmp
out
add
fmul
mov
mov
popa
imul
fbld
ljmp
mov
and
jb
cmp
jns
xchg
jp
mov
mov
cwtl
ss
notb
pop
mov
or
jae
adc
cs
inc
mov
pop
data16
dec
and
sbb
ret
pushw
adc
orb
xchg
cmp
or
and
insl
pop
pop
fiadds
mov
or
insl
xchg
cmc
mov
enter
sbb
or
call
xor
xchg
movsb
es
addr16
je
or
mov
shlb
xor
add
jge
xchg
push
insl
leave
jb
movsl
shr
inc
imul
xor
cli
sbb
push
test
inc
jge
jge
dec
fldcw
mov
mov
mov
sub
adc
pop
dec
xor
push
sbb
inc
push
sub
fsubrl
inc
mov
divl
dec
fcomi
ljmp
cmp
or
aaa
sar
das
mov
call
sti
das
scas
sahf
into
outsl
xchg
or
ja
shrb
cld
into
mov
loopne,pt
sbb
sbb
jge
xor
pop
pop
push
das
lahf
sub
imul
and
dec
shlb
and
js
inc
mov
mov
sub
lock
dec
xor
fcoml
mov
push
dec
xchg
add
in
in
movsl
test
jae
fists
push
stos
jle
inc
inc
rorb
xor
cwtl
stos
neg
dec
xor
add
and
out
pop
sbb
aas
mov
dec
in
pusha
mov
aaa
pop
imul
mov
dec
adc
cwtl
fisttpl
stos
dec
xchg
dec
stc
push
inc
cmpsb
or
pusha
enter
xlat
test
ret
jne
pop
addr16
jo
js
out
out
les
popa
inc
inc
mov
std
push
test
in
test
adc
mov
sbb
insl
ljmp
das
mov
ss
popa
daa
jmp
mov
stos
cli
jnp
add
mov
imul
movsl
xchg
js
inc
add
dec
inc
pop
shll
jns
leave
or
inc
mov
mov
dec
push
in
pop
data16
pop
faddl
jnp
out
out
or
pop
jle
test
lcall
xchg
jg
cld
inc
mov
std
mov
push
pop
sbb
push
adc
mov
pop
or
and
scas
lock
into
scas
adc
bound
ljmp
or
jmp
mov
outsb
sbb
jmp
and
sahf
jo
and
xor
or
mov
add
inc
push
aas
push
push
adcl
cmpsb
mov
inc
inc
and
xchg
cltd
pop
inc
scas
dec
pop
push
pop
xor
add
je
inc
mov
jg
mov
xchg
stos
cmpsb
pop
test
push
mov
xchg
jmp
shrb
imul
pop
mov
jb
mov
lods
sub
sbb
imul
mov
jae
adc
shlb
cmp
jo
imul
xor
and
pop
iret
cltd
shll
cmp
gs
mov
or
loop
add
pop
stos
fwait
mov
sub
iret
mov
lea
jmp
jnp
pop
movsl
mov
xchg
fsubrl
sub
in
dec
test
fimull
sti
add
inc
cltd
aas
insb
push
arpl
push
cmpsb
fnsave
les
shl
cmp
scas
jp
pop
testl
loop
xor
mov
dec
push
xchg
in
xchg
iret
adc
imul
mov
xchg
push
jns
dec
xchg
stos
fldl
mov
rcrl
sub
and
pop
hlt
add
pop
fstps
add
ret
lds
sbbb
mov
cmpsl
xor
sub
xlat
or
or
lock
movsl
add
dec
sub
lods
mov
xlat
mov
clc
cmp
clc
cmp
popf
cmp
pop
jmp
outsl
xchg
xchg
aad
pusha
mov
dec
scas
outsl
mov
xchg
push
cmp
lret
ljmp
icebp
inc
jnp
sahf
jecxz
mov
pop
add
pusha
sahf
pop
sub
or
stc
push
sti
sub
test
lds
out
popf
out
push
xor
insl
xor
mov
inc
xor
dec
fsubrs
repz
enter
mov
sarl
jnp
sahf
push
jmp
xor
pop
or
insl
insb
mov
xchg
std
pushf
add
icebp
gs
or
adc
or
mov
ret
int
push
cmpsl
popf
push
insb
cmp
inc
rcrb
and
mov
hlt
icebp
adc
sbb
pusha
push
cmp
andb
lcall
loop
orl
popa
or
test
cmc
data16
push
into
pop
roll
jmp
loope
inc
clc
aad
sub
test
pop
mov
jb
scas
test
pushf
push
xor
fwait
shll
hlt
neg
shll
stos
sub
dec
mov
pop
xorb
aad
andl
sbb
adc
adc
data16
jp
cmp
jnp
movsl
push
and
addr16
into
nop
inc
sbbb
push
mov
jge
out
and
arpl
and
xchg
enter
xchg
icebp
in
fists
fyl2x
or
stos
mov
sbbl
dec
pushf
inc
sarl
imul
push
mov
mov
leave
mov
sbb
pop
cmc
js
es
and
inc
dec
stc
je
jbe
int3
dec
lods
cmpsb
ficoms
and
stos
mov
ljmp
dec
jmp
jecxz
adc
mov
inc
adc
aaa
outsb
xor
repnz
adcb
fcompl
pop
cmp
adc
imul
test
repnz
mov
ret
jne
cld
mov
hlt
pop
xchg
sarl
push
sbb
inc
hlt
jle
jb
mov
lret
scas
adc
out
or
imul
mov
int
bound
fnsave
xchg
jp
jnp
enter
mov
cmp
jl
cmp
push
imul
xor
sbb
repz
fwait
mov
test
pop
push
js
mov
jb
outsb
cmp
idivb
leave
cmp
pop
xchg
push
mov
adc
and
ficompl
or
mov
add
push
loopne
jne
cli
rcrb
push
cmp
stc
dec
leave
xor
negb
ss
roll
mov
fdivr
or
mov
xor
inc
cmpsb
mov
jmp
push
js
or
push
imul
outsl
xchg
mov
mov
xchg
mov
repz
sarb
sub
xchg
dec
ljmp
push
clc
pop
jl
test
lcall
cwtl
jnp
adc
fistpl
pushf
cs
in
dec
aas
outsb
or
pop
dec
or
mov
adc
cmpsl
or
push
dec
outsl
push
mov
adc
cmc
inc
jne
popf
xor
cmpsl
ret
aad
sub
mov
pushf
mov
jne
jno
push
mov
push
inc
movsl
dec
dec
add
subl
jo
int3
mov
enter
dec
pop
mov
inc
popf
push
dec
sub
pop
aam
imul
shlb
jnp
out
or
cmp
jmp
jp
sub
ss
cmpsb
cmp
cmp
ljmp
mov
mov
jb
mov
inc
or
push
insb
fdivrp
ret
sub
daa
pop
dec
sub
ret
ss
sub
mov
xor
mov
mov
push
pushf
js
fdivrp
test
dec
pop
inc
dec
test
push
jp
mov
aam
xor
mov
sbb
jl
shrb
mov
mov
jp
cmpb
repz
fistpll
push
bound
push
data16
cltd
ds
jbe
pop
lds
add
mov
jge
scas
push
lods
aam
lcall
xlat
les
lods
and
inc
xor
or
add
mov
and
lcall
xchg
push
repnz
mov
push
lock
push
jb
mov
xor
hlt
inc
ret
lret
cltd
xchg
lds
sbb
je
lods
neg
xchg
push
ret
add
jns
stc
push
call
pop
incb
xor
adc
pop
popa
test
test
shrb
xchg
hlt
fisubs
xor
mov
out
cltd
jno
xchg
test
or
inc
je
pusha
pop
add
popf
xor
ret
xchg
pop
clc
and
push
jbe
adc
repnz
ds
std
xchg
stos
int
mov
popa
enter
xor
adc
mov
iret
vpaddusw
jle
xrelease
andb
pop
cltd
ja
stos
sahf
aam
sub
jl
cmp
out
mov
push
aad
or
shll
fwait
sbb
inc
mov
pop
daa
cltd
lea
pop
sarl
jp
xchg
xor
push
insb
stc
sahf
sub
mov
cmp
push
repnz
xor
shlb
outsl
hlt
lahf
push
mov
mov
mov
ja
stos
test
cmp
fwait
xchg
jbe
dec
das
pop
or
inc
jge
sbbb
clc
dec
out
jns
hlt
cli
cwtl
fidivl
pusha
mov
aam
rolb
adc
sahf
mov
mov
cmp
loope
lcall
pop
push
out
jbe
xor
mov
push
sub
fs
enter
bound
pop
or
mov
sbb
repz
in
pop
fiadds
adc
adc
jnp
and
add
inc
push
movsb
test
fs
in
testb
lds
and
pop
inc
xchg
xchg
and
hlt
xchg
fimull
jecxz
push
pop
aaa
imul
lods
leave
cmpsb
sub
out
popf
push
pop
fdivrl
dec
mov
jmp
cli
in
rclb
mov
inc
jo
sbb
or
out
pushf
xchg
push
mov
ja
mov
int
shll
out
std
jns
in
mov
pop
and
scas
add
jecxz
push
add
mov
cmp
ljmp
test
mov
cmp
pusha
xorl
pop
arpl
push
nop
addb
mov
cwtl
ret
pop
ds
jne
cmpsb
negb
mov
call
jl
pop
mov
cmp
cmpsb
movsb
filds
xchg
pop
inc
int
adc
mov
sahf
int3
or
and
sbb
inc
lret
jbe
mov
sbb
in
sbb
inc
negl
out
imul
xor
jbe
add
xor
mov
mov
sbb
and
fidivrs
ss
or
mov
ja
lea
test
pop
cmp
stos
ds
call
std
dec
inc
lahf
sub
push
push
sub
scas
push
pop
lods
dec
dec
orb
ret
icebp
insl
xor
rorl
inc
pop
cltd
inc
xor
faddl
pop
sbb
repnz
or
inc
mov
ret
stos
lds
pop
mov
inc
mov
ja
sub
sbb
movsl
lods
call
dec
out
xchg
loop
xchg
insl
sbb
jnp
stos
out
ja
das
jl
inc
jbe
xchg
sub
jge
dec
dec
cmpsb
mov
negb
fadds
push
adc
dec
cmp
sub
pushf
ds
nop
stos
aad
cmpsb
data16
scas
rolb
pop
xchg
movsb
fstps
cmp
adc
pop
subl
lods
pop
mov
scas
push
cmp
xor
testb
shrl
jg
scas
lret
notb
gs
std
stos
add
sahf
push
dec
xor
inc
aam
cli
mov
orb
and
adc
outsl
int3
add
andl
cmp
pushf
ja
pop
hlt
lret
das
outsb
adc
pop
mov
iret
sarb
shlb
adc
pop
cld
int
ja
mov
flds
pop
das
mov
push
incb
negb
loope
mov
sbb
jle
outsb
and
pop
jnp
iret
leave
aam
lea
sbb
test
popf
mov
push
sub
xor
dec
addr16
test
iret
repnz
push
unpcklps
outsb
pop
and
xor
add
cltd
sbb
sub
xchg
leave
decl
xchg
icebp
mov
movsl
outsl
adc
insb
or
xchg
mov
cmc
dec
mov
outsl
arpl
sbb
test
clc
stc
js
pushf
lods
movsb
add
ja
or
insl
cmp
adc
mov
inc
sub
pop
das
call
das
xor
mov
xor
push
xchg
push
dec
pop
dec
sti
js
or
mov
roll
repnz
jl
out
dec
push
nop
stc
out
into
pop
cld
sbb
jp
test
dec
jecxz
pop
hlt
ss
loopne
adc
xor
add
andb
cwtl
or
jbe
dec
push
xor
jge
shrl
add
push
mov
jmp
out
out
mov
mov
fwait
out
add
push
xchg
jnp
mov
out
pop
imul
adcb
test
dec
data16
pop
in
push
js
xchg
mov
dec
movsl
stc
imul
cltd
outsl
jo
jo
imulb
cmp
inc
pop
dec
leave
repnz
out
xor
lahf
adcl
add
mov
loop
rclb
sub
jo
inc
push
mov
xchg
iret
xchg
push
lcall
pop
repnz
call
jb
inc
sbb
sbb
and
add
ljmp
dec
lret
push
dec
sti
inc
push
fidivl
dec
sbb
and
cmp
fmul
dec
inc
hlt
outsb
scas
mov
adc
add
leave
push
jle
clc
jmp
or
aad
scas
mov
lret
movsl
push
sbb
out
leave
aam
in
jb
xchg
jge
push
pop
leave
or
pushl
push
pusha
roll
dec
leave
xchg
sahf
and
push
xchg
lds
mov
ret
xor
xor
pop
in
imul
sub
imul
sub
sbb
iret
rorb
cltd
pop
xchg
sbb
aaa
pop
enter
add
adc
push
cli
add
jle
into
outsl
sbb
enter
xchg
outsb
jle
or
push
cmp
jmp
adc
jns,pn
or
es
cmp
mov
mov
lea
jne
cmpsl
adc
ficoml
pop
loop
popa
scas
add
test
cld
mov
xchg
cltd
or
lcall
xor
sbb
jne
loopne
nop
jmp
xchg
pop
add
xchg
mov
xchg
sub
pop
aas
and
inc
fwait
in
push
mov
mov
cmp
xlat
ds
cmpsb
and
or
aad
cld
jmp
push
lods
xchg
mov
mov
pop
in
dec
cld
std
add
sub
mov
mov
xor
shr
test
inc
xor
xor
das
mov
cmp
test
xor
inc
and
je
adc
inc
pop
mov
push
leave
iret
mov
data16
or
mov
test
push
subl
adc
popaw
ja
jmp
mov
cld
push
and
je
repnz
inc
push
push
mov
stos
nop
popf
push
stos
das
inc
jbe
jge
daa
mov
mov
and
nop
xchg
mov
test
xchg
adc
jnp
jbe
inc
or
fwait
adc
test
jns
sbb
in
inc
mov
es
test
dec
pushf
mov
hlt
xor
shrb
incb
pusha
rolb
andb
xchg
into
cmp
or
sti
leave
cmpsb
mov
rorl
fdivrl
mov
pop
jo
repnz
inc
jge
shl
jp
mov
push
dec
mov
stos
add
outsl
fidivrl
inc
cmpsl
test
and
cmpsb
xchg
push
cwtl
sbb
iret
push
lods
mov
xchg
ret
xorb
out
daa
cltd
scas
pop
stc
cmp
mov
add
dec
add
outsl
ds
ja
aaa
cmp
out
adc
mov
andl
and
popa
mov
imul
lret
scas
push
jne
roll
cmp
repz
add
xor
sbb
hlt
aaa
xor
pop
push
call
scas
inc
cmpsl
pop
divl
push
iret
movsb
jno
repnz
jb
icebp
aam
test
or
out
add
dec
dec
sbb
neg
ljmp
pop
aas
pusha
movsl
mov
inc
cmp
and
xchg
test
inc
es
adc
mov
adc
pop
ljmp
in
xchg
and
dec
add
stos
mov
or
pop
and
mov
testb
mov
mov
pop
push
mov
cmpsl
loopne
and
and
in
and
sbb
dec
jge
adc
push
lcall
sub
push
or
in
outsb
sub
add
mov
jbe
inc
adc
sti
inc
iret
sbb
out
sbb
pop
es
adc
add
push
push
and
push
pushf
ja
pop
ja
orb
ss
sub
xor
fimuls
xor
push
push
xchg
mov
mov
lahf
cld
jno
clc
lcall
push
push
nop
dec
adc
cmp
mov
or
aas
shrb
repz
sub
mov
jno
jle
inc
xchg
in
dec
push
inc
mov
cmp
insb
sahf
push
clc
cmpsl
cmc
cmp
jl
xor
lods
sub
add
mov
dec
mov
ljmp
push
sbb
loopne
sbb
push
test
enter
iret
mull
xchg
fwait
push
cmp
mov
pop
addr16
aam
test
dec
in
gs
fsubl
fistl
adc
call
hlt
test
decb
insb
js
sbb
pop
iret
pop
movsb
xchg
nop
adc
and
and
xchg
and
or
mov
dec
add
outsl
ret
shll
scas
enter
inc
mov
std
cmp
mov
jo
call
rorl
dec
mov
mov
mov
jmp
mov
adc
rcrb
adc
mov
and
inc
iret
jae
shr
xchg
dec
pop
or
test
jmp
gs
pop
dec
cld
xchg
lret
movsl
pop
inc
out
lods
aas
insl
xlat
in
mov
jbe
aaa
gs
fbld
test
outsb
ror
jae
push
mov
jl
subb
push
adc
out
out
push
xlat
mov
dec
ljmp
rcl
pop
fidivrs
cmpsb
imul
adc
add
mov
icebp
sbb
xchg
int3
mov
sbb
inc
sbb
push
mov
sub
dec
pushf
cli
mov
mov
xor
add
movnti
sbb
dec
lahf
das
inc
cmp
nop
cmp
sbb
shlb
sub
jbe
mov
bswap
push
adc
imul
imul
loope
jmp
dec
pop
sbb
ljmp
in
mov
sahf
mov
rol
in
sub
mov
inc
test
sahf
jbe
lret
daa
mov
push
loope
mov
sub
ret
add
ret
xor
xchg
mov
fcmovu
mov
jle
shlb
mov
sbb
call
inc
mov
or
decl
mov
das
mov
mov
les
pop
fisubl
mov
popf
dec
jle
ss
xor
lods
mulb
sub
and
fidivl
pop
in
xchg
sarl
adc
popa
xchg
mov
push
imul
jge
dec
in
in
negb
xchg
in
test
xchg
mov
lods
lret
decl
rcr
movsl
ljmp
jns
clc
fnstenv
mov
push
mov
pusha
cltd
jp
gs
sbb
mov
inc
cld
jge
xlat
ret
mov
mov
bound
int3
adc
mov
cltd
lret
js
cmp
dec
pop
movsl
xor
leave
dec
repnz
pop
mov
lds
fisttps
dec
ljmp
sub
jnp
jns
lds
and
ds
stos
push
sarl
jecxz
fnstsw
adc
test
inc
and
popa
ret
push
bound
push
icebp
add
addr16
jo
jae
push
mov
hlt
dec
push
push
sub
add
or
mov
push
pop
ljmp
mov
mov
bound
push
mov
jp
xchg
and
or
add
repz
sar
sbb
pop
ret
cmp
fwait
repnz
cmp
mov
mov
leave
push
pop
sub
sub
cmpsl
mov
aas
mov
out
insb
dec
in
add
cmp
cli
fidivrl
sub
fmuls
and
faddl
jl
push
push
xor
or
push
mov
jle
in
fcoml
inc
jg
mov
loop
out
lods
mov
fcomp
push
add
xor
push
jbe
test
sub
pop
mov
mov
adc
out
mov
sub
arpl
icebp
fbld
cmpsb
lret
call
fcmovnbe
lds
xor
or
out
jl
mov
dec
dec
enter
dec
or
pop
scas
out
lods
shl
cs
stc
cmc
add
adc
and
cmp
es
stos
jns
adc
repz
scas
jne
aad
imul
aad
pop
and
popf
mov
and
lea
xorb
or
movsl
call
jnp
push
pop
xor
shlb
inc
xor
cmp
in
mov
jae
sub
add
mov
aam
cmp
push
sub
mov
inc
dec
lcallw
pop
dec
xor
dec
sbbb
daa
push
sub
mul
cld
or
pop
dec
and
in
and
enter
in
add
ret
hlt
push
in
frstor
jmp
loop
iret
jle
popa
push
fwait
xchg
movsl
push
push
inc
pop
insl
and
mov
jmp
ss
and
lock
and
xor
rolb
mov
lock
rcl
mov
inc
lcall
dec
dec
inc
in
sub
adc
cmp
dec
jno
xchg
scas
sub
cmc
dec
jge
xchg
ficomps
add
dec
into
call
out
mov
insl
and
in
rcll
test
scas
out
inc
mov
dec
rorl
xor
lods
test
movsl
movsb
pop
xor
and
xchg
push
or
negl
push
fs
lret
nop
pop
dec
or
loopne
mov
or
lahf
mov
in
mov
outsb
inc
inc
add
ret
cmp
cmp
loopne
sub
aam
xor
fistps
cmp
push
icebp
dec
shrb
jne
movq
fmulp
push
add
ss
repz
mov
dec
arpl
or
adc
lret
aaa
mov
inc
sbb
xchg
loopne
cmp
sub
or
xor
dec
sbb
lock
mov
in
lods
dec
enter
es
adc
sub
and
mov
add
or
repz
mov
jbe
scas
adc
daa
ret
or
push
and
pop
xor
ficompl
push
sub
repz
repz
pop
inc
flds
jnp
pop
mov
in
xchg
mov
ds
and
push
xchg
push
cmpsb
add
int
xchg
or
xor
push
add
seta
mov
repz
or
inc
cmpl
fistl
fmul
mov
cmp
pop
fwait
shl
mov
adc
mov
into
aas
pushf
dec
movsb
call
adc
je
sbb
rcr
xchg
inc
lcall
hlt
pop
cmp
movsl
dec
nop
inc
sbb
mov
hlt
xor
jg
enter
leave
sub
aad
bound
pop
mov
xchg
fadds
mov
mov
inc
push
add
mov
lock
imul
scas
fsubs
or
adc
jge
jae
ljmp
adc
inc
dec
test
call
add
aam
mov
cmp
loopne
call
cmp
stos
sub
mov
lret
fstl
sti
mov
dec
ret
js
sbbb
xor
lds
incl
testb
jle
hlt
stos
incb
lds
sub
xor
add
call
push
or
stos
in
dec
scas
call
push
cmp
mov
cmpsl
jne
push
mov
call
mov
mov
sub
adc
lret
testl
adc
ja
jg
fisttpll
sub
addr16
push
testb
sub
xchg
lret
lea
lret
push
pop
jbe
adc
cmp
push
jg
add
add
xor
lahf
sbb
enter
in
adc
loop
loopne
inc
flds
lock
jbe
notl
mov
test
mov
fisubrl
and
jo
arpl
pop
xchg
xor
mov
data16
aam
adc
cmpb
mov
dec
dec
fmuls
push
push
sbb
jmp
mov
pop
dec
push
push
in
fildl
data16
mov
push
sbb
cs
add
lret
cmpsb
and
sub
lods
lahf
shll
mov
xchg
or
dec
add
jns
push
or
shlb
pop
iret
adc
rcll
xchg
sbb
dec
dec
sub
ds
cmp
mov
xchg
imul
or
repz
out
shll
adc
out
sbb
jg
or
cld
imull
scas
pop
mov
loope
call
lcall
sub
push
mov
testl
pop
fistpl
test
cmp
jge
addb
inc
sbb
icebp
adc
xchg
add
fstpl
sub
and
push
xchg
insb
mov
jle
cwtl
sahf
iret
cvtps2pi
sbb
adc
add
jae
aad
nop
fsubs
sbb
mov
movsl
add
dec
sbb
or
test
pop
pop
inc
xchg
das
xchg
and
jmp
mov
and
adc
mov
fwait
adc
lock
inc
xor
push
lret
icebp
mov
pop
int3
push
clc
les
loope
test
mov
sbb
xor
pushf
rcrl
test
mov
scas
push
add
pop
in
jb
rcl
imul
aad
test
rorb
jecxz
xor
adc
inc
jne
movsl
xor
outsl
stos
lahf
inc
push
out
adc
jne
pop
sub
mov
mov
or
ret
insl
cmp
int
sub
add
ja
inc
xor
rorb
fsubs
inc
mov
xlat
mov
mov
sub
cli
inc
mov
fisubs
das
notb
fstpl
jle
or
sbb
imul
test
loope
in
sti
je
sbb
iret
and
aam
and
sub
cmc
cmp
rorb
sub
sub
sub
fbstp
dec
pop
pop
mov
xchg
xorb
imul
jp
mov
les
sub
jle
je
ja
out
icebp
pop
fldl
or
and
call
sti
sbb
outsb
mov
dec
ja
adc
bound
mov
imul
jae
loopne
in
out
mov
lcall
or
je
in
cmp
cmp
inc
in
fcos
ret
and
dec
nop
lods
push
dec
sbb
pop
enter
sar
out
xchg
pop
sub
inc
ds
sub
add
mov
push
inc
in
out
pop
jo
mov
js
jge
test
test
push
xlat
sub
fdivrl
es
push
inc
clc
and
or
mov
mov
push
lcall
lcall
xchg
push
mov
in
movb
and
mov
mov
out
pop
lcall
aam
iret
cmpsl
add
push
jnp
xor
fs
test
push
pushl
dec
cwtl
mov
lea
loop
das
scas
push
jge
cmp
cli
aas
cmp
sub
loopne
movsb
pop
mov
into
mov
add
pop
aam
xchg
sub
sub
sbb
mov
scas
adc
divb
jo
inc
xchg
mov
sub
in
push
mov
loop
mov
mov
jne
inc
lock
outsb
in
repz
push
arpl
xchg
sub
arpl
inc
js
in
in
or
fs
mov
jno
lea
nop
out
mov
or
mov
xchg
adc
ss
xor
jge
jb
xchg
movsl
aas
xor
cmpsl
std
mov
cmp
mov
xchg
adc
arpl
add
daa
stos
je
jmp
into
cwtl
cmpsl
inc
xchg
jo
mov
into
lods
push
lahf
lret
xchg
mov
idivb
js
in
push
adc
in
stos
dec
push
cmc
cmp
mov
dec
mov
xchg
push
lods
pop
xchg
mov
cmp
mov
jne
push
test
add
lcall
out
repz
push
dec
iret
pop
jg
sbb
icebp
cmc
or
inc
and
push
in
stos
cltd
mov
xchg
ss
jl
lcall
std
add
jl
fimuls
ret
add
inc
push
xorl
push
rcll
jg
fcomps
out
jp
sub
stc
mov
or
dec
mov
iret
movsl
dec
shlb
lock
pop
orl
leave
ljmp
push
inc
push
adc
jecxz
pop
inc
mov
ljmp
xor
push
xchg
mov
stc
cmp
push
and
popf
jmp
pop
jg
loop
push
mov
jp
jbe
jle
lcall
aam
test
add
pop
je
pop
pop
lcall
sub
adc
dec
inc
mov
adc
or
pop
es
inc
lcall
xor
sahf
jbe,pt
cld
xchg
mov
shlb
push
out
pop
mov
ja
bound
push
inc
pop
pop
subl
sub
stc
aas
dec
aam
sbbb
pop
xchg
mov
pop
ficoml
mov
mov
xchg
jno
mov
adc
or
jns
push
sbb
inc
lods
sti
sbb
pusha
mov
test
jo
lahf
mov
inc
push
mov
push
add
sbb
push
xor
dec
sbb
sub
shrb
or
in
shl
push
xchg
cmpsb
ja
rcrb
dec
cmp
mov
mov
fs
enter
addb
push
pop
outsl
shll
pushf
mov
and
dec
xchg
cmc
cltd
test
loopne
fldenv
ror
pushf
inc
dec
shr
xor
push
sub
mov
hlt
loope
daa
loopne
jne
cmp
fldcw
outsl
mov
dec
shrl
sbb
out
dec
leave
or
or
dec
or
lret
out
ds
mov
lea
xchg
and
and
jne
cmp
pop
mov
adc
or
sbb
xor
or
pop
stos
sub
xchg
pop
pop
fwait
xor
xchg
pop
and
pop
cs
push
adc
lret
adc
in
cmp
lea
mov
sub
stos
pop
push
insb
and
out
imulb
lahf
and
xor
test
mov
cli
cmc
or
push
scas
mov
sar
decl
mull
out
push
jl
and
pop
push
outsl
cli
add
dec
divl
scas
jp
lea
cmp
test
enter
in
inc
or
orb
push
cmpsl
jns
insb
into
or
adc
inc
jns
cld
pop
cld
inc
jecxz
test
pop
xchg
push
adc
jns
jg
mov
iret
sub
rcr
inc
push
mov
jbe
test
or
push
jg
jnp
xchg
adc
out
dec
sbb
mov
inc
nop
les
mov
pop
fisttps
mov
movsb
xor
and
mov
push
lcall
and
hlt
scas
repnz
xor
dec
repnz
mov
inc
orl
sbb
cmp
mov
xchg
or
cli
pop
push
out
inc
test
mov
pusha
stos
mov
xchg
jb
xor
pop
loop
lret
pop
sbb
stos
add
xor
jo
push
push
push
jle
repz
out
fstps
adc
dec
sbb
mov
jl
mov
or
mov
dec
out
inc
imul
call
xor
popa
arpl
dec
lock
dec
push
int
mov
xchg
sub
pusha
popf
jecxz
movsl
int3
cwtl
sub
sub
jo
adc
icebp
dec
popa
fwait
sbb
ror
cltd
dec
cmp
std
pop
lock
sbb
push
call
shr
ret
add
cmp
enter
movl
in
jmp
cltd
dec
clc
ljmp
ds
sbb
pop
sbb
sar
push
test
clc
daa
push
mov
sti
add
pop
subb
sub
dec
popa
dec
shlb
fidivrl
cwtl
pop
inc
repz
and
dec
inc
mov
adc
jne
push
sti
mov
add
pop
mov
cmp
pusha
push
cld
testl
xlat
pusha
push
fcmovne
push
cmp
sub
cld
pop
stos
mov
inc
xchg
xchg
imul
test
push
clc
jp
repz
inc
sbb
subl
lcall
push
mov
loop
mov
ds
or
nop
ret
pop
cld
roll
add
jg
cli
add
push
pop
inc
call
sub
adc
pop
les
or
mov
int3
mov
ljmp
push
cmp
pop
mov
or
sub
add
fidivs
bound
jae
or
jmp
pop
mov
lret
movsb
cmc
jecxz
int3
pop
pop
adc
pop
sbb
sti
lret
cmpsl
sbb
or
mov
ds
xlat
fsubs
sarb
cmp
cmp
xchg
in
iret
dec
ds
rorb
sub
and
pop
ja
dec
filds
outsb
dec
mov
add
push
adc
add
mov
std
pushf
icebp
fmuls
and
adc
jle
push
movsb
dec
adcl
dec
mov
cmp
jle
pop
fnop
mov
jae
dec
sbb
jo
test
push
push
mov
sbb
sbb
push
jmp
inc
dec
fisubs
shrl
ljmp
inc
int3
outsb
push
inc
in
cmp
push
push
dec
cmp
xor
shlb
hlt
sub
dec
add
test
jg
xchg
jae
xor
jecxz
pop
sbb
ds
repnz
push
ja
cmp
lahf
insb
add
lea
cld
mov
notl
cltd
adc
push
sub
das
push
pop
call
push
push
lock
push
cmp
jne
mov
adc
and
xor
test
divb
mov
fcomps
lret
add
inc
test
in
push
and
sub
fucomip
add
jno
in
mov
aaa
dec
dec
ret
push
jno
pop
and
repnz
cmp
push
adc
inc
xor
and
lcall
mov
push
cmp
jp
and
lea
pop
movsb
cmp
or
pushf
pop
pop
xor
cli
push
adc
cmc
pop
adc
fstl
data16
jnp
dec
jbe
pop
lret
mov
jecxz
cmp
lds
ror
jecxz
sbb
mov
mov
pop
loope
cmpsl
adc
pop
push
jp
sahf
push
aad
or
mov
xchg
inc
clc
add
adc
jo
cwtl
aas
gs
dec
add
mov
neg
jp
andb
adc
push
xor
sbb
and
cmpsb
int
pop
push
inc
mov
push
cmp
mov
xchg
mov
ret
je
jnp
pushw
mov
jne
pop
pop
jo
jno
fidivl
add
inc
fisubs
mov
mov
inc
xchg
push
out
pop
mov
mov
mov
and
arpl
xchg
pop
and
jp
out
je
xlat
or
inc
inc
jl
stc
jl
loope
test
xor
insb
cli
hlt
and
cmp
icebp
popf
sbbb
mov
add
mov
mov
mov
mov
pop
dec
sub
test
or
sbb
not
mov
out
fsubrs
adc
subl
pop
dec
adc
arpl
add
lahf
mov
sbb
addb
clc
inc
mov
pusha
xchg
int3
cmpsb
stos
in
ss
aaa
pop
cmp
in
loopne
pop
or
int
mov
scas
lods
movsl
movsl
test
cwtl
pop
out
fadds
fdivs
nop
mov
out
push
inc
or
pop
push
std
fdivs
loope
xchg
mov
cmp
push
or
cmpl
leave
sub
dec
xor
adc
test
fisttps
push
adc
loopne
nop
inc
adc
cmc
es
adc
cmp
dec
add
cmp
lods
xor
mov
xchg
dec
scas
fisttpl
aaa
idivl
cli
sahf
les
fadd
xchg
sub
ss
hlt
out
xor
fdivl
mov
jecxz
sahf
adc
xchg
mov
xchg
xor
jno
aas
call
mov
or
jne
push
dec
stos
mov
loop
fistpl
frstor
adc
mov
pop
xchg
sbbl
jae
test
cmp
imul
in
jnp
cmovno
leave
iret
dec
dec
test
mov
mov
add
aaa
mov
cmp
lock
xor
sub
inc
sbb
por
fisubrl
or
cli
jno,pn
hlt
mov
pushf
mov
mov
mov
out
mov
pushf
mov
sbb
lret
adc
and
es
into
sbb
ja
out
test
pop
cli
sarb
pop
js
add
popf
or
shrb
or
mov
sub
inc
mov
sti
daa
cmpsb
cmpsb
imul
push
inc
or
sbb
pop
xor
fcmovnb
pop
fwait
and
lds
clc
test
add
jle
jg
clc
pop
xor
enter
xchg
push
mov
roll
cmpl
sub
xor
cld
lds
popa
pop
pop
xchg
jns
mov
jmp
outsb
gs
imul
test
gs
in
xor
outsl
test
fbstp
dec
aad
mov
daa
je
xlat
pusha
ds
sub
add
mov
lret
xchg
dec
or
xor
dec
jne
adc
fnstenv
jg
jl
jecxz
push
sub
leave
add
movhps
loopne
out
clc
movsl
inc
mov
sbb
mov
xor
lsl
sub
pop
sub
xor
scas
aam
loope
or
inc
inc
gs
mov
movsb
insl
cmc
push
or
imul
decl
movsl
jmp
ss
cli
adc
shll
insl
mov
repz
aam
rcl
mov
call
das
mov
xchg
inc
call
xor
pop
dec
sub
into
mov
mov
xor
ret
sbb
pop
test
inc
mov
leave
out
dec
sbb
out
int3
xlat
mov
cmpsb
mov
pop
mov
xor
jns
xor
push
clc
int
dec
jo
lea
xchg
xor
mov
inc
dec
into
push
pushf
nop
sub
cmc
mov
adc
xorl
lret
lahf
out
mov
jae
add
imul
jl
add
test
xchg
lahf
sub
pop
pusha
cld
roll
lock
mov
mov
lods
arpl
nop
fsts
pop
inc
xchg
add
test
push
xchg
mov
push
stos
mov
out
jbe
dec
adc
and
xor
adc
std
or
shlb
pop
cli
in
popf
or
cmpsl
inc
lods
sbbb
add
mov
movsb
mov
cli
push
mov
push
mov
repnz
fildll
pop
lea
shll
push
hlt
lock
fwait
gs
jmp
out
je
and
and
out
addr16
xchg
xor
push
fstpl
aas
inc
cld
lods
mulb
aas
ljmp
test
arpl
xor
mov
pop
jb
das
add
sub
pop
cmc
ret
movsl
jmp
gs
mov
movsl
xchg
or
es
test
or
mov
adc
arpl
popa
mov
repz
fldl
xchg
adc
mov
push
xlat
stc
mov
and
push
push
push
insb
ss
test
xchg
or
stc
fsts
xor
pop
scas
cmc
and
xchg
loope
add
cld
mov
clc
mov
add
cwtl
lods
loopne
imulb
mov
test
fildll
mov
pop
jmp
andl
jne
fwait
and
add
cmc
aas
in
sti
and
negl
jae
rorb
je
mov
sahf
xor
cmp
shl
cmp
xchg
lcall
xchg
push
mov
dec
mov
jo
in
cld
insb
in
daa
test
test
cmc
stos
xlat
push
lock
sub
mov
cmpb
int3
jge
stos
enter
xchg
push
cmp
jl
scas
imul
xor
cmp
fiadds
mov
pop
in
subb
enter
je
movsb
in
dec
in
adc
mov
sbb
jo
xchg
je
mov
in
mov
fistpl
das
repz
and
push
in
pop
sar
pushf
shrl
lahf
mov
fdivs
out
cli
dec
xchg
cmc
cmp
std
dec
pop
dec
rolb
dec
cmp
mov
bswap
mov
ljmp
add
inc
mov
insb
jbe
sbb
adc
adc
pushf
cmovbe
push
inc
repz
xchg
mov
mov
jmp
cmpsl
fisubs
mov
repnz
mov
or
ret
in
mov
sub
dec
inc
popa
mov
dec
cmc
jmp
sbb
lahf
jbe
gs
lods
sbb
xchg
repnz
xor
push
mov
push
js
pop
xchg
repnz
cmp
and
mov
xor
or
nop
lret
fs
sub
rcrb
xchg
test
stos
jmp
lods
popa
mov
addr16
and
popf
mov
fistpll
mov
mov
or
je
pop
subl
add
mov
jmp
dec
jae
int
mov
into
dec
sub
nop
mov
or
icebp
mov
mov
mov
xor
gs
sbb
icebp
push
ljmp
and
ljmp
lret
mov
adc
inc
mov
and
jae
jb
fcos
push
pop
dec
xchg
stos
lods
cmpsb
movsl
nop
and
push
mov
imul
push
push
mov
das
aaa
xlat
inc
stos
lods
mov
push
inc
fs
mov
movsb
fwait
out
je
mov
inc
popf
jo
mov
dec
subb
jecxz
sub
xorb
cmpsl
cmpsl
lods
iret
jge
add
popf
sarb
push
inc
xor
xchg
js
xchg
dec
daa
aad
out
test
and
mov
sbb
pop
shll
xor
cli
adc
mov
hlt
cwtl
loope
enter
jbe
push
movsb
lods
xchg
fisubrs
cwtl
fmuls
push
adc
xor
xchg
mov
and
xchg
lret
mov
shlb
push
push
inc
test
adc
mov
repnz
add
test
inc
sub
add
stc
push
mov
push
adc
or
jbe
dec
ret
xchg
jle
xchg
aad
divb
xlat
cmp
pushf
xchg
dec
xchg
fistpl
fidivl
ret
loop
cmc
jb
repz
addr16
sbb
getsec
insl
fs
push
lods
lret
mov
mov
xchg
mov
mov
jns
add
sub
int3
pop
aad
loope
mov
out
mov
mov
pop
push
std
xor
pop
rcll
jnp
sbb
je
add
roll
lret
imul
xchg
pushf
and
fwait
outsl
pop
aam
inc
inc
fcmovbe
ljmp
push
sbb
clc
insl
fdiv
outsb
fwait
sbb
in
icebp
inc
out
dec
xor
jo
pop
push
pushf
pop
inc
pusha
addr16
test
jmp
mov
mov
call
cmp
jae
push
das
or
push
mov
mov
loope
subl
mov
out
adc
sub
insl
aaa
aam
rcll
aam
and
xor
mov
scas
stc
mov
push
and
xchg
mov
pop
movsl
jne
xchg
lea
mov
mov
mov
movsl
add
adc
mov
fcmovnbe
adc
sahf
outsb
or
xor
sahf
xor
das
sbb
aam
cmp
mov
inc
ljmp
int3
mov
loopne
ss
xchg
ljmp
outsl
aas
aas
and
or
sub
cmp
mov
sub
xchg
pop
jle
or
pop
pushf
or
xorl
sub
ljmp
xchg
mov
and
ficoml
jb
test
mov
push
out
lahf
add
lahf
dec
or
sarl
fsubrp
sbb
popa
adc
hlt
fs
pushf
setns
inc
loopne
leave
dec
fcoml
add
xchg
rorl
push
movsl
push
imul
or
inc
movsb
out
in
dec
jne
test
push
xchg
sbb
jl
in
fs
mov
movsb
xor
fcompl
in
roll
pushf
and
stos
jmp
mov
mov
repnz
enter
jecxz
xlat
sahf
addr16
lahf
pop
fwait
mov
xor
push
adc
xchg
inc
xchg
xorb
iret
cmp
xchg
cmpsl
or
outsl
push
sub
and
lods
movl
jb
test
push
mov
es
mov
cmp
mov
push
mov
sbb
jg
mov
xchg
dec
lret
jmp
cmp
sub
jmp
xchg
xchg
ret
daa
sbb
add
lods
jl
leave
mov
push
mov
and
jge
ret
cli
xchg
out
mov
daa
mov
jo
lahf
add
aas
xor
xchg
call
lcall
sub
ror
pop
rol
mov
les
jp
xor
sub
imul
repnz
imul
xchg
add
adc
inc
bound
pop
jp
push
sub
cli
loopne
pop
cmp
push
sbbb
cmp
add
mov
xor
mov
stc
out
loope
mov
push
rol
int3
pop
std
fdiv
sbb
std
lcall
inc
shl
aam
sarl
mov
mov
add
and
mov
addr16
insl
mov
bound
cmp
inc
pop
jbe
inc
shrl
fs
jp
or
and
jns
test
pop
jl
dec
xlat
push
ja
xor
dec
cmpb
rcl
add
leave
in
test
push
push
sbb
pop
and
loope
fisubrl
fcoml
sbb
ds
push
xchg
jb
imul
scas
stos
push
xchg
mov
xchg
and
mov
inc
adc
lods
cmp
sub
fiaddl
sub
frstor
push
or
test
mov
xchg
xchg
dec
adcb
out
fnsave
xchg
lds
jmp
sti
pop
pop
cwtl
hlt
insl
stos
xor
and
mov
adc
mov
mov
in
out
mov
dec
sbb
jns
mov
data16
cmpl
cltd
pop
mov
mov
shlb
cld
popa
std
dec
mov
adc
add
gs
hlt
shll
loope
push
push
test
aad
out
xchg
movsl
call
mov
out
in
jo
xor
sti
imul
imul
xor
fwait
adc
xor
jnp
jnp
add
jp
dec
adc
cli
ja
mov
aas
shl
jno
inc
dec
adc
cmp
mov
aad
sbb
mov
sarl
jecxz
sarl
mov
fildll
sti
call
cmp
mov
mov
and
push
add
pushl
repz
test
xor
adc
mov
fwait
sti
xchg
add
mov
xchg
inc
push
jbe
cmpsb
cwtl
xchg
outsl
dec
out
fdivl
cmp
mov
inc
inc
jle
xor
pusha
mov
pop
jge
out
mov
std
dec
xor
out
adc
dec
xchg
dec
sbb
adc
adc
imul
xchg
inc
test
dec
stos
jecxz
mov
fsubs
xchg
mov
xchg
mov
cmp
cltd
adc
imul
cltd
incb
lret
fcmovbe
scas
xchg
xchg
mov
xchg
lret
jmp
mov
popf
push
js
test
insb
and
add
popf
add
xor
test
cwtl
push
add
cmp
mov
pop
mov
shll
popa
ss
ret
mov
je
sbb
sbb
inc
mov
cmp
cs
in
lock
ds
rorl
cmpsl
in
stc
mov
sbb
inc
int
sbb
mov
enter
cmp
nop
push
mov
punpckldq
jecxz
jbe
shrl
addr16
leave
cmp
mov
lahf
movsl
or
xorb
mov
fisubs
aam
inc
ja
cmp
dec
ljmp
outsl
cmp
push
and
mov
cmovns
sub
bound
push
test
clc
outsl
mov
and
cmp
fwait
push
xchg
int3
ror
mov
out
test
cmp
out
or
dec
add
sbb
and
jp
mov
add
iret
and
sbbl
lret
and
mov
push
cmp
fidivrl
stc
cli
pushf
aas
and
ja
std
cmc
leave
jp
std
lgs
jb
movsl
xor
cmc
mov
inc
ss
mov
cmp
sbb
in
lret
call
popf
push
int3
pushf
push
mov
test
add
js
out
ds
inc
xchg
xor
stos
dec
jle
andl
mov
xchg
push
cmpsb
inc
pop
imul
pop
cmp
clc
xchg
mov
xchg
push
pop
dec
imul
cmpsl
lret
cwtl
inc
sub
mov
xchg
sub
lds
test
inc
shlb
push
inc
xchg
cmp
andl
push
mov
cltd
jl
jmp
cmovbe
sbb
sti
or
lods
ret
pop
ja
out
addb
bnd
jno
popa
mov
in
popf
stos
cltd
adc
sub
pop
sub
inc
xlat
and
xchg
fs
mov
push
inc
jle
cmpsb
sub
xor
pushl
mov
scas
mov
mov
rorl
shlb
push
out
roll
or
jae
int
mov
sbb
push
xlat
pop
inc
cld
xlat
sbb
xor
mov
jmp
and
pushf
sbb
cmpsl
push
mov
ficoml
mov
push
sub
sti
push
aad
jae
std
mov
scas
lcall
xchg
movsl
mov
dec
stc
or
data16
adc
mov
lods
test
or
mov
push
inc
ret
jmp
or
xor
notb
rol
ret
ret
mov
cmp
repz
mov
cmp
bound
mov
jl
mov
lea
inc
iret
mov
shrl
add
icebp
pop
leave
push
push
and
jns
je
lods
stos
mov
cmp
es
imul
into
sbb
cmp
add
addr16
adc
inc
out
mov
sarl
insl
imul
mov
call
icebp
loopne
or
lods
mov
mov
mov
stos
dec
push
fldl
jecxz
clc
adc
jecxz
sahf
inc
add
dec
mov
xor
inc
jns
jo
ljmp
add
push
add
pusha
adc
xchg
lds
daa
das
xor
mov
stos
into
push
sbb
adc
xchg
inc
lods
lock
pusha
ret
insb
mov
out
cmp
test
lea
and
loopne
jmp
sti
cmp
xor
fbstp
jb
jb
outsb
cmp
xor
mov
ja,pt
mov
fcoml
cwtl
add
inc
jae
inc
push
scas
lea
jle
sbb
add
in
fisubs
pop
mov
call
out
cli
dec
shll
stos
std
aas
cmp
outsl
hlt
enter
pop
out
push
push
mov
rcl
mov
sarb
sbb
popa
pop
sub
xchg
sbb
ret
nop
cmpsl
pop
xchg
jp
addl
push
in
clc
lcall
mov
mov
xor
jns
addr16
incl
fadds
push
dec
sub
fwait
inc
or
rorl
add
push
call
adcl
jle
lods
les
fisubrs
insl
xchg
ret
aam
inc
leave
add
inc
lods
fimull
pushf
xchg
into
mov
movsb
cmp
iret
adc
push
ficomps
je
jns
xor
stc
test
in
data16
cmpsl
and
call
adc
dec
mov
mov
aad
dec
xor
cmp
int
mov
arpl
pop
pop
add
das
int3
outsb
rolb
and
add
inc
loop
add
and
gs
add
and
mov
mulb
mov
cmp
mov
and
in
ja
push
fadds
xlat
xor
cmp
sub
mov
sbbb
cmpxchg
pop
xor
int
popf
cmp
daa
leave
stos
int3
lds
call
mov
mov
sbb
out
cld
imul
std
inc
sbb
inc
dec
dec
jb
filds
call
or
lahf
or
pusha
pop
push
pusha
jne
mov
loop
repz
pushf
inc
aaa
mov
mov
push
icebp
jp
out
lea
lds
push
jle
int
pop
icebp
test
mov
loope
inc
scas
and
and
jae
sti
push
jo
push
xlat
loop
jge
jo
ljmp
cmp
mov
and
mov
mov
adc
sbb
mov
mov
and
add
dec
subb
ljmp
mov
pop
bound
jecxz
incl
jb
lods
ljmp
sub
mov
aad
mov
jnp
dec
cmp
dec
add
shl
arpl
sbb
rcrb
clc
imul
call
pusha
xchg
out
add
dec
popa
arpl
stc
out
cmpl
mov
mov
dec
rol
xor
negl
dec
sbb
ret
inc
inc
adc
cmp
mov
mov
inc
jecxz
xchg
std
jne
xor
sub
xchg
jmp
push
cli
adc
dec
fmull
mov
leave
cmc
lret
sub
sahf
xchg
ss
dec
mov
ja
mov
fiaddl
repz
dec
and
ret
sbb
cmp
cmp
outsl
mov
jne
mov
add
cli
pop
inc
mov
add
inc
in
cmpb
dec
or
cli
jbe
cli
mov
in
xor
or
ret
in
lret
es
cmp
pop
outsb
xchg
mov
or
fisubrs
scas
daa
inc
cmp
add
test
or
push
or
out
xchg
mov
fwait
mov
mov
ja
inc
jae
stc
cmp
or
pop
cs
movsl
loopne
jecxz
addl
cli
xchg
jmp
jno
jg
push
sub
mov
popf
ret
and
mov
inc
cmpsl
mov
test
jne
sti
push
js
pslld
mov
hlt
jl
aaa
test
movsl
ffreep
stos
jp
mov
jnp
popf
add
data16
mov
mov
jl
jge
cs
add
jo
test
aam
stos
mov
push
call
mov
leave
jns
nop
aad
outsb
lcall
inc
add
std
mov
jmp
sub
shrl
jp
jns
ss
test
push
outsb
jbe
in
lea
push
pusha
xchg
das
adc
or
pusha
stos
lret
orb
pop
lahf
push
insb
mov
mov
cmp
cld
fbstp
jb
clc
jg
cmp
roll
imul
and
sub
pop
data16
dec
lahf
xchg
das
je
mov
or
jns
pop
js
dec
repz
push
sbb
sarb
dec
pop
es
loope
and
jno
dec
cmp
xchg
cld
nop
sub
cmc
jne
das
mov
xor
test
jl
pop
rcrl
push
gs
pop
mov
enter
sub
daa
adc
lea
sbb
push
jno
outsb
pop
ja
xchg
outsl
sub
add
xchg
es
popf
inc
or
push
test
orl
adc
stos
cmp
lret
ds
or
outsl
out
leave
setno
fsubrp
int3
sbb
xchg
in
xchg
push
xor
xlat
imul
jno
nop
cwtd
adcb
in
add
sahf
or
add
pop
loop
mov
jae
sub
aam
push
cmc
repnz
ss
adc
sbb
jg
je
int
icebp
mov
xor
cltd
push
gs
out
into
out
les
mov
int
mov
pop
fs
in
dec
push
gs
adc
jns
jp
dec
movsl
cmc
imul
adc
push
push
dec
cmpsl
cs
aam
adc
sti
jl
sbb
adc
icebp
or
stos
outsb
ret
lods
setl
popf
mov
rcrl
rclb
mov
jg
mov
gs
loop
mov
pop
or
nop
jbe
cmp
cmc
test
icebp
lds
and
stos
xor
shl
scas
cmp
hlt
bound
push
in
pop
mov
rclb
into
outsb
mov
fs
push
mov
inc
add
mov
roll
and
jecxz
push
mov
jae
adc
pop
cmp
cwtl
test
mov
movsb
jecxz
fnsave
inc
or
push
xchg
mov
push
push
lods
cltd
push
pop
sbb
cmc
pop
adc
pop
push
and
cmpsl
sbb
aas
aad
cmp
jp
das
or
mov
cmp
cs
cmp
jg,pt
or
jne
fidivrl
push
data16
dec
gs
xor
push
sti
js
sub
ja
mov
fwait
dec
fsubrp
lods
pop
lret
sub
push
testl
clc
adc
cltd
cmc
cmpsb
movb
insb
cmpsb
in
test
sahf
in
xchg
pop
int3
negb
adc
push
lods
mov
scas
andl
adc
and
lods
add
xor
notl
enter
popf
imull
push
cmp
outsl
shl
out
icebp
inc
mov
mov
mov
lret
arpl
push
movl
ja
xorb
pop
pop
daa
dec
lds
cmp
mov
or
mov
jle
jge
mov
cmp
sub
daa
jno
jb
je
mov
dec
xchg
clc
pusha
lods
pop
mov
mov
out
jns
and
cs
lea
cmpsl
sarb
cltd
cmp
xor
xor
inc
mov
pop
push
jl
in
nop
xchg
fwait
xchg
icebp
add
jl
mov
fidivrs
cmc
push
bound
cmc
rcrb
sub
xlat
push
push
push
inc
stos
adc
sbb
cmp
xor
ss
xchg
jbe
inc
mov
or
fs
pop
mov
or
sub
lea
mov
dec
stc
ss
sti
inc
jp
and
xchg
pushf
test
sbb
fsubrp
push
movsb
sub
in
pop
inc
jns
pop
mov
mov
imul
out
shrl
stos
pop
adc
sub
jle
mov
jno
cmpb
rorl
add
scas
push
movsl
mov
pop
add
sbb
cld
and
mov
and
push
icebp
dec
mov
adc
fdivs
or
jp
lds
cltd
int
jmp
ljmp
mov
or
into
pop
loopne
cmp
fstpt
imul
push
in
add
pop
sbb
cmpsb
mov
jmp
push
xlat
daa
push
inc
in
mov
mov
jge
add
sub
pop
lret
mov
inc
jne
icebp
inc
xlat
pop
cmp
ret
jbe
inc
repz
xchg
mov
inc
les
iret
mov
jb
adc
push
shr
repnz
jns
cmp
sub
xor
popf
ds
imul
dec
push
mov
cmp
and
loopne
stos
das
iret
insl
in
mov
push
jo
jae
push
xchg
in
adc
das
adc
insb
loop
imul
dec
adc
imul
and
or
mov
push
inc
js
jns
fisubl
dec
cmp
test
iret
popf
cmpsl
inc
call
scas
mov
addl
fst
push
sub
push
leave
mov
movsl
shr
aam
cmp
lods
sbb
jne
cmp
sbb
lods
aad
loop
sbb
aaa
int
in
ja
push
push
sub
pop
cmc
popa
bound
rolb
sub
mov
jns
lahf
inc
push
cmp
test
test
fildl
jle
jo
and
adc
mov
lahf
sub
mov
insb
and
jl
or
xor
fdecstp
leave
repz
dec
in
adc
scas
repnz
iret
mov
outsl
xchg
adc
add
popf
cmpsl
popf
mov
or
dec
popf
xchg
test
sbb
lea
pusha
fdiv
xor
jb
jmp
insb
aad
ja
adc
adcl
mov
dec
or
iret
jno
xor
mov
jne
cmpsl
pop
mov
jle
jae
sub
mov
push
clc
ja
xor
push
xor
pop
xor
lcall
or
mov
cwtl
outsb
dec
pusha
pop
and
add
in
js
push
in
cmpsl
cmp
movsb
in
xor
pop
ficoml
es
sub
pmuludq
iret
xchg
dec
test
mov
ss
out
sub
mov
pop
inc
pop
jo
insb
loopne
loope
sub
cmp
or
xchg
clc
mov
fwait
int
fistps
jecxz
rorb
push
pusha
imul
rcrb
cmp
xorb
js
push
xor
xchg
push
add
in
add
sub
hlt
mov
or
and
adc
inc
adc
enter
hlt
cs
sub
sti
inc
ja
cwtl
dec
in
pop
fimull
sub
icebp
mov
mov
mov
sub
xchg
outsl
das
lds
frstor
test
mov
das
jp
insl
scas
lods
aad
jne
filds
shll
xor
sbb
lods
fcoms
and
aad
insb
cmpsl
outsb
test
xchg
and
cli
sbb
inc
jb
int
je
test
lahf
xlat
dec
push
jle
imul
nop
bound
xchg
pop
push
stos
stc
push
rcr
aad
jne
lret
xchg
sti
xchg
lahf
jl
pop
test
jno
push
scas
xchg
jp
popf
iret
jge
push
rorb
mov
xchg
inc
cmp
pop
adc
hlt
push
sti
ds
mov
in
mov
cld
popf
xor
inc
mov
mov
xor
lea
popa
jle
and
mov
xor
or
xchg
mov
xchg
into
jg
loopne
or
or
jmp
cmpsl
out
lea
orl
popa
cmpsb
mov
inc
imul
cmc
dec
fwait
ljmp
sbb
sarl
idiv
cli
xchg
mov
popf
out
xchg
in
cmp
std
jae
or
push
pcmpgtd
xchg
and
aam
fisttpll
dec
or
push
mov
insb
dec
pop
mov
jg
out
sbb
cmpsb
fisttpl
mov
lods
push
xchg
cli
push
lea
xor
push
bound
lock
inc
cmc
in
mov
cmp
loope
mov
stc
or
xor
fwait
mov
mov
mov
insb
and
fwait
out
idiv
mov
mov
xchg
pop
or
xorl
cmp
ds
dec
push
jae
loope
fwait
je
jg
mov
lods
in
cmp
mov
mov
mov
test
outsl
and
aad
imul
sub
adc
pop
inc
sub
or
sub
mov
xor
push
cmp
and
repnz
or
test
or
push
cltd
or
adc
xchg
inc
addl
in
lret
and
jno
add
or
pop
xchg
xchg
mov
imul
ljmp
and
stc
fbstp
imul
pusha
cmp
and
xchg
jmp
xchg
repnz
fildll
scas
insb
mov
xor
arpl
fimull
mov
movsb
push
imul
pop
fisubrs
mov
cmpsl
call
sub
and
xlat
xchg
arpl
faddp
push
jns
ror
testb
inc
movsl
pop
aad
xlat
push
lret
into
lock
pop
and
test
dec
mov
mov
push
insb
stos
sub
fdiv
sub
push
or
test
sbb
mov
std
adc
lds
mov
mov
pop
mov
out
leave
pushf
or
adc
jae
inc
adc
out
fdivp
dec
lcall
repnz
loop
inc
sub
xor
cmp
add
pop
les
or
inc
lret
push
rcll
cmp
cld
mov
test
adc
repnz
fs
mov
movsb
sbb
lods
fidivrs
mov
pop
test
fwait
lods
sbb
cwtl
xor
or
incb
push
cld
test
imull
mov
jae
push
out
cltd
pop
fsubrs
push
pop
and
in
sbb
insl
mov
push
iret
pusha
adc
rcll
in
cs
mov
fstp
jp
mov
loope
test
out
sbb
push
dec
adc
int3
push
mov
and
aaa
into
jge
pop
in
into
mov
sub
int3
cmp
iret
shlb
adc
xor
out
or
lahf
mov
pop
xor
or
fisubs
cmpsl
fidivl
sub
repz
add
push
rcrb
xchg
subl
and
movsb
ss
jl
jb
mov
shll
pop
push
mov
push
mov
pop
mov
pop
mov
sahf
out
mov
jae
or
lret
inc
cmp
xor
and
and
and
std
xlat
push
pop
push
je
repz
imul
push
sbbb
in
jne
nop
aaa
and
mov
xchg
cld
ret
inc
or
xor
sti
xchg
xlat
xchg
jno
imull
lahf
dec
pop
out
add
add
pop
popa
ret
gs
lods
push
mov
push
sahf
call
sahf
xor
xor
push
pop
rorl
xchg
push
popa
or
xchg
adc
pushf
data16
enter
dec
movb
add
jo
enter
fnstenv
mov
push
test
cld
into
xlat
push
ffree
xor
mov
and
sbb
gs
xchg
adcl
in
and
pop
test
aas
jmp
test
cmp
push
imul
mov
aam
mov
je
adc
ret
imul
pusha
mov
out
dec
sbb
sbb
mov
popa
cmp
or
ss
shlb
dec
push
jno
std
inc
xor
adc
inc
pop
out
loope
adc
mov
scas
pop
push
pushf
ss
bound
jg
or
jo
cltd
jnp
dec
shr
jecxz
test
gs
mov
ss
mov
push
mov
mov
mov
into
cs
dec
cmp
cwtl
adcl
cmc
pop
jmp
xchg
or
cmp
lcall
xlat
and
sbb
cmp
sahf
lods
mov
dec
cmpsb
inc
bound
xor
ja
addl
mov
sub
hlt
mov
and
inc
out
add
jb
jae
jl
jge
leave
pop
mov
mov
sti
dec
dec
pop
xor
outsl
cmp
int3
into
fbld
adc
and
mov
fsubrs
mov
in
stos
xchg
in
xchg
lods
out
in
xchg
push
loopne
fsubrl
mov
mov
add
out
mov
pop
mov
push
adc
xchg
mov
out
nop
popa
ja
stos
das
shll
sub
sub
lods
aaa
pcmpgtw
cli
imul
repz
rcrl
mov
fisttpl
out
popf
in
add
mov
repnz
or
popa
xor
mov
mov
inc
es
cmpsl
sub
push
pop
test
or
mov
arpl
pushf
mov
cld
jle
int3
jle
mov
mov
icebp
push
sub
dec
add
pushf
fisubrs
sbb
push
test
mov
xor
or
inc
pop
push
lods
jne
jge,pt
push
lahf
or
clc
in
jb
movsb
lea
mov
sub
xchg
lcall
and
cli
jmp
mov
cs
cmpsb
scas
or
dec
inc
mov
out
jo
lock
push
cli
pop
mov
cmp
push
adcb
es
pop
pop
cmp
outsl
sbbl
xchg
xchg
shlb
addl
or
adc
pop
cmp
mov
dec
sub
mov
pop
pushf
stos
and
out
mov
stos
fdivp
test
aad
bnd
mov
int
mov
ss
ret
or
mov
aaa
out
loop
add
xor
inc
lock
xchg
lock
mov
xacquire
sbb
outsb
cmpb
enter
pop
sub
inc
dec
cmpsb
rcll
sub
sbb
rclb
push
add
pop
jl
jmp
jecxz
dec
in
xor
jne,pt
xchg
or
setb
adc
cli
jbe
adc
jl
pusha
lahf
notb
pop
cmc
shrl
jmp
int3
stos
dec
inc
xchg
lods
push
leave
in
sub
test
cs
ja
jge
cli
clc
mov
dec
loope
ja
adc
and
mov
out
dec
ss
push
sub
insl
mov
mov
push
jns
jns
idivl
or
call
outsl
lret
push
cmp
nop
inc
sbb
pop
lcall
adc
ror
mov
cmpsb
or
nop
bound
mov
lahf
fs
aam
sti
mov
mov
dec
add
and
xchg
and
iret
pusha
push
jmp
test
sti
aad
cmp
cmova
test
ret
pop
jecxz
and
cmp
in
pop
out
push
jns
adc
cltd
cmpb
les
inc
sbb
xchg
in
mov
xchg
xchg
mov
dec
loop
xchg
xor
xor
pushf
add
mov
mov
lea
ljmp
gs
pop
gs
cwtl
mov
pop
xchg
or
test
dec
dec
mov
adc
jp
es
out
js
sti
pusha
adc
loop
jl
cmp
mov
jp
mov
push
cwtl
aaa
xchg
pop
pop
mov
nop
sbb
fcoms
cs
sub
sub
in
cmp
add
xchg
pop
mov
int
outsb
pop
popa
insb
mov
add
aam
mov
scas
push
les
aaa
andl
jnp
push
cmovne
cmp
pop
pop
cmp
out
cmpsb
or
idiv
loope
fucomp
adc
xorb
push
jnp
lret
push
push
lahf
jl
push
jnp
jae
fwait
iret
loope
aas
and
dec
or
inc
pusha
in
jnp
enter
mov
and
inc
pop
push
fistps
mov
clc
sysenter
mov
in
sbb
xor
ja
lock
dec
add
in
das
scas
pop
pop
cltd
inc
xchg
inc
imul
xchg
and
xor
outsb
mov
cwtd
sbb
das
lea
jp
inc
je
shlb
repz
hlt
shrl
mov
pop
not
sahf
and
push
lahf
fcmovu
fsubs
xchg
roll
lcall
mov
push
jl
sbb
sbb
mov
repnz
sbbb
mov
push
mov
fcoml
cmovnp
xchg
pop
push
lds
mov
inc
dec
cmp
xor
or
jg
dec
stos
ret
pop
sbb
popf
pop
cmp
add
push
lock
shr
sbb
imul
in
xchg
push
inc
scas
data16
iret
in
jmp
xor
clc
das
cmp
jl
gs
aam
inc
outsl
xchg
pop
out
scas
idiv
out
sub
aad
hlt
add
mov
loope
sbb
scas
enter
loop
cli
add
push
fwait
arpl
leave
mov
push
testb
dec
and
fwait
enter
out
dec
mov
call
lret
pusha
adc
xlat
jne
imul
add
stos
inc
adc
arpl
or
mov
push
or
mov
int
pushf
xlat
call
mov
add
jmp
jnp
or
mov
fsubrl
jg
enter
push
test
sbb
fldt
lahf
fisttpll
imul
loop
pop
pop
cmp
in
idiv
shll
xchg
nop
or
adc
push
pop
push
jge
and
cmc
or
mov
jmp
lret
push
ss
or
mov
mov
repz
or
clc
aas
mov
xchg
jp,pt
testb
push
addl
nop
idivb
arpl
fs
dec
mov
cmp
std
xlat
loop
mov
pusha
mov
mov
pop
subl
ret
pushf
inc
jmp
fists
push
mov
jne
mov
or
std
jbe
push
jg
sarl
out
pop
movsb
in
pop
or
and
icebp
stc
enter
insb
jns
arpl
add
mov
mov
push
loope
pop
push
dec
insl
adc
add
sub
daa
and
jo
scas
pop
lea
lds
push
xchg
imul
and
dec
in
adc
cld
mov
or
and
out
shr
fs
pop
xor
dec
pmulhw
mov
xor
jp
outsb
lret
lods
sub
mov
outsb
ljmp
pop
les
lcall
popa
bound
in
xchg
xchg
cmp
sbb
pop
jmp
insb
inc
push
aas
popa
lret
push
jae
push
popa
iret
ret
rolb
data16
imul
and
jecxz
jle
jge
cmc
jae
out
cltd
mov
out
mov
lods
mov
xchg
adcb
mov
int3
xchg
sbb
push
inc
and
ja
sub
lret
adc
add
lea
test
pop
jl
add
pop
divb
filds
call
jnp
imul
insb
sub
dec
jmp
fildll
orl
push
sub
scas
jmp
scas
xorl
add
enter
stos
or
pop
mov
icebp
pop
sbbb
lock
xchg
int3
loopne
cmp
clc
mov
mov
ljmp
xor
push
jnp
js
out
push
mov
xlat
daa
into
or
notb
test
mov
divl
orb
cmp
sarl
mov
dec
cmpsl
fstl
xchg
lods
jmp
or
cld
pop
push
fsubs
dec
roll
cltd
aas
xchg
cmp
fwait
and
rclb
lahf
rcll
jne
push
sbb
sbb
sahf
pop
cmpsb
loop
int3
adc
adc
incl
test
test
in
push
filds
inc
pop
jae
sbb
sub
daa
cld
out
lods
lret
and
add
or
clc
cmp
mov
int
cli
push
and
inc
sahf
sbb
and
ljmp
xorl
jnp
cmp
out
out
jle
loopne
idivb
push
inc
inc
cmpsb
mov
int
rcl
xchg
pop
mov
mov
xor
pop
cmc
push
movsb
mov
inc
sbb
inc
mov
cmp
ret
cmpsl
sar
pop
mov
inc
mov
and
fnstcw
adc
mov
mov
dec
das
dec
ja
ljmp
push
mov
jle
jp
cmp
jp
fwait
sbb
shlb
push
mov
xor
push
pop
mov
pusha
fisttpll
pop
adc
outsb
mov
icebp
les
neg
insl
pop
out
mov
cmp
mov
xchg
insb
cmpsb
inc
adc
sub
inc
leave
xchg
ret
or
mov
fld
xchg
adc
or
pop
add
jmp
push
sub
arpl
pop
sarl
mov
ret
jp
xchg
mov
stos
sbb
inc
jge
fstpl
sarb
add
fstps
xor
xlat
cli
xor
les
lock
test
add
or
stos
push
dec
add
dec
data16
sbb
test
outsl
jno
jb
mov
mov
mov
idivl
ljmp
shlb
imul
push
aam
stos
lock
sbb
push
stc
dec
pop
cmc
jne
mov
push
dec
push
lods
push
scas
pop
popa
xor
loopne
push
pop
mov
inc
mov
cwtl
push
mov
sbb
sub
adc
outsb
into
inc
jmp
fstpt
ficoml
dec
sbb
fistps
mov
cmp
push
rorb
push
mov
outsl
lods
loope
jno
xchg
pushf
and
sbb
dec
add
jge
xor
jge
out
xchg
or
cmp
loopne
popa
imul
movsb
dec
out
out
jmp
clc
jp
sahf
cmp
mov
mov
pop
iret
xor
out
jle
push
add
xchg
leave
sbb
fists
mov
sbbb
inc
mov
int3
lods
or
or
jbe
lcall
jno
inc
add
cwtl
pop
aaa
inc
mov
dec
or
push
pop
cli
push
and
push
shl
test
inc
hlt
and
mov
push
inc
cli
cmp
and
mul
inc
and
fcompl
adc
adc
nop
inc
mov
fnsave
mov
dec
mov
mov
sbb
jle
or
stc
pop
inc
repz
das
mov
jmp
int3
pop
jecxz
mov
xlat
sub
clc
in
fwait
dec
repnz
cli
fwait
jle
fistpll
mov
repz
inc
into
imulb
imul
push
push
imul
push
cmp
roll
loopne
adc
cmpsl
in
addr16
out
popf
xchg
pop
sbb
cmp
sub
mov
inc
fdivr
dec
adcl
repnz
adc
leave
mov
into
dec
daa
jmp
fmuls
dec
mov
pop
mov
lds
push
aas
jg
push
test
lock
mov
pop
jnp
inc
int
out
jns
add
and
add
ret
loopne
cs
aaa
lahf
mov
jbe
and
pop
xor
in
push
push
les
mov
add
pop
and
jb
js
or
dec
fbstp
dec
adc
imul
jle
in
cmp
or
ror
les
iret
push
movsl
sbb
notb
xor
arpl
ffree
loope
push
push
movsl
fmul
or
push
lret
mov
and
gs
ljmp
pop
cli
repz
incl
ret
js
orl
cld
xchg
sbb
mov
sahf
inc
inc
mov
shrl
push
pop
xchg
out
in
mov
iret
jge
mov
and
cltd
cmpsb
test
or
sub
jb
push
mov
push
mov
sbbb
pop
insb
push
das
and
orl
pop
lock
dec
push
mov
fcomi
pop
jp
sarl
cmc
push
xor
and
in
inc
fcoms
lret
mov
dec
test
movsb
rcl
push
in
sarb
or
push
mov
lcall
push
mov
jo
inc
cmp
out
call
adc
mov
in
hlt
movl
mov
movsl
icebp
push
orb
sbb
enter
popf
jp
clc
xchg
sub
cmpsb
jae
out
pop
in
shl
jp
ds
outsb
jns
lock
iret
test
outsb
mov
loopne
call
je
je
mov
ret
pop
adc
lds
dec
imul
adc
loop
jecxz
cmp
mov
add
sub
mov
pop
shrl
mov
and
xchg
jg
out
add
mov
cwtl
dec
std
and
pop
enter
int3
sarl
pop
lea
dec
test
dec
mov
jo
sbb
data16
or
mov
je
sub
shlb
sub
mov
dec
xchg
sti
xchg
icebp
or
jns
and
mov
jb
mov
pop
jecxz
push
xchg
mov
jg
in
xchg
rcll
or
loopne
dec
mov
pop
hlt
sbb
push
xorb
stc
popf
sbb
push
mov
ja
sbb
into
xchg
dec
repz
and
fisubl
xorb
adc
dec
dec
out
inc
xchg
pusha
pop
or
cwtl
stos
pop
pusha
jnp
push
adc
notb
out
and
sbb
lock
mov
push
pop
cs
in
lock
popa
popf
and
cmpsl
and
sub
mov
test
sarb
sbb
xchg
inc
les
cmp
arpl
in
rcll
push
or
mov
mov
sub
pushf
sub
xlat
xchg
xchg
scas
loope
ja
test
push
roll
lret
out
jae
cmpsb
out
pushf
repnz
pop
sub
cmp
or
nop
or
dec
sbb
sbb
push
outsl
lock
push
xchg
rclb
mov
add
inc
aaa
lea
push
push
rcrb
jnp
sub
sbb
pause
pop
push
or
daa
adc
into
test
mov
cld
cli
gs
and
jae
pop
imulb
outsb
andb
lock
loop
inc
xlat
inc
or
sbb
push
cwtl
jg,pn
out
adc
sbb
int3
inc
icebp
fcmovb
sbb
sub
daa
or
jge
cmc
sub
sbb
dec
mov
out
fnstenv
xor
lds
lahf
or
and
jbe
push
add
cmp
repz
mov
mov
aad
ds
in
add
sbb
inc
sahf
in
xchg
push
adc
or
pop
inc
loope
out
or
sbb
push
sub
dec
lret
mov
push
pop
mov
adc
pshufw
mov
sbb
mov
roll
insl
fstpl
negb
mov
jg
fdivl
cld
add
scas
inc
cmpl
aam
orb
pop
icebp
scas
jge
pmullw
pop
stos
push
push
aad
inc
in
in
imul
inc
rcrb
rcl
sub
sub
lds
xor
adc
fmul
inc
js
jg
dec
mov
adc
shld
sub
aaa
push
mov
orl
int3
loope
push
std
sub
cwtl
jmp
data16
pop
dec
in
mov
ja
shlb
mov
pusha
jnp
jge
ror
cld
dec
cmpsl
dec
jmp
jno
icebp
cmp
inc
notb
inc
mov
adc
dec
or
xor
xchg
lds
fwait
icebp
ja
out
adc
addr16
cmc
mov
xor
lret
cltd
mov
shl
fldcw
popf
repnz
xchg
and
pop
and
cmpsl
pop
xor
or
fsubr
push
aad
arpl
cmc
and
inc
daa
and
stc
ss
or
mov
xchg
cmp
or
mov
mov
stos
ljmp
jmp
clc
push
fimuls
mov
and
adc
jae
sbb
mov
cmp
aaa
adc
cmpsb
iret
lods
cmp
repz
mov
out
inc
lods
ficompl
das
rcrl
repz
sbbl
rcll
fistpll
pop
cltd
in
in
popa
adc
sub
inc
dec
and
addr16
mov
cmp
jp
scas
mov
sarl
test
fildll
inc
iret
insl
mov
subl
imul
popf
lret
jae
call
icebp
inc
and
dec
aaa
outsb
dec
scas
push
int3
shl
push
es
loop
sub
data16
pop
int3
sbb
and
cmp
mov
push
xor
inc
inc
les
rclb
jnp
es
mov
push
mov
xchg
xor
xlat
lock
jl
pop
sarl
push
scas
and
xor
les
xchg
cvtps2pd
repnz
js
add
into
call
xor
cwtl
jle
leave
clc
pop
jbe
sti
dec
mov
dec
jge
pushf
roll
outsb
jb
push
popf
test
xor
icebp
sbb
add
inc
add
daa
fwait
or
rorb
xchg
shrb
ret
and
shlb
xor
mov
loope
fsubs
add
out
outsb
push
pop
sub
xchg
in
stos
stos
dec
mov
dec
lock
mov
jb
jge
aam
xchg
push
and
clc
test
addr16
in
popf
or
sub
out
orl
inc
mov
mov
lods
jmp
shrl
xor
sbb
stos
cwtl
jmp
loopne
sub
leave
and
inc
ret
leave
add
pop
addr16
cmpsl
out
inc
icebp
push
dec
shlb
fbstp
mov
mov
rcr
lods
js
addr16
adc
push
jno
push
fcompl
fcompl
repz
jl
cmpsl
dec
sti
sbb
js
subb
jle
faddp
scas
das
inc
hlt
push
mov
stos
int
jnp
xchg
sub
int
pop
or
fbstp
addr16
imul
jmp
mov
fiaddl
call
sbb
mov
lods
mov
lock
fistpl
sbb
sub
jb
stc
jecxz
mov
mov
rcl
and
xchg
cli
xorb
pop
ret
mov
push
jle
js
mov
xchg
fmulp
loopne
pop
nop
mov
dec
outsb
scas
adc
lret
cmpsl
loope
inc
pextrw
dec
or
and
xchg
dec
inc
or
add
lds
sub
sbb
cmc
cld
inc
push
sub
ret
adc
pop
ja
addb
adc
pop
dec
neg
mov
mov
sarl
add
xchg
push
cmp
aaa
test
dec
xor
lock
ds
inc
mov
arpl
mov
stos
fadd
xor
ja
mov
xchg
jno
int3
outsb
mov
repnz
iret
pusha
int
add
in
test
adc
pop
int
xor
and
mov
ja
xorb
fildll
or
jne
lea
addr16
inc
inc
cmpl
rcrb
and
mov
cltd
pop
int
mov
je
mov
pop
insb
adc
fs
ror
leave
cwtl
mov
scas
into
scas
lahf
xor
and
push
and
dec
andl
xchg
mov
cwtl
fwait
push
jmp
add
scas
pop
cmp
insb
ret
enter
push
or
add
pop
jl
dec
lahf
imul
add
cltd
fbstp
mov
cmp
fwait
add
jb
arpl
sar
or
lahf
jl
pop
or
icebp
xchg
test
inc
inc
xor
pop
pop
push
sgdtl
insb
je
mov
je
test
mov
clc
sub
sbb
push
arpl
in
jne
mov
shl
stc
outsb
cli
xor
fiadds
and
test
sbb
xchg
pop
add
les
dec
int3
or
fs
and
jae
and
add
cmp
add
popf
xor
jl
mov
sub
sbb
imul
xor
mov
ror
popf
jno
movsb
dec
fsts
aam
adc
icebp
adc
jle
mov
inc
inc
mov
xchg
shlb
bound
insb
fdivs
add
sub
rorb
lret
roll
or
scas
mov
xor
in
jl
or
push
pop
mov
cmpsb
arpl
int3
popa
dec
addb
rolb
mov
imul
inc
push
push
lods
xor
fsubr
push
test
xorl
das
sub
xor
pop
nop
add
cltd
dec
mov
xor
mov
push
pop
pop
mov
bnd
mov
les
jb
fnsave
fstps
jecxz
flds
xor
fucomip
xchg
rclb
jle
sub
lods
movsb
ss
adc
inc
xor
jne
mov
popf
imul
dec
dec
fnstcw
inc
cld
sbbl
cmp
jns
cmp
dec
subl
loop
enter
std
jne
push
xor
ds
cmp
psllw
outsl
add
stos
mov
adc
push
push
xlat
cli
test
inc
adc
imul
mov
xchg
mov
jne
in
inc
mov
or
addr16
and
popa
sbb
fsub
xchg
stc
xor
cmc
and
lret
or
push
lds
and
mov
xor
xchg
ss
mov
xor
xlat
xor
stos
cmp
insl
inc
int
fiadds
push
mov
in
cmp
dec
xchg
add
jmp
pop
out
test
push
xchg
out
jbe
or
decl
mov
ss
addr16
sub
mov
pop
xor
mov
sub
xchg
adc
dec
and
sub
lds
dec
jb
mov
xchg
dec
mov
adc
cmp
sub
ficomps
mov
cld
adc
xor
inc
lret
pusha
leave
loope
cmp
mov
loope
mov
or
les
movsb
sbb
mov
pushf
xor
push
nop
xor
pop
cwtl
jae
xchg
mov
rol
sbb
popa
and
test
mov
or
popf
mov
insb
pushf
addr16
mov
lock
mov
out
push
jge
aas
sbb
xor
xchg
stos
cltd
adc
clc
mov
movl
sbb
jg
imul
dec
mov
jp
and
sub
jae
mov
xor
hlt
push
mov
mull
jg,pt
cs
add
lcall
sbb
add
dec
pop
xchg
pop
shl
pop
sahf
jp
cld
outsb
add
pop
mov
cwtl
pushf
insb
in
jnp
xorl
dec
movsb
cld
mov
xchg
and
xor
dec
or
gs
add
data16
add
mov
repnz
sbb
push
cwtl
and
outsb
test
cmp
push
dec
test
les
xchg
test
push
jg
cmp
lcall
push
add
pop
push
divl
sub
and
jae
je
and
and
xchg
xor
or
and
push
fs
into
popa
push
imulb
in
jmp
jo
or
test
in
sbb
lret
mov
jecxz
and
xor
mov
data16
sub
mov
ljmp
lret
into
sub
popa
push
popa
rol
xlat
dec
inc
arpl
lahf
jecxz
adc
sbb
outsl
sbbb
dec
adc
or
sub
fildl
sahf
pop
sahf
nop
push
push
mov
sti
inc
mov
shl
adc
cwtl
inc
popa
push
imul
xor
xchg
mov
in
add
xor
inc
add
mov
pop
cli
dec
push
mov
jmp
xor
xchg
call
mov
sbb
push
stos
lods
xchg
xchg
stc
imul
fldt
pop
cli
movsb
ljmp
xchg
dec
dec
daa
ljmp
sub
out
pop
ss
push
cmpsl
mov
or
cmp
mov
out
in
push
fldcw
inc
inc
data16
out
push
fisubl
out
xchg
or
or
hlt
lds
scas
js
stc
push
add
or
leave
or
mov
pop
call
test
jb
cmp
pop
ss
fbld
jle
jmp
inc
ljmp
stos
push
jecxz
shr
and
sub
mov
adc
js
pop
sub
mov
test
stos
data16
mov
adc
movsl
lods
inc
jae
cmp
mov
push
sbb
out
popf
push
cs
scas
test
test
lcall
mov
dec
cmp
and
mov
test
mov
inc
pusha
jo
iret
shl
sbb
push
imul
inc
pop
push
shlb
lods
movsl
mov
fisubrl
xchg
outsb
xchg
int3
jmp
cltd
pop
push
jmp
sub
jl
repnz
pop
popf
cld
lods
pop
sbb
pop
clc
test
jge
inc
inc
mov
pop
ja
pop
pop
scas
cmc
mov
xchg
xchg
cmp
sub
dec
pop
loope
add
dec
or
sbb
jl
jg
xchg
cmp
data16
rclb
mov
bound
iret
dec
adc
mov
fwait
dec
inc
in
sbb
movsl
hlt
testb
jg
pop
pushf
add
icebp
insl
ss
cmp
into
rolb
jns
mov
pop
fstpl
xchg
jmp
fdivl
pop
cli
sbb
and
mov
sub
jnp
pop
pop
mulb
xchg
cmpl
push
repnz
xchg
jmp
scas
jmp
mov
sbb
mov
push
mov
xor
sbbb
dec
xorl
enter
dec
xchg
xchg
and
jbe
xor
sarl
mov
pop
bound
xor
fnsave
push
rolb
dec
add
adc
inc
outsb
xor
xchg
jg
es
mov
mov
inc
fbld
sbb
repz
sarb
fdivrp
push
test
dec
outsl
dec
dec
lret
popa
adc
pop
push
outsl
pop
in
cmp
add
push
jg
mov
xchg
out
les
lods
orl
pslld
sub
imul
jo
into
xchg
sbb
nop
test
push
into
mov
movsl
push
test
mov
aas
dec
push
adc
mov
aas
and
xchg
mov
sub
jns
jne
push
scas
sbb
dec
in
lds
das
repz
shl
mov
jbe
cmp
leave
hlt
add
addr16
ss
or
pop
rcl
ficoml
push
testl
push
xlat
mov
jae
ja
in
popa
xchg
push
inc
jns,pn
dec
sbb
push
inc
sub
jo
push
pop
dec
xor
xor
outsb
mov
xlat
mov
aaa
and
out
mov
sbbl
mov
lods
pop
jg
push
test
in
xchg
pop
gs
cmpsl
pushf
jne
popf
mov
subl
jns
dec
xchg
lcall
aas
push
cs
scas
add
in
lret
pop
test
mov
add
fs
xchg
sbb
scas
fwait
test
jno
shlb
sub
int3
mov
aaa
push
aaa
xchg
or
jmp
mov
push
jne
lods
pop
xchg
ret
insb
repz
push
inc
in
mov
in
dec
xchg
in
push
ljmp
shlb
mov
mov
pop
xchg
pop
dec
ret
aas
jecxz
das
roll
bound
hlt
lock
mov
pop
aas
jecxz
cmp
xor
fnstenv
dec
scas
scas
cmp
xor
jg
pop
mov
push
add
pop
bound
adc
add
xchg
dec
incl
xor
jl
lods
mov
mov
cmp
xor
push
push
sbb
xchg
arpl
xchg
pop
fwait
int3
jo,pn
mov
lds
push
and
mov
add
or
xchg
dec
inc
mov
and
lret
mov
shlb
inc
popf
push
aas
jmp
ljmp
sub
pop
jmp
push
mov
in
add
push
lret
insl
jno
and
jo
jbe
pop
popa
bound
add
les
stc
loopne
fldt
mov
push
lret
lods
sbb
inc
fisttpl
ljmp
add
and
subb
dec
adc
dec
std
pop
in
mov
or
or
pop
mov
fcomip
mov
inc
out
fistpl
sub
mov
cltd
imul
mov
xor
inc
push
out
mov
mov
ror
out
pop
lret
jmp
in
mul
out
or
dec
in
mov
and
push
mov
mov
mov
add
pop
jne
rcll
push
pushf
das
pop
add
push
push
mov
lcall
mov
cmp
pop
jmp
aad
sahf
jb
and
xlat
push
inc
add
sub
rcll
lret
mov
mov
cmc
fcoms
add
int
mov
mov
repz
cld
jmp
pop
dec
xor
adc
lea
xchg
in
xchg
repz
subl
mov
cwtl
jno
push
lea
cmp
ret
lds
mov
lcall
mov
cld
insb
push
adc
insb
ljmp
in
pusha
pop
dec
push
xor
jae
xor
jnp
cmpsb
outsl
and
dec
jne
and
jge
ds
push
inc
and
pop
inc
ds
adc
pop
test
outsb
cmc
icebp
jae
mov
popf
test
cmpsl
jnp
sub
sub
lds
mov
mov
loopne
cmp
push
pop
pusha
fisttps
addr16
mov
dec
jae
insl
mov
adc
xchg
inc
aaa
test
inc
inc
imul
sarl
dec
mov
dec
loop
dec
push
aaa
or
stos
jge
push
imul
jo
cmc
addr16
cmp
test
mov
sti
test
pop
imul
dec
jns
push
dec
loope
bound
shlb
sub
fcmovnu
jnp
mov
mov
jge
inc
adcb
push
in
cmpb
movb
push
mov
stos
xor
ficomps
in
cmp
lods
ret
add
imul
pop
gs
pop
cmp
cvttps2pi
jae
mov
xor
pop
or
pushf
cmp
dec
jo
leave
mov
xor
or
dec
aaa
jo
in
aas
cmpsl
xor
add
loope
xor
popa
aad
dec
into
mov
xchg
pop
pop
or
enter
sbb
imul
pushl
popa
stc
in
inc
sub
adc
cs
xor
ficoms
sbb
in
add
test
mov
and
loope
mov
xor
push
arpl
sub
adc
fsubs
mov
inc
push
add
cmp
xchg
add
fs
dec
cmp
cmp
push
addl
mov
cld
jnp
inc
aaa
mov
rcrl
sbb
push
xor
fildll
sub
out
dec
inc
cli
dec
divl
insb
out
gs
adc
rorb
lret
and
and
inc
mov
in
pop
mov
jg
es
rorb
in
outsb
cmpsl
pop
push
in
bound
adc
mov
mov
mov
pop
push
orb
mov
lcall
fidivrs
add
dec
mov
js
dec
sbbb
sub
or
mov
mov
mov
fcoml
imul
mov
inc
jo
xorb
sub
adc
lds
movsl
aad
push
mov
movsb
call
push
sub
rorl
dec
lss
xchg
dec
cmp
pop
ja
js
cmpsl
insb
push
dec
notb
sbb
out
cwtl
add
jmp
or
push
fisubl
and
mov
mov
cs
ljmp
jl
mov
mov
pusha
add
sub
and
fiadds
xchg
lods
out
push
sbb
cmp
sarb
mov
aam
mov
mov
subl
aad
xor
cmp
xlat
ljmp
xchg
add
loopne
adcb
int
xlat
sub
mov
shl
push
icebp
xor
add
insl
sub
jnp
sbb
pushf
mov
fnstsw
cmp
cmp
popf
jbe
jmp
sbb
and
insb
mov
out
ret
mov
push
xchg
push
sbb
jp
out
pop
call
fdivr
xchg
mov
mov
xchg
dec
mov
pop
das
lahf
mov
push
push
stc
test
mov
cmp
jg
cwtl
mov
add
jnp
add
push
mov
cld
les
stc
leave
or
neg
or
test
push
jp
mov
push
add
into
add
xchg
xor
inc
cli
adc
push
and
jle
sti
lock
sub
sub
xlat
xor
repnz
popf
inc
sbb
mov
sbb
dec
push
adc
imull
and
fstl
xchg
pop
pop
addr16
inc
ret
scas
test
pop
out
push
mov
mov
inc
pop
pop
lret
cmpsb
lret
roll
pop
pop
push
sbb
jle
pop
push
out
stos
mov
cltd
adc
lods
mov
sbb
decb
fs
imul
in
cmp
or
xchg
mov
in
imul
outsl
pusha
dec
leave
mov
scas
test
mov
std
fwait
clc
arpl
cmp
pop
dec
adcb
lahf
jecxz
xor
icebp
sbb
imul
or
aas
clc
in
pop
mov
mov
iret
mov
xchg
pop
or
movsl
test
ret
jge
xor
faddl
loope
popf
cmp
add
repnz
add
lret
push
jbe
or
jle
mov
lcall
cmp
sub
inc
jl
mov
sti
in
mov
dec
jmp
andb
fdivr
ficompl
xchg
repz
pop
xor
loope
xchg
sbb
or
es
pop
sysexit
and
mov
push
xor
pop
scas
es
xchg
into
push
dec
mov
mulb
clc
mov
cwtl
in
cs
mov
mov
mov
xor
mov
out
vpmullw
sub
sahf
mov
dec
lcall
cwtl
dec
inc
mov
dec
imul
pop
sbb
rcrl
add
outsb
or
insl
xor
jb
cs
sbb
test
mov
fcmovnu
faddp
stos
sub
ljmp
xchg
inc
mov
shlb
in
adc
or
mov
mov
and
sbb
mov
lret
push
mov
push
jnp
lahf
adc
push
iret
and
sub
outsb
pop
lret
ss
add
sub
lds
xor
add
xchg
xor
pop
add
pop
jl
stos
mov
mov
jge
inc
mov
lcall
mov
push
push
dec
sbb
xchg
bound
lock
sub
addr16
xchg
mov
push
or
bound
push
cmp
mov
aam
xchg
jg
push
jno
mov
lods
adc
cwtl
jp
cwtl
ja
dec
dec
in
hlt
clc
mov
fildll
cmp
mov
enter
outsb
mov
mov
ret
xchg
sub
jns
lods
push
vmovups
add
adc
jb,pn
mov
pop
add
nop
jl
mov
ljmp
imul
lahf
mov
lods
dec
push
out
mov
inc
xlat
xchg
mov
push
pop
daa
adc
xor
push
fidivrl
addr16
lock
push
pop
sub
das
jnp
xlat
push
mov
xchg
popa
fucomp
mov
lds
mov
andl
imul
nop
xlat
dec
js
and
js
mov
rorl
loop
mov
ds
mov
pop
outsb
cmp
jbe
test
inc
iret
jnp
xchg
or
int
stos
or
inc
pop
insl
fs
std
ljmp
xor
xchg
push
sub
bound
sahf
xchg
test
sub
xor
popa
pop
addl
jbe
fsubp
add
int
scas
scas
gs
loope
fbld
pop
ret
je
or
cmpsl
gs
mov
mov
or
mov
outsl
and
cli
jl
xor
mov
adc
push
mov
lret
or
inc
cltd
adc
xchg
adc
sbb
and
fnstcw
cltd
imulb
pop
sub
sub
js
add
daa
xor
push
mov
push
inc
mov
sub
lea
jp
pushf
add
mov
dec
xchg
fcmovbe
or
ret
into
mov
aad
inc
cwtl
frstor
pop
push
pop
icebp
cli
lcall
in
call
lea
jg
out
or
outsl
push
daa
xchg
mov
sysexit
fcmovnu
clc
xor
cs
add
mov
jae
push
mov
xchg
ja
push
in
pop
ljmp
jae
and
adc
push
fbstp
xchg
jnp
pop
xchg
sbb
cmc
outsb
test
fcomip
add
pushf
cmc
inc
outsb
daa
pop
dec
xor
jmp
xchg
push
orl
adc
into
pop
jo
out
iret
xor
mov
lea
cs
dec
fsub
imul
sbb
into
add
sbb
shrb
into
insl
into
lea
ficoml
data16
fdivl
mov
icebp
outsl
adc
inc
and
sub
xchg
leave
xlat
cmp
out
mov
xor
adc
push
dec
subl
adc
mov
das
inc
push
into
ret
push
push
cwtl
adc
cli
inc
js
in
insl
mov
push
test
dec
adc
mov
lahf
inc
mov
out
add
cmpb
fistps
sub
repz
mov
inc
aam
adc
pusha
int3
mov
push
push
cmc
loop
cli
jnp
iret
jp
gs
sub
js
hlt
frstor
cmp
cmp
jge
or
mov
xchg
es
arpl
test
push
inc
mov
xchg
mov
lcall
pop
jns
push
data16
loope
jg
sub
sub
call
rclb
push
aas
mov
mov
nop
jmp
movsl
cs
add
dec
push
add
popl
pop
lock
rorb
jg
mov
pushf
and
movsb
test
rorl
andb
or
sahf
pop
sbb
imul
out
cld
leave
push
fstpt
xchg
pop
scas
popa
inc
mov
in
xor
scas
mov
test
pushf
adc
adcl
xor
rcll
stos
sub
clc
insb
mov
add
pop
mov
rcr
sbb
or
pushl
ljmp
orb
insb
add
es
iret
lcall
cmp
pop
iret
mov
mov
loop
cs
in
cmp
gs
xchg
xor
jb
imull
test
inc
fcomi
ljmp
scas
xor
mov
push
inc
sbb
lods
or
repnz
adc
xor
mov
ljmp
in
fisttpll
gs
sahf
xchg
cmp
or
test
jl
aaa
dec
rcrb
mov
add
stos
out
mov
cmpsb
push
scas
stos
adc
pop
xchg
incl
fdivs
sti
fdivrs
dec
inc
mov
push
dec
sbb
pop
mov
pop
dec
into
mov
jnp
mov
jmp
inc
mov
mov
mov
dec
cld
movsl
cmp
sbb
aas
imul
push
jbe
xchg
in
imul
jmp
mov
adc
popf
inc
or
mov
daa
out
mov
lods
xor
mov
jno
roll
into
jb
xor
subl
mov
cmp
out
cmp
xor
or
jge
add
popa
aad
xlat
shll
insb
cmc
mov
ret
rclb
jnp
xlat
adc
hlt
add
mov
stos
lods
iret
pop
ljmp
das
and
and
inc
sub
inc
das
mov
xchg
push
imul
jnp
pop
adc
dec
xor
fwait
cmc
push
push
sub
mov
mov
call
pop
in
mov
out
lods
sub
inc
jnp
decb
cli
mov
ljmp
aam
or
fistpl
aas
push
cmp
lea
fiadds
std
xor
push
pop
adc
jae
lcall
xchg
or
fildll
lcall
mov
popf
mov
and
lods
adc
aas
mov
daa
lcall
notb
inc
mov
das
mov
les
repz
lock
cwtl
roll
mov
cli
dec
lea
adc
or
lods
sti
testb
mov
adc
outsl
pop
cmp
sarb
shrl
mov
loopne
mov
sub
pop
outsl
mov
iret
repz
sti
jge
lock
xor
pop
repnz
jp
pushf
dec
xor
inc
jae
fdivl
mov
mov
xchg
out
push
out
iret
divb
xor
fdivp
pop
jae,pn
aad
inc
lea
jne
lods
mov
out
push
sbb
jo
jne
imul
mov
int3
push
subb
jmp
les
xchg
addr16
jecxz
pop
fcompl
dec
jno
in
ss
ds
test
push
cld
push
fdivrl
pop
leave
dec
shlb
or
daa
push
jo
dec
cwtl
xchg
pminsw
or
insb
cmp
pop
xchg
les
adc
mov
shl
xchg
inc
pop
xchg
outsl
stos
mov
push
push
push
add
or
xchg
jne
int3
testl
sti
add
shl
outsl
mov
movb
jle
add
subl
shlb
push
sub
add
jbe
sub
mov
jle
nop
stos
mov
cmpb
test
push
push
pop
sub
mov
dec
ficompl
and
and
push
sub
insl
push
out
lock
pop
lock
cmc
in
push
xchg
pop
dec
push
shrl
cmpsb
mov
pop
fmul
or
xchg
mov
lret
aam
mov
adc
xor
std
add
cmpl
clc
cmpl
or
sub
dec
js
mov
in
dec
out
xor
aad
pop
out
test
sbb
ja
and
leave
movsl
mov
and
fdivrs
push
call
mov
roll
xchg
sarl
and
and
fwait
cmpsl
sub
icebp
movsb
into
jae,pn
in
mov
cmp
daa
xor
pusha
arpl
stos
hlt
aaa
adc
add
pop
fiaddl
gs
xchg
test
mov
mov
adc
and
fnstcw
pop
popl
inc
mov
lcall
add
jae
push
test
loopne
mov
or
cmp
xchg
mov
outsb
addr16
jmp
arpl
mov
mov
cs
adc
cmp
jle
subb
lods
out
mov
orb
lcall
jae
cltd
fisubrl
sub
sub
call
jmp
fldcw
add
cmp
enter
in
in
dec
shl
jo
mov
lea
inc
pop
or
mov
adc
push
xor
decl
in
mov
mov
pop
vpaddb
jb
or
out
shlb
clc
jns
cmp
jmp
adc
lret
xor
xchg
lea
imul
mov
mov
jnp
lcall
xchg
jne
nop
push
pop
or
fnsetpm(287
fndisi(8087
or
leave
mov
sub
adc
loope
inc
jmp
mov
out
or
insl
test
sub
jb
or
pop
dec
xchg
out
mov
cmp
je
xchg
inc
shrb
ds
imul
outsb
outsl
xchg
sbb
inc
mov
cmpsl
fs
xor
pushl
cwtl
leave
fwait
rcll
push
sbb
aaa
add
pop
mov
repz
sub
fwait
inc
mov
mov
nop
aas
mov
andb
adc
movsl
popa
shrl
loopne
popa
sbb
out
stos
pusha
mov
sbb
mov
enter
inc
scas
icebp
cmpsb
dec
sar
jo
lret
xchg
sti
in
adc
ss
je
aad
jo
into
or
xor
adcl
and
inc
js
mov
out
jle
test
scas
push
cmp
hlt
mov
je
push
dec
mov
popw
mov
sbb
or
sbb
fwait
into
jo
lahf
lret
inc
cmp
lods
lcall
enter
mov
mov
push
xchg
int
mov
xchg
mov
rclb
mov
and
cmc
lea
dec
inc
mov
cmpl
lret
outsl
inc
cltd
jno
cld
jno
movb
sbb
lds
push
push
mov
xor
inc
adc
out
jecxz
daa
cwtl
int3
daa
test
mov
stos
test
mov
mov
sub
cmp
inc
cwtl
push
fs
bound
jge
inc
pop
je
sub
mov
sub
icebp
push
mov
push
lret
mov
pop
mov
push
cmpsb
loopne
and
add
mov
mov
fsubrs
or
mov
fsubl
lret
sub
jle
mov
and
cmp
dec
xchg
pop
push
rep
loope
push
jne
inc
fwait
lret
iret
mov
mov
pop
shrl
push
mov
imull
push
add
push
lfs
mov
adc
jle
dec
daa
nop
sub
mov
cmp
sbb
push
sub
jae
pop
adc
or
jecxz
cs
cmp
lret
ret
lcall
xchg
dec
cmp
mov
and
cltd
sarl
lea
daa
xor
out
cmp
push
sub
xlat
incb
add
mov
scas
pop
lahf
andb
popf
mov
xor
cmp
pop
lods
and
lret
lods
fstp
push
mov
repnz
test
mov
cmp
in
popf
inc
jbe
or
xchg
loop
jp
loope
mov
nop
xor
outsb
dec
aad
push
inc
push
fnstenv
fmuls
dec
mov
add
cwtl
cld
pop
je
mov
leave
inc
ss
in
and
pop
and
sbb
mov
test
push
jno
push
cmp
lea
adc
fnstenv
sub
je
mov
mov
aaa
push
push
add
push
shlb
hlt
pop
jmp
pushf
push
push
mov
mov
pop
adc
lret
fcoml
mov
rorw
lret
xor
or
push
mov
mov
xchg
add
xor
lret
imul
jle
inc
pushf
daa
adc
lds
negl
lods
fcomp
dec
pop
inc
movsl
xor
lds
hlt
test
repz
iret
aaa
push
jo
rolb
fs
addr16
inc
dec
fisttps
push
xchg
xchg
mov
pop
push
enter
sub
xor
pop
bound
out
cmc
mov
addr16
pop
loope
inc
mov
mov
mov
rol
mov
movsl
je
hlt
push
mov
mov
fidivs
into
mov
or
jae
jecxz
imul
sbb
or
daa
dec
jmp
cltd
mov
push
adc
movsl
or
xchg
xchg
pop
cmp
fimuls
xchg
data16
sub
push
popf
inc
pop
test
imul
popa
clc
outsb
push
not
sub
sub
movsl
jmp
insb
jge
pop
dec
cwtl
sbb
std
and
xchg
push
mov
shr
bound
mov
insl
and
out
cmp
add
sbb
and
data16
push
shrl
jne
adc
pusha
xchg
adc
loope
xchg
fmuls
std
add
outsl
fnsave
in
jne
and
xchg
cs
sbbl
dec
jg
xchg
out
int3
loop
mov
mov
xor
sbb
mov
aas
popf
mov
xchg
pusha
lock
pop
lcall
je
repz
push
xchg
xor
gs
mov
jns
fistl
lret
or
push
cli
lret
cmp
rorb
fsts
and
stos
movsl
sub
test
fnstsw
inc
push
jle
stos
mov
mov
nop
jp
jae
dec
xor
cs
outsl
or
incl
xchg
out
cli
in
mov
and
and
jle
mov
movsl
hlt
scas
jo
loop
jmp
push
cmp
std
xlat
jl
cmp
cmc
ja,pt
inc
xchg
cmp
loopne
dec
sti
xchg
inc
test
aas
repz
add
movsb
xchg
enter
in
test
dec
xchg
adc
js
inc
cmp
sub
js
inc
mov
fwait
jle
lret
clc
ja
in
jns
mov
incl
data16
jg
movsl
bound
stos
pop
loop
adc
sub
shr
cmp
adc
movsl
xor
cwtl
xor
daa
das
mov
jmp
push
xor
test
mov
cmp
test
std
clc
adc
adc
xchg
stc
xor
outsl
ja
cmp
mov
pusha
sub
dec
fwait
push
popf
sub
lahf
cmp
mov
test
sahf
mov
lahf
ja
das
mov
je
xlat
xchg
sti
add
sbb
xchg
sub
xchg
add
cmp
outsl
mov
test
cmp
jbe
xchg
adcl
cmc
nop
jbe
xlat
sub
push
mov
ljmp
imul
push
jae
sbb
mov
test
pop
sbb
int3
jp
xor
lds
push
je
cmp
xchg
test
and
pop
pusha
adc
add
scas
pushf
sbb
jo
mov
enter
cmp
pop
test
xor
js
les
and
xor
es
mov
push
xchg
mov
jbe
daa
xchg
and
sbb
mov
sbb
mov
mov
xchg
notb
aas
test
fildll
pop
push
mov
js
mov
in
mov
outsb
mov
inc
jne
lret
ret
add
push
cmp
sub
adc
xor
sub
leave
push
adc
fstpl
fnstcw
xor
mov
push
fistpll
sbb
or
xor
and
pop
sbb
test
mov
and
jmp
pop
movl
aaa
ja
cwtl
mov
imul
add
or
jns
add
adc
pusha
movb
jmp
jge
sbbl
pop
test
in
hlt
pop
roll
ret
xor
loope
dec
jge
ret
in
mov
es
lock
or
cld
sti
icebp
lods
xchg
pusha
mull
rcrb
cmpsb
scas
add
jle
sub
cli
loop
xor
insl
arpl
mov
outsb
adc
insb
dec
fwait
jns
out
and
cmpsb
inc
add
rorb
push
call
cmp
stc
orb
mov
pop
push
in
cmp
fs
mov
aad
mov
enter
inc
dec
sbb
and
jbe
push
push
mull
push
imul
mov
shlb
and
shll
cmpsl
movsb
sub
nop
ret
inc
aad
mov
je
push
inc
xor
mov
sub
push
xor
hlt
fcmovnbe
mov
push
in
idivb
popf
in
test
inc
loope
adc
roll
jns
add
scas
push
xchg
push
cmp
xchg
xchg
adc
insb
leave
aad
jbe
jnp
rorb
pusha
push
mov
mov
pop
ss
pop
movsl
xor
shrl
call
or
or
and
jle
inc
aad
gs
mov
jae
lea
ret
or
sti
loopne
mov
xchg
ret
add
pusha
daa
shlb
arpl
hlt
xchg
loop
mov
xchg
and
pop
stos
in
sub
dec
push
mov
ret
out
scas
xchg
mov
dec
cwtl
icebp
enter
push
fnstcw
test
pop
sti
and
jno
fiaddl
sti
mov
out
push
movsl
cmp
adcl
out
mov
int
lds
fs
pop
les
sub
mov
xchg
dec
outsl
sub
sub
cs
jno
outsl
test
jbe
notb
add
fiadds
sub
pusha
jo
orb
in
ficoms
in
or
imul
pop
xchg
add
sub
faddl
mov
sbb
test
jnp
jae
jecxz
push
fistpll
iret
sti
jns
cmp
xchg
push
fistpll
pop
fisubrs
std
inc
mov
cltd
push
pushf
xor
bound
arpl
out
ret
mov
jns
sub
cmpsb
icebp
insb
repnz
cmp
sahf
jno
scas
adc
ja
pop
pop
pop
lcall
add
rorl
call
mov
cmp
jno
xchg
ja
push
ja
mov
cmp
or
xor
test
sub
ret
cli
icebp
jae
push
or
mov
pop
pop
or
fld
dec
fidivl
add
clc
rclb
jo
sarl
lret
int3
mov
pop
mov
xchg
cmpsb
enter
pop
mov
into
daa
pop
fwait
xor
xchg
inc
sbb
inc
sbb
xor
mov
push
mov
aas
lret
divb
outsb
rorb
push
fucomip
dec
mov
cmpl
sub
add
cvtps2pd
and
mov
fnsave
xchg
fwait
sub
lea
push
enter
fcomps
loop
pop
cltd
mov
cmp
aam
or
daa
ja
jl
jp
inc
add
ja
mov
lahf
scas
std
rcll
xor
aas
inc
or
movsb
loop
jl
jg
dec
inc
cltd
lcall
mov
test
leave
mov
std
into
aas
js
sub
jge
fs
mov
dec
fucom
and
cmpsl
jl
or
mov
dec
dec
adcb
xor
daa
jmp
lcall
outsb
xor
clc
popa
xchg
push
sbb
repnz
out
repz
sbb
jne
iret
bnd
orb
cwtl
xlat
ror
outsb
fs
in
sub
sti
xlat
dec
jg
shr
xor
outsl
loopne
stos
and
loop
jae
test
adc
sub
sbb
ficompl
mov
jb
sbb
push
ss
sub
and
push
sub
and
or
mov
test
iret
xor
add
jle
push
push
xor
push
inc
jbe
fnstenv
fwait
call
out
sbb
jg
pop
andl
std
cmc
add
mov
adc
mov
sbb
pop
fcmove
ljmp
mov
push
inc
adc
orl
icebp
xchg
ljmp
mov
mov
lock
mov
mov
mov
loope
dec
push
add
jmp
adc
shll
mov
mov
pop
sub
lret
xor
pop
push
sub
stos
push
mov
dec
or
cld
popa
test
fdivrl
push
xchg
push
and
pop
push
xchg
out
or
cmp
mov
push
stos
xchg
insl
sbb
scas
and
xor
and
insb
shll
jbe
sbb
lods
dec
hlt
inc
adc
shlb
imul
sti
and
and
mov
push
stos
movsl
enter
adc
xorl
and
fists
dec
ss
test
jp
and
xor
sbb
mov
xor
sbb
scas
or
fisubrl
mov
pushf
cli
jo
or
pop
cmc
lret
out
xor
pop
push
xchg
pop
push
pop
aas
mov
pop
rcrb
mov
test
loopne
pop
pop
push
mov
lret
jecxz
in
jle,pn
jbe
sbb
push
sub
or
dec
bound
es
outsb
jecxz
loop
or
cmpsl
leave
pop
mov
xchg
cmp
jge
es
les
arpl
lods
test
sbb
inc
aaa
jmp
fisttpl
cmp
pop
das
or
nop
loop
dec
jno
scas
push
outsl
scas
adc
popa
xchg
iret
cmc
es
sub
roll
cltd
add
leave
fs
pop
outsl
clc
add
leave
and
mov
mov
out
lock
push
push
add
pop
lea
fimuls
shl
lret
pop
popf
dec
sub
xchg
shlb
mov
and
addr16
in
out
cld
pop
push
test
sbb
lcall
pop
mov
adc
nop
mov
mov
push
inc
fstpt
out
loop
jo
mov
mov
jge
sub
mov
cwtl
fdecstp
xchg
xorl
sub
into
ret
repz
mov
mov
es
mov
dec
and
cmp
pop
mov
adc
or
dec
mov
cmp
out
xor
mov
aam
inc
nop
shrl
mov
out
mov
mov
lock
clc
in
lock
xor
and
dec
add
inc
cmp
sbb
xor
imul
sbb
mov
sbb
adc
pop
outsb
dec
aam
call
pop
add
pusha
adc
call
out
xchg
les
and
adc
sub
cltd
push
les
aaa
inc
repz
aas
jecxz
stos
jge
ljmp
nop
xor
inc
cmp
out
fcoms
daa
sbb
mov
fs
lahf
xchg
scas
jl
scas
outsl
inc
adc
rcll
inc
xor
mov
fsubrl
fisttps
dec
cmp
rol
movsb
daa
cmp
je
fstpt
shrb
push
shlb
inc
ficoms
call
jns
data16
push
out
insl
push
outsl
aam
aaa
adc
xchg
test
push
insl
nop
xlat
xchg
mov
andl
push
inc
pop
inc
ds
rclb
out
jne
sub
inc
lods
ds
cmp
testb
movsl
push
movsl
and
cmp
lahf
orb
pop
shl
mov
jns
or
mov
cmp
jmp
es
out
dec
jg
data16
jle
mov
jmp
imul
or
pop
mov
js
aas
cmp
dec
mov
sub
sar
push
pop
pop
in
aas
ret
aad
sub
sahf
fnstcw
xchg
arpl
jb
aaa
fdivr
xlat
loopne
pop
je
adc
sub
add
sub
add
adc
mov
cltd
push
push
inc
sub
push
jno
xchg
mov
cmpsl
xchg
sarl
cltd
mov
sub
fildll
mov
ss
cmp
xchg
out
arpl
pop
push
insb
inc
cli
movntq
jno
mov
adc
push
mov
dec
rcr
bnd
mov
mov
movsl
enter
xchg
test
jmp
repz
sub
call
ss
sahf
pop
adc
cmp
in
int
lods
fidivrl
stc
mov
push
popa
out
movsb
and
jns
loopne
insl
loop
or
test
das
into
sub
repnz
imul
dec
lock
mov
xchg
fmuls
cmp
sbb
cld
push
mov
dec
xchg
inc
lret
push
imul
add
cltd
loope
push
nop
jp
sbb
mov
into
sbb
jl
insb
sbb
xor
push
jl
dec
psubw
pop
les
push
ljmp
jne
dec
sbb
fdivp
push
cwtl
call
scas
movl
sub
xor
sub
in
mov
mov
xchg
cld
inc
test
jp
movsb
dec
xchg
and
test
rcl
sub
mov
or
or
leave
lock
inc
add
stc
pusha
push
sbb
inc
ljmp
inc
fldcw
loope
push
ja
jnp
in
push
mov
inc
adc
rclb
dec
pop
push
sbb
bound
stc
xor
xor
mov
push
sti
mov
fld
ss
stos
add
fistps
cmp
sub
or
call
xor
jnp
mov
pop
ja
pop
dec
and
cltd
std
or
int
fstps
in
dec
cmpsb
pop
inc
stos
mov
pusha
ret
sbb
dec
imul
mov
sbb
fsubl
fwait
arpl
pop
punpcklbw
jbe
aam
xchg
mov
mov
rcrl
mov
jg
data16
call
jg
jo
add
je
pop
pushf
push
xor
lret
fnstsw
inc
lahf
dec
jle
push
fsubs
nop
mov
xor
and
inc
movsl
sahf
sbb
test
and
scas
xor
push
and
adc
js
bound
xchg
fcompl
cmp
dec
pop
cltd
test
fnstenv
inc
jmp
push
sbb
ljmp
xchg
push
pop
or
movhps
dec
xchg
adc
cmp
xchg
xchg
xchg
add
lcall
mov
mov
mov
stos
test
insl
test
jnp
push
ds
and
pop
aas
add
xchg
mov
inc
mov
fbld
inc
adc
xchg
jbe
ds
jno
mov
fwait
daa
ret
sub
sub
cmp
cmpl
clc
pop
and
sub
sub
sub
fisubl
scas
and
enter
mov
mov
push
in
scas
test
mov
mov
nop
fsub
push
ljmp
inc
leave
dec
aam
jmp
and
or
mov
insl
or
cmc
rolb
mov
mov
jne
push
dec
jg
mov
cmp
and
add
out
mov
or
and
pcmpeqb
dec
adc
lock
pop
dec
hlt
lods
scas
push
cmpsb
jbe
inc
aas
mov
pop
fnsave
sub
pop
jecxz
fucomip
ds
xchg
js
int
inc
ja
in
ds
les
fdivp
cmp
flds
xchg
sub
pop
std
jg
mov
cmp
and
jecxz
loope
repz
inc
push
mov
dec
test
push
or
adc
mov
push
xor
aaa
sub
adc
jbe
mov
xor
sub
ficoml
jg
mov
gs
loope
and
inc
scas
push
nop
stos
testl
mov
push
popa
mov
insb
lret
add
inc
shlb
fidivl
shlb
loop
dec
aam
adc
jo
insb
or
movsb
jecxz
mov
sub
xor
or
fs
push
cmp
orb
es
inc
aaa
mov
or
insl
dec
loopne
insb
push
xchg
mov
or
in
imul
loopne
hlt
mov
or
sub
aas
out
push
dec
sbb
int3
jbe
testl
les
jp
jge
and
xchg
adc
mov
aad
xlat
add
pushf
icebp
fimuls
sub
popa
mov
call
inc
jbe
xor
adc
jno
cmc
bound
lock
pop
cmp
incb
add
sar
dec
cmp
loop
bound
sbb
xor
cli
push
mov
dec
mov
xor
dec
push
and
inc
scas
imul
rcrl
pop
cmp
movsb
filds
shll
js
cwtl
inc
mov
mov
aas
pop
mov
mov
sahf
adc
repz
inc
sbb
inc
repz
stc
test
stos
xlat
sub
push
sub
sub
jae
add
je
pop
pop
inc
push
sbb
lds
shlb
xor
inc
dec
repnz
adc
pop
pop
movsl
fadds
das
subb
inc
out
push
sahf
cltd
xchg
movsb
dec
dec
and
xchg
push
pminsw
mov
adc
mov
into
ja
or
ret
inc
or
ret
iret
shll
mov
outsb
jae
mov
nop
mov
xor
js
ret
call
shrl
fdivl
sbb
or
cld
xchg
sub
cs
aam
add
test
pop
adc
arpl
repnz
popf
fstl
mov
jns
lret
ljmp
pop
add
and
adc
cmc
xchg
gs
xchg
stos
push
lret
pop
es
loope
nop
sub
out
aaa
addr16
mov
sbb
add
cmpsl
pushfw
pop
lret
cltd
cmp
repnz
cmpsl
repz
sbb
push
mov
jmp
daa
jne
jmp
adc
mov
jb
pop
fnsave
ss
icebp
and
mov
ret
movsl
shr
daa
daa
adc
cmp
aad
arpl
test
cmp
cmp
cmp
mov
add
jmp
jb
repnz
add
insl
push
jmp
ss
pop
push
and
push
adc
pushf
push
add
jmp
sub
gs
roll
or
lahf
popf
outsb
popa
pop
push
stos
push
xchg
lahf
nop
inc
fsubp
cmp
jecxz
lahf
and
mov
lret
jg
mov
sbb
je
add
rcrb
arpl
mov
xlat
leave
xchg
add
adc
ljmp
sub
cmp
fcomps
dec
mov
push
adc
sbb
rolb
push
jns
cmp
in
pop
fdivs
cs
shll
popf
ss
mov
mov
push
mov
inc
add
inc
movsb
das
imul
sub
rclb
ds
scas
cmp
mov
sub
ss
adc
adc
es
fidivs
inc
ret
lret
icebp
shll
dec
add
cmp
loope
push
push
push
scas
mov
ja
inc
and
cmp
popa
push
fidivrs
sbb
stos
sbb
ja
rolb
test
xor
fistpll
stc
mov
mov
sbb
jecxz
fs
cmp
imul
pop
mov
and
clc
scas
dec
push
into
repnz
in
jle
std
push
dec
fnstenv
mov
flds
js
test
mov
mov
or
mov
lock
les
adc
test
add
iret
std
pushf
push
and
jb
insb
jae
incl
jne
pop
and
lds
adcl
fsubs
ret
inc
pop
stos
into
adc
mov
or
adc
xchg
inc
jmp
ss
fidivs
fstpt
jns
inc
or
push
push
rorl
push
dec
pushf
mov
stos
cmp
iret
push
shlb
xchg
pop
rcrl
cltd
sbb
xchg
fimull
cmpsl
sarb
outsb
clc
aas
mov
xchg
mov
jge
lock
cwtl
adc
cmp
sti
fisubrl
cmpl
xor
xor
test
mov
es
add
or
and
shufps
ja
push
sub
jle
jns
ficoms
mov
inc
dec
int3
pop
pop
outsl
pop
push
fnstcw
push
push
push
xchg
adc
adc
inc
xor
sbb
lods
call
inc
xchg
bound
or
lock
dec
and
enter
xchg
iret
bound
xlat
lcall
sbb
jo
jns
push
loopne
push
lahf
out
push
sti
sbb
in
neg
in
dec
cmp
sub
xor
adc
jae
scas
movsl
shlb
imul
scas
pop
push
sub
rorl
adcb
push
cmp
imul
mov
in
hlt
lcall
fdivrl
out
xchg
js
pop
test
daa
ja
dec
bound
inc
lods
push
popf
test
jl
insl
and
cmp
dec
push
mov
iret
lcall
and
pusha
jns
and
cmp
out
mov
jo
xor
je
or
ret
push
lahf
scas
into
xchg
xchg
mov
push
xorl
or
daa
stos
mov
pop
dec
dec
mov
push
push
cmp
ds
xchg
inc
add
aam
dec
add
jmp
mov
ss
dec
push
imul
push
imul
add
jle
sub
dec
push
xchg
loope
sarb
fidivrs
and
adc
add
out
inc
cmp
nop
std
adc
sub
stc
jbe
mov
xchg
ja
imul
adc
pusha
roll
movsb
insb
inc
rcl
cmc
sbb
xor
mov
xchg
mov
sbb
data16
adc
xchg
jb
sbb
jae
aad
movsl
or
mov
lock
push
or
pop
out
filds
outsb
add
popa
xchg
in
sbb
sarb
dec
push
inc
or
aam
stos
add
and
fisubrs
les
nop
aad
orb
fists
aam
test
clc
dec
ds
lods
cmpsb
cld
push
sbb
and
inc
xchg
dec
sbb
xchg
and
cwtl
lret
aas
pop
cwtl
icebp
jns
lock
clc
mov
fs
add
clc
mov
das
rsqrtps
push
jae
mov
je
mov
cmp
sub
or
or
shld
fcmove
loop
mov
cld
cvtdq2ps
fwait
ror
push
and
into
jne
sbb
jg
loop
push
inc
or
mov
repz
pop
fwait
daa
iret
popa
test
jae
mov
daa
jmp
data16
xorl
and
jbe
and
sahf
cmc
std
push
ret
popa
fadd
popa
xor
lahf
cmp
or
jle
pop
dec
xor
arpl
test
aad
aad
in
leave
adc
mov
arpl
push
loope
xorb
aas
test
or
test
mov
loopne
nop
xor
sbb
adc
cltd
sarl
mov
loope
imul
aaa
or
adc
adc
sbb
loop
adc
xor
adc
xlat
shrb
xorl
xchg
add
or
xlat
fucomp
jp
fnsave
insl
repz
push
into
rcpps
loope
shrl
jmp
and
pushf
sbb
mov
ljmp
inc
push
pushf
imul
add
push
sub
lock
xor
ds
cmp
outsl
rorb
cmp
pop
jmp
fnstsw
stos
shrl
inc
in
outsb
pop
in
ret
push
mov
or
pop
add
pop
sub
aad
popf
adc
mov
ds
sar
fistpl
push
lret
push
mov
jbe
push
or
pushf
repz
fisubl
jmp
lods
jns
mov
pop
leave
dec
sbb
hlt
sbb
cwtl
pop
insl
dec
push
pop
inc
cmp
ds
mov
or
enter
fcompl
fildl
inc
data16
ja
loopne
push
inc
jno
pop
dec
insb
lds
cmp
and
mov
je
push
push
or
ljmp
pusha
dec
xchg
add
dec
and
and
push
xchg
scas
das
rolb
roll
leave
ss
pop
loop
lds
popa
negb
xorb
adc
dec
adc
pop
sbb
jnp
hlt
add
dec
mov
pusha
mov
dec
int3
mov
mov
sbb
push
cmpsl
mov
mov
adc
add
test
xor
outsl
dec
or
jl
lcall
dec
idivl
out
jne
sbb
push
ja
mov
inc
jb
lret
lods
dec
push
xor
test
push
insb
ret
es
iret
pop
mov
cmp
aas
inc
loope
lahf
out
pop
sub
fidivrs
xor
pop
lret
fiaddl
lret
icebp
push
adc
jle
dec
mov
loope
inc
add
xlat
scas
ret
sub
cmp
and
mov
stos
repnz
mov
xchg
jl
mov
enter
lea
call
out
jbe
push
pop
lahf
test
fsubp
nop
fisttpl
mov
ja
mov
loope
push
inc
mov
lret
iret
dec
daa
cmc
test
shrb
orb
sub
xor
and
lret
push
mov
jns
mov
jae
lods
les
adc
jl
sbb
in
jb
mov
fdivl
cmp
int3
repnz
in
adc
loop
shr
pop
jmp
jno
sbb
out
or
nop
repz
mov
xchg
adc
adc
push
xor
leave
jnp
pop
push
aad
popf
test
add
jmp
xchg
mov
and
out
out
pop
adc
dec
subb
xchg
sbbb
rcr
cli
xchg
fwait
fwait
ret
sbb
xlat
xor
orl
and
mov
sbb
jo
dec
test
ret
pusha
xor
movsb
imul
mov
cmp
jl
ss
popa
subb
mov
pushf
lahf
mov
push
ret
aaa
lds
inc
mov
loop
out
xchg
mov
pop
hlt
fcomip
cmpsl
stc
adc
fsubs
add
push
data16
inc
rcr
pop
mov
push
lret
push
mov
xlat
mov
add
jle
xchg
test
jne
sub
movsl
fdiv
lods
xor
inc
insl
gs
push
cmpsb
aas
cmp
add
add
xchg
inc
lods
bound
fdivrs
pop
lods
rorb
test
xor
or
and
push
xchg
jg
loope
push
loope
repz
aad
int3
push
pop
xchg
mov
addr16
rorb
push
xchg
rcll
lods
lds
pop
push
movsb
pusha
mov
fldcw
add
ror
and
mov
push
inc
and
inc
aaa
iret
insb
mov
cmp
shr
rolb
cmp
push
fmulp
pop
push
roll
sub
and
and
pop
pop
cmp
pop
clc
push
jge
mov
jle
jecxz
int
mov
cmpsl
xor
sub
mov
andb
push
out
movsb
sub
push
rorl
inc
dec
das
mov
pop
jg
sti
xchg
popf
sub
out
xlat
gs
in
and
roll
ret
shl
inc
and
xor
test
push
stos
and
mov
cli
sub
loopne
add
scas
sbb
jno
lahf
mov
ds
mov
stc
push
push
push
sahf
jecxz
xchg
push
dec
push
mov
test
testl
or
scas
outsb
sub
or
pop
test
jbe
lret
mov
nop
mov
mov
xchg
loopne
mov
jno
adc
addr16
decl
adc
lock
xor
test
push
sub
iret
fimuls
addr16
lahf
or
cmp
adc
pushf
push
sub
sbb
pop
pop
int3
sbb
cmp
push
insl
sbb
mov
jle
xchg
or
lcall
push
inc
jne
mov
es
iret
mov
mov
rcrb
fldt
mov
fldcw
lret
xchg
ds
sbb
ret
mov
jp
xor
push
inc
mov
push
or
xor
push
cmpsl
push
clc
int3
decb
cld
loop
out
or
je
les
stc
call
jg
hlt
xor
push
test
mov
cwtl
push
cmpsl
xchg
xchg
popf
clc
xor
add
cli
dec
sub
rcrb
cwtl
xchg
fcoms
cmp
sbb
adc
push
inc
js
les
rolb
inc
mov
stc
jae
int
movsl
jle
xor
ret
bound
mov
movsb
adc
arpl
ljmp
lret
jmp
cmp
into
jl
ss
movsl
sarb
sub
jo
popf
lods
mov
sub
and
call
push
mov
pop
jl
mov
dec
in
aad
mov
jge
inc
cmp
outsb
fwait
rorb
shrl
dec
pop
push
jne
or
adc
je
sub
cmp
loopne
mov
pop
aas
sti
fs
pushf
mov
jbe
out
loopne
test
sti
fiaddl
call
sbb
cmp
mov
les
pop
cmp
sti
mov
lods
mov
pop
or
pop
or
or
adc
push
lock
aad
add
mov
pusha
in
or
adc
iret
lods
xchg
xlat
test
fwait
dec
adc
pop
sarl
adc
mov
ja
out
push
call
in
stc
add
push
sub
stc
xor
subl
mov
xchg
mov
cmp
dec
outsb
adcl
stc
fsqrt
in
jg
add
int
adc
cmpsb
int3
inc
push
mov
push
in
iret
inc
shlb
pop
stos
adc
icebp
das
or
mov
loop
mov
pop
cmp
jbe
add
rcll
gs
ss
xchg
cmp
andl
adc
jo
call
mov
pop
and
in
cmp
mov
test
popf
jg
ret
std
call
jb
aaa
repnz
sbb
rorl
lods
insb
cmpsl
jl
jp
sbb
jae
or
pop
lahf
dec
mov
xor
mov
out
movsl
fisubl
mov
sub
inc
mov
push
push
out
ja
sbb
pusha
popa
adc
aas
test
jmp
pop
repz
repz
mov
cmpsb
aam
sub
out
inc
fidivl
movl
es
mov
xchg
cld
cs
movsb
xchg
xchg
out
lcall
push
push
pop
lods
repnz
scas
push
xchg
lods
xchg
xor
and
xchg
mov
push
nop
in
faddl
inc
in
add
jle
loop
fcmovne
aam
pusha
lds
mov
mov
movsb
repnz
out
in
xlat
pusha
ret
adc
xor
dec
insb
stos
movsb
inc
adc
jno
adc
bound
popf
subl
inc
mov
inc
in
mov
rorb
add
jnp
xlat
ja
xchg
adc
repnz
inc
pop
incb
pop
ret
mov
les
mov
and
clc
mov
jae
jnp
or
xlat
repz
lds
lahf
mov
mov
je
push
rcrl
fnstenv
sahf
fcmovbe
pop
in
mov
adc
xlat
mov
pop
pushf
cmp
add
jno
dec
rclb
xorl
fcoms
sub
rclb
jo
xor
loope
mov
ljmp
stos
lea
fists
jp
lret
xor
dec
adc
fisttpll
mov
scas
aad
mov
movsl
fstp
adc
sbb
cmpsl
xlat
lcall
lcall
iret
enter
mov
adc
mov
lods
aam
gs
pop
mov
iret
xchg
fs
sub
inc
sub
push
dec
adc
push
int
jns
sub
sub
mov
aaa
cli
sub
xchg
pusha
mov
adc
push
cmp
or
dec
xor
pop
cmp
push
out
rorl
adc
popf
cmc
inc
dec
test
and
daa
stos
lahf
xlat
cmp
outsb
lods
sbb
fdivp
sub
lock
fsts
dec
dec
jnp
outsl
lea
jne
push
push
jb
test
outsl
pushf
xor
loopne
icebp
leave
pop
jp
cmc
pop
adc
aas
cmp
xor
dec
rcll
std
mov
ja
push
jno
push
mov
bound
scas
cmpsl
dec
sub
push
test
leave
dec
add
roll
lret
fxam
dec
mov
and
push
hlt
aam
loop
sub
int
mov
sahf
push
inc
and
nop
iret
dec
addl
add
cmp
movsl
cmp
pop
dec
nop
cmc
adc
cmpb
ror
push
xlat
cld
push
sahf
fnstcw
aam
int
insb
push
or
add
mulb
ljmp
add
subb
jb
cwtl
out
cli
mov
sbb
add
cltd
in
add
xchg
sub
xchg
jg
xor
cli
cmp
ss
in
pop
ficomps
xchg
fisttpl
popa
push
scas
cmp
adc
inc
lahf
cwtl
pop
insl
and
repnz
mov
andb
and
inc
add
data16
shlb
aam
add
push
movsl
insl
imul
jmp
imul
xchg
push
mov
xor
fcompl
pushf
out
dec
push
xor
test
out
inc
stc
sti
push
mov
mov
lret
mov
and
or
inc
test
mov
int3
mov
das
and
mov
xchg
lcall
mov
fimull
in
xchg
into
pusha
inc
adc
ss
lods
out
jle
orb
jmp
add
rcll
lea
cmc
xor
jnp
shll
xchg
movsb
mov
mov
ja
ja
mov
in
loopne
adc
fs
and
scas
cs
fs
adc
testl
test
dec
sbb
xchg
push
push
jg
mov
testb
in
iret
sti
adc
mov
adc
push
mov
pop
nop
push
leave
mov
repz
mov
cltd
cmp
cwtl
in
ret
mov
mov
pop
das
jmp
or
mov
push
hlt
vcvttsd2si
push
in
into
push
bound
aas
pop
inc
pop
nop
and
push
cli
fwait
shlb
shl
xchg
push
das
test
mov
scas
sbb
aaa
test
mov
dec
rcll
push
jle
repz
lods
mov
stc
mov
in
arpl
cmpsb
mov
stc
out
dec
test
daa
pop
xchg
je
js
rolb
in
sti
or
xchg
push
imul
test
dec
cs
xchg
adc
pop
jb
data16
fwait
or
mov
add
pop
jle
pop
sbb
pushf
jl
movsl
push
xchg
pop
leave
mov
sti
add
jmp
hlt
test
sub
lods
mov
fnsave
fwait
push
cli
sub
test
int3
push
mov
mov
int
ss
add
mov
daa
or
jmp
sahf
push
fwait
rolb
dec
stos
insb
int3
cmpsl
inc
adc
sti
xor
loopne
movsb
subl
iret
scas
nop
sbb
and
sub
cld
mov
push
sbb
push
aad
inc
xor
outsl
into
negl
add
aad
and
mov
daa
aas
cs
test
inc
dec
clc
xchg
jb
paddusb
das
jae
int3
push
push
sbb
div
jge
push
insb
push
cs
data16
and
fcoms
mov
nop
or
xchg
mov
dec
icebp
std
lahf
stos
in
mov
cltd
lock
sub
stos
jne
inc
sub
loope
and
and
dec
or
and
dec
add
fmuls
test
ljmp
jae
test
xchg
mov
adc
and
out
dec
sahf
adc
sbb
pop
fdiv
outsb
inc
and
sbb
cwtl
mov
mov
out
in
test
inc
call
pop
sbb
loopne
push
adc
inc
sub
sub
fcomip
inc
mov
addr16
jbe
push
sub
jns
rcrb
pop
cltd
dec
adcb
andb
inc
adc
stc
rorl
xor
cmpb
jns
dec
sub
inc
add
popa
or
inc
pop
dec
mov
jg
hlt
in
loopne
es
ret
push
repz
test
or
lock
mov
sbb
aas
sbb
daa
popf
sbb
xchg
popa
dec
out
int3
repnz
roll
push
stc
enter
mov
push
mov
xchg
outsb
xor
mov
cwtl
or
mov
xchg
add
inc
andl
jb
sub
ss
inc
cwtl
cmp
or
adc
loope
bound
rolb
ret
jle
xchg
cmpl
pop
add
out
inc
xchg
pop
neg
cmpsb
sarl
std
xor
into
dec
cmpsb
scas
mov
cmp
stos
pop
sahf
push
orl
xor
sub
dec
dec
sub
leave
add
xchg
inc
and
out
push
imul
test
mov
pop
and
scas
aas
sbb
add
clc
ja
mov
insb
sub
gs
sbb
jp
push
insl
xchg
jo
sarb
add
dec
and
dec
enter
pop
cmp
addr16
das
out
sbbb
lods
mov
mov
bound
icebp
fs
js
popa
fldt
pop
cli
rolb
mov
mov
dec
int3
push
cmp
jae
scas
out
lds
insl
push
mov
pop
sbb
ljmp
lods
icebp
mov
int
in
ret
lea
add
push
lcall
and
mov
js
daa
lods
add
mov
adc
es
push
mov
cld
repz
jmp
lret
popa
rolb
fcompl
das
cmp
lahf
pusha
fsubrs
pop
dec
pushf
into
jb
cmp
inc
or
into
outsb
outsl
cltd
aam
sbb
addr16
inc
aad
adc
fdiv
mov
add
shl
adc
add
mov
jmp
cli
xor
rcrl
je
imul
jl
sbb
push
ret
sbb
adc
cmpsl
imul
adc
outsl
xchg
mov
dec
xor
add
cld
adc
fisttps
or
faddl
cmc
test
dec
sub
cld
enter
nop
xchg
mov
in
dec
shr
mov
push
ljmp
popa
ss
add
and
outsb
xlat
int3
cmp
push
add
and
std
lret
xchg
xchg
lahf
add
lods
sbb
add
insl
mov
in
gs
in
sub
sbb
les
fwait
bound
divl
pop
inc
filds
cmp
push
mov
fdivrl
push
dec
in
test
int
jge
cmpsl
mov
aad
dec
in
xor
filds
lahf
pop
push
lea
repnz
stos
xor
hlt
insb
ljmp
mov
push
int
add
or
mov
pop
repnz
add
cmp
push
pop
bound
rcl
out
dec
pusha
mov
and
data16
jnp
inc
out
cwtl
aas
add
sbb
cmp
mov
bound
jo
jne
loop
dec
sbb
and
push
cmp
negl
js
mov
or
shl
pop
les
lret
add
out
ljmp
sub
mov
fwait
sbb
add
add
xchg
mov
icebp
push
jnp
cwtl
repnz
data16
fwait
pop
xor
cmpl
add
pop
ljmp
jae
inc
dec
xchg
xchg
or
divb
aad
xorl
pop
into
add
pop
outsb
pop
aad
cmp
popf
imul
imul
or
in
fisubrs
inc
cmpsl
ret
pop
js
inc
lock
sub
dec
out
and
inc
jecxz
mov
lea
outsl
out
lret
push
cmpsb
cmp
or
push
pop
scas
repnz
ljmp
jae
into
inc
ja
pop
cld
cmp
popf
lcall
mov
fldenv
shlb
popf
sbb
fwait
icebp
jmp
add
clc
sub
aas
test
push
and
jns
imul
lock
std
jne
push
xor
jl
adc
in
aam
loope
cmp
push
adc
ljmp
test
ficompl
jnp
fldt
faddl
jg
js
sti
loopne
cli
add
cld
mov
pop
idiv
sub
or
cmpsl
aam
or
enter
dec
push
or
pmaxsw
cld
inc
in
or
mov
out
jp
outsl
movsb
es
gs
fwait
or
pop
scas
dec
in
xchg
mov
mov
dec
dec
ljmp
mov
lods
stos
loope
lods
jmp
and
lret
mov
mov
inc
insb
add
or
pop
mov
adc
add
add
addl
les
and
pop
ret
outsb
push
cld
into
loope
add
sbbb
pusha
ret
ljmp
lret
rclb
repz
add
xchg
jb
imul
jnp
movsb
cmpsb
push
mov
inc
jle
stc
loopne
add
imul
mov
mov
push
lcall
xchg
push
cmp
jmp
jecxz
mov
jmp
fmuls
rorl
mov
das
sar
jge
repnz
dec
adc
pop
mov
jb
pop
push
adc
push
das
outsl
loopne
cmp
mov
cld
dec
nop
or
inc
pop
loop
jne
movsl
mov
js
ret
pop
mov
jae
add
call
xorb
mov
inc
xor
xchg
js
jae
push
jl
push
xchg
test
pop
scas
sub
shl
mov
sub
mov
mov
add
leave
mov
push
arpl
mov
mov
test
mov
loope
adc
mulb
dec
cmp
pop
add
stos
mov
scas
cmp
lcall
mov
xor
daa
mov
cmc
inc
sbb
sub
push
jle
adc
pop
add
mov
shl
cmpsl
cmp
mov
psadbw
insl
lock
sub
out
ss
cmp
xlat
adc
lret
push
lods
sub
enter
dec
outsl
dec
or
push
pop
addb
xor
gs
std
lcall
push
push
cwtl
leave
mov
cltd
dec
sbb
mov
mov
cmp
test
cs
pop
inc
cmp
sar
jl
cmp
aam
xchg
xchg
fidivl
fld
push
repnz
int
outsb
xlat
cmp
bound
pop
mov
aas
push
jne
mov
movsb
cmp
scas
out
stos
jae
jns
dec
sbb
sbb
xchg
aaa
ljmp
adc
loop
lods
dec
nop
mov
inc
pop
inc
mov
xor
les
std
enter
dec
sub
loope
les
adc
dec
pop
cli
shlb
out
pushf
mov
loop
push
enter
push
icebp
inc
cs
dec
sbb
mov
sbb
mov
jmp
add
out
stos
sti
jb
loope
sti
cwtl
mov
adc
jne
lods
mov
adc
mov
adc
pop
cmp
mov
mov
cmp
enter
jmp
xchg
add
lods
mov
divps
sbb
dec
enter
mov
jo,pt
inc
jne
pop
in
push
scas
sar
jp
arpl
xchg
jno
or
adc
jno
mov
add
xchg
scas
mov
mov
ljmp
and
dec
sbb
inc
cmpsb
adc
movsb
push
in
fldz
push
ret
hlt
outsl
sbb
sbb
inc
sub
fsubrs
mov
aas
sub
ljmp
add
dec
xor
mov
jp
or
cmpsl
out
idivl
outsb
das
in
out
xor
aam
dec
add
gs
sahf
adc
mov
jb
xchg
xchg
fsubrp
jmp
jl
ret
into
add
xchg
movsl
inc
mov
mull
xor
adc
aad
and
js
sbb
mov
dec
js
mov
inc
jns
mov
test
push
test
sbb
daa
test
out
fisubl
inc
mov
into
xor
xchg
mov
jne
xor
or
lds
les
sub
call
xchg
cs
dec
movsb
in
sub
lock
jmp
lahf
mov
andl
pop
iret
mov
pop
outsb
sub
lret
add
scas
add
jbe
sub
xor
fdivs
sbb
mov
push
stc
ficoml
mov
stos
add
jo
adc
dec
out
sub
add
addr16
or
ret
test
andl
repz
int
mov
add
mov
div
cmc
sub
rolb
and
aas
scas
pop
mov
fdivl
sub
cltd
fscale
stc
and
xchg
push
lret
mov
mul
shlb
incl
jno
iret
bound
test
adc
addr16
and
in
ja
outsl
hlt
mov
js
push
daa
push
push
mov
out
clc
mov
loope
cmp
or
add
cmp
xchg
js
jle
fcoml
xor
mov
dec
xchg
cmpsl
out
mov
sbb
mov
mov
fsubrs
mov
add
shll
or
mov
pop
movsl
cwtl
ret
dec
dec
aam
jnp
inc
imul
mov
mov
pusha
dec
sbb
xchg
inc
fdiv
jne
xchg
bound
fsub
dec
int3
mov
jge
test
cmp
dec
xchg
test
cmp
pop
mov
stc
gs
xor
adc
scas
xlat
xorl
pop
lret
and
adc
xchg
sbb
inc
xor
ss
xlat
and
sbb
sti
neg
movzbl
jl
add
push
js
faddp
ljmp
mov
loopne
adc
notb
ret
xor
mov
test
lahf
jno
fistpll
lahf
sbb
fldenv
jb
inc
push
scas
lahf
call
cmpsl
mov
push
shr
hlt
cmpsl
out
mov
push
push
sbb
popa
lea
subb
adc
imul
add
and
or
adc
mov
mov
jl
pop
dec
push
xchg
push
int3
ds
sub
aaa
mov
inc
pop
scas
push
push
pushf
leave
mov
cwtl
mov
fdivrp
sub
mov
out
sarl
pop
mulb
sub
and
xorb
shl
adc
test
lock
xor
mov
jno
sbb
ret
pop
push
in
int3
call
into
mov
mov
sub
pop
push
inc
add
lods
fstps
cmp
mov
cmpsb
iret
push
in
icebp
ljmp
mov
cmp
jp
subb
inc
mov
mov
jmp
ljmp
stos
mov
mov
or
mov
in
jl
mov
fdivr
mov
lock
sti
test
push
notl
xchg
push
fdivrl
dec
insl
inc
dec
test
clc
adc
mov
lea
dec
mov
int
inc
js
pushf
repz
rorb
add
mov
adc
je
mov
pop
jmp
lods
jp
movsb
mov
mov
sbb
cmc
mov
fs
js
adcb
icebp
ret
xchg
and
push
mov
pextrw
imul
or
sub
jle
popa
sbb
out
jo
cmp
insb
aad
inc
pop
sub
out
pushf
sub
lock
ret
sahf
adc
in
xchg
in
int
lret
ja
mov
shrb
adc
mov
xchg
cltd
jne
or
add
lret
imul
xor
adc
dec
mull
and
xchg
dec
lahf
clc
js
or
mov
fstp
lea
mov
pushf
mov
arpl
fmuls
adc
jae
pop
inc
in
pop
pop
stos
stos
clc
xorl
sub
cmp
movsl
and
scas
outsl
dec
and
rcrb
daa
lock
sub
mov
add
fldcw
test
test
repnz
mov
xchg
enter
movsl
inc
push
mov
sbb
cmp
cld
sbb
js
repz
test
sub
pop
lahf
popa
cwtl
call
sahf
xor
mov
pop
fisubrs
inc
dec
test
iret
jge
repz
and
lret
mov
mov
pop
cmpsb
inc
jbe
cmp
je
push
mov
lds
repnz
xorb
loopne
into
je
mov
imul
mov
outsl
cmp
loopne
adc
das
sti
or
cmp
and
jo
in
hlt
jbe
enter
daa
and
mov
mov
cmc
xorb
aaa
mov
push
mov
ljmp
cmp
insb
dec
jns
mov
mov
popa
cwtl
jp
leave
xchg
cmc
adc
add
aad
cmpsl
loopne
dec
jg
mov
jecxz
pop
cli
out
dec
test
mov
or
in
pop
adc
lcall
movsb
pusha
xor
or
loope
lret
rorl
xchg
pop
lods
in
and
mov
pop
sti
xchg
mov
push
mov
sbbb
cld
sbb
int
xor
or
sbb
pop
xor
dec
adc
xchg
and
add
jb
data16
xchg
fsubs
mov
cld
sbb
jmp
pop
add
lcall
insb
sbb
push
aad
shrl
sbb
inc
lahf
push
sti
xchg
ret
adc
insl
gs
out
fs
mov
iret
push
out
mov
dec
fiadds
and
mov
rcr
rorl
ficoml
dec
mov
outsl
pop
adc
shrl
fwait
inc
in
adc
rorl
iret
mov
leave
dec
mov
xchg
xchg
popf
adc
xor
cmp
inc
mov
and
cmc
sub
pop
push
fstpl
add
ficoml
imul
and
xchg
mov
or
and
cmp
pop
mov
mov
in
sbb
ret
cli
cltd
lret
sub
mov
mov
sub
sub
in
cld
push
push
lret
pop
mov
dec
aam
cmpsl
mov
pop
lcall
pop
lahf
dec
aaa
sub
xchg
push
xor
sbb
and
jecxz
inc
or
nop
fsubrp
popf
push
adc
outsb
and
loopne
mov
fidivs
cmp
or
xchg
xchg
in
push
stos
mov
jb
sti
lcall
pop
mov
push
imul
or
mov
loop
sub
lret
test
mov
fs
push
mov
mov
imul
push
xchg
xor
xor
xor
lahf
xor
das
push
ficomps
sar
push
sbb
fs
lods
lods
pop
cli
cmp
les
add
or
jge
cmp
add
shl
jecxz
fwait
sbb
fwait
inc
movsb
mov
faddl
push
outsl
dec
mov
subb
sbb
xor
xchg
mov
and
cmp
cwtl
adc
push
xor
jno
andb
and
pop
jmp
sbb
aad
push
loope
lret
jle
outsb
inc
mov
call
push
inc
inc
push
mov
fs
fistps
in
and
adc
int3
int3
arpl
mov
adc
jecxz
sub
daa
pop
mov
adc
sbb
rcr
lods
ss
fucomp
repnz
jno
outsb
pop
xchg
inc
mov
push
pop
fcom
fistpll
add
add
test
cli
or
sbbl
xchg
or
rcrl
fsubrs
or
pop
or
fneni(8087
pop
fdivrs
fisubs
cli
xor
fiaddl
dec
adc
jg
loope
shlb
mov
lock
jmp
mov
adc
shll
xchg
sub
or
rorb
fisttps
insb
clc
insl
xor
sub
rcr
fwait
inc
pop
or
jg
and
mov
aam
sub
pop
sbb
sub
mov
fnsave
frstor
inc
pusha
lea
fsubs
xor
je
or
lret
mov
cwtl
inc
loope
mov
nop
add
add
mov
dec
pushf
shll
repnz
cli
cwtl
in
jle
sahf
push
lret
push
jge
in
sbb
enter
mov
xor
rorb
or
aaa
loope
movsb
xor
fcompl
push
or
addl
popf
fisttps
jecxz
mov
out
cmc
dec
dec
movb
je
xor
and
sbb
daa
cs
sbb
xor
cli
insl
push
cmp
push
or
test
adc
leave
pop
sub
lods
aaa
scas
cmpsb
inc
mov
pop
or
lret
mov
xchg
enter
inc
aad
add
fwait
sbb
popf
inc
cmp
cmc
sbb
or
xchg
push
mov
push
outsl
pop
aam
and
cwtl
lods
ret
fnstsw
pusha
pop
filds
push
mov
iret
cmpsb
out
lea
sbb
pop
call
leave
mov
in
cmovl
sti
dec
jmp
mov
mov
jge
push
hlt
loope
shll
jp
sarl
scas
mov
sti
xor
imul
lahf
les
add
insb
cli
bound
xchg
jne
adc
inc
push
xor
hlt
fimull
sbb
lahf
in
and
jecxz
rclb
jno
sahf
lock
xor
or
xor
icebp
inc
cmp
movsl
nop
sub
mov
int
push
leave
mulb
ret
xchg
je
cltd
icebp
bound
mov
movsb
mov
push
pushf
enter
inc
leave
test
test
sti
jl
pop
lea
inc
lock
sti
push
paddsw
push
mov
out
fisttpll
lds
sbb
pop
sub
jle
cmp
jo
int
inc
push
pushf
jae
xchg
adc
das
inc
mov
inc
mov
sub
imul
jmp
xchg
or
nop
enter
xchg
jg
add
adc
jne
xabort
inc
inc
jbe
shll
inc
push
pop
enter
mov
andb
and
inc
shrb
mov
jp
aas
dec
push
cmp
jmp
cmp
and
out
or
das
add
mov
subb
jo
lret
fisubrl
xchg
xor
cmpsb
sub
and
xlat
jle
jge
adc
test
cmc
dec
in
mov
push
iret
pusha
outsb
xor
inc
pop
sub
mov
jge
xchg
movl
sbb
icebp
loopne
pop
mov
mulb
fcompl
inc
sbb
fiadds
out
sub
push
inc
mov
or
test
nop
das
ret
test
xor
imull
pop
pop
lock
mov
data16
test
jge
int3
andb
mov
cmpsb
sub
imul
adc
mov
mov
or
inc
mov
sbb
or
and
rcrl
pop
dec
pop
mov
ds
fwait
into
jbe
dec
xchg
sbb
lds
pop
add
sbb
add
movsb
je
jl
dec
mov
fimuls
mov
mov
add
mov
push
push
mov
inc
fsubl
xchg
xchg
gs
push
das
test
jo
cmp
pop
in
sub
cs
incl
stc
mov
mov
fs
movb
pop
inc
xchg
aaa
fdivl
leave
mov
jecxz
js
mov
pop
mov
cs
jl
push
dec
and
push
rcrb
test
cmp
enter
cmp
dec
add
les
xchg
int3
repz
mov
clc
jns
mov
nop
fs
sbb
mov
adc
cmp
stos
ds
inc
rsm
sbb
fbstp
jmp
jecxz
adc
mov
rcll
lcall
xchg
cmpsb
xor
ds
xchg
pop
sbb
xlat
and
test
icebp
sbb
scas
pop
inc
cmpsb
nop
inc
nop
cmpsl
addr16
popf
iret
xor
or
fucomp
jecxz
mov
push
leave
dec
int
mov
fdivl
fisttpll
out
sub
or
mov
or
pop
lahf
mov
icebp
test
iret
xchg
mov
lds
jb
pushf
pop
ds
leave
lock
jmp
popa
out
lret
lcall
aas
adc
pop
test
ja
icebp
icebp
mov
arpl
test
and
mov
fisubrs
mov
and
or
lahf
std
ss
and
mov
dec
subl
cmp
lods
inc
movsb
shll
mov
inc
dec
mov
leave
jmp
popa
jp
in
cmp
ret
les
push
pop
hlt
xlat
js
in
out
mov
jmp
or
and
dec
repnz
push
mov
stc
jg
inc
test
fwait
or
stos
int3
ja
sub
pop
add
pushf
pusha
sbb
daa
mov
in
outsb
inc
push
jbe
jle
sbb
pop
push
cltd
adc
je
movsl
xchg
repnz
add
push
imul
inc
cmp
pop
enter
cmpsl
mov
pop
gs
inc
mov
aas
aaa
in
cmp
mov
pop
aam
add
adc
clc
icebp
push
xor
pop
mov
call
dec
lcall
sbbb
sub
into
addr16
jnp
addb
lock
and
push
inc
mov
mov
pop
xor
and
int
pop
xchg
adc
xchg
or
cmp
jbe
xlat
sbb
pop
jae
push
mov
and
arpl
ss
cmp
pushf
adc
pop
sbbl
mov
pop
out
mov
icebp
insb
rcrl
lahf
push
push
xor
ret
and
arpl
mov
int3
mov
lea
and
or
fwait
std
cmpl
xorb
arpl
outsb
xlat
mov
add
sbb
in
push
sub
jno
je
pushf
mov
movsl
cmp
jp
cli
pop
insl
or
sbb
popf
in
mov
xorl
out
add
sbb
xchg
into
repnz
mov
insb
mov
jnp
js
mov
cmp
addb
add
lods
sub
jmp
dec
pop
addl
gs
lahf
fxch
adc
inc
adc
je
mov
nop
push
mov
push
ss
or
lods
push
xor
and
sub
pop
inc
and
jle
dec
ds
xchg
dec
fwait
and
or
test
into
mov
sub
pushf
test
mov
push
hlt
arpl
adc
and
lcall
mov
sub
rcll
push
loop
adc
mov
add
in
adc
mov
fcompl
add
rorl
cld
sti
push
adc
rcll
mov
push
pop
and
sbb
sub
sbb
hlt
ljmp
add
xor
mov
call
data16
popf
add
jo
movsl
pop
scas
jmp
cltd
xor
add
xor
sub
sti
data16
adc
cwtl
inc
mov
test
inc
inc
and
popf
dec
fisubrs
sbb
idivb
cmp
bound
incl
add
sti
pop
inc
test
xchg
cmc
cwtl
mov
lret
scas
add
and
jns
js
les
jg
repz
and
pop
test
bound
push
outsl
pop
nop
pushf
stos
imul
cmp
sub
xor
lods
jne
mov
push
mov
sbb
aas
js
in
jl
test
jge
and
pop
mov
ret
fcomps
cmpsb
and
dec
dec
in
mov
adc
sub
xor
push
mov
das
out
lds
sbb
cmpsl
test
notb
pop
sub
pop
jbe
sub
cmp
adc
sbb
ret
sub
fs
aas
push
scas
lret
mov
stos
inc
dec
pop
xor
mov
sbb
adc
divb
add
in
insl
inc
add
jge
cmp
xchg
and
jmp
in
xchg
xor
sbb
add
push
lcall
test
idivl
push
sub
lcall
xor
jae
or
inc
jg
push
mov
and
cmc
aad
sbb
fwait
test
and
inc
stc
push
mov
add
or
mov
xor
jno
push
adc
loope
mov
mov
sbb
mov
or
cmp
mov
insb
lret
sti
rorb
inc
and
jne
jno
jnp
lahf
out
jmp
dec
mov
rclb
testl
mov
sub
cmpsl
inc
std
rorl
popf
xor
cmpsw
jecxz
lock
cltd
mov
loopne
js
xchg
test
mov
pop
mov
jo
jp
adc
scas
aas
arpl
xlat
clc
aaa
sbb
inc
idivb
jge
sub
jle
mov
cld
out
sti
mov
lock
dec
jb
or
jbe
lret
pop
jno
in
cmpsb
xor
and
int3
sub
pop
jle
jno
cmc
push
adc
push
or
push
lcall
lret
subb
ss
mov
and
jmp
mov
addr16
cmp
pop
sub
in
cmp
adcl
loop
int3
ds
jg
mov
sbb
sbb
sti
call
daa
xchg
sahf
scas
mov
push
fucom
repz
insb
lea
lds
lods
imul
push
pusha
into
shrb
jl
fucomi
push
repz
ja
pop
cvttps2pi
push
cmp
lcall
push
sahf
and
aam
sub
jnp,pn
out
mov
or
mov
cli
test
jp
jnp
test
shl
inc
pop
shl
or
mov
shlb
add
push
mov
cli
insl
xor
adc
fdivl
adc
cltd
lds
insb
or
push
inc
mov
dec
stos
jne
ds
enter
mov
ret
imul
mov
add
dec
fsubrl
subb
or
leave
into
out
dec
cmp
mov
inc
in
js
fsubrs
lds
adc
add
jge
mov
pop
daa
fstps
imul
xchg
les
jae
icebp
jne
adc
scas
stos
fwait
push
or
mov
mov
ljmp
cmp
loop
and
mov
adc
stos
xlat
or
movsb
adc
mov
push
cmp
xchg
xchg
ret
hlt
cld
push
xor
mov
pop
cmc
sbb
jl
add
inc
or
nop
xchg
mov
jl
dec
jnp
jecxz
iret
add
sub
fbld
cltd
dec
and
mov
in
cmp
xchg
xor
movsb
jns
cmc
mov
mov
sub
xor
pop
jmp
call
mov
test
jb
loop
out
shll
xor
es
and
outsb
fs
scas
cwtl
inc
xchg
das
push
fwait
jb
push
jne
movsl
clc
push
loopne
xor
aaa
adc
loope
repnz
adc
mov
cmp
sbb
or
adc
cmp
sahf
and
rorl
add
sbb
out
jle
sub
xorb
push
imul
lea
sbb
stos
in
ja
in
movsb
cmp
jle
lods
lahf
xchg
mov
inc
xchg
mov
sbb
and
pcmpgtb
jp
scas
xor
mov
jb
inc
cmp
in
ds
dec
inc
inc
jbe
subb
lods
int3
shlb
out
xchg
push
sti
insl
outsl
jbe
test
or
repnz
in
mov
popf
xor
out
in
cmp
daa
mov
mov
jno
mov
lcall
jo
xorl
xorps
cmp
pop
fisttps
stos
out
nop
inc
insb
movsl
movsl
sbb
call
leave
ja
and
pop
mov
arpl
mull
pop
pop
xchg
enter
push
jge
xchg
xchg
clc
repnz
jp
cli
cmc
sbb
xchg
push
or
outsl
mov
insb
adcb
imul
nop
fcompl
cwtl
mov
mov
rorb
xor
insl
inc
jb
jae
sub
test
aam
xor
scas
mov
mov
pmaddwd
rcrb
jbe
ficompl
stc
sbb
sub
dec
mov
mov
pop
sbb
dec
sarb
daa
mov
push
in
sbb
lock
sti
adc
gs
add
or
cld
cmp
xor
dec
mov
xchg
xchg
imul
roll
lds
mov
inc
cmc
mov
push
movsl
jecxz
xchg
loop
enter
inc
mov
sbb
add
in
aas
orb
push
jg
lods
lods
push
stos
dec
xor
pop
sub
out
and
jp
mov
mov
cmp
scas
mov
pusha
subb
and
clc
rcll
incb
std
jl
add
and
push
sub
rcr
nop
cmp
push
mov
push
xchg
dec
add
push
adc
inc
pavgb
mov
jg
ficoms
mov
xor
jge
imul
inc
lret
sbb
xchg
add
aas
dec
cltd
gs
mov
and
test
mov
dec
nop
cmp
or
mov
add
mov
mov
push
pop
std
repz
in
push
std
ret
enter
addl
data16
or
jne
mov
mov
mov
pop
mov
mov
push
je
xlat
js
sbb
xor
aas
inc
cld
adc
icebp
in
push
push
in
mov
adc
pop
ss
enter
test
scas
push
arpl
and
xor
jle
stos
or
jp
mov
xorb
mov
xchg
mov
js
adc
push
call
sahf
add
sub
adc
stos
sarb
test
adc
mov
out
mov
xchg
aaa
and
lods
test
jl
outsb
repz
gs
pop
mov
popa
ret
lock
and
fsubl
mov
mov
xchg
call
dec
out
popf
mov
bound
repz
jnp
scas
popf
dec
pop
add
push
aaa
lret
test
test
stos
jns
xchg
sbbb
in
sbb
sub
pop
and
sub
cmp
inc
push
sbb
mov
shl
push
mov
fsub
out
scas
pop
cld
addl
leave
cmova
push
cmp
cmc
sub
dec
arpl
mov
nop
mov
xor
or
and
inc
or
adc
out
dec
in
lret
sub
push
jae
leave
xchg
push
into
add
aam
adc
mov
mov
ds
jae
jle
incl
mov
aam
mov
jo
icebp
add
add
add
push
int3
pop
pop
stc
shll
xchg
fiaddl
push
or
xlat
bound
sbb
pop
jno,pn
sbb
outsl
or
sbb
adcb
mov
js
fdivrl
mov
mov
mov
arpl
lods
clc
das
mov
inc
insl
add
imul
jle
fsubs
cmp
movsl
dec
cld
cltd
repz
and
icebp
inc
je
push
fstpl
rcrb
fs
jne
adc
mov
test
les
push
test
and
rcrl
or
jl
lret
orb
and
mov
mov
mov
inc
jp
inc
pop
cmp
pop
repnz
shr
mov
mov
leave
mov
jae
jl
jmp
jns
dec
pop
roll
push
movsl
fwait
imul
aam
sbb
inc
mov
sahf
loopne
sbb
jae
aas
test
xchg
or
fwait
lret
adc
pop
sahf
aaa
sarb
test
jns
xchg
ret
sbb
lret
xor
add
jmp
cld
xchg
mov
mov
add
add
and
in
cld
cmc
call
push
lods
imul
stos
decb
shll
sub
pop
imul
mov
das
mov
stos
sbbb
dec
ljmp
adc
ja
dec
xchg
cmp
xchg
shll
pop
pusha
jmp
jbe
fcmove
aad
mov
btr
mov
adc
in
fsubrl
lret
test
pop
sarb
mov
fcoms
add
mov
xchg
loopne
inc
inc
adc
mov
int3
and
mov
jp
sub
aam
mov
cmp
inc
xchg
cmp
pop
mov
pop
pop
icebp
or
iret
jp
mov
outsl
cmpl
into
mov
xchg
xchg
pushf
push
loop
pop
xor
lret
cmpsl
cmp
mov
push
in
mov
mov
jg
xchg
test
rol
xchg
and
pop
icebp
iret
mov
jg
jle
mov
decb
or
mov
xlat
mov
aas
mov
jno
inc
shll
jb
cld
mov
in
add
scas
adc
imul
das
pop
dec
call
bound
pop
fisubrl
es
movsb
ret
dec
adc
jle
jg
nop
loop
or
dec
mov
sub
orb
ss
mov
adc
sub
fnstcw
push
mov
lret
icebp
loopne
mov
push
clc
adc
jmp
enter
adc
outsb
sub
ljmpw
in
jecxz
xorb
xchg
adc
pop
ljmp
and
pop
or
test
and
push
jecxz
leave
into
test
sub
movsb
je
xchg
jmp
in
inc
cmp
out
out
sbb
cmp
unpcklps
push
cli
divb
rclb
sbb
mov
sub
dec
out
andb
cltd
or
mov
lcall
xor
push
adc
add
push
jecxz
sub
ljmp
jmp
xchg
xlat
stc
inc
fsubrs
push
pop
pushf
test
ss
fidivrl
jae
loop
leave
test
sub
jp
inc
stos
das
adc
enter
popa
daa
cmp
icebp
push
adc
mov
dec
cli
repnz
imul
cmp
sbb
xor
cld
mov
sarb
ljmp
loopnew
xor
iret
xor
push
int
insb
mov
fstl
hlt
cmp
outsb
movsl
das
shr
sbb
jl
es
negl
jecxz
and
and
lcall
push
test
xor
outsl
inc
or
jb
xchg
dec
xchg
inc
adc
cmp
scas
pop
lret
dec
in
xorb
jae
sub
scas
inc
sbb
cltd
outsb
xchg
inc
xchg
repnz
mov
inc
fwait
enter
fwait
inc
dec
sbb
adc
pushf
outsb
push
dec
dec
push
mov
push
push
xor
pop
dec
aam
inc
testl
add
decb
jb
jl
push
jmp
rclb
les
mov
in
cmpsb
jmp
pop
push
dec
call
push
dec
test
iret
jne
push
mov
mov
cld
xchg
mov
adc
mov
sti
push
pop
lcall
bound
aad
gs
pop
fs
test
mov
jge
push
cwtl
cmp
xchg
push
das
inc
in
daa
jns
daa
adc
popa
xor
and
out
push
add
fidivrs
mov
inc
in
jo
dec
xor
mov
test
pop
inc
les
lea
sbb
and
xor
push
jb
and
sub
movsb
push
pop
imul
es
jl
cmpsl
ja
ja
popa
push
popf
imul
push
jo
enter
mov
mov
in
cli
notb
out
ja
icebp
push
dec
or
les
lea
test
and
jecxz
test
test
mov
add
mov
bound
push
stos
and
lea
jnp
xlat
fisubl
stos
or
push
in
dec
rcrl
mov
arpl
push
in
aas
out
outsl
mov
inc
xchg
inc
movb
inc
push
pop
clc
inc
cmp
fistps
pop
imul
or
pop
adc
xchg
mov
sub
jbe
adc
out
enter
test
int
jbe
xor
sub
cmp
xchg
cs
sbb
pop
sub
sub
pusha
xor
sarb
mov
mov
push
pop
xlat
push
nop
data16
bnd
adc
insl
mov
std
jg
add
cmpsb
sbb
and
loopne
scas
adc
test
in
and
cmpsl
dec
pushw
adc
adc
mov
shlb
cmp
mov
and
mov
aam
cmp
cmp
or
push
rol
outsl
cwtl
lret
sub
int
or
mov
push
or
push
inc
insb
dec
mov
mov
mov
mov
imull
in
jmp
repnz
imul
cld
repz
push
cmp
rolb
mov
test
pop
cmp
sarl
xchg
mov
aaa
outsl
loop
popa
cmp
xor
test
outsb
mov
mov
fcomip
adc
xorl
jmp
pushf
push
inc
out
sbb
add
dec
js
sub
sahf
lds
cld
or
mov
jmp
cmpsl
jg
add
outsb
xlat
xchg
sub
addr16
and
es
lret
inc
pop
sahf
clc
xchg
test
mov
cmc
xchg
jns
sbb
lret
push
int3
mov
mov
sbb
or
mov
add
inc
push
sub
mov
movsb
rcrl
nop
jo
cmp
int3
cmp
idiv
in
cmc
adc
push
es
jne
jnp
fs
shll
aam
xor
movsb
mov
cmp
mov
aas
adc
xor
rclb
xor
repnz
pop
sbbb
or
mov
jg
aam
adc
fwait
rcrl
xor
and
popf
sti
mov
push
imul
sti
push
mov
test
cmc
mov
cmp
push
sub
xchg
jecxz
cs
imul
pop
mov
std
xor
jb
mov
pop
xchg
xchg
cmc
xchg
dec
add
push
cmp
cmc
mov
test
push
shrl
xor
int3
push
ficoml
xchg
sub
lea
mov
and
and
and
inc
mov
pop
in
mov
inc
iret
adc
and
or
xchg
es
dec
sti
ljmp
push
adc
das
adc
test
hlt
mov
jl
adc
mov
mov
sub
popf
cmp
inc
mov
and
cmp
and
push
fdivrs
es
and
vunpcklps
ljmp
ss
sbb
pushf
mulb
stos
lahf
cmp
pop
movb
jo
mov
and
xor
call
dec
cmp
in
cmpsb
or
pop
inc
insl
mov
add
push
push
ret
divl
cmp
ret
push
inc
loop
lret
outsl
cmp
cmp
xor
push
adc
pop
ds
cld
mov
pop
cmc
cmp
insb
adc
xlat
out
or
inc
pop
call
jns
aam
cmpsb
jno
adc
add
int
ljmp
mov
mov
stos
cwtl
in
xchg
mov
rol
les
sub
dec
jno
pop
xor
and
sbb
jl
pop
in
mov
cltd
mov
pop
fdivr
lock
sbb
int3
and
and
out
adc
mul
and
mov
stc
rolb
adc
orl
pop
inc
ljmp
add
sub
jbe
xor
fwait
mov
sti
into
and
xor
scas
jbe
push
push
cmp
fucomip
out
pop
or
push
pushf
js
into
and
push
leave
add
and
shl
pop
sub
add
aad
push
mov
in
sub
or
sbb
mov
icebp
flds
movsl
mov
push
push
ja
mov
mov
push
outsb
cmp
mov
push
add
rorl
adc
repz
loope
push
xchg
ss
loope
inc
sahf
std
adcl
and
pop
das
push
fsubp
movsb
add
jno
jg
gs
aaa
daa
repnz
ljmp
push
add
mov
xchg
pop
jo
loopne
test
adc
jne
cld
data16
dec
sub
imul
testl
xor
sbb
subb
lock
xor
stc
stc
test
dec
mov
daa
add
addb
xor
xchg
jecxz
addb
push
cmp
rcll
cmpb
mov
jp
rorl
sbb
lds
pop
push
mov
pop
mov
pop
gs
and
outsl
xchg
and
push
popf
stc
inc
xchg
insb
and
dec
dec
int3
xor
mov
add
fcoms
mov
scas
js
and
ds
jg
js
cmc
gs
lcall
dec
or
in
ss
daa
mov
inc
xor
out
mov
jge
mov
inc
in
cmp
cli
aas
mov
xchg
lcall
sbb
test
jbe
pushaw
push
out
pushf
aad
add
xchg
ret
jg
lret
shl
mov
nop
jns
xchg
lea
jo
test
xor
shlb
aas
and
jns
or
repz
mov
insb
outsl
xchg
mov
das
incb
pop
push
lock
pop
inc
popf
push
xor
or
or
sbb
shl
cmp
adc
scas
or
and
cwtl
mov
sub
xorb
sbbl
ret
cltd
add
jmp
or
stc
jg
push
fnstcw
cmp
fsubs
imul
hlt
das
out
imul
icebp
sbb
loopne
ljmp
mov
mov
loop
gs
test
aas
mov
in
jp
xor
lret
mov
insl
data16
pop
das
mov
into
jmp
jp
and
insb
add
xchg
xor
repz
add
addr16
rcrb
and
mov
or
sahf
adc
sbb
push
adc
cmp
sbb
jge
mov
out
xor
nop
inc
jp
push
out
xchg
and
xor
mov
pop
jg
mov
test
jle
dec
sti
xchg
and
push
pop
sub
mov
ljmp
mov
hlt
aad
mov
push
ret
fstps
and
iret
out
js
mov
xchg
andb
cmp
cs
jae
or
movsl
in
lcall
xchg
and
fidivrl
hlt
mov
bound
into
adc
dec
pop
pusha
xchg
popa
xor
mov
call
incl
xchg
ja
in
aaa
popf
fisubl
xor
jecxz
test
cmc
fdiv
and
daa
sbb
aaa
icebp
aam
adc
pushf
adc
lods
add
sub
push
mov
sbb
mov
lock
adc
cmp
andb
adc
adc
cltd
xor
lock
and
call
icebp
std
xor
sub
int
xlat
addl
inc
popa
xor
lds
sahf
sub
mov
xchg
pcmpgtw
sbb
out
add
lods
xchg
fucomp
arpl
mov
gs
push
pop
jae
sbb
mov
pop
add
xchg
das
inc
mov
stc
pop
ret
gs
push
daa
daa
out
xchg
inc
xor
mov
pop
imul
ss
stos
cmp
sbbb
in
fwait
or
ret
roll
sarb
inc
shr
sbb
pop
lods
jns
jle
sti
or
jb
mov
aam
add
scas
popa
adc
xchg
sahf
mov
in
adc
test
lret
push
push
loope
stc
test
pop
mov
addr16
or
sahf
mov
xor
stos
out
ret
int
icebp
sahf
inc
loop
and
clc
mov
adc
mov
mov
sub
sti
jae
mov
shl
push
test
scas
xor
int
cmp
adc
gs
mov
sub
mov
loop
adc
xor
mulb
lcall
or
mov
out
andl
inc
xlat
outsl
test
shlb
dec
les
dec
push
fwait
mov
and
inc
sbbl
push
cmpsl
les
push
fimuls
pop
sahf
fs
push
add
lahf
cmp
std
cwtl
pusha
push
add
data16
cmp
subb
in
fwait
outsb
cmpsb
cmp
ljmp
push
leave
inc
movsl
js
cs
orb
fsubrl
xchg
aas
push
outsb
cmpsl
dec
mov
sub
in
dec
ss
push
cmp
mov
or
stc
add
jp
lcall
rolb
test
cs
lock
mov
xor
movsl
xchg
frstpm(287
dec
xor
cs
movsb
rcll
dec
cmpsb
add
adc
cmp
add
mov
add
mov
jbe
pop
adc
sahf
fstp
repnz
sbb
xchg
insl
add
xchg
push
push
mov
dec
cltd
dec
pop
sbbl
into
in
in
aaa
adc
inc
push
sub
and
ds
inc
sub
jle
lods
xor
je
loop
sub
pop
es
lods
stos
divb
mov
cmp
mov
mov
out
mov
push
loopne
ljmp
cli
mov
xchg
xchg
hlt
shrl
mulb
ss
push
mov
or
int3
fisttps
loopne
cmpsb
mov
mov
je
mov
dec
popf
push
jl
int3
aam
push
cmpb
inc
clc
sub
aad
imul
xor
add
mov
cmp
mov
aam
xchg
sub
xor
pop
jge
lahf
in
mov
push
and
push
add
xchg
stc
sbb
fldt
sti
and
sbb
jge
sbb
call
and
jg
gs
out
out
scas
xchg
cs
fucomi
xchg
movsl
xchg
aad
push
lock
cltd
jmp
push
xlat
mov
add
pop
iret
mov
add
sbb
ja
mov
cltd
int
pop
push
lods
mull
imull
xchg
pop
movsl
and
pop
jecxz
inc
jle
cmp
push
push
test
pop
ss
inc
cs
aaa
inc
out
sub
add
bound
ljmp
test
and
movsl
fstl
xchg
mov
loop
lock
jmp
test
jae
or
bound
inc
mov
xchg
pushf
push
ss
andl
and
mov
sbb
and
fidivrl
sub
test
jns
adc
xchg
rorb
outsl
add
cmp
jb
insl
es
sbb
mov
xchg
adc
dec
sarl
fucom
and
and
xlat
jns
in
rolb
sub
jl
push
adc
mov
sub
gs
xchg
mov
jno
pop
fcoms
fmuls
cmpsl
aas
int3
xor
les
idiv
and
add
xor
lods
push
movsb
mov
adc
stos
mov
ret
aaa
mov
sarb
xchg
xor
ret
subl
js
leave
jmp
fmull
mov
mov
pop
outsl
jb
addr16
in
xchg
jp
push
pop
fimuls
dec
or
xchg
pop
stos
sub
test
and
mov
xchg
test
fisubrs
test
fcoms
add
lret
lea
push
shlb
sub
adc
fisubl
sbb
imul
nop
shrb
push
and
sbb
jbe
ret
add
xchg
or
pop
push
and
out
into
add
push
mov
pop
xchg
inc
outsb
sbb
mov
inc
sub
push
gs
test
lcall
loopne
sub
jl
mov
movsb
or
adc
add
mov
movsl
cmpsb
adc
nop
pop
andl
add
pop
jmp
dec
std
mov
fistps
enter
push
sbbb
leave
movsl
ds
jb
xchg
outsl
mov
fisubs
jo
push
rcrb
sbb
icebp
sbb
ja
cmp
imul
data16
pop
sub
push
pushf
sbb
movsb
adc
in
idivb
cld
addr16
movntq
out
lret
shrb
add
lcall
daa
test
nop
xchg
loop
aas
dec
sub
inc
mov
jmp
lcall
stos
cmp
fldl
jle
lods
push
popf
test
pop
cs
mov
loop
pop
aas
push
pop
lods
cmp
and
adcl
xchg
xchg
scas
enter
push
decb
or
add
inc
rcll
aad
adc
fs
pop
push
call
adc
outsb
pop
lret
test
adc
jnp
adc
jae
jp
das
add
jnp
aad
dec
jecxz
and
shrl
pop
outsl
sahf
in
inc
das
out
push
enter
jge
adc
mov
in
loopne
clc
insl
fs
mov
lods
and
call
mov
roll
push
mov
jne
or
inc
icebp
lcall
adc
mov
xchg
pop
jl
movsl
scas
cld
jbe
pop
sarl
daa
dec
scas
pop
and
xchg
push
out
mov
pusha
mov
jl
pop
out
stos
js
cmp
push
push
cmp
pop
or
inc
inc
mov
mov
les
cmpsl
sub
mov
sbb
ret
push
cmp
fdivr
clc
mov
lods
xor
dec
push
outsl
xor
in
mov
aas
aam
orl
lea
or
push
add
ss
cltd
scas
sbb
inc
dec
ds
pusha
add
ret
mov
xor
mov
mov
inc
outsl
fldcw
sub
xchg
addr16
pop
aas
movb
and
jecxz
inc
xor
rolb
enter
test
push
pop
out
inc
push
bnd
cmc
fsubrl
mov
test
sub
mov
add
or
inc
jb
adc
adc
lcall
add
cmp
xor
scas
scas
adc
fisubrl
cmp
cmp
cmp
adcb
jns
inc
aad
push
or
mov
in
outsl
or
sub
xchg
jge
push
insb
lret
mov
fidivs
lock
repnz
shr
lea
rcl
call
inc
and
jge
add
xchg
mov
lahf
or
and
test
rolb
adc
inc
lock
and
or
out
ficompl
insl
int
shll
je
mov
enter
push
inc
fwait
sub
dec
fldenv
fsubl
pop
adc
cli
jle
gs
ja
stc
jp
lock
icebp
add
and
mov
scas
add
ljmp
out
inc
movsl
pop
or
je
push
mov
push
cmpb
jmp
daa
std
mov
xchg
test
inc
lcall
cmpsl
adc
cwtl
cmp
sbbl
sbb
mov
sbb
icebp
or
adc
scas
fiadds
enter
es
dec
fsts
jp
jo
add
jl
lret
lcall
cwtl
addr16
dec
or
movsb
insb
cmp
icebp
mov
loopne
mov
sub
stc
cmpsb
dec
fbld
pop
mov
lock
daa
jl
dec
inc
xlat
jnp
push
or
pusha
push
xchg
xchg
sbb
mov
cmpsb
outsb
and
nop
je
add
mov
pop
ljmp
insl
outsb
int3
mov
cli
dec
sti
int3
xchg
mul
aam
in
mov
lock
in
add
movl
xchg
jge
daa
lret
mov
ret
cld
call
mov
mov
loopne
xchg
cwtl
stos
hlt
or
cwtl
dec
mov
and
sbb
and
or
mov
loope
movsl
lods
les
popf
push
inc
cld
and
cmc
je
arpl
sbb
inc
jb
inc
sub
sbb
lret
cs
mov
jne
mov
jle
cmpsl
xor
adc
xor
or
xor
push
jmp
jne
aam
test
shll
jecxz
jp
aaa
dec
push
pop
mov
aam
mov
sbb
stc
xor
dec
pushf
jbe
push
jne
xchg
mov
mov
rcr
fidivrl
es
adc
ficomps
movsl
add
in
pop
jl
xor
fwait
inc
xor
in
pushf
mov
test
insb
das
push
in
fwait
out
mov
cmp
repz
push
inc
rorb
pop
pop
fs
orl
cmpsb
inc
fsubr
xchg
xchg
je
push
and
les
jo
push
popf
cld
or
or
inc
pop
fstl
lods
adc
mov
xchg
lods
dec
push
cmp
movsb
and
repnz
ss
aaa
leave
sub
sti
nop
inc
gs
push
xchg
sub
rolb
lret
sbb
and
sbbb
sub
mov
dec
fsubr
je
xchg
ljmp
or
sub
leave
jbe
sub
jmp
mov
sub
inc
aam
pop
sarl
mov
roll
inc
popf
mov
out
int3
pop
inc
mov
loope
add
aas
xchg
lea
mov
pop
int
mov
xchg
mov
fs
cs
cmp
into
and
xchg
stc
sbb
mov
jo
mov
mov
sbb
cmp
repz
sbb
and
cmp
cli
or
loop
insb
insl
add
std
loopne
xchg
mov
shlb
xchg
test
shl
das
push
push
push
mov
test
jp
imul
jb
xor
sub
adcl
push
aaa
jnp
outsl
jl
sbb
or
and
cmp
ret
xor
and
in
shr
mov
mov
and
adc
aas
cmpsl
push
bound
xchg
push
arpl
ja
aaa
sbb
jecxz
inc
popa
pop
jne
xchg
adc
cmp
inc
jmp
cmc
dec
mov
add
lret
adc
xor
fiaddl
fiaddl
fildl
push
push
xor
sbb
jl
adc
loop
cmp
scas
pop
sbb
loopne
test
gs
das
out
imulb
inc
cmp
repz
int3
or
ds
pop
adc
sar
pop
mov
insb
dec
stos
imul
int
ja
iret
xor
dec
cmpl
testl
popa
out
aas
fabs
pop
jb
cmc
mov
fmull
fistps
mov
push
jnp
lret
jge
jmp
ficomps
or
sub
ljmp
xchg
and
pop
shll
pop
loope
cmpsl
xchg
in
jecxz
jg
pop
bound
andl
pop
outsl
iret
pop
mov
fs
fiadds
shrb
push
xchg
cmpl
fmull
jmp
lock
add
ja
xor
jne
or
fiaddl
cmp
rcrl
pop
cmp
aam
aas
test
insb
jecxz
cmc
xchg
add
sbb
das
leave
shlb
arpl
cmpsl
fwait
inc
loopne
lods
push
out
mov
scas
dec
shrl
in
es
stos
mov
sbb
les
out
jae
cmp
push
mov
shll
fistpl
cmpsb
pop
out
push
adc
popa
in
mov
shlb
adc
sbb
add
lahf
repnz
lds
push
mov
xor
jno
jg
mov
ret
fmull
rcrl
xchg
jae
out
push
std
data16
push
and
jmp
adc
mov
mov
inc
repz
pop
adc
rcll
lret
sbb
lret
mov
shll
enter
pusha
arpl
jmp
jo
imul
sbb
mov
test
test
inc
jge
enter
fildll
arpl
sbb
pop
cwtl
pop
xchg
mov
lods
sbb
mov
push
push
adc
pop
std
loop
sub
out
pop
bound
movsb
sub
daa
xchg
cli
add
lcall
fcomi
push
pusha
jb
jbe
imul
imul
or
mov
cmp
lds
aad
jno
loop
add
mov
adc
sti
push
sub
dec
adc
adc
pusha
sahf
sarb
pushf
int3
shlb
mov
pop
cmp
cmp
lcall
popa
cmc
jecxz
dec
inc
mov
pcmpeqb
adc
dec
mov
xchg
sub
xchg
ror
into
jecxz
icebp
rol
push
sub
xlat
dec
repnz
test
dec
rcll
inc
push
ss
imul
or
dec
sahf
ljmp
imul
sub
nop
mov
fcmove
and
insl
mov
leave
adc
aas
test
fistpl
pop
xor
stos
jo
dec
hlt
sbb
mov
adc
sub
dec
dec
xor
pop
cmp
inc
fwait
mov
insl
and
sbb
jo
mov
jbe
jno
out
fildll
lahf
cmp
sbb
xchg
inc
mov
jbe
cmp
int
dec
in
xchg
xchg
mov
sbb
push
push
push
pop
fnstcw
xchg
push
imul
iret
jns
push
push
xor
shr
sti
mov
insb
popf
int3
repnz
lds
pop
test
ljmp
cmp
adc
push
loop
mov
cmp
imul
loope
fwait
shll
pop
pop
out
dec
ss
cli
or
or
test
push
orb
inc
cmp
pop
stos
jne
outsb
inc
mov
faddp
mov
int3
in
cmp
jb
shlb
jp
push
icebp
nop
mov
cmpsl
outsl
pop
dec
jnp
xor
mov
jae
mov
xor
arpl
jno
cltd
pop
out
mov
mov
cltd
test
iret
repnz
sbb
push
adc
cmp
arpl
cmc
xchg
adc
movsl
and
sub
and
aaa
insl
and
lds
imulb
movsb
js
jecxz
push
and
shlb
frstor
int3
loope
adc
rorl
pop
arpl
mov
in
stos
cmp
fisubl
add
xchg
inc
xlat
int
notl
mov
jbe
pop
adc
popf
jbe
lock
and
test
in
add
dec
mov
mov
and
push
into
cmp
push
and
test
inc
int
sahf
mov
mov
into
repnz
lods
mov
movsl
jo
sahf
or
xor
sahf
test
lock
repnz
xor
lret
and
clc
inc
iret
subl
cli
data16
test
add
or
shlb
sub
mov
and
mov
sahf
or
xlat
inc
dec
cmp
sub
add
ds
mov
mov
outsb
dec
insb
xor
decb
rorl
sub
pop
xor
add
push
xlat
mov
repz
xor
mov
xchg
add
dec
rorl
jp
hlt
cmp
sub
push
ljmp
inc
jmp
bound
push
cmc
dec
mov
push
mov
cmpsb
push
sti
ret
aaa
mov
rcrb
ficompl
int3
popa
arpl
mov
cli
and
leave
xlat
popa
bnd
pop
xchg
into
add
rcr
aam
push
imul
loopne
loop
jecxz
loopne
cmp
ret
fidivl
mov
or
sti
loope
cwtl
inc
mov
push
xchg
out
movsl
xchg
cmp
jno
dec
dec
cld
lcall
cli
xchg
lret
leave
cli
lea
and
cwtl
sahf
rorl
adc
mov
cltd
or
sti
cld
cmp
xor
repz
aas
pop
cmp
cmp
mov
xorb
aad
in
pop
out
mov
testb
dec
mov
sbb
sbbl
negb
dec
sub
std
cmp
bound
fldl
mov
es
pop
out
xlat
jmp
outsl
push
xchg
jmp
mov
stos
hlt
addr16
sbb
and
mov
add
jb
lods
mov
std
hlt
adc
popa
into
mov
je
sti
push
mov
insb
sub
xor
xlat
cmp
cld
sub
dec
arpl
fdivrs
aaa
xchg
lcall
out
fldcw
add
in
jnp
cmpsl
test
xchg
sbb
add
pusha
mov
in
insl
je
add
xchg
das
sub
out
scas
out
cmpsl
ljmp
jo
mov
pop
insb
xchg
push
jle
popf
mull
movb
icebp
mov
subl
in
xchg
mov
add
xlat
add
mov
adc
xchg
loopne
bound
imull
jmp
push
sahf
push
dec
push
xor
stos
daa
icebp
fcoml
jno
xor
push
jle
je
cmp
inc
sbb
jae
out
or
cmp
inc
push
in
cmpsb
cs
cltd
xchg
jmp
cmp
inc
enter
jecxz
push
popf
cmp
mov
cmp
repz
aad
mov
loop
jmp
mov
dec
xlat
lds
daa
fisttps
mov
mov
inc
sbb
stos
imul
arpl
or
mov
das
int
test
fs
roll
aaa
adc
aas
cmp
jae
mov
out
mov
push
or
or
ja
cmp
cltd
sub
pop
lret
fists
cmp
mov
test
ror
test
out
xchg
aaa
loopne
bound
negb
jno
jbe
rcrl
push
mov
add
outsl
or
jmp
insb
sbb
arpl
daa
lcall
arpl
stos
sub
mov
xor
repnz
ret
roll
mov
sar
mov
test
test
jnp
pop
adc
mov
fstl
sbb
mov
dec
repnz
loopne
cwtl
ret
and
sarl
sbb
cld
mov
iret
out
test
adc
cwtl
pop
mov
xchg
mov
in
enter
aad
jle
adc
insl
xor
arpl
inc
imul
dec
and
lods
lret
int3
dec
leave
push
fcom
xor
repz
jo
arpl
cmp
test
aaa
out
and
stos
xchg
es
xor
cmc
js
testb
ss
jne
adc
test
adc
or
sub
test
test
call
bound
xor
mov
mov
or
mov
fwait
sub
xchg
inc
test
jno
dec
pop
dec
pusha
mov
ret
imul
adc
aam
ret
push
dec
push
dec
inc
adc
cmc
mov
movsb
sub
lods
mov
mov
call
lret
out
xchg
lods
dec
cmp
push
or
mov
repnz
movsb
scas
insb
scas
pushf
xchg
shl
data16
out
cmpsl
es
or
out
sub
sbb
sbb
int3
mov
sbb
xor
mov
loop
addr16
mov
lcall
mov
mov
pop
int3
jno
mov
xor
cmp
jp
mov
fsubl
sbb
push
xor
aam
jbe
and
cmp
mov
dec
inc
sbb
jg
and
sub
aas
mov
xchg
arpl
jg
imul
dec
imul
mov
in
imul
sahf
es
mov
std
jge
lods
pop
aaa
mov
jg
add
adc
addb
xchg
mov
lret
stc
jge
lcall
fucomip
mov
cmpsl
or
into
cli
in
adc
pop
cmpsl
mov
cmp
xchg
mov
andl
leave
divb
mov
cmp
push
std
dec
lret
into
hlt
bound
fdivrp
icebp
push
add
jo
mov
std
fdivrs
loopne
in
xor
mov
je
aad
call
and
jne
push
sahf
scas
push
aad
mov
xor
pop
icebp
cli
dec
or
addl
sub
dec
xchg
or
cmc
dec
sub
jbe
lods
xor
and
test
sti
repz
popf
insb
andb
dec
mov
lea
xchg
pusha
pop
xchg
mov
pop
mov
or
pop
xchg
jp
cwtl
subb
inc
lret
pop
shl
or
cmpsl
popa
ret
hlt
cmp
sbb
push
jle
xor
xchg
sbb
adc
or
ljmp
ficomps
mov
loop
les
mov
out
and
mov
notb
cltd
jbe
mov
cmc
dec
and
mov
lds
fwait
mov
lods
jmp
addr16
sbb
aam
std
and
mov
cmp
idivl
cmpsb
and
call
fwait
jne
mov
fwait
pop
lcall
fs
jl
push
ret
sub
insb
fwait
sbb
fcoms
adc
dec
pop
cmp
sub
push
jg
mov
addl
fadds
cld
aas
or
out
int
push
test
sub
jmp
loope
jl
fmuls
std
stos
leave
mov
or
sub
subl
jmp
and
push
xchg
adcl
add
movsb
dec
fisubl
pop
negl
push
shl
dec
or
arpl
sarl
out
lods
or
inc
cmp
add
xor
mov
mov
jno
test
out
call
rolb
xchg
jl
lods
cld
je
scas
xor
add
or
jle
sahf
sub
xchg
cld
cmp
xchg
lods
ljmp
lods
lcall
adcl
out
mov
aas
adc
mov
inc
or
lods
xchg
stos
sub
mov
and
xor
jmp
and
jle
mov
sbb
sti
mov
push
fisubrs
sub
aaa
cmp
ja
xor
add
push
cmp
div
addb
mov
push
pop
lock
dec
into
insl
outsb
aaa
adc
sbb
into
xor
fdivl
push
outsl
xchg
adc
loopne
rclb
pop
xlat
sub
stc
mov
mov
mov
push
add
pop
in
mov
cmp
jle
mov
and
test
pop
or
push
mov
addl
js
lahf
lods
sub
in
adc
jge
ror
jecxz
rcrl
xor
adc
pushf
lea
jmp
insb
mov
in
xchg
pop
sub
push
data16
fwait
sarl
jbe
rcrb
xor
ja
lds
sbb
faddl
js
das
mulb
or
hlt
jnp
arpl
jmp
mov
jae
lea
adc
pop
mov
pop
jo
xor
in
mov
sub
dec
ja
mov
imul
mov
mov
pop
sbb
popa
ljmp
pushf
aam
test
push
aad
pushf
push
xchg
dec
sbb
bound
mov
shlb
test
dec
sbb
or
fcmovnu
ret
imulb
push
or
fstpt
mov
repnz
aas
dec
fwait
bound
dec
sbb
out
popl
imul
mov
and
lahf
jp
inc
mov
adc
movb
add
aas
fsubrs
mov
jecxz
xchg
pop
mov
and
in
xchg
loopne
push
aad
dec
xor
aad
test
iret
lea
stos
pop
js
dec
ljmp
pop
imul
stc
mov
pop
inc
in
in
xlat
int
pop
pop
cmpsb
testl
dec
inc
sbb
adc
lea
mov
sahf
pop
adc
outsb
stos
ljmp
fadd
ljmp
loop
inc
and
fiaddl
outsl
iret
sbb
add
rorl
jp
or
fsub
mov
push
std
test
je
add
add
adc
test
mov
aam
xchg
sar
sbb
out
pop
dec
xchg
fnstcw
nop
or
mov
loope
pop
sbb
add
push
lcall
and
insb
mulb
xlat
adc
and
and
mov
sbb
in
loopne
iret
test
pop
inc
aam
lea
push
xchg
xchg
mov
frstor
mov
sarb
xor
aaa
stos
decb
cli
mov
xor
hlt
inc
push
outsl
pop
xchg
or
insb
scas
xor
ror
aas
dec
cmpsl
inc
add
shrb
mov
jne
in
in
mov
xor
loope
or
loop
popa
int
mov
xor
mov
push
lods
sbb
call
loop
push
jecxz
xor
or
jg
test
push
xlat
sub
jge
dec
jbe
pop
stc
push
inc
rorl
sbb
and
insl
or
sub
pop
adc
add
sbb
negl
aaa
shlb
dec
or
jge
and
out
push
pop
mov
jge
shlb
mov
mov
cli
movsl
pop
pusha
js
or
mov
shrb
sti
pushf
mov
pop
test
xor
jge
cmp
arpl
adc
fistl
pop
or
ss
jae
lret
push
dec
je
mov
or
jae
aad
push
xchg
inc
sub
jno
movsb
daa
icebp
pushl
fisubl
fwait
pop
mov
mov
adc
xor
in
test
dec
shrb
jo
mov
out
cltd
mov
pop
outsb
lret
jbe
inc
es
movsb
push
dec
imul
jns
movsb
fists
mov
jmp
and
add
jmp
xchg
inc
adc
mov
cmp
xor
pop
mov
cmpsl
pop
jnp
add
hlt
push
xorb
add
stos
andnps
or
jl
adcl
lea
mov
mov
or
jnp
mov
aas
lret
out
sub
push
rcrl
sbb
rcll
fbld
xchg
add
int3
ret
scas
popf
mov
xchg
inc
pop
lret
jb
cltd
movb
adc
cmp
out
sbb
mov
lods
xor
jne
xor
pop
ret
std
or
or
mov
inc
ret
sti
dec
mov
enter
cld
cmpl
fildll
fmul
test
add
xchg
push
push
jmp
pop
mov
jne
pop
popa
or
outsb
fwait
lock
jno
in
mov
fdivl
xor
add
daa
adc
out
mov
sub
cmc
jmp
pop
roll
mov
sti
push
call
cwtl
insl
inc
repnz
bnd
push
xchg
cmpsb
mov
pop
and
ja
sbb
insl
cmp
cmc
lds
cltd
lahf
or
push
filds
add
push
and
ds
aam
jne
inc
xor
sbbb
loope
aad
xchg
popa
mov
mov
call
inc
push
lret
inc
inc
mov
rcll
cmc
int3
mov
lock
enter
out
jns
cmp
ljmp
out
mov
lea
pushf
sbb
mov
xchg
jge
pop
lret
sbb
int3
push
cmp
shll
bound
fdivl
pop
jge
or
and
push
shr
je
and
xchg
mov
call
pop
xlat
int3
les
push
aad
push
nop
into
inc
fisubs
pop
outsb
mov
pop
aad
movsl
mov
subb
cli
lea
mov
test
dec
lods
lahf
sarl
lods
outsl
pop
push
int
outsb
dec
fistpl
aaa
fidivrs
pop
xor
sub
sbb
sbb
inc
mov
sar
mov
fchs
mov
test
imul
pop
mov
int3
add
sbb
sub
hlt
xor
mov
or
test
dec
or
ss
dec
jnp
jae
jmp
movsb
add
push
hlt
cmc
test
jno
daa
test
stos
fnstenv
jle
bound
js
push
mov
imul
cli
add
inc
ret
mov
nop
lds
sub
gs
jae
das
sub
mov
lods
or
les
sarl
out
mov
mov
cmp
cmp
pop
jg
repz
cmp
or
xchg
stos
nop
mov
dec
dec
mov
cmp
lcall
jno
int3
fcomps
dec
outsb
sbbl
mov
mov
pop
jmp
lods
pop
jns
stos
mov
lods
test
pop
xor
mov
xor
fcomps
mov
insb
mov
imul
jmp
push
stos
mov
nop
movsb
push
rcll
fidivrl
mov
roll
jmp
dec
jo
jns
push
mov
inc
std
mov
push
movsl
inc
xchg
pop
icebp
fsubl
out
insb
pop
imul
lret
js
das
xor
andb
cmp
mov
dec
in
push
push
mov
loop
cmpsl
pusha
sbb
fidivrl
mov
pop
outsb
jbe
cmpsl
clc
shll
mulb
jge
xor
jno
inc
fiadds
imul
xor
xor
lret
jo
push
imul
out
add
push
jg
or
mov
cmp
cmp
int3
stc
and
subl
cmp
daa
dec
loopne
lods
imull
sub
mov
js
lahf
ljmp
loop
inc
xchg
sub
sbb
mov
aas
inc
pop
shrl
mov
lock
jns
jnp
sub
cmp
negb
mov
outsb
mov
adc
add
es
dec
xchg
jmp
outsb
pop
mov
or
aad
addr16
cmp
cmp
lcall
mov
mov
mov
push
lods
jb
test
into
rcll
add
push
das
test
lret
add
into
orl
orb
rorl
rorl
gs
jecxz
dec
outsb
pop
in
xchg
jbe
inc
mov
push
mov
cltd
add
push
test
rol
jecxz
or
ljmp
jmp
cs
stc
pop
pop
jg
add
dec
cmpsb
jb
adc
xchg
jge
jo
push
push
in
arpl
aad
into
mov
inc
cltd
pop
in
fcoms
sub
mov
into
push
push
inc
call
push
mov
lcall
inc
jmp
int3
mov
cmpsb
adc
mov
xlat
mov
testb
dec
lcall
aam
sub
das
stos
addr16
fistl
adc
shll
push
jecxz
pop
imul
mov
inc
sbb
dec
push
and
mov
inc
sbb
add
jns
mov
push
pop
jo
daa
xor
adcl
push
jecxz
inc
or
fsubrp
addr16
xor
js
lods
ds
or
adc
fs
dec
addr16
pop
xor
mov
adc
mov
ljmp
es
fdivrl
enter
orb
jp
xor
xor
cmpsb
ja
mov
ljmp
fwait
inc
ja
test
mov
out
repz
sbb
sbb
lods
call
sub
int3
cld
push
add
push
and
mov
call
lods
cli
xchg
pop
jo
push
pop
imul
jmp
mov
insb
mov
push
test
shll
mov
fcompl
pop
lcall
in
adc
mov
and
cmp
lcall
jg
pop
mov
mov
mov
cmp
mov
mov
dec
xchg
ljmp
mov
mov
xchg
inc
mov
cld
gs
or
gs
daa
and
pop
leave
add
cmpsb
pusha
outsl
test
out
ljmp
sub
mov
outsl
insb
push
xchg
inc
mov
adc
push
mov
fstl
mov
mov
dec
mov
fs
outsb
adc
popa
mov
lcall
insl
mov
sbb
fdiv
es
in
leave
cmpsl
push
sub
xchg
or
add
aas
mov
rorl
push
pop
inc
pop
in
mov
sbb
mov
out
push
int
add
andb
xchg
adc
imul
repz
es
cwtl
mov
cmp
insb
or
fisubl
adc
scas
pop
and
mov
and
jmp
pop
in
or
hlt
push
shll
adc
xchg
and
or
sbb
lds
dec
jp
push
jg
cmp
and
cltd
test
cld
ret
sub
and
icebp
test
add
pop
pop
or
sarl
enter
rolb
xchg
or
outsb
mov
jb
ret
cli
out
pop
mov
test
inc
pop
fsubl
cmc
cmp
pop
cmp
icebp
push
cmpsl
out
shll
stos
sbb
imul
inc
add
jmp
mov
daa
mov
xchg
jo
cmp
sub
or
out
xchg
int
xlat
cmp
arpl
mov
addr16
movb
rorl
jecxz
add
insb
fwait
sbb
hlt
loop
mov
in
push
adc
faddl
scas
in
and
and
mov
cmp
je
xchg
imul
xor
test
pop
shl
jae
loop
shlb
cli
imul
push
xchg
xchg
push
xor
test
lods
icebp
int
dec
daa
or
jo
mov
mov
repnz
cmp
shlb
dec
in
mulb
mov
repnz
aad
ja
insb
daa
into
cmp
add
mov
lret
mov
jbe
ds
add
je
push
ljmp
js
fcompl
or
and
scas
fs
aaa
fcoml
fcoml
jg
mov
mov
xorl
cmp
xorb
and
stos
push
jle
adc
fdivs
add
mov
mov
adc
test
cli
sbb
ja
and
ror
in
es
adc
inc
je
out
imul
sbb
fidivs
sbb
inc
lahf
jl
inc
clc
les
mov
insl
js
mov
xchg
mov
int3
int
dec
jmp
jge
adc
fstps
cmc
jmp
jg
jo
lock
lahf
sub
sub
test
push
add
bnd
xor
dec
bound
outsl
cmp
pop
pop
lret
add
xchg
je
push
jnp
cmpsb
decl
mov
jecxz
jle
icebp
mov
cmpsl
idivb
jecxz
xorl
jge
xor
xor
jno
lret
dec
xor
add
xor
jl
sbb
jnp
fisttpl
daa
inc
es
leave
jnp
jle
outsb
mov
lods
push
leave
dec
icebp
dec
lret
push
mov
adc
pop
add
imul
dec
lods
mov
loope
jg
sbb
jmp
push
sbb
and
shrb
je
pushf
ljmp
jb
push
xchg
imul
mov
inc
mov
std
and
mov
sbbb
push
inc
sarl
mov
or
out
orb
mov
das
leave
int
and
pop
out
dec
push
scas
addl
sub
dec
xlat
mov
xor
xor
lret
push
ret
sbb
or
scas
sbbl
push
shll
call
xor
shl
aaa
push
adc
jns
jnp
popa
sub
bswap
fldcw
rcrb
mov
inc
call
orl
outsb
lcall
pushf
mov
cmp
mov
jae
pop
dec
inc
cmp
icebp
fidivrs
ss
mov
push
popa
pop
pop
movsb
pop
ljmp
dec
mov
jnp
push
stos
dec
js
mov
pushf
cmp
test
cmp
pop
insl
mov
dec
loopne
mov
or
adc
ret
outsl
ljmp
iret
xchg
cli
adc
inc
cmp
pop
pusha
sbb
scas
push
pop
adc
dec
mov
dec
adc
cli
out
adc
cmpsl
outsl
inc
dec
inc
std
dec
test
dec
iret
jns
mov
mov
lea
es
cltd
scas
mov
dec
pop
cmp
test
mov
rcrl
mov
jns
das
dec
sub
addb
pop
fs
push
sbb
jno
fucomi
sbbl
iret
imul
sub
gs
test
cs
and
fiadds
ds
cltd
fstl
or
push
je
jo
loope
sub
push
js
cltd
jp
nop
daa
in
je
fucomp
scas
int
test
pusha
into
test
dec
shrl
sub
cwtl
ret
sub
negb
mov
or
inc
dec
and
mov
lods
push
or
sahf
dec
lret
cmp
js
clc
adc
popf
pop
out
fisubs
ljmp
lds
pop
lcall
mov
cmpsl
pushf
lods
repnz
scas
pop
and
mov
insl
push
sub
into
jg
mov
pop
sub
js
cli
jbe
es
jno
jl
stos
adc
les
out
insb
scas
clc
mov
push
dec
dec
mov
inc
pop
xor
insb
adc
xorl
push
xor
and
daa
and
cmp
punpckhwd
xchg
repnz
inc
fs
jnp
or
arpl
push
hlt
aad
loop
cmp
outsl
xchg
test
mov
add
cmp
inc
out
xchg
hlt
mov
xchg
mov
pop
pop
sub
dec
repnz
mov
sbb
pop
je
in
push
out
xchg
cmp
ss
jle
add
pop
push
fxch
mov
push
push
ds
and
sbb
jle
int3
pusha
in
add
ds
popl
xchg
inc
jg
mov
jne
push
pop
xchg
inc
call
pop
xor
mov
inc
ljmp
dec
popa
popl
cs
imul
xchg
iret
ret
add
dec
arpl
lcall
dec
test
jge
or
jl
adc
push
cmp
push
sbb
loopne
addr16
lock
fadds
mov
xor
mov
push
adc
sbb
mov
cmc
sub
sub
movsl
testl
sbb
sub
mov
inc
cmpsl
pop
lret
fwait
jns
and
dec
mov
pop
mov
imul
or
cmp
lods
ret
cltd
pop
sbb
mov
mov
cmp
xchg
stos
in
ret
rol
push
into
jge
mov
mov
pop
xchg
jnp
sbb
pop
mov
int3
xor
rclb
mov
arpl
notl
mov
or
xchg
imul
mov
and
adc
aaa
cltd
repz
adc
sbb
daa
adcl
push
pop
fnstsw
mov
mov
push
push
loop
pop
lcall
sbb
jne
fildll
push
mov
and
xor
dec
imul
outsl
xchg
shll
sar
into
mov
mov
lret
inc
sbb
leave
mov
mov
xchg
sub
sbbl
mov
push
sbb
sub
jne
jne
mov
icebp
cmc
imul
dec
xlat
sub
iret
or
aam
pop
jb,pt
addb
lds
mov
mov
mov
out
hlt
orb
outsb
stos
adc
cmp
jecxz
lods
adc
int
sbb
dec
or
push
inc
cli
mov
mov
lea
imul
sub
jb
sub
dec
xor
mov
mov
mov
in
bswap
and
mov
fsubrs
popf
pop
sar
arpl
out
ss
xor
out
roll
imul
and
test
imul
add
push
and
xchg
out
cmpb
stos
dec
jne
xchg
shll
scas
mov
lods
negl
fadd
fistpll
arpl
pop
fs
mov
test
adcb
aaa
jge
sysenter
aad
xor
cmp
jp
xchg
insl
adc
stc
test
mov
out
or
and
push
mov
icebp
dec
xorb
mov
sti
sbb
jl
std
movsb
ss
push
xchg
inc
stc
insb
int3
dec
orl
mov
pop
dec
cs
push
jmp
adc
data16
jno
mov
cmp
cltd
jo
roll
add
mov
cltd
iret
sbb
adc
je
dec
mov
sub
push
filds
xor
ret
push
jbe
cmp
enter
sub
jmp
sub
inc
es
sbb
orl
pop
arpl
dec
or
pop
mov
ljmp
or
cs
sub
jle
pop
push
aad
test
addr16
shll
or
insl
std
rorl
or
mov
pop
pop
out
add
xchg
add
testb
ds
lahf
mov
dec
mov
jb
or
ror
int
fmul
xchg
mov
mov
jle
jp
int3
cmpsb
fwait
imul
push
lahf
leave
adc
cli
stc
mov
dec
mov
stc
icebp
inc
iret
flds
sbb
xchg
fsubr
mov
sub
pop
jno
inc
aam
adc
repnz
xor
add
add
cmp
adc
pop
add
cmpsb
mov
loopne
mov
jno
lock
sarb
push
sahf
add
out
lahf
jb
call
mov
ds
movsb
iret
inc
jg
lahf
loop
ds
loop
mov
and
push
push
movsb
cmp
fnstcw
mov
loope
aas
jbe
jne
flds
ror
sbb
pop
xchg
add
rorb
cmc
insl
sbb
push
loope
pop
mov
push
stc
mov
nop
repz
arpl
jno
in
pop
mov
cwtl
xor
subb
int
adc
push
rolb
add
sub
push
push
fnstcw
lcall
mov
cmp
ret
pop
icebp
repz
aad
pop
or
fistps
push
inc
sbb
or
dec
outsl
inc
pop
subb
mov
clc
push
decb
fnsave
and
es
addr16
js
sub
mov
out
add
icebp
mov
xchg
pop
mov
xor
loopne
or
out
popa
cltd
into
scas
pop
mov
cmp
roll
mov
cli
push
inc
orb
adc
loope
push
cltd
in
dec
adc
sub
in
nop
add
ljmp
sbb
pop
jno
mov
lea
inc
cmp
aaa
ret
and
cmp
mov
mov
popf
sbb
sub
call
adc
orb
shll
popf
add
mov
imul
scas
inc
jo
mov
jnp
sbb
js
or
aad
mov
pop
psubsw
xchg
arpl
push
testl
xchg
into
cmp
adc
iret
mulb
inc
jecxz
jge
or
mov
iret
add
aam
imul
popf
add
pushf
mov
test
dec
iret
std
xor
jmp
mov
sub
xchg
adc
dec
cld
jb
ret
into
cmp
mov
and
jp
xor
mov
xor
das
xchg
test
inc
imul
dec
push
or
inc
fs
jb
cli
jae
mov
inc
fxch
xor
mov
and
fbld
dec
repz
mov
ja
inc
push
cmpsl
mov
out
xchg
dec
xlat
fwait
jp
mov
mov
push
mov
or
fisubs
pop
push
gs
pop
inc
mov
stos
scas
mov
int
lret
pop
jno
xchg
xor
xchg
outsl
test
xor
xchg
lcall
inc
negb
mov
es
fisttps
xor
push
or
movsl
sbb
xchg
popf
lret
pop
jl
sar
mov
notb
out
inc
or
inc
push
shll
std
xchg
fdiv
dec
in
dec
inc
fs
xchg
rorb
lret
pop
imul
lods
xchg
or
int
sbb
sub
dec
xorb
mov
imul
clc
movsl
divb
xchg
call
jne
xor
inc
add
add
andb
stos
fisubl
mov
shll
jne
popf
jg
jae
aad
pop
jmp
fisubs
mov
iret
int3
pop
fidivrs
loope
in
adc
shll
push
inc
sarb
xor
sub
xor
push
dec
pop
insl
xchg
jmp
test
sub
sub
mov
add
mov
mov
sti
lods
call
cmp
sbb
movsl
test
and
cli
push
mov
add
mov
in
mov
cmp
shll
movlps
pop
mov
out
jne
fcoms
int
pushf
add
xchg
xor
xchg
sbbb
ja
push
notb
rcll
lcall
subl
sbb
sti
mov
shlb
xchg
mov
pop
or
push
mov
push
sub
mov
cmp
sub
repnz
lcall
test
xchg
arpl
pop
daa
cs
mov
scas
mov
ret
cwtl
out
lcall
jge
lret
ss
jmp
dec
cmpsl
xchg
shlb
je
jmp
fistpl
xor
jge
sbb
jl
inc
test
sahf
xchg
lock
fadds
icebp
leave
imul
addb
and
xor
popa
jle
loopne
and
adc
jne
cmc
xor
popa
xchg
mov
fdivrl
inc
ds
mov
jbe
mov
fidivrl
rcrl
ss
xchg
push
mov
push
rorb
pusha
dec
icebp
js
push
mov
ficompl
cmp
test
adc
sti
mov
loope
cmc
mov
dec
jle
arpl
test
jmp
into
cmp
fisubl
scas
test
bnd
test
inc
cwtl
in
mov
pop
les
mov
xor
inc
mov
sbb
sbb
jecxz
or
mov
push
enter
cld
mov
inc
or
or
and
jecxz
mov
mov
decl
dec
nop
adcw
and
mov
inc
pusha
adc
sub
mov
inc
sarl
inc
loopne
insl
hlt
mov
shll
jp
scas
decb
loopne
pop
or
mov
push
cmp
out
xor
jo
lods
cli
jmp
add
or
jae
push
leave
mov
inc
adc
mov
in
icebp
dec
adc
outsl
imull
or
testl
mov
pop
jle
or
ss
sub
and
adc
fsubs
inc
xor
fldenv
inc
mov
adc
push
call
sbb
xchg
lret
outsb
xor
jno
xchg
cltd
movsl
jns
out
xor
mov
add
mov
hlt
leave
outsb
pop
xchg
das
mov
clc
jmp
sbb
jl
subb
cmpsb
popf
sbb
movsb
in
cmp
out
loopne
jae
jno
lds
sbb
loop
sub
adc
mov
es
out
std
adcb
pop
pushf
jo
shl
fucomi
inc
addl
cld
xor
leave
fwait
aas
pop
and
std
adc
cmp
ret
sub
je
lea
mov
lret
cwtl
out
in
clc
sbb
sbb
jns
push
outsl
sub
or
push
dec
and
mov
add
cmp
xor
aaa
mov
stos
filds
fnstcw
lods
stos
inc
mov
in
xchg
dec
das
std
sub
xor
subb
fistpl
adc
nop
pop
push
mov
jo
add
stos
and
pop
mov
inc
imul
fdivrp
mov
mov
inc
and
xchg
fisubrl
ds
es
mov
add
mov
jo
or
jno
and
inc
dec
icebp
sub
mov
mov
xchg
xchg
cmp
lods
push
mov
mov
mov
add
cmp
cwtl
add
push
lret
push
pop
movsl
mov
sub
or
mov
cli
test
pop
in
inc
pop
out
sbb
movsb
jo
xchg
sub
fadd
sub
fdivrs
les
mov
push
push
cmp
test
sbb
mov
and
ds
out
cwtl
test
xor
sbb
jmp
cmp
sbb
fisubrl
inc
movsb
xor
movlps
mov
shlb
push
enter
and
or
pop
pop
test
lock
enter
sbb
mov
iret
ds
imul
mov
andl
stos
iret
mov
ds
sub
sub
mov
cmpsb
ret
outsl
mov
pop
pop
mov
add
jb
jnp
pop
in
cmp
test
push
loopne
add
rol
enter
dec
sbbl
fistps
ljmp
test
insb
mov
daa
jecxz
inc
mov
das
push
aad
mov
dec
adc
inc
in
cli
push
xchg
or
lods
fdivl
jg
push
mov
inc
int
int
sbbl
add
in
filds
jno
aas
hlt
aam
out
jo
movsb
negb
jo
mov
scas
test
and
push
dec
and
and
add
mov
and
xor
repnz
lds
ret
cmp
sbb
and
loop
cld
mov
xor
sub
inc
jbe
orl
xchg
insb
and
dec
dec
cmpsb
push
cmpsb
aad
pusha
lock
js
test
or
adc
ret
push
loop
stos
jo
xlat
mov
cmp
loop
inc
mov
or
xchg
mov
out
addr16
pop
mov
jg
sbb
daa
xchg
pop
xor
ficompl
shll
add
leave
mov
jge
arpl
add
leave
cmp
mov
loopne
xchg
js
cmpsl
cmc
xor
mov
push
lahf
jo
pop
add
pop
out
jg
int3
jg
jae
test
scas
enter
or
adc
out
mov
loope
mov
popa
cmp
xchg
mov
mov
je
sub
stos
sbb
jae
test
out
stos
in
xchg
cmp
loop
jb
popf
xchg
hlt
rorb
xor
adc
movsb
fstpt
stc
lock
popa
pop
mov
cmpsb
pop
mov
fsts
xchg
fcmovnu
bound
push
lahf
jge
dec
sbb
test
mov
push
fistpl
pusha
aam
xor
mov
movsl
add
popw
hlt
movsl
std
aaa
and
xchg
lock
and
psrld
cmp
mov
push
loop
mov
repnz
inc
adc
pop
xor
mov
lods
test
mov
loope
push
repz
mov
push
mov
xchg
fcmovu
movsl
xorb
xlat
jne
mov
enter
cwtl
pop
popf
adc
pop
ljmp
jo
les
imul
mov
xchg
cld
adc
xor
iret
js
pushf
push
adc
or
sub
lock
pusha
adc
shrl
ret
or
mov
xor
jno
sbb
mov
push
or
and
mov
repz
out
mov
sbb
in
jecxz
lret
fidivrs
fldt
and
nop
add
mov
jle
out
jge
daa
out
sub
push
pusha
pushf
cmp
notl
imul
jb
mov
dec
push
push
dec
jb
jno
hlt
out
dec
sub
fwait
in
das
mov
dec
mov
add
loop
in
inc
xor
mov
sbb
pusha
out
xlat
xchg
and
arpl
scas
mov
ja
sbb
es
test
jg
stos
popa
mov
ret
int
call
pop
fwait
test
iret
fdivr
loope
add
aam
outsl
subl
inc
push
jno
dec
add
xchg
ret
movsb
adc
sub
xchg
arpl
sbb
and
inc
in
pop
sbb
ds
lds
lcall
mov
dec
clc
lahf
jmp
push
hlt
cmp
ret
mov
stc
and
push
sbb
mov
mov
and
sub
inc
push
add
in
adc
popa
movsb
pusha
adc
icebp
jnp
jae
insl
xor
adc
out
imul
and
outsl
lock
push
push
dec
arpl
and
test
loopne
movsl
dec
dec
shll
adc
cli
les
or
cmp
sahf
and
lret
shll
jmp
out
out
inc
push
lcall
cwtl
lret
pop
hlt
mov
cmp
mov
push
mov
inc
mov
push
mov
call
jne
jne,pn
sub
cmp
stc
insl
fwait
sub
pop
xlat
aas
sub
fwait
out
mov
dec
mov
shll
and
mov
es
cmp
pop
out
sbb
std
mov
dec
outsl
and
pop
sbb
cld
sarb
out
pop
icebp
fsubr
shlb
sarl
outsl
daa
stos
movsb
sbb
fwait
stc
orl
or
cmp
repnz
imul
daa
cmpsb
test
adc
sahf
dec
sbb
insl
icebp
nop
mov
or
xchg
jnp
cmp
xchg
icebp
sbb
bound
mov
pop
ret
out
fists
mov
push
mov
inc
es
aam
jl
jb,pn
add
frstor
push
outsb
rcll
push
cli
cwtl
lds
gs
adc
mov
mov
sub
sbb
cmp
xchg
push
fnsetpm(287
and
lahf
ret
fnsave
pop
aas
into
in
mov
imul
pushf
jno
and
test
mov
stos
mov
jle
stos
add
or
dec
sbb
add
mov
push
pop
cmp
xchg
arpl
and
adcl
push
dec
xor
loop
loopne
mov
pop
ss
shrb
outsl
mov
icebp
push
cmpb
cmovs
dec
adc
adc
jmp
sbb
mov
loopne
inc
lret
cmp
xor
inc
les
dec
xchg
hlt
icebp
cltd
lods
mov
stos
pop
cmp
movsl
xor
int
jg
clc
imull
or
pop
jle
mov
movsl
pop
pop
jns
add
out
lea
js
test
adc
mov
lods
dec
mov
jb
sub
jbe
mov
push
aaa
pop
int3
repnz
filds
aas
jg
inc
jle
add
mov
ret
mulb
dec
lods
int
xor
arpl
jne
pop
aam
loope
pop
jl
lds
lock
jl
mov
in
mov
out
loopne
sti
out
xor
out
subb
add
add
xchg
push
xchg
int3
loop
cmpsl
sbb
jmp
or
cwtl
out
repnz
lret
shlw
push
jne
testl
add
mov
inc
mov
es
mov
and
mov
sub
sbb
shrb
imul
xchg
mov
push
pop
pop
fisttpl
ds
ja
pop
jno
inc
lahf
jbe
cmc
xchg
lret
or
dec
mov
push
adc
inc
stos
addr16
xor
cs
mov
popa
xchg
push
xor
into
ds
pop
dec
fsubs
test
fildll
test
add
das
adc
xchg
popf
lock
sbb
hlt
cs
adc
lea
mov
leave
add
pop
or
sub
add
xor
mov
cld
cmp
jae
sbbb
mov
icebp
mov
into
sbb
xchg
jle
aaa
pop
or
pop
sahf
push
lahf
pop
sub
jp
aam
pop
or
enter
push
jmp
mov
add
hlt
push
shrl
and
inc
jle
mov
out
imul
pop
repnz
cli
pop
jbe
and
pop
add
movsl
pop
jmp
inc
in
js
bound
adc
pushf
jne
das
in
mov
adc
sbb
movsl
cmpsl
xchg
filds
outsl
add
xchg
mov
mulb
clc
push
outsb
lods
jns
jmp
arpl
jo
in
xor
push
mov
cs
sarb
hlt
mov
mov
jno
lcall
imul
push
and
leave
and
lock
push
xchg
inc
adc
jl
iret
mov
aad
movsl
fadds
mov
scas
movsl
cwtl
andb
and
push
cvtpi2ps
pushf
ljmp
int
mov
test
or
mov
loope
imul
lahf
push
js
orl
pop
je
adc
pushf
cld
inc
or
call
xchg
sahf
push
outsb
inc
and
pop
dec
jmp
cmp
test
push
shlb
xor
cmp
dec
fs
in
clc
pop
jge
mov
mov
push
jo
xchg
mov
out
dec
stos
inc
imul
sbb
dec
mov
lea
mov
ja
shlb
out
lods
rorl
lcall
cmp
fldcw
pop
cmpsl
and
dec
scas
xor
in
iret
gs
jecxz
mov
push
aam
dec
ljmp
les
loop
mov
mov
imul
mov
pop
cmovne
stos
arpl
push
ljmp
movsb
dec
push
add
pop
dec
push
bound
in
test
pop
add
pop
lret
mov
xchg
adc
sub
lods
and
out
lods
inc
adc
jnp
loopne
in
fcompl
pop
push
dec
arpl
xlat
arpl
push
jg
jmp
pushf
cltd
jp
mov
jbe
pop
gs
decl
testb
push
sub
inc
or
jecxz
cmc
jp
insl
jmp
mov
ret
jnp
js
hlt
sub
addr16
pop
and
insb
std
xchg
pusha
adc
sti
test
push
sbb
lret
pop
xor
shll
jle
in
and
leave
inc
dec
push
je
stos
adc
mov
and
out
sub
lds
xor
add
ffree
pop
andl
into
scas
in
in
dec
push
cmpsl
repz
jns
fdivl
mov
loop
repz
and
mov
pop
or
inc
ljmp
xchg
je
movsb
mov
pop
repz
loope
pop
adc
push
loope
pushf
pusha
fst
pop
mov
lahf
ss
mov
sbb
push
pop
push
shrl
pop
iret
mov
ret
xchg
sub
pop
or
nop
cmp
aam
inc
addr16
into
stc
out
and
and
fcmovne
sbb
dec
cmp
inc
arpl
faddp
xor
jg
sbb
add
cmp
xor
jae
jns
mov
xchg
pop
cltd
rcrb
mov
lds
adc
lahf
jl
lahf
popf
push
aam
cmpsl
insb
mov
adc
ret
mov
jmp
sub
dec
pop
push
shll
rcrl
ljmp
lock
unpcklps
pop
push
mov
test
in
dec
sub
mov
sub
sbb
sub
cmp
ror
inc
sahf
enter
or
sbb
insl
rcrb
cmp
mov
ret
test
stc
and
call
aas
movsb
ffree
xor
nop
jmp
out
es
stos
mov
push
outsl
and
popw
xor
mov
outsl
aaa
std
aaa
lcall
pop
jns
add
jecxz
xor
std
push
sbb
or
jle
adc
pop
rcrb
js
dec
sub
xchg
add
mov
or
inc
pop
mov
or
popf
hlt
testb
roll
sahf
divl
int
jo
inc
inc
in
jnp
mov
sar
mov
sahf
and
xchg
movsb
data16
fists
into
push
push
int
aad
sub
cli
sub
sub
ja
mov
or
inc
arpl
aad
xor
lahf
or
fnstsw
adc
mov
cmp
jae
pop
xorb
test
mov
jle
int3
ret
rorb
idivb
inc
and
xor
loope
es
pop
or
inc
jbe
inc
test
in
jno,pn
movsb
imul
push
or
push
inc
pop
pop
dec
sub
push
mov
jbe
mov
cli
inc
out
add
jno
cmp
cmc
fisubrs
mov
push
sub
test
jne
andb
sbb
sub
int3
xchg
xchg
sub
push
adc
adc
dec
cmpsl
pop
arpl
inc
clc
cwtl
dec
mov
mov
jl
andl
add
xchg
jo
push
and
cmp
sbb
shrl
inc
xchg
and
popa
jbe
mov
fildll
lods
sub
mov
jp
dec
cmp
mov
fisubrs
les
mov
inc
pop
cli
imul
mov
mov
popf
pop
add
xchg
notb
stos
xchg
mov
insl
loopne
out
mov
shrb
mov
packuswb
lods
leave
loopne
stos
addr16
js
pop
xchg
bound
sbbl
xor
mov
test
and
leave
clc
cmp
pushl
xchg
mov
pushf
js
xlat
cltd
icebp
sti
sub
loopne
std
sbb
clc
mov
jbe
adc
mov
push
push
bound
stc
sarb
movsb
xchg
jb
xchg
xchg
testl
ss
xchg
jmp
push
aad
mov
pop
scas
dec
mov
xchg
std
outsl
icebp
movsb
mov
lock
out
fildll
add
or
pop
insl
cmp
aaa
push
mov
xchg
xchg
insb
fcmovnb
ror
lret
xchg
sarl
adc
jmp
ss
gs
mov
cld
stos
xor
sbb
or
inc
dec
mov
popa
lds
out
pop
mov
lcall
ja
pop
sub
mov
aas
sets
aas
or
add
pop
adc
lret
cmp
jbe
daa
std
ljmp
ret
mov
cmpsb
sti
sub
fcompl
mov
std
jle
cmp
adc
sbb
jns
icebp
repnz
cli
fimull
dec
cli
ja
iret
lret
insl
lods
sbb
cmp
cmpsb
push
sarl
cmp
out
mov
sarl
jmp
inc
add
jbe
outsb
lret
fs
xor
hlt
popl
mov
mov
hlt
add
repnz
xchg
test
dec
xchg
push
repz
jg
adc
push
adc
jg
scas
or
pushf
mov
xor
push
xor
sbbb
mov
test
jns
adcb
cmp
lret
push
dec
std
cmp
sti
xor
xlat
cmp
mov
std
sub
jmp
leave
subb
ja
lods
lds
test
jg
sub
jne
fistpl
popf
leave
loope
inc
mov
xor
xchg
fists
sti
loop
pop
notb
leave
js
lock
out
jns
cwtl
sbb
mov
adc
dec
add
push
nop
bound
xchg
stos
adc
ficoms
sub
imul
cmp
aam
js
int
mov
sbb
push
mov
ja
mov
dec
push
insb
pop
jno
sub
ljmp
push
xor
fidivl
imul
dec
and
mov
push
loope
jg
cmpsl
std
ret
ss
mov
mov
in
ljmp
inc
or
inc
inc
jecxz
mov
out
mov
fimull
pop
int3
pop
inc
xor
xor
std
add
dec
cmp
insl
lods
daa
lcall
mov
lea
xchg
dec
aam
imul
dec
out
lret
sbb
pop
push
pop
repnz
mov
mov
clc
sub
jae
xchg
jnp
daa
jo
pop
dec
sub
test
ror
jne
cltd
pop
pop
rep
sub
rolb
imul
jge
test
dec
pop
mov
inc
lds
push
mov
and
lahf
mov
xchg
adcl
fstpl
cmpb
sti
mov
std
insl
cmp
test
mov
adc
lods
adc
or
and
xor
mov
mov
fcomps
repnz
in
ja
ret
ljmp
sbb
inc
movsl
mov
insl
out
xor
sbb
leave
jae
popf
mov
add
int3
mov
dec
inc
lret
loop
or
sub
cli
in
test
pop
shrb
mov
loop
popl
xor
aad
iret
pop
jnp
mov
aas
mov
xchg
or
fildll
cmpsb
int3
cmc
addr16
pushf
mov
cmp
pushf
push
jle
jge
int
sbb
xchg
fimuls
andl
mov
xor
sbb
bound
and
and
jg
cmp
pop
in
or
fidivrs
mov
fwait
lahf
add
mov
adc
push
repnz
add
xchg
jno
stc
sbb
mov
mov
imul
insb
leave
mov
add
arpl
fwait
xor
rcr
adc
test
call
cmp
dec
mov
ret
pop
shll
ret
lcall
stos
rcll
call
vucomisd
scas
rorl
sub
lods
test
xchg
insb
mov
jl
push
mov
mov
mov
add
popa
sbb
nop
mov
popf
push
mov
sbb
adc
fwait
mov
cmp
jnp
movl
dec
and
or
dec
popf
add
pop
fldcw
outsb
xchg
add
fcomip
or
pop
add
sub
outsl
mov
aaa
jg
inc
inc
pushf
mov
lcall
push
bound
into
sub
das
jne
pop
outsl
sbb
lret
hlt
or
mov
test
jbe
pop
cmpsb
icebp
adc
fsubrs
push
and
cld
add
sub
inc
es
xor
inc
xchg
pop
inc
mov
adc
imulb
cmp
push
outsl
bound
jg
xchg
inc
push
dec
incb
mov
xchg
out
mov
gs
sbb
out
lahf
fdivl
dec
push
sar
imul
pop
pop
dec
mov
arpl
mov
fcomip
add
cli
xchg
adc
mov
iret
fbstp
lods
inc
xchg
enter
movsl
mov
adc
ret
test
popf
lods
mov
cmp
add
gs
test
aam
jmp
adcl
in
jne
repnz
mov
inc
mov
push
or
pop
add
inc
cli
mov
enter
cmc
push
test
mov
jecxz
xor
stc
cld
mov
pop
push
mov
rorb
lods
cmc
inc
adc
cltd
sbb
sbb
rcr
aaa
jecxz
cbtw
scas
ss
repnz
int3
loope
adc
cwtl
pop
xchg
mov
mov
mov
orl
fidivs
and
into
sbb
out
lahf
push
xchg
es
je
mov
lock
rclb
push
notl
scas
cmp
pop
aad
xor
adc
cmp
push
mov
jb
jecxz
push
lret
loopew
ds
int
pop
push
add
xor
clc
adc
cli
ds
sbb
and
je
leave
stc
mov
push
jecxz
and
and
inc
aaa
insl
lods
xor
xor
add
xor
call
jo
inc
adc
jecxz
mov
popf
popf
popa
cmp
cli
mov
ljmp
mov
inc
cmpb
data16
fiadds
test
sbb
arpl
pop
arpl
adc
sub
jo
adc
bnd
rorb
test
mov
sub
or
adc
sbb
cmc
push
ret
inc
lds
cmp
xlat
lds
out
leave
push
jmp
int3
sub
xchg
mov
inc
ret
lcall
pop
ljmp
mov
cmpsb
daa
and
adc
lret
jns
sub
aaa
or
fldcw
cmp
sbb
jb
stos
ss
imul
xchg
mov
dec
adcb
adc
das
lret
enter
jmp
pop
cmp
mov
mov
in
mov
adc
and
mov
xchg
ds
and
inc
pop
scas
push
adc
rorl
fmuls
test
dec
shll
hlt
dec
aam
lret
addr16
aaa
pushf
lds
sarb
aad
adc
push
lret
lret
outsl
rcrl
xchg
sub
test
push
sbb
repz
in
add
imul
push
rclb
push
cmp
les
mov
fisttps
repz
ds
and
loop
adc
cmp
jo
cmp
fdivs
movsb
mov
lret
out
jo
shlb
test
xchg
pop
add
dec
lods
adc
mov
push
imull
inc
sub
jbe
stc
inc
mov
jb
or
jno
js
sbb
lods
cmc
cli
addl
nop
aad
movsl
mov
jbe
stc
xchg
mov
adc
xchg
add
cwtl
daa
ret
pusha
bound
jo
sub
in
add
test
cmp
mov
pop
mov
or
fdivs
add
cmc
sub
fists
pop
mov
stos
xchg
cltd
push
xchg
dec
jg
pop
clc
push
or
push
xchg
add
xor
cs
push
pop
rcrl
sbb
imul
jne
int3
sbb
jle
inc
mov
mov
lods
movsl
or
sub
pop
into
mov
jg
int
fndisi(8087
jecxz
das
repnz
sbb
lock
cs
sbbl
stos
in
es
ja
andb
repz
aas
jno
in
sub
mov
lods
sbb
lods
or
cmp
sbbb
mov
test
scas
jp
inc
push
xchg
imull
cmp
loope
ja
shl
push
cmpsl
add
test
es
xor
movsl
outsl
leave
clc
nop
lock
jae
and
or
mov
mov
xchg
aam
add
dec
jg
push
adcl
dec
dec
xchg
sbb
icebp
out
push
int
insl
int3
icebp
sbb
inc
loop
popf
cmpb
cs
mov
add
addr16
push
clc
add
mov
mov
fidivl
pop
sub
lret
pop
mov
mov
xor
mov
arpl
dec
out
test
push
addl
cmp
lret
pop
std
ret
addl
jbe
sbb
sub
jb
xchg
adc
dec
mov
xor
sbb
push
adc
dec
inc
xorl
sbb
daa
out
jns
or
mov
clc
cmp
add
test
shl
icebp
cmp
test
cmpsl
aaa
xchg
sbb
daa
js
push
sub
movsl
cld
or
and
adc
xchg
cmp
jle
dec
dec
push
sub
xor
divl
jg
cmp
sbb
adc
mov
ret
dec
jl
stc
adc
enter
mov
mov
jl
int
test
inc
push
push
in
mov
and
insb
xchg
ret
jne
int
inc
test
push
and
push
xchg
adcb
les
int
dec
adc
std
and
fisubl
inc
jmp
repz
jae
dec
rclb
jecxz
mov
outsl
es
sbb
mov
lds
pop
mov
and
dec
jb
jno
loop
inc
mov
mov
popf
lods
test
mov
stos
bnd
aas
add
xor
aam
jns
mov
adc
pop
or
dec
popf
ljmp
inc
sti
dec
mov
adc
fs
sub
fidivrs
xchg
mov
jns
jmp
or
mov
addr16
push
jo
aaa
out
pop
ja
mov
shll
mov
mov
std
cmpsl
push
bound
and
fsts
sub
mov
jecxz
xlat
dec
ds
adc
mov
call
adc
lods
in
adc
xchg
cs
rorb
lret
daa
int3
lahf
stos
das
push
int3
js
jecxz
shlb
cmp
cmp
inc
popf
enter
jmp
imulb
pop
xchg
inc
icebp
jle
mov
shrl
int
fwait
jmp
ja
fstp
mov
mov
in
adcl
test
ja
add
cmp
fs
jo
lahf
ret
push
or
shrl
push
jae
add
scas
dec
xchg
or
cmpsl
cli
das
aam
shll
adc
sar
add
out
aaa
cmp
lea
int
sarb
xchg
mov
outsb
dec
js
push
xor
mov
dec
imul
jnp
dec
mov
sahf
outsl
out
mov
push
adcl
fdivrl
fstps
add
loope
in
int
pusha
call
mov
in
mov
pop
sbb
movb
inc
mov
lds
jb
and
or
sub
push
insl
or
mov
popf
sti
dec
sbb
jb
add
stc
repz
aad
cmp
dec
and
int
cmp
ljmp
insl
dec
and
xorl
pop
jne
lea
fsts
flds
aam
lcall
lods
ds
movsb
shrl
inc
outsb
idivb
fs
push
out
sub
jmp
insl
call
add
scas
sub
ret
push
sbb
dec
repz
aas
dec
jo
mov
cmp
adc
cmp
ret
ficompl
pop
dec
inc
leave
adc
cmc
cld
addr16
dec
mov
add
jmp
mov
shll
add
xor
push
inc
mov
lret
mov
jbe
sarl
fidivrs
and
jecxz
lea
addr16
pop
xchg
pop
or
lret
xchg
jnp
add
push
leave
pushf
imul
or
fwait
or
out
pop
lods
lods
or
ljmp
mov
cwtl
lcall
inc
add
dec
push
aaa
or
push
push
clc
mov
test
and
cmp
stc
ficoms
aas
cmp
or
roll
sub
fnsave
mov
xchg
aad
in
xchg
inc
out
out
jecxz
jmp
mov
lds
push
pop
mov
cli
or
sub
cmpsb
xchg
mov
rolb
jl
jle
push
mov
jbe
sbb
clc
xchg
dec
je
add
mulb
xchg
sub
cmp
mov
insb
pop
addl
and
std
loope
sbb
test
fimuls
cmp
mov
aad
and
adc
cli
pop
and
mov
aad
das
and
jl
nop
roll
mov
imul
xchg
pop
sub
lods
push
loope
cmpsl
lcall
jo
pop
sbb
stc
pop
dec
jns
mov
sub
scas
dec
push
arpl
lods
push
adc
mov
cld
inc
lret
inc
cs
aaa
mov
fsubs
dec
sbb
fiadds
push
popf
mov
popl
aad
filds
and
ljmp
addb
push
fsts
test
push
mov
push
orb
aas
inc
ret
xchg
fisttps
mov
fistl
push
into
mov
mov
dec
sbb
jne
mov
jns
add
pop
lods
mov
xor
jle
jb
xlat
aad
pop
sbb
sti
jmp
xchg
dec
jb
xchg
addr16
iret
push
push
jno
sub
xlat
into
or
add
cmp
mov
stc
repz
ss
push
cli
sbb
enter
cmp
mov
ja
inc
cli
ret
into
mov
mov
jp
dec
mov
mov
dec
in
and
fisttps
in
xor
addr16
cmp
dec
stos
add
je
outsb
dec
mov
push
xchg
aaa
push
mov
int3
inc
je
cmp
and
mov
cmp
inc
mov
sbb
mov
js
or
fcoms
mov
jp
stos
sub
lcall
ds
ljmp
ret
fmuls
xor
mov
xchg
in
adc
and
jle
sti
call
dec
mov
jl
aam
push
sahf
outsb
mov
jp
popa
repnz
imul
pop
icebp
in
xchg
jp
daa
xchg
pop
insb
sbb
mov
sbb
inc
push
aas
out
xor
cltd
mov
cltd
insl
pop
outsb
adc
arpl
push
imul
lea
and
push
jmp
stos
mov
push
mov
aad
ss
mov
fisttpll
inc
mov
movl
inc
adc
iret
xchg
sbb
add
and
dec
into
loope
xchg
xchg
pop
cld
cmp
popf
xor
push
dec
cmpsl
xchg
xchg
frstor
xchg
inc
jbe
jbe
lret
xor
push
test
cmp
xchg
sub
daa
dec
pop
inc
movsb
add
push
add
leave
rcrl
jne
fwait
mov
mov
and
adc
and
loop
jne
jae
pop
and
sub
repnz
les
add
das
push
and
stos
test
and
pop
cmpb
es
dec
pop
mov
dec
dec
outsb
and
loopne
mov
out
push
push
xchg
aas
pop
outsl
into
jle
jg
pusha
mov
mov
jb
mov
mov
clc
adc
rolb
cmp
arpl
test
or
xchg
stc
jp
push
jne
mov
addl
mov
adc
in
cld
test
and
mov
sbb
das
sub
pop
and
mov
jg
ja
sub
cmp
sbb
data16
push
bound
sarl
std
js
push
and
lahf
add
cmpsl
mov
and
std
mov
mov
imul
mov
lods
and
cmpl
icebp
mov
pop
test
int3
jmp
stc
xchg
dec
inc
inc
pusha
hlt
lcall
mov
loop
test
cmp
sbb
xor
cmpsl
mov
xchg
adc
cwtl
ret
gs
ret
jne
mov
push
aam
fidivrl
sbb
js
les
add
sbb
mov
push
sub
shrl
pop
cmp
push
adcb
addb
pop
imul
dec
and
insb
mov
mov
aaa
jmp
push
mov
xor
push
or
or
aam
adc
loop
stc
cltd
push
loopne
decb
pop
mov
xchg
imul
iret
push
orl
popf
add
ljmp
out
adc
xor
cmp
fnsave
xor
aaa
jb
mov
stos
insb
or
popa
and
mov
adc
push
int3
add
xlat
sub
adc
movsb
push
dec
mov
mov
pop
push
sti
test
cltd
cwtl
cmp
xor
pop
orb
and
push
xlat
sti
arpl
cmc
test
cmp
into
push
gs
inc
xchg
loopne
inc
mov
imul
loop
iret
lret
sbb
out
and
inc
leave
push
sub
dec
push
pop
inc
cli
mov
shlb
dec
test
mov
push
enter
sbb
leave
add
cmp
in
dec
addr16
fwait
call
mov
fisttps
test
sub
cwtl
xor
xor
loope
scas
sub
cmp
and
stos
cmc
les
ja
dec
jnp
fucom
out
fucom
adcb
addb
jp
add
mov
insb
push
iret
xor
iret
adc
rol
add
popa
rorl
ret
or
cmpsb
or
stos
cwtl
jne
gs
rcll
out
hlt
call
mov
pop
lcall
test
out
gs
add
pop
enter
fcomps
aaa
je
pop
jne
sbb
leave
mov
scas
adc
loopne
out
mov
jle
mov
ret
and
inc
ds
rorb
and
cmp
pushf
push
xor
hlt
gs
mov
stos
inc
outsl
shr
mov
jae
fldcw
or
scas
jl
shlb
inc
cwtl
jl
inc
lcall
jecxz
sbb
xchg
lock
push
daa
orl
mov
and
adc
mov
rclb
lret
inc
mov
addr16
and
xor
jno
test
test
mov
xchg
push
mov
sbb
call
cmp
lods
push
add
fmuls
cltd
enter
push
in
mov
mov
mov
push
dec
mov
sub
dec
jno
and
ret
adc
xor
xor
imul
addl
icebp
push
loop
repz
rolb
hlt
dec
out
lret
adc
or
adc
adc
pop
frstor
rclb
movntq
mov
sub
mov
in
push
lock
repnz
mov
movsl
sbb
xor
leave
scas
in
and
jge
movl
add
mov
jg
sarb
mov
lock
jno
mov
cs
bound
sub
xor
repz
loope
ja
lods
jbe
dec
mov
mov
int
mov
lock
sti
or
mov
pop
add
push
and
push
lahf
dec
les
cmp
mov
pop
xor
mov
push
out
mov
jp
sti
call
lods
inc
dec
idiv
mov
xor
inc
in
add
mov
iret
addr16
dec
fs
mov
xor
fdivrl
pushl
xchg
mov
mov
test
mov
pop
sbb
jp
inc
jecxz
testb
jecxz
fnclex
jp
push
pushf
arpl
leave
inc
arpl
jns
and
and
xchg
xchg
xor
lods
jmp
inc
pop
mov
cwtl
in
sub
xor
cmp
fidivl
sti
push
inc
imul
in
pop
add
inc
jp
ret
out
fmull
aas
test
mov
inc
pusha
mov
push
sub
je
mov
dec
scas
sbb
mov
cmp
mov
mov
sbb
test
pushf
xchg
iret
orb
push
js
aas
push
mov
xchg
jns
sub
sub
and
ffree
imul
enter
ja
jmp
aad
out
mov
mov
add
sbb
cli
je
add
call
sarl
scas
mov
mov
sbb
jb
pop
pop
mov
cwtl
cwtl
push
dec
mov
dec
cmp
dec
mov
and
inc
aas
test
dec
jmp
cmc
adc
mov
mul
mov
and
pop
xchg
lahf
sbb
jbe
pop
ss
jne,pt
ja
bound
bound
pminsw
out
lcall
xor
aas
xor
std
cmp
pop
icebp
dec
mov
jae
test
pusha
ds
xchg
std
push
jnp
sbb
adc
dec
dec
test
or
mov
inc
sub
mov
push
mov
mov
xor
mov
bound
clc
arpl
icebp
push
mov
imul
xlat
lock
adc
les
add
xchg
fs
lret
mov
sbb
inc
pop
mov
scas
lods
jle
xor
sub
ss
fisubrl
inc
adc
mov
mov
jns
in
pushf
mov
and
adc
mov
shlb
xchg
xchg
sub
cmpsl
int3
shll
mov
repz
loopne
repz
jb
xor
leave
mov
aas
dec
jnp
aaa
sub
jnp
inc
orb
or
mov
or
cltd
and
mov
add
in
addr16
lock
pushf
add
in
sub
push
pop
dec
les
mov
push
xlat
mov
mov
cs
jp
test
aad
pop
adc
jecxz
daa
fistl
imull
jge
jno
lahf
sbb
lcall
mov
cmp
sbb
mov
mov
je
push
xchg
imul
adc
popa
or
jl
enter
call
xor
or
ss
mov
mov
pushf
popf
icebp
data16
dec
or
adc
es
int3
aam
push
incl
xchg
push
pop
mov
jne
out
mov
shl
fisttpl
dec
sbb
imul
fistl
sub
ficoml
ss
sub
lock
cmp
mov
or
divl
xor
jmp
jl
pop
sub
arpl
add
mov
and
lea
sub
out
dec
mov
jo
or
sub
rcr
test
aas
out
inc
imul
clc
pop
cld
cmpsb
daa
pop
xchg
cmpsl
out
test
inc
mov
sbb
in
inc
arpl
adc
jmp
and
inc
repz
lds
adc
add
dec
mov
sub
xor
cmp
shlb
leave
push
pop
xlat
jecxz
mov
lret
inc
xchg
cwtl
and
jg
jb
mov
pop
aad
test
je
add
xor
mov
and
mov
mov
subl
mov
addl
outsl
test
js
inc
es
pop
popf
outsb
dec
xchg
pop
rorb
pop
fcomi
cltd
enter
jo
sub
mov
outsb
das
ret
popa
pop
movl
loopne
clc
les
mov
add
call
mov
xchg
mov
fnsave
inc
pop
dec
xor
into
stos
or
das
das
lahf
ljmp
xchg
add
inc
lret
mov
rol
mov
aad
inc
fbld
arpl
xchg
jae
int3
sbb
inc
mov
fidivrs
adc
jge
mov
movsb
fwait
in
xchg
or
lock
push
loope
inc
jno
xorl
xchg
mov
lds
mov
das
sbb
mov
jns
jl
pop
jno
add
cmp
dec
push
out
add
jge
dec
add
pushf
jge
out
mov
sar
add
cmp
sarl
insb
sub
mov
dec
add
mov
jno
adc
aam
xchg
cmp
jno
xchg
hlt
rcll
outsb
sti
pop
mov
rol
push
jmp
mov
mov
jnp
and
and
push
mov
adc
lcall
push
out
jnp
fildl
cmp
decb
xor
mov
fldenv
mov
stos
add
in
inc
dec
sbb
inc
add
push
cltd
into
sbb
lods
mov
shr
js
xor
out
lret
inc
add
dec
xor
pop
mov
jg
test
xor
pop
mov
mull
cmp
cmp
testb
pop
faddl
andb
in
mov
test
jecxz
dec
cltd
outsl
jle
push
addr16
scas
adc
jno
loop
aam
adc
lock
jbe
push
cltd
mov
sti
inc
nop
push
jecxz
inc
jno
ret
inc
adc
into
fcoms
push
loope
stos
sub
nop
clc
es
xchg
or
aas
cs
loope
mov
call
jo
lds
fcoms
mov
cs
sbb
push
jns
into
faddl
add
adc
and
popa
mov
mov
movsb
dec
js
test
pop
testl
loopne
jnp
lcall
daa
lret
jecxz
cs
sbb
enter
add
xchg
jo
jl
rorl
cli
sbb
xchg
lods
out
and
add
out
sub
mov
rcrl
jb
in
pop
or
mov
lahf
mul
sub
test
xor
popf
stos
mov
pop
iret
repz
repz
add
sbb
dec
out
repz
test
inc
xor
psrlw
lahf
lret
sbb
sbb
std
data16
inc
add
and
sar
push
pop
cmp
dec
push
in
ljmp
xchg
aas
pusha
mov
into
inc
dec
sahf
add
insl
push
shlb
pop
test
insl
push
stos
popa
test
popf
and
jne
pop
fwait
shll
gs
shlb
cmpb
test
jb
fistpll
push
cmp
xchg
rcrl
lret
adc
jae
dec
daa
das
and
jge
pop
mov
xchg
push
push
mov
sub
cmpsl
push
xchg
jns
dec
xchg
add
out
cmp
xchg
jbe
test
out
xchg
sarb
push
cmpsb
inc
or
jne
push
rol
insb
fisttpl
push
adc
jno
mov
sbb
adc
fucomp
xchg
or
adc
adcl
sub
arpl
das
aas
scas
mov
jmp
test
lock
pop
and
mov
popa
xor
pop
jnp
shlb
cmp
aaa
or
call
test
inc
out
lcall
inc
pop
scas
mov
dec
mov
or
movsl
ss
arpl
loopne
adc
aas
pop
out
scas
or
push
pop
sbb
hlt
out
in
pop
inc
ficoml
adc
pop
gs
pop
xchg
or
jl
aas
push
adc
jge
sbb
sub
fildl
jg
dec
lsl
lods
jmp
xor
xchg
add
fnstsw
cmp
imul
mov
pop
lahf
sbb
es
outsb
jb
pushf
std
jp
fwait
and
inc
lods
sbb
dec
jge
lods
in
test
push
sub
push
js
sti
outsb
movsb
cmp
xchg
push
sbb
mov
test
pop
mov
sbb
adc
jno
sbb
rorl
mov
js
loop
ret
jmp
cmp
mov
rorb
cli
xchg
fistl
das
xchg
outsb
jne
sbb
das
mov
scas
js
sbbl
mov
pushf
addr16
cmp
rclb
mov
addr16
mov
push
inc
test
sub
lcall
fadd
sub
aas
orl
inc
dec
sbb
jle
push
sub
and
cmp
mov
adcb
jno
pop
mov
mov
ja
pop
shl
jecxz
fildll
sbb
adc
xchg
insb
adc
sbb
test
ret
push
stos
cmpb
cmp
dec
adc
mov
mov
adc
adc
or
jp
stc
push
adc
sbb
inc
push
call
mov
popf
push
sub
je
mov
scas
arpl
ror
out
sbb
cs
imul
mov
imul
lahf
sub
rcrb
jbe
jo
lock
xor
adc
mull
add
pop
int3
les
push
mov
push
dec
fdiv
xlat
pop
addl
call
lods
or
loopne
js
ds
push
hlt
incl
sbb
ret
dec
movsl
mov
mov
xor
fldenv
outsl
cli
xchg
sbb
sbb
pop
pusha
jb
xor
scas
outsl
lds
adc
mov
add
aas
sbb
sub
data16
xchg
xor
into
and
pushf
sub
push
push
pop
iret
enter
fldl
test
cltd
ljmp
push
mov
inc
movsb
sub
jns
mov
arpl
and
pusha
push
pusha
ja
lock
loopne
ss
mov
push
scas
xchg
push
pusha
call
sbb
lcall
xor
pop
cmpsb
ret
xchg
push
xor
and
mov
push
jo
or
cmp
mov
in
jmp
push
popa
cmp
mov
stos
sahf
sysexit
inc
mov
sub
jbe
data16
out
int
xchg
mov
das
cs
js
add
add
addb
das
mov
push
subb
loopne
push
repnz
lea
jg
inc
pop
movsb
xorb
in
ret
lcall
lahf
sub
aam
adc
addr16
aad
sti
dec
insb
or
mov
imull
loopne
gs
xor
jecxz
add
xor
cmc
cmp
mov
xlat
add
dec
mov
fisubrl
iret
pop
repz
push
cmpsl
sahf
fdivrp
iret
xchg
icebp
jno
xor
clc
addb
repz
stos
jo
sti
sbb
adc
lods
mov
repnz
mov
cmp
xchg
mov
or
xlat
mull
bound
and
sub
stos
fstpt
add
xchg
push
push
insl
cmp
lods
ja
jmp
xrelease
adc
cmc
mov
mov
cmp
daa
insb
push
push
out
xchg
inc
pop
cs
and
cmp
ss
adc
popf
sub
sub
inc
ljmp
daa
out
cli
enter
lds
pop
pop
xchg
inc
hlt
xchg
add
jmp
inc
and
lahf
or
inc
sub
pop
cmc
jae
pusha
cld
dec
xor
ret
dec
lods
and
jbe
cmp
cwtl
push
lcall
mov
cmp
testl
lds
out
jns
or
out
mov
pop
xchg
jnp
nop
and
fsubrs
jne
xor
and
fisttpll
cwtl
ret
push
ljmp
lock
popa
subl
mov
fisubs
out
inc
mov
mov
and
push
xchg
orb
testb
movsb
mov
xlat
push
mov
js
outsl
mov
inc
jno
fwait
insl
mov
mov
jge
sbb
and
push
je
loopne
mov
and
mov
scas
and
push
pop
xchg
jno
mov
adc
and
mov
scas
in
or
dec
es
sbb
int
lods
out
or
inc
lods
fsubrs
sub
out
rolb
jp
arpl
add
fldenv
lock
cmp
cltd
testl
out
je
and
mov
push
dec
rcll
inc
jbe
sbb
shrb
sbb
lret
clc
mov
clc
and
and
xchg
push
dec
leave
shl
int3
movb
cmp
mov
fsubrp
mov
movsb
adc
sub
int3
sub
test
ss
lcall
test
mov
and
dec
adc
out
mov
test
sub
push
aam
insb
std
test
nop
mov
aam
xor
aas
pop
loop
jo
jle
in
outsb
mov
cmp
jg
ljmp
xchg
mov
adc
test
adc
push
xchg
scas
push
fs
loopne
scas
fwait
aad
sbb
loop
or
fmull
negb
jbe
mov
ret
inc
ljmpw
jmp
xchg
loopne
out
mov
pop
mov
xor
popa
repz
std
mov
sbb
inc
mov
dec
sub
dec
into
insl
fisttpll
dec
sub
lods
push
or
scas
ret
or
or
lret
sub
cmp
mov
mov
xchg
fldcw
cltd
xchg
mov
jp
cld
repz
sbb
jle
push
outsb
xor
out
lahf
mov
arpl
cmc
xchg
inc
pop
mov
es
call
cmp
add
jns
sub
or
xor
icebp
sub
inc
jo
popf
les
xchg
or
call
push
sbb
sub
xchg
jbe
cmp
inc
mov
or
ret
mov
sub
in
test
js
ljmp
xchg
cld
repnz
js
sub
cmpsb
lret
stc
mov
sub
xor
xchg
mov
pop
xchg
xchg
subl
jp
xchg
out
fucomi
xchg
add
aaa
es
mov
mov
jecxz
or
jnp
dec
out
sbb
mov
or
adc
dec
and
pop
mov
and
push
ret
sbb
mov
nop
xchg
dec
jne
bound
lods
cwtl
dec
xchg
int3
cmp
daa
sub
jge
and
cltd
aad
fwait
add
mov
popa
call
mov
gs
mov
mov
iret
inc
repnz
and
and
sub
and
xchg
or
push
dec
jmp
sahf
jmp
push
mov
aas
das
ljmp
or
push
xor
add
push
stc
adc
pop
sub
popa
iret
cmp
push
in
fs
pop
cmp
out
stos
pop
xor
stos
mov
inc
sub
pop
or
adc
mov
push
sar
andl
push
or
pop
leave
push
repz
mov
in
dec
add
repz
jb
arpl
xor
and
mov
cmp
out
sub
repnz
cmp
test
and
push
mov
aam
enter
and
mov
icebp
adcl
stos
sub
push
pop
test
mov
lods
hlt
mov
mov
xchg
and
iret
call
sub
push
and
js
cwtl
ret
jmp
les
aaa
cltd
xchg
mov
lods
int3
adc
adc
lret
orl
add
jmp
inc
mov
cli
jbe
mul
ja
add
xchg
imul
pop
in
adc
dec
cmpsb
icebp
xor
into
cwtl
dec
adc
sbb
popf
jle
nop
int3
mov
cs
mov
hlt
mov
jp
shr
mov
fmul
sbb
test
cmpsl
pushf
cmp
sbb
mov
ret
sbbl
inc
push
imul
pop
sbb
mov
loope
test
push
jbe
add
push
repnz
ret
inc
jecxz
imul
hlt
mov
inc
mov
sti
mov
out
lock
or
neg
adc
mov
movsb
filds
mov
into
aam
test
dec
popa
xor
cld
test
test
cltd
mov
xchg
sub
pop
roll
add
mov
cld
iret
inc
pop
mov
pop
adc
call
jg
mov
push
in
xor
mov
fcom
lret
jle
sub
pop
xchg
pop
adc
xchg
loope
jg
cmpsb
xchg
sbb
jne
es
xchg
mov
sub
in
mov
inc
lret
icebp
inc
in
mov
sub
in
push
jo
xlat
pcmpeqb
sub
cmp
dec
lock
in
pop
lods
jno
mov
mov
xor
stos
rcll
add
stc
cmp
lret
xchg
inc
pop
aas
pop
mov
xchg
fadd
call
push
call
push
jnp
ja
loopne
call
jmp
enter
mov
cmp
inc
iret
sbb
jns
sbb
lds
imull
xchg
xchg
call
bound
sbb
xchg
ret
dec
inc
aaa
and
xchg
pop
outsl
xchg
mov
mov
adc
xorl
mov
cmpsb
adc
repz
sbb
andb
push
cmp
pop
ret
push
mov
pop
mov
ret
ret
cwtl
sti
add
xlat
lea
mov
jmp
mov
add
test
xor
out
cmp
lret
inc
pop
nop
mov
sahf
cmp
fsubs
sahf
outsb
bound
adc
inc
cwtl
adc
xlat
cltd
add
cmp
int
cmp
lea
hlt
or
lahf
jmp
into
xchg
test
jae
jmp
test
daa
push
fxch
xor
neg
and
adc
stc
addb
mov
fxch
scas
add
dec
addr16
inc
ret
cld
mov
dec
dec
sbb
cmp
xlat
adc
jno
fstps
ja
xor
addr16
incl
nop
mov
xlat
mov
and
mov
jle
scas
inc
xor
loopne
in
xchg
mov
popa
sar
test
push
cwtl
cmp
push
mov
rcl
fnsave
or
cs
iret
fsubs
xchg
pop
mov
mov
or
xor
leave
mov
dec
push
data16
test
dec
pop
adc
mov
negl
popf
and
inc
inc
movsl
sti
int
ljmp
cmp
mov
push
xlat
leave
cmp
xchg
mov
sub
mov
dec
xchg
divl
or
jno
xchg
and
dec
jno
push
test
in
inc
out
dec
gs
jo
pop
inc
mov
mov
dec
push
or
je
push
xor
or
loop
inc
pusha
rcll
insl
sbb
and
test
xor
test
sbb
mov
test
mov
sub
scas
cli
inc
jl
push
lods
xchg
call
jnp
inc
sti
rorb
repz
fwait
cmp
push
cmpsl
inc
or
cmpsb
and
sbb
aad
imul
mov
push
fnstenv
int3
ss
mov
stos
stos
sti
sbb
test
mov
sti
out
add
in
inc
out
cvtpi2ps
out
adc
out
jecxz
ja
movswl
jns
jg
aas
mov
jae
out
mov
subb
movsb
ss
jno
lahf
mov
cmp
add
mov
enter
aas
pop
fwait
cmp
mov
and
std
xor
and
mov
cli
cmc
je
fimuls
sub
jb
dec
mov
iret
mov
das
dec
loope
mov
and
push
push
out
lds
mov
pop
or
in
ficomps
ss
shll
sbb
mov
shll
imul
inc
mov
jbe
mov
incl
xchg
pop
add
aas
dec
sbb
mov
xchg
std
dec
jp
leave
arpl
cmp
insl
into
xchg
sbbb
popl
pushf
xchg
xlat
ret
div
ja
mov
mov
xchg
adc
rolb
and
data16
and
sub
aas
add
dec
ret
jg
stos
cmp
sbb
add
lods
lahf
fstl
push
insb
fistpl
dec
minps
pusha
daa
in
jecxz
cmpsl
mov
orb
xor
push
out
mov
icebp
xchg
pop
jl
add
mov
lret
pop
mov
das
pop
insb
push
daa
pop
push
rolb
jns
lds
jmp
dec
dec
xchg
fisttpll
fdiv
cld
xlat
mov
aaa
out
fildll
pop
leave
inc
xor
adc
mov
mov
movb
cmp
dec
insb
cmpb
les
jo
and
jp
test
popf
outsl
add
and
out
xchg
mov
decl
sbbb
fsubs
cmp
fldt
es
xchg
inc
push
mov
mov
inc
fwait
lret
pop
xor
adcb
jge
sbb
dec
je
mov
xchg
lahf
pop
xchg
dec
ja
aad
adc
dec
cmp
test
mov
stos
xlat
js
xor
mov
inc
lahf
into
xor
lea
mov
jae
jg
push
sbb
sbb
imul
fsubr
or
enter
adc
xchg
pusha
or
cmp
sti
fidivs
push
aaa
popf
cli
testb
fs
repnz
enter
sbb
push
test
mov
insb
pushf
repz
adc
lods
push
imul
dec
loop
mov
xchg
cmc
or
cmp
xor
mov
pop
mov
push
mov
xchg
mov
dec
out
push
sbb
cmp
mov
push
lret
or
mov
shll
bound
aam
mov
mov
sub
mov
pop
mov
stos
and
push
jge
xor
mov
xor
xor
pop
adc
sbb
scas
out
and
xchg
sbb
and
inc
cs
mov
mov
out
stos
pop
xlat
sub
lea
push
aas
jmp
popa
inc
fnstcw
data16
in
aas
insl
xor
rolb
cmp
adc
leave
rclb
fidivl
je
addr16
jge
cmp
out
jmp
aaa
adc
jbe
or
adc
adc
inc
daa
sub
jl
scas
inc
push
cs
in
cmp
bound
mov
fcomi
mov
push
sahf
push
jg
inc
cld
mov
lret
pop
aad
fildl
mov
mov
push
cmp
sbb
shlb
inc
sub
mov
ret
pop
aam
pop
push
push
fldt
pop
cltd
repz
jle
xchg
stos
sub
subl
and
adc
sbb
mov
push
pusha
int3
mov
arpl
stc
ja
sbb
std
fmul
stos
lea
or
ss
jmp
pop
push
rolb
mov
dec
stos
inc
sarl
pop
enter
aam
add
add
mov
mov
into
jno
pcmpgtw
frstor
cld
or
test
jbe,pn
mov
stc
xchg
pop
dec
fldl
xchg
xor
cmpsl
fidivrl
outsb
cmpsb
fisubl
mov
daa
cld
es
loop
mov
das
icebp
inc
sub
clc
rorl
sbb
jmp
loop
xchg
add
jecxz
mov
aaa
jno
inc
mov
loopne
insl
inc
push
push
adc
movsl
xchg
imul
std
jl
or
pop
jnp
ret
pop
xchg
xlat
pushf
cmpsl
stos
or
popf
cmp
jne
in
popa
jae
push
jg
mov
adc
and
in
clc
pop
bound
xchg
mov
pop
aas
mov
or
in
jnp
push
xchg
mov
loop
test
or
js
rcr
es
scas
aas
mov
push
pop
cmp
ret
ljmp
cmp
push
insb
jo
mov
sub
push
out
aaa
push
dec
push
insl
push
add
adc
daa
inc
add
sahf
es
test
inc
cmpl
pop
sub
pop
mov
push
cmpsb
pop
cmpsl
lods
sub
daa
add
repnz
pop
aas
mov
mov
nop
add
cmp
adc
pusha
add
xchg
in
cltd
sti
shlb
mov
imul
pop
mov
pop
lock
aas
hlt
in
xchg
cmpsl
or
mov
push
jl
orb
and
cmpsb
xorb
ret
in
pop
push
adc
or
lret
lock
mov
fldcw
add
sbb
mov
add
mov
cmpsb
cmc
mov
int
sbb
cmpsl
ss
mov
scas
push
pop
negl
insb
lock
sti
lods
dec
arpl
sbb
inc
adc
sbb
and
inc
jb
aas
in
out
lods
sahf
shll
dec
add
sub
xor
repnz
cs
imul
add
in
insl
stos
mov
ja
sub
jne
lret
push
shl
dec
cmp
mov
test
cmp
dec
leave
out
mov
nop
mov
xlat
ja
sar
cmp
xor
mov
mov
jle
in
xchg
les
loope
jl
push
mull
iret
dec
push
ret
mov
inc
push
es
or
dec
sbbb
sbb
fld
or
js
popf
pop
icebp
push
outsl
push
stos
out
inc
aaa
mov
and
sub
inc
out
js
cmpl
ljmp
stos
push
testb
jne
in
in
mov
sub
in
inc
ficompl
and
call
ror
cmp
shrb
mov
mov
and
sbb
sarl
loop
imul
rorl
pop
repnz
out
mov
adc
mov
sbb
pop
in
adc
cmpsl
daa
mov
rcr
jb
aad
push
xor
stos
das
out
sub
fistpl
bnd
js
in
jl
xor
and
fbstp
pop
out
jno
inc
outsb
les
dec
dec
pop
pusha
out
stos
popaw
icebp
jmp
nop
and
jns
push
xor
jns
sub
pop
xor
orl
mov
aas
ret
push
push
xchg
add
push
ljmp
mov
sub
rcr
xchg
mov
aad
cmp
inc
std
jmp
mov
lods
and
mov
mov
movsb
not
test
fsubl
loope
mov
pop
aad
aaa
mov
pop
mov
jp
repz
fcoml
imul
rolb
push
cs
sbb
jo
sub
into
or
rcrb
pop
inc
xorl
clc
pop
pop
movsl
ret
mov
cmp
movl
sbbl
mov
jge
pop
call
lcall
inc
ret
inc
out
cmp
insb
stos
fbstp
shrl
push
mov
lcall
sahf
adc
pop
adcb
out
aaa
testl
and
stc
xor
in
or
lods
inc
pop
popf
adc
push
fldcw
out
xchg
push
pop
xor
sbb
or
outsl
jl
inc
jecxz
lret
sbb
fsubs
fadds
sbb
repnz
mov
movsb
or
pusha
gs
or
cmpsl
out
aas
jnp
hlt
xchg
cld
push
hlt
cli
fwait
mov
loopne,pn
leave
cmp
je
movsl
cld
mov
sbb
push
mov
cmp
outsl
xor
jl
and
cmpsb
cld
int
jno
fs
loopne
mov
mov
scas
cmp
mov
daa
or
push
xchg
les
jbe
mov
pop
jbe
and
mov
dec
mov
mov
mov
jmp
add
adc
sub
fwait
lock
lock
sbb
in
mov
cs
jge
popa
xchg
dec
dec
cmpb
mov
bound
sbb
int
std
inc
fadd
sub
mov
pop
popf
sub
cmpsb
aaa
or
xor
fs
inc
pop
cli
dec
push
push
int3
aad
int3
insb
and
xor
lea
inc
mov
sbb
or
jmp
jbe
pop
sub
aas
pushf
dec
inc
mov
sbb
push
add
sbb
je
loopne
push
xchg
add
pop
andl
clc
fisubl
or
and
testl
sub
js
jns
mov
adc
lds
add
fistl
int
les
jle
shl
dec
jge
ljmp
push
push
outsl
dec
inc
ds
sub
add
push
lret
pushf
mov
mov
rol
or
pushf
jbe
subl
add
cmc
in
dec
daa
sub
mov
push
add
push
int
sbb
pop
pop
icebp
xor
lods
int3
andb
sbb
add
or
inc
cltd
nop
clc
and
aaa
push
loopne
xchg
cltd
mov
lcall
fildll
ja
cmc
jno
sahf
icebp
lods
add
aas
movsb
sub
adc
add
cmc
xor
xor
clc
mov
ud0
xchg
ret
cmp
cmp
pminsw
outsb
flds
and
dec
adc
pop
leave
push
loope
add
cmpsl
and
push
pop
leave
divl
xorl
mov
sbbl
jg
and
sti
fwait
or
stos
cltd
mov
pop
popa
popa
stos
daa
ffreep
mov
and
sub
dec
dec
pop
insl
fidivl
or
subl
and
or
add
leave
bound
das
mov
sub
outsl
mov
and
in
ja
fisttps
lret
inc
lret
lods
lods
stos
leave
pop
das
mov
fadds
xchg
ds
xchg
sbb
mov
jns
inc
pop
pop
xchg
in
pop
sahf
xchg
fisubl
bound
out
sbb
jle
orb
inc
and
or
push
inc
int3
xor
lods
in
inc
cmpsb
inc
rcrl
xchg
cltd
push
shr
ret
adc
insl
dec
ficoml
push
mov
mov
mov
pushf
dec
sbb
sbb
xor
jbe
lcall
gs
in
mov
test
lahf
lcall
add
lret
adc
adc
aad
in
cmp
jmp
clc
jmp
std
jo
inc
and
mov
pop
sbb
jecxz
jmp
mov
inc
aam
xchg
repnz
mov
aas
mov
js
out
ficoml
cmp
and
mov
adc
inc
jbe
mov
sbb
sub
mov
fisubrs
test
cmp
dec
popa
aas
pop
sub
adc
lret
lea
ss
sti
int3
lret
test
mov
jnp
movsl
mov
jns
push
add
in
test
inc
imul
fcom
xchg
sbb
push
xchg
aad
adc
popa
cli
mov
loopne
in
inc
push
sub
das
jns
xor
pop
data16
fildl
inc
loope
and
enter
lock
push
sbb
mov
cmp
cmp
arpl
xlat
lods
fstpt
mov
push
arpl
jo
cs
mov
push
jg
jo
rolb
std
adc
sub
es
adc
es
inc
ja
movsl
nop
jmp
push
sbb
mov
push
lock
pop
add
inc
es
mov
jne
xor
js
pop
leave
popf
pop
fisttpll
subl
mov
scas
insb
popa
test
adc
mov
out
out
pop
out
sti
ss
xor
in
mov
leave
cld
sub
mov
add
int3
int
out
rol
pop
out
pop
dec
outsb
mov
jnp
addr16
aaa
shll
in
sarl
mov
dec
jnp
outsb
mov
inc
adc
xor
jecxz
pop
fsubp
adcl
sbb
or
dec
inc
sub
test
jnp
push
cld
pop
dec
cmp
push
lock
pop
mov
dec
out
push
jnp
sub
roll
and
roll
sbb
sub
mov
dec
mov
sbb
rcrl
add
push
adc
std
sbb
xorb
ja
sub
mov
dec
cmpl
loopne
jbe
and
mov
and
xchg
sar
lds
lcall
aaa
mov
jb
add
shrb
lds
lahf
test
sbbl
lahf
into
testb
push
dec
aas
outsb
cmc
fstps
cmp
xlat
es
repz
into
ror
outsb
cltd
scas
xchg
popa
stc
jge
xchg
aaa
dec
outsb
ss
iret
xchg
cli
mov
gs
or
sbb
test
cmp
icebp
jl
adc
or
shlb
repnz
arpl
lods
sub
std
jle
aas
mov
xchg
js
insb
mov
cmp
mov
rorb
int
arpl
xor
mov
outsb
cmpsl
cli
aaa
test
cmp
push
xor
test
jno
lods
into
aas
adc
fstl
xor
scas
imul
jno
shll
ss
fiadds
outsl
fsubl
add
jmp
push
pop
sbb
push
and
and
add
mov
in
sub
fsubs
mov
jmp
and
cmp
mov
lds
shl
andnps
cmp
mov
mov
and
into
jmp
or
cmp
stos
push
pop
ss
sbb
ss
stos
mov
dec
and
mov
push
outsl
cs
push
inc
cmp
xchg
jmp
mov
pushf
sbbl
pop
dec
fwait
pop
mov
sub
and
daa
mov
fdivp
sarb
add
lahf
push
sub
push
inc
cld
cltd
jle
mov
and
stos
in
sbb
mov
jo
xchg
adc
daa
outsl
js
push
push
and
or
mov
push
xchg
shlb
jbe
add
fsubrl
test
adc
dec
adc
jne
push
push
jmp
mov
dec
push
imull
and
cmp
fildll
test
in
sub
dec
andl
mov
and
pusha
pop
ret
lods
insl
jmp
f2xm1
dec
xchg
les
cmpsb
in
push
push
push
popa
rorb
pusha
or
mov
aas
je
dec
gs
add
out
sbb
sbb
sbb
or
adc
imul
and
mov
adc
cmp
pop
sbb
addr16
inc
inc
jecxz
pop
or
cmp
shlb
mov
jnp
js
jecxz
pop
sub
push
cmp
lea
enter
loopne
movsl
lods
imul
imul
xchg
push
movsb
dec
call
and
adc
or
and
sbb
int3
cmp
and
enter
loop
stos
mov
cmpsb
test
and
pop
aas
fucom
aas
sbb
xchg
fisubl
mov
hlt
popf
cltd
pop
pop
xor
sbb
psubusb
adc
outsb
mov
push
lret
mov
mov
mov
mov
mov
sahf
jecxz
cmp
add
int
es
push
test
pop
enter
fldl
mov
mov
xor
es
xor
push
fidivrl
sbb
pop
repnz
sbb
xchg
xchg
pop
and
sub
pop
arpl
add
stos
sti
mov
push
push
repz
jb
call
cmp
stos
js
imul
dec
mov
mov
cmp
stc
pop
mov
sbb
mov
and
mov
rolb
dec
push
adc
mov
cmp
jp
lods
fstpt
push
test
push
pusha
ss
out
add
test
outsl
push
lret
pop
aam
lods
ja
sub
pop
cmc
push
cld
xor
orl
pop
or
ljmp
mov
mov
dec
xchg
shr
loop
or
out
jo
mov
dec
stos
xchg
nop
dec
dec
jmp
mov
pop
daa
push
mov
out
scas
pop
or
mov
shlb
dec
ret
mov
addb
inc
mov
sub
jnp
out
shl
bound
addr16
insl
adc
cmovns
xor
subb
dec
jbe
fwait
pop
pop
test
push
xchg
test
shll
dec
adc
push
jns
cwtl
test
cmpsl
icebp
das
mov
mov
pusha
sub
fabs
mov
and
mov
and
call
pop
push
daa
push
push
add
mov
stos
decb
out
cmc
jno
fucom
repnz
sete
addr16
mov
push
popf
xchg
loop
rorl
repnz
jmp
loopne
mov
outsl
pop
lret
cmp
push
sub
jmp
pop
hlt
call
jnp
rorl
mov
in
hlt
cli
or
mov
lret
push
pop
mov
dec
push
jle
add
pop
jns
pop
mov
daa
fildll
add
mov
ret
into
fisubl
iret
cmp
outsb
cmp
pop
mov
inc
cwtl
leave
pop
int
pop
dec
or
pushf
jne
fldcw
mov
cmp
push
inc
and
xchg
out
addr16
das
pusha
and
imul
mov
xchg
sbb
xchg
shrl
sub
movsb
pop
imul
push
cltd
inc
jbe
into
sbb
push
mov
out
sarl
ja
out
mov
adc
or
imul
ja
pop
jns
lahf
mov
mov
mov
pop
lahf
sbb
push
xchg
sbb
test
fstpt
pop
sub
xchg
mov
cmp
mov
mov
push
fldl
sbb
jno
lcall
jns
mov
xchg
sti
push
cmp
xchg
add
stc
std
cld
push
jge
int
sbb
rorl
cmp
jnp
add
inc
fldenv
cltd
dec
add
mov
add
es
add
out
repnz
movsbl
cltd
push
push
es
jle
imul
dec
rorb
push
add
frstor
fmuls
es
push
mov
cwtl
cmp
jbe
ljmp
aad
jmp
addb
dec
mov
es
les
add
pop
jne
pop
outsb
testb
dec
xor
stos
fnsave
xchg
push
cmp
push
and
jb
jbe
adc
jmp
xchg
daa
push
inc
sahf
push
mov
mov
js
push
jne
icebp
rorl
inc
test
push
cmpsl
inc
lds
xchg
or
int
add
scas
and
pop
jnp
xchg
and
mov
into
jb
jno
pop
xchg
mov
addr16
pop
out
mov
sbbb
aam
repnz
int3
insl
mov
xchg
mov
dec
pop
out
xor
push
xchg
lcall
or
pushf
mov
xlat
fisttpl
icebp
and
fwait
mov
inc
push
push
jmp
mov
ret
cmpsb
int3
adc
nop
repz
inc
dec
jp
out
mov
stos
fxch
loope
inc
mov
adc
daa
loop
notl
inc
inc
adc
cmp
fildll
repnz
scas
fdivr
cltd
xchg
xlat
or
cmp
cmc
mov
out
loopne
stos
mov
mov
adc
dec
stos
mov
loop
mov
pop
jb
inc
jbe
cmpsl
out
outsb
mov
lods
jl
dec
add
xchg
sub
inc
mov
mov
cmpsl
mov
jno
repz
add
out
dec
jle
test
outsl
mov
jne
ret
xchg
or
pop
dec
sbb
sbb
mov
ret
movl
lds
adc
xor
adc
cmpsl
clc
add
dec
push
pop
sahf
enter
movb
aas
pushf
aaa
repz
and
stos
test
gs
pop
fnstcw
jle
out
movsl
add
lds
test
jmp
xchg
es
xchg
arpl
xchg
xor
pop
jns
mov
dec
lret
push
sbb
in
into
push
xor
xor
fcomps
je
div
add
imul
fstl
and
push
cmpsl
fwait
inc
sti
mov
leave
rclb
daa
mov
jecxz
pop
ljmp
dec
dec
dec
pop
icebp
fwait
mulb
push
mov
lods
sbb
mov
aaa
or
aad
outsl
movd
nop
data16
ss
iret
xchg
bnd
xchg
lcall
mov
sub
bound
jnp
inc
jle
push
sub
nop
cmc
leave
inc
repnz
jo
jle
enter
push
jb
bound
into
cli
ss
ljmp
cmp
dec
xchg
insb
shlb
mov
and
in
add
dec
enter
mov
shlb
mov
cwtl
int
mov
mov
icebp
lret
dec
shll
rcll
movl
lret
fs
dec
gs
ljmp
fisubrs
mov
popa
scas
dec
pop
mov
jo
popf
dec
xchg
into
movsb
pop
leave
mov
fldcw
dec
fisubrs
sbb
adc
shr
cmp
call
out
scas
in
scas
adc
adc
test
xchg
cmp
cmp
das
stos
lods
jmp
imul
push
push
out
adc
add
or
in
aam
shll
sbb
stc
jnp
sti
daa
xor
add
or
fwait
shrb
arpl
aam
out
sub
push
jne
mov
fstpl
fcomps
flds
cmp
jp
ficoml
shll
sub
push
loop
mov
add
jle
or
cs
enter
inc
pop
or
mov
sahf
mov
inc
mov
in
aas
push
test
out
jns
arpl
adc
lret
or
mov
mov
fstpl
dec
xor
in
cmc
push
lds
jne
or
xlat
repnz
cld
arpl
and
and
cmpsl
jo
ljmp
pushf
out
pushf
icebp
add
sbb
adc
leave
mov
dec
mov
cld
inc
pop
or
mov
cltd
cwtl
jnp
test
push
mov
mov
sub
jbe
je
dec
jo
adc
cmp
dec
xorb
xchg
insb
inc
and
fldenv
scas
and
xchg
mov
jmp
inc
ret
cmpsb
outsb
inc
inc
sub
lret
mov
xor
sbb
in
add
xchg
jp
pop
mov
cmp
pop
sub
xchg
sbbb
loop
mov
add
jno
inc
shl
mov
call
push
mov
inc
mov
insw
cmpsb
fisubl
je
sti
jmp
jg
xlat
jo
mov
dec
mov
inc
repnz
pop
adc
jecxz
and
pop
in
jno
cmp
mov
pop
cmp
mov
negb
sub
mov
insl
loope
lock
mov
pop
jg
add
test
push
rcl
outsl
inc
out
jle
jae
pop
ds
pop
push
adc
inc
xor
xorb
popf
jp
popf
outsb
jns
push
sbb
adc
popa
sbbb
das
mov
pop
movb
inc
cmp
or
or
and
stos
jno
cld
inc
dec
and
sub
sub
rcrl
cli
je
mov
jmp
movsb
or
adc
lock
push
mov
cs
cltd
lds
mov
imul
sub
cmpsb
inc
push
rolb
incb
rorl
incl
clc
sahf
mov
int
test
adc
fldcw
insb
jmp
loop
mov
adc
or
and
xchg
test
out
scas
test
cli
and
mov
ds
repnz
loope
mov
out
int
jo
pop
outsl
mov
mov
pushf
sub
loopne
fmulp
add
sub
lods
add
mov
fnstenv
dec
into
lret
test
test
rorb
cwtl
jno
aas
mov
lcall
sbb
jno
pop
movsl
sub
mov
cwtl
push
xor
xor
insl
lcall
xchg
pusha
pop
je
xor
jb
or
in
xor
inc
sub
xor
lahf
in
shl
mov
push
test
scas
fidivl
rclb
adc
arpl
je
lcall
cld
mov
ja
mov
test
cmp
push
enter
mov
or
mov
ret
mov
xor
in
loope
stc
inc
aaa
mov
decl
add
rclb
mov
movsb
movsb
adc
cmp
inc
negl
sbb
adc
fcompl
or
adc
and
pop
or
leave
xchg
popa
add
pop
and
addr16
adc
add
dec
rorl
adcb
pop
ret
xor
lock
dec
push
cld
and
jae
push
call
xchg
pushf
outsl
xorl
inc
pop
sbb
and
pop
pop
rolb
push
lahf
pop
jp
nop
xor
cmp
or
loop
lds
cmp
fstps
push
mov
movsb
lods
daa
mov
pushf
pop
dec
sub
mov
sahf
mov
cmc
jo
xlat
js
sbb
jle
lods
mov
test
or
mov
pop
rcll
add
jb
lods
push
out
mov
inc
pusha
sarl
push
movntq
out
jp
jmp
les
iret
sbb
adc
dec
je
je
mov
or
mov
mov
mov
cmp
jnp
ret
dec
clc
adc
test
loope
insb
add
jg
jnp
and
xchg
mov
jmp
inc
push
adc
or
cmp
adc
mov
inc
jmp
fwait
push
xchg
lret
mov
ja
mov
stos
cmpsb
lods
ds
ficoms
xchg
push
mov
movsb
les
xlat
or
jne
jecxz
fldenv
pop
mov
aaa
aaa
mov
cwtl
mov
jns
jmp
enter
adc
in
push
mov
xor
xchg
roll
arpl
lock
es
xor
adc
cmpsb
add
in
in
dec
into
push
xchg
jo
mov
test
xlat
repnz
xchg
addr16
mov
pop
sbb
cwtl
xor
in
push
out
sbb
pop
add
cmp
sbb
xor
ss
pop
out
pop
add
push
leave
dec
ds
or
sub
cmpsb
dec
cmp
jno
inc
xlat
adc
insb
imul
pop
enter
xor
out
jb
movsl
fists
jne
sub
mov
pusha
nop
dec
xchg
xchg
or
out
rolb
mov
mov
mov
js
push
xor
jae
lds
sahf
mov
or
sub
aad
iret
push
jno
jle
jmp
jmp
sbb
jo
aas
mov
rolb
movsb
mov
dec
push
and
mov
je
push
dec
inc
aam
cmp
lods
and
jecxz
std
mov
bnd
mov
adc
ret
or
repz
xchg
or
sub
iret
ljmp
dec
sbb
cwtl
push
psraw
adc
mov
sbb
mov
cmp
lea
or
push
or
scas
sub
call
adc
push
jmp
enter
fisubrs
and
pop
dec
stos
into
push
cmp
das
in
jno
bound
out
imul
adcb
sub
out
sub
out
push
lods
int3
ret
xlat
mov
sarl
pop
fxch
leave
mov
cmpsl
fldenv
sub
data16
cmp
mov
sub
adc
repz
xor
or
fists
push
xchg
sbb
sub
push
std
xorb
shrb
mov
add
loopne
aam
pushl
je
push
daa
sahf
pop
pop
jbe
cli
shll
orb
mov
cmp
inc
test
movsb
xchg
adc
add
lock
xor
movsb
mov
scas
push
cwtl
and
int
loop
sub
push
push
xor
fldcw
pop
add
into
inc
xor
sbb
push
sbb
mov
adc
cmpsl
dec
xchg
frstor
cltd
adc
call
pusha
or
push
rol
adc
popa
lahf
mov
frstor
mov
or
out
lcall
push
jb
sbb
out
mov
mov
xor
cmp
insl
sbb
push
gs
andl
xor
sbb
nop
nop
mov
and
ror
xor
pop
sub
xchg
int
scas
negl
xchg
in
popf
mov
call
jge
iret
shrb
cli
jl
scas
mov
xchg
stc
adc
mov
ja
cmp
les
enter
lret
es
mov
add
inc
ret
xor
sub
dec
dec
scas
ret
mov
pushf
cmpsb
mov
pop
add
mov
loope
mov
adc
and
call
out
xor
jbe
rorl
sbb
mov
mov
decl
shlb
ret
cli
hlt
loope
push
xchg
stc
out
int3
loopne
xor
lcall
jb
mov
fistpll
push
inc
dec
enter
pop
dec
mov
movsb
xor
out
das
pop
ljmp
push
repnz
loopne
enter
popf
xchg
sar
push
shlb
inc
cmp
push
movzbl
mov
pop
std
dec
inc
addb
or
mov
mov
sbb
andb
xor
mov
mov
push
sub
sbb
test
inc
or
fisubrl
xlat
fdivrs
aas
mov
cmp
jbe
mov
xchg
sub
add
pop
xchg
or
mov
mov
shrl
cmp
inc
and
xchg
lret
dec
adc
jae
mov
sbb
adc
hlt
int
push
mov
push
imul
cwtl
and
sbb
push
xchg
mov
dec
xor
ss
cmc
cmp
cmc
mov
dec
enter
dec
jmp
inc
mov
pop
lcall
xchg
dec
loopne
pop
add
add
outsb
mov
sbb
pop
cli
ljmp
fbstp
jae
pop
int3
data16
dec
sbb
repnz
sarb
dec
cmpsb
mov
xchg
xlat
xchg
pop
pusha
jmp
pop
divb
fidivs
cli
mov
es
xchg
inc
fstpl
pop
loopne
sbb
mov
inc
push
add
mov
mov
outsb
pushl
fldcw
jnp
lds
mov
inc
aas
fwait
xchg
push
div
add
mov
stos
inc
das
scas
outsb
pop
nop
addr16
adc
push
inc
mov
mov
mov
mulb
pmaddwd
ja
cmp
mov
das
pop
test
inc
or
pop
adc
xor
mov
and
add
cli
mov
and
jne
jl
cld
clc
dec
push
je
xor
and
insl
test
jb
in
lcall
lahf
sbb
sub
adc
and
imul
pavgb
mov
pop
stos
pop
fisttpll
stc
sub
or
dec
out
pop
xchg
xchg
scas
jg
subl
stc
jae
outsl
sbb
aam
pop
xor
cmpsb
adc
add
inc
repnz
xor
cmp
fbld
cmp
movsl
call
outsb
adc
adc
enter
push
mov
addr16
aam
sub
sbb
pop
pop
ret
call
inc
testb
xchg
daa
add
jae
add
sbbb
pop
dec
clc
popa
in
je
pushf
or
jne
xor
int
jae
mov
jnp,pn
fdivs
fimuls
out
repz
call
lds
movsl
push
push
or
add
mov
xlat
ljmpw
js
bound
jo
pop
ss
fisttps
jge
lds
push
scas
daa
out
xor
mul
ljmp
jmp
loop
hlt
call
cmp
aam
lcall
push
xor
mov
cmp
and
psraw
enter
mov
negb
cmp
and
cwtl
push
push
mov
out
jge
negb
mov
add
mov
stc
test
mov
iret
out
mov
cmp
jnp
push
mov
lods
test
popa
pop
push
sub
cli
lret
ljmp
iret
cmp
inc
insb
sbb
fwait
loopne
repnz
or
xchg
fisttpll
xchg
mov
fwait
mov
xor
mov
imul
test
cmp
inc
mov
adc
adc
call
fs
fadd
xor
je
es
imul
mov
mov
dec
inc
xchg
adc
mov
andl
sub
mov
stc
ljmp
push
pcmpeqb
std
movsb
dec
jo
sti
cmp
je
xchg
enter
or
les
xorl
mov
and
mov
adcb
push
add
shl
inc
mov
push
iret
loope
test
popa
stc
std
mov
xchg
cmp
movb
out
imul
sub
mov
cmp
movsb
and
out
je
mov
ficompl
xor
mov
scas
mov
aam
cmc
inc
add
test
jp
xchg
and
or
pop
aas
imul
sbb
xorl
mov
jo
scas
icebp
movsb
jecxz
mov
sub
cmpl
or
insb
cli
ret
jne
clc
jb
ss
pop
jge
pushf
push
xchg
xor
insl
jns
xchg
dec
scas
mov
decl
std
xor
incl
sub
inc
loopne
xor
add
inc
cld
pop
jno
xchg
mov
fwait
cmp
xorl
inc
xchg
mov
dec
and
fscale
xchg
movsb
push
adc
xchg
inc
xchg
ljmp
inc
scas
stos
dec
add
add
sbb
mov
sbb
and
xchg
pop
cmp
pop
sbbl
adc
enter
push
xchg
rcrl
subb
push
out
or
xor
stos
out
movl
idiv
mov
aaa
push
test
jbe
jbe
sbb
not
sbb
jae
ret
cmpsl
inc
aaa
jl
add
push
fcoms
pushf
imul
into
loope
xor
cmp
lcall
sbbb
pop
pop
gs
jo
jp
add
mov
lret
out
push
xchg
mov
addl
mov
sbb
int
lahf
aaa
xchg
jmp
pop
xor
fs
lahf
js
sbb
add
lock
lret
jmp
mov
pop
pop
xchg
xor
dec
mov
xchg
jmp
das
cmpsl
dec
push
cmp
ret
dec
sub
lahf
xor
icebp
xchg
loop
sbbl
mov
repz
jae
pop
sti
ret
popa
or
lds
mov
sub
in
int3
pop
insb
negl
or
sti
xor
imul
ret
or
insl
out
lahf
sahf
adc
xchg
enter
mov
mov
xor
sub
push
mov
mov
sbb
jae
sahf
int3
dec
cmp
std
test
cli
scas
dec
ss
or
xlat
rclb
jp
push
sbb
dec
and
xor
xor
cmpl
cwtl
fisubs
and
cld
mov
push
inc
enter
mov
pop
mov
mov
imul
addr16
mov
scas
addl
fstpt
sti
adc
jge
iret
out
xor
dec
jae
fmuls
mov
je
hlt
cmp
pop
pop
and
aam
pop
icebp
mov
cs
inc
cmpsl
jge
in
int
or
icebp
in
enter
pusha
adc
dec
cld
pop
mov
dec
inc
stc
or
xchg
xchg
cmp
push
pusha
fwait
fdivs
and
mov
adc
xor
sbb
nop
in
pop
testb
and
sub
or
in
mov
pop
sbb
mov
jno
lahf
popf
cld
adc
inc
add
cwtl
adcb
add
add
push
sub
popa
jecxz
inc
stos
pop
jae
mov
rclb
int3
mov
aas
ljmp
pop
xchg
dec
push
test
or
cmp
data16
cmp
lock
out
loopne
leave
out
sbb
testb
sahf
push
shl
sbb
seto
testb
mov
inc
test
je
sub
pop
insb
fmuls
sahf
loopne
movsl
cmp
cwtl
push
dec
xchg
pop
xor
push
ret
and
push
xchg
add
outsl
dec
or
lret
clc
in
xchg
xchg
aam
xor
dec
push
test
xlat
cmp
aam
push
mov
out
sub
scas
aaa
sub
inc
pop
xorb
sahf
lds
sub
pop
test
ds
mov
and
popa
and
mov
jnp
call
inc
imul
hlt
mov
ret
xor
mov
and
lret
xchg
jb
inc
mov
sbb
out
adc
mov
inc
xchg
in
xlat
sbb
mov
popf
pop
mov
popf
adc
test
shlb
push
mov
daa
dec
push
push
xor
sbb
push
cmp
jecxz
pop
stc
rolb
test
mov
sbb
push
push
repnz
jnp
xchg
adc
xor
dec
out
jmp
or
cld
bound
mov
leave
je
enter
push
rcrb
out
pop
fnsetpm(287
ljmp
pop
jo
push
and
in
or
mov
mov
mov
inc
jp
shll
js
out
or
push
mov
add
int3
xorl
pop
mov
mov
fmull
movsb
dec
in
mov
in
mov
pushf
dec
das
lds
testl
jp
out
adc
cs
dec
pop
dec
rorb
loope
mov
push
jge
mov
cs
mov
lock
mov
push
in
xchg
aas
dec
fcomps
in
cld
out
mov
popaw
dec
out
jl
sub
or
je
enter
jge
inc
mov
pop
jns
nop
sub
mov
sub
aas
xchg
rcrb
gs
rclb
jge
xor
call
mov
int
mov
movsb
adc
sbb
add
out
cwtl
pop
test
push
notl
xchg
or
pop
mov
mov
mov
mov
lock
inc
add
mov
cli
ss
and
cld
mov
push
xchg
sub
pop
aad
leave
xchg
mov
movsl
mov
and
add
mov
inc
jbe
mov
jb
and
push
enter
cmpsl
sbb
sbb
out
in
or
push
xor
push
insl
fdivr
mov
mov
shlb
xlat
inc
dec
cmp
mov
cmp
arpl
in
test
sub
mov
xchg
cmpsb
and
inc
mov
cwtl
mov
xchg
cmpsb
jp
cmpsl
bound
mov
and
or
aas
lret
sub
mov
daa
add
fcomp
jp
fdivl
pop
out
mov
nop
mov
jecxz
jl
mov
arpl
int
mov
lcall
pop
cltd
vpandn
push
xorb
xor
jae
xchg
and
sub
and
inc
adc
mov
lods
pop
mov
loop
adc
jp
xchg
outsb
nop
ficoml
fs
jns
andb
insb
out
jns
sbb
lcall
das
bound
pusha
dec
pop
jmp
fbstp
icebp
mov
aam
mov
les
std
pop
sarl
mov
mov
xor
mov
out
mov
leave
fsts
dec
xor
pop
in
lret
cmp
or
dec
rorl
insl
into
push
mov
push
mov
stos
push
sbb
cmp
xchg
repz
mov
movsb
xor
and
enter
mov
repz
sbb
jb
adc
scas
movsl
xchg
mov
xorb
pop
pop
test
sbb
sbb
sbb
pop
insl
mov
out
mov
inc
fldt
int
data16
sbb
jmp
inc
leave
mov
dec
sbb
loop
mov
ljmp
mov
data16
push
mov
loope
push
sti
andl
ss
adc
jnp
hlt
outsl
sahf
in
test
outsb
sbb
sbb
adc
adc
mov
xorb
loopne
or
cmp
scas
das
pop
shl
sbb
mov
or
or
xor
cmp
jns
dec
pop
push
and
gs
cld
das
imull
popa
or
mov
jmp
fmuls
jne
xor
inc
andb
jbe
mov
sahf
push
ja
pop
jg
leave
out
into
data16
loop
sbb
sbb
insl
les
fldln2
sbb
inc
pop
dec
sbb
sub
xchg
or
sub
outsb
sub
mov
pusha
scas
and
out
lea
or
ficoms
or
xchg
cmp
inc
roll
aas
jno
js
add
pop
cmp
sbbl
xor
out
adc
adc
addl
fcomps
inc
mov
imul
mov
and
push
adc
xlat
ss
sub
fmuls
push
or
and
mov
fdivrl
orl
cmp
jl
in
fs
jns
lock
and
cmpsl
cmp
inc
add
js
push
mov
pop
sub
push
jmp
pop
test
mov
xchg
xor
mov
scas
sbb
imul
xchg
jge
pop
adc
mov
pop
jg
int3
cmp
out
xchg
xchg
arpl
lret
rcrb
in
rolb
and
add
popa
in
mov
cmp
addl
push
nop
test
push
out
rcrl
or
bound
ja
in
andl
push
aam
inc
nop
inc
movsl
push
xlat
inc
std
jae
scas
fwait
and
pop
xchg
xor
sbb
xchg
lock
mov
fwait
mov
xchg
data16
push
inc
fnsave
jge
std
sbb
jbe
scas
cmp
cmp
mov
sahf
out
lock
fadds
mov
test
std
inc
jg
xchg
aad
push
xchg
mov
out
mov
cmp
push
mov
popa
mov
shrl
sbb
mov
xchg
cmpsb
aas
pusha
fdivrs
mov
insl
stos
xorl
aam
dec
or
sub
pop
scas
mov
popa
xchg
orl
stc
shrl
daa
inc
jmp
or
mov
jae
cld
mov
leave
aaa
aas
int
jns
jge
xchg
xchg
jae
negl
loope
and
fdivs
gs
imul
xor
cmc
popa
add
pop
push
inc
mov
sbb
mov
repnz
icebp
mov
hlt
aaa
fwait
shrl
mull
mov
loopne
das
repnz
cmpb
add
pusha
adc
jbe
cmc
jb
cmp
shll
out
outsb
push
stos
xor
and
inc
sbb
pop
movsb
inc
cmp
jne
dec
pcmpgtw
cmp
ret
mov
mov
scas
out
dec
jb
jae
test
adc
call
jg
lcall
cmp
stc
cmpsb
add
mov
js
push
push
popf
mov
jp
rorl
cmpsb
dec
mov
add
cmp
into
scas
fiaddl
popa
mov
test
push
test
lea
leave
sar
out
outsl
jecxz
adc
icebp
mov
pushf
xor
cmc
ffree
mov
out
dec
dec
xchg
stos
rcll
inc
xlat
icebp
mov
xor
imul
imul
mov
xchg
pop
aaa
pop
mov
ljmp
es
movsl
lods
jae
dec
mov
push
lret
mov
cld
in
mov
loop
mov
fcmovne
jge
xor
xchg
xchg
add
addr16
fcoml
mov
xchg
les
jno
xor
pop
movb
mov
divl
in
mov
jmp
rclb
loope
rcrl
sti
jae
shlb
lds
add
jge
dec
fists
pop
shll
pop
fcoml
xchg
xor
xor
push
xchg
fdivl
shll
and
or
les
mov
hlt
sub
pop
rol
or
cmp
xchg
add
mov
jg
jmp
ja
jnp
pop
aam
xchg
mov
mov
xlat
ret
xor
std
pushf
adc
mov
loop
pop
xor
sbb
inc
orb
test
fldenv
xchg
dec
add
int
cld
mov
lods
pop
cs
adc
test
xor
mov
jle
sbb
dec
es
aas
and
jmp
add
dec
cmp
aaa
push
add
rclb
cmpsl
jnp
xchg
push
movsl
pop
out
dec
push
add
jmp
add
mov
loopne
sbb
stc
sub
cmp
cs
jns
lret
insb
mov
loopne
sarb
sub
aad
sahf
int
sar
jb
xchg
push
iret
arpl
out
sub
rcrb
lds
mov
pop
adc
popa
divl
push
in
out
outsb
hlt
inc
xchg
cwtl
imul
dec
mov
iret
fstpl
mov
xor
sbb
es
dec
jae
nopl
arpl
jl
mov
fnsave
js
inc
int
and
ss
dec
xor
loope
rorb
pop
pop
imulb
dec
aas
push
test
roll
push
ljmp
cmova
negb
je
cwtl
bound
arpl
fisubrl
cmc
mov
clc
stos
idivb
adcl
scas
add
imul
mov
pop
sub
fwait
mov
into
aam
lods
jno
adc
test
aad
jecxz
lds
cmp
mov
mov
or
ret
fcmovb
int
sbb
dec
or
outsl
push
fmull
mov
xchg
xchg
jge
fnstcw
in
inc
dec
or
adc
fsts
popl
xchg
sbb
jecxz
mov
inc
adc
sub
out
inc
ja
gs
jmp
pop
cmp
inc
or
clc
jl
sbb
dec
xor
mov
lcall
pusha
sbb
int
adc
pop
pop
mov
lods
mov
and
cld
xor
cmp
inc
mov
cmp
push
ss
adc
movsb
movb
xor
inc
out
dec
mov
pop
jbe
fdivp
pop
loopne
call
inc
mov
in
xchg
fldl
cwtl
shr
sbb
inc
imul
push
add
clc
jo
ja
data16
push
sub
in
jp,pn
repz
xor
push
aam
xchg
jnp
mov
pop
push
cmp
test
mov
inc
jae
mov
sub
setne
cmp
xor
inc
hlt
in
loope
xchg
sbb
lds
lahf
scas
repz
leave
push
movsb
pop
jb
push
lods
scas
jae
push
pushf
out
push
insl
cli
sub
data16
scas
xchg
in
mov
xor
mov
pushf
pushf
fwait
mov
mov
mov
xor
movsl
pop
pop
int3
sarl
cltd
dec
test
call
insl
adc
push
mov
loopne
sub
mov
or
pusha
adc
test
inc
fsubs
inc
adc
and
inc
sbb
mov
mov
nop
jmp
mov
xor
arpl
arpl
rolb
into
mov
jo
push
pop
push
ja
rcr
test
jb
push
cld
sbb
xor
cmpsl
cmp
jp
jns
push
jg
mov
out
sbb
sub
and
dec
aas
imul
in
adc
sbb
pushaw
xchg
test
test
js
pop
je
add
lcall
enter
inc
mov
xor
and
js
push
scas
ljmp
mov
stos
dec
and
das
pop
jae
inc
arpl
cmp
xchg
xchg
pop
into
es
mov
sbb
xorl
repnz
sub
push
cs
mov
lahf
ret
dec
mov
ret
in
lea
outsl
inc
jge
or
and
mov
dec
push
sub
negb
out
ss
add
push
xor
mov
ss
jl
push
in
jg
scas
or
test
imul
mov
shll
mov
in
mov
adc
xor
jl
push
int
xor
gs
sub
loopne
addb
movsb
add
mov
rolb
lahf
loope
cmp
fwait
dec
test
stos
dec
push
negl
jl
mov
sbb
pop
ret
mov
test
inc
jne
pop
jmp
push
aas
insb
push
mov
addr16
sub
and
mov
xorb
xor
pop
pop
xor
mov
lret
nop
xchg
xor
inc
int
fisubrs
ljmp
cwtl
mov
dec
unpckhps
mov
push
jp
loop
pop
adc
mov
aas
mov
mov
inc
stc
pushf
orb
adc
mov
xchg
jge
jo
xchg
cmp
cli
fwait
jle
cwtl
xor
pop
cli
icebp
cld
in
iret
loope
pusha
arpl
mov
fmull
jle
mov
mov
sub
xor
jne
and
imul
cld
jbe
mov
int
xor
add
mov
mov
xchg
jbe
add
push
xchg
xor
scas
cld
clc
adcl
fildl
stos
or
shl
mov
pop
cmc
fneni(8087
inc
mov
sub
adc
lcall
pop
cwtl
outsl
aad
lahf
in
push
sub
or
pop
out
push
push
aaa
adc
mov
push
pop
fsubrs
sub
inc
mov
push
mov
out
dec
jo
xor
aas
stos
testl
ret
mov
inc
xchg
pop
xchg
and
cmp
jl
add
sbb
mov
mov
add
xlat
xor
sbb
test
mov
or
insb
aad
xor
sub
push
aas
loope
inc
xor
js
jo
xchg
mov
mov
xor
out
xor
mov
push
addl
add
mov
in
jae
cmp
push
iret
cmp
mov
and
or
inc
fisubl
lret
adc
rclb
mov
imul
cld
xor
adc
cltd
xor
lcall
mov
stos
sub
mov
dec
stos
test
insb
adc
loop
movsb
or
cwtl
insb
sub
int3
dec
push
inc
ret
lret
adc
aad
xor
sahf
insl
repnz
xchg
jle
test
leave
inc
push
popa
add
cmp
ret
push
xchg
repz
cltd
aam
pop
ljmp
int
or
sbb
jno
cmp
jle
int
sub
insl
or
rolb
or
push
sub
sub
pop
lds
imul
pop
dec
jecxz
mov
insb
enter
mov
lahf
jmp
lods
pop
mov
fistl
mov
mov
add
cmp
scas
dec
cltd
cmp
daa
or
cmp
bound
out
fdivp
xchg
pop
in
out
es
aam
mov
cmp
js
lret
and
ret
hlt
das
cmp
push
ret
mov
push
dec
inc
cmc
orl
xchg
adc
add
adc
icebp
ds
dec
jb
iret
pusha
push
mov
mov
pop
mov
gs
stos
dec
add
mov
xor
leave
das
pushl
xor
push
ret
mov
stos
sbb
fstl
pop
popf
mov
inc
or
fwait
loope
gs
and
rcl
inc
sarb
loope
mov
ret
jnp
lret
mov
icebp
sub
xchg
pop
mov
in
shlb
inc
cmp
es
or
ss
xchg
inc
dec
imul
cs
inc
pop
cmp
add
pusha
dec
mov
push
cmpsb
shrl
insb
cmp
call
dec
and
lahf
or
je
push
xchg
fisttpl
shr
adc
dec
pop
jg
mov
jl
dec
mov
xchg
and
mov
into
xchg
cmpsl
icebp
push
nop
sbb
cmp
idivb
outsl
and
aam
jp
mov
mov
adc
sub
pop
ret
pusha
in
pop
inc
add
inc
cmp
pop
daa
mov
cmpsb
inc
xor
mov
push
adc
lahf
cmpsl
scas
mov
hlt
jns
aas
fbstp
xor
call
sbbl
jle
add
lcall
sub
test
mov
cmc
mov
xchg
test
xchg
cmp
dec
imul
and
add
inc
pop
adc
popf
push
mov
pop
repnz
mov
cwtl
addr16
fs
add
add
mov
pop
push
pop
mov
cmpsl
addr16
xor
push
leave
jmp
xor
xchg
dec
and
inc
into
jmp
mov
sub
inc
cmp
xlat
aad
ljmp
pop
std
shl
loopne
daa
mov
push
sub
lea
je
pop
jle
lea
ss
or
push
popl
cmp
out
or
pushf
mov
dec
jns
inc
push
xor
pop
fldcw
test
fmull
mov
leave
mov
fs
push
xor
mov
pushf
pop
clc
out
out
mov
cltd
add
pop
into
push
lea
and
push
lcall
fwait
cwtl
mov
repz
add
cmp
sub
call
xor
das
lds
js
inc
jne
lods
fcomip
dec
lds
dec
xchg
fcmovb
jb
pop
adcb
cmp
add
pop
pop
pop
cmp
mov
xor
push
adc
jo
cmpsb
pop
movl
iret
xchg
loop
xor
js
dec
push
and
fucomip
ret
push
and
fcmovnu
or
test
mov
xchg
or
call
or
ds
fyl2xp1
out
arpl
ret
dec
dec
fistps
cmpsl
fs
out
ss
lahf
inc
pop
or
mov
or
lods
or
loopne
xlat
mov
sub
mov
add
xchg
dec
xchg
jp
sub
jo
lret
jge
ret
cmp
inc
mov
mov
aad
xor
or
daa
pcmpeqw
clc
dec
lock
push
pop
sub
outsl
data16
push
jle
pop
xchg
faddp
enter
enter
jmp
ret
mov
pop
cmc
ja
push
cmp
cmp
jg
xchg
outsb
leave
inc
and
pop
fnsave
adc
xchg
sti
jne
imul
divb
or
pop
pop
test
loopne
push
ffreep
jns
mov
int
xchg
or
xchg
mov
insl
movsl
dec
xor
loope
outsl
cmc
sub
gs
imul
fisubs
xchg
cmpl
fmull
push
jb
int
mov
lods
mov
ret
push
add
icebp
enter
jg
cmp
mov
jae
and
addr16
popa
popf
bnd
cltd
add
add
xchg
mov
push
jmp
sbb
push
dec
aad
jbe
mov
test
cs
jo
lcall
or
xchg
push
pop
imul
ret
add
test
mov
jo
shlb
sbb
push
test
out
lcall
mov
pop
mov
std
mov
push
sarb
xorb
fdivr
add
rclb
mov
push
rcrl
lds
add
popf
pop
and
scas
pop
jbe
mov
aam
mov
inc
mov
inc
sbb
inc
mov
rol
pop
mov
xchg
and
dec
imul
push
adc
pop
mov
mov
xor
cmp
mov
sub
sbb
cmp
jecxz
les
or
aaa
call
jnp
jnp
and
insl
push
cltd
stos
sub
fsubl
mov
pop
repnz
das
rcl
lods
jl
mov
int
js
fnsave
cmc
push
call
es
cmp
push
adc
dec
xor
cmp
out
adc
xorl
gs
inc
loope
ffree
mov
sahf
mov
lods
pop
or
pop
cmp
jae
jl
adc
mov
les
mov
xor
jns
xchg
mov
fdivr
xchg
dec
out
andb
stc
dec
pop
aad
adc
outsb
divb
ja
les
ret
mov
mov
adc
push
nop
push
or
cs
or
nop
pop
pusha
stc
ficompl
jb
or
adc
pop
bound
inc
adc
fs
ljmp
rorb
stc
inc
dec
out
lahf
adc
push
mov
dec
fs
loope
jg
mov
push
xchg
dec
shr
and
jmp
lcall
iret
jns
inc
inc
test
stos
sub
dec
imul
das
sbb
mov
and
jge
lea
push
or
pop
movsl
mov
cwtl
out
jmp
mov
dec
fsubrs
and
dec
cmc
push
xor
lret
pop
icebp
mov
adc
mull
jno
cmpsb
pushf
rolb
test
sub
arpl
shrb
inc
loop
fildl
inc
test
addr16
hlt
mov
ret
test
arpl
imul
and
stc
ss
pop
pop
mov
iret
in
into
test
mov
xor
xchg
xchg
cmpsb
pop
xor
into
dec
testb
ret
outsb
mov
adc
ret
xchg
pop
add
inc
std
cwtl
dec
or
xchg
add
into
sub
xor
push
lods
in
sar
jle
adc
cmpsl
jno
cmp
push
incl
sbb
in
cmp
dec
sub
jbe
mov
sub
add
in
repz
das
inc
out
jmp
mov
pop
sub
xchg
mov
ljmp
std
insb
stos
ljmp
shrb
stos
das
orl
lods
mov
xchg
inc
cmpsb
orl
pop
and
aad
icebp
xorb
pop
push
xchg
cwtl
sbb
fwait
test
mov
cmp
mov
repz
lds
inc
add
cld
out
fisubrl
mov
gs
andb
xchg
aad
cs
pop
arpl
rolb
mov
xor
das
pushf
bound
cmp
push
xchg
push
jb
sub
rol
lret
sahf
xor
lds
jmp
popa
pop
cld
pop
inc
jne
jae
aam
aad
dec
xor
pop
es
mov
sub
jbe
xlat
jbe
pop
sbb
xchg
ljmp
mov
test
dec
xor
mov
cmp
loop
in
xchg
scas
pop
add
mov
or
mov
or
xchg
sbb
int3
cmp
div
lahf
xchg
in
or
div
mov
adc
out
in
xor
es
mov
mov
scas
leave
ret
jg
movsb
pop
add
sbb
in
sbb
sbbl
push
ficoms
xchg
ss
testb
xchg
shlb
in
jb
inc
pop
lahf
mov
inc
dec
test
or
mov
rcrl
xchg
inc
xlat
inc
xor
fbstp
dec
int3
fildll
adc
xor
dec
dec
sub
loope
jno
outsb
cltd
adc
dec
fs
mov
loopne
mov
ja
int3
mov
mov
mov
xlat
cwtl
arpl
mov
inc
inc
cmpb
adc
add
pop
sub
sub
push
cmc
ficoms
movsb
faddp
cmpl
add
dec
or
test
xor
clc
xor
or
sahf
scas
js
adc
stos
cli
add
mov
push
jp
sub
fdiv
iret
fldcw
movsl
pop
in
cmpsl
fs
lods
jae
add
cwtl
in
add
loopne
mov
xchg
popf
mov
and
dec
mov
jae
gs
fists
lret
lcall
shrb
and
jae
sbb
inc
push
sbb
push
clc
or
pop
stos
std
sbb
orb
dec
add
aaa
pop
ret
insb
outsb
shr
lcall
mov
lret
cmp
cmp
xor
cmp
dec
inc
test
insl
in
iret
jle
gs
loope
loopne
sbb
dec
inc
push
into
cmp
mov
mov
cmpsl
fisubrs
and
out
nop
cmp
ss
add
jmp
xor
sbb
jp
ss
mov
sub
pop
negb
or
fs
inc
in
sub
cwtl
popf
test
xchg
xor
jge
sbb
rolb
loop
jnp
pop
arpl
psllw
lret
in
cmpb
test
hlt
cmp
in
cmp
int3
push
mov
shr
sti
shll
jmp
mov
push
jns
and
mov
jae
aad
rorb
xor
stos
cmp
pop
stos
and
stos
loope
lock
jl
fmull
into
fs
cmp
ret
gs
adc
lock
cmpsb
loop
pusha
xchg
inc
push
in
cmc
cmpb
popa
das
imul
addr16
js
out
outsl
cmp
cmp
fidivrs
lahf
sbb
sti
xor
insb
imul
xchg
pusha
push
pop
pop
jecxz
sbb
push
pop
mov
xor
js
inc
stos
jge
sub
add
iret
sarb
sub
int3
sub
xor
mov
leave
andl
ljmp
icebp
addb
movsb
xor
inc
aaa
sahf
in
xchg
xchg
adc
loope
lret
xor
pop
jl
xchg
dec
stos
fstps
pop
push
icebp
int3
inc
and
push
mov
decb
inc
mov
inc
fstps
push
in
dec
cmpsl
aad
popa
inc
sbb
mov
sbb
iret
loopw
mov
sub
or
dec
popf
gs
scas
xchg
jmp
fistl
pop
jnp
or
sub
mov
jbe
pop
mov
mov
in
cmpb
pop
pusha
out
rol
iret
leave
daa
xor
rclb
jecxz
mov
stos
mov
daa
and
xchg
scas
sub
out
and
mov
aam
or
insl
xlat
sub
sahf
xorb
test
pop
jno
add
lret
sub
mov
fstps
cmc
cmp
jle
pop
cmc
cwtl
sub
hlt
xchg
jno
test
insl
lods
xor
mov
lods
mov
mov
rclb
stos
out
sarb
lock
jecxz
mov
add
cmpsl
aaa
push
sbbl
push
ficomps
pop
push
xor
outsl
lock
pop
sub
push
cmpsb
dec
xor
sti
adcl
mov
push
sub
cmpsl
jne
mov
sub
sti
test
sbb
lea
cmp
test
mov
cmp
imull
lcall
data16
sbb
popa
scas
std
sub
outsb
or
jmp
inc
jbe
in
jg
adc
mov
daa
add
mov
sub
sub
test
cmpsl
outsl
inc
lea
cmpsb
or
push
std
xchg
sub
fadds
lret
jmp
sarb
inc
aad
shl
dec
mov
push
enter
jno
ja
cmpsl
cltd
mov
clc
gs
mov
movsl
lcall
mov
fistl
jmp
sub
test
rcrb
jns
jmp
stos
mov
es
ja
xchg
jne
sti
jecxz
jbe
mov
xchg
enter
mov
xchg
adc
ds
jae
push
or
and
lea
insl
es
mov
into
lahf
pop
adc
mov
dec
inc
in
sahf
loop
push
jbe
mov
push
and
xor
mov
and
push
scas
and
xor
lahf
mov
lds
push
jp
fidivl
sti
cmp
cmp
hlt
jp
add
dec
or
insb
rcrb
cmp
push
push
shll
add
sbb
scas
cmpsb
fnstenv
or
sub
sahf
jmp
add
push
mov
or
jno
push
xchg
bnd
shrb
lcall
ss
adc
push
xor
push
mov
or
das
mov
pop
movsl
sysenter
ljmp
jno
xchg
and
inc
inc
cmpsl
inc
ret
cmpsl
pusha
dec
xchg
sub
jge
adc
cmp
cmp
push
aas
js
adc
lock
aam
daa
push
lcall
bound
test
jbe
je
xchg
lahf
or
sbb
xor
inc
adc
sbb
nop
or
call
sub
out
fildll
inc
in
popf
add
cwtl
jecxz
andl
dec
push
sbb
fmuls
aam
cwtl
xchg
sbb
cli
pop
sbbb
mov
jle
daa
imul
lock
aas
sub
repz
cmp
lock
pop
outsl
mov
pop
stos
or
lret
es
dec
subl
outsb
or
cmp
and
push
xchg
pop
cmp
nop
test
int
aad
jne
pop
cld
stos
mov
mov
cmp
pop
mov
inc
cmp
jle
test
add
sbb
pusha
pop
xchg
popf
repz
pop
idivl
sub
addr16
mov
dec
pop
in
sbb
sub
orl
and
outsb
sub
or
sub
cltd
out
dec
jl
popa
dec
cmp
push
and
pop
push
xor
adc
je
aam
adc
mov
je
inc
mov
jle
orb
sub
cmp
cmpsb
rcrb
jae
and
dec
orl
inc
enter
or
callw
dec
adc
aad
fisubrs
jl
xchg
add
push
add
sbb
xchg
adc
mov
and
aad
cmp
sti
cmp
loopne
in
push
lret
cmpsb
push
mov
push
test
mov
jnp
mov
out
cltd
lock
sahf
xor
scas
mov
sbb
add
cmp
or
stos
cwtl
lret
xadd
ja
int
cmp
jae
fs
xor
aas
vsubpd
xchg
addr16
xor
push
subl
subl
jne
xor
mov
mov
int
in
pop
into
dec
sub
cmp
xor
add
inc
pushf
test
mov
mov
je
dec
xor
inc
sub
and
fs
lcall
xchg
cmpsl
imul
jp
and
mov
or
sbb
cltd
jp
data16
sub
stc
sub
loopne
cmp
lret
dec
or
dec
fidivl
adc
push
cmp
fs
xchg
ljmp
in
jmp
xor
lret
mov
cmpsb
inc
mov
sahf
mov
dec
jae
pop
mov
loope
idivb
or
out
add
pop
pop
into
cmp
sbb
xlat
inc
or
insb
mov
leave
jnp
fcompl
xchg
movsl
jbe
scas
push
sub
push
out
into
mov
adc
call
sti
sbb
xor
xchg
mov
and
xchg
inc
xchg
mul
mov
jl
mov
cmpsb
aam
insb
or
and
aad
adc
mov
test
dec
cmp
pop
cs
hlt
inc
pop
push
test
sahf
loopne
fwait
out
push
lcall
fistpll
cltd
jne
mov
data16
jbe
push
adc
ret
sbbl
xadd
lahf
add
cmp
and
inc
adcl
stos
mov
pushf
scas
and
pop
ficompl
and
mov
sbb
daa
push
lahf
divb
mov
out
lods
daa
dec
push
push
pop
cmp
sbb
int
mov
in
add
fmuls
scas
fdivl
and
mov
mov
push
fnstcw
test
add
and
out
cmp
cmp
scas
cmpsb
ds
xchg
xorl
repnz
cmc
adc
xchg
int3
jnp
jle
and
jg
push
rorb
pop
lock
jl
jle
xchg
or
push
cmc
mov
jge
les
xlat
push
pop
jne
in
std
xchg
gs
mov
push
inc
orl
xchg
xchg
inc
nop
add
cmpb
mov
ret
in
xchg
inc
imul
in
sti
imul
cmp
xchg
cmp
push
mov
adc
icebp
mov
cld
lods
clc
repnz
out
movb
sahf
js
cld
push
mov
mov
xor
pop
cltd
mov
and
pop
cmp
imul
jnp
bound
test
mov
lcall
das
jg
inc
shll
sbb
add
stos
jp
rclb
adc
push
daa
xor
dec
add
mov
js
cmp
ss
clc
sub
dec
adc
aaa
lock
pusha
and
sahf
cmp
movsl
push
mov
ffree
xchg
mov
sub
lret
or
je
pop
add
sbb
jne
or
insb
push
test
mov
pop
and
out
pop
enter
in
cmpsb
ja
stos
sub
pop
mov
push
xchg
iret
pushf
rclb
sub
inc
out
jbe
imul
es
repnz
mov
bound
mov
leave
mov
cld
mov
sar
into
add
movsl
out
xchg
sbb
inc
jge
sahf
jnp
ja
sbb
mov
les
loop
mov
fisubrs
cmp
cwtl
sarb
xchg
std
sbb
loopne
mov
xchg
xor
mov
jle
push
das
add
jb
xor
or
repz
daa
js
repz
push
and
js
shrb
data16
cs
lret
mov
fwait
fwait
gs
imul
js
cmc
xor
xor
shll
repz
test
mov
shlb
ficomps
xor
jge
mov
xchg
adc
outsb
xchg
dec
jae
sub
and
or
les
add
jo
sub
je
mov
mov
inc
dec
jmp
ja
clc
pop
inc
xchg
sub
push
rorl
pop
lret
adc
mov
sarb
stos
sbb
cmpb
sbbl
add
shr
push
sbbl
scas
jmp
push
sbb
or
rcl
inc
fistpl
fidivrl
or
mov
mov
out
xchg
nop
rep
sub
cmc
imul
aad
add
jbe
out
popa
adc
dec
and
cltd
or
aaa
sub
or
cli
lcall
inc
cmp
mov
addr16
inc
ja
mov
add
sbb
push
jbe
aas
cmp
xor
js
lds
testl
test
mov
dec
or
dec
aad
mov
lds
adc
andl
pop
enter
jb
xor
cmp
add
dec
addr16
ljmp
dec
paddq
push
or
pop
gs
jle
and
lcall
cmp
xor
push
jecxz
loope
cmpsl
mov
add
loopne
lret
push
jle
mov
pop
xchg
pop
xor
xor
cld
pop
sub
push
and
ljmp
leave
xchg
push
negl
pop
repz
and
negb
add
stc
mov
mov
in
in
loop
mov
cmp
mov
pop
stos
jp
jo
inc
dec
pop
dec
lea
inc
hlt
aad
xchg
inc
fiadds
mov
sbb
sub
cmpsb
cmpsl
cmpsl
mov
xor
mov
movsb
fcoml
mov
scas
aad
fmulp
pop
mov
and
daa
add
sub
add
rorl
xor
mov
rolb
in
sti
sbb
in
sub
stc
push
xor
insl
mov
inc
add
popa
fdivrp
lock
fisubrl
push
das
jo
sbb
sub
movsb
mov
adc
je
mov
jge
mov
mov
scas
out
add
mov
xchg
jmp
sub
lods
fildl
outsb
es
xlat
jg
inc
shrl
pop
jno
cwtl
outsl
mov
dec
or
sbbl
es
cmp
dec
test
inc
xchg
scas
and
adc
cmp
jnp
xor
push
jmp
adc
jle
pop
pushl
push
insl
out
stc
cltd
addr16
sbb
dec
add
filds
popf
jb
and
movsl
push
inc
sub
xor
sbb
stc
int3
xor
jnp
sti
mov
ss
cwtl
test
sub
aaa
mov
lea
xor
mov
lds
sti
adc
add
sub
xchg
inc
cld
jp
filds
adc
sbb
mov
fidivl
jecxz
dec
xor
fiaddl
scas
subl
addl
fists
fwait
adc
dec
ret
scas
js
xor
inc
aas
add
push
push
ss
mov
adc
pop
aas
xchg
jp
push
sub
push
jle
lds
cmp
xchg
cmp
pop
sbb
outsb
dec
xchg
cli
mov
movsb
dec
sub
push
nop
dec
movsl
push
lahf
imul
jbe
inc
lock
sti
lcall
les
dec
js
jnp
sbb
sub
sahf
sbb
aad
out
pop
mov
sahf
in
mov
iretw
or
popf
mov
popf
push
sub
adc
xchg
xor
cltd
push
push
cmpsl
inc
arpl
cmp
jo
cmc
mov
dec
lcall
and
or
push
add
popf
shrl
mov
push
sub
mov
and
les
cwtl
cltd
xor
xchg
repz
call
jns
and
ret
in
pop
jbe
in
je
adc
ficoms
push
adc
add
mov
icebp
sbb
out
cmc
cli
cmp
mov
push
jge
dec
xlat
cmp
jo
jecxz
xor
sub
jne
mov
es
push
aam
mov
pushf
cmpsb
mov
int
sub
pop
arpl
mov
and
into
mov
dec
lds
inc
std
scas
rol
dec
sbb
mov
mov
mov
xor
mov
outsb
cmpsb
ret
cmp
mov
arpl
pusha
test
pop
add
clc
xchg
dec
or
inc
ljmp
mov
add
out
fisubs
mov
fisttps
lods
jns
push
mov
pushf
xor
scas
and
mov
in
pop
cwtl
outsl
pop
aam
or
adc
xor
js
add
add
xchg
cmp
inc
popf
enter
cmp
ret
test
ret
or
aam
test
inc
scas
subb
in
cmc
mov
or
mov
test
adc
popf
sub
mov
jg
mov
roll
in
mov
fs
inc
lea
xchg
mull
or
sub
inc
in
mov
out
cltd
dec
roll
xchg
or
ja
pop
ja
mov
or
sbb
jns
sub
pop
add
or
mov
std
fcos
fcmovne
push
fs
jo
and
pop
xchg
cmp
mov
sbb
aaa
cmp
push
mov
clc
sub
sub
fcomip
ss
xchg
cmp
adc
es
in
pop
pop
mov
xchg
ja
push
push
fisubrl
ja
mov
jae
arpl
inc
and
xchg
push
sub
mov
scas
or
arpl
dec
push
lahf
in
cwtl
adc
xchg
sbb
mov
add
cld
sub
jle
das
iret
mov
in
icebp
popa
mov
cmpb
push
sti
mov
popf
jmp
arpl
mov
pop
inc
inc
mov
rcrb
push
aad
mov
xchg
jns
popa
push
outsl
fisubrs
pop
cmp
push
addl
cmpsb
and
fiaddl
fidivs
push
stos
or
sub
roll
movsb
pusha
pusha
and
sbb
ret
push
push
adc
pop
dec
cmc
mov
xchg
inc
push
cmp
sbb
cmc
xor
cli
adc
scas
cs
mov
mov
pop
enter
jno
xchg
lds
daa
or
mov
or
sahf
out
dec
pop
rep
and
pusha
inc
test
adc
cmp
ret
scas
mov
fs
xor
mov
mov
out
fsubl
sbb
mov
sub
fcom
idiv
or
and
scas
adc
cmp
arpl
out
or
add
inc
add
popf
lret
icebp
sbb
mov
fisubs
xor
rolb
cmpsl
jp
out
or
fwait
xchg
add
ds
cmp
xchg
push
mov
sbb
add
outsl
xchg
jo
enter
fistl
mov
push
dec
in
add
sbb
imul
cli
test
call
test
xchg
lods
outsb
data16
pop
adc
jg
das
inc
dec
push
in
mov
adc
jge
dec
mov
aaa
pop
add
fs
aas
fstl
sbb
mov
pop
ljmp
mov
cmp
insb
inc
repz
es
test
daa
cmp
je
fiadds
jg
dec
xchg
test
push
jge
push
popf
or
cwtl
cwtl
xor
ljmp
sbb
pop
lods
jb
fldcw
adc
and
cltd
mov
cwtl
ja
push
inc
mov
iret
loopne
mov
cs
int
push
int3
push
push
push
sbb
and
ljmp
in
sbb
loope
add
shlb
fdivrp
dec
mov
jle
sbb
push
mov
sahf
mov
jg
clc
stos
jno
add
out
sub
mov
mov
imul
mov
ficoms
data16
add
pushl
mov
lea
push
add
mov
and
mov
pushf
mov
shll
shlb
data16
xlat
int
into
adc
popf
call
pop
fistpl
inc
and
push
dec
cmc
inc
loope
in
adc
xor
jle
mov
sbb
repnz
call
aad
jp
fcompl
jle
add
nop
iret
sub
ret
lcall
pop
xchg
sub
or
ficoml
adc
js
cmp
cmc
mov
and
add
cmp
xchg
stc
dec
int3
lret
rorl
fnsave
pop
jge
push
cmpsb
push
js
sahf
fadds
addb
xchg
aaa
out
mov
mov
popa
insl
cltd
mov
add
pop
mov
ret
bound
js
test
mov
mov
mov
leave
pop
es
sub
adc
sahf
dec
ror
cltd
les
mov
daa
lcall
mov
lahf
add
push
mov
pop
jmp
roll
push
xor
mov
test
lds
mov
xor
push
mov
adc
push
jno
jne
mov
mov
dec
or
aaa
cmp
xchg
ja
lods
sbb
ret
and
xchg
cmp
sbb
cltd
adc
cmp
ret
push
pop
lods
mov
jl
inc
dec
mov
xor
adc
in
sti
jb
shll
shlb
add
mov
mov
test
cmpsb
cmpsl
jne
adc
adc
pop
push
cmc
ret
jb
addb
push
xor
pusha
inc
push
out
in
pop
cmc
mov
xchg
mov
fisubrs
into
or
pop
lret
pusha
insl
aad
cmc
mov
push
xchg
push
add
fadds
cmpsl
in
mov
inc
push
in
mov
pop
out
addr16
add
inc
dec
fistpll
iret
mov
jl
mov
adc
idiv
xor
ficoms
push
imul
dec
xchg
fcmovnb
sbb
sub
jge
in
add
or
arpl
pop
dec
add
lea
addr16
clc
ret
lods
lods
movsl
iret
cmp
test
xchg
fwait
cmp
add
fwait
lea
sub
iret
hlt
push
gs
xchg
bound
dec
adc
sbb
inc
call
daa
lahf
sbb
cwtl
pop
stos
out
xchg
xchg
cmpsl
sbb
xor
pop
ja
inc
hlt
rorb
insb
sub
pushf
inc
psubw
mov
mov
jo
sub
faddp
or
jmp
adc
push
push
mov
lret
in
lret
sub
pop
cs
lods
aam
and
adc
and
vmwrite
repz
xor
jle
push
arpl
movsb
sbb
cmp
mov
fidivs
enter
fisttps
or
push
popf
push
in
rcrb
lahf
mov
ja
jno
and
pop
cmpb
jbe
sub
push
movsl
or
xor
enter
sbb
dec
pop
add
sbb
repz
scas
and
pop
sub
add
mov
cld
sub
movsb
and
sub
testb
mov
nop
repz
mov
pop
jbe
bound
dec
insl
xchg
cwtl
or
or
adc
mull
sbb
fisubl
ror
shrb
sbb
jl
call
popa
ret
xchg
pop
cmp
mov
imul
push
mov
xchg
jg
int3
ljmp
into
sub
xchg
adc
lds
mov
mov
dec
or
xchg
push
mov
dec
cld
int
gs
ret
dec
sbb
cmpsb
or
push
cmp
test
loope
loopnew
push
add
or
stc
lods
sbb
cli
test
ljmp
sbb
dec
and
pop
clc
or
xor
and
mov
out
jl
pop
fbld
popa
loop
add
ret
psubq
push
pop
loopne
adcb
inc
add
jp
stos
cld
lea
and
scas
imulb
mov
xchg
push
sub
sub
nop
iret
ss
leave
push
cmp
out
movd
out
jo
ds
inc
or
sbbb
jle
arpl
pop
or
jno
popa
stc
arpl
mov
cwtl
cmp
pusha
iret
lahf
fwait
add
or
xor
ljmp
push
and
sti
add
cmp
or
and
adc
add
stos
jns
jge
inc
mov
jno
inc
inc
inc
fnstenv
aaa
dec
leave
push
sbb
dec
test
jo
cmp
cmp
mov
scas
sbb
jb
test
imul
pop
jno
cmpsl
loopne
mov
jp
mov
subl
stos
mov
out
dec
rol
insl
hlt
sbb
jg
sahf
mov
jecxz
mov
js
ljmp
aas
lock
and
aad
lret
orb
repz
data16
xor
shr
push
imul
pandn
pop
outsb
lock
ljmp
pushl
cli
push
xchg
pop
fwait
aam
cmp
xchg
mov
hlt
or
cmp
lea
and
jae
and
jae
aas
dec
and
pop
ja
sti
xchg
loopne
fidivrs
adc
dec
jg
scas
xor
xchg
sub
dec
sahf
sti
mov
test
out
dec
subb
in
sbb
dec
inc
mov
shrb
lcall
push
add
fcompl
jns
ret
xlat
call
test
shlb
add
mov
push
pop
sub
push
insb
popa
ret
push
jp
and
jg
mov
push
fcmovbe
xor
push
shrb
jb
mov
xchg
scas
add
fstpt
jg
jge
mov
pop
mov
cmpsb
sbb
pop
out
cltd
loope
fcomps
cwtl
sbb
lods
sub
cld
mov
push
enter
jg
rolb
push
push
outsl
stos
xchg
mov
shll
mov
adc
loopne
outsb
and
in
mov
inc
xchg
cs
cli
mov
mov
pop
jmp
int3
fiadds
and
pop
add
pop
mov
fs
cli
or
xchg
ss
jbe
pop
pop
shl
mov
ret
cli
mov
pop
inc
jns
adc
cs
inc
sub
push
das
push
inc
or
repnz
sbb
clc
in
jge
push
sub
push
sbb
into
aas
jbe
je
popa
push
repnz
sub
pop
orb
push
ret
pop
subb
sub
mov
dec
jl
push
or
xor
xchg
jg
fisubrs
iret
call
sbb
push
add
jne
out
pop
inc
aas
mov
add
xchg
xchg
jmp
lods
test
repz
add
mov
repz
cs
mov
add
stos
dec
aam
aad
js
in
ret
xorl
dec
inc
push
addl
jbe
fldcw
in
lret
mov
jmp
in
movsl
clc
std
dec
imulb
fsts
xor
les
fmulp
out
sbb
cmpsb
call
push
fldl
out
pop
xchg
xor
or
insb
cmpsb
fs
movsl
shld
xchg
lods
es
jae
xchg
lmsw
jno
or
jmp
lcall
mov
repz
or
and
and
sbb
ret
mov
pop
popa
dec
mov
mov
cmpsl
push
push
add
aam
xor
in
mov
add
decb
and
stos
addps
and
cmp
addr16
xor
stos
loopne
sahf
jl
add
mov
repnz
lods
add
mov
or
inc
mov
lcall
into
mov
ljmp
dec
xchg
fmulp
xor
mov
mov
xchg
daa
xchg
pop
sahf
add
cmp
or
cmp
in
ret
pusha
mov
lock
pop
cmp
cmp
dec
push
pop
jl
push
add
stos
push
lcall
mov
jle
dec
repz
cmp
jno
lea
sbb
push
pusha
dec
sahf
lods
mov
push
in
sub
outsb
add
pop
stos
inc
cmp
or
cmpb
scas
js
cli
cs
movsb
ljmp
cmc
std
push
addr16
mov
xchg
push
xchg
hlt
mov
sbb
test
jecxz
sbb
jge
daa
cmp
mov
inc
arpl
mov
inc
popf
lcall
je
out
dec
rep
ret
dec
push
fdivl
roll
loope
inc
mov
jae
jmp
mov
insb
roll
sub
and
jnp
mov
push
fldcw
fmuls
adc
es
data16
xor
test
call
lret
mov
mov
lods
add
movsl
xor
cwtl
pop
pushf
push
push
or
adc
stos
inc
and
movsb
sahf
mov
push
jb
repz
popf
push
insb
das
push
jl
xor
push
pop
pop
mov
jg
mov
mov
mov
fcmovnu
and
sub
clc
shrl
mov
popa
cmpl
mov
inc
add
dec
and
pop
push
pop
mov
sub
in
push
dec
les
out
pop
rorb
lret
xchg
in
jns
sub
dec
dec
push
cli
mov
aad
xor
inc
scas
mov
je
sahf
xchg
adc
mov
lret
xchg
ficomps
cmc
xchg
out
int3
adc
xchg
sub
inc
mov
loope
cld
xchg
mov
push
push
push
das
cmp
out
lcall
or
push
pop
pop
xor
push
fistpll
add
adc
xor
lcall
add
add
je
ja
jnp
mov
mov
loop
mov
or
addr16
push
xchg
jle
jbe
mov
jb
xchg
sarl
movsl
sahf
pop
rclb
fcoml
fdivs
data16
inc
daa
push
mov
inc
and
add
out
imul
push
push
xor
adc
sub
shl
dec
outsl
ljmp
ja
jp
addr16
aaa
push
xor
shll
stos
jecxz
mov
stos
test
push
aaa
loopne
jmp
cmovbe
jae
insl
mov
mov
out
jge
and
mov
jl
lock
add
mov
je
cmp
xchg
jmp
out
fnstcw
aas
fmulp
jo
push
clc
cmp
outsl
push
jae
jmp
aaa
sub
leave
inc
rolb
cld
sbb
push
je
xchg
mov
out
lret
adc
in
pusha
xchg
xchg
test
fs
pop
aaa
sti
push
inc
mov
aaa
aaa
loope
cs
mov
out
sbb
inc
cmp
push
jecxz
cmpsl
push
xor
dec
les
xor
flds
pop
xchg
lret
mov
nop
adc
push
test
sub
and
mov
add
test
mov
and
sahf
rcll
clc
jg
int3
add
cmp
adc
fwait
jnp
insl
inc
mov
subl
mov
and
iret
inc
and
push
dec
mov
jecxz
cmp
jp
lcall
mov
imul
popf
xlat
sub
mov
push
fstl
push
scas
push
push
add
push
fstpl
in
int
adcb
pop
popa
cld
jle
mov
lret
and
sub
add
inc
xlat
dec
push
popl
das
cmpsb
testl
cmp
inc
fmuls
cmp
scas
pcmpeqd
in
pushf
sub
dec
and
push
xor
sub
pop
push
or
inc
push
test
dec
int3
push
jns
fldenv
pop
stos
sti
aas
in
mov
jo
inc
adc
xor
and
stc
mov
scas
in
iret
mov
mov
nop
sbb
bound
inc
push
test
cwtl
cmp
movsb
cli
jno
or
int
push
push
fisubrl
out
xor
fsubrs
mov
pop
sub
loop
mov
xchg
inc
mov
add
sbb
mov
sbb
mov
shlb
lods
cmp
xchg
and
fisubl
pop
ljmp
ret
sbb
ss
das
push
loop
jmp
lods
enter
test
cmp
icebp
lret
jbe
push
and
cmpsb
mov
pop
mov
les
sub
stc
outsl
gs
jns
xchg
and
outsl
sbb
add
outsl
pusha
mov
andps
mov
xchg
or
jae
gs
hlt
lahf
shll
aaa
orl
add
inc
pop
xor
mov
arpl
call
pop
addl
daa
mov
fcoml
push
cmp
xchg
pop
stos
bsf
in
xchg
dec
in
pop
xchg
adc
sbb
adc
adc
inc
movsl
dec
xor
pop
std
inc
je
cld
mov
mov
xor
mov
mov
or
adc
das
sahf
ret
in
push
jmp
inc
add
add
mov
cmp
loop
cs
inc
jbe
sbb
rcrl
out
loope
call
ljmp
dec
cmpsb
jae
xor
shrl
subl
xorb
xchg
aam
cmp
ss
sbb
aad
ja
mov
fnstcw
mov
and
mov
xor
dec
jns
fstl
aam
mov
pop
popf
cmp
cmp
jne
push
arpl
adc
sahf
mov
sbb
sbb
and
and
enter
jecxz
inc
sbb
fsubrp
shll
xchg
stos
push
jnp
cmpl
mulb
push
pop
out
or
inc
sub
mov
add
add
sub
dec
mov
jp
and
dec
xchg
mov
push
jp
hlt
fiadds
adc
sbb
push
xchg
ret
cli
push
dec
mov
nop
pop
repz
or
orb
nop
sub
jbe
inc
mov
sbb
xchg
mov
out
nop
pop
mov
jnp
xor
insb
in
push
hlt
out
imul
lods
out
testl
lcall
loop
jno
and
in
cmp
fwait
xchg
std
mov
shrl
push
and
mov
xchg
xchg
cltd
stos
mov
sbbb
pop
int3
icebp
or
lahf
jnp
xchg
or
xor
fwait
mov
xchg
xacquire
sbb
sahf
jecxz
jmp
dec
mov
mov
out
lret
mov
adc
jo
test
sbbb
sbb
pop
js
mov
repz
mov
fildl
and
push
out
in
mov
scas
sahf
testl
daa
adc
xor
xchg
adc
pop
iret
clc
ficompl
sbb
cmpsl
xchg
mov
add
mov
mov
mov
xor
aaa
lods
in
mov
mov
mull
popa
push
mov
aam
nop
pop
rorl
jmp
jno
into
fldl
jno
jb
push
popa
notb
lcall
lock
add
out
push
ret
lock
add
int
and
cltd
repnz
lahf
cmpsb
and
cmpb
sub
xchg
mov
sub
adc
sbb
cli
pushf
push
arpl
push
xlat
insb
push
sub
push
jle
mov
dec
cmpsb
sub
popf
sbb
or
flds
mov
or
fisttpl
pushl
mov
je
adc
mov
movsb
or
in
cmp
cwtl
leave
push
dec
inc
jno
notl
jmp
pop
popf
lcall
ds
cmpsl
in
loopne
dec
insl
mov
repz
outsb
jne
pop
negb
add
cltd
adc
aaa
std
jnp
test
push
mov
repnz
add
scas
adc
xchg
popa
mov
adc
mov
fistpll
dec
cmp
leave
push
out
aad
out
push
orl
mov
movsb
xor
jecxz
das
sub
jbe
sbb
rcl
loop
arpl
je
sub
or
test
cmp
lret
xor
mov
mov
test
out
inc
mov
mov
mov
push
sbb
inc
jne
ret
dec
fidivrl
cltd
dec
inc
push
xchg
sub
push
out
int
push
sub
loop
jno
push
push
dec
and
stos
mov
pop
popa
and
mov
adc
pop
aas
push
and
fisttpll
loope
loope
cwtl
add
xor
jl
xor
push
push
sahf
mov
and
repz
shlb
jecxz
mov
ja
push
mov
xchg
cmp
adc
pop
cmp
push
repnz
adc
lock
cmp
nopl
loopne
call
push
sbb
insb
push
ret
sbb
push
arpl
call
bound
mov
mov
inc
sbb
xchg
int
jns
cmp
and
sbb
shll
sub
adc
add
subl
mov
popf
push
pop
lds
cmp
test
xor
mov
adc
imul
pop
or
ja
xorb
push
jae
cmp
addr16
mov
mov
mov
out
cmpsb
inc
or
dec
mov
xor
push
inc
leave
and
xchg
mov
inc
pusha
andb
push
mov
testb
jecxz
cld
lret
hlt
pop
push
hlt
sbb
jecxz
jp
mov
aas
adc
and
dec
sar
cmp
loope
cmpsb
mov
jns
sub
inc
in
lret
jle
or
sbb
in
cmpsb
ss
cmp
jg
or
rcll
push
push
xchg
ret
jo
movsb
xor
ljmp
mov
mov
loope
sbb
nop
cltd
ret
mov
adc
in
mov
jb
or
sub
loop
add
int3
xchg
iret
ret
loop
nop
insb
push
push
sbb
pusha
popf
xchg
mov
mov
mov
fwait
push
mov
lock
clc
bound
js
imul
sbbl
or
xchg
inc
mov
xor
ds
mov
out
jae
and
and
aam
cmp
in
shl
mov
loope
in
adc
popf
and
inc
xorl
xchg
xor
roll
push
mov
dec
and
mov
inc
jge
pusha
outsb
mov
mov
add
jmp
loope
xor
movsl
nop
int
mov
imul
mov
mov
push
fdivl
cmc
sbb
lods
dec
mov
cltd
rcrl
imul
fucomip
bound
mov
mov
out
jmp
lods
jle
pop
cli
out
xchg
arpl
pop
inc
mov
pusha
rcll
xor
int
inc
push
pop
adc
xor
jg
iret
iret
sub
jne
jb
js
add
sub
mov
mov
mov
imul
xchg
pop
je
jo
cmp
xchg
xor
sbb
inc
inc
sbb
sub
pop
enter
sbb
scas
ficomps
es
loope
jne
mov
data16
or
rcll
sbb
cmp
sub
xor
pop
pusha
loopne
stc
leave
std
push
jb
dec
js
jmp
cli
adc
cmc
cltd
mov
jmp
and
arpl
push
stos
imul
xchg
pop
xchg
aaa
lahf
stc
pop
notb
loope
ja
xlat
xchg
fmuls
sub
cmp
lret
jecxz
adc
xchg
fiadds
iret
enter
popf
mov
mov
aaa
cmp
pushf
xor
mul
cld
mov
stos
jmp
rolb
nop
lock
sub
in
push
inc
dec
je
adc
ret
inc
mov
idiv
sbb
cld
cmpsl
mov
enter
cli
leave
and
pusha
push
mov
mov
push
repnz
pop
add
adc
and
mov
mov
in
test
in
push
cmp
mov
push
sbb
mov
mov
jnp
push
push
and
mov
pop
testl
fdivrl
std
cmp
out
adc
or
dec
jnp
inc
or
bound
in
push
adc
enter
ja
xchg
lods
test
sbb
sub
cs
xchg
or
pop
xchg
dec
xchg
ret
add
cmp
mov
jmp
std
cmp
mov
stos
popa
pop
inc
loope
std
cs
ficomps
xchg
outsl
jno
out
xchg
sub
fdivp
stos
push
lods
lahf
jge
fdivs
jmp
out
mov
jg
jb
sub
pop
es
cmp
inc
inc
lea
fisttpl
imul
stos
popf
dec
mov
jne
push
lret
pop
mov
out
jmp
rcll
or
dec
mov
aaa
loopne
mov
xor
imul
stc
imul
or
test
push
or
or
push
jmp
fimuls
cmpsl
inc
lods
mov
xchg
cmp
aas
test
mov
jb
push
aad
and
mov
cli
mov
cmp
aas
inc
sbb
js
jnp
cmc
data16
int3
cmpsl
xor
jmp
lds
dec
sbb
ret
jno
xor
jmp
inc
ror
int
lahf
test
dec
and
movsb
add
movzwl
aaa
nop
ds
icebp
mov
sub
sti
pop
pop
push
cwtl
push
push
adc
test
imul
mov
mov
jo
sub
sti
pop
cmp
bound
mov
sub
xlat
insl
or
cmpl
or
scas
ljmp
mov
movsb
loopne
jmp
roll
loop
aam
stos
fstps
jmp
mov
cmp
sahf
insb
jecxz
sbb
mov
mov
mov
sub
data16
lods
pop
jle
sub
inc
inc
inc
push
mov
loope
aad
mov
stos
ljmp
loop
je
mov
jo
push
leave
shll
xchg
lahf
loop
movsl
push
std
xor
loop
cmp
mov
lahf
inc
jge
inc
add
bound
dec
jae
pusha
hlt
aad
xchg
les
add
repz
out
dec
inc
push
std
lock
sbb
cltd
iret
jbe
mov
xchg
xor
rclb
and
int
mov
pop
ljmp
pushf
cli
push
adc
mov
and
jo
jb
inc
lods
in
inc
or
int3
scas
dec
aad
mov
dec
sbb
adc
and
inc
cmp
mov
mov
stos
clc
cmp
xor
cs
push
dec
lods
sbb
xor
hlt
and
sub
inc
jbe
sahf
pop
stos
in
push
xor
xchg
std
add
dec
daa
enter
clc
push
inc
into
nop
mov
stc
push
sbb
loopne
lret
or
rorb
push
push
add
mov
and
sub
mov
fwait
lahf
jge
sti
xchg
inc
cli
cmc
jno
ja
inc
add
lods
jl
push
lds
ret
lds
add
sbb
das
sub
ret
jns
mov
jne
mov
jb
movsb
dec
mov
loopne
lods
jae
mov
mov
pop
gs
std
lcall
rolb
int
imul
loop
mov
nop
test
adc
aas
xchg
enter
jg
xor
pop
lret
cmpsb
fistps
cwtl
lret
push
cwtl
mov
and
aas
xchg
push
mov
fwait
es
push
dec
nop
mov
inc
mov
aaa
ljmp
mov
and
dec
mov
into
aas
imul
add
mov
or
sbb
popf
cmp
jb
fcmovnu
inc
sahf
shrl
inc
scas
sbb
hlt
leave
lock
fildll
xchg
fidivl
mov
arpl
mov
stos
dec
push
data16
mov
cld
xchg
mov
cmpsl
cltd
jo
iret
sti
xchg
pop
or
jmp
push
pop
testl
adc
lret
jecxz
cli
jmp
jg
shl
dec
pushf
jle
ja
push
dec
add
pop
adc
dec
pop
mov
pusha
ljmp
aaa
cmp
pop
mov
add
cmpsb
sbb
imulb
push
iret
mov
push
dec
sub
mov
pop
or
xlat
jp
ret
pop
lret
and
out
adc
es
fisttpll
jle
cmp
lock
jnp
fmuls
repnz
xchg
fiaddl
aas
sub
inc
mov
push
repz
mov
iret
popf
shlb
push
or
inc
lods
push
xlat
push
sti
mov
addb
adc
add
and
sub
cs
jo
popa
imul
in
fcoms
jae
add
insl
sbb
adc
je
outsl
inc
inc
stos
ret
scas
xchg
dec
cltd
mov
inc
aad
pop
mov
mov
mov
insb
mov
fistpll
or
xor
dec
mov
sbb
mov
xor
and
imul
cmc
push
pop
mov
orl
mov
mov
pop
leave
js
cmp
pop
cmp
mov
or
push
inc
ret
out
in
call
cmp
mov
in
and
sbb
pop
mov
mov
lret
push
mov
sbb
sub
aaa
ja
dec
cmpsl
lcall
imul
xor
sub
mov
mov
cmp
dec
sbb
mov
cld
pusha
push
enter
xor
cmp
aad
jge
enter
adc
mov
lea
jo
push
adc
lds
inc
ficomps
loop
cmp
imul
jg
pop
lret
ficoms
sub
pop
jnp
hlt
xchg
pop
jne
xchg
popf
cwtl
pop
aam
nop
lods
and
fsts
dec
add
inc
xchg
rorb
rcrb
dec
jnp
ror
hlt
xor
ss
sub
sub
and
jmp
fistps
xor
dec
and
cltd
sub
push
int3
imul
call
dec
mov
jo
lret
sbb
jb
xor
test
xlat
mov
lcall
jbe
rorb
in
mov
cltd
repnz
sbb
ss
leave
insl
pop
pop
loope
cmp
adc
sub
push
rorl
jns
leave
iret
xor
xchg
jnp
cltd
gs
ja
sbb
mov
lcall
pop
and
pop
push
mov
fs
stos
mov
pop
test
lods
mov
add
push
mov
jns
push
rcl
enter
push
lds
sub
cmp
sbb
insl
adc
mov
leave
dec
cs
or
ret
orb
mov
pop
pop
mov
sub
mov
rorl
add
mov
xchg
and
xor
push
movsl
mov
movsb
cmp
pop
mov
mov
push
ja
add
mov
int
or
sub
add
sbb
mov
movb
cltd
outsb
call
mov
roll
ret
jo
dec
xor
fs
out
testb
xchg
pop
push
push
xchg
sub
lods
pop
xchg
int3
inc
sbb
push
pop
cmc
xor
sar
pushf
jge
sbb
mov
jl
scas
pop
xor
rolb
clc
sub
fidivl
mov
add
testb
sbb
add
xor
loope
jo
lock
int
int
adc
stos
lea
test
das
cwtl
pop
jmp
xchg
sarl
dec
in
imul
imul
adc
xchg
push
lret
loop
mov
aam
call
pop
inc
sahf
mov
jbe
repz
std
and
jb
cmp
lahf
loop
mov
pop
outsb
cmc
les
cmp
out
idivl
push
cs
xor
addb
test
daa
sub
rolb
and
call
cmc
sub
jbe
test
inc
xor
push
jo
pop
jg
or
movl
lcall
adc
fnstcw
int
loope
cli
push
lcall
jle
and
push
push
imul
push
add
lds
fidivrs
pop
xchg
cmp
inc
jge
pop
fildll
popf
xor
and
inc
push
hlt
jge
into
lcall
sarl
mov
in
jg
push
xor
jmp
jl
insb
pop
sub
mov
out
out
sub
mov
push
outsb
gs
xchg
xchg
xchg
lret
mov
push
mov
push
ret
pop
xor
mov
leave
or
lods
enter
out
mov
cltd
push
mov
shl
add
jo
pushf
add
movsb
and
into
insl
sbb
aas
imul
sbb
fs
shrl
loop
je
mov
and
fcomps
inc
or
cwtl
enter
mov
ret
push
push
sub
insb
pop
sub
lods
shll
repz
cltd
nop
fucom
jne
pop
xor
pop
sub
pop
xor
dec
pop
out
loop
and
jns
insb
dec
mov
rcrl
sub
int
aas
mov
fcomps
pop
jge
mov
cmpsb
cmp
inc
sbb
out
jle
aaa
cltd
out
xlat
lahf
ds
pop
popf
xor
iret
mov
add
icebp
mov
bound
cmp
pop
mov
mov
xor
adc
pop
jns
jbe
ljmp
lahf
mov
std
sahf
xchg
mov
pop
loope
fcoml
xchg
and
jmp
mov
pop
cwtl
in
inc
push
sbb
orb
movsl
add
sub
mov
rolb
adc
cmp
push
test
push
aam
loopne
or
nop
jge
jae
jo
lods
inc
in
test
mov
inc
out
add
mov
jne
pusha
cwtl
lret
sbb
push
xor
jnp
sti
cmp
mov
sub
pop
jp
or
or
mull
mov
xchg
leave
loopne
cmp
sbb
imul
jp
stos
popf
xchg
cs
sub
jg
inc
movsl
stos
lods
hlt
in
mov
aam
hlt
sbb
cltd
sbb
pushf
mov
rcrb
pop
pop
loopne
call
inc
arpl
mov
cmp
fcmovb
out
add
int
pop
inc
fildll
xchg
out
leave
xchg
loopne
test
loop
push
pop
imulb
arpl
lahf
jo
loope
lret
sahf
mov
loope
mov
test
adc
jno
mov
jae
cli
jo
mov
mov
ljmp
and
test
or
cs
clc
std
rorb
adc
movsb
fdivrs
sbb
inc
lret
sbb
pop
in
cmp
mov
int3
inc
fcmovnbe
jle
jecxz
dec
lods
and
mov
stc
pop
in
mov
push
mov
test
dec
ljmp
rcll
adc
repnz
insl
adc
ljmp
out
jl
inc
sub
fwait
in
cmp
testl
das
add
rcrb
scas
inc
movsb
std
sub
lea
lds
shll
arpl
sbb
dec
add
repz
lret
pop
inc
xor
icebp
jo
ret
lock
add
cwtl
jmp
loopne
xor
dec
out
sub
cwtl
mov
jae
orb
mov
jmp
dec
cmp
inc
jne
jge
sub
mov
es
pop
xchg
fimuls
push
fwait
rcll
das
or
gs
test
jl
test
sbb
push
jno
pop
pop
sbb
call
lret
mov
loop
outsb
mov
dec
std
cld
int
or
sub
movsl
jp
loopne
cli
adc
std
jns
xor
and
movsl
lods
add
mov
dec
bound
rorl
jo
mov
cs
dec
jmp
xor
cmp
add
xchg
les
dec
js
leave
test
cli
and
out
add
and
cmp
rcrb
mov
bound
testb
dec
inc
inc
lret
fsub
jnp
mov
pop
inc
pop
rcr
sub
mov
std
dec
ss
fistl
int
lods
push
pop
jmp
sahf
popa
xchg
mov
xor
push
pop
fistpll
push
push
sbb
mov
pop
cmp
test
shll
and
test
add
inc
aad
inc
push
xchg
push
aaa
add
add
cmp
movsb
mov
stc
lcall
lahf
out
push
pop
sub
mov
shlb
mov
jnp
jle
push
rcr
pop
push
adc
push
popa
or
fldcw
sarb
cmpb
xchg
inc
push
popf
repz
push
bnd
ljmp
arpl
lods
adc
lea
sahf
push
insb
dec
imul
sbb
mov
lods
xchg
mov
test
in
aaa
and
std
sbb
cmp
fists
loop
and
jecxz
mov
jge
mov
inc
dec
mul
pop
mov
mov
jge
or
sbb
cmp
je
call
adc
faddl
sti
inc
insb
and
sbb
imul
xchg
cli
lea
adc
fwait
push
out
dec
sub
push
sahf
add
jno
add
nop
out
mov
ja
lret
fistl
xchg
test
dec
std
sbb
adc
and
loope
ret
outsl
cltd
jne
and
or
in
mov
mov
insl
push
addr16
mov
inc
add
xlat
fwait
jae
mov
push
and
int3
xor
sub
jecxz
test
cwtl
aad
data16
inc
xor
fists
movsl
sbb
cs
jmp
mov
sbb
jne
xor
jo
push
push
sub
std
fdivs
int3
aam
pop
mov
cmpsl
out
cli
xchg
inc
orps
loop
xor
push
inc
cmpsb
mov
iret
lock
inc
cld
movsb
jae
repz
cmpsb
fldenv
test
pop
pop
mov
repnz
or
lret
pusha
dec
and
iret
or
lret
xchg
flds
int
mov
call
xchg
insb
mov
filds
mov
cmpb
sub
out
imul
mov
inc
or
and
leave
into
push
inc
fisttpl
sbb
cmp
aam
das
cmc
push
mov
cmp
cmp
lret
and
xor
fists
adc
cli
pop
push
fwait
loopne
ret
and
aas
jmp
out
dec
and
xor
inc
ja
or
cmp
inc
fwait
cltd
shlb
push
adc
cmp
cmp
or
fwait
sbb
jns
dec
mov
loope
and
arpl
pop
sti
addr16
mov
dec
movsb
pop
loope
repz
in
imul
les
mov
fwait
pusha
out
mov
jo
jae
cmpsl
outsl
test
mov
fwait
movsl
mov
push
adc
or
jbe
jne
lods
lret
push
inc
scas
inc
xchg
cwtl
nop
sbb
sbb
fstpl
jae
enter
and
movsb
out
jge
fsubr
sub
push
arpl
pop
add
or
in
mov
cmc
rolb
sub
mov
pop
aad
push
pop
movsb
leave
jge
sbb
dec
in
cmp
cmp
adc
push
lcall
pop
dec
test
xchg
cmp
mov
scas
insb
jmp
les
std
int3
xlat
clc
add
lea
lds
aas
icebp
pushf
mov
roll
and
pop
int
and
mov
push
jp
push
sbb
sub
stc
and
outsb
clc
loop
mov
fildl
adc
add
fst
cmp
pop
lea
jle
dec
imul
jnp
push
jne
add
and
call
cld
and
in
cmc
mov
mov
pop
bnd
sahf
iret
outsl
je
push
scas
inc
lahf
adcl
inc
cmp
inc
sbb
nop
mov
loopne
jo
jmp
je
movsl
xor
mov
push
push
in
pop
sbb
dec
outsb
aam
ror
sar
subb
mov
fmull
sub
loop
aas
mov
push
pop
mov
cmp
mov
jmp
mov
push
repz
jo
clc
das
movsb
jle
imul
or
inc
jae
fincstp
add
cli
add
inc
fdivr
mov
or
int
lock
ljmp
hlt
inc
or
jl
xchg
sub
lock
sub
and
jmp
rcr
mov
adc
int
push
jge
xchg
or
add
cmp
sbb
js
pop
and
daa
packuswb
jmp
jge
inc
fs
ret
jne
out
mov
jb
jl
cmpsb
xchg
and
out
push
push
pop
sbb
fcmovu
mov
and
sbb
das
xor
mov
xchg
shl
cli
mov
mov
sti
lock
jle
ret
push
in
ret
pop
mov
mov
jae
daa
mov
inc
dec
js
sahf
ret
orb
add
test
loope
je
xchg
popf
xor
test
fimull
lods
mov
out
fwait
mov
jecxz
adc
sub
pop
mov
pusha
test
mov
push
lahf
cmpsb
push
test
das
cmc
cmpsb
mov
push
iret
cmpsb
es
or
xor
mov
cmp
jno
or
std
xchg
mov
loop
pop
imul
add
test
cli
pop
mov
adc
addr16
jnp
or
subl
or
or
dec
movsb
shll
mov
cmp
enter
sbb
push
xchg
fwait
fwait
loop
icebp
mov
dec
je
jns
enter
xchg
sub
xor
cmp
lods
mov
mov
loopne
push
or
inc
lahf
jmp
push
or
pop
ret
sbb
test
add
stos
pop
dec
inc
push
mov
push
sahf
lods
lret
xchg
subl
sahf
movb
mov
jmp
mov
mov
rcrb
add
inc
adc
repnz
or
scas
imul
data16
mov
sbbl
mov
dec
out
les
sar
outsl
xor
inc
jl
inc
hlt
test
cmp
movsl
jmp
mov
sbb
xchg
fcmove
out
shlb
push
lods
dec
loop
xor
pop
pop
outsb
fwait
add
rorl
or
sub
mov
mov
adc
lret
leave
sub
hlt
fildl
fnstcw
scas
or
mov
fdivs
sti
psrad
fsubrl
fidivrl
dec
fwait
adc
aad
inc
mov
and
lock
jae
mov
inc
pop
pusha
mov
and
test
lahf
aad
int3
pushf
iret
sub
or
push
fcmovbe
pop
add
dec
cltd
inc
mov
movsl
inc
call
mov
dec
or
xchg
sbbl
in
ja
fstl
mov
jg
stos
cmp
lods
into
mov
int
push
lods
jl
repnz
mov
jg
add
cmp
pop
pusha
ss
repz
sub
xchg
lret
repz
lds
repnz
jp
inc
and
cmp
clc
sarl
in
push
adc
fsubrp
jp
stc
dec
mov
int
shll
cwtl
shll
out
inc
mov
add
fstpl
jecxz
jmp
push
pop
icebp
test
ss
sub
lock
cmp
bound
adc
out
rcl
push
in
dec
dec
adc
hlt
and
repnz
and
negb
dec
jo
popa
jbe
xchg
sbbl
xor
clc
inc
mov
push
xchg
shll
xor
push
or
ss
fsts
aam
je
lret
or
jb
mov
xchg
js
pop
fadds
ret
in
or
dec
movsl
pop
test
or
adc
arpl
xor
dec
fs
loop
movsl
pop
xchg
jg
jle
mov
stos
sbb
into
ss
inc
cmp
in
push
pusha
imul
xor
cpuid
hlt
loopne
outsl
push
notl
jbe
inc
sbb
mov
jnp
jne
aad
xchg
test
jo
ret
imul
cwtl
aam
aaa
call
pop
cmovnp
or
mov
mov
lret
adc
jecxz
jo
and
cmp
nop
or
pop
cmpsl
fisttpll
out
jle
cmp
push
mov
cmp
fcomi
cmp
cmp
mov
movsl
dec
mov
xor
cmp
add
scas
js
sti
call
out
mov
inc
test
std
loop
xchg
dec
sub
imul
icebp
fsubrp
movsb
cmp
cmp
jmp
jl
repnz
add
push
jg
xor
js
sbb
stos
or
pop
icebp
mov
in
dec
sub
sub
int
jg
int
or
stos
push
les
popa
daa
enter
inc
mov
xor
fcompl
mulb
push
pop
pop
sbb
dec
shr
and
push
cmp
xor
popa
pop
push
ja
mov
xor
or
jae
mov
stos
out
mov
or
mov
dec
fmull
dec
sub
pop
fisubl
pushf
stos
cmpsl
jb
mov
out
mov
jne
shlb
xor
mov
fst
sarb
sar
cmp
cmpsl
pop
cmp
inc
lds
sbb
stos
sub
cwtl
mull
push
aaa
sbb
mov
mov
sub
lret
sbb
lea
test
dec
pop
inc
pop
mov
leave
in
daa
insb
xor
cmpb
jg
or
and
aaa
xor
rorb
add
fs
stos
sti
pushf
out
sub
or
cld
int
lret
stos
jl
or
pop
jp
inc
pop
out
sub
sti
push
add
sahf
inc
pop
inc
int
jbe
outsl
repz
fisttpl
ret
dec
mov
test
addr16
cwtl
insl
arpl
mov
shlb
outsl
or
test
aam
or
dec
dec
and
dec
dec
adc
xchg
jle
and
xor
mov
and
or
jo
inc
sub
leave
jb
or
daa
and
cmp
push
xchg
cmpsb
dec
cmpsb
inc
add
jle
push
dec
push
mov
cmc
jle
lret
mov
push
xlat
mov
xor
inc
iret
cmp
adc
movsl
mov
leave
iret
lods
sbb
sarb
xor
push
xor
ret
into
in
jecxz
sbb
dec
inc
or
xchg
js
lods
inc
dec
in
lds
jp
insl
les
pop
or
adc
cmp
and
pop
out
push
aam
icebp
push
add
jnp
ss
pop
mov
xchg
das
cli
insb
jle
test
shll
fwait
mov
xchg
push
sahf
das
fsubr
mull
jmp
hlt
mov
xchg
sbb
or
sub
sahf
loop
mov
push
stc
insb
mov
ja
cmp
enter
and
pop
js
ds
into
or
and
aam
jno
or
xchg
dec
test
leave
clc
mov
ret
fwait
insb
out
push
into
lods
jns
fwait
jp
test
add
int
mov
adc
xchg
popa
xchg
cmp
in
ja
fldcw
sbb
push
jns
jmp
push
or
dec
mov
lahf
inc
adc
pop
sub
roll
jge
popa
mov
fwait
mov
cmpb
inc
sub
inc
pop
ljmp
sub
and
pop
inc
xchg
push
ja
and
popf
add
sub
bound
cmpsb
sbb
xlat
pushf
test
mov
jns
nop
sub
dec
add
cmpsl
cmc
cwtl
ffreep
xor
push
lahf
in
xchg
xlat
leave
jo
jb
mov
sub
sbb
and
xchg
enter
xor
or
loope
mov
ret
sti
sbb
enter
mov
imul
inc
aad
dec
jns
mov
mov
jl
xor
arpl
leave
add
negl
test
data16
cli
xchg
dec
adc
push
and
rolb
dec
inc
jl
xor
cmp
loop
xor
and
add
inc
cmp
add
xchg
lds
fnstenv
testb
mov
aad
push
pushf
shrb
pop
mov
ljmp
inc
push
mov
pop
push
std
inc
jmp
push
sub
shrl
jo
dec
lods
cmp
fildll
or
jns
hlt
pop
lret
cwtl
and
mov
loop
cmp
imul
sahf
cmpsl
daa
fiadds
aam
andb
insb
out
mov
and
xchg
icebp
mov
jo
popf
cmp
nop
push
in
stos
jle
out
and
mov
stos
adc
cmp
dec
filds
fld
inc
adc
loopne
and
push
lock
pop
mov
outsb
data16
push
test
mov
scas
jecxz
aas
cltd
dec
sti
jbe
jb
xchg
jge
cmp
out
das
sarb
adc
adc
xchg
stos
pop
sbb
mov
jnp
jl
ss
icebp
pop
hlt
data16
test
loope
ret
xor
add
filds
movl
pop
addb
pushf
test
xlat
test
and
cmp
sti
movl
ss
popf
sub
std
jecxz
jne
adc
icebp
xchg
gs
cmp
cmp
bound
pop
nop
add
test
pop
int
lock
in
ljmp
mov
inc
orl
cmp
aam
leave
mov
outsb
cmpsb
jnp
aas
cmp
xchg
flds
lret
out
pop
je
ficomps
xchg
xor
icebp
lea
loope
outsb
mov
inc
mov
pop
insl
imul
imul
inc
enter
pop
dec
jle
add
stc
jns
clc
ficoms
sub
and
push
xor
rorl
ss
out
sti
lds
repz
add
in
add
movsl
inc
stos
pop
mov
push
popa
or
sbb
popf
sbb
stos
fmulp
inc
push
test
push
inc
cwtl
cmpb
xchg
call
mov
sub
in
push
jl
mov
mov
pushf
sarl
test
jp
pop
cmp
jmp
inc
cmp
imulb
pop
rcll
loope
bound
arpl
btr
ret
sub
or
mov
and
imul
repnz
popa
push
jae
cmc
inc
xchg
ret
mov
xchg
popf
test
lea
enter
add
adc
loopne
mov
into
mov
jne
jo
movsl
scas
ret
push
int3
adc
lods
outsb
push
movsb
sbb
bswap
xchg
push
inc
or
push
data16
adc
mov
pop
xor
mov
push
xor
pop
imul
stos
aas
jns
sbb
sbbb
repz
adc
xchg
mov
popa
rcr
push
mull
inc
ret
rcrb
sbb
push
pop
xor
push
dec
lea
mov
jbe
jp
push
ss
inc
out
mov
mov
pop
int3
scas
cmp
adc
jle
adc
scas
pop
pop
jp
sarb
xchg
ret
adc
push
sbb
mov
mov
clc
adc
mov
cmp
mov
out
jb
sbb
fnstsw
lods
lods
daa
icebp
jnp
jne
clc
roll
mov
mulb
mov
or
fdivs
xchg
iret
subl
mov
pop
mov
jg
movsb
in
pop
jb
imul
out
xchg
sub
dec
lret
or
add
stos
sub
pop
cmpsb
dec
xchg
cltd
sbb
mov
fmull
aam
call
jge
inc
lret
cmc
mov
jle
test
push
repnz
adc
jmp
xor
pop
fwait
andb
dec
sbb
int
in
mov
cmp
rcr
rcr
cmp
call
gs
repnz
inc
cli
sub
adc
ds
xchg
xchg
sub
and
push
push
sbb
icebp
scas
or
jmp
aas
jge
mov
or
dec
hlt
ja
mov
sub
loop
mov
dec
dec
mov
add
stc
mov
mov
scas
mov
adc
stos
out
cmp
xor
add
xchg
mov
rorb
xchg
fisubrl
outsl
sub
xchg
jns
test
in
repnz
xlat
mov
enter
pop
pop
sbb
jnp
inc
cmpsl
daa
mov
or
xchg
repz
dec
dec
xchg
push
lods
adc
jb
jne
jne
cmp
mov
inc
add
cmp
ret
rorl
jecxz
push
jmp
and
loop
hlt
orl
jl
subl
notw
pop
bound
xor
inc
pop
xchg
negl
das
fcmovbe
pop
test
les
les
add
adc
ret
lcall
inc
mov
ficoms
adc
xlat
sub
mov
popa
rolb
mov
repnz
outsb
call
enter
mov
or
fidivs
iret
cmc
lcall
into
rclb
and
push
fcoms
push
pusha
out
sbb
mov
cwtl
out
mov
inc
scas
xor
xor
nop
mov
or
into
jecxz
rcr
dec
insl
mov
dec
xlat
stos
jns
dec
xchg
loop
and
or
icebp
loope
cmp
lea
lret
pop
popf
pop
mov
inc
popa
jecxz
out
cmp
ss
xchg
adc
dec
shrl
push
sub
mov
aaa
repnz
and
dec
clc
sti
and
sbb
int3
enter
inc
push
pop
daa
test
mov
jo
mov
pop
lods
into
push
int3
aas
cli
sarl
dec
add
in
das
or
jo
jge
rcll
jmp
fs
and
hlt
mov
mov
add
rorl
mov
outsl
outsb
jl
dec
push
push
lock
push
mov
lods
leave
loop
jb
mov
movsl
cld
rorl
das
ficomps
mov
vxorps
jge
stos
int
sahf
push
xor
add
test
mov
pushl
sbb
mov
add
sbb
scas
dec
daa
inc
push
fidivrs
cmp
fs
les
xor
inc
sub
pop
push
cmp
push
jo
cmp
xor
inc
negb
and
sbb
sub
inc
test
jl
dec
mov
add
mov
fcompl
mov
jno
inc
sub
dec
popf
mov
ds
dec
data16
les
pop
scas
sbb
push
imul
dec
mov
lahf
jb
and
dec
daa
pop
cli
inc
lea
xchg
add
repz
sbb
sub
ret
inc
inc
jge
js
jl
mov
cmp
int
push
dec
rcr
push
stos
and
repz
imul
nop
mov
test
jno
clc
pusha
loopne
xlat
aad
ret
lcall
jle
and
lahf
jp
push
adc
insb
add
push
xchg
loope
hlt
sub
test
mov
fscale
jbe
mov
push
cmpl
mov
sub
xchg
xlat
es
imul
inc
in
pop
or
adc
xor
push
std
jb
add
pop
xchg
sbb
mov
add
popf
aad
mov
les
outsl
jno
mov
dec
adc
call
test
cmpsb
inc
and
mov
js
push
dec
leave
das
push
and
sub
mov
jle
lock
lret
sub
cli
push
popf
imul
add
adc
xor
cmp
orb
sti
sub
imul
jae
mov
rorl
sbbl
mov
push
in
jl
insl
jne
add
lods
sub
lock
dec
adc
jnp
inc
lock
aad
xchg
jge
mov
hlt
push
std
sbbl
dec
add
orb
jne
repnz
pop
test
movsl
je
cmpsb
xor
repnz
xor
int3
imul
cmp
mov
fwait
lahf
xchg
mov
iret
cmp
dec
movsb
std
xlat
addr16
push
ss
sub
pop
or
nop
pushf
out
andb
jne
add
add
xor
xor
pop
shll
lcall
int
push
popa
sar
pusha
pusha
and
mov
popf
push
addr16
les
cld
les
addr16
push
pusha
faddl
sub
cli
daa
xor
and
ret
sbb
adc
push
xor
setg
xor
mov
and
push
int3
xchg
xlat
ja
and
aaa
xchg
sti
inc
in
es
or
les
popa
push
sahf
ljmp
jns
dec
add
leave
iret
inc
add
nop
or
rol
incb
ret
xor
fstpl
jo
and
in
sbb
fwait
sbb
push
sbb
push
jmp
push
adc
jecxz
sti
cltd
pusha
sarl
ja
aam
or
sub
xorl
cmp
pop
push
add
pmaxsw
data16
sub
sub
aaa
ljmp
dec
loopne
jge
jmp
lds
inc
in
mov
mov
fldenv
rcll
cwtl
es
pop
push
sbb
xor
iret
jmp
mov
in
jno
jbe
je
adc
push
out
dec
out
jecxz
ja
push
iret
test
pop
int3
sahf
jmp
jmp
add
stos
out
leave
jb
xchg
fisubrs
cmp
fbstp
cmpsl
or
subl
jne
imul
call
cld
push
jno
xchg
clc
sbb
outsb
jl
sub
push
shr
sub
dec
sti
mov
loopne
adc
rorl
or
out
movsl
xor
mov
push
jno
or
add
jno
sahf
xchg
dec
popf
stc
or
jne
pop
dec
lahf
nop
stos
fsubrs
add
jl
lock
pushf
loope
ss
push
dec
adc
dec
je
jmp
xchg
in
decl
cmpsb
into
pop
out
mov
call
cmp
out
mov
mov
sbb
outsl
les
push
ret
shr
pushf
repnz
fidivl
ja
fcmovb
push
in
int3
jg
or
rcrl
movsb
push
cmp
shll
xchg
scas
sbb
cs
sti
popa
imul
or
les
sub
popf
daa
cltd
fidivrl
stc
mov
cmp
dec
out
or
pop
je
xchg
inc
sbb
jecxz
mov
jle
mov
popa
cmpl
inc
out
mov
inc
adc
push
mov
stos
jnp
xchg
mov
and
inc
mov
test
icebp
adc
aaa
pusha
cmpl
and
xor
icebp
jecxz
push
inc
cmpsl
std
testb
fildll
mov
addl
cld
mov
jmp
mov
mov
jb
push
sti
pop
or
lea
xchg
or
mov
and
arpl
dec
dec
or
lret
add
cmp
sarb
push
xchg
scas
addb
inc
inc
mov
cli
dec
dec
jg
xchg
dec
pop
jbe
push
xor
xchg
in
lds
ja
inc
loope
xor
popf
loopne
xorb
or
adc
push
call
lock
sbb
ljmp
sub
mov
pusha
loopne
iret
sbb
imul
mov
dec
fs
jnp
xchg
aam
stc
mov
push
xlat
dec
jo
sbb
dec
or
stc
das
inc
ficompl
mov
or
scas
inc
nop
cmp
fwait
je
and
ret
jns
mov
dec
add
push
and
xchg
cltd
lds
sti
lret
push
adc
int
movsb
lcall
in
xchg
adc
data16
out
js
out
xor
cmp
lret
push
addr16
in
scas
call
sbb
push
lods
sbb
inc
sub
into
hlt
dec
adc
insb
inc
and
out
int3
mov
pop
imul
es
and
andb
das
or
mov
addb
inc
adc
xchg
mov
out
pop
add
rcrl
std
pop
ja
into
es
int
orb
in
add
icebp
mov
testl
mov
out
test
lods
jb
xchg
mov
mov
and
aam
jecxz
dec
or
or
jg
mov
push
dec
cli
lret
out
test
imul
mov
pop
in
and
in
xchg
stos
es
push
lahf
mov
cmp
out
pop
das
add
outsb
pop
movq
dec
lods
xchg
ljmp
sub
divl
jbe
sbbb
inc
pop
add
test
inc
mov
jge
cmp
cltd
mov
cmp
sbb
inc
lods
repz
dec
and
ja
dec
in
outsb
jns
lret
fidivs
call
sarl
icebp
into
lret
xchg
and
pop
push
sarl
mov
test
jnp
in
jge
aad
push
add
movsb
stc
test
shlb
popf
xchg
pop
dec
movsl
aam
dec
shll
dec
shl
int3
adc
dec
aam
dec
push
add
inc
test
xlat
push
jns
hlt
mov
xor
testl
xchg
xchg
sub
inc
sub
ret
pop
add
shrl
cmp
data16
cmpsl
orl
jbe
sbb
lcall
stc
mov
jae
repnz
xor
xor
fsubr
add
mov
mov
xchg
mov
scas
outsb
loope
and
push
jo
sahf
mov
pop
push
pop
leave
sub
mov
int3
pushf
test
scas
mov
dec
dec
push
add
lock
sub
and
aaa
adc
jns
sbb
shlb
cmpsb
out
inc
mov
pop
stos
push
out
jno
sarl
pop
xlat
jae
cld
hlt
push
insb
ds
outsl
js
inc
js
xchg
imul
dec
sbb
stos
jno
fs
fisubrs
push
jecxz
fcmovbe
lods
jge
inc
pop
ljmp
add
xor
sti
mov
loope
push
cmp
scas
mov
repnz
add
rorl
punpckhdq
aad
push
shll
adc
out
cld
out
cmp
into
push
xlat
xchg
sbb
gs
push
mov
mov
xor
push
bound
add
lcall
test
lods
mov
out
dec
cld
jecxz
lods
cmp
jns
mov
xchg
ss
xor
mov
aaa
push
cwtl
push
jg
lds
mov
sahf
sahf
cmpsl
out
mov
cmpsl
incl
jb
dec
jp
add
enter
test
jg
push
negl
icebp
mov
push
and
negl
hlt
lods
mov
inc
sub
mov
and
pop
pop
push
push
mov
sbb
inc
movsl
xchg
cld
ja
push
jnp
decb
dec
sub
rorb
and
or
and
inc
and
aas
sub
mov
add
pop
xor
adc
mov
pushf
cwtl
mov
icebp
js
dec
outsl
ficomps
cmp
aam
fldt
nop
pop
sub
xor
inc
mov
cmp
sti
rcrl
mov
in
stos
insl
sahf
sub
fists
or
fs
aad
mov
sub
fcmovnb
xor
sub
push
rcr
jnp
xor
insb
pusha
inc
push
repz
stc
sti
ficoml
mov
lock
imul
shlb
bound
dec
mov
loopne
jle
cmp
mov
test
out
cmp
inc
ljmp
add
and
pop
pusha
bound
pushf
mov
rorb
stos
sbb
mov
mov
fstl
seta
pushf
not
aaa
std
dec
aas
mov
xchg
mov
movsl
cmp
mov
clc
jecxz
pop
test
fmul
in
addr16
xor
push
mov
mov
dec
sahf
push
gs
addr16
lods
shll
mov
jno
stc
cmc
push
mov
loop
xor
sub
xchg
xchg
stos
cmc
movsb
out
inc
out
cmp
lretw
lods
and
xchg
aam
repz
sbb
cmp
mov
mov
xor
mov
cmpl
cmp
ljmp
lods
dec
pushf
fsubrl
icebp
enter
sbb
ja
inc
out
stc
pop
scas
jge
xchg
sbb
push
enter
mov
insl
push
push
sbb
and
lds
jp
popa
fstl
nop
mov
add
sub
mov
inc
jp
or
fcoml
sbb
mov
or
mov
in
into
ja
jae
jmp
std
outsb
adc
out
mov
pop
mov
movsb
js
jne
pop
int3
adcb
test
rol
mov
add
aas
mov
jle
mov
add
and
sbb
xor
cs
fucom
mov
imul
test
pop
fildll
cmp
outsb
inc
xchg
imul
lea
out
xchg
push
nop
ds
jmp
iret
in
xchg
addr16
mov
jg
xchg
push
sbb
add
lods
lods
imul
fs
sarb
outsl
or
mov
jecxz
and
nop
sahf
ja,pt
xor
inc
jge
fidivrs
loop
icebp
pop
inc
fwait
test
lret
jae
mov
testb
sbb
adc
jecxz
dec
data16
mov
dec
clc
inc
arpl
cwtl
int3
inc
mov
sbb
jg
out
popa
ret
inc
pop
or
mov
add
lods
daa
nop
jecxz
jmp
rcr
push
xchg
insb
cmpsl
enter
adc
popf
and
mov
cmp
cmp
outsl
mov
inc
popa
dec
lret
lahf
jae
inc
cmp
roll
xlat
clc
stos
and
gs
hlt
adc
fsubrl
dec
loope
icebp
mov
xchg
xorb
scas
aam
mov
jb
lret
or
mov
pop
or
les
inc
dec
dec
inc
adc
mov
dec
push
pop
movsb
sarl
addl
test
xchg
outsb
lock
in
and
ja
and
cmp
fistpll
ret
js
rolb
lods
mov
rcl
and
jns
popf
mov
dec
xor
mov
pop
xlat
call
std
jmp
decb
cli
pop
in
push
jbe
mov
mov
pop
popa
xchg
jle
out
mov
shll
pop
je
jge
add
push
push
pushf
lcall
xchg
stos
sub
jne
stos
lods
ret
cmp
in
mov
fwait
scas
inc
add
add
popa
jmp
xlat
insl
mov
lods
mov
into
xchg
idiv
leave
add
add
xchg
xor
iret
mov
repnz
cs
adc
idivb
xchg
mov
ds
jnp
mov
lds
lock
inc
inc
stos
out
fxch
mov
sbb
cmpb
ja
sbb
es
sub
mov
fwait
xchg
jnp
push
mov
adc
cmc
mov
jle
jne
in
mov
int3
fucomp
mov
loopne
cmp
ljmp
mov
test
es
inc
jne
into
mov
dec
mov
sub
mov
popa
adc
adc
xor
imul
ss
das
out
mov
and
push
loopne
rorb
es
dec
aad
fisubrs
lret
in
sub
adc
insb
aas
adc
or
jo
in
faddl
scas
std
call
xchg
fdivs
mov
inc
add
lcall
dec
push
jge
pop
das
aaa
fldt
xchg
mov
in
rclb
dec
push
cs
xchg
test
test
jae
push
mov
sbb
lret
into
pop
andl
dec
lahf
jecxz
cmpsl
jmp
jp
xchg
mov
jge
mov
sbb
aas
mov
aam
mov
mov
movsb
dec
in
mov
cli
jmp
enter
push
das
pop
xchg
rorb
out
jae
mov
test
ja
rorb
or
fldcw
test
sub
lahf
icebp
inc
sub
out
repnz
add
cmp
mov
arpl
dec
testl
fdivl
in
add
dec
or
addr16
add
out
lcall
mov
imul
stos
xchg
push
sbb
fs
sti
hlt
lahf
in
cld
mov
lods
fmul
scas
loopne
cmp
fimull
or
push
arpl
push
jmp
fisubrl
cltd
xor
lods
mov
or
jne
in
inc
icebp
adc
inc
pop
sti
arpl
mov
inc
xchg
mov
ja
dec
sub
pop
inc
lret
loopne
data16
ds
jle
ret
adc
jne
fnstsw
loopne
setns
stos
dec
jecxz
mov
and
push
mov
dec
stos
or
mov
inc
push
sub
xchg
pop
xlat
stos
push
stos
push
mov
es
in
ja
cwtl
js
addl
jbe
and
cltd
inc
lock
movsl
icebp
lret
dec
dec
arpl
lret
lea
popl
movsb
ss
popa
inc
inc
call
pop
stos
mov
lahf
or
cmc
shll
jecxz
movsb
push
clc
pop
sbb
jmp
cmpsl
ljmp
dec
mov
add
stc
inc
and
mov
outsl
mov
push
mov
roll
cwtl
dec
pop
and
xchg
scas
adc
popf
cli
xchg
rolb
inc
pusha
dec
inc
add
inc
sub
cmpl
out
xchg
cmp
cmp
cmp
ret
or
mov
xchg
insb
call
inc
nop
xchg
xchg
ljmp
sbb
mov
add
push
in
pop
daa
or
xchg
cmpsl
xchg
int3
adc
shll
outsl
xlat
cmc
andl
add
pop
push
pop
in
shll
sub
inc
arpl
nop
dec
je
jecxz
daa
int
imul
lds
shlb
xor
push
xor
dec
or
adc
inc
sbb
lods
ret
int
ficoml
dec
inc
lret
mov
lods
sahf
imul
pop
mov
sub
es
cwtl
add
sub
cmc
ret
jae
inc
mov
or
xor
into
add
fsubrs
enter
test
mov
xlat
insb
pop
mov
mov
cmp
push
push
shlb
sbbl
out
mov
mul
xchg
push
jne
movsb
decb
cmp
dec
jmp
fdivr
push
adc
in
mov
add
loop
pop
push
lock
scas
sbb
es
sbb
repz
icebp
insl
pop
arpl
jge
xor
test
rorl
jle
lods
and
xchg
incl
js
adc
lret
or
repnz
repz
jb
imulb
stos
mov
cld
rclb
sbb
push
pop
jns
pop
and
cmp
xor
fiadds
sub
adc
mov
sub
je
mov
push
mov
adc
jg
add
fs
loope
jo
arpl
outsl
fcomps
in
scas
pop
mov
into
popf
out
in
adc
stos
mov
jmp
inc
jae
fstl
idivl
and
lahf
lock
test
cmp
mov
hlt
dec
xor
nop
shl
icebp
mov
jmp
enter
test
mov
dec
cmp
and
jae
sti
adc
lds
mov
push
out
or
xchg
xor
adc
sub
add
pop
cmp
aam
movsb
pop
sub
mov
addr16
mov
xchg
int
lods
push
and
sub
aaa
dec
mov
arpl
in
xor
mov
jp
fsubs
sbb
pop
inc
jnp
xchg
push
pop
jbe
popa
out
xor
adc
imulb
mov
pusha
scas
ljmp
fwait
xchg
in
negl
aaa
repz
pop
xor
pop
sbb
sahf
jo
or
mov
mov
ret
ret
jle
adc
jno
shlb
movsb
js
jg
cmp
leave
jne
cmovnp
inc
lret
or
clc
sahf
popf
inc
rcl
into
jno
pop
stc
dec
pop
divl
leave
mov
roll
xchg
fldcw
mov
sub
mov
and
mov
push
or
imul
fs
loop
out
dec
mov
add
rclb
xchg
js
stos
mov
xchg
enter
fildl
adc
out
mov
pop
call
mov
mov
mov
mov
in
pop
cwtl
dec
test
cli
or
pusha
call
hlt
xlat
pop
push
scas
add
or
cmp
xchg
lret
xchg
sbb
dec
lret
decb
iret
xchg
xchg
fistpll
mov
xchg
out
pop
loope,pt
test
mov
cmpsb
add
pop
std
aam
push
stos
test
sbb
insb
add
jne
lcall
aas
xor
imull
lods
jne
xchg
xor
and
mov
cmp
xlat
cs
in
pop
push
lret
clc
mov
dec
in
dec
lcall
xor
cmp
jge
outsb
stc
or
lcall
mov
pop
jb
cmp
xor
lods
ja
in
xchg
cmp
mov
or
mov
pop
mov
push
cmp
mov
sbb
loopne
lret
lcall
add
fldcw
out
cmpsl
jg
inc
ljmp
pushf
jge
mov
add
sbb
sbbb
inc
stos
movsb
sub
mov
or
and
sbb
movzwl
gs
pop
dec
addl
or
dec
addb
sarl
cs
daa
mov
rorl
cs
insl
out
or
push
std
or
incl
mov
push
je
out
fdivl
enter
cmp
ss
ror
jl
jecxz
test
fcoms
cli
cmpsb
mov
jne
mov
bnd
push
sbbl
push
lock
xchg
rorb
mov
loop
dec
jle
mov
mov
ret
cmc
out
dec
leave
mov
int3
xchg
push
xchg
mov
shrb
in
insb
arpl
xchg
sbb
test
dec
dec
jne
inc
idivl
sub
lods
xchg
cmc
daa
jns
test
add
push
mov
shrl
movsb
ret
pushf
ret
lahf
dec
xorl
add
xchg
pop
sbb
mov
aaa
or
inc
aad
sbb
mov
mov
xor
dec
sbb
aas
mov
or
mov
pop
arpl
decb
pop
jae
sub
push
and
test
xor
push
jge
mov
imul
and
fcomps
inc
pop
es
pusha
fdivl
test
fldt
call
sbb
dec
insl
xor
sbb
mov
jo
testb
jmp
mov
and
push
jno
pop
test
call
pop
jecxz
data16
inc
ret
stc
lock
addr16
mov
mov
pop
and
sbb
ja
lods
cli
and
inc
test
imul
jb
mov
pushf
sub
push
jl
mov
push
or
mov
js
dec
sub
pop
leave
movsl
mov
push
or
fiadds
adc
shl
inc
in
shrl
sti
and
add
sub
stc
push
iret
shll
pop
pop
and
pusha
pop
hlt
xchg
mov
sub
cmp
pop
js
cmp
mov
sbb
cs
pushf
push
rclb
jb
jmp
mov
or
lahf
dec
jp
sbb
or
orb
or
xchg
cld
orl
adcl
cmp
mov
mov
push
sub
sub
fldcw
fcoml
test
jno
lahf
mov
subb
icebp
jne
stos
push
pmuludq
fcoml
outsl
dec
sti
stc
mov
mov
insl
inc
sub
and
cmp
xor
sub
mov
pop
xchg
sti
cli
mov
add
outsl
mov
xor
fs
test
andb
cld
lret
sub
pop
movsb
fwait
sbb
lock
mov
daa
icebp
jge
pop
add
jp
cmp
sahf
mov
add
fcmovnb
inc
inc
xchg
adc
dec
add
push
cmp
lahf
idivl
inc
repz
insb
xchg
rcll
jp
sbb
jns
inc
stos
fisubl
bswap
out
push
cmpsb
xchg
lds
int
mov
data16
aad
pusha
outsb
sub
and
pop
iret
imull
mov
xor
or
xor
cli
push
fs
mov
jge
sti
jmp
jne
push
dec
pop
add
add
out
push
and
out
adcl
cmp
sub
xchg
cmc
adc
add
fadds
pop
sub
fs
mov
inc
cmp
inc
dec
cmp
cld
push
pusha
andl
adc
dec
daa
mov
mov
xchg
push
fcmovb
xchg
aam
out
xchg
and
call
repnz
repz
jle
pusha
mov
outsb
pop
imul
mov
insb
mov
dec
xchg
and
mov
xchg
mov
xchg
sub
adcb
mov
inc
push
int3
outsl
push
push
push
mov
dec
xor
rcll
stos
jl
inc
pop
sbb
test
sub
pushf
notl
shlb
adc
int
scas
pop
adc
pop
xchg
int3
push
inc
mov
jge
lret
adc
dec
lcall
jecxz
add
lods
jbe
adc
jno
or
push
dec
arpl
mov
mov
sub
mov
or
jnp
popf
mulb
insl
sahf
cmpsb
fcompl
shl
fistpl
divb
mov
test
adc
pop
icebp
imul
xlat
jns
inc
sub
sub
adc
or
xchg
sub
outsl
icebp
jge
shr
xchg
jmp
out
cmc
sbb
pop
sub
cmpsb
loope
push
mov
xchg
in
xchg
jmp
je
push
bound
pop
in
sarl
fwait
push
js
pop
in
add
fwait
or
mov
rcl
push
pop
ljmp
lods
aam
into
or
pop
jae
imul
mov
xchg
movb
das
lods
vminss
rcr
fadd
cmp
lds
jg
mov
jne
add
jnp
ja
je
adc
ud1
add
sbb
adc
pop
inc
loop
fwait
jnp
repnz
cmp
int3
jbe
cmp
push
jae
loope
push
mov
cs
and
lahf
call
cltd
cmp
jns
mov
pop
jne,pn
mov
sub
mov
cmp
data16
aaa
cmp
mov
and
negl
ret
test
pop
push
cmpl
add
cmp
iret
pop
mov
xchg
inc
xor
xor
adc
pop
in
or
in
cmp
pop
inc
push
dec
cmpb
xchg
jne
pusha
xor
inc
mov
movsb
mov
cmp
popf
jno
mov
pop
inc
or
sbb
push
cmova
mov
fstp
fbstp
sbb
arpl
jae
sbb
pop
jbe
dec
popa
mov
sbb
sbb
stos
and
daa
xacquire
iret
in
lahf
es
xlat
ret
cli
test
push
fisubs
jae
fidivrl
shll
cwtl
cld
push
aas
std
and
sub
dec
aaa
scas
outsb
jecxz
pusha
in
mov
cmpsl
stos
cmpsb
pop
push
jbe
fidivs
mov
ja
jmp
xchg
mov
out
push
out
les
and
sub
arpl
dec
sar
dec
je
pusha
loopne
loop
fwait
add
jae
call
xor
in
lea
xchg
nop
pop
add
dec
inc
jle
aad
aam
jecxz
jmp
dec
mov
je
mov
leave
pop
jae
jno
nop
test
scas
dec
cmpsl
addr16
adc
sti
mov
pop
inc
sbb
mov
dec
sbb
add
into
cmp
in
sbb
xchg
push
sub
aaa
mov
imul
mov
sub
cmpsl
clc
mov
xchg
stc
insb
dec
dec
adc
cld
ret
rorb
add
and
cmp
push
mov
and
sub
jne
mov
scas
movsl
insb
popa
mov
inc
push
inc
dec
cmp
mov
push
sub
loop
and
mov
dec
push
lds
sbb
pop
popa
in
mov
and
cld
ficomps
lock
ljmp
pop
xor
jmp
mov
xor
in
add
push
lods
xor
push
ljmp
clc
mov
in
out
add
hlt
push
inc
das
stos
xchg
jno
mov
aas
imul
in
icebp
add
incb
out
push
fstpl
xchg
xor
jecxz
in
or
and
cmp
push
mov
arpl
jle
lods
repnz
fbld
nop
leave
sub
lds
or
xchg
or
jl
repnz
icebp
push
inc
cmp
jle
das
int3
insl
inc
je
fidivs
lret
jmp
push
dec
mov
sbb
sti
mov
pop
cmp
in
cmp
into
popa
scas
test
mov
repz
push
daa
daa
out
inc
test
lea
dec
xchg
mov
out
adc
xor
sahf
adc
add
mov
jbe
jecxz
sbb
xchg
pop
daa
shr
pop
dec
mov
es
mov
inc
shlb
mov
or
sub
mov
xchg
cmp
and
ljmp
shlb
inc
stos
cld
jae
sub
daa
leave
int
imul
in
stos
shl
loope
inc
sub
cli
inc
arpl
jae
mov
rcrb
push
test
pcmpgtw
jmp
sbb
add
dec
sub
gs
gs
add
jno
cmp
inc
xchg
push
ds
repnz
adc
xchg
push
cwtl
lods
xchg
cmp
ret
xor
scas
movsl
sub
push
add
jge
lret
rolb
andl
mov
mov
and
or
pop
sbb
mov
jno
dec
push
jmp
in
daa
stc
inc
unpckhps
repz
or
add
sbb
push
pop
push
mov
inc
push
xchg
adc
mov
bound
loope
dec
repz
mov
adc
adc
loopew
icebp
mov
in
cwtl
pop
sub
jae
push
aaa
jecxz
daa
ja
and
jl
jle
cld
subl
fsubs
cmp
in
rcrl
jb
dec
js
popa
dec
fld
sbb
xchg
and
mov
fcmovbe
jmp
and
lds
fldl
icebp
popw
mov
imul
out
outsb
aas
arpl
jmp
cmp
xor
inc
ja
ret
popf
mov
pop
xor
ljmp
xchg
popa
dec
int3
pop
push
jle
mov
clc
les
nop
stc
push
lret
inc
and
or
cmp
push
aad
cmp
mov
into
dec
repz
rcl
mov
outsl
fildl
adc
in
test
jae
sub
dec
cwtl
insb
shrb
sub
adc
dec
push
xchg
in
int
inc
pop
fcoml
call
pop
jp
pop
cmp
imul
hlt
add
jmp
add
gs
mov
test
inc
xchg
jle
and
cld
mov
movsl
xchg
sbb
adc
ss
pop
cld
int3
mov
xchg
cs
and
shll
daa
sbb
jg
les
idivb
and
or
iret
adc
mov
inc
test
cli
arpl
lods
aam
shl
inc
decb
push
repz
loop
xor
or
insl
inc
mov
push
movsb
cli
repnz
push
and
mov
add
cmp
testl
movsb
repz
jns
pop
shll
xor
or
jmp
daa
cmc
xor
cmp
dec
mov
push
mov
imul
xchg
arpl
scas
xor
subb
addb
fstpl
stc
mov
mov
repnz
dec
psubq
jp
addl
push
popa
dec
xrelease
stos
ljmp
shll
cmovbe
push
xchg
into
push
push
fs
test
fnsave
pop
out
or
in
push
mov
lds
mov
xchg
pop
cmp
in
xor
insl
mov
test
fstpl
add
push
in
inc
pop
xchg
add
xor
in
jno
cmpsb
or
enter
adc
btr
insb
fs
imul
cli
adc
fwait
sbb
push
jmp
push
clc
or
mov
push
int
cmp
inc
shlb
les
sub
aas
jecxz
mov
xchg
cmp
adc
out
add
mov
add
pop
jns
mov
or
or
mov
mov
push
enter
test
jb
xchg
testb
push
mov
shll
subb
push
and
pusha
insb
movsl
jge
mov
out
enter
jp
sub
jo
cmp
xchg
mov
push
fs
mov
cwtl
sub
in
push
jecxz
jge
pop
dec
xchg
pusha
fwait
scas
addr16
fsubrs
hlt
push
data16
sub
ja
flds
loop
fiaddl
mov
ret
in
arpl
scas
mov
call
jg
arpl
mov
cmpsl
jecxz
mov
sbb
mov
xorb
outsb
adc
inc
pop
testl
je
mov
xor
xor
sub
je
jle
sarb
adc
xchg
scas
pusha
test
mov
jp
scas
outsb
jo
arpl
bound
push
stos
push
cmp
mov
cmp
scas
jnp
addr16
inc
shll
popa
xor
fisubs
mov
mov
or
cmp
mov
sar
rcrb
mov
popf
sub
sub
push
movsl
and
cmpsl
lea
jne
shl
sarb
lcall
and
sbbl
mov
sarl
inc
insl
andb
pop
pop
pop
pop
cltd
adc
mov
jecxz
jecxz
mov
shlb
and
mov
cs
loop
stos
pushf
cmp
aad
repnz
pop
mov
add
and
out
subb
imul
pop
sbb
lods
je
adc
xchg
mov
loop
inc
xor
inc
ret
stos
add
mov
into
les
es
jmp
hlt
retw
add
mov
enter
push
mov
out
dec
xor
adc
pusha
jnp
inc
fdivl
orb
out
std
sbb
fadds
icebp
inc
add
mov
or
ss
sbb
jns
cwtl
testb
lret
std
inc
lahf
in
jl
lock
into
cmp
shll
mov
fs
mov
in
testl
push
jo
sbb
xchg
xchg
fs
or
or
das
aad
and
ficoml
loopne
mov
sub
enter
movsl
lods
or
sbb
ds
add
sar
int
rcrb
clc
scas
sub
int3
and
jl
push
mov
inc
pop
cmp
aam
shll
pushf
xchg
add
sbb
pop
insb
dec
mov
push
insb
push
mov
pop
loop
cmp
pop
lahf
out
push
sbb
jno
ds
scas
inc
lods
cmp
add
mov
xor
jg
dec
push
push
mov
adc
mov
push
sbb
loop
notb
fimuls
push
leave
outsl
jnp
sbb
les
sub
xchg
mov
add
xor
scas
xchg
jecxz
lods
sti
xlat
push
xchg
imul
cli
fcomip
aaa
jbe
mov
shlb
les
cmc
inc
xor
inc
repz
inc
subl
cmp
daa
sbb
stc
mov
pop
sahf
enter
shll
mov
arpl
pop
arpl
stos
mov
fiadds
inc
orl
insl
mov
sahf
xlat
imul
xchg
mov
clc
adc
std
push
jbe
fistpll
adcb
inc
in
pop
push
sbb
sbb
sub
das
std
and
pop
cld
in
rcl
jecxz
cwtl
out
arpl
pop
xlat
cld
adc
mov
sub
enter
subl
loop
clc
mov
sub
psubusw
push
pop
stc
ljmp
sbb
jns
aaa
ret
xor
dec
push
push
shll
push
inc
test
fs
xor
push
rorb
jge
jecxz
xor
sti
lds
int
scas
sbb
pop
addr16
pusha
add
stos
inc
notb
lds
push
xor
lea
stos
int3
mov
jmp
insb
addr16
fstps
leave
xorb
xor
xlat
pop
int
add
pop
aam
movsb
dec
inc
xchg
cmp
test
daa
mov
pusha
fsubrl
ss
out
pop
inc
fcoms
pusha
inc
nop
push
lcall
mov
aas
lods
jne
jmp
adc
sbb
push
out
sti
xchg
xchg
add
arpl
faddl
out
lcall
in
leave
pusha
sub
and
ja
cmp
xor
imul
jmp
movsl
pushf
pop
mov
xchg
test
adc
mov
jae
notl
sbb
xchg
mov
pop
icebp
in
sbb
aaa
lahf
rorl
mov
clc
cmp
mov
inc
test
fsubr
dec
popf
cli
inc
xlat
fwait
notl
dec
aam
pop
stos
push
mov
xor
inc
xor
mov
in
jae
inc
mov
scas
lock
sbbl
packsswb
xchg
sub
adc
push
movsl
js
incb
add
insb
and
or
mov
cli
mov
jb
push
in
stos
mov
aas
pop
ficomps
insb
or
outsl
faddl
adc
ret
mov
movsb
lcall
xor
leave
pop
into
sbb
idivl
insl
jl
cs
hlt
inc
out
cmp
cltd
rorb
rcll
lahf
inc
push
mov
arpl
leave
adc
cmp
std
lock
mov
icebp
shlb
pop
test
sbb
jbe
cmp
jge
cmp
cli
loope
dec
xor
repz
out
vcmpsd
je
and
adc
cmp
fs
insl
mov
xor
in
xchg
and
jle
call
popa
dec
add
jbe
pop
or
ja
aad
mov
rcr
stos
mov
lods
mov
or
push
xor
cmpsb
add
call
xor
and
movsb
xchg
add
and
xor
movsb
push
icebp
xchg
ja
jecxz
fsubl
xchg
cmpsl
push
and
cld
aas
rolb
movsl
in
loopne
pop
add
scas
fidivrs
cltd
stos
andl
push
mov
ljmp
fdiv
popa
dec
sbb
mov
xor
scas
pop
xchg
fucomp
cli
adc
lcall
sub
dec
xchg
add
inc
movsb
js
das
ds
int
pop
pop
daa
in
cld
jnp
scas
cmp
mov
sbb
out
scas
test
inc
lock
movzwl
pop
mov
add
and
sub
mov
aas
xchg
push
dec
imulb
nop
pop
cs
add
test
inc
rorb
lea
sbb
cld
in
push
add
and
add
inc
loop
lds
out
movsb
std
xlat
mov
popf
sbb
shrb
adc
xchg
std
mov
inc
inc
scas
pusha
fiadds
stos
outsb
rorb
bound
xor
dec
xacquire
leave
sti
out
mov
inc
xchg
pushf
int
lret
mov
jmp
pop
pop
inc
je
out
xor
test
clc
movsb
aad
mov
std
push
mov
push
test
in
pop
test
pop
xchg
imull
in
or
ljmp
nop
dec
dec
jnp
cmp
gs
scas
and
add
mov
adc
cmpsl
gs
xchg
xor
mov
cmp
sub
mov
dec
cwtl
sub
push
fcoms
jns
and
add
jp
dec
jle
aad
xor
and
fwait
push
pop
add
xchg
mov
mov
subl
pop
add
or
arpl
aad
fnsave
bound
lret
enter
leave
cltd
data16
sbb
pop
repz
in
push
out
stos
mov
xchg
and
push
cld
lret
push
fwait
inc
in
repnz
jns
inc
rcll
fstp
fldcw
frstor
sahf
jg
fwait
pop
pop
xchg
xlat
jp
daa
jle
in
rolb
xchg
into
les
xor
push
jo
dec
push
into
sbb
sub
push
in
xchg
or
mov
es
out
push
sub
shll
push
std
mov
push
mov
dec
dec
mov
lods
or
fldt
inc
subl
out
push
dec
mov
dec
inc
or
ljmp
xor
into
stos
and
inc
lods
push
fimull
movsl
scas
out
test
mov
sub
nop
pop
nop
dec
inc
mov
leave
imul
sbb
leave
cmp
pushf
cmc
adc
lds
pusha
in
push
aam
dec
fwait
xor
ret
adc
add
mov
fs
pop
mov
mov
push
push
mov
ficoml
sarl
test
cli
rorb
les
pop
ret
cmc
mov
test
pop
out
repnz
mov
pop
les
dec
lret
mov
scas
push
mov
test
out
push
mov
mov
inc
leave
ja
loop
insl
sahf
fs
cwtl
xchg
insb
pop
sti
popa
inc
dec
shlb
push
and
dec
test
test
stos
mov
mov
mov
adc
pop
jbe
mov
call
out
jb
jmp
xorl
jle
xchg
xchg
fs
dec
in
popa
sti
and
lret
fnstenv
adc
loop
mov
pop
sub
fiaddl
test
jle
loopne
rcrb
scas
test
push
add
sbb
push
xor
sahf
jmp
or
addr16
xchg
mulb
data16
mov
lea
mov
out
add
lock
cs
jmp
popa
int
xchg
adc
cmp
sahf
adc
js
insl
ljmp
pop
fimuls
cmpsl
int3
repz
pop
sub
cmp
jnp
xchg
shlb
hlt
pop
cmp
pop
and
push
ret
ss
xlat
xchg
xchg
push
insb
inc
push
jno
dec
negb
dec
ret
mov
or
iret
xchg
xor
adc
notl
xchg
dec
inc
in
into
subb
and
jne
out
cmp
out
ds
dec
xor
sub
ds
jo
fsub
mov
xor
scas
popa
jb
std
scas
xchg
rclb
cmp
push
xchg
fs
loop
sub
out
dec
lcall
or
sub
dec
repnz
push
filds
adc
mov
call
and
add
test
ss
pop
es
in
outsl
cmc
xchg
mov
lods
jle
js
notl
sbb
stc
cmp
sub
aaa
outsb
cli
stos
cmp
rcll
sbb
and
push
sbb
mov
inc
testl
lods
add
sahf
mov
stc
push
push
adc
or
cltd
pop
mov
lds
adc
inc
or
dec
push
and
out
xor
stos
pop
rcrl
nop
ret
inc
xchg
adc
xchg
mov
movsb
xchg
pop
rcrb
ret
mov
js
cmpsb
cmc
cmc
out
xchg
jle
ljmp
xchg
cltd
pop
adc
sub
push
pop
mov
dec
push
fimuls
cmp
ret
dec
shlb
or
or
lock
ljmp
ljmp
repz
ja
add
ret
popa
pusha
fisttpll
inc
xchg
out
sub
pop
int
xchg
mov
xchg
loop
ret
lds
scas
push
mov
dec
loope
and
in
dec
push
sbb
inc
mov
mov
xor
scas
mov
fnstsw
push
and
ss
push
dec
add
inc
cmpsl
test
movl
pop
ret
xchg
incl
inc
test
fcom
pushf
loopne
js
cmp
fidivrl
in
aad
cmp
lahf
lds
dec
movsl
pop
mov
ds
xor
and
cmp
cltd
xchg
mov
mov
or
xchg
imul
stos
bound
dec
mov
dec
repnz
ret
in
aad
push
rcrb
clc
cli
sbb
stos
lock
inc
loop
push
sbb
rep
push
andb
shlb
mov
dec
push
mov
lds
fimull
cwtl
jp
pop
mov
xchg
push
popa
xchg
xchg
sub
jb
inc
add
pop
stc
jmp
movsb
fldcw
cmc
and
push
lock
mov
jne
adc
cmpsl
outsl
and
outsl
notl
arpl
popf
inc
mov
adc
enter
mov
daa
mov
push
inc
lea
ljmp
ret
jbe
jbe
sbb
xchg
jae
loope
pushf
dec
lcall
dec
test
test
pop
cmp
jne
lcall
int3
xor
ret
push
jo
jge
push
imulb
adc
cmp
adc
inc
ss
and
iret
ja
cltd
aad
sbb
loop
in
jno
xor
sub
cld
jno
js
data16
sub
std
aad
ret
jae
add
loop
imul
mov
addr16
subl
and
int3
pop
jae
popf
imulb
fists
in
jo
or
jle
insb
js
addr16
rep
push
addb
jecxz
sbb
dec
in
or
inc
in
xchg
cmp
imul
cmpsl
mov
hlt
pop
les
test
loopne
cwtl
int
in
fistpl
dec
out
cltd
jge
inc
rol
shll
lahf
aaa
sub
mov
mull
xor
cmp
xor
aad
push
mov
imul
incl
lcall
cwtl
rol
jge
loopne
inc
iret
inc
andb
icebp
inc
mov
pusha
adcl
jns
pop
jno
jle
add
daa
xor
lcall
jmp
enter
cltd
outsl
add
push
push
cmp
jle
mov
jecxz
insl
sub
fninit
in
push
icebp
xchg
jne
stos
out
push
fcoms
jno
lock
xchg
dec
mov
xchg
mov
and
stos
aaa
xor
mov
lret
hlt
add
lods
jmp
cmp
mov
mov
pusha
jae
cli
mov
ja
xchg
mov
div
xor
aas
pop
ljmp
imul
cs
repnz
sbb
xchg
pop
test
push
test
push
lcall
or
push
mov
jo
mov
in
insb
test
sbb
stos
cmpsl
pop
fisubrs
sbb
das
in
sbb
sbb
xchg
loopne
shll
add
dec
outsl
xchg
loope
repz
push
jb
adc
mov
sub
out
sbb
pushf
mov
insl
jge
dec
jp
aad
ds
add
pop
stc
loop
lods
ror
daa
jo
pusha
aam
push
mov
and
mov
jmp
das
enter
ficoml
jl
lret
lcall
fs
pop
push
out
mov
divb
pop
lock
push
ja
xor
sbb
ficompl
fidivrl
cli
add
js
into
jbe
cmp
pushf
fidivrl
mov
sub
sti
adc
mov
push
ja
addl
enter
sub
dec
xchg
lods
jg
xchg
sahf
and
sbb
shr
xchg
aaa
and
fbstp
or
inc
mov
insl
rcrl
int
xor
mov
sarl
repz
add
scas
std
loopne
push
inc
sub
leave
repnz
add
dec
adc
sub
adcl
xchg
jnp
pop
cmp
or
aam
test
test
lock
sub
mov
aam
mov
mov
pushf
mov
mov
inc
int
xor
mov
in
push
sub
inc
mov
sarb
push
adcl
repz
sub
loope
jmp
pusha
insb
outsl
out
in
ficompl
cmp
in
sub
adc
adc
cmp
add
mulb
mov
test
mov
fidivrs
test
mov
pop
push
arpl
mov
bound
call
jae
xlat
dec
cltd
dec
jmp
cld
lds
scas
lock
cltd
sti
scas
sti
mov
ret
jle
sahf
inc
ja
out
jge
xchg
or
adc
test
sbb
test
outsl
sti
mov
mov
inc
add
xor
sub
cmp
fdivs
cld
lods
lds
jo
hlt
jp
pop
cwtl
mov
push
xchg
inc
jge
rdpmc
inc
in
jo
xor
sub
inc
jnp
ret
repnz
push
adc
sbb
out
push
out
test
cli
aam
fisttpl
sub
lcall
or
jmp
mov
mov
sarl
in
jno
in
add
fwait
mov
or
mov
add
and
notb
and
ficomps
cli
inc
sti
inc
out
jg
scas
push
lods
pop
movsl
in
ljmp
mov
jl
inc
cmpsb
imulb
ret
jns
pop
pop
rol
out
or
fistl
push
icebp
lods
jge
mov
jnp
std
push
sub
idivb
shlb
xor
cltd
cmp
sub
test
bound
jae
add
push
pop
jb
sub
add
scas
xchg
out
pop
jl
cltd
and
lods
cld
push
icebp
in
inc
fld
jb
cmc
jge
jnp
loopne
int3
adc
dec
xor
mov
or
pop
inc
push
daa
jg
xchg
jae
mov
daa
xor
and
fwait
dec
and
inc
notb
mov
xor
push
push
imul
repz
cmp
and
and
pop
cs
mov
adc
inc
fnsave
xorl
rcrb
mov
push
inc
mov
push
into
lods
fcoms
and
cmpsl
mov
xchg
mov
pusha
int
push
ss
pushf
add
push
aas
dec
call
scas
push
jmp
xor
fsubl
cld
adc
fwait
movsb
shll
and
jle
xchg
out
mov
push
xor
jnp
mov
das
rorb
mov
scas
inc
sub
or
and
gs
fsubr
int
mov
sub
push
mov
fxch
pop
jb
sti
std
fs
aas
andl
add
out
sbb
inc
mov
inc
or
out
leave
cmp
pop
mov
jmp
call
jle
adc
jl
out
and
dec
test
jno
and
push
cltd
inc
xchg
xchg
in
in
andl
inc
pop
and
aam
shll
mov
mov
cmp
pushw
dec
xchg
pop
ficomps
mov
movsl
and
add
mov
cltd
sahf
xchg
cmp
and
cmp
subb
mov
ja
push
cmp
adc
pop
jecxz
clc
jle
out
jp
fidivrl
in
sbb
sbb
pop
or
stos
jns
test
or
ficompl
cmpsl
inc
sbb
xchg
movsl
lds
mov
test
clc
call
mov
fildll
fnstsw
inc
sbb
sbb
xchg
sbb
outsl
or
adc
xor
lds
movsl
insl
xor
lahf
popf
fwait
lods
jp
xor
les
das
mov
test
int
add
hlt
aam
inc
mov
aam
xchg
adc
push
push
mov
or
or
ds
push
cmp
dec
js
les
mov
mov
divb
out
inc
xor
push
aad
insb
mov
ss
or
cmp
repnz
inc
movb
xchg
inc
cmp
sbb
push
mov
faddl
cmp
jae
mov
jns
xchg
or
and
mov
jecxz
dec
sti
sub
push
sub
ja
leave
push
mov
mov
mov
lahf
lds
test
hlt
push
into
push
stos
stc
mov
jno
xor
fcmovb
dec
stos
pop
jne
fstps
adc
sbb
in
ds
adc
icebp
dec
testb
mov
mov
out
or
test
add
sbb
push
bound
adc
inc
xlat
sub
inc
mov
jecxz
cmp
pop
add
sahf
div
inc
rcr
push
sbb
and
mov
cmpsb
and
mov
cmp
add
push
fnsave
dec
mov
or
pop
aad
fdivrl
jmp
subb
jnp
or
imul
int3
pop
popa
adc
pop
cli
cmp
mov
lock
and
aad
or
jo
sub
jp
or
cmpsl
mov
in
repz
xchg
into
rcrb
cmp
aad
or
pop
in
out
into
xchg
sub
lds
popf
out
insb
jns
pusha
cltd
out
test
std
in
inc
ret
or
aas
push
daa
cwtl
adc
dec
inc
ficomps
add
sbb
scas
inc
mov
mov
adc
jmp
pop
test
cmp
out
movsl
mov
lods
add
mov
in
pusha
xchg
mov
data16
pop
stos
lods
outsl
dec
cli
dec
cmpsl
or
xchg
lods
aad
shll
push
call
pop
fcomps
jnp
andb
arpl
pop
cld
cmp
cmp
clc
mov
dec
movsl
xor
daa
push
mov
inc
jbe
adc
cld
add
xlat
adc
push
out
cmp
ja
push
adc
jmpw
adc
lods
jp
jnp
mov
movsb
fsubrl
fnstcw
mov
add
mov
in
cmp
popa
and
movb
push
jae
rclb
xchg
jmp
nop
cmp
pop
xchg
repnz
outsb
jle
scas
inc
loop
dec
out
push
mov
lock
jns
adc
jns
lock
movsl
jp
xor
and
or
cmp
fidivrl
scas
mov
xor
push
mov
enter
sahf
outsb
sar
std
ret
push
popf
enter
pop
hlt
cmp
sub
lea
sub
mov
int
pushf
cltd
out
pop
lcall
dec
loopne
ret
mulb
lds
pop
adc
aaa
and
leave
inc
xlat
push
mov
mov
call
fmull
jae
in
xchg
in
pushf
xlat
xlat
ret
and
lods
nop
js
test
add
shll
lret
inc
pusha
std
inc
xor
push
add
mov
leave
cmpsl
scas
cmpsl
sbb
xchg
loopne
add
adcl
dec
mov
stos
sub
repnz
xchg
int
je
loop
jnp
ret
lods
push
mov
xorl
cld
mov
pop
pop
lret
jmp
das
lds
outsb
pop
fldcw
fildll
pop
sbb
or
mov
ds
inc
jg
jge
subl
pop
xchg
xchg
sbb
scas
push
pushf
cmp
jo
leave
mov
lret
jmp
out
pop
fdiv
popa
cmp
push
ja
push
lods
js
stos
test
rol
fstl
aad
test
icebp
xchg
xor
in
iret
dec
xchg
cmc
and
arpl
pandn
movsb
cmp
clc
test
test
ret
out
jae
in
push
adc
das
mov
repnz
xchg
and
and
adc
adc
in
pop
adc
dec
hlt
lret
push
mov
mov
div
iret
ror
lods
pushf
sbb
fstpl
mov
xchg
or
call
popf
xor
push
out
fsubrs
repnz
inc
xchg
sub
add
jne
push
add
push
ss
imull
out
stos
mov
cmpsl
adc
pop
push
jle
fnstcw
sub
les
sbb
mov
mov
cwtl
divl
fstp
pop
das
test
xor
fwait
es
and
loop
push
inc
mov
add
shrl
and
fwait
xchg
stc
lret
clc
push
mov
inc
and
mov
mov
shll
cmp
enter
lret
enter
sub
push
mov
jp
mov
add
push
jmp
rol
sbb
mov
lods
jno
jb
add
sbb
lret
stos
ja
adc
aam
cmc
ret
imul
pop
jg
jae
mov
add
sti
pop
ds
adcb
nop
in
out
mov
sub
mov
clc
leave
cmpb
test
xchg
jge
dec
sbb
lods
push
mov
fcoml
cli
add
push
push
subl
mov
cmp
mov
cld
sbb
push
sub
arpl
sub
jl
xchg
jge
jecxz
shr
in
mov
insl
jb
and
into
popf
aaa
lret
mov
cmp
mov
add
mov
cltd
adc
pop
lahf
std
into
mov
jbe
inc
jle
sub
lahf
jmp
scas
push
pop
repnz
fmul
aam
mov
pop
cli
pop
mov
dec
dec
push
iret
xchg
adc
and
dec
rcrb
dec
xchg
shll
jg
inc
mov
ret
aad
cmp
sub
aaa
pop
aad
dec
call
jp
pop
test
push
outsl
ret
dec
pop
xchg
stos
add
add
adc
into
fbstp
ret
imul
xor
xor
jo
and
xchg
clc
push
out
shlb
je
dec
aam
xor
popf
popa
popa
movsb
xchg
enter
out
xchg
cmp
outsl
lods
adc
loope,pn
or
loope
scas
rcl
adcl
push
xor
push
mov
dec
push
mov
sahf
cmovo
js
sub
call
xor
decl
fs
mov
adcb
pushf
adc
mov
rcrb
mov
sti
aaa
mov
fiadds
xor
pop
adc
and
int3
scas
leave
lock
scas
pop
adc
mov
fstl
and
adc
push
stc
mov
outsl
xchg
jmp
sbb
lahf
push
popf
jmp
or
mov
inc
inc
insl
rcrb
or
jge
cmpsl
out
and
in
sub
sbb
mov
jo
inc
mov
jle
pop
shlb
jne
hlt
or
mov
imul
cwtl
mov
icebp
sub
fimull
sbb
int3
fmulp
or
adc
fwait
xchg
leave
sbb
test
sbb
push
fstpt
pop
pop
outsb
inc
inc
xor
sarl
mov
cmpl
scas
mov
js
adc
fiaddl
mov
mov
mov
inc
push
incb
aaa
repz
xchg
mov
or
pop
xlat
jmp
jnp
fdivrl
dec
inc
cmp
jge
call
imull
in
lret
lcall
push
sub
stc
cmp
xor
sbb
push
nop
xor
mov
and
push
inc
jmp
push
adc
nop
shufps
mov
mov
and
dec
mov
loop
inc
xchg
sbb
test
add
adc
pop
fwait
mov
add
daa
or
test
sub
faddp
xchg
aad
or
repz
loope
enter
cld
fwait
pop
stos
lods
lcall
test
popf
shll
push
shlb
mov
push
aaa
aam
sbb
inc
push
jo
add
aad
adc
add
jecxz
push
into
insl
mov
fwait
dec
icebp
in
testl
inc
sub
sarb
popf
adc
lret
pop
cmp
mov
jne
ret
mov
popl
test
mov
in
popf
lret
mov
and
sub
adc
mov
adc
or
call
outsb
cmp
mov
gs
inc
fistps
pop
stc
ret
and
sub
inc
jmp
cmp
fdiv
adc
sbb
clc
stos
sub
mov
add
mov
jle
stos
push
sbb
ret
stos
pop
je
jmp
cmc
push
or
adc
jecxz
pop
jnp
repz
mov
xchg
sub
jg
mov
push
add
and
mov
adc
push
addl
sbb
mov
mov
daa
out
mov
add
shll
dec
mov
mov
aad
xor
fcoml
pop
or
jns
rclb
int3
pop
pop
test
test
push
sub
or
cmp
dec
mov
push
testb
lock
dec
clc
inc
push
and
stc
cmp
mov
cltd
xor
sbb
pop
stos
stc
scas
xchg
mov
sti
fimuls
jp
inc
enter
ss
pop
mov
or
push
int3
daa
cli
sbb
push
jge
xchg
into
pop
push
aas
mov
and
clc
push
jge
mulb
push
cmp
pop
ja
or
or
jb
loope
mov
mov
outsl
iret
fimull
pop
stos
cmp
not
jge
xor
xchg
xor
pop
call
das
fmuls
shlb
dec
inc
adc
aam
ljmp
xor
ret
cmpsl
mov
pushf
ds
sahf
cwtl
jl
or
xchg
jae
imul
loopne
outsl
es
arpl
mov
pop
mov
loope
sti
dec
mov
shlb
stc
lcall
loopne
mov
xchg
pushf
mov
jne
inc
jp
jb
sub
jb
adc
shl
jns
mov
xor
cmc
out
outsl
out
push
aad
outsb
ja
test
cmp
mov
jle
pop
mov
es
and
mov
int3
jae
sbb
xlat
aad
inc
int3
xchg
inc
dec
je
call
aad
pop
adc
cmpsl
inc
dec
sarb
icebp
movsb
sarl
test
sbbl
movsb
aas
lea
jle
shrl
movsl
or
fs
movsl
mov
repnz
mov
imul
mov
xchg
insb
pop
mov
add
out
ret
push
enter
out
test
xor
or
pop
lods
cmpsl
cmp
pop
and
cmp
xor
dec
adc
sbb
pop
hlt
insb
lcall
fidivrs
fs
dec
std
test
out
mov
ljmp
js
bound
imul
push
dec
pop
mov
inc
pop
into
pushf
and
xor
xchg
daa
leave
enter
xor
add
add
jnp
mov
scas
andb
pop
je
jbe
test
cld
cmp
loopne
addr16
imul
mov
add
adc
cltd
addr16
jne
sbb
dec
pop
push
mov
cmp
shl
in
sti
mov
or
movsl
xchg
mov
lock
mov
rolb
add
sub
mov
cli
movsb
sub
cmp
fnstenv
add
ljmp
mov
dec
mov
outsb
out
mov
out
aas
or
sub
and
add
jbe
stc
and
aaa
jge
inc
adc
add
mov
int
push
dec
in
pop
clc
or
jle
movsb
das
pushf
aam
jns
sbb
mov
rep
cltd
cmp
or
leave
mov
hlt
push
mov
push
mov
push
outsl
mov
pusha
leave
mov
pusha
rclb
rcrl
push
sbb
inc
addl
cmp
rcrl
jb
stos
arpl
add
push
bound
scas
xchg
inc
and
addr16
or
movsb
mov
js
aas
or
mov
pop
repz
pop
test
pop
push
pushf
inc
push
mov
cmp
out
and
dec
sarl
dec
fistpl
xor
sahf
mov
dec
mov
cli
lahf
das
sub
ja
xchg
xchg
mov
xchg
dec
xorl
sbb
xchg
lahf
push
popf
sbb
jns
data16
fwait
xchg
sbb
icebp
fisubrs
jg
mov
inc
leave
insb
scas
pusha
push
std
int
aaa
fdivs
pop
and
sbb
push
imul
jno
test
dec
cmp
stos
adc
xor
adc
and
mov
pop
adc
das
lcall
inc
js
push
adcb
mov
mov
aam
lret
push
mov
icebp
inc
orl
adc
adc
sub
push
fs
xor
out
shrb
adc
xor
or
ret
popl
cmp
mov
pop
aaa
int3
mov
fbld
pop
insl
scas
gs
jns
push
mov
or
repz
ss
jne
sub
fists
cmp
jnp
pop
sub
sti
cmp
pop
ret
push
dec
jp
xor
dec
dec
xor
xor
and
jge
arpl
jae
ljmp
mov
or
dec
testl
adc
xlat
lds
outsb
xor
mov
xchg
out
xlat
or
mov
mov
lahf
mov
push
paddd
es
xchg
jns
fimuls
lcall
xchg
lock
pop
repnz
sbb
movl
cld
out
es
xor
pop
int
aaa
xor
popf
fdivs
xchg
dec
inc
xor
insb
test
clc
sub
and
cwtl
test
cmc
popf
jnp
lods
push
xchg
push
in
jae
cli
xor
mov
mov
inc
sbb
mov
out
cmc
push
sbbb
mov
mov
fwait
sub
mov
outsb
in
mov
or
addr16
mov
push
jns
aad
xor
outsl
inc
loop
cmpsl
adc
es
rcr
mov
and
push
dec
jmp
aaa
pop
pop
push
xchg
mov
cmp
ljmp
adc
fucomp
sti
cmp
push
mov
and
stos
and
clc
push
mull
add
mov
cwtl
mov
adc
enter
cmc
cmp
jno
jne
into
sub
push
pop
inc
std
insb
jns
nop
and
xchg
lock
loope
sbb
push
les
inc
inc
jns
call
mov
or
cmpsb
pop
xchg
fdiv
push
dec
rcrl
mov
adc
jns,pt
pop
cmpsb
mov
mov
push
jnp
fdivrp
loop
rcll
in
sub
jo
mov
push
es
lcall
sbb
and
sub
mov
fcoml
imul
nop
push
mov
mov
jg
jno
icebp
aas
jne
pop
clc
mov
mov
popf
ja
pop
insb
mov
pop
push
test
sub
iret
xor
pop
mov
or
arpl
mov
bnd
adc
mov
push
and
pop
popa
rorl
mov
mov
in
pop
scas
pop
mov
movsb
pop
add
in
fisubl
into
in
repz
aam
inc
shlb
fnstenv
shl
xchg
lret
jns
movb
bound
adc
add
mov
push
es
aam
xchg
fcmovb
push
test
repz
cmp
dec
pop
xor
mov
mov
push
stos
stc
stc
ret
add
jp
jbe
cmpsw
insb
and
stos
test
scas
stos
jnp
call
inc
xchg
inc
std
inc
cmp
push
xchg
mov
push
push
cmpsb
cmp
loop
outsb
lcall
sub
insb
mov
push
push
inc
dec
lret
mov
stos
cld
iret
pop
cmp
cmp
pop
sbb
divb
stos
test
sbb
nop
lods
sub
or
jb
pusha
xor
push
mov
cmp
stos
or
aaa
jbe
test
dec
mov
mov
leave
adc
mov
leave
in
mulb
mov
into
mov
out
jmp
mov
fcoms
movd
shrb
lods
test
out
adc
cmp
xchg
pop
ret
push
pop
pop
mov
int3
sbb
mov
lret
or
fildl
inc
or
ja
test
mov
sbb
scas
adcl
jb
les
lahf
ficoms
pop
push
pop
xor
insl
push
das
sbbl
pushf
inc
adc
addr16
or
ljmp
xchg
mov
ret
in
cmp
ss
inc
add
inc
out
mov
leave
fcomps
call
dec
sbb
pop
das
mov
xor
test
inc
bound
pop
inc
push
shlb
cltd
in
insl
lret
add
cmpsb
mov
mov
mov
mov
sub
bound
rcl
mov
adc
aad
int
test
scas
mov
cmp
cltd
nop
ss
pushf
jmp
test
jg
test
add
int
or
sub
pop
adc
pop
add
loopne
jp
movsb
lret
cli
push
mov
shl
jg
adc
out
lods
lods
insl
inc
int
xor
stos
aam
in
rcrb
rcrb
and
pop
sub
rorb
sbb
jno
xor
xchg
in
mov
mov
aaa
xor
mov
lods
push
or
cmp
inc
jb
ja
pop
jne
stos
dec
and
push
mov
cwtl
rcr
push
shrb
repnz
fldcw
ds
mov
xlat
fimull
jmp
aad
pop
fs
ret
fwait
pop
cmpsl
xchg
mov
nop
push
fwait
pop
mov
fcomps
cmp
mov
aam
daa
sub
jl
lret
mov
lret
repnz
psllq
pushl
jbe
mov
push
je
sahf
inc
jns
in
out
dec
fildll
shr
dec
dec
test
fcomi
cmpsb
adc
daa
outsb
nop
cwtl
decl
mov
jno
sar
cmp
fs
imul
push
outsb
or
add
loope
mov
add
inc
push
mov
fistpl
icebp
cwtl
push
fiaddl
jne
jmp
or
adc
lods
push
sbb
push
push
ljmp
insb
insb
lret
adc
xorb
cmpsb
mov
fmuls
or
int
arpl
loopne
xor
mov
ret
pop
out
clc
and
pop
pop
pushl
incl
shrb
adc
cld
cmp
out
jnp
in
sbb
inc
cld
jecxz
nop
arpl
pusha
xor
repnz
repz
mov
dec
test
in
xchg
mov
icebp
pop
sbb
push
cwtl
mov
insl
inc
ret
dec
inc
sub
stos
mov
inc
sub
xor
mov
lods
dec
fwait
lods
dec
cmp
push
fcoms
mov
jmp
mov
cmp
jno
popf
add
pop
fcomps
add
mov
inc
inc
lret
aam
mov
xchg
les
sbb
adc
inc
mov
mov
sahf
jl
gs
movsl
mov
sub
sub
push
dec
scas
mov
mov
hlt
pop
sub
cmp
cmpsl
rcrb
pop
dec
dec
xor
fmulp
js
add
in
sti
sbb
jbe
aaa
in
in
xchg
aad
mov
popf
scas
push
xchg
xchg
call
xchg
adc
es
mov
mov
xor
adc
xor
pop
out
cld
cmp
push
adc
fwait
add
jge
jo
add
cmp
movsb
sub
popa
xor
jbe
fs
stos
stos
xchg
inc
stos
jp
insl
sbb
mov
insb
push
cs
push
mov
sti
scas
testl
roll
mov
and
mov
push
call
out
std
or
arpl
sarl
adc
sbb
and
xchg
sub
and
out
pop
nop
and
mov
or
xchg
fsubs
mov
fsubl
mov
push
push
cltd
outsb
in
test
adc
add
mov
sbb
and
jg
jg
pop
ja
dec
add
fwait
jg
shlb
clc
or
psubusb
subb
inc
push
pop
js
push
pop
into
sub
lret
andnps
xchg
ret
mov
lds
roll
out
xor
movsl
aas
push
push
xchg
pop
daa
pushf
sub
cmp
jae
and
push
or
fbstp
stos
cmp
sub
insl
roll
push
cmc
movl
pop
sub
je
outsl
fnstenv
sub
movsb
leave
jne
aam
test
cli
jle
jg
aaa
sarb
test
mov
jl
sub
mov
and
mov
sbbb
sub
rorb
jno
xor
inc
and
notl
and
bnd
inc
cmpsl
xlat
add
push
scas
leave
mov
inc
lods
sub
test
hlt
jmp
mov
call
xchg
aaa
fistps
mov
stc
dec
popl
jl
mov
add
and
testb
in
cli
outsl
repnz
pusha
out
xor
push
mov
sbb
out
das
xchg
aad
sub
cmp
mov
pop
mov
icebp
pop
or
mov
adc
dec
aad
lcall
inc
sub
ljmp
pop
repnz
cmp
xlat
lcall
leave
outsl
in
rcl
lret
mov
pop
imul
xchg
dec
cld
push
fdivrp
sbb
jb
pop
fs
js
mov
cld
xor
loop
mov
fildl
repnz
sbb
mov
gs
push
movsl
or
fstl
movsl
mov
ja
sbb
adc
dec
pusha
sub
mov
notb
push
scas
xchg
scas
cmovne
cmpsb
cli
sub
push
and
push
mov
cmp
push
sub
mov
imul
sub
jp
xchg
aad
rcrb
adc
sub
mov
dec
jge
fcompl
or
cmp
not
push
xlat
cmp
xor
mov
push
push
stos
mov
test
negl
push
stc
es
in
inc
mov
aas
sbb
test
int3
insl
jecxz
aas
jo
aam
pop
lret
ret
lods
pop
push
in
xchg
adc
pop
mov
stos
movsl
jl
jb
sbb
push
push
fisubrl
hlt
std
inc
dec
imul
xchg
dec
sbb
test
or
cmp
fnstsw
adc
adc
jecxz
insl
mov
adc
js
subb
stos
lock
jl
insb
bound
in
jns
sub
addr16
xchg
pop
adc
dec
xchg
sar
addr16
out
mov
dec
inc
xor
jnp
loop
mov
in
or
in
clc
jbe
mov
mov
add
out
jnp
out
iret
xchg
out
push
neg
mov
mov
cmpsb
movb
cmp
shlb
mov
into
inc
sbb
jecxz
aas
shlb
jb
rolb
pop
and
jp
fldl2e
mov
imul
push
cmp
xor
adc
fbstp
stc
jo
outsb
jnp
sbb
push
movsb
ja
cmpsl
xor
movsb
cld
test
pop
dec
stc
push
hlt
inc
and
lret
stos
xchg
sti
in
enter
sbb
clc
iret
dec
jmp
mov
mov
dec
adc
cltd
dec
push
ja
inc
mov
jns
std
inc
sbb
bound
daa
call
fcmove
add
xchg
fsubrl
sub
mov
add
iret
pop
nop
pop
lds
imul
mov
js
clc
jae
jno
rclb
cmpb
cmp
movsl
dec
sbb
and
lods
lahf
stos
cwtl
aad
in
pop
jle
push
mov
mov
pop
dec
into
sbb
dec
and
push
push
stos
test
inc
cmp
cwtl
leave
inc
pop
addb
cli
push
test
mov
out
add
push
pop
icebp
push
sbb
mov
loope
jg
push
mov
mov
es
pop
mov
xchg
loop
stos
sub
dec
add
rdmsr
mov
push
nop
aaa
push
cmp
icebp
inc
add
xchg
sbb
mov
xlat
fwait
push
insl
and
outsl
fdivl
jns
out
stc
fdivr
imul
pop
jnp
jbe
xor
pop
xchg
cli
out
scas
test
mov
and
cmpsl
fadds
scas
pushf
incl
sar
ja
lcall
ds
or
mov
push
dec
inc
loop
imul
loopne
or
mov
fcoms
test
pop
push
push
shrb
pop
inc
mov
jne
mov
out
lret
mov
inc
fwait
sbbb
pusha
xchg
jb
out
mov
or
ss
loopne
jmp
aad
pop
les
pop
icebp
sbb
xchg
lret
push
movsl
outsl
xor
fwait
xor
in
mov
test
movsb
stc
orw
cmp
mov
dec
stc
cld
js
mov
inc
jae
roll
das
repz
outsl
int
ds
sbb
dec
mov
jns
pop
add
jg
mov
lock
or
and
xor
cmp
jbe
mov
add
sti
jg
bound
icebp
aam
ja
push
shlb
push
pop
scas
clc
insl
adc
js
cltd
xchg
dec
aad
insb
bound
arpl
jnp
rcll
mov
xchg
enter
sub
jp
popa
sbb
addr16
test
shll
fmull
jnp
dec
rcrb
lea
sbb
mov
sbb
daa
xor
sub
jmp
inc
fwait
std
or
mov
cmp
test
mov
jp
ja
ret
sub
xor
fidivrs
cmp
sbb
add
mov
pop
aad
les
js
dec
ja,pt
dec
lret
inc
lret
or
or
inc
sarb
sti
mov
lds
sarl
loopne
sbb
xor
jg
lret
mov
sbb
mov
xchg
sarb
mov
loope
push
pop
sbb
push
pop
sarb
in
mov
pop
inc
lods
test
inc
testl
addr16
mov
sub
rorl
pop
ja
subps
lods
dec
cmp
push
out
sbb
jmp
mov
popa
mov
or
ja
subb
sarl
dec
or
popf
mov
fs
jnp
mov
xchg
xchg
add
jge
sarb
lock
loope
push
sarb
call
jmp
into
adc
fildl
mov
shlb
cmp
jae
sub
loop
adc
int3
int
add
ficompl
mov
xchg
adc
mov
dec
or
jecxz
pop
stos
cmpsb
mov
cmp
push
sbb
ja
inc
js
add
cli
cwtl
shr
push
loop
or
mov
aaa
mov
fdivs
in
and
sbb
cmc
outsl
pop
dec
sub
enter
adc
popl
xor
add
adc
movsl
pop
pop
fmuls
pop
rorl
push
into
jns
aam
test
and
sbb
sub
cmpsl
mov
add
loope
aad
mov
std
push
mov
movsl
mov
pop
sub
js
dec
pop
arpl
push
js
cmpsb
mov
sbb
inc
mov
cmp
xor
mov
ljmp
dec
xchg
lds
inc
jnp
jns
sub
clc
jg
pop
sub
nop
and
les
cmp
or
adc
mov
mov
jg
fsubs
sti
scas
sub
sub
add
xchg
sub
sub
pop
movsl
and
pop
insb
or
cmp
pop
mov
jecxz
dec
cmp
dec
into
adc
mov
adc
js
mov
xchg
scas
jmp
push
cmp
pop
jp
inc
ffree
fdiv
jge
repz
inc
jne
mov
scas
mov
lock
aam
push
inc
xlat
bound
pop
xchg
sahf
inc
push
fdivl
inc
leave
xchg
dec
mov
mov
jo
pop
je
sahf
dec
popf
mov
mulb
cs
dec
cwtl
sbb
divb
dec
mov
sub
fidivs
fdivrs
mov
dec
std
stos
dec
fldt
fldenv
lods
faddl
int3
mov
retw
pusha
dec
les
push
cmp
push
shll
sub
jo
ret
push
movsl
mov
out
imul
adc
lahf
enter
das
stos
xchg
int3
sbb
stos
sysexit
mov
and
call
hlt
dec
ljmp
add
and
sbb
lods
xlat
jmp
incb
mov
mov
andb
pop
push
notl
ret
xchg
pop
cwtl
dec
aas
jae
clc
dec
adc
xchg
mov
or
cmpsb
inc
jl
cld
cmp
adc
sub
ja
loope
cwtl
xchg
adc
mov
sbb
push
imul
fcoml
or
pop
cmpsl
sbb
shlb
popa
jbe
popl
adc
xchg
negb
adc
push
sub
shrb
sub
cld
aaa
push
dec
lahf
in
mov
stos
into
cmp
push
xor
mov
imul
xor
data16
jbe
movsb
xchg
dec
mov
int
gs
aam
pop
pop
push
jle
fdivrs
mov
jecxz
lock
cltd
pop
mov
shrl
cli
movsb
imul
out
xchg
jp
shrl
out
dec
lock
imul
sub
mov
add
add
add
daa
cmp
dec
cltd
imul
insl
imul
jl
ljmp
mov
das
rcl
sub
inc
sbb
addr16
lret
or
cltd
daa
mov
fucomi
push
arpl
out
xchg
push
mov
mov
and
push
or
rclb
aaa
ret
outsb
ret
dec
imul
and
mov
call
cmpsb
mov
call
call
and
cmpsb
or
inc
sbb
and
ss
aam
dec
dec
rcr
xor
pop
mov
imull
imul
jmp
push
js
das
jle
addr16
sbb
sub
xlat
mov
lds
pop
mov
pop
in
cs
scas
popa
int3
push
mov
or
and
test
cmp
jl
xor
mov
sbb
shlb
mov
dec
stos
out
sub
ret
fisttpl
lods
push
inc
dec
xchg
into
pop
mov
xchg
nop
sub
shrb
pop
xor
lods
pop
jp,pt
mov
push
out
jmp
xlat
sarl
scas
jb
jbe
jno
out
dec
and
push
push
jbe
int
and
push
rclb
test
rcll
fnstcw
pop
mov
lret
loop
lea
sti
pop
jns
popf
test
jb
lret
push
sbb
push
dec
aas
popa
dec
dec
inc
lods
scas
push
cltd
jne
jbe
adc
xchg
ljmp
cmc
test
jo
shl
in
aaa
insb
sbb
out
lcall
cwtl
movsl
ja
cld
imul
xchg
insb
jae
pop
pop
ljmp
mov
dec
mov
fsub
jg
movsb
lahf
cs
sub
and
sti
jb
clc
lret
outsl
inc
dec
and
mov
jb
push
jmp
mov
add
or
test
hlt
xor
int3
mov
mov
jmp
out
jmp
adc
mov
mov
lods
cmpsb
and
cli
mov
push
sti
es
cltd
mov
inc
sbb
int
inc
jne
cmp
pop
shrb
test
adc
popa
xlat
adc
inc
dec
xorb
enter
push
nop
std
xor
jl
jecxz
shll
rolb
push
mov
loop
loope
jno
in
aad
mov
jns
inc
and
mov
addr16
jecxz
dec
cli
mov
sbb
mov
cmp
adc
in
jno
add
bnd
int
jnp
lea
cs
mov
inc
sub
movsl
mov
push
jo
mov
mov
testb
sub
icebp
mov
mov
sub
cmp
add
or
xlat
je
mov
lods
pop
cld
mov
dec
aam
mov
adc
and
pop
es
ror
rcrl
fidivs
aas
daa
push
imul
or
ficoms
popf
lcall
dec
ret
jbe
loop
push
leave
nop
dec
cltd
push
jb
add
pusha
sbb
iret
or
stc
imul
mov
dec
xor
add
pop
jecxz
clc
xchg
fisttpll
out
or
pop
in
inc
xor
lds
mov
adc
and
mov
mov
ret
push
inc
mov
mov
jne
push
xor
jno
fisttps
int3
stos
icebp
jo
aaa
rcrb
add
push
ss
lods
js
rorl
cwtl
daa
pop
push
mov
dec
arpl
je
ja
cld
adc
imul
inc
in
dec
xchg
dec
ljmp
ret
dec
enter
hlt
mov
fldcw
int3
lahf
xchg
stos
adc
popf
inc
pop
lods
lods
arpl
lahf
fistps
push
sbb
arpl
xchg
cli
xchg
sbb
mov
insb
or
dec
lcall
lea
inc
xor
jbe
add
mov
out
cld
cmc
mov
sub
call
repz
push
adc
xchg
jno
dec
jb
mov
adc
jne
mov
bound
cs
sub
xor
jae
jle
sub
sbb
in
mov
test
push
fs
test
scas
incb
adc
mov
scas
das
sti
xchg
inc
insl
ljmp
mull
fdivs
addr16
es
mov
outsb
repnz
xlat
adc
int
xchg
es
in
inc
dec
into
repnz
pop
mov
mov
loop
jb
shl
mov
fsts
outsl
xchg
jbe
mov
arpl
mov
fs
jle
js
or
xchg
into
adc
dec
push
loope
cwtl
rcr
fstpt
repnz
dec
or
imul
ds
in
popf
aad
xchg
fbstp
aad
jle
aam
test
pop
mov
or
mov
fisubl
xchg
mov
aas
jbe
scas
ljmp
cmp
pop
iret
sub
mov
aam
pushf
sub
xchg
loopne
add
sbb
and
imul
and
mov
jle
and
rorl
aaa
dec
lods
andl
filds
jae
fstpt
ss
movsl
icebp
xchg
cltd
or
lock
out
and
ja
bound
or
dec
pop
mov
pop
fbld
lods
inc
pop
adc
or
xchg
enter
add
or
cmc
out
inc
fwait
test
mov
loopne
outsb
icebp
lret
nop
pop
iret
mov
test
adc
xorl
adc
lret
lret
dec
push
aam
cmp
cmp
inc
push
sbbl
pop
adc
inc
push
mov
xor
dec
push
je
hlt
popa
mov
fildll
je
cmc
add
pop
stos
test
add
cmpsb
pop
and
mov
sar
cmpsl
pop
clc
pop
add
mov
aas
cld
cwtl
fs
mov
or
and
std
inc
hlt
andl
mov
mov
or
or
nop
jae
sbb
xor
cmc
sbb
push
neg
adc
fisttps
pop
incl
sahf
ficoml
adc
leave
cli
xchg
add
mov
ljmp
repnz
fwait
test
insl
in
ss
mov
or
push
mov
stc
enter
cli
out
aad
cmp
scas
mov
mov
jae
or
push
clc
or
lcall
bnd
push
xchg
xchg
inc
xchg
outsl
fldenv
into
sub
lret
fiaddl
aam
cmp
ja
fs
xchg
dec
dec
mov
and
xchg
daa
lret
ror
fstl
gs
call
pop
mov
and
xor
testl
rolb
ds
pop
xchg
out
testl
push
loopne
cli
mov
mov
lods
push
adc
push
sbb
xchg
sti
sub
stos
or
nop
mov
int
or
and
and
push
push
push
push
xor
sub
cli
out
je
xchg
and
sub
test
fs
mov
jmp
aas
mov
inc
cltd
mov
mov
cmpsl
or
fwait
xchg
mov
dec
xor
add
vmovmskpd
scas
or
dec
add
add
js
add
xor
or
push
mov
dec
xchg
push
cmp
out
jno
inc
xor
les
das
pop
xor
mov
dec
jmp
sbb
pop
inc
es
xchg
mov
cmp
sbb
es
and
push
sti
sahf
imul
repnz
imul
dec
mov
pop
imul
mov
faddl
ds
xor
arpl
out
daa
aam
add
mov
es
in
jae
adc
push
cmc
and
cmp
push
mov
mov
mov
add
cli
adc
push
mov
fmulp
int3
mov
mov
dec
test
add
cltd
mov
int
sbb
ret
daa
cmpb
pop
lea
and
sub
jl
filds
mov
mov
add
cltd
sarl
jge
outsb
pop
xor
mov
inc
sub
inc
xor
pop
shr
rep
cmpsl
mov
xor
aam
pop
adc
aaa
pop
movswl
cmp
xchg
mov
outsl
das
int3
je
xchg
pop
mov
adc
mov
jnp
mov
sub
iret
popf
mov
adc
ret
dec
ja
aad
sbb
push
dec
push
stc
xlat
neg
sbbb
add
lds
fisubs
jne
lret
xor
cmp
push
aad
cltd
std
pop
sbb
out
out
int
dec
cld
mov
lcall
push
sub
add
shr
movsb
pusha
sbb
je
mov
test
sbb
add
mov
fwait
xchg
push
das
fiadds
lcall
out
inc
sbb
mov
movsb
cmp
sahf
in
jmp
pop
ret
mov
jbe
cmpsl
bnd
mov
mov
popa
popf
mov
or
adc
inc
int3
pop
idivb
push
jnp
lock
dec
loope
mov
popf
xchg
jl
in
jae,pt
cs
push
nop
cmpsb
xor
or
xor
inc
stos
icebp
xor
add
push
call
imul
sbb
push
rcl
jnp
pop
dec
xchg
mov
cmpsb
fimuls
insb
iret
jne
xor
cmc
and
clc
scas
lea
stc
sub
push
inc
stos
aad
pop
int3
push
ljmp
cltd
imulb
lea
aaa
or
mov
sbb
inc
psrlw
lcall
add
or
pcmpgtd
inc
movsl
lods
push
inc
scas
cli
add
push
pop
cli
adc
out
jo
lods
into
push
mov
dec
push
jo
dec
inc
cmp
data16
and
jle
add
pop
xchg
xor
sub
icebp
jo
test
ds
xchg
lahf
pushf
shlb
into
leave
ss
add
call
popa
popa
scas
dec
jmp
sbb
mov
mov
inc
mov
in
dec
icebp
imul
sub
lods
pop
aad
adc
ljmp
dec
icebp
jmp
mov
aad
jge
stos
jno
pop
cmp
and
roll
lahf
sarb
and
bound
mov
push
idiv
and
xchg
sub
mov
sub
fidivrl
add
mov
add
xor
jns
stc
push
or
sbb
sub
inc
jae
shrb
pusha
push
mov
fsubrs
dec
xor
xchg
xchg
xchg
add
jp
fldenv
fcoml
popa
shl
fnstenv
cld
imul
ds
pop
sti
jp
or
mov
lret
and
push
pop
aam
nop
in
leave
cltd
inc
rcll
or
jmp
xchg
sbb
lret
je
cltd
dec
fcomp
xchg
sub
pusha
pop
jecxz
jo
xchg
push
es
cmc
cmp
xchg
xchg
adc
into
stos
rorb
insb
fistpl
in
jg
pop
addr16
xchg
pop
mov
sbb
mov
shrb
cmp
jb
or
bound
pop
or
jne
mov
pop
fsubrl
jge
xor
mov
int3
push
xor
xchg
std
jl
lcall
shll
inc
mov
addl
mov
into
xchg
dec
inc
sbb
mov
repz
scas
mov
das
pop
hlt
mov
add
add
leave
mov
mov
lods
xor
and
scas
adc
adc
shll
pop
inc
mov
mov
lea
lock
xor
jb
mov
mov
xor
sub
test
dec
je
xchg
xor
mov
shrl
jo
pusha
jecxz
push
arpl
jnp
and
daa
outsb
mov
lods
mov
mov
es
lea
pop
sahf
popa
push
sbb
ljmp
ds
mov
popw
aas
ss
imul
test
insb
and
sub
mov
cmpsl
sbb
mov
pop
push
xchg
push
and
leave
dec
xor
or
cltd
push
scas
sbb
fsts
inc
iret
inc
inc
mulb
std
sub
repnz
jns
popf
or
xor
push
xchg
lcall
or
or
out
add
sub
test
pop
or
es
int3
xor
cmpb
das
push
test
inc
mov
jge
inc
inc
pushf
stos
stc
leave
jg
mov
push
cmp
fs
pop
mov
shr
or
or
repz
test
mov
mov
out
lock
mov
mov
jbe
mov
sub
in
pop
xorl
cmp
ret
push
xchg
cmp
aam
pop
sbb
ja
xor
int
and
or
loop
bound
jns
test
pop
inc
xor
mov
jne
and
push
jo
pusha
loopne,pn
test
shl
leave
adc
fdivl
and
jp
cltd
outsl
cs
nop
inc
addl
nop
ds
loop
out
cs
dec
fs
cld
stc
and
inc
int3
sbb
aas
mov
loop
cmpsb
adc
xor
sub
push
out
inc
adc
pop
outsb
pop
sub
cmpsb
dec
inc
leave
xor
cli
out
push
repnz
in
inc
das
push
jne
pushf
mov
iret
xchg
xor
leave
jmp
and
stc
cmp
cmpsb
adcb
push
mov
out
iret
scas
jno
pop
mov
sub
lods
and
xor
ret
mov
sub
adc
cmp
inc
sub
in
push
rcl
mov
test
test
aam
inc
dec
adc
pop
sub
inc
jle
sub
and
ficoml
mov
jg
outsb
xchg
in
hlt
pop
mov
pop
hlt
es
arpl
jle
cmp
fisubs
gs
cmpsl
xchg
xlat
xchg
lea
aas
std
ficomps
or
stos
hlt
dec
sbb
push
push
sbb
inc
cmp
in
std
aam
mov
fisttpl
cmp
push
std
push
mov
orb
dec
adc
lret
mov
or
adc
pop
ret
inc
in
mov
leave
sub
enter
xchg
mov
insl
dec
ds
iret
loopne
mov
pop
mov
repz
and
orb
and
lcall
cmpb
mov
or
push
in
sbb
or
pop
sub
adc
ljmp
lret
cmp
dec
loop
pop
mov
popf
mov
orl
inc
loopne
xchg
movsl
fnstenv
xor
mov
aaa
jno
out
ret
leave
lods
adc
pop
push
clc
mov
jb
cmpsl
xchg
lods
xor
or
fs
sub
imul
rcrl
sub
mov
sub
push
jb
sti
push
stos
sbbb
pop
notb
insl
or
sub
sarl
cmpsb
mov
sub
ret
push
mov
repz
daa
enter
mov
stos
pushf
push
cmp
andl
dec
daa
dec
int
das
and
in
lds
or
dec
jno
loop
adc
xor
xchg
mov
ror
xor
mov
pushf
insl
mov
fs
push
adc
fiaddl
jl
sbb
leave
mov
dec
out
ret
inc
pop
imul
pop
add
lea
jmp
pop
jge
sti
mov
mov
ret
xlat
sarb
push
pushf
test
rcrl
jbe
jl
mov
sub
xor
xchg
jle
int3
xor
inc
or
out
add
inc
stc
pop
lcall
inc
cli
rcrb
inc
pop
pop
cmp
nop
or
loope
sub
cmp
sub
push
mov
out
jl
cmp
in
or
push
sbb
or
add
jbe
repnz
pusha
push
and
xor
fucomip
dec
ret
and
sub
jmp
mov
sti
aaa
jb
mov
or
mov
inc
dec
lret
popa
lock
or
push
imul
cli
cmp
push
push
es
and
imul
inc
lds
pop
aas
mov
shr
and
rcrb
insb
sub
adc
xor
stc
pusha
shlb
dec
add
lahf
mov
popw
roll
test
inc
xchg
adc
pop
imul
adcl
mov
sbb
sub
bound
cmp
outsl
es
lods
ror
adc
xchg
fcomps
cld
pushf
mov
sahf
and
xchg
cli
test
mov
aas
cmp
into
sbbl
mov
jmp
pop
mov
movsl
and
out
xchg
cltd
std
mov
aad
fucomi
push
fidivl
add
movsl
popa
push
or
outsb
fistpl
sti
pop
bnd
xchg
ljmp
mov
orl
sub
shll
js
repz
cmp
jnp
jge
mov
es
test
jnp
xchg
mov
stc
imul
ljmp
js
sbb
pop
xor
scas
jb
sbb
mov
test
adc
fcomps
jp
mov
xor
imul
or
insb
mov
xchg
xchg
rcrb
fcomp
lahf
cmpsb
negl
dec
and
test
cmp
mov
stos
sbb
cli
jno
sbbb
mov
rcl
cmp
xchg
rolb
push
add
mov
test
inc
shrl
lea
hlt
imulb
or
ficomps
ficomps
mov
stos
mov
test
adc
xor
or
cmp
lds
push
aam
dec
adc
sti
lock
cltd
and
cs
es
jne
xor
sub
rolb
or
lahf
and
xchg
fisttps
mov
arpl
pop
mov
jnp
xchg
adc
shl
xor
pop
xchg
subb
pop
mov
jb
aas
cmc
add
clc
test
pop
jne
xchg
xchg
xor
cmp
scas
pop
cltd
mov
mov
inc
sub
xchg
movsb
or
add
lds
jle
jmp
subb
adc
mov
pop
xchg
mov
hlt
push
push
fstpt
rcrl
push
cmc
pop
mov
mov
test
sbb
and
repz
xchg
xor
mov
mov
adc
sbb
and
inc
and
mov
insl
mov
clc
push
jmp
cmp
pop
jg
xchg
mov
pop
mov
or
inc
push
mov
scas
fs
sarl
and
mov
fimull
xor
fsubrl
push
mov
loop
repz
clc
push
mov
cmpsl
pop
outsb
inc
or
cmc
xchg
pusha
out
jmp
popa
inc
cmp
and
adc
cmpsl
jmp
fcoml
jmp
leave
cmp
cmpsb
jbe,pt
movsl
add
jae
pop
pop
lea
es
mov
inc
lcall
adc
pop
js
cmp
ds
mov
test
repnz
xor
in
sub
subb
inc
je
into
adc
test
leave
sbb
jns
add
mov
sti
dec
jg
xchg
cwtl
faddl
push
dec
cli
dec
add
mulb
mov
lea
mov
shlb
rorb
or
or
scas
stc
jb
pop
jmp
cltd
icebp
mov
mov
xchg
in
aam
inc
xor
imull
xchg
cmp
jge
arpl
stc
pop
jle
inc
leave
bnd
push
fistpll
mov
pop
push
jnp
lret
dec
enter
or
mov
ret
and
jno
aad
pusha
jae
imulb
cli
imul
jbe
push
dec
pop
fwait
cmp
push
leave
arpl
out
das
adc
mov
xor
daa
adc
out
xchg
pop
mov
inc
repz
fwait
movaps
xor
js
adc
loop
or
ljmp
mov
mov
lahf
enter
dec
mov
test
push
cmp
jecxz
clc
cmp
data16
ror
push
int3
std
or
and
cli
testb
jl
add
stos
add
pop
iret
inc
and
ret
mov
int
int
das
mov
jl
ljmp
cld
sub
dec
stos
std
adc
lock
dec
cmc
and
mov
add
push
enter
and
dec
mov
add
push
dec
push
out
pop
xor
mov
cs
mov
jnp,pn
std
cmpsl
xor
inc
mov
dec
xor
push
call
pop
inc
inc
popf
testb
add
cmp
pushf
jbe
xchg
cmp
xchg
push
mov
shlb
dec
mov
clc
jae
xchg
cwtl
loop
fmull
cld
outsb
jne
mov
dec
sub
fsubr
out
xchg
out
dec
xchg
inc
divl
int3
jb
push
jl
or
sahf
loopne
push
gs
imul
dec
lods
cmpsl
cmpsb
mov
cli
lahf
push
gs
xor
cmp
jmp
shlb
outsl
test
lcall
in
repz
mov
lret
ljmp
mov
xchg
push
sbb
in
push
setnp
test
inc
pop
repnz
into
mov
mov
push
pop
jo
sbb
pop
nop
insb
jno
lods
ds
pop
into
stc
je
insl
cmpsb
fisttpll
pop
dec
hlt
jb
push
xchg
push
sub
negb
and
and
pop
add
jle
or
pop
leave
imul
in
test
adc
pop
pop
outsb
mov
sbb
in
pop
loopne
lods
int
sar
mov
lods
repz
ljmp
clc
aad
hlt
fucomi
test
sbb
xorl
pop
fwait
sbb
xlat
xchg
jne
jecxz
cwtl
loop
adc
add
cmp
in
xchg
lea
out
scas
jno
or
mov
test
shll
dec
rcll
sahf
cs
nop
and
in
jp
jae
orl
call
rcrb
push
ret
fsub
xor
test
mov
adc
mov
lahf
out
mov
cmp
jns
nop
mov
rcrl
xor
rclb
sti
pop
into
gs
std
lahf
stos
stos
sti
in
mov
shl
and
lret
sahf
das
jle
and
repz
inc
mov
sub
mov
jne
test
adc
inc
aas
add
add
xor
xchg
fisubrs
mov
adc
ljmp
fildl
sar
add
inc
scas
sub
pop
xchg
sub
mov
lods
dec
ja
or
mov
xor
mov
mov
dec
fisttps
sub
push
pop
push
mov
cmp
xchg
lret
sbb
aad
shlb
xchg
in
test
fsubs
into
mov
push
outsl
shlb
in
xor
cmc
daa
fidivrs
sbb
les
faddl
mov
lock
and
push
push
imul
jecxz
in
xchg
ret
xchg
sub
loopne
out
leave
mov
fwait
push
sti
and
adc
sti
pop
push
push
nop
or
lea
gs
fwait
sbb
dec
imul
icebp
pop
not
movsb
add
adc
pop
or
ret
inc
rcl
xor
aam
dec
sub
pop
icebp
fwait
mov
pop
adc
cmp
sub
in
mov
dec
cmc
mov
mov
jmp
add
pop
lods
xchg
or
and
std
das
jo
push
ljmp
xchg
adc
lock
pusha
mov
ss
repnz
cmp
bound
test
mov
push
mov
stos
scas
adc
pop
push
inc
sub
sbb
mov
mov
or
push
adc
sbb
outsl
sub
outsb
adc
cmc
pop
jmp
adc
or
mov
xchg
cwtl
or
cmp
xchg
lock
pop
fdivrs
lret
adc
jmp
mov
add
ja
adc
out
repz
shlb
cmp
test
pop
in
les
sbb
je
inc
push
test
lcall
aam
adc
lea
ret
adc
mov
cld
pop
xchg
adc
or
shlb
mov
loop
int
xor
ja
cmp
lea
js
in
insb
fwait
mov
adc
xchg
popa
loope
fcompl
pop
inc
add
mov
jmp
das
cld
inc
mov
roll
sub
sbb
cs
hlt
mov
stc
mov
push
jecxz
xor
inc
andl
sub
pop
insb
out
mov
inc
cmp
inc
jmp
mov
pop
mov
pop
pushf
and
add
addr16
xchg
outsb
sub
push
cmpsb
movsb
fnstenv
adc
inc
adc
das
cmp
adc
mov
lods
mov
daa
pop
push
dec
nop
lods
mov
shrb
xor
push
cmp
pcmpgtb
popf
movsl
in
fimuls
push
jmp
ret
sub
test
adc
mov
sti
outsl
pop
mov
pop
cmpsb
push
sbb
ret
fs
call
xchg
xchg
sbb
push
xchg
cmp
mov
mov
inc
mov
aam
movsl
jecxz
mov
adc
in
xchg
mov
jge
mov
cwtl
ja
sub
xchg
jg
bound
and
mov
add
repz
data16
scas
stc
inc
loopne
pop
test
fbstp
popl
adc
loope
mov
pop
pop
cmp
sub
jecxz
test
cmp
pop
imul
pop
mov
mov
jb
mov
mov
lret
or
ss
movsw
jae
inc
cmp
in
ss
and
push
jo
mov
dec
ret
mov
cmp
dec
xor
xchg
inc
lods
and
and
loop
mov
inc
jmp
stos
iret
lods
shll
mov
cmpsb
xlat
mov
sub
lret
addl
xor
inc
inc
sub
ljmp
lods
out
in
mov
push
add
xchg
sub
dec
sarb
test
loope
mov
jno
js
lret
jbe
in
adc
into
xor
lret
pop
leave
cld
adc
xchg
mov
fistps
fstsw
ljmp
mov
pop
sarb
shll
int3
xor
es
jae
xchg
xchg
jo
pop
les
adc
sub
mov
test
adc
adc
aam
push
sub
sub
bound
and
std
mov
movsb
mov
inc
rcll
inc
pushf
sahf
inc
dec
out
dec
mov
notb
subb
adc
lock
out
shlb
clc
adc
mov
roll
int
js
dec
lds
mov
xor
xor
mov
or
rclb
lods
arpl
into
xchg
pop
in
jmp
icebp
leave
or
notb
xor
scas
sub
push
mov
mov
adc
jbe
push
adc
hlt
idivb
jge
repnz
out
pop
dec
xlat
jmp
lret
pop
test
xchg
push
orl
xor
xchg
add
or
pushf
sti
hlt
push
xorl
div
inc
iret
adc
scas
dec
mov
bound
mov
or
movsl
hlt
pop
xchg
jle
aam
sbb
das
sub
xlat
mov
sarb
and
inc
push
jb
mov
out
dec
cwtl
in
mov
outsb
out
xor
xor
loopne
xor
push
pusha
sub
gs
mov
push
stos
xor
or
jns
daa
and
push
sbb
sbb
jb
mov
arpl
and
lea
adc
insb
clc
and
sbb
cs
jne
insb
test
lock
adc
and
fstpt
sub
sti
out
arpl
sub
xor
add
es
add
test
movsb
shlb
xchg
test
shrl
out
fdivrl
dec
cli
jp
and
pop
test
push
ret
sub
cs
bswap
repnz
push
hlt
in
test
xchg
sub
add
xor
repz
fmull
cmp
ljmp
fistl
pushf
test
stc
xor
xchg
mov
mov
jbe
rcrb
jns
push
decl
xchg
rcr
push
mov
movsb
jne
or
cltd
cmc
sbb
lods
std
out
daa
int3
testb
inc
xor
shrl
mov
xor
cmp
or
mov
bound
adc
pop
jmp
sub
pop
cltd
add
lods
lods
test
insb
pushf
cmp
ret
lock
mov
dec
stos
or
dec
scas
pop
sub
push
dec
lods
ja
fwait
push
cwtl
adc
jbe
xorl
mov
addr16
dec
loopne
leave
mov
xrelease
dec
xchg
cwtl
lcall
mov
mov
mov
inc
pop
fld1
das
sub
jbe
les
int3
cwtl
xchg
adc
mov
fs
stc
xchg
add
xor
dec
mov
sub
les
gs
mov
adc
out
imul
mov
mov
push
and
mov
mov
outsb
xchg
mov
mov
xlat
jge
in
mov
gs
leave
cmp
addr16
or
mov
mov
mov
jbe
fdiv
mov
pusha
adc
cld
push
adc
movsb
repz
out
mov
sbb
cli
movsl
inc
fdivs
lods
mov
popf
decl
rcl
push
cmc
jns
sbb
or
mov
cwtl
pop
ja
in
repnz
mov
mov
push
jp
mov
mov
rcl
lahf
aaa
xchg
rcrb
repnz
mov
aad
or
std
xor
inc
pop
add
dec
push
and
mov
inc
ljmp
inc
xchg
xor
loop
push
inc
nop
jg
mov
js
rorb
pop
pop
xchg
xor
in
dec
rcl
fistl
aad
hlt
jbe
xchg
dec
pop
push
mov
adc
shufps
xor
cmp
cmp
mov
dec
xchg
sbb
mov
shll
adc
sar
jl
inc
xchg
inc
cmp
sbb
pushf
or
or
push
int
mov
sbb
mov
hlt
test
sti
xchg
jg
jg
lds
je
or
js
xor
lahf
repz
xchg
les
inc
lahf
inc
mov
dec
dec
push
mov
sub
dec
stos
outsb
hlt
outsl
incb
ds
mov
pop
test
cmc
mov
loope
outsl
adc
xchg
popa
push
fists
ficoml
cmp
jb
inc
int
mov
mov
addl
pop
mov
icebp
stos
inc
je
imul
mov
xchg
pop
test
xchg
cmp
mov
out
or
negb
or
xchg
mov
cltd
push
adc
bswap
scas
mov
xchg
sub
subb
adc
leave
lods
lahf
inc
pop
mov
es
test
sbb
cmpsl
icebp
insl
add
int
aad
sbb
pop
jmp
outsb
jmp
test
in
lea
pop
aad
stos
push
ret
sub
xor
fistl
jns
xchg
popf
inc
into
mov
lods
push
psllw
mov
push
mov
xor
and
fwait
in
pop
popf
mov
imul
jl
xor
and
pop
int
out
arpl
pop
xor
xchg
in
dec
add
decb
iret
xchg
idivb
push
inc
das
les
add
div
cmp
pop
jge
pop
dec
daa
adcb
stos
jl
xchg
jne
ljmp
or
repnz
lea
arpl
xchg
and
addr16
inc
es
lock
cmp
rorb
sub
into
jecxz
iret
arpl
mov
or
insl
cltd
sbb
icebp
xor
push
pushf
sub
mov
rcrb
push
imul
mov
sti
lods
xor
dec
or
jecxz
mov
rorl
add
icebp
pushf
lock
shrb
repnz
jnp
push
push
ljmp
sahf
cmpsl
push
andl
mov
sub
xchg
nop
repz
lods
lock
mov
jne
adc
cli
adc
mov
out
mov
mov
test
pop
jb
cwtl
les
imul
xor
enter
add
sbb
mov
pusha
inc
and
cwtl
dec
mull
orl
iret
xlat
bound
xchg
pop
out
and
add
and
add
dec
sahf
mov
or
or
popa
and
lret
sbb
enter
imul
ds
sarl
nop
addl
pop
int
jge
push
jl
dec
and
mov
mov
jg
in
sarl
jp
cmp
mov
fiaddl
repz
iret
mov
int
lods
movsb
fwait
mov
inc
rcll
dec
hlt
dec
dec
mov
mov
in
lock
jmp
fildl
adc
sub
call
arpl
pop
push
xor
daa
daa
inc
aam
mov
xor
cmp
xor
daa
jnp
inc
pushf
std
dec
jge
add
adc
pop
xchg
mov
xor
pop
frstor
lods
and
xor
xchg
out
dec
imul
rcr
rclb
into
cmc
sbb
insl
in
xchg
data16
das
les
jp
lods
and
mov
inc
cs
in
and
sub
je
adc
xacquire
data16
sub
icebp
ss
adc
dec
xchg
xchg
shl
inc
nop
outsb
xor
push
cmp
scas
xchg
cmp
daa
loope
daa
aas
sub
and
add
xor
xchg
or
in
push
popf
xchg
lock
lret
cmp
xchg
mov
popa
insl
pushf
xor
push
je
ret
dec
mov
insl
jb
sub
pop
inc
cmc
mov
test
push
movl
or
daa
and
push
push
sub
jbe
and
int
mov
mov
js
sub
jbe
sbb
les
push
push
insb
push
pop
das
jns
bound
popf
stc
adc
std
mov
dec
xchg
data16
call
pop
scas
pop
xchg
fiaddl
inc
xor
or
sbb
push
aad
popfw
sarl
les
cmp
call
adc
pop
gs
cmpsb
jle
std
dec
std
notb
dec
jmp
clc
lret
pop
ret
cwtl
stos
gs
push
or
push
pop
addr16
icebp
xchg
testl
push
ds
xor
pop
sub
fldenv
pushf
je
cmc
mov
jp
rclb
or
dec
lret
dec
mov
fcmovnbe
cwtl
push
dec
push
dec
loope
xor
add
cwtl
adc
push
xchg
pusha
dec
ljmp
sar
and
cld
push
jg
js
les
or
push
insl
hlt
pop
nop
xchg
xor
adcb
and
nop
lahf
test
mov
or
insb
js
mov
sub
ret
lea
mov
or
rcl
inc
sbb
dec
fldt
fldenv
imul
les
vunpckhps
in
popf
hlt
cld
arpl
cmp
cmp
ljmp
outsb
test
xchg
std
pop
cmpb
or
inc
repz
mov
jne
mov
adc
mov
inc
shll
mov
loope
pop
lods
cli
loope
call
and
paddq
cmp
mov
inc
push
mov
sbb
fcomi
shll
dec
inc
out
mov
sbb
mov
xchg
mov
cmp
mov
in
lret
loope
insl
sbb
dec
and
fs
adc
iret
popa
sbb
enter
repz
inc
frstor
pop
jae
ret
loopne
in
xor
lds
cmp
push
xchg
popa
jae
mov
test
or
je
add
sarb
sahf
mov
xchg
xor
cmp
and
xor
imul
insl
add
fwait
mov
jecxz
daa
and
dec
loopne,pn
movsl
or
fdivrl
fwait
idivb
jnp
imul
xchg
in
out
lods
or
decl
cltd
mov
jle
push
loop
ss
xchg
pushf
loopne
sti
je
mov
je
daa
dec
jno
std
icebp
ret
lods
lahf
cs
divl
push
pop
repz
out
xchg
out
xor
inc
add
sub
jnp
mov
inc
dec
jnp
and
cmp
jne
xor
roll
adc
stos
out
out
xchg
lods
out
out
jge
inc
sub
int3
dec
ret
pop
mov
pop
inc
addb
mov
mov
aas
fimuls
outsl
popf
inc
jecxz
and
mov
jo
mov
sbb
sahf
das
scas
pop
add
icebp
xchg
push
sub
push
shll
and
push
mov
push
mov
insl
xor
cmp
out
pop
clc
xor
inc
push
shlb
bound
xchg
mov
pop
add
scas
aam
test
imul
insl
popf
hlt
es
data16
data16
mov
shrl
shll
leave
and
outsl
dec
add
add
mov
lahf
in
arpl
mov
scas
call
dec
lods
shr
nop
loop
dec
add
movsb
sbb
ds
and
outsl
xor
add
sub
sarb
aam
mov
xor
ds
jle
xor
xchg
insb
pop
test
mov
stos
xchg
jbe
out
xor
mov
sbbb
mov
repnz
pop
stos
inc
stc
fisttpll
into
inc
jp
dec
outsb
mov
mov
lahf
fbld
jge
cmp
and
addl
xor
xchg
jne
adc
xchg
dec
fwait
into
ret
call
ljmp
xchg
imul
in
subl
scas
push
mov
popa
ljmp
sbb
cmpsl
out
faddl
add
mov
inc
aad
addb
add
pop
push
mov
lahf
scas
dec
leave
jb
stos
repz
xor
movsl
outsl
shrb
lea
jne
mov
into
test
cmp
adc
mov
ret
stc
push
lret
sbb
xchg
cmp
jl
sub
push
leave
shrb
mov
pusha
das
jae
push
int3
xchg
mov
cld
mov
fs
pop
or
leave
or
inc
xchg
scas
jo
sbb
fadds
xlat
mov
inc
jmp
outsb
pop
xor
or
addr16
out
loope
stos
inc
dec
test
int
loopne
mov
fstps
cltd
mov
js
repz
mov
movsl
mov
pop
dec
stos
outsl
arpl
sahf
movsb
pop
adc
stc
data16
lock
lods
mov
jg
pop
test
adc
or
in
pushf
push
sbb
jmp
ljmp
pushf
insl
sbb
gs
sub
jp
sub
sbb
stos
adc
pop
mov
and
push
jmp
mov
cmp
subw
sbb
cld
out
lahf
xchg
sbb
aad
fdiv
inc
xchg
sbb
iret
pop
sti
jmp
dec
cmp
mov
cmc
adc
enter
mov
test
dec
sbb
inc
mov
nop
enter
lea
movsb
mov
test
jecxz
adc
pop
shl
shlb
int
xchg
mov
gs
inc
or
mov
jmp
bound
jno
xor
adc
adc
shll
das
in
pushf
sarb
push
cmpsl
adcb
lods
mov
mov
pop
pop
fists
aad
jmp
inc
xor
inc
dec
lcall
pop
pop
inc
dec
outsl
in
mov
out
movaps
xchg
mov
push
enter
lahf
mov
filds
or
out
push
xor
push
mov
jge
and
mov
imull
push
js
add
imul
decl
cmp
or
call
lcall
mov
and
cmp
jbe
test
data16
aas
cmc
addb
inc
cmp
fisubrl
and
int3
jnp
mov
pop
cmpsl
inc
pop
cmp
and
and
push
test
mov
mov
jecxz
aas
pop
lahf
out
pop
lds
jg
adc
data16
jg
cmp
xlat
fldcw
out
fistpl
xchg
xchg
dec
ror
pusha
enter
push
dec
sti
pop
pop
pop
addr16
xrelease
mov
daa
pop
loop
imul
arpl
repnz
icebp
mov
add
xor
jbe
aas
xchg
push
xor
cmp
jne
fcomps
cld
data16
xor
rcrl
push
aam
xchg
shlb
xor
ret
sbb
fs
mov
daa
and
xor
add
scas
sar
xchg
roll
or
insl
lea
and
jb
xorl
inc
mov
sub
fsts
fsubl
jmp
aas
push
mov
aad
pop
add
nop
pop
stos
int
sub
sub
adc
jle
xor
hlt
lret
jle
mov
repnz
pop
xchg
cmpsb
adc
or
addr16
hlt
sbb
bound
popf
lods
out
and
cbtw
sbb
dec
push
outsb
jmp
insb
loop
jge
repnz
lret
les
fdivr
cmp
test
movsl
cmpsl
push
xchg
aaa
xlat
and
and
in
jbe
jmp
fsts
arpl
lahf
xchg
jle
lahf
cwtl
mov
cmp
pusha
mulb
or
push
xchg
pop
mov
mov
pop
jecxz
adc
hlt
pop
dec
cld
adc
push
cmp
fnsave
jle
pusha
fnsave
mov
test
out
lods
add
push
sub
push
sti
sub
jmp
push
push
mov
sub
jmp
cmp
sbb
mov
clc
pop
jl
xor
js
cmpsl
push
sbb
sbbb
mov
pop
mov
pop
push
jge
cmp
sub
notl
add
sub
mov
shr
aam
jle
jge
popf
mov
loop
es
cld
loopne
inc
js
xchg
mov
mov
xor
aas
fmuls
into
lods
aad
ret
in
jp
push
fildll
filds
fiadds
lods
add
dec
out
and
addr16
insb
xor
pusha
mov
adc
test
add
or
popa
xor
mov
inc
aas
push
mov
dec
fbstp
mov
pop
hlt
shlb
pop
out
pop
xor
cmc
into
lods
xor
or
xorb
sbbl
xchg
jne
adc
test
mov
pop
push
cwtl
fnstenv
xor
repnz
mov
les
lret
addr16
clc
cli
cmc
in
sbb
cmovg
inc
pushf
or
or
jle
out
or
xor
int
pop
in
xlat
scas
cmpsb
adcb
sub
stos
test
mov
cmp
in
add
subb
xor
ret
push
js
xchg
or
pop
mov
fdivr
cmp
xchg
cwtl
pushf
push
mov
pop
mov
lret
popf
loope
mov
insb
lret
dec
mov
leave
jns
push
stc
or
ss
and
mov
sub
mov
push
jge
sub
sti
mov
mov
repz
mov
adc
xchg
mov
mov
push
ss
dec
mov
pop
or
jp
pushf
outsb
mov
jge
jle
rcr
cmp
adcb
sub
insl
shll
pusha
mov
inc
pop
xor
jecxz
fcompl
lcall
inc
jbe
insl
bound
xchg
xchg
ficoml
mov
cli
stos
sub
sti
sub
push
aas
imul
in
sbb
andl
jle
hlt
call
sbb
popa
pop
call
jo
inc
cmp
mov
insl
dec
sbb
in
jle
mov
fidivl
push
push
cltd
ja
jecxz
fiaddl
sar
xchg
mov
xor
inc
in
test
and
or
call
jne
jne
das
test
arpl
sub
jmp
jmp
std
cmpsl
sahf
cmp
jecxz
test
xor
xor
out
and
jmp
mov
cmp
sub
arpl
and
adc
test
pop
daa
jne
test
loopne
jp,pt
mov
scas
sbb
cmp
jp
mov
push
loop
jmp
and
sub
xlat
xchg
sbb
jne
popf
mov
sbb
jmp
lds
push
in
xor
sbb
outsb
xlat
addr16
cld
dec
xor
dec
and
xchg
mov
adc
stc
sbb
faddl
and
fcoml
mov
jo
push
pop
mov
inc
enter
loopne
rcrl
cmp
mov
mov
jmp
out
adc
rcl
mov
cmp
nopl
mov
cs
jo
mov
cmc
or
fs
xchg
jecxz
push
mov
xchg
out
jb
cmpsb
inc
and
inc
sub
lcall
push
mov
push
divb
test
into
cmp
gs
bound
imul
aad
or
pop
clc
push
pushl
mov
sahf
into
jne
sahf
push
aas
dec
ret
repz
lds
pop
arpl
adc
inc
mov
gs
push
insb
clc
lcall
xchg
mov
int3
sti
test
jne
aaa
add
mov
xchg
daa
mov
push
mov
push
gs
jbe
mov
mov
pop
jo
jp
push
icebp
fcomi
and
lcall
pop
jbe
jns
inc
inc
cltd
rcll
loopne
loopne
dec
pop
bound
subl
cld
jb
mov
or
ret
call
dec
jge
xlat
cmpsb
push
jae
outsb
mov
xchg
mov
frstor
or
adc
movsb
cmp
sub
test
sar
int
and
jmp
inc
fnsave
inc
rorb
outsb
cld
mov
mov
in
push
dec
dec
lret
adc
cmp
fcmove
es
lret
inc
int
lock
mul
dec
scas
push
xchg
inc
sbb
call
jl
loope
pushf
cltd
loopne
orb
stc
jns
pop
loope
or
ficoms
dec
lods
or
jg
xor
cmp
lahf
pop
and
ficomps
mov
pop
or
mov
dec
cmp
push
leave
push
aas
sub
pop
test
add
mov
mov
lds
sub
pop
adc
stos
cmp
push
sub
gs
mov
insb
vpcmpeqd
cmp
sbb
mov
cmp
rorl
sti
movl
mov
or
pop
and
movsb
sub
add
div
das
mov
or
pop
das
repnz
jne
ss
jp
or
add
pop
or
pop
or
or
push
daa
jmp
fisubl
ss
mov
push
and
int
xorl
fistpll
and
test
add
adc
imul
mov
pop
mov
pop
std
fwait
mov
cmp
xchg
and
sahf
cltd
in
test
test
push
inc
insl
jae
dec
dec
fldcw
sbb
or
or
stos
call
push
loop
push
add
sbb
sbb
push
and
push
and
pop
adc
ficomps
in
or
jmp
inc
jge
mov
dec
insb
addb
aad
mov
out
mov
incb
popf
mov
pop
data16
mov
cmpsl
daa
xchg
or
out
in
xor
push
mov
out
and
pop
inc
dec
and
dec
repnz
xor
nop
adc
xchg
sub
adc
adc
mov
ss
das
addr16
je
jns
pop
mov
gs
adc
les
cmpsb
mov
push
in
shll
inc
out
je
fadd
jns
nop
out
bound
inc
fisubrs
repz
scas
mov
jnp
pop
test
lds
xlat
mov
cmpsb
outsb
cmp
clc
sti
pop
push
xor
cmp
fldenv
test
pushf
or
in
out
add
adc
inc
adc
xchg
jecxz
push
jno
adc
or
dec
sarl
sarl
sbb
jno
adc
add
push
xchg
in
test
lds
adc
push
mov
jno
sub
movsl
dec
test
loopne
xchg
je
movzwl
adc
pop
mov
jbe
adc
adc
loope
xor
cmp
push
ret
fsubr
mov
push
arpl
int
and
int
xor
pop
add
adc
add
mov
ds
cli
movsb
icebp
loop
pop
iret
data16
dec
fwait
inc
xor
dec
mov
lcall
xchg
mov
or
jno
sbb
out
and
mov
dec
inc
stos
xor
arpl
mov
pop
stos
pop
jae
into
aad
sti
or
jecxz
cmc
mov
push
dec
mov
mov
ret
jno
sub
mov
fbstp
test
cwtl
outsl
cmpsb
lret
out
popa
aam
cmp
adc
dec
xor
add
cltd
xchg
cwtl
clc
mov
push
push
int
sbb
arpl
sub
lcall
and
les
popf
push
into
filds
cld
pop
adc
mov
adcb
outsb
daa
mov
out
repz
mov
daa
pop
fnsave
dec
out
lods
and
lea
and
fcomi
fildl
cmp
mov
std
in
push
pop
push
mov
cmp
sub
les
pop
xor
pop
out
lcall
jns
add
dec
fnstenv
loop
sbb
es
shld
stc
sarb
mov
pop
mov
arpl
mov
loop
mov
or
in
les
movsl
mov
add
sar
push
repz
stc
movb
std
in
in
stos
mov
jae
mov
mov
sbb
xor
sahf
and
aas
cmp
mov
sub
ret
movb
fsin
and
das
lret
sar
jbe
and
inc
add
loope
pop
call
fiadds
repnz
movsl
and
lods
leave
mov
out
out
into
fcmove
cmp
lods
push
fadd
loopne
pslld
shll
dec
shl
and
push
div
test
ja
xchg
inc
cmp
scas
call
out
pop
fisttps
inc
inc
popl
cmp
pusha
addb
fldcw
mov
mov
int3
mov
into
xor
and
dec
outsl
mov
or
dec
pop
mov
mov
xor
out
cltd
xchg
jmp
and
and
insl
out
push
test
mov
mov
mov
mov
ficoml
or
test
das
cs
shrb
fcmovnbe
into
cltd
fnstcw
lret
or
ret
sbb
inc
gs
mov
stos
add
xchg
adc
push
enter
or
int
in
in
loop
xchg
lea
inc
mov
test
popa
xchg
dec
jp
jle
addr16
cli
out
shrb
jo
nop
test
aas
cmp
loope
das
sarl
sub
ss
inc
jns
add
jb
and
mov
enter
jmp
in
insl
pop
addl
scas
dec
pushf
push
mov
lahf
fstps
fstps
xchg
das
daa
mull
mov
fmul
clc
imul
in
leave
ror
outsl
dec
push
mov
fld
xlat
pop
lods
push
out
ret
sub
icebp
mov
push
mov
into
ret
dec
repnz
inc
mov
insl
jns
push
xlat
pop
push
popa
cmpsl
clc
lahf
mov
and
jo
pop
push
sbb
js
stos
loop
cwtl
outsb
js
jecxz,pt
ss
lods
xchg
cmpsb
addr16
addr16
push
ret
loop
lret
xor
roll
push
stos
jge
push
xor
loope
xchg
cmp
xlat
subw
jecxz
or
push
sbb
jb
aas
jno
sbb
adc
cmp
ret
mov
in
iret
adc
scas
fcomps
fadd
repnz
dec
inc
movsl
xchg
movsb
jo
leave
xor
shlb
arpl
cmp
out
or
out
jo
cwtl
mov
lea
push
cmp
mov
sbb
push
pop
cmc
dec
int3
or
pop
jp
loope
loope
push
mov
sbb
mov
sub
fs
inc
pop
aaa
movsb
cmp
shlb
lock
cmp
movsl
lcall
shlb
in
cs
andl
xchg
sti
leave
xchg
pop
cmp
clc
into
pop
ret
shl
sbb
int3
pop
jo
mov
rorl
test
sub
mov
or
rcrb
sbb
test
inc
ss
mov
lods
jmp
cld
push
das
fldenv
jle
popa
cmc
stos
bound
add
loop
mov
mov
or
jmp
xor
pop
and
cmpsl
fs
pop
or
mov
je
inc
andb
mov
lret
gs
imul
sti
pop
mov
xlat
jmp
mov
mov
or
sbb
pop
and
arpl
push
scas
stos
cs
jns
mov
out
xchg
xchg
xchg
push
addb
js
cmp
mov
test
push
push
sub
inc
mov
dec
mov
in
lahf
push
ficoml
pop
std
pop
lcall
pop
or
fs
push
adc
dec
cmp
gs
or
xchg
nop
xchg
dec
cs
mov
push
sub
jns
push
lods
jl
mov
push
mov
sub
or
mov
mov
aad
insb
add
test
cmp
pop
aam
shrl
cmp
pop
xchg
pushf
pop
nop
and
stos
push
mov
mov
sub
xor
daa
int3
ret
cmp
in
cli
sbb
cmpb
jns
bound
add
sarl
ds
sub
sub
add
push
xchg
popf
push
cmp
test
push
shrl
scas
sarb
clc
in
mov
cld
sbb
xchg
jne
mov
or
pop
xchg
bound
sbb
mov
mov
sbb
mov
push
push
mov
cmc
adc
adc
shrb
adc
outsl
subl
cmp
jg
cmc
xchg
sarb
push
push
xor
jae
je
mov
icebp
xchg
pop
movsb
sbb
mov
fwait
cmp
mov
mov
xchg
lods
dec
lret
loop
inc
cwtl
inc
lret
xchg
mov
jle
shrb
mov
test
push
inc
mov
pop
mov
add
push
xchg
daa
add
xor
or
decb
call
fsubr
stos
sbb
js
ficompl
loope
xchg
inc
popf
shlb
cmp
xchg
sti
mov
cmpsl
leave
js
es
or
pop
add
lret
mov
pop
scas
jle
ret
rsm
push
dec
add
dec
in
push
sti
jbe
sub
xor
or
fs
ret
jae
add
and
lret
lahf
jbe
mov
xlat
mov
lds
pop
sub
repz
stos
daa
inc
in
pop
outsb
aad
mov
aad
insb
jg
fstpl
pop
cmpl
enter
pushf
or
aam
mov
cmp
lret
sub
scas
push
add
jge
sbb
test
push
jp
dec
cli
adc
xor
fwait
rol
push
out
popf
and
xchg
push
stos
dec
adc
cmp
or
aad
stos
int
push
test
das
add
test
sbb
pop
adc
add
insb
je
xchg
xchg
fimull
xchg
aam
aaa
roll
mov
jo
jne
xchg
ret
cmpsb
pop
pop
sbb
imul
cmpsl
mov
xchg
daa
add
push
push
lods
aam
or
inc
popf
inc
aad
out
jp
fs
mov
iret
imul
jno
out
insb
jbe
xchg
xchg
add
and
cs
rorl
xchg
push
pop
inc
data16
inc
sub
push
lds
insb
cmp
jae
bound
testl
mov
lret
dec
xchg
lcall
fiadds
lds
xor
dec
call
sub
fs
or
xchg
lods
mov
insl
adc
shrb
les
sub
lahf
jl
sub
lods
dec
xchg
dec
sub
clc
jne
xchg
push
adc
shl
call
dec
popa
arpl
pop
dec
cmpsl
xchg
adc
sbb
and
cmpsb
lds
ss
loopne
sub
test
xor
or
roll
and
adc
mov
mov
stc
adc
rol
sub
loope
stc
jmp
inc
cli
fldenv
stos
sub
leave
subl
jo
jno
push
fcomp
cmp
iret
mov
add
int3
xlat
mov
push
sarl
sbb
lea
aad
add
add
rolb
cmp
sarb
loopne
out
pushf
test
imulb
out
in
imul
ds
mov
sbb
or
out
push
fs
fwait
lcall
mov
xchg
jb
in
mov
adc
push
dec
daa
js
pop
incl
data16
icebp
pop
and
mov
xchg
sub
pop
xchg
pop
bnd
shlb
adc
pushf
push
into
imul
fdivrs
dec
jae
aas
pop
aaa
loopne
mov
mov
mov
ljmp
mov
inc
dec
pop
fnstsw
sbb
pop
pop
aaa
sarb
jnp
or
leave
mov
imull
mov
pop
notb
fildll
pop
jnp
dec
dec
lds
cmc
shrb
aas
out
popa
dec
lock
outsl
data16
movsl
and
movsb
mov
cli
dec
pop
or
mov
mov
pop
sub
pop
int
mov
mov
mov
movsb
push
adc
push
mov
dec
lods
testb
or
xchg
pop
insl
add
xorl
mov
push
xchg
pop
jae
idivb
fidivrs
hlt
loope
pop
out
ret
adc
mov
rclb
hlt
loope
pop
lret
pop
addr16
dec
adc
lcall
jo
stc
push
hlt
xchg
and
dec
adc
shr
adcb
adc
fsubl
lahf
mov
cmp
enter
rcl
xor
cwtl
mov
icebp
das
adc
scas
mov
jp
out
lods
shll
shrl
lods
xchg
lahf
add
jns
insl
cmpsb
xchg
xor
xor
push
xor
mov
scas
and
mov
xchg
bound
adc
je
mov
loop
inc
aad
dec
or
or
pop
adc
adc
dec
fsubrs
fwait
ljmp
ror
stos
lods
xor
pop
jae
push
mov
cmp
stc
or
push
popa
mov
mov
dec
mov
mov
xor
test
inc
out
cwtl
pop
or
scas
cmp
cmc
pop
das
punpckhdq
sub
loopne
add
je
pop
push
inc
inc
adc
rol
daa
mov
sbb
and
push
in
outsb
ret
lods
dec
pop
cmp
cmp
cmp
pop
cltd
es
sub
les
shll
jp
iret
sbbl
sarl
ljmp
jno
inc
ret
dec
fisttpll
data16
adc
add
cmpsb
jge
adc
mov
sbb
dec
iret
sbb
inc
mov
jb
sarb
pop
leave
add
roll
lret
enter
inc
loope
rclb
sbb
lods
fidivrs
outsb
jp
cmp
pop
push
std
push
jnp
adc
pop
inc
mov
cmp
xchg
dec
outsb
jmp
pop
in
fnstenv
xchg
push
push
into
insb
and
cli
jp
push
lret
inc
in
or
mov
scas
lret
inc
fadd
mov
insb
fldl
out
out
jnp
jbe
es
push
loop
cmp
popf
shrb
or
lods
ss
fdivs
test
int
imul
fmull
push
inc
pop
add
cli
or
xor
pop
jno
pop
jb
les
sub
inc
xchg
pop
lret
push
or
fimuls
lea
imul
dec
mov
xchg
je
div
and
xlat
pusha
lock
outsb
pop
lods
push
je
in
and
jnp
push
xorl
add
neg
cmp
lsl
mov
xor
xor
adcb
cs
xlat
sub
jb
jae
or
xor
fimull
cltd
xor
lea
or
pop
xor
pop
ja
pop
test
das
inc
imul
loop
dec
lret
ljmp
mov
sti
mov
popf
adc
push
adc
inc
mov
in
scas
fsubs
pop
or
cmpsl
sti
rorl
pushf
pushf
pop
sub
and
mov
jbe
dec
mov
aam
jns
push
in
jmp
adc
sub
push
mov
mov
inc
insb
cmp
push
fidivs
jg
insl
add
sbb
dec
stos
call
adc
loop
push
test
cmpsl
cmc
cltd
mov
mov
jae
ret
gs
cmp
mov
xchg
ficoml
je
icebp
push
nop
sub
cmpl
sbb
pop
insl
adc
in
dec
add
stos
js
lret
pop
mov
and
jae
adc
call
push
fwait
lods
mov
sub
mov
in
movb
or
mov
addr16
dec
dec
add
in
mov
fnsave
shr
pop
test
push
lcall
jnp
mov
inc
gs
or
lods
mov
lods
or
fs
push
xor
or
jge
dec
add
adc
xor
push
jg,pn
dec
mov
aas
popf
rcrb
sbb
mov
and
cmc
test
jge
scas
push
jno
jmp
and
rorl
fidivrs
inc
or
mov
cmp
push
icebp
sub
dec
movsl
aas
mov
mov
in
pop
scas
add
std
je
and
push
lock
sti
movsl
xchg
pop
divb
into
pop
lcall
mov
repnz
dec
jns
xor
js
mov
mov
fcomip
cli
in
js
xor
popl
lret
enter
sbb
mov
jbe
shlb
in
inc
lea
sub
shlb
cmp
mov
jnp
dec
icebp
jbe
mov
mov
nop
ds
xor
jae
fcoms
sub
jl
addr16
subps
sbbl
jne
aas
sbb
xlat
loop
test
data16
sub
pop
jbe
movsb
adc
je
push
addr16
pop
dec
ds
push
or
shl
mov
adc
cmp
icebp
mov
mov
mov
pop
jo
pop
mov
lock
lods
mov
mov
inc
lods
mov
add
data16
lcall
adc
and
es
lahf
scas
fnstenv
pop
mov
insl
popf
adc
push
aaa
clc
sub
ljmp
daa
ja
cmpsl
test
push
stos
popf
mov
test
mov
add
inc
or
inc
jne
jge
ret
sbb
or
out
push
in
lret
mov
xchg
scas
jns
mov
pop
ret
aam
cmpsb
mov
inc
lahf
sbbb
mov
pop
rcl
in
rolb
xchg
jo
sbb
or
or
mov
add
rolb
cmp
movsb
lcall
lea
jne
adc
cld
add
push
mov
int3
insb
test
jbe
dec
iret
out
shlb
mov
mov
scas
sub
ud1
fsub
mov
test
sub
cmp
pop
and
loop
insb
adc
adc
out
test
xchg
jnp
jno
mov
pushf
xchg
out
cli
xchg
js
jnp
leave
fistpll
scas
or
or
fs
mov
int
imul
cmp
cmp
mov
jnp
inc
pop
push
icebp
lcall
imul
xor
jbe
push
ret
or
orb
popa
es
and
or
inc
rclb
out
jmp
adc
in
jmp
mov
lods
inc
cli
lret
aas
cltd
repz
das
inc
sub
fisttpl
loopne
push
sub
rclb
pop
push
sbbl
dec
push
outsb
pop
sbb
or
fldcw
sub
and
mov
int3
and
jl
inc
and
mov
xchg
dec
mov
mov
push
lahf
mov
stos
push
push
pop
mov
sub
lahf
outsb
dec
dec
movsl
outsl
das
cltd
repnz
dec
incl
xchg
clc
push
sub
ds
dec
cmpsb
mov
pushf
adc
xchg
push
xor
outsl
dec
pop
inc
popf
push
in
std
pop
scas
outsl
mov
in
sub
cltd
int
dec
idivb
fmul
xchg
jbe
popf
stos
pop
jl
repnz
pop
sbb
decb
jnp
divb
loope
xor
adc
dec
std
rolb
push
jg
mov
jo
jb
lock
loop
mov
movsb
and
pop
jmp
jmp
sbb
lods
ss
adc
call
outsb
jle
jnp
test
push
stc
cwtl
shll
xor
adc
inc
inc
stc
cltd
jl
xor
mov
sarb
data16
cmc
icebp
push
les
xchg
xchg
or
sti
mov
adc
in
dec
jl
add
rcrb
movsl
push
lret
jns
lea
sub
jecxz
mov
dec
inc
mov
xchg
push
jo
mov
sbb
shll
mov
mov
pop
int
sub
mov
and
pop
sti
mull
sti
rorl
test
into
jg
push
pop
mov
lock
mov
push
sbb
mov
sbb
xlat
in
pop
fwait
pop
add
mov
jl
mov
aad
push
aaa
jnp
std
sbb
push
pop
out
stos
add
jae
pop
popf
jmp
out
jmp
xchg
or
cmp
cli
push
dec
fdivs
jb
stc
mov
cmpl
shll
fwait
push
pop
iret
inc
mov
sub
add
inc
lahf
test
leave
lds
outsl
dec
int
or
cmc
jle
loop
xor
sti
adc
adcl
mov
xor
leave
pop
inc
mov
imul
xor
out
and
jecxz
shlb
hlt
mov
lock
xor
xchg
xchg
lret
and
in
jbe
and
pop
idiv
xchg
std
aas
jg
dec
fildll
scas
dec
ljmp
bnd
xchg
push
loopne
rcl
imul
inc
mov
or
mulb
sub
aas
pop
jbe
push
je
inc
pop
push
sar
popa
sbb
pushf
xor
aam
and
add
xchg
in
jb
jle
in
adc
adc
sbb
xchg
adc
sbb
cs
cld
mov
insb
push
lcall
test
mov
inc
int3
sub
insb
pop
pop
push
xor
and
gs
xchg
popa
test
push
lret
icebp
pop
jns
mov
stos
out
mov
xor
adcb
push
scas
js
add
inc
jns
imul
aaa
arpl
pusha
inc
cmp
sub
pop
out
andl
cmp
xchg
lods
and
xchg
test
out
and
fcomi
jnp
decb
xchg
jns
adc
subl
das
adc
shlb
popa
push
nop
push
decb
divb
cmp
lea
pushw
add
inc
addr16
inc
push
in
aad
pop
aaa
adc
int
popf
outsl
frstor
sub
xor
cmp
fisubs
inc
and
in
popa
fadds
dec
dec
add
sbb
into
mov
iret
sarb
rorl
daa
jge
iret
lock
frndint
mov
addr16
adc
jne
in
inc
mov
cmp
adc
mov
mov
xchg
ds
rcll
and
call
test
in
mov
push
push
test
push
mov
in
xchg
movsl
test
dec
mov
and
loop
add
aaa
cli
mov
and
lods
fst
ss
roll
adc
clc
sub
scas
popf
inc
inc
sub
and
adc
pop
adc
inc
out
fisubrl
xor
xchg
jp
xchg
mov
pop
sbbl
push
adc
fmuls
adc
xchg
div
mov
add
in
pop
inc
and
pop
data16
pop
mov
pop
les
jb
lahf
xchg
or
jle
cltd
push
dec
sub
sub
into
push
push
adcb
in
cmpb
fidivs
mov
ret
lahf
xor
inc
scas
lods
mov
ds
dec
rcl
je
mov
addb
xlat
inc
sahf
bound
jg
dec
repnz
or
mov
test
imul
lock
imul
stos
pushf
movsl
mov
dec
inc
mov
or
dec
sub
mov
mov
cmc
mov
aam
xchg
cmp
mov
add
push
arpl
pop
dec
cmc
movsl
repz
push
in
dec
sbb
jb,pt
push
inc
xchg
in
xchg
add
inc
xor
dec
shr
mov
adc
imul
cmpsl
lds
nop
or
in
out
xor
loopne
decl
jecxz
push
scas
mov
outsl
outsl
pop
mov
ss
in
popf
nop
xchg
out
int
andb
dec
push
lcall
sbbb
xchg
sub
subb
out
xor
mov
or
sub
lds
data16
jle
nop
movsb
pusha
into
insb
mov
outsb
inc
sbb
cmpsl
fimuls
adcl
push
add
cs
stc
push
mov
faddl
sbb
xchg
mov
xor
aad
mov
jo
in
clc
dec
test
insl
stc
jnp
mov
or
hlt
int
mov
stos
jbe
xchg
int
cs
lock
cmp
lds
inc
push
fbstp
add
sahf
repz
sbb
push
in
es
shll
push
sbb
cmpsb
pop
mov
jne
out
mov
lcall
call
xor
adc
pop
sub
into
insb
add
sbb
mov
scas
leave
xlat
xchg
aam
std
addr16
aam
pushf
mov
and
icebp
fstpt
mov
jge
aas
lret
std
iret
test
pop
cwtl
lahf
jle
or
pop
adc
inc
adc
mov
and
out
pop
popa
add
pusha
cs
mov
scas
das
iret
pop
jmp
add
cmpsb
stos
mov
jle
es
test
add
cmp
call
imul
jo
rclb
icebp
pop
and
repnz
jb
insb
add
into
add
mov
loopne
nop
jl
mov
dec
arpl
bound
adc
xchg
lods
sbb
push
mov
jno
mov
sub
xchg
sbb
sbb
insb
cmp
mov
addr16
dec
rcrl
xchg
xchg
push
std
lahf
push
mov
and
in
mov
mov
jecxz
add
rcl
mov
inc
jb
dec
stc
jns
sub
mov
aam
roll
jo
push
imul
cmp
sub
sbb
jo
xchg
cmc
mov
outsl
bound
lock
flds
arpl
and
sub
out
xchg
mov
or
lock
add
insl
gs
inc
int
sub
jo
add
cltd
jns
pushf
mov
and
xchg
sbb
fsts
inc
int
sub
mov
inc
sub
add
xchg
sub
sub
jo
pop
xlat
iret
in
out
mov
mov
add
lods
out
cld
out
int
lahf
mov
and
and
xchg
jns
mov
push
dec
es
orb
lods
lock
rorb
fwait
dec
pop
repz
mov
mov
mov
dec
fists
es
iret
loopne
mov
nop
xchg
roll
ss
mov
cld
push
inc
insl
aaa
mov
sub
or
ja
into
adc
inc
hlt
idivb
mov
loope
cs
xchg
xchg
ljmp
cli
addb
dec
mov
mov
daa
inc
mov
rclb
cmpsb
fiaddl
xor
mov
in
sbb
call
pusha
into
add
jbe
mov
mov
jb
dec
pop
stc
outsl
ss
add
jecxz
arpl
andb
sub
inc
dec
not
cmpxchg
pop
add
pop
jne
imul
mov
mov
inc
mov
jmp
out
dec
and
loop
outsl
xor
in
into
mov
push
fs
call
sub
mov
shll
xchg
xor
ret
add
sbb
lret
lret
jne
push
fistps
fwait
sub
cwtl
pop
pop
push
call
aad
std
pop
push
hlt
data16
and
js
cmc
xchg
push
cmc
inc
adc
mov
in
pop
je
out
outsb
mov
mov
mov
inc
and
bsr
push
gs
pushf
add
rcrb
aam
inc
mov
sbb
mov
clc
int
fwait
pop
cmp
in
jno
idivl
sub
add
insl
scas
adc
sti
mov
jmp
jmp
jmp
fwait
pop
ror
les
orl
mov
loopne
xchg
out
pop
xor
pop
dec
mov
mov
les
pushf
xchg
test
mov
rcrl
dec
push
in
jg
in
test
es
or
mov
or
and
iret
cld
sbb
into
imul
lret
fs
push
push
mov
mov
cmpb
clc
stc
xchg
and
pop
mov
frstor
sti
push
mov
mov
andb
xchg
pop
int3
add
dec
mov
addb
and
loop
push
cmp
loopne
mov
cwtl
jns
sbb
xor
pop
sub
fsubs
adc
mov
mov
jmp
mov
imull
jmp
je
add
pop
xchg
mov
sbb
xor
lret
inc
dec
mov
loopne
mov
rcrl
mov
sbb
fstl
or
fcompl
cmpsb
mov
cmp
test
scas
jne
fstpl
mov
cli
and
mov
mov
adc
enter
mov
lahf
jae
incl
sub
xor
loopne
mov
sti
test
int3
int
mov
cs
sbb
mov
lds
rorl
out
imul
test
inc
sub
into
mov
fsts
incb
cmp
les
add
iret
int
mov
xor
mov
pop
ljmp
bnd
sbb
fadd
jp
push
movb
das
push
cmp
movsl
dec
popa
test
cmp
push
test
xchg
jmp
adc
jge
iret
cmpb
sbb
setl
sub
ret
push
cwtl
sahf
pop
sub
xchg
pop
dec
mov
pop
ljmp
sub
sbb
mov
call
cmp
push
dec
test
repnz
mov
clc
cltd
sbb
mov
sub
js
ds
sbb
test
add
in
arpl
insl
es
mov
outsb
or
in
cmpsl
cmp
mov
add
xchg
out
mov
inc
lock
jge
dec
fistpll
pop
scas
and
jns
scas
repnz
pop
dec
cltd
loopne
mov
test
lock
xorl
scas
mov
andb
adc
mov
enter
sarl
mov
test
mov
enter
pop
adc
mov
pop
int3
pop
test
pop
subb
cmp
cmc
in
or
sbb
jne
das
inc
pop
xlat
aad
ret
push
push
aad
movsb
or
inc
adc
add
push
ljmp
xchg
sahf
test
stc
mov
or
push
or
sbb
dec
and
imull
repz
fsubr
ljmp
push
mov
nop
aad
sti
les
addl
xchg
cmp
leave
stos
fstl
lret
add
insb
bnd
or
cmpsl
rcrb
lcall
movsl
std
es
cmp
adc
pushf
testl
xor
out
or
mov
std
gs
dec
jo
aaa
psubd
popa
int
xor
jnp
out
xchg
aad
mov
in
jl
rcl
xchg
sub
cmp
dec
inc
enter
xchg
xor
fsubr
outsb
lock
scas
and
sub
and
mov
cwtl
xchg
rolb
orl
imull
inc
ficoms
xchg
std
insb
jbe
sub
rcrl
or
xchg
sbb
push
lret
mov
ret
aam
lcall
aaa
add
ds
jecxz
pop
ss
or
nop
xor
stc
xchg
sarl
rcrl
and
call
sbb
popf
pop
outsl
movsb
jp
mov
movsl
push
jbe
xchg
les
push
inc
fadds
or
adc
mov
push
add
mov
or
fwait
aad
sti
mov
pop
cmp
ja
sarl
jp
ud1
ja
sti
adc
jl
mov
lret
mov
mov
daa
call
fsubs
jle
mov
pop
dec
out
add
mov
out
jmp
icebp
pop
xchg
sahf
or
mov
xor
add
push
lds
test
test
jb,pn
adcl
into
push
mov
movsl
pusha
xchg
in
scas
xchg
daa
mov
add
sahf
cmp
dec
into
sti
mov
stos
jg
lret
in
and
mov
inc
je
cmpsl
xor
xchg
cltd
or
movsb
aas
jg
xchg
test
and
cmpsb
aaa
or
iret
scas
sub
stc
sub
enter
add
scas
inc
jbe
scas
aaa
lcall
mov
push
jo
lcall
int3
adc
xchg
inc
test
mov
scas
dec
imul
mov
lods
fisubrl
bound
les
jmp
or
inc
shlb
cmp
fstpt
fwait
aas
ljmp
xchg
movsl
xchg
and
sub
adc
sbb
push
loope
cs
adc
inc
imul
lods
int3
mov
cld
loopne
test
pop
in
ja
sub
xchg
mov
xchg
mov
or
add
push
inc
and
or
or
sbb
enter
sbb
push
stos
cli
jo
addl
orb
mov
lret
cli
mov
pop
arpl
inc
jl
add
sub
clc
adc
sub
dec
and
in
lock
mov
mov
add
cmc
sahf
dec
cmp
xor
lods
mov
bound
push
mov
lea
or
adc
rcrl
adc
shrl
cmp
and
sub
in
outsl
mov
into
jmp
pop
hlt
outsl
cmp
push
pop
cmp
popa
jl
mov
jmp
fwait
push
dec
pop
cmp
or
mov
mov
std
lcall
mov
stc
mov
out
cmp
fcmovnb
cmp
stos
pop
add
pop
lret
popf
lret
mov
or
repnz
inc
jae
mov
sub
int3
or
cmp
es
or
and
outsb
loope
pop
arpl
in
push
loopne
cld
int
xor
fiaddl
pop
pop
lahf
push
mov
sub
hlt
decl
cmpsb
pop
orl
sbb
inc
jle
push
imul
adc
jl
lods
cs
loop
stos
out
xchg
dec
inc
sub
jno
push
inc
xchg
pushf
mov
push
loop
and
loope
leave
mov
cli
lret
jge
sbb
or
xchg
fildl
pushf
pop
mov
rcl
lret
les
inc
mov
test
dec
insb
les
loop
pushf
cmp
popa
or
and
test
or
mov
fs
inc
mov
popl
leave
and
sbb
out
or
mov
jns
out
test
rolb
ljmp
add
popf
and
mov
sbb
cmc
aaa
lods
xchg
cli
into
jg
xchg
scas
or
mov
adc
inc
mov
repnz
jnp
add
jne
push
subl
gs
xor
adc
mov
fwait
inc
mov
cmc
or
in
ficomps
subl
dec
adc
stos
pop
pop
insb
in
lds
mov
incb
pop
divl
push
mov
cmp
aas
inc
pusha
ljmp
jge
cli
push
xor
repnz
sub
pop
pushf
mov
aad
icebp
push
or
daa
fldt
and
enter
sbb
pop
push
cmp
or
in
push
fstl
arpl
xchg
pop
adc
rolb
jp
push
and
push
mov
ficomps
or
mov
and
mov
push
mov
out
jns
jmp
hlt
sub
fcmovu
or
leave
aam
push
mov
pop
dec
cmpl
inc
cltd
repnz
in
push
mov
shll
push
and
imul
loop
loopne
cwtl
sub
adc
fisubrl
cmp
pop
fiadds
insl
adc
sub
and
jl
push
inc
arpl
stos
or
mov
imul
lcall
or
adc
test
or
mov
sahf
clc
xchg
xchg
lret
xchg
call
cwtl
add
mov
xor
scas
repz
dec
mov
xchg
divl
or
jmp
xchg
or
cltd
pop
outsl
push
mov
mov
cs
test
mov
mov
cmpsb
rolb
outsl
imul
aam
xchg
je
inc
repz
ret
test
mov
out
jbe
popf
push
movsl
mov
jno
movsb
leave
mov
aam
mov
adc
outsb
outsb
jnp
loope
jge
xchg
ret
cmp
das
fisttpl
inc
jmp
cs
adc
push
out
cmp
sub
add
bound
mov
xor
imulb
mov
mov
push
adc
and
sbb
in
test
push
and
repnz
stos
adc
push
inc
addr16
je
in
ret
js
sar
pop
sub
jnp
das
lret
jl
mov
lods
int
enter
lahf
sbb
push
sub
or
mov
and
push
pop
aam
cmpsl
add
sbb
jp
mov
and
pop
stc
call
fldcw
shrb
adc
jne
loope
les
cmp
inc
push
lds
xlat
lods
xor
mov
adc
mov
iret
push
int
push
add
rolb
or
push
sub
fmull
std
test
add
addb
call
inc
scas
lock
dec
jge
es
ret
pusha
mov
cmp
pop
jp
inc
setp
sub
popa
sahf
mov
test
shlb
mov
push
fcmovu
jle
pop
out
sbb
xor
stos
adc
push
push
xchg
push
xchg
iret
rclb
das
std
xor
in
jb
sub
mov
dec
sub
pop
mov
sar
fs
gs
cmpsb
sub
aam
inc
and
dec
mov
dec
jecxz
iret
adc
pop
shl
cmp
inc
lret
push
int3
stc
or
pcmpgtb
gs
mov
jmp
jl
call
movsl
pop
cmp
orb
ja
test
insb
xor
adc
out
inc
iret
mov
push
fbstp
mov
pushfw
popf
sti
push
inc
ss
pop
mov
push
iret
push
rorb
jb
clc
jle
loop
fstpt
jo
hlt
leave
sbb
repnz
in
fistl
sbb
enter
jae
jg
popf
push
call
mov
xlat
hlt
andb
push
add
dec
pop
ret
cmp
fiadds
int3
sahf
xchg
xchg
popf
in
loopne
sbb
pop
dec
xchg
push
pop
sub
add
mov
xor
mov
cwtl
adc
pop
fisttpl
mov
cmp
daa
je
mov
add
mov
rcll
mov
cltd
pushf
dec
lcall
sub
aaa
dec
ret
mov
hlt
test
sub
sti
lock
iret
aas
cld
mov
or
xlat
add
pop
or
adc
pop
push
les
cmp
sarl
xor
iret
inc
test
xchg
lahf
dec
fbld
jl
mov
sahf
outsl
and
inc
and
mov
out
lret
std
mov
cmp
dec
fstl
adc
cli
fcoml
pop
mov
hlt
lret
push
or
popa
aam
into
and
and
in
dec
sti
sub
sbb
sbb
xchg
jg
sub
in
hlt
les
loope
xor
pop
mov
push
cmpb
cmp
push
shrl
in
mov
pop
je
inc
fdivp
test
dec
imul
pop
mov
ss
push
js
pop
add
sbb
and
jb
stos
mov
or
fsubrl
inc
loop
hlt
icebp
std
rcrb
sbb
insl
inc
shrb
jns
jl
loope
loop
cs
push
repz
mov
and
fwait
cwtl
dec
test
ss
and
xor
push
lock
adc
mov
mov
js
cmpb
xor
popf
pop
dec
sub
nop
lods
lcall
subb
in
ret
dec
push
cmp
lcall
adc
mov
fwait
push
arpl
andb
ret
iret
flds
dec
xchg
xlat
cmp
or
lods
sbb
inc
sub
inc
push
push
test
adc
insl
inc
xor
mov
mov
and
movsb
aas
or
adcl
repnz
dec
nop
fldcw
jge
fisttpl
popa
mov
out
les
dec
inc
out
notb
inc
adc
out
mov
mov
xor
fcoml
leave
shr
mov
mov
cmpb
xchg
lret
repz
popa
cltd
sbb
repz
adc
cmc
add
sahf
hlt
int3
mov
xor
push
pop
popa
les
mov
adc
pop
ficomps
ss
pop
lock
or
mov
mov
add
inc
inc
sub
xchg
jbe
jl
int3
cltd
and
push
cli
rolb
shr
jg
lock
sub
aam
sbb
xchg
push
stc
inc
pop
es
add
cmp
and
sub
jl
jl
mov
int3
dec
xor
ja
inc
mul
pop
test
loop
cltd
sub
rcr
movb
dec
out
insl
sub
enter
loopne
or
xor
pop
xchg
xchg
xor
cli
mov
scas
xchg
jmp
mov
jb,pn
in
dec
add
xor
cmp
push
nop
xor
push
cmc
or
push
jbe
roll
call
adc
out
mov
inc
in
lock
test
rolb
fistps
jecxz
mov
lcall
lahf
repnz
aaa
jl
test
scas
cli
cmpsl
cmp
sub
in
sub
mov
and
fstl
jbe
mov
es
test
pop
adc
cmp
test
jl
pushf
adc
xchg
iret
push
or
cwtl
int3
and
vpsllq
fists
je
jge
lods
and
ja
nop
sbb
push
sub
arpl
inc
out
cmp
add
cmp
pop
xor
inc
fsubl
jecxz
stos
cltd
mov
xchg
lahf
lcall
add
rorl
lods
test
mov
jle
popa
out
dec
in
mov
cltd
mov
call
lods
leave
dec
dec
xlat
test
int
mov
int
xchg
popf
aas
popa
dec
and
cs
push
xlat
lahf
in
dec
lods
int3
mov
es
cwtl
scas
add
pushf
sbb
jp
mov
add
je
loop
push
sbb
fisttps
popa
repnz
sahf
test
into
leave
pop
mov
in
dec
dec
push
mov
cltd
xchg
aad
jns
push
aam
out
fneni(8087
das
pop
jg
incl
in
mov
xor
push
sub
add
jae
clc
sbb
dec
dec
lds
clc
xchg
shlb
inc
pop
sub
test
out
jnp
adcl
movsb
xchg
cli
cmp
scas
and
add
sbb
sbb
loope
arpl
out
sbb
test
push
out
mov
out
adcl
jl
sub
inc
mov
inc
or
lods
cld
dec
jno
sbbl
in
jp
push
sbb
imul
jnp
or
mov
push
pusha
xchg
push
arpl
sbb
test
dec
cmp
adc
add
mov
cs
ret
sbb
cvtpi2ps
dec
xlat
pop
enter
add
outsl
pop
pop
sbb
sbb
mov
clc
jno
xor
cwtl
out
cmp
cld
mov
mov
inc
inc
xor
in
ret
negb
das
cmc
lcall
push
stc
sti
push
stos
sbb
jnp
je
dec
icebp
out
cmp
ret
shll
mov
sbb
mov
xchg
ret
adc
arpl
push
push
sub
and
bound
xor
and
insb
or
fsin
or
mov
mov
out
cmp
std
fwait
sbb
popa
mov
xchg
pop
xlat
jl
cmp
inc
cmp
sahf
mov
inc
mov
adc
cmpsb
das
lods
stos
dec
xchg
mov
mov
and
push
dec
fsubl
rorb
xor
std
ljmp
sub
int
or
or
pushf
insb
mov
or
leave
pop
inc
inc
imul
mov
mov
addr16
mov
mov
push
ja
adc
cmp
stos
leave
mov
out
xchg
arpl
cli
in
movsb
into
lcall
pop
loope
dec
stos
push
pop
sub
push
popf
pop
in
push
cwtl
inc
clc
nop
xchg
mov
in
adc
repnz
daa
out
rclb
add
mov
xchg
jbe
mov
dec
xor
sbb
bound
or
scas
jp
shrl
rol
sub
data16
pop
incl
jbe
push
cmp
leave
adc
cltd
shrl
fcmovne
in
xchg
sbb
insb
adc
hlt
pop
movsb
popa
outsl
popf
mov
repz
fstpl
jecxz
adc
push
mov
addr16
pop
sub
sub
mov
xor
out
sub
xlat
cs
or
mov
negb
arpl
jbe
xor
add
cmp
lods
adc
xchg
dec
int
adc
xor
outsb
popa
jns
jnp
shll
insb
ljmp
add
leave
mov
enter
push
jbe
aaa
xor
jnp
rol
xor
pop
cmp
xchg
dec
loop
jecxz
xor
ss
dec
testl
loop
mov
dec
xchg
mov
repz
lds
mov
loopne
pop
ljmp
jle
jnp
movl
fsubp
cwtl
aas
dec
pushf
mov
pop
loope
test
sbb
sbb
mov
cmp
xor
mov
fwait
push
out
das
dec
adc
cmp
ret
jg
mov
jp
inc
loopne
mov
mov
pusha
out
jecxz
xor
pop
adc
dec
aas
mov
mov
push
xor
lods
je
addr16
jg
sub
add
pop
mov
mov
adc
or
jns
sbb
cmp
jmp
aas
inc
inc
arpl
leave
jg
in
lret
xor
mov
enter
xlat
pop
cmc
adc
and
mov
gs
pop
outsl
cli
out
push
lds
adc
je
imull
xorb
cwtl
cmc
int3
push
adc
add
call
xor
mov
loopne
and
mov
daa
mov
stos
pop
push
out
sbb
in
repz
xchg
mov
clc
negb
and
shlb
xchg
xchg
adc
sbbb
jo
jbe
sarb
popl
pop
cltd
mov
sahf
or
jo
jno
push
test
mov
shl
pop
xchg
mov
sti
bound
dec
or
pop
xor
clc
addr16
outsl
lods
and
clc
xor
dec
cwtl
outsl
loope
ss
dec
cmp
loope
push
leave
jl,pn
pop
pop
add
loope
sbb
fbld
xor
popf
mov
imulb
std
sbb
push
repnz
in
lods
add
arpl
sub
movsb
xchg
sbb
sbb
ret
int
and
xchg
test
pop
sub
aaa
movl
cmpsb
js
add
rcl
jge
ret
add
pop
push
test
jne
xlat
xchg
pop
rcrl
sbb
xor
xchg
jl
mov
je
or
sbb
sub
jae
inc
in
insb
lods
movsb
pop
adc
int3
ud1
out
xorl
pop
inc
jmp
inc
insb
inc
dec
pusha
or
out
inc
adc
and
test
cmp
fsub
out
push
inc
cld
icebp
sbb
pop
push
xchg
jo
push
out
cmovns
scas
sub
sarl
jg,pn
xor
imul
sahf
out
mov
outsl
mov
xchg
shlb
dec
outsb
cmc
shr
cmc
push
inc
rcll
add
adc
les
std
inc
imul
arpl
mov
shrl
fdivl
lock
lcall
stos
rol
lcall
mull
adc
jae
mov
pop
imul
js
je
push
fidivrs
leave
and
sbb
add
mov
push
jl
loopne
mov
popa
aad
mov
daa
add
repz
in
icebp
das
insb
cltd
imul
sbbb
pop
lods
add
mov
test
push
cmpsl
xchg
add
push
push
and
aad
ja
imul
mov
ret
mov
sbb
mov
push
add
lea
xchg
out
jecxz
clc
cmpsl
daa
cmp
pop
xchg
stc
adc
xchg
movsb
push
jl
lret
ja
add
jo
mov
mov
ja
sub
pop
xchg
and
dec
pop
xchg
pop
push
sbb
pop
aam
dec
jo
cmp
jb
fisttpll
stos
imul
xlat
cmp
out
je
repnz
mov
push
fwait
sbb
lods
nop
sbb
pop
repz
xor
imul
or
and
cmp
cmp
ret
xor
pop
test
lahf
push
rcrl
aaa
jmp
inc
mov
xlat
pop
scas
jo
fidivs
aaa
push
sub
adc
cmpsl
jp
ret
pop
clc
ret
leave
repz
aad
test
pop
int
rcll
insb
enter
pop
fimuls
out
mul
loope
mov
push
mov
aas
div
int3
sbb
pop
cmp
into
sub
outsl
cld
pusha
pop
addb
scas
ds
sahf
ds
daa
jns
out
dec
fcmovu
daa
stc
mov
jbe
adc
add
jo
cmpsb
jnp
inc
je
mov
fisttpll
mov
xchg
rcr
adc
hlt
popa
sbb
mov
cmpsl
adc
divb
or
or
mov
div
mov
xchg
xor
sahf
add
pop
out
mov
andb
xor
out
adc
pop
xlat
xchg
aas
or
frstor
inc
xlat
imul
pop
xchg
xor
andb
adc
dec
xor
pop
lea
xlat
xchg
add
cmovo
add
mov
out
push
xor
pop
jns
lock
hlt
sub
das
cs
adcl
jnp
outsb
jno
imul
icebp
imul
loop
xor
pushf
inc
dec
jle
xchg
pop
lock
mov
mov
insb
mov
cwtl
mov
sbbb
lret
ret
out
inc
xor
shlb
repnz
jns
xor
negl
add
xor
mov
push
nop
and
add
xchg
mov
insb
inc
roll
adc
or
xchg
adc
xor
pop
test
xchg
jns
cltd
test
ljmp
leave
push
out
jge
imul
test
jp
xor
add
cld
cwtl
in
stc
jg
mov
jbe
or
lret
rcll
sbb
mov
sbb
mov
sbb
mov
movsb
mov
je
push
mov
mov
mov
jmp
aaa
jp
addl
mov
test
sbb
das
lods
shlb
pop
test
mov
sub
jl
in
xlat
adc
jb
mov
lods
push
adc
js
jbe
inc
pop
call
add
xlat
adc
sti
mov
mov
jb
inc
dec
push
jge
ljmp
xor
imul
xchg
xchg
ret
jno
aad
mov
sbb
adc
jl
cwtl
mulb
icebp
fdivs
push
lods
push
ljmp
jg
push
in
aaa
ret
push
rclb
pop
mov
push
jmp
jns
pop
jle
jns
push
fnsave
and
arpl
cmpsl
icebp
loopne
addr16
pop
adcb
ret
daa
mov
push
dec
mov
aaa
jno
jp
pop
mov
pusha
cmp
lock
pop
jecxz
fs
test
das
pop
lea
jle
mov
inc
push
jns
rcrl
and
daa
loope
cwtl
ret
sti
xchg
sahf
fisubs
xchg
cmp
insl
and
inc
add
cmp
xorl
xchg
ret
in
push
stos
aad
lock
sahf
dec
mov
or
cmp
aad
or
push
pusha
sub
das
xor
dec
insb
loope
divb
insb
icebp
leave
mov
mov
movsb
cld
ds
xchg
stos
add
pop
iret
mov
scas
cmp
push
add
call
cmp
mov
outsl
add
insl
psrld
dec
pop
cltd
in
bound
andb
fwait
nop
xor
sbb
cltd
das
loop
sub
sbb
call
xchg
add
ds
sti
js
jo
jno
sbb
int3
cltd
pop
cmc
add
mov
inc
add
pop
stos
push
jle
lret
das
gs
out
in
test
ret
cmpsb
fs
pop
cmp
sub
leave
adc
and
loopne
pushf
mov
push
cld
xchg
int3
jb
or
mov
jne
mov
sub
push
je
mov
or
push
setne
out
fstp
popf
fsubl
shl
jno
pop
inc
fcmovu
and
pop
xor
in
mov
xor
pop
dec
subl
in
stos
popf
int3
fimull
mov
add
lods
out
dec
sub
imul
lock
out
sarl
mov
mov
mov
mov
pushf
fidivrs
gs
negl
pusha
in
jle
enter
pop
daa
aaa
mov
cwtl
movsl
std
xchg
xor
pop
in
add
or
test
and
ja
add
sub
stc
mov
jo
hlt
scas
outsb
cltd
fcmovnb
fimull
nop
ljmp
aaa
xadd
test
xchg
xorl
cmp
test
xor
push
pop
and
mov
push
xchg
jg
inc
loope,pt
push
xchg
xor
ljmp
outsb
sbb
cli
sub
inc
sbb
pop
icebp
jle
out
outsl
gs
pop
sti
sub
imul
mov
add
fmuls
test
mov
mov
insb
add
addr16
adc
into
dec
adc
add
test
movsl
das
test
cs
mov
xor
mov
jbe
mov
imul
rcl
lret
add
repnz
aad
stos
sar
loopne
mov
sbb
leave
in
dec
flds
cmpsl
jnp
test
stos
test
incb
sub
popa
dec
xchg
mov
pop
nop
inc
jno
daa
adc
jne
sti
daa
outsl
pop
mov
call
inc
mov
mov
xchg
mov
add
jae
test
hlt
in
pop
ja
cs
push
jae
call
fidivs
jbe
repz
ds
sub
fucomi
sbb
adc
adc
stos
cltd
pop
jecxz
data16
ja
ss
rclb
add
pop
adc
test
jno
or
mov
ljmp
popf
and
sbb
push
rol
mov
push
xchg
cmpsb
pop
mov
stos
dec
and
jl
minps
lock
insb
fwait
pop
add
arpl
dec
add
cmc
xor
fildll
popa
inc
loop
bound
mov
mov
icebp
dec
decb
ss
mov
fcoml
cli
add
and
mov
cli
pop
sub
and
push
or
fisubs
int3
sbb
fstl
daa
test
sub
adc
popf
sub
out
fidivrs
cld
dec
sbb
xchg
sbb
or
or
sbb
push
mov
jle
mov
adc
into
push
inc
jnp
inc
adc
mov
ljmp
nop
dec
xchg
icebp
scas
mov
xor
pop
or
xchg
sub
icebp
push
mov
inc
xor
hlt
out
call
inc
loopne
jb
lret
inc
jbe
xorb
scas
and
mov
adc
shrb
sub
loope
push
fsubrl
sub
xchg
out
stos
xor
icebp
mov
push
scas
loopne
scas
mov
mov
xor
push
push
leave
mov
inc
inc
mov
mov
and
stos
ret
push
xor
ret
dec
inc
aas
lods
ret
sub
mov
dec
push
mov
mov
aaa
push
mov
push
xchg
rol
cmp
or
inc
add
iret
movsl
mov
mov
pop
imul
pusha
jo
and
fmul
or
test
insl
xor
pop
adc
push
loopne
mov
adc
test
push
or
mov
arpl
push
push
or
loope
mov
fisubrs
adc
ret
ljmp
cld
fs
gs
cmpsb
repz
in
cmp
div
shlb
jp
xchg
pop
outsb
cmpsb
push
shlb
lret
lods
popa
mov
mov
repnz
mov
pop
or
loopne
mov
mov
subb
mov
push
and
lods
sub
or
cwtl
bound
xchg
call
cld
push
and
or
iret
dec
cmp
addl
cmp
cwtl
jmp
in
add
loope
in
xor
fidivs
fidivrl
mov
fisubs
xchg
lods
std
pop
pop
sub
sbb
decl
xor
into
testl
sti
jae
cmp
adc
ret
add
insl
stos
jb
rolb
out
dec
lods
in
mov
lds
mov
pop
and
or
sbb
popa
pop
dec
push
repz
xchg
in
xchg
pusha
es
mov
negb
in
pop
rorb
sbb
xor
lock
jnp
jg
popa
addl
xor
fwait
in
jns
adc
daa
daa
jb
frstor
gs
add
jbe
sub
cwtl
lods
js
ret
imul
js
lock
mov
pop
icebp
daa
and
sbb
lcall
les
cmp
pop
test
insb
or
sahf
xchg
sbb
stos
out
lcall
mov
cmp
xor
fwait
lret
xor
test
movb
outsb
add
cmp
mov
push
xchg
jnp
hlt
in
ret
sbb
lock
loopne
dec
movsl
or
loope
dec
xor
xor
xchg
dec
xchg
xchg
sti
sbb
pop
xor
scas
imul
mov
repz
mov
scas
xchg
cli
mov
js
xlat
jno
mov
push
inc
pop
gs
aad
imul
iret
pop
mov
jge
ret
xchg
jno
mov
mov
xchg
push
add
push
addr16
push
out
adc
cli
cmp
inc
cmpsb
jo
cltd
sbb
fistl
arpl
in
nop
push
loopne
insl
jae
sbb
sub
js
outsb
cmp
push
push
fisubrl
jmp
orl
cmpsl
sbb
pop
out
fistpll
xchg
into
jno
adc
or
xchg
and
inc
inc
push
jmp
pop
testb
push
int3
jnp
shr
enter
mov
imul
cwtl
cltd
je
std
xor
daa
add
mov
push
pusha
mov
pop
lret
pop
data16
or
repnz
mov
xchg
sbbl
pop
lods
call
test
xor
sub
mov
xchg
sbb
xchg
xlat
dec
sub
jmp
push
dec
dec
push
mov
jecxz
jno
mov
arpl
stc
call
pop
or
int
ficompl
pusha
fdivr
scas
inc
adc
jmp
inc
xor
movsl
je
loop
inc
push
stc
fxam
cmc
out
daa
div
sbb
push
xchg
push
jno
je
dec
xor
sbbl
loop
and
jg
ja
loop
push
jno
sbb
nop
push
cmp
xchg
fwait
inc
xchg
out
jecxz
scas
mov
call
inc
add
sbb
dec
xchg
addr16
add
inc
in
inc
adc
es
adc
xchg
mov
or
into
mov
mov
loopne
mov
and
inc
push
sbb
push
dec
aam
mov
mov
fnstsw
mov
cmpsl
sub
sbb
push
inc
clc
daa
fnsave
sti
int
out
pop
push
stos
pop
bound
adc
mov
outsb
xchg
je
stos
cmp
mov
sbb
mov
sbb
jo
xlat
inc
push
mov
mov
push
xchg
xchg
repz
inc
fstl
ds
sub
sahf
and
xchg
pop
sti
add
inc
into
in
int3
sbb
or
adc
jl
mov
ret
sahf
mov
mov
in
mov
fistl
jns
mov
fs
in
mov
pop
sbbb
lds
xor
xchg
loope
pop
je
mov
push
mov
cmp
enter
xchg
lcall
mov
push
jge
xchg
fldl
lods
push
sbb
idivl
or
leave
imul
cld
mov
add
push
jno
or
clc
push
xchg
popf
dec
push
rcrl
cltd
jge
hlt
out
std
inc
inc
push
fiaddl
mov
pop
sub
cmpsb
cltd
outsb
data16
pop
out
fisubs
lret
std
xchg
sub
stos
insl
jnp
mov
outsl
mov
mov
push
lahf
pop
mov
in
add
sbbl
lret
in
inc
mov
in
sbb
adc
add
sti
hlt
shrl
es
sbbl
push
test
mov
std
cmpl
adc
pushf
sub
iret
test
jg
jmp
xor
mov
dec
mov
xchg
inc
and
cmp
push
mov
inc
mov
sbb
scas
xchg
out
adc
sti
lcall
insl
test
rsm
push
or
cmc
loopne
fdivrs
dec
pushf
popa
ss
xor
fcoml
push
add
xor
xchg
setl
pop
sbb
ds
adc
sbb
pop
mov
jmp
pop
push
jne
fidivrl
add
mov
mov
cltd
push
mov
cltd
into
and
negl
das
das
jo
pop
xchg
outsb
push
and
xor
or
insl
ret
add
sysret
fcomp
lea
pop
pop
stos
cmp
call
push
push
inc
xchg
shlb
sub
pop
out
fisttpll
push
mov
test
popf
add
test
scas
sbb
je
mov
out
lahf
jecxz
inc
shr
adc
ljmp
mov
jecxz
xlat
int3
mov
push
enter
scas
pop
jge
cli
or
pop
cmp
cmc
inc
mov
sub
sub
mov
sub
mov
in
loop
push
or
pop
mov
cmp
xbegin
popa
mov
cmc
nop
xor
dec
cmp
xor
lret
jge
push
xor
sbb
test
jmp
xchg
outsl
shlb
and
int3
xchg
mov
inc
inc
je
cld
pop
dec
mov
xchg
pop
dec
xor
xchg
je
rclb
jmp
fnstsw
mov
lds
sbb
add
xor
adc
xor
arpl
jle
lods
push
ds
pop
xchg
dec
repnz
xor
aad
add
sbb
add
popa
pop
push
mov
pop
inc
push
adc
jmp
lea
pop
test
fiaddl
outsb
push
cmc
pop
mov
sbb
fisttps
and
bound
lods
mov
rcll
ss
mov
icebp
cmp
nop
pop
stos
cli
xchg
mov
mov
pop
stos
mov
es
jbe
add
imul
bound
xor
mov
sti
inc
pusha
mov
mov
fnsave
insl
sbb
mov
cmp
pop
push
mov
xchg
test
or
sbb
lods
mov
clc
mov
or
lods
scas
stos
or
pop
mov
test
in
mov
insl
daa
pop
push
cmpsl
add
mov
insl
imul
pop
lcall
cmp
sti
xorl
jmp
sbb
shrl
push
test
xchg
mov
fmull
cmp
icebp
jge
out
dec
icebp
xchg
fcmovnb
gs
pop
mov
cmp
int3
arpl
stos
adc
gs
mov
adc
cwtl
shrb
les
push
loopne
add
jo
inc
xchg
mov
cwtl
cwtl
scas
test
mov
insb
xorl
pop
and
mov
sbb
ljmp
jp
dec
and
push
loop
jb
push
xor
jle
enter
adc
or
xchg
and
test
sbb
inc
push
testb
push
or
es
cltd
add
pushf
mov
xchg
scas
addr16
out
rol
imul
sub
mov
mov
test
insl
sub
mul
dec
jl
mov
outsb
and
addr16
lret
add
and
jns
insb
fcomi
fsubrp
adc
pop
dec
pop
mov
dec
or
cltd
cmp
xor
sub
push
and
and
dec
dec
call
negl
in
lds
shr
jle
jl
in
mov
repnz
add
aas
or
loop
mull
sub
imulb
mov
and
clc
xor
sti
sar
into
insb
lahf
hlt
add
inc
push
and
inc
mov
add
enter
mov
xor
in
shlb
sub
mov
fiadds
or
pop
mov
sub
mov
negb
dec
xchg
sub
cmpsb
dec
sahf
aam
sarl
outsl
sbb
fldt
cmp
xlat
or
sahf
pop
movsl
dec
and
fs
push
cmp
fwait
into
fmull
and
or
ljmp
inc
inc
lods
jmp
fdivrl
mov
scas
inc
es
inc
xor
lcall
icebp
jno
dec
mov
data16
xlat
popf
lods
add
mov
mov
dec
cmp
push
jne
cmpsl
sbb
fldcw
mov
mov
push
std
inc
or
push
xor
mov
mov
scas
sti
std
jns
cmpsb
xor
mov
xor
inc
lods
xlat
dec
lret
push
cli
xchg
jno
mov
outsl
adc
inc
fcmovnu
loope
out
lcall
cwtl
and
das
fimuls
mov
xchg
adc
ss
out
mov
jbe
rcll
jg,pn
jno
jp
add
inc
into
inc
cmc
mov
fwait
xor
jg
fidivl
xchg
xchg
lcall
int3
and
adc
pop
jae
xor
mov
mov
inc
in
repz
sub
rolb
adc
mov
fs
test
das
iret
jnp
out
cmpsl
lods
fs
ljmp
cltd
cmp
sub
xor
or
mov
xor
outsl
in
cltd
aad
jne
push
loope
or
push
popf
arpl
pop
xchg
pushf
popa
jle
mov
push
or
jge
cmp
insb
imul
xor
inc
fstpl
sbb
std
jecxz
xchg
sbb
xor
sub
cwtl
sahf
dec
js
aad
or
adc
adc
nop
scas
mov
std
not
mov
push
leave
dec
scas
adc
in
jl
lret
subl
cld
pop
inc
pop
bound
dec
pushf
add
iret
or
push
pop
mov
pushf
mov
push
push
out
dec
pop
cmc
hlt
jl
mov
lret
push
test
cltd
inc
mov
adc
mov
in
jmp
pop
lcall
dec
nop
imul
dec
mov
mov
cli
pop
cmpl
icebp
inc
clc
aam
inc
sbb
lret
or
xor
adc
mov
xor
lcall
xor
pushf
repnz
test
sbb
bound
cld
add
add
push
mov
xor
jne
leave
push
cmp
mov
test
pop
out
jno
sbb
mov
dec
pushf
pop
sbb
sub
cmp
scas
and
sbb
mov
or
rcrb
loopne
js
pop
movsl
and
xchg
pusha
jnp
mov
mov
int3
dec
mov
xorl
fmul
pop
sub
sahf
sbb
idivl
jo
cmp
xchg
cli
adc
in
nop
sti
pop
jae
stc
out
out
mov
pop
add
sbb
into
and
call
jle
sub
xor
fcomp
cmp
and
stos
cmp
gs
push
fnstsw
cwtl
mov
aad
xchg
xor
int
insl
cmp
jae
jmp
mov
mov
shr
rcrb
enter
lret
cmc
test
icebp
jns
push
fwait
dec
mov
jle
inc
cli
sbb
lods
bound
icebp
mov
lcall
fcoms
jne
in
mov
jbe
in
xor
loope
jg
ret
pop
roll
cmpsl
je
push
mov
lahf
xchg
mov
sub
dec
xor
pop
cwtl
outsb
ficoms
adcb
sub
inc
es
lcall
fisubl
insb
mov
mov
cmp
sub
cmp
mov
lcall
push
cs
xor
lcall
cmp
add
xchg
sub
sbbl
fldenv
and
addr16
cmc
mov
rcll
push
pop
cmp
xor
cmp
fisttpll
adc
mov
rcll
ljmp
push
xchg
xchg
aas
scas
mov
xor
aaa
fidivrs
iret
shll
xchg
fnstenv
test
sbb
ljmp
dec
pop
dec
sti
out
pusha
sarl
cmp
adc
stc
les
cmp
aas
popf
jnp
cmp
imul
push
pop
gs
mov
xchg
adc
aam
jecxz
das
loope
mov
dec
jle
fdivl
scas
sbb
dec
pop
jmp
dec
test
add
jae
jnp
lcall
fsubrs
pop
fdivs
cmp
push
dec
setp
jne
push
push
std
adc
ja
dec
xchg
nop
in
outsb
xchg
mov
dec
and
and
mov
data16
in
lods
ret
jb
mov
scas
arpl
dec
outsb
mov
push
xor
lea
stc
jmp
mov
cmp
fimull
leave
int
jmp
mov
pop
xchg
pushf
fsub
idivl
fidivrs
and
movsl
sarb
imul
ss
or
fnstcw
xchg
pushf
sbb
xchg
in
jno
das
xchg
inc
sbb
lcall
icebp
loopne
outsl
adc
icebp
enter
fmull
push
sbbl
xchg
lods
ds
call
sbb
out
push
hlt
inc
enter
xor
icebp
js
aad
push
dec
mov
and
mov
aam
push
pcmpgtd
fsubrp
lock
cs
cmc
cmp
add
movsb
sub
out
pop
aaa
adc
add
inc
fdivrs
push
ja
loope
ret
jnp
aad
dec
mov
nop
jae,pt
loop
movsl
int3
mov
jne
xchg
mov
shrl
xor
push
sahf
mov
aas
xchg
jl
inc
es
or
dec
mov
mov
add
lret
es
je
aas
jno
inc
inc
shlb
repnz
mov
jns
xlat
jle
test
add
xchg
ret
shll
mov
addl
popl
mov
mov
jnp
mov
mov
ja
jno
xor
jns
fistps
pop
dec
aaa
fcompl
mov
xchg
iret
andl
dec
pop
push
in
sbb
jg
shrl
mov
scas
bnd
js
pop
pop
xchg
sbb
xor
lock
xlat
sbb
and
xchg
mov
std
adc
mov
xor
lret
fistpl
ficomps
inc
and
and
outsb
out
lcall
decb
dec
sub
mov
jge
xor
imul
sub
xlat
out
dec
jo
and
jbe
test
xchg
cmpsl
mov
xchg
mov
in
fs
ret
mov
mov
mov
or
fisubrs
jbe
or
jge
mov
xor
hlt
mov
xchg
fidivrs
repz
pushf
mov
or
xor
or
cmp
aas
xchg
adc
adc
aam
stc
sbb
jo
inc
fs
dec
loopne
or
inc
lea
mov
push
dec
sbb
mov
scas
in
dec
cmp
lea
pusha
pop
sub
aad
and
adcb
loop
xlat
ret
movsl
push
rcll
adc
inc
fcmovnbe
sub
mov
gs
imul
int3
push
ret
ret
cmpsl
rcr
in
sub
jae
div
xchg
sbb
cmc
pop
add
inc
pop
addr16
dec
insl
or
sbb
out
pop
cmp
loope
addr16
repnz
scas
mov
cli
test
lahf
xor
jo
sub
ss
test
movl
cmc
lret
xor
dec
scas
mov
sbb
jae
and
xor
pop
insl
or
and
jge
mov
popa
xlat
testl
pop
adc
arpl
aam
sti
sete
push
xlat
add
and
inc
mov
cli
fcomp
jnp
xlat
adc
outsl
cmp
dec
cmpsl
sbb
xchg
cmp
sbb
fidivrl
adc
and
ret
or
or
mov
les
dec
inc
sbb
or
fsubrs
outsb
and
ret
and
jge
mov
add
jno
in
aas
stos
xchg
add
xchg
mov
push
push
jge
mov
ljmp
push
aam
add
mov
enter
jo
jge
jae
es
ret
ja
rcll
add
jno
lcall
hlt
shll
inc
rcl
in
sbb
out
lds
pop
cmpsl
add
test
mov
outsb
xchg
nop
xchg
pushf
hlt
aam
adc
sub
xchg
push
sti
orl
xchg
lods
sbb
or
imul
cld
mov
dec
test
in
and
out
out
loope
enter
mov
pop
mov
sbb
test
mov
les
mov
imul
pop
xchg
mov
cmp
xor
aaa
rorl
xchg
in
out
fwait
int3
aam
daa
repnz
das
sub
fdiv
pop
dec
mov
fsubrl
stc
cmp
test
lahf
xchg
push
iret
ret
pop
mov
int
push
sbb
iret
or
lea
inc
shlb
and
test
cmp
or
out
sub
pusha
pop
insb
sarl
lock
rorb
mov
test
lea
and
xor
leave
dec
loopne
cmp
jne
mov
mov
fdivrl
shll
mull
das
rcrb
in
insb
dec
data16
imul
outsl
fdivl
out
jecxz
jbe
pop
repz
adc
adc
sahf
pop
shrl
out
cmpsb
jmp
inc
fs
hlt
adc
inc
cli
leave
pop
xchg
loop
or
iret
aam
dec
pop
xor
std
pop
dec
and
cmp
popf
xchg
push
xor
lods
mov
or
jge
lret
psllw
inc
cmp
xor
cmp
push
mov
push
jb
xor
mov
xchg
adc
cld
out
jg
es
push
jg
xchg
outsl
lret
ja
push
mov
inc
imul
sub
movsb
sub
xchg
ret
or
sbb
dec
test
jnp
enter
vmptrst
push
loope
popf
call
data16
mov
repz
pop
hlt
bswap
pushaw
jl
nop
insb
xchg
cmp
outsb
arpl
jmp
jmp
adc
mov
push
mov
out
dec
sub
rcll
aad
mov
inc
push
jb
push
idivl
mov
movsl
sti
mov
roll
lea
jns
mov
scas
pop
xchg
xchg
lret
in
sub
repz
sbbb
enter
xor
mov
in
dec
cld
iret
mov
mov
lods
adc
mov
mov
pop
test
or
inc
and
pop
adc
iret
pop
stos
jp
xchg
rorb
pop
inc
into
mov
cmp
lret
jne
xchg
nop
insl
aad
cmp
sbb
stc
outsb
and
fisttps
es
int
mov
in
sub
ficompl
fistl
push
sub
fldcw
addb
repnz
fidivs
mov
mov
ficomps
xchg
inc
sub
shl
ss
mov
jo
enter
icebp
sbb
ficoml
pop
shlb
pop
fmuls
jbe
rcrb
push
in
xchg
shl
test
sub
sarb
jno
sub
fwait
shrl
clc
sub
pop
inc
icebp
loopne
cwtl
mov
push
adc
sbb
jecxz
dec
test
push
pushf
fists
scas
movsl
xor
sar
cs
jmp
int
and
push
cmp
or
daa
push
xchg
inc
mov
xor
cli
and
into
ljmp
hlt
mov
leave
insl
add
mov
rcrb
push
ss
jle
jge
jb
sarl
mov
in
out
loope
adc
movsb
lock
sahf
and
jno
ficoml
ss
add
add
bound
shrb
mov
lods
testb
and
push
cli
jg
inc
dec
adc
in
subl
or
loopne
adc
fidivl
xchg
mov
lahf
test
lcall
mov
lds
dec
add
and
sub
jge
stos
sub
arpl
add
push
xchg
insl
dec
adc
jo
inc
xchg
jmp
mov
aad
clc
adc
pop
fisubrl
cmp
dec
push
repz
int
rolb
sbb
adc
cmc
cmp
push
sbb
mov
mov
je
sub
mov
fs
scas
outsb
std
int3
mov
pop
popa
cltd
lcall
push
and
test
push
xchg
jnp
into
and
mov
xor
ds
mov
jb
testl
out
sub
lea
or
mov
test
jbe
dec
jbe
dec
cwtl
out
roll
jle
mov
xor
sub
cmpsl
pop
xor
xchg
push
aam
outsb
mov
pop
cltd
dec
stos
rolb
and
je
push
lods
movsb
xor
inc
decl
movsb
xchg
cmpsb
hlt
xor
sbb
test
scas
or
and
xchg
push
cmp
sbb
daa
dec
sub
add
adc
movsl
jp
leave
jnp
inc
sub
setge
push
add
mov
sbb
les
push
js
add
add
flds
lock
mov
pop
lret
idiv
mov
xchg
mov
shll
shrl
das
cwtl
fsubrp
ficompl
pop
test
out
ss
and
insl
lret
push
fnstcw
mov
subl
mov
or
out
roll
in
pop
fisubrl
or
mov
pop
sbb
mov
lods
mov
sahf
aam
mov
mov
es
cmp
jae
rcr
xchg
insb
add
mov
dec
outsb
push
mov
mov
fs
lds
inc
fsub
pushf
stc
inc
xor
call
xor
dec
js
and
mov
mov
dec
outsb
js
andl
push
mov
jnp
sarb
pusha
das
adc
loop
mov
sub
aad
cld
jge
add
xor
je
and
push
dec
int3
lea
loop
jge
repnz
stos
push
push
xchg
out
aam
jne
cmp
in
int3
cmpsb
in
fs
mov
subb
mov
std
pushf
and
mov
mov
testb
fisttpll
mov
xor
pushf
bound
mov
fisttps
loopew
arpl
sub
dec
jecxz
int3
cli
loope
and
repnz
jb
adcb
xchg
fnstcw
lds
loopne
call
nop
cmp
inc
sub
jecxz
sbb
ss
cmp
add
arpl
icebp
xlat
add
xchg
lea
dec
out
or
popa
xchg
push
pop
mov
enter
into
mov
out
mov
rcl
rol
add
data16
out
cmp
dec
mov
shrb
inc
insl
out
cmp
cmp
jno
jge
mov
js
pop
mov
lret
test
fsubl
andb
scas
movsl
cmp
daa
scas
les
lret
pushf
xor
jp
mov
popa
icebp
aas
leave
or
dec
add
xchg
stos
mov
mov
sbb
push
lret
iret
in
xor
jmp
push
or
lods
fs
sbb
outsb
add
sbb
cmc
cmp
mov
mov
sahf
jmp
add
insl
test
mov
mov
sbb
cvtpi2ps
in
jmp
js
push
sbb
mov
in
es
orl
sarb
push
test
xor
in
lea
lahf
call
and
xchg
pop
pop
fwait
adc
add
outsb
sar
or
gs
adc
dec
scas
sub
daa
xchg
cmpsb
push
jle
fcoms
fldt
out
sbb
fs
mov
cmpsl
push
pop
in
pop
test
aas
pop
or
lcall
jae
add
lock
lcall
aam
add
mov
and
sbb
jbe
or
push
jbe
push
xor
add
xchg
jns
rcll
pop
jns
lea
inc
mov
mov
lret
lret
mov
pop
push
out
in
lret
je
cmp
orl
shr
or
sbb
cmpsl
les
pop
addb
fstpt
xor
lds
or
gs
xor
adc
movsb
inc
les
sub
adc
adc
jmp
inc
icebp
arpl
or
pop
hlt
out
push
shl
adc
push
or
xchg
xorl
mov
in
sahf
bound
in
dec
mov
sub
mov
sub
mov
leave
or
adc
je
stos
adc
lret
or
mov
icebp
or
cmp
cmpsb
pop
inc
xchg
dec
call
jl
stc
adc
insb
enter
ret
sbb
test
cmpsl
es
cmp
push
mov
sub
lret
out
cmp
jns
inc
stos
fcmovnbe
xchg
fwait
mov
inc
cld
jne
pop
cmp
mov
mov
add
shr
xchg
xor
loopne
dec
jno
cwtl
scas
mov
mov
cld
out
fstl
sub
clc
aam
mov
push
dec
sub
xlat
jg
push
mov
push
in
sub
lea
push
mov
push
inc
out
fdivrl
inc
push
jg
mov
and
insb
fmull
sbb
enter
jge
ss
mov
jl
dec
ret
hlt
jo
mov
out
outsb
jne
sarl
mov
lds
cmc
aad
add
aas
mov
call
jne
push
filds
popf
xchg
mov
data16
jge
arpl
loop
pop
daa
in
cmpsl
shrb
popf
mov
add
cwtl
cmp
out
call
sbb
fdivr
les
in
leave
lock
fists
std
lret
sbb
ret
jg
ret
packsswb
jbe
mov
push
punpckhdq
scas
pop
mov
xchg
xchg
ret
cmp
jle
xchg
ret
jbe
inc
popl
fcoms
jl
les
mov
mov
dec
mov
adc
jg
repnz
pop
adc
in
lcall
inc
sub
mov
sbb
in
inc
lds
ljmp
adc
cli
dec
push
dec
mov
sbb
xchg
push
jl
jnp
and
inc
cld
gs
nop
cmp
scas
out
std
push
mov
and
mov
icebp
and
inc
mov
jnp
pop
cld
mov
push
js
je
jl
xchg
sub
or
mov
add
cmp
das
dec
adc
inc
fiaddl
sub
out
jne
add
insb
sti
mov
je
data16
push
je
mov
mov
fimull
add
test
das
and
xor
mov
cwtl
sub
adc
sub
adc
or
xchg
dec
lock
lret
xor
inc
repz
insb
jg
jns
outsl
add
pop
outsb
insb
push
fs
gs
push
ljmp
das
into
aaa
mov
inc
out
fwait
cmp
and
push
outsb
aad
push
test
int
loopne
icebp
loope
jae
out
sti
psadbw
bound
xchg
popa
fildl
xor
push
arpl
aam
shrl
mov
enter
and
inc
ss
leave
jbe
shl
add
push
repz
mov
mov
sub
popa
rorl
out
lock
fcompl
shl
mov
add
ds
lds
aad
loope
sub
into
adc
mov
aam
sub
cmp
sbb
pop
inc
and
pop
and
stos
mov
sbb
enter
das
es
jg
aam
sahf
cli
jg
sbb
xor
loope
sub
adc
test
aam
mov
div
imul
and
ror
insb
jmp
cmp
mov
addr16
fnstenv
sti
es
mov
cmp
cmp
dec
lods
gs
dec
sub
fs
into
es
mov
shlb
popf
fwait
mov
cs
sub
loope
push
sbb
jecxz
insl
push
xchg
push
xchg
pop
mov
mov
mov
pop
xlat
or
mov
loop
pop
in
inc
jge
fisubrs
sti
xchg
shlb
pop
lahf
xor
into
push
pop
out
bnd
xor
mov
xchg
pop
aad
test
aas
fisubs
fs
les
cs
pop
push
xchg
xchg
out
jmp
xor
adc
dec
dec
hlt
fucomp
and
stc
xor
out
dec
mov
mov
mov
in
jb
hlt
cmp
cs
adc
push
jno
mov
inc
into
inc
into
aaa
mov
sahf
loop
das
push
call
cmc
shrb
mov
sub
cmp
sub
inc
cltd
nop
lea
add
movsb
dec
xor
leave
je
fs
int
xor
sbb
lock
int3
push
push
mov
fsub
jge
mov
out
nop
outsl
ret
add
imul
popf
idivb
dec
mov
sub
ja
cmpsb
jp
lods
mov
jno
sbb
mov
pop
flds
pop
jmp
dec
frstor
lret
dec
cmp
push
cmp
cmpsb
pushf
lods
push
iret
mov
xor
xchg
or
push
pop
cmp
inc
in
xchg
imul
ds
in
cld
push
sub
add
jp
stc
fnsave
pop
pop
cmp
jbe
aam
xor
mov
and
sub
rclb
aas
xchg
int
push
dec
call
mov
outsb
xor
pop
outsl
or
mov
dec
lods
test
cmp
jle
loopne
mov
cld
push
jae
jle
xor
inc
mov
lods
ror
call
adc
pop
enter
ljmp
mov
sub
xchg
mov
push
or
xor
pop
ret
sub
and
push
pusha
sarb
adc
mov
test
sarb
adc
xchg
lret
out
inc
dec
cwtl
xor
pop
mov
push
xor
jae
sub
add
jle
jg
dec
lods
testb
ds
jno
xchg
pop
mov
adc
jl
mov
pop
jne
sbb
sarl
push
sarl
adc
rcll
cmp
je
pop
mov
lds
adc
xlat
cwtl
inc
mov
dec
lods
scas
cs
jnp
mov
add
and
fistps
scas
adcb
xchg
lahf
xor
mov
sub
mov
sbb
jne
bound
jno
mov
lods
and
adc
dec
cmpl
sub
lds
je
cltd
pop
fldcw
jnp
mov
sub
pop
shrb
or
lahf
xchg
xor
jle
lods
cs
or
inc
xor
xchg
jmp
repz
mov
add
lds
xor
jp
cltd
xchg
outsb
std
push
std
inc
in
fimull
cmc
mov
std
cmpsl
jns
fwait
pop
notl
div
xchg
popf
push
jecxz
sub
jbe
inc
in
or
jne,pt
xchg
enter
mov
int
js
lahf
mov
xchg
xor
xor
cmpsb
repnz
std
mov
roll
testb
mov
int3
push
aam
jns
push
addr16
xchg
sbb
push
into
jmp
movsb
add
imul
lret
shll
mov
inc
mov
cmpsl
stos
jle
sub
orps
test
lods
push
fsubs
inc
decb
xchg
jge
out
pop
lods
mov
xchg
and
or
push
sti
cmpsb
sub
jnp
cmc
into
mov
cmc
jmp
add
das
test
leave
and
movsb
mov
outsl
lods
pop
mov
pop
xchg
sub
push
mov
mov
push
fcomp
xchg
mov
fiadds
mov
mov
imul
mov
mov
mov
mov
or
adc
inc
xor
pop
stos
cmp
pop
jo,pt
outsb
test
xchg
and
pop
data16
inc
push
jmp
inc
xchg
mov
imul
inc
inc
xchg
xor
fbld
inc
test
addr16
mov
lcall
pop
xchg
xlat
mov
push
mov
sti
jnp
rcrb
or
vpavgw
fldt
sti
mov
dec
fwait
cmc
ljmp
imul
cwtl
cwtl
dec
pop
pushl
rcrl
mov
inc
icebp
adcl
inc
sti
adc
xchg
das
inc
mov
out
sub
lret
mov
jmp
clc
inc
leave
push
and
out
sub
mov
mov
sub
xor
mov
pusha
adc
xchg
xlat
mov
daa
iret
adc
lret
je
loope
inc
outsb
xor
lds
mov
or
jmp
xor
ljmp
dec
js
jo
xor
in
or
shrl
out
xchg
pop
pop
cs
add
roll
push
sti
inc
pop
xchg
jne
mov
std
test
jb
mov
adc
fcomps
or
into
pop
inc
pop
inc
int
cmp
mov
rcl
rol
or
xchg
jg
out
ds
jno
outsl
push
mov
and
inc
ficoml
pop
shlb
je
lds
cmp
jmp
filds
das
or
cmp
daa
pop
mov
jns
push
adc
je
xor
paddusb
sbb
fistl
push
dec
adc
setl
mov
cmp
or
sub
repz
mov
out
adc
adc
cltd
ret
jo
aad
daa
push
pop
je
xor
out
pop
pushf
push
in
xchg
pop
pusha
mov
fdiv
iret
popf
dec
mov
xor
fwait
push
adc
inc
decl
mov
imul
mov
and
out
inc
std
lods
mov
aaa
mov
jg
int3
cmp
fcmovne
or
addr16
out
loop
dec
or
stos
lods
sub
pmuludq
movsb
fisttpl
xorb
sbb
jg
sbb
ret
mov
sub
jge
pop
fists
cli
fstpl
loope
cmp
jle
dec
in
push
sbb
mov
inc
xlat
pushf
adc
cmc
daa
adc
popf
int
pop
outsb
loopne
dec
in
cmp
jb
push
jmp
cmovle
sbb
add
cmpsb
add
fistpl
loopne
mov
cmp
jg
fidivl
bound
inc
dec
cmove
mov
or
dec
in
jb
push
lods
add
and
sbb
pop
pop
in
xchg
xchg
repnz
mov
jne
sahf
pop
xchg
ss
sahf
sub
loope
pop
add
rclb
shlb
andl
push
aam
pop
jge
repz
rorl
orl
aam
in
or
fsubl
in
daa
outsb
push
rcrb
shl
push
cltd
jno
xchg
loop
mov
push
mov
xor
push
mov
das
push
aad
scas
add
cmp
sub
fs
test
xchg
fcoms
inc
push
pushf
adc
jmp
jae
inc
dec
insb
xchg
mov
mov
push
fldl
add
repnz
dec
leave
adc
fwait
dec
and
iret
jae
nop
call
es
add
es
imul
pop
fnstsw
adc
adc
sbb
inc
inc
mov
scas
jns
fisubs
leave
movsb
in
adc
xchg
xor
shr
mov
into
mov
out
pop
arpl
fisttps
push
lret
cmpl
fwait
popa
jbe
aas
add
jecxz
ror
adc
pushf
add
xchg
sub
xor
lods
xchg
cmp
inc
xor
daa
movsl
push
mov
nop
mov
mov
testb
mov
xchg
mov
decb
cmp
add
and
sbb
scas
lret
cmovno
jecxz
out
insb
dec
pop
inc
inc
fsubr
mov
cmp
mov
dec
mov
adc
popa
mov
leave
sub
imul
adc
out
jbe
sbb
ret
dec
loope
xchg
daa
push
psrlw
jo
fdiv
xchg
xchg
dec
and
dec
push
xlat
inc
shll
adc
mov
lret
repz
aad
and
fidivl
cmp
push
fld1
cli
inc
stos
out
jge
jb
dec
inc
add
in
ja
push
push
sbb
xor
push
add
pop
mov
cmp
and
movsl
into
mov
add
rcll
fcomps
repnz
pop
xchg
adc
in
cmp
jae
xchg
mov
mov
sbb
jg
mov
cmp
mov
jmp
dec
dec
fisttpll
push
cltd
scas
mov
adc
mov
inc
sbb
pop
es
mov
cmpsb
movb
cld
sub
jo
test
inc
inc
push
outsb
pop
jge
xor
dec
loopne
testl
sbb
xor
pusha
fidivs
push
testb
sub
pushf
cmc
ds
ret
lds
notb
push
cmp
divl
add
dec
mov
test
sti
mov
xchg
dec
stos
xor
nop
fildl
add
mov
add
jne
cmpsb
iret
scas
and
adc
pop
gs
mov
stc
jmp
lock
int3
push
sub
inc
pop
push
loop
aas
out
fsubs
push
jns
inc
ljmp
jae
outsb
ret
in
dec
gs
pop
lret
push
in
or
mov
ret
ficomps
pop
das
xor
inc
dec
xor
movb
mov
xor
add
in
cmp
jne
fucomip
incl
mov
les
ret
cmp
ss
xor
movsb
call
ret
pop
repz
push
addl
pop
roll
rep
ljmp
cltd
mov
sbb
mov
cmp
lods
ss
or
dec
adc
mov
mov
leave
jns
dec
iret
mov
fildll
imul
sti
fdivrl
test
cmp
addr16
dec
push
popa
inc
add
aad
js
lcall
mov
aam
fisubl
insb
int
loopne
insl
sbb
pushf
sahf
imul
insb
int
popa
pop
or
inc
push
xor
movsb
popa
adc
pusha
pop
xchg
popf
adc
pushl
cmp
sti
xchg
sbb
cmp
das
dec
insl
mov
add
and
adc
ds
fnstsw
enter
ret
push
popa
push
jo
inc
jae
ret
test
jnp
cmp
call
pop
jo
iret
jne
push
mov
aad
movsb
jns
sbb
aaa
fcoms
push
push
lods
push
cmp
adc
sbb
inc
xor
mov
xor
not
movsl
xor
xor
gs
dec
mov
insb
orl
pop
in
mov
inc
push
or
cmp
adcl
xor
and
hlt
inc
push
jg
enter
add
push
push
clc
scas
xchg
pop
movsb
xchg
loopne
xor
cli
loop
sbb
sbb
movsl
je
lea
je
movsl
mov
or
aas
ljmp
lds
mov
or
push
sub
sub
and
out
addl
xor
fwait
push
inc
pop
cli
and
std
cwtl
xchg
out
adc
repnz
sub
loop
jb
push
pop
out
cmp
nop
jge
mov
pop
and
outsb
cmp
mov
mov
inc
popf
pop
loope
test
and
ficompl
jmp
adc
xor
loope
sahf
fsubr
in
fisubl
test
pop
idivl
scas
in
mov
add
cltd
xchg
jecxz
fimull
jno
lcall
inc
inc
popf
int3
mov
insb
pop
fwait
mov
pushf
mov
mov
cmc
shrb
pusha
test
insl
data16
pop
mov
in
sub
out
daa
or
test
icebp
inc
jno
inc
shr
aam
mov
into
nop
pop
lds
sbb
add
cmpsb
int3
sub
jle
dec
inc
outsl
scas
sbb
lea
mov
in
outsb
dec
mov
insb
push
sbbl
stos
push
adc
lahf
hlt
enter
push
hlt
adc
mov
hlt
rdpmc
xchg
gs
nop
ficoms
jae
cmpsb
mov
popa
ficoms
pusha
add
loop
addb
pop
aam
sbb
and
xchg
jo
dec
add
mov
sbb
sbb
push
idivl
add
stc
jmp
rorl
jbe
scas
xor
sbb
xor
cmpsl
pop
cmpb
and
pop
or
jecxz
call
inc
adcl
sub
add
setnp
mov
and
adc
mov
adc
scas
enter
int
hlt
daa
pop
dec
cld
movsl
push
fsub
mov
imul
jo
and
sbb
xchg
mov
hlt
mov
mov
adc
es
repz
jne
dec
jmp
xchg
bound
pushl
mov
xchg
or
enter
outsb
mov
sahf
ret
mov
testl
dec
addl
cwtl
lods
pop
cmpsl
in
push
sub
lock
adc
ja
mov
jae
mov
xchg
xchg
out
mov
adcb
or
fmulp
lea
cmp
icebp
movsl
dec
lods
sbb
cmp
subb
insb
dec
sbb
inc
fcmovbe
dec
and
mov
or
mov
add
mov
push
mov
insb
sub
xchg
xchg
fadds
xchg
cmpsb
xor
pop
jg
pop
leave
test
popa
xor
and
inc
or
pop
out
dec
jp
rol
push
leave
add
or
pop
pop
xor
lods
les
mov
adc
jbe
mov
rcrl
adc
cmpsb
mov
ret
in
sbb
fcmovnbe
mov
fisttpl
imul
pop
jge
inc
fisttpll
lret
sbb
push
nop
call
out
mov
je
push
outsl
bt
bound
lret
jns
lods
mov
mov
push
push
ja
clc
mov
dec
mov
pop
adc
ljmp
mov
adc
adc
xchg
jbe
mov
mov
movsb
and
popa
xor
sbb
fcomps
and
mov
hlt
pop
jo
push
cmc
or
daa
jmp
push
jmp
jmp
dec
sbbb
sbb
cmp
pop
lcall
nop
jle
repz
enter
stc
push
filds
cmp
ljmp
orl
push
add
or
rcr
out
mov
stc
cld
out
mov
aad
jae
mov
push
jnp
les
in
scas
fldt
pop
sti
add
in
addb
fs
add
stos
xor
cmp
pop
popa
cmp
mov
test
push
cmp
jns
add
stos
xor
adc
sub
add
sub
mov
shrl
mov
and
pop
mov
aad
out
cmp
int
mov
jle
cmp
lods
and
push
jle,pn
fwait
jno
loopne
push
movsl
mov
xchg
cwtl
jns
mov
sbb
insl
jae
xor
pusha
icebp
sub
fnstenv
fstpl
push
mov
mov
ss
xchg
sti
ret
aaa
jne
lret
and
pop
mov
movsb
rolb
daa
inc
in
mov
mov
imul
dec
call
insb
xor
jg
insb
jae
movsl
addr16
lods
push
cli
psrlw
sub
sbb
adc
out
ds
rcrb
cmp
mov
push
jp
sub
dec
insl
in
lods
inc
sub
scas
push
out
imul
data16
cwtl
lods
and
loope
aam
pop
scas
push
test
pop
call
out
cwtl
push
lret
enter
ds
fsts
sahf
out
int3
stc
lods
xchg
fmull
add
mov
mov
jle
cmp
hlt
xchg
push
inc
js
pop
and
iret
mov
std
ret
out
push
cmpl
vmovq
xchg
push
loope
push
inc
cwtl
and
push
xchg
xchg
cwtl
loopne
adc
ret
push
sub
cmc
lcall
and
jecxz
and
lods
xchg
insl
rorl
mov
mov
cmp
and
and
sbb
mov
dec
adc
out
and
sub
lea
mov
lods
mov
and
outsb
adc
push
rcrl
hlt
je
lock
mov
fidivrs
sub
or
mov
sbb
testl
daa
insb
hlt
pop
jb
mov
adc
fxch
inc
mov
jo
das
jle
ljmp
inc
call
cmpsb
mov
mov
out
xor
or
shlb
inc
lahf
rorl
jge
ret
aam
add
dec
outsl
mov
mov
inc
cwtl
xchg
orl
push
cwtl
cmp
mov
sub
imul
inc
push
icebp
sbb
cmp
sub
jle
repz
fstps
test
jnp
sbb
dec
mov
scas
sbb
mov
aad
xchg
in
dec
stos
inc
insb
pushl
js
push
sbb
in
and
rolb
movb
dec
xchg
sbb
pop
push
insb
xchg
xchg
pop
dec
jmp
xchg
inc
addr16
mov
fisubrl
or
inc
mov
cmpsb
mov
addr16
lret
pop
cmpsl
adc
cmp
xor
push
std
shl
imul
dec
enter
lods
out
into
push
clc
orl
rcr
movsl
pminub
pop
sbb
rep
sub
mov
and
or
add
xchg
inc
addr16
xchg
dec
rolb
stos
jmp
jnp
fcomip
sub
cmp
and
lret
xor
mov
adc
ljmp
scas
inc
out
and
xor
scas
ljmp
pmaxub
lods
and
aas
rcrl
data16
or
dec
adc
loope
int
jb
mov
mov
jmp
shl
aas
jge
cld
push
xor
aam
lret
fidivs
ret
xor
sbb
arpl
in
ja
cmp
sub
insb
cltd
ja
in
xorl
in
das
mov
pop
mov
pop
dec
xchg
movsb
cs
jbe
cmpsb
mov
mov
dec
jmp
jecxz
lea
dec
hlt
pop
push
jle
cs
mov
repnz
sub
cmpsb
xor
out
and
adc
mov
sbb
je
imul
ds
pusha
iret
incb
jno
sub
xchg
mov
mov
jne
jle
pusha
fistps
push
mov
pop
jge
push
push
pop
xchg
pop
cmpsl
aas
jle
gs
imul
stos
add
add
mov
adc
iret
roll
xchg
out
cmp
bound
or
mov
push
jp
insb
inc
movsb
cmp
loopne
icebp
ret
dec
push
inc
mov
cli
jo
dec
or
mov
sbbl
push
rolb
mov
or
pop
inc
adc
fs
nop
pop
xor
pop
pop
pop
mov
filds
push
jbe
test
popa
cld
ret
ret
jmp
jp
pop
dec
inc
add
aam
ja
cmpsb
mov
test
mov
dec
push
out
dec
add
cld
popf
lock
sub
and
add
xchg
lahf
mov
addl
outsb
mov
pop
mov
xchg
aam
outsb
ret
pop
sbb
jecxz
or
push
loop
sub
fdivrs
sbbb
and
push
sar
gs
push
push
xchg
mov
mov
xchg
and
inc
ja
mov
push
imul
xchg
push
jecxz
cmc
jge
dec
dec
stos
jl
jne
out
xor
ret
xchg
loop
repnz
mov
test
jp
push
ljmp
mov
push
mov
push
mov
mov
inc
inc
xchg
sub
aaa
fldt
inc
dec
int3
xchg
mov
xchg
fsubrp
in
mov
fimuls
xchg
adc
or
push
in
add
iret
lods
popf
pop
rcrl
in
lcall
xor
push
gs
jl
sahf
push
or
ret
mov
loope
add
push
or
pand
clc
icebp
pop
std
mov
push
xor
dec
pop
mov
cltd
roll
jmp
sbb
mov
cld
xor
jge
mov
lods
mulb
pop
lock
sbb
rolb
adc
subb
pushf
popf
aas
push
and
in
int
sbb
push
stos
jb
pop
out
je
call
or
pushf
mov
aam
mov
and
dec
cmc
out
xchg
lds
addr16
sbb
js
jecxz
push
xlat
arpl
stos
xchg
fs
mov
fcoml
mov
fbld
push
xor
shlb
xchg
cmp
cmc
or
cli
out
out
std
sub
scas
repnz
pop
insb
in
imul
sub
cmp
adc
sub
mov
inc
clc
fstl
stos
aaa
mov
xchg
jo
jecxz
ret
test
add
rorl
hlt
clc
and
loope
sahf
fistl
or
jmp
rclb
andb
aam
mov
repnz
ljmp
cmp
pop
lods
pop
sti
jns
in
and
xlat
inc
lahf
inc
clc
jp
adc
icebp
add
cmpsb
test
dec
ret
pop
imul
hlt
data16
xchg
mov
jae
pop
stc
imul
gs
jae
xchg
cmp
pop
push
hlt
adc
imul
jne
std
pop
daa
lret
xor
xor
mov
mov
in
xor
mov
adc
lds
loop
pop
lea
in
add
cmp
jl
or
cli
xchg
and
idivl
scas
mov
ds
mov
movsl
jmp
cmp
xchg
sub
imul
sbb
ds
lea
loope
in
faddl
xchg
sbb
xlat
ret
mov
stos
jmp
sub
pop
pop
fsts
dec
adc
xor
sub
repnz
int3
xorl
jnp
out
cmp
test
in
aaa
sbb
mov
pusha
add
movsl
insb
cmc
push
sbb
xchg
sbb
out
or
sbb
fs
aaa
sarb
dec
xchg
test
cmp
insl
insl
lods
inc
scas
jge
test
dec
ret
ror
xchg
fdivrl
mov
jo
icebp
je
mov
lahf
pop
mov
pusha
cmp
pop
shll
leave
mov
sbb
mov
cli
out
jnp
adc
sahf
cmpl
fiaddl
movsl
loope
mov
stc
outsb
ds
jle
pushl
fcoms
pop
jo
jbe
sbbb
outsb
mov
ljmp
pop
mov
ljmp
and
mov
fwait
pop
sbb
ret
imul
iret
jbe
mov
ret
mov
lret
pushf
hlt
lds
pop
lret
or
incb
shr
add
push
pop
pusha
dec
cmc
cmc
adc
xor
jp
in
jb
cltd
push
faddl
cwtl
mov
ds
fmuls
cmpsb
ss
shrl
clc
repz
jmp
mov
andl
mov
sbb
dec
mov
mov
sbb
stos
lea
sub
cmp
jl
xchg
mov
lea
push
pop
mov
out
outsb
cmp
mov
add
es
pop
orb
xchg
ret
mov
push
fisttpll
andb
mov
push
or
mov
xchg
add
pop
mov
mov
int3
ljmp
lret
pop
icebp
fdivrp
nop
or
ret
repz
pop
xchg
push
js
clc
sub
inc
insb
xchg
mov
xor
movsl
in
js
mov
push
adc
fmulp
inc
dec
mov
mov
imulb
sbb
inc
sub
loope
mov
adc
mov
pop
shl
or
lods
inc
sub
stc
pop
in
mov
frstor
cltd
xlat
and
mov
js
mov
sbb
xchg
jnp
repz
inc
nop
lret
fmuls
cmp
je
in
leave
and
jb
sbb
aad
add
arpl
lock
enter
mov
sub
push
fists
jno
cmp
push
cmpsl
jns
push
xchg
pop
lea
ficoml
ror
and
push
cmc
int
ja
xor
xchg
or
out
push
arpl
xchg
fnop
mov
xchg
ds
jnp
insb
hlt
and
jg
mov
adc
imul
sub
mov
andb
cmp
cwtl
cmp
pop
gs
lds
push
dec
inc
ret
adc
outsb
fnsave
ss
insb
adc
ret
out
sbb
mov
icebp
add
int3
pop
cmp
dec
out
repnz
lock
xor
sbb
int3
pusha
push
shr
dec
std
cs
or
in
dec
pop
fmul
out
jl
inc
stos
mov
cmpsl
adc
ds
sub
mov
jp
push
push
and
push
cmp
insb
add
push
notl
test
inc
mov
pop
mov
jg
or
fcmovnb
sub
call
out
cmpsl
xchg
mov
jb
xor
lods
mov
stc
loope
mov
arpl
icebp
imulb
lock
stos
out
mov
inc
jle
mov
xchg
test
adc
gs
push
sbb
pop
lret
enter
jae
xlat
xor
imul
xchg
bnd
out
icebp
mov
inc
lahf
mov
xchg
nop
fimull
shll
sub
loop
inc
pop
xlat
sub
test
xor
mov
cwtl
movsl
in
mov
add
mov
lods
imul
mov
ds
push
and
and
push
insb
in
push
loop
dec
repz
ret
and
jmp
sub
enter
jae
clc
rcr
xor
pop
inc
jmp
sub
pop
mov
cmp
inc
popa
or
fidivs
push
lahf
pop
std
or
les
sbb
dec
lods
inc
in
cli
xchg
adc
mov
loop
je
loopne
cmp
or
mov
enter
and
xchg
push
xcrypt-ecb
cmpsl
lea
sub
xor
jno
ret
lea
stc
cmp
pop
das
xchg
lret
cltd
or
mov
int3
popf
aad
cmp
fdivs
jno
pop
movsb
adc
imul
lock
push
xor
fwait
cmpsl
outsl
js,pn
pop
lea
or
xor
mov
ss
sub
stc
arpl
fwait
push
xor
and
and
sbb
push
je
xchg
stos
mov
xchg
aad
shr
or
and
hlt
or
test
dec
stos
js
or
cmc
fldt
jno
in
scas
sub
pop
out
inc
dec
insl
sbb
xor
adc
shll
fdivp
dec
xor
mov
or
fistpl
jno
inc
jge
faddl
xchg
fs
std
push
pop
sahf
jnp
fdivl
idivl
add
adc
pop
into
cmpsb
mov
insb
mov
not
lods
cld
jns
push
lea
pop
shl
mov
outsl
and
jg
jbe
add
cmp
fwait
dec
test
and
jbe
xor
data16
push
cmp
mov
std
pusha
and
leave
mov
xchg
add
sarb
jbe
xor
cs
dec
xchg
push
out
and
jg
xchg
and
xchg
mov
imul
mov
jg
stc
pop
lods
mov
pop
repnz
stos
cmp
dec
pop
push
xor
inc
mov
inc
jbe
and
push
es
xor
adc
dec
or
stc
add
in
rcll
into
inc
or
outsl
daa
mov
mov
cmp
sub
inc
and
enter
xor
outsl
push
das
inc
mov
pop
push
add
cmp
add
and
out
fstps
and
test
jecxz
stc
mov
psubsw
loop
cwtl
imul
pop
and
xlat
mov
aam
mov
or
loopne
sbb
xchg
ret
or
pop
xor
push
lcall
arpl
dec
dec
mov
mov
dec
xchg
jo
flds
test
shrb
out
cmp
ljmp
pop
es
out
inc
lds
mov
pop
add
into
sub
fnstenv
cs
push
add
xchg
fistl
popa
lret
pop
mov
inc
pushf
push
push
fs
into
fxch
repz
mov
xor
lea
out
cltd
incl
mov
xchg
js
jmp
cld
adc
sbb
cmp
jmp
add
outsb
xchg
lods
inc
jge
ss
push
popf
shll
jl
scas
cmpsb
enter
test
ljmp
or
xlat
fsubr
cmp
aas
rclb
push
loope
sub
adc
pop
out
cwtl
int
movsl
jle
adc
popf
xchg
sti
xchg
xchg
jae
jg
push
mov
subb
mov
xor
jnp
jns
aad
pop
mov
cmc
insb
pop
icebp
loopne
lret
push
in
adc
arpl
push
mov
mov
shl
addl
inc
ja
xor
pop
cmc
jg
cmp
jo
fcoml
and
outsb
lret
push
sbb
mov
pop
lcall
jmp
fists
mull
adc
sub
insb
jle
popf
cmp
test
sub
mov
das
loopne
lcall
int3
jl
pushf
in
fisttpl
adc
push
into
xlat
xchg
pusha
sbb
pop
testl
mov
lods
pop
gs
dec
mov
mov
rorb
jne
movsb
int3
lea
clc
loope
aam
cmp
mov
das
xchg
dec
push
fidivl
mov
dec
roll
pusha
scas
cmp
inc
test
daa
sbb
adc
and
xchg
xor
push
jl
call
fnstsw
cmpsb
inc
jnp
mov
addr16
adcb
pop
movsb
addr16
jb
call
jg
jno
sbb
adc
cwtl
aaa
out
lock
cmp
adc
out
inc
lea
das
push
rorl
shrl
push
mov
sub
in
loopne
push
mov
inc
lret
in
rorb
and
and
push
lahf
xchg
mov
xchg
pushf
nop
pop
inc
adc
cmpsb
outsb
jecxz
mov
xchg
loope
mov
push
rcll
testb
lock
add
push
and
cwtl
stc
and
repnz
mov
rcll
scas
loopne
push
sub
pop
mov
cmp
pop
rcrb
fldt
rcr
stc
lods
push
pop
xor
push
cmp
inc
xchg
scas
jno
and
mov
orb
leave
inc
ljmp
cmp
xchg
mov
insb
lcall
cmc
inc
cld
sbb
fnstsw
fsub
xchg
loope
inc
inc
mov
xchg
dec
lods
add
mov
test
push
stos
mov
xchg
xor
cmpl
inc
sub
in
rcrl
cmp
mov
jg
add
dec
add
jg
push
push
cltd
scas
repz
add
out
outsl
sbb
dec
cwtl
ljmpw
ljmp
mov
inc
adc
lcall
testb
clc
bnd
lcall
in
adc
popa
insb
pop
push
les
xchg
mov
push
pop
das
mov
movsb
imul
lahf
xor
cmpsl
push
jnp
or
repnz
and
and
sahf
pop
mov
dec
mov
ficoms
fs
cmp
dec
mov
xchg
pop
mov
call
sbbb
iret
add
xor
call
insb
sti
shl
mov
xchg
test
cmc
xlat
jle
inc
sbb
enter
inc
pusha
sub
push
jmp
push
movsl
sub
cmpb
sub
jo
sbb
push
test
out
push
ljmp
rclb
cmp
sbb
lock
faddl
and
cmp
mov
test
int3
fcompl
xchg
adc
sti
out
mov
add
lret
lods
mov
or
jge
inc
cld
xchg
jnp
push
mov
std
lcall
mov
adc
sub
es
popa
inc
clc
dec
push
ss
aad
mov
mov
sub
aas
xlat
loopne
sub
sbb
cmpsl
xchg
pop
faddl
jo
iret
adc
sti
leave
mov
insb
hlt
pusha
mov
xlat
jno
dec
cltd
in
mov
lods
cmp
lret
jl
cltd
es
sbb
add
out
sub
and
push
dec
or
repnz
ds
cmpsl
cmpsb
jb
dec
or
or
push
imul
xchg
test
lods
jg
push
sbb
inc
lods
and
scas
xchg
mov
xor
addr16
arpl
fdivrs
dec
vpsraw
pusha
pop
stc
pop
mov
cmp
mov
adc
jle
xchg
jb
aad
adc
flds
mov
sub
cwtl
cli
inc
inc
outsl
in
inc
ret
out
inc
adc
sub
dec
and
pop
scas
mov
mov
cmp
int
xor
icebp
out
cmp
sbb
movsb
pop
or
lret
mov
mov
dec
psrlq
mov
and
jb
mov
hlt
sub
roll
fucompp
clc
xchg
ljmp
mov
dec
in
aaa
inc
inc
stc
xchg
popa
xchg
pop
ja
mov
mov
mov
test
mov
jecxz
xchg
and
jl
out
cmp
mov
loop
into
xlat
lahf
push
sbb
mov
sub
cs
mov
stc
add
mov
jp
divl
and
lock
xor
jp
xchg
sti
lret
ret
adc
push
sbb
push
jnp
or
popa
pop
dec
popa
push
push
adc
xor
adc
cld
iret
scas
rorb
loop
pop
gs
lods
cmp
cltd
out
or
aas
push
dec
push
sbb
mov
sbb
xchg
and
movsl
xchg
ds
icebp
inc
fisubl
cmpsl
popa
xor
pop
hlt
fdivl
adc
lods
sbb
pop
test
loopne
mov
mov
xlat
xchg
in
rorb
scas
mov
add
mov
sub
push
ret
sub
inc
and
shll
push
push
call
leave
and
jmp
roll
arpl
shlb
cmp
out
jbe
mov
repz
cmp
insb
push
test
add
pop
jne
frstor
sub
leave
int3
jmp
pop
std
push
mov
jmp
int
fld
pusha
cltd
xchg
sub
lock
clc
lea
mov
sub
fists
mov
or
ja
xorl
das
scas
cs
mov
in
fdiv
ljmp
jno
gs
push
sub
lods
pushf
popf
xchg
out
sbb
cmpsl
sbb
jle
mov
mov
jo
sub
xchg
and
and
add
lock
sub
push
mov
mov
test
adc
mov
add
shrl
or
dec
stos
emms
imul
dec
lea
pop
cwtl
ja
cmp
ret
xorl
pushf
stos
lods
loope
or
mov
test
push
test
outsl
adc
push
push
adc
stos
dec
jmp
enter
jp
push
inc
xchg
jb
add
jmp
sub
into
add
jp
fidivs
jl
push
sub
divl
daa
rcr
enter
cmp
dec
fdivrp
fdivl
and
enter
xchg
pop
push
test
mov
popa
jae
add
push
adc
lret
mov
test
push
fistl
or
mov
or
insl
sbb
clc
out
or
mov
mov
dec
mov
ret
iret
jae
lahf
loope
out
pop
mov
hlt
and
push
orb
and
bound
push
add
insl
ss
cmc
cmpsl
aam
adc
icebp
pop
lret
adc
dec
pop
dec
cli
or
mov
xlat
jbe
out
sbb
xchg
mov
cmpsb
and
outsb
cmp
stos
jae
mov
sbb
sub
pop
ja
cmp
orl
ret
mov
push
outsl
imul
push
and
dec
rcrl
dec
stos
test
lds
call
clc
jae
xor
fmuls
out
rorb
adc
mov
dec
push
dec
pop
lret
loop
je
loopne
jge
jl
ss
aas
add
nop
mov
arpl
sub
jle
xchg
adc
loopne
fidivl
mov
pop
inc
cs
pop
sbb
xchg
enter
add
xlat
jo
adc
bound
add
neg
or
dec
jg
pusha
ljmp
sub
jecxz
ja
movl
aaa
mov
cmp
mov
mov
aaa
outsl
clc
mov
mov
out
push
mov
int
mov
frstpm(287
lea
call
sti
and
push
xor
add
pop
jl
bound
and
enter
out
mov
clc
out
xor
loopne
test
xor
lods
je
sahf
dec
cmc
sub
cmp
enter
push
sub
xchg
and
imul
mov
ret
mov
dec
dec
out
push
add
push
cmp
push
cmp
in
cmp
data16
lods
shl
das
popa
cmp
ret
dec
cmp
lret
popf
sbb
mov
scas
cmp
push
and
pop
jns,pn
lret
cli
and
jg
sub
pop
in
cld
dec
inc
xlat
das
std
push
loop
gs
push
sub
cmp
aad
int
xor
mov
add
stc
mov
sub
test
flds
dec
adc
stc
xor
sub
cmp
hlt
stc
push
mov
inc
jle
outsb
push
xchg
inc
imul
push
imul
cmp
fmull
inc
push
or
pop
sahf
imul
cmpsl
push
push
pushf
or
fidivrl
and
punpcklwd
jb
ljmp
jne
jb
outsl
dec
xor
sbb
fsts
sub
sub
fnstcw
rdtsc
in
adc
mov
test
pop
inc
pop
jle
mov
lret
mov
push
loope
fsubrl
dec
fs
sbb
pop
jns
and
mov
aas
mov
mov
cmp
adc
shr
inc
adc
jbe
clc
cmpsb
jmp
mov
das
and
daa
mov
mov
xor
ja
inc
dec
loope
pop
cmpsl
lods
ljmp
aad
lea
push
movsb
das
pop
pushf
lock
jbe
ret
xor
jnp
inc
cld
call
jno
xor
ret
hlt
jmp
adc
movsb
or
pop
addr16
outsb
cmp
inc
cmp
fnstcw
and
scas
stos
xchg
in
cld
cmpl
xor
pop
in
pop
sbb
push
pop
sub
sahf
lea
mov
push
mov
adc
pop
sbb
push
add
push
cmc
mov
ljmp
xchg
mov
test
mov
or
fisttpll
ret
pop
cltd
cs
pop
adc
js
imul
cld
test
jle
push
mov
mov
lods
push
jmp
xchg
fdivrl
lods
adcb
decb
xor
cmpsl
mov
push
mov
cmc
xor
xchg
fucomip
add
cmpsb
daa
daa
arpl
push
xor
inc
and
mov
test
pop
sub
sbb
inc
fs
lcall
xchg
adc
mov
movsb
mov
inc
inc
je
dec
in
std
test
lret
push
jne
fadds
inc
dec
cmc
sbb
mov
and
movswl
stc
add
int3
adc
pushf
aad
pop
bound
sub
adc
sub
jl
out
mov
pop
mov
shll
dec
out
std
popf
stos
mov
repnz
add
cltd
dec
les
mov
jnp
push
pop
loopne
mov
dec
push
and
mov
push
loopne
aad
mov
xchg
jo
in
imul
mov
xchg
mov
lods
jne
cmp
sahf
inc
mov
test
out
nop
mov
icebp
mov
popa
pushf
jb
sti
xor
push
sub
dec
jp
adc
mov
jl
jp
cli
mov
stc
ljmp
scas
pop
or
pop
lahf
sbbl
in
sub
xchg
mov
je
addl
das
scas
test
mov
sub
inc
dec
fsub
jmp
push
fcoms
xchg
lock
mov
push
stc
sub
shl
loopne
xor
inc
pop
repnz
daa
dec
in
fidivrl
mov
jle
insb
pop
shl
push
mov
sbb
xor
leave
pop
mov
add
daa
mov
sbb
testl
movsl
sahf
rolb
push
dec
sbb
mov
out
xchg
rolb
test
jl
rorb
scas
mov
rorb
fsubr
insl
insl
cmp
adc
dec
inc
stc
loope
sub
add
mov
mov
add
out
bound
out
push
mov
mov
mov
mov
insb
daa
addr16
jmp
pop
pop
jnp
subb
out
sub
aas
mov
add
inc
pop
and
jge
mov
mov
push
inc
cld
cld
fldt
jmp
pop
sarl
xchg
int3
cltd
lahf
mov
pop
into
sbb
dec
xor
cmpsb
fsubl
pop
pop
pop
test
inc
sbb
xor
call
shll
xor
test
mov
add
mov
shr
jae
das
shrl
mov
xor
pop
sti
outsb
adc
mov
in
cld
ret
loop
idivl
test
and
nop
cmpsb
mov
jnp
push
lock
wbinvd
lods
sub
and
fnstsw
loope
arpl
enter
sbb
xlat
loope
and
sub
xor
mov
aam
ret
cmp
adc
jb
pushf
movl
aam
xchg
jl
punpcklbw
insb
insl
gs
iret
test
xor
mulb
and
cwtl
nop
out
mov
xchg
add
pop
pop
addb
xchg
loopne
orb
insl
mov
cld
outsl
cmc
js
scas
loop
test
out
dec
mov
int
or
push
gs
mov
cmp
pop
jbe
lret
pop
das
sbb
adc
pop
mov
mov
sti
dec
push
in
add
adc
sbb
fwait
push
mov
cld
out
inc
leave
jae
jl
xor
sub
fnstcw
mov
pop
arpl
lods
or
fs
jns
and
jbe
arpl
or
fimuls
in
jb
push
rep
enter
shlb
push
push
cli
sub
scas
hlt
sarb
lret
adc
pop
scas
sbbb
dec
push
jg
fstps
mov
mov
hlt
out
mov
push
int
in
lock
jl
mov
mov
adcl
shrl
aas
nopl
loop
push
popf
jmp
aad
stos
adc
sbb
imul
shrl
lods
cmpsl
push
add
je
es
inc
loop
push
add
adc
sub
movsl
fsts
push
xor
xchg
cltd
in
lahf
iret
fstpt
mov
and
push
fldcw
sub
dec
out
sub
daa
int
fsub
imul
mov
dec
lret
pop
in
imul
movsl
inc
andl
sbb
jno
dec
pushf
shll
ja
inc
pushf
or
std
or
into
xchg
fdivrl
cmpsl
mov
dec
dec
nop
dec
pushf
xlat
fstl
enter
out
xchg
mov
and
inc
sub
inc
xchg
icebp
mov
les
sub
std
cmpsl
add
mov
fs
pop
adc
mov
pusha
sbb
push
outsb
pop
aad
xor
sbb
and
push
sti
xlat
aaa
mov
shlb
out
mov
mov
push
jae
imul
aas
sub
test
push
push
xor
rcll
test
jp
iret
cmpsb
push
mov
sub
sbb
lea
aam
push
cmpsl
pop
or
sti
mov
or
mulb
mov
flds
mov
scas
das
pop
lret
xchg
aaa
or
bound
sbb
xchg
pop
push
sti
cmpsl
mov
ja
in
pop
xlat
xor
pop
xor
fucom
dec
jle
fcomip
add
outsb
adc
adc
mov
repnz
xor
test
dec
sahf
aam
xchg
jbe
mov
mov
stos
pop
jb
lcall
ja
filds
repnz
imul
fstps
fs
imul
mov
rcll
push
fwait
or
test
popl
add
shll
sub
movsl
lea
adc
leave
mov
loop
pushl
sub
push
push
cmpsl
push
inc
inc
push
pop
int3
push
hlt
add
cmp
insb
outsl
xor
leave
mov
dec
imul
ja
ret
push
imul
out
sbb
rorl
mov
cs
sbb
jg
or
pop
xorl
jbe
fucomi
das
mov
call
and
shrb
fcmovnb
fisubs
xchg
out
push
jl
in
adc
mull
dec
or
dec
das
stos
pop
cmpsb
loope
hlt
std
dec
call
jae
inc
jnp
sub
and
js
fwait
or
or
adc
lea
dec
adc
push
xchg
jb
or
jne
hlt
data16
subb
sub
movl
andl
shl
jnp
jmp
mov
inc
inc
or
int3
mov
jbe
mov
and
cs
jns
jae
pop
ret
pusha
xlat
addr16
mov
scas
push
dec
movsl
inc
out
xchg
cwtl
ret
in
icebp
movsl
pop
push
sbb
out
ret
pop
sub
push
shl
rcl
pop
jmp
out
xor
enter
sub
xchg
fwait
xor
in
push
sar
je
loope
cmp
inc
push
repnz
pop
cmp
xchg
repnz
js
sub
push
and
jecxz
daa
inc
icebp
xchg
js
fiaddl
mov
xchg
mov
fmuls
sti
and
hlt
add
mov
and
ds
pop
or
mov
jno
ret
push
mov
pop
push
js
pop
in
out
test
sub
adc
cltd
outsb
ja
push
out
xlat
mov
xor
cmp
mov
dec
jo
push
call
push
je
mov
dec
nop
push
jge
sub
repz
jecxz
xchg
push
pop
dec
xchg
out
fs
sbb
sub
lcall
mov
mov
add
inc
inc
into
push
insb
in
jg
fimuls
ss
mov
ljmp
scas
inc
adc
dec
ret
nop
dec
in
je
or
xor
lock
add
jne
and
mov
das
jb
jne
aad
pslld
mov
nop
mov
cmp
inc
mov
mov
push
xchg
shrb
lea
xor
mov
shl
lock
loope
add
out
fimull
and
filds
push
cld
fs
jecxz
into
mov
cmp
punpcklwd
clc
mov
jl
jmp
and
or
mov
aaa
add
mov
out
into
and
fdivrl
mov
push
andl
scas
mov
mov
xchg
into
add
lea
dec
fimuls
cmc
test
sbb
inc
push
cmpsl
xlat
int
pop
or
add
and
dec
fadd
shll
xor
mov
push
xchg
mov
pop
sub
sbb
cs
mov
call
jge
nop
sbb
add
adc
leave
push
pop
fcompl
and
bound
mov
and
jp
ret
dec
add
out
xor
mov
cmp
gs
mov
sbb
push
and
add
shlb
data16
push
adc
stos
stos
nop
xor
leave
sbb
fwait
rcl
or
ja
inc
pop
add
push
hlt
inc
in
xchg
cli
mov
out
mov
lea
jae
mov
xchg
sbb
push
pop
sub
bound
add
adc
shrl
rcrb
sbb
push
mov
xchg
fwait
je
stc
push
mov
mov
test
repnz
shrw
mov
cwtl
ret
in
es
mov
mov
addr16
or
jecxz
pop
stos
mov
ficoms
and
lahf
xor
fnstenv
xchg
leave
test
cld
mov
lods
mov
mov
mov
testl
and
xor
mov
jecxz
pop
jb
es
mov
stos
mov
push
es
sti
and
sbb
imul
outsl
mov
push
rcrb
lock
mulb
popa
inc
mov
insl
push
mov
dec
add
cwtl
insb
xor
vunpcklps
lret
or
pop
movb
jmp
lods
fsubrs
stc
insl
aas
add
mov
add
dec
imul
pop
and
mov
cmc
pop
decb
pop
movd
lcall
cwtl
inc
bswap
cli
adc
sbb
jecxz
add
xchg
inc
or
ja
testb
add
rolb
push
and
ficoms
mov
pop
or
and
and
add
lds
subb
dec
jo
mov
mov
icebp
fistpll
sbb
gs
add
stc
jnp
sub
jg
out
pop
xorl
pop
out
or
movsb
lret
jecxz
sarb
loope
pop
icebp
divb
out
mov
push
mov
mov
leave
roll
or
cld
push
dec
sub
leave
xor
cmp
mov
fsubp
ret
rep
pop
inc
push
cltd
sbb
push
dec
jge
daa
ljmp
pusha
stos
mov
push
lods
mov
test
sub
imull
mov
push
mov
fiaddl
lds
push
inc
rcrl
lea
cmp
and
add
shlb
and
int3
fcompp
xor
js
cmp
add
sub
xchg
xchg
push
push
mulb
lcall
mov
ja
outsl
pop
mov
and
je
jg
out
inc
mov
pop
mov
push
mov
data16
push
inc
lock
ja
push
add
xchg
mov
or
enter
push
insl
lods
push
ljmp
pop
inc
add
imul
scas
sub
out
inc
in
cmp
dec
pop
mov
bound
rcll
mov
stos
pop
and
and
inc
push
sbb
mov
in
ss
int
scas
mov
add
or
subl
jl
test
inc
jbe
xor
xor
jb
es
test
insl
pop
sub
push
punpckhbw
adc
leave
inc
loop
pop
pop
outsb
jo
and
pop
dec
add
cli
mov
adc
iret
lcall
pusha
lods
jns
xlat
jbe
sbb
dec
xchg
nop
and
pop
in
sub
data16
popf
cwtl
xchg
arpl
cmpsb
mov
jecxz
jno
adc
mov
roll
ret
xchg
jge
into
jge
sbb
arpl
mov
and
push
mov
lock
fistpll
xchg
mov
mov
sub
jbe
out
stos
or
fwait
lock
push
xor
dec
in
subl
cmp
adc
lds
je
adc
and
ret
ret
rclb
sub
test
jb
inc
jnp
test
test
call
mov
sub
push
in
int
cmp
cmp
jo
sbb
mov
repnz
out
inc
xor
and
out
aam
stos
mov
add
pop
and
imul
js
decb
cmp
bound
decb
and
repz
aaa
iret
add
test
and
jp
jne
adc
outsl
and
adcb
sub
scas
jl
or
add
dec
adcb
fldt
ret
fwait
xchg
xorl
inc
lods
sti
or
test
cmp
enter
sahf
pop
push
cmc
repz
sbb
jne
ljmp
jne
mov
lret
xchg
hlt
inc
add
add
movsb
shll
pop
push
rclb
sub
mov
shlb
and
mov
les
jno
push
stc
or
int3
in
fisubrl
pop
sbb
cld
comiss
cmp
cmp
jg
xchg
imul
mov
adc
repnz
xor
sub
lret
and
ficoml
sub
jl
stc
test
jle
and
mov
dec
sbb
cmpsb
sub
movntps
mov
mov
lock
outsl
push
rorb
pusha
pop
fs
mov
mov
xor
and
aaa
data16
sbb
mov
sub
mov
xor
xchg
test
xchg
test
in
cwtl
pop
movsl
dec
into
mov
es
mov
cwtl
or
dec
sbb
inc
pop
mov
daa
push
cmp
lods
or
out
cmp
mov
int
sarb
lahf
dec
inc
mov
ljmp
in
clc
inc
incl
aam
inc
pop
jno
add
jo
stc
adc
test
sub
xchg
and
je
jl
lret
ss
dec
jg
stos
ljmp
cmp
pop
pusha
xor
cmp
mov
xchg
popa
dec
cld
or
idivl
or
das
xchg
sti
stc
in
in
sub
mov
mov
notb
inc
insb
mov
or
jecxz
jnp
rcr
stos
jl
cmp
lret
cmpsb
arpl
jnp
iret
adc
out
mov
mov
push
xor
js
sbb
push
mov
fadd
out
lock
repz
ljmp
movsb
mov
xchg
ljmp
cmp
loopne
iret
mov
push
cmp
adc
je
mov
push
xor
jne
xor
mov
mov
xor
xor
add
into
lcall
dec
dec
and
pop
in
xchg
push
push
mov
sub
scas
in
in
inc
setbe
pop
or
adc
fadds
push
jbe
pop
repnz
inc
movsb
push
scas
test
pop
lds
mov
jo
xlat
fwait
cli
jle
adc
lock
into
aaa
fisubs
out
sbb
dec
jno
out
push
xchg
gs
cmp
inc
fdivrp
push
aaa
pop
lret
aaa
pushf
divb
out
cmp
arpl
into
int
cmp
mov
push
je
lret
dec
xor
and
cmp
mov
jb
imul
jnp
adcb
mov
pop
pop
in
test
scas
outsb
xchg
lret
mov
fnstenv
lcall
and
sub
jl
bound
std
mov
dec
dec
das
jg
jne
in
push
cmp
es
jbe
xchg
nop
loope
faddl
mov
iret
pop
mov
push
and
pop
sub
enter
inc
and
push
cmp
mov
inc
sbb
subl
mov
jae
xor
mov
outsb
scas
mov
mov
xchg
mov
aad
sar
ss
scas
jno
mov
xlat
xchg
ret
pushf
dec
push
cmpsl
pusha
outsl
icebp
cmp
fucom
popf
stc
sbb
xor
mov
pop
enter
iret
int3
mov
jmp
repz
cmp
push
mov
mov
int
adc
mov
and
clc
cmpsl
sbb
mov
push
repnz
nop
ljmp
sub
mov
movsl
loop
cmpsb
repnz
repnz
jo
les
idivl
ss
xor
inc
add
sbb
out
scas
push
push
or
hlt
movsl
add
inc
sbb
inc
inc
cmc
lahf
pop
scas
ljmp
xchg
mov
mov
add
mov
int
addb
cmp
jne
out
jp
fnsave
xchg
nop
ret
jmp
sub
dec
mov
cs
imul
lods
and
mov
repz
je
sub
lret
or
jl
pop
ret
fwait
into
subl
dec
addl
dec
cmp
mov
stc
inc
pop
out
popf
fdiv
add
sbb
xchg
mov
cld
pop
fisttpl
cmp
mov
ljmp
dec
cltd
lahf
imul
lcall
loop
stos
cmp
fcomp
test
ret
stos
jno
testb
js
and
imul
stos
adcl
stos
xchg
pop
pop
xchg
mov
pop
mov
movsl
lahf
push
ljmp
out
lret
mov
adc
add
fisubl
loop
xor
jmp
inc
jae
jge
xor
clc
jne
test
lock
dec
sbb
and
xchg
int
push
js
jns
mov
inc
xchg
mov
xor
dec
mov
and
jg
shl
test
imul
pop
clc
mov
movsb
push
jno
mov
imulb
ss
repnz
iret
sub
test
xchg
and
xchg
inc
sub
push
jne
mov
arpl
dec
pop
sahf
jns
jns
add
test
out
cli
xchg
ja
into
mov
dec
ja
mov
mov
mov
xchg
outsb
shll
scas
dec
in
and
dec
aam
dec
push
mov
sub
mov
lods
insl
inc
lock
cli
rcrb
push
mov
xor
out
int3
mov
daa
xrelease
fwait
jo
and
fildll
jg
aaa
das
cld
jecxz
mov
pop
push
das
je
hlt
jmp
xchg
sbb
ret
insb
pop
stos
sahf
sub
test
xchg
int
jg
pop
pop
retw
add
aad
aam
adc
stos
mov
rorb
push
mov
push
decl
mov
js
or
lea
sar
mov
inc
xchg
ja
int3
pop
mov
sbb
cmpsl
in
sbb
pop
add
call
mov
pop
mov
out
inc
ds
xchg
rorl
mov
mov
rclb
sahf
loopne
pop
shlb
or
sbb
xor
and
ja
in
xchg
sub
mov
imul
xchg
and
mov
pushl
fscale
mov
jl
mov
xor
lods
pop
clc
jbe
jae
add
inc
lods
addr16
jnp
lock
mov
je
pop
cmc
bound
daa
nop
cmp
sbb
mov
mov
cwtl
pop
add
push
adc
movsb
adc
cli
pushf
mov
cmp
inc
add
mov
sarl
mov
out
and
repz
popf
and
fsubl
jmp
movsl
push
roll
dec
mov
inc
jo
js
mov
add
dec
clc
ret
cltd
or
enter
add
shrl
mov
dec
cmp
addr16
jbe
xor
popf
inc
mov
sub
push
mov
mov
sub
sbb
lods
push
scas
or
lock
int
dec
sbb
fdivrl
mov
int
stc
inc
sub
bsf
lcall
outsl
arpl
add
add
fistpll
pop
mov
xor
outsb
shrl
popf
push
sub
inc
ret
push
int
les
mov
jns
push
mov
and
pop
adc
jbe
cld
outsl
push
inc
sahf
cltd
and
popf
cmpsl
insb
inc
fidivs
mov
sar
and
or
fsts
cmpsb
mov
sub
mov
jg
dec
dec
js
cmp
jg
mov
fldcw
movsl
xchg
add
outsb
sub
mov
mov
int3
out
add
push
popa
inc
shlb
pop
add
ret
repz
ret
xchg
in
lods
and
dec
jb
aad
ljmp
jo
movsl
out
loop
sbb
sti
mov
ret
cld
mov
std
test
cmp
jmp
sub
fiaddl
inc
fnstsw
lock
lods
xchg
and
adc
into
mov
js
jge
test
mov
std
repnz
push
lcall
es
mov
stc
pop
mov
jae
and
push
imul
mov
hlt
loopne
mov
push
repz
call
aas
cld
insl
jecxz
cmp
sbb
loope
nop
in
xor
push
icebp
stc
out
rorl
mov
lea
insb
inc
outsl
gs
jns
pop
sub
and
jle
push
mov
or
ljmp
inc
mov
nop
dec
adc
cmc
pop
dec
mov
dec
xlat
cwtl
jne
and
les
loop
sbb
jp
mov
in
repz
xchg
jbe
jg
mov
sbb
mov
xor
addr16
movb
fistps
fs
rorl
push
ljmp
jge
stc
std
adcb
lcall
fstl
test
cmp
mov
xlat
mov
pushf
mov
or
xor
xor
push
jns
xchg
xchg
leave
pop
int3
insl
sub
out
push
lock
sbb
cmp
ficomps
aam
xor
jl
fimull
loopne
mov
aaa
in
jae
adc
stos
or
icebp
gs
push
pop
or
insb
jmp
xchg
pop
cltd
ret
or
scas
movl
inc
push
push
mov
cmp
loope
jne
call
mov
fiaddl
sbb
adc
cs
out
jne
jge
addr16
packssdw
push
stos
ljmp
xor
sub
cmp
testb
les
xlat
inc
icebp
movsb
dec
mov
xchg
lret
xor
out
add
cmp
push
test
and
incl
pusha
sbb
adc
inc
pop
mov
sub
fidivs
pop
fsubs
mov
dec
mov
pusha
pop
andb
repnz
cli
lds
mov
sub
sarl
subl
xor
push
mov
movsb
shll
int
xor
cld
or
mov
push
jns
adc
push
mov
ds
adc
mov
movsb
mov
fwait
mov
push
int3
pop
imul
mov
loopne
icebp
mov
popa
fcmovu
inc
out
mov
jp
fisttps
mov
outsb
pop
adcb
loopne
pop
iret
aam
ret
add
mov
bound
add
or
adc
inc
fdivr
into
add
mov
mov
jp
jle
es
mov
int3
out
jle
iret
inc
dec
faddp
repnz
xchg
sub
cmp
mov
roll
pop
out
in
mov
sbb
fwait
mov
pop
lret
bnd
ds
dec
fisubl
inc
cmp
pop
mov
test
pop
push
aaa
or
cld
fwait
fwait
data16
outsl
es
ja
pop
cmp
cmp
or
sub
cmp
es
pushf
cwtl
xlat
mov
rcrl
or
sbb
push
cmp
outsl
add
jb
or
adc
dec
stc
lea
add
mov
mov
rcrb
daa
out
idivb
cmc
pop
dec
bound
mov
mov
or
cmpsl
out
scas
mov
and
mov
dec
test
cmp
dec
fcoml
xchg
in
imul
in
pusha
test
xor
mov
repz
imulb
loop
ja
lock
les
lock
mov
add
call
rorl
test
in
imul
mov
leave
les
imul
ljmp
mov
inc
mov
cmp
sub
cmc
shll
sahf
sub
mov
mov
adc
push
inc
dec
xor
jno
into
cltd
sub
mov
fcmove
fwait
dec
movsl
mov
sub
jp
sahf
fldpi
inc
sti
push
pop
insb
pop
jns
sbb
int3
gs
jbe
mov
push
mov
lock
jno
mov
inc
jg
dec
test
shrb
arpl
adc
adc
and
scas
adc
les
popa
jmp
lods
adc
push
pop
sbb
mov
call
mov
lcall
rcll
cwtl
cltd
inc
not
mov
sub
add
mov
jne
aaa
roll
sub
mov
mov
cmc
or
jae
jns
in
mov
leave
mov
div
dec
push
test
jns
dec
pop
push
dec
push
mov
inc
jmp
xor
xor
inc
mov
jns
outsb
jbe
or
push
cmp
xor
cmp
dec
pop
icebp
imull
jae
dec
loope
cmpsb
aas
repz
push
insl
xchg
in
inc
jo
in
jo
decb
lret
idiv
aas
xlat
and
push
pusha
fcoms
push
call
cmc
test
add
mov
dec
js
int
sbb
lods
push
pop
and
mov
and
dec
nop
cmp
dec
out
jp
cld
leave
sahf
and
addl
mov
out
nop
idivb
sbb
movsb
in
fisubl
rorl
dec
repnz
clc
dec
lods
aaa
add
dec
add
in
push
xchg
sub
add
jno
and
push
pop
push
cmp
outsl
sti
imul
insb
movl
mov
ret
or
pop
xchg
push
xchg
jle
stos
xor
xchg
jl
push
in
mov
pop
ds
cmp
cmpsb
lock
pop
cmp
and
js
or
pop
dec
inc
fstps
mov
xor
mov
sti
and
mov
scas
xor
mov
xchg
iret
jne
rorb
movsb
ret
fwait
cmpsl
fwait
test
ljmp
sti
cmp
pusha
or
fsubs
lahf
arpl
mov
negb
xchg
xor
dec
xchg
mov
adc
or
adc
add
adc
fimull
lods
sub
lods
mov
outsb
sub
aaa
lahf
addr16
xor
ret
arpl
les
fdivrs
mov
jns
push
mov
movsb
mov
adc
aas
cmc
ret
cmp
fs
lea
mov
fwait
and
xchg
icebp
cltd
mov
xor
das
aas
fstps
sbb
cmp
push
loopne
sbbb
or
push
adc
in
fucomip
mov
xor
dec
inc
mov
in
jg
adcl
mov
jnp
dec
iret
inc
push
mov
outsb
cwtl
fists
enter
cmpsl
push
loopne
cmp
xchg
cmp
insl
out
popa
icebp
sub
cld
inc
cmp
fcomps
test
mov
cmp
jl
stc
loop
jmp
bound
test
fisttpll
or
inc
jb
xchg
mov
cwtl
dec
mov
in
ja
imul
les
jo
and
adc
sub
xchg
iretw
popa
dec
mov
mov
fisttpl
sub
push
xlat
iret
mov
pop
icebp
ds
in
mov
inc
sbb
push
and
jmp
cmp
pop
cli
push
inc
sub
dec
subl
movsb
lret
xor
aas
xor
sti
call
cld
loop
mulb
mov
sbb
popf
cli
ror
std
fbld
pop
pop
leave
push
push
lcall
jg
cltd
mov
cmc
es
cld
in
pop
adc
add
xchg
and
cmp
dec
movsb
add
dec
loopne
dec
dec
mov
jns
xor
and
mov
adc
xor
xchg
push
loope
adc
scas
add
call
lds
push
push
jl
ret
mov
jmp
emms
mov
fcoml
sbb
push
loop
outsl
xor
sub
jbe
inc
pushf
xlat
adc
loopne
mov
inc
jae
ds
test
add
aaa
ds
stc
adc
add
out
pop
sub
mov
xor
cs
add
das
fmulp
jb
imul
mov
mov
shufps
aaa
mov
std
mov
inc
movsb
jge
jne
mov
jb
push
xor
xchg
and
fwait
movsl
fldcw
xlat
lods
push
pop
loope
mov
xchg
sarl
lods
insl
repz
stc
dec
add
pop
dec
inc
push
sbb
lods
aad
jmp
ret
xor
inc
dec
adc
sahf
sub
xor
push
mov
push
aam
daa
das
sub
jge
pop
cmp
jmp
sub
mov
icebp
in
subb
mov
lcall
lods
call
mov
out
jge
and
mov
sbb
cmpsb
fcmove
or
fsubl
pop
cmpsb
push
jne
jecxz
mov
inc
inc
lret
adc
test
shll
cmpsl
xor
and
mov
cmpsb
pop
jbe
jge
lret
repnz
jnp
adc
outsl
pop
imulb
and
cmp
xor
adc
std
xchg
clc
insl
cmp
jecxz
cmpsl
icebp
add
cwtl
push
dec
add
bound
sbb
cmp
in
push
andl
pop
cmp
call
call
xor
cli
test
sub
lock
in
pop
cmp
add
xchg
lahf
jb
fcmovnbe
push
mov
sub
push
in
pop
loope
push
int
xchg
fidivrs
mov
add
sub
cltd
es
fwait
sub
cmp
inc
cmpsb
and
xor
fwait
mov
push
aas
or
ret
in
inc
adc
rcrl
outsl
push
adc
xlat
xchg
add
cld
cltd
lahf
xor
pop
jg
dec
pop
xor
adc
mov
xchg
dec
cmp
jp
mov
outsl
movnti
fwait
xchg
mov
add
sub
xor
shlb
add
jg
pop
imul
sub
pop
adc
xchg
loope
jb
mov
or
cmp
es
aad
mov
mov
pushf
xchg
mov
fbld
mov
cli
xchg
xchg
jmp
or
sti
jbe
dec
push
jl
es
mov
mov
push
sahf
jecxz
xor
imul
mov
sbb
bswap
or
mov
pop
jnp,pt
pop
sarl
or
popa
rcrl
xchg
xor
jmp
fisttpll
dec
cs
test
pop
cli
hlt
pop
xchg
sub
fadds
fcomps
sbb
outsb
or
cmpsl
add
xchg
dec
and
les
or
loopne
xchg
push
and
sbbb
out
cltd
lock
mov
out
icebp
adc
add
or
mov
sbb
pop
xchg
dec
sub
popw
in
xchg
lea
insl
mov
cli
mov
xor
cmp
xchg
int3
mov
daa
mov
sti
pop
cmp
xchg
mov
cltd
dec
cltd
cli
flds
sub
je
fbld
cmp
mov
pushf
sti
inc
call
jo
xor
xchg
pop
cld
out
add
in
mov
mov
adc
cmp
sub
xorb
pusha
sub
push
lahf
dec
mov
popf
mov
cmp
iret
outsl
xor
fmull
jb
add
fstl
popf
insb
cs
in
or
sbb
call
or
popa
mov
out
inc
stc
ret
jbe
push
xor
and
cs
das
stc
test
ficompl
stos
or
lods
movsb
jb
jge
jno
push
push
lock
cwtl
cmp
inc
loope
xchg
dec
xchg
popf
push
xor
add
loope
xchg
aad
jl
mov
cmp
mov
cld
mov
cmc
mov
stos
xchg
push
dec
jecxz
sbb
ret
pop
shl
xchg
add
push
jmp
es
fidivrl
mov
imul
xor
test
xor
push
fisubrl
jne
iret
std
sub
push
mov
ds
fwait
xlat
pop
dec
dec
leave
stc
adc
in
loope
in
rol
push
xlat
cmpsb
or
sub
mov
push
inc
or
cmpb
sub
rcrl
xor
or
fnsave
test
xor
sub
sub
repnz
add
fidivrs
in
mov
or
sbb
std
jecxz
jmp
sub
or
icebp
cmp
push
sub
jle
iret
add
push
dec
imul
mov
out
cmpsb
pop
mov
lods
rclw
ret
jecxz
inc
push
sub
outsb
fwait
xorb
daa
push
xchg
xor
bound
cmp
rol
cmp
imul
xchg
mov
jecxz
and
addr16
sar
xchg
ss
mov
jno
shr
sbb
out
xchg
ftst
jg
jbe
loop
pop
nop
lret
xor
mov
jae
movnti
stc
mov
mov
push
loope
lret
and
push
xor
inc
xchg
inc
test
inc
scas
loope
lahf
mov
ss
mov
xchg
repz
shr
insb
or
adc
outsl
add
or
sbbb
outsb
das
outsb
dec
dec
and
xchg
inc
cmp
out
pop
mov
fwait
testl
repz
fwait
push
sub
rorl
lods
inc
mov
es
iret
pop
into
frstor
dec
out
dec
xchg
out
pop
push
mov
movsb
or
xor
and
popf
out
je
mov
lods
mov
add
mov
sub
clc
xchg
lret
inc
or
aad
cmpb
nop
fidivs
dec
xchg
call
sub
mov
iret
cmp
repz
or
pop
lret
cs
fs
xchg
insb
lods
lock
ja
inc
sub
inc
or
jecxz
in
sbb
sbb
pusha
and
jns
leave
sub
mov
sub
mov
pop
lret
out
bnd
cmpsb
pop
mov
adc
stos
inc
flds
xchg
test
negb
ret
push
push
ret
dec
and
scas
fistpll
inc
mov
xchg
clc
ret
daa
nop
push
mov
jb
dec
idivb
pop
add
pushl
sbb
mov
dec
pop
xchg
mov
push
stos
aaa
shlb
lods
jnp
shl
dec
inc
and
jmp
push
jle
pop
xchg
fisttps
inc
and
mov
mov
pusha
shrb
cmp
add
aam
cmp
pop
adc
mov
mov
mov
test
out
inc
mov
lods
mov
decl
pop
outsb
xchg
and
les
xor
sub
jle
sbb
mov
inc
movsb
je
jbe
mov
mov
inc
std
xchg
in
imul
mov
dec
and
cltd
mov
xchg
sahf
stc
enter
insl
or
clc
into
lret
push
push
not
lcall
je
adc
popa
dec
sysret
xor
popf
pop
int
hlt
mov
and
jp
test
flds
or
ljmp
imulb
jne
dec
mov
mov
shl
xchg
rol
sbb
repz
xchg
lds
push
into
ljmp
mov
cltd
xor
in
pop
into
jb,pt
mov
xchg
and
fisubrl
rcll
dec
mov
ja
fwait
inc
jnp
inc
enter
hlt
imul
iret
xchg
pop
lods
test
dec
sahf
push
or
iret
mov
mov
aas
mov
dec
dec
add
push
pushf
xor
out
mov
pop
inc
ja
or
addb
xor
xor
inc
pop
movsl
jbe
mov
fistpl
mov
sbb
iret
add
xchg
shl
andb
test
sub
sbb
cltd
lcall
shll
mov
insb
push
jbe
xchg
arpl
mov
jge
cs
test
arpl
int3
mov
jg
inc
adcl
icebp
std
inc
hlt
aam
in
sti
pop
sub
cli
movsl
ret
mov
cli
dec
ds
sub
stc
cmp
mov
push
push
pop
insl
mov
push
and
imul
imul
rcrl
xor
lret
jne
pop
movl
ds
pop
fidivrl
cmp
dec
ds
push
mov
sub
and
aas
andl
rolb
out
call
push
nop
push
movsl
cs
sub
test
mov
movsl
frstor
out
hlt
kandnw
add
les
sub
sti
addps
cmp
pop
stc
push
push
mov
imulb
sbb
push
sub
or
es
bound
xor
push
aas
dec
in
and
add
es
in
sbb
push
loop
dec
sti
pop
push
int
mov
or
ss
xchg
repz
andl
les
mov
andb
pop
or
pop
push
add
daa
in
insl
jae
xchg
bound
out
addr16
cmp
lods
sbb
dec
jb
data16
or
jmp
and
mov
dec
fwait
fdivrl
mov
test
cmp
push
nop
xchg
cs
ret
mov
xchg
mov
inc
lret
aad
mov
pop
push
push
ror
lods
sub
jl
dec
out
repnz
dec
rol
faddl
aas
sbb
inc
dec
outsl
lds
loop
imul
int3
jne
mov
fstl
int
or
lcall
mov
cld
xchg
sbb
pushf
mulb
loopne
dec
mov
test
lds
shl
cmpsl
test
xchg
mov
add
loop
dec
shrl
push
shll
mul
push
jl
cli
out
add
out
sub
pop
fdivp
out
pop
inc
xchg
push
fildl
sahf
xor
mov
pushf
pop
cmpsl
insb
pop
sbb
adc
repz
push
mov
mov
dec
cli
dec
add
imulb
icebp
mov
pop
stos
inc
scas
mov
cltd
sbb
pop
in
dec
fiaddl
lcall
inc
push
add
or
or
lods
pop
jp
xchg
push
mov
push
pop
xchg
mov
adcl
mov
mull
es
hlt
jp
daa
imul
jnp
mov
push
cmp
add
stos
cs
jecxz
jo
mov
xchg
jbe
xchg
cwtl
mov
add
aad
jne
leave
loop
push
inc
imul
xor
lret
cmp
add
popa
cmp
ja
call
cmp
xchg
lock
dec
mov
stos
mov
aas
subb
sbb
stos
cmp
xorb
cld
jg
ja
fs
stos
cmp
push
clc
jle
and
out
fcmovb
cmp
fidivrs
ja
enter
xchg
mov
mov
cli
mov
jle
and
pop
push
fs
dec
mov
fnstcw
rcrb
cmp
pop
inc
int3
xchg
ljmp
xor
mov
xchg
cmp
je
bound
add
inc
call
popf
pushf
mov
out
daa
and
repz
sarb
stos
dec
fisubrl
cmc
cmp
sub
and
xor
ja
iret
leave
mov
dec
push
adc
xor
cmpb
mov
es
pop
inc
arpl
repnz
rclb
test
fisttpl
xchg
sbb
aaa
mov
movsl
jge
das
orb
icebp
xor
jp
fmuls
out
jno
mov
or
aam
inc
outsl
lods
pop
fwait
sub
mov
jne
scas
xchg
sub
push
mov
sbb
lcall
nop
insl
testl
lret
pop
pop
adc
testb
les
pop
jo
fisubl
push
fbld
xchg
mov
jns
xchg
adc
xchg
jno
mov
and
aas
aad
push
and
pop
xchg
cmp
fistl
mov
pop
cmpsl
or
pusha
js
lret
in
inc
idivl
ss
mov
mov
jecxz
movsb
out
lcall
stc
sub
mov
jecxz
js
sub
push
gs
ljmp
cmc
out
inc
sbb
ror
add
ret
bound
jo
add
aas
push
ret
stc
hlt
pop
cli
mov
mov
es
jno
in
lock
cwtl
jmp
xchg
dec
lods
jno
hlt
sbb
test
dec
and
mov
aaa
test
mov
es
jnp
je,pn
push
add
aad
mov
mov
cwtl
lahf
mov
lods
and
jne
mov
cmpsb
push
leave
ljmp
mov
shrb
sub
pushf
jns
stc
inc
in
adc
cwtl
imul
inc
mov
xor
fs
fwait
adc
insb
sti
outsb
mov
cmc
jle
pop
ds
xchg
int3
push
test
cmp
pop
jae
fistpll
mov
je
shll
mov
lcall
mov
push
mov
pushf
add
adc
cmp
or
add
ds
imul
lods
mov
push
sbb
pop
push
cld
mov
push
add
adc
jbe
lods
inc
pop
sbbb
xor
pop
loopne
rclb
insb
icebp
xor
dec
dec
iret
repz
enter
cmp
xor
stos
add
in
lods
dec
out
jl
mov
testl
sub
xor
into
sbb
cmp
loope
xchg
cmpsl
lock
insl
sub
jbe
pop
jbe
adc
jp
in
cmpsl
sub
daa
jne
inc
xchg
adc
in
insl
push
push
sub
sub
aad
stos
out
fcompl
enter
enter
loop
adc
sub
push
jmp
sub
iret
pop
xchg
jl
sub
xchg
and
cltd
push
sbb
imul
div
xchg
fs
int
dec
pop
out
dec
cmpsl
dec
ljmp
insl
cs
call
push
inc
andb
mov
mov
hlt
stos
jmp
lcall
daa
xor
loopne
fdivrs
icebp
cld
push
rorb
pop
lret
in
dec
data16
dec
inc
add
xchg
or
add
add
lds
mov
pop
cmc
jbe
add
fimuls
add
gs
cmc
sub
std
push
in
iret
xor
sub
pop
int3
inc
fidivrl
out
cmp
aad
sub
rorl
jl
dec
icebp
mov
cmp
aad
mul
push
dec
xchg
test
add
lahf
repz
fisubrl
rorl
mov
cmp
rcrl
add
sarb
pop
test
ss
mov
lret
stc
jno
lret
sub
ljmp
imul
xchg
xchg
cmc
clc
ss
inc
test
test
sti
out
lods
mov
sbb
mov
and
mov
lods
pushf
icebp
cld
mov
jbe
and
xchg
cmp
test
int
add
cltd
repnz
pop
sub
sub
jnp
adc
idivl
mov
or
lahf
mov
aaa
fwait
data16
iret
mov
adcb
loop
lret
mov
loope
inc
pop
loopne
and
xor
pop
fisttps
or
call
imul
sbb
rolb
jbe
out
add
jecxz
mov
inc
inc
test
in
cmp
jnp
mov
jle
mov
or
inc
jecxz
mov
scas
pop
mov
mov
xchg
addr16
add
lret
mov
ret
jbe
in
adc
pop
cmp
mov
lret
inc
jl
push
sbb
movsl
push
mov
dec
lods
lods
add
and
pop
out
dec
cmc
leave
mov
int3
pop
daa
fimuls
in
push
gs
popa
test
jo
dec
cmpl
jmp
into
cmp
and
mov
hlt
hlt
outsl
mov
pop
push
insl
sbb
decl
clc
fwait
sub
scas
in
lock
daa
cmp
adc
subb
inc
jbe
add
cmpsl
dec
ja
test
out
cmp
cmc
jle
out
inc
push
hlt
leave
or
das
enter
mov
xor
xor
cmpsb
sbb
sbb
movb
mov
pop
hlt
repz
sbb
std
mov
add
adc
in
mov
aaa
xchg
mov
xor
sarl
inc
cmp
fildll
pop
rclb
gs
cs
or
inc
lds
rcr
aam
cltd
lret
enter
dec
addb
call
test
sub
fs
mov
std
ret
adc
pop
adc
push
add
and
cwtl
dec
mov
pop
push
and
cmpsl
js
dec
and
sbb
xchg
fldcw
dec
loope
scas
and
push
pop
cmc
inc
cmpsl
mov
add
mov
ss
ret
push
mov
lret
repnz
and
gs
xor
adc
push
sarb
mov
and
insl
dec
dec
je
and
and
outsl
pop
ret
enter
icebp
int3
xchg
xor
ja
ficoml
leave
insl
scas
sbb
sub
cmovne
pop
std
sub
aaa
inc
add
fistpl
pop
mov
lds
aas
cmp
sbb
pop
sarl
push
mov
add
jg
add
sub
mov
mov
ljmp
pop
int
and
lds
push
mov
add
icebp
js
movsl
xchg
loopne
pop
rorb
fwait
lret
mov
sub
mov
test
movsl
pushf
negl
xchg
into
cltd
xchg
mov
add
jne
call
dec
daa
mov
and
pop
mov
loope
loop
imul
arpl
dec
adc
mov
dec
xor
js
loopne
js
test
adc
jne
xlat
sub
jnp
test
push
je
mov
xor
push
loopne
adc
mov
push
pop
in
test
pop
xchg
mov
test
jnp
jecxz
mov
or
mov
pusha
jae
cmpsl
insl
movups
loopne
pop
imul
gs
mov
js
mov
or
in
fs
andl
aaa
dec
ss
jbe
test
sub
jl
int3
dec
and
call
push
xchg
iret
repnz
fdivs
or
int3
mov
out
shll
fldcw
dec
ficoms
sub
push
xchg
cld
movsl
mov
mov
jnp
adc
arpl
mov
mov
ret
hlt
sbb
jbe
inc
sbb
push
ss
mov
outsb
test
inc
add
stc
adc
adc
outsb
push
fwait
xchg
hlt
sub
pop
xchg
daa
imul
or
loopne
pop
test
mov
pushf
inc
stc
pusha
out
xorl
xchg
or
pop
cs
push
jl
mov
xchg
mov
mov
push
in
cmp
jne
ds
dec
and
push
jae
sub
jbe
adc
test
imull
cmp
bsr
push
ret
push
xorl
jl
mov
push
add
mov
push
pop
subb
mov
xor
frndint
mov
cmpsb
fildll
sbb
push
loop
adc
aaa
push
jmp
fs
push
mov
xchg
jno
lret
dec
pop
sub
lods
cltd
test
aas
adc
mov
add
mov
add
inc
or
jp
push
bound
mov
xor
test
call
xchg
push
jne
out
jp
cmp
aam
cmp
dec
fsts
movsl
mov
sub
mov
add
cmc
rolb
mov
fcompl
mov
insl
xor
test
dec
js
ja
lds
je
in
adc
mov
push
cltd
movsl
test
pop
adc
adcl
mulb
scas
mov
mov
dec
ficoms
inc
push
repnz
xchg
popf
aas
jg
xchg
mov
adc
jle
enter
jae
sub
mov
stos
adc
cmc
cwtl
mov
icebp
fbstp
add
mov
gs
or
mov
arpl
jp
mov
popa
mov
mov
cmp
mov
iret
sub
add
sub
loop
outsl
sti
je
cmc
or
les
mov
into
push
stos
jge
push
cs
pop
xchg
jp
jmp
fs
adc
xor
sub
lea
adc
lahf
cmp
stos
call
lret
cmpsb
xor
push
ficoml
xchg
lcall
lret
repnz
mov
mov
shll
and
cltd
mov
iret
cltd
and
push
mov
loope
subl
cmc
arpl
mov
divb
cmc
inc
rclb
popa
lea
insb
sbb
mov
xchg
stos
xchg
sbb
or
aas
or
dec
mov
ljmp
or
add
xchg
jge
dec
push
int
inc
je
pop
shll
jo
lea
imulb
sub
data16
neg
jmp
jp
in
in
sbb
inc
rol
pop
dec
jg
adc
pusha
pop
push
or
pop
mov
out
popa
xlat
sub
ficomps
push
cli
lods
sub
jmp
add
xor
xchg
enter
inc
pushf
jmp
xchg
sbb
add
outsb
sub
push
mov
fidivs
les
pop
sbb
out
cmp
hlt
push
shlb
sub
ds
xchg
mov
sub
insl
insl
orb
imul
jp
cwtl
loope
mov
xor
or
mov
jg
jae
jns
mov
inc
or
jno
dec
jnp
cltd
out
sti
mov
test
mov
out
mov
imul
mov
xchg
add
add
out
outsl
pop
pop
sub
dec
fldl
cmp
aas
ss
jbe
ds
insl
mov
mov
mov
out
or
mov
inc
mov
out
ss
jb
dec
add
and
xchg
ret
jmp
adc
call
mov
mov
mov
add
imul
mov
xchg
scas
mov
or
outsl
push
inc
ds
inc
lods
mov
repz
push
daa
sbb
je
movsb
cli
cli
in
sahf
out
ds
jns
stos
add
cld
sbb
dec
movb
pop
lcall
mov
ret
or
dec
clc
jb
cli
xor
mov
add
sub
lret
arpl
stc
std
mov
cltd
rcl
orl
cmpsb
sub
adcb
xchg
or
insw
fucomip
mov
and
xor
cmp
insl
adc
sub
aam
push
adc
adc
or
push
fisubrs
push
mov
dec
lods
jp
sarb
xor
aad
insb
push
push
or
ljmp
cmp
mov
in
call
push
test
dec
and
out
outsl
cmp
sub
mov
sub
into
adc
leave
or
jg
shll
mov
mov
push
das
test
dec
add
pop
add
js
dec
out
or
lock
mov
ret
rcrl
xor
xchg
in
jae
mov
mov
jp
pop
jo
mov
xlat
mov
test
outsl
mov
or
repz
lss
lret
je
add
mov
hlt
or
pop
loop
mov
sub
fwait
shll
and
push
sub
jle
and
pushf
mov
xchg
stc
mov
push
or
and
insb
jno
negl
xchg
sub
xlat
adc
xchg
dec
inc
dec
addl
mov
icebp
xchg
fisttpll
gs
pop
das
sub
cli
pop
mov
jmp
jo
aad
jl
cli
jg
dec
or
add
leave
or
xchg
pop
push
adc
out
xchg
cmovnp
fsub
push
add
mov
fidivrl
push
push
add
cmp
lods
fwait
pop
jl
pop
cmp
fistl
dec
pop
and
sbb
add
jmp
pop
mov
or
add
lods
movsl
add
mov
lret
and
ffree
out
pusha
aad
or
in
push
shll
inc
push
clc
in
notb
pop
test
enter
mov
stos
mov
aam
mov
mov
jl
loop
add
cmp
add
je
sbb
adc
lret
loopne
xchg
add
es
push
push
sub
mov
scas
test
stc
xchg
xor
dec
incb
ljmp
daa
or
test
das
inc
mov
testb
add
and
les
fs
pause
inc
popf
in
jg
out
dec
and
push
or
mov
clc
xor
inc
jmp
and
or
mov
je
ret
inc
js
jne
mov
sub
icebp
dec
sub
mov
in
xor
pop
xchg
testb
mov
mov
push
sti
mov
rorb
sarl
aad
jmp
lea
insb
mov
sbb
push
mov
sbbb
mov
cmp
je
rorl
ss
arpl
sbb
adc
dec
add
aaa
fbstp
inc
js
cmp
pop
jl
sub
sbb
adc
push
lret
inc
mov
add
int3
and
adc
mov
std
cmp
mov
cli
dec
xchg
mov
sar
out
jb
or
sbb
cmp
in
jg
pop
or
and
or
adc
repnz
sbb
jne
inc
orl
xchg
fstpl
nop
adcb
in
cltd
insb
mov
jae
push
stos
cmp
fwait
hlt
cmp
mov
mov
lcall
sub
out
or
mov
fstl
out
out
test
lds
sbb
shl
daa
jns
add
repz
nop
pop
in
pop
inc
scas
fcoms
test
movsb
xor
cmp
rcrl
loope
add
mov
push
lcall
hlt
aad
and
dec
jecxz
or
stos
mov
add
add
arpl
push
jns
mov
jmp
push
fildll
das
push
cmp
xchg
push
test
mov
add
dec
rorl
mov
out
and
mov
loopne
ljmp
mov
and
cwtl
push
mov
xor
xor
jae
test
push
lods
movsb
mov
lods
sarl
adc
jae
jmp
in
inc
decl
or
dec
aam
cmp
scas
incl
insl
in
out
popa
push
cmp
out
arpl
in
or
fsubs
mov
push
loop
fildll
fwait
rclb
ss
sbb
loope
dec
sub
sbb
out
xchg
int3
lock
jo
lahf
add
insb
xchg
dec
jo
jecxz
in
pop
inc
outsl
mov
fists
add
xchg
insl
popa
jo
xor
fcomps
jne
jbe
adc
xchg
sub
xorl
adc
imul
faddl
cld
rcll
je
aad
in
add
fnstenv
sub
mov
mulb
jl
inc
out
nop
xchg
mov
sub
adc
es
mov
cs
pop
sbb
xor
cwtl
mov
mov
dec
fwait
mov
andb
jp
sub
push
pop
xlat
in
fnstenv
lods
clc
repnz
rol
mov
ds
mov
cmp
mov
xor
lea
enter
push
or
hlt
mov
xchg
pop
mov
ret
lods
dec
popa
add
add
in
lcall
popa
dec
andl
inc
popf
jg
xor
js
add
enter
mov
jno
inc
int
mov
jl
int3
dec
pop
fwait
sbb
insl
cmp
or
shlb
loop
jle
jns
int3
bound
cmp
loopne
mov
call
leave
sub
jecxz
add
andb
mov
aad
push
sbb
cmpsl
cmp
in
aas
mov
or
aaa
bound
jmp
int3
outsb
ljmp
imul
mov
es
enter
jno
jmp
pop
push
push
push
and
rorb
xor
fbstp
or
repz
mov
adc
cmpl
pushf
or
enter
fildll
xchg
in
dec
cld
push
lods
mov
mov
fs
mov
sub
stc
rcll
add
push
std
inc
add
xchg
comiss
add
lock
ret
and
cmp
mov
out
leave
scas
jmp
test
pop
add
mov
inc
adc
push
add
pop
ja
add
mov
xchg
jns
mov
mov
outsb
or
leave
out
adc
lcall
sbb
pop
ja
icebp
mov
flds
dec
sbbl
push
xchg
adc
dec
and
add
mov
ja
stos
pop
les
cmc
xor
popf
mov
lcall
mov
inc
cmc
sahf
jmp
leave
xlat
cmc
bnd
notl
mov
jb
js
push
xor
dec
add
adc
mov
pop
xchg
outsb
test
inc
add
icebp
jp
stos
fs
mov
out
loopne
dec
jae
or
lods
xchg
ss
imul
adc
stc
pop
add
push
aad
mov
adc
pop
lods
xchg
roll
lret
jecxz
cmp
loop
jecxz
xchg
ret
jnp
adc
xchg
jge
mov
xchg
cmc
in
ficomps
xchg
jmp
fs
push
adc
mov
out
es
xchg
pop
rcrl
cmpsb
mov
aaa
xlat
nop
in
push
into
repz
pop
arpl
pop
mov
fiadds
mov
jbe
stos
in
pop
fwait
stc
loopne
mov
xor
and
mov
ficoms
shll
cmpsb
imul
sahf
and
dec
pusha
cwtl
sbb
inc
clc
jmp
push
sub
std
dec
jae
lds
daa
mov
mov
bnd
icebp
pop
cmovo
loopne
cmp
and
inc
ja
in
out
sbb
hlt
sbb
xlat
cld
shl
scas
fnsave
cmp
repnz
push
or
or
imul
fidivrl
sarb
push
xchg
xor
imul
xchg
mov
mov
sbb
clc
xlat
or
insb
and
adc
out
addr16
cmp
cmp
xor
imul
add
jecxz
push
jg
inc
xchg
or
sbbl
jg
dec
pop
jae
adc
dec
xchg
mov
ljmp
es
popa
lret
addr16
insb
push
xchg
clc
jg
xchg
add
sar
inc
stos
ss
icebp
test
pop
fbstp
mov
cmp
insb
das
xor
test
aam
push
ret
loop
pop
leave
push
dec
lds
pop
loopne
pop
stos
aam
lcall
lods
lds
pop
into
fisubrl
jecxz
cmp
add
cmp
test
rorb
dec
in
orb
push
in
and
add
sbb
push
mov
push
rcrb
xor
out
jmp
sahf
xchg
mov
dec
rol
pusha
leave
jg
push
cli
inc
enter
adc
push
push
js
cmpsb
aas
in
mov
pop
sbb
fisttpl
pop
into
push
ficomps
pop
pop
lret
aaa
push
comiss
inc
xor
loopne
add
scas
aaa
inc
cmc
pop
loop
aas
test
cmp
xchg
test
int
lods
out
lds
cwtl
dec
xlat
in
mov
cmpsl
mov
mov
mov
arpl
loopne
mov
lcall
ja
xchg
sarb
jne
lock
jmp
mov
imul
xlat
cmp
mov
sbb
cmpsb
inc
aad
in
or
pushf
loope
xchg
inc
adc
imul
lretw
mov
in
push
jmp
lahf
icebp
jecxz
mov
dec
dec
stos
mov
xchg
outsl
xor
into
cmpsl
fisttps
arpl
inc
cwtl
inc
add
sub
loope
out
mov
loop
push
adc
sub
bound
cmpsb
inc
sub
aad
arpl
aam
mov
xchg
je
push
pop
lds
sbb
jb
daa
repz
lock
mov
out
sbb
iret
xchg
push
or
lret
mov
pop
sbb
sub
stos
add
cld
xchg
sbb
rcrb
ftst
addr16
or
jb
dec
mov
push
cmp
nop
out
dec
cmp
mov
xor
and
fidivrl
adc
pop
jmp
cli
test
add
dec
xchg
ret
mov
sbb
arpl
jae
enter
cli
pop
inc
out
jb
out
stos
inc
icebp
jp
lods
aas
jge
cmp
mov
adc
or
push
fnsave
in
push
std
inc
ss
mov
mov
mov
scas
cli
xor
iret
cmp
lret
pop
pop
and
mov
fwait
push
popa
lock
pop
mov
mov
sub
les
aad
inc
adc
sarb
dec
dec
add
pusha
sub
das
pop
loop
addl
mov
imul
adc
lea
cli
jne
or
shufps
rcl
inc
add
popa
je
pop
jae
test
and
std
cld
stc
mov
mov
push
les
push
mov
adc
cltd
add
movsb
pop
aam
mov
clc
insb
lea
or
mov
pusha
movsl
test
movsb
fsubrl
add
mov
nop
inc
mov
xchg
pusha
rcr
loopne
xchg
xor
inc
test
nop
add
andl
fwait
imulb
sub
mov
dec
aam
pop
lds
xor
fisttpll
cmpsl
nop
movsb
iret
inc
sub
adc
push
iret
mov
push
mov
sbb
insb
idivb
mov
rcrl
push
pop
inc
adc
lret
xchg
popf
lods
rorl
in
daa
fisubl
cld
add
nop
pop
int
fs
das
sub
data16
xor
push
dec
xchg
mov
repnz
dec
pop
iret
push
std
jmp
dec
sub
jne
or
test
daa
jl
pop
movsb
sbb
les
hlt
push
mov
mov
lret
sbb
movhps
mov
loope
or
test
jecxz
mov
mov
jl
mov
push
xor
mov
mov
jns
and
bound
dec
sbb
xchg
push
iret
in
addr16
popa
lods
dec
imul
mov
fisttps
insb
xchg
mov
cmp
aam
sbb
jp
shlb
imul
int3
pop
or
and
push
adc
cmp
pop
rcrl
xchg
cmp
push
stc
cltd
or
and
adc
pop
mov
ret
mov
jnp
mov
pop
xor
fsubrl
add
and
mov
sbb
mov
insb
int
inc
pop
pop
enter
or
pushf
mov
dec
test
jns
nop
sub
xor
and
push
outsl
shrb
mov
pusha
mov
js
shl
or
pmulhw
lret
pop
fcos
inc
push
movsl
scas
xor
ret
inc
adcl
push
imul
inc
lock
mov
xorb
sbb
dec
mov
mov
incl
movsl
and
roll
es
aaa
decl
xchg
pusha
mov
arpl
and
mov
mov
adc
decb
aad
lret
jo
test
jp
aam
aaa
in
js
aam
push
cld
inc
push
in
ret
mov
inc
add
mov
push
and
dec
pop
dec
inc
das
xchg
dec
ret
fxch
repnz
adc
fs
in
out
stos
inc
mov
testl
cltd
test
fs
pop
sbb
outsl
rol
std
shlb
in
jno
cltd
jae
enter
mov
jno
cld
scas
pop
jecxz
mov
dec
pop
aad
and
je
sbb
sub
xchg
inc
call
notl
lea
mov
cmpsb
mov
shll
pop
fmuls
mov
fdivl
sahf
cmp
or
repz
or
xchg
dec
subl
fiadds
mov
leave
xor
sbb
mov
pop
mov
fcomps
cli
fstps
fiaddl
outsb
add
dec
cmc
pop
imul
mov
mov
stc
adc
dec
inc
movsb
int
fadd
je
xor
dec
inc
dec
inc
mov
bound
adc
pop
jbe
je
or
lods
cmpsb
mov
add
sbb
mov
fldlg2
lret
cli
scas
les
scas
mov
in
and
xor
xchg
mov
adc
jmp
shrb
or
outsb
movsb
stos
movsl
mov
ret
mov
sub
insb
pminub
cmp
ljmp
mov
adc
pop
or
test
mov
fisubl
jle
je
inc
push
sbb
scas
nop
fldl
sub
pushf
out
fisttps
mov
mov
fstl
cmpsl
bound
jb
in
cmp
ja
inc
or
pop
out
into
call
xchg
js
mov
test
insl
ret
and
mov
enter
xchg
daa
fadds
call
sub
or
aaa
lea
push
das
andl
ss
sub
xchg
clc
push
dec
fstps
cltd
rol
stos
mov
or
mov
pop
test
jo
test
popf
outsl
lods
xlat
add
pop
mov
inc
iret
add
fldt
loopne
dec
sbb
icebp
scas
add
xchg
das
pop
stos
ret
push
mov
repz
btl
lret
sub
mov
pop
or
add
adc
cli
lock
xchg
lods
arpl
add
aas
ret
gs
leave
shld
xchg
or
push
mov
mov
roll
mov
pop
fsts
bound
aas
das
push
subl
sub
xchg
insb
ret
mov
in
sahf
rcr
inc
das
push
push
fiadds
cmp
arpl
es
push
push
mov
xor
stc
cmpsb
pop
and
dec
sbb
aam
loopne
fcmovnu
mov
sbb
sub
sub
mov
insl
stos
fcmovbe
in
aaa
add
ss
shll
mov
sbb
add
rol
jne
test
in
jo
arpl
lods
dec
inc
xor
fs
mov
dec
xchg
ss
pop
jns
jae
imul
cmp
loop
dec
inc
icebp
dec
sahf
xor
adc
adc
sar
ret
adc
inc
jmp
outsb
mov
fwait
mov
cld
sbb
xlat
sarl
out
out
lretw
cld
mov
hlt
push
insb
xor
rcll
icebp
mov
ret
dec
mov
in
arpl
imul
push
adc
mov
loope
cli
scas
nop
jo
loop
daa
out
cli
or
in
stos
imul
and
add
adc
ja
mov
xor
pop
test
adc
in
mov
cmp
idivb
mov
popa
shlb
fisubrl
pushf
and
mov
xor
mov
ja
cmp
jo
loopne
in
je
jbe
add
xlat
mov
insl
or
jne
or
repnz
pop
fdivs
jmp
minps
dec
jp
mov
lret
adc
mov
sub
jae
mov
addr16
jbe
dec
pop
inc
mov
dec
repz
inc
add
add
clc
mov
ljmp
cmp
xorb
sarb
sbb
and
jnp
pop
xchg
jge
pop
imul
aas
jnp
or
dec
cs
stos
imulb
jg
xor
in
add
mov
gs
rclb
mov
outsl
movsl
and
cli
push
jnp
js
jp
push
or
test
out
mov
scas
lret
and
cmpsl
xlat
or
nop
push
movsl
fcoml
ret
leave
lcall
sub
xor
push
cmc
jecxz
cld
ret
std
pop
test
shll
repnz
pop
jg
mov
repnz
inc
in
data16
push
sub
xchg
jp
dec
dec
mov
cmpsb
mov
xchg
xchg
jl
test
and
push
leave
push
inc
push
aam
add
inc
enter
or
outsl
aas
or
dec
sbb
mov
movsl
and
scas
fwait
loope
push
push
adc
stc
outsb
dec
sbb
ljmp
or
rcrl
out
pop
mov
ja
sub
sub
and
in
outsl
xchg
mov
data16
jmp
sub
mov
lret
adc
outsb
rcr
dec
xor
inc
add
xor
or
scas
mov
pop
push
or
push
sbb
mov
sbb
sub
mov
ljmp
stos
sub
pop
add
adc
sbb
aam
jle
mov
inc
or
jl
lods
or
xchg
and
dec
movsl
mov
xor
cmp
add
and
scas
or
jmp
daa
push
in
pop
add
imul
popa
push
add
mov
jb
pop
sbb
daa
ljmp
icebp
stos
cmp
mov
xchg
shl
xor
es
xchg
lret
popa
popf
mov
loop
pop
xlat
jb
iret
add
xchg
cltd
push
fidivrl
out
xchg
cltd
popf
arpl
jo
test
les
cmc
cltd
sbb
gs
push
xor
popf
xlat
lcall
movsl
cmpl
mov
scas
jle
jno
les
fld
mov
xchg
xchg
add
xor
test
push
sub
jo
repz
dec
bound
repz
in
je
or
mov
mov
addr16
frstor
ret
je
lret
xor
inc
mov
mov
mov
pop
inc
cmp
cmp
call
xor
and
adc
pop
fldenv
inc
pop
or
push
loop
int
push
adc
and
aas
leave
jo
ja
inc
xchg
out
movsb
mov
sbb
push
jnp
jns
loopne
insb
sti
lret
test
fistps
jmp
sahf
scas
ds
movaps
popf
test
sarl
test
cmp
rcll
outsb
mov
jo
push
sbb
push
stos
shlb
popa
stos
jae
pop
in
movsb
out
cmp
movsl
fwait
xchg
stc
stos
cltd
fs
jno
divb
and
fmuls
scas
mov
cmpb
jns
fdivl
push
push
cmc
test
outsl
mov
sub
bound
sbb
aas
xor
mov
sub
je
xor
jg
inc
push
jo
test
pop
loop
and
dec
mov
popa
or
adc
mov
xchg
cwtl
mov
cmpsb
mov
clc
add
add
outsb
js
fcmovb
pop
lea
xor
xchg
mov
mov
adc
lret
push
cmp
push
fbld
mov
cmc
xchg
jb
into
daa
adc
imul
daa
notb
mov
dec
xor
adc
cmpsb
jge
or
jne
movsb
mov
outsb
mov
imul
arpl
add
add
sahf
inc
xor
xlat
sub
dec
lea
jge
cmp
ret
mov
shll
jnp
mull
mov
pmaddwd
addr16
notl
pop
popl
outsl
mov
dec
mov
mov
mov
pop
dec
scas
insl
push
scas
aad
cmp
lods
mov
repz
push
jbe
jg
sbb
xchg
popf
mov
mov
xcrypt-cfb
cmpsl
gs
pop
inc
sub
sbb
sbb
mov
cmp
push
popf
pop
jne
cmpb
adc
aad
xor
mov
loop
popa
jbe
and
hlt
cmpsb
sbb
dec
cmp
mov
je
popa
jecxz
stos
fistps
imulb
inc
out
mov
ja
cmc
jle
iret
rcr
and
arpl
mov
sub
stc
pushf
out
sahf
sbb
xor
xchg
mov
out
fcoml
lea
sub
pusha
jp
sarb
push
insl
xchg
sbb
jmp
xchg
pushf
fs
repz
dec
mov
test
movsb
sbb
imul
dec
xchg
mov
xchg
sbbl
out
or
clc
pop
lock
scas
sbb
les
pop
lock
mov
lods
movsb
mov
sub
icebp
jmp
sbb
adc
push
clc
pop
test
sbb
js
jp
and
repz
cmp
adc
addl
sarl
test
dec
or
jg
inc
repnz
and
xor
shr
lcall
xchg
stos
jge
add
lea
jecxz
cld
ljmp
pop
push
into
repnz
xchg
push
icebp
arpl
dec
les
sti
jle
shll
inc
pop
jle
clc
jecxz
test
sub
ja
cmp
ret
xchg
pop
test
dec
icebp
cld
xorl
ficomps
inc
lods
jns
push
fwait
iret
xlat
cli
sbb
xchg
push
js
roll
adc
scas
xor
stos
sarl
add
cwtl
jae
cmc
and
popa
mov
pop
or
ljmp
aaa
les
cmp
cmp
nop
push
pop
fiaddl
sub
pop
adc
pop
jmp
faddl
les
stos
inc
into
test
pop
or
out
in
xor
adc
push
andw
push
nop
inc
xor
shrl
pop
test
adcl
inc
or
sti
xchg
decb
dec
sbb
mov
ds
and
mov
jne
nop
mov
push
mov
jnp
std
mov
push
js
cwtl
xchg
pop
dec
push
mov
xchg
xchg
cmpsl
or
mov
and
data16
and
ja
inc
or
cmp
mov
ljmp
shll
cmp
cmp
mov
js
andb
aas
cmp
test
push
test
cmp
jmp
mov
xor
sahf
lret
in
dec
sbb
icebp
leave
movsb
lahf
jno
test
outsl
lds
fistpll
and
mov
mov
jle
movsl
enter
insl
lock
inc
add
call
sbb
xchg
hlt
lock
xchg
push
xor
scas
add
inc
in
or
imul
mov
call
sbb
out
add
inc
xor
mov
int
out
or
mul
inc
xchg
sti
or
xor
shl
or
add
pop
pusha
xor
cli
push
push
mov
lds
cli
imul
andl
lcall
loope
sub
fwait
loop
pop
aam
xchg
popa
jge
dec
xchg
mov
movlps
lahf
aaa
test
ret
int3
pop
mov
mov
lahf
xor
neg
mov
adc
mov
in
sbb
xchg
xchg
fdivrs
out
addb
xchg
and
movsl
push
or
jne
xchg
xor
jnp
dec
and
sub
ss
shrl
mov
mov
xchg
lret
dec
jp
call
push
dec
sub
and
aam
mov
cmpsb
cld
jbe
scas
lds
xor
add
cmp
pop
es
push
inc
sbb
mov
add
popl
lret
mov
mov
ljmp
xchg
and
bnd
fcmovu
ficompl
mov
mov
fwait
testl
ficomps
and
dec
popa
sub
inc
repz
addr16
push
xor
and
dec
xchg
sub
push
sarl
or
cmpsl
push
lahf
xor
xchg
pop
dec
imul
test
or
xchg
mov
and
inc
push
mov
dec
cmp
pop
lcall
push
xor
adc
mov
out
cli
push
fcmovbe
mov
cs
aam
jns
push
test
loop
or
jno
sub
xchg
sub
jmp
int3
orl
in
jno
testb
cmp
adc
xchg
inc
inc
lock
pop
jb
or
pop
push
lds
mov
add
mov
jb
mov
in
jp
nop
inc
imul
das
fs
sbb
or
mov
pop
sub
mov
jg
push
insb
add
imul
insl
mov
pop
jmp
ficomps
inc
mov
scas
mov
jp
repnz
xchg
push
dec
add
into
scas
mov
sub
lea
add
ret
jb
pop
jecxz
dec
push
adcb
addr16
dec
ss
pop
scas
mov
pop
aaa
xchg
test
not
es
mov
int3
mov
imul
or
xor
jg
sbb
in
lds
negl
movsl
aad
arpl
mov
es
cmp
adc
xchg
lds
dec
push
pop
push
mov
push
lea
jae
jnp
test
call
mov
jns
inc
xor
add
mov
xchg
lock
pushf
mov
fsubl
rcrl
jl
push
loop
jo
pop
or
test
mov
iret
nop
adc
add
inc
adc
cmp
pop
xor
popf
pusha
in
mov
mov
mov
push
rcrl
jnp
push
inc
out
adc
push
into
movsb
leave
les
inc
clc
inc
pop
xor
add
jg
push
push
out
popa
stc
mov
mov
in
dec
mov
jns
xchg
shrl
pop
aaa
test
sub
or
cld
rcr
idivl
rorb
imul
in
add
cmp
out
xlat
push
lock
and
add
mov
int3
pop
xchg
outsl
loop
lods
or
mov
in
pop
dec
dec
shr
jnp
add
lahf
mov
out
fildl
lret
and
jge
xor
add
or
jb
iret
cltd
int
shr
sub
mulb
sbb
cwtl
mov
test
dec
cwtl
repnz
mov
mov
mov
push
xchg
mov
movntps
cmc
sub
and
mov
or
and
ret
icebp
aam
adc
mov
pop
or
ret
std
enter
decb
mov
fwait
cmp
mov
dec
inc
iret
dec
loope
adc
mov
test
cmc
xchg
sti
jl
pop
or
mov
sti
and
mov
mov
ret
mov
nopl
cmp
or
cwtl
out
lock
and
xchg
xor
ds
popf
sbb
sahf
lcall
sbb
jb
and
mov
mov
pop
out
mov
adc
rcrb
in
jb
and
pop
and
dec
xor
jg
mov
lds
cmc
mov
je
das
inc
xchg
ja
enter
stos
sub
test
xor
push
mov
addr16
push
or
sub
xchg
and
imul
sbb
mov
jmp
fisttpll
imul
ljmp
xor
mov
sbb
add
fsubrs
sub
mov
test
add
inc
xor
or
adcb
ret
mov
lods
jbe
inc
popf
or
push
inc
pop
insl
jns
dec
movsl
icebp
mov
cltd
xor
sbb
or
nop
cmp
sarb
repnz
test
insl
push
arpl
sub
dec
and
sub
mov
mov
push
dec
fsubrl
adc
insl
cs
fmull
xchg
lcall
pop
fidivrs
imul
sar
in
mov
push
inc
stos
into
mov
idiv
divb
or
mov
dec
push
inc
je
mov
jne
adc
fidivrl
out
mov
mov
cli
movsl
fwait
lret
inc
fbld
inc
sub
test
enter
pop
das
je
mov
insl
or
jge
call
jae
push
jnp
adc
out
movsb
scas
xchg
sub
fsubp
adcb
cli
in
adc
push
adcb
inc
ret
les
sbb
cs
cld
mov
xchg
popf
mov
and
aam
add
cmp
test
xchg
inc
lea
cmp
idivl
test
sbb
ss
xor
push
mov
clc
mov
mov
or
inc
les
imul
sub
test
pusha
in
outsl
inc
ljmp
je
fdivs
lret
pusha
inc
movsb
jns
mov
add
je
cmpsb
jl
xor
jl
popf
push
cmpsl
rclb
out
pop
jmp
mov
or
sti
dec
push
cmpsl
movb
xor
lods
and
sbb
push
add
sbb
add
aam
addr16
in
mov
adc
cmp
dec
divl
inc
cmpsl
icebp
jecxz
aam
mov
sub
rcrl
inc
ljmp
fucom
mov
pop
shlb
nop
xchg
mov
jmp
jnp
aas
adc
in
sbb
movsb
inc
inc
sub
cmp
int3
or
into
xchg
insl
ds
sub
push
sbb
adc
punpcklwd
outsb
mov
or
fwait
sbb
add
jne
cli
mov
hlt
xor
std
daa
jmp
and
cmpsb
das
andl
jno
fistpl
inc
faddl
sbb
out
xchg
stos
outsl
mov
sub
scas
add
add
or
adc
pop
scas
arpl
mov
jecxz
or
in
nop
call
mov
flds
jecxz
mov
or
xchg
popf
jp
sbbl
scas
push
rorb
outsl
sti
into
mov
leave
mov
pop
and
cltd
or
pop
insb
inc
xor
push
cmc
ss
loope
aaa
mov
movsl
es
mov
jl
rcr
cmp
adc
jnp
lea
mov
sub
sarl
mov
inc
call
dec
xacquire
mov
inc
dec
mov
arpl
gs
xchg
cmp
inc
js
div
pop
add
cmp
jb
int
inc
loop
lcall
incb
push
in
mov
movsb
and
repz
subb
jae
push
repz
into
sbb
mov
imul
or
lret
inc
and
lock
sbb
sbb
push
sbb
lcall
mov
iret
fidivl
inc
fcoml
jle
ja
inc
inc
push
iret
pop
dec
mov
daa
adc
mov
ja
insb
xor
rcrb
fsubrs
lods
mov
mov
pop
mov
lcall
inc
push
sbbb
cmc
xor
mov
push
repz
mov
subb
stos
fisttps
pop
mov
mov
dec
push
xor
jecxz
repnz
aad
into
lea
fwait
stos
out
and
mov
xor
jae
push
mov
cmp
xchg
sbb
push
popf
dec
cmpsb
imul
and
sbb
push
out
pushl
fsts
push
mov
repnz
repnz
jl
mov
jne
jmp
cmpsl
outsl
je
xor
mov
mov
mov
mov
sub
test
cmpsl
stc
sbb
js
cltd
sub
pop
push
or
fadd
test
shrl
jo
ret
pop
fisubrs
pop
jle
test
xorl
lahf
in
rorl
cmpb
inc
pop
paddb
or
add
jge
xor
insl
sbb
cmp
lret
push
das
sub
mov
movsl
push
pop
jae
xor
dec
push
dec
push
pop
ss
xor
or
push
sub
xchg
loopne
mov
dec
xchg
loope
mov
inc
xlat
into
rclb
mov
mov
or
inc
daa
jne
ror
and
out
or
jg
mov
loope
xor
adc
adc
mov
lds
cmpsl
push
sub
inc
add
rolb
mov
out
lods
jl
subb
vsqrtpd
stc
cwtl
xlat
cmpsl
lcall
movsb
scas
pop
test
push
dec
stc
bound
mov
cltd
xchg
jg
fwait
xchg
pop
cmp
clc
push
out
xor
pop
pop
into
popf
inc
push
nop
faddp
inc
aas
icebp
in
div
imul
jg
mov
iret
dec
out
in
sti
xor
xor
sbb
and
sub
sub
sbb
iret
push
push
xchg
mov
xchg
out
add
mov
fadds
sbb
cmp
movsb
xchg
and
lcall
jns
add
cld
pop
in
call
adc
push
and
lcall
push
imul
in
xchg
bswap
jns
enter
fidivs
cltd
push
sub
push
pop
adc
jne
pop
fnstenv
and
push
out
jl
mov
test
sub
jbe
lods
inc
xchg
test
push
je
fildl
xchg
pop
mov
movsl
movsb
xchg
xorb
add
sub
sbb
lods
pop
cs
fs
sub
inc
add
test
cmp
pop
movsb
insb
lods
push
mov
xchg
testl
out
push
ror
or
call
fsubl
jg
movsl
inc
imul
inc
adc
xor
sbbl
loop
push
jl
push
js
fcoms
stos
cmpl
add
mov
mov
test
les
jg
cmp
and
lret
repz
andl
push
insb
xchg
or
aad
loop
icebp
mov
mov
push
or
or
ret
loop
cmpsb
aas
popa
pop
into
pop
cmp
xor
xor
dec
mov
inc
xchg
sbb
mov
aad
insb
and
adc
lret
leave
arpl
mov
lcall
popl
inc
icebp
add
dec
mov
pop
mov
adc
leave
add
sub
xchg
movsl
test
push
jne
push
jno
aad
das
js
enter
popf
mov
dec
jl
push
rcrb
push
push
jg
jbe
add
xchg
jbe
daa
dec
sub
sub
rcr
ror
mov
xor
in
clc
into
xchg
sbb
ror
and
xor
mov
fs
adc
imul
fildl
inc
dec
cli
jmp
mov
jae
jns
stc
cmp
sti
cmc
mov
pop
test
mov
push
fildll
ror
xchg
neg
mov
mov
jecxz
adc
loop
pop
out
jns
mov
push
clc
stc
and
or
xchg
shl
pushf
or
xchg
pushf
out
ljmp
mov
jle
and
fisttps
lods
push
out
jo
cmc
loop
repz
outsb
mov
dec
mov
ja
repz
sub
sbb
and
flds
jno
arpl
int3
xorl
jmp
dec
push
xchg
sahf
inc
mov
mov
mov
lahf
pop
ret
and
test
or
mov
xor
lods
loope
dec
adc
xchg
adc
dec
xchg
lret
xor
mov
dec
and
sub
std
xchg
xchg
lock
bt
sbb
hlt
in
sti
sbb
fimull
xchg
pop
fiaddl
push
in
lret
stos
daa
inc
push
gs
pusha
pop
xchg
lods
pop
sahf
inc
and
add
inc
js
push
mov
cld
pop
clc
and
xor
adc
enter
dec
scas
push
sbb
clc
arpl
jno
cmp
xchg
sub
mov
testl
mov
pushf
xor
xchg
pusha
ret
or
push
inc
cs
dec
pop
repnz
cld
add
scas
and
int3
and
fs
cmpsl
mov
loopne
pop
aaa
xchg
movsl
cmp
int3
xchg
sub
ficoml
ss
add
arpl
out
push
ja
clc
mov
jle
jmp
push
jp
dec
mov
loope
xchg
adc
adc
inc
or
orb
add
lock
enter
pop
insb
inc
stos
out
std
pop
and
xor
push
lods
mov
testb
xor
adc
clc
mov
lcall
sbb
cmpsb
gs
int3
mov
fwait
pop
cmp
sbb
test
scas
ds
jo
inc
mov
daa
lret
inc
aam
inc
movsb
fstpl
loop
ja
std
lret
mov
movsb
mov
sub
jne
mov
in
nop
mov
sub
mov
loopne
push
adc
insl
jp
shll
mov
adcb
lods
xor
pushf
aad
aam
lea
mov
push
in
xchg
mov
adc
stos
scas
addl
enter
mov
clc
mov
loope
mov
push
lock
call
lods
movsl
mov
mov
icebp
adc
jmp
popf
mov
aam
pop
mov
pop
inc
cmpsl
add
lret
jmp
inc
repnz
loope
sbb
push
sub
inc
lods
sub
inc
ret
repnz
adc
xor
lahf
sbb
lock
fcmovnbe
or
or
lods
faddp
push
adc
arpl
fisttpll
fmulp
scas
sub
push
add
movsb
pop
dec
add
push
outsl
rolb
adcb
sahf
mov
add
rorb
aaa
cs
stos
mov
scas
leave
into
xchg
imul
cltd
xchg
dec
popf
jg
adc
adc
popf
pushf
out
and
les
fnsave
push
or
std
pop
mov
out
cmpsl
jo
daa
ret
js
lea
push
add
aaa
sbb
clc
xchg
gs
pop
stos
fstpt
mov
mov
xor
mov
scas
mov
cmp
mov
out
stos
outsb
jge
hlt
cmp
mov
outsb
fsubs
sbb
sub
fstpt
ljmp
fbstp
aad
sbb
jno
pop
pop
pop
bnd
std
cmp
cld
pop
jle
subb
jle
mov
lahf
shlb
clc
nop
jle
jns
and
call
popl
imul
daa
repz
aas
inc
sub
hlt
mov
cs
inc
mov
mov
mov
into
loop
in
jecxz
mov
mov
push
in
cld
cmp
dec
in
int
mov
pushl
fildll
out
push
enter
jno
andl
ret
popa
orl
jno
push
popf
lcall
les
stos
mov
adc
push
loopne
cmpsl
int3
xlat
sbb
clc
hlt
or
es
xchg
mov
test
mov
sbb
cmpsl
or
lahf
pop
pop
loop
insl
mov
jbe
pop
pusha
or
rclb
data16
js
orl
push
sbb
inc
arpl
addr16
out
xchg
cwtl
popf
or
mov
xor
jle
push
inc
push
clc
and
imul
aaa
out
jbe
sub
add
scas
into
aad
dec
mov
adc
cmp
call
popf
test
add
fists
sbb
mov
add
loop
pusha
imul
mov
push
jns
ficomps
xchg
jae
and
mov
das
push
add
ljmp
cs
xchg
cmp
test
mov
inc
cmpsl
sbb
sub
xchg
addr16
fimull
hlt
ret
mov
in
ss
mov
mov
pop
mov
out
xchg
filds
push
std
lret
insl
jnp
lds
cld
cs
mov
jg
adc
ret
xor
popa
sbb
cli
call
mov
repz
push
cs
add
xchg
cmp
cmc
ret
sub
lods
jb
cmp
lahf
test
fsub
and
sbb
aam
ja
out
pop
xchg
cmp
push
scas
in
push
ds
js
xor
aas
les
lret
lea
in
push
leave
sub
adc
sbb
dec
and
les
mov
das
dec
cmp
ss
je
jmp
loope
mov
jns
das
adc
add
loop
fldenv
sub
enter
outsl
push
cmp
and
or
fidivs
mov
movsb
xchg
sbb
in
pushf
dec
negb
out
xor
sub
xchg
sub
push
cmpsl
movsl
insb
or
scas
scas
xchg
pop
loope
mov
testl
daa
cltd
xor
sbb
sub
dec
ljmp
cmp
iret
cmpsb
cmp
leave
js
bound
sub
mov
mov
cmp
fldt
jmp
inc
repz
pop
cmp
ss
addr16
lret
sub
sahf
shrl
imul
inc
and
sbb
cmc
sub
jl
mov
fisttpl
pop
mov
mov
es
daa
imul
enter
fcomp
sub
pop
ljmp
mov
or
bound
pop
loop
adc
repz
ret
pop
inc
cld
pop
fidivs
mov
and
int3
cmpsb
outsb
lea
lahf
and
pop
xchg
mov
loope
mov
cs
push
enter
loop
push
ljmp
jg
add
insb
cmc
xchg
pop
sub
push
sbb
dec
out
xchg
xchg
sub
push
aad
pop
mov
cmp
fnsave
inc
pop
or
daa
xor
std
xchg
or
jnp
loope
inc
or
std
xchg
insb
lret
repnz
push
pop
mov
call
xor
dec
mov
jl
leave
mov
data16
adc
lods
xor
divps
pop
cmpsb
mov
inc
and
les
jae
dec
pop
frstpm(287
add
xchg
in
dec
sbb
sbb
mov
pop
jns
push
jb
xor
inc
and
push
sti
incl
inc
mov
cltd
mov
adc
mov
out
mov
mov
mov
adc
mov
sbb
dec
pop
xor
jmp
adc
jge
fwait
repz
xchg
hlt
dec
rorl
fcmovne
push
xlat
rcrl
pop
stos
cmp
or
sahf
andl
adc
mov
sarl
push
loopne
dec
adc
ror
data16
out
and
push
js
pop
rclb
les
lea
repnz
sub
cmp
xchg
sqrtps
pop
je
scas
adc
aas
int
dec
lock
popa
push
ljmp
mov
sbb
shl
pusha
dec
int
je
aaa
nop
xchg
imul
sub
outsb
js
jp
cli
dec
mov
ret
pop
adc
movsl
ljmp
mov
xor
pusha
sub
mov
jecxz
dec
jp
lods
mov
mov
mov
in
sub
push
daa
xchg
das
push
clc
pusha
and
xchg
pop
cmp
testb
inc
push
hlt
sbb
insl
pop
inc
sti
imul
mov
mov
loop
mov
adc
sbb
add
jne,pn
lods
pop
jg
sti
xlat
das
sbb
dec
ret
imul
rcll
cmpsb
es
pop
cwtl
push
adc
ds
mov
scas
pop
jbe
jne
cmp
cwtl
and
inc
mov
fldenv
shr
es
sbb
sbb
fldl
push
cmpsb
repnz
mov
jne
sub
lods
inc
cmpsb
lahf
mov
or
xor
iret
cmp
into
jae
mov
mov
sahf
xlat
ss
popf
aad
scas
out
jmp
mov
fwait
stos
push
pop
or
inc
cmpb
dec
jb
in
or
and
mov
inc
setae
jo
mov
push
clc
dec
xlat
cmpsl
out
cwtl
mov
into
iret
ror
inc
xchg
adc
out
daa
mov
and
mov
mov
sti
shl
int
leave
es
and
adc
je
fsubrs
adc
out
fstpl
sub
in
mov
aaa
adc
xor
std
and
out
xchg
in
cmp
push
out
and
lock
push
orb
loopne
int3
sahf
inc
lcall
imul
sahf
push
gs
xor
jle
jmp
jbe
out
loop
pusha
cmp
in
sub
pop
das
shrl
outsl
pop
jno
jns
mov
movl
inc
push
nop
and
mov
test
popf
fwait
icebp
int3
mov
clc
pop
fisubrs
push
adcl
push
arpl
mov
fnstenv
sub
xor
sub
mov
repnz
adc
mov
fs
xchg
mov
ljmp
mov
daa
es
pop
mov
les
jb
pop
test
subb
or
in
pop
push
adc
fidivs
data16
jecxz
and
arpl
jg
out
adc
sub
adc
add
or
aam
stc
addr16
push
jbe
push
push
and
scas
aad
mov
addr16
iret
mov
sbb
xor
rol
pop
pushf
pusha
sub
mov
in
mov
movsb
nop
cmpsl
mov
in
push
sub
cmpsb
xchg
jle
mov
mov
mov
inc
or
inc
inc
sbb
dec
mov
xchg
dec
dec
adc
lds
rolb
inc
add
inc
bound
xchg
xchg
jp
cld
adc
lahf
adc
dec
sbb
out
inc
push
bnd
ja
push
jno
mov
cmc
or
test
xchg
shl
jle
jo
push
inc
or
js
mov
dec
jp
mov
mov
pushf
iret
add
into
pop
in
jb
push
out
xor
or
lcall
int3
incb
fcomps
js
push
jmp
fstpl
adc
test
rcrb
mov
mov
insl
cld
sbb
sub
adc
dec
jmp
jns
fcmovu
jo
jae
mov
fsub
or
lock
in
adc
pop
push
sbb
or
insl
and
imul
xor
xor
xchg
add
push
mov
mov
icebp
add
mov
push
popa
dec
inc
mov
pusha
jb
lods
in
pop
inc
and
and
add
adc
sbb
dec
jns
dec
sub
rcrb
out
icebp
movsl
sbb
mov
jo
push
lahf
sub
loop
xchg
aaa
add
or
mov
shlb
stc
or
or
jge
lret
adc
test
daa
mov
cmpsb
xchg
push
adc
pop
mov
and
push
or
notl
sub
xchg
xchg
inc
sub
jns
jae
ljmp
outsb
mov
inc
add
sub
dec
sbb
mov
divl
sub
mov
sub
repz
cmp
dec
bound
sbb
aam
mov
jns
lea
stc
loop
or
dec
mov
sbb
jp
pop
sbb
xor
jge
out
mov
movsb
stos
inc
out
jmp
test
cmp
mov
mov
lcall
fiaddl
inc
push
ds
push
mov
divl
rorb
ret
mov
das
fisubs
and
mov
cmp
cmpsl
add
push
mov
loopne
fisubrs
loopne
int
loope
dec
mov
mov
mov
jg
mov
fstps
mov
push
in
pop
bound
cli
add
sub
cmp
pop
push
lods
jno
movsb
cmp
cmp
mov
lahf
or
mov
pop
lods
mov
cs
aaa
loope
mov
popa
movsb
dec
inc
mov
mov
inc
iret
pop
pop
pop
and
pop
mov
fwait
lcall
jno
out
fcoml
mov
xor
cmpsl
dec
in
push
cmp
ret
mov
sarb
in
in
stos
insb
pop
jne
xor
xchg
push
lock
bound
jo
jno
sub
imul
in
inc
inc
negb
fwait
jnp
test
in
popa
lods
and
out
xor
push
arpl
sub
or
push
pushf
out
je
jg
ret
inc
pop
add
xlat
cmpsb
push
pop
in
cld
add
test
mov
aam
js
push
addl
pop
fmuls
inc
lahf
pop
dec
fcmovb
sbb
rorl
mov
test
sub
mov
je
add
mov
sbb
fisttpl
hlt
test
jb
add
popa
and
arpl
fiadds
mov
fdivl
loop
cmp
inc
xor
sbb
mov
dec
cli
add
mov
sarb
adc
icebp
adc
mov
andl
pushf
dec
out
test
mov
push
push
popf
dec
popa
cld
mov
pop
subb
xchg
ret
popf
add
mov
jb
iret
fsts
or
or
pushf
push
ret
mov
aam
cmc
jecxz
cmp
mov
lret
sub
ret
lret
or
inc
sbb
cmp
add
adc
imul
out
std
cwtl
int3
rcrb
jecxz
mov
cmp
js
loope
cmp
sub
hlt
fcoml
adc
fiaddl
fwait
sahf
inc
inc
lock
xor
sub
in
cwtl
push
adc
cmp
mov
cmpsb
int3
sbb
scas
mov
ljmp
lds
push
and
push
mov
lret
dec
add
pop
pop
push
inc
insl
push
aas
adc
lds
iret
jns
sbb
aas
adc
ss
adc
hlt
mov
or
xchg
data16
pushf
hlt
ljmp
pushf
sbb
jecxz
or
cmp
adc
rcll
cltd
xchg
push
mov
pop
stos
pop
push
lcall
xchg
or
jle
sbb
dec
and
loopne
stos
pop
js
sub
lcall
cli
mov
lcall
mov
jns
cmpsl
call
and
add
or
loop
ljmp
cmp
dec
jae
outsl
xchg
vmovupd
mov
shlb
push
mov
call
mov
mov
arpl
mov
adc
jb
sub
xor
dec
icebp
nop
scas
fs
lds
in
mov
js
lahf
mov
jbe
cld
mov
push
jnp
scas
popf
add
sbb
std
sbbb
outsb
in
sbb
push
mov
push
lods
sub
push
in
out
push
push
dec
and
add
push
fcmove
pushf
data16
addr16
orl
and
lret
jp
adc
lret
add
pop
or
insl
aam
add
scas
push
pushf
or
imul
out
out
adc
sub
jnp
mov
inc
push
bound
movsb
rorb
or
pop
mov
dec
stos
mov
pop
ds
or
dec
outsb
mov
faddl
lock
cld
pop
xor
loop
fidivl
jge
adc
xlat
leave
sub
insl
les
cmp
fadd
pop
in
icebp
add
rep
loope
cli
sub
loope
ss
jmp
adc
pop
mov
fwait
mov
mov
aad
mov
dec
xchg
fiaddl
imul
jae
movsb
shll
dec
pusha
in
jge
cld
out
iret
and
push
sbb
pop
push
mov
cmpl
pop
inc
arpl
mov
popf
pop
xor
cmp
insb
lcallw
mov
mov
cld
cld
cs
shr
loope
xchg
stos
adc
jbe
xchg
or
insl
lods
femms
sub
jae
scas
fcomp
jg
sub
xor
das
mov
stc
sahf
mov
testb
mov
mov
loope
add
add
sbb
hlt
xchg
add
or
repnz
mov
ja
hlt
movsl
idivb
mov
push
sbb
push
jno
mov
lock
inc
push
jge
push
cs
mov
sbb
jmp
dec
inc
dec
mov
cmc
jne
lahf
dec
iret
in
sub
adc
sti
dec
lahf
insl
fs
loope
insb
lret
lods
div
jnp
aaa
rolb
dec
jbe
cmp
mov
gs
mov
icebp
cmp
sub
in
xchg
cmpsl
add
mov
cmp
sbb
add
cmp
repnz
jo
and
std
mov
cmc
jl
outsb
cwtl
pop
fcoml
sub
lahf
mov
in
in
out
imul
jp
xor
xchg
adc
insb
pusha
xchg
jecxz
scas
jle
mov
clc
jne
ja
mov
push
jb
fdivrl
or
decl
data16
cmp
cmp
sub
and
jae
lahf
mov
insl
sbb
mov
mov
push
insl
and
loope
push
dec
mov
xchg
out
aaa
lahf
dec
fisttpl
lock
ficoml
les
nop
in
cmp
nop
addr16
jno
sbb
out
inc
pusha
rclb
add
outsl
lods
movsb
cmp
adc
inc
pop
gs
inc
xor
adc
push
mov
xchg
push
or
jecxz
daa
pop
sahf
scas
xchg
enter
shr
mov
pusha
fsubrl
jae
cwtl
and
shl
add
fistpl
fisttpl
xchg
fldt
cs
push
movsb
jns
repz
mov
lock
mov
je
add
mov
xor
dec
jbe
scas
mov
dec
adc
xchg
sbb
mov
lret
clc
xor
rcrl
jmp
cmp
std
and
pushl
shll
lret
lods
push
dec
dec
shl
call
mov
aad
jge
call
sarl
cmp
in
and
push
dec
icebp
jnp
adcl
xor
dec
dec
incb
xchg
pushf
mov
in
arpl
std
cmpsb
insb
call
and
xor
lahf
dec
scas
mov
ja
xchg
fbstp
int
in
sbb
rclb
hlt
inc
testb
ljmp
jb
test
or
loop
xchg
lds
lcall
sbb
push
xchg
ds
les
push
jno
xchg
mov
sub
stos
jmp
push
arpl
int3
gs
xor
das
es
daa
mov
fimull
mov
add
jp
mov
gs
insl
mov
xchg
sub
sti
pop
insb
into
pop
mov
lock
inc
dec
ret
and
mov
xchg
cmp
hlt
in
lds
sub
in
ficompl
xchg
and
cwtl
and
xchg
ret
mov
dec
push
fwait
cld
jp
gs
in
sub
out
lods
sbb
mov
and
sar
insb
sub
cmp
push
sarb
insl
inc
or
xchg
sub
sub
add
add
xchg
gs
mov
scas
xchg
in
inc
lahf
loope
mov
ss
cmpsb
cmp
leave
movsl
scas
sbb
cld
mov
or
inc
inc
pop
lods
data16
and
push
inc
inc
cs
mov
mov
cltd
jmp
xor
ljmp
sub
fwait
scas
popa
std
or
movsb
jl
push
add
popf
sarl
out
push
lods
xchg
mov
or
and
rorl
push
imul
insl
xor
rolb
cwtl
in
mov
or
gs
insl
lcall
bound
test
and
loopne
adc
repnz
and
ret
lods
mov
pop
dec
push
add
xchg
push
hlt
sbb
sbb
jne
lods
hlt
scas
aaa
xor
jbe
cmc
test
vcmpps
cmp
push
push
jg
push
xchg
sub
or
dec
xor
nop
fildl
xchg
mov
dec
icebp
ss
lcall
adcl
dec
mov
push
fnstcw
push
cli
jbe
pop
ret
jmp
les
cmp
inc
jbe
cmp
jle
sub
xor
out
sub
fdivr
push
push
mov
imul
je
pushf
cmp
add
pusha
loop
sar
clc
push
mov
lods
sub
outsl
clc
cmpsb
mov
cmp
mov
jecxz
cltd
mov
add
pusha
leave
mov
push
jmp
and
je
mov
pop
ds
inc
mov
enter
aaa
ror
lret
lds
add
sub
stos
sbb
imull
dec
stos
sub
sub
fidivs
in
add
stc
fstl
mov
mov
xchg
push
loop
jb
adc
mov
or
psubd
jne
jp
jp
pusha
sub
xchg
out
test
fsts
and
push
push
addr16
daa
sub
dec
and
adc
and
mov
dec
sub
mov
xchg
dec
jge
add
jbe
add
aad
mov
and
gs
cmp
mov
in
notb
inc
sub
mov
xchg
mov
mov
dec
dec
int3
adc
out
sbb
pusha
pop
inc
jl
insl
mov
test
push
pop
or
mov
dec
mov
pop
push
mov
aam
pop
in
xor
mov
xor
pop
or
hlt
mov
lea
inc
adcl
sti
pusha
cmp
or
or
aad
xchg
mov
mov
cmp
aad
stc
jae
add
inc
loope
mov
bound
pop
adc
bound
loopne
call
cmp
sbb
xor
cmp
dec
dec
into
mov
pusha
mov
mov
mov
in
and
insb
xchg
mul
daa
call
mov
sub
mov
lcall
adc
jno
xor
pop
or
sbb
ret
add
fdivp
mov
cmpsl
and
dec
in
mul
and
aam
subl
push
ss
add
mov
fldl
xchg
gs
lcall
sub
push
hlt
aad
mov
pop
sbb
jne
repz
xchg
adc
bnd
pusha
jmp
push
adc
out
pop
movl
mov
in
inc
inc
jb
pop
pushf
mov
xchg
xor
push
pop
cld
and
les
data16
mov
cld
push
or
mov
mov
mov
mov
ds
les
xlat
push
fidivrs
icebp
push
lret
push
add
outsb
pop
pop
or
out
jecxz
cli
sbb
gs
dec
aaa
std
stos
aaa
out
stos
movsb
inc
loop
cmp
xchg
adc
cmp
dec
xchg
xor
dec
ret
sbb
lret
inc
fstpt
int
fiaddl
cmp
les
jbe
mov
cld
push
mov
ljmp
mov
xchg
popf
das
sbb
mov
cmp
and
adc
cmp
or
add
xor
cmp
cli
pop
sbb
shlb
or
xchg
or
fs
sarb
test
aaa
sahf
mov
dec
jns
mov
mov
out
jge
mov
pop
data16
in
add
aaa
push
and
add
adc
loope
sarl
xlat
dec
adc
nop
ret
insl
cmp
and
dec
das
frstor
or
aas
or
mov
jb
pop
iret
ljmp
inc
pusha
xchg
lea
scas
pop
sti
xlat
jno
out
imul
es
out
mov
pop
mov
xchg
fwait
aas
sarb
inc
ficoms
jno
xor
fimull
inc
pop
hlt
or
cltd
xchg
push
popa
das
xorl
or
jae
jbe
and
orl
push
pop
xor
js
bound
sub
inc
lahf
dec
mov
xchg
ret
mov
adc
add
daa
pop
lods
jne
push
xchg
xchg
fsubrs
push
popf
sub
dec
rcll
mov
mov
add
or
fcmovne
sbb
or
aaa
and
xchg
adc
add
icebp
and
adc
jle
rolb
sbb
inc
sbb
and
adc
add
adcl
xchg
push
test
jg
cmpsb
pop
mov
pop
test
lret
sbb
ja
inc
xlat
push
dec
jmp
pushf
aad
rcl
xor
sub
lret
xor
dec
xchg
int3
cli
jge
out
dec
xlat
jle
into
rcl
adc
mov
sarl
in
push
xor
das
out
and
fnstsw
dec
mov
sahf
loopne
sbb
je
sub
fidivs
test
xor
cmpsb
or
cmp
lcall
lea
sbb
and
dec
out
or
sub
sub
jns
les
daa
cltd
sbb
test
shrb
movntps
ljmp
and
xchg
pop
add
in
lods
lahf
dec
push
addr16
repz
les
popf
lret
xor
pop
push
and
cmp
loopne
iret
ja
loope
cwtl
out
and
int
mov
fisttpl
sub
jle
ljmp
dec
je
jnp
in
into
int3
mov
fisttps
pop
sub
sti
jecxz
popa
gs
std
sbb
scas
jb
in
dec
cwtl
xchg
add
pop
cmp
and
pushf
push
lods
or
mov
jle
pop
mov
addr16
and
data16
bound
xor
loop
lock
mov
jmp
and
xchg
adcb
mov
movsl
and
xchg
clc
sub
fwait
clc
ficompl
sub
lods
jo
ss
add
insb
loope
mov
push
lret
sub
cmp
xor
push
cmp
cld
xchg
imul
mov
sbb
in
xor
scas
shll
cmc
out
mov
lock
jl
inc
in
fisttpll
sub
pop
xchg
jg
xor
cmp
jle
mov
pop
jo
js
lods
mov
popa
lea
push
icebp
inc
lea
mov
clc
push
ret
in
pop
aad
imul
pop
ror
scas
fsubrs
xchg
sbb
adc
test
mov
adc
das
mov
inc
jb
jo
repnz
out
test
pop
js
std
jp
in
das
cmpsl
das
fimull
jns
xor
sub
ja
leave
aam
xchg
lahf
mov
sbb
xor
xor
decl
lret
pop
sub
jnp
cmc
mov
jecxz
push
inc
xor
fildl
mov
or
mov
xchg
js
dec
mov
out
cmp
pop
jl
leave
mov
xchg
test
inc
push
xchg
mov
jns
sub
pop
repnz
pop
push
sahf
sahf
push
jle
sar
vxorps
jmp
or
call
in
leave
inc
out
push
push
imull
addr16
lcall
dec
loopne
pusha
out
sub
cmp
stc
pop
push
lock
xchg
popa
data16
movsl
push
das
adc
loop
jmp
jmp
daa
dec
jmp
stc
or
movsl
jmp
jge
jmp
stc
sarl
push
sub
rcll
dec
pusha
lea
dec
push
dec
stc
insl
popa
inc
aam
add
sub
xor
es
cwtl
arpl
push
leave
in
pop
insb
nop
testb
je
movb
cmp
push
pop
mov
cmpsl
cmp
mov
sarl
arpl
int
cmp
sub
mov
xor
cmpsb
insl
setae
divl
dec
mov
mov
lahf
int
mov
push
adc
int3
sbb
aam
subb
mov
or
cli
test
popa
fisttps
push
test
test
call
or
dec
fs
jbe
and
into
inc
mov
repz
pop
cmp
negb
jbe
xchg
adc
xlat
add
mov
xchg
jecxz
dec
insl
mov
cli
xchg
jno
icebp
cs
push
fstl
shrw
loopne
sub
shlb
jno
and
xchg
shll
cmpsl
push
push
push
pusha
ja
cwtl
dec
pop
movsb
movsl
imul
cmp
scas
outsl
aas
xor
sbb
in
pop
cs
test
js
das
cmp
in
push
push
cmp
cmpsb
shrb
pop
mov
sarl
dec
sbb
jb
shrl
in
jno,pn
cmp
and
push
fisubrs
xor
adc
push
ret
int3
xchg
pusha
mov
shl
jmp
xor
fcomi
inc
or
push
adc
mov
xor
pop
add
push
ljmp
dec
inc
sub
loop
push
jne
mov
sarl
sub
pushf
push
push
icebp
adc
sahf
or
sub
leave
stc
add
push
repnz
popf
or
or
leave
xchg
dec
cmpsb
push
inc
sbb
cmc
inc
xor
lcall
enter
jo
xchg
nop
es
jmp
push
dec
pusha
add
mov
out
xchg
pop
fisttps
insb
adc
add
cmp
pushl
stos
cmp
nop
mov
hlt
pop
rorb
testl
adc
cmp
outsl
into
mov
ret
or
sbb
lock
dec
les
push
dec
mov
pop
clc
stos
mov
inc
jg
cmp
gs
sbbb
test
sbb
enter
push
popf
cmp
stc
pop
sub
dec
ret
mov
loop
pop
jp
scas
ss
int3
jnp
or
loopne
js
mov
and
push
jns
lcall
push
dec
sbb
loopne
fistpll
rclb
and
jne
push
cld
push
xor
cmp
jmp
js
ljmp
xchg
add
test
jnp
add
cmp
xor
addb
js
sahf
inc
mov
js
dec
sarb
ss
xchg
pop
popa
imul
mov
popa
sub
adc
lds
cmp
adc
or
mov
xor
mov
outsl
lods
lds
popf
stc
mov
ds
rclb
incb
shll
movsl
test
bswap
dec
pop
js
cmpsl
sub
in
decb
sbb
lret
jb
xchg
dec
xchg
test
fdivp
inc
lret
xchg
andb
fdivrl
int
pop
cmp
outsl
jo
push
in
stc
mov
std
sub
jae
das
lcall
idivb
int3
sti
loop
xlat
cmp
test
inc
das
or
mov
cmpsl
sbbb
loop
cmp
add
push
fsub
rorb
movsl
adc
outsb
lods
lods
dec
fistl
insl
pop
fistpll
sub
sub
push
sbb
mov
lds
rep
out
loope
mov
inc
subl
pusha
outsb
je
add
leave
xor
aaa
les
sbb
call
xor
mov
jecxz
xor
aas
in
cs
cmp
push
test
mov
fcomip
inc
xorl
push
mov
fimull
inc
sarl
xor
mov
je
adc
and
bndstx
fs
in
pop
mov
cmc
outsb
cmpl
int
and
adc
pop
cmpsl
test
push
adc
pop
call
fsubrl
and
xor
dec
jg
jno
jo
lds
loope
out
adc
jae
cmp
mov
sahf
add
push
pop
push
les
leave
and
xor
adc
or
insl
sbb
jbe
out
xchg
loope
aas
push
aas
lock
popa
test
sub
add
push
in
lcall
push
sahf
or
and
js
and
push
repnz
daa
enter
mov
xchg
lahf
dec
mov
add
cld
xchg
push
push
fwait
fwait
dec
movsl
add
mov
lds
cmp
cmp
xchg
in
cmp
lcall
push
ret
icebp
test
mov
adc
and
lret
repz
lcall
ficompl
call
or
push
repnz
dec
cmpsl
dec
push
in
sub
popa
stos
into
xor
push
stos
xor
mov
mov
xor
mov
sub
mov
fmuls
mov
rcrb
loope
xchg
add
jnp
xchg
mov
push
sub
sub
lds
jge
nop
dec
jmp
lds
push
sbb
dec
movsb
jne
inc
mov
sbb
push
sbb
xchg
inc
daa
mov
mov
mov
out
sbb
int
dec
adc
jle
lds
push
xchg
imul
scas
inc
cmp
insl
shr
mov
inc
and
ljmp
dec
dec
in
out
mov
std
fcom
shl
xchg
sub
xchg
movsl
sub
jge
xchg
popf
pop
or
inc
out
xchg
imul
mov
stos
bound
push
shl
adc
popa
jns
bound
mov
in
adc
arpl
lret
cltd
cmp
ss
mov
mov
stos
xor
gs
sbb
push
ret
repnz
sti
hlt
push
inc
lea
mov
lock
mov
cmp
and
pop
call
cld
aas
gs
enter
inc
push
lcall
lret
orb
jge
mov
sbb
xor
divl
mov
jge
push
xchg
adc
pop
adc
adc
je
shrl
test
adc
sub
in
outsl
dec
xor
or
cmc
pop
lods
stos
mov
loop
lods
and
push
fadds
jb
mov
adc
pop
push
mov
xchg
sub
addb
shr
lods
or
sub
lds
call
mov
jo
sub
jno
mov
mov
jl
mov
call
pop
stc
je
dec
fcmovnu
or
pushf
jo
fistpll
ja
jno
test
repnz
pop
mov
ret
int3
popf
stc
adc
test
fmulp
and
stos
inc
je
bound
lods
add
scas
sbb
push
push
push
pop
or
sub
adc
lods
cmp
lods
or
fistpll
aaa
inc
inc
push
stos
icebp
cmpsl
jo
imul
mov
cmpsb
xlat
or
nop
inc
stos
sbb
clc
mov
mov
xchg
lods
mov
test
adc
stos
xchg
mov
jno
cmp
jbe
push
jle
pop
jecxz
test
pop
scas
pop
pop
movb
pop
pop
xchg
mov
inc
jp
inc
pop
ja
pop
cmpsl
nop
rcrb
adc
hlt
test
popa
xchg
or
inc
adc
dec
jnp
add
std
jecxz
sub
sub
fidivrl
das
mov
cltd
repz
movsb
mov
cs
cmpsl
pop
xlat
lds
dec
cmp
loop
in
xchg
sub
fimuls
bound
out
loopne
cmp
fistps
pop
xchg
mov
push
add
sbb
pop
add
enter
mov
cmp
mov
jp
cmp
cmp
enter
and
pop
mov
js
icebp
jg
int
sub
adc
stc
mov
addr16
pusha
imul
sbb
pop
loope
push
adc
in
xchg
push
mov
in
rorb
jmp
dec
int3
mov
add
mov
jge
stos
subb
and
and
sub
dec
stc
mov
insl
pusha
inc
jne
mov
mov
or
loop
js
inc
pop
push
dec
fwait
mov
loop
jl
shl
aam
mov
loopne
cltd
push
pop
lahf
jp
pusha
ja
jns
mov
jne
cmpsl
xchg
jo
xor
mov
ret
lahf
push
aas
rcrb
or
lcall
inc
xor
nop
js
xchg
popf
decb
mov
test
sbb
mov
xchg
adc
in
push
inc
lods
pop
mov
cmpsl
add
inc
iret
xchg
jl
mov
push
fwait
sbb
iret
in
imul
das
sbb
dec
scas
xchg
pop
xor
xchg
outsl
mov
loop
or
aad
jo
cmp
ret
fcmove
push
aaa
into
cmpsb
pop
xchg
std
mov
mov
and
pop
or
imul
push
ret
xchg
mov
jp
ror
mov
clc
aas
arpl
adc
insb
iret
das
mov
inc
pop
out
jnp
dec
lahf
shrb
mov
xchg
pusha
icebp
dec
dec
ret
jmp
and
dec
mov
aas
adc
std
pcmpgtw
inc
lock
jl
filds
aas
gs
shl
sbb
jmp
and
pop
loop
push
mov
lcall
xchg
scas
fisubrs
popf
pop
jb
cmp
and
in
fwait
loop
shll
lods
fnsave
and
xor
faddl
mov
hlt
xchg
fiaddl
movsl
sbbl
adc
mov
xchg
push
pop
jno
insl
cmc
xor
and
xchg
dec
or
in
mov
fistps
in
mov
dec
fldcw
inc
inc
pop
adc
jl
mov
sub
out
xchg
xor
ret
sahf
stos
test
into
jnp
mov
push
and
daa
or
jl
pushf
inc
insl
int
sub
pop
mov
cmp
mov
sahf
xchg
dec
cmp
xchg
pop
mov
mov
scas
in
push
sbb
stos
cmp
inc
pmulhuw
scas
pop
sbb
aad
pop
scas
mov
jmp
add
shl
mov
jne
xor
or
dec
loope
inc
add
mov
gs
ficomps
adc
inc
sub
rcrb
movsb
cmp
jns
scas
cltd
fwait
jo
mov
mov
or
mov
jne
xchg
cld
cld
xor
cs
out
sahf
ret
lods
test
push
xchg
imul
loope
or
jnp
pop
sarb
les
fisttps
mov
dec
mov
pop
pop
dec
imul
sub
cmp
int
add
mov
mov
add
or
jmp
adc
loope
in
outsl
add
les
jns
shl
nop
jae
cs
orb
es
push
inc
dec
or
or
aas
sub
inc
sbb
gs
xor
mov
adc
cmc
jns
icebp
fildl
daa
mov
mov
pushf
mov
fdivs
dec
scas
addr16
lock
push
lea
fstpt
pop
ja
mov
mov
and
jno
xchg
arpl
jo
fimull
insl
inc
mov
les
sbb
inc
xchg
mov
push
sbb
mov
jmp
inc
cli
aam
adc
stc
sbb
jle
insl
mov
enter
daa
incl
xor
enter
fidivs
sbb
cmc
xchg
or
imul
out
nop
adc
jmp
ljmp
movsb
cmp
mov
stc
iret
push
ret
jle
outsb
fnstsw
ja
pop
fs
jns
test
xor
nop
and
cmpb
je
jnp
dec
jp
sub
ret
pop
ficoml
dec
or
cli
aam
dec
mov
push
mov
fsubrs
jp
push
dec
jg
sub
in
xor
test
adc
fsts
jp
mov
inc
bound
cmc
jnp
sbb
and
push
clc
jge
incl
leave
rorl
sub
jg
mov
cmp
bnd
sub
testl
xchg
jmp
stos
dec
or
and
lods
sbb
loopne
ss
cmpb
out
and
sbb
xor
shrl
adc
lea
pushf
mov
sbb
mov
int3
sbb
pop
jle
sbb
jp
and
dec
adc
sti
pop
xor
out
out
inc
sbbb
je
mov
lock
test
xchg
add
movsb
mov
movsl
and
push
and
xchg
and
dec
push
lea
sub
xor
push
arpl
jg
pop
fwait
gs
mov
in
mov
and
fnstsw
aad
adc
pop
sti
fdivl
mov
add
push
nop
fildll
xor
inc
jp
out
sbb
out
xor
sub
inc
jmp
aaa
ja
pop
scas
push
inc
in
jb
into
ret
mov
in
mov
pop
inc
hlt
dec
or
push
arpl
jae
dec
sbb
rorl
add
leave
sub
in
adc
jmp
xchg
in
mov
pop
icebp
lcall
jp
sti
icebp
scas
adc
adc
enter
mov
push
outsb
fabs
dec
arpl
adc
adc
nop
stos
mov
adc
xchg
adc
bnd
mov
pop
jge
pop
pop
sbb
mov
mov
or
addl
sub
push
sub
xchg
xchg
or
mov
in
fistpl
mov
mov
scas
dec
push
cli
dec
sub
hlt
mov
bswap
jg
in
adc
adcb
inc
sahf
stos
mull
sbb
and
pop
push
pop
imul
loop
stos
xchg
inc
out
aas
repnz
push
fs
push
das
idivb
jae
pop
bound
or
adc
das
sbb
aaa
push
add
push
adc
xchg
loope
pop
mov
movl
cvtps2pi
push
imul
mov
jns
jne
adc
xchg
jbe
mov
mov
jge
mov
push
fsub
in
or
cmpsl
sub
and
cmp
std
orl
jo
test
push
int3
fsts
testl
xchg
rcll
int3
or
xchg
aaa
sub
jae
imul
inc
inc
sbb
dec
xchg
push
and
push
sbb
inc
and
adc
shll
stos
jno
je
mov
inc
arpl
arpl
pop
pushf
mov
xor
stc
sub
mov
jg
cmp
cmp
fldcw
sbb
repz
enter
sub
and
cmpsb
mov
lods
movsb
mov
adc
lock
cmpb
bound
xchg
jb
andb
mov
fldcw
push
cmp
enter
hlt
gs
jl
rcrb
add
cmp
enter
stos
xor
test
adc
jle
mov
rcrl
rolb
push
fsub
adc
mov
or
mov
lds
push
js
inc
xchg
xor
je
push
fcomp
dec
stos
and
sub
push
aas
cld
pusha
cmc
push
mov
ds
cmp
rcrb
mov
xor
ret
dec
fwait
pop
ret
push
pop
stos
pop
fidivs
pop
fimull
orl
add
or
divl
xor
dec
xchg
xor
ja
pop
sbb
mov
or
mov
leave
push
pop
jecxz
daa
sub
sub
xchg
inc
sbb
adc
dec
push
scas
and
dec
pop
popa
incb
insb
pop
adc
inc
jnp
push
adc
inc
xor
shll
xchg
mulb
cmp
pop
jmp
add
cs
loop
push
std
adc
inc
mov
add
lock
jb
in
pop
leave
hlt
sbb
or
ss
in
fstps
int3
repnz
int3
arpl
sbb
test
cld
cli
jno
xchg
xor
int
push
sti
pop
xchg
inc
std
je
xor
enter
add
push
sub
jmp
inc
sbb
mov
inc
ffree
mov
lds
fsts
mov
out
imul
lret
popf
movb
mov
es
push
cwtl
ljmp
sub
xlat
pop
mov
inc
in
nop
push
fucomp
cmp
adc
xor
popf
dec
pop
adc
cwtl
and
data16
mov
dec
imul
pop
push
xor
outsb
xchg
lahf
push
sub
div
mov
mov
cltd
cmp
in
push
dec
lea
cmp
call
or
mov
popa
ds
orl
xchg
in
fstl
in
sbb
out
rorl
ffreep
sti
clc
stc
stc
test
outsb
add
xchg
mov
inc
mov
cmp
dec
or
xchg
iret
mov
outsb
sbb
push
outsb
jmp
mov
addr16
adc
mov
adc
mov
mov
lea
or
daa
xor
test
adcl
int3
ja
push
push
lods
divl
dec
ljmp
lods
dec
xchg
shl
cmp
inc
jae
in
mov
or
stos
popf
rcl
pop
inc
repnz
mov
pop
jg
and
aaa
decb
mov
pop
mov
jo
mov
jns
inc
ja
lret
jnp
inc
cmp
pop
or
push
insl
sarb
push
add
cmpsb
dec
sbb
pop
out
mov
xchg
callw
lret
dec
add
xorl
push
insl
xchg
add
dec
lahf
sbb
add
mov
pop
pop
jb
or
pop
add
sbb
pop
roll
jle
jae
push
mov
movsb
lcall
mov
pusha
fs
cmp
push
inc
stos
outsb
sbb
sbb
pop
jl
mov
cwtl
or
outsl
push
mov
clc
stos
xchg
push
call
fildll
dec
fmul
test
andb
or
cmp
push
push
cwtl
mov
sahf
adc
sbb
adc
add
mov
lcall
test
leave
inc
add
test
push
jecxz
xchg
mov
adc
cmc
push
sbb
sarl
aam
inc
ret
outsb
push
jns
in
mov
icebp
popf
int
es
jecxz
out
int
movsb
ds
scas
adc
push
cmp
iret
dec
js
dec
nop
lcall
jo
adc
pop
cmp
inc
xchg
in
mov
fcomip
bound
mov
pop
inc
pop
andb
xchg
imul
ret
push
mov
jmp
xor
test
out
cwtl
sbbl
nop
mov
xchg
cs
dec
push
and
mov
cwtl
fbstp
nop
inc
push
insb
scas
push
insl
and
xor
popf
pusha
xor
addr16
in
cmp
sub
fwait
pop
jb
out
xor
or
xor
movsb
insl
mov
fidivl
shlb
fsubs
test
xchg
mov
jp
aas
imul
mov
sti
fxam
jmp
iret
ret
loope
mov
jb
push
fiaddl
dec
outsl
sub
push
or
int
arpl
push
orb
lahf
lret
mov
imul
push
lret
cmp
jnp
movsb
mov
sub
or
sbb
xor
mov
repz
dec
mul
adc
sub
stc
pushf
mov
dec
sbb
test
xchg
cli
sti
roll
add
arpl
imul
dec
and
push
lods
test
in
lea
int3
pop
jo
jne
aas
mov
ljmp
sub
xchg
add
jecxz
add
mov
mov
mov
cli
ss
sub
push
inc
out
imul
cmpsb
inc
test
xor
loop
stc
repz
aas
mov
adc
lcall
dec
adc
or
add
movsl
sti
lods
popf
repnz
pop
mov
mov
imul
adcl
ds
inc
add
and
decb
dec
cmp
mov
or
mov
mov
hlt
push
jnp
sbb
mov
pop
call
inc
sbbb
fsts
pusha
push
inc
cld
ljmp
insb
movsb
cwtl
push
ds
iret
mov
out
jg
ret
fwait
mov
rcrb
add
and
mov
mov
mov
test
ljmp
es
shrl
gs
adc
test
sbb
add
rcrl
jmp
add
push
jns
pop
loopne
outsb
jl
xchg
mov
lds
mov
aam
cmp
aaa
inc
or
pop
cltd
fwait
stos
xchg
pop
sub
or
loopne
jl
mov
adc
add
pusha
mov
sbb
inc
leave
lods
add
dec
inc
out
int3
add
sbb
stos
or
shlb
inc
add
sub
push
or
add
and
inc
xchg
shl
push
mov
scas
or
test
data16
sub
lcall
xchg
iret
enter
push
mov
or
dec
jecxz
mul
push
mov
cltd
add
lods
test
cmp
sbb
mov
inc
decb
insb
xor
fs
fs
inc
xlat
mov
inc
je
test
fld
pop
sti
ret
data16
mov
ja
pop
aam
sbb
adc
adc
xchg
stos
sbb
adc
add
scas
adc
adc
xchg
mov
data16
mov
imul
testl
clc
mov
rorl
vandps
stos
cs
mov
push
sub
das
mov
sbb
in
push
test
shll
mov
mov
pop
mov
jl
aam
iret
scas
inc
outsb
or
lods
cmpsl
mov
jge
arpl
push
cmp
mov
pop
and
mov
and
mov
fistps
fistps
mov
sahf
lds
xor
fdivrs
in
jno
int3
pop
cld
jmp
shll
mov
arpl
inc
inc
jmp
js
or
add
push
idivb
inc
pusha
dec
shll
cmp
icebp
mov
mov
inc
out
pusha
mov
xchg
mul
imull
dec
mov
xchg
cwtl
inc
jg
sbb
imul
and
and
mov
rorl
clc
mov
lret
pop
mov
daa
mov
push
adc
push
aas
clc
mov
inc
mov
fs
stos
jae
mov
aam
sbb
sbb
psubb
mov
add
push
stos
mov
mov
int
repnz
add
jg
xor
stos
divb
insl
jno
ljmp
add
xchg
push
xorb
cmp
ja
push
jp
ret
mov
bound
push
mov
pop
pop
push
mov
pop
add
inc
daa
add
pop
mov
bnd
in
mov
mov
daa
pop
stos
cltd
jmp
mov
dec
dec
add
inc
mov
pop
repz
pop
hlt
mov
sub
mov
sub
xlat
mov
and
notb
lods
mov
adc
xchg
push
daa
jnp
sahf
push
movsb
ss
adc
mov
in
inc
dec
jb
es
lahf
jns
test
lret
test
popa
fists
inc
jns
jae
int
fadd
lock
sbb
loopne
push
mov
test
jne
mov
in
push
lret
pop
shl
into
stos
dec
mov
test
adc
cmp
xlat
iret
out
mov
push
xor
es
data16
pop
test
xor
xchg
xchg
shlb
pop
data16
inc
lods
cwtl
aas
mov
int
fidivrs
adc
push
adc
push
add
pop
sub
push
and
fcomi
sub
out
out
pusha
jbe
sbb
sub
std
mov
xchg
enter
jmp
dec
and
push
cmp
jo
lds
mov
cmpb
inc
clc
sarl
mov
insl
in
lds
dec
vmread
mov
outsl
and
repz
aad
mov
sahf
pop
sub
in
sub
sahf
cld
scas
lret
stos
cs
sti
aam
xor
sti
and
enter
inc
jae
inc
xor
cld
out
addb
xchg
hlt
adc
xor
jo
repz
je
ja
mov
jmp
frstor
inc
ljmp
sbb
push
adc
mov
jge
out
add
insl
lods
xchg
call
daa
shll
ss
add
cmpsb
int
popa
test
mov
cmovl
inc
pop
rclb
cmp
adc
test
mov
sub
inc
sub
imulb
sub
adcb
sbb
stos
mov
negl
es
loope
movsb
shlb
daa
idiv
incl
jno
sbb
jne
xchg
jmp
addr16
push
js
cld
and
fstpl
xchg
mov
push
jne
dec
pop
pushf
inc
push
popf
dec
aad
cltd
and
fbstp
add
subl
cwtl
sub
sub
imul
sar
dec
fwait
sub
fimull
pop
jecxz
cmpsb
push
cmp
adc
cmp
sbb
test
jge
hlt
outsb
mov
and
mov
mov
popa
sarb
ret
scas
mov
out
vmovapd
clc
mov
aas
arpl
jb
add
sbb
mov
pushf
iret
stos
aas
add
mov
lds
mov
lahf
inc
daa
cmc
adc
imul
inc
xor
push
sbb
add
jo
xchg
sbb
int
ja
aam
out
push
xor
lea
gs
aaa
outsb
sbb
mov
fiadds
loope
jge
filds
xlat
repnz
orl
testb
sub
call
jae
and
lret
enter
mov
cwtl
jmp
push
jecxz
xor
push
data16
in
iret
mov
jae
mov
push
ret
dec
add
push
inc
movsb
jmp
repz
xchg
leave
fnstcw
fs
cltd
or
or
test
add
jns
lret
push
lea
in
mov
hlt
sbb
pushf
sti
push
or
cmp
or
je
inc
or
dec
inc
dec
xor
mov
mov
arpl
jp
push
mov
mov
mov
pop
stos
add
fcoms
mov
mov
lahf
dec
lahf
stos
jmp
daa
lods
sbb
add
data16
fnsave
add
and
scas
sarl
fsubrp
pop
das
pop
mov
dec
insb
mov
push
push
in
sub
mov
push
mov
push
loope
sti
jmp
pop
jg
inc
mov
cmp
sub
mov
das
hlt
repnz
adc
shll
push
ja
fstp
or
cmpsb
loope
int
jae
js
and
sub
xchg
cmp
insl
and
xlat
ss
cmp
arpl
push
push
inc
out
xor
movsb
sbb
jo
mov
shr
pop
out
inc
mov
call
xor
fwait
add
xor
jb
xor
mov
jno
ljmp
insl
cmp
movsl
shlb
cmp
loope
sub
sub
cld
lret
inc
mov
cmpsl
repz
inc
data16
mov
or
in
bound
shr
hlt
push
pop
add
rcr
out
xchg
pop
mov
and
xor
jns
sti
xchg
adc
das
xchg
lods
fmulp
int
push
push
mov
sub
jmp
loop
out
cmp
adc
jle
jno
loop
test
mov
int3
outsb
add
out
ret
dec
dec
jno
cmp
cmc
call
mov
pop
pusha
jne
fisttps
imul
call
ss
xchg
sub
test
push
fcomps
mov
sub
mov
jb
pop
pop
pop
mov
pop
test
fnstcw
sub
mov
popf
cmp
pushf
add
test
cltd
lods
les
xchg
and
rcrb
mov
jecxz
pop
dec
adc
or
cld
mov
lahf
xchg
inc
in
bound
out
sub
mov
dec
mov
hlt
and
push
or
ret
mov
fistps
test
sbb
adc
arpl
je
cmp
fisubs
mov
cs
and
cwtl
xlat
test
or
lds
imul
push
shrl
dec
out
ljmp
pop
pop
push
sbb
xchg
push
jmp
imul
popf
outsb
cmc
outsl
jns
fidivl
pop
sub
cli
cmpsb
mov
jl
mov
ror
pop
adc
dec
dec
in
cs
push
out
sub
jae
push
call
mov
cmp
cmp
jns
sahf
inc
pop
push
ds
cmp
sarl
loope
movsl
std
bound
dec
dec
and
mov
cli
mov
adc
mov
push
jmp
inc
xchg
popa
inc
jmp
cmpsb
or
ss
cld
std
inc
pop
call
loope
sbb
xchg
xlat
lcall
lcall
jl
mov
xlat
ret
into
cmp
push
mov
push
jno
roll
jb
xchg
clc
mov
cmp
loope
mov
lock
into
mov
cli
inc
push
inc
notb
outsl
hlt
adc
ljmp
lods
test
lods
ret
sbb
shll
xchg
fmull
lock
fisubrs
cmp
aam
adc
cmp
xor
and
pushf
pop
push
jnp
out
dec
rcrb
push
jmp
jl
daa
xchg
imul
mov
popa
and
mov
push
inc
arpl
aaa
fcoms
xor
in
xchg
jmp
adc
pop
fsubl
jecxz
bound
fwait
pop
stc
imul
cmpsb
lods
push
lret
ret
mov
push
add
js
fnstenv
add
mov
cmp
sub
mov
mov
mov
push
jp
mov
pop
ficompl
jl
or
fildll
addl
lret
in
mov
aad
test
pop
imul
adc
xchg
stc
cmpsb
xor
dec
jb
and
adc
ja
insl
sbb
add
lods
push
jno
fists
and
add
popf
pop
outsb
mov
ss
divl
inc
incl
lret
inc
scas
mov
les
fcompl
cmp
cltd
fimuls
std
sub
jb
insl
cwtl
cmc
push
adc
in
mov
cld
js
ret
add
mov
cmp
push
cmp
cmpsb
xor
mov
in
ret
jb
lds
arpl
fwait
inc
into
inc
iret
cmp
and
xor
loope
xchg
rcrl
arpl
mov
mov
xor
ja
and
cmpl
mov
lcall
inc
jbe
cmc
add
into
int
das
pop
gs
lods
mov
aaa
xchg
stos
push
outsb
xchg
or
cmc
aaa
loope
push
jb
fdivl
out
outsb
adc
pop
icebp
cmp
out
movsl
lock
inc
cs
outsl
hlt
and
movsl
jbe
mov
pop
sub
mov
cmp
sti
inc
insb
dec
mov
pop
mov
jae
repnz
mov
ret
or
pusha
pop
mov
loop
pop
mov
test
test
mov
movsb
test
dec
loope
fnstsw
push
into
sub
test
dec
push
ljmp
sbb
loop
sub
pop
iret
inc
add
xor
nop
inc
ficompl
mov
or
sub
mov
adc
cli
jo
jns
lea
in
lcall
js
and
jno
or
cmc
add
in
push
daa
adc
inc
sub
dec
jmp
aaa
ds
mov
arpl
push
inc
ret
or
jb
cmp
rol
jg
xorb
mov
insb
cmpl
insb
mov
push
pop
outsl
lods
fs
inc
in
mov
movsb
or
mov
push
fistpll
push
mov
addl
and
mov
sub
jmp
imul
stos
into
dec
mov
cmp
xor
out
mov
and
sbb
stos
fs
mov
pop
adc
mov
hlt
xchg
mov
mov
pop
ljmp
push
fnsave
fld1
add
cmc
aad
dec
nop
xorb
push
jnp
fs
dec
sbb
cltd
pop
lidtl
cmp
xchg
dec
sub
adc
cmp
xor
pusha
loop
mov
mov
pop
mov
mov
mov
loop
into
mov
dec
jmp
cmpsl
dec
adc
fists
cmp
xor
clc
movsb
loopne
scas
or
xor
jmp
push
sub
sub
pop
add
test
pop
and
xor
mov
adc
mov
movsl
push
adc
call
dec
orl
popa
aaa
xchg
xchg
cs
sub
push
xor
jle
mov
repz
cmpsb
out
out
stos
xor
mov
stos
leave
lds
pusha
sbb
add
jecxz
out
sbb
inc
insl
mov
cmp
cltd
add
mov
es
fldpi
mov
faddl
mov
adc
cmpsb
rep
int
mov
outsb
sub
test
jmp
add
cmpsl
inc
mov
loope
cmp
data16
cli
add
inc
adcb
jo
pop
and
pop
sub
xchg
jecxz
pusha
outsl
in
cmp
xchg
cli
rcll
std
pop
mov
imul
xor
sub
stos
mov
push
fmul
ss
jno
pop
hlt
mov
jecxz
pusha
clc
popf
andl
xor
or
out
andl
enter
adc
jp
jns
pusha
gs
fimull
adc
jle
jne
jae
mov
jno
outsb
mov
fdivs
push
dec
hlt
mov
fadd
ljmp
outsl
repz
dec
mov
mov
aas
imul
mov
inc
mov
clc
xchg
inc
test
ja
arpl
mov
jge
sub
test
hlt
xlat
pop
jbe
jnp
jl
pop
push
test
mov
cmp
fsub
lahf
cltd
push
xchg
test
lret
aaa
movsb
mov
sub
push
pushf
jmp
movsl
mov
xor
mov
jp
das
scas
jmp
int3
aas
mov
xchg
push
fldenv
jmp
mov
outsb
pop
iret
ja
fwait
dec
shlb
add
cltd
call
fs
sbb
out
mov
inc
cwtl
jle
repz
imul
xchg
push
xor
nop
and
in
pop
jnp
pop
xor
fsubrl
sub
xchg
mov
jecxz
cltd
js
and
lret
mov
xlat
push
mov
movsb
jmp
cmc
mov
cmc
inc
sbb
jno
or
jg
lret
movsb
adc
mov
loop
idiv
aas
or
in
repnz
out
pop
jmp
std
clc
sahf
cmp
push
cmp
sbb
je
and
ljmp
std
sti
xor
stos
inc
adc
fsubs
xchg
mov
fdiv
pop
xchg
ljmp
sub
sbb
mov
jl
outsl
cmpsb
out
xchg
xchg
cmp
test
or
sarl
or
and
xchg
add
int3
int
mov
dec
pop
in
push
or
pop
ficomps
cld
outsl
pop
xor
lcall
jl
shl
sbb
in
cmp
popa
stos
jbe
xchg
fmull
mov
xorl
lods
out
mov
ljmp
sub
add
mov
out
lcall
and
xchg
jmp
data16
adc
das
and
mulb
push
mov
roll
jl
rol
shl
sub
or
ljmp
clc
bound
ja
mov
xor
je
mov
scas
xchg
dec
lds
shll
add
fiadds
push
sub
fwait
sub
lcall
mov
adc
or
bound
rcl
add
push
push
outsb
sbb
rclb
xchg
ss
push
xor
nop
jns
add
insl
aad
or
vpmacssdd
inc
clc
call
in
jo
mov
push
lret
xchg
cmpsl
inc
sbb
inc
in
push
lds
cli
xchg
inc
jmp
xor
adc
sbb
sub
movl
orb
xchg
fiadds
clc
pushf
and
fwait
nop
mov
jmp
or
mov
xchg
test
stos
mov
mov
mov
add
mov
pop
int3
mov
add
scas
sbb
rorb
lret
sub
stos
mov
mov
sub
or
shrb
xor
pop
pop
call
aas
xlat
mov
fcmovnbe
jae
add
std
push
mov
cs
or
or
mov
xor
sbbl
dec
sarl
dec
sbb
stos
mov
and
imul
fcoml
pop
mov
fdivrl
sbb
arpl
adcl
xlat
pop
cs
rcrl
mov
cmp
sarl
pop
push
addr16
fidivl
push
out
push
add
jne
push
push
fdivrs
push
dec
in
jge
jbe
dec
fdivrp
sub
push
in
xlat
out
ret
or
and
xchg
lret
mov
xchg
xlat
ds
imul
push
xchg
shrb
sbb
xchg
in
dec
xchg
push
mov
add
pop
sbb
add
jb
shll
clc
cli
mov
movsb
loope
dec
lcall
push
xchg
pop
sub
push
dec
push
sub
flds
cwtl
aaa
jmp
xlat
js
js
stc
mov
xor
jne
mov
clc
sbb
sbb
test
fdivp
mov
aas
ret
xchg
dec
jecxz
in
add
movsl
out
sub
ss
testl
jmp
cmp
ror
push
js
stos
dec
xchg
mov
dec
mov
repz
adc
jae
jo
and
push
lods
lock
xor
jle
cmp
aas
xchg
inc
loopne
fisttps
jno
sub
ds
push
int3
xchg
ficompl
mov
dec
mov
mov
inc
lea
hlt
ret
xor
loope
mov
daa
je
sar
shll
or
inc
mov
mov
ret
mov
xorl
cmp
imul
out
in
jnp
push
adc
aaa
out
sti
push
stc
mov
jp
sbb
ds
mov
lret
ret
mov
push
shll
xchg
mov
mov
popa
sub
push
call
mov
push
clc
jge
mov
jp
mov
and
scas
xor
mov
insb
adc
xor
xor
and
jp
lret
lods
icebp
sbb
enter
cs
movsl
jnp
lods
jne
lds
push
mov
insb
sbb
and
movsl
add
or
loopne
out
int
mov
pop
push
or
lret
rorb
out
scas
adc
pop
lret
leave
and
xor
cli
imul
pop
mov
dec
mov
inc
out
popa
lret
sbb
xchg
mov
xor
testb
inc
sbb
mov
daa
sub
push
imul
mov
push
ljmp
and
inc
ja
insl
test
xlat
je
xchg
mov
jecxz
in
xor
loopne
sbb
pop
outsb
cmpsb
fisubs
ret
ljmp
popf
jl
jo
sbb
push
movsl
jecxz
inc
pop
sarl
jge
or
icebp
div
lds
mov
mov
jae
dec
jmpw
sub
cmp
mov
add
imul
push
scas
inc
insl
fisubl
aaa
push
jecxz
aaa
cmp
xchg
sub
xchg
dec
adc
or
test
in
sahf
inc
aam
cmp
mov
jmp
pop
push
jno
jmp
mov
fucom
ja
lods
ja
adc
push
push
adc
test
xchg
repnz
aas
jmp
add
xor
stc
xor
into
jbe
divb
gs
cmc
pop
mov
push
sub
push
imul
jb
dec
xchg
or
ljmp
inc
mov
in
jo
pushf
inc
inc
outsb
mov
mov
jg
dec
pop
mov
mov
push
dec
subb
in
out
push
test
lods
insb
test
sub
mov
and
xchg
add
out
pop
fistpll
mov
add
stos
into
loopnew
addb
dec
mov
and
into
adc
cmpb
pop
jl
sbb
push
push
sub
sbb
jp
es
pop
inc
adc
popf
add
test
sub
pop
sub
lock
jecxz
mov
int
adc
ficoml
aaa
addl
in
flds
sbb
cmc
addb
lret
int3
sub
or
pop
mov
icebp
out
jp
int3
xchg
add
xchg
sub
or
jl
jl
xchg
aad
adc
push
leave
or
movsb
idivl
hlt
xor
aas
les
mov
int
ret
and
dec
mov
sbbl
xchg
lret
mov
in
jne
inc
pop
ret
xlat
test
pop
dec
xlat
or
mov
out
mov
push
adcl
gs
cmp
jns
mov
inc
daa
inc
xchg
aaa
cmpsl
pop
data16
sbb
or
lcall
sbb
in
call
push
ljmp
mov
inc
test
and
or
mov
sbb
in
aas
add
mov
pop
sub
cltd
and
pop
sti
or
and
sbb
dec
shlb
xlat
or
int3
xchg
push
xchg
push
jb
jl
and
or
cmc
sub
movsb
adc
mov
dec
aaa
call
clc
in
ret
outsb
dec
dec
aad
sbb
dec
mov
aam
mov
mov
shrb
repnz
movsl
fldl
xor
test
hlt
jo
jae
push
and
cmpb
iret
dec
test
call
sbb
fists
xchg
pop
sbb
mov
ret
dec
fwait
mov
into
fistps
loopne
sub
data16
shl
insl
inc
lods
lcall
out
loopne
mov
ret
sti
test
or
cwtl
fbld
push
fsubrs
jl
add
data16
jle
xor
and
das
fs
int
pop
jl
or
push
lock
in
in
cmp
lahf
xor
pop
mov
popa
in
out
jmp
scas
push
mov
imul
mov
mov
pop
pusha
pop
mov
mov
sti
and
dec
push
test
lahf
sbb
pop
scas
stc
sub
lds
sub
and
lds
rorl
pop
std
pop
sub
push
movntq
loope
sti
or
xchg
iret
fldenv
and
repz
in
enter
shufps
loope
mov
mov
negb
int3
stc
fwait
ret
pushf
jbe
xchg
adc
out
movsl
push
stc
add
and
or
es
dec
push
push
dec
add
jmp
jge
adc
dec
stos
jp
shl
in
cmp
push
fsqrt
sub
push
int
filds
cmp
shlb
cmp
popf
cmp
dec
add
inc
cltd
ret
xor
dec
out
mov
jbe
mov
aad
push
jge
std
cwtl
pop
cwtl
mov
leave
leave
adc
push
cmp
push
push
xchg
mov
push
sub
nop
mov
call
cmp
pop
jge
loop
mov
and
insb
pop
js
enter
jb
adc
mov
pop
insl
popa
and
mov
cmp
inc
rclb
jnp
daa
inc
out
xchg
jge
or
out
lea
rcr
push
pop
pushf
fs
jno
pop
insb
stos
mov
popa
adc
or
xchg
mov
mov
inc
icebp
fsubrp
scas
mov
jge
adc
cmp
add
and
mov
call
insb
clc
adc
or
jns
insb
ja
jae
and
lock
and
fistl
mov
aas
popfw
jl
testb
push
ja
mov
xchg
iret
mov
pop
imul
push
mov
mov
dec
std
inc
imul
xchg
jbe
mov
mov
aaa
pop
jp
adc
and
icebp
fwait
test
cs
arpl
jb
add
ja
sbb
roll
daa
scas
inc
test
cmp
mov
adc
and
or
outsl
mov
adc
jmp
push
fcoml
sbb
je
arpl
xor
inc
or
ds
dec
loop
mov
cmp
pop
test
pop
je
add
cs
repz
cli
cld
dec
push
out
movsb
sbbb
xor
or
jb
test
pop
je
xor
dec
xlat
roll
movl
mov
push
pop
lock
pop
mov
dec
inc
outsl
mov
cwtl
or
adc
xchg
fdivr
addr16
sbb
movsl
cmp
daa
test
xchg
inc
nop
mov
cmpsb
lahf
jecxz
lcall
sub
cld
push
cmp
sub
pop
adc
sahf
cmc
cmpsb
and
fs
push
cmpl
push
std
sub
shrl
xchg
and
clc
jb
pop
icebp
sbb
fldl
cmovne
test
nop
jo
idiv
aam
fisttps
jmp
pop
dec
packsswb
js
jnp
adc
cmp
notb
sub
fidivs
imul
leave
mov
adc
bound
sbb
cmp
jns
cmp
addr16
insl
sub
das
mov
adc
mov
push
mov
adc
xor
xor
and
xor
stos
cmp
lock
mov
jo
std
aam
out
lret
dec
lahf
in
imul
dec
adc
dec
push
testl
inc
mov
xchg
adc
mov
idiv
jne
mov
push
fldl
or
mov
pop
mov
ret
or
arpl
stos
pop
out
das
out
xchg
mov
push
push
inc
inc
and
mov
repz
fstpt
rcr
loopne,pt
cmp
aas
rcrb
mov
scas
rclb
xor
push
cmp
loopne
enter
mov
cmpsl
adc
hlt
sarl
mov
pop
fists
or
mov
bound
pop
outsl
push
sbb
rorb
stos
cli
shlb
push
sub
or
xchg
loop
jl
adc
push
leave
jecxz
stos
test
sbb
mov
jl
ret
xchg
sbb
pop
add
jle
sub
lods
jle
push
test
fadd
in
jmp
std
repnz
aad
cmp
lahf
sbb
rorb
push
jns
adc
xchg
ljmp
dec
push
push
inc
mov
jmp
mov
mov
imul
out
icebp
or
and
xor
aad
data16
or
xchg
pop
and
cmp
pop
inc
push
pop
loop
pop
repz
sub
cmp
xor
out
je
scas
aas
into
cmpsl
pop
cmp
sub
int3
sub
or
jmp
jo
or
sbb
lret
js
dec
test
lods
adc
pop
lock
jp
cmp
cltd
mov
cld
je
cld
jl
sub
xchg
nop
out
dec
sub
jns
orb
sbb
lods
mov
ljmp
test
pop
xor
pop
aaa
jle
cli
xor
jne
lret
out
stos
mov
mov
push
mov
out
adc
ficompl
lods
scas
negl
or
out
mul
test
pop
mov
mov
insl
cmc
and
inc
fwait
ret
shll
push
aaa
push
xchg
push
mov
and
mov
adc
pop
mov
cmpsb
push
inc
fcmovne
mov
movsl
jne
xor
mov
in
les
mov
xor
decl
jmp
push
test
test
push
jbe
rclb
clc
pop
mov
in
sub
jp
adc
popf
sarl
cltd
lcall
ss
cmpsl
enter
ss
cmc
ret
lret
das
aad
cmpsl
jle
ljmp
mov
insb
rorb
fidivl
lods
or
jg
and
xor
test
andl
xlat
adc
mov
sbb
iret
daa
jg
push
xchg
dec
mov
pop
mov
push
dec
cmp
shrl
dec
int
call
je
mov
daa
lret
mov
pop
cs
rcrb
jae
sub
call
aad
inc
or
cmp
insl
ljmp
int
lahf
jmp
push
aad
pop
daa
adc
push
pop
push
add
pop
mov
and
mov
jmp
test
mov
addr16
sarb
inc
shr
adc
inc
jecxz
les
jns
inc
scas
jne
push
jb
cmpb
push
pop
pop
sbb
clc
fisubl
xchg
pushf
or
stc
and
sbbl
ljmp
jg
mov
pushf
loope
sbb
cmp
shrl
dec
xor
movsl
xchg
push
int3
and
jle
xor
hlt
test
push
fisubs
lds
dec
mov
add
std
sub
sahf
lret
add
mov
sub
stc
lds
lods
mov
int3
mov
mov
mov
add
push
lods
lea
aad
push
pop
jns
sub
insb
push
into
shrl
xchg
dec
mov
adc
or
bound
and
out
fimuls
jbe
push
movsl
push
pop
dec
or
sub
std
cwtl
push
mov
mov
xor
mov
int3
clc
negb
push
xor
inc
popf
and
dec
mov
push
mulb
push
jns
adc
rorl
pop
aam
pop
adc
and
pop
ret
and
jo
sbb
int
jecxz
push
or
filds
xchg
jnp
out
shll
lcall
enter
or
sbb
adc
stos
shll
outsl
mov
jnp
and
dec
out
cmpsl
into
pop
sub
call
jbe
movsl
in
mov
ss
push
insl
xor
xor
mov
adcl
or
mov
xchg
and
lock
cmp
mov
movsl
mov
jbe
push
adc
jp
push
out
inc
jecxz
inc
dec
lea
movsb
aaa
xchg
outsb
idiv
adc
ficoml
call
cs
rorb
pop
fstl
and
mov
mov
cmp
xor
sahf
mov
ss
iret
adc
xorl
nop
fiaddl
push
hlt
mov
jg
ja
jae
aad
lods
push
sbb
loop
repz
inc
lret
pop
and
push
dec
insb
loopne
fcmovb
push
or
jl
in
shrb
xchg
cmp
pop
dec
mov
xor
cvttps2pi
shlb
sub
adcl
ljmp
aam
lock
push
mov
je
and
or
sbb
outsb
mov
mov
mov
pushf
ret
push
orb
inc
jle
ja
fstps
dec
xor
repnz
xchg
mov
stc
hlt
int
ds
ret
jle
aas
adc
add
pop
dec
les
cmpsl
dec
aam
repz
insl
fwait
mov
stos
in
fs
call
inc
test
orl
shll
sahf
pop
mov
add
popf
mov
shrb
cmpsl
shll
push
pop
xor
sub
xor
jl
test
jnp
popf
jbe
fisubrs
dec
pop
push
jns
jnp
sbb
add
or
jge
pop
or
add
sub
insb
and
sub
sub
daa
sbb
stc
push
mov
dec
pop
addr16
int
add
mov
fldcw
and
adc
mov
stos
sarb
push
inc
mov
sti
rolb
mov
mov
inc
pop
mov
out
xchg
outsl
pop
pop
pop
jge,pt
icebp
sbb
movl
ljmp
push
lea
inc
adc
mov
test
mov
cmp
inc
mov
or
adc
imul
pop
insl
ja
iret
imul
shrb
lods
outsb
xchg
fistl
ret
or
inc
sbb
cmpsl
lahf
mov
outsl
shll
lret
enter
add
jb
xchg
test
test
push
add
or
dec
inc
outsl
dec
inc
cltd
dec
mov
inc
inc
and
iret
fstpt
in
pushw
xor
sbb
sbb
push
lds
out
sub
jp
int3
in
jg
in
xchg
shlb
mov
or
mov
fs
push
fisubrs
mov
clc
inc
js
ret
bound
in
lods
jno
inc
sbb
icebp
cmp
out
hlt
jae
jbe
push
stos
push
sbb
lcall
pop
mov
xchg
sti
xor
mov
cltd
push
push
cmp
add
push
mov
je
dec
imul
jbe
shl
dec
xchg
stos
push
jle
xchg
shlb
pop
stos
movsl
mov
mov
xchg
add
lea
ror
fwait
mov
sarl
rcll
dec
push
mov
ss
and
dec
jno
xchg
fisubl
jb
lds
xlat
arpl
adc
jbe
cmpsb
dec
test
mov
push
fcoms
stos
cmp
pop
cld
add
mov
pop
jl
filds
mov
scas
pop
insl
push
test
mov
sbb
cwtl
test
add
push
lods
push
inc
mov
inc
mov
stos
mov
jno
ret
and
jge
jb
insb
push
in
pusha
xchg
jb
xchg
mov
sbb
lds
rol
xchg
imul
cmp
push
pushf
xor
pusha
lret
xchg
lods
cli
mov
or
fs
je
movsl
imul
jns
dec
lds
lods
jno
cmp
cmp
cmp
arpl
es
fadds
sbb
xor
cmpsb
adc
jg
mov
enter
mov
add
push
test
hlt
leave
cmp
inc
push
and
cli
and
stos
cmp
adc
xchg
fstpl
inc
sti
test
xchg
ja
xlat
cmp
notl
xchg
repnz
outsb
pushf
repnz
push
addr16
out
pop
jg
xor
das
je
movsl
xor
xor
pop
lds
pop
movl
call
adcl
adc
lods
outsb
fstpl
int
es
mov
xlat
dec
packssdw
xchg
repnz
rcll
inc
iret
push
cwtl
jecxz
test
pushf
xchg
pop
shr
add
fidivrl
or
testb
out
cmp
mov
fs
inc
sub
imul
pop
jle
loop
ret
mov
arpl
sbb
mov
pop
dec
mov
shlb
rcrb
push
pop
test
adc
xchg
loope
out
cmp
sbb
repz
out
std
jmp
xchg
jge
jb
mov
pop
sub
jbe
in
sub
inc
cmp
rcrb
mov
fcompl
xor
loop
aaa
bound
cmp
addr16
subb
mov
jne
inc
repz
sbb
or
stos
xor
sbb
inc
movsb
sbb
sub
sbb
loopne
std
push
xlat
adc
leave
adc
test
orl
fwait
arpl
mov
add
pop
ret
sbb
in
sbb
les
in
cmpsl
adc
ljmp
in
adc
shlb
push
sbb
imul
push
scas
or
jg
call
fwait
movsb
add
mov
mov
cmc
out
mov
imul
popl
cmc
divb
ret
mov
rorb
xor
mov
or
imul
arpl
push
out
xor
mov
push
adc
arpl
lods
outsb
mov
pop
xchg
and
sbb
dec
mov
aaa
mov
push
inc
outsl
leave
xor
mov
mov
and
sti
xchg
push
jne
leave
jbe
mov
mov
ljmp
mull
enter
sub
pop
clc
sub
sbb
pop
sbb
lret
das
cld
jno
lret
cli
bound
sahf
outsl
clc
jg
mov
xchg
stc
push
leave
dec
inc
inc
dec
pop
cmpsb
lret
int
dec
jo
sbb
fcmovu
inc
clc
outsl
imul
out
mov
and
pop
inc
ds
mov
sub
ja
jmp
inc
rcl
mov
cmc
outsl
addr16
scas
add
shll
loope
test
mov
xlat
fwait
int3
mov
xor
pop
sub
mov
fwait
mov
add
cmp
cld
stos
aas
repnz
fwait
jge
fstpl
lock
roll
xchg
push
fsubs
lahf
sub
outsl
xor
mov
sahf
mov
pop
jecxz
mov
and
inc
jmp
add
add
scas
sub
test
fstpt
cli
hlt
xor
cmp
inc
enter
cmp
jl
or
out
mov
jecxz
xchg
lahf
dec
jne
xchg
popa
and
mov
sub
mov
popf
mov
jp
sbb
stc
adc
loop
adc
in
adc
sbbb
jno
arpl
jae
pusha
cs
push
test
sbb
pop
repnz
xchg
outsb
scas
mov
dec
sbb
push
insw
enter
mov
aam
stos
xchg
call
iret
inc
inc
push
or
inc
xchg
aam
fs
xchg
sub
sbb
dec
mov
shrb
idivb
fadd
sub
mov
jmp
and
sti
xor
push
xorl
jg
and
in
xor
icebp
xor
lcall
mov
cmp
jno
mov
mov
mov
pop
mov
nop
call
fwait
jle
stos
pop
insb
loop
mov
xor
jae
movsb
dec
pop
fisubrs
movsl
mov
push
mov
push
test
dec
adc
fsubs
xchg
push
mov
sbb
into
mov
or
xlat
call
xchg
cltd
sbb
aad
inc
sbb
and
xchg
dec
push
and
stos
imul
loopne
scas
gs
rol
pop
jno
add
mov
and
cltd
cmpsb
xor
lods
inc
std
lds
mov
sub
dec
test
push
dec
add
lahf
fs
xchg
dec
cmpsb
shll
cmp
fistl
and
loop
mov
movsb
jmp
adc
inc
add
test
push
ja
iret
mov
adc
xchg
pop
xor
fmul
xlat
nop
xor
push
inc
fsubl
xchg
mov
xor
cmc
sub
add
data16
out
add
or
idiv
jno
push
pushf
and
fsubl
add
sti
dec
mov
cli
pusha
in
mov
lahf
insl
push
fwait
jmp
push
mov
test
push
scas
bound
sbb
in
mov
mov
aaa
push
or
sbb
mov
nop
mov
loopne
mov
pusha
out
movsb
add
iret
mov
xor
and
mov
push
gs
mov
popa
in
ljmpw
or
in
insb
adc
mov
mov
leave
pop
adc
push
movsb
aas
push
xlat
inc
inc
sbb
inc
iret
cwtl
sbb
push
cmp
cld
loope
cmp
push
ret
cmpsb
insb
insl
aas
lahf
jle
xor
add
jnp
ljmp
jne
mov
adc
rcl
inc
mov
call
jo
cmc
lcall
mov
mov
testl
inc
xchg
insl
or
xor
sub
leave
mov
sahf
nop
outsl
adc
dec
xchg
into
in
dec
rorl
lret
or
shl
sti
insl
lods
sarb
inc
fcomip
daa
into
mov
mov
xlat
test
push
sbb
rcrl
lods
out
push
das
hlt
push
lock
pop
jo
incb
orl
mov
pop
pop
cmp
xor
sub
ss
and
pop
pusha
dec
in
sub
mov
dec
scas
out
xchg
sub
lods
xchg
jmp
sub
and
jnp
movb
jno
dec
ret
mov
ss
dec
xor
or
and
subb
les
xchg
add
pop
or
stos
dec
mov
lahf
cmp
cli
adc
inc
sbb
int3
iret
stos
imul
inc
cwtl
or
mov
repz
ficoml
loop
shl
xor
bound
add
int3
fcoml
jo
adc
clc
cmp
and
inc
dec
addb
sbb
scas
das
loope
stc
pop
cld
xor
filds
cmp
lahf
jle
addb
mov
and
mov
jmp
pushf
adc
jg
jbe
cmc
xchg
mov
outsb
js
addr16
sbb
fwait
std
or
leave
cmpsb
cmp
imul
ss
sahf
loop
or
xchg
push
cmp
test
jae
adc
mov
aad
dec
sahf
jae
sub
in
push
mov
lahf
mov
mov
sub
pop
dec
push
sub
mov
pop
push
mov
mov
fldenv
xchg
cmpsl
mov
in
add
mov
or
loop
aam
rclb
incb
test
mov
fsubrl
mov
int
enter
pop
push
fnstcw
or
push
jp
jo
lods
loop
jmp
jne
sbb
and
test
add
test
in
fnstsw
mov
xor
pop
pop
mov
das
fsubs
insb
scas
jmp
scas
xorl
bnd
push
xchg
xchg
adc
stos
aam
xchg
sub
adc
int
shrb
sub
jb
out
and
fwait
inc
fs
cli
hlt
xchg
fimull
aas
sti
xor
daa
hlt
lret
sbb
adc
jne
jle
cmp
bound
cmp
iret
mov
movsb
faddl
test
mov
test
pop
out
sub
and
mov
ja
inc
imulb
frstor
push
bound
fisubrs
clc
jmp
fists
adcb
cmp
pop
ljmp
outsb
sub
and
sub
lods
mov
shl
adc
mov
jnp
pushf
insl
and
add
ss
cs
test
les
addr16
call
jns
test
in
push
lea
push
psubusb
inc
and
dec
mov
pop
test
push
mov
pop
or
jne
in
and
push
test
inc
mov
cmp
fwait
or
jns
inc
ljmp
sbb
insb
xchg
fwait
adc
push
into
test
dec
sub
sbb
adc
enter
decb
nop
jg
ja
scas
hlt
arpl
or
loope
stos
pop
xor
and
pop
inc
divb
xor
mov
test
scas
xchg
mov
add
into
hlt
aas
xchg
dec
cli
jg
cwtl
in
cmp
inc
stos
loope
dec
icebp
rolb
repz
fidivrs
mov
mov
out
ljmp
sbb
mov
int3
rcll
lret
cmpsl
xchg
pusha
and
inc
into
imul
push
lods
int3
push
stos
jo
push
sub
adc
mov
pop
cmp
push
bound
test
cltd
push
testl
insl
in
and
cltd
stos
inc
out
mov
pop
lahf
popf
push
loopne
xchg
sar
pop
mov
mov
push
test
call
xchg
popa
iret
mov
jbe
fisttps
ret
lock
lock
lods
sbb
fnstcw
loopne
pop
sbb
mov
hlt
jmp
repnz
aaa
mov
mov
fdivrp
gs
in
jecxz
xchg
or
push
mov
lcall
add
bound
es
xor
ret
les
adc
pop
leave
out
mov
ss
stos
lcall
jmp
arpl
cmpsb
jo
mov
xchg
aam
mov
jmp
pop
rcrl
xorb
fs
test
sahf
call
mov
dec
add
mov
or
or
daa
jle
scas
jge
lds
shrb
inc
aad
pop
mov
dec
add
cmp
dec
xchg
and
dec
insl
mov
push
rcrb
push
and
pushf
pushf
out
mov
adc
dec
idivb
cwtl
jbe
jecxz
movsl
add
pop
stc
inc
xor
lds
icebp
mov
dec
xor
xlat
psubsb
jp
xor
mov
dec
sti
or
adc
add
mov
fwait
push
mov
test
cmpsb
cmp
or
or
loope
fldl
cltd
cmp
in
repnz
dec
ljmp
rorb
shl
stos
push
or
imul
mov
fmuls
adc
nop
jae
jbe
jl
leave
and
in
clc
jge
imull
push
inc
xor
adc
shll
repz
js
dec
dec
lea
test
sub
shlb
lret
xchg
das
lods
mov
aam
std
push
inc
mov
sbb
sbb
mov
sub
jnp
test
or
xor
lock
dec
mov
adc
push
xsha256
cmpsb
aad
push
pop
lret
sbb
lahf
jmp
addr16
iret
aaa
inc
clc
mov
gs
loope
bound
cltd
lret
bnd
fdivl
sub
test
sahf
fs
or
sbb
push
xchg
xchg
lds
lahf
scas
mov
je
mov
mov
lahf
mov
rcrb
mov
mov
or
and
fistpll
fwait
ret
mov
mov
mov
mov
mov
ret
jl
lret
shlb
dec
mov
pushf
in
test
ret
fwait
jnp
jmp
or
mov
xchg
jle
les
sub
insl
pop
cmp
lock
push
movsl
addr16
or
cwtl
dec
scas
daa
test
popf
ss
mov
lahf
mov
xchg
sbb
repz
push
dec
jmp
sub
adc
lock
aaa
pop
inc
inc
nop
add
daa
mov
jp
xor
hlt
out
and
push
pop
imul
dec
inc
dec
adc
insb
mov
mov
outsl
aad
push
xor
in
fs
adc
adc
push
out
mov
in
negb
rcll
std
add
sbb
repz
loopne
add
test
add
push
aas
testl
xor
mov
push
dec
fwait
shl
lret
pop
adc
aaa
jle
jp
xor
mov
mov
ja
ja
cltd
iret
outsb
stos
add
std
gs
popa
fidivrl
push
cmpsb
pop
loope
pusha
push
push
ret
outsb
sbb
in
leave
push
fs
xchg
jl
xlat
xor
fs
lds
nop
clc
push
daa
pop
xor
pop
lahf
xor
loope
xchg
add
in
aad
jg
push
xor
mov
imull
mov
fs
sahf
and
push
es
push
mov
add
icebp
pop
and
lods
cmp
sahf
xor
jae
fisubrs
fwait
js
sbb
testl
jge
pushf
inc
pop
das
dec
aaa
and
scas
out
jno
mov
adc
aaa
in
push
decb
push
push
sbb
sub
mov
bound
scas
mov
shlb
dec
test
xchg
int
orb
scas
jmp
nop
imul
inc
inc
movsl
test
mov
das
xor
or
push
imul
sub
mov
pop
jns
jae
sbb
cmp
inc
adc
jb
mov
sbb
mov
or
or
cli
stos
arpl
and
rol
shlb
dec
icebp
fwait
pushf
lock
adc
shrl
mov
jecxz
push
mov
jne
ret
daa
outsb
rcr
les
jmp
arpl
adc
sub
add
push
lods
in
addr16
pop
and
inc
inc
push
inc
lds
mov
jnp
jae
lret
jbe
jnp
ljmp
std
jno
jbe
and
out
jge
add
in
lret
mov
icebp
fcomps
and
ljmp
adc
iret
jmp
mov
dec
dec
sub
fadds
jne
mov
xchg
loopne
mov
xchg
insl
jl
xchg
out
not
add
mov
repz
stc
mov
adc
jle
pusha
std
in
cli
idivb
add
andl
aas
pushf
mov
fstp
lock
mov
and
push
loop
rolb
adc
cltd
mov
jb
or
xchg
stos
jno
xchg
in
jmp
aaa
dec
out
and
sub
lods
cmp
push
loopne
xchg
loope
xor
hlt
fistps
mov
jbe
roll
cmpsb
dec
inc
push
add
or
xchg
lcall
shrb
fdivrs
ret
sahf
jmp
push
lds
push
je
push
fmuls
jno
or
jmp
insb
pop
shlb
dec
aad
pop
pop
or
sbb
ficomps
fs
inc
insl
lret
enter
and
add
mov
ret
aaa
fisubl
rcrl
sti
flds
aaa
cmp
sbb
lods
jae
mov
popf
int
xchg
sbb
outsb
aaa
jg
clc
repnz
sbbb
and
jmp
fwait
push
jb
clc
mov
out
cmpb
sbbb
scas
into
inc
insl
test
ljmp
and
shlb
loop
out
push
mov
inc
nop
sbb
aas
int
int3
or
fwait
test
cltd
fwait
mov
push
xor
xlat
sbb
jo
shrl
dec
or
jge
inc
stos
outsl
dec
inc
jmp
lods
xor
jo
or
mov
out
jmp
pop
sbb
xor
in
cmp
or
pop
aaa
call
xlat
xor
mov
xchg
sub
jo
add
jne
cmp
mov
mov
or
mov
mov
std
out
out
pusha
pop
out
and
jb
push
outsl
adc
out
fwait
testl
das
mov
push
and
push
fidivrl
mov
in
pop
inc
in
jne
pop
xchg
out
and
shrl
sarb
jp
pop
inc
dec
xor
cmp
add
jg
out
pusha
xchg
dec
jp
or
sarb
rorb
int
aas
aas
push
ds
xlat
pop
ja
cmpl
push
insl
loopne
dec
rcll
lea
xor
add
jnp
fnstcw
pop
stos
pop
std
inc
addl
mov
cmpsl
dec
pop
xor
pop
dec
sbb
and
fbstp
addr16
add
pop
outsl
and
add
fsubl
mov
fistps
add
iret
enter
xor
and
sbb
and
stos
movsb
icebp
adc
pop
push
mov
adc
push
or
mov
enter
out
lds
stc
daa
aaa
inc
xchg
in
int3
adc
lea
aad
rcll
cmp
mov
add
icebp
fwait
xchg
inc
popa
mov
ss
scas
ds
aam
dec
cmpsb
inc
xor
push
cmpsl
mov
cmpb
rep
daa
sbb
inc
daa
and
mov
negl
divb
idivb
xchg
sbb
insb
pslld
xor
test
inc
lods
xor
lahf
push
mov
addl
sbb
pop
fistps
xchg
fs
xor
repnz
scas
adc
pop
les
dec
cmp
mov
pushf
sbbb
xor
mov
sahf
xchg
xlat
std
in
push
inc
clc
adc
fwait
jle
mov
nop
adc
sbb
test
leave
shll
push
xor
incl
loop
adcl
sbb
rorb
mov
bound
push
shll
push
push
fdivl
xlat
push
or
cmpsb
sub
insb
loop
mov
addl
xor
mov
ret
lcall
sbb
clc
jmp
out
and
mov
xchg
jp
adc
mov
mov
test
mov
outsb
out
inc
jo
sub
stos
jl,pt
out
shl
ja
cmp
push
pushf
mov
xlat
push
push
je
cld
jne
pop
xorl
pop
gs
inc
push
and
call
or
addb
sub
dec
fadds
dec
mov
inc
leave
mov
fstp
imul
les
mov
adcl
je
mov
push
rcrl
enter
stos
cmp
lods
mov
leave
dec
mov
push
xor
jbe
pop
ret
jne
pusha
push
xchg
xchg
outsb
sbb
sub
xchg
icebp
cmpsb
sbb
add
push
adc
jge
xchg
test
lret
push
subb
movsb
test
ss
or
and
adc
mov
push
pop
das
les
in
jo
jp
adc
int
clc
and
xor
dec
setbe
shr
ffree
add
sbb
adc
mov
call
inc
inc
push
in
mov
xor
jb
ror
push
jmp
or
imul
std
mov
xchg
cli
jge
pop
cltd
adc
xor
push
jmp
std
xchg
sbb
jle
sub
cmp
jge
dec
fsubrl
sbb
sub
out
enter
sub
popa
std
aad
sbbl
or
mov
aad
xchg
outsl
inc
imul
add
mov
mov
sub
nop
outsl
mov
mov
or
mov
cmp
psrld
out
bound
sub
jg
mov
push
and
or
adc
dec
xlat
inc
mov
orl
mov
loope
dec
fldenv
outsl
mov
xor
aaa
cli
cmp
pop
idiv
inc
and
out
cmp
mov
jbe
pushf
lahf
icebp
nop
adc
fidivrl
out
mov
mov
dec
adc
jns
mov
out
repnz
test
rorb
pop
cmp
stos
inc
add
fstps
bound
push
test
imul
mov
add
pop
or
pop
pop
subl
push
jl
lods
std
xchg
mov
pop
js
repz
mov
fldcw
mov
pop
dec
ss
xor
sbb
and
mov
sub
dec
outsb
cmpsl
dec
xchg
cmpl
faddl
inc
sub
push
xchg
stos
scas
mov
pop
aad
sahf
aad
xchg
test
xchg
lahf
inc
fwait
inc
inc
sbb
jle
lock
and
xchg
mov
cli
in
ja
mov
cmpsl
xorb
jns
push
in
or
mov
in
add
push
pop
push
js
push
repz
repnz
pop
jnp
xlat
cmp
sub
mov
cmp
lock
daa
sub
and
fcomp
mov
aad
lret
je
fmul
ficomps
jbe
in
in
dec
bound
divl
repz
sub
and
adc
lcall
fstpt
and
mov
mov
outsw
cwtl
outsl
xchg
pop
ds
inc
jae
js
and
xlat
loop
dec
loopne
lret
cmp
lahf
gs
loope
lea
aad
cmp
mov
loop
dec
pop
cmp
in
stc
std
fistpll
out
and
jo
cwtl
mov
jp
adc
cmp
sub
jmp
jbe
pop
nop
int
ss
imul
ja
dec
fsub
mov
mull
cmpsb
mov
out
pop
shrl
stc
adc
jmp
sub
mov
jl
jno
gs
lcall
testl
cmp
push
jb
dec
les
leave
in
dec
and
adc
hlt
xchg
push
das
sbb
jge
shrl
lock
popa
jns
and
test
and
jnp
xchg
jbe
mov
pop
xor
mov
idivl
hlt
xlat
mov
sbb
cmp
mov
mov
dec
mov
push
ret
mov
push
bound
roll
xor
cmp
subl
aam
hlt
push
outsl
xor
adc
sti
pushf
arpl
fs
add
and
xchg
clc
mov
js
mov
pop
jae
xchg
cmpsl
in
decb
pop
push
fnstsw
and
dec
movsl
pop
leave
into
adc
adc
enter
dec
fidivs
push
pop
test
dec
pop
inc
adc
pop
test
mov
and
roll
cmp
sbb
push
mov
testb
sbb
jns
std
mov
fs
lahf
dec
andb
add
jge
fldl
jg
gs
mov
jno
fsubr
push
dec
push
sbb
cmp
lahf
mov
jle
outsl
std
std
xor
aad
push
ror
aam
sti
add
fstl
xor
hlt
jo
arpl
pop
cmpxchg
pusha
and
jae
mov
inc
fistl
mov
popf
fmul
cmp
add
jecxz
sar
rcrl
cmp
pop
and
cmp
add
rol
lods
fstpt
mov
shr
pushf
jne
loopne
cmp
fwait
sbb
addb
movsb
inc
adc
pop
adc
sarl
add
sbb
sub
mov
outsb
mov
rcll
sti
fisttps
ljmp
repnz
std
xchg
push
pop
clc
mov
push
cmc
mov
push
shrb
ja
mov
jle
je
add
jmp
enter
jp
idiv
dec
jl
repnz
push
fadd
dec
push
pop
hlt
add
addl
sub
lea
sti
insl
jg
jp
mov
or
cmp
add
enter
outsl
sbb
mov
cmp
sbb
movsb
xor
sub
std
lods
cltd
xchg
mov
and
addr16
push
loop
test
mov
pusha
add
inc
vucomiss
sub
mov
cs
outsl
addl
jmp
out
push
sub
xor
dec
insb
mov
or
clc
daa
xchg
mov
sbb
insl
rcrl
lods
and
mov
lea
mov
adc
iret
dec
js
aaa
jae
scas
or
pop
cmp
dec
shl
nop
cmp
mov
dec
xor
jle
jae
jecxz
pop
or
rclb
lds
push
or
dec
inc
adc
scas
push
lds
mov
int3
enter
fwait
push
mov
cmp
cmpsl
or
lds
test
int3
cmpsl
aad
cld
xchg
aaa
pop
in
outsb
je
loope
mov
jo
test
movntq
fsubs
popa
inc
dec
lock
jg
dec
xchg
loopne
fmul
mov
pop
push
jl
test
jl
fcomps
popf
mov
loope
or
xchg
loope
dec
loopne
or
mov
jmp
jae
lods
fimuls
and
jecxz
nop
repnz
push
mov
xchg
out
push
sahf
cmc
jg
stos
outsl
inc
inc
test
sub
mov
imul
pop
movsl
out
arpl
adc
dec
cltd
pop
push
xchg
mov
and
mov
push
push
stos
test
mov
mov
fs
jge
dec
cli
adc
lcall
cmpsl
mov
cmp
loopne
pop
fst
pop
pop
and
push
jmp
push
sub
mov
push
js
push
and
adc
pop
out
cmp
repnz
inc
adc
lods
aad
cmpsb
mov
sbb
ds
or
jmp
mov
pushf
cmp
sarb
es
sub
orl
jmp
cmp
cmp
outsl
fcoms
inc
cmpsb
or
xor
push
fs
imul
xlat
imul
ljmp
push
pop
rcll
dec
sti
ja
add
mov
sbb
outsl
movsl
adc
aaa
cvttps2pi
les
cltd
xor
test
test
insb
leave
push
inc
sbb
loop
add
fistpl
sbb
pop
lds
pop
imul
movsb
mov
pushf
add
loop
popa
lods
test
sbb
sbb
push
mov
lcall
inc
bound
aad
or
cmp
nop
adc
mov
cmp
ljmp
mov
mov
test
lret
icebp
push
add
icebp
jge
or
stos
mov
push
jne
sbb
nop
gs
dec
mov
enter
pop
sbb
shlb
es
xchg
xor
jecxz
aam
sbb
inc
xor
jge
sbb
je
add
dec
iret
movsl
and
or
mov
das
push
mov
daa
js
mov
fbstp
add
stc
lods
loop
pop
mov
out
pop
inc
outsl
ss
jmp
push
leave
xchg
call
cmpb
aas
push
xchg
inc
jno
aad
into
lcall
jp
scas
add
mov
loopne
inc
clc
sub
dec
mov
test
movb
int
mov
or
int3
push
pop
das
mov
out
fwait
sbb
push
push
pop
popa
pop
adc
and
add
xchg
fsubs
std
push
mov
stos
outsb
cmpsl
or
test
and
lods
mov
jg
sahf
mov
addr16
lock
in
jno
daa
or
shll
push
xchg
push
cmp
std
jbe
lahf
outsl
push
xor
leave
cmp
inc
iret
mov
jno
mov
sbb
mov
cmp
sti
jecxz
popa
mov
dec
inc
jns
mov
sbb
mov
outsl
pusha
ljmp
popa
mov
mov
aam
lcall
dec
xchg
pop
shll
imul
popf
sbbl
imul
sbb
add
lods
xchg
cmpl
jp
into
cmp
fisttpll
xor
scas
iret
and
dec
pop
aaa
push
fldcw
or
xor
pop
ficomps
rorl
mulb
jle
push
push
sub
in
clc
je
mov
loope
mov
sbb
cwtl
or
cmc
je
rorl
rclb
fwait
pop
inc
mov
dec
test
sub
or
adc
into
loop
xchg
inc
pop
or
jp
int3
and
pop
es
cltd
sbb
js
sahf
jae
pushf
or
arpl
cld
or
pushf
jl
xor
call
mov
sub
jle
mov
jmp
cmpb
cmp
dec
xchg
lcall
add
add
and
add
call
pop
add
jp
or
dec
cmc
lods
cmp
push
xor
nop
add
pop
popa
inc
in
push
int3
es
or
jg
xorl
test
mov
inc
inc
mov
je
stos
sbb
or
mov
popa
gs
aam
rclb
mov
push
mov
inc
jecxz
or
mov
andnps
in
push
jle
clc
jg
shll
add
dec
in
not
inc
mov
xchg
sbb
inc
xor
dec
mov
pop
enter
push
and
mov
fnstsw
sub
aad
fcompl
inc
push
leave
dec
frstor
push
add
in
sub
es
test
cli
inc
add
lcall
xchg
pop
xchg
enter
pop
mov
fbld
sbb
adc
sbb
xadd
dec
jno
fwait
out
je
notb
sub
push
pop
xor
xor
fs
addr16
cli
loopnew
movsb
xor
xchg
xchg
shr
clc
jo
in
clc
dec
sbb
dec
jge
test
cmp
pusha
mov
jl
inc
out
inc
outsl
clc
jbe
add
aas
push
call
pop
pushf
test
xchg
push
inc
pop
dec
cld
mov
dec
push
popf
lcall
sub
popf
adc
push
jecxz
add
sbb
push
lea
sbb
outsl
dec
add
jo
cmp
add
jp
pmulhuw
aaa
jnp
cmp
popf
ret
in
sub
cld
jecxz
push
bound
sbb
mov
jae
mov
cmpsl
or
mov
imul
lock
pop
push
inc
fnstenv
addr16
jmp
push
mov
push
js
push
aaa
test
sub
push
int
cmp
xor
int
dec
inc
sub
and
cmpl
aad
std
cmp
xchg
pop
dec
xchg
addb
pop
iret
xchg
testb
sub
xchg
cmp
push
ja
sbb
iret
add
fwait
negb
fisubl
push
sub
jle
xor
add
mov
cld
in
sbb
minps
mov
ss
cmpsb
lret
lret
push
push
lea
push
aad
sub
mov
in
xchg
fcoms
mov
pushf
test
inc
inc
cmp
fnsave
cmp
sbb
jp
jle
add
xchg
lock
clc
and
ja
mov
subb
inc
fwait
jnp
push
adc
scas
pmaxub
add
mov
outsb
rsm
lock
xchg
inc
and
repnz
inc
cmp
mov
jne
or
add
add
mov
jno
mov
fisubrl
cmp
mov
not
int
cmpsb
push
xchg
dec
sbb
xor
imul
or
cmp
add
sub
fistps
mov
imul
xor
inc
mov
test
daa
popa
in
cmp
mov
lods
or
or
lahf
jns
xchg
scas
repz
ret
push
push
push
clc
mov
fstl
cmp
jne
lods
push
into
cltd
push
push
outsl
lcall
and
popa
inc
mov
insb
and
dec
adc
jmp
mov
mov
xor
in
mov
xor
sti
test
arpl
mov
pop
pop
lods
adc
ret
dec
cmc
jnp
xchg
push
mov
inc
inc
rorl
sbb
sti
xor
xchg
fcomip
push
xor
mov
ds
adc
stc
mov
popa
mov
lea
and
js
inc
sub
lcall
in
push
pop
lock
fbld
sub
insl
ds
scas
gs
pop
adc
dec
cmp
jbe
pop
outsl
rcll
inc
in
int
push
mov
shlb
fistpll
cli
aaa
pop
mov
mov
rolb
pop
loopne
cmp
mov
adc
sub
mov
add
mov
push
jl
mov
ljmp
daa
movsb
enter
mov
pop
adc
pop
or
mov
push
push
jns
pop
adc
cltd
ret
enter
jle
or
insb
or
mov
or
jp
pop
shll
or
sbb
xor
data16
push
sbb
add
vaddpd
jo
dec
test
push
and
andb
ret
enter
xchg
mov
and
aas
rorl
push
sahf
and
popf
fldl
sbb
mov
jge
lret
jmp
or
lea
cmp
pop
lahf
enter
xchg
cmp
rcrb
stos
adc
dec
and
movsl
jp
lea
popf
leave
xchg
int
jo
mov
mov
push
outsl
xor
push
jnp
xchg
adc
xchg
mov
hlt
mov
dec
mov
fbld
sub
jae
les
jge
adc
or
pop
dec
out
fwait
das
addr16
xor
mov
repnz
and
je
mov
cld
arpl
mov
pop
jbe
divb
xchg
pop
int
fsubp
mov
aaa
cmp
enter
je
adc
jle
sbb
adc
pop
sub
testl
and
mov
fdivrl
push
stos
sub
stos
outsb
mov
aaa
aam
inc
mov
mov
call
fdivl
pop
in
jp
xor
das
inc
pop
or
je
cmp
jle
arpl
aad
aad
and
mov
dec
xchg
adc
mov
sbb
andl
out
subb
mov
inc
dec
dec
inc
pop
fsts
inc
push
add
je
dec
cltd
rcrl
into
jb
idivl
cmp
or
scas
inc
addl
orl
mov
loop
jbe
pop
dec
push
jno
sar
mov
add
push
sarb
add
roll
mov
jnp
jge
aaa
push
aaa
adc
push
dec
xchg
pop
sbb
push
loop
cmp
nop
mov
enter
pop
push
xor
or
dec
lcall
inc
popf
ss
mov
xorb
pusha
rcrb
test
push
adc
scas
pop
adc
int3
popf
push
lret
mov
fsubl
mov
cmp
jae
pop
repz
clc
sti
or
mov
loop
sub
fildl
jo
int
push
or
outsl
jb
mov
outsl
adc
sbb
in
out
cld
jns
inc
lea
xchg
test
loope
loop
xor
test
or
hlt
out
in
xchg
sub
push
into
jp
push
cmp
xor
cmp
inc
push
adc
or
loop
mov
movswl
mov
dec
cmpsl
push
lahf
xchg
or
outsb
pop
ja
addr16
outsb
jl
nop
mov
mov
mov
lea
xchg
xor
mov
or
int
test
and
dec
cld
sub
push
aas
xor
rcrl
and
push
pop
ret
adc
add
arpl
pop
mov
imul
dec
add
xchg
inc
out
mov
fnstcw
insl
rcll
jbe
in
push
outsl
jno
roll
aad
ss
mov
sub
mov
pop
lret
aam
and
pop
adc
mov
sbb
inc
mov
fstpt
xor
lds
mov
mov
or
and
mov
pop
insl
mov
push
scas
pop
xor
outsl
jb
outsb
and
add
aas
inc
pop
mov
xor
pop
dec
mov
inc
leave
clc
stos
xor
dec
in
jl
xor
std
adc
adc
dec
adc
cmpsb
adc
inc
fcoml
mov
cmp
jle
ljmp
sub
gs
dec
xor
aad
dec
popa
jle
ret
test
test
pop
lods
sahf
jo
mov
ds
dec
push
lret
addb
push
aaa
push
mov
pop
fistl
ljmp
and
in
sub
xchg
jo
outsl
std
push
lret
lea
add
mov
adc
inc
xchg
xor
sbb
jae
inc
popl
mov
and
out
fdivr
nop
inc
std
in
xorl
in
inc
mov
test
mov
imul
cltd
test
mov
lock
add
mov
push
pop
push
test
lret
imul
faddl
cwtl
sbb
pop
mov
mov
hlt
xchg
in
push
aas
dec
popf
pop
mulb
mov
inc
icebp
mov
and
cwtl
sbb
int3
dec
inc
mov
shlb
in
adc
subb
insb
sbb
inc
push
mov
inc
sbb
mov
ds
sub
stos
sbb
fwait
pop
lods
or
mov
loopne
xchg
mov
push
movd
sti
pushf
pop
repnz
jno
arpl
les
lahf
leave
jge
movsb
shrl
push
push
fidivrl
mov
mov
insb
test
jl
insb
push
sbb
mov
cmpsb
scas
dec
xor
test
mov
or
jl
xor
adc
sbb
loop
popa
xor
mov
sti
xchg
aas
jmp
rclb
xorb
divl
ljmp
subb
cmp
pop
push
xchg
jns
mov
add
jmp
add
mov
aas
or
or
das
xchg
std
pop
iret
cli
xor
dec
mov
fidivl
xchg
xchg
mov
mov
fldt
adc
inc
mov
pop
gs
pop
add
add
movsl
xchg
mov
data16
ds
add
addr16
frstor
and
or
mov
mov
out
clc
movsl
mov
cmp
fcmovbe
subb
adc
adc
xor
orl
xchg
in
lock
cvtps2pi
pop
je
push
xchg
fdivl
push
scas
in
call
sub
pusha
stos
xlat
xchg
inc
fwait
scas
xchg
lret
fdivr
pop
fnsave
sbb
dec
sub
sahf
and
ds
data16
test
cwtl
push
cltd
popf
rolb
inc
dec
in
rorl
cmpb
mov
std
jl
popa
xor
and
imul
mov
cmpsb
out
test
inc
arpl
add
sub
push
cmc
cmpsb
mov
xchg
mov
sbb
int
jecxz
mov
loope
dec
hlt
xor
pop
in
out
cmpsl
jp
pusha
out
fidivl
test
mov
xor
imul
mov
mov
push
ror
mov
test
loop
ljmp
sbb
adc
mov
rorb
inc
fcoms
mov
dec
or
add
inc
cmpsl
mov
rcll
stos
push
fidivl
into
dec
mov
ffreep
cwtl
je
jp
mov
jae
inc
jp
sbb
cmc
push
test
rdmsr
and
sti
cmpsb
mov
cmp
jp
nop
pop
mov
test
in
mov
test
jp
push
add
enter
inc
and
pop
inc
decl
in
push
popf
cltd
ret
jnp
and
or
add
mov
pop
cltd
aaa
nop
mov
mov
js
aad
dec
leave
movsl
xchg
movsl
dec
jge
xorb
and
mov
jb
cwtl
add
push
mov
sti
cmp
xor
rorl
inc
mov
mov
xor
mov
clc
cmp
and
sub
cmp
adc
dec
jecxz
mov
push
xor
stos
sbb
cmpsl
sub
ret
iret
or
or
mov
mov
mov
ja
into
push
repz
lret
dec
std
lock
ja
sub
vpunpcklqdq
iret
cmp
pop
imul
sbb
dec
jp
inc
xchg
mov
enter
sti
stc
mov
jbe
jle
sahf
insb
pop
les
jmp
jge
or
aas
mov
loopne
cltd
xor
xlat
pop
adc
xchg
ret
in
and
or
test
or
out
push
aad
xchg
enter
insb
sahf
push
lods
xchg
jns
test
int
push
xor
imul
jle
jmp
data16
int
repnz
mov
xchg
push
push
xor
cmpsb
js
xchg
jae
ficoms
pop
inc
imul
cli
xchg
sbbb
pushf
and
sarb
xchg
xor
scas
sbb
loope
cmp
roll
movsb
pop
sbbl
int3
sub
xor
mov
sbb
xchg
outsb
hlt
add
inc
sbb
pop
inc
add
int
stos
dec
jo
or
adc
ficoml
push
dec
push
loop
cli
mov
xlat
addr16
cs
adc
jp
ja
lods
jp
aad
loopne
jnp
les
stos
sub
aaa
rcrl
inc
idivb
mov
dec
insb
jg
mov
inc
sbb
mov
rolb
cmp
push
aad
int3
ret
add
push
sbb
fdiv
repz
mov
test
test
mov
je
lahf
push
push
lock
add
push
jmp
aad
push
xchg
sbb
push
or
test
inc
leave
push
leave
push
int3
test
imul
insl
stos
fdivrp
lods
roll
aas
nop
gs
jge
mov
adc
pop
aad
lds
mov
add
in
cmp
push
iret
cmp
pusha
xor
pop
das
mov
aaa
bound
and
inc
dec
in
adcl
sbb
and
popa
fistpll
push
pop
sub
or
das
mov
lods
in
outsl
fmull
dec
movsl
inc
cmp
insl
cmp
fisttpll
into
adc
jp
mov
test
push
lea
jnp
aas
sub
stos
sbb
jecxz
loop
mov
dec
into
fmul
inc
push
lahf
xor
subb
jne
bsf
cmp
push
jno
xor
test
add
addl
mov
orb
ljmp
mov
popf
or
mov
fildl
dec
xor
cmp
and
pop
jns
cmpsb
push
fsts
orb
int3
gs
mov
xchg
pop
mov
sbb
push
outsl
aaa
lock
jb
pop
js
scas
sahf
adc
pop
insl
push
mov
cmp
outsb
lret
xor
or
add
jo
out
inc
mov
jmp
sub
jo
arpl
mov
bound
popf
pop
cld
xchg
ret
or
jo
stos
push
ret
mov
out
jp
fnstcw
sarb
jl
sbb
je
add
push
loope
mov
jne
sub
pop
xor
sbb
jo
lods
mov
jnp
mov
mov
or
jnp
pop
adc
mov
cmp
outsl
inc
aad
xchg
jp
cltd
rcrb
cmp
xchg
out
repz
test
adc
and
lods
push
fdivrs
sbb
and
popa
in
add
lret
pop
outsb
mov
mov
sbb
sbb
arpl
push
das
mov
lods
decb
cmp
pushf
push
pop
mov
push
add
aam
cmp
popfw
or
out
outsl
daa
notl
push
xor
xchg
gs
dec
mov
pop
in
shr
cltd
cmp
das
dec
pop
or
or
loope
cltd
aaa
idiv
stos
inc
mov
xor
and
sbb
and
cld
inc
pop
stos
inc
sbb
mov
push
pop
loopne
jecxz
stc
xor
mov
outsb
ret
out
pop
aad
mov
pushf
loope
push
pusha
adc
or
lcall
pop
ljmp
mov
icebp
sbb
push
std
and
daa
mov
add
stc
mov
out
mov
cmpsl
and
inc
adc
sub
orb
push
fiadds
in
rcll
cs
jle
pop
mov
xchg
inc
repz
or
rcrl
sbb
lds
xor
pop
xchg
or
cmp
pop
sub
aad
rolb
test
push
imul
add
push
mov
shlb
loop
mov
xor
mov
ror
in
into
and
and
mov
cmc
mov
add
add
addb
adc
jb
xchg
mov
mov
mov
pusha
fwait
mov
mov
test
xchg
ds
movsl
in
insl
mov
xor
or
dec
test
loop
mov
hlt
stos
test
mov
sub
lcall
or
jmp
shr
sub
fstpl
xor
data16
std
inc
test
sub
scas
iret
sub
or
enter
sub
mov
jp
movsb
and
push
shrl
ret
mov
inc
mov
cwtl
push
adcl
jmp
arpl
fwait
ss
jno
push
sarb
sub
ja
fwait
inc
je
divps
cmp
mov
addr16
add
aad
sbb
insb
dec
mov
popf
sahf
lret
push
jbe
and
loop
leave
into
shl
cmpsb
inc
pop
inc
imul
popa
sub
bound
movsl
in
popa
add
aad
in
int
mov
sbb
dec
xlat
mov
ret
adc
xchg
imul
in
inc
repz
adc
inc
jl
gs
mov
cli
es
and
inc
pop
pushl
push
dec
adc
dec
mov
das
push
push
push
adc
scas
adc
add
decb
stos
mov
mov
nop
push
fiadds
dec
movl
xchg
adc
pop
bound
iret
xchg
adc
aas
pop
mov
or
adc
sub
test
scas
push
xchg
out
push
xchg
ret
out
rcrb
mov
mov
ss
mov
inc
out
lock
dec
xor
js
in
ret
ja
sub
ja
jge
push
xlat
ja
movsl
jge
rorb
loopne
push
popa
mov
dec
enter
xor
iret
andl
or
sbb
les
mov
pop
pop
adc
mov
out
sar
scas
cs
adc
and
out
sar
push
push
lock
roll
sti
lods
mov
pop
sbb
cmp
repz
push
cmpsl
out
fnstcw
ss
mov
sub
push
cltd
jno
pop
inc
test
les
mov
mov
test
int
ds
test
imull
jmp
mov
fdivs
pop
lods
sub
jne
adc
std
pop
fnsave
stc
push
dec
inc
mov
and
stc
es
pushf
dec
jbe
mov
les
call
mov
leave
or
out
xor
add
push
and
jns
jnp
pop
cmpsl
int3
mov
inc
test
dec
push
dec
mov
inc
lcall
leave
sub
mov
xchg
mov
cmp
mov
mov
dec
out
dec
dec
cmpb
hlt
push
mov
push
pop
clc
sub
and
inc
repz
dec
movsb
sub
ret
sub
add
insb
xor
and
test
leave
fwait
or
lret
repnz
movmskps
jge
or
je
push
cmp
cs
clc
outsb
mov
test
mov
lea
pop
loopne
lret
inc
push
adc
mov
ret
pop
push
dec
sub
loope
push
adc
and
pusha
push
sbb
mov
mov
xor
pushf
int
push
cmpsl
mov
add
test
lcall
pop
mov
cmpl
mov
cltd
repz
add
dec
aaa
lcall
ret
shll
idivl
enter
cmp
out
pop
jecxz
nop
mov
divb
cltd
xchg
mov
lret
js
cmp
dec
push
mov
repz
or
lods
mov
test
les
cmp
out
lock
in
mov
xor
mov
mov
push
xchg
ljmp
xor
and
out
adc
cs
xchg
pop
sbb
push
shr
sub
ljmp
xchg
ljmp
sarl
fsts
out
or
xchg
sbb
ljmp
push
and
js
lock
cmpsl
inc
int
scas
xchg
pusha
icebp
and
pusha
mov
xchg
cli
test
xor
or
pushf
cmp
or
adc
icebp
pop
mov
cs
in
andb
aas
ljmp
int
add
mov
rclb
push
dec
enter
lahf
fadd
mov
shll
into
ja
mov
jno
sbb
lock
pop
stos
hlt
loopne
adc
push
fwait
pop
cmp
lret
leave
push
mov
out
and
mov
dec
aas
jge
mov
push
add
dec
sahf
ficoms
orl
icebp
and
cmp
bound
dec
push
or
outsl
outsb
cmp
fwait
pop
imul
cmpl
out
mov
out
pusha
shl
leave
jns
out
cmp
inc
sbb
mov
mov
ret
repnz
aas
mov
movsl
xchg
and
stc
dec
lahf
mov
pop
in
pop
sub
mov
push
mov
repz
pop
aam
sub
in
dec
sbbl
test
aam
sbb
outsb
out
push
xchg
xor
inc
add
sub
xchg
jmp
xor
lods
mov
sar
add
sub
out
mov
call
out
daa
sub
add
gs
mov
sub
psubsw
imul
dec
mov
out
ljmp
lock
pop
int3
mov
sbb
xchg
cmp
cmp
add
js
enter
xchg
out
add
dec
mov
addr16
jl
negl
imul
sbbl
stos
fs
out
pop
stos
lahf
mov
inc
cmp
inc
scas
sbb
sahf
xor
add
mov
cmp
inc
fisubrs
pop
xor
or
xor
dec
adc
xchg
out
bound
fcompl
lods
fistps
imul
mulb
mov
cmpsl
fidivs
push
int3
cmp
fdiv
cli
adc
es
sub
insl
data16
jle
aas
pop
mov
xchg
inc
pop
sbb
mov
movzbl
push
sar
loop
mov
iret
and
add
adcl
mov
pop
mov
jb
enter
dec
movsl
push
jle
xchg
imul
cmpsb
lea
jge
call
sbbb
dec
or
or
lcall
rcll
or
xlat
jnp
insb
gs
mov
in
mov
add
pop
in
pop
xchg
add
adc
jge
stos
imul
int3
daa
xor
add
add
sarl
popf
mov
lods
sub
sub
pop
out
ret
cmc
adc
lods
movsl
je
inc
and
stos
out
jo
cmp
shlb
sub
cltd
inc
inc
cs
std
inc
cltd
push
dec
xor
bound
push
loopne
stc
call
cld
ret
pop
sahf
imul
xchg
pop
mov
outsb
mov
cmp
mov
xor
test
xor
mov
pop
fld
lea
and
jmp
pop
ret
out
mov
push
roll
shr
rolb
test
sbb
daa
or
push
jbe
mov
xchg
xchg
sub
testl
xor
lods
dec
das
and
adcb
inc
int3
loopne
dec
in
jb
ret
xchg
cli
mov
mov
and
add
mov
rclb
pop
cltd
mov
imul
pop
sub
and
jecxz
rcl
mov
imul
or
sbb
roll
jne
scas
sbb
xor
xchg
adc
jnp
adc
jae
jmp
sahf
adc
stc
cmp
bound
xchg
adc
lret
les
scas
xor
xlat
jae
std
pop
ja
mov
and
lods
adc
mov
push
sub
sub
jge
sbb
push
loop
cmp
imul
mov
add
shlb
stc
fildll
in
pop
enter
testl
je
xor
cltd
mov
cmp
scas
pop
std
add
and
sub
dec
test
addb
jnp
adc
lock
sub
sbb
adc
push
rorb
push
xchg
pop
dec
test
xchg
jle
pop
sub
clc
daa
or
mov
ja
or
push
mov
push
cmp
lds
rcll
sub
add
xor
movsb
or
jbe
shlb
mov
clc
xor
sbb
sub
push
pop
mov
mov
stc
fcomip
mov
cmpsb
into
mov
orl
fwait
cmp
mov
das
xor
test
and
mov
in
scas
mov
push
subl
jnp
adc
popa
mov
inc
sarb
in
sbb
jbe
negb
mov
pop
pop
je
and
push
int
jae
cmpsb
rorb
mov
xlat
sub
jb
mov
pop
or
inc
pop
adc
pop
hlt
jo
jge
nop
sbb
js
or
or
jge
dec
dec
cld
stos
and
rclb
mov
pushf
insb
add
pop
xor
mov
int3
nop
fwait
sbb
in
lods
xchg
dec
mov
push
imul
cwtl
ds
test
lock
mov
adc
pop
lret
sub
push
aam
cmp
mov
pop
xor
adc
cmp
sti
push
icebp
cwtl
sub
fwait
call
andnps
pop
test
faddp
sub
stos
int
inc
sarl
outsl
shl
xor
pop
mov
fs
pop
imul
sahf
cli
xorl
cmp
mov
sti
xchg
jle
sbb
xor
xchg
cmp
loopne
push
imul
mov
mov
lods
sbb
jle
inc
sub
xor
xchg
jp
xchg
jmp
push
xor
push
jp
add
sbb
es
pop
xor
scas
call
shrl
jns
add
pop
and
add
cltd
das
fstl
gs
xchg
sub
outsl
aad
imul
movsb
sbb
cli
mov
dec
aad
push
or
sbb
adc
mov
movsl
mov
jnp
popf
ret
pop
outsl
ret
lahf
cmpsb
xchg
insl
pop
pop
cld
insl
leave
imul
int3
cmp
push
lods
lods
mov
mov
jge
or
add
pop
jae
cld
and
mov
jle
sbb
xchg
jmp
push
out
mov
data16
and
add
sub
fildll
sub
jp
ss
test
adc
call
adc
movsl
add
cwtl
roll
inc
cld
test
mov
sarl
dec
mov
xchg
mov
jle
nop
ret
xchg
mov
mov
js
inc
test
cmp
adc
sbb
mov
pop
xor
jo
sbb
and
jl
jge
sub
xorl
cmp
xor
fnsave
movsl
mov
sub
sub
xchg
jecxz
push
lahf
cmpsl
mov
lret
enter
mov
sub
into
pop
mov
lahf
loopne
ret
sbb
inc
xchg
xchg
mov
push
sub
mov
or
jmp
lods
hlt
aaa
sti
shll
loop
arpl
xacquire
push
cld
out
insb
pop
les
cld
notb
sti
roll
pop
pop
pusha
jnp
ljmp
jns
jmp
clc
mov
cmp
push
aaa
decb
cs
cltd
push
mov
loope
sub
leave
adc
dec
push
jl,pn
jo
cmp
cmpsl
jo
gs
adc
es
je
lret
sub
dec
shll
lcall
mov
push
sub
push
ficomps
sbb
lcall
or
cwtl
fistps
insb
icebp
sub
jmp
stc
mov
in
iret
out
aam
xchg
push
leave
mov
push
jnp
shr
popf
inc
pop
xor
sbbl
ss
repz
rclb
dec
sbb
mov
sbb
adc
es
ret
fstpt
test
sub
jne
xchg
mov
insb
fcomps
aam
mov
leave
mov
movl
sub
stos
enter
lock
pop
mov
addr16
and
dec
ds
cmp
xor
bound
rcll
jb
mov
movsl
pop
dec
jns
jns
jo
xchg
sub
fdivp
test
sub
out
add
div
cltd
out
int
push
clc
ret
and
test
cmp
iret
and
cmpsl
popa
std
loope
rep
call
pop
lcall
lods
movsb
mov
pop
sub
xchg
cmpsl
cmpsb
inc
jecxz
jne
shr
sbb
pop
dec
fldenv
sbb
clc
push
sbb
lock
and
or
inc
fldenv
out
pop
push
into
nop
xor
subb
outsl
ljmp
pop
inc
mov
sub
pop
push
sbb
int
or
loopne
imul
sti
xor
aas
or
rep
mov
jo
xchg
fstpt
xchg
in
pop
pop
bound
or
fldcw
daa
call
sub
int3
mov
cwtl
dec
repnz
ficoms
ret
outsl
and
shr
cmp
jecxz
jle
adc
clc
fnstsw
cmp
pop
out
sbb
adc
sbb
xchg
adc
inc
lret
cmp
jge
or
gs
vpshrdvq
imul
or
sbbb
aaa
dec
mov
pop
in
filds
pop
imul
adc
jb
stos
leave
inc
daa
ret
sarb
rcll
inc
js
mov
fldenv
negl
sub
bound
dec
ss
inc
xchg
popf
movb
inc
and
xchg
sbb
xchg
dec
jb
pop
in
scas
push
movsb
push
test
gs
ret
sbb
aaa
and
mov
sub
fildl
jmp
pushf
fidivs
fsubs
addl
push
mov
jnp
cs
movsl
add
imul
sub
jne
xor
xchg
pop
inc
jle
addr16
xor
jno
mov
icebp
cs
jbe
xchg
add
data16
pop
and
and
cld
xchg
decl
dec
xchg
adc
ss
call
mov
fstpl
jmp
lahf
xchg
or
divl
xchg
fs
jb
mov
mov
mov
repnz
notl
ds
cmp
into
shrl
pop
inc
xor
ljmp
lods
insl
aaa
out
dec
sbb
js
inc
mov
and
insl
push
subl
imul
push
mov
jne
lods
and
add
add
xor
data16
fs
jmp
push
pop
sub
or
popf
aaa
dec
sub
rolb
rep
jg
cmovo
mov
inc
add
and
jns
push
ret
and
ljmp
lods
fistl
pop
out
cwtl
leave
outsl
sarl
sub
fcoms
mov
dec
push
and
push
sub
dec
aas
hlt
xor
cmp
lahf
das
notb
adc
ja
loope
push
test
or
cmc
or
inc
stos
popa
push
cmp
loopne
pop
pop
aad
dec
les
jle
xor
cld
jns
imul
inc
jl
sbb
jne
xchg
call
xchg
pusha
and
cmc
inc
mov
mov
lds
ret
xchg
movsb
stc
push
inc
sub
cmp
mov
dec
push
ret
and
pop
cli
popf
pushf
push
xchg
and
mov
xchg
xor
and
push
mov
fisubrs
push
test
inc
idiv
pop
js
add
sahf
pop
outsb
xchg
inc
cs
arpl
inc
out
pop
push
scas
mov
rorl
add
rcl
lcall
lret
outsb
divl
jp
dec
movl
ja
leave
mov
jmp
sub
into
mov
mov
cmp
shlb
sub
ret
scas
mov
lods
repz
sahf
outsb
adc
int
xchg
in
pusha
jl
out
pop
and
inc
jl,pt
mov
cmovns
and
icebp
pushf
sub
and
xchg
sub
cmpsl
sahf
idiv
push
outsb
jl
sub
pop
adc
pop
in
jg
jae
sub
call
lods
clc
mov
sbb
loopne
and
cmp
and
imul
iret
push
sbb
das
sbbl
or
add
sbb
inc
sarl
js
call
mov
sub
cmpsl
sub
pop
rorl
sbb
std
shll
nop
scas
cmpsl
outsl
mov
ja
dec
movsl
mov
out
mov
cmpsb
pop
xchg
push
out
pop
mov
pusha
xlat
bound
jne
sbb
jbe
cltd
std
scas
ds
rorl
mov
sub
sub
or
push
inc
fsts
scas
dec
lret
xchg
lret
push
std
xor
ja
leave
aaa
dec
je
ja
aaa
lret
pop
call
rorl
xchg
loope
sbb
int
stos
enter
cwtl
int3
hlt
push
lea
and
mov
je
outsl
xchg
push
xchg
adc
inc
pop
cwtl
sti
xchg
iret
mov
sahf
adc
sti
outsb
xchg
lret
stos
xor
cmp
lret
xchg
inc
mov
cmpsl
push
cli
sub
mov
test
mov
push
repnz
xchg
xor
fnstsw
pop
inc
sbb
sbb
roll
hlt
xor
pop
adc
shrb
lret
jle
scas
pushf
and
lcall
repnz
sbb
and
xchg
add
fpatan
push
lcall
outsl
movsb
mov
loop
gs
test
push
sahf
dec
dec
mov
adc
cmp
imul
cs
out
frstor
imul
inc
and
cmp
add
pop
xchg
mov
or
mulb
insb
lret
push
mov
pop
cltd
outsb
sahf
lahf
sub
or
inc
sbb
sbb
movsl
enter
fyl2x
testl
xorl
fistl
mov
mov
mov
adc
push
ja
jae
shll
nop
fsubl
pop
fs
mov
repnz
rcr
pop
dec
negb
mov
xchg
jge
mov
or
lret
cwtl
call
jge
ffree
andl
pop
pop
push
push
ret
mov
movsb
adc
xchg
rorl
aas
mov
push
or
mov
sbb
jbe
pop
push
js
xor
inc
jg
hlt
adc
mov
sbb
push
pusha
stc
adc
lea
scas
add
fildll
sub
imul
push
xchg
jg
and
les
push
adcb
scas
sbb
mov
ljmp
sahf
dec
rorl
xlat
sub
out
popf
sbb
xchg
imul
daa
jno
jle
fcompl
ja
pop
cmp
or
and
aad
jl
fisubrs
mov
mov
cs
and
filds
mov
dec
xor
push
inc
or
push
pop
ss
je
rolb
adc
mov
clc
mov
loop
inc
inc
mov
rorl
and
jmp
cli
add
aad
dec
pop
divb
jns
out
and
mov
lret
sub
jge
sbb
inc
orl
call
jnp
cmpsb
insb
cld
into
jge
sti
repz
mov
adc
divl
test
push
push
push
outsl
dec
push
adc
jge
in
fldt
inc
popf
mov
sti
inc
jg
dec
dec
dec
insb
or
std
aam
adc
inc
cmpsb
sub
lret
fimull
insl
aad
mov
cmpsl
xor
mov
or
aad
xchg
lea
mov
loop
cli
dec
cltd
out
arpl
push
lahf
adc
test
pop
pop
push
test
mov
push
rorb
out
imul
mov
pop
adc
and
sbb
pop
cmpsb
out
mov
testb
dec
add
or
nop
inc
fsubr
inc
xchg
scas
add
mov
arpl
cmp
das
xchg
into
lret
mov
int
mov
jns
mov
and
pop
or
xor
cltd
fisubrl
clc
sub
iret
dec
fsubl
popa
xor
adc
cli
sti
aad
sub
or
mov
sbb
sub
cmp
or
imul
fcomps
das
mov
stc
in
mov
nop
out
pop
pop
mov
sti
mov
jno
out
xchg
mov
and
loop
scas
arpl
sub
imul
push
and
popw
sbb
cmc
xchg
cmp
mov
cmpsb
pop
adc
call
dec
mov
mov
mov
pop
mov
popa
xchg
fidivl
dec
adc
and
cmp
xor
dec
sbb
notb
push
aam
jo
movsl
pop
mov
pop
int3
push
and
and
aaa
xor
push
fdivr
jo
in
cmp
aam
lcall
jns
mov
sbb
push
inc
cmp
fisttps
dec
out
xor
inc
mov
sub
inc
cmp
mul
std
shrb
fdivs
or
pop
out
data16
les
sub
jno
and
add
shll
sub
mov
xchg
sub
and
add
mov
dec
jmp
push
mov
lahf
sbb
pop
test
cmp
sarl
aaa
add
aad
sbb
sub
push
mov
sub
jnp
idivb
inc
cld
loopne
sub
leave
add
popa
mov
out
fmulp
cmp
xchg
cwtl
aas
cmpsl
jnp
pop
ja
sub
jle
sub
mov
push
or
mov
sbb
js
jns
push
inc
jno
mov
call
out
push
add
or
sub
rclb
fdivp
mov
inc
loopne
sahf
mov
dec
push
dec
cmp
cmp
stos
mov
shlb
in
icebp
cmp
test
scas
leave
fisubrs
lcall
sbb
mov
add
dec
popa
gs
cli
stc
and
xor
jg
inc
fcmovnbe
iret
in
sarb
push
or
loope
dec
pusha
ja
aas
add
pop
ss
xchg
sub
add
nop
fmull
psllq
leave
testb
lods
dec
adc
faddp
cmc
sbb
ja
syscall
sbb
pop
push
aad
or
insb
fstpt
push
std
cmp
pushf
jge
out
mov
jp
and
in
add
mov
jb
pop
inc
lcall
cmpsl
adc
scas
fldenv
mov
or
xchg
rclb
mov
ds
xchg
push
pop
jl
dec
ljmp
div
push
mov
dec
repnz
or
adc
test
divl
repnz
push
imul
sbb
repz
push
push
or
and
or
sbb
inc
pushw
cmpsb
inc
stos
pushf
icebp
adc
test
je
adc
fs
std
jae
inc
int
iret
iret
sbb
out
aad
icebp
rclb
outsl
fsubrp
jae
in
outsb
popf
movsb
fmull
xchg
push
imul
mov
sub
hlt
mov
and
inc
mov
testb
in
mov
stos
sbb
jae
and
cld
jbe
repz
ljmp
ljmp
push
xor
adc
sbbb
sbb
sbb
fsubl
hlt
sub
js
ficoml
cli
push
inc
int3
out
fsin
rorb
or
jo
push
loope
jmp
sub
rolb
scas
mov
jnp
mov
fdivrl
jbe
hlt
adc
jle
in
mov
inc
xor
imulb
add
inc
xchg
call
mov
lret
jbe
hlt
iret
out
xor
mov
and
adc
jnp
mov
enter
lahf
sub
xor
adc
loope
add
negl
and
mov
sbb
push
mov
dec
iret
loopne
dec
test
out
cmp
fld1
mov
jno
inc
push
jl
dec
xchg
pop
or
mov
adc
ljmp
nop
pop
mov
loop
mov
test
in
enter
xor
das
xor
ret
fnstcw
mov
jae
imul
lcall
cmp
mov
cltd
sti
add
pop
lcall
test
sub
and
sbbl
cltd
or
and
in
inc
cmpsb
dec
stc
sbb
mov
stos
push
mov
pop
push
pop
push
adc
sti
dec
fdivp
inc
push
out
pop
ja
or
in
shrl
cmp
push
xor
scas
nopl
adc
sbb
cmc
hlt
mov
pop
adc
push
jp
xchg
mov
mov
les
or
mov
xor
loopne
jp
repz
mov
push
or
scas
sbbb
loopne
in
cmpsl
mov
pop
and
nop
mov
xorb
jecxz
ljmp
push
jl
fldenv
daa
sbb
push
and
ss
shll
mov
dec
pop
dec
dec
shll
lods
mov
orl
or
adc
ja
outsb
pop
inc
imul
shll
jno
stos
idivl
mov
xchg
sahf
xchg
lret
mov
mov
jo
fisubrl
push
out
ss
ljmp
js
loope
cmc
in
xorl
mov
jmp
adc
pop
mov
gs
add
sub
popa
sub
stc
sbb
jo
pop
adc
push
shlb
jl
in
mov
dec
jge
cmc
jl
and
xor
inc
xor
fs
test
clc
push
stos
or
push
insb
stc
or
clc
add
push
jns
andb
das
mov
test
repnz
dec
sarl
jne
in
test
jne
aas
and
jge
popf
jno
scas
in
repnz
cmc
dec
and
xor
pop
sbb
push
pop
out
in
cmc
out
mov
and
ficoms
dec
das
pushf
scas
sti
clc
adc
nop
cli
mov
mov
adc
push
jg
dec
cltd
mov
add
dec
andl
mov
and
mov
dec
jne
jmp
dec
sub
fldt
lret
sub
stos
pop
sahf
xor
cli
scas
xorl
jge
add
testb
sub
cmp
mov
mov
pop
mov
lret
lret
pop
add
sub
and
push
adcl
out
inc
in
pusha
rolb
inc
lret
or
je
inc
cli
or
adcb
jnp
add
inc
ficoml
jns
mov
cs
xchg
iret
loop
repnz
icebp
push
sbb
fwait
out
add
jb
push
dec
rorl
push
imul
js
sub
pop
repz
xchg
jb
sub
in
add
jl
out
xlat
mov
mov
pushf
mov
mov
out
pop
outsl
dec
cld
jmp
ret
or
in
push
jae
jae
in
and
inc
jns
stos
ds
aad
ds
ljmp
inc
inc
jnp
xchg
js
mov
daa
test
sub
pop
add
push
pop
mov
mov
subb
dec
jne
jmp
mov
jbe
and
lret
inc
ss
mov
enter
mov
fimuls
comiss
jmp
mov
gs
jg
adc
mov
or
xchg
popa
fisubl
adc
mov
push
cltd
or
clc
lods
clc
imul
adc
out
push
movsb
add
jg
xor
lods
jne
sahf
ret
leave
imul
add
jp
les
neg
sub
mov
outsb
and
mov
sahf
mov
fdivrl
xor
dec
leave
int3
mov
popa
mov
dec
mov
sbb
loop
xchg
push
inc
push
dec
or
xor
cmpsb
add
shll
lret
aad
mov
dec
jp
dec
jl
add
insb
pusha
int
mov
loope
inc
aam
lock
iret
insl
sbb
push
pop
imul
pop
push
xchg
aaa
add
ja
negb
jne
out
jbe
lods
mov
loopne
pop
pop
enter
or
insb
mov
adc
or
in
pop
push
leave
cld
xchg
in
sahf
ficoml
mov
and
xor
sahf
scas
dec
cmp
or
or
jge
aas
sti
cmpsb
jnp
enter
js
iret
subb
dec
mov
mov
int3
pop
mov
push
and
xchg
out
stos
enter
xchg
loop
inc
movsl
pushf
xor
mov
loop
shlb
lds
mov
out
pop
sbb
loope
sub
mov
push
es
loope
push
ss
stos
addr16
xor
sbb
div
loop
aad
popf
cmp
sub
mov
outsl
push
movsl
fcmovne
jmp
stos
pop
cltd
outsb
ret
push
popa
aas
jge
push
cmp
ret
int3
inc
scas
or
in
adc
test
mov
hlt
add
movsl
jnp
mov
sub
movsl
rclb
jmp
int
ret
movsl
or
dec
cmpsl
in
dec
jecxz
scas
rolb
jmp
out
jl
push
cs
lcall
xlat
fwait
push
pushf
mov
insb
enter
xchg
mov
daa
xor
xor
pop
or
out
out
xchg
xchg
test
lcall
inc
xor
or
lds
jbe
adc
push
xchg
lods
mov
hlt
jno
leave
lahf
or
adc
in
add
xor
push
push
inc
sub
jne
xchg
and
testb
adc
test
cmc
mov
ret
xchg
scas
inc
movl
lds
ds
inc
pop
test
aas
std
mov
jge
into
iret
jge
pop
ret
stc
dec
test
xor
cwtl
repz
and
int
jle
mov
orl
inc
repnz
cmp
movsb
sarl
lods
out
adc
stos
sbb
sbb
mov
xchg
cmp
int3
or
mov
jecxz
lcall
sbb
outsb
and
sbb
inc
into
imul
divl
sbb
sbb
std
inc
aaa
clc
sbb
arpl
mov
xchg
adc
sub
dec
sahf
fidivs
pop
inc
jae
cmp
leave
sbb
push
testl
jge
add
adc
jmp
mov
mov
mov
sbb
addr16
jecxz
dec
imul
dec
lods
std
imul
xor
adc
xor
bswap
and
xor
sbb
call
loope
loope
movsb
arpl
ss
jne
sub
cmp
or
clc
out
je
sarl
push
mov
arpl
or
cmc
pushf
cmp
rorl
arpl
sub
enter
into
push
ja
andb
pop
mov
xchg
jecxz
out
jb
mov
sbb
dec
mov
push
je
out
and
push
xchg
mov
sarb
lock
outsl
jmp
add
fnstsw
cmpsb
mov
and
or
pushf
rclb
nop
ret
ret
cmp
jecxz
and
jle
pushf
xchg
jno
aaa
adc
out
mov
fsubs
sbb
ret
pop
push
sbb
mov
pop
pop
xchg
cmp
adc
add
sub
mov
fmul
int3
popf
arpl
sbb
and
into
jae
adc
out
inc
push
jle
scas
mov
jo
outsl
addr16
lods
popf
addr16
les
add
jp
stos
and
inc
pop
xchg
loop
mov
mov
out
pop
jbe
bound
iret
fstl
insb
outsb
and
icebp
cwtl
push
mov
cmp
or
pop
cld
push
mul
push
xor
cmc
inc
shr
cwtl
sbb
pop
packssdw
rcll
pusha
fdivp
push
scas
cmp
mov
add
push
fdivrs
jp
add
in
sub
divl
mov
sbb
lock
push
sahf
ds
inc
mov
xchg
cmovs
rclb
in
adc
jle
test
jecxz
insb
and
inc
xchg
jge
mov
data16
xchg
daa
sub
inc
mov
push
jbe
popf
data16
xchg
shlb
enter
xor
jmp
mov
pop
mov
xchg
mov
pop
cwtl
sbb
in
lret
mov
daa
mov
add
jge
lea
sahf
jb
loop
mov
dec
ljmp
scas
orl
adc
cli
ds
cmp
dec
ss
cmc
dec
and
dec
movsb
add
jecxz
cmp
stos
sub
inc
or
ja
cmpsb
cmp
push
fidivrs
pop
dec
ljmp
mov
frstpm(287
adc
inc
gs
inc
rorl
notl
inc
dec
or
mov
jns
sbb
xchg
jne
jg
mov
stc
sub
lcall
imulb
cmc
repnz
out
lret
and
jp
or
and
mov
push
dec
mov
adcl
cs
daa
arpl
lds
pop
push
push
test
fldt
mov
ret
mov
adc
loop
loope
xchg
ss
xor
negb
test
pusha
mov
ret
lock
mov
xchg
aam
pop
ljmp
test
pop
orl
les
lret
adc
jns
daa
mov
ss
ds
sbb
dec
push
mov
pop
xorl
sbb
clc
mov
jb
xor
and
xchg
imul
mov
cmpsl
add
popa
jle
pop
fmul
jge
lcall
into
out
loope
xchg
in
fs
in
push
push
bound
ja
sbb
xor
insb
mov
dec
or
sub
jp
call
adc
testb
mov
fadd
dec
inc
xchg
repnz
inc
fnsave
ljmp
push
sub
cmp
idiv
push
adc
popf
cmp
jo
sbb
push
add
repz
sub
and
pop
scas
mov
cmc
in
jge
push
stos
es
pop
test
es
sbb
hlt
sbb
mov
in
mov
mov
lea
pushf
ret
inc
mov
lahf
rorb
jnp
ja
mov
mov
jno
gs
add
addr16
dec
sarl
sbb
mov
sbb
dec
pop
test
sti
sbbb
sti
loopne
pop
test
rolb
xchg
pop
mov
mov
aaa
sub
cmp
mov
pop
pop
xchg
jno
jne
pop
scas
push
cmp
ffree
arpl
iret
shrb
xchg
cwtl
push
jge
mov
ja
and
and
loope
cmp
dec
push
rorl
xchg
and
scas
push
int3
movsb
and
inc
cmpsb
das
das
ja
test
jb
push
int3
mov
pop
fdivrs
inc
inc
clc
fadds
or
popf
xchg
or
in
in
lods
faddl
fnstenv
inc
fadds
out
xchg
in
mov
dec
mov
cwtl
aam
ds
xorl
loopne
xor
pop
xchg
jge
and
std
scas
dec
pop
adc
repz
cmpl
movsl
scas
mov
push
testb
push
inc
push
mov
popf
push
or
xchg
aad
jp
pop
je
add
xor
lods
push
ficomps
divps
jge
popa
imul
or
out
sbb
popa
rcrb
push
daa
pop
iret
jnp
test
repz
mov
mov
test
hlt
push
je
mov
shr
pusha
mov
mov
frstor
push
cwtl
sbb
movsl
fmuls
sbb
sahf
mov
mov
rorb
mov
insb
pusha
mov
cmpsl
and
fiadds
dec
push
out
loop
outsl
push
push
xor
hlt
insb
pop
push
cmpsb
aaa
imul
cmp
sub
imulb
or
push
and
mov
mov
mov
ds
mov
pop
inc
stos
loopne
xor
mov
repnz
inc
push
sub
std
push
jmp
push
movsb
or
add
ret
mov
cltd
or
dec
pop
repz
xlat
arpl
or
inc
dec
add
xor
xchg
and
or
cmp
aad
mov
xchg
sti
incb
lret
into
int3
add
test
int3
test
inc
sbb
or
or
popf
add
push
inc
aaa
shr
mov
div
outsl
push
jbe
mov
jae
xchg
add
push
bound
mov
mov
push
cwtl
ret
lret
fldenv
loope
cmpsl
sub
cmp
outsl
jne
cltd
mov
fwait
repnz
mov
in
xchg
notb
dec
jne
call
popf
mov
mov
add
pop
sub
ret
adc
cmp
cmpsl
inc
and
fdiv
pop
ret
and
jns,pt
inc
shrb
jg
lock
add
sarl
pop
jnp
lcall
lea
das
into
jp
xchg
xchg
push
lods
xchg
inc
test
jae
add
jno
mov
mov
scas
or
sub
cmp
sub
mov
jne
cli
addr16
repnz
js
int3
je
lods
jnp
jnp
add
call
jno
cmp
mov
push
out
lds
pop
jbe
mov
outsb
adc
cli
jb
mov
ret
imull
int3
loopne
push
dec
inc
adc
mov
cmp
popa
adc
shlb
inc
jb
mov
loopne
cwtl
test
push
pop
neg
cmpsl
push
or
xchg
inc
std
in
loop
adc
sahf
movsl
sbb
xchg
fwait
adc
xor
es
cmp
js
jns
push
inc
adc
nop
cmp
cli
fistpll
lret
das
xchg
pop
or
push
mov
xor
mov
mov
test
xlat
leave
add
js
in
test
rorb
inc
sub
scas
push
sldt
shrb
jne
repnz
pop
pop
xchg
sbb
test
xchg
fdivl
jecxz
push
out
xchg
mov
inc
pushl
mov
or
ffree
fidivrl
dec
dec
cwtl
sbb
test
jp
idivb
mov
pusha
mov
lcall
sahf
in
push
jb
stc
sahf
mov
gs
scas
xchg
push
lds
push
mov
shll
orb
and
mov
dec
sahf
sub
test
in
push
cmp
popf
cmp
setae
leave
pop
pop
push
sbb
adc
dec
cmp
pushf
stos
pop
sbb
sub
jl,pn
ljmp
dec
xchg
sbb
xchg
xlat
jle
xor
ds
xchg
out
or
mov
clc
pop
sbb
inc
aad
call
xchg
daa
fsubl
pop
popl
cmpsl
dec
cmp
aaa
sub
xchg
push
jno
xchg
addr16
dec
mov
push
stos
push
fnstenv
pushf
mov
out
add
sbb
jne
icebp
dec
sub
inc
add
push
mov
into
test
popa
fisubl
psrlq
and
test
mov
scas
cmpsl
arpl
das
pop
insb
das
sbb
sub
aaa
adc
popf
insl
sub
clc
lea
lods
movsl
jle
or
xor
inc
mov
movsb
xchg
mov
je
stos
jno
sbb
out
jmp
push
xor
repz
pushf
lods
cld
xchg
loope
mov
out
test
les
mov
xlat
xchg
xchg
icebp
xchg
sub
sbbl
rol
aaa
pop
jp
repz
mov
jno
mov
mov
arpl
jo
imul
xor
sbb
fcompl
movsb
mov
daa
add
dec
stos
ret
inc
pop
int3
sbb
in
cld
lahf
cld
cltd
leave
cld
sbb
push
pop
fsubl
fisttps
mov
fistpll
mov
or
movsb
aad
jge
mov
or
mov
dec
ja
idiv
lahf
pop
pop
cmp
leave
out
jae
insl
mov
mov
je
add
adc
adc
inc
inc
inc
cmp
add
cmp
mov
loop
inc
cmc
push
les
mov
push
into
jns
enter
adcb
add
push
push
push
pop
pop
cmp
xor
cmp
cmp
insb
adc
jmp
push
lods
test
sbb
jge
mov
pop
cmc
pop
cmpb
jge
insl
push
stos
jl
fisttpll
push
repz
loope
xchg
xchg
inc
popf
fstl
dec
xchg
les
pop
xchg
push
pusha
pop
aas
sbb
aas
cs
adc
jge
ret
inc
sti
test
cli
nop
add
scas
and
or
pop
xor
mov
ds
aaa
mov
movsb
xlat
std
xchg
push
add
into
add
out
pushf
bound
jp
lahf
sbb
cmpsl
ficoml
adc
pusha
mov
lods
popf
jle
lahf
int3
mov
mov
andb
scas
test
sbb
pushf
les
into
into
fldt
cmc
test
in
mov
insb
push
cwtl
pop
call
xor
sub
lds
cmp
mov
insb
mov
jns
cmp
push
add
add
adc
mov
repnz
xchg
lret
xor
imul
add
rcll
push
outsl
xchg
xor
xor
mov
pop
and
xor
inc
hlt
stc
cmp
repz
adc
adc
ret
push
push
push
dec
inc
iret
or
loop
cld
sbb
sub
jo
outsb
dec
mov
mov
jo
scas
sub
jb
add
inc
outsb
fistl
jo
add
or
fsts
and
arpl
xchg
in
jne
or
inc
insl
mov
movsb
mov
shrl
inc
inc
movsl
pop
jmp
iret
xor
cmp
jg
push
sub
fs
stos
mov
sbb
adc
sbb
push
mov
and
pop
cmc
ds
addb
rcr
jmp
sbb
faddl
mov
dec
xchg
mov
mov
sub
lds
inc
sbb
inc
or
out
rcr
mov
sar
push
add
mov
std
shrb
jno
clc
jp
mov
idiv
pop
les
add
inc
ja
xchg
mov
cs
or
scas
sbb
xchg
lahf
cmp
sub
mov
pop
ret
mov
mov
push
cmp
dec
cmp
mov
sbb
test
mov
call
cmp
outsl
ret
lahf
fs
mov
mov
mov
push
es
out
movsb
inc
pusha
fnclex
push
jmp
dec
mov
mov
pusha
and
push
lcall
jo
sbb
adc
inc
sbb
pop
xor
cltd
jecxz
int3
xchg
std
pop
or
lret
xchg
rorb
xor
lret
out
sbb
inc
push
push
jno
arpl
push
icebp
dec
mov
push
nop
add
lret
addr16
xchg
in
jbe
out
mov
imul
fnstenv
dec
inc
ljmp
imul
jge
jp
addr16
mov
out
jge
or
xchg
shll
and
adc
in
jl
mov
int3
loop
loopne
pop
jle
sub
imul
lock
inc
out
ret
inc
dec
xchg
mov
loop
push
mov
add
aam
mov
sbb
je
mov
adc
shlb
fsubrs
mov
add
xor
fistl
std
out
in
cld
xor
push
cmp
sub
loopne
adc
scas
xor
xchg
fcoms
mov
repnz
jecxz
je
lods
pop
sti
pop
sbb
jbe
fbstp
add
mov
rolb
cwtl
inc
push
xor
int3
push
push
and
pop
lcall
clc
jmp
mov
je
dec
dec
jae
jb
ror
fildll
subb
adc
xchg
imul
shlb
int
icebp
pusha
pop
push
adc
push
pushf
adc
popf
jp
cmpsb
pop
dec
es
dec
js
test
lret
push
lret
sar
outsb
rorb
inc
lret
jbe
lret
push
sub
cmc
imul
cmpsl
mov
adc
mov
pop
fwait
and
jl
icebp
xor
fwait
mov
inc
xor
pop
mov
push
adc
mov
imul
daa
mov
iret
dec
das
insb
xor
sbbb
lock
and
rcl
jle
les
subb
shll
int3
pop
jae
adc
xchg
mov
xchg
sbb
jbe
adc
in
pop
mov
mov
ffreep
inc
movsb
push
out
cwtl
mov
xchg
cmp
jl
popf
fwait
js
push
xlat
ret
and
fsts
mov
jl
mov
sbb
and
movsl
cmc
cli
jae
test
xor
loopne
pushl
inc
ficoml
mov
lock
dec
inc
nop
arpl
push
ror
decl
cmp
sbb
ficomps
adc
cs
loope
loopne
ljmp
rcrl
sub
rol
sbb
cwtl
dec
push
pop
jmp
mov
scas
ds
hlt
js
hlt
divb
cltd
sub
mov
imul
mov
inc
out
fdivr
roll
insb
push
inc
pop
fsubrl
ds
hlt
inc
xor
jbe
lock
div
in
mov
and
add
enter
dec
cmp
cmp
mov
adc
inc
push
add
les
cmp
lcall
adc
lret
pop
imul
mov
loop
scas
xor
jnp
mov
dec
int
mov
lock
fadds
sub
out
in
adc
andl
cwtl
xchg
adc
xlat
and
ret
lret
dec
jae
movq
out
jo
jne
and
cmpsl
or
and
imul
sub
push
aad
clc
mov
test
xchg
in
lea
test
stos
or
mov
lock
xor
in
loop
lret
xor
aaa
rclb
popa
adc
arpl
push
ss
xchg
xchg
repnz
test
push
and
in
mov
mov
cs
adc
jne
inc
jno
jl
xchg
push
fs
mov
xchg
jbe
push
pop
push
jns
push
or
push
int3
sub
xor
and
sub
int
sbb
test
xor
inc
fistpl
dec
adc
cmp
push
ficomps
pop
sbb
fisubl
jb
mov
cltd
orb
test
cltd
es
and
stos
mov
mov
or
push
xchg
sub
jno
sahf
jl
aad
insl
test
loope
sub
push
lea
mov
mov
ret
xchg
ja
mov
cmp
mov
sub
push
or
sub
push
add
inc
jg
or
int3
jmp
ret
xchg
cmp
cmp
imul
and
jg
in
adc
push
sub
rcll
push
or
fldt
nop
cmp
mov
dec
or
sub
add
fcmovb
cmpl
inc
cmp
repnz
push
mov
adc
or
aas
dec
push
popf
mov
sahf
test
movsb
jmp
pop
sahf
jno
ljmp
jbe
loop
xchg
mov
testb
int
scas
lock
es
and
lods
cltd
imul
scas
jo
orb
out
insb
xor
lds
mov
lahf
mov
mov
jb
xor
in
popa
push
dec
test
loope
ficoml
jl
repz
mov
mov
cmc
add
call
hlt
enter
push
mov
add
dec
sarb
add
cld
test
and
inc
adc
out
inc
sbb
pop
push
icebp
into
jmp
xchg
je
push
fsubrp
std
sti
push
aaa
stos
mov
mov
lods
inc
iret
aaa
cwtl
scas
cmpsb
daa
jmp
sub
pop
cld
push
jb
cmp
xchg
into
jne
push
or
jp
lods
mov
int
cmc
cmpsl
sub
test
sub
jmp
mov
sti
jns
xor
xchg
lods
loopne
mov
fmuls
pop
inc
test
arpl
or
mov
pop
mov
or
lcall
rol
pop
inc
inc
cs
out
loop
push
jmp
mov
insl
mov
fbld
xchg
js
push
push
dec
jb
mov
in
mov
movsb
or
ja
mov
add
push
jmp
push
cli
vpandn
lock
loop
hlt
mov
dec
scas
gs
xchg
inc
sub
shlb
adc
scas
sahf
cmp
sbb
dec
adc
push
inc
jp
or
xchg
push
repnz
gs
sub
lods
push
ficomps
xchg
xchg
repnz
aaa
inc
leave
mov
cwtl
sbb
jp
dec
lea
add
fs
fucomp
scas
pop
mov
inc
mov
xchg
test
ja
je
decb
int3
xor
imul
push
aam
idiv
adc
sarl
xchg
fsubp
aad
jmp
adc
mov
push
lahf
or
into
push
mov
and
mov
jne
jnp
in
add
push
xchg
jae
pop
insb
ds
mov
push
jb
inc
mov
sub
push
adc
pushf
mov
jg
cmp
adc
add
add
mov
inc
loop
inc
test
xchg
ljmp
ret
sub
sbb
or
fs
xchg
push
subb
add
push
push
mov
pop
popa
cmpsb
fs
xchg
test
cmpsb
add
lahf
sub
pop
push
and
jecxz
lods
pop
or
ljmp
or
push
mov
sub
pop
and
mov
mov
add
or
xlat
push
mov
scas
or
sbb
dec
das
pop
or
jne
sahf
or
jl
and
or
push
xor
aam
pop
lds
js
popf
lods
mov
mov
push
xchg
lret
xchg
push
test
stos
mov
scas
aad
sub
cmp
outsl
shr
stos
xchg
jbe
cmp
lcall
dec
jmp
jno
mov
pusha
ja
test
std
aaa
sub
mov
push
mov
loopne
scas
xchg
dec
daa
js
outsl
mov
push
dec
cmp
cwtl
in
insl
rorl
outsb
es
jns
jnp
into
mov
ja
in
add
pop
pop
push
adc
sbb
cs
inc
inc
inc
roll
sahf
mov
lods
push
and
dec
pusha
or
jecxz
fnstcw
and
mov
or
and
rcr
loope
pusha
cs
int3
andl
cmp
jno
pop
push
push
insl
adc
mov
mov
adc
fldt
jae
xor
mov
adc
lahf
rcrl
jnp
out
orb
les
in
stos
mul
fisubrl
call
lcall
fisubrs
test
mov
pop
mov
roll
fdivl
jecxz
daa
jo
xchg
adc
nop
and
sub
out
pop
mov
pop
pop
imul
and
mov
bound
stos
ret
push
shlb
dec
dec
insl
enter
cltd
pop
cmp
call
pushf
and
xlat
ljmp
mov
xchg
sub
mov
pop
dec
jge
shr
inc
xchg
stos
or
sub
mov
andl
xor
in
scas
outsl
arpl
sbb
add
xchg
inc
fisttpl
push
inc
call
stos
adc
test
out
lret
cmp
mov
mov
into
pop
and
es
stos
adc
sbb
ds
jmp
mov
cmp
rcrb
pop
aaa
mov
adc
pop
fcomps
out
out
add
inc
cld
mov
mov
inc
adc
mov
sbb
add
in
sub
adc
clc
mov
sbb
mov
std
adc
sub
and
push
les
pop
xor
adc
out
push
pop
mov
stc
sub
and
call
stc
mov
xor
js
mov
in
inc
popf
and
add
jae
aaa
pushf
adc
add
xchg
mov
or
adc
cmpsl
xor
mov
aaa
repz
xor
push
inc
ret
aad
leave
imul
mov
addr16
pop
rolb
pop
xchg
rorb
into
cmp
mov
sub
jns
insl
xor
pop
out
scas
enter
xchg
loop
inc
fldl
mov
ret
adc
xchg
mov
pop
enter
cmp
or
in
sbb
pop
mov
daa
jne
test
and
mov
bound
xorl
cmp
cld
xchg
stos
mov
bound
push
xlat
or
mov
xchg
gs
jo
xor
mov
push
mov
enter
push
pop
push
je
xor
pop
aaa
xchg
or
clc
mov
pop
mov
in
add
std
xchg
mov
mov
js
scas
addr16
movsl
in
mov
cmpsb
fimull
inc
cmp
inc
rol
or
or
cmpsb
dec
inc
mov
xchg
lret
stos
cmp
xchg
clc
mov
push
repnz
add
add
sti
das
ja
sbb
adc
sub
lret
inc
addr16
movsb
and
adc
dec
aam
mov
fs
mov
sti
cmp
jp
xchg
outsl
popf
pop
in
lret
pop
test
enter
movntps
and
ljmp
inc
hlt
push
mov
mov
or
out
insb
xchg
outsb
stc
hlt
dec
pusha
arpl
xchg
xchg
daa
mov
pop
cmp
sbb
and
aad
das
mov
pop
pop
xchg
test
pop
push
sbb
xor
scas
lock
aam
je
xchg
xor
add
out
aam
mov
jae
jge
push
or
jp
clc
mov
repnz
dec
mov
mov
push
subl
jl
mov
pop
sti
jge
push
in
mov
mov
sub
pop
and
lcall
addr16
push
sub
lods
inc
inc
jg
cmp
test
les
lea
cmp
hlt
imul
xorl
mov
pop
inc
out
sub
leave
loop
dec
xor
test
lcall
popa
ljmp
iret
push
inc
mov
int3
fwait
add
xchg
or
stos
addr16
mov
enter
adc
int3
ljmp
mov
andl
jle
xchg
pop
jae
lock
mov
pusha
pop
popa
mov
mov
ljmp
adc
pushf
adc
mov
sub
xchg
ds
mov
xor
cwtl
pop
mov
and
andl
lret
in
pop
sub
cmp
push
pop
cmc
stos
stc
imul
mov
jmp
fcmovne
mov
nop
out
inc
add
mov
daa
xbegin
mov
add
daa
test
mov
ja
inc
popf
jle
pop
xor
out
xchg
addr16
dec
and
or
sub
mov
xchg
scas
push
inc
loopne
sub
lods
hlt
enter
scas
adc
add
into
cltd
cmpsb
in
divl
sbb
insl
pop
fimuls
lret
outsl
pop
popfw
add
xchg
cld
push
mov
jnp
jmp
decl
sub
dec
inc
pop
add
jne
outsl
dec
sub
out
scas
mov
les
xchg
outsl
in
sbbb
xchg
and
dec
fmulp
repz
jb
and
xor
jge
and
push
dec
scas
mov
dec
data16
pop
mov
xchg
dec
int3
data16
push
xor
aad
mov
push
push
aaa
cmp
mov
pop
fs
mov
push
dec
push
cmpb
mov
aad
cmc
jo
and
les
xchg
or
jnp
or
sub
push
lcall
aaa
add
sar
xor
jg
fsubrp
stos
test
repz
mov
bound
ja
ljmp
pusha
test
insl
mov
aas
fisubs
popf
mov
out
push
jle
push
sahf
in
inc
pop
popa
or
out
cmp
aaa
xchg
add
pop
insb
mov
xor
test
push
mov
scas
mov
mov
xlat
mov
or
mov
lea
movsb
nop
cmpsb
inc
aas
jb
les
lret
inc
mov
sub
cmp
stos
inc
in
rolb
push
jmp
mov
out
sub
hlt
int
je
movl
cmpsl
sbb
xor
stc
fcomps
outsb
adc
rcrb
mov
or
mov
inc
pop
stc
jge
dec
aas
cmc
push
mov
gs
sub
mov
inc
push
lret
gs
jecxz
fwait
ret
loop
xchg
aam
out
jge
pusha
or
jge
jle
jbe
es
cmp
pop
sti
cmp
or
push
xor
jg
mov
sub
bound
lcall
xor
xchg
stc
dec
xchg
rorl
shll
jge
cmp
sub
sub
mov
add
sbb
lds
cmp
fldenv
xor
mov
mov
lea
rolb
pop
add
or
iret
mov
es
and
jl
xchg
jmp
jmp
push
jg
sti
inc
je
stc
stc
hlt
mov
and
loopne
out
int
loope
pop
inc
out
dec
push
mov
ret
dec
rcll
aaa
ss
push
push
cmpsb
push
pop
add
mov
fwait
sti
loope
mov
inc
mov
rcr
lds
hlt
out
xchg
sahf
adc
cmp
hlt
mov
rorb
mov
cmp
or
mov
sub
sub
xchg
inc
sbb
movsl
rcll
pop
cmp
int
mov
add
fldt
xchg
js
ror
sub
dec
xor
sbb
call
inc
mov
lret
sbb
add
mov
pop
imul
jbe
inc
inc
aam
clc
lea
outsl
int
or
aas
imul
sbbb
js
aam
scas
xor
outsb
jl
or
jecxz
mov
jg
dec
sbb
rcr
cmp
fildl
lds
in
inc
and
mov
mov
push
frstor
dec
push
repz
sbb
lahf
int
adc
nop
aam
subb
in
mov
add
mov
arpl
xchg
cmp
pop
nop
jecxz
xchg
lds
cmpl
cmpsb
fistps
arpl
push
fistl
rolb
out
jecxz
and
aaa
test
push
stos
stc
mov
cwtl
push
pop
jl
mov
jno
adc
enter
xchg
shrl
and
mov
or
mov
sbb
fldcw
pop
fcmovne
in
jns
test
fbstp
dec
xchg
fwait
adc
lock
in
adc
mov
lea
mov
outsl
gs
jmp
in
inc
xor
std
lock
push
das
insl
pop
jb
xchg
mov
cld
shll
fisttpl
idivb
pcmpeqd
insl
hlt
lods
pop
cmpsb
ja
ja
rolb
xchg
test
push
mov
jno
imul
inc
push
pop
xor
loopne
lea
pop
imul
aam
mov
pop
imul
adc
jp
lea
inc
popf
mov
or
sub
in
xlat
ljmp
inc
cmpsl
and
push
gs
popa
test
lahf
bound
mov
add
cmp
jmp
mov
xchg
and
mov
or
fidivl
mov
mov
xchg
cmp
cltd
and
xchg
cmp
aad
add
loope
leave
jo
add
pop
divl
sub
mov
pop
std
xchg
adc
cmp
imul
popa
dec
mov
jbe
sahf
jp
aas
lea
or
pop
jecxz
sbb
nop
jnp
hlt
imul
enter
jge
cltd
je
imulb
sbb
pop
icebp
xchg
lock
inc
nop
push
xchg
shll
les
adc
pop
mov
adc
hlt
mov
cmc
push
push
sub
sar
ficoml
mov
xchg
js
pop
pusha
or
mov
jno
jl
jo
icebp
inc
mov
cmp
inc
sub
lahf
dec
push
adc
das
sbb
fcoms
lret
jo
das
lahf
inc
or
je
push
loope
sub
fs
jbe
pusha
mov
push
insl
inc
xchg
mov
cld
jg
rolb
pop
dec
adc
aas
and
test
mov
cmp
or
lret
pop
xor
in
cli
push
imul
xor
dec
pop
or
fs
adc
sub
cwtl
ds
mov
mov
movsb
jg
test
dec
mov
imulb
dec
lock
mov
pop
xor
stos
jnp
adc
in
xlat
rcl
mov
add
mov
test
idiv
mov
rclb
sbb
lret
xor
out
stos
aad
imul
or
xchg
dec
inc
cmc
cmp
mov
pop
leave
int
push
nop
cmp
sbb
jne
mov
xor
or
add
adc
dec
mull
fs
repnz
orl
xchg
jnp
inc
adcb
cmpsl
movsl
mov
pop
movsl
out
ja
inc
orl
pop
jbe
outsl
daa
push
xlat
pop
out
cltd
jle
rolb
xor
inc
push
incb
mov
xorl
mov
xchg
push
mov
loopne
xor
rorl
addr16
pop
mov
mov
dec
add
push
inc
lret
pop
scas
mov
out
jecxz
clc
push
push
stc
add
xor
arpl
xchg
push
sub
and
adc
out
scas
hlt
push
lret
lock
mov
movsb
insl
dec
xchg
jge
adc
xor
push
loopne
and
or
add
loop
loope
sub
xlat
push
cmp
xor
xor
pop
shrl
outsl
xchg
lcall
nop
pop
adcl
sub
add
cmp
or
lahf
enter
hlt
lret
js
lods
ja
add
mov
aaa
aad
xchg
xor
and
jmp
inc
pop
popa
push
pop
xor
pop
clc
xor
aas
and
gs
mov
ret
gs
cmp
enter
mov
sti
daa
fidivrl
ret
int3
cmp
sbb
jnp
outsl
int
xchg
push
dec
iret
test
daa
pop
dec
inc
or
js
pop
cmp
fldenv
add
sti
aam
jne
xor
push
mov
or
cmp
add
or
push
popf
lahf
mov
dec
jbe
fldenv
inc
or
mull
test
ja
in
add
or
adc
adc
es
push
cmp
xchg
mov
test
mov
mov
scas
jecxz
aas
push
scas
fs
push
add
les
lds
xchg
out
cld
iret
ret
pop
aaa
fdivrl
outsb
sbb
add
or
inc
dec
imul
mov
pushf
stos
lcall
aam
lods
add
push
add
pop
jecxz
test
xor
rclb
fildl
imul
pop
cmp
dec
xor
cmc
ss
test
and
mov
ret
pop
lret
in
xchg
jo
shr
popf
pop
xchg
dec
jnp
and
test
xlat
pop
in
enter
insb
iret
mov
sub
or
lahf
and
jnp
shlb
ret
cmp
xchg
pop
jp
aam
jns
in
inc
xchg
xor
cmp
jne
ret
xor
sbb
stos
inc
cmc
fstl
add
lds
dec
push
test
mov
popf
pop
mov
outsb
cmp
xchg
cmc
ret
dec
cmp
sbb
aaa
mov
adc
in
lret
sub
icebp
jle
iret
and
sbb
jae
sub
and
sub
sbb
aam
add
gs
lods
inc
repz
lcall
sbb
andl
loopne
or
fnsave
sub
aas
into
inc
mov
int
out
pop
repz
pop
sbb
mov
ss
xor
or
xor
flds
mov
icebp
fsubr
cs
adc
and
sti
and
push
lods
and
dec
shll
ret
adc
aad
fildll
rcrb
jmp
inc
ja
push
sub
pusha
and
push
les
push
ss
movsl
cmpsb
adc
out
pop
or
dec
jmp
cmp
mov
sahf
and
lods
notb
pushf
push
ret
jns
sti
xchg
mov
push
xchg
aaa
adc
dec
pop
inc
ss
dec
andb
cwtl
repnz
fs
arpl
dec
ss
mov
je
mov
mov
push
jo
rcl
int
lcall
mov
xchg
cmpsb
outsl
test
mov
nop
adc
push
movsl
mov
push
movsb
pop
int
jae
jae
fisttps
mov
adc
push
add
inc
xor
daa
hlt
jge
aas
jb
addl
xchg
cmc
sub
xchg
scas
cld
add
pop
das
lods
jp
enter
sub
push
in
dec
sbb
cmc
xor
aam
jo
insl
data16
dec
je
jg
sbb
test
subl
pop
jns
mov
jp
or
sub
pop
and
mov
dec
fistl
cwtl
pop
push
cmpsl
into
sbb
lods
imul
pop
testb
outsb
cmp
or
mov
sbb
pop
push
inc
or
popa
mov
das
push
jmp
enter
scas
test
call
in
xor
push
leave
push
les
fucomi
add
subl
dec
jns
cmp
pop
sahf
std
fcmovbe
mov
or
pop
mov
lret
addr16
sub
repnz
xchg
and
imul
repz
iret
mov
ret
clc
in
imul
lods
pushl
sub
xor
push
mov
mov
xor
rcr
pop
icebp
ret
sub
mov
and
movsb
cmp
inc
mov
out
push
inc
adc
xor
std
dec
stos
dec
push
pop
jno
cmpsl
push
in
int3
or
shl
or
or
xchg
fcoms
and
stos
mov
je
adc
push
xor
push
or
call
xchg
test
dec
dec
sbb
into
sbb
inc
push
ret
sbb
pop
divl
lea
outsl
js
sub
pop
mov
add
test
repnz
push
fisubl
push
inc
and
adc
xor
notl
xchg
enter
dec
insw
testb
call
sub
ret
sbb
test
rol
pop
xor
loopne
out
adcl
pop
and
pop
loopne
xchg
jmp
loop
pop
daa
adc
add
test
push
jge
jo
insb
xchg
sbb
xor
scas
sub
rcrb
sbb
rol
dec
dec
leave
pop
scas
out
mov
mulb
stos
incl
lea
adc
add
mov
sbb
loope
jno
adc
jmp
pop
cld
cmp
mov
aas
cmp
pop
push
inc
int3
icebp
mov
xchg
sar
adc
cmp
ljmp
sbbl
into
idiv
data16
dec
ja
dec
push
mov
sub
pop
jmp
shlb
push
mov
pop
addr16
add
xlat
xor
xor
movsl
mov
mov
jne
jb
cltd
movsb
and
daa
jg
in
mov
jno
ljmp
xchg
or
jp
push
inc
dec
iret
aam
ret
lret
push
jg
push
jo
es
decl
lcall
jmp
push
clc
mov
rorb
ljmp
addl
push
inc
push
aas
xor
divl
mov
jge
fucomp
loop
pop
or
cmp
mov
pop
xor
aam
push
dec
outsl
in
push
cmpsb
mov
lahf
das
sbb
xchg
popf
add
repz
aas
out
loope
insb
cli
sbb
mov
inc
addr16
cld
push
lds
out
in
in
feni(8087
test
push
xchg
jnp
inc
insl
mov
inc
pop
arpl
js
push
adc
jp
inc
xchg
das
loop
inc
mov
in
pusha
mov
jae
sbb
add
dec
aad
push
mov
jne
das
psubsw
fstpl
popa
dec
mov
push
mov
fdivs
xchg
ja
lea
or
cmpsl
mov
mov
iret
mov
and
movsb
test
cmp
lret
cmp
stos
jp
lcall
out
push
mov
mov
ret
imul
add
mov
daa
mov
inc
push
fisttps
into
jno
jo
push
fldl
dec
dec
sub
fwait
and
push
xlat
dec
push
add
daa
test
in
cs
sbb
add
rorb
es
and
mov
arpl
imul
add
call
cmp
lock
cmp
adc
jmp
test
data16
in
sarl
icebp
mov
push
mov
mov
mov
je
lods
jecxz
pushf
sahf
in
enter
sbb
and
iret
and
lcall
ret
sbb
mov
movl
xchg
mov
mov
sub
mov
cmp
mov
push
mov
fwait
cmpsl
fnsave
cs
sub
xor
cmp
int
pop
jno
xchg
mov
sbb
sbb
lahf
gs
xchg
bound
pop
sahf
enter
hlt
dec
mov
into
js
icebp
cmp
pop
xor
cmp
pop
lods
aas
lahf
rol
push
lea
insb
add
mov
xor
jae
add
mov
adc
cmp
sbb
lods
mov
mov
add
cs
js
test
sub
jle
fdivs
jp
ja
pop
sub
test
hlt
sahf
cmpsl
and
jns
inc
lds
int3
mov
mov
call
sahf
mov
lods
mov
sub
daa
data16
mov
push
sysenter
push
ss
jo
popf
ja
repz
cld
xchg
cmp
cltd
add
jge
stos
leave
sahf
repnz
imul
dec
xor
lret
pop
je
mov
fiadds
xchg
cmc
jb
fidivs
jno
jp
imul
clc
mov
dec
or
mov
pop
cli
imul
jno
jecxz
outsb
xchg
sbb
adc
and
add
insl
jmp
test
enter
enter
mov
push
ja
jge
ds
sbb
cmpsb
dec
mov
imul
inc
pushf
fstps
in
mov
mov
aas
cwtl
add
in
push
out
cltd
popl
aaa
jl
insl
sub
xor
lods
mov
pusha
stc
pop
push
pop
inc
dec
stos
imul
mov
pop
fstps
lock
or
dec
mov
fldenv
mov
mov
lock
mov
aad
rclb
fists
or
push
cmpsl
es
fs
push
jecxz
add
mov
popa
mov
dec
addb
out
mov
sbb
mov
xchg
and
shrl
adc
add
in
jns
push
movsb
loopne
ret
or
xor
sbb
jle
push
jnp
into
jno
jb
add
fcoms
je
repz
pushf
inc
adc
lock
lock
mov
imul
pusha
rorb
jl
inc
ficoms
mov
lea
adc
xor
test
sub
mov
ret
cmp
popa
scas
inc
pop
aad
dec
inc
sbbl
adc
sub
test
scas
and
inc
cmp
push
adc
addr16
mov
ljmp
or
push
repz
or
pop
ss
aas
addr16
xchg
popf
pcmpgtd
lcall
insl
push
adc
dec
push
mov
scas
dec
mov
out
jne
dec
sub
sub
push
pop
and
mov
jnp
pop
mov
xor
mov
inc
pop
push
cwtl
rorl
ret
into
out
inc
out
mov
sub
adc
imul
lahf
or
pop
push
xor
sbb
xlat
es
cmp
enter
pop
int3
and
jge,pn
lea
adc
cmpsl
push
out
in
mov
mov
in
or
pop
rcrb
xor
daa
imul
mov
int3
jae
mov
inc
in
xlat
adcl
je
pop
sub
push
pop
dec
in
gs
mov
cmc
das
leave
lahf
loope
test
jge
out
stos
lahf
jne
pusha
xor
rclb
sub
pop
mov
insl
aas
ret
xchg
orb
lds
mov
ljmp
aam
pushf
mov
and
adc
dec
test
adc
fs
xor
mov
dec
rcr
mov
nop
fsubs
out
sbb
inc
sbb
insb
in
cmp
mov
or
lcallw
out
lret
jae
jmp
xor
mov
movsb
sub
stos
lock
jmp
cmpsb
out
dec
mov
sub
push
cli
fs
rclb
nop
subl
inc
push
mul
inc
ret
xor
aas
xchg
inc
or
gs
push
inc
mov
lahf
fidivrl
pop
jmp
cli
out
enter
leave
shrb
push
mov
jmp
insl
clc
aas
lret
inc
fsubs
cmp
cld
jl
dec
mov
int
mov
arpl
and
leave
jae
push
fwait
mov
leave
cmpsl
out
in
or
add
sbb
fidivs
or
add
jp
mul
pop
xchg
scas
dec
mov
rcrb
sbb
cld
mov
sub
cmp
adc
push
insl
jmp
xchg
call
dec
dec
jnp
cmpsl
hlt
and
push
xchg
clc
mov
mov
mov
imul
mov
ss
loope
icebp
dec
or
mov
inc
inc
repnz
xor
mov
popa
int
daa
cld
xchg
adc
lock
xor
xchg
pop
add
or
push
or
inc
dec
shlb
out
xor
ljmp
iret
rol
mov
xor
mov
call
out
jnp
cmpsb
imul
shlb
xor
sbb
mov
push
xor
adc
lret
mov
push
sbb
ficoms
dec
lret
cmp
pop
mov
aaa
pop
movsl
arpl
scas
shll
cmp
pop
mov
xor
pushf
outsb
fdivr
test
xor
inc
jle
push
sub
and
imul
xchg
repnz
sahf
sbb
clc
cmpsl
cmp
and
adc
test
dec
inc
add
rcrb
mov
es
jne
push
mov
cltd
movl
inc
and
inc
push
rclb
movsl
sbb
jne
negl
inc
and
es
push
rcl
mov
andl
clc
andb
inc
pop
repnz
stc
mov
daa
fdivl
pop
sub
cmp
mov
fiaddl
daa
mov
adc
jge
jmp
jne
stos
sub
mov
xchg
sub
rorb
mov
rorl
dec
pushf
das
out
add
pop
mov
popf
fwait
int
sti
pusha
jmp
jmp
adc
cwtl
mov
popa
inc
inc
dec
inc
sub
cld
nop
push
nop
imul
das
shll
pop
imul
xor
or
cmp
mov
cmp
push
lcall
xchg
loopne
imul
mov
xchg
and
mov
jp
stc
mov
cmp
pusha
and
outsb
push
test
loop
loope
jecxz
xchg
xor
mov
jno
outsb
iret
and
xchg
xchg
lret
xor
ds
xchg
inc
mov
fstp
jno
ret
xor
mov
lcall
into
stos
test
cld
pop
pop
addr16
jnp
pop
pop
mov
pop
mov
jb
jns
jg
cli
cmp
hlt
mov
scas
sub
pop
sbb
int
fisttps
scas
fs
pop
mov
xchg
pop
mov
gs
sbb
push
jecxz
cmp
mov
mov
fimuls
adc
mov
enter
mov
jp
popa
aam
dec
add
test
fdivrs
jle
repnz
mov
repnz
pop
imul
sti
pop
fisubrl
mov
test
push
jae
push
xor
movsl
adcb
cld
std
lods
movsb
sti
out
push
cmp
pop
add
out
mov
mov
rclb
dec
shl
ljmp
rorl
loope
imul
or
leave
loopne
ret
fidivs
or
sub
sub
jnp
cmp
int3
sub
dec
add
mov
lret
mov
es
sahf
jo
scas
scas
or
es
jl
xchg
cli
shll
push
pminub
jg
jge
push
outsl
mov
out
ja
inc
in
mov
jecxz
notb
sub
xchg
xchg
xlat
sti
sub
sub
xor
fisubl
push
push
jecxz
iret
pavgb
insl
push
lods
or
inc
xor
xor
in
addr16
fistps
mov
mov
in
ss
ja
xor
adc
pushf
or
mov
or
out
ds
pop
jg
mov
sbb
insb
pop
outsl
push
inc
cwtl
repz
push
insb
push
add
mov
insb
icebp
and
test
outsb
lcall
and
in
loopne
mov
outsb
out
adc
xchg
or
pop
sbbl
and
xor
fcoms
std
dec
daa
add
xchg
push
clc
mov
jnp
orl
inc
sub
mov
cmpl
aam
cmp
outsl
aas
stc
or
idiv
and
fwait
int3
cmp
rol
xchg
jmp
sub
ljmp
and
mov
xchg
mov
mov
fwait
pop
das
fbstp
outsb
mov
stos
jp
cmp
shl
sbb
mov
mov
sub
outsb
fwait
arpl
mov
rcr
outsb
popa
xchg
stc
jmp
mov
popf
daa
inc
or
sbb
cmp
push
or
push
popf
inc
loopne
pusha
mov
cmp
test
ds
dec
add
jge
dec
stc
push
mov
ja
out
outsb
cmp
push
adc
pop
and
mov
cmpsl
dec
loope
adc
or
ja
or
add
jbe
mov
movsl
mov
sub
adc
arpl
sbb
xchg
pop
sub
pop
leave
loope
or
movsl
dec
shll
push
cmp
cmpsb
out
scas
adc
jecxz
and
imul
sahf
adc
faddl
pop
inc
test
movsb
scas
pop
test
fdivrl
rol
jno
mov
push
jno
adc
sbb
mov
popl
xorl
sub
or
xor
sarb
sub
stos
push
out
xchg
out
xor
leave
call
mov
jnp
int
stos
movsb
out
in
push
xor
push
ljmp
loopne
xor
jnp
mov
loopne
lea
orl
pop
aam
shlb
cmp
ret
fwait
xchg
test
add
outsb
sub
hlt
enter
mov
in
mov
sub
mov
jb
dec
es
int3
ja
in
sub
lcall
xchg
pop
scas
rorl
daa
mov
jg
jb
cld
adc
adc
insb
jbe
jg
pop
add
add
add
cwtl
insl
adc
cltd
sbbb
push
mov
mulb
cmpsl
int3
mov
insb
aad
dec
shll
shr
xchg
hlt
mov
or
pop
rcl
sub
rcr
xor
por
jp
lods
aam
push
fwait
mov
jmp
ljmp
mov
int
mov
mov
imul
loope
mov
rorl
cli
outsb
push
imull
inc
mov
dec
inc
hlt
inc
adc
icebp
xlat
sbb
je
xor
test
add
jae
xlat
fiadds
jo
jmp
dec
rolb
aam
dec
dec
push
adc
or
fisttps
adc
out
in
xchg
mov
push
shrl
insl
in
adc
out
mov
adc
popf
mov
jno
mov
shll
and
sbb
inc
mov
inc
mov
mov
repnz
jp
pop
cmp
push
test
dec
in
xchg
add
cmpsb
std
sub
scas
jae
lret
out
and
add
cmc
addb
lds
ds
data16
sbb
add
or
inc
mov
lahf
push
into
rcrb
jae
data16
jg
or
movb
pop
mov
and
or
xchg
out
jg
dec
stos
sub
repz
inc
xor
adc
push
insb
iret
das
sub
jbe
lcall
xchg
dec
popf
out
cmpsb
mov
ja
mov
pop
imul
and
adc
int
aaa
mov
fnstcw
add
iret
mov
inc
ret
out
or
int3
cmp
xor
ds
cmpsl
sarl
test
outsb
sbb
or
or
push
popf
mov
lcall
push
xor
cmp
sarb
sbb
movsl
jmp
jne
push
int
out
pop
sub
out
sbb
adc
mov
clc
in
xchg
mov
aad
mov
pushf
push
pop
gs
cmpsl
mov
add
inc
cmpb
xchg
sbb
adc
into
mov
rolb
repz
or
dec
cmpsl
loop
leave
mov
mov
neg
cs
ja
push
icebp
fwait
sahf
sub
jbe
ret
mov
pop
and
jbe
int
dec
push
cltd
popf
lahf
es
pop
and
gs
pop
push
lock
enter
imul
pop
clc
les
mov
pop
adc
jno
xchg
jo
mov
jne
dec
or
mov
adc
add
ret
subl
in
arpl
sub
pop
adc
int
jle
int
sub
dec
xorb
cli
mov
inc
adc
inc
jns
das
out
cmc
imul
aaa
cmpsl
mov
sub
aas
sub
sar
frstor
pop
dec
inc
sarl
pusha
jo
int
dec
inc
add
mov
in
int3
hlt
or
imul
imul
test
cs
push
or
push
mov
jae
daa
jge
or
xor
cmpsb
jb
or
gs
or
jo
arpl
xchg
loopne
push
pop
inc
jg
jo
notb
les
inc
lret
adc
sti
imul
inc
pop
jle
outsb
bound
xor
ffreep
sub
xchg
imul
insb
aad
daa
test
push
hlt
shlb
dec
es
sbb
push
pop
jno
shr
insl
inc
cmpsl
dec
sarl
std
scas
iret
xorl
and
xchg
cmp
outsl
push
dec
hlt
mov
lods
jmp
stos
cmp
lret
movsl
sub
sub
push
ja
adc
mov
mov
out
scas
addr16
xchg
and
push
outsl
xor
lcall
out
jno
in
pop
sub
roll
or
mov
or
push
pop
xchg
sbb
mov
rcr
inc
call
lods
adc
aam
mov
pop
lock
lds
rcrl
mov
cmp
mov
in
dec
mov
std
and
cwtl
aam
repnz
sbb
push
daa
fists
mov
jno
pop
sbb
scas
add
jg
dec
sub
das
mov
mov
ljmp
cmp
repnz
push
mov
ret
pushf
shlb
int
push
push
jns
arpl
orb
jl
sub
mov
jb
aaa
xchg
outsb
sub
daa
sub
xchg
enter
add
inc
pop
lea
xor
jbe
and
enter
inc
loope
ficompl
pop
xor
push
jg
xor
pusha
jae
dec
jbe
orl
jne
data16
jle
rclb
int3
adc
lods
xlat
ja
jae
popa
push
sub
add
sub
in
sar
ret
out
sbb
mov
addr16
sbb
inc
es
mov
pop
int
and
cmp
cmp
xchg
and
cmp
je
dec
mov
mov
jnp
stos
ljmp
out
push
popf
push
mov
shlb
xor
inc
sbb
or
insl
outsl
push
xchg
jp
bnd
repnz
sbb
mov
fiaddl
test
jmp
cmp
test
stc
enter
ss
arpl
mov
fwait
roll
test
pop
fidivl
inc
movsb
fmul
out
jl
daa
push
pushf
push
aaa
ficomps
repnz
adc
clc
loopne
push
nop
faddp
mov
pop
sub
lahf
mov
adcl
cmp
push
imul
pop
pop
test
int3
push
mov
mov
pusha
shl
jbe
pop
jno
jno
push
aaa
pop
inc
inc
clc
mov
and
loop
or
stc
fisttps
jecxz
into
inc
dec
test
push
adc
insl
pop
inc
xchg
jbe
jl
loop
lcall
shll
add
cmp
roll
pop
jle
int
cmpsb
call
mov
pop
cltd
adc
call
adc
decb
rcrb
leave
movsl
daa
imul
nopl
mov
aas
xchg
fistps
ljmp
ja
jl
inc
pop
or
imul
cltd
je
sub
mov
cmp
rorb
lods
jns
mov
fstpl
mov
xchg
jp
dec
mov
repz
adc
test
fstl
fdivr
dec
mov
sub
mov
lods
add
test
loop
mov
aas
lea
mov
push
xchg
subb
sub
xchg
push
std
jae
sti
add
sbb
push
repz
jg
push
push
nop
xchg
inc
mov
repz
fdiv
fldpi
inc
into
pop
gs
loope
dec
jmp
ret
subl
out
test
adc
jmp
mov
xor
jbe
lods
aas
jo
cld
es
addl
mov
or
js
and
sti
sbb
sbb
movsl
mov
mov
xchg
mov
test
xchg
insl
or
adc
mulb
loope
mov
cmc
mov
repz
rcrb
and
scas
divl
mov
jl
fdivr
push
fcoms
mov
imul
and
ds
and
addb
inc
lds
push
xchg
xchg
or
jp
cmp
push
push
jne
mov
mull
push
xorl
icebp
mov
lahf
cmc
dec
rorb
int
ss
ds
iret
or
mov
aam
mov
sub
fsubs
je
popa
lret
mov
jmp
mov
mov
enter
mov
cmp
pusha
push
fs
fnsave
sub
dec
dec
lea
outsl
roll
cmpb
jl
jne
lea
or
push
push
fimuls
fimuls
push
jge
adc
jnp
xchg
add
pusha
mov
lds
mov
insl
inc
pop
outsl
nop
lret
jnp
and
or
test
mov
adc
cmp
pop
jne
les
or
and
add
xchg
and
jle
pop
jno
sub
fiaddl
and
xor
jl
jmp
adc
pop
js
aaa
movsl
mov
inc
mov
subb
jmp
sbb
ret
pushf
push
aam
lods
cli
mov
adc
mov
sub
scas
xchg
adc
xor
and
xor
pop
mov
and
push
mov
insb
in
jle
inc
pusha
imul
and
push
lods
push
test
test
jns
aad
sarb
fildll
xchg
ret
pmulhuw
mov
cld
sti
shlb
sbb
xor
cltd
jp
fwait
xlat
xor
sub
loope
gs
push
lcall
popa
fcmovnb
nop
nop
mov
mov
mov
sub
mov
mov
add
inc
test
push
jne
call
imul
push
pop
ss
idiv
inc
cmpsb
aas
adc
jae
mov
push
incl
xchg
adc
ja
out
xchg
pusha
add
icebp
xchg
gs
aaa
aas
jnp
js
pop
inc
popa
lret
sarb
push
aaa
jmp
cmc
mov
jle
addr16
out
sarl
sub
and
out
pop
sbb
sub
shlb
ja
js
and
cmp
and
test
shr
sbb
mov
mov
inc
add
cmp
ret
out
bnd
nop
test
push
push
je
adc
negl
cld
outsl
popf
xchg
mov
repnz
jne
popa
das
add
pop
lcall
and
pop
test
xlat
xlat
pop
push
mov
lret
inc
dec
sub
pop
ljmp
cltd
sahf
dec
fstl
leave
adc
dec
pushw
iret
repnz
push
push
jecxz
fidivrl
pop
pop
mov
popa
mov
jne
arpl
push
movsl
in
mov
lret
scas
test
adc
out
fs
aaa
xor
stos
insb
xchg
mov
sahf
cmp
js
pop
xchg
adc
or
sub
cwtl
mov
xor
loope
cltd
fadds
ret
mov
std
test
xor
or
jne
mov
and
push
push
mov
xchg
je
mov
xchg
xchg
loope
pop
pop
in
or
ja
adc
ljmp
insl
sbb
lcall
shrb
mov
shll
in
add
mov
rclb
movsl
add
adc
not
roll
out
ss
repz
xchg
pavgw
aaa
icebp
sbb
movsb
lods
lahf
lret
mov
ficomps
lret
mov
jp
dec
xor
mov
pusha
jae
lods
jg
push
pop
pop
roll
push
push
mov
sub
or
aad
sti
in
es
mov
push
and
cmp
flds
xchg
sti
mov
add
jnp
cmpsl
je
mov
xchg
push
rcr
rclb
pop
jns
dec
dec
nop
rcrb
mov
ret
sub
xchg
andl
mov
out
mov
out
fiadds
outsb
jbe
adc
adc
xchg
and
push
jg
sub
enter
inc
test
insb
jae
sub
insl
lcall
add
xchg
xlat
fisubrl
dec
add
imul
jne
sbb
xchg
jp
pusha
dec
frstor
pop
pop
pop
aaa
pop
cltd
cmp
add
mov
lea
pop
or
xor
sbb
push
jb
inc
ljmp
cmp
or
xchg
mov
jle
and
aam
sbb
or
add
ret
jb
fldcw
pop
xchg
push
out
push
inc
inc
pop
out
stc
cmp
mov
popa
adc
or
inc
fistpl
and
jb
xor
pop
dec
fmulp
lahf
cmp
pop
mov
aas
pop
xchg
sbb
gs
push
jb
roll
xchg
cmpsb
shr
fwait
stos
into
mov
test
dec
insb
add
push
cmpl
pop
dec
pusha
dec
repz
divl
fs
xchg
adc
int3
call
push
test
enter
rcl
jae
sahf
inc
fwait
mov
mov
jae
adcb
jmp
push
scas
out
sbb
stc
xor
inc
testb
data16
js
inc
popf
and
or
xor
mov
dec
scas
ficompl
inc
je
arpl
mov
add
push
adc
fldl
fdivs
inc
xor
pop
inc
add
sub
xor
enter
andb
add
nop
popa
imul
call
mov
pop
in
cmpb
or
cmp
mov
jbe
sub
inc
mov
in
scas
adcl
pop
jno
insl
xor
andl
add
add
je
jp
test
dec
movsl
insb
add
cmp
and
or
icebp
jg
inc
sahf
mov
test
fldenv
and
jg
adc
sub
push
jl
add
xlat
xchg
jnp
fisubrs
fdiv
jl
hlt
adc
pop
cs
fwait
jmp
and
push
lea
lea
inc
cmp
rcrl
ret
lcall
push
int
mov
sub
inc
jp
or
sbb
push
pop
jne
xor
jp
xor
pop
jbe
int3
sub
xor
in
cmpsl
or
cmp
or
cmc
in
incl
iret
fwait
mov
cmp
gs
stc
insl
and
lret
ss
push
pop
inc
ja
mov
and
mov
lds
fisubs
mov
push
push
jnp
and
pushf
dec
sbb
xchg
xlat
mov
push
shlb
mov
push
inc
sub
or
cmp
cltd
dec
cmp
dec
pop
dec
int3
dec
js
in
pop
cmp
sub
push
out
into
xchg
dec
fadds
or
dec
mov
movl
sbb
shll
jg
xchg
push
ds
jmp
mov
mov
mov
cmp
mov
sub
jmp
add
lahf
jae
xor
xchg
fnstsw
cltd
ljmp
jo
cmp
lcall
pop
inc
dec
xchg
inc
pop
mov
xchg
in
jno
and
ficoml
jp
loopne
xor
iret
jle
insb
sub
pop
scas
fiadds
dec
cmp
mov
xor
aas
repnz
lods
clc
xchg
mov
cmpsb
aaa
dec
lods
mov
xchg
dec
repnz
xor
das
xchg
fstpt
je
mov
mov
shl
int
inc
inc
icebp
imul
mov
adc
bound
sbbb
dec
cmc
mov
pop
stos
subl
push
lea
into
mov
xchg
cmpsl
sbb
jae,pt
jns
or
xor
imul
mov
xchg
movsl
mov
and
add
pushfw
push
xor
scas
add
push
sbb
pop
daa
sub
int
sub
jno
add
push
pop
adc
outsl
iret
mov
out
push
mov
aas
in
pop
adc
outsb
test
dec
mov
sbbl
jne
fistps
repnz
push
pop
test
cmpsb
sbb
lcall
fst
mov
pop
xor
jae
hlt
sub
lea
cmp
fbld
loope
imul
push
xor
call
test
sub
push
cltd
cmp
pop
clc
add
mov
jg
pop
cmp
in
sbb
adc
mov
and
insb
scas
and
fwait
iret
pop
sbb
imul
push
fcmovbe
jnp
xchg
or
ret
stos
dec
add
cmpsb
sbb
push
cs
xchg
arpl
roll
add
pushf
jnp
mov
pop
inc
cmc
dec
jg
xchg
xchg
adc
pop
cmpsl
pop
mov
adc
xchg
pop
into
sub
mov
sbb
mov
aam
cwtl
movsl
jnp
and
cmp
movsb
out
mov
cmc
inc
push
ja
imul
hlt
fcmovu
and
pop
cmp
aaa
push
inc
pop
jge
testl
xchg
pmaxub
jns
outsl
lahf
jmp
xor
std
jbe
lods
insb
sti
pop
mov
es
int3
xor
xchg
sarl
into
data16
lret
mov
imul
mov
mov
int
outsb
fistpll
vsubpd
into
in
xchg
pop
insb
testl
xchg
das
jp
into
jmp
out
add
int
dec
mov
test
cmp
aad
test
lods
hlt
pushf
je
add
xlat
xor
mov
xchg
jbe
sub
lret
enter
pop
pusha
jo
xor
pop
inc
xchg
pop
push
cmp
adc
clc
inc
js
stos
pushf
xor
or
insb
aad
push
lock
cmp
clc
lods
lahf
nop
sbb
mov
push
push
sti
jb
dec
lods
mov
pop
mov
stos
aas
shlb
lods
lret
and
aaa
adc
in
mov
imul
xchg
inc
fistps
sbb
addr16
popa
sbb
push
lahf
xchg
sahf
fldenv
iret
xchg
cmp
mov
shl
push
gs
dec
fwait
or
xchg
aas
pop
int
je
adc
inc
mov
pop
cmp
aam
cmp
in
out
ljmp
stc
scas
ljmp
mov
mov
ds
mov
mov
rorb
push
jno
fsubrl
gs
sbb
mov
and
ret
cltd
cmpsl
dec
and
push
mov
aad
fstpt
lds
test
mov
lret
and
xor
jge
pusha
stos
int3
add
inc
outsl
mov
mov
push
movsb
or
sbb
gs
fbstp
xor
movsb
fsubrp
xor
jle
ljmp
scas
aad
mov
mov
aad
pop
jae
or
insl
mov
xchg
in
cmp
out
mov
jbe
testb
cmpsl
fs
mov
xchg
clc
add
outsb
cmp
pushf
lock
jno
lcall
cli
bound
pop
jb
std
nop
int3
add
and
xor
js
icebp
filds
sbb
lahf
adc
test
xchg
mov
outsl
add
pop
aaa
xchg
mov
sub
sub
xchg
js
mov
fisubrs
cmp
cmpsl
fbld
or
pop
jecxz
shll
sbb
cli
sti
pop
jb
cld
aam
fnstsw
inc
add
in
loopne
jge
inc
push
push
or
pop
dec
dec
xor
incb
sub
jbe
mov
sbb
cmc
call
outsl
gs
movsl
cmpsl
rcll
sbb
inc
pop
sbb
add
repnz
inc
repz
stc
outsb
test
popa
rorl
jecxz
dec
lcall
and
outsb
mov
push
sbb
push
dec
cmp
imul
or
in
mov
mov
push
sub
movsb
mov
add
idiv
jae
data16
add
inc
outsb
fdivl
and
outsb
nop
sub
xor
insl
dec
popf
ret
int3
rolb
in
mov
cs
xchg
jmp
fs
fmuls
adc
les
ss
push
outsl
sbb
lods
test
and
jnp
adc
or
jle
push
pop
mov
push
jne
out
dec
addr16
adc
nop
repz
mov
fcompl
inc
add
repz
inc
shll
das
cmp
repnz
in
mov
pop
push
addr16
in
les
or
mov
adc
addl
xchg
dec
movb
sub
pop
loop
and
cmp
cwtl
mov
dec
dec
inc
lret
lahf
sbb
fwait
rorb
inc
mov
adc
inc
mov
or
lret
cmpsb
xorb
cld
loop
bound
inc
aaa
fbld
adcb
inc
nop
neg
aaa
xchg
enter
js
bound
xlat
incb
sub
sbb
add
xor
jmp
test
out
adc
je
pop
mov
inc
xor
jp
lret
push
icebp
lcall
adc
nop
mov
jno
fwait
int3
lods
cli
jmp
cltd
xchg
insb
xchg
int3
push
test
pusha
jge
jle
stos
add
cmp
pop
sub
mov
out
jae
dec
scas
mov
ret
dec
jp
jnp
out
cmp
jecxz
data16
cmp
fwait
xchg
scas
dec
jmp
cmp
sub
cltd
pop
mov
push
push
cmp
inc
pop
and
mov
imul
adc
or
inc
push
or
pusha
scas
cld
add
cld
fbld
cmp
loope
mov
insw
cmp
pop
cmp
cmp
sbb
out
push
adc
dec
inc
lds
loop
dec
sub
movsl
leave
jmp
sbb
xchg
jae
fildll
fldcw
sbb
jl
lods
ljmp
push
sbb
push
pop
mov
mov
inc
inc
fmuls
sbb
xchg
out
stos
test
pop
cmp
iret
cmc
cmp
movsb
ss
jl
arpl
add
jecxz
enter
ret
sbb
loopne
sub
jecxz
and
iret
xchg
cmpsb
imul
adc
fdivs
xchg
into
test
mov
pop
sub
loopne
imull
or
adc
aas
fldz
orl
push
xchg
mov
or
cwtl
cmp
lods
cli
mov
sbb
in
push
cmp
pop
mov
add
fsubl
mov
dec
jne
or
repnz
adc
sbb
dec
andl
mov
int3
xchg
xchg
and
sbb
add
clc
cmpsb
bound
test
in
cmpsb
mov
inc
fucomi
pop
out
sbb
imul
xchg
cli
outsb
orb
int3
sub
mov
fs
pusha
cvtdq2ps
fcompl
xchg
lret
hlt
in
pop
jne
jo
or
push
cmp
ja
movsl
cmpl
in
mov
std
movsb
movsb
iret
loopne
addr16
inc
add
cltd
inc
mov
mov
repz
pop
gs
and
in
iret
or
dec
xlat
lret
ret
sbb
mov
xor
imul
les
movntps
rorb
jmp
in
fstpl
dec
mov
xchg
in
or
xor
mov
jge
pop
mov
push
add
lods
repnz
inc
repnz
repnz
mov
push
leave
jbe
pop
rcrb
xchg
or
dec
xor
xor
push
test
pushl
adc
xor
lcall
ljmp
ficoms
js
and
in
insl
and
sub
bound
sub
arpl
inc
insb
arpl
adc
mov
mov
inc
icebp
push
enter
imul
mov
add
jge
cld
inc
or
jo
loope
movsl
out
test
out
fld
cmp
adc
and
xchg
mov
test
sub
pushf
jge
cmpb
mov
ret
lahf
movb
test
ficoms
cmp
xchg
iret
fldenv
scas
mov
cmpsl
cmp
mov
icebp
jno
and
dec
mov
push
xchg
pushf
addr16
mov
push
mov
mov
xchg
mov
fcomps
mov
fistpll
pusha
or
or
ret
jnp
int3
jns
push
faddl
pushw
out
int
hlt
xchg
add
pop
xchg
cmpsb
cmp
xlat
xor
mov
push
xchg
data16
push
jmp
cmp
jmp
xlat
push
aam
pushf
dec
cltd
or
testl
lods
stc
sbb
fnstcw
outsl
xor
and
andb
xor
mov
mov
xor
dec
scas
adc
jne
dec
push
cmp
xor
sbb
xchg
xchg
subl
adc
cmpsb
popf
test
sub
add
cltd
and
cmp
lret
test
sub
lock
jae,pn
je
jle
cltd
jge
dec
test
not
fdiv
sub
or
pop
shlb
cmp
cmp
sbb
cmp
sub
and
daa
je
les
enter
push
addr16
xchg
push
test
sub
jae
inc
pop
mov
xor
or
mov
fldl
cmp
movsb
pusha
cmp
rcl
lcall
jg
sbb
out
dec
push
jp
inc
cmp
cmp
add
adc
mov
push
and
loope
inc
rcll
mov
les
lahf
jge
fldenv
add
sahf
adc
or
push
cli
sbb
inc
jg
sub
add
and
push
sbb
addr16
inc
in
lret
mov
jns
xor
sub
jae
test
popa
repz
int
sbb
mov
add
data16
lods
pop
inc
lret
mov
hlt
lods
mov
fwait
mov
jns
outsb
imul
adc
stos
js
mov
pop
inc
into
xchg
pushf
dec
jmp
xchg
test
and
pushf
push
adc
sub
insb
cli
push
and
ficompl
imul
inc
sti
or
mov
loopne
testl
test
jne
add
scas
pop
jo
inc
outsb
cmp
mov
mov
ds
ror
xor
mov
pop
ret
or
dec
push
push
movsb
cmc
ret
fcmovb
iret
enter
push
cmp
dec
pop
inc
stc
iret
inc
xor
fistl
add
test
outsb
sti
fwait
adc
inc
jb
jne
jg
adc
xor
fsub
xchg
mov
and
mov
lods
adc
and
hlt
push
sti
inc
cli
adc
dec
sub
mov
test
mov
xchg
push
xchg
push
call
scas
add
daa
stos
out
jmp
inc
pop
push
jcxz
out
cmp
scas
insb
arpl
shll
adc
mov
loopne
mov
aas
cmpsl
or
je
fwait
xchg
negb
sub
into
pop
mov
rcll
inc
fcoms
cltd
xchg
ss
xor
in
lods
xchg
sti
mov
in
orl
movsl
imul
out
data16
push
or
push
or
icebp
mov
cli
mov
inc
pop
inc
stos
int3
cmove
sub
xbegin
push
bound
mov
jmp
push
rolb
enter
stos
push
dec
xchg
mov
xchg
dec
adc
xchg
and
xchg
sbb
mov
jno
dec
pop
cmp
shl
xchg
push
jne
daa
and
sbb
mov
scas
add
mov
rolb
repnz
mov
sub
cld
mov
jne
pop
cmp
popa
test
or
cmpsb
sub
mov
mov
xor
push
in
push
lret
push
push
in
jne
enter
xchg
sbb
popf
ret
mov
mov
or
push
and
ret
iret
test
shlb
mov
subb
dec
pmaxsw
out
loop
pop
fldenv
push
roll
lea
fldt
fmull
cmp
fdivr
jg
incl
push
jnp
addb
pop
movsb
into
pop
xchg
lahf
sbb
mov
mov
daa
inc
inc
js
popf
in
jbe
pop
add
shrl
pushl
add
incl
out
push
bound
push
ds
jns
aam
cmp
fwait
jbe
into
mov
and
sbb
sbb
cmp
movsb
loop
jecxz
test
cmc
inc
fadds
daa
enter
pop
push
jg
mov
xchg
sbb
sahf
cmpsb
fnstenv
cmp
jge
int3
xchg
push
inc
mov
loope
cmc
jp
aam
int
mov
adc
push
ss
jl
cltd
xchg
gs
or
jg
pop
sbbl
iret
sub
shlb
pop
or
popa
dec
bound
loope
scas
cmp
pusha
dec
mov
leave
out
add
adc
push
or
push
sti
popa
sub
jle
mov
jbe
testb
xchg
pop
aas
mov
push
fiadds
add
fadd
adc
pop
jp
popf
or
ffree
in
aaa
aam
xchg
outsl
cmpsb
mov
jp
arpl
jmp
lods
loope
rcl
nop
insb
sub
jecxz
push
sub
and
shll
lret
ds
cmpsb
call
iret
jge
aam
insl
or
push
jmp
mov
mov
stc
xlat
mov
dec
jecxz
aaa
stc
mov
mov
fidivrl
push
data16
orb
push
insb
out
in
loop
dec
add
ret
push
sub
jns
fdivl
cmpsb
mov
stos
add
das
cli
pop
shlb
test
std
ljmp
dec
andb
jl
mov
ljmp
xor
sbb
mov
adc
repnz
jecxz
cmovle
ret
cld
mov
xor
in
shll
stos
subb
icebp
adc
dec
push
addb
jmp
dec
into
sub
fsubl
shll
dec
push
insb
loopne
icebp
popf
xlat
movsl
lock
pop
mov
or
push
push
rorb
outsl
mov
das
inc
sti
roll
aam
jae
or
xlat
jbe
outsl
lds
mov
dec
and
loop
jl
outsl
add
sub
js
pusha
pop
add
mov
ds
add
mov
adc
cmp
idivb
xchg
lret
call
jnp
stos
push
or
fdivl
adc
dec
dec
pop
sbb
enter
push
xchg
sbb
cmp
inc
jno
loop
cmpsl
inc
ret
push
je
ret
dec
aam
jl
lcall
dec
lods
jno
scas
jo
pop
mov
cmp
push
pop
or
fdivrs
mov
je
sub
rolb
orb
loop
stos
icebp
rorb
xchg
pusha
push
lret
push
pop
xor
fwait
mov
fs
cltd
fcompl
push
push
or
stos
adc
push
cs
lret
push
push
add
xchg
out
xchg
stos
xor
pop
ficomps
add
lret
stc
arpl
xchg
fists
sub
sub
out
hlt
test
adc
pop
cmp
loope
scas
pop
jg
xchg
sub
mov
dec
lret
mov
aad
fstpl
adc
push
test
mov
sbb
lea
xchg
cli
mov
lcall
ljmp
gs
xchg
add
mov
addl
lods
push
fdivrs
aas
sahf
pop
stos
dec
cmc
sub
gs
jno
inc
or
and
mov
mov
popf
mov
or
mov
imul
mov
jne
idivl
sti
xchg
push
mov
clc
push
push
and
cmp
jnp
pop
cmp
sub
pop
insb
outsb
in
out
movsl
lods
cmp
out
xchg
pop
nop
cltd
movsb
dec
push
cmp
jle
pop
xchg
xchg
inc
js
inc
jb
xor
pop
pop
ja
rolb
icebp
or
pop
push
xorl
repnz
add
xchg
inc
sub
nop
cld
test
outsl
xor
xchg
mov
jp
adc
inc
xchg
add
push
lods
call
xlat
sbb
out
xchg
adc
and
or
and
andl
pop
adc
daa
sahf
jecxz
mov
sub
sbb
mov
pop
hlt
jbe
lods
insl
or
cmp
or
daa
loopne
adc
sbb
aam
lea
mov
int3
into
daa
mov
pop
cmpsb
sbb
lock
or
fnstcw
dec
jne
ret
mov
jmp
leave
sahf
int3
xchg
stos
xor
outsl
aaa
aad
jbe
jae
cmp
inc
test
adc
out
jno
pop
mov
xor
hlt
fcmovnu
inc
cmp
bound
cwtl
mov
popf
mov
jb
cmp
not
enter
arpl
or
cmpsl
dec
and
loop
leave
js
inc
sbb
aaa
and
ljmp
adc
xchg
fldl
pop
adc
scas
cmc
add
out
lcall
addb
lret
mov
push
mov
xor
mov
jge
xor
jno
inc
mov
loop
sbb
or
cs
shll
cmp
mov
flds
subb
imul
xor
ret
add
adc
sti
mov
into
and
aad
adc
cmpsl
lcall
loopne
pop
add
outsl
out
inc
out
shlb
push
push
mov
sbb
xor
pop
mov
fisubrs
mov
or
das
enter
pop
nop
in
dec
pop
scas
int3
xor
cwtl
jbe
cmpl
push
je
cmp
push
bound
rolb
xadd
and
jp
add
ljmp
das
mov
mov
loopne
push
xor
arpl
ja
cmp
repz
fstpl
lcall
fs
pop
push
shlb
ss
sub
xchg
xchg
mov
addb
inc
out
jbe
mov
mov
mov
es
or
mov
sti
sbb
jmp
lahf
adc
sub
subb
mov
mov
mov
mov
insl
push
lods
jbe
ja
cmp
mov
out
aas
mov
orl
push
sub
inc
fldenv
fsubrl
push
and
movsl
cmp
push
and
cs
aas
out
sti
or
mov
pop
lea
sbb
sub
push
jbe
xor
std
cli
insl
inc
cli
add
orl
pop
mov
repz
dec
loope
add
push
cmp
jne
les
dec
xor
js
je
das
lea
mov
pop
scas
push
gs
mov
pop
xor
test
adc
cs
cmp
fnsave
in
xlat
mov
mov
stos
mov
xchg
push
mov
xchg
mov
and
not
loop
lret
int3
cmp
or
push
scas
adc
cmp
pop
sub
xchg
stc
lods
je
fs
out
inc
or
daa
xlat
dec
cmp
ljmp
fsubs
insb
iret
out
pushf
jecxz
testb
popa
shl
mov
cmp
and
mov
mov
add
inc
push
and
xor
xor
sar
stc
jg
sub
or
xchg
lret
pop
shrb
xchg
ja
ja
mov
das
jmp
jne
add
in
pop
je
mov
call
lret
jb
mov
sbb
push
loope
lock
lret
lahf
fmull
xchg
cmc
jecxz
jmp
sahf
pop
push
nop
or
jo
int3
jnp
jb
stc
insb
push
jle
lcall
inc
pop
insl
ds
or
cmp
and
xchg
push
push
mov
repnz
in
enter
lcall
cmpsl
and
mov
js
icebp
or
repnz
lea
mov
imul
dec
jb
adc
add
and
push
sub
push
inc
mov
jmp
loope
cmp
lock
lds
pop
mov
cltd
push
pop
jge
loopne
dec
mov
stos
cmp
imulb
insl
sub
lods
std
pop
xchg
fsubrl
mov
jb
lods
adc
sub
xchg
jae
jecxz
jne
fnsave
and
subb
cmpsb
hlt
in
in
loope
sahf
les
mov
out
jge
inc
mov
mov
xor
daa
xor
insl
sub
loopne
ret
aad
repz
cmc
stc
mov
shlb
ret
je
popa
jl
or
cmp
add
mov
xchg
xor
bound
shrb
push
sahf
jmp
push
jmp
bound
rcl
stos
adc
fsubrs
inc
xor
pop
clc
icebp
out
adc
xchg
inc
jnp
mov
filds
push
in
pop
xchg
loop
xchg
inc
jb
aas
fdivrl
rorb
mov
add
rolb
mov
mov
stos
nop
jae
cmpsl
mov
cld
fsubrs
std
push
mov
mov
scas
mov
mov
cld
ret
sti
xlat
fwait
jg
cmp
dec
mov
movsl
aam
scas
sub
pop
mov
ss
lcall
sbb
scas
loop
fldcw
movb
adc
pop
sub
jnp
fstps
stc
xchg
inc
stc
repz
xchg
adc
es
lods
adc
adc
cwtl
push
add
popa
ljmp
xchg
jp
inc
pop
lret
dec
sbb
movswl
mov
jecxz
push
mov
bound
xchg
into
dec
jo
imul
arpl
xor
mov
rep
fstpl
aad
pushf
icebp
bnd
repz
mov
bswap
inc
fbld
repz
sbb
lods
lret
out
loope
jl
out
jae
popf
ds
xchg
std
cltd
push
dec
rolb
je
jb
xchg
inc
dec
lret
mov
push
dec
insl
stc
mov
xlat
imul
and
rolb
mov
jmp
mov
aas
ss
xchg
into
mov
adc
clc
fidivs
xor
imul
jnp
cld
xchg
mov
pop
dec
aam
mov
xorb
outsb
out
loopne
inc
ja
cmp
fstps
out
mov
mov
sbb
ds
aaa
jge
movsb
mov
add
jns
jmp
ss
loope
or
mov
insb
pusha
jae
jge
sahf
test
clc
popf
sub
test
mov
mov
out
addb
jb
and
movsl
mov
in
inc
jmp
xor
cmpb
lcall
iret
dec
push
cmpsl
mov
xchg
mov
pop
mov
addr16
xchg
mov
mov
iret
add
inc
and
imul
fucomip
sub
adc
xchg
loopne
mov
sbb
loopne
add
dec
dec
adc
lods
or
jne
mov
adc
idivb
loop
jo
sbb
les
lret
jg
insl
stc
gs
push
mov
shlb
sub
adc
push
cmp
push
dec
mov
xor
mov
cmpsl
addb
lcall
xchg
add
call
add
in
xor
mov
push
shrb
mov
je
add
cld
in
cld
int
pusha
sahf
sub
lods
fisttps
ss
ffreep
mov
scas
mov
push
stc
and
xchg
adc
or
sub
mov
xlat
add
xchg
add
mov
lret
js
sub
sbb
in
int3
mov
sub
xchg
daa
pop
cmp
adc
mov
fiadds
mov
xchg
fdivrs
lods
ficoms
cltd
mov
and
xor
push
addl
orb
sub
cmpsb
lods
icebp
mov
pop
add
adc
lahf
iret
notb
inc
lock
pop
jb
cmpsl
iret
ds
out
rolb
into
negb
movups
xchg
jp
mov
dec
fsubrl
ss
inc
cmp
push
rcl
test
mov
pop
inc
es
leave
jno
repnz
outsl
dec
clc
bound
clc
cmpl
repz
xchg
mov
jmp
movsb
cmp
shll
or
movsb
cmp
jb
push
push
dec
or
lds
shr
pop
in
fsubrs
popa
jp
add
js
mov
nop
add
inc
pop
pop
cmp
pop
push
jp
xchg
pop
or
fstpt
jmp
mov
mov
fyl2xp1
cmp
push
mov
push
je
inc
inc
cli
mov
inc
faddp
aad
xor
je
mov
push
insb
aad
mov
lock
xor
dec
mov
sbb
ret
adc
push
ficompl
imul
xchg
test
jg
repz
daa
push
sub
mov
imul
push
test
outsb
cwtl
ret
push
xchg
push
pop
std
pusha
cltd
fadds
sub
and
or
add
sbb
shrl
pop
xlat
loopne
inc
in
sub
enter
push
sbb
aam
nop
out
inc
or
mov
xchg
push
inc
addr16
xchg
imulb
pop
nop
adc
push
push
or
ds
or
dec
adc
mov
or
or
push
in
add
addb
pop
pusha
outsl
sub
push
dec
andnps
imul
into
jp
sbb
fidivrl
sahf
outsl
add
cmp
sahf
inc
xchg
bound
insb
pusha
test
cmp
push
repz
imull
or
lods
addr16
push
pop
aas
sub
rclb
and
js
add
or
push
jg
popa
mov
fs
jg
inc
jge
mov
sbb
mov
js
inc
int3
pop
mov
inc
nop
enter
test
pop
push
and
test
fwait
and
mov
ds
test
pop
stos
add
cmc
div
sub
mov
aas
in
adc
mov
jno
xchg
mov
add
mov
lcall
out
mov
int
sbb
das
adc
push
push
jl
stos
cmp
inc
push
and
pop
pop
andb
jb
imul
scas
flds
jle
testb
sub
and
add
test
mov
movsb
fidivrl
orl
jg
clc
jecxz
cmp
sbb
inc
inc
ljmp
cmpsl
jae
xchg
addr16
lahf
scas
ja
out
orb
xorb
gs
sbb
sti
dec
push
push
bound
mov
adc
inc
and
mov
mov
mov
jle
sub
movb
push
adc
lea
sbb
push
aaa
sbb
xchg
add
xor
mov
mov
mov
imul
sub
cmpsl
leave
or
lcall
arpl
add
sbb
xor
lret
loopne
sbb
mov
ret
xchg
mov
subb
jbe
out
adc
push
dec
jne
pop
sub
leave
xor
sbb
sbb
dec
push
std
and
fs
cs
fs
mov
mov
fs
sti
sub
cltd
sbb
enter
shr
incl
add
pushf
and
negb
inc
mov
add
clc
and
sarb
mov
loope
push
sar
add
xor
mov
jl
repnz
mov
adc
mov
push
inc
push
push
inc
xchg
xchg
sub
sbb
or
test
sbb
aam
mov
cmpsb
add
sub
les
dec
sbb
ds
adcb
add
dec
stc
sbb
mov
les
or
movsb
stos
nop
lret
sub
add
jae
in
cmp
sub
scas
pop
push
cmp
test
leave
loope
cmp
mov
jg
pop
enter
cmp
sub
adc
or
loop
pop
sbb
scas
ja
pop
sub
mov
cmc
and
mov
and
mov
cmpsb
inc
repz
dec
jb
out
adc
adc
adcb
mov
fisubrs
mov
inc
shlb
xor
fimull
pop
sub
and
dec
sub
enter
jle
cmpsb
cmp
mov
int
nop
imul
pop
aaa
rcl
and
cmp
mov
es
sti
andb
add
mov
dec
out
jo
imul
xchg
cmp
add
push
push
add
cmp
fldt
or
sbb
es
cld
dec
mov
push
xchg
xchg
scas
mov
out
das
xor
rcrb
dec
lock
stc
add
leave
jns
jp
es
das
lods
repz
cmp
call
sbb
cld
mov
fldl
or
or
and
loop
inc
out
addr16
jl
fisttpll
sub
dec
fstl
in
gs
mov
jne
pop
std
inc
movsb
add
jbe
in
int3
gs
xchg
pop
inc
adc
pop
add
aas
test
popa
cli
push
ds
decl
mov
mov
aam
loope
xor
leave
or
cltd
or
cwtl
jae
or
or
loopne
add
lods
mov
orb
in
mov
xchg
xor
lret
add
mov
fimull
pop
hlt
xchg
dec
mov
mov
sub
xor
subl
cmp
andb
jne
cs
gs
jmp
insl
add
outsl
lods
push
mov
lds
sub
stos
lret
sub
lods
das
cld
push
xchg
imul
js
xchg
cwtl
xor
jbe
adc
in
xchg
out
repnz
dec
negb
jnp
add
inc
pop
push
push
or
inc
iret
nop
test
mov
lcall
adc
test
sub
adc
inc
sub
jle
les
mov
stos
pop
and
or
test
sub
mov
mov
mov
ja
mov
popf
mov
xor
mov
mull
cs
lock
lods
std
mov
add
push
mov
std
push
rcr
jge
jnp
pop
sahf
inc
enter
xor
push
fcomp
jne
mov
pop
sarb
setle
sbb
nop
mov
pop
out
loope
scas
cmpsl
jl
jns
fsubrs
mov
push
mov
xor
xchg
dec
flds
data16
call
xchg
jae
xor
add
in
jg
test
cmp
cmp
pop
sub
fmuls
mov
popl
repz
cmpsl
xchg
cmpsb
sub
daa
xchg
mov
inc
lock
cli
sub
shrl
mov
adc
lret
ret
icebp
imul
sahf
push
pop
and
and
xchg
stos
out
push
arpl
and
rcl
aas
mov
inc
xchg
lods
mov
lret
lods
push
shlb
pop
sub
dec
inc
hlt
and
cmp
xchg
cmp
jp
in
xchg
loop
addl
jg
loopne
sbb
and
es
inc
sbb
insb
aam
outsl
push
inc
or
mov
adc
out
inc
dec
loopne
insb
or
out
fcoms
jnp
inc
xchg
push
xchg
mov
rcrl
push
iret
or
push
xchg
inc
sub
pusha
xchg
jl
pop
xlat
rcrb
jae
add
push
loopne
push
xchg
test
pop
sbb
gs
lret
jp
js
cmpsl
out
in
sub
ja
mov
test
fs
cs
inc
pop
sub
outsb
push
out
and
addl
add
or
lds
mov
xchg
jnp
rolb
stos
cmp
sub
das
pop
fldcw
test
inc
sbb
int3
jle
bound
push
es
dec
enter
mov
icebp
addr16
sar
cmp
push
xchg
loopne
dec
or
mov
cmp
push
and
mov
and
jle
cmp
int
push
push
push
ret
or
testl
scas
xchg
jns
and
mov
icebp
js
popl
sub
aam
mov
addr16
daa
pop
inc
nop
mov
dec
lret
and
xor
xchg
xor
mov
imul
into
cmp
cmp
fiaddl
dec
and
je
out
cmc
inc
adc
mov
iret
je
dec
push
inc
je
or
xchg
pushf
cmpsl
mov
fcompl
hlt
inc
adc
mov
inc
adc
adc
mov
sub
add
sub
or
add
mov
xchg
popf
add
push
mov
cwtl
jno
dec
inc
dec
mov
xchg
or
gs
jmp
lds
inc
js
jb
stos
out
add
ss
jecxz
leave
lods
jno
scas
and
xchg
push
dec
adc
cltd
jg
push
rol
loop
sbb
shll
cmpsb
rorb
adc
pusha
loopne
in
lahf
out
addl
or
subl
xchg
fisttpl
mov
gs
dec
add
hlt
mov
cli
push
movsl
into
and
andb
movb
mov
adc
push
pop
jnp
mov
dec
xlat
push
or
mov
jno
dec
sti
xlat
mov
mov
cld
push
xchg
fldt
lods
test
jno
xor
loope
ss
pusha
or
dec
xchg
aaa
xor
push
and
sbb
jmp
sbb
arpl
les
push
inc
push
push
dec
cs
pop
cmp
inc
xchg
and
or
repnz
rcll
outsl
mov
jl
push
pop
jmp
cmp
push
mov
push
arpl
shlb
test
popf
add
push
adc
call
cmpsb
sub
mov
jg
cltd
mov
popa
sbb
lcall
jnp
push
xchg
mov
mov
and
xchg
stos
sbb
xorb
jge
xchg
insl
xor
imul
ds
cmp
cwtl
mov
pusha
pop
enter
or
mov
pop
in
popa
popf
cmp
arpl
inc
sbb
push
out
push
mov
test
xorl
jle
ja
push
push
cmp
lret
popa
push
ja
adc
enter
and
jbe
cmp
lret
cli
cmpsl
movb
sbb
xor
cwtl
test
xor
lret
jmp
or
stos
add
movsl
xchg
cld
ret
mov
push
or
sub
incl
icebp
push
add
push
push
mov
sbb
lret
dec
test
pop
sub
div
cmpsb
inc
loopne
mov
mov
testl
dec
or
and
stos
push
xor
xchg
lods
ja
xchg
clc
mov
push
xor
jbe
xchg
and
cmp
out
mov
mov
stos
jmp
inc
sbb
mov
push
hlt
insl
dec
mov
sub
or
packuswb
mov
in
jl
mov
xchg
stos
mov
ljmp
push
mov
js
les
push
lea
sub
arpl
mov
ljmp
sub
mov
inc
into
flds
adc
xor
iret
mov
es
es
sbb
or
inc
popf
test
dec
jae
rclb
int3
push
aaa
mov
aad
add
addr16
push
fst
cmc
out
in
test
pop
dec
jecxz
imul
mov
push
mov
xor
sarb
xchg
mov
cmp
popf
inc
shll
and
cmp
adc
cltd
call
fnstsw
cmpsl
rcl
ljmp
jo
inc
sub
aas
jg
outsb
in
pop
jns
inc
push
lods
push
lods
mov
imul
or
pop
or
push
pop
in
pop
add
nop
sub
sbb
cltd
negl
sub
mov
sub
aas
jnp
inc
adc
aas
jp
les
shrl
cmp
leave
xchg
ret
inc
jp
jge
and
aad
subl
dec
mov
bound
mov
outsb
push
push
rcll
lock
adc
xchg
sbb
ret
pop
xchg
or
add
jge
mov
xor
cmp
gs
popf
xor
sbb
or
xchg
xor
ret
jmp
jg
outsl
rolb
xchg
mov
push
push
and
in
push
lds
stc
outsb
test
fcompl
mov
scas
inc
sbb
adcb
pop
sbb
adc
popf
subb
push
icebp
idivb
xchg
dec
cltd
popf
push
xchg
xor
jl
into
lret
aas
in
jbe
sahf
mov
sub
jnp
jne
into
icebp
sub
push
scas
jbe
mov
and
popf
lahf
xor
xor
mov
push
ss
pop
std
icebp
lcall
sbb
lret
inc
push
mov
or
iret
ret
dec
pop
xor
sbb
xor
adc
in
mov
add
pop
stos
push
inc
aad
jl
sub
xor
iret
test
mov
mov
hlt
jl
pop
adc
push
dec
sub
pop
loopne
pop
xor
mov
xchg
xchg
inc
stos
jne
cmpsl
shrl
pop
mov
xchg
int3
adc
pop
dec
mov
mov
jl
shlb
mov
dec
into
xor
pop
sti
rorl
push
inc
and
rclb
roll
adc
pop
out
sbb
fistpll
rorb
xchg
ljmp
adcl
push
pushf
xor
bound
into
enter
xor
sub
mov
sub
push
cmc
jle
adc
dec
cs
imul
xchg
dec
es
mov
es
sub
mov
or
mov
es
jmp
in
popf
xor
mov
adc
jns
and
test
jl
flds
inc
and
cs
in
sub
jno
pop
jae
insb
cmp
shlb
jno
fiaddl
xor
arpl
or
int
aaa
subb
jb
or
sub
fildll
test
jl
xchg
sbb
sub
or
inc
pop
xchg
loopne
into
mov
in
add
cmpsb
mov
repz
imul
stc
scas
mov
insl
leave
mov
aad
in
shl
pop
les
jl
sbb
lock
inc
jns
fmul
shrl
outsb
jmp
js
and
jno
mov
mov
mov
out
fisttpll
xchg
jl
mov
out
inc
jecxz
jns
ss
es
xor
call
pop
in
mov
sbb
xor
int3
shr
push
fiaddl
sub
push
ds
fwait
sbb
pop
movsb
pushf
dec
dec
xchg
jmp
cli
into
fstl
push
mov
mov
xor
dec
repnz
cmp
imul
pop
mov
or
fistps
icebp
xor
xor
mov
mov
outsl
in
loope
inc
ret
loope
or
mov
addr16
pop
mov
mov
mov
ret
mov
push
movsb
into
mov
movsb
insb
es
mov
jns
cltd
sub
iret
repnz
ss
or
cltd
mov
mov
rcl
pop
push
sahf
mov
fdivrs
mov
testl
in
out
mov
mov
imul
pop
daa
add
xchg
ja
mov
inc
and
or
mulb
jg
jl
and
ret
xchg
data16
cmc
jbe
int
outsb
mov
test
dec
pop
lret
push
sbb
bound
icebp
loope
sahf
movsb
movsb
popa
test
cmp
inc
mov
mov
cli
adc
push
inc
xchg
mov
add
daa
lock
fwait
stos
pop
fcmovnbe
inc
mov
push
push
insl
cltd
xchg
pop
mov
das
aam
ljmp
mov
cld
lret
idivl
clc
gs
rcrb
hlt
lcall
sbb
cmp
cmc
add
jmp
addb
mov
in
add
aam
mov
sbb
mov
dec
aam
xchg
es
addr16
pop
mov
jg
jl
inc
inc
inc
dec
stc
iret
repnz
je
lahf
addb
mov
inc
repnz
out
mov
iret
mov
mov
or
inc
inc
adc
mov
push
xorb
aaa
xchg
clc
sarl
mov
xchg
ret
push
xchg
sbbb
arpl
jbe
mov
or
out
fyl2x
mov
jbe
mov
cmpsl
pop
icebp
mov
movsl
test
cwtl
daa
dec
lret
mov
popw
test
stos
stc
push
adc
je
mov
enter
and
aad
xor
movsb
ja
cmc
ja
lock
adc
pop
arpl
lods
loope
lods
jbe
cld
sub
jp
roll
subl
cwtl
rcr
out
or
fisubs
jecxz
pushf
mov
xor
test
popf
jae
dec
pop
add
lret
cmp
rcrb
mov
insb
cmp
mov
mov
jle
pushl
add
mov
imull
cmp
cwtl
mov
sub
mov
pop
fisttpll
fbstp
mov
mov
rcr
sbb
movl
xchg
mov
xor
cmp
cmp
mov
push
jbe
inc
scas
outsb
sti
out
push
xor
hlt
ljmp
push
lret
sbb
jl
aas
gs
enter
or
push
popf
mov
lcall
aad
test
ljmp
adc
arpl
or
inc
inc
lea
rcll
mov
in
jge
push
pushf
add
adc
repz
cltd
mov
adc
xor
push
inc
fstl
mov
addr16
dec
mov
cmp
inc
add
mov
int
mov
push
pop
sahf
cmp
ret
fimull
loope
icebp
addr16
dec
mov
icebp
inc
pop
lret
inc
pusha
out
lret
jecxz
sub
neg
xor
popa
push
int3
mov
pusha
or
je
inc
ret
aam
gs
lret
xchg
lahf
jg
scas
cmp
dec
stos
adc
or
in
pop
jl
lods
ljmp
fwait
and
sti
cmp
mov
in
xchg
push
scas
mov
mov
jo
hlt
sbb
mov
add
mov
sbbl
outsl
xchg
stos
jle
out
add
push
xchg
je
stc
sbb
cwtl
outsl
call
mov
sysret
inc
mov
clc
add
adc
lods
jno
jno
push
fld
je
mov
mov
divb
test
adc
or
int3
mull
iret
insb
leave
xor
loop
ficomps
insl
test
adc
mov
dec
push
stos
pop
cmpl
pop
mov
inc
lahf
add
mov
int
andb
sub
cmp
jl
lods
or
in
inc
in
fcoml
cmp
sti
add
std
js
pop
sub
in
ja
sub
movsl
xlat
xchg
out
jg
sub
icebp
fyl2xp1
subw
negb
jp
push
mov
cmp
insl
sub
je
pushl
scas
test
push
ds
jecxz
xor
test
rcrl
cmp
lods
cld
sub
push
lret
cmpsl
dec
call
jge
repnz
pop
mov
push
out
lea
lret
clc
sub
pop
lret
repnz
or
aam
sbb
mov
ja
sub
pop
ret
mov
adc
lcall
jp
or
dec
mulb
pop
fwait
adc
cmc
jb
je
jno
jg
cmpl
fisttpl
push
inc
add
sub
jno
push
lods
mov
popf
push
loop
jnp
out
dec
sbb
insb
inc
pop
xchg
lock
test
xlat
lods
sub
mov
mov
insb
xchg
repz
cld
cmp
xchg
stc
pop
das
push
xchg
mov
inc
in
repz
in
clc
add
pop
mov
mov
insl
mov
cmp
imul
enter
mov
cmp
sub
in
aas
sbb
or
pop
add
in
and
call
and
stos
xor
stos
pop
push
xchg
leave
or
xchg
adc
mov
jmp
sbb
mov
popf
notb
imul
xchg
mov
cmp
std
testb
andb
adc
cmpsl
xchg
jbe
mov
xchg
loopne
pop
jmp
movsl
call
inc
ljmp
loope
xchg
icebp
sbb
push
sbb
outsl
stos
aaa
lret
cltd
jle
push
mov
mov
cmp
rorl
push
pop
lds
cwtl
call
and
inc
notl
dec
and
out
sbb
inc
fistpl
clc
cmc
cmpsl
mov
mov
insl
dec
enter
push
fstp
data16
adc
jns
xchg
pop
movsb
scas
mov
cmp
out
cmp
test
sub
test
shll
aam
mov
es
and
inc
in
fninit
mul
ret
mov
jg
cmp
inc
aas
mov
xchg
sub
add
insb
push
pop
cmp
or
push
cmp
aas
lock
ljmp
sub
xchg
enter
rclb
in
aad
bound
mov
add
and
jmp
jl
mov
lods
pop
sub
imul
scas
in
push
push
cmpl
adc
hlt
pop
push
mov
cmpsb
or
or
insl
push
pop
cltd
adc
push
inc
sbb
sbb
imul
cmp
sub
xor
add
movsl
dec
stc
push
insb
push
fisubrl
outsb
and
aas
add
enter
mov
add
sub
fadd
rcrb
mov
test
sti
je
enter
pop
mov
sub
data16
push
adc
stos
addr16
movsl
outsb
outsl
aam
mov
lahf
adc
sbb
mov
ds
mov
or
iret
or
or
pop
subl
jmp
jb
test
mov
fistl
divl
pop
jb
movl
mov
int
mov
daa
cld
xchg
or
sbb
hlt
jg
fwait
sub
int3
pushf
fs
mov
add
lcall
adc
pop
jno
fwait
repnz
testb
in
add
iret
shrb
xor
pop
and
leave
xchg
xchg
out
adc
push
jne
inc
xor
sti
loopne
jne
jns
fwait
aaa
sbb
lret
push
lret
mov
sbb
pop
test
ret
pushl
push
ret
nop
pop
pushf
xchg
inc
sub
inc
xor
stos
push
jl
shlb
mov
mov
loop
sahf
xchg
dec
lret
xor
jo
cmp
gs
fildl
cltd
inc
xor
jmp
pop
xor
and
xchg
in
cwtl
jg
pop
mov
push
jl
mov
xchg
adc
js
inc
leave
in
popa
pusha
repnz
call
sub
hlt
mov
stc
pop
sbb
pop
and
and
out
sub
rol
cmp
inc
fs
pop
int
mov
popa
cmpb
movsb
sub
ljmp
leave
scas
rcr
adc
fbstp
sbb
movsb
bound
int3
fdivs
ffree
subb
xchg
popf
aas
repnz
scas
shll
loope
mov
pop
inc
cli
jmp
dec
sbb
shlb
stos
dec
pop
adcb
mov
and
shrb
jo
fwait
ljmp
xchg
cmpsb
jg
xor
fldz
adcl
adc
pop
dec
leave
mov
mov
js
pop
jns
in
jecxz
dec
mov
rorl
dec
movsl
push
sbb
aad
orl
sbb
data16
adc
fmull
les
out
xchg
sub
daa
mov
push
mov
test
movsl
mov
sbb
nop
cmpsl
icebp
adc
cmp
lahf
push
mov
mov
int3
inc
test
loopne
enter
xor
dec
sarb
sub
shl
int
test
cmp
or
and
pop
push
lcall
xorb
sbb
mov
push
inc
mov
int3
cmp
loop
and
xchg
mov
push
pop
loop
subb
add
push
in
mov
xor
cmp
lret
loope
scas
imul
push
call
ljmp
enter
xchg
out
mov
xchg
sahf
sub
cltd
int
int3
mov
setbe
adc
movsl
add
sub
xor
xchg
cmp
stos
xchg
es
sub
enter
jmp
aas
add
push
divl
xor
outsb
cmp
mov
and
shll
addb
iret
mov
imul
push
in
add
push
adc
cwtl
sub
mov
pop
lea
insl
fwait
addr16
scas
mov
push
movsl
adc
icebp
into
adc
pusha
sub
pop
les
ret
test
sbb
dec
add
cwtl
and
andl
mov
fsubl
fwait
loopne
mov
insl
inc
popf
js
stos
mov
jno
adc
ret
daa
push
push
and
lock
cltd
mov
stos
pusha
mov
test
movsb
into
lds
fcompl
xor
cmp
shlb
xchg
sahf
push
jns
stc
pop
jge
jbe
arpl
inc
mov
out
add
push
fisubrl
xlat
out
sarl
lret
in
lods
jmp
mov
cld
cmc
pop
and
rclb
pop
nop
pop
add
xlat
lahf
addb
dec
in
cmpsl
bswap
loop
lock
lds
and
xchg
jne
jnp
shlb
mov
data16
mov
xor
stc
daa
in
pop
sahf
rclb
push
sbb
sbb
aad
imul
scas
xchg
std
push
mov
and
shr
es
and
add
popa
xor
hlt
pop
sbb
test
fnsave
icebp
xchg
dec
stos
xchg
jne
pop
shll
orl
adc
es
ljmp
aaa
xor
or
adc
out
outsl
add
fnstenv
lods
lock
cltd
xlat
out
and
push
int3
mov
or
xchg
rclb
push
dec
inc
adc
push
mov
sub
pop
xchg
std
sub
push
test
jns
jne
xorl
jge
mov
adc
je
ss
sub
test
push
mov
adc
xlat
or
push
insb
add
mov
in
adc
inc
cmp
test
add
cmp
inc
xchg
loopne
dec
imul
aad
xor
add
rcrb
pop
outsb
or
fisubs
sub
mov
push
cmp
out
pop
addr16
outsl
dec
fsubp
lods
cmp
mov
cs
and
xor
jne
mov
adc
inc
in
pusha
int
cmp
fnstcw
shr
aam
out
sub
fistps
sub
lahf
push
sbb
push
pop
je
mov
inc
scas
mov
jns
push
cmp
sbb
fs
cltd
mov
add
push
lret
fstpt
aas
lods
aad
adc
and
fildl
xor
popf
fincstp
mov
or
aaa
sbb
lods
lods
outsl
mov
iret
sbb
imul
xor
xor
inc
sbb
push
scas
addr16
mov
repz
and
sbb
or
xchg
loop
mov
cmp
pusha
cmp
popf
dec
mov
pop
adc
mov
test
jl
cwtl
lret
call
push
dec
jbe
sub
into
ljmp
sbb
les
adc
pop
cli
push
sub
dec
mov
hlt
das
mov
ljmp
shl
dec
mov
lcall
icebp
stos
dec
mov
shlb
sub
sbb
dec
mov
imul
in
mov
pop
mov
cmp
aaa
push
imul
mov
and
lahf
movsb
out
addr16
loop
je
jns
fisubs
jp
fwait
jno
xchg
mov
push
mov
jp
push
fdivs
jo
out
and
inc
sbb
addl
std
push
pop
jnp
or
mov
adc
je
mov
jno
call
cs
jae
mov
mov
fildl
ret
sub
inc
add
mov
outsb
cmp
daa
cmpsb
mov
repz
and
push
jb
sbb
sbb
mov
sbb
notb
pop
das
sub
add
dec
push
fwait
pop
xor
xchg
xchg
jae
sbb
or
arpl
test
out
cmp
xchg
cmp
jge
repz
fcoms
enter
xorl
pop
xchg
fcomip
mulb
mov
enter
fsubrp
je
repz
add
push
shll
dec
stos
out
mov
enter
and
sub
jno
mov
cmpsl
sub
lahf
push
hlt
out
lahf
sbb
lds
cmp
mov
or
jl
jns
add
in
mov
and
out
pop
xor
mov
dec
cmp
push
jecxz
cmp
jne
and
movsl
es
mov
or
cmp
imul
out
cli
std
fsubrs
lret
jo
push
clc
jb
adc
jne
pop
sbb
ror
sbb
pop
aam
jl
sbb
flds
rolb
lret
sbb
sbb
xchg
lea
pop
in
sub
jmp
int
add
cmp
in
stos
sarl
mov
aad
inc
adcl
pop
xor
mov
mov
jl
pop
pusha
mov
jge
or
rcrl
push
data16
filds
and
enter
pop
sti
or
out
popf
stc
xchg
sub
nop
dec
aaa
xchg
bound
sub
fnsave
ja
xchg
movsl
add
outsb
addl
adc
stos
scas
and
mov
dec
pop
stos
adc
sbb
jp
xor
push
cwtl
mov
xor
sbb
cltd
xchg
cwtl
inc
shll
and
in
stc
scas
lea
jecxz
nop
cmp
into
xor
pop
xchg
stos
xor
or
adc
add
xchg
frstor
in
mov
jg
inc
push
movsl
add
mov
or
pop
sti
mov
push
jmp
shr
negl
repnz
add
fldt
ds
mov
sub
inc
push
cmp
push
imul
in
jae
xor
add
outsl
inc
push
pop
jp
push
xchg
popa
call
cmpsl
mov
clc
int3
add
adc
lcall
mov
loop
insl
xchg
fxch
cs
aas
inc
int3
mov
movsl
ret
jae
dec
pushf
ljmp
jne
jo
mov
sbb
pop
xlat
cmp
dec
mov
call
test
pop
in
and
push
inc
icebp
scas
sbb
daa
nop
lcall
and
mov
ret
mov
fwait
pushf
lret
or
icebp
cmp
std
add
stc
and
push
xchg
fisttpll
ret
je
popa
ja
mov
in
shrb
xchg
mov
mov
adc
sar
cmc
dec
sub
mov
icebp
jns
into
std
outsb
jg
shll
js
xchg
popa
testl
imul
push
sub
inc
sarl
pop
in
xor
out
mov
dec
mov
mov
inc
and
notl
js
inc
xor
mov
sarb
and
or
and
aam
out
mov
sub
stc
pop
jge
dec
mov
mov
dec
rclb
mov
fldcw
adc
shlb
jle
inc
inc
jge
mov
mov
mov
inc
imul
mov
xchg
pop
add
shll
inc
cmp
lahf
test
cmp
dec
loop
jmp
lods
adc
adc
lret
test
in
mov
mov
xchg
fistpll
test
mov
add
lcall
sub
jns
int
xchg
leave
push
call
aad
mov
imul
enter
jmp
xor
fwait
mov
sub
in
sbb
lret
jb
movsb
mov
jns
in
mov
dec
add
pop
movsb
cmp
btc
es
sarb
adc
in
push
sbb
leave
cmp
sbb
fdivrl
xchg
push
push
push
std
cmpsl
jne
imul
sbb
sbbl
pop
cmpl
push
sub
scas
xlat
cmp
push
push
shlb
fimull
cltd
in
pop
ja
repz
hlt
dec
push
cs
jecxz
inc
cmp
pusha
pop
das
dec
ficoms
inc
or
shll
mov
repz
adc
je
insl
and
stos
imul
mov
sarl
aaa
dec
sbb
sar
shl
test
imul
jecxz
xor
shrl
mov
sub
rolb
idiv
movsb
aaa
mov
fsubrl
xchg
insb
lds
jo
das
jnp
mov
mov
and
fisubs
add
imul
sbb
ja
mov
movsl
xor
mov
and
out
sbb
lret
mov
and
mov
or
aaa
jae
int
push
nop
jae
pop
sbb
fcomps
or
push
mov
ds
add
subb
in
or
bound
loopne
mov
add
push
adc
in
scas
mulb
jnp
pop
dec
fwait
insb
pop
ljmp
in
cmp
mov
cmp
push
pop
sbb
mov
xchg
sub
xor
insl
ja
jle
or
cmpsb
js
gs
push
mov
sub
bound
adc
pop
push
lock
je
pop
out
mov
push
cli
mov
mov
mov
gs
lods
mov
aas
aad
divb
dec
movsl
aas
mov
in
in
xlat
call
dec
andl
pop
data16
fcmovnu
cmc
add
out
inc
mov
inc
xchg
bound
dec
push
shrb
mov
test
push
movsb
pop
xchg
leave
dec
daa
xor
add
out
xchg
fsubp
popf
push
push
mov
adc
cmp
cli
popf
and
xchg
cmpsl
std
mov
xor
hlt
jb
cmp
mov
out
gs
aaa
pop
test
das
je
mov
lret
enter
inc
jge
rclb
push
loop
test
into
stos
fucomi
dec
add
scas
loope
jp
cmp
cli
aam
inc
xchg
mov
fistl
cmpsl
pop
jb
xchg
or
mov
mov
mov
pop
mov
or
lds
jmp
or
sbb
lcall
call
iret
push
sub
in
mov
popa
loopne
add
test
int3
push
push
sarb
sub
sbbb
test
out
dec
inc
ja
mov
data16
orl
or
add
loop
in
je
aas
scas
clc
maxps
mov
jg
add
xorl
es
das
fdivl
mov
xor
add
mov
add
or
loop
and
or
int
mov
mov
popa
cmp
fstps
cld
sbb
sbb
pop
stc
addr16
movsb
test
stc
cltd
cmpsl
arpl
outsb
adc
xorl
and
jbe
in
jns
insb
mov
fistl
sbb
stc
shl
jmp
movsl
aas
cmpsb
push
jmp
fnstcw
jge
sahf
mov
std
ja
or
cmp
repz
pop
call
xor
adc
inc
sub
xor
sbb
cmc
ljmp
inc
sbb
push
stos
fidivs
xorl
fsubrp
sbb
jb
test
insl
sub
adc
adc
scas
dec
loopne
push
sbb
rcrb
add
jge
movb
cld
or
aad
dec
iret
std
dec
cmpsb
sbb
lods
leave
repnz
push
mov
cmpsb
xor
push
mov
sub
push
mov
push
in
cmp
cmc
mov
xchg
ret
and
inc
test
xchg
push
push
fwait
popf
jle
popf
mov
fistpll
rclb
mov
and
in
arpl
sub
push
inc
mov
push
xchg
pushf
sbb
pop
add
jge
jae
jae
pop
jno
sbb
mov
loope
push
loopne
out
push
jle
in
rolb
roll
movl
mov
repnz
jo
lock
sub
sbb
outsl
add
ret
je
gs
ret
mov
sub
jl
lret
out
pushf
in
mov
add
lea
sbbb
popf
sub
mov
adcl
dec
xchg
add
mov
gs
sub
push
pop
lds
jg
gs
mov
outsl
sti
rorl
je
adc
jo
test
jecxz
int3
imul
inc
mov
cmp
fcmovb
in
lea
add
dec
inc
mov
lock
push
shll
xchg
insl
cmpb
mov
push
sbb
nop
pop
test
cli
mov
jns
pop
adc
xlat
cmp
sarb
xor
xor
fs
mov
cmp
cmpsb
pushf
mov
xchg
xchg
in
cmp
lds
mov
pop
dec
xor
pop
sbb
sub
sahf
fadd
sub
pop
ss
lcall
mov
cs
xchg
pop
pop
mov
mov
mov
sbb
aas
test
push
add
mov
scas
sbb
mov
test
or
int
mov
fildl
pusha
dec
push
negb
pop
lea
aaa
xor
in
mov
aad
jne
xchg
mov
push
gs
hlt
lods
sarb
insb
jmp
out
das
add
xchg
push
jno
sub
in
sub
cs
insl
and
lea
dec
jl
stos
pop
pushf
inc
stos
jns
lods
jecxz
out
daa
sahf
sti
mov
cmp
sbb
mov
jb
bound
and
mov
shr
in
xchg
mov
inc
rcll
loope
cltd
mov
dec
lea
lods
hlt
dec
mov
fsubs
lret
cmpsb
cs
mov
std
inc
adc
sbb
scas
pop
filds
pop
rcll
rclb
mov
pop
push
or
rol
cld
pop
push
inc
jecxz
mov
xor
neg
nop
or
jne
cmp
fcompl
sub
sbb
sbb
aaa
jge
mov
aad
into
test
or
pushf
jae
sbbl
push
xlat
xchg
sub
fiadds
and
stos
imul
mov
inc
mov
cs
cmc
aaa
push
adc
xlat
push
add
and
loope
xchg
dec
add
test
divl
popa
pusha
js
pop
loope
out
popa
not
push
movsb
pop
fsubrs
leave
dec
pop
xchg
push
inc
dec
ror
dec
mov
cmp
add
ja
test
xchg
leave
jp
das
das
cmpl
sahf
xchg
js
mov
mov
cld
jbe
pop
jl
and
ret
adc
and
in
test
xchg
cmp
inc
andl
sub
enter
fwait
adc
inc
push
lds
clc
sar
stos
mov
push
mov
lods
cs
jmp
mov
pop
testl
sbb
pop
inc
lock
mov
mov
mov
in
adc
jnp
jbe
cmp
cmc
inc
adc
add
hlt
mov
cmp
outsl
push
push
in
shrb
shll
push
sub
push
aam
pop
push
lock
xchg
test
je
inc
dec
cwtl
add
pop
adc
xor
push
outsl
les
mov
sbb
popf
mov
inc
mov
xchg
inc
fwait
xor
aad
pop
movsb
movsb
xchg
pop
fcmovu
fwait
sbb
cltd
cwtl
mov
scas
lret
dec
pop
setp
das
add
mov
cmpsb
jp
inc
clc
insl
int
lcall
jne
xchg
xchg
daa
enter
pop
xor
scas
int
ss
sub
jg
fwait
push
hlt
push
adcb
repnz
lret
outsb
and
in
jae
adc
push
push
sbb
lods
add
out
movsl
pop
mov
cs
mov
test
mov
ljmp
icebp
and
pop
into
in
aas
xor
scas
hlt
aas
subl
in
arpl
push
movsb
mov
push
ss
mov
or
or
or
test
stos
arpl
mov
xchg
pushf
and
pop
ret
mov
rcll
lret
and
out
pop
cmp
xor
es
lea
xchg
mov
jno
adc
test
mov
stos
test
bound
movsb
cwtl
sub
icebp
adc
dec
imul
adc
sbb
fdiv
sub
es
es
sub
outsb
arpl
lds
testl
pop
mov
sbb
push
adc
sbbb
sbb
in
add
addr16
hlt
jo
insb
movsb
pop
out
popa
mov
filds
ret
rol
sti
lods
out
xchg
int3
jo
stos
stc
cwtl
enter
sub
jp
sbb
ret
and
mov
mov
out
fsubp
stos
mov
xchg
nop
cmp
sahf
popf
mulb
cmp
adc
mov
xchg
lret
repz
dec
push
xchg
pop
arpl
loope
scas
dec
dec
mov
dec
test
movsb
adc
mov
fmull
int3
pop
xlat
jbe
lret
push
adc
loope
inc
adc
mov
test
inc
inc
adc
ds
xchg
cltd
addr16
xlat
cmp
inc
ret
aam
inc
das
pop
int3
add
cmpsb
je
fcmovne
rcrl
out
ss
movsb
inc
cmpsl
mov
lret
jo
xchg
out
outsb
pop
or
aaa
or
std
loop
popa
inc
xor
fucomip
insb
aad
inc
lods
sbb
je
ret
out
scas
sbb
adc
mov
sbb
pop
pop
mov
sbb
stc
pop
push
jp
sub
sahf
in
dec
pop
jmp
stc
pushf
xchg
sub
sti
insl
push
dec
mov
pop
shl
push
ljmp
mov
stc
dec
xorb
mov
mov
movsb
repnz
faddl
cmp
aad
fisttpll
adc
sti
std
bound
jl
push
rep
inc
cmp
and
lret
cmpl
scas
and
lahf
imul
outsl
pop
cmpl
push
add
or
fsubrs
cmp
rcrb
and
popf
popf
test
mov
mov
pop
pushf
jge
adc
rcrb
xlat
scas
shlb
shlb
inc
xchg
aad
cmp
push
push
xchg
sub
mov
inc
inc
test
loopne
push
push
sub
cmp
inc
dec
mov
push
int3
add
mov
out
imul
mov
adc
mov
test
adc
and
or
push
sbb
mov
jns
adc
sub
arpl
dec
inc
mov
adc
and
add
push
inc
lds
stc
mov
mov
and
sbb
movsb
imul
push
and
inc
xchg
rclb
or
pop
xchg
xor
jbe
mov
xchg
loop
ret
popf
mov
and
mov
cmpb
std
xor
jl
das
sub
add
jb
lret
cltd
repz
mov
inc
in
push
mov
bound
sbb
scas
xor
pushf
es
adc
push
jmp
imul
loopne
inc
xchg
insl
es
addr16
ss
daa
daa
fwait
notb
sub
outsl
mov
adc
in
pop
popf
repnz
sahf
jbe
in
xor
cmc
seta
ret
push
fsubr
sti
test
popf
bound
jecxz
and
inc
or
mov
stc
loope
or
call
clc
shl
mov
adc
pop
jnp
jg
push
jmp
fiaddl
repz
xorb
xor
clc
jle
scas
inc
outsl
jecxz
into
ja
mov
lret
jo
rorl
sbb
pop
iret
add
xchg
roll
inc
lret
fisubs
shlb
jb
nop
jb
lea
ds
rcrl
mov
cmp
push
or
loope
jge
push
mov
inc
leave
aad
call
fcmovnb
cld
out
push
xchg
xchg
push
enter
ds
scas
loopne
xchg
addl
leave
inc
lock
insb
pmaddwd
jle
push
sub
mov
ja
mov
cwtl
add
aaa
push
or
xlat
sub
rdseed
dec
adc
pusha
dec
jnp
mov
xchg
scas
push
pop
mov
sbbl
icebp
outsb
jae
int3
sub
iret
stc
test
int
lcall
imul
sahf
cmp
sbb
loopne
and
in
inc
lea
shll
inc
imul
or
fisttpll
gs
out
movb
adc
arpl
or
xor
scas
iret
int3
into
push
in
jns
repz
jo
jg
clc
xlat
or
stos
aam
xchg
mov
mov
jmp
stos
add
pusha
cld
lcall
cmpb
push
cmp
outsl
je
pop
mov
stc
lock
int
push
lahf
pop
adc
repnz
shll
xchg
xchg
cmpsb
lahf
lahf
pop
add
shr
mov
sbb
leave
js
test
add
clc
ret
xchg
sbb
add
or
mov
lods
mov
xor
xchg
jo
adc
es
lock
jno
dec
sub
mull
pop
ljmp
lcall
fadds
dec
mov
pop
push
inc
xchg
xor
lods
jo
and
pusha
push
orl
cmp
add
xor
test
sbb
and
push
adc
or
mov
cmp
and
mov
sbb
xor
pusha
push
lcall
cli
pop
inc
pop
jns
loop
int
iret
lret
in
pop
outsl
mov
cmp
xchg
dec
movsb
xor
ja
dec
aaa
or
adc
out
pop
fildl
mov
mov
divl
pop
and
out
pop
or
xor
push
mov
mov
inc
movsl
mov
jg
adc
sub
and
stos
mov
sarb
loope
pop
add
lret
scas
sbb
imull
leave
repnz
lds
popf
add
mov
and
rolb
es
xor
ljmp
icebp
rcrb
adc
movsb
mov
sahf
cmp
icebp
fistpl
es
mov
cs
push
ret
pop
jno
fidivrl
ret
cmpsb
dec
sbb
and
das
sub
arpl
jnp
js
mov
test
adc
cmp
fsts
push
mov
pop
in
inc
gs
out
mov
shll
in
jno
int3
inc
push
lea
mov
notb
push
mov
insl
sub
or
out
loopne
adc
popf
inc
jp
sub
mov
scas
outsl
add
fcoml
push
mov
jns
add
mov
js
and
mov
xor
mov
mov
enter
mov
jne
mov
aam
push
loop
push
mov
pop
stc
inc
sbb
xchg
or
dec
push
negb
mov
jns
rol
cld
imul
sbb
xchg
inc
mov
add
int3
out
xor
push
dec
adc
arpl
adc
jns
decb
jecxz
xchg
inc
rclb
iret
rcrb
pop
insb
sahf
outsb
mov
addr16
inc
push
shl
jae
cmp
movsl
imul
jo
imul
inc
or
fucomp
pop
ss
mov
fildll
jo
jmp
outsl
fsubrs
jnp
imul
jb
insl
shll
fisttpl
jnp
pop
push
sbb
idivl
sbb
mov
fcomps
mov
stos
inc
cmpsl
fwait
dec
cmp
mov
aad
daa
lcall
mov
popf
xchg
jle
lds
sahf
sets
mov
in
or
ja
aad
lods
sbb
cmp
in
jae
pop
push
dec
xor
mov
lea
scas
fucomp
or
adc
pop
xor
mov
jns
xor
cmpsb
or
std
sub
pop
int
sbb
jg
loopne
sti
xor
aaa
adc
test
sahf
lea
sbb
inc
pop
daa
sub
in
push
mov
xchg
push
out
and
push
mov
test
out
xchg
pusha
mov
xchg
sbb
mov
cmpsl
xchg
jmp
jle
gs
inc
and
sbb
fsubs
and
outsl
roll
mov
fwait
repz
jmp
or
sahf
push
mov
adcb
cli
test
lock
add
daa
fistpll
shll
xchg
xor
in
aam
adc
push
cli
mov
fisubs
shrb
mov
lock
in
out
pop
lea
adc
or
jno
ret
loop
xor
adc
xlat
jns
cld
xchg
push
insl
js
rcl
push
mov
int3
xchg
jl
dec
cmp
xlat
pop
in
dec
cmp
addb
jnp
push
mov
imul
std
mov
sbb
xor
fs
pop
popf
rol
cs
data16
mov
cmp
push
cmp
ret
adc
lcall
in
jnp
cmp
jno
xlat
sahf
stc
xchg
cmp
out
lea
inc
ret
jae
add
inc
loope
es
test
pop
jb
push
arpl
cwtl
lret
ret
inc
sahf
add
or
shl
adc
fwait
sub
dec
lahf
add
mov
leave
pop
push
push
mov
outsl
xchg
ror
aam
sub
cmp
inc
dec
mov
mov
mov
fdivrs
pop
mov
sbb
dec
mov
cs
sub
andl
popa
aam
loop
stos
jns
cmp
sbb
push
jmpw
imul
mov
stc
ljmp
sbb
dec
ja
cmpsb
jge
loopne
jo
loop
mov
sub
aam
mov
and
outsb
sbb
test
sub
ret
mov
inc
out
repnz
jp
sar
ds
xor
inc
cmc
and
inc
out
add
dec
xchg
mov
mov
stc
out
jp
xor
mov
rorl
icebp
je
cmp
sbb
xchg
or
mov
or
adc
xor
jge
xchg
or
mov
sahf
push
inc
mov
adc
cld
mov
dec
mov
adc
loopne
pop
xchg
std
sbb
mov
sub
push
sub
icebp
and
leave
lret
push
mov
sub
stc
popf
jbe
inc
mov
lods
iret
adc
movsl
aas
xchg
cld
jecxz
xchg
cmp
jp
cmp
iret
inc
lock
add
icebp
mov
cmpl
call
sbb
cmp
jnp
cltd
mov
lods
fisubrs
cmc
jnp
xchg
dec
loop
mov
inc
jg
out
xor
insl
pop
negb
test
dec
dec
out
push
cmp
arpl
jns
and
push
xchg
filds
lea
std
shrb
sub
jnp
lahf
or
mov
dec
into
frstor
cmp
ficomps
dec
cmp
ret
xchg
rcrb
pop
cli
dec
push
dec
call
ret
xchg
cmp
aam
lcall
jl
loope
aad
shrl
xchg
mov
sbb
jecxz
lea
sub
not
xchg
jbe
ljmp
mul
mov
mov
test
sbb
dec
cwtl
mov
mov
xchg
pop
loope
inc
fs
xchg
jo
movsl
add
xchg
ds
jge
into
sub
jnp
adc
jmp
sbb
popa
sahf
outsb
xchg
out
loopne
imul
and
aas
out
mov
scas
lret
inc
mov
xchg
inc
mov
and
insl
jns
lret
mov
je
lahf
fstl
jb
inc
ss
jbe
hlt
mov
sub
loopne
flds
pop
push
inc
movb
xchg
lea
xorl
out
mov
pop
sti
setbe
jge
hlt
loop
pop
imul
sahf
xchg
fst
or
popf
lea
mov
jo
pop
pop
and
lahf
shll
pop
jmp
das
jmp
adc
xor
mov
lret
iret
aam
mov
jno
pop
clc
mov
xchg
mov
jae
inc
das
pop
sbb
cmp
pop
out
xchg
push
out
cmpsl
je
cmpsb
sbb
pop
mov
cmc
frndint
test
and
mov
add
stos
jne
inc
decb
inc
fisubrs
jge
jp
add
ret
pop
in
xor
shrl
sti
mov
cmpsb
inc
into
data16
push
jecxz
push
push
pop
cmc
xchg
gs
pop
adc
insb
sub
inc
xchg
out
xor
mov
inc
sar
jb
push
jmp
outsb
jb
pop
adcb
dec
stos
shr
add
loop
popa
lods
daa
pop
popa
cmp
lods
shrb
and
xchg
lds
sbb
sbb
int3
xor
insb
scas
inc
jae
cmpsl
pop
push
test
sbb
push
stos
cmc
iret
into
je
aam
xchg
popa
les
sub
add
test
pop
push
xorl
xchg
push
xchg
cmp
push
inc
xchg
pop
sub
add
mov
push
lds
sbb
push
repnz
add
icebp
sub
cmp
jle
in
out
mov
jns
mov
mov
call
lock
jae
fsubr
jecxz
out
jl
cmp
aaa
jo
and
data16
add
mov
mov
cmp
dec
enter
or
repz
sbb
mov
in
fucom
lret
popa
int
bound
push
jne
das
test
ret
mov
mov
mov
push
test
js
call
adc
imul
fwait
cld
inc
shrb
mul
ja
stos
fldcw
sbb
push
aad
loope
mov
ss
test
mov
jne
mov
xor
decl
icebp
pop
mov
in
push
adc
decb
lret
inc
icebp
mov
in
in
call
jbe
mov
sub
nop
in
sbb
mov
xchg
mov
fbstp
dec
dec
sbb
push
sub
testl
ja
xchg
mov
adc
mov
clc
pop
add
lods
dec
inc
push
mov
scas
dec
out
xor
mov
and
mov
sub
push
nop
sti
imul
adc
push
movsl
ja
call
and
imul
xchg
adc
push
pushf
scas
jns
ret
ds
sbb
int
dec
ljmp
or
out
cmpsb
inc
sub
add
lret
dec
cmp
pop
stos
pop
cmpsl
push
mov
sbb
xor
imul
fs
addr16
loopne
cld
mov
lods
adc
clc
pop
inc
jmp
scas
fcomip
mov
jae
jbe
push
or
bound
popf
fisttpll
or
lcall
and
sub
mov
test
sub
fadds
adc
jne
mov
jge
xchg
fucom
xor
jmp
out
repz
adc
push
out
test
sub
jne
xchg
mov
xchg
int
pop
shlb
mov
daa
dec
not
leave
sub
sti
out
sbb
dec
mov
inc
imul
call
ret
pop
sbb
cmp
fstpl
sub
sbbb
cmp
insb
les
jg
adc
or
outsl
sarb
pop
cs
pushf
loopne
or
filds
push
icebp
int3
xchg
leave
lea
jge
sub
ret
pop
and
shrl
pop
mov
int
push
or
das
adc
test
cmp
out
sbb
stos
or
pop
jecxz
ret
imul
adc
inc
pop
adc
xor
xor
jae
or
and
xchg
inc
repnz
aaa
xchg
sti
repz
push
lock
sar
mov
cmpsl
inc
xchg
popa
fwait
add
dec
pop
jno
je
add
int3
mov
and
mov
push
push
lods
xchg
sub
jl
add
and
pusha
mov
fcoms
rcll
out
ss
fwait
adc
movsb
mov
dec
les
ljmp
addl
adc
push
bound
jb
pop
jno
or
movsl
inc
sbb
push
dec
in
pop
pop
jne
mov
enter
int3
cmp
mov
or
outsl
loop
or
and
adc
adcb
sub
xor
sbbb
cmpsb
call
push
adc
jmp
das
scas
in
pop
add
or
dec
enter
fstpt
mov
rorb
sbbb
mov
test
cmp
andb
inc
gs
loopne
aaa
pop
js
daa
call
pop
cmp
out
inc
call
mov
fidivrs
adc
gs
icebp
cmc
jg
pop
imul
cmp
cltd
mov
jae
or
inc
mov
pop
adc
inc
mov
hlt
push
adc
push
into
pop
imul
mov
push
filds
push
int
je
jbe
adc
mov
test
mov
mov
and
push
fwait
popf
cwtl
shll
adc
jns
xchg
daa
xor
imull
xchg
out
ja
sub
cmp
mov
imul
dec
sub
xor
xchg
daa
in
sbb
pop
inc
es
adc
test
dec
cmpsb
pushf
push
and
pop
cli
jbe
outsb
fisubs
dec
mov
sub
rcll
loop
in
pop
xchg
mov
add
pop
cmpsb
repz
cs
mov
fmuls
push
sti
inc
dec
adc
lcall
pushf
jns
mov
mov
lods
mov
dec
test
pop
lea
je
jae
pop
cmpsb
icebp
add
pop
call
mov
data16
jnp
and
mov
xor
std
enter
dec
xchg
mov
mov
out
repz
fnstenv
lret
and
lcall
push
add
adc
jnp
dec
jns
sarl
cmp
sbbb
push
repz
stc
daa
movl
dec
and
jmp
andb
add
jl
iret
push
inc
adc
mov
jne
hlt
mov
inc
pusha
xchg
pop
stos
push
dec
jbe
in
aad
sbb
call
jb
fisubrl
cmp
adc
xor
clc
push
cmpsl
inc
inc
jp
shrb
pop
xchg
inc
pop
cmp
dec
adc
add
inc
cmp
dec
mov
jae
sub
aaa
mov
repz
jp
or
or
adc
hlt
dec
lods
xor
jns
inc
add
sub
fildll
jne
insl
cwtl
sbb
xchg
ljmp
pop
insl
jnp
sub
mov
adc
or
xchg
fbstp
push
xor
scas
or
xor
scas
rclb
mov
sti
loop
test
xchg
inc
fstps
cmp
pusha
mov
dec
adc
jmp
dec
push
in
push
xor
es
in
push
arpl
adcb
sti
cmpsb
xlat
inc
push
and
in
sub
lods
add
popa
jnp
insl
adc
fs
popa
int3
xchg
lods
mov
jl
test
mov
gs
ja
mov
and
inc
jecxz
dec
mov
pop
mov
pop
mov
test
mov
jmp
imul
data16
or
shll
dec
and
push
clc
add
push
add
das
add
sub
enter
insl
mov
call
int3
ret
test
fidivs
scas
mov
movsb
fidivl
xchg
and
push
gs
lds
icebp
imul
cs
lcall
dec
out
mov
mov
aad
mov
icebp
sbb
lods
mov
stos
jno
push
push
movb
lds
pusha
add
pushf
rolb
sbb
jns
jecxz
xor
jo
lret
lea
ja
fwait
mov
cmc
mov
popf
mov
dec
out
fcomi
cltd
push
add
addr16
lock
scas
jle
lcall
cmpsb
mov
notb
or
cmp
dec
xchg
hlt
sbb
clc
and
nop
sbbl
fsubrs
dec
and
xor
xchg
xor
imul
out
inc
or
xchg
in
flds
les
pop
daa
cmp
fcmovbe
or
push
sub
loopne
xchg
insl
xchg
xor
mov
pop
push
std
jnp
je
inc
repnz
loopne
cmpl
imul
rep
jl
and
ds
push
in
out
aaa
andl
mov
lret
mov
addr16
out
cld
inc
sti
ljmp
movsb
xor
inc
dec
xor
popf
sub
in
jno
mov
mov
lcall
mov
roll
jl
mov
and
jmp
cmpsl
pop
xchg
and
aad
sti
in
jb
ret
and
sbb
repnz
out
movsb
add
jl
ret
push
gs
mov
sbb
in
cmp
mov
mov
enter
fldt
aaa
xchg
outsl
and
pop
or
push
int
into
push
jl
push
cli
fistl
fs
leave
or
negb
call
add
cmp
fincstp
sub
cwtl
mov
fiadds
out
or
jne
test
xor
daa
pop
test
mov
lcall
mov
push
paddb
adc
adc
rcrl
ds
lea
cmpb
jo
mov
imul
aad
dec
push
xor
filds
mov
push
cwtl
aad
lret
or
xor
frstor
movb
clc
jg
mov
imul
dec
xchg
orl
fdivrs
push
mov
movsb
mov
rcr
out
lahf
out
mov
or
mov
dec
ss
scas
aam
dec
mov
cwtl
or
adc
xchg
pop
and
out
inc
add
aam
daa
aad
push
lcall
imul
sub
popa
add
jmp
sbb
std
xchg
test
lea
push
leave
sub
mov
and
adc
mov
test
insl
push
adc
fcom
fistps
fsts
mov
ss
loop
add
xor
sbb
xchg
sbb
scas
mov
or
sarl
imul
xchg
jns
in
push
repz
aad
dec
add
adc
xor
aad
enter
jecxz
js
xchg
sbb
insb
adc
out
add
nop
rcll
scas
xchg
jmp
push
aad
stos
pop
sub
sub
es
and
outsl
rorb
xor
cmp
mov
bound
ret
sbb
mov
inc
test
es
mov
push
in
xchg
roll
cmp
int
pop
repz
push
xor
add
leave
mov
scas
inc
pop
mov
subb
sti
mov
js
inc
mov
loop
mov
push
inc
ror
add
dec
dec
lcall
cmc
jecxz
idivl
sub
or
enter
adc
jge
xchg
sub
fisttpl
inc
dec
jne
mov
popf
adc
decb
test
xlat
lods
iret
loop
test
nop
lret
and
int3
insl
sbb
call
sub
imul
mov
inc
mov
mov
in
sub
pop
pop
mov
or
or
add
pop
or
push
aas
vrsqrtps
mov
fs
adc
loop
mov
add
int3
call
subl
aaa
jno
imul
jge
call
cmp
jae
mov
in
decl
pop
cmc
mov
pusha
mov
ds
pop
dec
mov
out
mov
sub
push
fdivrs
adc
jle
loopne,pn
bound
stos
aam
jle
fidivrl
push
cli
inc
clc
or
mov
add
sub
movsl
fldl
out
ja
sbb
cli
out
pop
xchg
lret
fld
es
in
imul
xor
jle
imul
dec
cwtl
loope
or
mov
orb
aam
loopne
add
test
fidivs
sub
addr16
adc
cmp
jl
fcmovb
shll
andl
addr16
rcr
sbb
sbb
shlb
loope
xchg
mov
mov
out
mov
ja
mov
insl
push
mov
pop
addb
out
push
pusha
or
jge,pn
and
outsl
add
sti
je
insb
movsl
mov
mov
pop
fisubrl
movsb
sarb
scas
mov
js
popf
mov
pop
out
inc
mov
adc
dec
ret
loope
jns
add
mov
pushf
cmp
lahf
dec
mov
sbb
xor
cli
dec
mov
pusha
and
aam
or
fcomps
xchg
scas
xchg
jge
jle
sbb
iret
push
mov
aaa
test
mov
in
jge
cs
sbb
dec
call
int
jmp
scas
out
mov
jbe
xor
cs
fbld
fsub
in
ljmp
sbb
push
gs
and
std
pop
jg
mov
push
inc
cltd
mov
mov
loope
fwait
sahf
jb
lahf
xor
xchg
pusha
mov
jnp
sbbl
adc
stos
push
and
rolb
mov
mov
jo
pop
pushf
fadds
mov
sbb
sahf
andb
ds
sub
jl
gs
dec
xlat
orb
in
test
push
call
push
pop
stos
enter
aad
loop
pop
lock
xor
popa
or
adc
jnp
sbb
lea
sub
inc
xor
mov
arpl
test
push
movsl
ja
jo
int
or
ds
aaa
fldt
xor
insl
sbb
scas
adc
aad
dec
pusha
xchg
nop
add
jbe
rorb
pop
lcall
cmp
fdivl
addl
xor
aas
repz
ror
cwtl
shll
popf
push
pushl
mull
inc
nop
dec
test
push
fwait
out
into
xor
jbe
add
fmull
into
pop
push
xchg
aaa
in
inc
aaa
mov
add
lea
es
and
push
mov
cmp
cli
and
movsb
inc
xor
es
test
push
push
test
repnz
sahf
inc
ret
lret
dec
or
fwait
pop
sub
mov
and
push
test
dec
pop
cmp
movsb
insl
fstp
fmull
shll
movsl
xchg
daa
lsl
mov
in
clc
imul
xchg
hlt
rcrb
lock
xchg
in
mov
dec
mov
sahf
std
add
pop
fistpll
pop
imulb
cmpsb
in
pop
cwtl
inc
arpl
mov
cs
rorb
lahf
xor
int
jno
ja
or
sbb
adc
push
push
cmpsb
jmp
mov
sub
add
sbb
or
lahf
sbb
sbb
mov
mov
push
pop
adc
rcr
insb
xchg
testl
push
mov
push
mov
out
fdivrl
mov
pop
lods
push
shr
ljmp
jle
outsb
mov
and
inc
ret
pusha
adc
leave
jo
jns
jne
jmp
jg
test
shlb
popf
bound
adc
js
cwtl
out
scas
fs
inc
sbbb
jo
enter
dec
sarl
cwtl
ljmp
test
clc
xchg
push
jmp
pusha
repnz
pop
into
das
loopne
sbb
sub
das
rol
push
daa
loopne
out
call
push
sub
popa
es
adc
movsl
lods
call
adc
dec
or
movsl
xchg
ret
lret
mov
mov
jno
inc
movsb
daa
jbe
dec
or
and
xchg
cmc
cmc
hlt
cli
test
pusha
pop
xchg
div
shrl
jl
pop
ja
dec
xchg
dec
fs
call
push
mov
mov
xor
push
fdivrs
xchg
adc
sub
cmp
incb
movsb
xor
fldl
mov
incl
dec
push
int3
sahf
xor
cmpps
pop
sub
and
pop
faddp
push
sbb
out
popa
cmc
test
cmp
pop
ret
mov
jbe
nop
mov
lret
iret
cld
repnz
push
out
mov
cmp
fisubrl
fdivrl
pcmpeqd
lahf
loopne
jge
dec
mov
aaa
ljmp
inc
lock
lret
loop
outsb
lods
sti
lods
add
rorl
adc
sub
scas
inc
jno
push
mov
hlt
cltd
scas
mov
dec
cmp
mov
and
cmpsl
mov
dec
mov
pop
in
adc
insl
imul
nop
insb
out
mov
mov
and
int
jb
sbb
nop
cmp
pop
in
insl
pusha
push
xchg
xor
ja
repz
push
mov
xchg
into
push
mov
lods
and
mov
mov
cmpsb
pushf
cltd
ss
pop
cltd
cltd
js
jp
adcl
sub
pusha
repnz
hlt
test
sti
jns
sub
xchg
jnp
mov
shrb
clc
mov
cmpsl
clc
push
cmp
push
lds
xchg
loopne
xor
dec
lock
subb
mov
or
dec
inc
jnp
xor
mov
xlat
out
adc
clc
adc
test
mov
loope
in
or
cld
or
mov
lea
mov
jne
in
jle
fprem1
inc
mov
mov
pop
xchg
inc
sti
pop
lret
stc
mov
mov
adc
add
mov
mov
xlat
sbb
test
rcl
add
rcr
xchg
call
xor
hlt
sbb
cmp
mov
push
or
js
push
sub
pop
lea
test
addb
popa
es
mov
add
addb
lds
je
roll
sub
shrl
push
rorl
push
movsb
in
jbe
mov
rcr
scas
scas
mov
pop
and
xor
xchg
jecxz
pop
inc
enter
insl
xlat
lahf
subl
jl
push
hlt
lods
xchg
or
sub
push
out
cmpsl
das
icebp
in
lahf
in
push
aas
cwtl
cmp
arpl
sub
sbb
pop
mov
mov
sub
add
mov
sahf
cmp
cmp
xorl
loop
je
inc
pop
cmp
inc
out
int3
cmovl
testl
aad
dec
or
xlat
wbinvd
push
mov
jg
cmp
pushf
or
int
mov
mov
fadds
imul
jns
adc
and
mov
mov
gs
scas
cmc
jl
and
out
outsl
test
into
test
add
mov
lret
orl
jbe
loopne
loope
fs
mov
sbb
or
loop
cmp
ljmp
xchg
jno
pop
pop
jle
fisubl
fsts
test
pop
pop
xor
pop
jg
dec
jns
movsb
dec
push
test
movsl
cmp
push
int3
adc
mov
sbb
ljmp
das
test
imul
test
sub
lahf
adcl
mov
in
icebp
aas
add
xor
xchg
arpl
stc
inc
cmp
testb
add
ret
pop
adc
sti
inc
add
test
dec
add
mov
mov
int
adc
filds
dec
jb
or
popf
in
lret
dec
cmpl
jno
push
fs
inc
push
sub
ficomps
cmp
add
adc
push
inc
imul
adc
repz
sbb
shl
daa
cwtl
fcom
dec
out
sti
mov
dec
sahf
aam
orl
stos
pop
test
push
jbe
in
pop
mov
inc
mov
dec
cmp
dec
inc
imul
bound
mov
xchg
aam
mov
xor
test
mov
jg
push
cli
inc
popf
aam
data16
jmp
jne
inc
out
sbb
cmp
sbb
mov
jecxz
ret
test
jb
popf
pop
std
dec
jp
dec
xor
repnz
dec
sub
mov
xor
test
fisttpll
mov
ret
ds
cmp
cltd
jp
sar
fmull
loope
lock
xchg
dec
rcll
leave
cltd
sub
xchg
mov
lock
jns
popf
data16
sbb
leave
arpl
sti
xchg
xlat
ljmp
das
dec
mov
addr16
cmp
lret
xor
neg
pushf
cmp
cmp
icebp
push
xchg
cwtl
xor
dec
std
add
sbbb
sbb
mov
lcall
mov
jl
inc
cli
or
lahf
in
lods
lret
sbb
testb
loope
or
bound
jecxz
dec
outsl
push
dec
fdivrs
add
in
inc
shrl
and
pop
and
xchg
ljmp
or
movsl
pop
jae
or
leave
in
in
dec
lret
and
xchg
mov
mov
rcrl
dec
js
aad
lods
inc
sub
adcb
mov
fld
sahf
addl
enter
pop
jns
stos
mov
movsl
cmp
push
div
mov
outsb
stc
adc
pop
movsl
push
outsl
push
dec
push
aas
xor
cmp
jl
sub
jb
pop
pop
push
push
pusha
add
jmp
cmpsl
xchg
dec
cmp
les
add
dec
faddp
out
push
dec
clc
jmp
dec
lahf
cld
pushf
icebp
in
fdivp
mov
push
stc
idiv
aaa
fs
pop
loop
test
loopne
push
icebp
test
push
popf
jae
fmul
and
inc
push
sub
mov
test
cld
sub
lea
ret
push
xchg
ss
push
pop
ljmp
in
xchg
lret
cld
and
cmp
es
imul
mov
sbb
es
add
into
pop
add
ljmp
mov
cmp
mov
push
ud0
dec
jp
outsb
sub
xchg
xchg
and
xchg
mov
stc
in
jns
movsl
mov
push
andb
out
or
icebp
sti
das
cmp
sub
inc
or
stc
ret
fwait
ss
and
and
mov
test
lock
or
icebp
test
cmc
pop
mov
mov
dec
dec
repnz
popa
xor
sub
pop
repnz
cltd
ret
xchg
and
pushf
leave
sub
test
lcall
inc
mov
dec
mov
dec
stos
dec
pop
stc
push
sbb
rorl
push
ret
push
push
repz
or
pop
sbb
rcll
sbb
mov
into
repnz
xor
push
push
imul
scas
push
rcll
xor
stos
push
sbb
pop
and
mov
adc
icebp
jb
jne
scas
cmp
cs
mov
js
push
fbld
in
ret
outsl
stos
loop
das
push
jne
cltd
mov
fdivrl
std
mov
stos
inc
dec
push
pusha
jecxz
pop
cmp
sub
inc
movb
push
jbe
lret
mov
scas
push
scas
xchg
sbb
mov
arpl
movsl
mov
xlat
sub
pop
insb
sub
lock
les
sahf
cli
mov
movsb
push
push
mov
ret
cli
xor
mov
jmp
stos
dec
ret
sbb
leave
fcompl
test
or
popf
adc
cmp
imul
fmuls
mov
lret
xor
fisttpll
insb
lcall
and
popa
stc
bound
cmpsb
jmp
mov
andb
pusha
xchg
or
ret
xor
jo
arpl
xchg
pop
bound
into
dec
daa
inc
jnp
insb
push
pop
add
and
pop
push
or
ds
je
mov
adc
xor
mov
lods
popf
gs
mov
stc
gs
in
out
popa
fimuls
iret
sub
push
xchg
popf
orl
inc
sbb
scas
gs
pop
arpl
das
adc
cmp
xchg
lahf
and
mov
pop
add
loop
xchg
rcrl
aam
add
mov
orb
push
add
push
sti
mov
repz
sub
cmp
sbb
daa
repnz
imul
adc
mov
push
mov
js
addl
loopw
inc
repz
icebp
into
sbb
sub
push
fiadds
aad
sbb
sbbb
jl
repnz
xchg
mov
pushl
gs
dec
aaa
test
sahf
fisttps
ds
shl
arpl
pop
xor
in
jle
sbb
push
cmpsl
rolb
mov
jnp
jns
sbb
stc
pop
and
or
cli
jno
push
nop
xchg
in
icebp
sub
mov
subl
cmp
ret
dec
lock
dec
mov
push
sbb
aaa
and
movsb
cmpl
ss
add
mov
push
ljmp
pop
pop
push
cmp
mov
sub
jmp
addl
in
movups
cmp
fidivrs
dec
mov
jge
mov
cmp
mov
xchg
leave
ds
jp
das
test
xchg
mov
xchg
mov
out
nop
les
pop
jae
in
sbb
inc
pop
ret
clc
adc
fiadds
dec
add
cmp
and
xchg
push
mov
subl
adc
xor
stos
cmp
dec
je
sub
push
dec
and
stc
shlb
jg
xchg
iret
call
jb
cmp
adc
sti
and
icebp
sarb
aam
mov
pop
aam
inc
adc
push
out
loope
sti
imul
lea
xor
push
jl
in
nop
insl
pop
jle
mov
movsb
fcoml
sbb
out
push
stc
inc
into
or
push
rcrb
or
inc
cmp
out
mov
insl
das
lock
test
and
dec
je
xchg
cmp
inc
jmp
mov
in
aam
pop
int
or
into
mov
sub
imul
in
sub
frstor
loope
pop
push
pop
push
push
dec
mov
jns
jne
or
pushf
stos
movsl
iret
xor
scas
call
cld
insb
shlb
insb
push
in
shll
aas
push
mov
nop
adc
and
dec
xchg
push
stos
int
sti
pop
daa
pop
cli
enter
fnstenv
pop
pushf
lods
dec
inc
xor
inc
adc
inc
lcall
stc
out
xor
jae
lret
mov
add
sbb
add
lea
pop
idivb
pop
mov
out
sbb
dec
and
jnp
notl
push
lret
insb
adc
adc
pop
xor
lcall
fimull
rcrl
js
rcrb
insl
jp
mov
mov
outsl
pop
dec
pop
pop
es
sbb
xchg
inc
jb
jb
rclb
jle
test
ffree
dec
pop
subl
mov
adc
je
rol
cmp
pop
push
inc
sub
cmp
pop
aas
pop
cmpsb
lds
pop
test
inc
outsb
inc
and
sub
aam
pop
es
jmp
add
out
xlat
cmp
mov
loop
cwtl
or
test
daa
jle
cmp
sbb
cmc
daa
mov
cltd
stos
sub
shll
pop
push
xchg
push
into
jno
sbb
xchg
cmpsb
icebp
jmp
fsubrp
pop
outsb
xchg
loopne
cmpsb
in
sub
add
xor
aas
popa
mov
fnstcw
xchg
cmp
loop
aad
mov
fsubs
dec
and
fistpll
dec
sub
jmp
dec
add
popa
mov
out
xchg
lret
push
jb
js
mov
pusha
or
cltd
inc
push
fnstcw
and
mov
ds
fnstsw
push
xor
add
stos
in
pop
dec
jge
lea
dec
jo
movsl
out
push
adcl
sbb
mov
push
aad
sbb
movl
mov
push
mov
enter
jecxz
aad
jno
push
out
push
or
test
sbbb
stos
lock
mov
arpl
sbb
or
aad
inc
frstor
mov
and
pop
cmp
xchg
cld
jne
dec
jmp
cmpsl
or
dec
jp
pop
popa
jne
nop
sarl
es
aam
aas
into
jmp
lcall
imul
mov
lahf
lock
cmpxchg
add
push
pop
nop
test
sbb
pop
mov
test
test
or
pop
xor
and
in
in
and
xchg
pop
cmp
mov
xchg
sub
jecxz
add
pop
cmpb
jecxz
je
push
out
test
xchg
cwtl
cmp
push
psubw
lret
lahf
jge
xchg
or
pop
hlt
ret
push
jb
sub
lds
and
fildl
jne
mov
out
and
push
mov
dec
xchg
popa
xor
mov
cmp
shlb
jo
jbe
sub
xor
int3
xchg
imul
das
jl
fldt
in
in
sub
movl
std
and
pop
ljmp
inc
sbb
leave
xlat
mov
stos
lret
imul
insl
scas
call
int
cmp
mov
cwtl
xchg
jns
xchg
push
dec
in
out
mov
push
push
pop
push
push
jb
dec
jbe,pn
aas
shrb
jno
pop
loopne
mov
roll
int3
movsb
jno
xor
pop
out
dec
pusha
sub
arpl
sub
add
pop
aam
cld
aaa
arpl
sbb
in
mov
xor
cmp
les
addr16
and
fistps
mulb
loope
clc
adc
lods
call
inc
push
lods
dec
out
xor
out
loop
out
and
mov
pop
xchg
stos
jle
mov
imul
xor
push
xchg
imul
push
xor
outsl
ljmp
popf
pop
sbb
cmp
pop
push
cmp
idivl
adc
das
or
gs
lret
mov
adc
and
mov
mov
aad
mov
push
lods
bound
push
pop
pop
imul
dec
out
jg
and
pushf
loope
or
inc
xor
push
icebp
fists
lret
ss
xor
popf
int3
and
in
lea
pop
pop
push
sbb
dec
sub
das
loopne
es
add
aad
xor
stc
inc
push
and
and
test
cmp
add
pop
inc
outsl
push
jg
dec
movsb
xchg
stos
adc
and
das
sbb
lock
je
sarb
das
ret
mov
or
jns
push
out
jae
shlb
lret
xor
imul
mov
xchg
fistps
nop
mov
add
decb
pop
xorb
cmp
add
pop
ret
dec
mov
int
xchg
mov
daa
and
out
jmp
or
mov
dec
adc
gs
andl
bound
std
in
lods
test
xchg
jb
and
sub
test
gs
int
in
jns
push
pushf
xor
popf
arpl
sub
es
insl
sbb
jle
mov
push
cmc
lods
pop
cmp
add
xor
dec
mov
mov
sub
push
xchg
sti
aad
dec
xchg
test
std
cmp
pop
pop
and
adc
outsb
sbb
int3
repz
push
xor
xchg
insb
or
enter
and
js
pop
xlat
loopne
outsl
cmp
cmp
sti
inc
and
sarl
aam
out
adc
mov
mov
sahf
sbb
and
lahf
out
mov
mov
mov
shr
add
call
dec
sbb
arpl
mov
sub
pop
cmpb
insl
cmc
xor
adc
jne
pop
sarb
push
add
jmp
rorw
scas
mov
arpl
jb
xor
dec
fisttps
pop
sti
cmp
pushf
pop
adc
cmp
imul
popa
mov
fnstsw
add
mov
stos
adc
in
sar
inc
in
push
sahf
in
mov
jmp
ds
sarl
xchg
stos
out
xor
std
mov
fwait
sbb
add
mov
into
adc
insb
dec
outsl
ss
loopne
pop
shr
xor
ds
popa
pop
cli
roll
out
scas
hlt
ja
inc
subb
inc
ja
cli
lea
shlb
ds
jp
mov
call
es
mov
mov
mov
jp
rcrl
clc
mov
or
xor
fs
xchg
push
rclb
xchg
aas
mov
sub
jbe
mov
add
cmp
inc
mov
xchg
sub
jp
shll
adcb
jne
inc
push
dec
rcll
pop
insb
sub
xchg
pusha
and
std
sub
sub
outsb
fcompl
in
mov
dec
or
repz
aam
adc
sub
out
cmp
and
dec
push
mov
fxch
es
sti
cmp
hlt
sahf
cmc
push
in
int3
lods
jp
shlb
rcr
leave
movsb
stos
lods
pop
inc
addr16
lret
sub
adc
testl
insb
push
mov
pop
xor
xchg
popa
es
sub
fmulp
out
outsb
adc
les
pop
loope
fmul
or
test
roll
subl
mov
xchg
mov
jge
frstor
add
xor
mov
cs
mov
sbb
pop
jne,pn
sub
sbb
mov
push
cmp
pop
rcll
or
ret
push
enter
call
or
pop
xor
pop
dec
add
lods
push
pop
dec
enter
jo
call
dec
test
fstpl
lods
aaa
imul
neg
inc
fcomps
jle
cmp
lahf
xchg
mov
mov
pop
out
mov
adc
cmp
add
ljmp
dec
pop
sbb
orb
jp
and
xor
insb
inc
aaa
inc
push
dec
add
cmc
dec
nop
xor
sbb
jns
mov
leave
ss
in
fnsave
or
fnsetpm(287
rolb
popa
adc
cmp
out
push
mov
lods
xchg
int3
ret
inc
pop
stos
addr16
scas
ds
push
cmp
sbb
adc
add
cs
insl
fcompl
enter
sahf
rcrl
mov
fsub
frstor
jecxz
mov
stc
cmp
out
xorl
in
and
sbb
xchg
outsb
sbb
jmp
rolb
xor
in
xchg
mov
in
lret
or
push
or
ds
cmp
mov
mov
scas
or
pop
rcrl
fimull
or
adc
fcmovne
xchg
loopne
inc
jne
cmp
notl
popf
insb
jp
inc
xchg
pop
xchg
fstpl
loopne
cmp
dec
scas
push
or
insl
js
xchg
sbb
jmp
insl
mov
sub
rcrl
fcoml
test
outsl
push
add
data16
ss
out
dec
xchg
jo
rcl
add
lock
adc
out
lds
paddusb
jne
bound
jns
xchg
pop
cs
rcrb
in
cmp
movsl
mov
cltd
xchg
cltd
lret
push
dec
lcall
mov
inc
movhps
dec
mov
fs
xchg
sahf
mov
cmpsb
decb
inc
mov
ja
ljmp
dec
jnp
cwtl
lods
setge
out
fsubrl
daa
cld
pop
lret
psrad
push
leave
fcmovnu
or
in
sarb
and
in
mov
inc
fsubrs
cli
mov
push
loop
out
push
pop
sbb
mov
pop
lea
mov
jge
mov
adc
sbb
jmp
ds
shrl
lret
movsb
cmp
dec
inc
arpl
jp
mov
mov
push
inc
add
inc
out
test
push
call
in
nop
push
inc
mov
inc
dec
sti
xchg
rol
inc
andl
sub
sub
movsb
xchg
pusha
sub
xchg
push
xchg
inc
imul
push
mov
movsl
cmp
push
mov
test
int
mov
loope
js
pop
jecxz
mov
cmpsl
xor
ficomps
shll
adcl
push
insl
outsb
les
shrd
push
rol
jb
inc
add
gs
sub
and
jecxz
adc
push
adc
jmp
inc
mov
inc
imul
adc
pop
ret
popa
repnz
fwait
jmp
inc
xor
lret
sbb
mov
xor
mov
js
cwtl
notl
jns
mov
imul
cli
inc
shll
stc
sbb
out
stos
jbe
pop
inc
pop
rclb
frstor
pushl
test
inc
sub
dec
xor
inc
repz
inc
mov
rcl
ds
outsb
cmp
jge
mov
mov
cmc
or
scas
fistps
clc
jnp
js
add
and
mov
pop
pop
xchg
lcall
jmp
xchg
xor
sub
pop
jmp
add
mov
dec
xor
mov
push
jecxz
cwtl
arpl
pop
dec
cs
cmc
pop
dec
mov
ljmp
push
adc
cmp
mov
ret
cmp
cmp
xor
xlat
add
shlb
sbb
cmpsb
add
xchg
pop
cltd
xchg
sbb
andl
aam
shlb
leave
sarl
loop
push
aad
icebp
jne
mov
pushf
outsl
ss
inc
or
push
dec
jecxz
mov
jmp
cmp
loope
xor
xchg
add
call
mov
dec
andb
lcall
out
movb
jb
adc
sti
push
mov
sub
mov
jmp
mov
arpl
lahf
sarl
push
repnz
add
inc
bound
mov
or
lret
arpl
out
mov
adc
cmp
iret
daa
aad
call
mov
enter
add
fwait
and
adc
out
lds
popf
es
out
cmc
int
inc
pandn
lock
and
shrb
and
cmp
mov
lret
xchg
xor
cmp
adc
jp
sub
scas
out
adc
xchg
iret
inc
xchg
bound
lret
cwtl
testb
mov
and
pop
dec
or
mov
ljmp
mov
cmp
push
out
mov
insb
push
scas
push
cmp
adc
rcrb
jg
mov
cmp
inc
jae
add
hlt
shrb
cmp
pop
xchg
int3
out
aas
cmp
into
popf
mov
in
dec
pop
pop
gs
ljmp
sar
jns
mov
mov
stos
les
testl
mov
adc
imul
ja
xchg
imul
ss
addb
mov
xor
mov
rcrl
aaa
mov
repnz
rcll
cld
jae
and
fnsetpm(287
enter
add
scas
rcll
and
sbb
fiadds
jmp
in
or
and
mov
leave
cld
daa
loope
pop
lock
cwtl
outsl
cmp
pop
mov
jecxz
out
rol
dec
mov
dec
shl
add
inc
icebp
jmp
aam
movsl
or
out
cwtl
fdivr
jno
xor
outsl
imul
mov
hlt
mov
pop
add
push
shll
scas
stc
sub
gs
fcmovu
add
xchg
pop
or
sbb
mov
icebp
jnp
in
cs
xchg
scas
insl
dec
push
and
pop
call
mov
ret
sub
fiadds
cwtl
loopne
push
fwait
push
aaa
xor
or
and
jne
mov
adc
bound
mull
inc
js
rcrb
sub
pop
ret
xor
inc
push
jecxz
inc
mov
rorb
pop
push
jp
sbb
inc
mov
fnstenv
pop
xchg
loopew
dec
lea
push
add
fstl
xlat
rol
les
hlt
xchg
cmp
sub
mov
je
add
dec
pop
xchg
inc
cmp
jmp
ret
insb
cld
push
fisubs
jo
sbb
fwait
mov
push
mov
add
cwtl
les
shrb
jbe
jae
jns
daa
cmp
sub
cmpl
dec
out
aas
shll
push
or
aad
adc
cmp
pop
push
jp
add
test
aad
xchg
das
mov
lds
mov
cli
push
bound
pushf
rcrl
push
stos
cmp
ffree
and
pop
inc
dec
sbb
sbb
dec
mov
and
cmpsl
fsubr
mov
dec
xor
inc
xchg
loop
dec
jge
in
ds
sti
jb
pop
call
inc
jecxz
outsl
or
jmp
mov
test
inc
pop
pop
in
mov
lods
lret
jns
scas
stos
mov
jge
lods
and
mov
shll
add
mov
repnz
cmp
das
pop
push
negb
xor
jo
sub
cmp
lcall
lret
stos
insl
pop
fdivl
fsin
int
dec
in
loopne
mov
ret
inc
jne
je
hlt
cmc
ss
pop
sahf
test
and
rcrb
sbb
jno
cmp
inc
jecxz
dec
or
stc
jno
xchg
lahf
es
loopne
out
push
add
in
add
cli
dec
push
lret
pop
test
pop
lods
or
mov
push
icebp
fsubl
xlat
add
addr16
and
stos
jl
je
mov
pop
js
xchg
imul
ret
mov
mov
aad
int
dec
push
filds
jecxz
mov
pop
push
jl
dec
ret
cmp
stc
loope
pop
fildll
inc
cmp
xchg
daa
cli
sub
dec
pop
std
jbe
pop
popf
lret
adc
gs
cmpsl
pop
cmpsb
cmp
rcrl
adc
xchg
imul
jecxz
adc
or
leave
or
lds
ds
neg
jb
leave
add
out
mov
repnz
mov
mov
cmpsl
inc
enter
jl
sub
dec
imul
and
and
nop
repnz
xor
and
andb
or
pusha
mov
fs
sbb
fildll
test
inc
pushf
jo
push
inc
jb
jb
ret
rolb
xchg
pop
scas
pop
jns
mov
shl
xor
lods
xor
inc
fmull
jne
dec
mov
mov
pop
mov
dec
sbbb
call
jo
cltd
jmp
call
lret
mov
insl
and
sbb
stos
call
or
dec
push
push
loope
xchg
adc
insl
mov
insl
rcrb
popa
sbb
fcomps
xchg
imul
cmpl
scas
xchg
mov
jno
push
loopne
mov
inc
pop
mov
adc
pop
mov
test
pop
push
in
pop
lret
push
js
push
les
outsb
int3
cmpsl
test
sub
testb
cmp
insb
adc
aas
push
int3
aam
stc
loope
jb
ror
pop
cmp
addr16
cmp
andl
adc
mov
insl
data16
jg
std
xchg
daa
repnz
mov
xor
mov
jge
and
iret
push
push
cld
and
mov
push
std
sbb
add
add
jb
xlat
jae
jno
fwait
inc
repnz
pop
pushf
testl
stos
iret
lds
imul
out
push
pop
push
stc
xchg
adc
inc
outsb
sub
mov
enter
mov
and
addr16
rcll
inc
xorb
std
dec
mov
xchg
or
loopne
push
sbb
sbb
sbbb
loopne
lret
cmp
xchg
mov
jbe
fwait
push
jb
or
inc
pop
into
sbb
push
jns
pop
call
fwait
cs
sahf
add
int
push
fimuls
jb
inc
mov
jo
sbb
pop
pusha
push
xchg
lahf
test
sar
dec
les
les
je
outsb
rcll
das
adc
sbb
mov
sub
pop
mov
out
cmpsl
push
sub
sbb
or
adc
lds
nop
pop
jp
sbb
jnp
inc
pop
lahf
lcall
loop
and
mov
mov
cmc
leave
pop
xchg
sub
pop
fdivr
mov
mov
jle
cs
xchg
mov
dec
adc
or
xchg
cltd
test
inc
jge
pushl
cs
sbb
push
add
test
add
nop
in
rcl
sbb
stos
mov
je
ljmp
test
or
aad
ret
les
stc
addr16
dec
mov
in
push
xchg
daa
push
outsl
aas
push
ror
and
jge
and
adc
xorb
jno
mov
sbb
adc
jle
add
mov
adc
push
cli
mov
pop
cmp
js
sub
sub
mov
pop
mov
dec
mov
outsb
add
push
mov
mov
inc
daa
loopne
jge
nop
jnp
push
test
test
pushf
out
in
je
mov
sub
mov
lahf
aaa
cltd
test
sub
sub
pop
fucomip
movsb
movsl
sbb
lods
jae
and
mov
scas
lret
dec
jnp
iret
mov
mov
sub
dec
cmp
movsb
mov
lods
loope
push
cmpsl
xlat
and
sbb
xchg
rcr
cmp
inc
sbb
cmc
inc
or
mov
sub
push
loope
test
out
rorb
xor
inc
push
xchg
out
push
push
xor
lahf
jge
lock
addb
jae
leave
adc
fmuls
es
adc
inc
cmp
mov
push
cli
cwtl
mov
pinsrw
fcompl
push
cs
test
rcrl
adc
cmp
mov
inc
nop
xchg
fisubs
test
adcl
lods
dec
xchg
pop
jmp
imul
or
push
in
ret
pop
mov
loopne
int3
sahf
loope
mov
or
test
into
push
inc
cmp
in
and
arpl
and
mov
or
es
ret
jns
or
add
hlt
dec
cwtl
jb
cmpsl
out
add
or
jnp
pusha
xor
fnstcw
outsl
bound
sbb
adc
in
jg
fbld
inc
or
pop
push
sub
lret
cmc
int
fwait
and
or
xchg
cmp
or
inc
push
and
push
add
xor
pop
jns
lds
mov
inc
mov
rcr
pop
pushf
jg
iret
loopne
das
int3
sbb
or
in
rcll
pop
stos
fistl
pop
sahf
xlat
xchg
xor
sub
dec
sub
lret
and
push
repz
xchg
addr16
cmp
fists
sub
jns
imul
outsb
sbb
push
test
inc
jecxz
movsl
pop
cltd
sub
aad
stos
repz
dec
add
and
call
repnz
xchg
mov
inc
dec
lea
pusha
inc
aad
sbb
sti
cmp
int3
mov
xchg
dec
push
jo
push
lcall
dec
or
aad
push
insl
scas
push
jmp
ljmp
mov
pop
mov
mov
aaa
mov
mov
xor
out
rorl
cmp
icebp
mov
jnp
leave
cltd
cli
out
jne
sub
jo
jo
adc
imul
xchg
cmc
dec
jo
call
pop
sbbb
mov
outsl
sub
cmp
out
int3
lea
inc
icebp
push
lret
sub
mov
pop
enter
movsb
xchg
mov
lret
shlb
in
mov
push
push
lahf
mov
mov
outsl
les
xor
out
ds
lods
arpl
cmp
hlt
inc
pop
pop
ds
stos
mov
ss
jae
addr16
and
fisubrs
js
negb
dec
adc
imul
sub
mov
sbb
bound
and
ss
mov
cmpsl
loope
es
ret
sti
rol
repz
scas
popa
mov
inc
cmp
call
push
jne
add
xor
outsl
mov
lods
ss
orb
dec
push
fsubrs
daa
outsl
loope
xchg
inc
int
cmp
enter
push
add
cmp
shlb
insb
add
xchg
ret
push
cmp
inc
lods
scas
adc
les
in
jle
or
rolb
inc
jge
jnp
loope
xlat
jg
inc
clc
xor
jp
fstl
jmp
lock
aad
pop
cld
fdivrs
jnp
mov
dec
or
jg
ja
or
in
inc
or
es
lea
icebp
sbb
cmpsb
fwait
pop
sbb
cld
xchg
pop
pop
sti
movsl
xchg
cmp
into
scas
inc
push
push
pop
xchg
jae
nop
mov
leave
xor
fchs
inc
cmc
pop
call
sar
xlat
cmp
imul
mov
jmp
cmpsl
scas
pop
jb
lret
in
ret
arpl
sub
mov
sbb
outsl
test
aad
cmp
sbb
cwtl
shrl
mov
xor
out
out
mov
fistl
jle
mov
and
test
insb
pop
ret
jbe
mov
xchg
insl
lret
loop
mov
pusha
cmp
xchg
dec
mov
push
sar
pop
movsb
sub
jp
mov
notb
loop
imul
addr16
mov
xor
test
aad
dec
popf
insb
enter
cwtl
idivl
test
or
xor
je
push
bound
sets
xor
lea
pop
jbe
push
pop
mov
es
fstpl
testl
or
push
mov
aam
pop
mov
adc
add
sbb
pop
paddusw
jae
in
mov
push
lret
rclb
scas
repz
lahf
mov
xor
mov
lcall
movntps
loop
push
fisubrl
in
push
leave
cs
das
push
mov
mov
sbbl
push
mov
mov
ret
push
sub
test
out
pushf
xlat
loopne
clc
mov
mov
xor
pop
pop
call
mov
jecxz
jecxz
mov
and
push
push
jl
and
ds
das
xor
jns
or
or
movsb
jg
mov
sbb
loop
cmpb
lds
popa
or
adc
sbb
test
or
mov
mull
in
aam
fs
fucompp
adc
or
lods
js
fsub
sub
imul
out
sub
call
mov
sub
adcl
popf
ss
push
push
xchg
cli
xor
mov
and
sbb
mov
ja
fbstp
cli
add
std
sbb
mov
aas
and
in
lods
test
fcoms
dec
cmp
dec
and
mov
lods
dec
jg
movsl
xchg
cmp
dec
xchg
push
pop
inc
or
or
lahf
push
mov
jle
sub
testl
out
xchg
pop
push
and
out
leave
mov
sti
xor
das
lock
divb
pxor
mov
stos
or
xchg
je
scas
mov
rolb
mov
xchg
cmpsl
jl
fisubrl
scas
gs
lcall
mov
inc
stos
mov
movsl
xchg
dec
mov
mov
pop
adc
loop
push
sub
je
es
stos
repnz
pop
sbb
push
cmp
insl
inc
int
int
lret
or
jmp
andl
inc
lret
push
xchg
xchg
fildl
cs
sbb
cltd
push
dec
mov
dec
push
pop
cli
lods
pop
fs
stc
pop
inc
test
repnz
in
jb
xchg
insl
sub
std
jbe
pop
popf
push
lock
inc
dec
lea
and
dec
leave
sbb
pop
adc
mov
call
addr16
mov
mov
pop
daa
xor
inc
and
xchg
inc
divl
or
rcll
xchg
push
jl
or
andl
mov
push
daa
loop
fidivrs
int3
xor
jecxz
out
in
pop
cltd
inc
xor
ret
push
push
lock
mov
outsb
sub
ja
ljmp
jb
ss
cmpsb
mov
repnz
lret
sub
imul
fldenv
rorb
xor
sti
mov
jno
cmp
sub
add
lock
out
and
push
cli
movb
push
push
outsb
insb
je
pop
stc
stc
mov
insb
pop
lret
ds
push
inc
dec
pop
dec
push
dec
cmp
arpl
mov
enter
jbe
imul
mov
es
jae
pushf
cmc
sahf
je
cmp
dec
lock
mov
cmp
xor
dec
ficomps
cwtl
cwtl
jnp
sti
xchg
cmpsl
out
es
lahf
fcomip
mov
mov
push
in
out
scas
fwait
or
jge
loope
xor
sbb
or
and
ss
test
jp
je
mov
jnp
and
pop
aam
mov
pop
shrb
roll
xchg
mov
sub
nop
jecxz
lods
or
push
lcall
cmpsl
sub
adc
imul
inc
lret
scas
addr16
imul
mov
lods
lds
mov
std
insb
xor
movsb
lds
aad
adc
flds
or
sbbb
icebp
add
mov
push
pushl
pop
imul
add
push
mov
adc
adc
bound
aas
and
pusha
aad
push
cmpsl
out
pop
add
cld
rol
pop
daa
add
adc
test
and
xchg
cmp
add
jb
and
out
cli
stc
pop
push
std
dec
pop
xchg
rorb
enter
test
jb
roll
loopne
mov
loop
lahf
in
mov
jbe
xchg
dec
or
pusha
mulb
pusha
lahf
test
neg
hlt
xchg
xlat
jle
lds
mov
das
sarl
dec
sbb
dec
lock
out
fs
adc
mov
inc
scas
js
mov
stc
cmp
rcll
xor
jno
pop
outsb
jl
mov
das
dec
jo
outsb
ss
mov
mov
js
lea
jnp
push
out
fucomi
int
cmpsl
inc
mov
imul
popf
mov
sub
jo
push
xor
dec
sti
mov
adc
fsubrl
sub
xorl
sub
arpl
cmpsb
outsl
test
cmpsb
or
subb
addl
out
jle
adc
xchg
aas
and
aad
cmpsb
mov
or
jle
ret
xlat
enter
addb
pop
xchg
pop
inc
popa
adc
ljmp
stc
test
std
gs
mov
loope
cld
jno
cmp
lcall
stos
jmp
pop
mov
or
stc
nop
mov
dec
push
lods
jge
rolb
loopne
icebp
sbb
mov
xor
dec
notl
mov
bnd
fnstenv
je
adc
ficoml
in
or
ror
jmp
pop
xchg
clc
fisubrl
mov
int3
add
std
push
aaa
and
rcrl
xchg
lret
add
addb
ret
sbbl
scas
xor
imul
outsb
lahf
sbb
movsb
and
pop
jno
pop
shl
inc
cltd
test
mov
test
pop
jo
dec
xchg
fwait
scas
push
adc
sbb
jne
mov
das
jne
leave
xchg
inc
jns
jl
sbb
insb
test
cltd
mov
jne
nop
mov
push
inc
add
xorl
subl
xchg
imul
mov
sub
cs
daa
adc
imul
rolb
add
movsb
lcall
and
inc
cwtl
aaa
jle
dec
push
aaa
mov
cld
xchg
test
dec
mov
jl
add
outsl
leave
rcl
jmp
outsb
push
push
aas
fisttps
cmc
mov
push
mov
int3
sbb
mov
sti
xor
test
jge
mov
push
nop
lret
xchg
fwait
add
stc
mov
cld
bound
jbe
adc
pusha
or
icebp
addr16
or
adc
dec
add
sub
je
push
cmpsb
mov
sbb
or
into
mov
mov
pushf
jmp
inc
inc
lret
xchg
cmp
xor
mov
push
xlat
sub
fstps
inc
pushl
dec
xchg
int3
ficoml
bound
leave
mov
aas
test
fmull
xor
or
inc
cs
add
cmpb
lret
push
flds
lock
lcall
push
push
dec
mov
inc
lds
outsb
push
jl
mov
daa
mov
leave
shll
pop
je
daa
mov
pop
fisubs
imul
in
testb
outsb
mov
decb
push
scas
or
add
andb
fsts
mov
stc
mov
push
and
cltd
cltd
mov
je
lret
sti
rorb
or
faddp
pop
cmp
mov
fcoml
cmpsb
push
xchg
mov
and
pop
cli
das
sarb
xor
ret
push
adc
fsubl
dec
fdecstp
mov
xchg
sub
inc
test
fiadds
sub
sub
ret
ss
adc
and
mov
popl
jne
sub
push
in
insb
and
lahf
ficompl
xchg
xchg
xchg
aad
insb
jne
push
ja
pop
mov
mov
dec
add
ja
inc
faddp
xchg
inc
sub
lock
dec
ja
stc
cmp
jg
pop
imul
fdiv
mov
adc
mov
iret
pop
mov
push
mov
pusha
xchg
add
and
loopne
in
loope
sub
shll
cmp
jo
fmulp
data16
xor
pop
dec
in
arpl
mov
inc
es
fwait
and
dec
pop
inc
jnp
push
jb
mov
push
pop
inc
sub
dec
jle
fdivs
or
cwtl
sbb
mov
ret
mov
or
pop
sbb
fs
jmp
pop
sbb
je
pop
sub
sub
sbb
lcall
pop
push
lods
cmp
addr16
aaa
flds
fcomps
int3
sbb
push
rcrl
mov
sbb
ss
push
out
mov
mov
ja
xchg
push
mov
ljmp
mov
xchg
cltd
test
xchg
call
js
xor
or
or
lret
into
cli
jnp
insl
mov
inc
out
gs
arpl
adc
xchg
pop
iret
mov
jae
dec
push
imul
sbb
popa
or
or
pop
stc
inc
mov
lds
pop
inc
inc
mov
inc
sub
call
ss
adc
hlt
inc
mov
call
lret
lods
je
je
add
rcr
ret
and
mov
mov
fidivrs
adc
imul
dec
loope
loopne
and
inc
cld
cld
sub
daa
mov
sbb
mov
xchg
scas
ja
push
insl
push
sub
movsb
sub
out
xchg
cmp
mov
imul
shrl
lods
pusha
mov
jns
fildl
loop
ficompl
lahf
in
dec
out
add
inc
mov
dec
pop
lods
push
xchg
ret
fidivrl
daa
or
cmp
lds
pop
cmp
and
mov
data16
stc
incl
lret
cmp
jle
imul
push
mov
dec
pushf
daa
shrd
dec
jge
ds
mov
sbb
jge
inc
imulb
mov
push
out
bound
mov
push
adc
jne
mov
andb
lret
mov
lcall
push
rol
lret
mov
icebp
fcmovu
nop
sub
scas
test
les
loopne
int
test
pushf
out
mov
das
mov
andl
jl
cmp
scas
push
mov
inc
mov
push
adc
xchg
push
fidivl
mov
push
mov
inc
pop
push
pop
pushf
sub
dec
push
jle
jne
mov
pop
in
fldenv
add
ret
aad
ds
adc
out
std
je
xlat
push
gs
sub
dec
and
hlt
jbe
roll
add
inc
lock
loop
in
cli
or
pop
pop
ret
lahf
enter
push
add
mov
pop
call
pop
push
jp
mov
cli
xchg
inc
nop
test
mov
push
flds
mov
add
loope
mov
jecxz
jmp
pop
xchg
sub
cmp
out
add
sub
clc
lret
pop
push
daa
inc
push
xchg
out
std
loopne
mov
and
xchg
sahf
jmp
sub
ss
test
repnz
mov
or
repz
sub
outsb
aaa
mov
xchg
outsb
ja
imul
movsb
bound
mov
or
fdivp
xor
and
xor
push
xchg
or
ficomps
xchg
fisttpl
push
faddl
add
loope
lock
adc
mov
leave
pop
aad
push
bswap
fcomip
negb
xchg
lret
std
icebp
addr16
xchg
mov
stc
xchg
jge
sbb
push
sbb
or
push
cmp
lds
push
les
lods
add
lock
std
in
bound
adc
push
push
mov
mov
adc
cmp
jl
adc
imul
adc
out
ljmp
scas
sub
in
cmc
stos
pop
mov
sub
push
xchg
sub
sub
push
idivb
icebp
jp
loop
stos
rolb
jb
fcmove
jmp
mov
lret
dec
insl
lods
sub
stos
int
and
ror
loopne
pop
testb
repnz
pop
dec
cmp
sub
adc
cmc
faddl
xor
inc
push
or
shll
lret
xor
rep
sub
lock
add
inc
adc
in
dec
xchg
push
adcl
movsb
daa
xchg
add
jnp
mov
test
test
and
fstl
subb
mov
jge
outsl
and
pop
or
cmpsl
xchg
aas
daa
sbb
fmuls
jno
jecxz
push
aas
inc
fistl
cmpsb
jl
and
les
mov
and
inc
push
lds
xchg
jnp
push
shll
into
xor
into
xor
push
cmp
clc
out
sub
pop
xchg
xchg
and
or
ret
add
cli
pop
xchg
imul
rorl
and
mov
lock
xor
bound
xchg
lea
push
outsl
jge
pop
lret
add
mov
or
les
xchg
clc
pop
sbb
adc
push
lahf
cmc
flds
nop
stos
add
dec
sbb
push
pushf
popf
inc
mov
jne
lds
imul
jae
fidivs
jg
inc
rcr
je
aam
test
xchg
lods
push
sbb
inc
decl
mov
lock
ljmp
jmp
lahf
jb
xchg
scas
sub
mov
add
inc
push
inc
mov
popa
jbe
mov
lock
stc
js
or
mov
mov
pop
xchg
inc
xchg
out
cwtl
sub
in
fidivrs
popf
mov
lret
scas
or
pop
cmp
or
add
and
sub
fcom
enter
test
and
push
int
mov
scas
mov
xlat
dec
mov
pop
jmp
call
sbb
leave
outsl
cli
xor
movsb
xor
pop
mov
aaa
arpl
movsl
in
mov
jnp
pop
ljmp
outsl
inc
rcl
sbb
add
jmp
mov
adc
cli
sub
push
idivb
inc
movsb
sbb
add
mov
pop
bnd
loope
mov
jg
jb
add
mov
dec
clc
scas
mov
out
out
push
addr16
gs
and
mov
iret
sbbb
push
int3
push
in
lods
out
data16
cmp
mov
insl
jge
xchg
call
xchg
addr16
mov
adc
pushf
dec
sub
and
mov
aaa
out
imul
out
cmpsb
inc
jge
ss
mov
pushf
adc
fwait
and
in
scas
popf
xchg
pop
mov
pop
dec
shll
popa
insl
xchg
repnz
lock
test
mov
dec
pop
outsb
jb
divb
pop
and
push
jae
push
pop
dec
mov
sub
xor
cmpsl
mov
push
iret
gs
gs
outsl
pop
mov
sbb
push
xchg
mov
mov
push
addr16
pop
stos
sub
mov
adc
movsl
or
or
das
dec
testb
ljmp
sbb
imul
and
in
adc
sub
jbe,pt
mov
dec
jl
insl
inc
and
sub
cmp
adc
es
sahf
or
pop
sub
xchg
push
xor
test
hlt
dec
xchg
out
cmp
pop
or
pop
std
cmp
xchg
dec
rcr
adc
sub
jnp
add
push
add
jb
inc
mov
cld
pop
cmp
cmp
rcrl
dec
enter
cmp
lods
xchg
shrl
adc
dec
xlat
inc
hlt
fnstenv
fldt
adc
xchg
adc
mov
je
iret
loope
out
shrb
jnp
dec
daa
rol
sbb
mov
push
lea
sahf
pushf
cmp
call
test
xchg
pop
sub
into
mov
mov
cmpsl
xchg
mov
jge
arpl
mov
cmp
mov
sbb
cmpsl
lret
xchg
and
loope
or
js
mov
or
add
mov
ret
mov
pop
xchg
dec
fstpt
aad
icebp
imul
cmpsl
or
mov
sub
mov
push
sub
xor
cwtl
or
sbb
xor
scas
mov
mov
mov
loopne
or
xlat
cli
mov
enter
mov
xor
pop
cmpsb
push
sub
icebp
icebp
push
in
mov
xor
ret
xor
sbb
xchg
add
adc
addb
dec
cs
stos
mov
jl
mov
mov
pop
sbb
push
ja
xchg
cltd
icebp
add
pop
cmp
pop
adcb
or
sbb
outsl
out
fisubrs
cmp
iret
ja
repnz
sub
hlt
cltd
xorl
jno
push
push
xor
fisubrl
test
hlt
xor
cmp
popf
push
sbb
xor
aaa
xchg
cld
nop
jo
or
push
push
leave
adc
loop
and
ret
pop
add
cmp
adc
xchg
lods
xchg
ljmp
xchg
lock
sbb
orb
gs
mul
js
mov
and
ret
inc
cmp
movsl
inc
sub
pushf
push
jge
sahf
push
push
testl
dec
in
cmp
adc
dec
stos
cwtl
or
pop
in
fimull
out
cmpsl
lods
loope
sbb
jge
mov
cmpsb
cmpsb
and
lahf
out
xor
nop
stos
rcrl
in
faddl
pop
xor
mov
dec
xchg
int
mov
sbb
int
pop
push
pop
jecxz
mov
out
xor
movsb
bound
lret
notb
addl
call
xchg
incb
jae
xchg
add
fs
ror
int
mov
lcall
add
xor
and
sub
mov
mov
cltd
sti
mov
jmp
mov
xchg
mov
xchg
sub
mov
mov
fwait
and
xchg
repz
and
rcrb
ret
mov
pop
push
mov
and
repnz
inc
lods
pop
cmpsl
jmp
or
pop
movsb
repnz
test
out
dec
xor
mov
in
loopne
adc
sti
aam
mov
pop
shlb
iret
mov
jmp
dec
mov
lcall
adc
in
mov
adc
pop
mov
hlt
push
stos
bound
jno
jl
adc
fistl
mov
add
cwtl
or
xlat
mov
mov
pop
sbb
push
popa
shrb
pop
into
pop
mov
stc
cmpsl
push
sbb
out
add
scas
pop
push
dec
popl
mov
inc
stos
ja
push
xchg
popa
jecxz
rcrb
fs
mov
mull
and
in
clc
xor
mov
sbb
loop
pop
sub
jle
mov
test
add
into
inc
icebp
jb
sub
or
add
lret
add
pop
lods
add
outsb
gs
jmp
pop
jge
bound
loop
inc
pop
test
jecxz
iret
neg
sbb
ret
sbb
dec
lods
int
aas
dec
pushl
adc
add
cmp
mov
lahf
test
lock
mov
outsl
push
cli
add
inc
movsb
insl
cwtl
std
scas
stos
test
xchg
cmp
pusha
cmpsb
and
and
aas
iret
sub
scas
mov
fwait
sub
cs
lods
mov
js
sbbb
or
sbb
aad
xorl
jecxz
ret
mov
lcall
xchg
enter
add
mov
pop
dec
in
sub
push
mov
push
or
mov
dec
jecxz
movsb
mov
pop
inc
mov
cmpsb
mov
test
add
filds
cwtl
mov
dec
push
imul
ljmp
std
jo
aad
out
add
mov
mov
rcrl
fcoms
mov
repnz
sub
and
inc
repz
shrb
push
icebp
jmp
cmp
xchg
sub
mov
mov
jns
lock
xchg
inc
xchg
das
or
aad
in
lret
outsl
or
test
stos
inc
jp
mov
sbb
dec
dec
jmp
insb
jp
xchg
adc
adcb
daa
and
push
or
pop
out
aad
andl
aad
cltd
pop
cmp
add
xor
jne
addb
push
rorl
fidivl
cmp
in
or
and
mulb
mov
sub
lahf
inc
mov
out
fdivrs
push
div
mov
cmc
add
ret
rorb
push
adc
xor
mov
insb
sahf
push
push
push
jecxz
dec
mov
imul
fwait
adc
push
test
test
test
inc
loope
and
fidivrl
test
push
ja
jge
movb
lock
push
adc
imul
cmpsl
and
or
daa
inc
dec
xchg
loope
aam
jmp
scas
mov
fidivl
xchg
lret
shll
test
aaa
ret
shll
sahf
jg
hlt
lcall
imul
or
jbe
push
push
xchg
add
add
push
lcall
popf
leave
gs
cwtl
adc
push
push
and
movsb
jae
sbb
add
mov
xchg
imul
sub
imul
inc
cld
sbb
pushf
inc
xor
cmpsb
xchg
paddsw
rolb
lahf
imul
inc
pop
or
sbb
aas
loope
icebp
adcl
loop
mov
push
mov
sub
clc
inc
push
outsb
pushf
mov
data16
mov
in
mov
push
jae
xor
insl
ja
outsl
aaa
xor
jbe
xor
in
lea
lret
data16
jo
cli
push
xor
jg
mov
and
lcall
xor
test
mov
subl
push
movsb
or
jne
ficoms
shlb
xchg
mov
mov
sub
adc
in
clc
push
lods
imul
mov
push
sbb
or
in
sub
cs
mov
xor
sti
push
in
bound
jg
ja
ja
ja
cmp
insl
dec
test
aam
xor
add
lahf
fwait
mov
push
les
das
mov
pop
xor
and
shlb
jbe
sbb
cmpsl
and
and
xchg
push
push
and
fdivl
ror
lahf
bound
sbb
adc
popa
fwait
push
pusha
repnz
imul
pusha
pop
and
add
sbb
xchg
loopne
mov
sub
mov
cwtl
xchg
ja
xor
sbb
add
fisubrl
xchg
pop
in
iret
test
push
and
loope
mov
adc
leave
or
mov
pop
fstl
shll
int
push
imul
jbe
imul
mov
cld
pop
jne
adcb
jge
mulb
fdivrs
push
jno
pop
insb
aas
push
lods
pusha
or
pop
icebp
mov
xchg
xchg
lea
lods
dec
stc
stos
stos
xor
icebp
push
outsl
cmp
aas
add
loop
movsb
pop
sub
push
xchg
ljmp
ss
cmpsb
pop
sub
mov
loopne
jbe
arpl
outsl
movsb
negb
scas
xchg
adc
lock
mov
cmc
hlt
in
std
inc
add
add
imul
loope
addb
test
pop
xor
stc
fnstenv
xchg
xchg
jbe
hlt
insl
mov
cmp
das
adc
rclb
fwait
mov
loope
push
dec
mov
ret
mov
mov
js
xchg
in
lods
bound
repz
cmp
test
or
rclb
xor
jle
daa
xchg
inc
out
push
dec
bound
jg
mov
push
into
clc
push
into
mov
xchg
xchg
sbb
clc
mov
add
gs
push
and
and
out
into
cmp
or
out
jae
int3
sub
in
lock
ret
call
out
mov
imul
push
das
cmp
xor
mulb
push
jmp
xchg
imul
out
ss
movsl
lret
mov
mov
mov
test
and
movsl
jnp
mov
mov
xlat
dec
lahf
stos
addr16
pop
sub
cld
in
cli
clc
pop
pop
inc
imul
xchg
shl
lcall
ret
cmpsl
repz
stos
insb
cmp
data16
push
sub
lock
gs
lahf
jp
dec
dec
fcmovnb
xchg
out
lea
jg
test
rorb
jmp
in
jnp
lods
mov
cltd
jb
leave
fiadds
test
add
xorl
leave
push
dec
xor
dec
cmpsb
add
fs
pop
fwait
cs
mov
jo
mov
js
outsl
arpl
ljmp
mov
add
loop
jne
mov
jge
sahf
in
movsl
negl
push
adc
cmp
inc
and
dec
in
fwait
arpl
mov
pop
mov
rep
xchg
subb
out
push
fbstp
test
jnp
cmp
adc
ror
add
stc
clc
lret
sub
push
sbb
sahf
lods
sbb
addr16
xchg
or
lret
dec
sub
jno
mov
test
mov
int
xor
in
stos
outsb
jae
add
sub
mov
ljmp
push
mov
or
push
push
and
das
rorb
in
es
add
cwtl
inc
frstor
in
mov
push
sbb
jle
push
sbb
std
push
dec
pop
sub
lcall
xchg
loop
sbb
pusha
test
cmp
jbe
mov
sbb
shrl
push
cmp
sub
inc
sbb
aaa
lds
inc
cltd
mov
sahf
sub
aas
jbe
xchg
clc
nop
sub
insb
cmp
jecxz
mov
mov
loopne
sbb
adc
cmp
pusha
mov
cmp
bound
ret
js
popf
push
sbb
ficomps
xor
dec
out
iret
cmpsl
and
cmp
xor
mov
push
cltd
std
or
push
test
popa
stos
adc
shlb
mov
in
testb
pop
std
scas
std
gs
push
jb
ja
notb
aas
dec
cwtl
sub
lock
scas
mov
call
xchg
lock
test
stc
xchg
mov
pop
fisttps
ds
jno
xchg
dec
fistl
cmp
dec
jp
lea
hlt
shl
dec
out
loopne
jbe
sub
add
adc
shl
pusha
call
out
push
cmc
cmp
ja
iret
sub
inc
adc
enter
mov
pop
loop
enter
scas
lods
dec
mov
xchg
cltd
inc
or
mov
mov
insb
cli
repnz
push
adc
jo
mov
fnsave
aad
mov
dec
sub
lcall
andb
dec
les
test
mov
push
imul
leave
movsl
lds
popa
push
xor
daa
push
std
sbb
loope
ret
jo
aaa
inc
xchg
sbb
loope
sti
mov
std
gs
or
shl
mov
rclb
shlb
or
icebp
xlat
rorl
ret
jno
mov
insb
or
mov
sarb
pop
ficoms
dec
arpl
pop
ficomps
sub
pushf
test
sub
push
in
inc
jno
adc
jbe
or
scas
pusha
lahf
jne
divb
cld
lock
iret
sbb
inc
pop
mov
and
shlb
mov
in
pop
mov
iret
sub
insb
adc
rolb
cli
cs
std
jge
sbb
pop
jg
xlat
or
and
lea
mov
xchg
outsb
fsubrp
xchg
stc
icebp
imul
inc
shlb
lea
push
cmc
pop
int
fucomip
xchg
scas
cmp
inc
mov
jg
jne
mov
or
or
jle
inc
push
shrl
push
es
stc
xchg
js
lods
iret
test
xchg
aaa
fs
cmp
ss
stos
loop
mov
call
ret
jb
test
dec
mov
mov
test
lcall
ficompl
stos
ja
in
xor
ficoml
call
lret
xchg
aaa
fadd
sbb
or
rcr
ret
push
test
orb
movsl
or
adc
sub
mov
dec
outsl
xor
dec
xchg
lret
dec
jmp
sahf
leave
mov
push
cwtl
inc
xchg
insb
mov
fisttpll
cmp
pop
push
addr16
jnp
push
or
mov
pushf
aad
shll
mov
push
cmp
into
lock
sbb
hlt
out
arpl
int3
imull
ss
mov
test
mov
push
xchg
and
jg
sub
push
in
xchg
repnz
loopne
cmpsb
orl
ds
and
and
lret
cltd
movsl
jecxz
jo
mov
jns
sar
in
enter
push
jg
inc
inc
loope
into
addr16
add
ret
jge
lock
out
pop
int
push
fdivl
xchg
mov
scas
inc
mov
push
aad
mov
cmp
push
dec
in
xchg
or
loope
ret
or
lock
pop
mov
adc
mov
dec
bound
lahf
pop
or
sar
mov
es
or
dec
xadd
pop
out
movl
rcll
adc
cltd
decb
inc
ss
mov
jl
pop
inc
add
rcll
and
ret
std
ret
sub
pop
jecxz
insl
popa
scas
into
sub
xor
add
and
fwait
cld
sbb
repnz
sbb
bnd
add
fidivrs
mov
mov
mov
sahf
sub
dec
ficoms
and
cld
push
xchg
inc
test
loope
mov
xlat
loopne
mov
jg
dec
mov
add
imul
mov
pop
cmpsl
adc
add
cmp
popf
into
shrl
cmpsb
sbb
loop
fs
movsl
and
add
pop
xor
dec
dec
jbe
dec
cmp
inc
push
orl
xor
popa
testb
stos
pop
lret
xor
mov
jle
mov
sbb
dec
push
dec
push
sar
dec
cmpsb
ret
jmp
out
mov
lods
sbb
xchg
lahf
add
dec
xchg
sti
xchg
push
aad
pop
rcll
aad
sbb
stos
popf
test
fwait
or
xor
or
nop
jl
int3
int
jg
lods
adc
cmp
sbb
lea
inc
shll
ds
iret
jb
xchg
nop
shll
xchg
sub
in
cmpsl
pop
lods
cmp
cmpsl
nop
scas
cmp
pop
mov
inc
leave
sub
xchg
in
jno
or
scas
or
xchg
and
stos
jno
inc
lahf
outsl
rcr
cld
int3
push
dec
clc
xor
cli
ss
pop
dec
movsl
xor
out
test
mov
negl
mov
jp
divl
sbb
lahf
les
dec
xor
pop
cld
lahf
sbb
pusha
pushf
adc
mov
mov
insb
aas
jecxz
cltd
add
pop
xchg
out
gs
enter
mov
push
pop
repz
cli
orl
or
mov
movsl
xchg
jmp
cmpsl
fs
mov
jg
adc
add
ds
pop
pop
out
or
jmp
in
dec
cltd
rol
into
fs
jno
or
adc
pop
xchg
stc
push
jnp
dec
ljmp
into
aas
add
pop
jp
jno
mov
cmpl
pop
or
sti
sub
push
or
mov
lcall
fidivrl
push
cmpsb
fs
cmp
sub
and
dec
or
and
jno
mov
repnz
dec
jecxz
aad
cmp
push
jbe
add
xorl
loope
xor
lcall
xorb
pop
mov
adc
rcll
mov
data16
jne
mov
mov
cmc
mov
push
sbb
dec
adc
push
stc
mov
mov
mov
jmp
jl
imul
cmc
rol
ja
nop
jbe
call
mov
xor
cmp
add
bound
cltd
or
sbb
stos
sbb
inc
rcr
clc
sbb
test
xor
cmp
in
mov
lock
add
xor
mov
mov
push
xor
std
js
mov
notl
jle
ret
push
sub
mov
insb
ror
xor
mov
in
aas
xchg
popf
sbb
lahf
push
aad
imul
insl
add
adc
push
pop
cmp
mov
stos
movsb
adc
sbb
sbb
sub
mov
pop
push
jns
je
lea
ret
aad
test
lahf
fwait
outsl
scas
ret
mov
sub
test
lret
out
jmp
jo
shrl
shl
cmp
mov
xchg
xchg
fildll
inc
cmp
lahf
icebp
cld
roll
in
mov
xor
ds
dec
repnz
mov
push
push
jge
cs
jae
lret
pop
repnz
mov
sarb
mov
inc
dec
fsubl
sbb
das
cld
bound
inc
nop
xchg
roll
dec
test
dec
mov
pop
mov
push
js
mov
mov
mov
mov
scas
js
std
inc
cwtl
mov
es
shlb
shrb
cld
call
cmp
nop
pop
add
fmuls
mov
mov
and
xchg
push
inc
push
movsb
mov
xchg
jbe
or
pop
icebp
sbb
adc
in
les
movsb
mov
lods
or
out
test
cmc
imul
daa
mov
jns
mov
stos
arpl
dec
leave
sub
mov
add
incl
and
mov
sbb
sbb
sub
pop
sub
pop
lret
cltd
sbb
xor
outsl
popa
add
mov
inc
xchg
movsb
popa
out
or
ds
and
inc
jl
fwait
xor
inc
rol
pop
inc
inc
dec
icebp
xchg
sub
push
outsl
mov
inc
xor
notb
sub
fsubs
mov
sub
cli
jne
mov
add
jae
mov
outsb
add
adc
xchg
xchg
outsl
test
xor
lahf
ss
sbb
scas
sar
loope
xchg
fistpl
adc
jg
into
sbb
sub
add
mov
adc
add
in
mov
xchg
lock
sbb
pop
jnp
push
repz
push
lods
pop
lret
inc
ja
in
in
add
arpl
sbb
mov
pusha
stc
mov
cmp
jecxz
jno
sbb
sub
jnp
adcb
lods
mov
pop
sbb
mov
lret
ret
pusha
stos
das
fdivr
sbb
roll
jnp
mov
cmpsl
mov
or
clc
mov
jp
pop
push
lods
push
or
leave
in
pop
stc
fldt
xor
test
in
outsb
popa
sub
neg
sbb
aaa
cmp
dec
adc
in
test
mov
adc
sbb
jp
xchg
stc
mov
aas
rorb
pop
fldenv
scas
sbb
inc
outsb
insb
imul
mov
dec
pop
mov
adcb
or
shr
push
stos
xchg
adc
push
ds
lcall
in
leave
mov
mov
cld
xchg
into
xor
aaa
test
adc
shlb
adc
cmp
test
sub
push
das
arpl
test
or
fwait
pop
push
cmpsb
stos
mov
adc
add
in
in
out
mov
cld
dec
and
inc
dec
and
shld
fnstsw
or
xlat
cwtl
sub
adc
cmp
mov
ret
imul
xor
sbb
pop
idivb
rolb
das
pop
or
out
mov
iret
cli
ret
mov
mov
adc
test
or
inc
mov
mov
enter
mov
xchg
data16
or
adc
jno
aaa
mov
add
pop
cmpb
aas
aam
mov
pop
mov
fstp
aad
dec
dec
mov
fisubs
inc
adc
and
sbb
ss
out
jl
add
pop
mov
shrb
jne
cld
push
cltd
jns
aam
je
stc
push
mov
bound
rol
xor
add
or
or
flds
pop
movsl
lods
roll
or
jnp
cwtl
add
jecxz
xchg
adc
or
lahf
push
adc
pop
push
jns
lock
and
and
mov
mov
les
fisttpl
rorl
mov
or
stos
adc
cmp
fsts
lods
in
dec
cmp
or
lods
cmp
fisubl
insb
mov
or
sarl
mov
nop
dec
out
pop
lods
in
pop
sbb
xchg
pop
daa
dec
push
push
jne
cmp
xchg
movsl
ljmp
std
or
test
inc
push
add
and
xchg
lds
add
mov
xchg
sub
push
jne
pop
lods
in
cmp
cwtl
mov
sub
adc
movsb
arpl
adc
dec
mov
jl
stos
cli
or
mov
imul
das
out
mov
in
loop
adc
xor
shrb
lret
lods
test
or
ss
jo
lods
or
jge
add
popa
adc
xor
cmp
jo
and
dec
stos
lds
aam
aad
fisttpll
mov
add
daa
punpckhwd
push
aad
jne
xor
and
cmp
mov
xchg
pop
sub
jge
pop
lds
scas
repz
fstps
sub
pop
mov
cmp
xchg
cmp
in
imul
in
xchg
in
push
insb
jns
xlat
std
out
pop
xor
cld
loop
aas
or
add
into
lcall
loope
es
out
jmp
mov
clc
fldenv
imul
xor
push
mov
xchg
dec
dec
mov
gs
pop
outsb
fisttpll
pop
dec
pop
or
mov
subl
mov
jp
lahf
jb
sbb
pop
lret
mov
stos
test
push
or
hlt
xchg
xchg
aad
fs
xchg
icebp
jp
dec
mov
xchg
sbb
loope
or
lods
scas
std
loop
push
stos
mul
adc
add
and
aad
daa
mov
fadds
jae
cmp
xor
and
scas
pushf
cmc
dec
enter
sub
mov
cld
into
lods
add
cmpsb
adc
mov
xchg
push
popa
inc
loopne
daa
dec
fisubl
stos
pop
push
jmp
test
lret
mov
arpl
je
lds
xor
inc
mov
cmp
mov
add
and
clc
mov
js
mov
shrl
loop
sub
push
sbb
add
iret
mov
and
mov
cmp
dec
or
and
and
andb
or
mov
mov
in
aaa
xor
push
sub
xchg
fcoms
cwtl
xor
fnstenv
cmp
push
jbe
cs
pop
sbb
xor
rorl
in
sarl
shlb
popa
loop
repz
or
jmp
and
or
or
mov
push
rorl
push
jp
dec
inc
sbb
jmp
pop
clc
push
jl
or
dec
std
jecxz
adc
mov
push
ret
mov
mov
out
xor
leave
pop
add
pushf
cmp
xor
xor
loope
sbb
jp
ds
dec
xchg
imul
in
and
or
lret
sbb
push
pop
aam
popf
mov
stos
adc
repnz
mov
inc
mov
scas
mov
jnp
lock
inc
xchg
mov
xchg
cmp
jo
divl
cmpsl
cmp
scas
mov
outsl
inc
adc
or
mov
dec
stc
in
cmpsb
mov
inc
scas
push
ljmp
rolb
push
aad
xchg
sti
or
inc
or
sub
test
jl
sti
mov
xlat
mov
mov
lock
ret
test
mov
cs
std
repz
and
nop
ret
lcall
hlt
cli
inc
pop
cmp
lds
xor
fimull
popa
jne
mov
loope
das
push
dec
pop
addr16
mov
cmp
jae
mov
and
and
mov
js
sub
or
mov
xorb
push
jbe
in
pop
adc
pop
jl
popa
int
xlat
jns
xor
shll
loopne
clc
ret
jnp
fsubp
cmp
fs
rcll
insl
popa
sub
and
pop
lret
sar
pop
cmpsl
bound
clc
sub
jno
cmp
pop
std
pop
lret
sbb
leave
loop
loop
jp
ds
mov
adc
pushf
push
xchg
cmpsl
push
ret
scas
pop
mov
popf
push
mov
pop
sahf
lret
div
mov
push
mov
mov
clc
out
clc
outsl
clc
inc
pop
cmp
jo
or
sahf
loopne
xor
pop
sub
pop
push
popa
addl
and
insb
add
jp
lahf
movsb
insl
push
imul
ret
inc
jl
out
add
xchg
xchg
subb
or
adc
scas
stos
test
subb
lods
xchg
rcrl
js
dec
fbld
addb
pop
adc
sahf
jmp
mov
add
jne
clc
inc
cmp
adc
pusha
cmp
psrlw
orb
add
cmp
enter
mov
xchg
mov
cmp
mov
xlat
dec
inc
lds
pop
add
mov
das
fcoms
adc
rcrl
mov
pop
pop
mulps
or
mov
add
and
and
fistpll
push
cwtl
xchg
pop
jns
mov
pop
sbb
inc
sub
lods
popl
int
push
xchg
into
andl
js
lea
jl
aaa
xor
std
cs
or
lahf
pop
xor
inc
push
xchg
imul
lret
insl
loope
sbb
xor
cmpb
data16
call
jle
sub
outsb
xor
add
jmp
roll
test
adc
jp
adc
mov
or
sub
in
notb
sub
xchg
cmp
mov
xchg
mov
dec
xor
in
inc
sub
cmpsb
mov
out
or
sbb
adc
sub
mov
cld
fisubrl
mov
fstpt
pushf
fucom
xchg
dec
cmp
ret
lcall
mov
pop
sbb
inc
fstp
pop
adc
iret
mov
sbb
sahf
mov
xor
add
test
push
out
push
int
jge
loope
lds
sbb
sbb
push
pop
add
sub
ret
mov
lcall
insb
jbe
cmp
mov
sub
lea
cmc
xchg
cmp
mov
mov
aad
sti
cmp
jb
mov
push
jne
jecxz
inc
xchg
cmpsl
callw
xchg
stos
pop
or
gs
pushf
xlat
jle
cmp
fcmovu
push
std
cltd
inc
add
fmuls
mov
jno
sbb
add
ret
xchg
call
aas
icebp
inc
inc
aad
pop
mov
imull
stos
xchg
adc
dec
and
rcl
sub
pusha
jb
scas
sbb
aas
push
sub
pop
pop
dec
aaa
dec
movsl
sbb
mov
inc
mov
cwtl
pop
int3
bound
stc
adc
dec
mov
fnsave
sub
fmul
sbb
ficoms
xchg
jb
pop
pop
sbb
push
and
out
lock
fs
push
cmpsb
xchg
jns
int
shll
nop
out
or
cs
sbb
repz
inc
test
int
inc
hlt
insb
xchg
call
jge
rorl
and
in
lcall
xchg
xor
xchg
cmp
sahf
jbe
adc
push
mov
xlat
sbb
loopne
mov
pusha
mov
rorb
int3
sub
add
adcb
aad
mov
adc
fcomps
jae
out
fsub
push
nop
adc
ljmp
loope
imul
aaa
fcomp
vmread
xchg
into
bnd
ret
and
sti
hlt
out
es
mov
xchg
dec
pop
ds
sub
push
and
pop
mov
test
dec
jg
into
scas
sub
adcl
pop
sti
push
push
xchg
shrb
dec
ljmp
outsb
add
jb
adc
daa
fistl
leave
pop
cmp
sbbl
push
inc
jecxz
or
pop
sub
stc
jb
flds
mov
mov
std
and
clc
push
fstpt
add
add
pop
inc
outsb
add
and
jecxz
in
clc
or
ss
xchg
add
andb
mov
xchg
xchg
mov
cmc
in
lods
cli
outsb
pop
mov
lods
cmp
lea
lahf
cmpsb
xor
fsts
add
mov
add
xor
sbb
cmp
sub
jle
push
adc
push
lods
icebp
loopne
out
xor
adc
and
sbb
and
ljmp
dec
scas
int
sbb
enter
pushf
mov
scas
adc
shlb
xor
cli
or
popa
cmpsl
jmp
insl
pushw
cmpsl
in
cmpsb
icebp
cmp
add
hlt
pusha
nop
mov
mov
jp
in
push
popf
jne
hlt
and
mov
mov
adc
dec
jnp
aam
push
push
jno
dec
xchg
sub
push
sbb
or
int
pop
ds
mov
out
out
sahf
inc
lcall
sahf
loopne
cmp
mov
out
push
add
push
adc
mov
outsl
data16
dec
xor
ret
cmp
repnz
pusha
jp
xchg
mov
jo
clc
adc
push
hlt
jl
push
mov
loop
adc
sbb
imul
or
fiadds
jle
fnstcw
xchg
jnp
test
add
inc
or
ret
icebp
or
pop
repz
idivb
mov
popa
ud1
or
xchg
hlt
sbb
movsb
lods
cld
mov
or
adc
sbb
jge
cs
in
cmp
sahf
stos
filds
ret
shl
pop
filds
dec
pop
movb
or
jmp
xchg
aaa
jg
xchg
push
ret
jbe
mov
mov
test
adc
out
mov
ss
incb
push
ror
bound
test
mulb
mov
jle
pop
outsb
or
pusha
gs
call
and
sbb
mov
inc
shrd
loope
cld
xor
jns
jbe
lahf
push
inc
jl
test
dec
fdivs
ficomps
xchg
mov
mov
enter
xchg
add
mov
les
xchg
mov
inc
jb
inc
xorb
adc
or
push
cmp
cmc
mov
nop
pop
sub
xchg
sub
into
dec
mov
xchg
jmp
mulb
pusha
stos
ret
and
andl
mov
loop
mov
in
mov
sahf
in
push
push
dec
addl
outsb
mov
inc
mov
mov
xchg
mov
pop
dec
sti
jno
jns
fstps
xchg
jg
out
cmpsl
cld
repz
jp
xor
xor
mov
push
out
xchg
dec
and
mov
in
xchg
dec
cmp
nop
jl
xchg
out
les
add
daa
lods
jbe
or
in
int
sbb
pusha
stc
das
dec
lahf
movsl
pop
adc
fidivs
xchg
inc
add
pop
push
movsl
mov
jp
inc
mov
pop
jb
cld
mov
pop
sub
push
insb
imul
dec
inc
stos
andl
add
mov
jge
adc
xlat
dec
repnz
jae
lods
jle
rclb
or
pop
aas
xchg
pushf
sub
jns
inc
dec
mov
mov
pop
xchg
add
mov
push
dec
sbb
jb
pop
xchg
movsl
inc
and
xor
xchg
lahf
in
insl
add
jbe
lcall
mov
cmp
in
push
mov
add
mov
lods
mov
add
stos
pop
test
dec
xchg
pop
sbb
jbe
dec
mov
outsb
ds
icebp
mov
movsb
mov
lahf
dec
int
fwait
pop
dec
inc
cwtl
ljmp
je
inc
mov
mov
call
mov
push
jmp
ficoml
sti
dec
sbb
adc
mov
out
inc
mull
add
and
and
scas
fisubrs
lds
in
shll
sub
jecxz
ret
pop
xor
cmp
movb
inc
sub
or
js
fidivl
ret
fstps
push
cltd
sarb
jns
mov
std
sbb
adc
xor
push
xchg
ret
cmpsb
lahf
push
push
lock
jnp
mov
int3
xchg
mov
mov
push
outsb
rolb
hlt
cmpl
sbb
adc
faddp
jbe
mov
ds
pop
cmp
xchg
in
shl
mov
fistl
std
lods
push
mov
ss
or
push
addb
stos
mov
sbb
jmp
std
cmp
and
orl
sbb
in
mov
inc
test
cmp
rcr
movsb
xor
jmp
movsb
aaa
push
cmp
cmp
add
and
and
lea
imul
js
push
ss
out
lcall
mov
push
jno
xor
pop
test
xor
sbb
lea
jle
stos
xchg
loope
xorb
cmp
sub
scas
loop
jnp
lret
cmp
faddl
jnp
xchg
addb
cmp
insb
or
mov
aaa
xor
jl
dec
add
or
shl
jbe
xor
out
stc
icebp
mov
out
ficoms
pusha
call
push
mov
lahf
jmp
cmp
add
or
and
ljmp
cmp
aas
stc
sarl
test
add
mov
imul
push
push
test
sub
enter
add
mov
mov
ret
cli
mov
mov
jns
addb
mov
dec
scas
test
jb
iret
mov
clc
call
or
jae
adc
divl
cmp
out
inc
jb
xchg
mov
jmp
mov
mov
adc
push
sub
iret
scas
and
les
pop
out
ficompl
stc
dec
xor
lods
inc
out
ja
pop
out
lods
pop
es
fcmovnb
or
inc
movsb
scas
adc
insl
aad
xor
and
nop
pop
dec
repz
mov
adc
sub
repz
mov
rolb
cwtl
push
sub
fs
fiaddl
mov
dec
scas
ja
cs
loopne
inc
fcmovnbe
rolb
enter
sub
lea
cli
dec
loop
jg
ret
cmc
pop
lcall
add
xor
loopne
add
mov
hlt
loopne
repnz
rclb
add
push
int3
stc
mov
push
lret
jbe
add
and
dec
rcrb
cmp
xor
xchg
mov
xor
mov
jae
sahf
in
test
dec
cwtl
std
pop
adc
aas
daa
daa
cmp
inc
test
sub
pusha
fwait
imul
mov
cmpb
sub
mov
pushl
add
imul
xchg
pop
sub
pop
icebp
jl
shlb
xor
mov
pop
movsb
or
sub
les
sub
push
rclb
xor
mov
aaa
mov
into
push
fsubl
test
repnz
mov
mov
test
je
sbb
jmp
test
jmp
mov
fs
pop
mov
je
sub
dec
mov
sbb
scas
inc
test
int
pop
clc
lds
sub
xchg
lret
xor
mov
rcrb
xchg
stos
sub
clc
jecxz
push
cmp
jne
push
outsb
dec
cmp
je
cmc
sub
push
inc
jmp
scas
inc
pop
cltd
lods
xor
pop
daa
mov
push
inc
lret
add
push
mov
sub
or
aam
in
fidivs
mov
sbb
inc
push
shr
out
test
dec
jns
add
shl
sbbl
rorb
test
jno
fsts
out
outsl
ret
add
xchg
outsb
ljmp
cmp
cmp
xchg
dec
fistpl
rolb
stos
sbb
testl
xchg
add
dec
loopne
push
jecxz
mov
pop
call
xchg
clc
dec
pop
jg
add
scas
subb
mov
mov
lret
or
push
lods
fcmove
test
pusha
outsl
mov
out
lret
push
sbb
movsb
sub
fsubs
adc
cmpsb
jecxz
xchg
aas
push
movsl
test
xor
cmp
jb
mov
test
fidivrs
or
dec
cmp
arpl
insb
push
into
mov
mov
in
bound
xchg
adcl
out
dec
push
jb
sub
aas
insl
cmp
mov
hlt
push
cmp
mov
sub
push
pushf
mov
cmp
mov
fimull
aad
push
ret
aas
cmp
push
stos
pop
jbe
in
out
xchg
lahf
stc
jne
or
or
sahf
lcall
inc
pop
fwait
lret
imul
orl
mov
out
sbb
mov
xor
mov
lcall
aas
sbb
lahf
and
cmp
test
pop
cmc
ja
push
lcall
jo
mov
outsl
cmpsl
sub
add
pop
sbb
adc
jecxz
cld
ret
push
test
rcl
clc
clc
push
movb
arpl
cmpl
add
shrb
out
cmp
orl
bound
xor
add
jg
add
cli
iret
and
mov
hlt
lea
add
mov
cmp
mov
and
cmp
loope
dec
fisubrl
mov
leave
shrb
loopne
in
sbb
xor
fs
cld
outsb
xor
incl
xchg
shlb
mov
sub
xchg
mov
in
jge
mov
and
stc
sub
adc
or
pop
clc
test
sub
fs
inc
out
sub
repz
fldl
pop
mov
fs
cmpsb
sti
and
cwtl
popa
jns
out
fs
jb
in
mov
das
mov
out
imul
outsl
aam
mov
add
mov
add
aam
xchg
and
cmp
push
int3
mov
ss
xchg
cli
jb
arpl
das
jmp
mov
and
jp
insl
dec
cwtl
pop
add
lea
cwtl
sub
add
jmp
cmp
jle
icebp
ficompl
or
addr16
add
and
add
xchg
mov
aad
or
stc
xchg
test
sbb
xor
js
xchg
sub
or
mov
je
jl
add
xchg
lods
dec
and
and
loop
mov
mov
stos
out
jl
pop
add
xlat
loope
or
xor
xchg
test
and
dec
out
jbe
sbb
sti
lds
jo
jg
shrl
jb
repz
dec
push
and
mov
rolb
test
jmp
jle
testb
rolb
adc
cmp
cmp
sbb
fildl
xor
adc
mov
add
clc
bound
and
add
lret
and
pop
enter
cmp
dec
in
roll
jp
test
test
dec
neg
iret
rcr
inc
sub
into
bnd
cmp
cmpsl
hlt
fcoml
lock
xchg
lahf
jp
daa
int3
in
call
and
arpl
iret
fidivl
ficoml
stc
les
fsubs
push
lods
push
push
pop
aad
inc
icebp
mov
xor
lcall
ret
dec
inc
ret
out
sbb
xchg
repz
inc
lods
jo
jne
mov
cmp
or
std
jg
test
mov
cmp
scas
jg
rclb
xchg
sti
cmp
and
push
cmp
sti
xchg
cld
lds
xchg
push
stos
ret
lret
in
aas
ss
sub
roll
loop
xor
repz
mov
mov
xchg
out
lret
es
xchg
adc
dec
or
inc
arpl
jb
mov
mov
jl
in
mov
lret
dec
xchg
lret
lods
loop
and
sub
rol
imul
les
pop
nop
out
lea
adc
jb
fucomp
push
scas
pop
push
mov
sbb
push
movsb
lret
jne
mov
cwtl
das
sub
cld
ss
arpl
sub
jmp
jmp
jp
xor
ja
cwtl
out
cwtl
inc
in
inc
jle
inc
mov
inc
push
sbb
mov
outsl
inc
adc
fs
add
mov
lods
orb
dec
fcoms
inc
adc
cmpsl
or
lods
jnp
sub
xchg
out
dec
dec
xchg
shl
lahf
jb
lods
dec
pushf
fwait
mov
imul
jp
cmpsl
int
sbb
insl
aam
movb
push
cld
js
mov
repz
mov
mov
dec
or
cmc
imul
int
mov
push
xchg
add
addr16
popa
and
cmp
xor
xchg
mov
mov
adc
popa
dec
aaa
imul
dec
mov
int
cmp
rcr
cld
js
mov
jns
out
das
sub
insl
ds
inc
add
cmpsb
in
adc
fildl
cwtl
cmpsb
cmp
add
scas
and
dec
adc
pop
adc
xor
outsb
push
orl
stos
mov
mov
nop
shll
daa
push
dec
fistps
clc
adc
enter
scas
fldcw
mov
in
dec
fistps
and
shlb
dec
xchg
xor
jecxz
jg
inc
fdivl
xchg
bnd
repz
stos
jns
mov
xor
and
in
lea
jp
cs
mov
jecxz
cmp
inc
or
push
int
xchg
lret
xlat
sbb
out
mov
cli
mov
pop
iret
pop
xchg
xor
mov
jg
imul
xchg
dec
ror
movsb
jecxz
in
mov
cltd
jns
popf
xor
out
out
fimuls
mov
push
jmp
imul
xchg
icebp
inc
xchg
or
fldt
out
cltd
push
pop
ljmp
add
add
mov
sub
mov
add
mov
pop
out
out
int3
push
jecxz
callw
aam
out
mov
sti
fmulp
fadd
decl
ss
xchg
or
pop
jnp
mov
out
outsl
int
dec
in
xor
jecxz
mov
xchg
push
jo,pn
scas
xor
cmp
xor
xor
sti
jmp
mov
popf
jmp
sub
dec
out
pop
push
leave
rcrl
xchg
sar
fldenv
or
mov
push
stos
scas
lcall
insl
aaa
mov
xchg
jp
js
sbb
xor
xor
dec
jmp
std
enter
daa
popf
pop
pusha
aad
popf
mov
jp
jbe
add
lret
lods
ds
xor
mov
cmp
inc
and
ja
cltd
ret
lahf
call
insb
aad
out
inc
add
mov
mov
and
cs
mov
popf
push
sub
ljmp
cmpl
in
gs
sub
inc
xor
insl
inc
sbb
xchg
cmovge
pop
mov
jb
jb
imul
xor
jnp
adc
push
test
sahf
mov
and
cmpsl
and
stc
push
mov
fwait
out
and
les
or
or
add
mov
loopne
inc
push
js
inc
es
std
jle
jmp
out
and
and
in
int3
pop
fimuls
xchg
and
in
cmp
fisubrl
or
adc
push
loop
out
shlb
sbb
in
push
pop
iret
sub
adc
out
call
aam
jno
or
sub
and
sbb
dec
scas
inc
pop
add
loopne
jmp
mov
jle
or
gs
sub
dec
jne
rol
insb
cmp
mov
imul
rorl
cmp
add
dec
pop
stc
push
xchg
and
push
int
xchg
adc
arpl
out
sub
int3
push
mov
cli
add
roll
fnsave
mov
push
cmpl
xchg
loop
ret
xchg
push
mov
loopne
pop
inc
test
sti
ret
xchg
cmpsb
xor
and
and
sahf
jg
rcl
rolb
cmp
pop
jle
jo
ljmp
pop
rorb
sbb
roll
imul
push
aam
jmp
mov
adc
lret
pop
adc
imul
movsl
cwtl
pop
rolb
insb
shlb
cmp
aas
icebp
sub
dec
fcomp
stos
mov
aas
cmp
popf
out
out
mov
testl
int3
fnstenv
inc
sbb
pop
and
or
cwtl
or
out
bnd
int
and
jne
in
cltd
and
dec
out
lcall
add
jg
cmpsb
mov
int
pop
and
xchg
nop
xor
jae
inc
cli
nop
fcmovb
aad
xor
aas
enter
insl
inc
out
xor
mov
sbb
xchg
lret
imul
add
add
xor
and
xchg
xor
mov
das
or
fldenv
fisttpl
cli
xchg
mov
sti
mov
sti
test
xor
cmp
push
in
inc
xchg
cli
ficoml
jno
jmp
or
inc
cmp
pop
out
out
lds
cmp
cwtl
out
jge
adc
mov
pop
add
stc
xor
xorb
add
or
cli
lds
lds
jmp
dec
dec
cmp
xchg
pop
xor
rolb
mov
lods
adc
loope
jp
inc
adc
xchg
rolb
addr16
pop
dec
xor
rcrl
pop
xor
cmpsl
es
xlat
adc
sub
push
pop
pushf
mov
mov
mov
pop
gs
popf
mov
lods
push
pop
push
sar
sub
out
scas
fmuls
pop
loop
test
sbbb
mov
pushf
mov
mov
insl
mov
out
xchg
insl
cmp
ror
pop
outsl
lahf
pushf
or
dec
out
xlat
aam
pop
jae
inc
jbe
jbe
pop
int3
lret
push
pop
dec
adc
loop
dec
push
repz
adc
insl
aam
mov
jnp
mov
sbb
mov
inc
std
sub
push
cli
xchg
imul
push
jb
loopne
push
jp
cmp
or
and
mov
repz
pop
sbb
cmp
lods
lods
into
push
mov
jp,pn
pop
dec
cli
adc
cli
or
and
adc
in
popa
fld
jno
push
inc
jae
aam
cwtl
sbb
push
push
push
pop
out
mov
adc
pop
fcmove
dec
mov
lahf
xchg
icebp
ret
sbb
mov
and
pop
ds
pusha
mov
in
pop
xchg
inc
cmpsl
sbb
imul
jl
les
orl
cmp
sbb
jp
call
sub
jo
add
sbb
stos
aam
xchg
push
lock
xchg
xchg
imul
fwait
arpl
sbbb
fisttps
popl
xlat
pop
pushf
and
stos
mov
adc
movsl
divl
add
sub
loopne
add
pop
mov
mov
fwait
nop
cmpsl
roll
mov
push
cmp
adc
popa
mov
mov
dec
leave
cmc
dec
roll
sbb
int3
add
jge
lods
xchg
shll
jmp
lahf
cwtl
rolb
aad
xor
inc
adc
jl
xor
or
xchg
mov
scas
cltd
xchg
sbb
imul
cmpsb
push
adc
inc
inc
xchg
aas
std
repz
pop
test
sbb
sub
xlat
aaa
xchg
cld
and
sub
nop
clc
ret
data16
inc
movsb
inc
out
xor
cmpsb
dec
lea
jo
outsl
clc
push
sbb
or
int
sbb
loop
push
sub
or
xchg
out
and
stos
int3
lea
je
xchg
in
jle
inc
mov
cs
lret
outsb
push
pop
pop
jmp
clc
xchg
sbb
lret
jo
cmp
iret
lods
mov
lea
cs
imul
std
rorl
jp
inc
insl
leave
addr16
es
push
mov
lahf
mov
jmp
scas
loop
insb
mov
shrb
mov
add
sbb
xor
pop
shlb
mov
andl
ror
xchg
fstpt
lds
push
decl
jne
mov
rcrb
out
cmp
stos
test
sbb
or
lea
clc
lds
mov
push
negl
js
push
dec
loop
cmpsb
jne
js
fsubl
xchg
in
lret
stc
mulb
icebp
out
lock
or
pop
and
xlat
repnz
pushf
roll
sbb
shll
in
pop
or
fs
mov
push
jns
lret
sbbl
xorl
repnz
lods
enter
pop
add
mov
jmp
gs
fildll
fsubrl
pusha
in
inc
jg
popf
ljmp
pop
jno
mov
loop
imul
arpl
js
xor
lret
xchg
add
xchg
sbb
lret
in
ljmp
stos
mov
fmuls
popa
mov
mov
repnz
gs
lahf
add
shlb
or
sbb
adc
test
xor
add
cmpl
push
xchg
stc
lret
in
push
xor
negb
dec
shrl
or
outsb
add
inc
inc
ret
scas
jg
add
cmp
jge
out
pop
fisubs
mov
leave
xchg
adc
mov
sbbl
push
add
inc
sub
push
idiv
jno
into
popl
rorl
es
adc
into
sbb
sub
popa
dec
pop
popa
scas
loopne
xchg
mov
outsl
mov
ret
sub
dec
pop
pop
inc
jp
adc
pusha
mov
or
stos
fcomps
scas
sbb
cmp
or
add
das
dec
cld
lds
gs
lret
lock
mov
add
inc
les
and
dec
xor
mov
adc
jmp
scas
inc
add
add
fadds
jg
bound
xchg
sub
mov
sbb
cmpsb
hlt
daa
cmp
popf
rcrb
repz
mov
sbb
negb
mov
mov
jg
sub
mov
mov
mov
jge
fiadds
movsb
dec
sbb
cmpsb
outsb
icebp
mov
sbb
push
adc
sub
jbe
or
int3
push
dec
pop
aas
dec
add
sbb
lods
inc
push
fs
in
adc
pop
fsubrs
cmp
mov
popf
sub
adc
jle
out
dec
mov
add
ja
addr16
or
int3
aaa
add
xor
movsb
mov
mov
adc
fdivp
pusha
mov
cmc
loop
adc
adc
inc
add
out
mov
pop
stos
pop
shlb
xchg
rorl
push
xor
pusha
pop
dec
sub
sbb
xchg
mulb
push
idivb
scas
mov
mov
shl
push
or
imul
adc
or
aas
mov
jmp
sub
mov
ficompl
xchg
or
movsl
hlt
sbb
leave
jg
mov
push
dec
mov
or
mov
adc
mov
xchg
lcall
addl
mov
sbb
mov
jecxz
dec
js
loope,pn
mov
pusha
jmp
jo
add
daa
rolb
ljmp
cwtl
addr16
add
movb
fsubr
adc
ss
in
or
xor
lcall
adc
and
cmp
fisubl
lods
addr16
and
pop
sahf
mov
nop
sti
pushf
mov
mov
mov
insb
add
push
jo
insl
dec
cmp
fucom
sbb
insb
dec
aas
rcrl
jp
mov
pop
cmp
xchg
pop
jns
cmc
in
xchg
sti
inc
pop
stos
sahf
mov
jge
fwait
xor
cmp
jg
das
xchg
xor
loopne
aas
mov
cmpsl
xchg
cmpsl
fisubrs
mov
adc
inc
cmpsb
dec
loopne
or
dec
xor
xorb
cmc
in
xchg
mov
jns
loope
ss
xchg
sbb
test
mov
xlat
rcrl
adc
das
xor
ds
mov
jge
sub
into
scas
mov
and
aad
cmpsb
lods
adc
mov
insb
sbb
xchg
enter
mov
sbb
insl
sub
xchg
xchg
pop
mov
mov
js
and
push
xor
add
and
or
cmp
pushf
sub
pop
rcr
sbb
adc
mov
mov
push
inc
jecxz
dec
jae
insb
sub
loop
je
cmc
addr16
orb
jae
pop
pop
mov
and
jno
aam
mov
push
aad
stc
mov
push
inc
clc
pushl
inc
outsl
popf
aas
lods
std
or
lock
xchg
gs
mov
sahf
addr16
stc
lret
xlat
lret
cmp
mov
xchg
daa
adc
dec
push
sub
xchg
add
sub
mov
jbe
fnsave
movb
add
lds
dec
dec
aam
ret
fisubrs
sti
iret
adc
imul
push
adc
pop
and
mov
cs
addl
aad
ret
xor
loope
xchg
pop
jo
push
push
bound
das
arpl
sbb
adc
lcall
sub
jae
push
dec
sub
lea
aas
push
int3
sub
or
addl
leave
or
mov
mov
mov
pop
mov
in
fildll
ss
cmpsb
adc
lods
adc
fcoms
cmpsl
test
inc
xchg
dec
movsl
loopne
inc
mov
add
out
inc
out
pop
adc
push
inc
scas
movsl
sub
cld
in
shl
test
div
je
movsl
outsl
popa
mov
push
sub
enter
inc
mov
or
lods
int
int
bound
out
inc
popa
jge
fstpt
mulb
call
sub
leave
in
push
insb
inc
in
pusha
fidivrs
dec
jecxz
les
adc
jmp
xor
push
ds
or
and
bound
jl
paddusb
stos
push
lods
add
sub
adc
loopne
adc
push
popf
jae
cltd
push
mov
rolb
sbb
mov
jno
push
lods
push
gs
jg
clc
pop
xor
ficompl
mov
cmpsl
je
int3
imull
dec
xchg
inc
sub
lods
loope
test
mov
adc
cmp
adc
aad
mov
and
sbb
std
cmp
lahf
mov
pop
xchg
mov
push
xchg
mov
fnstenv
or
push
dec
xlat
add
xlat
mov
and
lds
clc
jge
xchg
xchg
mov
int3
jo
jg
and
les
int3
std
cmp
pop
add
repz
fists
out
or
xchg
sti
or
gs
cli
xorb
shll
shlb
in
xchg
sbb
mov
dec
out
stos
mov
into
loop
mov
cli
lea
cmp
push
dec
ja
sbb
sub
movsl
jp
push
and
or
mov
xchg
test
test
jns
add
popa
scas
xor
pop
sahf
lret
mov
mov
jno
cwtl
mov
push
ret
pop
and
xor
js
and
and
clc
flds
ds
enter
inc
cmp
out
cld
jmp
push
push
inc
jbe
clc
lock
inc
cs
mov
sub
mov
mov
jecxz
inc
or
hlt
mov
push
mov
pop
xchg
mov
orb
sbb
lods
repz
dec
add
sub
mov
cmp
push
lock
loopne
push
inc
pusha
lock
dec
or
les
loopne
das
fbld
push
popa
bnd
bound
mov
mov
ljmp
sub
call
popa
cmpsl
lock
dec
dec
ret
fildl
push
out
mov
jo
sti
xor
fcmovb
mov
mov
push
push
or
adc
xchg
mov
dec
lock
in
adc
mov
mov
inc
and
dec
js
inc
psubw
mov
movsl
sub
inc
pop
push
repz
gs
nop
adc
push
mov
sbb
mov
bound
imul
in
dec
ja
jb
jnp
dec
cltd
inc
ret
adc
cmp
orl
dec
pop
imul
loop
and
pushf
push
pusha
addr16
or
cmp
das
dec
mov
xor
mov
jp
xor
scas
aam
add
pop
xchg
pop
lret
ret
ds
sub
dec
cmc
in
addr16
daa
sbb
add
cli
sbb
dec
jb
je
aas
cmp
out
lcall
test
in
mov
sbb
test
jecxz
inc
int3
js
fdivrs
dec
cltd
out
add
outsb
imul
sti
rcl
popa
icebp
pop
inc
mov
inc
call
rorb
rolb
mov
sahf
dec
aad
sub
adc
mov
mov
icebp
in
loopne
and
sub
movsl
popa
jecxz
bound
xchg
xchg
jecxz
cs
inc
and
cmp
mov
je
xchg
dec
pop
xchg
adc
in
aad
jle
and
mov
cmp
test
je
sbb
cmc
xchg
mov
stos
shrb
into
push
insl
rcrl
jb
test
fistpll
movsl
bound
mov
adc
jmp
lret
or
mov
sbb
and
in
cmp
lods
dec
sbb
pop
mov
adcb
loope
daa
sub
shr
fwait
lods
lods
std
arpl
mov
push
pop
mov
xchg
dec
push
add
lods
movsl
fidivl
push
adc
lret
mov
cwtd
fdivs
stos
insl
cmp
dec
mov
xchg
sub
test
pushf
mov
cmp
mov
mov
dec
xchg
sbb
loop
ss
cmp
mov
pop
or
and
cmpl
cmp
dec
addb
lds
push
jl
sbb
add
jno
imul
shr
in
and
fidivrl
fstpl
xor
pop
sub
je
jbe
jmp
mov
arpl
dec
xor
aam
flds
mov
fs
and
pop
cmp
es
and
aam
cmp
mov
pushf
and
test
mov
jno
dec
xlat
in
aad
imul
lods
lods
loop
outsl
test
adc
mov
inc
out
cld
stos
unpcklps
into
cltd
ds
sub
bound
xor
enter
mov
jne
adcl
adc
lds
mov
dec
repz
adc
stc
loope
lods
jge
outsb
jp
adc
pop
addr16
push
lahf
dec
adc
mov
xchg
xchg
adc
loope
sub
fnstsw
cmp
cmpsb
jge
add
inc
jmp
insb
pushl
xor
xchg
xchg
fcoml
inc
fwait
xchg
or
rorb
mov
cwtl
out
gs
push
fists
sbb
cmc
popf
push
std
icebp
inc
jbe
inc
pop
gs
and
xchg
dec
inc
dec
imul
stos
push
cmpsb
jle
adc
mov
sbb
jbe
repnz
mov
xchg
cwtl
jg
mov
push
mov
decb
inc
loop
pushf
inc
mov
aad
push
ss
mov
int3
sahf
xor
addb
mov
ret
insl
push
cmpsb
jg
push
push
mov
sub
sub
mov
adc
jbe
pop
addr16
mov
stos
and
dec
ja
dec
add
leave
push
in
ror
adcb
scas
xchg
jne
and
pop
pop
mov
rcrl
cltd
enter
push
arpl
inc
fldln2
add
jmp
sbb
fnsave
lds
in
or
nop
outsl
mov
sub
xchg
or
pop
iret
aam
into
popa
or
sarb
mov
jb
adc
stos
push
adc
cwtl
addr16
jle
mov
jno
pop
jp
add
cmpsb
adc
ds
push
pop
fnstenv
pusha
jb
aad
jmp
dec
lock
adc
out
add
enter
clc
jnp
inc
pop
lods
sub
cs
cmp
leave
inc
mov
enter
test
out
jecxz
pop
xchg
push
pop
adc
les
test
sub
or
xchg
jnp
lods
insb
mov
sar
movsl
mov
data16
mov
sub
push
dec
js
ret
sub
aas
sub
gs
cmp
imul
scas
popa
ret
pusha
andl
or
ss
test
insl
out
in
pop
cli
fsqrt
addr16
xchg
xchg
dec
or
dec
iret
js
aam
cmp
xchg
dec
cmpsl
push
lcall
push
push
inc
std
stos
sub
lds
pop
rol
dec
inc
sbb
in
les
xor
sbb
outsl
add
fs
leave
lcall
add
cmp
jge
sbb
lods
dec
add
fwait
sbb
les
xor
inc
decl
sub
xor
mov
mov
mov
nop
rorl
mov
and
pop
mov
movsb
adc
add
mov
cmp
push
add
sbb
aad
push
dec
push
test
jmp
sbb
pop
mov
cmp
xchg
cmpsl
push
in
cli
fcompl
ja
adcb
mov
jmp
sahf
leave
in
out
cmp
push
clc
mov
pop
xor
nop
jl
push
fs
fucomip
push
or
mov
dec
fisttpl
test
xor
push
mov
xor
jbe
lret
divb
les
cld
mov
cmpsb
mov
mov
or
fwait
or
fisttps
fsubrl
cmp
out
cmp
dec
mov
jmp
outsl
sbb
fwait
cmpsb
mov
movb
nop
repnz
rorb
and
xchg
pushf
or
xchg
or
adc
outsl
mov
or
push
lods
xchg
ljmp
icebp
xor
scas
jne
push
adc
xor
pusha
xchg
xchg
stc
ljmp
jecxz
pop
sub
ficoms
xlat
jle
stos
or
pushf
cmp
fdivl
inc
sar
sarb
pushf
insl
icebp
push
mov
inc
xlat
pop
ret
inc
loope
pop
mov
mov
int
icebp
movsb
jb
mov
loope
sbb
adc
sub
dec
lcall
fs
cmpsl
inc
jmp
sti
or
xor
inc
xchg
cltd
sti
xor
xchg
int3
inc
adc
dec
icebp
lds
jle
xchg
xor
stc
mov
jb
imul
out
inc
in
and
jnp
scas
dec
mov
jl
cli
push
pop
ja
push
add
insb
inc
pop
mov
jle
xchg
clc
adc
pop
inc
fucom
sub
dec
add
mov
pusha
int
xorl
mov
imul
and
sub
inc
adc
fwait
pop
jmp
dec
dec
int3
out
dec
dec
add
jns
das
push
sub
add
xor
lahf
dec
aas
xor
js
into
cmp
xchg
mov
shll
pop
call
jbe
xchg
cmp
loopne
sub
insb
push
std
cmpl
sbb
mov
aam
fs
and
cmc
lcall
or
push
iret
lret
mov
xor
xchg
mov
sub
int
xor
inc
sbb
add
mov
xchg
in
fcmovnbe
jb
out
jb
push
mov
inc
push
call
fwait
mov
push
push
inc
call
add
dec
ficomps
lods
inc
mov
xchg
fmull
pusha
lcall
dec
mov
call
xchg
or
sahf
jge
jge
sti
lock
leave
cmpsl
sbb
mov
adc
mov
jne
enter
mov
sbbl
or
lahf
lea
cltd
int
icebp
int3
mov
push
ds
xchg
ret
ja
sub
js
cmpsl
int3
dec
sbb
lcall
cmp
or
andb
jb
pusha
fsubl
into
hlt
dec
push
jbe
xchg
jge
or
arpl
ja
pusha
shr
aaa
sahf
fidivrs
add
popa
cltd
sub
mov
xor
cmpsl
cld
insl
jg
ret
lcall
cmp
inc
xchg
mov
add
stc
cmpb
mov
push
mov
sub
fistl
insl
test
inc
stos
xor
lods
aad
pop
mov
jl
or
call
xlat
or
sub
sub
or
dec
in
scas
jo
orb
cltd
pop
insb
ds
dec
push
xor
sbbb
call
arpl
mov
xchg
pop
xchg
jae
sub
jmp
psubusw
lock
or
add
mov
test
xchg
int3
sbb
push
inc
out
xor
mov
ljmp
pusha
test
lods
xor
sub
loop
clc
jecxz
in
push
ficoms
sbb
push
outsl
or
pushf
lahf
ljmp
jno
and
mov
scas
sub
xor
fistpl
sahf
notrack
stos
mov
out
jmp
sahf
ds
cmpsl
test
add
jnp
scas
sbb
sub
fmull
add
sbb
add
out
jle
lds
mov
call
mov
mov
insb
xchg
cmp
pop
mov
mov
jmp
pop
enter
rorl
lock
pop
mov
int
mov
inc
roll
sbb
adc
push
cmovb
push
stos
insl
sub
xchg
scas
add
enter
insb
fs
xor
test
movl
out
push
je
dec
out
jne
lret
test
adc
leave
add
je
adc
cs
mov
std
aaa
adc
mov
insb
in
outsb
jl
sub
scas
imul
test
icebp
mov
push
lret
inc
inc
imul
in
test
ja
xlat
mov
imull
jnp
aam
mov
sbb
jge
cli
lret
sub
popf
fcmovnbe
in
fdivrl
incb
cld
and
shlb
mov
or
icebp
movsb
push
jne
add
ds
out
insl
and
call
fadd
pop
jmp
ljmp
les
mov
xchg
push
jns
xchg
cmc
xlat
push
mov
outsb
decl
dec
xchg
ja
int3
jae
rorb
mov
pop
idiv
test
ret
ficomps
pop
mov
pop
movsl
bound
popa
dec
xchg
mov
push
jae
idivl
dec
ret
js
popf
adc
jmp
and
enter
adc
mov
out
pop
xor
or
lret
lock
xchg
jne
adc
lods
popa
dec
pusha
pop
adc
sub
jnp
sbb
push
cmc
scas
add
inc
adc
les
loop
xchg
filds
stos
stc
into
inc
jmp
sbb
mov
push
int
sbb
xor
xlat
out
jno
and
aaa
cmp
stc
lds
add
jle
mov
daa
cmp
mov
pop
mov
sub
call
push
ret
pop
mov
idivl
insl
cltd
adc
xchg
xor
mov
loope
iret
sub
or
lret
cmp
mov
lods
shll
insb
inc
push
push
aad
call
icebp
mov
fs
jae
fimull
pop
pop
cld
pop
lahf
cmpsl
cmp
jbe
mov
ret
mov
je
mov
sahf
cmp
or
lret
lock
pop
fdivrp
and
fs
ret
mov
hlt
or
fistpl
loope
add
call
loope
andb
lcall
push
lret
daa
clc
jl
and
nop
xor
lcall
dec
add
jb
mov
cld
inc
sbb
hlt
cmp
test
xor
cmpsb
sbbl
push
mov
pop
push
dec
push
mov
mov
xlat
mov
stc
fwait
shrl
out
adc
add
fildl
mov
push
and
pop
lods
aad
cli
cld
int3
icebp
icebp
push
test
jmp
xchg
xor
pop
outsl
or
pop
lcall
pop
call
out
push
jl
mov
fs
push
dec
or
push
fscale
incb
inc
jg
push
in
mov
sbb
and
popa
mov
sub
insb
stos
xor
pop
inc
imul
scas
ljmp
push
cmpsb
sbbb
movsl
in
rorb
imul
jle
mov
mov
repz
je
xlat
pop
cmp
pop
jmp
cmpl
mov
lea
dec
mov
decb
dec
in
into
movsl
lock
add
mov
sub
jns
js
das
ret
sbbb
jmp
ljmp
or
xchg
xchg
xor
mov
jns
js,pt
sahf
in
jae
addr16
sbb
mov
jmp
jne
insl
int3
adc
mov
ret
testb
lock
insb
repnz
pop
pop
shll
call
and
inc
adc
mov
fiadds
lret
std
xchg
sub
iret
lods
outsl
es
jb
add
or
or
push
xchg
fs
js
sbb
xor
cli
scas
in
sbb
mov
add
push
repz
dec
jmp
mov
fcomps
ss
pushf
imulb
sub
sahf
hlt
repz
adc
dec
cwtl
xchg
mov
xor
push
ret
sub
in
xor
add
rol
pusha
add
xchg
xchg
or
pop
sub
jg
mov
sub
push
lods
inc
jnp
sub
iret
xor
and
loopne
fadd
push
mov
mov
push
ret
leave
movsb
loopne
addl
cmp
js
add
or
adc
xlat
sbb
cmp
mov
pop
sub
sbbb
into
bound
and
outsb
sub
fstp
and
ret
bound
jle
add
add
mov
rorl
mov
push
stos
mov
mov
shrl
mov
ret
and
lahf
and
rorb
test
mov
mov
cmpsl
dec
xchg
je
push
mov
movsl
mov
push
jl
cmc
or
lods
mov
shrl
lods
or
sbb
sub
pop
and
mov
cmp
mov
insl
das
cmp
mov
movsl
popa
lods
hlt
les
xchg
cli
adcb
mov
and
aad
push
jp
popa
sbb
or
movsb
std
mov
icebp
imul
cmc
jo
xlat
mov
jno
add
jmp
mov
mov
in
push
sti
leave
pusha
inc
xchg
ss
insb
lock
sbb
jbe
push
fisttpll
jnp
inc
andl
xchg
xchg
sarb
inc
add
test
sbbl
out
ret
mov
out
movsb
sbb
xor
in
lea
or
sarb
or
xchg
add
cli
gs
sbb
lcall
xchg
or
add
push
int3
icebp
xchg
add
rol
lcall
mov
or
fistps
es
mov
pushf
and
mov
aas
cltd
inc
fsubr
add
rcll
ds
imul
pop
pop
fidivs
inc
int
cmp
add
pop
or
pop
mov
and
cmc
dec
xchg
cltd
fdivl
int
loop
int
add
cmpb
push
sarl
ljmp
out
push
cmc
cmp
jg
or
shrl
fnstsw
cmc
adc
enter
mov
cmp
je
scas
mov
xor
pop
mov
shll
movsl
call
cmpb
stc
pop
mov
xchg
lods
cmp
jl
fidivrl
mov
test
add
lcall
push
jno
frstor
stos
js
cmp
lods
xor
adc
test
cli
and
xchg
stos
ret
fs
pop
jns
addb
pop
pop
outsl
testl
dec
cld
cmp
inc
mov
sbb
icebp
in
mov
adcb
aam
add
push
xor
jmp
bound
movsb
xchg
iret
sbb
std
adc
stos
adc
push
loopne
adc
cmpsb
cmp
mov
sub
mov
jns
imul
xor
test
shlb
bound
mov
popf
sarb
fcmovne
push
push
xchg
fld
divl
das
xor
leave
dec
xor
aaa
decl
rcrb
imul
push
mov
add
les
ss
icebp
fs
and
rclb
sbb
sub
loope
add
mul
out
call
sahf
mov
out
out
sub
aad
sbb
jbe
aam
int
push
mov
and
shrl
xor
push
mov
cmp
fnsave
xchg
sbb
xchg
movsl
xchg
nopl
mov
mov
adc
in
mov
je
cmp
ficomps
jb
dec
ss
xchg
outsb
loope
fsubl
inc
sub
cmpsl
shlb
aaa
cmp
daa
xchg
hlt
cmpsb
adc
cltd
fstl
jb
dec
jno
push
lods
push
lods
cmp
add
ss
dec
add
sarb
pop
or
xchg
and
test
pop
nop
sub
fs
cmp
mov
insl
xchg
xchg
outsb
jb
xor
and
xor
adc
mov
outsb
xchg
ja
mov
cmpl
ds
repnz
shrb
cltd
loop
leave
mov
lds
cmpsl
in
in
data16
dec
or
pop
rolb
pop
lret
mov
movsl
xor
lock
in
pop
jge
inc
sub
lahf
inc
mov
bound
lock
xchg
mov
inc
lret
popf
fs
jle
mov
popf
mov
rcll
mov
les
fidivs
jnp
stc
cltd
jp
ja
or
ret
rorb
sar
dec
mov
lds
push
mov
mov
cmpsl
pop
divb
outsb
por
mov
sti
sahf
add
lods
mov
xor
cld
popa
test
das
mov
outsl
inc
in
inc
jbe
in
push
mov
xchg
jno
sbb
dec
arpl
sbb
mov
cmc
xor
jmp
bound
mov
outsb
jns
pop
es
adc
fdivl
cmp
pop
mov
sahf
shrl
outsl
cmc
lret
addb
sbb
pop
cmp
jmp
out
cmp
sbb
adc
es
jl
enter
xchg
and
clc
jmp
jae
sub
mov
xorb
mov
cmp
loope
and
cli
pusha
cld
xlat
sbb
mov
insl
pop
fiaddl
mov
js
insb
pop
fstps
bound
aad
mov
mov
lds
das
jns
inc
pusha
mov
dec
adc
mov
rorb
out
sahf
push
inc
or
or
sbb
push
push
fsubrl
in
mov
fcompl
sub
sbb
sbb
mov
sbb
jmp
push
sbb
mov
mov
pop
inc
stc
inc
pop
ret
stos
std
adcb
daa
cld
jl
push
mov
out
filds
ficomps
testb
xor
sahf
mov
adc
push
icebp
pop
call
add
push
dec
mov
ret
mov
aaa
fisubs
ret
cli
inc
add
fidivl
lahf
mul
scas
add
push
push
enter
mov
mov
call
ret
cs
testb
call
mov
jl
push
sub
inc
add
push
adc
pop
push
cmc
mov
inc
js
mov
pop
pop
pop
lds
pop
sbb
jno
loope
cmp
sbb
inc
adc
je
sbb
jnp
push
fldt
and
dec
jp
sub
inc
rcrl
call
xor
xor
cmpl
mov
push
scas
dec
subb
sti
inc
and
sbb
insl
sub
push
lret
adc
xchg
test
fdivl
icebp
xor
in
roll
popf
jl
imul
and
shll
das
dec
sub
mov
rorl
loopne
mov
inc
mov
fisttps
fidivs
ds
in
lret
adc
cli
rcl
pop
stos
cmp
mov
rdmsr
pop
data16
aas
inc
xor
and
jmp
xlat
mov
pop
call
int3
lahf
sub
icebp
popf
push
jno
mov
pop
add
aad
scas
lock
stos
outsb
ljmp
mov
push
sbb
fs
imul
pop
xchg
adc
aas
sbb
dec
jg
addr16
es
lods
mov
ss
mov
push
jno
xor
jne
sub
and
cwtl
push
push
push
std
sub
aam
add
aad
or
imul
inc
mov
loopne
mov
hlt
mov
push
mov
sub
aas
sub
adc
cwtl
jo
sbb
outsl
add
push
js
or
shrb
xchg
paddq
das
xchg
pop
jb
jns
enter
fs
add
sti
xchg
incl
lcall
into
fs
mov
std
mov
sbb
mov
in
adc
cmp
movl
cmp
imull
les
lret
and
dec
data16
stc
sahf
outsb
push
call
icebp
in
pop
lea
sub
insb
fdivrl
out
ljmp
ret
cmpsb
pop
push
test
push
mov
std
mov
mov
stos
jge
movsl
ficoml
and
test
adc
shll
test
subl
mov
mov
ljmp
mov
out
xlat
mov
shl
jbe
rcl
hlt
xchg
scas
add
xchg
xchg
dec
sbb
xor
rclb
and
cwtl
jb
add
lret
pop
aaa
stos
out
xchg
out
push
sbb
test
and
mov
cwtl
adc
adc
mul
and
inc
xchg
xchg
inc
ret
movsb
stos
cmp
js
dec
mov
inc
sti
pop
leave
pop
push
mov
fcomip
jecxz
repz
jae
mov
pusha
fisubrl
mov
jnp
xchg
mov
cli
les
mov
insb
xchg
test
and
pop
jg
lcall
mov
sub
xchg
test
mov
js
xor
xchg
fcmovu
movsb
cmp
pop
ret
and
xor
dec
dec
dec
daa
push
mov
pop
push
cmp
mov
dec
aam
icebp
loope
xchg
fbstp
test
adc
or
rcll
cld
push
pop
cmc
mov
sub
outsl
xor
jle
mov
ss
push
push
test
andl
in
or
mov
lock
push
aad
xchg
jge
sub
aad
xchg
xchg
jo
popf
mov
sahf
inc
mov
lret
and
dec
adc
pop
dec
cli
xchg
jbe
cld
cmp
nop
insb
pushf
xor
sbb
add
fiadds
sub
ljmp
sahf
out
jge
rorb
clc
xchg
sbb
mov
pop
jnp
add
and
or
add
pop
and
out
mov
pop
mov
les
rclb
pop
xchg
enter
adc
lds
stc
inc
jp
add
mov
adcl
jbe
mov
shll
mov
outsb
test
xchg
lcall
and
mov
pop
adc
mov
jns
and
outsb
mov
push
sbb
mov
in
jns
pop
push
push
push
or
cmp
inc
dec
inc
ds
push
add
push
inc
cltd
sti
xchg
cmc
stos
push
and
mov
adc
fmul
cli
push
or
inc
mov
pop
pop
popa
bswap
push
adc
fnstsw
dec
mov
jl
mov
xorl
out
fwait
push
push
daa
stos
or
sub
xor
imul
daa
push
pop
fwait
mov
insl
enter
mov
outsb
cmp
mov
mov
out
xor
inc
pop
orl
js
fpatan
mov
mov
iret
add
mov
repz
ja
inc
outsl
dec
mov
dec
xchg
rcrb
cld
insl
fistps
push
imul
and
adc
inc
ror
jle
sahf
dec
push
scas
adc
mov
mov
in
sub
adc
idiv
mov
and
rcpps
jae
lods
negb
in
arpl
xchg
es
add
mov
lds
push
xchg
insb
add
lock
xor
fnstsw
out
stos
jmp
int
fcmove
inc
push
outsb
fsts
cmp
sbb
scas
rolb
mov
mov
inc
insl
xor
insl
dec
lods
pop
dec
inc
mov
ljmp
mov
lds
in
loope
scas
xor
pop
and
add
out
push
loopne
adc
mov
and
loop
and
xor
push
jmp
rcrl
jb
xchg
fmuls
test
inc
push
jns
jge
xor
push
mov
mov
mov
jmp
out
mov
stc
cltd
jl
jbe
xor
rclb
scas
sbb
or
cmp
mov
and
scas
or
jecxz
mov
cmpsl
movsb
cmp
lcall
es
push
in
pop
add
push
gs
pop
sarb
lock
test
xchg
aam
xchg
sbb
mov
add
cmp
jp
jg
adc
repnz
xor
dec
insb
adcb
xlat
adc
jnp
mov
es
lea
dec
movsl
pop
stc
das
mov
dec
add
repz
add
push
jle
and
aad
in
test
push
popa
and
mov
divb
movsb
xchg
lret
lea
add
dec
in
stos
shll
rolb
ret
dec
push
andnps
scas
jb
rcrb
arpl
or
jecxz
cmp
mov
jmp
inc
adc
sub
sbb
xchg
adc
add
push
inc
mov
sbb
jns
xchg
sahf
mov
fs
test
push
and
bound
and
enter
mov
incl
das
inc
mov
pop
fidivl
push
cmp
mov
idivl
andl
iret
imul
mov
jecxz
sti
push
call
stc
xlat
push
sbb
inc
loop
fsubs
lahf
xor
daa
sub
adc
out
mov
fcoml
lds
sarb
aaa
jno
sub
pop
cmc
or
pushf
jb
jbe
fwait
cltd
fmuls
or
mov
pop
mov
das
and
sahf
lret
and
cmp
loope
dec
lahf
and
sbb
cltd
adc
cs
int3
movsb
lea
and
xchg
xlat
es
inc
sub
sbb
cmp
mov
and
ljmp
cmc
inc
mov
pusha
or
adc
stc
xor
aad
lods
jbe
pushf
int
fmuls
gs
les
add
mov
sbb
popf
push
mulb
and
jae
pop
in
sub
in
adc
lods
dec
dec
mov
cpuid
cmp
cld
scas
rorl
xchg
add
neg
jns
mov
fs
or
dec
sarb
mov
scas
bound
popa
mov
test
inc
aam
or
gs
mov
ret
outsb
fistps
je
sahf
xchg
fdivr
das
cld
in
movsl
jecxz
inc
mov
lds
xchg
sti
mov
inc
movsb
mov
sbb
out
mov
sub
jg
pusha
xor
test
mov
add
lret
cmp
cmp
repnz
sti
mov
in
fsubl
pop
jae
shl
mov
ret
inc
xor
xchg
lcall
ljmp
xchg
mov
pop
pop
push
mov
and
jl
cmp
in
push
subl
xor
out
and
inc
stos
sbb
outsl
jns
div
enter
lea
push
xchg
dec
incl
jnp
mov
add
jb
cmp
add
mov
pop
jnp
test
sub
xchg
loop
mov
inc
sbb
scas
sahf
sub
sub
icebp
movsb
test
xchg
xorb
lret
ds
cmpsl
mov
movsl
add
outsb
outsb
cwtl
lods
inc
pop
or
daa
add
xchg
mov
out
push
mov
scas
es
outsb
bound
ret
enter
pushf
mov
add
push
pop
shrb
sub
nop
addr16
cli
adcl
lods
add
cmp
pop
pop
pushf
add
imul
pop
push
test
cmp
dec
pop
icebp
add
sub
sub
icebp
mov
pop
rcr
jl
lcall
cmp
xchg
push
jns
mov
sbb
rclb
adc
or
xchg
cltd
mov
pop
fdivs
jnp
jmp
lahf
push
jle
in
repnz
jle
pop
xor
bound
fwait
xor
idivl
nop
aas
pop
dec
sbb
out
test
orb
faddl
js
adc
cmp
mov
dec
test
mov
clc
jg
cmp
imul
push
sub
and
outsl
mov
shl
ficoml
ds
jg
insl
cmp
jp
test
lahf
xchg
fdivs
jl
iret
insl
mov
cs
sub
mov
jl
cmp
fwait
cmpb
or
std
shll
fnsave
push
in
add
add
or
imul
les
movsb
std
mov
movsb
fiaddl
out
lods
out
mov
and
mov
sbb
enter
push
loopne,pn
lcall
xchg
jle
dec
mov
cld
cmpsl
mov
and
test
pop
xchg
fisttpll
and
push
ficoml
sbb
pop
xchg
mov
testl
js
inc
xchg
xchg
push
jo
in
jecxz
xor
popf
sti
xor
jp,pn
mov
outsl
sub
insb
cmc
pop
ret
push
movlps
out
cmp
mov
mul
jg
testl
mov
mov
jp
test
push
mov
jl
jge
aam
ss
mov
lods
jbe
adc
dec
popa
or
neg
andb
add
int3
dec
pop
gs
shll
jg
or
xor
add
dec
dec
sub
mov
imul
inc
and
je
fnsave
pop
and
xor
pminub
cld
loope
nop
mov
cld
inc
xchg
and
je
and
sbb
mov
sbb
jb
repnz
jg
nopl
jmp
pop
inc
pop
push
add
or
cli
inc
scas
or
test
shlb
xchg
int
ljmp
jo
imul
adc
into
jne
cs
adc
repnz
mov
add
jecxz
cmp
jg
into
add
jg
loope
cwtl
divb
push
mov
mov
out
pop
cmp
mov
movsl
mov
incb
in
mov
mov
jmp
sbb
stos
scas
fidivrl
insl
push
aam
jmp
stc
ljmp
addr16
fwait
jg
mov
pop
daa
add
push
mov
jo
lods
pop
jb
adc
lea
fs
mov
pop
leave
adc
cmp
push
je
mov
fs
movsb
rcrb
mov
ret
adc
movsl
push
repnz
fisubl
cli
inc
jmp
sahf
pop
xchg
fiaddl
mov
out
jne
pop
loop
inc
stc
es
and
push
xor
fistpl
andl
mov
sahf
dec
mov
dec
sub
out
and
fistl
mov
mov
in
lcall
movb
push
or
dec
pop
add
add
ljmp
sub
jb
and
and
jle
jge
push
lcall
mov
imul
repz
fcmovnb
stos
push
lds
push
js
scas
repnz
lret
sub
or
cmp
mov
outsl
jle
sbb
cmp
adc
xchg
out
lcall
mov
ret
stc
in
jmp
imul
cwtl
xchg
loope
push
mov
cli
or
cmpsb
xchg
mov
sub
lock
cmp
in
jmp
test
sbb
sahf
test
mov
popf
ret
fdivs
push
hlt
sarl
std
and
stc
push
xchg
out
jae
cmpsl
outsb
fldenv
bound
xor
pop
neg
popa
test
mov
cmpsb
and
dec
push
add
jg
jbe
adc
xchg
adc
scas
sbb
jbe
jae
addr16
or
in
mov
and
push
lds
int3
xchg
pop
js
gs
test
pop
subl
fimuls
cltd
stos
nop
or
or
sbb
aas
popf
mov
jns
cmc
ret
jmp
aas
je
lret
xor
mov
inc
sbb
cmp
clc
bound
insl
imul
xchg
dec
rcrb
nop
jmp
sbb
test
les
add
cmc
pop
ss
and
sub
cmpsb
sbb
aam
icebp
movsl
loope
stos
adc
and
sahf
fldl
mov
in
mov
movsl
fwait
jns
push
xchg
in
out
ljmp
popf
sbb
ds
testb
jg
or
add
test
lahf
xor
fstpt
mov
and
repnz
cltd
cmpsl
mov
dec
daa
aas
out
jp
test
sahf
mov
xor
addr16
cmp
sub
mov
jbe
popf
sub
xor
pop
test
push
pop
xchg
mov
jle
fstpt
push
fstps
iret
out
dec
pop
and
popf
pop
xchg
mov
shrb
add
cld
scas
nop
cmp
mov
pop
fbld
dec
mov
andl
sub
inc
pop
in
mov
cmp
int
cmp
fistps
fs
aam
xchg
or
movsl
and
gs
xchg
mov
cmp
mov
insl
dec
dec
sbb
testb
repz
sub
push
pop
enter
ja
rcrb
sahf
mov
xchg
lock
dec
sub
and
mov
sbb
lds
fisttpl
int3
test
adcb
sub
mov
loope
cli
lcall
and
dec
pop
rolb
sti
push
dec
or
insl
pop
roll
mov
sbb
testl
scas
sbb
add
cmpsb
insb
push
imul
fsubrp
es
mov
addr16
imul
cmp
addr16
mull
out
das
jg
bound
and
cli
ja
shr
stos
lds
jne
cli
add
lock
pop
pop
fnstsw
mov
cmp
push
fcomps
lret
jo
sbbl
fdiv
pop
inc
fcoms
push
mov
ret
mov
adc
xor
out
js
into
rcrl
xchg
dec
int
jo
dec
sub
cld
push
in
push
pop
push
sub
xor
and
jno
cmp
roll
pop
or
add
rorl
aas
scas
jp
jmp
or
fnsave
inc
cmp
decl
mov
les
js
lea
insl
jg
orl
sbb
jge
jl
mov
xor
mov
or
jge,pt
xlat
adc
cmp
cmc
cli
mov
arpl
fsubrl
fstps
xlat
dec
dec
mov
cmp
and
sub
dec
cmpsl
pop
lcall
push
negb
mov
loop
in
iret
rorb
push
fstps
out
mov
mov
push
sub
lea
popf
jno
xchg
cmp
cmp
inc
insb
xchg
subb
cmp
outsb
mov
sbb
mov
pop
in
call
insb
bound
and
mov
xor
repz
sti
leave
pop
sub
nop
xchg
add
pop
push
mov
lock
andl
das
in
xor
popa
pop
add
mov
sbb
loop
push
inc
dec
cmp
pop
psllw
xchg
inc
stc
rorl
faddp
mov
adc
inc
adc
pop
outsl
mov
cmp
testb
sbb
inc
mov
add
imul
mov
movsb
repz
popa
add
into
popf
push
cmp
les
data16
lcall
rorb
xor
js
adc
jge
stc
push
jo
lds
scas
dec
scas
shrb
inc
rcrl
scas
mov
mov
imul
jle
adc
mov
mov
aad
xchg
out
imul
insb
push
xor
nop
sbb
shrl
xor
inc
mov
cmp
mov
xor
and
mov
jmp
mov
adc
gs
fidivl
cmp
cli
cmp
addr16
cmp
push
adcl
sbb
fimuls
int
push
sub
outsl
pushf
clc
pop
adc
jl
jl
loope
push
push
imul
pusha
mov
loopew
mov
mov
test
jl
jne
cmpsl
lock
in
jno
sbb
add
xchg
pop
mov
mov
jle
push
cmp
mov
xor
jp
inc
daa
scas
adc
pop
pop
mov
dec
xor
push
outsb
mov
or
movsl
outsl
xchg
clc
cmp
sti
jbe
push
mov
je
daa
mov
lds
inc
adc
shll
cld
repz
arpl
jae
pop
pop
std
push
jne
lock
out
cmp
push
push
ss
fistpll
or
mov
movsl
pop
outsb
subb
ret
cltd
mov
daa
cmpsb
mov
stos
test
add
aad
mov
frstor
aas
add
push
outsb
inc
lock
dec
cli
jae
in
mov
mov
lods
or
iret
int3
fs
jge
aad
add
leave
mov
push
movsl
jecxz
dec
xor
mov
aas
jp
insb
jnp
sbb
sbb
ja
jge
or
cwtl
add
pop
mov
jnp
imul
or
mov
fisubrl
testl
push
jnp
push
gs
pop
outsl
jecxz
leave
popa
shl
cmp
pop
lahf
in
imul
idivl
je
mov
or
inc
in
scas
out
pop
sub
cmpsl
sahf
mov
fwait
nop
push
lea
xchg
ret
mov
rcr
in
addr16
loopne
lock
fistl
mov
mov
stc
inc
dec
jmp
stos
loop
adc
in
add
test
add
dec
or
cli
adc
xchg
out
stos
adc
cmpsb
subl
shll
test
push
mov
xor
sub
cmp
fdivr
mov
loope
add
adc
fucomi
or
repnz
fprem
iret
mov
jg,pn
mov
cmpsb
mov
fstp
iret
and
mov
inc
mov
push
jg
insb
das
int
imul
xchg
dec
loop
mov
xor
imul
xchg
or
xchg
bound
pop
mov
pop
subl
fisttps
cmp
xchg
cmpsb
testb
sbb
idivb
in
loop
and
mov
imull
rorb
xchg
xchg
sti
mov
sar
cmp
xchg
sbbl
imul
or
mov
lcall
outsl
dec
bound
repz
loope
adc
adc
xor
mov
roll
data16
mov
sbb
rorb
sub
mov
stos
mov
mov
sti
jmp
cmp
or
shld
lods
inc
imul
sub
mov
daa
and
in
xor
loopne
out
cmp
sub
cmp
stc
sub
mov
pop
call
jno
popa
stc
test
jle
add
or
xchg
out
insb
add
idiv
cmpsl
rolb
mov
ja
fistpll
jbe
loop
pop
repz
xchg
outsl
ficompl
pushf
dec
mov
dec
jo
leave
lods
int3
or
mov
mov
sti
shl
mov
stc
pop
sbb
in
sti
xor
idiv
jo
jmp
push
clc
scas
loopne
mov
push
xor
cmp
dec
adc
call
dec
sti
mov
arpl
mov
jae
sub
lds
xchg
and
inc
lock
or
repnz
push
cmp
jmp
push
mov
mov
cli
cmpsb
ss
mov
sti
movsl
imul
stos
xor
sbb
cld
jnp
andb
sub
cld
imul
cmp
or
int3
ret
jnp
cltd
div
ret
fadds
pop
in
mov
jae
hlt
pop
inc
cmpsb
fs
das
in
inc
pusha
sub
aaa
mov
scas
mov
jns
in
xchg
mov
and
ss
adcl
lret
fldcw
push
dec
or
shll
add
pop
hlt
jo
inc
mov
inc
pop
xchg
inc
ret
xor
add
adc
sub
xchg
aam
cld
pushf
int3
jno
adc
insl
dec
cmp
and
iret
push
movsb
jge
xchg
adc
aad
cmp
in
cmp
fsubs
sbb
sub
lea
js
or
or
rcrl
sbb
outsl
mov
stos
mov
inc
scas
or
pop
inc
sbb
xchg
sbb
cmp
cmpsb
cmpsl
adc
out
adc
adc
add
repnz
xlat
bound
pop
rcll
and
leave
dec
in
mov
dec
loopne
and
add
inc
mov
push
jnp
dec
es
cmc
push
mov
icebp
ret
mov
ficompl
cltd
push
inc
stos
add
and
in
push
aam
in
mov
pop
jge
mov
jl
sub
in
shll
cmp
and
sbb
mov
dec
gs
enter
adc
push
sub
dec
repnz
lret
in
mov
daa
enter
xor
cmp
test
lds
pop
xor
adc
mov
cmp
or
fsubrl
add
cwtl
fucomp
sub
sub
lret
or
push
and
jle
popa
aaa
sti
inc
jmp
fisubl
adcl
adcl
pop
sbb
pop
lret
mov
or
mov
gs
mov
pop
xor
outsl
ja
sub
roll
mov
pcmpgtb
or
or
mov
or
mov
pop
push
fnstsw
sbbb
and
push
test
dec
mov
sti
push
xor
push
sti
or
cmp
pop
cmp
and
fwait
push
jae
jle
rorb
jnp
dec
jne
test
imul
push
stos
and
pop
es
clc
xor
mov
ljmp
fwait
fwait
fs
pusha
sub
pop
int
or
lret
adc
push
imul
pop
sbb
jnp
add
iret
incb
mov
or
jnp
pop
mov
int3
add
fsubs
sbb
sbb
in
mov
sahf
jmp
or
lret
vpminsw
or
scas
shl
adc
jg
push
popl
mov
rorb
mov
inc
jp
xor
es
pushf
inc
cld
scas
je
mul
or
sub
fwait
leave
shll
loope
lret
iret
or
jb
sub
das
mov
xchg
push
inc
movsb
cltd
cmp
ficompl
cmp
push
cmp
jg
pop
dec
jno
mov
mov
push
loop
loop
je
fcoms
pop
push
cltd
add
andb
in
std
pop
cmp
bound
xor
ret
int
adc
mov
test
mov
mov
pusha
cmp
scas
leave
mov
out
insb
cmp
xchg
cmp
sbb
mov
jle
push
push
jno
jae
adc
fiaddl
lods
cmp
cmp
and
ret
sub
cmc
xchg
push
inc
mov
dec
sub
add
xor
mov
aam
pop
mov
sbb
xlat
mov
mov
jmp
rorb
xor
xchg
mov
push
jge
imull
jge
xchg
in
sub
or
jmp
mov
jmp
cmpsb
mov
stc
test
dec
jae
cwtd
inc
lods
sub
lds
and
into
push
pusha
and
push
loope
aas
lahf
jle
xchg
fstpl
inc
and
pop
les
inc
xchg
jae
mov
lahf
inc
adc
cltd
mov
je
xchg
jecxz
add
sub
sub
sti
or
or
cmpsl
sub
cld
les
cmp
jmp
ds
fcoml
push
sbb
imull
mov
aad
pop
in
cwtl
shl
xlat
add
lcall
mov
addr16
mov
or
push
adc
mov
push
cwtl
mov
rorl
dec
dec
daa
fcoml
jmp
fcmovu
sbb
pop
enter
inc
cmp
add
ret
outsl
cltd
sbb
ja
jae
push
popa
lea
dec
stc
test
sub
pop
mov
loopne
cmp
arpl
mov
sbbb
push
in
mov
test
lods
dec
pop
ret
inc
out
sbb
xchg
xchg
roll
add
out
fstps
in
idivb
mov
mov
es
rorl
pop
dec
adc
push
movsl
lret
pop
je
push
pop
pop
sbb
add
mov
inc
mov
cmp
pop
popa
in
loopne
sbbl
mov
movsl
inc
jae
pusha
xor
mov
jns
jne
inc
hlt
jne
iret
mov
pop
push
inc
mov
mov
inc
xor
jl
mov
ret
mov
int3
insb
mov
inc
inc
shlb
mov
ljmp
outsb
sbb
adc
cld
push
insb
xor
cmpsb
mov
repz
sbb
cli
cld
rol
sbb
pop
int
jo
adc
fidivs
aaa
mov
or
leave
fmull
insl
mov
stos
and
mov
cmpb
xlat
insb
xor
ja
shrb
sub
pusha
adc
adc
clc
inc
cltd
lahf
sub
imul
aad
add
mov
pop
mov
add
leave
pop
arpl
mov
ret
fcomps
inc
pushf
aas
sti
mov
jno
sarb
call
in
insb
mov
int3
mov
sti
jmp
push
leave
mov
inc
xchg
jecxz
push
and
stos
xor
leave
add
pop
mov
pushf
ds
inc
aad
adc
ja
nop
movsl
mov
dec
xor
inc
sar
jle
adc
inc
push
mov
inc
pop
outsl
mov
sbb
push
mov
mov
dec
jg
jg
icebp
xor
aad
fwait
loope
jecxz
aam
sub
add
sub
shrb
dec
inc
sti
shl
testb
aaa
enter
mov
popf
adc
addb
xchg
je
inc
pop
add
insl
push
jne
fwait
not
xlat
adc
and
jb
lock
mov
and
imul
sub
loop
push
das
enter
push
jns
out
sub
mov
mov
test
scas
and
dec
jle
jmp
clc
scas
mov
sahf
jg
clc
cmp
mov
leave
cmc
test
or
and
mov
pusha
push
adc
decb
repz
sarb
stos
in
pop
dec
or
and
adc
repnz
jbe
das
jns
push
rorb
xor
adc
adc
xchg
lock
xchg
lds
and
push
js
push
testb
push
in
xor
sbb
lods
ret
insb
mov
popf
xchg
repz
lods
jecxz
add
mov
mov
loope
out
shrl
cli
dec
inc
sub
or
lods
es
dec
push
test
and
xlat
inc
ljmp
xchg
addl
test
fsub
inc
mov
pop
mov
mov
push
inc
pop
push
leave
fstl
push
fnstcw
push
xor
mov
pop
lcall
sub
add
jg
sub
insl
or
sub
aaa
push
clc
dec
lods
mov
into
xor
or
test
aad
in
or
in
mov
cwtl
cmpsl
aaa
fcomps
pushf
add
je
adc
or
or
cwtl
jno
outsl
dec
lods
pop
jmp
cmp
aad
jnp
push
jne
or
dec
imul
shld
dec
es
dec
fbstp
cltd
mov
jb
adc
dec
sbb
jp
pmuludq
shlb
mov
lods
mov
inc
xchg
pop
cmc
cmc
fabs
push
int
flds
push
or
out
test
push
push
daa
jne
fcoml
mov
adc
push
movsl
xor
rcrb
testb
cmp
pop
fidivl
fwait
lods
outsl
dec
add
daa
push
xchg
adc
adc
sub
dec
xlat
in
ljmp
arpl
dec
mov
jp
loopne
jbe
mov
pusha
mov
aam
popf
nop
cmc
xor
xor
mov
sbb
lret
insb
xor
fwait
lds
jmp
xchg
jb
int
out
pop
gs
cmpsb
and
adc
sti
filds
enter
jb
cmp
in
aaa
mov
push
push
jae
and
mulb
sub
adc
in
xchg
arpl
pop
push
outsb
icebp
lds
pop
fs
shll
dec
popa
or
jo
or
pop
push
xorl
clc
inc
in
pop
push
leave
xchg
ret
push
inc
xchg
sbb
jmp
add
cltd
int3
mov
loope
scas
sbbl
les
pop
jae
cmp
stos
cmp
arpl
cmp
add
and
js
loopne
jae
adc
jno
cmp
inc
jnp
aam
into
hlt
ljmp
ds
push
mov
lcall
xor
sbb
xor
js
dec
jmp
jge
mov
in
jmp
fstpt
das
dec
xchg
inc
jl
jecxz
or
mov
roll
pop
xchg
in
mull
xchg
mov
in
js
clc
ds
or
imul
cmp
sbb
dec
mov
xchg
call
subl
jns
cltd
repz
sub
lods
pop
push
mov
xchg
inc
nop
mov
outsb
xor
mov
pop
sbb
cld
shl
cli
cmp
aam
xor
mov
cmp
jecxz
outsl
sbb
int3
bound
mov
pop
aad
gs
cmpsl
sub
lods
cmpsb
int3
jp
and
pop
cmp
je
mov
movsb
cmpsb
mov
sub
mov
cmp
scas
jnp
inc
jmp
sbb
mov
popa
imul
cmp
daa
pop
scas
int
mov
cmp
ret
cwtl
fs
mov
mov
scas
icebp
ja
testb
aaa
fbld
cltd
loope
jnp
stc
sbb
adc
inc
and
jge
xor
or
and
repnz
push
call
in
push
mov
lahf
push
ja
and
in
xchg
push
jno
pop
loopne
aaa
insb
sub
xchg
push
add
sub
mov
add
pop
cwtl
xchg
ljmp
call
adc
push
jl
lret
push
mov
fsubrp
aas
jne
jg
test
fwait
cmovnp
adc
mov
lahf
cld
out
push
test
scas
push
lcall
sbb
cmp
rol
lcall
gs
inc
sbb
push
sbb
ja
sub
inc
cs
mov
xor
pushf
mov
or
jle
push
lret
push
jl
pusha
loop
fldpi
adc
hlt
or
cmp
mov
nop
dec
mov
push
mov
fdivrl
es
bound
imul
sub
das
cmpsb
cmovnp
nop
and
sub
sub
jle
jae
stos
movsb
cmp
imul
push
cltd
enter
pop
fdivrl
inc
pop
mov
push
mov
jmp
inc
xor
out
ljmp
xor
aam
lods
loope
cmp
fs
mov
jo
insb
aaa
lock
test
mov
mov
int3
cltd
pushf
test
dec
xor
addr16
push
xor
push
pop
push
stos
loope
mov
cmp
pop
push
insl
and
mov
scas
add
push
jne
inc
test
mov
xchg
cmpsb
cmp
xor
xchg
inc
das
xor
ret
ljmp
arpl
adc
pop
dec
lods
dec
stc
cmp
fsubl
push
cs
push
ss
xor
and
sar
jae
fistps
aam
dec
dec
sub
in
in
cmp
sti
jl
xchg
aaa
loop,pn
lds
adc
mov
dec
dec
roll
js
mov
and
movsb
popa
dec
xchg
push
icebp
cmp
int3
bound
push
push
scas
adc
jmp
std
into
sar
jb
shl
pop
pop
call
shr
loop
outsb
aam
xlat
scas
jnp
stos
sbb
push
dec
mov
gs
repnz
xor
mov
in
inc
push
jge
mov
clc
in
xor
adc
shlb
pop
pop
or
jbe
inc
jp
xor
insl
dec
lods
dec
je
pop
rcrb
idivl
pop
movsl
xor
aam
mov
mov
lods
and
mov
dec
sti
dec
lcall
xchg
cs
xor
ret
sbb
leave
iret
jmp
sbb
inc
scas
pop
ret
stos
sbbl
sti
push
testb
mov
add
xor
jbe
and
mov
jle
push
xchg
xlat
pushf
jge
int3
daa
mov
jno
cmp
xor
adc
push
popa
dec
jno
cwtl
cmp
loop
push
subb
and
pusha
nop
addr16
pop
cmpsl
in
rolb
jno
xchg
push
and
or
enter
cltd
inc
lahf
sti
pop
cmp
jo
mov
jg
jae
in
je
jb
mov
cmpsl
adc
inc
and
cmp
lret
jb
pop
lcall
aam
dec
std
jp
push
jmp
cmp
aam
sub
or
mov
mov
xorl
lahf
fistpl
pop
dec
mov
cmp
in
mov
inc
adc
scas
icebp
adc
cs
leave
shl
jmp
push
adc
pop
shll
inc
lea
in
sarl
in
dec
jl
or
sub
sbb
push
pop
lea
inc
cli
addr16
jg
das
sar
xchg
cli
mov
pop
mov
dec
call
shlb
cmp
ds
test
pop
sbb
and
scas
mov
lahf
mov
insb
xchg
addr16
fstps
cmp
cmp
outsb
fs
orb
pop
ret
sbb
stos
push
adc
dec
or
xchg
and
cmc
xor
xchg
imul
shrb
pop
inc
fbstp
andb
cmp
xlat
jae,pt
fsubs
mov
pop
inc
lret
add
in
js
push
fiadds
inc
xchg
adc
and
mov
jmp
lret
or
scas
lcall
mov
mov
sub
add
sub
pop
cmpsl
lods
subb
push
jns
mov
stos
ret
or
jg
orb
ret
dec
sbb
pop
jp
xlat
les
pop
stc
cmp
stos
and
ret
jmp
getsec
iret
shrb
arpl
in
stc
jecxz
jp
mov
test
mov
lds
sbb
push
add
sbb
and
std
ljmp
jmp
mov
adc
pop
inc
gs
mov
ret
add
mov
std
aam
jmp
pop
push
out
mov
pop
int3
and
stos
xchg
sub
push
mov
es
cmp
ficomps
cmp
rcr
repnz
add
into
lcall
xchg
fsubp
into
divb
add
sahf
dec
outsb
add
ljmp
clc
inc
stos
imul
xor
sub
pop
jg
pop
loop
ret
sbb
jge
into
jmp
adc
pusha
repnz
adc
lret
es
mov
mov
js
jp
repz
gs
jb
xchg
mov
mov
repnz
add
les
sub
pop
mov
das
stos
cmp
sbb
sahf
cmc
jns
inc
mov
push
sbb
mov
clc
mov
or
or
outsb
push
inc
cmp
inc
push
lahf
fldl
out
lahf
pop
clc
incl
push
nop
daa
inc
or
xor
fcomip
or
ljmp
or
mov
dec
call
xor
test
in
push
outsl
out
xchg
into
jle
or
roll
pop
pop
stos
push
pop
xor
pop
into
pop
xchg
outsl
pusha
cmp
in
call
stc
outsb
mov
mov
and
and
inc
jne
mov
xor
insl
dec
dec
sbb
jecxz
mov
mov
mov
cltd
dec
push
call
into
or
std
jle
mov
lods
add
add
lcall
ljmp
and
or
push
mov
mov
jne
adcb
adc
xor
lahf
pop
adc
in
inc
add
aam
mov
repnz
mov
daa
insl
lahf
sbb
scas
xor
sub
in
stos
or
shl
dec
and
and
stos
lods
rolb
adc
mov
lods
cld
add
xlat
subl
mov
xor
jecxz
inc
enter
push
les
mov
cld
fistps
icebp
adc
add
ljmp
or
scas
adc
xor
sbb
pop
ja
fsubrl
leave
dec
inc
push
mov
shll
popa
les
mov
cs
jbe
cmp
and
mov
jno
ja
mov
cmp
insl
xlat
out
xchg
inc
pop
push
cwtl
insb
xchg
jmp
movsl
fnsave
xchg
push
xchg
aaa
pop
adc
sub
test
push
adc
mov
out
mov
leave
sbb
ljmp
fbld
jae,pt
inc
sub
int
add
sbb
xlat
and
daa
ja
xor
jns
xor
rorb
mov
std
mov
lahf
aaa
insl
xchg
insl
or
out
movb
mov
in
add
and
sahf
outsl
lea
sbb
das
aad
scas
and
les
rcl
movsl
insb
fsubrl
dec
cmp
add
ljmp
test
sbb
add
adc
sub
imull
xor
xor
jg
jecxz
sbb
daa
loope
popa
push
sbb
hlt
cli
lock
dec
mov
mov
or
and
sub
popa
cmp
dec
mov
mov
gs
cmp
cmpsl
sbb
dec
call
or
mov
inc
icebp
es
mov
xchg
outsl
jmp
and
pop
xor
test
xchg
or
sub
movaps
leave
js
inc
mov
cs
mov
loope
aas
out
jno
int
bound
pop
cmpsb
test
test
das
xor
jge
inc
cmc
push
fisttpl
xchg
jne
imul
sbb
imul
gs
mov
lods
push
mov
pop
out
nop
mov
sti
popa
mov
mov
cmp
mov
push
imul
test
into
test
jge
adc
daa
dec
nop
lock
add
xlat
pop
imulb
cltd
out
lea
dec
or
imul
mov
sbb
addr16
bound
mov
call
push
fs
es
rcrb
int
mov
dec
repnz
mov
jecxz
push
and
dec
idiv
ficompl
ret
xor
fwait
psllq
sbbb
cltd
mov
repnz
push
stos
or
jp
mov
mov
jge
mov
xchg
mov
cmpl
dec
lret
and
pop
sbb
mov
repnz
fs
lea
sub
fisttps
and
je
sti
push
ss
jg
mov
call
mov
ljmp
sahf
leave
mov
test
xchg
pop
test
jae
adc
loop
daa
push
jb
adc
sub
jo
cld
movsl
jae
mov
fstl
jecxz
sbb
fidivl
rol
xchg
cmpsb
and
dec
pushf
adc
lret
test
ja
push
and
mov
push
jle
cmc
aad
and
xlat
pop
fsubrl
mov
stos
mov
mov
xor
mov
out
inc
scas
jb
rol
stos
dec
adc
stos
out
rcrb
mov
les
jl
fs
inc
jge
pop
dec
sbbl
outsl
jecxz
xchg
cmp
test
ret
repz
loope
xor
xchg
jp
inc
mov
cmpsb
add
ficompl
mov
fmuls
out
aam
xchg
outsl
push
xor
jnp
repz
rorb
pop
lea
enter
hlt
cmp
jno
xor
call
mov
push
dec
inc
test
dec
shlb
outsb
in
ljmp
xchg
daa
jae
mov
cltd
hlt
inc
dec
jge
add
jl
leave
xchg
mov
fsts
ds
insb
das
mov
enter
into
or
add
dec
mov
jg
jp
cmp
jno
fcoms
movsl
es
add
sbb
cmc
sub
mov
sarb
or
mov
push
int3
push
jge
sub
jmp
loope
dec
test
std
outsl
mov
pop
inc
ds
pop
cld
mov
sub
int3
pop
sbb
pop
or
pusha
std
pusha
mov
jge
mov
dec
pop
fstps
int3
inc
sub
roll
fwait
mov
or
xor
adc
lcall
sub
push
inc
xchg
xor
icebp
jg
dec
andb
fidivl
inc
dec
jmp
jecxz
cmpsb
hlt
in
pop
popa
and
mov
test
cmpsb
jo
push
fs
sbbb
stc
test
mov
ret
push
and
in
ds
push
aam
pop
dec
sahf
imul
stc
into
jmp
ljmp
or
dec
lea
xor
sahf
daa
xor
pop
pop
or
xor
mov
push
push
pop
or
pop
pop
dec
out
or
sub
fstpl
adc
mov
fisttpl
into
sar
aaa
outsl
hlt
sahf
push
xchg
or
mov
lods
lock
gs
inc
cmp
inc
mov
mov
testl
push
mov
test
ljmp
mov
pop
mov
dec
cmp
adc
pusha
shl
imul
xchg
push
inc
cld
fiaddl
ds
mov
mov
inc
popf
add
xchg
scas
lock
into
sbb
xchg
push
xor
add
es
pop
clc
ret
test
leave
repnz
xchg
scas
popf
mov
stos
mov
imul
popa
xchg
pop
aad
add
adc
aaa
sti
stos
and
mov
loope
inc
adcl
mov
mov
jmp
push
idiv
in
xor
cmp
cmc
xlat
xlat
sub
xchg
mov
out
outsb
leave
pop
inc
add
dec
outsb
jnp
jnp
cmc
sbb
daa
push
xchg
aam
dec
rcrl
test
aad
movsb
testb
jb
aam
xor
push
cltd
xor
push
ret
push
ds
pop
pushf
gs
jl
jmp
test
xchg
cld
or
lahf
rorb
adc
lock
mov
lahf
adc
repz
cmc
jbe
sahf
mov
xchg
popf
jbe
pop
int
mov
fcmovu
mov
ss
or
push
hlt
jne
imul
sbb
adcl
inc
pop
daa
movsl
jne
das
movsl
cmp
pop
dec
push
addb
jb
dec
xlat
add
pop
scas
mov
sbb
icebp
or
into
cltd
iret
in
sub
mov
push
and
xchg
pop
stc
mov
lods
popa
jl
sbb
icebp
ret
cmc
cmp
xlat
mov
mov
lods
pop
insl
cs
leave
imul
mov
mov
push
xor
sub
inc
stos
jmp
sub
loope
pop
je
gs
std
or
pop
cli
cld
mov
mov
lcall
cmp
jle
sbb
scas
stos
icebp
ds
xchg
xor
and
mov
pop
sub
in
lcall
sbb
pop
pusha
sbb
rol
jl
sub
insl
cmp
mov
xchg
je
imul
test
rcrb
repnz
fiadds
iret
add
adc
stos
out
popa
add
adc
mov
rolb
in
mov
jp
enter
jns
xor
pop
cmpsb
cld
cmpl
scas
inc
pop
mov
adc
dec
xor
int
call
and
sub
scas
loop
stos
add
xchg
in
push
sbb
mov
test
add
sbb
or
icebp
aad
aaa
in
nop
push
clc
in
inc
pop
imul
cltd
adc
je
add
push
cmpsb
mov
mov
xchg
iret
fs
aam
cmp
adc
sub
test
or
push
popf
push
sub
push
jmp
mov
inc
add
call
mov
shrb
stc
in
cmp
add
fbstp
lahf
mov
mov
xchg
jo
or
xor
ret
mov
cmpsl
push
sub
lock
jle
or
pop
jbe
xchg
jbe
iret
dec
orb
push
xchg
ljmp
mov
les
aad
pushf
jne
fisttps
push
cmpsb
inc
pop
negl
out
stos
mov
in
dec
sarl
pop
xor
or
fwait
mov
sti
rcll
call
dec
xchg
nop
mov
push
or
sarb
mov
outsb
xlat
jo
data16
shrb
lea
lea
cmp
nop
enter
xor
xchg
dec
push
mov
out
jge
or
mov
aad
mov
cmc
lds
mov
gs
cmp
decl
or
call
frstor
pop
sbb
jecxz
ret
jge
sub
xchg
xchg
adc
mov
pop
call
rcll
sti
clc
inc
cmp
orb
fxch
mov
movsl
into
mov
adc
cmp
xor
dec
dec
fcmovnu
push
or
mov
arpl
adc
adc
push
out
mov
or
cld
ret
and
xlat
shlb
cmp
icebp
add
mov
jecxz
lods
push
lds
jae
enter
and
filds
sub
mov
addr16
mov
dec
arpl
push
fcomps
test
fdivrs
data16
aaa
and
pop
cwtl
mov
jbe
mov
outsb
in
clc
lahf
divl
rclb
adc
cmp
cld
sbb
imul
cwtl
sub
std
xchg
test
mov
cltd
sub
jne
imul
lahf
xor
mov
inc
and
cmc
in
loope
cmp
data16
out
aam
test
enter
mov
jo
sub
loop
push
stos
dec
dec
mov
outsl
mov
inc
mov
add
fdivrl
mov
mov
aaa
in
push
mov
loope
rcr
lahf
out
or
pop
sahf
xchg
add
mov
xor
ror
cmpsl
mull
jne
cwtl
out
filds
scas
insl
adcb
mov
xlat
aad
or
inc
shlb
mov
lods
adc
dec
sub
lcall
inc
ret
pop
sbb
jno
orl
xchg
jg
pop
aad
add
sub
popf
and
add
inc
adc
adc
orl
adc
inc
test
xchg
push
rorb
insl
sbb
cwtl
push
xor
das
outsb
movsb
mov
pusha
adc
andl
sbb
push
leave
or
sub
push
cld
je
sbb
or
push
sahf
sbb
adc
rolb
out
stos
out
gs
mov
test
das
in
mov
sub
pop
ret
lods
cmpl
ret
sti
or
inc
enter
movsb
imul
add
jle
cmp
sbb
loope
shl
dec
xchg
xchg
scas
in
xor
addl
loopne
adc
mov
jmp
icebp
mov
into
clc
mov
mov
sub
call
scas
test
sub
cmp
dec
mov
test
in
sti
push
int
jmp
dec
xchg
inc
inc
push
sbb
jbe
stos
dec
adc
iret
jecxz
dec
xchg
mov
loopne
cltd
out
jnp
sbb
repz
sub
push
push
loope
inc
test
aad
lret
leave
aas
subl
dec
das
fisubrs
mov
xchg
mov
jmp
mov
adcl
test
fdivrl
fs
mov
outsl
cmc
inc
ds
test
decb
lock
mov
shll
add
mov
add
mov
adc
adc
xorl
jns
fldenv
push
dec
sti
jge
pop
adc
int
les
scas
push
je
fidivrl
int3
pop
dec
sub
sbb
or
je
int
pop
in
sti
jmp
xchg
loop
sbb
ret
mov
scas
push
dec
mov
pop
in
jmp
popf
imul
loope
sub
leave
mov
pop
bound
and
jb
jae
dec
rcrl
iret
enter
sbb
loope
lods
insb
dec
repnz
jne
stos
iret
cmc
shlb
jg
subb
movsl
jae
ljmp
and
inc
sub
mov
imul
push
sbbb
clc
xchg
add
mov
mov
sbb
pop
std
pop
and
xor
jo
sti
or
sub
lcall
pop
push
icebp
jns
jae
arpl
rcrb
jge
push
pop
das
lahf
rorb
cmpsl
dec
aad
cmpsb
bound
add
jns
ret
add
pop
cwtl
xor
stos
sub
xor
scas
jmp
sub
les
rorb
and
xor
subl
xchg
adc
xchg
xor
ret
dec
dec
cwtl
mov
lahf
scas
imul
jne
and
mov
jb
pop
iret
ss
insl
scas
pop
pop
inc
sbb
fsubs
popa
sahf
test
adc
mov
aam
pop
test
inc
jbe
pop
mov
mov
push
add
test
jge
mov
in
ret
aas
push
xlat
aad
addr16
stos
pop
lcall
add
sbb
and
jecxz
jg
lds
mov
jp
in
in
xchg
sbb
xor
bound
or
inc
cwtl
xchg
test
sbb
pusha
fistpll
int3
movsl
pop
cs
inc
or
shll
lret
mov
adc
stos
dec
mov
out
sbb
xchg
mov
es
dec
xor
rolb
mov
mov
jno
sahf
pop
sahf
pop
and
jecxz
repz
push
mov
int
stos
dec
cli
shll
filds
mov
or
popa
and
xchg
lock
or
sbb
jmp
ret
mov
and
std
movsb
add
and
xchg
mov
fbstp
test
pop
icebp
movsb
mov
fisubs
out
xor
divb
scas
pop
add
dec
lret
imul
mov
cltd
fmuls
jg
push
mov
mov
aas
add
xchg
pop
xchg
lods
and
and
or
mov
stc
cmpl
mov
hlt
push
mov
and
sub
out
in
pop
arpl
mov
pop
sub
movsl
fstl
jle
fistl
jge
cmpsb
fidivrl
jbe
xor
jp
stc
fs
jl
popl
sbb
stos
xchg
in
jge
xchg
std
jo
or
pop
xlat
sub
aad
jmp
test
inc
mov
icebp
jnp
lret
dec
into
xchg
fmul
mov
into
sub
lcall
cmc
lea
in
mov
jecxz
pusha
inc
xor
js
idivl
mov
pop
movsb
test
insb
and
sbb
jl
repz
lea
cmp
cmc
roll
cmpsl
rcr
test
jns
xor
inc
scas
fdivrl
sub
mov
mov
test
xor
stos
lods
lock
push
sti
add
je
cmp
sbb
add
insb
sbb
and
mov
in
or
push
insb
ror
mov
xchg
dec
fdivrl
movsb
arpl
test
and
bnd
insl
sbb
mov
mov
pop
cli
sbb
adc
xor
leave
cltd
pop
imul
sub
fnstsw
mov
add
pop
aad
enter
pop
cmp
mov
xchg
jmp
les
rcll
adc
pusha
repz
shlb
es
rcrl
or
jo,pn
nop
inc
in
inc
push
mov
jo
shrb
dec
loopne
mov
stc
and
push
popa
lcall
or
sub
xlat
or
mov
nop
nop
xor
cmp
mov
addb
jae
adc
je
cmpsl
loope
add
pop
aas
repz
mov
cmpsb
mov
mov
pop
push
mov
call
stc
xchg
faddl
mov
push
rclb
xchg
insb
pusha
int
or
psubsw
ffree
mov
fs
sub
jbe
cmp
mov
mov
add
or
and
fsub
movsb
sub
jp
push
aas
or
xor
popf
pop
loop
jp
repnz
and
xor
jl
jmp
xor
sbb
dec
mov
loop
sub
test
out
iret
cltd
test
andb
and
or
sub
lea
call
popa
mov
icebp
popa
jge
xchg
dec
xchg
jl
lods
dec
cltd
icebp
xlat
xlat
and
adc
out
mov
inc
in
outsb
shlb
or
xlat
movsb
xchg
mov
jl
pop
test
jp
push
xorps
xor
xchg
sub
adc
push
xchg
adc
insb
in
test
push
cmc
in
das
sbb
divb
lock
js
xchg
or
xchg
pop
jle
mov
add
mulb
lds
loope
adcb
faddl
cwtl
sub
mov
mov
jnp
hlt
rclb
stos
pop
int3
fimuls
push
sub
jne
jmp
aaa
cmp
xchg
sub
inc
lcall
push
xchg
pop
and
data16
mov
dec
add
dec
add
pop
insb
in
loope
xor
and
test
fistpll
out
push
pop
jns
cmpsb
ret
xchg
add
fstps
out
xor
mov
xchg
mov
pop
ficomps
stc
push
mov
lods
repnz
xchg
loop
icebp
xor
fcomps
aaa
jp
into
xchg
push
in
add
or
add
sarb
int3
cmp
pop
adcl
std
in
mov
loopne
jae
dec
mov
mov
pusha
bound
xchg
fidivs
push
filds
adc
adc
xor
xor
mov
add
inc
mov
into
in
scas
pusha
test
jl
into
lods
xor
pop
and
into
fwait
cmpsl
and
or
loope
aam
mov
daa
xlat
pop
outsb
and
add
test
test
dec
inc
or
xchg
insb
and
inc
fcomi
push
lret
add
dec
jle
shr
sub
bsf
les
scas
inc
bound
push
mov
xor
mov
ljmp
push
and
pop
cld
inc
decb
imul
sbb
add
ds
fnstsw
sbb
jmp
test
push
sbb
mov
mov
addl
aas
dec
jecxz
lock
fldt
rcrb
push
add
push
mov
sub
dec
pop
nop
cmp
sbb
and
add
jle
test
mov
xchg
xchg
inc
dec
push
sbb
push
sub
mov
shll
jg
adc
dec
inc
push
rcrb
mov
aaa
xor
xor
sarb
repnz
movsl
ljmp
and
fdivs
cs
pop
add
cmpsb
cmc
in
sub
bnd
mov
jle
xor
das
xchg
mov
aas
adc
push
mov
inc
or
dec
mov
pop
call
mov
push
sub
xchg
leave
jne
add
js
outsl
sbb
jbe
movsb
scas
xor
mov
lahf
pushf
test
mov
daa
nop
into
insl
mov
jge
pop
ss
stc
mov
aam
cltd
clc
mov
sarl
and
mov
or
sar
jmp
test
stos
jae
mov
dec
jnp
xchg
dec
jb
or
rolb
jbe
clc
xor
lods
jle
xor
inc
ja
sahf
scas
sti
and
into
cmp
jno
repnz
ljmp
mov
rcrb
cmpsl
mov
negl
cmpl
mov
lcall
pop
outsb
fsts
cmpsb
push
mov
mov
cmc
mov
jne
xor
dec
adc
mov
bound
lock
sbbb
jb
movsl
sbbb
add
xlat
fs
dec
shl
mov
loopne
push
cmpsl
jne
pop
popf
jnp
mov
inc
out
fldt
fmull
jge
push
mov
int
mov
add
xchg
incb
aam
daa
pop
inc
mov
and
mov
movsl
pop
cmp
in
sub
loope
or
cld
jg
push
lcall
imul
pop
push
mov
pop
push
jmp
test
or
jle
loope
push
das
out
pushf
xchg
xchg
cmp
mov
jmp
je
jnp
notl
pop
xchg
dec
negl
lcall
nop
arpl
jle
ret
mov
enter
xchg
cs
imul
mov
sahf
pop
jns
scas
mov
mov
add
std
mov
jne
jecxz
push
cmp
lods
xchg
pop
ljmp
add
add
cmp
jle
repnz
or
stc
mov
sbb
outsl
and
mov
xor
sahf
cmp
cmp
cmc
ljmp
jno
jo
scas
pop
adc
push
cmpl
orb
or
sbb
cmpsl
jb
sbb
aam
cmc
out
insb
mov
xchg
fcompl
icebp
adcl
cmpl
inc
add
jecxz
mov
roll
loope
std
out
sub
cmovns
pusha
pop
dec
cmp
mov
sbb
cmc
jecxz
data16
xor
xchg
inc
mov
sbb
xor
scas
xor
daa
imul
ja
sarl
or
sbb
push
mov
jl
adc
jge
imul
bound
leave
cmp
ja
out
aad
cmp
adc
and
and
pop
add
dec
imulb
mov
xor
pop
cmp
or
ret
scas
rcll
xor
cld
movsl
inc
lea
int3
push
fistpl
add
pop
pop
mov
es
mov
push
inc
and
loop
repz
dec
outsb
xchg
aas
mov
and
je
and
fwait
inc
dec
fwait
shl
stos
cs
add
mov
adc
inc
sub
mov
jae
iret
pop
cmp
popa
cmp
aad
out
cmp
loop
push
push
xor
dec
mov
push
je
test
sub
mov
shll
jg
dec
scas
mov
or
inc
mov
mov
add
xchg
enter
sbb
xchg
cmpb
mov
cmp
or
aaa
inc
lcall
sarb
mov
popa
dec
imul
mov
test
pop
or
cs
mov
push
sti
add
add
sub
repnz
out
sar
movsb
push
and
lock
outsl
shrl
aaa
in
rorl
push
dec
lock
or
ja
adc
dec
outsb
loopne
pop
add
xor
into
ret
cs
int3
pop
cmc
mov
xchg
xor
sub
jecxz
mov
data16
pop
testb
push
test
cmp
jno
lock
jo
pop
pop
mov
add
cmp
sbb
add
add
pop
mov
movsl
fmull
mull
mov
jle
test
mov
inc
js
jecxz
cli
imul
outsl
mov
int3
ja
negl
pop
adc
out
outsl
inc
cli
jae
mov
outsb
jne
mov
add
pop
pop
xor
mov
fadds
or
repz
jmp
pop
adc
test
sarl
or
xor
and
lret
adcl
ljmp
mov
jb
out
aam
dec
adc
test
add
jns
pop
pop
jge
mov
xchg
nop
and
xchg
insl
mov
clc
pop
add
mov
lcall
dec
outsb
jl
lret
push
pop
les
sub
out
test
mov
dec
inc
add
std
fdivrl
loopne
jne
cmp
les
pop
loop
shrb
es
dec
pop
jecxz
fsubr
insb
insb
popa
sahf
jp
xor
repnz
in
mov
es
mov
or
sti
mov
ss
cmp
loop
sahf
idivl
cmp
lret
xor
cmpsl
xchg
into
sub
cmp
push
test
shlb
inc
mov
enter
sub
je
test
rorl
or
adc
jle
test
cmp
mov
dec
xor
mov
clc
sbb
das
jb
sbb
shrb
lahf
pop
cwtl
push
push
cmp
lods
xor
es
or
push
lea
mov
cmp
sbbb
mov
pop
out
imul
dec
out
ja
mov
inc
scas
cmp
xchg
mov
fldenv
pop
jg
mov
or
sub
cwtl
sbb
stos
sbb
loope
lods
mov
iret
adc
mov
imul
mov
jmp
enter
shl
rclb
cmpsl
int
jo
push
sub
les
lods
adc
test
out
inc
add
icebp
shll
out
push
jbe
push
aam
out
mov
call
pop
les
cwtl
cld
iret
mov
cs
sti
mov
adc
iret
xor
enter
and
aas
cmp
int3
jb
dec
mov
cmp
call
popf
fdivr
ficomps
dec
cmp
loope
mov
jnp
arpl
pop
mov
sbb
loop
pop
cmp
loope
les
jns
mov
xchg
and
mov
mov
dec
xlat
aas
inc
cmp
sub
adc
sti
sub
loop
fmul
and
das
add
add
arpl
and
stc
and
pop
sbb
arpl
mov
xor
mov
test
dec
ss
mov
add
inc
cmp
into
cli
adc
xlat
fstpl
enter
inc
ja
mov
int
lock
mov
out
cwtl
ds
push
adc
push
fidivs
jmp
dec
xchg
ret
inc
xchg
into
xchg
inc
adc
jbe
push
xor
aas
cmc
add
std
cld
loop
loop
rclb
push
jmp
adc
inc
cltd
popa
rcrl
ficomps
out
pop
sub
mov
mov
jmp
daa
idiv
fsubr
push
int
mov
ljmp
inc
add
ja
sahf
mov
fmulp
loop
outsb
clc
aam
cltd
xor
and
stc
sbb
ss
dec
decl
sbb
push
sbb
and
lock
lock
loope
or
js
xchg
fcoms
or
mov
lret
std
adc
roll
cmpsb
xor
shlb
outsl
lds
sbb
mov
je
outsb
scas
lds
cs
add
aaa
mov
xor
cmp
hlt
popf
dec
sub
dec
pop
pop
dec
inc
fistl
jae
cmp
rorl
pushf
lahf
testb
cmp
pop
dec
sbb
xchg
or
push
addr16
xchg
rcr
addr16
or
pop
push
loopne
pop
sub
out
inc
inc
mov
lock
inc
out
or
cli
mov
addl
and
cmp
and
push
das
pop
cld
pop
xchg
outsb
inc
js
dec
jae
mov
sahf
stos
add
pusha
cmp
out
loop
push
inc
pop
lcall
daa
test
in
das
insb
adc
push
push
sub
jae
into
cmp
cmc
push
lahf
pop
rcll
add
mov
mov
xchg
jo
jns
jne
push
fcompl
int
mov
mov
out
pop
and
push
cmp
dec
jmp
idivb
mov
mov
es
ret
push
jge
xor
outsl
jo
xor
out
lods
pop
push
jmp
jle
lock
es
lds
inc
add
jge
ficomps
aas
loop
mov
cmp
js
mov
xchg
dec
popa
mov
fisttpl
pop
inc
jle
cmp
cmc
push
popa
dec
push
lret
test
xor
shlb
jl
outsb
cli
lahf
push
scas
sub
cmp
inc
or
xor
imul
cmp
scas
dec
add
push
inc
stos
aad
push
mov
adc
out
adcb
mov
jmp
push
push
jo
aas
pop
dec
jae
push
clc
xchg
and
cmc
movsb
stos
mov
dec
lret
aad
pop
insb
repz
mov
test
insl
sub
adc
sbb
lds
or
or
fwait
insl
cmp
in
cmp
push
sti
lods
mov
pushf
sahf
gs
jp
jl
cmp
cli
push
and
sti
int
sub
dec
out
mov
xchg
fisubrs
add
ret
and
cmp
adc
inc
sahf
lods
mov
and
jno
sti
pop
pop
mov
add
mov
lea
cmp
sub
loop
or
out
loope
popf
inc
pop
cmp
xchg
pushf
inc
lahf
movsl
push
pop
outsb
mov
xchg
inc
cmp
add
push
mov
fists
xchg
cmp
loope
lods
arpl
andl
xchg
add
adc
mov
jecxz
mov
clc
cmpb
rorl
cmp
cmp
lea
adc
mov
and
adc
adc
xor
inc
mov
int
in
and
das
add
mov
decl
mov
das
leave
scas
arpl
and
pop
in
push
inc
bound
loopne
add
ja
inc
std
pop
std
std
dec
cmpl
movsl
push
jle
adc
mov
fs
mov
pop
cmp
sbb
dec
rclb
movsl
sbb
inc
inc
mov
es
fsubl
xor
sub
xor
lahf
int
pop
inc
mov
jbe
or
mov
xchg
clc
and
sub
rorl
stos
cmp
pop
or
mov
sahf
test
push
xor
arpl
orb
std
push
decb
or
daa
fwait
cmp
dec
xor
out
mov
sub
jbe
movsl
add
leave
sub
movsl
mov
pop
lods
mov
call
pop
lret
repz
sti
jle
jae
movsb
or
loopne
cltd
mov
dec
adc
xor
enter
enter
nop
jno
int3
mov
mov
leave
inc
es
mov
mov
jns
push
or
xor
adcb
mov
pop
dec
sbb
add
movsl
adc
testl
mov
lcall
sbb
insb
int
inc
sbb
int3
sub
mov
sub
stos
out
add
jecxz
xor
and
mov
jle
sbb
repz
xor
add
and
scas
arpl
inc
in
test
shr
pusha
xor
mov
fsubs
cmp
insb
subl
aam
and
icebp
or
sub
adc
sbb
imul
adc
int3
inc
push
jmp
adc
push
xchg
pop
xchg
jnp
mov
push
aad
xchg
pop
fidivl
mov
aam
test
pop
xchg
sarl
lods
mov
out
loopnew
ss
sbb
popf
loope
test
aam
add
in
aad
push
data16
mov
jnp
lea
adcb
mov
cltd
pop
pop
and
mov
std
je
pmaxsw
daa
aas
idiv
stos
xchg
fstps
inc
cmc
mov
sti
iret
mov
lcall
push
push
sbb
aas
adc
jno,pn
leave
xchg
call
mov
mov
in
fmull
dec
leave
adc
fisttpl
and
sbb
lock
pushf
add
jle
jmp
or
aas
add
lods
pop
xchg
aas
and
out
out
mov
es
dec
shll
mov
icebp
aad
mov
sub
dec
aam
rcrl
fcomi
pop
jmp
mov
dec
xor
movsl
xchg
or
cmp
filds
xchg
push
mov
mov
xchg
sub
in
push
dec
in
hlt
sbb
lcall
add
outsl
arpl
and
rcll
pop
jno
mov
xor
add
movsl
jmp
jle
pop
jae
pmulhuw
icebp
jl
mov
cmc
cmp
aaa
pop
jecxz
fcoml
adc
or
hlt
mov
push
cmp
push
and
pop
mov
in
out
push
popa
xor
pop
aas
inc
icebp
inc
sti
addr16
testl
arpl
ja
adc
cmc
inc
cmpsb
add
dec
addl
loope
iret
sysenter
pop
mov
subl
push
xchg
dec
ret
mov
mov
std
loop
xor
scas
pop
pop
push
fwait
pop
in
loop
xlat
pop
jl
repz
jno
fldt
xchg
cmpsb
inc
and
adc
adc
js
scas
push
dec
in
adc
xor
fld
and
xchg
xchg
pop
mov
mov
subb
test
icebp
stc
lahf
xchg
mov
cltd
cmpsb
cmp
mov
or
sub
fs
inc
out
sbb
dec
push
cmp
je
test
arpl
adc
sub
lcall
cmp
lahf
imul
add
rorl
fbld
scas
movsb
out
jne
fldenv
data16
in
rorb
dec
xor
xchg
xlat
outsb
add
inc
adc
ret
pop
bnd
lahf
movb
out
add
jg
adc
pop
xchg
popa
adc
dec
jge
fidivrs
rorl
mov
jp
mov
add
mov
ss
cmpsb
jl
into
insb
jns
pcmpeqb
add
orl
push
std
cld
pop
jl
nop
sub
mov
pusha
scas
movsb
mov
cmc
mov
lods
cwtl
into
std
sub
inc
pop
in
add
or
dec
test
testl
jp
cmp
lcall
cwtl
add
xchg
xor
dec
xor
mov
mov
pop
ljmp
push
pop
cmp
mov
cmp
push
cli
cmpsl
push
mov
cmpb
ss
mov
lods
cli
pop
dec
movsl
in
imull
aad
or
dec
fldenv
dec
xor
in
or
mov
gs
data16
leave
insl
sbb
orl
sbb
fidivrl
and
pop
insb
inc
mov
adc
lret
cmp
out
xor
add
iret
mov
xchg
imul
add
and
sbb
cmpsb
pop
inc
addl
xor
push
xchg
movsl
dec
push
jle
dec
ret
loope
aad
in
mov
mov
xchg
cmp
pop
iret
mov
mov
icebp
add
dec
sub
mov
jns
and
inc
add
xchg
xchg
dec
test
jp
fisttpll
pop
pause
inc
pop
xchg
test
notl
add
test
insl
pop
push
add
sahf
xchg
outsl
mov
jo
push
sub
je
push
fildl
mov
mov
jnp
stos
sub
adc
fwait
decl
add
lcall
shll
mov
jbe
mov
mov
mov
rcrl
add
cmc
push
fnstenv
call
xor
cltd
rcll
push
cmp
mov
scas
ret
stos
pop
add
or
mov
dec
repz
cmp
clc
js
add
inc
xchg
mov
cmp
clc
std
pop
orb
hlt
mov
pop
ret
push
pop
xchg
adc
mov
push
fs
movsl
lds
stc
fs
decl
loope
xor
add
mov
insl
popa
mov
xchg
cmpsl
outsb
cs
in
jb
aas
adcl
in
lret
fstpt
nop
mov
ret
test
push
and
xchg
pop
jg
cli
popa
subb
testl
test
xchg
das
stos
adc
std
das
lret
int
xor
aad
mov
sub
into
xor
test
xchg
mov
lock
push
pop
pop
mov
sbb
outsl
push
inc
mov
hlt
mov
xor
int
int
mov
data16
enter
cmp
test
push
mov
mov
push
cmp
bsr
dec
cmp
inc
cmpl
mov
jno
int3
dec
test
push
pop
loope
lock
push
xchg
xor
pop
dec
cltd
shlb
cs
dec
push
jmp
sbb
mov
mov
push
enter
add
iret
in
shrb
sub
cwtl
xor
jne
fimull
push
push
add
inc
inc
add
inc
iret
push
jno
shlb
fsubs
mov
call
test
xchg
imul
das
bound
pop
jl
push
and
xchg
icebp
jb
inc
sub
cmp
cld
insl
and
jne
mov
cli
pop
xor
out
push
fs
dec
sub
sub
out
jl
jle
ja
adc
lret
mov
pop
jb
leave
js
ss
adc
popaw
and
inc
dec
sbb
xchg
xor
fldcw
add
sbb
jae
lret
repnz
xchg
jge
pop
outsl
ss
xor
stos
das
loopne
lcall
or
cmp
jbe
repz
shrb
lret
add
arpl
adc
leave
popl
cwtl
popf
jle
adc
lea
inc
lea
mov
ss
lock
inc
lock
cmp
sbb
out
sbbl
push
and
pop
ljmp
xlat
xchg
mov
ss
imulb
lds
call
outsl
ret
cmp
xor
adc
mov
mov
leave
pop
je
icebp
adc
mov
pop
mov
int
jne
sub
in
sbb
daa
sahf
imul
call
pop
mov
aam
xchg
adc
push
xchg
pop
or
fbld
sub
dec
jae
arpl
imul
into
ficoml
aam
add
shll
ficomps
cwtl
dec
jg
popa
call
movsl
sbb
sbb
or
mov
sahf
push
rcrb
out
je
xor
xor
jb
and
pushf
fmull
mov
inc
mov
ds
xchg
repz
inc
push
in
push
jbe
or
or
sbb
mov
test
sarb
xchg
lods
movsb
sbb
jo
mov
outsl
and
jmp
cmpsb
pop
icebp
jge
rorb
outsl
in
stos
aaa
repz
ja
or
in
and
xor
icebp
mov
and
or
fs
stos
imul
xchg
andb
outsl
mov
nop
cmp
pop
xchg
mov
dec
inc
xlat
jnp
dec
inc
push
outsl
jns
pop
repnz
incl
cmp
std
hlt
xchg
sbb
mov
div
andl
and
mov
jno
sbb
jne
das
dec
fucomip
pop
sbbl
inc
inc
mov
push
mov
shl
sbb
sub
rol
movsb
cmpsl
lahf
test
mov
lret
insb
mov
sub
mov
psubd
and
scas
outsl
and
cmp
inc
sbb
les
movsl
neg
stos
out
mov
push
rorl
push
mov
inc
mov
pop
pop
ret
fwait
outsl
jp
cmp
test
movsb
in
jo
fidivrs
ja
ret
jp
xchg
xchg
imul
jmp
call
and
jo
shl
pop
js
xchg
mov
push
jmp
push
mov
cmp
and
in
mov
jp
jnp
loopne
mov
aaa
sub
dec
mov
icebp
cmp
jne
stos
clc
decb
mov
enter
sbb
in
xsavec
pop
adc
xchg
jle
inc
jo
pop
in
lret
mov
dec
movsb
out
mov
lret
fiaddl
and
filds
mov
xchg
xor
inc
inc
xlat
jecxz
lods
mov
cmp
in
sub
cli
xchg
cmc
xchg
dec
dec
jns
mov
aaa
shrb
fmuls
or
jge
inc
int
ljmp
aas
dec
pushf
cmp
mov
sub
int3
shll
pushf
mov
adc
inc
pop
imul
jo
jge
es
jne
sub
sbb
stos
stos
adc
mov
cmc
push
sbb
pop
aas
push
xchg
jp
pop
bound
mov
decl
call
clc
mov
sbb
dec
lock
push
es
scas
jge
pop
pusha
repnz
pop
ljmp
push
leave
cmpb
mov
xor
stos
cmpsl
jge
xor
test
fnstenv
and
xor
inc
or
mov
les
jge
aam
sbbl
jns
fisubrs
and
repnz
inc
int
pusha
repnz
ret
imul
aaa
pusha
lods
pop
fwait
and
add
inc
adc
push
fdivrl
push
mov
clc
loop
jle
out
sbb
hlt
bound
in
fdivl
push
jns
bound
bndcu
mov
test
loope
adc
aaa
mov
idivb
cmp
push
mov
cmc
cli
jge
scas
inc
shll
inc
pop
lahf
idivl
movsb
jb
rol
xor
push
js
lods
xchg
pop
xchg
xchg
into
ficomps
in
mov
shlb
xor
mov
movsl
aam
bound
loope
cmc
aas
lods
mov
loope
pop
aad
add
fsubs
test
cli
push
insb
popf
imul
cmp
sbb
mov
jp
sbb
mov
mov
lods
push
int
or
push
inc
scas
iret
add
adc
rorl
das
push
xlat
push
das
rorb
imul
mov
xchg
hlt
movsl
shlb
imul
jo
outsl
and
scas
push
cwtl
mov
lods
sub
ret
and
js
repz
dec
shll
add
push
cmpsb
mov
ds
and
lea
dec
pop
pop
sbb
hlt
lahf
push
and
sub
xor
hlt
push
mov
loop
orb
jno
popa
out
pusha
insb
add
lods
std
lret
insb
rcr
adc
enter
xchg
jnp,pt
in
xor
mov
sbb
pop
push
std
or
inc
and
shrl
out
mov
aad
lcall
add
push
pop
mov
sarb
in
and
pop
pop
scas
jae
cltd
jno
sbb
adc
push
out
cmp
ret
cltd
repnz
jb
mov
adc
and
outsb
push
jne
dec
xchg
sub
lods
push
mov
cld
sbb
scas
lods
add
movsb
xchg
jno
sarl
jb
dec
jno
mov
leave
lret
sub
jbe
bound
or
and
ret
shl
fsubs
ficompl
cwtl
pop
clc
insb
push
imulb
mov
pop
push
sbb
test
sbb
call
jle
shl
push
repnz
add
insb
lret
in
out
xor
imul
ds
sar
inc
mov
mov
imul
inc
jne
and
movsl
in
cmpl
cmp
ss
call
out
pop
loop
cmpsb
dec
mov
mov
inc
pop
jl
fisubrs
jge
out
int3
test
scas
push
and
push
imul
loopne
mov
imul
out
out
imul
pushf
dec
popa
sub
or
subl
mov
sbb
inc
pop
sar
cmp
js
test
add
cmpsb
insb
adc
jmp
aas
push
sarl
cmp
movsl
xor
sub
mov
mov
jnp
gs
pop
mov
mov
jg
cmc
pop
rcrl
and
mov
xor
sub
ds
inc
lcall
stc
xor
lret
pop
adc
scas
xlat
pusha
rcrb
mov
ljmp
xchg
mov
out
jmp
pusha
in
out
cmpsb
rcll
xor
cmc
sbb
je
jle
ficoms
mov
das
or
pusha
push
rcrb
cli
ret
movsb
lea
fnstenv
xor
push
out
js
inc
into
jp
jecxz
and
pop
cmp
out
hlt
arpl
jns
and
lds
movsl
popa
cmp
jbe
sbb
sti
cmp
cmpl
adc
imul
add
mov
and
pop
pop
enter
cwtl
jae
lahf
adc
gs
xchg
jbe
mov
aas
aad
test
in
or
mov
ljmp
lcall
xor
xor
cmp
lods
jns
ds
loopne
stos
stc
push
xchg
jns
and
nop
inc
pop
pop
je
or
push
pop
mov
mov
dec
xor
or
jl
fdivr
xchg
sbb
ljmp
sarb
aas
adc
dec
cmc
repnz
mov
mov
icebp
cmp
mov
jb
cmp
jno
loop
lcall
push
aam
das
aad
xchg
leave
aad
sbb
jae
push
rorl
fwait
jbe
inc
idiv
sub
leave
movsb
inc
mov
mov
add
int
dec
mov
cmp
insb
scas
cmpsb
and
mov
clc
mov
sahf
setns
cs
aad
arpl
repnz
f2xm1
test
xor
insb
pop
cmp
and
popa
jo
cs
cmc
daa
gs
cmpsl
pushf
or
into
popa
adc
in
js
pop
mov
or
adc
jbe
in
inc
mov
xor
dec
push
filds
jecxz
dec
cmp
and
mov
sbb
dec
push
mov
int3
sbb
dec
xor
mov
or
shl
in
sbb
or
sbb
iret
sti
icebp
jbe
or
dec
out
lea
mov
jae
push
push
or
data16
daa
add
push
push
jp
inc
adc
pop
inc
push
shr
inc
jge
pop
xor
push
xchg
addb
loopne
outsb
lcall
stos
arpl
add
fildll
inc
int
and
cltd
es
fcompl
call
push
insb
mov
xchg
or
addr16
sbb
or
sti
cmpsl
pop
jnp
xchg
leave
lea
or
das
inc
movsl
fdivl
clc
mov
dec
leave
pop
jae
pushf
and
xchg
pushf
clc
shld
ja
es
pusha
inc
mov
rcl
mov
xor
xchg
ljmp
ret
rclb
stos
out
sub
repz
push
popa
or
jmp
inc
push
inc
fcoms
ret
xchg
in
sbb
dec
mov
add
call
cld
stos
dec
push
cli
mov
rorb
popa
dec
mov
xchg
and
mov
sahf
xor
cwtl
mov
pop
mov
dec
mov
dec
push
push
sbb
test
adc
mov
push
mov
inc
mov
ljmp
adc
nop
add
adc
pusha
xor
jp
leave
cmc
cs
sbb
mov
xor
sbb
and
orb
xor
mov
sti
scas
mov
cmc
pop
mov
mov
or
dec
pop
push
andb
pop
aad
cmp
mov
pop
loope
mov
pop
movsl
sub
mov
scas
jl
rorl
push
jge
aaa
pop
test
fwait
fwait
rcll
jb
add
mov
push
aaa
mov
mov
fiaddl
inc
add
sub
mov
mov
add
enter
xchg
sub
arpl
pop
xor
and
push
test
fwait
cli
in
and
sub
jno
xlat
pushf
xchg
mov
fdivrs
push
add
insl
xchg
test
mov
mov
mov
inc
lcall
xlat
sahf
loopne
in
enter
cmp
and
dec
pop
mov
fs
sub
insb
nop
sub
xchg
in
jns
inc
daa
stc
mov
dec
lods
mov
mov
add
jecxz
iret
adc
push
push
aaa
jae
dec
fistpl
xchg
push
cmpsl
popf
int3
movsl
lds
js
mov
cmp
jno
daa
fisttps
in
loope
pextrw
mov
push
mov
in
ret
mov
mov
outsb
pop
mov
inc
jmp
ljmp
inc
pop
in
jmp
add
inc
dec
lcall
sbb
push
pop
sti
xchg
cwtl
out
lret
dec
pop
pop
lds
nop
je
adc
imul
movsl
aaa
xor
xor
mov
mov
loop
pop
iret
xchg
mov
xchg
test
cmpsl
shll
rep
fmull
test
and
ds
cmp
pop
sub
push
flds
adc
xchg
or
or
aas
test
lods
pop
out
pop
movsb
dec
daa
inc
push
cmp
adc
jge
add
mov
sbb
mov
jge
xlat
daa
mov
insb
adc
movsb
add
faddl
lret
inc
dec
hlt
inc
mov
fmul
pusha
lcall
mov
std
adc
js
decl
push
jo
test
into
pop
test
out
in
loopne
or
fs
bound
mov
mov
je
adc
mov
mov
clc
cwtl
popa
jl
push
inc
icebp
adc
xchg
mov
jecxz
ret
xlat
add
add
cmp
lods
xor
sub
cmc
dec
mov
cwtl
shlb
test
adc
mov
ret
movsb
adcl
mov
or
aad
add
aas
daa
mov
sbb
push
das
xchg
insb
push
jno
imul
into
jp
inc
and
adc
enter
in
cld
in
sub
pop
fildl
inc
arpl
or
fiadds
jmp
out
roll
fdivr
push
stc
ret
movb
push
mov
test
sub
mov
push
aad
test
inc
or
adc
bound
mov
repz
pusha
adc
cmp
cltd
mov
aas
inc
ret
mov
cmp
adc
movsb
sbb
xor
aas
mov
or
adc
mov
mov
add
lock
push
pop
das
es
movsb
xorl
xchg
adc
sarb
dec
fdivl
inc
mov
mov
lcall
mov
ror
in
xchg
mov
xor
test
mov
popl
mov
in
fsts
and
cmp
sbb
loope
les
sub
mov
jb
dec
inc
nop
movsb
mov
add
sbb
in
out
addl
cmp
mov
dec
outsl
cli
mov
xor
or
xchg
stos
minps
mov
pop
push
cmp
cmp
outsb
lret
insl
push
ret
add
jle
sbb
data16
add
adc
ret
cs
pop
nop
js
out
shlb
hlt
lcall
inc
aaa
ret
jmp
cs
xorl
aas
cmp
dec
lcall
lock
add
test
stos
mov
shl
adc
and
mov
aam
and
mov
inc
push
cs
push
sbb
cmp
in
xchg
mov
mov
push
stc
fidivrs
movsb
mov
lea
fcoms
subb
outsb
fimuls
adc
cmp
sub
cmp
cmc
test
pop
adc
mov
jne
mov
scas
sub
inc
cwtl
lods
enter
in
ret
fnstenv
pop
incl
clc
outsl
cmpsl
inc
repnz
push
mov
hlt
rclb
out
sar
call
cs
xor
imul
sbb
addl
lods
movsl
jae
insl
mov
popa
or
scas
aam
jge
mov
stos
jo
push
fwait
addb
mov
cmpsl
scas
sub
fidivl
mov
loop
repnz
icebp
ss
in
xor
dec
mov
jo
fidivs
mov
enter
fcompl
and
das
or
out
loopne
dec
rol
pop
leave
scas
bound
dec
add
sbb
mov
jmp
add
scas
repz
ja
rolb
add
jne
jecxz
mov
outsl
imul
mov
in
xchg
xor
xchg
pop
pop
push
cmp
push
dec
pushf
into
stos
sbb
adc
and
bound
or
in
popf
xor
and
or
fstpt
jecxz
cli
add
xor
xor
add
mov
mov
inc
sbb
sbb
mov
inc
stos
aas
in
mov
idiv
inc
pop
js
inc
nop
jae
xor
mov
iret
sbb
cmpxchg
stos
rcr
lods
mov
jnp
enter
dec
push
push
push
outsb
into
loopne
lret
xchg
insb
push
aas
bound
jge
adc
movsb
flds
inc
or
fs
int3
adc
outsb
jne
lock
stos
add
sub
in
cmp
sbb
pop
add
sbb
push
pop
add
fs
xchg
inc
ljmp
mov
rorb
imul
push
mov
pop
shlb
loope
test
cmp
lret
scas
aam
lods
dec
xchg
and
add
pop
jle
call
ds
testl
fiadds
lcall
inc
and
addr16
and
pop
std
idiv
shrl
inc
subl
clc
leave
push
out
pop
test
int3
push
xchg
js
leave
int
inc
fnstsw
fimuls
pusha
add
push
jp
in
cltd
cs
xor
aam
xchg
adcb
cmpl
loope
arpl
imul
mov
mov
sub
loope
pslld
jbe
imul
sbb
shll
sub
fwait
sbb
lods
cltd
movsb
cmp
cmpsb
sbbb
mov
loop
inc
and
lods
mov
sti
mov
scas
adc
mov
lahf
dec
xchg
into
dec
pop
int3
jae
sub
ror
rcrb
cmp
loop
in
dec
fcoml
loop
test
cwtl
int3
xlat
xchg
and
inc
addb
pop
test
xor
lock
scas
xor
mov
push
fsts
or
jnp
mov
jecxz
push
jg
jp
and
arpl
mov
insl
lcall
stos
cmpsb
pop
movb
add
or
push
add
adc
shll
leave
jnp
xor
in
and
mov
ret
or
es
jle
mov
jle
mov
lods
jns
dec
jle
or
test
push
fnstcw
sbb
addr16
je
or
mov
enter
insl
push
inc
mov
dec
sub
cld
mov
insb
add
daa
cwtl
notb
xchg
rorl
jno
sub
pop
das
and
and
push
out
popa
xchg
cmp
jbe
ret
sahf
lea
int3
je
pushf
dec
addl
or
jle
xchg
popa
pop
lods
negb
arpl
jge
lcall
test
mov
andl
mov
jge
popa
jb
push
jecxz
push
insl
scas
mov
das
aam
cltd
mov
mov
xchg
xor
lds
les
and
sahf
imul
jb
mov
dec
movsb
sahf
mov
jmp
push
jae
rcrl
mov
xchg
sbb
daa
test
shlb
fs
pop
sbb
jns
xor
pushl
xor
xchg
out
shrb
aas
divl
mov
in
push
unpcklps
or
add
pop
and
lret
jg
mov
sbb
data16
mov
xor
dec
inc
rolb
or
xchg
aam
mov
unpckhps
aam
pop
lret
xchg
push
dec
aaa
test
mov
mov
jne
sbb
lret
mov
das
imul
pushf
mov
xor
dec
mov
in
xchg
leave
dec
mov
jo
into
int3
cmpsb
lea
cmp
push
jno
mov
je
rolb
xlat
add
aam
fstpl
mov
outsb
sbbl
enter
fwait
sar
mov
ja
stos
insl
lret
in
push
jg
pusha
or
in
aam
mov
pop
lea
outsl
inc
and
jp
inc
adc
shlb
in
mov
add
push
mov
and
fcomps
out
pop
inc
repnz
enter
stos
dec
lds
xchg
loope
sahf
sbb
mov
jno
imul
and
das
inc
jp
cs
sbb
stos
cmc
das
jnp
push
in
aam
adc
mov
push
dec
lea
inc
mov
ret
add
jl
fidivrl
sub
xor
push
mov
out
pushf
pop
mov
leave
add
mov
ret
and
and
xor
roll
xor
movsl
das
sub
gs
lcall
sub
mov
sbb
adc
fs
cwtl
popf
jae
jne
rorl
jo
dec
push
and
stos
add
enter
call
repnz
cmpl
and
lcall
out
push
aam
test
and
fwait
xchg
fisubrl
add
cli
sbb
sub
mov
outsb
outsb
mov
lret
es
push
mov
in
push
js
ss
pop
push
lds
add
push
fyl2xp1
and
imul
leave
push
insl
fs
sbb
test
fistpl
cmp
add
sub
xchg
rcrb
lret
jne
sbbb
cmp
aas
xchg
mov
mov
into
pushf
mov
dec
jle
pop
loope
mov
mov
in
in
xchg
mov
lods
hlt
jecxz
ds
pushf
dec
leave
cs
imul
push
fmull
js
sbb
adc
repz
icebp
mov
pop
aad
or
jo
daa
mov
mov
mov
sbb
push
pusha
lcall
into
daa
add
sbb
fistpll
in
js
xchg
out
jmp
pop
imul
int3
insl
int
cmp
xchg
mov
jo
mov
adc
imul
mov
xchg
iret
arpl
cmp
cmpsb
mov
dec
adc
push
shll
lock
sarl
mov
sub
lea
pop
sub
mov
fucomp
mov
sub
adc
add
jecxz
imul
sbb
xor
sub
dec
cmpsl
lahf
push
test
add
cmp
mov
add
popa
mov
cltd
jno
stos
loop
ja
push
sbbb
sbb
and
push
fisubl
sub
mov
cmc
lea
inc
in
test
push
sub
bound
dec
xor
jne
add
cmc
jb
sub
jg
cs
into
out
ret
fsubrs
sbbb
lock
jbe
sub
out
jg
push
jae
add
sbb
rorl
nop
and
inc
test
sbb
dec
shrl
and
push
or
loopne
dec
outsb
xor
mov
lea
fwait
xchg
sbb
mov
mov
in
inc
mov
or
mov
push
mov
sbb
mov
sub
das
lods
sbb
push
inc
sub
pop
nop
jp
lret
sahf
push
ss
xor
outsl
lcall
mov
fadd
xchg
mov
andl
add
xor
test
out
add
jno
dec
inc
repz
fadd
out
push
pop
adc
jbe
imul
and
xchg
mov
jge
inc
mov
std
mov
pop
sbb
mov
pop
mov
shl
dec
or
fwait
pop
testb
scas
aam
iret
mov
or
pop
xor
jno
pop
mov
push
mov
imul
jmp
nop
pop
xor
movsl
lea
mov
and
iret
loopne
js
jne
fxch
mov
push
inc
jge
mov
int3
xchg
mov
ljmp
and
rorl
fcoms
xlat
pop
neg
in
les
das
int
inc
mov
loop
and
add
mov
lcall
xlat
cmpsb
adc
fldenv
pop
shr
and
inc
dec
lods
push
add
and
mov
daa
lret
xor
cmpsb
bound
rcll
dec
cmpsb
and
scas
push
or
mov
fcomi
pop
inc
imul
mov
dec
push
pop
pusha
push
fistps
or
cmpsb
int
push
dec
lods
icebp
sbb
and
into
dec
lods
std
les
xorb
jae
push
repnz
cltd
sbb
add
xor
int
in
xchg
cmp
mov
fnstcw
xchg
add
jg
mov
lahf
ljmp
icebp
insl
jg
inc
in
add
pushf
fcmovu
call
clc
imul
mov
mov
mov
popf
mov
es
jl
push
mov
xchg
jae
loopne
aad
shrl
mov
push
test
insb
adc
mov
xlat
sub
clc
adc
xor
sbb
stos
loope
and
mov
test
sbb
out
sub
mov
mov
out
lret
dec
icebp
adc
fsubrs
ja
imul
mov
enter
xchg
jmp
std
lahf
scas
push
insb
push
mov
and
xor
lods
iret
and
sbb
and
jge
lret
std
cmp
inc
mov
lods
mov
test
sahf
cmp
pushfw
xchg
incl
jo
mov
jno
sbbl
xchg
je
inc
jmp
lods
in
outsb
mov
pop
fimull
jecxz
adc
rclb
into
rclb
cmpsl
insb
je,pt
mov
push
mov
sbb
add
or
loopne
pop
mov
push
lcall
test
cmpsb
pop
sub
cwtl
dec
in
jle
shl
insl
xchg
cltd
daa
shrl
outsb
push
ss
pop
sbb
adc
sti
adc
cli
mov
imul
mov
add
aad
dec
jmp
ds
ficomps
andl
hlt
or
dec
inc
jge
push
mov
mov
loop
jno
push
and
imul
inc
sbb
addl
and
mov
fimuls
stos
test
cmp
fnstenv
jmp
inc
mov
repz
jbe
inc
sub
sti
ljmp
fmulp
shll
loop
jmp
aas
fwait
cmp
push
in
xor
xchg
fisubrl
xchg
fcom
lods
sub
lcall
or
ja
push
mov
mov
adc
mov
mov
repz
sub
xor
xor
jle
sbb
sub
cltd
shrl
outsb
mov
mov
xlat
aam
mov
sub
shrb
stos
cmp
add
ds
or
idivb
pop
xchg
adc
scas
test
andb
sbb
inc
aad
pop
push
sahf
sbb
subb
pop
dec
pop
mov
lcall
lock
pushf
mov
jecxz
cmp
mov
jg
std
adc
sub
popf
fildl
leave
lods
pop
push
sub
add
cmp
es
daa
cmp
dec
fsubs
add
cltd
roll
jecxz,pn
mov
inc
cmpsl
adc
jle
andl
in
mov
fstl
shl
fidivl
inc
imul
jae
inc
cmp
test
hlt
and
scas
jl
aad
xchg
lcall
enter
inc
jg
loop
loop
add
jmp
adc
sub
test
es
pusha
pop
sbb
adc
or
cmp
sub
hlt
sahf
inc
imull
mov
cmp
das
das
out
pop
mov
cmp
push
and
xor
outsb
test
faddl
in
fildl
je
sub
icebp
cmp
arpl
into
in
mov
xchg
mov
sbb
lds
and
insb
fsubl
sbb
mov
dec
sahf
mov
jb
push
dec
or
sub
fmul
inc
ljmp
rcrb
es
pop
call
adc
lods
pop
insl
rcr
mov
add
neg
push
dec
je
push
int3
dec
inc
jbe
xor
iret
rcrb
aad
jae
sub
adc
xchg
sahf
outsl
or
dec
leave
test
push
stos
push
mov
jbe
add
ss
sbb
dec
dec
es
mov
call
xchg
test
mov
push
daa
ljmp
add
call
or
into
pop
inc
jp
repnz
fsubrl
in
inc
gs
sbbl
js
jle
cmpl
xchg
pushf
outsl
push
scas
dec
outsb
cmp
hlt
adcl
movsl
mov
outsl
mov
sarb
adc
cmpsl
xchg
jmp
gs
movsl
xor
imul
aad
inc
aas
push
stos
shrl
fdivr
dec
in
lea
xor
gs
mov
in
lock
mov
pusha
insl
sbb
mov
arpl
inc
pop
xchg
pop
outsb
adc
or
sub
sbb
dec
xchg
shrb
clc
call
dec
sub
repnz
push
and
xchg
sub
mov
push
xchg
call
and
imul
daa
enter
dec
ds
dec
cmp
in
cmp
scas
jmp
mov
int
mov
mov
das
or
repnz
jl
cmpsb
jb
pop
and
xchg
cmp
xchg
mov
add
out
inc
adc
int
xor
in
ficoml
xor
daa
repz
xor
jae
loop
xor
inc
sbb
loope
pop
mov
imul
xchg
dec
int3
fildl
jns
mov
add
xchg
sarl
dec
xchg
adc
in
jg
daa
or
repnz
inc
sbb
js
mov
push
lods
data16
add
jl
xchg
je
mov
popa
ljmp
aad
lret
adc
or
sbb
sar
jg
sarl
shl
inc
fcmovnu
push
push
add
pop
cld
lds
data16
jg
inc
jne
dec
sar
add
cmp
add
ds
ljmp
mov
cmp
loop
mov
addr16
aas
dec
sbb
aas
mov
push
sbb
std
lcall
stc
icebp
sbb
xchg
scas
push
and
pusha
mov
stc
dec
add
cwtl
lahf
adc
cmp
mov
imul
popf
cmp
push
adc
loopne
adc
sti
sbb
add
push
outsl
push
int
xor
dec
out
arpl
pop
aam
adc
outsb
pop
imul
mov
cwtl
rclb
jb
cs
xchg
push
inc
xchg
aaa
test
outsb
inc
pop
lock
add
pop
or
xor
decb
xchg
jle
or
mov
fs
mov
jb
pop
jecxz
mov
repz
push
sbb
dec
jmp
rcl
sbb
inc
jl
adc
aam
stos
pop
pushf
dec
push
sbb
cmpsl
dec
xchg
xchg
nop
cmp
cmpsl
sarl
stc
mov
imul
ret
dec
and
inc
gs
add
xchg
shrb
mov
add
push
sbb
jno
test
dec
imulb
lahf
pop
pop
mov
jnp
push
repnz
xchg
pop
mov
scas
je
imul
punpckldq
sub
mov
aad
mov
flds
pop
or
jp
out
movsl
outsb
stos
lods
mov
ret
cmc
test
imul
frstor
aas
mov
nop
push
pusha
mov
pop
inc
adc
cwtl
movsl
adc
and
mov
dec
lret
jno
pop
inc
sbb
in
cmp
add
aaa
pop
repz
fadd
mov
pushf
or
loopne
push
in
lcall
sbb
mov
push
sti
clc
repnz
sub
icebp
test
mov
movsb
xchg
enter
sarl
pop
inc
dec
push
sub
mov
push
fcompp
cmpsb
sub
je
and
lods
in
push
aaa
mov
mov
and
dec
popw
dec
and
lea
dec
cmp
and
mov
xchg
jp
shl
or
pop
insb
in
out
out
sub
test
js
xor
leave
or
add
ret
inc
in
mov
ficoms
xchg
pop
aam
pop
push
sbb
mov
mov
pop
js
sbb
ja
paddd
sub
sub
mov
mov
fistpll
arpl
mov
adc
xor
iret
pop
mov
inc
mov
xchg
insb
xchg
inc
pushf
pusha
cmp
pop
mov
or
jecxz
loop,pn
cld
icebp
movsl
xchg
inc
inc
in
icebp
jne
ljmp
je
iret
mov
mov
and
xor
insl
inc
xor
jecxz
or
adc
nop
ficompl
pop
cmpsb
pop
push
and
ja
sahf
in
cld
insb
movsb
jne,pn
test
ja
pop
xorl
loope
pop
das
aam
mov
ret
sub
jecxz
sub
push
cmpsl
std
push
jnp
xlat
dec
ja
stos
push
mov
test
jg
cltd
call
push
sbb
or
cltd
inc
movsb
sbb
lcall
test
adc
sarb
mov
test
clc
xchg
add
pop
out
jge
fcomp
out
sbb
das
fiaddl
push
cmpsb
insl
dec
inc
iret
cmp
sbb
pop
lods
mov
jecxz
out
jbe
xor
add
pop
or
and
pop
mov
out
lods
mov
or
sbb
clc
mov
cmp
xor
inc
adc
outsb
bound
iret
push
lods
les
outsb
xchg
pop
xor
xlat
sbb
stos
jmp
roll
jb
ljmp
out
jno
xchg
cltd
push
dec
das
fsts
sbb
outsl
jl
nop
lods
movsb
cmp
jle
lods
sbbb
lcall
sub
push
mov
jae
cmp
cmp
sar
push
enter
mov
mov
test
xchg
repnz
out
or
xor
jg
jmp
data16
dec
push
std
mov
lea
and
fistpl
mov
sbb
popf
adc
out
push
mov
mov
jno
mov
push
inc
and
lds
pusha
push
pop
call
jle
ficompl
jmp
inc
mov
jo
sbb
pushf
jns
fsubl
hlt
or
mov
and
sub
inc
inc
daa
testb
jmp
adc
sbb
je
push
push
jbe
lret
call
repnz
insl
pop
mov
lahf
sbb
nop
ffreep
push
sub
or
add
cli
out
in
adc
mov
mov
cmp
mov
fxch
int3
jnp
mov
and
xor
inc
pop
and
nop
sub
inc
xor
jg
std
jnp
mov
sahf
clc
mov
imul
fldl
dec
jb
fs
aas
jmp
mov
movsl
in
scas
scas
int
xor
imul
mov
sub
lahf
test
xchg
test
dec
outsb
incl
mov
aas
or
adc
sub
mov
lcall
mov
cltd
ljmp
popl
pop
xchg
rolb
popa
adc
or
jl
push
mov
or
adcl
inc
repz
pop
sub
xor
mov
out
data16
mov
lods
neg
mov
adc
sbb
xlat
ret
push
insl
sbb
scas
dec
js
mov
jp
enter
xor
lds
push
in
loopne
jmp
test
stos
sub
and
lods
mov
lcall
sti
mov
push
pop
jo
int
sahf
daa
movsl
scas
jecxz
sub
lret
out
fildl
xchg
sti
pop
test
test
ret
push
xor
xchg
ds
xchg
or
aam
in
aad
and
sub
jl
aas
dec
jae
dec
lods
inc
adc
sub
inc
push
popf
dec
fidivrs
popf
in
sbb
cmc
mov
lret
inc
jne
mov
or
mov
xchg
xor
pop
xchg
mov
sub
mov
push
or
sarl
fs
pushf
mov
aam
pop
adc
xor
ss
adc
in
popf
pop
fucomip
int
sahf
xchg
jbe
insb
ret
aaa
jl
and
mov
xchg
mov
rclb
xchg
fnstcw
leave
push
les
mov
sub
pop
popf
jl
jb,pt
sub
lea
sbb
xchg
test
inc
stos
lock
pop
popa
cmp
scas
loopne
int3
je
dec
adc
in
cmp
dec
jb
mov
addr16
insl
pusha
lcall
jmp
cltd
jne
mov
xchg
testb
jl
xor
addr16
bound
mov
dec
jg
xor
mov
sbb
mov
xchg
and
jnp
mov
xor
das
test
in
adc
jg
xchg
adc
jle
mov
aaa
scas
dec
inc
mov
cmc
adc
popf
stos
aad
mov
icebp
jmp
mov
xorl
pop
mov
addr16
dec
test
rcl
mov
jle
mov
icebp
daa
pop
xchg
insl
lahf
inc
mov
xor
shr
cltd
sbb
jl
and
xor
cmp
sahf
dec
and
jecxz
ret
cmpsb
xchg
xchg
xor
outsl
and
aad
leave
mov
push
lea
push
addb
stc
sbb
mov
add
jo
adc
mov
data16
pop
rep
nop
push
and
out
mov
orb
inc
xor
dec
mov
pop
das
push
scas
mov
jb
loope
mov
adc
push
inc
pop
jnp
leave
in
lea
testl
repnz
adc
sbb
inc
xchg
fs
sub
cmp
pop
mov
cmpb
and
std
aaa
add
int3
test
cmp
sar
pop
or
xor
mov
xor
or
jmp
push
push
pusha
adc
xchg
sub
sbb
ficoms
sbb
ret
sbb
and
push
pop
xchg
gs
daa
int
test
scas
dec
insl
xchg
cmp
dec
mov
mov
int
fsubs
nop
or
shl
xchg
call
pop
and
mov
mov
movl
cmp
mov
xor
jecxz
mov
mov
inc
lea
or
push
push
mov
rol
mov
mov
rorl
lret
add
or
sbb
inc
mov
clc
ret
gs
ja
jmp
loop
cmp
clc
xor
push
fld
repnz
nop
dec
lea
cmp
or
ljmp
cwtl
xlat
imulb
sti
aaa
and
or
push
mov
xchg
mov
fwait
add
inc
ret
call
add
in
repz
in
inc
lock
jp
call
loop
mov
jne
add
ss
adc
inc
divl
cli
dec
lock
jns
in
mov
std
xchg
xchg
mov
cmc
arpl
add
sbb
les
pushf
dec
ret
add
xchg
sub
js
stc
repnz
ret
jg
add
das
inc
or
jnp
mov
mov
push
cmp
gs
out
push
cmp
pop
jns
mov
jmp
movsb
int
nop
test
xor
sub
ljmp
idivl
testl
mov
xlat
cmpb
cltd
pop
loope
jno
pop
out
and
sub
lock
fwait
and
jb
mov
sarb
pop
mov
lahf
ds
push
sbb
lahf
clc
jne
mov
out
pop
insl
cmc
dec
test
cwtl
jns
xchg
and
sbb
insl
mov
bound
fmuls
inc
lods
inc
jl
mov
jo
lret
jmp
jp
inc
xlat
arpl
add
pop
pop
fidivrl
out
pop
std
adc
mov
jnp
inc
inc
push
outsl
xchg
jo
inc
scas
mov
or
lea
lret
mov
push
lret
fwait
test
mov
js
push
movsb
out
out
aas
push
adc
pop
lret
outsb
adc
cmpsb
adc
jns
ljmp
cmp
sub
rorb
lcall
lea
push
popf
cwtl
cli
stos
add
xchg
mov
inc
inc
leave
into
xor
xchg
dec
loop
inc
sub
adc
test
and
xorb
adc
aad
inc
mov
sub
or
and
push
dec
jge
rcl
mov
jp
nop
cmc
push
out
push
bound
or
jg
jno
xchg
or
movsb
adc
repnz
jecxz
adc
in
sbb
ja
jle
sbb
int
inc
frstor
inc
je
aas
gs
cmp
outsb
add
ja
inc
mov
outsl
mov
popa
stos
mov
dec
pop
sub
xor
mov
ret
push
jne
jecxz
imull
cmp
sahf
or
adc
cmp
pop
sbb
pop
iret
mov
fwait
mov
sbbb
jns
dec
lret
pop
stos
int
dec
leave
xor
lret
adc
adc
shlb
add
sub
push
aam
jmp
xor
mov
mov
aam
pop
jmp
outsl
mov
in
pushf
mov
inc
pop
inc
mov
aas
jne
mov
sarb
lcall
dec
ljmp
fsubrl
daa
cmc
add
in
cmp
jbe
xchg
rol
pop
inc
or
bound
pusha
movsl
outsb
jmp
in
or
xchg
rolb
xchg
jnp
je
jbe
or
sbb
enter
inc
mov
xchg
inc
cltd
rcll
es
lret
pop
push
in
int
dec
add
loopne
xchg
test
popf
pop
mov
imul
sub
cltd
jp
out
mov
push
mov
mov
and
mov
std
mov
xor
clc
cld
pusha
fnstcw
cmp
int
sub
mov
mov
lods
js
into
insb
xlat
fistl
pop
je
pop
iret
adc
jge
es
orl
sub
out
pop
or
icebp
sbb
stos
mov
stos
push
mov
fs
push
cs
leave
ljmp
mov
jne
int
cmp
out
pop
push
fistl
loopne
mov
fucom
sub
call
test
pop
cwtl
jns,pt
ret
mov
je
pop
out
or
add
push
xchg
push
push
adc
gs
fisubl
xor
xor
loope
test
push
or
push
xchg
jnp
data16
repz
sub
out
outsl
lahf
add
jp
or
jecxz
in
inc
dec
mov
imul
ret
cmpsl
mov
add
mov
cmp
add
jl
adc
cli
std
xchg
fsubrl
cld
fisubrl
and
pop
adc
popf
test
xor
fiadds
test
test
negl
lahf
mov
in
lock
addl
xor
inc
lret
arpl
jae
pop
inc
mov
push
fcoml
fs
shr
pushf
rol
imul
and
test
sub
push
aad
out
xlat
xchg
lahf
std
mov
stos
pop
mov
daa
or
mov
xchg
sbb
rcll
adc
xor
scas
jge
shl
and
add
ret
lds
xchg
inc
inc
push
addr16
mov
mov
pushf
cmpsb
jecxz
or
jecxz
mov
inc
repz
jl
push
ret
xor
and
inc
std
dec
fadds
push
aas
sub
push
dec
out
lods
jle
jl
add
push
xchg
mov
push
and
sarb
mov
push
je
orl
cmp
js
bnd
loop
xor
outsb
jmp
mov
jo
repnz
xchg
mov
aam
test
cmp
mov
notb
push
inc
cmpsb
mov
push
add
cli
add
into
adc
aas
xor
cltd
ds
or
sub
es
fwait
or
out
push
push
lahf
adc
xor
jmp
mov
inc
add
jbe
mov
mov
xor
cmpsl
cld
cmc
add
mov
push
pop
pop
mov
cmp
sbb
imul
scas
ljmp
add
js
pop
aaa
pop
jb
orl
aaa
popf
jle
mov
mov
sbb
pop
loop
orl
add
sahf
mov
dec
cmp
xchg
outsb
js
adc
arpl
or
and
pop
sahf
rorl
cltd
xor
jg
mov
pop
scas
call
xchg
cmp
jg
stos
outsl
adc
xor
xchg
jno
cli
ljmp
data16
scas
iret
insb
mov
jne
stc
xchg
stos
ret
lret
jmp
cld
fldcw
or
push
sbb
cmc
pushf
push
jmp
or
dec
xor
lret
add
jno
lahf
addr16
test
pop
pop
jmp
cmp
add
lods
sbb
sbb
adc
out
aaa
xchg
sbb
push
lcall
andl
ljmp
mov
pop
add
mov
jge
cmp
add
push
scas
add
arpl
dec
pop
jb
cmpsb
fmull
lret
inc
es
loopne
adc
test
jne
mov
repz
mov
rclb
in
lret
test
jne
sub
push
sti
and
das
mov
sbb
sbb
loop
stos
lds
fs
mov
jecxz
jne
adc
rolb
arpl
mov
sti
jl
sahf
xor
cwtl
ret
div
sbbl
adc
pop
idivl
mov
in
jb
push
mov
iret
dec
pop
fbld
fisubrl
daa
stos
insb
gs
test
test
dec
cmpsb
push
push
dec
sbb
lret
mov
fstpt
pop
pusha
mov
pop
pop
xor
imul
js
mov
popa
lret
pop
inc
pop
int3
pop
mov
mov
adc
int
sbb
mov
jp
in
push
fistl
jno
sub
shlb
out
out
popf
sub
lret
daa
pop
adc
xchg
stc
sbb
mull
fisttpl
xlat
push
in
les
in
dec
out
imul
cwtl
mov
loopne
loope
fisubl
movsl
mov
push
add
mov
add
push
push
and
and
cmpsl
ss
fistpll
stc
notl
or
pop
push
add
xor
push
mov
aam
or
dec
pop
jmp
push
les
outsl
adc
pop
loope
lcall
stos
dec
mov
andl
add
hlt
fwait
cmp
mov
push
sub
push
and
push
and
jp
xchg
repnz
enter
push
or
or
pop
jp
pusha
test
addr16
imul
lret
roll
scas
lret
in
xor
mov
fidivrs
sub
aaa
sub
cmp
scas
pop
push
sbb
mov
xchg
xor
or
iret
push
or
dec
lret
mov
pop
lods
cmp
xor
insl
arpl
mov
aaa
fistpll
nop
xor
inc
lods
pushf
call
dec
cli
loopne
pop
mov
mov
movsl
lea
outsb
xor
scas
das
cmp
mov
jbe
shrl
data16
stos
lret
sub
pop
testl
sbb
adc
push
loope
or
xchg
insl
pop
outsb
xchg
jne
mov
lds
inc
or
leave
mov
push
push
insl
in
rcrb
stc
sub
sbb
into
xchg
mov
insb
lahf
sbbl
popf
fwait
push
xchg
push
test
sarl
iret
and
sbb
adc
sbb
xchg
pop
ret
repz
movsl
mov
ret
xchg
jae
mov
mov
and
add
add
or
sarb
lret
sub
mov
or
lcall
rcrl
enter
in
dec
adc
je
ficomps
stc
aam
inc
leave
xchg
and
mov
rclb
jno
clc
add
sbb
sbb
push
cmp
std
dec
out
fs
and
daa
push
sbb
inc
jmp
jl
repz
cmpsb
sub
iret
mov
push
pusha
jecxz
stc
xor
pusha
jne
fdivl
mov
sbb
mov
int
sar
es
jmp
jl
mov
sbbl
ret
add
pop
xor
lock
push
xchg
hlt
push
cli
sub
sub
in
shrb
getsec
repz
mov
sbb
fildl
arpl
int3
cmp
bound
into
cmp
fidivrs
lcall
mov
mov
pop
dec
pop
dec
nop
inc
mov
and
xchg
cmpsb
addb
or
xor
cs
push
out
xor
in
inc
mov
test
cwtl
mov
shr
push
or
sub
ds
pop
xchg
sbb
ljmp
jno
jb
repnz
lahf
sbb
xor
scas
cmp
push
jns
addr16
cld
movsb
jno
xchg
das
xlat
jmp
in
push
xchg
xchg
in
repz
cltd
imul
fstl
mov
sbb
test
mov
stos
lock
lahf
sub
cld
fcmovnbe
adc
or
popf
inc
push
icebp
sub
lea
adc
push
test
jbe
dec
jo
adc
out
iret
je
mov
jno
add
inc
rcrl
sbb
lahf
in
add
daa
lcall
xor
mov
testl
jecxz
data16
orb
pop
mov
pop
pushf
adc
sbb
dec
shll
lods
xchg
lds
dec
cmpsb
mov
mov
ja
orb
mov
mov
sbb
xor
jb
lahf
push
mov
sub
fdivrl
ds
popf
inc
jbe
add
daa
mov
push
adc
jp
shrb
adc
pushf
mov
adc
jmp
sub
xchg
aas
int3
xchg
dec
inc
jo
lcall
dec
pop
loopne
push
mov
mov
mov
decb
jle
pop
aas
loope
nop
imul
and
jmp
movsb
ja
ret
xorl
sbb
sub
fcomps
lcall
adc
into
jle
add
iret
xchg
mov
icebp
mov
jne
or
sbb
cmp
add
and
push
and
mov
bound
sub
xchg
mov
push
inc
sub
pop
fs
test
out
jle
bound
int
stos
fwait
cmp
dec
cld
lret
push
scas
enter
pop
cmc
or
xlat
aam
lea
icebp
dec
xchg
jo
mov
push
push
dec
repnz
pop
enter
les
pop
lds
or
or
in
into
pushf
xor
ficompl
add
icebp
sti
xchg
std
aad
push
movsb
xchg
cmc
and
xor
jle
inc
cltd
fidivrl
das
push
je
lahf
movsb
xchg
mov
inc
cmpsl
repz
pop
addb
dec
push
lods
popf
outsb
cld
dec
xor
outsl
dec
xchg
push
push
notb
fdivl
add
andl
and
jb
xor
pop
push
inc
in
inc
lret
pop
clc
cli
xor
pop
push
push
add
enter
xor
jno
mov
out
mov
loopne
out
push
ror
pop
movsb
pmaxsw
adc
pop
pop
cltd
gs
mov
pop
and
mov
cltd
sub
push
xchg
pop
imul
sub
enter
push
into
jnp
ss
mov
jae
outsl
imul
sbb
jl
lea
insb
sub
xchg
gs
mov
mov
stos
xor
nop
sbb
pop
stos
lods
std
outsl
mov
test
rclb
xor
or
addr16
mov
mov
pop
xor
call
popa
mov
pop
mov
stc
jo
mov
ret
insb
data16
cmp
pop
and
sahf
add
std
cmpsb
and
bound
cwtl
cwtl
mov
js
jno
out
fimull
ret
jb
add
mov
dec
or
into
pop
or
xor
mov
jle
sahf
jne
add
and
mov
test
jmp
push
push
loope
sub
imul
fucomi
cmpsl
ret
pop
fcmove
pop
pop
or
adc
mov
jne
dec
xor
jns
aas
lock
xor
in
inc
pop
fwait
push
cmp
adcl
clc
push
push
out
ja
mov
xor
rcrl
lret
sarb
loope
addr16
adc
jmp
inc
push
sbb
push
js
jnp
mov
jecxz
inc
sahf
xchg
xchg
mov
pop
sbb
call
mov
push
cmp
imul
cltd
insb
inc
pop
pusha
call
adcb
dec
cmp
adcb
out
add
fmuls
call
imul
jno
mov
rolb
repnz
cmp
mov
loope
dec
daa
fwait
jns
cmp
repz
xor
shlb
or
mov
push
pop
sbb
xorb
int
mov
sub
popa
inc
fildll
and
mov
lret
mov
or
adc
add
mov
lcall
ret
pop
jnp
dec
shr
xchg
loop
push
arpl
pushf
imul
lock
pop
xor
in
mov
inc
and
fmull
iret
call
call
aam
push
stos
icebp
dec
lret
ja
loop
inc
xchg
xchg
pop
push
in
or
mov
shlb
int
pop
lret
movsb
or
xchg
or
add
jmp
sub
mov
or
lahf
mov
cmpsl
add
sub
push
pop
mov
cmp
pusha
inc
je
push
cltd
iret
int3
loope
in
inc
mov
jno
jns
pop
mov
pop
jne
test
pop
fiaddl
insl
cmp
dec
xor
mov
ljmp
push
cmp
lea
fnsave
xchg
fistps
bswap
adc
mov
push
stos
test
pop
stc
std
inc
call
xor
cmp
adc
push
pop
jns
jae
push
gs
loopne
add
mov
cld
jae
out
loop
add
fcomps
xor
mov
xchg
dec
xchg
into
cmpb
add
popa
mov
aas
js
mov
jbe
cmpb
repz
es
pushf
adc
idiv
jno
adc
sbb
test
popf
and
into
clc
inc
jmp
jecxz
push
lahf
xor
es
mov
mov
and
lods
scas
scas
jb
push
inc
inc
das
addr16
repnz
and
adc
cmp
aad
fdivp
in
je
ljmp
int
xchg
mov
cmc
adc
mov
sbb
cs
stos
push
xor
scas
push
shl
clc
pop
les
mov
cmp
cltd
push
in
or
addb
sbb
ret
mov
and
pop
aam
ret
mov
sub
stos
clc
lret
xor
aad
dec
cltd
mov
and
imul
clc
sub
jb
addb
aas
sti
das
add
xchg
out
cmp
sub
es
das
sbb
mov
jmp
lock
and
aaa
loopne
jmp
add
es
inc
fcmovne
push
jb
push
adc
loop
mov
or
push
outsl
and
xor
outsb
mov
dec
insl
push
jmp
fisttps
loope
mov
mov
hlt
loope
test
cwtl
sub
dec
push
cs
adc
push
push
arpl
jmp
imul
sub
lock
dec
mov
inc
xchg
fistpl
std
mov
mull
sub
mov
lahf
mov
insb
mov
frstor
jle
lods
adc
inc
or
jb
cmp
cmp
cmp
sbb
xlat
out
sahf
sub
dec
mov
adc
ja
push
sub
int3
dec
test
test
out
and
mov
xchg
mov
or
subb
stos
xor
rcrl
fdivl
jae
cmpb
popa
sbb
and
mov
jp
cmpsl
jmp
adc
sub
mov
dec
jo,pn
sub
adc
mov
in
insl
adc
push
dec
mov
enter
mov
ret
mov
aad
in
mov
mov
aam
mov
xlat
shrb
inc
or
xor
inc
xchg
inc
insb
aam
mov
movsb
mov
fsubrs
je
mov
add
cli
adc
je
and
mov
xchg
or
repnz
imul
adc
mov
insb
and
cmp
and
jle
inc
aaa
or
test
sbb
repnz
in
mov
jp
ds
aaa
test
xchg
inc
sub
pushf
push
fwait
imul
nop
push
add
dec
mov
xchg
jl
roll
sbb
xchg
inc
add
mov
xchg
cmp
repz
dec
pop
pop
in
push
jo
stos
lock
xor
push
outsl
and
adcl
sbbb
int3
dec
leave
rcll
lret
or
pop
cmc
mov
mov
sbb
jecxz
leave
fs
out
pop
inc
lods
add
sub
or
rcl
or
push
dec
fisttpl
push
push
jne
inc
jl
or
lods
rcll
ficompl
mov
inc
pop
imul
xor
dec
cld
cltd
es
shll
xor
push
xorl
lock
pop
ja
aas
cld
aas
movsl
aas
jge
daa
xchg
push
inc
pop
jnp
aaa
jge
imul
popa
xchg
inc
fcompl
cmp
leave
mov
call
jne
adc
jo
pop
pop
scas
dec
in
outsb
stos
hlt
sti
inc
aas
jl
xor
rclb
aad
adc
dec
rorb
xchg
imul
lahf
test
repnz
cmp
je
test
sub
xor
andb
and
xchg
jecxz
jns
mov
mov
xchg
mov
insl
fnstenv
and
mov
jl
sar
and
or
dec
ret
out
dec
mov
mov
dec
lret
dec
fsub
cmc
pop
pushf
je
xor
sarb
push
add
jne
adcl
loop
int3
jb
cmc
mov
inc
jb
cmp
nop
mov
jmp
cmp
scas
rcl
repz
mov
sbb
pop
pop
idivl
push
test
or
repz
mov
leave
mov
in
call
dec
cmp
cmc
push
inc
into
xchg
imul
push
inc
jns
inc
inc
mov
into
outsl
mov
fidivs
scas
mov
int3
fisttps
cmp
ja
je
sti
fs
inc
test
lods
mov
mov
pop
arpl
pop
cmp
sbb
adc
mov
xchg
xchg
cmp
sbb
pushf
sub
loop
and
jo
notb
fiadds
fdivr
inc
push
cld
in
push
mov
or
xchg
bound
ja
incl
adc
fdivrs
movsl
sahf
cmp
mov
outsl
push
mov
movsb
inc
fnsave
movsl
lahf
arpl
out
das
lret
dec
out
push
sahf
scas
sub
adcb
jae
mov
mov
xchg
jno
scas
lret
leave
aaa
push
jg
mov
sbb
jb
ja
and
inc
loope
bound
sub
or
pop
mov
sub
stc
addl
dec
jno
dec
jmp
cmp
mov
addb
aad
sbb
push
add
out
out
lods
inc
xor
pop
popf
jge
sub
outsb
fyl2xp1
inc
imul
add
mov
gs
icebp
sub
xor
outsl
xor
pop
icebp
hlt
xchg
pop
add
lock
lock
popa
mov
inc
pop
xchg
cltd
sbb
add
jbe
ds
or
cmp
or
sti
dec
xchg
pusha
out
fcmovne
push
adc
cs
lock
mov
repnz
inc
ret
mov
cli
xlat
and
test
mov
sbb
mov
rcrb
xor
stos
pop
and
ret
pop
ja
mov
add
cld
push
rclb
rep
pop
sbb
fbstp
test
xchg
cmp
add
fistpll
cmp
sbb
ss
mov
jnp
xchg
and
mov
lock
adc
insl
push
push
mov
push
pop
outsl
mov
jae
and
mov
lods
mov
push
and
jmp
fbld
adc
aad
mov
hlt
cmpsl
xlat
dec
mov
dec
aaa
sbbb
test
xchg
lods
mov
adc
int
xor
push
cli
movsb
pop
ret
ret
mov
push
push
imul
fidivrs
push
push
or
dec
mov
loopne
sub
addps
jecxz
mov
push
or
std
and
adcb
arpl
jp
cmc
jl
mov
subl
out
pop
xchg
cmpb
data16
sbb
dec
xor
in
in
sbb
nop
leave
cmp
cmpsl
push
rcrl
sub
cmpsb
movsb
mov
ret
jl
xchg
les
fbld
push
shr
xor
movsl
sub
imul
popa
xchg
icebp
int
mov
rol
insl
mov
test
insb
stos
in
mov
and
jp
cld
nop
ds
jmp
imul
add
stos
cmp
es
aas
sbb
loopne
xchg
adc
inc
or
aam
pop
je
loop
xchg
cmp
enter
ljmp
movsb
pmuludq
adc
idiv
cmpsb
mov
cmp
stc
and
lret
jecxz
lcall
xor
mov
das
adc
mov
mov
imul
mov
xchg
push
lahf
cmp
xchg
outsb
flds
pushf
mov
sbb
cmp
mov
jle
adcl
dec
out
popa
pop
das
push
loop
sbb
lods
and
inc
push
lahf
dec
sbb
insb
sub
arpl
pusha
ljmp
ljmp
dec
sbb
int
push
inc
xchg
sub
dec
insl
ret
mov
adc
popa
das
add
cmpsb
jp
movaps
jae
sarl
mov
testb
xorb
stc
push
mov
or
adcl
sbb
lods
das
adc
mov
iret
lods
sarb
mov
jne
pop
repz
dec
cmp
mov
cmpsl
xchg
icebp
data16
sbb
stos
or
adc
std
jl
adc
mov
aaa
inc
push
xor
shlb
or
aam
insl
adc
pop
xchg
add
sbb
icebp
pop
mov
mov
icebp
jle
mov
repnz
dec
add
and
pop
popf
xchg
sub
jae
dec
pop
popa
inc
push
iret
xchg
sahf
popf
add
push
or
sti
or
out
mov
add
sbb
out
pop
gs
and
xor
test
or
outsl
aaa
leave
push
subl
sti
ljmp
xor
sbb
sahf
pop
jbe
pop
aaa
push
cmp
fwait
loop
push
mov
and
addr16
jns
sbb
popa
and
icebp
mov
jp
divb
cli
jns
push
xchg
and
nop
int
lret
xchg
mov
push
sub
pop
inc
in
rorb
cmp
stos
out
xchg
add
add
stc
hlt
jg
and
push
pop
dec
xlat
shlw
mov
xchg
or
inc
jb
mov
andb
loop
or
cmp
outsb
int
pop
cli
mov
sbb
add
cmpsb
cld
hlt
pushf
dec
sbb
push
jl
jb
les
or
xchg
mov
mov
xorl
cmpsl
dec
xor
xchg
mov
sub
adc
call
popa
inc
sbb
int3
repz
sbb
loope
dec
dec
mov
dec
adc
add
push
push
mov
sti
jp
sahf
pop
lret
pop
inc
push
xchg
ja
pop
adc
fcoms
fwait
mov
jg
push
ja
stc
scas
rorl
pop
int3
jp
cli
movsl
push
test
fimull
ljmp
xor
lods
inc
lock
sahf
mov
push
ret
adc
lods
pop
cmpsl
jp
repnz
dec
cmp
ficoms
dec
sbb
test
adc
ret
ret
mov
loopne
sbb
faddp
cmp
sbb
cli
xor
std
ljmp
lds
mov
cmp
jne
repnz
popa
adc
int
push
or
fbld
sti
push
pop
int
or
inc
sarl
dec
xor
pop
mov
mov
or
dec
mov
jns
fwait
pushf
mov
jno
xlat
cmp
movsl
fcmovbe
adc
dec
call
xor
pop
in
test
test
pop
or
pop
into
pop
popf
inc
sbb
mov
mov
insb
fwait
and
xchg
cwtl
cmpl
pushf
push
sub
aaa
add
ljmp
loop
add
enter
pop
mov
rcll
imul
cmp
jl
fs
push
lcall
popa
mov
lock
or
shlb
loope
arpl
push
insb
imul
lea
cmp
pop
dec
mov
jno
push
scas
rcrb
cmpl
in
sub
test
cmp
stos
lcall
test
push
push
insb
xchg
and
aas
sbb
cmp
call
jno
or
jbe
sbb
inc
sbb
cmp
js
xor
int3
fcoml
ret
mov
xchg
xor
loopne
cs
mov
pop
ja
lds
adc
les
enter
enter
xchg
pop
add
cmpsb
mov
subl
fwait
imul
mov
jle
mov
xor
inc
lahf
dec
sub
mov
repnz
lahf
adc
imul
cltd
cmp
std
sbb
xchg
jecxz
pop
sbb
mov
and
lcall
orb
fs
adc
mov
stos
mov
inc
outsl
stos
lcall
xchg
out
iret
cmp
out
lods
sarb
pop
lret
push
add
movsl
shrl
daa
push
jbe
xchg
jecxz
orb
clc
loope
arpl
pop
inc
in
or
std
sub
jle
jg
lret
xchg
pop
xor
icebp
scas
mov
loopnew
div
pop
shlb
into
cmp
in
or
fsubrl
cli
shrl
mov
loopne
mov
lea
cmp
test
add
jae
lds
inc
inc
inc
pushf
or
in
hlt
sti
mov
pop
aas
fnstcw
push
repz
fucom
mov
outsl
push
xchg
jge
xor
jmp
adc
xchg
leave
jo
jg
ljmp
push
mov
dec
fstps
mov
jle
sbb
ljmp
or
popa
mov
xchg
pop
inc
add
push
xchg
add
push
iret
xchg
push
pushw
xchg
test
mov
xchg
popf
xchg
test
cmp
inc
imul
jge
lahf
and
jb
mov
and
sarl
mov
jmp
mov
inc
aaa
cs
mov
adc
les
mov
popa
lret
arpl
xor
mov
inc
adc
in
int3
dec
inc
mull
xchg
pop
fstps
pop
lret
cmp
ret
fs
jae
pop
xor
or
pop
pop
mov
mov
clc
xorl
jbe
pop
mov
call
rcr
push
lods
aaa
add
pusha
enter
movsl
fs
jecxz
andl
stc
mov
mov
mov
mov
lods
pop
cltd
aas
jb
lea
push
lret
lds
add
push
outsl
loopne
bound
hlt
fucomi
leave
lea
or
std
cmp
push
mov
sub
fnsave
pop
pushf
sbb
nop
daa
lcall
bound
xchg
push
sub
mov
adc
test
lahf
test
sbb
loop
pushf
add
pop
arpl
xor
pop
lahf
mov
hlt
mov
mov
cli
or
fdivrl
mov
int3
scas
fildl
xchg
in
imul
inc
bnd
stos
fildl
cmp
sbb
out
lcall
lock
mov
lds
pop
lds
loopne
sub
rcl
fdivr
lock
popa
and
iret
xchg
stos
out
mov
nop
and
sbb
mov
cmp
add
push
neg
insl
js
leave
xchg
mov
jns
ss
imulb
mov
cmp
xchg
jmp
jne
loop
mov
push
aam
mov
outsb
xchg
cmc
xchg
push
rcrb
rorb
cmp
or
shr
das
daa
test
in
bnd
pop
sbb
xchg
push
push
mov
adc
pop
enter
arpl
or
pop
cmp
mov
mov
roll
xchg
adc
inc
in
dec
mov
rorb
xchg
lds
or
mov
mov
mov
mov
add
icebp
sub
jg
mov
int
xor
or
rcrl
test
dec
test
mov
xchg
and
or
and
sahf
push
sbb
push
popf
pop
cmpsb
xchg
xchg
add
fidivrl
pusha
inc
mov
nop
insl
daa
add
mov
cmp
inc
pushf
push
push
push
adc
adc
mov
cwtl
cmpsb
mov
adc
sub
mov
mov
ds
std
ret
cmpsl
jns
outsb
insl
jo
mov
shrb
lcall
jmp
push
mov
push
scas
cmpsl
sub
xchg
sahf
or
push
stos
dec
jno
std
cmp
aam
lods
jno
in
adc
add
or
outsb
mov
test
sub
sub
mov
cmp
and
add
pushl
fdivrs
into
xchg
sbb
cmp
pop
popf
cmp
ja
std
push
pop
mov
add
push
hlt
adc
mov
cli
loop
sub
adc
mov
enter
cs
xlat
cmpsl
cmp
lcall
jno
adc
in
bnd
mov
inc
and
fdivrs
imulb
loopne
repnz
mov
or
and
pop
movsb
dec
push
xor
fdivr
pop
repnz
jbe
mov
cli
repnz
out
rorb
popa
adc
inc
inc
pmulhw
mov
cmpsb
scas
push
xor
sub
repz
popf
pop
insb
jg
ja
clc
stos
adc
daa
cmpb
mov
dec
rorb
mov
test
movsl
out
xchg
fs
testl
mov
mov
mov
mov
push
notl
je
std
enter
cltd
xchg
repnz
in
popf
pop
xchg
icebp
in
mov
movsl
std
movsb
pushf
push
and
callw
mov
aaa
mov
mov
inc
loopne
sbb
rcll
ljmp
cmp
cmp
xchg
test
testl
aam
fildll
repz
pop
jmp
jge
push
push
sbb
stos
sub
dec
cmp
sbb
fcmovnbe
dec
xchg
popa
cmp
out
xchg
popa
mov
ljmp
pop
sarw
movsb
cmp
sub
jo
hlt
add
or
mov
push
jp
sbb
cmp
dec
push
cmpsb
pop
cmpsl
xchg
das
add
inc
inc
pusha
out
iret
pop
xchg
sub
aas
sahf
das
gs
sub
and
popa
mov
cltd
lods
js
pop
insl
ja
stc
adc
xor
sub
sub
notb
mov
jl,pt
fmuls
jb
cld
ss
pushl
push
sbb
insb
dec
mov
sbb
and
movsl
lods
cmpsb
lahf
adc
adc
push
dec
js
inc
xor
das
push
sarl
xor
inc
loop
aaa
das
and
push
push
adc
jne
dec
rclb
pop
and
mov
std
add
int3
inc
aaa
and
in
or
std
mov
aaa
nop
push
pushl
lcall
aad
jge
dec
xchg
shll
jnp
or
or
rcr
inc
imul
neg
aaa
int
push
lds
jne
mov
sarl
and
scas
ja
jge
push
sbb
loop
xchg
fists
gs
inc
jnp
stos
out
xor
push
in
dec
test
dec
inc
aaa
mov
movntps
mov
cld
pop
les
mov
scas
outsl
xor
das
xlat
mov
aam
jbe
pop
push
adc
shll
inc
or
pop
xchg
push
sub
mov
lock
jns
xchg
xchg
inc
in
push
sarb
sahf
sbb
leave
popa
jbe
jmp
push
movsl
xor
pop
jbe
or
inc
pusha
dec
mov
test
sbb
notl
cmpsb
jne
mov
sub
dec
dec
addr16
lea
lcall
stc
in
push
cmp
into
inc
or
jl
add
mov
push
mov
cmp
jmp
inc
jb
cmp
inc
xchg
push
int3
sub
mov
adc
cmp
outsl
sub
xor
notl
sub
push
icebp
into
movl
xchg
cmp
cmp
adc
dec
jge
sub
and
or
imul
mov
insl
jl
sub
pop
addl
xchg
pop
add
sbb
jnp
dec
mov
mov
cmp
aad
scas
gs
insb
cmp
dec
fdivl
popl
mov
pop
mov
xor
clc
xchg
call
int
adc
jbe
das
dec
push
xchg
test
mov
ret
movsb
xor
fcoms
lds
lds
push
xchg
testl
push
xchg
pop
adc
adc
sbb
ds
sbb
ret
sub
sbb
fwait
pop
xchg
movsl
mov
out
lret
xor
sbb
jg
mov
xor
jle
aaa
xor
mov
das
or
shlb
xor
add
mov
lods
dec
fimuls
mov
cmp
mov
shlb
stos
pusha
xor
xor
sub
mov
insl
cmp
xor
mov
in
insl
inc
mov
iret
lret
movsb
repz
fnstenv
fcompl
sub
sbb
cmp
jo
data16
cmc
jle
fiadds
imul
arpl
std
pop
and
cmp
outsl
mov
pusha
lods
mov
mov
xlat
pop
fiaddl
lea
push
std
sub
xchg
into
lret
shll
into
test
dec
cmp
pop
push
fidivrs
lods
inc
aad
xor
push
loope
mov
aam
roll
inc
jl
cs
jb
jmp
mov
mov
mov
stos
adcl
in
or
int
stos
add
mov
cwtl
cli
ficompl
sub
aad
leave
jle
or
lods
mov
xor
dec
dec
push
and
outsl
sbb
sub
mov
jnp
mov
fisttpll
mov
add
repnz
push
xchg
pop
inc
jmp
fwait
mov
cmp
popf
inc
xlat
aas
movsb
fisttpl
jo
sub
sbb
jne
adc
mov
mov
idivb
hlt
and
xchg
repz
daa
rorl
cs
pop
sbb
lds
dec
mov
lret
and
mov
xchg
inc
pop
dec
xor
mov
out
das
imul
inc
xchg
aam
xchg
clc
and
pop
sarb
inc
adc
sub
fnsave
cmp
sub
sbb
repnz
pop
xor
push
loope
cmp
sti
jge
mov
leave
adc
push
mov
xor
arpl
adc
dec
dec
mov
fwait
fs
gs
and
xchg
pop
insl
dec
shr
and
sahf
mov
aas
and
out
lret
cltd
int
rcr
inc
add
dec
mov
enter
mov
push
adc
cmp
bound
daa
lds
leave
in
lea
mov
xchg
imul
stos
fmuls
xchg
adc
bound
pop
jb
pop
rol
xchg
loop
mov
or
jge
push
imul
je
push
jp
andb
lods
js
mov
adc
test
push
movsb
push
mov
mov
xchg
mov
test
iret
loop
push
aad
add
jp
fs
inc
repz
test
repz
dec
sbb
mov
incb
out
ret
arpl
mov
outsl
incl
dec
rolb
pusha
sahf
jmp
stc
std
std
sbb
aad
cmp
scas
mov
int
inc
push
test
lahf
or
adc
inc
adc
repz
out
inc
mov
pop
xchg
leave
icebp
jns
adc
or
add
mov
push
fcomps
mov
sbbl
inc
fs
fldl
cld
cld
stos
enter
sbb
leave
pop
inc
mov
sti
dec
mov
lods
aaa
push
je
and
sbb
pusha
pop
je
cmp
mov
nop
xchg
shlb
cli
aad
dec
mull
mov
fcompl
jbe
fcmovnu
test
mov
or
inc
int
push
sti
shll
cld
push
mov
sub
in
cltd
out
adc
adc
jmp
cmp
fldt
dec
ret
sahf
sub
pop
movsb
insb
icebp
or
rcrl
or
xchg
mov
dec
insl
jle
mov
dec
or
rcl
sbb
out
loopne
jge
add
lods
test
and
push
dec
mov
add
std
rorb
lret
jns
pushf
fwait
pushf
outsb
inc
in
xor
lcall
adc
orb
arpl
cmc
loop
aad
mov
mov
rorl
shrl
mov
loopne
jno
inc
xchg
gs
fwait
adc
or
adc
or
xor
mov
ja
imul
ljmp
mov
lock
int3
or
out
dec
lods
cmp
jl
test
ret
dec
cmp
mov
push
mov
test
rorl
cmp
outsb
mov
scas
gs
pop
insl
popa
pop
adc
out
mov
pop
xchg
cltd
mov
aaa
jle
and
inc
push
es
mov
repnz
mov
scas
adc
dec
jae
jl
mov
cmpb
es
dec
inc
outsb
xchg
in
movsl
sbb
repz
xor
arpl
jo
xchg
daa
sbb
mov
test
fldl
into
ljmp
cwtl
cltd
push
jg
out
push
mov
leave
jno
movsb
addr16
xchg
ss
mov
fists
jo
dec
push
mov
xchg
shrl
add
test
inc
mov
out
or
jg
xchg
or
push
in
push
sti
int
addr16
xor
call
sti
add
mov
push
and
sbb
inc
xor
jp
add
test
loop
insl
xchg
test
mov
shl
pop
mov
jns
xor
loop
ret
and
pop
cmpl
je
mov
sahf
not
cld
rolb
jb
data16
pop
cmp
cmc
cmpsl
or
inc
xchg
or
xor
popf
pop
push
in
sbb
xchg
xor
xchg
jle
add
pop
jmp
xchg
mov
movsb
push
mov
mov
cmp
andb
cmc
adc
pop
jmp
loopne
push
add
sbb
leave
cmc
push
mov
cmp
pop
mov
pop
arpl
out
pop
push
sbb
data16
decb
ds
mov
push
push
lods
mov
xchg
repnz
push
pop
mov
jo
lds
movsb
adc
int3
fucom
mov
mov
ss
jg
test
and
sar
jecxz
mov
jae
cmp
scas
mov
addr16
or
mov
rol
and
mov
sahf
adc
or
push
pop
and
icebp
test
add
clc
minps
xor
or
je
jns
int3
insl
xchg
ret
mov
push
shll
cli
int
xor
in
lods
xchg
mov
xchg
mov
popa
xchg
sub
and
pop
jnp
xor
mov
cmpsb
push
sbb
sbb
inc
jmp
test
fst
xchg
cli
push
aad
mov
fsubrl
sbbl
mov
xchg
gs
insb
adcb
mull
aad
inc
xchg
cmp
sarb
xchg
dec
movsl
mov
in
loopne
movsb
mov
sbb
scas
push
inc
mov
or
push
cwtl
in
movsl
xchg
mov
xchg
dec
mov
sbb
cmp
aad
sbb
hlt
scas
pop
repz
flds
sub
xchg
stos
xor
sub
sbbl
push
cmpsl
call
xchg
inc
out
xchg
stos
fiadds
cmp
xchg
in
mov
mov
add
add
cltd
insb
enter
ret
pop
mov
push
jl
faddl
ja
inc
jmp
in
dec
stos
mov
fcoms
fstpt
pusha
dec
cmp
mov
inc
and
orb
mov
push
cltd
orl
ss
dec
xlat
jle
sahf
ss
dec
shll
mov
xor
ret
inc
hlt
xchg
lods
xor
push
add
mov
ror
leave
fs
mov
xchg
mov
mov
leave
push
inc
mov
mov
adc
and
or
repnz
sbb
divb
sarb
cmp
ficomps
dec
enter
or
repz
ret
inc
jo
jg
in
jg
mov
inc
rcr
jg
call
dec
jmp
push
cmp
jns
fsubr
pop
aad
cmp
push
xchg
daa
and
stos
mov
dec
stos
loope
pop
arpl
mov
mov
mov
mov
mov
adc
cmp
in
sub
cmp
fmuls
gs
add
sub
sub
mov
stos
scas
std
sbb
cmp
pop
testl
pusha
add
nop
cmc
mov
xchg
pop
push
cmp
cmp
dec
mov
inc
pusha
icebp
mov
mov
cmpsl
scas
cltd
pop
imul
jp
xlat
cltd
add
subb
push
stc
inc
stc
mov
or
aad
std
in
dec
arpl
in
dec
sahf
outsb
ds
aaa
mov
js
aam
xor
imul
pop
ficomps
mov
adc
stc
jno
or
inc
test
mov
les
cltd
xor
leave
rolb
aaa
xchg
push
push
cmp
dec
in
push
es
es
mov
dec
xchg
push
jnp
mov
test
sub
test
es
ss
add
push
xchg
dec
rcrb
add
sahf
sbb
sub
or
sub
xchg
test
cmp
cmp
push
xadd
push
inc
clc
rcrb
repnz
cmc
ljmp
hlt
xor
mov
jg
std
jmp
int
pop
loopne
jo
pop
mov
inc
mov
cmp
cmpsb
xor
loopne
scas
add
push
cmp
sarb
dec
jecxz
fisubl
daa
xor
std
xchg
scas
fwait
addl
dec
jmp
or
dec
and
jb
jne
inc
mov
jb
pushf
mov
stos
xlat
dec
fmull
fsubrs
int
cwtl
aam
test
arpl
mov
insb
pop
inc
push
leave
inc
pop
adc
daa
ss
xchg
in
push
and
lods
imul
dec
outsl
xchg
xchg
aas
lret
pop
fiadds
or
fimuls
fdivl
ja
mov
xchg
cmp
sub
aam
push
jecxz
movsb
outsb
mov
sbb
dec
lcall
pop
or
xor
mov
arpl
bound
fs
sbb
add
loopne
xor
jnp
ret
push
ss
mov
out
mov
add
imul
pop
sub
ror
repnz
popa
push
aad
push
push
push
xchg
js
push
popa
in
inc
sbb
xlat
adc
cltd
xor
scas
mov
sub
add
mov
sarl
push
mov
sbb
or
mov
dec
jge
pop
cmc
mov
decb
pop
dec
jnp
pop
jae
cmpsb
sahf
lahf
imul
or
shrb
cld
pop
pop
pushl
dec
dec
or
mov
cmp
pop
test
lods
jecxz
gs
sub
enter
mov
jns
adc
jmp
int3
push
mov
sbb
int3
pop
and
aaa
push
into
or
or
push
jle
cmpsl
adc
dec
or
adc
push
add
fistps
mov
repz
fldenv
mov
imul
daa
roll
orl
pop
jae
ret
std
push
imull
fisubl
xor
loopne
jns
pop
fdivl
lret
aas
jecxz
mov
mov
jle
fistpl
sbb
rcll
popa
stos
or
rorl
inc
push
sbb
or
lds
adc
repz
iret
jge
out
mov
jl
cmp
jg
pop
inc
data16
aam
sbb
lahf
std
nop
cmpsl
mov
jecxz
lcall
add
orb
movsl
and
fnstenv
bound
mulb
dec
inc
xchg
sbb
mov
mov
push
mov
aas
fidivl
mul
outsl
mov
test
push
in
jmp
ret
stos
pop
dec
stc
aam
mov
leave
inc
mov
xor
mov
iret
loop,pt
sub
icebp
push
cmp
and
cmc
jo
in
pop
subl
xor
cld
or
ss
push
adc
adc
call
lret
xlat
cmp
sar
add
iret
shrb
xchg
cwtl
dec
xorb
lahf
sub
rclb
sbb
push
mov
addr16
outsl
imul
js
jl
mov
js
les
jb
pop
mov
fisttpl
push
lods
inc
or
inc
mov
mov
dec
mov
jb
movsb
cld
push
sahf
mov
jmp
mov
pop
pushf
sbb
jl
hlt
mov
into
add
mov
call
xor
and
inc
xchg
pushf
pop
adc
ljmp
jnp
pop
sbb
pop
or
je
and
mov
roll
pusha
xchg
add
adc
and
mov
js
adc
inc
dec
mov
out
jg
and
lcall
sbb
sbb
mov
mov
mov
dec
xchg
or
and
lods
dec
jecxz
loope
push
addl
bound
or
push
or
push
rclb
mov
mov
mov
push
pcmpeqd
int
fsts
xchg
shl
out
nop
sub
mov
inc
inc
pop
test
xchg
loope
lock
add
lahf
scas
mov
inc
push
in
lock
and
jle
jge
popa
and
rorb
mov
mov
outsl
cwtl
xor
arpl
ret
add
rorl
sarl
popa
movsl
jp
jg
fisttpll
fmull
int
lds
fsub
out
nop
psrld
fwait
jbe
dec
int
inc
outsb
add
xor
and
add
mov
jne
cmp
sub
sub
mov
test
push
jmp
add
mov
flds
xchg
cmp
movsb
xor
stos
adc
xchg
adc
jne
mov
clc
adc
xor
js
pop
mov
jae
jmp
in
xchg
fcmovu
mov
cmp
jge
je
gs
pusha
sub
sbb
pop
test
mov
movsl
xchg
mov
xchg
pushf
add
in
jle
addr16
mov
xchg
adcb
or
mov
mov
sbb
les
xor
jmp
mov
xchg
push
fisubrl
jl
mov
xchg
cwtl
andl
mov
decl
rcrl
push
fisttpl
pop
cmp
jo
imul
add
sarl
cmp
jmp
push
xlat
and
addr16
pop
sti
pop
jbe
adc
mov
sbb
pushf
mov
jns
clc
imul
push
in
mov
mov
loopne
jns
daa
addb
lret
adc
push
xlat
cmp
imul
fnstenv
call
cmp
addb
mov
imul
out
icebp
addr16
popa
cwtl
pop
cmp
mov
sbb
cs
sbb
xor
dec
and
rolb
mov
mov
imul
dec
fldcw
pop
loope
imul
test
cmp
int3
jge
pop
loope
dec
sbb
nop
xor
dec
in
insb
dec
lret
lcall
mov
push
inc
iret
mov
repnz
test
daa
xor
add
inc
xor
push
cmp
loop
dec
inc
jge
fistps
sbb
std
xchg
jno
or
add
sahf
sub
mov
or
test
movsl
test
cmpsb
mov
adc
loop
aam
dec
mov
push
sbb
xor
scas
aas
push
inc
push
mov
dec
js
sub
sub
cmp
loope
sbb
mov
aas
inc
insl
insb
testl
data16
xor
std
or
mov
cmc
cmp
jge
outsb
push
movsl
sbb
ss
loop
pop
out
in
xchg
data16
dec
sar
inc
das
sub
daa
icebp
cmpl
dec
push
in
inc
pop
outsl
sbb
cld
xor
nop
sub
fcmovu
mov
sbb
xor
mov
int
xor
cmc
in
jmp
fsubrs
cmp
or
int3
test
add
test
and
sahf
dec
lret
movsl
dec
mov
and
mov
das
jle
int
mov
jbe
loop
cmp
mov
mov
mov
add
sbb
dec
popl
mov
xchg
rclb
aas
xchg
inc
xchg
cmp
pop
stos
mov
sub
ljmp
pushf
mov
insl
or
dec
pushf
sahf
rep
pop
cmpsb
andl
jg
testb
in
mov
adc
or
adcl
adc
daa
stos
mov
mov
or
lcall
fistps
inc
andb
pusha
adc
cmpb
or
xor
ja
sbb
loopne
pop
iret
mov
push
jbe
enter
test
fists
fistl
insl
movsb
or
movsb
lock
fdivs
imull
mov
cmpsl
xchg
inc
sbb
js
mov
addl
aaa
adc
mov
sub
cltd
push
pop
adc
add
iret
lds
cmp
pusha
clc
sarb
lds
pushf
cmp
fcomp
scas
mov
cmp
cli
cld
dec
imul
inc
insb
in
std
jge
and
add
pop
jo
jmp
imul
mov
inc
lret
frstor
pop
idivl
jbe
insl
mov
add
nop
hlt
mov
dec
fisubs
cmp
lock
nop
push
scas
std
out
mov
out
dec
adc
lods
cmp
mov
sbb
inc
subl
das
inc
nop
stos
inc
iret
mov
bound
pop
fdivs
mov
fisttpl
adcb
pop
mov
pop
lea
dec
lods
mov
adcb
push
inc
jg
jno
mov
sbb
imul
or
pop
and
add
outsl
movsb
push
popa
test
inc
pop
insl
rcrb
pop
out
loope
fcmovnu
jmp
mov
fisubrs
aam
push
rcr
ret
lcall
push
es
mov
dec
popa
mov
sub
in
ds
and
invd
jae
jnp
testb
and
outsb
imul
jb
push
test
pusha
ja
pop
adc
pop
jg
adc
jmp
mov
sub
das
inc
adc
xlat
xor
mov
push
jmp
popa
xor
dec
es
jns
cmpsl
enter
adc
and
pop
iret
lea
or
adcb
inc
and
and
or
xor
shlb
fisubrs
loopne
lods
jecxz
xchg
and
cmc
out
mov
cltd
shll
aam
fidivs
movsb
fwait
jno
adc
adc
mov
test
flds
pop
add
inc
mov
jbe
add
push
pop
test
fsubl
out
and
jle
hlt
push
push
push
sahf
roll
ret
inc
cmp
clc
mov
xchg
xor
cmp
scas
repz
imul
rcrb
out
out
add
jmp
insb
mov
mov
mov
stos
xchg
mov
fiadds
pop
negl
xor
inc
mov
call
and
mov
jo
push
cmp
and
lret
loop
fistpl
push
pusha
mov
outsb
xchg
adc
mov
sub
filds
jno
lods
hlt
addr16
jne
xchg
cs
xchg
stos
testl
xor
cld
dec
ror
imul
jl
movsl
sti
dec
fdivs
sub
mov
xor
or
xchg
lcall
xchg
shrl
ficoms
jle
push
mov
bound
mov
dec
roll
dec
movsb
cmp
push
lock
lret
shrb
jne
out
fdivp
mov
cmp
pop
cld
jmp
inc
jb
sub
pop
mov
fsubp
dec
adc
ljmp
sub
dec
dec
icebp
sbb
jg
xchg
cld
add
cmp
movsl
stos
sbb
jne
in
iret
push
insl
mov
adc
pop
int
test
xor
ljmp
push
lds
subl
xor
cmp
out
lods
popf
lods
xlat
icebp
outsb
push
insb
push
adc
mov
in
iret
pop
test
cmc
shl
add
pusha
lea
sarb
scas
das
jle
or
aaa
cli
sbb
stos
or
repnz
mov
mov
test
cmp
add
sbb
inc
dec
jne
out
push
jle
dec
shlb
cld
fmuls
out
cltd
lahf
push
fstps
xchg
cmp
and
cmp
repz
gs
mov
xchg
pop
dec
fisubs
jle
test
cmp
call
jmp
jne
xor
sbb
push
add
lock
ret
jg
out
mov
cmp
jge
jnp
mov
mov
int
cmpsb
inc
inc
fsub
pop
sahf
cltd
out
out
lods
push
lods
popa
or
movsb
mov
pop
mov
rcrb
data16
mov
pop
adc
sub
cmp
pushf
xlat
xchg
rcrb
mov
xor
inc
xor
mov
aas
xchg
adcb
jb
aas
pop
call
adc
sbb
cmp
jmp
cmp
push
pop
cmp
adc
pop
lret
jg
lahf
pop
mov
push
dec
ret
jecxz
addr16
jo
push
gs
cmpsb
neg
adc
insl
pop
mov
popa
adc
pushf
jecxz
pushf
loope
mov
mov
aaa
pop
jmp
mov
pop
mov
cmp
cmpsl
push
faddl
outsl
jle
cmpsl
mov
cli
cmp
xor
cld
jge
mov
enter
adcl
mov
add
mov
das
ret
fisttps
and
out
xor
test
or
add
add
lods
pop
pop
ss
and
jnp
fld
inc
jne
jnp
dec
or
aad
movsb
push
mov
push
sahf
mov
xor
jle
jbe
imul
repz
jae
jge
aad
adcb
shrb
dec
pop
scas
cmp
mov
sbb
hlt
xlat
xor
pop
into
out
in
rclb
cmpsl
jmp
movb
pushf
fucomip
iret
in
mov
bound
outsl
loope
mov
lock
ficomps
pushf
push
mov
sub
out
jmp
out
xlat
outsb
loope
mov
daa
fcoms
maskmovq
idivl
push
popa
push
das
aaa
add
push
cmp
hlt
xchg
dec
mov
add
test
js
xor
in
cli
test
pop
je
cmp
outsb
xor
aam
xchg
fdivrl
pop
sahf
lods
mov
popa
aam
xchg
xchg
js
xchg
loope
mov
pop
sub
cwtl
or
jmp
mov
add
hlt
arpl
sbb
dec
cmp
pop
nop
in
rcl
mov
ftst
xor
push
push
repz
aaa
daa
fdivs
pop
loopne
xchg
sbb
adc
enter
mov
dec
mov
test
push
jbe
cmp
lret
lods
mov
je
fistpll
js
xchg
stos
call
hlt
cmpl
or
subl
jmp
jle
and
popa
pop
popa
das
loop
nop
std
popf
hlt
in
jle
jae
fcomp
mov
cmp
scas
in
sub
sub
pop
mov
lds
cld
inc
fdivrs
int3
or
lahf
clc
repz
dec
lret
mov
sarb
xor
stos
dec
jns
frstor
out
sbb
sbb
mov
jno
mov
xchg
shr
lods
mov
popf
ret
bound
push
das
lret
pop
loopne
scas
std
mov
rcrl
sbb
ret
sbb
jnp
cmp
push
popa
sub
adc
xor
jmp
movsl
mov
xchg
sti
jno
hlt
push
iret
cmp
or
jle
inc
fsubrl
mov
xchg
or
xor
mov
rcr
cmp
push
xlat
mov
or
cmp
jnp
mov
out
and
and
stos
cmp
mov
mov
lods
lds
std
icebp
test
aam
shlb
xlat
sahf
inc
popf
pusha
dec
sti
cld
cmp
sub
sbb
mov
jmp
push
enter
rclb
sub
sahf
test
add
out
mov
stos
xchg
mov
adc
in
dec
dec
dec
mov
rorl
add
cld
jns
test
gs
insb
mov
sbb
sarb
out
push
lea
fwait
out
cmp
xchg
mov
pop
test
sbb
jl
jno
mov
arpl
push
xchg
push
adc
and
and
es
popf
mov
sub
aas
jmp
fwait
jmp
loop
mov
jecxz
adc
mov
sub
and
lods
cmc
jmp
fisttpll
push
xchg
test
dec
popa
andl
cmp
orb
jge
xchg
in
push
and
xor
xlat
gs
sbb
pop
pop
imul
adc
push
cmp
lahf
jns
xor
repnz
icebp
pop
and
ret
lods
mov
enter
pop
xchg
push
jp
mov
xchg
mov
push
mov
push
movsb
push
rclb
adc
adc
jne
xchg
mov
fs
int
push
ss
push
inc
mov
cmp
mov
dec
xlat
add
insl
lods
call
xchg
test
push
mov
mov
mov
jge
shl
mov
negl
repnz
mov
dec
ds
arpl
jne
pusha
notb
sub
lods
js
fcoms
pop
sub
movsb
out
jne
popf
ret
or
or
xor
test
call
pop
sub
lret
cli
icebp
mov
idivl
add
mov
adc
out
sahf
adc
add
mov
fdiv
cmc
ret
cmc
xchg
rcr
mov
mov
mov
sarb
das
mov
roll
mov
rcrl
mov
decl
add
popf
stos
inc
int
cwtl
fmuls
js
dec
and
ficomps
xor
jns
mov
sub
or
out
shrb
fbstp
loopne
xor
faddp
jnp
mov
jns
cmpl
dec
dec
inc
int
sub
lds
push
jnp
clc
and
in
ds
cmp
push
sbb
mov
rcl
sbb
add
add
les
test
inc
push
popa
mov
add
popa
push
mov
mov
mov
mov
xchg
pushl
mov
sti
das
scas
mov
adc
stos
sub
cli
xchg
adc
pushf
movsl
and
fldl
sbb
cmpsb
xor
dec
add
dec
in
inc
inc
mov
test
mov
mov
adc
in
push
add
pop
scas
pop
xor
push
loope
ljmp
push
or
fidivrs
and
push
sbb
das
rcl
xchg
jnp
insb
shll
insb
sbb
js
mov
scas
pusha
popf
sti
aas
test
sbb
addb
add
aad
mov
adc
pop
adc
and
loop
lret
out
and
sbb
das
out
cmc
jmp
sarl
adc
test
loopne
add
shlb
xchg
mov
or
push
dec
stos
mov
roll
lahf
jmp
xor
sbb
jecxz
jne
dec
js
sub
inc
ret
pop
fstpl
push
ss
test
push
mov
inc
and
pop
mov
ret
mov
mov
fwait
xor
sub
cld
and
mov
jmp
jnp
sub
ss
inc
push
cmp
lods
inc
scas
adc
loopne
mov
dec
or
push
fsubl
cmpsl
push
or
inc
xor
xchg
push
lock
cmp
adc
fistps
sti
lods
js
dec
mov
push
pop
jecxz
aas
mov
test
cmc
movsl
xor
dec
push
fsts
inc
and
cli
and
mov
mov
xor
pusha
test
adc
or
or
cmp
xchg
enter
mov
dec
lret
pop
sbb
adc
nop
xchg
mov
in
xor
xchg
jl
push
ds
js
movl
mov
loopw
push
shl
mov
cmpxchg
data16
push
lret
call
icebp
sub
sbb
jb
mov
daa
js
ficoml
pop
scas
stc
rcll
stc
push
es
mov
stos
sbb
in
jns,pt
dec
enter
adc
leave
rcrl
lea
ds
dec
nop
dec
es
dec
movsl
mov
jmp
stos
fcomps
mov
xor
lds
jb
jmp
fstpt
sbb
sub
xchg
in
aaa
jnp
cmp
push
in
pop
mov
push
dec
jnp
push
mov
jle
sub
jg
aam
mov
xor
jle
enter
in
movsb
mov
dec
xchg
shl
ss
adc
in
lret
loopne
test
movsb
push
and
xchg
imul
mov
and
out
into
push
dec
daa
into
ss
std
mov
in
rcrl
xlat
aam
or
repnz
aad
es
sub
cmp
mov
jg
inc
test
jns
mov
fdivl
gs
nop
mov
add
mov
inc
nop
xchg
insl
add
sub
pop
xchg
jae
arpl
test
cmpsb
dec
fwait
inc
jbe
negl
test
pop
pop
jo
imul
mov
cmp
dec
inc
xlat
add
int
call
fiaddl
rolb
xor
and
lcall
mov
pop
jbe
sahf
subb
cwtl
loope
cmp
gs
and
xchg
cli
fucomp
pop
in
pop
xchg
pop
mov
popf
aam
lds
inc
out
lahf
xchg
lds
loope
addr16
mov
icebp
int3
popf
cmp
xchg
outsb
mov
xor
outsb
js
mov
push
add
out
sahf
leave
xlat
jno
fldenv
das
and
enter
adc
add
outsl
outsb
dec
inc
push
aam
push
xchg
jns
dec
stos
xchg
addb
and
xchg
mov
sbb
shr
cwtl
imul
jle
inc
lock
sti
addl
fnstenv
push
arpl
js
mov
or
mov
out
and
or
sbb
out
jg
idivb
lods
cmp
jns
jno
sbb
xchg
insl
jns
mov
pop
or
movsb
mov
xchg
ja
jbe
shrl
imul
xchg
dec
dec
cwtl
not
cltd
gs
rclb
test
subl
mov
enter
in
loope
ss
rclb
pop
jg,pt
xor
movsb
inc
in
xlat
repz
fistpll
int
and
push
out
and
in
sub
add
dec
inc
pop
cmp
adc
icebp
mov
dec
popf
xor
dec
dec
inc
add
jnp
arpl
mov
or
or
push
adc
xor
adc
pushf
xlat
xor
jns
mov
rorb
lock
mov
mov
cltd
adc
leave
fsubrl
and
in
mov
repnz
xor
pop
scas
aas
icebp
scas
dec
inc
mov
jno
jmp
and
mov
rolb
fimull
out
pop
mov
loop,pn
jg
push
adc
pushf
xor
mov
loop
daa
out
cli
scas
mov
inc
dec
mov
inc
mov
and
push
andl
jno
pop
adc
mov
lret
xorl
push
sbb
dec
xchg
js
jecxz
and
mov
popf
push
sub
or
lock
push
jae
fwait
mov
xchg
mov
sub
lahf
push
inc
out
movsb
mov
mov
cmp
mov
ret
lods
fidivrs
mov
cmpsb
push
jb
scas
cmp
sub
fistpl
pop
sub
pop
push
mov
jbe
loop
and
xchg
and
pusha
xchg
and
dec
das
shll
cmpsl
shrb
nop
hlt
mov
lret
addr16
rcrb
ljmp
iret
sar
fwait
jo
scas
mov
push
dec
test
daa
test
mov
cmp
insl
pop
sbb
int
dec
fwait
les
movsl
and
mov
lods
adc
sti
mov
xchg
or
jl
mov
cs
xor
hlt
repz
mov
movsb
xor
jnp
imul
xor
sbb
mov
in
loope
jb
sub
xor
adc
fiadds
sub
addr16
dec
add
adc
loopne
mov
lcall
mov
add
jbe
clc
or
data16
addl
mov
sub
aas
or
xchg
bound
fwait
and
xor
jae
ret
shrl
gs
les
sub
mov
stos
test
and
imul
je
inc
repz
cmp
scas
push
adc
je
mov
jg
add
pop
mov
loope
addr16
loopne
xchg
sub
cmp
jbe
pop
out
and
daa
nop
jno
or
adc
cmp
fistpll
lcall
mov
adc
push
in
push
pusha
xor
lea
pop
xlat
outsb
out
call
cltd
or
sub
aam
das
xor
test
es
xor
fcompl
pusha
xor
out
insb
xor
pop
rcll
push
stos
imul
jge
loop
add
roll
outsl
sub
aaa
cld
ds
jb
jo
jnp
or
mov
lds
sahf
mov
cs
mov
jg
push
sbb
lods
mov
out
add
lds
fistpll
pop
popa
fdivrp
sub
pop
mov
ds
int3
sti
inc
insb
cmpsb
xor
stc
pusha
add
mov
outsl
das
fwait
xchg
xor
sarl
nop
pop
adc
xchg
push
shl
rcrb
icebp
pop
sti
test
add
mov
or
das
mov
jo
push
out
sarb
jmp
mov
aas
push
sub
dec
incl
popf
sbb
sbb
cs
call
jnp
sub
cs
mov
loop
cltd
insb
mov
subl
and
mov
ss
push
aas
insb
out
cmc
xchg
lcall
or
adc
addr16
mov
pop
xchg
mov
popa
iret
xchg
pop
addps
mov
xor
cs
cwtl
mov
cmp
scas
push
mov
fbstp
jle
dec
nop
lret
pushf
outsl
adc
dec
or
add
dec
ss
xchg
push
sub
xchg
into
outsl
gs
or
push
push
xor
mov
push
cmp
cli
jns
cmp
xchg
sbb
aas
xor
ds
or
loope
adc
and
mov
xchg
iret
pop
repnz
inc
lods
push
jb
pop
mov
sbb
mov
mov
lcall
adc
mov
push
aas
push
in
inc
xchg
mov
aas
fiadds
cmp
enter
xchg
stos
xchg
and
dec
or
je
mov
inc
jnp
push
cwtl
mov
mov
sub
das
or
adc
data16
aam
mov
mov
sub
sahf
xor
pop
mov
mov
clc
xchg
jb
sti
push
lods
or
andl
dec
cwtl
push
mov
mov
push
push
push
enter
out
dec
cwtl
xor
cmpsl
int3
arpl
repz
pop
and
fcomp
push
cmc
pop
lret
sub
aad
or
imul
xlat
or
mov
dec
or
aas
dec
outsb
rorb
or
aad
faddp
push
pop
mov
jmp
xchg
out
movsb
repnz
rcll
imull
sub
les
movsl
pop
push
sub
pop
mov
sbb
inc
push
cmpsb
out
push
lret
aam
sbbl
lahf
ljmp
mov
xchg
into
xchg
adc
push
xor
pop
and
addr16
enter
testl
roll
lcall
les
cmpsl
inc
popf
sub
sbb
mov
jmp
add
mov
and
dec
sbb
mov
adc
xchg
pop
std
xor
mov
fs
sbb
mov
shrl
push
inc
loope
loop
mov
sub
adc
fsubrs
inc
pop
fsub
in
pop
adc
in
loop
jmp
loop
push
clc
push
dec
mov
packsswb
fld
sub
jnp
out
test
jp
push
imul
shlb
clc
push
jns
loop
sbb
pop
aaa
xorl
in
xor
mov
jle
push
jnp
xor
xchg
sbb
cmp
mov
cmc
push
pusha
shr
pop
ds
jmp
stos
sub
hlt
sbb
xchg
fisttps
mov
add
jl
add
fisubs
mov
ljmp
cmp
pusha
pushf
bound
mov
mov
push
fsubp
in
and
decl
cwtl
scas
lcall
mov
or
mov
int3
cmpsl
add
iret
jmp
ljmp
inc
cmpsb
xor
xchg
in
xchg
mov
pop
pop
jle
ds
xor
sub
and
fisttpl
inc
test
mov
pusha
fsubr
out
xchg
dec
aam
insb
repz
int3
iret
sub
stc
leave
or
add
decl
fsubrs
pop
add
cmpb
push
pop
repz
subl
sub
lods
ficoml
mov
insb
aad
ret
loop
sbb
mov
ljmp
sbb
push
stc
int3
dec
lds
jbe
sub
std
les
out
es
loopne
shll
shll
and
lea
jl
sbb
arpl
xor
mov
jbe
testb
cmp
dec
lock
in
mov
imul
mov
in
xor
jg
fisttps
pop
mov
out
push
mov
adc
xor
shl
mov
mov
fincstp
hlt
jo
push
pop
cmp
pop
xchg
pop
hlt
adc
test
adc
mov
and
inc
insb
testb
mov
imull
or
adc
stos
cmp
and
xchg
push
sub
dec
add
mov
push
fmulp
mov
lods
or
and
jmp
or
mov
sub
jmp
fld
loope
andl
jmp
mov
data16
cmpsb
cmp
adc
and
sbb
inc
fwait
insl
mov
aas
push
fisubl
sub
inc
sbb
cmpsl
inc
lret
imul
adcl
jae
push
cmp
add
mov
mov
js
mov
sbb
push
std
add
test
ljmp
adc
jae
mov
jae
jne
dec
jg
fdivr
xchg
mov
jnp
inc
mov
jb
ret
popa
pop
aas
testb
das
cmp
aad
sub
int3
punpcklbw
imul
lea
or
jmp
icebp
aad
data16
pop
cmp
loopne
cmp
fs
adc
pop
inc
inc
or
push
inc
sbb
ret
push
cmpsb
sub
andl
jg
out
push
mov
sbb
push
scas
push
in
sbb
inc
in
pusha
cli
dec
pop
lcall
xchg
mov
jl
mov
cmp
ljmp
in
das
xlat
inc
fdivs
adc
adc
mov
jo
dec
pop
xor
push
jbe
push
scas
dec
jae
cli
xor
sbb
out
stos
mov
jl
sbb
add
out
xchg
fiadds
mov
dec
jle
pushf
lret
inc
ljmp
sbb
mov
in
pop
sbb
pop
int
add
pushf
enter
ja
ss
or
inc
sub
mov
loope
sub
xor
dec
popa
lcall
lret
and
scas
faddl
and
jl
push
movsb
movsb
ljmp
sbb
shll
dec
jmp
mov
sub
pop
gs
add
fidivl
sbb
popl
cmp
pushf
mov
xor
cmp
adc
pop
ds
cmp
leave
ret
mov
bnd
sbb
pushf
sub
dec
stc
les
xor
mov
xchg
movsl
rcrb
mov
cmpsb
xchg
or
nop
add
orb
cmpsb
imul
add
fistl
pop
push
push
cld
mov
into
flds
insl
cmp
nop
sbb
add
jno
jp
cltd
push
in
xchg
cmpsb
sub
xchg
dec
dec
xchg
inc
jle
push
int
lock
idivl
mov
cwtl
popa
or
cmp
cmp
sub
xlat
shlb
xchg
data16
cli
int3
pop
sub
mov
add
jne,pn
in
mov
jne
add
sbb
outsl
inc
push
movsb
insl
cmp
fcomps
cltd
jno
hlt
test
aam
xor
dec
rcll
or
push
stos
stc
bound
insb
add
movsb
ljmp
xor
xchg
jno
or
cmp
lea
jb
adc
scas
mov
imul
mov
stos
jne
leave
ret
inc
ljmp
lahf
mov
mov
xor
ficoms
aad
pushf
addb
xchg
fildll
mov
rcr
or
ds
popf
movsb
adc
icebp
ljmp
inc
adc
xchg
adc
jb
daa
push
push
or
dec
add
cmp
out
pop
js
pushf
jo
iret
nop
adc
ret
sti
out
shll
pusha
imul
and
mov
lock
push
mov
adc
hlt
daa
cmpsb
adc
bound
cltd
daa
sub
jo
aaa
mov
pop
mov
aaa
lods
mov
push
or
and
inc
pop
or
in
cltd
xchg
lods
andb
xor
push
push
int
push
in
lret
imul
pop
cmp
xchg
js
fdivrs
and
and
dec
add
out
pop
shl
test
mov
cmc
mov
imul
jno
sbb
inc
add
mov
and
or
adcb
or
pop
or
stos
and
mov
mov
in
inc
inc
xlat
cmpsl
orl
adc
arpl
incb
xchg
stos
fiadds
test
add
les
jle
lods
push
popf
xlat
push
outsb
dec
addb
xchg
pop
push
xor
jno
fiaddl
outsl
icebp
ja
lcall
dec
loop
les
adc
mov
jno
mov
sub
xor
ret
test
repnz
pusha
aaa
xchg
add
sbb
sbb
sub
jnp
sbb
aaa
sub
pop
je
cmp
pushl
lahf
mov
fdivrl
test
pushf
pop
insl
dec
das
sub
stos
loop
leave
add
mov
xor
fwait
sbb
xor
jnp
mov
lcall
push
scas
aaa
into
pop
xchg
xor
lret
sub
lods
cmc
push
data16
xchg
in
jle,pt
out
pextrw
sbb
in
mov
or
or
cmpsb
int3
cltd
xor
adc
into
mov
mov
sbbb
adc
jbe
les
lcall
outsl
stos
fsub
ror
aaa
addr16
test
add
jg
das
or
add
leave
fildll
and
jge
les
cwtl
adc
jb
mov
call
test
insb
mov
push
push
mov
xor
iret
aad
jl
push
addr16
push
cmp
jge
pop
iret
mov
cs
lahf
lret
notb
xchg
faddl
and
xchg
rcll
jb
sub
xchg
mov
mov
ljmp
dec
or
inc
jmp
stos
add
mov
lahf
mov
orb
xchg
les
in
xchg
sbb
add
sub
or
dec
pop
mov
sub
push
inc
mov
add
cmpsb
push
fisubl
popa
in
and
add
push
jae
rol
insl
dec
and
xchg
jns
shld
mov
push
aas
add
test
ret
flds
hlt
fwait
adc
xchg
cmpsl
inc
das
fld
mov
imul
popf
or
mov
fwait
and
inc
shl
jmp
sbb
pop
mov
adc
or
ss
and
lea
cmp
test
dec
int
adc
movsl
xchg
mov
xchg
mov
xchg
test
jbe
jo
xchg
jg
sahf
xchg
aas
scas
mov
mov
das
jmp
fwait
imul
mov
push
adc
or
sub
mov
cmpsb
adc
sbb
jns
jle
aam
dec
fadds
mov
cmpsb
test
test
push
sbb
push
test
xchg
lea
add
xor
jecxz
sti
lods
faddp
lock
sub
addr16
test
outsl
lods
push
test
xchg
dec
jno
mov
jmp
jg
ret
sbb
push
outsb
nop
mov
mov
adc
fstpl
sbb
cmp
xchg
lcall
push
pop
dec
add
fs
sahf
fbld
repnz
mov
add
movb
aas
dec
inc
imul
addb
mov
stos
mov
fxam
dec
cli
and
mov
inc
jmp
sbb
sti
sbb
cmp
xchg
fisttps
inc
aaa
test
add
jae
mov
jmp
divb
jg
push
jnp
mov
lods
fsubrs
ja
shll
enter
test
or
dec
jb
mov
and
dec
pop
pop
scas
xor
mov
pop
jnp
push
fs
ret
sahf
or
xor
scas
add
cmp
mov
out
push
fcmovnb
mov
and
in
dec
dec
mov
jle
cs
popf
adc
mov
dec
add
xor
daa
fldenv
or
das
cmp
mov
cmp
or
movsb
pushf
insb
rcrb
xchg
pushf
bound
sub
out
faddl
data16
imul
sti
sub
push
clc
jl
mov
aas
jecxz
sub
test
out
sbb
mov
mov
je
sub
shlb
mov
jmp
cld
xor
jae
sub
sbb
fsubp
push
repz
int
stos
and
xchg
add
add
lds
dec
ja
inc
lods
in
push
push
jecxz
nop
mov
fistpl
insl
icebp
lret
js
enter
or
jo
int3
je
test
mov
inc
out
cmp
decl
and
mov
xchg
pop
loop
dec
mov
cmp
pop
mov
cs
in
mov
aaa
out
orb
inc
aam
ljmp
nop
pop
inc
aaa
jnp
cmp
pushf
jno
sub
aam
pinsrw
jle
xchg
test
inc
pop
or
ror
fs
daa
jmp
or
jl
lret
lea
popf
mov
or
sub
call
lret
adc
dec
push
stos
repz
sub
sub
pop
out
pop
cli
fidivl
cmp
scas
inc
pop
and
xchg
out
addr16
std
shl
stos
fwait
test
mov
xchg
movsb
dec
shlb
pop
lock
or
pusha
jp
js
data16
inc
fsts
pop
je
je
push
push
cltd
iret
arpl
jbe
mov
das
jnp
loopne
int3
or
out
mov
dec
sub
xor
inc
cmp
sub
leave
fldenv
dec
movsb
cmpsb
sbb
out
cmp
mov
or
fildll
or
out
dec
cmc
xor
and
cmpsl
mov
lret
mov
test
xchg
ja
jae
xchg
sarb
xor
rol
mov
fimull
xor
fnsave
mov
jns
xlat
dec
out
and
leave
std
pop
xchg
orb
xchg
inc
push
fimull
stos
out
lret
es
lret
push
add
pop
repz
pop
ds
outsl
iret
stc
outsb
push
out
subl
pop
pop
and
jb
dec
jnp
inc
mov
add
jg
sbb
mov
pop
ficoml
lock
popa
add
insb
lock
push
sbb
lock
cld
push
push
and
stos
inc
inc
test
shrb
adc
add
inc
inc
stos
ljmp
ss
xchg
jb
add
mov
cmpsb
inc
es
mov
test
insl
pusha
insb
push
fwait
inc
int
shl
call
mov
mov
or
adc
jle
nop
test
cmp
or
xor
neg
xchg
push
xchg
push
cmp
xor
bndstx
pushf
cmp
xor
xor
testb
add
lcall
inc
push
add
xchg
and
lods
hlt
xor
mov
mov
push
pop
push
xor
jbe
mov
dec
adc
or
fimull
sub
dec
pop
sub
outsb
ja
xchg
dec
js
arpl
or
in
push
mov
out
test
out
js
and
shr
cmpsb
push
jle
jge
ljmp
mulb
jp
fsubl
fs
lret
divb
xchg
daa
jnp
movsb
jne
and
movsl
inc
sti
fcoml
shl
popf
push
xchg
repz
sbb
xchg
inc
in
push
inc
mov
push
dec
and
add
int3
pusha
jns
jg
je
int
sub
insb
dec
clc
mov
dec
cmp
imul
cmpsb
addr16
sub
jbe
fsubrl
test
test
inc
iret
loope
cmpsl
addr16
imul
outsb
std
xchg
call
push
adc
mov
inc
pop
jmp
sbb
sbb
inc
popf
insb
mov
call
cmp
stos
sahf
dec
fs
sbb
out
mov
loop
imul
mov
mov
cmp
pop
in
add
add
ja
hlt
pop
push
xchg
mov
imul
aam
mov
frstor
nop
push
lret
xor
je
lds
out
fwait
lret
jb
jne
pop
pop
imul
jnp
xor
aad
push
and
lds
push
mov
jg
add
xorl
nop
and
mov
jne
dec
dec
orb
jmp
mov
sub
lds
rorb
push
or
mov
mov
inc
rclb
les
jnp
cmpsb
in
mov
ljmp
arpl
int
pop
adc
in
push
sub
pushf
sbb
xchg
inc
ret
pop
push
dec
arpl
loop
jns
in
lcall
lcall
add
xchg
dec
xchg
es
ja
loop
shlb
das
iret
mov
lret
sbbb
clc
cmp
ret
lcall
fwait
jecxz
xor
int3
ret
push
adc
lock
jg
addl
inc
insb
jecxz
cwtl
fisubrl
jb
ret
in
pop
xchg
adc
rcrl
xchg
push
lahf
movsb
cmp
xchg
imul
out
in
jns
loop
shll
pop
mov
je
fcmovnbe
mov
aam
push
push
or
movsb
jp
ret
repz
cmc
imul
push
add
movsb
sti
in
jae
sahf
or
test
sbb
notb
lea
and
stc
pop
fstps
or
mov
fsubl
fisubrl
inc
pop
push
test
jns
aaa
mov
adc
jbe
das
jbe
rcrl
pop
pop
push
test
inc
and
in
add
xor
adc
mov
adcb
sbb
imulb
push
in
sbb
std
adc
repnz
xchg
or
call
popl
add
push
push
xchg
adc
lods
loop
mov
fmul
stos
xor
adc
arpl
repz
and
stc
pop
mov
icebp
and
mov
adc
mov
decb
rolb
bound
and
adc
popa
adc
push
loop
aas
loopne
or
mov
lcall
jmp
mov
and
scas
jns
pushf
sub
dec
add
push
xor
push
jp
lods
lods
push
inc
push
bound
popa
push
mov
cs
dec
sahf
scas
mov
lock
call
fidivrl
aaa
and
dec
aad
icebp
xlat
mov
repz
xchg
sbb
into
je
js
fs
sarb
cltd
aam
cltd
pop
push
xchg
inc
or
das
add
rolb
icebp
call
mov
jp
mov
push
jg
cmp
ljmp
xchg
cmp
cmp
pop
test
inc
aam
push
pop
cs
cmp
sub
mov
jle
mov
shll
mov
sub
push
sbb
leave
inc
inc
mov
and
aas
jno
jnp
and
inc
mov
mov
aas
mov
cmpl
cmp
inc
sub
pop
pop
movsl
mov
and
adc
js
mov
loop
mov
pusha
pop
es
imulb
adc
clc
jmp
inc
ds
or
dec
lcall
push
out
push
sbb
inc
sub
xor
jnp
or
fsub
imul
and
iret
outsl
jl
dec
repnz
out
daa
stc
mov
jb
dec
aaa
lea
lcall
push
adc
mov
pop
popa
dec
in
int
cmp
shr
pop
aas
cmp
sub
xor
pop
push
push
sub
loopne
jbe
sub
test
std
clc
in
sub
jo
jp
jmp
test
lret
add
loope
test
or
fsubr
pop
dec
cli
pop
and
xchg
cwtl
pop
test
adcb
xchg
aad
pop
test
stos
mov
pop
nop
insl
movsl
arpl
int
cmp
ret
aaa
jbe
std
jo
sbb
mov
sub
outsl
pop
loope
lods
pop
inc
sub
xchg
scas
aaa
arpl
sub
das
jns
roll
sub
scas
adc
out
lea
scas
into
dec
cmpsb
aad
dec
divb
outsb
fs
lret
push
je
pop
call
cli
inc
pop
loop
add
fnstcw
in
inc
pushf
xchg
mov
adc
xchg
hlt
mov
sbb
mov
dec
sub
nop
stos
mov
dec
mov
pop
notw
cltd
mov
xchg
xchg
add
call
movsb
push
sbb
fdivl
outsb
insb
das
call
test
adc
jne
cltd
in
es
fcmovb
add
add
or
cmpl
addr16
jne
xchg
sub
sub
shrb
das
in
cwtl
cli
popf
mov
xchg
adc
mov
test
sti
lret
push
sbb
int
lods
pop
jmp
add
push
lret
jmp
cmp
and
test
xchg
push
popf
jno
sti
mov
js
cmc
mov
insb
inc
js
cli
aad
sbb
into
movsl
mov
arpl
jne
std
rclb
nop
enter
mov
mov
sbb
rcr
xor
inc
imul
add
inc
fmuls
pop
inc
mov
push
mov
std
pushf
push
jno
jp
cvttps2pi
and
es
sahf
ds
fisubl
into
and
mov
sbb
enter
jb
es
sub
mov
enter
flds
aaa
ret
push
and
pushf
inc
gs
arpl
loope
hlt
xchg
jnp
cmp
cltd
sbb
shll
aas
jg,pt
jno
ror
js
popa
insb
cli
iret
mov
sbb
jmp
jl
sarb
jne
mov
lock
fnsave
fists
sub
sahf
sub
nop
repnz
ret
popf
int
test
cmp
imul
fisubs
jg
aam
pop
mov
scas
dec
aas
adc
push
fdivl
rol
sub
cmpl
sub
push
or
xchg
xor
push
neg
push
jo
stc
je
xchg
xor
out
pop
sti
test
jge
xchg
repnz
cltd
mov
inc
rclb
int
adcb
or
aaa
push
push
sbb
out
popf
fcomip
mov
inc
lods
leave
push
in
mov
bound
inc
lock
test
hlt
or
mov
jl,pn
or
ficompl
dec
mov
in
out
in
mov
outsl
mov
sbb
push
pop
ljmp
and
push
or
mov
sbb
repz
xchg
inc
adc
mov
dec
or
push
daa
and
cmc
clc
pusha
inc
push
mov
xchg
in
and
popf
pushf
add
negb
sbb
addr16
jnp
enter
orl
mov
xchg
jb
push
int
lcall
clc
or
pushw
movsb
pusha
jb
aaa
jne
add
int3
lods
xchg
insl
shll
add
sbb
movsl
mov
mov
cs
jmp
or
push
or
mov
mov
insl
mov
fisubl
inc
stos
sub
fxch
insl
rolb
lods
out
insl
pop
jbe
pxor
cmp
inc
jp
popf
xchg
sbb
dec
mov
pusha
pushf
lock
rcrl
repnz
push
lcall
xor
into
jo
mov
pop
cltd
xor
and
lods
test
cmp
ljmp
mov
dec
ds
ljmp
jp
in
clc
push
lea
pop
xor
mov
fiadds
aas
in
inc
rcll
sub
popf
pusha
xor
xchg
push
dec
and
cli
icebp
jg
out
pop
and
test
mov
in
lret
adc
lcall
testb
add
jl
dec
repnz
xchg
push
jle
adc
xchg
mov
adc
lock
jecxz
pop
adc
dec
punpckhbw
cli
or
sub
andb
jbe
cltd
ret
cmp
stos
jmp
sbb
dec
hlt
and
lcall
sub
stc
repz
jle
insl
add
jae
and
ficoms
adc
or
pushf
decl
lods
ds
xchg
xchg
cld
stos
in
mov
in
jbe
loop
pop
pop
push
or
scas
test
xchg
call
notl
xchg
test
xlat
sub
arpl
mov
arpl
inc
jl
mov
mov
or
lea
pop
xchg
out
imul
out
lret
outsl
sbb
sbb
inc
adc
cmp
rcl
test
shr
aam
cmp
jne
mov
shll
dec
mov
clc
inc
or
and
mov
mov
mov
scas
mov
push
jb
pushf
lock
pop
call
insb
sbb
and
adc
movsb
cmc
mov
gs
les
inc
scas
pop
sub
out
inc
dec
dec
cmpl
neg
jns
mov
out
cmpsl
push
xlat
imul
adc
aad
test
and
hlt
fsubrs
sbb
incb
inc
xchg
cmpsl
inc
mov
shrl
mov
bound
and
adc
pop
movl
and
shll
xorl
fwait
out
or
ret
jnp
pop
fs
push
mov
and
sub
add
dec
test
cltd
mov
xchg
sti
dec
sbb
or
jg
xlat
jae
inc
in
dec
jae
mov
push
mov
std
andb
out
mov
popa
ljmp
jle
inc
mov
or
clc
lret
in
inc
lea
das
cltd
aas
ljmp
mov
jne
rolb
and
pop
mov
adc
pop
jmp
sbbb
ret
outsb
fcmovnu
xor
dec
add
mov
stc
test
mov
leave
shll
outsl
hlt
sar
pusha
dec
or
push
mov
mov
aaa
stc
sysret
mov
test
inc
stos
cmp
daa
arpl
pop
adc
mov
add
fst
bound
cli
adc
pop
mov
loop
push
mov
mov
fdivp
add
push
pusha
mov
inc
cmc
adc
cwtl
or
adc
add
pop
shlb
out
dec
repnz
add
pop
sbb
add
cmc
cld
sub
movsl
cltd
dec
fcompl
jl
lds
cmp
into
ret
mov
cmp
dec
mov
jns
fcoms
insb
std
mov
jb
mov
xchg
pop
call
pop
inc
sub
test
in
lods
dec
cmpsb
int3
lods
pop
icebp
mov
pop
inc
out
pop
mov
cmp
cmp
jecxz
fcmovb
and
testb
addr16
push
push
add
cs
mov
das
jecxz
and
das
iret
xchg
jo
mov
outsl
fisubrl
jb
cs
fs
cld
jnp
out
mov
ret
push
pushf
out
in
aam
mov
fsubs
ds
adc
sub
sbb
test
xor
hlt
ret
mov
cmp
out
sahf
xchg
rcrb
xchg
dec
rclb
sahf
jecxz
add
dec
pop
in
sbb
sub
push
decb
and
ja
inc
in
mov
pushf
adc
imul
je
sbb
fcmove
xchg
lods
je
and
into
lods
pop
and
insb
repnz
fs
es
fisubrs
icebp
pop
and
repz
in
jae
cmp
inc
daa
mov
stos
cli
pusha
cs
cs
lods
stos
leave
cmp
pop
std
pop
push
add
sbb
in
ret
imul
cltd
popa
ja
adc
call
fcompl
push
pushf
cltd
lret
cs
adc
lret
pushf
cmc
lsl
push
xor
out
insl
jmp
fstl
cmc
leave
add
int
pop
fldcw
repnz
sbb
daa
iret
jl
or
add
in
mov
and
mov
mov
into
outsb
inc
push
jnp
sbb
sub
jl
cwtl
dec
das
sti
add
sub
mov
stos
call
add
sahf
or
inc
out
test
push
popf
test
imul
add
jne
jmp
rcr
testb
lods
xchg
les
sbb
stc
insl
scas
rclb
lcall
pop
stos
mov
test
adc
adc
cmp
popf
xchg
pop
jne
adc
jg
pop
dec
sbb
lahf
js
and
std
hlt
mov
cwtl
lods
das
mov
ficomps
mov
js
mov
in
mov
and
and
push
scas
das
mov
test
in
adc
rol
shr
inc
xchg
movsl
add
add
push
sbb
daa
sbb
jp
fld
mov
std
rorl
mov
loopne
sbb
popf
xchg
ret
je
icebp
xor
lds
or
xlat
jmp
call
leave
jnp
pusha
cmp
add
xor
cmp
dec
xor
loop
nop
nop
movsb
adc
ffree
test
jmp
cmp
js
stc
nop
add
divb
sub
cmc
test
and
outsl
and
mov
adc
ljmp
outsb
lret
mov
inc
fcomps
xchg
bound
add
mov
and
mov
idivl
shl
mov
gs
xor
repnz
mov
xchg
out
sbb
je
cmp
pop
dec
pop
inc
jmp
js
push
lret
data16
addr16
in
xor
pop
sub
int3
push
repz
or
jmp
loope
ds
add
movsl
mov
jo
sub
pop
pop
inc
pushf
ficoms
xlat
mov
out
cmp
xor
mov
scas
repz
xchg
mov
out
mov
outsl
imul
jns
push
cmp
lea
dec
lock
aas
seto
loop
inc
dec
out
sahf
popf
cmpsl
xchg
pop
jae
mov
mov
clflush
fstl
adc
cmp
aam
mov
test
pop
cmpl
pushf
icebp
test
lcall
sbb
in
xor
fwait
ss
fs
push
stos
test
test
fnstsw
inc
rol
incl
fisttps
adc
push
lds
xchg
js,pt
out
push
mov
rcrb
in
or
mov
popf
sti
pop
mov
int3
aad
ror
sub
xor
pop
mov
shll
push
mov
mov
das
pusha
jnp
jecxz
xchg
ret
adc
add
loopne
jmp
pop
fs
mov
mov
in
mov
xor
add
mov
add
roll
call
out
stos
mov
cmp
sbb
adc
fdivs
ret
sbb
cmp
xor
jbe
sub
lea
xor
cmp
xchg
xchg
inc
pop
sbb
mov
fmuls
icebp
cmc
mov
sub
jo
daa
sub
push
dec
jl
fisubrs
pop
cmp
cmpsl
sub
popa
inc
push
inc
jbe
scas
cld
xchg
mov
in
pop
std
sbb
aas
xor
inc
mov
lea
pop
or
daa
daa
addl
sub
jne
popf
jmp
pushf
insb
adc
aam
inc
adc
inc
js
cs
aam
mov
pusha
mov
sub
push
and
lods
insl
or
faddl
or
stos
out
loope
sarb
mov
dec
cs
ficoml
mov
fistpll
cwtl
outsl
mov
cmp
adc
push
mov
xor
add
mov
jns
jnp
in
pusha
cwtl
in
lcall
scas
inc
in
jno
pop
lea
aad
push
mov
push
enter
jle
add
cmp
movsl
jl
icebp
add
mov
mov
mov
xchg
sbb
jbe
sbb
inc
int
mov
aas
jg
add
test
repz
or
mov
add
mov
shlb
mov
xor
js
pop
pop
bound
xchg
fiadds
xchg
insl
mov
pop
mov
loop
add
notb
xchg
aas
out
push
xor
stc
dec
inc
push
mov
popa
dec
xor
mov
mov
bnd
stos
ja
rol
divl
scas
addr16
lods
push
shlb
inc
and
bound
lods
aaa
mov
or
and
inc
ret
iret
aam
sub
sti
push
mov
pop
fwait
inc
fisubrs
mov
out
pusha
ljmp
add
or
in
cmp
out
xchg
mov
lahf
scas
mov
push
mov
sbb
push
fwait
in
add
fdiv
pushf
insl
lods
push
jg
add
xchg
sub
ds
mov
sub
push
adc
sti
push
add
mov
push
cld
aaa
mov
scas
call
lcall
push
mov
cmp
stos
sarl
cmp
lcall
lret
xor
sbb
scas
in
inc
popf
inc
out
into
adc
mov
or
push
sahf
fdivl
pop
incl
pusha
stos
das
lock
push
ljmp
xor
leave
lahf
cmpl
js
negl
push
pop
clc
movsb
xor
gs
jmp
ret
out
cmpsb
aad
out
xor
mov
jbe
xchg
icebp
es
mov
inc
inc
out
pop
jo
aad
pushf
adc
and
adc
mov
movsb
cmpsl
sbb
aam
mov
in
lock
add
and
fldenv
sbbl
push
arpl
popf
sti
js
gs
jge
vsubss
inc
jmp
sub
adc
sbb
loopew
lds
imul
mov
xchg
pop
or
lcall
outsl
mov
bound
fistps
mov
cmpsl
xor
push
sub
jne
insb
test
fsubs
out
hlt
repnz
mov
mov
test
xor
stc
out
lock
add
mov
cltd
sarl
aaa
push
int
dec
mov
fwait
cmc
push
int
jb
lret
dec
add
sub
leave
inc
adc
mov
aam
nop
push
inc
fbld
lea
pop
sbb
iret
and
loop
jo
loopne
dec
mov
add
fstpt
jecxz
lock
xor
ret
daa
dec
popl
stos
add
mov
xor
aaa
gs
or
stos
lods
in
lret
inc
xor
xor
mov
mull
pop
cmp
pushf
lock
test
gs
pusha
add
or
mov
gs
pop
jne
pop
stos
jbe
jmp
mov
xchg
jle
insl
ret
cmp
xlat
or
add
xor
jg
or
repnz
fidivrl
ja
inc
mov
addr16
aad
sbb
or
aas
sti
sbb
pop
cs
xor
lods
dec
mov
out
mov
mov
lret
push
pop
jg
mov
leave
dec
insb
in
pusha
mov
sbb
cs
sbb
lds
jns
inc
push
xlat
sbb
sbb
mov
cwtl
adc
jne
mov
ret
cmp
sbb
or
dec
out
mov
fdivs
mov
xchg
push
in
fcmovnu
leave
daa
push
xchg
mov
pop
ja
dec
popa
pop
xor
mov
popf
cmp
sar
dec
mov
outsl
and
jb
shll
add
fmulp
es
adc
mov
je
mov
inc
aad
cltd
fldenv
push
cmp
adc
cmp
jecxz
or
xchg
adc
pop
xchg
test
jne
mov
mov
or
mov
je
icebp
loopne
inc
je
into
mov
pop
lds
dec
mulb
sbb
mov
ljmp
ss
jb
fildl
shll
dec
arpl
sub
xor
sbb
cmp
mov
xor
shll
cmp
and
sbb
cmc
sub
and
stc
lock
rorl
push
cltd
call
sarl
sbb
jno
or
in
in
popa
scas
mov
lods
movsb
inc
ret
and
iret
out
or
imul
pop
cmpsb
lock
jne
sub
aam
inc
lea
xor
and
pop
test
rcll
test
jo
fidivrl
in
xchg
jnp
iret
dec
sub
xchg
insl
mov
insb
and
lea
insl
sub
mov
popa
lea
outsb
adc
out
push
mov
fidivs
gs
or
cmpsb
pop
cmp
xchg
jg,pt
repz
jge
das
sbb
jne
mov
js
bound
or
sub
icebp
addb
insb
fs
pop
xchg
shrb
mov
out
cmp
clc
cmp
dec
loopne
les
lahf
movsl
or
test
mov
pop
jne
aam
pop
dec
push
mov
fcmovnb
stos
sarl
stos
loope
pop
push
scas
mov
mov
inc
add
sbb
sbb
shll
outsb
mov
sti
addr16
das
jno
fistl
out
mov
mov
adc
jno
xchg
cmpsl
sub
xchg
pop
mov
cmp
outsl
out
fnstenv
lods
pop
push
inc
sub
jbe
loope
lods
je
enter
sub
inc
rolb
nop
imul
outsl
sbbb
sbb
sub
add
jnp
mov
movsb
pop
fnstcw
scas
inc
in
and
add
push
mov
dec
or
aam
jge
and
xor
jbe
add
cmpsl
xlat
not
sbb
cmp
idivb
fneni(8087
imull
jecxz
imul
nop
jecxz
jmp
jecxz
xchg
inc
int
xchg
das
jns
ds
sbb
in
negl
call
and
dec
ret
mov
mov
outsb
lds
jbe
pop
cmc
and
in
enter
mov
stos
test
jg
test
push
mov
loop
leave
cmpsl
movsl
je
and
into
jmp
dec
dec
inc
sahf
into
mov
cld
movsb
les
shlb
sbb
fmuls
je
jmp
sbb
pop
or
mov
sub
cmpsl
scas
es
stc
ret
adc
enter
ljmp
jmp
adc
cli
adc
push
mov
push
push
pop
cmp
repnz
lds
movsl
sub
fs
stc
jp
in
push
push
xchg
mov
cli
je
jne
pop
mov
out
mov
popa
sub
ret
pop
aas
das
into
pop
scas
sub
inc
jmp
mov
ret
sbb
lret
stc
push
add
xchg
xchg
mov
and
xchg
out
and
fs
sbb
xchg
aaa
push
add
push
add
loopne
push
scas
sub
push
adc
cli
fbstp
adc
xor
push
pusha
mov
mov
or
xchg
mov
xchg
movsb
xlat
addr16
jne
divl
nop
mov
jo
cmp
and
lods
xchg
adc
arpl
outsl
out
mov
in
dec
clc
in
scas
pop
fidivrl
cltd
push
xor
xchg
cmp
xchg
lock
fstpl
sbb
or
push
call
test
int
insl
js
mov
add
fstpl
mov
das
fisttpl
dec
scas
hlt
xchg
jne
and
pop
aaa
xorl
xor
sbb
sbb
or
push
mov
cmc
or
sarl
in
or
jge
mov
lret
mov
push
pop
sub
or
out
and
jecxz
push
push
pop
push
call
add
add
jecxz
inc
insl
sub
mov
xchg
sub
cli
and
movsl
add
lea
push
or
push
inc
and
int
push
sub
cmp
jbe
push
stc
xchg
pop
out
cld
lahf
arpl
icebp
and
loop
push
mov
orb
and
mov
or
rcr
push
dec
add
lea
pop
fucomp
lret
xchg
inc
mov
outsl
pop
pop
dec
loopne
lock
icebp
test
test
stc
icebp
test
mov
or
and
jle
push
nop
inc
arpl
dec
inc
cld
ret
pop
cmp
aad
cmp
test
jb
setbe
test
xor
mov
mov
or
aas
pop
xchg
filds
es
stc
or
data16
ss
leave
add
mov
shl
ret
in
fsubs
sub
aad
sbb
push
out
test
sbb
add
fwait
push
add
or
cld
scas
out
call
ret
cli
xchg
dec
inc
mov
call
pushf
cmp
movsb
cmp
das
and
aaa
xchg
inc
dec
outsb
outsl
mov
negl
imul
cmpsl
add
dec
cli
jl
sar
jge
cmp
icebp
inc
pop
iret
jg
arpl
insl
jmp
fisubrl
es
ret
aaa
cmpsb
xchg
sbb
jecxz
in
xchg
push
int
dec
push
add
add
inc
push
jecxz
jnp
jns
stos
cmp
cmp
daa
sarl
mov
or
dec
jle
jbe
movsl
xor
adc
xor
dec
mov
xchg
fidivl
aaa
es
ds
std
stc
int3
pop
lds
ljmp
ret
push
dec
mov
add
ljmp
push
out
cli
popa
out
dec
stc
enter
xchg
or
pop
mul
loop
cltd
adc
sub
pop
mov
pop
ss
jb
les
aad
les
mov
mov
jae
cltd
pushf
pop
pop
popf
cmc
push
test
xchg
inc
mov
push
jecxz
add
mov
pop
push
mov
adc
sub
jg
lds
leave
or
into
das
cmpsl
sarl
scas
pop
cmp
scas
push
stos
pop
popa
jne
pushf
jecxz
les
les
jnp
adc
imul
xchg
out
mov
add
xchg
and
jo
sbb
xchg
push
lret
int3
sub
loop
cltd
push
mov
fs
out
lock
data16
rcrb
xchg
ljmp
push
jnp
ret
aam
out
orl
imul
push
mov
fimuls
mov
sti
xchg
sub
xchg
imull
lds
ret
mov
mov
addl
push
popl
cmp
mov
xlat
push
mov
jb
sbb
push
or
lods
sbb
xlat
test
pushf
mull
push
enter
fucomip
push
scas
cmp
jge
out
adc
in
push
cli
dec
push
jge
ret
in
cmp
xchg
sub
and
shlb
pop
ljmp
sub
cmp
mov
or
or
push
jle
addb
xorb
jmp
les
mov
or
addr16
mov
cmpl
sub
std
pop
or
rorb
jle
xorl
mov
xlat
pop
test
sbb
push
push
sbb
xchg
push
mov
adc
or
mov
ret
push
adc
ss
rcll
pop
adc
sub
in
jo
sbb
sbb
ja
cmp
cs
movsl
cmp
mov
mov
push
clts
or
inc
mov
sbb
mov
rcrb
lret
adc
add
and
das
or
inc
iret
orl
fidivl
xor
test
xchg
sub
imul
js
lret
cmp
add
popf
mov
jmp
xchg
cmp
int3
stos
data16
lds
xor
dec
push
mov
and
gs
adc
xchg
outsb
scas
enter
xchg
jnp
cmp
out
movsl
rclb
dec
ss
cltd
hlt
mov
cli
insb
rorl
sbb
and
jmp
cmp
mov
cmp
addr16
and
mov
sti
add
lock
and
test
mov
add
outsl
hlt
dec
testb
push
cld
jmp
jno
lods
mov
fld
sti
nop
fcom
sbb
push
sub
mov
or
adc
out
je
jo
or
and
xchg
fwait
out
dec
push
fcmovb
cld
dec
rorl
mov
mov
jge
cli
stos
add
adc
dec
sbb
mov
xor
mov
pop
sahf
cwtl
sbbl
ret
ret
xchg
stc
jae
mov
sbb
movsl
movb
ficoms
test
xchg
dec
ret
pop
push
push
stc
test
and
repz
sbb
sub
inc
aas
push
xchg
adc
sbb
mov
jg
xchg
cld
loopne
sub
js
jmp
and
mov
je
xor
insl
jmp
stos
incl
popf
roll
jns
mov
pusha
adc
je
ret
pop
cmp
outsl
js
push
or
mov
jo
roll
nop
sbb
dec
jnp
and
lock
xchg
adc
test
mov
mov
sbbl
xor
cmp
imul
add
mov
sbb
aad
test
outsl
mov
ret
repnz
aad
jecxz
and
adc
sub
mov
mov
and
negb
shr
or
out
inc
mov
mov
repnz
scas
movsb
lret
movsb
cli
sbb
jae
or
lds
pop
push
insb
mov
dec
gs
icebp
popa
push
inc
mov
fwait
sbb
pusha
fdiv
int3
push
div
push
iret
adc
int
mov
cld
mov
jb
or
movsb
rorb
dec
sub
enter
jnp
xlat
cmp
outsl
xlat
aaa
mov
xor
stos
mov
dec
push
add
xchg
and
movsb
xchg
push
jb
sbb
jmp
out
arpl
in
jecxz
notb
mov
test
popf
pop
push
filds
push
jp
ds
push
imul
jo
cwtl
movsl
and
inc
or
or
jb
subl
mov
pop
lahf
xchg
jb
ss
fldt
pop
sbb
xchg
fstl
add
xchg
addr16
fists
xchg
sub
sub
nop
ret
dec
sbb
jbe
lock
jle
movsb
cmp
add
scas
sbb
adc
sbb
xchg
xchg
ljmp
sbb
mov
pop
and
xor
call
test
jge
js
mov
pop
mov
xchg
sub
loop
mov
imul
mov
jnp
sub
push
pop
mov
setbe
ss
das
lcall
sub
insl
jmp
scas
jns
xlat
mov
adc
ljmp
mov
call
bound
push
fs
sub
sub
cmp
scas
pop
push
std
cmp
push
dec
mov
ret
or
popa
pop
mov
mov
leave
inc
mov
cmp
mov
sub
pusha
mov
rcll
adc
je
shrb
mov
sahf
in
ficomps
int
rclb
adc
jnp
xor
sub
test
adc
rcll
add
enter
cmp
jae
push
stos
and
es
ret
fsubrl
push
sub
popl
push
pop
cli
cmp
pop
jne
cmp
xlat
inc
xchg
fsub
mov
pop
out
rorb
aaa
imul
pop
jg
ljmp
mov
sub
cltd
jae
into
cmp
mov
nop
aas
sub
mov
daa
jmp
mov
roll
mov
or
adc
stc
test
xchg
push
or
jbe
inc
adc
popf
sbb
cmp
sbb
or
xchg
fisubrl
adc
sub
andl
fdivrp
sub
fs
dec
adc
fmull
sbb
xchg
cmpsb
int
mov
cmpsl
insl
pop
add
xorb
mov
or
jo
xchg
mov
scas
mov
cld
push
xor
addr16
out
aam
in
mov
jecxz
aad
or
ljmp
push
pop
cs
inc
jae
jecxz
cwtl
andb
ret
test
inc
cmp
ds
push
sbb
inc
ja
add
inc
out
and
sti
adc
test
jl
idivl
idivl
pop
mov
push
outsb
lods
roll
mov
test
les
and
fcmovu
adc
inc
dec
adc
adc
imul
pop
jbe
and
cmp
xchg
and
xchg
stos
enter
mov
or
push
cmp
pop
mov
aad
daa
test
fnsave
and
xchg
dec
dec
cmp
insb
add
in
lods
mov
into
or
jne
lock
pop
mov
or
or
push
sub
wbinvd
mov
adc
ds
mov
mov
dec
xchg
ja
xchg
inc
xlat
pop
sub
in
dec
or
mov
mov
mov
mov
call
cmp
mov
or
mov
cmpsl
inc
inc
push
dec
call
cli
ret
repnz
aam
mov
mov
sbbl
xchg
fcoml
push
adc
dec
loopne,pn
bound
pushf
push
xlat
hlt
ror
adc
add
mov
xor
jmp
fsubrl
leave
xlat
xchg
rol
xor
shll
test
mov
ficompl
mov
mull
in
lahf
les
cs
inc
scas
lods
push
negl
inc
mov
es
dec
mov
pop
mov
and
sub
nop
mov
dec
lods
inc
addr16
mov
add
aaa
cmp
jl
inc
push
xchg
lahf
jne
addl
cli
pusha
pop
sti
push
pusha
rcrl
xchg
sub
mov
fisubrs
sbb
xlat
mov
jg
fs
fucomi
adc
mov
lds
aaa
pusha
jo
in
adcl
sbb
mov
cmp
in
das
mov
xchg
insl
pop
aaa
sub
or
repnz
inc
aaa
push
test
das
mov
imul
ss
loopne
pop
fucomi
imull
add
mov
add
push
xor
int
test
icebp
shl
mov
in
sbbl
gs
leave
xor
out
stc
arpl
test
loope
cmp
xor
in
or
mov
ret
popf
clc
or
mov
mov
mov
xor
out
lock
cmp
cmp
loop
jp
pop
adc
aaa
ss
mov
dec
add
mov
inc
and
lock
mov
pop
xor
filds
push
enter
dec
lret
or
mov
mov
add
mov
and
jmp
insb
addr16
inc
inc
inc
lods
andl
sub
or
test
jle
out
push
ret
mov
je
cmp
scas
fs
or
pop
dec
mov
int
lods
stos
loope
push
adc
das
sub
push
dec
mov
and
sti
dec
mov
push
xor
and
sub
and
add
or
sub
subb
lahf
add
mov
adc
orl
fdivrs
rclb
inc
mov
jb
fisubrl
outsl
dec
inc
mov
fs
lret
shll
fildl
mov
pop
dec
add
mov
dec
cmpsb
xor
loopne
inc
cltd
mov
mov
hlt
int3
int3
xor
xor
dec
ja
mov
jmp
jo
dec
enter
orb
ds
cmp
adc
pop
xchg
mov
or
xor
lahf
adc
sub
sub
jg
xchg
mov
mov
mov
xchg
int3
scas
lret
cmp
inc
daa
or
insl
icebp
divb
faddp
lea
imul
movsl
sub
ret
mov
lret
stos
int
adc
or
movsl
add
push
push
sbb
stos
jg
adc
inc
mov
adc
and
lcall
jno
ret
mov
jno
in
fsubl
adc
pop
lds
xchg
dec
adc
or
repz
inc
sbb
rcr
ret
xchg
ficompl
insl
fistpl
xchg
mov
jb
lgs
ja
icebp
mov
adc
xchg
mov
loopne
lcall
dec
stc
aas
xchg
xchg
lds
dec
mov
dec
push
in
sub
fisubrl
inc
inc
repz
aaa
lods
mov
pushf
lea
lret
addb
xchg
and
ret
enter
or
inc
addr16
shlb
fcmovu
jmp
rcr
or
je
cmc
xchg
inc
test
mov
mov
jg
fidivrs
xor
es
lea
xor
mov
dec
test
das
sub
aad
dec
xor
js
sbb
ss
mov
lock
xor
in
repz
mov
push
dec
xor
cs
mov
outsb
mov
adc
sub
in
call
in
out
popf
out
insb
shlb
dec
insb
sbb
aas
push
popa
cs
outsb
call
cmp
push
in
imull
push
dec
adc
inc
mov
jb
hlt
lock
jnp
sti
sub
out
add
xor
mov
mov
sahf
mov
push
int3
mov
addl
jle
pushf
rolb
je
push
cmp
pop
xchg
not
ja
mov
sub
dec
add
loope
das
aam
cmpsb
daa
insl
jmp
pop
jns
fstpt
movsb
les
pop
ds
and
or
out
lret
test
aaa
or
prefetchwt1
mov
xor
iret
dec
sub
jge
cmpsb
out
insb
inc
lret
xchg
xchg
lds
pop
fisttpl
rcll
mov
sub
js
out
aam
aas
movsl
push
test
xor
aad
jp
pop
pusha
jmp
mov
xchg
jno
sbbb
aas
cmpsl
test
mov
cwtl
fdivr
jnp
lds
iret
and
ret
add
push
inc
xchg
data16
jmp
cmp
ficoml
dec
mov
outsb
mov
push
mov
mov
lahf
subl
add
out
stc
mov
cmp
push
pop
cmp
sbb
push
xor
iret
int3
xor
sub
inc
ret
popf
xchg
inc
mov
cmp
jg
loope
pop
push
pop
ret
fmul
xor
ljmp
adc
loope
xchg
mov
xlat
shll
pop
add
in
fcompl
sub
ja
jl
or
getsec
push
push
int3
iret
daa
imul
movsl
mov
dec
out
jnp
or
inc
sub
test
mov
das
jp
fcmovbe
cmp
js
cmp
mov
xchg
setne
lock
push
loop
lret
push
iret
in
enter
cmc
cmp
sbb
xchg
in
cld
push
mov
pusha
add
mov
jno
push
sbb
rcrl
xchg
call
xchg
movsb
movsb
cmc
cli
imul
lret
push
std
push
or
sub
jle
enter
dec
and
add
dec
shl
pop
jge
lock
and
gs
test
test
aaa
ret
jo
push
pop
imul
jp
lcall
popf
aam
mov
pop
and
push
dec
xor
xchg
je
fwait
inc
es
or
adc
fs
pop
aaa
xchg
inc
jo
push
push
pop
jb
sahf
cmc
int
andl
mov
jp
pop
xor
sub
push
scas
mov
clc
ljmp
addr16
pop
pop
popl
or
xchg
dec
aam
leave
and
icebp
jo
andb
xorb
repz
and
in
sbb
mov
mov
lds
stos
cmp
adc
popl
in
mov
mov
mov
icebp
add
ret
int
sbb
push
imul
rclb
push
aad
adcl
cmpsl
xchg
lods
scas
sti
cltd
mov
mov
lret
mov
push
push
dec
and
lds
loope
mov
cltd
lret
scas
jo
mov
and
cwtl
cmpb
sub
into
sbb
int
mov
cmc
jno
out
es
into
ds
sub
loopne
addl
or
pop
mov
ss
in
je
xlat
push
or
dec
cmpsb
test
xor
ja
ljmp
andb
lods
es
xor
sub
xor
cmp
out
addr16
jbe
mov
dec
in
cmp
idivb
inc
xorb
mov
or
aas
push
or
cmp
imul
jg
imul
std
jmp
mov
mov
pop
jp
dec
subb
mov
push
rcl
mov
dec
mov
in
adc
js
mov
xor
out
pop
mov
xchg
jb
or
cs
movaps
mov
sub
js
jae
cmp
sbb
cmp
test
fldt
push
push
mov
cwtl
sub
pop
insb
movsb
add
or
arpl
popf
jmp
pop
add
lret
mov
sbb
add
cmpsl
pop
push
cwtl
sub
mov
aam
stos
jae
add
out
adc
ja
ljmp
lea
in
and
popf
cltd
clc
addr16
mov
pushf
xchg
mov
inc
lods
and
cmpsl
sub
inc
stos
and
push
or
mov
mov
loop
and
fcmovb
sbb
push
mov
call
xor
rolb
addb
push
imul
shlb
enter
leave
sti
pop
jns
repnz
mov
sti
addr16
iret
mov
lcall
aam
stos
repz
test
imul
imul
mov
data16
adc
jle
or
jbe
xlat
and
cs
add
or
in
or
sti
mov
enter
mov
lds
xlat
jbe
lahf
mov
sbb
int3
add
dec
push
add
lret
xor
and
add
mov
jg
inc
pop
adc
or
pop
shr
mov
in
subl
int3
push
hlt
jg
aas
test
xchg
lds
pop
adc
out
dec
aas
push
dec
stos
dec
test
divl
fidivrl
shrl
and
pop
dec
mov
xchg
xor
fsubp
pushf
push
clc
nop
fs
jb
jmp
dec
mov
sub
insb
popf
jbe
xchg
sbb
or
inc
mov
icebp
xchg
or
andb
aam
cli
inc
jecxz
enter
into
arpl
divb
outsb
stos
aad
sahf
stos
stos
nop
hlt
es
push
mov
add
dec
push
cli
dec
mov
loope
jl
or
pop
cmc
not
inc
add
jae
cmp
data16
inc
pop
insl
stos
orl
dec
xchg
cmpsb
mov
stos
inc
push
lret
xchg
and
outsb
push
xchg
pop
push
imul
rcrb
xchg
aas
clc
jae
mov
mov
test
out
inc
jo
stc
mov
mov
xorb
lods
sub
js
dec
ret
sub
clc
xchg
lods
dec
movsl
push
mov
gs
or
jecxz
pop
sbb
push
sub
inc
adc
dec
cmp
ljmp
adc
fstps
push
dec
out
jl
push
hlt
adc
mov
sub
rep
mov
mov
or
pop
mov
into
out
pop
sbb
hlt
test
and
lahf
enter
push
jmp
sbb
mov
je
pushf
test
dec
cmp
daa
cmp
rep
adc
clc
les
adc
mov
sub
sbb
sub
std
addr16
cmpsb
sbb
out
and
aad
repnz
mov
mov
test
mov
lea
or
mov
push
mov
sti
subl
mov
test
mov
add
pop
sub
popf
out
incl
cs
cmpb
dec
inc
push
sbb
hlt
add
xchg
inc
and
aam
outsl
jb
mov
into
xor
add
mov
mov
pop
jo
sub
je
adc
sbb
pop
call
sub
sbb
fisttpll
popl
out
inc
mov
pop
ja
or
jno
scas
insb
xchg
and
mov
push
rolb
pop
push
jle
mov
jmp
fs
insl
dec
jno
sbb
push
lods
and
mov
outsb
stos
mov
loopne
push
mov
xchg
or
mov
sub
fstl
sub
xor
jle
xchg
fwait
mov
inc
xor
cmp
out
inc
fdivs
xor
push
nop
test
or
xlat
adc
sbbb
add
sti
imul
stos
icebp
ss
pop
pop
shl
in
mov
test
cmp
mov
popf
fildl
shlb
cmp
and
cltd
cmp
or
shll
inc
mov
jnp
loop
sbb
hlt
or
cs
nop
mov
test
out
pop
cltd
sbb
xchg
pop
les
pop
repz
mov
mov
pop
cmp
inc
mov
daa
sbb
jge
shr
loopne
dec
repnz
movsl
syscall
cltd
push
xor
lcall
cmp
pop
jg
loopne
mov
or
ljmp
testb
outsb
ljmp
in
out
inc
lds
xchg
cmp
sbb
insl
std
xorb
iret
push
lock
mulb
push
insb
clc
jmp
ret
sub
xchg
cltd
out
xorb
sbb
cmpb
inc
outsb
mov
cli
outsb
test
inc
mov
jbe
adc
js
call
loop
or
das
into
or
loop
ja
mov
jne
imul
xchg
ficoml
aam
cwtl
imul
jmp
mov
rclb
shl
ss
fildll
cmp
les
sub
les
nop
int
add
cmp
lret
and
in
push
fadds
add
mov
jnp,pn
clc
xor
jnp
adc
clc
sbb
sbb
dec
xchg
push
in
pop
mov
mov
frndint
mov
enter
and
dec
shll
aam
lahf
sub
sub
in
call
sub
or
sbb
scas
fistl
dec
xchg
repnz
and
lea
pop
pop
cli
push
outsl
insl
aas
out
pop
mov
push
pop
and
pop
jp
xor
jl
sahf
xlat
adc
fildll
cmp
lahf
cmp
or
and
xchg
pop
cli
flds
push
jge
fisttpl
ret
sbb
cmp
addr16
jge
jp
inc
xor
push
or
mov
andl
dec
scas
push
cwtl
sbb
xor
or
xchg
in
xchg
jmp
inc
std
inc
sbb
in
mov
or
pop
gs
in
faddl
xchg
frstor
cmp
push
test
push
je
in
loope
insl
pop
jae
frstor
and
mulb
loopne
aam
out
adc
lcall
inc
outsb
lds
mov
push
movb
arpl
mov
out
testl
jl
push
lods
adc
jl
or
mov
push
das
dec
daa
shrl
loopne
xlat
lret
ud2
mov
or
out
mov
test
mov
imul
push
dec
in
mov
pop
int
aad
pushf
leave
inc
call
jge
cmpsl
iret
cs
ds
mov
cmpsl
inc
mov
add
push
das
imul
out
fs
out
repnz
push
jmp
insb
pop
pop
int
notb
dec
jo
mov
lock
fcompl
dec
cmp
xchg
cmp
aam
stos
data16
pusha
lods
imul
nop
sbb
adc
mov
aam
fldcw
xor
xor
ficompl
jb
int
lods
pop
jae
push
test
pop
jo
leave
mov
mov
je
cmp
dec
std
inc
inc
cld
adc
sti
lods
rcll
call
sub
aas
or
xchg
jo
nop
jo
add
nop
push
pop
xchg
jo
add
jns
movsl
mov
lods
lret
jge
out
push
orb
sti
cmpsl
xor
ret
xchg
sarl
insb
lods
lea
daa
adc
add
mov
cli
cmpsb
xor
iret
xor
popf
cmpsl
xchg
lods
daa
rclb
add
adc
push
or
aaa
xchg
int
in
mov
adc
call
scas
daa
imul
adc
jle
pop
pop
sbbl
cmp
dec
loopne
gs
mov
cmpsb
cwtl
sub
inc
pop
loopne
stos
rol
test
int
mov
fwait
xchg
sub
and
ds
sbb
test
mov
mov
ljmp
loop
loope
adc
lock
and
and
or
pop
int3
push
mov
addr16
inc
and
or
sbbl
sub
bound
xor
out
cli
mov
jl
xchg
push
cli
lret
sub
and
dec
nop
and
or
or
push
push
pop
in
test
int3
hlt
xchg
es
out
inc
fcmovnb
push
dec
cmpsl
and
xchg
cmp
mov
ljmp
or
lock
xchg
add
dec
movsb
pop
cwtl
adc
inc
rcrl
je
xor
or
add
pusha
add
push
testl
push
hlt
dec
test
les
pop
xlat
in
fcompl
inc
add
sub
lret
mov
fcompl
sbb
dec
and
jg
push
sbb
cmp
push
inc
lods
in
mov
jmp
js
or
je
xchg
iret
outsb
mov
mov
xlat
imul
testl
adc
sub
xchg
push
lods
fs
or
mov
dec
add
push
shlb
mov
mov
dec
jnp
mov
sbb
jae
and
cwtl
pop
mov
shll
jbe
lret
or
push
imul
jecxz
pushf
xchg
int
push
adc
out
in
ljmp
inc
es
orl
xor
frstor
push
fwait
sahf
pop
push
add
xor
scas
sti
insl
stc
ret
or
out
xor
std
insb
insl
push
mov
imulb
or
sarb
sbbl
xchg
andb
movsb
sbb
roll
mov
popa
clc
dec
mov
or
je
sbb
fdivrl
xchg
lock
popa
loope
mov
stos
push
stos
lods
cmpsl
mov
or
jp
bound
stos
mov
add
dec
aam
lds
pop
sbb
and
imul
pop
sub
in
mov
js
das
sarb
inc
mov
imulb
jmp
ror
sbb
nop
stos
ret
int
sub
arpl
or
jbe
push
ret
mov
add
andl
lock
int
lea
dec
test
dec
hlt
jnp
loopne
scas
xchg
or
or
mov
push
mov
or
xlat
and
fstl
inc
jl
shl
ds
mov
pop
cli
pop
mov
cmp
lods
push
orl
xor
sbb
sub
add
pop
mov
cmp
jle
and
notl
fwait
mov
xchg
pop
js
or
jb
dec
mov
je
push
test
scas
xor
incb
pop
js
jp
mov
pusha
xor
dec
and
jp
pop
in
mov
mov
aaa
lods
shr
aaa
seta
mov
lods
es
repnz
mov
adc
cmp
cmp
rcl
sbb
jno
mov
xor
pop
push
jnp
movsb
sti
out
push
int3
lods
ret
orb
inc
jmp
loope
icebp
testb
dec
movsl
cld
xor
mov
or
dec
jae
scas
outsl
xor
ss
outsb
xor
sub
inc
xchg
pusha
xor
pop
xor
insl
test
insl
and
sub
cld
dec
cmc
push
mov
mov
inc
add
lods
loop
fimull
shr
mov
repnz
movsl
out
add
fmull
lret
inc
dec
fildll
or
in
jecxz
dec
ds
shl
mov
add
mov
andl
mov
ret
ret
mov
mov
pop
sbb
mov
push
jbe
inc
dec
mov
cmpsb
mov
arpl
outsb
mov
fwait
and
dec
ret
sbb
call
add
xchg
and
rclb
xchg
jne
sub
adc
jns
enter
adc
sbb
mov
fildll
sbb
fwait
out
sahf
mov
cmp
jle
jae
xchg
xchg
sbb
dec
dec
or
iret
mov
and
xchg
ret
xor
rorl
ret
iret
ss
adc
ret
lock
pop
mov
aad
ret
mov
lds
jge
jge,pn
fldenv
pop
cmp
rorl
fisubrl
xchg
dec
sub
ret
mov
fadd
cld
je
das
xchg
sub
or
loope
lea
iret
fwait
les
and
scas
adc
mov
daa
idivl
insb
outsl
out
cwtl
mov
xchg
add
inc
es
fwait
xor
rolb
xlat
cmpsl
adc
jne
xor
rorl
in
frstor
sbb
imul
xor
sub
mov
mov
adc
add
cwtl
cltd
mov
and
ret
or
mov
xor
pop
stos
push
xor
fsubrs
push
into
lret
les
xor
orb
mov
in
dec
out
mov
lret
pop
dec
xor
cmpsb
xchg
xor
test
mov
dec
js
pop
cmp
bnd
ss
inc
lret
addr16
cmp
movsl
icebp
sbb
dec
push
jno
outsl
aad
loopne
xor
xchg
dec
aas
bound
mov
mov
add
or
pushf
jg
lods
push
mov
push
xor
into
call
xor
hlt
icebp
jp
mov
mov
mov
push
aad
jecxz
cmp
adc
mov
out
movsb
sub
adc
scas
sbb
subb
fsubrl
fdivrs
inc
xchg
inc
cmp
gs
sub
jecxz
xor
repnz
fbld
icebp
xchg
out
jne
nop
das
jb
push
jno
mov
sub
idivl
imul
mov
push
call
fisubrs
stc
mov
jecxz
add
ret
gs
inc
sarb
push
fstps
sarb
xor
lcall
add
xchg
repz
xlat
adc
push
push
sub
push
pop
sti
dec
xchg
or
pop
add
sub
jbe
cmp
jbe
dec
or
dec
xor
rorb
mov
pmuludq
cs
push
pusha
mov
add
lcall
in
and
or
mov
xchg
mov
fistl
pop
les
lret
fnsave
jae
fwait
add
dec
lahf
push
das
add
xchg
rclb
xchg
dec
sbb
jo
mov
loope
cmpsl
cli
sar
cld
aad
push
sub
loope
and
xchg
adc
xchg
adc
imul
jl
or
test
push
pop
sbb
add
call
pop
inc
mov
ljmp
ds
push
xchg
stos
adc
in
loop
add
cs
ds
ljmp
data16
imul
pop
out
test
les
add
push
mov
fidivs
inc
push
sbb
out
dec
pushf
shlb
push
or
mov
and
in
xchg
push
addr16
push
adcl
arpl
outsl
lods
aam
ret
iret
popa
nop
mov
fiaddl
dec
jl
xor
pop
pop
jb
sbb
das
addr16
or
mov
xlat
jge
sub
cltd
scas
add
lock
scas
imul
mov
cmpl
xor
sub
add
jmp
add
mov
cmp
ret
out
andl
bound
ja
jne
adc
xchg
adc
add
icebp
and
or
popa
push
arpl
les
shll
xor
faddl
mov
sub
jmp
ds
and
je
add
hlt
sbbb
fwait
or
inc
int
push
sbb
in
test
ret
push
sahf
add
je
mov
ja
aas
cld
sahf
mov
or
sahf
sahf
idiv
or
and
jbe
lds
pop
or
sub
lods
push
out
lock
add
outsb
aam
int3
pop
mov
pop
movb
cmp
enter
sbb
mov
cltd
out
jns
cmp
jle
lds
test
std
xchg
shrb
cs
inc
pop
into
jno
mov
cmp
shrb
out
mov
xchg
dec
xor
or
xchg
aaa
push
dec
push
insb
or
mov
mov
pop
jno
dec
outsl
inc
sbb
pushf
fistps
repnz
mov
mov
mov
popf
mov
jle
popf
mov
push
fists
cmc
inc
scas
stos
push
push
mov
cmp
jne
pushf
cli
sbb
outsb
test
loop
je
push
into
pop
pop
das
popa
arpl
decb
jg
cld
imul
in
and
shr
inc
mov
dec
jns
jmp
sub
rcr
jnp
cmp
pop
push
jle
push
mov
jns
scas
pop
int3
cmp
hlt
mov
pop
mov
insl
jge
lret
imul
dec
popf
pop
movsl
mov
test
xor
call
jb
push
into
loope
mov
pop
mov
and
insl
sub
dec
jne
mov
mov
rcr
cmc
fimuls
push
lret
jb
stos
push
iret
inc
jne
cmp
cmp
lret
sbb
cmp
cmpsl
cmp
das
imul
mov
push
cld
rcrb
xchg
shlb
es
mov
rorb
dec
imul
jle
xor
xor
adc
mov
jmp
mov
mov
or
sbb
sbb
rorb
lods
fisubrs
sbb
js
jns
or
fisttpl
and
cmp
sbb
mov
push
ret
cmpsl
mov
and
push
jb
cmc
inc
sbb
mov
lret
dec
in
and
and
test
fs
clc
scas
fldcw
mov
out
or
fnstcw
and
pop
mov
rorl
xchg
xor
or
imul
push
pop
scas
jmp
insl
rolb
mov
mov
xchg
dec
mov
mov
or
out
sub
mov
in
sbb
jb
mov
adc
shrb
cmp
jl
xor
cmc
pop
fs
test
fsubrl
inc
and
int3
jnp
in
and
fwait
xor
adc
outsl
nop
push
push
lea
bound
push
leave
sub
jge
ret
dec
scas
testl
mov
sti
push
sti
dec
dec
enter
jle
mov
repz
inc
jo
insl
adc
jnp
dec
enter
xchg
arpl
push
push
mov
mov
add
in
and
pushf
bound
out
aad
pusha
in
pop
ss
fcmovnb
outsb
outsb
imul
loope
xchg
xchg
popf
or
imul
adc
mov
andl
lods
std
mov
shll
movsb
xchg
loop,pn
mov
sub
xchg
imul
mov
adc
mov
lock
int3
mov
test
lds
cltd
into
aas
adcl
mov
stos
stos
push
push
push
mov
cmp
aas
sbb
mov
mov
mov
or
cmp
xor
and
jnp
sbb
or
and
imul
jbe
xchg
add
xchg
in
test
mov
loop
and
and
push
or
mov
xchg
xor
adc
mov
rcll
cmc
cmp
scas
adc
fisttpl
push
imulb
test
gs
mov
lds
jno
mov
pop
mov
dec
movsb
mov
stc
push
cmpsb
or
std
mov
jbe
int
mov
xchg
sub
das
lock
dec
xor
jb
cmp
das
inc
push
out
rorb
arpl
push
sbb
aam
or
icebp
adc
xor
test
lock
jno
aas
aam
sbb
and
pop
jmp
xor
popa
cmpsl
cmc
shll
mov
inc
or
cs
sti
pop
scas
rolb
adc
cmp
call
gs
xchg
shrl
dec
push
mov
aas
sahf
push
daa
mov
mov
test
xchg
mov
in
inc
sbb
cld
aaa
xor
sub
insl
push
jns
pop
xchg
mov
add
dec
xchg
jbe
jp
repz
mov
xor
repz
rol
add
pop
jbe
jp
icebp
jns
sub
movsl
xchg
mov
outsl
jne
mov
mov
sar
data16
je
mov
mov
stc
push
push
mov
fisubl
sub
out
and
jp
sub
add
int
add
cmc
into
fidivrl
in
and
in
shlb
ror
rcrl
test
dec
hlt
push
int3
int3
push
xchg
mov
push
jp
cltd
in
in
or
rcrb
in
leave
mov
pop
jne
adc
cltd
push
lods
fs
inc
jecxz
loop
dec
pop
xor
cmp
add
mov
adc
jl
sub
jmp
adc
lahf
lahf
dec
mov
jnp
fisttpll
dec
cld
pop
popa
xchg
add
adcl
repz
int
push
loope
jae
lods
xor
je
sbb
or
outsl
lret
subl
jb
sbb
nop
mov
push
jl
mov
inc
xor
aaa
lods
mov
mov
daa
push
ljmp
add
test
lcall
push
xchg
mov
pop
add
mov
pop
cli
add
push
jo
add
ja
repz
and
sbb
data16
sbb
iret
pop
shrb
xchg
cmpsb
test
cmpsl
push
outsl
mov
decl
fs
dec
sub
fistl
pop
call
add
idivb
fcomps
dec
ja
adcb
mov
negb
fs
ficomps
stos
jl
jmp
mov
in
rcrl
jp
aaa
and
add
pop
sbb
jb
pop
ds
rolb
dec
inc
dec
rolb
cmpsl
test
push
mov
scas
push
inc
sbb
push
out
repnz
xor
fidivs
jno
xlat
scas
sbb
xchg
push
ds
pop
and
nop
outsb
fsubrp
cmp
push
lahf
sbbl
das
stos
cmp
adc
fldt
fldcw
call
stos
push
dec
xor
sbb
lcall
test
sbb
sbb
jae
jae
shll
loopne
sbb
je
mov
ss
std
insb
popf
in
mov
int3
mov
cmpsl
rcrl
fisttps
lcall
pop
and
jl
cmpsb
testb
daa
test
mov
hlt
enter
jno
cmp
mov
push
xlat
idiv
sbb
pop
inc
jne
stos
push
insl
sub
mov
popfw
dec
in
dec
fistps
lods
cmpsl
in
fildll
sbb
mov
cmp
es
inc
jl
push
insl
push
ja
cwtl
dec
mov
je
xor
loop
adc
xchg
call
cltd
mov
jne
mov
mov
adc
pop
dec
mov
cmp
loop
imul
pop
test
add
cmp
lods
mov
out
cli
pop
int
and
sub
inc
xor
add
or
jl
in
jnp
jle
add
pop
push
jmp
insb
adc
mov
xor
jge
adc
fcomi
stos
adc
dec
in
repnz
jp
cmpsl
fnstenv
xchg
loop
mov
insl
and
pop
pop
lret
jbe
push
out
xchg
push
mov
cltd
addr16
loop
dec
lret
mov
mov
add
and
cmp
jmp
inc
jne
dec
out
or
mov
pop
lret
lods
mov
dec
xchg
xchg
movsl
out
cmp
jl
xor
or
cmp
dec
xor
or
lods
jo
pop
inc
push
or
jns
hlt
push
and
or
push
jle
scas
pop
dec
sub
cltd
mov
mov
sub
scas
xchg
lods
mov
cmpsb
inc
mov
jecxz
fdivl
sbb
fucomi
sbb
call
getsec
mov
push
iret
jns
or
push
pop
hlt
int3
clc
addr16
add
sub
dec
add
mov
xor
dec
scas
aas
test
push
mov
lret
adc
xchg
das
stos
jae
jge
pop
jae
mov
sahf
mov
mov
mov
push
test
ds
mov
outsb
xor
sahf
cmp
jmp
aam
fiadds
jmp
outsb
orl
push
std
cmp
aas
in
pushf
push
out
lahf
cmpsb
stos
lods
icebp
mov
mov
sub
scas
arpl
jno
idiv
xchg
mov
add
shll
push
sar
cmp
arpl
push
addb
mov
adc
push
xor
adc
popa
aas
out
sub
std
lret
pop
setae
repz
insb
cmpb
push
mov
out
test
pop
xor
arpl
repnz
or
imul
pushf
push
repnz
mov
adc
push
addr16
std
test
adc
popa
loope
dec
andb
lock
es
mov
in
jbe
push
rolb
and
pop
push
movsb
inc
cwtl
fst
push
fcompl
rcl
sbb
inc
adc
xchg
mov
dec
ds
cmp
xor
mov
push
repnz
mov
mov
stos
sbb
push
push
pop
fldt
pop
jo
hlt
fs
inc
divps
jmp
push
and
or
push
xchg
lea
lea
into
xorl
push
sahf
xor
aam
ljmp
daa
cmpsb
mov
ljmp
rcl
ljmp
pop
adc
gs
mov
jb
adc
fcom
sbb
inc
sbb
mov
addr16
push
into
cmp
into
movsb
xchg
in
adc
ss
mov
dec
inc
xchg
jl
clc
add
push
xlat
js
mov
mov
sbb
in
je
scas
rol
xchg
adc
shr
push
jnp
stos
lds
adc
jnp
dec
sbb
roll
hlt
xchg
and
xor
adc
sub
aam
add
and
adc
add
sbb
mov
push
fldl2e
sahf
fcmovnu
xchg
loop
xchg
into
in
dec
xchg
adc
stos
add
fidivrl
outsl
inc
sbb
lds
cmp
lds
test
mov
icebp
sahf
jmp
jne
add
mov
or
addr16
insb
data16
lods
cmpsl
test
call
jno
cmpsb
sarb
int3
mov
les
cmovl
push
addr16
cmc
pop
sti
ljmpw
push
repnz
push
insl
ds
mov
lret
adc
push
dec
adcb
es
out
pop
js
enter
out
push
or
sbb
arpl
mov
cli
or
jae
test
sarl
lock
mov
cli
sub
loopne
aaa
pop
aam
cmp
mov
int3
fildll
sub
fistpl
aas
add
rol
jnp
sbb
rcll
jae
pop
test
popf
popl
enter
icebp
pusha
mov
sbb
inc
xchg
xor
adc
mov
push
andl
mov
cmp
imul
jne
jp
sub
in
imul
or
jecxz
insl
cmp
stc
mov
and
pop
in
mov
std
pusha
sti
adc
shrl
clc
pop
jns
ret
adc
push
data16
cwtl
push
aas
lds
ds
sarl
jb
lcall
in
dec
insl
sbb
ds
or
rcl
pop
dec
je
cli
dec
testb
jecxz
lret
andb
inc
and
enter
enter
jo
dec
test
and
sti
inc
xchg
adc
lea
add
pop
lcall
and
daa
mov
xchg
aaa
pusha
mov
and
hlt
fists
and
inc
sbb
cmp
xchg
inc
je
movsb
xorb
dec
mov
push
cmp
insb
in
cltd
xor
dec
push
out
and
jmp
jge
repz
loopne
mov
mov
pushf
push
iret
dec
push
mov
jnp
mov
or
loop
fdivl
mov
iret
data16
sbb
cmp
loope
push
jae
mov
sub
fdivl
aas
mov
mov
jmp
jbe
or
and
dec
pop
lcall
fwait
cld
aad
mov
pushf
cs
xchg
lahf
jns
aaa
cmpsl
push
dec
movsb
mov
dec
and
scas
mov
add
mov
mov
jnp
insl
movsb
mov
jae
dec
dec
jb
inc
rcrl
je
cmp
cmp
xchg
dec
sbb
cmp
scas
and
mov
int3
and
cmc
jae
sti
mov
xchg
push
popa
outsb
sbb
imul
shll
dec
test
xor
lea
cmp
ljmp
daa
mov
mov
add
inc
in
and
jp
leave
jae
mov
fdivl
and
lock
in
jnp
jne
mov
dec
adc
rclb
inc
cwtl
test
jl
mov
lds
ja
xchg
inc
push
add
xor
push
scas
push
ret
adc
shlb
cmp
ja
pop
pop
rcl
cmp
or
fsubl
cwtl
arpl
lret
setae
rclb
push
and
inc
dec
sbb
sqrtps
adc
jb
imul
and
mov
and
aad
mov
in
mov
mov
in
sbb
lods
sub
adc
lods
cmpsl
and
pop
cld
push
cmp
adc
cli
loopne
pop
lds
lahf
xchg
cmpsb
in
dec
fs
cmp
movsl
xor
and
lret
popa
lret
fwait
lods
iret
dec
adc
rcrb
cmp
jae
adc
inc
and
fdivrl
inc
lock
lods
sub
pop
shl
inc
push
xor
add
insb
mov
andb
test
test
les
inc
cmc
fisubrl
jge
cwtl
adc
in
loop
jmp
xor
test
loop
lret
adc
add
jns
push
in
lcall
push
jns
pop
test
pop
mov
jno
outsl
testb
or
movsb
push
fists
ds
mov
pop
sbbl
sbb
xor
ljmp
lds
clc
jo
shlb
imul
mov
int3
cmp
imul
sbb
dec
or
jecxz
and
cmp
pop
mov
cmp
add
lds
repz
mov
xor
nop
fucomi
push
popf
loope
mov
jmp
pop
add
dec
fcmove
jl
push
rclb
mov
aaa
mov
jo
lea
arpl
ljmp
add
dec
adc
cld
cltd
adc
pop
lods
sbb
dec
and
out
arpl
sahf
mov
mul
xor
push
mov
mov
fildll
dec
push
dec
loop
dec
sbb
jge
rcrl
inc
pop
and
push
and
ficomps
movsb
mov
les
or
jmpw
cmp
fcomps
adcb
cmp
or
lds
data16
fnstsw
popf
loop
int
fcomps
and
xlat
aas
push
fwait
xchg
scas
push
xor
pop
and
dec
inc
xchg
jbe
int3
imul
xor
lcall
cld
ret
mov
mov
pop
jp
inc
ss
idivl
cmovs
dec
sub
cmp
jnp
aas
jle
dec
fdivs
sbb
scas
dec
dec
nop
andl
mov
out
add
testb
rcll
jecxz
sarb
xchg
shlb
das
bound
mov
xor
adc
int
mov
outsb
out
aaa
test
xchg
and
int
movsl
pushl
mov
mov
or
jnp
popa
es
rclb
addb
cltd
and
mov
adc
sbb
mov
es
pop
mov
inc
popf
dec
sbb
dec
or
pushf
movb
fsts
inc
sub
and
rolb
xchg
jecxz
in
enter
shll
lahf
xchg
arpl
aam
sbb
mov
insb
push
jl
das
sahf
cs
orl
jnp
push
mov
popa
sarl
jno
or
cmp
ljmp
stos
mov
pop
pusha
std
mov
mov
cmpsb
mov
pusha
dec
lock
mov
sub
mov
sbb
stos
and
pop
aad
and
leave
test
mov
jmp
scas
pop
xor
gs
fisubrs
and
cmpsb
adc
push
mov
outsb
insl
mov
mov
inc
push
inc
mov
fnsave
mov
adc
lds
repnz
mov
mov
add
pop
push
or
testl
adc
mov
xor
push
cmpsl
push
aam
out
adc
dec
jl
in
mov
cmpsb
insb
push
add
sub
dec
or
fcom
rorb
int3
push
js
jl
push
popa
enter
xchg
ljmp
mov
mov
mov
jne
xor
gs
sub
jmp
adc
shl
ret
addl
test
and
movsb
sbb
xor
aas
ss
ja
mov
cld
cmp
sbb
push
dec
xchg
test
cwtl
and
pushf
mov
mov
xchg
pop
scas
lods
scas
add
jmpw
enter
fdivs
cmp
lret
iret
sbb
add
inc
pop
cmp
lock
push
add
push
pop
or
sub
push
pusha
sub
xchg
dec
xchg
pop
jle
mov
sahf
add
xlat
dec
jg
sub
cmpsl
pop
faddl
push
mov
clc
dec
xchg
cmc
in
add
and
leave
cmpsb
mov
icebp
push
outsb
or
mov
cmp
mov
sahf
push
pop
mov
xor
inc
mov
jle
mov
or
mov
jo
or
push
mov
testb
shll
and
add
out
adcb
daa
loopne
inc
dec
das
stos
and
fisubrs
inc
or
in
add
xor
cmp
fwait
sbb
jle
repz
test
sub
in
dec
movsl
mov
stc
adc
ficoml
pop
jo
push
aad
fidivrl
push
mov
mov
or
mov
xor
icebp
xor
daa
lret
or
mov
push
mov
mov
cli
jno
imull
inc
jb
dec
mov
push
iret
dec
hlt
shll
dec
push
push
dec
add
xor
cmp
loop
scas
xor
in
popa
lcall
dec
pushl
ret
int
aaa
test
mov
cmp
lods
cmp
inc
dec
push
jg
add
and
sbb
test
and
mov
test
enter
mov
add
nop
push
enter
mov
or
arpl
xchg
cmp
jb
xchg
loop
mov
push
mov
mov
imul
xchg
test
jmp
or
aam
jo
xlat
sti
pop
jno
xchg
movsb
popf
adc
inc
aaa
xor
pop
fbld
lret
test
divl
test
lods
bound
xor
cs
pop
xor
and
int
xor
jge
cli
pop
dec
cs
push
and
fwait
imul
inc
sbb
insb
rcrl
xor
ljmp
sbb
flds
loope
ss
nop
pop
xor
jp
aas
lds
movsb
mov
ja
int3
cmpsb
dec
xor
add
adc
xlat
add
popa
cwtl
addr16
or
pop
jl
repz
dec
int3
and
and
loope
pusha
fs
mov
mov
inc
mov
insb
outsb
fisubl
andb
xchg
mov
inc
popf
jecxz
movsb
adc
jecxz
and
sub
mov
mov
mov
sub
ret
lods
out
clc
push
sub
ret
sbb
push
imul
sahf
aaa
clc
xor
pop
pushf
in
fwait
dec
inc
sbb
iret
xchg
in
test
ljmp
cmp
lea
mov
shrl
and
push
mov
xchg
mov
imull
xchg
pop
icebp
lock
sub
inc
mov
xlat
mov
dec
loop
mov
mov
dec
out
outsb
subb
pop
lock
mov
loopne
jp
dec
scas
scas
add
adc
push
outsb
pushf
insb
data16
nop
or
cmpsb
aaa
pop
ret
nop
xlat
out
andb
enter
fld
in
sub
test
cmp
stc
add
das
popf
sbb
fldl
push
jbe
inc
xchg
shl
mov
jmp
xor
cmp
sti
test
inc
and
mov
or
subb
mov
cld
out
cmp
shlb
movsl
shr
and
push
pop
xlat
repnz
loopne
pushf
movsl
cmpsb
or
lcall
hlt
shr
jmp
push
xchg
xor
sahf
push
jl
in
daa
lret
xchg
fs
add
daa
pop
push
mov
inc
mov
push
inc
xchg
pop
cld
stos
mov
sbb
and
push
loope
add
fdivrs
std
sub
clc
jg
pushf
sub
pop
mov
dec
fldenv
jle
insl
lods
popf
pop
ja
xor
movsb
lahf
mov
or
mov
or
daa
out
xchg
lods
cmc
push
int3
in
lret
mov
and
out
dec
repz
aad
jmp
sbb
xchg
sub
dec
repz
sub
pop
int3
xchg
xor
inc
test
loope
std
insl
inc
in
or
cld
divl
dec
push
mov
gs
les
or
imul
aas
cmp
aas
dec
cmc
fs
adcb
cmc
mov
sub
jg
pop
test
or
enter
and
and
fidivl
pop
dec
sbb
mov
mov
lods
ja
mov
lret
addl
cmc
cmp
sub
in
xor
xchg
dec
je
ficoml
jb
push
pusha
mov
hlt
imull
insl
mov
std
cs
pop
jbe
mov
push
mov
ret
repnz
pop
jns
shll
into
mov
mov
mov
xchg
add
stos
icebp
outsl
arpl
pop
lock
xchg
mov
enter
dec
les
xor
data16
in
je
bound
sti
fucomp
leave
orl
mov
into
out
or
mov
sub
imul
xchg
aad
pop
jne
ss
xor
lds
jcxz
mov
xor
jae
faddl
xor
test
dec
imul
cmp
sahf
dec
cmp
push
ds
fldt
mov
sbb
in
into
shlb
add
in
mov
cs
push
mov
pop
sahf
mov
js
sub
cmp
add
and
dec
mov
cltd
cmp
sbb
enter
subl
jne
sbb
mov
pop
push
adc
or
mov
inc
push
repz
sbb
sub
adc
xor
pushl
imul
pop
mov
clc
scas
add
ret
sub
cmpsb
out
idivl
shlb
pop
lahf
subb
pop
push
orl
scas
jo
pop
or
ljmp
xor
lds
je
cmp
and
push
adcb
or
jne
xor
adc
stos
cwtl
loopne
xchg
sub
lcall
push
call
int
clc
mov
cwtl
mov
cwtl
loop
loop
mov
mov
mov
mov
cmpsl
ljmp
int3
imul
and
les
adc
cmp
inc
fstpt
fsubl
imul
repz
xchg
shr
outsb
inc
lds
add
pop
daa
add
aad
mov
cmp
push
fldcw
popa
mov
inc
pusha
outsl
adc
push
call
mov
aas
outsb
out
in
ss
sbb
stos
cmpsl
hlt
adc
mov
xchg
jecxz
into
out
rcr
mull
inc
jle
mov
pusha
stc
cmpb
xchg
mov
aad
and
dec
sbb
cmp
das
mov
sub
mov
dec
sub
jo
repnz
fwait
jno
cli
fcoms
push
push
ja
daa
mov
es
jno
icebp
lea
and
push
enter
pop
mov
push
push
aas
push
cmpsl
imul
sub
add
jnp
jo
add
and
inc
sub
movsb
insb
sub
inc
cwtl
fwait
push
cmpsb
sbb
in
sbb
cmpsb
xor
xchg
mov
mov
cli
lcall
mov
jb
in
sub
gs
shl
cmpl
pop
test
push
clc
pop
pop
adcl
inc
jmp
fdivrs
jbe
mov
add
sub
es
and
sbb
sub
mov
mov
iret
inc
fdivs
popa
lcall
xchg
call
xchg
les
xlat
test
push
add
cmp
fwait
nop
xor
pop
ss
ror
shl
and
push
scas
pop
movsl
fldt
inc
test
mov
adc
repnz
shll
push
dec
mov
inc
xorb
mov
xor
mov
int
sahf
cmp
bswap
enter
lret
orb
lcall
lret
popa
xchg
lds
cmc
dec
sub
repz
add
adc
into
nop
xchg
unpckhps
cmp
cmp
aas
idivb
add
mov
mov
cs
xor
adc
nop
shrb
das
mov
push
fstp
out
sar
mov
insl
shll
add
mov
adc
inc
push
or
dec
dec
inc
daa
mov
mov
lahf
fldl
and
adc
or
xchg
fcompl
negl
and
push
jp
lods
sbb
fiadds
add
cmc
iret
jg
mov
dec
popa
xchg
and
jmp
pusha
rorb
sbb
daa
insl
aad
addl
and
jg
insl
push
add
xor
fdivs
int3
inc
scas
dec
adc
dec
pop
fcoms
not
or
xor
xor
in
sbb
sub
lods
cmp
push
add
stc
inc
xor
and
mov
orb
out
repz
ret
rcrl
pushf
mov
pop
dec
cmp
inc
inc
pop
cmp
enter
lahf
dec
nop
ljmp
div
es
sahf
lock
sahf
pop
and
iret
jg
cmp
imul
jno
test
in
js
insb
add
push
xchg
or
ret
nop
xchg
movsl
mov
loopne
aad
test
orl
inc
shll
cld
inc
jecxz
loopne
bound
pop
pusha
mov
xchg
jmp
insb
insl
push
jl
call
adc
clc
frstor
insl
test
test
add
jmp
rclb
int3
cltd
inc
xor
fbstp
nop
cmpsl
loopne
ror
cmp
cmpsl
cmp
dec
inc
repnz
xor
and
pop
lahf
cwtl
mov
inc
jnp
call
pushf
cwtl
clc
push
inc
pushf
push
sbb
movsb
mov
sub
call
sahf
cmp
inc
ss
or
enter
xchg
das
mov
rcrl
mov
ljmp
out
xor
lahf
sub
pop
mov
out
popf
inc
dec
lahf
sub
and
push
arpl
inc
pop
fcmovb
push
cmp
es
add
jl
cmc
adc
cwtl
sub
sti
mov
pop
test
xor
inc
mov
addl
out
dec
jne
iret
fistpll
mov
push
mov
dec
ss
push
dec
sub
ss
sbb
jae
aad
ljmp
lcall
xchg
dec
fadds
xor
je
push
and
ja
dec
pop
xchg
ror
push
or
cmp
cld
outsl
bswap
or
sub
cmp
pop
pop
lods
mov
testb
lods
out
pop
ret
pop
push
jnp
fs
mov
jge
xchg
inc
add
mov
call
push
xor
stos
pushf
in
or
and
dec
test
mov
mov
fs
add
shl
push
into
jbe
test
pop
test
mov
inc
fdivrs
adc
cmpsb
inc
std
sub
repz
aaa
jae
push
jo
inc
xchg
out
movsl
pop
xchg
aam
dec
outsb
enter
shrb
sbb
addl
mov
push
mov
pop
mov
je
or
test
insl
fwait
pop
jno
mov
out
gs
lcall
dec
jnp
jnp
mov
xchg
into
out
movsl
rcll
repz
and
scas
lcall
out
push
add
mov
cmpsb
ret
out
mov
data16
pop
sub
sub
xchg
cmp
out
mov
sbb
dec
imul
jmp
pop
repz
inc
mov
mov
test
mov
shrl
in
inc
fmul
inc
and
sarl
icebp
fistl
jno
mov
push
jmp
push
mov
scas
push
out
pusha
mov
rol
jg
lds
imul
nop
and
in
and
aaa
fwait
aaa
aaa
inc
mov
aad
inc
push
in
inc
outsl
clc
jp
jl
fyl2xp1
std
rcr
in
jp
mov
lret
adc
mov
cld
sub
aaa
mov
test
inc
xchg
inc
ds
mov
push
push
fbstp
fisttpll
insl
gs
xchg
lret
xchg
in
add
lret
dec
aas
inc
pusha
lahf
dec
mov
cld
push
adcw
cli
lret
lcall
add
icebp
es
addr16
jle
cltd
in
adc
inc
rcl
jns
pop
push
mov
inc
in
pop
mov
xor
mov
mov
fsub
test
xor
ja
or
add
fdivrl
xchg
cmp
lods
push
mov
push
mov
lret
and
xchg
mov
lret
mov
xor
mov
mov
or
add
xchg
or
pop
shlb
inc
sarl
mov
mov
lock
addr16
test
xor
add
sbb
mov
sub
mov
ljmp
mov
dec
aam
stos
adc
into
xlat
dec
sub
add
in
ja
sbb
mov
cs
or
or
std
mov
loope
jo
pop
fstpt
in
adc
pop
inc
sbb
in
lods
ja
js
sbbl
test
pop
xchg
ljmp
mov
lcall
mov
or
add
push
imul
daa
fs
inc
mov
imul
out
jmp
lret
out
scas
aas
es
mov
jl
subl
or
add
push
jmp
dec
push
pop
push
cwtl
mov
loope
mov
in
scas
ss
in
push
cmpsl
push
hlt
mov
iret
lea
imul
mov
cld
stos
push
cmp
mov
fstpt
inc
gs
push
rcrb
xlat
call
dec
pop
add
fld
jp
pop
mov
gs
fsubl
notl
mov
int
in
add
cmp
jl
cwtd
xchg
dec
mov
and
sub
xlat
sub
call
nop
ljmp
nop
repnz
lahf
sahf
int3
xor
mov
dec
xchg
push
mov
push
or
movsl
or
pop
or
xor
movsl
insb
cmp
lcall
mov
das
push
xchg
popf
fidivs
call
repnz
sti
sbb
int
xchg
sbb
fists
and
jo
lret
cmp
jb
mov
call
mov
inc
jae
repnz
xor
shll
int3
cmc
jnp
arpl
je
sub
insl
sub
scas
mov
icebp
add
fs
or
adc
cld
test
xchg
icebp
cmc
loop
mov
dec
pop
les
movsl
std
iret
add
jl
push
mov
mov
cmp
add
shll
push
sub
sub
sub
xor
rcll
push
dec
imul
aad
dec
adc
sbb
and
sub
je
lret
lods
xor
add
inc
xor
lea
push
adc
shlb
sub
or
xchg
sbb
inc
jl
cmp
nop
add
sbb
arpl
lods
jl
dec
stos
add
lods
cmp
inc
lret
icebp
cmc
cli
adc
stos
aaa
fldenv
cmpsl
cmp
loope
inc
adc
jp
enter
push
xchg
nop
pushf
cwtl
aas
sub
mov
add
ret
jno
dec
lock
dec
add
sub
dec
cmpb
dec
xor
cmpl
push
insl
shrl
xchg
mov
popa
adc
jp
decl
or
jmp
add
sub
je
sbb
push
add
sub
je
sub
aas
sub
ja
dec
out
jae
sarl
pop
frstor
cmpsl
jge
push
push
xchg
scas
dec
pop
popa
test
mov
mov
lods
sarl
push
pop
sahf
mov
inc
lea
inc
out
aad
mov
xchg
rolb
jmp
fwait
out
hlt
inc
ficoms
mov
sbb
mov
loop
cli
aaa
jge
jb
and
mov
inc
cwtl
sub
push
inc
je
pop
cvtps2pd
sub
out
jns
jecxz
loope
jp
lods
mov
fsubrl
mov
leave
mov
xor
xchg
adc
and
stos
or
into
divl
dec
mov
imul
loope
insl
adcl
pop
insl
lea
mov
mov
push
inc
pop
ss
insl
add
aam
push
je
push
mov
xor
cmc
pop
inc
xorb
or
stos
shr
pop
leave
repz
ret
stos
out
or
mov
adc
jmp
sbb
in
sarl
into
dec
aad
sbb
and
popf
mov
ljmp
xor
das
sub
cmp
mov
sub
loopne
mov
xchg
pop
pop
mov
jnp
pop
adc
cmp
xchg
xchg
clc
sahf
cmp
lods
add
fwait
sub
cs
pop
or
sub
adc
mov
ja
jg
cmp
dec
mov
adc
ljmp
insl
cmc
mov
or
mov
mov
xor
les
enter
lcall
ret
mov
testb
mov
test
push
jae
fcmovne
orl
push
dec
push
test
insb
test
jbe
out
fwait
es
dec
aad
sub
mov
das
addr16
daa
jno
or
adcb
adc
and
std
mov
cmp
xchg
ret
insl
sarl
iret
dec
sarl
repnz
xlat
sub
xchg
push
mov
imul
les
adc
sbb
es
push
sub
jae
sarl
fistpll
ficomps
dec
xchg
dec
scas
aaa
adc
push
lds
inc
ret
jo
outsb
jb
enter
lods
mov
in
fadds
test
mov
les
leave
fwait
int3
pop
and
pop
adc
sub
test
out
or
fs
jo
das
jl
dec
popf
mov
mov
lods
ss
pop
sahf
push
and
sub
and
push
pop
leave
jb
inc
lods
mov
jmp
mov
insb
push
lea
jo
in
mov
push
pop
shl
cmp
aam
inc
sub
mov
sbb
rcll
xchg
jecxz
sbb
xchg
mov
mov
dec
mov
and
mov
in
cmc
sub
mov
pop
dec
inc
nop
fistl
and
aaa
pusha
mov
lods
and
pop
sbbl
pop
movsl
dec
popf
jg
fwait
nop
cmp
xor
dec
int3
xchg
jle
test
xchg
sbb
sub
xchg
and
lds
cmp
cmc
inc
mov
sbb
lret
add
aam
pop
push
ret
shll
hlt
icebp
push
xlat
mov
in
or
add
inc
outsb
repz
shl
xchg
xchg
lock
sbb
and
or
cmp
in
jecxz
cmc
rolb
mov
push
in
je
push
jg
mov
xor
ficomps
sub
hlt
enter
and
push
ljmp
sbb
int3
add
mov
sbb
mov
in
pushl
lret
and
xchg
or
testb
mov
scas
loopne
gs
jae
pusha
dec
ja
jns
xchg
sub
orb
rcl
push
fimull
pop
fstpl
fs
xor
fisubl
pop
shrl
rolb
inc
in
ret
dec
cli
jle
fs
and
js
sub
pop
xor
pop
mov
cli
ja
sti
outsl
jae
rorb
fsubr
adc
aas
pop
test
mov
nop
movsb
leave
push
arpl
test
cld
mov
loope
test
or
mov
cmpl
ljmp
test
outsb
scas
mov
in
jl
fnstenv
ds
mov
cmp
dec
add
out
loope
aam
push
lods
popf
fbld
aad
push
inc
ja
mov
test
lock
js
adcb
repnz
mov
mov
push
add
add
jno
or
mov
sarb
cwtl
popa
outsb
inc
cmp
outsl
dec
arpl
jmp
dec
push
jbe
sub
sti
mov
xchg
iret
sahf
in
mov
lret
xchg
xchg
insl
pop
repnz
in
gs
or
xchg
fstl
ja
sub
push
jecxz
pop
pop
pop
data16
jae
add
in
imul
inc
push
or
and
aam
fwait
lahf
incb
mov
hlt
or
add
addr16
movsl
mov
mov
mov
aas
add
adc
jne
std
jb
popf
mov
lock
sub
mov
mov
add
das
fldt
xor
aas
test
test
adc
xor
lods
fnstcw
mov
daa
or
lods
mov
enter
in
scas
mov
aam
pop
or
repz
sbb
push
xor
and
sub
xor
sbb
adc
notb
add
in
or
mov
jae
push
notl
fidivrs
in
jo
fsts
lds
cmp
ret
jle
repz
sbb
lret
iret
roll
out
mov
xchg
pop
push
test
push
dec
cmp
bound
pushf
sub
les
xchg
mov
sub
repnz
pop
xchg
sub
loop
sbb
mov
stc
jo
add
and
addr16
call
enter
mov
inc
xchg
mov
sub
lock
and
mov
inc
gs
xor
xchg
std
scas
fdivs
dec
adc
and
int3
in
test
pop
mov
or
jge
sbb
cmp
and
fnstsw
pop
jbe
mov
or
das
enter
dec
cli
nop
cs
sbb
rorb
sbb
inc
outsl
imul
test
mov
popf
cwtl
in
sub
add
cld
cmpsl
call
pop
cmp
lahf
aam
cmp
test
outsl
add
and
scas
lcall
xchg
push
in
fsts
jmp
mov
sub
pushf
js
out
repnz
and
jb
aaa
jb
ret
out
add
adcb
pop
repnz
dec
out
pop
or
push
adc
fstl
gs
mov
jmp
sbb
jge
xor
sub
movsl
sbb
dec
xlat
push
aam
or
cmp
xor
cmp
sub
repz
push
sbb
xchg
subb
sbb
push
cmp
cli
mov
adc
ljmp
fbld
or
xlat
push
in
xor
push
daa
push
int
sub
popf
adc
mov
adc
pop
dec
fisttpll
inc
stc
ret
sbb
ljmp
rolb
add
cli
test
test
pop
pusha
jnp
insb
aam
inc
std
sahf
cmpsl
jae
scas
daa
mov
inc
and
ja
test
mov
and
and
aaa
cmpsb
sub
push
insb
pusha
and
mov
cmp
adc
outsb
bound
stos
xchg
pop
jno
sub
pushf
pop
mov
sbb
lcall
test
icebp
xchg
sub
repnz
call
shll
and
clc
or
mulb
sbb
inc
pop
adc
mov
pop
sbb
rcrl
dec
pop
lds
in
clc
arpl
push
stos
cltd
mov
in
mov
adc
cmc
xor
and
jge
loope
rolb
rorl
inc
aad
mov
dec
mov
xchg
lret
mov
add
in
xchg
mov
pushf
lds
xor
cmpsl
add
pop
nop
sahf
mov
std
mov
mov
movsl
jb
adc
in
jns
push
push
loope
lods
push
pop
insb
dec
nop
loope
mov
push
cmpsb
push
inc
out
test
addr16
add
leave
lods
add
jo
in
dec
rcl
iret
je
ss
test
clc
push
ficoml
popa
leave
popa
inc
adc
shrl
cwtl
mov
inc
in
scas
cmp
mov
cltd
push
nop
pop
mov
xchg
stos
fs
push
jo
cmp
dec
rcrb
cmp
pop
enter
lea
into
sub
stos
lret
hlt
xchg
fwait
lods
xchg
je
inc
outsl
es
dec
mov
fadds
dec
or
mov
mov
xchg
test
mov
movsb
lret
cwtl
movsb
daa
cltd
stos
out
mov
jge
pop
insl
js
jne
mov
mov
mov
jns
int3
inc
ljmp
add
testl
mov
pop
loopne
shrb
xchg
mov
adc
cmp
lcall
sbb
data16
stos
icebp
adc
jno
testl
fisttpl
push
ret
cmpsb
test
jge
dec
pop
cmc
inc
jge
push
mov
adc
add
shlb
xchg
xor
jnp
les
xlat
ja
out
hlt
jecxz
shll
sbb
es
test
lahf
cwtl
jecxz
or
data16
and
ljmp
jp
jmp
xchg
jecxz
es
push
dec
rol
dec
stos
cmp
sub
or
xor
and
lea
inc
fstp
mov
lods
push
dec
cmp
sahf
loopne
into
cli
shll
outsb
mov
out
imul
xchg
das
mov
sbb
rcll
sub
push
fisubl
xor
call
xchg
jg
in
mov
dec
adc
or
jne
pop
imul
negl
xchg
jmp
or
imul
pushf
xor
inc
cmp
shr
mov
mov
xlat
test
xor
fisubrl
paddsb
fisubrs
fisubrl
mov
fstpt
in
adc
pop
movsl
insl
aad
mov
les
stos
fstl
test
lea
loop
orl
mov
cmp
mov
out
jo
clc
sbb
pop
jl
push
std
ds
or
xchg
clc
mov
xchg
test
enter
icebp
xor
fstpl
loope
mov
movsl
lods
xor
and
lock
sub
test
leave
ja
xor
stos
and
push
and
add
mov
lock
dec
fiaddl
in
lret
cs
sbb
jmp
aam
ret
iret
cmp
aad
pop
jb
or
cltd
into
sub
daa
cmpsl
leave
out
sbb
ret
jl
shll
ljmp
jb
mov
mov
mov
fnstenv
pop
mov
rclb
inc
cwtl
push
addr16
jge
daa
ja
sub
shr
mov
test
xchg
jbe
inc
addr16
and
push
cmpsb
fstps
lock
or
xor
leave
or
xchg
cli
mov
fistl
pop
push
dec
clc
ja
add
add
push
jl
aaa
mov
data16
add
mov
sahf
jbe
mov
imul
sbb
gs
in
add
inc
aad
mov
cmpsb
movsl
cmp
add
push
cmp
lods
loopne
repnz
pop
sub
scas
stc
cwtl
pushf
flds
pop
dec
xchg
lret
fistl
push
out
rolb
jge
add
pop
adc
les
into
or
pop
sbb
cmpsb
ret
lret
add
test
lret
jecxz
push
rcll
cmpsl
adc
pop
outsl
loopne
jl
ja
cmp
mov
repz
push
fadds
pusha
mov
push
and
leave
mov
sub
imul
ja
pop
fadds
mov
int3
pop
mov
lret
pop
loop
stos
mov
and
fsubr
fistpll
jle
outsl
pcmpgtd
fstl
mov
or
into
stos
clc
or
push
std
js
lcall
add
out
jle
bound
fldcw
push
lahf
push
out
stos
fdivrs
mov
fdiv
je
std
mov
pop
mov
insl
pop
pop
mov
xor
das
push
mov
pop
cwtl
xor
lret
hlt
subb
push
inc
xchg
jbe
cmp
pop
pop
xor
ss
outsb
cmp
sbb
pop
popa
mov
cmp
adc
lret
movsb
pop
ja
sbb
xor
stc
lret
mov
xchg
addr16
in
fidivl
in
jge
xchg
add
cld
stc
ljmp
movsb
test
cmpsb
jo
ret
jno
pop
daa
inc
adc
loopne
push
cmp
lods
xlat
shll
stos
call
sbbb
mov
and
mov
inc
out
subb
test
into
sahf
push
stc
lret
adc
test
jmp
or
sbb
fwait
and
adc
js
cld
cmpsb
rcrl
fs
jle
rorl
sub
mov
ds
xchg
scas
pop
inc
gs
push
dec
dec
push
out
inc
es
add
fidivrl
lahf
mov
clc
lcall
add
in
jle
lock
mov
mov
mov
sti
stos
jl
inc
jl
movsl
or
popf
or
mov
mov
mov
sub
jns
aaa
inc
pop
loop
cli
mov
fidivl
std
in
aaa
stos
lods
rclb
lods
pusha
les
pop
push
mov
cmp
movsb
fmuls
jae
dec
ret
clc
lea
jge
movb
sub
insl
jecxz
lahf
ljmp
adc
call
dec
cmpsl
sub
cmp
call
mov
push
push
loopne
je
fbstp
mov
adc
xchg
loop
push
jmp
cmp
mov
cmp
jb
sub
test
push
mov
test
cmp
add
add
add
inc
hlt
mov
mov
add
icebp
sbb
and
fnstsw
in
add
pop
mov
xor
xchg
inc
call
out
mov
adc
mov
ffreep
lea
push
out
imul
adcb
in
je
sbb
mov
ja
cmp
push
testb
xchg
add
jge
and
adc
div
sar
daa
jo
jns
ficoms
stos
cltd
neg
mov
mov
add
sbb
rcl
mov
dec
xchg
mov
push
inc
pop
jne
cmc
sbb
popf
int3
shr
sub
sbb
xchg
xchg
jb
sub
mov
mov
idiv
enter
mov
push
cmp
aaa
fisttpl
mov
pop
fdivs
je
sbb
repz
jne
jg
out
push
adc
and
loope
jo
in
sub
jle
shl
add
pop
mov
out
clc
lea
jp
or
add
cli
cmpsb
cmpsl
jecxz
and
fucomp
dec
mov
outsl
add
sub
insb
and
mov
jl
inc
sbb
dec
lods
sub
dec
inc
shll
jecxz
xchg
push
pop
ds
in
pushf
scas
xor
dec
sbb
mov
pop
sub
pop
ret
dec
push
sub
adc
xchg
cmpb
add
pop
fcmove
repnz
outsl
inc
or
pop
jo
jp
cli
ret
pop
fcoms
jg
dec
shl
push
pop
push
push
push
inc
daa
mov
arpl
popa
lret
xchg
xchg
add
into
cmp
mov
subb
mov
jae
imul
mov
lea
fdiv
in
or
sbb
mov
mov
mul
lahf
insl
xchg
or
lcall
cmp
mov
ds
out
cmp
mov
test
mov
lcall
lcall
and
sbb
cltd
adc
cltd
xchg
outsb
push
ja
rol
mov
fidivrl
dec
and
push
fsubr
shll
mov
cs
add
jecxz
cmp
or
add
adc
clc
or
jmp
or
dec
cmpsb
sarl
fldcw
sbb
mov
mov
or
addl
mov
push
cmpsl
dec
ja
lea
push
cmp
hlt
cli
dec
push
cltd
xchg
jae
cmc
test
fldenv
sub
jns
flds
nop
hlt
fs
mov
adc
pop
cltd
or
pop
mov
pop
bound
mov
dec
ja
pop
addr16
movsb
mov
dec
lods
xchg
dec
rcl
out
decb
push
xlat
mov
push
sub
fimuls
jmp
mov
pop
cmc
and
out
insl
out
fiaddl
loop
out
push
xchg
mov
jl
ljmp
ja
jle
enter
sti
in
push
sbb
cmpsl
repz
std
fisubrs
ret
nop
dec
fsubrs
mov
jne
pop
jno
inc
ret
dec
xchg
mov
hlt
pop
ds
clc
add
ds
pop
in
repz
or
mov
fdivp
lods
fcomps
insl
xor
xlat
arpl
jnp
test
xor
add
mov
cld
pusha
movsb
popf
imul
enter
sub
scas
or
xor
and
or
fnstenv
imulb
cmp
out
inc
dec
mov
cmpsb
das
ja
xchg
inc
call
mov
std
cmp
fdivrp
fcomp
xchg
lock
shrl
sti
pushf
into
je
sub
icebp
js
mov
fcmovnbe
dec
xchg
mov
test
push
aam
fistpll
cmp
lret
in
imul
adcl
subb
loope
mov
jb
adc
lahf
pushf
movb
pop
ret
inc
aaa
shl
xor
out
and
ror
shll
lods
rcll
push
push
cmp
pop
xor
in
repnz
adc
pop
jno
lahf
lret
sub
push
fwait
or
mov
push
in
fistl
mov
aad
xchg
stc
adc
push
cli
mov
or
icebp
push
cs
jecxz
int
jge
sub
mov
or
push
loopne
mov
hlt
xchg
xor
js
xlat
pop
repz
jne
testb
lret
xor
icebp
mov
lret
sbb
test
cmpb
mov
push
pop
xor
inc
dec
in
sbb
xchg
push
out
shl
and
outsb
xchg
xchg
das
stos
mov
repz
inc
cmpsb
mov
pop
mov
lea
mov
lea
incl
mov
pop
xor
mov
out
aam
cmp
dec
pop
dec
out
jnp
shlb
push
repnz
mov
loop
push
add
sub
xchg
repnz
test
mov
pop
out
or
xor
inc
push
mov
addl
mov
and
or
jae
cwtl
dec
test
adc
xchg
dec
insl
sbb
or
shlb
mov
mov
add
jb
mov
jo
in
test
xor
or
cmp
lock
loopne
jmp
imul
xchg
inc
mov
mov
cltd
lods
hlt
loop
dec
fisubrl
aam
mov
add
repz
mov
testb
mov
cmp
and
ljmp
mov
pop
sbb
lods
test
xchg
sbb
rolb
pushf
pop
inc
cmpsb
xchg
inc
rcrb
cmpsl
mov
add
daa
sbb
jbe
lods
or
clc
adc
add
movsl
jbe
adc
cmp
out
pop
movsb
stos
jns
imulb
pop
cltd
shll
iret
or
push
test
mov
jl
and
adc
call
push
sti
mov
mov
test
stos
jne
dec
and
bound
or
sbb
mov
or
pop
mov
dec
repz
dec
adc
pop
pop
or
int3
and
sti
sub
sbb
stos
jp
popa
je
je
daa
es
mov
mov
pop
call
xchg
loope
adc
insb
aad
movsb
inc
jl
pop
sbb
mov
and
add
jnp
mov
out
inc
aaa
or
mov
mov
sub
cmp
add
icebp
mov
pop
and
imul
jp
mov
push
jbe
ret
data16
rcl
pop
push
clc
add
out
call
sub
fisubl
add
mov
cmpsl
aad
mov
es
pop
push
fcomps
cld
mov
add
lods
add
ficoms
cmp
sub
and
sti
inc
rolb
push
stc
push
ret
adc
inc
sarl
outsl
ljmp
andl
xlat
mov
mov
out
daa
cmp
adc
jb
and
jb
cmp
movsb
cmc
sub
loope
ret
adc
add
jecxz
sbb
out
or
sbb
sahf
cmpsl
mov
loop
in
and
sbb
pop
call
inc
adc
scas
xor
cmpsb
adc
fdivrs
push
imul
rclb
or
or
xorl
jecxz
fdivp
inc
mov
sbb
lea
ljmp
popf
les
sbb
jge
jb
in
fmull
sub
mov
leave
das
fstpl
pushf
push
fimuls
orb
fbstp
arpl
insb
pop
mov
fsub
jl
inc
jle
push
pop
in
loop
sbb
out
and
sub
mov
lea
aaa
lods
mov
imul
pop
test
ja
imul
jecxz
xchg
push
push
xor
sub
imul
pop
int3
subl
mov
fs
inc
stc
mov
pavgb
test
test
fnstenv
lods
fistpll
xchg
out
cmc
fldl
js
push
mov
and
mov
aam
inc
cmp
rorb
outsb
push
inc
add
inc
out
xchg
adc
sar
jo
cmpsb
add
or
pushf
jae
in
push
aad
push
lods
imul
add
sbb
adc
pop
scas
lcall
inc
stos
mov
pop
sahf
int
fldcw
jb
in
ret
and
jno
xchg
mov
lds
shlb
sbbb
xlat
lods
pop
lret
dec
cmpsl
shrl
arpl
mov
subb
mov
aam
loop
or
adcb
mov
mov
insl
mov
aam
cmpsb
neg
negl
pushf
adc
jge
lds
add
daa
ret
dec
rcrb
xchg
mov
dec
pop
rol
lret
in
mov
xor
insl
insb
push
jno
cmpsb
and
add
leave
xchg
repz
sub
xchg
in
mov
cld
mov
pop
out
add
call
sub
mov
sub
rolb
or
mov
into
repz
inc
push
mov
xor
jbe
or
sbb
and
push
sbb
ror
mov
or
mov
idivl
dec
out
push
mov
sub
cmp
mov
orb
je
jle
or
shlb
mov
adc
pop
ret
inc
pop
jo
ss
pop
push
sarl
push
ljmp
mov
stos
ret
test
out
push
push
out
mov
xlat
xor
push
mov
push
pop
in
movsb
push
xchg
xchg
pop
ret
cmpsl
ljmp
xor
test
roll
xlat
inc
cltd
rcrl
or
je
or
loopne
lods
dec
add
xor
sub
aaa
data16
popa
adc
xchg
pusha
jmp
sub
int
mov
mov
ja
mov
mov
inc
cmc
in
xchg
sahf
in
sbb
jecxz
xor
shl
dec
das
push
sub
ds
stc
mov
jb
iret
add
jmp
fs
cmp
cmpsb
inc
pop
add
cmpsb
lock
stos
imul
mov
push
ljmp
pop
into
cmp
mov
pop
sub
cmc
cmp
push
adc
or
rorl
adcl
gs
mov
add
xchg
fidivs
iret
inc
ret
xchg
jl
inc
xor
js
loop
mov
daa
sbb
fwait
negb
cmp
popa
and
imul
test
push
mov
fsubr
mov
lcall
cmp
sar
pop
aas
add
mov
mov
sub
bound
mov
mov
mov
mov
add
adc
rcrb
fadd
popa
shll
xchg
jp
js
mov
arpl
iret
inc
scas
mov
aam
insl
xchg
xchg
mov
fistps
ss
loopne
xchg
out
inc
and
inc
fidivrl
cmp
jbe
das
xor
lahf
and
mov
insb
inc
jmp
jl
sti
mov
inc
imul
rcll
cmp
and
mov
out
adc
popa
adc
push
mov
ret
cmp
lea
dec
popl
sbb
xor
cmc
test
cmp
pop
iret
rcll
pop
out
scas
jno
adcb
loopne
hlt
insl
mov
xchg
inc
sbb
insl
cltd
sbb
push
xor
stc
jp
dec
pushf
jmp
stos
loop
cmc
xchg
fbstp
dec
jns
jl
jge
sbbb
les
jge
call
sub
mov
push
lcall
add
sti
das
xchg
ffreep
push
cmp
outsb
cld
pop
mov
add
lret
sub
xchg
mov
inc
adc
lods
jg,pt
and
jo
mov
xchg
cmpsl
cmpsb
xchg
xchg
xorb
notl
stos
mov
pushf
adc
out
xor
lcall
dec
insb
inc
dec
dec
mov
das
push
stc
adc
testl
mov
into
mov
stos
jl
push
nop
sahf
jae
outsl
test
sbb
iret
ret
test
sub
cmpsl
inc
dec
inc
out
lock
outsb
int3
add
jg
in
cmpl
dec
sti
dec
sub
rcrb
jne
arpl
sti
lret
cmc
in
ja
adc
mov
jnp
inc
insl
shl
cmpsl
cli
fs
jecxz
sub
cltd
in
cmp
and
jg
mov
sbb
insl
sbbl
mov
dec
pop
mov
push
mov
out
cld
xchg
fcoml
push
push
or
inc
jmp
insb
ja
inc
adc
lahf
in
dec
ds
lds
xor
fildll
int3
jb
mov
pop
leave
push
cmpb
xchg
movsb
mov
es
or
mov
fs
rcrb
cmpsb
test
lods
push
mov
and
jl
negb
mov
sub
sbb
inc
das
mov
mov
out
sub
dec
jo
fwait
cmp
in
add
sub
in
es
add
iret
fs
xchg
insl
mov
lds
loope
and
xchg
cld
stos
pop
pusha
fidivrs
dec
fiadds
add
push
jle
xchg
sub
rcll
jecxz
pop
mov
test
mov
jmp
xchg
icebp
out
fstps
std
lret
mov
sub
inc
cmp
scas
std
xchg
mov
shll
mov
mov
inc
sbb
push
mov
nop
notl
movsl
jecxz
mov
sub
add
xchg
mov
jno
cmp
mov
hlt
add
mov
sbb
daa
fstpl
or
js
sti
mov
jge
inc
cmc
jmp
or
lods
mov
jbe
vmovaps
mov
xor
push
xchg
mov
shrb
pop
and
movb
cmp
cmpsb
outsl
mov
jp
cwtl
fldcw
jnp
add
std
imul
or
fidivrl
mov
xchg
and
adc
mov
jmp
sub
fisttpl
gs
mov
movsl
sbb
cmp
mov
lahf
pop
cmp
xlat
cmp
das
mov
shll
outsb
jp
stos
stos
pop
jo
cmp
inc
imul
fcoml
ss
cmpb
movsl
fsubs
lds
fdivl
mov
jp
mov
mov
pop
xchg
xchg
cmp
inc
adc
in
adc
xchg
shrb
shlb
jl
push
mov
mov
sti
inc
or
add
fnsave
cmp
loopne
cltd
add
pop
xor
addr16
push
dec
mov
xor
int3
mov
pop
into
push
orb
test
into
loope
sub
xchg
mov
pop
mov
adc
push
loopne
sub
xchg
xchg
cmpsl
add
pop
jno
mov
jle
and
repz
cmp
fldt
or
les
fnstcw
and
sub
lahf
call
xchg
cmp
in
xor
daa
sbb
sub
mov
repz
imulb
out
nop
sbb
jb
fcoml
pop
shll
lretw
in
mov
push
mov
repz
add
cmp
inc
aad
adc
pop
push
add
add
sub
cmc
shrl
inc
jbe
lock
xchg
cli
ffree
push
sbb
shll
ret
pop
mov
test
out
dec
cmp
mov
insb
and
add
je
push
ret
dec
clc
aad
lds
inc
push
push
inc
es
imul
or
push
arpl
jns
pop
dec
cmpb
cmpsl
and
pop
or
fdecstp
push
sub
in
icebp
mov
and
sub
inc
mov
sub
fiaddl
daa
push
out
sti
notb
sub
adc
xor
jle
jnp
or
testb
push
push
call
mov
add
dec
ret
les
outsl
xchg
mov
shlb
pop
adc
lds
fisubrl
xchg
subb
mov
je
fstp
dec
rcrl
sarb
inc
xchg
push
pop
stos
mov
arpl
push
pop
cltd
mov
or
xlat
mov
inc
adc
bound
push
sub
push
shl
iret
and
insl
add
cltd
sub
xchg
dec
cmp
inc
std
push
sbb
call
mov
or
dec
insb
mov
inc
daa
pop
jb
xchg
test
cwtl
mov
popa
cmpsb
mov
mov
jbe
cmp
jge
test
rcl
push
push
add
dec
test
inc
mov
dec
inc
jne
push
lods
jmp
out
pop
push
sub
sbb
aad
xchg
cmpsb
cmpsb
pop
jle
push
cld
adc
das
popf
sti
in
jnp
fwait
inc
dec
mov
push
or
jno
test
xchg
xchg
mov
inc
stos
push
cmp
imul
rorl
or
lea
or
dec
pop
jmp
outsl
ljmp
inc
in
scas
and
cmp
lods
gs
repnz
lcall
jae
jo
push
mov
mov
pop
dec
sbb
pop
scas
mov
fcoms
mov
in
xchg
xchg
or
inc
jp
pop
call
jp
js
pop
jns
pop
popf
adc
xchg
mov
jl
xchg
cmpsb
mov
bound
cmp
push
stc
or
add
mov
jb
xor
stos
inc
jnp
lock
pop
xchg
pop
pop
in
or
lock
sbb
mov
push
mov
ds
jmp
or
mov
insb
into
jae
mov
mov
jle
and
rclb
xor
jb
sub
movl
or
enter
xchg
pop
push
xchg
add
addr16
repnz
ret
gs
xor
loopne
inc
cmp
cmp
movsl
push
mov
stos
cltd
rorl
add
sbb
shll
nop
fldl
push
push
mov
and
xor
cmpsb
push
and
or
outsl
in
xchg
xchg
mov
sub
das
push
cld
and
xor
jmp
addr16
std
inc
pop
xchg
in
fstps
das
add
mov
adc
sbb
sub
xchg
in
mov
mov
jecxz
ljmp
scas
lods
or
dec
ffreep
inc
inc
push
cwtl
jnp
scas
aaa
stos
movsl
loope
or
and
fcomps
bound
pushf
xlat
lock
mov
popa
or
mov
adc
sbb
xchg
outsl
scas
xlat
xabort
jae
mov
push
xchg
addb
sbb
movsl
enter
ss
testb
push
cwtl
ds
adc
mov
push
sub
call
sub
cbtw
dec
mov
lret
addr16
js
outsl
cmp
cmp
das
jge
cmp
out
lahf
int
inc
jne
rcll
jmp
fisttps
fcmovnb
fcompp
cld
lea
adc
into
popf
sbb
and
fldcw
jo
and
std
jns
sub
sarl
jb
and
imul
mov
mov
rorl
cmp
mov
inc
shlb
inc
mov
insb
inc
dec
loopne
lret
aaa
xor
pop
mov
lret
pop
int3
outsl
mov
push
or
ja
jmp
insb
arpl
stos
daa
xlat
cli
mov
push
pop
xchg
and
jl
push
jo
sub
cmp
adc
pusha
stos
lahf
fs
dec
fwait
addr16
flds
jo
imul
lea
push
rolb
add
mov
xchg
mov
ret
pop
and
pop
sti
inc
pop
xor
stc
mov
xchg
outsl
lret
inc
repnz
push
stos
shl
dec
mov
add
cmp
sbb
paddusb
js
or
andb
test
dec
push
es
mov
mov
jo
xor
gs
shll
cmpsl
bound
add
mov
or
psadbw
sbb
inc
add
cli
mov
xor
inc
mov
xor
fwait
sti
push
pop
hlt
push
cli
push
gs
push
push
mov
mov
popa
jns
sub
outsl
xchg
sub
fmull
dec
rcrl
and
adc
add
cld
cmp
out
or
fwait
arpl
mov
jmp
and
xchg
pop
xchg
dec
mov
pop
ret
mov
xchg
scas
mov
insl
cmpsb
adc
mov
xor
addr16
dec
mov
cld
push
addl
mov
or
iret
out
movb
inc
ja
mov
or
adc
out
arpl
testb
repz
flds
xchg
fidivrl
cmp
cli
pop
push
mov
xchg
add
arpl
inc
xchg
xor
fists
push
mov
fistpl
movsb
jns
jno
jmp
mov
mov
xor
jle
lods
adc
sti
loope
and
pop
addr16
mov
lock
aas
inc
jge
dec
out
cwtl
dec
or
cmpsb
cmp
movsl
icebp
dec
inc
stos
idiv
pop
stos
jne
push
cmpl
mov
fstl
repnz
xchg
dec
add
xor
mov
lahf
imul
repz
repnz
test
scas
movswl
lods
roll
cmp
jns
bound
std
push
or
push
pop
dec
iret
xor
mov
pushf
popa
repnz
dec
sub
fists
mov
ds
inc
aam
stos
das
test
daa
jb
jb
and
dec
jle
shll
add
or
sub
xor
test
sub
andb
pop
cmp
in
test
jge
sbb
scas
push
ret
mov
incb
repz
mov
sub
insl
add
mov
icebp
cltd
jle
cltd
iret
sub
mov
jbe
pop
xlat
iret
jno
add
sub
mov
mov
push
imul
pop
test
lods
fdivp
insl
or
mov
adc
mov
inc
push
stos
jns
movsb
push
insb
push
imul
add
cmp
je
ds
jo
cmpsb
imul
mov
cmp
lea
add
ds
das
sbb
push
mov
mov
or
or
jne
sbb
or
inc
jecxz
test
jle
xor
cmc
mov
les
lock
lock
xor
js
inc
sub
in
clc
and
pop
hlt
sub
sub
and
pop
jo
dec
and
daa
cmp
mov
data16
cli
subb
mov
imul
jp
cmpsl
pusha
cmp
dec
jmp
sti
add
cmpxchg
or
fdivl
mov
xchg
sub
aaa
xor
movsb
cmp
fdivrs
cmp
xor
xchg
and
inc
pop
xchg
int3
testl
pop
pusha
xchg
outsb
cmp
jb
out
loop
xor
mov
cmp
dec
cmp
mov
sarl
testb
lret
je
dec
test
push
pop
xchg
mov
jb
inc
and
sarl
sub
mov
cmp
adc
movsb
xor
push
and
ja
push
and
fiadds
adc
sahf
adc
push
shll
and
mov
cli
fisubs
cmc
dec
insl
lods
pop
inc
sbb
ret
loopne
xchg
inc
inc
mov
gs
pop
fcoml
packuswb
mov
daa
jne
sahf
js
jo
sbb
jae
mov
push
mov
jbe
mov
sbb
push
add
imul
and
insl
add
sbb
fnstcw
mov
fimull
std
cmp
sbb
out
push
sbb
in
dec
lods
mov
sbb
xor
push
repnz
pop
pushf
lock
and
rcrl
dec
in
lret
daa
out
sbb
jnp
jl
xchg
inc
shr
xchg
inc
xchg
push
lods
pop
xchg
lret
mov
data16
pop
inc
pop
mov
loop
jecxz
mov
cmp
rcll
sbb
sub
dec
data16
addr16
mov
inc
sbb
sarl
out
cmpsl
mov
jecxz
add
nop
sub
dec
mov
pusha
pushf
aad
push
sub
mull
mov
test
pop
dec
mov
mov
mov
mov
enter
jg
add
addr16
mov
push
dec
mov
adc
pop
jmp
gs
rclb
jno
add
cmpsl
dec
shrl
jle
fcmovnb
insb
push
adc
scas
dec
fs
cld
inc
mov
out
push
into
cld
jle
mov
imul
push
xor
pop
pop
pop
xchg
fmuls
sarl
xchg
ds
hlt
fnstcw
sbb
and
mov
int3
stos
and
sub
mov
imul
cld
sub
stc
aas
in
rcrl
cmp
mov
fidivrs
ret
out
sahf
adcl
xor
call
int
lods
or
cmp
dec
and
push
and
inc
xchg
stos
pop
std
or
imul
mov
pop
mull
and
sahf
push
nop
cwtl
mov
add
jbe
ja
sub
sti
jo
dec
cmp
call
adc
std
in
leave
xor
cltd
shrb
scas
jb
sti
inc
jbe
lret
mov
xor
inc
enter
repz
stos
out
xchg
popa
push
outsl
out
jge
aas
xchg
insl
ja
push
bnd
dec
xor
insb
lds
cltd
mov
leave
test
and
insb
mov
cmpsl
out
int
ss
sbb
mov
test
sub
mov
and
mov
ficomps
adc
in
mov
ret
imul
lcall
sub
jns
je,pn
lock
push
mov
notb
or
xor
jge
js
pop
mov
ja
fndisi(8087
imul
dec
push
jecxz
mov
xor
fistl
insl
incl
dec
and
xchg
push
cmc
mov
loopne
aas
inc
push
pop
inc
orb
ret
jecxz
sbb
adc
mov
fisttps
add
push
ss
dec
xchg
xchg
jae
loope
or
xchg
in
lds
cmp
loopne
popf
and
out
pop
add
ss
push
or
sarl
and
sub
aam
xor
cs
leave
sbb
jg
leave
jae
mov
addr16
mov
inc
push
call
imull
test
leave
sbb
lret
jns
inc
jg
movb
mov
jo
or
mov
pushf
push
push
cmp
data16
pop
int3
jle
call
iret
mov
mov
dec
xchg
lea
inc
shrb
ficoml
and
jb
ret
shl
loop
jbe
sub
in
pop
mov
mov
jecxz
aad
fnstcw
pop
jae
adc
fs
lock
sbb
lcall
mov
insb
in
mov
and
push
mov
mov
mov
push
sub
loopne
or
addr16
sarl
test
inc
lahf
movsb
rep
nop
dec
xor
rcrb
mov
or
lds
or
xchg
cmp
and
mov
insb
les
stos
push
inc
push
in
fucom
insb
adc
test
push
in
inc
pop
dec
pop
cltd
int
rcl
test
xchg
fwait
and
cmp
xchg
xor
mov
jp
adc
fwait
jnp
pop
cwtl
push
or
fsubs
push
je
test
and
pop
push
andl
cmpsl
cmp
pop
fcomp
enter
inc
mov
fsubr
jge
add
repnz
mov
push
lahf
subl
xchg
jle
inc
sub
leave
cmp
mov
andb
jg
pop
sahf
xchg
shr
out
jbe
push
arpl
jg
sahf
lds
movsl
test
fistps
xchg
loopne
aam
mov
mov
test
outsb
nop
pop
outsl
sbbb
out
mov
je
push
iret
negl
stos
xor
rclb
stos
arpl
mov
inc
jo
jns
xchg
lret
mov
enter
daa
dec
lds
mov
sbb
popf
jecxz
sub
mov
fcomp
lds
stos
mov
dec
fimull
or
loopne
in
mov
out
cmpsl
clc
movsl
and
push
xchg
mov
sarb
lea
in
xchg
jg
shll
jne
xor
cmp
out
ss
or
jo,pn
add
cmpl
cmpsb
pop
stc
nop
lods
rcll
movsl
and
test
pop
popa
shll
xor
cmp
push
cmp
xchg
cli
lods
add
out
mov
ljmp
push
aas
hlt
mov
cmp
dec
and
push
xchg
aaa
scas
lret
roll
or
pusha
daa
jne
jb
adc
pop
xor
push
test
rcll
push
or
call
sahf
xor
mov
aaa
pushf
enter
cs
inc
add
jnp
jmp
push
fsubrs
lods
loopne
xor
sbb
arpl
xor
sti
imul
lahf
lods
mov
push
inc
shlb
test
roll
sub
pop
cs
lcall
aas
mov
jne
dec
mov
pop
jmp
aas
lea
jo
icebp
pusha
sbb
and
into
outsl
pop
sbb
movsb
pop
cmp
js
mov
les
lods
mov
dec
sarl
cmc
push
hlt
pop
inc
test
test
into
cmpsb
xchg
int3
cwtl
mov
pop
imul
and
xchg
and
sub
sahf
or
or
cwtl
xlat
cli
mov
xor
xchg
and
das
pop
cs
into
pushl
cmp
mov
test
mov
ljmp
or
or
jae
xor
and
xor
mov
js
mov
jl
repnz
ficomps
mov
sub
and
int3
or
iret
jge
add
lock
out
mulb
jmp
sub
jg
or
jle
daa
add
sbb
mov
lods
movsb
or
lcall
add
icebp
shrl
mov
pushf
in
add
int3
sbb
aas
movsl
dec
push
inc
aaa
dec
jle
dec
xor
rcl
sbb
sbb
shll
or
gs
adc
lds
inc
or
popa
sub
jns
cltd
xchg
inc
xchg
add
cmp
test
int3
test
call
les
sub
jl
jecxz
pop
out
iret
fst
sbb
test
mull
test
mov
in
mov
ret
cmp
and
xor
cmpb
sahf
push
notl
scas
or
lods
jb
incl
pop
xchg
dec
or
insb
xor
ficompl
dec
insb
add
arpl
jb
or
fidivl
and
push
arpl
test
sub
icebp
and
add
lock
or
mov
xor
stos
pop
mov
sub
jp
and
sub
cmp
stc
adc
loope
scas
sub
lea
xor
inc
push
imul
repnz
cltd
xchg
pop
jae
jp
clc
jne
xor
xor
jb
scas
sub
sub
ljmp
addr16
inc
xchg
push
mov
mov
aas
jno
jge
cmp
xor
mov
jle
rcrl
adc
enter
int3
mov
ss
mov
incb
jb
iret
or
xchg
nop
ja
inc
dec
inc
ljmp
fs
and
aas
sbbl
push
fistps
test
sub
sbb
mov
icebp
in
imul
mov
out
sub
loope
push
ljmp
jne
jb
lds
fistl
add
aad
addb
adc
pop
push
out
repz
std
mov
and
xchg
jns
repz
xchg
das
arpl
popf
or
dec
add
inc
xor
scas
or
and
mov
int
jb
dec
rclb
das
pop
xchg
stos
cmc
daa
in
or
movsb
mov
sti
mov
push
xor
xor
inc
jecxz
pop
add
mov
add
xor
ljmp
pop
enter
lods
add
adc
dec
or
push
dec
mov
and
in
xlat
imul
js
in
or
cwtl
cmp
out
daa
mov
add
push
dec
mov
jle
fs
mov
adc
rcr
inc
xlat
jl
bound
hlt
jbe
sbb
test
repnz
loop
sbb
add
fstl
xchg
bound
adc
stos
stos
dec
jmp
push
push
jmp
lcall
das
mov
aas
push
in
dec
fucomi
jl
inc
outsb
push
jnp
rcll
mov
or
jp
mov
testl
sti
mov
inc
jmp
jl
dec
mov
cmp
rcrb
push
int3
iret
or
nop
dec
ret
sbb
pop
insb
mov
or
shlb
punpckhbw
xor
xchg
shll
lods
sbb
ffreep
out
xchg
mov
or
js
xor
insl
push
loop
mov
cmp
dec
flds
sub
fs
insb
clc
sbbl
mov
pushl
or
dec
fs
sbb
aam
mov
lcallw
sbb
scas
gs
mov
push
aad
mov
imull
into
xor
or
cltd
sbb
sub
mov
rorl
mov
test
test
movsl
lret
mov
in
and
pop
xlat
mov
scas
testl
out
sarb
fcmovnbe
shll
xor
jno
and
lret
cwtl
xchg
je
mov
rorb
add
mov
push
mov
sub
adc
fcomps
mov
inc
sub
cmp
jmp
dec
add
in
clc
push
push
out
and
addr16
fidivl
popa
pop
jge
hlt
cmpsl
lods
pop
add
mov
movsb
and
mov
cmp
cmpsl
imul
fldcw
adc
dec
es
test
push
jo
mov
unpckhps
fs
adc
arpl
test
setae
mov
sub
jmp
cmp
xor
add
shlb
lcall
cwtl
or
repz
fcmovb
jge
jge
and
or
stos
mov
xchg
push
inc
mov
pop
cli
stos
rcr
movsl
push
dec
sahf
ds
rcll
adc
and
mov
push
sarl
loope
or
sbb
xor
sbb
xchg
dec
push
push
out
mov
ret
outsb
or
out
andl
int
psllq
rcl
or
jg
push
jle
and
fbstp
es
push
pop
aam
loopne
adc
mov
and
fldenv
push
mov
fsubs
stc
push
add
mov
dec
push
adc
aas
not
pop
idivb
jp
fwait
stos
jnp
jo
das
mov
or
add
dec
or
mov
or
and
jb
dec
shlb
sub
out
fwait
sbb
ljmp
jmp
loope
jp
enter
rcll
sub
stc
enter
shlb
out
fmulp
into
add
lcall
fwait
adc
xor
shrb
aaa
dec
cmp
mov
ljmp
lahf
jnp
push
xor
test
xchg
stc
shl
pop
jle
fwait
cld
or
mov
add
fisubs
out
xchg
jne
cmp
and
imul
xchg
adc
xor
xor
cmpb
mov
push
mov
mov
decl
test
ret
push
movsl
push
jae
and
dec
pop
movsb
sbb
push
or
or
popl
lcall
call
dec
dec
fcmove
ja
nop
lahf
dec
notb
sahf
dec
int
xrelease
sbbl
and
rcrl
mov
push
sub
pushf
pop
pop
mov
repnz
xchg
aaa
dec
scas
shrl
xchg
xor
add
mov
push
je
jnp
pop
mov
lcall
adc
adcl
cmp
lods
movsb
loopne
clc
mov
or
cmc
cli
scas
stos
sub
xor
imul
dec
dec
mov
arpl
fstl
xor
mov
lret
arpl
jnp
stos
jo
pop
rclb
sub
dec
loope
out
lcall
and
and
shrl
pushf
cmp
cwtl
shrb
movsb
jb
dec
sub
das
ret
call
sbb
lock
jne
movsl
out
cli
ja
test
imul
stos
push
sub
xor
sarb
cmp
jo
rorb
xor
sahf
adc
xchg
pop
hlt
pop
outsl
lea
cmp
inc
jle
pop
in
dec
or
inc
das
dec
cmp
mov
cmpb
push
bound
pusha
ja
repz
movsl
pop
rcl
out
jle
push
stc
mov
dec
mov
scas
stc
mov
fisttps
loopne
adc
add
push
xchg
dec
mov
sub
push
sbb
aas
addl
icebp
sub
mov
stos
repnz
mov
shrb
push
dec
scas
push
dec
int
sbb
lock
lcall
jbe
push
fcomp
into
loop
jl
dec
popf
cwtl
les
mov
jle
insb
xchg
xchg
lea
dec
jno
mov
movlhps
dec
outsl
fimull
outsl
sarl
in
lock
vpmacsdqh
cmpsb
std
insb
cmpsl
mov
push
xchg
test
xchg
les
inc
mov
cmpsb
xchg
adc
xchg
mov
ficoms
adc
repz
mov
or
mov
jmp
add
ljmp
sbb
ds
cmp
or
inc
pusha
std
mov
xchg
mov
jmp
aas
sub
lcall
daa
sahf
push
cmp
leave
sbb
outsb
jl
inc
and
sbb
into
fimuls
xor
push
cmp
mov
xchg
pop
outsb
test
mov
adc
test
jmp
popf
dec
dec
mov
cmp
sub
jb
pusha
orl
mov
mov
scas
dec
mov
mov
mov
clc
fisttpll
shrb
push
inc
fs
mov
push
into
jno
jge
xor
imul
mov
mov
xchg
call
push
xor
lds
in
clc
mov
adc
pushf
testl
cmc
enter
stos
mov
hlt
mov
sahf
aad
loop
push
cmp
fstl
pop
pop
faddl
xor
mov
push
fistpll
xor
dec
std
jb
test
std
mov
adc
xor
ja
and
out
mov
push
xchg
lcall
jo
das
cmpsb
dec
aad
add
call
cmp
jno
dec
pop
arpl
fldl
testb
gs
icebp
add
xchg
cmp
mov
lahf
mov
add
in
pushf
outsl
push
sbb
scas
cld
daa
add
adc
out
loope
data16
les
insb
mov
sbb
mov
test
mov
in
pop
pop
sub
pop
pop
subl
or
jae
cmc
mov
mov
jns
pop
mov
lahf
lock
data16
pop
mov
outsb
aas
push
jbe
dec
mov
test
jae
jnp
push
int
subb
lods
xchg
fdivrl
xor
shll
mov
movsl
stos
dec
pop
mov
test
iret
divl
and
mov
mov
inc
insl
sti
or
cmp
mov
jae
inc
popa
sub
ret
or
inc
stc
lcall
div
das
xrelease
test
cmp
and
lock
sbb
dec
lahf
fwait
std
mov
add
mov
inc
mov
push
or
push
mov
in
pop
xchg
mov
xchg
add
inc
jo
jns
test
fs
add
mov
fisubs
xor
lock
push
push
xchg
cmp
inc
dec
andl
sub
hlt
jo
mov
enter
inc
pop
test
inc
pmullw
cmp
pop
test
adc
xchg
cmp
movsb
js
cltd
rol
icebp
push
mov
mov
aaa
sbb
and
gs
iret
addr16
ljmp
popa
adc
jo
cli
loope
dec
dec
inc
sbb
inc
sbb
leave
xchg
outsl
jb
mov
cmp
aas
cmp
jnp
jb
xor
xor
lods
push
mov
call
jnp
pop
cmp
jbe
popf
ss
push
push
sub
out
pop
in
xchg
lcall
adc
lret
push
pop
mov
mov
shl
clc
xchg
cmpsb
push
cmpsb
xor
imul
mov
data16
inc
stos
xchg
inc
cli
clc
pop
addr16
stos
clc
inc
clc
pop
jns
mov
xor
fcomps
cmc
jno
out
mov
pusha
xchg
jbe
std
mov
lahf
cmp
iret
stos
mov
cli
mov
inc
pop
mov
xchg
outsb
cld
ljmp
lods
mov
jge
jns
test
popa
push
aaa
xchg
js
mov
adc
mov
popf
mov
mov
push
cmp
mov
add
mov
jl
popa
in
test
jp
lret
test
inc
sbb
cmpsb
repz
jb
dec
orb
jl
fisubrl
xor
mov
or
andl
sbb
sbbb
xchg
xchg
or
mov
movsl
add
sub
sbb
mov
mov
outsl
les
mov
leave
adc
sbb
sbb
xchg
xchg
mov
sbb
fcmovnbe
and
cmp
cmp
inc
cmp
xor
jb
insb
test
popf
imul
ja
cmc
nop
cmp
push
repz
push
cmovbe
push
cmp
xor
shl
push
in
lea
cmp
mov
int3
pop
jl
xor
mov
aaa
loop
mov
mov
xor
dec
adcb
push
xchg
sar
lret
adc
sbb
dec
xchg
inc
and
stos
mov
inc
inc
xlat
add
adc
mov
jo
es
popf
mov
push
lret
push
lods
out
jns
mov
fdivs
sub
clc
jnp
imull
xor
std
dec
pusha
cwtl
pushf
ss
or
sbbb
fstl
mov
sti
out
sub
lods
mov
add
cmc
push
or
adc
jl
cld
sbb
fs
hlt
push
fs
cmp
test
sbb
add
scas
ss
sub
fcmove
or
or
jmp
or
fnsave
cmpsb
icebp
and
rorl
inc
push
push
neg
mov
pop
dec
enter
lcall
dec
fisubrs
stos
push
mov
mov
push
sbb
cmp
sbbb
mov
fs
sub
lcall
xor
adc
jle
incl
jnp
xchg
out
mov
adcl
leave
cli
fs
es
stos
movsl
cs
cmc
push
inc
fisttpll
loop
xlat
movsl
mov
push
adc
adcl
sarl
mov
repz
cmpsb
sbb
add
cltd
push
out
aas
jg
jo
in
cwtl
add
and
and
ret
add
jecxz
out
or
jmp
mov
cmp
out
repnz
aam
adc
xchg
dec
inc
shl
jb
daa
jo
pushf
adc
sub
int3
les
inc
push
adc
pop
add
sbb
cmp
mov
ds
or
xchg
fisubrl
mov
lahf
jnp
fcmovne
dec
dec
lret
insb
ds
push
ds
aaa
xor
push
sub
test
sub
idiv
fcoml
sbb
push
lret
lahf
out
sub
pop
mov
adc
or
push
xor
add
and
gs
mov
ljmp
pushf
mov
xchg
fildll
mov
fnstenv
pusha
mov
mov
cmpsb
and
inc
and
cmpsb
out
inc
pop
imul
stos
xchg
popa
jecxz
inc
popa
sbb
shll
popa
js
push
mov
out
inc
aam
add
cmp
jnp
pop
das
dec
add
mov
xchg
xor
in
or
cltd
fwait
out
and
pop
xor
mov
sub
lea
out
adc
stos
push
sub
test
lcall
mov
out
xor
bound
xor
add
sub
pop
and
fldl
xchg
enter
shlb
push
push
dec
leave
or
push
leave
dec
or
xchg
lea
cmc
subps
mov
les
fdivr
xor
inc
xlat
imul
int
fs
rdpmc
push
bound
loope
mov
popf
mov
js
jne
cli
cs
cmc
mov
int3
data16
xlat
loop
loope
shrl
rorl
add
daa
xchg
sub
push
rcll
sti
cmpsl
dec
loopne
out
push
cltd
les
mov
lock
fscale
es
xchg
rcrb
sbb
cmp
xor
push
xchg
add
jg
inc
xorl
out
fimull
mov
mov
jne
cmpb
loopne
arpl
cmp
xchg
fmuls
add
mov
and
lds
pushf
xor
repz
hlt
sub
xor
mov
jo
jbe
mov
call
in
adc
xchg
addr16
outsl
xchg
popa
testl
jno
mov
inc
dec
adc
xchg
fwait
das
aad
add
popf
dec
sub
vrsqrtps
aaa
aas
int3
cs
cmp
adc
scas
stos
ss
mov
paddusb
lods
or
mov
add
push
imul
and
ja
shrb
xchg
sbb
inc
out
add
push
xchg
movsl
idivb
jbe
test
in
cmp
mov
cmp
loopne
cmpsb
dec
mov
and
pop
xchg
es
jmp
scas
add
sbb
jge
dec
imul
mov
popa
out
jbe
or
inc
xchg
lahf
mov
cwtl
test
jo
push
sub
inc
gs
jmp
cmpsb
xor
push
mov
sub
inc
fdivs
push
lods
daa
aad
sub
frstor
arpl
sub
orl
lods
xchg
dec
std
imul
or
int3
pop
pop
lods
sahf
cmc
fadds
inc
shll
outsl
test
cmp
std
inc
fwait
in
in
fnstenv
xchg
fstpt
inc
aaa
mov
fldt
push
pop
stos
jp
in
pop
test
adc
std
lods
cmpsb
iret
scas
add
push
mov
test
jbe
stos
das
ficompl
jbe
cmp
mov
jae
lret
hlt
mov
rcrl
cmp
jecxz
mov
pop
xchg
push
add
xchg
mov
shrb
adc
inc
out
out
shll
xchg
aam
adcl
or
pop
xchg
popf
sub
xor
dec
sahf
cltd
lods
xchg
imul
mov
push
int3
negl
sbb
dec
in
ljmp
jne
outsb
retw
mov
sbb
sahf
aas
xor
or
loopne
call
repnz
ds
cs
sub
outsb
sub
push
insl
or
adc
test
sbb
adc
cltd
jnp
jbe
test
ja
loope
fadd
cwtl
fwait
in
and
in
shl
push
fsubs
sub
aad
mov
mov
shlb
push
jl
dec
cmpsl
cwtl
jnp
mov
test
lea
mov
pop
stos
cmp
adc
or
or
inc
mov
push
cmp
pop
mov
and
loop
cmp
pop
test
add
aas
jl
stc
mov
cmp
iret
push
ds
sub
cmp
or
test
scas
pop
inc
mov
add
outsl
inc
jb
sub
add
push
mov
out
rolb
inc
in
xor
adc
sub
sub
into
arpl
adc
fsubr
sarb
or
dec
outsl
enter
dec
out
repz
inc
imul
fstpl
pop
inc
and
mov
into
ret
cmc
push
scas
call
adc
sub
cmp
imul
cwtl
cli
icebp
shlb
cltd
shll
dec
sbb
mov
movsb
imul
ja
shlb
adc
mov
roll
cltd
sub
test
repnz
jbe
xor
iret
jnp
int
lods
add
in
push
popa
fmul
test
push
std
xor
fwait
jne
sbb
dec
xchg
push
fstl
xchg
movsl
mov
jecxz
inc
lods
push
loop
ljmp
jmp
addr16
dec
out
mull
pop
and
mov
dec
inc
lods
push
repz
dec
sahf
jp
add
repnz
scas
sarl
or
mov
ss
push
call
mov
push
and
mov
push
outsb
imul
add
inc
push
cmpsl
push
popf
fstl
adc
jno
stc
adc
jmp
icebp
icebp
insb
test
call
dec
adc
xchg
aam
dec
add
testl
xchg
incl
std
fcmovb
fwait
rcl
sbb
ds
pusha
rclb
dec
jno
std
mov
add
lret
mov
xor
mov
pop
insb
add
cli
into
rcrl
xor
pop
ja
in
adc
push
lock
es
lods
cmpsb
cltd
and
popf
inc
fstpt
mov
jp,pn
lock
test
popf
xchg
out
mov
icebp
fbstp
adc
test
dec
std
mov
popf
mov
xchg
popa
xchg
imul
mov
out
mov
add
lret
jb
out
ljmp
adc
int
repz
ja
hlt
fs
jle
mov
push
in
pop
cmp
add
mov
lods
add
aad
pop
mov
fnstsw
cmp
std
jg
xchg
sub
xchg
loop
imul
mov
push
mov
xchg
cmp
cmc
inc
xchg
xor
jno
lods
cbtw
cmp
jmp
xchg
push
cltd
and
mov
stc
aad
int
dec
nop
or
rorl
cli
loope,pn
dec
or
lret
xchg
dec
mov
inc
cmc
mov
pop
xor
test
cmp
lahf
test
push
sub
hlt
sbb
add
ret
cmpsb
fcomip
push
cs
pop
pop
out
sub
iret
sbb
adc
lret
xchg
ret
mov
push
test
adc
aad
sub
add
insl
xchg
pusha
clc
push
push
push
scas
mov
cmp
daa
fdivrs
mov
sbb
shlb
vpcmpeqb
mov
xor
loop
aaa
je
movsb
popf
inc
lods
popf
pop
loop
inc
xlat
adc
movsb
jg
cmp
jnp
nop
mov
leave
dec
insb
inc
lcall
mov
sbb
insl
push
mov
push
les
mov
jnp
lock
ljmp
inc
aas
pop
mov
and
jo
and
mov
lret
dec
adc
dec
aaa
or
xor
xchg
xchg
clc
sbb
pushf
mov
cltd
leave
pop
jae
sub
pop
loope
addl
lods
mov
push
sbb
std
outsb
idivb
scas
dec
and
insl
enter
add
dec
stc
aam
xlat
dec
stos
jb
je
inc
sahf
sbb
lock
and
push
insl
add
or
lea
test
mov
mov
add
jmp
xchg
and
cmc
adc
ds
add
push
shrb
movsb
ss
pop
out
in
pop
dec
inc
pop
fildll
shrl
sbb
mov
icebp
negb
sub
pushf
aad
mov
fimull
xchg
fldt
lds
mov
xor
or
ljmp
sti
fsubs
ret
ss
mov
outsb
adcl
je
cmp
mov
sub
ljmp
loope
mov
sub
and
int
push
inc
pop
or
pop
pop
or
lds
pushf
lods
sbb
notl
lods
jnp
out
lret
test
cmp
and
jle
jl
sub
dec
adc
cmp
xchg
dec
mov
or
imulb
xor
mov
loop
lea
rep
out
hlt
add
mov
mov
in
sub
fbld
mov
or
aaa
sub
sub
pop
shll
jle
inc
sub
or
cli
test
cmp
sub
push
cmp
xlat
fwait
jne
leave
pop
rolb
fstpl
movsl
cmp
repz
mov
orb
mov
fmull
pop
pop
aad
push
inc
or
mov
mov
sahf
fimuls
jno
cmp
sub
int
scas
in
xchg
xchg
lods
aaa
sbb
jb
add
cmp
dec
adc
push
stos
or
pop
push
cmp
in
or
jle
jp
test
test
xchg
enter
sti
cwtl
jbe
inc
in
enter
dec
js
or
jae
icebp
int
pop
push
cmp
and
jge
pop
push
test
sbb
enter
cmp
fidivl
cmp
jmp
xchg
mov
adc
xchg
or
les
or
jbe
xor
xchg
mov
shll
inc
int3
fs
xor
mov
mov
sub
cld
mov
push
push
arpl
jbe
sub
pop
cmp
mov
dec
fildl
xor
sub
jnp
pop
stos
lock
push
mov
sarb
cld
cs
mov
adc
sbb
jl
hlt
push
in
imul
mov
int
jmp
jecxz
adc
iret
in
test
aam
aad
push
mov
dec
cmp
xchg
push
lcall
testl
xchg
push
cltd
mov
dec
popa
push
push
xchg
roll
aaa
jge
push
out
pushf
sti
daa
fdiv
dec
cld
cli
popa
daa
stos
in
adc
mov
xchg
sbb
adc
xor
or
cmpsl
mov
mov
mov
xchg
adc
dec
sub
and
add
mov
jl
lock
mov
es
xchg
rclb
test
inc
cmp
add
sbbb
xor
xor
mov
sbb
xchg
jmp
mov
fmul
pop
jbe
repz
test
mov
cmp
stos
add
fidivl
push
fbld
dec
sti
fs
test
scas
call
pop
pop
sarl
inc
add
mov
mov
mov
sub
outsl
flds
and
and
mov
adc
js
add
adc
pop
arpl
popa
jle
insl
and
and
push
push
xchg
cmp
mov
out
sub
mov
push
mov
shrl
cmpsl
fildll
test
pushf
xor
xchg
test
pop
xor
decl
ja
icebp
sbb
mov
mov
iret
imull
cmp
in
mov
enter
inc
fstl
jno
xchg
xchg
ja
cmc
fidivrs
dec
cmp
dec
scas
lea
xchg
aam
iret
nopl
or
fmuls
ja
or
push
or
daa
mov
lcall
push
mov
test
ss
popa
mov
fisubrl
pop
and
lods
jo
cmpsb
jo
xchg
xchg
lds
adc
mov
mov
jo
divl
jb
sub
popa
or
add
xor
dec
fbstp
sbb
sub
jae
mov
mov
or
mov
loop
xor
icebp
int3
out
stos
stos
insb
jbe
xchg
inc
mov
cmpsb
jle
adc
popa
aas
adc
nop
fucomip
sub
lea
pop
out
int
inc
jmp
jge
arpl
or
int3
lods
arpl
fucomi
mov
mov
pop
sub
lea
test
inc
pop
iret
pushl
ljmp
sub
push
pushl
mov
push
fdivrs
fnsave
xchg
or
jle
mov
movsl
cmpps
mov
outsb
sbb
out
imul
sub
sub
pop
mov
or
push
xor
sub
pop
and
jle
mov
jl
lea
and
popf
or
jecxz
push
dec
imul
hlt
and
xchg
add
xor
fimuls
in
fimuls
mov
sahf
mov
negb
iret
sub
inc
dec
pop
add
movsb
or
and
cltd
jb
mov
imul
xor
mov
cmp
mov
inc
push
mov
fcompl
mov
xor
xor
notl
adc
pop
aas
dec
jmp
loope
jecxz
lret
sub
fstl
test
into
jmp
aam
cltd
sbb
pushf
mov
push
sti
mov
aas
cltd
ja
rorl
inc
xor
imul
xor
push
adc
mov
adc
pop
xchg
sub
aam
xchg
push
mov
or
mov
stc
stos
mov
call
cmp
jmp
bound
xchg
js
mov
sub
and
xor
sbb
adc
fcoms
or
aaa
aaa
sub
cwtl
push
movsl
stos
sub
filds
test
icebp
push
add
out
pop
incb
sbb
sbb
test
stos
adc
mov
repz
lea
call
movsl
jne
int3
jae
out
or
cmp
shlb
mov
es
ret
mov
inc
pop
sbb
pop
subb
xchg
adc
mov
mov
push
sbb
fmuls
bound
ss
xchg
inc
xchg
ds
mov
daa
and
add
repnz
mov
dec
ret
icebp
jne
into
sahf
sub
mov
jnp
xlat
mov
loope
fildl
lret
adc
jl
mov
pop
pop
aam
adc
or
cwtl
and
insl
movsl
movsl
and
xchg
cli
cmpsb
psadbw
pop
xchg
sub
dec
out
and
dec
pop
imul
or
insl
nop
mov
cmp
lds
scas
pop
and
mov
xor
mov
push
xor
stos
mov
adc
gs
pop
enter
jle
jg
cs
repnz
mov
repnz
mov
jno
xchg
add
mov
imul
jmp
aaa
fwait
daa
pushf
pop
icebp
loop
jnp
dec
lods
mov
xchg
and
stos
ljmp
xor
add
jg
pop
mov
ss
icebp
pop
sti
mov
xor
pop
adc
scas
pop
stos
push
pop
jns
enter
push
out
xor
inc
leave
push
xor
out
mov
mov
mov
lods
ficompl
inc
repnz
and
ret
cmp
sti
adc
push
icebp
addr16
push
mov
jno
ja
test
sub
dec
std
inc
push
mov
outsl
stos
mov
lea
sbb
pop
test
sub
xor
lods
out
out
lret
xchg
sub
mov
pop
mov
mov
sbb
pop
xchg
ret
fildl
cs
mov
pop
push
and
jmp
jmp
jae
mov
cmpsl
popf
mov
clc
das
jl
cmpl
mov
pop
loope
xchg
pop
mov
add
mov
cli
imul
rcrl
mov
std
adc
cmp
clc
aam
imul
enter
lock
pop
dec
xchg
xchg
das
cmp
jmp
inc
popa
ret
cmp
popf
or
popa
clc
inc
cmp
xchg
push
cld
dec
xchg
pop
jle
and
dec
cmp
mov
mov
pop
push
cmpsl
sbb
int3
add
int
frstor
inc
inc
call
lahf
aam
lahf
mov
push
loopne
push
adc
ss
jae
imul
lea
sub
mov
pop
dec
shrb
icebp
bswap
mov
jns
lds
in
pop
faddp
cli
pop
push
shrl
enter
mov
sub
pop
scas
add
daa
sub
mov
push
xchg
adc
or
out
ja
inc
inc
insb
push
aam
jp
stc
push
push
sbb
sbb
notb
sub
stc
and
push
test
cmp
mov
dec
sbb
fdivl
xchg
add
push
jle
mov
es
in
xor
sbbb
les
adc
cmc
in
push
out
xchg
mov
mov
dec
pop
dec
push
push
xchg
mov
dec
sub
push
sar
mov
push
popf
push
fistps
adc
push
addr16
xor
cmp
inc
not
xchg
in
dec
lret
fcom
mov
or
or
mov
lea
outsl
push
or
mov
dec
fmulp
xchg
or
inc
jl
iret
pop
daa
stos
mov
pop
lret
push
lea
sbb
repnz
mov
rorl
je
pop
nop
adc
mov
ret
pop
pop
cmp
inc
xchg
xchg
xchg
mov
int3
dec
adc
mov
test
fstl
jns
test
das
pop
insb
add
dec
pop
in
cmp
push
std
or
and
add
push
test
cmp
sti
mov
sub
add
jp
mov
pop
mov
lret
imul
mov
dec
xchg
ja
bound
mov
dec
loop
ljmp
pop
push
inc
hlt
movsl
mov
dec
lret
pop
in
push
sti
mov
pop
cwtl
jae
xchg
pop
sub
push
sti
mov
into
icebp
mov
mov
fisubrl
dec
pop
cmp
ja
cs
cmp
mov
adc
pop
or
daa
out
push
sbb
push
pop
je
add
nopl
push
mov
jmp
xchg
stc
mov
dec
xchg
mov
jecxz
ja
lahf
int3
mov
cmp
inc
and
mov
loopne
pop
std
out
icebp
repz
add
add
cmp
lea
fs
xor
leave
pushf
mov
insl
adc
ss
icebp
pop
inc
leave
ds
or
repz
inc
pop
ljmp
xor
mov
sbb
adc
fisubs
mov
out
sahf
ds
mov
int3
inc
fdivr
adc
push
cld
cmpsl
scas
mov
add
shll
call
sbb
mov
adc
testb
and
inc
dec
mov
test
sbb
xchg
aam
mov
int3
mov
repnz
sub
pop
jp
aas
popf
mov
mov
cmp
and
cwtl
loope
jae
xchg
mov
rcr
test
push
push
sti
bound
push
out
dec
js
arpl
xchg
aam
dec
xchg
xor
mov
inc
in
ficompl
outsb
cld
sub
jge
hlt
mov
sbbb
or
leave
rcrl
cwtl
mov
pushf
hlt
jge
sub
pop
test
loope
dec
xchg
push
mov
push
dec
pop
dec
xlat
xchg
test
daa
pop
lods
in
sar
add
add
cmp
add
mov
rorl
pop
inc
xchg
cmpsl
out
mov
mov
mov
mov
ljmp
xchg
sub
clc
into
adc
push
cmp
add
pop
lods
jnp
fs
repz
push
sub
mov
mov
mov
enter
cmp
inc
and
cmpsl
les
or
out
imul
jecxz
lods
dec
push
dec
pop
dec
mov
xor
cld
push
cmpl
push
mov
cwtl
mov
lock
aam
adc
subl
xchg
mov
dec
das
pop
int3
jle
push
dec
inc
stos
xchg
cmpl
aam
int
push
add
push
fwait
mov
sub
out
popa
pminsw
es
fiaddl
movb
mov
pushf
sahf
into
add
xor
sbb
cltd
pop
mov
ds
lds
out
movsb
loopne
mov
adc
loop
cmpsl
jecxz
sub
test
inc
pop
lock
mov
xchg
push
mov
mov
adc
pop
icebp
mov
inc
loopne
adc
das
push
rcrb
out
in
xlat
inc
xchg
xor
mov
js
push
mov
pop
jae
sbb
cmpsl
and
jmp
sarl
dec
pop
sub
out
or
out
jl
rclb
ss
lahf
mov
mov
pop
add
popf
push
push
repnz
scas
iret
xchg
sbb
test
enter
jns
cmp
sub
jg
lret
lds
clc
xchg
sub
mov
mov
push
ret
pop
dec
iret
sbb
call
adc
adc
mov
xchg
sbb
jge
xor
push
xchg
pushf
rcrb
xchg
and
push
mov
jge
inc
dec
jecxz
or
sbb
sub
push
clc
pop
lods
xchg
xor
scas
push
xchg
adc
iret
jl
sbb
sahf
outsl
mov
cmpsb
or
cmp
adc
and
aad
mov
leavew
lods
repz
sbb
xor
addr16
xor
scas
into
add
into
xchg
int
pop
and
cs
mov
stos
mov
popf
jg
mov
gs
sbb
fs
jl
bnd
push
sahf
fcomp
scas
xchg
scas
ret
arpl
add
mov
mov
mov
xor
push
adc
dec
es
adc
or
cmp
push
push
jns
inc
test
imul
mov
dec
adc
daa
or
jbe
sbb
sbb
mov
mov
daa
inc
repnz
xlat
lods
shr
push
test
movsl
fdivrl
mov
outsb
adc
scas
fldl
into
in
add
out
pop
mov
movsw
inc
stc
leave
cmp
jbe,pn
mov
jno
dec
add
pop
test
jecxz
mov
loop
push
cmp
xlat
lds
rcll
cmp
movsb
cs
push
movsl
lea
jae
xor
leave
outsl
adc
push
jp
hlt
pop
pop
call
in
into
add
inc
fmul
out
push
mov
stc
daa
mov
cmp
mov
pop
lret
das
imul
stc
sbb
data16
jbe
jo
dec
push
dec
aad
or
arpl
fists
insl
outsl
shrl
outsb
movups
push
sub
faddl
pop
pop
sti
mov
add
loop
jp
lods
sbb
jl
and
cmpsb
inc
fs
sarb
jae
dec
cltd
sub
fcompl
inc
mov
sbb
divb
stos
out
scas
icebp
add
xorb
lahf
dec
inc
loope
subl
sarb
dec
sbb
idivl
popa
sbb
push
sbb
push
pop
aaa
outsb
jne
orb
dec
dec
stos
imul
popa
arpl
mov
insl
pop
jno
in
and
aaa
xor
cmp
inc
add
lret
pushf
cmpl
inc
movsb
std
iret
movsb
rsm
lahf
pusha
lcall
into
add
imul
nop
daa
subb
inc
add
orb
test
sbb
sbb
mov
cld
clc
aas
dec
lret
lods
sub
mov
loope
decl
cmpsb
adc
data16
add
dec
cld
push
xchg
stos
cltd
mov
loope
fidivrs
nop
xchg
cmpsl
js
data16
loope
out
sub
sub
or
add
mov
sbb
cmp
fcoml
mull
cltd
scas
push
or
pushf
mov
xchg
cmp
and
push
mov
ss
cltd
fs
sub
inc
aad
sub
jnp
mov
pop
outsb
rcr
sub
cs
jecxz
adc
xor
aaa
arpl
cli
out
scas
ss
mov
mov
je
aaa
dec
and
cmc
scas
fimuls
enter
xchg
pop
and
iret
cs
sahf
bound
xchg
lds
xchg
inc
mov
push
sahf
js
adc
bnd
rorb
mov
xor
cmpsb
ret
pop
xor
test
and
xor
xchg
sbb
mov
mov
fistpll
int
fisubrs
add
and
cmp
push
sub
jo
push
and
mov
es
push
jae
sahf
xchg
lods
add
ss
or
jo
iret
cmpsb
outsb
xor
pusha
rclb
sbb
lea
or
jl
bound
sahf
jae
xor
fstps
sbb
xor
sbb
mov
call
addr16
aad
sub
xorb
loope
xchg
add
subb
test
sbb
xchg
icebp
pushf
bound
cmc
inc
mov
movsb
mov
mov
and
or
xchg
movb
mov
push
idiv
push
out
xchg
jmp
ljmp
gs
dec
jne
je
fucom
add
lods
fninit
add
mov
test
push
add
lds
std
and
pop
fsubr
test
adc
jae
int3
sti
xchg
or
push
mov
mov
sub
mov
js
int3
sti
aas
popf
sub
sbb
or
adc
mov
xchg
xor
xchg
cwtl
xchg
daa
pop
cmpsl
fs
mov
clc
cmp
sub
pop
adc
fmuls
jp
inc
aaa
aad
ficomps
push
stc
xchg
mov
push
bound
push
arpl
sbb
pop
or
loop
jge
fidivrl
daa
dec
stos
push
int3
pop
adc
lods
movsb
and
clc
call
cmc
inc
lock
ret
mov
subl
cli
data16
or
lret
cmc
adc
lret
lret
lret
std
push
dec
fisubrs
cmpsb
pushf
and
into
fldt
inc
sti
divl
push
add
jb
or
mov
incl
aad
out
push
ror
fsts
sbb
jo
pop
sbb
sub
mov
adc
dec
mov
inc
lcall
enter
fisttpl
inc
mov
lret
lea
shlb
aad
lock
movsl
mov
or
aaa
sahf
pop
lret
push
mov
mov
dec
pop
inc
add
cmp
dec
jns
popf
mov
hlt
in
call
ret
test
mov
in
mov
dec
jbe
xor
rcrb
ss
stos
jle
inc
dec
dec
push
std
add
daa
cwtl
sbb
xchg
and
inc
ficomps
jmp
aas
push
ds
sti
mov
mov
xchg
sub
out
mov
vmread
mov
mov
push
mov
or
pop
in
adc
cli
addr16
sbb
jle
outsl
stc
pop
mov
mov
pusha
inc
or
sti
mov
lock
dec
lea
adc
xor
test
iret
xchg
rorb
push
adc
push
nop
sbb
mov
mov
xchg
xor
xchg
cvttps2pi
mov
scas
jne
leave
cmp
scas
lods
and
xchg
xchg
add
jg
aam
xchg
or
imul
xchg
cmp
sub
lock
xlat
int3
aas
push
sbb
aad
sbb
test
pushl
xchg
ds
xor
adc
jmp
loop
push
insb
icebp
mov
sbbl
adc
lret
insl
pop
hlt
xor
jmp
push
repnz
add
push
sub
repnz
dec
repnz
xchg
mov
jns
lock
sarl
jle
sub
push
cmp
or
push
roll
out
rorb
lcall
push
mov
mov
shr
sub
ret
and
aas
mov
cmp
sbb
add
or
mov
mov
inc
jge
push
cmp
jne
stos
ss
sarb
loope
punpcklbw
negb
pop
sbb
mov
mov
das
xor
push
data16
and
insl
push
test
ss
repz
add
data16
lock
hlt
jne
dec
mov
inc
sbbb
xor
push
push
cmp
cmp
xchg
insb
adc
or
and
xchg
sbb
adc
lock
inc
loop
or
test
aad
flds
and
test
jae
mov
xor
xor
xchg
lods
push
xchg
mov
cmp
cld
dec
test
xchg
add
repz
out
sarl
dec
mov
mov
xor
inc
mov
push
jmp
dec
lret
mov
pop
jecxz
in
out
and
sub
and
and
jne
push
fsubs
fsubs
fsts
in
dec
loopne
hlt
pop
push
mov
imul
xor
mov
idivb
push
stc
gs
mov
cld
xchg
repz
jp
notl
jo
cmpsl
xor
xchg
push
test
imul
sar
sbb
jo
loope
mull
mov
jo
jmp
lret
xor
cmc
ror
ss
and
outsl
js
js
sub
rorb
pop
push
sahf
xor
push
subl
jb
fcmovbe
dec
nop
je
sbb
mov
lret
xlat
xchg
cmp
mov
in
jl
add
lcall
and
cltd
out
fwait
adc
sbb
shl
xchg
xor
and
jno
outsl
ror
int
or
inc
mov
mov
das
lods
lods
faddl
pop
sti
rorb
scas
repz
push
and
push
and
sahf
gs
cltd
xchg
jno
push
out
push
xor
jg
test
adc
jl
in
adc
inc
xlat
loopne
pop
sub
inc
jle
inc
push
out
test
sbb
pusha
mov
jle
fxch
pop
and
icebp
pop
dec
cli
ss
jmp
xor
stos
xor
or
push
pop
lods
pop
cld
push
movsb
bound
xchg
jne
mov
cmc
outsl
push
call
repz
add
adc
les
or
das
mov
repnz
xchg
testb
pop
aad
adc
sbb
xor
jae
mov
inc
addr16
add
mov
cmpsb
add
adc
add
arpl
cmp
push
xchg
xor
add
mov
dec
popf
mov
mov
dec
fs
xor
adc
aad
ret
jb
in
xor
dec
int3
std
xlat
pop
pop
movsb
clc
sbb
cmp
push
popa
sti
ret
shr
sahf
dec
out
repnz
pop
loope
in
in
and
test
mov
int3
xchg
shll
jecxz
xchg
cmp
cmpl
stc
inc
leave
cltd
ficomps
movsl
xchg
gs
adc
push
in
cmc
and
add
je
stos
pop
xchg
jnp
mov
jp
add
jo
jecxz
adc
add
inc
arpl
push
in
mov
loope
loop
lcall
mov
sbb
or
xchg
sbb
testl
inc
mov
and
mov
and
je
hlt
jp
jp
xor
mov
out
mov
and
push
jl
test
fsubl
add
add
out
xor
fistl
xbegin
lea
pop
out
clc
call
mov
cmp
cmp
dec
add
lock
pop
gs
mov
stos
mov
outsl
xchg
ret
daa
in
cli
fimuls
sahf
fnstenv
sub
and
mov
cmp
lods
mov
and
sbb
jle
mov
and
inc
cltd
inc
enter
popf
outsb
clc
lock
notb
int
adc
and
adc
mov
es
jno
fs
pop
jp
jmp
dec
test
pop
push
inc
xchg
sub
fwait
movsl
lods
jp
and
aaa
sar
aas
push
jmp
movb
xor
sub
jne
mov
jmp
adc
pop
in
push
je
push
pop
movsl
mov
mov
xchg
or
push
mov
pop
inc
inc
mov
cmp
les
add
ret
sbb
xlat
aam
push
mov
dec
adc
push
in
test
pop
cltd
clc
or
xor
sub
jnp
adc
jno
add
sub
adc
sbb
ficomps
jbe
xchg
push
call
ljmp
mov
ror
pop
mov
adc
adc
sub
lcall
into
or
push
xchg
inc
add
jl
or
test
ret
cmp
mov
dec
into
pop
dec
xchg
push
dec
and
mov
clc
pusha
adc
ljmp
into
les
test
lock
out
rorl
decb
pusha
shl
pop
repz
lret
sbb
rcl
out
sub
pop
xor
outsb
xor
ret
or
shl
dec
inc
pop
xchg
sbb
mov
daa
sbb
mov
pop
and
not
shll
jno
jmp
lods
pop
into
std
orb
mov
lods
mov
sub
mov
jo
call
pop
adc
ds
inc
inc
xchg
add
fisubrs
lahf
test
imul
mov
lds
jp
lds
std
xchg
sbb
adc
cmpsl
xchg
enter
push
enter
mov
fs
xchg
idivb
idivl
das
or
insb
dec
popa
cmc
push
or
sbb
pushw
or
aaa
call
mov
mov
int
stos
pop
jg
fildll
mov
paddusb
mov
mov
xor
popf
movsb
xor
cmp
jle
pop
xchg
call
or
xor
aad
aaa
outsl
dec
jne
and
mov
add
fadd
aaa
and
and
or
inc
xor
mov
add
push
pop
sub
mov
pop
xor
scas
loope
jne
push
lahf
bound
or
push
or
inc
xchg
adc
fildll
std
imulb
dec
aaa
pop
or
jbe
fcomps
or
rcr
pop
addb
mov
je
xchg
pushf
push
stc
jp
lods
test
fmuls
mov
rcrb
xchg
pop
fwait
roll
aad
fwait
xchg
fs
addr16
popf
xor
add
pusha
out
leave
roll
add
jne
adc
push
push
mov
sub
sarl
mov
sub
mov
inc
test
push
sub
stc
cs
adc
dec
and
mov
mov
in
dec
xchg
pop
adc
ljmp
xor
leave
pop
pop
fnstenv
mov
or
ficoms
andl
and
mov
mov
xor
ret
xchg
adc
adc
inc
cmp
out
mov
test
xchg
mov
mov
ljmp
aaa
popa
arpl
or
mov
and
es
repz
and
xlat
mov
pop
dec
push
clc
mov
sub
decl
aad
pop
cs
int
pop
stos
and
add
xlat
xor
test
cmp
fwait
iret
jnp
sqrtps
mov
les
dec
jmp
lahf
jle
dec
mov
clc
xor
mov
nop
inc
cmp
vpsrlq
mov
nop
or
xchg
jb
fcoml
sub
imul
mov
leave
or
push
jns
and
sub
sarb
lods
ret
stc
or
imul
add
pop
fcoms
inc
adc
lret
adc
push
add
push
test
xor
lds
xchg
sub
hlt
sbb
test
mov
cmp
enter
push
jmp
pushf
sahf
lods
jae
sub
push
push
fsubs
mov
inc
in
sub
bts
dec
mov
or
add
push
das
xchg
inc
add
cmc
scas
fcmovb
sub
dec
lahf
mov
add
inc
pop
rcll
push
cmp
rorb
dec
mov
xorl
fisubrs
add
lret
xor
shlb
sbb
outsl
repz
in
lea
jns
lret
rep
push
mov
add
rcl
int
pop
cwtl
cmpsb
dec
mov
les
push
fcomps
cmpsl
into
andl
pop
shlb
sub
enter
les
pop
sbb
js
pusha
cwtl
mov
cmp
sti
aam
sbb
mov
inc
cs
xchg
dec
lcall
adc
push
jle
mov
gs
ret
jmp
iret
stos
dec
jo
and
andl
sub
pop
jae
jae
std
or
and
jp
xchg
pop
aaa
ret
outsb
jno
cltd
movsl
pop
mov
leave
mov
adc
or
loopne
aas
jmp
mov
or
and
out
inc
or
xchg
imul
lret
dec
mov
push
add
test
lock
dec
jns
mov
les
sbb
xor
mov
add
inc
jae
mov
movsb
mov
or
or
add
cmp
cmp
xchg
imul
add
pop
dec
mov
mov
jmp
xchg
cmp
xchg
pop
fimull
jae
mov
aam
fwait
adc
jnp
jo
stc
sbb
outsb
bound
lcall
inc
movsl
xchg
lret
mov
push
fwait
test
sbb
lret
dec
aam
jbe
mov
jl
ja
sub
sbb
mov
stc
into
cmp
pop
push
mov
dec
xchg
adc
insb
loop
iret
pop
xchg
inc
add
cli
insb
xor
pop
aaa
loopne
repnz
jp
mov
test
pop
loop
enter
jmp
mov
test
test
push
sub
out
xor
cmpsb
lods
jns
lret
loopne,pn
mov
jne
and
test
adc
cvtdq2ps
add
sub
hlt
mov
enter
push
lods
push
adc
js
and
mov
pop
push
mov
lods
out
sub
xchg
iret
cmp
sbb
ret
in
in
adc
dec
inc
xor
scas
lret
mov
popa
lret
pop
aad
push
cmpsl
jmp
es
lcall
mov
cli
jo
xchg
in
in
xchg
fsubrl
gs
xchg
rcll
outsb
test
sub
sbb
insl
xchg
pop
cmpsl
pop
mov
mov
jle
sar
out
inc
xchg
fidivrs
and
sbb
js
ss
push
fiaddl
std
test
bound
mov
cltd
push
loope
in
dec
add
sbb
push
rclb
rolb
repnz
jg
sub
adc
adc
stc
pop
in
pop
push
xor
fnstcw
pop
xchg
sbb
sti
ret
out
or
outsb
mov
loop
xchg
leave
cmp
inc
aaa
adc
adc
sbb
jmp
mov
jae
sbb
ljmp
sahf
jmp
cmp
test
and
hlt
cwtl
mov
pop
fisubrs
or
inc
push
mov
push
shll
pusha
scas
mov
lret
ljmp
inc
jecxz
cltd
push
fs
sub
adc
mov
insl
sbb
imul
imul
int
stos
ret
xchg
pop
mov
or
mov
pop
data16
fistps
add
push
xorl
xchg
sub
loope
push
rorb
fnsave
jb
inc
addr16
adc
sub
cwtl
mov
jecxz
xlat
repz
add
clc
cmp
mov
adc
fimuls
jno
sbb
jbe
mov
jg
jle
adc
jg
negb
loopne
mov
jge
nop
xchg
and
push
mov
lods
or
dec
aad
enter
popf
sysexit
jp
and
ret
cmp
pop
adc
inc
jnp
int3
mov
outsl
mov
pop
test
jns
sahf
cs
call
mov
adc
dec
sbb
pop
bound
loop
mov
and
xor
rcl
cmp
jae
dec
xor
jp
insb
cmc
sbb
and
push
sub
data16
sahf
mov
mov
add
std
push
fdiv
iret
fnstenv
and
or
jb
xchg
adc
fs
mov
ljmp
mov
mov
aas
in
pop
mov
pop
pop
xchg
push
push
in
cmp
push
jge
lcall
out
orb
ljmp
mov
mov
les
loope
adc
in
int3
jb
add
roll
pop
roll
aad
dec
loop
in
andps
loop
and
cmp
push
inc
mov
pop
push
repz
loopne
int3
jno
and
and
xchg
sub
pusha
mov
std
addr16
sbb
ret
pop
jp
mov
xchg
mov
sub
push
mov
ljmp
mov
sub
jg
adc
jl
push
in
push
gs
jne
mov
loope
jp
fisttpll
or
mov
outsl
out
imul
scas
pushf
pop
inc
lods
sbb
jge
mov
loope
ret
dec
ret
sub
push
or
pusha
test
ret
push
pusha
pop
ja
or
or
xlat
imul
in
ljmp
call
xchg
sbb
aaa
add
je
aad
cmpb
mov
xchg
fimull
adc
push
outsb
pop
xchg
xchg
scas
cld
cld
xchg
and
js
dec
mov
lds
and
lds
cmc
fnstenv
cmpsb
add
cmp
call
lods
pushf
hlt
aas
xor
das
xchg
hlt
test
sub
aad
mov
xchg
test
and
out
sbb
test
pop
or
adc
out
sbb
jl
fldcw
popf
jecxz
mov
lcall
lods
xchg
aaa
ror
std
dec
data16
insb
ret
adc
mov
ret
movl
in
enter
lds
mov
orb
lods
cmp
leave
jmp
or
lods
mov
mov
push
push
cld
ret
sarl
ret
and
xchg
push
push
inc
or
push
js
push
scas
leave
scas
shrl
std
sub
or
inc
mov
jge
push
pop
rorb
xchg
call
idivl
and
dec
pop
xchg
js
push
mov
mov
cli
es
fdivrs
push
xchg
fwait
jecxz
adcb
dec
cmp
cmp
pop
in
repz
andl
pop
mov
popa
lds
lret
and
call
fdivrl
mov
jae
das
jle
lahf
mov
leave
lods
or
into
cmp
jg
idivb
cmp
pusha
cwtl
pushf
fisttpll
mov
mov
aaa
and
imul
out
adcb
and
push
cmp
mov
inc
inc
or
insb
inc
jp
ficoml
mov
out
xchg
push
and
mov
cmp
int3
mov
push
xchg
test
fisubrl
insl
icebp
mov
shrd
xlat
xor
pop
ja
mov
or
test
cwtl
aaa
fldt
lea
pop
push
sbb
sahf
mov
popf
int
mov
ret
pop
out
movsl
pop
cmpsl
scas
aad
mov
cmpb
mov
es
hlt
mov
add
notb
lock
das
adc
cmpsl
cwtl
lldt
fsubrp
lret
pop
add
rdseed
dec
mov
fnstenv
repnz
mov
mov
push
nop
add
rcrl
xor
sub
cmp
fwait
xchg
psubb
ret
jno
or
sti
fsts
push
push
xchg
out
xlat
lods
lds
int3
cmpsb
rcrl
sahf
pop
adc
inc
pop
lahf
jns
pop
popf
mov
mov
nop
pop
dec
in
sub
sbb
repnz
ret
or
cmc
mov
add
cld
sbb
push
mov
jae
pushf
mov
push
ret
ja
and
dec
add
es
cli
lret
cwtl
les
aad
xor
mov
out
outsl
dec
or
lret
adc
jb
mov
cmp
xor
jp
xchg
stc
mov
mov
inc
xchg
daa
xor
lods
shrl
add
adc
cltd
or
stos
mov
cs
and
xor
imul
inc
adc
neg
and
jge
push
xlat
cwtl
stos
inc
and
sub
daa
fsubrp
gs
mov
xchg
pushf
jle
daa
cli
rcl
scas
push
mov
addr16
inc
test
cld
mov
mov
sub
sub
dec
adc
add
sahf
cmp
cmp
sub
out
or
repnz
movsl
popa
shlb
or
push
sub
mov
ja
adc
mov
cmp
std
int3
jo
mov
push
cmpsb
or
lods
int3
dec
pop
lds
out
cs
mov
push
cli
xor
ds
int3
pop
jb
xor
mov
or
lods
push
xchg
xchg
inc
lret
pop
ss
loope
cwtl
pushf
arpl
pop
out
pop
fmuls
mov
icebp
mov
mov
jns
add
and
add
scas
gs
sbb
insb
repnz
mov
sub
outsb
mov
fistpl
ret
push
xor
sbb
fistpl
mov
movsl
inc
mov
cmpsb
in
add
jmp
mov
ret
dec
je
ffree
jae
insb
fidivs
pop
cmpsl
lret
cmp
push
movsl
adc
notl
in
add
sub
daa
sbb
push
push
ret
mov
mov
insb
inc
adc
sahf
mov
test
pop
inc
xchg
or
push
dec
pop
add
pop
mov
lahf
pop
test
leave
stos
jb
pop
sub
adc
gs
mov
sti
xchg
inc
jmp
test
add
adc
pusha
movsb
lock
movsl
das
shlb
out
inc
adc
push
ja
insl
or
mov
repnz
cmpl
cmp
rdtsc
aaa
test
jecxz
xchg
test
cmp
insl
push
mov
or
daa
lahf
adc
xchg
sub
jecxz
fwait
out
out
sub
adc
adc
lods
inc
stos
pushf
xchg
sub
jle
jns
fidivl
test
mov
cmp
pushf
pop
jge
pushf
push
xor
pop
pushf
adc
loop
add
cmc
addr16
sbb
mov
sbbl
jl
pop
hlt
mov
xchg
jle
add
mov
cld
fisubl
xchg
movsb
sbb
lcall
push
sti
dec
cmc
mov
into
movsl
xchg
mov
add
rclb
cmp
ljmp
jns
je
hlt
sub
add
out
sub
adc
cmp
lds
sbb
aas
mov
iret
and
repz
dec
scas
ret
mov
xchg
lahf
pusha
data16
test
mov
and
bound
xchg
mov
popf
enter
es
jmp
adc
pop
inc
loopne
aad
into
in
mov
fcmove
xor
popf
dec
push
daa
loope
dec
lods
push
fcoms
pop
mov
rorb
stos
idivb
xor
push
repz
outsb
stc
out
push
inc
ljmp
and
test
and
push
out
jmp
mov
pop
or
call
out
test
shl
sbb
subb
push
sbb
test
outsb
inc
push
mov
sub
adc
ret
pop
in
out
out
pop
pop
cld
int
popa
pushf
sbb
ret
pop
lods
mov
inc
xor
inc
sbb
add
xor
in
inc
adcb
out
sti
fcmovne
out
les
adc
lods
fistps
jo
pop
mov
xchg
inc
scas
mov
push
sub
inc
fwait
jne
mov
stc
ljmp
repnz
fcompl
jns
mov
cmc
mov
dec
insl
xor
shr
fcom
shlb
shlb
adc
call
lcall
xlat
insb
int
out
inc
repnz
popf
or
push
sub
stc
ficompl
aam
in
dec
fwait
ss
icebp
and
ljmp
mov
in
jnp
mov
adc
adc
add
cmp
call
int
loop
aaa
xchg
add
shl
xchg
fidivrs
cwtl
jg
and
cs
popf
xchg
mov
aaa
scas
ret
fisubl
sarb
fmuls
sub
je
stos
outsb
adc
andl
scas
push
scas
and
push
sub
ret
push
mov
inc
or
xor
mov
xor
movsb
loope
sub
out
jnp
inc
mov
gs
les
mov
and
shl
jg
aad
iret
fwait
adcb
fiaddl
cld
or
jg,pn
pushf
lret
add
inc
stos
add
inc
cmp
lahf
xchg
lret
mov
cmpsb
outsl
fwait
ret
pop
pop
jle
pop
or
shl
jecxz
inc
icebp
cwtl
mov
rcrl
fstps
fstpt
in
add
cli
imul
imul
cmpsl
xlat
jmp
icebp
xor
dec
sahf
pop
sbb
mov
mov
dec
jbe
adc
jle
in
lds
fstpt
sub
or
int
out
insl
inc
lret
xchg
xor
movsl
test
xor
xchg
push
pop
mov
ret
lahf
std
mov
pushf
and
fstpt
push
ljmp
hlt
movsb
push
mov
sarb
ss
lret
shl
or
aad
ljmp
jb
jecxz
adc
mov
mov
or
sbbl
add
push
jno
add
repnz
xchg
out
lods
and
rolb
or
mov
sahf
gs
cmp
pushf
adc
sub
unpckhps
out
sbb
push
inc
jns
fs
pushf
stos
add
mov
sbb
out
adc
es
ja
mov
sub
daa
mov
inc
cli
add
xor
mov
rcrb
jb
fiaddl
jle
cli
mov
adc
loop
lahf
ja
xchg
pop
mov
test
mov
mov
ja
dec
movb
jge
xchg
xchg
and
jns,pn
dec
lret
pop
lods
pop
jo
mov
adc
outsl
lret
mov
jmp
sbb
cltd
add
mov
ljmp
call
inc
sti
mov
xchg
adc
push
test
xchg
aam
repnz
out
enter
mov
jne
cmpsb
fxch
adc
push
leave
mov
roll
adc
pop
in
push
mov
bound
lret
out
mov
fcomp
jae
int
pushf
ds
in
outsl
mov
cli
cmp
adc
out
sbb
rol
sub
ret
jmp
fldt
dec
push
push
adc
fs
movb
in
pop
sbb
jmp
fcom
test
call
fistps
mov
das
pop
sarl
push
lcall
loopne
ret
xor
lahf
adc
out
jmp
nop
mov
gs
cmp
cmp
sub
xor
cwtl
or
pop
sbb
jns
xor
idivb
add
cmp
dec
ljmp
jmp
stc
lods
adc
scas
loope
mov
addr16
and
pop
imul
push
and
cltd
in
jo
mov
cmp
aaa
arpl
imul
imul
sub
jmp
push
orb
das
cli
mull
popf
mov
mov
in
inc
lods
pop
jbe
xor
xchg
out
xlat
push
popf
insb
or
lods
mov
cltd
repz
movsl
jae
jae
into
mov
xchg
ss
sub
sub
cmp
jb
cwtl
mov
in
gs
bound
aaa
cld
addr16
int3
dec
cmpsl
xchg
mov
inc
xchg
mov
fimuls
movsl
mov
jg
pushf
aam
dec
and
cmp
ja
dec
bound
xchg
frstor
xorl
sti
cmp
sbb
dec
xchg
out
xor
hlt
adc
daa
repz
push
int3
mov
rorl
and
adc
mov
push
pushf
test
pop
out
cmova
xor
jle
rcll
fdivl
pop
daa
add
cmp
mov
jb
lods
gs
push
mov
and
roll
push
or
dec
fs
xchg
xchg
or
es
xor
rcrl
scas
test
dec
jmp
aad
std
sub
mov
leave
ja
inc
push
stos
scas
cmp
popa
aam
cli
pop
and
mov
xor
aad
mov
adc
sub
test
loop
pop
orl
ja
out
cmp
and
outsl
ret
jg
stos
mov
push
ret
mov
in
das
add
out
les
into
movsb
popf
push
push
stos
xchg
mov
push
push
pop
fiaddl
sub
shl
aam
mov
push
jle
pop
jbe,pt
push
jecxz
inc
sbb
test
stos
ds
nop
test
xor
stos
mov
or
inc
pop
inc
jge
arpl
cmp
negl
xor
xchg
daa
jb
sti
cmp
cmpsl
add
xchg
mov
aad
jg
rcrb
and
in
sub
mov
mov
jl
xchg
push
jbe
out
fwait
dec
sbb
repz
sbb
sets
cwtl
adc
aas
dec
jmp
jge
mov
pushf
ljmp
adc
shrl
mov
cmp
and
sbb
cmp
push
lea
pop
jo
aaa
push
or
cmp
sahf
mov
sub
hlt
iret
ret
lcall
and
add
out
cmp
mov
in
sti
mov
jbe
xor
push
hlt
repnz
xchg
pop
adc
ljmp
out
not
push
data16
fdivrl
mov
xor
pop
pop
inc
sbb
mov
push
fsubrs
cmp
or
pop
cmpsl
fmuls
icebp
test
add
or
inc
pop
mov
and
adc
add
pushf
or
mov
subb
cmp
add
sti
xor
popf
xlat
mov
mov
je
cmc
xor
jl
jecxz,pt
insl
lds
scas
aad
pop
fisttpll
inc
sbb
add
shll
adc
or
pusha
icebp
or
push
divl
fcmovne
or
xchg
or
add
or
fstps
push
andb
sub
add
dec
or
lods
rcl
roll
push
sub
adc
outsb
loope
das
cmpsb
das
ljmp
pop
rcrl
nop
aas
xchg
pop
fs
mov
sbb
test
mov
imul
jmp
xchg
or
frstor
pop
xchg
jb
jbe
orl
ret
sub
lret
pop
jmp
mov
add
repnz
lods
andl
xchg
loop
pop
xchg
loop
in
stos
mov
outsb
cmp
pop
dec
scas
loop
lods
mov
fstl
xor
jb
add
adc
inc
fimull
mov
andl
mov
dec
sub
test
mov
stos
jne
sbb
sub
out
pop
insl
lock
in
or
push
aas
mov
sti
mov
pop
pop
cmp
jp
sbb
cmpsl
ficomps
and
in
pop
ja
outsb
dec
iret
outsb
push
dec
pop
jge
andb
ljmp
inc
stos
ja,pn
adc
push
call
xchg
into
ret
inc
sbb
jg
aam
sarl
sub
clc
ss
repz
cmc
cmpsb
mov
mov
or
sub
xchg
mov
jbe
std
pop
xor
aaa
sub
mov
inc
xor
add
sti
in
cli
mov
cmp
sbb
jmp
das
add
mov
in
and
mov
push
or
inc
pop
dec
jnp
jg
sub
fildl
ss
cmp
inc
inc
std
ficompl
aad
dec
enter
ss
adc
aad
jno
dec
dec
xor
pop
and
mov
cmp
push
call
mov
jo
pop
clc
dec
shl
inc
cmp
test
or
jp
test
adc
inc
aas
pop
lahf
pop
mov
fldt
js
add
psubb
roll
mov
ret
lock
mov
pinsrw
add
aad
jle
enter
addb
lds
mov
push
lret
cwtl
idivl
dec
mov
xor
adc
add
out
adc
adc
fdivrl
cwtl
orl
push
aaa
lea
inc
lcall
insl
iret
mov
das
movsb
jmp
jmp
std
out
cmp
decl
adc
mov
mov
mov
fs
popf
arpl
int3
ljmp
sub
adc
dec
test
xchg
insb
dec
pusha
aaa
sub
mov
jle
fisttpl
ja
aam
fnstcw
int
xchg
push
push
jle
aaa
push
je
hlt
mov
imul
cli
sbb
outsl
js
jg
add
ja
push
clc
int
mov
test
mov
hlt
push
cmp
cs
xchg
adc
in
loop
repnz
add
insb
sbb
decl
out
mov
jae
jb
sbb
jb
arpl
andl
inc
test
adc
cmpsl
mov
sub
ret
test
push
or
sbb
push
jnp
test
mov
sbb
push
test
gs
je
inc
gs
jae
stc
repnz
aad
sahf
dec
fidivs
sbbl
scas
add
mov
pop
fadds
fwait
xchg
sbb
sahf
mov
stos
pop
pusha
or
imul
adc
pop
cmp
sub
push
cld
insl
ror
mov
ss
shll
pop
jbe
sbb
cmp
push
ljmp
jbe
sub
pop
dec
inc
repnz
movsl
mov
sti
dec
cmp
mov
inc
jnp
adc
outsl
jle
lods
scas
addr16
mov
push
push
sub
ja
inc
inc
jno
cmpsl
lret
inc
fstpt
sub
icebp
xchg
pop
pushf
jl
xor
jmp
gs
faddl
push
fs
nop
data16
sub
sbb
roll
dec
jb
andb
push
lods
aad
jns
and
sub
jg,pn
xor
sbb
fnstenv
lahf
lea
repnz
mov
dec
dec
ja
mov
scas
pushf
cli
xchg
insb
notb
sub
cmpsb
and
mov
bound
cmp
adcl
cmp
inc
and
push
pop
sbb
push
aad
icebp
movsb
mov
pushf
mov
in
mov
and
add
push
sub
rol
and
js
add
pushf
and
pusha
sbb
aaa
out
xchg
or
xor
dec
dec
or
xchg
insb
pop
xchg
cmp
or
xor
push
enter
jmp
addb
sti
cmp
out
sbb
inc
mov
pop
mov
jmp
aam
lods
cmp
shll
push
xor
mov
out
pop
sbb
cli
xor
fs
mov
or
test
das
rcl
inc
fisttpll
repnz
adc
fmull
jb
shlb
xor
pusha
mov
shll
mov
xchg
xor
js
push
test
fwait
dec
jp
pop
or
insl
pop
jne
cmp
cmpsb
or
cs
dec
sbb
mov
inc
inc
pop
jno
pop
pop
es
cmp
mov
loope
sti
in
sub
sbb
pop
push
push
mov
cmp
lret
scas
into
cmp
sbb
xchg
cmp
daa
add
push
rcrl
rorl
outsb
bound
mov
or
ja
dec
mov
jb
rcrl
mov
orl
xchg
push
mov
aad
out
shrl
pusha
push
dec
incl
int3
lods
call
arpl
sarl
das
lcall
add
fcoml
in
fidivs
push
outsb
lock
lcall
cmp
in
and
pop
movsb
cmp
loope
jbe
fcmovbe
xchg
outsb
push
sahf
xor
pop
rorl
xor
xor
pop
mov
rcrb
inc
mov
add
pop
icebp
fcomps
lahf
mov
outsl
imul
xchg
cld
push
cmp
shll
jp
xorb
jno
dec
xor
adc
testl
insl
mov
xor
xor
jl
fucomp
adc
out
into
xlat
pop
repz
cmp
and
pop
shrb
pop
inc
add
outsb
jne
ret
inc
sub
inc
ja
lcall
mov
adc
push
or
xlat
push
std
ret
xchg
cmpsb
popa
das
pop
add
pop
in
mov
test
sub
adc
pop
shll
clc
and
mov
sbb
xchg
push
xor
dec
rcrl
xchg
push
ss
adc
iret
enter
lcall
out
add
test
pop
fwait
mov
divl
repnz
sbb
jecxz
push
dec
mov
add
scas
or
xchg
xchg
mov
xor
movsl
sbb
jns
sbb
push
dec
mov
sbb
sub
cmpsb
xchg
and
push
inc
lcall
mov
ds
mov
addr16
dec
stos
cmp
pop
sbb
mov
xor
out
fldt
mov
popf
shlb
out
scas
adc
sub
adc
jmp
cmp
push
push
xor
adc
and
icebp
sbb
mov
and
jl
push
in
stos
pop
repz
outsl
jge
iret
jmp
cvtps2pd
mov
dec
out
push
sbb
cmp
mov
mov
push
shll
movsb
loop
sbb
and
les
lods
and
dec
push
fistpl
je
lcall
jmp
test
jmp
sahf
in
js
or
stos
mov
xchg
out
stc
int
xor
lods
inc
aas
insl
mov
or
mov
adc
imul
out
sub
jne
pop
dec
int3
insl
xchg
fwait
and
dec
pop
add
xchg
add
and
lods
stos
sahf
stos
push
cli
cmpsb
shrl
inc
mov
add
jbe
das
jb
or
xor
cmp
ret
add
pop
cmp
adc
pushf
or
rcr
inc
hlt
jp
inc
pop
lret
inc
je
and
sbb
iret
sbb
add
jmp
ret
mov
icebp
sbb
dec
sub
lret
out
das
not
test
test
testl
vmwrite
push
mov
xor
fsub
jbe
int
cmc
fs
jle
push
mov
loop
xlat
adc
mov
daa
inc
sbb
cli
into
xchg
or
repnz
or
mov
push
pop
out
dec
cmp
inc
mov
sub
in
jge
mov
mov
test
inc
shll
cmp
xor
push
jne
loope
adc
push
sahf
cmp
push
lea
aam
nop
fstps
lds
push
aam
mov
ret
sub
and
cmp
and
push
out
insl
lahf
lret
cmpsl
imul
sub
mov
pop
mov
lret
or
sub
sbb
push
in
sbb
dec
cmpsb
or
inc
push
sub
and
ret
lds
inc
jbe
cmp
std
pop
data16
cli
inc
cltd
lea
addl
mov
jo
dec
cmp
cmp
fcomps
outsb
data16
in
cmp
cld
loope
and
test
js
mov
or
or
outsl
add
xchg
pop
test
dec
test
push
dec
loope
insl
mov
adc
in
jns
inc
out
cmp
push
mov
cli
iret
imul
push
dec
jae
cltd
movsl
xchg
int
xor
je
mov
ljmp
out
cmp
jb
dec
jp
ljmp
sub
cmp
rcll
ret
rorl
fsubs
sbb
jg
lods
or
loop
mov
daa
xor
aad
lods
xchg
xor
pop
incl
cmp
rorb
sub
scas
aad
pop
inc
dec
adc
add
add
outsb
mov
shll
cli
xlat
mov
adc
rcll
mov
ljmp
into
popa
cmpsl
insl
inc
enter
mov
xchg
sub
xor
and
cmp
add
enter
push
pop
out
jo
xor
jp
xchg
ja
aaa
mov
loop
mov
out
fcmovb
imul
pusha
in
addr16
mov
orl
or
cmp
dec
popf
sub
jp
adc
mov
loope
mov
xor
pop
cmp
sahf
add
imul
ficomps
adc
je
xor
pop
test
add
mov
and
or
scas
push
cmpsb
mov
lock
imul
subl
cmc
mov
dec
push
pop
imul
outsb
push
mov
imul
jo
dec
or
or
pop
inc
mov
inc
icebp
push
fstpl
dec
test
sti
jno
sbb
sub
rcll
dec
test
insl
jbe
mov
cmpl
mov
lea
lock
cmp
cli
jae
pop
sbb
xchg
add
test
or
and
daa
inc
xor
cwtl
push
sbb
pop
xchg
ficompl
in
dec
jg
jge
pop
cmp
fnstsw
fisubrs
sbb
xor
adc
jle
and
push
mov
add
das
cwtl
je
xchg
xchg
add
jmp
shr
pop
aaa
sub
repz
jbe
fcmovb
fstps
hlt
xchg
and
lock
pop
cmp
imul
dec
and
aam
sbb
pop
sarb
xor
mov
mov
inc
cmp
enter
xchg
add
test
ja
imul
daa
add
mov
mov
ds
ss
test
pop
lea
insb
daa
lret
aad
scas
fwait
daa
dec
xor
arpl
out
ret
ljmp
jmp
imul
call
data16
pand
je
xchg
mov
mov
bound
call
push
mov
push
loope
iret
add
inc
fcoms
ud1
jecxz
jp
sbb
iret
jae
ss
fistpll
sbb
sbb
pop
dec
inc
test
dec
cwtl
movb
push
in
xchg
lock
push
outsb
mov
sahf
inc
loop
std
outsb
push
push
testb
or
xchg
clc
and
adc
shr
ljmp
scas
xchg
test
out
scas
and
daa
scas
cld
lods
lds
mov
add
ficomps
cmp
test
jbe
mov
xor
jp
mov
mov
dec
cld
sti
jb
jl
push
daa
cwtl
cmp
aaa
les
sub
cmpsl
jmp
clc
mov
mov
jmp
jno
pop
mov
loop
push
push
rol
data16
mov
and
fwait
jp
lahf
in
in
hlt
dec
cmpsb
mov
fisubrs
cmp
adc
out
dec
ljmp
mov
mov
loop
or
sub
cld
jl
lcall
sub
cmp
add
fs
test
fdivrl
int
mov
stc
push
xchg
flds
andb
ja
inc
and
mov
or
ljmp
pop
sarb
ljmp
jp
jb
and
es
clc
jge
test
not
mov
insl
sub
sub
mov
pop
imul
push
cmpsb
or
pop
mov
out
push
fcoms
cltd
fnstenv
fists
push
icebp
push
loop
icebp
imul
pushw
cmp
addr16
fildl
icebp
cmpsb
jnp
push
fwait
ja
jl
hlt
push
popf
fs
mov
imul
push
pushl
and
push
dec
lds
sbb
sbb
cmpsl
sbb
xchg
pop
fcompl
jnp
mov
sub
xor
xor
xchg
outsl
das
adc
mov
mov
mov
add
in
push
pop
sar
sbb
sub
mov
icebp
adc
aas
sahf
ror
repz
test
xlat
loop
ss
sahf
xchg
ljmp
and
inc
fistpl
test
fsubl
sub
stc
in
adc
or
inc
je
cltd
nopl
rclb
cs
nop
mov
je
or
fstp
push
and
addb
lcall
xor
dec
add
mov
cmp
jbe
xchg
fdivr
fs
xor
int3
out
or
ss
or
test
fmul
lods
and
mov
mov
lahf
popa
mov
or
inc
mov
into
mov
enter
loop
mov
aaa
xorl
nop
test
scas
push
sub
xor
xchg
insl
add
and
and
push
or
push
leave
mov
mov
add
call
inc
and
roll
les
insb
in
xor
mov
cmp
hlt
cmp
repnz
jmp
mov
lret
or
ds
xorb
repnz
in
xchg
shrl
mov
aas
ljmp
dec
mov
push
aas
ds
inc
repz
add
leave
inc
and
mov
or
and
xchg
mov
fcmovnu
jno
inc
arpl
mov
push
jge
push
sbb
mov
cltd
jae
mov
sub
pop
dec
je
lahf
mov
orl
insb
xchg
and
std
pop
inc
fldenv
add
sbb
xchg
and
stos
adc
dec
in
inc
gs
sbb
mov
sbbb
lret
mov
cmp
xchg
mov
iret
lcall
int3
jae
fdivrl
xor
into
insl
ljmp
xchg
sbb
jbe
jle
jle
adc
in
add
xorl
popf
dec
out
mov
mov
jg
add
push
add
cwtl
sbb
adc
cmpsb
cld
in
pop
cmp
incb
inc
cmp
int3
jnp
add
repz
dec
not
adc
sub
adc
or
sub
xchg
mov
fmulp
repnz
shl
lds
es
int3
mov
cmpsl
jne
cld
test
das
inc
movb
ja
push
mov
outsl
out
daa
call
jb
out
sbb
popf
cmp
insb
cmp
cmp
xchg
loope
push
cmp
rorl
cmp
jecxz
add
xor
fcmovu
sub
adc
lods
adcb
sbb
sbb
cmpsl
cmp
ret
or
fwait
divl
notl
jecxz
insl
add
cmp
or
std
xorb
mov
arpl
out
jp
sub
add
mov
mov
mov
ja
adcb
push
pop
in
mov
push
les
push
not
shlb
mulb
inc
out
mov
outsb
mov
pop
sub
inc
jno
imul
pop
cmp
inc
ljmp
mov
imul
inc
pop
lock
mov
sbb
aas
call
xchg
sbb
popf
and
dec
aad
jmp
mov
xchg
test
and
scas
fidivl
iret
xor
push
jmp
out
pop
ret
test
or
sar
and
add
and
cmpb
notb
xchg
mov
push
aad
rorb
repz
inc
out
push
lods
ret
shlb
lds
push
jnp
or
inc
dec
dec
xchg
mov
sub
xchg
testl
or
ja
lcall
pop
push
dec
jnp
lret
popf
cwtl
scas
jmp
in
jmp
jl
mov
outsb
mov
fsts
fsubrl
in
mov
jmp
ret
xor
mov
in
cmp
jg
arpl
mov
mov
test
adc
push
mov
movsl
xor
push
iret
xchg
jmp
pop
mov
pop
cli
inc
pop
pop
enter
pop
push
jg
pop
decl
stos
sbb
mov
rolb
in
jle
cld
cltd
popa
xchg
test
mov
cmp
lods
rcrl
sub
daa
enter
icebp
sahf
xor
pop
shrb
loop
clc
mov
bound
mov
mov
std
pusha
cmpsl
inc
mov
loop
cmp
mov
mov
add
iret
cli
shll
shr
pop
inc
test
or
lret
xor
xor
movsl
or
mov
fisubs
xchg
mov
jmp
dec
xchg
inc
rcll
sar
pop
lods
mov
sub
mov
pop
in
xchg
mov
jae
call
mov
fiadds
out
pop
clc
lock
adc
lret
mov
lea
inc
xor
pop
jge
fdivs
pop
lcall
fsubrp
push
in
ljmp
sub
adc
mov
loop
les
mov
addr16
xor
test
and
scas
sbbl
push
call
sbb
lret
mov
jns
fldl
mov
cmp
pop
dec
mov
xchg
xor
inc
jle
movb
test
fucomp
add
cmp
xor
push
dec
push
call
cmp
stc
popl
xchg
sti
in
ss
lret
test
out
cmpsb
leave
dec
dec
in
outsb
in
adc
or
cmpsb
jmp
cmp
xchg
mov
cltd
mov
mov
lcall
les
mov
sub
sub
out
cli
dec
and
vrsqrtss
ficoms
dec
movsl
lret
sti
ljmp
push
mov
push
or
imul
jmp
xor
jecxz
sti
ret
add
adc
fsts
pushf
test
nop
fldt
loope
dec
dec
fcoml
cmp
dec
lods
and
sub
jae
jp
dec
jb
fildll
std
mov
push
mov
jne
das
sbb
dec
lret
jne
cmp
out
pop
ljmp
or
cmp
aas
addr16
daa
add
sarb
je
mov
aad
inc
jge
scas
push
xchg
cmp
xchg
push
pop
cmp
ret
pop
cltd
dec
or
jae
lcall
lds
loop
lret
fsubs
js
aas
lods
enter
xchg
sub
sbb
mov
std
and
scas
cltd
xor
cmp
ret
cmc
aaa
mov
and
rcll
dec
mov
mov
xor
nop
mov
push
and
jle
add
out
mov
icebp
push
lcall
lret
xchg
dec
xchg
xchg
in
or
pop
cmp
cmp
outsl
cltd
jl
in
inc
xchg
ret
aaa
scas
jg
daa
add
call
aam
sbb
inc
aam
test
es
addps
mov
imul
popf
jb
add
outsl
ret
pop
in
mov
cmp
push
jns
xchg
and
pop
push
fisubl
add
movsb
repz
dec
idiv
sti
and
lea
es
lcall
mov
jo
orl
fisubrs
mov
call
push
mov
dec
add
jne
xor
push
mov
leave
push
ds
fidivrl
adc
aad
sub
aaa
insb
xlat
lcall
xchg
aad
xor
bound
or
mov
data16
and
xor
add
cwtl
sti
test
gs
xchg
gs
daa
lahf
call
push
xor
fnstcw
cli
dec
mov
aaa
mov
pop
cmp
int3
rcll
test
dec
ja
sbb
cmpsl
xchg
cmp
daa
push
cwtl
xor
inc
pop
cmpsb
push
pop
repnz
xor
mov
and
pop
push
int
and
lds
in
jmp
imul
hlt
rclb
fcomps
leave
or
test
xchg
je
es
jb
out
mov
jge
lock
ficoms
mov
shl
pushf
mov
mov
ja
notb
fs
fdivrs
outsb
repz
push
jmp
lret
bsf
aaa
test
push
idivl
or
pop
popf
out
jb
loopne
sub
icebp
jae
insl
imul
fisttpl
push
cmc
pushf
fdivs
sub
pop
dec
or
sbb
mov
and
sbb
inc
cli
nop
scas
pop
cltd
pop
lret
xor
je
ss
or
sbb
out
pop
mov
jge
inc
and
mov
test
mov
mov
sbb
shrb
push
jg
dec
testb
stc
xor
hlt
aas
mov
xchg
pop
enter
out
sub
in
testb
daa
iret
mov
sub
and
adc
test
mov
rorl
imul
es
outsb
setp
push
lock
dec
rorl
pusha
dec
les
xchg
out
into
pop
in
jns
sarb
cmp
rcll
add
jb
sbb
das
iret
cwtl
or
cmp
add
add
jp
mov
cmp
jo
pop
xchg
jle
insl
cmp
leave
xchg
rol
sbb
mov
outsl
inc
pop
adc
push
or
jno
jecxz
ss
xor
arpl
ljmp
bound
fbstp
insb
xlat
jle
popl
outsl
mov
push
mov
cmp
pop
popa
or
fs
mov
dec
mov
lahf
cmpsb
stc
push
rclb
mov
push
test
cwtl
outsb
add
or
mov
pop
ret
mov
mov
sub
sbb
xchg
or
xchg
xchg
test
addr16
cs
sub
push
jecxz
and
imul
repz
jge
std
pop
in
and
notl
push
sahf
inc
popf
mov
pusha
jnp
inc
and
inc
das
mov
test
imul
xor
das
inc
fildl
mov
xor
out
dec
lods
xchg
jl
xchg
ss
call
fidivl
icebp
outsl
in
jle
sarl
mov
out
mov
shlb
sbb
xchg
dec
fcoml
popf
pop
sbb
lret
ds
fstl
sbb
dec
add
arpl
and
inc
and
adc
mov
cmp
sub
pusha
inc
sbb
mov
dec
inc
xor
push
pop
pop
andl
lods
js
fwait
cmp
icebp
jnp
push
popf
imul
pop
mov
cmp
dec
sbb
sbb
ljmp
out
lcall
mov
ret
mov
xchg
push
dec
repnz
xor
mov
out
push
cmpsb
pop
lret
mov
add
fdiv
sbb
orl
aam
adc
es
adc
popf
sub
sti
jecxz
mov
lret
dec
mov
dec
int3
int3
fistl
pop
add
pop
or
add
mulb
insl
mov
lret
addb
lret
movsb
xor
dec
inc
cmpsb
pop
or
jge
add
cmpsl
dec
cmpb
js
mov
xchg
fwait
ret
dec
ss
jbe
sbb
es
outsb
outsl
xchg
in
mov
xchg
push
loop
clc
dec
add
fs
mov
xor
sub
sub
pusha
int3
ja
dec
pop
push
jo
push
shll
cmc
loop
in
loope
iret
xor
push
pop
ss
or
dec
ror
fdiv
push
orl
lret
sub
push
sbb
adc
and
lcall
movsb
das
les
adc
dec
int3
lock
push
dec
fcomps
add
stos
std
stc
lea
xor
adc
ja
clc
push
jne
add
mov
cmp
lahf
repnz
cli
sbb
cli
lock
cs
fisttpl
shlb
leave
push
and
push
ffreep
rcl
jp
lods
repz
mov
sub
add
adc
movsb
shl
sub
xchg
xlat
pop
out
cltd
cld
dec
into
and
push
mov
adc
pop
aaa
stos
cmc
xchg
add
add
mov
mov
cli
shll
adc
pusha
adc
imul
iret
sbb
sti
and
mov
out
popa
xor
jg
jg
insb
insb
jo
std
pop
mov
rcrb
test
xchg
jecxz
ret
xchg
inc
scas
leave
stc
cs
cli
inc
mov
mov
jae
jno
mov
fldt
test
aam
cltd
and
cmp
addr16
cli
lea
cltd
test
and
push
outsl
movsb
mov
outsl
je
cli
enter
stc
sbb
inc
mov
mov
repnz
fcoml
pop
sbb
sub
call
lcall
sbb
xor
subb
cli
push
dec
dec
sahf
out
lret
clc
xor
pop
cmp
dec
dec
jne
or
xchg
sahf
movsb
movsb
js
push
js
jp
fs
xor
cmpsb
subl
fldt
cs
dec
lock
adc
aaa
lock
push
pop
xchg
lock
mov
jno
add
jmp
arpl
pop
cmp
xchg
jb
push
add
out
int3
lcall
mov
jmp
sub
xor
dec
movsb
adc
test
xorl
xchg
mov
sahf
push
or
int
adc
gs
sbb
and
test
xor
and
int
or
jmp
out
in
jb
mov
cmp
push
andb
pop
or
pop
adc
mov
daa
adc
pop
mov
jmp
fistl
jnp
stos
pop
jbe
roll
sbb
out
fadds
sbb
outsb
mov
movsb
or
mov
or
adc
xchg
push
push
xor
mov
aam
call
pop
test
mov
xchg
xor
push
sbb
fdivs
pop
mov
xor
ds
subl
cmp
mov
mov
xor
or
dec
push
push
xchg
adc
jb
jecxz
mov
lods
mov
sub
or
sti
hlt
push
xchg
cmpsb
into
mov
sub
cmpsb
jnp
arpl
pop
push
flds
xor
dec
popf
cmp
add
das
jmp
push
loope
pop
xor
sbb
aaa
mov
mov
repnz
jno
push
sbb
repz
sahf
aaa
cmp
pop
hlt
xchg
insb
xor
les
xchg
mov
jnp
subl
cmpsl
mov
pop
fisttpl
int3
ret
xor
movq
xchg
cmpsb
sahf
inc
fisubs
arpl
add
ss
inc
xor
jp
mov
push
dec
fsubrs
loop
sub
mov
xchg
call
pop
out
fsub
adc
sub
sub
xchg
jne
or
icebp
mov
mov
movsb
addr16
mov
xchg
inc
mov
jp
pop
ja
push
fimull
xchg
inc
mov
cmpsb
inc
lcall
out
int
mov
pop
outsb
in
fbstp
mov
mov
lcall
add
mov
push
pop
mov
pop
sbb
adc
jo
mov
in
sbb
xchg
inc
or
lods
cmp
mov
jl
cmc
inc
test
fbld
rcrl
push
movsb
arpl
ds
push
push
mov
push
cmp
fstpl
push
xor
pop
xchg
movl
sub
icebp
daa
lea
fnop
shl
adc
mov
sub
push
stos
jp
pusha
ljmp
xchg
test
sbb
pop
insl
jge
mov
push
in
cmp
sub
negb
mov
cmp
or
and
test
leave
xchg
jo
nop
popa
es
aaa
push
cmp
and
sub
insl
push
test
dec
adc
aas
out
sub
popa
test
or
cld
cmp
pop
and
loop
int3
fcoml
xor
and
std
rcrb
insl
add
daa
push
lret
lods
subps
cmc
pop
lock
jmp
arpl
adc
sbb
cmp
das
rcrl
pop
jle
sub
jge
dec
pop
call
rol
lods
mov
inc
arpl
push
sub
int3
dec
daa
pop
mov
into
xchg
jge
data16
test
pop
rcr
or
mov
or
hlt
add
mov
add
pop
cltd
mov
pop
das
into
dec
addr16
mov
loopne
jg
les
adc
nop
and
imull
pop
or
pop
and
loope
popf
fstpt
lcall
fadd
mov
std
push
lret
out
pop
fucomp
addr16
dec
sahf
push
sbb
pop
push
push
adc
mov
mov
cmp
in
rolb
loop
xchg
es
pop
pop
fsubrl
mov
ss
pop
out
fldenv
xchg
sub
and
fstl
int
sub
lods
dec
pop
dec
mov
in
mov
mov
push
pop
inc
mov
cmp
xor
mov
pusha
cmp
xor
sbb
or
rcrb
add
stos
stos
mov
xor
push
xchg
xor
xor
in
mov
aas
mov
out
outsb
popf
push
jmp
or
fisttpll
xchg
push
push
mov
mov
daa
testl
loope
push
jnp
pushf
sub
fs
stos
xchg
and
int
mov
pop
dec
jge
pop
arpl
gs
adc
jg
xchg
push
sbb
btc
arpl
xlat
lea
adc
xchg
imul
mov
mov
add
push
cltd
call
lret
inc
js
mov
push
outsl
mov
cs
cmp
frstor
test
jb
ficomps
loope
mov
mov
mov
adc
xchg
addr16
adc
pop
mov
sub
pop
dec
jae
pop
iret
orb
add
cli
jle
push
pop
daa
jle
fidivrs
jno
dec
jnp
pop
pop
push
test
xchg
push
push
push
dec
pusha
in
xor
rcrb
xchg
ss
xchg
adc
mov
mov
pop
push
xor
cmp
sub
data16
cltd
mull
xchg
sbb
and
xchg
in
jp
test
cld
scas
or
fistpll
mov
jae
xchg
fstps
out
inc
push
mov
add
test
sbb
cmp
leave
fists
imul
xchg
mov
sti
clc
pop
pushf
loope
and
pop
xor
test
fnsave
mov
aad
dec
cmp
push
cmp
dec
addr16
jb
ret
mov
pop
bound
call
dec
mov
test
dec
mov
cmp
in
xchg
test
push
out
or
cltd
js
sti
push
pop
test
enter
push
cltd
pop
xor
std
mov
cltd
shlb
test
cmpsl
mov
sub
jle
mov
pop
movsl
mov
or
or
cmpsb
shrl
cmpsb
mov
push
and
aaa
add
pop
jg
lahf
repz
mov
add
fnstsw
mov
xor
in
sub
mov
inc
push
mov
mov
rclb
inc
js
pop
enter
sub
push
push
push
nop
xchg
in
scas
sub
sbbb
fcoml
arpl
push
in
jle
xchg
and
cmc
rcll
add
es
inc
fs
shlb
adcl
adc
or
jno
sub
push
std
and
lcall
outsb
push
fnstcw
test
outsl
push
sub
ret
roll
push
mov
fbstp
push
lret
fdivs
push
and
and
add
aas
ljmp
mov
push
push
push
dec
arpl
sub
xchg
test
in
scas
gs
push
push
xchg
gs
sbb
pop
jno
shll
inc
nop
add
leave
out
cmpsb
scas
inc
ucomiss
sub
or
push
ss
jg
call
and
gs
add
or
imul
int
fiaddl
adc
out
push
into
and
mov
cmc
mov
popa
test
les
cmpsl
jge
push
test
sub
adc
and
insl
idivl
sbb
leave
popf
ljmp
movsb
scas
jo
test
ss
fsubrl
lret
mov
adc
xchg
push
or
cld
icebp
xlat
imul
lret
xchg
add
jle
out
test
pop
fistps
insw
lea
lea
add
push
fadd
adc
mov
scas
and
push
jg
and
mov
jnp
mov
inc
movnti
mov
out
stos
pop
dec
aad
xchg
sarl
xor
pop
mulb
scas
in
sbb
dec
sub
clc
add
adcl
and
rol
outsl
lret
adc
das
dec
xorl
test
lock
xor
insl
lret
add
and
mov
imul
dec
push
clc
mov
or
xchg
lcall
xchg
sti
xchg
pop
fdivrp
adc
mov
lret
scas
push
jmp
inc
pop
mov
pop
cmpl
adc
fidivrs
fnstcw
arpl
movsb
sub
movsb
add
push
sub
or
sti
loope
mov
adc
loop
dec
into
sti
outsb
pushf
xchg
lret
fdivrs
inc
fbstp
dec
push
pop
in
lock
jg
lret
or
xor
pop
xchg
shll
mov
repnz
sub
push
repnz
call
jecxz
push
pop
out
or
enter
jne
push
push
mov
rclb
pop
ss
push
pushf
xchg
xchg
decb
dec
mov
test
jne
inc
inc
push
xor
cmp
fisubs
sbb
or
int3
mov
cli
pop
insl
jmp
and
adc
pop
in
pushf
shrl
and
fcmovnb
in
jecxz
push
jnp
and
or
push
push
add
nop
sbb
shlb
out
pushl
fstpt
jne
add
sbb
adc
push
xchg
das
stc
mov
cmp
imul
or
rorb
jnp
aas
out
mov
xor
mov
ret
add
push
inc
aad
jne
aam
movsl
pop
in
int
mov
mov
loope
ja
or
test
pop
inc
repz
pusha
jnp
push
mov
rcrl
push
push
pushf
xor
mov
aas
fwait
xchg
xchg
push
xor
adc
or
shll
gs
dec
or
cmp
icebp
cmp
mov
push
jne
in
mov
cli
hlt
xor
lret
arpl
pop
add
cmpsl
frstor
cmc
cwtl
push
push
out
mov
imull
pop
aas
sarl
arpl
outsb
push
scas
sbb
push
push
push
push
jmp
cwtl
lahf
jmp
push
mov
xchg
cmp
and
fwait
lea
fwait
mov
push
push
push
shlb
and
add
aam
stos
ss
in
shrb
inc
and
aad
ss
pop
mov
fldcw
jns
pop
jp
xchg
pusha
lds
movsl
pop
dec
inc
rclb
xchg
pushf
mov
pop
dec
and
dec
jecxz
fcoms
jmp
outsb
scas
and
cmpsl
aad
jo
mov
push
and
cmp
repz
cli
dec
fwait
divl
pushf
pop
mov
sbb
xchg
jp
mov
xor
popa
sbb
stc
cmpl
xor
rolb
and
cmpsl
add
dec
repz
sbb
int3
leave
xchg
cmp
mov
ljmp
and
xchg
xchg
sarb
insl
fcompl
out
test
out
pop
testl
test
add
xor
adc
ljmp
sub
mov
inc
cmp
mov
and
pop
dec
push
lret
cwtl
dec
call
arpl
mov
gs
push
stos
sub
jae
mov
xlat
int3
mov
out
or
push
mov
imul
repnz
into
or
test
scas
daa
adc
cmpsl
sub
jns
in
jmp
stc
sahf
popf
sub
in
mov
iret
stc
sbb
dec
pop
in
ret
xlat
inc
pop
cltd
aad
mov
xchg
test
lods
xor
push
test
adc
call
fucomp
push
mov
push
xor
cmp
jae
subl
mov
in
std
lods
adc
ret
cmp
and
push
xchg
inc
pop
add
xor
lret
popf
ja
sbb
cld
xchg
sbbl
pusha
add
xchg
out
addr16
mov
lods
outsl
addb
in
test
iret
and
adc
lods
xor
jle
addl
fisttpll
mov
mov
scas
cmp
xchg
es
lods
sbbb
mov
lcall
fs
cmpsl
sbb
mov
xchg
jecxz
jmp
xor
fiadds
sub
inc
cmpsl
mov
sub
xor
mov
rorl
sbb
inc
xor
inc
rcl
adc
pop
push
aad
sub
movsl
dec
add
ficoml
imul
or
mov
scas
push
jne
addl
jne
out
mov
inc
pop
jp
pop
mov
das
scas
or
bound
push
dec
jg
mov
das
in
out
lahf
fldln2
jmp
call
and
adc
fs
xorl
sbb
pop
xor
dec
repz
and
insl
and
fsubrs
mov
push
hlt
mov
xchg
dec
iret
ljmp
sub
or
fcmovnbe
or
arpl
push
add
lret
in
mov
cmpsb
scas
cmp
jne
xlat
dec
adc
scas
inc
divl
push
lea
pop
lods
fldenv
out
test
sbb
sbb
lds
xchg
fsubl
cmp
add
sbb
cmp
fnsave
adc
decl
or
out
sub
xor
mov
hlt
add
or
fsubrl
cmpl
lcall
xchg
repnz
lea
inc
mov
add
enter
daa
and
mov
ljmp
fld
fmul
add
mov
loop
mov
dec
mov
mov
ss
ficomps
xchg
jae
nop
adc
pop
mov
nop
dec
inc
sbbl
xlat
xor
adc
insl
out
add
std
pop
jecxz
cltd
pusha
lock
mov
mov
cmp
mov
push
dec
scas
inc
pop
jo
bnd
vmovq
jg
cmp
pop
or
loop
lret
testl
mov
and
aam
leave
lds
stc
xchg
idivb
dec
aam
sbb
rorb
lods
push
mov
jo
notl
ss
pusha
cmpl
xchg
push
in
test
lea
repz
js
out
cmp
aas
lret
dec
or
fnclex
orb
cltd
imul
loopne
jnp
stc
push
rol
sub
out
push
into
or
xlat
mov
daa
repz
test
stos
mov
test
xor
arpl
sarb
mov
pop
mov
lods
repnz
and
dec
in
xchg
and
xor
sub
shr
das
notl
fwait
int
dec
and
dec
pop
mov
push
cmp
mov
push
imul
or
mov
cld
pop
inc
jns
scas
loopne
xchg
pop
push
ucomiss
sub
mov
fcoms
dec
xor
sub
mov
jb
mov
dec
cmp
jb
or
sub
test
cmc
data16
aaa
inc
mov
inc
call
dec
sbbl
pop
stc
imul
push
pop
add
sub
dec
imul
xchg
fbld
push
nop
xchg
aas
rcrl
inc
les
jbe
adcb
add
lret
cli
sbb
inc
pop
stos
jge
jle
xchg
aad
and
xchg
lret
stos
mov
movsl
rorb
jmp
push
mov
ss
mov
enter
jle
sbb
out
xchg
cmp
test
not
mov
lock
mov
jns
jmp
and
push
in
inc
mov
jecxz
pop
dec
fiadds
xchg
pop
xchg
cmp
dec
xor
cmp
daa
push
scas
call
clc
ret
mov
sub
jp
addr16
pop
mov
jnp
fildl
jmp
adc
mov
cmc
int
push
cmpsb
inc
out
loop
or
push
lods
add
arpl
cltd
leave
cmc
cmp
cs
xchg
idiv
adc
jle
in
push
xlat
xchg
or
xor
mov
cmp
dec
jbe
mov
or
xchg
cmp
in
lods
lret
shll
in
add
subb
popa
dec
push
loope
mov
adc
aas
push
mov
inc
pminub
scas
bound
xchg
bnd
inc
pop
push
test
cltd
mov
sbb
scas
jle
imul
adc
adc
shrl
mov
lret
inc
in
or
sbb
cmp
shrb
xor
mov
push
fnstsw
lahf
pop
popf
outsl
dec
sub
movl
cmp
push
xchg
fnstsw
int
pop
sbb
mov
pop
inc
enter
dec
sbb
xor
mov
fs
stos
or
xorl
jp
mov
daa
cmp
push
xor
cmp
movsb
mov
push
xchg
xchg
add
push
mov
inc
or
dec
sbb
push
jecxz
loope
inc
dec
mov
jl
push
mov
loope
mov
dec
mov
cmc
fs
test
xor
sub
loopne
and
add
cld
inc
repnz
push
fcmovnbe
pop
push
cmp
pop
clc
cld
fmuls
mov
or
mov
addr16
mov
mov
jmp
mov
mov
and
push
xchg
insb
jp
adc
ffree
xchg
loopne
outsb
cld
in
push
mov
jb
xchg
xchg
jecxz
addr16
adc
cmp
lods
pop
fwait
aas
push
ret
push
and
xchg
divb
cmp
leave
inc
jne
inc
push
hlt
cmc
daa
cmp
sub
inc
stos
daa
xchg
insb
mov
inc
adc
je
sub
jns
cwtl
imul
nop
jg
mov
sub
push
imulb
inc
lahf
cmp
xorl
negb
stc
roll
add
into
cmpsb
mov
cmp
inc
sub
test
adc
mov
mov
or
pop
sub
pop
stos
movsl
xor
inc
je
je
in
push
jbe
rcll
jnp
or
jne
add
or
outsb
and
aas
lds
scas
aaa
or
adc
push
inc
cmpsl
int3
or
sti
jnp
js
fisttpl
push
in
pop
sbb
mov
outsl
jae
pop
addl
movsb
inc
pusha
xchg
pushf
pop
fprem
stc
stos
xor
push
mov
ds
add
in
xor
pop
jns
mov
add
dec
xor
fnstenv
dec
adc
sub
jge
enter
push
xchg
aam
insb
cmp
cmp
sub
scas
popa
sti
cmp
call
subb
fmul
or
insb
sub
dec
sub
add
pop
lea
test
imul
adc
or
cmp
push
xchg
mov
cmp
unpcklps
add
cmc
in
and
mov
lods
popa
push
push
mov
mov
and
ds
mov
push
mov
hlt
lods
and
mov
rorb
clc
in
lods
mov
push
or
dec
lahf
mov
test
xor
mov
leave
and
out
hlt
ficomps
pop
jl
sbb
dec
rcrb
jmp
test
in
add
mov
xchg
adc
insb
adc
loop
leave
inc
jge
rorl
into
in
aaa
sbb
out
imull
insl
cs
and
add
mov
and
and
sti
gs
cs
inc
rorl
scas
cli
inc
test
jmp
mov
scas
push
sub
lcall
repnz
subb
cmp
bound
dec
mov
cli
push
cmpsb
and
and
push
div
dec
out
xor
mov
leave
xor
loopne
xchg
loope
xlat
jnp
or
sbb
out
out
fs
cmp
cmpsl
push
test
pop
aam
sahf
movsb
iret
mov
sub
es
mov
cmp
lcall
mov
or
jge
or
dec
xchg
sub
mov
and
xor
mov
sbb
pop
into
imul
aas
imul
inc
jp
adc
lret
fsubrl
call
push
pop
orb
sarb
pop
push
and
add
mov
andb
rcll
mov
arpl
lds
xchg
ficoml
fmulp
sbb
ja
or
clc
test
pushl
xor
sbb
sub
bound
pusha
movsl
sbb
addr16
mov
cmp
orb
push
mov
push
ds
orl
repnz
ja
adc
sarl
jle
push
repz
mov
dec
jno
arpl
jbe
or
aaa
test
add
test
imul
daa
mov
das
addr16
jmp
cmp
in
cmpl
push
cmp
xlat
mov
test
vcvtps2pd
xor
and
and
dec
xchg
loop
lods
mov
imul
xchg
xchg
lcall
mov
ds
jns
loope
adc
leave
or
iret
hlt
test
aad
xor
mov
scas
das
fsubrl
add
and
cmpsl
or
xchg
sub
rcrb
mov
push
ljmp
mov
inc
pop
inc
jge
into
push
ljmp
mov
test
inc
fwait
xchg
xchg
mov
cmc
mov
icebp
mov
pop
mov
jnp
lahf
sbb
iret
jge
stos
and
cwtl
xor
cmp
faddl
fldl2t
mov
mov
imul
cmp
and
push
mov
lods
std
aad
mov
dec
xchg
adc
movsb
cmpsb
sub
jp
test
pop
les
scas
addl
insb
js
jnp
cmc
push
filds
lret
inc
mov
inc
les
sbb
or
mov
jae
stc
xor
movsl
ret
aad
out
add
test
pop
sub
and
cmp
sub
sub
in
mov
mov
push
jmp
or
repnz
aam
and
nop
sub
scas
mov
mov
sub
xor
daa
in
jns
xchg
dec
ja
mov
pop
xchg
sbb
icebp
pop
pop
out
pop
loope
jns
test
xchg
push
dec
cmc
lahf
inc
insl
pop
in
stos
adc
shrl
adc
mov
add
mov
push
fcmovu
adc
cmpsb
stos
fmull
and
loop
adc
nop
xlat
shrl
ret
into
or
mov
jb
imul
rcrl
pop
ror
call
cmp
xchg
mov
mov
sub
jle
cmpsl
int
push
push
repnz
mov
nop
cmp
insb
pop
mov
cmpsl
xchg
push
rorl
and
dec
addb
rcl
sbbb
test
sbb
inc
imul
adc
pop
ret
xor
test
in
jp
adc
inc
jbe
push
sbb
int
lods
add
adc
xor
sbbb
loope
es
push
ret
and
xor
pushf
adc
adc
cmp
jmp
mov
aad
into
int
test
or
pop
pop
dec
cwtl
loop
jb
in
xor
pop
icebp
push
pop
pop
adc
mov
insl
aas
mov
push
sarb
loop
xlat
dec
adc
and
dec
cli
daa
lret
movsb
ja
inc
rcrb
roll
inc
ja
std
les
lahf
cmc
imul
out
pop
xor
lcall
out
mov
push
mov
sub
push
xor
mov
add
xor
fwait
mov
hlt
divl
or
add
xor
fs
add
fwait
int3
pop
cmp
add
mov
adcb
jne
mov
mov
sbb
push
cmc
push
push
in
sbb
out
mov
je
addr16
sarb
imul
inc
roll
jp
sbb
jge
mov
cmp
leave
jle
in
pop
jmp
daa
xor
gs
mov
repz
lods
ret
sti
lahf
es
xchg
orl
push
mov
inc
les
leave
les
adc
fisubl
outsl
or
cmp
and
push
lret
jbe
mov
lds
int3
push
psllq
jmp
mov
sub
fildll
leave
inc
push
push
hlt
push
pop
lea
adc
rorb
sub
ds
insl
dec
pop
imul
mov
popa
addr16
ficoms
push
pop
jae
sbb
mov
xchg
mov
cli
lods
push
or
xorl
xchg
stos
jle
imul
dec
inc
pop
dec
sub
add
ret
sub
sub
fbstp
ss
add
ds
add
enter
mov
dec
int3
sub
adc
cwtl
lods
pop
jb
pop
dec
fidivrl
dec
or
mov
mov
cmp
jg
or
stos
ficomps
es
aam
aas
mov
mov
pop
nopl
sub
test
pop
mov
jp
aaa
fwait
jp
jne
lcall
dec
lcall
cmpb
cmp
inc
cld
loopne
movsb
lahf
push
call
jle
add
test
test
outsl
mov
xchg
adc
movsb
imul
push
loope
sub
and
jo
hlt
repnz
lds
gs
hlt
arpl
add
lret
dec
das
ds
push
jp
outsl
out
ret
cmc
jbe
cltd
push
shl
mov
mov
xchg
lods
mov
test
or
cltd
addr16
mov
mov
shrb
int
xchg
outsl
and
faddl
jo
jae
fmul
or
and
scas
inc
mov
sub
xchg
pusha
xor
aas
cs
ljmp
in
jl
mov
popa
cltd
call
cmp
not
cmpsl
push
loope
cwtl
inc
xor
jecxz
arpl
dec
pop
and
lods
into
and
sbb
xchg
jb
in
cmpsl
mov
int
repz
sub
adc
xchg
sbb
vmwrite
sbb
dec
iret
add
jb
pop
cmovae
sbb
jmp
test
rcrb
hlt
ds
sbb
inc
or
hlt
fadds
ficompl
jecxz
leave
push
leave
cltd
add
mov
pop
nop
cs
mov
ljmp
mov
adc
mov
add
in
outsb
add
sbb
pop
jle
lcall
gs
fisubrl
fcoms
int3
mov
xchg
fs
lret
push
add
jmp
dec
mov
jbe
call
rcrl
xchg
pop
pop
enter
dec
adc
cmpsb
fistpll
in
dec
pop
and
cmpsl
push
push
cmpsb
in
icebp
aas
dec
dec
lds
fcoml
push
sub
and
pop
push
cltd
sbb
mov
ficoms
xchg
cmp
icebp
sbb
xchg
je
out
jb
cmp
sbb
jne
fdecstp
lods
fstl
dec
popa
loope
adc
push
push
dec
pop
addb
aad
lds
fsub
sbbl
in
cld
imul
fidivs
and
lods
decb
xor
dec
jge
mov
fildl
or
xchg
lods
jge
sub
lea
pop
lds
jnp
mov
adc
test
shrl
push
and
mov
loopne
xor
mov
mov
mov
adc
je
mov
cmp
mov
lods
test
sub
stos
test
sub
ffree
mov
pushf
jae
sbb
faddl
in
jb
dec
popa
rcll
mov
jbe
pop
aam
loope
add
flds
ds
cld
mov
iret
push
pop
aam
ds
icebp
mov
inc
pushf
push
fmuls
addr16
insl
lods
inc
movsb
jns
insl
xchg
lret
or
sub
add
insb
mov
sub
mov
inc
pop
xor
sbb
xchg
aad
or
xchg
push
cmp
mov
std
daa
mov
shrl
push
andl
shrl
lahf
jae
rcrb
icebp
repz
add
adc
out
xchg
inc
loop
mov
sar
shrl
jne
das
test
push
sbb
shll
fidivs
adc
jl
pop
dec
push
dec
mov
pop
adc
out
add
pop
cmp
aad
jne
test
mov
or
cmpsl
adc
addr16
sahf
test
in
stos
pushf
imul
xchg
mov
ja
or
cmpsb
cmp
test
jbe
pop
cmp
rcl
and
jecxz
inc
jnp
cmp
test
imul
xchg
push
pushf
sub
iret
mulb
push
lcall
mov
and
add
xor
das
mov
outsb
mov
push
pop
push
inc
movsb
inc
pop
mov
pop
popa
aam
adc
sbb
push
icebp
lods
sbb
dec
mov
inc
inc
sti
push
lret
int3
mov
push
sub
add
and
fcmovu
popf
sarl
cld
jns
and
jl
lods
push
sbb
in
pop
imul
rol
mov
ss
clc
mov
pop
dec
adc
pop
aad
mov
popaw
jb
fsts
jge
lock
ljmp
pop
or
stc
mov
jb
xchg
mov
mov
js
ds
cld
push
loope
push
sarl
cmp
std
pop
pop
std
sub
or
test
xorl
in
and
mov
aad
dec
cs
sbb
mov
or
dec
sbb
insb
daa
and
daa
mov
lcall
and
pop
fnstenv
out
std
bound
test
stos
push
movsb
sub
pop
loop
lods
sbb
pop
inc
mov
test
pop
mov
xor
jmp
xchg
out
add
or
dec
ret
mov
loopne
inc
cwtl
jle
lea
push
rcll
popf
cli
jecxz
stos
sahf
inc
aad
in
aaa
inc
repnz
iret
jmp
mov
cmp
dec
stc
and
clc
xchg
inc
sub
int
adc
xor
sub
test
shll
ja
fnstsw
jne
ljmp
xchg
das
cmp
xor
cmp
test
orl
mov
xchg
loope
outsl
in
xchg
dec
aam
out
inc
subl
adc
ja
gs
cmpsl
push
loope
call
mov
andl
mov
mov
stc
and
xchg
pop
inc
xor
add
or
mov
or
and
lods
es
das
mov
inc
xchg
mov
lret
addb
ror
mov
xchg
sti
jns
imul
cmp
out
sti
loopne
dec
shrl
jle
dec
cmp
icebp
push
sub
imul
pop
adc
ret
inc
js
mov
jle
call
insb
mov
aam
add
insb
mov
lods
std
jbe
pop
add
pop
mov
adc
out
in
mov
cmp
fxch
adc
jnp
gs
in
aad
dec
in
repnz
xlat
sbb
adc
mov
mov
scas
dec
lret
sub
push
mov
mov
jbe
cmp
mov
repnz
lds
in
call
out
fbld
das
aaa
and
dec
mov
dec
pusha
shll
leavew
xchg
sub
jg
popf
outsl
pop
cli
test
push
in
inc
jo
or
in
xor
fisttpl
jl
mov
dec
and
cmp
and
fcom
adc
idivl
popf
dec
repz
shrl
lret
dec
jmp
insb
sub
add
fcom
stos
popa
jno
aad
sub
pop
push
out
xor
push
jp
xchg
mov
popf
test
dec
mov
xor
xchg
fldcw
call
push
je
pop
insl
adc
call
andps
aaa
pop
aam
out
out
sarb
movsb
xor
mov
inc
out
dec
xor
sbb
out
int3
inc
adc
xchg
lcall
mov
shll
dec
in
lret
xor
mov
pop
sub
cmp
test
cld
adc
mov
cmp
dec
test
test
fs
fadds
xchg
lods
cmp
jmp
fmul
push
enter
lcall
and
mov
out
inc
xchg
pop
lea
sub
dec
das
nop
je
in
cmpsb
cmpsl
jae
je
mov
sbb
sub
pop
inc
fwait
mov
fnstsw
xor
mov
and
stc
jo
jg
js
push
outsb
sti
out
xchg
and
cli
jns
pop
sub
dec
xor
out
ds
clc
js
push
and
cld
nop
cmp
fld
mov
xlat
cmc
adc
push
sub
jl
ret
push
shlb
and
dec
push
imul
data16
add
fwait
aad
dec
mov
jp
ds
xchg
fistps
sub
dec
pop
dec
enter
fadd
or
mov
scas
cmp
ds
xor
jo
add
xchg
sub
cmp
lahf
xchg
mov
rcll
repz
cmpsb
out
push
jg
pop
jg
aad
scas
jb
pop
test
mov
cs
and
fcomip
push
adc
push
push
add
movsl
lahf
pop
push
iret
ret
pop
mov
mov
movl
gs
daa
inc
pop
mov
sub
jg
test
add
lock
push
repz
adc
jmp
call
push
push
mov
cmc
int
icebp
mov
adc
jo
stos
adc
sti
mov
imul
lcall
inc
adcb
jp
mov
xchg
lods
dec
call
imul
sbb
and
movsb
icebp
xor
andl
cmp
imul
mov
and
push
jnp
xchg
int3
fwait
xor
roll
add
das
stos
jp
outsl
ss
jo
sub
jae
std
and
adc
sub
or
orl
aaa
mov
jns
inc
sbb
cmc
mov
mov
cli
mov
fcmovb
sbb
push
add
cld
mov
imul
out
dec
mov
ss
or
sbb
cmp
adc
and
je
iret
cld
jne
incb
xchg
scas
imul
pop
out
cs
mov
leave
sub
clc
or
test
fbld
sub
fcoms
dec
roll
cmpsb
ficoms
push
push
mov
popf
cmpsl
mov
insl
cli
mov
cld
inc
ss
popa
jle
sahf
lret
std
push
add
mov
push
xor
cmpsb
out
mov
into
sub
and
fadds
mov
jg
ficomps
out
stc
jge
mov
sub
pop
pop
insb
loop
cli
cs
jnp
daa
cli
pop
sbbl
pushf
mov
jmp
cmpb
fcomps
call
push
movsb
xor
push
sbb
mov
jg
jl
sub
fsubs
jns
cmp
out
out
and
cwtl
pop
test
ss
lcall
jae
push
imul
in
cmp
sub
das
int3
repnz
iret
push
xchg
mov
pop
jle
scas
mov
push
test
xor
sub
fidivs
fldt
gs
jnp,pt
pushf
pushf
cmp
or
push
pop
mov
cmp
icebp
sub
fwait
leave
ret
in
add
scas
xchg
and
clc
dec
pop
mov
sbb
inc
xor
in
jmp
mov
decb
or
shlb
mov
shll
sub
imul
jg
cs
pop
dec
and
std
fdivrl
cmp
sarl
lock
daa
insb
test
push
mov
rcll
jg
pop
insb
lods
fxch
mov
push
pop
cmpsb
push
adc
cmp
imul
xchg
mov
pop
in
iret
sbb
mov
and
mov
icebp
xchg
addr16
in
mov
xchg
xchg
xcrypt-ecb
cmpsl
popl
jge
in
jno
pop
pop
mov
xlat
cmp
sbb
inc
leave
ret
and
push
lret
fldl
pop
lods
mov
lods
sbb
addr16
mov
mov
stos
sbbl
add
bound
test
pop
fildll
xor
ja
aam
sbb
mov
andl
scas
insl
idivb
lahf
outsl
push
outsl
cmc
into
adc
mov
stos
xor
addr16
inc
push
sub
dec
pop
cmpsl
push
or
xchg
mov
ficoms
jno
mov
mov
adc
ret
cmp
add
pop
jb
mov
sub
jo
scas
push
pop
les
cmc
add
and
movsb
pushf
aas
cwtl
mov
mov
and
loopne
jb
mov
js
stos
cmp
scas
ss
cmp
cmp
out
jle
mov
sub
jo
scas
ss
outsl
inc
lods
mov
cmpsb
or
sbb
xlat
dec
xchg
fwait
sub
test
sub
cltd
inc
fisubs
std
inc
cmp
test
mov
aam
xor
jmp
sbb
iret
add
shlb
xchg
push
int
mov
xor
inc
pop
data16
in
mov
adcl
push
in
popa
dec
mov
jne
inc
addb
insb
pop
jns
cs
push
cltd
mov
mov
sub
aam
cmp
jne
hlt
mov
aad
xor
xchg
in
and
xor
sbb
imul
bound
mov
aas
pop
jns
xchg
pusha
stos
lds
jp
mov
mov
cmp
dec
gs
roll
movsb
lods
mov
dec
repz
inc
jecxz
cli
aam
rcll
movsl
shrb
and
or
cs
in
aas
movb
adc
in
jmp
add
sbbb
mov
clc
jno
movsl
sbb
ret
pop
stc
imul
ljmp
pushf
push
xchg
jb
xor
shll
push
xchg
jae
in
out
fldenv
fimuls
in
cmp
ljmp
shlb
add
pop
jle
pop
push
retw
out
cmpsl
jg
mov
jge
ds
or
pop
orl
std
and
jg
dec
movsl
add
or
and
std
popa
int3
mov
inc
hlt
mov
cmc
cmp
or
mov
jno
loopne
push
fcomps
pusha
cmpb
rorl
movl
out
repnz
pop
imul
aam
jbe
aas
loope
incl
cmpsl
jno
in
xchg
test
xchg
and
std
sub
stos
cmp
sbb
int3
mov
jg
pop
jp
cli
aam
lock
out
iret
jl
in
into
xchg
out
insb
stc
xor
add
es
inc
sub
call
xchg
fst
jo
inc
pop
jg
icebp
lret
xor
or
jmp
insb
add
push
xsha1
cmpsb
dec
xchg
imul
addb
rclb
cmp
adc
cmp
loope
aam
stc
jge
push
jmp
rcrb
push
or
add
mov
jb
inc
cmp
cmpsl
push
clc
popf
xchg
mov
in
repz
adc
outsb
loope
push
or
daa
out
mov
lods
aaa
cmp
inc
sub
stos
dec
stos
xor
cmp
and
pushf
test
ds
adc
sbb
push
and
mov
pusha
ret
inc
jge
notb
add
mov
pop
out
mov
pmaddwd
loopne
pop
mov
pusha
pop
mov
inc
hlt
lahf
mov
sbb
loopne
mov
xchg
push
jbe
rcrb
test
loope
arpl
xchg
mov
xchg
sbbb
in
clc
push
jns
repnz
scas
cmpsl
mov
out
jne
and
mov
push
inc
mov
repnz
fwait
mov
dec
sbb
ret
inc
xchg
and
inc
and
scas
jle
in
shlb
xor
adc
leave
cld
inc
mov
mov
xchg
push
cli
icebp
push
push
xchg
aam
shrl
sub
push
pop
adc
jp
imulb
mov
and
popa
push
out
mov
out
pop
adc
subl
push
cmpsl
adc
outsb
xchg
imulb
push
xchg
out
and
or
sub
subb
inc
lret
mov
in
xchg
ss
stos
xchg
mov
inc
pop
out
xor
or
movsl
lret
je
daa
pop
sub
jnp
push
out
jle
xor
mov
lods
sub
lods
shl
mov
out
dec
xor
mov
mov
and
adc
out
push
sub
pop
into
xchg
out
xlat
push
loop
jl
ljmp
mov
jnp
mov
ret
push
jg
mov
push
and
mov
sub
popa
hlt
repnz
xlat
sbb
fsubs
or
imul
add
stos
push
inc
or
mov
xor
scas
aam
dec
sbb
loop
dec
mov
pushf
push
aam
mov
inc
out
adc
in
outsl
int3
cs
or
fdiv
jge
mov
cmc
popf
pushf
mov
lahf
xor
das
xor
jbe
mov
test
mov
mov
jbe
mov
std
into
push
aam
push
testb
xor
xor
or
movsl
inc
pop
mov
cmp
jle
push
mov
mov
jo
and
xor
cmp
js
daa
xchg
push
mov
test
fprem1
pop
or
cmp
lds
jnp
scas
add
sbbb
mov
popa
dec
xor
cltd
push
cs
out
sti
dec
in
mov
and
movsl
mov
inc
or
outsl
jge
mov
adc
leave
fs
in
je
fdivrl
je
dec
add
lret
daa
sub
push
push
loopne
arpl
dec
mov
adc
xchg
ja
test
addl
imul
sbb
add
sar
mov
popa
push
and
arpl
orb
shrb
push
push
mov
sbb
lret
mov
and
sbb
push
loope
cmp
xchg
or
imul
adc
xor
push
pop
push
rcrl
pushf
and
out
pop
enter
cli
mov
insb
add
and
fimull
icebp
mov
inc
loope
in
scas
in
xchg
sbb
shr
fdivl
or
xchg
insl
scas
push
or
push
pop
into
pushf
dec
cmp
hlt
popf
inc
test
mov
insl
in
lods
push
and
cltd
rcrl
mov
aaa
pusha
and
pop
mov
cmp
test
or
xchg
out
sbb
loope
mov
pop
imul
cmc
push
enter
xor
fwait
mov
pop
les
jmp
popa
mov
fwait
dec
sub
pop
add
icebp
jl
leave
dec
mov
pop
push
cli
stc
mov
push
imul
xor
aad
push
xor
push
push
gs
fs
mov
pop
imul
and
pop
in
test
jnp
push
pop
icebp
roll
sub
pop
or
push
cld
lahf
insb
push
inc
dec
or
dec
add
jne
inc
hlt
dec
jecxz
cmp
fwait
dec
mov
xlat
test
fwait
jo
sbb
or
xor
lret
cltd
jp
jecxz
scas
iret
cmp
clc
cmp
dec
jg
push
xchg
loop
xchg
dec
and
pop
std
cwtl
jp
sarb
imul
add
fcmove
and
jns
push
and
sub
xchg
test
fdivs
mov
lret
icebp
divl
popa
ret
shl
inc
sahf
sbb
and
je
out
adc
movsb
fcompl
popf
addb
dec
gs
jae
pop
test
pop
or
adc
roll
and
jbe
imul
ds
cmp
lods
jg
push
sub
or
ret
adc
or
mov
scas
adc
adc
sbb
push
scas
seto
idivl
mov
xchg
cmp
inc
out
enter
test
mov
repz
bound
lods
repnz
sbbb
mov
fisubl
repnz
lods
cld
jmp
cmc
loop
in
mov
cmp
std
and
subb
imul
push
cltd
loope
jp
dec
repz
dec
sub
or
and
pushf
shll
mov
pop
inc
sub
mov
or
clc
test
xchg
fwait
test
shll
adc
sub
mov
mov
shll
add
daa
cltd
adc
adc
dec
scas
xor
xchg
xor
pusha
or
outsl
mov
loope
aas
lcall
loopne
ret
imul
in
adc
scas
mov
push
daa
stc
faddp
mov
dec
insb
xchg
lds
push
ss
xchg
in
aad
mov
addr16
iret
inc
and
push
pop
sub
movd
pop
adc
add
sbb
int3
sub
inc
test
mov
sti
mov
sbb
popa
fwait
test
mov
add
or
cmpsl
xchg
push
mov
mov
sub
mov
push
pop
push
jg
jecxz
mov
sbb
xchg
in
std
je
pop
bound
ret
push
stc
mov
lock
mov
mov
test
icebp
cmpsb
add
or
cmpsb
sub
inc
sbb
mov
dec
jg
loope
jmp
fwait
cmc
xchg
in
cmp
or
lret
mov
adc
xchg
mov
adc
bound
iret
push
mov
fdiv
mov
test
jb
out
aas
mov
inc
lcall
cld
lahf
lret
lds
adc
or
inc
dec
xchg
js
xor
into
adc
mov
repnz
xchg
mov
add
xor
mov
jle
test
stc
adc
in
data16
add
stos
add
push
adc
pop
jbe
in
sub
arpl
movsl
adc
push
xor
cs
and
and
push
and
mov
cmp
gs
mov
or
xchg
mov
cwtl
mov
fimull
push
ret
cmp
jmp
cmp
mov
in
cmpsb
in
fnstsw
sub
and
sahf
cmp
in
insb
scas
lret
dec
xchg
pushf
pusha
shlb
pop
insl
or
inc
sbb
lret
test
pop
leave
mov
xlat
mov
and
or
adc
push
mov
xor
xchg
stos
fisttpll
in
mul
jnp
shl
imul
lcall
dec
xchg
int
lock
mov
inc
loopne
dec
jp
mov
test
in
xor
hlt
xor
add
and
leave
je
call
or
lret
dec
bound
hlt
pop
jp
aaa
roll
dec
jns
add
pop
pop
rcr
lods
pop
dec
inc
add
and
sub
jp
or
cmp
jno
std
lahf
pop
and
add
leave
outsl
rcrb
add
jo
sub
cmp
and
dec
xor
into
mov
sub
mov
fcom
dec
repnz
outsb
adc
or
lea
testl
cwtl
inc
push
shll
popa
into
sbb
and
sbbl
adc
out
sbb
inc
jno
mov
divl
sahf
cmpsb
mov
int
scas
test
inc
frstor
adc
idivl
add
xor
lret
lcall
iret
je
sbb
mov
icebp
xchg
xor
jns
adcb
dec
adc
or
jl
notl
in
inc
loope
pop
lcall
cwtl
sbb
mov
push
addr16
sti
lahf
jb
jl
loopne
push
xlat
rolb
loop
in
dec
or
mov
xor
aas
push
es
das
in
rcrl
loop
jp
sbb
sub
cmp
jnp
in
mov
int
in
mov
repnz
xor
call
inc
add
stc
mov
xchg
repz
push
call
jl
movsb
push
sub
pop
inc
adc
pop
shrb
mov
ficompl
popf
subb
iret
sub
testb
lret
sub
out
lods
sbb
pop
imul
repz
test
mov
xor
aad
xor
pop
add
test
or
dec
cli
lods
and
cwtl
cltd
adcb
ds
hlt
fwait
sub
sbb
cwtl
dec
mov
sbb
popf
imull
cmpsb
xor
sbb
sbb
cmpb
mov
js
subl
lcall
loope
ljmp
dec
int3
hlt
xlat
dec
mov
rorl
push
subl
roll
jg
mov
push
sbb
rorb
sbb
pop
jge
push
mov
in
cmp
loop
sbb
cmc
in
mov
sbb
negl
add
out
and
icebp
mov
sbb
xor
sahf
out
out
fistpll
jbe
and
xor
sub
xchg
loope
test
lcall
jmp
dec
insl
lods
pop
jnp
sahf
cmp
ljmp
movsl
adc
leave
adc
push
mov
lods
sbb
out
rcl
and
fwait
pusha
out
sub
cld
lret
jp
mov
jmp
xor
pop
les
repnz
adc
xchg
inc
dec
push
push
xchg
nop
sbb
mov
lcall
push
in
cmp
dec
loop
push
lahf
pop
imul
nop
cmp
add
adc
fisubrl
mov
dec
je
popl
xlat
insb
in
pop
push
hlt
fwait
aad
jbe
in
xchg
mov
pop
xor
pop
aas
cmp
inc
fidivrs
flds
lock
out
fdivrl
int3
sub
js
or
jae
arpl
cli
sub
test
and
cmp
mulb
mov
add
push
mov
movsl
cmpl
and
lret
mov
popa
aas
jbe
stos
lods
add
sub
cmpsl
mov
fsts
lds
jge
pop
ljmp
mov
lahf
ret
ljmp
dec
push
xchg
es
adcl
ljmp
xchg
pop
ljmp
sbb
sbb
repnz
stc
aaa
sbbl
add
lahf
mov
jp
outsl
test
sub
cmpsl
or
jb
imul
insb
inc
arpl
fidivs
xchg
test
and
mov
mov
dec
add
ret
ja
jg
jecxz
inc
mov
pop
xor
pop
push
dec
xchg
push
fnsetpm(287
ds
fidivl
mov
or
and
mov
sub
mov
sti
or
rcll
lods
or
sbb
frstor
int3
rcr
pop
push
pop
out
lock
icebp
add
fnstsw
and
jns
mov
xor
dec
dec
mov
fwait
push
iret
fstl
bound
in
sub
jle
daa
push
sbb
pop
xor
sbb
mov
repnz
lea
leave
jo
dec
rcl
out
js
popf
js
mov
outsl
sbb
and
addr16
sbb
repnz
pop
stos
jecxz
mov
aaa
enter
fwait
loop
mov
pop
sub
cli
pop
test
lea
cmpsl
out
sub
inc
movsl
ljmp
repz
push
mov
popf
xchg
movsl
notl
pop
out
cmp
mov
mov
jecxz
push
jge
pop
stos
ljmp
inc
fildl
ljmp
in
out
push
mov
sarb
in
call
push
int3
outsb
out
pop
mov
jns
data16
pop
mov
xchg
push
idiv
in
in
add
stos
mov
into
and
mov
daa
and
int3
cwtl
dec
sub
push
sbb
pop
push
test
push
scas
pusha
lods
test
addb
shll
mov
outsl
lret
ret
and
imul
into
cwtl
mov
lods
lahf
or
bound
imulb
movsl
add
fdivl
cwtl
add
xchg
xlat
mov
divps
mov
mov
cmp
or
fcmovnu
movsb
inc
mov
imulb
push
lret
mov
dec
es
inc
stos
mov
lcall
into
call
jle
and
notl
inc
cmp
int3
cmp
xor
dec
aaa
std
mov
dec
popf
xchg
shrb
dec
push
hlt
and
jb
iret
shrl
and
push
xchg
mov
inc
test
int3
adc
mov
cld
inc
add
or
test
leave
das
add
xchg
mov
pop
ja
fcom
sub
enter
iret
loop
and
icebp
pop
add
out
jno
cwtl
sbb
adc
mov
mov
sar
xor
daa
shrd
dec
sbb
jecxz
and
daa
dec
std
add
pop
test
rcl
lods
adc
shrb
mov
test
xchg
xor
cmp
pop
sbb
sub
dec
add
lret
add
push
insl
pop
imul
ljmp
inc
sti
mov
int3
jb
adc
ret
int3
test
add
sbbb
ret
add
sbb
shrb
es
bound
fdivs
and
cmp
or
adc
inc
cmpsl
popa
inc
xor
mov
xchg
insl
inc
jmp
push
testb
adc
pop
rcll
sub
lds
das
cli
pop
ret
inc
imul
mov
mov
int
popf
jo
and
out
sub
jmp
xor
xor
bound
mov
fs
cwtl
test
pushf
fldt
and
call
mull
sub
ljmp
shll
xchg
nop
das
add
mov
or
cmp
enter
das
cmp
cld
pop
std
jnp
lcall
loopne
cli
fisttpl
adc
fcmove
fadd
pop
cmpsl
inc
pop
push
jecxz
or
pop
inc
pop
ret
out
std
fstpl
mov
inc
scas
shrb
mov
addr16
cmp
daa
cwtl
shll
popa
or
jge
fstpl
pop
lret
cmp
mov
stos
mov
inc
and
popa
and
mov
pushf
pop
ds
pop
mov
jp
les
outsl
iret
mov
push
ds
cmp
and
test
pop
cs
push
mov
cmpsb
dec
cmp
dec
hlt
add
push
and
mov
mov
daa
int
lcall
insl
sbb
cmpsb
cs
addr16
inc
stos
into
ljmp
or
psubw
xchg
add
push
push
pop
cmpsb
mov
sbb
sub
jl
and
push
mov
mov
lea
inc
push
imul
shrl
adc
ljmp
xchg
imul
iret
sti
popa
jle
scas
push
loopne
pop
dec
add
rclb
sub
out
push
xchg
mov
jl
add
rcrb
dec
stos
jecxz
and
test
les
adc
stos
out
stos
cmc
xchg
push
lea
sbb
les
and
and
mov
out
ds
test
jmp
data16
mov
and
fadd
aaa
ficoms
outsb
mov
fdivrs
out
pop
cs
adc
pop
mov
arpl
dec
out
sub
ret
cmp
mov
ds
mov
mov
and
xorb
cmp
sub
es
fimuls
pop
mov
cmp
sub
cli
popf
jg
shl
pop
push
addr16
add
popf
rol
inc
cli
aaa
leave
stos
cwtl
aas
inc
lret
das
daa
int
mov
push
js
push
jbe
clc
cs
cmp
inc
sub
pop
inc
adc
cwtl
and
loope
push
aas
and
mov
sbb
clc
std
lods
mov
jbe
or
mov
jo
jmp
gs
es
fwait
push
sub
fwait
sbbl
aas
loop
jg
dec
push
ret
scas
loop
in
or
dec
andl
pop
nop
add
das
jle
xor
sub
add
out
and
pushf
and
xor
fsubr
jnp
and
lds
jno
jl
js
cs
insl
add
mov
ret
scas
adc
pop
inc
xchg
rcl
loop
outsl
mov
ficomps
fisttps
push
pop
dec
push
mov
repz
jecxz
jle
ret
jne
jl
pop
mov
subb
adc
mov
mov
lds
test
pop
push
xor
cld
inc
das
push
jb
add
push
or
lds
jnp
lods
mov
insl
mov
and
jl
ret
adc
push
xor
inc
lock
rcll
cmp
stos
dec
stos
loop
mov
mov
jle
push
mov
ret
movl
jae
or
lods
and
push
jo
add
adc
pop
fidivl
lods
mov
mov
dec
in
inc
pop
pop
adc
or
loopne
adc
das
xchg
or
mov
mov
leave
lock
shlb
mov
repz
xlat
jnp
mov
testb
add
dec
mov
mov
jle
pushf
push
mov
add
push
inc
out
fbld
add
and
sub
pop
out
sbb
sub
inc
push
ljmp
dec
push
xchg
mov
jle
jns
mov
fnstsw
jbe
sbb
and
std
push
call
or
mov
xchg
mov
je
xor
pop
test
adc
mul
test
push
lods
repz
test
pop
into
stc
cmp
in
cmpl
inc
ret
stc
stc
jae
in
nop
imul
das
xchg
jo
sarb
insl
lahf
push
inc
cmp
repnz
mov
dec
ja
int3
call
lret
pop
cmp
cld
pop
scas
mov
clc
mov
arpl
lods
sarl
addb
call
decb
stos
pop
or
inc
sarb
cmp
fwait
movb
jle
inc
lods
test
cs
push
mov
les
aaa
and
jo
popf
outsl
roll
int
mov
jbe
loope
or
popa
inc
cld
daa
mov
mov
xchg
mov
push
cmp
fwait
sub
lods
sbb
repnz
daa
ret
push
enter
sub
leave
jmp
mov
mov
push
push
adcl
sbbb
mov
or
push
shll
sbb
xor
push
and
shr
shlb
repz
or
jmp
xor
jmpw
add
xorl
push
cmpsb
subl
or
push
fs
fstps
push
loop
inc
fsubrl
pop
cmp
jmp
xchg
and
push
add
sbb
int
pop
iret
cmpb
mov
in
in
ljmp
adc
inc
outsl
mov
gs
call
scas
jl
mov
pop
or
jmp
dec
dec
pop
idivl
sbb
push
add
loop
xchg
xor
sub
scas
iret
sahf
pop
pop
lret
sub
test
push
jle
insb
daa
adc
xor
test
lea
sbb
jl
sbb
loope
andl
sbb
out
addr16
leave
popa
xchg
jo
fwait
mov
cmpsb
hlt
mov
jne
xchg
shr
mov
sub
fsubr
inc
shl
fisubrl
sub
mov
daa
mov
leave
ja
inc
cmp
dec
jle
pop
mov
aam
outsl
xor
pop
insl
pop
incb
js
sbb
imul
push
iret
popa
push
mov
ret
sbb
dec
sub
mov
sbb
movsb
jno
inc
inc
clc
out
sub
jmp
stc
dec
int3
jl
int3
out
aas
jne
adc
sahf
stos
add
adc
push
sbb
jge,pn
lahf
outsl
xchg
ret
pop
test
test
push
push
cmp
pop
mov
enter
and
popf
rcr
dec
in
cmpsl
scas
xor
std
and
pop
out
mov
jmp
pop
dec
mov
jns
out
sbb
scas
into
sub
jecxz
insl
mov
or
push
cmp
push
js
test
loop
xchg
imul
cmp
push
or
jae
xchg
bound
out
add
inc
sub
loope
pop
mov
xchg
shrl
bound
add
test
shll
fwait
jg
inc
jo
scas
popa
icebp
add
aad
push
js
mov
push
call
test
mull
mov
out
stc
cmp
jg
push
aam
dec
mov
sarl
inc
popa
sbb
add
lahf
cli
repnz
adcl
lret
adc
inc
lods
or
out
jp
cltd
add
inc
jnp
jle
aad
mov
hlt
call
call
xchg
shl
dec
xor
inc
mov
mov
cmc
lock
dec
ss
sub
xor
add
push
mov
push
mov
dec
es
cwtl
inc
mov
js
lret
call
mov
sub
inc
jno
add
add
adc
cmpsb
xor
cmp
jle
gs
sub
mov
dec
sbb
mov
jecxz
pop
xor
add
jbe
sbbl
data16
dec
xor
and
cld
mov
jle
mov
mov
frstor
out
pop
inc
fnstsw
lock
adc
adc
rcrb
mov
jg
ret
imul
jle
or
test
lahf
dec
imul
dec
addr16
jae
push
push
jo
pop
inc
or
aaa
into
add
mov
cmp
mov
or
add
mov
lahf
cmp
int3
xchg
repnz
dec
mov
xor
fidivl
mov
ja
or
jp
test
xor
dec
into
pop
mov
cmp
sti
xor
outsl
and
xor
add
rdpmc
mov
jp
idivb
or
lahf
inc
test
outsb
rolb
and
mov
pop
fucomi
int3
dec
pop
je
sub
mov
addr16
mull
fidivrs
or
push
bound
cs
je
insb
mov
sbb
xchg
and
daa
or
xor
sbb
aas
daa
subl
cmp
sub
push
pop
cmp
ja
cmp
pop
repz
dec
or
data16
jl
or
repz
idivl
dec
cmp
push
sbb
fwait
lea
lcall
xchg
adc
pop
or
or
sti
std
mov
cmp
pop
hlt
shrb
mov
cmp
ficoml
out
dec
pop
es
mov
cmp
inc
adc
lock
int3
lods
je
lret
popa
inc
push
push
lea
fisubs
fisubrs
ljmp
out
in
lods
pop
pushf
loop
ficoml
sbb
xchg
or
paddsw
insb
fstps
jne
repnz
and
scas
jge
cmp
pop
xchg
or
mov
adc
or
pop
cmp
int3
lret
lock
pusha
push
jno
mov
mov
dec
clc
lods
xor
dec
push
dec
mov
mov
dec
xor
add
out
rclb
test
lret
ss
cs
cltd
iret
xorps
push
movsb
mov
sbbl
cmp
push
dec
push
and
fistpll
fistpl
ljmp
cli
loop
cmp
inc
fildl
and
movsl
test
in
icebp
or
in
mov
scas
clc
jnp
aad
cltd
cmp
xchg
inc
cmp
fwait
inc
shl
sub
shl
xlat
sbb
mov
mov
fadd
pop
sbb
mov
jns
nop
fwait
or
pop
sbb
testb
in
push
ss
adc
push
test
mov
rcr
cmp
std
cmp
scas
js
in
push
rclb
pop
jg
jb
outsl
inc
stos
mov
jne
scas
adc
mov
or
into
pop
push
in
enter
pusha
sahf
fcoml
xor
leave
push
cs
sub
pop
inc
dec
mov
fdivrl
xor
mov
add
mov
out
jb
bound
push
mov
adcl
fs
fsubrl
pop
ja
inc
push
mov
push
sbb
xor
nop
cmpsl
popf
movl
jecxz
ret
std
mov
cli
mov
or
xchg
stos
outsb
rclb
mov
add
push
inc
sub
mov
add
jl
dec
data16
iret
mov
je
fiadds
mov
subl
inc
fildll
xchg
lods
je
sbb
mov
lods
add
add
jnp
pop
mov
sbb
cltd
loop
inc
pusha
mov
scas
adc
rclb
or
flds
push
bound
cmp
fstps
inc
dec
and
inc
inc
xchg
movsl
mov
xchg
fwait
push
lcall
mov
cmp
mov
in
lods
out
dec
fs
push
cmc
cmp
cs
sub
data16
in
sbb
xchg
shlb
adc
sbb
shrb
ja
stc
filds
movsb
call
jg
dec
jno
mov
in
mov
or
mov
push
dec
fldl
push
adc
fstpl
mov
mov
scas
scas
pop
jmp
shlb
cmp
int3
arpl
xor
xor
xor
mov
mov
test
add
nop
gs
pop
mov
mov
adc
repnz
add
mov
rorb
sub
mov
sub
scas
mov
xor
add
fistpll
movsl
ficoms
mov
mov
add
das
adc
pop
jb
mov
sbb
xchg
subb
xchg
pop
mov
or
cmpsb
mov
outsb
loop
adc
sbb
inc
das
or
xchg
sub
arpl
outsl
mov
sbb
inc
or
aas
push
arpl
lods
pop
push
aas
mov
aam
cli
inc
push
cmp
push
xchg
and
pop
dec
pop
cltd
mov
jmp
xor
sbb
pop
loopne
das
fadds
testl
cmp
jae
mov
mov
daa
mov
andb
jmp
cmpsb
cmp
inc
xchg
ss
lcall
testl
xchg
jge
push
and
pop
xchg
in
sbb
cmpsb
insb
mov
sub
andb
xchg
sbbb
mov
mov
les
sub
xor
imul
mov
xlat
movsl
jg
aad
mov
xchg
out
sub
mov
ficompl
popa
je
popf
leave
jp
lcall
mov
dec
notl
popf
pop
test
cltd
imul
je
xchg
jae
xor
or
es
pop
fwait
loopne
ret
mov
rcrl
pusha
push
popf
inc
int3
xlat
bound
rolb
int
adc
ljmp
ret
inc
sub
adc
dec
ror
pop
push
and
cs
xchg
cmp
mov
mov
outsl
das
or
inc
xchg
ja
subb
std
cmp
inc
pusha
mov
sub
pop
ljmp
es
jbe
sbbl
fsubl
into
test
add
cmp
cmpsl
sarb
int3
pop
jno
ffree
cmp
das
adc
push
xchg
adc
pop
rorb
add
lock
es
or
daa
inc
adc
in
cmp
sub
sub
rcll
xor
loopne
outsb
xchg
push
into
rorl
hlt
inc
out
pop
aad
cmpsb
xchg
loop
or
aad
xchg
sub
xchg
popa
and
dec
mov
or
pop
mov
hlt
pop
pop
movsl
mov
sub
and
sub
adc
mov
adc
addl
clc
popa
or
cmp
push
mov
insb
inc
adc
adc
cmc
jns
and
sbb
pushf
shll
dec
loopne
scas
test
fwait
aaa
int3
popf
std
mov
mov
icebp
sti
clc
popf
sub
lock
dec
and
add
cmc
cmp
repnz
inc
mov
shrb
jnp
stos
sahf
adc
outsb
jle
gs
call
sub
idivb
mov
mov
inc
cmp
mov
jge
cmp
ja
mov
jecxz
call
inc
fucomip
inc
sbb
jl
pop
icebp
imul
fs
inc
pop
das
xlat
iret
mov
mov
shll
mov
hlt
ficoms
xorb
ds
sub
in
test
add
mov
popa
jmp
sarl
aad
stos
movsb
cmpsb
std
ret
aad
mov
dec
ljmp
mov
je
dec
cmp
int
jg
or
push
inc
loopne
cmp
ss
jmp
int
loopne
lret
pop
cmp
fnsave
push
in
push
cld
pop
ds
rorl
mov
int3
in
sbb
mov
mov
cwtl
in
addr16
pusha
fadds
push
mov
rcl
push
pop
mov
cmp
xor
sbb
xor
and
push
test
cwtl
rcrb
in
push
pop
inc
jnp
jle
stos
adcb
repz
or
test
mov
jns
fs
xchg
stos
jo
cmp
xchg
push
cmp
dec
mov
xor
fisubrl
or
out
jae
cmp
into
cmc
jo
jbe
std
add
push
lahf
fildll
sub
imul
push
add
in
daa
enter
lret
and
cmp
push
mov
iret
out
xlat
xor
xor
loope
test
movsb
push
xchg
mov
or
out
outsb
aaa
cmpsl
stos
adc
mov
sbb
pop
mov
mov
mov
cmp
jnp
fs
mov
addr16
sub
clc
push
cli
jg
sar
lea
roll
rorb
imul
dec
dec
inc
cmpsb
mov
sbb
je
mov
dec
negb
aaa
fdivr
sub
out
pusha
mov
mov
xlat
gs
inc
es
mov
repz
fwait
cmpsb
mull
xorl
add
lret
mov
test
pop
or
fidivs
cmp
jge
add
cmp
les
loopne
arpl
jmp
mov
jg
repnz
mov
lds
dec
imul
int
je
lcall
je
stos
loop
cltd
dec
xchg
punpckhbw
dec
pop
add
out
pop
cwtl
pop
cmpsb
sarb
repnz
fsubrp
out
stos
insl
inc
push
xor
mov
pop
push
jg
in
mov
dec
fwait
inc
jle
mov
repz
jb
pop
xor
mov
pop
loop
cmc
lret
dec
adc
inc
lcall
and
sti
mov
in
adc
leave
add
mov
dec
xchg
push
and
int3
adc
jle
cwtl
decl
int
cmpsl
push
sub
inc
stc
lcall
fcompl
jns
mov
testb
inc
push
sbb
fwait
les
xor
scas
sbb
pushf
fwait
push
sbb
sbb
mov
fcmovne
jecxz
imul
loop
mov
inc
and
dec
sti
les
scas
enter
mov
sbb
addr16
scas
xchg
out
ss
jmp
mov
leave
stc
adc
mov
xor
dec
mov
test
xor
adc
push
xchg
fsubrl
ja
fwait
xchg
cmp
jle
repnz
in
jmp
mov
adc
das
or
fwait
jb
lcall
aad
xor
xor
test
inc
mov
cld
mull
loopne
inc
pop
push
scas
lods
out
loope
mov
adc
sbb
repz
ja
addb
pop
icebp
movsl
dec
xor
aam
movsb
ss
mov
inc
shl
pusha
push
ljmp
add
mov
rorb
addb
adc
bound
inc
subl
pop
sub
sub
ljmp
adc
ret
dec
mov
fwait
jmp
orl
mov
inc
or
adc
adc
imul
mov
jge
xor
mov
jmp
dec
cli
pusha
cmp
mov
inc
dec
pop
out
xor
inc
mov
add
or
loop
inc
shl
jbe
add
dec
outsl
mov
negb
xchg
add
push
or
ljmp
stos
push
mov
jbe
jb
jl
push
arpl
jmp
fcoms
adc
js
mov
pop
dec
dec
mov
pop
push
xor
jle
dec
mov
dec
nop
and
mov
idivb
push
push
pop
and
and
lahf
cs
jp
jo
aad
xor
sbb
fwait
mov
int
daa
or
push
movq
cmpsb
mulps
test
imul
vpmulhw
jb
test
inc
dec
out
and
test
pop
mov
in
inc
mul
fwait
testl
cmp
iret
sahf
mov
fists
mov
aad
lods
test
fiadds
and
nop
inc
inc
cmp
lds
add
ret
enter
xor
int3
loopne
out
lcall
imul
xor
mov
cmpsl
and
push
lods
push
push
mov
nop
sbb
or
cmp
sbb
stc
les
xchg
dec
scas
ficoms
fnstcw
pop
inc
add
sub
cwtl
inc
frstor
adc
xor
cmpsb
lret
insl
adc
test
jle
lods
cld
cmp
sub
jnp
mov
mov
insb
sub
jge
scas
shlb
aad
out
mov
xor
scas
lahf
dec
gs
xchg
out
cmp
cmc
test
jno
orl
dec
test
push
xchg
pop
std
xchg
xchg
push
sbb
inc
xchg
jle
xor
rcr
lret
or
pop
es
xor
xor
or
push
aad
mov
jns
out
pop
push
mov
add
mov
aam
loope
or
push
lahf
adc
stos
call
fidivs
mov
jne
mov
lea
or
rorl
dec
mov
test
pop
sub
in
cmc
push
punpcklwd
adc
stos
out
rcrl
xchg
movsb
sub
add
push
xchg
or
add
jge
enter
dec
mov
cld
sbb
xor
stc
aaa
mov
int3
ret
movsl
dec
xor
clc
out
sub
popa
dec
sub
int
loopne
lea
mov
push
dec
enter
cmp
add
jae
add
and
jae
test
sbb
sub
addl
mov
subb
mov
adc
mov
mov
mov
pop
adc
clc
cmp
mov
add
jns
movsb
sbbl
jns
icebp
mov
mov
inc
subb
or
je
lret
fsubl
xchg
dec
cmp
in
jnp
vhsubpd
shrb
outsb
dec
test
inc
shrl
dec
mov
test
movsb
mov
and
push
mov
jb
dec
sub
lcall
stc
arpl
cmp
test
mov
dec
jl
xor
imul
lcall
push
or
pop
pop
mov
adc
outsb
mov
jmp
push
int3
mov
mov
adc
lret
dec
mov
push
mov
adc
pop
jp
imul
adc
test
add
test
or
movsb
jae
pop
xchg
pop
lret
sub
aam
sbb
aam
js
xchg
sbb
je
dec
fmuls
decl
jecxz
xchg
inc
dec
scas
sbb
filds
icebp
push
pushf
jmp
dec
int
pop
and
push
mov
or
pop
pusha
xchg
xchg
les
orb
jmp
mov
sbb
dec
popa
enter
pop
push
mov
and
ja
pop
pop
and
pushf
outsl
and
addb
xor
and
insb
shrb
fistpl
out
gs
pop
push
inc
cmc
pop
fs
jb
or
lods
sbb
push
xor
lds
stos
dec
dec
lods
mov
insb
and
popf
test
cmp
scas
push
pop
push
loop,pt
idiv
cmp
lret
cld
ljmp
into
push
shll
pop
mov
jb
cltd
out
roll
jp
mov
cmc
inc
cltd
enter
lret
std
stos
and
rcrb
out
mov
cmp
sahf
icebp
insl
nop
and
xchg
xchg
adcb
add
jo
and
xchg
dec
cld
je
push
xchg
imul
pushf
pop
pop
dec
xchg
sbb
rcr
mov
filds
xchg
popa
sbb
mov
jno
in
pop
mov
inc
push
cs
push
jne
clc
jbe
js
fucomi
xchg
in
ljmp
cmp
dec
adc
out
or
inc
clc
imul
sbb
stos
cmp
fisubl
iret
add
ds
loop
int
out
insb
out
xchg
jne
aaa
inc
clc
mov
dec
jecxz
push
or
ja
in
push
adc
js
jnp
fcoms
outsl
std
and
cmp
push
dec
stos
dec
outsb
loope
shlb
fcmove
xchg
bound
lret
daa
lods
sbb
xchg
mov
pop
shl
jae
fdivr
ficomps
roll
inc
lahf
lret
or
hlt
dec
out
int3
insl
adc
rolb
sti
xchg
jns
jecxz
dec
stos
test
bound
adc
sar
js
sahf
mov
roll
pop
insb
fildll
dec
pop
or
ret
sub
mov
mov
sbb
les
lahf
adc
mov
push
mov
inc
outsb
push
int
aas
test
fisubs
stos
icebp
mov
mov
lock
jae
mov
sbb
pop
ret
xlat
test
test
stos
add
xchg
ljmp
cmp
mov
mov
repz
mov
insl
fidivs
loope
push
push
xlat
lcall
xlat
add
mov
mov
sbbl
int
pusha
or
dec
repnz
and
mov
add
ljmp
dec
inc
add
imul
sbb
stos
jns
jg
add
nop
adc
mov
fstp
xchg
xchg
or
sbb
fnsave
mov
addr16
sub
std
or
sub
xchg
xchg
popf
pop
add
adc
bound
scas
adc
mov
hlt
mov
push
push
enter
mov
insb
test
loopne
incb
icebp
sub
cmp
ds
push
pop
cli
out
fdivrs
mov
pop
mov
loope
sub
pop
dec
fadds
call
dec
lea
cmpsb
stc
sbb
pop
cli
insl
fs
out
inc
mov
repz
pop
addl
sub
hlt
std
lds
lods
enter
push
dec
int3
inc
stos
pop
daa
add
scas
cmp
les
nop
scas
pop
inc
dec
mov
out
out
xchg
stos
ljmp
popf
je
mov
inc
mov
test
mov
js,pt
xchg
test
es
or
push
ljmp
imul
and
out
or
mov
jne
mov
int
pextrw
cmp
loopne
mov
lock
mov
aad
jge
mov
lea
insb
cmp
pop
lret
adc
cmp
dec
pop
or
pop
mov
imul
mov
xchg
mov
jns
in
pop
mov
pop
mov
or
and
dec
pop
std
pushf
adc
cmp
pop
dec
mov
mov
mov
pushf
pop
push
sbb
xchg
inc
leave
sbb
in
mov
jae
xlat
sti
loope
cmp
loopne
lods
dec
push
push
dec
dec
into
xchg
test
and
iret
inc
outsl
pop
sub
js
inc
aas
lea
inc
pusha
jmp
ficoml
sbb
jnp
pop
push
scas
ret
jecxz
cmpl
lea
mov
push
repnz
or
ds
rclb
cmpsl
sbb
fs
insb
stos
out
test
loop
add
insb
and
in
jno
sub
ljmp
aaa
lret
cmp
scas
push
insb
cmp
add
push
popf
pop
dec
and
divl
punpcklbw
and
adc
jp
shlb
cs
addr16
unpcklps
fnsave
dec
jb
xor
sub
mov
add
inc
lret
adc
lock
jmp
jae
sbb
cmp
jecxz
jnp
fwait
mov
cs
sbb
cmp
and
jo
sahf
cmp
add
push
pop
jmp
mov
out
das
sub
pop
add
imul
mov
lea
fisubrl
je
and
call
push
lods
mov
inc
enter
push
rcrb
in
negb
and
sub
ja
pop
rcrl
popf
cmp
ds
mov
movb
cmp
dec
stos
sbb
loopne
clc
push
add
out
int3
aas
lea
fidivrl
popl
scas
mov
push
push
mov
pop
aaa
xchg
dec
and
add
sahf
sbb
adc
les
and
mov
adc
xorb
lds
push
cltd
mov
xlat
inc
adcb
sbb
bound
or
add
inc
sub
sub
xor
inc
mov
aas
outsl
mov
jne
mov
scas
cmpsl
shll
lea
int
loope
jno
aas
outsl
movsl
je
insl
roll
lret
adc
pop
lret
xor
jl
xor
xor
mov
ror
cmp
mov
clc
aam
les
dec
pop
dec
lock
or
inc
addr16
xlat
sub
enter
jmp
and
xchg
int
xchg
mov
cs
dec
data16
dec
pop
or
ja
inc
pop
insb
push
lahf
repz
lahf
lods
in
and
shll
ret
les
vandnpd
shrl
inc
paddb
push
jb
dec
test
sarl
sti
sbb
xor
inc
bound
push
add
and
popa
loopne
xchg
sbb
sbb
mov
dec
dec
adc
cmp
dec
jp
shr
in
xchg
mov
jecxz
mov
push
jmp
sub
push
pop
xchg
adc
popa
and
dec
addr16
mov
push
cmp
adc
mov
in
add
push
imul
mov
xchg
lahf
inc
inc
pop
testb
stos
out
sub
fists
aas
ret
xor
xor
dec
mov
stc
wrmsr
add
stc
or
push
dec
jmp
scas
add
fnsave
imul
fadd
test
nop
pop
std
or
fcomps
mov
loop
fwait
imul
lcall
inc
sub
cmp
add
adc
lds
cmp
or
mov
xchg
lret
mov
mov
adc
movsl
or
jp
sbb
mov
addr16
int
int
movsb
pop
subl
sub
jbe
aas
add
ret
mov
sub
cli
subb
push
cwtl
pop
in
xor
mov
jmp
mov
sbb
shll
test
or
cli
push
sarb
loope
in
add
das
fs
dec
sbbb
push
cmpsb
int3
and
jns
ja
stc
rcll
fsts
scas
push
stc
xchg
dec
mov
shr
xchg
xor
pop
jns
inc
xor
fs
fs
out
test
daa
imul
ljmp
sbb
bnd
cmp
lret
pop
rorl
push
cs
dec
repnz
ret
popa
incb
repnz
mov
aam
test
js
push
ret
in
sbb
pop
test
xchg
mov
shll
xchg
orl
ds
mov
or
scas
or
pusha
stos
lea
ret
sub
push
stos
je
sub
xorl
or
addr16
addr16
pop
adc
jecxz
push
flds
sbbl
fbld
adc
int3
test
iret
xchg
sbb
fiadds
fildll
or
cmpsl
add
lret
jbe
jno
jle
inc
jp
popf
stc
add
mov
mov
in
aas
repnz
vmulpd
or
dec
and
shlb
push
adc
mov
sarl
add
mov
cld
mov
insb
xchg
sub
xlat
ficompl
mov
sbb
rcll
mov
jl
cwtl
negl
cmc
test
lea
pop
add
mov
std
and
les
lods
mov
inc
cmpl
ret
lods
mov
ficoms
aad
inc
nop
add
fisttpll
mov
push
arpl
and
push
out
scas
xor
xchg
rcrl
movd
push
mov
add
push
movsl
fsts
adc
in
out
push
fwait
je
pop
je
lea
decb
xchg
je
lds
and
mov
sbb
cmp
insl
xchg
cmp
sbb
fidivl
xor
add
das
cwtl
fcompl
push
addl
xchg
jle
in
test
jge
out
fcmovnbe
xchg
aam
cmpb
aas
inc
mov
or
xchg
push
mov
clc
dec
sub
pop
jmp
jb
fsubl
sbb
pop
sbb
lods
ljmp
pop
mov
pop
and
lods
not
jo
fsub
sub
sti
sbb
pmaxub
cltd
xchg
mov
push
push
jae
dec
dec
add
xchg
mov
mov
out
daa
pop
stos
xchg
sbb
push
pop
stc
add
lods
mov
fdivrs
jmp
mov
or
jle
aas
dec
mov
into
jne
mov
in
orb
pop
cwtl
xor
push
daa
clc
push
fstpt
and
jp
inc
stc
sahf
sbb
aas
inc
mov
in
aas
jne
sbbb
pop
inc
dec
outsb
cld
call
sub
sub
dec
dec
jmp
jns
xor
xchg
mov
sti
xchg
mov
cmp
sub
mov
ss
push
outsb
in
push
shlb
xchg
push
cmp
push
leave
mov
add
mov
mov
or
sub
cmpsb
enter
sbb
ret
push
ljmp
xor
xor
mov
sbb
pop
fisttps
pop
daa
sub
scas
movsb
mov
fsubs
jb
mov
xchg
inc
xchg
ja
and
inc
subb
jns
les
push
loope
dec
dec
dec
data16
bound
insb
and
add
aas
insb
testl
icebp
add
enter
int
fsub
mov
fists
out
or
mov
mov
sarb
add
lods
inc
inc
sarl
sbb
xor
shll
out
repz
xlat
inc
sub
movsb
jno
mov
into
cmp
mov
adc
cmp
and
popa
mov
sbb
cmpsb
sub
mov
or
jge
add
push
icebp
into
ret
cmp
mov
mov
or
sahf
ret
stos
mov
mov
rcll
sbb
arpl
mov
add
icebp
addr16
sbb
ljmp
cmp
out
sar
mov
cmp
sbb
vandnps
movsl
mov
push
ret
sub
out
sbb
ret
lahf
jo
ret
push
out
loope
xor
ficompl
std
pop
loope
call
iret
inc
test
jne
mov
sub
ja
mov
sbb
xor
popa
add
sahf
jae
sub
xchg
bound
loopne
inc
or
dec
in
fisttps
pop
add
mov
sbb
pushf
dec
mov
popf
scas
mov
test
sub
pop
mov
mov
jno
addl
inc
cmp
mov
fdivrl
or
pop
add
pop
jle
lahf
or
jge
adc
stc
sbb
add
pop
frstor
scas
cmpsb
push
imul
or
push
pop
sub
scas
loop
jp
ret
les
cmp
sub
jp
push
pop
mov
inc
lods
adc
daa
mov
cmp
inc
mov
dec
inc
notl
xor
hlt
pop
jmp
icebp
push
pop
mov
mov
mov
pop
mov
outsl
mov
dec
xchg
outsb
testl
rorb
push
dec
sbb
data16
xchg
int
jl
sbb
or
mov
adc
out
adc
dec
into
ret
mov
or
push
push
adc
push
outsb
shlb
add
sbb
sbb
mov
dec
mov
pushf
stc
xor
aam
ret
js
adc
pop
or
stc
fisttps
stc
notl
leave
ds
mov
xchg
mov
mov
adc
inc
add
sarl
cmp
scas
sub
xchg
sbbb
xlat
pop
dec
outsb
mov
cwtl
jecxz
dec
sbb
cmp
repnz
push
sub
les
adc
inc
mov
add
fdivrs
pop
add
and
jecxz
icebp
rcll
push
xor
outsb
push
sbb
ljmp
xchg
push
aad
stc
xchg
popa
jbe
add
inc
push
aam
fidivl
add
cmp
xchg
je
mov
cmp
mov
out
scas
or
fnstsw
sub
push
das
sub
ljmp
cmpsl
cmp
add
mov
dec
cmpsb
jmp
xor
inc
fidivrs
mov
mov
lret
fcoms
nop
sub
rcll
jle
outsb
xor
xchg
pop
inc
mov
sub
ret
rorb
jg
pop
imul
out
rcl
sub
lea
test
mov
and
push
mov
mov
test
out
jle
or
cs
notb
fildll
imul
ss
xchg
add
stos
dec
dec
inc
icebp
or
pop
sbb
and
or
test
xor
stos
ficoml
sub
mov
and
int
lcall
adc
xchg
push
dec
jp
add
nopl
pop
sub
xor
push
stc
jbe
ds
mov
pusha
mov
leave
outsl
mov
push
mov
scas
jne
push
movsb
pop
shrl
lret
push
iret
pop
jge
cs
mov
push
hlt
pop
cmpsb
dec
insb
push
lock
bound
adc
xchg
fildll
popf
push
insl
and
std
pop
mov
and
push
mov
mov
cmp
test
mov
sub
ret
xor
das
sub
mov
das
fidivrl
movsb
nop
popf
lcall
jno
sbb
gs
cs
arpl
mov
stc
mov
stc
push
leave
add
push
xchg
cs
inc
pusha
pop
test
mov
leave
inc
fmull
dec
push
subb
or
mov
sub
nop
sub
jg
daa
add
data16
sub
imul
es
jb
and
inc
push
xlat
xor
int3
and
jl
ret
xor
int
cs
xor
rcll
push
ffreep
xlat
sub
push
mov
mov
lods
out
add
inc
jmp
xchg
and
pusha
cs
test
testl
enter
ljmp
pop
push
or
or
jge
dec
jno
das
dec
sub
and
push
xchg
fs
xchg
lret
jle
inc
or
sub
pop
out
xchg
lock
pop
push
cmp
cmp
inc
shr
imul
cmp
dec
and
loop
stos
or
jl
in
rcl
xchg
push
adc
sbb
inc
push
push
jno
fsubp
mov
or
fsts
adc
pop
adc
jbe
mov
fs
mov
outsl
lret
adc
cmp
mov
in
test
ret
adc
xor
xor
pop
pop
adc
cmp
pop
and
jb
xchg
xor
cmpsl
loope
mov
push
jmp
mov
xor
fwait
xor
mov
pop
adc
xor
inc
add
jg
mov
insb
jp
jmp
shll
fs
xchg
arpl
popl
pushl
push
xchg
test
cltd
cwtl
repnz
sbbl
jo
jnp
rcrb
cmp
std
sbb
jnp
jmp
push
jb
popf
imul
sub
sti
stc
jns
ja
lods
dec
fsubr
xchg
inc
aaa
ja
pop
or
fstpl
push
jbe
fwait
insb
xchg
pop
insl
cmp
push
jno
inc
js
sub
push
pop
pop
push
mov
fisubrl
mov
push
pop
call
xchg
adc
lds
and
test
ss
sbb
xor
dec
dec
roll
inc
inc
xchg
ds
test
fsubrs
mov
repnz
in
inc
sub
cld
ss
das
pop
mov
push
inc
test
sub
cmp
push
loopne
sub
gs
mov
dec
lds
xor
push
pop
inc
jns
aaa
stos
adc
add
out
out
and
cmpsl
pop
cwtl
lea
mov
aas
clc
popa
mov
mov
ret
push
and
scas
cmp
jae
lea
mov
xchg
jb
inc
iret
in
roll
jne
in
sub
mov
mov
les
lahf
dec
xchg
sbb
cld
pushf
xchg
popf
pop
push
shll
sub
cmpsb
sbb
int3
arpl
mov
jecxz
je
filds
test
outsl
xor
xor
cmp
imul
mov
out
rolb
ljmp
in
movsb
mov
inc
lods
mov
dec
adc
push
mov
iret
dec
out
pop
mov
jecxz
or
or
cmp
aam
imul
div
lcall
dec
pop
aaa
pop
push
lods
push
cmp
sbb
mov
pop
jge
popa
notl
testb
mov
jns
bound
jbe
adc
xchg
hlt
cwtl
push
loop
add
jne
ljmp
pop
push
nop
fdivrl
add
shlb
mov
or
inc
rol
sahf
push
add
add
push
outsl
in
lahf
cmp
xor
or
or
inc
inc
and
adc
stc
fcmovnu
jb
sub
xchg
xchg
js
ja
mov
sub
test
mov
mov
add
shll
xchg
lret
mov
and
sbb
add
mov
in
faddl
push
gs
xchg
push
or
sub
icebp
jae
roll
mov
mov
or
mov
fsubrs
mov
jbe
dec
lods
cmp
into
mov
and
dec
fsubs
daa
lret
cmc
les
outsb
gs
fmull
leave
movsl
shrb
ret
mov
or
insl
and
andb
cmc
fimuls
xchg
and
icebp
pusha
mov
fs
sbb
sarb
jne
xor
and
jb
mov
xor
jmp
pop
psubb
inc
lcall
leave
mov
cmp
pop
repz
inc
cmp
fwait
cmpsl
mov
daa
push
or
fisttpll
mov
add
rclb
dec
sub
loop
fxch
fistps
pop
fildl
loop
pop
scas
add
loop
mov
icebp
push
fcompl
add
imul
and
loop
xchg
test
lret
mov
lcall
and
pop
leave
sarb
sub
xor
inc
ljmp
pop
xchg
loope
aad
sahf
dec
imul
mov
and
sbb
jle
inc
test
sub
mov
push
jb
jb
mov
loopne
notl
push
lret
push
xchg
mov
jp
cmp
xchg
test
pop
xchg
aas
xchg
aam
jge
insb
jne
pop
mov
ds
fisttpl
lret
jle
nop
fadd
mov
lods
mov
sub
bound
cmp
push
pop
mov
fldl
popf
rcrb
jmp
stos
add
cltd
mov
add
shrl
sub
jae
std
sbb
fsubrl
or
xchg
pop
out
push
adcb
mov
push
cmp
imul
xor
sbb
out
cs
pushf
mov
je
shld
mov
jae
int3
setg
stos
inc
icebp
push
bound
xchg
mov
dec
pop
nop
mov
jmp
sbb
xchg
inc
mov
ret
cmp
popf
lret
mov
lods
enter
mov
dec
hlt
sub
and
notb
dec
inc
sub
cmpb
push
sbb
pop
mov
mov
or
push
sbb
add
inc
fstps
std
fstps
fwait
adc
jne
pop
stos
popf
adc
mov
fldl
pop
in
adc
xchg
clc
outsb
ja
push
outsb
xchg
into
pop
in
mov
xlat
aam
jno
mov
insb
popf
dec
mov
mov
in
cltd
jnp
add
xlat
jmp
sbb
ret
add
mov
popf
sub
mov
popa
mov
pop
jl
cmp
cmpsl
aad
out
push
lahf
lret
aam
ja
gs
xor
add
fcoms
xchg
sub
inc
ret
jbe,pt
pop
mov
inc
test
push
inc
loope
dec
out
jae
sahf
hlt
xor
cmp
stc
leave
push
inc
sahf
fidivrs
lods
push
inc
and
pop
xor
cmpsl
mov
mov
adc
mov
mov
xchg
sub
dec
add
outsl
xor
iret
pop
pop
xor
test
pop
cld
jl
mov
outsb
add
pop
cmp
ret
repnz
push
enter
cmp
jl
ss
das
sbb
movsl
or
cwtl
aaa
popf
inc
je
adc
mov
pop
call
jb
push
xchg
xchg
add
add
push
adcl
mov
pop
into
test
dec
adc
sbb
mov
mov
sub
sub
adc
push
xlat
sbb
mov
jbe
ja
sub
jge
cld
movsb
or
in
testb
fucomip
daa
nop
insl
pop
sub
fwait
clc
stc
adc
add
mov
mov
pop
push
imul
mov
mov
addr16
jbe
lea
in
lods
leave
sub
shlb
sbb
jo
xchg
push
xor
jae
or
push
jmpw
clc
add
sti
les
xchg
push
or
movsl
test
mov
outsl
movsl
jns
xchg
daa
test
pushf
xchg
add
inc
lcall
rcrb
push
ja
call
lret
pop
inc
jg
mov
or
jnp
cmp
cmc
popf
cwtl
scas
cmp
xor
cmpsl
lahf
sub
out
insl
pop
or
movsl
loopne
xchg
mov
into
push
fs
in
pop
mov
adc
lcall
das
mov
cld
in
fucomp
mov
xor
int
cld
test
cmp
jg
movsl
icebp
sub
push
push
jo
pop
or
divb
dec
aad
push
push
fildll
cli
loope
fsubrs
pop
out
mov
push
lcall
and
lea
daa
jae
push
inc
lret
into
sbb
pop
inc
pop
aaa
inc
lds
sbb
hlt
push
xor
xchg
jbe
int
push
loopne
outsl
inc
subb
shll
outsl
inc
pop
scas
nop
inc
outsl
je
jp
cs
adc
scas
loop
lret
and
stc
jmp
push
or
mov
cmpsl
ret
push
push
mov
inc
movsl
mov
dec
adc
push
mov
mov
cltd
movsl
popf
and
and
test
sub
sbb
fs
subl
sub
nop
lret
inc
addr16
mov
stc
outsl
jno
mov
rclb
fwait
cmc
cmp
int
leave
push
and
jne
ja
push
mov
dec
enter
cmpsb
in
pop
std
xchg
pushf
inc
filds
mov
xchg
shll
ds
in
aam
movsl
xchg
push
sub
jp
fldt
shl
out
jne
rclb
sti
mov
dec
adc
addb
cmpsb
mov
movl
xchg
lret
xor
and
or
dec
jno
mov
inc
imul
aad
sbb
and
mov
repnz
in
jge
aaa
pop
or
insl
outsb
mov
ficoml
lds
mov
push
jp
inc
xchg
push
sbb
xor
shr
pop
jne
add
xchg
inc
mov
repnz
ss
push
fwait
into
pop
stos
sbb
int
loopne
or
fcmovnbe
into
inc
xor
rol
adc
or
inc
icebp
push
and
sub
sbb
enter
int3
inc
lock
xor
push
insb
pop
and
jecxz
add
stos
add
shr
daa
sub
sbb
jmp
in
or
dec
push
pop
call
daa
inc
mov
jns
js
mov
and
push
mov
aas
cmp
push
mov
ret
xchg
jge
loop
or
xor
fmuls
maskmovq
imull
insl
sbb
push
xchg
call
sahf
lods
mov
adc
out
mov
sub
dec
jae
nop
pop
push
scas
push
shl
add
mov
call
mov
push
pusha
inc
sbb
and
fs
scas
in
dec
mov
lods
xlat
sub
cmpsb
fidivrl
aas
cmp
xchg
xchg
dec
jbe
int
mov
sbb
xorb
inc
fsqrt
mov
mov
adc
xor
popa
dec
mov
fnstcw
lret
xchg
jp
in
adc
jb
or
lcall
iret
outsb
aas
xor
cs
mov
add
lcall
pop
fdivl
fucom
stos
cld
mov
dec
jle
dec
movsl
and
je
pop
inc
push
repnz
push
hlt
lahf
and
cmp
sub
push
jnp
test
outsl
mov
push
add
push
sbb
push
pop
sub
cmp
insl
cmpsl
loop
ret
sub
lahf
mov
or
mov
cld
mov
cmp
push
pop
xor
push
ss
mov
cmp
shl
inc
imul
fbld
sub
sbb
jmp
out
insb
fadds
and
xchg
fbstp
and
mov
std
outsl
sbb
mov
add
lret
test
lods
push
sbb
mov
lds
xor
fwait
cmp
mov
pop
movsl
js
adc
hlt
pop
lea
inc
fcom
inc
add
ficomps
pop
ret
cmp
rcrb
aam
nop
es
dec
xchg
js
push
adc
sbb
push
popa
push
hlt
stos
test
fwait
in
rcll
or
add
xlat
pop
jg
dec
enter
mov
iret
xchg
lret
pop
push
lahf
int
dec
xchg
fdivp
adc
cltd
mov
out
jae
push
add
movq
inc
adc
cmp
jp
sub
insb
xor
loop
mov
pop
jmp
in
out
or
sbb
into
push
ds
inc
adcl
cmc
pop
sti
lods
pop
cmpsl
lods
icebp
ds
dec
push
jne
je
lds
sbb
ljmp
adc
pop
mov
jnp
lea
pop
jo
xchg
je
xchg
jle
daa
jg
enter
mov
out
roll
xchg
push
pop
and
pop
xchg
lret
jp
aad
ja
sub
cmpsl
mov
push
out
sub
inc
iret
add
cli
and
aad
mov
xor
xchg
dec
fstl
dec
sub
sbb
xchg
xlat
das
scas
pop
dec
insb
add
mov
lret
adc
pop
mov
icebp
dec
in
lea
in
lods
ret
mov
dec
sahf
out
add
push
xor
xor
int
mov
test
dec
and
dec
movsb
mov
sub
mov
fs
pushf
cmp
insl
mov
pop
jmp
xchg
dec
out
jae
and
inc
cmp
movsl
adc
mov
mov
mov
dec
mov
mov
out
pop
fcoms
xchg
mov
ficoms
aaa
push
stos
mov
push
pushf
stc
push
imulb
mov
iret
mov
arpl
push
or
imul
fwait
dec
add
push
or
inc
lcall
call
std
or
mov
pop
dec
mov
sbb
or
shll
jno
pop
ds
mov
push
add
and
fstpl
cmp
xor
testl
adc
movsl
mov
pop
jle
aas
sti
push
sub
jae
adc
inc
dec
movsb
cmpsl
sahf
sbb
sub
iret
cmpsb
in
cmp
sahf
andb
es
nop
push
mov
sub
mov
dec
jg
adc
xlat
insl
jns
stos
mov
test
or
lcall
xchg
andb
jge
jo
mov
jb
bnd
mov
cltd
mov
xchg
dec
test
pop
cli
int
mov
stc
popf
lods
and
pushf
popf
jns
dec
nop
icebp
cmp
test
jne,pn
aam
movsl
in
testb
xchg
or
mov
and
jecxz
out
sarl
mov
insb
aad
movsb
mov
cld
les
push
jb
inc
nop
mov
repnz
jge
pop
and
loopne
mov
mov
icebp
dec
stc
aam
addb
cmp
jb
dec
fsubl
sub
lods
mov
test
loop
rolb
int
rorw
lahf
push
imul
int3
gs
imul
sbb
arpl
xchg
xor
movsb
xchg
das
xchg
nop
and
aam
mov
add
repz
loopne
push
sub
adc
out
mov
je
sbb
ss
jo
push
mov
jae
ror
and
cltd
rcrb
scas
mov
sbb
jns
sti
rcr
xchg
pop
sbb
sbb
lcall
test
lcall
shrl
icebp
popf
pusha
sub
pop
call
push
dec
mov
idivb
inc
shrl
dec
gs
subl
dec
lds
or
sub
inc
es
pop
push
rolb
xchg
cmp
xchg
imul
mov
aam
testl
notl
aad
mov
mov
push
mov
jns
bound
inc
push
adc
call
cli
jb
sbb
lret
mov
push
or
sub
stc
add
fdivrp
dec
mov
movsb
jno
repnz
cmp
sub
dec
fisttpl
push
rcr
mov
jge
loopne
sub
mov
pop
pushf
idivb
idiv
stc
fstp
loop
ret
mov
iret
lea
xlat
es
adc
shll
outsl
xor
mov
xchg
gs
scas
and
dec
mov
add
cmpsb
add
hlt
enter
push
jmp
cmpsl
pop
pop
fisubs
in
shlb
push
clc
stc
dec
pop
cli
sbb
in
pop
xchg
sub
fildl
xchg
or
lock
popa
fisubl
cmp
movsb
mov
das
xchg
stos
mov
mov
imulb
lods
imul
cmpsl
popf
mov
pop
pop
jns
xor
or
jp
mov
enter
mov
fsubl
loope
cmpsl
in
add
ret
adc
sahf
or
add
int3
add
mov
pop
in
aam
xor
aas
jno
nop
cmpsl
mov
lea
mov
pop
out
arpl
popa
xor
mov
xor
test
and
and
rcr
mov
les
movsl
mov
cwtl
push
inc
push
jbe
pop
pop
shlb
add
xchg
inc
sub
call
push
mov
jp
jle
mov
and
inc
pop
lods
mov
adc
ds
or
cmp
imul
mov
sbb
dec
incb
sahf
lret
movsb
sbb
jge
xor
sub
aad
fidivrs
sbb
lret
arpl
clc
mov
fists
fisubrl
out
repz
into
mov
jg
lret
add
repnz
ficoms
dec
sub
sarl
cmp
fsts
push
add
mov
or
add
pop
pop
push
mov
push
pop
xor
sahf
out
push
mov
inc
or
pusha
adc
call
mov
inc
jns
ljmp
fcom
int3
adc
mov
push
sbb
dec
shlb
inc
cs
and
shll
jno
repz
nop
rorl
adc
aam
mov
out
cltd
rclb
enter
daa
add
sbb
dec
pmullw
add
xlat
and
mov
cmc
movsb
jl
pop
adc
jl
sti
aas
into
jle
inc
jge
xchg
dec
dec
mov
ffree
mov
cmc
sbb
ja
jo
jb
imul
imul
push
jne
lcall
or
test
cmp
popl
into
mov
sub
in
mov
insb
push
inc
push
pop
mov
mov
push
add
add
dec
xchg
sub
push
cmp
sbb
int3
jnp
mov
sti
cmp
pushf
or
popf
mov
stc
sbb
das
jae
or
pop
cmpl
popa
in
xchg
mov
pushf
stos
mov
out
call
std
lret
cmp
jmp
mov
jnp
cmp
adc
lds
xor
push
mov
sbb
push
mov
call
xor
push
add
int
ss
test
mov
repnz
movsb
pop
mov
js
cmp
test
cmpl
dec
sbb
iret
and
icebp
cmp
daa
dec
cmp
mov
loope
xor
scas
mul
and
icebp
test
fisubrs
mov
push
out
orl
mov
pop
adc
or
fstp
adc
dec
jmp
or
js
lock
jbe
insl
ljmp
sub
pop
mov
or
push
enter
imul
cmp
push
fucomi
xchg
add
pop
das
inc
push
mov
test
sub
outsb
sti
sub
js
insb
loop
mov
ss
mov
call
lahf
mov
shlb
stos
xchg
cmp
mov
mov
cmp
mov
and
pop
mov
fcoml
je
data16
popa
cmc
hlt
cld
out
inc
std
jae
scas
pop
ss
jle
in
jbe
xchg
fwait
push
lds
movsb
cltd
cmp
push
scas
mov
mov
cmpsb
and
ret
fstpl
clc
lods
aad
lds
mov
sahf
lods
arpl
lods
mov
sti
pusha
rdmsr
sbb
shll
inc
popa
pop
or
cltd
loopne
out
pop
icebp
dec
jno
xchg
into
andl
test
rorl
xchg
aas
push
sub
rep
adc
arpl
rcl
xorl
pop
mov
push
sbb
ret
popa
xchg
rcrb
fcomps
pop
pop
or
enter
scas
mov
das
and
mov
pop
lahf
mov
inc
pop
inc
rcll
test
rclb
adcl
xchg
mov
pushf
stos
daa
lock
mov
fsubr
shl
arpl
sbbl
dec
xchg
push
mov
jp
imul
std
push
aas
inc
xchg
push
xor
xchg
insb
xchg
rolb
push
cltd
loopne
shlb
pop
inc
mov
pop
jno
lock
out
fsubs
and
ret
or
call
or
mov
stc
fld
scas
arpl
push
out
jb
mov
sbb
xlat
in
lock
push
pop
mov
outsl
add
inc
add
pop
in
pop
xchg
jbe
or
test
lret
xorb
test
inc
mov
or
mov
push
push
das
mov
jg
lods
mov
dec
cmc
sbb
outsb
sub
gs
and
mov
lods
ja
inc
fwait
sbb
push
adcb
xchg
dec
cmc
jb
in
and
push
add
push
pop
icebp
adc
fadds
mov
pop
out
lds
or
add
test
loopne
mov
jge
mov
int
mov
mov
pop
lock
dec
and
mov
popa
and
pop
fsubl
out
cmpsl
mov
push
gs
pusha
xor
daa
dec
xadd
arpl
ljmp
jmp
jle
rolb
push
mov
dec
mov
insl
nop
aam
dec
sub
out
lret
jg
and
lahf
adc
xchg
gs
xchg
xchg
js
mov
leave
enter
or
fcomps
fs
roll
cmp
cmp
std
addr16
jo
and
into
jno
loop
insb
sarb
inc
push
cmp
mov
push
sbb
inc
jne
xor
add
cs
mov
mov
dec
push
mov
mov
orb
dec
je
lret
cmp
add
sbb
lds
xchg
clc
sahf
arpl
fabs
inc
insb
popa
int3
inc
push
or
test
out
pop
cmp
xchg
mov
inc
sti
mov
lods
or
push
repnz
je
or
cmpsb
adc
repnz
mov
enter
push
mov
jle
inc
aad
imul
mov
sar
int3
imul
lret
dec
test
test
adc
pop
xor
hlt
jae
stos
xchg
add
arpl
cs
xor
sbb
and
mov
mov
bound
dec
pop
fwait
imul
repz
mov
out
dec
or
push
fdivp
inc
or
enter
sbb
cmp
lcall
dec
cltd
outsl
enter
cs
pop
jae
cld
notb
enter
call
clc
std
lcall
add
inc
in
shll
dec
xchg
push
sub
and
inc
popf
jecxz
adc
mov
dec
rcll
push
jne
cmp
pop
scas
cwtl
xchg
fidivrs
mov
test
rcrb
mov
into
xchg
push
mov
fwait
push
push
loopne
sub
cmp
fcompp
push
sbb
sbb
scas
mov
pusha
adc
pop
orl
or
push
fisubrs
mov
pusha
jle
pop
jl
or
pop
push
pop
xor
clc
inc
out
lcall
jb
inc
xor
adc
pop
cmp
out
xchg
loopne
aaa
xchg
push
enter
push
pop
pop
fldenv
xchg
lock
adc
cmp
or
gs
sub
or
outsl
fstpl
scas
das
sti
mov
and
push
lret
cmpsb
mov
out
mov
imul
push
mull
and
addr16
movsl
mov
cltd
popa
adc
push
daa
mov
adc
cmpb
mov
xlat
lea
xchg
adc
jmp
xchg
jae
lock
les
push
pushf
xor
adc
fsub
cs
mov
stc
lds
mov
pop
push
jmp
hlt
aas
mov
stc
lock
pop
pop
add
loopne
lods
inc
daa
call
mov
dec
push
lods
fnstsw
inc
jmp
dec
mov
xor
dec
push
jb
push
and
mov
in
test
jp
insl
fsubrl
in
cs
fcompl
xchg
rclb
andb
jno
xchg
add
jle
adc
mov
xchg
popa
mov
cmp
adc
jg
out
pop
adc
xchg
dec
cmpsb
ret
mov
dec
inc
dec
jmp
icebp
imul
and
mov
jge
lcall
das
cltd
lcall
sub
loop
xchg
or
scas
mov
xchg
xchg
jle
mov
push
mov
sub
sbb
pop
lods
cmc
inc
pop
jecxz
jbe
sub
pop
jne
cmc
call
lahf
mov
ret
aam
pushf
faddl
jl
fsubs
and
or
lcall
imul
xchg
cs
mov
fwait
andb
loope
daa
sahf
push
ss
sbb
ljmp
mov
ja
or
fcmovbe
lret
pop
mov
cmpb
pop
mov
fstp
pop
sbb
aad
xchg
adc
mov
test
inc
test
fucomip
insb
arpl
push
jp
or
add
fdivr
rclb
cmp
inc
movsb
adc
cwtl
out
aam
push
nop
aam
jae
or
hlt
sbb
lahf
cmp
mov
adc
dec
shrb
idivl
icebp
add
nop
or
mov
pop
sti
sbb
hlt
mov
jge
jns
les
sub
mov
dec
shl
test
lock
pop
aas
testl
mov
popa
inc
pop
stc
cmp
lock
dec
ss
out
iret
das
pop
fdiv
shll
dec
mov
addr16
push
fisubs
inc
movsl
lods
xchg
adc
mov
xchg
push
dec
push
outsl
shlb
push
pop
jne
lret
insl
dec
stc
je
les
sarl
jo
subl
inc
ljmp
mul
add
add
inc
ret
or
jp
inc
cmp
mov
mov
xor
jne
int3
lahf
rcll
push
cmpsb
mov
sub
arpl
fidivl
inc
push
push
stos
dec
data16
scas
adc
push
xor
push
xchg
cmp
mov
sbb
and
outsl
out
das
xor
enter
fistps
adc
sbb
push
orb
outsl
push
ret
push
push
sub
jns
jecxz
push
popf
jmp
sbb
icebp
orb
inc
bound
insb
dec
mov
mov
out
mov
mulb
cmp
mov
push
cmp
out
test
pop
mov
add
stos
xchg
ds
mov
push
push
jmp
aad
leave
jbe
jecxz
xor
mov
sti
pop
dec
shlb
adc
mov
jbe
clc
and
push
and
bound
imul
or
adc
leave
arpl
js
inc
pusha
ljmp
add
rorl
insb
jmp
cmp
dec
push
int3
pusha
popf
aas
jle
or
xchg
jle
loope
test
insb
outsb
imul
jbe
mov
into
lea
dec
cli
addr16
sbb
in
pop
lods
xor
jae
push
jbe
push
xor
or
jge
jge
cmp
ss
inc
dec
jl
dec
cmp
ss
inc
lret
dec
dec
pop
cli
movsb
pop
les
xor
pop
and
xchg
std
xchg
xor
xchg
xlat
in
xchg
mov
test
pop
jge
push
lods
adc
mov
and
std
in
push
push
push
sub
jne
frstor
ds
pop
mov
int3
inc
out
push
xor
jnp
mull
ss
adc
add
arpl
sub
push
inc
sub
cmc
test
mov
or
ret
pushf
push
ljmp
adc
jle
mov
xchg
mov
in
es
sbb
mov
cwtl
pop
aam
in
push
mov
mov
loop
ljmp
cmpb
and
mov
push
xchg
bound
sub
xchg
sbb
push
cmpb
jmp
cmpsb
jae
push
mov
mov
inc
mov
js
add
les
dec
dec
inc
icebp
adc
cmp
ss
push
nop
insl
pop
xchg
ret
xor
loop
ret
push
inc
xorl
inc
xor
in
imul
inc
or
je
popf
mov
addr16
imul
sbb
rcrl
mov
cmp
mov
jle
inc
dec
and
pop
add
and
cli
pushw
xchg
add
add
ljmp
sti
pop
lcall
imul
mov
lret
dec
dec
pop
sahf
jae
daa
cmpsl
jno
les
push
xor
jno
dec
push
add
lea
jno
inc
push
xor
dec
mov
push
rcll
pusha
push
xchg
lret
in
lds
mov
ret
cmpsl
aas
push
mov
or
mov
mov
mov
and
lahf
adc
sbb
mov
add
hlt
addb
push
mulb
mov
mov
mov
jne
sti
lahf
inc
sub
rcl
pop
push
inc
loope
xchg
sub
fdivrl
jecxz
adc
outsl
das
sahf
cmp
cmp
in
lods
mov
or
sub
cld
mov
int3
hlt
adc
div
cmp
cmp
jns
xchg
in
sbb
push
into
pop
sub
add
fucomp
stos
lcall
iret
mov
ret
testl
pop
add
imul
xchg
cmp
insb
adc
cmp
call
xor
adc
popa
in
xchg
aaa
les
mov
push
js
ret
jne
aad
pop
inc
fistps
xchg
inc
xchg
adc
or
or
inc
orb
sub
pop
test
inc
xor
aas
lods
and
adc
icebp
mov
xor
lods
movsb
mov
faddl
or
xchg
push
pop
mov
popf
int
xor
arpl
lea
fcmovnb
scas
mov
jmp
loop
mov
sti
jbe
push
push
push
enter
sbb
mov
fisttps
mov
dec
mov
jecxz
jp
jne
mov
mov
cmpsb
cmpsl
mov
scas
std
jno
and
int
pop
and
push
and
dec
sahf
gs
outsb
iret
mov
cltd
psubusw
mov
lods
es
mov
stc
sub
sub
cmp
call
lods
mov
sbb
iret
sti
pushf
jmp
sbb
inc
loop
sub
pop
std
dec
mov
xor
cwtl
cmpsl
pop
pop
jmp
out
xchg
pop
add
adc
pop
mov
imul
push
icebp
xchg
cmp
aas
or
into
clc
and
ss
lods
jle
lcall
dec
inc
cmpsb
mov
sbb
leave
dec
push
dec
or
mov
xchg
add
lret
inc
push
fisubl
rcl
adc
add
adc
addr16
jl
mov
popa
jge
pop
push
pop
pop
ss
cmp
je
push
or
adc
mov
dec
fistps
mov
subb
mov
fs
xchg
jae
aas
test
mov
push
mov
bound
loope
xchg
rcl
cmp
pop
mov
xlat
mov
iret
mov
add
push
and
or
mov
int
sub
jmp
stos
ficomps
jg
xor
lcall
jb
arpl
lret
shlb
push
dec
adc
mov
pusha
xor
cltd
or
fidivs
xchg
and
mov
rcrb
fnsave
pop
out
shll
in
mov
in
out
lret
adc
mov
bound
cmp
pop
das
jl
dec
jnp
or
lock
dec
sti
lcall
scas
cmpsl
mov
in
dec
jmp
add
andps
arpl
push
xor
je
and
xchg
mov
fsts
in
mov
ja
fnstcw
mov
out
stos
jno
gs
stc
fcomps
or
add
je
shl
or
mov
adc
outsb
pop
inc
pop
pop
test
mov
dec
ffreep
call
mov
pop
push
and
lahf
popa
push
faddl
dec
cltd
sub
add
icebp
in
hlt
cmp
arpl
mov
les
daa
movsl
stc
lds
fs
mov
stc
scas
stc
jle
mov
mov
les
pop
mov
addr16
add
mov
dec
pop
pop
xchg
mov
xor
out
dec
pop
ret
hlt
loop
inc
scas
ret
rcrb
cld
mov
hlt
lock
sub
ror
jge
fs
mov
mov
jb
outsb
xor
lods
jge
faddp
arpl
lods
jp
and
call
and
loopne
in
cmpb
xlat
mov
or
lea
xchg
fsubrp
gs
pmuludq
test
leave
clc
sbb
ret
in
arpl
xor
jae
adc
inc
push
fdivs
out
outsb
test
xchg
xchg
mov
cmpsl
xor
push
adc
gs
je
mov
in
sbb
idivb
pop
cwtl
dec
xlat
sbb
mov
out
xchg
je
maxps
insb
js
jae
sub
mov
add
jns
cmp
cmp
scas
aad
not
jg
mov
xchg
cmpsb
mov
inc
das
rcr
enter
push
iret
add
pushf
lcall
sub
test
outsl
jb
insl
and
push
add
pushl
mov
clc
sarl
loope
movsl
jle
cmovp
rcrl
add
pop
loope
dec
dec
and
pop
xchg
cltd
or
out
xchg
sub
sbb
test
push
enter
pushf
jno
sub
and
xor
loope
sbb
daa
test
arpl
rolb
mov
xchg
lods
push
inc
xchg
add
xchg
adc
dec
sbb
inc
pop
lahf
pushl
outsb
push
cld
in
pop
into
sub
ds
add
ljmp
xchg
pop
xor
jg
jns
cmp
xor
idivl
adc
popa
sahf
in
mov
xor
addr16
and
mov
pop
adc
pop
das
push
inc
dec
test
aad
push
icebp
icebp
scas
stos
cmpsw
mov
pop
hlt
shlb
push
mov
stc
sub
stos
sub
jp
mov
fsubrs
pop
xchg
cmpsb
mov
scas
shrl
lea
movsl
mov
xchg
xor
lods
int3
dec
pusha
mov
add
stos
inc
pop
out
in
mov
cmp
lea
mov
fidivl
xlat
jbe
sub
and
jbe
aam
sbb
test
pop
lds
add
and
cmp
cmp
les
jmp
enter
push
lret
xchg
pop
adc
jge
pop
lea
sub
in
add
xchg
jbe
fnsave
ret
xor
outsl
or
pop
je
dec
rcrl
sub
scas
push
repnz
push
imul
enter
lods
cld
lahf
pop
pushl
hlt
or
jmp
pop
lahf
cmp
ret
enter
and
fcomi
je
xor
xchg
inc
cmp
pop
inc
and
push
sbb
fstpl
xchg
mov
mov
mov
mov
xchg
sub
stc
lret
xchg
jnp
mov
sbb
call
mov
lea
andl
xor
adc
mov
int3
out
movsl
push
or
dec
mov
fidivl
dec
push
xor
mov
mov
outsb
mov
inc
call
adc
lods
leave
sbb
dec
lcall
jg
dec
push
sbb
mov
sbb
outsb
pop
les
push
int
fwait
rolb
data16
sbb
sbb
mov
addr16
fimuls
adc
in
rorl
sub
out
out
test
push
repz
clc
lods
loop
inc
push
aad
cmc
push
mov
fmul
push
insl
fwait
int
xchg
cmp
andb
in
push
cmpsl
adc
sub
arpl
leave
call
push
adc
lock
rclb
jo
aam
dec
xchg
inc
xchg
icebp
mov
mov
ljmp
call
leave
sub
ds
gs
or
arpl
in
loop
in
dec
or
adc
and
lret
leave
jo
outsl
sbb
hlt
xlat
xchg
cmpsb
jp
outsl
or
jnp
clc
or
int
cmp
push
je
pxor
lret
in
pop
sub
loopne
loope
inc
sub
lods
adc
push
pop
ret
popf
ret
dec
mov
jo
andl
mov
movsb
mov
or
dec
shrl
int
cmp
cwtl
ret
ljmp
out
clc
push
and
and
mov
or
sarb
daa
and
sarl
cmpsb
out
test
pusha
popa
rcrb
cmp
mov
insb
out
popl
test
adc
getsec
mov
push
in
cs
cltd
inc
out
lock
test
es
lcall
mov
and
add
sbb
ret
xchg
sbb
fidivl
adc
gs
mov
xchg
and
and
jecxz
fldenv
les
or
aam
xchg
cmp
ret
adc
xchg
pop
jno
popf
loopne
jl
mov
fs
subl
push
xchg
mov
pop
adc
jo
inc
push
test
mulb
aas
in
inc
and
arpl
jecxz
popa
jo
jae
loop
push
daa
dec
out
push
inc
mov
pop
jecxz
repz
shl
orb
adc
lods
lock
dec
jnp
mov
jg
cltd
mov
fidivs
xchg
add
subl
imul
cwtl
mov
adc
and
test
lret
mov
pop
loope
dec
add
lahf
ficomps
lods
pushf
mull
jp
out
fsubr
push
dec
xor
or
push
sub
or
roll
mov
aaa
pushf
test
js
shrl
inc
add
aam
and
jp
sbb
jb
jno
add
int
gs
adc
pusha
jnp
xchg
scas
dec
adc
stc
mov
mov
xchg
xchg
cmpsl
aam
jnp
xchg
out
xchg
pop
or
addr16
jp
and
aam
movsb
add
shl
mov
xor
and
lea
aam
stos
shlb
imul
mov
mov
cli
outsl
mov
popa
test
lahf
cmpsl
pusha
hlt
mov
mov
psllq
pop
jmp
inc
inc
rorb
mov
pop
mov
imul
push
mov
out
imul
fldl
sub
movsl
sti
icebp
sub
jns
mov
mov
sub
lock
mov
jns
stc
mov
testb
mov
ret
pushf
cwtl
cmp
sub
mov
dec
push
sub
xchg
mov
xchg
or
cmp
cmp
and
mov
test
mov
cmp
jp
mov
sub
test
cltd
add
cmpsl
sbb
enter
std
loope
cli
push
sub
mov
cmp
mov
js
jg
jle
and
aas
imul
ss
inc
mov
jecxz
sarl
dec
pop
arpl
in
or
jns
pop
fsubrl
mov
jge
mov
pop
cs
sbb
imul
jge
ljmp
icebp
cmp
lahf
push
add
test
mov
inc
adc
sbb
out
jns,pn
sub
popf
lea
scas
test
mov
xchg
js
xor
idivb
add
mov
add
stc
test
xor
push
mov
bound
popf
pop
test
loopne
int
popf
fstpl
mov
sar
into
popf
cmpsb
mov
nop
in
shl
push
add
add
js
mov
jno
cmc
jns
mov
cmpsl
sbb
push
lds
fadd
inc
dec
pop
cmp
jmp
xor
and
imul
test
add
pop
lret
lods
jno
pop
movsl
mov
dec
imul
xlat
pushf
rclb
enter
xor
pop
sbb
dec
bound
iret
cmp
fidivrs
xchg
xchg
movsb
popf
mov
movsl
inc
stos
pop
test
leave
jmp
dec
icebp
sbb
pop
xorb
cmp
jb
sub
mov
sub
shrb
movsb
dec
cmpsl
stos
or
xorl
jno
cmp
loope
inc
pop
and
mov
cmpsl
sub
mov
dec
add
mov
push
loop
orl
dec
jbe
mov
movsb
fisttps
mov
jo
jns
lret
movsl
lock
jns
cmpsl
lahf
bound
fistpl
push
fcoms
and
testb
inc
add
sar
adc
ret
pop
and
jbe
shrl
xor
adc
push
cmp
das
or
push
ja
mov
or
fiaddl
scas
xor
fldl
dec
sub
inc
push
shl
mov
push
xchg
xlat
push
mov
test
sub
outsl
stos
push
fs
ss
push
fs
jp
dec
cmp
pop
push
hlt
sti
add
and
hlt
pop
pop
sub
xchg
mov
and
sahf
nop
push
imulb
inc
adc
push
sub
inc
test
lret
sbb
pushf
or
repz
cmp
or
lcall
pop
cmp
sahf
mov
ret
shll
jmp
stos
hlt
pop
lcall
lods
movsb
sub
loope
xchg
outsl
mov
loop
ret
and
jmp
imul
xchg
fbld
fcomip
sbb
push
push
les
xlat
add
movb
nop
push
push
repnz
mov
cmp
mov
ficompl
jecxz
adc
dec
sbb
xor
mov
xlat
pushf
xlat
ljmp
rolb
pop
es
mov
aas
push
fidivs
bound
mov
ss
shll
sub
mov
mov
mov
shrb
mov
pushf
cmc
mov
sbbl
add
out
fists
popa
fs
jbe
sub
or
xchg
or
pop
xor
jmp
sub
repnz
add
sbb
int
mov
jno
dec
jle
mov
les
loope
fs
lret
fwait
into
je
mov
stos
jnp
xchg
lods
hlt
aad
js
out
pop
push
test
fstl
lcall
jle
and
lock
inc
mov
xchg
jb
sub
iret
cmpl
xor
loopne
fyl2x
dec
das
cmp
popf
lods
mov
mov
fisubs
dec
les
fsub
xor
mov
sahf
mov
jp
jecxz
jb
data16
mov
adc
jp
imul
xchg
ffree
arpl
aas
cmp
sub
push
mov
call
je
jmp
repnz
scas
jae
fwait
cmp
es
call
negb
or
insl
test
and
test
popf
fnsave
dec
add
pop
mov
pop
data16
jno
ficompl
mov
sahf
pop
push
mov
inc
and
loop
adc
jns
out
or
stc
push
stos
orb
mov
push
lods
ds
mov
roll
and
outsl
pushf
and
mov
mov
xchg
pushf
xchg
cmpl
negb
push
jae
push
aas
jl
mov
mov
sbb
xor
mov
out
xchg
int
lds
cwtl
sub
mov
ret
cmpsb
and
and
fbld
loopne
aad
cmp
and
dec
cmp
mov
jns
cli
and
ficomps
cmp
repnz
xor
xchg
mov
lock
mov
rcrl
std
mov
shlb
movsl
jmp
inc
nop
dec
test
inc
inc
push
dec
adc
mov
into
mov
add
xor
mov
mov
sub
insl
movl
jmp
enter
cmp
adcb
mov
xor
enter
add
mov
inc
and
sbb
dec
dec
daa
stos
test
sbb
or
xor
mov
std
loope
cmp
dec
lret
sub
jae
or
in
fisttpl
addr16
lock
aaa
loope
mov
xor
popf
popw
cld
sub
call
jno
push
movsl
inc
pop
in
pushf
push
fwait
std
inc
add
mov
ficoml
add
scas
add
lods
mov
pop
cmp
int3
pop
popf
mov
les
es
fdivrs
loop
outsb
adc
xchg
jle
pop
mov
push
iret
mov
imull
sbb
outsb
call
sub
pop
rorb
negb
cmp
lods
call
test
mov
lock
sub
lods
aas
and
push
sbb
lcall
sub
mov
push
jmp
ljmp
bound
inc
push
lret
and
pop
movsb
mov
out
mov
das
dec
aas
xchg
in
inc
add
dec
nopl
jecxz
sub
mov
adc
cmp
add
mov
repnz
mov
mov
repz
into
sbb
inc
mov
stos
and
pop
push
arpl
adc
lods
sbb
push
push
ret
call
add
xchg
mov
ret
pop
xor
or
push
push
add
pop
in
and
imul
andl
mov
lret
adc
cmp
icebp
or
hlt
inc
lret
cwtl
push
arpl
push
cmp
and
mov
push
icebp
mov
sub
dec
add
mov
sub
cmp
rorl
or
dec
cmp
cld
cld
cwtl
rcr
sub
xor
and
nop
data16
imul
add
addb
xchg
fistpl
and
dec
or
xchg
sbb
sub
repnz
fiaddl
jmp
dec
xor
and
push
inc
xchg
or
mov
daa
lahf
push
data16
or
scas
ljmp
mov
push
loope
xor
xor
aaa
push
in
add
mov
jo
subl
pop
pushf
or
jbe
nop
jbe
and
rcr
mov
dec
stos
pop
stos
xchg
mov
sub
mov
push
sbb
aaa
ret
imul
or
sub
adc
rcll
add
adc
repz
mov
jo
call
adcb
add
cmpsb
inc
hlt
frstor
or
pop
mov
stc
pop
pop
leave
js
test
insb
out
sbb
and
xor
push
sub
repz
roll
push
fnstenv
fstps
mov
inc
pop
mov
fdivs
loope
jb
inc
sbb
xor
push
fdivl
movsb
daa
sbb
xlat
adc
sub
dec
fdivrl
push
xor
inc
divl
sub
int3
dec
das
mov
popa
pop
xchg
push
faddl
add
lret
dec
in
mov
xchg
jbe
inc
add
mov
adc
mov
pop
jo
jp
jmp
jp
pop
into
adc
iret
jo
test
dec
jnp
cltd
mov
sub
xchg
push
lahf
sbb
inc
in
lret
dec
lcall
and
pop
xchg
mov
aas
ds
xor
imul
sub
cmp
mov
mov
mov
jb
sbb
out
adc
mov
stos
jecxz
fadd
sub
mov
lods
sub
hlt
xor
mov
sbb
and
shlb
icebp
inc
repnz
push
and
insl
jns
es
outsb
lret
faddl
sub
adc
out
mov
push
cmp
sub
add
rclb
in
inc
jbe
push
imul
sbb
pop
adc
sub
sbb
or
ja
inc
adc
pshufw
imul
and
scas
or
push
dec
je
ficomps
insb
pusha
test
fadds
adc
lock
testb
push
inc
xchg
sahf
sbb
jbe
pop
lock
push
push
rcl
sbb
ret
add
jle
icebp
imul
mov
jp
mov
add
or
notb
sub
cmc
jo
daa
xchg
xchg
mov
mov
xchg
inc
test
fmull
xchg
inc
push
mov
jnp
shr
dec
into
jns
imul
shlb
mov
push
xor
out
mov
test
pop
push
ret
mov
mov
jno
mov
pop
test
das
lcall
imul
insl
mov
pop
fwait
mul
daa
rclb
inc
dec
pop
sub
stos
lods
pop
cwtl
aam
pushf
add
fistl
jbe
or
adc
xchg
cld
mov
test
in
js
pop
aam
push
sub
dec
mov
arpl
mov
test
and
stos
pusha
add
sbb
or
adc
cmp
ljmp
daa
out
cwtl
pop
mov
out
lcall
add
test
xchg
xchg
mov
dec
rclb
aaa
out
push
loopne
jno
arpl
mov
out
pushf
mov
sub
ljmp
mov
xchg
fildl
imul
icebp
mov
outsb
push
int3
daa
test
jmp
add
repnz
and
lret
lock
add
cli
sbb
dec
mov
test
arpl
mov
jecxz
push
dec
sub
pop
add
int3
jne
mov
stc
repz
out
daa
hlt
jge
or
lods
push
mov
mov
imulb
js
mov
push
jg
into
push
xchg
mov
dec
popf
or
popf
gs
hlt
stos
mov
aaa
sub
imul
and
xlat
in
out
cwtl
lret
fnstsw
leave
lret
out
sub
xor
cmp
adc
rclb
hlt
sbb
dec
push
aas
hlt
cmpps
adc
mov
xor
jp
out
lret
jno
data16
mov
clc
jge
lret
fstpt
int
sysenter
aad
stos
les
fcompl
dec
add
mov
adc
jmp
ja
push
sub
and
pushf
mov
mov
bound
scas
fdivrs
mov
testl
adc
leave
sub
sahf
lret
popf
xor
sti
das
add
lret
and
call
lea
mov
fdivrs
inc
icebp
arpl
dec
das
jge
cmp
and
lock
sub
lret
xchg
and
leave
dec
out
inc
mov
pushf
decb
dec
cmp
push
mov
clc
mov
mov
or
repz
fsubl
push
mov
or
jns
lahf
sbb
jne
push
mov
ljmp
xchg
sub
xchg
les
mov
cmp
or
inc
movsb
add
in
les
sbb
popf
ss
loope
mov
lret
test
cli
faddl
sahf
rcll
cs
xor
mov
jae
ss
push
in
mov
sbb
xor
movsl
and
fstps
repz
dec
add
movsl
loope
hlt
rcrl
adc
pop
dec
shr
fldenv
mov
xlat
pop
lods
loope
je
dec
lahf
les
pop
lock
je
sub
cmc
xor
andb
xchg
mov
rcl
mov
cli
mov
dec
dec
arpl
mov
and
int3
xor
push
paddw
jge
or
inc
adc
add
push
and
and
cld
add
jp
aas
pop
std
xchg
xchg
push
mov
jno
orl
clc
data16
aas
ret
stc
sbb
push
mov
sbb
xchg
sbb
mov
sub
ret
ret
ja
sub
fidivrs
lahf
roll
imul
sarl
pop
scas
into
jp
enter
mov
jle
fcomps
idivb
jae
test
add
push
push
jnp
cltd
imul
int3
shll
in
add
loope
stc
xchg
and
adc
imul
add
cmc
mov
mov
outsb
outsb
call
and
arpl
fidivrs
xchg
sbb
cltd
sub
jl
inc
lret
test
xchg
dec
xor
sub
shrl
popf
sbbb
xchg
xchg
adc
data16
xchg
cmpsb
imul
loop
enter
cmc
cld
daa
or
jmp
pop
lahf
rolb
and
popf
push
push
mov
fadds
outsl
mov
jae
and
popf
into
fnstcw
sub
sub
test
popa
push
inc
lea
xchg
fstpt
mov
mov
mov
fdiv
ja
jbe
cli
repz
out
popa
add
pop
ret
sbbb
aaa
pop
mov
cmp
jmp
jle
inc
pop
jg
outsl
inc
dec
lods
daa
xchg
lods
addl
jbe
add
aad
ret
jl
adc
das
out
cmpsl
stc
addr16
xor
js
mov
pop
adc
je
or
daa
leave
popl
pop
pop
data16
popa
ds
mov
push
pop
into
sub
sbb
mov
test
and
aam
enter
cmpsl
xchg
test
xchg
cmc
mov
pop
inc
add
scas
adc
pushf
inc
stc
cmp
stos
sbbb
in
cmpsl
outsl
mov
push
inc
mov
add
repnz
push
hlt
and
addr16
cmp
dec
mov
sahf
push
call
push
mov
cmp
mov
mov
xchg
pop
test
xchg
std
jno
sub
lods
dec
test
sub
cmpsb
or
dec
dec
das
sub
nop
push
mov
sub
push
push
adc
in
call
add
sbb
jne
loop
and
repz
std
imul
test
test
mov
dec
not
cmc
xchg
cmp
pop
mov
xlat
gs
sub
adc
pop
sub
daa
lret
enter
mov
lea
insl
pop
cmpsb
pop
push
dec
cwtl
and
or
and
cwtl
clc
test
and
mov
bound
and
hlt
scas
and
dec
push
xor
mov
adc
js
fs
mov
jns
in
sti
jbe
rcl
mov
jb
xchg
insb
mov
pusha
mov
pop
cmpsb
arpl
enter
inc
mov
ret
nop
push
mov
daa
jmp
cmpsl
in
lock
ds
adc
lock
cmp
adc
outsl
ficoms
adc
insb
jb
adc
pop
dec
adc
jbe
or
sbb
sbb
xchg
enter
sub
lahf
lahf
rorb
mov
es
jnp
pop
push
movb
mull
cmp
push
orb
sti
and
jns
jb
push
mov
int3
scas
or
dec
ds
xchg
mov
jecxz
test
ljmp
stc
popa
xchg
adc
or
fsubl
jge
aad
fcoms
into
inc
or
sub
pop
and
pushf
sbb
and
out
imul
jp
sub
ret
mov
sub
push
shr
mov
adc
jp
inc
inc
sub
sbb
popf
sti
or
and
pop
lcall
mov
or
outsl
adc
loopne
dec
pop
push
repnz
bound
lret
cmp
gs
push
adc
addr16
adc
pop
add
pop
fisubrl
and
sbb
jnp
scas
and
cmpsb
jbe
jns
xchg
scas
jle
and
shll
mov
test
orb
stos
loopne
jmp
fwait
daa
movb
aad
cmp
cli
xor
aas
pop
lock
orb
lock
ss
push
mov
sub
test
cmp
shlb
mov
js
sbb
jno
pop
or
flds
jns
cmp
hlt
push
dec
mov
inc
pop
sti
test
xchg
adc
repz
dec
mov
test
in
test
fcomps
sbb
gs
pop
xchg
jb
jg
add
cmp
outsb
adc
inc
sbb
mov
push
xchg
loopne
xlat
dec
sub
lret
jl
sbb
sarb
icebp
dec
sti
xchg
cltd
out
cmp
clc
fnstcw
es
push
jbe
cmp
pop
shrb
ja
mov
movl
mov
xchg
adc
cwtl
jno
dec
aas
cwtl
jne
lods
bound
pop
fsts
mov
jecxz
fs
outsl
out
sbb
call
movsl
dec
loope
push
pop
pushf
stos
bound
add
cld
cld
cld
inc
sub
jns
insb
pusha
mov
fwait
loop
cli
in
cltd
inc
pop
addr16
pop
fdivrl
popa
addb
aaa
aam
inc
int
in
andl
sub
stos
xchg
add
pop
mov
ret
loope
fldl
jle
xor
shrb
adc
test
ret
divb
mov
cmp
and
stos
roll
adc
fisttpl
and
shufps
daa
lcall
fsubs
dec
int3
and
data16
pop
pusha
xchg
dec
fisubl
lods
pushf
xchg
jmp
push
sub
mov
fwait
outsl
jae
push
gs
rorb
dec
mov
rorl
inc
pop
shlb
or
xor
jns
add
inc
xor
fidivrs
testb
cmp
jp
push
sbb
jmp
aam
test
popa
xchg
mov
jne
sbb
sub
or
int3
mov
adc
jge
add
dec
jle
int
mov
movsl
les
aaa
dec
fidivrs
out
dec
fadds
aas
inc
bndstx
cltd
gs
es
cwtl
cmp
adc
jns
xchg
int
js
inc
or
dec
cwtl
cmpsb
cmp
stos
fidivl
cmp
fs
and
int
imul
sbb
gs
jns
push
jmp
mov
sub
bound
sbb
push
add
push
into
pushf
movsb
adc
inc
adc
adc
int
pop
jmp
pushf
subl
add
cmp
in
mov
mov
add
mov
adcl
push
jmp
popf
shll
mov
pop
sbb
mov
gs
mov
shll
jmp
in
mov
fidivrs
sar
lock
jmp
std
gs
icebp
outsw
xor
dec
repnz
cmc
imul
fidivs
xor
fcom
add
lcall
jae
and
xchg
sbb
xchg
pop
fstl
aas
in
sub
push
adc
imul
add
sbb
inc
testl
jae
sbb
mov
cmc
pop
sub
stc
fdivr
push
add
push
out
xor
into
mov
adc
insl
sbb
scas
cltd
push
daa
xchg
mov
inc
lods
inc
mov
or
mov
xchg
mov
adc
aas
orb
cld
lahf
test
mov
mov
es
jbe
fimull
je
pop
pop
cmp
mov
jge
dec
pop
and
popa
loop
adc
push
call
pop
mov
jb
jne
jecxz
push
pop
push
bnd
dec
sti
lahf
rcr
ss
mov
xor
adc
nop
mov
cmp
mov
hlt
sahf
lds
mov
stos
shlb
fisttpl
out
or
es
mov
add
jg
or
jle
adc
adc
or
mov
dec
add
in
adc
jecxz
lret
and
ja
mov
dec
gs
loop
call
pop
ror
xlat
jl
cltd
test
sub
out
xor
xchg
mov
mov
xor
test
pop
and
rcr
lcall
xchg
nop
jl
rorb
lods
xchg
fwait
sti
or
enter
inc
aas
or
mov
pop
int3
mov
orl
pop
pop
dec
insl
outsl
jecxz
jb
jp
sub
inc
lcall
cmpsb
movsb
adcl
int
mov
dec
into
push
aad
js
lods
push
mov
xchg
cli
jmp
roll
lock
or
test
fidivrl
pushf
mov
cmp
arpl
jns
pop
into
insl
loope
jne
jp
push
fisubs
ret
std
xchg
sub
loop
std
xchg
or
out
mov
add
sub
mov
xlat
stos
aas
test
dec
movl
sbb
sub
pop
clc
add
xchg
mov
push
add
sbb
ficomps
shrl
push
aas
pop
cli
mov
xor
add
pop
mov
loope
add
lock
sub
aad
pop
cld
cs
aam
out
dec
scas
aad
push
or
les
push
cli
loop
insl
insw
lock
bound
aad
sub
or
jecxz
pop
ds
jbe
out
sub
sbb
loop
dec
loope
push
sar
ljmp
fisubl
sbb
jl
pop
add
ret
dec
fisubrl
cwtl
dec
daa
fstpt
jmp
mov
mov
pop
xor
sub
mov
shll
sar
mov
daa
sti
mov
ret
les
cli
and
nop
xchg
dec
push
dec
cmpsl
or
roll
sarl
push
rclb
rcll
push
jo
inc
push
es
pop
adc
xlat
xchg
mov
jg
cmpsl
dec
mov
fistpl
cmpsl
pop
aas
xor
mov
inc
xchg
mov
js
adc
add
in
loope
sub
jnp
mov
lods
xlat
je
arpl
adc
mov
and
ret
test
sub
stc
add
dec
xchg
lock
ja
add
mov
shll
repnz
sub
mov
jne
test
add
shlb
fsubrs
jnp
adc
sbb
cmpsb
das
lock
fstl
jo
test
ja
loopne
mov
filds
cmp
ljmp
into
or
mov
jb
dec
aad
popf
jge
sub
pop
dec
pop
fstps
lahf
roll
enter
jmp
jnp
sahf
iret
mov
inc
fcomps
push
sub
push
mov
imul
push
daa
push
sbb
push
pop
or
int3
jnp
sub
cld
or
je
xchg
int
jl
jp
or
or
mov
insb
cwtl
sbbl
adc
mov
jg,pt
sub
stos
xchg
xchg
sbb
cmpsb
stos
mov
add
std
out
cmpsl
loop
push
sub
cwtl
aam
xor
icebp
out
idivl
xchg
sbb
clc
out
lock
je
inc
arpl
loop
mov
in
sub
adc
movsl
pusha
addr16
in
movsl
rcrl
xor
inc
push
fwait
movsb
mov
mov
xchg
cmp
xchg
shll
mov
sub
fbstp
sbb
push
daa
int
movsb
loopne
cmp
fs
push
lock
cmp
dec
mov
xchg
dec
arpl
push
pusha
dec
mov
mov
rclb
cmp
cmp
fs
movbe
cmp
lret
xchg
das
sub
dec
xor
jo
into
rorl
gs
cmp
push
cmpl
insb
loope
jle
hlt
lcall
sarb
or
iret
fdivr
clc
or
mov
clc
addr16
lock
iret
adc
enter
mov
stos
inc
lock
or
jns
aad
or
cltd
add
popa
loop
neg
xchg
fsubs
push
cmc
imul
or
jns
ljmp
lret
mov
lods
lods
and
jmp
rcrl
lret
inc
push
movsl
loopne
stos
mov
shrl
test
insb
mov
mov
push
sub
xchg
fucomi
mov
pop
pop
mov
jge
ror
movsb
adc
cmc
jmp
fisttps
jmp
outsl
mov
icebp
mov
dec
mov
stc
aad
lcall
and
pusha
sahf
jnp
inc
pop
xor
in
cmpsb
inc
movsl
sub
xchg
jl
shr
jae
stos
in
pop
lret
fdivr
adc
std
enter
fbld
sub
stos
xor
fwait
cmp
mov
call
sti
mov
lcall
pop
push
xor
cmp
mov
mov
mov
int3
mov
lods
sub
push
shr
fwait
xchg
add
mov
daa
ret
mov
xchg
jbe
inc
add
int
fmul
lcall
jne
xor
mov
cld
mov
call
jmp
mov
jg
and
lods
jle
fdivrp
imul
dec
sbb
push
xchg
jnp
dec
pop
mov
and
xor
or
pop
lret
cmp
scas
stos
dec
inc
inc
dec
mov
xchg
lock
aad
add
hlt
js
and
push
outsl
inc
push
popa
cmpb
cmp
ja
push
ljmp
fiaddl
cmpsb
ja
inc
jne
push
sbb
loope
mov
adc
lahf
sti
xor
xor
jge
jo
inc
sbb
pop
lods
mov
push
pop
xor
imul
rcl
gs
dec
mov
test
mov
in
leave
cmpb
jle
push
mov
pop
and
jo
outsl
hlt
mov
mov
sub
test
das
cmp
xor
cmp
cwtl
cmp
ret
rol
je
ret
shll
sub
fwait
cmc
mov
lock
push
or
and
bound
shll
sar
insl
inc
push
int
leave
jne
push
lcall
or
sub
jns
mov
xchg
sub
sub
jle
into
jmp
lods
int3
rcl
inc
in
pop
inc
das
mov
inc
in
rolb
mov
and
mov
mov
call
ret
inc
or
push
sub
test
push
add
in
imul
xchg
popl
xchg
es
dec
lret
rorl
xchg
or
int3
dec
cmpsl
inc
cmpsl
out
sub
jae
add
ds
aad
cmp
ljmp
xorb
std
ja
mov
daa
sti
mov
fcmovbe
jbe
jbe
sub
mov
cltd
ja
push
add
popf
test
mov
pop
cmp
push
jbe
jne
out
jl
ds
daa
test
inc
push
pop
lds
push
aas
insb
test
and
add
mov
or
lods
and
add
cmp
add
mov
jb
imul
aas
pop
arpl
call
mov
mov
add
psubw
mov
push
insb
lock
add
in
sbb
jb
push
add
fdivl
popa
pop
outsl
loope
xchg
or
hlt
or
mov
mov
in
aaa
mov
mov
add
aam
loopne
jle
or
fiadds
addr16
cmc
mov
stos
jo
testl
fdivs
inc
dec
sbb
xchg
and
fcom
pop
xor
popf
jp
inc
cmc
call
leave
stos
and
push
cld
mov
lret
and
and
push
in
ja
mov
push
or
xchg
sbb
frstor
pushf
add
push
insl
insl
mov
lret
cmp
xchg
ret
fdiv
push
cli
xchg
fsubl
pop
push
lret
clc
dec
sub
adc
pop
pusha
daa
and
cmp
or
insl
test
cmp
jg
repnz
inc
daa
jecxz
sbb
fnstcw
movq
add
rcrl
xchg
sbb
mov
daa
sti
mov
push
xorl
mov
inc
adc
mov
push
pop
sbb
dec
cwtl
mov
scas
repz
std
push
adc
out
lret
test
lock
test
xchg
inc
inc
jne
popa
ret
adc
and
dec
adc
cmc
aaa
shrl
call
push
dec
dec
jmp
testl
negl
jle
bnd
mov
inc
or
fisubs
cld
aaa
add
out
pop
out
ds
push
ffree
pushf
add
popa
in
pop
repnz
lods
push
xchg
cmpsl
dec
std
jb
xor
xor
lods
loope
xchg
xchg
subb
cmp
test
test
and
pusha
sub
fisttps
stos
in
stos
sbb
jle
sub
mov
cmp
mov
ret
dec
into
mov
rep
mov
outsb
adc
jmp
cli
jno
pop
adc
clc
ljmp
daa
dec
push
mov
mov
mov
out
jno
dec
test
sbb
dec
cltd
fs
fwait
mov
xchg
mov
push
aaa
xchg
cmp
push
inc
push
mov
mov
insl
sub
mov
pusha
negl
inc
inc
hlt
push
scas
jecxz
data16
icebp
xchg
hlt
push
je
imul
cmpsb
dec
sbb
rcll
aad
jg
push
mov
mov
hlt
push
dec
pop
out
ret
bnd
bound
int3
inc
sub
jae
xchg
and
leave
or
cltd
std
aad
xor
mov
adc
sub
sbb
jmp
ds
fsubrs
push
sbb
jecxz
mov
insb
jb
inc
mov
int
data16
sti
daa
inc
jmp
inc
jnp
test
mov
outsl
les
pushf
in
inc
aad
imul
mov
xchg
scas
xchg
ds
insl
pop
sub
pop
jcxz
out
rclb
xchg
out
pop
inc
push
sub
sbb
std
popa
int
adc
add
js
out
add
push
push
ljmp
dec
loop
pop
and
add
dec
xor
mov
inc
xchg
addr16
pop
rorl
cmp
push
fnstenv
sub
adc
jmp
pop
bound
mov
adc
cmc
adc
inc
nop
mov
adc
push
jmp
or
cmpsl
sti
test
rorb
and
aas
stc
mov
in
xchg
lea
ljmp
data16
push
hlt
pusha
adcl
mov
xor
sub
mov
push
call
outsb
shr
pop
dec
outsb
icebp
popf
popf
aad
gs
cmpsb
cmp
cmp
and
sbb
sbb
sarl
adc
mov
xchg
pusha
jbe
jnp
mov
call
pop
rolb
movsb
fisubrs
dec
add
mov
mov
mov
adc
xor
aam
push
sahf
jno
add
outsl
movsl
lret
shll
scas
loopne
lret
cwtl
repnz
push
repnz
es
push
dec
je
icebp
negl
jns
aaa
dec
pop
cwtl
lret
xlat
push
repnz
in
inc
pop
add
pusha
xchg
stc
out
lret
push
inc
cmp
out
fst
cmp
ror
rclb
push
add
fists
xchg
out
pusha
leave
fcmovbe
jge
es
ss
inc
jns
imulb
aas
push
jne
xchg
icebp
dec
sub
pop
xor
add
and
or
jo
push
and
aad
icebp
out
jecxz
sub
jp
sbb
mov
dec
aad
dec
outsb
jecxz
int3
aam
dec
out
mov
into
ret
pop
insl
pop
nop
pop
push
fisubrs
sbb
jg
loop
or
std
cmpsb
popa
adc
pop
stc
ret
xchg
ljmp
stc
xchg
push
int
jge
testl
arpl
push
fcoms
xchg
adc
sbb
fstl
or
test
rclb
jmp
pop
orb
pusha
std
cmp
dec
outsl
lahf
fdivrl
lahf
stos
call
repnz
mov
addl
clc
inc
fcoms
imul
repnz
mov
bound
push
push
in
pop
fdivp
cmp
es
cltd
call
push
xchg
lods
cltd
mov
mov
sbb
push
inc
push
call
xchg
fisubs
int
lock
mov
push
fs
push
js
add
xchg
mov
push
repz
sub
ficomps
mov
loope
or
imul
fistpll
dec
cmp
push
ret
jae
movsl
les
inc
sub
lea
flds
and
pop
add
rolb
mov
inc
je
lcall
pop
rorb
ljmp
xchg
int3
std
jmp
ret
mov
idiv
das
jp
jmp
push
adc
ds
subl
pop
push
in
mov
adcb
fbstp
int
leave
mov
cld
sub
mov
out
fisubrs
cmpsb
cmc
hlt
xchg
call
insb
stos
xor
lahf
xor
insb
gs
into
push
stc
jp
cmp
jp
sub
insb
icebp
push
sub
sub
lods
xchg
add
jbe
dec
lcall
dec
shrl
jle
xor
lds
and
icebp
jl
test
push
push
enter
push
jnp
outsb
orps
pusha
and
sbb
cltd
push
cwtl
pop
push
hlt
imul
dec
jne
lcall
jge
ljmp
aad
sbb
dec
enter
outsb
rcll
dec
push
mov
stc
adc
jb
dec
and
xor
outsl
mov
sbb
push
jo
test
mov
cmpb
bound
inc
fdivrl
nop
call
lahf
inc
lret
lret
or
push
js
into
scas
cwtl
pop
mov
loop
jne
je
cs
and
out
push
data16
fldt
cmp
xor
dec
negb
inc
dec
fdivrl
xchg
ret
xchg
jp
cli
aas
xchg
mov
cmp
and
ja
mov
xchg
xor
mov
inc
call
mov
sub
and
jmp
mulb
in
push
imul
imul
je
int
mov
dec
rcr
xchg
dec
mov
inc
adc
mov
pop
icebp
mov
int
movsl
mov
sub
inc
inc
inc
test
add
out
push
or
cwtl
push
mov
cmp
dec
sti
sub
cmp
jae
add
xor
nop
sbb
arpl
shr
pop
movsb
bound
ret
push
inc
shrb
or
push
stos
adc
jb
lea
add
inc
add
cltd
xor
loopne
mov
in
jnp
lods
pusha
scas
pop
inc
mov
dec
lods
popf
ljmp
adc
iret
cmc
mov
fcoml
je
pusha
xorl
test
loop
aad
or
xlat
xor
sub
daa
xor
mov
ret
fildl
mov
jb
or
lds
mov
dec
push
adcb
jmp
push
ja
and
jbe
push
sbb
and
dec
fmul
inc
cli
aam
insl
cmp
das
shlb
adc
xchg
insb
push
mov
jae
imul
mov
sbb
or
mov
dec
cld
cmc
out
jecxz
ret
cld
iret
or
or
jbe
adc
adc
arpl
push
out
xor
inc
sbb
dec
pop
stc
mov
jmp
sti
mov
jle
popa
clc
movsb
cmpb
scas
dec
xor
mov
xchg
mov
pop
jecxz
fdivr
addr16
xchg
daa
adc
mov
pop
icebp
push
and
add
jno
outsl
mov
lret
and
jg
and
outsb
imul
lods
arpl
pop
mov
lock
jb
inc
stos
cwtl
lods
inc
cmpsl
push
orl
inc
lret
sahf
inc
imull
std
inc
inc
jp
mov
xchg
out
and
xor
scas
push
jg
pop
pop
mov
subl
das
pop
test
add
inc
or
pop
out
shll
pop
jb
xor
mov
icebp
dec
dec
jnp
into
out
js
dec
out
cwtl
push
xchg
outsb
jns
adc
jo
mov
push
rcr
mov
xor
ret
dec
mov
std
pop
movsl
movsl
cli
mov
mov
mov
scas
push
sub
adcl
subl
xor
stos
fs
push
mov
jne
xor
sbb
and
aas
or
enter
daa
int3
es
pusha
xor
xchg
scas
pop
add
loop
xchg
and
inc
adc
mov
or
push
iret
shl
jb
sbb
out
fsubl
xchg
or
lods
stc
mov
orl
out
cmp
pop
sub
sub
sbb
stos
fs
cmp
mov
mov
insl
repnz
push
movsl
push
mov
mov
mov
inc
push
lcall
test
push
adc
pop
mov
cltd
push
imull
and
jle
fwait
subl
int
mov
mov
shll
adc
add
cwtl
push
loopne
xor
pop
out
fiaddl
jl
fistpll
iret
xchg
jbe
dec
and
ret
sti
inc
cmp
inc
mov
xchg
or
lret
xor
es
dec
test
mov
jecxz
or
outsl
mov
repz
icebp
sahf
sti
mov
paddw
jmp
lret
mov
sub
adc
mov
out
movsl
shlb
aaa
scas
scas
clc
sbb
mov
clc
dec
test
cmp
pop
inc
adc
pop
test
pop
dec
add
add
mov
loope
inc
jp
sti
in
cld
test
stc
xor
mov
jge
sbbb
ja
fsin
stc
in
push
ds
jmp
fildll
mov
cmp
cmp
mov
imul
jp
adc
xchg
frstor
sub
sbb
arpl
in
inc
push
mov
icebp
out
test
gs
stc
lock
mov
push
lcall
and
jp
jne
add
jecxz
push
xchg
dec
je
leave
jns
xor
inc
mov
es
ja
or
out
jge
push
stos
in
cmp
xlat
or
sub
cmp
out
ss
jnp,pt
adc
inc
cmp
sub
ds
loopne
or
leave
inc
icebp
dec
push
ret
mov
movsb
popf
push
inc
adc
mov
cmc
add
push
bound
mov
cmpsb
sbb
repnz
jge
inc
dec
nop
inc
int
xchg
scas
push
fistps
xchg
loopne
push
add
js
sbb
xchg
js
dec
std
jecxz
dec
test
ja
test
mov
mov
push
pop
mov
push
or
jl
sub
nop
cmp
mov
fcoml
in
fisttpll
mov
jg
jo
mov
pop
jb
fimuls
xchg
pop
std
lods
mov
shl
sbb
or
dec
or
jg
imul
stos
repnz
push
inc
je
and
jle
das
jl
rcrl
and
and
xor
inc
aam
inc
push
andb
sbb
sub
insl
jle
aaa
repnz
or
mov
mov
adc
out
xchg
adc
pushf
js
lock
mov
daa
jbe
dec
mov
addr16
mov
xchg
mov
pop
cmp
jno
mov
inc
pop
les
pushf
jae
lahf
mov
sti
fwait
push
cmc
sbb
mov
sarl
add
outsb
xchg
je
sbb
and
mov
hlt
movsl
cmpsb
sbb
in
das
add
aas
mov
mov
cwtl
and
push
pop
iret
call
dec
cmp
jl
dec
cmp
push
dec
cwtl
mov
or
rorl
inc
add
xchg
adc
dec
test
inc
sahf
xchg
jl
arpl
cmp
adc
jg
filds
hlt
movsb
outsb
lea
fcmovnbe
push
jno
cmp
adc
cmp
fnstsw
add
lret
inc
xor
add
lods
jb
mov
lods
loop
mov
popa
gs
jmp
popf
dec
lret
shlb
add
dec
cltd
movsb
inc
popf
cwtl
int
fidivl
fimuls
in
mov
add
sub
sti
or
push
inc
sahf
mov
ja
rorl
adc
ret
leave
mov
sbb
and
adc
adc
ljmp
movsl
cwtl
insb
push
pop
inc
sbb
mov
pop
ds
or
or
mov
aam
push
movsb
es
push
test
aas
push
add
enter
mov
add
mov
ljmp
iret
mov
xchg
or
ljmp
fimuls
push
dec
repnz
mov
pop
mov
aam
jo
mov
inc
mov
mov
out
or
push
and
aaa
scas
pop
adc
xor
inc
dec
mov
or
add
inc
sbb
sahf
mov
xchg
xor
rorl
dec
mov
jns
dec
mov
mov
push
mov
dec
and
out
lods
inc
int3
mov
sbb
pop
leave
xor
mov
xchg
mov
mov
xor
push
push
inc
in
enter
add
loop
fdiv
fwait
adc
jl
ss
mov
idivl
les
or
cld
sub
cmp
dec
mov
jmp
jmp
sti
xchg
or
sbb
aas
iret
and
jno
push
cmpsb
and
cmp
fsubrp
push
inc
test
push
into
pop
mov
xor
in
sti
xor
xchg
add
cwtl
xchg
mov
out
rcr
mov
or
in
adcl
xchg
dec
scas
mov
cwtl
rorl
sbb
pop
jmp
pushl
pop
pop
lahf
movb
push
push
inc
inc
xlat
jb
fdivrs
mov
mov
pusha
jp
inc
int
xchg
insl
mov
and
stos
jae
fs
mov
push
test
in
mov
addr16
sarb
nop
mov
insb
dec
mov
clc
mov
mov
ljmp
push
adcl
mov
pop
stos
jle
mov
loopne
jge
in
ljmp
bound
pop
aam
inc
dec
lea
mov
aaa
imul
sub
test
add
ljmp
xchg
hlt
adc
sub
testb
in
outsl
mov
test
cmc
xchg
mov
insl
cmpsl
lret
nop
mov
les
subl
push
push
xchg
aam
add
jmp
mov
add
fbld
ret
into
loop
mov
aad
retw
sbb
out
pusha
xchg
add
mov
dec
mov
inc
xchg
call
popa
xchg
shl
adc
xchg
xchg
ljmp
xchg
in
jns
stos
leave
or
cmp
sbb
sahf
xchg
loop
rcl
lret
adc
pop
cs
pop
sahf
fstps
cwtl
pop
add
mov
loopne
push
lock
and
mov
sub
dec
dec
subb
in
push
mov
outsl
mov
adc
popf
cltd
clc
inc
xorl
mov
lods
test
cmp
sbbb
push
fdiv
clc
push
fdivrs
cmpsl
jbe
inc
out
add
cmpsl
push
loope
pop
add
js
push
mov
fdivrl
or
xchg
inc
pop
repz
loop
je
xor
push
test
adc
ret
sbb
imul
mov
xchg
test
or
pop
into
jp
or
lret
scas
dec
je
add
xlat
fdivl
xchg
jp
mov
pop
pop
outsb
lock
add
and
mov
cmp
mov
pop
pop
or
mov
flds
cltd
xchg
cmpsb
sbb
popa
int3
mov
ljmp
xlat
movsl
add
data16
adc
hlt
and
pop
shlb
or
mov
imul
jl
out
fimull
adc
mov
mov
cmpsl
repnz
jp
or
sub
ja
sbb
push
enter
xchg
or
loopne
js
mov
cmp
xor
movsl
add
cmp
inc
fists
fistpll
adc
mov
mov
pop
mov
sti
xchg
outsb
inc
pop
mov
ficompl
pop
addr16
push
mov
shlb
addr16
cmpsl
test
outsb
je
fistpll
fs
pop
stos
jbe
mov
fdivr
aas
dec
push
pushf
fadds
and
mov
call
addr16
lcall
leave
mov
add
test
fnstenv
mov
shr
int3
jmp
into
movsl
mov
in
mov
rcrb
inc
ljmp
daa
jne
aam
stc
imul
clc
clc
sahf
or
cmc
jp
popf
adc
bound
movd
pop
cltd
pop
gs
aas
mov
jnp
pop
mov
lret
fcompl
adc
ds
addb
cmpsb
stos
cmpsl
sbb
insl
fcmovu
int
loop
scas
arpl
out
nop
jecxz
mov
fs
push
pop
stos
cmp
notb
test
dec
mov
and
or
add
xor
mov
adc
pop
xchg
lods
les
into
ljmp
fisubrs
dec
and
hlt
out
sbb
jp
mov
mov
mov
dec
pop
ljmp
jl
out
jno
jo
lds
xor
popa
loope
xchg
out
mov
add
xor
xor
js
xchg
or
mov
push
loopne
out
mov
fisubrs
cmpsl
jle
or
mov
jg
sti
mov
repnz
cmc
loopne
mov
out
popa
push
cmp
cs
mov
push
call
pop
daa
and
jo
pop
xor
sub
xlat
or
imul
jo
scas
jge
pop
js
xchg
into
sbb
ds
jmp
cmpsb
xor
jbe
pop
adc
ret
cld
scas
sahf
rcr
outsb
movsl
jmp
jmp
jg
aas
jecxz
xor
xor
lret
mov
bound
add
idivb
lods
shlb
cmp
adc
in
mov
push
xor
outsl
lret
push
sub
fs
scas
das
cmp
fwait
mov
push
and
jns
outsl
jle
pop
mov
bound
or
pushf
ja
out
cwtl
cwtl
addr16
movsl
int
pop
ja
cmp
sbb
mov
and
lahf
pop
or
ja
push
inc
xchg
cmp
aaa
or
jp,pt
mov
icebp
shlb
sbb
and
mov
es
fistpll
adc
fs
and
xor
inc
test
shl
xor
sahf
fcomps
inc
cmp
dec
jge
adcl
xor
in
dec
rol
scas
bsr
movsl
xor
jecxz
or
push
sbb
add
pop
sahf
inc
xchg
mov
adcl
or
xor
int3
into
and
sub
insl
inc
pop
lahf
adc
and
and
push
push
stos
call
cs
inc
xor
sub
mov
jbe
in
pop
adc
cmp
sub
jns
inc
outsb
out
push
std
mov
push
in
enter
hlt
push
sub
lods
repnz
or
pop
dec
fidivs
sbb
mov
imul
mov
sbb
fcmovnb
dec
clc
inc
insl
clc
pop
mov
and
stc
ret
pop
sarl
sbb
cmp
jb
sahf
mov
leave
orl
push
fimuls
inc
sbb
adc
mov
out
inc
mov
lods
add
jne
jecxz
mov
cmpsl
sub
mov
xor
and
mov
adc
push
inc
je
jns
and
push
jg
mov
testb
xchg
ret
loopnew
jp
mov
shlb
insl
divb
cmp
xchg
test
and
mov
cmp
jp
and
and
rol
lock
shll
or
xchg
addr16
xor
lcall
movsb
xorl
jo
es
mov
xor
xor
and
pop
in
adc
fs
push
xchg
mov
fwait
push
pop
push
cli
jne
cld
lret
bound
xchg
jl
sub
outsb
test
ret
hlt
xor
and
gs
int
fs
int3
imul
add
add
add
adc
cs
pop
sar
pusha
dec
xchg
xchg
cmp
test
xorb
mov
sub
sarl
sbb
or
clc
int3
movsb
jmp
add
cmp
xor
aam
fildll
repnz
and
or
mov
outsl
data16
xchg
fsubrl
lcall
lret
dec
or
push
sbb
dec
jp
adc
test
push
add
mov
mov
pushf
test
scas
mov
imul
and
mov
rcl
int3
mov
aaa
mov
decb
test
adc
push
cmp
data16
mov
out
stos
notb
in
pop
lea
jge
sub
add
mov
fwait
and
scas
and
pop
aaa
gs
sbb
shlb
clc
aas
xchg
jo
sub
lcall
add
lock
int3
xchg
mov
pop
pop
xchg
xlat
pop
int
scas
in
lcall
ljmp
fisttpll
in
fldl
xchg
fs
inc
js
xchg
and
lahf
push
sbb
dec
xor
jo
mov
xchg
push
xchg
pusha
xchg
loope
cmpsb
leave
push
outsb
sub
jo
dec
out
cmpsb
jbe
in
adc
or
xchg
push
xchg
push
xchg
mov
sub
mov
outsb
enter
test
xchg
pushf
fldt
fdivrs
jb
cmp
dec
rcll
or
sub
mov
push
sbb
xlat
push
cld
inc
cmp
mov
sub
and
sbb
inc
sub
pop
pop
in
imul
add
inc
push
sub
iret
ljmp
lods
cmp
xchg
repnz
sub
pop
lods
push
lods
or
mov
jnp
stc
call
rol
arpl
out
lret
pushf
std
ds
in
and
jb
push
out
and
or
fistps
adc
test
lods
int3
push
mov
sub
aam
inc
mov
lods
mov
in
leave
das
adc
mov
mov
adc
pop
mov
add
fwait
sbb
test
mov
jae
mov
test
inc
icebp
fidivl
and
or
stos
xchg
fcomps
ret
test
dec
jae
cs
mov
out
lods
push
mov
imul
mov
js
pop
sub
vandps
mov
add
sub
dec
out
jne
mov
test
mov
ficompl
icebp
fstps
stc
jne
adc
ljmp
pop
sbb
or
fsubrs
xchg
sarb
push
xchg
inc
pushf
mov
aas
shll
test
arpl
jg
or
jmp
pop
mov
mov
sti
sbb
or
arpl
push
mov
imul
mov
insb
sub
out
pop
aam
sub
adc
sbbb
cmp
dec
lea
lret
mov
cwtl
xchg
data16
xchg
loop
push
es
lock
call
call
mov
cmp
sbb
mov
and
cmp
xchg
pop
mov
insb
pop
sub
pusha
or
cmp
mov
mov
enter
loope
loopne
dec
inc
lret
pop
jmp
dec
xor
inc
sub
jne
loop
repnz
or
xor
cmp
gs
in
push
mov
fidivrl
push
stos
cmpsb
adc
cmpsl
dec
pop
push
int
push
jmp
inc
bound
push
jno
cmp
out
jmp
rolb
sarb
nop
aaa
or
add
das
add
dec
loope
cwtl
test
or
fcmovnu
not
stc
cmp
aas
mov
dec
or
sbb
xchg
subl
jb,pn
add
mov
inc
or
pop
jecxz
jns
js
jo
or
cmp
stc
nop
sbb
jb
dec
push
cld
jl
scas
insl
ja
rorl
push
iret
lcall
jle
lahf
xchg
jae
fisubs
mov
js
jnp
js
pop
dec
add
stos
rcrl
pushf
in
inc
push
dec
or
jne
addl
lea
cld
test
ds
movd
jb
pushf
inc
mov
notb
adc
add
dec
sbb
sbb
mov
je
jo
insl
sub
cmp
dec
lret
mov
test
repz
sbb
out
pop
outsb
mulb
int
xchg
xchg
or
inc
fdivrs
repz
mov
fs
movsb
lods
dec
push
loopne,pn
xchg
pop
sbb
stc
sbb
pop
push
and
jbe
sub
xchg
in
mov
and
arpl
ljmp
cmpsl
mov
cld
fldenv
fcmovbe
ljmp
jno
mov
mov
pop
out
pop
loope
pop
rcrl
popf
adc
punpcklwd
push
in
cmp
jp
xor
push
adc
mov
and
into
imul
test
cmp
xchg
jmp
shlb
ficomps
sbb
das
fdivrs
pusha
lahf
or
sub
fstps
ljmp
push
and
jnp
sbb
dec
call
xlat
mov
lods
adc
sbb
insl
mov
imul
pushf
fwait
dec
push
xor
mov
adc
hlt
cmpsb
pop
incb
mov
fwait
push
arpl
mov
jl,pn
scas
aam
dec
lret
sub
jecxz
fcomps
dec
jge
test
in
pop
cmpsl
inc
notl
movsl
test
pop
je
mov
or
inc
adc
rcrb
fs
sub
int3
pop
xor
movsl
pushf
xlat
sbb
pop
sub
popf
arpl
andnps
lahf
dec
push
adcl
pop
mov
mov
test
xor
iret
mov
out
lods
xor
out
xor
adc
clc
lret
sbb
jecxz
mov
les
test
push
repz
je
pusha
adc
call
add
mov
dec
mov
inc
dec
ljmp
pop
je
sub
sub
xchg
aaa
jl
dec
push
xor
xor
pop
and
mov
mov
stos
sarb
in
ss
outsl
mov
imul
inc
jno
jb
add
and
ds
fs
add
inc
cmp
lods
push
mov
js
mov
loope
adc
jns
jns
popf
push
scas
cltd
or
ljmp
mov
js
inc
pusha
jp
and
push
bound
mov
jo
loopne
lods
xchg
jl
sahf
pusha
xchg
cmpsl
stos
mov
popf
shl
lods
push
cmp
jno
mov
lret
pop
leave
adc
rcll
cmp
sahf
sub
sub
sub
mov
dec
ds
adc
inc
push
cmc
popf
push
lcall
xchg
int3
push
push
clc
sub
adc
stos
mov
adc
int
dec
cld
fldcw
push
mov
dec
loope
mov
lock
jne
testl
test
jo
pushf
jp
or
inc
shlb
xlat
mov
jno
jo
xchg
add
das
repz
mov
mov
negb
cmp
fs
mov
and
daa
add
cmc
rclb
add
and
fmuls
push
mov
adc
fidivrs
data16
or
cwtl
and
aam
adc
cmpsb
and
bound
push
sub
insb
aad
or
lea
in
movsl
cmpsl
cmp
out
addr16
mov
dec
mov
daa
into
rolb
insl
mov
das
sub
gs
test
xchg
aas
xchg
cs
jo
hlt
dec
out
bound
xchg
roll
jo
sub
iret
outsb
xchg
add
dec
mov
xlat
sarb
jo
mov
stos
mov
divl
dec
popf
ljmp
int
rorl
out
lret
lret
mov
xchg
jecxz
repz
mov
and
mov
fstpt
or
pop
lret
call
mov
mov
inc
and
xchg
lret
mull
mov
mov
aas
xchg
nop
rorl
xchg
push
jmp
test
dec
jp
push
xchg
fdivrl
xor
into
cmp
mov
stos
cmc
stos
sar
stos
out
nop
mov
jo
pop
add
cmp
pushf
sarb
leave
xor
xchg
inc
mov
arpl
cmp
jae
jne
sbb
dec
sbb
mov
sar
les
jb
enter
sub
jge
daa
push
dec
inc
idiv
xor
clc
loopne
ret
cmc
cmp
rclb
out
outsb
std
out
and
jns
ret
insl
scas
jns
cmp
jbe
push
lea
fisubs
mov
mov
imul
ret
mov
fidivrs
adc
adc
movsl
mov
jl
mov
aas
and
lods
add
or
pop
sbb
scas
ljmp
mov
outsl
mov
roll
lcall
sbb
jno
rcll
and
pop
repnz
data16
mov
dec
fimull
pop
js
push
inc
movsl
mov
out
cs
fiaddl
out
jmp
stos
add
test
dec
or
out
cmpsb
orb
into
sbb
inc
jns
push
jne
pop
push
ficoml
aas
cmc
and
xchg
jae
shr
or
stc
sbb
leave
lock
test
sub
movsb
out
xchg
fisttps
dec
add
ds
push
je
adc
aad
cmpsb
jne
ret
jmp
outsb
sbb
int
cmp
mov
pop
ret
das
mov
lods
arpl
or
icebp
cmp
and
popa
test
scas
and
mov
add
jae
or
push
xchg
or
js
add
push
loope
out
and
mov
xor
ret
xor
push
or
jno
and
xorl
loopne
add
repnz
lahf
arpl
lret
mov
daa
and
in
jae
mov
cld
inc
rolb
aaa
xchg
out
lcall
test
jge
jbe
dec
cwtl
sahf
pop
popl
xchg
call
lock
jns
push
es
sti
bt
push
addr16
int3
inc
pop
sbb
lret
pop
cli
testl
sub
test
insl
add
pop
popf
pop
repnz
into
movsb
mov
test
outsl
inc
push
add
outsb
sbb
das
ret
or
cli
or
xor
sub
stos
mov
aaa
sub
outsb
dec
clc
cli
loop
add
push
xor
jbe
inc
or
cmp
out
push
pusha
sbb
int3
hlt
xor
cmpsb
dec
scas
mov
add
mov
push
mov
out
inc
mov
out
xor
in
ljmp
add
ror
std
ljmp
fidivrs
cld
gs
mov
inc
sti
or
xchg
xlat
and
jo
sahf
mov
dec
mov
out
aad
cmp
mov
movsb
subl
mov
js
mov
jae
add
idivl
inc
dec
movsb
pop
loop
xor
cmp
jl
add
mov
cmp
repz
lret
push
testb
dec
inc
add
lret
cld
outsb
add
push
dec
sub
add
mov
dec
imul
push
pop
and
mov
into
inc
dec
inc
mov
scas
sahf
dec
hlt
outsb
test
or
cltd
xor
jns
jns
lea
pop
bound
scas
cli
pop
mov
mov
dec
adc
pop
divl
rorb
adc
cmp
cmc
xor
fistps
sub
xchg
or
dec
pop
inc
xchg
out
sub
mov
enter
nop
xor
sbb
aaa
mov
imul
hlt
jne
out
adc
aaa
xor
push
test
or
jge
jl
lods
nop
bound
cmp
adc
ret
xchg
in
mul
js
cmp
sar
adc
mov
mov
scas
fcmovnb
testb
jmp
sbb
adc
mov
sbb
mov
or
dec
adc
push
mov
lcall
inc
sub
stc
sbb
neg
push
push
jl
rcrl
lahf
ss
dec
cmpb
decb
rcrl
aad
roll
insl
fists
pop
mov
scas
xorl
dec
ss
add
inc
pop
sbb
inc
popf
mov
adc
scas
shr
jmp
les
mov
loope
mov
jb
and
or
push
leave
push
push
pop
out
mov
jp
stos
and
loope
jg
inc
jae
fwait
dec
mov
cltd
lods
and
dec
add
xchg
cltd
push
mov
ja
cmp
mov
stos
inc
rclb
mov
mov
sbb
les
dec
popf
sub
pop
cmpsb
jns
pop
sbb
adc
sbb
xor
fsts
std
cmpsb
inc
icebp
xchg
inc
call
das
aad
cmp
add
lock
fsubl
les
loop
add
stos
int
inc
dec
testl
cmpsl
mov
outsb
cwtl
movsb
arpl
mov
pop
xchg
pop
sbb
xor
mov
xchg
enter
mov
jecxz
out
mov
dec
pop
lods
sub
cmp
mov
das
mov
pop
sahf
rcrl
mov
fisttpll
inc
mov
mov
out
outsb
cmp
psrlq
out
push
inc
jge
cli
mov
xor
pushf
sbb
in
push
test
les
sub
mov
and
sub
and
das
std
jle
push
stc
xchg
stos
enter
and
outsb
jo
enter
stos
ficoms
mov
fwait
les
mov
jl
stos
xchg
lds
das
cmp
lret
dec
inc
lahf
dec
mov
sahf
mov
fwait
iret
mov
mov
mov
adc
adc
push
fistpll
into
push
or
cmp
iret
lcall
sub
scas
xchg
inc
minps
sub
adc
hlt
ja
and
bound
shrb
cmp
fisttpl
lahf
push
xchg
sub
add
xor
and
jo
nop
sub
mov
fisttpl
mov
and
jbe,pn
rcpps
mov
or
push
out
lods
into
or
and
in
sub
push
xchg
fwait
adc
xchg
std
addr16
mov
pop
clc
or
popf
sbb
push
mov
bound
or
inc
push
cmpsl
xchg
push
sbb
xchg
aaa
xor
or
jo
push
cmp
stc
call
sahf
loop
stos
mov
mov
shlb
call
and
mov
cmp
lea
push
test
inc
cmc
add
loopne
xchg
dec
jg
test
cmpsb
cmp
iret
mov
test
mull
cs
or
push
or
mov
imul
mov
sub
loop
int
pop
sub
out
jno
sub
adc
std
jnp
mov
test
mov
xor
mov
rcrb
rorl
sti
add
or
pop
jl
ret
adc
aas
outsb
xchg
dec
mov
ljmp
insl
movsl
push
mov
push
xor
adc
sbb
adc
jno
inc
inc
mov
push
nop
jmp
cmp
icebp
cmc
rcl
inc
mov
mov
push
or
mov
into
push
or
sarl
pop
icebp
sbb
jmp
mov
adc
emms
into
aas
push
imul
mov
jmp
xchg
ret
mov
scas
jns
push
jns
js
pop
cmp
fdivs
imul
xchg
fisubs
scas
in
push
mov
lds
sub
gs
jbe
sbb
int3
push
and
jns
les
push
xor
or
aad
fcmovnu
cmp
mov
sbb
push
xchg
mov
push
repz
hlt
psubsw
push
aaa
std
movsb
jno
ds
nop
cmp
nop
mov
hlt
xchg
or
pop
ret
push
cmp
bound
xchg
mov
pushf
inc
push
xchg
xchg
and
mov
mov
adc
pop
stos
or
icebp
mov
cmp
cmp
hlt
dec
dec
xchg
jmp
add
cmp
pop
pop
addr16
sbb
adc
mov
mov
gs
cld
xchg
aad
sbb
pop
faddp
or
push
push
and
sub
je
xchg
inc
pop
pusha
jns
gs
or
xor
jp
jg
dec
repz
es
push
inc
adc
cmc
mov
xchg
scas
sahf
mov
ret
adc
ja
daa
andb
mov
lods
out
ret
sarb
loope
cmc
lahf
mov
jle
xor
scas
pop
mov
mov
inc
mov
nop
adc
mov
cmpl
cmp
xor
ljmp
cmp
mov
aaa
jo
negl
and
adcl
pop
pop
add
adc
xchg
mov
mov
aas
mov
mov
and
sub
cmp
cmp
jge
dec
pop
pop
cmp
add
inc
mov
mov
jl
sbb
cld
je
adc
xor
xor
or
sbb
insb
test
insl
loopne
loop
outsl
ja
mov
mov
movsl
stc
mov
movsl
popa
movsb
fsubl
adc
mov
ljmp
lods
dec
stc
xor
add
mov
imul
jno
and
pop
inc
jnp
lea
in
aam
and
test
or
in
xor
shrl
add
cmp
jp
cmp
scas
xchg
xor
and
cmp
dec
popa
ss
push
test
in
push
and
pop
pushf
add
xor
inc
add
sar
ljmp
or
jge
mov
cmpsl
sbb
push
xchg
cmp
ret
xor
inc
in
test
cmpsb
push
je
test
jb
arpl
pusha
jo
andl
jecxz
int3
ss
in
push
and
dec
aam
sub
dec
enter
inc
into
push
dec
push
push
jbe
lcall
xor
xor
xor
arpl
dec
mov
adc
faddp
xchg
push
sub
shlb
xor
ja
mov
pop
lock
xchg
stos
or
movsb
repnz
xlat
mov
andl
arpl
test
test
jne
xor
and
aas
dec
mov
test
mov
push
daa
jmp
adc
cmpsl
test
lcall
in
cmpsb
sar
inc
jb
mov
enter
loope
div
scas
push
mov
ja
xor
scas
xchg
pusha
xchg
xor
pop
pop
aad
hlt
repnz
pop
jno
jns
mov
enter
sub
into
inc
or
xor
pop
clc
mov
jb
out
cmpsb
iret
mov
daa
mov
lea
dec
daa
sahf
ret
sub
pop
test
scas
addr16
adc
enter
lret
in
sbb
lret
adc
out
xchg
pop
insl
mov
bound
adc
hlt
test
jg
aam
mov
pop
mov
sub
xchg
and
mov
ss
jno
push
fildll
das
xchg
mov
and
lds
mov
leave
xlat
pop
or
adc
cmc
push
inc
fs
sti
jnp
cmp
mov
xlat
cmp
call
and
gs
sbbl
popw
fwait
es
sbb
lret
jle
xor
mov
push
das
xlat
data16
sahf
xor
imul
mov
lret
test
inc
dec
out
pop
je
sbb
push
sbb
fs
repnz
pop
arpl
inc
movb
xor
pop
push
adc
repnz
subb
lcall
and
fs
lea
imul
testb
xchg
daa
pop
orb
dec
adc
pop
es
lods
lock
rcrb
mov
jle
mov
test
sbb
jne
movsb
pop
decl
mov
test
jecxz
or
adc
add
jnp
nop
adc
and
xor
and
lret
cmpb
dec
inc
adc
testb
sub
and
repz
call
popa
call
idivl
fs
cmc
sarl
icebp
push
dec
mov
jecxz
xor
lock
mov
lods
push
repz
inc
mov
push
cmc
push
js
add
in
scas
fmuls
test
and
sarl
std
push
paddusb
add
add
fldt
hlt
pushf
jno
pop
cmc
ffree
cli
bound
mov
loopne
popl
fcompl
repnz
lret
inc
pop
pop
jbe
out
fsubp
enter
jg
mov
cld
mov
push
or
stos
adc
mov
or
leave
nop
pop
pop
sub
push
inc
pushf
out
dec
jle
xchg
push
sub
sbb
add
jge
adc
daa
fwait
out
push
mov
dec
sbb
daa
add
addb
enter
daa
xchg
dec
rclb
jne
in
in
xchg
xor
adc
xor
xor
push
adc
lret
adcb
jge
into
push
fwait
cmp
cld
mov
push
rcr
push
inc
push
push
shr
pushf
or
push
xor
adc
sub
dec
fisubrl
fidivl
inc
push
inc
sar
jnp
jle
sbb
bnd
jo
inc
push
cmp
mov
lds
jo
scas
std
push
add
jle
iret
pop
xor
push
push
push
jno
dec
loop
xchg
sbb
fdivl
sbb
mov
inc
orb
add
push
mov
xor
sub
mov
and
ret
pop
xor
jl
bound
lcall
outsl
rorb
xorl
jg
push
mov
lahf
dec
movsb
lahf
data16
dec
int
das
test
jbe
bound
scas
movsl
or
mov
inc
cmp
fldt
mov
rolb
sbb
scas
ss
xlat
or
lcall
cmpb
jae
call
cmp
and
sbb
adc
xor
fimull
lea
fidivrs
stos
icebp
mov
or
mov
pop
jo
xchg
mov
cmc
jecxz
adc
stos
lea
mov
aas
jge
fidivl
ljmp
shrl
pop
push
stos
pop
jl
movsl
mov
adc
mov
push
xor
repnz
ret
data16
dec
enter
dec
cwtl
mov
test
push
xor
adc
adc
into
mov
popf
ficomps
and
lret
rcl
pop
push
lcall
popa
outsl
push
ja
lds
add
iret
and
mov
pusha
cmp
repz
popf
int3
stos
and
fbld
cwtl
pop
pushf
jge
dec
sbb
movsb
stc
outsb
mov
or
cmp
lods
add
or
lea
sbb
fwait
mov
aad
dec
cltd
das
inc
outsb
movsb
adc
mov
cmpsb
daa
lds
inc
jl
jbe
xchg
mov
shlb
lods
test
cmp
rcrb
dec
cmp
aas
sbb
loop
icebp
pushf
pop
jmp
int3
inc
push
or
push
inc
enter
cmc
fisubrs
xchg
push
insw
cmp
cmc
pextrw
jbe
sti
inc
jmp
cld
pop
icebp
pop
mov
lahf
inc
or
lret
lret
sbb
scas
cmp
inc
cmp
jl
fdivrp
sbb
lcall
inc
rolb
fdivr
inc
aam
jle
inc
mov
lock
inc
fmull
dec
aam
insb
mov
push
mov
and
or
leave
jl
in
push
dec
loope
pop
push
addr16
xchg
dec
or
insl
fbstp
adc
iret
xor
cmp
ds
dec
push
xchg
imull
sbb
loop
ret
enter
and
mov
mov
jb
push
sbb
xor
mov
lret
sub
jmp
fildl
fwait
ja
sub
shlb
rcr
shrb
adc
cwtl
xchg
dec
cwtl
fldl
pop
xchg
mov
insb
push
cmp
xor
cltd
dec
inc
les
push
jp
sbb
cld
mov
test
or
push
xor
imul
pushf
lret
mov
dec
inc
add
sbb
xchg
and
mov
out
cwtl
cmp
xchg
push
sbb
pop
add
and
dec
stos
data16
out
movsl
aam
jecxz
inc
jnp
fcmove
sbb
mov
inc
push
fdivs
pop
stos
insb
jne
fists
ss
shlb
push
sbb
push
xor
in
insl
repz
ret
pop
sub
pop
fs
mov
sub
and
sub
cmp
cmpsb
es
jb
repnz
xor
ljmp
fwait
adc
dec
lea
mov
mov
dec
aam
lret
jge
mov
test
push
loopne
scas
mov
mov
mov
mov
lcall
iret
xor
cld
rcrl
cmp
xor
loope
ret
in
and
adc
xor
adc
aas
mov
sbb
adc
xor
cltd
dec
push
lcall
or
outsl
nop
ja
mov
bound
push
lahf
push
sub
icebp
jg
adcl
xchg
enter
jb
je
mov
cmpl
xor
mov
push
and
xchg
fwait
xor
push
iret
imulb
jl
repnz
mov
dec
xor
imul
xlat
repz
divl
imul
and
pop
xor
lret
inc
imul
push
sbb
cmpl
aaa
mov
icebp
pop
cmp
xchg
jo
ret
adc
add
daa
mov
mov
iret
jmp
jbe
gs
xor
pop
outsl
xor
dec
adc
data16
push
push
adc
add
aam
xor
sub
mov
bound
inc
cmp
loope
int3
scas
mov
sub
jo
sahf
sbb
mov
rorb
mov
push
inc
jnp
out
mov
fdivrp
sti
pop
fs
imul
les
sbb
in
inc
int
adc
negb
sbb
mov
xchg
inc
pop
sahf
or
or
andnps
lahf
sbb
shlb
cmp
pop
fisttps
push
jo
push
shl
push
pop
lea
push
jmp
lea
mov
shr
sub
mov
loopne
and
or
inc
mov
inc
cltd
cli
call
xchg
out
inc
test
les
pop
sbb
xor
negb
cmc
pop
inc
rol
nop
cmpsl
outsl
cli
cwtl
cmp
scas
jmp
addr16
loopne
mov
jbe
out
add
push
imulb
fs
sti
iret
cmpsb
jb
cmpsl
rorl
das
jge
push
push
mov
arpl
or
cltd
js
mov
push
aaa
enter
sub
and
pop
dec
xor
pop
pop
dec
cmpsl
adc
mov
iret
fwait
add
insb
and
insl
and
pusha
imul
outsl
xor
mov
mov
cpuid
das
jno
jecxz
into
sbb
int3
cmpsl
leave
repnz
jno
xor
mov
loopne
adc
movsb
pop
cmpsb
push
aas
popa
pop
add
scas
imul
jb
adc
cmp
mov
dec
sbb
push
rcrb
test
push
pop
fildl
aaa
daa
setne
mov
lcall
aam
cltd
or
xor
xor
das
ja
rorl
pop
add
xor
outsl
shrl
repnz
seta
fcomip
imul
cmp
jno
cmpsb
leave
and
sbb
test
lock
pop
xchg
clc
mov
fsubrs
and
ljmp
add
or
adc
imul
int
xchg
jle
insb
and
adc
andl
dec
arpl
dec
cmp
mov
and
mov
jo
lds
pop
adc
xor
push
and
dec
dec
insb
test
cmpsl
jb
mov
xchg
xorb
shl
sub
push
mov
xor
mov
lcall
imul
jns,pn
push
pusha
jns
push
mov
push
push
in
inc
ret
sarb
mov
xor
jge
std
or
push
rolb
addb
pop
mov
cmp
sbb
stos
sub
inc
fabs
stos
sbb
or
cwtl
test
inc
pop
jo
dec
sbb
jb
es
subb
push
fidivl
repz
jbe
sub
xor
push
cmp
inc
adc
inc
into
mov
out
lods
iret
xchg
in
push
dec
inc
or
add
mov
cmp
pusha
mov
and
push
add
pop
stc
push
jl
lret
js
push
jae
andb
xchg
int3
rolb
sub
xlat
mov
jl
and
ret
lds
mov
in
clc
cmp
and
shr
xchg
mov
in
xchg
aaa
pop
mov
std
je
xor
mov
dec
cmp
sub
xor
ficompl
lret
xor
lcall
xor
adc
jp
rolb
dec
mov
jbe
lahf
mov
pop
cmc
cli
xchg
je
in
cs
pop
popf
jnp
xchg
int3
es
je
xchg
ret
jecxz
mov
mov
push
das
hlt
sarl
cmp
or
jae
jno
cmp
mov
pop
mov
add
sbb
arpl
mov
mov
add
ljmp
imul
imull
mov
push
sbb
rcrb
and
shlb
inc
cmp
jnp
test
lcall
stos
cmpsb
and
les
popf
push
xlat
lds
cs
add
sbb
aas
dec
aad
mov
pop
fildl
jmp
pop
cli
stos
inc
inc
xor
ror
cmp
jmp
cwtl
pop
xchg
jo
ss
mov
xor
or
xor
out
and
loope
mov
mov
mov
or
mov
inc
push
push
das
push
fisubl
out
js
jecxz
sbb
imul
daa
ss
xor
xor
adc
push
dec
jl
mov
adc
push
icebp
jo
dec
fnsave
ficoms
xor
sbb
mov
jnp
mov
jnp
cmc
jns
sub
movsl
test
repnz
addr16
out
xor
xor
in
adc
or
lret
cltd
movsb
mov
inc
int3
js
jnp
popf
movsl
aas
xor
inc
add
mov
xchg
xor
pushf
mov
loope
shl
loopne
mov
or
inc
jns
add
mov
or
test
lods
stos
idivb
mov
adc
jmp
push
out
dec
mov
cmp
insb
call
push
pop
cltd
orl
mov
test
pop
lock
or
negb
outsb
xlat
jge
xor
mov
sbb
scas
adc
loop
cmpsl
mov
popf
jge
adc
and
push
imul
pop
pop
xchg
pop
sub
into
adc
sbb
mov
mov
ja
inc
mov
mov
and
add
lahf
mov
xchg
push
std
mov
sbb
jmp
add
pop
and
pop
jmp
stc
mov
popl
push
in
iret
cmc
jbe
cmp
adc
in
inc
movsl
sbb
mov
data16
mov
jno
add
and
and
adcb
stos
dec
mov
arpl
call
outsl
cwtl
xor
dec
push
jb
mov
call
and
addr16
xchg
fimuls
or
rorl
or
aaa
inc
aaa
negl
push
xchg
push
aas
roll
jns
cmc
jge
es
mov
or
pusha
outsl
xor
or
movsl
and
ljmp
push
lret
sahf
or
push
decl
sub
scas
lret
mov
test
pop
xchg
in
jns
adc
scas
repz
int
pop
icebp
mov
mov
inc
ss
mov
repnz
pop
test
inc
popl
test
std
scas
scas
and
xchg
jl
inc
sub
xchg
jb
insl
out
fists
xchg
mov
mov
xor
inc
in
int
stos
jmp
aam
xchg
xlat
xor
sub
inc
xchg
fmul
sub
popa
lret
stc
jmp
or
imul
dec
mov
xor
rol
js
xor
test
scas
inc
fwait
push
xor
int3
push
and
push
addr16
out
mov
inc
out
rcl
or
sar
cwtl
call
ftst
add
dec
sub
jg
xchg
js
bound
push
sar
pop
mov
ljmp
arpl
xchg
js
scas
sti
fadd
sarl
push
jp
push
push
setge
mov
mov
push
jnp
lods
js
andl
cs
xchg
xchg
or
pushf
sub
mov
pop
and
data16
push
xchg
lods
mov
std
sub
in
imul
nop
lret
lds
jmp
cmpsb
sub
sub
lea
adc
cmpsl
ljmp
push
or
test
shlb
or
std
jmp
lcall
ja
xchg
add
dec
dec
fdivs
push
cld
add
xor
repnz
sub
pop
pop
mov
inc
push
mov
or
shlb
xor
divl
or
push
push
cmc
fisubrl
dec
push
ficompl
pop
pop
lds
push
jo
cmp
mov
shll
adc
push
addr16
inc
les
repz
and
cmpsl
fstl
dec
mov
mov
or
loope
mov
test
mov
out
ljmp
mov
or
mov
iret
pop
adcb
roll
xchg
fiadds
enter
fsubrl
mov
mov
repz
jge
push
lock
xor
loop
jle
xchg
cltd
ret
jmp
mov
test
popf
xor
fcmovnu
inc
je
imul
push
or
enter
mov
jne
popf
mov
outsb
push
sbb
insl
adc
arpl
clc
jmp
data16
arpl
mov
popw
pop
lret
push
mov
bound
mov
xor
hlt
hlt
add
mov
mov
jns
add
ss
sbb
arpl
cmpl
aad
dec
nopl
add
push
inc
sahf
shr
lods
add
into
sbb
or
sub
mov
push
sbb
add
cmp
ja
push
xlat
arpl
cmp
sbb
jle
inc
enter
push
sub
ret
inc
mov
nop
inc
adc
outsl
mulb
leave
rol
xlat
and
sub
insb
test
mov
sub
scas
pop
pop
add
outsl
add
jg
push
pop
inc
cmp
shl
sbb
test
inc
jo
loope
icebp
stc
lods
inc
test
fistpl
dec
cli
pushf
push
sti
mov
addb
rorl
sub
push
sub
inc
and
test
mov
es
and
dec
pop
int
mov
adc
dec
hlt
xlat
jmp
push
pop
add
xorl
inc
nop
mov
repz
xor
adc
repz
sub
or
mov
xor
scas
xchg
mov
mov
je
or
mov
sbb
imul
aad
mov
outsl
xorl
push
test
or
and
cmp
jmp
es
lods
add
movsw
out
mov
jae
jecxz
jp
mov
divb
adc
mov
je
pusha
mov
into
call
pop
jge
mov
and
add
ja
lahf
aad
mov
adc
mov
fwait
das
roll
lret
and
int3
jge
jns
mov
or
arpl
aam
ds
fdivrs
push
jecxz
lret
sub
xchg
dec
push
rcll
lea
aam
adc
cmp
push
adc
pop
xor
sbb
std
pop
fidivrs
jle
hlt
js
roll
das
sub
and
sarb
jmp
movsl
rcll
andb
in
lret
sbb
mov
mov
cld
dec
jne
and
pop
enter
stc
add
cltd
cmp
mov
lahf
gs
jg
mov
cld
sti
lar
mov
inc
mov
mov
sbb
rcrb
out
xor
dec
xchg
rcrb
lcall
shll
jge
push
adc
std
jns
lret
fsin
xor
loopne
sub
lock
cmp
out
mov
mov
cmpsb
pop
ljmp
cs
sahf
ljmp
or
add
mov
xchg
mov
inc
lock
cmp
mov
ljmp
sub
cs
jb
movsb
outsb
mov
mov
stos
xor
add
iret
das
out
sub
lock
mov
xchg
sbb
inc
stc
sar
pop
aad
mov
and
jns
jl
mov
ret
icebp
mov
inc
dec
and
test
nop
jl
ret
mov
aam
and
or
mov
notb
shrl
pop
bound
jae
into
fdecstp
push
push
in
lcall
or
filds
push
negb
sahf
insl
or
mov
mov
clc
dec
leave
mov
mov
movsb
lea
fnstcw
pop
fwait
push
data16
insl
aaa
push
xchg
adc
popa
inc
push
dec
inc
mov
fcomps
cmp
push
cmp
mov
loope
dec
cmp
push
pop
pop
adc
fcoml
push
cmpsl
mov
test
jl
xor
or
mov
jge
mov
pop
mov
es
push
and
xor
push
push
out
mov
dec
sub
lods
cmp
jns
out
cmp
and
push
js
xchg
inc
jmp
cmp
inc
xchg
adc
mov
les
ja
les
lcall
dec
cmpsl
push
rcr
push
out
push
aas
and
test
mov
inc
and
movsl
inc
xlat
mov
push
mov
jl
mov
and
hlt
sub
mov
in
and
out
rcrb
inc
out
scas
pop
lods
push
packssdw
dec
sbb
mov
xor
push
jmp
pushf
rcl
int
imul
pop
or
push
mov
xchg
movsl
push
jecxz
or
add
mov
xor
pop
push
sahf
ret
cli
add
fisubs
inc
sbb
xor
pop
das
add
and
nop
scas
jbe
sbb
and
fdivrs
pop
jns
fs
clc
jae
add
test
data16
mov
mov
or
xor
stos
dec
addr16
adc
cmp
add
hlt
mov
or
xchg
popf
imul
imul
pop
pushf
adc
fs
adc
test
pop
aaa
imul
out
mov
sti
mov
jne
jg
mov
pop
mov
xchg
lock
lahf
pusha
insb
mov
pop
es
add
cwtl
idiv
cmp
push
ss
sti
pushf
sub
mov
ret
andl
cmpsl
jle
mov
outsb
js
lods
mov
cltd
fsubrs
dec
cmpsl
or
outsb
es
ds
test
mov
out
inc
sbb
pop
push
xor
mov
sub
pop
cmpsb
push
cmpsb
scas
xchg
ret
int3
ljmp
es
hlt
mov
js
xchg
dec
lahf
and
test
daa
push
adc
inc
mov
mov
mov
rolb
das
sbbb
push
cs
lret
imul
les
and
jp
push
inc
ljmp
cmp
pop
push
in
std
andb
je
sub
sub
push
push
jne
add
dec
sbb
jb
cmp
int3
xchg
or
adc
loopne
xchg
and
outsb
xchg
xchg
fs
cmp
and
or
xchg
sbb
pop
test
add
fsubl
popa
adc
xor
jge
xlat
ret
push
lret
push
dec
jno
inc
pop
mov
pusha
push
ret
inc
ret
or
data16
cmc
fildl
loopne
pop
jnp
xchg
xor
lods
mov
jbe
aad
xor
mov
push
mov
push
pushf
push
repz
cli
add
cmp
mov
gs
xor
lret
ds
adc
xor
mov
dec
lahf
mov
xchg
fcomip
fs
das
cli
push
je
cs
leave
add
jge
cmpl
hlt
fdivs
xchg
push
add
xchg
repnz
jns
repz
lahf
add
jae
and
push
sub
rorb
cmpsb
fdivrl
and
xchg
leave
mov
cwtl
xchg
dec
xor
push
sub
adc
fsincos
in
std
and
lea
arpl
sub
push
xor
nop
test
and
lcall
pop
jnp
cld
lds
lahf
sbb
cmpsb
dec
add
fidivrl
sub
mov
mov
jge
mov
adc
adc
mov
in
push
fdivs
movsb
pop
jl
lock
pop
fcom
or
push
imul
repnz
jae
call
ss
cmc
dec
mov
pop
adc
sub
jno
push
scas
and
sub
mov
mov
mov
push
xchg
jno
mov
movb
int
jmp
adc
sbb
sub
cwtl
daa
inc
les
add
ret
push
popf
dec
insl
jp
cltd
cmpsb
xor
xchg
rorb
or
fcompl
movsb
dec
jae
daa
sbb
outsb
sub
aad
pop
out
cmpsl
aam
ds
xchg
ljmp
xor
dec
rcrl
push
mov
pop
add
mov
pop
int3
outsb
ss
scas
jecxz
xchg
mov
hlt
rcrl
mov
cmpsb
inc
hlt
cld
int3
dec
loope
mov
scas
loop
insb
push
lods
test
movsb
test
in
fwait
ret
sbb
mov
inc
cmpsl
addl
addr16
inc
movsb
cmp
xchg
out
lcall
ret
js
loopne
and
pop
fidivrl
jmp
mov
fs
mov
jle,pn
xchg
mov
arpl
or
push
mov
jle,pt
pop
or
icebp
xlat
push
sub
into
and
or
xor
cli
add
aam
lds
xor
dec
or
test
ljmp
sub
push
and
clc
idivl
inc
rol
push
daa
daa
ret
call
sbb
subb
int3
mov
movsl
mov
jne
pop
pop
std
icebp
enter
popf
add
mov
mov
push
lds
sub
lea
jb
mov
dec
pop
pop
lahf
sub
lcall
stc
imul
add
scas
or
imul
aam
rorb
pushf
push
cli
outsl
pop
cmpl
mov
mov
in
imull
inc
inc
push
jae
pop
inc
fsts
rorb
dec
es
test
push
mov
inc
mov
pop
cld
dec
sub
and
jg
sub
fidivrs
fdiv
mov
jmp
dec
in
fisubrl
stc
xor
lret
pop
out
mov
inc
outsb
das
mov
adc
lret
mov
dec
lods
jae
mov
xorl
xor
out
cmp
out
adc
divps
adc
out
adc
jno
divb
aas
mov
scas
insb
jbe
inc
xchg
mov
sbb
adc
pop
add
pop
mov
lock
sbb
push
add
sub
es
xor
pop
jnp
cli
xchg
ja
cli
and
ret
cmpl
lret
mov
sbb
fwait
jno
xor
xor
dec
push
xchg
dec
pusha
push
lds
xorb
pop
pop
neg
inc
add
push
adc
mov
xchg
jbe
xchg
xchg
ror
xchg
adc
push
push
mov
push
ja
jmp
mov
sub
sti
push
push
daa
dec
dec
jb
addr16
loope
push
adc
fimull
jno
out
xchg
jnp
push
mov
out
stos
push
stc
sbb
dec
stos
add
mov
cmp
mov
iret
int3
cmp
xor
cwtl
xchg
movsl
lret
mov
jne
movsl
js
cli
je
loopne
ljmp
add
repz
inc
imul
js
jbe
jg
jge
ds
pop
push
jmp
in
xchg
call
lods
and
rorl
xlat
mov
add
lahf
bound
dec
dec
mov
test
clc
jp
mov
cmp
cld
inc
push
mov
idiv
lock
jns
pusha
xchg
xchg
decb
and
int3
not
cli
stos
test
and
push
lret
in
sub
ljmp
cltd
mov
jo
pop
insl
or
sti
add
stos
push
pop
xchg
jmp
int3
cmpsb
jno
push
add
repnz
adc
faddl
mov
repnz
ret
scas
dec
fsubr
push
mov
or
xchg
jns
popa
inc
lds
dec
sbb
cmp
push
inc
insb
push
pop
loop
dec
dec
pop
mov
xchg
cs
lcall
or
push
jbe
cmp
cld
jp
mov
inc
mov
add
cmp
stc
ss
or
test
pop
mov
pushf
xchg
bound
cwtl
and
imul
pop
xor
insb
push
dec
mov
loop
out
sub
mov
icebp
inc
mov
jns
sbb
add
outsl
add
bound
into
rorl
or
sub
movsl
cltd
data16
ja
fimuls
scas
lods
add
test
mov
sbb
dec
xor
add
push
inc
sub
movsl
cmp
sub
cmpsl
mov
test
cmpsl
dec
loopne
test
aad
sbb
adc
jecxz
les
xchg
push
cmpsl
add
repz
push
sbb
xor
stc
mov
sub
std
gs
push
lods
shlb
sarb
daa
fadds
inc
push
js
pop
roll
lock
loop
mov
cmp
push
into
inc
call
push
push
dec
mov
shlb
cs
jno
xchg
enter
repz
jg
fs
iret
pop
fnsave
and
or
fsub
insb
sub
fbstp
dec
jbe
dec
jnp
fildl
mov
fmuls
jle
mov
push
call
pop
xor
cli
ret
pop
jne
jbe
or
das
push
in
shll
add
bound
test
xchg
push
push
data16
adc
or
sbb
out
icebp
lret
inc
pusha
je
negb
jge
xor
inc
dec
sbb
add
cmp
or
mov
push
adc
test
pushf
dec
xchg
lock
jns
rcll
push
arpl
sti
xor
ljmp
lret
or
xchg
jns
pop
push
out
int
xchg
mov
scas
fists
pop
aas
fs
adc
dec
push
daa
daa
or
push
aas
ret
cmc
mov
sbb
cwtl
lods
mov
mov
mov
pop
shll
popw
and
inc
enter
inc
aaa
push
das
dec
and
sti
popa
stos
enter
mov
pop
mov
in
ja
in
cmp
xchg
pop
push
jg
xor
mov
sahf
fs
sti
sbb
sub
stos
mov
or
idivl
jg
out
sarl
mov
into
mov
pop
mov
mov
or
andl
dec
mov
push
or
jmp
sub
xor
add
sbb
push
pop
jno
sub
pop
lahf
mov
inc
testb
inc
inc
adc
mov
flds
jge
or
popa
cmp
stc
xchg
or
xchg
andb
mov
mov
dec
sub
lret
outsb
sub
cmp
lcall
adc
fcomps
mov
aas
mov
pop
mov
jo
sbb
pop
xor
xchg
push
dec
xchg
fcompl
push
mov
and
inc
xchg
es
andl
sbb
scas
mov
fucom
shll
pop
stos
xchg
rclb
pop
aaa
sub
add
mov
inc
lock
test
pop
sbb
lea
test
cmp
cs
sub
ret
push
lret
pop
in
inc
cmp
aad
or
into
aaa
sub
or
jmp
xchg
or
pop
mov
sub
leave
arpl
jns
and
xor
mov
jnp
dec
cmc
cmp
xchg
ret
out
fbld
jns
es
and
subl
in
push
add
push
int3
mov
aad
sub
xor
mov
cmp
push
mov
xchg
sarb
cltd
sbb
cli
push
xor
out
mov
sbb
jb
popa
cmp
add
sbb
dec
sub
mov
jno,pt
or
inc
or
or
cmpsb
cli
dec
popa
mov
cmp
fwait
pop
out
or
mov
inc
shl
push
shll
xor
pusha
sub
ret
sbb
jo
xchg
fs
inc
jno
dec
cltd
or
mov
push
add
loop
mov
pop
and
add
imul
and
cmp
pop
or
popa
orb
push
add
add
sbb
cmp
loop
mov
jp
loop
pop
xor
pop
aas
ret
push
into
sub
cmpsb
pop
cmpl
clc
cmp
dec
sub
lods
out
cmp
cmp
and
add
sbb
stos
cltd
imul
ds
adc
pop
mov
xor
add
dec
lods
jo
push
inc
popf
shll
pop
add
lcall
push
imul
leave
jnp
insb
cli
cwtl
mov
mov
dec
roll
add
enter
mov
rcrb
jecxz
xchg
incb
in
xorl
daa
jne
adc
or
test
aas
inc
rcl
push
lods
jo
cmp
mov
sub
rcrl
nop
add
lods
jno
shlb
mov
lods
push
icebp
pop
test
ds
xor
ja
pop
or
adc
push
loopne
dec
inc
add
mov
dec
jle
js
add
out
rcl
out
imul
pop
push
sub
outsb
push
std
cltd
push
mov
jmp
xchg
nop
test
es
sub
cmpsb
imul
push
cmp
cmp
gs
xor
cmpsl
sub
sub
scas
fldenv
mov
nop
mov
mov
mov
adc
sti
cmp
mov
jb
scas
fdiv
dec
sarb
cwtl
xor
push
add
data16
dec
ret
mov
addl
adc
pop
out
test
cmp
xchg
addps
loopne
pop
les
push
pop
aas
int
scas
or
insb
xor
aad
outsb
and
jmp
js
daa
add
cmpsl
jp
rorl
shll
inc
arpl
repnz
push
sub
and
std
js
ret
push
dec
in
cmp
add
insb
dec
mov
add
sti
jge
fadd
es
aaa
sbb
pop
div
sbb
mov
loop
push
jge
cmc
push
cmp
out
dec
jle
mov
movsb
sub
call
ret
bound
inc
mov
mov
cmp
and
loop
inc
ja
addr16
out
mov
mov
rcrb
das
dec
mov
xlat
pop
and
sbb
jae
pushf
out
aam
lret
xchg
repnz
shll
test
jne
lahf
sahf
scas
push
dec
std
jns
xchg
mov
push
adc
jmp
fists
xchg
or
xor
jb
sbb
xor
in
push
push
movb
lcall
xor
stc
in
sahf
out
sbb
negb
jnp
xchg
fadds
mov
cwtl
cmp
ja
push
fidivrs
xor
sub
movsl
jge
lods
inc
jne
lock
mov
inc
xchg
mov
lock
cwtl
dec
out
sub
adc
movsl
fsubp
mov
jle
add
popf
in
je
lea
sbb
cwtl
cmp
mov
mov
push
sbb
out
or
sbb
push
mov
cmpsl
outsl
mov
icebp
sbbl
add
dec
mov
mov
pop
mov
fimuls
stos
xchg
jb
and
mov
xchg
pop
jle
dec
inc
pop
sub
imul
push
mov
sbb
push
xor
mov
outsl
lock
arpl
push
adc
pushf
jae
orl
push
movsl
lss
inc
jmp
cltd
lds
jae
cmpb
fistps
xor
mov
mov
add
test
xchg
lods
dec
notb
cwtl
xor
and
mov
pop
adc
push
pop
sbb
pop
add
lcall
add
int3
jno
xlat
cmp
and
inc
jns
divl
rclb
mov
and
cmp
stos
out
add
cmp
mov
jb
and
sbb
jg,pt
es
test
xor
stc
dec
lds
in
mov
fstl
dec
pop
pop
out
inc
xlat
daa
rcr
shll
add
lea
dec
xor
pop
shl
fwait
jns
ret
loopne
sbb
pop
push
aas
aas
rol
inc
push
jbe
jmp
jnp
clc
sbb
ds
sub
push
xchg
pop
popa
and
jns
loopne
sbb
mov
cmc
inc
inc
aas
or
jge
fsubs
push
mov
push
stos
out
xlat
push
sub
shr
in
sub
ds
adc
sahf
leave
fs
imull
enter
aam
je
lahf
mov
ja
jo
sbb
push
pop
sbb
sahf
push
iret
push
add
pop
xor
inc
icebp
mov
jo
dec
dec
jp
push
shr
inc
icebp
ss
mov
mov
lret
fcomps
pop
fcoms
cmp
push
pop
inc
dec
in
repnz
rol
sub
sbb
jge
xchg
push
lock
mov
ljmp
xchg
fisubs
xchg
pop
clc
mov
loopne
adc
add
fisubrs
enter
fs
fistpll
repz
push
aas
xchg
xor
fsubs
sbb
int
xor
dec
mov
xorb
xor
fnstsw
push
xor
adc
mov
mov
sub
mov
mov
cmp
scas
out
dec
mov
xor
cltd
cld
inc
out
jns
mov
pop
pusha
aad
stc
xor
cltd
sbb
cmp
bound
scas
and
mov
and
lea
out
int
dec
xor
push
out
or
inc
jns
mov
and
mov
jno
sbb
jo
jg
cmp
shl
xor
fnstsw
aas
ror
xor
cld
hlt
jecxz
out
dec
jno
adcl
sbb
out
test
xchg
fcomp
stc
and
push
jg
iret
push
dec
repnz
cltd
and
cs
into
xlat
cmpsl
mov
scas
pop
bound
inc
mov
in
mov
mov
and
rorb
shl
mov
ss
mov
add
cld
sbb
lcall
push
andb
xchg
push
sub
and
and
dec
bound
incl
fs
inc
push
dec
cmc
jmp
jg
xor
sbb
push
cwtl
sub
lcall
sbb
mov
or
sti
lock
out
cmp
cmc
lret
bound
jle
mov
insl
test
mov
das
sub
mul
sub
mov
push
sti
mov
dec
adc
lods
cltd
push
inc
add
inc
mov
mov
xchg
daa
loopne
dec
mov
sub
inc
adc
xlat
in
xlat
sub
das
push
xchg
hlt
fists
mov
xor
loopne
dec
sub
push
adc
xchg
sub
mov
mov
dec
xchg
addb
and
push
cltd
and
pusha
adc
mov
lret
mov
dec
inc
push
sub
jmp
cmc
inc
stos
cmp
jmp
scas
fsubp
jns
negb
dec
push
push
test
and
push
cs
scas
mov
jbe
sbbb
out
jp
pop
cmp
pop
hlt
cltd
adc
or
inc
mov
push
aam
adc
pop
sub
mov
sub
or
nop
and
mov
cmpsb
out
and
or
xor
mov
cmc
push
dec
test
scas
or
mov
shl
adc
dec
sbb
aad
sbb
scas
hlt
jl
aam
mov
leave
icebp
cltd
movsl
sub
dec
xlat
add
pop
cmp
inc
scas
nop
in
das
push
lret
cltd
cld
rcr
push
jg
idivl
xchg
sbb
mov
sbb
sub
movsb
inc
inc
pop
mulb
cmp
outsb
xor
mov
add
lret
inc
das
sbb
test
in
ds
sti
out
out
gs
mov
mov
int3
sub
sbb
mov
jmp
out
mov
dec
cs
inc
xchg
mov
nop
mov
jge
dec
insb
jle
mov
pop
mov
fstpt
pushf
inc
fildl
inc
pop
lea
push
or
push
enter
jmp
sbb
sub
mov
aas
xrelease
add
xchg
push
xchg
out
inc
pop
inc
mov
cmc
imull
dec
and
inc
xlat
xor
push
xor
cli
icebp
push
jmp
imul
dec
jb
movsb
out
xchg
mov
push
or
push
mov
inc
adc
in
dec
cmp
mov
mov
je
into
push
cmp
into
loope
gs
fwait
add
imul
pushl
mov
cmc
popa
sub
sti
outsb
xchg
ss
std
aas
in
cmp
push
jae
mov
push
or
jle
dec
daa
add
jle
mov
pop
adc
pop
outsl
enter
jle
xchg
xor
ds
js
pop
jle
movsl
pop
idiv
or
mov
push
lods
sbb
jp
jl
add
mov
push
and
and
test
leave
sub
icebp
aad
test
into
repnz
mov
inc
push
lret
cmp
fsub
jne
dec
jg
ficompl
aam
pushf
or
inc
incb
int3
push
cmp
push
or
pop
sar
inc
mov
sub
or
ror
lahf
or
xchg
js
push
or
push
jl
iret
movsl
push
sbb
cld
sbb
pop
push
cmp
jne
jae
push
sahf
xchg
mov
call
mov
add
and
pushf
inc
jl
das
xchg
mov
loopne
add
ja
inc
jmp
push
je
adc
pop
sub
push
inc
jmp
loope
mov
pop
popf
outsl
jmp
dec
cmpsb
mov
jnp
es
push
mov
jecxz
inc
add
inc
mov
pop
mov
out
mov
sub
xor
or
jns
cmpsb
xlat
adc
inc
fucomip
pop
sbbl
xchg
cmp
fdivs
rcr
dec
jbe
dec
nop
xchg
pop
lahf
pop
mov
mov
mov
movsl
and
lds
imul
pop
sti
rcrb
and
push
scas
lock
pop
dec
xor
mov
sub
cmc
adcb
mov
dec
inc
leave
inc
movl
ret
xorb
xchg
lea
fdivrl
lds
subl
add
xchg
or
pop
dec
adcl
and
cwtl
pop
mov
imull
scas
mov
push
cmpsl
fs
jns
add
fcomi
hlt
sbb
add
sbb
xchg
mov
std
jg
push
push
lock
mov
xor
fstpt
mov
lods
mov
ret
iret
mov
cmc
add
imul
popf
fidivrs
push
xchg
xor
daa
mov
jne
inc
push
lock
dec
sarl
and
add
adc
jo
out
mov
pop
add
cmp
in
in
mov
ljmp
hlt
popf
in
inc
xor
stos
or
add
jo
sbb
ret
pop
ret
sub
or
sbb
xchg
stc
xchg
test
out
mulb
jp
or
jl
fstl
jbe
cli
scas
pop
loop
aad
inc
xchg
ljmp
sti
adc
sarb
imul
cmp
push
or
dec
aam
arpl
cmc
out
outsl
jb
sbb
shlb
repnz
es
nop
insb
les
lcall
data16
mov
sbb
in
in
int3
lods
scas
cmc
lahf
sub
mov
movsl
iret
sahf
sbb
shr
iret
mov
adc
mov
xchg
lea
xchg
inc
test
mov
cwtl
sub
mov
pop
shld
pusha
dec
inc
mov
push
mov
mov
ret
dec
mov
lret
dec
add
jp
jnp
xor
repnz
lahf
lret
cmp
xchg
mov
sbb
mov
test
in
rolb
xchg
xchg
or
stc
cmp
push
lcall
sbb
dec
jae
adc
jecxz
push
jmp
fildl
or
mov
cmp
loop
xchg
repnz
fidivl
cmc
sub
bound
imul
mov
cmp
cld
call
fmulp
xor
in
aaa
pop
scas
push
mov
mov
lcall
push
pop
mov
arpl
rclb
lds
pusha
fldln2
push
xor
sub
pop
xchg
mov
mov
cmp
xchg
in
add
mov
imul
fsubl
scas
icebp
push
cli
je
mov
jno
adc
or
mov
popf
jne
arpl
lcall
sub
pop
out
data16
push
pop
cmc
xchg
sub
clc
ficoms
mov
jb
fmull
fnstcw
leave
cmp
mov
jg
mov
test
inc
pop
scas
xchg
out
movsl
mov
jbe
rol
shlb
cs
gs
iret
jge
dec
jg
cmc
jnp
out
sbbl
pop
dec
lds
lret
jg
ud0
add
push
adc
mov
fidivs
jb
call
lret
jne
loop
jae
jge
data16
in
lds
aaa
inc
jno
mov
or
dec
or
mov
inc
adc
mov
cmp
sbb
std
shll
or
jno
test
ljmp
inc
pop
insb
lret
xor
sub
mov
scas
test
rcrl
int
inc
data16
movsl
subl
jge
sub
pop
clc
ficoms
push
xchg
add
adc
push
test
movsb
fwait
xchg
push
sbb
push
dec
and
rcr
inc
push
imul
sbb
les
xor
xorb
xor
outsl
or
lock
mov
inc
push
sahf
jbe
aad
sub
xor
push
and
pushf
xor
testl
fldl
mov
hlt
call
pop
xchg
outsl
in
lcall
hlt
fldenv
xchg
pop
push
fwait
mov
and
sbb
push
lods
fcompl
imul
add
lods
roll
mov
pop
inc
add
inc
dec
pusha
test
push
and
sub
adc
cltd
mov
xchg
subb
push
xor
iret
ret
push
pop
shlb
pop
cmc
xor
out
insb
jnp
push
mov
mov
clc
adc
repz
clc
pop
lcall
inc
pop
in
scas
imulb
ficompl
bound
out
loope
cld
fwait
lahf
sbb
push
xchg
xor
and
fisubrs
mov
sub
dec
xchg
jge
in
iret
pop
jmp
fs
push
push
in
cmp
mov
inc
xorb
push
mov
loope
inc
pop
or
lea
add
push
cmp
push
lea
sarb
rcll
daa
adc
cs
stos
cld
xchg
popa
cli
pushf
enter
repnz
add
test
mov
push
rcrb
movsl
pop
mov
push
push
and
aad
cmp
pop
std
loop
mov
sti
fadds
or
xor
and
mov
mov
test
adc
fdivl
adcb
ja
jnp
hlt
in
mov
jo
jg
cwtl
mov
and
scas
nop
cwtl
jle
fsubl
push
lods
xchg
adc
rcll
xchg
mov
mov
into
dec
xchg
in
jecxz
pop
lahf
subl
shr
xor
mov
mov
add
mov
mov
lock
dec
imul
arpl
shll
push
push
adc
xchg
sub
or
adc
mov
scas
adc
pop
jb
sahf
jg
in
or
cmp
aas
pop
daa
and
popf
in
inc
into
int3
mov
mov
fcmovb
rcrl
inc
frstor
dec
stos
pop
add
mov
ja
ljmp
hlt
jb
jge
imul
fildll
leave
out
adc
mov
xchg
subb
mov
jl
pop
sahf
das
and
mov
int
sarl
jge
sbb
das
mov
fdivl
jae
inc
pop
vandnps
ljmp
daa
rcl
xor
neg
jb
xchg
gs
or
xlat
xor
cmp
cmp
mov
mov
mov
or
test
and
std
mov
test
dec
cmpsb
pop
lcall
jg
pop
das
mov
add
or
jp
shlb
popf
outsb
mov
clc
xchg
fsubr
jmp
out
mov
int
out
jle
insb
enter
je
leave
ja
or
mov
xchg
xor
pop
iret
or
push
cmp
das
inc
pusha
in
mov
mov
jno
test
fadd
test
insb
mov
lret
pop
adcl
pop
loopne
cld
mov
sahf
cmpsl
clc
adc
loop
in
cmc
mov
or
xchg
cmpsl
and
sbb
push
push
xchg
test
lret
xlat
testb
lods
fldl
rolb
mov
into
mov
mov
mov
aas
shrd
push
leave
popf
pop
adc
pop
gs
push
ja
sbb
sbbb
negl
add
ss
jmp
mov
push
fldt
add
cmp
pop
push
mov
mov
shl
arpl
sub
xchg
aam
aaa
jno
mov
push
jo
xor
pusha
std
and
lret
es
sbb
aam
fs
xor
outsb
out
es
in
and
inc
repz
jecxz
rorl
xchg
or
xlat
xor
jo
xchg
xchg
dec
jnp
sub
sub
cmpsl
js
sbb
or
outsb
sbb
icebp
rcl
testb
add
sub
mov
jl
or
xchg
jns
inc
popf
into
sub
testb
bound
mov
add
pop
mov
xchg
notb
cmpsl
mov
mov
mov
je
shl
dec
leave
aas
repnz
push
inc
data16
jecxz
nop
dec
lods
sar
sub
jl
das
mov
cltd
ljmp
cwtl
imul
sbb
outsl
sbb
jbe
jmp
add
arpl
movsl
mov
xlat
mov
fimuls
out
inc
adc
mov
fwait
mov
mov
push
test
push
and
and
in
imul
test
imul
mov
enter
sbb
mov
xorb
xchg
clc
dec
jl
lock
and
adc
xor
xor
scas
bound
es
das
jl
loop
mov
xchg
push
jbe
dec
lahf
mov
les
sbb
cmp
add
mov
mov
inc
fcoml
xchg
mov
lods
shlb
adc
test
mov
in
scas
add
mov
mov
dec
sub
jl
imul
xchg
sub
inc
push
add
enter
fnstsw
and
push
pop
scas
push
jp
jne
in
dec
incl
cmc
out
in
xchg
cmc
icebp
adc
mov
dec
push
jne
sub
jnp
out
out
lods
mov
sub
xor
test
jge
adc
dec
int
lea
ror
mov
jno
movsl
add
dec
stc
icebp
cli
pop
cvtps2pd
das
mov
out
pusha
movsb
sbb
fdivrl
jno
loop
jle
inc
sub
jp
add
fcomps
mov
sub
xlat
xchg
popf
jb
icebp
insb
add
sbb
pop
jg
jmp
ret
adc
jg
sbb
jl
inc
sti
mov
fcmovb
or
nop
inc
xchg
cmp
or
in
sbb
in
int
notb
mov
push
js
cltd
cmp
jl
xor
cld
std
inc
mov
lock
push
pop
aaa
adc
repnz
sahf
mov
ss
ds
pop
cmpsl
mov
mov
jne
lret
push
mov
rcrb
cmp
sub
jo
movsb
xchg
jge
scas
sbb
std
ljmp
mov
enter
pop
xor
mov
pop
pop
les
sti
sub
loopne
jns
push
push
movsl
mov
cmp
popa
aas
jne
pop
adc
imul
in
loope
push
mov
adc
sub
jne
aad
inc
mov
push
push
addr16
scas
sub
adc
push
or
lahf
push
xchg
mov
xor
imul
mov
inc
sbb
and
jae
rorl
call
mov
lods
in
ret
jae
push
and
push
dec
sbb
cltd
lahf
loope
pop
fdivrl
mov
sub
xchg
adc
inc
sub
pop
aaa
mov
je
movsb
mov
push
pop
xor
mov
icebp
add
sbb
insb
jno
jmp
or
sub
shll
push
icebp
mov
xor
int3
mov
pop
rorb
mov
decl
push
inc
add
mov
push
mov
faddl
pop
lock
fnstenv
cmp
jp
adc
fisubl
mov
icebp
jnp
or
ret
int
pusha
or
lds
cmc
add
repnz
jle
outsb
mov
mov
insl
das
cmc
add
sub
test
ret
jbe
loopne
sbb
rcr
xor
jecxz
imul
and
adc
arpl
std
outsl
pushf
popa
jno
fcmovu
xchg
in
add
mov
ds
push
add
daa
push
adc
subb
or
mov
aas
mov
int3
xor
sahf
sub
push
lds
ja
ret
and
sahf
pop
out
cmpsl
mov
fucomip
sub
jp
jge
mov
mov
gs
lahf
fiaddl
imul
push
adc
jg
jp
je
adc
add
mov
mov
sbb
sub
mov
int
repz
lea
stos
fwait
mov
cmp
push
inc
push
daa
mov
xor
dec
int
mov
dec
mov
dec
sub
repnz
sbb
inc
mov
adc
mov
jnp
fnstcw
mov
lret
popl
pop
xchg
es
aas
negl
in
sub
mull
ret
insb
mov
inc
rcr
ss
ret
int
in
out
pop
dec
jg
fimull
inc
push
cmc
pushf
dec
lods
icebp
cwtl
and
int3
arpl
xor
test
pop
sbb
jne
mov
and
xor
push
loop
or
leave
push
bsf
mov
dec
mov
pushf
int3
iret
inc
dec
pop
rclb
ret
lock
push
and
mov
and
pushf
mov
gs
mov
adc
lea
mov
out
add
fisubs
jb
ret
bound
call
jae
adc
imulb
lret
dec
or
mov
mov
pop
push
test
xchg
jl
sti
mov
popa
jl
arpl
lods
out
lret
or
mov
lahf
inc
das
mov
xchg
in
dec
jecxz
sbb
movsb
bndstx
mov
xchg
in
inc
roll
shll
xor
dec
enter
pop
push
inc
js
xchg
test
jmp
sti
out
loopne
in
or
cmp
add
shr
and
lods
dec
sbb
add
sbb
mov
add
gs
mov
mov
pop
fldt
adcl
mov
cmp
or
nop
push
imul
enter
pop
ds
cmp
je
sub
xchg
sarl
cvtps2pd
sbb
inc
push
lret
fnsave
mov
mov
push
xchg
test
adc
push
cmp
sub
mov
dec
adc
jl
test
mov
fnstcw
jae
xchg
pop
rcr
add
test
or
insl
xchg
mov
inc
mov
push
xchg
mov
jl
sahf
jmp
je
or
xchg
imul
out
pusha
jg
cmp
inc
out
mov
mov
jb
and
iret
movsl
aam
add
add
faddl
nop
scas
cmp
inc
xor
testl
popf
arpl
std
ja
std
lods
or
iret
lock
sarl
shl
sbb
lss
ss
loop
mov
mov
popf
fnstcw
out
faddp
add
testb
outsb
dec
mov
pushl
cmp
cmpl
les
outsl
adc
icebp
adc
imul
inc
mov
loope
jg
xor
imul
popf
push
add
or
pop
addl
addr16
mov
ja
imull
sti
dec
mov
dec
inc
sahf
pop
sahf
data16
es
dec
sub
jge
xchg
push
dec
aad
sbb
je
push
sbb
subb
adc
andl
pushf
and
sarl
movsl
mov
jecxz
dec
unpckhps
dec
aam
sbb
add
in
and
arpl
inc
adc
mov
pop
fcmovu
jbe
cmp
jnp
jl
shlb
testl
insl
mov
dec
xchg
ja
mov
int3
lret
jmp
fiaddl
mov
xchg
inc
xchg
pop
xchg
test
adc
lahf
xor
jb
jb,pn
xchg
jl
std
xchg
xlat
outsl
xchg
test
jns
push
movsb
add
stos
stc
es
xor
inc
mov
push
dec
test
push
ss
imul
and
jbe
sbb
testb
push
inc
shll
jmp
and
pop
stos
push
je
jg
aam
enter
idivb
scas
outsl
push
fcmovnb
mov
mov
popf
dec
nop
mov
jg
cmp
cwtl
test
sbb
mov
insb
cmc
fstpt
mov
cmp
xchg
addb
cmp
out
insl
add
jb
cli
and
jno
mov
and
loopne
push
and
aaa
push
ja
lods
cmp
adc
xlat
pop
mov
mov
inc
xlat
xchg
cmc
repnz
sbb
cmp
adc
jb
mov
sub
js
dec
add
mov
fistpll
adc
fmuls
add
jns
dec
sbb
fsubrs
xchg
or
jmp
popa
pop
cmpsb
lret
cmp
cmp
aam
ljmp
add
xor
fdivrl
sub
sbb
push
inc
les
hlt
lea
std
loopne
pop
test
cmovb
fsubl
mov
fisubrl
jne
dec
jg
outsl
inc
cmp
filds
out
and
jo
pop
cmp
cmpsb
mov
cs
xchg
lcall
in
fs
sbb
mov
or
push
mov
xchg
fstpl
cmp
outsb
test
in
daa
sbb
insb
mov
movsb
jno
mov
add
dec
arpl
js
jl
imul
fidivrs
sbb
stc
sarl
push
add
adc
outsb
bound
push
scas
pop
xchg
sub
push
pop
pop
rcll
aaa
pop
mov
pop
in
out
into
push
add
lcall
or
cmpl
ja
cmpsl
lret
push
push
jge
nop
xchg
pop
cmpsb
mov
in
std
fs
mov
fcmovnb
loope
mov
mov
insl
leave
adc
sbb
loopne
in
push
int
int3
or
mov
xchg
push
dec
jo
add
std
jmp
imul
out
movsb
in
stc
add
movb
jge
out
mov
inc
dec
xchg
and
adc
lret
out
or
mov
mov
or
mov
and
call
adc
jl
xor
imul
jae
push
xchg
test
pop
xchg
movsl
push
cwtl
test
es
lock
fsubs
repz
or
xlat
fcmove
jmp
push
aad
or
mov
popa
pop
stos
in
aaa
and
sbb
sbb
inc
movsb
cmp
in
lret
inc
psraw
dec
sbb
sar
sbb
iret
mov
xchg
lret
nop
or
sarl
push
das
hlt
movsb
das
jb
out
pop
jmp
cmpsl
jecxz
mov
iret
cmp
jnp
or
nop
int
shrl
int
pop
outsb
jbe
pop
sub
inc
loopne
push
into
popa
sub
add
cmpsl
lret
and
call
pop
fwait
pusha
and
mov
sub
ds
hlt
or
mov
xlat
mov
pop
sbb
rorl
or
movsb
fsubrs
cli
or
and
mov
into
cmc
hlt
pop
push
add
shll
adc
repnz
push
sub
mov
shll
pop
jbe
nop
in
outsb
jmp
call
std
jp
xchg
insb
sahf
mov
aaa
mov
fwait
movsl
stos
sbb
andb
ret
adc
mov
add
in
inc
dec
push
outsl
and
xchg
add
in
xchg
push
mov
mov
ret
mov
pop
sub
cmp
mov
xor
shlb
loopne
adc
pop
cmp
mov
lret
cmp
popf
jmp
outsb
mov
imul
ret
push
dec
dec
xor
imul
xor
xchg
adc
dec
fs
imul
pop
jecxz
jae
gs
jb
das
push
add
je
xchg
jbe
xchg
adc
test
mov
sub
loopne
in
subb
push
aaa
and
shl
push
stos
lret
inc
mov
testb
insb
outsl
out
cli
adc
pop
mov
mov
das
xchg
pop
adc
jae
cmp
int3
mov
inc
adc
mov
and
aam
mov
mov
out
test
xchg
push
or
and
mov
and
fisttpl
ficompl
in
test
pusha
adc
xor
adc
stos
dec
xchg
andb
loope
ret
push
ljmp
xchg
and
and
mov
ljmp
dec
push
xchg
aas
add
mov
insl
or
ja
clc
mov
icebp
fldcw
movsb
imul
cmp
mov
pop
cld
cltd
aad
cmp
mulb
addr16
aaa
and
rcrl
xor
cmp
decb
ret
mov
addl
inc
mov
lahf
xor
adc
mov
hlt
out
and
rcrl
andl
clc
mov
fwait
pop
aas
lods
inc
int
pop
xor
clc
mov
pop
dec
test
dec
enter
cmp
out
pop
fimuls
push
popa
inc
gs
movb
push
dec
ficoms
add
pop
mov
mov
incl
and
jns
mov
gs
jae
mov
insb
loop
jl
mov
xor
insb
mov
clc
cmp
mov
inc
jae
mov
mov
cld
jge
iret
push
call
jbe
push
cmc
push
pop
jg
jle
pop
and
xor
and
cmc
push
repz
adc
dec
xchg
movsl
loopne
pop
in
xchg
insb
test
jl
pop
push
lahf
imul
sub
out
mov
sub
push
pop
cmp
mov
inc
xchg
movsl
jbe
adc
scas
xor
add
rep
fs
adc
pop
dec
loope
jl
popa
mov
inc
aas
sub
lahf
inc
sbb
pop
notl
fs
xchg
aam
dec
add
cli
xor
mov
dec
inc
in
xchg
or
mov
xchg
mov
rol
sti
mov
mov
fiaddl
inc
ret
mov
fidivrl
scas
movsb
test
outsl
jle
inc
mov
xchg
cmp
sub
dec
pop
mov
mov
mov
je
sbb
xchg
push
sbb
xchg
repnz
and
dec
inc
cmpsb
or
lcall
insb
frstor
pop
pop
inc
std
sbb
adc
inc
fs
sub
add
mov
fwait
adc
in
sbb
jg
repnz
fwait
xchg
cmpsb
leave
mov
int
jb
das
inc
cmc
das
repnz
push
cmp
jg
push
dec
stc
movsb
syscall
sbb
inc
jp
test
mov
mov
test
jmp
inc
ficompl
xor
out
pop
das
sub
push
add
loope
mov
in
mov
sti
mov
sbb
insb
aad
sub
cmp
ficomps
fstpl
call
or
lahf
mov
inc
cmp
aad
imul
mov
push
xchg
std
popa
adc
pop
pop
fidivrl
dec
fnsave
ljmp
imul
cmp
arpl
push
or
or
sarb
adcl
add
mov
iret
daa
pop
sbb
push
jg
xchg
dec
xor
mov
mov
sti
not
cltd
sub
sub
cmpb
add
mov
gs
or
jmp
pop
addl
inc
fwait
ret
scas
cmp
shrl
xchg
xor
push
scas
jmp
and
cmpsb
fsubr
add
aad
pop
jo
es
insl
sbb
leave
dec
cmpsl
mov
shrl
loope
fwait
or
fnstcw
fwait
out
and
test
sarl
testb
mov
enter
add
gs
lock
fmull
add
mov
loope
adc
dec
mov
lret
mov
push
arpl
jle
inc
push
push
arpl
ds
hlt
in
push
jp
sahf
aas
inc
lods
fs
xor
addr16
rcrl
fstpt
jg
mov
jp
mov
rcll
sti
push
mov
mov
and
mov
call
imul
or
cmp
loopne
sbb
daa
inc
inc
mov
lahf
pusha
inc
sbb
inc
scas
adc
mov
cmp
pop
mov
outsb
rep
inc
stos
jno
ficoml
jne
push
pop
rcr
push
inc
pop
xor
mov
mov
out
push
rorb
stos
lods
jnp
inc
mov
jp
push
push
push
dec
gs
cmp
repnz
jo
jg
pop
xchg
pop
int3
aad
lods
inc
mov
or
cmpsb
stos
cli
dec
sarb
aas
scas
pop
aam
addr16
mov
lcall
cwtl
pop
pusha
jnp
push
clc
rolb
fwait
dec
shrl
data16
push
sbb
xor
adcb
mov
mov
sub
sub
das
or
loop
mov
add
push
shrl
adc
loop
add
or
test
mov
pop
pop
inc
inc
xor
test
mov
subb
xor
movsl
out
lods
insb
int3
mov
inc
push
test
cltd
outsb
cld
inc
xchg
int3
or
pop
cli
push
aam
xchg
outsb
or
mov
lahf
jno
pop
push
lods
loope
push
loope
int
hlt
mov
adc
fnsave
add
cmpsl
pushf
inc
mov
cli
pop
popf
pop
repz
subl
push
push
les
out
sbb
pushl
hlt
mov
data16
in
jns
push
andb
sub
sub
cmpsb
cs
dec
int3
add
aaa
jbe
pop
out
in
cld
sahf
mov
push
ret
inc
ds
test
mov
or
ljmp
sbb
ljmp
add
dec
push
mov
pop
xchg
jp
pop
in
bound
jns
data16
hlt
dec
mov
mov
xor
fsubrl
xchg
ss
fwait
sti
pushf
sbb
or
lret
pop
lea
mov
mov
out
sbb
pop
jl
lahf
or
call
lret
pop
adc
push
rcl
or
fldcw
std
xchg
shr
sub
adc
mov
sbbb
adc
pop
sbb
testl
imul
dec
orb
lahf
and
or
push
and
mov
iret
sbb
xorb
aam
aaa
jnp
mov
gs
pop
int
xor
es
jns
pop
jns
popa
scas
inc
lret
popf
leave
jmp
fisubl
sbb
bound
cltd
xchg
cli
adc
lds
pop
cmp
or
or
mov
roll
insb
movsl
mov
ljmp
fadds
pop
arpl
cmpl
push
mov
mov
dec
cltd
mov
cltd
add
nop
int3
cli
cmp
sti
fwait
adc
imul
test
repnz
popf
in
scas
ss
daa
pop
pop
jge
cmc
sahf
and
mov
repz
mov
lret
mov
push
mov
sbb
jle
xchg
popf
fmull
jmp
lcall
cmovbe
fwait
sti
gs
pop
sub
and
mov
sahf
mov
and
xchg
sbbb
stos
imul
roll
and
andb
adc
inc
xchg
jle
xchg
call
mov
cmpsb
cmp
pushf
adc
cltd
pop
icebp
clc
mov
and
lret
ret
ffree
jecxz
movsl
scas
and
das
mov
ret
lods
pop
sbb
sbb
sahf
jnp
push
out
cmp
jg
daa
xor
imul
mov
ficomps
sbb
jg
cmp
sub
jl
dec
imul
out
cld
pop
sub
inc
or
fcmovnbe
adc
fisubrl
sbb
scas
dec
mov
shll
sbb
xchg
repnz
repz
stc
ja
pop
add
sbbl
jle
pandn
xchg
jmp
push
pop
fstpt
hlt
cli
sbb
push
je
das
xchg
test
jge
mov
fisttpll
cwtl
dec
mov
inc
adc
jae
mov
pusha
movsl
inc
mov
mov
out
push
jbe
and
xchg
push
and
mov
jb
mov
cmp
lahf
enter
xchg
clc
std
popa
jnp
sub
or
mov
mov
or
mov
adc
sbb
push
jns
mov
mov
aas
dec
mov
pusha
dec
aad
gs
dec
rcl
sub
mov
les
mov
xchg
xchg
mov
cmpsb
and
xlat
mov
add
dec
lds
test
adc
sti
insl
and
mov
push
mov
lcall
and
clc
shll
or
ficompl
out
inc
xchg
jne
pop
mov
mov
mov
jbe
divl
iret
rol
gs
pop
out
sbb
sub
movsb
pop
fs
mov
mov
and
or
enter
push
push
mov
in
xchg
pop
adcl
xlat
cmp
aaa
shll
jmp
add
mov
xchg
jecxz
out
mov
repnz
fnstsw
dec
incl
js
or
xacquire
jbe
pop
in
mov
jecxz,pt
dec
pop
xor
mov
in
and
mov
push
psubq
and
mov
jnp
add
ljmp
or
push
movsb
aas
std
mov
sti
lret
dec
fmul
xchg
enter
and
das
lea
mov
int3
repnz
mov
mov
pop
jns
push
cwtl
pop
dec
imul
aam
jmp
cmc
lea
fsub
add
xlat
fbstp
ret
fldt
pop
and
pop
rcrl
and
dec
sbb
xchg
push
scas
fwait
jecxz
xlat
mov
push
xor
inc
push
cld
inc
or
push
inc
repnz
out
divl
das
fwait
lret
mov
add
jae
cmp
xor
xor
cmp
fs
scas
mov
xor
xor
pop
mov
loop
cltd
sbb
daa
insl
testb
mov
pop
pop
dec
mov
inc
cmp
cmp
dec
and
nop
dec
xchg
dec
repz
out
jecxz
in
pop
in
dec
test
int
pop
and
adc
and
mov
loope
mov
mov
mov
orb
ret
cmp
inc
inc
pushf
aas
in
movsb
fisttpl
xor
push
jbe
jns
pushf
sub
roll
or
lods
inc
dec
mov
sahf
lods
orl
cld
rcrl
xlat
add
inc
push
jno
jbe
mov
cld
push
push
adc
sarl
and
rorl
and
cld
mov
int
ljmp
fldenv
cld
nop
icebp
and
lods
in
jbe
push
je
insl
outsb
scas
test
lahf
fcmovu
and
pop
dec
pop
or
lods
dec
lea
leave
das
lock
out
push
aas
scas
bound
inc
rorb
push
sbb
cli
lcall
cli
inc
push
rorl
cmpsl
push
addr16
int3
lock
mov
repnz
sub
mov
adc
or
mov
mov
xchg
insl
or
add
push
jb
jmp
aaa
inc
int3
out
inc
mov
popa
or
aam
sub
jae
jecxz
jnp
outsb
pop
jl
xor
outsb
or
gs
andl
adc
jmp
sbb
mov
insb
daa
cltd
es
fdivrl
movsl
mov
sub
test
notl
movsb
pop
clc
sbb
xchg
imul
inc
rcrl
push
and
clc
jl
lret
arpl
mov
enter
or
cmp
std
mov
xor
sbb
arpl
cmpsl
cmpsl
ficoms
lods
subb
inc
cmpl
mov
adc
cs
jge
lcall
push
hlt
adc
mov
movb
fsubrs
adc
cmp
xchg
mov
test
xlat
leave
add
inc
push
jmp
mov
jnp
add
push
and
mov
adc
ljmp
add
out
push
dec
es
sub
inc
sub
xor
cmp
rolb
stos
xchg
addb
or
popl
add
adc
mov
lea
leave
call
mov
nop
xchg
mov
sbb
std
mov
inc
xor
sub
in
jns
or
pop
out
mov
sbbl
outsb
fcoms
dec
out
outsb
ds
gs
xor
cmp
mov
mov
notb
xchg
xchg
inc
xchg
xor
push
mov
add
mov
pushf
jae
pop
or
in
sub
jl
fwait
or
stos
add
push
xchg
lock
adc
sub
push
inc
outsb
push
ret
add
sbb
adc
rorl
jne
ja
jo
je
adc
loopne
mov
push
fidivrl
and
outsb
sub
mov
adc
lds
inc
lock
popf
mov
scas
mov
js
repz
lcall
movsb
jp
lret
rorb
or
jae
inc
insb
icebp
aam
mov
je
imul
sub
addr16
out
shll
add
adc
jge
jge
add
lcall
pop
repz
or
mov
fmul
divl
cwtl
mov
pop
stos
addb
imulb
push
jae
dec
in
pusha
fcomip
jns
mov
push
icebp
js
adc
xor
xchg
lea
dec
orl
mul
stos
gs
les
aaa
push
popa
hlt
add
jb
mov
xor
mov
pop
xchg
ror
mov
dec
rcl
jno
sub
jmp
out
mov
lock
or
and
test
cmp
and
cmp
mov
add
rolb
mov
popa
mov
mov
in
push
clc
scas
xchg
and
imul
and
xchg
mov
pusha
jmp
test
cltd
iret
pop
push
push
out
popa
sub
mov
iret
add
mov
jp
shlb
pop
stos
les
incb
out
and
pop
sbb
or
jae
cwtl
jecxz
popf
icebp
push
scas
es
push
leave
rcll
sbb
stc
cmp
mov
push
ljmp
scas
push
xchg
arpl
icebp
out
and
pop
inc
lea
pop
pop
and
mov
dec
out
xchg
mov
rcrb
sbb
adc
or
push
push
mov
mov
push
xlat
rol
ss
mov
inc
je
xor
fisttpll
adc
sbb
imul
test
and
add
in
stos
in
fdivs
pop
repz
push
add
sbb
xchg
xchg
mov
xchg
popf
jle
repnz
sub
xor
xor
pop
inc
mov
cmpsl
push
adc
push
cmp
dec
inc
ror
lea
inc
add
ds
into
fs
sub
jb
xor
jecxz
out
fst
ds
jb
inc
and
sub
and
movsb
js
add
mov
mov
cmp
imul
rolb
lcallw
popa
jecxz
push
add
dec
or
pop
jne
call
bound
rolb
lea
mov
nop
mov
loope
adc
and
outsb
mov
arpl
mov
or
push
mov
lahf
cmp
or
leave
lret
stc
or
faddl
pop
sti
daa
lret
jb
cmp
cmp
pusha
mov
cli
adc
push
inc
imul
xchg
ror
jle
leave
and
xor
daa
mov
stos
adc
pop
push
add
pop
cmp
mov
lods
mov
fs
mov
mov
loopne
test
jmp
cmp
sub
mov
mov
dec
jns
or
in
cmp
mov
sbb
lahf
rcrb
jp
mov
pop
xchg
jge
stos
cld
andl
mov
and
cmp
mov
pop
xchg
ljmp
fsubrs
test
fiaddl
cwtl
scas
or
test
aas
mov
push
mov
icebp
adc
push
jb
mov
mov
cmpsb
stos
insb
unpckhps
xor
ret
jo
jae
js,pt
in
or
push
insb
je
inc
jl
push
fwait
mov
adc
or
add
ds
dec
in
ss
gs
mov
and
mov
xor
and
loop
pusha
xor
adc
jge
mov
dec
and
and
and
hlt
data16
xchg
pop
and
roll
cmp
add
mov
stos
ffree
test
stos
inc
cmp
push
xor
jne
jecxz
fmuls
jbe
xlat
aam
loope
jo
adc
jmp
fs
out
mov
sarb
out
mov
notl
inc
dec
mov
add
push
add
roll
fwait
inc
lret
sahf
xchg
stos
dec
push
mov
inc
outsb
and
jo
xor
fnstcw
pop
push
mov
xchg
mov
add
insb
outsb
cmp
cmp
mov
xchg
adc
call
shlw
jp
sahf
ss
adc
outsb
push
cmp
fistpl
jae
sar
xchg
mov
mov
dec
lock
add
imulb
sub
int3
jmp
push
cli
in
lock
outsl
stos
and
pop
and
leave
jnp
adcb
jge
call
mov
leave
cltd
xor
xor
mov
aas
sub
test
jae
sub
lahf
pop
cmp
fnsave
loopne
dec
fcompl
mov
inc
mov
rcrb
repz
mov
pop
xchg
and
adc
scas
ljmp
cmp
ret
into
cmp
inc
jmp
inc
mov
stc
and
sbb
out
inc
je
lods
setne
int3
insl
jne
push
xchg
ret
jle
sahf
les
repz
push
je
or
xor
lods
adc
xchg
xchg
pop
ret
out
or
rolb
jecxz
int3
stos
dec
inc
xor
aad
mov
cli
inc
pop
ret
inc
out
inc
lahf
into
or
adc
sarl
mov
pop
push
jne
outsl
fyl2x
mov
retw
jno
imul
sbb
movsl
adc
push
pop
sbb
insb
ljmp
dec
fs
mov
sbb
dec
imul
push
cmp
jl
das
mov
paddsw
ret
enter
mov
mov
pop
inc
push
and
in
dec
shrl
lock
pop
or
mov
lcall
arpl
hlt
dec
test
mov
dec
into
mov
adc
loopne
out
and
jae
je
pop
cmpsb
xor
inc
out
adc
cmp
adc
and
fisubrl
jmp
xchg
mov
repz
cmp
xchg
pop
dec
and
and
cmc
scas
and
sbb
jns
add
sbb
adc
sub
cmp
xchg
mov
jbe
aaa
push
lret
sbb
mov
add
sub
out
flds
add
loope
icebp
test
push
out
pop
repnz
fcoms
popa
popf
sti
test
lahf
mov
test
inc
xor
or
fs
stos
out
mov
repnz
push
roll
xor
sub
ljmp
js
dec
dec
pop
cmpl
stos
dec
imul
mov
jae
movsl
aam
outsb
sbb
and
pop
and
xchg
outsb
movsl
call
hlt
push
je
outsb
push
je
xor
imul
faddl
xchg
mov
std
jne
jl
mov
sbb
adc
ficomps
test
dec
ljmp
xor
fwait
sub
cmp
lahf
dec
pushl
inc
dec
pop
lds
sbb
fists
into
mov
ret
mov
or
mov
inc
mov
mov
mov
mov
sqrtps
pop
movsb
push
out
mov
lahf
adc
sbb
fs
jno
mov
adc
es
xor
and
add
push
in
inc
sbb
lahf
lahf
shrl
cmp
outsb
cmp
sbb
popa
scas
enter
sub
jo
call
loopne
movsb
push
jo
lds
sbb
xlat
jmp
or
fwait
icebp
push
push
orl
sahf
ja
fidivrs
lret
in
xchg
push
in
lea
mov
pop
or
scas
cmpsb
or
xor
popf
dec
xor
sahf
pop
sbb
je,pn
ljmp
jne
mov
xchg
data16
push
lret
lea
imul
xor
inc
lds
cmp
fsts
hlt
inc
je
adc
sub
xorb
fcmovne
pop
dec
dec
scas
mov
stos
aaa
test
gs
xor
lds
sahf
pop
mov
cmpb
pushf
xchg
inc
out
pop
inc
daa
dec
sbb
adc
xor
clc
cmp
push
push
cmpsb
es
inc
pop
jmp
inc
adc
idiv
mov
adc
xchg
repz
out
scas
pop
or
or
cwtl
cmpsb
push
mov
xchg
out
push
jp
pop
jecxz
sti
mov
lret
test
add
dec
stc
fmuls
sbb
repz
cld
push
cmp
fcomps
pop
cmpsb
stos
inc
loopne
xlat
mov
push
sbb
icebp
push
popf
push
cld
mov
ficomps
pop
dec
xlat
push
xor
neg
call
cmpl
std
pop
jae
int
sbb
test
ja
and
pop
dec
out
js
loope
movsb
je
negb
repz
dec
cmpsl
nop
jb
jb
cltd
dec
push
inc
sbb
jp
jecxz
adc
cltd
fwait
mov
or
inc
mov
stos
sub
pop
pop
sbb
add
adc
push
sbb
mov
push
mov
add
xchg
popf
adc
push
jo
sub
mov
fwait
outsl
orb
sti
push
push
sarb
sbb
mov
hlt
mov
inc
in
xlat
stos
push
cmp
ds
lock
lret
rdpmc
and
mov
and
pop
adc
dec
call
jo
mov
push
mov
popf
and
mov
sbb
dec
outsl
cmp
jp
dec
xchg
xorl
outsl
mov
xchg
js
xlat
in
jg
ss
jbe
insl
push
ja
push
push
aam
pop
stos
cmp
lahf
int
rcrb
pushf
mov
lea
inc
mov
outsb
and
sahf
std
fcoms
add
sbb
addr16
inc
imulb
pop
xor
lock
aaa
leave
int3
mov
call
push
icebp
pop
das
sub
push
sbb
mov
xor
jecxz
sub
mov
dec
aad
sbb
dec
jns
xchg
inc
shl
inc
push
pop
and
stos
xor
xchg
sbb
mov
dec
adc
insl
inc
add
test
sub
jg
dec
inc
nop
stos
cld
nop
out
test
cld
cwtl
cli
repnz
inc
xchg
in
dec
jbe
insl
ja
ljmp
rorb
pop
cs
add
std
mov
std
sub
shl
jge
adc
mov
sbb
mov
aad
lcall
gs
daa
mov
lahf
push
sbb
sub
pop
popa
orl
aas
sub
push
push
push
xor
xchg
int
pop
or
mov
loopne
sbb
flds
and
jle
in
and
pop
dec
adc
dec
outsb
lods
or
cmp
or
and
ret
popf
enter
sbb
insb
cmpb
sbb
push
or
jns
loopne
pop
jae
xchg
cmpsb
insl
testl
mov
fldcw
mov
and
test
clc
cmc
leave
xchg
pop
jb
cmp
mov
aad
movsb
or
gs
pop
inc
cltd
jnp
dec
sub
in
das
idiv
mov
or
jnp
sub
in
sti
lds
mov
jo
lcall
cmc
je
arpl
push
sub
push
push
sbb
inc
mov
shll
push
pop
pushf
aam
lds
dec
iret
dec
pop
es
fcmovne
scas
inc
or
push
lcall
insl
xor
cmpl
add
pop
push
xor
sbb
mov
stos
adc
std
js
mov
lds
xor
cmp
sarb
aaa
mov
push
dec
mov
or
popa
mov
inc
push
push
fs
dec
cs
sbb
push
add
es
rorb
mov
sbb
pop
mov
dec
fcmovne
fidivl
cli
lret
cmc
adc
xrstor
shrl
out
icebp
out
int
cmp
jmp
xor
cwtl
in
jo
imul
and
jge
aaa
pop
gs
pop
pop
lea
push
adc
js
jmp
xchg
sub
sub
inc
loop
insl
and
addr16
scas
es
jmp
and
mov
mov
inc
sbb
xchg
push
ror
xor
dec
jo
xchg
std
outsb
xchg
decb
lret
repnz
addb
xchg
in
in
mov
fstpt
push
push
or
add
inc
or
test
leave
xchg
or
js
shll
inc
insb
adc
cmp
cmp
sbb
or
and
int3
push
mov
and
adc
pop
and
jns
outsl
lahf
test
pop
jbe
aam
mov
cmp
ret
push
adcl
xorb
paddq
lret
andl
jmp
stos
mov
cmp
repz
mov
mov
and
punpckldq
pop
and
data16
int
out
loope
cmp
fistpll
mov
push
mov
xchg
loop
xor
outsb
int
mov
je
pop
mov
daa
into
sbb
lods
adc
sti
cli
add
sbb
mov
cmp
mov
mov
nop
jle
sub
jns
enter
sbb
cmc
and
jl
mov
jns
jmp
fwait
mov
cwtl
aad
adc
sbb
mov
js
push
xor
mov
insl
enter
xchg
popf
jmp
adc
dec
inc
mov
mov
xor
pop
push
outsl
aam
mov
fwait
pop
pop
out
or
pop
mov
movsl
and
push
cmc
mov
push
in
cmpsb
add
lods
mov
shll
add
mov
ljmp
stos
cmpsl
lahf
in
push
mov
and
push
mov
ljmp
jl
cmp
ss
push
sarl
lods
imul
and
out
xchg
mov
test
inc
dec
cltd
aad
xor
cmpsb
dec
stos
std
lcall
int3
jmp
out
fdivrl
aam
adc
in
mov
sub
movsb
outsb
out
xchg
lea
xchg
hlt
in
mov
add
pop
outsb
ljmp
xlat
lods
mov
cld
daa
mov
inc
xchg
cltd
icebp
ret
mov
jo
cmp
add
call
xlat
push
mov
in
repz
adc
xchg
jb
push
je
mov
dec
insl
add
push
pop
out
cltd
adc
mov
mov
mov
shll
xor
nop
test
cmp
mov
call
push
add
scas
aas
adc
sbb
pop
insb
in
cli
scas
sub
fucomp
push
add
pop
scas
dec
pop
pop
adc
mov
inc
sti
movsb
jns
sbbl
pop
in
inc
divl
arpl
add
adc
mov
mov
sbb
imul
mov
mov
int3
inc
jl
xlat
pop
jnp
iret
cmp
sbb
repz
jle
push
jmp
mov
and
mov
mov
push
mov
or
int3
jae
jo
xchg
pmulhuw
mov
inc
or
add
orl
outsl
ret
cmpb
pop
cmp
sbb
sbb
loop
xlat
jge
inc
stos
or
jge
jge
xor
and
nop
rol
adc
jbe
jl
mov
xchg
push
sahf
dec
pop
mov
xlat
mov
sbb
addr16
lods
jle,pn
mov
and
push
xlat
call
std
push
and
xor
mov
fldenv
cld
daa
mov
in
out
mov
sbb
dec
pop
xchg
mov
dec
aaa
or
int
sub
dec
jle
shll
enter
cs
push
in
loope
imul
movsl
dec
xchg
or
push
pop
imul
sarl
xchg
push
add
je
add
and
data16
loop
aad
xchg
popf
sub
mov
les
xchg
das
mov
rol
lret
iret
sub
mov
push
out
into
mov
shr
add
xor
pop
rcll
pop
mov
in
adc
arpl
out
das
ljmp
jmp
mov
push
cmpsl
lret
mov
or
sub
scas
adc
xor
loop
push
jno
dec
add
pop
jecxz
push
dec
lods
mov
call
or
jne
add
bound
fcomp
lret
rol
xor
jbe
inc
leave
aam
add
inc
xor
insl
es
lea
stos
lds
jg
push
jns
push
rol
arpl
rcr
mov
mov
cmp
add
or
xchg
adc
or
or
jp
out
sbb
pop
xchg
or
aam
push
adc
xchg
push
cmpsb
cmc
cld
data16
cmpsb
aaa
fnstenv
fs
sub
push
lds
cmp
sub
outsb
adc
inc
movsl
int
andb
mov
mov
xchg
add
cli
orl
fmull
mov
mov
pusha
xor
dec
fcmovu
and
pavgb
ret
sub
inc
out
push
ret
test
lock
push
imul
xlat
mov
cmp
sbb
pop
jbe
xor
adc
scas
jae
cld
mov
xchg
clc
mov
scas
mov
fdivrs
lods
repz
mov
xor
fildll
stc
cmpb
add
mov
dec
lahf
adc
movl
jno
mov
or
sbb
dec
add
imul
adc
enter
iret
cmp
dec
in
movsb
insl
loope
or
mov
ljmp
add
and
add
push
nop
ja
std
clc
cmpsb
hlt
inc
pop
into
std
repz
sbb
fucomi
les
jae
xchg
cltd
pop
out
leave
sbb
sbb
sbb
cmpsl
mov
clc
adc
inc
xor
fsts
or
jmp
adc
fsubl
rcrl
mov
jg
es
or
mov
cmc
insl
mov
sub
jb
inc
inc
xor
std
xor
hlt
popf
loope
jg
lea
cmp
test
xorl
pop
arpl
mov
push
incb
fildl
inc
push
xor
jno
movsl
inc
fsubrl
movsl
ret
fs
ret
mov
int
xor
in
mov
push
out
icebp
cmp
cwtl
xchg
adc
cmp
push
sub
cmc
rcrl
outsl
mov
out
dec
and
test
ss
mov
adc
add
mov
lods
es
push
jb
cmp
cmpsb
mov
clc
xor
mov
sbb
pushf
in
loop
lock
inc
std
jnp
rcr
in
aaa
mov
icebp
dec
push
jns
dec
imul
roll
push
repz
dec
aaa
daa
cli
stc
adc
popf
mov
add
iret
in
inc
add
fcmovbe
or
pop
xlat
adc
inc
sar
push
adc
popf
les
loope
dec
cmpsb
shr
adc
sub
mov
jb
inc
push
pop
sbb
lds
fsubs
jg
xchg
mov
fdivl
cmp
pop
ror
push
push
xchg
push
cmp
fiaddl
mov
iret
in
imul
test
nop
cli
mov
in
adc
add
sbb
lea
mov
pop
rolb
push
clc
stc
inc
push
rol
push
sub
sbb
lea
cmp
je
and
aad
mov
int3
lock
hlt
fiaddl
shlb
out
jge
dec
mov
pop
jbe
jl,pt
mov
xor
fnstsw
sub
xchg
jl
dec
inc
sub
mov
pop
movsl
cmp
stos
repz
iret
dec
xchg
out
dec
scas
popf
sbb
inc
jecxz
jecxz
xor
mov
es
insl
test
inc
addr16
enter
push
adc
push
xchg
jnp
cmp
mov
ljmp
sub
jne
in
out
xor
jp
popf
arpl
jbe
daa
dec
sti
xor
cmc
xchg
jbe
in
sbb
mov
jecxz
bound
lret
dec
sub
mov
push
xor
leave
pop
push
push
mov
xchg
in
jns
js
mov
cltd
dec
dec
cmpsb
dec
scas
push
xor
dec
int3
lods
push
scas
ret
lds
cmc
adc
rolb
lea
mov
mov
in
pop
ss
inc
js
in
pop
insl
xchg
xchg
ret
test
rol
mov
fimuls
dec
sub
aam
lea
movsb
fucomi
insb
scas
ljmp
mov
push
xchg
mov
inc
jb
mov
pop
xor
movsb
lds
aaa
hlt
shll
leave
pop
pushf
push
jl
push
xchg
inc
xchg
testb
inc
jl
push
pop
add
mov
xor
mov
sub
rclb
shll
lds
push
scas
adc
je
les
pop
movsl
fnstsw
lods
cmp
sub
jge
xor
es
negl
mov
sbb
jns
int
mov
fs
xchg
mov
lea
lea
push
mov
lds
xlat
mov
push
lock
inc
sbb
or
arpl
iret
push
pop
ja
xlat
fstps
pop
jge
mov
insl
out
sahf
lea
fcmovbe
push
inc
pop
mov
repz
std
lea
pop
dec
daa
std
stos
xor
jbe
mov
insb
xor
and
lret
cmp
and
sbb
jg
aad
fcmovbe
mov
das
sub
fimull
adc
stos
push
dec
inc
lret
icebp
and
mov
out
jnp
out
mov
inc
in
out
xor
popf
mov
pusha
push
aad
xor
cmp
jbe
adc
mov
pusha
outsb
mov
mov
cs
ret
xor
or
subl
sub
cs
test
inc
mov
aas
jl
ficomps
iret
or
out
leave
jle
push
test
bound
pop
aas
push
sti
and
into
adc
sub
push
in
js
or
jb
sahf
inc
repnz
imul
cvtps2pi
push
mov
mov
fmul
aas
sarb
int
jns
or
out
sti
cmp
sub
insl
cli
out
lea
pop
cld
lods
xor
insb
repnz
or
out
int
mov
stc
mov
pusha
cmp
lcall
shrl
ljmp
or
push
adc
popf
xchg
and
and
xor
ljmp
lret
xchg
mov
cmp
sub
mov
aas
mov
shlb
cmpsb
shrb
stc
leave
adc
ljmp
arpl
xchg
jp
cs
mov
imul
xchg
scas
jae
cmp
or
orb
pushf
cmpsl
out
sub
daa
or
fwait
dec
scas
scas
rorb
hlt
out
pop
leave
mov
ret
scas
fwait
call
nop
bound
pop
mov
cltd
jae
push
lret
mov
cmp
push
mov
adc
daa
lock
fsub
jp
cmp
out
sub
xor
cld
or
jg
and
outsb
dec
mov
into
mov
inc
lahf
or
faddl
in
mov
cmp
test
add
fisubs
cmp
leave
or
hlt
pop
jns
lahf
jge
sahf
aas
or
fs
movq
mov
rcll
mov
loopne
add
add
mov
lock
sub
and
jnp
or
inc
ja
fistpll
repz
sub
mov
dec
sbb
sbb
int
adc
add
sarl
or
adc
push
aaa
adc
cmc
lds
sub
or
dec
sbb
lds
cli
lcall
or
in
mov
stos
dec
push
jmp
outsl
mov
sarl
xchg
and
lcall
and
popa
add
push
or
dec
pop
inc
out
inc
popf
scas
mov
shlb
jmp
out
ja
das
idiv
adc
mov
xchg
rorl
imul
xchg
push
and
lret
cld
shrl
ret
sbb
das
pusha
inc
popf
aad
xchg
out
stc
add
bound
lahf
dec
push
push
lea
dec
xchg
out
mov
int
dec
pop
pop
jne
cld
movsl
inc
lret
xchg
xor
push
out
stos
imull
jo
adc
sub
out
and
sub
outsb
add
push
and
and
loop
int3
pop
jl
push
dec
int3
addb
push
lods
and
dec
mov
bound
mov
jbe
cmpsl
xchg
data16
push
pop
adc
sbb
sbb
inc
add
shrl
loop
in
mov
pop
sbb
mov
dec
stos
pop
jle
jmp
lea
int3
jl
pop
into
xorb
js
movsb
push
xchg
mov
stos
pop
adc
xchg
inc
sbb
fcoms
dec
jp
outsb
jle
fs
add
fistps
imul
push
sbb
adc
mov
push
sbb
inc
outsb
dec
xchg
xchg
lods
adc
cli
xor
push
mov
daa
pop
or
cmpsl
mov
ss
add
pop
push
sahf
js
push
cwtl
cmp
sti
push
mov
and
test
xlat
sub
pop
add
adc
cltd
in
and
cmp
sbb
in
pop
loop
mov
inc
jl
ret
jno
out
mov
movsl
xchg
xorb
test
mov
cmpsb
or
outsl
rcrl
das
sub
aam
cld
xchg
pushf
in
mov
xlat
cmpsb
adc
ror
push
test
adc
cmpsl
push
sahf
test
fs
cltd
xchg
pop
movsl
adc
ret
fistl
rcll
in
mov
push
push
mov
not
int3
push
push
roll
jo
cmp
ror
or
push
mov
and
push
cs
mov
lret
cmp
mov
or
jbe
movsb
push
roll
ror
xchg
cld
add
push
stos
add
pop
outsl
fnstenv
leave
pop
mov
mov
mov
push
nop
movd
mov
js
adc
mov
lock
cmc
sbb
xor
pop
in
adc
in
and
mov
and
xor
popw
xor
add
inc
inc
shl
std
cmp
inc
add
mov
jns
fsubl
adc
jg
mov
rorb
pop
jae
cwtl
ret
lahf
xchg
inc
push
jne
iret
inc
jne
mov
aam
adc
xchg
sar
andb
jmp
jne
sbb
inc
negb
jecxz
mov
out
or
push
outsl
push
inc
int3
add
pop
sub
rolb
inc
lahf
jmp
aaa
icebp
fistl
pop
leave
jo
xor
je
mov
and
fsubrl
out
jns
ds
inc
push
xor
sub
pushf
fmuls
test
jmp
jbe
adcl
out
add
sub
inc
ljmp
xchg
or
and
pop
adc
scas
popl
jne,pn
out
lret
hlt
adc
push
shll
sub
lahf
jbe
adc
mov
pusha
mov
inc
orl
or
push
xchg
cmpsl
dec
add
push
push
dec
pop
sub
dec
adc
add
xor
iret
nop
fidivl
cld
aam
enter
sarl
mov
fstpt
xchg
or
inc
xchg
or
les
push
in
daa
xchg
pop
jns
popf
int3
xchg
pop
cmp
imul
pop
cmpsb
sub
jno
mov
cmp
add
xor
pop
mov
popa
sahf
loop
rcrb
out
cmp
push
mov
adc
adcl
out
rorl
cmp
xchg
test
inc
or
sbb
cmp
and
add
fnstcw
ret
test
ss
xor
jmp
xchg
jle
xor
std
mov
xchg
jno
stos
dec
sub
and
inc
int3
lea
cmp
sbb
ds
adc
jmp
test
xor
push
xchg
nop
mov
cmp
xor
push
xchg
int3
fmuls
lds
mov
mov
stos
dec
loop
mov
out
jne
cwtl
mov
xchg
sti
inc
ds
lcall
les
iret
mov
data16
mov
pop
mov
mov
scas
movsl
scas
pop
idivl
jae
pop
xchg
in
pop
dec
ret
sbb
clc
inc
lea
data16
outsl
inc
push
cmp
popa
ret
rcrl
push
xor
and
insb
xor
add
jmp
das
sbb
leave
push
enter
adc
inc
jle
sbb
aas
jl
out
out
dec
xchg
inc
aad
mov
andb
insb
pop
enter
in
mov
cmp
bnd
mov
mov
dec
jp
sub
divl
xor
push
xchg
gs
jmp
and
loopne
jnp
dec
push
adc
jae
jae
pop
sbb
pop
inc
mov
lea
xor
sti
loopne
es
mov
xor
mov
jge
mov
push
jge
xor
xchg
pop
loop
mov
test
mov
mov
push
mov
sub
out
daa
pop
scas
push
xor
mov
xchg
gs
and
sti
mov
loope
mov
cmpsl
leave
imul
outsl
jecxz
movsl
jno
adc
aam
adc
mov
dec
imul
sub
mov
call
sbb
incb
imul
push
push
fistpl
sbb
cld
cmp
push
sar
sbb
lock
pop
inc
fwait
scas
jmp
hlt
gs
add
pop
movb
pop
xor
or
stc
outsb
xchg
icebp
cmp
lods
xchg
data16
test
xchg
inc
push
sbb
cld
jae
mov
aad
xor
sub
xchg
bound
jnp
lcall
sbb
cwtl
jle
std
cmp
xor
addb
cmp
push
jge
out
icebp
add
xchg
lods
jmp
mov
jge
and
inc
push
or
xchg
ret
jb
insb
data16
adc
lock
push
lods
sbb
lret
mov
stos
and
xor
jmp
inc
les
data16
roll
adc
loop
std
pminsw
mov
and
pop
std
shr
outsb
sar
pop
movsl
xchg
mov
sub
xor
adc
xor
fiaddl
adc
repnz
xchg
and
dec
mov
jg
lret
xchg
rcl
fidivrl
movsb
xor
stos
xor
popf
dec
sub
ficomps
xor
lahf
pop
dec
jb
dec
mov
sbbb
mov
mov
jns
test
inc
iret
mov
push
and
push
orl
push
repz
mov
test
push
mov
add
cmp
lcall
jo
and
scas
lds
push
pop
mov
and
xchg
ss
jg
xchg
scas
insl
je
jbe
inc
test
and
subl
lods
cmpsb
pop
fstps
cmc
inc
mov
mov
out
test
lea
incl
pusha
ljmp
xchg
xchg
mov
pop
popl
adcl
test
jb
xchg
iret
xor
in
jmp
ljmp
add
enter
or
imull
jmp
xor
into
sub
inc
push
cmpsl
sahf
loop
jp
leave
jo
push
dec
cmpb
mov
in
mov
rorb
movsl
dec
adc
mov
nop
daa
outsb
addr16
pop
inc
js
jae
test
or
pop
imul
push
lret
rcl
lcall
es
push
aas
mov
xchg
fbld
sbb
fnstsw
dec
in
inc
push
pusha
es
xor
shl
notb
jae
sarl
dec
inc
dec
xor
push
pop
add
mov
and
adc
cmp
adc
or
lret
adc
add
add
ficompl
sbb
enter
and
xor
inc
rcl
mov
xor
pop
pop
and
insl
mov
push
adc
cwtl
xor
xchg
out
mov
lods
mov
adc
push
mov
dec
xchg
xchg
inc
ljmp
mov
and
cmpsb
cmp
inc
jl
dec
out
test
fcmovnb
pushf
or
test
or
insl
push
or
mov
sti
lret
pop
adc
popf
out
lret
fisubrs
xchg
push
into
push
adc
xchg
and
cmpsl
imulb
out
sub
mov
loop
mov
lret
fildl
dec
adc
add
mov
adc
lds
insl
mov
mov
xchg
jo
xchg
aad
shl
rcrb
push
sub
lret
fstps
bound
rcrl
adc
iret
jg
fwait
mov
adc
shll
mov
mov
pop
mov
inc
mov
jp
addr16
shl
repnz
cmp
jecxz
xlat
xor
and
out
push
xchg
jp
inc
cmp
jl
cli
lcall
jge
or
jb
xchg
xchg
dec
mov
xchg
mov
jmp
mov
pop
sub
out
ret
add
cmp
inc
clc
jbe
nop
push
xchg
jl
pusha
repnz
ret
aaa
cmp
jbe
stc
cmp
dec
sub
call
mov
mov
jle
out
lret
dec
and
jnp
cmpsb
cmpsb
popa
or
mov
inc
dec
mov
adc
adc
lcall
push
mov
pop
mov
or
das
mov
xchg
cwtl
inc
sahf
std
mov
lods
mov
cmpsb
xor
inc
mulb
lahf
or
cld
pop
jbe
push
push
xchg
jg
cmp
push
clc
inc
idiv
dec
loopne
or
jnp
dec
arpl
and
xor
jmp
jne
fists
inc
push
mov
adc
sar
movsl
xchg
popf
test
pop
fbld
mov
popa
nop
push
ja
add
mov
insl
pusha
stos
fs
mov
xchg
pop
bound
dec
or
push
jl
and
das
lcall
push
jge
idivb
dec
loop
ret
cmpsb
or
pop
ljmp
push
movsb
lret
dec
hlt
lods
pop
ret
lahf
inc
negl
in
daa
adc
into
in
add
aad
stc
mov
push
cli
fwait
xor
xchg
mov
popa
out
enter
pop
pop
pop
sub
mov
push
scas
inc
jo
and
jbe
lds
jmp
repnz
adc
dec
sub
das
mov
sbb
rolb
dec
js
pusha
lcall
repnz
test
push
scas
pop
pop
sbb
icebp
mov
aam
lret
lea
pop
mov
add
xor
les
sub
cmc
fwait
and
inc
stos
xor
shll
jno
pop
dec
fwait
mov
sbb
mov
push
jno
daa
mov
outsb
mov
rclb
xchg
cli
fwait
sub
dec
fidivrs
add
arpl
popa
sub
rcl
add
pop
scas
push
push
cmp
movsl
pop
add
call
sbb
insl
push
xor
cmpsl
pop
stc
iret
inc
out
arpl
loop
adc
adc
sbb
jno
xor
out
mov
leave
cmpsb
inc
notb
add
ljmp
es
lds
insb
and
xchg
loop
dec
push
jae
not
rorl
sbbb
pusha
pop
adc
and
cwtl
enter
mov
mov
stos
repz
mov
adc
les
fimuls
test
push
int
call
call
repz
outsl
add
jg
shr
je
sti
stos
rclb
mov
push
lock
es
js
imul
inc
and
mov
es
cmc
mov
mov
notl
hlt
inc
and
arpl
in
call
pop
movsb
or
sti
das
xchg
jns
push
jo
mov
pusha
cmp
inc
mov
fldenv
inc
xchg
sub
add
imul
pop
fwait
sbbb
sarb
rolb
in
das
adc
out
fxch
mov
lds
pop
mov
lods
lahf
pop
fstpl
cwtl
adc
sub
push
adc
lea
inc
aam
rcr
xchg
pop
adc
adc
aas
aas
pop
or
sti
cmp
dec
mov
das
fsubrl
cltd
out
dec
std
jno
test
outsb
outsb
mull
lret
mov
mov
cmpsb
adc
cmp
aas
dec
add
cmp
and
jne
mov
lea
jg
lcall
mov
dec
sar
and
enter
rcl
cmc
adc
pop
sub
pop
lock
stos
imul
js
test
dec
jle
out
stc
imul
mov
divl
pushl
or
ljmp
fstl
mov
ja
sbb
mov
lahf
std
mov
jne
ret
add
inc
frstor
push
jge
or
nop
fdivrl
pop
xchg
jno
adc
mov
jne
mov
dec
mov
es
and
mov
push
cmp
cmp
js
inc
jo
xchg
fs
insl
pop
pusha
xchg
pusha
test
or
out
and
jns
push
sbb
push
mov
or
fwait
insl
stos
ret
lods
sub
lret
in
sbb
out
mov
cmp
popf
in
xchg
inc
add
aaa
or
push
cmp
test
cmpsb
inc
pop
push
mov
cmp
lahf
inc
rorl
sahf
xor
jecxz
push
dec
into
jbe
jle
add
xchg
lea
dec
sbb
ret
mov
int
and
mov
int
pop
orb
sbb
xchg
call
lret
xchg
lock
inc
xchg
xlat
mov
lods
and
mov
orl
pushf
xor
fists
test
dec
rcr
call
cmp
addl
xor
xorb
int3
xor
in
fcompp
push
test
scas
jb
cld
sbb
lcall
mov
sub
cmpsb
push
fcom
mov
pop
add
cld
pop
stc
add
xchg
insb
cmp
imul
or
dec
sbb
push
jp
cs
out
mov
jbe
jecxz
int3
sahf
push
sbb
sbb
mov
test
mov
push
cmp
das
leave
int3
das
test
xchg
movsl
push
movsb
push
loope
lahf
bound
pop
mov
push
fmulp
pop
nop
pushf
adc
pop
stos
cs
and
sbb
loope
in
xor
lcall
and
jp
add
push
jmp
mov
jp
sbb
les
fldcw
mov
js
in
push
inc
inc
sub
clc
mov
aam
mov
lods
mov
lahf
mov
out
dec
mov
test
mov
add
test
test
sub
jnp
aad
fldt
std
push
pop
data16
xchg
inc
jne
test
insb
and
punpckhbw
add
add
mov
insl
sub
pop
cmp
xor
and
dec
arpl
aaa
test
mov
cmp
cmc
fildl
or
sub
mov
fnstcw
and
daa
push
inc
xlat
loop
shll
es
sti
mulb
scas
mov
pushf
int3
fs
gs
aaa
mov
cmc
cmpsl
or
add
xchg
and
ljmp
imul
mov
xchg
mov
in
add
pop
into
sub
fidivrl
stos
pop
jbe
les
dec
jbe
rorb
inc
pop
in
jo
nop
dec
inc
pop
adc
add
jmp
test
shrl
leave
push
inc
adc
sub
mov
xchg
nopl
cmc
inc
shl
xchg
inc
add
sbb
push
int
jno
jo
fisttps
ds
mov
and
pop
insl
mov
pop
xchg
hlt
jo
jae
jo
jecxz
jle
jmp
testb
jno
loop
add
sbb
daa
push
icebp
nop
xchg
and
jae
jp
pop
xchg
push
test
out
lods
push
add
adc
addr16
mov
out
sbb
jle
lahf
cmp
add
insb
test
pop
jecxz
or
clc
nop
xchg
mov
sbb
movsb
push
out
fnsave
sti
xor
push
jmp
fwait
pushf
aad
stc
test
cmp
int3
sbb
out
pop
sbb
inc
inc
push
xchg
filds
insl
xchg
jo
je
popf
mov
je
pop
sbb
in
mov
xchg
cmp
daa
mov
inc
aas
imul
push
cmp
xchg
fbstp
inc
ret
and
mov
insb
adc
add
das
push
nop
cmp
push
scas
fmul
mov
repz
xor
enter
lea
mov
or
add
in
popf
inc
out
loope
jae
add
lods
jae
or
or
leave
hlt
push
sub
and
out
mov
push
sub
ret
cli
xlat
and
dec
and
inc
stos
add
stc
insl
fstl
ret
add
mov
rcll
cmp
push
xlat
mov
lea
decl
cmp
daa
imul
outsl
push
lods
pop
sbb
mov
xlat
push
jp
dec
mov
scas
insl
dec
mov
ror
inc
sbb
imul
out
test
and
push
mov
movsl
push
jae
pop
mov
in
fcoml
test
bnd
loope
mov
rcl
mov
inc
xchg
shlb
adc
xor
jb
fisubs
scas
in
push
aam
insb
push
sbb
cmp
movaps
fimuls
loop
mov
stos
mov
mov
cli
sbb
sbb
adc
xchg
sbb
lea
lret
push
test
adc
fnstcw
xor
inc
loop
and
js
pop
stos
popf
ror
xor
ljmp
ja
insl
mul
notb
fcoml
sub
push
inc
lods
cmp
aam
inc
and
adc
pop
jbe
lret
add
mov
jl
jmp
arpl
jbe
scas
int
fs
shll
test
outsb
leave
mov
pusha
jne
imul
das
adcb
jns
scas
xchg
cwtl
mov
mulb
inc
or
pop
add
push
roll
clc
std
mov
cs
jle
dec
ret
xchg
rolb
fs
sub
cld
or
stc
pushf
ret
push
mov
sub
mov
jae
insb
mov
jecxz
add
jns
pop
out
jo
or
or
jecxz
mov
arpl
jp
insl
adc
push
out
push
subb
cmp
xchg
rolb
and
clc
sub
pop
sbb
es
dec
and
test
cld
je
cld
aas
xchg
inc
jp
adc
stc
sbb
ret
xchg
xor
outsb
int
add
aam
mov
and
jge
out
pop
pop
adc
daa
cmp
jae
xor
sbb
mov
addr16
mov
ret
cld
jb
cmp
xor
pop
add
les
push
insb
dec
lods
fstpt
cmp
mov
jecxz
push
bound
and
xchg
push
enter
adc
jbe
pop
aam
push
pop
or
ja
imul
and
jae
fimuls
imul
out
cwtl
in
jo
jno
push
jno
lahf
jno
fcoms
aad
push
mov
pop
lea
stos
and
hlt
cmp
sub
mov
out
icebp
sti
adc
cs
jb
xor
out
out
jae
pusha
es
adc
and
xor
insb
push
shll
insl
xor
int3
push
push
inc
imul
sub
xchg
incl
pop
cmp
add
xchg
imul
pop
shlb
divb
xchg
rclb
repnz
add
and
in
ret
or
dec
xor
cltd
lret
gs
sarb
gs
iret
stos
xor
sarb
and
lcall
mov
mov
push
pop
mov
add
jno
adc
insl
and
pop
jne
xchg
pop
popa
in
ss
sub
cmp
dec
pusha
mov
jno
adc
mov
rcr
mov
adc
in
mov
and
cwtl
pop
int
sub
jmp
xor
mov
jp
or
push
sbb
aas
or
icebp
into
stc
daa
jp
outsb
mov
rol
sub
in
and
ret
xchg
jo
incb
in
jne
adc
push
es
xchg
jl
cmpsl
push
data16
xor
pop
add
mov
push
ljmp
xor
pop
pop
lods
sub
rol
jg
or
dec
scas
add
add
push
xor
push
cs
jbe
rorb
dec
and
cmp
sti
in
roll
lcall
and
in
fildl
dec
in
fisttpll
paddw
sub
xchg
cmp
mov
xchg
sub
or
adc
push
jbe
push
movsl
inc
pushl
mov
imul
pop
lock
xchg
in
push
rolb
out
or
xchg
or
pop
pop
sbb
lods
pushf
int
sbb
int3
jae
lock
adc
push
mov
mov
dec
stos
sub
andl
inc
into
test
cmpb
in
vcmpngt_uqsd
xchg
push
fisubrl
aad
jge
push
into
insl
push
pop
sub
in
jo
pop
sar
ss
jge
ljmp
or
dec
mov
je
fstl
movsl
xor
and
dec
shrb
rorb
ljmp
cmpl
xchg
rcr
sbb
pop
scas
cmpsl
cmp
jl
in
jmp
jle
pop
cltd
int3
loop
std
inc
sbb
out
adc
cmp
pop
aaa
sub
xchg
add
into
hlt
out
js
dec
xchg
out
cld
mul
xchg
insb
xchg
outsb
pushf
mov
shr
js
xchg
and
adc
test
xchg
xor
xchg
das
lcall
push
ret
loope
int
jo
xchg
aas
leave
movsl
mov
lret
dec
testl
lret
in
mov
pop
sbb
inc
ds
mov
rcll
fdivs
pop
call
outsl
shll
movsb
lock
cmp
inc
xchg
cli
jmp
push
out
sbb
and
add
test
out
hlt
mov
scas
xchg
mov
mov
xchg
dec
arpl
xchg
add
into
dec
lds
cmp
insl
or
pop
push
lret
cld
nop
pop
sbb
mov
jns
call
sar
test
cmpsl
or
inc
xchg
pop
cmpsl
inc
orb
mov
xchg
or
std
test
pop
pop
ds
xlat
mov
sbb
scas
outsl
out
push
loopne
ljmp
gs
sub
and
aad
cmp
bnd
jns
mov
lock
lds
jecxz
addr16
das
cmpsb
ja
hlt
sbb
cltd
sti
sti
fdivrl
add
pushf
shr
rcll
or
scas
lahf
sbbb
mov
out
test
inc
mov
stos
jb
pop
xor
xor
mov
fs
mov
xor
pcmpgtb
jae
movl
jnp
gs
dec
lods
fcoms
jbe
cmp
sti
pop
clc
arpl
fnsave
mov
inc
mov
sub
jl
lds
dec
or
and
or
dec
mov
pand
mov
int3
xchg
sbb
rcll
cli
mov
aad
int
fidivs
xor
movsb
push
lods
jecxz
enter
mov
and
mov
icebp
loopne
add
mov
and
fwait
and
xchg
aaa
repz
fwait
insb
lea
or
add
inc
repz
sub
ljmp
scas
dec
xchg
test
fnsave
sti
xchg
or
xchg
orl
mov
pop
sbb
aad
mov
mov
mov
adc
ret
mov
dec
aam
mov
mov
mov
jo
sbb
lcall
aas
aas
mov
jnp
cmp
rcrl
or
push
in
nop
pop
std
test
out
stc
jno
nop
shr
icebp
sbb
push
sbb
mov
pop
jp
movsb
jle
test
ljmp
stc
in
popf
jne
loope
xor
or
inc
fistps
popa
insb
nop
push
outsl
jno
ljmp
ss
push
pop
ss
sti
sahf
ja
inc
and
stc
adc
adc
popf
or
es
sub
mov
xor
pop
mov
aas
out
popa
bnd
mov
sbb
lret
addl
in
je
div
sbb
push
nop
repnz
sbb
loope
mov
es
xchg
and
jb
repz
push
push
rorb
fs
popa
outsb
or
and
sub
nopl
jo
sahf
aas
adc
rclb
lcall
stos
cmp
inc
push
out
jge
dec
sub
xchg
pop
les
mov
mov
out
into
mov
sub
in
mov
call
data16
sbb
jne
in
sub
jp
jb
cmc
cmp
inc
mov
decb
xor
js
and
and
jmp
int3
aad
cld
aas
add
icebp
add
cmp
add
pop
gs
inc
xchg
nop
out
cs
add
movsl
and
jns
add
mov
sbb
sbb
cmp
hlt
int
inc
jle
mov
xor
aam
xor
pop
inc
xchg
lcall
fildl
out
lea
pop
mov
popa
shll
daa
sbb
int
sbb
xlat
cltd
mov
push
inc
pushf
in
add
pop
fstpl
fcom
add
les
sub
popa
and
addr16
mov
test
dec
lret
and
rorw
mov
sub
push
fwait
jne
xchg
fwait
push
or
add
fwait
cmp
cmpsb
and
in
lods
add
fidivrl
cli
lahf
add
push
mov
shrb
popf
lock
repz
sub
fbstp
cmpsl
dec
lods
pushf
and
aaa
pop
pop
pop
shll
xor
mov
int3
cs
add
dec
pusha
or
and
mov
pop
mulb
test
push
and
mov
pusha
push
cmp
push
jae
adc
or
ds
loope
pop
pop
lock
call
xchg
pop
stos
cmpsb
je
push
mov
outsb
out
cmp
mov
outsb
fidivl
xchg
cmpsl
cmp
sar
cmc
mov
std
mov
mov
gs
dec
mov
and
jmp
push
icebp
aaa
xchg
dec
inc
add
sub
xor
cmc
popf
jae
jg
mov
xchg
ss
mov
sub
sbb
sbb
adc
mov
and
cmc
mov
pop
cmp
push
jmp
scas
pop
jns
lcall
sahf
out
in
mov
cmp
stos
leave
std
pop
and
ds
in
lods
xchg
aaa
mov
add
jecxz
outsl
daa
add
cmpsl
mov
and
push
push
xchg
outsl
pop
adc
pop
push
dec
jmp
sbb
leave
jecxz
or
xor
pop
inc
sbb
lea
jnp
mov
ljmp
mov
inc
cmc
mov
pop
pop
xchg
icebp
aam
test
xchg
jnp
push
mov
pop
fs
add
inc
sahf
aas
fdivs
pop
das
xchg
xor
cltd
or
fisubl
movsl
or
dec
movsl
adc
dec
in
mov
fsubl
cmp
dec
int
repz
push
mov
insb
or
or
sbb
ja
xchg
cli
push
out
das
mov
imul
vpsadbw
xorb
xor
sbb
andl
das
scas
mov
mov
jle
insb
ret
subb
nop
or
stc
lea
mov
rcll
out
cs
push
mov
dec
xchg
ja
notb
imull
test
mov
ss
add
xchg
out
inc
sahf
stos
nop
inc
add
aaa
mov
gs
shl
cs
pop
sub
outsb
test
dec
imul
cmpsb
cmp
test
leave
and
sbb
push
aaa
repnz
push
ret
and
lret
xchg
xchg
sbb
dec
and
cmp
imul
roll
lret
pop
sbb
rorl
pop
or
jmp
aas
pop
jbe
scas
cmp
adc
and
xchg
std
jbe
mov
lds
push
addr16
mov
cmp
lea
jne
mov
xchg
cmp
pop
mov
mov
add
sub
pop
push
sbb
jno
inc
loopne
mov
fistpll
dec
or
dec
out
sub
icebp
ljmp
repz
sub
iret
arpl
ja
icebp
fistpll
stos
out
fimuls
mov
push
inc
sti
aad
pop
mov
jp
jle
gs
ret
push
cmp
fwait
mov
jno
adc
jns
aaa
in
in
xor
ds
push
push
push
add
jp
push
cmpsl
mov
scas
add
lea
or
out
pop
mov
ret
adc
jo
ljmp
jae
into
cmp
imul
mov
push
shl
mov
dec
movsb
mov
mov
push
jae,pt
jno
inc
xchg
push
test
mov
pop
fwait
inc
stos
mull
adc
jmp
in
arpl
xlat
pop
lret
add
std
shlb
shll
sahf
out
lret
rolb
jnp
jecxz
or
iret
cmpsl
neg
nop
jmp
cmp
movsl
lret
popa
cmpsl
lock
mov
jecxz
fwait
dec
subl
pop
in
add
adc
dec
mov
add
xchg
ds
mov
scas
sub
movsl
rcrb
pop
js
iret
data16
push
gs
mov
xchg
daa
out
push
mov
bound
mov
adc
lret
fdivl
cmc
cmp
stos
pop
push
push
sbb
scas
push
cmc
negb
rcrl
mov
js
sub
in
lock
sbb
add
push
icebp
popa
in
jge
xor
jmp
sub
pushf
lcall
inc
push
ret
repnz
dec
fiaddl
cwtl
mov
test
push
in
movsl
or
pop
adc
ficoms
mov
out
adc
push
daa
cmp
cmp
inc
lret
ret
adcb
cwtl
ret
inc
shl
mov
push
stos
ficomps
rorb
out
arpl
lods
pop
push
cli
cmp
inc
pop
mov
xor
inc
testl
imul
ja
repnz
dec
test
xor
sbb
jge
and
ret
loop
ret
mov
sub
and
xorb
jle
mov
inc
xchg
out
rorl
add
stos
repz
or
xchg
jmp
sub
movsl
test
mov
jnp
and
push
jnp
mov
dec
cmp
ja
mov
inc
sbbb
adcb
or
or
nop
adc
push
mov
in
xchg
pop
cltd
daa
sbb
pop
cmc
sbb
pop
jmp
jns
add
ja
add
outsb
mov
sahf
nop
iret
dec
inc
rclb
inc
xlat
xchg
dec
test
inc
fcmovnu
and
ds
in
dec
adc
loopne
lcall
mov
jbe
push
add
lock
popf
push
lcall
mov
mov
mov
adc
stc
lcall
inc
jae
push
stos
leave
idivb
xchg
roll
pop
dec
insl
pop
lods
incl
pop
sub
lods
dec
lods
test
into
xchg
mov
sbb
shrb
mov
iret
add
pop
fists
test
int
insl
mov
mov
xor
inc
cltd
sbb
enter
xor
fildll
cmp
jge
and
ja
ljmp
out
add
pushfw
and
shr
adc
enter
jbe
hlt
addl
outsb
fstpt
into
setl
outsb
jbe
sti
aaa
and
pop
jae
repz
insb
andb
jl
jl
dec
inc
das
and
cmp
pop
pop
ret
loopne
fiadds
insb
lock
addr16
or
add
popf
test
push
jmp
cmp
cwtl
sti
or
xchg
pop
testb
add
outsb
call
gs
int
pusha
jmp
stc
cmp
cmp
mov
mov
loop
mov
and
mov
mov
inc
mov
jns
pop
fcoml
or
test
std
cmpsb
pop
jne
icebp
cld
and
add
scas
fnstenv
cmp
xacquire
push
ss
push
xchg
test
jl
loop
shll
imul
inc
xchg
les
inc
rcrl
inc
mov
adc
loopne,pt
dec
imull
xor
popf
outsb
loop
lods
or
lea
inc
fldt
flds
imul
cmp
lret
xor
jbe
or
ret
cltd
stos
repz
mov
nop
cmpsl
cmpsb
or
pushf
cli
loop
adcb
inc
lods
fidivrl
xchg
lock
repnz
aaa
xchg
jmp
rol
push
mov
push
pushf
inc
sub
ljmp
inc
stos
sub
or
in
mov
jge
xchg
push
or
cmc
xchg
clc
mov
dec
push
rorb
dec
int3
xchg
adc
or
xor
pop
dec
jg
es
mov
in
mov
xchg
cld
push
lods
nop
nop
mov
cmpsb
push
stos
in
push
xor
cmp
xor
jae
pop
or
fwait
in
sub
push
xchg
pop
fbld
dec
clc
add
pop
pop
xor
adc
pop
mov
mov
pop
outsb
frstor
and
out
lock
shll
loope
mov
fisttpll
cmp
aaa
inc
push
inc
stc
nop
pop
push
adc
jge
rorl
and
jns
insl
mov
mov
cmp
push
cmp
aaa
sbb
push
les
lcall
ret
and
cmp
out
in
inc
mov
push
notl
xor
out
mov
xor
mov
lcall
mov
rorb
push
lret
test
cmp
jb
test
sub
mov
in
scas
pop
dec
mov
cmp
sub
fldt
mov
push
lods
cmpsb
jo
mov
jp
cltd
and
orb
dec
in
push
ds
mov
ror
pop
sbb
inc
xchg
mov
repz
dec
filds
push
inc
cmc
lods
hlt
lea
pop
sbb
scas
inc
xchg
fidivs
inc
sbb
movsl
stos
jo
lret
sub
dec
or
mov
aad
stos
jmp
adc
mov
sub
add
ds
jmp
push
pop
xabort
inc
and
dec
mov
push
fwait
mov
hlt
dec
bound
outsb
pop
or
sar
lret
movb
pop
jnp
inc
test
fucomp
fidivs
das
stos
fwait
int3
pop
lahf
aad
xchg
int3
mov
call
enter
and
mov
xor
nop
in
dec
sbb
adc
lods
sarb
repnz
and
movsb
xchg
loopne
dec
dec
or
sub
fists
adcb
popa
jg
sbb
pop
push
add
dec
xor
cld
jne
lfs
test
imul
pop
call
jp
add
test
sahf
lret
and
dec
nop
mov
pop
orb
incl
hlt
sti
push
push
rorb
int3
inc
cld
ja
repnz
addl
inc
xor
pop
out
jo
not
hlt
dec
test
daa
adc
sub
mov
inc
or
ss
movsb
sbb
jb
jecxz
test
addl
dec
sub
xlat
lods
cltd
jg
movsl
mov
sti
sbb
mov
inc
into
xchg
jne
outsb
add
jae
inc
mov
fsubrs
aas
cmpsl
gs
lahf
lret
xorb
fdivrl
cmp
or
xchg
clc
rcll
daa
adc
inc
mov
add
dec
mov
arpl
mov
xchg
or
jb
pop
imul
stos
aad
sub
aas
mov
dec
scas
xchg
or
and
shlb
rcll
mov
xor
and
pop
push
in
mov
lahf
push
and
movsb
test
pop
push
push
jns
addl
add
inc
inc
mov
add
mov
mov
add
mov
or
or
enter
xor
jg
jb
xlat
pop
push
and
out
jo
push
mov
orb
hlt
mov
pop
int
add
dec
jb
sub
jae
jl
mov
pop
icebp
lcall
or
movsb
mov
xor
pop
pop
cli
orl
cmp
in
cmp
mov
inc
pushf
xchg
adc
sbb
push
movsb
mul
ret
dec
ljmp
ret
jg
lret
test
cmp
call
pop
popf
adc
out
or
pushf
fisubl
xchg
enter
aam
sub
mov
adc
dec
and
xchg
sub
lcall
or
adc
mov
mov
mov
pop
mov
and
lcall
cltd
shl
fldl
gs
cmpsb
pop
in
mov
dec
cltd
pop
mov
aam
and
ret
into
sbb
xchg
popa
arpl
rep
scas
adc
std
mov
imul
adc
in
in
sub
ss
icebp
scas
out
imul
pop
jbe
loop
xor
adc
int3
cmc
inc
xor
lcall
add
insb
and
push
push
loope
fs
jle
push
push
mov
daa
ja
sub
cwtl
jmp
jns
jle
push
movsl
cmpsb
sub
lea
nop
out
xor
call
sub
and
shll
fistps
add
ljmp
into
out
jae
inc
inc
outsb
cmp
fisubl
jb
fwait
stos
lcall
jp
dec
data16
cmovo
or
scas
outsl
cmpsl
xchg
jmp
in
xchg
std
rcr
mov
sahf
sub
cmpsb
dec
hlt
cwtl
mov
mov
adc
iret
dec
lea
or
sub
push
inc
cmp
jge
insb
hlt
adc
pop
sbb
into
push
rorl
fwait
addr16
pop
aam
lods
pop
fildl
dec
arpl
lds
roll
inc
add
int3
fs
pop
xchg
movsb
dec
ljmp
sub
imul
and
adc
xchg
mov
dec
jmp
sbb
and
ret
xor
cmp
or
mov
scas
lcall
test
pop
fcoms
int3
int
gs
dec
and
adc
and
shl
in
inc
or
fiadds
dec
fldt
pop
push
sub
sub
int3
stos
flds
imul
addr16
cmpsl
data16
inc
mov
mov
std
adc
inc
xlat
mov
sbb
ret
nopl
mov
insb
jo
mov
lret
in
outsl
sbb
pop
cmc
cs
jg
out
rorl
mov
cmp
outsb
sbb
add
shrl
sbb
ret
ljmp
xchg
js
jmp
mov
push
xchg
imul
cld
push
mov
bound
mov
lea
jge
lods
mov
int
icebp
inc
ds
iret
add
push
cmp
out
loope
stc
push
fildl
ljmp
mov
nop
mov
push
adc
add
loopne
mov
sub
clc
xchg
dec
mov
jge
xlat
cmpsb
xor
push
stos
fistpl
push
out
dec
imul
cmp
cmp
mov
inc
and
scas
mov
in
mov
lret
loope
or
cmpsb
mov
jp
adc
in
sahf
add
scas
ret
push
and
add
cmc
daa
icebp
test
loop
shrl
add
sub
and
jmp
xchg
mov
cmp
test
push
arpl
subl
fisubs
dec
add
fdivrp
flds
mov
popf
jge
pop
lret
ret
je
cltd
jmp
jno
push
pushf
popf
mov
inc
ds
test
xchg
xor
lahf
ret
mov
cmc
int3
push
push
in
push
inc
rcrl
cmpsl
lods
repnz
push
and
aaa
pop
aam
out
mov
xchg
loope
mov
or
and
mov
sbb
adc
neg
push
mov
stos
call
inc
dec
push
and
push
and
sbb
mov
pop
dec
mov
jbe
sbb
sub
stos
push
xchg
push
push
out
add
lea
aad
shrl
mov
inc
cmp
int
add
cwtl
lret
out
and
es
lret
in
jnp
add
add
mov
fwait
cmp
jge
shl
gs
pop
addr16
dec
inc
xchg
jg
push
dec
xlat
lret
inc
xor
data16
es
mov
ja
pushf
mov
inc
adcl
mov
inc
add
ret
xor
shrb
mov
out
das
xor
add
or
outsw
jg
test
ljmp
aad
adc
pop
arpl
mov
jae
aaa
push
mov
pop
xchg
cmp
xlat
lds
inc
mov
je
movl
push
shrl
cmpsb
sub
das
out
sbb
popa
lret
mov
lcall
adc
fbstp
fcmovnb
jb
mov
jl
outsl
idivl
ficompl
dec
sbbb
cmp
xchg
test
mov
daa
lods
cmp
xchg
std
push
jo
outsb
ret
mov
pop
or
psubsw
dec
mov
xor
ficoms
fs
add
dec
icebp
imul
stc
or
jnp
in
inc
negb
push
call
xchg
dec
xor
repz
hlt
in
mov
mov
rorl
inc
fistps
push
ds
inc
xor
dec
outsb
mov
mov
addl
and
movups
pop
pop
das
mov
mov
sbb
mov
mov
leave
jg
push
sub
xchg
clc
scas
mov
sbb
in
adcl
data16
cmp
xchg
mov
or
enter
iret
cs
sarb
lods
popf
movsb
push
sub
aas
into
xchg
loope
jg
sub
test
mov
xchg
fisubl
mov
inc
push
lret
and
dec
sbb
mov
in
cmp
inc
cmp
mov
sub
lds
movsb
push
dec
and
clc
cmp
call
dec
in
loope
mov
stc
push
test
xor
outsl
inc
out
loop
and
cmp
gs
gs
sahf
inc
pop
xor
sti
cmc
add
punpcklwd
jb
adc
adc
je
lea
jns
push
sahf
call
leave
aam
push
xor
das
cmp
imul
jecxz
notb
into
popf
mov
pop
sub
stos
jnp
mov
xchg
mov
sahf
jmp
ret
pushl
pop
mov
or
fwait
dec
je
ret
inc
iret
cmpsl
jb
mov
mov
xor
mov
enter
fnsave
push
jae
inc
repz
jge
add
js
movsl
repnz
adcb
mov
xchg
adcb
ja
insb
fldcw
mov
rorb
xlat
stos
push
cmp
loop
inc
xor
in
movsl
je
mov
lods
sbb
or
insb
sbb
add
sbb
inc
std
fildll
decl
aad
sub
jne
push
loope
xchg
mov
loop
jp
cmp
das
dec
pop
xchg
movaps
pusha
imul
jecxz
popa
mov
subb
pop
inc
adc
adc
mov
adc
test
and
inc
xor
fbstp
cs
cmp
addb
je
mov
fsubrl
clc
pop
cli
test
mov
cmpsb
adc
lcall
push
clc
cltd
adc
clc
loope
lock
leave
out
add
dec
jb
nop
or
inc
repz
xorl
in
add
aaa
xchg
mov
sahf
ljmp
cmp
cmpsb
inc
imul
lret
jecxz
mov
scas
dec
clc
sbb
dec
lret
js
fnsave
and
jl
pop
fbld
out
insl
and
dec
in
insb
and
push
add
lcall
add
push
cmc
lret
loope
outsl
and
mov
mov
out
imul
adc
pop
inc
jne
cmc
push
in
jns
xlat
shrl
sub
xchg
mov
loope
jp
lret
adc
jmp
outsl
mov
outsl
jmp
dec
jge
add
int
mov
into
outsb
sti
push
lods
and
out
in
push
outsb
mov
js
orl
pop
jo
jp
push
subb
push
jno
aas
inc
cmp
int3
push
outsb
xorl
arpl
mov
jecxz
xchg
aam
lock
inc
leave
es
outsl
pop
and
sub
lcall
xor
into
jns
iret
dec
cltd
inc
adc
jp
sbb
sub
jle
pop
mov
inc
into
insb
scas
ret
pop
or
pop
pop
ret
add
iret
push
xchg
xor
push
push
mov
mov
inc
not
test
push
test
cmp
cli
add
mul
jb
add
jmp
ds
xlat
mov
lcall
xor
jbe
xchg
ds
mov
ljmp
adc
daa
push
jne
jecxz
mov
js
cwtl
or
int3
push
js
in
aas
push
push
pop
mov
cmpsb
cmpsl
add
mov
adcl
sbbb
fwait
push
mov
icebp
pop
adc
lea
dec
pop
cmp
test
insb
mov
xor
or
jbe
push
fdivp
adc
sub
test
mov
inc
mov
std
in
xchg
cltd
mov
mov
jo
popa
fdivrs
rcr
xorb
fnstsw
popa
outsb
hlt
cmp
movsl
sub
adc
in
xchg
inc
cli
mov
sub
and
pop
movsl
sub
push
lea
dec
scas
fisttpl
cmc
shlb
test
enter
sti
nop
dec
sbb
adc
cmp
test
lds
dec
or
and
cmp
xor
pop
mov
pushf
mov
iret
cmc
pop
jbe
aas
mov
addr16
aas
repnz
sti
stos
bound
stos
sub
push
or
jp
lcall
dec
xlat
out
lahf
add
push
cmp
pop
jns
add
cld
movsl
sbb
shrl
cld
mov
out
addr16
mov
adc
fiaddl
xchg
sbb
cmp
pop
push
mov
pop
sub
stc
jno
add
filds
mov
or
or
and
dec
insb
sahf
scas
sti
pop
inc
add
iret
xchg
xchg
adc
jns
mov
dec
mov
adc
repz
ja
push
xor
lods
aad
negl
xchg
xor
mov
in
xchg
pushf
sub
cmp
sbb
xchg
cs
xor
loope
nop
and
push
jns
sub
and
outsl
je
test
lods
push
fsubr
sbb
push
out
or
cmpsb
je
dec
fdivrs
sahf
adc
outsb
and
and
lcall
int3
sbb
mov
sti
stc
dec
mov
jnp
jp
push
jbe
fnstenv
pop
mov
dec
pop
out
cli
outsl
cmp
sub
out
xchg
call
jmp
int
sub
push
inc
movsb
aam
jl
int
adc
mull
dec
test
ds
adc
imul
out
js
or
jno
sub
xor
fists
lahf
in
lds
dec
add
push
cmp
popa
cmpl
cmp
cli
add
or
mov
int3
int
clc
aam
int
push
enter
dec
and
in
ljmp
pop
clc
xchg
mov
mov
and
xchg
add
lahf
daa
mov
jmp
cmp
subb
stos
and
mov
sarl
jmp
mov
cmc
mov
or
jno
pop
rclb
lret
sbbl
cmpsl
mov
test
pop
in
sbb
cs
dec
lret
jg
rol
jp
mov
in
scas
cmp
data16
leave
push
pop
pop
fcompl
lea
shll
popl
aad
das
cmp
mov
add
mov
inc
inc
cmpsb
sub
sbb
xlat
movsl
mov
mov
jmp
xor
mov
lock
insb
std
stos
adc
lret
std
mov
aam
inc
pop
pop
pop
sub
jne
clc
sbbl
in
inc
sub
nop
into
mov
cmc
or
push
lret
imul
fstpt
push
call
push
ret
rorb
jg
jle
dec
inc
lods
or
cmp
imul
pushf
and
xor
imul
lret
ds
mov
outsb
push
xchg
xchg
call
add
int3
movsb
add
xor
fwait
mov
clc
test
cltd
popf
sbb
mov
adc
add
push
out
bound
fimull
mov
stos
inc
call
pop
or
in
inc
push
mov
daa
push
and
jo
imul
or
push
test
std
xchg
adc
sbb
mov
add
loopne
sahf
aam
push
sbb
call
mov
data16
es
decb
xchg
lahf
notl
jl
dec
push
push
pop
cltd
xchg
mov
out
jl
xchg
lahf
pop
rcrb
aam
sti
sbb
jge
jecxz
add
fnstenv
push
mov
cmp
fs
icebp
rorl
mov
pop
sbb
daa
in
sbb
dec
das
mov
stos
cld
xchg
xchg
lods
push
or
addr16
test
add
add
aad
out
fsubrs
xchg
sub
lahf
sbb
and
jns
add
mov
push
ds
sti
scas
mov
shlb
pop
or
cltd
add
inc
movsb
jl
mov
out
jnp
hlt
in
imul
or
inc
aam
lock
and
push
enter
and
or
cwtl
out
adc
sub
dec
bound
push
out
jae
sub
stc
push
les
mov
push
xchg
inc
add
mov
dec
call
mov
pop
inc
out
pop
push
jno
xor
adc
sub
fcoms
push
xor
sbb
sti
mov
notl
subb
out
sbbb
jnp
xchg
leave
stos
mov
jns
jge
sub
out
or
jge
ds
xchg
fidivrs
mov
jno
fs
in
aad
push
fistps
stos
in
cmp
fs
xchg
out
dec
and
add
ret
mov
out
mov
mov
fwait
xchg
jb
push
pop
push
rcrl
mov
insl
mov
in
cmp
jno
popf
push
mov
shr
leave
jno
jecxz
stc
xchg
int3
hlt
jnp
adcl
es
sti
enter
lret
fwait
aas
xor
popa
dec
fsubs
ret
orl
adcb
and
int3
xor
js
dec
xchg
roll
and
mov
in
inc
mov
jecxz
ret
fstpt
cmp
sub
inc
js
fstps
mov
and
inc
adc
rolb
mov
push
cmc
mov
clc
xchg
daa
xor
or
sub
ficomps
xor
sub
xor
int
jg
insb
jb
pop
out
sub
mov
cmpsl
mov
sub
dec
dec
jge
xchg
adc
cmp
adcb
cmp
loope
imul
gs
arpl
sub
mov
das
jle
adc
scas
pop
sbb
jg
mov
sbb
push
mov
mov
lock
lret
test
mov
or
shlb
adc
aad
fildl
outsl
bswap
jo
mov
push
lock
test
add
int
mov
xchg
bound
ss
outsb
daa
cmpl
sub
ja
icebp
xchg
repnz
lea
ficoms
xor
scas
aam
cmpsl
xor
push
fcoml
aaa
fistl
push
adc
sub
fmulp
scas
xchg
cltd
fwait
and
sti
mov
pop
cwtl
inc
incb
aad
push
push
jmp
adcl
cmc
adc
add
clc
push
adc
ficomps
pushf
repz
jo
fs
cli
fwait
lods
push
cmpsb
rcr
jo
or
loope
cmp
mov
lret
dec
dec
inc
test
push
imul
data16
lret
cmp
lret
in
shlb
test
jge
imul
add
loopne
pop
pop
sub
in
mov
decb
add
idivb
or
pop
xchg
out
jae
adc
adc
js
push
rol
test
or
add
jbe
dec
mov
jns
adc
xor
xor
loop
push
cld
andl
lock
mov
or
fcomip
scas
hlt
mov
jmp
std
aam
pop
push
out
arpl
insb
ljmp
testb
movq
dec
cmpsl
push
adc
orl
xchg
and
rcrl
jp
int3
test
mov
je
stos
movsl
rclb
jmp
pushf
lahf
xchg
xor
flds
lock
jle
pop
mov
pop
nop
push
repz
ljmp
fdivrl
push
add
sub
scas
adc
insb
adcb
inc
lods
push
xchg
je
movsb
popa
lock
lahf
xor
jns
call
cmp
inc
inc
js
test
test
inc
nop
inc
repnz
scas
and
xor
hlt
pop
sahf
dec
daa
fwait
jno
jecxz
adc
jbe
push
in
lea
dec
xor
out
xchg
sub
pusha
rorb
ja
loop
jo
arpl
inc
adc
jnp
and
mov
aaa
dec
sahf
jmp
lods
lret
push
mov
outsb
and
pop
shll
inc
inc
std
push
mov
mov
jns
jae
or
movsl
iret
mov
cmp
fwait
add
data16
pusha
bound
and
push
inc
sub
add
xchg
sbb
mov
push
push
ret
xor
sbb
pushf
sub
nop
movsl
int3
rcrl
cmpsb
cwtl
lret
add
adc
mov
std
mov
jg
data16
jge
std
ljmp
sbb
js
das
inc
adc
and
loop
xchg
fmuls
mov
dec
pop
pop
or
jge
adc
inc
or
sbb
daa
pop
mov
adc
dec
jge
lret
in
jp
testl
in
add
ret
les
addr16
inc
int3
fisubrs
mov
jb
scas
mov
mov
push
mov
loopne
cli
pop
xchg
xor
cmpsb
xorb
xor
add
std
lcall
movsl
push
mov
jle
sub
js
test
ss
in
test
faddp
pop
adc
data16
cmc
test
push
sbb
and
dec
jae
outsl
xor
push
dec
adc
push
or
cmc
sub
mov
pop
mov
mov
mov
decb
call
aad
mov
outsb
xor
jne
push
push
cmpsb
cmp
std
ljmp
das
or
out
xor
aam
imul
cmpsb
sub
stos
insl
pop
and
dec
jno
rorb
push
adc
mov
xor
push
mov
or
inc
adc
std
lcall
pop
adc
pop
fs
push
popl
push
loopne
sub
mov
std
neg
int3
sbb
ficomps
cltd
push
andl
icebp
mov
std
mov
mov
xor
inc
daa
bound
aaa
mov
int3
push
sbb
ucomiss
cmp
sbb
aas
repnz
pop
push
pop
rolb
jge
xor
sub
cmp
xor
mov
mov
movsb
ret
je
jnp
push
movsl
loop
add
popa
ds
cmpsb
pushf
mov
xlat
push
jbe
inc
int3
xchg
das
mov
sbbl
insl
push
hlt
pop
ret
jecxz
sub
addr16
das
pop
rclb
dec
mov
repz
sbb
mov
adc
lret
mov
les
adc
adc
sbb
xchg
iret
testb
test
ds
sub
jmp
mov
call
aam
in
loopne
push
mov
repz
mov
es
loop
rcrl
test
jl
call
inc
push
jg
jl
push
xchg
in
stos
fs
dec
jmp
mov
jg
imul
mov
inc
scas
stc
cmp
xchg
sbb
push
inc
push
jmp
cwtl
cmp
pop
or
test
xor
cmp
fcomps
xor
inc
nop
mov
xchg
or
data16
or
mov
xlat
iret
xor
or
out
mov
add
sbb
inc
sub
push
inc
aad
shll
mov
mov
pop
and
and
xchg
pusha
inc
insl
movsb
out
push
shll
pusha
push
xor
lock
mov
test
add
pop
in
sbb
shrl
sub
into
ljmp
out
loop
movsl
adc
stos
sub
int3
adc
jo
mov
sub
mov
mov
push
jbe
xor
ds
push
sub
inc
sub
cmp
mov
outsl
mov
push
sti
scas
push
cmp
adc
subb
cmp
cmp
pop
mov
xchg
int3
mov
jb
ret
pop
and
mov
or
popa
jae
or
aam
dec
pop
mov
sbb
cmc
mov
mov
popa
rcl
add
stos
or
call
sbb
out
test
fistpll
ljmp
dec
cltd
ss
inc
mov
cmp
mov
idivb
loop
dec
push
ret
lods
lods
repnz
jae
cmp
test
fiadds
fadds
cmpsl
js
mov
fcmovb
xchg
insb
xor
cli
add
pusha
mov
idivb
xchg
rorb
cltd
push
pop
inc
mov
lret
or
fsubrs
jae
xchg
arpl
and
shll
jae
pop
sbb
out
jbe
aad
outsl
mov
fs
or
popa
mov
push
je
shlb
out
in
inc
mov
repnz
das
pop
cltd
inc
lcall
rclb
test
jg
das
mov
sub
sbb
jl
ds
lods
pop
idivl
imul
aaa
popa
and
mov
jl
insb
inc
push
jl
lods
or
enter
loop
push
or
dec
jne
jnp
je
xor
mov
in
scas
notb
inc
nop
je
icebp
ud1
shlb
in
inc
iret
lods
jl
adc
div
arpl
imul
cwtl
fstps
mov
sahf
xor
hlt
out
ljmp
sub
pop
mov
mov
xchg
mov
jnp
mull
add
sbb
cld
or
adc
jmp
pushf
jmp
pop
or
mov
adc
inc
sbb
dec
mov
ss
sbb
int3
cwtl
icebp
add
sahf
dec
lahf
std
jae
int
add
push
jmp
test
jno
push
xor
jge
call
add
fisubl
or
rol
idivl
fcoms
adc
dec
mov
jg
dec
stc
movsb
add
stos
stos
sbb
inc
scas
jle
push
repz
push
les
stos
clc
and
sub
cld
int3
or
jbe
add
push
mov
in
pop
aad
and
xchg
mov
push
dec
es
or
lods
test
arpl
jno
push
stos
mov
xchg
cmp
popa
in
fsts
sar
fsubp
push
cwtl
push
xchg
cmpsb
dec
add
int3
repnz
pop
push
sti
push
pusha
test
int3
pop
leave
cmpl
cmp
adc
and
and
push
jb
mov
fstps
cmp
iret
out
int3
shll
test
inc
cmc
sti
lock
sub
das
pop
insb
fcoml
and
add
jne
xchg
stos
jmp
jg
sarl
or
push
pop
xor
cwtl
sbb
mov
mov
xchg
jmp
push
adcl
xchg
movsb
mov
sti
pushf
repz
ret
inc
mov
shl
jno
sahf
into
fisubrl
xor
mov
mov
xor
push
push
lahf
shl
mov
cmp
sbb
jecxz
scas
inc
call
xchg
jg
lods
or
fs
mov
lcall
lahf
sub
sbb
and
sub
scas
and
adc
outsb
mov
imul
or
les
add
xor
pop
out
shrl
mov
jle
lods
pop
aaa
fsubs
aaa
fcmovnb
pushf
and
ljmp
pop
int
jbe
adc
inc
stos
sti
xchg
xchg
fs
cmp
add
mov
sbb
mov
jmp
dec
inc
shlb
loopne
fdiv
push
jge
pop
mov
pop
fucomp
out
outsl
add
ss
or
ljmp
ret
adc
cmpsl
mov
xor
jecxz,pt
in
jb
iret
in
stc
std
cmc
mov
add
idiv
lahf
mov
cwtl
xor
add
sub
cmpsl
lods
cmpsl
ja
in
push
cltd
jno
cmp
mov
lods
das
ds
std
jb
jl
push
test
pop
xor
repz
in
push
jne
cmpsb
add
hlt
add
lods
push
xorb
mov
inc
mov
jge
in
inc
push
es
aas
jl
jb
xchg
inc
push
dec
cmp
dec
sti
je
pop
xchg
popa
xor
addr16
or
cmp
icebp
std
shrl
xor
mov
mov
xor
das
fxch
subb
inc
jg
aam
xorl
sbb
aad
aam
imul
mov
xor
in
test
cmpsb
xor
add
fsubrl
decl
mov
xchg
sti
adc
push
dec
lock
add
and
rcll
leave
mov
rcrl
push
test
add
lea
dec
fwait
mov
fadds
cs
push
pushf
lret
dec
add
jo
cmc
loopne
dec
or
sbb
je
mov
lock
cmp
inc
stos
sub
fs
sbb
insb
imul
loope
pop
mov
or
shrl
sbbl
in
sub
pop
test
out
cmp
push
cmc
int
loop
jle
add
and
or
cmp
clc
mov
xor
cmp
cli
jbe
clc
sbb
hlt
push
pop
int3
xor
xor
jnp
xor
inc
lods
cmp
mov
stos
ss
cmp
adc
pop
psllq
jno
sbb
addr16
imul
push
popf
jle
loop
lcall
mov
daa
ret
add
xlat
xor
or
cmp
mov
push
iret
out
xchg
xchg
pushf
inc
jnp
idivl
push
xorw
fists
rcr
clc
ret
and
clc
test
out
ret
mov
push
and
fildll
pop
push
and
jle
mov
andb
mov
xchg
cmc
mov
adc
repz
arpl
jg
cmp
out
jno
mov
mov
mov
push
test
pusha
xor
mov
lods
mov
mov
lahf
sub
pop
divb
sbb
mov
es
ret
dec
adc
call
xchg
mov
cmp
cmp
loop
push
fst
pop
ljmp
pop
sbb
add
fs
hlt
fldl
enter
fbstp
addb
jb
fildl
mov
mov
insb
inc
das
lea
lock
xchg
out
cmpl
dec
add
outsb
or
lahf
dec
clc
mov
loope
aad
or
mov
inc
std
insl
aad
jns
aad
xchg
adc
mov
mov
jo
cmp
push
push
mov
sub
pop
shll
aas
das
or
js
pusha
and
mov
mov
jns
pop
pop
mov
call
shll
jg
out
popa
mov
or
and
call
pop
icebp
enter
mov
sub
add
in
lret
lods
sub
push
push
outsl
scas
sbbb
jno
cwtl
ss
and
add
enter
cld
push
fists
int3
xchg
sub
ret
fistl
push
jnp
inc
pushf
sub
pop
sti
jl
arpl
int
lea
sub
pop
add
pop
xchg
jb
gs
subl
call
das
sbb
call
push
movsl
inc
push
sbb
jmp
and
in
scas
jmp
enter
pop
sbb
leave
cmp
cltd
push
lock
pop
movsb
pop
jbe
lods
push
adc
or
push
push
negb
jo
int3
mov
fs
cld
ss
gs
shlb
xorb
dec
ljmp
bound
mov
fimuls
xorl
ljmp
jle
jl
jne
add
xchg
sarl
adc
fldt
les
cmc
insb
sbbb
das
cwtl
enter
aam
scas
push
inc
mov
hlt
imul
inc
rclb
dec
loope
pop
or
loope
push
outsl
popf
js
mov
xor
pushf
xchg
es
push
push
inc
ljmp
lds
and
mov
push
insl
xor
jns
mov
sbb
js
mov
mov
xlat
icebp
ds
push
pop
xor
fisttps
ds
mov
fs
mov
mov
add
xchg
inc
ljmp
jnp
into
push
or
int3
mov
jg
sbb
xchg
movl
push
adc
pop
int3
jmp
adc
push
es
jns
jb
push
sub
imul
push
or
fwait
shl
js
scas
mov
lea
movsl
fwait
je
and
sub
lret
adc
lock
or
push
dec
xchg
pop
std
dec
inc
jmp
xlat
in
shlb
xchg
mov
push
cwtl
push
dec
gs
dec
out
push
stc
aam
and
sub
inc
aaa
mov
ss
mov
test
pop
xor
stc
jns
aad
repz
iret
ss
cmp
sbb
jge
add
int3
rcr
cmp
or
add
fstpl
dec
shrb
push
loop
dec
jne
push
jne
mov
push
inc
mov
mov
jne
cld
mov
movsl
shlb
mov
sbb
lods
inc
scas
fnstcw
rcr
inc
jo
jns
mov
jecxz
test
jns
std
je
push
pop
jecxz
popf
mov
dec
fldcw
aaa
orb
repz
mov
pop
subl
les
shlb
lret
cmp
movsl
pop
imul
lea
push
add
cmpsb
or
data16
lret
mov
aam
mov
add
sub
loop
adc
out
sbb
sbb
mov
inc
daa
ds
sahf
pop
div
xor
out
xor
ja
stos
inc
sahf
and
movsb
aaa
and
ret
repnz
mov
dec
xchg
test
repz
pop
mov
test
cmp
sbb
push
mov
pop
mov
scas
dec
dec
jg
mov
dec
and
rorb
dec
and
sub
rorb
divl
arpl
repnz
push
mov
cmp
mov
mov
push
aam
push
mov
int
sbb
fimull
sub
out
shll
mov
leave
adc
inc
aam
test
lret
or
lcall
mov
pop
push
ret
xchg
jl
jb
fwait
push
fdivs
mov
cs
and
sbb
push
or
cmp
loopne
js
jp
push
jns
call
push
pop
ret
dec
jp
or
add
scas
add
cli
push
aaa
loopne
dec
dec
shll
mov
pop
inc
mov
jns
inc
pop
dec
cmp
xor
lahf
test
and
aad
push
outsl
sti
out
pcmpgtd
sub
lock
jl
or
imul
jns
xchg
movsl
pop
in
add
int
xor
addr16
ret
adc
add
jmp
ja
inc
adc
inc
ud1
dec
cwtl
mov
loop
dec
int
fs
cmp
loopne
arpl
xorb
dec
mov
scas
cmpsb
adc
mov
mov
cltd
xchg
dec
pop
mov
mov
inc
out
in
test
mov
test
mov
and
jno
sub
dec
mov
sub
sti
mov
adc
pusha
sbb
outsl
push
pop
adc
sub
and
mov
jmp
lret
and
faddp
jo
stc
jge
cli
rorb
add
mov
int
push
sbb
lahf
aam
int3
sub
fstps
jae
loope
mov
mov
jns
add
mov
pop
fnstcw
mov
mov
pop
out
loop
test
movl
stos
lds
mov
dec
pop
mov
pop
or
pop
scas
jecxz
push
insb
subb
test
cli
mov
xor
add
int3
lret
mov
jmp
rcl
adc
cmpsb
fisubrs
push
std
aas
push
test
lods
fcoms
mov
mov
sub
leave
sahf
adc
int
or
gs
mov
nop
leave
pop
sub
jge
ss
mov
push
add
neg
dec
xlat
loopne
mov
fwait
mov
jmp
and
and
jne
sbb
or
pop
and
fs
loopne
ja
decb
add
push
subb
fistpl
test
mov
gs
pop
ffreep
sti
clc
xor
xchg
lods
push
cli
push
push
dec
lret
mov
shr
notb
pop
push
mov
cmpsl
gs
lret
pop
or
repz
jg
fsts
jbe
inc
xor
jecxz
stos
stos
inc
and
movsl
or
sbb
out
stos
popf
repz
imul
hlt
jo
es
fmull
lcall
and
fs
cmp
leave
mov
mov
cltd
pmaxub
ljmp
and
inc
dec
imul
and
xor
fcoms
imul
adc
push
add
dec
pop
xchg
pop
test
mov
inc
addl
and
adc
sbb
cmp
pop
movsb
sbb
jl
push
cmp
mov
or
mov
xor
insb
ja
jg
out
and
pop
imul
popa
pop
dec
dec
mov
outsb
pop
dec
fs
push
das
xor
mov
nop
pop
lock
add
loop
and
push
jp
jl
fldl
fnsave
jp
imul
push
lods
push
xchg
mov
mov
cmpb
jecxz
sbb
stos
aaa
mov
fiadds
lods
dec
shrl
pop
add
cmp
sbb
lcall
inc
sbb
in
mov
rcrl
in
add
add
sub
popf
shl
mov
fsubr
mov
repz
arpl
adc
jg
in
xlat
mov
mov
cmp
and
sbb
lret
jle
mov
or
xchg
into
adc
pop
popa
sub
fidivl
mov
pop
bnd
push
mov
jecxz
clc
fists
cmp
push
inc
add
ret
jmp
mov
repnz
add
lock
dec
add
lahf
std
dec
aad
cmp
rcr
mov
out
js
popa
xlat
in
loop
in
movsb
outsb
lretw
aad
adc
dec
pop
sti
sub
repz
sbb
push
inc
cmp
or
dec
lods
lahf
xchg
and
in
pop
adc
addb
leave
rorl
mov
lea
mov
fiadds
fiaddl
std
movsb
pop
cmp
fucomp
inc
out
jl
push
add
push
add
adc
call
or
repz
dec
rcrb
push
mov
push
jmp
inc
aam
in
xor
lahf
icebp
fdivrs
mov
and
xchg
sub
mov
xor
xor
mov
sbbl
mov
loop
jae
mov
pushf
or
lret
cmp
divb
pop
clc
movsl
xor
cmpl
cmp
cltd
dec
lods
addr16
or
out
lea
pop
inc
lea
sub
hlt
push
pop
cli
xor
faddl
and
xchg
out
mov
jmp
lret
icebp
sbb
test
sbb
cmp
rclb
outsb
lods
ja
or
xchg
mov
ret
test
xor
test
ror
clc
pop
std
sbb
je
les
mov
cmp
push
lret
sbb
mov
adc
call
cs
imul
xor
fs
pop
inc
hlt
jecxz
adc
mov
cli
repz
ss
sbb
xchg
adc
pop
and
jne
push
je
push
popa
clc
outsb
test
popa
shl
xorb
xor
dec
mov
or
cmp
orl
cmp
out
mov
jl
ds
daa
xchg
fcomps
movsl
mov
pop
sub
fsubrs
ljmp
xor
xlat
and
adc
lods
out
lea
adc
add
jl
sti
push
mov
out
push
outsl
sar
sub
sbb
insb
dec
mov
pop
dec
in
xchg
push
push
subl
pop
xchg
sub
add
dec
mov
inc
fs
ja
lcall
xor
lea
sti
cld
cld
loopne
aaa
pop
lock
sub
pop
shr
leave
pop
cmc
das
cld
mov
cmp
mov
roll
mov
jns
sub
icebp
push
stc
dec
cmp
dec
xor
sub
outsb
or
push
pop
aam
outsl
fstpl
insb
ret
jo
cmc
adc
add
add
int
es
or
add
jno
adc
sti
pop
inc
xor
notl
pop
test
jno
sub
pop
in
ljmp
jle
addr16
popa
test
icebp
mov
xor
pop
in
or
xchg
xorb
faddl
xchg
mov
fstps
cmp
inc
jns
cli
dec
mov
nop
mov
fsts
imul
add
mov
mov
mov
imul
inc
sbb
dec
push
pop
dec
out
sahf
or
nop
jo
dec
mov
xor
sub
mov
sbb
testl
subl
ds
es
cli
jle
ret
stos
mov
adc
adc
or
ret
push
mov
std
pop
xchg
cs
xor
loop
lds
fdivs
dec
xor
fmulp
mov
mov
mov
or
push
push
or
out
test
mov
fidivs
out
push
aam
push
lock
aas
ds
jae
sbb
jnp
push
xlat
add
fistps
xorl
clc
mov
inc
sub
out
pop
mov
repz
cmp
movsb
rolb
fists
cmp
dec
cmp
xchg
jg
pop
jae
pop
movsb
dec
mov
pop
jl
cld
jne
push
mov
aam
mov
pop
jae
ret
pop
xchg
test
mov
push
pavgw
or
sbb
mov
xchg
stc
sub
inc
inc
and
pop
xor
pop
dec
adc
je
sub
xchg
dec
adc
jp
pushf
pop
push
and
in
daa
push
xor
loope
ja
aad
les
rol
ja
mov
subb
adc
shll
into
pop
or
cmp
mov
in
cmc
call
sbb
out
sbb
push
pop
fiaddl
iret
repnz
add
mov
adc
jmp
popa
xor
mov
sbb
mov
stos
xor
or
push
jae
push
addr16
xchg
inc
loopne
or
loope
sbb
and
gs
jle
dec
fldcw
mov
or
lret
fs
test
xor
xchg
fdivl
cmpsl
jb
sub
test
jge
jo
fnstsw
jp
or
fstl
xrelease
dec
xchg
leave
les
mov
ja
xchg
dec
fsubrl
repz
cmp
jg
outsb
loop
div
rcll
push
inc
and
insl
adc
inc
or
dec
mull
in
pop
subb
fisubl
loope
push
das
rclw
xlat
xchg
in
xor
xchg
adc
dec
mov
pop
push
pop
pop
lock
movsl
add
bound
hlt
rorl
xchg
xorps
xor
pop
out
cmc
insb
xchg
shl
mov
push
aaa
stos
mov
jmp
mov
arpl
js
mov
xchg
fldl
ja
pop
xchg
and
mov
cmpsl
pop
sbb
ljmp
xchg
mov
insb
popa
test
xor
fsubrs
cmp
inc
mov
notl
lea
retw
mov
adc
repz
lods
lcall
push
mov
pushl
data16
test
lahf
test
mov
rolb
lds
push
pop
ljmp
pop
pusha
test
jmp
fdivrs
outsl
sbb
mov
icebp
fisttpl
mov
xchg
sqrtps
mov
jecxz
test
out
jnp
call
adc
mov
adc
add
bound
out
test
pop
subl
stc
jp
add
mov
inc
pushf
xor
jno
cmp
arpl
xchg
mov
or
outsb
sub
sub
lds
adc
adc
xchg
xor
fsub
idivb
mov
stc
sti
nop
cmc
push
ljmp
pop
subl
popf
jo
aas
lcall
stc
xor
mov
sahf
inc
xor
push
xor
sub
jg
adc
xor
xchg
mov
fdivp
push
mov
jns
lods
fistpll
xor
mov
mov
xchg
or
cmp
nop
push
insb
push
stos
movsl
or
aad
imul
xchg
popl
roll
sbb
xor
and
xchg
cwtl
dec
cmpsb
jge
pop
xchg
jecxz
mov
inc
lods
out
je
sbbl
cmp
ret
or
xor
adc
das
jl
sti
mov
cmpsb
cmp
pop
mov
fdivs
insl
mov
add
aad
push
dec
adc
jmp
mov
loopne
xor
add
xchg
push
fstpt
add
sahf
add
testl
shrl
scas
mov
aad
inc
mov
cmc
jbe
shrb
int
push
dec
aam
cmpb
mov
mov
call
lret
loop
push
cmc
mov
jmp
notb
int3
xchg
dec
insb
mov
adc
mov
xor
rolb
inc
cmp
cmp
adc
popa
xchg
hlt
sbb
xlat
pop
cmp
pop
in
mov
add
jb
ljmp
mov
inc
dec
jae
mov
enter
mov
xor
popf
decl
loope
pop
test
std
mov
call
js
cmp
clc
fnsave
push
clc
cwtl
jb
pop
push
adc
movsb
or
hlt
and
das
or
aad
jp
cmp
and
aam
insl
xchg
lock
out
adc
and
inc
inc
mov
sti
mov
pop
xchg
mov
fs
popf
icebp
xor
rorl
cmc
pop
rolb
pop
icebp
or
out
add
jbe
push
xchg
shrb
mov
and
insb
rorl
dec
dec
mov
mov
loop
and
fadd
inc
mov
ret
dec
fidivrs
push
iret
add
or
xchg
jbe
mov
add
hlt
mov
adc
add
arpl
aad
mov
mov
loop
mov
dec
cwtl
pop
and
or
pop
pop
mov
int3
jl
push
adc
js
and
cmpsl
mov
jecxz
out
decl
jge
adc
cs
stos
repnz
add
mov
loopne
btcl
cmp
pcmpgtb
sub
es
mov
lds
outsl
adc
add
mov
daa
incb
xor
adc
dec
push
inc
jbe
lds
rorl
es
popa
in
fiaddl
xor
mov
insl
xchg
lods
mov
pusha
xor
jne
pop
mov
push
ds
aas
mov
or
in
test
push
sub
iret
jge
pop
pop
sbb
mov
push
mov
and
cld
daa
or
repz
out
jnp
lea
xchg
xor
mov
std
jmp
test
fidivs
pop
push
inc
pop
xor
add
sahf
or
add
or
roll
iret
cs
add
fwait
inc
lea
jns
dec
pop
push
push
or
jl
call
in
inc
pop
fisubrl
cmp
repz
fidivs
test
push
out
xor
cltd
out
adc
call
insl
sbb
ja
movsl
insb
inc
in
loopne
push
sbb
arpl
aam
in
push
inc
pushf
xorl
mov
fmull
mov
stos
mov
insl
jns
sbb
lahf
xlat
cmp
stc
cli
lods
xor
add
testb
pop
inc
add
hlt
ljmp
sbb
jno
decb
cltd
test
hlt
xchg
jge
jnp
dec
sbbl
in
pop
lahf
cmp
sub
adc
sbb
bound
mov
mov
and
push
xor
sub
lds
mov
adc
inc
divl
lret
inc
loop
push
add
cltd
mov
and
sti
mov
pushf
inc
pushf
inc
mov
lahf
push
add
iret
in
sbb
push
pop
push
shlb
mov
lahf
movsl
cmp
leave
repz
push
outsb
jbe
mov
pop
mov
fsubr
fists
pop
icebp
mov
imul
out
dec
push
addr16
dec
mov
loopne
push
cmp
cmp
sub
sbb
jge
lret
push
stc
cltd
stos
add
and
inc
sub
push
repnz
out
sub
in
roll
ds
sti
add
arpl
cmc
aas
mov
lods
push
cltd
lret
push
jg
xor
jge
pop
xor
push
add
loop
push
pop
mov
out
push
push
mov
dec
repz
imul
into
sahf
in
adc
sbb
adc
out
movsl
jecxz
inc
sbbl
pop
mov
inc
js
shrb
mov
add
enter
jo
out
fisubrs
in
mov
jl
outsl
test
enter
add
aas
pop
cmp
clc
lcall
pop
jae
dec
jns
lock
inc
dec
in
lahf
imul
std
push
mov
mov
jns
shlb
push
stos
in
int
mov
jno
xor
nop
out
mov
bound
mov
ljmp
sarl
sub
incl
lret
sub
std
xchg
and
cmp
mov
inc
movsb
mov
and
or
imul
inc
adc
push
and
in
fisubs
push
stos
xor
jp
mov
sub
es
mov
mov
in
stc
and
test
adc
lea
mov
pop
lock
pop
pop
sahf
lock
cmpsl
cmp
test
xorl
into
iret
sbb
sub
std
in
cmpb
test
jecxz
mov
or
call
jns
pop
xor
out
ja
ds
adc
cltd
icebp
popf
xchg
dec
push
js
sub
xor
mov
mov
add
mov
mov
fisttpl
xchg
aas
cmc
lret
add
sub
xchg
mov
mov
inc
or
cs
sti
pop
mov
insl
adc
add
sub
mov
insb
xlat
dec
push
loop
pop
or
cltd
popa
lods
mov
add
nop
xor
sbb
js
orb
data16
pop
jp
push
roll
icebp
mov
push
shl
addr16
int
test
stos
add
or
idivb
jecxz
fidivs
loop
ret
xor
xor
loope
ret
mov
shl
stos
imul
aad
std
and
iret
cli
fs
mov
sbb
push
add
pop
push
cld
popa
outsb
adc
xchg
repz
jae
daa
rorb
aad
in
bound
pop
sahf
or
xchg
loope
addr16
shrb
pop
imul
pop
xor
mov
aam
inc
pop
mov
ficompl
cld
xchg
insb
xchg
xor
jmp
insl
sahf
movsb
dec
out
mov
mov
xchg
jl
sbb
dec
mov
inc
add
mov
out
and
mov
adc
lcall
outsb
adc
mov
das
push
test
ds
xor
mov
mov
xor
inc
xlat
iret
enter
hlt
cmp
stos
xchg
mov
ficoms
mul
cld
in
mov
pop
jg
data16
inc
icebp
les
and
rolb
xor
jo
adc
pop
nop
mov
lret
js
gs
pop
xor
and
pop
lods
dec
cmp
pusha
sub
sbb
mov
movsb
nop
fldt
test
xor
adc
scas
dec
out
inc
hlt
and
hlt
xchg
mov
loopne
sbb
fsubl
jne
xchg
xor
lcall
xlat
xor
aam
in
pop
int
sub
cld
ret
dec
pop
ror
lods
cmc
pop
fistps
adc
leave
jno
cmp
and
adc
xchg
dec
pop
mull
lahf
inc
test
bnd
je
bound
jmp
outsb
rclb
cmp
fidivl
icebp
fmuls
enter
ja
repz
rcrl
aam
adc
and
and
xor
or
xor
sahf
mov
outsb
faddl
in
mov
mov
xchg
gs
adc
sbb
mov
out
and
mov
mov
jne
cmp
movsb
push
outsb
jne
jb
subl
sbb
add
pushf
ret
push
ret
repz
mov
shrl
shlb
push
or
ljmp
ss
cmp
leave
mov
jne
add
mov
inc
lcall
xchg
mov
mov
es
cmpsl
inc
jle
stos
popa
jne
xchg
pop
xor
movsl
mov
addr16
dec
ljmp
pop
dec
fwait
in
add
lock
dec
pop
fwait
jbe
ds
mov
incb
call
arpl
push
aam
mov
test
adc
cmpsl
enter
push
popa
xchg
pop
in
es
xchg
hlt
xchg
pop
inc
and
push
mov
ret
cs
mov
ljmp
imul
js
scas
inc
sarb
mov
sbb
pop
inc
dec
fistl
adc
mov
jnp
je
ss
std
scas
std
jl
add
aam
mov
aam
xorl
jg
aam
add
out
addb
dec
mov
jp
sti
pop
mov
lret
movsl
add
jl
push
push
xor
out
or
pop
wbinvd
pop
fstl
jne
lock
xlat
cmp
loope
aad
loop
or
faddp
popf
scas
cmp
je
lret
addl
sub
mov
rorl
and
add
or
rol
data16
ljmp
sbbb
or
mov
test
rol
pop
mov
cld
dec
bound
lock
sub
jge
pop
repz
sbb
int3
and
xchg
das
pop
scas
xchg
and
lds
push
dec
dec
cld
mov
inc
mov
leave
mov
ficompl
out
inc
fidivrl
out
push
popa
pop
and
mov
pop
xlat
sub
pop
popa
xchg
pop
daa
jno
aam
testl
jae
jmp
inc
xor
jg
sbb
and
inc
jg
or
stos
jmp
fstp
ljmp
fwait
push
adc
lcall
jecxz
movsb
mov
inc
lods
jp
and
mov
sbb
jg
lret
ja
adc
pop
roll
xorl
pop
jbe
mov
scas
fwait
rcll
mov
jmp
lcall
aad
jno
lods
mov
js
jecxz
in
roll
out
mov
cmp
sub
mov
data16
in
xchg
std
add
inc
inc
or
cmpsl
inc
dec
xchg
mov
jno
adcb
xlat
xchg
call
sbbl
pop
mov
push
arpl
filds
sub
add
push
adc
mov
inc
inc
push
hlt
psllq
and
andl
test
jae
mov
jp
lock
push
adc
push
pop
mov
mov
pop
push
adc
pop
sarl
adc
mov
push
adc
push
hlt
call
add
inc
jg
pop
lret
pushf
shlb
test
scas
xchg
aad
mov
imul
popa
add
int
rcll
sbb
hlt
popf
bound
pop
outsl
repz
lea
stos
fidivl
test
cmc
and
sti
cmpsb
cmp
stos
jl
adc
scas
jecxz
and
jb
mov
adc
pop
push
sti
repz
jo
and
add
mov
scas
and
testl
add
mov
into
gs
xchg
out
dec
mov
rcll
ds
adc
push
fisttpl
ss
hlt
outsb
addr16
pusha
loopne
jge
ret
test
sbb
jl
pop
inc
test
imul
mov
mov
mov
gs
ret
or
inc
je
sub
incb
sub
inc
out
push
stc
lock
out
jle
or
jns
insb
fadds
ds
insb
push
or
jge
scas
jae
std
push
add
rolb
lahf
in
ds
les
and
cmp
into
or
or
lock
xor
cs
xor
std
es
add
enter
dec
movsb
inc
or
xlat
push
and
pop
adc
fucomp
and
dec
stos
mov
imul
repnz
sub
bound
pop
dec
fmuls
xchg
xor
outsl
jecxz
cmpsb
adc
std
pop
je
or
cld
sbb
ja
mov
cmp
ret
adc
int3
test
dec
sbb
push
loope
ror
push
mov
adc
and
pop
icebp
fildll
test
in
insl
dec
adc
push
fcoms
cwtl
pop
bound
mov
jae
stos
sarl
pop
aam
jmp
mov
dec
add
inc
es
ljmp
in
jecxz
lcall
decb
inc
ds
pop
cmp
hlt
fidivrl
fcomp
lea
stos
xchg
adc
mov
cmp
push
sahf
cmp
push
frstor
dec
aam
outsl
mov
or
ret
cmpsl
sub
adc
jbe
inc
rcll
in
repz
pop
icebp
call
pop
xor
xchg
add
scas
mov
dec
or
pop
inc
mov
inc
mov
test
jge
rclb
xchg
xchg
adc
mov
mov
leave
jg
sbb
dec
call
inc
and
scas
int3
jns
iret
cmp
gs
mov
cmc
inc
inc
dec
mov
push
xor
pop
add
jbe
add
mov
lahf
aad
add
pop
hlt
dec
out
and
pop
mov
insl
or
xchg
lea
or
mov
data16
das
and
mov
scas
stos
xchg
pop
sbb
push
out
pop
push
pop
data16
mov
push
pop
jle
pop
pop
lods
stc
cmpb
inc
sub
mov
jo
pop
js
leave
jmp
pop
fistl
lcall
add
cli
lods
or
or
pusha
lds
test
adc
mov
outsb
subb
inc
pop
testb
mov
pop
aaa
cmp
je
stos
or
mov
sbb
movsl
ds
pop
pop
adc
pop
insb
and
xchg
mov
dec
lds
and
push
aad
cmp
sbb
out
push
cs
cmc
arpl
repnz
push
div
je
cwtl
adc
sahf
inc
jmp
lret
lods
fisubrs
jb
mov
out
dec
sbb
xor
mov
call
mov
jle
push
adc
in
ds
xchg
int3
jns
sbb
cmp
cltd
push
sbb
dec
popf
mov
rclb
jb
and
mov
icebp
loop
jg
cmp
pop
push
cltd
lea
int3
inc
inc
shll
pop
mov
xor
push
ja
fisubl
adc
pop
jge
sub
cmovnp
gs
mov
xor
mov
adc
aam
sbb
jo,pt
dec
sarb
inc
sub
hlt
inc
fnsave
jmp
jnp
rorl
lods
test
sbb
mov
dec
xorb
mov
scas
popa
inc
ss
call
and
add
xchg
mov
push
test
lock
inc
xorb
xor
dec
sub
mov
push
rcll
aad
xlat
xlat
mov
push
inc
xor
jnp
mov
in
filds
orb
mov
out
sub
mov
push
aad
in
lea
and
inc
loopne
inc
xor
push
cmp
pop
xchg
aas
add
mov
mov
mov
xor
in
gs
mov
out
cld
xor
dec
mov
mov
pusha
push
movsb
and
stos
pop
inc
pop
xlat
mov
cmc
test
or
stc
popf
sbb
inc
xchg
shll
outsb
out
jg
mov
nop
or
dec
movsb
das
xor
arpl
push
nop
add
rolb
fcomps
ss
lret
stos
push
mov
xchg
pop
dec
jle
xchg
fistpl
mov
mov
and
sub
sbb
pop
mov
pop
dec
push
inc
aam
mov
jmp
xchg
cmpsl
std
xchg
mov
xchg
push
cmpsl
push
jne
movsb
push
stos
add
inc
lea
jecxz
lods
lahf
jae
jnp
insl
insb
rolb
cmp
xadd
ret
into
push
jecxz
and
scas
cmpsl
mov
jbe
rcrb
xchg
out
sub
lea
jl
dec
dec
shll
stos
dec
fwait
nop
incb
test
pop
cmp
loope
jbe
or
fiaddl
jb
icebp
push
sbb
xchg
pop
jl
sub
sub
mov
mov
pop
bound
pop
pusha
scas
push
jmp
ror
xchg
inc
mov
ds
inc
loope
cmc
pop
cmp
xor
lock
fs
mov
in
jno
cmc
or
ret
mov
mov
pop
dec
mov
pusha
sub
std
clc
filds
mov
push
push
pop
fsubrs
xor
sahf
mov
jecxz
jmp
xlat
push
xor
icebp
mov
lea
sub
ss
scas
cmc
dec
mov
xor
lods
cmp
pop
jmp
cmpsb
divl
pop
mov
rcl
lret
lret
jmp
es
push
add
pop
cmp
dec
fsubrl
mov
xor
inc
mov
xchg
push
mov
xor
lcall
stos
add
push
loope
bound
or
sbbl
sbb
dec
fadds
scas
arpl
and
or
or
sub
mov
mov
xor
and
imul
inc
adcb
xor
enter
sbb
mov
xor
stos
out
mov
stos
dec
std
xchg
add
inc
decl
push
jnp
test
inc
mov
lahf
cmp
inc
sahf
xchg
inc
imull
cmpsl
or
cmp
iret
sbb
loope
movsb
jg
popf
or
out
outsb
mov
aad
flds
sti
lcall
sub
andb
pusha
push
add
adc
fsubrs
leave
xchg
cmp
scas
sti
mov
mov
jmp
loop
sub
xor
loopne
cmp
push
jl
fdivrl
faddl
lret
fisttpll
fsubl
adc
push
shrb
sub
adc
aaa
xchg
pop
or
loopne
push
sahf
jbe
enter
negb
popl
rcl
mov
test
and
jno
jne
jbe
int
and
pop
aad
clc
mov
cltd
xchg
es
dec
jle
mov
clc
mov
orb
jns
icebp
sub
mov
xlat
lret
jecxz
idiv
xchg
adc
jb
sbb
loop
adc
sub
popf
rcl
pop
add
lret
out
or
sub
cmpl
or
adc
xchg
pop
es
adc
and
dec
xchg
jl
sub
aas
xchg
cmp
test
xlat
adc
mov
jne
adc
dec
xchg
mov
fldenv
cmpsl
mov
sbb
in
push
pop
adc
stos
xchg
dec
dec
jo
ficoms
lock
mov
and
fstpl
bound
pop
mov
adc
lods
movsb
adc
xchg
dec
adc
pop
ja
adc
cmpsb
and
pop
jns
add
scas
movsb
mov
and
js
stos
frstpm(287
cli
adc
test
mov
jle
shl
inc
cmc
stos
icebp
cmp
imul
adc
cs
out
push
rcl
xchg
scas
aas
jmp
sahf
jecxz
pop
push
fcmovu
lahf
mov
sbb
pop
jb
cmp
fwait
or
stos
sarb
ljmp
movsb
mov
pop
repnz
iret
ret
xlat
sub
pop
gs
andl
mov
adc
repz
in
pop
jl
lock
jnp
rcr
mov
shrl
xlat
mov
add
jp
jge
cwtl
dec
xor
aaa
add
lods
add
lods
jle
pop
sbb
mov
lahf
jg
pop
mov
add
adc
scas
mov
loopne
out
fisttpll
clc
or
dec
push
outsl
adc
push
ror
negb
push
adc
int
add
imul
pop
or
sub
and
xlat
repnz
sahf
push
or
add
mov
jl
mov
movsl
mov
test
pop
xor
lds
cmp
enter
orl
arpl
das
mov
jle
shlb
push
testl
mov
cmpsb
cmp
sbb
xor
inc
int3
inc
stos
int3
imul
lcall
insb
add
pop
push
ret
lods
filds
xchg
mov
xchg
and
es
loopne
lock
jge
mov
dec
add
div
shr
inc
mov
adc
jp
push
mov
jne
int3
cs
mov
inc
sbb
test
out
or
mov
movsb
cwtl
rcll
sbb
aam
dec
daa
sub
inc
jg
pminub
and
xchg
fistpl
mov
pop
or
add
ljmp
movsl
inc
gs
movsb
sbb
sahf
dec
or
lds
adc
fildll
imul
aam
push
push
adc
cs
lret
dec
push
xorb
cmc
or
ss
stos
cld
imul
popf
arpl
pop
call
and
fcmovnb
paddw
xor
iret
aaa
dec
out
iret
push
cmp
out
bound
pop
add
jbe
fwait
pop
mov
dec
loope
sub
fidivrl
mov
test
mov
or
fwait
scas
imul
fidivrs
in
daa
lods
dec
fbld
mov
push
jle
sbb
jbe
enter
add
hlt
or
mov
pop
mov
jmp
sbb
sbb
cwtl
push
jo
cmpsb
lret
mov
or
jl
test
mov
imul
lret
ja
cmp
lds
cmpsl
or
fnsave
popa
sub
cli
mov
mov
dec
push
sub
cwtl
test
mov
insb
mov
xchg
mov
pop
adc
dec
aaa
aam
addr16
push
mov
iret
mov
push
pop
cmp
icebp
pop
xor
pusha
repnz
or
sbb
jmp
push
in
or
pushaw
pop
mov
jg
leave
add
pop
xor
sahf
sti
pop
and
ss
adc
xor
adc
mov
shl
pop
repnz
and
int3
xor
popa
mov
jne
inc
fsub
dec
mov
in
ror
cmp
repnz
int3
sbb
in
pop
xchg
mov
test
add
inc
fldenv
scas
mov
arpl
pop
ljmp
ret
adc
lds
cs
cmp
rcrb
jmp
int3
jecxz
push
xor
into
xchg
leave
jno
les
mov
aaa
roll
jne
hlt
frstor
sub
das
movb
sbb
iret
leave
push
cmp
data16
pop
sbb
mov
or
stos
push
test
or
enter
pop
sub
adc
jmp
and
pushf
testb
xor
jb
shl
sbb
xchg
loop
popf
jge
lods
push
lret
out
into
push
out
and
dec
mov
outsl
out
ret
inc
out
loopne
add
mov
push
outsb
add
jo
mov
push
mov
aas
adc
xchg
cwtl
mov
fwait
jecxz
jp
rorl
mov
mov
dec
sahf
shlb
mov
loop
movsl
les
lods
jns
cmpsb
lcall
lret
sbb
je
sub
ljmp
data16
adc
xor
xor
cmpsb
out
int3
mov
daa
push
out
and
ja
pop
mov
and
sub
push
test
cmp
lret
aaa
mov
sbb
and
fbld
rorl
cld
mov
xorb
roll
adc
ror
ljmp
mov
mov
mov
das
sub
enter
jns
jnp
push
icebp
lds
pop
or
rorl
pop
sbb
leave
jns
xchg
mov
sbb
lock
push
sub
imul
cmp
cli
outsb
fwait
xor
xchg
ja
sbb
pop
notb
daa
jb
push
fnstsw
pop
xor
sub
ret
dec
pop
ja
mov
adc
int3
loopne
add
cmp
sbb
dec
cmp
sarb
push
mov
rcrl
pop
dec
sub
pop
dec
gs
xor
frstor
popf
das
xchg
lcall
mov
in
inc
xchg
push
insl
clc
shr
in
xorl
aad
and
mov
push
je
subb
cltd
pop
fiadds
repnz
loop
sbb
pop
mov
popa
or
repz
jl
inc
int3
rcrl
test
push
je
push
shld
jmp
sti
outsl
or
lahf
push
imul
mov
push
xor
xchg
mov
addr16
dec
add
push
std
rclb
lret
stc
fcomip
pusha
bnd
and
mov
fucom
movsb
lret
out
cld
neg
dec
mov
xchg
dec
aad
in
push
in
pop
and
lret
xor
insl
ss
mov
inc
movl
and
jo
add
adc
rcrl
xchg
add
jp
inc
pop
sbb
cmp
mov
push
or
into
mov
clc
cmp
out
fisubrs
out
mov
fwait
ja
push
ret
and
insl
mov
mov
punpckldq
pop
lock
stc
add
loopne
inc
inc
xchg
xor
jg
loope
les
add
or
sub
mov
push
clc
roll
call
pop
inc
sbb
inc
adcl
es
push
xchg
cwtl
stos
in
push
jl
loopne
cltd
mov
sub
es
dec
xor
mov
push
pop
pop
xchg
add
lahf
sub
mov
aam
xor
sub
mov
jg
test
cwtl
repnz
xchg
jae
inc
icebp
outsl
cli
fldcw
lahf
sti
subl
or
inc
in
dec
mov
jecxz
adc
out
pop
and
cwtl
sub
nop
addb
rol
repz
lock
add
in
mov
test
pop
repnz
push
mov
in
mov
lret
out
ret
sbb
popl
jl
js
push
mov
fwait
or
push
scas
cmc
xchg
stos
add
bound
adc
loopne
xor
mov
in
fs
push
mov
add
sub
cmpsl
aaa
les
stos
pop
xchg
adc
movsl
inc
sbb
pop
dec
stos
test
fwait
jl
pop
cwtl
pop
out
sti
daa
repz
xor
sbb
push
mov
jb
mov
out
inc
cmp
add
or
jg
daa
jg
fstpl
jo
jns
jne
ret
stos
xchg
bound
jo
lret
xorl
fstl
aad
cmpl
pop
pop
sti
rcll
lods
push
pusha
nop
cmp
loopne
mov
mov
call
adc
into
popf
dec
ds
or
push
icebp
sub
adc
mov
dec
in
or
pop
push
ljmp
adc
repnz
out
mov
xor
pop
outsl
pop
sub
dec
aaa
test
lea
into
sub
adc
pop
imul
and
cli
incb
int3
dec
mov
dec
jb
push
sbb
imul
or
cmp
repnz
pop
bound
lahf
and
cmc
lods
sbb
jae
sarl
add
cwtl
out
test
js
add
ret
xchg
lods
pop
sahf
fadd
dec
and
push
ret
ret
push
ss
cmp
push
cli
test
lea
out
icebp
jb
jge
or
mov
jp
lret
fistps
dec
cmp
dec
scas
push
aad
mov
daa
pop
sbb
cwtl
sar
pop
push
inc
loope
pop
arpl
cmpsl
pop
subb
cmpsb
pop
pop
push
jae
jg
rcrb
xchg
jbe
fwait
sub
dec
inc
scas
sub
sub
mov
or
inc
data16
jl
test
xor
sub
test
pusha
xchg
aaa
fidivl
sbb
mov
gs
push
movl
test
andb
jecxz
xor
sbb
fwait
pop
pop
nop
test
dec
mov
dec
xlat
sbb
push
cmp
andl
in
fists
jecxz
inc
xchg
loop
pop
jno
es
mov
push
aad
scas
test
add
jecxz
push
and
mov
in
insl
mov
pop
jo
xor
cltd
int3
mov
and
pop
fxch
pop
mov
mov
xchg
dec
inc
int3
in
fsubrs
sbb
jecxz
xor
les
cld
dec
ficoml
sti
pop
int3
outsl
jns
push
xor
push
xlat
lds
add
filds
decb
imul
adc
xchg
lahf
jmp
push
jae
xor
cwtl
inc
jae
fs
imul
sahf
pop
lods
inc
sbb
xor
sbb
out
outsl
pop
movsb
outsl
daa
into
int3
inc
adc
xchg
and
das
mov
jno
movsb
sbb
shrb
test
dec
add
test
dec
jae
daa
mov
adc
sbb
fcomp
cmpsb
mov
mov
cs
lcall
daa
lret
fs
aad
cld
jns
aam
in
mov
addl
mov
fldenv
xor
push
mov
shrb
cmp
pushf
cbtw
insl
mov
push
cmp
fstl
sub
out
sahf
in
dec
test
pop
movsl
test
hlt
add
or
add
shll
sub
out
xor
call
sbb
cvttps2pi
pop
adc
fsts
aad
mov
iret
lock
mov
decb
scas
cmp
out
aad
or
or
inc
addr16
clc
lahf
lock
or
aaa
push
ds
sub
mov
addr16
xorl
jmp
test
push
or
test
sbb
mov
jne
push
data16
enter
dec
inc
ret
adc
fcomip
mov
cmp
inc
inc
mov
sbb
pop
inc
mov
mov
out
int
insl
xor
mov
shl
cmp
lods
push
adc
or
xchg
lcall
add
jno
rcll
gs
mov
xchg
push
dec
xor
or
and
dec
xchg
dec
xchg
cli
jae
shrb
pop
in
ret
pop
push
or
cmp
sub
mov
repz
or
xor
sub
mov
cld
js
jnp
fisttpll
sub
outsl
or
sarl
inc
negb
ret
push
call
xor
and
fisttps
shrl
movsl
call
add
fsubrs
int
cmp
sti
lea
lea
cmp
push
or
or
nop
leave
aas
aas
and
cmp
mov
pusha
leave
shll
jae
test
rcrb
mov
add
mov
and
mov
fildl
ja
enter
enter
iret
inc
jb
aas
pop
shlb
lds
cli
pusha
fucomi
jp
add
jmp
jae
mov
cmp
xor
adc
jge
jp
loope
jmp
aad
adc
rorb
ficompl
lea
xor
push
mov
add
imull
shr
sbb
lds
aaa
hlt
sarl
push
jbe
jb
xor
shll
rcr
insl
jns
movsb
lea
adc
xchg
push
mov
sarb
leave
mov
add
mov
add
std
adc
ja
fs
test
aas
mov
push
shll
sub
stos
lods
push
sbb
jno
fs
repz
and
loope
dec
xor
es
cmpsl
adc
aad
xlat
xorl
mov
jae
out
jge
js
cwtl
or
lcall
enter
push
cli
shl
in
cwtl
fstl
jne
lds
mov
or
mov
loopne
cltd
fdivs
cmp
shll
es
jp
jp
call
push
xchg
bound
in
push
and
dec
scas
or
lock
pusha
hlt
adc
mov
inc
scas
icebp
or
sbb
adcl
mov
imul
lods
popf
shrb
cld
addb
xor
pop
jp
xchg
push
pusha
add
sbb
mov
sub
or
sbb
xor
lcall
jge
push
in
or
ret
lcall
movb
mov
and
xchg
push
push
call
repnz
test
dec
mov
stos
cwtl
or
je
pop
pop
or
js
mov
add
cli
xchg
cmp
inc
jge
ret
jl
add
out
fildll
pop
dec
hlt
in
imul
sbb
and
popf
ret
int3
cmpsb
addl
sub
ud1
sbb
push
mov
sbb
test
sub
gs
or
or
sti
stc
push
pop
andb
flds
jae
mov
mov
jns
sub
cwtl
and
stc
fists
andl
frstor
lock
sub
stos
lods
pushf
cmp
dec
adc
jmp
loopne
sub
cmpsl
cmp
sbb
xor
leave
adc
ss
les
int3
or
push
dec
popa
enter
push
jmp
daa
cs
jmp
hlt
cld
mov
mov
xlat
cltd
cwtl
mov
test
std
dec
pusha
or
lock
xor
stos
xlat
add
int
pop
pop
shl
das
push
sbb
jb
aam
fsubrs
add
stc
inc
jmp
sbb
pop
adc
adc
in
dec
shrb
rorb
push
dec
sub
mov
leave
mov
sub
fstl
out
insl
inc
xor
cmp
xor
movl
jae
fdivs
sub
std
movsl
xor
mov
pop
fistps
push
popl
add
jne
sahf
arpl
loop
cmp
cmp
pusha
jmp
in
std
out
fsubr
mov
lcall
imul
cs
push
jbe
aaa
sub
inc
mov
lea
sub
or
popa
imul
movsl
shlb
in
jns
mov
jge
or
add
adc
and
xchg
aad
das
jle
imul
pop
xor
ljmp
push
adc
mov
rcll
dec
pop
xchg
pushf
int
add
cs
ljmp
js
vxorps
cmp
jmp
dec
stos
iret
repnz
mov
repz
or
push
jle
sub
sub
push
mov
stos
cmp
es
or
xchg
nop
cmpl
pop
mov
sub
push
mov
xor
int
shrb
rcrl
ds
insl
or
shr
and
push
mov
subb
ret
push
xorl
pop
jns
nop
sub
test
je
movsl
pop
xor
and
lods
ja
les
sbb
outsl
dec
out
push
pop
out
pop
pop
es
enter
or
lcall
out
repnz
inc
outsl
aam
jb
aad
negl
adc
fwait
jnp
das
int3
sbb
inc
cmc
pushf
jne
xchg
inc
inc
mov
stos
or
shrb
sub
rcrb
lea
pop
jg
jo
cmp
movsb
jecxz
or
push
aad
add
inc
into
and
test
mov
addr16
test
mov
and
adc
xor
mov
mov
jne
out
shlb
cmc
mov
mov
mov
add
cs
clc
adc
data16
int
and
mov
pop
enter
and
pusha
xor
xor
cld
imul
jno
mov
scas
js
adc
mov
cmp
sbb
add
fcmovbe
movl
mov
lock
mov
mov
sub
jmp
dec
lds
leave
or
and
dec
jmp
pop
leave
std
inc
mov
ss
emms
lret
sbb
stc
mov
inc
lods
push
mov
mov
sub
mov
add
wbinvd
dec
imul
test
outsb
sti
push
or
mov
mov
or
repz
in
lods
xor
xor
in
inc
repz
push
jne
xchg
xchg
dec
imul
dec
jecxz
xor
mov
pop
movsl
mov
sahf
jle
mov
or
mov
data16
iret
mov
jg
sub
imul
repnz
mov
adc
std
and
and
mov
and
outsl
loopne
out
in
xchg
push
sub
sbb
lock
insb
xchg
xor
sbb
jo
pop
and
jg
cmp
jp
leave
cmpsb
cmp
adc
pop
xlat
paddw
pop
imul
jo
push
dec
ja
push
std
out
cld
cltd
fidivs
lods
sbb
loopne
mov
stos
inc
int
and
xchg
mov
push
dec
push
repnz
push
xor
fdivrl
mov
imul
insb
mov
jp
out
xadd
fwait
jmp
out
xchg
mov
push
ss
xchg
sub
stc
pop
lahf
ret
sbb
or
loopne
aad
mov
dec
pop
xor
fimuls
gs
fucom
add
into
cmp
adc
repnz
cwtl
aam
jb
inc
pop
fists
mov
adc
dec
out
dec
addr16
sbb
imul
cmp
enter
daa
and
dec
mov
sbb
mov
iret
leave
movsb
cmp
mov
das
cmp
lret
push
repz
and
stc
xlat
lahf
repnz
xchg
clc
jne
mov
fstps
std
add
lock
out
push
outsl
jg
sbb
lods
fiaddl
dec
dec
jae
and
or
xor
adc
leave
add
jge
dec
mov
xchg
hlt
mov
or
inc
ljmp
ss
scas
mov
mov
xchg
mov
mov
lret
pushf
lods
jmp
imul
jmp
xchg
inc
out
std
mov
in
push
nop
loop
in
test
dec
jecxz
fimuls
mov
roll
inc
dec
mov
int
and
push
jp
arpl
sbb
mov
or
test
mov
push
mov
fcompl
ss
xor
push
test
cmp
fnstsw
xchg
dec
sub
adc
jecxz
loope
sub
pop
cmpsl
out
aam
ret
lods
out
jmp
mov
jecxz
fsubl
shll
movb
xchg
aas
pop
stos
push
xchg
lahf
inc
mov
es
int
ja
int
rcrb
pusha
pop
push
inc
dec
jmp
jo
mov
sbb
mov
jmp
cmp
mov
out
lea
adc
cld
add
jo
mov
leave
jns
outsb
flds
bound
pop
in
push
lods
mov
movsl
push
adc
pop
push
jge
stc
aas
filds
jae
jae
push
rcll
adc
roll
cmpsb
and
pushf
and
jmp
bound
adc
pop
lods
stos
jg
dec
mov
sti
sahf
inc
pop
xor
cmp
mov
imul
xor
push
out
mov
into
subl
push
in
incb
jp
mov
cmp
ficoml
dec
xor
cmc
rorb
cld
add
mov
pop
and
inc
call
mov
fdivl
inc
popa
cmp
jl
scas
cli
push
xchg
mov
pop
shlb
jae
fsubrs
enter
adc
jns
addr16
test
add
adc
inc
es
data16
insl
mov
xor
loopne
pop
fwait
add
push
and
sarl
lret
inc
and
mov
pop
ds
sub
or
lret
lods
jp
shl
or
push
enter
dec
shl
mov
xchg
in
mov
push
add
or
pop
pop
cmp
lahf
sbbl
cmc
xor
jge
mov
movsb
sub
xor
mov
jns
mov
mov
je,pn
outsb
gs
push
push
imul
add
or
fmull
xchg
ret
loopne
mov
jge
mov
in
mov
inc
and
scas
mov
add
rorl
or
sub
fstpt
inc
mov
push
imul
jo
push
movsl
push
jae
xchg
in
xor
jns
dec
xchg
pop
lock
incl
in
ljmp
ljmp
jb
inc
jmp
pop
and
int3
in
mov
jnp
int
pop
cmp
mov
mov
and
dec
cld
std
add
rorl
jo
leave
mov
gs
flds
and
mov
stc
and
push
lret
fcmovnu
add
mov
mov
fsub
inc
lea
xor
or
lret
out
cs
xor
mov
das
mov
stc
mov
iret
rorb
mov
fistpll
mull
aam
push
jge
and
mov
add
xlat
ss
call
sbb
aaa
xchg
push
aaa
xor
or
lret
mov
pop
or
pop
or
imul
xchg
rorb
outsl
mov
add
xchg
pusha
enter
lret
loop
lds
xor
lcall
dec
pop
push
dec
jno
xchg
repz
adc
and
and
add
or
fisttps
je
sbb
xorb
arpl
mov
mull
nop
push
fdivrp
rcrb
stos
pop
mov
mov
mov
mov
or
pop
sbb
mov
or
outsb
add
cli
les
fsubrl
repz
lods
jmp
mov
add
push
and
rclb
mov
jnp
jmp
xlat
adc
pushf
out
mov
icebp
test
push
inc
inc
cmp
xor
push
sbb
inc
sub
cmp
inc
fistps
gs
mov
sub
xchg
mov
sbb
adc
sub
jl
fisubl
pop
xor
jg
cmp
fsubs
jp
mov
cmpsb
dec
inc
pushf
or
push
hlt
leave
inc
popa
add
push
roll
test
aam
xor
pop
sahf
add
xchg
xchg
inc
fs
pop
insl
sbb
fstpt
fwait
sbb
in
scas
movsb
xchg
mov
sub
js
cmp
subb
nop
ljmp
and
pop
and
cmp
jo
xor
inc
pop
mov
pop
mov
pushf
int3
mov
out
mov
cmc
pushf
jecxz
lods
shl
pop
in
out
call
cmc
add
adc
jge
sbb
jge
mov
add
sub
xor
inc
testb
and
or
jl
push
iret
dec
cmp
enter
jns
outsb
sub
out
rolb
adc
cltd
data16
icebp
mov
mov
mov
insl
and
pop
cmpsb
shlb
or
push
pop
fld
mov
lds
jnp
sbb
out
cs
imul
jno
jnp
push
jl
push
pop
inc
test
or
shr
inc
and
add
outsl
inc
outsl
sub
repnz
mov
idivl
aam
cwtl
xor
or
sub
cmpsb
aam
mov
loop
pop
cmp
push
inc
and
sbb
jnp
mov
xor
fcos
popl
idiv
lret
push
mov
fcoml
xchg
and
push
sbb
dec
repnz
and
ja
adc
push
cmp
out
pop
rclb
mov
test
int3
das
push
rcrl
in
sbb
jb
cmpl
or
and
ss
fnstenv
in
sahf
call
icebp
push
jg
pop
inc
outsb
sahf
nop
or
data16
cltd
or
push
pop
aam
insl
repz
ret
jne
jbe
jge
sub
shlb
cmp
mov
jecxz
cmpl
push
pusha
decl
ss
push
or
pop
and
aad
mov
scas
push
mov
mov
std
in
dec
rcrb
pusha
push
sarb
pop
in
pop
xor
xor
sahf
out
jns
mov
sbb
mov
adc
jge
into
sti
out
ret
test
scas
out
mov
mov
jb
pop
lods
mov
mov
stc
mov
es
jle
mov
jmp
ja
push
cmpsl
push
cmc
insb
jo
pop
popa
dec
in
adc
std
loop
xor
je
pop
shll
sahf
add
mov
mov
and
in
push
jle
inc
sbb
test
push
popf
repz
fistl
ret
pop
rcll
mov
sbb
loopne
out
sarb
jmp
push
test
movsb
xchg
xchg
lock
cld
lret
dec
imul
pop
call
push
cs
mov
ja
popf
adc
push
adc
scas
sub
dec
fs
jge
mov
or
xor
cmp
imul
scas
sbb
xorl
push
mov
lret
fsts
push
xchg
pusha
stos
fwait
inc
pop
push
add
loop
scas
aas
push
xchg
sbb
adc
or
fistpl
insl
jl
je
jbe
jge
adc
inc
sti
fs
std
xchg
sbb
test
adc
jb
xchg
cli
je
aam
sbb
inc
mov
adc
xor
sub
and
add
lds
mov
addr16
jle
pop
jbe
fwait
jmp
sub
inc
rol
xor
and
ficomps
dec
jg
fiadds
imul
xchg
mov
sub
xor
fnstsw
add
sub
mov
pop
adc
mov
jno
cld
stc
rorb
jnp
jns
test
inc
mov
inc
jg
or
clc
and
add
mov
into
lret
xchg
add
push
sbb
push
mov
or
push
fs
mov
xlat
adc
in
pop
inc
fbstp
das
jmp
xor
push
xchg
push
xchg
not
sahf
lahf
stos
adc
jb
pop
push
mov
dec
mov
pop
stos
mov
pop
jl
das
adc
inc
adc
andl
sub
jbe
sub
inc
cmpb
shrb
sub
xchg
js
add
xchg
out
leave
lods
movsl
shll
cli
xchg
arpl
cwtl
mov
ds
add
in
outsb
mov
xor
cld
jae
pop
cmpb
rcll
cmc
sti
xchg
xchg
push
subw
js
cld
dec
push
mov
mov
mov
gs
push
add
inc
mov
and
push
dec
arpl
push
in
mov
adc
cmp
xlat
nop
mov
lds
mov
dec
add
cmp
cmp
ficomps
xchg
js
orl
outsb
add
and
pop
xlat
hlt
jnp
jmp
in
cmp
insb
outsb
cmpsl
mov
sub
lds
mov
iret
adc
adc
mov
push
jo
jp
mov
loope
pop
lods
mov
xchg
fbstp
lahf
cmp
dec
lret
push
sub
push
repnz
movsl
adc
or
sbb
shlb
jbe
sub
pop
lcall
aad
push
dec
fstpl
fiadds
in
xor
sbb
enter
fcoml
shl
push
jl
int
dec
adc
dec
inc
cwtl
ss
out
andl
in
in
ljmp
pop
and
lahf
orb
adc
push
cmp
addb
aaa
imul
and
sbb
inc
or
sub
out
stos
fs
test
pop
aam
dec
lea
mov
dec
inc
std
xchg
push
cltd
std
jae
lcall
in
adc
cmp
sbb
and
test
cmpl
out
sbb
cmp
repnz
aas
add
add
out
add
ficoml
inc
into
and
inc
mov
dec
sti
out
xchg
push
dec
mov
movsb
jbe
std
cmc
ret
push
pop
jns
pop
shlb
pushf
adc
xchg
sbb
std
insb
aas
sbb
mov
sub
or
lret
icebp
gs
mov
xor
pop
push
mov
sbb
daa
fstpt
pusha
mov
movsb
dec
or
sarl
decl
shrb
leave
cmc
adc
pop
push
cmp
jle
jne
or
xor
rclb
push
lcall
xor
mov
lods
pop
scas
add
sbb
dec
mov
test
jne
inc
fbld
mov
sar
lods
or
adc
jle
dec
sbb
inc
jecxz
shrb
decb
xchg
push
repz
sbb
js
pop
shlb
inc
add
or
imul
scas
in
xchg
popf
push
dec
sbb
pop
mov
inc
mov
xor
inc
into
mov
push
inc
jo
mov
ljmp
dec
insl
les
sbbb
aad
or
dec
or
sub
scas
xor
sub
shll
and
dec
insl
xchg
and
mov
add
adc
je
in
jae
shll
xchg
and
arpl
jecxz
add
dec
xchg
movsb
push
mov
cmp
mov
mov
aam
xchg
and
mov
xor
mov
sbb
jo
vmovsldup
jge
pop
jno
xor
int
lods
or
or
mov
ds
dec
xchg
mov
idivl
xchg
imul
stos
sbb
xor
xchg
sbb
fnstsw
lea
jl
mov
bound
push
dec
es
sub
lods
sub
pop
mov
and
pop
xor
outsl
mov
imul
dec
dec
nop
ja
stc
int3
xlat
jns
test
or
xor
mov
fists
mov
int
sarl
aaa
cwtl
scas
pop
adc
lahf
cmp
mov
pop
sahf
and
add
popa
outsl
mov
decb
and
fisubs
gs
aas
add
xchg
mov
or
mov
push
mov
or
outsb
mov
xchg
or
mov
sub
mov
mov
hlt
outsb
cmp
hlt
out
shrb
fistl
iret
push
pop
jnp
pop
ja
hlt
in
and
aaa
insl
lret
addr16
sahf
das
das
mov
daa
in
lea
mov
adc
xor
xchg
addr16
sbb
sbb
xlat
arpl
sahf
add
test
xor
push
pop
insb
popa
dec
test
push
cmpsl
push
jns
mov
jne
cmp
jecxz
cltd
mov
fists
cmp
es
packuswb
cmpl
cmp
movsl
in
sti
lods
loopne
add
movsb
ljmp
pop
out
pop
fnstsw
sbb
pop
dec
jno
and
xor
inc
sbb
cld
mov
cli
adc
bnd
sub
xlat
push
ret
pop
daa
test
mov
jmp
call
lods
xchg
out
pop
fiaddl
fs
std
inc
lahf
mov
je
stos
mov
dec
aaa
or
and
aas
aas
push
mov
xchg
cmp
xchg
jbe
sub
push
pop
push
or
inc
bound
in
out
sub
dec
dec
and
cmp
test
cli
sub
mov
mov
shlb
sub
inc
and
mov
inc
movsb
xor
pop
rclb
xor
addr16
jl
daa
fsubrl
mov
xchg
push
pop
les
push
jne
lret
inc
lock
ljmp
jecxz
in
outsl
aad
mov
fisubl
fstl
fsubrl
sbb
sub
imul
xchg
fwait
jg
jnp
push
das
aam
nop
add
lret
pop
adc
inc
push
subl
shl
lea
movsb
add
mov
faddl
jmp
mov
in
scas
pop
int3
jl
fnstsw
dec
jno
ret
arpl
shrb
cltd
mov
adc
push
xor
in
iret
pop
pop
mov
push
inc
icebp
cmpl
adc
xor
mov
sub
es
cs
in
mov
xchg
enter
popa
sbb
mov
add
insl
sbb
dec
jmp
pop
adc
cmp
into
dec
loop
mov
js
sbb
cld
sub
jbe
xor
push
lods
leave
lea
xor
xchg
jno
andl
imul
mov
pushl
fisubrl
sbb
sbb
notb
lret
inc
and
nop
cmp
mov
add
cltd
ret
rorb
frstor
ret
xor
aaa
cmp
jmp
jg
out
jno
adc
in
pusha
fincstp
sbb
popa
push
ljmp
sub
mov
rcll
cmp
loope
outsl
scas
repnz
or
push
push
insl
cmp
push
push
aad
fchs
push
cmpsl
mov
movsl
shll
fs
sbb
sub
sub
ss
outsl
in
lahf
stos
sti
xchg
or
loope
fdivs
or
xorl
xchg
in
aad
test
cmp
pop
icebp
loope
jae
mov
or
clc
test
push
cmc
or
clc
ljmp
add
fsubrl
dec
scas
inc
cmp
pop
fbld
fisubrs
imul
jno
cmc
fimuls
sbb
dec
incb
add
pop
lret
adc
aaa
shll
mulb
push
stc
mov
mov
in
mov
cli
clc
negb
xor
fwait
test
dec
lret
pop
sbb
test
lods
mov
xchg
stos
sahf
or
icebp
mov
lcall
loope
in
outsb
dec
dec
add
ret
sbb
repz
sbb
aam
sbb
test
xor
mov
icebp
das
or
and
lock
fdivl
ficoml
popa
mov
loop
stc
inc
xchg
dec
mov
fsubl
gs
cmp
jmp
out
roll
push
movsb
lret
pop
mov
push
cmp
test
pop
rolb
test
jmp
cmp
push
das
adc
jle
and
mov
mov
pop
mov
and
inc
das
inc
push
jo
outsb
and
int
imul
rcr
jp
rolb
rolb
and
or
pop
into
push
dec
mov
pushf
mov
in
test
xchg
cltd
test
mov
add
das
out
cltd
jns
scas
movl
push
xor
xor
dec
sub
mov
pop
pop
mov
sti
fdiv
pop
cmc
dec
mov
ljmp
lods
sub
fisttps
mov
fldenv
mov
mov
or
sahf
addb
push
mov
push
push
mov
lea
outsl
or
call
lds
mov
add
xor
mov
in
lods
sar
sbb
xchg
mov
shll
cmp
xorb
add
outsl
jmp
mov
cwtl
push
lret
jnp
add
sub
xchg
fs
call
aad
mov
lds
jl
lods
loopne
pop
jb
xchg
andb
pop
loope
les
test
xor
xorl
mov
pop
adc
inc
push
cmp
pop
aaa
icebp
cmpsb
scas
leave
ljmp
pop
rcrb
stos
xor
cmpsb
cwtl
rorl
fldenv
in
dec
lds
imul
xor
rclb
pop
andl
jg
jmp
xchg
mov
sbb
dec
repz
icebp
dec
ds
mov
sub
cmpb
sbb
aas
and
lcall
aas
sbb
sbb
insl
sub
sub
clc
xor
cmp
adc
movsl
jnp
dec
dec
xor
enter
lcall
and
pop
stos
xor
stc
pushf
loop
xchg
xor
mov
aaa
push
or
cmpsb
adc
sub
jge
cmp
inc
iret
shrl
movsl
test
jle
outsl
jo
cwtl
pop
sbb
lret
lcall
pop
and
push
ja
inc
inc
in
mov
adc
out
mov
adcl
mov
sub
xchg
nop
jno
popf
test
dec
outsb
inc
push
pop
shrb
pop
incl
cs
xchg
pop
or
jnp
mov
lods
sub
mov
pop
adc
aaa
xor
inc
lret
test
mov
scas
or
inc
jbe
mov
mov
rcrb
add
sbb
subb
mov
mov
int3
sub
cmc
lds
xchg
fsub
push
and
or
sarl
decl
inc
popf
arpl
pop
push
pop
in
pushf
inc
and
mov
mov
inc
int
adc
addb
imul
or
pop
lahf
repnz
jbe
aas
push
test
test
add
adc
lock
dec
mov
ret
pop
pop
fucomip
lret
outsl
jo
jmp
mov
jle
cmp
adc
scas
mov
mov
fwait
lods
repnz
imul
fadd
loop
xchg
mov
mov
cmp
mov
xchg
jnp
jno
sub
andb
push
jns
ja
sarb
add
or
mov
cs
mov
and
and
xorb
shrb
push
or
pop
mov
js
lret
mov
adc
jl
bound
mov
roll
out
dec
sbb
mov
pop
adc
into
lret
sbb
insl
xchg
jl
aam
stc
mov
fldcw
sbb
scas
pop
xor
jb
fistl
fiaddl
lahf
jb
mov
inc
jne
or
xchg
daa
loope
nop
jae
mov
out
icebp
sub
cwtl
cwtl
enter
mov
adc
sbb
and
fnstcw
or
pop
adc
and
sbb
divb
mov
cmpsl
sub
sarl
jae
lcall
insl
push
loope
mov
mov
xor
lret
shll
dec
les
dec
push
xchg
jo
cltd
mov
out
movsb
fildll
pusha
mov
xor
dec
cmc
push
aas
mov
mov
push
push
aaa
ds
inc
dec
lahf
daa
adc
cli
int
stc
sahf
mov
sbb
xchg
mov
mov
ljmp
out
call
xor
dec
insb
lock
inc
shrb
or
jnp
int3
mov
and
jge
mov
push
aad
adc
dec
add
mov
dec
xchg
push
in
push
mov
xor
and
sti
arpl
into
push
mov
dec
inc
push
mov
inc
roll
iret
and
lods
cmp
lret
inc
adcb
popa
or
leave
hlt
lahf
in
in
jl
mov
mov
inc
cmp
sti
dec
dec
push
mov
subb
rorb
xor
mov
out
add
and
xchg
mov
jne
xchg
cld
lahf
out
dec
xchg
std
cmp
xor
inc
sub
lret
xchg
lock
mov
fiaddl
mov
scas
or
mov
mov
and
or
inc
jno
in
mov
out
stos
loop
movsl
stc
das
mov
xor
ja
add
xchg
mov
cmp
inc
sahf
cmp
jg
faddl
xor
hlt
jns
inc
data16
icebp
sti
add
xor
jecxz
jnp
dec
add
mov
mov
inc
test
rorl
add
mov
outsb
mov
test
pop
fbstp
xchg
iret
xchg
mov
popa
sahf
out
dec
xlat
jp
dec
ja
sbb
add
jecxz
out
dec
inc
ljmp
lods
scas
mov
aaa
mov
sub
leave
in
fistpll
mov
push
sbb
fsts
cmc
push
int
aam
negb
sub
jp
pushf
ja
je
push
cmpsl
pushf
sbb
repnz
inc
les
call
lcall
inc
pop
push
pop
stos
add
addr16
aas
xor
adc
repnz
mov
outsl
dec
push
sarl
inc
and
push
aaa
push
fisubs
fildl
insl
scas
cwtl
repnz
test
adc
dec
jmp
mov
lret
push
inc
sbb
rcl
pop
pop
push
sub
fmull
or
add
xchg
addr16
sbb
pusha
mov
mov
cmp
lea
jae
xchg
xchg
cmp
imul
scas
imul
push
icebp
mov
dec
jg
dec
lea
and
cmp
mov
cmp
test
ret
mov
or
add
pop
lds
sub
adc
jg
flds
cmpsl
push
xor
enter
mov
jbe
loope
dec
stos
cld
jl
cmp
out
mov
leave
and
and
mov
pop
lds
fnstenv
or
flds
mov
cmp
dec
lcall
pop
das
jg
sub
insl
sar
jmp
mov
sbb
test
push
jnp
std
adc
sbb
xchg
lods
ds
hlt
lret
mov
loop
out
mov
fdivrs
pop
jns
push
dec
push
ja
xchg
mov
sub
mov
xchg
aaa
divb
add
outsb
adc
xorl
enter
cmp
or
xor
dec
sub
rolb
daa
mov
dec
negb
dec
adc
test
ds
jo
mov
inc
orl
shlb
retw
js
xchg
cmp
cmpsl
jp
test
mov
ret
mov
outsl
inc
mov
je
jl
dec
pop
aad
dec
xchg
push
jbe
repnz
cmp
aad
xor
push
sbb
sbb
dec
into
test
mov
loopne
add
out
pop
lea
test
pop
dec
jns
pop
lods
mov
repz
pop
inc
je
lea
imul
mov
sub
xor
sbb
mov
loope
ror
add
jno
sbb
mov
add
fwait
insl
adc
inc
jle
or
ja
aaa
fbld
pop
fisttpll
jle
es
mov
xor
jns
add
insl
cmpsb
inc
lret
push
lock
sbb
stc
xor
mulps
daa
mov
es
aad
ret
in
sbb
std
cmp
loope
add
mov
aas
pushf
dec
loope
sbb
xlat
repnz
es
cmc
cmp
lahf
sti
jp
fucom
jno
lds
cmp
push
inc
subb
pusha
nop
xor
dec
and
loope
cmp
mov
inc
leave
inc
in
lret
push
xor
in
cmp
push
test
mov
insb
imul
mov
sub
idivl
repz
jno
insb
shlb
out
jp
sbb
pop
cmpsl
sbb
xchg
outsl
jns
xchg
int3
xchg
jle
cmp
movsl
fistpll
sub
clc
je
out
push
inc
fwait
push
mov
adc
imul
daa
cmc
sbb
pop
arpl
mov
add
cmp
lods
stos
out
inc
sarl
sub
cmp
mov
or
js
xchg
dec
push
fs
xchg
cli
push
addr16
adc
cmp
pop
out
cld
movsl
sbb
xchg
mov
push
out
and
push
dec
pusha
xchg
rclb
xor
push
fmuls
mov
out
aad
pop
mov
jne
jnp
movaps
xor
pop
xlat
iret
sub
inc
jmp
pushf
orb
es
scas
sbb
dec
inc
lea
pop
xchg
int3
xchg
insb
ds
cli
outsl
pop
pop
inc
fnsave
in
mov
aam
xor
sbb
fildl
add
shr
sbb
jo
cld
xor
sbb
lret
cmpsb
rol
test
test
pop
cmpsl
dec
ss
mov
xorl
xchg
ficomps
inc
rcr
xchg
aam
das
cmp
dec
vfmsub231ss
lcall
rcrb
call
mov
adc
enter
add
cmpsl
pusha
dec
cld
pop
xor
jae
xor
or
addr16
adc
test
mov
jb
std
inc
add
ficomps
jge
and
mov
sbb
push
lret
pop
jbe
loopne
add
mov
rcrl
dec
pop
add
daa
aam
sub
testl
cmp
and
andb
push
lods
and
movsb
roll
or
xor
mov
jae
faddp
int
pop
dec
cmp
std
lret
push
flds
inc
xchg
lock
fcomi
cld
ljmp
push
loop
sub
mov
mov
xchg
int3
roll
dec
sbb
clc
test
mov
cmp
push
popa
das
sub
das
lcall
pop
test
sub
mov
repz
cmc
push
or
in
cmp
push
aaa
and
mov
jnp
push
fdivrl
lea
aad
mov
xor
mulb
popf
adc
jl
adc
cwtl
sub
leave
dec
loop
dec
add
mov
push
sbbb
xor
js
fnstcw
jg
push
ljmp
pusha
pop
lret
clc
mov
mov
jp
insb
sbb
movsb
cmpsb
mov
push
mov
repnz
int
inc
adc
adc
pushf
sbb
dec
adc
sbb
shrb
inc
add
shr
xor
outsl
ror
sub
lds
xlat
decb
mov
cwtl
jbe
xchg
adc
out
in
fwait
mov
fwait
dec
test
inc
add
mov
inc
inc
mov
mov
or
jns
enter
in
cld
cmpsb
push
mov
jns
inc
sub
out
mov
out
xchg
push
mov
fisubrl
int3
pushf
cs
pop
adc
add
mov
lods
mov
xchg
in
loopne
je
adc
shll
pushf
sahf
dec
call
mov
cli
ss
clc
out
mov
sahf
cmpsl
ret
cmp
mov
xchg
sub
je
cmpsl
mov
sbb
cmp
pop
mov
and
mov
or
sbb
das
lods
dec
push
lret
es
lcall
sbb
fimuls
mov
dec
inc
in
mov
pushf
push
xchg
lcall
dec
mov
mov
jo
mov
cmc
push
sub
mov
sub
mov
xor
sbb
jmp
out
or
loop
push
mov
stc
into
or
xchg
stos
cmp
mov
lods
pop
scas
jg
test
leave
cmpsl
mov
inc
lcall
mov
pop
xor
les
cmp
test
inc
inc
or
sar
and
dec
jbe
in
mov
xchg
out
and
pop
adc
pop
rol
clc
ja
movsb
stc
js
pop
pop
lock
or
or
mov
cmp
shrl
jmp
icebp
mov
add
jbe
xor
mov
loope
data16
jle
fcomp
aad
rcrl
lock
sahf
pop
out
test
add
sub
daa
cmp
in
push
cwtl
inc
mov
imul
push
addr16
pop
into
clc
lcall
mov
adc
nop
mov
rol
add
or
das
mov
cli
addr16
mov
pop
pop
push
popf
or
rcll
jno
mov
sub
out
mov
and
dec
lock
and
adc
sahf
push
sbbl
stc
add
cmp
fmull
test
test
loopne
push
imul
out
add
mov
dec
cmp
or
je
add
or
push
dec
or
cmc
inc
sarb
pop
xchg
stos
sbb
sub
aad
les
dec
fidivrl
lea
repnz
and
lret
outsl
out
xchg
imul
jmp
fldl
add
sbb
aas
adc
adc
cmp
ret
xor
and
dec
push
mov
jp
sbb
lea
mov
dec
leave
and
push
imul
adc
std
cmp
idivl
lock
mov
and
std
push
int3
inc
js
stc
and
insl
test
enter
popa
add
push
icebp
stos
xor
test
mov
sbb
dec
mov
inc
aas
dec
adc
xchg
push
sbb
loopne
icebp
cmp
sbb
hlt
cmp
cmpl
inc
fildll
mov
lcall
xchg
aam
pop
fidivrs
inc
ds
les
out
out
adc
dec
push
xor
aam
and
loope
jo
ds
sub
lcall
shrl
push
jle
cmp
movsb
test
add
pop
mov
test
sub
and
idivb
xlat
js
les
add
icebp
inc
mov
sbb
cwtl
icebp
add
jb
mov
add
insl
ror
loopne
out
std
mov
movsb
push
call
rcl
imulb
jae
pop
adc
dec
jno
xchg
cmp
sbb
ss
mov
rolb
dec
push
rcr
inc
stos
gs
je
insl
arpl
ljmp
pusha
insb
push
ficoms
mov
and
mov
xor
mov
cmp
andl
mov
push
add
mul
mov
fdivs
xlat
les
jg
in
push
adc
pop
fsub
ficoml
dec
mov
xchg
and
subb
sub
xchg
out
push
sahf
sbb
cmpsl
sahf
stc
xor
xor
call
shrl
xor
movsb
stos
out
addl
sarb
iret
mov
inc
push
hlt
add
mov
sub
push
lds
jp
lea
jge
dec
pop
sahf
pop
notb
mov
mov
cmpb
test
pop
ret
push
movsb
es
adc
rorb
cli
mov
jmp
mov
ficoml
bound
mov
mov
mov
cmp
movsb
sbb
sbb
out
lock
stos
pop
gs
pop
in
insl
add
sbb
sub
in
sub
mov
xchg
and
out
adc
cli
and
dec
sbb
mov
push
inc
test
subl
mov
push
sbb
sti
xorl
sbb
stc
lods
sti
adc
add
aaa
jnp
nop
cmp
pushf
lret
aas
lcall
lods
adc
sbb
packsswb
xchg
enter
popf
sub
call
fwait
inc
iret
enter
jl
lea
iret
out
repnz
push
mov
jecxz
iret
add
push
aad
ror
scas
cmp
add
repnz
aaa
cmc
dec
add
mov
cld
in
push
sub
push
push
aad
imul
rep
data16
mov
fsubl
movsb
stc
cmpsl
mov
in
lods
je
test
sub
add
aaa
mov
lahf
add
mov
lret
call
test
sub
cmpsl
ds
addr16
movsb
lahf
sub
inc
mov
or
scas
pop
call
jg
dec
test
sub
int
sbb
outsb
ljmp
pop
enter
repnz
aad
leave
mov
movsb
sarb
dec
push
sbb
xor
std
in
imul
aaa
icebp
fldt
scas
xchg
in
rcrl
adc
js
lcall
dec
fcmovnbe
sub
push
repnz
int3
imul
push
or
addb
sub
xchg
sub
lcall
mov
jno
push
ja
fisttpl
loop
jp
jae
pushf
insl
es
aaa
idiv
xor
adc
mov
lret
push
scas
mov
jmp
push
or
fsts
jl
sub
mov
mov
jo
inc
rorb
gs
adc
nop
in
adc
rolb
out
sbb
pop
cmpsl
sbb
and
jmp
mov
push
add
and
test
test
out
cmp
insb
xor
sbb
cld
jnp
in
jnp
gs
cmp
jge
push
or
xchg
imul
jnp
out
xlat
or
xor
xchg
out
mov
fcom
loop
or
pop
das
inc
pop
add
push
push
cwtl
dec
xor
inc
fstps
outsb
test
sub
hlt
lahf
sbb
push
xchg
jmp
call
xor
pop
mov
stos
gs
mov
mov
xchg
push
mov
sbb
mov
mov
test
dec
push
add
je
repnz
or
adc
sbb
arpl
xor
ljmp
pop
and
fadds
dec
adc
fsubs
cltd
in
testb
mov
pop
mov
imul
xchg
pop
lods
mov
test
stos
aaa
aad
nop
cli
sub
and
cmp
mov
lock
dec
pop
out
sbb
mov
adc
jl
daa
imul
adc
imulb
out
mov
and
test
leave
int3
jae
mov
pushl
push
in
js
push
mov
adc
and
in
sub
test
cmp
imul
fdivl
add
ss
dec
jmp
ret
mov
dec
repnz
shl
sti
sahf
mov
xchg
shlb
push
xor
dec
shll
leave
arpl
stos
aas
xchg
adc
stc
sbb
sbb
dec
xor
dec
shlb
std
cmpsl
inc
push
fnstcw
cmp
imul
push
sti
aam
or
ja
xchg
loopne
inc
dec
test
cmc
out
fisubl
sbb
sbb
faddl
popa
stos
lock
sti
jge
push
push
mov
insl
jl
leave
adc
shll
jno
sbb
leave
adc
shl
loopne
jne
dec
xchg
jge
inc
rorb
mov
cmc
rep
push
mov
aad
std
sbb
rolb
inc
adc
xor
out
xchg
push
jge
mov
mov
std
inc
cmpsl
dec
cltd
xor
insb
lret
out
jmp
test
inc
pushf
lea
inc
dec
sbb
test
in
enter
loop
or
dec
xchg
cmc
dec
xor
push
sbb
lods
mov
xchg
add
jl
cmp
dec
pop
popa
cld
jle
or
test
andl
mov
addb
dec
fbld
mov
pop
mov
xlat
inc
fsubp
punpcklbw
add
push
mov
enter
out
adc
test
xor
in
cmp
fstpt
push
pop
mov
rcrl
adc
hlt
or
mov
jns
jns
and
push
mov
pop
push
rolb
push
dec
loopne
mov
cmc
mov
lret
mov
xchg
aad
outsb
and
mov
push
js
lods
mov
movsb
mov
or
inc
xlat
lods
stos
xor
adc
dec
repz
adcl
sar
aas
sbbb
cwtl
dec
sbb
and
scas
test
test
iret
imul
stos
popa
pop
push
mov
std
jmp
xchg
sysexit
pushf
jl
das
popf
cmp
lea
test
or
sbb
jl
sub
in
in
movsl
jbe
andb
xor
mov
ficompl
enter
shlb
pushf
push
sub
dec
mov
sub
xchg
pop
pop
or
sbb
xor
lods
cld
cmp
out
xor
jae
mov
ds
arpl
pusha
jg
jg
sub
daa
out
jns
adc
repnz
test
ret
cmc
jmp
pop
addb
push
cli
imul
xlat
mov
fsubs
lcall
pop
ss
or
xor
hlt
lahf
and
dec
dec
jge
stos
mov
xor
sub
jne
jmp
int3
jecxz
sub
into
inc
sub
arpl
inc
imul
mov
or
mov
and
jns
in
cmp
lods
addr16
das
dec
jno
add
cmp
add
cmp
inc
jecxz
pop
xorb
arpl
lahf
mov
mov
ss
sti
jl
jmp
in
xlat
jae
sbb
inc
movsl
mov
shll
les
cmpsb
dec
sbb
mov
test
xor
add
loopne
clc
test
mov
es
mov
cmp
dec
mov
lcall
adc
ror
repnz
mov
sahf
or
cmp
out
xor
jo
pop
enter
mov
or
pop
pusha
fmull
rol
xchg
fdivs
pop
inc
inc
push
fidivl
jne
jg
mov
in
sub
inc
lock
dec
gs
or
inc
std
push
sub
movl
push
in
mov
in
mov
mov
aas
ror
mov
inc
inc
iret
jnp
scas
daa
add
dec
adc
lahf
dec
loope
adc
or
iret
data16
xor
dec
mov
and
insl
xchg
popa
pusha
cltd
cmp
or
stos
in
fdivrs
jge
daa
mov
sbb
cmpsl
xchg
sbb
inc
xchg
cmovb
push
mov
or
out
outsl
mov
fs
push
pop
int3
push
into
pop
lods
pop
mov
mov
test
stos
sbb
rcrl
xor
lock
xor
into
push
sahf
das
jns
adc
xchg
je
out
mov
pop
fdivs
mov
in
mov
dec
sbb
int3
mov
sub
es
inc
fwait
jb
add
ret
jae
pushf
sub
mov
data16
cld
jle
imul
xlat
mov
mov
or
call
movsl
mov
cli
clc
dec
sub
cmp
xchg
pop
mov
sbb
or
push
xchg
adc
add
or
imul
jns
popl
lock
cmc
xchg
or
pop
cmp
and
fcompp
imul
mov
outsb
sub
cmp
rcrl
ds
jno
sub
push
nop
jle
adc
cmp
loope
sub
sbb
ljmp
out
aad
les
adc
test
pop
enter
loope
or
adc
sbb
faddl
pop
inc
or
cmp
jo
jb
imulb
inc
push
ss
out
insb
push
xchg
enter
notb
sahf
ss
inc
clc
sub
cli
shlb
in
add
xchg
add
jl
enter
addr16
push
xor
mov
or
jae
pushf
dec
jmp
sbb
outsl
inc
dec
xor
or
int
aam
add
xorb
mov
mov
pop
jo
imull
cmpsb
mov
sti
adc
into
push
sti
push
jp
cmpsl
cmpsl
sub
mov
ret
mov
cmc
dec
std
cmp
jle
fdiv
sti
popf
rclb
ljmp
jmp
push
push
inc
lahf
add
sahf
jmp
inc
xor
cmc
mov
cld
sahf
cmp
pop
test
insl
clc
mov
lea
int
xor
lea
in
mov
cld
lods
ds
imul
mov
push
dec
jge
call
push
loop
fistl
or
sbb
sub
inc
bound
inc
lcall
push
mov
gs
xchg
stos
out
das
cmp
sbb
push
loope
lock
addb
rcll
aad
int
dec
stos
shlb
sub
inc
sarb
cltd
loopne
pop
dec
es
push
inc
in
inc
jmp
imul
sbb
sahf
pop
loopne
mov
vpunpckldq
sub
add
stos
leave
mov
or
xchg
xchg
fprem
pop
insb
cmp
mov
mov
jg
insl
adc
clc
or
jae
data16
xchg
lods
mov
xchg
inc
pop
ja
nop
pusha
mov
xchg
jg
add
leave
mov
xor
mov
shll
mov
push
push
xor
cmp
pop
lds
shr
mov
scas
dec
sub
scas
mov
add
or
fbld
push
mov
out
inc
ljmp
ja
xlat
stos
pop
and
ss
xchg
je
jns
lahf
push
daa
pop
ret
jmp
ds
call
add
inc
lods
loopne
pusha
or
out
int3
dec
adc
mov
xchg
clc
icebp
push
mov
mov
xor
das
iret
daa
pop
jg
sti
jg
inc
sbb
lock
xor
aad
xchg
xchg
mov
ss
lcall
sub
loop
fs
adcb
jns
popf
sbb
or
xchg
in
imul
mov
iret
fldenv
aas
addl
aam
add
call
push
pop
and
cs
popf
pop
xor
jge
cmc
les
sub
dec
xor
xchg
rorb
dec
stc
cmpsl
mov
or
fsubrl
rorl
dec
sub
sub
pop
or
addl
repz
mov
xchg
pop
arpl
or
add
push
cld
xchg
cmpl
iret
xchg
fisttpll
add
pop
test
enter
aam
push
outsb
fcomi
lahf
in
mov
movsb
xor
pop
push
xlat
inc
int
push
fnstsw
hlt
or
xchg
es
out
lock
adc
cltd
pop
mov
fisubrs
sti
cmp
jbe
ds
stos
iret
mov
xchg
dec
in
adc
bound
leave
mov
or
pop
mov
testl
pop
imul
mov
scas
jp
mov
xor
addl
ljmp
inc
or
jno
mov
loop
mov
das
xor
cwtl
xor
or
shl
loop
in
or
mov
cwtl
and
and
dec
pop
xchg
loopne
addr16
inc
testl
mov
dec
mov
mov
mov
dec
lcall
xchg
push
add
jnp
js
iret
mov
and
xchg
outsl
xorl
inc
scas
shlb
push
aas
fimuls
xor
mov
jmp
cltd
popf
ds
scas
push
std
or
flds
out
push
inc
in
test
loopne
sbb
sarl
cwtl
data16
ficoml
inc
ror
mov
sbb
cld
shrl
push
pop
sub
lret
push
in
inc
cmpsl
mov
scas
xor
hlt
lahf
psllw
fsubrs
push
inc
add
rcll
mov
xchg
arpl
hlt
sbb
pop
sub
and
sti
out
fidivs
outsb
dec
shlb
shl
fadd
sbb
shr
mov
xorl
jg
push
call
outsl
jmp
jbe
test
in
hlt
rolb
dec
add
mov
addr16
out
outsl
mov
aad
cmc
imul
and
pop
sbb
cs
xchg
mov
sub
push
ret
fisubrs
mov
push
push
into
mov
jne
xor
adc
xor
adc
xchg
enter
sbb
divb
cs
aas
scas
in
mov
add
rol
jmp
stos
fcmove
dec
sbb
pop
jb
imul
fildll
mov
pop
lock
mov
dec
mov
lods
movsb
pop
fbstp
or
add
lods
mov
add
jne
lret
mov
jb
lea
scas
ficoml
testb
ret
push
pop
and
push
int3
out
cmp
xchg
fstl
cmp
sahf
lods
mov
push
xchg
cwtl
pop
lahf
outsb
sub
iret
push
sbb
jns
or
call
shr
cltd
into
fidivl
pop
stc
aas
push
pop
mov
stos
adc
or
ss
ret
cmpsb
xchg
cld
test
pusha
pop
fsubs
sbb
mov
mov
dec
mov
and
push
sbb
adc
subl
sub
dec
fsts
fcompl
jae
add
pusha
icebp
rcl
fs
or
sbb
dec
aas
mov
les
xor
dec
out
ljmp
test
aas
stc
dec
cmp
shlb
mov
lahf
and
leave
pop
mov
fsubr
sti
daa
aas
pop
cs
iret
push
loope
push
or
push
dec
jl
stos
outsb
push
and
in
enter
xlat
lock
int
push
std
negl
fnstcw
cmp
loopne
jg
ljmp
and
int
dec
cmc
movsl
sbb
out
negl
inc
inc
mov
mov
shl
jp
stc
stc
mov
aam
mov
inc
sarl
push
lods
xchg
cmp
push
je
dec
iret
push
cmp
pusha
cmp
shlb
push
xor
sar
jp
cs
stos
pushf
dec
sbb
push
adc
je
jno
sub
jbe
out
xor
gs
push
es
xchg
cs
scas
cli
inc
sbb
sarl
mov
test
shll
xor
subb
scas
das
int
jbe
push
lods
jg
push
inc
push
out
jmp
add
push
repz
iret
mov
rcrb
out
imul
mov
popa
cmp
popa
pop
jmp
dec
in
and
xchg
xchg
xlat
hlt
rolb
lret
shll
popa
push
sub
ds
mov
sbbb
mov
pop
xlat
data16
dec
jae
pop
lcall
and
adc
mov
mov
fists
jae
aas
jns
or
add
dec
hlt
jle
into
pop
or
mov
mov
xor
xchg
ljmp
cmp
push
dec
dec
sbb
roll
lods
mov
add
rcrl
sub
fdivrl
pop
sbb
and
mov
or
out
outsl
out
dec
js
sub
loopne
negl
loope
jns,pt
out
add
or
in
dec
jo
jmp
ja
pushf
mov
xor
jns
in
fldt
jb
dec
adc
dec
and
mov
addl
ds
cmc
ja
lret
push
mov
inc
arpl
loopne
hlt
mov
pop
cmpb
push
fisttps
lock
out
xor
push
mov
fistl
or
push
mov
bound
mov
jae
fistl
into
ljmp
fwait
scas
xchg
push
push
sub
add
fldenv
cmp
push
das
test
aas
sub
inc
lods
data16
push
cld
cs
inc
cmp
and
jno
outsl
jae
lock
push
pop
dec
scas
sbb
jo
jb
sub
jnp
push
sahf
jae
clc
push
cmpsl
arpl
aaa
in
cli
clc
scas
add
or
jns
jne
faddp
shl
inc
pop
aad
pop
sbb
mov
imul
push
popa
xchg
xchg
jg
mov
inc
mov
adc
pop
fsubrs
pushf
scas
xor
loopne
and
xchg
mov
push
xor
mov
shl
jge
jecxz
xlat
push
mov
jno
mov
fscale
or
dec
sub
outsb
out
fnsave
mov
lret
repz
inc
inc
movsb
push
popf
lods
cmc
and
inc
adc
inc
cwtl
jae
shl
stos
mov
jnp
push
pushf
in
ja
movsl
mov
dec
pop
xchg
inc
arpl
and
add
rcr
push
pop
sub
popa
aas
fmull
jae
mov
dec
cmpsl
mov
pop
stos
sub
test
xor
xchg
icebp
mov
add
bound
sbb
and
xchg
xor
orb
in
shll
xchg
neg
xchg
mov
adc
cmpb
jl
adc
cmpsl
lret
mov
pop
jo
daa
jp
xchg
fbld
icebp
push
push
or
sub
popa
xor
cltd
sub
aas
cli
movl
stos
dec
or
popf
cmc
jle
add
xchg
sub
in
lods
or
pop
scas
inc
sub
cli
mov
stos
adc
xchg
lahf
imul
fstpl
cld
cmp
dec
mov
movsb
and
movsb
add
pop
ret
loopne
imull
push
and
push
cmp
subl
test
mov
js
and
jge
fs
xchg
sahf
dec
fs
adc
add
mov
or
out
and
and
outsb
dec
shlb
insl
and
cmp
test
cs
or
pop
jbe
pop
in
inc
mov
movsb
sub
add
push
sbb
das
int
aas
jle
shlb
mov
popf
adc
push
push
loope
dec
ret
xor
mov
in
movsl
inc
mov
into
stos
push
call
xchg
rcrl
push
mov
jb
sbb
mov
out
and
lock
ret
push
in
aad
shl
ret
jge
loop
lret
ja
xchg
fildll
loope
std
xor
jnp
jns
jae
dec
repz
pop
fwait
sub
scas
imul
push
lret
jg
xor
pop
mov
fistpl
mov
mov
push
mov
or
popf
dec
jl
dec
lret
or
push
jbe
push
stos
sub
xor
dec
out
roll
inc
sbb
inc
js
mov
and
pusha
jg
pusha
out
sub
dec
sbb
adc
xchg
xor
mov
push
and
xchg
insb
xor
or
and
cmc
fnsetpm(287
popa
inc
ret
sahf
sub
repnz
das
mov
fs
in
or
add
jmp
mov
mov
scas
ljmp
sub
mov
pop
out
cmpsl
and
movsl
adc
enter
cmp
and
inc
repz
sbb
pop
jae
clc
and
shlb
out
ror
and
push
and
mov
push
scas
dec
jbe
aam
nop
dec
lcall
in
bnd
lcall
gs
mov
adc
int3
sbb
sti
or
idivb
jo
xor
int
inc
mov
pop
lds
fs
stos
dec
pop
mov
nop
sahf
les
inc
mov
xor
fbld
pop
mov
xchg
jecxz
sti
outsb
pop
lret
adcl
popa
xchg
enter
jcxz
jae
stc
dec
adc
addr16
cmp
ret
jmp
xor
in
insb
mov
jae
imul
mov
mov
inc
stos
es
jne
lock
and
es
mov
les
pop
pushf
sahf
loop
jmp
push
pop
imul
push
jmp
insl
add
idivl
sub
test
jno
sub
out
repnz
inc
out
adc
loope
cmc
in
leave
pop
sub
stos
dec
dec
int
or
faddl
ret
mov
xchg
in
ret
pop
arpl
or
mov
pop
dec
lret
lret
mov
repz
fsubrs
mov
xor
cmp
and
int
mov
stos
add
not
imul
test
and
test
ja
aaa
aas
sbb
push
or
imul
mov
or
pop
xchg
in
jle
or
stos
in
int3
pop
lcall
mov
ljmp
dec
movsb
lods
xor
jecxz
fsubl
xchg
sub
mov
mov
inc
vunpckhps
rorb
or
xor
in
mov
fs
mov
clc
out
in
mov
out
sub
push
das
sub
js
ret
cs
cld
jmp
lds
inc
in
dec
adc
mov
xor
ja
lcall
push
loope
daa
jae
jne
inc
andb
cld
pop
sub
pop
nop
je
push
dec
lods
xchg
mov
mov
std
outsl
jl
mov
mov
cmpb
out
jg
fs
cmp
inc
inc
es
jb
in
daa
cld
pop
mov
ret
mov
and
dec
int3
inc
or
xchg
xchg
and
insb
in
lock
mov
js
add
gs
dec
inc
adc
jge
notb
mov
das
inc
in
adc
push
or
mov
enter
pop
mov
dec
out
add
cld
movsl
repnz
repz
sti
inc
mov
imul
and
stos
sub
in
add
stos
jp
dec
jo
jp,pn
je
add
mov
xlat
adc
mov
es
sbb
adc
enter
int3
int3
movsl
inc
xchg
data16
sbb
sub
mov
inc
sub
xor
fsubrl
cmp
xchg
jle
xchg
das
mov
jp
add
dec
push
lret
pop
dec
je
and
loop
hlt
jl
pop
movsl
xor
xchg
add
sub
dec
out
add
mov
cmp
xchg
adc
pop
mov
lret
sub
mov
stos
lcall
xchg
je
fmulp
lods
jae
or
mov
sbb
iret
sbb
mov
loope
scas
mov
bound
push
inc
xorl
inc
and
int3
dec
mov
cmp
cmp
jnp
mov
jae
jg
aas
les
nop
xorl
out
clc
xchg
loopne
sbb
mov
inc
gs
mov
mov
gs
pop
jbe
into
mov
testl
mov
mov
subl
fsubl
sti
mov
jp
jne
pop
xchg
popf
cmc
das
add
scas
and
std
mov
int3
imul
enter
sub
aad
icebp
nop
sub
mov
clc
mov
stos
orl
xor
repz
dec
adcb
xor
fs
int
shr
out
or
cld
data16
pop
cmpsb
jmp
dec
shlb
outsb
pop
repnz
xor
adc
cmp
incl
xchg
fs
test
ljmp
mov
sub
push
andb
repnz
mov
roll
add
rcrb
dec
movsl
into
xchg
cmp
sub
ret
mov
cld
jecxz
add
adcl
or
icebp
insl
and
sub
lret
fimuls
shlb
and
and
inc
adc
sub
mov
dec
test
rcrb
enter
mov
outsb
imul
in
xchg
shr
bound
loope
je
in
fldcw
imul
into
mov
dec
testl
sqrtps
or
and
into
xchg
adc
orb
add
icebp
mov
icebp
fmull
ficompl
cmpsb
xchg
leave
and
sahf
add
mulb
dec
xor
shlb
nop
push
xor
cmpsl
arpl
and
int
dec
mov
fmull
fs
mov
jp
loop
aad
mov
mov
fists
sbb
ja
ss
rclb
outsb
insl
xor
mov
imul
mov
sub
scas
xchg
adc
inc
mov
xor
mov
push
fucom
in
out
jmp
scas
ret
enter
jb
out
icebp
xchg
pusha
push
lods
ds
cmpsl
dec
jo
mov
out
dec
cmp
fcoms
pushf
jo
jb
push
sbb
std
mov
dec
pop
mov
cltd
subb
mov
add
sub
mov
fcomip
dec
xchg
push
bound
and
mov
lds
daa
dec
cmp
imul
shlb
popl
aad
gs
lret
dec
leave
sub
mov
imul
or
rorb
mov
mov
sbb
lods
pop
adc
cltd
sbb
mov
pop
adc
lea
mov
shll
rcrb
push
insl
adc
cmp
xor
xlat
pop
xor
add
rolb
leave
movsl
and
jne
cmpsl
in
aad
pop
jns
mov
mov
dec
loopne
jb
shl
push
sti
xchg
and
leave
pop
inc
mov
pusha
xchg
sbb
jecxz
test
add
lea
cmpsb
push
cmp
std
pushf
in
push
fsubrl
loopne
ret
sub
lret
xchg
or
aad
push
lock
scas
sbb
shl
sub
sub
lea
arpl
lret
outsb
les
mov
pop
test
scas
xchg
jmp
and
orb
jo
rcrb
inc
mov
add
xor
cmp
and
sub
xor
dec
lods
sti
and
loope
and
int
imul
dec
lods
sbb
ret
mov
mov
xor
push
pop
pop
mov
jmp
scas
not
mov
xchg
jle
pushf
shl
hlt
movsl
xchg
sub
movups
insb
and
fdivrs
mov
pop
in
jae
fbld
test
enter
inc
pop
roll
imul
mov
out
das
xchg
push
fmul
cmp
enter
pop
cmp
dec
stos
sarl
inc
inc
xchg
daa
mov
mov
cs
push
bound
inc
cmp
add
cmpl
or
cmp
scas
rclb
xor
sti
icebp
pop
xor
inc
add
jle
or
xchg
cmp
mov
clc
lret
push
inc
mov
pop
xchg
stos
sbb
notb
cld
xchg
cmp
into
js
test
arpl
sbb
add
push
mov
mov
or
push
mov
in
xor
add
or
sbb
xchg
xor
adc
int
mov
mov
je
arpl
in
orl
in
adc
dec
rol
jge
lods
lea
gs
mov
dec
jl
xchg
cmp
mov
mov
push
inc
scas
lea
shll
in
push
xchg
shl
cltd
js
pop
pop
xchg
push
sub
cmpsl
js
out
int
fldcw
ret
out
outsb
or
andb
cmp
xor
shrb
stc
shrb
sbbl
mov
ljmp
xor
cltd
dec
pop
pop
or
sub
or
push
scas
sbb
cli
mov
iret
shlb
fisubrl
inc
mov
loopne
shrl
out
mov
inc
mov
dec
int
lcall
mov
xchg
data16
lcall
sbb
sub
ds
xor
stos
push
cltd
cmp
popa
inc
jl
and
push
jbe
xchg
mov
aam
les
shll
push
loope
add
int
cmp
jne
adc
sub
incb
mov
adc
or
and
jecxz
lret
sub
adc
jns
pop
push
out
aam
movsl
adc
sbb
or
mov
dec
sbb
lcall
cltd
addr16
stos
into
insl
call
mov
cmp
es
shl
add
add
sbbl
out
push
gs
sahf
dec
adc
sti
adc
and
fwait
cmpsb
test
adc
inc
cmp
je
out
cmp
test
fwait
imulb
mul
mov
mov
inc
iret
mov
or
rorl
sub
mov
ja
outsl
jae
or
loop
mov
sbb
rorb
mov
lods
pop
and
jl
xor
repz
jl
mov
sarb
adc
jecxz
jnp
and
xchg
popf
add
pop
cli
xor
jb
iret
mov
addb
das
and
arpl
mov
shlb
fimull
bound
inc
xchg
std
stos
pusha
sahf
pop
lods
test
loopne
aaa
mov
test
lret
add
mov
xchg
outsb
lods
jns
div
push
add
adc
test
aaa
js
or
adc
sub
loop
push
or
inc
sub
push
lcall
mov
leave
xchg
or
test
jns
fnsave
pusha
shl
sub
pop
mov
sbb
das
add
mov
push
push
test
aaa
add
daa
aas
aad
cmp
push
cmp
and
andl
jg
ljmp
mov
xor
lret
inc
mov
add
sti
push
ss
add
adc
push
lret
jnp
lret
aas
sahf
mov
cwtl
inc
mov
shrb
mov
test
mov
mov
ds
push
out
sub
pop
enter
jp
jo
jnp
cltd
test
arpl
loop
clc
sbb
mov
cmpl
adcb
jmp
sbb
push
sbb
cwtl
ja
loop
sub
loop
notl
cmpsl
sub
jecxz
and
jne
mov
pop
lods
aam
dec
addr16
in
adc
mov
pushf
push
adc
lods
arpl
push
rcl
imul
rol
mov
cmp
pop
pusha
add
mov
lret
mov
mov
mulb
sti
mov
mov
add
cmc
cltd
out
in
out
fst
or
dec
mov
loope,pt
out
out
cmc
xchg
lods
mov
sarb
jo
es
lret
or
cmp
inc
outsb
mov
mov
in
pmulhw
mov
inc
lea
jp
pusha
lea
mov
dec
sarb
lret
daa
lcall
leave
and
cmp
cli
imul
push
cmc
dec
mov
shll
sbb
hlt
imul
sbb
incb
in
sub
inc
or
out
mov
mov
xchg
mov
jne
or
lret
mov
jecxz
aaa
pop
jb
xor
inc
mov
dec
imul
mov
dec
xchg
loope
xor
sahf
mov
fisttps
loop
pop
mov
pop
jmp
arpl
aam
je
or
or
xchg
clc
sub
ret
adc
loopne
mov
sbb
movsb
push
inc
gs
aaa
in
mov
stc
sbb
mov
xor
jecxz
shll
and
jl
aam
mov
mulb
xchg
iret
mov
xor
jmp
fdivrl
and
hlt
xor
leave
es
in
cmp
and
mov
sbb
scas
lock
ds
or
rolb
not
sub
sbb
mov
cmc
pop
pop
loop
clc
pushf
gs
mov
jl
pop
popa
clc
push
inc
ret
lahf
jo
dec
ja
fcmovne
sbb
dec
movsb
or
and
jae
mov
cmc
in
mov
jmp
movsb
sbb
jl
adc
pop
dec
jns
dec
and
out
hlt
addr16
add
fdivrl
dec
ja
add
inc
xor
xor
jle
jle
mov
faddl
mov
dec
jo
dec
cmpsl
adc
mov
iret
iret
push
mov
out
ret
xchg
mov
xchg
std
fistpl
movsl
je
mov
jp
sbb
lahf
insl
sbb
fsubs
jle
lea
lahf
or
outsl
out
push
ret
mov
aaa
pop
test
das
jbe
inc
pop
mov
mov
movsl
dec
fnsave
jb
loope
sub
mov
pop
and
jecxz
pushf
and
sarl
pop
push
sub
aas
xor
jae
push
push
adc
scas
push
or
cmp
nop
lds
jae
dec
shl
mov
dec
subl
jg
aaa
insl
fdivrl
gs
ret
in
sub
jne
popf
xchg
scas
dec
mov
cs
daa
and
or
stos
std
test
jle
sub
mov
mov
jo
xchg
int3
sub
cmpsb
jle
add
xor
sbb
adc
fmuls
push
loope
mov
cli
push
lods
xor
loopne
cld
fstl
cmpsb
push
sbb
roll
xor
add
loope
cwtl
adc
pop
daa
jge
and
xchg
xor
adc
xchg
div
es
jge
test
cmp
fdiv
cwtl
sbb
roll
push
call
jecxz
ss
sbb
gs
push
cwtl
sti
pop
xchg
pushf
fistps
sbb
push
xchg
in
mov
inc
mov
into
cmp
pop
cwtl
xchg
dec
int3
popa
sub
cld
les
jo
daa
xor
out
jg
pop
mov
dec
dec
fidivrs
scas
sbb
nop
inc
fiaddl
test
mov
push
clc
rcrb
sub
pushf
sub
push
xlat
rcrb
push
add
cmc
lret
push
pop
push
sbb
cmp
mov
lahf
pushf
push
jnp
adc
fmuls
lods
push
aaa
cmp
sub
push
jno
sub
hlt
daa
jl
xor
inc
enter
cld
mov
jmp
cmp
inc
scas
cmp
mov
stos
fldl
lahf
pop
inc
pop
xchg
lea
dec
js
mov
sub
mov
jp
lret
inc
aam
daa
das
lds
xchg
jns
jnp
popa
aam
mov
mov
cli
iret
xchg
icebp
std
cltd
daa
jnp
sbb
lock
out
mov
rol
jnp
int3
mov
and
js
mov
add
fdivr
je
mov
mov
jno
insb
ds
cmp
push
add
inc
xchg
das
call
lea
out
fisttpll
ljmp
lods
jge
arpl
mov
clc
aaa
mov
aaa
jg
mov
je
loop
imul
fstps
mov
negl
xchg
cwtl
loope
mov
jle
aas
cmp
fildll
das
aad
push
mov
in
sub
shl
mov
add
xor
xchg
setb
es
nop
in
shll
jo
push
add
inc
sub
push
popf
jns
insb
ret
push
cmp
test
idivl
add
adc
mov
aaa
mov
sbb
cmp
xor
fldt
inc
aas
lock
or
rcl
pop
mov
icebp
int3
sahf
jge
sahf
pop
test
aad
sbb
push
mov
ret
mov
out
imul
cmpsb
in
in
push
loopne
push
push
hlt
mov
jb
jae
loope
pop
xor
xor
lret
mov
jo
shr
or
push
fwait
or
mov
sar
gs
mov
imul
subl
incb
push
scas
stc
push
ss
das
mov
sub
sbb
out
loope
pop
sbb
xlat
inc
sub
mov
loopne
out
andb
lahf
sub
inc
inc
inc
or
jge
ljmp
nop
leave
test
lods
aaa
pop
test
xchg
insb
inc
insb
jns
xor
or
add
out
int3
sbb
jmp
mov
test
jo
mov
push
pop
xchg
popa
out
xlat
ds
icebp
imul
xchg
js
shll
sub
add
lret
daa
push
adc
inc
sbb
or
mov
push
lock
sub
sbb
fwait
lea
or
lea
imul
add
xchg
push
jae
dec
in
aaa
inc
adc
mov
out
pop
xchg
repnz
mov
or
loope
mov
push
sub
jae
stos
int3
cmpsl
imul
leave
repnz
push
inc
mov
out
adc
cmpsb
jbe
shrl
and
sub
cltd
lcall
out
pop
fcmovbe
out
adc
or
lret
xor
mov
cmp
sbb
loope
fldl
mov
orb
sub
cs
aas
int3
or
call
lods
sub
mov
and
adc
pop
es
outsb
call
add
mov
dec
mov
lock
stc
aad
dec
and
xorl
mov
insl
adc
clc
mov
pushf
fistpll
sub
mov
sbb
fdivrl
fimuls
es
pop
sub
sbb
insl
scas
les
int3
mov
pop
rcrb
frstor
lock
and
rcrl
cs
outsl
fs
xchg
jecxz
sub
mov
jmp
mov
mov
stos
dec
jle
test
sbb
push
sub
add
mov
ja
cmp
ja
lods
fadd
mov
divl
dec
sub
push
in
decb
and
outsb
mov
cltd
push
sbb
cmc
push
xchg
jmp
and
mov
rcr
xchg
mov
cmpl
xor
xchg
xor
shl
aaa
out
adc
fwait
into
sbb
mov
inc
adc
ljmp
mov
push
mov
cltd
pop
loopne
mov
pop
push
loope
cmp
adc
add
repz
xchg
and
int
fwait
pop
popf
iret
mov
arpl
push
cmp
xor
pop
ror
bound
mov
jecxz
mov
out
cmpsb
push
lods
jo
stos
divl
mov
adc
imul
mov
aas
and
jae
add
pop
ficompl
push
shll
mov
pop
fcompl
dec
sti
mov
sbb
adc
xchg
mov
xor
push
inc
sbb
pushf
or
jbe
mov
shlb
pop
inc
imul
sbb
cmp
leave
mov
dec
push
stos
sub
inc
scas
sahf
sub
pop
mov
jns
jae
pop
add
or
rcll
cmc
push
test
nop
popf
or
or
xchg
or
pop
xchg
push
pop
fwait
loopne
cmp
xor
out
adc
stos
enter
movsb
test
xchg
inc
xchg
mov
sub
mov
out
push
pop
push
dec
mov
cmp
lods
dec
mov
xor
aaa
dec
mov
in
jl
sbb
out
sti
push
xchg
push
aad
aaa
stos
cwtl
adc
sub
scas
or
fldenv
mov
lea
mov
dec
cmpl
imull
loope
mov
fnstenv
iret
push
clc
and
adc
xor
rclb
and
and
jp
push
es
jmp
xor
movsb
loopne
in
std
xor
ss
dec
scas
movsb
jae
js
cmpsl
mov
out
call
jbe
push
scas
jbe
leave
aam
and
jno
aas
outsb
mov
stc
js
sarl
in
loopne
dec
mov
xchg
out
in
jno
push
pop
push
sbb
xchg
xor
fisttpl
mov
mov
pop
popa
adc
in
mov
jb
pop
fsubrp
fucomp
movsl
cmpsb
arpl
xor
push
test
rorb
pushf
in
add
js
xchg
lea
in
add
mov
sbb
cmp
sarb
sbb
in
pusha
or
mov
push
sub
inc
xor
jmp
mov
push
jne
hlt
and
sbb
cs
stos
and
push
loopne
xlat
xchg
pop
mov
aad
inc
jo
fcmovnu
fnstcw
xchg
mov
mov
daa
not
mov
in
mov
sub
mov
adc
mov
cmp
xchg
test
cmp
pusha
stc
pop
cmp
daa
push
jp
hlt
stos
or
test
stc
mov
fsts
jne
addr16
loope
lcall
ret
cmp
push
mov
in
push
test
xor
stos
jg
lods
sbb
scas
jne
mov
push
inc
mov
iret
lret
and
shrb
add
add
xor
dec
pop
push
add
ret
push
mov
jae
mov
and
push
mov
push
out
lds
clc
aad
add
jmp
js
mov
insl
xchg
loope
push
sub
orl
fwait
arpl
jno
fistpll
push
cltd
adc
shrb
dec
mov
outsl
cmp
mov
call
fildl
adc
movsb
push
fldenv
rcll
test
and
and
out
fisubrl
mov
cltd
xor
testb
fsubs
mov
push
push
movsl
pop
cmp
aas
lods
mov
xor
inc
fisubl
xchg
add
adc
jns
fstp
dec
push
add
push
xor
pushf
or
sti
sbbb
or
push
cmpsl
cmp
sub
test
ljmp
stos
xlat
dec
std
jl
push
mov
pop
cmp
aas
jecxz
cmp
mov
andl
mov
add
cld
and
fsubrs
mov
xchg
push
or
jbe
addb
daa
push
add
insb
scas
inc
imul
and
bound
pop
test
cli
arpl
push
dec
inc
push
in
int
sub
in
mov
into
sub
aas
out
dec
std
js
filds
sar
call
out
and
dec
inc
mov
jne
jne
test
insl
iret
jge
sbb
sbb
outsb
loop
daa
out
xor
mov
cmp
stos
cmp
sti
sub
or
fists
rcll
mov
mov
icebp
pushf
inc
ret
dec
not
xlat
pop
std
movsb
stos
sbb
int3
pop
les
mov
popa
pop
mov
pop
or
mov
sub
push
pop
mov
or
fcompl
push
ficoms
and
in
outsw
lret
mov
cmp
test
mov
hlt
rolb
add
sub
mov
inc
adc
in
and
push
test
or
inc
enter
sub
dec
ret
mov
ja
push
or
sti
insl
out
pop
pop
scas
pop
leave
add
dec
push
adc
inc
jmp
xor
out
dec
sbb
scas
fiaddl
daa
pop
push
mov
lods
add
push
das
mov
jp
stos
cmp
pop
arpl
scas
add
and
cmpb
daa
cmc
cmp
push
sub
mov
pop
mov
add
mov
xor
jp
add
push
mov
aas
incb
mov
jl
roll
jmp
dec
add
popa
or
push
fstl
sub
test
cmp
xchg
add
idiv
xchg
int
cmp
push
xor
pop
movsl
or
movsl
cmpsl
pop
leave
jb
inc
pushf
xlat
dec
aas
sub
or
and
push
xorl
inc
les
pop
sub
lods
pop
pop
push
dec
and
movsl
mov
add
je
sbb
or
in
movsb
sbb
and
xchg
push
lock
stc
pop
push
xor
pop
xor
inc
shr
pop
sub
jne
gs
inc
inc
inc
cmpsb
push
push
add
lock
clc
xchg
or
rorl
cmp
sbb
and
sbb
pop
scas
fpatan
xor
xchg
mov
out
test
cmp
push
pop
lea
mulb
sub
pop
arpl
out
fnstenv
in
mov
icebp
int3
pop
out
xlat
pop
movsl
icebp
xor
adc
ret
cmpsl
jnp
cmp
fidivrs
mov
push
dec
mov
push
xlat
sbb
xlat
inc
pop
jae
dec
pusha
inc
adc
mov
stc
out
mov
insb
lcall
jp
ss
les
repz
mov
call
into
jno
xchg
popa
call
pop
ret
xchg
or
lds
stos
mov
filds
jl
sbb
sahf
call
adc
pop
push
adcb
cs
daa
or
cltd
or
lock
mov
mov
daa
push
xor
sahf
andl
jecxz
pop
adc
lods
clc
dec
sbb
push
out
mov
cmp
adc
fimull
xchg
push
or
mov
popa
out
jo
scas
fcomi
mov
ficomps
divl
mov
and
jbe
cmpsb
jg
cmp
imul
cli
inc
js
rcll
ds
xorl
lock
mov
lods
cmp
dec
xorl
adc
icebp
add
xchg
lret
xor
inc
xchg
addb
inc
test
pop
pop
negl
xchg
enter
jmp
pop
decb
bound
pop
mov
pop
inc
adc
jno
jmp
pop
addr16
cmc
mov
mov
loopne
cmp
adc
xor
xchg
test
lods
repz
andl
adc
ds
sbb
dec
test
push
cmp
addb
test
xor
xchg
push
in
sbb
mov
daa
jae
les
push
popf
cmpl
in
shrl
sbb
or
js
cmp
add
fsubs
cmp
sub
lock
mov
jge
pop
xor
test
ljmpw
dec
cmp
sbb
mov
add
shll
push
mov
push
jbe
out
cmp
icebp
dec
addr16
cmp
push
in
adc
sub
insb
xchg
leave
push
mov
mov
aam
pusha
jg
out
cmpsb
lcall
insl
sbb
add
sbb
into
sub
gs
ja
pop
loopne
xor
mov
fsubrs
pop
ss
mov
addr16
mov
adc
mov
shrl
bound
inc
sbb
mov
mov
dec
dec
pop
mov
pop
xchg
cmp
dec
ja
repz
sahf
cmp
or
out
pop
cmpsl
dec
pop
sbb
sub
sub
xor
jmp
mov
or
inc
add
sub
dec
daa
test
inc
scas
fwait
adc
mov
leave
scas
sub
push
xchg
scas
icebp
in
sub
add
ss
stos
fiadds
loop
call
sete
mov
jle
in
int
push
xor
push
mov
test
cltd
push
sti
pop
aaa
jnp
jge
rorl
jae
xor
push
pop
mov
fidivl
or
pop
dec
mov
sbb
in
xlat
xor
pushf
ds
adc
mov
adc
pop
call
lahf
jle
in
dec
repz
ja
xchg
sbb
mov
movsl
mov
ja
sub
or
js
xorl
cmpsb
and
popf
jno
movl
out
push
xor
hlt
in
cltd
jne
ss
push
adc
xchg
js
imul
aaa
sub
ss
add
imul
daa
cld
jb
cmc
sub
inc
mov
in
lock
push
flds
pop
and
pop
sar
jle
nop
and
jmp
add
imul
fstps
shl
pushf
pop
add
test
pop
imul
push
adc
repz
cld
mov
mov
fwait
test
mov
enter
xlat
jbe
sbb
add
xlat
out
rcrb
mov
xor
mov
push
sub
mov
jns
fidivrl
aas
stos
in
mov
imul
mov
pop
mov
aam
cwtl
cmp
fstpt
movsb
cmp
mov
or
cli
xor
push
and
int
pop
fwait
xor
cwtl
add
loope
enter
adc
sbb
sbb
out
cmpsb
ja
xor
test
sub
jl
xchg
xor
jb
jnp
dec
mov
sub
sub
bound
and
outsb
loop
and
sub
ficoms
dec
pop
mov
enter
adc
outsb
inc
out
mov
xor
loopne
and
sub
imulb
shlb
pop
movsl
cmpsb
sub
daa
shll
lods
cs
test
pop
push
xorl
dec
loop
stos
rorb
fs
je
adc
mov
aam
inc
add
sbb
xor
add
aas
enter
cli
stos
out
insb
adc
push
and
inc
int3
int3
adc
in
dec
xchg
cld
std
and
dec
sbb
cmc
in
xor
push
vpinsrw
ret
pop
outsl
fcmovne
outsb
or
inc
stos
fiadds
daa
stos
aam
ret
sub
adc
cwtl
loopne
mov
cmpsl
push
jo
insl
hlt
test
push
arpl
lods
push
rcl
lret
push
hlt
jle
pop
sub
mov
aas
mov
pop
daa
jecxz
lahf
fildll
addr16
ds
adc
addr16
or
jp
dec
loop
stos
xor
dec
dec
filds
dec
pop
mov
xchg
pop
cs
jnp
vpshab
daa
jecxz
lahf
xchg
ljmp
hlt
mov
outsb
outsl
lods
pushf
movsb
test
jne
aaa
sbb
fs
and
and
shll
shr
out
inc
xchg
mov
icebp
cmp
out
mov
insl
aam
ja
jmp
nop
push
xchg
xchg
sti
inc
jle
into
cmpsl
sbb
mov
cmp
call
inc
enter
mov
aaa
xlat
xchg
push
movb
dec
or
das
mov
jl
rcl
push
mov
repz
fcmovnbe
cltd
pop
mov
xor
mov
je
std
and
xchg
mov
popa
iret
stos
xor
inc
pop
into
add
outsb
testb
movsb
xchg
xchg
lea
int3
dec
xor
shrb
mov
add
mov
mov
sbb
pop
das
out
sub
add
dec
aam
sbb
call
lods
sahf
les
push
jae
cmp
add
add
sbb
idivb
mov
aam
dec
rcll
cli
in
push
int
test
jns
push
enter
jnp
xchg
in
dec
inc
gs
add
in
rclb
aaa
jno
sbb
lock
xor
mov
lods
mov
ja
push
lock
add
leave
push
add
sub
inc
shl
test
jmp
mov
std
aaa
stos
sbb
mov
into
mov
ret
add
or
cwtl
sbb
scas
ret
ja
inc
cwtl
xchg
push
dec
sahf
test
push
or
out
lods
cltd
xor
lds
cltd
shrb
iret
inc
cs
stos
pop
lods
int
cmp
inc
pop
or
mov
rcrl
aas
adc
fiadds
lcall
cmc
adc
fcoms
mov
or
pop
cmp
movlps
inc
es
out
push
leave
jb
jnp
xor
and
xlat
insl
mov
mov
movsl
iret
mov
movsl
cltd
filds
push
push
data16
loopne
data16
int3
sub
adc
xor
dec
test
mov
subb
lcall
cld
adc
call
pop
push
mov
notl
fldenv
inc
cmp
movsl
fcomps
out
mov
jae
jo
in
lret
pop
cmp
jb
mov
jae
iret
lcall
ljmp
lret
loop
jmp
lds
add
and
adc
pop
subb
jo
add
xchg
inc
sub
movsb
shlb
inc
pop
sahf
pusha
xor
out
notl
inc
orl
mov
in
xchg
fcmovu
int
sahf
and
movsb
mov
push
test
std
hlt
xchg
push
mov
mov
xor
mov
sti
push
out
sti
push
mov
loop
scas
shll
inc
dec
pop
stos
fwait
aaa
or
lahf
scas
lods
imul
insb
inc
cmp
iret
cli
mov
fistpll
mov
subb
mov
pop
mov
not
shll
push
outsb
test
sub
addr16
movsb
test
rcll
lods
rclb
sub
or
sbb
adc
loope
pop
fldcw
fdivs
lock
xchg
xor
jb
adc
mov
jl
jmp
les
cmp
out
imul
test
push
fnstsw
test
bound
test
mov
xchg
lea
in
out
mov
in
subl
cld
outsb
mov
dec
add
icebp
fs
xchg
dec
shlb
xor
mov
daa
jo
dec
sub
or
int3
cmp
pusha
negb
bound
out
loopne
xor
dec
pop
jp
and
adc
dec
inc
jo
hlt
into
pushf
icebp
pusha
cmpb
ficoml
cld
add
inc
loopne
xor
adc
mov
cmp
xchg
or
aam
jp
xchg
xchg
jp
jmp
or
xor
fsubl
or
icebp
xchg
add
pop
hlt
jbe
ljmp
lcall
xchg
lock
jno
and
ljmp
jb
mov
xchg
hlt
int
and
mov
fnstenv
and
int
dec
adc
dec
inc
out
in
test
cmc
fstpl
mov
xor
mov
shrb
int
outsl
mov
pushf
pop
dec
mov
pop
and
mov
daa
jl
stos
sub
subl
lock
jmp
fisttps
cmp
stos
xor
cltd
and
mov
xchg
dec
sahf
sbb
rclb
div
cmp
hlt
adcl
jbe
rcrl
ljmp
jb
mov
xchg
insl
jns
movsb
addl
ja
jbe
pushf
mov
outsl
sub
rcrl
in
xchg
pop
and
bound
lods
xchg
fsubr
aad
adc
in
jns
adc
mov
mov
mov
test
shl
cmp
jl
lods
outsb
sbbl
pop
jl
mov
dec
outsl
push
mov
push
dec
fnstenv
les
adc
mov
je
dec
dec
pop
mov
xor
cli
pop
int
call
sti
jno
addr16
push
inc
std
mov
orb
aam
mov
icebp
sarl
icebp
inc
mov
mov
out
pop
sbb
xchg
adc
fistl
or
or
lea
xlat
xchg
xchg
cs
cltd
pop
inc
pusha
orl
test
adc
push
add
mov
add
clc
cmp
mov
dec
sti
push
cmp
aad
add
dec
pop
xor
cmp
inc
cld
xlat
arpl
test
mov
push
les
dec
push
pop
mov
je
or
into
lret
mov
das
mov
in
xchg
jmp
add
ds
mov
and
fs
cmpsb
shll
callw
movsl
push
jno
sarb
addr16
and
popa
stc
jno
jbe
test
add
mov
push
jecxz
scas
mov
sub
jg
sbb
dec
outsb
sub
push
shll
clc
mov
nop
jmp
cmp
jg
push
aas
sbb
mov
cmpsb
mov
jne
cmp
push
js
aad
pop
mov
das
insb
insb
mov
ja
jmp
pop
test
lea
insl
pop
xchg
mov
stc
adc
push
dec
pop
push
dec
mov
adc
jb
std
popa
int3
mov
jl
pusha
rclb
fsts
or
stos
daa
xlat
mov
push
leave
mov
mov
mov
jns
jl
dec
test
sub
cmp
test
outsl
mov
inc
not
xor
or
popf
loope
xchg
cltd
pop
pop
sarl
or
je
push
cmp
cltd
mov
jns
push
scas
cmp
es
jge
sti
jmp
push
adcb
push
jns
int3
out
pop
daa
push
bound
mov
sbb
lret
hlt
xor
icebp
or
jae
stc
mov
scas
pop
add
fdivl
enter
das
stos
push
cltd
enter
enter
test
movl
ret
cmp
jae
push
insb
test
pop
xchg
imulb
in
loope
mov
xchg
lea
test
inc
jno
aaa
or
icebp
mov
sti
and
dec
mov
xchg
subb
jnp
xchg
lahf
jnp
push
fsubp
pop
es
xor
fildll
xor
pop
adc
mov
inc
jge
jl
out
call
clc
imul
dec
push
mov
int
push
mov
and
jnp
out
jnp
gs
inc
frstor
es
add
and
test
cmp
in
mov
scas
inc
add
xchg
orl
femms
mov
sti
push
mov
jae
jmp
cmp
fprem
xchg
aam
xor
xor
inc
fiaddl
pop
sar
lcall
popf
test
push
inc
push
outsb
add
xchg
sbb
push
xlat
xchg
inc
js
jle
and
sbb
cmp
pop
and
sbb
fisubs
outsb
test
add
add
mov
lcall
insb
mov
orl
add
insl
out
les
adc
lods
shrb
shr
aas
stos
cmp
jo
pushf
sahf
lock
insb
andl
scas
jp
mov
add
xlat
lret
das
xchg
push
ror
xor
lds
testb
imul
and
mov
mov
xchg
gs
sbb
xor
mov
adc
cli
sahf
sbb
jae
loop
xor
lea
gs
dec
test
mov
or
mov
mov
mov
mov
icebp
sub
popa
adc
inc
mov
adc
stos
cmp
rol
mov
mov
push
pop
in
and
jg
imul
pop
dec
stos
adc
cvtps2pi
std
pop
or
popa
or
outsl
jg
mov
adc
cmpsl
xor
shrb
ficompl
in
arpl
dec
pushf
mov
xor
jne
dec
daa
add
push
lods
dec
add
in
xchg
sbb
orb
inc
dec
xchg
aad
cmpsl
stc
das
pop
mov
push
sahf
adc
ljmp
rcr
xchg
sti
sub
mov
sub
inc
mov
pop
fiaddl
int3
xor
sbb
xor
cmp
and
jl
lahf
int
dec
xchg
dec
lret
shll
xacquire
cmp
scas
enter
clc
pop
and
jecxz
arpl
xchg
xor
xchg
inc
adc
iret
sub
test
pop
cs
ret
adc
bound
mov
add
call
stc
dec
sbbb
push
lods
adc
hlt
mov
inc
in
enter
shlb
mov
push
fiadds
mov
movsb
adc
test
mov
jnp
sbb
aad
enter
xor
es
movb
nop
out
inc
mov
sbb
dec
push
lahf
ret
fs
flds
movsl
push
sub
cmc
into
add
out
push
push
xchg
rcll
push
jno
stos
xchg
mov
or
sub
fisttps
mov
mov
inc
outsb
out
call
outsb
je
lcall
adc
jnp
dec
push
mov
sub
ds
xchg
mov
mov
hlt
orl
and
jae
xchg
popf
sbb
sti
sti
test
jbe
sub
adc
fdivl
jns
inc
pop
xchg
adc
roll
jmp
sbb
cmp
in
push
in
or
mov
inc
adc
push
cmc
lret
ljmp
or
fldenv
sub
aas
cmp
scas
mov
pop
movsb
xor
push
mov
int
andb
push
repnz
outsb
push
xchg
cmp
cmp
jle
test
adc
addr16
aad
out
icebp
mov
push
inc
mov
dec
xchg
mov
jmp
mov
clc
adc
xchg
insb
es
sbb
dec
sarb
inc
pop
inc
sub
dec
xchg
fldl
repz
pop
push
dec
jle
imul
fisubrs
fisubl
lahf
incb
hlt
xor
mov
daa
pushf
adc
mov
test
data16
int3
ret
clc
jp
fwait
dec
cltd
xchg
ja
jno
xchg
pop
cwtl
or
int
dec
daa
pusha
insl
pop
adc
adc
pop
loope
test
loope,pn
out
scas
in
in
scas
mov
add
fs
fidivs
hlt
icebp
cwtl
test
int
adc
add
mov
inc
insl
lahf
iret
fs
sbb
incl
clc
mov
scas
lods
cmpsb
mov
decl
push
push
mov
and
inc
inc
push
dec
sbb
push
fmul
mov
movsb
and
insb
pop
incb
mov
es
sbb
or
out
scas
loopne
push
mov
inc
xchg
ss
fwait
mov
dec
mov
scas
nop
jns
out
adc
pop
popf
ljmp
rcll
in
adc
sarb
mov
pop
test
call
xchg
pop
and
dec
pop
gs
mov
push
in
scas
nop
pop
leave
xchg
test
jbe
ljmp
testb
xrelease
xchg
rolb
hlt
dec
xor
and
lret
jns
enter
int3
subl
and
mov
and
je
loopnew
or
outsl
bound
movsl
sbb
ret
fdivrs
push
pop
sub
fiaddl
inc
stos
addr16
jle
sub
mov
jge
and
jmp
hlt
mov
lahf
cmp
mov
lcall
mov
sub
jbe
ja
adc
stos
lret
imul
mov
push
test
vpaddd
mov
pop
push
dec
xchg
fst
out
fs
xchg
and
mov
dec
mov
pushf
inc
roll
or
sarl
aaa
add
dec
jp
bound
shll
std
sub
sbb
lahf
dec
cwtl
mov
nop
fistpl
aas
sbb
fstpt
arpl
movsb
daa
xor
test
mov
ds
subb
jno
lret
pusha
sub
xchg
sbb
xchg
test
xchg
lds
icebp
mov
inc
and
xchg
data16
loopne
lods
inc
sti
sub
xchg
lock
insb
or
stos
addr16
daa
faddl
lods
fndisi(8087
cmp
cmc
das
popa
sub
hlt
push
into
movsb
xorb
mov
cmpsl
jnp
mov
inc
andps
lea
xor
mov
mov
xchg
push
adc
stos
inc
cmp
je
repnz
incl
in
inc
adc
mov
mov
out
mov
pusha
jbe
push
mov
ss
loopne
icebp
mov
into
clc
icebp
or
and
in
jmp
stos
es
in
imulb
sub
scas
lret
mov
lcall
xor
in
in
sbb
push
divb
dec
icebp
xlat
mov
punpckhwd
stos
shl
sahf
loope
jle
icebp
jg
imull
into
les
push
rclb
clc
movsl
pushf
add
mov
add
test
mov
mov
je
jle
jae
ja
add
mov
add
sub
sbb
scas
jae
push
and
xlat
sti
dec
push
pop
jno
jbe
push
pop
mov
add
sub
xchg
pop
dec
mov
and
pop
mov
cmpsb
jnp
jne
shll
push
aaa
xor
inc
out
jmp
xor
dec
movsb
xlat
sub
out
out
daa
sarb
xor
ja
jmp
xchg
cli
adc
mov
mov
push
stos
sbbl
insb
jle
push
mov
jge
data16
lcall
pop
dec
stos
mov
insl
pop
sbb
jno
stc
sbb
and
loop
lods
inc
int3
insl
call
negb
fmuls
lock
scas
addl
je
add
inc
sbb
je
push
dec
js
push
gs
clc
mov
xchg
sbb
mov
jp
mov
add
testl
push
sbb
outsl
fnstenv
inc
push
in
inc
packsswb
fdivs
pop
sub
scas
add
push
cmp
push
push
dec
mov
mov
ret
xchg
addr16
mov
popa
addb
stos
aaa
in
rorb
fidivl
push
shlb
gs
jmp
jns
int3
xorb
adc
lea
test
xchg
subl
adc
stos
repnz
xor
push
cwtl
rcrl
mov
lods
cmp
cmpsb
inc
inc
mov
sub
pop
xor
mov
adc
mov
es
sub
push
inc
mov
mov
lret
jmp
mov
and
dec
test
shll
lcall
xlat
mov
sbb
ds
xchg
lahf
lods
mov
jp
daa
or
and
mov
sbb
pop
lock
or
pushf
in
ds
adcl
jle
xchg
add
and
or
testb
ret
push
mov
loopne
mov
inc
jl
lods
dec
sbb
mov
adc
out
or
ds
cmpsb
out
leave
inc
lret
inc
test
xchg
sub
add
outsl
mov
xchg
icebp
jb
pusha
imul
adc
sbb
jbe
pop
push
cmc
adc
mov
idiv
movsl
int3
sub
jo
stc
sub
mov
fwait
mov
mov
in
into
movsl
mov
sbb
fsubrs
add
mov
and
aad
sbb
and
js
mov
mov
sti
stos
ja
jle
lahf
sbb
xchg
adc
shll
jle
mov
ss
mov
enterw
ret
pop
gs
mov
jbe
pop
mov
jns
sbb
lds
andb
mov
sub
je
lcall
repnz
or
sub
fistpll
xchg
in
out
xchg
or
imul
pop
out
xchg
mov
iret
test
imul
cmp
andl
mulb
fcos
xchg
loope
addr16
xchg
jb
lock
shl
aaa
jg
mov
into
add
fadds
sbb
xor
xchg
pop
in
push
cmpsb
mov
pop
or
into
mov
cwtl
pop
rorb
daa
je
adc
sub
out
pop
lret
add
test
test
in
adc
push
add
scas
lea
xor
imul
pushf
jne
sbbb
popa
cmpsb
cmpsl
bound
hlt
ret
leave
jns
cmpsl
out
pop
mov
ljmp
data16
add
mov
hlt
mov
pop
es
and
sbb
cmp
test
pop
fs
adc
scas
mov
cmc
jge
stos
mov
or
in
pop
inc
shll
fdiv
insb
mov
inc
lret
inc
xchg
repnz
sub
inc
add
jo
clc
sbb
in
faddl
lock
int3
stos
mov
ljmp
xchg
push
into
add
in
fs
lods
pop
push
xor
add
out
cmp
push
mov
mov
lahf
or
ljmp
mov
cld
and
fwait
dec
push
bound
neg
sbb
ret
nop
cmc
mov
fstpt
lahf
cmp
popa
insb
arpl
xchg
rcr
in
mov
outsb
xor
xor
xor
sub
sub
cmp
pop
sub
jb
jp
cwtl
mov
dec
ret
shll
test
fiaddl
sahf
mov
popa
fdiv
addr16
popa
mov
insl
mov
leave
fdivrs
out
bound
setno
pop
and
rcrb
fidivs
mov
pop
sub
mov
xor
cmp
mov
popf
movsb
movsb
or
loopne
and
sub
mov
push
mov
mov
xor
adc
xchg
test
aad
xchg
scas
inc
sub
mov
xchg
insl
pusha
testb
pop
lock
ss
mov
call
sahf
xchg
int3
test
sub
inc
ficoml
add
cmp
fcmovu
loope
or
call
mov
sbb
mov
enter
ret
gs
sub
lods
sbb
add
mov
insb
ret
push
pop
mov
sbb
es
sbb
mov
jl
outsb
imulb
pusha
shlb
in
es
mov
xorl
adc
jp
lods
movsl
call
int3
jmp
add
lods
pop
mov
loopne
pushf
push
mov
mov
adc
push
mov
sti
add
je
add
imul
xchg
cmc
sub
adc
imul
mov
sbb
xlat
aas
inc
adc
pop
stos
repnz
fnstenv
out
jp
ret
ds
cs
lock
cltd
xchg
jns
add
out
lahf
push
fstpl
push
frstor
aam
pminsw
nop
lret
jo
mov
cmp
mov
cmp
mov
xor
pop
lret
int
pushf
jp
xor
in
dec
and
mov
pop
ljmp
fnstcw
mov
pusha
cmp
je
mov
sahf
outsb
repz
or
int
aaa
int
fistpll
fwait
imul
xor
dec
fs
gs
push
add
nop
addr16
ret
mov
aas
add
pop
addl
outsb
inc
inc
es
hlt
test
stc
es
mov
clc
adc
sbb
fwait
mov
icebp
push
fistl
mov
ss
ja
mov
xchg
aaa
outsl
push
out
xchg
orb
fcom
sub
out
add
sbb
out
shlb
shll
gs
int
mov
leave
jnp
lret
shl
lods
fwait
dec
xor
nop
mov
jmp
cmp
dec
jl
mov
scas
int3
mov
sbbb
push
mov
rcr
and
adc
movsl
mov
push
mov
or
mov
and
xlat
xlat
sub
and
sbb
or
jne
sub
push
jle
dec
fldl
pop
aaa
dec
scas
bound
jmp
mov
sbb
jl
xchg
es
arpl
sbb
dec
inc
mov
hlt
js
adc
pop
mov
or
sub
push
jb
add
fldt
lret
and
loopne
pusha
outsb
add
mov
ret
jl
mov
nop
and
orb
sub
popw
sbb
xor
jmp
dec
sub
cmpsb
cmp
imul
fidivrl
pushl
jno
jae
clc
imul
add
out
int3
push
or
inc
inc
lcall
sub
aam
mov
cmp
iret
ja
outsb
push
mov
test
mov
and
xchg
das
mov
popa
stos
inc
mov
adc
fsts
inc
xor
or
mov
outsl
xchg
pop
pusha
leave
xor
inc
decl
push
jae
fcmovnu
xchg
pop
sub
sub
sbb
xchg
nop
test
mov
inc
sahf
sbb
xchg
cwtl
sbb
jo
push
inc
ss
outsb
push
jg
mov
cmp
cmp
pop
mov
test
sbbl
scas
imul
cwtl
int3
or
ss
xchg
mov
jge
ja
cli
mov
dec
adc
mov
repz
in
popf
xchg
rcrb
lods
xchg
cltd
mov
sbb
shll
add
test
sbb
pushf
mov
out
out
add
out
sbb
jg
enter
push
lahf
repnz
xchg
and
push
or
sarl
mov
iret
push
adc
enter
xlat
dec
cmpsb
and
mov
test
jge
mov
xchg
xor
push
mov
dec
iret
int
int
leave
mov
and
sub
insb
sbb
rolb
jnp
inc
in
xor
mov
push
repnz
jl,pn
push
mov
pop
out
cwtl
jg
lret
cmp
lods
mov
cmpsl
dec
pusha
cmp
or
mov
es
dec
pop
rcr
mov
ret
xchg
shll
push
mov
jmp
pusha
pop
cmp
mov
adc
jge
cmp
or
in
adc
mov
roll
ds
ja
jbe
inc
in
dec
bound
sbb
cmc
or
cmpb
imul
pop
stos
xchg
stc
jecxz
add
in
ss
fmul
ret
aas
cli
sub
and
xchg
add
aad
inc
in
or
aam
mov
jnp
cmp
xchg
push
clc
aad
jbe
dec
loopne
lcall
xor
cmp
int3
repnz
jg
and
mov
test
dec
jb
mov
push
ss
jg
jno
xchg
push
stos
int
and
mov
lret
test
pop
test
lcall
sub
mov
and
jge
pop
add
xlat
cli
rcl
stc
lret
mov
es
gs
and
in
pop
ret
js
ret
and
dec
xchg
lock
sbb
push
fbstp
mov
pop
and
jecxz
mov
loopne
in
insl
lcall
mov
lock
inc
jle
push
fs
mov
dec
mov
fstl
mov
push
cwtl
fs
inc
mov
fistpl
inc
mov
ljmp
and
fiadds
fs
call
jne
popl
dec
xchg
in
xlat
lahf
scas
js
inc
push
lods
xor
icebp
gs
roll
mov
sub
jbe
jb
popa
daa
pop
push
xor
push
inc
xor
cmpb
mov
subl
lret
leave
jns
cmp
cmp
test
mov
cs
std
jno
js
out
cmp
push
jae
das
das
popf
dec
out
cmpsl
or
js
rcrb
push
inc
add
inc
jle
aad
ret
dec
and
mov
adc
jns
stos
lock
dec
lahf
mov
cmpsb
rol
shll
adc
rcrb
imul
sbb
add
xor
jns
insb
add
cmp
test
mov
and
stos
out
aas
cs
daa
ret
cld
inc
lret
arpl
or
loop
adc
adc
and
shlb
iret
jmp
xchg
jg
aad
pop
push
mov
dec
shl
adc
dec
jg
addb
xchg
pop
fcom
out
mov
cli
fldcw
add
inc
loop
pop
out
pop
or
rolb
pusha
icebp
sub
add
test
add
leave
xor
mov
daa
nop
outsl
xchg
in
lods
scas
pop
add
add
xchg
dec
mov
fsubrl
dec
je
mov
out
jae
lret
mov
cmpsb
popf
add
mov
rorl
jb
and
in
jl
xchg
test
sub
int3
and
std
outsl
sub
cmp
stc
scas
imul
push
icebp
mov
jge
addr16
adc
lock
hlt
push
orb
adc
and
mov
jl
fists
bnd
xchg
fwait
xchg
hlt
pop
push
outsb
push
repz
sbb
in
fmuls
pop
lret
mov
fcomi
adc
iret
and
mov
pop
out
das
inc
sbb
ret
inc
xchg
push
repz
cmp
lret
pop
sbb
sub
pop
dec
or
jae
sbb
lea
in
jmp
into
xchg
cmpsl
fst
sbb
xor
xchg
xchg
mov
mov
shr
push
fadds
mov
jae
jnp
je
mov
inc
fstpt
cmp
xor
aaa
mov
out
jns
inc
xchg
fiadds
popa
inc
lods
add
cltd
and
cmpsl
mov
push
lcall
into
xor
insb
jle
xor
jmp
jg
pushf
into
cmpsb
and
pop
push
inc
or
sti
lods
sub
rcll
xchg
insb
insb
jl
jecxz
orl
mov
cmp
movsb
popf
popf
or
cmc
mov
pop
dec
dec
mov
jecxz
cmc
ds
dec
xorb
ja
hlt
fildll
jmp
hlt
stc
sahf
xor
das
leave
roll
outsb
sbb
int3
lock
push
pop
jbe
in
mov
lcall
mov
movsl
mov
mov
cmp
gs
repz
inc
stos
lahf
ds
in
mov
push
decl
in
sti
add
lret
inc
add
mov
mov
pusha
jbe
fisttps
stos
or
mov
add
sti
popa
sbb
sub
mov
outsb
push
stc
xor
sbb
dec
lea
dec
or
or
out
mul
bound
mov
or
pop
xchg
test
mov
dec
lods
or
jmp
imul
das
cli
pop
xor
repz
sti
sbb
dec
movl
mov
sub
push
fcmovnbe
sub
ret
xor
shrb
and
push
cli
inc
aad
gs
dec
andb
or
push
in
orl
les
inc
cltd
pop
popf
leave
aam
js
daa
or
testl
outsl
in
inc
pop
jno
stos
or
data16
repz
jmp
fdiv
dec
pop
sub
add
sbb
inc
mov
xchg
divl
or
dec
sbb
jnp
adc
aaa
add
divb
mov
xchg
mov
mov
jno
or
imul
and
aas
jle
or
mov
pop
mov
xchg
aas
mov
mov
cmp
cmp
sarl
test
mov
jg
andl
ret
int3
outsl
and
outsl
cmpb
add
inc
push
scas
and
imul
and
mov
push
sub
xchg
push
sub
adc
movsl
rorb
test
adc
sbb
or
adc
jo
popa
bound
mov
test
call
cmp
xchg
inc
dec
inc
cwtl
pop
lcall
into
mov
jne
cmpl
cmc
loope
adc
xchg
mov
mov
xchg
test
les
xor
int
call
lahf
mov
rclb
movb
adc
mov
iret
test
inc
pop
sbb
aaa
test
orl
int3
lds
mov
jmp
outsl
and
pusha
andl
lahf
inc
push
and
adc
or
shlb
cvtpi2ps
dec
mov
negl
lods
cmp
xchg
cwtl
push
xchg
insl
jge
sub
and
popa
mov
mov
xchg
mov
push
push
loopne
xor
in
xor
mov
xor
cmc
sbb
sub
push
movsl
jp
mov
push
push
mov
dec
in
sahf
in
shr
jmp
mov
mov
sub
sti
pop
or
insb
mov
jmp
mov
mov
cmp
inc
pop
ljmp
xchg
or
mov
out
pushf
jmp
data16
push
in
les
push
imulb
push
shlb
addr16
sub
stos
mov
push
ja
cltd
mov
or
pop
push
pusha
movl
mov
cmp
pop
add
enter
inc
pop
and
mov
mov
mov
push
xchg
push
ljmp
pop
repz
pop
xor
cmpb
fisubrl
adc
xchg
js
jbe
mov
and
xchg
xchg
adc
aad
jno
push
fisttpl
sub
ljmp
and
call
pop
and
hlt
movsb
add
jecxz
in
dec
mov
xchg
cmp
cmovae
mov
pop
fisubs
inc
pop
jmp
xchg
jmp
insl
xchg
sbb
mov
movb
daa
sahf
cmp
movsb
mov
mov
adc
xchg
xor
cmp
and
insb
fst
sbb
cmp
sbb
in
out
ret
cwtl
sub
pop
jle
adc
aam
cmpsl
lret
fwait
sahf
test
pop
insb
mov
clc
sub
inc
rorl
sub
rcll
and
push
or
fucomp
sbb
push
and
out
inc
sbb
jb
mov
pop
cmpb
xor
out
arpl
jl
sti
je
pop
mov
cmp
faddp
adc
dec
inc
aad
cld
xor
xchg
or
add
mov
adc
mov
inc
adc
mov
lcall
cmp
imulb
xchg
inc
mov
loope
xor
scas
adc
cwtl
cmp
adc
pop
in
dec
lods
fs
xchg
push
sbb
push
mov
rclb
sbb
mov
leave
stos
hlt
movsl
daa
mov
dec
push
dec
pop
aas
sbb
sti
push
pop
push
mov
pop
imul
jne
popf
mov
pop
mov
pop
add
sarw
and
pop
xchg
push
fstpt
int
mov
lret
scas
daa
outsb
repnz
js
dec
rcrl
shlb
popa
jp
jmp
adc
mov
pop
insl
ja
je
sbb
mov
lea
xchg
stos
adc
dec
pushf
dec
mov
jns
jge
sbb
xor
sahf
ficoml
loop
nop
dec
inc
mov
lcall
or
lcall
enter
dec
mov
sub
out
push
inc
add
cmpsl
int3
das
mov
test
aaa
shr
sbb
into
adc
sbb
mov
mov
popa
adc
addl
iret
mov
mov
jnp
xor
cmp
mov
pop
xchg
ss
shll
mov
pop
das
popf
lahf
xor
add
mov
mov
or
mov
mov
jne
push
adc
lcall
xchg
loop
push
push
loopne
jbe
cmp
jbe
aad
xlat
inc
lock
xchg
push
shll
shl
sub
push
jmp
popf
lea
push
daa
xchg
repz
ljmp
test
aas
daa
subl
jmp
pop
adc
aas
es
push
pusha
lock
jb
ret
pop
cmpsl
iret
fdivl
xlat
xor
and
and
mov
add
xchg
lea
mov
jecxz
pop
outsb
test
push
mov
adc
sbb
inc
enter
add
cmc
cs
loopw
test
in
pushw
fwait
or
mov
leave
xor
jecxz
or
sbb
sbb
jl
faddl
out
cmp
imul
or
loopne
and
dec
mov
popl
or
pop
cmp
pop
nop
mov
mov
xor
mov
mov
jge
lods
adc
jnp
lret
aam
int3
js
dec
paddq
pop
roll
sub
dec
jge
jmp
sub
mov
mov
push
xchg
xchg
inc
or
ret
xor
pop
mov
jmp
int
or
aam
icebp
and
adc
mov
mov
sbb
sar
mov
cmpsl
sar
sbb
gs
xor
jne
xlat
in
pop
or
scas
repz
cmp
sub
int
push
pop
stos
clc
xchg
cltd
xor
scas
inc
adc
in
cmp
jo
lahf
shrl
dec
cmp
push
inc
loopne
or
sub
and
clts
es
xorl
xchg
adc
js
stc
leave
mov
aad
lret
mov
pushl
xor
dec
jge
out
fstp
xchg
cmp
push
adc
push
cld
jmp
pushf
pop
push
stos
aaa
sbb
cltd
lahf
arpl
pop
cmp
mov
stos
dec
jae
fcomi
jecxz
and
les
cmp
push
jecxz
or
pop
mov
sbb
frstor
mov
or
pop
enter
inc
loop
rcrl
in
jae
fisttpll
cmp
mov
out
into
ret
repnz
sub
cli
xchg
mov
andl
mov
daa
test
arpl
sbb
jmp
icebp
cmpsb
jge
xor
outsl
repz
inc
andb
xchg
repnz
mov
das
outsl
test
and
push
inc
cltd
add
lods
imul
cmp
cmp
mov
loop
xor
call
mov
sub
scas
imul
or
push
addr16
push
xchg
lahf
das
mov
sbb
pop
dec
loop
lret
shll
pop
imul
stos
or
imul
dec
sub
loopne
test
or
inc
loope
xor
imul
das
xlat
or
fbld
fnstcw
data16
dec
fstpt
cli
xchg
jp
sbb
xchg
loopne
imulb
lods
ror
jl
dec
xlat
scas
sbb
xchg
fnstsw
lretw
or
mov
fucom
add
std
sub
mov
jl,pn
mov
popf
dec
adc
mov
test
sahf
and
loop
mov
dec
xchg
mov
js
stos
dec
pusha
adc
lods
jmp
xchg
imul
jns
ss
dec
cli
lret
lahf
loopne
fsubl
adc
push
int3
sbb
mov
imul
enter
lds
mov
dec
sbb
mov
cmp
jno
inc
adc
lds
sahf
dec
cld
xchg
je
mov
and
cmp
gs
inc
out
test
hlt
cmp
iret
iret
inc
stos
or
inc
out
and
xchg
xor
rclb
push
popa
xchg
xchg
lahf
call
and
inc
adcb
mov
out
pop
cmc
mov
mov
add
pop
int3
mov
inc
jmp
cmp
and
jo
aas
dec
and
mov
push
scas
pop
rcll
xor
mul
or
and
je
out
dec
mov
call
insb
sub
or
mov
inc
hlt
bts
pop
arpl
stos
movsb
mov
aaa
fdiv
fistpl
std
adc
cs
push
test
push
pop
jge
mov
pop
stos
ds
je
iret
and
stc
icebp
mov
ret
daa
mov
or
sub
mov
shll
adc
aaa
xchg
dec
lds
fs
enter
packsswb
or
sub
fwait
mov
inc
sbb
mov
mov
dec
sbb
insl
out
outsl
arpl
sub
mov
xor
pop
cmp
ds
sbb
addl
lcall
lods
cmpsl
sbb
test
stos
ficompl
cwtl
xchg
sub
dec
sbb
ret
inc
arpl
and
mov
mov
cmc
and
lahf
call
repnz
fimull
push
sahf
cmp
mov
push
rclb
movsl
mov
push
ds
mov
adc
mov
cmp
enter
iret
mov
xchg
pop
popf
or
arpl
ret
pushf
jno
fptan
pop
jp
rcrb
pop
int3
lods
push
sbb
fsubl
xchg
pop
xor
sub
dec
mov
test
imul
or
jle
mov
ja
and
enter
push
outsl
pop
dec
fdivr
addb
push
cmp
loopne
aam
mov
mov
aas
ret
cwtl
mov
pusha
sti
mov
pop
jle
in
inc
and
movsb
ja
mov
add
lret
popf
adc
xlat
leave
mov
lret
sti
scas
mov
dec
clc
mov
fwait
jae
cltd
lock
sbb
fwait
add
jg
loopne
sub
cmpl
add
mov
js
outsl
data16
mov
jecxz
int
cwtl
mov
call
aaa
clc
ds
gs
pop
insl
popa
testb
call
pop
dec
popf
inc
roll
dec
cmp
scas
in
es
and
daa
inc
cmpsl
push
cmp
add
jge
std
andb
adc
outsl
lret
lret
jg
fcmovb
add
ds
adc
pop
inc
cld
clc
push
and
stos
fidivrl
int
int
jbe
xchg
and
jecxz
das
stos
addb
adc
inc
cmp
bound
loope
mov
out
loope
inc
add
dec
mov
sbb
mov
fdivs
mov
sub
jns
cltd
jle
std
adc
test
lds
andl
xchg
dec
cmp
dec
ljmp
fucom
cmp
popf
xchg
xlat
test
xor
pop
mov
push
cmc
imul
sub
push
loop
outsl
mov
pop
fists
fistps
pop
ss
test
mov
shrb
xchg
inc
add
inc
out
lods
loope
lret
sub
std
hlt
cmp
scas
sub
push
mov
fdivrl
mov
adc
test
pop
popf
mov
daa
xor
in
mov
cltd
add
ja
das
movsl
loop
out
ud1
das
mul
enter
lea
mov
or
leave
or
mov
mov
adc
cmp
sub
aad
stos
sbb
jmp
fcoms
mov
inc
sahf
mov
in
cmp
adc
iret
dec
jnp
test
movsl
sub
lock
pusha
roll
jb
mov
hlt
push
add
cmp
imul
shl
test
popf
mul
lods
cmp
pushf
fadds
mov
xchg
dec
addr16
ret
fidivrl
cmp
mov
ffreep
sbb
xchg
fcompp
stc
int3
push
or
scas
add
test
outsb
repz
fbstp
cmc
mov
pop
mov
inc
jge
icebp
outsl
xchg
cmp
sarb
call
push
pop
adc
out
jecxz
jg
and
xchg
movsb
bt
or
pop
and
es
xchg
cltd
inc
icebp
push
inc
or
das
cmp
and
mov
mov
pop
aas
nop
push
fidivrl
push
repz
fs
test
enter
popa
scas
mov
push
dec
mov
xchg
cmpsb
pop
pop
mov
cld
fisubrl
and
in
mov
sti
int3
sahf
mov
pop
and
xor
adc
psrld
xchg
push
adc
and
add
dec
cmp
or
movsb
mov
movsb
lea
dec
movsw
mov
mov
fcoms
pop
test
xchg
xlat
cltd
scas
sahf
pop
add
add
ret
nop
pusha
fmull
and
cmpsb
cmp
sti
lods
pushf
faddl
cltd
aad
xor
inc
xlat
and
sub
inc
and
fsub
rolb
cmp
mov
jp
insb
pop
fdivl
cld
out
insb
pop
jnp
xor
loope
sbb
ret
sbb
adc
imul
fsubrl
dec
shlb
lcall
aas
push
xor
jmp
sub
cmc
xlat
sbb
int
jb
add
dec
push
rorl
sbb
xor
mov
adcb
test
stos
dec
jge
aam
xchg
jl
dec
add
jo
addl
push
push
nop
pop
push
xchg
pop
mov
jns
nop
stos
insl
je
fdivrl
rcr
in
pop
xor
ret
sub
decb
push
mov
xor
sub
sub
pop
push
aad
daa
pop
mov
aas
repz
cmpsl
cmp
popa
pop
lods
in
push
std
xchg
jnp
sub
and
jg
clc
test
cmp
adc
test
loopne
mov
push
add
mov
pushf
inc
in
roll
gs
and
iret
cwtl
sub
inc
and
pop
pop
sub
loope
testl
aas
jle
leave
arpl
jecxz
lock
fmul
adc
popf
adc
fbstp
mov
jo
fiaddl
lods
mov
or
inc
xlat
pop
into
xor
js
xchg
push
jbe
mov
pop
push
test
push
or
sub
jb
stos
push
jbe
push
pop
js
sub
nop
inc
sbb
shrb
pop
add
jmp
stc
in
xchg
bound
jae
inc
scas
pop
ja
cmc
fisubl
leave
adc
shl
mov
js
jb
inc
pop
nop
mov
mov
and
sbb
add
add
add
xor
xlat
scas
jge
pushf
or
addb
cld
orl
dec
in
sbb
mov
pop
insl
jl
push
xchg
ljmp
inc
inc
mov
xchg
out
inc
push
push
in
leave
leave
test
sti
mov
inc
mov
mov
or
adc
movsl
mov
push
mov
or
inc
negb
add
leave
test
aad
sbb
adc
xchg
mov
adc
cmpsb
xor
jnp
add
push
dec
push
scas
loop
outsb
or
enter
xor
cli
lahf
ja
lods
xor
fdivl
xchg
pop
dec
mov
sbb
add
sub
xchg
bound
cwtl
out
push
roll
xor
sub
fildll
pushl
xchg
add
xor
push
pusha
jmp
xor
and
test
push
icebp
out
xchg
xlat
push
fisttpll
inc
in
divl
roll
jecxz
mov
cmp
out
mov
clc
mov
inc
push
cltd
jmp
pushf
das
mov
ja
cmpsb
out
imul
xchg
cmc
mov
out
cmpsb
addr16
dec
repz
xor
pop
dec
adc
pop
jb
pop
sub
and
fcmovne
aaa
repz
mov
sbb
test
test
mov
jge
mov
fdivrs
jns
push
pop
inc
fbld
push
cmpl
push
xchg
shlb
fs
mov
inc
stos
fsubl
adc
pop
jle
mov
aam
pusha
jns
ffree
xor
into
mov
imulb
mov
cltd
sub
adc
ljmp
sub
popa
stos
arpl
mov
sub
mov
mov
pop
fdivs
lret
mov
adc
and
xchg
lret
cs
jmp
outsb
mov
loop
arpl
push
pop
arpl
jg
popa
push
sbb
shrl
dec
dec
aam
dec
mov
pop
lds
sbb
icebp
lret
and
outsb
push
cmpsl
cmp
mov
xor
ret
push
inc
mov
movsb
fisttpl
xlat
cmp
cmp
cmp
scas
xchg
ret
ss
or
fldenv
call
filds
repnz
mov
xor
xchg
subb
je
insb
cwtl
repz
jo
fwait
stos
bound
andl
cmp
ffreep
popf
xchg
and
aaa
cmp
stos
mov
lret
dec
mov
rcr
inc
jp
dec
adc
push
pushf
mov
xchg
or
xchg
loopne
ds
mov
mov
int3
sub
fptan
mul
out
jo
lret
adc
je
jae
xor
dec
jle
imul
daa
enter
lret
jbe
push
cmc
mov
pop
fldl2e
xor
inc
mov
test
pop
push
inc
lods
inc
lock
sbb
mov
jge
flds
adc
stc
xor
adc
fimuls
cmpsb
and
imul
in
adc
mov
jns
mov
iret
dec
outsb
imull
movsb
lods
mov
adc
sbb
data16
mov
popf
mov
nop
lds
xchg
pop
dec
mov
fst
push
xor
test
mov
js
into
jbe
rorl
loop
xchg
pop
adcb
jo
pop
push
jns
pop
xor
cmp
mov
lds
ljmp
mov
mov
jmp
xchg
test
fstl
lret
pcmpgtd
daa
scas
mov
sbb
icebp
adc
or
or
addr16
push
movsl
scas
mov
clc
push
xor
mov
cli
sti
repz
lds
mov
push
mov
inc
push
lods
adc
lret
es
loop
mov
dec
insb
les
fs
jge
sub
test
mov
stos
lods
adc
jmp
rcrb
and
punpckhdq
scas
xchg
sahf
pusha
cmpsl
xor
and
dec
outsl
or
sahf
es
fisttps
push
sub
xchg
repnz
out
daa
push
fxch
push
scas
push
adc
or
sub
mov
xlat
loope
dec
mov
test
and
sarl
add
inc
adc
jne
mov
cmp
sbb
mul
pushf
out
in
or
movsb
cmpsb
filds
pop
xor
ljmp
inc
ja
xor
pusha
out
lret
jecxz
into
insb
cwtl
imul
adc
push
fistpll
stos
xchg
cmp
in
insb
lret
addl
int
icebp
fdivl
sub
push
test
les
mov
sbb
mov
push
xchg
xchg
dec
xchg
incb
pop
and
xor
inc
icebp
jmp
aas
into
xchg
loope
fs
cli
loope
mov
test
arpl
cli
xor
mov
mov
mov
in
pusha
inc
dec
lahf
inc
popa
and
jge
bound
gs
loopne
inc
push
mov
xor
shll
fildll
sbb
out
popa
push
push
push
addl
dec
inc
les
arpl
inc
jl
xor
daa
std
push
pushf
pushf
mov
outsb
arpl
mov
dec
sbb
loop
dec
add
sbb
mov
jp
cmpsb
push
scas
dec
aam
movb
in
pop
inc
push
jp
insb
mov
leave
mov
hlt
in
dec
dec
loop
cmpsb
jb
xchg
pop
sub
andb
push
pop
fucom
ds
nop
outsb
divl
lods
in
xor
scas
xchg
out
dec
and
push
pushf
pop
and
pop
mov
sbb
pop
mov
mov
push
sub
ret
mov
push
insl
jns
fisttpl
imull
add
sub
mov
adc
in
adc
jecxz
imul
fcompl
sbb
xchg
sbb
loope
loop
or
es
addr16
push
mov
push
loopne
test
sub
or
test
mov
cld
add
adc
jno
popa
call
add
sub
das
mov
fadd
mov
dec
inc
das
data16
mov
ljmp
mov
lcall
faddl
stc
leave
push
jmp
lret
out
jg
mov
push
sub
inc
int3
xor
arpl
daa
jno
and
daa
sub
fisttps
jmp
inc
movsb
mov
mov
popf
inc
xchg
je
xchg
filds
push
inc
mov
jae
pop
push
sbb
shlb
fwait
cmp
dec
xor
xchg
jle
mov
es
push
je
stos
or
cmp
sarb
pop
fs
jge
insb
sub
jnp
push
test
mov
xchg
insl
insb
xchg
pusha
sbb
fmull
test
repnz
aam
loopne
stos
ds
or
sarl
mov
das
jnp
xor
and
sub
addb
sarb
mov
jne
dec
jno
rol
pop
sbb
adc
popf
mov
sbb
mov
out
fst
rcrb
pop
call
pop
imul
out
inc
inc
scas
adc
in
sub
out
ret
hlt
sub
stos
or
es
xchg
jge
inc
sahf
cltd
mov
add
push
in
jecxz
mov
ljmp
cmp
dec
lcall
dec
xchg
sub
fwait
js
roll
push
movl
das
xor
xor
mov
add
or
xchg
pushf
jo
subl
jmp
rorb
jg
out
and
fistpl
outsb
nop
daa
xchg
add
int
out
ljmp
xchg
push
lret
fimull
negb
mov
mov
cmc
fcomi
popa
out
loope
stc
push
out
jg
xor
mov
test
data16
fsubrl
sbb
jle
mov
jb
notl
cmpsb
imulb
out
inc
out
data16
call
jns
jne
dec
xor
sub
mov
push
jle
sbb
or
lret
xchg
shlb
fiaddl
je
outsb
mov
mov
xchg
jb
cmp
mov
dec
add
mov
inc
popa
out
xor
mov
adc
fistps
addl
inc
pusha
lods
icebp
ljmp
mov
pop
jno,pt
pop
xorb
dec
pop
test
in
je
dec
pop
mov
nop
xchg
shll
fcomi
pop
dec
das
jnp
nopl
xchg
dec
clc
and
jnp
and
incb
int3
cmp
cmpsb
jnp
out
andl
aas
aaa
xor
adc
dec
mov
out
pop
jo
sarb
jle
push
sti
add
loopne
fwait
jno
add
lea
enter
cmp
stos
xlat
cmp
xor
loopne
cmp
js
push
sub
push
lods
fdivr
mov
lods
mov
popf
hlt
or
inc
push
stos
ss
movsl
hlt
cmp
add
push
orb
mov
xchg
stos
sarb
push
push
in
xchg
ret
sahf
push
push
inc
pop
mov
dec
in
repnz
add
nop
jecxz
pushf
movsb
iret
push
inc
jno
add
int3
insb
push
add
ret
xchg
jmp
pop
adc
fiadds
mov
aas
in
jge
stc
mov
andl
mov
imul
mov
imul
into
rolb
dec
mov
sarl
and
jg
fsubrl
lock
das
jno
push
adcl
mov
add
int
inc
push
pop
jg
push
stc
lock
inc
mov
sbb
ficoms
dec
dec
push
cli
pusha
inc
sub
call
cltd
mov
mov
sub
cmpsb
jno
mov
insl
jp
xchg
lods
stos
test
cmp
ja
add
dec
in
adc
insl
pushl
and
popa
mov
flds
daa
and
or
xor
cld
xchg
imul
fimuls
outsb
pop
mov
in
les
xlat
cmp
xchg
adc
lahf
pop
xchg
nop
scas
outsl
xchg
push
fucomp
mov
into
jb
cmp
xchg
jl
sub
lahf
pop
push
and
xchg
add
cmc
mov
sub
in
mov
test
dec
mov
sbb
push
repz
gs
pop
pop
mov
es
loop
or
xchg
sbb
scas
pop
add
xlat
dec
adc
lahf
nop
dec
xchg
jmp
repz
out
out
stc
cld
je
mov
dec
pop
divl
or
dec
loope
test
out
lods
loopne
dec
mov
jge
outsb
cli
add
mov
and
scas
pop
testb
scas
adc
rorl
dec
inc
in
push
stos
cli
aad
jge
xchg
shrb
or
loopne
loopne
pop
aad
icebp
xchg
addr16
out
into
mov
imul
sub
push
out
dec
inc
inc
lds
xor
loop
add
xchg
lods
cwtl
addr16
push
pop
dec
xor
cmp
jns
xchg
dec
sbb
and
inc
jmp
and
rcrb
push
jmp
subb
pop
xchg
jg
jbe
aad
ja
insl
mov
jae
lret
ret
pop
xor
sbb
mov
and
sbb
jo
add
and
mov
or
popa
sub
adc
sahf
lcall
push
cs
enter
mov
and
xor
mov
sub
mov
pop
inc
inc
jecxz
pop
nop
push
cmpsb
xchg
mov
xchg
mov
inc
mov
mov
rclb
push
jnp
push
jbe
lret
jo
es
or
stos
jns
sbb
cmc
arpl
xchg
loope
xchg
sub
adc
pusha
out
jne
lods
addr16
adc
jns
mov
lods
inc
dec
insb
ficoms
xchg
out
insb
xorl
pop
mov
pop
loop
hlt
mov
in
mov
or
in
enter
test
lcall
in
inc
push
pop
mov
or
outsl
and
push
stc
fsubrs
outsb
lea
not
jnp
cmp
sbb
je
addr16
add
hlt
gs
ss
mov
pop
inc
lret
dec
jp
or
addl
sbb
mov
mov
pop
adc
mov
lahf
into
add
xor
cmpsb
inc
jg
adc
mov
repnz
out
push
or
pop
daa
and
jmp
inc
push
out
scas
push
jne
sbb
lret
cmp
in
xlat
push
bound
jp
div
scas
sub
or
lret
sub
jl
insl
jge
add
jnp
sbb
lea
mov
or
xor
test
repz
sub
out
mov
filds
mov
cwtl
xchg
jns
imul
cmpsl
shll
movsl
dec
sbb
das
cld
jge
or
or
std
and
add
mov
aad
int
xor
pushf
xchg
inc
shl
lods
idiv
je
pop
dec
push
pop
push
repz
inc
or
imul
lret
daa
jp
cwtl
cmp
and
pop
or
rcrb
cld
add
les
jle
mov
adcl
mov
jmp
push
mov
arpl
jmp
dec
adc
sbb
push
sub
cmc
jmp
xor
xlat
test
cmpsl
popf
dec
push
jecxz,pt
mov
fstpt
or
popa
jle
sbb
jmp
pop
xchg
fxch
leave
xacquire
movsl
sub
in
hlt
aad
add
int
sarl
call
sub
movsl
aam
pop
pop
in
mov
jp
fiadds
mov
xor
repnz
jge
imul
lods
xor
addr16
sub
popf
gs
movb
inc
fisubl
shrl
scas
adc
repnz
mov
sti
cmp
jo
rol
jmp
push
cltd
inc
mov
xchg
in
mov
push
push
ja
cmp
jbe
pushf
inc
out
add
sbb
popf
pop
or
dec
int3
ss
jno
sahf
xor
mov
shlb
or
xchg
out
cli
rol
fistps
jmp
and
push
fisttps
push
orl
int
cld
stc
adcb
push
test
nop
ret
pop
mov
cltd
and
push
mov
or
shll
adc
repz
pop
rol
push
imulb
pop
cmc
stos
into
push
sub
xchg
jp
sahf
fs
imul
inc
cltd
pop
xchg
in
jno
aaa
cmp
xor
popa
shl
push
cmp
inc
mov
sbb
mov
jb
stos
movsb
in
movsl
xchg
sub
mov
xor
test
mov
sbb
dec
and
mov
adc
cmpb
fidivs
sarb
nop
sahf
sub
cmp
sub
rolb
sub
cmc
repnz
push
pop
js
xor
stos
push
cmp
aas
arpl
pop
daa
movsb
clc
xor
addb
dec
in
xchg
mov
fnsave
and
and
fwait
in
inc
je
out
outsl
out
insb
mov
xchg
mov
loop
les
xor
mov
xor
leave
cwtl
insb
es
pop
call
fsts
xchg
mov
or
sub
pop
pop
xchg
mov
jg
outsb
add
dec
jp
nop
inc
stos
xchg
sub
xchg
rcrb
xor
popf
xchg
insb
xor
pop
cmp
loope
or
or
hlt
popf
dec
out
cld
cmp
pop
and
aad
sub
cs
out
popa
dec
fstpt
aam
mov
gs
or
frstor
in
cmpsl
loop
or
rorb
test
pop
stos
jne
xchg
gs
jb
xchg
flds
sbb
sbb
mov
cld
in
les
pop
push
mov
lret
insl
movsb
xchg
cmp
xorb
repnz
adc
loopne
cmc
sub
dec
mov
test
inc
scas
add
rcll
fisubrl
jp
fs
inc
xor
sub
fstpl
cmp
xchg
or
pop
es
bound
imul
and
push
mov
stos
jbe
mov
dec
xorb
int
sub
jno
ficompl
mov
aas
enter
cmp
testl
xor
jno
pusha
sarb
lea
mov
jns
int
fwait
std
inc
pop
xor
ret
pop
xchg
cli
ret
or
push
addl
mov
mov
mov
mov
addr16
ds
rcr
xor
adc
pop
push
jle
outsl
daa
mov
mov
rclb
or
push
inc
aas
call
bound
pop
push
mov
cmp
jge
rorl
movsl
cmpb
into
jbe
movsl
mov
mov
add
xor
stc
push
mov
test
fidivs
cmp
push
aaa
ret
mov
ljmp
lcall
inc
cmpsb
mov
jns
sub
std
mov
nop
icebp
sbb
cs
scas
sub
int
jmp
ret
in
loopne
xor
lods
aas
in
cmc
les
mov
fcoms
adc
inc
stos
fstpt
add
rolb
or
push
fs
cmp
repnz
jns
pop
cmc
and
sbb
mov
das
xor
push
xchg
call
daa
add
leave
and
stc
jb
lods
jle
enter
insb
scas
add
scas
pop
mov
jg
mov
and
mov
loop
or
ds
inc
xchg
pop
stc
sbb
xor
mov
in
cld
inc
jmp
xchg
xchg
adc
or
outsl
cmp
inc
pop
xchg
lret
sub
xchg
jmp
dec
pop
jg
fadd
mov
jae
fiadds
jns
jmp
int3
jae
add
mov
arpl
mov
ret
xchg
xor
movsl
jb,pt
cmp
sbb
xor
gs
xchg
aad
into
cmc
pop
xor
mov
mov
ret
les
mov
idivl
inc
xchg
jmp
inc
test
cld
pop
sarb
dec
mov
repnz
ffree
test
mov
jp
mov
inc
leave
dec
dec
repnz
sbb
orb
or
popa
lea
addr16
jl
xor
and
imul
mov
pop
mov
jns
add
les
xor
mov
lret
dec
sub
std
sbb
pop
cs
mov
adc
out
aam
pop
popf
addl
xchg
adc
mov
mov
inc
iret
sbb
lahf
dec
mov
rclb
pop
into
pop
daa
inc
lret
iret
fidivrs
into
jmp
shlb
add
mov
add
pop
imul
shrb
aas
push
jecxz
sbb
fcmovnb
insl
popf
mov
and
mov
cwtl
cmp
incl
mov
std
pop
add
pop
imul
xchg
scas
imul
sub
mov
mov
mov
dec
mov
cmc
xchg
adc
int
aam
or
xchg
jge
dec
scas
aaa
jb
stc
iret
mov
xlat
or
mov
mov
lahf
js
stc
sub
xor
mov
aaa
js
xor
mov
xor
sub
sbb
fisubs
mov
das
sbbl
jno
imul
jg
icebp
xchg
xor
std
jae
dec
aaa
faddl
mov
jns
in
xchg
inc
mov
ds
aaa
insb
jns
adc
fld
popa
daa
xchg
jbe
pop
test
jecxz
std
fstl
xor
xchg
mov
in
mov
xor
jg
cmp
test
cld
xor
sub
sahf
jmp
hlt
mov
in
push
outsb
js
lcall
aam
xchg
jae
pop
roll
pop
cmp
or
paddsb
insl
lods
xchg
jl
loope
mov
int
jl
jl
add
push
movsb
test
mov
mov
repnz
int3
gs
adc
jecxz
mov
ret
aas
aas
inc
js
lds
lahf
fsubs
movsl
daa
rorb
iret
jnp
movsb
sub
imul
pop
pop
xchg
test
lahf
mov
cwtl
andl
adc
stos
or
xchg
sti
add
data16
inc
and
and
test
cmp
push
pop
push
stos
test
fistpll
ja
enter
xchg
dec
gs
leave
movsl
sub
mov
and
mov
inc
xor
sbb
js
ret
out
ljmp
js
mov
je
mov
je
dec
push
into
jecxz
repz
into
mov
mov
mov
or
lret
iret
sti
cmp
cmp
jnp
xchg
rclb
pop
inc
mov
repz
inc
cmpsb
call
push
inc
and
cmp
lahf
jecxz
sti
scas
cs
pop
xlat
mov
sub
add
fistl
mov
sub
adc
mov
ja
adc
stos
test
adc
adc
inc
mov
push
imul
imul
pusha
out
ret
shll
mov
add
ror
fwait
aas
aad
out
pop
das
mov
aam
sub
popf
mov
jns
xchg
js
roll
sbb
sbb
cmpsl
fimull
mov
lret
mov
orl
push
das
fs
hlt
xchg
push
imul
ret
insl
cmc
inc
xlat
and
das
jne
xchg
popf
js
outsb
mov
outsb
shrl
subl
xlat
mov
jnp
pop
leave
pop
jp
leave
adc
jge
push
lcall
sub
ret
outsb
dec
dec
push
aad
mov
xchg
add
out
push
sub
loope
cs
movsb
xor
pop
adc
sbb
ja
push
fsubr
jl
lahf
inc
lea
lods
call
jnp
adcl
bound
xchg
add
mov
fsubrs
pop
popa
adcb
cmp
roll
or
push
test
arpl
push
cmpsl
and
fdivs
mov
cmp
xchg
xchg
std
ljmp
xlat
les
cltd
movsl
inc
pop
adc
cmp
fldcw
add
cmc
cmp
int
out
push
fadds
outsl
jle
xchg
inc
jne
ss
or
mov
cs
int
movsb
lret
or
mul
xchg
xchg
sbb
out
xor
sub
cs
inc
push
int3
pop
jl
pusha
cli
xor
mov
int
xchg
cltd
nop
cmp
fisubrs
popa
xchg
adc
sbb
fdivs
push
push
cltd
repz
and
xchg
lret
xchg
dec
inc
pop
bnd
test
test
shlb
inc
push
sbb
pop
add
enter
rclb
mov
xor
test
dec
push
popa
jo
jo
lods
adcl
aam
mov
push
int3
dec
push
jge
xor
fwait
insl
jmp
dec
iret
shrb
or
arpl
jl
or
mov
add
mov
xor
movsl
out
xor
divl
xor
rolb
push
cmc
into
pop
mov
mov
mov
mov
lock
push
neg
rcrb
add
addr16
test
enter
lods
or
jmp
push
jne
repz
mov
mov
push
lods
jbe
mov
movsl
cmp
scas
loop
aaa
frstor
add
jb
xchg
nop
push
add
jmp
test
js
pop
in
push
xor
jecxz
xchg
cmp
rolw
fwait
iret
ljmp
cmp
mov
mov
incl
push
inc
roll
and
ljmp
cmp
jne
xchg
pusha
add
cmpb
ss
lods
adc
xor
xchg
add
inc
cmpsl
sbb
add
aas
and
cmp
or
jnp
in
mov
in
sub
cli
xchg
xor
daa
ss
push
cwtl
dec
loope
xchg
daa
repnz
push
imul
mov
les
xchg
sub
test
add
push
jae
inc
push
sti
fcoms
cmpl
mov
add
ja
movsl
jnp
jne
adc
adc
incl
pop
dec
jecxz
and
leave
fs
jns
dec
stos
cmp
sbb
and
ds
into
aas
movsb
jmp
sbb
push
adcb
inc
shrb
add
mov
jae
fldenv
cli
jecxz
xor
nop
jne
push
ret
jbe
dec
in
movsb
xor
add
pop
add
fsubl
faddl
inc
fdivp
imul
push
sub
dec
xchg
test
enter
bound
push
xchg
pop
sub
xor
addr16
mov
insb
lods
xor
jns
scas
out
inc
mov
xor
add
and
loop
cmp
lds
in
hlt
push
mov
fwait
popf
fs
cmp
fucomip
pop
enter
lock
and
in
imul
sub
rclb
xor
clc
add
push
leave
mov
lahf
sbb
add
jno
inc
xchg
sub
jnp
xor
xchg
cmp
push
xchg
dec
adc
jge
xchg
jo
aaa
bnd
adc
cltd
cmp
int3
mov
and
adc
out
pop
push
push
sub
mov
aas
jo
bound
repz
add
dec
pop
jo
cmp
mov
adc
sub
sub
mov
into
pop
inc
test
sar
repnz
insb
lret
cmp
ficomps
jne
cmp
aas
jp
sbb
xor
hlt
mov
sbb
push
push
mov
jmp
push
jg
jle
shll
add
adc
pop
or
aad
rorb
jl
and
mov
cmp
sbb
xor
leave
lods
jge
or
xor
addr16
cmpsb
ljmp
lods
jae
ret
jno
push
aas
lock
ja
xabort
pop
stos
dec
js
loope
addr16
add
cmovl
push
shll
jmp
clc
dec
add
sub
fdivl
iret
push
pop
into
or
rcl
movsl
jno
fnstsw
aad
and
testb
adc
in
pop
add
cli
pusha
outsb
dec
or
or
or
cld
std
mov
jge
xor
dec
cwtl
out
lret
pushf
repnz
mov
add
repnz
in
jmp
rcr
or
jne
jne
xor
loopne
stc
xorb
fmulp
es
sar
jo
rolb
flds
pusha
imull
aad
sbb
fisttpll
push
jmp
out
into
rorl
roll
fs
call
loop
dec
inc
mov
in
mov
and
mov
outsl
xor
cmpl
mov
or
mov
std
decl
xor
fldt
mov
mov
mov
in
stc
outsl
or
lds
dec
pop
xchg
jecxz
inc
jecxz
arpl
rcll
mov
in
sti
inc
call
xor
push
pop
mov
outsb
outsb
mov
mov
adc
shll
imul
imul
mov
xchg
xchg
cwtl
call
or
push
je
cmp
mov
loope
jo
dec
icebp
lahf
hlt
mov
jmp
nop
pushf
xchg
mov
adc
inc
cwtl
lods
xor
ljmp
add
add
stos
nop
inc
pushf
scas
ret
pop
jg
push
in
test
addr16
rorl
test
jge
test
mov
sbb
mov
arpl
les
pop
dec
lock
sbb
in
xor
pop
in
mov
lods
rclb
ja
daa
sbb
or
inc
add
jmp
mov
mov
clc
roll
and
loop
jg
pop
fstl
sbbl
adc
lahf
jbe
sarl
sbb
loope
mov
cmp
rcrb
aaa
xchg
es
pop
push
addr16
cmpsb
cltd
into
hlt
scas
adc
add
mov
mov
inc
xor
daa
pushf
ret
sbb
jo
daa
add
jmp
cmpsl
mov
out
add
fadd
in
xchg
add
movsl
in
push
mov
fidivrl
je
fmulp
cmp
in
push
jno
sub
jnp
add
xor
repnz
pop
out
pop
mov
jmp
pop
stc
push
jns
cmpsl
and
jle
fs
int3
sbb
loopne
dec
fwait
int3
lods
arpl
cli
popf
out
sub
pop
cs
lahf
mov
data16
and
cld
pop
sub
out
fiadds
jp
jno
cmp
inc
jecxz
add
outsb
add
ror
hlt
into
inc
cltd
es
xchg
inc
aas
pop
lock
mov
adc
fldenv
inc
fs
pushf
bound
lcall
neg
je
jae
inc
jecxz
in
mov
arpl
aaa
dec
rolb
and
shl
xor
push
pusha
and
idivl
xchg
pop
aam
sub
fbstp
dec
shrl
shr
sub
cs
inc
sub
scas
mov
pop
shlb
or
add
sbb
mov
lock
repnz
xor
iret
sbb
jg
aad
or
cmp
and
mov
and
int3
cwtl
ljmp
addb
int3
decl
push
xor
lahf
out
cmp
jne
pop
inc
mov
cmp
ss
push
lret
cmp
call
add
mov
outsl
lret
nop
out
pop
or
out
ret
dec
nop
adc
jge
dec
cmc
pop
mov
xorl
add
dec
dec
rcrb
shll
pop
or
push
cwtl
push
sbb
clc
cmpsl
loopne
ret
lret
mov
es
in
jmp
mov
cmpsl
jnp
imull
and
jo
mov
bnd
je
clc
mov
push
push
mov
fnstcw
insb
outsb
add
addb
stos
xor
fdivs
movsl
mov
dec
mov
subl
into
dec
xchg
push
fs
shll
les
inc
xchg
sub
pop
aad
lret
hlt
jl
cmp
mov
xor
xor
lret
fcoml
dec
or
cli
lahf
gs
loope
xor
shrl
mov
sbbb
insl
push
mov
jmp
push
loopne
sbb
cmp
xor
xchg
and
fsub
das
int
pop
xor
and
push
cs
adc
xchg
jp
inc
sbb
adc
mov
inc
push
push
pop
or
test
call
negl
push
out
jne
jbe
or
adc
fcomps
nop
cli
jecxz
push
xor
cmp
mov
sbb
mov
cmp
sbb
test
stos
push
cmp
inc
pop
fs
cmp
fimull
lock
jge
push
out
cmpsb
lret
mov
xor
sub
mov
js
jmp
test
aam
imul
arpl
out
repz
and
mov
into
lahf
scas
pop
dec
ja
imul
mov
add
jle
fsubrl
scas
fildl
fnstcw
test
and
jbe
pop
pop
mov
insl
adc
sub
loopne
insl
pop
cmp
outsb
or
jmp
push
push
and
xchg
sbb
jecxz
test
js
leave
xchg
or
sbb
jnp
out
push
cmp
xchg
icebp
jge
jle
inc
in
sub
mov
scas
lret
stos
mov
adc
cmc
test
mov
iret
je
lock
mov
mov
push
xchg
cmpsl
pop
jge
enter
mov
mov
mov
or
lcall
cmpsb
rcrb
out
ror
outsb
call
push
pop
shll
pop
fistps
mov
fistps
test
jge
out
fcmove
cmp
pusha
enter
mov
jle
add
rep
inc
pop
push
test
mov
out
cli
in
call
jae
rol
icebp
mov
in
test
cld
push
sub
adc
out
aam
push
push
or
or
pop
inc
std
mov
dec
into
je
popa
pop
les
out
sub
into
cmp
enter
pop
mov
enter
mov
inc
dec
pop
in
negl
sub
jmp
sbb
inc
jg
cltd
push
and
pop
bound
out
add
in
test
fcompl
test
bound
push
push
xchg
pop
xchg
jle
add
mov
outsb
lea
fnsave
adc
mov
idivl
pop
mov
cwtl
pop
mov
call
in
cmp
push
ret
frstor
idivb
dec
xor
jno
xchg
xor
frstor
add
add
lret
and
push
or
es
jl
fidivrl
hlt
jbe
roll
std
ja
fldt
and
push
push
not
push
mov
dec
jl
adc
jb
aaa
int3
cs
push
dec
mov
cmp
cli
jl
push
lods
adc
mov
inc
mov
pop
sahf
subb
adc
mov
xchg
shr
sub
inc
leave
scas
dec
jmp
loope
addr16
or
pop
xlat
loopne
ds
and
addb
xchg
mov
pop
add
mov
repz
outsl
dec
pop
jae
cmc
into
sub
adc
xor
sbb
shl
subb
out
jbe
rclb
data16
lds
je
dec
call
lahf
adc
xchg
mov
push
enter
jno
repnz
and
fdivrs
addr16
cmp
mov
outsb
gs
test
pop
sbb
or
add
aas
push
sbb
lcall
sub
inc
fldt
push
and
int3
pop
jns
add
lock
pop
fdivl
cmp
imul
out
push
xor
inc
data16
jno
pop
into
xor
out
mov
leave
decl
stos
dec
sahf
subl
leave
cmp
or
icebp
loope
jbe
lret
xchg
dec
out
in
jecxz
std
inc
jg
shrl
loope
jo
xchg
adc
jbe
lahf
or
mov
out
iret
nop
cltd
push
jae
stos
das
push
pop
mul
pop
lods
cmp
jae
hlt
aam
mov
call
scas
rcrb
mov
cld
cmp
xor
ss
lds
rorl
inc
push
mov
mov
leave
ret
dec
loopne
mov
cld
jge
jb
in
jmp
add
cwtl
mov
xchg
mov
nop
adc
adc
pop
les
pop
arpl
mov
cmpsb
pop
sub
lods
sub
inc
daa
push
movsb
ja
sarl
iret
arpl
imul
jo
push
gs
sub
jne
sbb
xor
xchg
insl
mov
movsb
xchg
andb
mov
inc
xchg
lret
mov
sti
outsb
in
loope
scas
addb
out
inc
nop
insl
popf
mov
cmpl
push
ficompl
inc
lret
adc
and
and
test
test
sbb
xor
movsb
movb
mov
cmc
cwtl
push
leave
in
ds
cmpsb
gs
mov
sub
icebp
repnz
push
fcompl
addl
jge
mov
xor
jae
adc
cmp
sub
cmp
mov
mov
xchg
mov
push
outsb
daa
test
xor
add
clc
push
mov
mov
shrl
ret
jno
push
xchg
push
or
xchg
lahf
sbb
pop
mov
and
sub
or
lea
pop
jle
sahf
clc
cmovae
outsl
aaa
gs
aam
pushf
jae
dec
dec
jae
aam
jge
mov
push
test
inc
ds
add
movsl
sbb
data16
adc
aaa
dec
in
jb
cli
lahf
add
mov
sub
popf
fmull
sbb
mov
xor
call
insb
sub
xchg
fcompl
inc
jne
adc
jecxz
jle
push
call
xchg
or
add
pop
mov
xchg
pop
xchg
cmp
mov
adc
pop
das
inc
mov
xchg
mov
add
insb
xchg
mov
xchg
jp
mov
icebp
inc
push
orl
mov
dec
in
push
bnd
dec
and
or
fsub
jge
sub
imul
cmp
mov
sbb
pop
fldcw
lahf
cld
xchg
hlt
mov
jmp
scas
sub
ret
xor
pop
popf
sbb
or
mov
or
push
icebp
shlb
jecxz
xchg
ret
jp
push
dec
test
shlb
xor
jmp
cmp
sub
adc
mov
cmp
cmpb
push
and
jnp
rcl
test
xchg
imul
out
and
fsubs
mov
addr16
div
mov
pusha
loope
popa
repz
or
pop
push
and
or
int3
into
push
push
push
push
push
stos
outsb
bound
pop
stc
adc
jmp
cs
je
out
cmp
dec
xor
pop
insl
out
jb
pop
rcr
loopne
icebp
lods
jne
scas
fimull
mov
or
movsl
xor
inc
or
stos
lcall
lods
pop
adc
lds
into
mov
aad
mov
or
cmpsb
mov
mov
hlt
scas
mov
push
ret
hlt
dec
test
repnz
mov
sbb
jmp
nop
push
lock
mov
fiaddl
mov
push
jne
mov
lods
insb
subb
xchg
inc
sub
cmp
xchg
push
cmc
cmp
push
daa
dec
fwait
and
pop
into
bnd
in
sub
xorl
shrl
sub
jmp
imul
jnp
xchg
pop
arpl
or
mov
mov
pop
xchg
in
add
pushf
cltd
and
cmp
pop
test
imul
dec
pop
pop
sub
mov
mov
lret
test
pusha
xor
xor
mov
sahf
cmp
pop
std
cmpsl
add
ja
mov
in
out
jns
jo
add
daa
rol
ja
or
repz
push
xor
fdivl
je
enter
xorl
push
vdivps
dec
adc
sub
jae
cmc
sbb
xchg
lret
jl
das
pop
push
cs
aaa
push
arpl
fs
aam
adc
push
dec
call
incl
sbb
je
ss
mov
divb
cmp
fadd
jmp
pop
mulb
fistl
addr16
xor
mov
outsb
orl
or
out
loope
insl
mov
sbb
jmp
in
sub
adc
jno
ret
jecxz
and
dec
add
dec
sub
mov
icebp
cltd
push
imul
cli
cmp
shll
inc
cmc
movsb
dec
leave
jno
and
scas
jle
out
clc
test
out
mov
xchg
mov
data16
stos
jnp
pop
sub
dec
dec
adc
jg
je
push
outsl
int3
insl
jmp
dec
pop
jae
dec
inc
mov
or
push
cmp
fistl
fldcw
push
fdivs
mov
fdivp
or
mov
pop
sbb
stos
inc
in
les
sbb
mov
ds
pop
popw
sbb
xchg
call
pop
sahf
imul
inc
dec
jge
clc
out
mov
push
jno
xor
sub
hlt
mov
pop
sbb
cltd
mov
pop
mov
pop
xor
jo
or
and
aad
das
sbb
xor
lds
jp
sbb
sub
scas
xor
std
stc
mov
push
popf
loopne
sbb
xchg
bound
lods
scas
shlb
fs
mov
push
into
dec
xlat
xor
pop
js
js
xor
int3
push
xchg
mov
mov
push
cld
and
mov
mov
int3
inc
rorb
push
scas
fstl
jo
loope
outsl
scas
jns
pop
jl
cvttps2pi
adcb
pop
lea
cmp
aas
pop
popf
sub
inc
and
cmc
sbb
test
adc
push
xor
arpl
sahf
lds
mov
pop
mov
loopne
xchg
test
mov
add
jae
lcall
addr16
jns
dec
lea
rorb
clc
addl
cmp
and
mov
and
cwtl
sbb
ljmp
sub
leave
cmp
inc
es
loopne
lret
sahf
fisubl
inc
daa
rorb
movb
int
data16
sub
add
or
ss
cmpsb
movsb
and
sbb
push
push
pop
arpl
cmc
pop
negl
es
pop
pop
mov
mov
in
enter
push
aad
pop
enter
sbb
ljmp
in
ja
jge
sbb
cli
jns
xchg
dec
int3
mov
stc
ljmp
dec
iret
dec
inc
jmp
mov
lahf
xchg
aad
test
or
repz
loop
push
xlat
sub
ja
add
adc
mov
iret
das
jmp
jge
iret
cmp
push
ds
repz
test
push
ds
cmp
dec
mov
dec
dec
test
aas
mov
scas
scas
mov
incl
loop
frstor
dec
cmp
push
sbb
sbb
pop
adc
andb
cmc
sub
imulb
in
adc
jae
or
js
int
push
fwait
lret
fists
xchg
or
dec
pop
mov
dec
rol
sbb
sub
mov
jae
push
gs
jp
adc
js
or
pop
arpl
je
push
arpl
mov
lods
mov
lock
and
in
or
jecxz
addr16
out
cld
inc
adc
push
sub
lret
jg
xor
or
pop
ret
or
xchg
or
fs
stc
sub
repz
push
cmc
dec
sti
jle
mov
mov
cli
test
inc
push
xlat
insl
xor
decl
xor
outsw
push
push
stc
orb
dec
mov
mov
jbe
mov
push
xchg
fs
pop
sbb
insb
xchg
in
notb
jmp
and
push
sti
inc
pcmpeqw
xor
dec
mov
dec
and
mov
gs
iret
aam
fnstcw
add
sub
mov
fstl
in
mov
mov
fimuls
scas
aam
ss
call
add
push
fsubl
sti
mov
or
mov
cwtl
xchg
xor
jl
sub
outsl
call
pop
or
sub
fnop
cs
inc
mov
jp
test
in
ljmp
cmp
mov
inc
fwait
inc
xchg
xor
in
pop
push
je
or
lcall
aaa
add
test
lahf
inc
mov
cmp
fisttpll
in
pop
jge
pop
push
cmpb
inc
xchg
push
jbe
mov
cmp
cmp
sbb
xchg
sub
pop
insl
clc
pusha
fiaddl
out
or
in
fisubs
outsl
and
push
mov
jnp
iret
icebp
inc
jp
fnsave
inc
add
push
xor
loop
adc
dec
add
cmp
scas
add
addb
icebp
mov
mov
outsl
cmpsb
out
std
and
pop
icebp
lock
push
data16
pop
ss
jnp
mov
pop
inc
and
xor
mov
testb
push
mov
jnp
jle
jno
mov
mov
in
stos
lock
hlt
mov
inc
clc
scas
mov
dec
ss
notl
sbb
repnz
inc
pop
mov
mov
gs
loope
mov
pop
or
cmp
out
subl
aad
cs
and
and
imul
mov
xlat
loopne
mov
fbstp
aad
rcr
add
into
mov
add
push
hlt
add
xchg
sub
js
push
mov
rcr
int3
jnp
push
push
pusha
aam
bound
daa
ret
insb
cltd
fcmove
dec
jg
call
xchg
das
cmp
arpl
and
sub
sbb
mov
push
adc
dec
push
lods
lea
lahf
inc
sbb
loop
cmp
stc
push
inc
stos
popl
or
data16
pop
mov
pop
addl
sti
cmp
call
adc
xchg
aam
pop
sbb
adc
sbb
sub
ret
and
sub
inc
lock
nop
sub
imul
ret
sbb
or
stos
int3
insl
stos
stc
and
mov
mov
stc
sub
daa
lock
dec
lods
mov
andl
sub
push
inc
notl
dec
adc
jp
rcll
jge
imul
hlt
mov
xchg
subl
xchg
ds
push
push
sub
and
mov
pusha
daa
int3
insl
in
push
in
lea
sahf
mov
test
test
push
mov
adc
rcll
stc
and
or
fsubrl
out
pop
cli
sub
or
dec
mov
mov
dec
fistps
jb
or
adcb
mov
xchg
xor
mov
cmpsb
pushf
std
xor
or
stc
push
gs
clc
jne
js
adc
jl
sbb
jmp
loopne
fdivp
cmpsb
jecxz
sub
cmp
dec
pusha
aad
adc
gs
neg
cmpsb
stc
push
enter
inc
fsub
shll
adc
push
jns
pop
les
and
testb
pop
cld
in
pop
dec
outsl
dec
out
pop
cld
or
sub
loopne
sub
dec
test
jl
sub
xor
inc
mov
jo
fbstp
mov
mov
in
push
fldt
insl
repz
sbb
jne
vpmaddwd
mov
insb
jne
repnz
fidivrl
and
sar
aad
dec
pushf
rclb
jmp
das
adc
lods
push
mov
mov
cmp
dec
inc
iret
jnp
daa
push
inc
mov
cmpb
test
inc
pop
push
mov
xchg
xchg
sub
cmp
jl
lock
je
jb
rcr
and
xchg
pop
repz
rol
jno
pushf
add
dec
or
sbb
gs
out
test
pop
les
sbbl
notl
repz
call
dec
mov
cmpsb
jmp
test
xor
xor
xchg
push
in
fisubrs
lods
lods
adc
in
xchg
shl
scas
lods
rolb
xchg
adcb
shrb
sbb
jno
xor
sbb
and
push
leave
xor
sbbl
cld
mov
push
jmp
sahf
xchg
sbb
rorb
test
push
popa
add
cs
cmpsl
push
pusha
inc
negb
int
xor
pop
mov
mov
push
lret
xorps
loop
cld
stos
cmp
sub
and
roll
movsb
push
gs
push
in
lods
jo
xlat
mov
call
sbb
ret
leave
lret
sti
cmp
push
loope
inc
xlat
loopne
repnz
sbb
jg
xchg
adc
ljmp
rol
mov
stc
shrl
push
lret
test
push
fidivl
popf
cmp
cmp
xor
push
and
push
push
sbb
pop
sub
test
addr16
int
addl
ret
sbb
insl
movsb
fwait
xorb
pusha
sar
sahf
out
rclb
push
movsl
call
xor
ds
vfmsubadd213ps
inc
iret
sub
mov
loopne
test
fwait
lahf
xlat
daa
mov
sbb
clc
jge
rorl
ljmp
push
jnp
gs
les
out
sub
fadd
arpl
stos
mov
and
shrl
push
in
popa
adc
daa
mov
push
pop
lock
xlat
mov
inc
aaa
inc
adc
mov
jecxz
cmpsl
mov
xlat
fsubrs
mov
data16
cmp
fadds
sbb
clc
adc
inc
lret
push
xor
popa
js
bound
pushf
loope
dec
cmc
sahf
in
cwtl
sbbl
xchg
pop
xlat
push
cmp
mov
sbbl
out
xchg
movsb
ljmp
hlt
dec
sub
pusha
mov
cmp
sub
ret
sbb
movsl
dec
mov
sub
xor
push
lods
ret
and
mov
loopne
cmp
cmp
mov
add
push
mov
xor
and
push
jne
shr
rolb
cs
jge
and
dec
cmp
jne
dec
jmp
in
mov
pop
mov
xchg
pop
jne
ja
nop
cmpsb
cmp
jle
jb
inc
testl
cmp
add
cs
jle
xchg
ljmp
in
xor
lcall
dec
mov
clc
dec
fwait
gs
scas
fadds
sbb
mov
mov
addl
loope
or
call
push
pop
mov
dec
aad
adc
cmp
xchg
js
out
dec
imul
pop
xchg
lods
mov
cmpb
daa
stos
int3
jbe
mov
imul
repz
in
dec
mov
sub
cmc
mov
sti
and
jns
cld
cmpsb
out
push
imul
or
enter
mov
push
ljmp
clc
cmp
jmp
xchg
mov
inc
dec
ret
sub
fdivl
inc
jo
add
ljmp
push
push
popl
xchg
test
xor
mov
movsl
push
sbb
and
pop
enter
xchg
fstl
repnz
cmp
data16
shl
mov
mov
mov
shrb
ds
pop
adc
pop
jg
ficoms
sbb
ret
js
cs
mov
jp
jo
je
dec
sbb
mov
incb
incb
enter
lock
in
mov
jmp
ret
push
ja
mov
add
cld
or
gs
cld
cld
in
std
js
js
mov
adc
std
xor
hlt
ret
jmp
mov
ret
inc
pushf
testl
aad
push
stos
mov
adc
dec
dec
sbb
movsb
jp
sarb
ret
jb
jb
cmp
leave
and
jle
inc
push
and
lret
bound
pushf
rcr
cs
out
add
adc
filds
test
pop
pop
jne
sbb
xor
shrl
pop
lds
pushf
jb
loopnew
lods
jbe
call
andps
inc
bound
sarl
jle
int
fucomip
add
repnz
mov
js
repnz
and
lock
mov
xor
in
mov
add
xchg
or
pop
jae
jp
inc
ret
mov
xor
cmp
push
inc
out
dec
out
pop
or
scas
dec
das
adc
dec
pop
and
sarb
push
stc
testb
out
dec
pusha
push
jle
mov
jle
cmpsl
repz
shrb
lods
add
and
or
adc
ret
pop
pop
shrl
mov
pop
jl
leave
pop
shl
sub
push
out
mov
fnstsw
or
mov
lods
rorl
jmp
rolb
inc
push
xchg
loopne
mov
cmp
scas
lcall
sti
lea
stos
push
inc
xor
sub
push
jns
and
cmc
add
test
jg
mov
shll
push
repz
int
enter
mov
je
push
hlt
pusha
lods
fnsave
adc
test
mov
arpl
add
cld
rcrl
mov
nop
lea
pop
int
cmp
pop
ds
fildl
pushf
in
test
jo
ret
sbb
scas
push
fwait
stos
mov
es
mov
fdivrs
outsb
lahf
ret
mov
mov
sub
mov
fwait
inc
int
nop
push
pop
in
sub
fdiv
out
and
jo
pop
mov
fstps
pop
pop
mov
lahf
imul
aad
pop
shlb
jg
dec
push
ss
jae
lcall
and
jo
es
jb
and
push
lods
and
enter
pop
orl
movsb
lret
repz
jo
test
jp
test
mov
sub
dec
and
movsl
test
in
loop
sub
icebp
xlat
xchg
mov
lods
mov
sub
lahf
mov
in
xlat
adcb
sarl
or
mov
subb
fcompl
movsb
fbld
cwtl
movsl
pop
clc
sbb
rol
inc
and
test
gs
mov
clc
xchg
jo
loop
outsb
imul
jmp
adc
mov
test
cmp
mov
je
loop
or
fisttps
fimuls
out
loopne
inc
iret
mov
cmp
cmc
gs
popa
dec
pop
mov
pop
sub
pop
mov
push
outsb
mov
popf
shl
jns
nop
inc
sub
cwtl
pop
movsl
ficoml
jl
decl
fisubs
mulb
dec
sbb
dec
pop
xchg
jg
orb
ret
shrb
pop
jns
mov
xchg
popa
sbb
jmp
push
lods
jge
cmp
inc
aaa
fisubs
dec
imull
test
sbb
cmpsl
in
xor
inc
push
incl
cld
xchg
bound
jl
add
js
cmp
xor
mov
pop
int3
ret
aas
cmp
xorb
cmp
inc
xor
dec
rolb
xor
adc
imul
cltd
insl
jno
and
aad
or
mov
imul
mov
lahf
mov
movsb
add
lea
iret
leave
mov
fmuls
add
aaa
jno
dec
jecxz
in
std
andl
shl
add
jo
hlt
adc
inc
cmc
mov
lahf
mov
dec
cli
emms
lods
in
push
cmp
push
orl
out
mov
mov
fs
imul
aaa
mov
sbb
mov
leave
iret
dec
pop
subl
push
into
adc
jb
daa
aas
xor
and
je
xchg
inc
das
test
or
and
rcrb
lods
push
sbb
gs
dec
push
cltd
cltd
sarb
js
fwait
jge
xchg
sbb
lcall
push
xchg
sub
int3
mov
loop
xchg
mov
push
fcompl
inc
mov
jg
fwait
pop
or
pusha
aas
cltd
mov
jl
nop
pop
outsb
jb
dec
jge
cmp
in
cmc
fldl
iret
daa
mov
clc
int
rcrb
fstpt
mov
cmpsl
adc
inc
insb
dec
mov
div
lret
inc
gs
cmp
push
dec
dec
out
xchg
test
in
dec
lods
cmc
lret
popf
add
inc
cld
jnp
inc
adc
into
pop
mov
loope
sbb
stos
test
out
test
in
jno
jp
popf
je
into
cwtl
in
les
divb
xchg
cwtl
arpl
jo
mov
cmc
gs
pop
loopne
jle
dec
push
xchg
xorl
push
adc
cmpsl
mov
jmp
dec
sti
adc
and
loopne
add
sti
dec
or
fnstsw
or
sub
jle
mov
cmp
fcomi
push
and
mov
addr16
mov
lds
pusha
add
add
adc
cmc
shr
fsubrl
push
dec
cli
inc
jo
mov
cmp
push
aam
sub
js
nop
rol
into
jl
xchg
add
mov
insl
cs
cmpsl
pop
push
das
orl
int3
shlb
pusha
sbb
or
dec
sub
sbb
cwtl
mov
cwtl
push
sbb
dec
jp
pop
andb
or
inc
int
enter
test
lock
mov
push
mov
movsl
mov
fisubs
xchg
xor
mov
xchg
ja
sarb
or
imul
ret
sbb
cs
lods
insb
lods
add
push
pop
inc
imul
scas
cmc
xorl
in
xor
dec
push
inc
xorl
push
stos
xchg
jne
in
ss
ljmp
lret
std
inc
lock
add
mov
jmp
repnz
sub
ret
lcall
and
add
jns
cmp
stos
or
loope
in
add
out
add
les
ffree
mov
in
mov
rorl
sub
sbb
scas
shrb
jecxz
xorb
mov
lods
mov
adc
xor
lds
je
pusha
pop
cmc
sbb
sub
xor
and
sbb
adc
je
pop
cmp
pop
stos
test
add
dec
das
push
xor
lcall
hlt
jns
pusha
dec
or
push
jnp
mov
aas
push
add
enter
sbb
fldl
aam
lods
xchg
ret
jp
xchg
test
out
jbe
inc
xchg
in
xchg
cmp
pop
testb
dec
gs
xor
sbb
insb
std
dec
jae
mov
xlat
xchg
imull
gs
insl
and
dec
cmp
loopne
xchg
mov
out
popf
mov
xchg
lahf
cmp
mov
or
pushf
aad
rep
ret
xor
mov
mov
push
int3
and
jns
sub
push
jo
in
jmp
enter
mov
out
sahf
shlb
out
adcb
loopne
mov
icebp
loop
lods
dec
lret
push
testb
push
fidivs
push
roll
mov
mov
fwait
or
out
test
xor
addr16
aaa
cmovno
mov
jno
clc
or
shr
mov
jge
out
mov
push
jae
pop
xor
xchg
lods
rorl
icebp
sbb
dec
adc
jnp
lret
sbb
pushf
fisttps
xchg
pop
sub
icebp
sbbb
arpl
mov
mov
and
lret
into
mov
cmp
scas
fstpt
and
xchg
out
add
in
test
and
mov
sahf
in
sti
cmp
cltd
inc
sbb
jns
push
inc
aam
mov
cmp
push
std
and
xchg
jmp
sub
pop
push
jb
pop
iret
cmpsl
fadd
sbb
popa
push
inc
adcb
je
add
add
add
aam
dec
fnstcw
inc
enter
out
jbe
shll
cwtl
adc
lods
cs
popa
dec
mov
mov
push
mov
inc
icebp
push
addr16
cli
xlat
ja
int
add
and
pop
or
pop
jne
in
jae
pop
push
lock
pop
mov
enter
mov
addr16
ret
inc
mov
dec
dec
lock
or
pop
sbb
push
xchg
or
pop
fidivl
xchg
lret
adc
adc
xchg
adc
push
sub
gs
cmp
jp
xor
mov
jno
jnp
ja
and
enter
fidivrs
mov
or
lcall
lahf
jl
pushl
icebp
mov
mov
dec
xor
mov
repz
push
leave
xor
push
das
xor
aas
arpl
ja
out
arpl
or
xchg
test
fdivrl
and
fwait
sbb
rcrl
mov
nop
inc
cltd
pop
sbb
xchg
lcall
and
inc
pop
fldln2
ss
inc
mov
sahf
xor
push
int
mov
sub
out
add
pop
xchg
pop
shll
or
das
rolb
mov
enter
and
test
jbe,pn
cwtl
shlb
and
out
and
pop
or
sub
xchg
xchg
roll
subb
and
pop
lahf
xchg
mov
pop
push
mov
out
je
aaa
inc
inc
lret
cmp
cmp
repz
rcrb
cmp
jl
mov
and
mov
adcl
test
jne
fadd
mov
lcall
out
pop
mov
jno
mov
negb
aad
insb
cmc
lret
insl
sahf
aas
mov
js
jg
pop
mov
mov
cltd
jge
inc
inc
sbb
mov
mov
scas
jp
imul
call
xor
or
push
pop
jl
mov
int
in
out
out
mov
js
orb
movsb
orb
stc
aam
dec
or
mov
mov
fmul
fisubs
mov
push
icebp
dec
popf
inc
ret
xor
xlat
xor
fcoms
loop
fnsave
jb
daa
lret
data16
push
push
dec
in
movsb
out
mov
push
push
cmp
imul
push
mov
fimull
rorb
mov
testl
or
es
xor
cmp
mov
push
dec
sub
cltd
mov
inc
push
addr16
fdecstp
xchg
sbb
hlt
iret
sub
add
push
shll
fnsave
mov
fisttpll
xor
hlt
jmp
scas
push
adc
test
and
sub
adc
call
pop
xor
iret
mov
push
sub
adc
add
in
out
js
mov
xor
leave
pushw
out
sub
fdivrp
jae
ret
mov
in
subl
dec
loop
jno
push
es
leave
test
sub
je
test
xor
dec
fistpl
jbe
imul
mov
roll
hlt
xchg
xor
divl
sub
add
sbbb
dec
outsl
cld
dec
inc
push
adc
lods
cmp
jge
sub
lods
enter
mov
or
or
pop
and
popa
cmp
incl
or
sahf
and
dec
pop
jne
stc
cli
xor
xchg
test
jns
sub
inc
mov
xor
insb
push
dec
icebp
sub
mov
inc
inc
nop
push
push
xchg
icebp
iret
bound
cmp
cmpsb
sbb
movsl
sbb
leave
lods
pop
pusha
ffree
mov
and
sbbb
fbstp
pusha
push
imul
xor
insb
add
mov
hlt
jne
xor
mov
push
shll
pop
jo
popf
bound
xchg
ds
mov
xchg
push
hlt
dec
cmpsb
jae
jg
in
daa
stc
in
push
iret
mov
es
push
add
or
inc
pusha
aas
jns
jp
loopne,pt
xlat
ror
repnz
cltd
lret
iret
push
jne
mov
push
sahf
loop
pop
mov
out
sarb
loope
add
loope
adc
and
mov
fwait
cltd
pop
push
cmp
pushw
aam
xchg
xor
and
jl
jbe
push
cmc
test
out
push
int
and
add
and
mov
es
jmp
push
xor
std
mov
shlb
sbb
movaps
mov
sbb
mov
pop
sti
sbb
and
ss
cwtl
bound
fisttps
rcrl
mov
jns
inc
xchg
adc
or
cmp
iret
sub
xor
cmc
push
leave
sbb
pop
movsb
xchg
cmpsb
push
in
xchg
dec
sub
sbb
mov
xchg
sahf
outsl
stos
stos
cwtl
pop
shrd
jbe
jmp
xlat
fimuls
add
jno
mov
pop
pushf
subb
sarb
or
sbb
imul
xor
clc
std
scas
jno
cmpsb
mov
faddl
rolb
std
sti
push
mov
mov
and
mov
mov
addr16
loopne
mov
fsubrl
inc
sub
in
out
push
fcom
push
add
sbb
cmp
fsub
data16
xor
pop
push
scas
adc
push
cli
push
jbe
je
cmpb
sahf
sub
push
jno
sbb
dec
sbb
movsb
ds
add
movsb
enter
cmc
xor
cmp
mov
sbbb
adc
mov
enter
cltd
xchg
mov
xchg
stc
repz
leave
inc
xor
shl
xchg
cmpsl
daa
cmp
ss
add
dec
mov
mov
sub
subb
cltd
and
sbb
sbb
pop
aam
dec
or
sahf
and
push
inc
js
mov
pop
fdivrl
sub
cs
xchg
cmp
sub
insb
jb
scas
sub
in
lgs
roll
mov
lret
loop
out
add
bound
mov
rorb
fadds
lahf
and
iret
cmp
test
mov
hlt
faddp
pop
sarb
inc
push
push
stos
stc
ja
roll
push
stc
sarb
pop
add
xchg
push
daa
popf
scas
je
inc
add
pop
pop
aad
arpl
add
mov
mov
out
arpl
mov
imul
ret
js
and
sub
lds
loope
inc
ficompl
loop
stc
jno
movsb
inc
xchg
fadd
shr
xor
sbb
xchg
lods
xlat
push
xor
and
add
mov
dec
outsb
xchg
lods
stc
and
add
scas
clc
pop
xor
jecxz
adc
inc
stos
test
pop
sete
add
pop
cmp
xchg
nop
rorb
sbb
aaa
lods
lods
xor
dec
insb
subb
mov
int3
jno
ja
sbb
add
cwtl
lods
jmp
in
arpl
add
sub
dec
xorb
push
lock
imul
cmp
push
mov
jmp
popf
sbb
and
pop
cwtl
int3
push
dec
lret
shrb
jmp
add
xor
cli
scas
loopne
mov
add
dec
aad
xchg
and
cltd
inc
mov
hlt
pop
pop
cs
mov
jmp
jns
or
mov
movl
js
xchg
inc
add
outsb
mov
mov
jecxz
lea
mov
mov
inc
xor
sbb
push
jmp
das
ret
aas
push
mov
test
xor
ja
adc
dec
int3
push
pop
ss
push
cmp
insl
fwait
cmp
loop
addl
mov
pop
arpl
outsl
test
cs
xchg
inc
add
jns
js
push
pop
dec
stos
mov
popf
movsl
xchg
mov
jb
mov
mov
bnd
aaa
jp
mov
push
xchg
subl
sahf
dec
dec
scas
pop
or
xchg
dec
ja
xchg
es
cmp
push
push
adc
mov
inc
sbb
lahf
xchg
pop
enter
data16
or
cmp
jb
inc
stos
push
dec
inc
mov
lock
cld
pop
ret
jb
sub
pushf
mov
push
xchg
scas
push
inc
push
mov
xor
inc
sbb
push
add
roll
stos
lahf
ret
and
push
sub
andl
add
cli
enter
in
sbbl
jo
sub
push
rcrl
jg
inc
add
mov
mov
into
insb
mov
lret
stos
arpl
lret
cmpl
sti
cmpsb
pop
xchg
jecxz
lods
dec
adc
rcll
into
test
cmp
sub
mov
out
add
inc
jl
push
pop
leave
cmp
inc
bound
leave
insb
rolb
rcrl
cs
ja
repnz
roll
ljmp
jae
mov
push
mov
push
mov
dec
bswap
popf
push
adc
ret
push
pop
aas
push
pop
sbb
push
mov
cmp
xchg
lods
scas
lods
adc
insl
cltd
outsl
inc
in
in
hlt
icebp
push
data16
xor
sbb
int3
sbb
add
int3
jl
sbb
mov
nop
rol
in
jbe
sbb
mov
push
push
cmc
sub
in
pop
cli
dec
lods
shll
or
xor
dec
mov
xchg
dec
xchg
push
sti
dec
sub
pop
dec
or
rcll
out
add
test
hlt
out
lahf
daa
and
jg
lret
xor
mov
fidivs
xchg
pop
inc
movsb
int3
fwait
sbb
sub
cmpb
and
fwait
les
sarl
sbb
insb
pop
fcomps
imul
mov
outsb
and
arpl
push
adc
cwtl
or
and
xor
add
xchg
mov
lahf
mov
shlb
mov
ds
push
loopne
or
ja
or
or
dec
pop
je
daa
cmp
xchg
mov
cmp
mov
add
subb
scas
in
bound
push
leave
insl
mov
xor
pop
mov
xor
jge
nop
sarl
mov
sbb
sar
push
cmpsl
inc
test
imulb
cmp
movsl
fadd
arpl
pop
sub
mov
scas
loopne
inc
pextrw
pop
enter
pop
dec
cmp
dec
xor
push
es
mov
js
cmp
rol
leave
fsubl
adc
xchg
mov
clc
mov
hlt
nop
sbb
jg
notb
sub
lcall
outsb
sbb
sbb
add
aad
fisubrl
mov
sub
cmp
popf
mull
andb
push
imul
dec
dec
xchg
jae
sbb
push
and
adc
add
mov
hlt
jae
xor
test
hlt
lret
ja
nop
sbb
jmp
fwait
pop
jae
add
xor
sbb
ret
jnp
adc
sti
inc
stos
mov
push
jp
mov
inc
cli
lret
aas
dec
jmp
cmc
lahf
loope
dec
daa
adc
mov
jmp
ss
push
mov
sub
jb
or
lret
mov
dec
out
pop
lock
int3
scas
inc
enter
add
jbe
data16
jp
mov
push
bnd
outsb
imul
mov
hlt
mov
pop
adc
fcmovnbe
cs
mov
inc
insl
fdivrl
cli
aaa
mov
push
fcompl
pop
das
sahf
push
ss
ljmp
pop
add
inc
inc
test
mov
ret
cwtl
daa
push
stc
push
add
iret
movsb
pop
push
cmp
or
adc
clc
hlt
xchg
add
inc
mov
inc
cli
cmp
jae
xor
add
scas
push
test
mov
ret
dec
outsb
neg
dec
mov
jb
pop
adc
cmp
adc
lahf
mov
push
cmp
xor
in
dec
cli
jbe
fisubl
push
nop
mov
mov
in
jne
fwait
out
inc
xor
pusha
mov
inc
outsb
ljmp
cmpsb
leave
int
sbb
xchg
push
mov
jnp
push
outsl
aas
push
cmc
loop
mov
bound
or
loope
in
cld
and
push
mov
mov
es
fwait
testb
mov
cmp
or
ret
nop
mov
ljmp
xchg
pusha
dec
mov
push
clc
mov
lods
in
lret
lret
xchg
sub
inc
out
fildl
pop
arpl
sahf
mov
sub
neg
int3
jmp
in
dec
push
fmuls
lret
loop
ja
ret
nop
inc
adc
jnp
add
aam
out
and
cmp
fmuls
fiaddl
cmp
shr
dec
jbe
add
cmc
stc
imul
pop
jl
xchg
clc
sahf
add
cmpsl
mov
cmp
fists
xor
push
and
mov
jb
stos
mov
sbb
subb
aas
push
lar
gs
and
jb
inc
test
mov
push
cmp
add
movsl
sub
mov
push
sbb
and
loop
test
push
bound
addl
jb
adc
outsb
popf
cld
rorb
push
xchg
mov
loopne
int3
mov
sub
ss
mov
nop
scas
outsb
rcrb
shll
call
pop
push
cli
test
into
call
pop
and
xchg
or
cmpsl
adc
cmp
nop
cmp
cmc
sub
jbe
dec
in
shlb
lahf
mov
idiv
add
pop
popf
test
push
add
test
ss
dec
mov
push
idivl
xchg
dec
mov
repnz
loopne
loope
cld
lock
inc
test
mov
push
subl
shl
dec
mov
cmp
mov
pop
lock
jae
in
pushf
loop
rorl
jb
jb
mov
cmp
shrl
inc
inc
pop
call
cmp
mov
ja
xchg
xor
filds
add
nop
pop
fildll
add
inc
mov
add
mov
lds
xor
xchg
or
hlt
arpl
adc
add
cmp
cld
xor
mov
and
cmpsb
sar
lods
cmp
mov
in
pusha
xchg
add
ljmp
xchg
aam
out
sbb
add
push
add
push
xchg
mov
mov
gs
int
add
sbb
scas
out
sahf
loope
push
arpl
sti
xor
and
jp
decl
loope
testb
dec
or
jae
xor
loopne
inc
iret
out
add
and
and
xchg
fadd
push
add
mov
outsb
jle
mov
push
mov
shl
and
popf
mov
and
mov
mov
inc
sahf
mov
adc
and
xchg
mov
sub
int
lcall
pop
cmp
mov
sub
mov
adc
inc
clc
push
lds
add
nop
inc
jle
jb
adc
xchg
scas
sbb
mov
mov
adc
pop
add
arpl
test
xacquire
sub
adc
sub
dec
add
lock
rclb
aas
cltd
mov
push
jnp
icebp
leave
movsb
inc
std
fwait
jne
sti
pop
sbb
fs
addr16
pop
mov
push
pushf
loope
popa
push
inc
outsl
movsl
sub
xchg
jno
rcrl
mov
cwtl
ror
loopne
pop
in
repnz
cmc
sahf
stos
xor
xchg
and
add
sub
ds
aaa
cli
pop
push
dec
mov
jp
stos
mov
stos
cli
mov
ja
inc
inc
test
mov
inc
pop
mov
mov
and
fdivp
stc
sub
ds
mov
rcrb
mov
stos
jo
lret
mov
cmp
enter
ss
inc
xor
push
pop
pop
xchg
sub
pop
jmp
push
roll
pop
push
mov
push
jb
out
add
sti
lods
cmp
cmp
xchg
outsl
cmp
fbstp
cmp
cli
divps
lods
mov
mov
cltd
filds
lock
add
lock
sbb
fisttpl
daa
pop
dec
or
sub
fidivl
cwtl
or
jge
sub
out
xorb
xchg
dec
mov
sbb
pop
xchg
and
ret
roll
mov
cmp
or
adcb
xchg
push
aas
inc
sbb
bound
insl
popa
push
cmpsb
loop
ret
fcom
add
jmp
das
js
push
fs
push
iret
mov
cli
mov
pushl
mov
adc
fdiv
leave
cmp
push
and
leave
fimuls
xchg
popa
fisttpl
jo
int3
lods
movsb
sbb
push
das
int
lods
mov
ss
orb
dec
push
push
out
push
xor
das
fbstp
insl
dec
sti
cmc
sub
lahf
hlt
jno
push
push
add
jg
push
out
add
sbb
xorb
dec
jle
add
ficoml
mov
test
jl
adc
test
into
sub
xor
xchg
sub
insl
xchg
xchg
aaa
mov
inc
imul
dec
mov
dec
cmp
sbb
xchg
in
push
and
jae
mov
inc
repnz
in
loop
push
cltd
fisubrs
mov
push
and
sub
cmp
jno
test
rcr
push
out
jmp
clc
sbb
testl
xor
xchg
push
sarb
jmp
out
pushf
pop
lds
sub
pop
fistpl
jne
or
std
push
xchg
out
xor
xchg
scas
pop
mov
repz
cmpsl
cmp
ds
test
cmc
cmp
xchg
rolb
ljmp
mov
fwait
test
pop
outsb
pop
push
inc
js
sbb
subl
addr16
mov
jns
pop
cmpsb
stos
inc
rcr
xchg
jl
dec
out
ljmp
cmp
inc
nop
and
pop
pop
xchg
jne
or
les
int
outsl
sarl
lret
mov
push
sbb
jp
sahf
push
jecxz
dec
adcl
stos
ja
decl
pop
fcmovbe
daa
in
push
or
inc
push
cmp
cmpsb
cld
jno
rcl
and
adc
jo
xchg
cltd
fwait
pop
pop
adc
xor
push
enter
xchg
mov
adc
daa
stos
cmp
add
cmpsl
inc
pop
jecxz
mov
push
jns
jae
xchg
out
lea
movsb
sub
push
cs
jmp
cmc
sub
mov
jno
jb
sub
mov
imul
push
bound
js
phaddsw
cli
stc
fadds
mov
hlt
adcl
lret
jns
frstor
out
into
jmp
and
mov
xor
aad
mov
sub
gs
sub
lea
add
loop
es
ja
and
or
mov
push
fwait
jmp
jo
das
fs
inc
mov
test
sub
jb
or
lahf
sbb
jg
or
faddl
xchg
inc
idivb
adc
ds
jle
inc
xchg
iret
test
push
push
insl
test
push
daa
lock
sbb
mov
cmp
aaa
popa
mov
aam
xchg
dec
sbb
insb
aad
inc
or
sti
imul
jg
shr
cmp
or
or
or
mov
outsl
cmp
dec
out
xor
lds
push
lds
cmp
js
into
inc
lcall
leave
adc
cmp
xor
mov
icebp
and
or
jmp
dec
dec
fsub
out
sbb
cmp
mov
add
fcompl
mov
or
ds
or
push
xchg
jl
xchg
fbld
sub
mov
gs
fistpll
clc
mov
xor
inc
adc
sar
test
lea
add
not
cmp
inc
jecxz,pt
cmpsl
mov
ss
jg
mov
lret
sbb
cmpsl
ret
add
sub
add
or
mov
push
mov
stc
sahf
mov
mull
sbb
mov
dec
xchg
imul
mov
xchg
pminub
sbb
xchg
cli
fs
cmp
jecxz
mov
test
les
mov
xchg
mov
es
add
sbb
xor
jmp
insb
push
adc
jmp
sarb
jmp
xchg
je
cmp
movsl
sbb
add
jecxz
dec
pop
call
inc
pop
aam
mov
dec
in
mov
push
or
js
sbb
lds
xor
ret
out
fcoms
or
or
mov
mov
fnstenv
pushl
pop
test
xor
gs
lods
and
or
push
jecxz
into
xor
icebp
or
addr16
dec
and
pushf
jb
fs
pop
pop
into
aad
shr
scas
jle
inc
sti
add
fs
lea
push
mov
repz
out
mov
insb
mov
or
xor
into
mov
lahf
inc
mov
sbb
repnz
push
es
mov
outsb
das
or
mov
mov
jecxz
insl
imul
addr16
lea
mov
test
jle
adc
test
out
xchg
sub
sahf
cli
lret
sti
scas
testl
fwait
rcr
sbb
xchg
xchg
cwtl
cltd
popa
pusha
mul
decl
cli
adc
cs
ljmp
cmp
es
stos
add
lods
fwait
pusha
mov
ret
sub
inc
mov
push
test
adc
mov
les
push
ss
into
push
or
scas
insb
cli
sub
roll
icebp
enter
push
xor
add
xchg
imul
mov
aad
xchg
movsb
cmp
sti
jg
fstps
sarl
cld
push
stos
movsl
es
lcall
scas
xor
cmp
fcoms
decl
pop
sti
pop
cld
or
add
scas
mov
fidivl
lahf
and
cltd
pop
jns
xchg
test
cld
fnstenv
out
divb
lret
divb
stc
cmp
jb
mov
fs
pop
mov
mov
add
sbb
call
es
shll
mov
push
push
inc
sub
sbb
push
insl
mov
mov
dec
xchg
cld
pop
mov
in
insb
je
cmp
ljmp
test
jns
aaa
ds
xor
mov
sahf
sarl
daa
test
adc
and
pop
push
sub
cmp
nop
jmp
mov
inc
cli
dec
pop
je
or
cmp
push
fwait
lods
cwtl
add
and
rcll
xor
xchg
imul
mull
lret
inc
icebp
xchg
aaa
stc
sbb
mov
adc
pop
mov
pop
arpl
xor
ss
packsswb
cmc
sbb
push
xchg
and
outsb
mov
pop
push
movd
sub
jecxz
into
ret
mov
or
in
inc
jbe
ficomps
xchg
lock
push
mov
and
sub
push
ss
ret
outsb
in
insb
arpl
sub
xchg
stc
lcall
stos
fidivs
inc
lds
mov
adcl
mov
mov
dec
adcb
sub
dec
or
add
test
lret
mov
inc
scas
aaa
int3
aaa
scas
stos
leave
cmp
ret
in
jo
cmp
cmp
and
and
jge
sub
and
or
stos
dec
inc
mov
insl
loope
adc
gs
sub
push
mov
adc
cmp
mulb
inc
inc
pop
stos
cmpsl
mov
cmpsb
gs
out
mov
mov
xor
sbb
push
popa
sti
mov
mov
jb
jbe
arpl
adc
or
or
js
bnd
inc
xor
mov
dec
aad
stc
stc
push
movsb
dec
stos
ds
push
sbb
mov
jle
mov
sub
xchg
push
fisubl
and
push
mov
push
jo
xor
shll
orl
mov
mov
movsl
jge
stc
ljmp
lret
int
xor
out
xor
fsubrl
xor
loopne
cmp
cmp
and
lret
icebp
pcmpeqw
adc
or
xor
xor
push
dec
cmpl
jmp
std
mov
add
pop
adc
xor
shrb
inc
dec
mov
xchg
mov
jge
loop
iret
jne
inc
or
xor
aam
in
sub
addr16
pushf
ret
sbb
inc
int3
out
mov
mov
adc
add
ds
test
mov
or
insb
mov
cli
xor
in
push
adc
popf
or
lret
and
mov
loopne
and
pop
jb
int
inc
std
jle
xor
inc
clc
push
or
push
out
mov
lea
push
aam
jp
mov
jbe
push
clc
daa
sbb
outsl
prefetch
or
rorl
mov
xchg
add
sbb
add
jne
push
pop
ret
in
pop
and
aad
pop
xchg
sti
add
push
push
les
rcl
stos
push
orl
aaa
enter
test
xchg
addr16
jne
shlb
sub
dec
stos
push
dec
sbb
or
sarl
jecxz
sbb
xor
jo
sbb
sub
call
dec
jno
into
push
fidivrl
sub
mov
adc
mov
fistl
jns
mov
and
sub
int3
mov
loope
repnz
mov
xchg
repz
and
jo
mov
add
hlt
insl
jbe
repz
fdivrs
das
adc
mov
and
ds
jb
jno
cmpsb
inc
test
mov
pushf
inc
cmp
test
repnz
or
in
cmp
sbb
xlat
pop
push
test
dec
and
xor
dec
sahf
filds
dec
sarb
leave
sub
in
sbbb
and
pop
stos
insl
in
jno
add
aas
cmp
notb
aaa
add
add
icebp
mov
out
lods
lods
fmulp
sbb
call
xorps
sub
jl
mov
nop
adc
scas
cltd
adc
mov
pop
lods
mov
cmp
stos
dec
lahf
mov
sbb
mov
sbb
cmp
inc
bound
mov
fs
push
jne
dec
and
mov
imul
lret
adc
sub
push
cmpsl
mov
push
lods
dec
ret
aad
popa
call
mov
cmpsl
cmp
pop
push
inc
jge
cltd
and
inc
bound
push
mov
pop
cli
cmc
push
cmp
dec
jbe
dec
outsl
xor
xchg
xchg
int3
or
push
sti
dec
xchg
sarb
or
dec
add
jnp
mov
jge
scas
js
mov
stos
add
or
jecxz
sbb
mov
and
pop
fidivl
mov
std
and
dec
add
add
inc
jp
mov
dec
rcrb
and
cmpsl
popa
cmc
movsl
mov
sub
nop
lock
aad
xchg
add
sub
mov
repz
fdiv
cs
bound
and
lretw
push
or
outsb
or
pop
pop
jecxz
in
fisubrl
xchg
or
in
sti
notl
loop
testb
das
and
push
das
dec
flds
pop
testl
mov
push
sbb
mov
cmpsl
mov
dec
pop
je
cmpsb
sub
add
leave
cltd
out
push
dec
sbb
inc
test
sahf
dec
xor
mov
push
jmp
popa
mov
mulb
jno
ljmp
es
pop
jl
lret
jecxz
hlt
sarb
addr16
incb
pop
jb
push
lret
add
mov
adc
sub
stc
mov
cmp
adc
xchg
or
mov
scas
int3
xchg
adc
mov
sbb
jae
aam
inc
decl
and
push
mov
cmp
jo
push
sahf
pop
jne
mov
mov
cli
sub
dec
call
out
sahf
ljmp
ret
cmp
pop
ret
rcl
daa
nop
andl
cli
push
dec
inc
je
divl
and
mov
lret
dec
out
xchg
sbb
pop
call
repz
cmp
aas
adc
lods
out
add
rorl
jle
lds
and
jp
xlat
push
mov
cmpsb
lahf
roll
pop
mov
and
jae
repnz
ret
jmp
test
push
daa
sub
and
call
push
into
imul
mov
fnsetpm(287
mov
repz
test
mov
popa
mov
lret
iret
mov
insl
add
adc
and
or
bound
mov
aam
stc
push
mov
push
xchg
inc
test
leave
adc
adc
sqrtps
xlat
cmp
mov
xor
push
or
inc
mov
cmpb
mov
aad
les
frstor
imul
push
test
jae
lret
lods
jmp
dec
cmpsl
jne
sub
push
xor
loope
cmp
scas
mov
fists
scas
jge
jne
bound
add
jns
movb
jae
mov
push
hlt
mov
push
fst
out
ret
rcrl
push
mov
ja
rorb
in
jmp
adc
dec
or
cmp
xchg
mov
xchg
pop
push
mov
lret
inc
inc
inc
and
insb
cmp
stos
dec
push
mov
xchg
xlat
ficompl
stc
mov
xor
call
insl
test
jo
jle
and
shl
aas
mov
push
popf
adc
mov
inc
mov
add
mov
arpl
cmpb
xchg
subl
cld
loop
add
pop
jbe
mov
add
mov
enter
mov
jne
in
fisubrs
scas
jmp
bswap
mov
inc
and
js
in
add
jle
loope
xor
gs
xor
sti
movb
fs
int3
cmp
dec
add
cltd
in
mov
pop
inc
xor
aam
cmp
and
add
cmp
mov
mov
dec
mov
pusha
and
sub
xor
je
xlat
push
test
sbb
mov
pop
push
ss
inc
clc
loopne
fsubrl
mov
jo
push
imul
aas
push
inc
out
mov
lods
add
mov
mov
add
xor
mov
fs
mov
clc
lahf
out
fsubrl
arpl
and
stos
fs
hlt
inc
daa
ja
bound
rorl
mov
and
push
sbbl
mov
icebp
sbb
fisubrl
rolb
aam
into
enter
jge
addr16
fsubl
push
mov
add
or
arpl
notb
scas
lods
mov
pop
jmp
sbb
shlb
mov
shrb
sub
push
mov
fstps
push
test
push
shll
xchg
ja
xchg
nop
push
aam
xchg
xor
jno
mov
mov
jno
adc
pop
mov
jp
jp
jp
cmp
leave
add
movsl
mov
pushf
jp
iret
sbb
lods
cs
cmp
ja
xor
jns
movsl
lret
add
cmp
mov
data16
enter
xor
icebp
outsl
into
f2xm1
pop
xchg
sbb
stos
jns
int3
inc
cmp
int
mov
sub
pop
push
sarb
pop
jo
add
fs
jecxz
inc
std
sbb
inc
mov
mov
pop
stos
add
mov
out
lds
dec
xchg
pop
out
out
sbb
lret
mov
andb
or
pop
cmpsb
gs
jbe
and
cltd
xchg
adc
aaa
insb
add
xchg
fs
jl
add
cmc
jmp
jp
stc
call
adc
cltd
in
shrl
cs
inc
and
in
mov
push
stos
mov
adcb
inc
push
movsl
out
js
pop
decl
std
dec
pop
adc
inc
inc
ret
inc
scas
xchg
sbb
mov
jmp
mov
fs
push
les
sbb
lods
inc
imul
jle
pusha
lret
fdivrs
stos
pop
or
inc
into
ss
xor
fs
xchg
xor
roll
lock
rcll
push
mov
mov
jo
xor
sbbl
cld
nop
pusha
xor
push
out
and
sar
cmp
outsb
mov
cwtl
subb
rcll
sarb
jbe
sub
mov
jb
push
fadds
stos
jl
inc
jns
sbb
inc
xchg
xor
in
push
enter
mov
ret
mov
jge
repz
rcrl
mov
lods
xchg
std
adc
clc
inc
pop
fdivrl
mov
outsl
xor
iret
leave
inc
cmp
rorl
aaa
sti
addr16
mov
lock
sub
shl
inc
mov
cmp
lcall
xchg
inc
test
fisubrs
push
mov
rcrl
mov
dec
enter
ljmp
arpl
jne
xor
mov
psubw
out
dec
and
cmc
push
lcall
fscale
add
fsubrp
mov
rolb
inc
sbb
stc
aaa
dec
out
out
fsubp
lea
adc
add
ret
sbbl
getsec
dec
jg
xor
sbbl
pop
fisubl
sahf
pusha
lods
inc
pop
ret
imul
mov
out
lcall
stc
fwait
mov
ret
add
pop
in
mov
je
push
dec
fisubrs
je
mov
adc
sbb
loope
inc
inc
jb
push
push
inc
out
add
shl
cmp
cmp
pop
inc
mov
dec
xchg
sbbl
adc
lea
mov
mov
sbb
rcll
cmp
and
mov
mov
dec
fsubp
mov
jo
jbe
imul
dec
jae
mov
push
in
enter
xchg
dec
pop
nop
ljmp
xor
cmp
pusha
add
subb
sub
rorb
and
loop
nop
sub
pushf
mov
dec
pop
xchg
in
push
fstpl
pusha
in
fcompl
clc
add
xchg
jg
sbb
aam
add
std
test
add
ljmp
inc
jns
test
sahf
mov
push
mov
sbb
mov
call
ss
js
scas
sarb
pop
push
xor
test
lret
imul
in
shlb
inc
pushf
add
inc
mov
push
loopne
xchg
movsl
pushf
dec
push
lock
push
bound
test
and
stos
shrb
cmp
add
xor
jg
mov
stos
or
mov
sub
push
jae
fldenv
mov
test
push
je
movsb
add
sbb
ret
xor
sbb
and
jo
xor
das
iret
dec
push
pop
sub
loopne
mov
push
lods
push
mov
sti
jnp
sbb
in
mov
leave
dec
and
faddp
mov
xchg
pushf
push
into
jns
arpl
and
sub
fistl
out
add
xchg
arpl
pusha
or
insb
orl
test
dec
imul
jl
das
enter
push
fisttpll
fstpt
xor
data16
cmp
cmpsl
sub
gs
stc
es
jo
popf
pop
mov
mov
push
inc
cmpsb
shr
and
push
mov
rclb
lret
sub
jmp
pop
int
dec
leave
mov
lahf
xor
push
hlt
mov
popf
loopne
and
and
sub
xchg
fisttps
test
push
inc
dec
lods
jae
sub
fimuls
in
inc
push
sub
mov
mov
push
gs
jae
pop
cltd
push
test
push
xchg
add
sub
fadds
lahf
sbb
dec
bsf
jno
ret
sub
sbb
pushf
cmp
jmp
inc
frstor
cmp
xor
movsl
or
jecxz
mov
jb
inc
mov
add
aam
aas
sbb
rorb
xlat
sbb
xchg
xchg
fnsave
mov
xlat
xchg
aam
push
adc
jns
xchg
jmp
shll
sub
xchg
mov
leave
ljmp
mov
sbb
push
dec
ds
nop
cmpsb
xor
cmp
pop
mov
inc
ljmp
lahf
cmpsb
je
sub
cld
cmc
push
int
lret
pop
mov
stos
ljmp
fmul
fcomps
add
jbe
pop
pop
inc
in
movsb
aaa
hlt
push
scas
cld
jo
mov
shrl
or
test
in
fcmovnbe
mov
xorl
push
std
inc
mov
sbb
cld
cs
jne
push
cmp
xor
in
sub
lahf
jb
stc
lea
subb
pop
test
adc
scas
and
push
push
push
nop
add
fnsave
lods
inc
push
xor
pop
js
test
mov
xchg
iret
flds
sub
movsl
pop
orb
pop
inc
dec
stos
lds
mov
push
inc
leave
nop
inc
xchg
scas
sub
mov
dec
ficoms
es
sahf
cmpsb
push
inc
jns
cmp
jmp
in
cmp
lret
cmp
sbb
loopne
sbb
push
adc
sbb
es
push
iret
fisubrs
cmc
pushf
stc
insb
dec
movsb
and
push
mov
nop
cmp
adc
sub
inc
imul
mov
mov
sahf
push
jg
fimuls
mov
push
jl
cwtl
jae
mov
and
insb
mov
dec
xlat
bound
cs
movl
loope
fistl
push
aam
sub
add
loop
jmp
fcmovb
mov
test
push
pop
cmpsl
leave
cmpl
mov
lcall
or
add
popf
mov
and
adc
cmp
jne
mov
sbb
sub
rcrb
lcall
js
and
stos
sub
lods
jmp
out
adc
data16
pop
cmpl
ss
or
inc
lret
pop
xlat
jmp
cld
imul
sbb
aaa
jmp
hlt
cmp
sub
in
cmc
push
cmp
outsl
cltd
orb
push
jge
test
or
lds
adc
add
cmp
sbb
pop
add
outsl
ror
ja
mov
insl
in
enter
xchg
mov
add
test
cmp
and
mov
add
push
orb
adcl
sub
push
leave
xor
push
shl
mov
movb
stos
imul
pop
xchg
lds
std
xchg
pop
out
or
and
add
mov
lods
xchg
push
sahf
dec
push
cmp
push
or
jb
gs
into
les
jne
ds
lcall
popf
insb
cld
mov
xor
pop
cmpsb
add
fs
or
cmpsb
or
mov
in
outsl
pop
imul
and
sub
jnp
rol
insb
test
cmp
mov
test
pop
mov
inc
insb
sbb
mov
addb
jg
outsb
jge
iret
cmp
lock
inc
cmp
loop
jnp
and
sub
mov
cmp
sbb
push
sbb
int
sbb
xchg
ret
aad
push
xor
adc
jl
jb
lahf
imul
pop
fidivl
addr16
mov
jle
aas
sbbb
mov
movsb
mov
fwait
jns
sti
jl
push
cld
add
pop
pop
or
sub
fcompl
leave
cld
insl
and
jno
xchg
xor
xchg
cld
fiadds
lods
mov
add
xlat
test
out
fs
mov
push
mov
fnstcw
in
pop
mov
negb
inc
das
xor
mov
mov
cmp
dec
pop
and
add
jmp
push
clc
shrb
decb
daa
aaa
loop
pusha
inc
adc
adc
pusha
xchg
xlat
push
mov
mov
in
lret
clc
mov
movsb
xor
mov
dec
lods
cwtl
mov
inc
jb
or
xor
push
aaa
sbb
mov
sbb
mov
jo
out
mov
imul
cmc
push
rcl
jmp
imul
xchg
sbb
push
subl
pop
inc
cmc
insb
test
aaa
fs
fcoml
mov
sbb
and
inc
cmc
cmp
or
cmp
sub
mov
test
in
inc
enter
incl
xor
out
xchg
int
adc
xchg
pop
adc
and
push
cmpsb
ja
sbb
dec
adc
push
xor
or
test
testl
cmp
dec
lret
imul
outsl
aam
adc
mov
or
ror
dec
cli
cwtl
cmp
sbb
iret
sahf
pop
add
push
sub
ret
or
dec
jp
divl
cmc
mov
test
sbb
in
fisubs
jle
add
xchg
inc
nop
push
mov
push
cmp
xor
loope
je
hlt
out
or
es
dec
test
add
dec
inc
or
test
adc
mov
jns
mov
push
and
inc
mov
pop
mov
cmc
adc
das
adc
lret
adc
jp
push
pop
fs
or
insl
mov
mov
jns
mov
dec
fsubrs
test
idivl
loop
and
push
hlt
leave
shrl
push
mov
rcll
data16
sbb
or
push
xchg
test
outsb
movsl
addl
and
xor
incl
out
sbb
imul
imul
sbb
push
xchg
and
adc
rclb
mov
hlt
sbb
mov
outsl
sub
popa
hlt
sbb
scas
adcl
loop
cmc
mov
repz
pop
das
clc
popf
jnp
sahf
or
jmp
mov
cmp
mov
add
xchg
xor
dec
dec
cmpb
push
daa
adc
add
jo
fldcw
jle
mov
mov
jb
test
inc
dec
xchg
mov
std
jno
sarb
or
sbb
js
jmp
push
jno
lods
cwtl
repz
sahf
cli
int
mov
xchg
stos
pop
aas
mov
push
icebp
aaa
push
push
popf
cltd
xor
sbb
mov
pop
sbb
xchg
mov
dec
jl
pop
cmp
push
pop
outsl
dec
test
sub
stos
shll
out
mull
sahf
dec
sbb
jno
jp
ljmp
mov
xor
add
clc
adcl
call
dec
or
int
mov
mov
js
lea
adc
sub
push
push
mov
rorl
leave
test
gs
cld
sub
in
adc
push
pop
pop
mov
push
lods
call
daa
imul
or
push
cmpsl
outsl
push
mov
rcr
fdivrs
jbe
push
mov
test
cmp
and
sbb
dec
push
push
push
mov
pop
push
iret
bound
lea
mov
sub
lock
test
vpsrad
out
lods
mov
lock
movsb
arpl
adcl
shl
inc
adc
pop
dec
movsb
ja
call
movsl
xchg
inc
mov
shlb
sbb
lahf
lods
lret
lods
mov
in
aad
adc
repnz
mov
ficomps
mov
pop
jecxz
jle
lds
mov
xor
enter
ss
cltd
sbb
adc
mov
scas
nopl
cmp
ret
push
aas
xor
es
sbb
cmp
mov
or
call
mov
sbb
xchg
push
and
cli
cmpsl
lret
cli
mov
xchg
adc
test
xor
cmp
repnz
cmp
sub
je
popf
jo
jo
xchg
adc
sarl
pusha
inc
sbbb
push
rcr
lods
int
and
cmp
mov
xorl
fwait
mov
aad
icebp
mov
xchg
mov
sub
inc
cmpb
sub
data16
push
mov
int3
sub
sub
lcall
test
xor
pop
popf
adc
pop
ret
sub
aam
aam
push
ret
mov
movsl
jecxz
xchg
cmp
sbb
and
outsb
and
in
stos
push
dec
stos
mov
push
cmp
pop
filds
add
pop
in
cli
clc
fwait
outsl
or
cmp
push
sbb
mov
jge
jmp
aas
sub
mov
inc
sbb
jle
mov
push
incb
xchg
pop
jl
mov
int3
and
dec
dec
xchg
cltd
mov
pop
das
fwait
pop
inc
jno
and
sub
sub
dec
mov
add
inc
stc
xlat
mov
xchg
xor
mov
out
popf
add
std
dec
jo
add
test
inc
movsl
cmpsl
mov
outsl
in
adc
test
mov
xor
test
bound
pop
pop
mov
sarl
leave
lods
popa
fdivrl
leave
stc
call
mov
scas
mov
std
or
push
and
jo
mov
and
mov
push
ret
jnp
pop
jle
aam
movsl
ljmpw
cmp
scas
mov
dec
mov
jbe
sbb
and
jg
test
fistps
pusha
pop
cmp
sub
add
xchg
cltd
out
xchg
es
or
ret
cmpsl
out
out
stos
adc
rol
stc
sub
push
cmp
sbb
mov
into
xlat
mov
jns
or
or
lret
mov
sbb
stc
push
enter
test
insb
pop
int3
negl
xor
dec
push
outsl
mov
aaa
jae
cmp
loop
push
or
mov
pop
jbe
ljmp
and
lret
std
out
lea
pop
push
cmp
fldcw
pop
dec
popf
in
add
test
xchg
aaa
mov
scas
cs
lods
mov
push
into
or
cmpsl
xchg
push
arpl
xor
cmp
cmp
stos
cmp
cmp
rolb
mov
cmc
lcall
mov
pop
jmp
lods
lret
mov
jmp
int
xchg
pop
inc
shrl
xchg
into
inc
leave
adc
mov
and
mov
jle
sub
cmp
and
adc
inc
shrl
lds
dec
enter
popf
mov
dec
add
pop
arpl
cmp
jge
out
adc
push
out
in
and
cwtl
fsub
fcmovu
out
insl
xchg
je
loopne
mull
fidivs
pop
popa
out
adcl
loop
mov
out
repz
jecxz
cmp
or
sarb
cmp
xchg
scas
or
xlat
push
fs
inc
add
mov
inc
data16
leave
push
out
mov
pop
mov
add
jmp
bound
movsl
insb
sub
xchg
xchg
popf
jmp
add
sbb
aaa
mov
insl
notb
push
xchg
push
jnp
rorb
or
imul
negl
sbb
jge
push
inc
push
movsl
cmp
jle
cmpsl
jle
fstl
movsb
pop
xchg
or
into
inc
mov
xchg
pop
push
fdivrs
pop
cmc
leave
jle
insb
add
adc
andb
jl
daa
lds
pop
out
pop
stc
outsl
test
adc
pop
cmp
cwtl
jae
inc
xlat
sub
mov
sbb
xor
sbb
movsb
sub
inc
mov
jo
out
inc
cld
pop
out
ret
cli
or
pop
sbb
sub
jae
rclb
int
jns
orl
out
arpl
loopne
sbb
das
mov
mov
xor
fs
and
inc
rcll
push
adc
jns
lret
add
xchg
dec
cmc
imul
movsl
lds
int3
and
enter
push
xchg
pop
sub
add
aaa
xchg
push
pop
rclb
shrb
mov
dec
push
mov
cltd
clc
push
mov
dec
mov
mov
les
mov
cmp
testl
jg
es
sub
aad
jmp
xor
icebp
xchg
adc
mov
pushl
movsb
inc
pop
inc
sbb
leave
push
call
mov
int
js
loop
int
enter
mov
mov
pop
inc
enter
loope
jp
and
decb
dec
and
cmp
mov
jb
jl
push
mov
dec
or
leave
ret
outsl
loop
and
inc
jae
mull
add
lods
xchg
sub
or
lret
xchg
jl
fcoml
or
inc
push
frstor
rorl
int
mov
jne
jne,pn
inc
cmpsl
addr16
inc
cmp
sbb
inc
push
rorb
xor
popf
dec
outsl
mov
shrb
mov
or
test
push
cwtl
mov
mov
test
sti
imul
aaa
sarl
dec
pop
jae
sub
dec
jbe
lods
jg
lcall
testb
push
testl
daa
fstpl
pop
stc
in
jge
ja
jecxz
jmp
mov
cmp
mov
andl
dec
loop
enter
mov
addb
adc
or
clc
sbb
iret
es
loopne
cmpsb
dec
pop
mov
cli
xor
mov
mov
sub
cli
xchg
mov
jne
pcmpgtd
push
out
aaa
inc
mov
call
adc
push
xlat
je
testb
xchg
je
jns
mov
lahf
fists
dec
adc
pop
inc
jno
and
push
movsl
in
aam
jnp
int3
icebp
lret
mov
cltd
xor
cmp
jle
hlt
insl
cmc
xchg
dec
out
shlb
ljmp
pop
sqrtps
shl
mov
sarb
out
inc
inc
dec
inc
cwtl
push
adc
sub
push
pushf
mov
sbb
push
dec
les
push
decl
fsub
arpl
mov
push
nop
into
xlat
dec
aam
mov
dec
stos
adc
das
in
inc
je
dec
sbb
jge
jmp
jg
call
cmpsb
mov
add
jg
aad
in
jbe
push
cmp
jge
adc
mov
or
jb
or
xchg
aas
int3
and
pusha
and
add
ret
pop
dec
lds
fsincos
mov
imulb
dec
stos
xchg
rclb
inc
iret
fisubrl
inc
or
mov
ror
je
repz
mov
mov
mov
orb
mov
scas
jecxz
movb
pop
and
gs
data16
inc
xchg
sbb
addr16
xchg
aam
push
adc
addb
jb
xor
push
cmp
mov
movsl
push
mov
ret
out
lock
out
outsl
dec
jg
jmp
pop
data16
idiv
call
dec
fisttpl
ret
inc
jmp
subl
and
push
mov
gs
mulb
jg
dec
and
xor
idiv
js
push
mov
cmpl
mov
mov
inc
loope
adc
mov
imul
pushf
ljmp
push
std
jno
inc
lods
in
add
xor
fwait
xchg
and
imul
insb
lret
scas
pusha
fmuls
out
sub
les
xchg
aaa
in
adc
ljmp
push
aas
fs
xchg
push
dec
aam
cmp
test
cwtl
jne
mov
or
mov
aaa
clc
pop
lcall
jp
repz
ds
mov
clc
add
enter
dec
push
push
jb
mov
lods
addr16
xchg
xor
jns
mov
js
pop
je
cmp
xchg
xor
into
dec
imul
fidivrl
inc
ficomps
jbe
push
mov
out
das
les
push
faddl
rdpmc
mov
hlt
sbb
les
lea
push
movsb
cmp
addb
call
out
das
aas
in
xchg
mov
pop
sbb
push
cmp
xlat
mov
lds
xor
and
popf
jge
imull
push
xchg
imul
fcmove
sub
fs
lret
pop
inc
push
je
and
mov
filds
xor
jecxz
dec
hlt
outsb
or
pop
cmovns
into
in
or
hlt
test
in
cmc
lret
mov
ret
or
lcall
adc
addr16
insl
dec
int
add
inc
mov
add
ret
push
int3
dec
adc
pop
aam
stc
scas
jl
bound
cmp
leavew
mov
push
xor
inc
sbb
popf
imul
sub
in
xor
xlat
rolb
add
inc
sti
mov
scas
sub
xlat
mov
pop
aas
std
es
out
out
and
mov
cmp
popf
test
and
je
nop
mov
and
cmpsl
bnd
movsb
ror
dec
subb
add
shll
movsb
xchg
in
sbb
mov
mov
scas
jp
mov
fnstsw
push
hlt
cli
pop
inc
jo
mov
mov
mov
add
imul
cmp
loope
out
or
sarb
inc
push
push
xchg
inc
shlb
negb
cmpsl
in
outsl
pop
popa
pusha
lea
loope
add
dec
fisubs
lea
pop
subl
lds
sub
inc
and
mov
sub
dec
dec
iret
sar
mov
xor
adc
jmp
pop
test
dec
sub
arpl
mov
push
scas
sbb
jnp
lock
test
inc
mov
or
mov
cmp
mov
clc
jg
pop
fidivrl
out
mov
lret
add
fucom
jne
add
fisubrs
outsb
fstpl
or
pop
cli
dec
icebp
push
sbb
push
enter
mov
in
out
push
sbbl
dec
mov
xchg
imul
inc
ss
push
loope
and
inc
pop
imulb
fsub
sub
jne
jne
xor
pop
cmp
sbb
movsl
dec
pop
and
mov
idivb
ja
push
aaa
pop
enter
pop
lods
imul
mov
gs
flds
jne
insb
ds
or
fildl
mov
fistpll
dec
mov
sbb
in
pop
adc
pop
push
stos
les
jge
cld
ret
jmp
jb
test
fs
sarl
sbb
adc
add
decb
movsb
les
out
sbb
sub
out
stc
scas
ds
add
sbb
pop
jecxz
movsb
cmp
cltd
sbb
sub
mov
sub
add
adc
lahf
ja
sbb
fdivl
outsb
mov
xor
dec
iret
inc
jle
unpckhps
fcmovnb
shr
out
in
out
push
mov
sar
popf
in
push
icebp
inc
and
push
inc
jo
stc
push
sub
jb
sahf
inc
hlt
inc
stc
mov
sahf
jle
andl
insb
pop
and
mov
data16
adc
insl
add
les
add
push
inc
inc
adc
or
cli
push
pop
dec
nop
fbstp
shrl
dec
xchg
cmp
test
sbb
decb
fmull
lahf
movsb
clc
lock
aam
lds
int3
and
mov
or
test
xor
clc
int
push
into
sahf
or
movsl
mov
test
or
popa
cmp
jp
xlat
mov
cmp
out
dec
out
cmp
sarb
icebp
inc
mulb
xchg
mov
and
cmp
fcoml
inc
xchg
cmc
insl
push
outsb
pop
dec
xlat
inc
push
mov
inc
jp
std
clc
sub
gs
or
mov
inc
cmp
cmp
mov
add
xchg
nop
stos
pop
mov
test
or
ljmp
sar
cmpsl
mov
push
lods
xchg
lcall
popl
shll
stc
fisubrs
sbb
push
mov
mov
into
mov
and
add
push
cli
mov
add
sbb
aas
cs
inc
sub
fwait
sub
add
sbb
icebp
pop
push
mov
pop
sub
lds
adc
cmp
in
aas
lret
pusha
dec
xor
mov
push
movsb
push
adc
pop
aaa
imul
sbb
cltd
popf
pop
inc
pop
leave
xlat
or
sbb
jecxz
dec
cld
xchg
out
jmp
jge
mov
in
loopne
test
mov
xorb
pop
lods
iret
xchg
pop
sbb
jp
mov
sti
enter
sbbl
repz
or
or
pop
dec
push
mov
add
mov
imul
rolb
fs
ljmp
and
stos
sbb
xor
dec
aad
xchg
and
addr16
add
mov
push
je
std
jae
pop
xor
xchg
aad
cld
xchg
add
push
aam
out
jp
adcl
jnp
mov
mov
adc
adcb
sbb
jge
xchg
jp
pop
cmp
push
or
bound
mov
push
adc
test
xor
xchg
in
test
aad
je
inc
ja
sbb
pmaxub
sub
xor
push
ss
stos
rcrl
arpl
loope
mov
inc
push
xor
xor
je
inc
idivl
repz
cmp
cmp
or
xor
xor
mulb
adc
jge
jne
mov
push
dec
inc
push
sahf
nop
out
mov
push
loop
out
scas
fsubs
or
dec
jbe
xor
push
stos
repnz
push
dec
xchg
arpl
test
iret
sbb
repz
sbb
sti
xor
xchg
repz
cmc
scas
aaa
lock
negl
push
xor
insl
jle
and
daa
shll
icebp
cli
xor
dec
outsb
mov
pop
fmull
clc
jnp
adc
dec
out
or
ret
mov
sbb
sbbl
insb
inc
mov
cli
arpl
mov
movsb
outsl
xchg
lahf
jno
add
test
js
xchg
stos
insl
jge
adcl
push
xor
ljmp
cmp
jmp
into
out
ficoms
jnp
cs
sub
mov
lret
shrl
push
fcomip
out
repnz
sbb
xchg
and
fimuls
or
sub
mov
fmull
sbb
in
sub
sub
dec
sub
or
loop
aaa
repz
das
cmp
mov
cltd
js
jg
push
cmp
pop
je
dec
lret
stos
pop
sub
insl
inc
int
fsubrs
jno
movsl
mov
push
je
adc
cmpsb
repz
adc
jno
inc
inc
fdivs
cmp
in
das
pop
or
arpl
mov
daa
xchg
pop
test
push
lcall
mov
lret
mov
mov
jne
lcall
sahf
daa
push
mov
test
jge
loop
cmp
ds
test
jae
dec
fcmovne
sahf
int
aas
pslld
mov
pop
cmp
mov
jo
inc
xor
iret
cmp
pop
les
pop
pop
adc
pop
sahf
icebp
pop
icebp
push
dec
adcb
stos
dec
sbb
adc
test
pop
push
bound
mov
add
cmc
sub
mov
adc
sarb
mov
adc
daa
int
loop
jle
leave
sub
mov
pop
loopne
mov
ret
inc
mov
rcrl
sbbl
out
xchg
mov
add
push
bound
sbb
lea
movl
in
leave
mov
test
xchg
jmp
xor
cwtl
lret
mov
and
sarb
mov
jmp
jle
cmpsl
call
or
sbb
cmp
dec
iret
stc
adc
pop
fs
fcompl
mov
sub
jno
ficoml
movsb
adc
stc
add
dec
push
cmpsl
adc
mov
in
fwait
jl
mov
mov
xchg
add
insb
sbb
mov
lret
and
or
aas
mov
aad
xchg
pop
fmul
or
xor
cmp
jbe
fiadds
xchg
out
shlb
pushf
pop
mov
pushf
cwtl
hlt
shl
mov
mov
sbb
push
sti
sti
or
sahf
push
mov
call
lahf
cld
jb
adc
add
and
popa
xlat
xchg
ss
ret
out
sbb
xor
add
int3
sub
mull
aad
lock
jb
loope
mov
jo
ja
pop
lahf
push
int
sub
test
mov
loop
sub
mov
pop
mov
adc
subl
stc
daa
mov
fmull
mov
scas
cmp
xchg
jb
xor
arpl
movsb
and
sub
mov
sub
mov
jbe
xor
add
out
test
lcall
stc
pop
or
cli
push
orl
jle
in
jno
xchg
dec
out
cmp
inc
sbb
lret
push
add
xor
aam
mov
imul
icebp
jb
cmp
inc
sbb
cli
push
sti
mov
rolb
adc
cli
lret
std
and
lock
popa
cwtl
nop
xor
sbb
call
std
xor
lds
std
iret
push
aas
enter
pop
or
es
in
dec
jbe
test
and
scas
mov
fisubrs
cmp
packuswb
sbb
in
lcall
clc
mov
js
cmpsb
cld
bnd
clc
lods
jecxz
dec
aas
lcall
aaa
sahf
lea
inc
push
pop
orl
dec
fbld
push
loopne
aam
cmp
lret
jle
data16
in
es
or
ds
testl
and
and
xchg
pop
inc
bound
pop
push
push
rcrb
loope
rclb
cmc
data16
add
incl
mov
jno
jne,pn
xor
out
nop
xor
or
lcall
outsl
sbb
xchg
stos
imul
inc
scas
stos
xorb
sbb
imul
jne
cwtl
ljmp
mov
lea
ficoms
fsts
dec
lds
add
inc
mov
jge
shll
insb
sbb
jne
shll
cmp
add
decb
jp
add
iret
jbe
or
or
loop
sub
and
dec
pushf
mov
jne
and
scas
push
js
pop
jg
mov
imul
jp
ret
xor
repnz
or
mov
scas
dec
mov
out
fdivrp
cwtl
in
repnz
in
inc
sarl
and
jg
mov
push
js
out
jbe
xchg
mov
mov
sbb
add
xor
sbb
test
jnp
lret
data16
ljmp
xchg
or
mov
popa
dec
js
icebp
jne
or
push
and
cltd
enter
xchg
cwtl
cmpsb
cs
xchg
bnd
mov
loope
repnz
sub
lods
jbe
stc
repz
push
frstor
shll
scas
popf
jl
cltd
inc
in
enter
ja
or
jge
pop
inc
roll
pop
dec
dec
inc
cltd
xchg
add
add
hlt
lods
mov
rol
jle
jne
push
xchg
sub
inc
mov
repnz
fiaddl
dec
int3
stos
sbb
movsb
add
or
push
dec
fidivrl
cmp
pusha
sarl
insl
mov
shll
sbb
or
mov
lret
les
or
sub
lods
cltd
dec
sbb
and
jno
sbb
sarb
pop
cs
fcmovnu
cld
lods
ljmp
pop
push
gs
jl
in
in
test
stos
sub
sub
pop
in
sbb
lds
fdivr
jo
sbbb
jbe
fldenv
stc
dec
push
xchg
mov
mov
mov
adc
jg
mov
popa
incl
mov
inc
or
fcoml
lods
cs
cmp
dec
mov
in
jo
dec
divb
xchg
inc
mov
jmp
jae
out
push
scas
jle
cmp
loopne
aam
push
sbb
add
movq
xor
push
cmp
xor
adc
dec
or
mov
mov
inc
cli
lods
sub
mov
imul
out
jb
adc
cli
arpl
pop
mov
ss
cltd
imul
and
inc
xchg
push
popf
mov
imul
mov
mov
sbb
cmpsl
jae
push
sub
push
and
jbe
ret
imul
imul
xor
test
in
adcl
ret
bnd
fsubs
lret
jo
mov
sbb
xor
outsb
push
pop
rolb
xlat
dec
popa
xor
mov
jmp
dec
sbb
pop
mov
sbb
test
shrl
and
rol
shlb
in
jb
sti
or
cmp
lock
xor
inc
test
adc
pop
es
loop
shlb
cs
les
out
insl
mov
mov
loopne
hlt
sub
push
ja
sbb
xlat
push
popa
sub
pusha
mov
int
fs
and
fistpll
mov
mov
pop
mov
sti
push
lds
pop
mov
ret
push
adc
leave
adcb
fisubl
cmp
adc
and
xchg
jno
lock
mov
jo
mov
inc
xchg
dec
push
shrb
xor
popa
mov
and
lret
inc
cwtl
cld
test
mov
enter
cmp
or
hlt
dec
push
in
in
or
inc
popf
mov
fsubrl
pushf
dec
xor
cmp
or
test
sub
mov
jmp
mov
mov
mov
jmp
adc
jg
xor
add
cwtl
jo
cmc
sbb
pop
adc
dec
jecxz
in
xchg
bound
mov
ret
mov
sbb
add
sub
inc
in
pop
or
push
or
adc
test
ds
addl
sbb
sbb
cmp
push
shll
inc
sahf
stc
xor
mov
mov
jnp
std
xorb
andb
mov
pop
mov
movsb
pop
icebp
ret
aaa
push
push
out
xchg
xor
in
enter
loop
ret
das
mov
jae
jnp
dec
in
ret
outsl
push
loope
mov
mov
std
pop
jp
xchg
jno
cmp
sub
jo
fcmovnbe
mov
hlt
clc
pop
shr
frstor
mulb
xchg
pop
push
push
out
lcall
dec
cld
xchg
dec
or
xchg
repz
jne
and
std
jb
cmp
es
xchg
dec
ret
xchg
or
lcall
in
mov
xchg
loope
into
stos
push
neg
push
mov
call
push
or
fisubrl
and
mov
insb
jo
loopne
mov
mov
movsl
cltd
daa
pop
dec
test
xchg
loope
push
xchg
add
mov
pop
dec
aad
and
mov
xchg
lea
mov
jns
dec
divb
or
bound
jne
push
clc
orl
xlat
daa
jno
pusha
out
xor
cmc
jb
and
push
dec
xorl
iret
sbb
inc
cmp
out
lret
scas
sub
xor
popa
adc
xor
jmp
jae
adc
mov
sahf
add
adc
cmp
or
cli
lods
xchg
adc
xchg
sub
jp
ret
ret
and
dec
pop
jmp
cltd
mov
dec
add
mov
inc
inc
outsb
loopne
pop
dec
push
adc
jmp
pop
insl
xchg
lret
loope
ret
and
push
addl
jb
add
cld
lea
push
std
jbe
outsl
pop
push
mov
in
lret
push
adc
fs
loopne
jns
mov
or
aam
mov
push
pop
leave
push
mov
rclb
or
jae
popa
rclb
inc
jno
jnp
ficompl
mov
lret
jno
in
int
notl
mov
aaa
lret
mov
in
xorb
cs
pop
int
fsts
adc
pop
repz
cmp
fsubl
scas
addr16
mov
cli
lea
fldcw
ret
jmp
lods
sar
xor
xchg
fimull
jno
mov
sub
ficoml
pop
jne
ljmp
leave
fadd
dec
xor
in
mov
pop
adc
and
xor
rclb
pop
add
insl
push
stos
adc
rclb
fcmovnb
mov
pop
arpl
push
cmc
in
cs
xchg
add
int
mov
cs
in
dec
push
sbb
lahf
inc
test
fs
push
icebp
mov
sbb
and
loop
or
fwait
dec
push
dec
shr
cld
in
es
sub
mov
pop
xchg
inc
pop
xchg
stos
adc
fimuls
outsl
or
cmc
dec
pop
pop
les
add
xchg
test
mov
gs
test
pop
and
daa
popa
mov
loop
add
repnz
sbb
pop
jl
or
push
out
pand
out
lock
push
imul
push
das
scas
cwtl
inc
test
pop
ljmp
jne
pop
cmpsl
mov
add
in
jbe
rol
scas
fisubrl
mov
pushf
aad
rorl
or
sbb
cmp
mov
push
inc
ja
xchg
es
ds
xor
fcomps
xchg
in
inc
call
les
cmp
nop
xorb
out
xor
imul
loop
addr16
call
icebp
add
push
shl
mov
or
cmp
or
pop
sub
popa
pop
and
push
std
aam
insl
xchg
jb
lret
push
out
shlb
outsb
jecxz
lahf
mov
jb
xor
inc
stos
and
xor
aas
add
arpl
loop
jg
scas
mov
push
sub
mov
jno
dec
inc
jg
test
jge
adc
cmp
outsb
jns
popw
sbb
pop
xchg
insl
push
cmc
push
inc
clc
or
xchg
fdivl
pop
or
jmp
loop
repz
lcall
lret
addr16
rorl
movsl
fwait
pusha
lock
sbb
bound
push
jbe
scas
jns
and
repnz
or
insb
mov
jl
dec
nop
mov
loope
cli
sbb
push
iret
sub
stc
rclb
popa
mov
push
pop
iret
mov
lds
sub
lods
mov
out
loop
lahf
and
stos
add
imul
rcr
push
sbb
push
add
cmpsl
push
cmp
pop
jne
out
movsb
xchg
sbb
and
cmp
mov
xor
ja
rorb
mov
mov
nop
mov
xor
sbb
sbb
imul
sbb
add
lods
pmulhuw
jecxz
leave
in
imul
hlt
idivl
ret
push
pushf
sub
sub
pop
sbb
inc
mov
cmp
dec
ds
sub
jge
xchg
cmp
stos
dec
and
push
mov
lret
push
loope
ds
loopne
dec
repz
sbb
and
insb
into
mov
loop
mov
rclb
push
rcrb
das
mov
dec
xor
fisttps
ret
mov
je
ds
xchg
or
ljmp
sahf
sbb
pop
push
fwait
xlat
pusha
call
jne
sarb
push
mov
or
fsts
mov
lods
mov
call
aaa
test
fldenv
mov
cmc
sbb
pop
inc
mov
data16
mov
jp
rcr
mov
mov
add
cltd
cmp
cmp
adc
inc
push
mov
push
sub
xchg
int
les
icebp
lds
lret
insb
inc
daa
notl
jo
push
sub
pop
imul
pop
ljmp
decl
bswap
outsl
loopne
mov
out
clc
test
mov
daa
push
mov
les
test
jno
lock
icebp
fnsave
movsl
pop
cmpsl
adc
pushf
mov
lods
lahf
push
push
test
xorl
clc
enter
mov
pop
adc
xchg
or
scas
call
adcb
pop
arpl
shr
data16
sbb
dec
mov
aad
jge
leave
add
in
pop
int3
dec
push
sbb
push
xchg
xchg
inc
movsb
add
pop
jo
stos
sbb
daa
in
pop
cmp
push
bound
leave
cmpl
loopne
pop
dec
daa
dec
adc
fidivrl
mov
cmp
rcrl
clc
rolb
xchg
in
pop
adc
inc
out
mov
cmp
or
mov
imul
stos
sub
mov
and
js
and
sub
rcl
jb
shrb
mov
xor
dec
jg
cltd
mov
test
inc
mov
out
xor
out
lock
sbb
ficompl
push
test
adc
or
cwtl
out
cmp
jp
dec
fnsave
popl
jns
mov
xor
jmp
nop
sbb
mov
popa
fimull
xchg
in
notb
cmpsb
or
pop
sbb
push
popa
add
sub
sbb
push
loop
mov
shrb
cmc
mov
cmpl
gs
and
sbb
mov
jecxz
xor
mov
gs
dec
les
pop
push
pop
cwtl
mov
int3
cmp
xor
dec
sbb
dec
and
test
push
or
jmp
hlt
jmp
gs
mov
ret
aas
xor
sti
aas
jp
pop
xchg
push
inc
leave
in
cmp
and
xchg
testb
in
cltd
mov
dec
pop
sbb
or
add
pop
lods
push
fidivl
fldenv
call
nop
fxch
inc
out
loopne
pop
sahf
dec
rcll
xchg
lock
pop
pop
in
and
inc
or
dec
push
push
les
aam
cmpsl
push
mov
mov
cmp
mov
dec
mov
xchg
lock
push
loope
out
les
aad
enter
pop
test
cmpsl
divl
repz
fnstcw
outsl
shrl
fidivs
mov
add
sbb
repnz
mov
xchg
adc
mov
test
pushf
fsubrs
mov
icebp
jl
mov
les
aam
push
xchg
xor
aaa
fmull
sub
mov
dec
adc
mov
xchg
repnz
push
pop
in
jl
xlat
push
jle
imul
mov
adc
iret
mov
aaa
push
clc
jns
jmp
push
scas
adc
inc
sbb
inc
jae
pcmpeqd
dec
inc
mov
push
out
sub
mov
and
rolb
movsb
pop
pop
loopne
jnp
xchg
cmp
movsb
loope
mov
lahf
lret
inc
nop
dec
push
xor
dec
dec
inc
adcb
mov
adc
fnsave
xchg
fs
xchg
iret
xchg
push
jns
push
sbb
enter
paddd
aad
xchg
or
sub
mov
inc
xchg
ds
outsb
xor
and
cmpsb
fs
out
or
fcomip
add
mov
jo
xchg
and
add
in
out
cltd
jp
lods
pop
xor
dec
sub
dec
mov
test
xor
out
mov
out
addb
aas
and
push
and
xchg
leave
inc
aaa
cmc
je
rclb
sahf
nop
sbb
lds
mov
mov
arpl
jl
or
or
jl
enter
int
sub
pop
xor
sub
inc
pushf
mov
outsb
stos
fs
and
mov
push
cmp
pushf
dec
jge
push
test
movsb
or
add
lret
sbb
pop
sub
sub
ficoml
push
sub
loopne
push
loop
xor
mov
mov
mov
dec
test
pop
push
insb
xchg
ds
pop
mov
lret
sub
mov
pop
inc
xchg
stos
stos
mov
inc
fidivs
jno
fnsave
aaa
fwait
enter
push
mov
inc
sbb
les
ljmp
push
push
aaa
out
insl
jno
scas
cmp
sbb
or
mov
push
add
and
xor
xchg
in
aas
cmpl
dec
jo
inc
mov
pop
dec
push
aad
stos
dec
push
mov
inc
in
lcall
mov
call
daa
add
out
xchg
fcomps
add
and
cmp
pop
stc
dec
stos
push
std
lods
sbb
ljmp
and
insl
out
sbb
les
ret
dec
cmpsb
nop
lahf
jbe
out
fsubl
fisubl
mov
mov
dec
cmc
push
jmp
ljmp
int3
adc
or
int3
cmp
sti
xor
jnp
inc
xchg
ret
cs
jmp
cmp
jnp
xor
mov
lods
pop
popf
mov
xchg
mov
mov
je
pop
dec
sub
sub
call
loopne
lds
insl
call
xchg
aad
icebp
scas
or
add
mov
dec
mov
out
pop
pop
subb
outsl
loope
rorl
cs
int
std
xor
call
testl
pop
jmp
add
jnp
and
xor
xchg
in
mov
push
add
inc
clc
sbb
sub
cmp
addl
push
aas
call
mov
inc
pop
lret
iret
loop
fwait
push
xchg
fsubrl
cmc
test
icebp
cmp
mov
push
flds
stos
push
or
dec
fs
cmp
cli
mov
or
and
sub
jge
xchg
pop
mov
or
push
inc
mov
cmpsb
iret
pop
or
movsb
scas
add
inc
fs
daa
push
sub
or
frstpm(287
inc
sub
aad
pop
jle
inc
sub
jl
out
les
xchg
inc
rcrb
insl
inc
dec
shll
dec
add
adc
lock
sti
jg
pop
cmp
xchg
adcl
or
xchg
cmp
rcll
jp
jb
adc
pop
int3
add
pop
scas
iret
xor
sarb
mov
mov
icebp
mov
jle
sti
mov
push
mov
push
not
rcll
in
fwait
imul
sub
and
xor
sbb
lods
std
rcrb
ljmp
cmp
aaa
cmp
nop
movsb
cmp
repz
and
xchg
or
sub
fbld
sub
inc
lahf
negb
fadd
into
jnp
inc
fwait
dec
mov
mov
addr16
xchg
mov
ja
cld
leave
movsb
mov
cmp
and
pusha
sahf
sub
or
pop
lock
inc
adc
adc
fdivs
jno
imul
push
jmp
dec
pop
inc
rolb
outsl
fwait
lods
dec
into
cmpsb
cs
mov
inc
nop
ret
pop
popl
mov
int3
out
dec
and
mov
pop
sub
and
int3
aad
cs
stc
ret
cmpsl
out
add
mov
iret
dec
jecxz
lods
mov
out
push
jecxz
cmpsl
pop
xor
ret
mov
mov
scas
inc
icebp
bound
jae
jnp
dec
arpl
jg
dec
inc
jae
mov
push
jmp
into
sahf
movsl
nop
adc
cmp
inc
push
iret
enter
loope
pop
sbb
sahf
mov
jp
adc
lea
mov
cli
in
stos
cmc
jge
data16
fwait
jno
push
inc
inc
push
stc
icebp
popf
ja
fbstp
nop
fnstcw
jle
inc
cmp
ss
je
mov
xchg
lods
add
sahf
dec
sti
inc
dec
mov
mov
movsl
cmp
pop
push
xchg
sub
fisttpll
cmp
aam
push
movsl
outsl
jno
push
xchg
jnp
push
mov
arpl
sti
pop
jb
lock
push
fcmove
test
inc
adc
push
cmpl
or
pushf
aam
sbbb
je
bound
lock
and
stc
adc
xchg
jecxz
inc
or
push
pushf
lods
lods
test
fs
icebp
leave
call
nop
and
sub
cli
popa
repz
adc
cmc
outsl
fcmovb
mov
int
jge
xchg
fistps
lea
pop
mov
cltd
jle
dec
cmp
mov
lea
sahf
jmp
mov
jmp
pop
push
orl
rcrb
jp
mov
ss
push
pop
inc
fcoml
cmc
jle
enter
dec
mov
add
popa
cmp
push
jae
dec
mov
jge
loope
xchg
mov
adc
mov
sub
enter
aaa
aas
into
mov
lock
lds
mov
sub
into
mov
das
mov
push
or
inc
cmp
jb
xor
add
scas
bound
out
mov
jbe
je
mov
outsb
out
ret
or
in
push
or
mov
cmp
and
jne
adc
in
cld
repnz
dec
cld
loop,pt
mov
mov
and
jecxz
xchg
out
movsb
lahf
insb
movsl
push
mov
mov
rcrl
inc
dec
lcall
cld
mov
inc
aas
sub
test
fnsave
je
jo
clc
ficoms
inc
adc
mov
push
fmuls
fisttpl
jecxz
sub
push
add
out
dec
leave
test
enter
loopne
and
adc
lock
fwait
cmpsl
popa
fsubl
cmp
repnz
fimull
in
icebp
arpl
outsl
sub
fimuls
lods
sub
inc
nop
mov
sbb
sahf
push
scas
cmc
adc
jnp
movsl
fisubrl
add
fstps
cmpsl
sbb
sbb
aam
cmpsb
sub
jmp
mov
xchg
add
mov
aas
pop
fwait
or
pop
nop
push
ja
sub
dec
pop
mov
mov
mov
aad
scas
dec
aas
loopne
hlt
test
add
dec
adc
lds
push
pushf
xchg
adc
adc
popa
insb
dec
jp
sti
sahf
sbb
push
xor
pop
punpcklwd
sbb
aas
lahf
les
adc
pop
arpl
aaa
push
xlat
push
push
cld
shll
mov
cmp
rol
fbld
xor
mov
insl
cmp
pop
push
pop
mov
cwtl
jl
pop
jle
lock
push
pop
fnsave
les
or
dec
xlat
shll
mov
mov
push
dec
mov
mov
inc
das
stos
lods
test
cltd
cs
cmc
and
ss
adc
jl
jbe
inc
orb
xchg
clc
scas
or
iret
and
push
ret
xor
pop
adc
fdivl
cmp
and
outsl
cmp
rcl
pop
pop
pushf
dec
dec
and
sahf
sbb
pop
xor
dec
xlat
aad
adc
push
mov
or
aam
popa
insl
dec
xchg
divb
enter
scas
mov
pop
gs
mov
sub
jmp
les
sti
push
dec
movsl
testl
push
pop
sbb
insb
push
dec
loopne
testb
xchg
dec
push
imul
inc
inc
lcall
fld
test
dec
adc
ds
rcrb
or
out
sbb
lea
jp
inc
mov
xor
mov
popa
loop
mov
jmp
add
sbb
cmpsl
mov
sub
or
test
push
inc
adc
aas
into
mov
inc
pop
cmp
test
jp
test
sub
mov
inc
sub
mov
out
add
push
dec
sub
mov
popf
xchg
popf
sub
dec
ljmp
movsb
and
call
fcmovb
insb
sub
imulb
das
pop
mov
pop
add
sbb
divl
aam
inc
or
sub
mov
addr16
or
cmovne
adcl
into
xlat
aad
mov
movsl
and
aaa
push
pop
ret
rcrb
mov
fistps
shrb
clc
jno
adc
adc
push
lcall
or
jo
icebp
push
or
out
push
adc
fstpt
sti
clc
push
imul
decb
rol
adc
push
arpl
je
add
scas
jbe
pusha
ds
in
jo
inc
shl
call
js
stc
pop
push
stos
and
push
add
shl
adc
xchg
dec
notl
pop
pop
and
xchg
sbb
iret
xlat
out
pop
mov
icebp
pop
and
leave
aas
ja
mov
jecxz
mov
cmp
jb
jg
xchg
push
mov
in
fistps
cmc
in
test
mov
push
xchg
jo
outsl
dec
add
xlat
insb
sbb
or
mov
dec
fs
add
lret
popa
lds
out
sub
sti
lods
aaa
push
push
xchg
ljmp
ljmp
adc
xchg
add
fimull
test
rolb
mov
xchg
mov
jge
int
jnp
jmp
out
ljmp
mov
sub
xchg
jo
ljmp
lods
out
jae
cmp
and
std
stc
imul
leave
lods
inc
push
movl
fwait
es
imul
pop
and
add
aas
subl
shl
inc
es
push
out
ret
sbb
inc
test
aad
xor
icebp
mov
push
dec
js
push
in
and
xchg
sahf
sub
ret
or
leave
mul
loope
xchg
lock
jmp
pop
jmp
repz
pop
xor
mov
cmp
insb
cmc
into
es
push
xor
mov
repnz
cmp
mov
xorb
leave
movb
adc
add
dec
cmp
insb
movsb
pop
iret
pop
pusha
test
stos
and
sbb
inc
loope
or
int
in
popa
mov
in
data16
xlat
mov
mov
adc
loope
sbb
fidivs
xchg
jno
bound
repz
sbb
insl
imul
out
dec
xor
or
pop
jne
add
adc
iret
int
push
add
xor
adc
mov
push
pop
pop
mov
and
xchg
repz
nop
pop
ret
add
pop
adc
loope
ret
jb
or
enter
push
aam
cmp
inc
std
sub
dec
add
pop
inc
fidivl
pop
jmp
out
int
pusha
out
jmp
cmp
cmp
dec
lcall
sub
and
lea
mov
mov
jo
xorb
push
mov
out
add
sbb
je
sahf
add
inc
mov
mov
stc
dec
arpl
fadds
test
vmulpd
mov
xlat
popa
clc
lea
mov
fidivrs
pop
dec
dec
pop
jg
andb
ljmp
mov
outsb
lahf
lock
sub
mov
adc
fldcw
mov
decl
lods
sub
fsubs
add
popa
bound
fisubl
mov
rcr
sub
sub
cmc
inc
out
mov
push
lret
scas
push
fstl
lods
push
iret
std
dec
add
aas
mov
mov
test
jmp
int
inc
clc
and
sti
mov
mov
testb
jp
stc
es
push
adc
sarb
adcl
test
rorl
or
enter
insb
jp
pop
adc
call
jns
xor
add
rcll
fnstenv
and
xlat
in
nop
sub
popf
add
sti
xor
jg
movsl
repz
rcrb
pop
xchg
lds
mov
xchg
or
inc
inc
test
shlb
mov
mov
aas
movsl
mov
fnstcw
movsb
sbb
lock
lcall
sahf
into
movsl
sar
call
add
out
inc
jnp
shrb
sbb
enter
fwait
imulb
cs
inc
add
mov
xor
dec
div
cs
fnsave
adc
lds
cli
pusha
jg
xchg
inc
clc
jg
pop
test
lcall
xchg
insl
iret
push
and
push
mov
jge
cwtl
add
sub
cmpsl
add
lods
pop
push
xor
xchg
adc
shlb
mov
je
aad
shrb
out
mov
cli
push
xchg
aad
icebp
xchg
sti
cwtl
jb
pop
xor
enter
xchg
lods
inc
pop
cmp
mov
ds
loope
ret
push
stc
dec
mov
es
or
test
pop
add
test
lea
out
les
aaa
leave
and
xlat
mov
push
push
jg
test
xchg
imul
ljmp
push
or
lcall
add
sub
add
mov
pop
out
jne
es
mov
mov
jecxz
push
jbe
lret
loop
or
popf
cmpb
inc
cmp
xchg
jnp
or
pop
stos
jle
dec
inc
inc
stos
adc
and
icebp
loopne
jb
inc
dec
mov
popf
pushf
adc
std
add
mov
orb
test
xlat
ds
mov
aam
imul
in
adcl
xchg
jo
cwtl
outsb
cmovno
and
push
cmp
push
int
or
bound
mov
xchg
fimull
pop
push
arpl
sbb
adc
sbb
cltd
xchg
xlat
and
push
dec
rorb
loopne
out
sub
mov
dec
sub
and
cltd
in
rorl
insl
jge
dec
ret
frstor
mov
mov
mov
add
xchg
cld
test
cmc
arpl
out
bound
ljmp
mov
adc
pop
loope
mov
and
cmp
mov
or
in
fadd
lcall
xchg
ja
shll
ds
or
lods
sbb
push
inc
mov
add
in
xor
sbb
and
pop
out
xchg
lcall
sbb
aad
jno
push
ret
xor
push
shl
ss
xor
int
xchg
pop
pushfw
data16
mov
test
mov
fnsave
int
clc
movb
add
std
ficoml
or
stc
sub
pop
ss
int3
mov
test
test
xchg
jmp
push
rcll
popf
rcll
xchg
bound
jb
subl
pop
mov
xor
adc
jl
mov
xor
aaa
jno
pop
aad
xchg
mov
sbb
les
push
and
aas
cmpsl
xor
mov
fiadds
cmpsl
xchg
cmp
fs
mov
pop
pop
movsl
mov
inc
mov
aaa
cwtl
sbb
jl
cld
lret
xor
mov
ss
and
fnstcw
dec
xchg
lea
imul
xchg
les
outsb
pop
jl
inc
dec
mov
popa
mov
jno
rclb
les
cwtl
nop
imul
push
push
imul
or
or
repz
jg
xchg
or
cs
push
mov
clc
xor
add
sub
out
mov
mov
pusha
outsl
sbbl
enter
icebp
stos
sub
xlat
jle
push
roll
scas
xor
outsl
pop
add
jbe
bnd
jecxz
and
loopne
pop
mov
dec
mov
negb
iret
jle
test
mov
dec
test
addl
daa
pop
ja
fists
pop
popa
jbe
and
add
in
jge
or
aaa
clc
ds
add
xor
or
mov
mov
pop
popa
cmp
ficoml
adc
mov
mov
in
daa
idiv
pop
and
add
cmp
xor
fbld
nop
addr16
subb
sbb
iret
push
repnz
adc
xchg
pop
cmpb
sbb
sbb
dec
cmp
nop
mov
rolb
jbe
out
mov
clc
inc
mov
sub
sub
xchg
fmull
dec
hlt
mov
call
leave
dec
decb
sub
xchg
jnp
rclb
mov
push
scas
mov
ret
xchg
out
and
stos
xor
daa
sbb
outsl
push
cmp
and
mov
pop
ljmp
push
repz
pop
inc
and
xchg
mov
pushf
sar
mov
pop
adc
dec
lock
add
fsubl
add
addr16
jo
mov
pop
or
inc
mov
inc
adc
scas
adc
mov
cwtl
mov
push
outsl
repnz
aam
in
orl
xchg
iret
pop
inc
push
mov
dec
inc
arpl
sbb
lock
movsb
fdiv
out
scas
mov
or
inc
sbb
push
jbe
xchg
sti
sbb
and
jb
xor
stos
insl
addb
loop
add
data16
mov
mov
or
xor
jns
pop
rcll
bnd
mov
and
and
clc
mov
jns
outsb
popa
xchg
add
fimuls
in
das
int
add
push
mov
movsl
test
ret
jnp
lods
movsb
and
test
inc
leave
xchg
sbb
out
xchg
sub
mov
dec
xor
in
sbb
dec
inc
dec
lahf
xor
cwtl
jnp
mov
mov
mov
cmp
lahf
jle
cld
roll
nop
dec
fiaddl
jmp
shlb
scas
std
xor
rolb
push
shrb
rol
mov
lock
loopne
divb
mov
inc
push
popa
sub
dec
add
out
and
pushf
ja
repz
xchg
inc
xchg
lea
and
aad
xor
xchg
fistps
ret
repz
pop
sar
lret
xchg
xchg
xchg
arpl
mov
test
in
call
scas
lods
in
pop
je
repnz
dec
ret
test
mov
and
mov
add
and
mov
fdivl
sub
subb
nop
pop
and
movsl
int
jecxz
test
xor
inc
je
dec
add
mov
ret
pop
repnz
pop
mov
into
fmull
mov
sarl
jno
cli
cmp
cmc
pop
in
sbb
xor
jnp
sbb
cld
movsl
pop
push
in
enter
ret
test
cwtl
mov
push
aad
mov
aam
pop
shl
lcall
jp
icebp
push
in
pop
aad
cmpsl
stos
test
sub
int3
mulb
xchg
hlt
inc
cmp
cmc
lret
arpl
sbb
push
xlat
fdivs
clc
cmp
in
idivb
push
aaa
adc
push
scas
je
pop
aam
lods
ds
das
mov
clc
das
mov
idivb
imul
or
gs
sbb
xor
lods
cmp
fstl
sub
mov
insb
cld
popa
cwtl
pop
mov
pushf
fildll
mov
test
mov
pop
iret
push
push
and
inc
sub
mov
aad
or
jno
outsb
jecxz
inc
movups
sbb
mov
lahf
add
mov
repz
shrl
xor
inc
cmpsl
lods
adc
push
dec
sahf
int
cltd
outsl
das
push
imul
xor
jg
repz
cwtl
xorb
dec
dec
or
je
nop
mov
mov
pop
std
or
ret
jp
mov
fdivl
mov
sbb
mov
pusha
decb
sbb
rorl
mov
xchg
dec
xor
push
pop
imul
test
mov
mov
and
in
xchg
mov
adc
loope
push
in
imul
fndisi(8087
mov
lahf
xchg
pop
ret
lret
xchg
adc
lods
pop
dec
in
adc
mov
jl
jp
adc
pop
or
push
in
sbb
push
xchg
lret
inc
adc
sbb
sub
movsb
sub
sarl
lods
lods
scas
adc
lret
hlt
and
add
ret
or
std
push
ror
out
jns
clc
cld
mov
fstpl
lcall
js
and
mov
jle
jnp
loopne
loopne
jae
shrl
insl
adc
dec
sbb
loopne
push
or
xchg
inc
sbb
push
out
cmp
push
push
int
mov
daa
push
je
mov
sub
aad
adc
xor
repnz
jo
cmc
shlb
cmp
add
jp
dec
pop
repnz
push
std
aaa
jg
push
cmp
jnp
lret
pushf
mov
shlb
cli
adc
add
jg
sub
jne
stc
add
jecxz
mov
xor
push
and
test
add
pop
aas
push
outsb
and
fsubr
mov
cli
and
mov
repz
stc
adc
sti
insb
pop
idiv
mov
xchg
aas
sahf
inc
sahf
loop
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
jno
sub
and
mov
dec
pusha
popf
mov
xchg
push
leave
std
out
cli
xchg
cli
es
dec
push
cli
fnstsw
stos
loope
test
push
sti
inc
insb
cmp
in
pop
pop
movsl
imul
push
std
mov
test
push
test
arpl
jne
aam
sub
adc
adc
or
lahf
push
pop
popa
mov
jle,pn
test
je
das
clc
pop
cli
mov
addb
add
jb
inc
fsubrl
inc
test
aaa
test
adc
mov
mov
insl
or
enter
aad
mov
or
scas
je
pop
insb
mov
movq
sbb
iret
jl
mov
mov
mov
jp
xlat
test
jno
out
fwait
push
adc
add
je
add
subl
push
and
xorl
sub
xor
rolb
sub
in
addr16
mov
cmp
mov
cmp
push
xor
adc
push
icebp
lods
inc
or
xlat
adc
insb
inc
incl
cmp
enter
jg
loop
into
sti
fcomps
sub
add
pop
inc
sbb
adc
in
pop
pop
push
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsl
add
outsl
add
std
outsb
