sbb
add
mov
sbb
imul
push
lea
jg
es
adc
adc
sub
inc
pusha
adc
loope
shr
and
mov
inc
adc
jno
and
xchg
ja
insl
and
std
loopne
xchg
call
mov
jge
inc
rcr
mov
insl
sbb
inc
jge
cmp
jb
aaa
sbb
push
or
dec
xchg
cwtl
ret
fwait
inc
push
or
push
pop
imul
sti
dec
xor
sub
xchg
les
push
sub
push
add
clc
ficomps
lret
xchg
scas
int3
sbb
mov
call
xor
push
mov
in
bnd
ret
mov
mov
inc
adc
xchg
xor
daa
adc
mov
cmp
pushf
imulb
ja
mov
and
add
push
jge
or
test
push
pop
inc
hlt
imul
xchg
test
in
addr16
inc
lret
and
test
push
jne
iret
xchg
ss
arpl
fstps
inc
xor
mov
mov
inc
cltd
and
xchg
and
mov
push
and
pusha
xchg
fistpll
test
push
mov
nop
das
arpl
fwait
push
inc
jecxz
adc
pop
push
sbb
lds
das
testl
ja
inc
in
int3
cmp
shll
mov
mov
sbb
inc
mov
dec
sub
or
lcall
mov
aad
jle
cmp
sub
aaa
inc
dec
mov
jmp
lahf
mov
sub
test
mov
add
orl
pusha
aad
test
ret
dec
call
push
mov
imul
sub
cmp
and
pop
sub
leave
xchg
test
scas
pop
mov
je
push
sub
xlat
subl
cmp
mov
lock
jl
das
fmul
jns
sub
cmc
outsb
jl
pushf
inc
out
addl
rcrb
popf
add
scas
pop
dec
pop
push
mov
nop
pop
or
inc
aad
int
jnp
mov
out
inc
mov
and
enter
and
int
jmp
loop
jno
xor
or
popa
outsl
xchg
enter
xchg
or
adc
es
pop
outsl
out
mov
cmpsb
ret
sub
mov
or
outsb
cld
in
mov
mov
xchg
fisubl
outsl
call
inc
ficoms
and
cmp
or
mov
je
aad
mov
ret
lea
aam
cmp
push
xchg
add
icebp
mov
push
pop
push
adc
movsl
cmpsb
and
lds
push
mov
fdiv
push
in
sahf
pop
push
arpl
or
pop
aam
xor
xchg
cltd
pop
jbe
fidivl
outsl
or
pcmpgtw
mov
or
out
pop
ret
jae
inc
inc
mov
mov
sahf
mov
jp
push
jle
test
incl
insl
sti
and
lods
leave
fldl
out
loope
mov
jmp
xorl
stc
rcr
nop
in
pusha
lcall
xchg
cmp
cmp
cmp
stos
ficoms
and
icebp
xor
or
hlt
dec
pop
in
add
lods
inc
add
cwtl
pop
inc
add
cmc
fldcw
push
dec
fwait
pop
fwait
in
and
das
popa
adc
add
loope
xor
fcmovnu
sarb
adc
lea
movsb
jb
in
add
stc
ds
jb
push
fidivrl
inc
cld
or
xor
cld
cltd
or
mov
cmp
arpl
add
xor
xchg
mov
imulb
clc
cmp
mov
mov
xchg
dec
in
mov
jno
mov
mov
lret
daa
lea
xor
pop
aaa
push
or
inc
pop
sbb
orl
or
ss
inc
xchg
mov
mov
fsubl
xor
sbb
bound
nop
fdiv
cmpsb
and
fcoml
insb
xor
adc
or
ficomps
jno
call
or
int3
jo
icebp
imul
push
push
mov
mov
pop
cmp
xor
xchg
lret
push
mov
push
and
xchg
insb
scas
iret
mull
fistpll
dec
mov
xchg
xor
push
je
pop
or
cmpsl
mov
mov
xchg
sub
mov
mov
rcll
dec
mov
gs
aad
mov
dec
jno
pop
inc
jle
cmp
aas
outsl
inc
lcall
test
jne
push
mov
add
push
inc
rorb
xor
lret
test
outsl
test
and
mov
pop
xchg
push
sbb
lea
sahf
es
sub
rcrb
or
sub
mov
adc
jge
xchg
inc
inc
mov
xchg
lret
and
pop
xchg
adc
out
test
add
push
cmpsl
push
jns
sub
mov
push
add
xchg
movsb
cmp
adc
adc
sbb
sbb
sti
movsl
xor
fidivl
jae
pop
sarl
mov
mov
out
sahf
loop
xchg
xchg
orb
push
lahf
and
push
xor
sbb
mov
add
cmp
scas
or
aad
xlat
pop
mov
ljmp
xchg
adc
jo
dec
xchg
xor
jp
aaa
inc
stos
fdivl
loop
dec
or
mov
and
cmp
addr16
pop
imul
xor
cld
pop
out
xchg
loopne
pop
sub
adcb
or
jne
push
rcl
arpl
aas
dec
jo
movsl
aad
push
faddl
jp,pt
push
mov
out
add
or
das
orl
das
xor
fcomps
cltd
sbb
adc
inc
addl
xchg
cmpsb
loope
call
int3
adc
pop
pusha
cmp
adc
cs
iret
std
inc
arpl
call
or
adc
mov
scas
pop
cmp
push
das
dec
addr16
xor
ss
jge
pushf
loop
pop
pop
jl
clc
mov
pop
push
imul
outsl
mov
popf
test
pop
jmp
xchg
and
test
int
add
lods
mov
mov
and
ja
push
aad
and
int
out
xchg
rorl
xor
pop
cwtl
cs
and
in
sub
push
imul
out
add
test
gs
inc
mov
dec
add
push
int
and
test
and
out
pop
add
imul
jo
stos
mov
out
shll
jns
xchg
inc
add
mov
cmp
shll
pop
sub
ds
popa
mov
lahf
or
leave
out
pop
or
push
into
push
sbb
cmp
out
add
pop
inc
mov
jg
mov
adc
inc
pushf
xor
fdivr
icebp
mov
cld
pushf
or
push
movsl
pushf
dec
cmc
pusha
es
add
pop
jl
mov
vcvtsd2ss
in
addr16
jmp
add
jmp
les
pop
jge
hlt
aad
inc
inc
jl
mov
inc
or
inc
sbb
cmp
push
or
test
mov
rclb
xor
cmc
dec
ret
shl
out
mov
fwait
adc
and
adc
adc
cmp
mov
mov
mov
and
dec
xor
inc
xchg
int
jmp
push
mov
jae
push
xchg
mov
clc
mov
mov
loope
js
sbb
sub
popa
jl
jne
sub
fdivrs
pusha
xor
mov
jl
or
fwait
negl
jge
out
out
fildl
pop
rcl
xchg
or
lahf
mov
cltd
inc
jecxz
cwtl
dec
mov
sti
mov
or
dec
add
divb
outsb
aad
rorl
aas
inc
outsb
inc
inc
xchg
mov
sub
fildll
mov
fisttpl
mov
cmp
pop
mov
mov
outsb
xchg
lods
pop
xchg
test
xor
xor
jge
cmp
rcll
or
jo
outsb
negb
inc
icebp
test
lahf
mov
cmpsl
mov
lahf
add
sub
xchg
mov
cmp
sbb
cld
popf
dec
cld
fwait
dec
or
aaa
add
dec
fmuls
xor
jl
and
cs
ret
rcr
pop
ss
cmpb
jmp
mov
fdivl
cltd
fisubs
call
jnp
dec
int3
shl
sbb
push
outsb
cld
and
mov
rorl
jp
xchg
jo
adc
mov
hlt
mov
jecxz
mov
push
dec
and
push
inc
push
cli
jg
fsubr
adc
sti
adc
or
mov
jle
jne
stos
pop
repnz
push
lahf
dec
add
dec
mov
pop
lcall
ret
xchg
daa
pop
pop
notb
sbb
sub
dec
int3
rorl
int
xor
fbstp
xor
mov
dec
ficoml
push
sahf
dec
addb
cwtl
jnp
insl
add
xor
cmpsb
dec
adc
sbb
adc
push
rorl
mov
mov
jae,pn
mov
cli
push
lods
mov
xor
call
out
add
xchg
dec
test
mov
scas
adc
rcrb
cmc
pop
sbb
push
jl
inc
scas
insl
lcall
mov
xlat
sub
push
and
std
xchg
adc
insb
idivb
cmc
repnz
int
scas
cltd
mov
mov
outsl
push
mov
sub
cli
and
mov
ret
adc
fsubrl
jo
es
les
add
scas
leave
and
pop
filds
loope
lods
and
mov
je
adc
scas
or
mov
stos
outsl
sub
jbe
inc
lods
push
jp
outsl
and
mov
dec
cmc
jp
sarl
inc
inc
or
xor
test
popf
cli
in
adc
mov
mov
aad
jg
adc
ja
insb
lret
xor
xor
dec
insb
mov
xchg
pop
daa
dec
adc
popa
js
or
or
dec
cmp
stos
arpl
inc
int3
jb
push
rcll
roll
sub
fs
test
pop
jg
mov
cs
sub
mov
fsub
lock
mov
subl
int3
cmp
rcl
pop
mov
or
cmp
icebp
jle
mov
xor
mov
fs
test
mov
pop
scas
jge
sbb
es
lahf
enter
cld
mov
and
cmp
sub
repz
dec
adc
pop
sub
je
mov
int
aam
ja
sahf
pop
outsb
pop
in
push
sub
push
mov
fiaddl
aaa
push
sub
mov
sbb
push
lcall
incb
das
jmp
fsubrl
xor
pop
loopne
sbb
mov
outsb
sbb
shrl
pop
in
ljmp
push
jne
xorl
enter
jne
push
outsb
cmc
pop
cmpsl
xchg
adc
out
bound
dec
arpl
adc
cmp
scas
cvtpi2ps
mov
pop
mov
xchg
adc
testb
mov
aas
sbb
sbb
add
pusha
test
or
xorb
push
add
rcrl
push
popf
lds
outsb
mov
cmp
sbb
jmp
inc
fistps
test
mov
fucom
das
insl
and
pushf
shrb
aaa
and
test
add
add
adc
xor
add
mov
or
pop
push
je
lds
mov
mov
lcall
mov
push
in
mov
inc
push
subb
fwait
aas
or
or
data16
mov
xchg
das
push
pop
out
fldl
mov
jno
sub
dec
movl
push
in
pop
jg
cmc
add
mov
and
fcmovbe
cmp
xor
xchg
ficompl
popl
test
mov
popa
je
mov
out
pop
ss
or
adc
idivb
push
xchg
adc
xor
incb
or
shrb
push
push
lahf
mov
xor
xlat
fs
xor
push
or
cmp
scas
ret
lds
call
shl
push
stc
xlat
and
add
js
sbb
rorb
std
je
mov
mov
nop
jo
lods
lods
pop
xor
sub
jp
jb
sbb
arpl
pop
pop
sbbb
push
daa
jae
mov
fwait
shl
add
add
fwait
lea
roll
fwait
pop
aas
xchg
xchg
rclb
inc
adc
inc
fidivl
out
mov
fstpl
std
cmpsl
inc
push
aaa
dec
lea
fldl
arpl
add
push
sub
bound
xlat
mov
inc
cmpsl
lea
pop
xor
andl
inc
sbbb
jecxz
int3
sbb
ss
ss
inc
dec
sbb
pop
or
stos
jnp
pop
jno
imul
pop
jno
stos
rcll
xchg
leave
jae
xchg
std
pop
mov
ret
imul
pop
sub
inc
test
arpl
fsubrp
xor
mov
je
inc
psrlw
pop
jb
ss
sbb
jae
dec
popa
fmull
and
pop
xchg
sti
fidivrs
adc
out
inc
repz
and
dec
and
fiaddl
xor
int
add
idiv
adc
cmc
outsl
sti
inc
xchg
pop
sub
adc
add
mov
jecxz
push
xor
mov
inc
movsb
cli
and
hlt
xor
mov
test
xchg
push
inc
imul
mov
jle
and
push
add
sub
repz
repnz
hlt
add
push
cli
fsubrl
xchg
jns
jecxz
scas
cmc
mov
sub
repnz
jno
mov
push
jae
or
fstpt
addr16
cmp
lods
ret
push
push
inc
movl
sub
inc
mov
xor
jnp
or
pop
mov
out
jmp
shll
movsb
je
mov
cmp
lods
and
repz
dec
jne
xchg
clc
mov
cld
repnz
xor
inc
and
jae
pop
cmp
out
mov
pop
sub
add
cltd
push
cltd
jg
arpl
shll
pop
jecxz
sbb
pop
mov
cli
ss
pop
sbb
jbe
jno
adc
insb
repnz
das
enter
jnp
insl
jb
das
push
pop
fstpl
cli
fsub
push
jge
jg
jle
sarb
jmp
push
jle
outsl
cmp
xchg
cltd
xor
cmpsb
rcll
mov
in
jno
pop
std
pop
push
cmc
bound
pop
inc
mov
leave
push
lret
cmp
testl
test
stos
ss
and
mov
or
fs
dec
mov
mov
sub
push
jp
aas
cmp
adc
dec
and
dec
loop
mov
xchg
xchg
mov
pop
adc
push
push
aaa
inc
testb
adc
lods
popa
bound
callw
mov
pusha
mov
cltd
into
jo
cmp
adc
out
jmp
jge
insb
mov
idivb
rcrl
cltd
in
jne
pop
inc
test
out
jae
out
sub
js
shlb
mov
flds
xor
cmpb
sbb
jle
sbb
ds
ljmp
jl
mov
jmp
dec
jno
loope
dec
xor
daa
xor
pop
daa
xchg
adc
xor
notb
lods
xor
lods
and
sahf
and
out
pusha
add
cmp
sbb
fdivr
or
lea
lcall
dec
inc
pusha
mov
adc
imul
sarl
mov
lock
orb
push
xchg
enter
xchg
imul
leave
mov
cmp
test
dec
sub
mov
lods
subl
arpl
pop
adc
add
or
xchg
inc
je
aam
dec
xor
popf
fwait
pop
cmc
in
pop
xchg
in
xchg
jp
add
ja
add
dec
out
rclb
fs
stc
inc
jge
push
out
mov
in
push
cmp
pushf
cmp
jle
pushf
stos
adc
xor
pusha
into
cmc
stos
xchg
leave
pop
push
add
add
sahf
pushf
mov
push
lea
rol
in
in
or
rcrb
in
pusha
mov
pop
add
push
xor
push
out
incl
xor
push
loopne
mov
mov
loopne
xchg
cltd
sbb
mov
ja
lock
add
pop
xchg
sub
push
push
dec
add
mov
lcall
push
rolb
pop
mov
push
aaa
stos
fsts
stos
addr16
or
jne
rolb
dec
or
inc
mov
sub
xor
inc
mov
je
dec
sbb
pop
addr16
mov
and
mov
push
ret
icebp
push
cmpsl
out
ss
lock
enter
lret
orb
xchg
xchg
bound
mov
les
mov
jecxz
jbe
sbb
adc
jmp
stc
jae
xor
push
in
jg
dec
loopne
or
lcall
adc
jnp
xor
cmpsb
xor
shrb
aad
xlat
xlat
inc
sub
repnz
mov
out
enter
mov
push
inc
mov
popa
jg
loop
jbe
push
jmp
insb
fstpt
sbb
loope
lock
mov
lea
mov
loope
xchg
or
mov
jne
pop
fs
or
cmp
enter
ret
jbe
aad
pushf
inc
js
xchg
ds
dec
inc
fsts
or
sbb
xchg
jp
loop
sbb
pop
or
inc
xchg
andb
dec
sbb
adc
adcl
not
sub
lret
stos
outsb
jg
frstor
insb
cli
jge
lock
lods
jo
gs
insb
add
add
sbb
mov
outsl
and
sub
fwait
jnp
jae
push
adc
inc
shlb
shrb
repz
add
pop
sub
pop
pop
inc
cmp
cwtl
es
mov
js
shrb
stos
aaa
xlat
lods
addr16
shrl
push
repnz
pop
push
loopne
add
out
mov
and
nop
movsb
mov
lock
call
or
inc
dec
mov
jmp
and
adc
fistps
jns
or
jg
fucompp
xor
shrl
add
out
adc
jg
icebp
in
ret
mov
sub
xchg
push
mov
mov
adc
jecxz
mov
and
jge
jns
sub
insl
dec
and
mov
xor
jnp
add
mov
cs
imul
and
mov
lods
mov
cmpsl
jb
adc
scas
negb
jle
jge
cld
cmp
mov
push
out
mov
add
sbb
stos
xchg
jb
mov
lods
int3
jno
cmp
add
rcr
out
or
inc
jbe
fcoms
xor
push
insl
cwtl
ja
push
pop
mov
pusha
inc
stos
mov
gs
clc
popa
jns
jmp
add
xor
cwtl
mov
push
and
cmp
xor
pop
mov
jge
icebp
mov
fisttpl
jo
xchg
cmp
add
les
test
pop
cmp
idivl
push
outsb
loopne
push
pop
fistpll
dec
lahf
sbb
jecxz
popa
ja
cmp
jb
pop
pop
es
push
add
dec
inc
bound
sub
mov
ret
sbb
mov
out
ret
cmp
shrl
icebp
mov
adc
pop
lret
leave
push
jne
fldl
int3
add
pusha
jl
outsl
fisttpll
push
and
sub
inc
sub
add
sbb
in
out
shll
cltd
cmp
sub
mov
jo
inc
hlt
mov
rclb
sti
mov
push
into
add
mov
ds
cmc
lret
jae
xor
outsb
test
and
outsb
ret
sahf
mov
cmc
adc
xlat
or
xor
xchg
or
push
mulb
push
fs
ror
les
mov
sub
gs
add
popa
enter
dec
popf
mov
and
jnp
jne
or
bound
dec
xor
test
leave
rclb
pop
fsubrs
and
or
lds
inc
adc
xchg
outsb
mov
adc
shll
push
xor
out
jmp
mov
jne
jle
stos
sub
push
mov
test
dec
sub
pop
insb
shl
mov
cmp
push
shr
out
mov
in
xor
or
cltd
movsl
cmp
mov
adc
mov
lret
cld
imul
sbb
inc
push
fnstsw
and
adc
sub
lods
xchg
mov
sbb
cld
mov
adc
les
sbb
bound
pop
inc
xor
imul
add
xlat
dec
jecxz
adc
or
test
fs
sub
loopne
cmpsl
jae
and
mov
xor
int
mov
sbb
inc
cmp
cmpsb
sbb
loop
xchg
pop
mov
inc
dec
jmp
pop
leave
popa
test
aaa
push
xchg
int
mov
lcall
imul
and
lahf
jo
repnz
xchg
mov
jb
arpl
mov
loopne
icebp
lods
gs
push
mov
in
cmpb
testl
imul
movsb
cs
pop
lds
repnz
adc
repnz
or
out
inc
mov
inc
push
iret
jl
ljmp
nop
data16
call
cmp
pop
cmpl
dec
inc
enter
mov
mov
andl
push
pop
push
dec
js
fisttpll
or
sarb
out
xchg
jmp
mov
cld
push
mov
scas
lahf
out
mov
sub
pusha
hlt
push
cmp
and
add
pop
jne
push
sub
adc
out
xor
lods
in
cmp
cmpb
jne
and
jg
incl
jle
xchg
pmuludq
lods
xor
test
jl
xor
lock
push
push
jge
pop
mov
jb
inc
xchg
or
or
iret
fisubrs
arpl
mov
lcall
push
addr16
inc
pushf
ds
arpl
movsl
test
pushf
gs
nop
shll
sub
je
mov
pop
mov
sub
shrb
jmp
mov
stos
call
cmpsb
loopne
mov
sub
insb
and
xchg
cmp
outsb
pop
push
clc
imul
in
inc
pusha
ja
lcall
je
adc
ret
add
mov
jg
fbstp
jecxz
out
xorb
les
imul
out
outsl
es
imul
lock
loope
sub
or
fstl
or
ret
inc
in
adc
fwait
nop
out
in
or
lcall
ficoml
sbb
cmp
or
mov
push
add
imul
lcall
pop
cmp
nop
xor
fwait
loopne
xor
bound
out
xor
fdivrs
push
inc
sbb
pop
rcll
lahf
xchg
test
ss
nop
out
shll
negl
rcll
and
idivl
add
add
sarb
fwait
lret
lret
mov
negb
ror
rcrb
popa
and
psllq
lret
popa
enter
dec
cmc
jb
in
or
lock
test
lods
out
js
jecxz
cmp
lods
xor
test
push
icebp
js
sti
xor
pop
ljmp
sti
and
dec
jmp
lock
push
push
inc
jge
aaa
aas
cmpsb
jmp
stc
test
call
fcompl
adc
decb
and
sarl
push
into
ljmp
add
fimuls
cmp
jmp
lds
mov
out
xor
sub
and
out
movsb
push
push
inc
push
daa
cmp
pop
ja
inc
lds
adc
inc
data16
jg
sbb
cmp
add
sub
popa
andl
insb
or
fdivrl
int3
cs
push
mov
es
imulb
into
das
lods
cmpsl
pushf
jno
mov
sub
sub
mov
fidivrs
lods
cwtl
inc
sbb
dec
and
sub
fistpl
jbe
mov
xchg
dec
lret
popa
mov
mov
in
jmp
push
jl
or
inc
mov
add
mov
jle
fwait
popf
repnz
jb
cwtl
push
rolb
adc
mov
fsubp
add
inc
mov
pop
std
jle
fimuls
or
test
jecxz
leave
inc
cmp
push
and
enter
adc
and
lods
mov
nop
mov
push
sbb
sub
aam
je
nop
roll
push
sahf
push
nop
in
push
in
push
lock
bound
ret
adc
pop
aas
outsl
inc
call
pop
jg
into
or
rcll
jbe
outsb
aaa
add
pop
mov
daa
mov
std
jg
inc
mov
pop
ret
incb
pop
daa
mov
push
sub
cltd
sub
divl
mov
jle
pop
aad
or
cmp
js
push
mov
fmul
and
jl
outsl
adc
subl
call
xor
dec
sub
sbb
dec
sub
test
pop
test
fcmovnbe
push
mov
inc
pop
and
loope
lods
jp
insb
mov
stos
add
mov
add
popa
cmp
dec
adc
jmp
cmp
test
fstpl
or
push
and
inc
or
out
inc
jp
dec
sbb
sub
sar
jnp
lock
lock
push
ss
mov
lock
and
mov
leave
add
andl
fdivrs
sbb
adc
subl
xor
test
jecxz
lds
popa
and
daa
sbb
xchg
xor
test
test
fisubrs
cs
fdivs
int3
xor
xchg
xor
into
mov
fiaddl
bound
movl
dec
push
sbb
dec
cmp
mov
dec
and
repnz
inc
loope
mov
aas
sbb
sbb
gs
inc
stos
repnz
add
mov
jae
jecxz
shll
and
pushf
inc
push
sub
xchg
mov
jg
jnp
jl
lahf
dec
mov
or
mov
lods
clc
test
pop
inc
mov
fistpll
iret
rcll
arpl
jl
cltd
insl
rolb
rcrb
lock
out
fsts
jge
sub
stos
inc
inc
dec
imul
xchg
xchg
mov
sub
cld
add
mov
jl
mov
mov
or
icebp
xchg
adc
shr
fsubrl
dec
inc
lods
in
pop
mov
mov
movsl
xor
xlat
mov
cmp
test
sbb
das
pop
scas
mov
cmp
jmp
jbe
sbbb
ret
lea
ficompl
enter
mov
aam
cmpsb
push
cmc
mov
ja
in
or
rcrb
or
xor
or
jg
push
dec
adc
bound
add
or
insb
mov
fisubrs
in
mov
mov
xchg
pop
dec
mov
or
sbb
pop
adc
loope
mov
mov
adc
aad
mov
in
aad
lods
fstpl
xor
dec
ja
xor
pop
adc
bound
pop
int
dec
fs
cmp
popa
imul
loopne
out
out
or
adc
jmp
stos
ds
hlt
pusha
popf
sbb
cs
ret
push
std
inc
cmc
insb
xchg
in
ret
mov
ret
jns
sahf
sub
mov
cmc
xor
xor
icebp
pushf
push
inc
cltd
cltd
fsts
dec
imul
roll
faddl
mov
dec
cmp
sbb
and
and
mov
shll
mov
bnd
cmp
dec
mov
ret
add
xor
or
or
ds
insb
and
call
xchg
insl
ss
dec
fstpl
lcall
pop
out
cmpsb
inc
subb
xchg
fwait
pop
push
and
leave
push
or
pop
xor
cld
bound
das
lret
shrl
fsubr
cmpsb
jne
or
loop
popf
fmull
push
push
dec
iret
inc
mov
xchg
dec
lea
mov
lret
shlb
int3
lret
cwtl
and
in
outsb
addb
inc
mov
sbb
hlt
std
stc
sub
cmpsb
ret
or
out
sub
add
dec
jnp
mov
orl
dec
jno
outsl
jb
cwtl
cs
sbb
xchg
push
sub
fmull
mov
stc
and
sub
daa
push
jecxz
cmp
xchg
lods
sub
test
adc
call
xor
es
xchg
mov
or
fs
mov
es
mov
gs
loope
xchg
fistps
mov
arpl
bound
in
loop
mov
sarl
loopne
or
out
jno
dec
pop
mov
push
addr16
scas
mov
push
pop
add
mov
mov
fwait
jno
push
hlt
sub
sbb
pop
jmp
popf
and
fs
dec
jle
xor
ret
stc
push
addb
insl
xchg
and
pop
inc
in
imull
sub
lret
aad
iret
std
movsl
bound
icebp
push
xlat
dec
es
nop
ret
dec
icebp
push
sbb
aaa
xor
ss
push
add
fsubs
loop
cmpl
cmp
in
sub
xorl
iret
inc
mov
or
cmpsb
push
imul
fwait
xor
ret
mov
cli
mov
and
jle
out
cmp
pop
ss
cs
sub
in
stos
and
loope
and
xchg
loopne
fneni(8087
inc
ror
cmp
jbe
push
rcrb
stc
cltd
imul
into
fidivrs
mov
inc
or
inc
cmp
push
add
inc
push
addr16
jnp
insl
xlat
jmp
lods
loop
inc
xchg
jb
xchg
push
adc
fildll
imul
mov
lahf
mov
lds
or
mov
mov
xchg
mov
or
fs
or
fcoms
pop
add
mov
insb
aas
add
dec
mov
jge
and
mov
pop
insb
outsb
mov
out
lret
cmp
dec
std
add
push
inc
out
mov
stos
sarl
sbb
clc
jo
in
daa
arpl
mov
pop
mov
js
mov
lret
jns
xchg
lock
xchg
adc
ds
pusha
loopne
add
lods
fcoml
adc
or
mov
lret
dec
fs
clc
enter
push
jne
add
addl
mov
test
dec
js
in
cmp
mov
inc
sbb
inc
cmpsl
adc
push
popa
adc
decl
roll
or
xchg
nop
add
sbb
lret
pop
test
or
stos
icebp
pop
or
aas
cmp
mov
jbe
popf
mov
push
pusha
sub
data16
enter
cmp
xchg
cwtl
xor
pushf
cmpsb
int3
es
cli
inc
xor
pop
jg
aam
test
push
and
ljmp
frstor
flds
dec
inc
add
insb
push
outsl
popa
add
in
jmp
xor
sbb
jno
incb
les
add
cmpsl
pusha
adc
cmp
lahf
jo
add
stc
push
sub
and
ljmp
pop
sub
sub
iret
add
in
stc
push
lret
jle
pop
nop
mov
cwtl
cmp
mov
ret
fistpll
push
int3
or
repnz
push
adc
movsl
jne
or
enter
jnp
cmp
xchg
xchg
aas
push
cmc
pop
lock
lods
pop
inc
cli
les
cltd
fistps
xor
mov
pop
lds
cmpsl
test
addb
sub
xor
dec
inc
mov
dec
nop
jecxz
das
loope
pop
outsl
fists
adc
dec
add
orl
bswap
dec
cli
test
lods
and
inc
lock
call
jp
mov
aas
sub
xlat
mov
mov
aam
sub
jge
or
pop
shlb
push
mov
popf
mov
das
lahf
scas
fsubl
mov
insw
movsb
aaa
inc
adc
dec
jle
mov
mov
adc
in
dec
in
sub
movsl
mov
pushf
out
mov
mov
lock
push
dec
inc
adc
daa
cmp
cmp
int
pop
cmp
iret
sarl
rep
sbb
mov
pop
sub
xor
add
arpl
push
cmpsl
pushf
cmp
lods
sbb
mov
sahf
stos
push
bnd
mov
and
jge
test
fs
jecxz
lods
in
call
push
daa
xchg
das
movsb
sub
mov
call
mov
pop
add
pop
mov
push
inc
fadds
fisubs
imul
daa
movsb
cltd
and
sub
cwtl
mov
hlt
jecxz
aad
cmp
and
mov
shll
out
pushf
ds
pop
xor
test
inc
lcall
movsl
je
cmpb
into
sub
or
or
cmp
xchg
push
cmpsb
push
imulb
push
cmpsl
jo
jb
push
mov
and
push
ja
pop
lock
inc
jmp
mov
subb
sub
sub
sub
test
cmp
aam
xor
or
inc
inc
xor
test
popf
push
fiadds
addb
or
les
xchg
add
xchg
pop
arpl
jnp
test
fiaddl
lahf
scas
out
adc
lret
sub
int3
cmp
lods
xor
push
out
fcmovu
xor
lds
xchg
mov
add
mov
xor
xchg
mov
push
xchg
jp
fbstp
and
lds
fcomps
adc
scas
mov
dec
pop
xor
jle
and
pop
inc
cmp
adc
or
ja
fs
mov
mov
lock
cmp
push
jae
sar
or
xchg
fmuls
push
movsl
dec
pop
fstps
in
out
add
and
xchg
cmp
int
or
push
and
inc
in
mov
leave
jle
addb
outsb
mov
pop
stos
cltd
jo
js
cmp
push
out
gs
out
enter
pusha
imul
adc
fisttpll
sbb
xchg
aas
lock
sbb
jnp
repnz
cltd
jbe
jl
jbe
and
mov
mov
xor
dec
add
mov
jp
pop
and
loope
pop
jns
push
jp
dec
jle
pop
je
je
mov
add
jne
aad
xlat
int
pop
xor
out
in
aam
jno
cmpsb
and
mov
xor
cmp
stc
imul
sub
jmp
mov
test
call
or
push
pop
jae
imul
dec
cwtl
mov
mov
aam
pop
xchg
mov
ret
inc
cmp
cmpsl
ret
imul
or
and
ds
shll
ret
and
ja
mov
enter
xor
imul
pop
xchg
aas
jmp
xor
push
insb
or
mov
pop
ss
addr16
iret
push
lock
pop
out
sub
mov
lahf
inc
sub
jecxz
mov
sbb
pop
into
or
or
daa
outsl
pop
sbb
ds
lods
lea
fdivrl
int3
data16
xor
sub
stc
or
fisubrs
fnstsw
pop
mov
out
mov
test
fmul
scas
test
cmpb
inc
cmpsb
cld
popf
outsl
sbb
ja
cltd
add
dec
and
lret
xlat
and
mov
add
or
jmp
jno
cs
hlt
pusha
sahf
or
into
out
push
jbe
lret
movsl
in
sbb
imul
ljmp
fwait
aam
or
and
xor
sub
or
cmp
pusha
scas
fwait
jbe
push
aas
pop
pop
inc
testl
jo
and
sbb
pushl
lret
rcr
imul
and
push
insb
popa
xchg
mov
in
data16
mov
jmp
loope
aas
insb
mov
nop
push
mov
mov
mov
or
orl
sbb
imul
adc
out
and
sub
and
clc
xchg
cltd
fsubrs
hlt
mov
dec
sub
mov
pusha
adc
dec
dec
xchg
loop
mov
jl
loopne
pusha
fcmovnbe
mov
int3
mov
add
jnp
or
inc
data16
popf
scas
jae
fildl
cmp
push
insl
inc
inc
lret
jb
loop
in
lods
cmp
aaa
outsl
out
movl
add
or
dec
and
pop
sarl
movsl
aam
lahf
xchg
out
sti
aaa
jl
lahf
mov
out
mov
cmp
pop
push
jmp
pop
sbb
jnp
mov
push
cmpsl
lret
inc
cmc
cmp
fldenv
pop
cli
int3
sbb
mov
repz
mov
pop
in
jmp
clc
mov
or
cmp
add
and
leave
mov
jb
aam
out
dec
std
shll
ret
push
fisubrs
and
repnz
mov
clc
cwtl
aam
lcall
xchg
add
or
xor
ds
pop
jmp
inc
xchg
in
in
ret
dec
outsl
push
dec
mov
scas
cltd
mov
mov
jmp
dec
inc
cld
loope
xor
clc
or
adc
ds
clc
sbb
mov
jl
sahf
pop
jecxz
test
sub
mov
xlat
inc
xor
pop
mov
mov
pop
xor
jae
cs
mov
adc
repz
mov
scas
fistpl
mov
jmp
mov
in
sti
movsl
aam
test
or
sub
lcall
repz
xchg
aad
outsl
mov
jl
cmc
repnz
and
movsl
jo
imul
mov
and
pop
sbb
mov
cmc
xchg
mov
jg
lock
test
jne
int
push
scas
jp
stos
jnp,pn
rcll
push
mov
movsb
xor
aam
in
fsubl
xor
pop
neg
cmpsl
dec
fcmovu
notl
aas
or
cltd
sub
dec
scas
and
out
movsl
xor
fsubrl
das
ret
rclw
mov
and
mov
push
cmp
pop
jmp
xor
jb
cmp
bswap
in
pop
push
adc
mov
loope
lahf
add
insb
inc
add
pop
or
in
mov
cwtl
aad
int3
adc
or
loop
mov
jb
jbe
scas
mov
shrl
sbb
outsb
movsl
add
cmpsl
stc
mov
jg
jnp
dec
aam
inc
shl
and
sub
popa
sub
cmp
fwait
test
adc
mov
inc
xor
xacquire
jns
sbb
and
add
push
pop
pop
mov
pop
adc
pop
and
cld
xor
or
lock
mov
imulb
adcb
ret
por
stos
ja
pop
icebp
dec
push
lcall
and
xchg
pop
pop
adc
cs
das
dec
out
or
test
xor
jne
jb
jne
gs
push
sub
and
movsl
inc
and
out
out
or
mov
fsubr
inc
aaa
mov
arpl
add
pop
lret
push
xor
jne
xchg
dec
popf
fs
jnp
push
xor
fs
pop
in
lcallw
pop
rcl
mov
sub
icebp
jne
jnp
movsb
mov
in
add
pop
mov
push
mov
loope
cwtl
inc
or
and
movsl
or
addr16
dec
mov
push
test
pop
loop
pushf
sub
mov
inc
rcll
mov
cld
insb
inc
pop
sub
xlat
xor
xchg
lods
adc
mov
jl
xor
inc
cli
hlt
sbb
pop
adcb
push
and
sti
imul
dec
jno
lret
inc
lret
std
xchg
add
sub
je
std
loop
and
pop
xchg
cmc
jns
ret
push
dec
jl
sbb
mov
cmp
xchg
ss
popa
sbb
jae
mov
gs
jnp
call
cmp
cmp
ss
bound
mov
mov
out
cmp
aad
adc
mov
adc
rclb
or
mov
dec
push
roll
xchg
inc
loope
clc
push
and
adc
sub
add
mov
movsl
pop
mov
negl
pop
loop
loope
xor
push
mov
mov
or
jle
jmp
icebp
or
sti
fstl
adc
out
jne
jns
and
pop
test
mov
insb
cmp
aad
mov
push
aad
jecxz
dec
jg
cmpsb
daa
mov
push
push
je
jnp
jecxz
movsb
popa
mov
daa
repnz
inc
stos
sub
mov
cmpsb
or
xchg
sbb
cmp
in
ds
push
scas
xchg
mov
mov
and
popf
sbb
shll
fdivp
vpsadbw
cmpsl
inc
call
pusha
jmp
rcr
sub
mov
jge
js
pop
push
std
leave
fldenv
jl
and
cmp
repz
rcrl
adc
aam
in
lahf
ljmp
mov
pop
push
mov
push
mov
jge
jp
stos
sbb
mov
xor
push
insb
dec
push
jne
mov
add
aad
shll
or
imul
test
dec
jb
notl
inc
addr16
in
xor
jmp
pop
or
xor
cmp
pop
push
idivb
fld1
mov
inc
leave
arpl
clc
jbe
xchg
inc
data16
sbb
test
sub
mov
loopne
fsubrl
cmp
mov
push
lock
xor
dec
pop
xchg
sbb
mov
shll
xchg
dec
dec
popa
adc
sbb
bound
pop
in
notb
mov
leave
dec
inc
ja
lret
jmp
dec
jp
inc
int3
xchg
aam
gs
das
xchg
mov
leave
aas
ja
lcall
repz
pop
mov
push
push
sub
sbb
push
pop
and
and
mov
jb
xor
into
mov
jl
test
cli
out
mov
push
es
lahf
and
mov
cmp
push
pushw
xor
push
inc
dec
nop
loopne
mov
mov
lods
shr
or
push
dec
into
add
pop
outsb
call
xchg
push
mov
pop
mov
mov
iret
mov
mov
out
adc
push
jmp
cmp
xchg
jp
or
cmp
cmpsb
lods
js
xchg
adc
pop
lahf
sahf
pop
je
jmp
inc
jecxz
rcll
movl
lahf
or
adc
xor
in
mov
dec
mov
outsl
inc
out
xchg
jb
push
mov
clc
pop
ljmp
sub
push
mov
shlb
mov
cmp
repz
or
push
xlat
push
shll
rcrb
gs
mov
cmp
aaa
mov
dec
sub
loopne
imul
dec
dec
pop
jbe
fistpl
adc
mov
xor
pop
mov
orb
sub
test
push
scas
imul
jge
jnp
stc
mov
cmp
cmp
imul
mov
mov
subl
repnz
mov
hlt
sbb
enter
repz
fs
pushf
cli
lcall
rcll
adc
or
mov
pusha
imul
out
shlb
lahf
jno
jb
add
mul
mov
or
pop
test
push
popa
sub
jecxz
jge
mov
pop
adc
pop
out
lods
loop
pop
movsl
xchg
lcall
push
es
dec
enter
add
add
push
mov
mov
ljmp
insl
es
jle
xlat
mov
mov
pop
popa
stc
lods
fwait
add
jecxz
gs
xchg
roll
cltd
push
cs
mov
mov
outsl
cmp
push
cwtl
orl
aad
mov
pop
lods
je
std
pop
inc
jbe
mov
loop
sti
mov
or
lds
mov
and
adc
aad
nop
mov
sbb
mov
dec
jno
fisubrs
dec
dec
sbb
stos
ss
xor
shll
mov
inc
push
jo
out
aam
mov
and
cmp
aam
cmpsl
add
adc
adc
mov
js
push
sub
jge
mov
or
or
int
jae
cmpsb
mov
or
jle
stos
jns
xor
xchg
mov
ret
out
mov
add
mov
sahf
adc
dec
sub
lret
sbbl
inc
por
adc
mov
inc
jns
and
inc
movsb
and
loope
jb
jmp
fidivrs
push
pusha
arpl
test
jl
pop
adc
int3
imul
jmp
out
sub
iret
jmp
mov
or
xor
popa
mov
in
fiaddl
mov
lock
arpl
cmp
jge
adc
push
clc
xor
fimull
push
lock
ja
lds
jb
or
fcom
je
sbb
add
mov
sbb
inc
cmpsl
add
aam
push
sbb
dec
icebp
cmp
mov
jns
ret
jle
popf
xor
mov
xor
mov
ss
aas
mov
data16
mov
mov
pop
nop
lcall
dec
jle
mov
out
mov
dec
jmp
mov
xor
ss
call
jle
sti
push
lods
dec
sarl
outsb
dec
cld
outsl
cmovno
add
jnp
movsl
sbb
mov
push
mov
mov
cmpsl
insb
ja
in
mov
pop
stos
add
int
inc
pushf
cmpsl
mov
sbb
jl
icebp
sub
ficoml
push
add
enter
pushf
rcrl
pop
adc
cltd
or
shll
lds
mov
jp
push
fisttpl
add
icebp
jecxz
mov
cltd
jno
loopne
mov
sahf
mov
rcrb
inc
test
and
into
test
out
js
xor
lahf
je
arpl
loopne
mov
jae
pushf
ret
outsb
pushf
lods
loope
sbbb
movsb
cld
in
vmread
pop
pushf
xlat
lock
adc
std
mov
out
daa
test
add
lret
outsb
sub
and
and
mov
lahf
xor
pop
test
fwait
and
add
push
sbb
je
add
push
popf
scas
cmp
and
xchg
pop
pop
cld
xchg
icebp
fdivrs
or
mov
rcrb
dec
into
push
xor
subl
and
negb
nop
pop
and
and
jg
popa
mov
push
movlps
sbbb
scas
jge
or
jecxz
push
adc
rcll
sti
fidivrs
nop
and
bound
imul
daa
mov
repnz
mov
cld
sub
cmpsb
mov
dec
mov
cmp
cmp
jge
dec
add
push
lret
sub
jnp
fnstenv
dec
jns
mov
loope
into
mov
fimull
in
push
add
mov
xor
movsb
ljmp
loop
icebp
mov
cmc
sbb
adc
mov
hlt
inc
fsubrl
test
mov
jno
test
decl
cmp
push
and
push
add
in
cs
clc
xor
cmp
jb
pop
lret
xchg
bound
mov
je
cld
lahf
hlt
sub
add
or
dec
test
jb
pop
push
and
jns
lahf
aaa
gs
and
push
movsb
mull
test
ds
mov
fldcw
into
sub
rcrb
ljmp
jb
scas
adc
and
int3
movsb
sbb
xchg
dec
xchg
movsb
push
loope
imul
enter
jl
stc
cmpsl
mov
dec
xor
pop
adc
push
push
push
int
sub
enter
add
lret
jne
jno
int3
sub
inc
inc
cmpsl
xchg
xchg
in
adc
xchg
mov
fcompl
aaa
pop
or
xchg
xchg
addr16
std
mov
repz
inc
mov
push
push
shlb
add
mov
das
ret
dec
or
mov
decb
mov
sbb
loopne
jbe
sub
sbbb
stos
cmp
popa
jbe
outsl
mov
and
and
push
adc
mov
inc
test
xor
cmpsb
add
inc
sbb
xchg
je
test
scas
jl
dec
mov
fxch
add
add
or
dec
clc
daa
xchg
rcrl
into
push
in
andl
test
jp
mov
sbbl
and
out
dec
lods
jg
pop
cltd
mov
and
pop
push
push
push
or
push
pop
inc
lret
test
add
subb
cltd
out
fbld
or
outsb
mov
popf
pop
jbe
mov
mov
fwait
lret
leave
ja
cmc
sbb
cmp
inc
std
sub
jo
in
push
sbb
mov
es
hlt
add
sti
xchg
cmpsl
out
mov
fidivs
test
inc
stc
rol
sbb
mov
lahf
push
lock
mul
jbe
sub
inc
test
push
sbb
daa
aam
adc
cmp
lods
cmp
fadd
imulb
push
and
adc
sbb
add
add
dec
dec
out
jmp
sub
dec
mov
ret
inc
sub
xchg
sub
enter
pop
jbe
mov
lret
test
paddsb
xlat
jecxz
fcomi
in
lods
pop
xchg
cmc
push
lret
add
in
adc
xorl
mov
jp
add
mov
fcomps
inc
loop
xlat
push
mov
jne
mov
icebp
push
sub
test
aaa
shlb
adc
or
xorb
dec
jne
dec
ja
mov
push
mov
shll
stc
push
enter
scas
or
add
scas
jle
add
repz
out
popa
neg
xor
repnz
mov
sbb
mov
adc
inc
inc
mov
cld
dec
lods
out
shl
rcrl
inc
pushf
mov
mov
dec
cmc
ljmp
mov
hlt
cs
into
or
mov
mov
bswap
mov
adc
enter
repnz
lahf
test
push
mov
cmc
std
xor
pushl
xor
inc
xchg
daa
inc
xor
cld
sbb
jno,pn
repnz
add
loopne
icebp
xor
inc
stc
cmp
add
daa
adc
lods
pop
push
push
add
jge
jmp
stos
ror
cmp
fnsave
les
neg
addr16
mov
mov
cld
roll
bound
insl
dec
mov
jo
aad
mov
fimull
xchg
ljmp
fidivrs
outsl
mov
inc
arpl
ja
andb
push
xor
dec
cltd
dec
xchg
xchg
out
jp
js
cmpb
test
int3
sbb
xchg
stos
subb
call
je
xchg
ret
pop
jp
addr16
or
sbb
jmp
fdivrl
aaa
jae
mov
daa
ljmp
push
and
mov
fildl
js
jp
aaa
fcoms
jle
mov
ss
mov
mov
das
adc
filds
lret
adc
add
mov
loop
add
mov
frstor
add
xchg
add
daa
inc
pop
mov
pop
pop
xchg
jge
out
pop
pop
leave
nop
jne
add
mov
pop
lret
xor
adcb
mov
subl
adc
add
lret
loop
popf
push
cmc
xchg
aaa
movsb
pop
xlat
mov
push
dec
xchg
jb
cmc
notl
mov
mov
cmp
cs
lcall
popa
xchg
jl
cmp
fmulp
mov
lods
data16
or
lret
sub
add
shll
sbb
in
add
cmpsl
pop
andb
pop
popa
mov
std
sbb
jo
mov
movsb
dec
adc
mov
adc
or
sbb
mov
mov
jbe
pop
xor
movsl
push
push
sub
stc
popa
adc
cmp
xor
es
or
out
adc
xor
pop
scas
clc
lods
push
shrb
aad
add
cltd
ffreep
das
dec
les
xlat
sbb
add
fcmovu
icebp
and
in
imul
in
jo
shlb
cmp
mov
sbb
xor
stos
sub
sbb
out
in
mov
adc
push
stc
dec
aas
sar
mov
xor
std
cmp
adc
es
popf
inc
mov
out
loopne
lds
mov
adc
sti
in
mov
mov
repnz
inc
push
clc
pusha
out
mov
push
xor
fdivrs
cmp
fistl
rcl
inc
xor
lret
mov
inc
cmp
dec
xchg
roll
in
adc
ret
cmp
daa
sarb
cmpsb
insb
pop
rcl
fistps
ret
and
mov
sbb
cmp
jge
xchg
sub
xor
sub
add
scas
clc
les
movsb
cmpsb
xchg
in
adc
call
sbb
add
outsl
and
roll
aaa
loop
or
mov
cmpsl
cmp
fnstcw
mov
adc
aas
pop
loopne
enter
sti
mov
adc
push
and
inc
insl
nop
cmp
enter
jp
mov
cli
mov
fucom
sub
mov
sbb
aaa
das
xor
icebp
mov
or
jb
sbb
mov
mov
xchg
test
sub
in
pop
mov
xchg
jmp
lea
mov
ja
test
mov
xlat
test
ja
mov
add
movl
imul
xor
mov
popa
mov
add
les
in
pop
adcb
fdivl
icebp
outsl
enter
sub
push
mov
fmuls
mov
push
test
cmp
pop
mov
loop
pop
call
in
cmp
or
hlt
lret
xchg
out
adc
std
mov
imul
pop
cmp
clc
add
add
or
xor
icebp
mov
jbe
and
or
popl
mov
aad
enter
jp
rclb
aaa
sbb
sub
bsf
and
movsl
fwait
mov
push
aad
js
outsb
sbb
test
push
jp
xadd
data16
hlt
orb
sbb
mov
jnp
or
mov
aad
arpl
ds
ret
cmp
or
mov
mov
ret
xor
out
lret
mov
sbb
or
cmp
push
fisubl
insl
adc
test
cltd
leave
mov
inc
test
push
sbbb
xchg
xor
fisttpl
cmp
mov
mov
add
and
or
call
cmp
sbb
out
cmp
mov
neg
rorl
aad
pop
ror
pop
sub
ljmp
adc
mov
mov
pushf
out
dec
fcompl
mov
shll
adc
mov
dec
insb
addr16
std
ss
mov
test
rolb
and
popf
mov
mov
leave
sub
pop
sub
test
inc
inc
das
sbbl
push
jp
push
lea
pop
repz
fildll
int
push
push
push
add
lods
adc
jge
inc
pop
adc
sarb
jp
pop
xor
inc
rorb
jmp
inc
jl
and
xchg
gs
push
sahf
shrl
arpl
mov
dec
xchg
xor
pandn
imul
inc
mov
hlt
lcall
dec
les
fmulp
movsb
lock
lock
mov
mov
and
xchg
mov
xchg
push
loopne
mov
sbb
hlt
push
sbb
fsubrs
lea
mov
gs
jns
jmp
jns
pop
adc
fcomps
jle
mov
dec
jo
cmpb
jg
xor
sub
push
in
xchg
notl
sbb
scas
nop
fists
xor
dec
fisubs
xor
cmp
faddl
fs
push
push
and
push
cli
data16
cmp
dec
push
jg
cmp
dec
cwtl
setle
push
rol
cld
mov
in
push
xchg
arpl
ficoml
jb
popf
out
push
js
fwait
mov
push
bound
mov
push
pop
sub
aam
push
fwait
es
popf
test
test
stc
das
dec
shll
mov
sbbb
fcomps
mov
lds
sahf
jae
js
add
xor
imul
insl
cwtl
out
mov
jmp
adc
inc
pop
test
pusha
imul
xchg
sahf
jns
xor
int3
mov
pop
stos
sub
sub
jae
inc
jmp
cmp
aas
pop
xchg
cmpsb
push
test
push
jge
lret
xor
xor
adc
sub
xchg
call
and
fwait
movsb
jae
aam
jge
xchg
testb
in
jns
or
ss
aas
and
test
pop
sbb
push
add
mov
stos
mov
stos
fnstenv
sbb
and
lcall
push
ljmp
int
pusha
cmpsb
leave
adc
inc
push
pop
dec
dec
in
lds
dec
pop
data16
mov
dec
jno
dec
xchg
pusha
sti
lock
or
lods
add
add
bound
hlt
mov
push
in
orl
push
pop
xor
jne
add
scas
stos
xchg
sti
mov
add
xor
or
jmp
test
out
fs
ja
out
jp
cwtl
inc
out
leave
stos
push
xchg
sub
jo
pop
inc
jb
jmp
mov
je
jle
in
loop
mov
fildll
cld
inc
dec
cmp
pop
out
call
out
cwtl
test
pop
dec
pop
push
xor
in
xchg
test
in
xchg
inc
pop
inc
mov
popf
and
mov
cmp
mov
div
je
fisubs
push
jae
jne
xchg
dec
dec
mov
out
xchg
dec
adc
rcl
mov
cmpsb
dec
sahf
mov
pop
loope
into
adc
push
cmpsl
dec
shrb
or
bnd
or
dec
mov
pushl
or
xchg
fwait
out
daa
pop
mov
xor
cmp
xlat
in
pop
shll
fidivs
xchg
inc
dec
mov
jbe
cmpsl
sub
mov
mov
mov
xchg
pop
jno
lods
mov
les
xchg
push
mov
jecxz
scas
dec
int3
test
jmp
and
lea
jno
xor
cld
ret
mov
sbb
mov
inc
call
dec
pop
or
pop
dec
and
mov
movups
repz
xor
fwait
in
add
sub
in
jge
dec
mov
outsl
adc
sub
orl
cmp
push
xor
push
pusha
or
push
test
sub
inc
mov
and
mov
or
lea
xor
push
adc
xchg
dec
cmpb
aas
cltd
fistl
incb
repz
push
std
jmp
cmpsb
mov
cmp
mov
sub
dec
mov
sbb
pop
xchg
gs
cmp
pop
mov
mov
mov
out
xor
call
sub
adc
push
test
fwait
out
mov
icebp
lea
lcall
das
in
rcrb
add
mov
xchg
faddl
cmc
rcr
sub
movsb
in
jl
cmp
fstpl
pop
add
or
push
jb
shll
push
mov
das
sbb
mov
sahf
add
and
into
gs
in
xorb
xchg
movsl
sahf
sahf
adc
sbb
pusha
fs
loop
sub
insl
inc
cmp
sub
mov
test
and
cltd
mov
push
dec
dec
cmp
mov
push
imul
outsl
aad
xlat
xorb
push
jnp
sahf
xchg
xchg
cld
or
cwtl
je
xchg
dec
and
dec
lahf
aas
sbb
add
mov
jnp
movsl
mov
inc
repnz
push
adc
call
lcall
popa
test
int3
sub
sbb
jb
js
push
pop
push
outsl
inc
jb
imul
rclb
adc
jb
cmp
jp
loop
popl
push
push
adc
lea
add
pop
stc
mov
leave
aaa
add
jno
add
push
cmpsb
xchg
and
dec
mov
ja
out
test
push
add
inc
mov
lret
add
lea
icebp
lcall
in
divb
pop
popa
mov
sbb
add
es
xor
rorb
add
fdivs
xor
xchg
push
lret
pop
les
dec
dec
sbb
les
cmp
cmp
in
fisubs
xlat
jmp
cmp
xor
movsb
push
pop
scas
popf
fidivrl
into
mov
gs
hlt
rcrl
fsubs
cli
lret
sbb
sbb
dec
sub
lods
rorb
mov
xchg
daa
xchg
cmc
jns
jo
pop
popf
mov
fisubs
adc
shll
jae
mov
subb
inc
int
je
out
imul
or
xchg
xchg
lods
xchg
out
dec
adc
stos
push
inc
sarl
sbb
mov
xor
mov
add
ret
fbstp
pushf
ficompl
xchg
lea
lcall
lcall
push
ljmp
pushf
lret
and
into
out
mov
lcall
fidivs
and
popf
shrl
pop
add
idivb
jp
pop
sub
dec
add
test
jp
sub
pop
xchg
mov
sbb
xor
movsb
idivl
add
mov
aam
xor
jb
cmpsb
mov
stc
or
test
push
inc
xchg
dec
push
bnd
sub
push
mov
xchg
stos
fimull
push
insb
mov
lods
cli
push
jnp
rclb
xchg
cmc
inc
jae
das
icebp
aad
inc
xor
or
rcrb
test
stc
add
inc
jo
push
jl
lods
es
in
mov
xchg
in
mov
and
fldcw
xchg
sbb
sub
lahf
stos
fists
xor
out
jg
iret
imul
hlt
aad
xchg
movsl
mov
ret
dec
jl
xchg
rcl
inc
mov
push
je
test
jle
repz
test
sti
cmp
inc
sbb
pop
xor
test
or
cmp
xchg
xchg
mov
or
and
loope
pop
loop
push
shrb
in
mov
imul
cmc
cmp
xchg
aam
rcr
pushf
cmpsl
aas
arpl
pop
in
sbb
dec
push
je
imull
rol
pop
sti
clc
lea
cli
arpl
jmp
jl
lret
rcl
jns
adc
sti
push
sub
adc
jl
adc
mov
icebp
mull
out
push
cli
sti
push
aam
jg
out
data16
sbb
gs
aas
push
sbb
nop
out
aaa
dec
xor
mov
aam
mov
lret
outsb
daa
jo
es
mov
insb
jg
sub
sub
pop
pop
pop
mov
data16
stc
adc
push
repnz
pop
or
sub
mov
cltd
fucom
dec
cmp
jae
cmpsb
adc
popf
es
adc
mov
ffreep
jne
jp
inc
and
inc
dec
movsl
xchg
lret
lret
xchg
cmp
dec
pop
pop
pop
daa
jno
or
sub
push
loope
lock
mov
popl
sub
arpl
in
xor
push
aam
xor
imul
xor
dec
lock
cmp
sub
mov
cltd
xor
fimull
sbb
lea
mov
jle
mov
out
imulb
call
jmp
js
fwait
adcl
and
xchg
cld
jmp
jae
cmp
mov
adc
fisubl
sbb
shll
rclb
jae
lret
enter
sbb
or
pop
jg
call
dec
inc
xor
inc
into
fistpl
or
add
dec
pusha
lods
or
dec
insb
and
dec
jp
pusha
pop
insl
insb
push
icebp
nop
shrl
push
mov
cs
sqrtps
adc
jae
sub
in
jo
add
inc
push
sbb
out
push
push
jbe
mov
push
xor
and
inc
xlat
call
xor
xchg
lods
dec
les
xchg
jne
xchg
loope
and
push
mov
insl
inc
out
push
and
push
cmpsl
sbb
jle
and
ret
and
or
mov
dec
inc
ret
jo
cmp
mov
pop
inc
cmp
js
mov
sub
cmp
mov
dec
dec
outsl
add
jae
fabs
lret
data16
cmpsl
push
cltd
and
insb
cmp
out
mov
inc
push
push
or
hlt
lret
inc
ret
jle
lret
mov
aaa
mov
lods
int3
clc
call
lret
lock
out
sub
xchg
cmpsb
imul
fildll
cmp
out
test
sahf
iret
cmp
xor
pop
cs
sub
fcoms
sbb
aad
and
jmp
cmp
push
dec
xor
inc
mov
xor
mov
mov
add
sbb
div
stos
insb
xchg
mov
xor
and
in
fwait
cmp
mov
test
mov
pop
stos
ja
push
mov
adc
adc
xor
pop
sbbb
fbstp
cwtl
fwait
jb
cmp
dec
jmp
js
inc
xchg
xchg
mov
sbb
sbb
addl
stos
or
clc
aad
call
jl
std
and
pushf
push
clc
fs
int3
ja
jb
jg
lcall
and
sbb
insl
mov
push
repz
fwait
dec
lcall
lret
jno
xor
sub
inc
out
inc
add
test
jnp
sbb
jne
dec
inc
jns
ljmp
insb
movsl
stos
pop
and
mov
js
xorl
repz
and
rorb
mov
push
and
cmpsl
loop
in
xor
hlt
cmp
scas
iret
xchg
scas
jge
inc
inc
adc
out
pop
push
sbb
lret
es
push
xchg
aad
int
sub
jp
cmp
fwait
pop
pop
push
filds
inc
test
mov
mov
pop
lahf
mov
jb
mov
js
sub
cmc
outsb
pop
imul
movsb
push
rcr
dec
ja
out
xor
mov
jecxz
sbb
orb
fisubrl
dec
sbb
cmp
jl
mov
pop
add
mov
jnp
loopne
aad
aam
arpl
fs
mov
je
push
jae
loopne
fwait
inc
lock
pop
rol
iret
std
push
in
stos
xchg
xchg
xor
scas
ret
les
sbb
xor
pand
push
mov
dec
or
rorl
adc
push
movb
popa
cs
add
xor
aam
add
mov
das
loop
xchg
inc
push
jp
add
loop
insl
or
and
icebp
imul
xchg
or
out
jo
stos
fsubrp
pushf
cmpsl
adc
scas
xchg
movsl
inc
adc
out
std
sub
pop
push
push
leave
orb
dec
and
imul
insl
pop
dec
rcr
addr16
aam
push
bound
pop
jnp
popa
int
inc
arpl
jle
test
int
sub
pop
stos
rcrb
xchg
push
hlt
repz
or
idiv
xor
hlt
inc
sub
test
add
into
pop
dec
call
dec
lcall
sbb
mulb
aam
mov
enter
cmpsl
sub
cmc
xchg
xchg
xchg
sub
pop
call
fidivl
je
xchg
push
loopne
popa
movsl
mov
push
mov
sub
fcoml
jg
scas
int
loopne
addr16
jge
jl
add
enter
lods
xor
das
rcr
movsl
in
or
rorb
fsubp
push
mov
jne
pop
lret
stos
lods
mov
fnsave
les
or
jns
cld
loop
and
hlt
aam
xchg
negb
cmp
ds
andl
and
inc
sahf
jmp
data16
js
lahf
test
xchg
mov
push
ljmp
mov
mov
mov
cmp
mov
xlat
rcrl
xor
mov
mov
ja
enter
jns
hlt
cwtl
aad
enter
imul
xchg
xchg
dec
add
mov
mov
push
pusha
insl
aam
aad
push
and
cmp
add
xchg
cmp
rolb
add
rcr
inc
cmc
in
xor
cli
sahf
lock
xchg
lret
or
inc
and
cmp
cs
ds
sbb
pusha
stos
lcall
mov
cwtl
mov
pop
lea
push
cmp
gs
xchg
notb
cmc
sub
mov
sbb
cmp
les
test
adc
or
mov
fsubr
push
je
lcall
mov
ja
outsl
lock
pop
in
and
les
pop
xchg
mov
mov
lcall
adc
inc
push
rolb
outsb
pop
add
andl
jg
imull
bound
loopne
mull
mov
mov
in
stc
xor
inc
dec
imul
dec
out
mov
sub
sti
push
jns
add
outsb
jns
push
ret
aad
outsl
jge
movsl
test
inc
stos
xchg
and
mov
or
bound
rorb
rcrb
mov
inc
out
sub
cmp
pop
ret
lock
setb
aas
in
dec
push
lds
xor
popf
add
aas
mov
cmpsl
out
int3
sbb
test
and
mov
pusha
push
mov
push
jge
repnz
out
or
subb
popa
hlt
into
dec
xchg
bound
gs
or
outsb
sahf
cmp
mov
fwait
adc
sbb
or
hlt
or
decl
sbb
and
push
cmp
pop
push
lahf
inc
push
mov
xchg
and
lcall
clc
jge
pushf
pop
andb
fstl
mov
or
test
mov
pop
xchg
push
outsb
dec
fsubl
loop
mov
cmp
pop
leave
inc
std
cld
repnz
jecxz
repnz
xchg
mov
adc
add
pop
cmc
sub
jp
and
jnp
xor
push
mov
into
dec
inc
ret
xchg
pop
add
mov
sbb
and
dec
push
add
jl
fists
bound
mov
sub
dec
sub
sbb
data16
lea
pop
aas
mov
sub
or
ret
cmp
push
out
jecxz
jae
es
and
hlt
outsb
ljmp
cs
push
test
gs
jmp
dec
lods
movsb
jbe
cli
icebp
xchg
push
inc
in
push
jmp
sahf
cld
fdivrs
outsb
xor
repnz
mov
mov
in
ja
stos
xchg
cs
add
pop
sub
sub
push
xchg
push
shll
lock
jecxz
or
mov
scas
mov
ror
movsb
stos
test
push
mov
push
jno
mov
test
inc
pop
push
mov
or
insb
addr16
loope
icebp
push
arpl
mov
push
dec
cltd
ret
imul
add
dec
cld
out
out
stos
jne
dec
imul
int3
cs
lock
test
jl
mov
pushf
mov
adc
push
inc
push
or
divb
push
js
and
jp
cltd
pop
leave
inc
push
outsl
sbb
jmp
xor
into
fcomip
loopne
fadd
int
lahf
add
pop
mov
iret
xor
fists
and
or
insb
bound
stos
enter
cmpsl
sub
sbb
mov
push
imul
sbb
enter
dec
aad
xlat
pop
sahf
sub
or
je
adc
ret
mov
test
iret
pushf
dec
pop
in
mov
jne
and
adc
xchg
push
mov
out
or
in
sarl
out
shrl
dec
inc
ja
repnz
int
pop
adc
rcl
pop
aas
inc
push
xlat
jmp
out
mov
dec
and
das
jp
xlat
les
or
leave
xchg
out
xchg
fisubs
das
cmp
jnp
jb
call
mov
nop
mov
jge
hlt
rorl
loop
int3
arpl
inc
cs
repz
ret
cmp
popf
mov
sarl
scas
sbb
fwait
mov
mov
fistpll
mov
dec
mov
out
pop
or
dec
filds
stos
js
mov
and
scas
popf
int3
mov
roll
cltd
lds
xchg
xor
fs
insb
adc
hlt
in
jns
or
mov
xor
mov
or
jnp
jae
add
aaa
xor
int
mov
push
pop
xor
mov
sbb
pop
pop
jecxz
dec
sub
jle
out
jne
in
adc
xchg
dec
inc
nop
and
divb
incw
sbb
add
lahf
test
xchg
cmpsl
int
push
lock
push
test
add
lret
aad
or
sub
ret
adc
cmp
cmpsl
mov
jle
pop
push
push
mov
add
and
insb
int3
push
or
push
incb
stos
sbb
loopne
pminsw
or
mov
mov
shrl
mov
or
adc
inc
push
shld
mov
sarb
inc
add
cmp
pop
pop
jle
sbb
pop
fs
testb
lds
hlt
sub
pop
aam
inc
fimull
leave
fldt
mov
mov
sbb
jbe
push
insb
cmp
rcr
push
mov
mov
cmp
push
fadds
js
push
xor
sub
arpl
xchg
mov
test
add
pop
ret
adc
push
ss
pop
push
push
jecxz
add
icebp
outsl
inc
movsl
sub
cmpl
mov
xlat
repnz
pop
mov
lods
je
sub
lock
xchg
sub
sbb
mov
je
pop
xor
mov
mov
repz
mov
int
aad
lret
int3
cltd
xor
imul
push
fdivrs
jb
or
sub
lahf
and
sbb
dec
pop
in
dec
lcall
inc
bound
push
ljmp
lret
mov
mov
mov
sub
pop
cmpsl
nop
mov
inc
cwtl
mov
add
inc
inc
hlt
xor
daa
jo
mov
sbb
add
out
or
pop
push
sahf
sub
mov
adc
xlat
enter
mov
add
cmp
imul
adc
insl
lahf
fldl
cmp
ds
ja
data16
ljmp
cmpsl
lret
mov
or
lahf
jl
outsb
das
push
cmp
and
in
adc
or
push
push
fyl2x
fstl
xchg
out
xchg
or
xchg
sbb
adc
adc
data16
xchg
push
xor
jl
adc
int3
imul
and
push
jl
mov
loop
cltd
pusha
jo
or
shll
lds
push
mov
pop
popf
sahf
das
loop
inc
mov
push
adc
jmp
fwait
lret
sahf
fsubr
lea
fbld
call
cmp
call
cmpsl
add
jns
sbb
sar
adc
jne
cmp
dec
aas
push
ja
repnz
xchg
pop
ljmp
mov
jp
leave
in
dec
popf
xor
and
mov
jae
leave
lahf
repnz
aaa
ret
scas
clc
int
cmpsl
or
sub
les
mov
adc
repnz
cmp
pusha
loope
and
and
sub
cmp
cmp
clc
enter
repnz
inc
out
cmpsb
out
mov
lods
fildl
cmp
ja
test
pushf
std
notb
pop
ja
jae
add
jge
sti
dec
mov
pop
dec
mov
arpl
jge
jae
xchg
cld
es
stc
add
aas
xlat
mov
pop
lods
sbb
and
push
sbbb
les
ror
mov
adc
dec
sti
fisttps
in
movsb
mov
repz
pushl
fwait
lock
inc
into
or
ret
jne
push
out
jmp
xchg
gs
loope
sahf
outsb
lds
push
xchg
clc
mov
in
lcall
add
icebp
loop
stos
and
cmc
push
hlt
push
mov
add
inc
add
inc
fisttps
push
mov
cmp
lret
and
mov
aad
cmpsl
test
sub
pop
and
ja
sbb
test
addr16
scas
cld
imul
scas
jns
flds
xchg
jbe
out
add
sbb
lds
inc
in
out
mov
in
xchg
push
cltd
mov
sub
arpl
ja
jno
dec
scas
jle
cs
das
stos
dec
lahf
sub
fcom
fnsave
jp
in
addr16
scas
jge
inc
ja
ljmp
jp
jg
xor
outsb
movsl
sbb
loope
leave
aad
jne
rcrb
arpl
movsb
pop
test
aam
cmc
mov
push
push
mov
pop
pop
mov
andb
add
mov
pop
sub
jo
dec
mov
mov
sub
jmp
sbb
sub
fucomp
xor
orl
fnstcw
das
fsubrl
xor
nop
sbb
nop
and
stc
dec
popf
cltd
mov
cld
cmp
lcall
dec
mov
inc
mov
in
hlt
frstor
shll
hlt
pop
clc
cmc
adc
and
lods
xor
out
dec
mov
repnz
jbe
fisubs
test
mov
in
push
fs
dec
inc
mov
cmp
add
mov
pop
dec
xchg
add
push
subl
repnz
xorl
cmp
xchg
cmp
dec
rcrb
push
pusha
xchg
mov
or
das
lock
out
in
push
adc
inc
or
outsb
mov
pop
fcmove
push
mov
ss
mov
sahf
add
roll
add
aas
dec
pop
arpl
fisttpll
or
fistps
dec
fdivp
test
mov
push
fsubrl
movsl
push
dec
mov
insl
cmp
push
sbb
pop
cmp
mov
mov
pop
jbe
inc
out
or
mov
ficompl
mov
mov
dec
cmp
orb
push
push
and
jmp
test
pop
in
movsb
push
subl
mov
imul
sbb
loop
dec
push
int
ret
adc
fsubl
cwtl
jg
das
or
into
push
xor
mov
nop
mov
ja
repz
dec
inc
cmp
sbb
mov
cli
jns
pop
sahf
adc
mov
pushf
cmp
sti
sub
push
fisubrl
bnd
dec
inc
inc
jns
in
and
stos
fisttpll
std
loopne
mov
inc
leave
call
sbb
cmpsb
cmp
adc
sub
or
cltd
mov
cltd
cltd
sbb
in
cs
out
ret
lods
iret
add
jb
dec
push
pushf
cwtl
addb
fucomip
dec
xor
xor
xor
out
insl
movsb
aaa
scas
sub
push
out
fistpl
xor
es
pop
lcall
cmp
or
inc
js
sbb
ljmp
cmpsb
dec
pop
sub
inc
rolb
xchg
notl
int
inc
int
xor
clc
jno
fldcw
dec
out
adc
and
mov
mov
jecxz
sbbl
in
loop
pop
es
pop
cltd
pop
dec
fistpl
fcomps
push
daa
gs
and
jecxz
dec
lock
mov
cmp
das
out
fst
sub
push
cli
test
repz
xor
movsb
test
push
adc
dec
pusha
lock
mov
push
fnstcw
adc
pop
or
sbb
xor
jb
cmp
jno
pop
mov
mov
sub
dec
insb
and
adcb
xchg
int
adc
sub
icebp
cmpsl
es
int3
pop
js
loope
rcrl
mov
addr16
dec
fadds
inc
cli
adc
stc
sahf
mov
mov
pusha
rolb
xor
jns
and
out
pop
or
dec
xchg
fiadds
addr16
xorb
jae
cmp
loop
imul
add
in
ljmp
and
stc
fisttpl
stos
mov
xchg
daa
cli
les
testl
incl
jmp
push
test
test
out
xlat
or
xor
addr16
in
mov
daa
mov
jb
sbb
mov
pop
js
xchg
outsl
lcall
xchg
fs
mov
mov
rolb
xor
pop
aam
mov
sub
cmp
test
shrl
pop
out
pop
push
shl
pop
insl
imul
repz
push
fnstenv
stos
and
mov
ret
jl
jg
cmp
push
xor
jge
jb
dec
push
stc
je
sbb
and
mov
xchg
popf
mov
sbb
and
xlat
cmpsb
xor
insb
lret
decl
xchg
jmp
adc
loope
inc
data16
mov
loopne
dec
mov
mov
in
inc
mov
jns
int3
mov
add
fisubl
lock
cmc
cmp
aad
sbb
movsb
into
das
icebp
xor
push
hlt
inc
nop
jl
jle
sbb
aaa
imul
cmpsb
out
sub
cltd
into
pop
flds
in
fs
pop
xchg
sub
cmpsb
daa
mov
xchg
xchg
std
xchg
loope
subl
fwait
cmp
or
repnz
jle
cld
icebp
pop
xchg
cmpsl
loopne
out
test
fbstp
gs
daa
inc
mov
fisubrs
jmp
in
aad
fstl
add
stos
adc
imul
xor
jg
ret
cld
scas
or
dec
scas
jbe
stos
lcall
mov
adc
in
sbb
aas
dec
fldlg2
aad
testb
jnp
enter
iret
dec
leave
xchg
dec
add
adc
roll
cli
loop
iret
sbb
mov
push
out
inc
movsb
xchg
mov
inc
jp
in
adc
sahf
pop
mov
leave
mov
outsb
lock
fs
pusha
idivl
in
cli
out
mov
les
add
call
adc
push
cli
mov
lds
mov
into
mov
push
test
push
lds
or
or
dec
shlb
call
add
mov
jge
mov
xor
xchg
mov
push
add
ds
out
fs
inc
adc
mov
cmc
sub
cmpsl
arpl
inc
pop
ret
or
stos
add
mov
cmpsl
dec
jo
push
cmp
add
int3
push
mov
dec
pop
or
aaa
mov
push
das
dec
sub
cli
fisttpll
scas
mov
xor
in
data16
mov
arpl
outsl
sbb
lods
test
cltd
test
and
das
aad
push
push
xor
cwtl
pop
shl
cmp
aad
add
add
cmp
sbb
lret
popa
test
mov
cld
pop
add
inc
fimuls
fwait
jnp
andb
lret
add
mov
dec
and
jg
std
jne
in
ljmp
lret
in
jmp
sub
scas
ljmp
mov
dec
inc
push
lods
add
sub
bound
inc
test
cmpsb
mov
test
xorl
cmp
and
xor
jge
lret
rcl
ja
rclb
fisubrl
cmc
sbb
mov
ds
in
pop
movsb
mov
js
pop
and
mov
xchg
aas
xchg
ds
xor
jge
into
fbld
push
arpl
push
adc
mov
popl
sbb
andb
stos
mov
nop
mov
mov
rcl
stos
push
jmp
jl
xchg
leave
into
push
int3
jmp
push
xor
scas
out
cmp
pop
enter
cmpsl
test
lcall
sub
data16
fimull
cmp
add
nop
inc
push
aad
jb
icebp
xorl
and
cmp
mov
dec
sbbb
mov
or
jo
pop
jne
rolb
push
ljmp
push
es
dec
shrb
jg
mov
mov
sub
ss
adc
inc
jo
cmp
adc
dec
or
mov
add
and
jl
mov
mov
inc
cmp
add
cmp
scas
std
xor
enter
dec
jg
adc
xchg
jbe
imul
cmp
mov
imul
enter
jg
sbb
mov
adc
insb
shlb
jns
add
and
mov
icebp
and
movsl
pop
add
adc
sub
dec
pop
ret
out
test
fnsave
imul
ja
and
ret
popa
pop
or
lret
bound
jbe
lods
push
rclb
xlat
sub
shrl
loopne
loop
rcll
pop
xchg
fxch
pop
lret
loopne
dec
movsb
inc
adc
cwtl
push
call
inc
popa
mov
mov
movsb
add
pop
mov
cmp
cltd
fs
rorl
jnp
mov
cmp
pop
mov
cmp
jmp
xchg
dec
add
cmp
jnp
lock
mov
jo
orl
ds
ficompl
je
sub
jae
jge
mov
and
lcall
sahf
repz
add
js
int3
inc
xchg
mov
lock
or
mov
and
adc
in
sbb
pop
and
pop
dec
push
pop
mov
mov
lods
mov
int3
or
dec
xchg
lahf
in
in
lcall
push
in
dec
inc
test
mov
call
cmc
mov
mov
sub
push
mov
adc
sti
sub
imull
xchg
fucomi
out
lcall
sbb
push
lock
push
xor
inc
jbe
sbb
and
dec
and
int
lret
mov
mov
aas
xor
inc
and
popa
jle
dec
cmc
fists
repnz
adc
jle
adc
inc
imul
fdivrs
xchg
pusha
ret
jge
scas
jbe
jle
sub
stos
push
and
or
mov
xchg
inc
mov
ret
adc
inc
sub
in
mov
out
mov
out
push
leave
xchg
or
mov
lret
sub
rcll
push
sub
push
xchg
popf
outsb
xorl
in
data16
push
adc
and
mov
or
das
pusha
ss
pushf
mov
pop
inc
or
call
movsb
inc
add
dec
sbb
jbe
rcrl
pushf
and
into
cs
cs
clc
xchg
pop
adc
mov
repnz
push
jns
push
sub
outsb
rclb
test
pop
int
mov
imul
fsubs
push
xchg
dec
mov
add
xor
dec
test
inc
push
inc
pop
dec
imul
aas
repz
jle
add
dec
aad
mov
mov
jno
sub
pop
repz
pushf
jo
scas
mov
sub
jmp
sbb
inc
pusha
dec
or
pop
roll
push
lods
cmp
scas
je
in
xchg
jno
icebp
fwait
ss
pop
push
push
in
sub
jno
xchg
sbb
pop
ss
int3
loope
fimuls
jge
ret
fwait
lret
nop
mov
fwait
js
sub
push
dec
divb
js
sub
push
movsl
or
inc
jp
outsb
jo
sub
leave
hlt
xchg
scas
imul
jmp
inc
sub
sub
fsubrs
imul
mov
pop
mov
test
push
mov
mov
push
sub
out
lahf
add
xor
xor
jp
mov
inc
xlat
or
mov
or
xor
or
scas
mov
imul
mov
or
pusha
sub
jecxz
sub
pop
iret
mov
pop
cmp
ja
add
loopne
mov
aad
push
pop
divb
and
push
gs
clc
aam
pop
adc
push
popa
jg
int3
repz
inc
outsl
dec
std
in
mov
and
cmp
cmp
jno
jecxz
push
loopne
cmp
ret
pop
push
lods
push
call
mov
xchg
mov
lcall
and
mov
mov
ret
xchg
inc
test
xor
lret
pushf
or
ljmp
movsl
scas
add
insl
fists
into
xchg
dec
push
mov
into
data16
je
cmpsb
xchg
fstpt
jl
pop
xchg
fadd
mov
push
or
mov
mov
aad
mov
imul
push
xor
div
stc
clc
movsb
pusha
adc
add
int
mov
or
pop
movsb
fcmovnu
mov
xor
push
daa
testb
sbb
and
mov
int
imul
sahf
xchg
inc
scas
aam
jg
sarb
pop
sbb
push
and
push
push
fadd
mov
shlb
push
or
dec
xor
js
pop
aaa
aam
mov
jecxz
outsl
mov
shl
movsb
jmp
inc
nop
mov
sbb
adc
mov
ret
push
adc
hlt
push
movsl
lods
or
shr
mov
add
or
inc
jno
loop
out
mov
lahf
in
or
add
and
jle
hlt
in
xor
mov
sti
jae
outsb
int
scas
push
push
xor
sbb
push
inc
movsb
push
aaa
sbb
repz
notl
in
push
ret
sahf
aas
mov
icebp
xor
addr16
adc
add
test
push
ficoms
test
clc
ror
or
push
daa
ja
jb
mov
daa
pop
cmp
pop
bound
xchg
sub
loope
add
mov
jg
ss
pop
xorl
cld
pop
ret
popa
jne
cltd
jmp
sti
jmp
das
pop
lods
loope
in
test
inc
loop
cmpsb
sbb
add
push
inc
ljmp
imul
pop
sbb
inc
jo
jp
mov
test
xchg
in
ja
inc
jbe
loopne
push
in
mov
lds
xchg
andl
test
divb
imul
xor
jmp
add
imul
xchg
pop
mov
daa
mov
jnp
cmp
adc
mov
xor
lods
inc
insb
xchg
rolb
inc
lock
push
pop
inc
stos
in
icebp
div
scas
loopne
lret
sub
adc
aaa
jne
frstor
lods
pop
pop
jg
call
fstpt
sbb
adcl
push
or
leave
sbb
inc
cmp
inc
pop
fs
sti
in
add
aam
sub
fwait
adc
cld
shlb
jg
das
xchg
pop
test
mov
inc
outsb
insb
cli
and
push
sbb
cli
mov
dec
inc
cmp
pop
cmc
push
push
test
pop
cmpsb
adc
js
lret
mov
loope
sbb
ret
mov
clc
pop
push
cmp
aam
enter
out
out
icebp
je
test
mov
xor
mov
sub
sbb
mov
in
test
pop
or
pop
adc
mov
scas
dec
mov
popa
and
mov
out
lret
add
imul
sbb
es
pop
arpl
add
ss
cmp
jl
sarb
mov
int
jl
lret
dec
loope
mov
dec
mov
push
pop
add
sub
jnp
fidivrs
iret
fcmovne
xchg
pop
xchg
cli
bound
ror
xor
mov
inc
mov
insl
dec
sub
and
int3
mov
dec
rcrb
sub
enter
mov
dec
jle
pop
sbbb
mov
xorl
shrl
xor
ret
pop
xchg
sub
mov
mov
mov
jge
scas
repnz
loopne
aam
sahf
dec
inc
jno
test
loope
and
jge
jnp
dec
ds
mov
add
inc
mov
dec
xchg
rcrl
fistpll
es
adc
xor
dec
ret
shlb
in
push
push
out
mov
xor
xchg
mov
adc
mov
subb
xor
push
xchg
pop
movsl
repnz
pop
inc
pop
cmp
jbe
mov
add
nop
jb
lahf
popf
sahf
and
jnp
xchg
fsub
and
dec
pushf
add
adc
pushf
inc
add
ljmp
xchg
repnz
mov
mov
shlb
fistl
in
mov
cld
xchg
sbb
loopne
mov
and
sbb
test
dec
xlat
cltd
mov
in
push
mov
xor
enter
adc
pop
test
ret
gs
out
clc
insb
cli
lret
stc
xchg
cwtd
ss
mov
testb
hlt
xchg
adc
test
sbb
add
and
add
and
jns
push
inc
add
xchg
inc
cmp
loopne
push
cmc
push
movsb
add
mov
fidivrs
repnz
push
lcall
push
lods
ficoms
jno
mov
inc
scas
sbb
cmp
imul
inc
andl
pop
fs
push
incl
mov
mov
imul
popf
cmp
sub
imul
cs
dec
repnz
stc
fidivrl
jmp
mov
add
cmp
das
add
mov
pop
mov
out
push
sub
xchg
ss
stc
mov
jmp
data16
jp
idivl
ds
jle
inc
mov
push
sub
shlb
jg
adc
mov
mov
shrb
mov
sbb
iret
in
shlb
pop
sti
xchg
fcompl
adc
lods
sahf
loopne
fcmovnb
xchg
and
fdivrs
loope
xchg
dec
sbb
pop
imul
bnd
and
out
movsb
or
xor
xchg
out
sub
xlat
stos
dec
jge
pop
adc
fistpll
mov
movsb
adc
dec
sub
pop
es
cld
sub
filds
sub
idiv
jecxz
std
incb
jmp
aas
insb
mov
sbb
aad
dec
fmuls
pop
ret
cli
fcoms
jp
aaa
xchg
mov
xchg
loopne
mov
cltd
push
lcall
sarl
pop
cmc
mov
mov
pop
add
dec
jg
jno
add
loop
pop
cmp
mov
add
xor
jp
test
insb
xchg
pop
add
pop
out
fnsave
aam
je
mov
or
lcallw
mov
jne
cmp
mov
shrb
movsb
lea
scas
mov
or
ficoms
into
lock
push
xchg
imul
inc
push
dec
mov
fldt
lcall
sub
mov
and
and
sub
fsts
push
int
pop
fs
js
fsts
icebp
in
and
jnp
fstl
jl
mov
mov
lds
pop
bound
jg
mov
mov
pusha
pusha
jae
adc
lea
std
lcall
and
push
mov
das
jne
push
push
xchg
cmpsb
aam
jecxz
lods
stos
leave
inc
icebp
add
jge
lods
cmc
lret
and
jl
xchg
xor
sbb
cltd
and
push
mov
mov
mov
and
idivb
inc
inc
or
sub
cmp
jbe
mov
cld
inc
xor
xchg
ljmp
in
push
or
jecxz
dec
out
jp
push
sbb
or
inc
inc
int
nop
fidivl
iret
xor
mov
jns
iret
jmp
push
sahf
fmul
inc
add
fsubl
mov
jbe
les
jecxz
aaa
or
mov
jne
dec
sbb
leave
iret
adc
enter
in
dec
mov
mov
mov
pop
push
inc
adc
icebp
das
dec
add
dec
adc
inc
ljmp
mov
test
xor
in
push
test
dec
jle
mov
pop
fbld
ficoml
push
mov
push
mov
or
imul
stos
push
in
inc
pop
mov
jmp
sbb
dec
aas
bound
push
clc
dec
mov
xchg
repz
lods
movsb
ja
bound
outsb
ret
movsb
add
mov
repz
mov
adc
push
popf
pop
mov
xor
je
das
or
aam
mov
cli
loop
adc
or
aas
sub
clc
pop
sub
je
and
pop
dec
addr16
push
insb
fimuls
cwtl
mov
ljmp
and
in
int3
mov
jl
cwtl
push
mov
das
xchg
out
push
fwait
mov
xchg
ds
adc
enter
in
sub
loope
push
fs
and
jmp
or
ret
sub
pop
stos
hlt
sahf
push
cli
or
mov
bound
pop
jns
mov
sub
int3
mov
pop
mov
add
jnp
sti
popa
jnp
push
and
xchg
push
mov
pop
das
ret
iret
mov
sti
inc
jl
fsts
fldt
sbb
movsl
push
xchg
rorb
push
test
es
dec
mov
mov
push
loopne
xchg
pusha
xor
sbb
std
mov
call
add
cmp
adc
jb
lahf
jg
jp
add
inc
sbb
push
test
mov
inc
mov
add
test
push
inc
mov
sti
std
fisttpll
cmpl
dec
fidivrl
cmp
push
pop
dec
and
cmp
lock
jo
stc
pop
loopne
daa
jo
pop
dec
mov
mov
add
fbstp
lds
push
jg
std
cwtl
mov
cli
mov
sub
dec
inc
loope
push
lahf
dec
es
sub
inc
dec
in
jbe
pop
ljmp
cli
outsl
test
in
or
cmpsl
fmull
jb
inc
pushf
jno
decb
adc
sbb
jmp
mov
data16
fs
ljmp
punpckhwd
ds
cmpsl
enter
inc
in
sub
jae
jbe
and
out
mov
xor
fiadds
push
xchg
mov
aas
and
xor
sahf
lods
out
test
insl
jmp
cs
inc
push
xor
sub
test
xor
cmpsb
inc
xor
push
clc
or
mov
dec
pop
jecxz
lahf
and
lcall
aaa
hlt
ret
enter
jnp
adc
sbb
sub
inc
mov
repnz
push
adcl
push
jns
add
xor
cmp
sub
lods
dec
jmp
clc
adc
cli
or
fidivrs
mov
lret
popa
dec
test
dec
inc
rorb
test
cmpsl
inc
blcmsk
xor
xor
enter
mov
outsl
in
adc
pusha
stos
ss
xlat
mov
xor
fisttps
mov
ljmp
sub
or
sti
dec
sub
adc
xor
and
lods
mov
cmp
jp
icebp
jne
movl
jae
je
jnp
mov
call
add
sbb
aaa
jno
cmp
and
rorl
in
aam
mov
shll
movsl
add
cmp
mov
lcall
out
mov
add
fnstenv
stos
mov
sub
cmc
pop
test
outsl
dec
insb
in
jle
int
push
adc
cmp
shll
mov
add
jns
mov
mov
mov
mov
cmp
fiaddl
xchg
mov
rol
sub
insl
sbb
mov
mov
jl
cmc
fimull
add
adc
lret
outsl
out
sub
xor
xlat
aam
cmp
xor
les
dec
sbb
fldl
insb
in
push
sbb
mov
push
mov
adc
cmpb
imul
push
mov
cmp
jl
test
xchg
ljmp
cmp
pop
mov
sub
ja
push
movsb
push
mov
fwait
jae
jp
xchg
sub
mov
xchg
mov
imul
mov
dec
cmc
lcall
or
jo
xchg
js
out
or
adc
sti
push
outsb
adc
add
push
mov
out
stc
pop
out
out
jp
or
aaa
xor
pop
sub
push
jae
addr16
roll
les
rorl
xchg
xchg
loopne
mov
rcrb
mov
inc
in
repnz
xor
inc
adc
adc
std
push
ljmp
push
sub
shll
ret
mov
rcrb
lock
mov
imul
xchg
in
fsub
out
xor
pop
cld
data16
stos
mov
sbb
aad
fisttps
ficoms
and
add
test
inc
out
pop
cmpsl
push
clc
push
sbb
add
adc
and
cld
clc
pop
inc
dec
mov
insb
lock
mov
adc
out
mov
xchg
inc
xor
pop
sub
xor
pop
lcall
and
fstl
jnp
ja
out
or
loope
sbb
inc
pop
push
adc
or
loop,pn
movsl
std
cld
lods
and
xchg
jae,pt
adc
mov
sahf
mov
mov
cltd
scas
sbb
cmp
sahf
daa
int3
out
add
in
mov
ret
jo
inc
clc
or
and
inc
and
adc
je
push
push
xor
push
jnp
out
lahf
jbe
cmp
mov
movsl
popf
iret
jne
sarb
iret
repz
sub
push
rcr
dec
sbb
cmpsb
lcall
in
cmp
push
xchg
not
sub
mov
adc
es
adc
addr16
sub
and
icebp
sbb
mov
sub
adc
loopne
int3
dec
inc
sub
std
lea
mov
xor
in
aaa
loope
xorl
cmc
loope
mov
cmp
rorl
cmp
call
cli
cmp
push
out
mov
mov
es
push
sbb
fistps
mov
clc
cmp
cmp
aaa
jae
lea
es
testb
or
rcl
mov
test
mov
mov
pop
cmp
mov
cmc
dec
ret
add
lods
xorl
xor
stos
sub
sahf
cmp
dec
mov
fsubrl
outsb
add
les
sbb
daa
cmp
or
push
mov
cmp
jno
out
jp
dec
xchg
xor
int3
jae
outsl
mulps
and
sarb
shll
pop
adc
les
xchg
test
inc
leave
jae
or
leave
mov
cmp
in
into
cmp
inc
test
lcall
adc
sub
lret
mov
lds
insl
popa
sbb
pop
push
pop
push
and
repnz
rcr
cltd
push
xlat
cwtl
inc
jmp
jl
rcrb
cmp
pop
and
test
addr16
mov
pusha
negb
inc
cmc
sub
cmp
hlt
sbb
or
inc
out
je
cwtl
imul
and
or
push
popf
call
pop
cmp
je
cld
cltd
insl
sarb
cwtl
jecxz
jb
out
and
jmp
popf
std
or
lds
mov
test
and
movsl
add
mov
loop
stos
call
jge
push
leave
and
mov
imul
push
push
push
cmp
dec
sub
div
add
pop
out
mov
fistps
cltd
andl
push
int
xchg
add
pop
int
xor
xor
mov
dec
enter
inc
lcall
cs
dec
andl
jnp
adc
sbb
jo
sbb
cli
ja
js
fistl
adcl
add
popa
xor
xchg
push
mov
pop
outsl
sub
mov
imul
mov
popa
adc
jecxz
leave
jecxz
adc
rcrb
inc
xchg
mov
movaps
jne
jb
shl
pop
call
loopne
mov
dec
aad
or
xor
inc
leave
lds
xchg
mov
in
cmpsb
cli
sbb
xchg
adc
or
sbb
out
loopne
sti
mov
lods
lret
rcll
jns
lods
inc
out
mov
outsb
jae,pn
mov
add
aas
inc
lods
pop
inc
xor
sbb
mov
pop
movsb
cmp
jnp
cmp
fcmovb
loopne
inc
jno
adc
push
jmp
cmp
mov
scas
fwait
xchg
mov
or
push
loopne
call
mov
cmpsl
mov
xor
mov
cwtl
mov
icebp
aam
xor
inc
mov
xchg
inc
fisttpl
xchg
push
adc
dec
mov
movsb
push
xor
loop
dec
shlb
mov
test
out
mov
dec
jns
mov
mov
aaa
pop
jmp
inc
imul
jg
push
in
imul
stc
iret
lds
shlb
dec
push
mov
mov
ja
jl
pop
mov
gs
insb
inc
xchg
and
stos
mov
fwait
out
shll
pop
dec
rcll
cld
movsb
outsl
aas
inc
or
sub
mov
jge
sbbb
jo
repz
adc
sub
out
adc
sub
mov
addb
dec
sbb
pop
adc
out
int3
ficoml
xor
pop
loopne
mov
call
and
sbb
cwtl
xchg
pop
and
dec
ss
mov
pusha
aaa
sti
xor
inc
mov
nop
cmp
xchg
shr
push
sub
sarl
mov
dec
xor
mov
add
mov
or
mov
or
outsl
hlt
mov
int3
pop
les
sub
pcmpgtb
xchg
pop
ds
mov
iret
push
lret
in
cmp
ss
bound
outsb
jb
aas
imul
jnp
repnz
fmul
mov
mov
lret
sbb
sub
das
jl
aas
or
mov
dec
adc
xchg
and
lds
xchg
dec
cmc
adc
add
icebp
jnp
repnz
adc
pop
insl
insl
icebp
cmp
mov
mov
idiv
cld
xor
mov
mov
cmpsl
pop
sub
in
ja
mov
jl
inc
test
dec
lea
jae
stc
in
sub
mov
cli
inc
mov
je
jecxz
pop
in
pop
testb
mov
jae
add
xchg
sbb
pushf
je
xchg
in
test
jecxz
fisttps
xchg
cmp
adc
xlat
inc
mov
mov
mov
sub
and
lret
xchg
sbb
rcrb
or
repnz
dec
in
or
test
rcr
dec
in
inc
ret
inc
cmp
adc
xor
rorl
cmp
jb
xchg
cmp
ja
adc
ret
scas
mov
mov
xor
bnd
leave
xlat
dec
mov
mov
jno
add
std
pop
rolb
mov
sbb
mov
outsb
xor
into
add
add
xchg
sbb
leave
or
outsb
subl
ficoms
mov
jae
arpl
inc
arpl
repnz
jo
insb
xchg
popa
adc
mov
loope
dec
sub
sbb
rcr
sub
aad
sub
int3
loop
in
imul
ffree
dec
cmpsb
xchg
xlat
js
jb
fisttps
mov
ljmp
dec
push
cmp
jmp
fsts
popf
lret
or
dec
jle
cltd
les
mov
out
mov
dec
cmp
idivb
enter
push
enter
add
adc
sahf
jnp
adc
cmpl
jmp
mov
dec
mov
xor
add
push
xlat
and
out
ds
push
repnz
dec
mov
negb
ja
out
lahf
nop
aam
loopne
sub
dec
call
or
aas
dec
cmc
push
movsl
push
lcall
loop
or
sarb
xchg
pop
push
add
andl
add
popa
dec
xchg
cmpsl
push
adc
xlat
lret
cltd
jne
rcrb
or
iret
sbb
fcmovbe
lahf
mov
fimull
mov
adc
ret
and
mov
xor
mov
xchg
cli
mov
cmc
xor
push
cld
xchg
popa
cli
push
js
inc
inc
push
lcall
mov
sti
repz
gs
enter
xor
push
jmp
mov
inc
jl
jl
insb
mov
sahf
shll
fmul
pop
push
int3
add
movsb
fs
js
jo
sub
pusha
cltd
imul
inc
cli
or
jg
xor
ljmp
loopne
test
jp
xor
lret
ljmp
add
outsb
out
sbbb
repz
ret
je
stc
cs
imul
push
stc
and
outsb
dec
adc
cmpsl
xor
pusha
shl
test
jmp
xlat
popf
or
popf
inc
push
outsb
mov
pop
sbb
outsl
cmpsl
cmc
dec
dec
jmp
ret
push
mov
push
inc
push
mov
push
mov
dec
mov
pop
sbb
xchg
sbb
ja
dec
add
add
popa
repz
inc
mov
dec
mov
and
in
xchg
jae
sahf
popf
lahf
icebp
arpl
ficomps
sub
div
dec
jle
popa
inc
inc
mov
xor
xor
dec
xchg
cli
pop
subb
add
jmp
jmp
outsb
xlat
pop
sbb
jb
mov
or
inc
mov
dec
aad
and
fimuls
and
push
xchg
pop
out
es
cmp
xchg
lods
sub
jge
dec
sti
or
cmp
mov
js
mov
jb
dec
js
lret
or
jle
lret
out
fwait
icebp
mov
xor
fistpll
mov
pushf
mov
out
xor
stos
xor
xchg
or
addl
mov
sbb
cmp
fists
mov
jg
iret
sti
adc
jae
ret
pop
dec
push
and
filds
aam
xchg
jmp
shl
mov
pop
sarl
fsubl
inc
sub
imul
fisttps
jns
push
aam
negb
xor
fadd
mov
lret
loopne
shll
or
and
sbb
das
inc
push
or
or
adc
push
cmp
lret
xchg
sbb
pushf
pop
mov
adc
jp
mov
sub
insb
inc
push
je
sbb
imul
sub
incb
inc
aad
aad
sbb
filds
lea
push
das
insl
mov
and
cs
in
imul
inc
mov
cmp
jne
inc
mov
cltd
and
mov
push
mov
xor
sbb
gs
xchg
rcrb
jo
push
enter
sbb
sahf
pop
or
add
sub
xlat
mov
add
fldcw
pop
ljmp
ficompl
inc
outsb
iret
aam
adc
and
lods
ret
fldenv
lds
mov
nop
mov
lds
mov
cmp
mov
cmp
fwait
lcall
jae
mov
mov
add
jecxz
inc
mov
inc
roll
push
jo
stc
cmp
inc
mov
cmpsl
inc
dec
inc
fsubrl
mov
lcall
cwtl
mov
inc
inc
jnp
dec
cmp
jle
jae
int
cmpsb
xchg
das
sahf
add
dec
cmp
mov
lds
pop
ds
jo
pop
cli
leave
test
xchg
fidivs
in
ds
push
cmpsb
test
loope
or
test
lahf
imul
sub
dec
mov
popf
jbe
test
cmpsb
imulb
mov
mov
shll
pusha
pop
loope
loop
shrb
lods
jnp
incl
aas
inc
mov
mov
stos
or
pop
mov
cli
test
sbb
nop
add
dec
bound
mov
xchg
pop
or
push
mov
mov
in
lcall
push
mov
pop
cmp
mov
cmpsl
mov
aas
or
and
xchg
mov
shrb
push
mov
cmp
xchg
xlat
imul
popfw
add
mov
popa
lret
sbb
test
mov
int
jmp
mov
adc
hlt
inc
inc
rcrb
outsl
arpl
shrb
pop
daa
rolw
stc
jge
and
arpl
dec
pop
jb
xor
into
fstp
xor
push
ljmp
sbb
mov
jecxz
cmp
mov
jo
leave
and
push
out
pop
cltd
js
bnd
xchg
inc
in
push
mov
mov
inc
sub
fnstenv
lock
lcall
aam
in
pushf
cmpb
pop
add
sbb
je
xor
cmpsb
and
sahf
popa
nop
mov
pushf
pop
and
xrelease
adc
xchg
cmpsb
mov
aaa
lds
add
push
pop
test
and
sub
inc
mov
dec
mov
dec
sarl
adc
ret
loope
push
add
lret
movsb
mov
push
fdivrs
repz
xchg
or
adc
jne
xchg
pop
pop
fdiv
xchg
add
and
add
les
adc
inc
inc
int
sub
adc
aad
in
xchg
stos
out
test
jne
cmpsl
stos
imul
add
inc
push
hlt
dec
fidivrs
cmpsb
dec
bound
mov
movsl
iret
push
push
in
scas
adc
xlat
inc
pop
or
icebp
movsb
imul
xor
ficompl
sbb
jg
add
add
insl
cmpsb
dec
sahf
xor
or
dec
clc
jge
xlat
mov
xor
xchg
sbb
out
inc
aad
ja
jle
pop
daa
test
scas
sub
pop
lret
scas
rclb
sbb
inc
cmc
sbb
or
ss
mov
add
movsb
mov
jns
subl
adc
andb
and
cmp
sub
ja
inc
fildll
push
sbb
inc
push
jmp
int3
xchg
inc
into
clc
pop
imul
aam
mov
inc
xchg
ficompl
cmpsb
jp
cmpsl
daa
movsb
rcl
scas
stos
std
pusha
and
dec
mov
fdivl
lods
or
xchg
aad
add
cmp
stos
arpl
hlt
or
jns
or
mov
cmp
mul
inc
fsubrp
xlat
mov
pop
xor
and
jecxz
inc
pushf
xchg
inc
sub
jle
int3
test
cmpsb
ds
mov
pop
pop
dec
nop
sub
lcall
inc
test
mov
clc
mov
stc
xchg
xchg
inc
test
jmp
sbb
push
jg
adc
test
cli
lret
lock
adc
pop
rclb
inc
les
les
dec
add
mov
outsb
es
adc
jbe
lret
mov
mov
outsl
mov
cmp
or
sub
xchg
dec
sti
pop
jnp
mov
or
notl
dec
pop
ss
mov
or
lret
add
cmp
call
ss
xor
jns
mov
pop
push
mov
jo
lds
aas
mov
sti
sub
iret
mov
gs
pusha
push
andb
pop
adc
bound
pop
mov
lcall
in
mov
or
aad
inc
sti
js
cmpb
lods
jae
stos
aad
jmp
leave
jne
mov
fwait
nop
idivl
xor
push
cmpsl
fidivs
or
pop
mov
cld
out
pop
mov
ljmp
lea
push
mov
sub
mov
cmpsl
ficompl
insb
mov
xor
cld
dec
pop
data16
or
xorl
jae
fwait
out
cli
lret
rclb
cmp
push
outsl
or
jp
mov
mov
jns
push
sbbb
dec
cltd
jne
xor
dec
jo
or
lahf
xor
fisubl
pusha
into
pop
sbbl
xor
test
leave
jecxz
pop
inc
dec
push
test
ds
mov
jg
or
jo
leave
inc
pop
and
pusha
sahf
mov
or
lock
rorb
add
jmp
mov
and
mov
jp
int3
in
std
in
shrl
in
mov
dec
sar
test
xor
sub
ss
fldcw
mov
sub
dec
add
pop
mov
pop
lock
sub
pop
push
mov
fistpll
lds
outsb
cmp
adc
out
iret
or
cmpsl
pusha
aad
out
popf
dec
outsb
xor
in
mov
test
popf
pop
xchg
repz
dec
bound
adc
dec
insl
and
in
cmp
dec
fidivs
dec
fs
push
add
aaa
addb
or
pop
push
idivb
push
mov
js
cmp
lahf
lods
jae
mov
mov
ljmp
cmpb
jl
inc
enter
lret
inc
cmpsb
scas
cmc
pop
dec
cltd
subb
dec
fisttpl
call
int
out
aam
adcb
xor
sahf
cwtl
and
fwait
xchg
push
push
cmp
outsl
ret
or
popa
je
mov
xchg
sbb
ljmp
add
je
test
jl
mov
sub
imul
push
xchg
xchg
icebp
out
pop
icebp
test
add
fstl
sub
popf
mov
sbb
ror
ret
push
mov
fbstp
stc
imul
or
jnp
inc
out
push
loopne
pop
test
push
mov
pop
jns
sub
add
xor
cmp
adc
xor
icebp
push
adc
orb
leave
addr16
fldl
pop
push
int3
cmp
push
pop
popa
jge
xor
outsb
add
xchg
inc
loope
in
shrl
popf
mov
andl
inc
push
enter
adc
cmp
jae
xchg
push
icebp
dec
movsl
pop
pop
dec
and
pop
nop
arpl
repz
out
sub
pop
ret
mov
mov
jns
fisttpll
jbe
imulb
das
loope
inc
xchg
push
inc
cltd
and
pop
pusha
outsb
jle
mov
movsl
fistps
push
aad
sahf
sbb
add
cmp
jmp
cltd
jp
pop
jle
shlb
cmp
rcl
lret
fst
fisubs
inc
imul
gs
dec
jns
and
cld
inc
pop
int3
jnp
adc
xchg
xor
xor
add
and
and
imul
sbb
cli
push
push
lcall
and
dec
pop
aas
movsb
adcb
jle
in
xor
stos
or
jnp
ja
insb
stc
sub
lock
jb
fucomi
fistl
subl
gs
push
lahf
lods
dec
daa
add
cmc
repnz
pop
leave
mov
sti
das
in
xchg
mov
adc
push
or
mov
jo
mov
inc
xor
test
pop
outsb
and
cwtl
sti
add
lret
sbb
xor
jg
pop
push
pop
fistps
sub
push
clc
inc
xchg
pop
out
stos
lods
sahf
pushf
xchg
insl
arpl
shll
xor
sub
lock
mov
push
scas
jge
mov
aaa
iret
sbb
sbb
pop
jle
push
nop
inc
fcmovnb
std
stos
leave
es
dec
repnz
pop
out
lahf
mov
adc
repz
pop
ret
aam
xchg
faddl
loope
neg
push
daa
xchg
rol
adc
sub
push
clc
pop
and
repz
int3
cmc
mov
mov
jle
xor
inc
test
xchg
adc
das
add
and
inc
lea
and
movsb
jbe
inc
push
dec
sub
sahf
push
and
xchg
jp
add
inc
xor
dec
or
xchg
cli
push
push
sub
sub
sarl
xchg
inc
cs
inc
daa
inc
xchg
and
mov
fstpl
pop
push
sbb
lock
push
cmpsl
je
mov
cmpsl
pusha
pop
mov
jle
pop
xor
test
pop
out
adc
adc
dec
mov
pop
mov
lock
daa
add
xchg
imul
insb
or
ss
call
popf
ret
add
adc
in
dec
jae
jnp
scas
lds
imul
pop
shrl
cltd
sbb
sbb
repnz
fistps
sahf
sbb
nop
push
mov
pop
jge
das
rclb
lahf
scas
xchg
sbb
inc
jp
sbb
cmp
je
dec
loope
jp
dec
or
add
lcall
lret
add
or
pop
push
adcl
ret
mov
loop
and
and
mov
cmp
fs
aam
and
je
fisubs
sub
imul
gs
sahf
fcoms
in
in
lret
and
pop
into
repz
xchg
mov
xchg
test
repnz
outsb
sbb
mov
ljmp
inc
or
movsb
inc
gs
cld
push
fsub
mov
out
and
rcll
cli
out
sbb
popf
pop
adcb
cmpsb
test
push
pusha
je
jge
aad
or
fldcw
shl
fsts
pop
aam
jl
rcll
fs
ret
je
test
lods
ljmp
pop
aad
test
push
popl
sbb
sbb
sbb
inc
inc
outsb
sbbl
fnstsw
push
pop
imul
cmp
cs
inc
mov
pop
dec
push
mov
pop
mov
test
pop
pop
pop
add
mov
aaa
pop
mov
jno
jle
mov
inc
nop
dec
jne
outsl
fadd
pop
lds
xchg
test
mov
lret
sub
inc
xchg
sbb
gs
imul
out
mov
mov
xor
xor
filds
or
in
cltd
mov
xor
in
bound
push
pop
std
mov
cmp
mov
or
mov
and
divb
sub
es
pop
mov
mov
jle
sahf
ja
frstor
push
ss
sbb
loop
dec
dec
cmp
pop
out
sbb
xor
cmp
dec
int3
lods
into
or
inc
subl
push
push
icebp
jne
incb
push
mov
je
push
cmp
aam
clc
out
mov
mov
cld
add
filds
addr16
into
andb
push
and
sbb
jns
fcomi
scas
pop
inc
test
scas
fwait
mov
push
mov
pop
js
pop
cmpsl
jmp
xlat
mov
lcall
fcompl
push
mov
jmp
jmp
jae
fucomp
dec
outsl
cld
mov
push
aaa
mov
push
cmpsl
xchg
fisttps
or
ret
adc
ljmp
push
push
cmpsb
xchg
dec
scas
fmull
dec
inc
sti
jno
or
cld
adc
xchg
mov
mov
mov
pop
test
push
shl
ficomps
jae
dec
out
push
sub
clc
push
scas
mov
test
inc
lcall
out
lds
adc
pop
sub
cwtl
sub
xlat
add
pop
int
cmpsl
fnsave
pop
scas
xchg
cli
cwtl
icebp
pusha
xor
out
inc
mov
cmp
or
xor
jae
xchg
loop
push
jp
aam
adc
lds
mov
sub
stos
hlt
push
call
testl
push
dec
ja
ror
pop
or
dec
pop
addr16
std
fbld
mov
push
inc
add
and
and
pop
adc
mov
cld
iret
or
mov
push
push
rorb
add
lods
sti
cmp
out
xchg
fidivs
jae
push
pop
notl
ficoml
orb
mov
xor
sahf
fmull
jnp
mov
testb
fwait
loopne
std
lods
and
adc
xchg
js
xchg
adc
test
enter
mov
pop
cmpsl
jne
pop
lds
fs
int
mov
mov
mov
xor
inc
cmp
dec
icebp
push
ja
call
adc
and
and
sub
stos
xchg
pushf
push
xor
ret
test
pop
test
sbb
aam
shl
mov
out
add
lods
mov
xchg
add
out
es
daa
stos
mov
pop
push
enter
lods
es
mov
aaa
and
push
aaa
mov
xor
data16
test
push
loope
test
pop
sub
pop
fidivrs
into
jbe
pop
lcall
cwtl
jp
sub
vmovss
xor
lea
dec
sbb
pushl
inc
decl
ljmp
les
sbbl
out
sub
clc
xor
jbe
pop
sbb
cs
clc
mov
dec
loopne
mov
gs
pop
xchg
leave
out
dec
jb
push
dec
push
cmp
mov
sbb
aam
icebp
sub
jmp
sbb
fidivrs
sbb
ss
imul
ds
mov
pushf
pop
scas
cmp
bound
push
jp
ss
push
push
frstor
mov
out
sbbb
inc
cmpsl
xor
xchg
test
xor
xchg
das
or
sbb
outsb
jns
xchg
aam
stos
dec
push
or
mov
cmpl
lock
cwtl
jmp
test
add
int
push
pop
call
loopne
or
push
mov
fcmovbe
arpl
mov
sti
sarb
cmpsb
ljmp
int
gs
or
xor
in
jne
mov
std
mov
mov
or
leave
cmpsl
dec
add
jbe
shlb
or
pushf
sub
fisttpl
cmp
cmp
fwait
or
jecxz
add
cmp
cltd
xor
rcrl
in
stc
lahf
outsl
adc
push
push
push
xchg
jb
icebp
dec
mull
and
pop
rclb
mov
loopne
leave
push
les
sahf
outsb
cmp
in
push
add
lock
test
add
dec
data16
fwait
xor
dec
inc
repnz
movsl
ret
pop
mov
jge
mov
pop
lret
add
cmp
sub
ret
mov
je
push
scas
inc
hlt
lahf
push
es
adc
pavgw
xchg
xorl
arpl
jecxz
xlat
nop
mov
out
sub
ja
mov
push
out
add
pop
sahf
nop
dec
mov
test
and
int
or
dec
loop
dec
loop
mov
addr16
or
scas
test
outsb
mov
insl
stos
inc
mov
mov
cmp
loopne
xchg
push
and
xchg
ret
and
jg
mov
mov
mov
dec
loop
pop
pop
sti
pop
mov
test
push
rolb
lahf
jnp
sbb
push
pop
ja
aam
xor
add
and
mov
aaa
notl
and
push
pop
sar
mov
iret
cmp
out
cmpsl
xchg
xor
imul
and
jo
mov
cwtl
push
xor
cs
cmp
ficompl
xor
in
cmp
shrb
sti
mov
jbe
cs
call
mov
shll
push
je
and
movsb
popf
mov
xchg
call
push
iret
mov
jg
or
pop
add
xchg
inc
sbb
xchg
repnz
xchg
xor
lods
and
aas
mov
mov
xlat
bound
xlat
movl
push
dec
ljmp
mov
out
enter
mov
xor
popl
ret
hlt
lcall
cld
insl
inc
int
dec
push
fdivs
lcall
fs
cmp
mov
add
inc
adc
adc
dec
out
popf
adc
std
into
xor
xlat
mov
jns
psubsw
pop
push
lods
dec
or
lock
jp
mov
stc
repz
mov
xchg
xchg
jg
lcall
pop
inc
or
sbb
sbb
add
sub
in
inc
adc
pop
ljmp
aad
icebp
sbb
lods
sub
testl
inc
fs
lock
lds
dec
xchg
lahf
test
int3
rcrl
shlb
sub
cmpsb
mov
jo
hlt
popa
pushf
adc
std
hlt
fdivs
jb
movsb
mov
dec
sbb
adc
popf
jg
jge
adc
cmp
shrb
inc
push
fsubr
sbb
xor
mov
adc
push
call
es
add
jg
pop
stos
cmp
clc
and
adc
imul
xor
imul
xchg
pushf
inc
repz
lock
push
adc
mov
ja
pop
mov
mov
movsb
jne
imul
mov
sub
faddp
pop
fs
call
sub
stc
clc
decl
adc
sbb
inc
in
jecxz
mov
push
lcall
sarb
lods
fxch
push
incl
ja
dec
push
and
push
mov
lods
or
jns
aaa
lods
rorl
mov
jl
out
daa
cmp
nop
xchg
or
shlb
les
jne
stos
jbe
lods
jbe
cli
jb
je
orl
jl
or
movsl
inc
je
push
jecxz
pop
or
jge
das
lods
pop
jo
sub
iret
inc
leave
push
cmc
imul
das
rcll
push
sub
lret
sbb
jbe
call
mov
mov
mov
push
mov
sbb
aaa
adc
jecxz
test
fmul
aam
jne
mov
sbb
jmp
pop
add
sahf
data16
lret
lcall
fs
lcall
mov
loope
adc
pop
dec
pop
out
scas
inc
push
out
xor
mov
xor
jge
cld
add
insb
and
mov
out
mov
cmp
inc
loopne
xchg
jb
adc
mov
mov
fcmovne
lea
aaa
mov
adc
insl
pop
icebp
xchg
lcall
adc
loopne
aad
popa
mulb
jo
shlb
jnp
scas
fisttpll
adc
lret
leavew
inc
jno
stc
push
and
xor
test
enter
bound
lock
into
js
lea
pop
adc
pop
out
insl
hlt
cmpsl
imul
cs
and
out
mov
or
cmc
push
push
xor
xchg
dec
into
imul
add
jns
xor
out
aaa
mulb
int3
mov
fcoms
sti
imul
pop
lcall
mov
cltd
jp
movsb
imul
mov
loope
insl
add
dec
movsl
push
jmp
dec
lds
cmp
or
test
cmp
push
decl
sarl
sub
in
out
stos
fdivrl
bound
sub
sub
cmp
test
push
aaa
cwtl
inc
mov
loope
cmp
mov
add
dec
jp
cli
mov
fs
adc
push
rcr
adc
mov
sahf
push
icebp
pop
push
push
xchg
adc
inc
loopne
mov
adc
stc
xor
dec
push
shl
dec
sub
jne
or
fadd
mov
and
pop
rorb
insl
mulb
std
sbb
icebp
push
pop
aaa
lahf
lods
xchg
sarl
mov
xor
sub
xlat
test
pop
notl
ja
cmc
jae
jns
pop
ret
inc
dec
sub
lods
je
push
xlat
add
into
pop
add
outsb
xlat
imul
mov
int
test
jl
xchg
xchg
fs
cs
js
stos
mov
mulb
stos
out
xchg
pop
sbb
rorl
pop
dec
xchg
inc
push
aam
jl
in
test
ljmp
push
lods
andb
in
outsl
jae
and
aam
mov
leave
lret
xchg
or
ret
xchg
dec
ds
adc
lcall
sub
cli
das
jp
aam
sub
jmp
mov
jmp
imul
mov
mov
ret
jns
mov
rclb
gs
jg
mov
sub
lods
add
or
rcrl
mov
or
adcl
iret
inc
push
sub
mov
jb
pop
dec
mov
jmp
dec
hlt
shll
sub
xor
or
fwait
imul
pushf
dec
loopne
fwait
cmp
lea
cmp
call
jl
sub
rcrl
xchg
inc
pusha
jbe
inc
js
aaa
movsl
mov
cmc
sub
out
push
jecxz
xchg
xor
pusha
pushf
mov
insb
jno
mov
jl
ret
pop
insl
test
pop
jae
aaa
out
mov
repz
in
mov
pop
icebp
add
lds
in
inc
mov
sarl
add
pop
out
push
stos
jmp
jle
push
cmp
push
and
mov
push
jmp
popa
sti
mov
movsb
bound
shll
addb
or
imul
add
and
pop
pop
jne
xor
dec
push
shlb
repnz
mov
lds
lods
je
jle
addr16
jmp
push
mov
es
out
mov
mov
lods
lods
lds
jns
push
jnp
loop
and
or
dec
mov
lods
xor
cli
or
inc
xor
inc
dec
pop
xchg
push
jge
pop
jmp
mov
fisubrs
fstpl
inc
arpl
push
xlat
data16
cltd
cltd
inc
scas
dec
fcmove
xor
outsl
stos
cltd
sbb
and
pop
mov
shrb
lods
cmp
mov
imul
and
inc
adc
lahf
jb
pusha
mov
aas
fiaddl
push
iret
adc
fcompl
mov
leave
lret
xor
add
adc
jmp
mov
js
pop
push
sarb
mov
sbbl
ret
ds
push
sbb
out
ret
sbb
int
cmp
inc
push
dec
mov
and
dec
ljmp
inc
add
or
and
es
into
aad
sbb
cmp
insl
mov
jle
mov
jns
xchg
sub
mov
aad
in
cmpsb
mov
insb
sbb
push
shr
insl
pop
es
sub
sahf
ds
mov
out
cltd
cs
xor
mov
and
xchg
shll
pop
fsubr
jno
lcall
and
cmpb
gs
sub
aas
dec
arpl
xchg
xchg
rorl
jmp
test
xchg
std
mov
incl
iret
outsb
scas
cld
mov
repz
std
pusha
popa
pop
push
sub
mov
jecxz
call
pop
inc
test
pop
xchg
cltd
sar
mov
mov
das
lret
xchg
add
xlat
sbb
fdivrs
jb
pop
cs
ret
pop
mov
fisttps
out
ja
loope
xchg
loope
loope
cltd
mov
xor
xchg
shll
xorb
push
inc
mov
push
andl
cmp
movsl
fwait
xor
xchg
push
push
jg
mov
jl
loop
adc
fdivs
cmp
mov
and
push
rclb
insb
xchg
mov
mull
mov
lock
adc
lea
inc
add
test
stos
pusha
sub
mov
arpl
sub
adc
adc
mov
jg
mov
xchg
jge
xchg
int3
sub
mov
dec
jbe
pop
shlb
mov
jbe
dec
pop
lret
sub
mov
mov
mov
cmp
movsb
mov
sub
cwtl
gs
sub
xchg
out
sbb
jecxz
sbb
adc
add
clc
pushf
loop
insb
cmp
jnp
push
pusha
movsb
dec
pop
out
jno
jns
lea
sbb
bound
jae
outsb
cld
leave
mov
push
sahf
in
mov
or
loopne
fucompp
or
out
inc
popf
neg
mov
push
popa
pop
jge
sbb
pop
aam
out
in
repnz
fsts
lock
cltd
lds
cltd
fimull
movsb
addr16
pop
jmp
ss
push
pop
imul
mov
mov
iret
xchg
push
test
test
pop
xchg
in
test
push
leave
jg
cmp
or
cld
cwtl
fdivs
shll
cmp
xchg
pop
movsb
xor
cmpsb
fcmovb
or
fcmovnu
xchg
mov
push
inc
in
xor
and
or
mov
dec
nop
pop
adc
xchg
test
add
movsb
adc
iret
into
stos
push
std
and
test
je
pop
jb
pop
cmp
clc
lret
or
pushf
mov
mov
inc
bound
rolb
sbb
or
aam
arpl
inc
mov
sbb
outsb
push
or
and
rcll
inc
xor
xor
sahf
cmpb
jl
add
into
jle
lods
sub
xor
dec
mov
mov
cld
in
sbb
push
pop
mov
mulb
xchg
push
dec
test
ds
sbb
lret
or
or
fsubr
out
enter
jne
push
in
jg
inc
pop
fcoml
aaa
loopne
xor
pusha
push
notb
and
xchg
in
add
divl
jg
mov
mov
mov
fisubl
push
loopne
lret
insl
xchg
mov
icebp
add
mov
gs
dec
jb
movsb
leave
xchg
push
dec
fiaddl
push
out
sbb
push
pusha
jae
orl
xchg
idivb
xor
or
push
jg
fisubs
or
hlt
cmpsb
out
icebp
pushf
pusha
stos
adcb
cmp
mov
or
ds
test
inc
rcll
rcrl
mov
mov
std
dec
ror
in
insb
cmp
cmp
aad
cmp
mov
pop
cmpsb
mov
ljmp
push
aas
or
cmp
inc
sub
addl
incl
adc
push
lds
pop
fs
and
clc
sub
out
xor
cmpb
js
cmp
stc
mov
xchg
nop
mull
add
lret
inc
bound
cltd
cmpsl
push
or
push
dec
clc
stos
dec
mov
test
jo
jmp
fstl
pop
leave
sar
shlb
inc
mov
in
sub
ffreep
push
sub
dec
lret
sub
and
push
cmp
mov
dec
push
leave
adc
pop
loope
mov
movsl
mov
or
lds
mov
pop
pop
test
mov
ss
movsl
add
push
pop
inc
mov
mov
jl
push
sub
jg
or
inc
mul
mov
sbb
pusha
cs
xchg
fldt
leave
pop
mov
sbb
cmp
lret
cmp
mov
cs
sahf
sbb
dec
repnz
lret
popw
cmp
jne
xor
out
pop
mov
scas
ss
aaa
outsb
enter
loop
pusha
mov
push
sbb
enter
dec
js
shl
dec
leave
movsl
loopne
mov
mov
xchg
jne
out
push
call
ss
xlat
das
pop
sub
jnp
in
jmp
nop
dec
je
or
scas
mov
inc
pop
dec
or
mov
out
xor
push
out
xor
pop
jmp
sbb
add
xor
jmp
fcompl
add
pop
pop
stos
inc
mov
xor
inc
ds
cmc
add
ss
jecxz
into
pop
dec
pop
adc
outsl
enter
mov
or
nop
call
or
push
fnstsw
les
lcall
cmp
jns
leave
call
aaa
inc
mov
xchg
xor
mov
jnp
mov
aad
cs
pop
lods
imul
mov
movsb
call
das
in
outsl
jmp
ds
adc
fmulp
cmp
add
test
lds
xor
cltd
shl
dec
bound
dec
push
dec
imulb
outsb
mov
mov
cmc
es
xchg
sub
sub
xor
mov
fs
movsb
mov
mov
aam
clc
or
insb
or
dec
lea
inc
sbb
int
sbb
sti
arpl
out
cltd
in
or
xchg
lcall
ret
mov
popf
inc
pop
lcall
push
sbb
loope
mov
movsl
enter
fsubs
imul
xor
add
lret
cmp
inc
gs
aam
push
push
xlat
ret
or
shl
daa
jnp
fisttpl
cmc
jo
repz
sahf
jno
jnp
lret
xchg
mov
adc
ret
pop
out
test
or
xchg
nop
xlat
roll
inc
imul
fadds
int
idivl
out
iret
pop
cltd
jg
pushf
or
mov
ret
scas
or
jae
push
test
pop
int
nop
mov
test
mov
jb
and
cmpsl
loopne
loopne
dec
mov
cld
pop
adc
fwait
clc
arpl
sub
stos
push
or
loopnew
andb
lret
mov
xchg
add
inc
std
out
fs
scas
cwtl
sbb
imul
int3
lods
je
inc
mov
fidivrs
jl
repz
push
inc
clc
mov
das
push
xor
jb
lret
lea
push
data16
mov
add
and
sbb
sbb
in
mov
fs
cmpsb
sti
std
cmpsb
mov
or
shrl
int
push
push
or
add
repnz
mov
into
loopne
push
ds
mov
fcmovnbe
xchg
cmpsl
xchg
fbld
in
gs
push
cmp
mov
je
lock
pushl
cmp
dec
fimuls
adc
repz
shll
lahf
xchg
xchg
xchg
nop
dec
dec
daa
add
or
ljmp
lods
insb
ljmp
jecxz
and
cmp
std
and
pop
cmp
je
shlb
cmc
cmp
repz
or
rorb
push
push
test
fwait
jb
insl
sub
push
sub
sbb
push
push
push
out
popf
icebp
loope
flds
push
jnp
sub
mov
jg
addb
add
jg
push
sub
mov
ffree
inc
pop
sub
bound
mov
call
xchg
mov
in
jg
lds
jg
scas
gs
mov
sbb
push
jnp
out
dec
sbb
or
and
inc
cmp
dec
and
push
aam
aaa
dec
inc
cmp
or
js
iret
rclb
and
mov
pop
in
iret
mov
add
loop
cmpsb
jb
mov
xchg
or
out
nop
pop
bound
aad
inc
jecxz
icebp
fdivrp
out
inc
lcall
push
dec
pop
and
mov
std
test
mov
data16
mov
shlb
sbb
imul
stos
jecxz
sub
cmp
ja
aaa
pop
or
fs
out
ljmp
pop
cmc
std
les
pop
push
inc
icebp
add
adc
mov
mov
and
sub
and
loope
xchg
pop
stos
std
lret
mov
mov
imul
dec
mov
jge
push
mov
adc
jne
bound
mov
dec
dec
cmc
nop
mov
push
lods
insl
bound
popa
daa
hlt
add
mov
push
adc
sub
arpl
pop
stos
sahf
push
in
into
pop
imul
add
cmpsb
orb
mov
aad
add
jl
fidivrs
stos
cmp
icebp
dec
pusha
inc
movsl
pop
shrb
xor
lahf
push
jge
das
sub
mov
xchg
mov
fsubr
sub
jnp
test
hlt
mov
jb
pop
stos
jne
lret
mov
pop
in
pop
out
mov
pop
movsl
rcrl
mov
mov
fiaddl
fldenv
repnz
ja
mov
adc
in
sub
mov
rolb
mov
mov
jmp
lods
push
jg
fisubs
call
inc
and
cmp
or
cmpsb
bound
lret
xor
lea
fistpl
mov
pop
pop
imulb
mov
fisttpll
pop
insb
mov
mov
inc
fnsetpm(287
adc
inc
cwtl
cmp
sub
xchg
mov
js
push
push
jno
cmc
enter
jl
loopne
pop
stc
and
jnp
jmp
insb
mov
xchg
sti
inc
push
pop
pushf
ljmp
jo
inc
inc
mov
sub
cmc
cltd
icebp
xchg
das
cld
bound
cmp
mov
lock
arpl
cmpsb
inc
mov
mov
push
jne
dec
mov
jp
cmp
xor
add
enter
xor
jge
xchg
scas
repz
jo
sti
faddl
sbb
fwait
rclb
xchg
xchg
inc
xchg
jle
stc
mov
sahf
test
and
rcr
pushf
jg
sub
call
lods
or
and
pop
mov
jle
fidivl
clc
pop
pop
inc
bound
pop
shr
enter
adc
sbb
not
pop
fcomp
sti
mov
mov
fisubrl
jle
subb
xchg
sbb
sbb
mov
mov
lock
xlat
adc
jns
sti
lcall
pop
mov
mov
sarb
mov
repnz
xchg
jecxz
ja
mov
push
or
les
pop
in
pushf
aaa
sbb
repnz
push
mov
movsl
mov
out
int
cmp
xchg
jge
xchg
push
add
push
leave
xor
xlat
insl
cmpsb
cmp
xchg
and
mov
loop
scas
lahf
mov
es
fsubs
add
xchg
mov
movsb
loope
xor
cs
imul
sub
mov
adc
fisubrs
in
mov
call
mov
push
mov
mov
jo
xchg
repnz
mov
in
imul
add
dec
adc
aad
test
add
lea
adc
orb
movsl
pop
out
adcl
icebp
or
shlb
xor
dec
arpl
ret
push
push
dec
pop
dec
xchg
pop
push
inc
mov
fsubs
stos
mov
fcompl
mov
jb
add
mov
xchg
pop
data16
pusha
mov
xorb
pop
push
mov
push
xor
enter
or
ss
mov
or
jns
pop
fcomip
and
mov
daa
dec
repnz
xchg
mov
sbb
cmp
notb
lcall
push
out
popa
out
cmp
int3
pop
call
mov
add
cmovle
mov
mov
mov
insl
add
cmpsl
ljmp
int3
cwtl
orl
dec
adc
cld
push
stc
jne
push
dec
popl
adc
int3
mov
stc
bound
mov
mov
jne
push
sar
push
sub
jl
xchg
ss
jns
jge
sar
xchg
sub
pop
mov
mov
jge
movsb
ret
sbb
out
call
jge
std
jl
repz
les
mov
mov
pop
xor
int
inc
dec
stos
nop
or
finit
and
and
lds
pop
insb
jge,pt
loope
les
mov
or
or
xchg
movsb
push
cmp
daa
jnp
or
sbb
ds
test
outsb
adc
xor
mov
dec
dec
scas
pushf
jp
dec
jno
mov
xorb
sbb
xor
add
icebp
dec
lock
mov
mov
or
ds
inc
jmp
mov
add
xor
inc
mov
lods
outsb
lret
sti
sbb
dec
repz
inc
popl
inc
into
shl
xor
icebp
popf
lahf
jnp
in
das
cmc
xor
out
inc
sahf
xchg
push
push
ss
jecxz
inc
cmp
xor
jae
xchg
xchg
es
jne
adc
arpl
imul
pop
adc
mov
arpl
popl
adc
push
pushf
call
or
jmp
sarb
jbe
jle
ds
mov
test
mov
insb
jb
popa
out
push
popa
push
stos
in
mov
mov
imul
repz
lds
cmp
jg
dec
adc
inc
or
lods
xchg
shrb
inc
loope
ljmp
addl
lahf
test
mov
pushf
sarb
push
lret
pop
mov
in
lods
pop
mov
push
leave
shlb
dec
dec
hlt
lods
gs
stos
mov
daa
xlat
jbe
xchg
daa
fdivrl
faddl
inc
xlat
and
xchg
test
inc
jle
dec
cmp
xchg
jnp
adc
cmpsb
das
ja
les
mov
or
out
sub
sti
shrb
imull
enter
into
cltd
imul
out
cmpsb
test
rcl
adcl
xchg
add
cmp
and
repnz
inc
xor
adcl
lret
sub
xor
add
out
adc
nop
or
lret
adc
jle
call
inc
mov
rolb
scas
cli
xchg
inc
push
out
xchg
int3
adc
or
inc
dec
jnp
imul
dec
out
mov
xor
push
rcl
aam
out
call
dec
mov
mov
cltd
pusha
mov
xchg
jae
popa
add
cmc
jmp
sub
xchg
add
movl
adc
add
xchg
imull
bound
add
ljmp
xchg
daa
xlat
adc
or
rorl
jnp
xor
outsb
adc
sbb
fcomps
movsl
hlt
and
dec
sub
jno
push
pop
cs
rcrl
xor
sub
sbb
int3
fwait
aad
or
aaa
mov
incl
data16
lds
aad
insl
outsb
insl
stc
xchg
xor
stos
movsl
adc
sbb
mov
test
mov
aas
negl
std
mov
push
iret
and
push
in
push
bound
sbb
push
adc
outsl
inc
je
lret
lea
fnop
mov
out
cmpsb
pop
orl
dec
iret
test
outsl
iret
in
negb
mov
xor
xchg
pushf
repnz
sub
mov
icebp
jns
inc
push
aad
xlat
jmp
addr16
sbb
dec
arpl
sbb
mov
and
xchg
lahf
xor
and
pop
bound
xchg
and
aas
rcrb
test
rcll
js
cmpsb
sub
out
mov
je
xor
daa
or
loopne
inc
mov
or
sbbb
shrb
push
out
sub
addl
pop
xlat
fcompl
xchg
mov
aas
mov
rcll
push
adc
popa
add
lret
add
push
lcall
xor
xchg
and
fnstsw
jo
mov
adc
data16
test
sbb
sub
addr16
mov
xchg
jb
pushf
outsb
insb
mov
cmp
into
jns
sahf
jg
icebp
inc
push
jle
adcl
xor
sub
les
sub
shll
cmpsl
sub
sub
pop
rcrb
clc
js
inc
xor
mov
lcall
pushf
mov
xchg
inc
fadd
ficoml
lods
mov
mov
sub
icebp
ss
xor
scas
sarb
rclb
pop
xchg
jne
dec
cwtl
in
arpl
sar
ret
add
inc
sbb
jecxz
mov
lds
jecxz
jbe
xchg
pop
insb
imul
repz
add
ss
dec
push
imul
filds
fcomp
ret
movsb
jb
jbe
test
stos
sub
icebp
inc
add
lahf
arpl
xor
or
cmpsl
cld
dec
stos
mov
adc
int3
lahf
lock
sub
or
enter
loopne
aaa
pushf
xor
aaa
leave
movb
aas
xchg
mov
mov
shrl
sbb
stos
call
push
or
xchg
mov
cmpsl
lds
lods
jle
xchg
cmp
or
lcall
pop
xchg
nop
dec
adc
icebp
push
lock
shlb
inc
add
mov
adc
mov
test
jg
or
shll
outsb
xchg
in
addb
xor
mov
pop
ret
cmp
lahf
push
pop
sbb
jge
test
repnz
jmp
inc
aad
imul
push
cmp
push
loopne
xlat
in
inc
shlb
mov
mov
jg
push
rcrl
insb
xchg
jnp
outsl
in
pop
in
cmp
stos
sub
pop
xchg
hlt
jmp
pop
test
cld
fiaddl
dec
xorb
arpl
js
mov
sub
scas
outsl
das
adc
ja
outsl
bnd
inc
cli
push
mov
inc
sbbb
jb
sti
outsb
int
ret
xchg
cmp
pushf
mov
mov
push
mov
adc
mov
inc
pop
insb
xor
mov
fucomip
dec
rcll
jg
popa
jle
shll
push
pop
sarl
test
ret
js
sub
push
lret
lcall
or
aam
mov
pop
repz
push
mov
shll
sbb
and
orb
mov
jb
pop
iret
pop
insl
cmp
or
xor
jg
outsl
push
mov
inc
sbb
into
mov
insl
fildll
xchg
pop
inc
mov
xchg
or
xor
pushf
jmp
add
mov
fdivrl
icebp
jns
int3
pop
aad
mov
js
mov
insb
dec
rcrl
ja
pop
push
in
fsub
jmp
setne
sbb
mov
loopnew
aad
mov
jae
inc
xchg
mov
mov
mov
incb
xlat
xor
ret
in
jnp
xlat
outsb
test
push
mov
jl
sbb
add
lods
repnz
outsb
jp
out
rorb
movsl
jl
add
and
inc
inc
push
out
mov
adc
out
add
mov
inc
jno
jno
jmp
ret
sbb
add
stos
fadds
cld
faddl
mov
rcrb
pop
mov
cwtl
add
fsubrs
mov
je
loop
sbb
mov
test
aad
mov
sub
ja
popf
or
loope
popf
inc
xor
xchg
hlt
int
ret
xchg
js
rorb
sub
push
lret
jae
lahf
shll
shlb
or
xchg
mov
adc
pop
add
dec
sbbl
add
pop
lods
sbb
int3
or
push
jmp
sbb
and
lods
push
mov
mov
nop
bts
imul
xor
pop
xchg
popa
jno
xchg
std
insb
flds
xchg
subb
mov
jecxz
or
iret
mov
jg
in
add
add
jbe
sub
test
movl
in
outsl
pop
xchg
imul
decb
dec
dec
in
daa
mov
fisttps
std
jae
sub
mov
incl
je
scas
daa
insl
xchg
inc
pop
ss
sbb
pop
jecxz
add
jnp
xchg
dec
xchg
pop
inc
xchg
test
test
and
repz
xchg
lcall
frstor
out
pushf
iret
subl
xchg
sti
sub
add
push
pop
pop
mov
testb
xchg
xchg
loope
cli
lcall
jmp
enter
sub
inc
cmc
push
push
icebp
loop
shll
scas
xchg
cwtl
loope
sub
and
push
popf
test
mov
and
inc
sbb
adc
or
arpl
cmp
in
dec
xchg
and
pop
int3
repnz
mov
add
xchg
nop
add
ljmp
mov
clc
inc
xchg
out
mov
add
xchg
bound
loopne
cmp
xchg
divb
jb
int
icebp
cs
mov
dec
sub
imul
jno
inc
mov
dec
stos
push
sub
fistpl
inc
mov
movsb
push
testl
add
pop
loopne
jns
xorl
adc
and
stc
loop
cmp
cmp
xchg
inc
in
orl
jecxz
and
push
cmpsl
imul
add
je
daa
mov
fcoml
push
push
xor
das
jg
adc
xchg
jmp
xor
leave
ss
rorl
jb
dec
rclb
xchg
loop
pop
pop
dec
clc
scas
or
jno
dec
outsl
sbb
sti
and
pop
sub
xor
cmp
cltd
neg
mov
xchg
add
shll
ds
rolb
test
mov
movlps
pushf
xor
loope
in
movsl
insl
add
push
push
lahf
pop
pop
ds
push
out
sbb
stos
adc
adc
fiaddl
fwait
leave
sub
cld
subb
pop
outsb
movsb
xlat
int
ds
jmp
daa
pop
or
jnp
inc
dec
pushf
fadd
sub
xorl
or
outsl
add
mov
mov
out
mov
loope
mov
mov
cmpsb
pushf
xchg
and
adc
xor
lcall
push
mov
aam
in
popf
dec
jne
push
cmc
push
or
xchg
jp
pop
in
xchg
ret
loope
loop
jnp
cmpsl
dec
les
cmpsl
std
ljmp
mov
push
push
std
gs
cmpsb
and
and
aaa
cwtl
mov
pop
and
mov
mov
shrb
lock
mov
loop
dec
dec
xor
out
pop
out
in
fsubs
std
mov
pop
mov
sub
xor
mov
push
in
lret
popa
jecxz
and
call
pusha
inc
mov
or
pop
std
ret
cwtl
mov
xor
mov
push
mov
pop
sub
cmp
mov
loop
push
roll
ja
ds
jno
js
push
ret
sarl
lea
fbstp
dec
fidivrl
cmpsl
dec
mulb
lea
mov
jne
jae
jecxz
and
mov
cwtl
movsw
push
xor
or
and
cmp
cltd
cmc
std
or
jmp
dec
jg
mov
mov
jle
sti
ss
mov
int
pop
xorps
sbb
fbstp
popf
test
mov
sub
out
call
out
and
not
fcomip
mov
into
rclb
mov
dec
dec
jae
xchg
adc
jo
pavgb
in
addr16
fwait
inc
jbe
adc
inc
lahf
pop
loop
icebp
dec
cld
jne
lock
xchg
mov
lods
lahf
add
add
mov
jmp
mov
mov
inc
test
fwait
shrb
sbb
cmp
cmp
ja
add
push
xchg
cmpsb
pushf
pop
stos
xor
xor
xor
sbb
xchg
cmp
inc
lahf
inc
pushf
mov
add
hlt
jmp
bswap
jno
jnp
fcoml
sub
aad
xor
pop
loopne
pusha
push
jp
or
test
xor
in
push
fldenv
pop
sub
cmp
or
jo
rcl
add
out
cmpsb
negl
fistpll
adc
pop
jnp
loop
bound
mov
pop
jg
mov
popa
lahf
sub
outsl
dec
ffree
mov
xor
xor
pusha
popa
mov
iret
fists
xchg
xor
scas
scas
mov
decb
jo
das
and
jge
mov
xchg
dec
imul
in
sub
sbb
mov
sub
fadds
out
out
push
xor
mov
push
scas
stc
test
inc
pop
imul
bound
or
mov
into
out
inc
dec
and
cs
xor
iret
xor
mov
dec
add
push
cmp
adc
test
lret
movsl
lock
mov
int
lods
hlt
pop
test
or
or
xchg
mov
mov
adc
pop
faddp
dec
mov
es
in
jle
pop
dec
js
lahf
addr16
mov
ljmp
dec
stc
andl
inc
int
in
mov
sub
jnp
mov
orl
call
fadds
jno
in
and
dec
addr16
and
stos
inc
lds
pop
mov
xor
fldl2e
jl
or
and
cli
ds
bound
xchg
ret
in
rcrl
mov
add
and
loope
xor
xchg
cmpsl
leave
cmc
stc
mov
xchg
pop
jge
push
iret
mov
xchg
add
and
push
mov
popa
sti
mov
add
mov
hlt
daa
xchg
fs
xlat
stc
xorb
popf
test
sbb
loope
jae
orl
dec
or
mov
jb
mov
sbb
jnp
icebp
cltd
movsl
fwait
add
push
dec
in
imul
jae
mov
mov
sbb
stc
xchg
and
mov
cs
xchg
out
pop
xlat
dec
xchg
test
in
lret
test
fsubs
sahf
icebp
addr16
dec
pop
pusha
dec
inc
mov
or
xlat
cld
mov
pop
sbb
push
and
iret
mov
pop
cwtl
nop
lds
pop
dec
add
jo
cmp
shl
add
xor
ds
mov
or
fimuls
push
movsb
lret
outsb
jge
mov
xchg
dec
xor
int3
jecxz
ss
push
in
xlat
fimuls
je
repz
mov
lods
and
test
bound
pop
jg
pop
out
mov
adc
push
je
into
negb
dec
in
bound
arpl
subb
adc
fcomps
cwtl
ja
loopne
rolb
in
push
mov
add
xor
scas
stos
ret
fidivs
sub
call
cmp
bound
bound
arpl
mov
cmpsb
out
or
sbb
test
roll
test
mov
mov
bound
and
aad
push
jg
sub
mov
add
add
mov
mov
scas
push
popf
and
sub
push
mov
push
xchg
and
ljmp
lret
xchg
mov
pop
jecxz
pmaxsw
mov
or
xchg
mov
iret
xchg
enter
outsb
out
inc
cmp
ffreep
into
sub
push
pop
pop
ja
test
jae
mov
popf
and
mov
mov
lret
jp
cli
insb
push
mov
adc
scas
sbb
push
arpl
lock
jbe
shlb
cmp
cmp
fistps
fst
pop
add
cmp
mov
or
into
sub
mov
aaa
xchg
jg
xchg
xlat
adc
stos
jg
and
jns
adc
fsubl
mov
lods
cmp
adc
jne
add
ja
insb
mov
lods
mov
mov
cltd
xor
les
cmp
aam
mov
mov
movsb
mov
adc
popa
push
push
jb
push
jge
out
ljmp
pushf
pop
out
mov
inc
bound
fcomp
ret
cmp
pop
test
cmpsl
lret
enter
fidivs
mov
pop
sbb
dec
and
testl
stc
jg
rcrb
das
cmpb
lock
push
cmp
cmp
jecxz
xor
mov
inc
xor
xchg
insb
push
test
cmc
xor
mov
shl
ja
sbb
movsl
dec
stos
jnp
xchg
shl
shll
jne
xor
mov
push
jle
sbb
jo
mov
push
add
ljmp
cmpsb
das
xor
call
or
cmc
xor
xchg
or
push
sbb
cmp
add
in
fdivrl
cltd
pop
enter
and
mov
subb
dec
adc
mov
subb
fiaddl
fwait
xchg
xlat
notb
mov
lds
sbb
stos
or
sbb
or
push
cmp
xor
cmp
pop
lea
insb
jbe
rcrb
out
push
sbb
lcall
jge
jno
pop
stos
cmp
push
bound
popa
xor
lock
push
icebp
adc
jg
add
nop
ja
ds
call
add
clc
xchg
dec
shr
and
imul
sbb
arpl
sbb
sub
add
fldcw
xchg
orl
pop
or
out
leave
xor
fidivl
test
lret
pop
mov
data16
mov
data16
mov
pop
adc
push
mov
and
push
mov
push
aam
imul
inc
clc
push
jl
es
lock
out
inc
sbb
inc
xchg
imul
sbb
sub
jns
and
loop
xor
lock
jbe
pop
adc
fnstenv
push
sbbb
pusha
jno
add
dec
and
mov
pop
stos
addr16
push
dec
add
popf
cmp
lret
push
sarb
sub
and
mov
enter
push
mov
pusha
inc
mov
je
cmc
or
cmp
pop
mov
rcrb
sub
mov
push
sbb
mov
or
rcrl
inc
xchg
mov
pop
cwtl
popf
sbbl
push
mov
sub
adc
xchg
inc
push
push
stc
push
add
ss
call
and
mov
mov
movsb
leave
pop
push
sub
clc
adc
movl
pop
and
mov
clc
rep
pop
loope
into
xor
pop
lods
popa
pop
sbb
and
xchg
fmull
repnz
add
les
iret
mov
add
aaa
mov
sub
fdivl
repnz
mov
imul
or
out
mov
in
adc
out
sub
lock
mov
pushf
clc
dec
out
loopne
ljmp
mov
mov
mov
jno
pop
out
out
and
lahf
sub
cld
mov
dec
pop
lret
jno
lahf
iret
mov
dec
jns
nop
rorl
fbld
and
daa
sub
loop
mov
cmc
imul
xor
insl
xlat
and
xchg
lea
je
cmpsb
sub
or
out
ss
or
inc
lock
xchg
fstpt
and
sub
adc
mov
lods
xorb
push
das
incl
scas
inc
dec
aaa
cli
adc
lds
int
add
inc
std
nop
adc
mov
repnz
incl
pop
mov
push
das
outsl
jns
std
imul
test
inc
stos
idivl
scas
imul
mov
gs
xor
icebp
jle
and
mov
or
enter
jo
stos
adc
xchg
out
xor
mov
cmc
stos
pop
add
add
xor
inc
lock
mov
pop
cld
jae
mov
and
repz
mov
lret
test
xchg
sahf
arpl
sub
adc
jecxz
hlt
in
dec
lods
xor
sbb
push
cmp
ja
mov
call
and
mov
inc
in
outsl
push
push
cli
das
out
mov
movsl
pop
repnz
push
lcall
mov
mov
dec
aaa
repz
jne
and
popa
jbe
sbb
add
pop
out
jge
lahf
fcmovnu
ret
iret
jbe
insb
inc
pop
sbb
jb
cmpb
xor
xchg
fs
out
repz
xchg
lods
xchg
gs
daa
push
push
in
in
daa
mov
leave
das
test
stos
fcomps
addb
imul
or
jb
xchg
xor
sbb
xor
or
sub
cs
scas
in
cmp
mov
dec
test
xor
cmp
inc
into
imul
std
xchg
out
pusha
mov
push
dec
pushf
xor
popa
jno
sbb
xchg
jnp
rol
rol
imul
inc
dec
test
outsb
into
ficoml
push
jg
pusha
cmp
jecxz
mov
lods
or
mov
mov
push
push
pop
sbb
shll
adc
adc
cmpsb
jl
notw
popf
sbb
mov
in
dec
jmp
testb
lds
fidivl
shrl
pop
mov
add
addr16
fisubrs
mov
lds
jbe
fsubl
sub
or
icebp
jmp
sub
ficoms
rcll
dec
mov
prefetch
loopne
dec
push
ficompl
jbe
nop
jns
repnz
popf
enter
aas
movsl
mov
out
shl
out
dec
dec
dec
cltd
mov
jecxz
or
or
mov
inc
out
adc
xchg
jae
mov
int
xchg
dec
andl
insb
pop
and
inc
lods
xchg
call
js
dec
movsl
imul
xor
iret
pusha
pop
sbb
addr16
cmp
loope
or
repnz
mov
loopne
dec
je
cmpsl
sub
sbb
push
je
imul
inc
sbb
jmp
push
mov
aam
cli
fprem1
cs
in
cmpb
sbb
test
fdivl
pop
ds
xchg
sub
adc
imul
rcll
daa
lcall
cs
adc
add
scas
push
dec
or
shl
inc
sub
push
pop
and
xor
xchg
push
pop
xchg
dec
dec
hlt
pusha
jns
mov
or
mov
je
out
mov
rorb
jg
sbb
gs
repz
or
xchg
push
enter
dec
stc
xor
dec
andb
inc
outsl
testb
cmp
insl
xor
loop
lods
or
jbe
pushf
lock
negl
fsubl
jno
aam
cwtl
sbb
loop
sahf
jns
adc
in
jp
and
rclb
mov
les
and
jmp
xor
pop
inc
das
cmp
mov
add
sub
sub
xor
mov
and
sbb
sub
roll
adc
notl
test
ret
push
fidivrs
in
xor
sub
jbe
rcrl
cwtl
jb
jp
fsubl
and
imul
cli
add
ds
and
mov
lods
mov
out
mov
and
lret
xor
xchg
je
fs
scas
loop
je
push
out
mov
test
fstps
mov
insb
cld
adc
mov
dec
mov
push
je
push
iret
cmp
dec
pop
jo
jl
or
je
jmp
aad
cmp
sub
fcomi
mov
rol
rorl
mov
imul
lock
mov
movsb
repnz
push
push
dec
ja
pop
loope
test
in
mov
loope
out
mov
sahf
imul
jecxz
jg
xor
xor
and
mov
jae
mov
mov
jp
pop
pop
and
aad
sbb
mov
xchg
push
mov
and
ret
sub
ds
imul
es
jb
add
pushf
aam
out
ja
adc
push
decl
outsb
fmulp
cwtl
or
or
dec
enter
lret
inc
andl
decl
mov
pop
mov
in
sti
test
sbb
xor
sarb
sbb
shll
mov
loopne
and
inc
jbe
sti
pop
call
cmp
adc
pop
das
inc
jne
insb
sbb
sub
sub
faddp
jg
dec
cmp
dec
repz
dec
das
push
stos
les
pop
mov
mov
xchg
stos
cmp
xor
push
xchg
mov
or
andb
mov
mov
adc
jp
add
push
pop
and
mov
mov
in
mov
mov
mov
aaa
push
lods
or
mov
mov
jle
nop
xor
pop
into
enter
data16
pop
mov
stos
push
iret
jb
gs
lcall
push
sbb
popl
fisubl
sub
mov
pop
incb
adcb
adc
movb
and
scas
or
je
sarl
cmp
jmp
cld
and
pop
pop
push
cmp
mov
sarb
push
adc
push
push
cwtl
xchg
dec
xchg
sbb
pop
sbb
loope
inc
push
mov
pop
insl
popa
aam
xchg
movsb
push
es
and
and
lea
adc
xor
cld
in
jns
pop
xchg
movsb
jecxz
push
popf
lods
dec
fwait
push
fbld
or
mov
sbb
fldlg2
shlb
out
insb
enter
rolb
gs
jmp
nop
lret
and
add
dec
jecxz
out
xchg
adc
shr
pop
mov
fdiv
cmp
mov
jbe
loop
add
jmp
jae
mov
lods
cmp
and
mov
sbb
jecxz
mov
jmp
gs
bnd
nop
pop
or
insb
hlt
mov
lock
xchg
cmp
inc
stos
inc
add
push
test
inc
repnz
in
xchg
sbb
dec
gs
lds
movsl
stc
icebp
or
and
xchg
dec
cmpsl
jge
cmp
xchg
psubw
test
mov
mov
fs
xor
xor
mov
mov
test
cmp
mov
aad
test
sarl
mov
cld
cmp
push
pop
xchg
xor
xor
ss
outsl
fildl
push
mov
mov
inc
stc
jne
sbb
xchg
xor
testl
push
roll
dec
mov
lods
scas
bound
jg
ret
mov
ret
mov
rclb
push
cld
icebp
sub
shlb
rolb
adc
push
xor
sbb
xchg
test
inc
adc
int3
push
inc
sti
sbb
push
push
inc
and
outsl
fnstsw
lods
mov
clc
test
stos
adc
test
ja
inc
aam
sti
loopne
adc
pop
push
out
jnp
fstl
push
sbb
stc
dec
fmul
cwtl
jg
js
jle
inc
sub
xchg
mov
mov
pusha
sbb
je
sbb
sub
int
add
scas
lahf
sbb
xor
push
in
cmp
jbe
dec
mov
or
negb
addr16
mov
out
lds
ss
sbb
mov
add
or
add
testl
dec
sbb
aam
lea
push
cmpsl
pop
lret
xor
xor
dec
insl
popa
xor
and
mov
hlt
inc
mov
inc
pusha
addr16
push
pusha
scas
inc
xchg
rolb
dec
loop
rclb
call
jo
sar
in
shll
aam
test
scas
icebp
test
pop
jb
int
adc
jg
mov
jmp
jg
loope
ret
test
sub
mov
pop
xchg
rcrb
setns
pop
and
pushw
mov
jg
fldcw
addr16
dec
inc
or
out
sub
clc
orb
adc
pop
mov
add
mov
inc
adc
test
divb
lcall
clc
clc
addr16
fs
sub
mov
flds
or
test
mov
push
negb
and
dec
dec
and
mov
jp
mov
sbb
ja
cmpsb
mov
xor
mov
dec
ficompl
clc
or
scas
push
ds
xor
rol
jnp
popf
ja
imul
jecxz
adc
fildll
scas
jmp
ljmp
push
ret
cmp
mov
loop
and
dec
push
cmpl
hlt
cmp
repz
ss
pop
int
dec
jle
or
mov
incl
xchg
mov
inc
sub
dec
stos
pop
and
arpl
jo,pt
fldl
das
lcall
pop
das
sbb
adc
test
sub
std
sub
xchg
mov
or
fstl
in
mov
push
repz
lds
cmpsb
scas
aad
xor
push
dec
mov
loop
push
mov
faddl
mov
aad
movb
test
lds
shr
int3
push
ds
loopne
daa
jle
mov
icebp
popf
dec
jp
rorl
decl
dec
es
add
ss
mov
imul
mov
push
mov
cli
mov
popa
pop
aas
inc
xor
jecxz
aas
mov
mov
adc
and
imulb
rcr
pop
sub
fldt
jg
cmp
jnp
push
aaa
add
fsts
adc
mov
jne
stc
out
cmp
pop
sbb
or
daa
push
dec
mov
int
mov
adc
sahf
sahf
jl
outsl
mov
enter
or
inc
arpl
xchg
push
outsb
ret
in
mov
fldt
mov
or
adc
leave
nop
cltd
mov
mov
ss
and
sub
cld
or
ss
xchg
fdivs
cmp
mov
je
mov
loopne
je
xor
jge
push
mov
sar
stc
out
push
adc
scas
or
in
shlb
mull
cmp
fimuls
adc
pop
lds
pop
fidivrl
xor
lcall
ss
popa
shll
xchg
rcrl
ja
or
aam
mov
lcall
fistpll
mov
cmp
cmp
pop
mov
xlat
rorl
push
push
mov
pop
cmp
fildl
cmovo
push
adc
cmpsl
outsb
sbb
enter
push
test
test
movsb
sti
mov
xor
aaa
jp
or
movsl
pop
dec
fs
mov
mov
repz
mov
sbb
int3
xchg
shll
inc
mov
nop
adc
ja
xchg
xchg
fidivrl
shlb
imul
imul
jne
sahf
scas
sbb
test
out
jno
jg
fs
rol
out
jmp
push
lret
pop
popf
sbb
test
int3
dec
sub
nop
jmp
and
sbbl
in
pop
lcall
fnop
out
pop
rol
and
push
inc
loop
pop
jmp
mov
sar
lock
aad
in
testl
jmp
cld
in
mov
addr16
js
loopne
mov
insb
fs
sbb
mov
jae
movsb
repz
pop
jl
lahf
sahf
push
outsb
dec
jecxz
mov
add
dec
jl
pop
pop
sbb
xor
xchg
sub
sub
jo
hlt
jp
fdivrl
or
test
loop
cmc
lock
add
inc
mov
icebp
ds
in
sbb
push
add
pop
call
jmp
nop
push
dec
cmpsl
jo
cld
inc
jne
test
in
cmpsl
sub
mov
push
push
and
sub
jne
cmp
fwait
dec
xor
jbe
addb
sub
or
loope
push
pop
scas
jg
mov
mov
fisubrs
or
or
cmp
bound
mov
lea
push
js
lods
xor
into
or
inc
daa
xchg
xor
psrld
or
pushf
pop
xor
mov
mull
jb
pop
add
pop
adc
inc
mov
ret
outsl
push
pop
out
shlb
adc
adc
sub
rcrb
inc
xlat
test
adc
test
mov
mov
fldcw
push
and
xchg
aad
lds
sti
mov
or
insb
loope
mov
dec
pop
mov
xlat
adc
pop
dec
fyl2xp1
cli
lret
notb
mov
xchg
stc
out
sbb
push
mov
scas
xchg
pop
out
sbb
popa
cmc
push
cmc
inc
fcmovnb
jns
sbb
sbb
clc
and
aam
scas
xor
mov
pop
sarl
in
insl
sti
insl
jecxz,pn
lret
aaa
cld
ljmp
sub
sti
or
inc
cwtl
mulb
mov
push
ljmp
adc
ret
mov
lock
in
scas
or
inc
in
mov
cs
in
cmp
cli
scas
cs
ret
dec
mov
ret
mov
test
push
fsubs
sar
js
test
lock
lahf
scas
ja
mov
sub
subb
test
add
call
inc
shl
add
dec
fstpt
add
nop
adcb
inc
push
lods
push
into
leavew
mov
add
ljmp
ficomps
mov
pushf
sbb
mov
add
jecxz
xor
das
aad
ret
pop
lds
xchg
push
ficoml
add
sbb
dec
fwait
pop
xchg
lret
push
inc
movsb
mov
fwait
cmpsb
xchg
lahf
jae,pn
fildl
mov
cmp
sbb
insb
inc
hlt
test
xchg
insl
lahf
arpl
mov
xchg
xlat
inc
pusha
push
adc
lret
je
sub
cltd
jno
mov
dec
rolb
cltd
push
popl
or
clc
push
int
fisubrl
pop
dec
aam
lret
into
jecxz
pushf
inc
out
out
stc
pop
dec
ja
mov
je
dec
js
les
dec
insl
insl
in
and
push
sbb
sub
mov
out
into
xchg
movsl
mov
sub
xchg
mov
jmp
sbb
add
adc
xchg
dec
lret
std
mov
cmp
les
push
out
add
daa
cmp
out
dec
sbb
and
scas
sbb
out
sbb
scas
fisubl
pop
ret
cmpsb
rorl
fstp
pusha
out
out
mov
sbbb
stos
rolb
out
mov
pop
lods
dec
jl
lods
push
in
stos
shlb
mov
outsb
pop
jge
fistpll
mov
mov
or
add
xchg
sbb
inc
xchg
sbbl
jecxz
insb
inc
mov
pop
cmpsb
jno
jecxz
inc
push
push
and
shlb
lods
repnz
push
loopne
pusha
dec
push
pop
jnp
xor
lcall
lcall
ret
push
dec
pop
aam
lret
cmpsl
sub
push
sub
loop
add
mov
gs
lcall
xor
adc
xchg
push
push
lods
in
cmp
jbe
sbb
jle
inc
inc
test
mov
cmp
xchg
ds
shll
jp
enter
in
mov
add
in
dec
mov
icebp
and
xchg
adc
xor
je
and
mov
sbb
and
test
pop
cmp
lahf
jl
mov
lock
sbb
cmovl
popa
fcomp
jo
xchg
sub
sub
mov
inc
push
push
cmp
jns
sub
scas
fstl
mov
outsb
pusha
icebp
fcompl
mov
pop
ljmp
mov
arpl
stc
xlat
subl
sbb
xchg
loop
and
fcomip
cmp
icebp
fstpt
adcb
loopne
add
into
dec
imul
pop
mov
adc
pop
dec
cmpsl
in
sbb
jmp
xchg
movsl
fisubrs
dec
imul
cwtl
idivb
adc
sub
mov
fwait
loopne
xor
cli
cli
sub
cltd
ret
popl
repz
out
lods
sub
jo
das
pop
cmp
add
aam
nop
test
mov
addr16
and
je
sub
pop
add
and
pop
xor
lcall
xchg
xchg
nop
push
stos
icebp
dec
push
bound
dec
pop
mov
sbb
int
outsl
adc
gs
enter
out
mov
repz
scas
rolb
shrb
je
pop
add
pop
cmp
inc
daa
aas
push
and
mov
mov
xor
stos
xchg
push
and
neg
cli
mov
add
stos
fildll
push
adc
std
push
iret
adc
imul
xchg
push
xorl
sbb
dec
jne
sbb
push
mov
ficoms
push
dec
imul
ja
mov
add
movsl
add
xor
sbb
cmp
pop
pop
lret
iret
andl
int3
in
in
push
mov
callw
lahf
shl
imul
aas
xchg
sahf
xor
add
adc
add
and
inc
pop
out
hlt
pop
cmp
sub
daa
aaa
and
mov
les
mov
mov
sub
repnz
pusha
jecxz
adc
das
lea
sub
loope
pop
decb
cmp
push
jno
out
aam
movsl
lcall
dec
add
push
pop
rcrl
ja
loop
popf
out
xchg
sbb
sbb
add
mov
fwait
push
or
add
jge
cmp
call
cmp
enter
and
jl
mov
leave
addr16
xchg
lcall
hlt
pop
jae
ret
lret
and
ret
sbb
push
shll
stos
mov
jns
mov
repz
iret
dec
mov
adc
iret
sbb
jae
cmpsl
inc
int3
in
push
in
js
pop
fsubrs
mov
lcall
cmc
cmc
iret
pop
movsl
sbb
or
jb
ja
cmp
sub
jle
sub
xchg
stos
lods
jns
push
cli
push
sbb
push
int
mov
dec
or
les
jne
mov
xor
ds
inc
ja
jb
sbb
xor
mov
jecxz
push
jns
xchg
mov
cmp
addb
test
cmp
xchg
rolb
icebp
push
mov
push
xchg
mov
lret
mov
or
bnd
imul
popa
rcrb
add
jecxz
dec
xor
leave
shll
push
mov
cmp
stos
repz
stc
or
cmp
cmp
add
sub
jnp
nop
es
imulb
lret
orl
jge
cmp
mov
push
hlt
out
mov
push
pop
pop
loop
sbb
xchg
and
mov
mov
xchg
arpl
mov
jl
cli
inc
pop
xchg
pusha
out
int3
imul
bound
cs
push
test
jmp
popa
lods
insl
nop
ret
icebp
xchg
test
sbb
mov
jecxz
dec
jnp
ja
xor
aas
jbe
fisttpl
jo
jne
add
cmp
xchg
addl
out
repz
push
clc
push
adc
jp
ret
dec
add
sub
inc
sbb
hlt
sbb
jno
insb
lea
dec
fs
mov
lods
push
bound
sarl
inc
or
subl
scas
sbbb
fdiv
inc
dec
pop
add
rcl
jmp
lahf
les
aas
push
cmpsb
ret
mov
add
adc
pop
add
ja
das
loop
es
ret
dec
sti
fiaddl
mov
cmp
cld
repnz
bound
das
or
lods
mov
and
lret
pop
popf
ljmp
jne
jns
sub
xchg
cld
frstor
inc
mov
xchg
dec
loope
pop
fbld
mov
outsb
dec
add
in
push
aas
daa
orb
nop
dec
pop
mov
ja
pop
jmp
mov
cwtl
dec
rolb
repz
mov
mov
mulb
fwait
pop
push
dec
sub
dec
push
lahf
cs
ds
pop
fwait
xor
ja
outsb
ficoml
clc
mov
mov
das
mov
push
insl
lds
push
mov
jge
cs
insb
push
push
pop
sahf
jno
and
inc
aad
xorl
xor
lret
mov
pop
and
jbe
movsb
mov
sbb
jl
pop
cmp
rcll
scas
imul
inc
aaa
dec
arpl
test
push
movsl
mov
pop
shlb
mov
sbb
out
lret
inc
pop
popa
aas
aad
cmp
mov
xor
out
out
adc
lods
xchg
mov
mov
inc
cmpsl
adc
and
loope
ds
orl
or
xor
les
mov
jns
andb
xor
mov
jbe
lret
xchg
stos
fistpl
mov
inc
aam
lea
loop
xchg
jmp
icebp
push
into
cmp
pop
or
in
ljmp
sbb
iret
xor
jecxz
sub
mov
push
add
dec
into
mov
cmpb
in
dec
lds
ds
dec
fsubp
push
mov
repnz
icebp
jle
fisubs
lds
jge
cwtl
pop
sub
sub
iret
mov
in
arpl
dec
out
out
jle
mov
mov
int3
push
add
outsb
adc
adc
xchg
aad
sbb
lods
adc
sub
cmp
mov
daa
dec
es
dec
loope
hlt
fisubs
lcall
jno
dec
outsb
mov
int3
mov
inc
pusha
mov
jo
mov
int3
cltd
lods
in
jns
ss
hlt
jne
dec
shrb
xchg
test
sub
xor
xchg
mov
sub
ljmp
pop
cmp
sub
movsb
gs
push
and
xor
push
fimull
or
cmp
mov
movsl
dec
inc
hlt
mov
in
mov
inc
jge
push
mov
jle
mov
fldl
and
add
imul
sub
les
add
jmp
sbb
jecxz
cli
xor
pop
rorb
hlt
hlt
js
pop
mov
scas
mov
mov
and
add
movsb
das
sarl
sahf
dec
pushf
daa
lods
js
out
cmp
xchg
sbb
call
cli
sarl
xchg
cmp
jmp
fs
aas
xchg
pusha
shr
or
sahf
mov
or
repz
add
inc
in
ret
call
shll
inc
mov
and
xchg
sbb
xor
loope
std
xchg
xor
insb
enter
dec
iret
jcxz
movsl
stc
sub
loop
jp
fisttps
adc
psadbw
mov
add
cs
mov
xchg
adc
inc
insb
hlt
ret
call
and
imull
dec
push
call
jae
cmpsl
outsl
and
cltd
aas
cmp
jne
nop
or
dec
sub
repnz
dec
jo
pushf
rcrb
mov
test
enter
mov
pop
or
mov
push
test
jo
inc
loopne
je
mov
fimull
cmpsl
imul
int3
ret
add
lret
and
bound
dec
lahf
test
scas
adc
popa
insb
dec
insl
mov
pop
push
cld
pop
stc
scas
fdivrl
pusha
out
in
shr
cmp
cmp
cmpsl
in
mov
lods
dec
out
data16
cmp
push
and
mov
add
pushf
stos
insl
aaa
lret
js
cld
inc
js
cmp
adc
sti
inc
mov
sarb
xchg
insb
mov
movsl
push
cmpsb
bound
repz
imul
mov
outsl
push
add
pop
mov
ljmp
pushf
or
je
fistpl
mov
test
aas
push
or
inc
jbe
sub
xchg
fcmovnu
test
add
cld
mov
mov
gs
les
pusha
pushf
sub
lret
or
push
popa
jecxz
push
pop
icebp
or
leave
aad
cwtl
cmp
call
aad
scas
and
cmpsb
mov
ja,pt
jg
stos
out
xchg
jl
jecxz
and
xor
mov
movsl
push
push
arpl
lahf
adc
lret
lret
stos
cwtl
sti
or
dec
insl
shll
fucomip
stc
jle
adc
sbb
stos
add
fwait
insb
sbb
or
notb
xor
xchg
or
mov
cmp
lret
addr16
data16
pop
aas
mov
ss
test
jbe
nop
xchg
fs
lcall
mov
addr16
jge
xor
dec
dec
mov
lcall
cmp
mov
arpl
inc
cmpsb
scas
or
fidivs
enter
xchg
sbb
sbb
jno
dec
adc
dec
cwtl
pop
stos
es
test
and
jl
pop
add
es
lret
inc
les
mov
xor
scas
stos
scas
pop
loope
jl
lret
iret
push
je
popa
sub
popa
or
call
cld
ret
test
inc
mov
and
ss
test
pusha
mov
inc
fdivrl
or
out
jle
xchg
hlt
daa
shlb
sub
dec
push
lods
negl
dec
jno
xchg
cmp
adcb
pop
ror
pop
sbbb
mov
fmuls
sub
scas
xor
das
mov
sbb
idiv
add
add
and
dec
push
movsb
cmpsl
icebp
imul
negl
cmpsl
jge
mov
insb
mov
outsb
and
ss
dec
imul
popa
cmpsb
and
jmp
out
xor
lcall
xor
stos
dec
nop
pmulhuw
imul
gs
addr16
cmc
sahf
into
js
shll
or
sbb
add
inc
repz
inc
out
addr16
jl
out
sub
mov
push
jbe
rolb
inc
adc
add
test
add
orl
dec
xchg
jbe
insb
sbb
sbb
and
jge
inc
pop
xchg
dec
mov
push
add
xchg
dec
push
and
mov
rorl
jns
xchg
cmpb
add
adc
rorl
ss
xchg
jne
out
xor
xchg
out
repnz
push
xchg
fstps
sbb
and
das
rorb
sub
push
dec
aad
dec
psraw
mov
mov
aam
stos
jns
mov
cmp
stos
fsubrs
cmp
dec
mov
mov
dec
jp
lea
les
and
repz
jo
mov
and
dec
loop
mov
es
sub
adc
adc
lret
add
test
imul
stos
or
push
cmp
fdivl
leave
movsl
movsb
sbb
cld
mov
sub
scas
enter
add
enter
cmp
jne
sarb
int
mov
cmp
and
imul
rcll
lds
mov
dec
daa
jnp
rcrl
or
lcall
test
pop
cmp
xor
jo
cmp
inc
sarl
cmp
mov
sbb
cmp
pop
out
clc
aas
mov
sbb
inc
leave
and
lock
inc
int
xchg
dec
or
push
insb
xor
inc
sar
clc
push
cwtl
xorl
mov
dec
mov
mov
out
outsb
jo
fwait
jp
mov
xor
push
sbb
mov
movsb
sub
push
push
fwait
add
xchg
jnp
mul
into
xor
insb
mov
jg
aas
lcall
mov
shr
movsl
ror
stc
cld
hlt
imul
mov
into
insl
or
jbe
mov
cmp
out
icebp
jmp
mov
mov
call
sbb
nop
test
mov
insb
imul
xchg
iret
test
cwtl
ljmp
outsb
jle
jle
test
stos
out
flds
adc
fs
push
aam
fbstp
loopne
pop
push
cmpsb
bound
movsb
jp
arpl
dec
adc
or
sub
dec
movsb
mov
enter
aad
fbstp
or
push
scas
push
les
xlat
mov
fcmovnb
ljmp
out
shrl
pop
pop
fimuls
inc
adc
into
xchg
imull
mov
cwtl
xchg
push
jp
cmpsl
or
push
scas
pop
mov
mov
mov
sub
mov
mov
in
rorb
aam
mov
test
cltd
pop
fistl
mov
sar
mov
jp
mov
mov
ret
into
push
dec
or
push
sbb
xor
cmp
out
pop
push
jne
xor
mov
and
sub
jns
push
insb
jbe
repnz
in
rolb
shl
jl
cmp
xor
add
adc
aas
mov
jae
sub
je
push
test
mov
out
ja
mov
mov
hlt
les
jo
fnstenv
xchg
push
pop
mov
int
lcall
sbb
push
jl
mov
mov
sub
loop
int3
push
outsb
loop
cmp
pop
cli
dec
js
scas
dec
add
mov
and
fisttpl
xchg
jl
pop
push
mov
adc
mov
nop
jbe
pop
stos
pop
sub
insl
nop
mov
bound
div
xchg
push
sub
pop
mov
add
lods
adc
mov
sbb
stos
cwtl
out
add
icebp
arpl
dec
xor
daa
cltd
jp
jmp
xchg
je
les
mov
sub
or
or
stos
hlt
mov
cs
xor
jp
xchg
stc
hlt
pop
daa
lea
addr16
xlat
aad
out
cltd
or
stos
dec
mov
push
or
pop
or
fists
mov
sub
cmpsl
lret
xor
daa
add
sbb
adc
mov
inc
out
mov
dec
stos
pop
xchg
loope
fsubs
addr16
icebp
inc
and
movd
mov
cli
push
cmp
cmp
inc
inc
cmp
dec
push
mov
and
and
jns
das
mov
jg
loope
fldt
fiadds
andl
xchg
and
scas
add
test
adc
loop
cmp
dec
xchg
jo
andl
lods
mov
and
lcall
or
je
lea
and
outsb
inc
sbb
xor
fiaddl
ja
cmp
mov
dec
and
jnp
pop
ficoms
cltd
xor
jno
and
jo
fstpt
cwtl
jne
jns
sti
add
lcall
ret
xlat
bnd
add
pop
fstpt
mov
call
mov
or
mov
xchg
jmp
push
push
or
out
leave
jge
mov
push
pop
insb
mov
aam
adc
fnsave
sbb
in
xchg
into
and
mov
in
pop
icebp
mov
inc
out
stc
and
xchg
inc
mov
in
and
leave
leave
out
sbb
push
sub
pop
outsb
jnp
testb
pop
xchg
pop
mov
lcall
push
outsb
push
xor
lcall
rcll
xor
dec
rclb
and
aaa
test
or
shrl
daa
in
mov
mov
arpl
repz
sbb
jne
cmc
adc
mov
test
rolb
lods
pushf
insl
fidivrl
dec
loope
pop
ret
test
stc
scas
sarl
or
pop
dec
fnsave
sbb
mov
scas
sbb
imul
cmpsl
cmp
pop
dec
jp
je,pt
push
int
test
pusha
or
andb
xchg
dec
inc
fnstenv
push
mov
mov
in
push
fnstenv
cmc
mov
add
sbb
pop
fbstp
add
inc
std
mov
adc
in
mov
lods
adc
sub
test
dec
and
add
cld
mov
xlat
push
xchg
and
nop
fnsave
out
mov
jmp
mov
sub
aad
ds
mov
or
pop
pusha
lcall
push
adc
in
or
and
mov
cmp
cmp
das
mov
mov
inc
lds
pop
stc
imul
mov
roll
mov
insl
aaa
mov
clc
adc
ss
stos
notl
daa
shl
cmp
sti
repz
test
pushf
add
into
fcoms
cld
lods
rcrb
lods
test
pop
bound
sbb
sbb
mov
int3
push
push
decb
sbb
mov
mov
loop
hlt
test
mov
lds
xchg
pop
lds
mov
xchg
mov
jmp
push
or
mov
push
test
lds
xchg
push
cmp
int3
iret
push
adc
pop
push
jbe
adc
or
in
cmp
sbb
lds
out
fisttps
hlt
pop
or
insl
or
andl
mov
aaa
sub
or
sbb
pop
mov
cwtl
les
mov
adc
adc
aam
xor
push
sub
imul
sub
rcll
cmp
iret
mov
rorb
mov
xor
mov
mov
push
stos
push
push
dec
xchg
add
mov
shrl
loop
or
or
add
jmp
or
stos
sbb
xor
repz
adc
add
cmp
movsl
mov
jle
sub
mov
andb
aad
pop
add
and
dec
or
jb
je
jg,pn
xchg
test
mov
rol
fs
mov
cwtl
inc
test
lahf
movsb
dec
iret
jecxz
leave
test
into
lds
xor
lock
cmpsl
lahf
nop
xchg
arpl
adc
mov
mov
mov
pop
mov
js
jl
and
sti
popl
mov
shll
in
in
adc
lods
repnz
and
cli
mov
xorl
pushf
cwtl
arpl
push
mov
pop
and
or
inc
stos
stos
aam
andl
dec
jg
out
fwait
sarb
scas
outsb
mov
jle
or
dec
push
sbb
sbb
ret
push
out
push
shlb
or
sahf
pop
jne
fwait
aam
xor
ja
repz
inc
aad
fst
jg
test
loope
sub
pop
inc
xchg
xor
add
or
jnp
mov
rcr
jle
cmp
int3
push
mov
add
sub
or
mov
mov
sbb
pop
sbb
out
dec
cmp
dec
imul
pop
adc
jg
xor
jecxz
lds
jbe
ljmp
cmp
cmp
enter
shrl
outsb
cmp
add
ja
ss
jbe
sub
outsl
or
jp
jo
std
cli
or
test
jle
and
push
std
or
std
pop
mov
push
inc
pop
out
outsb
mov
xchg
inc
mov
pop
mov
mov
or
pop
xor
shll
inc
mov
jg
movsl
adc
push
and
add
mov
jae
inc
nop
rcr
pop
mov
adc
sub
in
jle
jne
cmpsl
js
mov
cwtl
and
mov
stos
stc
inc
ret
mov
fstp
jmp
jne
mov
popf
fsts
fsubs
daa
popf
jnp
in
loop
jmp
jp
dec
jno
xchg
adc
test
jno
movsb
add
cmpsl
sbb
cwtl
pusha
out
xchg
push
out
dec
sub
mov
sub
inc
pop
dec
repz
mov
xor
outsb
or
pop
cld
stos
push
les
gs
fwait
jp
fldenv
pop
ret
mov
push
or
adc
push
push
stos
divl
push
xor
je
iret
xchg
in
or
mov
push
and
adc
scas
imul
mov
cwtl
pop
inc
xchg
iret
mov
je
test
int3
or
and
push
sub
ret
inc
cli
xor
xchg
sub
and
mov
adc
sbb
movsl
roll
or
fcmovnb
out
into
or
hlt
jmp
cwtl
mov
stos
pop
add
inc
mov
aad
fadd
dec
inc
inc
mov
ret
lahf
sahf
jecxz
rcr
push
jl
sub
xchg
push
outsb
bound
fisubs
sub
mulb
jae
cmp
in
imul
cltd
sub
xchg
cmc
daa
fildl
mov
into
cmc
loopne
jge
mov
into
not
test
mov
cmp
orb
jbe
enter
or
in
cmp
add
lods
xchg
mov
pop
pop
add
sbb
push
faddp
jl
outsb
push
sbb
iret
cltd
gs
test
sub
xor
jg
dec
mov
lret
nop
sbb
add
xlat
push
xchg
inc
pop
mulb
test
jg
sahf
dec
lock
pop
xchg
xchg
sbb
inc
loop
inc
enter
dec
push
mov
xor
in
push
lds
jbe
mov
xchg
out
popa
sub
mov
push
in
sbb
int3
mov
jge
into
out
nop
jl
xor
jmp
insl
jg
mov
or
jae
mov
addr16
fcompl
cmp
cmp
jle
push
cmp
inc
stc
lahf
push
cmp
repz
push
imul
testb
sub
dec
out
push
out
xchg
aaa
scas
ret
jne
add
pop
pop
dec
push
jecxz
jge
dec
adc
inc
mov
push
imul
jl
mov
sbbb
stc
rorl
stos
push
or
filds
imul
and
add
out
ret
jo
sbb
mov
inc
in
push
test
or
xor
xchg
sbb
lahf
jae
movsb
mov
jae
mov
jmp
orb
ret
int3
daa
fnsave
les
ljmp
out
sbbl
stos
pmaxsw
mov
mov
xchg
inc
cmovno
or
fsubrs
dec
pop
push
jnp
rolb
inc
xorl
lds
scas
cltd
push
negl
mov
sbb
cs
and
cmpsl
sbb
push
dec
pop
imul
insb
imul
js
ja
mov
test
add
lods
or
mov
leave
or
leave
mov
push
and
and
daa
stos
fcoms
hlt
daa
push
test
mov
mov
loope
or
shll
inc
outsb
xchg
dec
pop
rcrb
or
dec
dec
movsl
cmp
dec
sti
mov
and
sarb
cwtl
pop
call
cmpsb
pop
jl
mov
sbb
jns
and
mov
mov
pushf
jb
or
daa
aad
js
sub
push
cmp
pop
stc
arpl
cmp
pushf
dec
sbb
bound
cmp
sbb
enter
out
push
loop
xchg
outsb
xor
and
icebp
cwtl
pusha
leave
add
pop
pop
mov
or
ja
push
daa
jp
xchg
or
mov
pusha
mov
lock
xchg
in
inc
loop
test
push
lcall
dec
addr16
icebp
or
cmc
lock
adc
shlb
xchg
in
inc
insl
xor
out
cmp
scas
es
sbbl
push
leave
mov
clc
mov
leave
push
in
ljmp
or
jb
shl
inc
ret
decl
mov
ret
add
dec
jl
push
loop
push
jae
mov
or
inc
fsubrl
pop
adc
pop
shl
pop
push
in
call
imul
dec
in
and
mov
push
imul
loopne
and
push
movsb
aaa
cmpsl
jno
imul
xchg
out
xchg
pushf
xchg
jg
jns
xchg
scas
imul
sub
ret
push
pop
jnp
mov
cmpsb
cmp
sbb
pop
ss
cmp
or
pushf
cmp
xchg
shlb
push
adc
into
inc
push
mov
lret
mov
hlt
dec
mov
jmp
ffreep
bound
push
lock
js
add
jmp
xchg
or
ret
cmp
movsl
rcll
or
lock
lcall
rorb
jmp
pop
pop
jmp
pop
push
or
or
mov
jp
xchg
inc
pop
mov
sarb
stos
add
mov
inc
ret
lods
cwtl
clc
fildll
mov
pop
push
movsl
popa
test
outsl
jnp
push
inc
outsl
jl
cmc
sahf
hlt
cmp
sub
or
and
or
xor
sbb
out
aaa
in
cmpsl
inc
fstl
push
pop
inc
jle
es
jbe
mov
dec
push
test
je
daa
fstp
test
repnz
cmp
mov
push
jae
sbb
mov
xchg
mov
in
mov
shll
popf
in
and
hlt
imul
repnz
sbb
loope
pop
aam
or
sbbb
iret
sbb
fwait
ret
sbbl
jp
inc
sub
cs
int
mov
andl
xor
test
rorl
cmp
xlat
outsb
nop
mov
ds
cld
cmc
out
cltd
addl
fdivr
cltd
popa
sub
inc
gs
clc
push
sbb
adc
daa
cmp
cmpsl
lahf
sbb
popa
cmp
pop
mov
cmp
jae
outsb
lcall
xchg
dec
std
mov
fisubrs
fidivrl
xorb
mov
bound
shlb
or
testb
dec
insl
mov
nop
test
enter
test
sbb
stos
xchg
mov
es
dec
sbb
jnp
notb
in
ror
pusha
inc
pop
xor
push
shll
mov
add
push
addr16
push
xor
shlb
xchg
cmc
cmp
cmc
cltd
popf
mov
dec
xchg
stos
xchg
leave
mov
xchg
jns
call
in
int
mov
jp
lret
loopne
repnz
xor
inc
dec
add
imul
insb
ret
xchg
sbb
ss
or
dec
jle
push
dec
push
outsb
cmp
adcl
inc
repz
jmp
orb
or
pop
inc
mov
mov
ret
in
vphaddbw
std
imul
loope
stos
addr16
cwtl
in
addb
push
ja
mov
arpl
inc
xchg
jmp
into
int3
arpl
test
nop
xor
outsl
les
shll
scas
shlb
pcmpgtw
lahf
fwait
jo
fidivl
pop
andb
add
rcrl
mov
lea
test
dec
or
cmp
das
fists
lcall
mov
test
xchg
lahf
add
cli
ljmp
adc
fs
fwait
cmp
pop
fwait
setne
insl
push
pop
in
xor
push
inc
insl
mov
push
fildl
cmc
mov
cmp
call
mov
lret
stos
push
push
test
push
js
inc
inc
out
out
lock
jmp
nop
push
subb
push
test
adc
test
pop
jg
fnstcw
cmp
jo
push
mov
mov
daa
sub
and
fiadds
or
enter
outsl
mov
xchg
jp
dec
push
xor
imul
push
xor
push
mov
inc
xchg
popf
in
jp
rolb
outsl
adc
add
mov
sahf
cmp
cmp
ljmp
mov
jbe
or
int
hlt
sub
push
add
test
or
and
loope
sbb
cmp
and
ret
js
mov
in
fisttpl
std
shrl
jge
push
push
pop
pop
leave
es
jg
fistps
test
and
aam
fucom
push
popf
push
cli
int
shrb
cmpsl
push
stc
lahf
inc
cmp
ss
mov
cmpsb
lods
inc
insb
jae
loope
mov
ljmp
mov
adc
xchg
and
loope
cmp
push
mov
ror
arpl
sarl
xchg
sub
pop
pop
push
mov
xchg
mov
fidivrs
jmp
imul
mov
popa
mov
sti
push
xor
stc
inc
addr16
mov
jmp
out
scas
and
dec
stc
pop
inc
sub
push
xchg
pop
inc
fwait
andl
sarl
xor
js
or
out
inc
lods
aas
mov
sti
call
fistps
movl
push
dec
jae
js
push
push
jae
sub
bound
jae
and
into
jp
add
bound
mov
cmpsb
cli
setns
cmp
add
xor
pandn
mov
scas
mov
mov
imul
into
inc
pop
mov
shl
push
dec
push
loop
push
push
push
arpl
pushf
movsl
jecxz
imul
lret
int3
pusha
jnp
insb
lret
and
ss
gs
dec
mov
mov
inc
cmpsb
adc
into
int3
adc
outsb
cmp
or
xor
mov
fs
iret
mov
xchg
nop
cltd
sub
push
pop
jg
cwtl
cmp
pop
lret
sub
pop
mov
push
cmp
xchg
push
sub
jle
nop
lret
or
jecxz
cld
cmc
cmpb
fdivrl
or
adc
inc
fcompl
in
and
sub
push
repz
int3
sahf
insl
fmuls
jns
mov
sub
clc
pop
into
mov
outsl
sbb
js
lods
xchg
loopne
fnsave
or
push
outsl
test
cmp
cld
mov
or
ficompl
fistpl
pop
push
xchg
loope
sbb
push
xlat
jbe
out
jge
sti
dec
adcb
shlb
pop
xor
mov
and
scas
jl
push
mov
mov
rorl
mov
xorb
shrb
mov
jns
ret
xchg
dec
or
jae
in
shr
and
mov
and
jbe
sub
sbb
out
or
lea
dec
mov
add
rcrb
fidivl
add
lds
enter
montmul
cmpsb
add
pop
dec
mov
cwtl
or
inc
mov
push
jp
pop
inc
sarb
pop
sub
inc
call
adc
repz
mov
lea
cmp
dec
aam
mov
cmp
jge
xorb
repnz
dec
inc
or
arpl
dec
sub
cmp
push
push
imul
inc
ljmp
jns
ret
mov
aas
pop
xlat
cmp
dec
add
movb
scas
sti
or
leave
imul
rclb
andb
and
push
or
adc
adc
sbbl
xchg
or
pop
aas
out
leave
push
shr
int3
icebp
and
push
jnp
jmp
add
inc
push
xor
xor
sti
xor
fnstenv
dec
mov
popf
int
push
fs
fcmovnb
into
fistpll
and
add
inc
arpl
mov
mov
sbb
push
aas
jp
jbe
add
push
mov
xor
into
aaa
pop
sbb
xor
fcoms
movsl
stos
fs
sbb
xor
ss
lds
scas
das
test
mov
fucom
xchg
xor
pushf
fwait
xor
mov
loopne
rclb
sub
enter
mov
xor
lret
loopne
lcall
push
mov
popa
fisubl
cmp
jb
loopne
adc
pop
inc
inc
loope
test
mov
cmpsb
cli
push
cwtl
pop
inc
adc
icebp
int
sbb
ret
jbe
inc
out
inc
lret
add
lret
push
jne
or
dec
push
roll
imul
nop
jno
jge
scas
inc
call
add
pop
cld
pop
or
adc
and
insl
jge
push
push
xchg
movsb
pop
out
push
sbb
xor
push
sahf
insl
xor
rcll
jno
push
nop
mov
add
mov
add
sub
movsl
xchg
add
push
cmp
xlat
stos
add
cmp
inc
stos
stc
or
add
inc
popa
add
test
sbb
jnp
adc
xor
adc
mov
in
orb
les
test
inc
test
cmp
push
sbb
add
pop
pop
aaa
pop
sbb
xorb
jecxz
mov
cmp
lcall
test
add
je
or
cmp
mov
jle
pop
sbb
jns
int3
mov
movsl
add
inc
out
icebp
in
loope
jle
dec
cmp
mov
dec
sbbb
xchg
jns
out
je
xor
pop
xchg
xchg
popf
inc
add
mov
lahf
lret
xor
jne
lret
test
hlt
inc
movsl
xor
and
add
and
or
adc
leave
adc
int3
into
jne
pushl
es
popf
cltd
rorl
stos
dec
ljmp
or
sbb
xor
xchg
mov
mov
mov
inc
sub
out
orl
cs
cs
jae
movsb
pop
fistps
add
xchg
lret
or
ja
and
pusha
mov
jbe
add
fidivl
ret
push
sbb
pop
mov
cli
test
leave
sub
andb
fs
fnstsw
mov
mov
mov
aad
sub
mov
filds
aaa
outsb
addr16
fs
push
add
jne
xlat
insl
sti
jmp
call
lods
xchg
imul
ss
mov
ds
mov
mov
movsb
es
cltd
out
pop
mov
insl
hlt
sbb
push
scas
mov
mov
dec
sub
and
cmp
sbb
movsl
dec
mov
jg
push
adc
lcall
xor
mov
into
gs
mov
enterw
out
pop
push
push
test
sub
jmp
mov
mov
negl
or
mov
leave
insl
lods
sub
jge
es
dec
maskmovq
notl
clc
mov
stc
sub
push
adc
xchg
mov
dec
mov
inc
push
out
sub
pushf
je
adc
push
or
ljmp
cwtl
push
insb
pop
int
jle
and
fs
inc
sarb
pop
cmp
add
imul
stos
mov
mov
adc
call
mov
xchg
jo
shlb
xchg
leave
nop
iret
dec
stc
xchg
inc
dec
mov
cmc
cld
insl
js
fldt
and
xor
fwait
mov
mov
rclb
mov
inc
out
hlt
aad
inc
lea
movsb
xchg
mov
sbb
mov
and
arpl
push
push
icebp
adc
pop
xchg
and
in
sbb
mov
push
cmp
cs
movsl
adc
push
pop
mov
dec
adc
cmp
jbe
push
and
mov
addl
push
mov
xchg
cltd
and
mov
sahf
xchg
into
xchg
popf
sbb
push
movsl
cmpl
mov
dec
lea
adc
push
lret
push
add
mov
sub
aad
stos
jns
pushf
and
xlat
call
and
mov
sbbb
pop
subl
jl
add
mov
test
mov
cmp
mov
push
push
push
xor
roll
push
jecxz
cmc
lret
sahf
sub
dec
and
push
int3
push
stos
mov
int3
pop
into
aaa
test
xchg
movsb
jbe
or
rcl
lds
sarl
test
aaa
ds
pop
sti
inc
lods
jns
or
movsl
repnz
pushf
leave
lret
outsl
imul
xlat
jbe
in
je
repz
fs
dec
popa
stc
loope
push
fs
cmpsb
lcall
andb
mov
xor
jecxz
je
sysenter
lock
dec
leave
sahf
mov
mov
pop
push
loopne
frstor
pop
cltd
xchg
push
mov
cld
xchg
adc
orb
les
xchg
or
jae
adc
adc
add
mov
sub
lods
sysexit
pop
mov
or
add
outsl
mov
pusha
ja
lea
comiss
data16
in
stos
es
mov
test
je
stc
aad
sbbb
shll
into
js
test
sbb
loop
cmp
pushf
push
or
pop
dec
and
test
pop
xor
xchg
jae
pop
rorl
lret
sar
lock
loop
test
cs
mov
jne
cmp
lret
or
mov
std
loope
and
dec
mov
insb
xchg
insb
jne
add
dec
std
loopne
jb
xchg
xchg
push
sub
or
or
test
add
lds
add
pop
outsl
inc
imul
cltd
xchg
nop
and
jo
stos
insb
shrb
js
in
cli
not
daa
jb
out
xchg
xor
lar
sbb
or
or
in
subb
jmp
lods
cmp
int3
dec
cmp
or
sbb
outsl
or
push
xor
mov
insb
xchg
lea
inc
or
sti
pop
stos
sub
add
sbb
cld
dec
in
add
sbb
ljmp
cmpl
in
xlat
add
xchg
cmp
push
xchg
pop
jno
adc
adc
jo
and
insl
popa
jno
pop
or
popf
jl
inc
aam
mov
mov
ficomps
xorb
lret
loope
scas
cli
mov
add
mov
aas
jg
and
lahf
xlat
dec
pop
xor
sub
outsb
sbb
lds
inc
ss
neg
jl
pop
cmpsb
orl
int
mov
test
inc
daa
add
enter
mov
push
pop
cmp
lahf
cwtl
sbb
mov
pop
pop
or
pop
outsb
in
add
lret
in
sub
fldcw
roll
movsl
sbb
push
aad
jb
xchg
movsl
aaa
mov
pop
cmpsb
pop
es
pop
mov
in
dec
popl
js
repz
push
mov
cli
cmpsb
std
movsl
out
popf
nop
inc
test
mov
aas
adc
push
and
mov
js
bound
push
cs
push
in
add
jmp
mov
pusha
hlt
sub
or
stos
sbb
in
jns
or
pop
cltd
mov
mov
xchg
xor
xchg
dec
inc
pusha
lock
test
loop
stc
outsl
push
xor
out
icebp
xchg
push
inc
dec
xchg
jo
imul
sahf
sub
outsl
sbb
les
in
sub
pop
stc
out
mov
popf
lret
jg
and
push
xor
push
pop
mov
pop
dec
scas
test
dec
pop
arpl
or
pop
mov
out
jecxz
sarl
pop
cld
sub
inc
in
or
cmpsl
mov
pusha
int
cwtl
push
cmp
data16
ret
inc
outsb
lret
popa
das
pop
imul
add
stc
mov
pop
mov
pop
sahf
test
leave
jmp
inc
add
xchg
mov
repnz
ja
sub
aas
mov
dec
call
push
dec
inc
add
mov
idivb
or
cmp
cmp
fnsave
out
mov
imul
aaa
and
xchg
inc
ss
ret
xchg
cld
cmp
test
loopne
sub
xor
cli
push
cmp
ljmp
inc
hlt
daa
sahf
fidivl
jb
pop
ljmp
add
cmp
in
loopne
decb
ja
pushf
lea
repnz
and
dec
call
mov
or
mov
fisttpll
mov
ds
dec
mov
les
pop
jl
dec
jae
test
idivb
xchg
jno
cmp
loopne
cs
lret
dec
sub
mov
jge
out
push
xor
mov
xlat
and
sbbb
pushf
std
sbb
lret
cmpl
add
sbb
mov
cltd
lcall
data16
mov
sub
fisubl
xor
dec
pop
jp
mul
jg
clc
adc
pop
pop
lock
imul
xor
adc
jle
andb
fisubrl
in
push
xor
ret
icebp
outsl
adc
xchg
jns
notb
aas
shll
pop
push
loop
pop
jne
aas
inc
repz
cmc
mov
rorb
and
iret
test
int3
push
mov
loope
sahf
bound
push
mov
mov
mov
push
popa
scas
or
ret
into
repz
mov
jb
add
mov
shll
push
aaa
or
mov
xor
adc
lds
sbb
ret
xchg
ret
fwait
cmp
fcomps
jmp
fidivrs
xchg
jg
out
sahf
popw
js
adc
and
pop
loop
lea
add
pop
mov
mov
jg
aam
imul
jp
push
in
dec
pop
mov
mov
inc
xchg
cmp
shl
pop
cmp
int3
or
sbb
xor
hlt
fwait
ja
adc
add
cmp
pop
xchg
sbb
lret
gs
bts
in
mov
movsb
in
ret
xchg
ficoml
dec
push
dec
fisubs
outsl
flds
loope
inc
lods
push
jge
shlb
ja
and
jnp
dec
dec
stc
fs
addr16
shr
sub
imul
js
xor
push
sub
adc
out
cmpsl
mov
sub
or
scas
call
shr
pushf
cmpsw
leave
jge
bound
in
call
aam
mov
stos
sarb
mov
aaa
adc
ret
mov
stos
daa
mov
in
xchg
icebp
enter
mov
mov
xor
sub
sub
ljmp
xlat
adc
push
pop
call
and
icebp
mov
lods
sub
lods
repnz
repnz
std
adc
add
and
orl
cld
imul
push
test
or
lret
cmp
cmp
in
lret
mov
adc
js
xchg
pop
lea
mov
pusha
lds
loope
addr16
icebp
cli
mov
cmc
test
out
inc
xor
add
mov
mov
cli
test
push
pop
jmp
add
xor
cmp
inc
adc
fwait
mov
push
pop
sub
dec
jle
aaa
xlat
daa
sbb
lea
iret
sar
cmpl
scas
cmp
xchg
fiadds
dec
std
clc
inc
mov
ret
stos
cmp
mov
inc
push
inc
add
leave
push
xor
push
or
adc
sub
fwait
rcrb
adc
xchg
pop
jmp
jmp
xchg
pop
dec
mov
loope
mov
xor
popa
sahf
push
push
and
es
push
loope
das
and
and
mov
or
stos
push
vmread
mov
sub
pop
test
add
ret
in
repnz
or
mov
outsl
out
lds
push
movsl
mov
mov
leave
cmp
xchg
call
mov
syscall
in
mov
push
ret
outsb
pop
data16
mov
sub
mov
add
cmpsb
mov
cwtl
imul
push
and
loopne
sub
and
outsb
jle
repz
xchg
aas
and
push
sbb
add
ds
xlat
jbe
rcrl
pop
push
nop
fisubl
lret
push
pushf
sub
loope
lcall
pop
mov
jg
ljmp
sar
jne
dec
imul
cld
int3
jg
add
dec
mov
test
test
inc
pop
fwait
outsl
mov
add
mov
aad
aaa
lods
jmp
lcall
ss
lret
lret
call
cmp
int
add
out
movsb
in
mov
mov
mov
xor
fsubl
loopne
stos
fdivs
adc
xchg
pushf
inc
mov
insl
sbb
pushf
scas
rcrb
iret
movsl
xor
jg
fldenv
pop
and
fdivs
imul
and
cli
sub
and
jl
mov
imulb
mov
xlat
mull
mov
push
std
adc
sbb
mov
xchg
int3
outsb
add
aad
or
xor
mov
pop
mov
ds
sub
dec
sahf
mov
or
pop
dec
test
dec
mov
je
into
lds
mov
mov
das
clc
xchg
jg
adc
je
push
add
mov
inc
gs
inc
mov
xor
sbb
inc
push
and
xchg
jns
in
pop
xchg
or
adc
out
xor
jp
xor
or
or
lods
dec
es
lcall
test
das
dec
xchg
cmp
mov
push
imul
fists
xchg
sub
sbb
rcll
mov
rcl
mov
les
cmp
mov
add
arpl
rcll
pause
and
shrl
loopne
pop
lret
or
pop
jno
cli
mov
dec
sbb
cmpb
and
imul
xor
shll
adc
dec
in
or
pop
dec
iret
mov
xchg
mov
dec
movsl
xor
mov
mov
nop
rcrb
cli
push
xor
sub
xor
repz
add
inc
pop
in
fcomip
pop
lahf
pop
lahf
sub
inc
xchg
shll
mov
pop
push
aaa
or
cld
sbb
rol
lahf
lods
or
test
pop
xchg
test
xor
jmp
mov
dec
mov
cmp
push
pop
ljmp
jae
adc
jl
nop
jl
repz
dec
sub
or
mov
lret
sbb
imull
sar
push
mov
mov
int3
inc
aaa
addr16
mov
and
push
lret
fwait
subb
movsb
pop
dec
pushf
cmp
pop
or
cmp
movsb
mov
movsl
aaa
push
aad
dec
loopne
aad
dec
xor
push
test
jae
mov
std
sbb
mov
bound
sti
adc
ret
adc
imul
rcr
mov
mov
lret
or
mov
arpl
mov
ss
hlt
fldenv
insb
push
in
movsb
xor
fsubl
mov
test
and
sbb
cwtl
push
sti
jb
arpl
addr16
inc
cmp
mov
push
jae
inc
fnsave
mov
sbb
sub
mov
mov
dec
repz
wbinvd
add
and
icebp
pop
mov
inc
cmp
and
add
imul
add
scas
fldl
and
mov
jecxz
fs
cmpsl
cmp
cmc
mov
test
mov
sbb
es
arpl
stos
pushf
arpl
add
xchg
xor
outsl
push
xchg
ss
mov
mov
mov
mov
in
cmpb
jp
sti
dec
inc
add
pop
add
jns
pop
hlt
adc
push
pop
pop
bnd
loope
mov
dec
fisttpll
xor
shll
jl
jo
xor
lahf
sbb
pop
ja
jbe
inc
cmpsb
pushf
pop
dec
imul
cmp
mov
out
xchg
mov
mov
push
inc
test
stos
lahf
add
movsl
cmpsb
fldcw
inc
jmp
lret
test
fs
mov
jb
hlt
mov
lods
xchg
sar
and
pop
mov
idivb
inc
fisttpll
insb
lds
jo
xchg
xchg
test
adc
pop
and
out
mov
rcrl
mov
in
orb
mov
pop
cmp
and
dec
dec
pop
cmp
mov
inc
mov
jge
jmp
jp
and
js
mov
mov
and
addr16
aas
fldl
addr16
jno
les
lods
mov
or
mov
xchg
xor
icebp
enter
imul
jg
sbb
loopne
mov
mov
sbb
push
lods
mov
aas
imulb
std
movsb
jb
das
dec
cmp
jns
push
or
std
imul
and
scas
and
rol
aam
xchg
into
mov
aad
sub
cltd
push
push
sbb
sbb
pop
rolb
testl
imul
or
loop
sub
int
jle
lret
pop
adc
shl
jge
dec
sub
sub
fwait
sbb
das
push
or
jecxz
int3
andl
ljmp
mov
ret
add
and
and
add
in
sub
addr16
pop
hlt
popa
in
js
stc
cmp
cmpsl
inc
pop
mov
pop
pop
arpl
xchg
lock
das
mov
cld
sbb
xchg
roll
fiadds
dec
test
iret
jb
daa
and
sub
jmp
xor
mov
ds
ret
fnsave
loope
addl
adc
dec
jno
in
jne
cli
jae
and
push
xchg
push
orb
nop
jne
push
and
cli
stc
jge
gs
inc
fwait
rcrb
je
insl
jle
pop
nop
inc
mov
loopne
out
aam
inc
push
in
dec
xchg
fwait
or
jmp
hlt
shr
push
js
jnp
push
xchg
pop
mov
mov
push
jne
test
imul
mov
sbb
test
push
xchg
inc
faddp
ljmp
ds
cmp
gs
mov
imul
lahf
mov
out
aas
and
lret
jp
mov
mov
js
repnz
sub
push
adc
outsb
xor
jmp
xchg
int3
mov
dec
sub
xor
out
jmp
int3
xor
int3
cmp
dec
xor
and
mov
clc
fs
pop
or
lret
pop
popa
lea
and
rol
mov
fprem
xchg
pop
sahf
je,pn
rcll
sbb
mov
jo,pn
pusha
movsl
call
xchg
aam
push
loope
adc
xchg
insl
jns
outsl
adc
test
test
arpl
xor
fcoml
out
push
xor
cmpsb
mov
jbe
pop
inc
aaa
mov
mov
inc
dec
in
mov
scas
pop
fisubl
mov
out
cmp
dec
xor
int3
icebp
imul
dec
loop
mul
inc
mov
lahf
or
pop
cmp
je
xchg
imul
lea
xchg
fwait
mov
and
adc
mov
dec
lods
inc
inc
jae
out
out
inc
xchg
and
dec
test
dec
xor
or
stos
outsl
int3
hlt
mov
sarb
sbb
imul
or
cwtl
std
leave
sahf
lds
xor
stos
test
push
push
lret
mov
inc
dec
push
lea
aaa
scas
jnp
ret
in
push
mov
imul
jns
ret
faddp
mov
cli
jmp
aas
shll
sub
dec
mov
int3
cs
js
cwtl
mov
lret
js
test
xchg
inc
cld
in
and
jg
pushf
mov
cmp
scas
xchg
fistpl
jo
add
aad
sahf
hlt
bound
fcmovb
pop
fs
repz
les
gs
or
mov
jge
out
mov
and
pusha
icebp
stos
and
insb
stc
dec
add
jg
sbbl
and
lahf
adc
push
and
mov
pop
test
pop
scas
inc
mov
cmc
push
pop
dec
stos
out
pop
hlt
add
sbb
push
testl
test
xor
sbb
xor
dec
jg
xor
lock
mov
xor
fildll
xor
sti
pop
dec
movaps
jb
push
xor
cld
test
push
cltd
repnz
add
das
mov
push
sbb
sbb
or
fnstcw
fcmovnb
add
outsl
jecxz
fs
push
stos
mov
fs
cltd
bound
das
lock
roll
add
sub
ljmp
jg
pop
xchg
sti
mov
adc
pop
jmp
mov
mov
mov
inc
push
sbb
enter
xchg
sub
dec
insb
std
push
fisttpll
out
dec
aas
insb
adc
fcmovnbe
pop
xchg
and
iret
hlt
cmp
jg
xchg
les
mov
xor
js
stc
adc
lea
out
or
insl
xor
out
mov
xchg
xor
mov
loop
leave
rclb
cmp
jmp
jp
je
sub
enter
lret
cmp
dec
adc
sbb
jae
mov
sub
shll
mov
sarb
add
cmp
adc
sbb
jge
and
jne
cs
and
mov
imul
cmovne
pop
mov
inc
sbb
fists
dec
sub
ret
insl
push
icebp
js
mov
mov
pop
sub
lock
nop
stos
jle
push
cli
pop
push
mov
imul
inc
or
jne
and
and
test
jg
out
pop
lea
rcll
hlt
sbb
mov
imul
mov
push
test
mov
sub
add
xor
cs
mov
cmp
push
fiaddl
sub
fnstcw
and
fwait
cmpsb
mov
fs
add
xor
fcmovbe
dec
xchg
cmc
cwtl
sbb
cmp
sub
js
cmp
inc
jno
bound
daa
loope
xor
ror
popf
test
inc
scas
aam
shr
cmp
jne
fdiv
fwait
jle
stos
pusha
insl
movsb
mov
rolb
mov
dec
inc
push
cmc
fildll
inc
in
push
inc
ja
jge
cmpsb
decb
mov
lret
sbb
and
jnp
aas
mov
mov
lcall
pusha
lock
adc
cmc
mov
fisttpll
imul
and
push
subb
scas
cmp
inc
scas
mov
inc
xor
add
pop
push
adc
jl
jne
pop
lea
in
in
std
dec
pushl
inc
inc
pop
xchg
jo
imul
loopne
push
into
cmp
and
fwait
in
lcall
xchg
mov
inc
pop
and
aad
sarb
aas
pop
pop
add
lods
xchg
add
movsb
fstl
insb
mov
inc
pop
fldenv
xchg
enter
jmp
and
push
adc
ret
xor
jae
dec
rolb
clc
fucomp
ds
adc
pop
jge
push
add
dec
das
add
inc
or
jno
fistpl
mov
daa
mov
movsl
movsb
in
add
scas
loop
mov
jno
jg
in
sbb
sbb
scas
adc
shl
adc
js
rcrb
and
xor
sbb
xchg
out
movsl
mov
jne
arpl
cmpsl
hlt
imul
fimull
pop
add
fisubrl
mov
fidivrl
mov
xor
dec
and
mov
sub
cmp
ljmp
cmp
lret
add
dec
or
lret
icebp
mov
test
jle
cwtl
mov
pushf
popf
mov
fisttpll
popa
pusha
psubusw
push
and
xor
adcb
cs
aas
xor
ja
out
or
jnp
incl
pushf
sub
pop
lds
pop
mov
cmp
add
or
rclb
pop
imul
rcrl
and
leave
jb
cmc
setae
jbe
in
ror
cmp
cltd
pop
pop
push
je
shrb
stc
int3
pop
xchg
add
fwait
xor
dec
mov
xor
and
fsubrl
mov
cli
sbbl
mov
pop
cmp
out
dec
into
movsl
in
test
cwtl
mov
and
xlat
mov
lods
outsb
adc
add
dec
out
repnz
call
push
jnp
add
out
sub
cmp
jae
call
lahf
push
sarl
lea
ds
sbb
movsl
pop
lods
loop
push
lods
mov
and
xchg
movsl
mov
inc
mov
aad
cmp
lea
dec
loop
loop
je
shrl
or
je
adc
add
sbb
or
mov
es
cmp
fisttps
cmc
cltd
movsl
add
sbb
ret
addr16
lea
and
or
in
fdivrp
dec
inc
xor
mov
pop
sub
iret
stc
inc
aas
fdivl
aad
or
in
mov
dec
sbb
icebp
mov
shrl
jmp
xchg
std
mov
fs
mov
fisttpll
jae
into
ret
in
into
jb
test
push
mov
adc
push
cli
test
add
sbb
out
jns
jle
sbb
sub
push
sbb
insb
jl
lret
mov
lret
les
lret
addr16
push
inc
js
mov
push
pop
rol
fsts
scas
fs
pushw
add
pop
push
inc
ss
adc
sub
xor
push
aad
mov
arpl
das
dec
mov
add
mov
rcrb
add
cmpsb
rcll
stos
enter
adc
inc
out
cmp
test
mov
xor
add
rcll
les
xchg
inc
fldt
and
repz
push
xchg
mov
rcl
lods
lret
sub
xchg
mov
hlt
lcall
aas
mov
rol
cmp
leave
loop
stos
movsb
das
mov
insb
daa
mov
push
call
jb
xchg
lret
dec
stos
jle
sbb
cld
jne
or
add
xchg
pop
adc
mov
std
call
in
and
cli
xchg
dec
cmp
mov
dec
mov
ss
pop
push
xor
jmp
cmpsb
sub
inc
cwtl
loop
xchg
push
dec
cs
dec
dec
pusha
pusha
adc
xor
mov
lret
int3
inc
pop
cmp
aam
hlt
ret
mov
in
jmp
outsl
subb
cmpsb
fsubl
loope
sahf
inc
fdivrl
mov
mov
xlat
jle
fstpl
mov
stc
pop
jne
popa
sub
cmpsl
mov
icebp
dec
xchg
ljmp
mov
js
repnz
push
imul
gs
and
sti
inc
and
add
push
js
cmp
cli
lods
jno
adc
mov
std
xor
std
sub
dec
mov
mov
les
gs
popf
inc
pop
nop
sti
push
mov
jecxz
adc
imul
inc
pop
out
out
enter
outsb
xor
orl
sti
lds
insl
iret
mov
mov
pop
icebp
int
push
jle
pop
jne
mov
add
and
sub
or
mov
pushf
pop
stos
xchg
in
push
mov
mov
mov
inc
iret
roll
sub
inc
out
dec
loop
xchg
ljmp
pop
and
into
push
lahf
aad
jne
push
add
add
outsl
test
or
sbbb
add
push
mov
and
ja
mov
inc
fimull
movsl
pop
jns
into
mov
jne
aaa
mov
cmp
jne
daa
mov
mov
lds
scas
imul
das
std
arpl
stos
mov
pop
in
out
push
xchg
xor
sub
icebp
test
lods
leave
sbb
mov
inc
outsl
inc
xchg
jns
sbb
mov
std
xor
cli
cmpl
popf
mulb
stc
aam
push
hlt
xchg
push
mov
in
push
shr
cmpsb
cmp
and
mov
popf
dec
fcoms
clc
add
mov
jne
xchg
inc
mov
sub
add
sub
lahf
out
aam
shr
lea
pusha
rcr
and
daa
arpl
lret
xorb
pop
lret
mov
scas
dec
adcb
out
jle
mov
movsl
mov
popa
adcl
cmp
pop
shll
subb
jge
jb
pop
xor
cli
adc
and
test
sub
mov
iret
and
icebp
xor
mov
leave
je
inc
int
js
inc
enter
mov
xchg
movsl
lret
add
mov
push
or
jecxz
sub
stos
enter
in
data16
aad
insb
ds
pop
ds
push
dec
mov
pop
push
pop
mulb
xchg
out
lahf
xchg
sbb
hlt
add
call
xchg
mov
xorl
test
imul
je
mov
sub
lret
stc
jne
and
mov
sub
lret
jae
aaa
shr
mov
arpl
repnz
or
inc
fistpl
aam
mov
aam
cmc
sub
cmpsl
pop
mov
lahf
add
jnp
push
jle
lock
dec
mov
cmp
in
xor
push
pop
inc
and
movsl
testb
cmp
lahf
mov
out
jno
and
sarl
cs
in
shrl
insl
fsubl
mov
cmpsb
scas
dec
pop
and
mov
lahf
mov
cmp
and
mulb
mov
ja
mov
mov
jg
sbb
ret
push
xchg
fs
xchg
aaa
jbe
adc
dec
orb
ja
jbe
inc
sub
push
mov
mov
add
dec
test
repnz
jp
sub
addr16
or
sub
leave
or
nop
xchg
adc
repnz
xchg
push
aam
stos
add
out
fwait
xchg
inc
or
jb
es
fisttpl
ret
addr16
push
push
cmp
int3
pop
mov
cmp
mov
mov
mov
push
addr16
lret
add
inc
ljmp
mov
pop
cwtl
dec
sbbb
loopne
cmp
pop
mov
cmp
xchg
cs
test
subb
mov
das
js
sub
loopne
mov
das
jmp
jmp
movsl
xor
daa
jge
mov
cmpsl
sub
ret
sbb
and
daa
mov
add
sbb
out
sbb
out
test
lock
cmp
out
lods
aaa
and
es
xor
inc
imul
popa
add
jo
and
xor
xor
xor
imul
add
push
mov
movsl
fwait
addr16
xorb
xor
add
mov
leave
ret
or
mov
inc
movsb
arpl
inc
test
test
andb
sub
cmc
gs
out
lahf
stc
mov
mov
xchg
xchg
or
es
je
dec
fidivl
shlb
stos
lret
sbbb
xchg
rcr
pusha
sub
inc
xlat
adc
cmp
dec
enter
or
inc
scas
in
movsb
lock
outsl
jl
sahf
xchg
jmp
sbb
or
nop
xchg
xor
jecxz
inc
or
adc
loop
xor
add
je
cmp
bound
add
mov
sub
mov
inc
bound
into
stos
xchg
mov
mov
fdivl
bound
je
push
in
mov
scas
push
jecxz
add
aas
cmc
hlt
incl
dec
je
push
repz
negb
lea
int3
xor
stc
daa
fildl
sarb
mov
cld
inc
andl
sti
scas
push
arpl
mov
popa
rorl
stos
outsb
call
jne
cmp
fidivrs
xor
clc
jge
inc
mov
inc
loop
and
inc
cmpsl
jge
out
sahf
fisttps
pusha
xchg
xchg
xchg
push
cmc
inc
mov
cmp
jmp
xor
sub
jno
pusha
std
stos
inc
jo
lea
xchg
mov
cmpsl
add
lret
in
ret
jmp
in
mov
and
pop
aad
mov
push
jno
roll
test
test
scas
jae
dec
jns
xchg
daa
mov
lret
add
mov
stc
movsb
das
sbb
mov
mov
int
rcll
cmp
sbb
dec
ret
cmp
or
lea
icebp
mov
js
pop
xor
jg
jl
sbb
fnstsw
hlt
ret
sub
sub
inc
mov
push
xchg
xchg
mov
cli
scas
cmp
stc
ljmp
out
aad
inc
lods
gs
or
neg
ss
push
push
cltd
inc
cmp
fbld
nop
aaa
cltd
orl
into
data16
test
addl
cmp
dec
pop
pushf
sub
jp
das
cmpsb
jns
mov
int
or
push
repnz
les
pusha
clc
push
add
test
xor
xor
jmp
push
daa
sub
jb
lods
add
cmp
imul
add
add
mov
jne
sub
and
out
pop
shrb
push
or
jns
test
xchg
cmpsl
push
xchg
aam
dec
jae
push
test
cwtl
push
das
int
aad
sub
mov
mov
je
out
mov
inc
mov
push
cmpsb
repz
stos
ja
jnp
xor
pop
mov
jg
cmpsl
push
movsl
lahf
jl
adc
sub
mov
movsb
and
scas
sarb
jle
sbb
push
or
aam
xchg
shlb
pop
or
fs
stos
stos
scas
movl
incb
jmpw
jge
sbbb
inc
in
xor
xchg
repz
mov
push
ret
pop
push
adc
cli
mov
pop
pop
inc
nop
adc
jb
out
test
outsb
popa
popf
xchg
jp
ficompl
stos
shlb
aad
mov
lret
hlt
lea
jge
push
sbb
pop
loope
idivl
sub
and
adc
mov
es
pop
jle
cmp
xchg
fisubl
test
jecxz
push
dec
xor
sub
psrld
std
mov
mov
mov
sarb
mov
ret
sub
icebp
std
cmp
pop
xor
pop
test
dec
sbb
aaa
loop
adc
mov
pop
sub
add
pop
mov
xor
iret
add
addr16
dec
sti
pop
jo
mov
out
push
and
aad
out
cli
push
rcr
outsl
jge
in
mov
sahf
lcall
xlat
sbb
sub
scas
pop
xchg
loopne
call
fstpt
or
inc
aad
xchg
jb
bound
repz
push
jo
sahf
sub
add
xchg
jle
pop
mov
jg
push
mov
or
add
pop
mov
push
stos
or
sub
aaa
push
repnz
fwait
bound
mov
or
stos
lds
sti
dec
decb
std
insl
in
mov
fcoml
notl
pop
sbbl
inc
or
call
xchg
das
add
leave
loop
popa
cmp
or
push
cmp
adc
mov
neg
bound
or
sbb
sub
cmpsl
jns
xchg
mov
mov
hlt
std
adc
pushf
inc
jmp
call
mov
lea
mov
xchg
mov
mov
jnp
or
jle
lock
add
mov
sahf
dec
lret
mov
fistps
out
jge
jge
les
inc
fcoml
mov
insl
sub
cmc
getsec
and
ljmp
test
sbb
mov
add
es
int3
popf
andb
rcrl
lcall
adcl
shl
and
fisubs
adc
mov
pushf
jge
ret
popa
nop
cmpsb
inc
adc
in
mov
aaa
pop
sub
clc
aam
mov
mov
out
int3
daa
add
in
shl
mov
adc
sbb
adc
adc
mov
or
sbb
testl
adcb
add
xor
lret
das
fnstcw
sub
shll
xor
dec
pop
imul
cwtl
out
pop
push
mov
mov
daa
inc
sbb
or
ljmp
out
popa
sarb
xor
mov
pop
dec
imul
sbb
pop
imul
adc
ss
aad
xchg
xor
cli
mov
push
ss
lret
or
xchg
dec
imul
pop
mov
test
cmc
movsb
popf
stos
sbb
bound
mov
xchg
pop
jo
scas
add
cwtl
mov
and
in
push
add
mov
add
lret
test
movsb
add
js
call
lds
ret
jno
pop
inc
roll
adc
popf
and
cmp
mov
dec
push
sub
or
adc
inc
ret
inc
mov
push
shr
jnp
mov
dec
daa
mov
push
pop
cmp
int
pop
mov
stos
addr16
pushf
cmc
movsb
dec
push
in
scas
not
or
jecxz
jl
inc
aam
enter
mov
add
xor
pop
pop
or
or
rcll
das
dec
addr16
mov
sub
lock
add
jno
ds
pushf
jg
insl
lock
adc
add
stos
pusha
cwtl
mov
jns
mov
fidivs
repz
fsubr
inc
jns
push
in
adc
mov
or
pop
add
jns
dec
mov
leave
and
in
fdivl
push
mov
popf
xchg
mov
jecxz
push
inc
ret
fdivp
pop
mov
pop
outsl
or
adc
adc
mov
pop
js
fcom
cmpsb
dec
xor
fstpl
mov
add
xor
mov
out
stc
adc
cltd
dec
test
push
mov
mov
pop
into
les
faddl
and
pop
pop
aaa
jnp
fcoms
xor
adc
outsl
aam
and
jp
or
cwtl
dec
xchg
adc
xchg
push
ds
lahf
mov
sbb
cmp
sbb
xchg
sub
lret
mov
test
ss
fildll
and
mov
push
notb
jae
jmp
int
add
sub
or
sbb
mov
std
cli
jecxz
stos
xchg
inc
adc
test
ljmp
or
push
xchg
es
cmpsl
lret
or
adc
mov
data16
data16
sub
lods
popa
sti
mov
fdivp
mov
insl
add
rcrl
dec
jae
call
gs
inc
loop
cmp
sbb
ss
in
add
jg
mov
test
aas
pop
orb
mov
jo
out
sbb
jae
dec
adc
fs
in
adc
adcl
and
rcrl
js
xor
push
int3
ret
jnp
mov
bnd
icebp
divl
pop
mov
das
sbb
fsubs
std
fistpl
jne
loop
jge
inc
inc
roll
add
aam
cli
mov
dec
repnz
and
lret
scas
mov
or
and
gs
fidivrl
pushf
add
test
push
aaa
inc
inc
cmp
mov
pop
jge
inc
testl
leave
pop
outsb
xchg
enter
pushf
stos
mov
dec
in
aaa
cwtl
mov
rorb
inc
sub
ljmp
push
stos
pop
and
xchg
cmp
push
push
movsb
xchg
cmp
fwait
sahf
cli
jmp
pop
and
inc
pop
push
jno
dec
sub
adc
jmp
mov
jo
sti
mov
insb
lret
dec
jl
testl
jno
test
cmp
xchg
adc
inc
add
mov
xorl
xor
sub
or
mov
hlt
cltd
scas
adc
or
fwait
loope
pop
inc
push
pop
rcrl
ljmp
xchg
int
cmp
mov
pop
nop
push
movsb
loop
insb
xor
ss
push
inc
sub
testl
sbb
mov
mov
mov
adcb
popa
dec
jae
xor
scas
fsts
push
xlat
sub
call
xor
orl
push
aad
or
adc
lahf
sbb
cld
popa
mov
mov
xchg
xchg
aam
and
data16
inc
adc
roll
xor
sub
and
std
testl
fsubp
xor
inc
mov
xchg
sub
movsb
xchg
push
lcall
mov
lea
shrb
out
xchg
lea
daa
rclb
popa
loopne
or
lods
sub
jmp
add
icebp
cmp
pushf
fbld
adc
test
jg
jmp
sbb
loopne
iret
and
or
push
push
push
and
xor
orb
cmpl
xchg
pop
stos
sbb
add
add
out
and
xor
pop
push
addl
ficoml
lock
add
cmp
cwtl
cmp
clc
adc
mov
je
aam
inc
jbe
sub
xor
ds
push
pop
insl
lahf
xor
aaa
fs
dec
push
ret
mov
in
sbb
dec
stos
xchg
xchg
and
xlat
mov
imul
lcall
test
mov
fwait
scas
hlt
sub
push
test
jne
jb
sub
test
xor
inc
adc
loope
pop
fisubs
inc
mov
dec
xchg
sub
stos
arpl
daa
repz
movsb
mov
or
push
mov
sub
jo
ja
xchg
test
cmp
sub
push
in
outsb
scas
xor
push
scas
nop
push
testb
orl
mov
fstl
cmp
lret
cmp
mov
mov
jno
mov
sbbb
es
inc
stos
pop
sbb
jl
fistpl
adc
ljmp
enter
add
je
xor
in
jno
mov
repz
jp
add
pop
mov
cmpsl
icebp
int3
outsl
or
inc
mov
pop
and
or
xchg
aam
mov
jle
outsl
sbb
xchg
ret
fwait
std
inc
je
mulb
mov
inc
cmpsl
cs
int3
inc
je
aam
mov
mov
sbb
dec
adc
test
cmova
jnp
popf
sub
adcl
gs
in
mov
fsubs
inc
int
jae
daa
arpl
xchg
add
icebp
shr
pop
sarb
fnstsw
cmpsb
pushl
or
inc
mov
out
lret
push
mov
int3
dec
xchg
push
in
adc
xor
loope
sub
hlt
or
jnp
push
lret
mov
xlat
inc
jmp
or
lea
arpl
inc
into
pop
inc
std
out
mov
push
jp
and
inc
imul
inc
adc
shrb
adc
jecxz
and
jne
lods
cltd
pop
in
loop
xchg
or
vphaddubd
aam
sbb
imul
rolb
inc
ds
sbb
pop
pop
mov
push
mov
aad
test
daa
mov
xor
fimuls
popa
mov
sub
stos
repnz
push
sub
pop
jecxz
xchg
xor
daa
aam
aad
ss
dec
and
loope
mov
cld
aas
add
test
adc
inc
testb
pop
sub
inc
loope
lcall
out
dec
shlb
js
mov
or
mov
sub
popa
add
shl
jle
add
cld
pop
mov
int3
enter
push
pop
jns
xchg
bound
in
xchg
scas
bound
or
mov
jecxz
xlat
adc
mov
addl
mov
cltd
movl
test
add
add
xchg
dec
pushf
sub
sahf
cmp
sbb
mov
sbb
jl,pt
mov
fcoml
test
repnz
mov
insl
movsb
addr16
and
popf
imul
sbb
test
les
jle
sub
adc
adc
icebp
sbbb
out
add
repz
stc
inc
inc
adc
or
shlb
sbbl
push
jecxz
cmc
lods
fldln2
xchg
hlt
mov
cmp
std
aaa
subb
shlb
addr16
dec
shll
call
mov
cmp
out
lret
icebp
cld
je
shll
je
incb
rolb
imul
icebp
jp
or
in
lock
mov
sbb
sbb
sbb
mov
fstpl
push
fimull
mov
ret
pop
clc
ffree
cmp
andl
ljmp
jbe
outsb
les
xlat
mov
adc
aad
sub
sbb
or
pop
leave
xor
sub
push
adc
ficoml
cmp
pop
cmpsb
mov
push
mov
mov
dec
ds
push
mov
ljmp
int3
out
push
dec
cmp
lods
popf
mov
stos
push
adc
and
mov
mov
cli
lahf
push
and
scas
test
xor
add
call
jp
mov
sub
inc
sub
scas
test
jne
jmp
insb
cmpsl
sub
mov
loope
pop
inc
pop
sbb
pop
out
dec
mov
mov
fwait
cs
rcrl
out
adc
xchg
jne
lahf
pusha
pop
push
sub
popf
sub
cs
adc
jmp
imul
dec
or
pop
mov
rolb
xorl
ja
fptan
out
mov
aam
sbbb
push
inc
cwtl
mov
test
inc
lret
popf
lahf
xchg
testl
shr
xor
movl
lret
scas
dec
scas
jno
cmp
scas
pop
sbb
inc
push
push
cld
fistl
lods
inc
mov
push
scas
push
adc
xor
mov
xor
and
jne
imul
sub
or
mov
jl
in
sahf
es
push
int3
jle
mov
xchg
aam
mov
mov
scas
mov
bound
loop
pop
pop
jno
lods
cltd
adc
rclb
dec
mov
cmp
aaa
mov
sub
mov
xor
mov
and
fwait
clc
push
xchg
ret
or
cmpsl
xchg
jp
xor
inc
push
xchg
fbstp
adc
dec
or
bound
add
pop
pop
xor
addr16
mov
lock
sub
sub
cltd
and
or
in
jge
aam
outsb
fcmovnbe
sub
lcall
stos
mov
xchg
mov
cmp
jb
es
leave
out
mov
xchg
or
cmpb
jo
jae
sub
sub
sub
gs
pop
cli
rorl
push
mov
cmp
dec
les
ret
les
lret
mov
rcrb
lods
ret
cmp
jne
out
imul
pop
cmpsl
sbb
hlt
pushf
shll
orl
addb
clc
mov
push
xchg
addb
xchg
xor
dec
aad
or
dec
push
lcall
mov
adc
jge
loopne
inc
loop
mov
test
dec
lock
pop
addl
xor
push
hlt
mov
xorb
data16
adc
push
aam
mov
jb
sub
outsl
iret
or
out
jl
into
shlb
loop
mov
orps
mov
lea
clc
loop
cmp
mov
in
in
out
dec
fildl
inc
pushf
aad
pop
aad
mov
shl
mov
aas
dec
loopne
mov
adc
daa
pop
push
sub
leave
lcall
scas
add
nop
and
xchg
mov
movsb
scas
inc
mov
dec
add
xchg
dec
cli
and
sub
nop
gs
add
les
ret
movsb
jle
push
xor
stc
cld
jo
cmp
pop
jecxz
mov
cmp
push
lahf
idivb
es
test
in
lea
stos
dec
icebp
pop
pop
jno
sub
test
push
ss
fs
pop
jmp
mov
jo
inc
addps
imull
push
in
dec
cwtl
cmc
mov
rorl
mov
call
cmp
and
push
stos
push
dec
fidivl
ficompl
insb
jnp
cmpsl
xchg
pop
in
mov
jno
dec
cmpsl
pop
sbb
cmp
je
xorb
inc
out
fdivs
push
int3
add
ja
push
mov
in
xor
mov
dec
mov
push
jmp
jg
rcr
mov
xlat
sti
loopne
test
mov
lds
out
fucomp
dec
rorl
sub
stos
xor
jge
push
dec
dec
movsb
jb
lds
dec
inc
xchg
jg
negb
call
mov
mov
rcrb
and
mov
imulb
repnz
pop
test
imul
mov
adc
xchg
cwtl
jno
adc
adc
sarl
adcb
inc
pop
inc
inc
das
je
mov
mov
sub
xor
mov
jne
imul
jl
popf
pop
xor
xorl
and
inc
jae
jo
int3
cmp
inc
hlt
or
addr16
fdivrl
xchg
push
and
sub
xchg
adc
clc
cli
pusha
dec
jno
mov
lock
dec
xlat
montmul
cmpsb
inc
clc
lahf
mov
and
or
clc
adc
insl
cmp
cmp
pop
lods
popf
push
shlb
sti
jge
loope
push
mov
bnd
iret
inc
dec
push
inc
sub
gs
das
fisttpl
subl
and
adc
in
loopne
sub
popf
mov
sbb
fsubrs
jecxz
ret
lods
lods
stos
xor
mov
fnsave
and
mov
lods
icebp
inc
pop
cmp
xor
repnz
or
int
and
aaa
add
dec
rclb
cwtl
xchg
xor
inc
dec
sub
push
add
lahf
sub
sub
pushf
sbb
cmpsb
fsub
mov
lods
pop
sbb
adc
fisubs
test
stc
negl
fists
lret
sti
pop
gs
mov
cmp
adc
or
mov
aaa
pop
lret
fisubs
push
adc
pop
jg
cmp
lcall
and
in
jbe
jne
and
dec
jne
lcall
dec
out
enter
mov
ret
pop
loope
idivb
dec
je
inc
sub
loope
push
jle
adc
fisubs
fiaddl
mov
pusha
fsubrl
ds
in
jle
jl
adc
lret
push
inc
pop
ret
xor
inc
cmp
inc
pcmpeqd
mov
sti
xlat
jl
inc
bound
je
jne
dec
and
jle
cli
add
cmp
cmp
mov
test
outsl
pop
ja
cwtl
fwait
stos
int
int
mov
call
cmp
jns
mov
mov
add
push
or
loope
arpl
out
and
lcall
mov
ja
loope
bound
pop
scas
jae
adc
xor
es
jg
cwtl
jno
cmc
mov
lret
lds
mov
pop
cmp
push
aam
sub
test
mov
in
jae
icebp
lret
sbb
js
and
mov
stc
popa
out
repz
or
and
mov
cmp
pop
sub
mov
movsb
icebp
loope
cltd
jb
push
mov
cmp
mov
push
mov
test
pop
cltd
clc
mov
ror
and
fcmovne
jmp
imul
pop
cmp
dec
and
jae
jns
adc
pop
popf
fdivrs
pop
jno
cmp
cmp
pusha
or
inc
mov
mov
add
in
mov
test
test
aaa
data16
xchg
outsl
rcrb
or
cmp
decl
cmp
ficoms
inc
das
imul
or
in
out
mov
fsubl
mov
or
xor
cmp
push
repz
test
add
and
in
sbb
insl
in
into
arpl
jne
dec
stos
lcall
test
repnz
out
jg
cmp
nop
inc
mov
push
cmp
mov
bnd
gs
fnstcw
mov
mov
insl
mov
jne
cld
mov
stc
cmp
jns
rcrb
aad
push
dec
or
jmp
adc
sbb
dec
stos
mov
pop
insb
fsubs
loopne
mov
jl
or
mov
xor
cmpsb
push
jecxz
lods
cltd
fwait
push
dec
mov
ret
dec
into
sub
jo
ficoms
insl
in
stos
in
ftst
test
mov
cmpb
ret
add
in
fsubl
jnp
rclb
push
cmp
negb
movsl
lahf
lds
xchg
mov
mov
fidivrs
ljmp
in
loop
out
mov
push
and
mov
outsl
jo
push
xor
rorl
sbb
insb
push
jns
cli
pushf
insb
movsl
je
ret
clc
in
push
mov
cmp
dec
inc
loop
out
xchg
mov
ficompl
insb
ljmp
cs
test
add
mov
push
jle
pushl
cmp
or
lock
test
es
mov
push
stc
mov
jmp
dec
xchg
mov
in
mov
mov
push
jae
cmc
jle
fs
frstor
mov
add
call
stc
and
mov
in
jmp
ljmp
push
jg
sbb
call
dec
jle
icebp
or
fldt
xchg
cld
imul
andl
mov
mov
jae
mov
jecxz
inc
fsubr
stos
adc
and
popa
cltd
loopne
movl
test
sbb
cli
stc
mov
jge
popf
lock
jo
cwtl
rclb
sbb
js
cmpsl
out
loopne
mov
sub
aas
sahf
mov
fisubs
call
cmp
add
mov
jecxz
cwtl
js
cs
inc
and
mov
fwait
cltd
mov
jge
sub
in
and
sarl
cmpsl
or
repnz
loope
inc
pop
push
mov
xchg
mov
int
push
fmuls
sbb
jge
adc
mov
imul
mov
inc
dec
std
pusha
adc
jle
sbb
es
cs
stc
add
enter
xor
test
insb
mov
out
cmp
outsl
push
pushl
loop
jge
push
outsl
sub
mov
out
ret
mov
jbe
sbb
add
ret
and
jne
inc
data16
jb
scas
cmc
push
inc
sbb
data16
or
xlat
add
mov
sub
inc
imul
mov
inc
jg
cmpsb
lea
cmp
or
imull
into
leave
stos
add
xchg
inc
xor
inc
les
loope
xchg
lret
push
arpl
cld
dec
dec
cmp
loop
fxch
lods
sar
insl
or
xchg
aam
mov
xor
aaa
push
int
mov
roll
cmp
aam
shl
jg
repz
sub
xchg
fwait
scas
fxch
aam
cmp
jge
loope
xor
push
push
mov
add
adc
cli
sti
or
mov
pusha
sbb
iret
leave
add
jbe
nop
or
dec
idivl
daa
or
fcoms
fidivs
inc
lret
or
sub
xchg
pop
clc
lret
lahf
fstl
jg
push
int
sub
scas
lock
pop
xor
cmp
or
lods
mov
dec
xor
jnp
inc
push
das
pushl
jne
les
add
mov
and
int
bound
cs
lock
or
and
lahf
loope
add
mov
pushf
add
lods
outsl
mov
or
jg
enter
out
int3
inc
adc
sbb
or
in
mov
outsb
lods
push
adc
jne
jmp
jg
sbb
cmc
iret
jg
aas
jp
xchg
dec
dec
sub
aad
cmp
nopl
sub
inc
in
jp
push
dec
out
repnz
mov
test
dec
test
mov
jg
mov
leave
xchg
cmp
es
lds
add
push
out
or
mov
mov
jle
jo
and
push
lea
xchg
xor
rcrb
dec
fldenv
sub
pop
jnp
adc
mov
cmp
xor
bnd
jge
xor
push
cltd
daa
out
fadds
adc
jns
jp
lcall
cmpl
pop
and
pushf
roll
mov
mov
cmp
push
in
and
jo
dec
into
pop
mov
scas
movsb
dec
sahf
test
jbe
xchg
iret
cmovl
adc
sbb
pop
nop
sarl
lret
or
outsl
jo
lods
jo
in
in
jne
les
mov
lods
cmp
iret
int3
jbe
aas
rcrl
mov
mov
fcmovbe
lock
push
xor
cltd
hlt
fisubrl
or
lret
mov
js
xlat
repz
jle
push
and
movsl
negl
test
adc
fsub
fsubrp
sub
inc
dec
push
out
cmp
lods
push
adc
xor
lcall
repnz
cmpb
or
push
mov
aam
push
test
jge
mov
cmp
mov
xor
mov
adc
pop
add
movl
mov
pop
sub
mov
mov
pusha
and
or
ljmp
dec
mov
mov
outsl
in
mov
out
pop
dec
sbb
cmpsl
es
insl
jo
pop
cltd
scas
add
shrl
out
mov
or
shrb
lods
in
clc
inc
lcall
mov
pop
xor
xor
mov
jl
jl
loope
dec
test
out
int
test
lret
jns
push
nop
ja
jmp
pusha
enter
mov
ljmp
out
xor
cmpsl
test
scas
push
sbb
xor
pop
jno
mov
cmp
repz
and
popa
orl
insl
dec
mov
loopne
jp
or
xchg
pushf
insb
add
addr16
push
and
orb
and
pop
cld
les
sub
jl
and
call
jl
jge
jge
jl
jb
adc
jne,pt
push
pop
in
hlt
gs
xor
lods
dec
xor
cmpsb
fldl2t
sarb
adc
loopne
mov
sub
jbe
ja
sbb
cmp
mov
push
ss
call
nop
nop
subb
shlb
mov
lods
dec
fsubrp
mov
pop
xchg
in
std
scas
fbstp
inc
repz
jmp
negl
inc
sub
pop
add
push
pop
jle
loope
fidivrl
push
mov
icebp
or
jge
lods
repnz
fdivs
inc
addr16
fildll
xor
mov
or
popf
lds
aam
out
xchg
rcl
mov
cltd
jle
out
loop
stos
sub
es
sti
xlat
add
mov
lds
insl
xchg
inc
mov
std
dec
orl
pop
sub
std
mov
push
lcall
xchg
sub
mov
popf
cli
xchg
and
push
fwait
cmpsb
adc
mov
pushf
inc
add
pop
jle
lea
fsubp
jb
jle
sub
fidivrs
dec
cmp
leave
cltd
mov
xchg
shl
add
add
aaa
sub
mov
iret
das
repnz
sbb
stc
mov
sub
or
dec
repnz
popa
fs
loope
adc
sbb
int3
imul
push
pusha
lret
shrb
les
rcll
or
xor
enter
neg
xor
and
mov
xchg
nop
sub
leave
testb
push
add
sbb
iret
jl
sub
lods
adc
cmpsb
sarl
ret
or
mov
xlat
sub
mov
gs
pop
cmp
call
aad
cld
js
push
scas
pusha
in
rolb
jnp
rolb
icebp
mov
adc
sub
pop
fdivrs
test
imul
pop
mov
sti
leave
mov
rclb
movsb
jmp
in
xchg
scas
or
fldcw
mov
inc
push
jmp
inc
fwait
sub
not
dec
lahf
loopne
dec
insl
mov
sub
jecxz
test
push
xor
or
pop
or
into
int
stos
pop
data16
sub
adc
adc
jns
mov
stos
sahf
mov
push
fldt
ljmp
push
sbb
clc
lret
insb
repz
or
shll
xorb
mov
sub
ret
lods
pop
dec
sahf
pop
xchg
ja
xchg
sysret
lock
jbe
fmull
mov
sti
push
bnd
test
jnp
out
gs
lods
sbb
adc
fucomip
incb
andb
jmp
pop
pop
and
loopne
inc
cwtl
add
xor
mov
stos
leave
inc
fsubrp
xlat
inc
add
pop
insb
pop
cli
std
pusha
mov
stc
cmpsb
leave
push
les
dec
or
add
je
push
push
mov
out
enter
mov
fldl
rcrb
or
ret
and
cmp
adc
test
dec
clc
add
lds
cmp
pop
popa
data16
jne
and
pop
notl
push
fs
das
icebp
mov
cmp
add
out
xchg
and
loop
xchg
ret
sub
cmp
loop
pop
mov
outsb
jg
and
shrb
cmp
fists
sbb
jmp
inc
out
paddusb
sbb
stc
adc
lds
mov
xbegin
dec
jp
cmp
mov
dec
cltd
mov
sub
imul
mov
je,pt
jecxz
or
fdivl
pushf
dec
mov
rcl
xchg
jecxz
xchg
or
xchg
and
xchg
adc
pop
xor
ds
cld
sub
ret
inc
sbb
cltd
in
jnp
push
pop
lock
push
add
rcrb
cli
inc
and
cmp
or
out
les
shll
je
iret
pushf
cmp
out
pop
lods
gs
or
add
nop
push
cmc
faddl
mov
jge
dec
lock
icebp
test
arpl
hlt
fsubs
mov
js
clc
add
push
ljmp
pop
sbb
lea
adc
xchg
hlt
cmpsl
mov
cmp
inc
shr
mov
mov
setnp
sub
mov
push
or
jecxz
mov
aam
mov
and
scas
lods
dec
mov
sar
sti
lds
mov
dec
mov
inc
andl
sbb
lds
outsb
xchg
fisubrl
xor
loop
popa
scas
bound
or
push
enter
or
xor
inc
lock
es
xor
lret
jge
xlat
mov
push
pop
mov
fiaddl
and
push
adc
mov
dec
out
insb
out
sub
jecxz
cs
movsl
fsubrs
fwait
cmp
loope
insb
icebp
pop
mov
jno
and
or
pop
and
imull
xor
movsb
pop
sbb
inc
pop
bound
setne
andl
push
sub
movsl
lret
imulb
leave
mov
pop
ds
sub
call
repnz
and
xlat
sub
mov
jecxz
jae
push
sub
xor
sahf
test
pop
sar
loope
mov
addl
cmp
jle
jecxz
push
int
adc
add
outsl
stos
mov
dec
fmul
dec
mov
push
lea
cmp
ss
imul
sbb
push
jp
out
and
je
pop
xor
pop
sbbb
dec
jo
mov
loop
push
adc
imul
loopne
xor
in
fadd
jp
subb
sub
mov
mov
add
repnz
daa
adc
and
mov
pop
shrl
dec
xchg
into
dec
adc
arpl
cmp
mov
testb
push
sbb
mov
lahf
and
pop
cmp
mov
mov
push
insb
fs
cmpsl
mov
mov
lds
inc
cltd
jp
jbe
clc
out
lods
mov
cwtl
insl
mov
stos
je
mov
fidivs
add
pop
cmp
popa
in
repz
out
data16
sbb
xchg
pop
mov
fisttpll
sub
dec
pop
jge
dec
mov
sub
mov
xchg
or
jmp
test
clc
aas
xchg
test
and
leave
jg
xchg
out
pop
gs
inc
fldt
inc
imul
aaa
mov
int3
xlat
ja
jno
nop
and
lcall
lods
popf
je
push
mov
fldl
pop
pop
sti
jb
add
enter
out
dec
adc
adc
fwait
inc
inc
call
dec
pop
cs
ror
rolb
cmp
and
lods
mov
cmp
sub
mov
test
cli
ds
dec
test
inc
pop
cwtl
push
dec
mov
lret
add
xor
or
mov
jecxz
jne
icebp
fwait
stc
lcall
sub
push
and
and
fnstcw
in
gs
popa
fmulp
fildll
adc
out
push
jmp
adc
mov
sub
lret
sub
js
pop
adc
or
icebp
pop
mov
pop
mov
lcall
std
in
dec
jne
jnp
mov
mov
mov
push
mov
in
fs
pop
xor
aad
inc
test
pop
shll
push
fsubrs
pop
pop
insl
sub
inc
xchg
pop
adc
aaa
daa
test
rcll
pop
pop
psrlq
je
cmc
sbb
out
mov
adc
cltd
pop
stc
fiaddl
arpl
push
leave
push
int3
xlat
insb
fnstenv
lret
leave
ds
lock
outsl
cmp
jl
movsb
and
xor
adcb
xor
push
stos
xchg
lea
je
bnd
jb
mov
or
fisttpl
lret
sbb
test
pop
or
in
pop
cwtl
mov
mov
aad
mov
dec
jo
mov
sub
addr16
adc
pusha
xor
sbb
push
inc
mov
std
leave
aam
stos
data16
fnstsw
mov
fbstp
mov
or
xor
xchg
and
jae
jnp
xchg
cld
enter
lcall
in
out
mov
jmp
jl
mov
lcall
add
pop
sahf
inc
cmp
pop
and
push
scas
fmull
sbb
xorl
daa
loopne
scas
scas
je
mov
pusha
bnd
mov
xchg
loope
dec
aas
insl
sbb
inc
mov
les
cmp
pop
out
in
fldt
and
xchg
inc
xchg
or
xchg
cmp
jecxz
pop
push
cmp
pushf
or
sarb
pushf
jle
and
jae
xchg
mov
cli
fwait
xchg
insb
lock
sbb
sbb
jl
or
xchg
push
sub
or
add
add
fcoms
sub
test
add
sbb
or
jno
int3
mov
sbb
test
mov
cmpl
cs
dec
insb
filds
fdivr
cmovne
in
shll
adc
cmp
adc
leave
out
xor
mull
xchg
imull
xor
hlt
ret
clc
mov
cmp
out
into
jge
push
or
mov
aam
mov
cmp
pop
pop
mov
or
and
mov
ljmp
lcall
add
xor
dec
mov
jle
repnz
lcall
scas
movsb
idivb
and
lret
sub
js
add
sub
push
sub
cmp
mulb
cwtl
dec
sub
ret
xlat
cmp
sbb
aaa
push
lcall
les
mov
out
dec
pop
sub
and
addr16
idivl
rcrl
cmpsl
jmp
imul
int3
sub
sub
inc
add
jo
mov
lods
sbb
pop
dec
adc
cmpsl
dec
std
push
movsb
lea
out
insb
mov
out
mov
push
mov
stos
jbe
mov
in
push
sbb
cmp
add
add
loop
or
pop
jno
jp
mov
xchg
add
in
sub
imul
mov
push
sub
mov
push
hlt
sub
mov
push
cmp
dec
or
repnz
mov
sbb
rorl
aam
pusha
lock
add
inc
in
push
and
mov
pop
mov
ret
into
xchg
outsb
arpl
sub
mov
inc
sub
sub
les
pop
or
jmp
jnp
push
jno
push
xor
out
test
mov
jmp
jg
adc
inc
dec
adc
add
test
pop
sub
xchg
xchg
push
inc
popa
and
shll
in
sar
jns
dec
es
push
inc
loop
mov
inc
mov
pop
jne
cwtl
cmp
inc
mov
inc
sbb
imul
mov
push
fcmovb
cmp
shrb
pop
or
cmc
jbe,pt
and
fwait
jbe
and
movsl
into
cmp
dec
xchg
ja
xchg
cmpsb
xchg
cmpsb
insb
mov
ljmp
sbb
or
orl
mov
pop
xor
repz
dec
pop
cmp
sbb
fiadds
fsincos
adc
loop
add
mov
fwait
jne
mull
loop
jle
add
xor
or
pop
sbb
stos
xchg
iret
add
call
ljmp
sbb
ja
or
add
mov
mov
stc
pusha
in
xor
mov
dec
aaa
loop
int3
fs
dec
mov
aad
sahf
jb
inc
mov
lretw
pop
dec
loop
sbb
mov
das
loop
in
push
in
push
aad
lods
and
jne
pop
das
xchg
sarb
jge
es
pusha
inc
mov
cmp
dec
sbb
push
mov
and
pop
sub
aad
lods
sarl
jecxz
inc
sbb
sub
dec
sub
negl
lods
xor
push
mov
ljmp
lcall
cmp
jb
mov
mov
in
xor
xchg
inc
adc
jne
or
mov
sbb
negl
inc
or
pop
xchg
lea
cmovnp
add
xor
ja
inc
fs
add
inc
push
sbb
jge
sub
dec
pop
fildll
push
outsl
ljmp
dec
mov
or
mov
into
movups
or
jmp
mov
adc
push
rcr
add
dec
push
dec
rcl
jne
fisubl
lret
mov
repnz
lcall
js
jo
push
pop
test
into
mov
test
test
adc
insb
mov
bound
leave
loopne
dec
ljmp
ret
adc
clc
repz
lea
outsb
sbb
xchg
pop
in
adc
pop
dec
lea
add
arpl
mov
and
cmp
lock
fwait
lea
push
mov
and
out
add
sbb
sbb
test
fdivrs
jg
cs
jge
ds
pop
push
sarb
inc
sbb
inc
mov
ds
aaa
mov
mov
pop
repnz
xor
dec
inc
cmp
std
mov
mov
aam
pop
test
mov
cs
ret
jp
ljmp
scas
out
sbb
dec
push
stos
cmp
shl
sti
dec
imul
fcmovne
ret
rorl
mov
adc
lods
push
popa
idivl
jg
push
out
mov
inc
arpl
icebp
xor
pop
ja
imul
mov
imull
mov
aad
jnp
sub
icebp
fwait
mov
push
negb
xor
adc
pop
addr16
rcrl
out
push
clc
xchg
and
jne
and
dec
pop
push
pusha
cmc
mov
or
mov
stos
dec
cltd
inc
push
cwtl
cwtl
dec
ja
in
xor
ficomps
inc
dec
adc
pop
ficomps
or
cmc
sub
fnstcw
xor
ret
and
sbb
arpl
imul
pop
pop
pushf
sub
xor
insl
int
xlat
pushf
adc
xchg
aam
clc
sub
cld
adc
ja
je
add
ret
sbb
rcll
sarb
cmp
loopne
push
pop
int
sub
adc
in
sbb
mov
imul
mov
cwtl
sub
cld
aad
add
xor
out
cmp
mov
push
cmc
mov
cmp
imul
dec
sbb
dec
and
popf
jns
xchg
popf
shrl
jnp
sub
sti
xchg
mov
push
sbb
ljmp
xchg
loop
lods
pop
out
xchg
shrl
push
xor
testl
jecxz
das
fsubl
push
mov
xchg
js
jo
cmp
push
sub
lret
ret
pusha
push
pop
outsb
sub
xlat
inc
aaa
fs
sbb
and
mov
hlt
roll
jbe
je
and
imul
pushf
js
mov
pop
loopne
subb
push
mov
loop
mov
pop
stos
cli
js
fiadds
xchg
adc
push
je
jns
stos
hlt
cld
ret
jl
cmp
add
push
pop
cmp
mov
cmp
xor
pop
push
lods
pop
or
xorb
sub
test
sbb
cmp
pop
shl
pop
aad
div
shlb
sub
inc
enter
arpl
fstpl
shl
cmpb
cltd
fcmovbe
sar
popf
sub
inc
je
movaps
pushf
int3
sub
stc
ljmp
pop
js
inc
jne
lahf
xlat
decb
outsl
ficompl
xlat
pushf
insb
push
and
or
push
and
add
mov
xlat
test
repz
cmc
ds
imul
mov
sahf
fsubrs
jmp
scas
mov
loope
jecxz
notl
push
xchg
stos
sub
xor
into
out
adc
sbb
or
jmp
je
fisubrl
scas
mov
xor
sbb
shr
or
roll
imul
in
decl
push
lods
sbb
sbb
push
lods
jae
out
jmp
shrl
cwtl
adcb
cs
cltd
subb
call
loopne
mov
push
dec
les
pusha
mov
in
les
pop
mov
repz
pop
shlb
fs
imul
es
or
ret
jecxz
push
daa
pop
push
mov
jno
dec
pop
out
lret
movl
push
sbb
bound
loopne
cmp
pushl
test
pop
daa
mov
es
add
jne
leave
mov
mov
mov
test
lahf
rcr
jp
xor
ret
mov
outsb
mov
scas
pop
inc
push
cmp
dec
daa
sbb
push
cltd
ds
add
mov
adc
cmp
rclb
adc
xchg
cli
sbb
pop
pop
mov
addl
mov
inc
and
adc
xchg
lods
and
xchg
sbb
imul
cwtl
sbb
cmpsl
js
icebp
insl
sti
lret
jae
test
loopne
lds
fstps
test
negb
jns
jo
les
ss
mov
sub
sbb
test
sbb
jne
add
std
or
cld
xchg
add
test
xchg
cwtl
xchg
cmp
dec
sbb
inc
mov
inc
ror
data16
out
mov
clc
fs
push
out
add
xor
and
and
mov
xchg
movsl
rorb
cmc
adc
jb
fwait
cmp
pop
mov
cmp
fcoml
icebp
imul
or
mov
xchg
loopne
ds
in
hlt
add
cltd
pop
pop
push
xchg
inc
scas
shlb
fwait
negl
imul
lock
es
or
mov
mov
push
mov
sub
xorl
movsl
outsl
xchg
or
mov
inc
negl
je
daa
jge
cmp
jecxz
rcrl
pop
ss
inc
out
scas
add
shlb
push
inc
lods
sub
add
loop
aas
in
movzwl
dec
or
stos
jb
mov
fbld
repz
adc
repz
jmp
xchg
loope
push
call
call
mov
jne
pop
ja
test
pop
movsb
mov
dec
out
pop
xchg
aaa
or
cmpsl
and
inc
icebp
xchg
imul
fisubrs
push
ror
sub
mov
inc
das
adc
gs
sti
push
and
or
mov
out
jge
daa
add
pop
sarb
push
movsl
and
ss
sub
mov
xchg
pop
xchg
xchg
or
sub
lahf
or
loope
movsl
jl
gs
pop
daa
cld
xor
cwtl
psubsb
or
push
lea
test
sub
mov
in
cltd
pop
fcmovbe
adc
push
pushf
dec
inc
push
pushf
add
pop
ja
adc
insb
insb
aas
daa
sbb
adcl
shlb
push
mov
mov
or
push
add
pop
repnz
idivl
aad
int
adcb
add
mov
and
addb
cltd
into
push
adc
inc
push
out
adc
cli
cmpsb
int3
in
jnp
ljmp
mov
add
or
pop
lods
fistpl
daa
sub
sbb
xor
ljmp
lods
pop
mov
adc
mov
dec
inc
roll
add
fwait
add
iret
adc
push
mov
mov
mull
jns
push
fmulp
add
jecxz
xchg
push
xor
jno
or
or
shrl
add
mov
sbbb
in
mov
push
cmp
or
sbb
sub
xchg
data16
mov
xor
xor
mov
bound
pop
pusha
sub
mov
mov
int3
or
scas
and
das
mov
ds
sub
cmp
movsl
xchg
cli
sub
out
add
imul
inc
mov
mov
sti
rorb
enter
faddp
mov
cld
data16
adc
movsl
test
jnp
inc
decl
into
inc
or
test
out
xchg
push
dec
cmpsb
inc
pop
fwait
or
mov
fwait
inc
sbb
stc
inc
test
subl
fnstenv
pop
mov
mov
cmp
into
call
enter
mov
adc
lock
or
lcall
xchg
adc
repnz
mov
cmp
icebp
cmp
cmp
je
jge
jae
push
adc
dec
ret
int3
cmp
pop
je
mov
rclb
lods
ret
xchg
xchg
lea
shll
push
jnp
fnstcw
arpl
cwtl
rclb
stos
mov
mov
rol
sbb
data16
test
les
mov
repz
fwait
jmp
mov
dec
xchg
lea
mov
dec
pop
inc
sub
and
imul
mov
cmpsl
mov
mov
fs
sbbb
test
add
imul
pop
jns
in
mov
jle
sar
push
mov
arpl
shll
sbb
shrb
add
lods
sub
xor
pushf
and
mov
out
xchg
mov
outsl
and
outsb
test
mov
add
cmp
fdivl
popf
lret
pop
inc
addl
loopne
pop
inc
xor
movsb
push
jae
das
into
pushf
fwait
enter
and
push
mov
push
xor
lcall
not
sub
sbb
and
int3
out
pop
dec
cmp
mov
mov
out
mov
add
xor
pop
in
xlat
xor
jg
and
test
dec
cmp
loope
xor
pop
dec
cli
enter
jne
movsl
mov
in
dec
cmpsb
add
dec
faddp
cmp
ret
cs
rclb
fwait
cmp
mov
cmp
arpl
jns
out
fmuls
sahf
push
stos
rolb
jae
add
push
out
pop
fs
xchg
inc
dec
call
jp
mulb
movsb
push
notl
push
or
pop
mov
adc
adc
add
inc
inc
addr16
fisubl
push
movsl
call
mov
mov
mov
shl
jbe
pop
sti
es
xchg
out
in
jb
lret
out
add
fiadds
shrb
mov
jae
filds
out
test
inc
xchg
push
daa
sub
add
stos
mov
or
jp
inc
jp
jnp
adc
call
mov
pop
dec
cmc
fldenv
jns
cmc
dec
test
std
xor
dec
pushf
mov
icebp
imul
adc
in
imul
sub
adcb
inc
push
inc
pop
movsb
movsl
adc
insl
sub
push
adc
dec
fistl
sbb
push
and
ljmp
std
cmp
mov
movsb
ror
je
aad
ret
arpl
jbe
and
fldcw
outsl
cmc
xor
mov
or
insb
add
rcrl
mov
push
ficoml
xchg
push
push
xor
rcl
pop
cmp
dec
xor
sahf
adc
dec
push
xchg
scas
mov
or
inc
mov
sbb
sub
sub
mov
pop
sarl
fnstsw
sub
fmuls
insb
loope
into
in
dec
imul
mov
es
push
push
mov
cmpsl
mov
mov
mov
cs
sar
push
das
lahf
sub
push
imul
shll
jle
pop
push
inc
dec
and
pop
inc
sbb
sub
pop
fisttpll
loop
push
push
sbb
inc
int3
shlb
stos
mov
jbe
cmpb
sub
clc
xlat
sti
test
jne
inc
cli
rclb
sti
inc
dec
mov
adc
pusha
mov
test
xor
in
cwtl
rcl
push
xorb
sbb
sbb
dec
imul
ret
dec
push
sbb
test
pop
pop
sbb
jns
int3
inc
scas
or
ja
mov
cmpsb
pop
dec
mov
add
jbe
loop
arpl
xor
jo
aaa
pop
push
sub
mov
into
add
rcr
sbb
imul
push
out
xor
fisubl
adc
and
addl
outsl
sub
inc
cwtl
mov
pop
test
repnz
dec
pop
jecxz
adc
and
push
adc
fisubrs
outsl
mov
inc
jle
cmpsb
sbb
js
test
std
sbb
sbb
mov
dec
inc
adc
pop
gs
shrl
mov
pop
xchg
stos
lods
xor
pop
fstpl
or
cmp
cli
iret
mov
jne
pop
and
xor
shlb
xor
pop
pop
lods
push
neg
es
test
mov
jb
out
add
lea
in
adc
or
outsl
jbe
and
repz
or
pop
mov
cmpb
pop
push
push
popf
cmp
scas
out
ja
and
lahf
in
inc
lahf
xor
sub
insb
stc
lds
addb
adc
lods
fwait
pop
xor
test
pop
pop
scas
sar
jge
lods
lock
cmc
mov
inc
cmp
in
and
mov
rorl
sahf
xchg
xor
lods
mov
inc
adc
out
sbb
dec
dec
and
pushf
jae
mov
js
mov
push
cmp
pop
repz
pusha
clc
lcall
outsl
xchg
push
decb
repnz
mov
cwtl
push
add
rolb
in
mov
mov
aad
sbb
insb
sbb
cmp
mov
jnp
sub
jle
cld
pop
hlt
xchg
rorb
adc
mov
add
or
gs
jne
pop
aad
out
andl
inc
fdiv
push
push
xor
pop
cmp
jo
adc
push
int3
lcall
ja
sahf
inc
xor
pop
in
daa
cltd
scas
icebp
or
xchg
push
jle
sub
mov
out
fisttpl
sahf
or
push
dec
xchg
push
popl
loop
daa
dec
xchg
ret
pop
or
stos
mov
lea
test
cmpsl
fisttps
sbbb
jbe
test
icebp
ret
dec
aaa
pushf
pop
fistpl
clc
enter
mov
adc
sub
add
cmp
adc
int
lcall
jae
jl
nop
call
sbb
lods
scas
adc
popf
in
lods
inc
subl
fwait
pop
aam
repz
fadds
push
rolb
push
push
cwtl
xchg
jge
and
mov
dec
imul
dec
dec
xchg
mov
mov
clc
sub
dec
insb
imul
shl
xor
outsl
fdivs
add
adc
rcrl
pop
leave
mov
jp
mov
jmp
popf
push
call
add
mov
in
sahf
cmp
jg
nop
xchg
jo
dec
scas
cmp
push
push
pop
pop
or
sbb
std
imul
lds
dec
call
and
add
addb
aad
pop
xchg
fbld
sub
cli
xchg
pop
pop
call
gs
nop
stc
ret
mov
xchg
mov
pop
ffree
ljmp
popa
inc
push
adc
vphaddwq
or
notl
and
adc
popf
out
out
iret
iret
mov
cmp
jg
movsl
data16
rcll
mov
cmp
int
cmp
mov
xor
jmp
add
inc
ror
mov
out
or
or
adc
and
xor
mov
mov
int3
leave
cmpsb
outsb
add
fnstenv
dec
xlat
xor
jne
fs
jno
sbb
fnstsw
pop
adc
sub
adc
hlt
rorb
and
inc
ss
xchg
notb
adcl
lods
inc
mov
inc
pop
add
clc
jbe
test
sarl
mov
push
imull
inc
lea
dec
mov
jmp
mov
out
mov
scas
test
inc
add
shll
mov
mov
inc
ja
insb
je
mov
add
hlt
js
mov
mov
cli
or
into
lahf
or
movsb
cmpb
mov
adc
sbb
inc
add
data16
sti
jg
mulb
jne
aas
sbb
push
fidivl
dec
ds
adc
mov
ds
xor
repnz
stos
sub
push
jp
sub
jge
pop
lds
shlb
ret
hlt
adc
imul
xchg
test
sbb
daa
jl
enter
arpl
push
add
mov
clc
insl
mov
inc
jmp
leave
pop
aaa
roll
adc
cld
out
add
xor
daa
fucomi
out
fs
daa
fstp
pop
cmc
mov
xor
xor
cmp
jmp
inc
push
and
push
out
dec
cmpsb
out
test
xor
aam
sarl
sarb
mov
fwait
ret
icebp
mov
scas
insl
icebp
jne
mov
cmp
sti
fmul
in
add
js
xorb
sub
cmp
dec
enter
mov
les
push
mov
and
out
pop
stos
cmp
stos
into
pop
pop
add
test
pop
and
pop
shll
test
cwtl
rcrl
inc
and
add
lcall
ffree
mov
cmc
cwtl
mov
jecxz
jo
sub
xchg
mov
popl
repnz
into
fmull
test
or
xor
mov
test
adc
pop
mov
negb
ret
add
mov
cmp
or
mov
pushf
jg
push
cltd
or
sub
mov
xor
loop
js
jae
mov
hlt
xchg
ret
fimuls
mov
cmp
xor
pusha
jns
fildll
fcompp
inc
data16
push
inc
fldt
sahf
push
cld
sub
sbb
dec
xor
scas
push
repz
out
cmp
xchg
loop
cmp
jb
push
push
fsubs
jno
aad
add
mov
test
xchg
inc
sahf
andl
sub
lret
sahf
or
lcall
imulb
fsts
add
pop
arpl
es
xlat
loope
cltd
cwtl
sub
jl
enter
mov
pusha
push
jmp
mov
or
imul
rclb
xlat
jle
repnz
inc
out
push
fcom
inc
imul
jecxz
sbb
scas
pop
add
cmpsl
jecxz
jnp
bound
lret
mov
sbb
adcb
jmp
mov
pop
repz
jg
adc
stos
sbb
stos
int
jle
lods
cmpl
xchg
and
int3
ds
inc
cltd
and
mov
lods
cmpsb
mov
in
repz
jns
cwtl
insl
daa
nop
out
mov
repz
test
mov
sbb
cli
nop
scas
adc
pop
bound
add
in
iret
or
lods
xchg
pop
adc
xor
jae
sbb
mov
add
push
into
push
mov
fiadds
mov
mov
xchg
std
sar
jl
je
mov
jle
xchg
lds
scas
sbb
dec
pusha
dec
sub
sub
and
mov
sbb
movsl
cmp
mov
and
or
or
rcrb
add
movsb
movsb
addr16
inc
das
mov
insl
cmc
mov
jg
lahf
jno
ror
cmp
sbb
add
pushf
std
sti
jg
sub
pop
jae
rcr
js
dec
sbb
mov
test
insb
push
cs
ljmp
jmp
mov
jmp
movsb
jp
mov
mov
xchg
ret
push
jo
cmpsb
adc
in
pop
cli
mov
inc
cltd
addr16
insl
out
test
insl
daa
aas
jbe
or
imul
sbb
sbb
jl
jecxz
pop
push
fmull
nop
lods
shll
mov
adc
das
mov
pop
aad
faddl
jns
jbe
pop
and
xchg
or
jl
in
dec
pop
lret
pusha
sbb
pusha
lret
stos
adc
mov
pop
xchg
test
lret
out
jmp
mov
cmp
dec
nop
jno
mov
mov
mov
inc
cmp
mov
jb
xor
hlt
movsb
shr
insl
jg
xor
xor
fnstcw
orl
sbb
pop
pop
jb
and
ret
rorb
mov
sub
in
pop
test
or
rorl
sbb
sahf
push
sub
mov
dec
aad
dec
js
or
jae
sub
ds
sub
call
loopne
adc
fadds
leave
mov
add
jne
mov
scas
in
pop
out
mov
and
xor
add
call
and
push
push
iret
bound
add
lahf
xlat
faddp
xchg
mov
scas
pop
pop
dec
push
in
lahf
sbb
sti
add
fadds
add
sub
adc
jp
test
scas
pop
mov
out
inc
mov
lds
int
push
jp
mov
aam
pushf
jne
xor
aas
and
cmp
nop
mov
in
popf
fidivl
ja
and
lods
dec
insl
js
in
mov
mov
ss
stos
imul
and
dec
cmp
icebp
scas
mov
pop
adc
fs
jecxz
jbe
jge
mov
and
cmp
jnp
xor
aaa
push
cli
mov
pop
mov
push
mov
stos
ret
ret
fists
lods
inc
into
jbe
in
mov
and
xor
xchg
sarl
and
rep
xor
mov
lret
into
loopne
xor
enter
sbb
pop
stos
mov
sub
punpckhdq
or
inc
xchg
mov
or
adcl
adc
or
xlat
dec
jne
inc
popa
jle
jbe
sub
clc
add
xchg
push
xchg
movsl
psadbw
js
aad
in
xchg
jo
pushf
xchg
pop
dec
movsl
fdivrs
movsb
fsub
mov
mov
adc
es
inc
or
adc
jl
outsl
cmp
xchg
out
scas
pop
stos
inc
popa
pop
cld
inc
cmpl
rcr
or
pop
cld
lds
nop
push
mov
lret
es
ss
ljmp
push
mov
pop
or
pop
dec
popf
pop
jne
ljmp
lret
dec
or
add
cld
ret
sti
sahf
sahf
shlb
icebp
push
out
xchg
fucom
cmc
push
sarl
mov
xor
sub
lahf
insl
xchg
jnp
xor
ret
dec
mov
sub
xchg
adc
mov
add
stos
push
sub
bound
sbb
mov
std
out
fwait
mov
jno
mov
xchg
pop
mov
fiaddl
jae
sub
sahf
mov
xlat
shlb
dec
cwtl
fs
adc
pushf
sbb
mov
add
push
mov
std
jo
mov
lock
xchg
pop
push
and
or
daa
mov
xor
or
mov
mov
push
push
add
nop
std
lahf
adc
mov
jecxz
push
rclb
push
leave
dec
cltd
fidivrs
sbb
adc
xchg
mov
push
push
jae
test
lea
jmp
daa
lahf
mov
sub
cltd
mov
xchg
add
and
fisubl
fcomps
mov
stos
lock
popa
out
pop
jmp
clc
add
mov
push
jp
sbb
fldt
insb
cmp
aad
out
jo
movsb
js
sub
and
pusha
sbb
sbb
add
daa
mov
sahf
and
jb
add
inc
int
arpl
loopne
sahf
lret
or
stc
inc
push
cmp
ja
inc
xchg
or
jl
inc
or
ljmp
repz
in
mov
leave
sbb
mov
ljmp
fsubs
aam
dec
mov
mov
push
cmp
js
out
cs
sub
add
mov
pop
ret
add
lods
xorl
ljmp
and
push
sub
xchg
lds
push
cli
sarb
xor
leave
les
in
jnp
sbb
into
sub
push
push
push
lret
adc
sub
lods
sahf
xchg
mov
jmp
mov
sbb
dec
jns
ljmp
dec
mov
movsb
cli
add
scas
mov
push
cmp
maskmovq
mull
iret
ret
cmp
arpl
xchg
xchg
imul
cmp
or
jo
xor
xchg
popa
mov
inc
arpl
mov
ljmp
sarl
push
and
mov
into
lret
push
cmp
dec
jb
popa
test
cmp
pop
lret
jl
push
inc
iret
jp
repz
mov
test
lock
fwait
in
inc
cmp
loope
icebp
mov
mov
test
add
adc
insl
test
push
fbstp
mov
push
inc
add
cmp
mov
cmp
testl
mov
sub
pop
sbb
fldcw
fnstcw
jo
pop
inc
insl
xor
daa
popf
jb
xchg
adc
mov
loop
sub
jmp
push
or
ja
pop
cmp
fistl
ds
lcall
dec
push
mov
jae
cwtl
pusha
aas
sbb
xchg
and
imul
pop
dec
jp
aas
adc
scas
sub
cmp
xor
jl
add
or
cmp
cmp
fnstsw
xchg
rcrb
stc
jno
ds
stc
or
and
push
push
dec
inc
scas
insb
lret
test
leave
nop
jle
cmp
adc
sar
sub
mov
test
sbb
shlb
stos
jge
inc
or
insl
pop
mov
hlt
inc
test
or
sbb
mov
dec
sub
adcb
lcall
insb
and
sub
test
mov
fimuls
pop
in
xchg
dec
jecxz
inc
repz
pop
and
pop
push
adcb
shrl
out
and
stos
insl
sti
aas
loop
sbb
sub
push
mov
mov
xchg
mov
pop
add
jo
jnp
aas
mov
es
jnp
xor
inc
fstpl
imul
mov
adc
loope
shl
xor
movsb
into
fildl
mov
sbb
stos
and
into
xor
jl
or
sub
mov
mov
pop
jecxz
mov
in
sub
mov
dec
lahf
inc
sub
hlt
push
jp
add
jbe
fcmovnb
pusha
xor
sarl
test
imul
sbb
cmpsl
js
xchg
mov
and
bound
das
imul
lahf
pop
sub
test
lret
add
popf
dec
mov
pushf
pop
loope
cmp
sub
shlb
pop
cmp
mov
xchg
shrb
and
ficomps
nop
jge
jle
mov
push
pop
lds
lret
add
pop
ret
leave
mov
movsl
mov
fs
mov
add
mov
mov
xchg
mov
repz
pop
dec
flds
xor
cltd
xor
mov
inc
das
add
jno
jbe
push
fcomps
adc
loop
and
stos
dec
shrl
cli
mov
fistpl
pop
nop
das
hlt
or
and
mov
andw
fisttps
sti
xchg
mull
lret
xchg
jbe
mov
mov
ljmp
mov
adc
pop
int
push
lret
xchg
imul
mov
ja
jne
sub
and
test
adc
inc
lock
xor
sti
xor
xchg
xchg
cmp
and
lds
cli
outsl
fmul
mov
and
xchg
mov
in
or
popf
mov
adc
cmpsb
sbb
or
jb
sbb
stos
push
or
inc
push
pop
jmp
insb
push
mov
and
js
push
es
mov
cli
cmp
mov
xchg
stos
push
int3
sbb
jae
xchg
sub
dec
pop
add
push
cmp
loop
pop
nop
ja
jg
fldl
xlat
xchg
in
sbb
scas
jns
pop
cli
inc
in
inc
pop
lock
mov
adc
pop
xchg
jne
jae
adc
or
or
pusha
and
mov
mov
jae
fsubrs
xorb
movsl
daa
pop
loop
into
sub
inc
inc
mov
push
jge
icebp
sbb
mov
lcall
fldl
dec
test
push
lcall
mov
xor
mov
clc
andl
xchg
inc
dec
jbe
xor
add
int
out
cmp
out
push
cmp
and
scas
imul
outsl
pop
dec
loop
std
sti
lock
iret
dec
repz
popa
push
jno
lods
shlb
test
ss
adc
or
and
xlat
inc
sbbl
mov
jne
add
inc
sbb
and
and
inc
mov
jae
jl
div
sbb
call
lret
fwait
in
insl
lds
aam
fdivl
loopw
mov
mov
adc
aam
jnp
cli
repz
int
adc
fcomp
adc
sub
mov
mov
scas
mov
and
ret
sar
nop
or
fwait
mov
test
hlt
sbb
xchg
and
shll
daa
pop
xchg
sbb
inc
ret
in
frstor
mov
mov
mov
sbb
jmp
sub
popa
pop
gs
mov
mov
lods
lock
bound
push
mov
or
out
stos
xchg
dec
cmc
ljmp
mov
sbb
xor
jge
cmp
ljmp
mov
call
test
pop
mov
repnz
shlb
push
fcomps
scas
sbb
cmp
xchg
fstl
or
jo
loope
xchg
sbb
stos
lret
arpl
les
popf
jecxz
ds
mov
push
mov
sarl
cmp
pop
add
mov
jg
xlat
fdivrs
push
xchg
je
jbe
push
lods
outsl
inc
ljmp
sub
pop
imul
scas
mov
adcb
fneni(8087
mov
outsb
dec
orl
adc
int
push
add
rolb
dec
xchg
sti
lea
xor
push
das
mov
dec
in
push
push
push
mov
pop
or
mov
xchg
xor
mov
out
jmp
fsubrs
pop
xor
rorl
sub
pusha
lock
mov
pop
fstpl
mov
pop
cmp
pop
push
cmpsb
jmp
adc
inc
xchg
xchg
xchg
fildll
nop
dec
sbb
mul
cmp
push
mov
sbb
insb
aaa
dec
and
push
out
popf
xchg
jp
jae
mov
popa
mov
cmovl
je
or
test
inc
leave
fistl
bound
xchg
test
loop
fcmovne
cmp
and
shrb
mov
icebp
xlat
mov
push
loop
les
and
jb
cwtl
mov
ss
scas
pop
sbb
inc
mov
js
shlb
xorb
push
aas
cli
mov
xchg
stos
iret
stc
xchg
std
pop
movsl
dec
lock
sahf
mov
clc
push
push
dec
push
jnp
or
scas
jns
jo
xchg
roll
in
testb
xorb
inc
divb
movsb
jo
pushf
xor
call
pop
cmp
mov
ljmp
jno
pop
pop
aam
je
add
aad
adc
or
iret
into
inc
mov
stos
lcall
out
cmp
leave
inc
ret
dec
dec
mov
sub
shrl
xchg
pop
sub
jl
push
inc
cli
leave
scas
jecxz
xchg
arpl
mov
imul
push
repz
sub
cmpsl
push
aaa
xchg
std
sub
cmpsl
icebp
ja
out
test
sub
xor
dec
sbb
add
pusha
mov
add
in
xor
cmc
jbe
adc
lahf
sbb
xchg
lahf
lret
mov
lahf
int3
pop
lahf
pop
hlt
push
fcmovbe
cmp
and
cwtl
sti
pop
mov
xadd
jmp
ret
ret
cmpsl
jbe
mov
mov
lods
ret
imulb
loope
push
adcl
xchg
fidivrs
in
push
adc
xchg
cltd
lahf
imul
test
dec
das
or
pop
cli
jnp
pop
add
push
shrb
cmp
lods
mov
xchg
cwtl
push
sahf
add
stc
in
imul
cmp
pop
enter
in
call
loope
xor
test
out
push
mov
sub
xchg
dec
repnz
fstpt
push
stos
vpor
test
cmp
cwtl
jbe
adc
fadds
push
clc
xchg
push
cmp
jne
xor
dec
scas
ja
jmp
es
movb
cmp
xchg
fwait
mov
dec
and
xor
and
gs
mov
lods
rcll
or
popf
filds
push
cmp
inc
pop
add
inc
lret
push
fsub
sub
pop
mov
mov
lods
adc
sbb
je
push
lret
push
and
inc
sub
xor
repz
xor
in
fistps
test
xchg
and
ss
sub
dec
pop
mov
insl
pop
shll
xchg
xchg
and
or
mov
push
idivb
cmp
call
test
dec
fisttpl
in
xor
jmp
test
movsl
jbe
and
jae
inc
cmpsb
mov
jmp
mov
xor
add
sbb
pusha
fs
int3
call
jne
mov
or
into
xchg
cmp
pop
ljmp
or
dec
jp
sub
xor
stos
call
push
cmp
jle
dec
jge
ljmp
cltd
jnp
es
lock
mov
mov
fcompl
gs
pop
hlt
jmp
adc
jb
mov
es
push
arpl
das
jecxz
in
push
scas
adc
pop
mov
loopne
pop
pop
ret
and
mov
out
aaa
mov
add
sbb
in
imull
into
std
fcoml
pop
lahf
mov
sbb
enter
dec
addb
xor
jge
lods
sub
cmp
jns
xchg
jle
cwtl
mov
xlat
lret
fidivs
cmp
in
xor
pushf
lods
jo
in
fwait
pushl
lods
mov
adc
push
clc
ljmp
inc
outsl
inc
cmp
pop
dec
adc
popf
and
pusha
mov
adc
or
cmovbe
mov
sbb
loope
mov
dec
insb
mov
call
inc
std
push
jns
dec
jo
rolb
stos
test
rcll
dec
repz
mov
out
xor
jle
mov
stos
sbbl
mov
mov
or
push
pop
mov
out
cmp
test
cmp
xor
cmp
inc
loop
daa
inc
cmp
movsb
mov
pop
lret
mov
mov
scas
lret
pop
xchg
push
test
add
into
fists
enter
in
sbbb
bound
flds
lods
sub
inc
adc
xor
out
pop
les
push
push
enter
call
or
and
movsl
and
iret
xor
les
mov
scas
imul
sbb
push
les
ss
add
and
clc
mov
mov
shr
cmpb
popf
insl
sahf
rcrl
pusha
shrb
dec
ss
clc
jge
sbb
bound
scas
jne
cwtl
imulb
sbb
inc
movsb
lahf
cmpsb
xlat
loop
dec
adc
movsl
popl
jnp
jno
inc
leave
inc
sub
pop
movsl
mov
mov
dec
xchg
push
jbe
add
data16
fisttpl
mov
jmp
inc
ret
in
pop
cs
les
sub
arpl
push
data16
push
add
fnsave
aas
pop
inc
fwait
mov
stos
push
mov
adc
sub
shlb
in
mov
push
add
inc
cmp
hlt
dec
xchg
jns
stos
pusha
push
push
push
pop
xchg
imul
ret
push
fs
jbe
mov
sub
jns
xor
into
test
xchg
mov
sti
pop
testb
cmc
jo
and
rorb
popa
mov
loopne
sub
jne
sahf
insl
mov
iret
cmc
ljmp
sbb
bnd
adc
mov
inc
push
sub
xlat
mov
test
lcall
mov
call
sahf
mov
xor
divb
ss
pop
and
pop
stos
adc
sbb
test
aad
inc
and
test
mov
mov
in
jg
dec
int
imul
pop
subb
inc
lcall
jo
xor
pushf
test
aas
repnz
rclb
jns
imulb
push
rorl
xchg
or
pushf
pop
add
pusha
lods
les
mov
mov
pop
lock
dec
adc
lret
cmpsl
outsl
or
sti
push
std
leave
push
push
mov
js
fimull
cltd
adc
cmpsl
sbb
loop
jnp
dec
fcoms
xchg
movsb
push
jns
iret
insl
sbb
aas
mov
daa
dec
mov
mov
rclb
fxch
enter
jnp
xchg
push
cmp
scas
ja
add
int3
push
push
adc
dec
insl
mov
roll
insl
dec
mov
iret
dec
pop
push
jle
mov
sub
test
mov
fwait
mov
cmpsb
imul
pop
test
sub
mov
daa
stos
jmp
dec
mov
xchg
jge
and
lock
movsb
loopne
jle
out
stc
bound
das
pop
aad
xchg
sbb
and
cmc
add
xchg
std
mov
fists
int3
fdivr
scas
fsubr
fsubs
outsb
icebp
add
je
loop
jmp
adc
subl
stos
mov
sbb
out
enter
out
jecxz
es
xchg
repz
mov
mov
push
cmp
xchg
lods
push
mov
ja
lds
js
lret
adc
inc
test
xor
or
enter
lret
adc
fisubrl
fsubs
xchg
cmp
pushf
orb
or
mov
sub
sarl
int3
push
stos
push
jno
sbb
fwait
pop
pop
xor
xchg
pusha
adc
aas
mov
orb
mov
adc
cmp
mov
xchg
dec
sbb
inc
jo
mov
push
hlt
mov
cmp
test
sbb
add
movsl
pushf
push
fwait
push
cmp
mov
clc
aad
mov
or
add
adc
cmp
shll
in
jge
shlb
scas
jmp
xchg
neg
adc
dec
test
scas
pop
fcoms
push
das
push
je
mov
into
lods
nop
jmp
or
sahf
cmp
scas
repnz
mov
popf
inc
adc
inc
es
dec
or
add
jno
and
rcll
rol
jb
push
push
ja
push
push
cld
pop
adc
loop
arpl
in
lea
inc
imul
loope
test
sbb
out
inc
sub
push
enter
data16
and
jbe
jge
out
mov
ficoms
sbb
fstps
pop
and
lcall
mov
xlat
imul
loope
push
movsl
mov
push
mov
mov
sahf
nop
xor
mov
xorl
sahf
jp
mov
iret
dec
test
movsb
xchg
jne
jmp
or
cmpb
aam
dec
bound
jb
push
dec
sti
movsb
xchg
pop
shr
cmp
aaa
ljmp
cs
adc
add
sbb
inc
mov
and
adc
push
repnz
int3
mov
adc
divl
sub
scas
scas
aad
out
out
xchg
mov
push
sub
cmp
popa
push
scas
adc
push
jo
out
mov
add
outsl
adc
jne
push
adc
inc
mov
in
pusha
cmc
mov
push
fsts
cmp
lcall
sahf
add
aaa
cwtl
jo
pop
pop
jnp
insb
fisubs
mov
inc
rcrb
xor
rol
jecxz
jge
mov
xchg
pop
xchg
out
mov
adc
xor
das
add
inc
cmc
sbb
or
or
add
movsb
dec
pop
popl
stc
jno
xor
notb
fidivrl
or
lods
jno
addr16
in
test
mov
push
ja
add
and
mov
or
mov
cmp
iret
fwait
pop
push
dec
dec
mov
push
mov
bound
inc
dec
sar
xorb
add
js
xor
loop
pop
lret
fcoml
cmp
xor
andb
adc
xchg
jbe
cmp
fs
cld
xor
add
adc
or
clc
mov
aad
pusha
lret
adc
sbb
cs
std
repnz
in
pop
xchg
and
and
and
inc
dec
inc
cmpsb
or
push
sahf
dec
xchg
ss
inc
push
sbb
pop
jecxz
pop
or
jnp
xor
or
js
leave
pop
mov
mov
loop
sbbb
add
and
lea
and
cmpsl
sbb
div
jnp
shlb
sub
mov
fisttpl
scas
inc
insl
cmp
adc
or
leave
lret
test
lock
dec
push
add
mov
fidivs
adc
jnp
xor
pushf
std
lret
mov
mov
xchg
pop
test
jmp
inc
inc
mov
mov
xchg
sub
sbb
inc
bound
mov
inc
fs
fldt
stos
dec
mov
jp
nop
push
adc
nop
cmpsb
add
mov
jp
xchg
les
lcall
je
adc
fs
hlt
mov
sbb
and
cmp
mov
call
mov
scas
adc
mov
xor
int3
push
fadd
xor
cs
mov
clc
ja
shll
and
dec
ret
xchg
mov
cwtl
loope
and
jecxz
xlat
inc
lea
stos
cwtl
inc
mov
addr16
movl
fistpll
data16
jg,pn
pop
je
xchg
int
sbbb
xchg
aam
test
push
pop
lret
push
js
aam
xor
mov
gs
xchg
test
ret
pop
sahf
xchg
dec
ret
push
sub
leave
mov
lea
cmp
popa
jg
test
mov
pop
std
fdiv
mov
arpl
and
lret
xchg
scas
lcall
test
popa
clc
cmp
push
cmp
dec
push
jbe
xchg
cmp
movsb
or
movsb
add
pop
data16
sub
pop
sbb
sub
cwtl
imul
clc
mov
mov
pop
fwait
mov
test
cmpsb
jae
test
cmp
add
sbbb
adc
imul
test
ljmp
in
outsb
repnz
sub
pop
cli
inc
mov
rcll
pop
leave
jne
xchg
mov
stos
mov
xor
pop
jo
cmpsl
push
cli
rolb
fbstp
and
out
scas
mov
rorb
add
cmpsb
push
arpl
mov
pop
push
rorb
addr16
cmp
cmp
sbb
nop
jo
xchg
test
fstps
inc
inc
dec
lret
or
imul
dec
jno
inc
shll
fistpll
test
test
ljmp
cld
flds
dec
push
mov
push
xchg
or
and
sbb
outsl
fdivs
mov
add
mov
push
inc
jg
out
mov
jbe
je
mov
sub
dec
test
mov
push
xchg
xchg
or
lds
dec
dec
mov
sub
cmpsl
loopne
and
inc
push
aam
xchg
mov
call
sbb
adc
adc
fabs
call
inc
jno
int3
jmp
add
jbe
movsl
bound
rcrl
daa
adc
push
or
pop
shll
fisubrl
stc
push
ja
jmp
jp
mov
ljmp
or
imul
enter
out
jnp
je
lods
ret
mov
ljmp
cmp
jp
add
int3
movsl
inc
add
jbe
inc
nop
or
movsl
xor
add
mov
fnstcw
push
cmp
popf
pop
outsb
les
cmc
push
popa
insl
add
and
ja
imul
lahf
xor
push
outsb
sbb
shll
out
or
jns
dec
cmp
xor
inc
xchg
lret
mov
fbld
cmp
xchg
addl
test
push
xlat
xchg
and
cmp
jmp
clc
mov
and
and
movsl
adc
stc
or
mov
sub
inc
pop
mov
fisttpll
jle
fmull
stos
lods
or
lret
push
in
jnp
out
xor
sbb
imul
mov
dec
xchg
push
adc
mov
adc
xchg
push
dec
aaa
arpl
add
and
and
or
ret
loope
mov
ja
cmp
jbe
and
fsub
inc
mov
sarb
xchg
lods
push
pop
in
sbb
insb
xchg
mov
xchg
mov
and
ds
bound
outsb
std
stos
dec
xchg
addb
shrd
xchg
movsb
inc
adc
push
cmp
add
fistpl
mov
sti
gs
or
pop
in
in
sahf
pop
cmp
aaa
ljmp
fbld
sub
dec
stos
push
xchg
outsl
adc
and
adc
movsb
subl
sbb
rcr
jmp
out
mov
or
ret
or
outsl
jl
js
scas
mov
mov
push
push
pushf
add
bound
and
popa
jl
lret
ret
in
test
and
mov
adc
and
mov
sub
xchg
mov
movsl
jg
scas
mov
inc
jne
jo
pop
xor
ss
pop
adc
dec
xor
rcll
dec
out
dec
imulb
lret
xor
xchg
push
fmuls
rcll
pop
adc
int
pushf
dec
pushf
adc
pop
pop
jle
lret
or
dec
mov
mov
cmpsl
and
ret
and
ret
cmp
cmp
dec
jae
mul
pop
mov
jmp
xor
cmpsl
dec
mov
sub
pop
sbb
mov
rcr
int3
ss
mov
out
fisttps
sbb
adc
lods
xchg
sbb
jns
or
sub
add
xlat
insb
lahf
mov
lahf
xor
xor
bound
sbb
mov
int3
not
push
adc
idivl
pop
aaa
mov
pop
andl
addb
lea
mul
push
add
neg
ret
nop
adc
and
xchg
pusha
push
mov
mov
dec
mov
in
inc
ficomps
dec
pop
stos
loopne
fisubrl
push
ja
sub
mov
fadds
sub
xchg
mov
push
ja
mov
jo
xor
mov
inc
lret
lea
adc
jne
push
push
adc
cmp
add
cmpsl
les
jne
push
test
ret
dec
mov
add
and
adc
aas
insl
lea
push
call
flds
sbb
sbbl
add
test
or
xor
mov
jle
in
or
dec
pop
fisttpll
sub
test
test
repnz
ljmp
or
pushf
mov
stos
aad
mov
mov
aaa
scas
ret
cwtl
repnz
rcrb
add
ret
mov
in
cmp
idiv
lahf
iret
mov
ss
pop
lret
fstps
sbb
fs
xchg
stos
bound
ljmp
stc
shrl
in
mov
icebp
and
test
into
add
fsubp
es
fsts
sub
int3
mov
in
addb
movsl
xchg
stc
ficoms
mov
xchg
pop
mov
je
pusha
or
gs
push
sub
sub
mov
adc
je
aad
xchg
mov
nop
or
je
mulb
stc
add
inc
sub
pop
pop
inc
pop
arpl
and
push
adc
js
jl
add
push
sahf
add
rcll
push
mov
jno
fs
pop
nop
or
push
call
inc
pop
and
xchg
cltd
lods
cmpsl
add
mov
xor
pushl
xlat
test
and
fsts
sub
pop
push
xchg
test
adc
adc
push
or
iret
sub
jno
push
addr16
xchg
js
outsb
mov
xchg
fs
lea
push
push
pop
stc
daa
inc
push
fdiv
fwait
jae
ljmp
mov
aad
les
adc
hlt
and
ja
out
sub
push
loop
xchg
and
push
xchg
enter
mov
mov
cmp
shrb
xor
inc
icebp
int3
mov
mov
scas
adc
mov
mov
mov
push
jl
stos
loop
xchg
sti
mov
xchg
aad
xchg
vpmaxub
cli
in
sbb
stos
fwait
imul
jo
int
mov
mov
cmp
sub
jne
add
out
int
xor
push
movsl
fs
lret
xchg
repnz
ja
mov
or
push
movsb
shrb
pop
rclb
mov
popa
sub
jl
outsl
inc
pop
adc
inc
sbb
and
mov
mov
fneni(8087
xchg
fldt
cmp
sbb
fstps
fisubs
lods
or
push
sbb
das
adc
cmp
dec
cmpsl
sub
jge
or
mov
insb
rcl
es
cs
test
ret
mov
test
lcall
stos
sbb
and
dec
outsb
imul
jle
push
cmpsl
shl
pop
cmp
imul
loop
mov
movsl
clc
lds
dec
mov
popf
dec
testb
in
pop
lcall
pop
inc
mov
or
into
dec
xlat
pusha
sbb
xchg
jne
xor
inc
stc
cmp
ja
lahf
lock
test
pop
repz
imul
sbb
xchg
mov
pop
sbb
sbb
adc
sbb
cli
push
dec
xor
cmp
mov
int
mov
ss
jmp
rcll
and
pop
add
out
dec
ret
in
fdivr
dec
int3
pop
test
mov
xchg
push
pusha
lods
popf
cmp
jmp
sahf
cmp
mov
leave
mov
imull
adc
pop
popf
adc
insl
jnp
mov
dec
lods
pushf
insl
test
cmpl
add
jo
into
imul
pop
test
push
cs
enter
outsl
dec
adc
out
pop
insb
or
sbb
dec
cmpsl
dec
sbb
jns
inc
lds
das
lods
shlb
push
fmuls
dec
fidivl
rolb
insb
mov
int
jl
inc
xor
dec
xchg
das
mov
fbld
bound
lcall
mov
sbb
out
movsb
ret
insl
enter
jnp
jae
push
push
nop
push
or
mov
test
push
loope
aam
push
jnp
outsb
out
pop
ss
notl
data16
cmpsb
pop
dec
repnz
fildl
vpbroadcastb
jl
pusha
sbb
jno
int
push
mov
mov
add
iret
adc
pop
iret
inc
repnz
inc
inc
push
jae
popa
in
push
lcall
cltd
xchg
jle
jle
pop
loope
fidivl
fcomps
ja
bound
xchg
mov
aas
lea
pop
pushf
aas
les
jmp
mov
xor
mov
xchg
mov
fiadds
xchg
stos
cmp
bound
and
and
adc
popf
push
inc
sub
push
jae
adc
xchg
jl
out
xchg
dec
out
push
mov
sub
mov
push
mov
push
dec
mov
xchg
test
call
int3
arpl
cs
pop
dec
data16
insb
lods
jp
lods
or
and
pushf
pop
out
clc
push
push
jmp
jmp
lret
inc
cmove
popa
cmc
mov
out
mov
push
test
push
cld
sub
enter
push
cmp
push
lret
cmp
xchg
rclb
ret
aaa
push
test
cwtl
out
stos
xor
aaa
xchg
gs
scas
push
fstpl
lea
pop
xor
cmc
mov
incl
sub
movsl
jmp
cmp
jecxz
add
pop
dec
xchg
ss
jg
inc
jne
lahf
sbb
fidivrs
xorl
add
out
mov
imull
sub
jmp
pop
push
cs
pop
xchg
lret
insl
dec
dec
push
sbb
mov
aad
xor
in
stos
ret
or
inc
or
lods
jbe
adc
leave
sar
mov
lods
cmpsl
xor
lods
in
in
jp
mov
inc
adc
xchg
pusha
movsl
ds
pop
sbb
addr16
fnsave
loopne
push
mov
mov
fcomps
pop
add
sub
sbb
aad
addr16
mov
mov
icebp
inc
adc
mov
adc
ja
insl
aam
and
xchg
cmpsl
pop
popf
jmp
in
lcall
mov
icebp
push
mov
push
movsb
dec
dec
out
mov
cmp
jno
sbb
push
push
aas
gs
das
inc
cli
data16
outsb
ret
test
push
xchg
inc
aaa
or
les
push
push
stos
dec
cmc
call
stc
mov
pushf
xchg
cli
xchg
or
pop
ja
out
ret
sbb
push
adc
loopne
cmp
xor
mov
inc
stos
cmp
cmpsb
xor
pop
dec
jle
jp
mov
popa
shll
lods
jno
outsb
ja
loope
aad
testl
int3
iret
gs
shll
ds
outsl
push
int3
adc
jae
popf
jbe
xlat
aam
sbb
jne
pop
jbe
mov
push
xor
jl
pushf
xchg
jge
cwtl
or
add
lods
xchg
cld
mov
outsl
lock
or
inc
test
mov
lahf
xchg
in
mov
or
std
adc
inc
clc
jb
cmp
mov
add
aam
test
adc
push
mov
test
icebp
enter
mov
adcb
cmc
hlt
dec
jg
roll
pop
into
add
dec
sbb
inc
shrl
call
sub
jb
sbb
jb
int3
push
insl
lahf
addr16
jnp
nop
enter
out
mov
lds
push
mov
and
lods
out
xor
idivl
cmc
in
mov
jnp
mov
push
lods
lods
xchg
outsl
bound
sbb
dec
jl
mov
negl
test
sbb
xchg
lret
cmpsl
and
xchg
xchg
dec
cmp
xchg
adc
call
pop
sub
push
stc
pop
fadd
cs
jae
cmpl
mov
mov
inc
fcmovb
fisttpl
or
or
mov
xor
out
inc
inc
xlat
add
popf
les
mov
sub
sarb
test
loope
bnd
dec
ret
xchg
test
add
into
and
shl
lahf
xchg
jmp
jns
notb
mov
out
sbb
cli
sahf
adc
sbb
mov
inc
jns
cmpsb
bound
jnp
xchg
fdivs
test
jns
aas
fsubl
mov
xor
dec
push
fcomi
cmp
data16
xor
iret
cwtl
add
hlt
mov
rcrl
inc
push
sub
or
push
push
mov
into
lcall
jle
xor
das
xor
fidivs
mov
out
gs
mov
pop
mov
je
movsb
and
inc
lods
jnp
ljmp
loope
test
stos
push
push
cmp
and
scas
das
xchg
stos
call
adc
fs
lods
popa
test
sar
sbb
xchg
push
and
in
out
push
dec
ds
hlt
out
inc
sbbl
xchg
mov
clc
xchg
pop
mov
sbb
mov
in
cmp
test
std
inc
je
gs
sub
call
icebp
cmp
repnz
or
pushf
and
mov
mov
fsub
adc
aaa
or
and
mov
ret
fbstp
mov
pusha
roll
out
aaa
xlat
jmp
out
test
xchg
adc
out
xor
lock
ja
sbb
xor
add
pop
imul
aaa
sti
mov
lahf
cmp
inc
jl
and
xchg
inc
repz
mov
iret
ret
ret
jnp
lods
jl
stc
mov
dec
sarb
sbb
fcmovnbe
jbe
pop
repz
neg
popf
mov
push
ret
cmp
cli
mov
jne
push
incl
movsb
into
es
insb
sti
adc
mov
mov
test
push
xchg
jge
jo,pn
movsb
mov
orb
xor
sub
lods
mov
adc
and
push
mov
cld
lret
jne
js
mov
xor
mov
mov
aaa
cwtl
pop
lret
dec
xchg
scas
add
jae
jge
dec
pushfw
ds
je
push
pusha
inc
pop
add
push
fwait
gs
mov
rcrl
inc
cmc
lods
int3
ds
mov
pop
adc
sub
push
hlt
sub
dec
roll
jge
cld
sub
out
push
fsubr
jg
and
mov
push
in
push
sub
and
add
dec
dec
les
jge
adc
imul
adc
cmpsl
jmp
sbb
push
mov
dec
mov
leave
jo
aas
je
mov
push
lock
in
sbb
fwait
mov
orb
jns
jecxz
sbb
lods
mov
int3
ror
xlat
push
xlat
mov
jg
imul
pop
inc
mov
out
scas
sub
loope
aas
ret
mov
stos
xor
andb
pop
dec
daa
movsb
dec
das
mov
aaa
lret
bound
das
mov
scas
adc
sbb
mov
sar
push
outsb
mov
lods
arpl
or
loopne
adc
push
sahf
das
pop
mov
jb
add
push
js
fmull
push
pop
mov
pop
add
dec
xchg
out
inc
test
adc
push
or
push
iret
pushf
xor
mov
aas
sbb
aaa
pusha
out
fnsave
movsb
aaa
lret
repnz
mov
js
loopne
xor
mov
stc
pushf
push
push
push
les
cmp
jbe
fistl
xor
adc
in
lods
pop
mov
popa
cs
loop
das
roll
jle
or
adc
sub
cmp
xor
mov
data16
mov
fldcw
imul
jno
repnz
nop
lods
inc
and
sub
jge
cmpsl
cld
enter
loope
test
push
sti
out
add
dec
mov
jecxz
inc
push
fistpl
mov
rorb
shll
mov
add
mov
mov
mov
imul
xchg
push
lock
popa
scas
shr
cmp
sub
arpl
imul
mov
jp
scas
jnp
test
mov
les
mov
adc
sahf
or
fmull
pushf
inc
icebp
xor
aas
in
movsl
lahf
jge
sti
rcll
test
jmp
int3
pushf
out
dec
fstps
lret
push
sub
xor
movsl
fld
fildll
and
pop
pop
adc
cmpsb
mov
cltd
fs
int
xchg
pop
xchg
into
jecxz
pop
mov
xor
push
out
sub
outsl
jge
dec
loope
test
add
sub
out
xor
inc
cli
aas
dec
loope
xchg
pushf
jp
cmp
lods
loope
inc
outsl
arpl
ret
js
fadds
jne
test
pop
push
jmp
cld
call
imull
sarl
fs
cmp
cmp
je
pop
jae
mov
and
aad
inc
mov
push
ret
or
ds
mov
add
add
mov
fmull
xchg
inc
mov
or
je
jle
dec
aam
inc
leave
rcll
push
cmc
mov
ljmp
sti
adc
arpl
ss
je
aaa
lret
lcall
xchg
adc
and
pop
roll
movsl
mov
mov
call
push
fists
je
xor
mov
push
sbb
sub
dec
adcb
adc
sbb
or
scas
int
je
sub
or
xchg
adc
out
lcall
mov
outsl
pop
cltd
loop
adc
aad
and
add
xor
es
mov
dec
out
pop
mov
mov
adc
pushf
jne
dec
decl
dec
mov
sbb
lock
push
repz
popa
jo
xchg
inc
push
inc
add
in
ret
cmp
mov
outsb
lahf
jno
cmp
enter
adc
fisttpll
or
stc
push
fs
ss
and
rorl
mov
mov
xor
adc
jmp
js
sbb
or
test
push
mov
pop
sbb
or
loope
and
fldpi
imul
cmp
push
mov
ljmp
xor
out
adc
rcr
pushf
arpl
cmc
lcall
pop
in
dec
push
es
test
subl
add
mov
fstpl
test
mov
mov
jnp
shrl
test
jmp
out
sub
fnstenv
pop
and
or
sahf
or
add
outsl
daa
in
xchg
mov
jecxz
aas
sbb
sub
ds
sbb
mov
mov
or
mov
jmp
dec
dec
fistpl
int
cmpb
mov
imul
xor
sbb
mov
addl
xorb
push
insb
jno
daa
adc
std
mov
xchg
repz
sbb
repz
es
and
shlb
xlat
inc
pushl
xchg
out
xor
add
sbbb
jmp
mov
movsb
xchg
lds
mov
mov
sbb
cld
aad
pop
add
movsl
mov
cmp
loop
call
jbe
in
jns
rcrl
and
sbb
xchg
std
fstpt
in
inc
into
mov
cs
jp
xchg
dec
sbb
sub
js
xlat
les
dec
outsb
out
add
sbb
inc
xchg
add
mov
and
and
fnstenv
and
cmpsl
jl
and
add
mov
addl
or
mov
inc
mov
push
push
lret
shl
jb
cmpb
inc
cmp
push
push
add
sbb
fidivl
fiaddl
loop
mov
mov
jmp
cmpsl
xchg
test
pop
bound
jge
test
cmp
pushf
rcl
outsb
scas
pushf
or
jns
xor
jle
inc
dec
fucomi
or
dec
push
mov
out
out
push
aad
add
push
sbbl
dec
sub
addb
imul
xor
loop
xor
mov
and
add
and
inc
mov
xchg
gs
call
push
inc
mov
xor
mov
jl
jl
mov
pop
into
loop
cmp
mov
fs
sbb
xor
sbb
fistl
xlat
jg
xor
stc
add
mov
xchg
mov
out
mov
stos
adc
sbb
jns
push
call
pop
and
push
ss
lea
jnp
sub
gs
push
or
sbb
shlb
lods
jl
push
xchg
pop
in
fsubs
fsubrl
jg
daa
mov
call
and
add
dec
lods
clc
sahf
dec
aam
push
and
sahf
ljmp
mov
sub
sub
cmp
or
and
jmp
into
lds
fnsave
mov
je
shrb
fnsave
and
dec
pop
xchg
xor
pop
xor
je
fwait
push
lods
das
icebp
inc
in
pop
outsb
fsubrs
movsb
test
std
sbb
jnp
and
hlt
mov
push
xchg
jbe
mov
mov
jbe
mov
add
sub
repnz
push
jmp
in
ja
mov
xlat
cltd
mov
and
inc
mov
aad
pop
cmpsb
mov
sub
sbb
shll
jne
mov
jge
jecxz
or
stos
ljmp
stos
bound
cld
loopne
xchg
ljmp
sub
rolb
xor
xor
jns
jae
pop
jge
mov
pop
push
ja
jns
test
adc
mov
cmp
aaa
push
add
fs
hlt
insb
dec
add
mov
mov
mov
dec
std
sub
cli
cmp
repnz
fnstenv
rol
inc
xchg
nop
in
push
in
scas
aaa
xor
out
inc
add
sbb
jge
loop
loop,pn
and
dec
in
xchg
mov
das
test
dec
rorl
fwait
in
cmpxchg
sub
push
fidivrs
bound
inc
lret
and
aam
xor
cltd
and
mov
lcall
es
int3
call
dec
cwtl
stos
outsl
lods
int3
cmc
addr16
push
loop
or
xrelease
mov
fstl
cmp
mov
es
in
mov
fidivl
ja
dec
mov
andb
rclb
push
test
dec
lea
jbe
fdivrl
outsb
lret
mov
cwtl
xchg
std
sub
mov
icebp
test
mov
mov
cmp
pusha
mov
adc
aas
lock
mov
psadbw
ss
xchg
popa
gs
outsl
pop
cmp
mov
pop
sub
mov
pushf
or
xchg
jbe
leave
fadds
notl
hlt
xchg
mov
sbb
test
add
push
inc
jo
push
insl
or
dec
scas
stc
mov
and
mov
cmpl
jg
shll
adc
lods
dec
scas
outsb
shll
loope
jae
lret
fistpll
outsb
mov
jecxz
cmpsl
dec
and
std
mov
mov
clc
jb
mov
sub
mov
push
xor
in
jae
mov
je
ret
jnp
cmp
and
pop
adc
outsl
addr16
jo
scas
popf
fs
sub
popa
mov
es
jecxz
jbe
inc
xor
xchg
jns
xor
push
mov
push
mov
in
ret
push
xor
cwtl
pushf
inc
clc
mov
push
mov
in
or
arpl
sti
inc
push
les
fisubs
ret
jg
sbb
xchg
ret
frstor
push
std
test
xlat
loopne
xchg
incl
ljmp
cltd
add
xor
cmp
xlat
fbld
xor
jle
sbb
cmp
arpl
std
sbb
lods
movsl
hlt
shlb
sub
pop
std
or
xor
and
jmp
mov
or
xchg
out
mov
push
pop
or
int3
add
dec
mov
mov
xchg
jecxz
xchg
mov
inc
inc
or
lcall
nop
rolb
sub
mov
xor
in
mov
xchg
sub
add
xor
nop
mov
pop
out
cmp
popf
mov
js
jae
or
loope
fld
iret
sub
cmp
xor
out
cs
ret
fmull
add
or
nop
movsl
jecxz
imul
shlb
dec
mov
test
lret
xchg
repz
dec
leave
mov
hlt
cwtl
pushf
ret
outsl
lods
es
jl
inc
xchg
mov
cmp
mov
lret
inc
lock
hlt
sbb
dec
xchg
mov
sub
in
cmpsl
adc
xchg
pop
outsb
repz
fistl
jo
int
mov
adc
outsl
inc
push
mov
sub
cmp
pusha
xor
push
inc
scas
inc
sbb
mov
pop
push
std
fdivl
push
push
outsb
hlt
xchg
jno
mov
pop
add
push
mov
mov
mov
or
jne
and
cwtl
adc
xchg
pop
js
sub
ret
lods
stos
mov
add
mov
mov
fprem1
jmp
dec
add
pop
push
jno
ret
lret
loope
mov
dec
add
outsl
mov
outsb
xchg
aaa
pop
mov
and
cmp
xchg
and
aas
sahf
push
aaa
mov
jbe
sbb
cwtl
les
push
sub
test
jge
xlat
xchg
fisubrl
les
dec
adc
dec
push
fs
clc
test
mov
nop
es
jbe
push
lahf
stos
sti
es
jp
daa
leave
lds
and
cmp
scas
jo
inc
rcrl
int3
xchg
fldt
jae
or
mov
mov
push
insb
repnz
addr16
mov
jle
hlt
push
pop
adc
cld
cmpsl
xor
add
daa
cs
stc
repnz
loope
jle
lock
fstps
addr16
sub
imul
das
pushf
mov
mov
loop
add
sbb
xorl
rclb
pop
mov
and
lods
mov
sti
into
mov
xchg
mov
in
fwait
int3
lcall
jno
or
rcrb
pop
push
xor
stos
in
sub
in
xchg
scas
or
pushf
mov
pop
xchg
dec
dec
adc
mov
das
cli
ret
gs
daa
fidivl
add
or
and
rorl
cwtl
push
jecxz
icebp
sbb
xlat
movb
in
and
insl
lods
test
and
movsl
inc
inc
ret
test
pop
enter
and
ret
xchg
sub
jl
fldcw
add
pushw
xchg
mov
ret
cmp
push
in
pop
sub
dec
addl
xchg
adc
push
imul
jae
popf
dec
ret
rorb
sub
repz
pop
aam
in
insb
arpl
imul
sub
pop
mov
roll
mov
jnp
rcl
sahf
push
xchg
scas
out
shl
mov
mov
and
jnp
cwtl
mov
or
dec
mov
dec
xor
jbe
roll
xchg
in
jne
cli
aam
pop
gs
inc
in
mov
cld
or
inc
or
mov
popf
xchg
fs
and
add
pop
mov
jo
mov
subb
enter
cwtl
nop
in
push
sub
iret
fsub
js
sub
ret
adc
push
and
imul
sbb
or
andb
jg
pop
mov
cmovle
xchg
scas
cmpl
ljmp
xorb
sbb
adc
test
jnp
lods
insl
mov
clc
mov
imul
inc
in
adc
push
mov
pop
jae
popf
mov
jae
popf
int
adc
lea
pop
lods
jne
xchg
or
cli
xchg
shl
cmp
xchg
into
fmuls
lock
addr16
jl
mov
shrl
dec
lock
ljmp
mov
shlb
leave
call
enter
mov
jge
adc
in
cmpsb
cmp
lcall
subl
dec
in
inc
inc
addr16
mov
sbb
pop
dec
adcb
cmp
or
fstpl
loope
sub
ljmp
cli
push
and
call
inc
push
pop
sub
add
insb
fisttps
movsl
push
push
jns
int3
pop
inc
fldcw
xchg
mov
dec
sbb
test
mov
in
jo
dec
scas
or
cmpsl
imul
xor
call
data16
adcb
dec
mov
add
arpl
fiaddl
cmp
popf
sub
mov
mov
in
ljmp
or
out
std
test
and
fisubl
repnz
sub
sub
push
sub
push
pushf
xlat
mov
les
lock
xor
dec
repnz
lea
rcr
fldenv
and
fdivp
ret
sbb
out
and
push
fistpl
lods
lds
add
stos
and
js
jns
sbb
std
mov
faddl
sti
out
adc
into
xchg
jge
mov
inc
movsb
dec
sbb
out
jge
xchg
push
call
mov
cmp
adc
fsts
mov
imul
pop
ret
or
mov
sub
dec
and
cmp
push
xor
lods
push
bound
ja
mov
push
jae
mov
dec
ds
call
ffree
mov
stc
pusha
push
shr
ss
mov
lret
dec
cltd
xlat
fwait
mov
pop
dec
lea
dec
xchg
jae
sbb
or
add
lea
mov
or
dec
fsub
fwait
xor
shlb
iret
inc
stc
jge
cmp
loope
rcl
lea
mov
mov
or
movsl
lcall
rclb
icebp
xor
insb
loope
mov
jp
jb
syscall
add
mov
lcall
loope
push
out
xorb
mov
xchg
js
insb
cs
lahf
scas
adc
xor
adc
aas
pop
jle
outsl
pop
jno
call
sbb
fs
cmp
bound
sub
mov
in
push
lcall
mov
daa
xchg
iret
xchg
pop
sbb
xchg
outsb
clc
jbe
lcall
lret
dec
lods
push
mov
xchg
lock
jbe
adc
jb
pop
movsb
into
ds
jmp
jbe
inc
sahf
daa
xor
insl
js
or
andb
lret
inc
or
mov
fildl
faddl
push
mov
push
stc
lods
movsl
js
sti
xor
sti
xor
es
lea
loop
in
in
insb
gs
xor
cmc
nop
xchg
adc
pushf
and
clc
aad
std
mov
fld
stc
lret
orl
sarl
out
es
mov
add
push
in
push
insl
lahf
inc
adcl
cmp
lods
or
sarb
pop
lods
and
mov
jl
adc
movsl
repz
lods
sub
inc
int3
sbb
movsl
fs
or
xchg
add
inc
dec
or
add
idivl
stc
push
sti
les
insb
mov
fidivl
sahf
ljmp
xor
push
fdivrp
sbb
and
mov
xchg
lods
jno
or
push
mov
xor
pop
aad
leave
cmc
sub
popa
pushf
mov
jae
pop
call
mov
out
cmpsb
xor
stc
add
insb
lods
xor
int3
outsl
loope
insl
stos
les
ret
mov
jmp
sbb
inc
xor
pusha
lods
jae
testb
repnz
add
push
sbb
int
repz
mov
scas
pop
push
sbb
es
xchg
inc
xchg
inc
or
sbb
fcoms
movsl
xchg
jno
out
and
repz
add
sti
ja
mov
fldt
mov
cmp
imul
stos
add
outsb
push
in
popf
mov
ja
jno
xchg
lods
push
jnp
xchg
arpl
lods
fsqrt
jno
mov
xchg
pushf
sub
sti
scas
loope
cmp
or
fwait
addb
dec
sbb
sar
rcr
fstpl
push
and
sbb
insl
orl
cli
repnz
sarl
jb
cmp
jno
pop
jecxz
out
pop
dec
repnz
stos
pop
sub
mov
outsl
in
pop
xor
sbb
dec
inc
shrb
sahf
pop
adc
idivl
mov
pop
add
jle
jp
fbld
pop
imul
sbb
dec
adc
jp
insb
iret
pop
mov
xacquire
lock
cmpsb
add
ret
js
insb
mov
and
popa
ss
in
cltd
mov
sahf
std
out
ss
into
cmpsb
ss
pusha
jae
int3
inc
sbb
sbb
mov
add
aaa
push
repz
add
push
or
mov
out
sbbb
enter
or
or
add
lds
mov
xchg
jp
cmpsl
rcrl
add
adc
repz
cli
icebp
push
das
push
jle
mov
repnz
insb
cmp
cmp
fstpl
rclb
in
dec
loope
add
mov
jb
lds
push
les
movsb
insb
in
and
inc
int3
xchg
dec
mov
in
adc
fistl
insb
stos
iret
daa
lds
inc
jmp
and
adc
sarl
add
shl
mov
stc
xchg
or
ds
sti
call
jmp
add
push
mov
in
mov
cmp
inc
xchg
adc
adc
mov
push
fidivrs
push
push
gs
mov
in
mov
scas
lret
sbb
in
xlat
adc
mov
jp
xchg
aaa
add
stos
subb
adc
lret
adc
insl
gs
repnz
imul
dec
and
mov
xchg
and
sub
cmp
mov
mov
mov
inc
sub
sti
flds
mov
mov
out
aam
imul
cmp
insl
test
pop
push
data16
jb
and
aam
out
imul
sub
mov
cmpb
shr
dec
leave
jl
lock
insl
call
ret
jp
mov
sahf
daa
cs
lock
dec
scas
inc
cmc
mov
sarl
enter
jl
xchg
jno
push
sbb
push
or
or
ret
sub
jbe
pop
and
mov
mov
sahf
fwait
push
pop
je
pop
repz
pop
pusha
add
scas
nop
fdivr
adc
jmp
jb
adc
data16
leave
sbb
nop
inc
int
inc
sub
push
pop
repnz
xchg
stos
cmc
push
imul
icebp
test
fmull
popa
shl
jnp
sub
push
pop
js
pop
inc
jg
loop
mov
xor
mov
out
pop
pop
or
jo
ret
push
sti
imul
xor
aas
dec
xchg
lock
lcall
xchg
hlt
jne
xor
sub
iret
lods
movsl
cmp
stc
enter
shrl
cmp
ficomps
int3
sbb
lahf
arpl
jno
andl
sbb
cmpsb
pushf
pop
cwtl
test
dec
or
pop
mov
aaa
push
pushl
les
add
pop
sti
ljmp
ljmp
pusha
hlt
iret
add
sbb
insl
push
test
pop
in
sbb
sbb
cmpsb
arpl
aad
insl
and
pop
inc
cmp
push
pop
mov
add
mov
out
gs
jne
clc
pop
push
movsb
mov
aas
scas
stos
sbb
fbld
fucom
mov
outsb
mov
mov
mov
sub
out
lret
cmp
push
andl
lods
rcll
cmp
das
mov
dec
pop
pushf
xor
ret
outsl
pusha
sub
cmp
pusha
cs
negb
fistpl
jecxz
push
into
pop
leave
lcall
fsubl
mov
mov
mov
mov
decb
mov
adc
out
pop
loope
cmp
repz
lea
mov
cs
loopne
sub
jmp
sti
jno
rol
faddl
push
inc
andl
jbe
lcall
pusha
xor
mov
shlb
in
dec
xchg
jnp
jge
mov
in
sbb
addr16
arpl
sti
xchg
pop
mov
in
xor
jge
mov
add
aas
imul
mov
popa
testl
and
push
das
out
jl
pop
test
or
xor
lds
adc
mov
xorb
sbbl
and
xor
mov
or
lock
in
inc
sub
cmp
mov
fdivr
inc
adc
sbb
and
lds
push
jne
mov
je
add
shll
cld
movsl
bound
fisttpll
rol
sub
popa
ret
adc
icebp
cli
or
fadds
jp
lea
xor
push
dec
or
insb
mov
jle
roll
repnz
test
nop
mov
push
xchg
and
push
cmc
dec
in
pop
test
adc
std
add
xchg
js
aad
les
aaa
pop
adc
data16
pop
xor
xchg
rorb
dec
mov
inc
push
aam
fs
push
mov
imul
xchg
or
or
enter
or
scas
test
icebp
lds
inc
faddl
loope
mov
mov
pop
add
lock
loopne
fwait
or
ss
scas
ret
cld
push
inc
je
mov
mov
pushf
negl
fcoms
mov
out
xor
inc
dec
xchg
lock
stos
clc
sbb
push
dec
sti
popf
leave
pop
out
out
mov
push
lds
sub
xor
bound
sbb
push
les
sti
push
orl
sub
xbegin
out
lret
sub
hlt
dec
or
mov
and
inc
push
cmp
scas
xor
aad
sbb
cmp
jl,pn
xlat
mov
int
lds
cli
and
sub
je
lret
pop
pop
and
popf
xchg
inc
fs
sbb
ficomps
cmc
rorb
or
cmp
movsb
dec
imulb
mov
dec
jle
xlat
ja
mov
scas
imul
cmpsb
dec
ja
mov
shlb
inc
cld
adc
mov
xor
inc
mov
push
mov
popf
subl
lods
dec
leave
in
fmuls
dec
push
pop
enter
outsb
inc
repnz
mov
sub
js
and
jne
cli
imul
jns
sub
dec
in
inc
pop
pop
xchg
js
andl
jp
cmp
jno
imul
je
dec
stc
mov
push
lcall
scas
sub
jl
test
dec
jg
jbe
in
in
push
push
imul
loopne
in
insl
adc
aam
imulb
mov
aam
sbb
sbb
add
sbb
hlt
or
add
and
pop
add
arpl
cmp
adcb
out
sbb
xchg
cmpsb
or
cmp
cltd
or
nop
aas
repnz
xor
sbb
mov
cmp
cwtl
and
fdivp
aad
or
jno
ja
xchg
aas
aas
mov
xor
pop
sbb
mov
int
mov
xchg
push
cmp
jae
cld
aaa
sarb
pop
and
aaa
and
jmp
xchg
push
fsubs
stos
dec
fcmovbe
mov
and
push
movsb
dec
adc
sub
jne
mov
lcall
lea
in
xchg
mov
push
pop
jb
push
dec
mov
xchg
test
and
aaa
fnstsw
and
repz
jno
faddp
pop
cmp
jno
pop
xrelease
jg
mov
hlt
pop
les
add
pop
xor
cltd
mov
outsb
pop
cmp
sti
pop
rcll
mov
hlt
xchg
fisttpll
es
ljmp
and
shlb
hlt
cmp
mov
scas
mov
hlt
pop
xor
ret
pop
mov
add
data16
sarb
into
test
rcr
inc
lods
into
dec
dec
testb
into
pop
mov
in
sub
jmp
xchg
jno
cmpsl
out
out
or
mov
jnp
pop
fcomp
adc
sub
lds
lahf
xor
inc
push
sbb
scas
jae
xchg
sbb
lret
stos
sub
add
inc
je
xlat
fcoms
push
add
enter
inc
push
cltd
mov
aam
mov
mov
cltd
loope
sbb
out
ja
sbb
xor
fnstsw
sub
dec
ret
popf
fisubrl
popf
insb
leave
lret
hlt
ret
push
adc
out
test
dec
or
stc
sub
cwtl
cli
cld
mov
out
popf
cwtl
adc
push
cli
jae
or
push
fwait
aaa
ljmp
xlat
jb
loop
sub
ret
es
int
aam
and
inc
and
nop
cmp
push
out
das
or
rcll
push
xor
cmp
in
imul
sarl
adc
push
pop
js
iret
mov
pop
add
mov
test
xor
fldl
mov
mov
add
ljmp
repz
xchg
push
add
fucomp
cli
mov
add
cmpsb
and
das
xchg
cmp
fcmovnu
outsb
xor
fcmovnbe
jae
mov
pop
fists
inc
in
or
jbe
pop
jne
jae
mov
sub
out
lahf
adc
or
xor
pop
lds
scas
js
push
paddd
and
jae
fstpt
lea
into
cmpsb
xchg
xorl
pop
jne
push
scas
push
addr16
lret
aam
lds
aam
jb
aaa
test
xchg
sbb
inc
pop
loope
pop
jbe
paddsb
mov
jp
aaa
pop
test
mov
adc
pop
dec
mov
aad
push
mov
xchg
repnz
jp
stos
push
mov
adc
ret
inc
in
loop
xchg
xchg
add
movsl
inc
add
jmp
cmc
pop
sub
movsl
push
in
popf
shrw
icebp
cmp
cmp
outsb
adc
int3
cli
icebp
loop
dec
insl
push
repz
xor
pop
gs
adc
and
sub
cwtl
inc
andnps
xlat
sub
mov
ds
arpl
fistpl
cmp
push
inc
mov
repz
loopne
dec
pop
nop
flds
mul
mov
xor
fmull
dec
inc
sbb
mov
dec
pop
scas
push
xor
repnz
sbb
aam
and
aas
pop
call
xor
and
leave
loop
fcos
xchg
jns
and
xor
clc
sbb
popf
dec
mov
inc
inc
sti
in
rcl
sahf
cmp
jge
mul
shll
push
out
pusha
and
mov
int
and
fucomi
negb
outsl
xor
stc
scas
mov
xchg
outsb
stos
or
fs
pop
movb
add
nop
pop
add
sbb
cwtl
fstpt
aas
bound
add
add
outsl
pop
push
call
das
sub
rorl
test
das
shrl
xor
jg
fstpl
xchg
jecxz
loope
add
mov
fmulp
adc
mov
ficompl
insl
ss
and
mov
pop
loope
cmp
fisubs
xchg
push
pop
dec
mov
mov
jb
fdivrp
pop
adc
aaa
sub
mov
outsl
xchg
xor
out
cmpsb
std
add
or
or
jg
jmp
push
das
cmp
dec
sbb
push
add
fsubs
das
insl
repnz
sbb
pop
push
xchg
ficoml
enter
les
pop
mov
mov
mov
xchg
dec
sub
inc
aam
out
ret
in
out
push
jne
lds
enter
daa
frstor
pop
je
push
daa
imul
out
adc
ja
add
sbb
and
fwait
and
jae
jo
aaa
arpl
pop
cwtl
jb
push
xor
lret
data16
dec
into
icebp
mov
leave
scas
jns
sub
ret
lods
imul
and
subb
out
pop
mov
xchg
dec
mov
mov
aaa
dec
or
fcmovnu
stos
inc
out
or
lds
stos
pop
loopne
ja
jg
push
jne
mov
mov
xchg
xchg
cmp
add
xchg
loopne
sti
sbb
cmpsb
sub
xchg
inc
and
sub
xchg
out
or
add
jmp
pop
data16
pop
insl
inc
xchg
sub
ds
xorl
stos
or
insb
and
outsl
mov
jae
sbb
sub
jb
andl
push
pusha
push
arpl
mov
xor
mov
movsl
pop
mov
mov
jbe
mov
out
call
inc
jo
dec
mov
insb
popf
inc
and
scas
mov
xor
jae
vminss
adc
inc
push
stos
mov
leave
out
adc
pushf
lock
es
repnz
cmp
or
movsb
mov
pushf
aad
add
or
in
cmpsl
fmul
and
pop
aaa
lea
shll
out
fbstp
imul
jb
imul
push
cmpsb
dec
push
cmp
mov
in
test
ss
into
test
movsl
into
and
or
fisubrs
lock
cmpsb
pusha
cli
in
gs
lock
adc
daa
out
pop
and
push
cmp
sub
pop
xchg
jg
subl
mov
sbb
inc
mov
pop
sbb
xlat
adc
jo
pop
es
in
stc
inc
movsb
nop
jb
imul
or
cmc
in
mov
loope
shll
popf
or
jb
sbb
test
stc
inc
ja
leave
stos
rcrb
cld
push
push
sarb
cmp
loop
stos
mov
and
jge
cmpsl
lea
sub
clc
imul
pop
jb
mov
add
shll
mov
rorl
movsb
js
jecxz
out
push
lret
enter
inc
push
js
dec
cmp
and
sbb
inc
jno
mov
xor
in
inc
dec
mov
jle
dec
out
enter
pop
sbb
xor
cmp
sub
xor
pop
fildl
test
in
cmp
outsl
inc
mov
data16
in
clc
pushf
sub
dec
jo
dec
mov
cmp
dec
mov
push
test
sbb
sub
les
mov
mov
out
fwait
aad
and
cmp
mov
push
mov
repz
stc
aaa
les
push
mov
pusha
mov
stc
pushf
loopne
int3
jnp
cmp
sahf
cmpb
add
icebp
leave
aaa
and
add
ss
mov
aam
sub
jp
inc
xchg
push
and
push
sahf
out
andl
inc
cld
pop
push
push
data16
pop
and
push
loope
push
add
call
jne
outsb
das
jg
and
or
addr16
fmul
imul
call
iret
das
pop
shl
mov
adc
and
inc
out
outsb
jp
out
icebp
gs
leave
dec
orb
mov
cltd
lahf
xchg
pop
test
xchg
pop
ss
mov
sar
lcall
nop
pop
mov
repz
cli
andl
movsl
cld
cmp
loope
mov
mov
lods
xchg
mov
leave
inc
aad
clc
xor
rolb
aaa
pop
jle
jge
jno
fbld
dec
sub
jmp
pop
outsl
cmpb
pushf
jp
xor
mov
push
sbb
and
mov
cmp
in
cmpsb
push
jg
xchg
cmp
cmp
and
imul
fisubrl
inc
repnz
imul
dec
lock
icebp
sbb
jae
rcrl
pop
stc
loopne
jo
out
arpl
scas
lret
cmp
jo
cs
ret
imul
cmp
addr16
pop
lahf
fisubs
xor
inc
push
push
rcll
push
or
int
dec
pop
inc
nop
sbb
sub
pop
imul
pusha
ja
popa
xor
add
or
xor
ds
cmpsb
xchg
repz
vmaxps
jnp
add
mov
cwtl
shlb
popf
mov
adc
iret
std
lret
xchg
xchg
xor
mov
cmp
xchg
aam
xchg
cmp
adc
xchg
sti
pusha
jb
shrl
mov
sti
out
clc
in
xchg
retw
xchg
mov
jge
pop
cld
cmp
and
adc
sub
pop
push
nop
add
out
adc
rclb
lods
orl
ds
ret
adc
cmpsl
int
jns,pn
sahf
cmpsb
cmp
lods
xchg
xchg
jge
lret
stos
sbb
scas
out
mov
push
loop
rclb
xchg
adc
mov
sub
mov
sbb
ljmp
sbb
xchg
jne
jae
fistpl
popf
mov
fdivrs
lahf
out
mov
inc
shll
push
mov
mov
mov
les
lea
sbb
cli
inc
fsubl
shlb
insb
cld
push
push
stc
leave
sub
enter
out
inc
cmc
leave
lret
cs
std
test
mov
shlb
insb
iret
pop
test
addr16
pop
sbb
cmp
hlt
inc
jns
mov
mov
push
jecxz
push
add
pop
sbb
iret
mov
pop
imul
insb
sub
dec
push
jne
push
mov
push
xchg
lahf
mov
pop
inc
xor
out
cwtl
push
push
cmpsl
test
scas
adc
cmp
jns
xchg
insl
adc
and
mov
iret
fwait
cmc
mov
dec
push
mov
fnstsw
sbb
imul
or
mov
push
pop
pop
lcall
sub
fdivrl
nop
xor
sbb
add
inc
rorb
mov
pop
sub
rolb
insb
xorb
cmp
stos
pop
jl
inc
mov
cmp
push
ljmp
or
lcall
lods
fst
mov
das
mov
cmp
cmp
inc
pop
mov
hlt
loop
fdivl
mov
xchg
out
adc
adcl
mov
pop
in
aas
sahf
test
or
cli
fwait
repnz
rol
stos
adc
xchg
out
nop
fwait
jg
mov
jnp
mov
xor
stos
data16
push
mov
call
mov
in
add
fwait
jmp
mov
mov
popf
xchg
sbb
jns
mov
in
loop
aaa
icebp
ss
inc
aas
dec
fwait
mov
xlat
shlb
or
cld
out
xchg
mov
mov
loope
xor
into
push
inc
jp
fucomip
and
inc
mov
xchg
push
jp
outsl
orl
adc
mov
sarl
stos
mov
pop
in
int3
xor
cvttps2pi
jnp
lods
cmc
daa
cmpsb
cld
xor
cs
dec
adc
lret
pop
sbb
jb
jnp
popf
mov
xchg
jle
sbb
lods
sub
loope
ss
ds
bound
push
pop
mov
xchg
mov
imul
mov
cmp
jge
stos
aas
lahf
sbb
call
push
sub
jno
mov
dec
mov
adc
add
or
mov
ffreep
push
jne
pop
mov
fildll
test
movsl
outsb
or
add
sbb
mov
mov
int
aad
or
sub
loop
jl
addr16
pop
jle
out
fildll
hlt
mov
pushf
sub
lock
loopne
je
cltd
outsb
loopne
mov
mov
rorb
adc
movsl
and
repz
or
sub
add
sub
mov
arpl
xchg
jge
outsl
add
loop
jle
sarb
mov
rcrb
mov
jae
in
add
inc
xor
sbb
stos
ss
mov
sbb
jecxz
clc
cwtl
xchg
sub
scas
mov
xor
push
cmc
pop
mov
pop
popa
enter
inc
or
lock
mov
popa
push
fdivrl
jne
sti
xchg
pop
into
ja
sbb
adc
testb
jbe
fcmovne
xor
inc
mov
or
nop
jb
nop
loope
jno
xchg
jns
in
fsubrs
ss
test
movsb
loopne
inc
cmc
jecxz
xchg
popf
loope
pop
xor
mov
mov
cld
pop
dec
add
cli
in
jle
cmp
scas
jbe
pusha
dec
stc
mov
mov
movsb
cmp
ficoml
pushl
mov
test
or
push
mov
jo
adc
adc
xchg
sub
mov
sub
testb
add
test
and
mov
ljmp
sbb
lods
jmp
mov
fisubrs
adc
sub
add
popf
fsubs
loopne
enter
inc
push
in
sbb
pop
cmpxchg8b
enter
addl
out
inc
arpl
popa
loop
idiv
inc
scas
lods
test
mov
inc
jnp
mov
lds
and
movsl
imul
adc
cwtl
icebp
inc
add
jns
jnp
in
jecxz
call
sub
pop
jecxz
sub
fdivrp
pop
not
fidivrs
push
cmp
sbb
xor
js
addl
popf
nop
mov
xchg
mov
mov
pop
hlt
lea
orl
gs
or
repz
pop
inc
mov
int3
mov
mov
push
idivl
orb
mov
hlt
dec
push
sbb
xor
lock
test
dec
inc
add
into
dec
push
pop
add
cmp
push
lcall
sti
and
scas
cwtl
xchg
ljmp
cs
push
mov
add
in
ss
ret
gs
fdivrl
cmp
lahf
dec
fcmovu
xor
jmp
sub
pop
mov
fisttpll
jecxz
fistl
movsl
gs
out
sub
popf
lcall
in
imul
add
ret
dec
outsb
cmp
lret
jmp
or
std
pop
test
pop
addl
xor
sbb
fs
ljmp
shlb
pop
imul
lret
inc
inc
xchg
fwait
jge
xchg
pop
idivl
pop
pop
mov
clc
arpl
add
mov
je
inc
test
loop
fs
sub
and
sahf
hlt
insl
mov
sub
cmp
cmp
mov
jg
test
pop
inc
sbb
in
cmp
mov
xchg
aam
mov
add
ss
push
push
leave
std
adc
daa
fidivrs
cmp
pusha
xor
mov
call
and
adc
std
inc
and
jmp
les
inc
fisttpl
xlat
xor
daa
call
xor
lcall
sub
gs
add
jb
adc
cmpsl
inc
ficompl
cwtl
icebp
popa
cmp
out
ja
outsb
rclb
pop
mov
imull
negl
push
mov
push
jb
popa
rcrl
lret
ss
or
fmuls
test
xchg
jae
sbb
mov
xorl
adc
mov
daa
rorl
mov
inc
loope
lock
push
add
sbb
xchg
mov
add
sbb
pop
cli
cmp
aas
mov
xor
sbb
cmp
cltd
in
test
scas
fwait
iret
out
xor
cmp
mov
out
lods
xlat
push
jecxz
jo
adc
je
push
mov
ret
xchg
push
push
pop
jl
inc
aaa
dec
add
mov
subl
idivb
lret
sti
mov
into
cmc
push
sarb
or
mov
shrb
pop
cmp
out
mov
fistps
test
pop
jg
jb
adc
sub
add
outsb
xchg
cs
lock
ret
sarb
fimull
movsb
lock
inc
int
mov
jmp
dec
lret
mov
jnp
mov
sahf
add
push
mov
xchg
push
leave
push
testb
sbb
xor
mov
hlt
icebp
in
xchg
sti
sbb
je
ds
leave
mov
add
inc
negb
inc
mov
inc
fnstsw
mov
jle
pop
sbb
sbb
xchg
outsl
scas
cmpsl
mov
push
out
fsubr
mov
push
xchg
xorl
jle
mov
inc
mov
insl
push
cmp
mov
decb
push
aas
jbe
arpl
xchg
fwait
push
add
jbe
ret
in
pop
int3
pop
fdivs
pop
cs
pop
dec
mov
adc
inc
cmpsl
ret
jge
aam
xchg
sbb
call
ds
rclb
mov
push
imul
out
adc
pop
dec
xchg
stos
ret
cs
in
das
cmpsl
lock
ljmp
xchg
out
mov
jae
jmp
and
dec
dec
push
cwtl
fcmovb
jg
jecxz
and
mov
jnp
mov
lret
rol
push
fcoms
mov
cmp
and
jle
adc
es
ret
sahf
leave
sub
jg
xor
pop
sbb
dec
add
push
iret
mov
lret
adc
pusha
nop
stc
or
mov
aad
stc
loopne
mov
mov
andl
aam
sti
stos
add
in
mov
push
ret
fstpt
call
cmc
dec
adc
mov
pop
jae
insb
stos
rcl
insb
repnz
inc
inc
and
cld
fsts
pop
add
push
or
push
mov
test
insl
push
cmp
adc
outsb
jae
sbb
and
jp
clc
cmp
shlb
popf
cmpsl
hlt
push
je
inc
fadds
scas
jae
xor
mov
xchg
push
push
lahf
pop
adc
and
mov
lcall
jl
and
pop
ljmp
mov
sti
jmp
lock
mov
push
loop
xor
mov
imul
adc
scas
sbb
jge
icebp
xchg
and
pusha
hlt
ret
xrelease
mov
je
std
stos
adc
cmp
cmp
xlat
pop
fucomp
xor
inc
jge
div
test
mov
mov
mov
push
or
fdivs
int
xlat
pusha
test
push
or
add
dec
pop
cmp
mov
out
adc
movsl
daa
inc
in
inc
inc
popa
adc
je
int
dec
or
inc
and
test
ret
in
mov
lret
adc
pop
adc
popa
add
cmp
adc
jae
jge
cwtl
out
mov
sbb
js
push
inc
fbstp
mov
mov
ret
inc
and
jae
fldenv
add
js
sub
jge
xchg
outsl
sub
call
sub
icebp
fisubrl
sbb
cltd
ja
scas
in
dec
mov
lcall
push
or
stos
mov
mov
pop
mov
mov
inc
addr16
add
ficoml
gs
push
hlt
or
push
sti
int3
sbb
imul
pushf
push
fstl
out
ja
dec
adc
xchg
ds
cmp
sbb
data16
fcmovnbe
inc
push
das
loope
xlat
cmp
out
mov
add
mov
mov
or
push
into
lods
adc
lret
inc
sub
das
in
ret
sub
rcrb
sbb
cmpsl
aad
mov
sub
into
loope
stos
ror
add
rclb
push
lds
pop
jl
adc
jne
out
adc
jns
adc
fldenv
adc
and
sub
mov
iret
popa
and
and
jns
out
fstpt
stos
dec
in
push
test
inc
pop
cs
dec
inc
std
mov
stos
fbstp
les
cwtl
aas
or
mov
in
jle
movsl
insl
loop
xorl
xchg
jb
sbb
inc
push
insl
push
jae
outsb
sbb
movsl
inc
lahf
test
and
out
inc
cmp
imul
in
insl
mov
jge
cmp
xor
out
xor
pop
cmp
xchg
pop
popa
inc
jmp
inc
fcomps
pop
xchg
xchg
shl
and
and
sub
frstor
push
push
dec
mov
push
mov
cmp
sti
imul
xor
push
jge
adcb
scas
lahf
mov
dec
pusha
cmc
cmp
pop
xor
cmp
xchg
mov
dec
gs
and
ja
arpl
xor
loop
bound
sub
mov
push
jo
dec
mov
mov
scas
xchg
iret
cli
and
mov
sbb
xchg
mov
into
adc
scas
pop
mov
push
shrb
aaa
jae
jp
push
repnz
es
in
incb
pop
idivl
test
aam
sbb
jb
imul
cmp
pop
addr16
mov
jne
cltd
divb
pop
push
test
pusha
dec
jno
mov
push
push
scas
adc
jns
mov
daa
sub
repnz
xchg
adc
jmp
push
ret
leave
je
fcoms
sbb
ja
sbb
in
or
dec
push
mov
loop
or
clc
cltd
sbb
in
aad
stos
sub
xchg
push
mov
mov
aas
cmp
adc
cmp
dec
fmull
jo
sahf
pop
pop
mov
out
mov
lret
jno
xchg
jno
stos
pop
mov
push
inc
iret
mov
push
lods
leave
jmp
push
movsl
les
jmp
pop
and
mov
inc
jno
xchg
xchg
stc
pop
sti
push
pop
adc
inc
xor
fwait
push
lods
push
fs
pushf
clc
call
dec
insb
testb
jns
insb
pop
pop
jbe
test
mov
fbstp
pop
or
add
add
cwtl
push
sbb
test
outsb
mov
test
xor
lods
popa
aas
xchg
or
fsubl
movsl
and
push
pop
clc
dec
adc
mov
cld
lock
mov
fsub
rclb
sbb
arpl
jbe
adc
mov
loop
or
cld
lahf
mov
mov
pop
or
or
jb
insl
or
lea
dec
mov
lret
sarb
jl
addl
stos
xchg
jb
fsts
ja
jp
jecxz
out
push
or
sub
dec
jb
jne
ret
xor
xor
mov
in
jmp
test
lods
mov
mov
out
mov
in
loopne
add
xor
insb
mov
dec
xchg
push
fildl
pop
lods
hlt
cs
mov
insb
nop
es
cmc
lds
cld
je
lods
inc
push
lret
aas
xchg
dec
pop
mov
push
dec
mov
les
push
shll
aaa
sub
dec
aas
les
dec
mov
mov
ret
cmp
pop
outsb
cmpsl
push
int
jns
test
fldl
rolb
cli
cmp
dec
mov
cmp
jmp
jl
lock
bound
pop
sub
push
and
sbb
cltd
jmp
sbb
inc
fsub
and
xor
ror
mov
jg
rcr
hlt
jmp
cwtl
jno
push
daa
arpl
lret
push
xchg
jb
movsl
insb
mov
subl
push
add
in
adc
clc
sbb
mov
xor
data16
in
pushf
fwait
imul
notb
mov
mov
add
shl
mov
jl
arpl
and
icebp
inc
loop
movsl
test
pop
rcrb
rcl
add
push
and
jo
jg
inc
dec
mov
js
icebp
loop
adc
jns
jb
repz
lahf
cmpsl
and
adc
inc
jno
fadd
pop
jl
jb
mov
adc
test
and
sub
sbb
mov
jp
stos
in
push
out
sbb
inc
addr16
sti
lea
dec
inc
out
mov
push
sbb
mov
int
mov
adc
mov
xor
cmpsb
mov
popa
scas
jne
test
mov
add
cld
jae
or
add
pushf
sarb
das
fucomi
inc
cltd
aam
pop
ljmp
or
xchg
hlt
jno
mov
pop
and
dec
push
movsl
roll
sub
ljmp
fidivs
adc
mov
pop
push
and
fstl
jmp
mov
nop
lods
sahf
and
sahf
aam
fistpl
xlat
outsl
xor
jg
pop
sbbl
aas
imul
popa
sub
into
dec
out
out
das
or
rcl
xor
mov
fstpl
into
aad
sbb
cltd
call
and
xorb
xchg
cld
xchg
push
decl
rclb
mov
call
cld
imul
cmp
fldl
imul
jo
inc
rcll
outsb
call
sub
popa
js
xchg
jno
imul
aaa
loopne
sbb
dec
dec
cmpsb
scas
gs
xor
outsb
lock
inc
mov
mov
or
fcomps
xchg
jmp
xchg
rol
imul
jmp
icebp
jns
jno
das
adc
into
cmp
enter
dec
inc
ss
dec
push
fiadds
stc
in
pop
mov
sbb
stos
int3
jnp
xor
cmp
sbb
inc
push
adc
add
jmp
fcoml
inc
pop
adc
sarb
adc
push
testb
fisubrl
sub
stc
sbb
stos
xor
clc
dec
sbb
leave
cmp
mov
lea
jl
dec
inc
mov
dec
lock
imul
push
jg
into
cmp
enter
test
cmp
mov
icebp
sub
lret
cmpsb
xchg
ss
cmp
rorb
aam
jno
mov
xchg
test
mov
fcompl
sbb
jo
loop
enter
loopne
int3
das
decb
cmp
out
stos
rorb
mov
into
jge
jecxz
and
mov
leave
test
in
mov
mov
push
testb
gs
mov
xchg
data16
adc
hlt
jmp
fstpl
jge
loopne
push
iret
mov
ds
mov
cwtl
popf
sbb
insb
cltd
mov
mov
jle
sahf
mov
jbe
inc
jb
ja
xchg
lea
inc
pop
out
dec
inc
dec
and
pop
popa
sbb
aas
push
pop
fistl
lock
movsb
pop
in
call
cwtl
cmp
add
inc
mov
aad
or
pop
rcll
mov
sbb
jg
push
adc
adc
aaa
aaa
lcall
dec
jg
push
stos
outsl
data16
xchg
fnstenv
mov
inc
daa
sbb
repz
jb
push
push
sbb
inc
jle
dec
lahf
fisttpl
or
addb
xchg
imul
fadd
mov
sbb
insb
add
and
lds
icebp
xor
and
cld
pop
ret
push
dec
pop
push
inc
rolb
sub
mov
push
sub
inc
mov
lahf
cli
xor
push
ficomps
jbe
adc
sub
pop
xchg
in
idivl
dec
mov
aas
xor
cmp
and
ljmp
mov
idiv
insl
add
cmp
xchg
dec
gs
mov
jg
gs
ja
push
mov
adc
sti
enter
dec
inc
jbe
mov
push
rorl
mov
fbstp
cmc
aad
fbstp
mov
adc
enter
mov
scas
popa
popa
push
cmpsb
dec
mov
fiadds
mov
dec
shl
popa
test
dec
sub
iret
std
push
mov
ds
jns
movsb
stos
push
hlt
mov
xor
imul
cwtl
fdivrs
jle,pn
out
jecxz,pn
nop
jns
cmp
mov
fwait
or
mov
dec
leave
adc
lods
sub
das
pop
stos
mov
add
inc
jo
inc
test
inc
xlat
outsb
mov
and
gs
mov
mov
add
fimull
xor
jp
jecxz
jns
push
sub
cld
aas
or
out
xchg
cmp
mov
scas
mov
cmp
push
mov
rcl
pop
push
rorb
sbb
lahf
jno
outsl
call
mov
inc
pusha
dec
dec
orl
pop
es
xchg
shl
jecxz
pop
arpl
jge
mov
addr16
int
data16
fldt
pushf
rorl
jne
jns
mov
aaa
push
or
or
cld
jp
inc
and
cmc
insl
scas
sbb
in
sub
push
push
adc
ljmp
adc
hlt
mov
push
mov
sarb
cmc
xchg
repnz
jne
cmp
jp
adc
pop
mov
xchg
dec
imul
mov
cmp
dec
test
repz
mov
or
xchg
jns
dec
xchg
pop
loope
adc
jno
xchg
test
push
testb
rorb
mov
lahf
push
js
stc
ret
mov
pusha
bound
fsubrl
test
mov
ljmp
clc
xor
clc
stc
pop
fdivr
icebp
mov
jne
loopne
mov
and
jno,pt
or
push
pop
in
xchg
xchg
cld
lods
iret
sbb
jb
dec
in
jb
test
ljmp
mov
inc
ret
lods
les
mov
pop
dec
push
sub
int
add
add
stos
jmp
xchg
inc
pusha
stos
out
shll
pop
inc
cmp
das
dec
pushf
or
or
jmp
mov
xor
and
jb
pop
insb
or
in
mov
push
mov
repz
pop
mov
pop
xor
lods
and
adc
mov
fldcw
je
mov
xchg
and
test
stos
and
sbb
pop
sub
or
scas
push
mov
addr16
add
xchg
aaa
inc
outsl
jmp
sbb
jecxz
adc
push
lret
xor
rclb
add
loop
shll
lods
sti
sbb
scas
cmp
mov
popw
cli
cs
movsb
pop
mov
out
outsb
jmp
pop
cmp
in
push
mov
mov
sbb
inc
lahf
push
jno
outsl
or
jns
xor
push
xchg
mov
rcrl
dec
pop
fcoms
scas
loope
testl
adc
xchg
sub
lcall
or
movsb
cmp
aas
jne
mov
mov
imul
je
rorb
inc
push
clc
dec
orl
push
mov
daa
into
dec
mov
jl
lods
adc
ss
mov
sbb
popa
in
ja
mov
pushf
pop
jg
call
adc
cmp
addr16
incl
jnp
aas
ror
popf
loop
ficoml
jae
xchg
aaa
ss
jb
cmpsl
imul
mov
aas
sbb
pop
adc
mov
mov
addb
push
data16
in
sbb
ds
add
mov
cli
jne
sbbb
inc
or
lods
add
cmp
cld
fildl
cmc
xchg
jns
pop
mov
adc
cltd
into
sbb
bound
pop
adc
xchg
jl
addr16
add
xchg
push
push
repnz
stc
cmpsl
cmp
sub
xor
subb
mov
push
mov
mov
negb
mov
jge
push
mov
and
sub
sub
push
and
ja
stos
mov
jo
ret
arpl
repnz
or
mov
inc
mov
test
adc
xchg
es
xchg
inc
shlb
mov
or
fwait
shrb
add
lret
mov
dec
jmp
inc
xchg
and
insl
icebp
outsl
leave
cmpl
xchg
lcall
sub
popf
add
cmp
or
cmc
shlb
pop
jo
fwait
loopne
sbb
xlat
mov
rcrl
cmc
popf
push
popa
push
mov
inc
cmp
xchg
cmpl
xchg
pop
ja
sub
jno
lahf
and
addr16
mov
mov
push
xlat
popa
sbb
push
dec
sub
jb
adc
lea
in
pop
call
adc
push
xor
xor
in
imulb
jb
sarb
mov
inc
movsl
mov
stc
mov
inc
test
rol
outsl
insb
outsl
adc
and
ja
add
clc
stos
mov
push
std
leave
mov
mov
loop
push
cltd
aam
leave
pop
mov
ficoml
jo
sub
addl
fmuls
lock
mov
imul
lret
sbb
jo
and
lret
pop
bound
pop
or
or
in
into
cmpsb
mov
push
sarl
arpl
in
push
sbb
je
adc
push
inc
jae
jge
in
dec
adc
pop
push
push
adc
loope
les
fs
jmp
sbbl
pop
cmp
jp
insb
xchg
aad
mov
sarb
jl
adc
and
fidivs
cmp
imul
popf
pop
jb
into
ja
xor
stc
addl
and
push
xlat
adc
sahf
add
shr
int
out
cmp
and
into
xor
xor
push
push
addr16
jecxz
push
jb
data16
jbe
sub
push
cli
mov
or
sub
or
movsb
xchg
xchg
sub
sbb
cmp
or
jl
push
adc
fcompl
inc
jp
sar
and
rorb
insl
les
dec
shrb
xchg
stc
fs
rolb
jnp
inc
in
mov
icebp
xchg
dec
dec
sub
jbe
popa
clc
pushf
xor
aam
cmp
xor
fdivr
dec
xchg
pop
enter
dec
xchg
loope
dec
xchg
call
dec
add
mov
rcll
push
and
sahf
lret
dec
jl
cmp
mov
xchg
cmp
mov
pop
mov
sbb
stos
xchg
sub
jle
push
fildll
addr16
fldt
daa
cmpsb
mov
xchg
xchg
jnp
sbb
lahf
nop
cmp
ljmp
push
mov
cli
mov
filds
jg
pop
mov
pusha
xchg
cmc
mov
lods
jne
mov
or
jbe
jl
xchg
and
je
sti
or
lea
jne
push
cmp
ss
daa
and
or
ja
xchg
stos
mov
dec
fstps
in
push
call
aaa
movsl
mov
jg
pop
mov
jl
sub
ja
std
pushf
xor
or
adc
dec
pop
stos
outsb
add
xchg
add
sbb
rcrb
xchg
lods
lret
pop
adc
xor
lcall
into
aas
ss
fcomps
fstps
jl
subb
xchg
addl
sub
stos
fisttps
mov
ss
xchg
popa
scas
inc
mov
icebp
popf
or
push
dec
xor
dec
xor
dec
cli
lds
test
std
sbb
push
pop
cmp
fistps
addr16
mov
outsb
mov
gs
mov
and
inc
xchg
es
add
jp
fwait
sub
push
mov
inc
lcall
fucom
add
adc
sbb
lock
mov
in
in
out
jo
pop
sub
lock
fwait
push
mov
or
xlat
into
xchg
sub
sub
sub
mov
mov
int
std
jno
mov
dec
fmull
dec
je
jne
stos
inc
fidivs
les
loop
pop
pop
inc
jecxz
inc
ret
stc
out
mov
mov
mov
mov
aad
ja
imul
out
imul
add
popa
fs
sbb
or
sti
and
and
movsl
les
popl
pop
sbb
rorb
sub
xchg
mov
and
in
cmp
jg
iret
decl
push
or
jo
cmc
ljmp
push
out
adc
outsl
jp
lods
adc
insl
cmp
scas
mov
data16
scas
push
icebp
mov
or
je
and
out
mov
mov
dec
jnp
xchg
or
xor
push
ficomps
bound
mov
pop
mov
lea
xlat
fcomps
mov
cmp
xor
push
movsl
jl
dec
test
mov
nop
cwtl
mov
test
test
mov
int
cmp
daa
mov
dec
ret
inc
lds
jne
loop
mov
jmp
add
sbb
push
pop
push
inc
mov
stos
xchg
inc
test
mov
xor
mov
lahf
aas
test
push
and
cmc
fidivl
dec
fwait
push
adc
mov
aas
cld
shrb
mov
ja
dec
cmp
std
fadds
mov
and
div
pop
push
or
mov
and
jp
out
jo
jg
inc
out
adc
cmp
adc
pop
fsubr
and
pop
jno
mov
adc
push
xchg
xchg
test
inc
sbb
jecxz
sub
gs
push
out
pop
nop
lods
cmp
cmp
test
negb
lret
push
mov
sbb
inc
mov
iret
dec
jl
rclb
mov
sbb
mov
dec
xlat
and
adc
jecxz
mov
add
lret
xacquire
iret
push
pop
outsb
cli
in
fcoms
mov
rolb
repnz
inc
push
leave
add
les
dec
fdivrs
in
sub
jge
or
xor
mov
cmp
jle
into
mov
lods
stos
jnp
cmpsl
add
add
xchg
pusha
cmp
in
mov
mov
sarb
fwait
cmp
dec
pop
js
xchg
and
dec
das
ja
mov
push
repnz
push
and
and
ja
loopne
pusha
inc
xlat
hlt
cmp
insb
cld
loopne
mov
mov
ljmp
xchg
jl
mov
xor
clc
stc
aaa
jle
imul
mov
mov
cmpsb
test
cmpsb
loopne
mov
mov
jae
mov
shll
mov
push
or
inc
inc
ret
stos
in
adc
mov
jae
push
and
pop
xchg
nop
rcrl
xchg
xorb
addb
xchg
sub
cmp
and
inc
shrl
icebp
dec
xlat
xchg
cltd
sub
lods
xorb
jb
out
mov
mov
mov
and
addr16
pusha
out
mov
dec
jecxz
sub
ja
pop
push
sbb
jnp
data16
add
dec
fsubp
clc
lods
jle
xor
mov
xchg
aad
jb
jno
addb
js
push
or
scas
add
inc
leave
mov
and
cwtl
in
dec
mov
xchg
xchg
insb
movsb
lahf
jae
nop
cmp
cmpsl
sbb
js,pn
out
test
xchg
push
inc
push
adc
stos
mov
outsl
jo
pop
sbb
ljmp
xor
and
dec
loope
pop
out
jne
sbbl
loope
jns
je
arpl
int3
aam
push
dec
xor
lock
outsl
ljmp
popf
cmpsb
mov
mov
loopne
pop
rcr
sar
mov
ljmp
mov
pop
push
cs
imul
fbstp
popf
repnz
push
or
push
mov
icebp
roll
push
rcrb
sub
mov
mov
mov
fs
xor
cmp
mov
dec
les
fsubr
in
inc
and
mov
jnp
cmpsb
lret
dec
incb
cmp
sbb
add
mov
rep
pop
pusha
mov
sub
cltd
mov
rorl
or
mov
movsb
jnp
adc
arpl
jg
les
arpl
and
aaa
pusha
popf
pop
mov
xchg
xchg
adcl
lahf
mov
push
inc
xlat
shll
stc
cwtl
jb
inc
sbb
imull
mov
dec
fdivs
outsb
lahf
les
cltd
mov
xor
add
ret
cmp
sub
and
jbe
les
and
xchg
lds
push
inc
aaa
pop
add
push
cmp
fstl
push
jge
adcl
pop
lock
fsubs
rol
testb
addr16
movsb
mov
popa
or
gs
ja
cmc
push
mov
mov
clc
mov
jne
daa
aaa
xor
lret
out
aas
gs
stos
and
stos
fists
pop
aas
lret
lret
cmpsb
jg
add
push
mov
pop
add
bound
xor
dec
pusha
insl
js
cmpb
sbb
stos
addr16
cmp
inc
dec
jae
fcomps
sub
je
scas
iret
insl
ljmp
add
imul
sbbb
mov
mov
push
push
cmp
jnp
sub
aad
dec
imul
lret
pop
push
loope
jecxz
cmp
mov
xchg
mov
dec
rcrb
sbb
mov
outsb
and
cli
jmp
dec
lea
pop
push
push
fwait
imul
push
add
jle
mov
in
xchg
fistpll
sahf
cmp
bound
xchg
js
add
ds
into
cmp
mov
fwait
cld
stos
push
push
jne
out
mov
mov
or
sub
sbbl
fsubr
test
fdivl
adc
push
cmc
mov
sahf
lods
fidivl
or
cmp
out
push
mov
call
pop
xchg
rol
cmp
mov
pop
mov
jge
lahf
pushf
push
or
dec
jmp
xor
repnz
shlb
mov
xor
lock
xchg
mov
das
incl
out
mov
and
jae
xlat
dec
rcrl
pop
xchg
mov
das
in
lahf
cld
subb
outsb
call
das
hlt
in
sbb
and
aam
in
adc
cmpsb
lcall
cmp
sbb
xchg
in
cmpsl
aam
daa
mov
in
jns
test
mov
push
sti
push
add
sbb
mov
imul
mov
pop
movsb
pop
arpl
scas
stos
lods
in
nop
add
jl
adc
inc
jp
xchg
rep
and
add
push
fldcw
inc
pop
inc
adc
xor
out
jecxz
fisubrs
and
ds
cmp
mull
jmp
lds
clc
lods
out
fisubs
enter
popa
cmp
test
xor
cmp
imul
lahf
sbbl
inc
test
cs
adc
filds
pop
repz
push
cltd
pop
xchg
adc
test
pop
lods
ficoms
jg
pop
subb
xchg
stos
in
in
bound
mov
movsl
cmp
aad
adc
test
and
and
movsb
in
repnz
hlt
jmp
xchg
loop
mov
cli
sbb
addl
xor
mov
sub
mov
sub
inc
lock
sbb
mov
fldcw
mov
or
mov
ret
xchg
xor
or
pop
dec
sbb
cmp
add
rol
jns
add
or
mov
dec
sub
dec
add
gs
or
push
push
outsl
int3
sub
shlb
mov
dec
bound
lock
out
ret
cld
cld
mull
or
jge
fwait
or
push
adc
xor
cltd
addl
sub
rolb
xchg
sub
push
inc
hlt
dec
xchg
pop
stos
sti
fwait
lods
mov
xchg
je
lods
pop
or
xor
scas
rclb
loope
push
in
xchg
pop
fstpl
aad
stos
fcomps
andl
add
add
push
push
or
dec
or
adc
mov
stos
mov
or
clc
cmp
xor
cmp
pmaxub
inc
push
fisubrl
out
or
rcl
add
and
test
cltd
mov
ds
stos
std
shlb
sbb
cmp
pushf
xor
pushf
mov
lods
sbb
popf
in
lock
sbb
and
mov
stos
sbb
cmc
push
negb
or
sub
jnp
in
sar
jno
outsb
xor
dec
rclb
cmp
or
dec
adc
ret
stc
testb
jns
mov
sbb
pop
sub
dec
arpl
mov
push
or
test
sub
mov
inc
rorl
dec
outsl
cmp
nop
xchg
sub
sbb
xor
cmpsb
mov
xchg
aad
lods
cmc
push
sbb
push
cli
sahf
sub
hlt
pop
adc
insl
xchg
adc
mov
aam
xchg
imul
call
sarl
insl
sahf
mov
add
push
jbe
ret
rclb
mov
sbb
mov
jp
sub
stos
xchg
inc
mov
push
adcl
out
repz
mov
jmp
mov
jmp
test
xor
ret
mov
orb
nop
mov
int3
sub
inc
cmp
mov
sbbl
mov
test
mov
xchg
or
and
inc
sahf
arpl
or
mov
jns
fsubrp
adc
pusha
and
pusha
lods
jae
aad
icebp
loopne
cmpsb
jb
or
push
fmulp
push
movb
mov
cld
and
lods
jle
add
pop
sbb
push
pop
dec
stos
sub
and
rolb
idivl
ret
sub
pop
divb
dec
sub
hlt
divl
sarl
call
dec
daa
call
pop
jge
popf
lcall
sbb
dec
popa
es
cld
push
xchg
mov
mov
xor
lea
cmp
sub
mov
addl
rcrl
jecxz
mov
aaa
enter
repz
push
sysexit
jb
jle
adc
xor
pop
movsb
jbe
popa
sub
cmp
fdivl
ret
lods
and
adc
or
jmp
lods
cmc
xor
push
xchg
cld
and
clc
sub
jne
aaa
jns
jne
movsb
cmp
sub
aaa
lret
mov
in
out
sub
daa
fdivl
cmp
outsl
push
sbb
mov
mov
bound
pop
sbb
lret
imul
xchg
outsl
ja
and
sub
in
popf
and
ljmp
mov
inc
enter
jp
fcomip
clc
repz
add
fldcw
inc
dec
pop
inc
jns
rorl
mov
adc
push
clc
cmp
mov
test
jne
or
insb
ja
adc
xor
mov
xchg
cmpsl
jle
xor
in
jae
xor
fwait
mov
xor
fisubs
cmc
xchg
jbe
cs
cld
call
dec
cmp
add
sub
xor
or
jmp
xchg
fildl
push
imul
cmc
lea
outsl
push
loopne
adc
dec
test
movsb
cmp
lds
test
stos
out
adc
loope
iret
out
repz
jl
divl
idivb
lahf
cwtl
lahf
mov
call
enter
push
mov
pop
pop
push
cld
pop
sbb
scas
mov
in
adc
pop
add
fbstp
popf
mov
sub
mov
push
cmp
dec
or
mov
inc
push
mov
and
cs
jne
and
iret
les
sbb
dec
out
pop
cmp
ja
mov
jne
test
add
outsb
or
or
loope
fstpt
repnz
push
mov
push
push
and
ja
xlat
cmp
push
cmp
lds
sub
lods
in
je
add
sub
mov
jmp
or
cmp
push
cmp
rol
mov
fmuls
sub
and
add
cmpsl
cs
test
adc
test
dec
addl
test
fistps
jns
jo
rcrb
roll
out
push
sahf
inc
dec
lock
and
cs
and
adc
push
in
incb
stos
cmp
fs
scas
sbb
mov
clc
rol
and
fdivl
mov
int3
es
pop
icebp
std
lret
imul
iret
sub
push
sahf
mov
adc
and
stos
xor
out
sub
ret
push
mov
das
sbb
pushf
sbb
mov
lret
pop
pusha
xor
test
and
ret
jae
jnp
lea
into
clc
sbb
cmp
xor
lods
xchg
xor
scas
popf
roll
dec
cmp
jecxz
jae
push
inc
lahf
cmc
mov
pop
cmc
inc
mov
and
in
add
stos
inc
dec
std
aaa
test
mov
out
call
sub
pop
jmp
rcl
jg
addr16
mov
cmc
pop
mull
adc
mov
into
inc
mov
jo
adc
lods
push
jl
mov
pop
mov
fidivl
sahf
mov
adc
pop
xchg
cmpsl
call
aad
dec
clc
xor
xchg
imul
inc
add
jnp
jge
mov
inc
adc
nop
lods
outsb
push
mov
js
sub
adc
adcl
je
icebp
out
rorl
mov
test
out
loope
stos
nop
xchg
aas
mov
fdivr
xor
cs
dec
fs
fcomps
loop
mov
das
xchg
scas
xchg
inc
and
testb
mov
and
stc
xor
cmpsb
cmp
bnd
leave
dec
push
addb
push
and
nop
loop
xlat
inc
sub
cmp
popf
xor
or
dec
cmp
test
jmp
jge
pop
fbld
repnz
adc
xchg
cmp
jecxz
mov
shlb
add
mov
dec
jmp
pushf
sahf
dec
outsb
push
lret
adc
push
pushf
shll
pop
les
pop
fmull
push
or
add
cmp
and
add
mov
pop
aam
xor
es
in
jnp
pop
push
fstpl
xchg
lret
xor
dec
std
mov
bound
sub
fsubs
mov
dec
mov
sub
cmp
lods
mov
mov
jbe
fstl
cmp
cmp
xorb
pop
into
in
mov
lret
imul
xlat
inc
movsb
sarb
fwait
ret
repnz
jg
lods
sub
rcll
ret
nop
pop
mov
sbb
sbb
inc
adc
mov
arpl
jo
add
and
pop
dec
lret
sti
std
test
adc
adc
jg
lods
es
jle,pn
cmp
jne
mov
scas
iret
prefetchnta
and
xchg
test
js
fnop
pop
mov
ret
in
insl
inc
mov
lods
and
cld
stos
mov
fnstcw
xchg
int3
push
push
pop
sub
xchg
jae
dec
and
jne
jne
fdivrs
lods
stos
stos
dec
adcl
or
mov
inc
or
dec
jl
cmp
hlt
cmp
push
rorb
pop
mov
mov
shlb
cmp
mov
and
movsl
rcrb
mov
adc
cmp
add
fucomi
sub
mov
sbb
pop
sub
mov
dec
cmp
aam
call
fidivl
dec
inc
or
je
fistps
int
es
outsl
scas
xlat
mov
cltd
shrl
das
ljmp
and
mov
in
dec
hlt
outsb
lods
in
fisttpl
adc
popa
sub
sub
jecxz
mov
or
or
leave
pop
add
cmp
das
into
add
movsb
mov
mov
loope
ds
or
jp
test
stc
ficompl
out
dec
jae
insl
jbe
shll
iret
lods
mov
insl
leave
inc
add
idivl
adcl
nop
and
lret
mov
dec
add
mov
in
out
sbb
stos
shlb
lret
xchg
es
sub
and
fwait
push
ljmp
mov
pop
push
ljmp
sbb
inc
cmpsb
stos
jg
sub
sbb
lea
dec
jmp
scas
into
xor
and
xchg
pop
test
dec
jp
pop
cltd
or
dec
jbe
push
inc
add
adc
dec
sahf
push
or
dec
mov
fimull
cld
aaa
hlt
pop
ja
adc
jl
fimull
mov
in
test
pop
cmpsl
into
dec
loop
inc
mov
pusha
int
repz
dec
add
and
push
add
push
pop
fdivrl
inc
dec
push
push
hlt
adc
sub
pop
mov
fcomps
push
xchg
roll
sbb
jle
lods
popf
xor
xor
and
mov
test
pop
cmp
xchg
fdivrl
cld
in
inc
mov
leave
xchg
data16
ret
out
pushf
repz
faddl
daa
pop
aad
aaa
mov
andb
xor
repnz
int3
pushf
ja
mov
imul
loope
pop
int3
jle
sahf
or
lea
jle
out
push
ds
mov
mov
iret
cmp
cmp
outsl
aam
push
pop
mov
mov
inc
cmpsb
icebp
popf
lahf
and
loope
enter
addb
mov
dec
xchg
push
out
cmovns
xchg
orl
sub
cmp
xor
mov
jbe
adc
dec
xchg
fsubs
mov
inc
outsb
push
jmp
test
or
decb
lods
add
fwait
pop
rcrl
dec
cld
cmp
sbb
fxch
mov
js
lods
jno
mov
and
cmp
xchg
mulb
test
push
push
jo
outsb
xchg
outsl
icebp
mov
imul
lret
push
fistpll
sub
sbbb
js
fwait
out
xchg
cmc
or
movsl
int3
dec
sub
repz
idivl
clc
cmpsb
jae
lock
inc
enter
fsubrl
fwait
aaa
inc
add
in
mov
adc
out
lods
jl
cmc
xchg
mov
rcrb
dec
sub
lock
push
cmp
pop
iret
mov
in
fsubl
stos
testb
into
shlb
daa
dec
dec
cmp
push
pop
test
sbb
mov
and
inc
loop
mov
xlat
cmp
rcl
add
sbb
sarl
repnz
aam
loope
pop
icebp
mov
hlt
cvtdq2ps
mov
dec
lret
scas
inc
push
cld
nop
xorb
lds
shlb
outsb
sahf
adc
push
sub
add
mov
and
dec
sbb
inc
shlb
repnz
push
pusha
aas
sub
xchg
pop
in
inc
outsl
adcb
sar
test
popw
mov
add
cmpsb
inc
enter
push
and
add
sub
mov
push
nop
mov
mov
aam
pusha
jmp
into
arpl
pop
or
pushf
pop
or
sub
in
ljmp
enter
adc
insl
xor
or
mov
insb
push
test
cmp
imul
iret
sbb
push
xor
addr16
cmpsl
test
sub
sub
jno
lahf
jmp
push
imul
gs
cmp
daa
sub
jmp
sub
cmc
xchg
sub
movb
fucomp
scas
lods
sub
enter
mov
clc
iret
inc
push
lahf
jmp
mov
or
and
arpl
add
movsb
je
pop
dec
stos
pop
sbb
mov
ret
out
xor
cmp
mov
test
and
inc
and
mov
in
orps
or
jle
sub
cmp
jmp
ljmp
mov
jb
dec
jno
ret
scas
pop
jmp
mov
pop
mov
mov
cmpsl
push
call
inc
ficomps
push
push
lods
iret
pop
nop
jns
mov
and
js
leave
movsl
cmc
push
cmp
cmp
int3
addb
pop
inc
int
stos
xor
push
gs
fcmovu
rcrl
pop
fsubp
ds
ja
pop
xchg
xchg
sub
inc
xchg
jo
or
repnz
add
push
sti
adc
movsb
fs
outsb
mov
rcr
imul
pop
leave
test
icebp
sbb
mov
and
dec
sub
decb
jae
jl
and
aam
mov
mov
repnz
xlat
push
fwait
xor
mov
loopne
cltd
lcall
out
lahf
dec
cltd
and
fisttps
cld
fistps
pop
cmpsb
jb
mov
add
jo
jb
int
adc
cmp
sbb
movsl
cmp
xor
mov
adc
pop
pop
faddp
loopne
fisttps
mov
sbb
xor
fwait
daa
pop
pop
push
inc
push
ja
or
or
in
xchg
jae
jmp
fsubrl
add
test
mov
and
sub
fnstenv
jb
shlb
movsl
fwait
test
iret
imul
jb
gs
fists
out
inc
jp
sbb
lret
sbb
and
push
stos
cmp
sub
out
rcl
push
sub
xchg
mov
int
ret
inc
jmp
mov
dec
sar
inc
imul
mov
cmp
lahf
cmpsb
dec
xchg
push
das
jl
mov
sub
lret
cmp
pand
mov
adc
cmp
mov
scas
imul
clc
insl
adc
js
xor
sub
pop
hlt
ret
into
imul
cmp
adc
out
lds
andb
lcall
pop
insl
das
and
mov
lahf
cmc
inc
push
loope
cmp
adc
mov
dec
mulb
aad
insl
lcall
xor
mov
xor
imul
mov
pusha
js
scas
mov
sbb
fsubs
fcomip
cmp
stc
push
ficompl
mov
lahf
mov
cmp
adc
stc
imul
adcb
jle
or
in
mov
pop
in
loopne
jno
loop
insb
xchg
ror
es
lahf
sbb
fidivrs
fwait
out
test
cmp
ret
mov
imul
push
and
mov
add
inc
jnp
mov
push
xor
or
das
sub
mov
gs
push
scas
and
fnstsw
scas
dec
jmp
pop
sbb
adc
mov
popf
sub
sti
inc
mov
mov
in
add
cmp
js
das
imul
leave
jb
rcr
xor
ret
icebp
xor
pop
scas
stos
adc
push
jle
inc
jmp
mov
xchg
sub
xchg
fidivs
das
xchg
mov
xchg
popa
and
xchg
pop
xlat
cmp
inc
gs
add
ja
pop
dec
arpl
mov
ljmp
or
mov
ss
orb
je
enter
adc
insl
out
int
pop
popl
or
dec
out
sbb
loopne
movsb
out
add
push
cmp
and
jo
insb
popf
out
jle
in
iret
hlt
push
fsqrt
cmp
fidivl
bound
fisttpll
push
xor
and
hlt
test
push
push
cmp
mov
or
loopne
stos
push
je
test
repz
adc
jge
mov
lcall
fnstenv
int3
or
cmp
and
insb
sbb
mov
dec
pushl
add
cmp
mov
mov
adc
cmp
cmp
mov
mov
add
int
mov
popl
shl
sub
ret
mov
das
pop
sub
out
inc
out
cli
and
stc
sub
fwait
inc
enter
sub
lods
rcll
loopne
lahf
sub
adc
insl
inc
dec
in
cmp
xor
aam
movsl
xor
adc
jne
fs
rcrl
xchg
cmp
and
pop
xor
add
insb
cmc
or
fbstp
xchg
imulb
or
sub
mull
xor
jnp
mov
sub
daa
fistpll
or
fsubs
aad
xor
cmpsb
or
imul
xor
insb
bound
pop
out
add
enter
fnstcw
lea
jnp
aad
jno
sub
popf
pushf
pusha
mov
dec
cmp
test
hlt
mov
cmp
cmp
add
lods
dec
xor
dec
je
mov
repz
add
dec
bound
sarb
dec
dec
inc
aad
out
testb
push
xor
bound
cmpsl
xchg
cmp
cli
mov
test
shrb
adc
insl
inc
popf
push
repz
adc
pop
mov
outsb
rcr
negb
xor
cmc
push
pop
cmc
pushf
cmp
push
lret
fimuls
pop
popa
xor
lahf
cmpsl
into
mov
sbb
lods
push
setge
and
shrl
cwtl
jo
shr
loopne
je
je
mov
sub
mov
lea
loop
test
pop
es
out
sub
int3
cwtl
add
stos
sti
xchg
leave
leave
insl
jmp
ds
jb
pop
out
sub
shrl
mov
insb
xchg
inc
mov
out
and
sbb
xchg
test
fldl
jg
mov
jecxz
out
sbb
sbb
shlb
push
clc
decl
and
clc
xchg
cmp
cmp
cltd
into
shrb
cmpsb
mov
xor
ficoms
cmp
mov
ret
aam
jle
int
arpl
stc
stc
pop
test
rolb
push
adc
mov
push
xor
jb
cmc
mov
dec
sbb
add
push
or
ret
enter
ficoms
lea
and
inc
adc
fucomip
pop
xchg
stos
cmp
dec
dec
add
or
out
sub
and
xchg
out
jnp
cli
mov
push
sahf
mov
pop
scas
xorb
xchg
jmp
cltd
icebp
pop
pop
and
out
pop
cmp
inc
ds
cwtl
adc
jmp
loopne
mov
or
sahf
fsubs
sarl
jae
cmp
and
jle
in
int3
and
inc
das
and
jp
push
mov
cltd
push
adc
out
imul
icebp
mov
cli
pop
cmp
dec
pop
pop
nop
fcomip
and
loope
je
aam
mov
mov
or
dec
or
push
sbbl
push
aaa
leave
cmp
xchg
sbb
repnz
xchg
adcb
cs
pop
pop
int
mov
mov
pop
mov
test
repnz
adc
sarl
jnp
inc
arpl
inc
lcall
or
fisubl
mov
in
xor
insb
out
or
dec
aad
and
aaa
or
faddl
mov
jge
jo
and
inc
xchg
aam
out
adc
fstps
lret
inc
jae
cmp
sub
jbe
xor
adc
in
mov
ds
inc
pop
sub
aam
jne
cmp
and
push
sub
pusha
daa
cmp
and
mov
rorl
insl
xchg
repnz
inc
ljmp
push
int3
dec
inc
hlt
iret
inc
inc
mov
add
push
jp
sub
out
outsb
mov
xchg
fisubl
mov
rorl
xor
xlat
pcmpgtb
mov
stc
ljmp
mov
jno
xchg
or
decl
stos
sub
xor
and
jbe
outsl
xchg
mov
mov
aaa
int3
fmull
pushfw
int3
repz
mov
dec
inc
cs
data16
jl
loop
cmp
mov
aad
aad
push
inc
ja
xor
test
mov
outsb
ret
ja
iret
sub
dec
xorl
cmpsb
js
and
in
mov
mov
data16
jecxz
lds
xchg
pusha
repnz
pusha
xor
insb
add
leave
mov
jb
mov
mov
aaa
nop
gs
adc
rorl
std
test
das
pop
adc
dec
arpl
pop
sub
dec
sub
push
out
mov
rcll
pop
lret
lahf
into
mov
ret
ja
mov
lods
outsb
push
dec
add
fistps
xchg
sub
out
js
pusha
xchg
ljmp
jp
sub
jecxz
lods
mov
dec
dec
subl
xlat
push
add
mov
or
test
out
pushf
mov
pop
xchg
daa
sub
popf
mov
cmp
es
pop
lahf
movsl
int3
pop
rorl
jo
pop
bound
in
pushf
pusha
movsl
test
pusha
push
jl
je
push
inc
xor
push
inc
aad
je
rorl
out
xor
xor
arpl
insb
xorb
adc
notb
daa
sub
ret
cmpb
gs
or
dec
jg
cmp
sbb
push
xor
imul
insl
loopne
add
push
pop
mov
push
mov
mull
sub
movsl
mov
adc
les
mov
loopne
movsb
pop
jp
aam
sti
dec
push
jb
scas
outsl
inc
mov
adc
popa
push
imul
sub
cmp
repz
mov
and
out
dec
xchg
jmp
jae
jp
shufps
jb
or
and
jno
lds
xor
cmp
test
push
jge
cwtl
push
loope
add
fnstsw
in
jp
xorl
cmpsl
or
imul
inc
pop
test
mov
pop
nop
mov
jno
jno
jmp
incl
pop
jmp
shlb
rcll
insb
icebp
xor
xor
add
insb
mov
push
cmpsb
xchg
xor
stos
pop
and
push
jl
aam
lock
mov
sbb
inc
jmp
xchg
adc
and
iret
sbb
sbb
pop
push
jne
js
js
sub
cs
mov
cld
lods
lret
popa
xchg
and
push
rorb
rorl
clc
mov
jo
arpl
ss
pop
lret
inc
push
xchg
icebp
fimuls
lahf
test
xchg
loopne
imul
stos
jnp
jge
adc
addr16
sub
loop
lea
filds
pop
test
add
mov
lods
xchg
outsb
jmp
pop
xchg
lahf
lds
sub
add
fbstp
cmc
cltd
or
fdivs
inc
ss
icebp
mov
add
std
roll
daa
mov
fwait
dec
mov
mov
pop
clc
inc
lds
xchg
popa
mov
add
jmp
addb
mov
xor
mov
adc
mov
repz
xchg
mov
and
negl
mov
inc
loop
fcoms
fldt
sub
add
inc
scas
insl
push
jl
ja
jle
iret
pop
push
adc
shll
in
pop
mov
cmpsl
and
ret
out
mov
ret
out
iret
into
jns
fmuls
sub
cmp
mov
push
or
mov
lret
fdivrp
stc
mov
push
imull
imul
inc
dec
in
xchg
pop
sti
shlb
loopne
adc
cmpsb
push
mov
fisttpll
xor
cmp
mov
push
push
mov
nop
pop
call
ret
lahf
jl
push
pop
fstl
jp
rcrb
dec
leave
mov
mov
lahf
push
sub
out
jle
mov
inc
leave
mov
test
mov
xor
cmpsl
sub
jg
jne
xchg
cmp
dec
lock
jnp
adc
inc
pop
repnz
mov
sbb
add
adc
inc
out
repnz
dec
adc
xor
jnp
and
ja
and
lods
sub
aas
push
ror
mov
nop
cmp
aad
push
or
rorl
inc
mov
or
popa
bound
decl
dec
push
pusha
ljmp
or
mov
jnp
mov
test
popf
add
pop
inc
movsl
mov
das
js
into
clc
icebp
testb
xlat
test
sub
or
lods
lret
aas
pop
aad
sar
push
push
in
dec
gs
pop
mov
xchg
mov
push
and
out
movsb
clc
xchg
inc
lods
mov
jb
mov
xor
or
outsl
and
xchg
mov
test
cmpsb
fdivl
mov
push
push
push
mov
xlat
sub
dec
dec
sbbb
cli
jecxz
add
and
fcompl
mov
jecxz
xchg
ret
xchg
les
repnz
jecxz
outsb
push
aaa
cld
sbb
scas
into
pop
and
mov
loope
and
insb
shll
or
fst
xor
in
xchg
push
mov
movsb
dec
fldenv
fwait
inc
jle
xchg
std
pop
add
arpl
les
inc
dec
push
in
adc
dec
sahf
jl
lret
loopne
mov
leave
pop
js
out
ret
enter
clc
adc
jo
in
xchg
sbb
cmp
xchg
cmpsb
repnz
xor
fdivr
mov
ja
and
outsb
dec
mov
inc
cmp
xor
push
xchg
ds
cmc
push
sbbl
clc
movsl
neg
imul
in
mov
testl
pop
ss
adc
inc
pop
xchg
std
and
adc
xorb
enter
aam
sub
jl
push
repz
sub
aam
lea
jns
pusha
xchg
pushf
mov
int
pop
pop
dec
xor
sub
gs
lret
in
pop
bound
mov
call
cmpsb
push
rclb
push
loopne
mov
test
pop
xchg
bnd
std
int
lods
fidivs
and
add
mov
fistpl
push
ljmp
jne
mov
xchg
jbe
xor
adc
dec
cltd
mov
insl
mov
mov
outsb
jb
jl
jg
out
iret
push
xchg
cli
pop
adc
mov
mov
jle
inc
in
cmc
sbbb
dec
sub
gs
push
ret
mov
outsl
adc
mov
in
push
push
gs
sbb
das
xchg
mov
xor
iret
jne
scas
xchg
lods
xor
push
nop
insb
mov
in
lret
xor
sbb
sub
push
outsl
fidivl
mov
dec
insl
ljmp
cmpsb
xchg
jno
in
fidivrs
sti
add
mov
xchg
mov
dec
lock
ror
ret
push
shrb
cltd
sub
loope
push
mov
lods
xchg
jo
inc
out
test
push
adc
bound
jl
mov
aam
les
mov
mov
pop
iret
loop
mov
inc
mov
sbb
cmpsl
push
mov
cmp
pop
mov
je
test
add
imul
mov
enter
xor
mov
xor
push
push
push
je
fwait
add
add
dec
imul
dec
je
imul
or
inc
call
fs
mov
cs
mov
jne
sub
movhlps
insb
add
repz
push
popf
pop
push
adc
jle
vaddsd
inc
sub
push
movsl
movsl
flds
rcrb
push
lret
mov
test
and
loopne
and
insb
call
arpl
sbb
add
ljmp
push
jne
xchg
loopne
test
adc
test
inc
mov
shr
mov
xor
xor
adc
dec
sub
shll
ret
call
mov
pop
dec
mov
pxor
fdivl
mov
sbb
xlat
push
lret
sub
and
inc
cmpsl
jp
ss
ds
cmp
nop
aas
push
je
xchg
addb
in
jg
push
pop
inc
mov
in
fidivrl
les
ljmp
inc
addb
outsb
leave
push
loopne
ret
lahf
repz
lret
xor
inc
dec
pop
subb
mov
push
cmp
jg
daa
mov
inc
dec
inc
inc
fistl
inc
aas
arpl
pop
test
les
jmp
fadds
out
cmpsb
inc
mov
dec
jmp
bound
push
test
ss
sbb
mov
mov
pop
aad
xor
into
jnp
jb
fstpl
test
mov
xchg
sub
fdivs
inc
ror
sub
pop
mov
add
pop
outsb
pop
mov
inc
push
push
test
in
pop
mov
mov
and
add
int3
loopne
mov
dec
ffree
and
arpl
loope
fs
stos
out
dec
jg
je
js
aam
arpl
int
dec
inc
sbb
aad
stc
push
mov
sahf
into
push
mov
nop
dec
push
xchg
or
je
jge
mov
and
lahf
enter
pop
sbb
lods
movsl
andl
mov
xchg
cmpsb
dec
mov
lea
add
sahf
push
xor
out
mov
adc
rolb
out
les
fnsave
jle
dec
daa
and
loopne
or
and
cmpsl
xchg
stos
jnp
in
sahf
leave
imul
jbe
lret
decb
jle
mov
cmpsl
lds
mov
cmp
pop
mov
xchg
inc
inc
les
loopne
pop
or
pop
mov
dec
and
int
std
lahf
mov
fimuls
adc
out
adc
out
lahf
loope
sbb
or
mov
add
push
add
sahf
pop
mull
adc
addr16
mov
jp
sti
jle
pusha
out
xor
cmpsl
mov
pop
mov
xlat
iret
ds
mov
adcb
mov
lds
test
les
adc
cmpsl
loopne
outsl
stos
shrl
lock
sahf
fiadds
dec
xor
movsl
sbbb
inc
dec
iret
jns
sbb
or
adc
jne
dec
fisubs
out
in
push
std
dec
movsb
dec
mov
movsb
xchg
cmp
lds
repnz
imul
push
int3
cmp
out
sub
xor
mov
loop
jbe
gs
xor
sbbl
or
lock
ss
cmp
sti
arpl
lret
loope
lods
test
ja
hlt
iret
xchg
pop
mov
or
sub
mov
rcl
push
mov
add
pop
pop
scas
push
sub
call
imul
xor
xor
pop
jle
mov
les
test
jp
xor
cmpsl
stos
cmp
lds
je
cmp
int3
xchg
in
fs
xor
dec
pop
stc
dec
shl
and
stos
shr
sub
movsb
add
cld
fnstsw
std
aad
dec
fadds
jb
dec
xor
ret
stos
mov
fs
fcmovu
fsubl
xor
int
test
negb
push
mov
xor
ja,pt
aad
cmp
jns
js
in
mov
out
or
out
clc
cmp
xchg
inc
lock
stos
insl
push
and
push
xor
mov
mov
jge
mov
adc
pop
les
nop
sbb
cwtl
mov
add
xor
cmpb
repnz
test
or
jo
ficoms
addl
arpl
xchg
xchg
mov
icebp
cmp
aaa
and
movl
push
sub
cmp
jnp
icebp
adc
ja
into
popa
pusha
push
push
xchg
push
pop
dec
add
inc
je
movsb
adc
xor
imul
insl
nop
psubusw
push
ljmp
gs
mov
sbbl
cmp
mov
jg
jl
roll
test
or
add
shll
lcall
mov
outsb
pop
push
scas
inc
mov
mov
repnz
xor
inc
and
andnps
adc
xorb
movsl
lods
rcll
in
std
sahf
cmp
xchg
fcmovb
push
jmp
fdiv
and
mov
or
and
xchg
imul
call
in
sahf
orb
sbb
sahf
xor
popa
and
cs
sub
cmp
loop
mov
ficompl
adc
in
pop
jecxz
inc
jb
jle
mov
imul
jns
call
or
jle
inc
jno
mov
ja
mov
lods
aaa
sbbb
mov
insb
scas
pop
dec
add
sahf
mov
mov
movswl
hlt
es
mov
or
std
inc
pop
adc
mov
push
sub
aas
push
loope
adcl
mov
mov
lcall
xchg
outsb
add
mov
std
and
mov
movsl
mov
lret
fiaddl
cmp
cmpsb
aas
mov
mov
or
sbb
out
sti
in
mov
shll
sbb
and
push
add
pop
inc
jnp
dec
mov
and
push
jbe
inc
faddl
cmp
mov
mov
repnz
or
adc
xor
js
add
push
add
cmpsb
inc
cmp
xor
lcall
xor
aam
pop
gs
xorb
icebp
aaa
scas
jb
shll
lcall
iret
adc
inc
aaa
jecxz
pop
inc
mov
adc
mov
push
xchg
clc
bound
push
dec
lods
lahf
out
mov
inc
imul
jl
dec
xchg
repnz
pop
jmp
ret
mov
sub
pop
jmp
aaa
jmp
jge
nop
stos
lret
aas
btc
in
je
push
dec
push
cmp
dec
jbe
sbb
jmp
test
sarl
scas
into
adc
insl
mov
mov
sbb
and
out
lcall
and
lret
rcrb
loop
dec
aaa
cmpsl
icebp
inc
jecxz
jecxz
sbb
out
idivl
inc
mov
push
das
insb
hlt
push
jno
inc
jl
dec
jmp
cmpl
add
or
sbb
dec
inc
cmpsl
ljmp
xchg
popf
fstpt
mov
out
cmp
cmp
mov
dec
mov
jl
out
das
inc
test
pop
mov
mov
negl
loope
push
mov
leave
xor
loopne
in
int3
iret
or
test
push
shl
cmpsb
pop
push
pushf
stos
mov
mov
push
dec
push
repnz
cmp
add
xchg
jns
lret
mov
daa
xchg
movsb
out
pop
aaa
nop
cmp
movsb
inc
cwtl
je
inc
loope
sbb
sub
or
ret
hlt
sbb
mov
call
xchg
and
pop
push
loopne
test
imul
in
sub
cs
inc
das
push
sub
mov
xlat
jo
mov
callw
fs
xor
mov
or
add
sbb
ja
hlt
jge
popa
sub
ret
in
sub
imul
je
lahf
mov
test
mov
imul
mov
lock
ds
ljmp
xor
xorl
push
or
xchg
rol
scas
rcrb
int3
sahf
pop
xor
leave
insl
inc
shrl
xchg
sub
mov
loop
rcrl
repz
xor
jecxz
and
sub
pop
aam
pop
rep
lcall
cmpb
in
push
scas
or
rcrl
mov
pop
aad
add
in
jecxz
lock
jae
nop
decl
ja
mov
shll
jle
imul
or
mov
inc
data16
pop
add
push
lea
sub
inc
mov
or
xor
mov
in
sub
stos
adc
scas
loope
enter
divb
cld
jne
xor
pop
cmpsl
ds
or
mov
out
mov
and
inc
and
xchg
das
into
mov
popl
es
clc
leave
cmp
inc
lock
jecxz
mov
repz
jae
hlt
popf
add
pop
pop
inc
sub
push
xlat
popa
or
sahf
mov
sub
xchg
inc
mov
shll
sub
adc
sub
fs
push
add
clc
pushf
jmp
inc
daa
not
ja
jo
mov
dec
xchg
andl
sbb
loop
inc
in
sbb
and
xor
mov
mov
aas
dec
xchg
fcmovnb
or
aam
push
xchg
shl
daa
cmp
xchg
in
or
stc
xchg
jmp
enter
lret
daa
cwtl
sbb
rolb
xchg
push
mov
xor
mov
popa
push
scas
add
dec
loopne
xchg
sbb
daa
or
mov
mov
rcl
in
fimuls
mov
xor
repnz
jmp
out
ss
sub
pop
jno
push
pop
mov
add
pop
push
out
jmp
and
cmc
mov
fcoml
lcall
je
mov
and
jecxz
sub
ret
xchg
dec
push
fmuls
mov
push
push
test
or
int
mov
push
fptan
lret
movsb
ret
es
and
xor
pushf
cld
fwait
jl
jp
mov
jns
jp
sbb
jne
inc
mov
xchg
inc
push
ret
adc
fs
fwait
lret
push
repz
pop
pop
mov
lea
xor
fs
pop
insl
mov
ja
sub
outsb
fmull
repz
popa
inc
add
in
push
push
test
jb
jne
aad
jne
cmp
shl
repnz
and
lret
idivl
pusha
addr16
or
into
out
lahf
mov
xlat
push
mov
xchg
jp
test
xchg
inc
sarl
rcrb
sti
adc
lret
popa
mov
fwait
jp
cmp
rolb
jno
sbb
loop
je
add
jge
adc
add
cmp
jge
xlat
sbb
imul
in
or
jmp
andl
mov
shlb
insb
mov
popa
dec
pop
and
iret
and
ljmp
rclb
sub
adcl
jnp
daa
gs
popf
hlt
push
mov
pop
mov
sbb
clc
loop
sbb
cltd
mov
cltd
daa
or
mov
mov
lea
push
dec
adc
or
pop
lods
xor
push
cmp
sti
cs
push
insl
maxps
and
xor
inc
xchg
fcoml
shrb
mov
cmp
lock
shll
mov
xor
filds
xor
mov
lods
cli
mov
int
shll
scas
nop
mov
lods
jmp
jne
repnz
ret
popf
fcmovbe
ja
lock
outsl
dec
jle
vdivsd
xor
test
mov
mov
xchg
fistps
cltd
lea
dec
jne
jmp
or
rcrl
rorb
int
lret
cmp
sub
mov
xchg
xchg
dec
dec
dec
and
cmp
jecxz
js
jmp
pop
pop
outsb
fisubrs
inc
inc
inc
lret
mov
and
imul
xor
inc
xchg
fidivrs
push
push
adc
lahf
or
adc
je
cmp
push
jmp
dec
outsl
jbe
leave
mov
and
je
dec
adc
inc
subb
test
mov
pusha
mov
sub
lds
dec
push
cmp
call
dec
enter
arpl
imul
aas
mov
adc
int3
cmp
push
sub
out
or
pusha
add
test
lea
pop
mov
push
scas
and
push
adc
rclb
pop
sbb
mov
cli
stos
push
andl
fwait
jo
jge
shlb
idivl
xchg
adc
pop
lock
add
inc
add
mov
js
mov
fs
sub
xor
inc
stos
mov
fs
sub
jb
cld
pop
jae
dec
pop
cmc
es
add
mul
cld
jo
adc
push
xor
mov
inc
daa
fnstcw
mov
js
mov
insb
icebp
push
mov
adc
dec
push
or
fistpll
xor
or
rorl
lods
jnp
std
mov
hlt
movsl
imul
sub
fisttps
pop
cmp
movsb
pushf
xchg
jae
lds
cmp
pop
or
mov
jge
inc
dec
push
push
and
push
fsubl
pop
gs
xor
mov
mov
jb
inc
inc
xchg
out
cmp
inc
jnp
paddsw
jecxz
and
xchg
pop
pop
mov
jne
mov
stc
cmp
jo
push
jmp
je
pop
mov
push
popa
ss
cld
and
adc
jp
pop
sarl
mov
xorb
mov
hlt
and
cmp
insb
rorl
xchg
push
jne
xor
adc
pop
fistpll
push
hlt
into
daa
jg
xor
fsubl
bound
push
pop
mov
adc
cmpsb
arpl
pop
out
xor
repz
gs
ret
mov
test
arpl
cmp
jo
jne
inc
mov
sahf
lods
xchg
sub
mov
fisubrl
cmp
stc
das
push
sbb
dec
inc
scas
les
push
in
shll
or
test
xchg
add
sbbl
mov
lret
sahf
lcall
movsb
jae
ljmp
inc
clc
xchg
lahf
mov
xchg
or
lods
dec
cmp
lahf
mov
cmp
jno
add
comiss
leave
mov
leave
ficompl
push
pop
cmp
inc
inc
rolb
ljmp
ds
jne
jo
mov
push
cmp
stos
xchg
fdivr
pop
shlb
jns
inc
pushl
stos
sar
push
lea
call
mov
jg
inc
push
or
add
fisubs
mov
cmp
movb
dec
sahf
mov
push
movsl
test
push
mov
enter
sahf
test
xchg
mov
sub
dec
pop
stos
aas
inc
and
sub
sarb
cmp
ljmp
and
dec
dec
cltd
fadds
das
push
add
enter
dec
dec
dec
mov
stc
ljmp
xchg
mov
adc
dec
lods
cmp
sbb
jl
mov
cltd
mov
setae
popa
and
sbb
or
xchg
sub
dec
push
pop
add
out
js
sbb
sbb
adc
shll
cmc
out
stos
mov
cmp
fcomps
add
or
jecxz
test
sbb
out
cmp
sbb
out
int3
lea
sub
cwtl
and
nop
dec
and
xor
mov
lock
push
xchg
inc
mov
adc
ja
arpl
mov
and
cmp
incb
iret
inc
pop
and
dec
stos
xchg
mov
mov
test
or
mov
push
push
jno
mov
js
mov
pop
aas
xor
add
dec
mov
sar
or
aad
rclb
stos
shrl
mov
decl
sbb
mov
aaa
push
hlt
mov
fmulp
das
imul
mov
scas
mov
jno
pop
jne
mov
stc
push
pop
jp
xchg
push
fisttps
push
adc
cmp
mov
cli
les
or
mov
aad
mov
repz
sub
inc
jg
shlb
sbbl
lods
cli
imul
addb
sub
in
mov
loope
outsb
sbb
inc
pusha
jmp
add
xchg
imul
pop
std
jb
pop
xchg
pop
xor
mov
add
mov
add
mov
inc
add
inc
psubd
rol
inc
xchg
inc
dec
ss
and
fisttpl
stos
leave
ss
xchg
push
les
xchg
dec
dec
sbb
ret
cs
scas
loop
and
pop
cmp
cltd
push
mov
insl
push
sub
mov
mov
cmp
jle
pop
jecxz
pop
loope
jle
subl
dec
out
dec
and
xor
push
jl
inc
cmp
sub
add
adc
dec
lcall
ret
add
cmp
cmpsb
lea
nop
mov
cmp
loope
fisubrs
pop
mov
cs
es
mov
xchg
cmp
iret
loop
dec
mov
imul
sub
mov
xlat
subw
repnz
fdivr
int3
in
pop
inc
pop
inc
bound
mov
and
inc
inc
or
dec
out
aad
add
xor
ret
or
sbb
sub
mov
and
and
dec
call
jae
and
movsb
mov
mov
sahf
sbb
out
pop
inc
in
jne
add
or
or
data16
scas
pop
js
dec
stos
sbb
lret
scas
pushf
mov
adc
insb
arpl
test
jo
adc
jl
je
fisubl
jnp
sub
loopne
or
fdivrl
pop
lods
push
mov
xor
sub
or
jecxz
mov
jl
and
xor
and
iret
push
stos
cwtl
sbb
loopne
or
pusha
rcll
xchg
aas
push
cmpsl
xchg
lds
ljmp
add
cwtl
cltd
sub
add
sti
xor
sbb
mov
or
daa
jns
ljmp
pop
xor
movsb
outsb
loop
jmp
out
mov
es
and
mov
or
repnz
ret
std
xchg
decb
cmp
pop
arpl
add
adc
adc
roll
adc
incl
fsts
pushf
push
into
out
push
decl
js
push
push
adc
pop
cmp
dec
dec
dec
loope
sub
xor
lock
push
cmp
scas
xchg
lret
cmpsb
inc
and
mov
cmp
mov
loop
or
imul
cmpsb
js
add
mov
mov
movsl
repz
aad
cmp
push
andl
mov
add
lcall
mov
and
shr
mov
ds
mov
xchg
aas
jae
outsb
je
dec
bt
xchg
hlt
mov
inc
fstpl
mov
mov
test
adc
insl
mov
sub
mov
mov
and
mov
sub
and
mov
ja
mov
daa
adc
mov
dec
or
and
push
in
mov
rclb
jecxz
mov
stos
xor
mov
out
xchg
fcompl
xor
mov
and
and
and
int3
orl
add
rcl
push
mov
mov
lods
stos
bnd
sub
pop
inc
movsl
pop
cli
push
inc
ds
mov
neg
cmp
dec
cs
pop
push
js
popf
stos
mov
mov
dec
xor
test
mov
mov
dec
orl
fs
sbb
gs
dec
lcall
or
xchg
lods
adc
add
inc
push
shrl
loopne
rclb
adc
fs
call
pop
sbb
imul
or
mov
xchg
sub
imul
pop
push
nop
xchg
mov
add
ljmp
aad
sbb
or
xchg
daa
and
out
outsb
mov
cmp
xchg
add
xchg
cmp
jmp
out
out
push
mov
mov
jg
lods
sub
out
lock
aad
inc
imul
or
xchg
or
or
adc
bound
adc
fsubp
ljmp
cld
xchg
mov
dec
pop
push
pop
cmp
mov
add
pop
or
rclb
mov
dec
xchg
inc
popf
jecxz
sub
popf
sbb
insl
jmp
rolb
mov
xor
inc
fbld
xchg
lock
mov
add
lds
cmp
das
or
or
lret
call
mov
dec
push
cmp
add
imul
jmp
fs
ljmp
jns
add
fidivrl
xor
ljmp
daa
cmpsl
cltd
push
dec
in
aaa
push
cmpsl
jmp
xor
rcrb
test
stc
aad
jbe
les
mov
adc
fsqrt
push
int3
push
into
es
and
dec
ret
cmpsl
push
xchg
xchg
push
add
shll
hlt
push
xchg
fldenv
outsb
add
test
into
out
arpl
sub
bound
cmpsl
lret
inc
mov
lds
mov
cs
out
pushf
dec
iret
dec
sbbb
adc
cmp
sbb
pop
cltd
mov
ret
xchg
mov
rcrb
push
sbb
sbb
mov
roll
cwtl
stc
dec
mov
sti
jp
nop
cwtl
dec
push
push
inc
add
call
and
or
das
jno
mov
mov
push
jge
clc
iret
add
sbb
jbe
pop
push
es
test
test
mov
cld
dec
sub
adcl
mov
xchg
sub
int3
jno
ret
sbb
sub
gs
mov
mov
cltd
cmp
pushf
sbb
stos
fcmovb
rorl
xchg
stos
jae
cwtl
ret
hlt
js
enter
jae
ds
dec
cmpsl
clc
movsb
xlat
cmc
or
xchg
mov
add
sub
out
sarl
lret
mov
add
into
pop
push
xchg
sbb
cmp
fsubrs
or
lcall
ret
and
sbb
mov
test
cmp
mov
repnz
das
scas
xchg
ds
sbb
aad
push
icebp
outsb
mov
fimuls
mov
enter
movsb
push
aaa
xchg
int3
fsubrl
orb
cmc
push
push
mov
jg
adcb
nop
insl
rcrb
ffreep
out
mov
mov
sbb
push
pusha
xchg
cmpsl
xchg
mov
inc
les
icebp
pop
push
mov
in
cmp
out
data16
insb
dec
cwtl
mov
cmpsb
hlt
in
test
adc
jb
pop
aad
outsb
jae
inc
je
outsb
addr16
inc
jmp
imul
leave
iret
popa
push
test
mov
cmp
xchg
mov
pop
add
push
imul
rcrb
outsb
das
adc
xchg
cs
daa
pop
cmp
mov
stos
cmp
cmpb
jle
mov
push
frstor
jae
xchg
and
xchg
addr16
sub
movsl
les
dec
mov
cmpsl
mov
adcl
pop
dec
cmp
dec
ret
mov
add
or
repz
xor
push
push
xor
sbb
hlt
adc
fists
pop
or
add
bound
stos
dec
jg
cld
das
out
in
mov
inc
add
test
jae
add
outsl
std
xchg
mov
aas
mov
shll
add
xor
cltd
ja
mov
gs
ljmp
jbe
add
xchg
aas
repz
aam
cmp
and
sbbb
push
stc
push
hlt
subb
pop
push
mov
jmp
mov
mov
jmp
xor
sub
sbb
sbb
hlt
lahf
or
sbb
inc
dec
in
mov
add
push
mov
lock
loop
popf
aaa
xor
dec
xchg
hlt
push
dec
cmp
aam
pop
dec
pop
mov
push
loope
cmp
push
mov
xchg
loope
pusha
mov
jl
dec
ret
lcall
shll
repz
and
popa
ljmp
into
xor
scas
sbb
clc
hlt
sahf
pop
mov
aam
mov
jb
mov
mov
inc
push
sti
jmp
loop
mov
and
fwait
inc
pop
int3
push
xchg
mov
inc
mov
mov
inc
nop
xor
sbb
pop
pop
inc
sbb
push
sbb
xor
scas
push
mov
pop
rcl
out
leave
pop
pushf
push
xchg
pop
or
lret
push
sarl
push
mov
dec
sbb
lock
xchg
popa
outsl
cmp
insb
cmp
int
xor
push
mov
xchg
or
jecxz
into
hlt
xorl
xorl
push
xor
xor
jne
movsl
movsb
leave
jecxz
jns
cwtl
fstpl
scas
add
cltd
add
mov
xor
aad
outsb
sbb
push
pop
mov
sar
cmc
imul
ss
dec
push
add
jnp
add
mov
iret
stc
test
fbld
cli
push
movsb
add
cwtl
xlat
mov
sti
jno
push
subl
dec
push
push
xchg
loopne
rclb
cmp
push
push
es
aas
movsl
mov
scas
je
inc
sarl
inc
add
ret
aas
and
xor
or
inc
outsl
std
xor
sbb
es
fdivrl
pop
in
add
lods
adc
or
loope
orl
cmp
or
inc
or
sahf
and
push
ljmp
aas
addb
out
xchg
scas
dec
push
jl
ljmp
fistl
out
ficoms
lods
dec
jae
or
cli
mov
clc
pop
jmp
mov
cmp
mov
rclb
enter
push
aad
xchg
xor
push
data16
adc
ret
jecxz
and
cmp
xchg
sahf
sbb
ret
loopne
cld
add
push
cli
pop
andl
mov
cmp
aam
ret
in
adc
movsl
js
cltd
or
fdivrs
sub
sarl
pop
ret
dec
inc
sub
jb
lea
div
inc
inc
sub
cmc
repnz
mov
cmp
push
xchg
dec
fs
in
pop
addr16
add
stos
sub
insl
pop
clc
mov
mov
iret
pop
xchg
mov
cltd
mov
mov
mov
jns
shrl
out
pop
inc
pop
and
arpl
or
pop
push
cmp
lock
pop
and
push
cld
orb
out
js
inc
lds
sbb
pop
pop
fisttps
nop
in
cmp
mov
addb
and
xor
arpl
aas
in
or
xchg
shrb
and
es
mov
rolb
popf
xor
arpl
and
mov
notb
mov
ret
and
stos
out
adc
jo
jge
jmp
dec
cmp
xchg
movsb
ja
xor
sub
pop
shll
cmp
fadds
xchg
cmc
insb
jmp
das
sbb
dec
test
pusha
pusha
movsl
mov
andl
and
inc
sub
inc
mov
fstl
fsub
js
push
pop
xchg
fsts
lret
enter
pop
mov
test
and
lds
cmpsb
mov
adc
fwait
mov
stos
lcall
or
xor
enter
imul
inc
int
mov
je
outsb
mov
subb
cld
lcall
add
jne
shl
dec
xchg
rcrl
fsubrl
shll
cmc
mov
xor
mov
mov
out
mov
js
fdivrl
mov
repz
push
sahf
mov
inc
les
sti
adc
mov
rolb
mov
mov
mov
inc
int
push
popa
mov
sbb
in
sbb
jae
daa
addl
out
cmc
or
call
cmpsl
xlat
outsl
cmp
lcall
loope
mov
inc
pop
jb
jg
pop
fwait
dec
xlat
xorb
adc
jp
lock
mov
lds
loopne
bound
dec
popa
movsb
sbb
aaa
jnp
mov
xlat
xchg
jno
mov
ljmp
or
sub
pop
mov
stos
sub
psubusw
mov
das
add
pop
repnz
mov
add
lahf
shl
adc
sti
in
stc
into
xor
test
cmp
mov
rorl
aas
jae
cmp
sub
push
inc
insb
jo
test
add
or
adc
cmpsl
sbb
mov
xor
and
mov
xlat
test
lock
imul
push
fnstcw
jae
jge
cwtl
out
leave
dec
push
inc
mov
and
or
stc
sbb
sub
xorb
mov
sub
dec
and
mov
sub
test
dec
xchg
je
and
das
iret
aad
sahf
test
repz
mov
jl
arpl
mov
dec
es
cmp
jbe
jb
rol
jb
push
rcrl
cwtl
shrb
lds
xor
gs
inc
sbb
sti
jbe
aam
cltd
cmp
push
out
fnsave
inc
mov
cltd
in
imul
cmp
or
jo
inc
jle
xchg
jge
dec
lret
mov
or
lahf
icebp
in
scas
pop
cmp
jle
ja
sbb
push
cld
xchg
ret
cs
xchg
pop
decb
pop
ja
xlat
pop
shlb
jnp
aas
cmp
sti
sti
ret
stos
cmpsl
push
into
mov
fcomps
gs
shlb
xchg
mov
inc
sti
int3
push
fbstp
add
mov
adc
cmp
push
repnz
adc
aam
xlat
dec
mov
gs
adc
daa
inc
adc
mov
pop
inc
out
push
dec
aas
add
cmp
sub
push
mov
dec
cli
cs
lret
mov
unpcklps
jne
lods
roll
ret
test
sub
sti
jne
push
adc
or
pop
rcll
das
stos
mov
cmp
jle
or
ret
jo
jb
mov
testl
mov
data16
push
add
enter
mov
dec
and
pop
aaa
das
cmp
mov
or
push
cmp
mov
std
cmc
jp
push
cmpsl
andl
xchg
stos
cmpsl
cmpsl
lods
dec
outsl
dec
dec
inc
das
dec
cmp
rolb
movsb
in
mov
sbb
leave
das
push
pop
add
sbbl
fsts
mov
clc
bound
xchg
insl
inc
inc
push
adc
xor
push
and
pop
bound
hlt
dec
testl
pop
or
sub
mov
cmp
mov
mov
xchg
lods
dec
add
inc
jbe
cwtl
test
inc
cltd
cli
arpl
cltd
test
out
sbbl
clc
ss
add
xor
add
roll
cmpsl
rcrb
and
clc
bound
inc
or
cwtl
lds
test
popf
dec
orl
movsb
inc
lds
fistpll
mov
fnstenv
add
adc
pop
repz
cli
int
mov
pop
out
es
xchg
push
sbb
xor
xorl
les
in
jl
arpl
testb
add
ds
jb
cmp
shlb
or
scas
test
rcrl
xchg
xchg
inc
cmovo
iret
sbb
jge
mov
ja
enter
icebp
lods
pop
repnz
xor
xor
sub
test
bound
cli
les
add
jo
pop
xchg
rclb
push
daa
popl
inc
popa
lea
cmovl
cltd
xor
cmpsl
mov
ja
cmovne
inc
aas
std
imul
hlt
scas
shrl
and
jp
mov
dec
ret
cmpsb
jb
mov
lods
mov
adc
lock
xor
ds
push
into
test
les
aaa
ss
outsl
xchg
addr16
outsb
or
ja
push
push
push
scas
sub
clc
adc
inc
jno
add
push
ss
cli
outsl
sub
push
lahf
jnp
jmp
mov
testb
decb
lcall
in
test
jo
sub
das
mov
lahf
jmp
xor
inc
mov
mov
pop
add
and
xorb
and
ret
lds
mov
fistpl
ret
jbe
repnz
mov
mov
push
out
test
loopne
adc
in
ror
leave
jo
mov
dec
pop
jecxz
cltd
in
xchg
cmp
int
test
pop
xor
lret
mov
sbb
frstor
xor
inc
imul
sbb
sub
mov
and
loope
sahf
sub
mov
mov
pop
out
sbb
fisttpll
sbb
xchg
jp
xchg
push
addb
push
lea
or
iret
and
cltd
lret
xor
dec
pusha
sbb
jg
sbb
sbb
or
pop
sub
xor
ds
popa
in
mov
dec
mov
mov
in
dec
add
jg
adc
push
sub
adc
xchg
add
mov
pop
ror
cs
lret
mov
or
sti
and
sarb
jb
addr16
outsb
int3
jno
pop
xor
pop
xchg
clc
push
je
je
pop
out
and
cmp
aaa
add
bound
sbb
mov
movsl
dec
ficoml
push
pop
lock
cmp
mov
xor
pop
inc
push
xchg
inc
mov
xor
testl
insb
mov
in
or
sbb
push
imull
lret
cmp
xchg
out
xor
mov
xchg
mov
dec
cmp
mov
jb
dec
std
fbld
and
inc
cli
ffreep
mov
ror
mov
add
inc
sarb
add
dec
pusha
jp
push
cmp
xchg
or
adc
mov
jge
fmull
ficompl
mov
fidivl
imul
adc
jge
xchg
call
add
adc
push
and
insl
and
cmp
jne
sbb
stos
dec
mov
jecxz
shrb
shrl
or
pop
or
cmp
push
inc
sub
inc
sbb
mov
mov
shlb
out
repnz
xor
test
and
ffreep
sbb
mov
jmp
ret
shr
mov
jg
dec
adc
stos
jp
or
adc
int3
cltd
cmp
jmp
leave
cmc
sub
adc
push
pop
mov
cld
inc
daa
sub
or
pusha
dec
movsb
mov
inc
repnz
lahf
cmp
movsb
xor
inc
mov
repz
mov
fs
out
push
add
daa
lock
jl
xlat
in
mov
out
stos
mov
imul
push
or
test
lods
jecxz
popf
pop
mov
xchg
dec
dec
fisubrs
dec
outsb
xor
mov
mov
ror
iret
mov
cmp
mov
in
and
insb
rorl
jo
xchg
repz
pop
pop
outsl
fs
subb
mov
cli
sub
test
xchg
repz
cwtl
mov
popf
lret
fsubl
jle
mov
enter
sbb
pushf
jbe
fbld
cld
aam
and
or
inc
mov
mov
adc
jne
sub
mov
lret
dec
shrl
xchg
icebp
cmc
decl
dec
call
std
fwait
enter
mov
rcrl
jmp
cmp
insb
jle
push
ret
dec
std
pop
sti
fdivl
xchg
dec
out
jg
cwtl
xlat
inc
fistpl
push
stc
or
push
mov
jne
adc
stc
out
mov
cltd
sbb
movsl
std
aaa
pushf
std
imul
xchg
jle
and
cltd
cmp
push
inc
push
xchg
ror
xchg
inc
subb
mov
xchg
scas
mov
shlb
loope
aam
cmp
adc
pop
xchg
pusha
jle
popf
dec
lds
sbb
cmpsl
lock
mov
inc
jno
xlat
lahf
aaa
add
aaa
push
pop
push
push
inc
jbe
sahf
mov
push
add
mov
andl
loop
scas
ljmp
jecxz
or
pop
icebp
adc
inc
xchg
and
ja
out
dec
outsb
int
or
push
push
fs
or
or
imul
push
movnti
lea
mov
adc
mov
jne
jl
xchg
jge
adc
xchg
add
nop
addr16
add
je
inc
sub
jmp
lret
jl
lds
cld
imul
cltd
in
xor
push
testl
push
pushf
cmp
hlt
xchg
cmp
in
push
dec
pop
fistps
sbb
mov
int3
sbb
sbb
lret
daa
push
dec
fisttpll
or
dec
in
sbb
clc
dec
mov
daa
mov
push
roll
cmc
sub
mov
cmpb
notl
xor
test
cwtl
stos
imul
jle
dec
jo
rorl
ds
mov
push
xor
divb
popf
pop
or
js
sarb
int
xor
addr16
cs
pop
jp
addr16
add
mov
pusha
enter
push
stc
xchg
ja
sub
lret
jecxz
push
out
or
push
jae
dec
hlt
mov
xor
icebp
mov
ss
cli
add
xchg
jecxz
dec
xchg
movsb
cmp
mov
js
fisubrl
xor
mov
or
sahf
popa
push
jle
pop
nop
inc
sub
cwtl
or
icebp
jle
lret
push
and
insl
inc
jle
or
jg
popf
inc
into
jg
test
lahf
mov
mov
aas
or
insl
sub
int
aaa
pop
sahf
fbld
nop
mov
loope
and
adcb
cmpsb
cmp
or
mov
lea
xor
ret
rorl
cmpsl
sbb
push
xchg
push
jg
dec
push
cmp
loopne
lcall
movsb
and
inc
lret
adc
pop
ffreep
push
scas
nop
das
xchg
leave
fidivrl
xorb
lods
or
fsubl
out
push
cmp
pop
push
out
rcrl
sub
cld
mov
sbb
clc
sub
cmp
inc
cld
pop
cli
aaa
adc
dec
cmp
jne
iret
and
pop
sti
or
cmc
push
test
incb
cmp
enter
xchg
xor
adc
or
mov
aaa
mov
cmp
popf
push
lea
in
inc
and
or
dec
adc
adc
inc
mov
pop
outsb
xlat
adc
push
pop
mov
and
pop
repz
push
lret
mov
into
push
fcoml
xchg
test
out
xor
push
rolb
in
mov
dec
sbb
jb
sahf
sub
shlb
in
int
shll
push
mov
icebp
or
inc
test
mov
pusha
incl
dec
xchg
inc
pop
arpl
neg
mov
into
push
or
lahf
lea
xor
pop
cltd
xchg
lret
push
inc
repz
adc
pop
xor
sbb
cltd
fmull
loopne
ja
outsb
push
xor
pusha
gs
fsubrl
sbb
and
xor
xchg
stos
pop
test
mov
cli
pusha
shl
jg
mov
xor
lock
fisubl
inc
mov
and
rorb
sbb
pusha
aaa
sarl
mov
sub
xchg
int3
mov
and
adc
cmp
cmpsl
push
es
jecxz
imul
cltd
popf
push
mov
jns
call
test
ss
cmpb
push
fnstenv
sahf
mov
jnp
arpl
sti
outsl
add
je
insl
std
add
cltd
stc
lea
cmpsl
ss
pop
xchg
xchg
xor
mov
aam
add
fsubl
xorl
push
loop
fnstenv
mov
mov
and
adc
cmp
in
sti
dec
pop
subl
pop
arpl
loop
xchg
mov
adc
inc
fistl
inc
dec
xchg
jecxz
rcrl
inc
js
pop
inc
cmpsb
mov
gs
clc
jp
mov
addr16
test
repz
jo
pop
lea
inc
jle
test
xchg
ds
and
cs
push
cmp
push
pop
cmp
jg
fistps
sub
shll
xor
push
lea
outsb
xchg
xchg
nop
xor
mov
add
arpl
or
mov
ja
jge
mov
dec
xchg
rcrl
aad
push
or
pcmpgtd
or
loop
mov
ficomps
add
and
adc
lret
or
nop
sbb
dec
sbb
mov
iret
xchg
sub
mov
sbb
and
ja
ret
lret
mov
fs
dec
mov
inc
mov
divb
insb
roll
cmp
mov
leave
fucomi
mov
xlat
scas
dec
dec
cmpsl
bnd
stos
sahf
add
pop
hlt
inc
cmp
adc
mov
adc
clc
mulb
sahf
arpl
insb
mov
add
mov
add
inc
mov
test
mov
fs
dec
out
jns
fstl
xor
jle
pop
cld
xor
mov
pop
stos
adc
bound
cmp
das
notl
jno
decb
pop
std
push
pop
mov
push
gs
or
shll
cmp
sub
sub
jp
outsl
xor
jg
repnz
int
jne
test
std
mov
mov
mov
xor
mov
jmp
mov
std
daa
lods
outsb
int3
sub
stos
sub
adc
je
dec
mov
subl
mov
jno
xor
xorl
cmp
std
cs
cmpsb
jns
ds
jb
pop
cmpb
cmpsb
sahf
add
jle
mov
fistpll
mov
sbb
adc
lds
pop
imul
cmpsl
out
inc
cmpb
in
out
ret
push
jmp
push
lea
cwtl
repnz
fs
jge
adcl
hlt
shr
sbb
mov
mov
in
fst
sbb
cwtl
imulb
xlat
adc
cwtl
pop
and
mov
test
xlat
scas
pop
dec
push
cmp
cli
mov
jecxz
imul
or
adc
clc
test
cmp
je
rcrb
dec
adc
lret
dec
testb
arpl
scas
cmp
leave
xor
push
je
mov
bound
fs
inc
xor
stos
push
cmc
in
lcall
sti
xchg
add
sahf
mov
push
lahf
and
mov
sbb
ja
subl
mov
rcl
and
shl
arpl
mov
test
sub
lods
inc
imul
inc
cmp
or
push
jle
sbb
push
xchg
adc
jae
add
stc
mov
js
push
neg
test
sbbb
nop
shll
jmp
mov
out
je
scas
cmp
repnz
mov
or
out
sub
out
mov
fidivrs
add
in
movsl
shrl
and
xchg
dec
inc
xlat
stos
dec
xchg
pop
insb
cmc
pop
rorb
jmp
pop
adc
aam
mov
jbe,pt
in
mov
mov
fdivrl
ljmp
xor
es
ss
push
adc
mov
addb
sub
mov
pop
xchg
shrl
fdivl
loope
shl
fsubrl
push
and
addr16
mov
xor
push
cmp
jge
inc
xchg
shlb
hlt
sbb
dec
les
sub
movsl
lds
fwait
rcrl
cmpsl
roll
push
loope
dec
lahf
inc
xchg
std
xchg
lds
jnp
inc
sbb
or
inc
stc
ljmp
mov
mov
addb
jae
jne
or
push
test
adc
inc
add
ret
stc
jle
les
fildl
pop
mov
dec
jmp
pop
fidivrs
imul
mov
jle
adc
adc
cmpb
pop
and
jae
cmp
imul
jge
xchg
mov
insb
test
add
lahf
lods
shl
xor
xchg
fnstcw
add
cwtl
in
je
sbb
xchg
fldt
imul
js
ret
lods
cmpsl
and
outsb
jl
jne
pop
scas
je
fcoms
mov
lret
pushf
loop
movl
lods
jge
loopne
jae
jle
stos
outsb
ljmp
loop
int3
mov
aaa
xchg
inc
into
push
test
addr16
push
mov
popa
mov
inc
sub
adc
lods
ja
jle
or
ds
adcl
sub
mov
aam
mov
scas
test
mov
and
jne
scas
aas
add
insl
push
addr16
cmp
cmp
xchg
mov
popa
ret
cmpsb
pop
imul
xchg
faddl
push
inc
lods
out
pop
push
movsb
push
ja
cmp
sbb
mov
data16
jnp
jle
es
stc
bound
sub
bound
and
in
dec
stos
fmull
stc
scas
out
ret
push
jo
inc
test
data16
popf
orl
inc
xchg
call
add
cmpsb
sub
cmp
mov
sub
jle
popf
sub
rolb
into
dec
pop
xchg
or
xchg
xchg
int
orps
out
inc
test
xor
ds
std
push
sub
sbb
aaa
dec
ss
jns
jno
lahf
sbb
ljmp
je
into
jo
les
adc
adc
mov
shll
pushf
inc
mov
fsubrl
pop
push
loope
sahf
or
and
ss
dec
jle
jmp
fbstp
sti
negb
pop
sub
jle
cmp
xchg
cli
lods
sti
sbb
lea
repnz
inc
fwait
or
mov
insb
movsl
in
jno
push
rclb
pusha
out
push
popa
cltd
testb
inc
fnstenv
int
int3
pause
inc
lock
ja
addr16
adc
arpl
xchg
cmpsb
lret
dec
repnz
popa
mov
notl
lret
nop
mov
cwtl
mov
rolb
xorl
scas
loop
mov
add
pop
hlt
pushf
dec
ds
mov
cs
sub
fcoml
out
imul
mov
nop
fidivrs
and
sahf
push
in
pop
mov
sub
in
mov
stos
sbb
std
fstl
adc
mul
ja
rorl
push
stos
adc
sti
adc
xor
sub
and
xchg
push
sbb
hlt
adc
xlat
sbb
sub
add
jle
and
xor
fsub
sahf
daa
jg
fs
mov
or
jl
mov
jge
mov
jg
cs
cmp
andb
shlb
movsl
mov
dec
lea
dec
mov
inc
in
and
add
fcoms
cmp
pop
sbb
push
ja
insb
add
popa
sti
jmp
leave
jge
lahf
xchg
sti
or
test
mov
lret
mov
into
xor
testb
ret
inc
inc
pop
in
mov
and
fwait
stc
test
ficompl
jae
scas
and
cmp
out
sbb
mov
sbb
data16
jg
arpl
jb
jno
mov
jbe
cmp
daa
cmp
cmpsb
push
loop
mov
push
cmp
inc
sti
int3
xchg
daa
ja
or
fildl
or
js
aad
gs
xchg
roll
cmpsb
xlat
xor
xchg
inc
into
mov
js
fstpt
test
xor
sub
inc
mov
push
sti
adcl
mov
sbb
sbbl
jle
mov
mov
int
sti
es
xor
xor
test
std
sahf
je
push
jp
jnp
or
repnz
stos
push
aaa
jle
outsb
scas
loop
nop
sbb
push
cli
cs
enter
fistpl
test
xchg
dec
mov
and
cmp
aaa
adc
sub
mov
pop
mov
mov
push
sub
pop
mov
mov
gs
aam
inc
push
out
test
mov
add
int3
jmp
mov
mov
dec
stos
jge
out
or
jo
sbb
gs
adcb
mov
imull
pop
jle
cltd
jmp
lods
or
pop
mov
dec
adc
loopne,pn
aaa
cmp
test
pop
add
dec
leave
or
jbe
mov
mov
and
jmp
in
ret
fisubs
int
fisubl
dec
cwtl
sbb
pop
jns
or
xchg
dec
cwtl
pop
cwtl
ret
fildll
repnz
cmpsl
jle
dec
es
repz
fs
lock
cmp
lock
sbb
xor
dec
cmp
mov
dec
xor
popl
enter
testb
jbe
push
arpl
cmp
ljmp
mov
testb
mov
ret
push
aad
adc
rcr
loope
icebp
mov
mov
loop
or
pusha
mov
call
and
push
les
xchg
cmp
int3
int
std
mov
scas
and
push
jge
push
lcall
push
outsl
ficoml
fcmove
xchg
ret
pop
gs
cld
push
fisubl
inc
repz
fcoms
jbe
fwait
jae
and
xchg
into
jp
add
cltd
jo
fidivl
add
in
mov
mov
into
aam
sbbl
mov
test
popf
adc
out
and
in
movsl
push
insb
fs
mov
jecxz
push
fildll
pop
testb
test
jge
push
test
dec
xchg
mov
mov
mov
jae
mov
jnp
popa
mov
and
inc
mov
int3
addb
mov
adc
fs
sbb
fs
sub
mov
pop
mov
push
jnp
ja
push
cmc
mov
push
lea
repz
sub
fcmovnb
dec
dec
aas
mov
pop
sub
dec
mulb
mov
inc
inc
jno
xchg
das
mov
jp
aaa
lock
in
pop
cli
mov
and
in
sub
and
add
sbbb
repz
mov
or
add
andb
fcoml
dec
jne
mov
sub
jle
dec
fcmovnbe
stos
push
mov
mov
out
jae
leave
cmp
dec
adc
imul
and
movsb
leave
rorb
js
add
into
mov
sub
pop
ja
test
cs
imul
push
daa
mov
cmp
in
inc
add
dec
not
xchg
stos
scas
cmp
pop
mov
das
xchg
outsb
aam
call
popa
jle
fstpt
fmul
xchg
sbb
repz
xchg
jp
inc
cld
mov
lods
cmp
aad
hlt
std
cltd
mov
roll
jge
xchg
sub
cmpsl
out
orb
xchg
jae
sbb
pusha
sub
insl
push
jg
dec
xlat
push
jmp
pusha
xor
or
out
sub
fcmovb
das
add
popa
jnp
sbbl
pop
or
adc
jle
or
cmp
adc
js
inc
add
mov
shr
jb
sub
mov
sbb
rorl
mov
sbb
jmp
shlb
jns
add
je
mov
insb
add
sbb
leave
sti
add
repz
pushf
push
test
pop
inc
fisubl
pmaxsw
add
arpl
arpl
push
dec
dec
push
xlat
lock
fsts
popa
xor
adc
sbb
adc
jmp
aam
mov
adc
cmp
out
mov
xchg
cltd
ret
sbb
test
add
cmp
in
pusha
or
push
not
sub
cmc
push
inc
and
sub
xor
rorl
mov
cmp
inc
mov
adcl
jmp
arpl
push
int
jae
int3
rcr
xchg
inc
inc
ret
fwait
sub
inc
imul
cwtl
inc
push
inc
cmp
int3
sbb
jecxz
jne
add
mov
pop
sbb
fistl
or
push
mov
and
push
add
fwait
test
test
jno
insb
push
or
ja
test
enter
xchg
pop
je
sbb
gs
int3
or
rcrl
cmc
mov
mov
cld
shl
jo
dec
cmp
push
jno
push
push
sbb
sub
test
pop
pop
cmc
dec
mov
adc
pop
push
imul
jecxz
fisubrl
or
mov
dec
adc
pop
jecxz
xor
and
xor
hlt
mov
psraw
dec
cmpsl
inc
in
mov
lods
and
scas
sub
and
adc
fidivs
dec
ret
add
mov
nop
mov
in
lds
outsb
sbb
ds
lret
sti
sub
mov
call
inc
mov
stos
sub
aaa
mov
shrl
xchg
lret
scas
adc
imul
jbe
sub
push
and
inc
std
xor
push
inc
imul
and
push
dec
cmc
out
mov
and
push
push
outsl
pushf
mov
jne
sub
add
out
mov
sahf
inc
cmpb
icebp
in
sub
rol
cmp
inc
push
pop
pop
push
mov
xor
mov
dec
out
ss
aam
push
cmpsl
loope
xlat
test
xchg
dec
out
ret
sahf
mov
loop
clc
cmp
and
test
cmp
and
push
insb
jmp
dec
inc
mov
test
inc
jne
sbb
out
loopne
push
das
xor
sub
add
mov
in
xor
cmp
sahf
inc
inc
pop
mov
adc
push
xor
pusha
and
inc
das
xor
fidivrs
push
in
minps
ljmp
sub
push
mov
insl
out
sbbb
adc
daa
sub
out
xchg
jno
bnd
jge
pop
mov
push
cwtl
xor
xchg
cmp
arpl
xchg
lods
xchg
arpl
stos
jl
outsb
mov
lcall
test
incb
adc
cmp
sub
shll
adc
sbb
and
mov
arpl
or
orl
push
sarl
adc
aad
mov
push
shl
aas
inc
xchg
mov
mov
lea
xor
jns
or
mov
mov
scas
ss
outsb
iret
jns
scas
adc
cltd
aad
cmc
mov
out
pop
outsb
mov
jmp
and
mov
dec
fdivrs
sub
pop
xor
jne
sahf
mov
jbe
pop
inc
stos
mov
addl
ret
sub
ret
ret
mov
ja
fdivs
js
add
jne
push
xchg
jmp
mov
test
pop
sarb
test
aam
mov
push
mov
dec
mov
mov
push
jns
fwait
iret
insb
shll
sbb
mov
hlt
je
es
mov
push
in
icebp
and
mov
adc
jne
pop
mov
inc
push
fcompl
or
cmp
sbb
xor
and
inc
xor
ds
cs
jns
dec
lods
stc
divl
cltd
std
shlb
or
jae
or
lret
mov
xchg
lret
int
push
fucom
fstl
das
stos
xor
mov
test
dec
jle
jp
add
mov
push
mov
and
push
add
scas
test
dec
aas
insb
mov
push
insl
test
std
cmpsl
mov
dec
out
and
insl
les
inc
je
push
outsl
aas
bound
mov
mov
sub
dec
ret
or
mov
cld
lret
pop
dec
addr16
hlt
mov
mov
inc
cld
pop
pop
xor
pop
inc
xchg
jnp
or
cs
sub
lret
push
jmp
xor
sub
mov
repz
fidivs
scas
pusha
push
or
sub
mov
loop
xor
movsl
ret
les
popf
addr16
pop
das
xor
xchg
lods
push
jmp
in
test
lods
cmc
repnz
jae
imul
add
pop
imul
and
aas
sbb
push
sbb
pop
pop
inc
mov
lds
pop
insl
sub
push
out
cs
inc
jne
jge
lods
jbe
in
mov
mov
testl
loope
cmpsb
cwtl
xchg
xchg
nop
dec
cmp
shlb
xchg
fcmovb
iret
addr16
loopne
inc
add
mov
out
popf
hlt
pop
fisubrs
dec
mov
mov
push
sbb
in
enter
leave
mov
or
popa
fldcw
jbe
mov
cmpb
cli
lea
decb
dec
shrb
nop
and
add
adc
inc
sbb
jno
shll
mov
je
mov
fisttpl
sub
or
sbb
cmp
cmp
mov
jecxz
repz
and
adc
stos
jecxz
sbb
inc
or
or
aas
jecxz
xor
jns
xchg
push
jnp
cmp
test
jle
pop
and
iret
aad
xor
mov
int
jge
fisubrl
icebp
inc
addr16
push
aaa
jg
xor
adc
pop
mov
push
cmp
ds
scas
and
cmp
pop
scas
ljmp
cmp
lock
filds
std
pop
lret
inc
fistpl
mov
add
xor
imul
adc
add
push
xchg
movsb
daa
mov
out
sti
out
popa
es
sti
adc
loope
enter
daa
or
sub
adc
and
add
pop
and
mov
inc
test
dec
cmp
pop
adc
inc
pop
call
scas
notb
sbb
add
sub
imul
push
pop
cmp
sbb
sub
add
fucomip
cwtl
fidivrl
mov
jg
xchg
or
mov
xor
ret
adc
jecxz
loope
stc
mov
adc
daa
rcl
mov
mov
sbb
aas
cmp
push
fs
mov
pop
je
stos
mov
icebp
hlt
push
jno
or
pop
fwait
loopne
cli
adc
out
andl
and
fisubs
jge
jmp
shlb
adc
call
mov
pop
push
inc
xchg
or
fwait
mov
push
mov
push
pop
inc
lret
lods
xchg
pop
mov
in
pop
mov
clc
sub
pop
or
mov
sti
sbb
cmp
adc
mov
mov
pushf
dec
or
mul
sbb
sbb
xchg
insb
push
fs
push
push
sub
aad
in
sbb
data16
or
mov
out
sub
mov
mov
fs
lcall
lods
mov
inc
clc
mov
jnp
sub
vmovupd
pushf
ret
mov
enter
in
jp
jbe
lock
pop
xchg
loop
rcrl
mov
jae
jnp
repnz
push
and
sbb
sbb
inc
movsb
popa
popf
insl
pop
lds
adc
and
mov
int3
adc
ljmp
and
out
jg
iret
das
call
loop
mov
cwtl
scas
adc
repnz
push
xchg
gs
xor
push
fnstsw
push
and
xchg
scas
pop
add
or
loopne
jo
pop
addb
movl
mov
repz
jg
xlat
addr16
fists
push
or
or
dec
into
mov
or
aas
dec
repnz
add
mov
stc
sub
lods
bound
and
mov
mov
ja
loopne
mov
mov
push
mov
popa
mov
lods
les
movsl
or
into
pop
jle
enter
popa
mov
cmp
insb
loopne
lahf
incl
xor
ds
int3
xchg
jge
mov
in
popa
ljmp
jmp
or
jp
sub
adc
jnp
cmpsl
insb
sub
xor
or
push
int3
arpl
xor
in
ficoms
aaa
inc
push
pop
cmp
fimuls
dec
pop
jge
pop
addb
dec
int
mov
adc
mov
lahf
cmp
test
in
scas
cmp
repnz
or
inc
add
fwait
add
and
int3
comiss
pop
out
push
idivl
imul
pop
mov
pop
and
lret
cmpsb
test
test
mov
int3
sbb
cmp
rcrl
das
sbb
push
cld
cs
repnz
or
or
enter
icebp
mov
jl
cld
jns
ret
aaa
lock
xchg
test
pop
or
inc
dec
int3
int
das
shl
cmpsl
cmp
stos
dec
sti
lahf
clc
pop
shll
adc
sahf
outsl
imul
and
ja
ss
pop
mov
push
inc
and
sub
data16
mov
jbe
bound
xchg
call
push
xchg
mov
out
push
cmp
jecxz
loop
idivl
xchg
jb
add
ror
int
mov
pop
mov
scas
fidivs
aad
pop
fcmovnb
leave
cmp
cld
adc
xor
imul
lods
jge
push
jb,pn
int3
pop
sbb
jo
lds
ljmp
cmp
dec
and
adc
cmp
sub
adc
leave
inc
rep
xchg
sub
push
add
rcrl
jmp
or
out
and
cmp
cmp
inc
lds
or
jo
jb
out
xchg
fwait
call
fistpll
or
push
jnp
push
and
mov
divl
in
jns
jns
xchg
push
sbb
aad
inc
push
pushl
or
mov
jle
dec
ficoms
mov
das
lret
sahf
pop
inc
dec
fcomps
repnz
xchg
shr
out
or
jo
mov
sub
aam
lock
mov
fimuls
stc
sahf
dec
sub
lock
lcall
jb
cmp
jmp
push
or
jp
mov
adc
lods
testb
clc
iret
fidivrs
mov
stos
sub
cmp
in
loopne
mov
or
rol
mov
xlat
rcll
or
mov
das
dec
pushf
lret
mov
aas
cwtl
cld
stos
popa
ds
add
push
fs
dec
int3
fists
nop
dec
pop
pop
mulw
scas
enter
inc
dec
cmp
mov
ds
inc
inc
js
lcall
rcll
inc
xchg
jb
imul
push
push
mov
aad
outsl
je
icebp
daa
fwait
movl
stc
lret
or
sbb
mov
mov
sub
inc
mov
push
pop
mov
hlt
sarl
adc
bound
stos
arpl
or
fadds
add
lcall
pop
imul
movsl
cmp
ret
outsl
mov
insb
inc
xlat
movsb
inc
shrb
push
imul
into
push
push
pusha
or
mov
popa
clc
lock
loopne
je
push
adc
cmp
sbb
and
cmp
or
sti
jecxz
je
insl
cwtl
lods
nop
xor
movsl
push
cli
cmp
addl
add
xchg
lret
mov
adc
mov
add
xor
ret
hlt
xor
pushl
ss
push
xor
jno
int3
jmp
dec
dec
xor
cmp
sbb
mov
fwait
mov
jo
and
jno
jns
xor
insl
gs
outsl
lcall
ucomiss
sbb
pop
int
mov
out
icebp
xchg
and
icebp
sar
pusha
mov
mov
pop
sbb
test
xchg
pop
into
mov
test
ss
inc
cmp
adc
int3
out
jge
ret
cmp
fwait
pop
ret
aaa
or
mov
jne
lods
mov
in
fdivs
mov
cmpsb
ds
push
dec
inc
ss
out
jno
inc
sbbl
pop
sbb
sbb
adc
mov
jle
addb
rcrl
dec
dec
cmp
in
xchg
dec
mov
fcom
cmp
adc
pavgw
scas
push
push
iret
movsb
push
and
loope
lds
mov
rcrb
mov
mov
cltd
jl
scas
aad
imul
adc
xor
push
mov
cli
adc
fs
xor
or
ret
pop
add
in
mov
sbb
movsb
inc
lret
jmp
stos
jne
into
outsl
pop
dec
jp
in
fs
enter
sub
loope
mov
and
sub
xor
mov
mov
inc
add
pop
pop
mov
sbb
stos
sbb
movsl
in
sarl
mov
std
addr16
es
pop
sub
xor
mov
popf
pop
je
mov
push
imul
les
xchg
lret
sahf
add
or
mov
les
cmp
pop
push
orb
loopne,pn
mov
int3
arpl
out
mov
pop
pop
scas
mov
xor
data16
out
rclb
mov
jae
test
sarb
push
jmp
stos
pop
mov
xchg
enter
xlat
out
pop
out
inc
das
sub
bound
movsb
xchg
add
lcall
cmp
les
movsb
xchg
sbb
xor
in
pop
sbbl
jle
mov
xor
aad
pop
repnz
test
dec
lods
mov
mov
insb
or
out
je
adc
xchg
loope
stc
lods
sbb
stos
dec
cmp
in
lods
in
sbb
call
icebp
fisttps
aas
rcll
dec
mov
sbb
add
cvttps2pi
cmpsl
les
incl
cmp
icebp
enter
inc
fnstenv
mov
inc
lcall
adc
push
inc
xchg
mov
aas
pusha
inc
xor
inc
or
hlt
push
orb
push
inc
add
push
scas
or
subl
adc
mov
es
jl
ja
cmpsl
shrl
adc
lds
xor
ret
hlt
ss
dec
push
cmp
lahf
mov
mov
shll
and
push
scas
test
push
mov
inc
pop
ss
out
data16
lret
mov
hlt
adc
xchg
sub
xchg
xchg
cwtl
ret
push
mov
loop
mov
push
adc
push
dec
mov
inc
or
push
popf
test
push
daa
inc
clc
add
push
xchg
push
les
mov
add
cmp
mov
push
pop
fwait
adc
xor
sub
stc
mov
mov
pop
mov
and
add
xor
je
sbb
icebp
jp
mov
movsb
loope
fstpt
or
loopne
into
jnp
lret
fidivs
fisttpl
call
ret
negb
mov
shlb
fcoms
jb
and
or
popf
mov
xor
xchg
push
in
mov
mov
lods
arpl
and
xchg
imul
outsl
sti
jl
leave
popf
push
sbb
push
repnz
add
fstp
call
jg
fcmovb
push
lret
xor
dec
rclb
fsubrl
cmp
jmp
push
jecxz
imul
sub
dec
pop
cmpsl
fcompl
mov
dec
jl
fsubrp
xchg
cmc
gs
mov
add
lret
xlat
xor
jno
jecxz
add
cmp
mov
xchg
cmp
pop
sub
push
cld
insl
fists
sbb
pusha
jge
sbb
repnz
add
fiadds
lcall
mov
mov
insb
aad
dec
dec
sbb
cli
mov
cmpsl
push
popa
test
es
or
fucom
push
je
out
cmp
and
in
inc
fstpt
and
mov
incb
push
push
addr16
mov
lock
mov
imul
outsb
and
divl
jge
imul
lods
orl
jno
pusha
bound
add
or
inc
xchg
lret
sbb
mov
xchg
dec
loop
mov
inc
and
out
lods
es
nop
mov
and
cmpl
loop
push
insb
negl
test
lock
out
sub
xchg
aad
dec
test
push
or
leave
filds
add
dec
jnp
cmp
iret
lock
mov
add
xor
loop
fwait
rclb
loope
add
hlt
pop
cmp
loopne
std
loop
xchg
subl
jmp
int3
push
ljmp
rcrl
imul
cli
dec
jl
dec
sarl
aas
mov
mov
fidivrs
frndint
les
out
dec
xchg
loopne
push
adc
jno
jle
les
and
ret
sub
hlt
enter
dec
xchg
fisttps
pop
or
pop
sub
pop
shll
adc
test
jecxz
out
or
xchg
rcll
ret
jae
jmp
jns
lods
push
mov
out
adc
xchg
jno
std
insl
subl
push
add
insl
fldenv
psrad
push
mov
in
loopne
xchg
pop
in
cld
push
out
lds
jo
cmpsl
sub
cmp
mov
out
aam
inc
ss
fndisi(8087
cmc
iret
pop
cmp
test
adc
sbbl
cld
mov
orl
mov
mov
jno
sub
call
sub
gs
xchg
fdivrs
dec
xlat
and
scas
dec
shrl
loope
sbb
fsubr
loop
push
pop
fnsave
inc
cmpsb
icebp
push
popa
mov
cmp
shrb
sbb
jecxz
push
jmp
popf
testb
mov
pop
or
hlt
pop
dec
mov
imul
adc
hlt
xchg
mov
test
mov
aam
mov
iret
sbb
arpl
pop
adc
repz
mov
je
scas
xchg
mov
ss
mov
xchg
adc
faddp
ret
add
and
fidivs
or
pop
pushf
enterw
pop
push
loopne
dec
push
fadd
popf
loopne
popa
dec
mov
enter
in
hlt
cwtl
jns
push
inc
and
jg
inc
add
pushf
mov
inc
xor
push
clc
cmp
jb
mov
movl
les
icebp
aaa
call
cmpsl
xchg
mov
pop
xchg
sti
and
inc
imul
sti
jl
sahf
or
lods
mov
push
or
imul
repnz
mov
stos
out
into
or
mov
xchg
out
pop
mov
fsts
mov
mov
call
call
dec
xchg
xor
into
mov
adc
sub
adc
jg
in
cmp
xor
jo
push
fildll
clc
lcall
sub
icebp
and
and
adc
xchg
push
mov
test
ret
cmp
fstpt
inc
push
add
inc
dec
ss
das
push
inc
aad
xor
xor
or
fiaddl
sbb
cltd
sub
imul
nop
mov
mov
outsb
sti
or
insl
imul
mov
cmpsb
nop
iret
addr16
jmp
movsb
push
mov
mov
sbb
mov
fisubs
mov
pop
inc
imul
fldl
sbb
out
push
mov
imul
add
mov
mov
mov
cli
add
mov
lods
insb
fsubp
mov
pop
push
lret
popf
jecxz
js
jge
jg
jns
mov
jb
or
and
es
push
ret
add
jge
insb
or
inc
mov
pop
jl
push
pop
mov
or
jp
sahf
mov
aaa
scas
jbe
pop
lret
es
add
addr16
sub
out
mov
add
cmp
push
jo
dec
in
xchg
leave
mov
and
sub
adc
bound
jp
dec
dec
mov
std
iret
cmpsl
jp
sub
fcoms
push
sarl
insl
jmp
inc
out
add
lock
or
das
out
cmp
std
adcb
add
pusha
stc
ja
inc
iret
mov
shll
movsl
test
loope
dec
incl
dec
jbe
sub
jbe
jmp
xchg
xor
adc
mov
das
std
pop
lods
imul
clc
out
cmpsl
cmp
push
daa
fxtract
jl
jmp
mov
or
outsl
roll
lahf
outsb
loop
pusha
pop
dec
and
aad
xor
inc
mov
xor
mov
jb
mov
mov
scas
or
cmpsl
xchg
dec
daa
movsb
fisttps
push
les
sbb
xchg
imul
lds
jns
mov
pop
cmp
mov
sub
and
fucom
push
repz
mov
dec
mov
push
fs
dec
lods
pushf
ret
or
nop
mov
xchg
dec
mov
jae
xchg
inc
dec
mov
mov
leave
xchg
in
dec
jno
pop
jg
jmp
mov
insb
jmp
sbb
push
jns
push
je
pop
lods
out
cltd
cwtl
sub
cmc
sarl
not
into
js
stos
and
pop
xor
imul
and
xor
insb
mov
cmp
fimull
movsb
mov
fsubp
dec
dec
inc
push
fnsave
mov
mov
dec
sbb
outsb
in
or
or
shll
sbb
sub
subl
mov
inc
ja
and
int
repnz
je
int
push
cmp
sbbb
mov
cmp
sub
ret
fs
loop
pop
mov
push
mov
cltd
jg
sbb
inc
imul
push
out
cmp
nop
mov
push
aas
mov
inc
scas
stc
test
xchg
mov
or
inc
sbb
push
lret
jge
cmp
pop
adc
sbb
xchg
sbb
test
das
js
inc
popl
test
pop
fdivp
divl
repnz
insb
mov
es
inc
pop
push
ret
jnp
aad
push
mov
mov
and
std
repnz
mov
insl
and
jae
cmpsb
out
pop
sbb
xorl
and
jmp
jbe
inc
xchg
rorb
call
imul
mov
jbe
push
dec
dec
dec
in
inc
pusha
dec
shr
mov
shrl
jbe
testl
testb
ja
push
jns
push
mov
pop
or
leave
test
fstpt
inc
aaa
jnp
mov
sahf
or
push
repz
jle
pop
mov
dec
inc
test
mov
pop
dec
nop
int3
xchg
mov
xchg
ret
mov
movsb
and
sub
push
cmp
or
jnp
loopne
pop
and
ja
or
mov
int3
repz
outsl
adc
push
xchg
aam
ss
out
enter
cli
mov
add
shrb
xchg
lret
daa
sahf
cmpsb
or
push
arpl
dec
dec
leave
int
es
loop
ficoms
lods
mov
aam
das
pop
pop
gs
or
jp
lahf
imul
stos
adcl
mov
inc
inc
xor
rolb
insl
mov
incl
sbb
addl
in
adc
jno
mov
outsl
ret
push
dec
movsl
scas
outsb
pushf
addl
mov
xor
adc
push
mov
jno
jns
addl
lret
dec
mov
out
mov
inc
inc
daa
inc
aas
cmpsb
imul
addr16
sub
mov
scas
out
lret
jbe
jg
adc
push
testb
dec
push
and
fiaddl
push
je
mov
iret
lods
mov
inc
outsb
adcl
pop
imul
rcl
cmp
inc
mov
pop
mov
ljmp
mov
xchg
lret
or
bound
xor
xor
fisttpl
jne
fs
jmp
mov
mov
rcr
int3
mov
pop
pop
mov
cwtl
repz
sub
sub
dec
and
pusha
dec
mov
sbb
lcall
or
test
inc
push
xlat
mov
gs
in
arpl
mov
ret
push
cmpb
jns
pop
clc
sbb
and
cmp
aaa
ret
jae
mov
fbld
jle
mov
sbb
adc
fstpt
inc
mov
xor
les
lea
sti
bound
pop
mov
mov
scas
lock
mov
sarl
dec
add
inc
add
cmp
lock
imul
jmp
xor
sbb
jge
push
ljmp
outsl
arpl
popa
stos
loopne
dec
or
mov
adc
push
xor
add
aad
xor
int
stos
jno
rcll
jne
dec
stos
mov
sbb
ljmp
cmp
test
jb
sub
dec
jge
push
test
sbb
push
xchg
mov
jnp
int
pop
aad
sub
addr16
jo
sub
inc
xor
xor
mov
aad
add
inc
dec
dec
adc
jp
daa
iret
into
stc
insl
pop
pop
not
push
aad
inc
aas
shrb
jb
lret
and
xchg
xor
inc
jp
movsl
add
pusha
xorl
cmp
mov
insl
push
fists
xchg
push
xchg
push
scas
iret
mov
dec
cmp
out
xchg
loope
adc
sahf
ret
add
jmp
pop
cmp
pop
js
outsb
in
std
or
or
jge
out
aad
ljmp
shrl
in
call
add
xchg
dec
ss
mov
jbe
jge
dec
je
imul
and
pop
sub
addr16
and
loopne
adc
test
jae
or
pusha
add
je
ret
push
lds
cs
loop
mov
mov
stc
pushf
dec
xchg
popf
test
or
loopne
dec
test
pop
std
rorb
out
add
dec
mov
xor
jle
dec
push
orl
lock
scas
bt
gs
push
lock
xlat
repnz
mov
inc
jp,pn
or
and
jnp
push
pop
pop
sub
scas
and
div
pop
movsl
hlt
mov
pop
sub
mov
mov
sub
and
and
push
les
sahf
test
test
repz
adc
fsubrl
pop
and
push
inc
and
mov
xchg
inc
shll
jp
movsl
push
mov
cmc
leave
dec
cmpsb
sub
es
fstpt
dec
repnz
std
icebp
inc
mov
int
xor
nop
and
and
lahf
gs
into
xchg
cmp
popf
nop
mov
imul
xorb
dec
repnz
icebp
xchg
cs
aam
div
test
dec
and
mov
cmc
insb
mov
xor
or
leave
movsl
inc
sbb
mov
adc
fisubrs
adc
mov
push
and
es
ret
test
inc
jmp
cmp
adc
mov
dec
sbb
cmc
cwtd
outsb
add
cwtl
mov
out
icebp
aaa
pop
lahf
pop
lea
out
inc
sbb
xor
test
rcrl
dec
inc
lret
and
fdivp
test
xor
and
repnz
pushf
out
dec
cmpsl
lock
popl
repnz
hlt
adc
test
push
sbb
push
leave
mov
lea
cwtl
fadds
cmpb
ss
jmp
mov
ljmp
sbb
psraw
xchg
dec
cld
adc
pop
fisubrl
dec
inc
mov
pop
stos
adc
pushf
push
les
fbld
lret
jle
jae
movsb
imul
xor
js
sbb
adc
xchg
or
push
jmp
negb
xor
rcr
mov
dec
test
dec
mov
adc
inc
pop
shll
jmp
sti
or
jg
jns
xlat
add
push
pop
fs
aas
inc
int
leave
rclw
faddp
xor
into
mov
jno
std
mov
adc
cmp
jle
daa
pop
inc
ljmp
mov
mov
clc
adc
out
stos
jecxz
mov
pop
cmp
es
repnz
imul
adc
lds
jnp
sub
enter
sarb
xchg
or
ja
int
imull
scas
movsl
sub
cmp
cmp
push
shrl
cs
cmp
lods
sbb
call
or
and
stos
dec
inc
lret
jecxz
hlt
in
lcall
jne
or
ret
push
sahf
ds
pusha
mov
std
push
inc
lret
mov
mov
mov
sbb
ja
jg
fiadds
xchg
sub
jle
cltd
cmp
lods
mov
adc
repnz
push
mov
fsub
adcb
cwtl
bound
sub
cmpb
testl
lahf
addr16
shr
mov
pop
mov
sti
push
popl
mov
or
fldl
daa
sbb
icebp
push
sbb
push
fwait
cmp
pop
rcl
and
add
mov
adc
repnz
test
push
push
push
push
xor
call
cmpsl
inc
mov
call
sbb
fiaddl
xchg
mov
nop
cs
outsb
stos
fistps
adc
dec
lret
inc
loop
xchg
cmpsb
mov
ret
cltd
outsb
xchg
lock
adc
cmc
mov
dec
sbb
sub
fistl
xchg
and
in
pusha
and
fstl
pop
aam
dec
repnz
push
scas
pop
sti
mov
inc
mov
enter
test
mov
xor
push
sbb
shlb
outsl
dec
xchg
stos
add
out
push
and
sbb
repnz
cltd
push
push
pop
loopne
imul
movsl
cmp
inc
and
ret
mov
lods
jbe
hlt
pop
arpl
jecxz
loopne
xor
fstps
notb
pop
aam
inc
add
dec
test
fisubl
aas
inc
daa
mov
lret
rol
clc
xor
imul
pop
push
fcmovnu
hlt
int3
ret
dec
aaa
pop
jnp
int3
add
call
cmp
ror
sub
jl
mov
in
add
mov
inc
sbb
adc
int
mov
mov
xor
jmp
es
roll
inc
fstpt
pop
js
or
shr
sarl
or
mov
je
adc
mov
pushf
dec
es
add
pop
scas
xchg
in
pop
lods
dec
insl
popa
aam
fisttpll
pusha
mov
inc
out
push
in
in
out
cmp
shll
ficoms
xchg
xor
das
jnp
xchg
cmpsb
sub
or
daa
popf
jns
mov
clc
push
test
cmp
shlb
sub
insb
ret
int3
lret
into
xor
and
and
fistpl
incl
mov
mov
mov
or
popf
sub
in
cmpsl
push
pop
push
pop
test
jns
jmp
inc
fidivl
mov
bnd
stos
nop
addr16
sbb
inc
cli
mov
sub
orb
and
shrl
push
repz
sub
sub
aas
mov
cmpsl
pop
into
lods
dec
xchg
fildl
or
sbb
out
pushf
inc
mov
scas
xchg
gs
push
or
jo
popa
sub
jbe
adc
pop
lret
imul
and
pop
jb
mov
inc
push
roll
scas
dec
and
sbb
fisubl
or
inc
dec
pusha
cltd
mov
rcrb
add
mov
push
mul
imul
xlat
adc
bound
cwtl
rcll
repz
push
pop
lcall
sub
pusha
jp
add
adc
shll
mov
dec
add
sub
and
les
sbb
in
sahf
mov
pop
icebp
xor
divb
out
jns
roll
jns
push
adc
mov
adc
push
pop
mov
nop
push
fcmovnbe
push
lret
jb
cld
mov
adc
xchg
daa
sbb
int
lods
mov
pop
add
and
lahf
ret
jne
jne
cmc
sub
cmp
or
stc
fisubrs
inc
hlt
xor
mov
and
inc
clc
fiaddl
out
testl
xor
movsl
das
jns
lahf
dec
push
ret
pop
xorb
divl
out
gs
mov
cmpsb
jl
fldz
fwait
insb
in
jo
xor
aaa
into
jno
push
cmp
jge
movsb
dec
mov
add
dec
inc
jo
inc
lea
jl
xchg
fidivrl
jmp
cmpsl
xchg
sbb
adc
jl
loop
les
aam
cmp
je
andl
ss
inc
mov
lds
sbbb
dec
roll
icebp
push
shll
test
pop
rcrl
mov
push
out
mov
inc
int3
enter
push
int3
push
idivl
iret
xor
es
lds
dec
ljmp
outsb
push
int
cmp
sbb
jmp
imulb
xor
arpl
sub
pop
cmpsb
fwait
dec
add
mov
mov
add
mov
adc
or
mov
es
xchg
inc
xor
jbe
bound
jge
arpl
outsl
mov
and
cmpl
aas
adc
das
adc
movsb
cmp
popf
or
je
popf
xor
sub
sbb
mov
push
push
dec
js
xchg
les
mov
ds
in
jp
sbb
add
add
xchg
hlt
push
xor
aad
push
bound
sbb
aad
sarb
sub
push
add
sbb
leave
jge
scas
loop
and
inc
mov
orb
das
push
into
inc
xor
stos
jo
lods
mov
call
push
sbb
repnz
int3
lock
leave
lahf
mov
mov
xlat
js
scas
jnp
movsl
gs
push
jle
jl
push
add
pop
mov
mov
add
jae
sbb
out
lods
stc
mov
insl
cs
sub
lods
jle
push
stc
and
movsb
add
jp
mov
mov
jmp
push
std
mov
clc
push
cmpsl
push
fst
xor
jno
clc
data16
lds
fadd
pop
in
fcoml
out
xor
lret
dec
jbe
test
push
sbb
and
sub
mov
adc
shlb
jp
mov
lock
sbb
arpl
mov
fcoml
inc
mov
out
js
mov
in
outsb
loop
jnp
sub
outsb
jo
lods
pop
lahf
pushf
imul
inc
orb
insb
adc
pusha
movsb
jp
stc
mov
sbb
lods
or
adc
xchg
mov
mov
cmpl
adc
xchg
sarl
inc
rclb
movsb
jb
fldl
mov
aam
dec
add
push
fcmovb
cmpsb
sbb
cmp
ret
cli
adc
sub
loop
scas
ljmp
mov
arpl
jne
lds
add
xchg
rcr
fisttpl
push
jns
dec
mov
outsl
dec
or
nop
icebp
inc
outsl
sbb
sbb
dec
mov
dec
mov
push
gs
mov
pop
sub
in
push
fsubp
cmc
cmp
ret
xchg
dec
cltd
fsubs
fcmovnb
pop
test
xor
insl
stc
mov
pop
aaa
mov
cmp
push
xchg
jne
sbb
mov
lahf
scas
out
jmp
sub
add
sbb
jmp
or
push
mov
and
scas
sub
mov
nop
insl
cli
mov
sbb
push
and
xor
and
arpl
pop
dec
push
xchg
movsl
xchg
cmp
mov
movsb
jbe
fstps
cmc
imul
inc
lea
int3
add
cmpsl
lret
jg
mov
adc
mov
popf
insb
fwait
mov
cli
mov
mov
mov
and
or
sahf
or
aas
inc
out
jl
sbb
mov
int
sub
imul
in
jecxz
pop
loopne
dec
jg
std
xchg
cmpsb
sub
dec
mov
pop
cmp
or
pushf
rcll
cmp
mov
das
mov
stc
mov
xchg
jl
int
xor
xor
int
or
enter
dec
in
les
gs
xchg
jg
cli
adc
shr
add
arpl
dec
xchg
leave
mov
inc
mov
test
inc
jge
fucom
insl
inc
mov
inc
or
or
push
xor
sub
addb
popf
imul
andl
cmp
inc
rcrb
pop
push
ss
and
dec
jno
dec
mov
sub
xchg
xor
jbe
sbb
aam
jne
cs
add
xor
lock
sub
lahf
sbb
add
cmp
aaa
jns
pop
cmp
pop
cmpl
mov
imul
cmp
and
jmp
test
pop
push
adc
mov
pop
fwait
or
mov
push
push
imul
jle
mov
gs
jle
es
xchg
cmc
movb
add
jge
cmpsb
adc
jge
adc
and
fimuls
add
and
lds
fsubrl
mov
xchg
mov
rcrl
jmp
rorb
xor
pop
jbe
cmp
je
cmp
loope
sbb
adc
dec
push
clc
arpl
rcll
lret
fcoml
adc
jge
fdivl
sbb
inc
fs
xchg
mov
mov
mov
stos
jg
xor
inc
and
cmp
inc
mov
fdivrs
test
jmp
sub
loop
les
fistpl
aas
mov
leave
mov
jb
xchg
fwait
cmp
inc
jmp
push
mov
push
call
leave
xorl
adc
mov
pushf
popa
mov
cs
insb
sub
push
addl
sub
adc
fwait
xchg
pop
adc
jecxz
testb
fcomp
ljmp
shrb
sub
push
test
mov
insl
mov
mov
mov
mov
out
data16
jb
test
fwait
lea
or
dec
xchg
roll
rclb
inc
adc
push
dec
inc
mov
mov
scas
pop
lret
shlb
add
dec
pop
sti
and
scas
mov
lahf
sahf
push
lods
mov
mov
icebp
add
add
sbb
mov
sbb
inc
mov
xchg
insl
addr16
aas
or
flds
cltd
mov
xchg
fisubl
das
cmp
inc
addb
xor
rcll
pop
into
lods
mov
jle
cmc
mov
out
pushf
imul
rcrl
push
inc
mov
js
dec
imul
stos
jb
in
jb
test
dec
js
gs
in
xor
cmp
daa
aas
jl
sarb
inc
mov
daa
out
inc
jl
and
dec
jl
test
clc
push
pusha
and
dec
inc
leave
je
pop
or
ret
cmp
sub
add
cmpsl
mov
cmp
lret
fbld
mov
and
arpl
lock
adc
adc
or
and
jne
jmp
adc
adc
dec
cmp
mov
sbb
andnps
mov
mov
pop
fs
rcrl
inc
fidivl
imul
cmpsl
adc
shrb
pop
push
loopne
sbb
mov
lret
ret
nop
out
fidivs
mov
adc
test
jns
imul
lahf
aas
lock
jno
sahf
addr16
dec
cltd
enter
cwtl
enter
add
ret
aam
or
pop
loop
add
cmpsb
outsb
push
mov
lock
or
add
sbb
fwait
jge
cmpsl
mov
stos
pop
xchg
pop
in
xor
sbb
xlat
test
outsb
adc
inc
pop
jne
mov
add
sbb
and
out
cmp
push
pusha
xchg
clc
fs
xchg
push
jle
les
and
jnp
enter
mov
inc
lahf
fs
dec
or
inc
ret
dec
add
imull
ds
mov
add
and
pop
punpckhwd
popw
lret
lods
and
jl
adc
mov
xor
rorl
or
out
sub
stc
push
pop
push
inc
push
repz
cmc
je
iret
and
dec
das
lock
insb
icebp
stos
call
xor
aam
hlt
pop
insb
xchg
test
xor
loope
pop
orb
fadds
cs
subl
bndldx
test
adc
push
test
add
xor
cld
and
roll
orl
xchg
fisubrl
mov
jo
aam
pop
sbb
mov
xor
das
cwtl
cmp
aam
addr16
adc
jecxz
dec
mov
mov
add
scas
or
xchg
sarb
xor
push
incl
mov
dec
addb
mov
mov
dec
das
add
push
sahf
adc
stos
adcl
iret
inc
dec
push
sbb
lds
inc
idivb
lock
cmp
pop
inc
insl
cmp
xor
fnstsw
adcb
mov
xlat
enter
or
fisttps
xchg
inc
out
push
out
mov
xchg
mov
xchg
xor
xchg
push
jmp
notl
mov
xor
stos
popa
cmp
clc
add
popa
xchg
fcomps
movsb
mov
int
test
scas
cwtl
mov
dec
xchg
and
mov
int
sahf
sbb
dec
push
and
cmp
jae
data16
int
add
inc
mov
enter
push
mov
jo
xor
aam
leave
or
push
and
rcrl
test
pop
jnp
pop
inc
std
popa
ja
or
lea
in
stos
mov
insl
daa
dec
mov
jmp
mov
pushf
icebp
mov
jnp
or
outsb
sarl
data16
aam
cltd
mov
xor
imul
imul
scas
add
aam
push
cmc
paddsb
mov
sub
ror
loopne
mov
mov
gs
cwtl
mov
pop
insl
movsb
xor
inc
imul
lea
mov
mov
jmp
imul
fisttpll
dec
cmpsb
and
aad
sbb
js
adc
inc
subb
jnp
loopne
mov
cmpsl
xchg
pop
outsl
jnp
xchg
mov
mov
xor
dec
popf
inc
and
fcompl
ja
mov
imul
sahf
inc
int3
push
xchg
xchg
and
sub
mov
in
push
and
add
icebp
aaa
mov
shlb
in
jb
cmp
jnp
mov
movsb
into
mov
test
mov
pop
rorl
mov
cmpsl
xor
cmp
lcall
fsubrl
cmp
mov
push
shrb
clc
repz
xchg
insl
ds
fdivrl
pop
dec
icebp
xchg
pusha
xchg
push
pop
or
pop
sub
cmpsl
fcmovbe
in
jne
cld
call
and
je
ficomps
jmp
mov
stos
int
cld
cmp
mov
or
out
bswap
xchg
xor
data16
testb
imul
sub
loopne
movsl
cmpsb
mov
dec
mov
ljmp
cmp
add
std
loope
shrb
add
cs
xor
adc
outsl
lcall
mov
dec
js
dec
imul
cmp
jno
add
sbb
pop
stc
pop
mov
or
lea
xor
push
or
add
fmulp
mov
ret
sbb
mov
and
dec
fiaddl
jo
notl
lods
and
and
mov
push
stc
adc
ffree
lret
cs
lock
inc
adc
cmp
mov
fnstcw
enter
mov
lret
xchg
cltd
jno
shrb
push
insb
and
xchg
pop
bound
fs
sahf
mov
imul
bound
xchg
shll
pop
psrlq
xchg
mov
xor
and
push
jbe
scas
inc
push
mov
mov
call
les
insb
add
out
lcall
shlb
mov
das
popa
cmpsl
gs
loopne
insb
sbb
jg
stos
pop
jge
push
sahf
test
rolb
fnstenv
cwtl
sbb
decl
jnp
mov
dec
mov
add
in
push
xchg
xchg
push
pusha
mov
mov
push
adc
ret
or
aas
lods
sub
cs
mov
jg
pop
or
outsb
movsb
cli
sub
add
out
hlt
mov
rcrb
xchg
jne
push
mov
xchg
vxorpd
xchg
scas
xor
and
xor
adc
outsb
and
xor
push
fisttpl
inc
rcrb
das
ljmp
roll
mov
loopne
push
dec
mov
pop
adc
imul
inc
sub
jmp
andl
testl
adc
icebp
iret
and
jno
les
cmp
ficompl
xor
popf
xor
ljmp
xor
aas
inc
cmc
and
pusha
sbb
mov
scas
lahf
push
loopne
fmull
mov
jecxz
mov
mov
jge
jo
scas
add
or
adc
arpl
mov
cltd
sbb
aaa
mov
mov
stos
cmc
lcall
rorl
imul
out
dec
mov
inc
fdivs
pop
jo
jo
jle
movb
cmp
orb
pop
jmp
xchg
repnz
fldcw
mov
out
insb
cmp
repz
shl
popa
sbb
idivl
gs
stc
fsubl
andl
xor
lds
sbb
loop
pusha
and
std
dec
out
bound
push
cmp
cmc
cmp
jbe
mov
orb
mov
and
subl
fidivrs
test
in
ret
sti
dec
and
pop
repz
addb
jno
fiadds
mov
push
call
ds
mov
and
insl
hlt
xor
fstl
or
fs
push
test
fnstenv
pop
fs
data16
jl
arpl
jo
ret
and
jmp
xchg
xchg
dec
ljmp
adc
mov
cmp
mov
mov
ret
into
lret
push
out
lods
std
aas
mov
push
jbe
dec
add
ljmp
in
in
loope
test
push
sbb
dec
and
jmp
jg
comiss
insl
push
sbb
add
lea
cmp
xlat
jecxz
iret
push
xchg
sbb
xchg
inc
cmp
jge
push
push
cli
adc
dec
mov
jo
mov
stos
push
mov
cli
ljmp
or
jge
inc
dec
pop
iret
jnp
jae
sarl
imul
aas
sub
dec
inc
movsb
pop
daa
dec
mov
pop
and
iret
mulb
fdivrs
mov
addr16
jns
jecxz
shll
cmp
ret
inc
fs
loope
dec
mov
clc
pop
cmpsl
imul
xor
movb
inc
dec
fldl
lcall
test
subb
or
cmp
cmp
add
enter
lea
scas
aad
cmp
movsl
xchg
xchg
nop
and
shrb
loopne
xlat
xorb
jmp
push
out
xlat
inc
or
jle
pushf
push
popa
shll
or
sub
lahf
cmp
push
push
loope
into
sub
mov
fdiv
or
mov
mov
out
mov
mov
lods
cmp
sub
test
jb
push
adc
push
xor
inc
cmpsb
shrl
movsb
push
loopne
imul
cmp
jmp
pop
jge
rcll
shl
andl
adc
inc
lcall
in
jge
pushl
test
xor
adc
inc
fwait
stos
mov
push
push
insl
lcall
push
fwait
out
iret
cmp
mov
cvtpi2ps
daa
in
xor
js
fnstenv
and
mov
sbb
jl
push
jns
mov
roll
into
xchg
add
push
pop
adc
push
out
call
mov
jl
pop
cmpsb
or
imul
adc
mov
push
mov
add
mov
and
mov
xor
add
mov
scas
lea
adc
jge
and
leave
lods
mov
or
adc
enter
cs
ret
push
pop
repnz
sbb
mov
pop
mov
pushf
dec
xor
pop
clc
aas
loop
les
inc
jae
xor
sbb
fwait
inc
mov
mov
lock
shrl
push
aaa
mov
fwait
xchg
add
psadbw
aas
cmp
mov
dec
stos
xlat
loope
and
adc
or
rorl
xchg
dec
pop
stos
cli
sarl
jg
xor
das
shll
lret
repz
and
inc
addr16
inc
fdivs
call
testl
mov
mov
in
std
test
cld
lods
icebp
mov
sub
movsb
mov
ret
adc
mov
jecxz
scas
mov
or
loopne
clc
mov
shll
push
mov
dec
stos
pop
loope
lods
inc
ljmp
or
ss
and
sarl
insl
mov
rorl
push
sub
movsb
dec
add
push
mov
lods
and
out
jg
sbb
pusha
inc
leave
outsl
pop
sub
cli
repz
scas
divb
in
stos
lods
shlb
dec
adc
dec
inc
pop
dec
repnz
and
fnstsw
nop
inc
leave
addb
lds
into
xchg
xchg
push
xchg
fwait
dec
xor
hlt
mov
xor
mov
es
sub
inc
xchg
jae
int
mov
fwait
dec
mov
mov
test
push
mov
divl
ja
push
jge
in
mov
pop
ljmp
lods
xor
jg
cltd
xlat
xor
push
clc
mov
xchg
imul
loop
movsb
xchg
mov
pusha
mov
incb
jnp
fimuls
ds
sahf
stos
data16
int3
iret
push
mov
and
pop
aad
mov
pop
add
pop
push
add
mov
addr16
and
movsl
dec
xchg
inc
sub
xorb
aam
or
adc
mov
inc
in
cmp
push
mov
xor
sahf
shll
pop
out
push
mov
dec
sub
sub
xor
rcr
sub
inc
mov
mov
jge
inc
push
push
adc
into
mov
cmc
or
xor
pusha
idiv
xor
js
adc
iret
xchg
rclb
int
cltd
sahf
dec
adc
inc
fisubrs
cli
cmpsb
movb
jmp
loope
enter
jp
push
push
nop
and
sub
loope
push
sbb
xor
and
dec
push
test
inc
rcrl
fs
mov
cld
and
popf
push
cmp
cmc
push
mov
movsl
mov
cmp
add
sti
xchg
lods
or
push
scas
xor
jle
jg
lock
inc
jecxz
mov
cmp
pop
mov
pop
xor
lret
gs
push
xor
stc
push
fistl
fs
dec
lahf
faddl
imul
js
mov
mov
mov
cmpsb
jp
sbb
test
add
out
pusha
push
shll
sub
decb
nop
mov
jg
and
ss
pop
xor
sub
cmpsb
in
dec
mov
aam
lret
pop
out
cmp
mov
mov
jmp
pop
jnp
push
pop
lea
cmp
add
pop
pushf
dec
les
or
xorb
xlat
add
imul
outsb
lret
popa
ja
sbb
je
fs
test
xor
xchg
adc
loop
push
enter
sbb
push
in
cmp
stos
sbb
push
fisubs
or
iret
add
out
mov
push
xor
push
dec
ret
sub
sbb
adc
cld
xchg
stos
cs
fadd
ret
in
mov
mov
pop
inc
leave
sub
mov
movsb
xor
andb
push
push
xchg
mov
aam
cmpl
not
sbb
adc
sub
outsb
cmpsb
push
ja
inc
js
adc
mov
dec
stos
sbb
rclb
mov
cmp
sbb
cltd
jb
nop
movsb
insl
aaa
xchg
jp
xor
xor
aad
test
fmuls
mov
jmp
adc
std
jne
mov
loope
insl
xchg
mov
and
inc
arpl
mov
cmc
xchg
mov
aas
adc
cmp
mov
xchg
pushf
push
cmpsb
test
xor
push
jbe
jnp
fcoml
fs
mov
inc
pusha
add
jmp
dec
mov
lea
pop
mov
scas
lds
inc
cmc
mov
adc
dec
jae
out
ret
sub
mov
mov
ss
inc
push
push
stc
nop
mov
cmp
arpl
es
sbb
popf
xchg
fisubrs
sbbl
shlb
add
xchg
or
push
es
jmp
outsb
rcll
push
les
mov
in
out
cmpsl
out
in
push
bound
cmc
andb
push
or
hlt
cli
out
popa
mov
adc
out
sahf
shrb
data16
and
jp
add
jmp
or
incb
fmuls
mov
aaa
sub
and
mov
mov
aad
push
sti
divb
jg
rcrl
pop
mov
push
push
push
int3
stos
aaa
es
add
mov
rcl
movl
in
add
cmpsb
push
cmpb
mov
dec
nop
mov
or
or
loope
pop
inc
mov
jns
cmp
sub
scas
xchg
sahf
mulb
xchg
loope
jecxz
std
into
dec
add
pushf
addl
push
aas
sarb
adc
jnp
imul
repz
adc
shrb
enter
xor
push
lahf
popa
fs
xchg
cs
push
xchg
adc
inc
les
mov
mov
sarb
stc
call
cmpl
lods
fistpll
jns
mov
inc
leave
pop
and
or
hlt
in
int3
gs
add
xchg
out
sub
add
cmpsl
and
std
cmp
scas
jge
or
pop
insb
pushf
into
mov
xchg
pusha
jge
mov
xlat
aam
xchg
cs
add
je
fsubl
xor
mov
xor
cld
js
icebp
aaa
imul
leave
push
and
dec
pop
mov
pop
inc
int
dec
sti
out
gs
fsubrl
imul
mov
sub
data16
pop
and
push
dec
bound
ret
imul
sbbb
dec
aam
sarb
scas
cli
push
or
loopne
sub
mov
xor
mov
xchg
jne
mov
jp
mov
and
pushf
sbb
jl
adc
std
outsl
jns
sub
mov
adc
in
popf
mov
pop
sti
mov
xchg
adc
imul
xchg
or
ret
cld
add
xchg
cmpsl
inc
test
loopne
arpl
lahf
mov
cltd
lock
in
clc
inc
fnstenv
mov
int
sahf
ja
mov
and
shrb
sbbl
add
lcall
add
sahf
inc
aas
das
sub
pop
data16
in
mov
mov
pop
shlb
sarl
sub
fwait
mov
pop
aas
out
outsb
in
jl
aam
or
negl
ficoml
add
fcompl
jns
call
iret
jo
jno
xor
mov
and
fldenv
jb
xlat
push
rolb
jnp
cs
test
mov
and
add
fildll
sti
mov
leave
sbb
inc
mov
addr16
test
add
jns
adc
xor
daa
push
test
xchg
ret
lock
adc
add
push
loope
nop
jns
push
mov
adc
jle
dec
or
push
out
inc
xor
out
lret
push
mov
cltd
leave
testb
arpl
and
mov
inc
sub
push
rorl
clc
subb
and
jo
out
rclb
cmp
ret
xlat
lahf
inc
xchg
add
dec
jl
or
adc
and
add
fistps
fwait
sub
xchg
cmp
sahf
js
mov
or
stc
dec
cld
mov
xor
lds
mov
mov
xchg
std
cmp
add
pop
movsl
jns
cmp
or
mov
jnp
jecxz
arpl
jmp
jbe
inc
mov
fiadds
adc
ficoms
mov
stos
int
insl
mov
and
mov
mov
xor
adc
ljmp
sbb
fcoms
xchg
data16
xchg
cmp
or
data16
aaa
pop
fadd
in
xor
cmp
pop
imul
push
scas
nop
out
cmc
imul
mov
mov
inc
jmp
int3
icebp
fiadds
lahf
hlt
mov
mov
inc
dec
mov
dec
xchg
inc
stos
or
pop
cmp
pop
mov
or
jge
iret
addr16
adc
popf
test
push
je,pt
lods
cmp
sub
jge
nopl
add
aaa
xchg
shll
fstpl
imul
in
shll
scas
sbb
add
mov
adc
cmpl
in
fsubs
jo
popl
popf
jnp
je
cs
push
loop
pop
xor
rclb
mov
mulb
and
fmul
rcrb
ret
push
notb
push
mov
add
shlb
aaa
sub
divl
and
push
xor
pop
mov
xor
ljmp
les
pop
cld
mov
bound
xor
ss
jns
or
jns
mov
jbe
mov
outsb
mov
sarb
mov
cs
or
arpl
push
jo
mov
loopne
insb
mov
xlat
inc
les
dec
jnp
sbb
shrl
cmp
scas
cmp
in
lcall
mov
pop
add
adc
add
add
negb
sbb
ss
mov
mulb
jns,pn
sbb
ss
mov
add
add
or
rclb
add
cmp
mov
bnd
insl
jnp
dec
xorb
lret
ja
int
or
cmp
and
xchg
push
fmuls
jg
jbe
lahf
fildl
inc
test
push
push
adc
mov
adc
daa
adc
into
pop
mov
xchg
jmp
loope
or
outsb
sub
ja
arpl
sub
inc
mov
scas
jb
push
fmuls
insb
jge
pop
cmp
pop
or
out
jge
pop
mov
ja
cmp
mov
cmp
inc
data16
xor
arpl
dec
cmp
int
push
adc
cmp
xchg
cmp
dec
jmp
push
dec
pop
adc
mov
xor
inc
sbb
or
das
insl
aad
add
daa
lods
and
sub
jns
or
jb
lret
call
ljmp
scas
adc
pushf
jp
ret
jmp
ret
jno
mov
inc
adc
scas
out
inc
xchg
in
xor
icebp
loopne
add
out
push
sub
stc
lea
sbb
pop
cmpb
ds
out
ljmp
xchg
add
imul
inc
inc
mov
mov
and
into
scas
fdivl
outsb
imul
stc
sti
mov
test
fmul
mov
mov
pop
and
xchg
add
lcall
outsl
enter
sub
jns
rorl
dec
test
jecxz
jbe
or
mov
cmc
fwait
movsl
dec
mov
mov
iret
jl
enter
enter
inc
nop
xlat
in
add
sbb
test
setp
push
xchg
lea
pop
xchg
out
push
xor
fwait
add
fisubs
loop
add
dec
pop
stos
in
lds
roll
movsb
inc
lahf
das
fistpll
and
pusha
fwait
adc
stc
sub
and
sub
cmp
jne
mov
mov
sarb
pop
push
test
aaa
sbb
mov
addr16
adc
inc
pushf
lds
inc
ljmp
popw
nop
insb
mov
insb
push
lret
sbbl
sbb
les
aam
fcoml
mov
pop
mov
repz
jmp
fstpt
imul
daa
jbe
fld
or
or
ret
enter
fisubrs
cmp
xchg
and
ss
adc
int3
add
or
add
sbb
sbb
push
inc
add
sbbl
in
test
mov
mov
and
test
xchg
sbbl
je
or
sbb
xchg
sbb
pushl
das
sbb
cmp
pop
add
clc
mov
mov
insl
mov
pop
out
dec
mov
adc
sahf
popa
shll
call
into
xchg
arpl
fdivrs
stos
mov
sub
imull
cmp
shll
outsl
dec
sub
jmp
mov
es
xor
push
push
ss
lds
cmp
add
and
adc
je
mov
pop
mov
stc
mov
loop
cmpsb
cmp
aad
lock
stc
sbb
cltd
je
xor
rolb
cmpsb
xchg
mov
push
pop
out
jae
and
adc
fucom
rcr
out
faddp
jns
negl
in
out
shll
push
test
lahf
xor
stos
fildll
and
int3
aas
stos
mull
das
icebp
and
ret
cltd
jecxz
push
or
outsl
jge
mov
cmpsl
jo
aad
sbb
sub
movsl
jmp
sbb
sbb
inc
cltd
ffreep
pop
push
test
xorps
xchg
mov
sub
mov
dec
push
cmp
ljmp
mov
out
dec
xchg
fucomp
mov
push
cwtl
xor
testb
inc
orl
pop
bound
xor
sti
jmp
not
sub
je
popf
sbb
inc
mov
xor
ljmp
jl
inc
mov
pop
addr16
loopne
adc
push
inc
mov
jne
xchg
aad
xor
mov
or
mov
loopne
push
xchg
dec
mov
xchg
ja
sub
jns
push
rorb
adc
push
shr
mov
sbb
mov
push
pop
decb
mov
sub
je
dec
inc
jp
jb
jmp
popf
repnz
movsl
imul
xchg
push
sbb
inc
daa
in
add
in
shl
xchg
sti
cmpsb
push
mov
jp
lods
push
shrb
pop
sbb
xor
adc
mov
add
es
inc
sbb
push
add
jno
nop
fs
dec
js
add
jne
jmp
dec
or
sbb
dec
test
adc
adc
sarb
cli
inc
aaa
rep
test
ret
lods
pop
pop
cmovg
push
sub
out
in
push
cmpsl
sbb
lcall
dec
sbb
pop
les
pop
call
xchg
dec
cld
cmc
sbb
jns
or
xlat
outsb
movsl
fnstenv
add
pop
shrl
sub
leave
inc
jo
aaa
mov
in
cmc
pop
cli
aam
std
sub
test
jle
dec
xchg
inc
movsl
jbe
mov
mov
xor
push
inc
loope
mov
out
push
push
insl
push
stos
dec
cli
cli
xor
push
aaa
fistl
imul
xchg
std
or
sub
mov
or
xchg
in
jns
hlt
mov
lret
inc
cli
add
int3
pop
and
adcb
mov
cmp
jg
pop
mov
leave
dec
fisubs
inc
out
pop
push
mov
xchg
sbb
cli
dec
loopne
nop
adc
push
push
sub
rorl
test
loopne
inc
mov
mov
imul
call
popa
pop
incb
mov
je
cs
scas
faddp
fmuls
mov
ljmp
jae
inc
jo
pop
jbe
rcll
xchg
roll
xlat
push
sti
cmp
cltd
mov
jb
and
and
lea
pop
jp
outsl
ja
popf
mov
dec
adc
jl
mov
call
and
stos
clc
dec
xchg
adc
mov
testb
test
pop
sbb
sbb
into
frstor
stc
sbbl
jmp
jne
cld
cmp
ret
decb
outsb
ss
xor
inc
cmpsb
repz
sbb
repz
push
adc
jg
dec
push
aaa
icebp
or
mov
cmp
sbbl
xor
aam
cld
jle
insb
cmpsl
testb
cmp
cmp
hlt
sbb
dec
jp
mov
repnz
es
mov
data16
lods
and
dec
lcall
mov
mov
mov
add
in
pop
je
incb
xchg
fbstp
cmp
das
leave
or
and
dec
mov
loope
cmp
lret
mov
and
ss
clc
out
cmpsl
xchg
adc
stc
mov
pop
int3
lods
dec
cmpl
arpl
xchg
test
in
stos
fldenv
cltd
add
decl
or
neg
jns
mov
mov
sub
sbb
push
pop
pop
mov
out
xor
fucomp
adc
inc
ret
cmpsl
outsb
push
push
add
push
mov
int
fdivl
mov
loope
and
ffree
push
icebp
jbe
mov
jae
cmovl
mov
iret
cmp
aad
cmpsl
mov
stos
fstl
and
and
aad
push
push
sub
decl
cltd
ljmp
mov
out
repnz
sbbl
in
ds
imul
mov
imul
and
imul
dec
insl
shlb
xchg
mov
inc
jle
inc
cmp
and
and
adc
pop
fwait
scas
xor
pop
out
xor
mov
enter
imul
pop
xchg
mov
cmpsb
jns
dec
test
jb
and
mov
loope
loop
mov
stos
fsubrp
and
jno
lret
in
dec
sbb
nop
in
cmp
mov
jp
mov
repz
shrb
sahf
jmp
jne
sbb
ret
jns
pop
and
das
in
cmp
xchg
out
lock
xchg
js
je
enter
and
incl
repnz
jns
sbb
xchg
call
adcl
xchg
jno
sbb
orl
test
aam
add
es
lock
xor
std
stc
pop
and
out
push
lcall
mov
je
mov
out
adc
sub
cltd
sbb
sub
scas
outsb
enter
jo
scas
pop
jno
fmul
je
sahf
test
dec
bound
gs
repz
inc
aas
cmp
push
sti
lret
fwait
cmpsl
insl
sbb
shll
sbb
dec
inc
cmp
lods
dec
popa
push
outsb
popa
sbb
jae
xorl
loop
stos
test
sub
push
loopne
adc
xchg
stos
mov
inc
lods
inc
popa
cli
and
mov
push
lahf
mov
mov
mov
es
les
scas
adc
cmc
sub
mov
lds
in
fisttpll
add
mov
loope
daa
repnz
mov
push
mov
out
xchg
and
and
jns
dec
inc
ret
pop
jle
das
mov
subb
test
sbb
mov
xor
xor
jae
lods
outsb
test
leave
xor
fimull
add
aad
mov
mov
xchg
inc
je
loope
cmp
mov
dec
jb
xchg
sbb
sbb
rorl
sbb
cmp
cmp
repnz
push
jae
bnd
mov
sbb
sub
faddl
dec
jl
and
push
sub
jle
push
xchg
rorl
lret
push
or
jge
push
je
ljmp
mov
decl
pop
push
lea
or
dec
mov
out
stc
ror
mov
or
xchg
mov
or
rorb
push
sub
sbb
test
lods
imul
cwtl
es
nop
inc
cltd
adc
pop
daa
in
adc
mov
xchg
std
lods
subb
xor
imul
sub
lret
add
sub
out
fs
inc
mov
inc
les
dec
xlat
roll
jb
mov
dec
jp
push
je
ror
cmp
ss
frstor
mov
xchg
sub
nop
enter
xchg
inc
sub
inc
icebp
ljmp
jno
jae
dec
adc
in
push
sbb
fwait
es
lcall
test
xchg
rolb
dec
into
cli
data16
sub
inc
mov
and
roll
xor
ja
lea
inc
lods
mov
lock
mov
add
dec
lret
push
fistps
cmp
add
aas
insl
cmp
mov
ret
lret
jle
sar
loope
or
jp
or
and
mov
cld
mov
push
lods
push
ret
pop
test
stos
mov
adc
rorl
cmp
push
scas
or
lret
sbb
dec
xchg
pop
mov
dec
decb
push
or
pop
pop
dec
dec
sti
leave
dec
fdivrp
dec
shr
cmp
xchg
popa
or
rorb
es
inc
cwtl
jge
into
mov
pusha
ret
push
xchg
mov
fwait
jge
stos
inc
sbb
add
push
scas
jbe
cmp
fwait
js
add
dec
xor
imul
ljmp
mov
jno
push
sar
popa
arpl
push
nop
sbb
fisttpll
cmp
call
cmp
mov
cs
mov
shl
dec
jns
ffreep
call
dec
rolb
imul
xorb
add
outsb
mov
dec
mov
stos
imul
or
sbb
xor
daa
fimull
mov
jle
movsb
pop
jle
xor
pop
mov
jl
or
push
pop
icebp
nop
push
aaa
int
lock
enter
fistpl
jge
jl
pop
pop
aas
cmp
andl
adc
jno
sbb
scas
add
cmpsl
push
lea
push
imulb
stos
stos
jb
cmc
in
test
pop
sbb
and
les
scas
int3
pop
cli
mov
pop
rorl
mov
ficoml
pop
jbe,pt
xor
lret
pop
and
lods
es
aaa
arpl
adc
mov
push
les
cmc
notb
pop
pusha
push
into
or
mov
sbb
and
mov
mov
cltd
dec
sub
xor
loopne
xor
fnstcw
sbb
lods
mov
add
dec
push
and
fwait
cli
mov
popl
xchg
movsl
xor
fs
cmpsl
jge
and
and
inc
nop
shll
pop
xchg
fs
pop
xchg
cmp
mov
sub
stos
sbb
mov
inc
mov
int3
cs
pop
push
lock
leave
jnp
test
imul
cmc
jl
pop
dec
pop
dec
insl
mov
pop
test
pop
or
cmp
enter
mov
xor
fcomps
scas
test
sub
cld
dec
push
insl
scas
inc
add
cmp
adc
sbb
lock
fsub
lahf
shr
rorb
inc
jp
in
sub
dec
jbe
ror
sub
movlpd
in
lret
inc
cwtl
sbb
jle
mov
aam
andb
in
dec
or
in
mov
jl
sub
push
adc
mov
xlat
jecxz
mov
add
xor
push
mov
cmc
lcall
aas
leave
or
xchg
orl
xchg
rcrl
mov
mov
mov
nop
clc
or
adc
lock
std
fstps
lods
mov
xor
adc
icebp
stos
jmp
cltd
xchg
mov
mov
sub
adc
xor
in
lock
adc
or
gs
and
mov
jo
stc
pushf
rcrb
cs
dec
pop
push
push
incl
scas
jl
cli
mov
mov
xchg
mov
in
notrack
sbb
jge
arpl
push
sbb
xchg
or
add
jnp
jns
xchg
dec
outsl
and
scas
xchg
sbb
sub
or
insb
loope
mov
test
xchg
sub
leave
fcoml
mov
push
inc
les
jo
in
je
call
jecxz
stc
daa
add
cltd
out
loop,pn
and
out
test
call
nop
ds
test
push
and
cmp
jns
xchg
xchg
jp
and
xchg
jnp
adc
bound
out
sbb
and
icebp
inc
enter
scas
cmp
xor
sbb
in
pop
and
pushf
lods
out
pop
mov
xlat
adc
jbe
arpl
sbb
inc
je
sub
movsb
push
or
inc
ds
lock
inc
sub
repnz
out
testl
pusha
in
les
cmpb
xchg
stos
dec
in
insb
fs
gs
mov
cmp
js
cmp
pop
mov
xchg
or
add
cmp
push
or
jo
std
sbb
dec
iret
dec
sbb
sbb
cld
xchg
mov
in
mov
in
inc
out
adc
dec
shrl
or
pop
push
jg
lock
test
xchg
sbb
mov
mov
add
fdivrl
sbb
int
cltd
dec
ja
jae
inc
mov
push
popa
sbb
aas
pusha
sub
or
sub
lahf
cmp
ret
shll
aaa
rclb
adc
pop
sub
xchg
loopne
insb
dec
or
call
jp
push
xchg
sub
sub
and
mov
bnd
mov
push
repnz
mov
and
and
push
xor
xchg
adc
aas
add
cmpsb
add
sti
dec
out
fimull
mov
mov
push
cmp
insl
fsub
idiv
xchg
add
test
add
mov
sub
dec
dec
lret
jo
jae
fistpl
lods
insb
xchg
mov
arpl
arpl
xor
jge
cltd
cmp
push
arpl
push
aam
lcall
aam
cmpsb
jbe
scas
popf
scas
in
xchg
jbe
cmp
sbb
dec
inc
loopne
repz
cli
sub
and
or
adc
and
pop
add
out
push
test
rclb
lods
xchg
fisubrs
popf
aaa
sbb
pop
dec
mov
jne
rol
push
pop
dec
pop
pop
rcll
xchg
daa
out
adc
dec
mov
cmpsb
jns
hlt
push
add
icebp
rcrb
sti
cmp
and
inc
cmp
cld
repnz
add
out
stc
repz
jnp
das
movsl
repz
adc
push
push
in
lcall
std
mull
jecxz
popf
mov
es
into
mov
sbb
loop
or
imul
test
mov
xchg
jno
lea
clc
jb
lds
pushf
push
cmp
or
pop
cmp
fldenv
jge
stos
mov
pop
mov
push
or
xor
les
pop
xor
int
rcl
stc
popf
push
inc
mov
mov
int3
out
lds
cmp
ret
repnz
aam
dec
roll
test
repnz
es
jp
pop
fimuls
or
or
inc
nop
dec
cmp
pop
mov
sti
ret
xor
sbb
xchg
pushf
ds
leave
into
inc
lea
enter
out
test
jnp
mov
jle
int
lcall
fldl
push
mov
pop
sbb
or
cmp
aam
ficoml
test
loope
xor
adc
inc
xchg
cmp
roll
int3
mov
mov
sbb
mov
ljmp
das
adc
inc
shrb
xchg
inc
sub
icebp
ficoms
lahf
xorb
bound
xchg
andl
out
mov
push
call
inc
imul
push
jae
frstor
mov
cmp
cmp
pop
dec
aaa
jge
push
jmp
xor
cmp
popf
sbb
and
stos
or
std
pop
mov
pop
push
jp
pop
adc
mov
adc
je
scas
test
cli
fcoms
fnstsw
mov
aam
xor
in
fucompp
je
sub
jge
mov
jecxz
fimull
cmp
pop
xor
ret
cs
imul
jl
daa
test
push
jne
imul
fdiv
pop
or
cmpsl
push
jecxz
mov
and
mov
call
push
dec
arpl
cmp
pop
sub
sub
add
lret
mov
rorl
sarb
sub
or
cltd
adc
pop
lock
cmp
in
sub
jecxz
cwtl
hlt
sub
pusha
mov
cmp
scas
pop
adc
inc
test
pop
sub
insl
pop
push
divl
mov
cmp
mov
pop
sub
xchg
imul
mov
pop
cmp
pop
icebp
push
imul
adc
cmp
cmpsl
jle
pushf
loope
mov
mov
jecxz
cmc
mov
xchg
out
jb
pusha
fwait
jns
jmp
adcl
rorb
pop
cmc
sahf
pop
into
movsl
mov
rolb
mov
push
add
repz
lods
lret
out
hlt
xor
or
mov
lret
loopne
sub
aad
lret
cli
and
sub
fmulp
pushl
cli
out
leave
movsb
mov
xor
push
imul
add
xor
daa
shrl
dec
or
clc
nop
lea
xchg
sahf
or
test
rorl
cs
mov
jnp
repnz
cmc
jbe
sbb
inc
gs
cmp
leave
or
sbb
repz
fisttpll
mov
or
pop
fiaddl
inc
sbbb
adc
xor
gs
sar
push
jae
dec
jns
sbb
fisubrs
push
repnz
outsb
adc
test
sub
cmp
lods
add
pop
cld
addr16
lret
sub
inc
arpl
jge
mov
lods
xor
xor
mov
sub
pop
sub
sbb
fdivrs
pop
xchg
add
push
or
loopne
mov
jp
mov
lods
adc
mov
adc
push
lcall
cwtl
pop
rcrb
jmp
jle
xchg
push
adc
push
into
in
pop
rorl
mov
cmp
jnp
xor
pop
test
lcall
test
jg
fsubl
fsubrl
sub
add
cmp
testl
mov
stos
adc
ret
lahf
aaa
mov
lods
cld
push
dec
add
outsl
adcl
addb
adc
pop
and
lcall
pop
mov
leave
leave
xor
push
xchg
in
pushl
cmp
outsb
push
mov
xorl
lret
js
fstpt
xchg
mov
iret
mov
loopne
xchg
out
sub
xchg
jp
push
aaa
push
addr16
push
xor
fimuls
dec
pop
pop
or
les
pop
movsb
add
xor
mov
add
lahf
or
dec
adc
mov
shll
mov
adc
xor
dec
or
and
pop
negl
movl
dec
cmpsb
jne
push
xchg
into
jo
arpl
jo
ljmp
aam
dec
fimull
js
or
imul
mov
adc
mov
pop
iret
push
lods
pop
lods
add
mov
pusha
mov
lods
sahf
sub
clc
xlat
mov
dec
xor
adc
cltd
pop
or
ss
pushf
xchg
in
jae
sub
aas
mov
sub
jecxz
mov
je
inc
ret
mov
pop
pop
mov
in
js
out
dec
or
cli
or
jno
add
scas
out
mov
in
rolb
push
pusha
outsb
mov
sbb
push
mov
lock
int3
mov
cmp
ljmp
pop
dec
fsubrs
cmp
push
in
jnp
fidivl
call
aaa
push
icebp
loop
adc
insl
or
inc
lock
sti
pop
cld
mov
cmp
xchg
repnz
stos
push
cs
push
sub
dec
divb
push
scas
adc
pop
movsl
push
movsb
push
inc
xor
jge
or
int
testl
xchg
sub
mov
daa
push
or
cmp
mov
xchg
aad
cmpsb
imul
mov
shlb
mov
xlat
mov
rcr
inc
cmp
pop
sub
loop
dec
fs
or
lret
mov
pop
cli
pextrw
dec
aam
xchg
enter
cmp
push
leave
fstpl
adc
cmp
sub
or
mov
adcb
mov
mov
sub
mov
push
std
out
mov
jl
sbb
shll
push
enter
jge
mov
add
mov
lods
or
gs
lahf
mov
imul
jl
fcoml
int
jg
sbb
fimull
ret
repz
ret
lds
orl
mov
xor
ss
lock
sub
inc
loopne
mov
sub
sbb
dec
data16
add
adc
push
rorl
mov
mov
std
sub
pop
jle
cmp
fistl
mov
jnp
mov
jnp
sbb
fldcw
push
add
lret
lds
cmp
sub
sbb
sarb
clc
addb
pop
cmc
cmp
mov
jecxz
test
adc
ror
push
sub
das
outsl
pop
repz
push
insb
flds
test
insb
stc
lahf
loopne
mov
in
xor
mov
stc
stc
push
jl
and
xchg
jae
repnz
xchg
push
mov
data16
push
mov
std
fsubrs
adc
sti
es
fs
lods
sub
push
cld
xor
cs
inc
mov
std
roll
fnstcw
adc
mov
xchg
jo
xchg
sbb
call
jne
xor
test
dec
jno
in
clc
and
jno
mov
jp
int3
movsb
pop
pop
bound
shrl
outsb
cmp
adc
std
stos
inc
loop
push
dec
pop
imul
jb
test
add
jmp
xchg
js
mov
mov
pop
dec
pop
icebp
aas
arpl
int
imul
dec
stos
dec
sbb
into
mov
jns
sub
mov
pushf
mull
sub
cltd
ret
sbb
or
shrb
rcr
mov
pop
sub
and
xor
movsl
ret
jae
pop
mov
js
or
in
dec
test
pop
icebp
cmp
jno
out
pop
lahf
fdiv
je
xor
sub
sbb
inc
sbb
mov
cmp
addr16
xchg
orl
mov
out
test
cltd
sub
fnsave
cmp
cli
call
pop
loopne
add
dec
sbb
fcomi
aas
adc
cmp
into
mov
xchg
dec
addb
sbbb
rcrb
ss
adc
adc
test
fimull
pop
xor
hlt
sbb
fbld
orl
mov
push
stc
cmp
mov
pop
dec
aaa
mov
addb
xor
mov
push
fstpt
cmp
push
mov
nop
sbbl
or
scas
js
les
hlt
push
jge
adc
cmpsl
insl
std
outsl
and
test
out
and
out
adcl
lods
das
lret
das
mov
loopne
scas
cmp
rol
leave
lods
call
cli
sarb
jbe
jnp
xor
mov
mov
sti
outsl
stc
rol
aas
push
mull
push
or
ficomps
test
sti
cmp
push
js
ds
iret
adc
lcall
out
inc
pop
inc
test
inc
das
jg
call
cltd
cmpl
js
lahf
shll
dec
adc
push
jae
vmovdqa
repnz
mov
out
nop
mov
pop
xchg
sub
fsub
pop
inc
dec
adc
dec
int
testl
add
add
xchg
pop
pushw
cmp
jns
sub
push
test
pusha
cltd
movsl
fimull
add
sbb
test
out
lea
in
lock
orl
cmp
icebp
sub
call
or
imul
sub
jecxz
jle
aaa
jbe
fisubs
mov
cmc
adc
ja
push
jne
xlat
stos
xlat
mov
in
divl
xchg
pop
es
icebp
cmp
inc
aad
inc
daa
mov
js
ds
sbb
pop
sbb
inc
cwtl
fimuls
nop
jmp
pop
movsb
adc
pushf
xchg
fcompl
pop
call
or
jbe
into
adc
sbb
lret
jb
jns
nop
xor
inc
out
push
jge
inc
inc
mov
or
push
test
mov
xor
sbb
inc
xor
sub
adc
movsl
bound
enter
lahf
aad
push
xchg
addr16
jl
shl
mov
push
ret
fs
pusha
mov
xor
xlat
hlt
outsl
push
imul
adc
sub
cmp
pop
in
cld
mov
shll
sbb
mov
pop
in
into
pop
xlat
insb
mov
js
out
negl
lea
pop
jnp
push
mov
xor
cwtl
outsb
addl
xchg
mov
imul
fsubs
movsb
mov
xchg
in
out
int
push
mov
add
mov
cld
push
cwtl
or
lret
imul
jne
movsb
xor
push
cmp
aaa
xchg
imulb
adc
pop
cmp
push
clc
call
sarl
test
loop
jmp
add
lods
push
mov
xchg
movsl
mov
push
xor
popf
ja
hlt
daa
mov
adc
pop
into
ret
push
sub
push
lcall
add
aas
aad
loope
int3
imul
pop
aam
jb
filds
js
scas
cld
fdivs
xchg
sti
outsb
and
addr16
iret
mov
test
and
mov
shll
mov
lahf
sub
adc
fnstcw
dec
push
push
loop
sbb
and
xchg
mov
push
ss
shlb
xor
sbb
mov
mov
and
xlat
sti
rolb
push
push
lret
sbb
push
mov
xchg
hlt
clc
and
mov
cs
out
mov
aas
push
sahf
in
mov
jne
mov
sbb
jbe
jb
hlt
inc
and
xlat
pop
cmpsl
ss
mov
adc
mov
mov
lock
repnz
sub
mov
cld
mov
pushf
test
add
xchg
adcl
mov
inc
mov
sub
xchg
popf
jle
xchg
mov
mov
mov
dec
lcall
sub
jg
mov
jecxz
mov
call
sbb
cmp
arpl
arpl
arpl
dec
add
aaa
rcll
lret
mov
sub
inc
enter
push
cmpsb
sarb
sahf
and
xor
rolb
mov
xor
loopne
jnp
dec
xchg
das
das
pop
lfs
fldenv
push
inc
out
decb
in
into
xchg
adc
jge
fidivrl
dec
aam
or
dec
push
xor
cmc
push
push
mov
scas
jp
fiadds
insb
daa
dec
push
sbb
jp
shl
andl
arpl
int3
or
ficoml
lods
insb
aam
ljmp
sub
pop
mov
hlt
xor
imul
stc
mov
sar
sub
jle
sahf
arpl
decl
test
in
xchg
jns
aad
add
lods
js
inc
repnz
sahf
aaa
mov
cmova
adc
cmp
data16
clc
in
cmc
and
je
mov
dec
mull
jbe
xchg
stc
mov
push
xchg
aam
cmp
mov
lret
jae
mov
mov
test
push
mov
imul
sub
nop
adcl
mov
and
inc
push
cmpb
mov
and
in
loop
mov
sarl
jbe
mov
mov
js
add
lock
repz
cmp
jge
icebp
mov
adc
sub
jge
ja
shll
jg
ds
repnz
add
jno
push
push
xor
jne
ss
xchg
xor
out
sbbb
jae
pop
loopne
mov
and
into
loopne
and
inc
cltd
pause
lods
rcrb
fidivrs
jmp
mov
push
testl
add
jg
lds
stc
sar
or
es
cld
mov
hlt
sti
cli
ret
daa
ss
jb
arpl
add
iret
adc
sbb
into
ret
loope
movsb
add
mov
mov
xchg
pop
lcall
sub
test
lock
mov
sub
cmpxchg
pop
jge
lcall
cmpsb
lods
sub
sub
data16
add
mov
lods
sbb
imul
cmp
push
sarl
jnp
push
loopne
adc
push
inc
mov
xor
inc
daa
jmp
shlb
mov
xchg
pop
cmpsb
push
and
imul
jnp
mov
push
xchg
aas
in
inc
mov
push
ret
cli
enter
mov
bnd
je,pn
mov
sbb
inc
pop
sbb
inc
test
sub
test
outsl
ja
lods
or
addr16
ja
xchg
into
adc
or
inc
pop
add
lahf
mov
repnz
mov
repz
movsl
out
xorb
xlat
str
mov
jb
and
mov
push
adc
aam
pop
pop
add
cmpsl
sbb
adc
pop
enter
sub
and
push
cmpsb
sbb
aad
int
push
fsubrl
pop
pop
out
ss
or
lds
push
mov
jns
pop
mov
aad
testl
popf
ss
repz
js
addl
and
sub
push
shl
addl
cli
scas
addl
stos
push
jbe
xor
jp
pop
aam
fs
pop
mov
popf
int
test
into
cmpsb
sub
push
ds
sub
mov
add
or
loope
mov
mov
xlat
loop
popf
push
icebp
lret
mov
fbld
push
sbb
push
sub
lock
adc
add
inc
add
enter
mov
in
xor
adcb
data16
inc
push
addr16
pop
push
inc
mov
js
sbb
call
clc
adc
mov
shl
call
mov
arpl
or
arpl
dec
mov
fsubs
ljmp
rcrb
xor
dec
adc
xchg
mov
flds
fwait
cli
outsl
dec
icebp
cmp
xor
add
push
ja
xchg
lods
inc
jno
cmpsl
mov
fcoms
or
and
popa
cmc
push
jmp
outsb
cmp
push
sbb
imul
hlt
lods
inc
or
or
adc
add
addb
sub
scas
sub
cmp
pop
fstpl
rorl
cltd
imul
lods
jb
ret
mov
rcr
cmp
sub
aam
data16
pop
je,pt
leave
cld
cmp
or
aad
push
pop
pop
iret
cwtl
xor
icebp
sbbl
fnop
jp
add
and
je
mov
out
mov
or
sbb
je
pop
filds
ljmp
xor
adc
xor
lcall
xchg
push
xor
jge
arpl
movsb
ds
imul
cwtl
sub
and
or
and
add
push
pop
mov
mov
cmpb
jae
mov
les
xor
leave
jle
xchg
pop
sbb
inc
mov
stos
popa
inc
push
lcall
pop
rcll
adc
add
mov
lock
sbb
push
jecxz
lret
jb
sub
dec
fildll
mov
pop
jb
roll
sbb
mov
add
out
stos
enter
sub
dec
push
add
sub
adc
mov
in
or
dec
sub
xchg
mov
lahf
add
dec
dec
cld
sbb
call
add
aaa
push
loope
fwait
jae
inc
pop
rcr
sbbb
mov
popf
mov
adc
movsl
mov
mov
fwait
adcb
in
add
dec
fidivrs
sar
aas
jmp
mov
in
into
fsubrl
mov
jae
out
jno
xor
pop
shlb
push
sbb
outsl
cmp
cmp
out
dec
and
mov
test
ds
pop
cmp
aad
mov
jle
call
pop
aaa
fwait
add
and
mov
lret
ss
fs
push
scas
pop
hlt
jp
lea
sbb
mov
outsb
adc
push
arpl
sbb
ret
or
leave
aaa
dec
push
cltd
repz
xchg
jbe
adc
push
int
inc
ror
jb
je
add
and
adc
add
hlt
jb
shll
mov
xchg
or
leave
xchg
test
sbb
lods
jnp
push
adc
jl
cwtl
outsb
jge
ror
fimuls
pop
fiadds
mov
pop
jmp
push
sbb
addb
and
adc
out
jo
mov
leave
cmp
sbbb
pop
mov
popa
rorb
mov
push
ret
dec
xor
push
out
jg
push
imul
in
mov
xlat
stos
aad
insb
push
mov
sub
jbe
dec
xchg
into
xor
scas
sbb
and
xchg
lock
or
insb
sub
mov
sahf
in
ret
fiadds
xor
xchg
repz
pop
push
lea
ljmp
xchg
rcrb
out
inc
stos
jl
subl
test
outsl
mov
testb
loope
push
jecxz
cmpsl
pop
inc
testl
lods
jmp
adc
mov
fmuls
shlb
jp
rcrb
add
xor
cmp
fldz
mov
lock
lock
int
adc
outsl
inc
lds
popa
iret
ds
mov
sahf
adcl
in
jmp
lret
das
sahf
pop
jae
fldt
fadds
xchg
cmp
or
xor
movsb
sub
repnz
inc
sub
push
jns
sub
fidivrl
xchg
jb
adc
xor
mov
hlt
inc
sti
aaa
dec
inc
cmpsb
sub
sub
add
shll
arpl
aas
cmp
mov
sub
out
xchg
scas
arpl
and
and
enter
aaa
cmp
out
adc
inc
xchg
in
outsl
and
adc
jb
sub
mov
pusha
adc
sub
inc
mov
xor
xchg
jne
subl
inc
lods
lret
xchg
lret
ds
das
dec
cmpsl
xchg
das
or
dec
aas
loop
mov
daa
arpl
mov
lds
popf
mov
rep
mov
rolb
xchg
popa
int3
adc
xor
add
gs
cmpsb
jb
sti
in
xchg
xlat
pop
fs
in
mov
loop
jnp
scas
sti
repz
cld
push
cmpsb
push
sub
lods
hlt
scas
leave
push
mov
out
das
and
arpl
insb
and
shlb
cmp
jns
sub
xor
pushf
popf
mov
pop
push
xchg
jnp
jp
outsb
mov
push
xor
out
shlb
rol
aaa
lret
lret
mov
adc
out
jle
mov
push
cmp
add
push
cmp
adc
adc
jne
lcall
xchg
mov
popf
sahf
icebp
ljmp
outsb
sbb
ficomps
dec
mov
lock
mov
cltd
sarl
mov
pop
cmc
jle
in
push
enter
pop
xorl
into
hlt
in
cmp
movsl
cmpsl
mov
mov
in
cld
jno
rcll
iret
xchg
dec
sbb
sbb
mov
stos
divb
push
pop
pusha
xchg
cmc
int3
fstl
out
ss
jecxz
xchg
fsubl
lds
mov
in
cmp
ret
mov
lods
mov
enter
sbb
sbb
mov
outsl
cld
mov
mov
divb
ss
jo
arpl
aad
test
lods
mov
cmpsb
ret
popf
imul
fistl
and
jae
daa
je
les
pop
mov
out
std
lea
int
test
push
in
cmp
mov
dec
xor
sub
dec
repnz
adc
pop
inc
jge
mov
testb
aad
xchg
lret
jmp
jo
movsb
sbb
mov
ljmp
bound
cmp
inc
insl
lcall
xchg
bound
mov
std
lds
lahf
jg
and
sbb
push
xor
into
xchg
add
dec
xchg
and
in
into
add
imul
std
lds
mov
xor
imul
mov
jp
lret
in
je
sahf
or
jl
repz
sahf
cmp
pop
xchg
sbbl
lret
or
jae
and
rclb
adc
lea
stos
pop
ret
lds
sub
xor
jns
mov
ret
or
cmpsb
enter
pop
or
fldt
idivl
or
imul
cmpsb
or
push
mov
and
test
sub
inc
leave
leave
or
dec
cmp
mov
xchg
push
cltd
mov
jns
lret
sub
jecxz
sub
das
sbb
cli
pop
out
mov
dec
idiv
push
adc
js
mov
into
out
ud1
jne
mov
jg
bound
xor
and
movsl
fistl
lea
fbstp
loope
mov
scas
mov
push
and
or
jns
outsl
andl
bound
pop
cmp
xor
outsl
aas
xchg
inc
dec
sbb
jmp
cmp
sub
adc
out
mov
rclb
movsl
arpl
aad
sub
push
add
cli
inc
xchg
scas
mov
popf
push
fnsetpm(287
pop
mov
popf
ljmp
push
mov
fidivl
push
rcl
lea
aaa
mov
and
shll
adc
aam
ds
pop
fiadds
and
mov
cli
push
cmp
int3
fiaddl
pop
push
pop
stc
fisttpll
push
inc
pop
scas
lret
nop
test
flds
jbe
adc
sahf
xchg
lods
ror
aad
jno
insb
outsl
rclb
mov
sbb
daa
mov
mov
mov
ja
mov
mov
or
ds
jl
jns
sub
sub
inc
mov
cs
stos
sub
enter
movsb
pop
push
nop
cli
pop
hlt
loop
cmpsb
cmp
pop
outsl
mov
inc
insl
sbb
jne
push
imul
and
cmpsb
jp
test
int3
or
sahf
jge
cmp
or
xor
int
mov
jne
jge
sub
aas
mov
cmp
and
mov
xchg
aad
fmul
fs
pop
divb
pop
stos
jp
ja
lock
rolb
mov
mov
sahf
inc
cwtl
pop
mov
pop
insb
mov
dec
xor
cld
lea
sub
nop
cmp
icebp
sub
inc
or
mov
sub
push
fsubrl
lods
mov
out
lahf
fcmovbe
imul
call
dec
and
inc
icebp
test
sbb
cltd
sub
push
adc
ret
push
rorb
xchg
pushf
xchg
adc
pop
inc
pop
popf
aad
in
imul
ljmp
and
sbbl
mov
in
ficompl
mov
cmp
arpl
sbb
fcoml
push
bound
add
xchg
mov
pop
mov
inc
lahf
inc
test
push
push
xlat
ret
test
stos
or
mov
or
jp
dec
and
push
xor
xor
inc
push
inc
insl
xchg
out
jmp
inc
loop
lods
icebp
jp
xchg
xor
into
insl
into
popf
cwtl
std
outsl
std
repz
push
mov
iret
pop
imul
dec
ret
push
sub
and
mov
shl
inc
xchg
sarl
jae
insb
dec
sahf
shl
push
add
xor
jbe
add
jle
out
icebp
pop
mov
sub
adc
sub
add
lahf
pop
xchg
adc
xchg
push
enter
lods
lcall
ffreep
push
leave
sbb
mov
aam
insl
xor
in
dec
leave
into
push
pop
and
add
mov
dec
add
aad
pop
fdivp
sub
dec
push
jle
add
inc
xchg
mov
icebp
ror
mov
mov
fadds
sahf
in
mov
fucomi
xchg
xchg
je
loop
pop
inc
loop
jp
sti
rcrl
fs
and
mov
xchg
js
add
ret
cltd
lods
jecxz
mov
enter
outsl
lods
clc
movsl
mov
shl
sbb
insl
gs
add
or
cmp
jg
arpl
sub
rcrl
negl
enter
jp
fldcw
mov
fs
pop
inc
xchg
or
je
mov
sbb
xchg
ret
iret
xchg
inc
add
jl
jg
bound
pop
lods
imul
mov
fstps
in
pop
mov
add
jg
push
popf
mov
std
jp
cmpsb
push
mov
movsb
xor
lods
flds
addb
mov
jbe
mov
jns
dec
pop
adc
icebp
push
out
roll
inc
gs
mov
lods
int3
ja
bound
jg
daa
add
mov
out
std
or
bnd
ret
scas
and
mov
in
add
mov
inc
xor
push
mov
data16
insl
rcl
les
dec
mov
mov
shlb
push
loopne
lret
xchg
rorb
xchg
ret
sbb
pop
add
inc
lds
out
addr16
xor
mov
pop
mov
mov
stc
mov
inc
in
dec
scas
inc
push
loop
xor
cmp
dec
lret
push
lahf
jne
pop
movsl
jmp
or
xor
es
dec
push
rclb
mov
inc
stos
outsb
mov
movsb
out
mov
add
push
push
mov
and
fldenv
mov
shll
popf
cmp
xor
mov
ljmp
test
movsl
in
sbb
mov
add
movsb
cmpsl
mov
cld
and
test
shlb
in
cmp
dec
xchg
fs
add
stos
dec
push
lret
dec
xor
dec
pop
cmp
xchg
aas
or
adc
and
push
rorl
lea
gs
out
inc
mov
sub
repnz
lcall
loop
push
or
lods
repz
xchg
push
jge
movsl
sbb
subl
push
mov
pop
push
sarb
dec
sarl
into
mov
pop
int
cld
pop
scas
adc
cmp
call
mov
aaa
mov
test
mov
sbbl
movsl
pop
mov
cmp
sub
add
dec
or
jle
into
mov
loop
inc
cmp
bound
sbb
mov
xor
add
adc
sub
mov
cmp
inc
loope
push
cmp
dec
push
xchg
stc
mov
push
and
andl
mov
dec
push
mov
test
mov
xor
je
inc
jnp
cmc
or
and
rcrb
cli
xchg
mov
add
cld
rcl
jl
mov
and
int3
jge
push
insb
inc
ds
pop
add
testb
push
jg
mov
insb
dec
dec
xchg
push
ret
loop
push
push
aaa
lods
sub
fstps
dec
repnz
enter
xchg
icebp
rcr
mov
sub
cmp
jae
out
clc
shlb
divb
push
pop
fdivl
jl
icebp
mov
pop
movb
jle
std
mov
cmp
mov
out
pushf
leave
repz
pusha
cmp
ja
sub
pop
sbb
icebp
fnstsw
out
sarl
and
pop
lock
lea
into
xlat
sub
pop
and
outsb
idivl
and
rorb
les
push
fdivp
fwait
mov
andb
xor
and
xor
adc
or
stos
jge
cld
mov
out
je
andl
cmpb
stos
xchg
aas
insl
imul
push
mov
popa
xlat
or
and
loopne
fwait
loop
ds
cmpsl
mov
mov
add
sahf
bound
outsb
mov
add
dec
jmp
inc
lahf
sub
cmp
ljmp
int3
sub
xchg
mov
mov
jle
mov
test
fnstcw
call
push
insl
xor
push
mov
jnp
mov
sti
pop
filds
jmp
push
adc
pop
divb
push
dec
js
cli
movsb
jecxz
pop
mov
imul
mov
push
in
scas
insb
sub
push
cmpsb
push
or
mov
sub
mov
add
dec
orb
mov
jmp
xchg
cmpsb
dec
fsubl
dec
dec
jle
idivl
and
das
or
lods
adc
faddl
pushf
sbb
call
jnp
and
das
es
inc
inc
sbb
sbb
mov
pusha
sahf
loope
pop
xor
jbe
aam
mov
dec
adc
dec
jno
add
pushf
pop
add
or
or
sbb
arpl
xor
sbb
ja
push
sbb
movsl
sub
enter
cwtl
add
test
jp
jmp
or
addr16
cli
mov
pop
int3
popa
fmuls
dec
inc
popa
add
xor
jp
push
fdivrp
add
xor
enter
out
mov
jmp
inc
push
or
mov
cmpsb
in
sub
lahf
adc
and
push
leave
dec
bsf
call
jle
and
roll
lods
lods
sbb
fisubs
push
add
fcomps
mov
fabs
jne
push
fidivrs
das
out
or
jp
lea
jecxz
repz
or
pushf
jbe
std
insl
pop
lcall
das
xchg
fucomi
outsb
jne
lea
insl
lods
xchg
mov
xchg
cmp
stos
pushf
xor
pop
mov
jo
movsl
fisttpll
call
sarl
dec
cmp
test
hlt
daa
lock
cwtl
pop
outsl
or
xor
popa
in
fisubrs
sbb
fldl
sub
inc
mov
bnd
xchg
sbb
mov
fisubrs
and
out
cmc
clc
dec
pop
mov
jns
jmp
ret
das
dec
inc
pop
aad
hlt
ja
and
mov
and
add
and
push
movsb
add
jno
insl
lcall
in
push
jg
ss
lret
cmpsb
push
fwait
push
iret
jae
movb
or
popf
popf
cmc
inc
push
int
pop
int
filds
leave
hlt
push
aam
cld
jle
movl
mov
pop
sub
xchg
xchg
adc
rcrb
test
jp
jle
mov
sub
mov
mov
or
cmp
arpl
cs
mov
mov
shl
rcll
jmp
mov
stos
and
jnp
adc
mov
sahf
jl
mov
stos
mov
add
xchg
aad
les
jbe
loop
mov
cli
mov
sub
scas
mov
pop
jno
mov
cmc
cmpsl
shl
addr16
leave
outsl
xor
movsb
out
xchg
nop
jae
mov
jns
cmp
adc
dec
xor
mov
sti
sarb
ss
lahf
nop
xlat
mov
out
xor
imul
lods
mov
cmp
stc
inc
inc
gs
xlat
pop
push
and
sub
xchg
add
and
pop
dec
xor
decl
clc
xor
push
push
insl
insl
test
gs
mov
mov
pop
ja
movsb
hlt
out
cmpsb
and
add
mov
aad
sarl
xor
xchg
nop
xor
outsb
scas
and
sbb
sbb
inc
cmp
fsubrs
push
test
mov
or
xchg
in
pusha
push
lock
ljmp
fisubl
cmp
popf
lret
mov
in
add
xlat
mov
xchg
nop
sub
ljmp
shrl
mov
xchg
es
ret
ss
rclb
inc
ljmp
push
sbb
cltd
mov
lcall
pop
aaa
repz
mov
jecxz
jns
filds
or
mov
sarb
add
pop
aad
out
adcb
push
call
sub
jns
mov
negb
sbb
xchg
push
cmp
push
cmp
in
push
cvtps2pd
mov
xor
outsb
test
sbb
stos
or
sbb
arpl
icebp
mov
out
jnp
mov
inc
sahf
sahf
push
mov
add
aam
setnp
lret
aaa
movsl
scas
sbb
lods
aas
aas
add
mov
adc
pop
pop
lock
lahf
lret
mov
xorb
rol
sbb
lock
into
sub
hlt
repnz
jb
lahf
and
add
mov
push
int
inc
inc
inc
dec
outsl
add
adc
or
imul
mov
dec
imul
pop
lds
fmul
add
sbb
dec
popa
inc
insl
pop
jb
lock
dec
xchg
mov
and
xorb
inc
inc
movsb
adc
lea
push
xchg
and
push
lods
mov
ret
pop
loope
jle
push
sbb
sub
adc
mov
testl
mov
adc
mov
inc
inc
inc
bound
fldl
pusha
xor
sub
add
mov
adc
rclb
sub
mov
int
mov
dec
sahf
es
in
jns
insl
fiadds
xor
cli
and
dec
les
and
cld
mov
es
cmp
sub
jns
sbb
push
and
cwtl
test
or
xchg
clc
mov
stos
imul
cltd
inc
sbb
pop
test
jecxz
jne
mull
and
mov
mov
xchg
mov
imulb
int3
jb
mov
int
icebp
mov
je,pn
nop
call
fldl
rcrl
nop
xchg
aad
shl
fwait
adc
mov
test
sub
lcall
aaa
idiv
mov
pop
sbb
shlb
lret
clc
jnp
nop
mov
nop
xchg
hlt
kmovw
mov
testl
push
mov
mov
imul
fstpl
mov
pop
jb
cmpsl
push
into
push
enter
sti
adc
fdivr
es
les
fcompl
fldt
pusha
pop
std
inc
clc
popf
or
icebp
in
inc
xchg
out
aad
repz
push
push
mov
dec
out
adc
popa
gs
mov
pop
inc
hlt
inc
daa
scas
stos
nop
insl
mov
push
imul
sbb
in
rcll
mov
mov
subb
cwtl
push
add
adc
clc
lret
add
fsubrl
inc
xchg
int
cmp
add
pusha
js
scas
in
repnz
inc
xor
btcl
stc
fimuls
pop
ret
jne
pop
rcr
loop
xchg
out
fbstp
js
repz
std
or
sub
aam
xchg
rclb
inc
xor
xor
int
pop
xchg
jge
dec
aaa
jp
mov
cwtl
int
lret
jmp
pop
push
dec
inc
std
pop
dec
or
insl
mov
and
dec
push
cmpsl
xchg
sar
into
dec
orb
fwait
nop
adc
adc
xor
enter
mov
jge
fstps
and
pop
repnz
push
dec
cmp
or
lods
cmpsb
mov
idivl
das
xchg
repz
xor
or
pop
cmp
mov
dec
into
jo
sub
dec
jl
mov
jo
jb
into
push
in
enter
into
xchg
xor
mov
psllq
pop
fsts
ljmp
out
int3
pop
mov
pop
mov
mov
loopne
imul
test
lods
rolb
add
xor
xor
orl
lcall
orb
shl
movsl
pop
inc
imul
mov
push
ds
sub
inc
jnp
or
ret
xor
xchg
xchg
fldt
mov
fsts
and
mov
jno
inc
jmpw
jecxz
roll
mov
sbbl
out
push
or
dec
popa
aam
outsl
and
ss
std
ret
mov
aas
mov
inc
inc
xchg
pusha
test
xchg
jo
lahf
bound
fldl
fmull
xchg
stc
cli
std
sub
mov
push
ss
lds
mov
sbb
insb
icebp
jl
mov
mov
jp
inc
jnp
mov
mov
sub
icebp
gs
bound
pop
int
stos
sbb
in
xchg
shl
sub
jae
inc
popf
ss
or
aas
in
rcll
or
cs
pop
or
or
stos
pop
in
sbb
cmp
and
add
lret
shl
popf
add
icebp
or
mov
mov
jge
ljmp
les
fdivp
push
pop
mov
mov
mov
fisttps
cmc
sbb
xor
fldl2e
ficoml
cmp
cmpsb
add
sti
test
add
js
inc
test
fwait
push
cli
cmp
and
aas
lea
and
adc
repz
test
xor
fcoml
lock
add
ljmp
call
sbb
push
pop
je
sbb
lret
int3
mov
jno
fdivl
cwtl
mov
subb
push
mov
mov
shlb
cli
lret
jae
adc
shlb
push
lret
mov
cld
sahf
push
cltd
and
adc
in
mov
push
and
repz
sbbl
and
rcrb
dec
and
mov
mov
rcl
fimuls
push
push
inc
mov
fldenv
lock
inc
in
mov
push
enter
into
std
mov
or
mov
les
mov
adc
or
imul
add
mov
scas
imul
mov
pop
movsl
dec
enter
cmp
shrb
sub
xchg
xlat
inc
fsubp
sbb
xchg
lds
addb
mov
xchg
xchg
adcl
mov
add
xchg
aaa
ds
addr16
mov
mov
dec
stos
mov
cmp
ret
and
popf
or
jp
gs
cmp
repnz
lret
pop
mov
pop
inc
ret
jp
and
jg
adc
out
jecxz
cs
sbb
mov
inc
mov
inc
pop
mov
sbb
mov
ljmp
adc
sbb
mov
mov
or
addr16
dec
mov
push
fstpl
jb
arpl
pop
outsb
shrb
add
mov
cmp
dec
clc
and
or
aas
jbe
dec
xchg
add
call
shl
add
cmp
ficomps
adcb
jg
ja
movsb
es
add
scas
adcb
xlat
repz
movsb
pop
cltd
jp
int3
sub
in
jne
xchg
push
imul
mov
cltd
je
sti
pusha
leave
adc
icebp
inc
or
rcrl
add
xchg
adc
dec
lods
mov
mov
cmp
and
jne
adc
ret
dec
aam
in
mov
lahf
cmp
mov
and
jecxz
loop
cmp
dec
push
dec
lock
lods
ret
popa
mov
bound
out
push
pop
in
sub
sub
lret
lods
mov
mov
mov
jnp
xchg
fcmovbe
pop
mov
sbb
xchg
sbb
loopne
pop
js
fs
sbb
cmp
dec
xchg
push
test
sbb
pop
shlb
mov
or
popl
inc
cmpsb
outsb
jmp
jo
test
loope
mov
in
fmuls
test
out
dec
movsl
outsl
test
pop
inc
push
fnsave
push
nop
sub
jg
inc
jbe
movsl
popf
ret
jge
std
jae
jae
aas
icebp
xchg
jp
push
cmp
sub
adc
mov
sti
addb
loopne
cmp
add
lahf
mov
jo
stc
jne
sbb
cmp
xchg
popf
xchg
mov
inc
out
loopne
jnp
aam
pop
ja
inc
jnp
mov
cmpsl
mov
push
push
dec
pop
sub
je
cmp
arpl
add
lock
mov
rclb
stc
int3
cmpsl
cmp
stos
dec
int3
inc
inc
push
subl
stc
rorl
outsl
jmp
sub
scas
jnp
push
pop
push
out
mov
cmpsl
pop
ds
lds
sbb
std
cmc
cmp
cmc
hlt
inc
sub
xor
sbb
ss
je
dec
cmp
test
xchg
int
dec
xchg
dec
bound
lods
fistl
mov
push
inc
adc
cmpsb
or
add
fsubl
movsb
pop
jmp
loopne
push
dec
mov
push
orb
add
inc
stc
fisubl
test
stc
and
scas
mov
loopne
inc
xchg
adc
mov
ss
inc
pushf
xlat
push
ret
sbb
xchg
jns
insl
outsb
jb
push
popa
sub
push
lea
sbb
xchg
cwtl
stos
aaa
xchg
jbe
test
call
jmp
repnz
pop
clc
loopne
or
add
scas
enter
jnp
int3
adc
pusha
data16
add
mov
imul
jb
and
shrb
loope
fbld
xor
movsb
imul
int
jge
mov
cmp
inc
in
lock
push
pop
addb
pop
iret
pusha
test
mov
jp
inc
push
fdivrp
and
sbb
pop
push
arpl
ss
bound
xor
cmp
jo
pop
xchg
xchg
mov
out
ds
mov
divb
xchg
jns
js
mov
ss
pop
cmp
mov
movsb
dec
inc
or
sbb
xchg
lea
in
dec
mov
mov
jb
loop
xlat
dec
mov
sub
dec
adc
mov
bound
mov
cmp
xlat
jp
mov
pop
inc
and
jne
jmp
fsubrs
pop
pop
cmp
xor
daa
adc
dec
fcmovnbe
or
lds
cmp
cmpsl
pop
imul
xor
sub
sub
ja
pop
filds
mov
add
jg
jmp
push
adc
dec
jg
lock
or
rorb
pop
fwait
or
leave
mov
adc
std
mov
addr16
xor
dec
imul
ret
sbb
mov
fstpt
jecxz
in
mov
add
adc
cmp
and
popf
push
out
cmp
ljmp
pop
ds
mov
push
or
push
fs
ret
or
in
xchg
pop
insl
push
xor
pop
xchg
mov
mov
test
dec
sub
sahf
pop
xchg
xor
stos
int
movsl
int3
inc
inc
inc
into
pop
mov
cmpsl
push
aaa
xchg
pop
cmp
mov
dec
fiaddl
enter
xlat
cmpsb
movsl
aas
sub
push
mov
out
xchg
leave
ljmp
aad
arpl
insl
sarb
mov
sbb
orl
stc
mov
test
mov
jp
or
lds
dec
test
push
insl
push
iret
in
and
push
lock
sbb
clc
repnz
sbb
icebp
jp
fwait
movsb
sub
mov
and
and
jns
sbb
adc
inc
xchg
add
cmp
cmp
xor
pop
xor
jnp
mov
lcall
insb
rorb
inc
cmpb
sub
out
nop
mov
pop
pop
stc
in
mov
lods
push
mov
out
sbb
movsl
insb
test
idivb
push
ja
cwtl
dec
addr16
into
into
mov
push
ds
mov
inc
xchg
mov
push
orl
and
mov
mov
ds
xlat
push
inc
mov
jnp
mov
sbb
lods
cmp
jns
xor
data16
pop
pop
add
data16
and
movsb
jecxz
pop
add
loopne
xchg
cmp
cld
jle
cmpb
test
pop
int3
int3
iret
stc
lods
rorb
shr
lcall
imul
enter
and
daa
sarl
mov
out
loop
and
push
add
cld
adcl
test
mov
xchg
repnz
push
mov
pop
mov
in
dec
jl
xor
inc
out
out
mov
pop
out
testl
pusha
cmp
roll
adc
lock
cmp
in
sahf
or
stos
enter
out
fimull
aad
hlt
inc
out
cmpsl
icebp
sub
push
lock
mov
cli
mov
xchg
aas
push
rcrb
test
push
lods
das
dec
cmp
test
xchg
xor
dec
fimuls
icebp
stc
jmp
dec
cwtl
mov
hlt
or
sahf
inc
lret
mov
sub
mov
sub
fistpll
out
mov
ss
pop
mov
push
icebp
add
add
xchg
and
cli
adc
arpl
test
stos
pop
sbb
loopne
inc
in
lea
adc
and
dec
sbb
dec
dec
adc
or
test
pushl
lods
xor
mov
and
jecxz
sub
rcrl
inc
std
push
cmpsb
mov
addr16
lahf
or
xor
into
mov
sub
repnz
mov
les
mov
iret
out
mov
std
mov
ss
lret
enter
xchg
inc
test
jae
mov
fdivl
cmp
js
testb
or
es
cli
in
push
cmp
subl
add
and
jp
fmuls
in
movsb
cs
push
lahf
jle
mov
movsb
jmp
in
push
inc
cld
mov
in
mov
xor
insb
mov
int3
mov
lcall
cmp
das
fwait
leave
int3
push
lock
adc
inc
or
adc
movsb
inc
sub
mov
xchg
add
push
pop
sbb
fisttpll
es
mov
cmp
push
in
xchg
jno
or
imul
pop
lods
mov
jmp
mov
add
mov
ss
int
mov
add
push
inc
iret
add
movsl
xor
and
insl
pop
pop
mov
pushl
pushf
mov
out
mov
ja
xlat
cmpb
lahf
fnstenv
pop
shrl
test
dec
arpl
aam
push
xchg
insl
inc
sbb
mov
mov
push
and
lds
mov
in
shlb
mov
cmpsl
jno
repnz
inc
or
lods
mov
inc
pop
test
cwtl
inc
xor
xor
cmpsl
rclb
bswap
out
push
addb
cmp
pop
mov
insb
or
mov
dec
lahf
inc
out
bound
inc
xor
cmp
ss
jle
out
movsl
inc
or
mov
and
cmp
or
jge
add
and
lock
push
jmp
fwait
es
lret
push
sahf
psubsw
dec
gs
fnstenv
adc
mov
jno
cmp
fmul
inc
in
iretw
data16
mov
leave
xchg
ds
pop
inc
imul
jbe
loop
mov
fnsave
sbb
xlat
jae
cmp
inc
pop
sub
jo
ss
fdivs
jbe
sarl
imul
mov
jno
ja
test
push
cltd
je
bswap
aad
xchg
mov
xchg
xchg
dec
das
scas
int
adc
ret
dec
adc
mov
je
dec
fwait
loop
push
subb
mov
rcrl
jecxz
add
cltd
out
push
inc
inc
cmp
in
dec
sbb
push
gs
and
ja
inc
cwtl
cmp
inc
adc
movsl
ja
jle
stc
negl
adc
xor
mov
pop
shrb
mov
xor
movsb
pop
cmp
cltd
imul
popf
push
repz
pop
or
xchg
add
or
aas
push
or
shr
push
xor
fcomp
and
int
xor
and
inc
test
mov
push
and
dec
fldenv
mov
cwtl
lea
jmp
loope
mov
or
test
cmp
adc
scas
pop
lock
ret
cmp
fstp
adc
adc
xchg
mov
push
cmp
xor
dec
dec
lret
rcrb
sub
idivl
xchg
fwait
test
lahf
mov
and
lds
shll
push
inc
rcrb
dec
mov
mov
in
push
inc
inc
dec
push
inc
sbb
dec
pusha
ss
pop
or
and
dec
ss
aas
sbb
xchg
sub
in
subl
nop
dec
xchg
inc
pop
gs
xor
xchg
fisttpl
fwait
add
addr16
aam
adc
dec
mov
sahf
cld
or
pop
adc
aas
sbb
ljmp
push
push
adc
int
out
aad
push
mov
shl
mov
push
test
lods
das
lea
aaa
jmp
inc
push
dec
imul
jp
inc
inc
mov
mov
popa
or
jo
push
inc
outsb
sub
roll
mov
or
xchg
push
addr16
iret
in
xchg
mov
lods
imul
imul
lock
shlb
adc
repnz
and
mov
jbe
ja
push
clc
lods
fidivs
and
movsl
pop
addr16
mov
in
sub
push
cmp
mov
stos
cmp
cmp
pop
jge
mov
jl
and
push
inc
xchg
add
in
mov
mov
push
mov
cmp
add
push
sar
jb
adc
ss
push
jbe
mov
jb
shll
push
xchg
das
mov
icebp
or
cli
insb
pop
mov
mulb
loop
sub
adc
add
xchg
sahf
xchg
fisubrl
and
jecxz
xchg
mov
xchg
sub
orb
arpl
cmpsb
repz
rol
neg
mov
xchg
jl
jmp
ret
mov
jg
ret
aad
mov
arpl
out
pushf
xchg
mov
andb
xchg
pop
xchg
or
ret
cwtl
call
in
in
fs
cmpsb
mov
xchg
add
xchg
fidivl
lcall
movsl
pop
das
push
inc
scas
inc
fistps
push
xlat
ja
cmp
sub
cmpsl
ds
bnd
jo
mov
fiaddl
inc
pusha
lret
sub
pop
dec
cld
push
clc
cmp
push
pop
xlat
sbbl
and
pop
mov
mov
test
hlt
ss
dec
mov
ljmp
es
ss
insb
or
ret
push
ja
loop
fcomi
jns
dec
jbe
sub
push
imul
mov
mov
mov
cmp
mov
xchg
test
stos
add
xchg
mov
mov
sub
sbb
out
adc
adc
imul
mov
out
out
stc
data16
cltd
cld
out
add
sbb
pop
cwtl
lods
int3
popf
sub
push
stos
pusha
pop
or
iret
mov
xchg
stc
and
insb
pop
cli
cmpsb
mov
ljmp
push
aam
idivl
daa
aam
mov
mov
les
or
stos
addb
cmp
lea
jg
sub
sub
jmp
jge
lock
test
and
xor
pop
cmp
imul
popa
xchg
arpl
push
xchg
cmpsl
imul
mov
sbb
or
dec
cli
cld
mov
aas
jbe
in
fisttpl
gs
js
inc
cli
push
and
xchg
sbb
cmp
pusha
test
push
data16
jl
daa
pop
addr16
add
push
pop
jbe
stos
orb
das
add
jo
jne
int3
repnz
insb
jb
sbb
sub
add
mov
add
xchg
cwtl
xchg
inc
lret
xchg
movsl
pop
jbe
inc
jbe
not
cmpsb
or
push
and
or
dec
pushf
or
dec
mov
aaa
cmc
mov
adc
dec
aas
arpl
sbb
inc
fwait
inc
mov
sbb
ds
sub
cmc
jno
dec
repz
cmpsl
mov
mov
cmpl
mov
sbb
jne
pop
sbb
jns
loopne
xor
dec
xchg
lods
sbb
fldt
mov
imul
cmp
add
add
lods
hlt
xchg
or
xchg
jb
shl
cmp
loop
notb
shlb
push
mov
push
mov
ds
xchg
mov
inc
addr16
mov
adcb
xlat
sbb
scas
pop
jl
pusha
test
jmp
or
inc
iret
or
mov
push
and
leave
scas
adc
out
popa
add
jmp
js
mov
mov
in
cmp
xchg
adc
cld
dec
lret
lret
stos
fnsave
push
fldt
mov
mov
push
int3
lds
mov
aam
jo
dec
int
push
jle
sahf
sahf
mov
sbb
mov
imul
sbb
rorl
ja
fdivrl
mov
cld
fadds
mov
push
out
iret
fcmovnbe
mov
sub
mov
sbb
movsl
xor
push
sbbl
insl
test
leave
cmp
aas
xor
mov
cmp
scas
mov
loopne
test
push
sahf
leave
add
mov
sbb
pushf
mov
loope
jg
mull
jecxz
test
pusha
popa
dec
inc
nop
mov
dec
test
imul
cwtl
jno
std
loop,pn
cmp
add
ret
out
mov
clc
adc
xor
test
divb
flds
idiv
test
and
ljmp
mov
cmpb
imul
sub
adc
lea
jle
and
xchg
mov
out
add
test
jne
adc
sub
mov
xchg
inc
and
jo
out
call
dec
cltd
cmp
testb
pop
adc
xor
xbegin
repz
or
iret
in
jge
jg
pop
mov
ds
jecxz
push
dec
add
enter
cli
aad
scas
dec
fldcw
mov
imul
repz
icebp
and
aas
and
rcrb
xor
jmp
mov
and
pop
insb
rorb
cmp
outsl
push
ja
ss
pop
and
int
jl
faddl
imul
fs
je
mov
imul
sahf
mov
aaa
les
xchg
daa
cmpsb
pop
mov
push
push
sub
jg
xlat
or
rorl
xor
jle
xchg
jmp
sbb
xlat
mov
mov
cmp
lret
xchg
or
adc
sub
stos
inc
xor
ljmp
sti
lock
cmpl
pop
pop
push
cwtl
push
xchg
mov
jae
sub
cmpsb
fiadds
insl
fistl
rclb
inc
add
xor
xor
xchg
mov
inc
xchg
xor
mov
dec
test
decl
jns
into
inc
popf
into
adc
sub
xor
cmp
mov
call
lahf
pushf
pop
test
outsl
sub
int3
subl
cmpsl
test
dec
ljmp
es
loopne
sub
push
mov
add
cld
stos
add
mov
shrl
mov
sbb
popa
sub
lea
imul
movsl
test
in
lret
test
ss
adc
rcrl
mov
mov
ret
in
cltd
and
roll
sar
imul
pop
es
inc
or
shrl
mov
shll
or
andb
jns
ja
xchg
int3
adc
inc
jno
cmc
push
jnp
add
mov
fisubrl
lods
pusha
inc
addl
jae
add
jae
mov
ss
sbb
outsl
or
mov
mov
cmp
jp
xchg
loop
cmp
jns
arpl
xchg
jb
sbb
fldcw
mov
call
add
iret
test
test
mov
aas
call
sub
jmp
shrl
nop
add
pop
mov
shl
and
jne
out
sbb
jne
mov
pinsrw
fsubs
jnp
mov
lea
mov
out
xchg
cltd
push
rolb
sbb
nop
jno
xor
and
hlt
inc
sbb
mov
aaa
stos
pop
lods
cmpsl
test
outsb
sub
xchg
xchg
sbb
add
into
out
jmp
jle
mov
or
cmc
xor
or
jb
int3
int
adc
push
or
pushf
xchg
xchg
clc
xor
aam
stos
loope,pt
popa
inc
mov
std
jno
pusha
loope
nop
push
sti
inc
mov
negb
mov
push
inc
mov
aas
push
sub
fildll
inc
xchg
cmpb
xchg
roll
rcrb
inc
dec
movsb
sbb
mov
xchg
insb
add
int3
add
aad
cmpsl
repnz
pop
mov
cmpsl
stos
or
cmp
test
adc
outsl
push
add
adc
dec
adc
sub
daa
add
pop
in
or
push
mov
sbb
pushf
mov
push
push
sub
add
jno
mov
scas
mov
add
add
lods
imul
mov
sub
pop
mov
das
mov
push
pop
lahf
mov
lods
pop
mov
ret
push
insb
orl
enter
pop
gs
aaa
stos
lea
pop
insl
adc
push
push
pop
dec
and
mov
loopne
add
pop
in
pop
mov
gs
add
in
inc
sbb
das
in
fidivrs
push
mov
mov
repz
addl
test
fnstenv
hlt
dec
ljmp
mov
ficomps
pop
xor
movsb
xlat
repz
repnz
push
xor
ds
xchg
push
test
push
dec
push
add
test
mov
cwtl
and
jecxz
push
stc
mov
jmp
out
js
notb
jne
jg
icebp
cmp
xchg
lods
mov
fmull
mov
sbb
cmp
out
xor
xor
flds
sbb
mov
dec
pop
das
sti
mov
leave
cmpsl
jno
pop
mov
mov
js
ror
fcoms
cmpsl
jo
aam
xchg
addb
dec
jl
sahf
mov
push
sub
add
test
in
push
and
jg
rorb
les
and
pusha
mov
int
cmpsb
push
jne
das
and
jge
mov
pop
sarb
sub
dec
das
mov
mov
jge
jp
out
shl
fwait
mov
adc
jg
inc
pop
sbb
pop
int3
mov
mov
arpl
lea
push
pop
sbb
fstpt
cld
addl
mov
mov
ss
je
xchg
repz
and
sub
push
dec
insl
loop
addl
pop
cmpsb
adc
add
out
gs
xor
or
pop
shl
inc
movsl
data16
dec
lcall
pushf
pop
or
sbb
mov
jmp
push
jbe,pn
inc
mov
add
cmp
das
jns
mov
lret
mov
ljmp
cld
bnd
shrl
sarl
cmp
sub
popa
mov
imul
loop
lcall
push
shlb
lds
and
mov
adcl
push
pop
xlat
daa
sbb
imulb
pop
in
cwtl
jnp
ja
pushf
insb
popf
mov
dec
fimuls
jns
test
sbb
xor
pop
dec
xor
pop
fldenv
dec
push
js
jp
test
cmpsl
pop
ljmp
test
jg
scas
fsubl
outsb
popf
or
out
jns
push
xchg
mov
xchg
pop
jge
in
das
popf
cmp
xchg
inc
icebp
mov
inc
dec
lret
lods
sbb
je
pop
mov
fiadds
shll
arpl
psubusb
jo
sbb
jae
or
mov
rcl
loope
sahf
dec
mov
cmc
fnstsw
test
shll
or
xor
pop
add
fldenv
jo
cltd
or
push
adc
mov
aam
xor
xchg
in
xchg
lods
lea
xchg
mov
add
and
aas
mov
lock
push
cmpb
out
pop
cltd
fwait
inc
mov
cmp
repnz
gs
add
pop
sub
dec
ret
adc
inc
sahf
cmc
and
mov
adc
fbld
test
jbe
push
icebp
sahf
mov
xchg
pop
stc
addb
pop
fdivrs
rcrb
add
ja
xchg
xchg
out
out
outsl
jecxz
aad
bound
popf
adc
mov
jecxz
or
imul
fidivl
cmc
aas
mov
fucom
jne
xchg
and
jae
loopne
enter
loop
enter
jne
pop
dec
pop
stos
mov
xchg
into
incb
inc
push
xlat
adc
xchg
loopne
inc
xchg
aam
sahf
movsb
iret
and
lock
cmp
inc
cmp
push
mov
aaa
mov
pusha
aam
lcall
into
arpl
inc
mov
mov
mov
adc
xor
cmp
loopne
add
fs
cmp
pop
cld
add
push
shlb
mov
ja
popa
or
sub
xor
jno
dec
push
xor
cmp
mov
cmp
mov
ficompl
mov
adcb
xchg
mov
stos
sub
mov
pop
sub
xchg
cwtl
mov
push
pop
addr16
mov
popf
addr16
jmp
ljmp
fdivl
pop
sub
and
mov
cltd
pop
inc
push
test
and
inc
fcomi
inc
daa
dec
sbb
faddl
es
insl
dec
mov
mov
inc
subl
jnp
inc
aaa
arpl
mov
insb
mov
pop
xchg
cmc
mov
sub
sub
das
ljmp
mov
test
mov
mov
fcompl
mov
daa
lods
lahf
cld
lods
mov
lock
jecxz
out
mov
repnz
mov
or
aad
mov
mov
sub
fwait
and
fucom
mov
push
rorl
mov
or
mov
in
jne
iret
xchg
adc
jo
ficomps
cld
inc
xchg
fsubrs
add
pusha
mov
push
jb
push
xor
bound
and
xchg
popa
jmp
jmp
pop
adc
fs
mov
mov
pop
test
test
test
imul
jg
xorb
jno
cmp
sub
add
sbb
xlat
cwtl
dec
adc
out
inc
adc
xor
jns
xchg
and
xchg
mov
pop
popa
lock
cmc
fisttpl
inc
incl
xchg
addr16
out
dec
lods
jnp
lods
or
enter
xchg
sbb
xchg
shr
ficoml
das
and
and
pop
cmpsb
lret
sti
and
cmp
mov
xor
fstpl
fucomip
mov
faddp
dec
push
sub
ret
mov
mov
xchg
mov
out
fsubs
xchg
jbe
sbb
mov
cmp
inc
inc
repnz
jmp
lret
aad
adc
stos
loope
inc
cmpsb
sahf
shll
sbb
out
loopne
sarb
mov
jb
push
push
shll
and
cs
sahf
xor
iret
nop
and
outsb
bnd
sbb
in
pop
out
pop
in
mov
push
ret
adc
and
rcrb
pop
rorl
lods
imul
mov
test
xchg
cmp
aaa
push
icebp
imul
sti
inc
lret
aas
lret
imul
jle
adc
xchg
mov
js
aaa
or
dec
xchg
cwtl
mov
arpl
add
mov
aad
divl
push
int
adcb
sub
sbb
jnp
test
test
pop
lods
inc
fdivs
popf
loopne
loopne
add
test
jmp
cmp
cmp
cli
popf
and
call
dec
xchg
cli
movsl
jne
push
jo
sahf
pop
in
je
popf
imul
cmp
inc
pop
arpl
lea
repz
sbb
push
ja
mov
cmp
insb
cld
inc
inc
roll
fwait
jge
mov
bswap
fwait
cmp
in
pushf
rol
sarb
imul
add
or
jp
mov
sbb
into
call
pop
cmp
stos
outsb
mov
and
shl
mov
lock
dec
jge
mov
subl
mov
pop
addl
adc
fwait
out
outsl
jmp
ret
dec
jbe
push
push
push
sahf
dec
mov
lds
sbb
inc
adc
pop
movsb
push
fiadds
cmp
enter
fstpt
bound
lcall
call
dec
jmp
int3
cld
cmc
cmp
mov
subl
pop
pop
sub
push
jb
xor
and
mov
mov
jp
cs
fistpl
test
cmp
mov
sahf
faddl
mov
pushl
cwtl
sbb
sbb
push
pop
push
in
fidivs
inc
insl
movsb
popf
pslld
cld
dec
test
mov
add
iret
or
xor
dec
jns
adc
adc
pop
ret
lea
test
inc
jnp
or
shlb
gs
mov
sar
and
fcoms
popa
sub
fwait
mov
inc
pop
jbe
pusha
xchg
sbb
push
jo
mov
mov
cmp
iret
mov
iret
xchg
aas
lea
incb
jne
dec
outsb
fucomp
ja
jb
in
jmp
xor
cltd
sub
mov
or
js
add
mov
scas
inc
loope
sti
cmpb
mov
pushf
lods
js
fisubrs
std
daa
sti
shll
out
je
loopne
and
adc
out
or
data16
add
test
mov
cmp
sbb
inc
nop
sti
pop
testl
push
jle
xlat
mov
push
loopne
mov
or
adc
test
int3
push
andl
push
add
cmp
stos
dec
and
push
mov
pop
push
xor
cmp
int
imul
sti
clc
jns
cmp
mov
jb
je
scas
push
adc
xchg
enter
cmp
ljmp
push
xor
insl
loope
mov
mov
add
mov
mov
dec
in
dec
or
xchg
xchg
adc
je
mov
test
iret
pop
xlat
jle
out
mov
leave
and
mov
or
pop
std
loopne
pusha
ljmp
push
sub
adc
nop
lret
ja
mov
out
mov
repnz
ja
mov
cli
fnsave
xchg
fwait
mov
out
test
ss
sarb
imul
out
push
mov
push
push
mov
in
xchg
icebp
cmp
xchg
rolb
push
in
jnp
jmp
mov
mov
test
ds
testl
insl
sbb
add
inc
sbb
inc
movsl
sub
fdiv
dec
sub
fmuls
leave
inc
imul
fcomps
mov
sbb
gs
mov
cld
sbb
sub
rcrl
lret
pop
jmp
lcall
bound
push
pop
push
movsl
jne
stc
xor
or
jl
je
cmp
push
mov
and
out
jnp
xchg
inc
fists
in
xor
xchg
cmp
jno
sahf
mov
xor
push
ss
jg
xlat
js
add
icebp
sub
in
shll
pop
mov
cs
add
test
push
sahf
pop
aas
mov
ficompl
dec
aas
adc
fbld
jae
scas
sbb
pop
cmc
movsb
stc
outsl
test
movsl
inc
outsb
mov
ljmp
add
bound
aas
sbb
push
and
or
dec
mov
fwait
and
mov
scas
mov
stos
test
scas
in
add
pop
fisttps
jp
ret
xchg
pusha
dec
pop
out
sub
sbb
mov
in
xor
add
loop
cwtl
loop
xchg
push
jb
ss
pop
xchg
jae
sub
xor
xchg
imul
nop
sub
push
pusha
shll
xor
ss
mov
push
shll
pop
and
or
fsin
daa
xchg
int3
lret
adc
rclb
pop
sbb
push
inc
rcrl
stc
in
mov
out
cmpsb
and
push
sub
imul
stos
in
stos
jecxz
dec
add
sbb
or
out
idiv
inc
push
in
mov
test
aaa
mov
xchg
notl
xchg
push
cmp
test
dec
dec
icebp
xor
inc
and
mov
nop
sbb
fstps
shlb
gs
test
sar
mov
or
repz
std
mov
out
jae
xchg
pusha
jg
and
add
xor
ss
test
repnz
inc
aam
adc
xlat
jnp
adc
jbe
and
insb
mov
cs
dec
sbb
jns
pop
inc
cmpsb
inc
out
mov
xchg
aaa
add
xchg
mov
xchg
xor
cmp
aam
xchg
jne
enter
cltd
mov
repnz
push
push
inc
or
xor
sahf
sub
aas
stos
ss
fwait
mov
lock
mov
enter
and
and
pop
jp
push
pusha
jbe
fnsave
es
pop
imul
leave
test
sbb
sbb
icebp
jo
test
popa
shl
fbld
test
enter
lock
cmpsl
jmp
jb
mov
test
lret
and
lea
jns
adc
fnsave
mov
and
add
jge
push
in
and
data16
xchg
add
rcll
xchg
inc
popf
add
in
hlt
je
in
add
push
flds
cs
xor
ret
testb
addr16
mov
int
cmp
mov
xlat
mov
jecxz
push
push
iret
fistps
ljmp
cmpsb
pop
lock
sub
aaa
jnp
and
sbb
jae
fisubrl
ret
icebp
mov
or
imul
cwtl
sahf
adc
imul
xor
jl
out
xor
ret
outsl
call
es
rclb
movsl
rclb
jmp
shlb
stc
out
jbe
xor
add
cmc
imul
ja
loop
aas
ret
and
mov
ret
push
fsubr
sbb
add
jns
addr16
add
pop
and
lds
inc
xchg
sub
mov
cmp
das
aam
sub
push
mov
sbb
inc
sub
xor
lretw
test
js
cli
nop
std
sbb
pop
in
rcrl
mov
xor
xchg
ss
push
add
in
jmp
popf
xchg
dec
push
inc
test
jmp
add
or
pop
loop
and
dec
das
xacquire
xor
sub
jae
aam
test
pop
bound
fwait
inc
xor
jg
xor
push
xor
pop
ds
dec
cmp
mov
cwtl
adc
nop
fs
cltd
mov
dec
lret
andnps
jle
insl
mul
negl
jno
das
ss
mov
xor
push
inc
dec
aam
enter
scas
jp
pop
push
pop
jbe
sbb
inc
lcall
sbb
lds
sub
mov
aaa
test
mov
or
sbb
rcrb
mov
shl
lods
push
mov
cmp
pop
shlb
cmpsb
push
pop
adc
lahf
inc
sub
daa
and
push
dec
push
loopne
and
pop
fldt
test
mov
lcall
orb
addr16
xchg
test
jno
push
lods
arpl
inc
mull
xor
divl
fwait
mov
mov
call
mov
lods
xor
mov
push
jl
daa
add
dec
or
push
aad
loopne
and
and
adc
jecxz
push
lock
orb
int
push
cmp
andl
lds
repz
aas
sbb
cmp
xor
adc
aaa
std
adcl
mov
pop
mov
dec
xlat
mov
jno
inc
mov
fnsave
pushl
adc
je
dec
mov
or
adcl
insb
into
fstl
inc
aas
cwtl
ret
add
mov
mov
outsb
and
add
arpl
test
in
and
fucom
mov
cmp
pop
push
mov
pop
inc
inc
outsl
sbb
test
add
jbe
insb
sbb
jns
bound
jmp
ljmp
dec
push
lcall
aam
push
mov
push
inc
cmp
pushf
push
rcl
ficoms
lods
push
jns
lahf
mov
add
jle
mov
hlt
lock
sarb
xchg
jmp
push
shlb
mov
xchg
and
mov
mov
xor
test
mov
jg
cltd
add
and
or
jmp
sub
enter
jo
jle
outsw
fwait
sbb
je
add
imul
lret
inc
cmp
fbstp
inc
ret
adc
das
out
js
fidivrl
xor
sbb
sub
outsl
rclb
sbb
jno
repnz
mov
mov
sub
xchg
sbb
or
movsb
sub
or
pop
sub
adc
pop
fldenv
fdivrs
dec
ret
xor
movsb
popa
les
in
les
lods
add
sbb
sbb
push
pop
iret
or
sub
jg
jo
add
xchg
xor
das
mov
clc
popf
ja
sti
xor
mov
lds
mov
cmp
jb
cmp
insl
jge
cmp
leave
pop
rorl
adc
jno
pusha
xor
lea
xor
in
push
movsb
mov
popa
ret
or
sarb
inc
and
pop
lret
push
xchg
pop
fdivl
add
xchg
pop
mov
sbb
mov
mulb
sbb
mov
ret
dec
repnz
mov
and
in
in
insl
mov
pop
and
scas
sub
int
mov
fucomip
inc
fcoml
repz
mov
idivb
cltd
out
pop
and
lea
cld
sbb
lret
mov
lret
ret
js
loopne
mov
imul
testl
pop
aam
cmp
xor
mov
test
add
jne
addr16
xor
cmc
js
jl
cltd
xor
mov
xlat
sbb
shl
scas
jecxz
cmpsb
jnp
mov
dec
scas
mov
push
lret
aam
iret
shll
fs
lock
orl
sub
adc
jmp
outsl
pop
je
cmpsb
in
loope
cltd
and
scas
lea
ss
dec
xor
shl
mov
out
adc
adc
sub
repnz
out
or
mov
arpl
ja
scas
adc
leave
inc
loop
adc
scas
inc
push
outsb
cmp
pop
push
imul
popf
sub
decl
aad
dec
adc
lcall
test
sbbb
pop
or
jbe
xchg
jl
or
inc
mov
jbe
movsb
adc
ret
in
addr16
movsl
fstps
jbe
xchg
and
pop
pop
dec
repz
mov
std
jg
or
call
push
mov
outsb
ret
cmp
inc
orl
add
inc
jb
stc
dec
jmp
adc
sti
out
fwait
pop
adc
arpl
sub
pop
cld
shr
push
maxps
idivl
loopne
or
cld
adc
jo,pt
cld
xchg
jno
shlb
aad
addr16
sti
ja
daa
lods
ljmp
push
mov
lods
in
call
lsl
sarl
arpl
adc
mov
gs
addr16
hlt
adc
push
rorb
arpl
jb
push
push
in
dec
adcb
dec
sarl
insl
dec
ja
pop
lret
push
add
imul
sbb
push
inc
cmp
xor
lahf
pop
aaa
xor
in
jg
mov
pop
lods
lret
sbb
jae
xor
xchg
std
mov
cmp
push
adc
xorb
popf
dec
movsb
push
jg
shrl
jle
cmp
push
jl
mov
cmp
sbb
in
fneni(8087
bound
mov
mov
fwait
push
mov
mov
cltd
pop
cmp
sub
dec
rorb
out
fs
inc
sbb
and
mov
loopne
pop
movsl
ret
inc
int3
out
repz
mov
inc
nop
jo
gs
push
ja
inc
dec
loopne
mov
pop
inc
jecxz
inc
cmpsl
rorb
xor
inc
xor
stc
ja
sbb
push
aam
iret
rorl
mov
cmp
xchg
loop
jbe
pushf
xor
cmpsl
aam
fildll
or
mov
test
mov
pusha
cld
out
in
pop
cs
lret
sbb
repnz
mov
xchg
cltd
subl
inc
xchg
dec
out
cltd
ret
scas
dec
negl
jl
jl
int
dec
jg
or
fbld
out
xchg
rol
mov
cmpsb
loope
vmovhpd
xchg
cmp
xchg
jp
scas
or
mov
push
xchg
into
inc
mov
inc
lcall
sub
lret
cltd
inc
fwait
aad
adc
nop
xor
lahf
mov
popa
push
xor
add
sub
sbb
loopne
dec
test
mov
push
clc
fildl
sub
bound
loop
fpatan
sub
nop
ficoml
sub
xchg
xchg
sub
pop
sbb
xchg
gs
cs
lret
sbb
add
dec
pop
mov
addr16
adc
and
das
hlt
or
call
sbb
into
ljmp
leave
pop
mov
push
cmpb
lahf
xchg
mov
jb
mov
dec
mov
sub
jae
push
imull
pop
dec
mov
addb
shlb
int
cmpl
vmovsd
imul
inc
les
xchg
and
or
iret
push
test
imul
nop
out
push
pushf
das
dec
int
xor
call
dec
mov
ds
xor
jnp
mov
adc
imul
shlb
adc
add
fstps
cmpsb
sub
inc
in
push
rcrl
aas
dec
dec
mov
stc
je
jge
sub
test
sbb
stos
and
push
fmull
xchg
mov
and
push
sub
fisttpll
mov
lret
xor
xchg
push
cmp
loope
push
xchg
sub
mov
cld
das
sahf
or
dec
fstpt
int
decl
cld
lds
int
std
ja
push
cs
inc
mov
mov
stos
mov
adc
jne
inc
das
xchg
fwait
cmp
cmpsb
repnz
movsb
dec
cld
scas
pop
cmp
dec
xchg
inc
loop
cmovns
cmp
xor
dec
out
add
pusha
adc
fnstsw
add
cmp
int
mov
sbb
loopne
pushf
mov
daa
dec
lods
insb
xor
popl
out
jno
mov
js
in
mov
addr16
jo
call
outsl
mov
bound
mov
in
xchg
fwait
jnp
jno
jo
xchg
clc
push
shrl
jp
roll
je
fdivrl
shr
cmp
push
xlat
out
data16
minps
xor
sub
divb
sub
push
lahf
cmp
insb
push
out
xor
lcall
dec
leave
fistps
jo
push
push
fwait
dec
dec
mov
inc
and
imul
fwait
xlat
pop
mov
xchg
sub
sub
jmp
mov
xchg
aam
adc
das
and
repz
xchg
sub
sub
addl
cmpb
mov
dec
and
sbb
pop
in
mov
insb
jnp
push
test
mov
fwait
push
push
add
add
pop
cmpsb
popf
cmc
sub
cmp
mov
and
xchg
xchg
test
jmp
and
sti
mov
or
mov
pushf
out
mov
mov
sbb
adcb
jbe
or
add
inc
and
mov
sub
xchg
pop
push
dec
aad
daa
jl
mov
stos
addb
sbb
inc
cltd
add
jg
fnsave
jg
push
lea
fisubl
popf
sbb
xor
inc
sub
dec
cmp
stos
or
test
div
mov
sbb
cmp
xchg
mov
aas
jmp
aam
das
fnstsw
shrb
push
fistpl
pop
fstl
jbe
push
sub
jo
lret
sub
xor
sub
enter
xchg
movsb
mov
xchg
pop
jno
pop
mov
mov
mov
mov
arpl
dec
xchg
icebp
adc
adc
jg
cmp
or
inc
or
and
dec
and
mov
xchg
jnp
negb
jecxz
lcall
clc
subb
mov
xor
or
cmpl
stos
push
xchg
mov
mov
mov
fdivl
push
sbb
into
cli
xor
rclb
lret
jo
test
mov
cmp
and
int3
adc
data16
fwait
out
mov
stos
mov
sbb
jg
outsb
and
and
mov
or
cmp
pop
fsubr
mov
jo
out
sub
pop
outsb
pop
inc
fnstsw
jmp
pop
pop
mov
test
icebp
jmp
orb
jp
mov
int3
into
dec
dec
and
enter
ljmp
sub
test
imul
mov
pop
daa
incb
outsl
pop
ds
shlb
push
sbb
mov
mov
or
push
mov
scas
lock
inc
addb
or
push
hlt
cld
xor
test
inc
cltd
movsl
ja
pop
push
xchg
pop
mov
xor
or
pusha
mov
pop
nop
xchg
pop
cwtl
and
inc
and
jmp
sub
cmp
scas
mov
insb
loopne
icebp
cmc
xor
sbb
mov
bound
dec
mov
jp
pop
cmp
xchg
xor
addr16
mov
jmp
scas
sbb
jmp
xor
pushw
cmp
cltd
setl
xchg
sub
fisubrl
dec
xor
jmp
sbb
cli
mov
out
lock
mov
fldl
inc
pop
inc
mov
nop
in
cmp
jno
pmullw
daa
pusha
mov
mov
ja
sarb
jnp
pusha
stos
mov
fdivrp
and
pusha
push
adc
jns
mov
loopne
cmp
dec
movsl
mov
das
xlat
add
or
and
dec
push
gs
jmp
pusha
roll
movsb
mov
inc
mov
push
mov
shll
in
pop
loop
clc
jo
int3
add
inc
mov
push
push
jne
adc
mov
ret
lds
nop
and
sarb
adc
mov
xor
jmp
inc
sbb
out
test
movsl
sbb
stc
dec
xor
bound
loop
mov
aam
notb
sbb
xchg
or
shlb
in
jns
push
out
mov
mov
imul
ret
inc
hlt
sub
xor
je
loopne
hlt
pop
lret
movb
pushf
fdivrl
in
mov
jl
daa
mov
sbb
cmp
cli
jns
out
ljmp
dec
loop
nop
sti
loop
inc
add
les
or
icebp
mov
and
imul
mov
dec
pop
jne
mov
or
mov
mov
out
mov
addb
int3
adc
jecxz
ljmp
fstp
lret
xor
out
adc
sbb
shll
std
fs
ss
push
out
cld
loopne
test
pop
and
lods
mov
int
pop
jecxz
xlat
add
insb
fbld
or
lret
xor
xchg
lcall
inc
xor
xchg
sub
jns
push
test
cs
ss
ljmp
mov
xor
shrl
imul
dec
xchg
loop
test
mov
jno
mov
xor
push
cs
xchg
and
gs
sub
and
xlat
lea
jno
cmc
mov
push
test
mov
loope
enter
rcll
ss
push
lods
dec
jne
xorb
dec
push
shlb
rcll
mov
je
rol
nop
vdivss
dec
lret
daa
xchg
out
sarl
mov
paddw
mov
or
lret
xchg
push
push
push
jae
push
dec
pop
xchg
push
push
mov
insl
fistpl
xor
cmp
mov
dec
mov
xchg
xchg
pop
shll
push
daa
or
loop
mov
test
cmpsb
mov
sub
test
inc
push
inc
lret
jnp
mov
add
fcmovne
vmovups
push
cmp
out
cmp
xlat
aam
fldl
ficoml
push
hlt
jg
mov
pop
nop
loop
cmp
js
mov
cmc
xchg
repnz
pop
addr16
stos
rcr
jecxz
jb
outsl
push
mov
popf
cli
incb
mov
inc
ja
dec
inc
jmp
inc
cwtl
or
lods
es
push
sub
subb
jnp
jmp
mov
push
xchg
inc
or
loopne
nop
jmp
lds
jge
imul
jo
dec
fcoml
push
mov
inc
test
mov
imul
jb
test
mov
cli
xor
in
xchg
mov
xor
jge
out
xor
movl
outsb
push
cmpsl
je
jns
insl
mov
sbb
push
dec
cld
int
stc
shl
pop
or
test
in
pusha
add
or
dec
cmpsl
jae
into
or
jb
and
das
aam
inc
pusha
dec
add
jp
std
frstor
sbb
cmpsl
jb
in
mov
pop
jmp
cmp
jle
mov
mov
or
mov
cltd
lret
movsb
pop
push
adc
xlat
adcl
lods
cmpsb
shlb
add
sub
vmwrite
push
fstl
icebp
outsb
sub
sti
int3
dec
push
xor
aad
in
or
pop
jno
push
popa
out
dec
mov
sub
loopne
cmp
mov
mov
lds
inc
leave
dec
fisubl
push
sti
psubusw
int
mov
or
shrb
das
sub
orb
fwait
sbb
adc
mov
sub
add
jbe
jmp
clc
inc
jp
dec
loop
or
inc
and
nop
xacquire
mov
nop
pop
pop
insb
ss
pop
mov
sbb
imul
sub
push
lea
stos
push
shll
cmc
xchg
daa
lahf
mov
mov
or
jmp
sbb
lret
jp
push
pop
jne
push
or
mov
adc
jae
jnp
repnz
mov
xor
and
ss
ret
dec
xor
fldt
mov
iret
ja
mov
xchg
and
sub
sti
sub
out
cmp
fsubl
aam
inc
push
add
dec
pop
rorl
sbb
mov
push
adc
cmp
xchg
pop
cli
mov
pop
into
mov
faddp
mov
pop
stos
push
cmp
popf
cmp
xor
icebp
scas
or
imull
jno
mov
jnp
jb
aam
into
les
stos
adc
iret
push
das
inc
cwtl
rcrl
imul
or
or
insl
jecxz
jno,pn
out
mull
add
sub
fwait
xor
mov
xor
int
lahf
movsb
sub
inc
xchg
mov
inc
sbb
lret
test
xchg
and
sbb
mov
cmp
jp
ret
filds
ret
lretw
sbb
xchg
mov
xchg
jmp
xchg
sub
scas
loop
sub
mov
sub
hlt
inc
mov
jnp
or
lahf
mov
mov
fcomps
mov
mov
test
pop
divl
sbb
sbb
pusha
cmp
mov
es
mov
xchg
out
mov
push
xchg
push
inc
outsl
andnps
xor
xchg
dec
push
adc
sub
lock
jb
aas
cmp
and
jmp
hlt
cmp
sbb
pusha
adc
cmpb
xlat
cmp
mov
sti
lret
mov
or
les
jae
rol
fwait
dec
std
inc
lds
sub
push
xor
or
sbb
test
arpl
or
push
fstps
stos
inc
stos
adc
lret
xor
and
jnp
sub
out
mov
outsl
ret
lcall
stos
or
jmp
sahf
fwait
out
into
pop
adc
sub
mov
outsb
cmpsl
jmp
cld
jp
leave
insl
int3
inc
cmpsb
int3
test
pop
popa
bnd
adc
jne
push
js
xor
cmp
dec
xchg
fldenv
lock
xor
mov
faddl
lods
fwait
scas
fs
xchg
sub
jl
push
insb
and
jo
ja
mov
stos
mov
sarb
cld
add
mov
jmp
pop
xchg
jecxz
pop
and
enter
mov
cmp
addr16
mov
add
mull
jo
das
insb
sub
jl
ljmp
and
push
or
adc
jge
sub
sub
in
xor
fcompl
aas
adc
and
mov
pop
outsb
insb
dec
jno
jecxz
sbb
push
cmp
jae
or
scas
leave
bound
and
nop
fmul
pusha
push
ja
add
es
mov
adc
out
mov
xchg
je
inc
pop
cltd
lret
scas
pop
aam
inc
icebp
daa
inc
mov
or
add
in
mov
or
ljmp
cmc
xor
mov
out
push
jo
pop
mov
or
xlat
mov
inc
jg
cmp
das
xchg
adcb
clc
pop
push
pop
das
xchg
or
push
loopne
fadds
mov
aad
test
push
js
add
jbe
popl
popf
cs
mov
lcall
inc
scas
lods
pusha
pop
popa
xchg
dec
jge
xchg
fidivs
call
jle
arpl
fxch
xor
cld
ja
cmpsb
add
mov
sub
adc
mov
in
mov
push
decl
xchg
add
jno
cs
js
push
add
jbe
aas
fwait
loop
inc
cmp
xchg
repz
fstps
xor
fldt
push
lods
in
push
nop
or
push
pop
dec
mov
lds
adc
xor
fiadds
jo
out
test
sahf
jo
fsubs
push
cmp
jne
xchg
hlt
mov
iret
test
cld
scas
xlat
pushf
ljmp
aaa
jg
rorb
adc
jae
inc
cmpb
hlt
mov
push
add
xchg
int3
sub
and
mov
xchg
out
fstps
sub
sbb
sub
insl
insb
mov
testb
jae
and
insl
stc
and
testl
test
rclb
lret
out
repnz
xchg
mov
fldt
or
mov
cmp
mov
cs
inc
mov
sub
mov
jl
jecxz
lods
test
imul
fbld
cmp
xchg
cmp
rolb
cli
daa
leave
xor
push
jmp
hlt
fildll
xchg
inc
sahf
pop
xchg
idiv
scas
jle
aam
repnz
or
test
xchg
fists
jg
iret
mov
popf
loope
bound
movsl
shll
les
xor
into
in
mov
ret
cmp
and
shlb
cmp
stos
or
sub
stos
out
xchg
jno
push
sahf
inc
enter
pop
mov
movl
mov
data16
adc
mov
pop
pop
mov
in
lcall
insl
mov
imul
pop
jo
inc
adc
mov
xchg
subl
je
ljmp
pop
jg
scas
popf
or
inc
jecxz
loope
cmp
pop
mov
lock
and
lods
cmp
lret
add
pop
mov
pushf
call
mov
outsl
mov
ds
push
xchg
ret
aam
add
xor
mov
cmp
lods
push
cmp
subl
int
fnsave
cmp
aad
gs
jecxz
loopne
xor
or
jne
sbb
repz
sbb
cld
cmp
and
cmc
pop
dec
popf
xor
stos
xchg
dec
sub
cltd
sub
ds
mov
aaa
push
mov
cwtl
cmc
inc
ds
sub
inc
adc
sub
push
inc
cmp
xor
jle
mov
fistpl
fisttpl
fimuls
pop
orb
jnp
fmuls
jg
inc
cs
mov
repnz
idivl
adc
cmpsl
jl
test
leave
dec
lahf
out
dec
jbe
jnp
and
out
pop
dec
add
adc
pop
insl
mov
add
sarl
mov
push
xchg
dec
lret
sbb
jmp
fcomps
cmp
in
mov
inc
cmpsl
mov
or
stos
sub
out
dec
push
lock
jo
mov
dec
das
int3
jl
pop
test
xchg
loopne
aaa
jae
ds
call
pop
hlt
sub
push
sbb
mov
pop
lods
or
jmp
xchg
les
fs
int3
dec
adc
shlb
pop
insl
add
lds
lret
mov
adc
dec
into
popf
xchg
add
sbb
fcmove
test
iret
inc
jp
cmc
mov
or
and
pop
jl
insb
mov
or
push
outsl
jo
add
dec
pop
push
aas
sbb
jae
in
mov
int
xchg
inc
inc
xor
adc
add
out
cmpsl
push
ret
addr16
in
cmc
add
inc
sub
inc
ja
mov
rcrl
lahf
sub
in
add
and
cmp
cmpsl
mov
push
out
lods
mov
adc
add
push
inc
addr16
cmp
xlat
cmp
pop
add
jecxz
ja
inc
in
cwtl
inc
sahf
bt
fcompl
loop
leave
inc
repnz
inc
cmp
xchg
in
mov
loope
sub
xchg
sub
mov
repnz
mov
dec
divl
loopne
cmp
push
fisttpll
shr
outsl
ljmp
std
cmp
fistpll
and
pop
insb
test
iret
dec
mov
jg
fs
sub
push
mov
nop
pop
setle
xchg
idivl
cmpsl
cmp
jo
pop
dec
dec
nop
mov
pop
test
fs
xor
insl
adc
mov
sub
je
or
insb
es
pop
adcb
sub
inc
cmp
nop
pop
pop
adc
mov
mov
mov
add
std
push
sub
rclb
pushf
fucomip
cltd
pop
leave
dec
stos
pop
sbb
sbb
popa
mov
push
loope
flds
fldt
push
add
or
cmp
xor
enter
lcall
in
scas
pop
mov
cmp
pop
loope
call
in
fwait
in
mov
xchg
in
push
xchg
es
xor
sbb
aas
add
les
lods
testb
sub
fisttpl
xchg
pop
leave
mov
pop
arpl
jp
orl
in
jle
arpl
inc
je
lea
imul
lcall
rcll
sbb
or
lahf
gs
imul
inc
stos
mov
xchg
jp
xchg
leave
xchg
nop
xor
std
cmp
dec
out
mov
sbb
mov
inc
stc
mov
icebp
push
xor
shr
cli
ja
add
fcmovne
fidivl
or
je
inc
loopne
pushl
adc
mov
mov
and
mov
lock
cmp
mov
aad
mov
xlat
mov
push
sub
sahf
mov
fcomps
mov
xchg
dec
mov
push
dec
stc
adc
and
mov
es
cmp
aam
adc
lcall
fwait
out
cld
xchg
nop
stc
lret
repnz
les
mov
ds
clc
mov
jmp
leave
and
dec
testb
lcall
inc
push
ret
pop
negb
mov
jle
jb
nop
or
adc
dec
push
and
icebp
ljmp
jb
std
add
lcall
dec
push
mov
mov
subb
aad
loopne
lock
push
pop
mov
xchg
stos
jge
stc
loopne
push
out
dec
xchg
fistps
outsl
push
push
leave
and
ljmp
inc
push
xchg
ret
out
mov
and
sahf
or
out
shrb
xor
ret
add
push
mov
mov
js
sarb
icebp
icebp
adc
xchg
loop
daa
pop
lock
add
loope
aas
push
ss
dec
fs
or
mov
fcmovu
push
stos
inc
test
jge
pop
mov
data16
push
jno
es
add
mov
mov
fwait
pusha
sarb
xor
add
mov
jge
popf
mov
mov
test
andb
jno
sbb
loop
ror
push
in
and
imul
js
sub
jge
mov
pushaw
push
add
adc
jne
push
insb
jmp
inc
push
cwtl
lret
lcall
aam
gs
stos
pop
sub
mov
dec
xor
data16
inc
push
xor
jae
lret
and
dec
hlt
adc
mov
insb
fildl
adc
and
mov
mov
xchg
inc
lret
in
outsl
jae
pop
shrb
xchg
xchg
mov
mov
ja
sbb
dec
cmp
enter
notl
ret
test
jg
mov
add
stc
jle
or
shrb
push
inc
ds
cld
xchg
outsl
pop
or
xchg
xchg
stos
lahf
repnz
sbb
cmp
dec
es
mov
jbe
ss
addr16
pop
loope
dec
movsb
rorb
mov
jmp
mov
xchg
add
stos
arpl
insl
jle
fsubs
in
push
mov
sbb
jb
push
and
repz
dec
sbb
shll
lods
lds
fadd
loope
fnstsw
enter
xchg
insb
push
and
xlat
cmc
pop
xor
loope
add
cli
mov
push
mov
jns
jae
in
adc
out
fwait
push
std
add
lods
push
mov
cltd
out
pop
xchg
call
cmp
pop
scas
in
jle
inc
jg
sti
arpl
sub
mov
and
outsb
mov
mov
ficomps
mov
int3
adc
or
and
mov
outsl
mov
pop
xor
test
movsl
add
jp
mov
or
mov
jl
cli
sub
adc
push
sub
cmp
mov
sub
add
inc
ret
out
addr16
repnz
cmp
inc
filds
mov
int3
cmpsb
mov
adc
cmpsb
out
push
out
mov
sub
clc
out
sbbl
lahf
mov
mov
dec
sub
daa
mov
int3
jge
xor
or
sbb
mov
lds
mov
rclb
arpl
cmpsb
fsubrs
mov
clc
pop
push
mov
lcall
cmp
push
and
pusha
pop
jne
mov
ret
shlb
pusha
std
mov
dec
and
enter
mov
aam
pop
push
mov
xor
ret
pop
and
int3
adc
pop
data16
mov
nopl
jg
fcompl
fwait
jecxz
xor
sbb
and
adc
shrb
adc
push
xor
and
arpl
adc
test
push
outsb
lcall
cmp
and
pop
dec
dec
jno
add
test
pop
xchg
rcll
sub
jo
out
fbld
jle
xor
pusha
mov
mov
dec
pop
mov
js
xchg
pop
jns
scas
mov
xor
pop
sti
push
lret
inc
outsb
loope
mov
lret
push
je
jp
lods
and
mov
movl
xchg
inc
test
loop
add
sbb
push
push
roll
in
shr
ret
mov
popa
iret
push
inc
cli
mov
cli
inc
pushf
and
mov
lock
mov
js
addl
loope
pop
xchg
mov
xchg
in
mov
jle
xor
imul
inc
add
adcl
dec
mov
loopne
xlat
test
push
test
and
stos
jns
mov
inc
ljmp
shrb
dec
adc
and
xchg
dec
loopne
jno
or
fcoms
dec
fucomip
imul
fcoml
stc
out
dec
mov
push
int
loop
push
cwtl
int3
out
in
pop
jecxz
or
xlat
int
pushf
cmp
mov
jno
jmp
or
add
push
daa
inc
out
stc
out
cmp
lcall
call
shlb
pushf
sahf
or
dec
sarl
leave
ss
outsl
sub
je
cs
mov
int
xchg
std
mul
hlt
pop
lret
jbe
lcall
fucom
dec
outsb
sub
push
sahf
dec
movsl
mov
mov
out
fadds
cmpsl
and
push
sti
out
or
scas
fdivl
adc
inc
shrl
test
mov
xchg
sbbl
fcompl
lods
add
push
push
pusha
test
pop
mov
xchg
pop
cmp
sahf
sbb
mov
outsl
sub
push
mov
jbe
cltd
push
and
adc
in
xchg
inc
clc
mov
fistpl
mov
shl
xor
sbb
xchg
out
cld
push
or
mov
mov
or
rol
roll
lds
dec
mov
sahf
bound
fdivrl
shll
stos
in
fbstp
cmpsl
rcrb
mov
xchg
or
and
ja
cmp
lcall
fildll
sti
push
ss
call
mov
inc
std
inc
mov
fxch
lret
inc
out
sub
mov
jecxz
cmpsl
addl
inc
sub
imul
cmp
mov
test
xorb
mov
and
in
aaa
push
add
mov
cmpsb
shl
mov
xor
mov
xor
pop
popf
xchg
ret
cmp
sti
popa
xchg
push
jl
hlt
sbb
scas
mov
pop
pop
push
mov
les
ud0
rcll
aam
cli
stos
popf
push
test
test
cmp
pop
jae
scas
mov
cwtl
loope
push
or
sub
rolb
adc
mov
sarl
je
popf
pop
popf
stos
push
xor
cmpsl
fs
bound
aaa
movsl
push
xchg
add
pop
aad
leave
xchg
scas
xor
test
dec
subb
lcall
cwtl
movsl
pop
out
cltd
inc
inc
xchg
mov
arpl
pop
add
cli
aam
xchg
jno
dec
fwait
sbb
xor
pop
lcall
pop
push
sar
outsb
mov
mov
addb
mov
mov
adc
mov
sub
scas
pop
dec
xchg
int
inc
inc
push
mov
pop
push
lock
push
cltd
ret
int
mov
add
or
jg
xchg
jp
ja
ret
push
repnz
scas
adc
testl
cs
cmp
pop
adc
insl
adc
rolb
je
ret
adc
scas
lcall
push
test
sbb
out
and
pop
xor
hlt
xchg
iret
outsl
cmpsb
push
divl
cld
adc
sub
movsl
mov
pusha
repz
sarb
mov
fnstcw
aam
mov
loope
int
into
aam
cmc
dec
data16
xor
pop
daa
or
int3
lret
leave
or
sub
aaa
xor
push
in
xchg
jo
lods
fimuls
xorl
xor
pop
xchg
out
xchg
dec
imul
lock
sbb
subb
adc
aad
ja
jge
mov
sub
dec
out
pop
shll
jbe
dec
nop
adc
dec
scas
movsl
fldt
mov
lret
xlat
add
add
aas
sub
rcrl
mov
adc
enter
rolb
cmp
jg
jne
sahf
js
ss
mov
mov
es
loopne
loope
addr16
jecxz
dec
cli
out
out
mov
enter
iret
and
jo
pop
dec
pop
ja
dec
dec
pushf
cmpsl
cltd
andb
fld
xchg
popf
push
adc
inc
repz
inc
aam
inc
popa
js
jmp
sarb
jmp
push
es
dec
inc
cwtl
adc
jae
cmp
iret
push
mov
in
dec
jnp
pop
cmpsb
out
scas
jnp
push
inc
outsb
lock
int3
std
sub
rcl
lret
mov
ret
push
jae
lea
repnz
lea
or
add
imul
inc
movsl
mov
push
jne
lock
outsb
pop
fsubs
fnstcw
cmp
jmp
xor
and
movsl
xor
ljmp
pop
in
jl
cmp
popa
aad
mov
or
sub
jno
idiv
shlb
test
pop
xchg
mov
cmp
iret
rcrb
and
and
mov
je
vunpcklps
add
xor
loopne
es
jecxz
pop
in
xchg
stos
lcall
xor
xor
mov
pop
loop
ds
loopne
mov
xchg
pop
cmp
dec
xchg
nop
outsb
ss
and
mov
stos
fmul
stc
aaa
bound
decl
rcll
or
inc
gs
js
enter
hlt
repz
movsl
mov
mov
das
movsb
out
roll
mov
push
ret
fistpll
and
lret
sbb
pop
push
xchg
sub
scas
push
pop
shll
inc
std
imul
bound
pop
add
add
mov
or
bound
sbb
or
jmp
adc
push
ret
xchg
jne
sub
pop
aad
mov
jbe
push
in
dec
dec
daa
sub
leave
adc
jg
into
inc
test
ss
or
sar
les
insl
insb
int3
in
sbb
sbb
cwtl
pop
push
cmp
es
cmp
arpl
and
mov
pop
mov
push
inc
repnz
lock
sbb
push
dec
scas
pop
mov
jo
cmp
mov
jne
out
push
jae
and
jle
mov
xor
jp
mov
push
xchg
jns
jo
mov
sub
fists
cmp
sbb
and
and
popa
pop
in
push
sbb
lds
xchg
cs
or
lods
loope
or
sub
add
push
push
cwtl
or
jmp
and
subl
pop
cmp
mov
sbb
push
loop
faddl
add
or
mov
or
pop
xor
shll
sbb
adc
in
stos
dec
or
and
or
ret
push
push
ss
push
and
test
pop
dec
cmc
scas
js
js
and
mov
dec
push
and
dec
xchg
fsubr
adc
call
fmull
push
pushf
dec
inc
xlat
jne
dec
sti
stos
out
rol
mov
xchg
mov
mov
movsb
aaa
push
push
mov
jbe
aam
scas
or
or
imul
shl
dec
iret
pop
in
jo
xchg
rclb
mov
and
nop
inc
in
scas
mov
push
mov
xchg
mov
shll
dec
sbb
popa
hlt
lods
hlt
shr
push
pusha
lods
sbb
sbb
imul
mov
xor
aaa
je
mov
loope
lods
jb
repz
js
jp
dec
cli
cmc
leave
stos
std
out
ds
repnz
sub
lock
test
rclb
inc
and
inc
testb
xchg
or
mov
cltd
ja
xlat
dec
sub
lahf
jo
test
das
out
outsl
mov
sub
loop
sub
cwtl
js
and
iret
movsl
les
adc
stos
pusha
xchg
jo
jne
sub
dec
call
sahf
test
xchg
js
andb
cmpsb
jecxz
bound
dec
mov
mov
jae
das
ret
pop
and
push
int
inc
jnp
pop
int3
imull
lods
call
decl
adc
pop
lods
inc
jl
lahf
gs
out
sub
notl
adc
fsubrs
lea
push
pop
push
dec
data16
std
jge
leave
insb
and
loope
jl
push
dec
adcl
mov
sbbb
xor
test
daa
inc
in
jne
dec
mov
dec
xchg
adc
adc
addl
mov
inc
jmp
cmpb
and
mov
call
push
push
add
lret
subb
das
or
mov
inc
and
stos
lods
paddq
cs
mov
imul
and
fmuls
pop
push
stc
sbb
add
xor
push
push
or
mov
insb
out
xlat
into
iret
lock
cli
or
movsb
sub
jp
lods
enter
inc
lcall
mov
insl
clc
rcrb
mov
adc
dec
adc
push
pop
jg
or
aad
mov
xor
bound
jnp
enter
jmp
and
push
jo
jecxz
fstl
test
ror
push
lods
xchg
mov
or
in
inc
dec
adc
jp
das
or
aam
and
cld
mov
mov
scas
jp
push
or
jo
mov
inc
es
test
rcl
sub
adc
gs
shll
outsb
pop
pop
bound
jbe
scas
lahf
les
inc
mov
jecxz
or
xor
fmull
test
inc
sbb
sub
adc
lahf
insb
lret
iret
cmp
xchg
enter
pop
and
mov
stc
mov
mov
cmp
ret
push
sbbl
push
xor
sar
and
mov
test
out
jle
pop
sub
adc
mov
cli
dec
ret
push
je
mov
pop
sbb
fadds
aas
insl
mov
mov
imul
hlt
sub
add
cmp
jo
push
push
es
inc
push
add
jns
mov
ret
push
pushf
cmc
fcmove
mov
xchg
lods
jecxz
fisttpll
popf
enter
aaa
add
cltd
in
mov
jg
push
jae
adc
lret
pop
fisubrs
out
in
pop
and
bnd
xor
jle
pop
stc
sub
jmp
sarb
sahf
add
jbe
sbb
jnp
enter
mov
cmp
das
or
mov
xchg
jg
jp
adc
xor
xchg
cwtl
adc
pushf
pop
scas
jae
lods
ds
filds
mov
lea
out
inc
sbb
fisttpl
test
rolb
movsl
pop
sbb
cli
jnp
inc
xchg
nop
bound
out
lahf
and
aam
sbb
imul
sbb
and
lock
push
outsb
adc
sti
cli
xchg
scas
xor
jp
movsl
incb
ds
fcoms
pop
or
sub
ljmp
jno
inc
inc
lods
fs
in
int
shll
dec
add
mov
mov
ljmp
int3
pushf
stos
jae
ficompl
out
cmc
cltd
sbb
mov
in
and
xchg
or
fnstsw
mov
and
mov
outsl
cli
dec
fs
cmp
cmp
pusha
or
and
popa
sbb
adc
fldcw
adc
fdivr
leave
jae
inc
ja
xchg
fsts
pop
scas
sub
pop
outsb
push
and
cmp
adc
int3
add
pop
enter
jle
mov
sbb
adc
aam
jnp
ljmp
daa
sarl
lret
imul
repnz
movsb
or
in
gs
add
jg
in
jbe
sub
lds
or
xor
jae
xchg
or
add
popf
rcrb
fildl
pop
cltd
mov
insb
or
pop
sbb
cs
add
pop
testb
rol
dec
or
inc
push
xor
xchg
xor
push
push
jge
jb
mov
aas
outsb
and
jnp
jle
aas
mov
mov
xchg
in
scas
jl
je
hlt
jno
fwait
sbbl
xchg
flds
push
xor
add
adc
testl
dec
in
scas
insl
shl
cmp
aad
pushf
sbb
ficoml
mov
ljmp
hlt
adc
movsb
cmp
jo
and
cltd
sbb
fdivl
xor
cwtl
das
dec
mov
or
inc
xchg
outsb
jnp
lcall
test
sub
addr16
mov
pop
fwait
push
sub
mov
sbb
sbbb
in
sbb
xchg
test
xor
xorb
mov
pop
in
adc
push
and
into
dec
sub
out
lea
jae
mov
loop
mov
insl
pminsw
mov
test
bound
fcomi
inc
xchg
mov
ljmp
arpl
jo
push
fwait
cmp
int
and
mov
cmpsl
xor
es
push
stos
mov
xchg
loope
xlat
inc
sub
fcmovb
fildll
jnp
sub
mov
mov
addr16
in
mov
push
std
xchg
push
push
cs
push
in
repz
push
push
adc
pop
sti
sbb
inc
mov
push
mov
lret
add
imul
pop
in
jb
cmp
test
mov
aam
add
pop
push
rcll
ret
add
pop
mov
xchg
xchg
push
sub
or
and
jle
movb
sbb
mov
inc
lcall
lret
push
inc
jmp
adcl
fdivl
cmpsl
out
shrb
loopne
sti
or
sub
lea
xlat
test
pop
stos
js
jg
cmp
std
out
cmp
ds
mov
jnp
lret
ret
jge
divl
add
xchg
inc
add
popa
lock
fldenv
inc
adc
clc
dec
sahf
and
daa
das
outsl
lcall
sbb
outsb
scas
call
or
dec
push
mov
daa
es
cld
mov
cmp
lret
fistps
sub
sub
adc
loope
imul
stc
rcll
out
mov
sub
push
es
dec
or
dec
mov
into
add
pop
lea
jp
repz
lcall
insl
add
jge
pop
xor
scas
lock
leave
dec
adc
lock
adc
inc
jmp
sub
icebp
lret
lret
roll
test
sub
cmp
dec
std
add
inc
cld
mov
sti
mov
in
lods
aam
adc
lret
adc
loopne
stc
add
movsl
int3
mov
xorl
sub
ds
mov
fisttpll
mov
call
push
out
enter
mov
jns
shlb
shll
mov
test
pop
popf
rcl
add
dec
mov
jp
cmp
cmpsb
mov
sbb
pop
push
jno
lods
xlat
mov
or
aaa
es
mov
stc
test
jnp
adc
jmp
in
xchg
ljmp
xchg
es
aad
fstl
fwait
shlb
outsb
jns
sub
pop
movsl
xchg
push
mov
cld
or
or
add
aam
out
jnp
mov
jnp
jae
or
sbb
loop
mov
mov
sub
or
ds
rcl
adc
loop
adc
mov
push
movaps
adc
insl
mov
icebp
loop
ljmp
mov
ljmp
sbb
push
add
addr16
xchg
cmp
add
cmp
cwtl
addr16
mov
ljmp
popa
call
cmp
js
out
mov
fistpl
pushf
bound
mov
sbbb
inc
insl
sbb
mov
xor
aaa
push
pop
decl
stos
sub
scas
pop
rcl
int
mov
add
fdivrs
out
pusha
pop
scas
inc
loopne
outsb
jge
pop
flds
jecxz
out
push
pop
adc
push
mov
fdivrl
jno
inc
lcall
xchg
lods
pop
xchg
mov
in
dec
add
fsub
int
mov
stos
jae
jno
xchg
lods
dec
fsts
stos
fcomps
add
mov
dec
shl
jp
jmp
jp
cli
dec
shlb
adc
add
xor
sbb
push
stc
clc
loop
sub
push
incl
push
pop
dec
inc
add
push
and
into
xchg
mov
data16
dec
data16
xor
push
pop
mov
lods
sub
xor
ret
mov
mov
in
or
sbb
mov
mov
mov
rol
mov
jns
cmp
dec
fistpll
and
scas
mov
pop
sbb
jo
daa
mov
push
mov
adc
jns
ljmp
ja
movsl
pop
xor
leave
sbb
xchg
shlb
and
jae
call
adc
ja
in
out
push
imul
inc
mov
push
in
ds
sbb
adc
push
mov
cmp
imull
mov
add
xor
out
push
ret
xor
xchg
pop
aad
sub
and
mov
nop
int
inc
movsb
adc
mov
data16
call
lcall
lret
loop
pmuludq
fs
scas
add
and
aaa
and
and
test
push
and
roll
pop
lock
add
or
lcall
int3
xor
push
push
adc
fnstcw
sbb
sbb
jmp
lea
and
std
jmp
jns
dec
sub
cmp
push
jg
aaa
std
inc
jl
fisubrl
jno
lret
add
jle
add
xlat
mov
cwtl
sbb
adc
or
cld
sub
testl
cld
or
push
inc
outsb
aaa
ret
mov
xchg
mov
stos
pop
mov
sub
clc
sahf
xor
jb
xchg
shrl
jno
icebp
ret
ret
xchg
leave
call
repz
scas
jb
mov
push
jle
adc
fsubs
push
push
adc
sbb
xchg
add
idivl
ret
scas
enter
outsl
adcl
movsl
or
push
fdivs
cmp
jmp
test
jns
sub
outsb
arpl
push
test
shl
and
push
dec
mov
sti
xor
fidivl
xchg
or
xor
loop
fistps
js
adc
jne
cmp
push
addl
jp
pop
mov
addr16
sbb
enter
arpl
add
arpl
and
mov
inc
pop
stc
in
lock
push
jmp
sub
fisttps
ja
outsb
add
xor
lods
dec
xor
inc
arpl
mov
sbb
lahf
out
pusha
mov
mov
push
out
dec
aas
insl
hlt
pop
and
jb
fldpi
or
rclb
or
and
movsl
int3
or
pop
lret
xor
data16
cmp
in
repz
loop
or
add
push
int
mov
mov
xchg
pop
xchg
dec
or
and
loop
inc
and
movsl
mov
pop
xchg
in
or
das
dec
stc
inc
jle
jo
loopne
into
xor
and
xor
imull
sahf
or
adcb
les
add
cli
jle
and
jb
and
xchg
jnp
cs
bound
push
popa
pop
out
int
pop
dec
es
pop
fwait
insb
je
movsb
push
cmp
hlt
repnz
jo
mov
loope
jle
dec
mov
mov
push
in
in
adc
hlt
adc
sub
pop
adcb
push
movsl
cltd
mov
jl
rol
sub
push
xchg
adc
pop
loopne
addr16
je
scas
dec
pop
sub
shlb
clc
mov
xchg
or
add
aaa
shrl
xchg
arpl
insb
mov
call
or
stos
add
dec
sbb
bound
mov
int3
cmc
and
mov
hlt
sbb
ljmp
clc
insl
mov
je
fldcw
outsl
out
jb
or
inc
lret
mov
pop
andnps
lods
aas
bnd
or
ja
push
pop
fidivs
lcall
pop
outsl
xor
add
sub
and
lret
jae
xchg
jno
setno
insl
call
jmp
notl
or
push
pushw
jae
cmp
fisubrl
inc
lods
sub
mov
cmp
mov
mov
fwait
push
jbe
js
es
push
sbb
jmp
jp
mov
sub
mov
pop
add
flds
fimuls
xor
shl
pop
cmp
clc
xchg
fisubs
loop
xchg
cwtl
notl
bound
and
push
frstor
inc
outsl
pop
hlt
mov
fcomps
mov
jnp
es
ret
jns
imul
cmp
fcoml
dec
cld
pop
cmc
sbb
mov
inc
pop
mov
pushf
pop
add
imul
test
sbb
lods
inc
pop
imul
pop
std
sahf
push
insl
lea
xor
jg
and
jl
mov
or
cmpsb
jne
mov
lock
sub
sbb
jne
mov
movsl
mov
inc
sti
insl
std
jb
fucomp
inc
dec
xchg
out
dec
shrl
xor
mov
popa
sbbl
jecxz
mov
push
testl
or
jl
das
in
sbb
adc
outsl
aad
add
sub
pop
mov
test
icebp
inc
stos
ret
xor
sbb
sub
mov
cmp
ljmp
or
aas
lock
sbb
xchg
pushf
movsb
divb
mov
dec
and
xor
mov
aaa
inc
lock
das
cmp
mov
pop
sub
sbb
lock
mov
es
mov
enter
pop
sahf
mov
pop
push
lret
mov
outsl
mov
stc
in
out
cli
inc
out
fmull
and
leave
movsl
iret
mov
push
cmpsl
mov
pop
or
stos
in
je
repz
shrl
stos
inc
inc
out
jge
shrl
mov
push
jno
fadds
mov
aam
testl
push
cltd
jge
mov
int3
push
dec
ljmp
in
enter
xchg
sub
scas
addl
imul
push
xchg
xlat
int
imul
and
pop
mov
adc
roll
xor
ss
iret
inc
aas
mov
jne
mov
loope
mov
inc
out
outsl
add
fldt
or
cmp
add
mov
jmp
inc
sbb
sbb
sbb
ljmp
mov
fwait
and
mov
pop
into
out
mov
lahf
imulb
push
movlps
mov
je
and
outsl
cs
cli
dec
add
jae
pop
mov
mov
jbe
addl
pop
fstpt
add
mov
pop
or
add
mov
ret
aam
push
outsl
std
cmp
xor
xchg
or
push
in
stos
in
in
mov
dec
sahf
push
ljmp
xchg
lea
add
outsl
add
sahf
xchg
gs
jns
in
or
test
or
cmp
mov
xchg
sahf
hlt
inc
inc
cli
icebp
mov
mov
test
popf
cmp
xor
mov
mov
fimuls
into
jo
clc
pop
mov
mov
dec
jmp
popf
adc
out
sub
jne
jnp
inc
add
inc
adc
add
popf
cmp
andb
clc
scas
ret
xor
sub
sub
pop
pushf
dec
movsb
out
insl
sti
jbe
ret
fwait
xchg
mov
ror
push
sahf
jb
mov
movb
loop
inc
cwtl
xor
cmpxchg
pop
cmp
jb
daa
dec
mov
outsb
out
loop
fucom
sahf
int3
xor
movsb
popf
mov
daa
icebp
das
je
push
out
fwait
and
jmp
xor
pop
sub
outsl
aad
das
insb
lahf
test
push
dec
or
movsl
js
mov
jmp
pop
mov
pop
cltd
fsubl
mov
stos
add
cld
jecxz
cli
dec
pop
push
xlat
dec
pop
inc
call
xor
bound
daa
xchg
pushf
dec
cs
inc
das
push
pop
inc
hlt
sahf
mov
iret
push
xchg
jecxz
inc
xor
imul
outsb
mov
jne
and
sarb
aad
and
xchg
data16
push
and
cmpsl
imul
dec
das
add
dec
sbb
test
cwtl
out
sbb
or
push
cmp
sti
pop
outsl
in
dec
imul
addr16
ret
cmp
mov
xchg
cwtl
push
push
pop
mov
insb
mov
push
fcoml
dec
iret
push
arpl
cmp
xchg
cmp
loope
and
inc
insl
and
gs
mov
lds
or
mov
inc
jnp
sbb
out
cmp
shl
scas
fldenv
int3
jns
jg
mov
push
pop
pop
sbb
in
jmp
iret
xchg
adc
pop
mov
pop
sub
stos
pop
nop
adc
outsb
fnstcw
data16
jle
stc
mov
cld
cmc
push
out
pop
loop
jmp
call
mov
mov
jae
adc
dec
movsb
xchg
ret
shrl
or
ret
pusha
rdmsr
iret
dec
cmpsl
mov
int3
shrl
jmp
cmp
sub
sub
mov
inc
out
sub
clc
lds
data16
xchg
xor
movsl
fildl
jecxz
xchg
icebp
inc
mov
call
ret
or
ljmp
sub
push
mov
cmpl
and
cld
mov
jae
insl
roll
out
xor
and
or
pop
add
lods
scas
hlt
out
push
lcall
mov
ret
mov
cli
daa
add
push
imulb
mov
cmc
inc
sbb
jbe
sahf
movsl
fisubrl
inc
rol
xor
insl
sti
adc
popf
xchg
jnp
xor
push
hlt
popf
xor
ja
pop
and
push
out
popf
dec
xor
dec
insl
xchg
adc
shll
dec
out
push
sub
mov
addl
clc
xor
push
cld
nop
push
inc
jbe
lret
cmc
jecxz
mov
pop
xor
ret
cmp
push
adc
jne
dec
cltd
fsts
iret
fstl
xchg
inc
aas
dec
mov
adc
roll
pop
xchg
dec
cld
es
mov
test
sub
push
sub
adc
mov
das
adc
or
js,pn
fcomps
add
xchg
fisttpll
jbe
adcb
stos
mov
jno
jo
dec
add
mov
cmp
push
xor
or
jecxz
aam
scas
jmp
sbb
push
add
dec
shll
sub
cmp
lret
pop
xor
mov
jo
dec
or
jnp
or
aam
int
lods
fisubl
mov
inc
std
cmp
daa
loope
popa
adc
jl
xchg
shrl
daa
imul
out
arpl
mov
mov
cmp
out
cmp
and
mov
fsubp
loop
roll
xchg
pop
sahf
mov
adc
pusha
int
int3
fistpl
xor
sahf
test
jg
adc
lret
cmc
inc
or
sbb
xchg
iret
sub
jnp
ret
int3
ret
xchg
mov
std
fbld
dec
mov
je
mov
jg
cli
sub
jns
pop
mov
xor
add
and
scas
add
fs
cwtl
jle
sub
add
jno
xchg
cmpsb
mov
cmp
sub
scas
stos
cmpsl
or
pusha
incb
rolb
cmp
scas
jnp
popf
rcll
mov
sahf
int
stos
push
add
mov
data16
imul
mov
mov
jmp
lock
int3
xor
in
addb
sarb
lcall
cld
jge
dec
lods
mov
xchg
xchg
jmp
hlt
and
adc
and
push
lea
jb
int
inc
xorl
insl
sub
xor
inc
pop
lcall
fdivrs
inc
flds
mov
push
bound
inc
inc
and
sub
pop
add
repnz
mov
cmp
ret
cmp
push
nop
outsb
jb
je
inc
push
sbb
adc
sbb
stos
fimull
ds
icebp
push
cmp
adc
sbb
loope
sub
jp
cs
cmovns
mov
dec
gs
and
mov
enter
lcall
xchg
sbb
push
inc
add
xor
cmpsl
inc
and
aad
mov
popa
mov
movsl
mov
aad
roll
idiv
mov
push
cmpsl
outsb
rclb
xlat
fldenv
repz
lahf
mov
stos
stos
sarl
sub
adc
mov
jne
jmp
push
rclb
push
xchg
push
mov
jecxz
sub
inc
jns
sbbl
lock
add
imul
mov
adc
mov
in
mov
mov
imul
add
ror
popa
fimull
push
mov
mov
orb
popf
cwtl
mov
jge
mov
mov
sbb
sti
ret
enter
pop
adc
je
mov
add
add
mov
xchg
aam
pop
lods
pusha
mov
mov
cmpsb
mov
daa
jae
sbb
dec
cmp
jns
pop
sbb
sbb
in
jecxz
cmp
sub
lds
popa
call
outsb
xchg
xchg
jbe
xorb
dec
xchg
xchg
es
jmp
push
aad
test
loopne
add
fidivs
ficompl
rorb
nop
fdivs
and
and
aaa
inc
sti
jne
push
cmpsl
xor
jl
jle
mov
rcr
rorb
mov
sbb
add
add
jnp
stc
push
adc
cs
andb
les
mov
pop
xor
mov
jno
dec
stos
shl
sbb
cmc
ret
pop
scas
xchg
sbb
sbb
add
pop
into
inc
rorl
repz
flds
mov
jo
and
jno
add
adcb
insb
icebp
popf
xor
aad
add
jnp
mov
mov
out
jb
loopne
pop
pop
bound
fdivrs
inc
cli
testb
js
insl
mov
push
aam
and
xlat
mov
cltd
ret
arpl
mov
xor
or
mov
fwait
repz
or
or
xchg
dec
sbb
push
mov
outsb
add
les
lock
clc
jp
pop
aam
cmp
push
fs
cmp
lds
push
mov
ljmp
fnstenv
loopne
lock
pop
add
rcll
es
test
inc
adc
movsl
movsb
aas
dec
fmuls
and
dec
fs
sbbb
sahf
mov
cmc
push
sbbb
jmp
fwait
mov
ja
mov
in
popf
cmp
and
dec
int3
add
loopne
test
inc
cmpsb
jno
fcoms
mov
iret
shll
sub
andl
adc
and
lret
clc
bound
movsl
dec
mov
inc
aaa
sbb
aas
mov
adc
mov
ret
mov
fildl
scas
test
pop
in
stos
movsl
cmc
outsl
loop
pop
cmp
cmp
aas
inc
jns
mov
adc
jns
jge
cmp
jmp
stos
mov
lea
xchg
sti
loopne
pop
rcrb
cltd
or
aad
cmc
and
std
jno
lea
test
sub
adc
popf
mov
fsts
dec
loope
es
fadds
cli
into
xor
mov
or
into
sub
or
mov
clc
mov
mov
aaa
fdivrs
mov
mov
jp
lds
mov
test
mov
sub
mov
ret
mov
xor
inc
adc
out
popf
scas
mov
aad
mov
dec
mov
jmp
xchg
in
xchg
lahf
and
sbb
jo
ret
pop
mov
xlat
movsb
push
mov
mov
pop
cmp
jg
js
xor
add
decl
mov
incb
cmp
dec
dec
cmpsb
cmpsl
div
lcall
xor
shrb
stc
push
mov
add
faddl
push
insl
adc
dec
dec
xchg
and
push
push
stc
lcall
mov
aad
ljmp
jns
hlt
loop
adc
mov
mov
pop
xchg
mov
sbb
or
add
mov
xor
xlat
std
or
mov
cltd
arpl
sub
and
call
inc
stos
adc
mov
fsubl
lock
popf
shl
push
jl
pop
out
push
je
adc
fs
mov
cmp
mov
or
lock
jp,pt
loopne
daa
xchg
enter
dec
xchg
pop
mov
sub
and
and
stos
and
int
je
lods
jmp
fwait
and
hlt
xchg
insl
and
loop
das
mov
je
mov
stos
aas
inc
push
imul
subb
or
mov
or
frstor
fstl
enter
jno
loop
vpcmov
pop
fldl
xorl
ja
jp
push
mov
pushf
vmptrst
icebp
repz
pop
dec
inc
mov
inc
mov
cmp
popf
xchg
fwait
arpl
dec
inc
into
call
dec
lret
into
xchg
xchg
jmp
into
ret
and
outsb
scas
decl
push
jns
iret
pop
sub
loop
dec
xlat
jmp
mov
jb
jmp
push
adc
or
and
in
cli
loop
dec
cmpsl
mov
jle
enter
add
arpl
icebp
lods
adc
imulb
rorb
cli
and
cmpsl
mov
adc
pop
hlt
xor
insl
jmp
lcall
push
fcoml
stc
stos
sub
xchg
fs
sub
fwait
jge
aaa
jp
iret
mov
test
pop
inc
iret
mov
daa
bound
cmc
notb
push
push
push
lock
mov
pop
fbstp
sbb
lret
xor
pop
mov
cmp
mov
xchg
sti
or
mov
sub
push
push
cltd
lock
xor
mov
lea
push
adc
push
dec
add
jl
or
mov
aaa
cmp
cmpsb
call
jge
lret
cmpsb
sbbl
and
incb
dec
repz
out
nop
sti
fmuls
jle
cmp
mov
adc
mov
cld
test
inc
pop
add
or
mov
test
ss
lcall
mov
daa
in
mov
and
pop
nop
daa
stos
sub
push
lea
pushf
sub
mov
mov
cltd
mov
mov
push
ds
in
mov
xlat
mov
pop
mov
ret
das
mov
mov
mov
pop
fidivrs
shll
mov
stos
andb
inc
dec
xor
and
jne
frstor
enter
mov
rclb
cltd
out
mov
das
xor
aam
repnz
lock
jns
jge
or
sub
push
add
cli
outsb
and
lahf
pop
cmpsb
cmp
sbb
and
ja
jp
ret
repz
push
xchg
mov
in
aas
icebp
lods
imul
push
mov
jmp
hlt
mov
pop
mov
ds
repnz
xchg
ret
outsb
sbb
mov
push
pop
imul
push
dec
imul
xchg
pushf
sahf
ret
jmp
mov
daa
adc
jmp
std
mov
push
jg
and
lods
lds
out
inc
adc
inc
shlb
push
sbb
mov
test
sbb
aas
or
lds
add
sahf
or
push
inc
push
xchg
jae
mov
sbb
jo
inc
jbe
pop
scas
cli
cmpsl
mov
jb
sbb
push
push
das
in
mov
lea
dec
rcll
xchg
jae
lds
ficoms
cmp
jge
fxch
or
mov
cmp
div
bound
add
inc
mov
in
xchg
inc
test
xor
pop
stos
popf
aas
xor
cmpl
in
or
subl
sub
cs
cmp
ljmp
and
adc
inc
jge
dec
out
gs
sub
shrl
push
mov
fidivl
fs
bsf
iret
notb
pop
ret
xor
inc
jge
dec
sub
test
clc
cmp
popf
icebp
incl
add
xor
stc
call
mov
out
and
adc
test
lcall
add
xchg
push
dec
test
inc
int
ljmp
cmpb
jnp
cmc
stos
dec
addr16
cmp
out
inc
jo
cli
sti
dec
mov
cld
lret
push
cmp
out
pop
xor
clc
stos
fs
xchg
mov
mov
push
repz
xchg
push
jl
jge
mov
scas
test
dec
imul
add
repz
jne
mov
dec
push
xchg
cmp
sbb
lods
movb
addr16
jns
xchg
dec
dec
testl
pop
cmp
mov
push
push
clc
mov
dec
pushf
ja
jno
mov
testb
ficoms
lods
mov
add
loop
outsb
xchg
cmpsl
enter
dec
adc
fwait
xchg
xchg
into
cmp
mov
push
or
cmp
mov
arpl
negb
inc
fcomi
fimuls
loop
iret
fisttps
add
cwtl
stos
loopne
lahf
ljmp
fistl
jae
pop
in
les
pop
dec
pop
fisubrl
jl
push
lret
in
inc
add
inc
and
cmp
loope
popf
mov
nop
mov
mov
loope
sbb
roll
in
adc
fsubr
rcll
jmp
inc
orl
pop
insl
stos
adc
and
subl
adc
ret
test
inc
rcll
rclb
rclb
and
js
lret
push
cmp
mov
insl
pop
movsb
push
pusha
jo
sarb
insl
sub
mov
inc
add
stc
cwtl
inc
ds
mov
mov
inc
fisubs
test
cmp
iret
pushf
aam
pop
pop
push
adc
hlt
dec
xor
jg
aas
repz
cmp
sti
rcr
lret
mov
loope
daa
pop
mov
pop
daa
lds
inc
sub
push
insb
stos
mov
test
or
lahf
ds
mov
sub
sub
cwtl
pop
lods
ret
aam
mov
mov
pop
add
movsl
icebp
push
mov
jne,pt
test
sub
loopne
inc
lret
mov
pop
dec
bound
cmp
daa
les
xor
pop
lds
lods
incb
cmp
ljmp
std
inc
mov
xor
ds
sub
cmp
and
mov
fimull
fdiv
adc
test
repnz
std
hlt
push
scas
ret
clc
loopne
mov
out
push
mov
and
adc
pop
das
xchg
jmp
and
xchg
js
mov
xor
adc
out
sbb
andb
nop
mov
sbb
jl
fildl
adc
jno
addr16
cmpsb
aad
xchg
add
and
xor
adc
mov
movsl
fildl
pop
inc
fwait
negl
shrl
pop
and
inc
mov
sub
dec
lret
adc
cmpsb
fst
push
rcll
mov
cld
ja
xacquire
test
mov
dec
sub
divb
push
mov
cmpsb
jge
mov
rclb
stos
adc
daa
test
out
icebp
nop
adc
adc
mov
int3
jb
push
push
mov
pop
dec
repnz
in
jp
dec
mov
mov
mov
sbb
and
fistpl
or
or
push
fldt
aaa
idivb
mov
stos
push
out
xchg
lds
fwait
out
jl
mov
cmp
jge
lods
adc
mov
mov
ljmp
icebp
sahf
hlt
xor
push
mov
jge
inc
fadds
cli
in
xor
pop
mov
pushf
dec
mov
imul
sub
cmp
xor
mov
fsubs
bnd
movsb
test
imul
cltd
es
adc
ljmp
mov
cmp
arpl
adc
dec
jmp
or
dec
mov
cmpsb
jg
aas
push
pop
jecxz
outsl
xor
mov
pusha
in
mov
sub
inc
or
sub
std
mov
movsl
lea
pop
pop
iret
je
adc
shl
or
clc
xor
jp
je
push
pop
cmp
pop
mov
sub
fimull
adc
cmp
ret
mov
mov
xor
adc
sbb
out
cmp
or
stc
xchg
inc
adc
rclb
inc
mov
push
test
push
loopne
dec
notl
dec
negb
push
jo
jb
xor
das
inc
xchg
iret
push
sub
push
or
int3
mov
cmpl
inc
test
add
xchg
les
addr16
leave
adc
pop
movsb
xchg
fcos
sub
ret
jmp
cmp
addl
lcall
xchg
push
in
mov
cmp
hlt
jl
xchg
insl
and
cmp
scas
adc
dec
pop
dec
fs
xor
push
lcall
or
popf
movsb
cmp
xchg
dec
push
jb
out
fs
push
sti
out
out
nop
push
mov
mov
adc
adc
xchg
dec
cmp
call
sub
cs
ret
adc
inc
test
cmpl
gs
push
shll
sbb
mov
xlat
sub
xor
cmp
add
add
jae
inc
ja
test
or
inc
cmp
scas
xchg
add
dec
pop
jp
mov
and
shl
mov
sbb
mov
jmp
dec
add
push
fwait
push
test
pop
call
adc
aam
push
mov
or
insl
and
mov
sub
cmp
xlat
bound
outsl
inc
pop
scas
shl
out
insl
notb
pusha
mov
fistps
adcb
dec
fistpll
xchg
add
fstp
dec
rolb
aas
f2xm1
mov
push
mov
cltd
enter
je
push
push
add
mov
mov
imull
incb
in
lock
nop
test
jg
push
xor
dec
fmuls
stos
filds
mov
movsl
cmc
shr
rcrb
and
pop
mov
push
imul
mov
push
dec
call
xchg
test
test
daa
dec
andb
cmpsb
int
jl
std
jle
sbb
push
inc
scas
sbb
arpl
pop
adc
jo
int3
mov
add
iret
ja
fstps
inc
push
test
xorb
outsl
icebp
add
push
iret
ljmp
psrlq
cmp
fs
fdivr
pop
xor
and
cmc
arpl
mov
push
insl
jbe
es
adc
mov
int
xor
shlb
mov
cmpl
sub
lds
in
ljmp
or
popa
xlat
xlat
inc
lods
adc
jmp
mov
xchg
in
xchg
jb
subb
mov
enter
nop
cld
popa
int3
scas
push
xor
jne
ret
popa
lret
sbb
inc
mov
fildll
sub
push
mov
mov
leave
add
jae
mov
pusha
jo
int
imul
add
or
sbb
fiaddl
or
inc
aaa
lcall
je
incb
out
pop
jns
ret
sar
jmp
je
insb
outsb
clc
adc
lds
data16
adc
and
xchg
mov
cmc
sub
mov
fcoms
and
sbb
xchg
xor
mov
std
hlt
imul
sbb
je
xorb
mov
pushf
lods
xor
fiadds
ret
sbb
inc
xor
inc
mov
test
add
lods
bound
aas
mov
and
jge
fwait
lods
inc
mov
dec
mov
orb
lret
fisttps
or
dec
jg
adc
mov
xor
cli
xchg
repz
cmpsb
pop
inc
mov
push
dec
sbb
xor
enter
shlb
mov
pop
and
ss
push
xchg
stc
or
mov
mov
xchg
sbb
mov
pop
fisubrs
dec
popa
sub
jnp
and
fimull
fisubrs
pop
mov
gs
test
jg
push
mov
or
repz
pop
xchg
dec
mov
clc
inc
mov
call
bound
sbb
out
xor
mov
cmp
int
pop
dec
pop
jmp
sub
pop
inc
lret
push
fdivl
imul
scas
jmp
int3
xchg
lds
imul
add
ss
sbb
mov
cmpsl
mov
lock
rcrl
mov
or
mov
movsb
adc
es
cmp
mov
scas
push
mov
cmp
jnp
loope
dec
lods
dec
imul
loope
mov
xbegin
pop
pop
je
inc
xlat
bound
mov
in
cli
push
fdivs
test
push
mov
xchg
sbb
mov
test
test
cmp
mov
popa
mov
test
addl
or
orl
les
pushf
iret
pand
push
sbb
out
out
pop
mov
stc
sbb
add
jb
add
mov
jno
cltd
add
mov
mov
push
inc
mov
pusha
jge
daa
roll
test
iret
popf
loopne
jae
lret
sub
jp
jmp
xchg
push
stc
rclb
outsl
outsl
sub
or
dec
cmpsl
mov
movsb
ds
push
movb
cmpsb
ss
inc
pushl
out
adc
jo
xchg
es
fdivrs
test
add
sub
dec
aaa
cmc
aas
test
repz
jb
adc
xchg
xchg
push
pop
and
in
jge
push
add
idivb
mov
leave
and
mov
loope
dec
or
xchg
inc
or
sub
gs
add
aas
fidivl
fidivrs
faddl
xor
shlb
mov
insl
mov
add
filds
pop
add
jns
addl
aaa
lods
dec
adc
hlt
ljmp
lret
stos
cmpsl
rcll
mov
jl
dec
fnstenv
cmovno
cmp
jle
or
iret
cmp
imul
fnsave
popa
pop
ljmp
std
movsb
inc
lock
or
pop
mov
mov
test
loop
fistps
cmpsb
lahf
pop
pop
fwait
sub
mov
jae
sbb
repnz
notl
enter
lods
ja
pushf
sarb
xchg
jl
mov
add
mov
mov
ficomps
clc
fcoms
mov
mov
mov
mov
xor
scas
ds
fs
add
pop
cwtl
xor
sub
cmpsl
jno
and
imul
lods
shll
cmpsl
enter
pop
ja
pop
xor
sub
int3
mov
je
loope
lods
jo
loop
lea
mov
sub
xchg
bound
cmc
fidivl
sbb
std
pop
xchg
popa
push
insb
add
cwtl
pop
sub
and
fwait
mov
push
push
daa
mov
lock
pop
or
decb
int3
mov
push
add
cwtl
xor
imul
push
test
and
fldcw
fadd
dec
sarb
jl
hlt
xchg
aam
sub
inc
sub
cld
dec
rep
aaa
mov
pop
gs
adc
sub
mov
xor
mov
mov
push
sti
xchg
mov
sbb
add
jmp
arpl
mov
out
sub
mov
fwait
dec
lea
inc
lods
adc
pop
loopne
push
inc
lahf
jne
lds
xlat
pop
adc
stos
mov
movsl
inc
je
mov
cltd
sarl
or
dec
inc
or
fs
xchg
inc
push
sub
mov
lcall
jnp
cmp
push
scas
gs
or
cltd
bound
daa
outsb
push
mov
sti
jg
adc
ja
add
xorb
dec
jnp
and
or
dec
stos
inc
sbb
and
pushf
fwait
lock
dec
jmp
repz
leave
insb
xor
movsl
andl
jecxz
pop
dec
push
ret
sti
mov
loop
push
mov
out
iret
daa
lahf
stos
jne
adc
insb
add
icebp
jecxz
mov
cli
loopne
push
lahf
cmpsb
inc
mov
jns
pop
mov
in
and
xchg
sbb
jl
jb
lret
fstp
inc
adcl
ret
movsl
rclb
out
mov
or
mov
mov
out
mov
xor
cli
dec
and
mov
iret
mov
ja
mov
inc
sbbb
ds
sbb
bound
sbb
inc
pushf
dec
in
subb
ss
je
jmp
xor
sub
loope
lea
fsub
call
dec
cwtl
mov
test
sub
xchg
call
int
fwait
scas
out
and
ds
dec
shl
loop
mov
leave
pop
mov
stos
pusha
push
mov
sub
hlt
ljmp
test
cmp
notb
pop
call
pop
push
in
add
xor
lock
rorb
fstpl
popa
or
pcmpgtd
add
or
and
xchg
inc
and
mov
stos
inc
lock
jns
and
lret
fwait
sub
add
sbb
xor
add
add
imul
jae
mov
mov
push
xchg
or
cmc
fnstsw
cmp
inc
outsl
adc
cwtl
fisttpl
pop
add
cwtl
dec
js,pt
in
mov
mov
repz
dec
push
es
mov
int3
icebp
jae
loop
test
adc
enter
cmc
shlb
or
jecxz
test
adc
jle
sti
xor
movsb
pop
jne
mov
out
dec
mov
dec
sub
ljmp
xlat
pop
shll
push
jbe
ss
dec
mov
mov
mov
test
push
cmpl
adc
mov
add
pop
sbb
popa
mov
gs
mov
cwtl
lds
stc
and
sbb
hlt
pop
push
pushf
mov
mov
push
movsb
mov
scas
sub
es
cmp
mov
lods
mov
movsl
shrl
pop
jno
lock
out
push
popf
imul
xchg
cmpsb
xor
sub
loope
imul
cs
and
sbb
outsl
test
daa
pop
pop
mov
ds
bound
aam
mov
fldenv
cmp
jmp
out
pop
ficompl
jl
sbb
xlat
subl
dec
pop
aaa
daa
mov
cmp
fwait
testl
jge
push
enter
sbb
or
and
xor
and
imul
lcall
jnp
ja
mov
das
iret
ss
lock
fcmovnu
arpl
out
shll
add
mov
scas
insl
push
cwtl
movsb
loopne
data16
lret
mov
outsb
ds
dec
jmp
stos
mov
popa
test
xchg
stos
mov
dec
rolb
xlat
stos
jmp
adc
ljmp
mov
inc
dec
fdivs
popa
and
lods
xchg
pop
inc
fistpll
add
rcll
outsb
pushf
outsb
lret
xchg
jmp
push
repnz
hlt
leave
xchg
and
push
xchg
popa
and
enter
mov
lret
mov
les
call
add
gs
aas
icebp
sbb
sbb
popa
inc
add
notb
js
add
movsb
and
xchg
jno
test
mov
push
dec
mov
lods
std
pop
jb
mov
pop
inc
dec
mov
pushf
ss
cli
lods
or
in
and
hlt
rolb
fidivl
add
pusha
ret
push
cmp
cmpsb
dec
call
inc
or
pushf
cmp
push
mov
jmp
test
out
ds
subb
xor
adc
rorl
clc
xor
lret
mov
push
and
cmp
add
pop
push
xor
or
rcrb
jmp
bound
push
xchg
mov
es
cwtl
cmp
enter
mov
inc
scas
xor
test
int
push
int3
fnstenv
pop
orb
push
sbb
arpl
jp
out
dec
aaa
pop
stos
add
imul
in
test
popa
std
add
mov
mov
dec
inc
int
jp
sub
ret
div
push
inc
pop
xchg
cmp
and
clc
loop
sbb
push
and
ret
push
pop
scas
dec
ficompl
loop
mov
or
iret
dec
lcall
lods
sbb
mov
push
or
scas
xor
cwtl
cmp
cmpsb
jl
push
cli
icebp
rorb
jb
cmc
and
adc
inc
std
mov
cmp
sbb
das
dec
inc
fistl
mov
xchg
rorb
adc
les
lds
ret
fs
aam
in
dec
shlb
imull
inc
fcomps
push
and
jbe
call
xchg
lods
and
sbb
arpl
mov
adc
test
imul
aad
in
stos
test
fldcw
iret
js
stc
mov
add
enter
pop
sub
inc
enter
ljmp
mov
add
loope
pop
ja
jo
xor
jle
lahf
lret
loopne
or
jns
fcomps
int
mov
aaa
in
sub
mov
mov
mov
not
add
mov
pusha
cmp
popa
sub
xchg
push
and
in
dec
mov
enter
xor
cld
daa
icebp
jns
cwtl
ljmp
inc
or
xor
xor
dec
adc
and
xor
test
push
sbb
jns
add
xchg
enter
xchg
jmp
mov
push
add
fsubr
mov
xchg
jns
or
pop
dec
leave
sub
jge
icebp
cmp
push
lret
int3
fnstcw
je
outsb
orb
shrb
mov
scas
sti
jns
sub
nop
jne
pop
enter
in
fisttps
inc
fstpl
std
and
mov
add
mov
cltd
icebp
mov
adc
jmp
nopl
xor
xchg
lods
pop
and
fimull
add
push
cmovp
push
adc
scas
shl
mov
and
in
clc
jo
repnz
xlat
mov
jbe
popf
gs
imul
sub
add
jo
cli
cmp
xchg
xchg
std
int3
mov
imul
pop
jge
push
xor
daa
mov
aad
adc
bound
xlat
mov
mov
jb
insl
aam
mov
stc
jns
or
and
pop
inc
jg
cltd
inc
mov
mov
ret
add
lahf
les
pop
enter
mov
push
jle
in
sbb
mov
cmpsb
xor
add
test
in
jl
ret
sub
je
leave
pop
popa
cltd
jns
sti
fs
or
fcmovnu
mov
mov
xchg
pop
call
inc
pop
fistps
push
xor
pop
or
and
stos
push
mov
insb
dec
mov
aaa
cwtl
push
out
and
push
push
imul
mov
test
daa
push
and
mov
add
pop
and
pop
outsl
cli
jmp
xchg
stc
push
adc
xor
rclb
sub
testl
mov
scas
xor
mov
or
xchg
test
and
push
xchg
mov
test
in
insb
mov
and
and
popa
mov
dec
cmp
stc
xchg
jmp
fldcw
cmc
addb
mov
cmp
daa
js
xchg
add
mov
jmp
stos
pop
push
js
daa
mov
xchg
testl
sub
das
int3
push
dec
mov
cmp
int3
into
shlb
sti
lods
daa
cwtl
cmp
je
mov
xor
dec
gs
shl
mov
inc
pop
mov
pop
xor
sarl
mov
nop
adc
mov
push
aam
push
repnz
xchg
cs
add
in
das
pop
xchg
mov
cmpsb
popf
mov
stc
mov
push
cmpsl
add
ljmp
ret
mov
jb
scas
mov
pop
popf
and
mov
popa
es
rcrl
mov
cmp
adc
cmp
add
icebp
stc
das
add
insl
rorb
outsl
mov
sahf
divl
call
xchg
imul
nop
dec
testb
mov
add
adc
lea
cmc
jge
or
sub
rorl
and
fs
gs
sbb
xor
mov
scas
pop
int3
and
test
xor
mov
pusha
pusha
xor
inc
mov
adc
sub
fadd
add
jmp
stc
or
push
inc
insb
loopne
xor
sahf
cltd
shlb
pop
mov
fbstp
xor
pop
fidivs
fsubrs
cmc
mov
mov
mov
push
sub
mov
ds
repnz
test
and
mov
std
mov
dec
or
jb
pop
pop
sbb
call
mov
mov
jae
insb
icebp
fwait
jmp
ret
iret
js
call
push
inc
in
repnz
mov
add
mov
sahf
lds
movsl
xchg
stc
xor
push
sbb
xchg
jge
inc
mov
in
pop
xchg
mov
addb
test
xor
loopne
push
movsl
outsb
mov
jae
mov
hlt
aaa
and
and
shll
rcrl
mov
push
dec
xchg
push
stos
jg
inc
xlat
adc
pop
or
ja
test
shrb
xor
sbb
or
fnstsw
jl
fcmovnbe
aad
sub
push
add
mov
popf
daa
sbb
dec
mov
and
fsubrl
test
inc
into
xchg
ficomps
xlat
mov
lcall
lods
fs
pop
mov
fwait
popa
ret
nop
test
jle
lock
out
fildl
outsl
sbb
int
cmpsl
mov
dec
lret
cmp
insl
fldl
addr16
sar
mov
dec
test
loope
sbb
jne
mov
int
pop
shll
ret
fmull
jecxz
push
mov
ljmp
inc
stos
lock
idivl
cmp
movb
push
out
pop
aaa
adc
cld
push
fcomip
or
pop
xor
jecxz
and
dec
dec
sbb
adc
jno
lea
jge
cmp
mov
icebp
and
lahf
in
inc
das
sub
mov
icebp
fsub
xor
shrb
fisttpl
loopne
out
out
pop
ss
sub
xchg
jo
jl
nop
faddl
sbb
jge
data16
xlat
out
sub
aas
and
lods
lds
jo
inc
loop
pop
sbb
lret
scas
jg
mov
dec
and
push
inc
dec
testl
mov
or
test
out
pop
ljmp
shlb
dec
adc
scas
lea
mov
mov
sar
insb
mov
daa
jnp
xchg
push
jnp
fdivl
movsb
and
sahf
arpl
sub
sub
xchg
fildl
std
sbb
stos
mov
or
push
test
mov
push
jle
sub
and
lds
jp
into
cwtl
inc
cli
jae
pop
dec
sub
pop
fs
pop
sbb
loope
or
mov
dec
cwtl
out
filds
call
mov
or
js
mov
add
cmp
cld
xorl
xchg
jge
jb
adc
or
xlat
imul
pop
loope
inc
ss
mov
mov
adc
pop
aas
or
hlt
roll
push
push
jo
loope
arpl
adc
sti
inc
jp
xlat
sahf
cmpsl
fs
xorl
push
mov
pop
call
add
push
cmpb
lds
cmp
scas
or
mov
pop
xor
inc
fldenv
and
lock
xor
jge
adc
sbb
xor
pusha
pop
fs
ret
mov
into
jo
unpckhps
mov
adc
push
xor
out
les
aaa
cmp
push
daa
sub
adc
jo
bound
inc
push
sbb
faddl
fcmovu
dec
inc
pop
mov
sbb
xor
call
mov
or
inc
mov
cli
adc
push
sub
ss
and
push
mov
out
sbb
aad
cld
and
in
loopne
into
inc
add
add
push
or
shl
in
dec
mov
jbe
leave
insl
and
mov
dec
fwait
and
push
ds
cmc
xchg
jae
lock
push
fwait
in
aas
fsts
pop
loopne
jmp
pop
lock
pop
add
push
add
xor
pusha
out
scas
cmp
jmp
ds
das
dec
push
mov
ss
fldl2t
roll
add
cld
and
scas
sbb
je
ss
jge
leave
test
xchg
je
mov
std
outsb
xlat
aas
add
add
or
and
lret
mov
cli
jp
inc
mov
sti
cmpsb
cmpsl
sub
adc
push
sbb
inc
cs
shlb
mov
cwtl
cmp
cmpsb
dec
mov
pop
dec
and
call
jg
insl
sbb
cmp
movsb
xor
cmpsb
add
into
sub
repnz
fadds
push
pop
movsl
sahf
pusha
addl
dec
or
test
mov
test
rcrb
pop
inc
idiv
fwait
sarb
push
inc
mov
scas
insl
ja
push
loopne
jbe
sub
divb
pusha
shlb
jb
jne
icebp
add
repz
sbb
jle
leave
sbb
push
dec
std
fwait
cld
lods
loop
in
inc
inc
popf
jo
imul
aas
in
sub
cld
mov
pop
mov
fyl2x
add
aas
cld
xor
cli
xor
movsl
sub
fprem1
adc
out
aas
add
repz
insl
add
xorb
and
sbb
add
jns
mull
movsl
roll
mov
mov
sbb
cmp
inc
push
or
je
xor
rcl
ficomps
sbb
int3
ds
pop
jbe
and
pop
push
pop
es
cs
lcall
sub
shlb
and
in
in
push
jl
mov
lahf
icebp
dec
cmovbe
cltd
shl
call
mov
sub
daa
test
in
jle
leave
or
nop
push
mov
mov
sub
xor
lds
push
movsb
inc
push
jmp
loop
mov
movsb
cmp
cld
imulb
adc
lret
xchg
mov
fwait
and
test
repnz
or
fists
popf
and
ret
sbb
rorb
sub
jle
int
pop
lods
into
out
lods
mov
bound
cltd
std
push
movsb
sub
xor
xchg
rol
outsb
nop
leave
out
scas
xorl
gs
bound
ss
dec
xorb
aaa
pop
in
rolb
es
sub
pop
mov
mov
test
sub
ss
jbe
mov
sub
ficoml
arpl
bound
add
cmp
cmp
fscale
mov
arpl
jo
push
sub
fmulp
mov
je
adc
push
push
jmp
xor
mov
sub
cmpsl
shrl
dec
ret
int3
stc
xchg
cld
aam
loope
pop
out
xlat
and
cld
mov
mov
inc
fdivs
mov
jno
push
pop
adc
test
and
scas
sahf
shl
int3
dec
cmp
adc
mov
cmpsb
mov
rol
out
pop
out
int3
xor
adc
aas
push
mov
jae
xchg
lret
pop
popa
or
mov
icebp
sub
dec
sub
cmpsl
fs
mov
stos
scas
cmp
lock
xor
xchg
jecxz
mov
or
pop
rcrb
aad
xchg
inc
push
mov
cmp
inc
mov
ficoms
inc
fsubrs
push
insl
fdivl
mov
mov
and
sub
or
shufps
add
push
lods
inc
mov
cmp
lcall
sub
lods
sbb
mov
mov
and
jecxz
mov
faddl
cmp
mov
rclb
cs
add
push
push
sbb
fmull
pop
or
mov
into
imul
mov
push
shrl
cmp
sub
sbb
aas
push
fwait
sub
das
jo
shl
fisubrl
in
adc
aad
popa
mov
adc
in
push
std
arpl
dec
pop
mov
pop
cmp
and
shrl
sahf
std
push
cwtl
xchg
push
add
sub
lea
jo
xchg
aad
jge
sbb
loop
add
and
imull
jp
or
ret
out
mov
and
cmp
xor
mov
cs
adc
fdivrs
std
daa
aaa
cld
jno
mov
mov
add
inc
pop
mov
dec
outsl
out
int3
je
sbb
ficoms
and
xchg
mov
mov
inc
cltd
push
loop
xchg
mov
aaa
fsub
pop
pushf
jp
pop
and
lds
nop
cmc
mov
adc
sbb
jg
call
pop
dec
jl
mov
adc
scas
pop
loopne
cwtl
stos
xchg
fdivrl
mov
out
fwait
outsb
icebp
fcom
js
loope
data16
mov
stos
xor
push
int3
or
xor
xor
imul
mov
shlb
sbb
aas
pop
pop
or
xchg
int
out
xchg
test
sbb
addl
xchg
xchg
adc
mov
jge
and
cmc
dec
ljmp
add
movsb
mov
or
and
mov
dec
rcrb
xchg
dec
jp
inc
mov
xor
enter
add
imul
cmpsl
and
push
decb
jp
or
sub
pop
push
shr
subb
pop
andl
sub
xchg
aad
pop
mov
cwtl
mov
pop
ss
dec
adcb
add
lcall
out
push
test
pusha
movsb
test
flds
xlat
sbb
lret
dec
mov
out
sub
cmpl
arpl
stos
pushf
mov
in
das
xchg
pusha
mov
dec
int
lcall
cmp
jmp
pushf
and
jae
in
pop
iret
test
fucomip
and
insl
fadd
out
mov
push
push
pop
mov
repz
inc
lods
cwtl
nop
sahf
mov
adc
shrl
jbe
push
sub
loop
in
xor
jmp
mov
fiaddl
pop
cmp
or
cltd
out
fsts
mov
std
lods
cld
lret
xor
jl
dec
dec
enter
data16
adc
std
testb
dec
push
in
mov
imul
mov
scas
or
xchg
fmul
cmc
out
dec
fistps
xchg
and
mov
add
jge
push
inc
fs
xchg
mov
ljmp
pop
leave
mov
testl
data16
mov
shlb
icebp
imul
imul
push
pop
pop
pop
pop
shl
xor
bnd
push
call
std
pop
addr16
push
loop
sahf
mov
ret
loop
stos
nop
pop
mov
insl
xchg
out
pusha
ja
inc
and
bound
rol
pusha
cmp
or
push
aam
aas
aam
push
ja
ds
sti
jnp
dec
xchg
or
inc
pop
pop
ficoml
and
sbbb
lret
fcmovb
xor
mov
dec
imul
xchg
lahf
adcb
mov
mov
push
jo
les
push
push
xor
fcompl
xchg
sub
call
jae
cmp
sbb
out
loopne
stc
outsl
dec
mov
addl
inc
daa
rcl
lcall
adc
jae
aas
dec
outsb
lods
push
popf
rcl
add
xor
jge
pop
out
leave
sbb
pop
fisubrl
pop
sub
out
out
pop
pop
cld
cld
or
push
xor
scas
scas
lea
ljmp
lahf
shr
adc
clc
mov
and
jmp
int3
fwait
dec
mov
and
aam
nop/reserved
fildl
cld
or
xor
push
fcoms
insl
shrl
cld
mov
popa
jb
mov
xor
jge
xor
jns
sarb
leave
cwtl
je
rcl
fdivs
test
addr16
aas
jle
add
mov
or
jns
inc
cmp
imul
not
insb
loop
mov
rcrl
dec
or
fs
cltd
lcall
dec
cmp
cmc
es
andb
jg
in
andb
cld
lods
js
out
aas
or
bnd
rclb
cmpsl
dec
mov
xor
nop
push
das
test
add
roll
es
cmpsb
pop
pop
mov
sar
roll
js
lcall
or
int3
mov
testb
or
sbb
push
sbbb
daa
cmp
adc
rcr
bound
mov
fwait
cmpsl
pop
mov
lock
lret
ret
les
xor
add
test
jecxz
pop
sti
pop
jle
mov
clc
pop
aaa
adc
sbb
xor
dec
and
mov
lds
push
xchg
push
xorb
cmpsb
add
inc
fdivrs
mov
les
ficomps
and
out
leave
pop
and
clc
clc
or
push
cmp
mov
mov
push
repnz
push
jge
cmp
movsl
jmp
gs
push
aaa
jo
movsb
or
dec
sbb
jl
js
test
and
xchg
jnp
test
and
add
addr16
stos
ds
inc
or
es
stc
dec
push
js
mov
outsl
into
dec
pop
inc
popa
push
mov
stc
aaa
aas
adc
fucomi
inc
sub
cmp
xor
push
jb
adc
xor
daa
push
cs
adc
xchg
stc
jbe
cmp
add
aaa
ret
sub
fwait
addr16
jge
les
pushf
fsubrs
out
lret
call
shld
test
mov
xor
sbb
lret
push
shrb
scas
cmp
push
mov
or
out
xor
outsb
pop
filds
mov
jl
push
adc
mov
jg
scas
xchg
popf
and
cwtl
xchg
xchg
into
xor
cs
xchg
mov
mov
loopne
inc
and
mov
cld
loopne
je
xchg
fs
xlat
jl
out
aas
shll
or
in
divb
push
rol
and
mov
mov
sbb
mov
lock
cwtl
js
adc
cmpsb
jb
jo
dec
or
ds
adcl
std
xchg
arpl
mov
adc
jmp
xor
loope
rorl
test
cwtl
jge
mov
lea
fistpll
cltd
test
xor
aaa
push
mov
pop
bound
xor
pop
and
inc
fstps
mov
or
rclb
sti
in
mov
dec
jp
or
gs
incl
jne
scas
faddp
shll
test
stos
lds
add
mov
loop
dec
jae
out
cltd
jne
int3
rclb
mov
jg
xchg
rol
shlb
jp
pop
lahf
mov
cmp
call
fldt
popa
xchg
icebp
fs
or
mov
or
adc
sbb
mov
mov
jbe
es
jns
call
ja
xor
loop
jle
adc
dec
push
cmp
push
lahf
scas
aaa
adc
popa
dec
jle
mov
push
cmc
lods
pop
xlat
hlt
out
xor
jno
jg
vsqrtss
jno
mov
xchg
sub
mov
jp
or
adc
fstpl
mov
in
xorl
or
mov
jecxz
mov
jno
fcmovne
jae
fwait
adc
mul
adc
cwtl
mov
xchg
daa
pop
push
push
shrl
lcall
das
cmp
or
scas
dec
mov
aaa
inc
cltd
jbe
sbb
sbb
inc
sub
cwtl
cmp
inc
push
out
push
lea
enter
lret
arpl
lods
test
repz
mov
push
jae
aaa
pushw
push
ret
in
shl
iret
fs
rep
cmpsl
sbb
xchg
sub
jnp
push
xchg
jae
ja
adc
pop
addr16
jmp
dec
and
loop
sbb
in
shll
pop
add
filds
cmpsl
stos
and
icebp
into
pushf
cmp
sbb
jb
shrb
dec
jnp
fcomip
rolb
idiv
cmp
cmpsb
add
out
popf
lock
cmp
mull
xchg
cltd
xor
or
addr16
jg
std
fcoms
mov
lret
mov
push
dec
inc
aad
or
dec
fisttpll
daa
add
dec
jo
test
call
lahf
mov
mov
pop
bound
notb
mov
in
stos
lock
inc
dec
pop
push
pushf
dec
inc
pop
fwait
mov
dec
lds
fcomp
outsl
cs
xor
push
xchg
stc
insl
adc
mov
pop
mov
dec
nop
push
jns
iret
out
jl
cmp
cmpsl
dec
mov
adc
pusha
incl
cld
jecxz
adc
ss
xchg
mov
stos
loop
movzwl
xor
es
xorl
adc
ja
movsl
lret
pop
pop
rclb
mov
pop
xor
outsl
push
dec
mov
cmp
and
jp
stos
xlat
and
mov
mov
pop
and
lock
out
cmp
fcomp
or
mov
adc
add
inc
push
xchg
test
arpl
mov
cltd
pop
push
xchg
sub
lahf
popf
mov
jmp
pop
mov
scas
pop
dec
stos
mov
out
jecxz
in
pop
movsl
xor
mov
bound
jmp
mov
iret
push
icebp
lea
xor
and
lahf
push
hlt
pop
ss
hlt
nop
and
jmp
lret
xlat
fwait
addr16
add
cmp
bound
ficomps
push
push
adc
aaa
lock
jnp
popa
not
imul
enter
push
test
push
ficoml
adc
subl
jle
test
push
pop
cli
push
cmc
cli
pop
cs
in
add
dec
xchg
sar
popa
cld
xchg
fsts
pop
push
mov
fneni(8087
ror
insb
inc
xchg
loope
xchg
sahf
push
jns
loop
mov
jo
mov
aaa
imul
loopne
xor
cltd
sahf
push
divb
popf
mov
inc
test
mov
jno
sbb
loop
mov
pop
stos
pop
dec
push
cmp
fstpt
xchg
int3
pop
data16
fwait
add
mov
sti
sbb
or
pushf
mov
es
out
into
sub
ljmp
roll
push
loopne
sbb
pop
divl
pop
or
push
notb
test
shlb
adc
push
pop
xchg
lret
gs
cmpb
xchg
fildl
inc
jae
mov
into
dec
jne
fdivrl
outsb
xchg
movsb
daa
outsb
test
pop
insl
dec
inc
inc
aaa
scas
mov
push
repz
sahf
inc
pushf
test
js
icebp
push
mov
leave
pop
lret
stos
jmp
sub
enter
xor
inc
outsb
mov
dec
and
stos
and
sbb
rcr
mov
aaa
jnp
mov
aaa
les
imul
jmp
mov
jb
fmul
fwait
mov
mov
lods
lahf
das
and
sbb
sahf
imul
adc
call
in
loope
ss
sarl
and
push
cmp
mov
test
je
imul
scas
add
pop
andb
xchg
push
cli
xchg
test
aam
ljmp
or
mov
out
push
ret
lret
cmp
loopne
mov
test
test
jge
jbe
xor
pop
mov
sbb
ds
jle
out
lea
push
pop
jne
scas
popa
push
lret
jo
andl
adc
or
gs
jecxz
xor
enter
fnstenv
les
sub
mov
pop
inc
insb
imul
outsl
add
inc
xchg
sbb
dec
frstor
stc
invd
insl
fmull
cltd
xchg
xchg
pop
lret
dec
dec
mov
loope
add
jo
xlat
movsb
stos
sbb
jmp
sti
cltd
mov
mov
and
mulb
or
jnp
or
outsl
xor
adc
cmc
ret
jg
xchg
xchg
cmpsl
fisttps
hlt
dec
dec
mov
xchg
out
xchg
rcr
push
das
lcall
pop
divb
jno
cmp
aam
jge
fwait
mov
stc
inc
lret
std
incl
fldenv
lods
adcb
sbb
popl
cmp
sub
ret
cs
inc
insl
jbe
dec
cmc
daa
or
rcrl
fdivs
stc
je
out
das
cs
les
out
ror
adcl
jge
mov
push
out
les
cmp
push
sub
int
pop
jb
mov
and
xchg
add
mov
add
mov
jns
dec
pop
lods
inc
hlt
ja
xchg
insl
sbb
xlat
xchg
mov
push
mov
xchg
mov
and
test
or
fistpll
mov
mov
adc
xor
lock
in
inc
adc
imul
cmp
and
cmp
push
fwait
xchg
push
lds
sbb
sbb
mov
inc
sbb
mov
push
xor
dec
xchg
jo
push
dec
outsb
jns
or
es
mov
out
mov
pushf
into
or
imul
push
inc
xchg
push
pop
idivl
das
mov
jns
insl
int
outsb
loop
ret
mov
sub
enter
jecxz
add
shlb
stc
jns
ja
mov
and
mov
adc
xor
and
push
dec
test
cmc
pop
out
lods
xor
cmp
in
sbb
fstps
popa
adc
shlb
pop
test
mov
pop
jno
inc
xor
loopne
je
sub
cmp
and
and
sub
add
push
outsl
sar
aas
inc
lods
jno
add
or
xchg
and
and
nop
insl
mov
sbb
fldl
cmp
pop
cmpsb
cmp
jb
xor
or
dec
cmp
int3
test
jle
pop
lds
push
xlat
push
mov
mov
adc
iret
ja
rcl
incb
cmp
mov
lahf
mov
lock
mov
push
hlt
mov
mov
dec
sbb
inc
shl
mov
cmp
in
aaa
cmp
stc
jno
jmp
sbb
pop
xchg
insb
sbb
pop
pop
ficompl
add
jnp
pop
outsl
rorl
mov
pop
into
sbb
mov
xchg
in
jne
ss
ficoml
test
inc
jecxz
loopew
cs
aam
xchg
daa
popf
pushf
sub
in
pop
lds
mov
mov
jmp
stc
xor
xchg
lea
adc
je
sahf
fistpll
inc
jne
xor
roll
jae
xchg
push
mov
pop
fidivrs
scas
push
inc
scas
mov
lods
push
inc
out
lret
jmp
aad
inc
mov
pop
xlat
cmc
shlb
fnsave
in
insl
or
or
ds
aam
dec
rolb
add
aas
jne
push
mov
dec
mov
scas
xor
sahf
push
aas
test
sub
cltd
push
lds
lret
loopne
push
xchg
int3
mov
pop
and
pop
bound
jg
dec
dec
es
fwait
cmp
loopne
lret
cmp
sbb
ja
in
loopne
test
jg
aaa
jb
decl
xor
fdiv
and
jle
dec
arpl
and
xor
dec
mov
data16
aad
cs
pop
aam
iret
inc
or
dec
outsb
push
cli
push
scas
lods
sbb
adc
in
scas
mov
adc
sti
push
in
push
sbb
and
xor
test
out
mov
cli
dec
call
aam
sub
adc
iret
dec
cmp
icebp
inc
loopne
test
dec
das
jp
dec
pop
jnp
cmp
mov
xor
dec
mov
push
fbld
sbb
jbe
cwtl
mov
mov
or
les
fldenv
loop
sbb
xchg
repnz
adc
xchg
add
imul
push
cltd
lret
repnz
dec
stos
in
mov
sbb
sbb
mov
xchg
ret
repnz
jnp
cmp
andl
lret
mov
or
jne
mov
mov
adc
data16
mov
mov
cmp
push
inc
or
sbb
fs
outsl
test
aas
sub
int3
xchg
pusha
nop
int
or
lods
mov
xorl
bound
mov
rolb
and
pop
xchg
fidivs
ror
jnp
lock
mov
movsl
mov
push
cmc
mov
mov
or
xor
daa
outsb
rorb
pop
mov
mov
xchg
pusha
lds
enter
xchg
mov
mov
sbb
sbb
mov
xor
ficoml
add
sti
insb
dec
sahf
jmp
cmpsb
sbb
or
daa
data16
aaa
pop
pusha
jnp
mov
inc
dec
cld
popf
leave
xor
jge
mov
push
pusha
pop
jecxz
or
push
fld1
popa
ljmp
mov
cmp
loop
imul
mov
popf
ds
in
gs
push
jl
sub
imul
cmp
arpl
call
repz
mov
cmpsb
push
mov
mov
hlt
xchg
dec
pop
jg
xor
shll
in
xchg
lahf
jbe
iret
popa
lods
in
mov
addb
daa
je
and
mov
mov
lret
dec
jae
outsl
dec
sbb
imul
arpl
push
adc
fwait
push
mov
jbe
lds
mov
hlt
and
out
imul
dec
mov
sarl
aas
xor
inc
je
xchg
add
cmp
sahf
fistps
cli
mov
fdivs
mov
xor
test
inc
and
mov
sbb
adc
stos
pop
in
dec
fmuls
pop
push
cmpsb
rolb
sbb
add
gs
popf
faddl
scas
sub
push
bound
pop
mov
push
mov
addb
pop
xor
stos
add
jbe
cmp
mov
mov
lahf
addr16
test
loope
fsubrs
pop
test
pushf
and
jecxz
xchg
push
test
addr16
stos
pop
mov
xor
cmp
mov
mov
dec
xchg
push
jo
push
xor
idivb
xchg
test
mov
mov
xor
fcompl
and
add
sub
sar
in
sbb
add
cmp
inc
push
sarb
push
add
xor
repz
imul
inc
in
xchg
jge
sbb
mov
add
rclb
jns
jo
int3
icebp
pop
pusha
push
push
dec
jg
mov
inc
lods
push
cmpsl
mov
push
or
or
or
dec
sahf
test
bound
xchg
ja
mov
mov
sub
dec
imul
fwait
dec
out
int
mov
cld
push
cmc
or
push
insb
ljmp
jae
push
bound
mov
mov
push
mov
test
popa
inc
cmp
mov
stos
scas
int3
add
push
jno
mov
iret
adc
cli
xor
adc
inc
lahf
pop
inc
notl
loopne
out
decl
cmp
mov
xor
mov
ss
negl
xrelease
sahf
sub
test
outsl
xchg
test
enter
dec
loope
pop
cs
pop
lcall
test
in
movsl
int3
xchg
jmp
xchg
dec
pusha
fstpt
push
mov
shlb
mov
xor
push
push
cmpsl
pop
mov
xor
and
icebp
outsb
jmp
js
jl,pn
adc
call
pop
sub
xor
add
lret
repnz
pop
jb
aam
and
mov
in
sub
rolb
imul
popf
repnz
dec
stc
movsl
adc
pop
push
mov
jg
jne
sahf
and
sub
andl
jnp
jle
imul
mov
rcl
loope
ret
icebp
mov
imul
mov
fistpll
push
subl
sub
aas
mov
pop
adc
push
mov
out
bound
and
ret
add
pop
int3
push
aaa
dec
or
out
dec
sub
or
pop
xchg
mov
push
mov
inc
mov
dec
mov
ret
push
dec
js
daa
pop
xor
dec
inc
mov
inc
mov
lods
ljmp
xchg
and
jno
subb
hlt
inc
fcmovnbe
inc
inc
ja
out
mov
mov
aaa
aad
xchg
add
aas
pop
loop,pt
jp
mov
mov
call
cmp
fmul
std
jnp
insl
lcall
lods
cmp
adc
and
into
mov
shl
mov
and
nop
mov
fldl
or
xchg
sub
dec
sti
inc
jne
cs
fsub
push
push
xchg
jp
mov
or
addr16
stos
ss
cmp
lret
imul
mov
std
dec
and
pop
in
mov
inc
mov
xchg
mov
jmp
mov
push
mov
add
shl
icebp
mov
inc
movsb
xchg
je
xor
xchg
divb
push
sbb
adc
cmp
call
insb
push
pop
divps
xor
dec
gs
xorl
stos
hlt
or
jge
mov
or
xchg
cwtl
addr16
cmp
xlat
add
outsb
stos
jecxz
ret
lds
pop
xchg
sbb
fwait
bound
in
sbb
jge
jecxz
adc
sahf
mov
xchg
hlt
repnz
dec
cld
cmpsl
outsb
adc
fwait
rolb
push
lcall
test
je
insb
fmull
dec
xor
push
pop
call
inc
addr16
and
aam
jo
js
pop
and
arpl
cli
in
mov
adc
and
xor
mov
pop
fidivrs
inc
add
cmpsb
sub
lods
sbb
cli
repz
and
mov
mov
pop
jne
out
pop
mov
dec
daa
xor
aaa
mov
fs
sub
push
or
pop
lods
jle
jns
mov
adc
in
push
sbb
add
negb
lahf
pushf
or
shr
xchg
mov
add
xor
je,pt
lahf
mov
inc
xchg
sbb
aam
mov
fcmovnb
pop
xor
add
and
loopne
mov
les
mov
lcall
xchg
mov
cmp
fmulp
pop
stos
pop
dec
pop
jg
xchg
push
aaa
int
ret
cmc
call
add
aam
je
nop
sub
adc
sti
in
add
pop
aad
loopne
jle
lods
push
shl
imul
mov
sarl
pop
das
imul
mov
add
lcall
jno
adc
nop
or
inc
shrl
mov
cmp
mov
cmp
test
arpl
jae
in
popf
adc
pop
xchg
enter
jo
jo
mov
and
sbb
adc
push
mov
adc
inc
mov
test
insl
pop
cmp
mov
pop
add
sub
adc
cmp
sahf
stos
insl
adc
int3
rclb
xrelease
movsb
les
mov
mov
fisttpl
or
outsb
clc
pop
and
pop
ljmp
mov
push
xchg
adc
jg
hlt
add
jno
mov
rcrl
or
js
adc
add
mov
int3
cmpsl
xor
ljmp
jns
call
mov
and
mov
outsb
jmp
jmp
out
xlat
adc
sub
mov
xor
enter
daa
add
pop
not
sar
mov
xor
daa
mov
cmp
stos
xor
push
cmpsl
fcmovnb
jnp
stc
je
popf
xlat
fmull
adc
sub
or
jno
xor
mov
test
and
imul
sahf
sahf
cltd
jbe
pop
stc
mov
cmp
outsb
fidivs
fnstenv
jmp
cmp
adc
inc
out
jmp
out
pop
add
cmp
mov
das
outsb
out
lods
enter
dec
aam
mov
mov
out
pop
andl
mov
sbb
cmp
mov
adc
or
push
jae
sbb
std
cld
sub
dec
sbb
and
in
aad
inc
out
xor
sub
les
push
imul
push
or
stc
lods
inc
je
and
jb
sbb
pop
arpl
mov
daa
xlat
stos
leave
jl
dec
xor
ret
lods
xchg
inc
mov
test
inc
popf
lcall
rcr
sbb
sarl
push
not
xchg
push
fisttpl
not
das
ret
push
in
sarl
cmp
fcomi
pop
lcall
call
aam
push
mov
xor
icebp
or
push
and
push
jmp
pop
jb
bound
adc
rcr
dec
fnsaves
fwait
cmc
sbb
call
mov
xchg
fadds
and
into
shll
cmpsl
aam
adc
stos
cmp
and
or
sarl
mov
imul
test
fcomps
mov
gs
hlt
stc
fsubrs
sub
jmp
hlt
scas
repz
push
xchg
outsl
popf
add
pop
mov
es
push
push
mov
cmpsb
push
push
push
push
adc
dec
cli
insl
lods
test
inc
in
push
sub
sub
adc
pop
pusha
cmp
inc
push
inc
test
and
sti
sbb
popf
lds
inc
xchg
test
inc
and
hlt
mov
or
and
std
jo
imul
inc
rol
sub
hlt
jle
and
jb
cmp
jmp
loope
lret
aas
ja
add
pop
cmp
rcl
mov
sbb
add
mov
pop
testl
shlb
mov
loop
push
lock
daa
xor
inc
jle
ss
dec
push
iret
stos
cmc
xor
dec
adc
fldpi
fcomps
cmp
adc
mov
or
shll
jns
js
mov
add
lahf
ds
cld
pop
enter
fcom
cmpsb
jmp
ljmp
push
adc
jno
xchg
loop
mov
adc
sub
push
outsb
xor
cmp
jae
jno
and
sbb
mov
sub
push
dec
push
aaa
jo
push
mov
or
adc
push
or
or
out
ljmp
pop
icebp
out
mov
mov
pop
xchg
mov
adc
out
pop
xor
mov
aaa
cs
das
nop
fisubrs
rorl
fsts
out
cmpsl
xor
out
loope
xor
jne
xlat
add
dec
arpl
ljmp
mov
shlb
shl
push
std
popa
lods
sbb
mov
jbe
or
dec
xor
sti
jae
dec
push
cli
cmp
and
inc
mov
or
xorl
sub
push
sub
cmp
xchg
or
jns
mov
arpl
jmp
out
lcall
adc
jbe
aas
lahf
dec
mov
sarb
repnz
mov
es
pop
sbb
je
jle
xchg
pop
adc
in
mov
orl
mov
inc
and
fnstenv
out
rcll
fs
sub
pop
mov
jg
inc
push
pop
sti
jb
mov
inc
leave
in
push
pop
stos
daa
mov
loopne
push
shll
mov
cmp
pop
cmp
jl
pushl
and
not
mov
ror
ds
pop
push
lcall
out
mov
push
test
sbb
aad
repz
jmp
and
loop
sub
pop
rcrb
fs
fcmovne
scas
jno
xor
in
add
fadds
push
and
push
lea
cmp
pop
out
ds
loop
xlat
and
cmp
fldcw
movsb
test
xor
rcrb
bound
ret
cltd
fwait
cmpsb
cmpsl
mov
sbb
jns
stos
mov
repnz
xor
je
out
ficoml
lret
cmc
sub
mov
repz
mov
xchg
icebp
int
fstl
test
das
adc
mov
lds
stc
xchg
mov
cmp
sahf
push
and
mov
movsl
add
in
add
out
js
xchg
in
pusha
cwtl
jge
out
jp
jg
scas
arpl
jmp
push
mov
fisttpll
push
out
mov
in
dec
mov
mov
out
and
jb
icebp
mov
adc
cld
mov
outsl
int
rol
mov
aam
addr16
sbb
mov
mov
lret
gs
psubw
test
and
adcl
aad
push
cmp
inc
dec
mov
jp
shl
xchg
test
push
inc
adc
dec
mov
mov
xchg
mov
aad
movsb
mov
sahf
fsubrl
or
jp
sub
pop
mov
sbb
jb
jmp
lods
adc
incl
in
mov
push
shr
testl
jge
out
mov
jmp
popa
sbb
mov
xor
out
dec
in
pop
shlb
xchg
mov
in
mov
jp
cltd
sbb
fcomps
int
xchg
cmpsb
mov
insl
inc
or
xor
std
cltd
add
into
orl
fsin
std
pop
mov
push
jp
sarl
icebp
lret
ss
int
shl
mov
and
sti
in
ss
lret
pushf
sti
push
add
nop
data16
or
fildll
flds
fcoms
jnp
popf
fdivrl
push
fsubrs
jnp
ror
lods
cs
daa
not
jns
sahf
xor
xchg
sub
push
inc
sbb
and
daa
and
pop
mov
popf
push
pop
bound
push
test
lds
and
cli
inc
mov
jle
add
cld
mov
loop
mov
addb
inc
jp
dec
inc
aaa
sub
jg
paddsb
cmp
xor
xor
xorb
jmp
add
or
pop
adc
jae
or
pop
add
mov
push
or
bound
ja
adc
jp
xchg
jo
dec
adc
lret
cld
das
hlt
jbe
movsb
mov
out
xchg
ret
ja
in
iret
enter
mov
out
popa
lea
fxch
mov
jmp
mov
mov
repz
jg
icebp
or
xchg
jo
sbb
ret
lea
testl
out
nop
cwtl
xchg
lret
stos
imul
inc
lret
inc
ja
sub
push
mov
pop
test
mov
and
shrd
sub
test
push
ds
or
insb
dec
jmp
enter
roll
dec
repnz
mov
mov
loope
add
fidivrs
push
call
js
jnp
lods
sahf
adc
jecxz
pop
sub
aam
fsubl
and
inc
js
mov
jo
inc
rorl
je
mov
mov
pop
jge
arpl
stc
jno
push
jb
jp
outsl
fbld
mov
cmpxchg
or
sbb
and
xor
sub
and
push
lea
insb
push
addr16
inc
add
sub
sbb
push
popa
sbb
mov
inc
repz
into
or
ljmp
aad
xlat
roll
pop
adc
push
cmp
test
xchg
je
add
sbb
pop
subb
je
cmp
and
xor
sbb
test
xchg
cld
adc
cmp
enter
lods
dec
add
cltd
mov
mov
jle
jp
xchg
les
fildll
int
adc
sbb
and
push
into
push
pop
adc
cmp
dec
sbb
clc
pop
sub
push
testl
mov
or
inc
int3
jnp
scas
out
ja
pushf
es
das
xor
sbb
add
cmc
ss
xor
rcrl
imul
aam
fsubrl
orps
add
shll
mov
sbb
cli
xor
mov
lea
aas
mov
sbb
cmp
outsl
arpl
pop
mov
lret
add
je
mov
xchg
mov
add
and
in
sbb
mov
adc
xor
add
push
aam
leave
sbb
jne
push
sub
pop
dec
lds
jge
mov
and
addb
stos
xchg
jecxz
shl
cmp
and
lcall
outsl
adc
push
jg
cld
xchg
mov
loop
out
xchg
es
int3
cmc
lods
mov
inc
ret
sub
inc
ss
adc
outsl
xor
scas
clc
mov
test
mov
fcomps
in
mov
pop
fldt
and
popf
rorl
jmp
cmp
addr16
cli
lret
dec
jae
cld
ret
loopne
bound
xchg
ja
add
jmp
lds
gs
test
or
mov
dec
adc
add
in
outsl
push
bound
xchg
cli
and
imul
sar
sbb
adc
arpl
sbb
and
arpl
add
or
jg
testb
call
push
cltd
dec
rorb
shlb
inc
lcall
jno
call
cmp
and
cmpsl
inc
inc
jae
test
into
test
shr
push
dec
push
ficoml
mov
adc
sub
stos
stos
rclb
nop
fmuls
adc
push
std
jno
icebp
xor
aas
in
outsl
xchg
dec
jge
add
pusha
and
leave
loop
inc
pop
adc
or
popf
addr16
int3
in
mov
shr
insl
lods
push
sub
leave
pop
add
insl
out
xchg
mov
cmpsl
hlt
cmp
or
mov
es
mov
mov
mov
jne
js,pn
insb
push
shlb
fcomp
push
loopne
enter
stc
cmp
or
sbb
jo
and
hlt
mov
data16
pop
movsl
sub
js
arpl
mov
movsb
orl
push
or
inc
jp
cmp
inc
neg
jo
xchg
stc
sub
push
pop
std
out
ror
cmpl
mov
pop
inc
inc
cs
cld
cmc
imulb
shlb
push
adc
and
shlb
jmp
inc
dec
and
in
jns
iret
leave
xchg
cmpsl
push
adc
test
ror
inc
cs
ficoms
add
std
pop
inc
sbb
call
inc
pop
xor
andl
repnz
sbb
out
ja
fnstcw
in
mov
sbb
sbb
in
and
push
aas
adcb
mov
cli
iret
xchg
push
gs
movd
cmc
pop
push
jns
inc
lahf
stos
addr16
hlt
cmp
push
and
data16
fisubl
inc
sub
dec
dec
js
inc
push
stos
loop
cmp
and
add
add
jnp
dec
pop
and
or
mov
insl
adc
addl
jle
loopne
mov
mov
out
jmp
push
imulb
mov
mov
mov
in
lods
push
ret
dec
mov
js
mov
into
xchg
sbb
pop
xor
aam
jl
push
lahf
push
adc
xchg
xchg
test
push
sahf
add
sub
lcall
sub
dec
mov
push
dec
xchg
enter
out
sbb
push
stc
adc
and
adc
sbb
addr16
std
imul
push
xchg
mov
je
scas
push
dec
push
negl
cld
int3
fmul
fldl
fs
rcrb
lcall
scas
jge
add
sbb
mov
mov
xchg
pop
call
sub
jl
fildll
test
and
adc
jne
jae
fs
add
scas
shlb
and
jbe
fcoml
dec
lods
out
cmp
cmp
ret
adc
jp
add
fildll
mov
repnz
iret
xor
mov
sahf
sbb
sar
aad
out
xchg
adc
dec
lcall
dec
into
mov
dec
addr16
leave
loopne
sbb
hlt
xchg
push
je
std
xor
jnp
popf
popf
push
lahf
push
mov
js
adc
dec
cmp
arpl
test
sahf
sbb
or
xor
pop
mov
sub
adc
add
push
arpl
mov
inc
add
lret
add
mov
mov
scas
stc
xor
inc
inc
stc
loope
cli
sbb
test
cli
dec
or
mov
mov
push
push
inc
pop
lahf
adc
adc
sub
shrl
push
or
daa
out
js
test
movsb
push
adcl
shrl
mov
adc
or
mov
xlat
popa
xchg
ds
pop
push
ficoml
je
rorl
xchg
iret
xchg
rorl
insl
cmp
xchg
clc
xchg
add
bound
mov
test
pop
stc
in
in
test
cs
jle
dec
loopne
stos
jle
fldcw
das
fmuls
rclb
fdivl
fldcw
jb
fadds
push
cmpsb
adc
in
fwait
hlt
jno
mov
inc
int3
cmp
pop
xlat
fadd
ljmp
mul
popa
cli
and
dec
scas
scas
shl
out
mov
fsubl
cwtl
movsb
pop
dec
ret
pop
shlb
mov
push
jb
and
les
popl
jmp
jg
shlb
mov
pop
xchg
inc
lds
push
inc
mov
in
les
jns
leave
std
lea
gs
loopne
mov
sbb
pop
jle
jg
pop
sbb
mov
mov
mov
push
rcrb
fwait
xchg
imul
mov
sarb
out
sbb
push
js
inc
pushf
or
or
jecxz
mov
and
mov
jl
push
lret
cmp
sbb
adc
cmp
adc
aam
pop
sub
lds
add
push
les
sub
les
scas
in
in
cs
aas
or
mov
ret
iret
mov
loop
into
push
cmpsl
loop
push
xlat
lret
and
xchg
jle
lahf
mov
aas
sub
cmp
test
int
pushf
pop
cmpb
mov
pop
cmp
push
es
mov
cmc
add
and
ljmp
and
cwtl
in
push
jle
adc
jno
leave
clc
hlt
das
fidivl
in
cwtl
cmp
pop
aaa
inc
ret
or
xchg
mov
cwtd
pop
cmp
mov
mov
adc
xchg
pushf
stos
cwtl
pop
adc
mov
xor
pop
inc
orl
and
cmp
mov
aas
xor
push
stos
dec
addr16
push
clc
inc
mov
xor
movsb
in
mov
aaa
lcall
dec
data16
sub
sti
mov
push
negl
jge
cli
adc
mov
pop
loop
fnstenv
pop
xor
ljmp
fisubrl
imul
aad
jecxz
scas
pop
push
push
aam
out
adc
jg
out
sbb
es
mov
mov
cmp
push
push
int3
punpckhdq
leave
enter
jle
mov
sub
insb
mov
and
dec
and
jge
test
xor
jmp
xor
mov
test
sti
mov
fucom
add
fbstp
mov
sbb
out
inc
mov
inc
fsubrl
test
and
imul
movsl
les
ljmp
xchg
mov
leave
icebp
fidivrs
mov
test
xchg
enter
test
out
xor
inc
ds
add
arpl
fidivrl
fwait
outsb
push
xor
sbb
bound
adc
mov
mov
mov
xchg
add
cltd
imul
dec
mov
notb
dec
mov
dec
jg
xadd
stos
gs
xchg
push
push
mov
cmpsb
dec
fidivl
push
adc
fstpt
test
or
mov
mov
push
jae
xorl
add
mov
cmp
rol
cmp
inc
sub
das
jno
pop
pop
pop
mov
or
add
cmp
int3
negl
xchg
ja
popa
dec
mov
mov
inc
jmp
rorl
movsl
repnz
ja
outsb
mov
fsubr
pop
cmpsb
xor
xchg
lret
jmp
jmp
or
sub
cwtl
ret
imul
ret
jae
mov
mov
push
mov
mov
jcxz
xor
push
and
sub
inc
lods
or
gs
dec
ss
enter
sub
add
ja
stos
icebp
out
ret
push
mov
idivl
aaa
imul
pushf
xchg
ja
jmp
or
or
cmc
mov
mov
jno
in
mov
xchg
sub
push
adc
mov
pop
xor
mov
push
mov
push
sahf
leave
fsubl
decb
jns
jecxz
jp
inc
dec
sbbb
ljmp
in
inc
add
loop
add
flds
sbb
push
jno
mov
push
mov
mov
insl
inc
inc
cmpb
pop
mov
movsl
ljmp
mov
iret
into
les
jmp
mov
imul
ret
pop
ficompl
fwait
jecxz
repnz
cli
pop
rep
xchg
mov
jo
in
jl
push
inc
popf
sbb
mov
cmpsb
in
xor
xor
and
insb
mov
fwait
mov
icebp
inc
sub
mov
jne
mov
lds
mov
jo
incl
sub
and
cmc
outsl
xor
mov
dec
rorl
dec
andb
mov
repz
mov
ljmp
dec
or
jmp
push
iret
and
cmp
sbb
sahf
xor
jmp
popa
imul
add
dec
gs
pop
mov
cs
ret
or
lret
notb
inc
or
cmp
mov
lock
inc
jg
pop
popf
xchg
rcl
mov
xorl
xchg
or
jg
mov
ret
push
cld
inc
mov
lret
and
jecxz
xor
mov
out
sub
fisttps
pop
fsub
cs
mov
pop
lods
xor
pop
push
test
subb
int
lock
push
ss
int
arpl
mov
in
inc
push
popa
inc
and
orb
aaa
outsb
mov
sbb
jnp
repz
push
hlt
mov
sub
or
xor
jmp
xor
push
fistps
repnz
inc
data16
repz
ja
mov
pop
and
stos
sbb
std
and
jg
cmp
movsb
and
mov
in
add
and
or
pop
xor
mov
repnz
pop
or
andb
xor
sbbl
sub
mov
and
add
inc
dec
stc
lods
dec
dec
sbb
loope
retw
sarb
insb
pop
cli
ds
cli
fs
xlat
pop
pop
jb
jo
cmpsl
cmp
fs
push
arpl
sbb
iret
mov
jmp
movl
push
lcall
push
xor
test
adc
inc
mov
jg
pushf
fidivrl
xlat
clc
sub
pop
xor
inc
mov
mov
mov
jne
lahf
sub
cmpsb
dec
scas
movsl
aaa
ljmp
xlat
xor
inc
push
mov
push
push
push
popa
push
and
push
pop
lds
sub
in
mov
ljmp
jle
loop
xchg
fwait
sarl
popf
sub
out
mov
pop
xchg
icebp
out
aad
movsl
dec
pop
and
out
pop
sbb
mov
dec
jecxz
push
cmp
aad
mov
test
dec
push
clc
jno
jae
ss
xchg
inc
jg
mov
imul
ss
sbb
jo
enter
std
or
add
mulb
ret
xorl
mov
movl
sbbl
xchg
data16
inc
test
jo
lcall
cmp
bound
mov
push
fwait
pushf
mov
sub
arpl
out
add
push
jae
dec
fld
mov
test
fwait
mov
sbb
enter
movsl
aaa
dec
mov
clc
pop
jne
inc
enter
jle
cmpsb
push
mov
inc
pop
xchg
or
jne
cmp
push
or
roll
adc
mov
sub
into
sub
popa
jg
dec
pop
sbb
xor
jl
ret
xchg
adc
lret
cwtl
sbb
out
mov
sbb
fistl
inc
lret
push
scas
popf
pop
test
scas
testb
mov
scas
xchg
mov
and
movsb
fcmovu
inc
dec
jns
pushf
outsl
sbbl
xor
sar
imul
test
addr16
sti
xor
in
stc
sahf
rcl
xor
jne
xchg
push
push
stos
sub
mov
mov
xor
test
rcrb
push
xchg
lods
scas
bound
pop
xchg
popf
rcll
repz
aas
mov
sbb
stos
adc
push
lods
dec
ret
lsl
jnp
out
mov
sbb
mov
cltd
jae
lcall
repnz
mov
ljmp
lods
add
mov
testb
sub
inc
repz
pop
stos
stc
push
popf
cli
xchg
push
xchg
lock
push
push
popa
adc
push
pcmpgtb
shl
out
dec
sbb
ja
stc
pop
inc
movsl
lods
pop
and
mov
pushf
xchg
adc
inc
sub
mov
push
les
jns
lea
inc
out
push
imul
loopne
ljmp
xor
and
out
mov
test
popa
dec
or
dec
ret
ss
lock
jae
cld
gs
inc
inc
xor
mov
pop
push
clc
roll
adc
jbe
xchg
xor
mov
mov
sti
notl
ljmp
lret
out
or
and
rcr
jns
push
fcoml
cltd
cmp
mov
or
and
jecxz
insb
sub
scas
xlat
std
outsb
pusha
sahf
push
loop
jb
push
xor
push
add
in
or
loop
mov
sub
push
adc
mov
ret
jb
lcall
pusha
clc
jne
mov
mov
gs
xchg
push
pop
sbb
mov
out
out
mov
mov
popa
ret
sub
fmull
sbb
es
or
aam
dec
sbb
xlat
adc
pushf
int
cmpsb
pop
adc
mov
hlt
ret
popf
push
xor
and
stos
add
xchg
mov
inc
dec
jle
sbb
fwait
pop
pop
sbb
cltd
pop
sbb
ss
dec
fs
mov
repz
mov
add
jle
clc
mov
adc
adcb
xor
sbb
cli
loop
lret
xorb
mov
jae
jo
cmp
scas
xchg
rclb
add
xchg
cltd
popl
out
xor
mov
mov
in
adc
mov
pop
jne
aam
and
testl
fincstp
sub
mul
mov
xor
das
dec
mov
jbe
sub
add
add
push
lds
jb
in
and
ss
sahf
pop
xchg
cld
out
jmp
test
les
mov
xchg
roll
jne
xor
jle
push
imul
jmp
mov
int3
test
insb
aas
mov
jo
in
mov
mull
cmpsb
out
xchg
pop
sub
decb
dec
aam
fcoml
xchg
xchg
push
push
pop
movsb
test
jne
xchg
fwait
rcrl
add
rcr
sub
dec
rorb
mov
lret
mov
test
fs
cs
out
xchg
leave
sbb
inc
addr16
cmc
cld
dec
icebp
loope
cmc
xchg
push
push
xorl
pop
imul
outsb
roll
mov
push
loopne
gs
pop
sbb
insb
int3
insl
imull
movsb
pop
cmpsl
pop
cwtl
dec
scas
xchg
out
sub
filds
aam
mov
dec
push
fs
mov
adc
pop
mov
int
scas
mov
fwait
test
addr16
and
in
out
cmp
jo
ss
mov
aam
cld
mov
mov
insb
cmp
pop
loope
push
push
xor
imul
sub
sar
daa
push
pusha
ret
pop
movsb
inc
pusha
sarl
push
and
sbb
ljmp
mov
arpl
mov
stos
stos
jg
les
addl
xchg
adc
rcl
push
mov
test
in
cld
es
pop
rcrl
lret
or
and
mov
cli
fnstcw
push
sub
or
stos
xchg
loopne
faddl
cwtl
out
pop
loopne
sti
cmp
cs
or
dec
sbb
mov
subb
sahf
adc
xchg
std
cmp
or
test
jle
scas
maxps
daa
js
mov
negl
xor
mov
dec
bound
fsubrs
arpl
in
dec
push
jecxz
lds
lea
sub
call
je
mov
orb
sub
call
dec
mov
ljmp
add
adc
into
rorb
out
mov
xor
push
loope
xchg
out
dec
pop
dec
andb
aaa
lea
gs
cld
notl
xchg
lret
mov
cltd
push
jp
orl
mov
in
movsb
xchg
push
daa
lds
test
ds
mov
pop
aas
fisttps
sub
and
pop
jg
mov
call
cmp
jnp
out
mov
clc
fmull
add
repnz
sbb
sahf
mov
cwtl
xchg
sub
xor
in
jg
sub
mov
pop
dec
inc
test
sbb
stos
stos
jmp
xchg
mov
in
xchg
xlat
adc
test
je
fimull
mov
jp
repz
pop
sub
mov
xlat
mov
jne
push
pop
in
jecxz
and
cmp
xchg
add
das
add
xchg
stos
mov
in
inc
lock
pushf
cmp
int
mov
mov
mov
movsb
adc
dec
adc
xor
xchg
jo
bound
imul
xor
in
pop
xlat
cmp
popf
lret
jp
jmp
mov
xor
pop
faddl
arpl
enter
imul
out
cwtl
popf
mov
adc
jo
out
xor
sbb
mov
mov
cmpsl
clc
pushf
xchg
insl
stos
in
mov
sbb
pop
xor
imulb
fwait
sub
fs
fs
xchg
cmp
aaa
cmp
int
push
pushw
call
out
fisttps
inc
lods
lcall
and
or
jb
ja
or
mov
lods
imul
repz
and
fst
adc
pusha
sbb
je
repz
clc
jno
adc
dec
sbb
bound
and
push
test
pop
sbb
or
jo
inc
push
fdivs
insl
cmp
xchg
adc
lods
pop
pusha
fimuls
dec
scas
ja
xchg
dec
fiadds
out
inc
xchg
enter
and
inc
pop
je
and
mov
push
lods
adc
xchg
fiaddl
pop
cltd
mov
or
fists
lahf
mov
fwait
inc
in
push
inc
je
popa
xlat
fs
push
xor
or
or
cmp
mov
mov
ja
fcoms
cmpsl
imul
sub
pop
test
or
xor
pop
lret
dec
cltd
pushf
test
dec
insb
sbb
in
test
decb
cli
xchg
xor
jl
sub
xor
mov
inc
out
ret
test
nop
fcomip
ja
pop
sets
sbb
daa
fstpt
icebp
push
push
or
mov
lahf
lds
inc
in
rolb
ja
pop
ficoml
sub
enter
mov
dec
lcall
dec
addb
xchg
jmp
in
xchg
lods
fs
lods
fistl
fnop
imul
inc
stc
inc
push
pop
push
mov
fbld
jecxz
adcl
nop
ja
xchg
mov
and
adc
popa
adc
adc
fistpll
repz
lock
test
cmpsl
mov
lcall
leave
ds
adc
inc
push
cs
and
mov
andl
jno
or
inc
ljmp
jecxz
out
mov
fldenv
mov
or
es
push
push
adcl
push
pop
adc
dec
xchg
mov
scas
push
aam
test
fcmovnu
adc
aam
adc
imul
cmp
mov
orb
jecxz
icebp
lahf
movsb
sub
xor
jbe
xchg
test
inc
hlt
in
mov
dec
lds
xor
mov
cmp
les
dec
mov
aaa
xor
sarb
adc
or
in
es
iret
cmp
lock
fcompl
jge
test
mov
test
adc
push
cmp
mov
das
je
mov
mov
mov
add
cmp
outsb
mov
xchg
je
adc
shlb
loop
add
inc
fdiv
aam
jg
rcl
out
pushf
ret
mov
or
push
lret
lock
inc
or
xchg
pop
inc
jl
dec
mov
inc
push
aam
add
mov
addr16
jno
insl
sahf
jo
xlat
or
lock
orb
cmp
push
sub
decb
imul
xchg
mov
adc
sbb
mov
xchg
shr
es
jmp
and
cld
inc
jo
push
xchg
fildl
push
in
in
pop
and
into
pop
jno
hlt
push
repnz
in
ja
pop
icebp
popa
imul
mov
scas
loope
lahf
negb
out
and
add
andb
lods
mov
adc
jg
xchg
in
jne
jno
fldcw
loopne
imulb
shlb
call
mov
test
jg
addr16
xor
mov
adc
jne
pop
dec
popa
sbb
or
adc
push
sub
outsl
js
and
inc
dec
and
outsl
or
loopne
xchg
scas
or
add
cmp
iret
leave
sbb
lret
testl
fbstp
and
out
sub
push
mov
adc
shrl
mov
jg
mov
loopne
mov
test
sub
and
sub
clc
inc
test
int
sbb
jg
push
icebp
daa
push
sti
inc
leave
push
js
adc
push
or
ja
sub
fiadds
xchg
jno
push
in
mov
push
cmp
add
int3
mov
mov
rcll
popf
int
push
lods
dec
xor
sub
inc
aam
mov
mov
fwait
pop
jmp
mov
and
sbb
mov
add
daa
pop
cltd
xchg
fisttpll
imul
fdivr
imulb
xchg
jbe
xchg
icebp
xor
or
into
dec
mov
fwait
adc
cli
popf
cld
pusha
and
imul
and
push
mov
paddsb
push
icebp
imul
adc
mov
popa
outsb
fwait
add
jns
sub
mov
sahf
adc
rcrb
jg
xor
les
mov
xchg
inc
adc
lret
sub
mov
in
jnp
and
push
cmpsl
pop
push
cmp
test
imul
mov
div
cs
imul
insb
jbe
in
pop
or
pusha
mov
mov
sti
pop
cwtl
xchg
js
std
arpl
and
jae
enter
jecxz
mov
mov
xchg
pop
push
flds
sbb
rclb
mov
or
push
jecxz
lods
outsb
add
push
fwait
push
push
aas
frstor
sbb
cs
jle
out
int
lods
negb
bsf
sbb
mov
jno
movsl
pop
inc
outsl
pop
jne
and
in
mov
outsb
push
or
fcomi
loope
iret
mov
dec
lret
xor
push
pop
xchg
push
out
loop
adc
icebp
mov
add
or
cmpsl
dec
ljmp
pop
jmp
push
dec
int
inc
pop
sub
aad
xor
mov
xor
sbb
sub
xchg
aas
aad
and
out
stos
sub
push
xchg
iret
dec
sarl
mov
leave
mov
mov
jecxz
mov
sub
ret
xchg
jge
imul
andb
xchg
imul
or
popf
inc
xor
out
and
fistps
jg
push
inc
sti
inc
inc
lcall
pusha
add
imul
mov
jns
ljmp
mov
push
mov
pop
inc
mov
mov
outsl
test
mov
xchg
stc
adc
test
jmp
movd
sbb
sar
dec
xor
and
push
imul
jmp
xchg
or
subl
mov
dec
fwait
or
sbb
inc
mov
aam
mov
pop
sti
xchg
mov
jmp
in
jmp
cmovb
rclb
inc
loop
push
or
sbb
cld
inc
jmp
cmp
out
fisubl
data16
jno
cmp
mov
inc
add
shrl
gs
jbe
scas
out
xchg
clc
outsl
pop
adc
out
lods
push
jl
push
fcomps
push
jg
mov
int3
rorb
mov
pop
pop
push
push
stos
shlb
mov
pop
cld
push
leave
dec
out
ljmp
push
pop
fistps
ja
inc
sub
and
lods
aam
loop
push
stos
cmp
xchg
xchg
roll
xlat
inc
jge
dec
roll
adc
xchg
orb
sti
arpl
shufps
int
out
scas
xchg
sti
add
js
inc
or
cwtl
pusha
ret
mov
dec
stos
loop
dec
fdiv
jne
scas
mov
mov
cmp
jns
or
add
adc
jg
inc
mov
stos
push
iret
mov
hlt
pandn
sub
shrl
in
add
dec
std
rcrb
lea
mov
dec
fwait
in
pop
pushf
lcall
jnp
or
mov
jg
imul
jp
test
rcrb
imul
sbb
xchg
xor
mov
lret
out
jns
insl
xor
cmp
and
xor
aam
ret
xchg
scas
xor
test
movsl
ror
mov
call
mov
loop
jnp
idivb
push
xchg
jbe
push
dec
rolb
inc
and
enter
das
cmp
and
lahf
pop
testl
add
je
jl
cmpb
cltd
sti
mov
testb
lods
ret
add
aad
mov
lea
test
pop
pop
cwtl
loop
jo
pop
fs
sbb
or
fs
in
ds
shll
add
sbb
pop
mov
sti
xor
lods
cs
out
jb
repz
xchg
stos
xchg
sbb
repnz
std
data16
popl
addr16
xchg
aaa
ljmp
dec
push
cmp
rolb
cli
movsl
or
jae
jg
mov
fidivs
lret
mov
notl
xchg
dec
and
outsl
icebp
xor
push
popa
imul
mov
pop
stc
push
push
or
mov
jno
loopne
ficoms
mov
aad
xor
lret
movsl
or
sbb
int3
hlt
sbb
arpl
and
in
bound
testb
testb
ficoms
or
fdivrs
mov
mov
dec
test
shlb
fimuls
enter
shlb
xchg
and
jg
test
xchg
dec
lods
xchg
lock
xchg
sub
lods
out
loopne
mov
mov
jo
mov
lods
arpl
repz
inc
je
xchg
mull
sbb
pop
pop
cmp
inc
push
repz
mov
pop
and
xlat
push
push
push
xchg
and
jno
popf
enter
xor
pop
cmp
fcompl
arpl
jns
ljmp
sub
pop
mov
inc
in
imul
mov
xchg
jb
pop
pop
add
inc
cltd
dec
aam
cmpsb
into
es
jo
pop
lret
xor
and
push
adc
xchg
fmul
int
adc
pop
sbb
pop
cmc
popa
cmp
push
add
aam
stos
out
dec
jae
stos
test
sbb
in
lea
pop
jae
xor
andb
aas
xor
sbb
scas
call
gs
jbe
nop
fs
push
jmp
mov
or
lahf
mov
lods
fistl
loopne
xchg
out
jl
dec
xor
pop
mov
inc
jno
cli
push
mov
int
aam
inc
push
ss
lcall
into
add
movsb
push
sub
and
add
and
mov
jns
or
sti
xchg
or
ret
iret
or
sbb
or
and
xchg
daa
dec
addb
es
xchg
pop
mov
aas
scas
mov
add
or
jecxz
jmp
dec
dec
in
mov
pop
int3
ds
inc
mov
testl
cmp
lods
sbb
push
test
inc
add
push
push
pop
cmp
push
in
jmp
dec
repnz
push
adc
inc
jmp
aaa
push
jno
jecxz
mov
pop
xchg
loop
sub
lock
sbb
jecxz
pop
sbb
mov
mov
or
push
sub
daa
push
cmp
xchg
adc
ja
iret
mov
cmp
mov
sahf
rcr
jns
pop
incl
addr16
pop
sarl
pop
pop
mov
mov
cmpsb
jmp
pop
in
add
pop
cmpsl
mov
xchg
repnz
add
je
fsts
addl
hlt
mov
jge
pcmpgtd
sahf
hlt
inc
inc
outsb
sub
xchg
mov
cmpsl
xchg
lods
sub
dec
add
jbe
mov
filds
adc
jbe
in
mov
mov
cmp
pushf
iret
insl
inc
subl
bound
test
mov
sub
pop
push
mov
pop
lret
cld
mov
cwtl
int3
xor
iret
lea
hlt
frstor
xor
mov
lods
dec
out
testb
ret
outsb
fldcw
jb
imull
in
jb
mov
int3
jp
xor
xchg
push
mov
mov
mov
pop
adc
ficoms
les
or
jmp
jo
push
scas
shll
mov
aam
arpl
test
add
daa
xor
jecxz
adc
push
loopne
push
scas
cmp
rcrl
dec
leave
and
jmp
pusha
jg
push
add
adc
pop
aam
aam
sbb
test
scas
das
jl
xchg
in
lods
cltd
add
add
xor
lret
fistpl
cmp
or
call
pop
dec
push
fimull
jge
push
fstpl
inc
pushf
mov
mov
inc
orb
pop
lret
push
test
repnz
js
or
push
xchg
push
mov
repz
clc
std
push
jle
sub
cmpl
outsl
cmp
or
jge
mov
inc
xor
mov
outsb
popf
xor
sub
jp
mov
pop
xor
ja
jmp
jo
sbb
pop
imul
xchg
add
dec
lahf
dec
lods
jp
cmc
xlat
pop
dec
dec
shrb
fwait
mov
jno
push
sbb
out
mov
xor
out
stc
pop
pop
dec
adc
loopne
sbb
xchg
mov
dec
mov
adc
lret
inc
mov
jecxz
pop
sti
lahf
les
insb
cwtl
sub
mov
xor
flds
test
shll
inc
push
mov
jle
xchg
js
repnz
mov
repz
add
jge
ss
sub
pop
cs
and
js
jno
lahf
add
xor
mov
fs
clc
push
shll
lret
jl
xor
out
push
subb
stos
nop
lods
and
or
aam
mov
mov
mov
loop
lret
in
mov
ds
push
test
popf
jbe
scas
je
mov
hlt
mov
pop
in
fcoms
jl
paddsb
inc
adc
adc
neg
dec
dec
daa
push
and
pop
test
repnz
test
push
cmc
mov
mov
sub
add
loop
jg
jg
add
aam
iret
dec
cli
sbbl
lods
test
pop
fsubr
mov
jae
sbb
and
xor
ss
int3
cmp
mov
sbb
mov
xor
jnp
pop
cmpsl
pop
jmp
push
sub
fiadds
js
cmp
push
lret
in
je
movsl
mov
mov
push
mov
cmpsl
fwait
push
jp
ljmp
test
popf
sub
inc
push
jg
mov
mov
push
jno
lds
lods
cli
test
daa
pop
mov
mov
test
fucomi
addr16
xchg
popf
xchg
bound
aaa
pop
pop
xor
lret
pop
xchg
cmp
add
adc
cltd
mov
icebp
out
cmp
inc
cmpsl
je
imul
in
lea
fistl
sbbb
imul
fiadds
mov
add
xor
aad
pop
es
lret
das
add
mov
cmp
push
adc
hlt
popf
xchg
mov
and
xchg
cmpsb
dec
inc
sub
mov
lods
jp
cwtl
stos
lret
out
int3
test
fists
and
inc
pop
mov
adc
cli
imul
and
adc
repz
pop
cmp
loop
pushf
adc
cltd
popf
mov
lock
add
aam
jmp
ret
xchg
popa
sub
xor
and
sbb
add
cli
aam
out
cmp
mov
mov
xor
icebp
xchg
dec
xchg
xchg
mov
ds
fcomps
cs
stc
mov
mov
jp
sarl
cmp
sub
ret
rcr
push
cmpl
cmpsl
push
call
dec
cwtl
loop
in
push
divb
leave
push
cs
incl
and
adc
loope
push
push
shl
push
sbb
gs
and
and
repz
inc
inc
dec
add
inc
xor
push
fwait
jle
lods
jbe
push
xor
pusha
pop
sbb
imul
bound
push
push
xor
inc
repnz
es
jno
push
mov
fxch
rorl
pop
pusha
xchg
jg
push
adc
arpl
and
jbe
jle
fwait
xchg
and
lock
dec
xchg
fiaddl
mov
jle
push
sti
adc
addb
xchg
sbb
sbb
ret
inc
jb
in
filds
mov
and
add
aas
mov
in
mov
mov
loopne
pop
xchg
ror
test
sti
push
ja
add
dec
iret
cmp
dec
popa
xchg
lock
sbb
jmp
cmc
jmp
scas
js
sbb
adc
je
inc
adc
push
adc
movsl
mov
insl
pop
loope
pop
or
xor
pusha
or
scas
in
and
jmp
imul
testl
add
mov
mov
push
pushl
mov
mov
mov
lret
imul
cmpsb
and
jg
pop
stos
and
and
incl
fisttpl
sahf
or
jnp
in
or
dec
mov
mov
jp
cmp
nop
push
or
fsubr
xchg
rcll
sbb
sbb
lret
lcall
aas
pop
popf
mov
in
dec
and
jmp
adc
cmp
xchg
jl
lock
rorl
pop
subb
pop
cmp
cmpsb
mov
lea
push
sbb
lcall
test
fadd
mov
aam
mov
mov
lea
lods
pop
and
les
fwait
pop
xchg
rol
pop
inc
cld
fwait
in
jo
sti
fsub
fs
nop
sub
std
cwtl
mov
cmp
in
sbb
mov
fildll
xchg
ficompl
lahf
inc
cmp
in
rolb
insl
mov
jp
jns
and
jmp
sbb
xor
loope
inc
js
dec
imulb
fcmovnbe
xchg
insb
lds
and
pop
int
aas
jno
mov
or
out
or
ljmp
orb
push
sub
outsb
rcl
cmp
loop
std
sbb
in
xchg
lahf
shrl
es
push
and
mov
xor
push
mov
sbb
mov
xchg
mov
dec
fbstp
sti
push
pop
call
sti
pusha
ja
shll
cs
mov
fs
aad
mov
fwait
or
xchg
arpl
push
add
std
jae
pop
insl
push
cli
push
sub
insl
adc
sahf
sub
xor
pop
mov
mov
push
cmpsb
fbld
test
sbb
jl
mov
daa
xchg
mov
xchg
sbbl
out
mov
mov
test
les
cmpl
rolb
loopne
imulb
out
mov
xchg
loop
xchg
fdivr
dec
lahf
das
pop
cltd
mov
aaa
test
emms
int3
and
push
lcall
lahf
push
ds
dec
aaa
test
cmpsl
xor
or
and
roll
dec
sub
jle
inc
mov
xchg
pushf
jns
mov
insb
jp
push
sub
ret
add
xor
push
lock
cmp
aad
xchg
dec
xor
cld
fwait
mov
inc
jns
stos
mov
mov
pop
xor
out
aad
iret
mov
add
pop
ja
testb
or
lock
pusha
fisubl
jb
inc
movsb
push
lds
xlat
lds
jge
test
stos
sub
popf
dec
pop
inc
mov
sbb
in
orl
lods
and
aad
ret
jne
movsl
ja
test
and
filds
int
push
out
mov
jp
xor
ret
push
lret
fisubl
pop
mov
xor
mov
push
neg
sbb
scas
jl
test
ljmp
data16
je
ret
outsb
xchg
out
and
push
push
mov
stc
push
fisttpl
mov
mov
outsl
push
cmp
xor
bnd
and
inc
popf
lret
jo
scas
xor
ret
cmpsl
jns
shll
or
push
sbb
lcall
sbb
add
divl
xchg
mov
movsb
sarl
inc
arpl
or
add
inc
enter
sarb
gs
xchg
adc
repz
ljmp
cld
movsl
and
mov
mov
and
arpl
outsl
inc
pusha
imul
and
mov
push
cmp
and
adc
mov
fwait
push
std
enter
shll
loope
mov
out
push
pop
push
mov
jnp
push
lahf
or
jge
xchg
inc
push
adc
pop
cmp
jnp
jnp
imul
lahf
dec
xor
clc
loop
aam
pusha
sub
jl
inc
mov
iret
xlat
mov
push
push
jno
pop
outsl
and
in
push
adc
or
and
shr
adc
inc
orl
pop
ficoml
sub
std
sub
jecxz
xchg
flds
mov
fsubrs
cmc
jne
jp
cmp
or
ja
rcrb
in
or
cmp
add
mov
cmp
addr16
outsl
fldl
add
sub
pop
repz
shll
dec
movl
std
hlt
push
push
lcall
adc
jo
dec
cld
dec
out
lcall
hlt
mov
cmpsb
dec
nop
mov
xor
jmp
aas
sub
push
or
mov
sub
push
xchg
push
in
int3
cwtl
mov
dec
xacquire
sbb
pop
scas
sub
pop
pop
xchg
add
mov
sub
in
lods
int3
insl
jmp
addr16
mov
daa
fstpl
sub
pop
mov
ret
pushf
jbe
cmc
mov
mov
in
das
call
outsl
lea
fistpll
inc
into
xchg
add
addl
js
insb
clc
add
pop
xchg
loope
lret
je
sbb
xchg
xor
pop
and
mov
jle
jns
pop
sbb
lds
push
add
loopne
popa
aaa
je
loop
nop
add
xchg
ljmp
psubq
js
xchg
lods
sbb
mov
sbb
aam
push
pop
push
mov
sub
sub
add
aad
ret
xor
fdivrs
and
orl
mov
call
mov
into
movsl
sbb
inc
mov
sahf
xchg
mov
cli
xchg
repnz
into
cli
push
mov
outsb
roll
aas
mov
push
mov
pop
fabs
cltd
je
loop
add
lret
xchg
jnp
cmp
shrl
mov
push
lods
test
cwtl
into
daa
pop
fiaddl
xchg
jnp
and
add
movb
mov
jg
xchg
push
push
jno
xchg
dec
xchg
movsb
loop
cmp
lea
repz
ret
and
test
les
es
popf
pop
pushf
addr16
dec
and
mov
out
mov
fbld
cwtl
push
mov
push
or
or
out
add
mov
add
je
pop
lock
aad
scas
adc
mov
xchg
xchg
xor
cmp
outsb
inc
push
sbb
mov
fildll
int
test
out
cmpsl
cmpsl
repz
cmp
lods
push
jmp
shr
sbb
mov
cmpb
xor
mov
pop
subb
add
pop
mov
lcall
sahf
fisttps
dec
fwait
icebp
pushf
jns
cmp
inc
jmp
adc
adc
and
add
xchg
lret
mov
enter
cmp
shrb
repnz
enter
inc
add
cmp
push
repz
sub
popf
js
rolb
es
or
fs
sub
xor
sub
std
inc
fiadds
nop
sub
test
testl
icebp
mov
lret
cli
push
xchg
add
xlat
outsb
add
je
xor
sarb
in
and
jmp
inc
fldcw
pop
mov
notb
mov
dec
loopne
push
jle
in
add
nopl
mov
pop
xor
lret
jecxz
out
lret
cmp
lret
jns
pusha
dec
aas
cmp
ljmp
jo
stos
movb
bound
mov
cmpsl
lret
outsl
aas
add
xchg
sarb
out
pusha
mov
mov
jb
scas
enter
in
push
sti
xchg
sub
repz
decl
mov
pop
call
push
insb
mov
ss
push
mov
sbbb
fcomi
mov
and
cwtl
ret
sub
sub
test
and
pop
xor
cmp
aad
rcrl
inc
mov
xor
sub
js
push
sbb
jle
sub
xchg
clc
cmp
popf
push
cld
mov
sahf
or
push
jae
add
test
cmp
cmp
mov
and
add
adc
std
xlat
call
stos
rorl
jns
xor
xchg
cmp
pusha
cli
cmc
xor
push
add
je
data16
popa
push
sti
and
ds
jne
dec
pop
test
sub
sbb
xchg
and
adc
loop
cmp
enter
push
fldl
and
adc
cld
jp
mov
stos
cmp
imul
addr16
out
xchg
les
or
or
jg
inc
psubw
or
dec
cmp
mov
xchg
xchg
push
mov
cltd
inc
repnz
jb
pop
mov
sbb
push
fimull
pop
daa
scas
subl
fucom
push
nop
pushf
push
ror
xchg
in
test
add
andb
mov
add
pop
mov
out
mov
mov
sbb
xor
adc
inc
fdivrs
mov
adc
mov
dec
gs
push
jmp
mov
xchg
push
cmp
ret
mov
out
and
arpl
push
xchg
loopne
mov
data16
filds
or
jle
je
mov
dec
push
adc
mov
shll
and
cs
jb
insl
xor
and
int
ljmp
sub
into
lods
push
or
xchg
xchg
popa
fisttps
mov
fisubs
cwtl
imul
mov
shr
ja
movsl
clc
pop
xchg
imul
sub
sbb
pusha
inc
imul
ret
add
dec
test
xorb
test
jmp
imul
dec
hlt
push
lahf
sbb
pop
push
rcrl
lcall
clc
es
sbb
inc
repz
sbb
or
shll
mov
pop
jb
jmp
lret
dec
add
leave
mov
shlb
mov
mov
not
repnz
je
rcr
sbb
sbb
xchg
sbb
or
push
nop
mov
mov
cmp
test
mov
xchg
lcall
cmpsl
aaa
sahf
mov
adcl
ja
xchg
mov
adcl
mov
mov
mov
inc
loope
lcall
mov
stos
push
or
pop
cmpsb
pop
into
sbb
push
dec
xchg
cltd
vfmadd132sd
rcll
repnz
mov
loop
push
jecxz
xor
xor
clc
imul
loope
es
mov
imul
xor
jge
jmp
jmp
inc
xchg
or
mov
xchg
cwtl
inc
and
cmp
adc
test
stc
mov
ljmp
fwait
and
xlat
cmp
bound
mov
lods
fidivs
mov
cltd
pop
test
cmp
in
and
and
movsb
pop
sti
and
adc
loope
mov
mov
xchg
push
mov
xor
ror
js
push
insb
xchg
adc
lods
add
cltd
mov
loopne
pop
rolb
sbb
push
enter
lret
rorb
ljmp
movsb
jno
cmp
lea
ret
adc
mov
and
bound
lods
call
das
push
xor
sbb
add
movsb
fiaddl
lock
cmp
pop
rolb
sbbl
push
xorb
cwtl
adc
orb
repz
push
mov
inc
aas
xchg
js
or
sbb
xor
mov
cmpsl
jae
jg
lods
adc
int3
inc
ret
mov
mov
insl
add
push
daa
xor
push
pop
cmpsl
mov
imul
in
pop
aam
dec
sbb
pop
nop
je
push
add
mov
fcomp
sub
cltd
or
sahf
insl
scas
cwtl
jne
or
sbbl
jnp
dec
ja
out
clc
mov
int
pop
dec
add
daa
push
lret
out
insl
and
adc
jb
mov
lock
sbb
lahf
popf
adc
jns
xchg
mov
push
and
pop
jp
mov
outsl
push
mov
ja
leave
jge
add
xchg
mov
jno
jg
push
and
sub
sub
inc
dec
orl
mov
dec
add
jg
in
dec
imul
push
dec
and
mov
fstl
cmp
scas
dec
sub
adc
or
mov
in
imul
aas
js
push
in
gs
cld
xlat
inc
loop
int3
sbb
stc
mov
or
sub
imul
dec
out
xchg
andl
insl
loop
ret
sti
push
xor
fnstsw
or
and
cmpb
fdiv
repnz
mov
call
add
into
add
bound
dec
or
repz
stos
dec
adc
jl
fidivs
add
daa
sahf
and
sbb
xchg
movsl
rcrl
inc
push
sub
jp
pusha
sbb
call
dec
outsl
and
imul
or
aad
or
xor
loopne
xchg
xchg
xorb
aam
mov
rorl
xchg
in
jp
xlat
daa
push
mov
xchg
shrb
fxtract
fmuls
adc
cmp
mov
push
fwait
cmp
sar
cmp
xchg
pop
cmpsl
cmpsl
out
mov
fidivrl
lods
push
jmp
or
sub
or
sub
out
sub
test
scas
out
pop
add
sbb
inc
dec
movaps
daa
bnd
bound
cmp
rcr
xor
add
xor
inc
rolb
xor
mov
xchg
loope
data16
insl
mov
mov
push
outsl
cmpsb
jmp
lahf
xor
mov
dec
jecxz
push
mov
and
mov
lea
out
data16
dec
mov
jo
pop
mov
dec
fmuls
in
cmpsl
sub
sbb
or
in
cmc
fistl
ljmp
add
ja
mov
xchg
lahf
inc
jp
aad
aam
test
leave
mov
pop
test
cmp
push
sbbl
jle
mov
leave
jno
out
mov
inc
push
and
inc
mov
inc
fs
aaa
test
sahf
shrl
out
sub
mov
sbb
cmp
outsb
push
sub
pushf
xchg
ljmp
jmp
mov
fdivs
pusha
pop
xor
sbb
test
arpl
add
scas
cmpsb
jmp
mov
nop
sbb
jo
mov
jp
fisttpl
in
dec
pusha
pusha
inc
out
xchg
xchg
lcall
push
sbb
ljmp
lcall
mov
gs
lret
or
push
inc
js
fld
in
setns
int3
mov
xchg
mov
cmp
add
xor
shl
mov
sbb
dec
loopne
add
or
in
out
popf
clc
mov
xchg
mov
iret
imul
gs
pop
fnstsw
rol
pop
test
or
loope
dec
shll
cmpsl
test
scas
pop
jmp
subb
or
jl
dec
xor
jae
or
or
repnz
in
sbb
xchg
out
je
jg
popf
mov
xor
xchg
jne
adc
sub
cs
lock
sbb
rol
xchg
lea
xchg
ss
pop
or
xchg
popa
push
adcb
xlat
sub
lret
mov
or
pushf
jnp
dec
mov
and
lds
sbb
mov
mov
pushf
inc
add
mov
sub
aam
inc
fildll
ror
fldl
jae
or
xlat
inc
mov
pop
into
ja
test
stos
jno
mov
xor
sbbb
jo
jecxz
jne
jb
mov
addr16
imul
cmpsb
sub
cmpsb
stc
cmp
push
xchg
rol
aas
mov
adc
rorl
push
add
dec
insb
jp
xchg
sbb
into
repnz
sub
clc
mov
sub
loope
jbe
test
mov
or
test
icebp
adc
les
mov
xor
pop
shrl
pop
insb
sub
testb
dec
cmp
xor
arpl
xchg
scas
sub
test
stos
bound
popa
dec
test
sub
sub
jo
inc
popa
ret
push
aam
inc
pop
mov
inc
push
lahf
jge,pt
mov
xchg
loopne
or
ret
repz
sub
mov
dec
inc
lods
ficompl
les
fcmovne
cmp
gs
jae
sbb
push
outsb
dec
aas
cltd
pop
insb
int3
nop
mov
call
mov
addr16
push
imul
int3
push
out
aam
mov
cmp
mov
lds
icebp
mov
push
shrl
and
cli
mov
aas
push
aad
jl
js
jns
sbb
sbb
cmp
cwtl
or
ret
sub
jnp
dec
pop
popf
out
push
cmp
adc
mov
or
sbb
out
cld
ret
jnp
push
mov
cmp
notb
out
insb
inc
adc
loopne
std
je
jo
fildll
pop
outsb
jp
call
into
gs
imulb
repnz
cs
jb
shrl
adc
push
jmp
mov
test
cmc
int
stos
push
bound
mov
outsl
inc
aam
pushf
fsubl
jno
adc
pop
push
xchg
cltd
xor
or
inc
cmpsb
dec
outsb
dec
jne
test
inc
jne
jge
jne
mov
jecxz
cmp
xor
rclb
jmp
pop
pop
pop
mov
xor
inc
push
sbb
jg
inc
add
and
pop
mov
fdivrl
ret
cmp
sahf
sub
mov
or
rolb
adc
mulb
mov
jo
call
add
cmp
loope
xchg
and
ds
fcomip
test
ja
adc
push
cmp
insb
pop
inc
pop
xor
ss
clc
stos
icebp
pop
imul
and
outsl
pop
add
sub
jl
xchg
adc
and
shlb
icebp
fsubp
notl
mov
test
pextrw
mov
shlb
jno
push
mov
shrb
mov
pop
int3
mov
sub
xchg
xchg
lret
jbe
lds
loop
shll
stos
bswap
shll
repnz
and
in
into
sbb
movsl
dec
inc
pop
cmp
adc
scas
sti
insl
pop
jno
jge
sbb
dec
lock
xchg
jnp
mov
jg
mov
xorl
ret
cmpsb
and
cli
popa
push
push
pop
mov
lret
mov
or
loop
and
adc
pop
mov
mov
lods
std
mov
inc
ja
addl
jb
xchg
lods
addl
sbb
mov
xor
inc
loopne
lds
test
push
mov
mov
ss
hlt
and
loope
jmp
adc
jmp
ret
sbb
cmp
repnz
cmp
mov
js
fcomps
rcll
arpl
mov
mov
mov
popf
adc
pop
adc
fadds
push
sbb
jo
test
cld
and
test
xor
rcr
ja
xor
cmc
adc
xor
jb
fcmovbe
jmp
lea
sub
lock
pop
xchg
jg
popf
add
push
push
mov
or
cmp
xor
and
cmp
xlat
sbb
jbe
sub
in
int
and
fucomi
pop
lahf
push
lcall
mov
imul
adc
jp
mov
sbb
adc
jp
ret
mov
push
std
test
push
cmp
pop
out
or
dec
dec
xchg
adc
cmp
mov
sub
orb
data16
pushf
inc
mov
sub
in
fistps
daa
jmp
push
lret
rep
aam
or
dec
mov
push
ret
aaa
sub
popa
repz
jmp
inc
and
loope
push
mov
cmp
inc
mov
mov
cmp
mov
push
clc
xchg
push
adc
aam
rorb
ficomps
loopne
push
mov
or
loope
xlat
dec
sub
aam
lret
cltd
std
stos
mov
sti
xlat
sbb
cmp
ret
in
or
loope
in
mov
daa
xchg
dec
shll
dec
cltd
shrl
and
ficoml
dec
stos
popa
adc
mov
sub
dec
jecxz
mov
jb
mov
mov
aad
mov
loope
push
in
gs
push
xor
pminub
push
test
add
pop
jns
in
cmp
inc
jo
push
mov
xchg
cmpl
xchg
or
and
cld
stc
push
aaa
cli
mov
insb
pop
push
push
inc
test
cs
cmc
mov
fistl
or
iret
push
ret
not
repnz
lods
fmull
or
sbb
mov
fisubrl
sbb
fistpl
jne
clc
dec
adc
mov
and
cmp
sub
test
pop
xchg
mov
nop
fs
lods
mov
mov
mov
xchg
clc
cmp
add
loopne
pusha
aam
loopne
mull
push
loop
addr16
clc
outsb
insb
sahf
mov
mov
divb
mov
and
jb
mov
mov
xchg
fbld
fsubrs
cltd
ret
jo
popf
inc
hlt
sbb
cwtl
mov
scas
cmp
nop
pop
push
js
push
jg
mov
mov
movsl
xor
pusha
jae
jno
sti
insl
xor
pop
sub
mov
lods
jl
push
sbb
clc
in
pop
ds
repz
cmp
sub
fstl
mov
mov
or
or
push
xor
mov
pop
xchg
xor
or
stos
bound
test
mov
or
xchg
fcomps
push
jle
les
mov
and
lea
ljmp
xchg
jno
dec
sbb
rcl
sub
loope
mov
add
fwait
sti
ja
stos
or
mov
loop
sbb
les
xor
dec
xchg
addb
dec
add
loopne
out
test
pop
mov
mov
adc
movsb
jno
lods
xor
cwtl
daa
jg
mov
pop
push
inc
lret
dec
or
out
push
sbb
cmp
jmp
mov
mov
jmp
cwtl
out
aas
popa
dec
out
into
dec
mov
jg
fsubr
mov
push
cmp
xchg
cmpsl
pop
jp
lcall
icebp
xor
sbb
in
cmpsl
and
xchg
rolb
mov
loop
int3
ja
sbb
cld
stos
loop
out
and
or
testl
imul
out
test
lods
cmc
loopne
faddp
fwait
jb
mov
ja
in
enter
add
inc
mov
test
add
popa
ffreep
xchg
xor
repnz
mov
insl
add
mov
jp
les
jg
or
xchg
clc
mov
or
add
cltd
or
ret
rcll
test
mov
insb
mov
add
xchg
xchg
xor
xchg
xchg
aam
mov
sti
data16
fmul
sub
pop
fcomp
shlb
add
call
jg
xor
and
ret
push
into
ret
aam
xchg
outsb
or
jecxz
fs
sbbb
adc
or
dec
push
sub
cmp
xlat
mov
lds
xchg
pushf
enter
movsl
out
and
rclb
sbb
out
pushf
adc
mov
jmp
cltd
add
mov
dec
test
pop
out
push
imull
sbb
stos
test
lcall
inc
xchg
inc
sbb
mov
jns
or
jecxz
cmpsb
movsb
and
xchg
mov
sti
popf
add
dec
xlat
ds
dec
repnz
test
repnz
in
cli
lods
scas
sti
repz
add
leave
xchg
dec
inc
fwait
xlat
sahf
lahf
pop
pushf
test
scas
leave
js
shr
xchg
mov
icebp
xchg
in
fcomip
ljmp
insl
scas
lcall
xchg
test
push
jo
stos
fstl
xchg
out
jecxz
xor
sub
fadds
cltd
dec
fwait
repz
add
scas
jle
and
pop
daa
push
inc
xchg
gs
sahf
xor
jb
cltd
icebp
imul
push
bound
in
addr16
sub
xor
pop
fwait
jbe
xor
cmp
dec
xchg
roll
xchg
add
add
lahf
cmc
rorl
repz
sti
imul
lock
sub
lcall
stos
push
sub
dec
leave
pop
cmc
aad
popf
mov
aad
add
mov
push
push
bound
bound
stc
dec
inc
mov
jbe
jg
cli
mov
out
nop
stos
add
mov
and
popf
mov
xchg
sti
cmc
add
sub
sub
test
xchg
and
xchg
sbb
add
add
pop
fldenv
dec
cmp
or
push
xor
movsb
push
xor
int
cmp
mov
or
add
push
hlt
inc
jae
js
mov
sti
out
push
jl
mov
jge
movsb
jg
jbe
js
dec
in
mov
adc
sub
pop
xchg
in
xchg
fmul
scas
mov
mov
push
dec
cs
jg
orb
push
mov
cmpsb
mov
and
xor
xchg
addr16
mov
xor
jae
lret
pop
fninit
popf
add
ljmp
outsl
and
sbb
aad
adc
mov
fmuls
in
dec
push
imul
sbb
jo
jae
mov
jp
push
leave
test
into
cmp
sbb
push
inc
or
xchg
fs
lret
dec
pop
bound
arpl
iret
jbe
mov
insb
mov
mov
fstps
push
stos
push
imul
pop
mov
pop
jo
imul
push
pop
inc
cmp
mov
add
movsl
mov
das
test
xor
iret
fildll
push
fistpll
inc
mov
movsb
out
hlt
inc
add
cmpsl
mov
das
out
mov
mov
sub
sbb
fdiv
das
jg
shll
popf
push
das
push
and
push
and
xchg
xor
and
shl
add
test
sbb
add
mov
jmp
add
xor
xchg
mov
js
xchg
add
mov
mov
jecxz
xchg
cmp
sub
dec
sub
fidivrl
bnd
sarb
fcomp
jnp
lret
dec
cwtl
xchg
cmc
leave
inc
mov
or
jne
enter
mov
sbb
cmpsl
pop
and
addr16
xorb
je
lret
mov
mov
jmp
push
aam
mov
jl
or
mov
and
dec
mov
jg
dec
inc
or
sub
lcall
or
add
cmpb
xchg
imul
push
inc
dec
hlt
lea
cli
dec
mov
js
add
pop
push
mov
pop
push
imul
jp
fstps
xor
imul
push
push
pop
xor
stos
mov
outsl
lea
lahf
or
mov
std
shl
faddl
mov
testb
lods
arpl
or
jmp
decl
mov
fiadds
pusha
mov
das
fsts
dec
rcl
pop
cmpsb
loopne
popf
inc
fwait
idiv
xchg
scas
mov
into
inc
ret
imul
daa
cmp
cmp
sbb
mov
or
mulb
scas
push
xor
js
scas
pop
popf
inc
inc
lea
pop
inc
pusha
shl
sahf
push
xlat
push
mov
in
add
push
add
jno
cmp
add
jmp
xchg
div
adc
and
push
and
mov
push
mov
add
add
out
push
push
xorb
cwtl
xchg
inc
test
mov
outsl
and
aaa
inc
addr16
inc
das
inc
or
dec
fdivs
mov
push
dec
sarb
sbb
xor
or
imul
mov
out
test
inc
pushf
dec
fdivl
repz
mov
sbb
xor
lahf
xchg
push
nop
adc
push
push
inc
cmp
je
test
jle
lods
addr16
dec
sub
lea
addb
xor
imul
aas
call
jmp
test
insl
pop
imul
outsb
mov
mov
sbb
hlt
add
sahf
in
mov
cmp
mov
fsubs
push
lds
ret
call
dec
pop
xor
push
push
loopne
and
imulb
push
insb
call
sbb
inc
add
push
push
mov
adcb
pop
pushf
jae
xchg
orl
lret
inc
or
rcr
push
mov
dec
mov
dec
and
xor
push
js
pop
push
xchg
mov
lahf
cltd
mov
ja
and
scas
fsubl
sub
lods
sub
pop
and
scas
inc
sub
nop
sub
aaa
mov
scas
and
out
push
icebp
cmp
and
and
and
sub
shll
or
inc
mov
add
adc
xchg
out
xchg
or
adc
lahf
mov
jmp
test
ds
push
jge
jmp
xor
mov
mov
xor
inc
ja
inc
mov
fiaddl
jbe
sub
cmp
add
es
jp
pop
mov
call
div
stos
pop
xlat
or
mov
mov
gs
and
cli
lahf
cmp
xorb
and
js
test
in
jmp
or
loopne
clc
cmp
inc
ret
test
mov
cvttps2pi
mov
or
test
pusha
jmp
or
cmp
adc
fsubrl
jb
iret
dec
mov
jb
push
nop
mov
sarl
gs
pop
xlat
popf
inc
xor
push
and
mov
cmp
pop
lock
sahf
cltd
rcll
pop
pop
dec
sbb
pop
fldt
test
cmp
imul
jns
push
mov
int
sub
sub
in
insb
imul
xchg
das
into
mov
pop
xchg
fdivl
out
sbb
mov
cmp
stc
adc
mov
mov
xor
sub
std
push
push
jp
xor
push
sarl
loope
lcall
inc
iret
into
cmp
fstp
cmp
les
xor
int
add
xchg
stc
xchg
pop
or
js
ficoml
je
leave
in
sub
mov
xor
mov
and
ja
fstl
fwait
mov
xchg
call
shrb
inc
pop
jecxz
dec
sub
bound
cmpsl
lea
sub
mov
ret
add
fisttps
push
push
ljmp
xchg
data16
mov
jge
and
rclb
xor
lcall
lret
mov
jae
push
enter
push
cmp
shr
aad
lods
cmp
add
out
jmp
stc
or
sbb
int
sub
leave
inc
xlat
push
adc
movsb
cmp
outsb
enter
sbb
or
mov
in
add
imul
adc
lods
fwait
aad
rolb
cmpsb
ret
mov
push
push
or
cmp
pop
imul
sahf
mov
pop
cmpsl
out
adcl
repz
testl
in
push
hlt
imul
push
push
addr16
lods
sbbb
aam
fcmovnu
repz
repnz
inc
cmp
jb
adc
inc
cltd
adc
add
cmpsb
pop
pop
push
ds
testb
sbbl
lods
das
jae
test
es
into
jge
inc
xor
inc
add
loop
push
jbe
xchg
dec
popa
fisubl
cmp
into
dec
mov
xchg
aaa
popa
inc
mov
pushf
xchg
in
lock
jmp
aaa
dec
inc
pusha
xacquire
enter
fcomps
sub
int
push
arpl
sub
fstps
and
xchg
dec
aad
or
repnz
in
xor
xlat
arpl
scas
add
mov
mov
xor
add
xchg
leave
sub
mov
fcmovnu
xorb
ficoms
mov
and
pop
sbb
jmp
mov
xchg
ss
jmp
cmp
mov
in
inc
xor
jns
jae
push
pop
cmpsb
ljmp
scas
call
push
push
push
mov
loope
dec
mov
incl
test
ja
hlt
push
js
add
mov
shrl
addb
hlt
inc
lods
sbb
jb
or
cmp
mov
adc
or
xchg
sbb
inc
push
lret
mov
test
jg
fwait
aaa
outsl
cmp
bound
xchg
jp
insl
ds
insl
fwait
adc
mov
dec
mov
jmp
rol
cli
jp
xlat
mov
adc
or
inc
mov
ja
xor
into
popf
pop
imul
jo
inc
mov
or
jo
push
int3
xchg
xlat
imul
pop
xor
dec
or
adc
lcall
jmp
xchg
imul
xor
mov
pop
mov
stc
repz
jl
and
dec
fwait
pushf
mov
cmp
out
rolb
xchg
or
pop
iret
jl
into
cmp
fldenv
sub
pop
mov
test
mov
rcrb
push
xor
sbb
push
jl
mov
in
addr16
and
cmpsb
mov
jp
clc
aam
and
inc
test
addr16
fcompl
xchg
sbb
lret
arpl
jmp
outsl
ss
pop
sub
mull
jno
addr16
add
sub
xchg
flds
xchg
out
fwait
adc
push
pop
xor
ret
mov
rcrb
xlat
push
mov
int
dec
jmp
push
jnp
pusha
sahf
ss
scas
sar
dec
sub
sbb
jecxz
aam
inc
xchg
sbb
test
xor
push
cs
inc
push
jg
mov
js
insl
inc
mov
or
leave
adc
ljmp
repnz
sbb
mov
outsb
cmp
pop
dec
add
inc
push
mov
in
es
cmp
pusha
iret
pop
push
push
rcll
movsl
mov
inc
jo
jg
pop
movsb
js
inc
jmp
pop
enter
mov
cmp
imul
cltd
mov
and
sahf
ds
add
movsb
mov
xor
xchg
sahf
jno
ds
int
in
imul
fs
neg
js
cmpsb
mull
notl
sub
lahf
fadd
pushf
mov
add
shlb
jp
jecxz
frstor
mov
mov
and
push
jp
lret
push
fcoms
and
push
shl
cmp
inc
sbb
mov
pop
adc
push
adc
mov
push
mov
sarb
test
bound
andl
pop
gs
movsb
notl
dec
in
lods
test
xorl
lods
test
mov
or
daa
das
iret
mov
rcrl
iret
pop
les
push
out
and
mov
aaa
and
mov
and
aaa
sub
lahf
xor
xorl
mov
jecxz
ja
test
mov
pusha
mov
stos
cmc
das
aaa
or
daa
mov
pop
push
iret
sahf
ljmp
outsl
cmp
daa
jae
mov
in
cmp
scas
jnp
fmull
js
mov
hlt
sbb
jae
jle
imul
aas
call
loopne
out
adc
fisttps
mov
call
jno
fistpl
insb
and
aad
out
mov
add
gs
test
imul
outsl
stos
ret
into
jg
push
pop
es
insl
sbb
and
mov
sub
jno
mov
add
sub
lret
lock
popf
fcom
insb
sbb
xor
and
jnp
mov
mov
ljmp
cmpsb
cmpsl
in
mov
push
push
mov
out
mov
mov
mov
repnz
mov
adc
push
rep
movsl
das
lods
in
roll
xor
dec
fstl
jmp
leave
push
pop
inc
sar
sahf
dec
sub
jmp
and
sbb
js
push
std
pop
gs
leave
adc
dec
ja
xor
ret
adc
sbb
and
adc
adc
sbb
sub
sbb
out
mov
cmp
jbe
push
stc
and
jnp
movsb
mov
out
mov
xor
daa
xor
js
ret
imul
cltd
push
fwait
aam
sbb
shrl
sbb
fwait
sub
xchg
cmp
scas
fs
mov
sti
ret
pushf
andl
gs
std
sbb
test
js
and
scas
mov
mov
testl
fldlg2
lds
ds
leave
mov
pop
shrl
iret
adc
cltd
pushw
out
push
inc
mov
dec
sahf
cmp
dec
xchg
push
mov
popa
sbb
jne
cmp
add
and
enter
xchg
repnz
pop
faddl
pop
movq
add
cmp
dec
in
popa
stos
add
and
sti
leave
inc
in
pop
pop
mov
arpl
pop
or
cli
aad
mov
dec
aad
out
mov
jno
add
add
or
add
gs
jnp
sub
jb
repnz
daa
adc
dec
out
push
xor
dec
lds
out
sti
jle
adc
adc
mov
mov
fcmovnb
add
ret
lea
push
loopne
loop
mov
int
xor
enter
adc
xchg
push
adcb
cmp
jmp
divl
mov
fsubl
cmp
xchg
mov
or
cmp
popf
inc
rcr
and
pop
fidivrl
pop
lcall
pop
adcb
das
add
and
mov
fsubrl
outsl
cmpsl
push
fstl
mov
pop
push
add
push
or
fwait
or
movsb
push
xor
or
repnz
xor
rorl
jle
inc
jp
imul
xchg
push
insl
ljmp
mov
jae
fxch
stos
pusha
and
sub
push
cwtl
test
imulb
aad
mov
or
dec
cmp
fs
xchg
out
pop
out
xchg
lds
sub
lcall
cltd
cwtl
lds
in
push
jno
pop
das
sbb
or
fadds
shll
and
cmpsl
scas
mov
sub
into
in
mov
das
fidivs
xor
in
dec
das
mov
inc
sub
dec
imul
dec
jmp
xchg
inc
xor
dec
hlt
int
mov
pop
pop
dec
ret
sub
lret
jo
dec
dec
rolb
adc
push
bound
pop
dec
add
imul
xor
aas
pop
add
jo
push
loope
aaa
out
das
shl
push
or
mov
or
imul
push
inc
mov
mov
int3
lea
nop
shr
add
into
xchg
push
jnp
jge
cmp
jge
sbb
fists
push
je
sti
mov
mov
mov
clc
push
xor
xor
inc
inc
xor
push
jae
rcrl
jne
push
sub
test
mov
sub
push
inc
cs
test
notb
jg
faddl
sarb
pop
pop
jecxz
pop
data16
icebp
insb
adc
push
shlb
mov
mov
xchg
jns
adc
jbe
dec
push
testl
xchg
push
ljmp
jae
fisubrs
sarl
sub
inc
sarb
adcb
lock
dec
dec
mov
js
dec
insl
outsb
jb
fdivrs
cmc
int3
rol
popf
in
sbb
outsb
mov
daa
push
es
mov
test
xchg
pop
iret
lcall
mov
cltd
cmp
push
mov
popa
push
movsl
cmp
iret
xlat
mov
insb
insl
dec
jmp
lret
or
pop
es
jle
mov
int
mov
mov
inc
mov
fdivrs
popa
xor
sbb
mov
mov
fnstsw
imul
std
mov
pop
sbb
xchg
mov
mov
insl
jg
movsl
cmp
cwtl
js
int3
sbb
sti
or
test
jg
lea
cmp
cmp
lret
ficompl
sub
xor
clc
xchg
cmp
pop
mov
ds
and
imul
ret
cmp
or
mov
pushf
outsl
xchg
rorl
mov
xor
addr16
fnsave
sbb
ja
dec
cmovo
sub
enter
repnz
outsl
or
cmp
mov
xor
xchg
sub
les
test
daa
xchg
pop
pop
sbb
adc
mov
dec
inc
fcmovu
add
push
mov
sbb
push
fimull
in
loopne
jmp
xorl
lock
rorb
outsl
out
add
push
pop
idiv
hlt
add
add
pop
push
cs
out
pop
fwait
outsb
inc
test
cmc
bound
pusha
sub
xchg
pop
mov
icebp
inc
mov
pushf
fwait
inc
mov
xchg
js
out
jae
jbe
fldl
and
sarl
idivb
mov
mov
pusha
mov
loop
sbb
fldcw
push
loopne
or
fisubl
pushl
mov
jl
sub
jge
sub
insb
xchg
inc
test
pop
jmp
leave
add
test
jp
xchg
cwtl
loope
push
es
test
sti
pop
fsubrl
add
mov
jb
sti
ret
sub
out
or
scas
ljmp
pop
push
cmp
outsl
adc
outsl
shr
pop
std
fcoms
push
mov
pop
jmp
pop
test
pop
or
pop
iret
into
jmp
loope
xchg
aaa
cmp
iret
sbb
pop
inc
out
and
or
xor
xchg
mov
psubb
cld
dec
loop
push
pushf
xchg
or
dec
rolb
fldl
and
cmp
adc
idiv
xchg
popf
and
sub
aad
lds
dec
or
jb
aas
stc
ljmp
movsl
push
jne
xchg
and
aas
jl
sahf
sbb
lods
ficompl
push
adc
add
add
insl
push
test
mov
sahf
and
bound
call
mov
pop
cmc
lret
clc
add
and
pop
and
xor
pop
mov
or
pop
mov
pushf
pop
jp
clc
test
push
xor
xor
xchg
cmpb
pop
push
dec
adc
repnz
lock
out
scas
push
push
rorl
jne
sub
outsb
cmc
stc
mov
aad
mov
shll
xor
xchg
loop
adc
rcr
fdiv
and
test
int3
jae
jb
mov
lea
xchg
addr16
push
lds
pop
mov
imul
jne
jne
and
dec
stc
repnz
jg
iret
cmpsb
mov
mov
inc
inc
or
leave
dec
ljmp
subl
lock
test
mul
je
test
outsb
lahf
cmp
and
scas
dec
adc
inc
cld
mov
mov
clc
sub
rorl
mov
inc
push
push
test
pop
and
push
outsl
xchg
push
fiaddl
mov
call
mov
mov
shrb
inc
and
cld
iret
mov
sub
fcomip
mov
sub
cld
pop
stc
imul
xchg
jp
xchg
lcall
mov
sbbl
rcrl
add
sbb
cmpsb
fisttps
add
and
cwtl
stos
and
sbb
nop
loop
fcomp
fsubr
lahf
lcall
lds
inc
call
out
jge
loopne
jno
shrl
or
idiv
push
ja
into
inc
mov
shll
arpl
mov
add
fwait
arpl
mov
popf
add
push
or
push
pop
cmp
pushl
cmp
push
fcomip
fiaddl
rorl
daa
test
mov
push
xchg
sbb
xchg
mov
insb
xchg
cmp
icebp
mov
outsb
jns
pop
cld
lcall
add
popf
dec
imul
es
fwait
enter
ds
loop
enter
pop
jne
cmpsl
test
clc
mov
xor
lret
in
xchg
dec
mov
cmp
cmp
or
sub
sbb
data16
dec
push
aad
add
xchg
or
ret
call
pop
sbb
or
shl
cli
mov
sub
stc
mov
loopne
insb
or
xchg
mov
enter
push
jmp
and
or
inc
sbb
in
cmovno
jno
xor
test
outsb
pop
sbb
xchg
push
cmp
jp
xorl
nop
mov
aas
repz
dec
popf
pop
adc
cmpsl
fcoml
mov
lret
mov
adc
lahf
dec
aad
daa
inc
mov
push
hlt
adc
gs
push
fdivr
das
and
test
and
outsb
mov
call
sbb
push
repz
imul
leave
inc
jge
fiadds
inc
lds
push
movsl
aaa
int
outsb
mov
stos
pop
mov
imul
in
insl
addb
cwtl
adc
in
mov
xor
mov
and
mov
push
jmp
aad
fidivrl
js
test
pop
push
nop
cmp
pop
xor
scas
sahf
push
or
or
mov
inc
adc
dec
flds
push
jnp
rcrl
shr
leave
or
xchg
xor
dec
pop
dec
add
stos
jnp
mov
lods
jge
ljmp
add
jecxz
lahf
add
xchg
ss
or
push
es
jbe
mov
js
sahf
loop
nop
shr
mov
xorb
mov
dec
sahf
loope
ss
orb
push
mov
daa
or
mov
fucomip
loope
mov
mov
mov
not
data16
mov
or
movsl
mov
fdiv
jg
xor
push
dec
push
clc
pop
push
clc
fists
jge
ljmp
add
push
popa
incl
sub
jns
jne
dec
xor
mov
insl
pushf
in
lock
adc
out
add
jns
es
sahf
jmp
fmul
adc
mov
adc
inc
popf
ljmp
pushf
or
in
or
dec
push
pcmpgtb
data16
outsb
mov
test
shrl
sarl
cli
aam
push
mov
or
rcr
cmp
cs
test
xlat
ljmp
sbbl
outsb
hlt
dec
pusha
into
inc
cmc
xlat
xchg
push
xchg
cmpsb
scas
aad
test
icebp
adc
rcrb
inc
popf
cmpsb
dec
mov
mov
mov
cmpsb
xor
enter
jo
stc
push
fistl
or
jbe
into
fwait
test
mov
jmp
cltd
dec
test
pmaxub
nop
cmp
lahf
jb
jp
mov
inc
pop
jne
hlt
mov
mov
fnsave
push
add
adcb
ret
xchg
dec
test
int3
jns
out
adc
pop
mov
jo
enter
jge
dec
lea
jo
sub
cli
aad
cmpsb
loope
inc
inc
adc
cmp
jo
sbb
insb
out
fwait
cmp
in
dec
or
jmp
mov
xor
fcomi
shl
mov
leave
int3
and
and
push
xor
jno
inc
jne
and
scas
jno
ja
lods
sub
imul
mov
adc
out
repz
dec
idivb
rclb
push
je
xchg
loop
cmp
cmp
iret
leave
sub
out
imul
aas
mov
imulb
and
push
pusha
jge
sahf
push
add
movsb
js
adc
cmpsb
xor
loop
mov
mov
aas
fsub
cld
into
int
pop
sbb
xchg
or
std
test
jmp
imul
mov
sarb
std
stc
and
inc
mov
and
scas
xor
adc
xlat
jae
mov
ficomps
in
leave
dec
sbb
ret
lods
mov
xor
aam
mov
shr
pop
add
or
jns
dec
xchg
fistpll
mov
shrb
cmpsb
sbb
pop
add
je
pop
fs
jns
pop
sub
mov
fcomps
mov
push
loope
cmp
sub
pop
inc
sbb
sahf
rclb
pop
scas
mov
cmp
or
and
xor
lea
data16
add
mov
sub
nop
pop
rcr
shrb
clc
dec
lods
adc
xchg
lock
inc
shrb
in
lahf
inc
mov
movsb
mov
inc
mov
mov
cmp
cmp
pusha
fistl
sub
push
lret
test
js
enter
scas
aam
adc
sbb
movsl
sub
jne
or
test
and
insb
sub
ret
adc
scas
std
push
sub
in
mov
dec
orl
mov
lea
add
jl
xchg
rorb
sub
in
mov
daa
scas
sub
ss
push
arpl
jnp
mov
pop
add
cli
rorl
pop
lret
add
aam
jnp
scas
and
push
into
lret
iret
cmp
push
call
lea
punpckhwd
daa
add
jp
outsl
cmp
es
dec
or
xchg
mov
pop
xchg
add
pop
dec
push
sub
jae
push
call
push
xchg
rcr
sub
adcl
or
add
test
jbe
dec
push
mov
iret
or
mov
pop
loop
dec
and
adc
push
add
fidivl
and
pop
sbb
mov
jne
cmpsb
sbb
add
lods
pushl
mov
mov
loopne
jmp
loop
inc
mov
mov
pop
into
ret
ror
adc
sub
xchg
ss
dec
cmp
push
add
push
mov
jmp
adc
aad
and
sbb
xor
test
mov
imul
jb
outsl
lret
js
pop
mov
addb
mov
pop
int3
pop
nop
xchg
cli
jle
dec
mov
daa
cli
cmp
shrb
jmp
aad
rolb
sub
mov
inc
shl
imul
cmpsb
cmp
sbb
fwait
jae
sub
dec
idivl
xor
ds
loopne
lea
testb
movsl
das
mov
lcall
cmp
aam
enter
sti
rcrl
scas
call
mov
js
into
movsl
inc
jp
sbb
inc
in
inc
mov
fnstcw
js
push
popf
pop
mov
push
adc
sub
test
xor
movsl
adc
fmul
dec
call
or
insb
or
aaa
lods
ljmp
sbb
lahf
cmp
testb
dec
scas
loop
add
out
lret
mov
aaa
outsb
mov
movsb
adc
cmp
nop
stos
mov
fnstcw
jo
xlat
dec
sbb
lahf
and
jae
inc
adc
std
test
mov
inc
adc
flds
icebp
sysenter
mov
mov
pop
push
out
lcall
mov
pop
clc
push
cltd
iret
aas
adc
inc
movsb
jle
mov
push
pop
repz
mov
loope
in
cmc
xor
or
dec
js
jbe
loop
cmp
ss
aad
pushf
push
leave
sub
in
dec
inc
add
test
notl
stos
jecxz
adc
sub
mov
cmp
push
pop
bound
pop
insl
bound
or
data16
mov
fwait
sbb
sahf
push
adc
into
mov
and
xchg
xor
mov
mov
dec
out
fcoms
cmc
popf
push
jmp
or
push
push
data16
xchg
movsb
loopne
push
inc
sub
jg
movsb
out
cmc
cmp
jo
adcl
iret
rorb
and
js
pusha
xor
nop
aam
call
sbb
mov
add
stos
pusha
cwtl
push
pop
jle
es
iret
sbb
push
int3
jae
imul
or
push
inc
sub
scas
inc
sub
dec
out
cwtl
lret
decb
lods
dec
lret
pop
jae
pushf
rorl
loope
sub
icebp
call
js
data16
add
movb
jb
pusha
add
pop
xor
fiadds
bnd
aam
imul
cmc
xchg
ljmp
xchg
lds
mov
sbb
mov
or
or
test
sbb
add
push
movsl
inc
mov
cmc
inc
cmp
push
dec
add
pushf
movsl
lret
daa
sar
aaa
mov
ljmp
ret
pop
jb
pop
ljmp
test
out
mov
outsb
in
dec
jb
enter
loopne
ret
push
or
popa
int
adc
sub
sahf
cmpsl
mov
pop
inc
cmpsl
jl
pop
cmpsb
jp
cmc
divl
inc
xor
int
cmp
inc
punpckldq
test
inc
imul
cmp
push
mov
int
dec
xor
test
pop
pop
stos
lea
leave
into
gs
and
or
cmp
mov
lea
in
pop
pop
sbb
jo
cmovle
scas
lods
es
or
roll
mov
clc
test
add
jmp
push
push
ljmp
subb
pop
cmpl
xor
call
adc
mov
icebp
loope
arpl
jp
lret
in
and
push
int
inc
pop
and
scas
lea
pop
mov
in
sti
stos
test
xor
and
mov
mov
loope
lcall
into
cmp
sbb
shrl
rclb
cmp
aad
inc
mov
shl
and
mov
mov
ror
pushaw
leave
int3
movsb
int
in
bound
popa
lds
mov
xor
mov
insb
mov
in
lahf
js
push
add
xchg
iret
mov
adc
mov
or
lahf
sahf
jmp
and
inc
pop
mov
or
xorl
popl
mov
sub
xchg
ret
in
bound
cwtl
dec
xchg
jbe
xchg
sbb
bswap
mov
clc
shrl
in
jle
iret
jns
scas
pusha
and
inc
aam
sbb
fsubrl
xchg
pop
test
jnp
inc
fs
add
xor
inc
lcall
pusha
pop
xor
cltd
jno,pt
cs
jecxz
add
xor
lods
pop
dec
dec
std
test
mov
cmp
sbb
mov
icebp
lcall
mov
jl
mov
adc
rcr
pop
imul
ss
sarl
mov
aam
aad
pop
je
cmp
and
das
fisubl
xor
gs
dec
pop
clc
or
sub
inc
pop
dec
iret
je
mov
fwait
cwtl
outsl
push
inc
dec
lods
xor
sub
dec
test
push
mov
inc
push
mov
gs
aam
pop
xchg
fisubl
mov
xor
xchg
cwtl
xchg
inc
xchg
fs
cltd
shl
push
push
repz
out
push
jbe
jle
aad
mov
movsl
mov
or
push
pop
outsl
imul
sahf
mov
fwait
in
push
mov
cmpsl
sub
mov
clc
iret
push
in
cmpsl
mov
nop
mov
mov
filds
addr16
stc
testl
lahf
xchg
stos
add
pop
push
aas
xor
and
xchg
mov
sub
dec
movsw
pusha
mov
stos
jb
je
mov
adc
push
pop
lds
jl
ds
push
cld
xchg
ret
pop
ljmp
lcall
sub
push
sub
in
loope
or
cmp
xchg
cld
dec
dec
push
push
subl
fmul
nop
loopne
xor
dec
outsb
rclb
stos
sub
in
mov
test
jb
int3
rolb
mov
xchg
mov
in
stc
mov
andl
push
jbe
inc
movsl
imul
aaa
mov
push
cld
cs
mov
aad
push
xor
cld
out
js
or
cmpsl
scas
push
cwtl
mov
cmpl
jp
in
adc
adc
dec
jg
cmc
dec
enter
sub
xlat
adc
mov
jge
fadds
rorb
and
jne
scas
inc
leave
lods
sti
adc
lock
mov
addl
in
hlt
mov
pop
int
inc
jns
fcmove
or
enter
out
aad
daa
add
mov
int3
mov
xchg
popa
int3
aam
loope
mov
push
xchg
sbb
pop
xchg
subb
dec
adc
add
lahf
iret
pop
mov
mov
lock
sub
jno
jmp
test
loopne
mov
sub
jbe
fisttpll
sub
mov
adc
mov
mov
mov
mov
mov
xchg
xor
dec
push
aad
xchg
dec
test
faddp
add
cmp
xor
adc
lret
cmp
pop
nop
mov
paddb
imul
dec
mov
pusha
movsb
cld
mov
adc
dec
sti
lods
out
movsl
cld
xor
push
mov
call
cmp
lcall
or
sbb
clc
test
pop
imul
sub
mov
pop
sub
jne
in
sbb
je
jbe
inc
xor
jp
pop
mov
js
push
cltd
lea
insl
fs
arpl
mov
jge
and
sbb
int
jle
lahf
addr16
cmp
mov
mov
sbb
test
add
js
sbb
int
lret
rcrb
inc
rcr
loop
shl
mov
jnp
iret
mov
shrb
jmp
pop
jnp
mov
pop
pop
scas
cmp
dec
fcomi
arpl
xchg
imul
in
shl
or
pop
mov
inc
add
das
and
mov
cmp
push
int3
data16
or
push
jl
imul
fadds
cld
or
inc
pop
mov
addr16
sbb
add
int
lock
push
cmc
sbb
cltd
or
repz
pop
adc
inc
pushf
push
mov
cmp
dec
out
sbb
mov
lock
mov
pop
lcall
in
jbe
loopne
popf
lret
xor
push
xchg
or
and
fbstp
in
aas
std
in
cmp
cs
mov
mov
push
sahf
dec
addl
pop
aas
or
fstpt
mov
lock
div
mov
call
rcll
outsl
cltd
mov
int3
hlt
xchg
inc
movsb
lods
repz
push
stos
in
dec
std
aam
sbb
iret
icebp
cs
repnz
cld
cs
mov
popf
inc
cmpb
mov
and
inc
gs
xchg
xchg
push
mov
lret
mov
cs
and
lcall
out
xchg
dec
shlb
pop
adc
std
mov
dec
sarb
jmp
icebp
scas
or
mov
push
pop
int3
push
cmp
inc
xchg
decb
leave
dec
idivb
mov
icebp
push
adc
sub
and
and
xorb
lret
fcoms
mov
sti
mov
pop
test
testl
outsl
mov
aam
enter
sub
add
call
test
out
jl
out
loop
sub
jo
adc
mov
test
jge
pop
dec
mov
mov
int3
pop
push
push
add
cmpsl
jo
pushw
fs
pusha
addr16
es
iret
inc
jl
pop
fcmovnu
insl
cltd
out
les
sub
inc
jnp
ja
xchg
idivb
pop
data16
pop
lcall
imul
and
mov
xor
mov
pop
lods
mov
movsl
mov
mov
negb
loop
sbb
cmp
ds
testb
sbb
insl
add
xchg
pop
pop
xlat
cltd
ret
aaa
lock
outsl
fstpt
push
cmp
pop
inc
scas
mov
mov
popf
xchg
aas
fcomip
stc
inc
cmpl
arpl
sti
adc
aaa
mov
imul
mov
or
das
inc
in
or
jns
addr16
inc
popf
or
in
mov
cli
add
adc
leave
cmc
and
movsl
icebp
lcall
adcl
lcall
mov
cmp
popa
add
or
dec
sub
lcall
jae
push
leave
scas
adc
fcoms
imul
pop
jbe
insb
xchg
adc
xor
jnp
ds
mov
mov
mov
jbe
outsb
fs
aam
push
jg
ret
mov
xchg
xchg
inc
pusha
insl
sub
and
pushf
loopne
push
sbb
pushf
int3
jge
imul
xorb
lret
in
into
arpl
xor
mov
add
or
gs
call
movsb
and
cmc
jmp
dec
inc
nop
inc
sahf
sbb
jbe
push
in
ret
pusha
mov
icebp
shll
xor
push
cmovae
les
nop
or
stos
xor
adc
lret
icebp
js
jns
dec
mov
mov
sub
les
adc
in
stc
mov
dec
jb
xchg
push
lds
mov
jmp
mov
xchg
std
cwtl
xlat
mov
fstl
popf
push
ljmp
mov
rsm
adc
lcall
pop
stc
imul
jno
xchg
xchg
cmp
insl
jmp
mov
fwait
add
mov
push
xor
loope
push
jmp
jnp
push
out
cwtl
mov
sub
repnz
jg
dec
std
test
ja
stos
dec
cmp
mov
shrl
pop
dec
orl
jg
stos
inc
jbe
mov
aam
adc
pushf
pop
addb
into
nop
fisttps
dec
mov
lahf
mov
stos
mov
jecxz
or
lods
or
pop
test
adc
fldt
dec
xchg
in
jae
cmp
pusha
pop
adc
xlat
sbb
rcl
movsl
mov
popf
adc
sub
xor
pushf
sbb
xlat
ss
dec
jp
inc
cmp
jmp
testb
sub
stos
mov
or
cmp
mov
mov
mov
nop
jno
fmuls
add
ja
aad
push
hlt
xor
nop
push
faddl
test
push
cmp
in
mov
push
xchg
sarb
lock
push
fcmovbe
lcall
movsb
pop
fdivrp
das
movsb
mov
jbe
orb
incl
xchg
test
icebp
fcomps
into
push
mov
inc
cmp
mov
lock
into
adc
std
aad
adc
push
jae
pop
push
mov
in
xor
sahf
rolb
mov
jnp
inc
jp
repnz
orl
dec
fs
sbb
cli
inc
adc
clc
cmp
rorb
jae
ficomps
aad
aam
lock
inc
mov
xor
stc
mov
jmp
inc
sti
fcompl
sub
xchg
mov
inc
data16
stc
leave
scas
xor
xchg
or
sub
mov
pop
push
push
jns
insl
pop
mov
mov
xor
jecxz
shll
xchg
test
pop
loop
cld
inc
adc
cmp
out
push
mov
and
and
orb
fmuls
xchg
push
stos
into
mov
xor
xchg
xorb
fadds
jne
pop
ss
rorb
adc
dec
cwtl
dec
rcrl
std
mov
jg
and
clc
push
dec
lods
stc
into
sbb
sub
sahf
inc
add
flds
adc
xor
loop
cld
pop
jp
fimull
aad
enter
outsl
mov
push
push
jo
xor
in
adc
data16
adc
mov
sub
adcb
sub
js
mov
mov
mov
scas
int3
inc
mov
mov
and
jae
cld
add
sahf
aam
mov
mov
test
jns
stc
sbb
mov
das
ffree
jp
jmp
and
in
stos
out
jp
and
lahf
jb
push
aad
jle
rcl
outsl
outsb
mov
push
lea
pop
call
out
lret
and
mov
mov
popa
test
nop
jns
xor
cmc
call
sbb
iret
fwait
popa
push
fs
lock
out
cmp
mov
or
cmp
mov
adc
mov
cs
jge
insb
test
and
jle
stos
mov
fwait
push
inc
add
in
adc
rcrb
sub
mov
icebp
xchg
std
dec
ret
fisubs
lods
mov
mov
mov
jae
push
in
mov
jp
mov
ljmp
mov
mov
add
aam
dec
jmp
lret
xor
loop
int
loop
jnp
in
inc
bound
fistpll
sub
jle
pop
popf
pop
xchg
mov
lds
push
test
in
rorl
popa
clc
jg
push
cmpl
shrl
pop
movsl
js
roll
icebp
ja
les
mov
test
mov
dec
xor
sbbb
mov
push
xchg
lret
jno
cmp
xorl
xor
in
stos
and
outsl
lods
das
int3
jbe
nop
je
jne
xor
leave
imul
push
mov
xor
fisubl
testl
xchg
sbb
std
xor
xchg
mov
pusha
and
fs
insb
negb
repz
mov
rcrb
dec
jns
or
jmp
sbb
mov
xchg
mov
loopne
mov
daa
or
hlt
jno
push
test
xor
cmp
pop
mov
jb
mov
outsb
jns
and
out
pop
mov
ljmp
fdivs
mov
js
les
mov
push
out
mov
xchg
inc
pop
out
mov
loopne
xchg
pop
or
incl
jbe
ret
dec
inc
sbb
sbb
jg
movsl
mov
dec
sbb
std
sbb
add
cmpsl
inc
jnp
call
sbb
stc
pop
jmp
pop
dec
pop
gs
cmp
shll
push
ret
push
sub
inc
sub
mov
je
sahf
subl
xchg
cmp
adc
sub
xlat
lods
jle
xor
add
lea
jmp
sub
jg
inc
add
mov
adc
test
lods
mov
in
imul
add
mov
enter
jnp
daa
aaa
loopne
dec
push
in
jle
sub
movsb
sbb
or
imul
jle
mov
cwtl
aam
ret
mov
lock
push
or
test
out
sbb
in
hlt
test
sub
xorl
cltd
test
push
xchg
jp
pop
ja
fmuls
and
or
cwtl
and
push
fsubrs
push
int
push
int3
mov
push
xchg
sbb
jge
inc
iret
std
jnp
xchg
sti
shll
ret
mov
in
cmp
out
sbb
jo
fmull
xchg
jbe
cli
lea
movsl
shlb
ret
mov
and
fsubs
js
cs
stos
movb
mov
mov
cli
mov
ljmp
ss
and
adc
mov
xlat
cmp
inc
cmp
inc
jecxz
in
adc
sub
lds
lret
sar
lret
xchg
push
ret
dec
jl
mov
inc
shrl
repnz
in
cmpsb
iret
aaa
pop
aad
or
dec
add
aad
adc
or
mov
add
jge
bound
movsl
arpl
adc
fbstp
inc
mov
fwait
repz
dec
ror
add
cmpb
lret
insb
add
or
sub
inc
repnz
xorb
cmp
mov
outsl
movsb
pop
adc
xor
and
mov
and
lds
cmp
mov
xchg
adc
scas
sbb
adcb
scas
jne
inc
mov
and
sbb
stos
sub
ds
shlb
inc
push
mov
lea
xor
ds
cmp
sbb
add
dec
pop
subb
push
les
int3
popf
or
sub
movsb
pop
lods
xor
mov
shlb
jp
xchg
xchg
leave
adc
jp
xchg
out
loopne
ljmp
push
hlt
mov
js
mov
adc
subl
pop
pop
cmp
ds
cld
idivl
sbb
jbe
setne
and
out
sub
push
mov
leave
mov
dec
cmp
test
xchg
adc
outsb
pop
shrb
mov
in
lcall
push
adc
ds
mov
adc
fistpll
mov
dec
dec
mov
fmuls
sub
mov
std
cmp
outsl
mov
pushl
mov
lret
push
aad
inc
pop
test
hlt
gs
mov
jae
xchg
pop
fs
and
sub
jg
movl
aas
add
jns
pusha
jno
std
dec
jg
or
int3
imul
inc
push
aam
shll
push
fdivl
aaa
cs
cld
mov
mov
lods
outsl
pop
pop
mov
push
sbb
or
mov
ja
stos
dec
fstpl
test
dec
lret
movsb
shlb
jnp
ret
lret
mov
and
lock
dec
je
fcompl
jg
inc
jne
sub
pop
pop
rcll
aas
or
rcr
test
pop
mov
adc
in
pop
or
inc
push
in
cmp
cmpsb
mov
push
cmpsb
push
xor
fcmovu
pop
insl
mov
imul
fsts
pop
cmc
jae
xor
sbb
and
xor
imul
test
in
pusha
mov
bound
xor
mov
movsb
xchg
andb
adc
cmp
popa
insl
or
arpl
or
xor
xor
xor
lret
push
sbb
sub
pop
clc
sti
sarb
out
add
sahf
sub
aas
popa
scas
les
mov
mov
aas
inc
xchg
mov
add
push
movsb
mov
sahf
shlb
add
jg
jp
js
and
into
testb
loopne
jge
and
push
sarb
rol
flds
push
js
xchg
leave
sub
ret
xchg
imul
fnstenv
push
shrl
gs
mov
xor
pop
dec
das
test
sbb
xlat
les
punpckldq
outsl
pop
mov
sbb
xor
fistpl
xor
mov
lea
dec
aaa
int
inc
rolb
jmp
stos
mov
mov
rcll
aad
adc
fsubrl
cmp
fiadds
fstpt
jge
aaa
and
subl
icebp
mov
fiaddl
fwait
inc
das
adc
out
inc
test
inc
xchg
call
pop
push
and
sti
or
jnp
stc
push
imulb
jmp
xchg
out
xor
xchg
inc
int3
loopne
mov
pop
xlat
push
pop
into
push
call
jp
inc
xor
gs
mov
add
ror
push
lcall
shl
jae
fisttps
fucom
xor
mov
push
in
out
pop
adc
outsb
sbb
add
dec
pop
jo
es
or
add
jo
ja
sbb
add
xchg
add
mov
jge
in
dec
out
fldcw
ss
jge
mov
lds
sbb
stos
xor
fbstp
mov
jne
inc
ss
and
notl
jp
pop
cmp
push
mov
sahf
mov
add
jno
test
scas
xchg
loope
push
enter
pop
inc
test
sub
insl
add
sub
fiadds
sahf
ljmp
shrd
stc
add
lods
mov
mov
loope
adc
sub
incl
pusha
xor
pushf
mov
push
inc
inc
cmpsl
and
cmp
das
mov
sahf
cmc
dec
and
inc
aam
pusha
fcmovbe
rcrl
jle
cli
cli
into
aaa
cs
ror
fwait
mov
xchg
add
or
sbb
sarl
push
in
or
pop
mov
or
sti
aas
inc
sbb
jbe
mov
adc
pop
dec
mov
mov
mov
leave
jae
xor
aaa
sbb
cmp
loop
aas
pop
gs
jnp
push
ret
xchg
push
shll
cmp
psubw
mov
and
jo
dec
lcall
lods
call
dec
rorl
pop
xor
sbb
or
mov
and
imul
sti
jecxz
mov
les
out
popf
ror
sbb
sbb
mov
xchg
fisubl
and
push
mov
insl
int3
push
jecxz
mov
fadd
push
push
enter
mov
mov
jecxz
mov
xchg
in
mov
or
into
inc
adc
mov
sti
mov
inc
int
xlat
push
push
adc
lahf
adc
or
push
rorb
adc
mov
test
mov
mov
subl
loope
repnz
mov
hlt
or
jmp
pop
cmp
out
and
hlt
mov
push
and
fs
lcall
cmp
sub
add
mov
jl
lahf
sbb
push
xchg
inc
out
xchg
rorb
mov
mov
xchg
lret
add
mov
in
inc
ljmp
notl
xchg
add
mov
xor
cmpsb
adc
loopne
icebp
jns
inc
aad
push
mov
dec
push
push
push
in
dec
xor
cltd
fs
popa
outsb
emms
dec
xchg
fdivrp
jge
xchg
xchg
orl
jl
inc
pop
push
sbb
fmul
hlt
mov
fbstp
xchg
inc
inc
push
mov
stos
out
or
repnz
sarl
movl
js
fdivs
mov
sbb
mov
mov
int3
mov
mov
sub
inc
push
mov
cmp
or
cmp
push
push
shll
in
or
mov
and
pushf
nop
add
cmp
lods
and
jbe
in
add
push
dec
jno
or
stos
sub
push
out
fmull
push
fdivrl
dec
dec
lods
pop
xchg
inc
insb
pop
dec
test
jae
push
out
dec
inc
stos
in
jno
xchg
mov
cli
aad
gs
sbb
push
inc
lahf
add
in
ret
or
adc
lds
ret
pop
jno
daa
cmp
test
ja
jle
add
popf
stos
test
das
sub
dec
push
inc
hlt
xor
mov
pop
shlb
dec
daa
or
adc
and
mov
push
fldl
cmp
rcll
daa
mov
or
pusha
mulb
mov
push
les
cmp
outsb
push
ret
jg
push
add
and
sub
nop
ja
lock
repz
stos
push
mov
test
add
insb
cmp
shr
xor
mov
cld
cltd
out
mov
repz
or
lods
jle
aas
in
pushf
mov
sub
repz
and
push
stos
rolb
fnstenv
mov
insl
sub
stos
icebp
dec
leave
and
mov
mov
icebp
cmp
adc
insb
xlat
sahf
popf
xchg
popf
push
push
add
jmp
movsb
aas
rolb
push
shlb
inc
dec
dec
ss
in
xchg
adc
cmp
xor
data16
xchg
hlt
mull
adc
push
aam
xchg
mov
push
push
add
fisubrl
mov
or
pop
jp
lds
sarb
fisubs
mov
and
mov
xchg
dec
aas
dec
stc
sub
mov
sub
insb
lds
jp
imul
pop
push
popf
mov
mov
clc
dec
jl
cmpsl
add
dec
mov
mov
lods
add
sbb
leave
jbe
jo
push
mov
mov
fcoms
jne
test
adc
fwait
les
cmpl
mov
or
and
xor
outsb
sbb
pop
xor
rcll
push
ja
sub
sbb
stc
push
inc
pop
jb
xor
out
subl
xchg
cwtl
dec
adc
cmpsb
insb
add
out
add
inc
push
outsl
lods
adc
jl
gs
mov
adc
mov
mov
add
pop
test
sbb
test
int3
xor
pop
mov
pop
push
push
fsubs
push
call
cmp
testl
add
mov
sub
adc
cmp
and
leave
rorl
cmp
jecxz
dec
push
inc
gs
lahf
aam
jns
or
loop
inc
or
inc
xor
sbbl
adcl
mov
push
in
iret
inc
jno
jmp
xor
or
pop
rorl
or
push
xor
mov
testl
xor
add
push
movsl
sbb
mov
pop
adc
adc
repz
sub
mov
ret
clc
repz
dec
push
or
outsl
lea
pop
mov
lret
dec
addr16
in
mov
dec
inc
pop
sub
cmp
xchg
mov
jmp
xor
fldt
jle
jl
sub
lret
ficomps
and
shrd
adc
xchg
xchg
mov
dec
and
dec
pusha
lret
lcall
addr16
loopne
scas
fsubl
cmpsb
jmp
xor
pusha
dec
pop
fsubr
cmpsl
jle
aad
iret
jb
dec
enter
jmp
xchg
outsl
aas
sub
jns
leave
cwtl
adc
fidivrs
push
or
test
mov
mov
mov
lcall
out
scas
divl
xchg
stc
cmpsb
xchg
mov
pop
rcrl
xor
das
inc
dec
xchg
jae
int3
fcmovnb
icebp
adc
lcall
sbb
xor
cs
ret
mov
and
jmp
jne
add
je
stos
sub
ds
loopne
xor
or
call
mov
cmpsl
or
stos
aam
aad
push
aam
popa
pop
and
mov
jnp
inc
stos
xor
mov
jl
ja
fs
out
mov
cmc
jge
xchg
mov
pop
push
sub
dec
aad
ljmp
pop
insl
xchg
cs
push
mov
fidivrs
mov
inc
pop
adc
aas
pop
pop
pop
and
movsl
push
or
or
stc
je
xchg
xlat
dec
and
arpl
clc
mov
mov
xorl
fmull
out
xchg
jb
sbb
jnp
filds
or
ret
data16
movsl
out
test
xor
fdiv
pop
test
adc
push
cmp
test
sti
mov
dec
mov
bound
cmp
adc
adc
sub
mov
test
xor
mov
lods
lea
mov
fcoms
push
cmp
cmp
test
jb
mov
sar
cmp
jge
sahf
and
dec
pusha
push
pop
out
icebp
outsl
inc
and
enter
in
jns
sbb
push
inc
mov
stos
stc
hlt
jle
test
clc
fmull
sahf
jg
fistpl
cmp
scas
adc
shll
xchg
lock
fs
cmp
jmp
and
clc
aaa
jle
adc
add
and
xchg
pop
pop
mov
pop
add
jnp
xor
idiv
and
out
xchg
adc
rol
rcll
mov
mov
push
ss
in
mov
ja
add
fldt
pop
pop
fisubrs
jp
icebp
mov
xor
jnp
out
cmp
jl
jo
mov
jno
stos
add
ja
in
xlat
adc
insl
pop
add
add
jge
popa
hlt
inc
pop
jge
jb
cmp
jb
fnsave
mov
lret
push
xor
dec
sbb
push
insl
shll
out
inc
add
push
mov
pop
fldenv
out
push
in
fistps
pop
lods
jbe
jno
fmuls
xchg
xor
fildl
sub
push
int
icebp
mov
sbbl
pop
loope
xor
push
stc
and
xchg
mov
mov
jl
fimull
out
test
dec
mov
push
inc
adc
sbb
push
cmp
pop
out
test
out
jns
cwtl
mov
ljmp
jns
cltd
cmovl
adc
xor
and
pop
xchg
fiadds
pop
cmp
xchg
xchg
or
icebp
mov
jl
mov
rorb
jge
xchg
pusha
hlt
xor
std
jp
mov
jmp
mov
jl
ljmp
insb
xor
or
mov
fistps
ljmp
gs
aas
incl
fstpl
jns
push
push
mov
iret
push
add
data16
dec
in
mov
fstl
test
test
mov
sbb
out
inc
pusha
cli
pop
xor
adc
mov
push
or
loop
and
bound
cltd
push
xor
inc
cs
adc
es
subl
jmp
cld
sbb
bound
fisubl
sti
push
jecxz
nop
xchg
addl
hlt
mov
loope
jecxz,pt
mov
out
sub
cmpsb
adc
inc
pop
lahf
lds
mov
ror
push
add
outsb
lcall
ljmp
test
ss
in
addb
mov
and
dec
pop
int
and
cli
pop
xchg
add
out
dec
lret
mov
push
jo
inc
mov
fwait
in
jle
mov
cmp
or
aam
lock
mov
arpl
dec
adc
sbb
les
aaa
adc
mov
push
pop
mov
subb
neg
lods
pusha
hlt
lret
das
jo
adc
xor
push
push
or
divb
repz
adc
insl
js
lods
inc
and
add
sbb
push
mov
into
jmp
sub
xchg
sbb
cmpsl
sarl
jl
fdivp
shl
xchg
add
fwait
jle
xor
inc
pop
dec
icebp
cmpl
dec
ljmp
leave
adcb
mov
insl
xchg
jp
push
into
int3
pop
dec
cli
cmp
or
ss
sub
mov
dec
lea
push
dec
cmp
test
loopne
lds
ret
sbb
jl
loopne
pop
pop
xchg
cwtl
ljmp
cmpl
lds
mov
repnz
stos
cmp
adc
pop
push
mov
loopne
sti
jns
xchg
not
filds
pop
cmp
mov
pop
outsb
push
leave
rcrb
ja
xchg
cltd
test
or
mov
push
int3
aaa
xorl
pop
sbb
aas
test
shlb
push
sbb
out
pop
push
in
add
lret
mov
xor
lods
out
lea
test
cmp
call
or
mov
dec
cmc
cwtl
test
mov
mov
pushf
ljmp
insl
cld
mov
stos
jmp
xlat
inc
gs
cld
rcr
add
xchg
jae
pop
sbb
pusha
rclb
mov
and
clc
jmp
xchg
icebp
mov
lahf
cmp
push
out
aam
ljmp
and
mov
imul
andl
sub
or
inc
shll
pop
mov
mov
lret
adc
pushf
xor
jle
clc
jnp
ret
loopne
pop
nop
mov
arpl
pop
cwtl
in
mov
lds
cmc
dec
jnp
inc
dec
flds
lock
dec
mov
mov
pop
xchg
lret
sti
add
push
shll
arpl
inc
adc
xchg
ret
xchg
mov
jne
dec
pop
insl
data16
in
or
jno
push
push
mov
insl
sbb
push
xor
pop
in
test
fisubrl
xor
xchg
sbb
pushf
imul
or
add
call
scas
xor
dec
fldcw
cltd
cmp
aaa
out
movsl
popf
xchg
pop
cmpl
xor
mov
imul
loopne
or
sti
adc
add
inc
out
mov
sub
push
cmp
xlat
add
push
ljmp
aaa
lcall
test
out
test
xchg
xchg
lods
inc
cmp
lds
pop
lock
or
mov
push
dec
dec
cld
push
and
mov
leave
ds
lods
dec
in
cmc
lret
xchg
push
lods
call
xor
rclb
clc
test
jg
push
jb
mov
xlat
mov
mov
cmp
dec
loope
and
xchg
sti
xchg
ja
or
cmpsb
shrl
cmp
cmp
xchg
nop
int3
push
push
mov
sub
jbe
xor
mov
fisubrs
call
test
mov
imul
stos
lock
pop
jo
jmp
scas
insb
sbb
jge
dec
pop
jns
jno
cs
inc
fisttpl
insb
dec
ret
insb
mov
orb
aam
mov
add
lods
jle
fists
or
les
mov
jmp
or
out
inc
frstor
pop
push
pop
and
jmp
dec
test
jmp
mov
enter
movsl
or
push
mov
mov
xor
push
inc
push
lret
fbld
clc
fsub
ljmp
push
sbb
ret
cwtl
inc
sub
les
imul
sarb
dec
pop
arpl
in
xchg
loop
push
pop
cmp
add
pushf
incb
lcall
adc
jnp
push
insb
mov
push
fdivrs
pop
jo
iret
or
adc
pop
xchg
adc
popf
jg
bound
and
dec
xchg
inc
or
call
push
xor
xchg
cmp
mov
add
shll
sbb
adc
jno
pop
jle
stos
push
stos
xchg
pop
sub
xchg
popf
es
push
sbb
add
sbb
sbb
lock
dec
jbe
sahf
push
or
mov
filds
in
jecxz
lahf
pop
addb
sub
xor
dec
cmp
dec
add
enter
addb
mov
adc
inc
xor
insb
push
mov
loopne
js
nop
xor
sub
daa
in
and
aam
jecxz
popf
adc
sarb
add
mov
mov
dec
jp
sub
inc
pop
inc
sbb
addl
fsubs
push
mov
inc
push
in
popf
mov
adc
and
mov
ret
or
fildl
and
lahf
scas
pushf
jecxz
or
jb
mov
outsl
jge
inc
xor
and
dec
adc
push
and
fstpt
ds
and
pop
in
push
jne
test
jecxz
sub
rclb
or
push
push
pop
pop
inc
pushl
or
aaa
mov
push
icebp
xor
adc
pop
xlat
mov
sub
xor
and
leave
daa
cmp
xchg
int
clc
xchg
mov
bound
ljmp
xchg
mov
push
push
add
jo
push
incb
cmp
imul
cli
data16
loopne
mov
movsl
mov
repz
jne
add
inc
cmp
ror
cmpsb
pop
xchg
add
add
repz
dec
mov
fs
jmp
xchg
aas
mov
xchg
or
and
mov
sub
stc
cs
dec
js
jo
xchg
andl
pusha
xor
cli
fwait
add
lods
fwait
jb
iret
jbe,pn
fwait
jb
cld
cmp
xchg
cmp
xor
push
mov
cs
das
es
and
mov
outsl
std
sbb
cmp
int
rcrl
xor
scas
sub
in
xor
nop
shll
mov
xchg
xchg
pusha
push
pop
cwtl
push
jmp
lds
add
stc
mov
jb
add
gs
pop
dec
popf
sub
adc
inc
jmp
cltd
and
sahf
xchg
shlb
fldl
push
ds
fcom
je
outsb
int3
pop
dec
mov
repnz
or
xor
repnz
lret
jnp
mov
xchg
inc
mov
dec
lret
inc
pop
mov
jb
sbb
aam
loopne
sbb
mov
out
ds
jle
mov
jo
jmp
test
or
cs
mov
inc
test
hlt
adc
bound
jle
cmp
lcall
lcall
sub
jnp
aam
in
push
ja
movsl
push
or
dec
xor
sub
mov
cmpsl
mov
pop
sbb
mov
aad
cmpsl
cmc
cwtl
push
adc
or
dec
loop
xchg
in
pop
jne
cld
add
sub
xchg
pop
mov
ja
cwtl
jb
inc
js
xlat
repz
call
sub
adc
sbb
shrb
dec
into
scas
fdivrp
movsb
jecxz
lret
ret
mov
sbb
jmp
aas
inc
lret
lahf
or
dec
push
and
cltd
sar
inc
out
add
adc
pop
test
and
adc
lret
cmpsb
mov
mov
xchg
adc
inc
scas
mov
andb
daa
pop
fwait
sub
jb
lods
pop
fs
sbb
orl
sub
pushf
cmpsl
jb
adc
push
repz
adc
into
and
or
je
jge
enter
bound
in
and
cmc
loopne
pop
mov
jmp
or
sub
xor
pop
dec
fwait
data16
mov
mov
movb
sbb
jecxz
js
and
mov
push
cmp
pop
adc
mov
enter
addr16
inc
fwait
loop
popa
in
add
faddp
cmp
xchg
insb
xchg
js
gs
mov
inc
addb
lea
loop
leave
cmp
fisttps
cltd
call
and
xor
shlb
std
push
sahf
fldt
dec
mov
push
lcall
loop
jp
pop
jo
stos
sub
jnp
das
xchg
mov
rcrb
out
and
imull
stos
sbb
daa
inc
cmpb
jo
push
inc
pop
sbb
popa
leave
inc
xchg
rolb
sbb
pop
out
lea
push
cmc
xchg
inc
sub
cmp
sar
lds
rorb
inc
sahf
test
xor
xor
popa
add
sbb
or
ss
mov
cwtl
ljmp
ds
xor
xor
sub
sub
cmpsl
pushf
inc
in
or
pop
rorb
sbb
clc
sarl
sub
repnz
xor
mov
add
push
flds
cmp
inc
xchg
movsl
jb
dec
jp
out
lds
push
mov
mov
insl
push
mov
rolb
cltd
xchg
add
cld
popf
rcrb
jno
and
mov
cmp
inc
mov
mov
cmp
sbb
jbe
jg
stc
jp
push
push
sub
or
sarl
jge
shll
mov
fsub
add
das
outsb
cmp
inc
in
in
jg
mov
xchg
lds
cltd
repz
les
jae
cli
aaa
int3
fdivs
scas
cli
inc
jns
insb
push
dec
dec
mov
pop
mov
or
jns
call
push
jle
loopne
lea
xchg
jge
idiv
dec
add
scas
cmp
dec
add
xlat
mov
aad
frstor
mov
sarl
xor
scas
movsb
dec
push
stc
iret
xchg
ja
adc
cld
mov
add
enter
repnz
mov
or
add
scas
jne
in
adc
sbb
pop
int
push
daa
ljmp
out
scas
jbe
xchg
testb
bswap
sub
pop
xchg
mov
jo
icebp
jmp
xchg
out
repz
push
mov
in
pusha
sbbl
pop
dec
or
popf
and
xor
loopne
push
cmc
sub
jecxz
add
lock
mov
jns
scas
imul
adc
aaa
insb
in
and
mov
stos
pop
or
vmread
jno
mull
loopne
xor
dec
repz
or
inc
push
and
push
jmp
in
push
repz
pop
sbb
inc
jo
jmp
sub
pop
fnstcw
adc
xchg
subb
inc
aaa
test
mov
imul
ljmp
dec
lret
inc
in
sbb
mov
pop
sahf
jge
pop
leave
mov
cwtl
ret
icebp
pop
add
test
shll
ds
adc
repnz
push
sub
add
dec
jg
mov
sbb
lock
dec
push
mov
out
mov
insb
jb
lds
cmp
mov
adcb
push
loop,pn
ficompl
mov
gs
sbb
cltd
pop
mov
xor
mov
js
sub
add
pop
aam
ret
and
jge
mov
push
or
stc
mov
or
fdiv
popf
cltd
loopne
and
das
aam
ret
mov
jne
loop
ret
adc
xchg
jl
das
ret
pop
mov
mov
or
fcmovb
add
xor
insl
jecxz
dec
adc
mov
add
sub
cmp
insb
add
dec
dec
lret
pusha
or
push
xchg
add
mov
jnp
stc
std
push
dec
sbb
in
sub
outsl
xor
mov
hlt
mov
and
outsb
dec
xor
xchg
push
arpl
or
repz
aad
add
pop
xchg
xchg
into
xor
mov
ficoml
xor
popa
jle
scas
mov
cmc
cmp
push
jbe
mov
pop
addr16
jp
push
je
in
inc
and
out
mov
jo
loopne
push
or
push
enter
js
xchg
xchg
sti
push
push
test
jp
outsl
aas
dec
push
sahf
sub
int3
dec
popf
loopne
cmp
add
inc
stos
ds
insb
sub
movsb
mov
mov
cltd
shl
ljmp
pop
xor
test
fisttpll
filds
sbb
ljmp
xlat
pop
push
mov
push
cmp
sub
jge
xchg
gs
leave
push
decl
loopne
cli
iret
lret
ljmp
push
pop
pop
into
xchg
call
mov
das
mov
jecxz
int3
clc
jbe
pop
ret
js
in
in
push
xchg
xchg
mov
lret
jns
adc
popa
and
cmp
jge
jnp
inc
imul
ja
hlt
xchg
mov
jecxz
cmp
test
call
divl
mov
js
inc
ljmp
cmpsl
push
adc
call
cs
push
fstp
push
dec
pop
ret
testb
xchg
cmp
aaa
sub
ret
loope
inc
idivb
jle
push
jp
or
fstpt
outsb
dec
xchg
mov
dec
imul
sbb
jbe
xor
mov
mov
jbe
test
mov
sbb
xchg
xchg
lcall
imul
in
and
inc
insl
xchg
sbb
mov
shll
arpl
dec
xchg
mov
adc
and
sbb
jae
das
sbb
in
add
mov
lods
pop
pushf
sbb
cmp
sub
pop
ret
shl
pushf
add
mov
lret
pop
and
pop
mov
lock
push
add
push
dec
int
popl
adc
mull
sti
daa
ljmp
gs
sbb
dec
sub
cmpl
stos
push
mov
insl
add
mov
testb
loopne
hlt
push
mov
fwait
or
andl
lock
and
ficomps
dec
push
mov
aaa
enter
lods
push
pop
add
stos
imulb
xor
int
shrl
add
jb
nop
shll
jecxz
xor
sub
xor
test
or
push
pop
pop
push
push
out
mov
mov
and
jno
add
lcall
mov
mov
pushf
mov
ds
cmp
mov
mov
sub
dec
out
ret
out
push
aad
icebp
test
pop
out
add
stc
out
sbb
stos
sbb
lods
sub
mov
in
dec
mov
dec
sub
lret
sub
xchg
mov
cmp
and
cld
loopne
addr16
iret
jns
clc
mov
mov
jb
pop
pop
fisubs
fisttpll
ja
jecxz
push
out
dec
icebp
or
and
daa
js
jne
movsb
in
xor
cs
lea
repnz
mov
jbe
push
and
xor
cmp
xlat
xor
enter
push
test
xchg
mov
leave
test
enter
sub
inc
scas
ret
imul
or
add
iret
dec
cmp
sub
sbb
stc
mov
push
fisubrl
leave
jg
roll
pusha
fnsave
ja
jns
inc
adc
push
dec
mov
xchg
cmc
sbb
xor
ret
adc
loopne
scas
jle
and
sub
add
lret
sti
jl
stc
jmp
mov
mov
hlt
mov
push
push
jns
ret
popa
ss
xchg
lret
push
clc
cmp
dec
jns
mov
inc
ds
inc
call
mov
xchg
cmc
hlt
sar
imul
test
movsb
sbb
mov
popa
pop
adc
arpl
mov
data16
int
mov
or
add
jnp,pt
cmp
enter
in
fdivs
mov
jb
lcall
jbe
movsl
pop
jno
popa
dec
or
mov
add
pop
mov
rcrb
clc
mov
xorb
ja
repnz
mov
cmp
out
dec
xchg
pop
stc
mov
xlat
mov
cmp
sti
jecxz
or
ret
push
aas
sbb
outsl
push
in
jmp
inc
push
push
cs
jno
cmp
sarb
aam
pop
daa
fsubs
test
jge
and
decl
arpl
adc
popa
pop
xor
push
xor
pushf
out
fcomi
cmp
and
xor
dec
lret
xchg
fisttps
shr
pop
fwait
xrelease
inc
les
mov
xchg
fsubrl
pop
cmp
int
xlat
out
popa
cmpsb
dec
aaa
leave
outsb
mull
repnz
xchg
mov
rcr
outsl
xor
inc
and
call
in
ljmp
xchg
faddl
sti
mov
pop
in
out
jns
mov
pushf
jg
fwait
mov
push
add
negl
pusha
dec
rcrb
mov
sub
inc
push
mov
xchg
fdivrl
dec
jp
fcomip
loop
xor
xchg
add
movsl
mov
repnz
jmp
add
daa
test
inc
sub
insl
xchg
out
fistpl
mov
mov
movsb
aaa
mov
xchg
sahf
pop
imul
js
sub
jnp
jp
jmp
cmc
sub
leave
jle
shll
mov
cmp
leave
pop
mov
or
cmp
xor
pop
mov
mov
in
lods
and
sub
cmpsl
sbb
sbb
addl
filds
cli
pop
pop
scas
sbb
push
cs
xor
xor
dec
es
push
cmpsb
mov
mov
dec
cmp
and
lea
xorl
fidivs
pop
xor
popf
int3
fwait
mov
loope
push
out
popa
mov
push
sub
mov
sti
push
mov
dec
mul
mov
popa
or
push
mov
xor
xor
inc
sar
mov
jnp
mov
xor
xchg
pop
xor
mov
lods
mov
mov
cli
pusha
adcl
mov
xor
rolb
add
sub
imul
inc
xor
pop
jge
cld
sub
loopne
repz
dec
push
fisubrl
push
daa
xchg
fcmovbe
pop
dec
push
mov
dec
nopl
ss
or
stc
mov
loop
push
adc
jbe
std
loopne
ret
out
jns
test
sub
pop
dec
or
mov
pop
sub
sarl
push
push
add
push
and
rcrl
inc
mov
push
mov
popf
sbb
push
aad
jb
and
rorl
add
les
dec
cmp
mov
loope
mov
inc
and
fidivrl
loopne
inc
scas
fcoml
insb
pop
jbe
mov
fwait
sbbb
rcrl
out
cmpsl
lock
xorps
arpl
stos
mov
fnstenv
mov
lods
xlat
movsl
loope
or
add
enter
lahf
mov
shll
sbb
jmp
loope
out
push
in
jp
jbe
xchg
push
inc
xchg
in
mov
iret
lahf
jp
pusha
leave
add
push
pop
xchg
in
movsl
aas
test
scas
cmp
sbbl
sahf
in
mov
rorl
xor
jns
in
mov
sbb
aas
push
fisttpll
mov
xor
adc
or
xchg
ds
push
sub
outsl
xlat
divl
fwait
push
xchg
mov
test
push
xchg
leave
xchg
cmp
sub
cmp
div
jo
pop
mov
inc
and
cmp
das
cwtl
stos
push
fldt
icebp
and
dec
sub
mov
addr16
lock
arpl
push
repnz
aad
cltd
pop
mov
jge
mov
mov
cli
fs
out
pop
and
push
xor
dec
test
add
dec
sahf
push
lds
mov
inc
add
and
cmp
test
test
push
rclb
and
cmp
mov
push
mov
mov
xchg
ret
mov
ret
arpl
lcall
sbb
and
sub
ljmp
add
push
into
in
xor
jp
insl
das
cmpsb
hlt
rcrb
mov
push
mov
xchg
cmpsb
test
out
cmp
std
pop
pop
mov
mov
jmp
sbbl
xor
popf
pop
sti
scas
sbb
xchg
pushf
push
xchg
scas
cmpb
add
dec
sub
test
mov
loope
mov
jnp
or
in
in
daa
inc
xchg
popa
jle
icebp
lods
adc
lcall
mov
inc
test
cmp
xchg
cld
cmp
inc
jmp
jg
fstpl
dec
dec
std
scas
push
and
fmulp
jg
addl
push
mov
mov
icebp
std
inc
int3
dec
fs
imul
sub
push
xchg
mov
arpl
testl
mull
loope
xchg
and
sbb
jno
sub
pop
and
cs
pop
btr
pop
cld
xchg
iret
jo
add
dec
pop
push
cmp
fs
ror
nop
js
stos
push
cmpsb
xor
das
mov
pop
xor
call
fdivp
or
stos
push
adc
lahf
add
mov
adc
pop
sbb
cmp
and
shr
mov
loop
lds
inc
xor
fwait
dec
jnp
negb
mov
int3
outsb
shlb
sbb
sbb
lock
mov
in
adcl
or
imul
ret
adc
fstps
pop
mov
loopne
sbb
pop
sub
fs
fstps
out
call
and
stos
mov
jg
movnti
es
sti
and
out
cmp
cli
push
pop
insb
mov
cmp
andl
lods
mov
imul
fstpt
fildl
subl
cltd
dec
out
fs
adcl
mov
ror
mov
sbb
add
or
pop
mov
pop
pop
cmpb
adc
inc
std
mov
jae
iret
cli
gs
bnd
dec
loope
inc
adc
pushf
into
loop
xor
and
clc
loope
daa
jp
push
mov
out
inc
imul
aam
ja
sub
rclb
mov
imull
mov
dec
dec
insl
mov
mov
add
sarl
jp
jg
lods
add
lods
mov
push
mov
cmp
stc
pop
xchg
cmp
mov
or
pop
in
dec
test
shr
les
ss
orl
flds
xchg
arpl
cmpsl
lahf
adc
sbb
call
xor
negb
lods
xlat
bndstx
push
cwtl
cmp
mov
dec
add
dec
cmp
insl
and
inc
fstpt
mov
jge
addr16
jae
cmp
sub
js
sub
movsl
or
ret
inc
add
sbb
xchg
cmpsl
push
adc
dec
add
stos
push
or
hlt
ret
fisubs
push
arpl
ret
test
sti
mov
fsubr
xor
enter
push
lock
addr16
pop
mov
or
add
andb
sti
bound
les
or
stc
xor
imul
pushf
mov
mov
sub
dec
out
pop
sarl
stos
lahf
cwtl
mov
xchg
stc
pop
and
xor
lock
inc
ljmp
sahf
dec
pop
test
xchg
pop
bound
imul
jbe
xlat
loope
ds
stos
sub
inc
jae
enter
repz
add
sub
and
shrb
push
push
cmp
clc
jp
popf
lods
fidivrl
inc
loopne
push
ds
mov
sti
mov
icebp
dec
mov
in
xchg
aaa
sub
mov
sub
and
int3
pop
cmp
adc
mov
lea
rorl
subb
mov
jl
mov
xor
fs
rolb
cmpsb
or
ror
nop
cmpsb
cs
sti
xchg
cmpsl
push
push
mov
pop
sti
sbb
out
mov
dec
subl
repnz
aam
fistpl
dec
adc
push
xchg
add
daa
push
out
jb
push
jecxz
and
push
mov
sub
adc
ret
sub
iret
stos
dec
imull
adcb
je
rorl
xchg
xchg
mov
pop
stc
sub
add
add
adc
aaa
call
and
jmp
test
lcall
push
cltd
lock
hlt
and
cmpsl
inc
dec
jbe
outsl
pop
arpl
stc
mov
xchg
xorb
jno
lcall
push
in
push
xor
or
sarb
cmp
fwait
sarl
mov
push
pushw
mov
lods
jmp
rcrl
push
sub
cltd
pop
pushl
mov
enter
inc
fsubrs
loope
in
stos
cmp
jg
push
movsb
stos
mov
repnz
inc
in
shrl
test
add
aaa
pop
das
xor
call
dec
jp
mov
ja
test
cmpsb
xchg
mov
test
lods
pop
and
add
bound
sbb
or
pop
std
push
fisubs
fimull
das
adc
repz
dec
mov
lret
sti
aam
cli
or
pushf
or
testl
outsb
insl
add
aaa
mov
scas
lock
xchg
push
ljmp
jmp
inc
iret
push
or
rsqrtps
push
dec
movsl
or
test
cmp
fadds
sarb
lret
addr16
or
aad
push
fidivl
movsb
mov
pop
xor
outsl
fldcw
sub
and
stc
and
mov
pop
ljmp
jmp
pop
xor
js
and
sbb
fs
pop
or
mov
cli
adc
in
pop
pop
jg
insl
fadd
cmp
pop
inc
jecxz
ja
test
jle
push
ja
xchg
pop
mov
mov
push
inc
out
fildl
in
out
pop
sbb
xchg
fs
adc
cmc
adc
stos
imul
lret
push
imul
dec
dec
ror
out
and
push
aas
or
cmp
lret
mov
xor
mov
movsl
push
xchg
ret
or
in
ljmp
pop
push
js
aad
inc
aad
cmpsb
xor
cld
mov
dec
mov
mov
adc
jmp
or
xchg
xchg
mov
and
mov
lock
or
or
push
cltd
sbb
pusha
hlt
fistpll
loopne
or
jbe
xor
cmp
pop
or
sbb
xchg
aad
mov
add
lret
imul
jno
adc
aam
hlt
mov
fwait
insb
lret
dec
lods
aad
mov
ret
push
pop
sarb
mov
push
mov
cmp
dec
add
dec
xchg
shll
test
mov
fndisi(8087
xchg
pop
js
loope
xchg
xchg
dec
or
inc
cmp
jns
popf
jl
push
pop
lea
mov
les
jno
mov
adcb
mov
jecxz
loop
push
xor
in
inc
pop
xchg
aas
xor
pop
cmp
lds
mov
insb
xchg
unpcklps
mov
outsl
out
aad
movb
add
jle
iret
leave
inc
ds
pushf
jo
lahf
out
push
gs
call
cmp
ret
inc
push
adc
push
scas
pop
inc
mov
or
or
inc
xchg
outsl
pop
arpl
cmp
mov
dec
push
popa
pop
arpl
dec
jno
cltd
lahf
mov
ds
pop
sbb
enter
xor
call
push
sbb
mov
add
cmpsb
dec
icebp
in
lret
pop
jmp
jl
push
jge
pop
mov
aaa
sbb
jo
movsl
aam
mov
pop
sbb
inc
out
inc
jg
add
outsb
in
xor
ret
xchg
mov
pop
mov
push
ss
into
xchg
dec
pop
sar
inc
inc
add
mov
cli
addr16
subb
sbb
dec
pop
xor
mov
adc
mov
pop
add
std
sub
stos
int
lods
jb
das
jmp
xor
repnz
push
cmc
push
int3
sub
test
sbb
test
fstpl
nop
pop
rclb
jmp
repnz
xchg
rcl
mov
lret
scas
fsubp
or
jmp
or
push
repz
push
or
xor
push
pop
push
test
mov
mov
sbb
xchg
or
inc
xlat
pushf
cwtl
loopne
stos
mov
sub
push
or
xchg
mov
mov
shl
cli
xor
adc
leave
mov
jp
mov
sbb
loop
aaa
or
push
jns
ja
imul
testb
pop
scas
xchg
dec
sub
and
push
mov
xlat
dec
xchg
inc
and
or
mov
jp
mov
ret
lods
imul
icebp
sarb
movsl
or
xchg
les
ds
mulb
popa
push
adc
ss
std
push
jg
test
fimull
adc
int3
cwtl
sbb
mov
mov
test
jne
sbb
pop
sbb
jb
mov
push
pop
ret
sub
pushf
cld
cmpsl
cmp
add
mov
jb
aaa
cld
jbe
cltd
pop
dec
andl
dec
les
testb
imul
rolb
bound
mov
loope
add
sti
orl
pop
cltd
bound
into
fisubl
enter
out
push
sbb
stos
push
xchg
xor
in
push
jo
push
add
les
gs
in
jbe
test
movsb
inc
sub
cmp
ds
subb
jp
out
dec
rorl
lods
lret
fnstsw
mov
mov
mov
ret
addr16
dec
out
insl
jbe
or
mov
jmp
cmp
aad
xchg
fsubrl
sbb
mov
aad
push
out
sbb
push
and
test
jecxz
sbb
push
dec
mov
add
cmp
or
movsl
sbb
aaa
pushf
cs
add
adc
or
jmp
sub
out
fst
mov
or
inc
mov
jle
push
insb
jge
nop
inc
add
push
leave
adc
cmp
adc
sub
cmp
mov
es
fmulp
aas
sub
fistl
test
jbe
lods
mov
cwtl
cmp
add
xlat
push
dec
push
xlat
nop
adc
loop
lods
jmp
and
jp
lahf
xchg
xor
push
enter
cmp
and
pop
sub
mov
loope
roll
es
jae
jne
cmpsb
and
mov
push
mov
sub
mov
and
sub
push
sub
xor
mov
inc
test
cmpsl
repnz
push
mov
or
push
mov
push
into
mov
dec
pop
dec
notb
mov
mov
les
cmpsb
jle
jecxz
sbb
sbb
xchg
ja
nop
dec
xor
lods
aaa
negb
or
inc
sbb
xchg
roll
mov
sub
xchg
inc
ret
ret
xchg
test
jp
hlt
ficompl
or
test
dec
ret
pop
xor
aam
inc
dec
pop
fwait
mov
stos
sbb
jne
sub
stos
cmp
jle
add
push
jae
add
call
sbb
out
and
aam
test
out
mov
testb
xchg
iret
cmp
mov
rcrl
mov
mov
jbe
dec
mov
pushf
test
xor
pushl
xchg
sarb
and
aam
outsb
mov
aas
mov
pop
mov
pop
adc
jo
pop
mov
pop
js
repz
std
icebp
fdivrp
mov
bextr
jle
pusha
mov
loop
daa
inc
add
jno
mov
push
jbe
or
test
stos
js
dec
shll
cmp
lods
mov
push
stc
nop
lcall
negb
shl
xchg
sub
push
scas
mov
in
adc
adc
sbb
out
xor
fucomp
std
shll
fsts
gs
adc
push
xchg
mov
outsl
mov
aam
stos
sub
ret
fwait
rorl
loopne
out
adc
out
mov
sub
mov
xor
pop
xor
ja
ret
aad
fdivr
iret
xor
std
mov
jecxz
sub
ss
xor
test
cmp
sti
jp
dec
jl
xor
pusha
stc
mov
pushf
or
sti
add
xor
int3
pop
div
icebp
pop
sub
cmpsb
leave
jo
lcall
adcl
jne
in
imul
movl
cmc
xchg
sbb
pop
sub
shrb
push
popa
cmp
std
sti
or
test
adc
xor
mov
pop
cld
mov
pusha
jp
icebp
push
jno
imul
std
repz
sub
call
in
inc
shrl
xor
mov
call
outsb
test
outsl
fstpt
call
push
pusha
add
pop
mov
out
std
xchg
test
aaa
xlat
adc
add
sub
notb
xor
jo
mov
fbld
mov
add
or
cmc
ljmp
push
stc
or
jg
mov
mov
dec
push
adc
sub
inc
xor
pop
mov
dec
movsb
insl
adc
xchg
pop
mov
ljmp
lods
pop
jecxz
mov
test
jnp
push
push
inc
int3
repnz
xchg
pop
xchg
cwtl
shlb
addr16
sbb
mov
das
loop
shll
dec
in
inc
fs
mov
ljmp
testb
xor
sub
insl
inc
xchg
ret
sbb
decb
adc
cmp
sub
pusha
pop
popa
dec
pop
mov
cmpsl
and
ljmp
inc
popa
inc
mov
ficomps
jl
cmp
imul
or
mov
fwait
sbb
pop
imul
xor
sbb
in
frstor
mov
mov
popa
push
lcall
mov
fisttps
nop
jns
jle
lods
mov
xchg
mov
mov
pusha
mov
mov
pop
arpl
mov
loopne
addr16
call
inc
fmuls
or
stc
inc
xchg
es
jo
and
sahf
dec
cld
jecxz
lret
add
arpl
int
sbb
push
sub
incb
mov
inc
cmpsl
cltd
les
in
and
fnstsw
or
nop
jmp
cmp
xor
imul
mov
mov
das
sub
sub
lods
push
jb
sbb
neg
stc
push
mov
ja
inc
out
mov
xor
shlb
test
pop
dec
add
std
jmp
sti
sbb
ficomps
xchg
pop
push
shll
jbe
rorl
xchg
pop
pop
repz
cltd
add
aaa
mov
scas
lock
neg
in
aas
adc
test
dec
jg
ret
sti
push
mov
pop
pushf
loop
mov
cmp
imul
dec
pop
rcrw
in
push
push
jno
rorb
es
imul
in
mov
cmp
pop
sbb
push
lahf
and
jmp
adc
daa
sbb
xor
je
fcomps
pop
shrb
cmp
repz
inc
sub
xor
rcr
pop
stos
rcll
lock
dec
push
or
xor
rcll
jne
cmpsb
adc
and
loop
cwtl
int
mov
xchg
and
and
adc
mov
xchg
jecxz,pt
fadds
dec
lret
std
jmp
lea
cmc
movsb
push
cltd
jp
or
jl
fsts
add
sub
js
mov
add
sub
fwait
adc
nop
and
mov
inc
xchg
lods
fimuls
test
repnz
enter
pop
lods
sarl
add
in
jmp
inc
cmpsb
mov
sahf
sub
push
push
or
repnz
jo
pop
aaa
mov
scas
fmuls
shrl
xor
lret
push
or
in
fbstp
xchg
dec
add
xchg
out
xlat
mov
pop
call
xchg
push
or
push
inc
aad
sub
xchg
mov
mov
push
mov
loopne
jno
mov
mov
sub
inc
sub
lret
mov
ret
js
cmc
icebp
jns
test
xchg
push
adcl
cltd
push
test
scas
xor
lret
iret
out
out
fbld
addb
dec
inc
testb
sub
add
dec
inc
inc
jl
ja
int
shll
jecxz
add
insl
hlt
cmpsb
pop
and
addr16
pop
push
cmp
sbbl
pop
add
mov
nop
addr16
dec
push
loopne
sbb
add
hlt
fldt
icebp
pop
dec
add
outsb
cmp
shll
ja
push
scas
add
cmp
xor
lea
cs
push
inc
dec
adc
push
xor
mov
int
outsl
sbb
shlb
mov
jno
out
sbb
lcall
jl
mov
shll
in
iret
sbb
cmp
dec
xchg
comiss
push
insl
sub
dec
mov
lea
enter
adc
addr16
in
mov
jg
ds
rolb
mov
rclb
push
sbb
and
dec
ret
and
mov
pusha
fimull
jns
or
and
push
movd
jae,pn
and
xchg
out
push
dec
jae
enter
bound
pop
dec
imul
and
jl
sbb
ret
insl
pop
stc
fcmovnu
pop
cmp
push
jmp
push
jmp
outsl
inc
test
jl
into
adc
movsb
pop
es
jae
jns
nop
rorb
pop
ret
stc
dec
lods
imul
jnp
push
aas
or
pop
jae
out
outsl
cmp
addl
mov
lret
call
adc
lret
inc
mov
in
pop
sub
xchg
or
mov
push
fs
inc
sub
adc
insl
sub
mov
push
outsl
dec
mov
call
pop
rcll
push
ror
dec
popf
xor
xor
inc
daa
dec
mov
sbb
inc
cs
xchg
dec
xchg
sub
out
adc
mov
sbb
not
push
xchg
sbb
stos
mov
ss
sbb
nop
mov
movsb
lcall
mov
mov
xchg
add
pop
push
inc
mov
loopne
and
mov
jbe
out
enter
push
cmpsb
les
jne
pop
and
orb
test
lea
lds
inc
movsb
add
xchg
pop
in
push
hlt
mov
lock
lods
cmp
xchg
xchg
push
gs
sbb
fisubrl
push
enter
popa
insl
push
xor
xchg
jge
sub
xchg
push
mov
and
sbb
pop
mov
in
daa
and
xor
sbb
push
and
cmp
lret
ret
pop
icebp
jno
cmp
sbb
pop
push
cmp
sub
jecxz
xchg
mov
mov
jb
jne
mov
iretw
sbb
mov
stos
repnz
xor
icebp
add
xor
pop
and
mov
sete
iret
out
mov
sahf
push
fadds
and
into
adc
subl
mov
inc
or
xchg
sbb
sub
ds
daa
jae
cmp
fwait
aad
fists
pop
insb
pop
fisubl
shr
adc
lods
pop
inc
popf
leave
xchg
sub
cmc
addr16
push
adc
imul
mov
je
xor
inc
xlat
jecxz
jb
jno
mov
dec
xchg
out
std
xor
inc
pop
xchg
sbb
rorl
cltd
dec
loopne
add
fadds
mov
mov
inc
jl
jns
mov
shlb
mov
and
xlat
xor
push
sub
mov
jmp
push
xchg
jne
sbb
sub
jae
xchg
push
mov
std
nop
xor
movsl
and
xor
and
aam
mov
clc
push
ret
add
stc
insl
lods
cmp
cltd
mov
movsl
not
add
cltd
inc
imul
push
mov
pop
decl
movsb
shr
xor
aam
mov
cmp
stos
and
adc
cmpsb
adc
sti
inc
pop
pop
loop
test
pop
outsl
clc
inc
xchg
adc
fstps
in
lretw
adc
leave
fldt
scas
xor
inc
in
ja
or
cmp
movsl
or
jo
jb
push
add
push
bound
push
aaa
pop
mov
ja
jns
movsb
adcl
xchg
xchg
push
or
repnz
jmp
loop
stos
mov
xchg
or
aad
andb
adc
cs
xor
mov
cli
and
mov
mov
repz
out
jg
aas
mov
jbe
lock
push
in
xor
xor
ret
pop
ret
sarl
xchg
or
add
lahf
pop
cmc
iret
daa
pop
dec
dec
out
test
adcl
mov
xchg
inc
leave
mov
xchg
jb
lock
jp
shrb
or
inc
sbb
shlb
das
jae
jo
imul
sbb
mov
test
fbstp
push
push
xchg
leave
repnz
xchg
pusha
aam
adc
out
jge
cmpl
mov
inc
icebp
cmc
or
dec
mov
iret
push
inc
jmp
rcrb
bound
data16
lock
mov
sbb
shufps
iret
iret
jmp
xchg
cmpsb
xor
xchg
mov
stc
push
icebp
imul
test
add
mov
lcall
lea
ljmp
pop
jb
insl
and
dec
scas
rorb
jb
orl
pop
sbb
scas
loop
mov
aas
test
icebp
loop
sar
adc
xchg
cmp
sub
movsl
push
cmc
daa
stos
cs
mov
scas
or
adc
fdivrs
sub
jb
sbb
or
mov
aaa
sub
out
pop
sub
mov
jmp
sti
mov
out
decl
push
stc
inc
subb
cwtl
xlat
lock
in
mov
dec
xchg
sbb
fdivs
xor
mov
xchg
xor
mov
dec
outsb
stc
push
jae
cmp
and
jmp
adc
and
push
mov
pop
mov
jmp
das
and
jmp
or
stos
test
rcll
push
shr
mov
sub
arpl
jo
fucomp
rcrl
cmc
push
jae
pop
mov
jne
jp
cmp
bound
dec
ror
pop
pop
fdivl
jae
dec
test
fistl
test
xor
mov
cmpsl
pusha
cld
cli
repnz
or
or
into
imul
push
dec
pusha
push
push
xchg
adc
add
and
sub
pop
mov
jle
pop
jg
insl
inc
add
mov
mov
inc
push
jp
sbb
cmp
cld
scas
mov
out
mov
das
aad
lcall
mov
lret
add
stos
stos
xchg
enter
or
loop
imul
int
dec
test
lret
cwtl
mov
or
scas
pop
adc
pushf
push
mov
in
cmp
lret
sahf
outsl
nop
insl
adc
lret
adc
cmp
jnp
stos
lcall
cmp
and
fwait
in
cmpsl
sub
cli
cli
dec
inc
pop
pop
sub
xchg
shrb
aaa
add
loop
mov
pop
xor
or
push
loopne
cmpsl
mov
adc
arpl
hlt
rorl
inc
xchg
aam
aas
scas
mov
cld
lea
xchg
mov
out
dec
rcrl
mov
mov
push
cmp
or
cmp
iret
notb
pop
sub
add
popa
xchg
iret
cmp
nop
lret
push
out
push
push
jno
push
lret
in
pop
in
scas
add
rcll
push
push
sub
adc
jg
rcr
fisubrs
int3
xor
pop
jb
add
and
adc
icebp
mov
test
cmc
pop
sbb
bound
rolb
cmp
xor
sbb
fs
fistl
jp
push
mov
mov
push
sti
aas
repnz
mov
lahf
push
jne
or
cmp
and
stos
mov
cwtl
cmp
inc
out
inc
mov
pop
pushf
push
insb
mov
sub
or
add
outsb
cmp
cmp
dec
ficoms
scas
push
pop
cmp
xor
dec
mov
lock
mov
lahf
sbb
push
jae
mov
in
jns
dec
adc
test
repnz
movsl
std
lock
stos
insb
mov
xchg
std
imul
sub
out
sahf
inc
ja
test
movsl
ret
add
jbe
sbb
mov
jnp
pop
sub
pop
jp
or
or
stos
jmp
mov
lret
daa
fsubrs
mov
add
cs
and
outsb
mov
mov
stos
es
pop
cmp
imul
int
sbb
or
mov
dec
sahf
jbe
nop
mov
pop
jno
xchg
fmull
lret
push
sub
je
mov
test
fmuls
in
fcmovnbe
add
mov
movsb
xchg
sarl
xor
out
xchg
imul
fistl
loopne
jb
lret
mov
or
inc
inc
imul
xchg
pop
fwait
lods
dec
and
aam
test
scas
pushf
mov
andb
mov
mov
cmp
inc
mov
fsub
pop
push
sbb
imul
cmc
or
mov
ljmp
loope
sub
and
mov
das
pop
out
lcall
stc
jb
dec
hlt
lds
mov
les
inc
cmp
mov
xor
xor
mov
cmpsl
daa
adc
cmp
fs
rol
aam
shll
aad
mov
clc
aam
outsl
jo
push
and
xchg
xchg
insb
xchg
mov
jbe
push
add
mov
stos
mov
xor
push
je
and
bound
dec
adc
push
adc
andb
out
daa
mov
movsb
clc
adc
push
push
mov
cmpsb
lds
push
jle
lahf
or
push
dec
scas
or
insb
and
cmpsl
mov
aad
mov
test
xchg
lods
mov
out
jge
outsb
sub
sbb
mov
fstps
mov
leave
ret
clc
xor
or
dec
mov
lret
lods
or
mov
je
repz
cmp
mov
push
mov
cwtl
push
inc
ja
ficompl
mov
popa
add
enter
sub
cltd
add
mov
and
imul
xor
and
mov
clc
test
fucomip
inc
scas
popf
mov
pushf
push
popa
mov
addr16
mov
data16
and
jbe
fucomip
or
pop
and
aam
mov
fiadds
stc
insl
mov
mov
sahf
xchg
or
push
mov
and
addr16
stos
sbb
imul
mov
stc
or
push
jmp
mov
push
int3
lret
mov
dec
mov
inc
loop
stos
loope
xchg
xor
and
adc
shl
ja
mov
pop
mov
cwtl
repnz
dec
clc
jbe
jmp
fidivrs
rolb
push
add
push
or
fistpl
popf
inc
mov
out
insb
sbb
fmull
fwait
loope
or
dec
iret
jno
pop
lods
jns
push
sbb
out
enter
pop
push
jge
ret
call
push
push
mov
xchg
outsl
fstpl
adcl
pop
insl
pop
outsb
cs
cmpb
imul
or
repnz
in
cli
xor
popa
sub
pop
std
cltd
push
sub
or
push
sub
negl
nop
in
cmpsb
sbb
imul
sbb
mov
pushf
dec
adc
cmp
jp
xchg
jb
push
stc
inc
insl
pop
xchg
dec
mov
ja
fldenv
jbe
mov
jp
lret
shlb
inc
lcall
sbb
inc
fldt
ljmp
mov
mov
mov
fwait
sbb
pop
movsl
sbb
xchg
testb
cmp
add
sahf
filds
scas
mov
outsl
mov
shr
repnz
fdivrs
dec
insl
mov
in
jne
xchg
movsb
inc
sbb
mov
rcr
lret
sub
pushf
jns
pusha
cmp
aaa
cmp
xlat
mov
xchg
pop
xchg
adc
ja
inc
adc
fistpll
mov
aad
lahf
sbb
addb
mov
mov
jecxz
mov
push
insl
dec
adc
dec
or
clc
push
outsb
cwtl
jmp
jmp
cmp
leave
decb
mov
sbb
cld
sahf
jno
pushf
push
ljmp
loop
test
sbb
rorl
xchg
inc
ret
xchg
jmp
pusha
sbb
pop
iret
mov
jl
xlat
enter
movsb
xlat
xchg
add
jg
push
mov
dec
pop
inc
or
mov
orl
int
mov
cltd
out
xchg
xchg
push
lea
pop
jecxz
inc
imul
sub
cltd
scas
scas
push
push
fistpll
notb
gs
mov
sub
cmp
test
jnp
imul
aas
add
mov
adc
push
fdivs
js
adc
jg
jg
adc
js
add
mov
sub
repz
aam
adc
inc
adcl
or
pop
leave
add
mov
fists
pusha
mov
test
mulb
fstpl
ret
dec
mov
sub
les
add
lret
hlt
pop
pop
fimuls
mov
out
les
movsl
cltd
ret
sahf
ja
outsb
dec
aad
enter
xchg
leave
stc
clc
add
outsl
sbb
mov
jmp
add
xchg
cmpsb
sbb
adc
andb
addl
mov
push
push
add
bound
lcall
jns
jmp
jb
push
add
cmpsl
repz
dec
xor
pop
cmpsl
dec
stos
xchg
adc
cs
aas
sub
or
mov
into
cmp
cltd
nop
or
scas
fcoms
enter
into
fdivrs
mov
out
fnstsw
push
dec
les
add
sahf
fcmovnbe
inc
out
cmpl
out
inc
out
in
cmp
or
jmp
aad
adc
adc
xor
cwtl
adc
or
add
inc
dec
addr16
idiv
rcrb
xor
fcompl
push
mov
mov
aam
sbb
and
aad
inc
mov
leave
clc
or
push
mov
lret
pop
nop
jge
fdivp
jbe
mov
stos
fs
data16
icebp
inc
outsl
das
lods
ftst
icebp
test
insl
cmp
push
nop
aaa
int3
arpl
xorl
fistps
scas
pusha
pop
vmovups
es
out
jecxz
gs
xor
sbbb
out
jp
mov
ficoms
or
pop
xor
jge
dec
xchg
xchg
je
pop
pop
into
mov
mov
or
adc
pop
xor
clc
lret
bound
adc
jnp
outsb
mov
dec
std
rcr
sub
out
sarb
sub
pusha
and
pop
sarl
in
fiaddl
push
inc
mov
jecxz
or
mov
sbb
fs
jb
push
pusha
in
lcall
cwtl
mov
imul
mov
cmp
adc
shrl
stos
mov
cltd
mov
sub
or
rcrl
sbb
gs
sbb
imul
xchg
and
adc
cltd
cmp
push
inc
mov
dec
bound
shlb
jmp
jmp
push
int3
or
daa
cltd
sbbl
in
repz
pop
mov
mov
test
iret
ja
xchg
or
xor
mov
lret
xorb
bound
dec
or
js
mov
rclb
jo
xchg
shl
call
sub
or
out
dec
sahf
sub
mov
popf
popf
dec
mov
in
shl
rcl
cld
inc
std
xor
lods
aam
push
ds
movb
decb
mov
mov
mov
sbb
mov
and
mov
xor
and
dec
cs
jl
mov
fstpl
add
cmp
adc
fs
int3
sti
and
add
cltd
lock
add
gs
mov
in
in
dec
pop
and
cld
mov
rolb
sub
xchg
sbb
add
add
push
mov
or
or
jnp
adc
xchg
or
inc
in
inc
lahf
movsl
test
mov
add
push
bound
pop
push
in
pop
and
sti
clc
test
cltd
cmp
sti
fsubrs
call
push
and
icebp
or
ljmp
lret
sbb
sub
rorl
xor
movsl
and
shl
xchg
pop
and
push
add
rorb
mov
jb
jl
loop
icebp
decl
inc
cmp
mov
inc
push
and
xor
jg
rol
in
testb
fsubrl
mov
lds
sub
jecxz
mov
dec
jmp
daa
fs
scas
test
push
fcompl
pop
pop
ss
fs
xchg
or
sub
rolb
add
push
mov
shrb
and
adc
and
hlt
adc
xchg
pop
dec
sbb
mov
clc
incb
ds
cmc
push
jns
mov
xchg
pushf
fdivrs
je
fidivl
clc
ret
fwait
int3
add
xchg
ljmp
inc
push
aad
dec
cmp
out
mov
push
icebp
fs
in
cwtl
pop
lret
test
xor
cmpsb
shl
out
inc
ss
bound
mov
in
aam
mov
dec
pop
fisubrs
enter
mov
push
rorl
gs
stc
lret
mov
out
jbe
ja
fldl
out
mov
inc
inc
xchg
out
push
jp
ljmp
not
xchg
imul
and
cwtl
lods
rorl
das
enter
ficomps
aad
addr16
push
shrl
adc
jge
mov
sub
gs
in
int3
std
ret
lahf
in
in
icebp
das
in
mov
sti
cmp
movsb
push
mov
jge
movsb
jmp
enter
sbb
sbb
mov
push
dec
mov
pop
lret
inc
mov
mov
sbb
xor
ds
pop
test
mov
pop
add
movb
cmpl
push
lods
sbbb
jge
inc
testb
push
test
xor
sub
imulb
inc
mov
sub
int
roll
lret
cwtl
leave
xchg
xor
mov
inc
and
jnp
jle
inc
pushf
data16
lods
inc
jge
outsl
bnd
stos
fwait
push
aas
mov
pop
adc
pop
js
inc
in
jp
repnz
dec
mov
jge
add
movsb
push
inc
xchg
jb
jle
pop
jo
ret
pop
fs
rcrb
jae
lea
jmp
ja
sbb
cmp
fnstenv
repnz
inc
lcall
push
sti
mov
lahf
inc
push
adc
dec
sub
out
rcl
ljmp
or
adc
nop
add
test
or
lret
enter
mov
push
mov
mov
cmpsl
stc
xchg
mov
mov
pop
aam
push
jnp
das
lret
popf
xor
popf
or
xor
rorb
imul
iret
cmc
cltd
pop
int3
push
xor
xchg
cld
cmovle
fiaddl
mov
out
dec
lahf
mov
xchg
repz
in
cmp
sub
xchg
aam
add
out
adc
sub
mov
sub
into
fucomi
mov
incl
and
cmpsb
mov
subb
sub
dec
nop
cmp
jno
ret
into
popl
fsubl
push
aad
adc
jo
test
int3
pop
je
cli
pop
fldcw
aam
sbb
in
push
lds
cmp
or
scas
xor
fnstenv
and
cmp
add
sbb
mov
in
shrl
xchg
pop
daa
add
psubq
sub
leave
sub
pop
push
push
movsl
rclb
popf
cld
mov
dec
div
xchg
sbb
mov
mov
adcl
push
cmc
xchg
sub
mov
jl
das
mul
add
repnz
aas
pop
cli
fwait
mov
outsb
push
test
dec
cmp
in
es
pop
cli
pusha
sub
mov
mov
aad
packsswb
imul
repz
jecxz
arpl
fucomip
add
jnp
lods
mov
jnp
inc
cmc
movsl
jp
pop
in
add
shr
sbb
xchg
adc
les
mov
push
f2xm1
je
neg
movsl
scas
fdivs
xorl
mov
mov
jl
jbe
pop
movsl
mov
lahf
loopne
pop
je
cltd
lea
aad
or
mov
and
cmp
aas
sub
mov
or
aaa
jbe
test
push
iret
sub
mov
mov
ds
jg
adc
lods
mov
frstor
jno
arpl
xor
stc
push
addr16
mov
repnz
jns
xchg
dec
fistl
mov
mov
or
cmp
mov
test
push
push
mov
push
sub
mov
mov
aad
xchg
add
sarb
sti
push
and
pop
lds
nop
jb
lea
push
mov
in
shl
fsubl
push
mov
mov
popf
cmp
shll
ss
xchg
xor
ret
sbb
popa
and
pop
add
push
data16
insl
sbb
mov
lahf
push
nop
iret
pop
mov
inc
inc
mov
mov
jno
inc
stos
inc
adc
sahf
es
lea
sbb
mov
sbb
repnz
test
rcr
cmpsb
scas
dec
sub
sub
loope
movsl
addr16
shll
in
andb
iret
bnd
push
pop
or
jno
sub
push
out
sub
mov
xor
insl
and
mov
mov
les
mov
lret
or
mov
and
pusha
jp
dec
cmp
lret
ds
dec
test
notb
rcl
pop
mov
inc
lds
nop
sti
xor
das
in
sahf
xchg
mov
mov
push
xchg
sar
or
loope
fidivs
mov
adc
and
or
imul
add
cmp
mov
enter
test
pop
sub
jg
pop
aam
jmp
loop
xchg
cmp
lahf
test
sbb
stc
add
mov
fisttpl
clc
mov
xor
mov
xchg
js
mov
rcrb
mov
mov
or
add
mov
xlat
dec
pop
mov
int
or
aaa
mov
les
jg
leave
lret
push
xor
push
das
stos
mov
arpl
js,pn
cmp
push
cmp
mov
dec
xchg
adc
nop
inc
mov
cmp
xlat
mov
data16
ja
pusha
jo
enter
test
lock
popa
mov
mov
outsl
lcall
lock
jg
inc
jge
sbb
push
adc
in
mov
loop
jnp
movsl
adc
fcmove
inc
add
sub
and
push
movl
fimuls
push
jge
pushf
movl
adc
fst
add
nop
pusha
fisttpl
movsl
movsl
loope
mov
xor
in
xor
outsl
imul
cmp
int3
mov
pop
dec
mov
jo
xlat
les
adc
add
rcll
lahf
push
xchg
movsb
mov
mov
sub
sub
push
aad
es
jns
push
adc
mov
xchg
fld
add
aaa
dec
gs
cmp
fisttps
popa
fstpl
mov
push
push
mov
xchg
inc
sub
xor
xchg
sti
sbb
push
jbe
sub
pop
adc
orb
mov
jge,pt
enter
lcall
add
sub
and
fisttpl
adc
sbb
fldl
nop
xor
add
push
xchg
lea
out
les
clc
fcoms
push
scas
and
and
dec
mov
xor
mov
adcl
mov
test
sub
xor
les
adc
jmp
adcl
cwtl
fcmovu
pusha
mov
mov
insb
sub
imul
inc
insl
int
in
aas
dec
icebp
pop
pop
cmp
jge
push
or
sbb
lods
int
push
outsb
pop
xchg
sbb
xchg
sbb
arpl
and
repnz
adc
lcall
or
lea
mov
arpl
ss
pop
iret
fildll
pop
scas
adc
loope
mov
adc
pop
pop
xchg
jb
jge
popf
stc
xchg
popa
jg
inc
shrl
push
pop
out
mov
stc
fists
in
adc
repnz
rcrb
clc
xlat
in
lds
lcall
ljmp
cmpb
push
inc
dec
pop
pop
outsl
dec
std
mov
scas
adc
insl
test
lret
adc
aad
fidivrl
call
sub
pop
in
out
sub
jnp
call
add
icebp
xor
push
sub
dec
into
sti
lock
jge
push
xchg
loop
pop
ljmp
inc
lea
in
shr
std
inc
call
je
and
dec
lods
filds
xor
popw
stos
sbb
xorps
pusha
in
jecxz
cmp
mov
std
sub
cmp
jp
movsl
sub
in
push
lods
lahf
inc
xchg
adc
cmp
adc
int
idivl
xor
ret
icebp
mov
add
add
push
outsb
inc
jb
add
adc
push
xor
cmpl
pop
sub
jbe
divb
push
push
add
ret
cs
or
mov
movsb
adc
scas
insl
dec
cmc
or
cli
lods
cs
in
lds
pushf
imul
dec
je
dec
pop
pusha
cmp
inc
push
imul
insb
or
enter
push
adc
ljmp
add
jge
jae
adc
in
scas
dec
test
xabort
mov
in
daa
addb
adc
and
jge
repnz
push
mov
pusha
outsb
cmc
sti
and
fstps
pop
jmp
dec
cmpb
lock
ret
int3
gs
sub
icebp
mov
lcall
add
jnp
outsb
imul
adc
lahf
leave
repnz
aad
add
cltd
pop
xor
push
push
cmp
sbb
popf
adc
mov
dec
repnz
mov
testb
mov
fidivs
and
push
adc
push
push
cmp
push
mov
jl
or
fimuls
insl
imull
xchg
xchg
stos
test
mov
xchg
mov
int3
insb
insb
jp
jb
scas
cld
js
clc
push
mov
aaa
mov
fwait
xchg
sub
lret
push
sbb
or
cltd
incb
adc
dec
mov
into
adc
mov
pusha
les
mov
jbe
jne
out
orb
xor
adcl
pop
and
test
nop
and
adc
push
outsb
js
fs
sbb
and
repnz
pop
arpl
mov
inc
std
sub
pop
iret
pop
jp
fs
popf
add
sbb
add
shrl
xor
push
es
sarl
pop
fucomp
mov
arpl
mov
fs
push
jle
outsl
mov
aaa
cwtl
loope
test
jbe
xchg
lret
mov
xchg
fisubl
xorb
jle
jmp
leave
lock
test
xor
sbb
test
sti
mov
push
cs
push
test
test
xchg
int3
jle
and
add
sbb
sbb
addr16
fstpt
or
mov
xchg
or
scas
push
sbb
movsl
push
repnz
mov
loopne
sub
movsb
jb
cmp
insl
loopne
cld
loopne
ss
add
jge
daa
sbb
mov
or
adc
mov
inc
sbb
dec
mov
dec
and
leave
mov
dec
outsb
sub
and
dec
xchg
cld
icebp
adc
imul
mov
add
jle
pop
std
and
xor
mov
data16
inc
stos
xchg
add
dec
mov
loopne
arpl
lret
into
push
mov
pop
cmp
jecxz
pop
add
les
pop
mov
cli
mov
roll
pop
push
cmpsb
mov
push
movsl
dec
lea
push
mov
nop
mov
push
pop
sti
test
xlat
dec
pop
fdivrl
cmp
in
loopne
adc
lret
into
cmp
insl
lea
shrl
push
lea
sbb
aad
xchg
lahf
into
and
sub
and
mov
scas
scas
push
or
call
arpl
mov
cwtl
repz
mov
subb
ds
mov
mov
jecxz
jo
cmpl
sbb
pushl
hlt
stc
jno
pop
sub
repz
loop
jno
xchg
mov
out
jp
stos
hlt
jle
stc
sbb
pop
stos
mov
xlat
add
sarl
mov
or
es
sub
cmp
pop
movsb
fs
mov
cmc
xbegin
pop
mov
jmp
sbb
cli
xchg
or
and
daa
pop
jmp
in
and
test
ret
leave
sbb
push
and
jne
xor
fmuls
dec
int3
data16
cmp
loope
sub
cmp
sahf
or
adc
jo
mov
cs
add
push
das
lcall
mulb
xchg
jno
cli
inc
ret
outsl
jo
es
push
mov
scas
in
loope
xchg
xorl
fidivl
out
sbb
inc
shlb
inc
sub
dec
push
xchg
or
and
fmulp
nop
add
pop
ljmp
int3
jl
pcmpgtd
mov
sub
dec
clc
sub
repnz
adc
mov
push
cli
fidivrl
mov
pop
mov
mov
and
fsts
xor
int3
in
addb
xchg
test
sbb
out
frstpm(287
pushf
push
icebp
cwtl
push
inc
rcrb
loope
nop
lods
pop
lret
cmpsb
fstpl
xor
jg
ja
je
inc
inc
push
or
xchg
add
mov
push
dec
mov
dec
cs
inc
sbb
test
push
add
dec
adc
sub
movsl
loopne
inc
cmp
and
add
cmp
jbe
filds
rolb
cmp
dec
dec
cltd
sar
push
and
push
mov
and
bound
dec
xor
inc
inc
fsubrs
es
adc
push
jo
mov
int3
hlt
sbb
bound
mov
push
cltd
jle
insb
sbb
add
lahf
or
jo
es
and
leave
iret
in
shr
mov
mov
leave
cwtl
xor
or
divb
inc
push
xor
jnp
xor
gs
pop
int3
ror
test
in
popa
inc
xor
inc
adc
or
push
xchg
addr16
lahf
out
and
das
pop
insb
and
dec
mov
dec
in
jae
add
test
in
sbb
lock
lret
dec
pop
add
sbb
lahf
jecxz
sti
rorb
xchg
inc
cmp
adc
xor
icebp
popa
dec
out
or
add
loop
mov
mov
and
ss
mov
inc
inc
push
test
sbb
jg
pop
stc
sbb
xor
inc
mov
sub
mov
out
movsl
daa
subl
and
enter
sbb
cltd
popa
mov
inc
hlt
or
cmp
movsb
pop
mov
ret
mov
flds
xor
and
jecxz
jp
mov
sbb
pop
out
xchg
das
mov
mov
daa
push
dec
icebp
cmp
lret
jnp
scas
out
repnz
mov
lea
xchg
rcll
testb
ret
mov
or
pop
enter
jb
in
mov
lea
xchg
mov
or
loopne
mov
jmp
aas
cmpsl
push
int3
shll
push
psllq
repz
xchg
xchg
xor
inc
addb
out
xor
sub
adc
shlb
add
xchg
xchg
or
rcrl
test
mov
mov
lods
xor
xchg
fdivr
jle
inc
pop
mov
lds
pushf
inc
or
cli
xchg
sbb
or
js
pop
pop
fdivrp
enter
cld
add
loope,pn
sarl
stos
mov
leave
xor
popa
sbb
dec
aad
hlt
or
notb
pushl
je
push
sbb
and
push
pop
or
xchg
in
mov
mov
imul
mov
adc
xor
stos
into
adc
out
add
and
pop
ds
repnz
push
lret
push
cld
dec
inc
and
jg
dec
movsl
int
es
xlat
add
cld
lahf
nop
sbb
sbb
js
fwait
push
test
dec
dec
pop
jmp
mov
cmp
lods
dec
cmp
out
sbb
pop
rcrb
xchg
push
insl
pop
lcall
xor
cwtl
fwait
jp
mov
or
inc
jns
das
fs
or
and
mov
and
or
inc
xchg
jb
ja
mov
out
dec
popw
mov
or
adc
loope
cmp
arpl
movaps
outsb
cmp
push
stos
cmp
inc
repnz
addr16
and
mov
dec
negb
adc
or
mov
add
mov
arpl
mov
sbb
std
dec
and
imul
mulb
sub
icebp
and
out
mov
out
mov
add
pop
mov
leave
mov
out
ud2
dec
cld
push
xchg
xchg
popa
incl
xchg
cltd
loop
mov
cmp
mov
jo
xchg
bound
mov
add
push
cmc
es
adc
push
test
add
xor
imul
outsb
test
xor
cmp
pop
xchg
mov
sarl
push
push
sbbb
inc
outsb
push
xchg
cmp
mov
dec
test
adc
sbb
pop
and
add
ds
in
fisubl
cmpsb
push
mov
mov
ja
dec
add
and
and
inc
cmp
xchg
mov
fnstsw
dec
aas
cltd
fstpl
xchg
jle
ljmp
xchg
adcl
sub
sarb
scas
xor
popa
and
clc
jae
mov
std
loopne
dec
repz
sub
push
scas
fldcw
and
and
inc
insb
out
sbb
add
rol
stos
bnd
add
fcmovu
jp
mov
mov
imul
out
les
fisttps
jno
xchg
push
add
inc
pop
and
xor
push
aam
in
cmp
aad
imul
fisubrs
push
push
or
in
cwtl
or
xor
rolb
sbb
cmpsb
mov
movsb
mov
dec
adc
adc
push
or
mov
push
xor
lods
test
call
mov
hlt
aas
push
xor
or
and
pop
add
xchg
push
add
push
mov
ret
adc
jnp
pusha
add
aaa
push
gs
divps
scas
cmpsb
int3
add
ret
dec
pop
scas
neg
fldcw
add
inc
mov
add
mov
dec
repz
in
mov
adc
pop
inc
popa
insb
and
pop
xchg
or
sub
cmp
addr16
rcl
inc
sti
jp
xchg
sbbl
jae
repnz
int3
gs
clc
xchg
mov
push
lcall
inc
and
push
push
cmp
jl
cld
dec
js
xchg
xlat
pop
push
scas
xchg
rcrb
leave
or
stos
pop
lods
jnp
dec
mov
jne
xchg
in
jne
xor
stos
and
cwtl
andb
pop
out
dec
dec
pop
stc
aaa
add
nop
test
xor
mov
jnp
mov
orb
faddp
int3
dec
loop
into
shll
mov
and
movsb
sbb
jmp
mov
ret
push
test
pop
decb
aas
add
loope
nop
decb
fcomps
inc
adc
pop
xor
cltd
in
fnstenv
jmp
mov
dec
sbb
int3
js
insl
into
jecxz
jns
xchg
pop
insb
mov
pop
xchg
cmp
jns
std
pop
out
popa
mov
fwait
push
cmpl
push
cmp
orl
nop
sub
lods
sub
pop
mov
inc
dec
adc
push
ss
jae
enter
movzbl
or
push
jle
jns
addr16
add
je
lcall
sub
es
jne
cli
mov
xor
repz
ja
lret
and
sub
mov
test
subb
jae
adc
xchg
xchg
sarb
or
xor
mov
fsub
adc
addb
mov
pop
repz
mov
ljmp
mov
int3
and
add
enter
mov
rorl
cwtl
push
inc
out
mov
dec
lahf
addr16
roll
lcall
cmp
adc
insb
mov
insb
leave
fistl
push
out
jns
test
mov
rcrb
in
movsl
push
jnp
in
lahf
pop
lods
insb
mov
arpl
mov
mov
int
xchg
cmc
jp
pop
test
movsb
imul
jle
addr16
push
iret
or
or
xchg
iret
pop
into
push
clc
mov
mov
test
xchg
shrb
mov
test
jg
sahf
mov
jmp
mov
mov
push
push
inc
pop
push
or
push
icebp
in
mov
jne
cli
int
aam
ss
outsl
or
xchg
je
lcall
fcomps
dec
mov
mov
sbb
and
sti
push
xchg
aad
lcall
jg
ds
sbb
xorl
icebp
aaa
cmp
cmovae
cs
dec
in
push
je
xor
loope
and
loop
mov
ss
pop
lods
or
hlt
cmpsb
arpl
xor
or
vcomiss
cmpsl
test
mov
dec
add
movsb
adc
gs
test
sub
rcr
jnp
lods
dec
add
dec
loop
test
and
imulb
pop
bound
or
mov
fcoml
out
icebp
shlb
adc
dec
and
imul
out
shrl
cmp
outsl
call
push
jp
pop
push
psrlw
push
xor
cli
int3
push
push
xchg
fldcw
iret
sub
and
test
xchg
fists
cld
out
jle
cmp
xor
mov
xchg
jno
pop
fists
enter
fwait
shlb
inc
std
xor
out
scas
or
pop
xchg
push
xchg
pop
jbe
fcomip
push
pop
push
cmp
fs
leave
insb
repz
add
mov
ret
les
movsb
adc
fsubr
or
jno
push
adc
inc
retw
jne
aad
dec
sti
sbb
stc
jecxz
mov
lds
push
pusha
dec
pmuludq
jle
mov
loope
stos
aas
xor
pop
in
loop
lods
movsl
daa
jbe
rolb
sbb
das
insl
je
jecxz
stos
xchg
xor
lahf
test
sub
loopne
add
and
fnstenv
stc
push
mov
pop
mov
xchg
jo
in
mov
pop
jno
push
jb
fstl
pop
adc
and
adc
inc
ss
jb
in
xchg
insb
nop
cwtl
cmp
add
imul
ljmp
pusha
test
into
adcb
cmp
dec
dec
and
test
dec
fdivl
pop
rorl
shrb
mov
iret
loopne
inc
pop
push
enter
in
or
and
xor
push
push
inc
xchg
or
and
push
ja
jg
add
rorl
mov
aaa
outsb
data16
fisttpll
pusha
jnp
sub
mov
in
fldt
xchg
iret
cmpsb
xor
js
addr16
mov
dec
jmp
xor
pop
cmp
mov
mov
and
or
sahf
arpl
lahf
add
jle
ret
xchg
stos
mov
jmp
stos
fildl
add
sbb
push
sub
dec
push
addr16
xchg
dec
push
mov
adc
ud2
add
sbb
xor
loopne
popa
sub
cli
xor
adc
or
cs
mov
fdivp
push
push
in
push
cmp
fmuls
push
xchg
movsb
ret
jle
fsubrs
popa
jb
je
sbb
xlat
jmp
orb
iret
cmp
stos
xchg
in
mov
in
pushf
shl
dec
aam
fisttpl
adc
out
mov
mov
aaa
in
add
lods
cmp
sti
ljmp
inc
pushf
mov
dec
in
mov
push
lcall
aaa
js
ret
das
into
jbe
stos
jecxz
jae
xchg
push
sbb
lock
add
lock
rcr
sbb
movsl
shrb
mov
jle
les
shlb
dec
cmpsl
mov
enter
cmp
cmp
jle
push
test
mov
xlat
and
fists
mov
jno
lods
fldt
mov
dec
jl
aas
jg
adc
mov
cmpsl
sub
popa
or
push
mov
push
adc
fs
xchg
inc
and
test
outsb
sbb
xchg
jg
into
movsb
cmp
xchg
add
mov
lds
xchg
or
xchg
mov
push
sbb
push
lahf
dec
xchg
xchg
xchg
xchg
pop
les
xor
lcall
jle
mov
mov
es
out
icebp
cmp
cmp
fcoml
sbb
dec
shrb
lahf
xor
out
sub
jo
inc
or
xchg
add
lahf
jecxz
jge
jae
cmc
push
sbb
fwait
cli
pusha
lds
imul
mov
pop
cmpw
out
pushf
pop
or
lds
ja
rorb
enter
int
mov
pop
js
push
sbb
mov
in
lods
dec
and
push
adc
mov
das
stos
std
cmpsb
clc
jae
add
rcrb
daa
dec
mov
hlt
fnstcw
mov
pop
test
js
mov
jns
xchg
daa
xchg
roll
gs
ficoml
outsl
test
xor
mov
lahf
push
xor
xchg
test
out
adc
repnz
mov
enter
pushf
xor
fidivl
or
js
and
jae
xor
out
cmp
jge
inc
xor
popf
add
negb
lret
cmpsb
cmpsl
sub
mov
dec
mov
ja
jecxz
outsl
je
xchg
fcmovb
inc
clc
das
jne
xor
imul
pop
test
push
sub
fstps
out
adc
inc
outsb
jbe
and
pop
roll
inc
mov
dec
sbb
repz
cmc
scas
xor
loopne
imulb
push
xchg
imul
loopne
mov
and
pop
push
pop
sbb
call
mov
loope
dec
les
cmp
sbb
int
popf
xchg
or
fsts
enter
sub
popa
xor
stc
je
dec
sbb
mov
cli
popf
cmc
or
negl
popf
add
push
xchg
push
or
pop
pop
xlat
in
jg
rolb
sub
sti
imul
in
sub
filds
filds
shrb
fcoms
sbb
hlt
push
mov
andb
mov
cmp
repnz
xlat
stos
mov
testl
repz
mov
mov
or
xor
mov
loop
test
stc
and
stos
lods
lds
out
ret
mov
xchg
mov
mov
lret
add
inc
subb
jmp
push
fistpll
test
jg
gs
int3
add
imul
lcall
push
cmp
add
push
pop
sub
js
mov
add
ja,pn
in
xchg
out
sbbl
push
sub
adc
sbb
int
fldenv
add
lods
and
or
push
and
xchg
xchg
adc
mov
call
dec
cltd
ds
rol
pop
mov
jg
pop
pop
test
negb
sahf
cmp
cwtl
mov
loope
and
cmp
sbb
xor
and
imul
push
test
or
rcrb
pop
add
push
imul
jo
lahf
rorl
mov
in
inc
inc
icebp
xchg
mov
adc
fldl
mov
sub
adc
rclb
lds
dec
jbe
sub
stos
inc
mov
or
cmp
xchg
pop
insl
push
push
lcall
pop
rolb
sbb
mov
or
sbb
fbld
sbb
ljmp
add
inc
unpcklps
dec
icebp
and
push
lcall
push
movsb
sub
inc
pop
jb
sbb
xor
andb
fisttpl
xor
mov
pushf
inc
push
xchg
movsl
xchg
xchg
cld
stc
pop
xor
adc
pop
lds
mov
in
movsb
mov
jmp
cmpl
dec
ja
ss
movsb
mov
xchg
mov
xchg
shl
icebp
shlb
mov
mov
lcall
addl
dec
or
into
popf
dec
jns
sub
mov
out
in
push
scas
jmp
dec
inc
es
rcr
repz
insl
xor
test
ds
insb
aas
mov
or
sbb
push
mov
lcall
adc
lods
xchg
sbb
add
inc
add
jbe
aam
cmp
push
pushf
repnz
push
jnp
insl
mov
mov
push
ljmp
scas
or
imul
ret
stos
insl
in
mov
shll
ret
push
xor
push
lahf
les
lret
jmp
add
ret
rcll
sub
pop
jns
cmc
lods
jne
idivb
arpl
xorl
pop
insl
aas
xchg
xor
test
out
dec
shll
imul
mov
mov
popf
ret
xorl
cld
jnp
pop
sbb
push
test
pop
pop
or
pop
sbb
jb
pop
fimuls
push
jo
out
lea
xchg
adc
arpl
test
and
jl
mov
sti
outsb
inc
dec
outsb
sbb
out
cli
les
push
out
lret
adc
jnp,pt
neg
repz
xchg
cs
push
aas
or
stos
aaa
mov
cli
push
pop
mov
loop
xchg
repnz
mov
adc
mov
push
test
jmp
addl
push
les
jae
fstl
inc
adc
pushf
adc
xor
imul
sbb
scas
sbb
lock
iret
loop
aam
fs
lahf
iret
rcl
loope
aam
loope
js
lods
insl
das
shll
js
inc
xchg
lahf
loopne
xchg
les
jno
mov
lea
icebp
clc
mov
push
xor
pushf
js
lahf
pop
adc
mov
mov
negl
mov
xchg
add
inc
movsl
add
fisubs
xchg
push
jb
dec
pop
ss
bound
mov
outsl
in
mov
or
mov
js
fidivs
sub
in
push
or
ja
jne
adc
xor
jae
lods
fs
cli
lret
repz
fists
in
lods
xor
in
pop
aaa
dec
sub
in
inc
arpl
inc
daa
inc
pop
add
or
pop
aam
bound
popa
fcomps
or
gs
mov
bound
mov
jmp
movsb
in
call
cmp
lods
ljmp
nop
loop
mov
aam
dec
or
ja
lods
jb
test
je
in
xchg
xor
lock
xlat
xchg
mov
pop
test
test
jno
rcl
out
xchg
jge
je
inc
nop
test
in
das
push
shl
push
xor
fldenv
out
stc
xchg
xchg
push
mov
ljmp
or
leave
pop
cmp
mov
pop
cmpsb
rol
loopne
ret
mov
jmp
or
sbbb
lods
lds
fcmovb
push
aam
in
enter
in
or
rorb
subl
cmpb
push
fwait
int3
jecxz
cmp
rcrl
sub
lods
cmp
rclb
cmp
data16
lods
lods
shlb
int3
stos
stos
push
sti
lret
cmp
dec
popf
jge
mov
aas
lret
repnz
pop
lret
sub
call
dec
fwait
call
sub
andl
xchg
mov
lock
xchg
movsb
aam
mov
mov
hlt
mov
xchg
cwtl
mov
adc
add
es
dec
daa
scas
scas
add
sbb
mov
scas
fiadds
rorb
mov
ljmp
and
mov
cmpsb
dec
lret
jo
mov
mov
fs
push
std
pop
lret
mov
xchg
in
mov
pop
push
push
mov
push
popa
cmp
and
xor
adc
pop
das
bound
fwait
jns
mov
adc
loopne
push
fwait
in
push
mov
jnp
insl
daa
iret
jb
mov
shll
stos
mov
mov
jbe
xchg
decl
lds
and
mov
xchg
jne
dec
bound
movsb
dec
arpl
cmpsl
or
mov
outsb
cs
test
shlb
adc
sub
xlat
jle
pop
mov
out
js
fidivrl
test
iret
or
and
dec
jno
xor
jmp
jp
lahf
cmc
fists
push
cmp
in
adc
cmp
movsl
lods
ds
lods
es
nop
cli
sub
lods
and
mov
enter
roll
movsb
sarl
mov
and
dec
xor
stos
jg
pop
mov
push
or
lcall
add
test
popf
lret
das
and
ret
jnp
adc
lret
mov
mov
add
push
pop
sub
cmpsl
push
push
jnp
leave
mov
jge
inc
jp
les
test
dec
cmpl
arpl
shrb
pop
sbb
mov
outsb
mov
add
pop
mov
into
sbb
cwtl
cmp
xor
arpl
lea
js
mov
insl
lret
push
out
sbb
cli
movsl
xchg
mov
imul
cmpsb
jnp
aaa
insb
pop
bound
mov
sub
ljmp
sbb
fstp
inc
xchg
subb
popa
mov
push
push
dec
jne
push
mov
mov
jecxz
les
sbb
lods
movsl
stos
negb
adc
outsl
push
lret
rcll
mov
enter
mov
mov
lds
rcl
inc
dec
or
cmp
aam
pop
pop
loopne
stos
adc
mov
inc
push
cmp
mov
pop
cli
es
ret
nop
int3
aad
push
ja
mov
adc
insb
cmc
pop
push
mov
lock
das
mov
fdivs
or
repnz
cmp
pushf
ljmp
cmp
int3
jb
cltd
push
test
xorb
jns
lahf
ret
cmc
sarl
xor
clc
push
push
stc
xchg
xchg
xchg
js
dec
leave
lods
je
and
orl
loope
adc
test
jnp
jae
cmpsb
push
push
cmpsl
dec
rclb
test
xor
and
sub
push
or
lcall
sbb
mov
and
pop
cmp
xchg
xor
sub
or
xorl
mov
out
sub
jl
pop
les
add
mov
mov
int
xor
shll
sub
out
sti
cmp
push
adc
inc
jbe
aam
xchg
and
mov
cld
repz
and
cli
mov
adc
and
bound
push
adc
push
shlb
in
jmp
xor
loopne
mov
pop
mov
lret
loope
mov
add
bound
mov
push
and
xor
call
lds
mov
bound
jns
inc
lret
mov
pop
scas
xchg
outsb
xor
outsl
pop
mov
leave
pop
inc
jnp
sub
xchg
xor
pop
out
mov
out
movsl
push
mov
xor
dec
fisttps
xchg
push
movl
mov
lcall
repz
mov
jge
out
pop
adc
xor
and
movhps
dec
loop
or
loopne
xor
sub
add
mov
leave
je
or
cmp
out
imul
xlat
test
xchg
into
inc
xchg
adc
shl
and
std
jo
pop
ja
sbb
lea
outsb
in
cmpsb
push
stos
in
xchg
lahf
bswap
cwtl
repnz
cmc
jns
jae
les
mov
nop
icebp
or
add
sbb
icebp
mov
int3
mov
popf
jmp
pop
bound
cld
das
push
fidivrl
stos
cmp
mov
sahf
fldt
test
pop
cld
pop
or
roll
rolb
xor
sub
adc
sbb
jmp
sub
test
xorl
push
inc
out
fsin
sbb
jg
mov
dec
popa
repnz
mov
inc
in
push
mov
pop
cmp
cmpsb
inc
or
aaa
xchg
loopne
out
cltd
js
lods
repnz
mov
mov
bound
arpl
xchg
inc
ud2
cmp
jge
ja
pop
mov
pop
jmp
scas
fcmovnbe
add
inc
out
loopne
add
mov
rorl
mov
cmp
insb
outsl
dec
pop
and
stos
insb
sub
cmp
pop
sub
add
inc
movsb
dec
enter
cld
pop
mov
sahf
mov
loop
cmp
jecxz
xchg
pop
lods
pop
cli
aas
enter
das
insl
scas
sbb
inc
shrb
cmp
cld
inc
fsubrl
bound
mov
fimull
cwtl
and
jecxz
dec
ljmp
mov
mov
mov
jbe
xchg
loop
pop
dec
insl
jae
stos
mov
pusha
enter
mov
clc
outsb
mov
and
pop
popa
push
fldl
add
pushf
sbb
ret
fldt
mov
ret
lahf
mov
or
add
sahf
ret
bound
rcrl
xor
push
add
outsl
int3
fisttps
jg
sub
fwait
mov
rclb
mov
into
movsb
xlat
cmp
xlat
gs
xor
scas
aam
cltd
lcall
addl
testl
int3
xor
inc
xchg
mov
andl
test
pushf
sub
xor
xlat
ret
jb
dec
mov
insb
pusha
pop
push
dec
sbb
push
aaa
fbstp
push
and
leave
or
out
mov
cli
leave
sub
jne
std
dec
jg
ljmp
jnp
jne
inc
int3
out
mov
sti
sub
mulb
cmp
inc
push
test
jne
pop
fadds
mov
addr16
cmp
jno
mov
clc
stc
xlat
scas
stos
lcall
xchg
iret
xchg
mov
mov
std
lcall
pop
insb
cmp
inc
mov
stos
int3
xlat
out
cld
nop
sbb
add
ror
enter
sub
pop
pop
test
aas
leave
jno
ret
and
push
jl
sahf
mov
sub
std
fcoml
mov
call
js
movsl
add
cli
jne
dec
push
orl
pop
mov
andl
jecxz
cmc
loope
pop
jmp
iret
arpl
mov
andl
dec
ljmp
leave
jnp
sub
call
pusha
out
jp
sbb
xor
and
mov
pop
stos
shll
sub
push
dec
pop
push
xor
in
mov
cs
mov
mov
mov
push
xchg
push
ret
repnz
ficompl
sub
repnz
cld
aaa
push
jne
popa
jmp
mov
in
leave
fildll
jge
jmp
jle
mov
sub
repz
pop
in
pop
sub
xor
xchg
sbb
pop
lret
hlt
lret
pop
jp
cmp
fwait
sahf
scas
adc
push
cmp
lods
inc
sti
stc
ljmp
jmp
mov
cmp
stc
outsb
iret
lods
das
cmp
cmp
mov
xchg
adc
add
jl
and
sub
pop
xchg
mov
enter
jge
jmp
jo
pop
ja
mov
lahf
gs
bound
xchg
outsb
rclb
pop
inc
xchg
data16
mov
push
pushf
push
xor
idiv
inc
xor
mov
ds
shlb
inc
inc
in
outsb
ljmp
inc
divb
shl
mov
mov
scas
daa
rcrb
mov
iret
adc
into
mov
popf
insb
pop
and
repz
fstpt
mov
icebp
test
shll
mov
lret
lcall
jo
cmp
pop
cwtl
sahf
or
mov
ret
loope
scas
and
inc
loope
bound
loope
rcr
jnp
dec
enter
loopne
repnz
imul
or
fisubrl
mov
or
inc
dec
enter
mov
sti
xchg
and
les
outsb
stc
das
add
adc
dec
mov
dec
movsb
into
mov
sbb
push
push
xchg
inc
jl
mov
jecxz
inc
inc
xor
mov
mov
jge
je
adc
sub
push
fmul
out
add
stos
les
pop
outsb
mov
lret
sbb
jb
jle
inc
fistl
xchg
ret
mov
cltd
sub
lcall
pushf
leave
sbb
xorb
js
fidivs
cmp
clc
fucomi
dec
sub
stos
test
cmpb
jecxz
insb
xchg
js
clc
mov
fmuls
mov
icebp
comiss
inc
das
adc
scas
pusha
lcall
fidivs
inc
aaa
xor
test
enter
pop
ret
sti
pop
scas
fidivrs
stos
jle
test
sti
inc
leave
pop
mov
test
xor
sub
and
inc
lcall
stos
mov
jle
fmul
mov
enter
jmp
imul
int
in
lds
cmc
pusha
jg
inc
aaa
lock
pop
xor
jno
or
imull
pop
push
sbb
or
mov
stos
mov
jmp
fcoml
push
jae
and
jae
int
jl
test
dec
imul
pusha
add
out
lea
xchg
add
push
sahf
adc
lret
mov
cld
scas
jmp
movsl
mov
push
imul
sbb
int
call
lds
and
jge
push
stos
push
pop
push
sbb
sub
ret
fbld
adc
sar
xor
push
sbb
idivb
dec
daa
andb
pop
or
clc
lods
insl
push
mov
ret
push
or
outsb
mov
jle
push
dec
popf
adc
out
loopne
push
xchg
pop
bound
lahf
mov
nop
loopne
add
das
add
push
sub
and
iret
add
sti
push
popf
stos
fsubl
outsl
adc
jmp
mov
adc
xor
lret
xor
add
aam
sbb
addr16
in
inc
fdivl
add
repz
shl
test
cmp
mov
jne
daa
sub
scas
mov
movsb
adc
jo
into
popa
xor
dec
add
call
adc
and
xlat
fs
sub
add
jg
iret
jmp
stc
pop
pop
mov
mov
sub
adc
push
ds
xchg
add
outsb
jbe
adc
add
xchg
xor
out
pusha
xchg
cmp
pop
int
orl
fmul
xchg
pusha
iret
mov
bound
jp
xor
fsubr
dec
stc
xchg
jne
xchg
icebp
xchg
mov
cld
insb
pop
xchg
cld
cli
call
mov
in
hlt
mov
addr16
std
inc
movsb
fiadds
dec
addl
stos
popf
dec
xor
lock
sti
aam
cs
addr16
repnz
loope
add
push
dec
mov
adc
push
subl
mov
outsl
pop
ret
test
or
jecxz
hlt
sub
cld
orl
movsb
insb
or
adc
popf
pushf
adc
lock
insb
mov
xchg
ficoms
add
test
mov
fldt
test
pop
rcrl
mov
and
lock
jp
mov
es
frstor
push
shll
or
ljmp
jae
mov
or
mov
jns
fwait
xchg
sub
je
roll
pop
addl
divb
loope
jecxz
or
test
jne
mov
jo
decl
add
imul
xchg
fcoml
icebp
movsb
or
test
cmp
inc
mov
sub
ja
fstpl
cltd
mov
dec
pop
xchg
dec
cld
dec
cmpsl
test
adc
cmc
insb
gs
sbb
push
jo
call
in
ret
push
imul
aas
movsl
clc
and
mov
xchg
cmp
dec
xlat
imul
or
shrl
dec
add
dec
mov
scas
loopne
or
and
sahf
faddl
cltd
test
insb
inc
mov
fldl
mov
cmp
hlt
fwait
mov
mov
xchg
jne
stc
pop
rclb
push
sub
gs
mov
mov
inc
dec
jge
xor
enter
mov
testb
shlb
pusha
rclb
cld
or
jbe
push
sar
cld
lock
dec
xchg
out
shlb
test
pop
stos
inc
jg
jne
movsl
xor
xchg
sbb
mov
shrl
add
iret
shrb
or
cmpsl
mov
push
cmp
add
sub
adc
push
mov
fidivrs
xchg
mov
movsl
xor
fsts
das
jecxz
das
cmp
and
pop
mov
test
cwtl
inc
fwait
or
arpl
mov
loopne
and
icebp
lock
pop
test
out
enter
outsl
pusha
in
clc
sbb
es
jge
jne
adc
fistpl
arpl
xchg
aad
adc
add
shlb
xor
fxch
ret
icebp
outsb
fcomp
push
cmpsl
mov
dec
sub
cltd
xor
mov
stos
jmp
sbb
inc
outsb
cmpsl
jnp
imulb
test
out
loope
sarl
leave
jb
sti
pop
xchg
dec
mov
bound
mov
pop
jo
and
imul
je
icebp
push
sub
jl
loop
loop
jno
aas
ja
push
lcall
aad
int3
bound
jbe
clc
jne
pop
ja
push
push
lret
inc
in
fcmovu
neg
pop
lret
fidivs
mov
pushf
push
jmp
mov
dec
pop
call
loope
clc
pop
outsl
mov
mov
enter
push
fdivs
cltd
fsts
pushl
cmp
mov
dec
ljmp
push
aaa
cmp
or
inc
popa
mov
adc
cmp
popa
pop
xor
out
sub
fwait
add
add
inc
rclb
lret
or
cmp
cmp
jl
cmp
cmp
fmull
cmp
stos
popl
cs
mov
leave
jl
cmp
insb
jge
mov
cmpb
fidivrl
lds
jne
jns
pop
dec
gs
pusha
arpl
push
lds
fisubl
push
rol
push
cmp
mov
sbb
loop
pusha
push
mov
pop
push
inc
stos
mov
std
xchg
mulb
addps
push
loop
or
xor
sbb
fucomp
cmpsl
and
mov
or
inc
testl
mov
icebp
inc
into
sti
or
lock
cli
repnz
ret
sub
das
jo
imul
xor
out
cwtl
add
or
dec
pop
xchg
cmpsl
sbb
mov
dec
xchg
fdiv
mov
in
xchg
fiadds
inc
insl
js
fwait
aam
add
jb
mov
leave
xchg
pop
push
xchg
mov
in
inc
mov
fnsave
lahf
imul
inc
push
mov
adc
sahf
daa
rcrl
xchg
add
jmp
mov
mov
cltd
add
and
and
jno
cwtl
nop
jmp
lock
mov
xor
adc
iret
sbb
mov
add
jbe
mov
push
in
dec
mov
repz
ljmp
leave
out
sbb
lahf
insb
test
outsl
jnp
ret
stos
jmp
rcll
adc
cmp
out
test
nop
adc
sub
imul
pusha
jns
dec
in
dec
in
cmp
xlat
adc
cmp
imul
aas
clc
popa
xchg
nop
pop
ljmp
mov
push
sub
push
test
fnstenv
xchg
pop
xor
jo
push
add
js
add
sub
push
lock
jp
int
inc
inc
ret
sbb
in
out
jbe
imul
xchg
jns
mov
daa
push
mov
lods
and
jge
or
std
test
sar
inc
dec
mov
adc
cld
add
jl
into
sti
mov
xchg
aas
inc
jnp
push
mov
idivb
ret
das
push
loop
int3
lret
insl
testl
mov
cmp
test
clc
fiaddl
sub
and
jge
or
out
ficomps
arpl
sub
jg
insl
mov
jl
popf
aam
and
xchg
xchg
orl
xchg
xlat
xchg
out
xchg
jne
mov
cmpsl
rcl
sub
xlat
mov
mov
jno
js
mov
push
cmp
lock
jb
into
or
push
lahf
push
xor
sarb
add
roll
sbb
xor
pop
pop
mov
imul
lds
add
adc
pop
in
mov
xchg
sub
add
sbb
xor
xor
sbb
pusha
sbb
jae
dec
mov
push
pop
rol
jo
ss
je
adc
mov
mov
cmpsl
cmp
mov
push
jge
sbb
pop
mov
enter
mov
sar
mov
or
pop
lahf
mov
inc
dec
out
adc
mov
sarl
xchg
shr
xchg
mov
jb
push
mov
pushf
cltd
addr16
xor
lahf
xor
inc
sub
jl
mov
sub
rcll
imul
lret
aas
subl
dec
fdivs
int3
out
jae
orb
arpl
outsl
xor
push
cld
sti
and
clc
push
aaa
mov
lods
iret
sahf
inc
sbb
outsl
outsl
sti
sbb
xchg
fidivl
in
test
adc
dec
loop
out
rorl
nop
push
lahf
cmp
movsb
push
push
sub
dec
adc
xchg
add
mov
into
pop
xor
aad
jo
add
aaa
cmc
mov
lcall
push
add
pop
divl
cmpsb
aam
xchg
rorb
into
push
daa
stos
shrb
jo
xor
repz
jle
inc
xchg
lret
out
mov
and
mov
mov
mov
aas
xor
mov
and
addl
jp
mov
imul
or
pop
inc
lea
jmp
repnz
in
pop
scas
stc
push
pushf
pop
pop
aaa
or
cli
aam
mov
imul
int3
sbb
cli
insb
jp
sub
int
aas
xor
out
loopne
insb
test
loopne
push
rclb
iret
movsb
outsl
ja
out
adc
fsubrl
xor
cmp
xor
in
aam
adc
dec
or
push
das
lea
mov
orb
and
pop
stc
push
fstpt
scas
rolb
sbb
mov
or
push
inc
adc
test
popf
cs
imul
dec
lea
xor
lcall
lods
fcoml
add
push
insb
inc
add
aad
test
sti
dec
pop
cmp
lret
push
hlt
sbb
repnz
jl
inc
pop
adc
xchg
adc
jmp
loop
sbb
jns
inc
pop
testl
aaa
lea
insb
stos
xor
xor
jbe
sub
adc
fwait
pop
sub
or
xor
sbb
out
cmp
cmp
or
orb
movsl
rcrb
repz
cld
ja
xor
lock
enter
insb
mov
and
jge
lea
das
xchg
mov
cld
cmp
loope
loop
inc
jg
sar
adcb
jns
pop
fadd
jae
sbb
outsl
pushf
xchg
push
jle
shl
lret
sti
and
mov
mov
xor
fwait
push
pop
add
mov
mov
dec
jle
push
xchg
or
xor
ret
mov
pushf
repnz
loopne
mov
jecxz
push
popf
mov
mov
in
sbb
divl
inc
aam
add
or
jne
outsl
in
push
stc
jge
xor
xchg
mov
fcoml
mov
imul
xor
cmpsb
and
inc
fidivl
int
push
pop
pop
pop
lcall
pop
movsb
adc
mov
dec
inc
pop
mov
insb
test
inc
flds
cmp
adcb
icebp
scas
loop
into
add
push
fstpt
cmp
pop
sub
cmp
aaa
das
test
sub
mov
loop
jns
hlt
push
cmpsl
push
push
pop
test
int
add
xchg
imul
sbb
shll
call
jb
ja
pop
stos
mov
fimull
push
lret
push
xor
mov
icebp
int3
loopne
mov
push
push
jg
add
mov
nop
cs
jp
add
push
ret
lcall
lcall
in
lds
das
xor
xor
ret
outsb
ja
sub
outsl
push
rclb
sbb
mov
mov
cmpsb
adc
lea
xchg
movsb
shrl
jecxz
aam
and
or
out
xor
cld
jg
push
inc
push
out
clc
adc
cmp
ret
scas
in
push
into
pop
leave
cmp
add
aas
pop
pop
mov
fwait
inc
rolb
test
sub
cmp
incb
inc
jbe
lcall
insl
nop
jmp
inc
ret
jbe
mov
cmp
iret
into
scas
movsb
mov
xor
clc
adcl
push
int
les
adc
icebp
shrb
lock
sub
xchg
nop
xor
jmp
adc
pop
out
sbb
or
ljmp
cmp
insl
inc
mov
push
and
jmp
jne
adc
xor
mov
out
iret
cli
or
mov
cmp
jb
add
ljmp
sbb
aad
sub
add
xchg
mov
push
mov
loop
cmp
dec
jmp
lcall
push
nop
mov
outsb
mov
mov
fisubs
std
in
lods
mov
int3
test
sbb
das
sbbl
hlt
xchg
enter
push
add
mov
iret
decl
lock
mov
inc
jae
jge
stos
jo
rcrb
sbb
cwtl
ljmp
nop
sub
sub
adc
sub
hlt
ljmp
or
sub
mov
xchg
xor
enter
and
out
clc
adc
movsb
sbbb
rcl
mov
pop
adc
enter
xchg
icebp
inc
ret
push
add
test
mov
push
mov
or
loope
repz
cmp
push
cmpsb
mov
bound
push
add
sbb
jo
jo
negl
shr
lods
jmp
cmc
loopne
cli
sbbl
out
outsb
pop
xchg
xchg
push
xor
imul
push
mov
xchg
sbb
or
fisubrl
jns
jecxz
or
adc
mov
xchg
and
aad
pop
cmp
mov
mov
jns
mov
or
sub
cmpsb
mov
iret
fdivr
out
mov
mov
jno
stos
mov
xchg
int
adc
fdivs
push
cmp
fisubs
pop
add
mov
leave
jo
ret
xchg
cwtl
and
scas
and
xor
jne
xchg
xchg
adc
movsb
inc
mov
dec
dec
clc
imul
jecxz
jns
jge
pop
push
or
int3
pushl
les
adc
sbb
sub
test
test
imul
enter
sub
addr16
cld
dec
aaa
xor
push
in
mov
push
add
xchg
cld
stc
rorl
jg
pop
and
lock
cmpl
test
ret
adc
or
xchg
cltd
jmp
outsb
aas
push
iret
jbe
and
mov
dec
xchg
js
sar
sbb
inc
shrb
mul
jnp
or
into
sbb
outsl
inc
shll
dec
into
jmp
inc
hlt
push
add
das
les
xor
mov
push
iret
js
sub
mov
lea
sbb
sahf
inc
mov
outsb
pop
lret
or
push
std
mov
sbb
mov
and
addr16
mov
pushl
subl
add
mov
xor
jne
fstpl
dec
nop
add
cmp
jmp
inc
rcrb
xchg
fimuls
inc
lea
inc
fucom
sub
push
cmp
nop
xor
sub
std
imul
cmpsl
movsl
hlt
ss
mov
sahf
out
or
cmpsb
jp
add
sub
cs
gs
cwtl
mov
xor
xchg
flds
add
inc
sub
cwtl
aam
push
sbb
mov
mov
ret
lods
cli
test
ljmp
rolb
icebp
ja
or
xor
subl
and
pop
pop
push
pop
mov
push
jge
shl
mov
or
ret
sahf
scas
out
sub
icebp
in
pop
ret
icebp
and
decl
push
leave
stos
scas
clc
push
pop
add
push
test
pop
sub
or
pop
lods
xchg
mov
inc
cmp
out
cmp
xor
xor
ja
fnstenv
dec
cltd
pop
mov
in
mov
lock
inc
or
inc
data16
jecxz
cmp
clc
xor
add
inc
shr
jle
adc
imul
imul
mov
jmp
fwait
sbb
nop
imul
loop
xchg
andl
jmp
jno
jecxz
sti
stos
sub
int3
jmp
cmc
aas
mov
jl
add
pushf
adc
jb
jb
mov
mov
inc
push
inc
data16
and
sbb
comiss
pusha
and
sti
add
and
int3
push
stc
inc
dec
ret
movsb
js
dec
push
fdivrs
rclb
arpl
stc
inc
and
pop
aas
sbb
cld
xchg
sub
not
xchg
and
push
adc
xor
push
mov
jmp
xor
push
add
xor
sub
rorl
aaa
push
cmp
push
mov
sbb
jge
jl
loop
data16
mov
and
jg
cmp
clc
aam
adc
loopne
aam
push
sbb
subl
xor
xor
sub
outsl
daa
add
mov
out
inc
sar
xchg
aad
test
mov
bnd
or
pop
add
adc
clc
jg
jle
pop
imul
sub
cmp
cmp
jge
in
lret
cmpsl
pop
adc
loop
xchg
imull
dec
dec
js
mov
sti
jp
sbb
sahf
out
aam
scas
in
leave
mov
xlat
pop
enter
mov
nop
stos
inc
cmp
lock
jno
in
add
xor
mov
xlat
aas
sbb
inc
and
repnz
sti
aas
rcrb
push
mov
pop
or
aam
call
push
add
pop
inc
sub
shll
cmpsb
loop
cmp
iret
sbb
mov
es
outsb
shlb
sbb
adc
pop
call
dec
jb
dec
dec
sbb
jp
mov
les
loopne
daa
push
cmpsl
inc
lret
inc
and
sti
aas
popf
fdivl
das
inc
ret
rolb
mov
mov
stos
mov
shlb
pop
repnz
pop
aam
enter
jbe
movsb
jne
push
xor
gs
lock
or
outsb
andl
imul
and
hlt
xor
add
jmp
pusha
cltd
inc
pop
mov
outsl
mov
mov
call
gs
jo
mov
stos
cmp
xchg
dec
mov
cmpsl
inc
mov
push
ret
addb
je
adc
sub
icebp
dec
cmp
inc
push
jbe
and
cld
jmp
mov
sbb
xchg
rolb
hlt
jmp
in
gs
mov
mov
mov
cld
mov
xor
test
mov
mov
cmp
in
movsb
push
inc
daa
or
into
or
mov
out
es
je
imul
xchg
mov
lret
data16
mov
fsubl
pop
add
das
cmp
cltd
pushf
pop
ja
out
dec
jmp
adc
xchg
out
and
lods
xchg
leave
xor
mov
jb
cmp
stos
inc
ja
das
add
fildll
push
xchg
ss
jmp
or
or
hlt
loopne
mov
xor
sbb
ds
pop
movsb
push
xchg
adc
lods
mov
and
push
jmp
out
inc
mov
push
lret
aad
inc
push
les
movsb
add
and
popa
mov
xchg
data16
jge
cmp
jae
je
mov
ret
push
and
pop
xchg
clc
jmp
and
push
sub
mov
sub
dec
out
mov
jecxz
out
xor
test
cmc
add
sbb
xchg
movsl
xor
or
add
enter
add
shlb
mov
movsb
pop
cmpl
mov
ret
sbbb
pop
dec
push
add
xchg
cli
mov
lock
add
xchg
mov
stc
cltd
jns
outsb
leave
push
mov
jnp
jb
cmpsb
and
mov
and
lret
sbb
popa
push
jnp
bnd
sahf
les
mov
xchg
fldcw
in
clc
mov
adc
cmc
std
and
int
push
outsb
loope
lahf
daa
int3
push
je
xchg
sahf
nop
imul
lahf
aas
jl
lock
cmp
popa
xchg
push
push
mov
xchg
add
pushl
sub
jno
cwtl
fwait
test
lods
push
jg
dec
and
movsl
popf
add
fmull
clc
jle
je
mov
xor
stc
push
mov
cmpsl
pop
cmp
pop
pop
aam
mov
jle
cmp
mov
mov
mov
mull
xchg
pop
and
sbb
or
mov
and
push
inc
cmpsl
pop
mov
sub
mov
mov
call
xchg
adc
orb
push
sbb
pop
or
mov
stos
int3
add
pop
mov
push
adc
cmp
push
xor
sub
or
xchg
and
push
popf
sahf
and
inc
jae
sti
out
popl
iret
push
and
mov
add
and
mov
inc
addb
mov
std
xchg
dec
push
cmp
xor
or
std
fldl
add
mov
pop
imul
mov
mov
lods
outsl
mov
dec
push
pop
lret
mov
add
cmpsl
test
jns
pop
and
mov
aam
getsec
out
outsb
sub
inc
jae
test
or
je
jnp
pushf
adc
shll
mov
ss
pop
push
pop
jmp
lods
adc
jl
jle
pop
add
dec
out
sbb
push
xchg
mov
sbb
pop
jecxz
hlt
sbb
rcrl
sub
popl
lcall
js
push
xchg
clc
insl
ret
sbb
adc
aaa
sahf
fs
add
lods
pop
cmpsb
imul
sbb
cli
inc
xchg
push
and
scas
sbb
iret
pop
lock
mov
push
push
jmp
dec
mov
jo
movsb
mov
and
fistpll
push
xchg
dec
pop
cmpsb
imul
flds
into
fdiv
int
sub
mov
imul
jmp
mov
fnstsw
xchg
add
lret
and
mov
jae
sarl
sub
lret
out
jecxz
stc
mov
adc
les
lret
mov
repnz
shll
lahf
adc
push
lcall
mov
cmpsl
xor
adc
pop
ss
icebp
stos
fstpt
cmp
mov
pop
or
or
mov
and
mov
pop
mov
cmp
fisubs
out
fdivl
cmp
sahf
mov
xchg
daa
adc
iret
sbb
sahf
jns
stos
jbe
mov
in
out
inc
adc
shrl
add
fldl
pop
cmp
icebp
mov
xchg
xor
outsl
hlt
mov
aam
add
arpl
insl
mov
and
sbb
push
aad
fwait
mov
dec
imul
lods
aas
mov
rolb
cltd
cmp
sub
std
jnp
or
out
les
xor
push
aas
pop
jmp
mov
loopne
lods
mov
jno
scas
sarl
in
inc
and
adc
jns
mov
dec
lock
pop
pusha
cli
push
inc
mov
jge
add
lret
int
xchg
xchg
jne
mov
inc
in
loopne
xor
sbb
xor
outsb
dec
lcall
inc
jmp
sbb
test
addr16
pop
testl
cmp
mov
ds
or
jno
imul
xor
push
movsb
les
xchg
lret
hlt
jbe
mov
mov
pusha
jae
jl
testb
addr16
aaa
loop
push
imul
in
nop
shl
imul
push
cwtl
inc
in
inc
ja
and
in
mov
pop
mov
dec
loopne
ret
cwtl
add
sub
sbb
lods
pop
and
fucom
sub
cmp
mov
pop
lahf
sbb
xchg
test
imull
ljmp
das
fildll
fiaddl
js
cmp
mov
in
hlt
mov
loopne
cmp
pop
or
imul
fistps
scas
mov
fnstenv
test
in
test
jmp
mov
sarl
outsl
cmpsb
popf
fwait
enter
jle
inc
push
ret
add
dec
xchg
jp
icebp
pop
sbb
insl
add
cmp
dec
ja
or
lret
loop
push
mov
lahf
lret
lretw
xlat
ljmp
shll
mov
frndint
mov
cli
xor
add
das
adc
or
mov
lods
icebp
jl
pop
mov
aad
sub
pop
lds
test
fs
push
repz
in
pop
jle
cmpsl
push
xor
mov
lods
mov
adc
push
or
rcrl
dec
mov
push
jecxz
addr16
sarb
xorb
lcall
and
loop
push
shlb
cs
xor
and
subb
out
sub
add
shrl
movsb
in
mov
outsl
fsts
sbb
sub
xchg
popa
jmp
push
xchg
enter
pop
xchg
jo
aad
xchg
xchg
jecxz
int
mov
imul
push
cli
xchg
arpl
jno
xlat
into
cli
adc
out
jg
iret
jno
hlt
cmp
sbb
push
xchg
aaa
ds
pusha
lea
inc
jns
sub
or
jg
mov
and
pop
cld
sub
andl
jbe
xlat
in
jp
add
jl
mov
stc
or
ds
jecxz
loop
aaa
push
imul
test
xchg
data16
cld
jbe
sbb
imul
add
xor
xchg
sub
movsb
sub
or
add
jle
inc
je
rorl
hlt
das
jl
mov
imul
and
sahf
xchg
push
mov
lahf
mov
dec
out
jp
mov
add
in
mov
pop
mov
dec
scas
adc
movsb
and
xchg
movsl
mov
mov
enter
cmpsl
xchg
cmpsb
out
pusha
cltd
adc
mov
fisttpll
cmp
mov
dec
cs
mov
je
mov
jns
test
out
cmc
testl
push
dec
lcall
pop
sub
movsl
jbe
test
xchg
shlb
pop
lods
xchg
or
stos
push
pop
cmc
mov
pop
lret
dec
rcl
pusha
outsb
sbb
xor
dec
or
scas
cmp
lret
ljmp
xchg
pmaxub
gs
mov
xchg
mov
cmp
in
cmp
faddl
ja
mov
das
xchg
sarb
push
xchg
jle
cmp
aam
inc
push
mov
push
mov
and
add
jnp
adc
aaa
lret
sbb
mov
lret
sti
sbb
lock
sbb
xchg
and
xor
icebp
lea
into
or
test
dec
clc
xor
fisubs
jne
sbbl
mov
fistpll
dec
imul
mov
int3
push
or
scas
jnp
arpl
adc
jb
mov
ljmp
mov
adc
mov
aam
hlt
cmpsl
or
xor
cmp
jns
out
push
push
sbb
sub
ret
rclb
pop
stos
stos
inc
cmpsb
cltd
pop
das
es
nop
add
out
stos
jns
cmp
add
lahf
cltd
fwait
add
mov
add
adc
int3
inc
repz
aam
stc
add
mull
and
adc
clc
add
dec
divl
mov
xchg
cmp
cmp
sbb
mov
in
ret
cs
jmp
fmul
call
orl
mov
rclb
faddl
loop
jo
sub
inc
or
sub
popa
inc
jae
and
lret
lods
pusha
xor
inc
mov
mov
jg
out
shll
and
and
xor
invd
mov
fwait
jns
xor
push
push
push
lock
mov
xor
enter
cwtl
lock
repz
scas
mov
push
pop
in
bound
mov
push
scas
or
sbb
iret
dec
dec
pop
mov
sub
ret
jmp
xor
shll
imul
pop
push
enter
iret
pop
test
jno
out
pop
fbld
ret
mov
repz
jge
cmp
call
movsl
add
push
inc
push
fldenv
dec
sti
mov
mov
mulb
rcll
int3
jp
xchg
mov
addr16
popa
xor
lret
and
leave
mov
dec
bndldx
push
loop
push
push
cltd
mov
inc
movsl
scas
sub
les
or
xlat
add
lds
and
push
jnp
scas
lds
push
xor
xor
pop
xchg
rorb
add
pop
outsl
std
test
sub
add
xchg
add
mov
xlat
dec
in
cmc
inc
cmp
pop
push
mov
test
shr
mov
cmc
ret
int
testl
xorl
inc
dec
or
adc
pop
aad
fcoml
test
pop
test
pop
xchg
aaa
pop
inc
mov
dec
dec
pop
cs
add
in
push
cmpsb
xchg
arpl
sti
scas
neg
cmpb
jne
sub
dec
add
inc
sub
push
out
cmp
loope
out
sub
icebp
popf
outsl
pop
inc
popa
aad
aam
fsub
pop
mov
rcll
xor
movsb
fwait
lods
inc
aas
xor
hlt
adc
sbb
inc
cmp
jmp
icebp
lds
enter
push
popf
imul
adc
jmp
bound
pusha
fwait
xor
add
stos
adc
lods
ds
test
dec
xor
mov
push
inc
sarb
dec
dec
dec
mov
popf
xor
jo
aam
gs
fstps
mov
pop
and
popa
inc
xchg
rclw
pop
ljmp
out
mov
lret
rcll
mov
pop
mov
push
cmp
mov
and
in
adc
sbb
ret
stc
lea
or
cmc
and
xchg
jne
ja
cmpsl
sub
pop
jle
push
push
flds
rclb
loop
cmpsb
sahf
add
cmp
loope
mov
sub
inc
jecxz
sbb
es
hlt
and
hlt
pop
mov
xor
mov
lea
hlt
daa
stos
push
xorl
pop
mov
pop
inc
dec
or
inc
loope
push
adc
aaa
cmp
inc
xchg
pop
mov
std
repz
pop
jmp
pop
lret
dec
aad
das
adc
stc
jle
shrl
adcb
add
pop
lret
clc
xlat
mov
das
jne
cmpsb
inc
lcall
xor
lret
mov
xchg
mov
test
and
aad
ss
outsl
dec
int3
add
lcall
push
push
movsb
xchg
inc
add
jl
in
push
pop
or
pushf
mov
fimuls
jecxz
jge
cltd
and
ret
stos
sbb
jnp
or
mov
test
jecxz
cmp
in
iret
fcomps
jl
inc
and
aad
fcmovnu
jmp
jl
pop
ficompl
jmp
repnz
aad
fs
adc
andps
jno
pop
lahf
ss
test
push
das
add
mulb
mov
scas
mov
aad
mov
add
out
mov
sbb
inc
mov
push
pop
mov
lea
push
sbb
sub
aas
xchg
lahf
mov
push
inc
xor
daa
mov
mov
cmp
rorl
inc
push
lret
std
stos
mov
xor
adc
xchg
fwait
cli
test
adc
out
push
jle
shlb
mov
xor
popa
sbb
inc
sbb
mov
push
xorl
push
xchg
fs
popa
and
pushf
xlat
leave
ret
mov
adc
pop
ret
scas
pushf
lods
lcall
cmp
out
xchg
mov
insl
pop
dec
and
mov
aad
inc
fidivl
addr16
mov
xchg
dec
outsb
outsl
lock
inc
pop
dec
or
jg
dec
stos
cmc
xchg
aad
movsb
push
insl
xchg
mov
cmpsl
and
daa
mov
xchg
lock
daa
jge
mov
aaa
fdivl
ret
in
call
aad
je
inc
mov
aaa
test
pop
loope
push
jmp
jle
push
loop
adc
cwtl
or
je
mov
jae
and
lods
test
xor
insb
mov
pop
cmp
cmp
push
ret
clc
xor
or
mov
add
pop
fldenv
mov
out
mov
xor
subl
and
mov
movsl
add
imulb
fwait
push
imul
jp
out
xlat
enter
mov
pushf
jl
loop
repnz
cmpsl
in
stos
push
sub
pop
adc
xor
int
pop
dec
ror
fidivrl
sub
movsl
adc
pusha
inc
and
repnz
repnz
loopne
fists
mov
push
movsl
cmp
push
mov
fwait
daa
into
jge
xor
fmull
sub
out
aaa
cmc
add
adc
jnp
cmpsb
jno
ljmp
mov
std
adc
cld
pop
outsl
call
add
or
lock
xchg
js
test
add
fs
movsl
imul
cmp
clc
jbe
xor
int3
pop
imul
mov
loope
mov
fwait
xchg
cli
int3
push
ss
rcll
or
jmp
mov
lods
mov
iret
push
push
hlt
sbbl
mov
ljmp
popf
push
les
inc
inc
pop
or
mov
mov
xchg
and
rcrl
icebp
pop
lcall
pushf
in
add
pop
pop
loopne
data16
ficoml
mov
pusha
or
and
lock
pop
fcmovnb
xlat
dec
test
cmpsl
cmp
in
jne
testl
cld
loope
cmc
mov
cld
es
push
push
fistl
cld
stc
test
adc
int
mov
and
sti
mov
xchg
or
dec
jo
jg
lods
rclb
xchg
jle
cmp
test
push
shlb
ficompl
pop
loope
movsl
shll
divl
push
ficompl
adc
dec
loop
or
mov
mov
xchg
jns
icebp
pusha
mov
dec
push
outsl
dec
es
loopne
jmp
sub
xor
fcoml
ret
adc
in
cli
and
pop
mov
xchg
cs
sbb
and
addr16
incb
fisttpl
mov
adc
into
or
lcallw
mov
dec
scas
icebp
add
and
arpl
int
faddl
scas
sub
outsb
lods
dec
xchg
mov
out
push
mov
fs
daa
rclb
jmp
add
and
shrl
ljmp
pusha
mov
loop
shlb
xchg
inc
xlat
insl
pop
test
mov
mov
add
les
mov
daa
pop
push
xchg
iret
pop
lods
sbb
ja
stos
dec
popf
add
jmp
or
pop
ds
mov
dec
push
sahf
call
push
jne
arpl
gs
inc
stos
sbb
dec
inc
das
ss
aas
ficoms
cltd
or
cli
mov
jg
xchg
fisubrs
es
in
add
mov
addl
push
jmp
lock
insl
out
les
into
outsb
orl
in
movsb
iret
inc
push
les
cmp
adc
shrb
lret
fs
in
mov
pop
nop
fs
fisttpl
add
jge
xorl
jp
and
dec
dec
lock
stc
jmp
add
adc
sub
jle
insb
daa
sub
jg
fsubr
arpl
mul
ret
sub
pop
mov
dec
mov
sub
xchg
xor
mov
cmp
das
cwtl
mov
sub
add
loop
and
jp
ja
or
xchg
mov
add
adc
jnp
sub
lods
mov
hlt
sub
movsb
cmp
mov
fs
pop
push
xor
dec
in
jnp
repz
adc
xchg
mov
xor
repnz
push
add
jg
xchg
xchg
repnz
jae
scas
cmpsl
pusha
daa
xor
mov
mov
jle
mov
xor
mov
scas
jle
jo
ret
int
ret
loopne
or
imul
shrb
adc
xor
xchg
testb
ret
imul
in
lods
jmp
test
mov
mov
lcall
mov
inc
dec
add
mov
fs
cmp
outsb
dec
fcomps
arpl
cmpsl
mov
dec
cmp
lahf
dec
or
mov
sbbb
jo
addr16
pop
lds
dec
add
mov
sbb
mov
test
inc
sbb
lock
test
add
or
mov
adc
out
cmpb
iret
mov
sbb
ss
cmp
out
mov
in
std
or
mov
imul
mov
or
daa
cwtl
in
lea
pop
xchg
jp
mov
mov
cmp
scas
pop
test
jl,pn
cltd
inc
and
testl
loop
cli
or
fiadds
push
jecxz
xchg
fisubs
ja
push
enter
mull
out
lods
pushf
aaa
leave
fldl
movsb
cmp
or
nop
ficoms
push
adc
push
or
rcll
push
jle
movsl
loopne
push
lahf
movd
ret
sbb
aas
ds
pop
cmp
xchg
ds
sub
cs
or
test
push
enter
dec
push
cmpsb
xchg
mov
push
push
or
cmp
aam
cmp
dec
mov
cltd
xor
mov
sbbl
lea
push
das
mov
adc
es
add
ss
sbb
clc
cmpsb
mov
mov
inc
ss
incb
fcmovnbe
pop
sub
jmp
push
mov
or
push
push
mov
loop
aad
stos
fnsave
mov
xor
inc
loop
jno
fcos
fistps
pop
push
sti
pop
jecxz
sti
inc
loop
mov
arpl
sbb
push
mov
mov
jle
push
xor
in
fisubl
jmp
sbb
push
dec
punpckhdq
bnd
aaa
int
fistps
in
push
gs
pop
std
and
add
cwtl
sbb
addr16
mov
movsb
mov
incb
xchg
pop
sbb
xchg
and
sbb
aam
fcoml
jnp
inc
stos
cwtl
sub
les
lret
sbb
dec
and
jns
dec
ljmp
xor
das
test
loop
inc
ret
xchg
fs
call
or
sub
push
lods
mov
cli
clc
out
cmp
je
jo
stos
or
jmp
pop
loop
push
dec
pop
out
inc
mulb
clc
aaa
mov
int3
dec
jae
shlb
int
jl
andb
std
rclb
cmp
aam
mov
inc
daa
push
mov
push
test
push
and
xor
lea
movsb
mov
dec
popf
pop
popa
mov
sbb
mov
lret
das
stc
fdivs
fimull
mov
mov
mov
jle
jo
xchg
xlat
mov
test
dec
int
xchg
mov
mov
add
loope
add
pop
lods
movsb
jge
mov
add
xchg
push
jmp
dec
ss
fisubrl
scas
pushf
sub
repz
lahf
or
in
mov
adc
popa
or
popa
lods
xchg
leave
push
push
fistpll
into
ja
leave
xchg
or
aas
sub
stos
fldenv
jno
sub
sub
ret
mov
test
stc
pushf
add
sub
rolb
jmp
mov
lahf
sar
sbb
sub
ficoml
in
xchg
hlt
scas
rolb
cltd
movsb
add
les
data16
jl
cmp
mov
xorl
repnz
rcll
xchg
je
out
sub
lcall
leave
pop
add
in
xchg
inc
adc
mov
pop
pusha
adc
cli
sbb
push
mov
ljmp
rcl
cwtl
pop
dec
push
push
pop
xor
aam
pop
cmpsl
push
bound
insl
test
mov
jo
xchg
sub
inc
das
inc
xor
adc
loope
shrl
add
bnd
mov
sarl
adc
ljmp
xchg
in
call
xchg
cmp
mov
hlt
stos
mov
loope
add
mov
aad
loop
xchg
push
push
das
pop
mov
dec
outsl
fs
mov
ds
push
test
jl
cmpsb
in
lds
ds
lea
js
sub
pop
add
enter
fdivs
adcl
test
popf
fcomp
js
jecxz
arpl
and
fdivl
cmp
add
loop
movsb
jle
out
sahf
pop
adc
mov
clc
shlb
and
xchg
in
lods
xchg
nop
jl
and
mov
sub
push
or
sbb
cmc
jns
jb
enter
add
out
sbb
inc
movhps
jne
sbb
sbb
jp
divb
mov
mov
sub
je
stos
xchg
xlat
outsb
cwtl
loopne
std
orl
or
push
lods
and
dec
sub
mov
arpl
inc
or
loop
cltd
or
dec
aaa
ficoms
mov
pushf
jb
test
inc
mov
push
ret
aam
pusha
mov
aam
cmp
pop
jnp
pushf
lea
add
and
sub
push
mov
int3
popf
imul
ret
and
adc
pop
push
add
lahf
mov
jnp
add
cmp
add
arpl
xor
jno
inc
ds
cmp
loope
jae
push
out
jb
cli
sub
xchg
iret
les
rorl
shll
push
shll
mov
aad
shlb
test
mov
jmp
fldt
daa
cmp
cld
ljmp
loopne
cmp
fildll
push
mov
test
mov
lods
jge
jae
cmp
rcr
lods
cmp
sub
xchg
mov
cs
jle
das
stos
or
movsb
xorl
xchg
lods
cs
sub
cltd
inc
sub
aaa
inc
pop
addl
addr16
jge
sbb
enter
enter
jno
test
rclb
loop
es
jne
mov
daa
icebp
xchg
dec
loop
mov
into
int3
and
lods
jae
cmpsl
mov
pop
cwtl
in
xorl
or
loopne
movsb
add
aam
and
push
lret
je
sbb
stc
fidivrs
dec
adc
dec
cmc
add
ret
insb
in
cs
or
adc
and
stos
inc
outsl
fwait
sub
mov
push
mov
rorl
pop
mov
gs
jbe
add
pop
cmpsl
push
pop
ds
stc
push
sub
stc
mov
and
jno
ds
cwtl
mov
push
arpl
in
mov
push
jle
dec
sub
pop
cmpsb
sub
out
rorb
rcrb
aam
jge
pushf
xchg
fsts
mov
push
jg
mov
mov
sbb
aam
push
mov
cltd
add
inc
cmp
jg
mov
movsl
or
test
stos
xor
fiaddl
mov
adc
popa
sbb
js
popa
sti
push
xor
cmp
inc
mov
aas
popf
pop
mov
lods
fwait
lods
rcrl
jmp
cmp
insb
and
popa
push
cmp
shll
iret
sub
push
sub
cld
aaa
cli
loope
jne
or
mov
inc
xlat
adc
fcomps
outsb
int3
pushf
faddl
imul
mov
lock
cld
jle
cmp
js
movsb
mov
push
jne
xor
insl
xor
adc
scas
imull
movsl
mov
out
adc
mov
test
cmp
sub
cmp
sub
xchg
notb
cltd
in
jbe
add
iret
and
cmp
push
cwtl
dec
cwtl
and
jae
sub
pusha
or
xchg
ljmp
pop
jno
sub
lods
scas
leavew
inc
hlt
mov
xor
adc
test
lahf
jle
push
cmpsb
in
adc
in
inc
push
xchg
rcll
std
mov
daa
add
test
insb
aas
cmp
mov
popa
mov
xor
mul
fcomip
dec
cmp
outsl
sbb
scas
jbe
and
ljmp
xchg
in
data16
data16
adc
andnps
cmp
push
lds
adc
jg
add
xor
push
ret
out
imull
mov
push
sub
pop
inc
sbb
addr16
mov
or
shll
sbb
test
pop
outsb
lods
jmp
hlt
loop
mov
mov
dec
mov
repz
arpl
sahf
fisubrs
xchg
mov
jno
aam
rcll
cwtl
inc
push
ret
mov
mov
mov
mov
ficomps
push
lcall
and
pop
inc
and
incl
sbb
fs
es
mov
inc
idivl
stos
adc
jecxz
bound
add
out
jne
mov
mov
sub
jmp
xchg
out
xchg
sub
loopne
addl
cwtl
push
xchg
aas
out
adc
dec
xchg
test
or
xor
stos
test
dec
adc
rorl
std
push
cmp
icebp
mov
dec
sub
bound
repz
cmp
mov
push
sbb
cltd
xlat
xchg
or
xor
jg
imul
imul
les
or
cld
jo
in
in
fcmovne
les
jb
cmpsl
jo
and
pause
icebp
adc
lret
in
subb
ja
xchg
mulb
js
pop
mov
fdivrl
push
rorl
add
loop
out
dec
xor
cli
nop
jno
cmp
setbe
loopne
cs
mov
aaa
and
push
mov
xchg
ds
pop
jcxz
clc
xor
push
push
mov
jl
adc
test
mov
sbb
or
out
aam
sbb
jecxz
mov
cmp
mov
and
xor
adc
ret
jle
or
cmp
movsb
xchg
sub
mov
enter
sbb
xchg
stc
enter
push
inc
jbe
fisttps
add
fsubr
fistpl
push
mov
pop
xchg
scas
sbb
and
cmp
cmp
cmp
mov
test
xor
stc
aas
add
ret
add
mov
in
push
ret
xor
inc
out
pusha
and
push
fimull
add
filds
jecxz
fcoms
orl
cmp
push
xchg
mov
jecxz
add
aas
adc
in
incl
sbb
pushw
ficoms
scas
addb
pop
sub
push
mov
dec
push
jne
cld
cld
aas
dec
je
or
rcrl
mov
leave
push
adc
xor
jo
addl
movl
int
or
push
dec
sbb
pushf
ret
mov
leave
int
pop
addr16
push
imul
lret
xchg
das
sbb
pop
popa
and
loope
pop
or
les
bound
jno
xchg
cmp
pop
ljmp
test
addr16
fucomp
or
mov
das
rorb
xor
adc
scas
jl
jg
mov
into
jmp
inc
jo
into
mov
adc
stc
test
and
and
pushf
out
xchg
xchg
idivl
cmp
stos
sbb
call
sbb
int3
sbb
mov
insb
js
adc
shlb
stc
shrl
aaa
add
cmp
and
test
insl
pop
loop
push
repnz
adc
cmp
lret
orb
cmc
lods
lds
es
movsl
lods
lds
addb
outsl
sub
movsl
incl
ja
dec
jno
or
daa
cmp
mov
faddl
shll
ss
imul
xchg
gs
rcrb
cmp
xor
subl
notl
sbb
dec
loop
nop
cmp
rorl
mov
fbld
jbe
jae
pop
jecxz
scas
add
jno
rorb
or
mov
es
pop
sub
xlat
mov
icebp
dec
xchg
cs
aam
push
mov
outsl
aas
repz
and
push
rorl
stc
jp
jnp
mov
inc
xchg
xlat
aas
sbb
push
imul
shll
adc
push
les
ja
jno
std
hlt
or
jge
repz
je
arpl
jp,pn
scas
push
push
mov
ja
push
repnz
dec
scas
lret
push
mov
mov
sbb
shrb
mov
mov
pop
cmc
and
lea
inc
es
sahf
mov
add
lods
aad
jbe
cwtl
aaa
and
mov
mov
into
out
mov
movsl
push
pusha
xor
add
test
pushf
mov
dec
cli
sbb
fcmovbe
vdivpd
cltd
jle
mov
mov
sub
dec
jne
add
jns
push
cld
out
loopne
aas
mov
popf
pop
lahf
jmp
outsl
rcl
push
ret
sub
fistps
clc
lcall
mov
sub
push
and
sti
cmpsl
cld
add
mov
out
jmp
mov
scas
jns
push
js
cs
xlat
lcall
std
sti
pusha
sbb
jge
ljmp
ja
cmpsl
mov
fnsave
popa
in
mov
push
push
cld
push
mov
lret
adc
lods
adc
adc
andb
mov
pop
mov
push
add
adc
inc
sbb
lahf
dec
push
addr16
xor
scas
leave
dec
inc
jno
hlt
rol
mov
lods
sbb
mov
lret
sub
push
jmp
jp
repz
stos
sub
cmp
pop
cmp
test
xchg
fisubrs
jb
cmpl
or
fwait
adc
imul
pop
jo
adc
sub
fmul
lea
push
mov
mov
imull
mov
xchg
fwait
imul
jae
dec
leave
lret
mov
mov
mov
bound
mov
int3
xor
lcall
insb
dec
pop
sbbb
cmp
add
xlat
insl
rcl
pop
movsl
adc
mov
or
scas
mov
sbb
push
shrl
pop
jge
hlt
sub
jg
push
xchg
insl
xchg
data16
fadds
loope
adc
push
dec
cmpsl
insb
in
mov
out
mov
xor
pop
loopne
sbb
ret
jbe
inc
imul
inc
loop
popa
insl
fs
or
cwtl
iret
lahf
cltd
lret
dec
imul
loop
jbe
fbstp
inc
add
jmp
push
js
gs
cmp
jmp
movsl
or
xchg
leave
es
clc
cmp
push
inc
mov
es
or
xor
int
test
adc
es
pushf
xchg
aad
adc
mov
outsb
fnstsw
adc
jle
push
jnp
lea
sub
ljmp
or
loope
cs
iret
enter
push
ja
jl
push
cmpsl
xchg
inc
dec
into
fucomip
inc
mov
out
ja
xor
xchg
cmp
push
xchg
dec
xchg
in
and
jno
add
lret
xchg
lea
stos
sahf
movsb
in
and
push
push
jg
das
mov
mov
sbb
out
lods
adc
pop
cwtl
xor
xorl
movb
inc
filds
mov
dec
jo
test
push
xchg
xor
ja
mov
mov
icebp
adc
ror
jnp
jne
sbb
das
add
test
fldt
lods
in
mov
ret
sbb
add
inc
in
xlat
pop
sbb
and
jle
std
cmpsb
mov
add
push
pushf
sbb
sbb
jne
fdivrs
sub
scas
mov
and
push
cwtl
add
scas
add
xchg
outsb
ss
std
jbe
jo
inc
pop
mov
push
adc
cmp
sub
out
push
in
or
and
cltd
jo
push
jb
adc
sbb
pop
jne
jge
ja,pn
cmp
xor
adc
xor
mov
cvttps2pi
icebp
sarb
fdivp
mov
dec
fidivrs
outsb
mov
in
jg
and
test
jge
mov
aaa
pop
int3
push
cmp
add
pop
push
and
adc
lods
gs
popf
shlb
mov
pop
xor
psubd
test
push
dec
inc
shrl
aaa
hlt
inc
cmp
in
out
cli
mov
lret
sti
or
sti
mov
pop
xlat
les
mov
pop
imul
pop
das
in
loope
sub
stos
push
ds
arpl
cli
lcall
push
mov
mov
mov
outsl
mov
mov
push
daa
xchg
add
ds
sub
mulb
popf
loope
push
les
mov
testb
into
cli
jecxz
subb
jnp
pop
in
add
and
subb
mov
sarl
xor
push
xchg
lret
mov
arpl
cli
ret
dec
jb
xor
iret
add
cmp
aam
jle
inc
inc
pop
fnstcw
sbb
mov
flds
mov
gs
adc
mov
and
loopne
les
pop
mov
inc
push
pop
ror
sti
mov
cmp
pop
imul
pop
mov
mov
adc
ds
imul
loop
scas
pop
jo
mov
add
or
jo
popf
or
sub
lret
jnp
fidivrl
push
int
pop
out
outsl
ljmp
rcr
xchg
xchg
cltd
cmp
jecxz
mov
inc
aaa
sti
aad
adc
lahf
fnstcw
adc
in
cld
adc
les
in
inc
iret
mov
mov
lods
ds
iret
test
out
ret
lock
jno
orl
sub
adc
mov
cwtl
mov
sbb
dec
aaa
push
mov
gs
or
inc
out
repnz
xchg
inc
push
pop
repnz
fs
or
pop
push
inc
sbb
nop
inc
mov
stc
rolb
pushl
fdiv
and
xchg
jne
adc
cmove
mov
sbb
cmc
pop
mov
addr16
arpl
mov
cmp
xor
shl
outsb
sbb
mov
and
push
and
test
sti
cmpsb
xchg
xor
nop
cmp
into
stc
sbb
sub
mov
xchg
xor
mov
testb
inc
add
call
xchg
aas
or
lcall
mov
scas
adc
and
mov
jo
fdivp
adc
leave
and
jae
mov
inc
pop
stc
mov
fs
push
push
subl
loop
outsl
gs
xor
jp
rcl
sbb
ss
sarl
lcall
in
adc
divb
das
push
jmp
jp
pop
inc
ljmp
push
iret
pop
xchg
dec
xor
and
pop
pop
in
jns
repz
dec
jnp
in
rorb
push
xchg
call
jbe
adc
dec
fwait
mov
stos
push
fidivrs
mov
mov
xor
mov
mov
insb
dec
push
adc
sub
pop
sar
sub
xor
lock
std
jne
dec
cmp
cwtl
cmpsl
setb
fs
lds
mov
lahf
sub
sub
xchg
xorl
lret
mov
imull
outsb
test
push
enter
out
stos
jb
andl
sbb
loope
cmp
sub
push
aad
xchg
mov
lock
push
pusha
jne
or
mov
leave
pop
jmp
mov
push
mov
ss
cld
mov
dec
out
jecxz
xchg
lcall
mov
mov
loop
add
es
repz
mov
cmc
clc
mov
inc
in
fnstsw
cltd
mov
ljmp
mov
xor
loope
sub
sub
lock
call
lods
into
jne
movsl
nop
movsb
fs
mov
mov
push
mov
sbb
rclb
push
push
xchg
cwtl
and
xchg
sti
or
cld
push
xchg
inc
lods
or
cmpsl
push
adc
push
lahf
mov
adc
test
in
cmp
cmp
outsl
xor
add
jmp
pop
out
xor
add
ja
jle
push
add
movsl
out
mov
les
shll
push
jecxz
bound
stos
cmp
push
push
mov
ret
scas
cmpsl
and
or
aam
repz
xchg
cmpl
and
les
cmc
fstp
loopne
repz
lret
pusha
pop
lret
fmul
iret
lret
inc
mov
gs
mov
pop
and
mov
je
lock
xor
mov
sahf
jmp
add
sub
sub
lahf
test
daa
fistpll
enter
shlb
pop
ret
add
jge
add
xchg
js
jnp
divb
mov
dec
and
mov
shl
das
fldenv
dec
inc
stos
notl
dec
hlt
pop
add
inc
les
jecxz
xor
push
cli
push
scas
pop
in
clc
lcall
cmp
les
jp
xor
adc
ret
xchg
rcrl
ss
in
fs
ss
mov
jno
imul
outsb
inc
dec
xchg
cmp
insl
xor
je
mov
iret
gs
int3
fstl
and
fnstenv
dec
push
loope
out
inc
xor
cmp
outsb
xchg
loopne
xor
lock
or
mov
int3
push
mov
xor
popf
pop
out
out
fdivr
xor
jo
das
and
out
cmp
je
ret
sbb
mov
dec
jp
lea
stos
mov
fwait
in
pop
sub
xor
cmp
pushf
inc
aad
int3
gs
push
pop
aas
or
lds
movsl
and
repnz
out
inc
mov
push
mov
stos
fisttpl
pushf
mov
ja
outsb
cwtl
mov
je
leave
xor
mov
je
mov
push
inc
adc
adc
ret
sub
jp
adc
adc
mov
sti
data16
and
jmp
cmpsb
movb
sbb
call
inc
mov
sti
out
cmp
sbbl
mov
lods
mov
mov
clc
mov
jl
insb
test
or
mov
cmpl
in
jge
bnd
ret
dec
mov
mov
in
inc
mov
mov
xlat
push
outsb
mov
sbb
jo
lret
ror
dec
inc
dec
jmp
cwtl
mov
mov
xchg
mov
sti
mov
cmp
or
idivb
dec
sub
clc
ja
mov
movsb
jnp
xchg
mov
sbb
xor
imul
push
dec
mov
sbb
push
rcrb
jb
adc
nop
scas
aaa
push
mov
lods
inc
imul
mov
lods
sbb
push
ds
mov
test
sbb
mov
and
dec
fisubl
and
sub
ss
mov
enter
inc
sub
ret
ret
add
daa
or
js
std
mov
xchg
push
sub
fisubrl
das
pop
add
ffree
pop
repnz
cltd
iret
jp
and
jmp
aad
imulb
cmpsl
pop
jle
jmp
imull
push
inc
push
push
fmull
or
pushf
fbld
cmp
aas
adc
inc
lock
jmp
addl
arpl
xor
fwait
ret
in
mov
jb
daa
mov
adc
popf
out
in
or
inc
xchg
stc
sbb
add
mov
xor
xor
xor
and
js
mov
out
add
inc
add
mov
xchg
test
mov
or
stos
mov
cmp
sarb
mov
imul
cmpsl
lock
int3
xchg
pop
mov
test
fidivrs
and
icebp
dec
sub
adc
cmp
cmp
or
mov
inc
imul
imul
xor
sbb
sub
jle
add
adc
pop
push
jg
jge
enter
push
shrb
insl
pop
mov
cmp
test
cld
sbb
lds
push
push
cmp
loope
lods
cmp
mov
test
rcr
adc
jp
inc
ret
jmp
or
add
das
jno
sub
popf
adc
int
jo
outsl
in
xor
ret
adc
aam
pushw
xor
aaa
mov
pop
sgdtl
fisttpl
cmp
xchg
int
in
sbb
sub
sub
push
lock
push
lahf
mov
and
ret
adc
arpl
add
test
mov
or
dec
sub
adc
inc
and
adc
mov
and
mov
lret
jbe
xor
and
jg
call
and
cmp
mov
or
into
pop
cmc
sti
in
movsb
mov
sbb
outsb
inc
jmp
aaa
sub
adc
sub
pop
mov
rdpmc
push
lods
xor
movsl
movb
mov
stos
sub
or
addr16
mov
les
into
pop
lds
jmp
imul
loopne
or
xchg
push
xchg
jg
sar
fs
call
or
sti
pushf
cmc
popf
and
add
daa
xchg
jp
fcmovnbe
insl
add
mov
push
fistps
andb
adc
test
and
add
mov
mov
psubsw
notl
jp
jno
cmp
xchg
lret
mov
adcl
shll
push
int3
inc
pop
insb
mov
mov
punpckldq
push
dec
sub
bound
out
je
lock
dec
icebp
add
sub
or
ret
xor
pop
dec
nop
pop
inc
cli
mov
mov
mov
dec
sub
lds
push
mov
dec
dec
cmp
sbb
sbb
push
and
imul
mov
icebp
shrb
stos
mov
adc
adc
jne
mov
cmp
ss
test
mov
movsl
sub
movsl
jmp
dec
gs
add
fldl
aas
xchg
ds
cmpsb
pop
xor
fwait
sub
push
das
pushf
lret
aaa
mov
lret
leave
xor
xchg
cli
stos
in
mov
insb
lret
ja
xchg
loope
pop
inc
movsb
pop
cmp
inc
mov
and
add
pusha
xchg
ret
pushf
or
inc
adc
ja
sub
xor
test
aam
js
sub
mov
fwait
popf
dec
pop
out
mov
call
jl
push
loopne
lret
add
add
xor
inc
cmp
adc
mov
xor
xchg
lahf
icebp
and
out
sub
insl
mov
mov
mov
aam
shr
pop
gs
mov
jmp
pop
mov
inc
xor
jb
dec
fisubrl
movsb
adc
push
and
outsl
into
loopne
shl
lea
cmpsb
cs
or
aas
sahf
sub
dec
call
mov
or
in
ja
pop
mov
pop
gs
mov
push
int
sbb
ret
cmp
int
dec
aad
adc
ret
ljmp
inc
pop
lock
out
pop
sub
and
bound
int
mov
scas
divl
add
lods
or
pop
jp
cltd
jnp
bound
sub
cmpsb
adc
lcall
mov
cmpsl
fldcw
in
adc
sbb
movsl
fldcw
dec
jecxz
add
jne
mov
jmp
xorl
and
int
shrd
push
adc
push
ret
movsb
add
fistpll
imul
jns
out
rorb
mov
out
fsub
sbb
int3
push
push
dec
adc
sbb
jge,pt
sub
xor
loope
cmc
jmp
ret
sbb
adc
pop
pop
roll
lea
ljmp
icebp
add
test
mov
inc
lock
push
adc
dec
mov
cwtl
lret
loope
shl
jle
and
std
pop
xchg
ja
aas
dec
pop
orb
and
jecxz
cmp
insl
xor
int
mov
push
mov
out
push
fistpll
sub
fbld
sbb
mov
dec
sub
stos
add
or
mov
pop
mov
add
ja
pop
inc
adcb
in
xor
aam
sub
enter
roll
shll
andl
pop
cmp
push
movsb
int
inc
jg
nop
jae
jmp
sbb
mov
and
adc
ja
test
inc
pop
mov
jnp
pop
jno
cmp
addl
jne
push
and
and
push
fldl
mov
les
sub
icebp
rorb
add
sbb
js
push
pushf
jmp
sub
inc
jle
clc
xlat
out
cmp
jns
fisubl
mov
shlb
jmp
xchg
mov
mov
repnz
out
or
in
pusha
popf
mov
xchg
inc
pop
out
jp
pop
xchg
nop
sbb
and
sub
test
std
fwait
in
mov
nop
jnp
loope
add
push
aaa
and
cs
fiadds
mov
mov
push
addl
or
push
out
add
shll
lea
lods
nop
fiaddl
jb
xchg
push
imul
inc
or
jno
call
sub
cli
pop
adc
mov
cli
cs
ljmp
sub
sahf
les
sarb
popa
sub
test
sbbb
mov
mov
cs
sub
mov
nop
stos
ret
cmp
pusha
cltd
or
mov
mov
pop
add
getsec
cmp
les
and
push
xor
out
push
aad
sub
sti
ja
push
or
cmpsl
inc
fidivl
in
mov
mov
rcrl
call
dec
push
testl
in
mov
aaa
aam
rcr
lods
loope
sbb
pop
pop
pop
repnz
mov
or
push
fucomip
rorb
inc
test
mov
in
hlt
adc
in
pop
iret
add
fs
aam
hlt
xor
nop
cwtl
xchg
adc
xchg
mov
push
lds
lret
cs
movsl
mov
push
lods
add
mov
testl
mov
push
mov
adc
or
jmp
xchg
xor
jno
and
aas
enter
das
cwtl
out
shl
mov
cmp
mov
int
mov
add
je
int3
add
mov
cmpsb
lods
into
aaa
and
cmp
mov
xchg
lea
outsl
jnp
and
gs
scas
hlt
jl
aad
mov
dec
fdiv
xchg
call
push
pop
mov
popf
push
in
mov
jb
cmc
cmp
mov
pop
jl
fisttpll
cltd
outsl
push
out
daa
pop
xchg
xchg
dec
stos
ljmp
fcoms
mov
pop
add
dec
sbb
cmp
adc
xchg
jns
mov
dec
pop
in
test
xchg
push
pop
jne
cmp
push
movb
hlt
xchg
fldcw
xor
test
insl
hlt
js
inc
ret
pop
inc
fsubrl
xchg
icebp
add
fstpl
and
xor
xor
jb
in
cli
lds
push
xchg
scas
aam
sti
icebp
xor
movsb
dec
je
cmc
adc
mov
mov
nop
out
cmp
sub
and
xor
xchg
xchg
xor
lret
scas
mov
mov
lods
ret
fs
sub
enter
loop
jge
pop
jge
push
or
dec
dec
sub
sub
bound
leave
lcall
inc
js
inc
scas
xor
xor
mov
std
in
loop
jg
arpl
iret
incl
mov
cmc
sub
stc
icebp
xchg
jbe
pop
int3
jo
mov
fsubrl
lea
out
pusha
xchg
repnz
test
mov
cwtl
aas
push
rorl
add
inc
dec
std
dec
jbe
scas
int3
xchg
inc
loope
push
nop
loopne
sub
inc
repnz
sub
aam
jmp
mov
xor
sbb
bound
outsb
dec
fwait
add
orl
add
push
sahf
aam
add
in
cli
out
outsb
and
mov
call
mov
in
cmpl
sub
out
add
in
aas
push
push
jl
dec
xor
sub
add
push
dec
aaa
mov
xchg
in
xchg
loop
fwait
test
stc
mov
inc
cli
or
cmp
ss
ret
jle
cmp
pop
or
arpl
mov
or
shll
insl
pop
or
repz
leave
mov
into
mov
sbb
jne
and
sub
fcomps
fnsave
add
adc
call
mov
mov
gs
sub
pop
mov
mov
daa
pop
xor
and
push
in
pop
jl
dec
cwtl
sbb
arpl
dec
pop
inc
push
xchg
mov
add
test
sbb
sub
out
out
jg
jmp
and
cwtl
repz
sbb
sbb
arpl
enter
push
pusha
or
dec
mov
jo
lahf
inc
imul
or
sub
and
pusha
mov
mov
pop
ss
repz
stc
mov
mov
sti
cmpsl
mov
lret
or
mov
mov
lret
in
nop
or
fiadds
mov
cmp
iret
mov
test
mov
push
test
xorb
into
sub
lahf
jle
push
outsl
popf
mov
shl
scas
xchg
ljmp
je
imul
dec
repz
jecxz
xor
stos
mov
pop
sbbl
repz
add
sub
dec
cmp
dec
outsb
sub
out
sbb
imul
call
aas
add
cwtl
pop
mov
cmc
roll
test
aam
jecxz
mov
sti
into
push
jns
adcl
in
out
idivb
or
lret
and
repnz
call
loopne
pop
sbb
mov
sub
insb
addr16
aam
cmc
cmc
rcll
filds
addr16
ret
inc
jbe
mov
xchg
flds
jbe
jmp
ret
jmp
into
ljmp
inc
ja
movsl
insb
insl
stc
in
mov
sub
lahf
jge
pop
scas
mov
ret
imul
shll
jmp
xchg
jp
imul
jecxz
push
fwait
xorb
scas
push
mov
mov
jg
jmp
and
xor
bound
or
enter
frstor
movsl
adc
xchg
mov
xor
and
loopne
adc
addr16
fildll
pop
insb
fdivs
push
cmp
inc
in
stc
lret
and
mov
je
orl
movsb
jp
cli
orb
cmpl
lret
jnp
repnz
lret
cli
iret
inc
and
xor
orb
pop
mov
mov
call
fisttps
push
sbb
push
jae
aaa
inc
ds
pusha
jne
sbbb
int3
mov
loopne
cmp
xlat
sub
ret
push
or
in
enter
add
lret
push
popa
lcall
mov
out
jae
popa
test
cmp
fcompl
xchg
push
cmpsb
sbb
scas
in
shrw
xchg
mov
cmp
rclb
lods
dec
repnz
sti
jae
xchg
leave
xorl
out
sbb
sarl
mov
pop
ret
repz
add
mov
add
xchg
mov
and
inc
and
adc
add
xlat
out
dec
movsb
rcrb
fidivrs
clc
jg
mov
pushf
push
cmp
or
pop
scas
or
in
ja
push
mov
pop
cli
in
cwtl
jge
sub
and
and
rcll
out
jg
sbb
push
flds
push
push
scas
xchg
stc
mov
or
pop
cmc
mov
dec
ret
add
and
and
lcall
cmc
cmp
mov
lock
es
jno
inc
and
inc
dec
xor
mov
pop
rclb
cwtl
xlat
pop
aas
jp
les
pop
movsl
add
mov
popf
dec
pop
inc
jp
inc
sarl
insl
sub
adc
jmp
js
push
mov
rcrb
cltd
pop
xorps
repnz
sahf
pop
sbbb
push
not
jno
nop
sub
cld
pop
pop
dec
fnstsw
in
mov
fsubrl
insl
lcall
pop
sub
lret
icebp
xor
jl
lahf
add
dec
in
inc
mov
and
xor
push
jbe
pop
scas
test
xchg
rol
cli
dec
xor
lcall
decl
push
pop
call
xor
fwait
popa
testl
andb
mov
sti
movsb
mov
xchg
push
and
inc
dec
test
testl
fmull
cmp
sub
test
fdivl
test
call
mov
mov
ret
stos
out
in
and
lea
cltd
push
in
pop
sbb
fxch
xchg
push
out
dec
mov
jle
inc
test
sbb
rcll
fdivrs
adc
aad
sahf
jge
lret
mov
sbb
cmp
jl
daa
and
andl
lcall
test
jle
jp
pop
sub
sbb
lea
add
dec
mov
mov
shl
dec
gs
test
out
mov
mov
call
jns
push
push
xchg
pop
sub
mov
imul
pop
dec
xor
cwtl
mov
pop
sbbl
or
and
out
ret
cmp
addr16
cmp
scas
scas
jl
in
cmp
lcall
int3
pop
in
int3
loopne
push
jp
adc
mov
and
inc
ja
imulb
ljmp
push
incl
icebp
sahf
jmp
ror
dec
push
imul
add
cli
out
out
stc
scas
xchg
test
call
lods
mov
daa
and
dec
dec
inc
aas
xchg
daa
pop
mov
orl
sbb
leave
mov
and
int
push
in
int
xchg
and
jnp
ss
nop
outsl
xchg
xchg
mov
mov
xchg
inc
daa
movsl
imul
and
rcl
loope
or
push
inc
test
pop
popa
inc
xlat
lds
orl
lods
add
fwait
jne
rcr
movsl
add
dec
push
lds
scas
out
adc
pop
sarb
ret
pushf
aam
cli
mov
xchg
cmc
pop
sub
iret
ljmp
jg
ret
je
fs
dec
adc
and
sub
inc
adc
clc
pop
lods
mov
leave
inc
dec
mov
mov
jne
jl
cmpsl
or
les
xchg
shll
jmpw
cmp
push
adc
int
lds
or
jge
push
in
dec
adc
push
popa
inc
mov
add
push
mov
in
jno
pop
and
jb
out
adc
jbe
shrl
shll
jbe
push
xchg
mov
imul
add
dec
cmp
xchg
dec
add
or
sbb
sub
mov
add
pop
lock
sti
pop
pushf
jp
or
dec
sbb
fsubrs
push
add
xor
fstl
push
mov
add
xchg
dec
notl
mov
int3
clc
push
loope
pop
sub
mov
movsl
hlt
push
add
lock
add
mov
sbb
and
shlb
sbb
jbe
xlat
xchg
push
in
stc
and
jg
in
addr16
lret
and
sbb
test
scas
sub
adc
mov
int3
out
xchg
adc
add
aam
xor
into
stos
push
pop
jmp
mov
dec
rcl
fs
or
pop
pusha
stc
fldt
dec
rcll
cmp
and
sbb
pusha
jmp
insl
out
rcll
sbb
bound
test
dec
dec
add
sbb
xchg
adc
push
mov
inc
jno
out
jg
daa
popf
and
fists
jbe
jbe
push
loope
add
dec
test
jne
aaa
std
sub
filds
sub
dec
popf
out
test
int
xor
and
dec
lds
pop
add
aas
pusha
adc
jecxz
jns
cmpsl
dec
insb
mov
aam
movsb
outsb
lcall
test
sub
insb
ja
push
imul
inc
mov
mov
mov
sbb
test
add
mov
test
add
outsb
repnz
dec
subb
mov
rorl
je
lea
mov
in
inc
test
sub
push
xor
shl
pop
lods
mov
xor
push
pop
adc
popf
push
inc
out
mov
xchg
je
push
xchg
add
into
push
les
add
scas
xor
clc
out
insl
and
repnz
jnp
ljmp
cld
jne
call
sbb
popf
fstps
movsl
push
lcall
lods
mov
int3
push
mov
mov
call
mov
inc
sti
jno
jae
or
rclb
stos
inc
lock
lcall
xchg
aad
mov
xor
movsl
add
stc
pop
add
out
cli
and
jnp
shl
xlat
arpl
xchg
lods
ljmp
outsl
pop
sbb
test
add
lahf
imul
pop
inc
and
pop
cmpsb
sahf
sahf
ret
insb
iret
push
in
hlt
xor
add
ja
mov
mov
add
inc
cmpsb
stos
ror
push
or
mov
jg
adc
adc
mov
jne
xchg
sub
fcomps
mov
sbb
popa
loope
push
cltd
cmc
aad
data16
push
lds
sti
dec
outsb
mov
cmp
lea
and
aad
lock
dec
aam
mov
mov
mov
and
je
dec
push
jmp
mov
mov
inc
rorb
mov
sub
movsl
lea
jg
pop
fisttpl
lcall
xchg
pop
mov
or
inc
fnstsw
jg
in
mov
mov
test
jp
fstl
mov
inc
cmp
sbb
push
add
stos
aam
push
add
xchg
insl
outsb
mov
das
call
inc
popa
pushf
add
jmp
ja
adc
pop
js
mov
enter
mov
inc
dec
xlat
sbb
pop
or
mov
or
test
jbe
and
cmp
mov
loopne
sbb
adc
pusha
cmp
movsl
add
call
loop
pop
fwait
adc
testl
test
sarl
out
cmpsb
or
sub
pop
push
cmp
scas
outsl
mov
dec
out
ss
imull
int
mov
pop
and
inc
popf
mov
cmp
fcompl
jns
pop
adc
inc
into
inc
data16
hlt
and
mov
xchg
mov
push
adc
xchg
sbb
test
xor
idivb
xor
fcompl
mov
cwtl
jbe
dec
js
sbb
adc
fwait
in
mov
out
leave
test
inc
popa
jp
xchg
adcb
pop
inc
cmp
push
or
outsb
push
ds
sub
jecxz
lahf
inc
icebp
or
push
pop
repnz
sbb
incb
mov
dec
cwtl
bound
push
adc
ljmp
add
or
dec
pop
xor
or
mov
out
push
sbb
push
jns
jb
mov
cli
sbb
testb
dec
sub
push
rorb
mov
in
inc
and
inc
in
out
jbe
dec
lcall
mov
and
xchg
push
je
add
mov
cmpsb
cmp
pusha
int3
scas
or
push
adc
test
loop
out
mov
push
push
rcll
dec
cmp
stc
subl
sub
imul
lahf
leave
js
xor
jnp
divl
xor
inc
xlat
stc
xchg
mov
add
fsts
mov
mov
jae
test
fstps
pop
in
rcl
loopne
push
lea
es
mov
pushf
fcompl
lahf
adc
mov
ret
incl
sbb
adcb
shl
out
in
push
or
sbb
out
mov
mov
mov
xchg
cld
dec
lret
add
mull
add
pop
adc
mov
mov
repz
shll
and
daa
lods
sub
jae
sbb
jl
mov
pop
dec
in
jnp
cli
cmp
or
sahf
std
mov
out
loopne
out
adc
or
sbb
adc
testb
xchg
in
mov
aaa
adc
repnz
sbb
sub
cmp
mov
jl
idiv
iret
pop
dec
xchg
sti
decb
dec
mov
jne
dec
scas
gs
or
mov
xchg
mov
push
rcrl
mov
pop
mov
je
adc
jle
adc
push
cmp
nop
mov
and
in
or
mov
push
xor
xchg
cs
xchg
dec
pop
pop
sub
jmp
xor
es
cmc
dec
dec
or
dec
cld
jle
imul
xchg
jg
jne
out
and
cmp
mov
pop
lea
cld
fsubrs
and
orl
sbb
lea
push
pop
adc
stc
imul
addb
int
roll
pop
sbb
jae
nop
pop
popa
xor
xor
sarl
insb
cmp
ds
je
shl
inc
xor
mov
xlat
xor
jo
inc
repnz
ret
jle
dec
mov
in
sarb
cmpsl
sub
push
shlb
outsb
xchg
into
scas
mov
icebp
pushf
dec
cmp
clc
stos
sbb
js
aad
test
sbb
mov
adc
mov
sub
or
leave
cmpsb
mov
fcmove
mov
xchg
sbb
xchg
jp
mov
cltd
or
cmp
cmp
sahf
mov
pop
push
dec
sbb
je
rolb
xor
cmp
or
movsb
fistpl
dec
and
inc
stos
mov
and
and
out
fwait
test
xlat
inc
mov
pop
clc
mov
mov
or
es
dec
xchg
cld
test
sbb
fstpl
xchg
enter
pop
mov
in
pushf
mov
add
xor
mov
jnp
add
test
jne
pop
out
xchg
into
jg
test
inc
mov
leave
pop
arpl
lret
testb
pop
aam
cmp
ds
pusha
pop
pop
jg
shr
stos
jnp
mov
or
in
aaa
cli
mov
cmp
insb
sub
or
sahf
stc
cmp
cmpsl
imul
ret
fs
test
mov
adc
in
add
mov
and
repnz
inc
sets
cmpsl
and
mov
scas
mov
in
jb
sub
mov
pop
data16
sub
mov
inc
fmuls
aad
adc
sub
js
pop
ljmp
sbbb
daa
push
mov
filds
subl
leave
sbb
inc
mov
insl
aad
add
lret
xchg
jmp
call
popa
add
in
or
das
pop
lret
adc
rcrl
aam
mov
adcl
rorb
or
xlat
imul
hlt
outsb
cmp
inc
sti
gs
out
xchg
pop
inc
cmp
inc
xor
decl
jno
sub
sbb
pop
pop
fwait
sar
push
inc
xlat
and
jb
popa
out
push
xchg
scas
or
jns
jo
mov
pop
sub
imul
fstps
shrb
push
bound
int3
sbb
push
fadd
push
pushf
fsubrl
icebp
mov
xchg
cli
dec
lock
inc
cmpsb
jnp
imul
dec
lahf
adc
iret
inc
xchg
nop
push
loopne
scas
icebp
popf
jp
jb
xor
lret
jge
xchg
add
jge
fdivrl
fistpll
mov
pop
fucom
hlt
inc
mov
icebp
mov
rcl
mov
mov
cmp
test
sbb
pop
cmp
inc
cmp
hlt
pop
cli
add
cmp
out
into
or
int3
pop
push
xchg
xchg
add
mov
jge
movsl
pop
sub
push
inc
adc
test
inc
mov
loopne
pusha
lret
mov
cmpsb
mov
test
add
adc
push
subb
mov
int3
stc
mov
addr16
stos
fsts
enter
shlb
sub
mov
nop
mov
enter
cli
out
aam
mov
out
xchg
cmp
shl
scas
push
or
and
push
mov
daa
cltd
mov
push
lret
mov
rorb
lret
mov
ds
test
cmp
popa
ljmp
out
mov
xor
scas
stos
lea
jg
sbb
xlat
bound
dec
cmpsl
pop
arpl
into
faddl
mov
jns
test
inc
leave
fisttpl
in
push
repnz
stos
fwait
loop
lahf
movsb
jno
xchg
xchg
rclb
enter
jnp
pop
or
repnz
lods
and
inc
inc
out
xor
insl
pop
adc
xchg
cs
repz
int
jle
fimuls
fwait
xchg
lcall
dec
mov
mov
jmp
mov
fmull
icebp
dec
lods
dec
gs
gs
dec
into
popf
adc
mov
xchg
sub
andb
test
push
push
cmp
xor
cmp
jp
lea
mov
or
dec
cmpsl
mov
xchg
xor
push
inc
add
dec
loop
dec
popf
mov
out
imul
enter
addb
test
ja
push
pusha
mov
mov
rorl
ret
call
jbe
cmp
push
push
xchg
or
pop
sub
or
sahf
and
or
enter
jmp
repnz
mov
test
or
dec
les
pop
outsb
fildl
jnp
iret
cwtl
test
mov
mov
mov
adc
roll
rcll
loopne
sub
xchg
sbb
xchg
cmp
jne
js
jnp
sub
mov
rclb
lods
cld
xchg
jmp
xchg
push
testl
movsb
pop
jmp
mov
testb
mov
fnstsw
in
and
pop
cmc
mov
mov
cltd
pop
cs
xchg
loopne
notl
inc
insb
and
inc
arpl
pushf
xchg
sti
mov
dec
aaa
lods
fucomip
scas
das
lahf
imul
fwait
pushf
add
hlt
and
cmp
and
adc
ds
daa
dec
je
xlat
cli
inc
mov
or
test
mov
xor
bound
xor
xchg
leave
dec
sbb
and
and
jge
mov
insb
pop
push
ds
js
out
pop
scas
pop
mov
push
nop
xor
imul
and
and
hlt
push
sbb
adc
call
ljmp
mov
insl
jp
adc
dec
inc
icebp
cld
push
and
test
inc
sti
jp
xchg
mov
mov
or
imul
push
inc
movsl
xchg
cmc
aad
mov
outsl
and
lret
je
jne
push
pop
pop
xchg
jg
sub
mov
out
xor
cmp
dec
test
ret
and
lock
xor
inc
or
mov
iret
into
xchg
insb
stc
push
filds
push
rcrl
js
pop
xchg
xchg
rcrl
les
push
or
sbbb
fisubrs
idivb
stos
lods
mov
mov
mov
cwtl
adc
out
add
mov
add
test
mov
or
out
test
adc
mov
sbb
out
out
popa
cmpps
push
into
adc
xor
bound
loopne
and
inc
cmpsb
inc
add
adc
stos
pop
hlt
inc
sub
lds
add
inc
xchg
leave
out
jnp
inc
and
rcrb
in
aam
mov
inc
fmulp
test
loope
or
rcr
xchg
test
outsl
fisubrs
lea
pop
pop
fidivrl
adc
icebp
mov
xchg
xor
addr16
push
sub
in
es
in
gs
inc
sbb
jb
rcrb
push
es
out
pop
pop
mov
popa
mov
push
scas
sbb
inc
ljmp
adc
movsb
adc
xchg
in
push
xor
pop
les
adc
stc
push
movsl
cs
or
jnp
xor
stos
mov
or
adc
xor
repz
test
in
cmp
imul
inc
cmp
inc
inc
jp
gs
sti
add
or
or
jl
cli
ds
cmpsb
lret
das
mov
pop
mov
ficomps
insb
leave
mov
mov
add
push
push
cmp
mov
fdivp
loopne
rorl
sub
sbb
mov
jns
mov
cmp
imul
fisubl
je
aas
movl
mov
jmp
mov
out
out
mov
xlat
daa
push
lock
imul
xor
xor
sbb
mov
scas
aaa
xor
ja
mov
sub
sub
mov
mov
fisttps
lret
adc
inc
sbb
lahf
push
bound
std
aas
sbb
fucomip
mov
pop
mov
push
pop
xor
adcl
xor
mov
mov
pop
xor
push
add
add
movsl
bound
cmp
enter
cli
scas
addr16
and
cli
cli
push
dec
push
jg
rcr
jmp
cmp
pop
fsubl
xorb
inc
mov
sub
test
cmp
jge
sahf
cmp
push
pop
xchg
decl
and
xchg
xchg
mov
xchg
push
outsb
jmp
dec
mov
scas
iret
or
icebp
pop
rcll
jo
cli
jecxz
and
in
faddl
pop
inc
sbb
mov
dec
xlat
clc
dec
xor
cltd
or
push
orl
push
or
jle
dec
shr
sahf
icebp
lock
jne
mov
inc
mov
push
xor
in
mov
xor
push
data16
popa
clc
xchg
xchg
xchg
dec
cmp
push
mov
xchg
mov
aad
mov
popa
mov
mov
xor
xchg
add
jecxz
lods
paddq
mov
in
sahf
loope
xchg
mov
lds
add
cld
xlat
repz
mov
faddp
out
je
scas
scas
inc
aad
sub
add
rolb
inc
jmp
inc
std
idiv
pop
cmp
jp
loope
mov
fnstenv
xchg
addl
push
lds
jo
add
mov
out
sub
orl
iret
push
jmp
xor
sub
inc
sub
test
ds
mov
sbb
dec
cmp
sbb
lret
std
insl
nop
push
sub
add
adc
inc
jmp
scas
jmp
in
pop
xor
jmp
or
notb
aam
cmc
dec
dec
dec
in
mov
call
bound
mov
or
daa
mov
in
ss
push
xchg
inc
in
and
cmc
cwtl
sbbb
enter
iret
push
xor
test
ja
ja
idiv
ds
in
mov
cmpsl
jae
cld
or
lret
xchg
fwait
adc
ss
mov
jmp
mov
pushf
fidivs
ror
pop
xchg
sub
add
cld
das
xor
mov
test
cmp
push
xchg
flds
jp
ja
test
and
test
dec
es
cmc
sub
or
or
sbb
mov
fidivs
xchg
dec
aam
mov
hlt
mov
ds
pop
pop
mov
cmpsl
cwtl
in
and
das
dec
orb
and
inc
dec
bound
push
int3
push
shlb
ss
push
xor
jg
nop
fisttpll
pop
or
adc
shll
dec
jmp
jmp
outsl
jbe
movsl
mov
rcll
jo
jns
ja
inc
push
mov
ja
xor
dec
mov
insb
jle
inc
xchg
mov
rolb
ret
mov
jns
mov
pop
xor
jb
imul
leave
mov
in
inc
test
cmp
cmpsl
fidivl
in
pop
and
mov
and
sub
pusha
out
test
jp
out
sbb
int3
aaa
mov
xchg
fistpl
xor
pop
fadds
insb
add
imul
mov
mov
je
jge
mov
pusha
rol
in
xor
out
pusha
and
push
push
lds
adc
lea
cld
std
adc
jmp
rcll
std
repnz
int
inc
jg
push
std
sub
mov
jbe
sbb
icebp
ljmp
jmp
adc
mov
je
xlat
in
ret
je
push
xchg
dec
push
mov
icebp
ss
cmp
or
sahf
cs
jns
and
es
stos
mov
out
hlt
mov
mov
mov
mov
and
sbb
add
ds
xchg
fs
adc
sbb
jnp
lea
dec
xchg
shll
inc
shll
cltd
bound
inc
cmp
dec
daa
mov
mov
pusha
shrl
cmp
pop
mov
cmp
xor
sub
mov
or
add
mov
test
cmp
mov
loopne
fidivrs
aaa
mov
mov
inc
lcall
add
pop
lock
adc
in
jmp
sub
pop
into
movsl
push
fisubs
and
mov
shl
jno
jo
sahf
push
shlb
ror
in
je
xchg
pop
add
xchg
stos
jge
sub
xchg
pop
test
sub
lock
je
into
dec
pop
pop
outsb
call
fsubl
fisubs
ss
push
in
filds
test
arpl
cmp
xor
lds
fistpl
mov
jns
pushf
mov
pop
loope
mov
fmul
cmp
pop
or
loop
aas
leave
cmp
dec
jg
inc
int
sbb
inc
pop
mov
testl
push
jne
sbb
imul
mov
das
or
jns
jle
mov
jmp
mov
xchg
jne
xchg
xchg
imul
das
loop
jo
push
mov
repz
xor
sbbl
das
jmp
cmpsb
jne
mov
sbb
add
imul
ja
and
arpl
mov
ret
adc
fcmovb
pop
bound
inc
xchg
ja
sub
inc
push
jmp
aam
je
ret
stos
in
inc
or
xor
iret
sbbb
add
jp
jl
ret
iret
sbb
mov
mov
pushl
cmp
sub
inc
repnz
xor
xchg
and
mov
and
mov
sbb
jo
stos
dec
jae
rolb
inc
cmp
lea
pop
cli
test
mov
lahf
test
lock
mov
mov
out
dec
jecxz
push
xchg
outsb
fcoml
dec
mov
jg
test
and
scas
icebp
repnz
mov
or
cmp
mov
daa
sub
and
mov
scas
rcll
pop
push
push
and
xor
mov
mov
leave
movsl
jae
bound
flds
out
fnstsw
mov
sbb
lock
outsb
packsswb
and
jg
push
sar
sub
push
cmpsb
pop
sub
push
js
stc
pop
lcall
mov
fadds
faddp
mov
cmpsl
and
adc
mov
mov
sbb
lds
jb
lods
inc
andb
and
cmp
repnz
bound
inc
push
adc
clc
imul
cmp
je
and
movsb
sbb
xchg
lods
sbb
jge
adc
cmp
icebp
movsb
mov
sbb
popa
add
pop
cmp
jae
and
xchg
jae
in
aad
sbb
sub
js
sbbl
inc
leave
xchg
cmp
lds
movsb
pop
pop
stos
js
call
je
out
dec
arpl
sbb
fcoml
jb
mov
pop
ficomps
shrl
inc
cmp
xor
xchg
mov
cmc
pushf
xchg
in
mov
xor
mov
lahf
test
fistps
sub
inc
mov
cmp
rcpps
ja
loopne
outsb
ficoms
cs
dec
lea
xchg
jmp
in
mov
lock
sub
mov
cmp
bound
bound
loop
xlat
sub
fsts
mov
and
pop
imul
or
stos
inc
aam
mov
jmp
mov
loopne
pushf
fldenv
jmp
cmpsb
das
outsl
mov
pop
add
cwtl
dec
adc
adc
mov
xchg
popl
or
cmp
arpl
mov
imulb
add
pop
pop
add
mov
xor
es
push
mov
nop
mov
xchg
dec
push
xor
inc
rclb
pop
ret
dec
jg
mov
sbb
or
jmp
call
in
bound
andb
repz
dec
enter
inc
sub
out
push
outsb
gs
adc
jbe
out
inc
imul
dec
ret
lret
loope
int
cmp
xchg
mov
jns
push
mov
negl
hlt
imul
or
and
imul
sbb
jp
out
aam
inc
call
outsb
in
push
cmpsl
pop
inc
add
push
mov
add
movsb
add
xor
popa
icebp
and
mov
jl
adc
daa
out
fidivl
mov
mov
or
adc
jmp
inc
xor
or
movsb
sbb
sub
add
jno
mov
push
sbb
popf
dec
mov
add
cld
sub
jp
mov
cmp
int
cwtl
das
test
pop
ljmp
add
fisubrl
jbe
shrb
sbbb
js
mov
iret
out
push
std
call
and
inc
or
cmp
inc
mov
xchg
pop
mov
inc
mov
rol
or
jl
lods
clc
xlat
or
cmp
push
mov
sbb
push
sub
mov
stos
xor
cmpb
push
fcmovnb
xchg
mov
fldt
jmp
out
xor
outsl
fcomip
fsubrs
rcl
dec
jae
rorb
jge
call
test
data16
push
push
inc
or
lret
mov
mov
rcrl
xor
inc
sub
pop
xor
icebp
lahf
loop
subl
cmc
aad
xor
ss
fiaddl
push
fs
pop
push
xlat
push
dec
fdivs
xchg
icebp
dec
in
lcall
adc
div
dec
mov
mov
cmp
push
sbb
jns
mov
scas
push
insl
sub
mov
shlb
lods
pushf
or
xchg
push
cltd
or
decl
iret
push
push
dec
jns
sub
mov
ja
test
pop
add
mov
jo
test
mov
mov
sbb
inc
push
sub
scas
inc
ret
push
ret
scas
je
jno
out
cmpsl
xor
enter
sub
or
or
cmpsb
shl
shrl
jbe
push
pop
repnz
jge
mov
sbb
or
sar
scas
push
aam
out
andb
mov
dec
outsl
daa
jbe
sbb
push
jbe
push
repz
dec
loopnew
loop
add
mov
stc
lods
and
and
pop
pop
scas
push
cmp
fisttpll
in
mov
jns
add
mov
das
and
and
push
insl
mov
ds
sub
icebp
xchg
lret
out
dec
insb
jo
pop
movsl
and
inc
adc
roll
xor
out
xor
and
fs
clc
pop
mov
movsb
mov
js
cwtl
jb
loop
repz
popa
arpl
and
mov
ja
jae
in
sarb
mov
inc
stos
shr
dec
rolb
mov
das
mov
int
add
xchg
lock
inc
pushf
rcll
into
cmpsb
aad
pushf
push
into
ljmp
xchg
fbstp
cmp
iret
add
mov
dec
mov
mov
pop
mov
dec
pop
push
jp
adc
int
xchg
mov
pop
es
arpl
jl
inc
mov
mov
push
out
repz
outsb
cwtl
lods
sti
mov
hlt
or
dec
sbb
shrl
xor
xor
mov
loopne
cs
gs
rorl
push
scas
dec
xchg
mov
mov
sub
and
mov
adc
adc
ja
mov
fcmovnu
pop
pop
sbb
ja
pop
fildl
inc
add
out
xor
xlat
fidivrl
outsb
bound
jns
ss
ret
pop
xor
xchg
pushf
pop
xchg
dec
xor
test
fadd
mov
adc
xchg
fistps
aas
std
jns
xor
push
push
adc
pushf
filds
pop
lock
or
mov
ja
testl
and
or
lea
add
or
mov
inc
scas
xchg
sub
mov
daa
jmp
mov
cmpsb
pop
test
repnz
sbbl
mov
pop
add
pop
add
insl
dec
dec
mov
sbb
and
mov
outsl
cmpsl
push
clc
mov
mov
lret
adc
aas
mov
out
adc
adcb
mov
shrl
and
stc
cltd
pusha
jmp
out
push
cli
movsl
xchg
sti
movsb
xor
push
push
adc
push
jne
adc
mov
daa
pop
pusha
fidivl
enter
bound
outsb
inc
xrelease
xor
sub
sti
ds
ret
mov
lds
cmc
pushf
mov
subb
ds
xchg
dec
cmpb
les
leave
dec
adc
fdiv
mov
xchg
ret
and
popa
sbb
pop
sahf
xchg
inc
repnz
push
adc
push
aas
xchg
ja
loope
adc
dec
push
test
fisubrl
pop
pop
flds
lret
test
je
add
and
sti
je
pop
lods
or
sub
mov
dec
add
jecxz
test
xchg
inc
pushf
push
jno
mov
pusha
call
push
push
adc
mov
gs
jbe
ret
pop
push
pop
arpl
xchg
enter
ret
sahf
pop
lret
adc
mov
rol
sub
repz
out
mov
fistpl
xchg
or
aas
pop
insb
inc
inc
adc
pop
repnz
das
cwtl
test
and
imul
xchg
cli
cmpsl
cs
call
ljmp
pop
clc
scas
movsl
popf
xor
inc
movsb
jne
and
mov
push
fsubrs
jne
mov
xchg
sbb
mov
jmp
sbb
or
pop
mov
shrl
test
nop
loopne
sbb
jbe
cmp
data16
mov
ret
sub
hlt
popf
pop
lds
hlt
xchg
or
or
lock
int3
or
sbb
inc
pop
inc
mov
push
push
je
loope
and
cwtl
xchg
je
mov
lds
fcomi
pop
dec
int
pushf
mov
pop
jno
pop
dec
icebp
cmp
out
push
xor
jae
jo
outsb
xor
xor
xor
pop
mov
ljmp
cmpsl
loop
mov
cltd
sarl
es
popf
lret
xchg
xchg
aam
repnz
ret
lea
lods
es
aam
mov
pop
movsl
fcoms
mov
int
lcall
cmp
xchg
mov
out
push
adc
add
jno
cmc
mov
inc
push
popa
push
shrb
arpl
cmc
js
pushl
inc
xor
fs
pusha
pushf
push
inc
std
in
xchg
xorb
adc
adc
fldcw
xchg
pop
push
adc
test
ret
dec
lock
cmp
add
sub
push
lods
push
xor
push
fbld
xchg
dec
jecxz
or
xchg
inc
sub
insb
cmp
dec
insb
in
mov
bound
and
xorl
ss
xchg
int3
mov
mov
int
pusha
or
negb
lahf
or
enter
lret
repnz
pop
pop
xor
nop
pop
divl
mov
and
in
adc
sub
adc
ror
push
scas
ljmp
test
or
cwtl
mov
data16
sbb
sbb
xor
mov
mov
scas
push
add
push
sub
jmp
sbb
or
jne
cmp
jge,pn
inc
fbld
sub
mov
lds
fistl
sbb
addr16
mov
and
sahf
or
jns
cmp
xor
daa
inc
jmp
jl
add
test
xor
pop
jecxz
outsl
lods
sbb
fistpll
out
pop
or
push
or
mov
or
movsb
jg
and
test
fs
loopne
int3
dec
adc
stos
jl
xor
popf
das
and
push
xor
inc
cs
call
dec
or
adc
jnp
dec
add
and
cmp
dec
movsl
std
ja
push
mov
ret
jle
test
aaa
insb
cwtl
push
jae
mov
cmp
mov
cmpsl
push
cmp
lret
sti
cmpsl
or
jge
pop
rolb
push
imul
scas
dec
sub
fimull
mov
inc
xchg
xchg
cmp
pop
cld
js
mov
mov
aaa
mov
xor
call
and
jmp
sbb
cs
gs
ds
mov
push
jp
xchg
fwait
sbb
and
sarl
iret
andb
in
add
add
stos
out
ficoms
adc
push
imul
push
cld
lret
fs
lods
sbb
mov
dec
test
jne
insl
mov
sbb
adc
add
jle
mov
fwait
addr16
popa
clc
ljmp
cmpsl
inc
dec
jecxz
fstps
arpl
int
mov
push
loopne
pop
dec
push
sti
test
mov
in
pop
negb
and
movsb
or
push
sbb
mov
xchg
mov
push
fildl
rcrl
cmpsb
inc
dec
xchg
jecxz
and
mov
push
jecxz
jl
push
lret
stos
sub
orl
es
push
fcom
adc
push
jo
xchg
incb
popa
testw
iret
and
aaa
sub
sub
push
jo
ss
dec
popa
test
mov
ds
xchg
sub
inc
gs
dec
lock
bnd
inc
testl
pushf
add
xor
or
stos
add
aam
mov
subl
mov
dec
clc
nop
pop
out
enter
lea
mov
cli
mov
add
cmpsb
mov
test
leave
sbb
mov
xchg
pusha
sub
cmpsl
loopne
sbb
push
or
xor
lds
aaa
mov
cmp
dec
gs
les
pop
inc
mov
mov
cmp
push
cwtl
mov
inc
mov
stos
jne
mov
sbb
add
mov
mov
xor
sub
daa
jb
icebp
adc
insb
cli
mov
sbb
stc
orb
sarl
in
xor
sub
fdivrs
pop
jnp
js
imul
out
sub
adc
xlat
push
addr16
dec
jp
xchg
pop
mov
fmuls
pushl
jnp
adc
sti
clc
mov
nop
mov
and
xor
add
pop
xor
pop
shr
or
fisttpll
jge
mov
lds
std
xchg
push
xchg
pop
push
in
inc
xchg
int
mov
sub
mov
jge
sub
xor
pop
inc
or
adc
jle
inc
add
adc
popa
mov
jmp
sub
push
imul
push
popf
ljmp
loopne
xlat
lds
aaa
inc
sbb
mull
movsb
aam
add
leave
daa
jl
jb
xchg
adc
pushl
ret
mov
or
ss
ja
dec
jne
scas
lods
lret
out
or
push
and
add
cmp
call
sbb
pop
fwait
les
push
xor
pop
adc
and
in
stos
inc
lds
and
fdivl
mov
test
std
adc
stos
push
ficompl
data16
loopne
mov
movups
and
mov
lahf
je
sub
cmp
xor
and
cmpsb
fiadds
add
lcall
add
and
dec
nop/reserved
pop
punpckhwd
sbb
dec
test
ret
dec
jmp
test
out
js
cmpsb
inc
dec
les
jmp
mov
mov
out
mov
rcrb
pop
xchg
cmpsb
arpl
jo
jmp
not
pop
sub
push
cs
cmp
ror
les
adc
int
xor
aam
iret
loope
xchg
fwait
call
push
cmpsb
pop
push
pop
xor
inc
pop
add
popa
xor
pop
push
les
dec
push
pop
push
int3
mov
xchg
or
add
xchg
add
lock
js
movsb
dec
mov
adc
imul
shl
dec
stos
ds
cmp
stc
jne
inc
jle
mov
out
jmp
rolb
aad
mov
adc
imul
popf
add
mov
ficoms
xchg
dec
insb
adc
pop
inc
mov
dec
push
test
adcb
ja
lahf
dec
pop
repz
insb
mov
mov
pop
aas
push
fistps
arpl
pop
fisttpl
mov
cmp
clc
in
xchg
sti
jno
mov
in
push
or
jg
std
out
or
add
cmpsl
stc
jl
and
fstpl
sub
shrb
in
inc
inc
mov
insb
xchg
xchg
pop
arpl
inc
or
dec
dec
std
jne
sbb
jbe
sbb
xchg
mov
jle
mov
aam
adc
hlt
sbb
cltd
leave
mov
jl
or
sbb
dec
mov
fsubp
cwtl
dec
loope
idiv
pop
bound
inc
add
sbbl
pop
mov
enter
shrb
neg
jbe
mov
es
jne
fwait
and
aad
mov
inc
jns
arpl
or
out
mov
jle
jmp
mov
sbb
sti
pop
xchg
pop
sbb
dec
cmp
loope
inc
addr16
mov
pop
cli
push
mov
mov
std
jns
sbb
stos
gs
push
pop
fwait
sub
mov
mov
outsl
sbb
lods
inc
push
sahf
inc
ret
mov
mov
push
shll
add
cld
push
lods
subb
in
mov
testb
mov
jecxz
xor
cmpsb
pop
int3
inc
das
mov
mov
in
jge
nop
sub
and
stc
imul
in
jmp
xor
and
cmp
push
push
pop
push
sbb
std
adcl
mov
movsb
jmp
sub
dec
std
pop
pusha
cmp
sbbl
mov
jb
cs
cltd
mull
outsb
lcall
or
jno
fwait
dec
dec
arpl
pop
dec
stos
sbb
mov
and
or
jg
push
add
ss
or
adc
sub
add
jge
frstpm(287
std
outsl
movsb
push
out
loopne
sub
pop
sahf
xchg
subl
aad
out
mov
mov
xor
cmp
add
inc
fldenv
adcb
jg
addl
dec
pop
fistpl
xchg
jge
sub
mov
out
int
sti
repnz
into
jl,pt
mul
pusha
clc
insl
out
ljmp
jecxz
add
sub
dec
or
cmp
sbbl
sub
in
shlb
xor
in
dec
mov
cmp
mov
jp
xchg
fistl
imul
mov
sbb
lret
and
mov
add
add
pop
mov
mov
shlb
daa
ret
mov
pop
jo
cmpsb
xlat
xor
stos
adc
bound
jne
leave
pop
or
push
inc
cmp
into
mov
negb
stos
jle
popa
add
cmp
lahf
cwtl
and
push
mov
test
mov
outsl
testb
rorb
dec
inc
adc
int3
add
dec
mov
xor
inc
pop
jnp
xor
push
cmc
mov
pop
outsb
out
xchg
imul
out
gs
filds
stos
testb
push
xor
lret
jle
mov
mov
test
push
jecxz
xchg
bnd
mov
inc
xor
fwait
dec
mov
add
movsl
mov
xor
lock
add
das
shll
pop
add
or
adc
ljmp
xor
pop
xor
push
mov
sub
aas
mov
repnz
out
inc
dec
cmpsb
push
push
subb
jmp
les
ficompl
xor
mov
mov
push
add
cmpsl
xor
cmc
pop
mov
mov
cmc
das
mov
add
or
ljmp
pop
fisubs
xor
mov
jns
outsb
jge
loopne
sti
dec
mov
dec
cld
lret
mov
pop
pop
push
testb
aas
ss
jg
sub
lret
repz
icebp
sbb
loop
cmp
jle
mov
leave
sub
inc
cld
fisubrs
data16
xchg
add
decb
push
jg
int3
or
cmp
es
ret
aam
fimull
pop
jbe
aaa
adc
out
mov
ss
add
cmp
add
rcr
xor
push
cmp
push
sbb
or
fcomi
mov
xor
cld
push
fldl2e
jo
outsl
bound
addl
dec
xchg
push
out
jecxz,pt
pop
aaa
mov
into
out
aad
lcall
sub
inc
mov
lds
dec
push
outsb
jle
imul
sub
or
fwait
inc
and
jle,pt
cmp
xchg
mov
dec
hlt
sub
xlat
sub
push
std
fbld
fdivl
and
pop
mov
mov
cmc
xor
jmp
sarb
dec
add
xor
dec
and
inc
jne
jp
jmp
sub
lret
xchg
ret
sbb
je
lcall
fbld
or
or
adc
push
push
nop
push
xor
or
xchg
add
xchg
or
out
inc
shlb
sbb
iret
jg
or
icebp
cmp
jl
sarl
mov
lods
mov
loopne
shlb
jae
or
shll
xor
fadds
test
push
bound
and
lret
sbbl
in
dec
and
cmp
pop
mov
shr
and
das
push
movsb
jbe
enter
or
cmp
addl
adc
pop
shl
jbe
xor
pop
orl
xchg
pop
cmp
xchg
push
ret
add
pop
xor
ds
sarb
mov
out
dec
in
xchg
out
xor
pop
xchg
icebp
call
cld
cmp
sub
lret
jg
clc
test
or
std
fstpl
or
mov
hlt
and
or
rcrb
scas
mov
mov
pop
lcall
dec
inc
lcall
leave
add
mov
rcrl
push
mov
test
lahf
cmp
aam
push
mov
jecxz
arpl
inc
sub
mov
rorl
push
cmp
ljmp
add
lock
dec
lret
rcrb
stos
pop
loop
sbb
xchg
roll
enter
push
or
sarl
das
aad
mov
pop
xchg
xchg
xchg
push
sub
insb
mov
push
sub
and
push
scas
or
int
dec
xor
pop
ja
jle
sbb
mov
push
repz
je
mov
cmp
jmp
xchg
out
jae
and
dec
push
jle
inc
pop
mov
in
popa
scas
stos
adc
test
pop
rclb
and
pop
divl
pop
orb
jne
push
adc
scas
mov
jmp
xchg
xor
jge
xlat
dec
mov
ret
fdivr
dec
xchg
icebp
xchg
pop
xor
jle
lret
adc
sbb
sub
inc
shrb
or
shrb
jb,pt
cmp
int
fsubr
xor
imul
fwait
dec
xchg
insb
pop
xchg
xchg
fildl
dec
xchg
jnp
jp
cmpsl
push
sub
add
arpl
movsl
xor
imul
or
sbb
mov
mov
mov
sub
div
and
fstpl
dec
sarb
push
sbb
jp
gs
pushl
sahf
sbb
leave
enter
xchg
push
mov
lods
mov
pop
divl
subb
adc
adc
jge
jno
in
mov
xchg
mov
hlt
mov
scas
adc
out
test
xchg
out
sahf
lea
and
jns
or
pop
cmp
push
pop
jle
cmc
mov
push
xchg
mov
mov
jmp
cs
or
mov
test
or
sar
loopne
mov
faddp
jl
gs
push
mov
sub
or
cmp
int
xchg
cmpsl
jb
mov
add
adc
and
dec
add
int
sti
mov
ljmp
and
das
je
xchg
dec
scas
jo
subl
in
push
les
add
lahf
daa
sub
xor
dec
and
push
test
xchg
je
outsl
mov
aas
imul
xlat
pop
adc
xor
cmp
xchg
or
xchg
sbb
test
push
pushf
mov
sarb
push
lret
and
psubd
cmpsl
insb
or
cmp
or
shr
int3
popf
dec
aam
popa
or
test
mov
nop
into
mov
cli
adc
adc
adc
ljmp
movsl
push
pop
cmp
fldenv
pop
loope
dec
aam
cmovbe
dec
orb
lcall
insb
add
jns
mov
mov
mov
pop
jmp
int
jmp
nop/reserved
adc
cmp
pop
sbb
lods
push
push
out
pop
loop
cld
cmp
imull
adc
mov
push
sar
jnp
mov
xlat
sarl
xor
fidivs
mov
mov
int
stos
push
cs
jo
inc
jno
cwtl
rcr
dec
loopne
dec
push
loopne
imull
pop
fdiv
adcb
inc
jmp
stc
aam
les
cli
in
xorb
sahf
lret
stos
sbb
and
dec
xchg
sbb
test
xor
push
cli
maxps
insb
aad
cmp
out
and
loope
fiaddl
mov
mov
mov
enter
fsubs
jae
push
pop
add
std
push
sbb
push
ret
stos
into
adc
call
pushf
adc
movsl
imul
and
lret
je
pop
inc
ljmp
adc
aam
dec
inc
push
aaa
mov
adc
rcrb
cmpsb
sub
das
cmp
xor
sbb
xchg
std
xorl
adc
pcmpeqb
and
xchg
daa
negb
jae
stc
xchg
or
xchg
push
mov
jg
cmpsb
test
and
cmpsb
inc
sbb
fdivrs
ss
out
std
dec
xor
and
push
cs
mov
xor
cmp
xchg
sub
push
outsl
mov
adc
sahf
jae
xchg
aad
xchg
xor
lds
xchg
pusha
or
sarl
fprem
stc
leave
lods
stos
fcoml
fsub
push
arpl
imul
or
cmpsl
lahf
mov
test
or
call
ss
jno
jl
xor
xorl
push
test
xlat
psrlq
insl
lods
aad
and
outsl
push
xor
jecxz
mov
enter
and
inc
bound
lret
sahf
shll
sub
fwait
popf
xchg
repnz
imul
jnp
push
xchg
jge
and
scas
imul
sbb
ds
movsb
inc
popf
cmp
inc
pop
xchg
jnp
mov
sbb
mov
xor
mov
out
inc
jo
jge
pop
and
movsl
lret
jecxz
jb
push
jo
mov
fimull
xchg
xchg
dec
push
adc
push
xchg
pop
add
or
sub
movb
mov
and
pop
repnz
xor
jne
mov
js
jl
sbb
fisttpl
sbb
sbb
jle
testb
add
mov
in
out
leave
push
testb
pop
xchg
out
fistl
jl
outsb
dec
cmp
jle
adc
dec
scas
adc
sbb
push
outsl
pop
cmp
lahf
or
sbb
ss
jge
fidivs
xlat
movsb
testl
adc
sub
mov
lret
sub
imul
lock
cmpb
sbb
sub
jbe
jle
rdpmc
push
cli
int3
mov
adc
dec
addr16
sbb
dec
jnp
mov
test
mov
inc
shll
inc
adcl
test
push
aam
and
sbb
ret
jp
fiadds
mov
js
mov
jae
or
gs
push
dec
stos
nop
call
mov
enter
pop
fwait
push
sub
mov
fiaddl
xor
data16
clc
adcl
cmp
cmp
in
adc
mov
push
inc
sbb
xchg
loop
or
and
bound
mov
mov
jne
pop
xchg
mov
je
shlb
scas
add
inc
hlt
and
aas
push
jmp
data16
dec
gs
adc
cmp
dec
dec
insl
jmp
dec
test
mov
enter
mov
bound
adc
incl
push
fistl
shl
lds
mov
push
fisubrl
and
xchg
or
mov
les
push
inc
leave
or
pop
jb
cmp
arpl
xor
dec
scas
add
push
xchg
and
sbb
sub
or
fucomp
dec
jo
hlt
gs
push
bound
cmpsb
push
je
ret
jmp
int3
cmp
dec
test
mov
flds
ficoms
icebp
cli
ffreep
xor
test
jmp
ret
test
in
pop
sbb
loope
push
mov
fs
js
ss
jb
xchg
out
loop
in
cmp
arpl
xchg
mov
je
mov
in
stos
stc
jmp
cmp
jp
jmp
out
add
fstpt
arpl
cmp
xchg
lods
inc
fs
jl
jl
cmc
mov
shl
fsts
push
andb
pusha
cmpsl
xchg
fidivs
ljmp
push
lods
add
vcvtsd2ss
xor
shlb
cmp
inc
xor
test
loope
mov
leave
push
dec
push
inc
dec
jo
jecxz
call
subl
hlt
pop
out
pop
cmpb
pop
or
push
lds
ret
std
push
insl
cltd
insb
stc
notb
mov
cmp
xchg
out
lds
pop
adc
in
cmpsb
mov
imul
xchg
cmp
xchg
and
sub
xchg
or
daa
pop
xchg
mov
ficoms
mov
mov
pop
jb
daa
enter
push
inc
mov
sub
hlt
bound
ljmp
gs
imul
push
pop
call
lret
fdivrl
sbb
daa
adc
cmp
mov
xor
frstor
loopne
into
pop
add
mov
aas
loope
jne
ss
inc
add
fisubrs
addl
addr16
sub
fstps
lea
insb
sbb
imul
loopne
mov
sub
and
and
sbb
pop
nop
mov
xchg
fmuls
aam
in
arpl
test
pop
mov
mov
lea
aas
push
sub
fiadds
les
jl
pop
inc
and
scas
jne
dec
ljmp
sti
cmp
popa
mov
xor
xlat
pop
xchg
mov
inc
dec
out
movsb
mov
lret
or
cmpsb
mov
int
mov
cmp
mov
xlat
je
cmpsb
sbb
test
pop
sub
mov
xchg
and
mov
push
and
push
repnz
popa
test
repz
mov
push
jns
stos
xchg
je
jle
sbb
mov
pop
mov
icebp
xor
cmp
out
jnp
jl
pop
mov
xor
fcmovu
leave
pop
rcll
test
repnz
cmp
cli
cmc
popa
push
jnp
and
dec
not
aas
adc
sub
add
pop
outsb
dec
scas
pop
in
mov
les
jg
or
adc
dec
inc
mov
hlt
sbb
jmp
in
jo
cmp
add
fldenv
mov
sbb
inc
xchg
pusha
mov
fs
add
mov
lret
xlat
rorl
jl
mov
and
int
cmp
sti
addb
sbb
pushf
call
push
fistpl
add
fidivrl
int
ficoms
les
dec
add
cmp
cmp
shr
scas
mov
test
dec
inc
push
pusha
divl
shll
add
xchg
cmp
loop
mov
xor
or
push
decb
xor
adc
jne
lcall
lods
lahf
in
xlat
push
sti
out
cmp
mov
loope
cmpsb
dec
lcall
dec
fwait
dec
mov
ret
dec
scas
xchg
sbb
movsb
and
mov
test
or
sub
fstl
cmp
nop
aad
add
pop
mov
mov
mov
mov
xor
stos
fs
cmp
add
mov
scas
mov
lcall
test
test
pop
enter
and
ds
pop
mov
inc
jecxz
rclb
lods
lcall
std
ret
adcl
mov
pop
out
shr
mov
jl
cmpsb
mov
inc
pusha
out
jnp
and
adc
adc
mov
ss
aam
mov
jmp
pop
mov
aad
push
adc
mov
cmpl
stc
arpl
cli
mov
mov
sub
sub
cltd
orb
repz
rcrl
inc
test
ljmp
push
push
inc
mov
in
iret
adc
pop
int3
dec
sbb
push
outsb
popa
inc
loop
inc
jns
xor
lods
sbb
mov
jbe
idiv
pop
ret
ret
js
ret
sbb
mov
pop
lahf
xchg
xor
dec
pop
movsl
ror
arpl
aas
and
popa
mov
ret
lret
xchg
fmuls
mov
movsl
rcl
push
lds
insl
insb
lretw
push
cmpb
stos
xchg
push
dec
mov
testl
pop
mov
jo
dec
aaa
test
mov
mov
cltd
stos
sub
push
inc
jecxz
mov
inc
adc
sub
jmp
cs
inc
or
rcrl
lock
add
arpl
pop
inc
pusha
fwait
mov
outsl
sahf
cwtl
cmp
mov
lret
cmp
lds
push
jg
cmpl
mov
lret
push
ss
lahf
push
arpl
xor
inc
jge
ljmp
xchg
or
or
adc
inc
jmp
fidivrs
stos
pushf
sub
data16
les
jp
xor
and
mov
cmp
xchg
popa
mov
ret
addr16
imul
xchg
sub
jg
call
xchg
shlb
inc
subl
or
fsubl
rol
jns
aad
pusha
rcrb
xor
cmp
cs
xlat
xchg
mov
sbb
repz
cmpsl
push
add
mov
pop
pop
fmuls
aam
scas
dec
push
adc
mov
js
js
cmp
xor
push
jle
sbb
je
mov
push
dec
lea
mov
xorl
dec
xor
dec
xchg
sbb
push
mov
sub
and
popf
cmp
jl
in
insb
dec
ljmp
mov
lret
adc
xchg
xor
sarb
imul
nop
popa
dec
inc
fstps
xor
push
add
xor
in
jg
and
cmp
dec
xor
adc
insb
fsts
loope
subl
xchg
push
jmp
push
sbb
cmpsl
cs
imul
push
cmpsl
rcrb
inc
mov
xchg
push
xor
sti
ljmp
inc
lret
inc
cmp
out
adc
pop
pushf
cmp
and
out
and
mov
ss
inc
adc
ret
lods
xor
sub
dec
xchg
jne
cmp
fmul
inc
cmp
xor
pop
movsl
or
add
cmpsl
and
sub
fnstenv
in
add
push
bound
sub
add
jp
pop
pop
sub
out
dec
mov
jo
adc
movsb
shlb
cmp
sbb
adc
xchg
sbb
filds
sub
push
ds
dec
add
pop
jo
mov
inc
add
stos
scas
sub
push
adcb
ljmp
ja
sub
cmpsb
ret
cmp
mov
mov
push
xchg
lahf
stos
addb
pop
lods
addr16
pop
sbb
sub
out
gs
and
sub
push
in
mov
xor
add
jg
jg
sbb
xchg
xchg
inc
xor
in
ds
movsbl
iret
data16
popa
pop
and
jbe
or
mov
int3
movsb
add
mov
or
mov
cld
xchg
mov
pop
jmp
dec
mulb
out
adc
lock
xor
adc
in
sbb
pop
or
push
out
cmp
mov
stos
in
sahf
shlb
loope
jns
push
add
das
mov
mov
jns
leave
pop
pop
int
sbb
ret
mov
xchg
or
pop
data16
cs
rorl
sub
aam
std
lea
call
movsb
hlt
or
test
sbb
fists
jne
push
cmp
dec
sbb
jns
lods
cmp
pop
bound
out
xor
dec
nop
add
out
popf
push
cmp
pop
out
imul
sub
sbb
scas
jo
push
inc
add
stc
bound
xchg
aas
lret
inc
jge
addl
mov
fsubrl
xor
mov
shlb
jnp
jle
mov
xorl
dec
push
sbb
addr16
pop
xlat
push
push
pop
dec
out
stc
insb
sahf
in
adc
sbb
add
jl
subb
mov
jno
dec
mov
adc
daa
xor
in
pop
adc
pop
cmp
mov
gs
outsb
cmpb
lret
cmp
mov
fucomip
lret
or
fistpl
or
dec
push
adc
add
push
xchg
xchg
stos
jg
mov
xor
dec
sti
repz
push
test
call
lahf
adc
push
xchg
cmp
dec
sbbl
or
push
xor
testb
mov
fdivrl
cmc
pop
push
int
inc
cmc
lds
int
mov
fldenv
out
mov
scas
push
lea
sub
ret
sbb
mov
jno
mov
les
aam
ret
mov
out
jb
sub
movsb
push
fsubr
xor
sbb
or
outsl
loopne
test
mov
scas
push
cmp
iret
xchg
ds
test
lahf
arpl
and
int3
add
je
add
pop
lock
jne
mov
and
xor
xor
negb
mov
pop
pop
or
or
ss
push
les
or
sub
push
xor
leave
leave
imul
mov
orb
dec
jmp
into
or
and
pop
ficoms
loop
stc
dec
sub
and
sub
pop
push
int3
aad
rcll
ljmp
mov
dec
sbb
mov
ficoms
or
mov
mov
rol
iret
push
inc
cmp
repz
andl
into
cmp
arpl
mov
adc
je
mov
pop
aad
adc
mov
clc
xor
loope
lods
ja
int
sbb
or
push
mov
fimull
pusha
jcxz
and
ret
xor
lods
mov
out
les
mov
mov
pop
mov
mulb
es
lret
jecxz
loopne
lds
call
dec
sub
mov
adc
ss
mov
adc
aaa
rcl
mov
int
pop
daa
ret
jp
xchg
cmpsl
push
outsb
cs
mov
in
mov
mov
cmp
push
popf
aam
dec
push
enter
adc
stc
inc
enter
cli
loope
popf
shlb
les
sub
cmp
in
mov
std
imul
pop
xor
gs
fucom
and
sub
clc
mov
orl
xor
movsb
pop
shll
push
rorb
stc
mov
xchg
aaa
mov
sarl
jle
jae
scas
mov
negl
in
arpl
hlt
ret
mov
out
push
push
xchg
in
test
dec
push
or
push
xchg
sti
push
or
out
xor
rcll
popa
push
in
and
jge
xor
daa
pop
les
mov
ja
sub
pop
pop
lock
pop
mov
push
rcrl
imul
sbbb
add
sub
out
push
stos
repnz
rolb
in
jg
push
out
iret
shl
int3
pop
fcoml
ds
xor
ret
jnp
lret
std
scas
xor
cmp
push
jno
aas
fsubrl
or
aad
je
lock
mov
lret
inc
pop
in
test
popa
pusha
and
add
cmp
pop
sbb
lea
pop
cmpsl
sbb
mov
out
popf
jmp
cli
outsb
mov
addl
sub
sbb
test
pop
loop
adcl
push
das
mov
add
shr
push
xor
mov
leave
inc
mov
jl
int
ja
xor
es
insb
cwtl
in
fldenv
imul
jo
lret
and
lds
int3
and
data16
mov
dec
push
addr16
orb
sbb
in
imul
sbb
add
pushf
and
sbb
in
pop
jl
jae
pop
outsb
inc
cmpl
daa
scas
push
pop
mov
or
inc
clc
stos
bound
xor
inc
enter
jp
shlb
aam
cmp
daa
add
lret
cmpsb
sti
pop
mov
mov
xchg
arpl
xchg
pop
add
or
mov
addr16
and
repz
cmp
gs
fs
cwtl
xlat
xchg
fisubrl
faddp
out
adc
xor
or
scas
or
mov
std
push
and
add
jl
mov
jl
add
xchg
or
lea
pop
inc
gs
sbb
pop
mov
adc
fnstsw
rolb
insb
mov
pop
push
adc
stos
and
xchg
adc
xchg
add
mov
xor
sahf
in
je
aaa
push
push
mov
out
cli
dec
leave
cltd
xchg
call
fstps
call
notb
hlt
push
cmp
or
aas
and
aam
insb
gs
mov
pusha
roll
out
test
cmp
adc
mov
push
xchg
int3
fsubr
pop
fdivrs
jb
push
pushf
pop
sar
mov
xor
fnsave
xor
sub
mov
jl
scas
fsubp
push
test
leave
gs
rcrb
jne
xor
dec
jne
xchg
popa
jp
fwait
inc
push
cmpsb
push
fidivs
stos
test
arpl
shrl
data16
cli
out
sub
jb
pop
and
mov
in
ljmp
lock
push
mov
jne
ss
in
pop
push
in
test
xor
cs
hlt
push
pop
xchg
adc
out
daa
add
pop
and
dec
das
mov
outsb
pop
es
cmpsb
mov
add
add
mov
shll
out
xor
das
jecxz
lock
xchg
dec
jns
int3
sub
mov
push
mov
sbb
test
sub
add
dec
dec
xchg
mov
pop
out
jns
inc
icebp
pop
xor
xor
add
inc
je
inc
movsb
stos
and
dec
testl
push
cmp
loop
stc
inc
jb
int
push
adc
call
push
js
sbb
and
or
test
shrd
or
push
mov
inc
dec
gs
int3
inc
add
out
mov
cmc
shrb
inc
scas
imul
pop
lock
jmp
cmp
jns
ds
call
push
enter
xor
stc
test
mov
popf
pop
dec
ret
xor
sbb
mov
cmp
dec
jo
imul
jle
dec
mov
pop
mov
xchg
cwtl
cld
xchg
adc
jg
pop
add
imul
loop
nop
mov
call
xchg
cmp
popa
cmp
mov
mov
or
cmc
sysret
cmp
xor
xchg
mov
nop
outsb
sub
adc
bound
call
dec
pop
mov
out
inc
aas
cwtl
insl
roll
cmp
fsubrs
mov
imul
jg
or
jnp
jns
lock
aas
outsl
xor
mov
jmp
sbb
dec
inc
in
imul
int3
sub
dec
insb
daa
lahf
inc
repz
or
sbb
xor
jp
insb
cmpsb
or
dec
out
push
and
mov
sti
and
xchg
push
jo
imul
bound
fildl
out
dec
xchg
fucomp
mov
mov
scas
paddd
sub
bound
clc
lods
xor
cld
dec
xorl
lahf
xor
or
int
dec
xor
adc
mov
jns
xchg
xor
dec
cmc
stc
daa
scas
pop
mov
aas
sbbl
cs
adc
hlt
jns
jnp
jo
nop
cwtl
pop
decb
movq
sub
xor
sti
xchg
push
daa
je
or
cld
leave
les
lahf
cmp
pusha
xor
fistps
mov
or
fmull
and
hlt
cmpsb
push
test
sbb
shrl
xchg
loop
xchg
or
fs
mov
mov
dec
or
mov
ljmp
or
jns
fwait
cmovne
mov
inc
cli
fmuls
push
das
jns
dec
jle
addr16
cmp
movsb
sub
aam
jb
sbb
dec
aam
push
cmp
fldl
subl
xchg
ja
pmaxub
xchg
and
cli
sub
imul
inc
push
jns
dec
fs
sub
inc
xor
arpl
mov
sbb
adc
jp
shll
sbb
push
and
cltd
lods
repz
mov
inc
xor
ds
pop
decb
fcoml
js
cmc
stos
jnp
xor
mov
or
lds
adc
imul
test
jmp
pop
clc
testb
inc
pop
shlb
ja
sarb
out
mov
jg
cmp
je
je
jmp
push
gs
mov
mov
mov
imul
jo
mov
xor
cmp
push
sbb
repz
and
cld
scas
mov
xchg
jbe
sub
popf
and
mov
xor
mov
ret
add
adcl
insb
mov
xor
fsubl
int3
push
xor
jl
jge
jae
out
imul
push
xchg
sbb
js
mov
loope
sbb
and
out
sub
inc
mov
or
pop
stos
adc
fld
cmp
xor
sub
out
popa
ljmp
test
scas
pop
mov
cltd
mov
xor
mov
outsb
xchg
inc
dec
lret
icebp
movsb
xchg
fiadds
outsl
cmp
or
mov
sub
cmp
insl
mov
mov
push
sub
and
insl
jae
pop
cmp
mov
cmp
dec
dec
cmc
cmp
movsl
cmp
roll
add
push
and
cld
inc
lcall
aam
adc
pop
lret
sub
pop
ss
sbb
popf
lock
or
adc
pop
shlb
dec
outsb
call
jecxz
std
sub
jae
cmp
inc
jnp
ljmp
imul
fnsave
popf
sti
fisubrs
in
pop
pop
cmp
jne
pop
sahf
pop
xchg
push
mov
mov
jae
mov
enter
adc
dec
push
adc
push
notl
nop
sar
push
mov
cmp
clc
cwtl
daa
inc
add
cmp
mov
mov
cld
std
push
cmpsl
sbb
rcrl
fistps
mov
sbb
movsb
mov
sub
adc
dec
mov
cmc
cmpsl
shrl
call
push
stos
pop
pop
or
sub
inc
out
lea
sbb
mov
inc
ficomps
pop
xor
push
push
stc
roll
push
ficoml
popa
or
cwtl
inc
out
mov
in
adc
pop
adc
mov
mov
jbe
xor
cli
dec
sub
xchg
push
pop
loope
inc
addr16
mov
jmp
jbe
sub
stc
mov
out
out
dec
mov
jbe
insb
sub
push
xor
inc
adcb
jne
adc
inc
add
mov
jo
jmp
imul
mov
inc
jbe
push
shlb
lret
and
dec
into
testl
sbb
and
aaa
mov
adc
jge
xor
mov
jmp
push
sbb
xchg
int
fcomps
jne
cmp
or
jle
add
loopne
mov
pop
adc
pushf
cmp
sub
ja
add
push
add
push
mov
js
cmpsl
lcall
test
popa
test
stos
js
pop
xor
lahf
scas
sub
ds
insl
and
js
mov
mov
jnp
mov
add
xchg
and
in
test
rclb
out
pusha
push
imul
inc
lcall
mov
test
jbe
mov
pop
call
pushf
push
xor
fcmove
pop
fnstsw
push
or
rcrb
adcb
pushf
inc
and
push
push
mov
adc
mov
mov
xchg
repz
jae
mov
gs
out
mov
xor
inc
cld
or
pop
pop
sbb
fmuls
je
sub
insl
xchg
out
push
incl
insb
mov
mov
or
pmulhw
adc
cli
jnp
sub
out
loop
mov
pop
int3
pop
in
or
jb
add
push
mov
movsb
pushaw
test
test
aad
or
mov
pop
sub
or
cmp
scas
add
xlat
mov
adc
les
pop
sbb
push
jl
loope
in
mov
inc
jns
and
sbb
insl
xor
xchg
sub
enter
in
sub
dec
cmp
lods
pop
push
inc
and
mov
jg
pop
dec
dec
nop
pop
inc
js
dec
xchg
ds
and
mov
mov
es
inc
mov
jle
int3
mov
loope
lcall
xor
add
mov
popf
incl
adc
testl
fstps
out
add
add
inc
mov
fsts
adc
pop
cwtl
imul
and
cmp
ret
imul
adc
flds
jecxz
fisttps
lret
nop
or
jmp
mov
cwtl
adc
sbb
popf
rorl
mov
sbb
push
or
loop
xchg
sub
mov
sarl
mov
nop
pop
or
sbb
mov
add
call
inc
ret
mov
stos
mov
cmp
dec
or
arpl
popa
fs
das
rolb
xchg
aas
cmp
lods
pop
push
je
lret
jae
fwait
xor
imul
jmp
shrw
mov
int3
push
dec
aad
cs
mov
pop
test
or
insl
push
pushf
jns
cs
xlat
pop
movsl
pop
test
stos
jne
xor
in
push
xchg
les
je
clc
pop
xrelease
dec
fwait
outsl
adc
out
inc
cli
sub
or
dec
xchg
bound
cmc
iret
or
cld
adc
repz
outsl
push
mov
mov
lds
or
cmp
cmp
incb
push
pop
cli
inc
ja
into
pop
push
add
push
hlt
fcmovb
out
pop
push
int
pop
subl
sahf
aaa
movsl
out
and
dec
mov
and
call
and
cmp
loop
xlat
xchg
add
sbb
ds
xchg
lea
repnz
adcb
push
mov
dec
out
sub
add
mov
xchg
push
sub
pop
hlt
add
lock
test
push
ja
jo
pop
or
add
or
xor
lods
fildl
mov
jge
push
xchg
outsl
mov
pop
subb
sub
cs
in
pop
mov
cmp
orb
jo
dec
sbb
xor
sahf
rcll
jge
shrl
adc
adc
sbb
js
ret
movsb
jle
test
mov
movsl
jp
repnz
movb
sub
pusha
sbb
adc
in
pop
sti
mov
jnp
xchg
cltd
push
adc
lods
in
mov
and
mov
cli
push
dec
jmp
test
add
mov
stos
adc
sbb
movsb
outsb
cmp
test
inc
out
dec
scas
into
cmp
push
mov
push
out
mov
sbb
enter
jns
push
jge
push
rorl
aad
movsb
adc
loopne
scas
out
or
sbb
in
imul
pop
mov
xchg
mov
shlb
daa
push
jns
pop
mov
or
push
jno
negl
ret
sahf
dec
inc
xor
mov
js
mov
sbb
push
sub
popf
cld
mov
ds
fmulp
pop
fisubrl
lds
inc
jle
pop
sub
fcompl
mov
lret
cli
cmp
fstps
mov
sub
loope
xchg
mov
out
insb
sub
scas
in
pop
adc
xchg
jmp
or
cmp
jno
cmp
mov
jo
push
lcall
mov
jmp
push
xchg
jb
jnp
dec
lahf
das
push
push
add
jnp
out
mov
insb
addl
cli
dec
xchg
jo
cmp
cmpsb
ljmp
into
mov
outsl
and
xchg
xchg
jbe
xchg
sub
xor
out
pop
mov
sub
sti
push
loope
popa
sti
imul
sub
fs
inc
test
out
rclb
pop
lock
push
adc
mov
pop
ret
rcl
shr
mov
xchg
push
out
inc
push
adc
xchg
add
mov
xchg
ret
scas
inc
mov
cmpsb
dec
in
movsl
sbb
pusha
jge
or
in
in
jp
leave
xor
loopne
xchg
push
or
add
js
orw
rclb
xchg
or
in
push
rcrl
or
jo
mov
adc
negl
icebp
mov
movsb
mov
in
icebp
mov
mov
cltd
pushf
adc
lret
push
les
jecxz
jo
cli
cmp
add
mov
pop
sub
xor
testb
ret
adc
mov
cmp
mov
bound
mov
jmp
mov
rorl
xchg
sbb
mov
stos
addr16
repz
sbb
lock
ja
dec
sub
and
pop
dec
jg
or
cld
lret
mov
xor
jmp
nop
ret
jle
or
inc
mov
mov
and
in
nop
xlat
divl
adc
data16
dec
addr16
call
xor
pop
push
std
scas
mov
sbbb
imul
pop
inc
sub
mov
in
es
pop
mov
sarl
xchg
xchg
push
test
hlt
fcompl
sub
pop
or
nop
mov
add
adc
lods
cmp
lock
pop
fs
jb
cmc
push
cli
xchg
pop
in
aad
addl
lahf
sbb
filds
ret
fsubs
sahf
jmp
out
ds
dec
imul
pushf
fsubr
ficoms
decb
inc
fmull
push
gs
push
into
add
bound
negb
xchg
and
lea
ret
scas
repz
adc
add
and
cmpb
dec
mov
rcll
sbb
push
cmp
cwtl
inc
nop
xor
insb
mov
sbb
mov
lret
out
xchg
push
repnz
outsl
add
fcoml
inc
mov
ficoms
scas
mov
mov
pushf
es
sub
and
push
das
inc
xor
inc
push
inc
int
mov
jo
mov
xchg
outsl
clc
xchg
mov
roll
pusha
fcoms
push
jb,pn
stc
jge
add
jnp
jl
xchg
cmp
or
shl
dec
mov
movsb
decb
shr
push
into
xor
mov
sti
aas
mov
lcall
jne
mov
js
mov
fwait
mov
dec
or
jo
xchg
xchg
popa
rorl
adc
and
pop
fstpl
divl
or
int3
jle
repz
mov
outsl
jae
jo
inc
add
and
test
test
shrb
or
popf
iret
sub
pop
jl
mov
xor
xchg
adc
pop
inc
mov
pop
jge
fldenv
nop
arpl
fwait
out
pusha
pop
cmp
cmp
mov
mov
xor
imul
add
pop
xor
sub
sub
imul
xor
cmp
xchg
mull
or
xchg
aaa
pop
xchg
clc
lret
test
pop
lods
in
sbb
imul
cmp
lcall
scas
pushf
scas
mov
xlat
add
push
lods
sub
add
gs
pslld
add
xchg
dec
sbb
daa
pop
daa
jecxz
lods
ss
cld
mov
sbb
jp
ror
cmp
jmp
sti
loop
mov
sub
cmp
outsb
shrb
jle
shrb
mov
cmpsl
add
repnz
add
add
imul
aad
adc
int
mov
aaa
out
cmp
test
pusha
ret
sub
push
jb
cltd
adc
mov
addr16
ljmp
pop
mov
sub
fdivs
movsl
outsb
sbb
sub
push
add
stos
fimuls
dec
or
sti
and
mov
sbb
ret
lahf
dec
adc
movsl
dec
in
and
cmp
lea
push
pop
pop
xchg
aad
push
loop
jle
icebp
fsub
and
pop
mov
movsl
pop
pop
sbbl
add
dec
sub
push
daa
inc
mov
dec
popf
pop
aas
xchg
es
aas
xchg
and
fdiv
sub
xor
pop
inc
mov
cmp
adcb
cwtl
push
cmc
push
sahf
lods
fisubrl
mov
fisttps
movsb
call
xchg
xor
inc
jmp
popa
daa
xor
scas
and
mov
int
ss
lea
inc
xchg
sbb
dec
inc
xor
xor
ret
and
cld
push
sarl
call
or
lret
lea
and
ret
cmp
mov
lret
cmpsb
cmc
mov
enter
dec
xor
fwait
cld
jo
clc
data16
bnd
add
leave
sub
lods
adc
jb
jne
push
fnstsw
lcall
mov
arpl
sbbl
pop
test
mov
or
sbb
lcall
cwtl
adc
movsb
test
pop
cmp
loop,pn
jle
mov
ret
sbb
xor
ret
inc
dec
int3
sysenter
fistpll
shll
jmp
arpl
push
lret
sub
jg
jb
neg
jno,pn
xchg
lods
fwait
xchg
mov
in
jo
xlat
fs
inc
adc
int
dec
or
sbb
xor
sbb
cltd
sbb
cmc
test
aad
test
add
push
mov
or
inc
dec
mov
mov
out
cmpsl
or
or
xor
xchg
in
movsb
xchg
adc
jo
and
das
insl
out
jle
aaa
imul
jl
adc
mov
sub
pop
shll
out
or
rcrl
lcall
test
imul
aad
adc
inc
xor
xchg
das
lock
sbb
xchg
popf
cs
sbb
ljmp
cwtl
mov
icebp
push
sbb
popa
dec
stos
popf
pop
add
add
jb
or
test
dec
add
dec
clc
ljmp
pop
mov
pusha
jnp
jle
cli
lock
bswap
xor
mov
push
xor
xchg
in
adc
cmp
and
pop
test
mov
jbe
ficoml
ret
jnp
sbb
lret
mov
std
fidivs
pop
xor
or
cmp
sub
add
jb
jl
jl
insb
cwtl
dec
fisttps
pusha
adc
rol
cld
rol
and
imul
lret
sahf
push
loopne
test
cmp
push
sub
add
xor
pop
jae
mov
cmp
cltd
pop
jmp
jg
rorb
fcoms
mov
bound
cmpl
pop
and
jl
pop
dec
jp
out
js
sbb
scas
ds
sub
dec
xor
leave
cmp
and
xchg
dec
mov
xchg
jnp
stos
ljmp
aas
cmp
and
push
pop
adc
into
xchg
rcrb
and
adc
sbb
test
stc
xchg
in
lret
int
xchg
scas
nop
jno
xlat
jecxz
push
cmp
push
pop
addr16
clc
mov
shll
imul
push
adc
and
inc
xchg
or
cwtl
cmp
das
ret
ret
push
inc
mov
cmp
xchg
imul
push
movsl
sahf
jecxz
add
pop
arpl
popf
ss
mov
iret
mov
aam
cmpsb
push
stos
pop
lret
ss
sbb
mov
and
aad
in
pop
es
and
jg
mov
imulb
cld
out
adc
addr16
dec
jns
push
xor
sub
movsl
je
xchg
arpl
imul
pop
xchg
push
cmovle
mov
inc
sbb
jg
inc
daa
xchg
cmp
out
push
dec
xchg
lds
out
jge
inc
cmpsb
loop
pop
add
insl
mov
aam
shrb
inc
and
imul
lock
pop
push
mov
add
and
loop
test
hlt
and
sbb
cltd
pop
pop
ret
jmp
lock
jns
ret
mov
outsb
pop
mov
stos
add
xlat
ja
shll
or
aad
sub
decl
cmp
sbb
js
push
sub
pop
aaa
iret
and
mov
sbb
hlt
clc
mov
sahf
cmc
in
in
add
and
sub
inc
mov
std
outsb
push
mov
mov
adc
fxch
jae
fidivrs
mov
test
in
adc
xchg
daa
lahf
dec
test
push
or
call
xchg
lahf
pop
popa
leave
mov
out
cltd
jae
add
add
sub
lcall
sbb
push
fisttps
pop
dec
mov
push
fisubrs
mov
mov
aad
clc
inc
mov
push
sbb
push
sub
fcomi
addr16
rcrl
rorl
imul
sbb
subb
inc
icebp
fsts
adc
sahf
insb
jecxz
mov
sti
pop
mov
outsb
out
mov
aam
push
jle
popa
mov
mov
out
icebp
mov
add
add
sub
jg
lea
sbb
out
fcmovnu
add
jp
popf
pop
cmp
push
js
repnz
lds
insb
in
cmpsl
in
xchg
repz
jo
test
fisubrl
add
mov
dec
xchg
cmp
mov
lret
push
ljmp
cwtl
hlt
in
cmp
sti
push
out
jno
ds
jbe
imul
dec
leave
out
mov
pop
or
sti
aaa
lock
mov
test
add
rorb
jle
lea
aas
nop
or
or
shrb
jae
or
adc
cmp
int3
pushf
test
ret
and
test
pop
add
sbb
mov
push
ret
or
push
scas
mov
xchg
fwait
mov
xchg
xor
sahf
insb
pop
xchg
hlt
or
shll
das
shr
incb
add
jg
wrmsr
out
bound
mov
pop
cmp
test
scas
or
cs
mov
pusha
in
cmc
cli
push
mov
inc
cmp
push
dec
jno
aaa
repnz
xchg
adc
pop
out
xchg
sbb
std
cmp
cmc
push
push
push
adc
fs
adc
mov
xor
gs
push
pop
cmp
imulb
nop
out
call
iret
lods
lret
outsb
mov
mov
pop
and
push
cltd
and
mov
jo
or
mov
jg
aad
jno
and
aad
pop
pusha
add
pop
jnp
push
mov
stos
dec
loop
pop
and
imul
or
or
mov
sub
xchg
or
test
iret
pop
in
mov
leave
sbb
xchg
dec
mov
in
push
pusha
push
lret
mov
std
dec
add
inc
pushfw
xor
sbb
cli
push
jne
in
arpl
xor
mov
sbb
mov
mov
movsb
mov
shr
mov
bound
fcmovb
out
adc
mov
movsl
stos
fadds
stos
sbb
lods
sbb
push
mov
and
mov
push
xor
loope
cmp
fdivrp
pop
leave
dec
and
dec
mov
nop
pusha
push
inc
adc
cmc
pop
and
sbb
out
aaa
ljmp
push
bound
sub
or
jnp
sub
inc
push
add
mul
push
pop
mov
or
loopne
shlb
xchg
repz
mov
icebp
test
sahf
fwait
push
iret
fisttpl
mov
insl
cmp
push
mov
lret
jmp
jg
xchg
pop
pop
call
cmp
lea
pop
adc
mov
addr16
push
mov
jg
add
add
push
jp
mov
les
fdivs
popa
sti
lods
cltd
add
movsb
leave
xchg
imul
pop
cld
mov
lcall
inc
dec
xchg
jmp
pop
pop
jge
dec
pop
ljmp
sbb
add
out
fstps
jno
icebp
cmc
fcomip
testl
xlat
sti
ljmp
push
mov
xchg
negb
sarb
mov
pop
arpl
popf
fwait
sub
mov
sahf
fs
mov
sub
xlat
arpl
or
dec
ds
shll
push
adc
cld
jl
icebp
lcall
loope
jno
aad
insl
sbb
sub
and
add
aam
imul
movsl
inc
or
sar
sbb
xchg
cmp
dec
mov
imul
xlat
mov
and
cmp
loop
lds
in
rcrl
sbb
push
and
xlat
inc
push
mov
idivb
jmp
in
js
popa
inc
sub
pop
pop
jmp
push
cmp
pop
cmc
stos
inc
push
jecxz
das
jle
in
inc
dec
xor
lret
pop
ljmp
xchg
or
mov
pop
sbb
daa
std
xchg
mov
mov
sbb
push
jae
xchg
cmp
jmp
sahf
push
dec
mov
test
rcrl
xchg
popa
aaa
mov
stc
and
shll
orb
out
cmpsb
cmp
popa
in
xorb
push
mov
push
cmpsb
push
jp
adc
sbb
fs
fadd
lahf
mov
sti
inc
pop
add
pop
push
ds
mov
bound
xor
mov
jmp
jle
push
mov
fmuls
push
push
jnp
sub
mov
inc
fwait
je
call
fisttpll
or
fisubrl
mov
pop
outsb
xor
movsb
fisubrl
subb
jl
xchg
fdivs
fldl
push
inc
xor
imul
fldl
mov
add
mov
xchg
push
mov
fildl
jge
iret
ja
int3
or
mov
ror
push
mov
push
and
lea
lea
sbb
int3
mov
lret
loopne
lahf
xor
fwait
dec
push
inc
jl
or
adc
mov
xchg
xchg
fst
or
js
and
sbb
idivb
push
push
sbb
cmpsl
jbe
aam
mov
push
mov
pop
pushf
icebp
cmpl
movsl
das
sti
mov
mov
or
cld
aas
add
clc
in
push
push
lret
pop
jl,pn
pop
xor
pop
and
pop
dec
gs
fistl
nop
or
imul
or
jp
mov
and
xchg
mov
xchg
or
shrl
sbb
icebp
das
popf
xor
shrb
mov
xor
mov
inc
push
iret
fstpl
mov
cmc
push
jne
inc
notb
scas
pop
inc
imul
mov
repnz
mov
imul
out
icebp
and
out
mov
lds
mov
mov
bound
mov
inc
shll
jo
loope
sub
jle
int
loopne
out
in
cs
subl
mov
std
sar
dec
jp
repnz
seta
mov
mov
jns
mov
movsb
push
dec
cmp
popa
pop
sub
out
mov
out
adc
add
clc
push
sub
iret
imul
incb
fwait
inc
jo
rcl
inc
dec
sbb
sub
shll
fdivl
cltd
adc
shr
fnstenv
mov
rolb
hlt
inc
rorl
xor
int
and
sti
sar
jno
shlb
loopne
jnp
dec
adc
xorl
dec
push
push
jnp
lret
repnz
fwait
leave
push
in
and
and
or
xor
pushf
ficompl
xor
ja
scas
push
mov
lds
jns
ret
icebp
ret
sti
sbb
jns
jae
pushf
jl
jecxz
lea
data16
dec
xchg
je
repnz
fists
call
jae
jae
push
icebp
unpcklps
loop
mov
adc
es
stos
jmp
push
jge
push
mov
dec
sbb
cmp
rorl
imul
fldcw
insb
add
xchg
test
sub
sub
rorl
xor
sub
sub
add
int3
sbbl
les
popf
add
test
daa
movsb
xor
inc
scas
jle
fs
adc
cmp
es
jmp
cltd
data16
aam
jle
xchg
fcomps
rol
cmpsb
xor
mov
ljmp
out
lods
hlt
cmp
mov
push
pushf
xor
in
insb
add
mov
outsl
call
sahf
aas
enter
clc
cmp
test
pusha
lcall
hlt
push
push
dec
inc
into
mov
notl
sub
sti
cs
dec
repz
repnz
lods
inc
jl
arpl
addl
in
out
lahf
scas
inc
cmp
xchg
call
aad
insb
notl
scas
je
xlat
pop
fidivs
out
sub
add
xchg
dec
stos
mov
dec
adcb
jecxz
push
mov
mov
inc
xchg
in
lods
pop
std
mov
popf
pushf
sub
sub
fs
addr16
push
sbb
jmp
adc
popl
test
pop
dec
cmp
xchg
adcb
les
test
cmp
in
inc
jp
outsl
test
repz
pop
decb
push
inc
cmc
adcl
fadd
mov
inc
in
jns
sarl
add
jo
fildll
in
mov
add
jb
inc
sub
jno
inc
aad
nop
sahf
in
jns
je
or
sub
popf
sbb
aaa
sbb
jo
es
insb
adc
stos
adc
call
mov
push
ret
test
jbe
push
je
sbb
or
push
xchg
sub
stos
in
add
das
adc
sti
js
test
leave
add
and
push
pushf
in
aaa
vpshaq
cmpsl
pop
push
bound
dec
or
cmp
and
andl
hlt
popf
pop
sti
inc
in
int
mov
sbb
inc
dec
lcall
push
jecxz
jbe
xor
mov
outsl
xchg
or
or
sbb
roll
mov
push
andb
push
sbb
adc
not
stos
shll
dec
mov
movsb
adc
xchg
mov
orb
pushf
jnp
mov
or
insl
icebp
lods
adc
jne
sarl
mov
jp
xchg
inc
outsl
test
loope
popa
and
jmp
loopne
push
xor
test
sub
mov
scas
push
cmp
das
or
push
cmp
int
add
or
mov
insl
xor
xor
sub
test
loop
shll
jbe
mov
sbb
addr16
sbb
into
insl
movsl
pop
mov
addr16
std
cmp
push
adc
push
subb
into
in
sbb
loop
ficoms
push
jae
dec
lea
int
movsl
scas
cli
jmp
lret
scas
xor
lds
repz
aam
jl
in
notb
insb
cmp
sbb
mov
inc
sbb
fmull
add
inc
hlt
scas
mov
mov
cltd
fisttps
xorb
imul
jns
jmp
mov
rcrl
inc
scas
inc
jecxz
push
jecxz
cwtl
sbb
roll
sub
push
roll
insl
repz
jp
pusha
ljmp
pop
xchg
insl
pop
or
push
push
mov
enter
push
out
je
xchg
add
inc
push
mov
sbb
cld
sbb
add
aam
or
add
in
mov
sbb
pop
mov
int3
movsl
int3
mov
pop
inc
test
sti
aas
test
mov
xor
cli
xor
xor
mov
pop
je
in
pusha
push
fsubs
mov
mov
fs
xchg
cmpsl
mov
cld
cmpsb
stos
nop
movl
imul
ret
push
cmpsb
aaa
and
jnp
out
adc
dec
cmp
loopne
push
mov
sbb
pop
sub
dec
mov
notb
jge
sti
or
mov
xchg
test
sub
mov
pop
mov
in
sahf
lret
in
out
dec
icebp
ljmp
mov
adc
xchg
daa
jne
cs
js
call
pop
pshufw
push
shr
sbb
mov
xchg
fisttpll
cmp
int
inc
pop
psubw
nopl
in
sarl
lret
pop
andl
cmp
mov
popa
lret
ljmp
push
add
mov
pop
shlb
mov
xor
pop
clc
inc
cmp
mov
sub
flds
and
sub
cmpsl
dec
cmp
mov
clc
cld
loope
jno
mov
sub
ss
push
inc
je
cmp
xchg
pushf
cmpl
fstenv
lcall
lcall
sbb
xchg
in
and
inc
cmp
xchg
mov
ljmp
push
xor
add
mov
js
inc
fists
sub
popf
cld
jp
mov
pop
push
std
xchg
in
in
add
iret
int3
pop
or
int3
shlb
ja
xchg
jnp
push
cli
pop
mov
das
xchg
fisubrl
inc
pop
cmc
xchg
or
out
mov
mov
jb
fs
mov
neg
fs
mov
add
stos
sarl
or
outsb
push
iret
jge
xchg
dec
pop
and
mov
jns
or
or
sahf
and
and
mov
cmpsb
ficomps
test
jbe
xor
stc
adc
movsb
jmp
add
jle
addb
loop
das
adcl
test
jmp
xchg
ret
xorb
cmp
inc
fadd
aas
adc
cmp
xchg
in
and
ret
cwtl
rcll
cmp
cli
cltd
adc
hlt
test
adc
fsubrp
in
ds
call
repz
dec
xlat
mov
mov
shrl
frstor
xchg
mov
xlat
xor
test
sbb
cmpsb
jecxz
fucomp
out
out
sahf
je
or
stos
inc
dec
push
mov
xlat
fsubrl
and
push
lret
dec
jge
adc
add
cwtl
lcall
mov
insb
and
sarb
lds
adc
mov
nop
xchg
nop
cmp
cmp
sti
xchg
outsb
in
aad
out
sub
add
cmpsb
in
lret
mov
jge
jl
lret
jae
fcoml
negl
dec
cwtl
jl
vmread
add
scas
sub
into
push
in
les
fadds
adc
adcb
jno
rcll
imul
jecxz
dec
jns
sub
fs
mov
mov
or
sub
dec
addb
lret
lret
ss
sbb
les
sbb
pop
sarl
and
cmp
pop
outsl
leave
stc
stos
aaa
iret
add
aaa
cld
cmpsl
imul
push
fidivrl
inc
inc
int3
les
out
pop
out
jne
xchg
jle
cmp
sub
iret
call
xchg
cmp
add
sub
mov
out
mov
mov
cmp
xlat
movsb
push
and
and
in
push
inc
fisubrl
lds
popa
add
push
lcall
in
push
rclb
sub
mov
std
sahf
insl
movsb
push
dec
jl
cmpsl
seto
cli
lret
arpl
aam
lds
aam
cmp
sbb
inc
lods
test
mov
jbe
and
jmp
mov
daa
rcrb
cmp
jl
enter
cmc
adc
ret
cmp
mov
repz
xor
push
add
sbb
jl
rcrb
rcr
pop
mov
aas
enter
cmc
pop
int
jne
push
cmpsl
push
push
cmp
popa
popa
fwait
test
iret
leave
xchg
daa
in
or
push
pop
call
mov
and
repz
leave
out
stc
push
inc
arpl
sub
lret
fdivrs
fstpt
addr16
faddl
insb
sbb
push
fcompl
inc
mov
fadd
pop
xor
aaa
dec
out
lret
pop
aad
cmp
adc
mov
cmpsl
or
iret
lcall
cli
mov
sbb
or
in
mov
xor
lahf
sub
mov
and
xor
inc
mov
lea
inc
int3
jno
inc
cmp
push
sbb
inc
pusha
dec
jge
scas
or
xchg
mov
and
push
fstps
mov
xor
and
aas
mov
or
insl
repnz
jge
fsts
test
dec
aas
cmp
int
out
adc
add
decb
xlat
jmp
pop
test
in
out
nop
std
jns
pop
icebp
insl
jbe
mov
add
xor
pop
dec
inc
bnd
lcall
nop
in
inc
inc
fnsave
nop
in
mov
pop
mov
mov
or
daa
inc
test
pop
xor
das
fisubs
shlb
incb
or
scas
idivl
ds
xchg
out
add
enter
sub
das
lcall
push
mov
js
mov
lock
jbe
imulb
divb
xchg
mov
sub
push
fadds
inc
sbb
repnz
or
mov
jge
mov
pmaxsw
add
cmp
gs
shrb
shrb
pop
test
adc
adc
dec
les
cmp
jnp
mov
scas
mov
je
fldenv
xchg
push
rclb
push
mov
bound
xor
dec
aas
sbb
inc
add
sub
aam
int
or
jb
repz
push
adcl
xor
push
fdivl
xor
fidivs
incl
adc
push
cmp
or
push
int3
xor
pop
cmp
mov
mov
mov
das
jbe
mov
sub
mov
mov
fadd
fbstp
pusha
aam
out
sbb
xor
xchg
dec
jb
jbe
pop
adc
add
pop
xor
push
repz
xor
pushf
sub
mov
rolb
pop
pop
pop
push
adc
out
cmp
sub
lahf
fadd
push
xchg
dec
les
stos
ljmp
cwtl
add
mov
fdivl
jne
adc
sub
std
fistps
jl
daa
lds
cmp
pop
jb
roll
repz
pusha
ror
fwait
test
sar
iret
cmpsb
sub
add
out
fs
and
or
or
adc
into
or
and
movsl
fists
inc
xor
dec
jl
inc
lret
in
jg
out
pop
xor
lods
mov
ja
fsubl
ds
cmp
push
movb
sti
loopne
sbbb
in
jmp
fcom
jmp
cmp
xchg
fstpl
mov
jno
test
or
scas
push
lods
and
push
mov
fbstp
pop
jns
inc
or
lcall
xchg
insl
or
cmp
cltd
es
jge
push
cmp
je
in
sbb
lret
and
movsb
pop
adc
pop
xor
lods
dec
loopne
add
stc
lret
stos
shrl
into
data16
in
inc
nop
test
fistpll
cmp
out
mov
lcall
lret
mov
mov
ljmp
jl
sti
jg
add
data16
push
mov
cmp
dec
or
inc
ret
inc
data16
sbb
jg
cmpsb
lds
fsubrl
push
pop
xchg
mov
mov
fwait
stc
jmp
outsl
mov
neg
fcmovbe
add
arpl
mull
inc
pop
or
into
push
cmc
mov
sub
xchg
and
addb
pushf
lock
xchg
dec
jb
mulb
push
aad
xchg
mov
sti
jae
inc
out
dec
push
enter
xor
pop
mov
pop
push
shll
in
and
xchg
inc
pop
es
stos
dec
adc
dec
adc
scas
cwtl
jg
xchg
push
jb
pop
orl
cs
sbb
sahf
popf
mov
mov
out
test
xchg
scas
sbb
sbb
add
sub
dec
mov
pop
dec
mov
mov
stos
dec
out
cmpl
jno
and
pop
outsb
aaa
fstl
add
add
pop
adc
bound
ret
pop
mov
add
ret
push
ja
adc
lods
cmp
in
push
data16
push
dec
inc
jp
xchg
clc
popf
or
push
ljmp
mov
rorb
popa
sti
cmpsl
mov
cld
inc
mov
iret
pop
mov
and
cmpsl
popl
loopne
out
cli
push
inc
popw
aaa
addr16
test
fs
lods
jb
xlat
jmp
mov
mov
mov
push
call
cmp
adc
popf
mov
jp
pop
mov
jmp
adc
xchg
cmp
adc
lods
int
or
cmp
incl
or
daa
jl
or
inc
pop
mov
loop
sbb
cmp
push
mov
mov
jbe
xchg
in
scas
add
sahf
dec
je
mov
out
bound
or
loope
ret
movsl
cmpsl
es
mov
in
jbe
or
inc
sub
sbb
adc
jle
jg
cmpsl
inc
std
jns
icebp
pop
xchg
push
and
mov
fdivp
das
and
out
fcoml
sub
xor
sbb
fstl
icebp
lcall
stos
xchg
lahf
cmp
out
dec
dec
mov
lahf
mov
sub
sahf
test
mov
shrl
pushf
and
xor
dec
mov
mov
mov
test
mov
pushf
mov
xchg
fwait
pop
clc
jnp
call
pop
mov
xchg
or
jmp
ficompl
inc
sahf
push
jno
popf
sti
jecxz
xor
dec
and
enter
mov
fdivr
jp
test
jg
imull
xchg
cmp
in
jmp
addr16
dec
scas
lret
je
imul
loop
cli
orl
lods
stos
jmp
push
jmp
sub
pop
cmc
stos
nop
cmp
sbb
pop
movsb
lods
xor
push
xchg
and
lcall
imul
dec
jge
dec
es
jo
jns
xor
sarl
mov
in
scas
bound
dec
cs
outsl
jecxz
cmp
sbb
mov
jecxz
sbb
xchg
lods
sahf
inc
mov
hlt
popa
pusha
clc
inc
shl
xlat
cmp
pop
push
imul
adc
cld
jnp
adc
sar
mov
inc
pop
mov
test
mov
out
jbe
clc
or
inc
cmp
mov
and
mov
sti
dec
mov
or
mov
push
lret
jmp
imull
dec
xor
push
rolb
loopne
adc
add
mov
cmpsl
testl
push
pop
movsb
je
and
cmc
rorb
test
mov
and
dec
ror
jno
jmp
pop
iret
hlt
cmp
ds
cmp
int
inc
jne
mov
cmp
inc
jecxz
lock
xor
fadd
mov
jl
pop
lret
stos
pusha
cmc
push
repz
test
fisttpll
push
leave
mov
pop
shlb
mov
xchg
popf
jmp
and
mov
inc
sbb
rclb
mov
addb
enter
and
rcll
lahf
in
jg
push
sbb
add
mov
cltd
in
fidivrs
lds
xchg
or
jmp
adcb
scas
popf
and
sub
push
out
not
in
adc
loop
inc
jge
xchg
pusha
mov
dec
mov
cld
add
cwtl
mov
or
iret
mov
xorb
jb
xchg
loope
cmpb
pop
pop
insl
and
mov
aaa
lods
outsb
jle
sbb
and
sbb
xor
daa
add
in
sub
mov
shl
pusha
das
insb
cmpsl
mov
adcl
mov
inc
mov
jle
adc
cmp
sti
mov
pop
nop
pusha
hlt
stc
mov
out
cmp
icebp
add
clc
jg
subl
jge
ret
mov
sub
fnstsw
mov
cmc
xor
xchg
pop
xor
arpl
adc
repnz
pushf
fstpl
mov
int3
cwtl
in
inc
stos
andl
mov
or
sub
xchg
push
aam
sbb
ljmp
xchg
pop
sbb
mov
daa
cmp
push
out
iret
inc
aad
out
test
rcrl
mov
sbb
add
and
sbb
insb
stos
or
inc
lret
scas
add
and
cmp
add
xor
es
outsl
insl
cwtl
sbb
pop
push
lods
sbb
cmpsb
lret
lret
inc
jle
lods
cmp
dec
or
gs
mov
in
adc
lret
add
std
mov
in
mov
sbb
lret
cmp
ja
fstpl
fldcw
pop
cmp
push
mov
popf
adc
shlb
mov
cmc
push
fwait
ds
cmp
ret
cvtdq2ps
test
sub
and
pop
das
sub
int3
ja
in
test
add
mov
cld
dec
subl
shll
push
or
imul
sbb
xchg
sub
mov
scas
fs
rcrb
cmpsl
cmpsb
and
sub
call
lahf
push
mov
jle
mov
and
cs
inc
push
xchg
jmp
pusha
push
hlt
in
sbb
pop
fcomps
cmp
pushf
divb
stos
sbb
xor
popf
jg
jecxz
cmp
pushf
loopne
jne
std
shrl
adc
fsts
movsl
pop
and
test
cmp
and
add
and
add
scas
je
aaa
ret
mov
inc
cmc
dec
add
movsb
pop
sar
sbb
dec
xor
sahf
xor
jno
xor
add
push
add
in
xchg
cmp
xchg
push
dec
leave
xor
xor
repnz
stos
jecxz
mov
adc
jecxz
cld
adc
mov
sub
sahf
pop
add
in
cmpsb
out
loop
flds
les
stc
fadd
scas
rcrl
or
cmp
xor
mov
movsb
fwait
dec
adc
icebp
mov
or
mov
or
cwtl
cs
fistpl
out
add
jno
jecxz
xchg
ret
stc
add
pop
xchg
mov
jb
xchg
sub
aaa
cmp
imul
pop
pop
mov
inc
lahf
jmp
add
lock
inc
nop
shrb
and
call
dec
lret
and
push
fstpt
pop
or
dec
adc
mov
in
repz
sub
and
call
jnp
add
and
insl
ds
sbb
clc
in
mov
jge
pop
mov
pop
out
add
cmp
imulb
mov
mov
cwtl
or
push
fs
push
or
mov
mov
xlat
inc
pushf
shrl
xchg
loopne
jnp
enter
andb
mov
adc
mov
nop
push
hlt
pop
xor
mov
push
inc
cmp
pop
xchg
ds
xchg
add
mov
stc
cmc
push
push
jno
insl
inc
pusha
jnp
stc
mov
fs
bound
pop
adc
xchg
dec
bound
sbb
or
jmp
sbb
jnp
shll
iret
jnp
je
mov
nop
pop
dec
mov
loopne
sub
and
loopne
sahf
icebp
push
in
cmc
jmp
movsb
in
aas
cmovno
jns
ret
push
xchg
test
das
mov
jns
das
mov
push
test
inc
dec
add
int
jbe
push
inc
mov
cmp
out
lret
inc
dec
lds
rcrb
adc
inc
and
push
mov
dec
mov
dec
jnp
loope
push
mov
bound
push
out
sub
leave
test
inc
out
sub
in
ss
push
add
mov
repz
jno
pusha
stc
sbb
aaa
sub
mov
cli
test
pop
and
mov
fisubl
dec
or
xor
or
inc
jb
lret
fsubrl
call
cltd
pop
jbe
rorb
pop
iret
mov
push
jns
test
ss
ds
mov
add
lret
cmp
jmp
clc
cmp
adc
popa
inc
scas
negl
mov
rorb
out
rcrb
jnp
jl
inc
xor
jecxz
icebp
subb
lods
mov
filds
stos
sbb
push
xchg
test
mov
movl
cs
inc
lds
jle
add
iret
scas
into
vmovddup
sbb
mov
or
sarl
in
fcoms
pop
ss
scas
das
xchg
xlat
push
hlt
or
push
data16
je
into
aam
mov
lods
std
outsb
sbb
sbb
jg
push
adc
add
sti
les
ret
add
out
aad
je
jmp
fists
xor
add
hlt
movsb
dec
in
ds
ljmp
jge
iret
mov
jp
ds
in
adc
andb
cld
xor
push
sub
inc
dec
rolb
add
mov
cli
dec
adc
lret
push
dec
cld
sub
jg
push
mov
daa
sbb
loop
cs
pop
nop
shl
int3
pop
loop
cld
outsl
addl
mov
popf
mov
pop
nop
or
inc
clc
pop
fnstsw
outsl
insl
shrb
ss
data16
xor
sub
mov
popf
hlt
or
lods
pop
idivl
data16
xchg
fistpl
push
cwtl
sahf
jg
sub
into
sbb
rcr
lahf
sbb
iret
out
loope
shlb
out
das
mov
loope
addb
stc
mov
lock
jno
ret
push
mov
inc
scas
sbb
mov
shlb
xchg
fstpt
xchg
jg
mov
in
imul
test
sbb
pop
push
mov
dec
enter
add
jmp
inc
mov
movsb
mov
lds
loop
test
mov
fs
jmp
or
cs
jecxz
mov
jnp
xchg
addb
ja
out
into
int3
lock
inc
imul
not
idivb
push
sbb
add
leave
inc
cmp
jbe
arpl
push
fldl
jl
mov
cmp
sahf
jnp
imul
lods
daa
jae
cmp
outsb
fistpl
test
push
cmp
xlat
shll
inc
sub
into
jne
mov
decb
aad
pop
mov
repz
dec
add
inc
insl
inc
les
sbb
or
pop
fwait
add
shll
xor
adc
push
clc
mov
xchg
insl
insb
fcoml
imul
outsb
jmp
or
cmpsl
lret
lea
jmp
pop
in
leave
adc
aaa
mov
xor
xor
nop
shll
daa
sub
testl
xchg
jbe
xchg
cmp
push
fstps
dec
inc
or
push
adc
stc
mov
jne
push
xor
dec
lcall
xchg
jle
sahf
xlat
mov
inc
popa
inc
insl
cltd
aas
and
pop
and
jae
push
inc
icebp
xor
push
lea
sbbb
fsubr
gs
dec
sub
loop
je
and
in
shll
jp
inc
xchg
mov
dec
jns
add
jne
jl
mov
xor
xchg
dec
mov
insl
popf
hlt
test
mov
out
clc
mov
add
jg
sub
popl
xor
shl
lretw
cmpsb
mov
pop
inc
jbe
in
test
insb
ja
mov
scas
inc
mov
outsb
sbb
aad
or
sbb
jg
sub
or
jl
sbb
cmp
cmp
rorb
gs
sbb
jp
std
pusha
xchg
lahf
ja
push
les
xor
adc
push
fisubl
in
pop
lods
sti
add
xlat
jg
leave
imul
push
or
jg
fdivr
mov
test
mov
fwait
push
push
ret
repnz
xchg
int3
repz
arpl
das
inc
aad
add
mov
push
xchg
xchg
cmpb
lahf
pop
mov
push
lea
cmp
es
sub
dec
inc
cmpsl
mov
xchg
xor
and
mov
xor
xchg
inc
bound
xchg
jge
lea
rcrb
mov
inc
xchg
rclb
mov
push
sub
xchg
or
jmp
stos
mov
jg
adc
inc
push
js
ja
or
outsb
lds
add
loop
mov
call
adc
or
cmpsb
aam
jne
inc
push
and
loop
popf
sbb
adc
adc
paddusb
rcll
mov
filds
mov
jl
jb
push
push
stc
out
push
add
fstpt
pushl
sbb
xchg
lcall
int3
mov
loop
jp
test
stc
mov
aas
jle
push
push
or
lea
ss
ffreep
jbe
aas
es
cld
jl
xchg
push
hlt
push
jecxz
jnp
push
je
dec
divb
rolb
jne
mov
popl
inc
nop
sti
mov
sub
test
dec
mov
mov
mov
sar
in
xor
mov
jp
gs
roll
imul
mov
flds
mov
fcos
adc
mov
xor
insl
ds
push
sub
mov
mov
sti
out
xchg
lods
popl
xor
and
lret
dec
imul
cwtl
add
mov
pop
push
inc
fisttpll
lds
in
cmpsl
xchg
xchg
or
ljmp
jp
dec
mov
arpl
mov
jl
jg
jbe
pop
cmp
add
shl
mov
lods
ljmp
fadds
sub
add
pop
sub
jb
mov
adc
int3
cwtl
add
cmpsb
dec
cmp
repnz
inc
inc
fbld
or
or
in
popa
inc
push
sub
int
pusha
mov
addl
pusha
cmp
movsl
outsb
push
leave
je
test
mov
mov
inc
mov
and
adc
pop
adc
push
lds
pop
rcll
add
scas
sbb
push
lock
js
out
sbb
loopne
mov
insb
push
sub
leave
movsl
mov
or
mov
in
fcmovnu
frstor
mov
hlt
scas
push
stc
pop
lea
mov
ret
lcall
notl
imul
in
mov
test
mov
out
shl
pop
repz
push
neg
or
xorl
out
pop
in
cltd
push
or
adc
outsl
dec
subl
ret
sub
subl
push
or
jl
dec
sbb
pop
sarl
stos
add
jnp
jae
cmp
pushf
enter
and
lods
stc
insl
jp
dec
mov
out
movsl
add
mov
test
dec
lods
jno
xorb
dec
or
jne
inc
lods
sahf
icebp
insb
xchg
or
sub
jecxz
shll
fwait
pop
mov
popa
xor
cs
push
add
mov
ljmp
pop
cli
or
pusha
andb
out
call
xchg
and
div
cmp
push
adc
div
xor
jo
or
pop
inc
push
xor
ds
jmp
mov
cmp
rcl
dec
mov
mov
in
dec
iret
dec
fcomi
inc
fld
fsubr
scas
fisttps
sub
scas
push
out
les
stc
add
insl
lods
addl
xor
lret
dec
sbb
stc
stos
sub
adc
scas
or
iret
push
arpl
sub
mov
add
dec
cs
sub
or
pop
sub
jl
icebp
push
inc
or
dec
lods
xchg
ss
clc
loope
pop
adc
push
adc
jle
test
shrl
je
xor
cmp
ljmp
cmp
jl
ljmp
mov
sub
mov
arpl
or
in
jecxz
les
or
movsl
in
ror
outsl
mov
jl
push
lahf
or
sbb
dec
fsts
jle
jle
aaa
fidivrs
mov
into
push
lock
movsb
mov
fistps
shr
dec
pop
into
lds
or
jmp
cmpsl
cmp
nop
sbb
scas
lcall
xor
movsl
push
dec
adc
mov
mov
mov
add
adc
aaa
fwait
mov
fcompl
jae
out
sbb
fwait
dec
jle
mov
xor
mov
mov
mov
push
fs
ljmp
das
jge
scas
cmp
ficoms
ret
ret
loopne
or
fcmovnb
pop
imul
into
pop
out
or
sub
out
int3
push
mov
jg
inc
lock
jae
bound
mov
xchg
leave
pusha
int3
cmp
movsl
sbb
cmpl
mov
mov
imul
test
icebp
push
xchg
loopne
neg
xchg
clc
add
sti
mov
cmc
sub
fidivl
std
lret
insl
adcb
add
fldcw
jb
cltd
xorb
cmpb
movswl
mov
jecxz
mov
dec
fsts
loope
repz
stos
jg
sbb
popf
fs
mov
adc
pop
xorb
aad
js
in
iret
add
pop
imull
xor
pop
negl
dec
jns
jo
or
inc
loopne
pop
jns
xor
xchg
cmp
lahf
in
pop
ret
add
sbbl
roll
sbb
mov
mov
aad
outsb
mov
sbb
mov
xor
cmp
loopne
inc
rcr
xchg
iret
adc
aad
pop
xorb
in
ret
push
loopne
jo
mov
push
sbb
lock
fsubr
lods
cmpsl
xlat
adc
push
shrb
jl
mov
aaa
aaa
adc
mov
aaa
cmp
mov
lock
adc
loopne
fbld
loop
inc
out
xchg
test
out
and
pop
call
adcb
rorl
mov
push
and
xchg
in
add
or
push
xchg
xor
ret
adc
pop
pop
or
ja
bnd
mov
inc
jo
leave
loope
push
int3
add
add
sahf
or
lea
test
subb
or
push
cmp
mov
subb
fmull
pop
pop
imul
sarb
mov
frstor
jl
inc
sub
pop
jge
mov
cmpsl
mov
es
push
jecxz
fstpt
cmpsb
cmpsb
mov
popa
and
inc
xchg
and
imul
lea
dec
xchg
fcoms
xchg
jl
jo
imul
add
jge
dec
dec
pop
pop
xlat
cmp
fs
push
sub
xchg
jo
pop
shrl
stos
sub
jge
push
adc
add
ret
cmp
jecxz
stc
xorb
ror
shll
and
dec
negl
inc
aad
ljmp
jmp
scas
push
sbb
ret
nop
mov
xor
jb
data16
inc
shlb
fcompl
mov
insl
clc
in
jl
enter
add
xchg
or
loope
lret
mov
or
enter
cmpsl
xor
loop,pn
sbb
xchg
pushf
bound
add
incb
mov
xor
fcmove
repnz
fs
mov
pop
and
sbbl
repnz
xor
in
cmc
popa
jno
mov
mov
mov
dec
hlt
sbb
popa
repz
pop
aas
ja
dec
adc
sub
outsl
fcoml
dec
out
divl
or
jne
out
jmp
adc
mov
sub
std
xor
adc
cmp
sbb
sbb
pop
mov
inc
in
xchg
repz
mov
sub
imul
imul
sahf
or
push
sbb
mov
adc
add
push
xchg
scas
hlt
pop
cli
mov
outsb
out
lcall
cltd
out
jo
hlt
sub
jno
mov
mov
adc
adc
imul
jb
pusha
daa
xchg
cmpsl
xor
pop
or
sarb
mov
cmp
mov
into
pop
mov
jl
subb
jne
and
push
cmp
les
lret
or
jae,pn
jg
addr16
lods
sti
sbb
rol
aam
stc
test
inc
mov
leave
mov
cmp
inc
ja
cs
testb
cmpsb
hlt
or
jle
sti
nop
dec
push
loope
idivl
xor
jbe
lods
ficoml
push
shlb
xchg
inc
adc
jo
jne
mov
mov
or
jne
movsb
enter
je
cmp
sbbb
test
incl
dec
movl
add
xchg
mov
sahf
sbb
mov
int
sub
loopne
push
bound
push
mov
mov
scas
incl
arpl
rorl
inc
pop
jp
jle
aam
add
outsb
xor
aad
push
or
iret
pop
cli
jnp
sub
cmp
and
pusha
aam
leave
cmc
test
pop
cli
mov
sbb
test
xchg
sub
dec
xor
push
das
cmp
repnz
rcrb
adc
jo
lcall
pop
popa
repz
xor
movb
rcll
lcall
sub
inc
nop
pop
push
lods
mov
pop
cld
fnstcw
mov
dec
jns
in
and
mov
leave
cmp
es
loop
add
jle
inc
sub
pusha
scas
push
xchg
sahf
scas
xchg
inc
dec
ret
test
add
adc
scas
int
xor
test
fwait
addps
adc
and
or
dec
fcmovu
hlt
lretw
pop
ljmp
cs
xchg
daa
aad
cmp
popa
negl
outsl
jne
ret
nop
clc
js
dec
dec
jge
ja
mov
imul
mov
rclb
xor
imul
lcall
sub
cmpsl
add
add
and
imul
stos
cmc
cvtps2pd
push
int
add
pop
sub
push
ret
flds
xchg
jl
loop
fs
inc
das
dec
stos
int
inc
call
add
cmp
dec
repz
and
loopne
dec
mov
pop
leave
dec
addb
test
push
xor
lcall
ret
int
pop
es
mov
jge
cmp
inc
cmc
stc
pop
add
dec
hlt
pop
jno
fsubs
jl
adc
pop
cmpsb
adc
jecxz
adc
cwtl
test
mov
adc
je
inc
std
leave
add
xchg
sub
adc
imul
enter
inc
pop
xor
jmp
shl
call
fcmovnu
cmp
xchg
xor
je
mov
jbe
mov
aas
dec
push
jnp
mov
xlat
lret
jnp
mov
mov
inc
std
ss
fidivrl
rorb
sbb
dec
push
add
pop
in
mov
movsbl
inc
mov
or
cmp
jo
mov
leave
adc
test
jo
mov
rcll
fsubs
xchg
dec
xchg
insl
in
rorl
aam
movsl
ret
cmc
mov
lret
sub
outsl
cltd
and
and
adc
add
imul
sub
lods
or
jb
hlt
sub
out
mov
cli
mov
int
dec
push
sarl
dec
adcb
push
dec
das
adc
loope
shlb
shl
scas
jl
in
inc
ss
mov
mov
int
into
jmp
mov
dec
and
int
dec
icebp
outsl
frstor
jb
dec
mov
cmpsb
cmp
lahf
fsts
fdiv
fwait
outsl
cmp
add
cmpsl
repz
xchg
into
lods
dec
subl
inc
mov
jl
inc
pop
sahf
fnsave
fsubrp
pop
cmp
call
cmp
dec
xor
pop
sub
or
ret
pop
mov
cmpsb
mov
or
mov
xor
xorl
jae
lcall
aam
out
pop
push
popa
fstpl
xchg
push
sti
fisttps
jnp
mov
adc
outsb
lahf
ljmp
pop
roll
adc
out
sub
aas
inc
lods
adc
add
sub
into
into
push
or
push
fildl
call
pop
in
stos
lahf
push
mov
aad
daa
nop
vaddpd
mov
loopne
sbb
movsb
jnp
cld
xchg
adc
pop
stc
and
jl
and
mov
mov
sub
rcr
in
xlat
mov
ds
in
dec
test
sub
out
pop
cmc
pushf
lds
sub
fisttps
or
out
pop
dec
cwtl
push
lods
xchg
rclb
sbb
adc
dec
cld
inc
je
mov
xchg
scas
adc
cltd
xor
dec
call
insl
xchg
inc
ds
mov
test
adc
das
cmp
fidivrs
inc
cs
add
mov
mov
or
in
in
fists
inc
je
and
push
dec
fnstcw
int3
hlt
roll
cmpsl
inc
mov
sub
and
sbb
lahf
cmc
les
jl
popa
mov
lods
fs
jecxz
cmp
gs
and
lret
xchg
popf
ja
adc
dec
fcomps
push
test
lds
sub
adc
test
sub
cld
xlat
inc
fwait
sarb
mov
aam
test
insl
scas
pop
cmp
mov
add
popa
pop
imul
mov
inc
jns
push
dec
stos
jnp
push
ficomps
cld
add
out
cs
ljmp
xchg
hlt
jp
add
pop
push
outsl
orb
adc
pusha
imul
xorb
ficomps
mov
icebp
and
fnstcw
inc
into
aam
sbb
sbb
es
and
mov
test
xlat
rep
cmp
adc
jge
and
push
sbb
out
sbb
add
out
and
xchg
mov
aas
leave
xor
push
xchg
dec
mov
push
xchg
adc
jb
in
pop
adc
fsubrl
bound
dec
decl
arpl
xchg
fistps
or
lea
push
int3
mov
rorl
mov
and
adc
push
fwait
lcall
sbb
cmp
fst
out
out
mov
mov
in
sbb
mov
sbb
out
xor
test
out
inc
cmc
ss
adc
jb
mov
aam
je
add
lods
fcmovnb
lds
je
or
cmp
in
pop
pop
sub
pop
call
mov
add
xor
mov
or
mov
mov
fcos
xchg
or
xchg
lea
lods
and
ret
outsl
and
jns
cli
mov
insl
jg
adc
or
shll
stc
cmpsl
or
jns
add
pop
adc
cli
adc
cltd
shll
dec
cmp
jmp
sub
mov
mov
and
out
inc
push
decb
pop
fcomi
dec
dec
cs
fwait
pop
xchg
repz
cmpsl
je
pop
dec
adc
repz
je
pop
adc
jle
daa
mov
xor
mov
fwait
mov
rcll
sbb
aaa
pop
aas
icebp
repnz
adc
lock
mov
clc
std
out
mov
push
ss
roll
inc
adc
push
fists
jmp
repz
xchg
cwtl
fwait
xor
adc
pop
xchg
rcrb
cmp
lret
cmp
pusha
fstps
cmpsb
mov
int
mov
mov
aam
pusha
jne
imul
fisubs
mov
push
adc
xchg
clc
in
fisubrs
jp
jle
mov
jl
lods
xchg
aas
xor
mov
push
mov
jns
rcll
sub
subl
mov
xor
sub
in
sub
push
sbb
stos
push
stos
fdivrl
bound
mulb
or
rclb
inc
andb
sbb
mov
jmp
cmpsb
push
mov
push
pop
push
ret
pop
push
lret
popa
mov
xchg
or
cmc
stos
pop
jno
and
subl
popa
mov
xor
call
icebp
sbb
xchg
cmpsl
fs
inc
loop
push
scas
jno
test
mov
inc
in
jnp
dec
cmc
adc
gs
popa
add
hlt
push
scas
in
sbb
push
pop
ss
pushf
fnsave
jl
lea
les
test
insb
adc
mov
jmp
out
mov
enter
cmpl
mov
popl
iret
mov
fiaddl
cltd
rolb
pop
test
mov
inc
xor
mov
loope
fwait
out
out
and
pop
jecxz
mov
iret
push
enter
push
mov
repnz
sub
jns
je
mov
and
sahf
xchg
or
mov
add
jno
lds
cltd
mov
pusha
out
pop
push
cs
mov
ds
mov
pop
dec
test
popf
add
popf
lret
mov
mov
cmc
jmp
cmp
iret
jge
or
xor
push
aas
into
sahf
xor
xlat
out
adc
adc
jmp
or
les
outsl
pop
in
or
and
fwait
cmc
cmpsl
xor
out
int3
movsb
jecxz
cmp
rcll
and
or
repz
mov
out
adc
mov
jp
into
push
repz
call
jbe
jb
xor
sbb
sar
cmc
mov
pop
cmp
int
fwait
nop
xlat
dec
and
movsl
mov
bound
in
fs
out
mov
mov
jnp
add
dec
in
push
add
dec
cmpsb
pop
in
mov
push
inc
mov
adc
cmp
or
stc
jp
cmp
xchg
jl
sbb
je
sbb
cmc
sbb
jnp
enter
adc
mov
in
fs
pushf
xor
leave
enter
mov
or
fbstp
fbld
adc
lret
gs
mov
out
xchg
or
xchg
push
jge
aam
outsb
leave
enter
sub
mov
cmp
das
sub
jmp
aas
mov
addr16
xchg
out
andl
stc
sbb
lcall
adc
sbb
les
adc
cmpsl
fcmovnb
xorb
cwtl
inc
adc
loope
mov
mov
and
test
fdivl
lret
mov
mov
fisttpl
sbb
daa
xchg
inc
cmc
inc
repz
or
scas
ja
test
out
insb
dec
or
jecxz
jl
pop
loop
sub
sbb
or
or
scas
push
js
out
rorb
bound
jbe
xchg
aas
jecxz
mov
repnz
adc
mov
jne
lock
clc
xlat
mov
pop
ljmp
and
mov
insb
sbb
daa
cltd
hlt
add
fs
inc
mov
or
mov
enter
shlb
into
push
cmp
sub
in
inc
dec
enter
hlt
data16
insb
js
loop
lods
loop
imul
mov
push
rcr
out
in
call
jae
add
and
roll
xor
mov
outsl
fcmovnbe
fldenv
mov
out
push
cli
dec
xor
aad
jge
add
in
pop
cmp
and
rclb
fdivr
int
sbb
lea
inc
movsb
mov
add
sbb
cmp
inc
mov
fldt
repz
fidivrs
jne
xchg
insl
insl
ror
xchg
sbb
fdivl
addb
lods
inc
add
lods
fs
icebp
inc
imul
inc
inc
shrb
xor
lcall
sahf
cmpb
add
hlt
notb
jnp
fildll
mov
stc
pop
sub
sub
jmp
sub
or
sub
dec
sub
cwtl
push
ret
inc
cltd
inc
xchg
push
adc
mov
movsb
xor
cmp
inc
jb
mov
test
js
loop
mov
sub
sbb
fs
scas
mov
je
mov
fldcw
push
inc
push
ljmp
addr16
inc
mov
xchg
mov
pop
pop
sub
xchg
push
jge
push
cwtl
scas
addr16
dec
cmp
das
jo
fldcw
and
pop
in
xor
mov
pop
popf
arpl
mov
gs
pushf
sub
xchg
inc
sub
fsub
adc
negl
push
pushw
stc
jnp
in
and
xchg
lea
and
jae
in
ret
push
div
lahf
sti
xor
cltd
imul
xchg
subb
add
add
or
stos
popf
shl
xor
insb
ds
in
test
fxsave
lahf
or
push
int3
sub
and
fbld
lcall
cmpb
fists
stos
push
pop
je
mov
or
pop
or
push
push
sub
mov
aam
aam
pop
xor
push
outsb
inc
sti
rcrl
clc
int
imul
add
mov
mov
sbb
sub
mov
mov
or
pop
iret
mov
mov
cwtl
xchg
das
sbb
push
pop
shll
mov
push
inc
sbb
mov
push
test
mov
pop
pop
sahf
out
fs
loope
addr16
push
cmp
idivl
mov
xchg
enter
js
stos
xchg
leave
and
lods
or
dec
repz
rorl
dec
adc
sub
popf
pop
mov
mov
lock
and
hlt
mov
test
dec
lret
push
das
lods
xor
mov
cltd
mov
arpl
testb
cmpb
cmp
xchg
jg
test
call
shlb
js
mov
sbbb
mov
sub
clc
jl
imul
stos
ljmp
into
dec
mov
neg
cmpl
mov
or
fwait
icebp
cmp
es
and
xor
or
movsl
shr
mov
mov
faddl
pop
fldl
adc
stos
mov
or
xchg
pop
sarl
stos
mov
nop
and
push
sbb
iret
or
sub
loop
stos
stos
jb
cmp
jno
fwait
cmp
jns
addr16
cmpsb
push
faddl
jle
ret
push
push
addb
popa
bound
and
sar
shlb
fwait
sbbl
aam
mov
adc
int3
push
ss
jne
fcmovb
popf
jmp
in
lahf
adc
mov
mov
inc
mov
dec
mov
lods
inc
pmulhw
and
mov
out
loop
arpl
and
call
dec
aaa
mov
icebp
rclb
imul
in
mov
jle
xlat
adc
shll
pop
rol
jecxz
js
movsl
mov
push
xchg
xlat
inc
out
mov
mov
push
mov
push
cmp
inc
call
shlb
ja
sbb
mov
add
xchg
mov
push
and
clc
sarl
sub
sbb
xor
leave
sbb
repnz
jmp
mov
pop
stos
pop
xor
xchg
jmp
push
ljmp
lods
adc
fcomps
or
movsb
sub
pusha
cwtl
js
stos
add
mov
add
lods
or
int
repnz
lods
in
into
jle
cmp
dec
sub
mov
push
inc
ret
fcom
push
jb,pt
scas
xor
dec
notb
xchg
je
icebp
in
push
xchg
pop
dec
push
roll
cmp
jecxz
inc
sub
leave
stos
ret
imul
or
scas
cmc
jbe
xchg
or
lods
popa
leave
mov
cmpsb
cmp
lea
sbb
stos
xor
mov
inc
lds
pop
aad
imul
mov
mov
out
mov
push
addr16
fadd
ss
negl
out
das
mov
jg
cwtl
jo
pop
popf
iret
adc
mov
rcl
and
cmpsl
movsb
rol
pop
loope
mov
add
andb
repz
jmp
fwait
jl
inc
loope
pop
xchg
imul
sbb
ds
popf
xchg
cltd
loope
sbb
dec
add
icebp
inc
jmp
xchg
fnstenv
adc
mov
sub
push
ret
push
xor
mov
push
shll
mov
adcb
rcrl
cmp
or
fs
sub
and
and
fwait
scas
pop
adc
lock
push
jne
rcl
insb
mov
mov
fildl
pop
xlat
inc
imul
cld
iret
lret
adc
je
fdivs
rcrl
add
loop
jmp
push
pop
push
push
jg
cmp
repnz
mov
adcl
ret
xor
ds
popa
sub
je
stos
cmovl
mov
loop
mov
mov
ja
push
loop
ficompl
jns
fldt
popf
in
mov
es
stos
outsb
insl
pop
jbe
out
sub
ds
pop
push
daa
fcmovnbe
pop
std
test
jp
fxch
faddl
in
jp
xchg
pop
sub
add
and
nop
mov
xchg
test
cltd
jle
arpl
lock
mov
daa
addr16
dec
pop
mov
or
test
mov
jnp
jge
out
or
int
cmp
in
jg
shlb
push
sbb
ficoms
sbb
pop
pop
ljmp
jge
clc
rclb
popa
out
mov
movsl
mul
fldt
cmpsb
cltd
mov
sti
dec
xor
xchg
dec
loope
xchg
sti
or
and
jecxz
pusha
mov
clc
pop
ret
es
outsl
jl
pop
pop
mov
and
aaa
sbb
mov
push
push
push
mov
push
std
in
pop
or
mov
pop
mov
adc
push
mov
pusha
cmp
push
je
pop
rorl
imulb
imul
cs
das
rcrb
cwtl
jbe
adc
inc
std
sbb
push
out
and
lcall
aam
sbb
scas
adc
cmp
add
inc
mov
mov
in
inc
mov
leave
pop
dec
and
cmp
mov
mov
jnp
shlb
cmpl
add
push
and
pop
js
mov
push
fnstcw
mov
cmc
fcomip
push
scas
pop
mov
ret
cld
cmpsl
sub
jp
xchg
cmp
icebp
std
call
mov
jp
or
or
shll
jb
sahf
repnz
or
dec
fs
inc
mov
popa
mov
fldcw
test
push
cmp
int3
add
ja
inc
int
cli
mov
ja
lock
cli
cmp
scas
or
sub
lock
orb
xchg
dec
aam
mov
pop
mov
mov
notb
mov
jns
fisttpll
pop
dec
adc
xchg
mov
pop
mov
ljmp
lods
xchg
jno
inc
call
mov
jl
adc
jg
cli
call
popa
dec
pop
fldenv
or
cmp
dec
and
cmp
and
hlt
lock
addr16
lods
stc
and
test
jmp
cmp
pushf
xchg
sbb
rolb
mov
subb
or
insl
inc
xchg
pop
in
mov
sahf
pop
dec
add
sbb
outsl
push
xchg
cwtl
out
addl
leave
push
mov
sahf
loop
fldenv
sub
pusha
xchg
jns
mov
lahf
mov
stos
dec
cmp
shll
mov
test
fldt
sub
loope
shll
adc
cmpsb
mov
lods
nop
cmp
sbb
xchg
fldl
mov
sbb
test
inc
aad
push
dec
mov
and
adc
test
sub
pop
mov
mov
scas
cmpsl
jns
add
cmp
cmp
cmpsl
push
adc
mov
adcl
push
or
push
xchg
in
movb
xchg
push
std
jl
lcall
fidivrl
adc
std
lret
popa
and
push
int
add
iret
call
sub
push
sbb
popl
rorl
idivb
fs
pop
pop
addr16
xor
outsb
rolb
gs
xchg
sbb
push
mov
sarl
xchg
jecxz
or
or
in
sub
sub
mov
call
into
push
push
push
jmp
out
push
pop
jnp
jmp
repnz
xchg
add
or
imul
adc
jno
xor
cmp
sbb
cld
mov
push
and
add
jnp
sahf
data16
lcall
insb
pop
mov
adc
xor
mov
jmp
das
cwtl
pop
sbb
outsl
pop
add
out
sbbb
fildl
cs
insl
fstps
and
loope
push
outsb
or
sbb
or
dec
les
or
aam
sbb
push
mov
jp
jle
data16
rclb
pop
stos
push
sub
enter
xchg
mov
pop
mov
jbe
jb
pop
mov
ret
mov
pushf
xchg
or
or
adc
movsl
ss
nop
sbb
lcall
xor
sub
movb
pop
dec
sub
inc
pop
cmp
rclb
add
or
lret
insb
or
loope
mov
test
pop
into
test
mov
fwait
cmc
inc
jno
mov
fldt
sbb
movsb
scas
push
jecxz
jno
jbe
and
jge
mov
fisubrl
dec
sbb
loope
jo
pop
mov
repnz
outsl
adc
mov
js
lahf
or
lds
jl
jmp
sbb
mov
popa
inc
lea
pushf
std
pop
add
push
fmulp
icebp
sub
int3
and
sub
push
xchg
rcrl
out
push
xor
inc
out
arpl
insl
cmp
mov
lock
cmpsl
test
sbbb
sbb
adc
push
in
addr16
xchg
nop
icebp
hlt
movsb
inc
test
mov
cmp
int
je
inc
dec
dec
jne
std
adc
dec
sbbb
es
jle
inc
in
sub
and
dec
insl
jbe
adc
sti
aad
sbb
testl
icebp
iret
popa
or
or
in
inc
mov
jne
or
sarb
push
repnz
in
jnp,pt
lea
popw
mov
ss
mov
mov
or
fistpll
and
imul
mov
dec
inc
push
xlat
fwait
cmpsl
mov
popf
mov
dec
cmp
mov
insb
pop
mov
leave
push
mov
and
rclb
fdivl
mov
pop
out
inc
ret
inc
cmp
add
push
xor
xchg
test
std
add
mov
aaa
test
dec
adc
push
or
xchg
xchg
out
add
lods
pop
fsubrs
pusha
pop
xlat
mov
xor
movsb
sub
ds
cmp
xchg
and
lock
mov
jb
xchg
adc
mov
fsubs
aad
cmpb
hlt
mov
mov
sub
clc
pop
pop
rorl
lds
xchg
push
arpl
mov
in
mov
sbb
sti
lss
push
loopne
scas
pop
aaa
sbb
test
adc
pushf
mov
aam
xrelease
clc
aad
call
sahf
push
adc
xchg
push
xlat
cld
pop
ret
mov
es
xor
popf
lock
ja
out
repnz
sub
rorl
pop
lock
out
sub
int
sbb
faddl
mov
xor
ret
dec
jnp
fisubs
mov
push
or
stos
pop
adc
xor
je
rclb
adc
jp
ret
dec
iret
out
cmc
aad
cwtl
sbb
int
les
add
icebp
movsl
pushf
pop
loopne
lods
jno
jne
add
push
cmp
adc
sahf
pusha
imul
pop
in
test
pop
outsl
mov
xchg
test
not
stos
lock
mov
popa
pusha
jae
mov
push
outsl
push
cmpsl
dec
movsb
mov
lcall
loopne
cmp
js,pt
stc
jbe
mov
cmp
jbe
fcmovnu
mov
sar
arpl
filds
xchg
data16
fldcw
cli
push
test
mov
xchg
mov
pusha
popf
jmp
cmp
xor
dec
pushf
stc
adc
pop
aas
cmc
push
jb
hlt
bound
call
nop
ja
push
push
cmc
int
mov
sub
rcrl
mov
mov
lahf
mov
or
je
and
adc
loopne
out
orb
mov
xor
insl
or
push
dec
iret
arpl
cwtl
adc
add
stos
dec
lahf
mov
jp
icebp
out
fstl
adc
cmp
mov
in
insl
icebp
sub
stc
in
in
sbb
jo
ds
addl
pushf
ljmp
loop
cs
jae
and
pop
stos
in
pusha
sahf
adc
fdivl
jle
push
out
add
ret
jb
ds
leave
inc
out
fmull
mov
and
push
mov
loopne
aam
lea
loop
dec
mov
mov
push
and
cs
mov
insl
mov
mov
nop
jmp
xchg
pop
pushf
jle
xor
outsl
jle
push
aam
mov
test
stos
je
sbb
inc
lret
add
dec
or
fstps
hlt
xor
scas
push
inc
std
xor
mov
mov
cld
xchg
jp
scas
lods
pop
jnp
push
movsl
cmc
fsub
std
push
cmp
out
cld
cmp
xchg
in
in
jmp
cmp
mov
mov
clc
inc
sub
xor
rcrl
xchg
and
arpl
cmp
xchg
xor
adc
das
fldt
xor
shrb
adc
dec
xor
sbbb
xor
dec
popf
cli
lcall
testb
inc
imul
sbb
in
sbb
mov
xchg
fstp
cpuid
outsl
in
fcomp
aam
push
cmp
aaa
cli
pop
enter
scas
cmp
push
out
and
cld
inc
sbb
addps
cmp
int
rep
shll
ja
cmpsb
ror
loopne
pop
cmp
sbb
push
xchg
cmp
or
or
mov
lods
push
xchg
adcb
das
lret
loopne
pop
push
sbbb
and
loop
push
pusha
lret
dec
inc
pop
pop
mov
cltd
mov
popl
popa
notl
dec
cltd
pusha
inc
xorl
scas
hlt
jo
cs
fistps
cmc
stos
jge
enter
cs
incl
sub
jne
mov
stmxcsr
jns
mov
pop
dec
fbld
adc
mov
mov
pop
jno
or
stc
mov
fsubs
pop
mov
std
jbe
rcl
xchg
xorl
inc
cmp
ljmp
insl
cmpsb
in
mov
ljmp
jl
pop
mov
mov
je
in
xor
mov
into
stos
sub
aad
scas
push
icebp
das
imul
stc
adc
xlat
push
jo
cmp
andb
loope
mov
das
push
sub
in
sub
jae
ffree
aas
mov
jp
sub
ret
push
mov
xor
pop
push
mov
sub
lock
dec
inc
popf
add
in
cli
es
test
fsubrl
xchg
pop
jge
mov
stos
gs
imul
mov
pop
divb
dec
cmpsl
mov
push
nop
mov
xchg
sti
sub
sub
xchg
scas
lds
mov
test
scas
les
sbb
xorl
insb
and
in
stos
mov
lods
sahf
mov
sub
pop
jl
imul
je
dec
imull
nop
outsb
xor
jge
ljmp
jne
les
xor
mov
aad
xor
arpl
ss
and
repnz
sub
dec
jb
sarb
int3
loope
pop
xchg
mov
cmp
xchg
sub
sbb
dec
rcrl
fldt
loopne
push
push
dec
out
pushl
fwait
and
lret
lret
rcrb
mov
mov
enter
fistpll
dec
hlt
xor
sahf
mov
es
push
sarb
cmpsb
push
aas
jne
pop
fcmove
lods
mov
fdivl
mov
xlat
pop
cmp
or
test
cmp
sub
fwait
xchg
in
inc
mov
xor
inc
dec
int
jbe
jl
aad
aam
cli
sbb
push
cmp
inc
or
ror
fcompl
pop
repnz
inc
xor
imul
call
jle
or
movsl
xchg
repz
dec
push
call
push
xor
outsl
jmp
jns
pop
xchg
das
enter
lcall
sub
mov
div
and
push
test
cs
lds
push
jbe
movsb
inc
loope
aam
push
xor
fidivrs
call
stos
push
mov
in
outsb
mov
insl
inc
xor
xchg
xor
mov
repz
push
mov
test
mov
push
push
pop
jo
xlat
mov
push
cs
xchg
mov
data16
inc
icebp
sub
mov
adc
mov
lea
adc
icebp
xor
fisubrl
ret
add
dec
jl
xchg
push
and
and
sub
andb
cmc
idiv
inc
lock
imul
ds
stos
sub
xor
jmp
hlt
mov
shll
fiaddl
xor
pop
and
inc
jnp
push
pop
dec
fsubs
data16
or
mov
jns
icebp
jae
push
dec
enter
jmp
mov
mov
mov
enter
lods
fs
sbb
or
arpl
or
and
push
adc
popf
icebp
jnp
pusha
dec
nop
xor
icebp
push
push
mov
push
inc
add
aad
inc
clc
sub
adc
imul
lods
dec
inc
or
and
aam
sub
jno
mov
leave
sub
dec
insb
cmp
mov
push
pop
sub
in
pushf
dec
add
cmpsb
xor
es
inc
mov
inc
add
jb
mov
xlat
xor
arpl
mov
sub
int3
jbe
lock
add
sub
gs
test
cmp
testb
ljmp
inc
jae
mov
enter
pop
xchg
cmp
lret
lret
aas
sub
push
adc
xchg
or
mov
dec
add
mov
sub
push
in
adc
mov
sbb
call
ret
sub
les
lahf
inc
int3
jbe
cmpsl
push
cmp
icebp
divl
pop
test
scas
add
ljmp
enter
stos
adc
pop
sub
pop
cwtl
and
pop
xchg
cmpl
adc
mov
add
xor
jg
xor
sbb
adc
fld
mov
roll
adc
mov
arpl
mov
orb
mov
icebp
clc
leave
xor
jecxz
outsb
xor
mov
mov
sar
lret
fbstp
mov
add
cmp
nop
ret
js
rorb
jb
pop
into
aad
aas
daa
int3
fnstsw
sub
pop
aaa
cld
sbb
mov
sbbb
or
jo
and
xchg
sbb
mov
ret
push
jbe
std
push
push
sbb
decb
aas
shlb
sbb
pop
and
loop
jl
jg
push
jl
mov
xor
shrb
ret
fs
ds
negl
inc
inc
add
flds
hlt
je
inc
and
cmpsl
fucomp
gs
dec
fs
sbb
sti
jno
mov
xor
sub
rcrl
cmp
hlt
cmpsl
jne
lods
not
leave
je
xlat
and
test
xchg
xchg
loop
test
imul
add
and
rcrb
xchg
inc
insl
mov
daa
ret
mov
cwtl
sub
inc
jno
mov
out
sub
in
xchg
or
mov
mov
clc
xor
add
pop
cs
pop
mov
sub
rcll
sub
cmpsb
popa
rorb
xchg
sub
xchg
andb
hlt
inc
pop
mov
int
fists
ds
mov
lret
push
and
shl
lods
xchg
fsubl
cmpsb
fsts
and
js
inc
mov
pop
cmp
insl
sbb
rcrl
rcrl
lcall
mov
xor
mov
aam
fld1
icebp
jg
rolb
mov
fstps
xor
or
mov
outsb
out
cmp
rorl
cmpsl
scas
adc
xchg
data16
mov
lods
xor
sub
sub
data16
pusha
sti
test
jmp
daa
insl
push
push
test
and
pop
pop
xlat
shrb
adc
dec
je
jno
cwtl
mov
xchg
and
mov
addr16
sarl
movsl
mov
shll
mov
lock
sbb
js
ret
iret
popl
xor
dec
outsb
fistps
and
add
or
push
int3
mov
movsb
es
daa
pop
push
and
dec
dec
ret
mov
iret
icebp
out
rclb
dec
cmp
inc
out
xchg
inc
ljmp
movsl
je
add
xor
shrl
test
push
aam
pop
lret
es
pop
cmp
jmp
jecxz
aas
xlat
pop
test
movsl
aaa
out
add
sbb
jbe
je
daa
cmp
xchg
repz
shl
shlb
sbb
push
mov
enter
rolb
fiadds
cmp
fwait
pop
js
add
punpckhdq
dec
and
push
arpl
data16
lret
sub
fistps
jae
sahf
cmp
pop
dec
shlb
stos
push
mov
rcrb
decb
push
pop
nop
dec
add
jo
cmp
xlat
test
dec
jl
fs
inc
ret
mov
xor
jl
dec
mov
jle
sub
xchg
xlat
pop
push
sbb
adc
inc
xlat
add
loopne
sbb
pop
out
add
jmp
jmp
insb
mov
sahf
in
cmp
js
ja
fs
xchg
lret
add
fucomp
add
loopne
mov
ds
cmc
adc
or
outsl
add
shl
push
in
push
nop
xchg
stos
jl
mov
lcall
jno
sbb
sarl
push
scas
pusha
push
aad
popa
push
js
shll
popa
ljmp
faddp
mov
adc
mov
mov
pusha
pop
imul
les
lea
mov
xor
leave
pushl
pop
add
loop
or
jecxz
push
or
pop
fdivr
or
jg
dec
outsb
fidivrs
rcrl
push
je
mov
je
mov
dec
imul
mov
xlat
jbe
imul
lahf
push
jno
push
enter
out
outsb
jp
add
cmpsl
bound
mov
mov
ret
xchg
and
clc
mov
and
pop
pop
mov
add
pop
imul
mov
mov
test
mov
and
lret
loope
leave
iret
dec
aas
mov
xchg
sahf
ds
xchg
inc
fldlg2
and
mov
cmp
popf
xor
ds
xchg
nop
add
mov
mov
sub
and
call
inc
jecxz
enter
aad
cmp
sbb
sub
js
fs
cmp
push
fcomps
pop
sub
ret
cltd
mov
test
fsubrs
scas
shlb
int
inc
cli
dec
das
inc
mov
lock
push
enter
jg
fwait
xor
jecxz
xchg
sbb
mov
call
xchg
test
xchg
dec
or
mov
mov
pop
cld
jns
cmp
xchg
ds
cwtl
adc
dec
dec
adc
sub
fisttpl
pusha
mov
jns
add
mov
inc
lret
cmp
push
outsb
dec
in
jmp
jbe
cli
jg
lock
enter
rorb
adc
shlb
pop
aaa
pop
imul
and
add
je
das
insl
orl
pop
je
dec
fwait
cmpsl
dec
push
push
sbb
dec
pop
in
dec
shlb
pop
clc
pop
xchg
cmp
out
iret
inc
sub
in
dec
das
out
add
cmp
loopne
xor
cmpsb
sub
mov
test
dec
jp
mov
sbb
ds
mov
addr16
cmp
mov
mov
iret
mov
cmp
mov
lret
adc
mov
fwait
lods
lcall
cmpsb
dec
in
pushf
pop
rorl
inc
lret
cmp
pop
push
pop
jmp
and
mov
xlat
jecxz
lods
arpl
enter
push
or
test
es
aaa
lods
shlb
faddl
push
into
movsl
fdivrl
or
sti
cltd
fisubs
lea
mov
aaa
popf
pop
xchg
pop
cmp
les
mov
or
ret
loope
xlat
xlat
push
lret
popa
xor
cwtl
pop
and
cli
arpl
jne
inc
cmp
divl
das
ss
cwtd
mov
sahf
xchg
pop
jmp
jecxz,pn
sub
dec
out
out
cli
mov
cmp
mov
push
gs
lahf
lds
aad
push
add
data16
xchg
jns
aad
aam
xchg
cmc
cmc
mov
mov
in
push
dec
jecxz
imul
xchg
mov
stos
decb
sbb
jns
jo
sbb
jb
fstps
sub
inc
inc
cmc
cmp
out
push
pop
sbb
or
insb
pop
jno
aam
and
into
xor
push
fstps
aam
out
inc
mov
xchg
std
outsb
xchg
into
cltd
ficompl
cwtl
mov
lods
fs
or
push
fnstcw
mov
ret
out
cmp
sub
mov
xor
sub
lret
xchg
insb
addr16
js
lcall
lret
stc
in
in
ljmp
xchg
loopne
xor
lret
ss
call
inc
inc
test
mov
insl
sub
enter
or
or
idivl
or
jbe
and
cltd
lods
cmpsb
scas
adc
sbbb
adc
mul
or
loop
leave
and
enter
or
movsb
sbb
add
sbb
xorb
mov
lahf
mov
mov
pop
cli
inc
imul
outsb
cmp
push
lods
mov
or
int
sbb
xchg
pusha
js
call
push
push
out
scas
sub
data16
inc
xchg
mov
dec
jmp
adc
pop
dec
add
hlt
lahf
scas
mov
jl
sbb
imul
mov
ret
not
mov
cmpsb
test
and
xor
fwait
jae
push
cmp
push
ret
in
xchg
popf
or
push
lret
into
xor
xchg
lcall
fsubrs
jmp
clc
cld
inc
sbb
sub
push
pop
movsl
outsl
jne
sbb
lea
sbb
or
sarl
sbb
das
sbb
subb
pusha
mov
ljmp
add
jg
lds
lret
xchg
mov
adc
inc
pop
lahf
jecxz
test
sti
push
and
xor
les
cld
sub
mov
movsl
jge
sbb
mov
cwtl
jae
sbb
add
adc
mov
fwait
adc
mov
cmp
pop
mov
jb
mov
out
dec
fsubrs
and
jl
mov
test
mov
incl
popa
jl
push
popf
fsubrl
mov
mov
sub
and
mov
and
push
das
gs
sub
daa
ficompl
or
lcall
inc
popf
pop
clc
or
aam
loope
or
adc
into
popf
sahf
jbe
sbb
lds
nop
loop
push
ljmp
mov
add
frndint
push
lock
imul
mov
testb
rcrl
aaa
cmp
imul
mov
mov
out
mov
cmp
xor
arpl
ud1
insb
xor
jp
mov
pop
lahf
pushf
lock
mov
add
xchg
xor
sub
inc
and
out
xchg
cwtl
or
sbb
je
jg
add
pop
or
fstl
mov
mov
hlt
mov
cs
jl
movsl
xchg
cmpsb
add
mov
push
nop
sbb
shrl
mov
fsts
add
stos
adc
add
out
mov
jge,pn
dec
or
out
jle
mov
adc
inc
lods
push
xchg
mov
mov
repz
sub
inc
insl
push
sbb
movsb
jl
cmp
jge
mov
mov
pop
lcall
clc
mov
call
dec
mov
adc
notl
xor
push
sbb
push
dec
and
add
dec
scas
les
jl
ja
adc
ds
sbb
sub
dec
mov
dec
cmp
stos
bound
maxps
adc
mov
hlt
dec
xor
rcl
loopne
dec
insl
stos
test
xor
in
ljmpw
xlat
pop
fucom
mov
push
push
sub
jbe
mov
mov
divb
or
inc
jl
inc
fs
mov
mov
ljmp
loop
mov
jecxz
outsl
ss
push
adc
pop
outsb
adc
loope
hlt
add
ljmp
adc
cli
dec
mov
adc
not
push
jg
inc
inc
cmp
loope
out
sbb
in
nop
xchg
stos
imulb
and
mov
je
daa
xlat
push
sbb
xor
add
dec
xor
jecxz
xchg
stos
xor
popa
stos
mov
jne
adc
pop
jno
add
dec
add
repnz
sub
xchg
js
insb
pop
bound
mov
aas
or
popa
lods
xor
fdivl
pusha
ss
add
clc
jno
loopne
imul
lods
imul
mov
mov
mov
push
adc
divl
mov
mov
fwait
cmp
jle
leave
and
cmp
nop
repnz
cmc
jo
movl
sbb
ljmp
int3
sub
clc
pop
xchg
and
and
je
std
clc
adc
in
out
in
mov
imulb
push
call
cmpsl
loop
sbb
aaa
scas
iret
outsl
sub
sbbl
push
imul
icebp
loopne
jo
mov
mov
cmpsb
insb
stos
mov
mov
test
xor
loop
iret
test
adc
pop
test
add
jmp
jnp
mov
xor
imul
and
add
jae
mov
shll
pop
xor
push
inc
insb
xchg
cmp
iret
dec
andb
into
and
inc
test
subl
leave
pop
push
push
fistpll
add
clc
dec
test
adc
add
pop
sbb
fstpt
jecxz
pusha
fnstsw
mov
inc
in
push
add
ss
aas
cltd
adc
rcr
lds
adc
adc
jp
mov
andl
rcll
dec
dec
pop
mov
mov
push
jne
xor
je
mov
arpl
pop
jge
std
nop
shlb
fildl
mov
in
int
loope
decb
pop
mov
mov
cmpsb
sbb
and
cmpsb
mov
push
lea
stos
cmpsb
fs
xchg
ret
mov
dec
push
and
in
lcall
sub
mov
movsl
hlt
push
test
jnp
insl
fucomp
fisttpl
jo
es
sub
xchg
xlat
jns
lea
sub
jmp
pop
lds
in
push
es
repz
lahf
negb
cmp
cmpsl
push
sub
ret
cmpl
mov
push
in
cmc
or
out
jp
movsl
rorl
xor
adc
lret
push
and
ljmp
shl
pop
mov
sub
add
cli
and
stos
test
rcr
ljmp
mov
mov
xchg
dec
jae
outsb
sbb
sub
jl
pshufw
pushf
aad
test
push
pop
pushf
push
xchg
clc
jb
sahf
sub
aaa
xor
jo
pushf
xor
push
test
sar
movsb
xchg
les
adc
scas
mov
or
out
inc
insb
or
lock
lret
or
scas
filds
iret
xchg
inc
or
loopne
orl
mov
stc
sub
xchg
cltd
int3
add
adc
push
and
or
mov
mov
add
inc
xchg
jl
pop
pop
inc
es
andb
cmpsl
xchg
mov
sub
pop
add
pop
aam
xor
mov
cmp
sar
push
sub
clc
mov
xchg
or
clc
dec
push
fcompl
arpl
fidivrl
faddp
ss
mov
or
xor
mov
add
dec
adcl
pop
popf
adc
ja
outsl
cmp
sbbb
jae
push
dec
mov
mov
arpl
js
and
inc
fwait
inc
loopne
mov
stos
insb
out
mov
arpl
int
sbb
enter
jmp
loop
mov
pop
bound
arpl
jp
mulb
sbb
jle
iret
and
fcoms
shll
lcall
ret
sub
jbe
stc
sub
sbb
ret
adc
pop
adcl
cmp
nop
xor
fimull
ja
int
adc
jge
push
fwait
xor
shrl
mov
mov
mov
cld
sub
in
cmp
xchg
sub
dec
mov
out
or
ror
jl
mov
lods
cmp
das
int
adc
std
pop
mov
push
ret
lahf
sbb
je
push
cmpsl
clc
adcb
cwtl
jmp
call
enter
dec
jge
inc
xor
sbb
pop
cmp
inc
imul
cmp
cmp
movsl
repz
out
pusha
hlt
je
and
mov
ss
mov
movsb
jno
xchg
aaa
mov
inc
push
mov
jle
mov
jl
jns
div
jmp
lret
or
push
mov
pop
sub
imul
repz
mov
jnp
aaa
mov
dec
out
sbbl
mov
fcmovnu
sti
fcmovnbe
xor
mov
adc
add
add
test
hlt
in
dec
xchg
pop
and
icebp
adc
sbb
xor
xor
inc
popa
add
aas
test
fimull
mov
decb
jb
aaa
or
jp
icebp
lods
sub
add
mov
jbe
xor
sbb
andb
mov
fs
mov
loopne
jbe
push
lock
mov
js
dec
mov
adc
lret
sub
mov
subb
pop
and
jge
pop
fisubrl
push
xor
icebp
frstor
mov
sbb
push
jae
push
mov
sub
xchg
add
cvttps2pi
repnz
mov
rcll
test
cltd
fidivrs
inc
inc
jg
or
rolb
aaa
cli
aas
outsb
into
mov
xor
popf
pop
lock
mov
out
mov
add
fcompl
xchg
leave
adc
repz
rol
lock
jg
dec
sbb
adc
ret
clc
sbb
push
mov
inc
adc
pop
es
lret
dec
fsubr
insb
dec
and
jne
out
bnd
movsl
rolb
or
cmpsl
xor
iret
jo
lods
jne
fs
and
hlt
or
and
leave
pop
xor
sub
cltd
jg
bound
aam
cmp
mov
dec
xor
hlt
push
mov
push
fbstp
insb
mov
insb
clc
shlb
outsb
test
or
in
xchg
dec
das
mov
data16
mov
out
pop
mov
int
lods
pop
out
fcmovnb
icebp
push
es
rcr
dec
ret
adc
movsb
pop
outsb
push
and
stos
pop
lret
ds
sbb
cmp
mov
dec
es
jg
movsl
iret
jb
data16
mov
inc
mov
addr16
adc
xchg
xor
xchg
ss
bound
adc
pop
cltd
lds
mov
inc
into
lret
cmp
aas
sub
mov
xor
mov
push
mov
cmp
mov
fxam
xchg
or
out
jle
test
jo
sahf
jecxz
insl
aad
ret
xor
dec
lahf
loopne
inc
fadd
jne
mov
push
ret
add
jecxz
dec
or
out
jb
ret
xchg
in
movsl
sbbb
test
xor
sbbb
sub
mov
loop
pusha
xchg
mov
cmp
inc
mov
mov
add
mov
or
dec
call
sarl
fnstcw
fwait
popf
clc
ret
pop
mov
inc
push
add
pop
movsb
push
mov
mov
jge
popf
orb
sti
cmp
aad
xchg
push
sub
adc
jne
mov
shrl
add
out
push
negb
sbb
push
push
xchg
scas
movsl
mov
jnp
std
cltd
push
icebp
adc
imul
clc
sub
dec
push
imul
sti
xor
jns
push
cli
or
dec
xchg
pop
cmp
sbb
xchg
adc
pop
and
xchg
loope
pop
fdiv
sub
adcb
in
sub
jnp
data16
sbb
xchg
mov
andl
push
scas
pop
enter
mov
jl
xchg
xor
jl
lcall
fmuls
pop
or
and
cmp
cltd
push
cmp
jmp
sub
arpl
add
mov
mov
test
insb
sub
popf
xchg
cmpsl
lahf
mov
jno
sti
shlb
mov
imul
jp
shlb
inc
and
nop
sbb
out
fwait
ljmp
mov
lods
jb
outsb
adc
stos
adc
loop
cmp
idivb
insb
shlb
pop
pop
sub
es
test
lret
push
jne,pt
sub
lods
sbb
mov
cmp
fcmovnb
std
sbb
push
rcll
insl
leave
pop
cmp
loope
cmp
dec
mov
nop
scas
js
ljmp
outsb
cli
inc
dec
loope
sub
cmpsb
pushf
mov
cmp
push
iret
stos
shrl
paddb
pop
data16
add
loopnew
and
add
negl
fsub
xorl
stos
mov
idivl
pop
mov
mov
pop
sbb
add
popa
test
dec
and
jmp
mov
push
sub
xor
pop
inc
les
adc
or
pop
push
cmc
inc
mov
orl
loop
insl
mov
test
bndldx
sbb
nop
add
insl
inc
ret
sarl
pop
adc
add
shlb
pop
mov
out
and
jmpw
mov
xchg
lods
cmc
inc
mov
loope
pop
mov
inc
mov
andl
out
fisubrs
repz
jge
rclb
movsl
pop
fildl
add
cmp
xor
adc
clc
jne
andb
icebp
ret
pop
movsl
xchg
xchg
fcomp
out
cmp
outsb
inc
add
xorl
xchg
cmp
push
or
mov
push
sbb
test
loope
and
insl
test
mov
clc
jge
aad
neg
mov
out
or
stos
sbb
in
loop
movsl
pop
jecxz
out
test
shlb
xchg
aaa
subl
ljmp
push
popf
aam
popa
mov
enter
cmpl
imul
addr16
dec
add
pop
mov
jno
and
insl
loop
push
or
aaa
ja
ja
fsub
ds
repz
cli
push
sti
aam
mov
pop
rorl
mov
imul
mov
inc
add
xor
lock
cli
jb
xor
jle
cwtl
jb
xchg
jnp
push
cwtl
xchg
or
pop
cmp
pop
rorl
jne
pop
jno
shl
int
ret
dec
mov
cmp
dec
dec
sar
hlt
xchg
cmp
cmp
pop
and
test
dec
xor
adc
arpl
jle
xchg
mov
xchg
insb
add
xchg
cmp
xchg
mov
sbb
jne
movsb
jae
jl
cmc
pop
out
daa
lods
mov
repnz
cmpsb
into
enter
stos
add
pop
dec
sahf
mov
pop
or
mov
sbb
add
pop
imul
enter
lock
mov
bound
into
xchg
push
call
push
sbb
cmp
dec
dec
movsb
pop
mov
push
iret
sbb
int3
adcb
push
mov
sub
sbb
sub
je
fnsetpm(287
aam
or
leave
mov
xchg
int
loopne
adc
sbb
mov
push
jg
mov
inc
cmpsl
imul
in
jns
jnp
jl
in
push
push
nop
mov
out
lret
add
imul
cmpsl
jp
pop
sbb
xchg
clc
push
mov
sbb
push
int
sub
outsb
int
jbe
mov
inc
jg
mov
xchg
pop
addl
cmp
shrb
or
mov
and
in
jno
inc
orl
jle
adc
xchg
push
or
and
es
in
pop
cmc
cmp
movsl
jo
push
sbb
mov
sbb
adc
or
mov
sbb
lea
out
rorl
add
out
dec
push
fnsave
lds
mov
xor
popf
fadds
pop
inc
out
jbe
sub
dec
into
lcall
ss
scas
and
xchg
addr16
inc
xchg
pusha
enter
push
jb
movsl
jns
xor
pop
addb
pop
adc
jle
lahf
jge
cmp
fwait
je
test
mov
lock
adc
sbb
and
loop
push
bound
push
push
out
cmp
scas
rcrb
int
mov
rclb
lock
mov
stc
test
and
sahf
mov
jl
loopne
add
jae
mov
mov
and
cmpl
mov
jae
arpl
sub
stos
push
inc
mov
mov
hlt
out
jo
pushf
arpl
dec
or
adc
and
sti
xchg
add
insl
inc
out
sub
pop
ret
int
jecxz
ljmp
mov
mov
lret
ljmp
loopne
jnp
jo
cld
or
cmp
push
pop
sahf
dec
insb
and
pop
sbb
adc
out
aam
fisubrs
and
repnz
scas
insb
pushf
cld
adc
adc
fisubrl
shrl
mov
cld
or
out
into
add
sbb
push
testb
inc
stc
psubb
lds
mov
int
push
sub
pop
pushf
fs
add
push
jae
cli
sub
insl
add
jl
pushf
sbbl
pop
bound
nop
les
pop
arpl
sub
test
or
cmpsb
rolb
adc
jbe
es
out
addb
stc
mov
in
js
mov
ljmp
nop
and
adc
aas
jo
sub
push
cli
adc
push
mov
push
or
and
in
mov
cmpl
out
pop
xchg
add
and
push
pop
add
leave
pusha
cmp
arpl
lea
loop
ret
or
jns
add
lret
movsl
mov
cmp
loope
fwait
xchg
fstps
or
mov
scas
push
push
imul
inc
mov
gs
pop
movsb
enter
shrb
fnstenv
pop
xor
pop
jecxz
sbb
push
or
mov
aad
js
aas
inc
and
inc
push
mov
leave
shl
push
and
sub
vcvttps2dq
or
scas
sbb
add
shll
enter
mov
mov
lea
js
or
mov
adc
fdivl
dec
xchg
nop
jo
mov
leave
mov
dec
jmp
ja
roll
mov
in
ljmp
lock
mov
lret
add
insl
stc
int3
jo
push
dec
mov
cwtl
pop
push
adcl
sbb
orb
idivl
xchg
insl
aam
data16
or
inc
sub
add
lock
aam
loope
mov
cmp
cmp
xchg
call
icebp
push
test
add
add
mov
bound
pop
pop
mov
or
mov
inc
lea
ret
pop
jno
test
inc
out
xchg
imul
ds
in
decl
mov
divl
xchg
aad
loope
stos
push
xchg
test
xor
loope
rorl
cmp
enter
adc
inc
push
test
jle
sub
aad
out
sbb
sub
push
or
xchg
jmp
pop
mov
dec
jecxz
pop
mov
pop
jne
into
cwtl
cmp
pop
and
sub
in
push
mov
divb
data16
or
jae
xchg
jl
cmp
xchg
xchg
int3
mov
mov
insb
ja
pop
or
inc
ret
popf
ja
jle
sbb
mov
inc
test
jnp
in
ds
jmp
adc
call
aad
pop
arpl
and
daa
jnp
xchg
dec
ja
mov
jno
lods
jecxz
popf
in
pop
jl
popa
insb
jno
xchg
shl
loop
dec
jno
nop
call
pop
mov
push
daa
dec
xorl
add
and
and
and
jne
cmp
xor
test
daa
icebp
repnz
fiaddl
and
push
push
add
xor
fimull
pop
mov
or
imul
jge
scas
adc
and
dec
clc
cli
adc
and
inc
and
ficoml
adc
sub
and
subb
jnp
rcl
mov
fsts
dec
test
call
lds
sbb
lods
test
sahf
cmp
and
jmp
daa
adc
imul
inc
icebp
jne
ljmp
mov
addr16
dec
dec
dec
cmp
xorl
sub
inc
cmp
nop
daa
inc
push
mov
test
xchg
sub
test
test
xchg
mov
jno
adc
das
mov
fldcw
add
rcl
push
loope
mov
loope
pop
mov
sub
dec
neg
test
mov
lret
insb
add
imul
jbe
arpl
cmc
test
xor
fcmovnb
sbb
repz
mov
clc
cmpxchg8b
into
lods
cmp
lea
ret
add
push
adc
cwtl
clc
inc
sbb
subl
aaa
leave
ret
pop
inc
mov
xlat
mov
lret
fsub
div
loop
les
pop
test
mov
ficompl
mov
hlt
mov
inc
rolb
push
int
pusha
mov
cld
jmp
int
mov
xor
xchg
in
in
outsl
sbb
dec
call
add
fstpl
jno
mov
or
or
call
xchg
jbe
inc
jg
shlb
lds
mov
dec
adc
add
jle
int3
cs
mov
or
mov
clc
in
test
insl
jecxz
out
cmpsl
jl
dec
sbb
stos
rcl
das
shrl
mov
cli
jecxz
mov
in
sbbb
sbb
and
push
pop
hlt
gs
pop
scas
dec
pop
scas
loopne
sbb
or
pop
fucomi
cmpsb
ja
xchg
mov
add
xchg
or
rclb
and
and
aad
pop
cmp
sub
out
mov
fcmove
push
iret
pop
mov
xlat
mov
sub
lcall
in
mov
mov
lock
mov
idivb
adc
lahf
mov
pop
xchg
outsb
mov
imul
out
mov
sbb
insl
mov
jae
ret
xor
data16
add
arpl
lods
repnz
mov
mov
std
push
dec
faddl
adc
mov
inc
pop
or
jo
or
in
iret
shlb
adc
cmp
sarl
ret
dec
or
ficompl
or
cmp
cwtl
movsb
dec
int3
cmc
lea
les
aas
shlb
insb
xor
mov
lea
add
shlb
int3
add
sbb
mov
int3
add
out
test
into
filds
mov
shr
push
add
andl
mov
rorb
push
clc
and
inc
repz
popa
xchg
push
mov
xchg
add
dec
jl
ds
pop
add
adc
adcl
push
xchg
and
lret
cmpsb
add
loope
sahf
mov
fbld
out
xchg
sti
add
pop
cmpsl
push
push
add
lahf
xlat
insb
jmp
rcrl
cmpb
jo
mov
jb
ja
sub
outsl
test
pop
addr16
mov
jp
xor
cmp
repnz
flds
rcrb
lods
mov
mov
add
addb
xchg
pop
test
or
xor
stos
or
xor
mov
test
daa
jl
adc
and
ret
inc
mov
shlb
pop
adc
out
jp
push
adc
mov
lret
mov
lock
and
arpl
in
xchg
push
jmp
gs
pcmpgtd
dec
repnz
pop
mov
xor
mov
mov
addb
jp
mov
xorb
pmuludq
subb
jne
cmc
mov
and
xchg
mov
rorl
push
mov
xor
mov
cmc
inc
pop
xlat
dec
pop
lods
push
and
rcrl
push
test
sbb
jl
je
call
arpl
dec
cmp
stos
pushf
aam
xchg
pop
push
mov
lods
and
sub
nop
mov
cmp
dec
and
lds
lea
cmp
jmp
cmpsl
lods
es
aad
sub
outsl
mov
andl
push
pop
sub
add
fistps
aad
imul
sub
jmp
lret
es
cwtl
shl
stos
mov
ljmp
lock
cmc
popa
dec
rorb
ljmp
addr16
sub
mov
pop
mov
push
js
syscall
movsb
jnp
adc
orb
lret
sarb
xor
out
inc
xor
ss
xchg
mov
jae
into
add
adc
cmp
test
push
ret
mov
push
adc
jns
fildll
pop
ret
adc
loope
and
repz
pop
push
jp
aad
pop
pop
decl
sahf
jns
mov
xor
je
xor
cwtl
cmpsl
gs
push
and
rorl
sub
cmc
jbe
movsb
addr16
and
das
cmc
push
bound
jne
fiaddl
sbb
inc
jne
outsb
lock
add
add
filds
pop
sub
clc
sbb
and
mov
pusha
pop
jmp
ret
outsb
and
scas
in
popa
sub
nop
jns
pop
cmp
sub
xchg
popf
ret
mov
cs
fcoml
pop
loope
iret
fildl
sti
pop
and
push
pop
xor
xorb
inc
and
in
icebp
adc
jbe
es
loop
cmp
fdivs
call
sbb
stos
out
or
sub
sub
aad
fnsave
clc
fnclex
mov
mov
sbb
pop
push
enter
shr
or
fcoml
mov
in
out
jmp
popa
push
sarb
push
fimull
or
jns
in
pop
add
mov
sahf
and
lods
xchg
notl
xchg
xchg
sbb
les
sub
pop
rcll
pop
mov
cmp
in
ret
add
pushf
pop
outsl
pop
cmp
imul
cmp
and
jns
inc
loope
fisubrs
jmp
pop
xchg
pop
add
dec
pop
mov
inc
push
stos
pop
pop
sahf
pop
sub
fmuls
jne
bound
push
subl
and
xchg
pop
fwait
xchg
pop
test
jne
sbb
mov
mov
aad
lcall
pop
push
hlt
ljmp
aaa
cmp
inc
add
pop
jns
xchg
or
fisubl
lea
adc
pop
mov
xchg
test
rorl
test
dec
jo
mov
pop
push
dec
dec
cmc
mov
cs
pop
insl
push
inc
fstl
cld
mov
xchg
xchg
pop
inc
mov
sub
sbb
rcrl
jae
std
icebp
dec
lods
getsec
data16
mov
rcr
jno
fwait
scas
gs
xor
sub
ret
xor
or
stos
ja
out
push
pop
mov
cs
and
shl
stos
clc
xchg
push
add
std
cwtl
andb
pop
push
jne
pop
lret
movsb
or
stos
cli
push
sbb
je
in
test
xor
std
in
or
cmpsb
mov
mov
ss
icebp
xor
fwait
add
pop
push
pop
gs
sub
dec
inc
das
jo
scas
push
stos
mov
fwait
lret
jae
movsb
or
cmp
xchg
push
pop
xchg
sbb
or
xchg
insl
mov
sbb
push
dec
imul
pop
lret
aas
out
mov
inc
push
popf
mov
push
out
mov
pop
xchg
int
icebp
prefetcht1
fadds
lods
mov
add
mulb
leave
adc
push
cmpb
jbe
leave
sti
jp
fwait
mov
cmp
cmp
cmpsb
cmp
lret
inc
inc
mov
shlb
fisttpl
movsl
jmp
in
fiaddl
pop
mov
fildl
aad
adc
dec
cmpsl
int3
jo
jp
sti
xor
gs
sub
push
cmpsb
sbb
dec
mov
bound
sbb
lahf
add
clc
jo
mov
or
push
xor
imulb
leave
jne
push
jg
add
test
in
lea
out
xor
inc
jp
les
aas
xchg
adc
orb
push
mov
xchg
jno
sbb
inc
sti
lock
lds
push
mov
sbb
push
jecxz
inc
add
jp
into
dec
push
iret
pop
cmp
stc
cmp
cmp
jo
pop
rcrl
movsb
mov
fwait
leave
dec
std
aad
pop
notl
aaa
and
mull
lcall
leave
sarl
mov
mov
aad
aas
or
mov
shlb
out
pop
outsl
cs
pop
mov
cwtl
jmp
cmp
dec
hlt
adc
movntq
lea
les
dec
xor
hlt
mov
jno
xor
fsubrp
push
pop
push
sbb
cmp
dec
rcrb
and
cmp
test
mov
out
cld
icebp
gs
insl
jecxz
scas
inc
decb
adc
sub
mov
jbe
jnp
mov
arpl
push
push
xorb
je
sub
sbb
ljmp
ja
sbb
inc
lods
mov
enter
jecxz
idiv
loop
packsswb
push
push
dec
jl
jmp
arpl
sbb
mov
jp
loope
pop
push
jp
fidivrs
lods
mov
adc
lea
mov
iret
xchg
shrb
xchg
daa
xor
mov
leave
aad
inc
int
dec
pop
mov
and
shl
adc
mov
push
out
dec
sbb
and
andb
xor
hlt
xor
push
mov
inc
out
int
mov
mov
pop
jmp
pop
pop
nop
insb
xor
push
add
xchg
iret
adc
cmc
scas
mov
popa
cmp
dec
lret
and
cmp
sti
ret
faddp
movsl
aas
arpl
dec
xchg
outsl
mov
cld
mov
shrl
xchg
jb
jno
xchg
sub
add
xchg
or
jno
dec
outsl
dec
test
jbe
xchg
push
negl
clc
xor
xchg
inc
loopne
pop
mov
adc
cmp
xor
shll
addl
xor
shlb
mov
cltd
pop
cmpsb
loop
mov
mov
test
lret
add
dec
fldenv
adc
out
mov
cmp
mov
lea
pop
adc
nop
dec
jge
pop
push
lods
es
addr16
sbb
inc
mov
sti
or
cmpsl
movswl
push
fsubl
gs
cmp
bound
pop
ret
sub
mov
cmp
mov
and
pop
fldl
jl
fwait
mov
xchg
xchg
adc
lods
and
scas
push
fstps
rcrl
jns
daa
mov
mov
mov
ror
xor
test
and
add
add
or
fstl
mov
cmpsb
cmp
pop
in
xor
xchg
orb
or
pop
or
mov
push
jno
je
inc
xorb
js
xor
jae
xchg
mov
xorl
push
shlb
insb
xchg
pusha
stos
scas
mov
in
lea
jnp
sbb
mov
sub
sub
loopne
aas
mov
add
jg
mov
das
ret
pusha
test
push
repnz
out
mov
push
insb
lods
fdivp
add
cmp
sub
sbb
push
daa
test
cs
lods
xor
fucomip
sti
push
subl
pop
xchg
jge
pop
scas
fmull
or
aam
adc
jl
daa
shlb
movd
ja
pop
aam
lods
in
jge
repnz
dec
jmp
lods
jle
rclb
rcrl
xor
fadd
hlt
stc
inc
adc
stos
in
stos
jo
out
adc
fidivs
adc
push
fisttpl
orl
xor
dec
mov
aam
cmp
mov
adc
pop
in
add
push
cmpsl
rorl
or
mov
lock
jbe
and
mov
mov
out
adc
cmc
add
les
hlt
sti
js
lcall
imul
adc
fnstcw
cmc
inc
lds
stc
repnz
orl
push
mov
and
popa
mov
mov
sbb
mov
daa
cltd
xchg
mov
push
pop
pushf
leave
xlat
scas
jg
or
rcrb
xchg
es
inc
or
test
mov
outsl
jno
add
into
mov
adc
rcr
jmp
xlat
mov
fsts
pop
xchg
movsb
inc
adc
mov
mov
mov
xchg
pusha
fsubrl
push
pusha
roll
arpl
mov
add
jl
std
mov
repz
ret
out
jae
or
int3
push
shlb
fldcw
faddl
adc
xchg
int
jnp
xor
lret
insb
rolb
add
jne
js
lret
fcoml
jns
add
sti
fsub
push
pop
push
jmp
lahf
add
pop
popa
loopne
lock
aaa
add
xchg
lea
cltd
imul
inc
inc
push
mov
jo
scas
mov
pop
cld
mov
or
cmpsl
data16
mov
pop
dec
in
or
xchg
jnp
pop
ret
test
daa
sahf
mov
cwtl
js
adc
insw
and
or
add
data16
jne
data16
cmp
or
mov
mov
ljmp
out
sub
pop
test
xchg
les
mov
cmp
je
push
aam
cmp
idiv
das
ret
std
clc
mov
jne
sahf
lds
xor
mov
lcall
xchg
add
inc
or
jle
cmp
xchg
cli
pop
movzwl
push
aam
sub
out
insl
adc
pop
psubb
ror
mov
mov
sub
leave
mov
mov
das
in
mov
not
outsb
cmp
cmp
lret
fidivrs
ror
repz
and
sbb
pop
stos
xchg
mov
fstpt
and
enter
test
and
or
dec
sub
sub
mov
aad
cs
pop
aaa
pop
lods
or
repnz
dec
cmp
clc
push
stc
add
sbb
es
jb
rorl
xchg
gs
iret
fimull
es
rcrb
adc
push
mov
jge
imul
test
cmp
je
cmc
cmp
xchg
arpl
jg
into
ljmp
in
rorl
test
pop
adc
mov
and
hlt
mov
imul
pop
adc
cs
lock
out
mov
pop
nop
fs
les
mov
cmp
mov
or
cmpsl
nop
cwtl
clc
inc
inc
mov
mov
mov
fdivr
and
pop
clc
fiaddl
or
ljmp
mov
sub
in
pop
mov
inc
xchg
inc
mov
test
mov
subl
lds
jecxz
and
shlb
jp
aaa
inc
mov
iret
mov
fwait
pop
and
cwtl
fisubrl
fadds
xor
xor
xchg
mov
rcl
clc
shlb
sbb
dec
fnsave
pop
cmp
sub
and
jae
js
push
imul
je
adc
sbb
daa
aas
inc
mov
imul
popf
shrb
inc
cmp
mov
pop
dec
pop
cld
imul
mov
stc
stc
mov
xchg
jns
cld
cmpsl
dec
fwait
in
push
add
aaa
je
sbb
mov
cmovp
fs
mov
cmpsb
mov
pusha
mov
inc
inc
lods
xor
fimuls
rcrb
insb
or
popa
sub
lret
inc
mov
popa
mov
pop
int3
dec
xchg
pop
and
clc
pop
add
mov
jp
or
out
scas
cli
lods
push
clc
xchg
inc
imul
lock
and
mov
call
mov
les
adc
test
push
leave
inc
mov
push
and
jo
jmp
cmp
cmp
mov
dec
call
and
mov
adc
mov
and
lahf
mov
inc
xchg
cmp
mov
ja
xchg
je
sbbb
repnz
push
and
sti
push
and
mov
jg
sbbl
cmp
add
scas
dec
inc
jnp
jle
inc
dec
aaa
ss
mov
or
frstor
xor
andb
adc
pop
mov
pusha
sbb
lock
jne
cmp
ljmp
xchg
mov
loope
and
xchg
cwtl
jp
idivb
jne
push
nop
push
sti
aas
or
lds
dec
jmp
xor
lcall
iret
out
sti
cmp
adc
jae
jg
push
add
lods
xchg
aas
add
inc
das
imul
xor
lds
sbb
mov
push
dec
or
sub
iret
cmc
inc
mov
stc
push
in
stos
sbb
adc
ja
push
xor
aas
sub
sbb
jne
loope
aas
bound
test
inc
sub
mov
cmc
dec
sbb
sbb
dec
or
fwait
and
pop
lahf
dec
outsb
mov
fcmovb
lcall
call
mov
adc
dec
imul
mov
xorb
push
cmp
jae
in
lods
pop
mov
icebp
xlat
imul
mov
mov
pop
outsl
pushf
cmp
jle
add
aam
xchg
and
mov
xor
imul
fdivrs
mov
push
leave
sub
sbb
in
jno
or
mov
dec
or
stos
xchg
xor
cli
loop
mov
lds
ror
mov
mov
pop
pushf
enter
jmp
out
mov
cmp
lods
leave
xchg
dec
jbe
orl
loop
mov
mov
inc
sarb
subb
roll
mov
push
fbstp
mov
addr16
fcmovbe
mov
xchg
cs
fsts
and
mov
mov
inc
push
cwtl
mov
subb
iret
rcl
stos
ret
std
mov
outsl
xchg
adc
ret
jmp
shrb
aas
ss
jmp
inc
cmp
fadds
mov
or
ja
pop
repnz
lret
xchg
out
push
cmp
outsl
add
shrl
mov
rcrl
dec
in
dec
in
and
mov
pop
xchg
sub
pop
cmp
mov
aad
in
inc
jno
mov
icebp
fwait
addr16
insb
repnz
xor
mov
sbb
xor
fimull
pop
push
push
imul
leave
fiadds
dec
fdivrp
dec
imul
xchg
pusha
aas
jnp
cmp
or
dec
ds
dec
xchg
xchg
inc
inc
mov
popf
stos
scas
pop
mov
inc
loop
aad
xchg
mov
outsb
xor
jle
subb
or
dec
setae
lods
xor
out
and
lret
aad
imul
mov
or
xlat
xor
push
adc
pop
sbb
mov
test
jle
nop
cltd
sbb
jp
fisttpll
aaa
jno
shll
xor
push
mov
aas
out
cmpsb
xchg
xchg
ljmp
pop
lcall
push
jae
lock
setne
insl
pusha
sbb
lock
pop
test
loopne
and
sub
xchg
or
xchg
cmp
xlat
inc
pop
push
pop
dec
adc
out
pushl
push
xchg
adc
inc
insb
sub
push
pop
push
test
push
mov
mov
mov
in
divb
mov
dec
popl
stc
sar
pop
js
std
sbb
jnp
xchg
sub
ss
mov
jns
aam
or
mov
int
sub
ja
call
sub
xchg
mov
sbb
pop
aaa
fdivrl
cmpsl
fs
and
faddp
add
fdivrl
cmp
int
fisttpll
pop
cmp
lock
in
rorl
sar
shll
int
mov
jbe
pop
mov
lds
mov
push
bound
ficompl
jo
mov
jmp
add
sub
sbb
fbstp
inc
enter
sub
jl
aaa
notb
mov
jnp
push
je
jno
icebp
sbb
mov
add
lods
lods
mov
pop
inc
xor
and
dec
lahf
ja
mov
insl
pop
insl
dec
jmp
scas
in
and
pop
xchg
mov
iret
pop
cmp
lods
add
pop
or
test
pop
sub
push
pop
stc
pushf
imul
add
cmp
roll
sarl
or
mov
cld
jmp
xor
stc
mov
ljmp
icebp
pop
ffree
out
arpl
repz
adc
dec
push
push
fucomi
jo
cmp
out
mov
sub
jae
dec
inc
imul
movsb
mov
jl
jl
sbb
mov
mov
mov
addr16
mov
popf
cmp
and
dec
pop
setge
and
mov
xchg
shlb
pop
sub
sti
popf
push
add
loop
ss
pop
or
dec
add
out
mov
leave
test
pop
inc
test
inc
fsubl
test
pop
xchg
les
iret
push
ret
jmp
mov
jmp
je
xchg
das
or
hlt
decl
xchg
jne
js
movsl
stos
lods
or
lret
orl
or
mov
jbe
addr16
xchg
sbb
mov
push
jmp
cmp
ja
ss
jge
dec
pop
movsl
lret
lds
int3
add
jo
xor
pop
sub
int
popf
xor
popa
es
adc
sbb
jle
push
pop
jge
fsubrp
hlt
in
in
fsqrt
mov
add
push
push
das
xor
inc
mov
pop
and
daa
test
mov
testl
ja
push
out
inc
movsl
std
dec
sub
sub
shll
ret
pop
lock
jge
popf
dec
ret
jno
testl
pop
add
jnp
and
movsl
pop
fidivrs
pusha
xchg
imul
outsb
sbb
mov
mov
out
std
mov
stc
xor
dec
dec
pop
aad
or
cmc
lods
push
test
xchg
xchg
cmp
imul
jns
stos
jg
fsubrl
es
nop
ror
lock
push
orl
adc
xchg
inc
pop
stos
movsl
daa
fcomip
cmp
test
xlat
mov
jae
fidivl
push
mov
shr
pop
sarb
mov
aaa
adc
xchg
loop
adc
sub
jmp
mov
addl
adc
jbe
sbb
cmp
and
aaa
add
in
ret
ss
movsl
push
fsubl
push
jne
dec
inc
repz
mov
push
jecxz
std
mov
mov
int3
adc
lret
int3
and
pop
jl
dec
leave
or
bnd
mov
scas
cmp
rcrl
out
pop
idivb
inc
sti
xor
lods
fstl
out
mov
jmp
test
jns
pop
lret
push
clc
lods
sarb
add
mov
test
sub
adc
cli
pop
xchg
jae
or
mov
pushf
in
test
mov
mov
mov
int
out
adc
pop
loopne,pt
adc
mov
cmc
test
or
jo
jmp
lret
das
jecxz
out
fucomp
adc
sbb
stos
mov
fistpl
and
adc
pushf
leave
mov
cmpsl
andb
pop
dec
insl
aam
fdivl
xchg
adc
fcmovne
leave
stc
or
not
call
jecxz
xchg
or
inc
adc
sbb
push
mull
sub
jge
mov
mov
lods
in
mov
pop
fldenv
in
pop
inc
fwait
sub
xor
je
adc
and
xor
lcall
or
pop
push
or
or
inc
pop
in
sbb
addl
pop
ret
les
cmpsl
lahf
mov
out
in
pop
rep
notb
nop
fcompl
push
xchg
cli
rcrl
mov
jl
dec
dec
call
pop
decb
and
pop
mov
dec
scas
inc
inc
adc
jns
or
ljmp
xchg
push
lret
xchg
dec
or
and
insl
mov
popa
hlt
and
xchg
ret
int3
jae
and
fs
inc
adc
dec
or
inc
repz
dec
pop
sbbb
dec
jne
pop
addr16
xchg
ret
out
mov
mov
add
daa
sub
and
push
cwtl
je
in
push
mov
mov
mov
fs
aam
dec
dec
sbb
divl
dec
xor
lcall
test
out
int3
jno
inc
lcall
mov
mov
movsb
ret
mov
adc
jae
into
out
shrl
lret
inc
movsb
addr16
adc
xchg
pop
ja
mov
movb
fistpl
idivb
sub
in
xor
divl
xchg
in
push
clc
ja
dec
sbb
nop
pop
and
decl
dec
xlat
sub
xchg
ret
sub
mov
jecxz
lods
fmull
jp
jnp
and
lcall
cwtl
xchg
inc
jae
aaa
mov
fildl
imul
mov
xor
pop
and
sub
cmc
jecxz
push
mov
mov
sub
movsb
mov
shlb
test
mov
push
mov
iret
xor
fdiv
sbb
test
and
mov
pop
push
and
sub
sahf
sbb
lea
fdivrl
lret
lret
das
xchg
popa
cmp
xchg
popf
lret
push
xor
dec
call
ret
mov
jecxz
mov
jns
pop
imul
xor
mov
xor
xor
jno
pushf
cmp
rorb
sbb
pop
xor
std
cld
std
popl
scas
fcompl
lods
mov
int
nop
jne
ljmp
shl
jecxz
sbb
pop
jbe
adc
aad
daa
call
sbb
sbb
sbbl
movsb
jge
sub
testl
dec
add
and
mov
push
cmpsb
mov
xor
jg
dec
das
fxch
in
push
cmpsb
gs
add
inc
xchg
mov
mov
jecxz
pop
mov
mov
test
xor
dec
std
cli
pop
jb
push
adc
roll
bnd
lcall
or
push
cmp
mov
mov
pusha
push
aas
xchg
adc
movups
in
pop
mov
fcmovnu
cmpb
aaa
in
mov
xchg
adc
or
hlt
add
ret
jp
dec
xor
dec
mov
loop
fmuls
cmp
mov
and
out
lods
mov
xchg
pusha
test
sbb
std
fs
sbb
jge
cmpb
and
pop
adcl
cld
adc
test
mov
mov
cmpb
inc
inc
and
jl
into
mov
mov
xchg
bound
and
rolb
inc
xlat
xchg
pop
inc
mov
mov
dec
push
mov
int3
xchg
leave
push
inc
fldenv
mov
inc
jg
mov
mov
ficoms
inc
sub
pop
and
flds
jle
xor
mov
cltd
mov
pop
fnstcw
call
mov
sbb
or
inc
add
ret
jle
int
test
inc
add
mov
gs
lahf
push
mov
insl
ret
inc
in
inc
and
into
pushf
sarl
xchg
adc
adc
shlb
pop
les
adc
xchg
sub
inc
or
adc
dec
push
lret
cwtl
and
lret
push
stos
jnp
daa
sbb
jge
sbb
mov
mov
roll
xor
xchg
push
mov
daa
andb
push
mov
jg
pop
push
dec
fistpll
lock
idivb
int
jle
and
mov
mov
scas
sub
pop
lsl
in
aaa
out
jnp
test
aas
sub
pop
mov
leave
mov
adc
push
mov
gs
or
mov
fdiv
test
xor
popa
mov
jne
and
push
sbb
jo
cs
add
push
aaa
test
mov
jg
sahf
jge,pt
mov
push
push
aaa
and
jmp
dec
movsl
mov
aad
outsl
or
mov
cs
mov
mov
push
xchg
inc
jb
push
jbe
adcl
cwtl
repz
push
dec
xchg
inc
aam
stos
sarl
push
jge
les
dec
sbb
and
test
scas
sub
jg
pushf
dec
mov
fsubrl
xchg
pop
movsl
test
and
dec
sbb
cli
out
push
xchg
or
mov
out
test
mov
sub
and
bound
lcall
cmc
and
pop
movsl
test
sbb
or
or
push
movsl
jb
xor
ret
aaa
clc
add
sbb
jl
pop
xor
out
and
mov
mov
xor
xchg
push
movsb
shlb
fbstp
sub
jmp
ja
and
sahf
pop
pop
jmp
sbb
daa
imul
out
and
lods
mov
out
rcrb
dec
xor
stc
push
aaa
jg
mov
push
ret
lcall
mov
hlt
inc
adc
bound
xchg
icebp
dec
cltd
int3
jno
shr
dec
xchg
mov
movsl
iret
insl
lahf
pop
jbe
pushl
fistl
aaa
aam
std
pop
aas
or
add
nop
jno
push
inc
and
daa
mov
mov
or
cs
xchg
rcl
addl
mov
sar
shr
iret
inc
je
mov
pop
sub
inc
out
pop
fidivrl
idiv
cmp
pop
les
xchg
inc
scas
mov
jge
push
cmc
cmp
pop
andb
cs
ds
sbb
pop
loopne
and
lea
sub
dec
jno
fimull
adc
xor
ret
scas
div
ja
fiaddl
mov
adc
cli
pop
lods
ss
jl
mov
mov
iret
cmc
mov
cmp
stc
out
aas
dec
xchg
lret
jg
or
cltd
repz
and
insb
push
ljmp
or
aam
adc
movsl
cmp
aam
loope
lcall
sahf
mov
cmc
cmp
xchg
push
in
scas
push
pop
shl
int
lock
shlb
pusha
cmpl
or
mov
popa
mov
dec
sbb
ljmp
jno
mov
pop
jno
iret
mov
push
das
pop
or
cmpsl
fnstsw
sub
gs
mov
lds
jmp
decl
inc
mov
outsb
bound
jg
xor
mov
cwtl
push
mov
push
pusha
cmc
out
imul
mov
loopne
jl
jl
adc
outsl
out
xor
and
or
jns
sarb
in
xchg
pop
int
or
scas
stc
jne
pushl
mov
loope
lds
aad
loopne
adc
sbb
cmp
mov
push
lods
push
arpl
cltd
pop
lods
out
arpl
xor
inc
pushf
divl
loop
pop
xchg
stc
repnz
iret
cli
dec
mov
in
subb
adc
push
xchg
out
mov
jmp
sub
jmp
add
lret
in
lret
lods
or
popa
lahf
xchg
sub
mov
fidivrs
jno
or
and
rclb
dec
push
fsub
pop
sub
out
add
aad
pop
out
jae
xchg
pop
in
lock
inc
adc
enter
mov
or
cmp
test
xor
inc
push
test
jnp
xor
pop
rorb
xor
out
and
pop
cmp
inc
sbb
int3
cmp
repnz
push
xor
xchg
lret
fadd
lret
test
push
adc
adc
dec
cmc
adc
sti
jle
jmp
add
xor
add
cmp
sub
test
cli
rep
stc
mov
add
clc
sub
fwait
int3
cmpsl
mov
and
push
ret
jnp
out
ljmp
aaa
jbe
js
mov
data16
cld
mov
jp
mov
into
dec
outsl
push
rorb
stos
jle
jecxz
out
dec
imul
rcr
jl
or
outsb
mov
jnp
lds
sti
faddl
sbb
mov
mov
xorl
movsl
push
insb
sbbl
rcr
popf
adc
mov
mov
and
imul
sbb
add
pop
in
or
lret
mov
mov
clc
mov
aad
push
mov
fadd
addr16
fwait
inc
std
lahf
lods
mul
jecxz
jle
mov
imul
imul
mov
sbb
adc
jle
add
lret
mov
clc
cmp
call
mov
inc
sub
or
sbbl
pop
clc
cmpsl
arpl
sub
lods
and
cs
and
jbe
sub
lcall
mov
stos
push
add
aam
scas
test
pop
out
mov
add
jbe
das
int
fsub
mov
addb
repz
hlt
cmp
jnp
jmp
mov
fistpll
or
mov
addl
dec
mov
out
mov
push
push
and
or
in
jl
adc
xchg
sub
push
enter
daa
rol
in
mov
mov
xchg
cmpsl
jnp
int3
stc
in
lret
loop
or
dec
movl
lods
adcb
pop
test
sub
mov
mov
or
pop
add
mov
and
mov
mov
sbb
xchg
inc
in
dec
sarb
nop
sub
shlb
stos
int3
add
call
xchg
jb
out
andl
into
cmp
sbb
adc
ljmp
jecxz
push
lahf
or
mov
popa
js
imul
xlat
push
dec
aam
add
in
pop
jo
add
and
adc
jle
mov
jle
test
inc
cmpsb
sub
adc
stos
imul
rcrb
cmp
dec
mov
sbb
sub
enter
mov
in
xchg
or
push
out
mov
lods
cmp
inc
inc
mov
movsb
sub
cmc
inc
inc
sbb
mov
cmp
dec
dec
jnp
loop
or
in
cmpsl
loop
xchg
bound
sub
adc
mov
orb
outsb
int
mov
pop
stc
scas
iret
xchg
push
fadds
repz
cs
adc
sbb
mov
sbb
pop
icebp
fldt
enter
lcall
adc
adc
pop
hlt
jno
loop
inc
data16
mov
pusha
imul
adc
stos
push
les
jge
sbb
add
ret
movsl
imul
ss
pusha
and
inc
loop
bound
xorl
orl
jmp
push
test
aad
and
packsswb
add
into
loopne
fnstsw
test
int
pop
inc
ds
sbbl
sub
xchg
cmp
rol
or
rorl
mov
mov
push
stos
lcall
addl
cmp
test
ja
or
fildl
sbbl
sbb
sub
sbb
push
inc
jne
pop
sub
shlb
ds
sub
push
fidivl
jo
add
std
or
or
cmp
js
lock
mov
sbb
xor
pop
shl
icebp
mov
dec
ret
mov
ljmp
shrb
jno
or
jns
sub
loope
repz
lahf
pop
sti
shlb
in
out
lea
add
sub
mov
cmp
orb
movsl
ss
lahf
rorl
fdivrs
fwait
popf
and
and
popa
imul
ret
ljmp
stos
mov
outsl
cmp
sbb
xor
ror
cmpsb
xor
stos
cli
push
in
inc
cmp
test
clc
test
filds
and
cmpsl
outsl
test
or
fstps
mov
or
and
cwtl
jae
push
mov
xor
lea
xchg
push
cld
jmp
mov
mov
mov
je
out
jnp
jbe
hlt
jecxz
enter
inc
jmp
lea
sbb
scas
fisubrs
fisubrl
dec
sub
cmp
andl
cld
add
leave
dec
inc
repz
ss
mov
xchg
incl
sbb
mov
js
pop
test
bound
cmc
loope
add
stos
popa
add
test
shlb
pop
xor
mov
xlat
repz
sbb
inc
repnz
repz
sahf
rorb
jp
ret
xorl
and
scas
ror
rorl
ja
loopne
je
adc
push
dec
jmp
aas
adc
test
js
test
add
sbb
push
scas
mull
mov
jmp
frstor
scas
jno
xor
fwait
push
rcrl
das
out
movsl
cmpsl
test
mov
dec
popa
icebp
adc
pop
xchg
push
jns
cmpsb
cltd
push
inc
pop
cmp
stos
loope
push
and
cmc
int
dec
stos
in
jbe
in
lret
or
jno
stos
sub
lods
int3
movsb
cmp
and
mov
xor
pop
cld
adc
cwtl
in
mov
push
xchg
jp
cmp
mov
adc
inc
mov
pop
fadds
arpl
ljmp
fcmovbe
pushf
mov
add
cmp
mov
pop
or
or
movsl
cld
cmpl
cmc
jle
xchg
jae
and
jo
and
push
je
mov
les
push
cltd
notb
inc
enter
mov
lret
lret
cli
fdivp
js
insb
imul
stc
lds
jbe
icebp
cmpsl
cmpsl
push
outsl
cmp
push
fcoms
or
daa
and
push
jecxz
cmp
notb
call
jb
mov
inc
mov
push
and
pop
xchg
into
sub
mulb
rclb
cmp
outsb
aas
data16
setae
pushf
jbe
lea
loope
jle
mov
orl
pop
sti
imul
inc
sar
fstl
out
cmp
orl
scas
add
das
imul
inc
pop
xlat
ret
pop
jns
add
mov
jns
mov
push
movsb
movq
cmp
stos
das
push
xchg
movsl
and
movsb
inc
rcrb
inc
enter
cwtl
leave
repnz
into
loope
shlb
das
std
outsb
test
out
int3
push
jecxz
lret
repz
pop
mov
push
mov
sub
sbb
push
loope
mov
xor
popa
dec
xor
pop
movsl
pop
stos
aaa
lahf
mov
shl
hlt
bound
pop
sub
out
inc
lock
dec
lods
adc
sub
inc
pop
stos
cmpsl
pop
push
bound
xor
loope
push
es
sub
push
lods
pop
stc
rolb
pop
jbe
xchg
aad
jge
cs
enter
sahf
pusha
adc
enter
dec
mov
repz
loopne
jecxz
xor
inc
mov
pop
fs
fisttps
cli
das
push
inc
fcoms
test
insb
xor
clc
mov
inc
fs
out
push
lcall
pop
cmp
nop
cmp
clc
jnp
cld
stos
inc
pop
jecxz
cs
imul
test
mov
scas
sbb
ret
stos
or
cmp
dec
in
jl
cmpsl
sub
mov
punpckldq
dec
ljmp
lea
adc
shlb
cmp
ficompl
rcll
mov
sub
lods
js
xor
test
inc
in
aam
and
pop
lret
data16
ret
cwtl
jge
lea
mov
shrl
xchg
inc
scas
daa
pusha
lahf
je
jg
subb
mov
xor
or
and
gs
lret
sbb
aam
xchg
jle
add
shlb
jno
fdiv
cmpsb
pop
aad
cmc
push
pop
dec
ret
scas
ret
fisttpl
push
mov
lss
or
push
icebp
lret
sbbb
push
pop
jecxz
xor
add
sbb
mov
fistps
leave
imul
nop
rcll
lods
ds
sbb
push
out
xor
dec
jb
sub
stos
sbb
fdivrl
add
pop
cmp
insl
dec
clc
push
inc
ljmp
leave
sub
ret
inc
mov
mov
add
sahf
scas
lcall
ja
cmp
ret
jmp
sahf
mov
jno
arpl
mov
sbb
cmpl
jno
aad
or
push
inc
push
movsb
rcl
and
cmpsl
pop
jge,pn
xchg
addb
xchg
pxor
mov
cltd
icebp
hlt
lea
cmp
mov
enter
jge
xor
leave
imul
jge
sti
ret
cld
in
negl
or
sbb
mov
or
mov
es
add
in
stc
push
mov
add
movsb
xor
stos
adc
jmp
dec
push
jl
test
inc
mov
mov
cmp
add
pop
loope
adc
out
or
inc
or
clc
xor
popa
add
int3
jb
mov
daa
inc
jne
mov
inc
sub
or
jae
in
ds
mov
push
jmp
sbb
lods
outsl
outsb
imul
dec
ljmp
jmp
mov
and
stc
pop
insl
das
lahf
mov
ljmp
or
mov
aas
jge
xor
inc
test
xlat
or
or
jne
jecxz
jg
sti
pop
sub
inc
push
int3
add
mov
sti
cmp
bound
sub
negb
jnp
scas
sbbl
pop
out
cmp
mov
mov
orb
testb
mov
out
cld
test
xchg
mov
add
mov
pop
xchg
mov
test
mov
mov
and
cmpsl
push
fcomps
push
mov
mov
dec
test
jbe
inc
inc
popf
stos
lods
adc
data16
js
aam
jg
dec
pop
into
call
inc
test
dec
mov
inc
lods
and
into
push
pop
dec
fsubr
cmpb
adc
and
inc
add
add
or
repz
ds
lret
or
pop
dec
mov
fst
lds
fldcw
sub
mov
mov
sbb
push
xor
sbbb
in
fdivrl
jo
ret
and
lods
fwait
mov
add
bnd
loopne,pt
dec
xchg
test
movsb
dec
xlat
aaa
add
xlat
idivb
ret
xor
shlb
mov
aas
sbb
dec
inc
mov
in
inc
in
pop
add
addr16
xchg
pop
push
mov
add
push
ret
sbb
xchg
mov
or
cmpsb
push
enter
mov
inc
mov
outsl
sarl
ja
sub
pop
mov
sti
sub
pushf
pop
jmp
add
adc
adc
xor
jb
cmp
xchg
mov
movl
stc
nop
fdivrs
das
xor
push
sub
sti
and
hlt
int3
lcall
arpl
outsb
inc
push
xchg
jmp
xchg
shl
sbb
jmp
sub
cltd
dec
cmpsb
or
mov
sbb
mov
lea
gs
decl
icebp
cmpsl
jbe
inc
or
mov
lock
arpl
xchg
pop
or
mov
pop
outsb
fiaddl
imul
mov
inc
mov
rol
sbb
mov
arpl
mov
imul
cmpsl
scas
jmp
int3
pop
rorl
in
inc
out
ljmp
ljmp
aam
sbb
sub
push
mov
lcall
pop
jmp
pop
subl
clc
jns
scas
sub
je
cmpsl
std
sbb
das
loop
push
push
mov
sbb
rcll
mov
jg
mov
fidivl
loopne
daa
cmpsb
jecxz
cs
mov
mov
push
or
sub
cmpsb
add
dec
dec
dec
mov
mov
ret
push
and
jmp
test
shlb
pop
lret
hlt
loope
ret
ja
cmp
lods
inc
in
pop
mov
jle
jbe
cmc
fs
cwtl
enter
aas
jg
adc
fdiv
push
jae
or
push
add
popf
rcrb
inc
sbb
fimull
add
pusha
scas
push
arpl
xchg
xchg
sub
loope
push
rorb
or
jp
out
pop
ret
jns
adcl
stc
inc
dec
aas
xchg
stos
xchg
dec
das
iret
inc
dec
rorb
sbb
push
sub
sbbb
scas
jle
mov
int
mov
adc
mov
outsb
lahf
dec
sbb
dec
dec
add
int
and
xchg
cmc
incl
js
xor
shr
rcll
arpl
pushl
mov
stos
faddl
mov
fimuls
xchg
jo
pop
imul
popl
mov
out
movsl
ss
jle
jne
enter
pushf
leave
adc
sbb
add
and
xor
out
cmc
insb
test
and
ss
push
mov
add
mov
xlat
popf
push
cmp
adc
aam
jl
mov
repnz
jmp
repnz
inc
enter
imul
pop
push
ljmp
jnp
cmpl
int3
add
pop
call
sub
cmp
lret
test
xchg
lods
mov
cltd
push
int3
dec
jle
test
daa
scas
mov
movb
aas
mov
jns
mov
fisttpll
sar
jno
shll
mov
mov
test
sbb
sar
sbb
imul
or
fmuls
push
mov
xor
ret
xchg
mov
outsb
pop
push
pop
test
inc
xchg
lahf
add
dec
test
inc
movsl
mov
and
aam
jmp
jmp
fimull
cli
in
out
pop
push
mov
xchg
push
xchg
shlb
xchg
adc
fcoml
pusha
test
std
adc
pop
ljmp
or
ficomps
ret
in
ret
orl
xchg
add
fidivrs
int3
mov
hlt
mov
mov
adc
dec
stos
dec
insl
mov
loopne
js
gs
sub
into
push
pop
jne
clc
in
scas
add
incb
xchg
jns
jno
mov
adc
data16
rcl
outsl
mov
mov
outsl
cld
iret
sbb
imul
jae
mov
sbb
movsb
sahf
jmp
popa
loopne
push
xchg
loopne
cli
push
push
mov
mov
aas
das
add
sbbb
mov
fs
int
inc
mov
rolb
fstl
imul
call
or
iret
testl
dec
jns
adc
push
std
leave
push
pop
jl
and
xchg
pop
imul
sti
sbb
push
mov
scas
or
inc
notb
data16
mov
add
cmp
or
sbb
repz
jmp
jne
sub
stos
push
popa
and
or
aad
aam
inc
mov
imul
jb
cmc
mov
and
jo
xor
je
lds
out
pop
pop
mov
mov
cltd
stos
lret
lret
mov
cld
jp,pt
js
dec
pusha
jo
insl
adcl
sub
les
sbb
mov
sub
lret
dec
push
or
gs
mov
inc
pop
rclb
fstpt
jbe
pop
cmp
test
fs
adc
jl
std
and
out
cmc
in
ror
shrb
loopne
xchg
cvttps2pi
fwait
insb
adc
jnp
sbb
push
push
xchg
xor
lahf
bound
movsl
jae
and
fs
test
stos
jne
jmp
add
in
and
imul
stc
ss
das
or
mov
invd
sub
or
inc
insb
das
sub
mov
popa
imulb
iret
jnp
mov
dec
les
mov
in
sub
push
rorb
and
mov
jne
jb
leave
pop
mov
jp
lcall
jg
xchg
enter
adc
lea
int3
push
jge
mov
sub
sbb
xchg
pop
rolb
loope
and
mov
sbb
sbb
test
sbb
cs
inc
insl
fisubrs
stos
xor
cld
loope
ljmp
push
mov
pusha
sub
fistpl
fnstcw
cmp
dec
jp
bswap
xchg
push
dec
sahf
push
push
dec
jge
mov
ljmp
or
sub
ret
mov
cmp
iret
sub
aam
insl
mov
pop
rcll
mov
std
xchg
lods
fdivs
insl
xor
add
fisttps
cld
fstpt
mov
rcrb
mov
cmc
mov
sub
xor
xor
jb
inc
inc
scas
adc
inc
mov
add
arpl
push
loop
dec
mov
nop
bnd
idivb
in
out
iret
sub
add
cmp
lcall
push
push
adc
xchg
xor
out
out
cmp
jo
push
push
mov
jecxz
aam
and
stos
xchg
push
dec
aas
rcrb
mov
xchg
push
inc
mov
daa
jmp
cs
dec
subl
stos
call
inc
jae
mov
ljmp
mov
out
sbb
pop
data16
pop
test
mov
dec
and
push
jl
jp
inc
xor
jmp
ja
outsl
jle
fbstp
cwtl
sbb
fldenv
inc
xchg
adc
daa
sbb
cmpl
push
dec
fildl
adc
es
inc
fcmove
xorb
test
dec
mov
lods
push
push
mov
sbb
movsl
xchg
pop
vmread
mov
stos
int
subb
pusha
cmpl
dec
sti
aaa
test
cmc
cmp
popa
loop
or
call
xchg
ds
xchg
inc
sahf
mov
cwtl
push
cmp
pop
fwait
jle
imul
sub
xchg
xchg
sbb
sarl
in
pop
and
adc
mov
lods
mov
add
popa
or
bound
repnz
psubsw
ret
pop
pop
mov
fimull
mov
testl
rorb
or
rcrb
rclb
mov
in
jno
loop
in
lret
bound
sub
mov
jae
or
loop
pop
mov
roll
stos
inc
jmp
push
mov
pop
inc
aam
repz
sbb
movsb
gs
or
test
lret
mov
lods
adc
inc
jp
in
or
or
aad
cmpsb
push
popf
shrl
jne
mov
lods
xchg
idivl
dec
inc
std
adc
out
push
enter
jmp
shrl
popf
and
fdivrs
jno
inc
int
test
mov
add
bound
sti
jae
xor
insl
push
imul
popf
shl
sub
out
cmp
push
xor
jecxz
and
stos
or
shl
ljmp
jae
mov
cmp
pop
icebp
adc
hlt
leave
daa
movsb
pop
mov
out
fldl
pop
cmpsl
push
jae
inc
mov
add
pop
mov
mov
cltd
pushf
lcall
pop
mov
repnz
and
xor
and
sub
push
test
sub
jge
lret
in
mov
js
fwait
xchg
dec
out
jb
lods
clc
jnp
leave
test
xchg
and
inc
les
ss
addb
inc
ret
add
add
sub
lret
iret
out
mov
mov
test
sar
insb
leave
mov
or
mov
les
pop
cmpsl
jp
cmp
push
add
ja,pt
jbe
out
xchg
testl
aam
rolb
sbb
xlat
cmpsb
aam
xchg
jnp
leave
fwait
dec
cwtl
push
in
jl
xor
sub
mov
mov
mov
pop
push
push
aam
cmp
sbb
imul
das
aaa
repz
jb
aam
imul
sub
push
inc
fdivp
xlat
fdivs
aam
dec
rcrl
pop
mov
mov
lds
mov
jmp
pop
sub
dec
and
movsb
sbb
or
inc
shr
in
inc
pop
fwait
js
push
arpl
and
dec
mov
lds
out
mov
ja
mov
cmp
je
sar
imul
ficompl
outsb
fnstcw
push
push
cmp
jne
rorb
xchg
and
pop
jecxz
ljmp
iret
cld
jg
or
aam
icebp
mov
mov
popf
ss
ret
pop
mov
pop
lahf
xor
push
sbb
mov
ret
jnp
and
mov
sub
adc
cmpsb
add
insl
ljmp
jge
scas
adc
adc
mov
fidivs
mov
roll
jecxz,pn
push
repnz
jnp
sbb
pop
dec
je
or
mov
adc
std
cltd
scas
test
push
loop
dec
dec
mov
data16
dec
jmp
inc
pop
xorl
hlt
dec
cltd
xchg
imulb
or
push
sahf
sub
clc
push
mov
lock
push
cs
sbb
xchg
cmp
xchg
inc
int3
inc
fxtract
dec
jns
mov
add
rolb
xchg
cmp
jbe
lahf
cwtl
mov
inc
jecxz
xchg
dec
cmp
jp
cld
sub
rcrb
js
dec
loop
pop
jne
frstor
outsb
lcall
sbb
cltd
mov
fndisi(8087
insb
scas
popa
mov
sbb
lods
out
xor
shrl
cltd
mov
popl
daa
cmp
mov
adcb
xchg
out
jo
icebp
dec
xchg
jg
jae
das
push
lods
and
movsb
pop
xor
call
sar
aad
out
mov
jns
mov
mov
insb
andl
xor
incb
adcl
cmp
fldenv
outsl
sti
call
outsb
and
push
scas
xor
dec
cmp
jae
dec
movsl
cld
lock
ljmp
sub
icebp
sub
repnz
int3
xor
movsb
loope
pop
cmc
das
sbb
dec
testb
in
add
movsb
xor
pop
out
adc
xor
lret
filds
sti
cmp
push
out
sub
pop
or
aad
mov
arpl
sub
mov
into
out
dec
add
mov
cmp
adc
daa
mov
int
push
iret
cmc
jno
fwait
jns
aaa
and
push
fs
sub
popf
adc
cmp
ret
daa
je
mov
clc
nop
pop
ja
mov
pop
das
hlt
repnz
mov
rcrl
je
aam
add
arpl
data16
pop
jne
adcb
ljmp
jns
je
xchg
sbb
adcb
cmp
mov
popa
sbb
lret
pop
vdivpd
mov
xchg
in
dec
mov
stos
dec
mov
lahf
insl
cmp
das
orl
stos
sti
andl
dec
add
inc
or
in
daa
fbstp
pop
cltd
inc
lahf
cmp
pop
fbstp
push
sbb
jle
or
mov
xor
mov
pop
mov
adc
mov
lret
ja
mov
lods
pusha
cmp
cmp
adc
pop
dec
mov
mov
fdivr
bound
mov
orb
test
push
jae
incb
loope
std
dec
xor
repz
sub
mov
test
xchg
popa
lret
dec
dec
push
movsb
and
cmpsb
ljmp
sub
mov
xor
enter
or
dec
pusha
ljmp
xorl
ds
jmp
add
imul
inc
into
es
push
stos
lret
sub
stos
repz
std
push
push
mov
push
popf
jg
fwait
mov
ret
jo
cmp
adc
mov
mov
test
and
loopne
je
test
adc
testl
lret
out
cltd
orb
clc
cmp
icebp
pop
xchg
stc
je
leave
es
inc
movsl
xchg
test
xchg
lahf
and
std
enter
and
loope
pop
or
lret
aas
nop
mov
pop
push
dec
cmp
icebp
int3
jns
pop
mov
lret
repz
mov
mov
shrl
sbb
mov
cli
jae
call
dec
lret
lods
pop
inc
xchg
sahf
in
fwait
mov
mov
ret
data16
xlat
xor
mov
and
mov
push
stos
rcll
andps
cmp
dec
adc
mov
xchg
or
or
mov
dec
ret
mov
hlt
cmpsl
cltd
jne
sub
call
popa
sbb
fbstp
push
sub
out
cmp
loopne
clc
jbe
in
sub
push
in
fstpl
xchg
fdivs
out
mov
das
xor
add
adc
adc
leave
int3
and
xchg
xchg
add
or
jae
in
cmp
popa
movsl
mov
lcall
es
jp
sbb
xor
repnz
sbb
stos
rorl
jb
or
mov
mov
out
cmp
pop
shl
mov
nop
mov
cli
jge
jbe
lret
xor
fisubs
xor
xor
inc
adc
js
out
out
mov
out
or
xor
scas
loopne
int
mov
mov
in
cmp
pop
pop
jb
loop
cmpsl
xlat
xor
int3
gs
xchg
je
aad
push
push
outsl
and
inc
sbbl
shlb
or
adc
movsb
push
or
daa
or
dec
or
in
lods
push
push
loope
nop
das
sar
mov
dec
xor
mov
scas
andl
pop
mov
push
and
jp
stos
sbbl
inc
add
cltd
inc
fcom
push
xor
and
dec
stc
adc
pop
add
pop
shll
inc
insl
and
xchg
push
les
out
adc
and
enter
into
dec
pop
cmp
cltd
fsubs
imul
pushf
adcb
jg
mov
aad
add
cmp
add
push
negb
add
pop
mov
or
stos
jge
sub
arpl
dec
adc
andl
xchg
xchg
movsl
movsl
jno
jp
pop
lea
mov
shll
push
lock
add
push
mov
leave
push
or
adc
roll
mov
ret
pop
out
pop
and
pop
lock
adc
in
mov
enter
dec
sti
and
mov
fidivl
popf
adc
cwtl
adcb
cwtl
mov
mov
push
ja
xor
clc
adc
dec
fidivl
clc
cmpxchg
out
and
and
or
xor
dec
jb
pop
dec
je
in
pop
stos
xor
jne
add
std
mov
bound
lock
shlb
xor
sbb
mov
add
xor
mov
sub
add
inc
fimull
pop
dec
std
test
out
pop
faddl
or
and
xchg
cwtl
cmp
dec
adc
mov
sbb
inc
rcrl
push
push
leave
int
push
push
mov
loope
aad
mov
push
dec
mov
or
negb
or
or
xchg
sbb
or
jo
cmpsl
sub
inc
jle
pop
ss
push
aaa
push
aas
jmp
fildl
xor
pop
mov
pop
cmpsl
lock
ficoml
push
in
sub
test
sub
sahf
push
stc
mov
mov
ds
adc
jnp
jns
imul
lods
add
clc
cmp
push
mov
xchg
and
sbb
in
mov
insl
xchg
inc
int3
lcall
call
add
cmc
xor
pop
ss
sub
mov
in
ljmp
pop
or
les
cmpsb
adc
daa
mov
mov
js
mov
or
stc
std
pop
dec
or
push
movzbl
iret
and
outsb
fstl
cmc
cmp
int3
mov
sti
pop
lea
lea
out
xor
xlat
mov
aaa
or
lds
and
mov
pop
or
iret
shlb
pop
adc
lods
mov
pushf
lea
roll
cld
xchg
pop
stc
mov
test
ja
jl
dec
hlt
das
aaa
jge
pop
dec
sahf
mov
cmp
mov
shll
shrl
dec
adc
popa
sub
adc
dec
dec
in
movsl
or
jecxz
push
scas
in
mov
out
cmp
dec
and
cli
xchg
jae
inc
sbb
mov
mov
push
pop
mov
mov
bound
sbb
adcb
mov
pushw
arpl
ja
fisttps
xchg
jo
push
mov
stc
pop
lds
xchg
mov
out
sub
outsb
out
enter
test
xchg
inc
xchg
jl
ja
and
push
fmull
sub
ljmp
dec
sbb
faddp
sub
adcl
data16
pusha
mov
or
call
fwait
mov
out
in
imul
sub
bound
mov
cmpsl
cli
test
pop
sub
andb
mov
jmp
imul
jo
int3
and
in
push
fiadds
fsubl
cmp
sub
shrb
sbbl
cmp
lods
pop
std
or
data16
and
std
fstpl
iret
neg
cmp
xchg
adc
pop
enter
mov
mov
pop
inc
dec
adc
lea
in
and
adc
jg
clc
fwait
leave
mov
sbb
xchg
sub
inc
test
aas
push
and
sbb
xchg
push
jp
test
inc
pusha
or
dec
inc
xor
cmp
add
in
js
movsb
jg
stos
lods
push
add
out
dec
dec
test
es
jb
in
adc
mov
insb
lsl
sbb
cld
subb
iret
lret
jecxz
cmp
aad
jnp
mov
test
pop
ja
pop
leave
and
out
andl
xchg
in
sbb
addr16
ret
xor
sub
int3
xor
mov
ds
addl
stc
xor
jb
pop
out
ret
lea
outsl
adcb
adc
pop
lret
sub
gs
dec
add
outsb
or
pop
push
or
sub
sbb
fwait
or
negl
mov
push
aaa
iret
dec
sahf
ljmp
dec
call
aas
mov
andb
aad
mov
mov
aas
out
cmp
jbe
loopne
or
adc
cmpsl
inc
and
push
cmp
movsb
xor
push
jo
xchg
popa
out
es
pop
push
addb
test
mov
cmp
mov
sub
mov
xchg
push
cld
movsb
ficomps
sbb
fdivr
cmpl
sub
inc
subb
adc
or
sbb
cld
jge
movsl
std
out
imul
and
lcall
mov
stc
mov
mov
pushf
push
jge
cmp
test
push
test
in
pop
dec
clc
stc
test
in
aaa
loope
cmp
cwtl
rcrb
es
imul
jg
and
ja
repz
add
pop
mov
stc
mov
imul
mov
inc
rolb
sub
mov
inc
imul
cmp
xchg
push
and
xchg
insb
lahf
js
mov
xchg
sbb
fidivl
icebp
cmp
je
jmp
xor
pop
cltd
fbld
dec
shlb
lcall
dec
sub
mov
icebp
sbb
push
fiaddl
cmpsl
mov
pop
adc
jns
bound
fiadds
or
sbb
sbb
add
inc
mov
inc
or
int
add
test
push
icebp
lds
adc
adc
pop
jae
mov
loope
and
fildll
sub
fdivrl
cltd
push
jmp
xchg
ljmp
aam
je
xchg
xchg
mov
push
sub
jae
ret
iret
shll
push
pop
xchg
adc
fistpl
rorl
push
cmpsl
nop
push
dec
mov
push
cs
mov
mov
pop
or
pop
shl
adc
xchg
lret
das
lea
dec
clc
pusha
in
or
ret
or
aaa
aad
outsl
shrb
push
sub
pop
ret
cmp
push
adc
mov
insb
mov
std
rol
pop
outsl
loope
and
cltd
cmp
lea
mov
dec
pop
jge
and
push
add
aaa
xchg
push
mov
mov
in
out
int3
adc
inc
sbb
in
jnp
movsb
cmpsl
mov
cld
and
ljmp
xchg
repz
lods
mov
rorb
das
repnz
xor
or
scas
add
sbb
adc
pop
sbb
js
sbb
mov
or
mov
sub
dec
push
mov
dec
fisttpll
cs
negl
push
cmpsl
popf
fsubrl
dec
mov
push
cmp
jnp,pt
shrl
test
lahf
mov
repz
mov
pop
jb
addr16
mov
lods
stos
mov
cld
outsb
in
push
mov
call
jle
inc
pop
mov
adc
imul
and
mov
btc
repnz
pop
mov
push
cmp
int3
add
mov
push
sbb
into
pop
mov
xchg
nop
mov
sub
dec
xchg
pushf
js
out
xchg
sbb
addr16
bound
in
lea
ja
loop
out
lods
or
mov
test
add
mov
pop
xor
mov
loope
sbb
jnp
cmpsl
push
pop
pop
leave
icebp
inc
xor
push
inc
add
ficoms
out
lea
enter
call
fsts
pop
cmc
stos
sbb
es
mov
push
pop
pop
out
xor
adc
je
shrl
pop
std
dec
inc
xlat
aas
daa
mov
push
in
add
pandn
and
mov
jnp
pop
aaa
fisttps
insl
je
xchg
es
inc
jae
push
lea
xorl
pop
mov
je
xchg
fdiv
in
and
pop
or
or
inc
inc
in
push
inc
add
int3
and
xchg
mov
adc
inc
pop
sub
pop
adc
pop
mov
es
jbe
mov
mov
xchg
xlat
fldenv
jl
lods
clc
inc
or
popf
and
hlt
mov
mov
inc
xchg
ds
xchg
rclb
fidivrs
inc
dec
fimull
jp
mov
jno
cmpsl
movsb
jmp
mov
add
sbb
cmpsb
in
mov
xor
pushf
mov
xchg
pop
dec
and
les
cltd
or
cmp
lcall
imul
push
and
and
cs
mov
mov
sbb
mov
mov
mov
mov
xor
rclb
fists
push
mov
es
sbb
mov
adc
popa
jmp
sub
outsb
std
out
rorb
rcrl
jbe
push
pop
push
loop
push
mov
pop
jns
movsb
jecxz
das
and
mov
fimuls
insb
and
lock
aad
pop
and
cmc
fs
xchg
and
divl
mov
jge
cltd
xchg
push
or
int
addr16
icebp
xchg
sub
imul
insb
mov
lds
fxtract
sbb
sti
movb
push
roll
push
xor
imul
in
pop
pop
mov
push
adc
jne
loope
repnz
xchg
outsb
dec
push
ljmp
sbb
and
dec
ljmp
mov
fbstp
or
adc
lcall
stos
pop
gs
jbe
xchg
sub
je
jbe
add
mov
adc
jnp
or
cmpsl
push
pop
insl
psrad
f2xm1
mov
cmpsl
pusha
pop
mov
jne
pop
or
int3
addr16
pop
das
inc
sub
es
jmp
mov
or
sub
sarl
iret
cld
mov
push
aas
fwait
movsl
jge
out
ror
xor
mov
fbstp
popl
adcb
sbb
outsl
leave
out
repz
jo
cmp
and
push
dec
fstps
fcomps
add
push
imul
jnp
ret
sbb
fmuls
xchg
lret
jne
pop
fistpll
inc
movsl
pop
or
jge
pop
jge
lods
lcall
inc
add
xchg
xchg
in
push
idivl
mov
pusha
fiaddl
in
pop
test
mov
adc
rcr
loop
push
adc
add
sbb
in
shll
dec
mov
jno
push
fcomps
stc
rclb
negb
pop
movsl
pusha
rcrl
and
dec
pop
sbbb
xchg
push
push
mov
ja
loopne
cli
shrb
outsb
xchg
ja
fmuls
or
ret
sub
sti
jp
aad
add
dec
mov
jle
xchg
mov
sub
aaa
out
stos
and
shl
push
sbb
add
or
imul
lahf
fwait
pop
xor
loope
mov
pop
pop
inc
mov
enter
lds
and
imul
jns
dec
fmulp
cmp
in
adc
jmp
subl
aaa
ret
xchg
cltd
andb
push
add
mov
fmull
int
icebp
inc
pushf
xchg
lods
xor
es
subb
dec
cmp
jnp
cmc
imul
cltd
and
mov
dec
jp
pop
es
xor
jecxz
das
call
push
xchg
mov
mov
cmpsb
jp
pushl
push
cmp
mov
mov
iret
dec
arpl
pusha
outsl
or
out
jmp
fisubs
inc
inc
div
movsb
test
icebp
enter
mov
sti
int
pop
mov
into
jmp
mov
jg
inc
jae
out
push
inc
in
rolb
jl
sub
mov
stos
arpl
sbb
aas
mov
sub
push
mov
ret
cmp
pop
cs
repz
mov
aaa
mov
fwait
loop
xchg
sub
mov
in
adc
lock
fdivl
inc
mov
jbe
testl
testl
adc
cs
jle
shrb
mov
imul
test
outsb
dec
ljmp
push
ja
imul
cmp
leave
lock
stc
jp
or
in
ljmp
cmpsb
aam
lods
mov
icebp
loope
inc
rolb
subb
shr
xchg
inc
mov
ss
sti
cmp
jne
mov
ret
sub
mov
xlat
inc
rorl
ret
xor
mov
xchg
dec
scas
mov
sub
test
or
add
hlt
mov
into
icebp
add
scas
int3
mov
mov
or
push
xor
and
mov
int3
mov
jbe
outsb
adc
sbb
cmp
std
shrl
add
dec
outsl
std
dec
outsl
adc
cmpb
mov
jno
xchg
pop
push
and
mov
scas
cmpb
shll
xchg
lods
or
mov
fs
stc
xor
xchg
jnp
outsb
cli
js
adc
roll
push
add
mov
imul
dec
adc
fwait
xlat
arpl
cmp
mov
int3
dec
roll
es
enter
nop
and
ds
adc
fidivl
rolb
ficoml
je
cwtl
inc
in
xchg
adc
stos
add
xchg
xchg
mov
xchg
push
jb
mov
sar
adc
jno
js
js
mov
pushf
jae
rorl
fcomip
dec
or
test
lods
adc
stos
jp
ficoml
shl
je
add
stos
ret
cmpb
mov
ja
dec
popf
mov
ret
cli
aas
pop
push
arpl
adc
rolb
jle
iret
rol
pop
lea
aaa
out
inc
xor
rcl
sbb
in
out
jns
cltd
sub
add
scas
rcrl
scas
pop
mov
sub
xchg
out
xchg
pushf
adc
test
xor
shrl
xlat
xor
adc
mov
mov
xchg
mov
cs
and
inc
mov
hlt
pop
mov
jb
cltd
cmp
cmpsl
int
sub
xchg
add
jecxz
pop
mov
and
add
pop
gs
sbb
xchg
mov
pop
fldcw
adc
xchg
addr16
jg
mov
daa
repz
fcoms
xchg
jmp
xor
mov
sahf
outsb
shr
xchg
das
push
jnp
insl
mov
dec
jle
das
mov
mov
sar
mov
adc
add
aaa
adc
aaa
sub
adc
push
or
cmp
stos
dec
push
lahf
sbb
jmp
jno
and
push
adc
rcl
pop
repz
es
dec
adc
adc
cmpl
mov
xor
jae
jae
jecxz
hlt
and
int3
xlat
fadd
mov
mov
dec
sbb
jae
into
fsubl
cmpsl
sub
sub
std
fldt
ja
std
pop
mov
jb
mov
enter
mov
sub
cmpsl
xchg
cmp
push
in
in
adcb
sbb
and
sbb
push
jge
push
lea
add
out
leave
jge
outsb
mov
pop
pop
cmp
movsb
cmp
sti
in
insb
sbb
and
jg
pushf
fstpl
push
movsl
add
mov
add
cmp
xlat
sbb
adc
roll
dec
mov
aad
test
rclb
mov
pop
lahf
rorb
mov
dec
and
test
insl
enter
lods
mov
mov
push
loope
bound
or
dec
inc
pop
add
dec
push
push
ss
mov
and
lds
cli
pusha
popf
int3
or
pop
fninit
iret
jl
fsubr
add
test
sarb
and
cmp
lret
and
shrl
inc
push
jne
dec
stos
jb
dec
pushf
dec
fsubl
sbb
jle
sbb
dec
xor
cmpsl
and
cmpsl
xchg
mov
dec
outsl
sbb
lahf
loop
xchg
or
pop
lea
add
mov
add
lods
movsl
xchg
lea
lea
push
add
aaa
mov
pusha
in
test
and
jmp
pop
imul
sahf
mov
pop
jmp
scas
nop
or
fisubrs
jne,pt
int
cwtl
adc
sbb
repnz
frstor
adc
sbb
cli
cmp
pop
xchg
je
into
jnp
insl
aad
movsl
mov
mov
mov
sub
xor
cmp
mov
mov
rcr
jns
sbb
outsl
dec
and
call
jp
lods
sbb
add
jge
pushf
icebp
aas
mov
data16
pop
das
inc
adc
hlt
xor
mov
xor
shll
sub
and
test
js
sbb
inc
jo
ljmp
push
mov
js
sub
ja
or
mov
loopne
shlb
in
popf
mov
call
imul
cs
addl
movsb
test
gs
push
pop
lea
pop
dec
cld
mov
loopne
lods
jmp
filds
shl
push
test
push
inc
mov
rolb
dec
xchg
sub
les
test
push
loop
push
stos
shl
mov
mov
rolb
mov
neg
in
xorl
push
test
xor
inc
fildll
addb
bound
imul
push
push
xchg
sub
fcompl
xchg
dec
or
sbb
mov
mov
cmpsb
inc
into
mov
movsl
mov
in
mov
ja
repnz
dec
sub
pusha
dec
dec
aaa
aaa
int
mov
popa
dec
aad
add
outsb
push
aas
mov
sti
in
pusha
push
mov
push
shrb
adc
push
sub
cmp
shrl
fisttpl
ja
js
xchg
fcoms
daa
mov
loop
and
dec
jnp
push
outsl
call
sbb
or
mov
fiadds
xchg
xor
scas
inc
test
adc
pop
sbb
inc
and
inc
sahf
in
pop
sub
sbb
jbe
cli
test
mov
inc
lods
repz
push
jns
aad
jmp
xchg
push
roll
and
inc
mov
and
add
stc
pop
or
inc
mov
into
lock
mov
ret
pop
imulb
jb
int3
pop
mov
sub
clc
ds
adc
orb
mov
mov
dec
add
aas
repz
loop
push
xor
out
sbb
sbb
arpl
test
stc
push
fwait
add
xchg
cmp
sub
sbb
repnz
cld
lret
insl
push
mov
clc
lret
aad
cltd
call
in
mov
or
frstor
lock
lock
shrb
inc
call
pusha
xor
daa
cmp
push
out
xor
inc
and
fldl
xchg
ss
inc
mov
lods
xchg
out
mov
pop
test
arpl
mov
sti
daa
or
incb
jg
negl
out
lds
dec
shll
cmp
fidivrs
push
stos
add
mulb
xchg
inc
inc
xlat
push
test
imul
je
or
cmc
push
cmp
cmp
lds
lds
int
sbb
push
dec
xchg
iret
adc
and
push
dec
mov
pusha
adc
mov
push
sbb
leave
xorb
dec
push
or
pop
pop
cmp
shll
mov
dec
pop
mov
push
mov
add
das
test
das
dec
pop
icebp
cltd
fs
mov
mov
mov
jno
sbbl
push
enter
incl
fsubrl
xor
push
cmp
mov
ret
mov
jp
inc
sub
je
fisttpll
lcall
mov
push
pop
xor
lea
xchg
lret
dec
xchg
fwait
pop
sub
sub
jp
ljmp
ljmp
jge
mov
push
xor
loopne
inc
or
in
cwtl
pop
push
and
stos
sbb
and
and
add
push
mov
ret
call
es
push
daa
push
cmp
aam
mov
pop
inc
and
fucomp
icebp
lds
push
cwtl
add
call
jmp
js
and
pop
addr16
sbb
xor
loope
xchg
shl
jg
lods
pop
add
push
mul
imul
pop
pushf
cmc
and
ret
pop
cwtl
xor
xchg
mov
add
mov
cld
imul
push
testb
scas
dec
mov
movsl
stc
dec
movsb
jge
in
dec
stos
adc
test
dec
sbb
xchg
les
push
adc
sbb
push
dec
imul
or
into
pop
ffree
mov
cld
sarl
mov
push
sub
in
pop
stc
jne
lds
mov
and
lock
inc
mov
jo
push
sub
stos
daa
adc
jge
and
ss
or
aam
pushf
movq
outsb
mov
mov
dec
std
push
add
add
push
sub
mov
dec
cmpsb
arpl
pop
mov
pop
lret
rolb
fdivr
mov
ljmp
mov
or
jnp
aam
insl
push
es
aad
sahf
and
xchg
jle
scas
mov
mov
adc
in
mov
imul
xchg
out
mov
xchg
pusha
inc
push
or
push
sbb
adc
idivl
cmp
arpl
ss
sarl
xor
mov
mov
shl
mov
jp
ljmp
sbb
mov
cmp
fstp
push
fistpll
hlt
stos
scas
shrl
gs
sti
sbb
rclb
push
cld
sarl
leave
mov
push
mov
inc
je
cmp
lcall
adc
xor
popf
out
cld
sti
push
or
push
jmp
jno
mov
sbb
jl
push
mov
or
mov
out
pop
mov
arpl
mov
mov
ljmp
pop
xchg
cs
int
insb
push
test
mov
scas
popf
icebp
sbb
inc
push
lcall
jmp
imul
xor
fs
sar
ret
push
and
aam
mov
popa
mov
jl
cltd
addr16
mov
xchg
cmp
mov
pop
mov
or
call
jno
in
xor
rclb
jecxz
popf
pop
in
cmpsb
or
adc
shlb
int
push
dec
lahf
fmul
out
pop
lret
xchg
sbb
insb
popf
adc
sti
pop
jmp
scas
das
je
ror
std
jo
addl
outsl
xchg
adc
test
in
and
pop
mov
push
in
jecxz
jo
push
lods
sub
and
ds
cmp
fiaddl
mov
iret
cmpsb
push
pop
and
push
pop
dec
add
int
negl
or
push
sbb
repnz
adc
jbe
or
xlat
xorl
pop
xchg
imul
roll
push
dec
cs
fs
es
xchg
cmpsb
or
loope
lods
sbb
inc
push
adc
lahf
call
adc
xchg
xchg
testl
mov
dec
dec
clc
inc
incb
out
shlb
rorl
add
xchg
inc
or
or
xchg
xchg
stos
pop
xchg
mov
sbb
inc
xchg
pop
adc
mov
fsub
sub
push
pop
xchg
negl
inc
imul
loop
add
xorl
or
in
mov
push
add
aad
in
xchg
out
inc
xlat
test
mov
or
in
pop
or
xchg
inc
aas
sbb
mov
mov
jle
int
and
xor
jg
jle
push
scas
mov
add
pop
sarb
lods
pop
jp
or
and
or
in
into
orb
pop
sarl
loop
test
dec
mov
sub
test
dec
shl
jae
mov
adc
adc
pop
cs
bound
xlat
sbb
dec
icebp
out
mov
dec
fwait
push
mov
popf
into
movsb
xchg
push
inc
dec
adc
test
fcmovne
test
or
mov
and
add
popf
addr16
jg
in
cld
cs
jo
pop
push
mov
pop
pop
aam
mov
xor
sub
pop
sti
add
es
add
mov
sbb
das
fnstcw
test
lods
shl
aas
jmp
dec
jl
call
adc
mov
ds
mov
fistl
xchg
aas
xchg
xchg
not
inc
or
sbb
jg
test
jg
xchg
fs
sbb
cmp
leave
fs
aad
sub
push
inc
popl
sbb
xchg
stos
pop
call
push
out
cmp
pop
mov
xor
jmp
cmp
sub
xlat
xor
lea
xchg
lret
push
lret
stc
cmc
sbb
adc
add
arpl
adc
inc
inc
mov
mov
aas
sub
clc
push
pop
idivl
inc
mov
mov
add
fcomps
jp
das
sub
in
sub
punpckhbw
scas
mov
sbb
lods
xchg
add
addr16
push
jp
cmp
lds
pop
sub
xor
sbb
inc
ret
sbb
push
jecxz
cs
sub
pop
sbb
push
push
push
mov
mov
mov
jno
in
ret
mov
jecxz
mov
jb
test
in
cmp
jecxz
add
lea
ss
fbld
lds
leave
cmpsb
stos
outsb
and
jp
mov
sbb
mov
pop
daa
lods
add
dec
daa
dec
cmpsl
mov
and
or
and
dec
jp
xor
negb
and
lds
or
sub
test
jno
pop
cld
fmul
aas
sub
dec
cmp
sahf
sbb
jno
pop
add
inc
imul
inc
in
xchg
cld
cmpl
outsb
push
mov
or
loopne
mov
sbb
jo
sbb
cwtl
sbb
sbb
xchg
xchg
scas
push
push
cmp
add
imul
rcll
adc
push
cmc
sub
into
pusha
mov
add
push
or
dec
push
mov
push
and
mov
mulb
mov
ficompl
leave
mov
out
call
pushf
sbb
popf
out
cmpsl
push
mov
jns
imul
push
lret
xadd
int
leave
mov
js
adc
cli
aas
leave
ret
repz
iret
mov
sbb
ljmp
hlt
mov
sar
inc
lock
lret
outsl
cs
inc
xchg
pop
cmp
xchg
test
mov
add
test
arpl
xchg
dec
in
loopne
xchg
ds
fimuls
shr
jae
sub
push
fs
mov
stos
cmpsb
dec
in
fnstenv
js
add
fwait
sub
pop
icebp
cmp
daa
lea
or
and
insl
rorl
mov
repz
dec
mov
inc
mov
scas
sub
testl
aas
lahf
mov
ss
push
dec
cmp
mov
or
cli
xchg
add
data16
stos
jne
mov
scas
inc
mov
ret
inc
push
movq
test
and
push
inc
in
add
adc
add
push
adc
lret
mov
in
cld
int3
mov
sbb
inc
sub
or
jo
cmpsl
shrb
adc
loop
push
cli
packssdw
into
mov
xlat
in
xlat
jge
dec
jmp
sti
mov
cmp
jmp
ljmp
or
fbstp
jns
push
pop
js
fisttpll
sbb
jmp
add
push
or
in
inc
mov
cmp
out
or
shl
and
and
mov
jmp
bound
inc
out
mov
push
and
pop
lahf
push
test
popf
jae
or
adc
or
into
sub
movsb
pop
test
mov
push
das
and
ret
push
xor
add
mov
hlt
pop
mov
mov
test
repz
jns
iret
cli
or
inc
daa
lahf
xchg
in
jg
cmc
push
pop
cmc
fldcw
std
xchg
inc
push
jae
and
mov
push
lods
cli
mov
dec
mov
adc
fs
jmp
fsts
daa
inc
dec
jo
iret
and
jl
imul
add
or
push
sbb
dec
jge
mov
bound
add
push
jbe
mov
cmp
sub
xor
or
int
cmp
adcb
aad
popa
inc
dec
xor
outsb
lds
pop
jae
push
push
mov
cmp
popa
out
cld
sahf
or
push
or
out
addb
test
movl
pop
add
movsl
add
daa
inc
mov
or
rorb
popa
add
movsb
xor
jno
in
adc
push
insl
ret
xlat
addr16
insb
shlb
mov
scas
jnp
or
lods
cmp
cltd
dec
and
xchg
les
imul
inc
inc
cmpb
cmp
mov
imul
lcall
xchg
adc
test
movb
ja
enter
inc
loop
outsb
jno
pusha
out
adc
enter
cmpsl
pop
and
inc
xchg
push
sar
mov
cs
push
in
data16
and
cmp
pushf
and
jb
dec
or
xchg
imulb
and
or
jns
int3
jle
inc
hlt
rcrl
stos
xchg
cmpsb
jno
cmp
out
aas
mov
mov
cli
sahf
sbb
ja
dec
push
sub
repz
outsl
adc
scas
pushf
fsubrs
mov
sbb
xor
lods
daa
scas
dec
arpl
cwtl
mov
inc
fs
jno
pop
fdivs
arpl
bound
xchg
insb
sub
pop
mov
fldt
jbe,pt
sbb
js
and
mov
cmp
jle,pt
fadd
cld
mov
adc
lret
xchg
cmp
jns
fs
cmp
push
jns
enter
mov
ret
push
lock
push
pop
cmp
or
or
dec
adc
adc
adc
ret
jge
xchg
stos
sbb
ds
pop
jne
inc
fisubs
test
jo
cs
dec
cmpsb
bound
push
pusha
and
cmp
jg
mov
pop
into
add
in
jmp
mov
add
sbb
fsubrs
adc
sub
adc
cmp
aam
scas
sbb
or
dec
pop
pop
sub
xchg
ja
in
xor
clc
inc
jge
sub
cmp
xchg
mov
loopne
adc
je
sub
add
cli
mov
shll
insl
mov
add
mov
or
fxch
or
xchg
or
xchg
addl
xchg
sbb
mov
inc
fstpt
cli
or
cmp
into
add
sub
mov
adc
pop
fcomps
cmp
iret
pop
xchg
imul
dec
scas
fisubrs
xchg
cs
dec
push
cmc
jmp
ja
push
imul
xor
ds
data16
ret
or
mov
jg
hlt
sub
sbb
rol
xchg
dec
mov
jle
hlt
das
stc
pushf
outsb
mov
out
fistps
sbb
push
inc
adc
orb
aas
ficoml
ret
xor
aaa
cmpsl
or
sbb
add
aad
iret
out
xor
or
cmpsb
jnp
cmpxchg
stos
adc
and
sub
sub
add
and
jecxz
out
mov
daa
sub
mov
jp,pt
jmp
sbb
jl
inc
push
mov
shrb
push
xor
pop
loopne
stos
mov
aam
bound
inc
imul
ret
enter
dec
xor
push
lret
lea
push
adc
jecxz
movsb
sub
insb
stos
add
stos
jno
lcall
push
clc
orb
cmc
push
push
push
stos
mov
fdivr
mov
xor
push
ret
repz
fldt
in
jb
cld
mov
bsr
mov
lcall
daa
mov
xor
add
dec
dec
jo
mov
stos
je
lods
add
mov
stc
scas
sbb
lock
pushf
sub
lret
cs
pusha
inc
fsts
lret
pop
cmp
push
mov
fnstcw
iret
pushf
sbb
test
into
adcb
incl
aam
jmp
outsb
addr16
pop
insl
jmp
cltd
bound
jg
rcrb
testb
mov
push
hlt
push
add
lret
dec
jg
mov
and
lods
aas
xchg
popa
cmp
xchg
add
pop
sbb
adc
mov
ret
in
test
cmp
incl
fs
pop
into
ljmp
lds
shlb
cmp
cmp
aaa
mov
jno
das
inc
inc
xchg
jl
jns
xchg
flds
jnp
mov
pop
mov
and
lods
jnp
lcall
and
jb
in
aam
lods
imul
fidivs
mov
ret
mov
sub
sub
out
or
in
push
cmp
adc
xor
test
push
aam
aad
fdivs
xor
mov
push
pop
and
push
add
jbe
lods
pop
cmp
mov
pop
mov
int
int3
xchg
cli
scas
xchg
int
xchg
fistpll
cltd
sub
or
adc
mov
push
movsb
mov
idiv
xchg
fmulp
mov
adc
out
mov
lcall
ljmp
lods
movsb
ljmp
mov
cmp
pop
in
pusha
ljmp
mov
loope
outsb
das
pop
ficoml
cmp
das
inc
fdivrl
mov
inc
xor
loope
rol
mov
fiaddl
pop
in
and
inc
popf
mov
cmp
adc
addb
jbe
int
mov
sbb
push
repnz
mov
lods
pop
xor
sbb
movsb
adc
sub
mov
and
inc
nop
in
push
xor
into
sub
lds
mov
cmp
fdiv
add
mov
push
lret
xor
lcall
jmp
jnp
insl
imul
push
sbb
les
dec
pop
mov
ds
fidivs
cs
jmp
in
add
pop
jne
loop
int3
adc
push
add
aaa
scas
or
es
jmp
or
push
cld
test
scas
mov
fisubrs
cmpsl
in
stos
test
cmp
cmc
cmp
push
or
inc
ret
das
dec
xor
cmp
je
pop
test
outsb
mov
inc
sub
imul
inc
jge
adc
fwait
sub
sub
push
and
sbb
xor
add
and
pop
jmp
arpl
imul
scas
stc
scas
es
mov
push
jl
cltd
shll
or
loopne
push
jmp
rorl
test
cmpsb
mov
jp
pop
push
xchg
fiadds
sub
or
fbstp
mov
mov
lods
dec
dec
test
xchg
stos
sbbl
dec
sarb
out
test
mov
lea
dec
scas
insb
lds
in
and
imul
sahf
int
ja
jne
inc
and
mov
hlt
jb
dec
in
loop
aad
cld
or
sbb
fdivrs
mov
faddl
shlb
bound
xchg
arpl
cli
loop
cmp
cmp
xchg
xchg
adc
mov
xchg
push
inc
loope
lahf
or
aad
fdivrs
das
and
push
dec
loopne
push
xchg
mov
inc
push
sub
jmp
push
inc
and
ja
pop
mov
ret
sbb
dec
sahf
pop
fwait
sub
xchg
push
inc
mov
add
mov
shl
ss
mov
inc
mov
cmp
hlt
add
jnp
mov
xchg
ret
in
or
jo
outsl
sub
mov
mov
xor
cmp
loope
dec
gs
int3
outsl
cmp
and
push
dec
fimuls
mov
mov
in
lahf
jbe
jae
jb
sbb
adc
jo
outsl
loop
iret
pop
dec
lds
pop
sbb
pop
jle
neg
in
pop
loope
ljmp
bound
sbb
or
mov
and
cmc
mov
push
push
pop
out
hlt
in
andb
inc
push
xor
loopne
scas
fs
and
lahf
aas
sbb
add
pusha
fdiv
mov
in
adc
in
jmp
cmp
fyl2x
jns
xlat
iret
ret
cmp
in
out
xchg
addb
in
push
sti
cli
or
lods
and
inc
nop
and
sub
fwait
cmc
jno
fsubr
mov
mov
or
fs
ljmp
mov
sbbl
es
das
push
test
test
es
stos
rcll
fists
jae
dec
sbb
scas
pop
mov
mov
inc
jbe
cmp
clc
iret
pop
aas
dec
es
dec
leave
cs
sbb
ficoms
push
imul
lock
push
lret
xchg
in
mov
adc
insl
out
xchg
jmp
jg
mov
xchg
jno
sub
nop
dec
cld
mov
outsb
jns
and
mov
jp
push
sti
inc
in
fcom
lcall
adc
xchg
test
daa
mov
into
or
lret
popl
ss
inc
xor
ret
lret
lahf
mov
push
and
lds
scas
sbb
int3
bswap
outsb
jmp
pushf
andb
test
xor
pop
mov
sub
mov
cmpsb
push
bound
iret
pop
cs
orb
lahf
lods
ja
cmc
jmp
inc
pop
xchg
inc
stos
outsl
stc
mov
fdivrs
xchg
in
sti
or
sub
insb
xchg
and
push
cmp
hlt
test
ljmp
mov
jo
add
xchg
push
jmp
movsb
cmp
sbb
mov
push
popf
mov
pop
in
lret
pusha
in
adc
push
addr16
or
inc
lds
xchg
popa
int
xchg
pusha
pop
or
push
push
cmp
dec
or
sbb
xor
test
imul
add
scas
jae,pn
hlt
jl
xor
andb
insb
stos
mov
sbb
push
lret
gs
ret
pop
mov
add
into
cmp
int3
dec
cmp
pushl
sbb
push
jp
out
fstpl
xor
xor
loope
outsl
adc
mov
add
ja
sub
cmp
sub
ss
enter
ja
lods
push
insb
aam
aad
pop
mov
push
adc
aad
mov
loopne
add
pop
pop
xchg
sbb
jne
js
cld
xor
fisubrs
mov
scas
mov
call
repnz
stc
or
test
aam
in
lcall
test
xchg
scas
xorb
add
insb
test
pop
jne
inc
hlt
pusha
in
xorl
sti
adc
dec
outsl
mov
adc
dec
dec
fldt
xor
pop
xor
dec
xchg
gs
add
push
xchg
sets
es
jmp
sbb
aas
out
test
mov
rol
sar
call
push
leave
inc
or
mov
pop
cli
mov
or
int
sub
outsb
fcomps
or
popa
adc
lods
addr16
rol
sbb
add
and
cmpsb
inc
jmp
dec
push
mov
lea
xor
lcall
pop
jno
mov
repz
and
std
insb
es
sub
pushf
push
cmp
das
stos
push
inc
inc
and
int3
mov
sti
sub
xchg
stc
pop
mov
cmpxchg
or
in
mov
mov
xchg
push
scas
adc
mov
fstps
mov
xor
into
in
pop
in
or
xor
inc
and
je
cmp
lcall
stc
aas
cmpl
xchg
jno
add
les
into
jle
int
or
sbb
sub
sbb
jl
ljmp
lret
xchg
pop
pop
insl
push
movsb
adc
or
pop
pushf
add
das
sbb
les
notb
dec
jb
add
cmp
dec
scas
xchg
fisttps
aas
add
mov
nop
pop
test
xchg
xor
push
test
sbb
sbb
inc
fmull
movsb
inc
pop
lcall
fdivrs
and
es
adc
dec
sbb
js
jns
push
push
sti
incb
mov
fs
into
jmp
inc
sbb
cmpsl
push
and
mov
push
in
xchg
jb
aad
pop
jnp
popa
enter
mov
or
mov
jge
cmp
mov
adc
out
xchg
aam
xchg
xchg
cmp
add
cwtl
xchg
cmp
sub
inc
imul
shll
jae
sbb
and
pop
or
lret
jno
jno
mov
jae
les
mov
imul
jnp
bound
adc
jle
je
test
ljmp
adc
mov
pop
test
stc
add
pop
push
faddl
nopl
sub
pushf
inc
sub
and
xchg
aaa
lret
jb
mov
mov
shl
push
mov
or
adc
shll
ret
imul
aas
or
rcr
or
jno
sbb
pop
mov
pop
shrl
push
sub
or
mov
imul
xchg
mov
or
xor
imul
into
je
rcll
mov
cmp
leave
push
jbe
icebp
pop
mov
aam
or
jle
pop
dec
shlb
and
xor
sbb
ror
in
and
xchg
das
fstp
lret
mov
adc
mov
shlb
jecxz
inc
mov
ds
lods
xchg
mov
fcomps
addb
ljmp
mov
mov
jg
sbb
push
pop
push
push
fdivl
shlb
push
iret
xchg
invd
test
xchg
es
stos
push
add
lods
adc
xor
xchg
mov
pop
dec
jae
popf
adc
rorl
fidivrl
adc
in
add
mov
push
fs
xor
popa
mov
aad
jns
test
push
and
dec
stos
jle
push
fwait
sub
movsl
or
ret
pop
jae
jmp
jmp
mov
push
jne
xchg
mov
ds
xor
fucomi
mov
sbb
mov
insb
pop
loop
lods
mov
aad
sub
jbe
lret
fs
sbb
cmpsl
add
adc
clc
insb
mov
popa
sub
cltd
jg
add
adc
xchg
lahf
daa
inc
mov
dec
sbb
mov
imul
xchg
movsl
and
mov
xor
into
dec
ja
sbb
or
sbb
iretw
and
jnp
dec
push
fcmovnu
push
ficomps
rcrb
aaa
and
inc
xchg
ffreep
inc
mov
dec
xor
mov
add
sub
xchg
or
sti
add
mov
in
jmp
dec
sub
jno
rclb
pop
leave
fcmovnbe
sub
add
sti
mov
xchg
andl
mov
les
divl
cmpsl
rcr
jbe
sub
inc
mov
lcall
dec
mov
js
repnz
cmovne
xor
xlat
insl
dec
ljmp
mov
and
cld
out
ret
xor
mov
inc
fcmovb
mov
mov
inc
pop
aaa
jo,pt
cmp
mov
lcall
push
xchg
test
ret
mov
stos
stc
xchg
mov
xor
sti
jae
dec
lcall
sub
push
lds
lea
repz
mov
pop
add
add
inc
scas
sbb
cmp
cmpsb
aam
cmp
fnop
jecxz
faddp
inc
adc
mov
add
and
push
and
mov
adc
in
cmpsb
cmp
movsl
adc
xchg
nop
sub
push
push
mov
stos
fimuls
and
xchg
dec
mov
cs
inc
stc
sarb
pop
xor
xor
push
xor
int3
add
imul
into
loopne
jecxz
das
xchg
sub
lods
es
dec
mov
jo
cmp
insb
add
dec
aam
sbb
mov
pop
aad
jae
hlt
pushf
mov
in
data16
aad
adc
mov
sbb
int3
clc
jo
jnp
or
mov
mov
and
push
insb
add
stc
rcrb
inc
sub
icebp
jecxz
jae
in
xor
pop
pop
loope
mov
mov
test
jb
cmc
repnz
xchg
sbb
xor
pop
lret
loop
movsl
or
in
cld
dec
or
rcll
adc
mov
pushf
xor
movsl
lret
mov
aaa
stc
and
mov
or
sub
xchg
and
inc
out
out
mov
int
shrl
fiaddl
mov
pop
push
xlat
cmpl
sti
fstps
push
int3
sahf
inc
jne
inc
gs
or
cli
mov
repnz
add
sti
movsl
loopne
mov
pop
jmp
jecxz
sbb
fsubs
hlt
ljmp
in
add
ja
push
xchg
or
or
mov
cltd
sub
es
hlt
divb
sbbl
mov
aas
cmp
sub
fcomps
arpl
dec
rclb
cmp
loop
pop
dec
fstpl
je
jge
bnd
ror
mov
pop
loop
sahf
jmp
jecxz
jnp
loopne
jno
sar
aam
push
add
jg
int
dec
fisubl
pop
inc
sahf
mov
aaa
out
adcb
jge
or
ror
jns
addb
lahf
jl
and
cltd
and
lret
mov
xchg
xchg
pushl
out
cmpsb
and
loope
loop,pn
stos
push
push
or
sub
stos
xlat
sbbb
and
scas
mov
cmp
inc
sbb
add
in
repnz
and
mov
mov
push
and
xlat
test
xor
add
jo
in
in
pop
jmp
or
xor
cltd
addb
push
enter
jae
cwtl
cmp
in
cmpsl
imul
ret
adc
mov
xor
mov
jp
je
imul
or
cs
add
cld
cmpsl
std
fldt
les
loope
and
adc
lret
sbb
subb
out
xchg
push
mov
imul
sbb
push
bnd
sti
mov
cmp
int
lock
jg
push
xchg
iret
push
xchg
pop
jg
repz
sbb
js
popa
rcrb
add
inc
jl
or
iret
fnstenv
je
loop
arpl
rclb
cmp
sbb
mov
cmpsb
std
leave
xor
adc
pusha
repz
mov
loope
mov
mov
int3
mov
fdivrl
scas
mov
mov
stos
jns
cmp
std
pop
xchg
xor
in
lret
jecxz
pop
sub
inc
xchg
in
ljmp
dec
fwait
xchg
out
das
mov
test
scas
jnp
in
in
ror
shlb
popa
push
xchg
loop
or
cmp
sub
sbb
mov
es
test
mov
movsl
mov
int3
stc
mov
negl
inc
mov
jno
aaa
enter
fsubs
and
shlb
aad
push
adc
push
adc
loope
mov
fisttps
mov
pop
ds
and
mov
int
jmp
jl
push
test
fcomps
mov
les
pop
fwait
mov
sub
shrb
out
sbb
out
inc
ret
push
xchg
adc
ret
push
cltd
movsb
ret
dec
pop
push
push
fcmovnu
pop
sbb
adc
insb
movsl
jecxz
movsb
sti
cwtl
fs
add
pop
lahf
mov
xor
movsl
and
daa
sub
inc
sub
cmp
orl
inc
out
sub
xor
cwtl
call
loopne
mov
loop
add
stos
inc
or
loop
daa
lahf
in
dec
adc
stc
mov
push
jl
mov
das
mov
out
inc
xorl
repz
sar
mov
cmp
lret
jns
dec
mov
stos
pop
jecxz
dec
fnstsw
xor
out
ljmp
add
cmp
mov
cmp
outsb
insb
pop
cmpb
push
into
testl
jle
pop
lcall
fwait
clc
sbb
cmpsl
push
mov
sti
ret
insl
mov
push
xor
push
les
push
cmc
cmp
fstpl
fisttpl
xor
sbb
and
mov
sbb
sbb
cmpsb
cmp
imul
repz
cmp
popf
or
pushf
rclb
movsb
sti
adc
pop
js
in
fnstenv
sar
sbb
mov
inc
add
mov
push
cmp
sbb
sbb
shrb
in
icebp
push
cltd
or
mov
sub
shrb
and
lret
inc
pop
test
mov
lahf
xchg
dec
into
gs
sub
cwtl
push
sar
int
inc
xor
pop
stos
adc
xchg
rcl
cmc
subl
movsb
cmp
aaa
mov
cmp
stos
sub
push
or
shrb
push
cmc
inc
inc
popa
shlb
fists
push
cmpsb
mov
in
dec
xchg
dec
cmc
mov
fs
in
sub
add
fnsave
xor
fiaddl
stos
es
scas
jbe
into
add
je
xchg
sbb
jg
xchg
dec
add
or
add
sbb
clc
fwait
jg
sub
ds
pop
jne
in
sub
and
xchg
lret
mov
sub
xor
inc
les
push
mov
imul
pop
xchg
jge
mov
divb
jmp
adc
push
jp
xchg
cld
sbb
or
lock
push
pop
push
jle
insb
addl
pop
fistpl
xor
imul
out
xchg
je
repz
shlb
out
ss
mov
cmp
dec
cs
mov
mov
lock
cmpsl
cmpsl
jmp
call
stos
dec
mov
xchg
sbb
mov
iret
xor
cltd
insl
xor
addb
dec
or
fnstcw
rcrl
lcall
rcrb
and
aaa
loop
scas
insb
push
xchg
in
fisttps
out
cwtl
xchg
cld
mov
add
and
pop
add
fidivrl
pusha
rorl
dec
jnp
aaa
dec
ljmp
sub
mov
cli
imul
cmp
push
rcll
pop
stc
outsl
cmp
iret
cmp
jae
mov
bound
xor
icebp
cmpsl
pusha
loop
movsl
rcr
test
imul
stos
ja
das
xor
popf
leave
add
push
dec
in
pop
pop
pop
cwtl
xor
loope
push
mov
mov
lret
mov
ss
pop
lahf
cltd
lret
jecxz
sbb
rcl
xchg
xchg
lcall
inc
dec
xchg
ja
adc
or
push
mov
xchg
push
iret
mov
and
jne
in
and
hlt
out
adc
xchg
fildll
sub
aam
xchg
lds
adc
and
sti
push
test
push
pusha
clc
orb
popf
push
cmc
ljmp
fucomip
adc
push
dec
sbb
movsb
push
mov
or
sub
icebp
dec
rcrl
mov
push
test
in
rclb
mov
cmpsl
jge
inc
cmpsb
lret
scas
push
cmp
ja
xor
cmp
negb
outsb
je
inc
inc
xor
and
test
push
jae
sbb
cmc
add
stos
sbb
sbb
aad
jnp
and
sahf
insl
imul
dec
mov
pusha
xor
push
inc
push
sar
aas
inc
int3
les
test
es
int3
outsb
jmp
out
pop
jnp
cmp
cmpb
push
mov
mov
test
and
pop
dec
test
mov
mov
xchg
pop
dec
cmp
outsb
das
shlb
cmp
cmp
icebp
mov
sbb
lea
sti
sti
add
mov
mov
cwtl
aaa
je
out
js
inc
xchg
push
in
pushf
mov
out
inc
ror
jl
or
in
or
cltd
fstpt
fdivs
inc
sbb
out
inc
dec
mov
icebp
mov
loope
jge
inc
mulb
xchg
cmc
je
popa
out
mov
cmpsb
dec
mov
loope
jg
add
fistl
data16
xor
cmpsb
dec
scas
inc
xorl
mulb
in
jnp
xor
cmpsb
push
sub
in
repnz
rorb
adc
dec
sahf
addl
dec
dec
je
stc
inc
in
jl
test
push
sbb
push
mov
push
jecxz
mov
xor
mov
shufps
mov
xor
inc
lret
xorl
addr16
mov
sbb
fmull
mov
cwtl
je
pop
cmp
adc
push
add
cmp
fisubl
mov
aad
cmpsl
js
lds
cmp
jo
fisubrl
daa
mov
mov
repz
insb
mov
lods
in
mov
push
mov
mov
dec
xor
scas
mov
push
dec
dec
mov
mov
negl
sub
cmp
add
add
cmp
pxor
sbb
hlt
sbb
push
and
aam
xor
jnp
cs
sbb
lret
sti
xchg
sbbl
out
pop
cmp
aas
mov
aas
into
mov
cmp
push
xchg
scas
adc
or
xlat
mov
sbb
mov
inc
pop
push
push
push
fldt
out
jecxz
movlps
mov
pop
movsb
mov
jg
jno
out
jbe
aas
mov
clc
pop
push
add
dec
fimull
fs
jnp
movsl
mov
stos
std
in
push
mov
stos
jne
or
lcall
shlb
dec
lcall
sbb
lahf
dec
xchg
hlt
pusha
adc
cs
scas
nop
adc
cmpsb
cwtl
hlt
pop
and
sub
push
into
stc
test
bound
loope
pop
fsubrp
leave
jae
js
cmpsl
mov
insb
les
lock
pushf
mov
out
ret
scas
aaa
xchg
and
pop
sbb
shrl
fisttpll
cmpsl
les
stos
fisubrl
xor
cmp
out
mov
sub
jno
dec
cmpsb
xchg
sahf
loop
sbb
pop
test
inc
dec
dec
sbb
lds
rcll
fcomps
jmp
adc
push
nop
add
hlt
adcl
xor
inc
rcll
jno
loop
addb
or
push
in
inc
insl
jmp
lods
jae
imull
dec
sar
stos
lds
les
and
or
xbegin
mov
mov
xor
daa
loopne
jmp
scas
repnz
xchg
das
adc
xor
sbb
mov
or
pop
testb
in
ja
pop
in
in
push
xchg
scas
int
add
or
test
aam
repz
rcl
jle
ret
pop
out
mov
push
xchg
sub
incb
jecxz
jp
stos
inc
orl
inc
outsl
mov
stos
ds
out
stos
stos
stc
popf
sbb
dec
adc
fnstcw
xorb
cmpb
incl
and
test
add
sar
dec
mov
jns
mov
inc
iret
sub
mulb
dec
push
dec
pop
xor
je
xlat
sti
movsl
test
ljmp
sub
xchg
add
aaa
and
aad
mov
daa
xchg
ljmp
pop
repz
arpl
lods
jae
inc
into
xchg
stos
mov
outsb
and
mov
adc
push
or
leave
cmpsb
mov
sbb
aaa
scas
mov
cmpsl
sbb
daa
loop
push
inc
cld
dec
stos
jg
popf
lcall
test
jne
bound
sub
mov
rcrl
out
cltd
sub
xchg
adc
inc
ds
sbb
add
sub
adc
mov
inc
push
mov
adcb
xor
xchg
mov
addr16
xchg
dec
xor
or
or
shr
mov
xchg
cmc
and
daa
scas
pop
push
pop
dec
icebp
nop
roll
mov
call
jne
in
add
dec
cli
mov
cs
mov
sti
mov
subl
lods
lret
or
data16
jne
cltd
xchg
repz
xchg
or
int
pop
nop
dec
dec
adc
ljmp
push
out
jmp
loope
mov
scas
andb
xchg
push
cmpsb
movsl
push
fbld
mov
rolb
and
int3
mov
mov
pop
test
scas
pop
pop
loop
mov
and
shl
aas
cmpsb
mov
xor
push
mov
les
sub
repz
jmp
shlb
push
cmc
jo
fisttpll
pop
push
jo
pop
sub
ficoml
stos
xchg
lcall
les
std
leave
cmp
sbb
xchg
pop
xchg
loop
and
pop
cmp
enter
dec
in
enter
test
sub
xchg
cmp
cmpsb
xchg
test
movsl
push
mov
in
insl
sahf
outsb
add
fildll
add
fstp
cld
pusha
mov
bound
mov
aad
icebp
movsb
test
jmp
movsl
pusha
lock
fsts
adc
out
mov
sbb
mov
pushf
aas
out
xchg
sarl
xor
dec
mov
adc
sbb
jle
imul
adc
sub
lahf
xchg
stos
call
xlat
fcomps
out
std
lods
pop
call
jl
bound
je
mov
movsb
adc
lret
clc
movsl
decb
mov
repnz
xchg
mov
icebp
push
stc
pop
mov
cmp
nop
test
addr16
add
filds
jle
ljmp
aam
xchg
enter
loope
dec
mov
push
xchg
pop
subb
mov
dec
inc
scas
movsb
dec
jp
xor
xor
stos
pop
cmpsl
stc
std
lods
pop
jmp
jns
clc
lock
test
scas
sub
je
xor
aas
sub
rclb
scas
es
or
mov
xchg
or
inc
adc
sahf
shl
js
dec
pop
dec
jne
mov
sub
sahf
sbbl
loop
and
cli
pushf
push
cmp
mov
test
js
jae
and
jae
pushf
mov
sub
lds
mov
mov
mov
jl
sbbb
fwait
dec
or
stc
jle
xor
sbb
int3
push
leave
jg
test
fldenv
int3
push
jg
and
mov
or
loope
daa
sahf
stos
in
pusha
andb
push
test
cmp
shrl
mov
jo
data16
clc
fsubs
adc
cmp
pushf
sub
sub
cmpsb
lea
add
cmp
cmpw
orl
pop
jo
adc
mov
jb
imul
lods
nop
ret
mov
insl
mov
repnz
mov
mov
push
adc
or
lock
mov
cmpsb
dec
inc
jb
mov
mov
or
jb
imul
sbb
pop
leave
push
clc
pop
mov
jo
cmp
push
fimull
or
xchg
lods
hlt
inc
jmp
mov
mov
cmpsl
notl
mov
pop
sub
xchg
adc
sbb
lods
adc
stos
mov
enter
test
lds
xchg
and
inc
loopne
inc
push
je
pop
outsl
icebp
cs
jp
xchg
mov
dec
les
lock
fcomps
push
scas
loopne
xor
fistpl
je
daa
iret
jno
mov
test
pop
jp
and
mov
adcl
out
pop
xor
movsl
dec
jmp
fbld
cmpsl
mov
inc
iret
mov
pop
or
test
and
int
insb
cltd
rorl
pushf
inc
sub
or
iret
sbb
adc
shrl
inc
out
dec
mov
stos
jmp
jmp
inc
xor
jecxz
repnz
mov
push
dec
xchg
xchg
adc
xchg
adc
std
loope
daa
inc
pop
mov
add
mov
pop
pusha
test
out
test
loopne
test
insl
jp
test
cmc
das
cmp
jecxz
xor
pop
xor
jg
pop
push
arpl
fdivr
cld
push
xchg
and
ret
add
pop
xor
mov
xchg
sbb
pause
cmp
rolb
mov
and
push
loopne
ss
jmp
nop
cltd
mov
inc
rol
jecxz
xor
fcoms
fsubrp
xchg
jmp
jl
in
adc
dec
mov
mov
jb
hlt
mov
and
ret
out
imul
xchg
cmpsl
lahf
shlb
xchg
scas
push
loopne
sub
ss
insb
jbe
push
xlat
xchg
xor
mov
adc
popa
lock
or
sub
and
cld
jle
mov
xor
ljmp
loopne
push
dec
out
and
imul
movsb
push
jg
in
and
fwait
sub
aam
add
or
inc
jl
cmpl
ficoml
mov
and
or
std
jb
xchg
jno
or
test
incb
negl
mov
mov
jg
dec
loope
and
ja
fwait
adc
lahf
inc
dec
and
xchg
out
cmc
and
fisttpll
in
popf
xchg
or
xlat
mov
push
cli
cmp
and
in
scas
dec
mov
or
push
sub
mov
adc
inc
pop
mov
gs
jecxz
lods
jbe
jo
sub
aam
or
sbb
jo
jae
movsl
sub
xor
mov
in
in
and
mov
notl
popf
lods
pop
and
inc
rorl
frstor
lods
add
mov
rorl
jge
mov
mov
enter
mov
jp
add
imul
and
mov
repnz
call
divb
lret
cmp
fsubrl
jae
lret
enter
xchg
and
xchg
dec
mov
outsb
dec
scas
popa
gs
mov
movsb
data16
or
arpl
jl
add
push
jo
sub
std
outsb
outsb
filds
mov
icebp
pop
lret
fistl
aam
mov
add
insl
ljmp
cmpsl
fistl
stc
ficoml
push
inc
stos
add
sahf
add
mov
ficoml
cltd
dec
mov
mov
mov
daa
addb
cmpsb
in
stc
push
cmp
imul
push
dec
ds
into
lds
cli
mov
rorb
sbb
sub
jne
jl
dec
cmp
into
add
mov
inc
fsubp
xchg
insl
push
les
mov
dec
pop
cltd
adc
out
cmp
mov
jbe
jnp
mov
cmp
add
repz
sbb
sti
push
sub
inc
int
pop
lods
scas
mov
loopne
mov
add
stos
or
mov
out
mov
movsl
mov
lods
or
pop
aas
push
icebp
mov
jg
xchg
mov
addr16
mov
ret
jnp
jbe
ljmp
fdivr
or
mov
mov
xlat
xor
icebp
push
mov
mov
test
xchg
fnstsw
or
outsl
ja
fstpl
es
sbb
sahf
pop
sti
or
jge
sub
add
cmpsb
cmp
ljmp
scas
mov
pop
xchg
xlat
adc
push
enter
mov
iret
into
add
sub
pop
nop
stos
sbb
int
jg
inc
jge
aaa
aaa
mov
xor
xchg
push
test
sub
dec
mov
pop
dec
or
out
sub
push
dec
jge
jne
cmp
dec
add
and
clc
dec
add
in
pop
mov
imul
fdivl
xor
enter
lods
movsl
add
daa
push
jecxz
adc
ja
xor
xor
adc
sbb
adc
es
mov
pop
fidivs
loop
rcll
loop
dec
sub
mov
pushf
jnp
xor
push
mov
sub
pop
mov
lret
leave
adc
push
add
mov
push
in
and
inc
push
addr16
pop
lahf
out
mov
sub
mov
in
out
pop
mov
sbb
movsb
xchg
addr16
fmull
pop
dec
adc
push
sbb
cld
jle
ds
imul
jo
addr16
add
fidivrl
jnp
cmp
sbb
sti
lret
es
fiaddl
jo
sub
mov
aas
dec
lods
add
orl
arpl
gs
sarl
shlb
outsl
sahf
bound
fsubrl
push
mov
dec
sbb
std
sbb
movsl
dec
sub
lret
outsl
push
lret
mulb
inc
and
pusha
popa
xor
js
test
pop
mov
pop
mov
inc
xchg
cmp
jae
pop
das
xchg
aaa
pop
cmp
jp
mov
pop
push
sahf
pusha
iret
sbb
mov
or
xchg
xchg
test
pop
mov
cs
daa
stos
pop
int3
call
fisubrl
inc
and
cli
sahf
lahf
dec
adc
pop
lret
cmp
sahf
lea
push
arpl
pushf
cmp
dec
or
sub
jecxz
outsl
adc
pop
iret
mov
push
test
inc
imull
pop
cmp
inc
mov
mov
int
pop
nop
mov
rolb
xchg
cli
pusha
and
sar
hlt
mov
fisubs
dec
ret
adc
mov
out
xor
stos
cmc
xchg
js
arpl
std
mov
and
jp
cmp
repz
lret
mov
or
pop
imul
and
push
movsl
cmc
pop
sbb
aam
jbe
pop
cmp
push
xchg
or
push
cli
ds
xchg
jns
pop
insl
cmp
mov
sbb
mov
ljmp
dec
and
movsl
mov
cld
dec
adc
out
std
sub
adc
xor
movlps
mov
nop
mov
push
lods
outsb
mov
dec
movsb
imul
pushf
mov
cwtl
push
das
cli
fsub
test
push
stos
mov
pop
sahf
loopne
push
sub
loope
dec
mov
xor
negb
andb
cltd
push
add
mov
xor
sub
xchg
jecxz
mov
addr16
fiaddl
and
call
daa
ficoml
push
movsl
or
or
arpl
xor
mov
movb
nop
gs
xchg
cmp
daa
inc
sub
repnz
push
adc
dec
and
int
lea
lods
jnp
mov
pop
mov
and
pop
push
add
out
cmp
data16
jb
xchg
inc
xor
jle
or
gs
sub
aad
inc
ret
or
cmp
lea
imul
mov
xor
push
adc
adc
and
push
pop
and
icebp
shrl
xchg
mov
and
mov
mov
add
jmp
push
out
cmp
sub
lea
in
std
ret
xor
scas
jb
shll
inc
pop
data16
mov
push
mov
fldt
dec
mov
lods
leave
in
mov
cmpsb
pop
je
jmp
test
push
lcall
xchg
push
pop
sahf
xchg
das
adcb
inc
dec
xor
inc
or
imul
push
mov
push
das
int3
gs
nop
sbb
xor
cltd
pop
xor
mov
je
ficompl
icebp
lahf
ds
jg
adc
pop
push
hlt
aas
adc
mov
mov
and
stos
dec
ficoms
scas
repnz
xchg
test
std
xchg
shrl
xchg
or
popf
ret
je
addl
mov
mov
or
mov
push
ss
mov
lds
sarl
push
sub
sbb
xchg
mov
shl
xchg
leave
mov
jns
test
mov
clc
das
sahf
sbb
xchg
cmp
outsb
in
push
jp
movb
adc
sahf
mov
mov
and
out
sahf
pop
je
test
gs
lcall
xchg
inc
mov
lods
out
push
outsb
sahf
sub
rcl
in
stos
mov
sahf
jp
repnz
cmp
jecxz
scas
sbb
cld
nop
mov
push
sub
cltd
dec
xor
sti
popf
cmc
inc
jmp
jp
cs
iret
test
outsl
jo
inc
lods
push
std
int
mov
stos
or
je
xor
shlb
sbb
push
mov
pop
push
jecxz
adc
sub
pop
movsb
iret
fwait
lcall
cmp
mov
in
sub
push
jle
out
mov
jbe
sbb
insl
nop
mov
cwtl
icebp
ja
movsl
inc
xchg
push
dec
lret
sub
arpl
int
stos
dec
dec
xchg
test
sub
push
aaa
out
cld
addr16
jo
mov
mov
pop
ret
mov
and
hlt
xor
es
ror
pop
test
sarb
mov
lds
lcall
dec
fnsave
or
dec
dec
cmpsl
sub
outsl
lock
mov
mov
mov
and
das
and
xor
dec
out
mov
cmp
rcrb
mov
push
pop
jne
shlb
pop
sub
repnz
or
sbb
movlps
or
xor
adc
pop
cmpsl
je
aad
mov
pop
sbb
div
cwtl
mov
lcall
pop
jne
xchg
pop
inc
mov
aam
sahf
xchg
pop
lahf
int
loopne
int3
cwtl
insl
cmp
hlt
jmp
test
into
jecxz
scas
pushf
bound
pop
stos
icebp
inc
sbb
pop
adc
pop
dec
mov
jns
movsb
push
mov
out
cmc
push
lcall
adc
lea
push
mov
call
adc
push
push
leave
adc
adcb
cmp
mov
leave
es
fdivrp
mov
and
jmp
pop
rclb
fdivr
and
xor
aas
sbb
out
inc
mov
cmp
mov
lahf
or
inc
and
sub
pop
jge
xchg
jbe
test
lahf
in
adc
xchg
jae
cmp
addl
ror
aaa
push
mov
xchg
stc
dec
iret
cmc
jle
ret
cmc
mov
mov
and
mov
es
sub
lods
dec
sbb
es
subb
inc
jae
and
xorl
cltd
add
in
out
hlt
cltd
mov
dec
scas
push
lock
pop
sub
jnp
outsl
inc
push
lods
or
js
pop
jo
sbb
dec
jge
fisubrs
pop
mov
and
notb
fcoml
incb
mov
mov
push
ret
divb
dec
std
test
xor
jnp
push
sub
in
push
sub
stos
adc
xchg
fcoml
out
xor
push
mov
mov
jle
mov
and
mov
mov
lock
je
add
gs
add
mov
into
sub
leave
or
les
xor
fucom
mov
subl
aas
mov
pusha
dec
push
mov
rclb
ss
cwtl
das
setno
or
dec
mul
icebp
fstp
jne
test
inc
insl
fldl
pusha
ss
pop
mov
test
cmpsb
or
mov
jl
daa
cwtl
push
mov
or
xchg
pop
out
xor
ret
cmp
and
push
mov
loope
daa
pop
push
rorl
push
je
fs
pop
addr16
pop
scas
xor
stc
pop
and
push
mov
test
push
movsl
sbbl
jp
inc
orl
jp
loope
mov
dec
jmp
sti
push
lldt
popf
out
aad
sbb
incb
push
xchg
sub
out
xlat
pop
in
push
loope
insl
and
xor
jae
int
lcall
mov
inc
mov
andl
mov
xor
xchg
mov
inc
jg
call
call
push
ljmp
jae
pop
xchg
cmp
inc
add
cmc
pop
adc
and
cmp
int
and
ja
sbb
jne
aad
cmpsl
std
enter
decb
rorl
sub
pop
ss
jecxz
sub
xchg
mov
push
push
dec
imul
mov
aam
and
mov
xchg
addr16
sbb
push
fsubl
xchg
sti
mov
inc
das
dec
dec
sub
xchg
mov
dec
cli
cwtl
dec
pop
pushf
out
insb
addb
cmp
scas
sahf
adc
push
lret
fadds
jmp
mov
and
cli
mull
sbb
mov
shll
icebp
mov
out
js
jnp
push
loop
adc
sub
lret
mov
adc
fstpl
adc
push
xchg
add
in
add
mov
xor
ja
lcall
sbb
xor
bnd
jne
and
ljmp
sbb
scas
fwait
repnz
cmp
mov
je
pop
ss
dec
xchg
mov
js
xor
or
andl
sub
bound
inc
cltd
fistps
aas
or
jne
das
in
dec
pop
add
cmp
sub
testb
mov
outsb
and
rolb
lret
xor
push
jl
arpl
daa
sbb
je
adc
in
setb
add
jmp
imul
jle
push
call
std
adc
sub
xchg
clc
aaa
jb
imul
inc
push
mov
lock
or
add
push
mov
and
pushf
adc
imul
in
xchg
outsl
scas
imull
inc
jl
xorl
adc
dec
cltd
js
loop
jmp
aam
add
xlat
test
sbb
or
lock
inc
mov
xchg
and
sbb
movsl
xor
out
shl
mov
mov
aaa
jno
xlat
push
mov
fcoml
mov
mov
dec
add
push
inc
aam
push
mov
rcrl
sub
mov
pop
dec
add
repnz
jns
inc
add
pop
cmp
adc
sbb
popa
stc
cli
or
ret
sub
test
sbbl
js
pop
add
cmpsb
inc
mov
loopne
jnp
lods
cwtl
mov
arpl
cmpsl
add
pop
dec
xor
jnp
insl
jb
icebp
adc
mov
shrb
in
rclb
adc
jae
fs
jb
in
xchg
in
and
rcr
adc
cmpsl
mov
adc
inc
sub
imul
add
lret
sub
aas
lds
jne
jge
push
mov
in
inc
xor
push
ds
dec
xchg
lock
add
push
imul
push
clc
mov
pop
inc
sub
xchg
daa
sub
pop
test
pop
popf
insl
int
add
outsb
repnz
xchg
in
addl
or
scas
mov
daa
push
les
daa
cmc
in
push
inc
fildl
pop
rclb
divb
decl
jne
pop
in
scas
arpl
jno
mov
mov
add
out
adc
cmp
sub
xchg
loope
jle
inc
imulb
inc
push
push
jnp
dec
jp
addr16
push
push
push
sahf
ss
sub
aaa
cmp
mov
jae
cmp
pushl
sarl
dec
cmp
mov
push
xor
repz
jne
shr
test
or
loop
cwtl
add
in
xor
xorb
jns
push
jbe
lods
mov
loop
push
test
dec
ja
xor
lahf
mov
cmp
mov
aad
enter
push
mov
pop
push
outsb
outsb
cmp
test
stos
pop
fucomi
sbb
push
or
iret
rol
stc
fsubrl
add
and
mov
pop
add
push
fadds
jno
arpl
jae
sbb
or
push
cmp
ffreep
insl
leave
sbb
outsl
mov
es
mov
jecxz
add
push
inc
adc
dec
ficoms
mov
enter
enter
mov
call
imul
and
xor
popf
or
into
loop
rcr
sarb
loopne
pop
jmp
jmp
fwait
sbb
pop
mov
out
pop
mov
mov
sub
sbb
mov
fistps
pop
incl
test
fidivs
and
cmp
sub
and
xor
adc
pop
dec
inc
push
jge
pusha
dec
imul
jl
adc
jbe
rcl
nop
daa
int
aas
daa
je
mov
push
pushf
push
cwtl
popl
arpl
jnp
pop
pop
jo
dec
pop
ds
and
mov
adc
sub
lahf
jne
loopne
xchg
lods
sub
lods
or
pushf
mov
addb
sub
push
rcr
ss
rcl
jmp
xchg
fistl
dec
mov
mov
in
stos
push
daa
push
pop
add
int
jp
mov
and
sub
call
scas
rcll
nop
or
ljmp
push
mov
int
jns
sub
test
mov
pop
out
push
ds
mov
pop
test
pop
divb
stos
xor
mov
mov
inc
cmpsl
loopne
xchg
sti
xchg
cld
jl
push
sbb
mov
xchg
test
gs
jae
or
hlt
jne
hlt
lcall
mov
fldl
add
in
push
imul
inc
lret
or
ds
push
jb
call
popa
jmp
inc
cld
xor
lret
mov
xchg
rol
leave
sub
adc
mov
pushf
cwtl
pusha
sub
movsb
pop
jne
jb
and
or
or
decl
jb
xor
adc
stc
xchg
jg
and
push
arpl
scas
push
mov
call
push
cmpsl
in
mov
xor
hlt
or
and
popa
xchg
bound
add
in
adc
ja
jno
ljmp
mov
xor
aam
cmpsl
mov
lahf
imul
lret
add
or
popa
lea
push
les
sub
sahf
fstps
ret
jle
fstps
dec
mov
js
push
in
int
int3
mov
jne
mov
cmpsl
dec
sub
imul
shlb
test
cld
cmp
stos
and
cmp
loope
lods
sub
movsl
pop
notb
ret
in
int
cld
sub
pusha
and
lock
insl
out
pop
cmpsl
popa
sub
jae
mov
xchg
test
scas
inc
fisubs
aaa
daa
mov
push
pop
xchg
imul
jnp
dec
or
xor
sti
sbb
testb
mov
insl
mov
fstl
test
cmp
out
mov
xor
lods
scas
sub
scas
outsb
cmp
xchg
das
lods
mov
sti
out
lret
sub
xchg
inc
ret
xchg
push
lds
es
in
inc
pop
mov
cmp
cli
iret
mov
dec
aad
loopne
loope
and
shll
dec
push
sbb
dec
jecxz
or
inc
in
push
adc
insl
out
push
pop
cwtl
mov
leave
inc
sub
insb
mov
in
fstps
adc
out
mov
sbb
aaa
jl
jl
jae
push
mov
sbb
lds
and
stc
jo
pop
fstps
inc
add
pop
xchg
lods
mov
add
xchg
sub
jmp
ljmp
incb
and
xchg
cmpsl
cmp
dec
pop
loopne
and
subb
aad
mov
test
out
mov
pop
dec
sub
pop
inc
adc
ljmp
xchg
mov
inc
in
mov
aas
nop
xor
aad
mov
test
bound
repnz
int3
fisubs
dec
cmp
mov
pop
push
lcall
or
cmp
aas
addr16
test
out
addb
xchg
js
je
psadbw
add
pop
movsb
and
or
int3
add
add
adcb
cmp
xchg
out
inc
xchg
jns
call
add
flds
insl
movb
sbb
xchg
mov
or
mov
xchg
adc
inc
mov
mov
dec
xchg
inc
mov
push
stos
mov
insb
mov
jmp
push
mov
mov
aaa
sub
frstpm(287
mov
mov
xchg
fsubs
dec
sti
dec
pop
popf
rcll
sub
scas
mov
jmp
xor
mov
and
or
daa
jl
ja
push
hlt
sbb
inc
sbb
mov
add
ficoms
mov
iret
jle
mov
sub
adc
inc
lret
lods
adc
push
aad
std
adc
cmpsl
mov
xchg
ss
and
fnstcw
jo
lahf
or
push
and
push
cmpsl
push
outsl
mov
dec
mov
lods
test
test
popa
dec
xor
data16
add
mov
push
jne
push
cmp
in
jae
sub
lahf
leave
mov
mov
or
fnstcw
sub
xor
lret
mov
int
enter
xlat
ror
inc
push
shlb
outsb
mov
cwtl
in
pop
ds
ss
ret
add
mov
sbb
adc
xchg
loopne
pop
sbb
mov
cli
int
fmuls
xchg
cmp
stos
mov
test
in
cmc
sub
imull
and
xchg
repnz
jo
jno
jnp
dec
or
das
addl
mov
loope
stos
jne
aam
lods
push
and
in
iret
fisubrs
pop
lret
test
call
movsb
ss
icebp
inc
aam
sub
test
or
pop
test
outsb
bound
outsl
jbe
insb
jo
or
mov
xor
stc
add
ds
pop
and
or
sub
gs
push
push
ljmp
arpl
inc
or
mov
xchg
frstor
cmpsl
es
inc
aam
aam
xor
xor
ud2
inc
shlb
pushf
sub
shr
inc
fs
mov
add
je
fwait
add
cltd
imul
and
or
mov
mov
dec
push
pushf
iret
and
stos
leave
test
lret
mov
push
inc
test
mov
adc
xor
aad
fidivl
bound
pop
imulb
push
mov
add
mov
dec
push
fstpl
jge
mov
lret
inc
inc
stc
xchg
xor
adc
inc
pop
sub
add
ror
sbb
cli
test
mov
dec
inc
push
xor
adc
scas
fnstenv
dec
push
clc
jae
jbe
stos
dec
js
rorl
and
cwtl
add
cmpsl
cmpl
push
pop
andl
push
jp
decb
jmp
in
and
bound
jnp
sub
cmpsb
orb
mov
push
es
pop
dec
push
in
flds
js
jle
leave
xchg
pop
ja
push
faddp
pop
cs
testl
ds
xchg
rcrb
xchg
or
insb
xor
adc
jl
push
testl
cwtl
add
addr16
cli
adc
cmpsb
push
pop
les
pop
mov
jecxz
addr16
or
pop
mov
mov
aad
test
mov
imul
scas
fildll
push
mov
add
mov
outsb
dec
inc
add
addr16
mov
mov
xlat
mov
add
filds
lcall
sub
and
adc
add
repz
pop
fistpl
xchg
cltd
aas
sub
lock
inc
je
pushf
adc
push
outsl
pop
call
inc
push
mov
lahf
test
dec
push
out
lahf
arpl
fnsetpm(287
mov
inc
mov
and
clc
mov
into
sbb
sti
cmpsb
dec
sub
inc
inc
out
sahf
adc
xchg
int
and
xor
mov
cld
mov
cld
scas
pop
or
leave
sub
xlat
sub
sbb
push
add
sbb
inc
mov
ret
mov
ror
xlat
cmp
movb
dec
xor
cmp
stos
mov
pop
inc
outsl
pop
mov
test
lcall
push
mov
fcoml
sub
push
jl
pop
adc
pop
stos
cmp
add
pop
cmp
stos
dec
sub
push
push
rcr
sahf
mov
fwait
adc
inc
and
add
cmc
mov
push
fmull
mov
or
push
add
cmp
notl
int
mov
sub
out
xor
lock
roll
cwtl
mov
mov
push
or
adc
dec
insb
sbb
mov
sub
cld
mov
sbb
push
icebp
adc
or
rcr
xchg
sub
imul
mov
add
adc
sub
mov
xchg
ret
pop
push
das
jecxz
add
push
mov
push
pop
mov
jmp
int3
jmp
jnp
and
rol
stc
or
in
mov
fistps
in
mov
fwait
pop
xchg
mov
push
lret
aas
mov
or
pop
fbld
outsl
ds
jg
dec
adc
jne
mov
push
stos
adc
aaa
lahf
mov
xlat
cmp
sub
sbb
inc
test
js
xchg
sub
ficoms
lcall
inc
int3
push
pop
aas
push
movsl
push
lods
push
stos
mov
in
lock
fldenv
push
push
shr
push
push
mov
cli
lock
pop
and
loopne
fstl
divl
xor
or
mov
sahf
imul
shl
mov
cli
dec
push
pop
out
cmpsl
pushf
pop
pop
cmp
fwait
push
mov
loopne
adc
mov
sub
outsb
jno
pop
jmp
adc
lcall
movsb
jno
fstpt
jo
xor
out
cmp
sti
mov
sub
stos
push
stos
repz
ret
int
sub
pop
imul
pop
dec
jge
rcr
pop
gs
and
jne
fcomps
push
add
push
inc
inc
inc
popf
sub
imul
lret
faddl
mov
outsl
test
lods
add
mov
xor
push
add
push
push
dec
mov
test
mov
pop
adc
fcmovnu
cmp
mov
das
xchg
aam
repz
call
jo
fimuls
aad
mov
mov
shrb
negb
in
add
dec
cld
xchg
lods
cmc
adc
mov
dec
aam
lods
jl
jmp
enter
xor
movsl
jmp
stos
loopne
inc
mov
sbb
mov
popa
cli
fstpl
pop
or
mov
mov
movsb
pop
and
imul
mov
mov
inc
mov
idivl
inc
mov
mov
jge
fs
push
cmp
dec
cmpsb
push
shl
bound
mov
lock
cmp
movsl
dec
fsubrs
test
sub
add
insl
inc
call
sbb
ja
dec
adc
ret
xor
rcrl
inc
hlt
push
mov
addb
or
icebp
jo
pushf
sbb
data16
pop
cmpsb
aas
test
jo
inc
jg
adc
loopne
std
xchg
or
sub
jae
shll
mov
or
pop
lock
or
pop
movsl
data16
icebp
jp
mov
test
add
pop
add
push
aas
shrl
mov
mov
jle
jle
xchg
push
xchg
call
es
adc
les
insl
xchg
jo
mov
call
movsb
or
cmpsl
int
ret
sbbb
leave
adc
adc
nop
das
out
jae
pop
push
jp
cmp
jns
mov
jl
sbb
insl
std
and
pop
insl
or
dec
sbb
cmp
fildl
xor
pop
shll
pushf
add
and
leave
cmp
arpl
jmp
mov
not
addl
lds
ds
push
jb
xlat
sbb
sub
and
leave
fisubs
cmp
lret
and
and
adc
cs
lods
inc
iret
lods
xchg
dec
mov
ret
inc
fisttps
adc
mov
movsb
repz
imul
xchg
xchg
in
leave
gs
rcll
adc
sti
pop
sbb
out
popa
add
push
out
scas
test
and
add
push
jmp
aaa
mov
inc
add
jg
sbb
pop
sub
leave
enter
lods
mov
insb
ja
mov
lods
outsl
rcrl
lea
mov
stc
xlat
mov
in
dec
and
das
cltd
ljmp
mov
test
outsl
lahf
sub
bound
lret
mov
imul
cmp
add
inc
jge
or
ss
mov
jp
int
cmp
mov
imul
andl
iret
loopne
dec
mov
divl
test
sub
inc
dec
cmp
push
pushf
add
in
cli
or
pop
inc
call
sub
xor
out
push
jbe
pop
and
adc
ljmp
xor
xor
shlb
nop
sub
dec
jp
xchg
loop
shll
dec
rcl
sub
mov
orl
sar
mov
jmp
jae
mov
dec
mov
leave
jne
xchg
pop
xor
int3
cmp
jl
mov
testb
pop
es
pop
sbb
iret
out
ret
test
shl
lds
daa
or
adc
jo
and
mov
xchg
cmc
inc
xchg
fsubrl
out
outsb
mov
subl
outsb
fcmove
fisttpl
push
jl,pt
ret
or
clc
fistpl
mov
jmp
adc
test
shrl
cmp
mov
dec
outsl
xor
cmp
and
cmp
mov
pusha
or
rcl
scas
and
in
loope
xchg
scas
push
arpl
sbb
mov
cmp
notb
pop
pop
cli
arpl
inc
mov
dec
pop
lock
adc
int
add
lds
mov
adc
ret
sub
inc
cli
scas
or
mov
aad
aaa
ficoms
mov
es
xor
sub
inc
scas
jg
jg
daa
xor
inc
xchg
inc
lret
int3
adc
xor
in
jmp
enter
xchg
inc
fisubrs
ficompl
imul
jp
addb
and
aad
mov
test
cwtl
gs
xchg
pop
mov
jno
std
mov
xchg
inc
pop
sbb
cmp
ja
fwait
popf
inc
mov
out
adcb
add
and
cmc
ljmp
std
mov
fcmovnbe
orb
dec
lds
dec
mov
mov
mov
xchg
dec
lock
lcall
jb
push
dec
loope
fstl
mov
mov
add
lcall
das
sub
xor
iret
pop
dec
insl
imul
lea
clc
testb
dec
nop
xchg
push
mov
mov
jns
pop
arpl
dec
clc
xchg
loopne
ja
in
mov
dec
aam
dec
sub
or
jl
inc
nop
out
sub
mov
stos
xor
sarl
jle
orl
and
add
call
sub
fwait
or
mov
mov
dec
cmp
repz
mov
and
push
mov
jge
enter
cmp
cld
clc
das
andl
mov
jns
or
fcompl
nop
push
jae
nop
inc
jg
cmp
pushf
jmp
insb
and
adc
orb
push
cmc
sahf
fdiv
mov
inc
sbb
mov
lds
mov
lock
popa
lods
mov
lret
jp
xchg
and
mov
lods
add
cmp
mov
sbb
test
shlb
pop
call
ficomps
das
mov
sbb
mov
cmp
push
sbb
ret
int3
sbb
je
mov
xchg
pusha
add
in
call
lcall
and
idivl
sbb
and
lds
mov
jne
lahf
and
cmp
add
add
mov
lods
mov
mov
test
data16
xchg
inc
xor
lea
and
sbb
fwait
cmpsl
pushf
push
jns
adc
jle
out
pusha
xchg
out
jmp
inc
pop
push
or
sub
add
in
bound
das
leave
mov
add
and
fcoml
add
ds
xor
scas
data16
add
and
notl
adc
loope
sbb
xor
lea
mov
cmp
cmpsb
add
mov
arpl
cmp
int3
popf
xor
sbb
sub
xorb
cmpsb
xor
je
in
addb
mov
in
sbb
mov
pop
int
mov
movsb
jae
adc
inc
mov
lret
push
mov
aad
mov
cli
and
jbe
div
mov
mov
ss
mov
add
dec
loope
repnz
mov
fbld
dec
imul
ror
pop
adc
sub
out
cmp
inc
pop
shlb
aad
sub
hlt
in
pop
inc
or
outsl
mov
subl
outsb
add
mov
and
hlt
inc
xor
mov
ret
loop
push
push
fdivrs
and
rorl
push
shll
add
push
fldt
fiadds
jo
pushf
sbb
mov
xlat
xor
fsub
sbb
cmp
add
test
into
add
imul
push
decl
dec
and
jbe
dec
mov
pop
je
push
mov
jnp
push
push
jmp
xor
mov
jne
outsb
ljmp
enter
xor
inc
out
push
xor
rcll
pop
mov
fisttpll
sbb
add
cmp
mov
in
inc
push
pop
inc
jge
lahf
negb
jg
push
mov
adc
stos
sbb
je
xchg
cli
or
pop
mov
xchg
pusha
mov
inc
adc
add
jp
out
fisubl
orl
pop
mov
fisubrs
hlt
and
fsubr
in
lods
dec
insb
adc
arpl
xchg
lcall
rolb
lods
pop
sti
out
loopne
sub
out
mov
mov
cmc
sahf
lods
mov
push
scas
inc
pop
iret
shrb
xchg
inc
insb
call
sahf
or
mov
das
mov
adc
out
fcmovu
push
nop
xchg
push
test
cwtl
xor
popf
mov
inc
das
jp
push
sub
lods
xchg
adc
ss
imul
pushf
dec
push
sti
jns
mov
pop
cltd
hlt
lret
mov
mov
lret
mov
mov
das
inc
jge
lock
xchg
or
jmp
fcompl
push
mov
fwait
pop
add
movsb
mov
or
xor
or
daa
adc
dec
mov
pop
aam
cmp
cmpsb
adc
enter
adc
test
cmpsl
inc
insb
icebp
shll
mov
int3
mov
mov
jge
mov
into
out
cmpsl
lcall
sbb
movsl
scas
xor
nop
lea
clc
cwtl
outsl
mov
jo
movntps
xchg
pop
xchg
add
mov
jg
adc
push
int3
add
out
push
mov
out
aas
repz
sub
adc
add
hlt
std
sub
bound
fstl
in
xor
mov
mov
idivl
gs
adc
dec
imul
push
les
and
cmpsl
lock
sub
scas
add
js
subb
loope
mov
and
xor
and
lret
push
in
aas
inc
jno
pushf
inc
scas
pop
xchg
add
adc
lret
insl
scas
cmp
push
adc
jbe
dec
loop
rcrb
rcl
mov
movsl
xchg
cs
hlt
xor
lods
repnz
add
jbe
repz
es
cli
cmc
loop
lock
into
ljmp
in
lret
and
test
push
add
aaa
movsb
pop
xor
rclb
or
add
jp
pop
push
push
or
aam
cld
in
jl
adc
nopl
mov
xorl
add
dec
xchg
int
stos
and
inc
mov
jge
mov
andb
xor
push
inc
repnz
stos
adcl
sub
jb
xchg
fadd
scas
and
int
mov
roll
add
stos
push
addb
pop
xchg
pop
out
ret
and
loopne
jb
sbb
lods
repz
nop
jecxz
jp
mov
orl
js
mov
inc
mov
fsubl
fwait
push
mov
clc
out
cmp
push
mov
or
test
leave
cmp
cmp
inc
test
and
jno
iret
pop
mov
push
ljmp
shll
dec
das
rorl
out
mov
push
jnp
add
jecxz
negb
div
rclb
xchg
adc
packsswb
push
ja
orb
xlat
pusha
lods
xor
cmp
sbb
adc
outsl
push
fldenv
insb
push
and
add
lcall
jle
jecxz
out
imul
mov
push
cmpsl
mov
or
push
push
ds
cmp
cld
mov
sarb
test
mov
xchg
or
jmp
add
mov
push
adc
aam
sub
inc
jno
xchg
out
lds
sub
cmp
movsl
inc
jnp
cmp
push
lods
xchg
scas
inc
add
lcall
test
push
adc
add
rclb
dec
iret
lods
mov
and
cmp
aaa
rol
pop
cmp
or
outsb
daa
jo
fs
xchg
das
fs
lret
out
adc
ss
pop
and
xchg
sub
ljmp
lods
repz
adc
loopne,pn
pop
pop
fcomp
jbe
fsubr
mov
and
xchg
cmp
xchg
inc
ret
mov
or
stos
loop
adc
out
xchg
iret
movsl
jae
fstp
fidivrl
icebp
dec
loope
fidivl
mov
loopne
jecxz
dec
divb
ss
lods
or
subb
inc
add
cmpsb
jns
xchg
mov
push
lahf
ds
cmpsb
mov
nop
loope
out
mov
flds
fbld
mov
mov
sub
dec
dec
aas
cmpl
jo
insb
xchg
lcall
or
mov
in
xor
add
dec
in
fidivrs
in
mov
fidivrs
push
jmp
int
push
inc
and
jg
push
out
mov
in
stc
mov
shll
dec
shlb
sub
sub
sahf
lahf
stc
dec
sar
or
or
jnp
rcrb
mov
add
mov
sbb
or
ljmp
adc
lock
jp
cli
jno
xchg
scas
pop
imul
bound
sub
daa
fdiv
stc
inc
shll
hlt
mov
xchg
mov
push
outsb
popf
xchg
pop
adc
shlb
ds
xor
ja
xor
or
mov
sub
xor
out
ret
pop
ret
lods
push
movsl
xchg
jnp
or
lock
loop
push
out
pop
mov
mov
adc
xchg
daa
out
fdivrs
jle
mov
mov
cwtl
sbb
or
sub
or
lret
dec
or
stos
mov
iret
lods
js
sub
sub
scas
mov
test
pop
lods
pop
jnp
imul
lock
mov
lret
aaa
scas
test
cmpsb
lock
cmp
mov
fs
stos
iret
dec
insb
mov
and
xchg
fstpt
movsb
shlb
mov
mov
xlat
add
mov
sub
in
adcb
insl
aas
outsb
sbb
jns
jbe
mov
out
out
out
fimull
loopne
insl
stos
mov
push
lret
add
push
and
push
popa
mov
cmp
dec
sub
xor
mov
lea
cmp
jecxz
cmp
pop
data16
hlt
adc
jmp
adc
repz
add
movl
subb
pop
or
stc
push
hlt
mov
je
sub
aaa
mov
adc
jb
enter
mov
cltd
inc
xacquire
push
xchg
pop
sti
xor
sarb
pusha
mov
mov
movsl
test
xchg
or
dec
sbb
push
das
or
sbbb
mov
ret
jnp
stc
sarl
cmc
leave
cmp
movsl
daa
adc
jecxz
lret
imul
lods
dec
ds
arpl
ja
or
xlat
add
sbb
mov
mov
cmc
adcl
dec
mov
popf
mov
jecxz
stc
icebp
cmp
mov
push
icebp
sub
xchg
pusha
call
movsl
shll
and
xlat
out
mov
or
pop
add
fdivrs
scas
pop
lea
cmp
aam
stos
loopne
xchg
and
cmpsl
and
outsl
leave
adc
stos
jb
mov
scas
xor
fs
inc
nop
inc
cmp
sub
iret
xlat
out
sbb
into
push
mov
lods
int
pop
bound
in
cmp
xchg
sarl
ljmp
push
outsl
adc
test
shll
les
jmp
mov
nop
mov
in
mov
lret
ljmp
andl
or
add
cmp
arpl
arpl
sbb
iret
test
add
fcoml
insl
and
and
jns
pop
mov
adc
sub
pop
lds
scas
testl
adc
in
jmp
adc
outsl
xchg
adc
rcl
outsb
scas
jge
mov
mov
xor
cmc
insl
pusha
sbb
xor
jge
shlb
add
add
sub
or
call
ret
ret
dec
arpl
ja
inc
mov
mov
push
mul
or
sar
andnps
adc
es
mov
sahf
das
xchg
push
dec
inc
xchg
jns
hlt
fwait
pop
mov
sub
inc
xor
push
xor
jecxz
xor
lret
movsb
dec
and
mov
mov
shl
xchg
jecxz
fcmovne
push
jg
add
sub
in
add
inc
insb
or
mov
movsb
inc
mov
or
jno
cmc
lods
mov
push
xchg
bound
jbe
mov
insb
fs
shrb
dec
ficoms
dec
cld
in
jnp
mov
xchg
cmp
mov
rorl
je
push
enter
jb
pop
repz
shll
bound
jnp
sbb
jmp
sub
rorl
das
push
xor
fnstsw
aas
xor
mov
fnop
addl
clc
pop
arpl
leave
dec
flds
push
pop
jge
add
push
xchg
mov
inc
popf
fst
je
dec
test
push
daa
sub
cmpsb
popa
pop
sub
fiadds
sub
jmp
ss
loop
inc
cmpsl
xacquire
nop
adc
add
or
aas
js
cld
inc
xor
jl
lahf
stos
xor
cld
test
pop
add
iret
sub
mov
scas
dec
das
into
daa
adc
mov
movsb
cmp
push
clc
cmp
stc
jl
aaa
cmpsl
mov
add
popf
incb
in
mov
stc
imul
sub
sub
jae
cmp
test
flds
outsb
or
push
mov
int
or
ja
mov
scas
fildll
repnz
scas
push
sub
push
jmp
and
jp,pt
enter
mov
push
pop
addr16
ss
dec
popf
mov
push
pop
adc
insl
push
jge
movsb
sbb
push
cmpsb
aas
test
pop
rorb
fistpl
into
inc
and
insb
and
mov
adc
jne
insl
mov
testl
ja
test
mov
adc
cs
sub
test
hlt
divb
add
outsl
imul
inc
mov
mov
gs
call
mov
xor
jae
push
xor
pop
sbb
in
or
call
jb
fistps
test
jp
pop
adc
mov
push
mov
and
push
stc
xor
sub
push
repnz
push
movsb
sahf
or
pop
jne
sub
cmp
pop
jp
movsl
push
mov
sub
shr
xchg
popa
mov
mov
mov
lahf
jae
add
jmpw
loope
mov
xchg
add
inc
sahf
xor
mov
push
and
pop
cmp
fs
scas
pop
rcll
jns
dec
loopne
repnz
gs
jg
mov
fnstcw
movsb
outsl
xor
hlt
int3
sahf
outsb
out
lock
fsts
aaa
inc
out
push
ja
sbb
fsubs
push
mov
cli
stc
pop
inc
stos
lea
popl
inc
mov
or
mov
lcall
add
in
les
mov
and
or
cs
mov
jne
lods
pop
mov
and
jnp
jmp
icebp
popf
dec
in
or
scas
sbb
and
add
xlat
leave
sbb
sbb
movsl
add
mov
cmp
mov
gs
insb
pop
sti
mov
add
test
sub
insl
xor
pop
lcall
dec
jns
xchg
xor
outsl
mov
and
je
add
insl
add
notb
mov
in
push
lods
out
aas
mov
dec
out
lcall
xor
xchg
mov
lret
xor
and
sbb
shll
lcall
and
mov
lods
repz
cld
bound
push
cltd
repnz
add
in
mov
movsl
fs
sub
leave
test
push
jb
add
push
sahf
xchg
movsb
push
mov
les
imul
pop
inc
js
or
loop
ds
enter
pop
inc
insl
jb
xchg
dec
cmp
push
push
push
pop
xchg
rcll
jle
stc
rclb
push
ficompl
xchg
mov
loopne
ss
frstor
clc
loopne
aam
dec
andb
pusha
sub
or
lret
adc
inc
int
inc
mov
jmp
sub
pop
jb,pt
sbb
sub
cmp
sbb
add
mov
hlt
pop
mov
repz
mov
nop
les
dec
mov
jnp
shl
cmpsl
sbb
and
aas
sbb
les
divb
and
scas
in
or
rorl
push
inc
clc
lret
stos
jl
and
add
out
adcb
dec
inc
fiadds
sti
std
fwait
jb
lds
push
xor
mov
fs
insb
rcpps
pusha
push
pop
add
stos
pop
add
ror
dec
jecxz
jbe
lea
push
adc
push
xor
jge
cli
jns
pop
lods
pop
pop
xor
orl
mov
pop
fidivl
adcl
sub
movsl
cmp
ret
fdivrp
inc
xchg
dec
and
sbb
ficoms
jp
xchg
imul
rolb
addl
jns
lret
outsl
mov
inc
in
lea
bnd
scas
pop
pop
mov
hlt
pushf
mov
mov
pop
jmp
cli
daa
push
outsl
cmp
mov
inc
icebp
lcall
in
inc
add
popf
add
dec
in
arpl
push
repnz
repz
into
aad
ja
dec
pop
lret
loope
dec
call
pop
pop
enter
hlt
jae
decb
jle
push
sub
sbb
ret
ret
pop
push
imul
push
cmp
sahf
sbb
scas
enter
xor
mov
and
je
test
sbb
dec
push
loop
stos
mov
sbb
and
insb
adc
and
std
jne
cmp
pop
mov
ja
test
sbb
inc
in
jmp
movsl
fsubrs
aam
mov
imul
mov
jle
push
push
adc
cli
decl
lret
mov
jb
add
add
in
subb
insl
ret
mov
add
xor
add
mov
cmp
or
xchg
fcmove
add
fcoms
push
adc
xor
or
adc
or
scas
mov
mov
sbbb
sbbb
das
lods
imul
or
sbb
out
or
add
adc
stos
add
push
or
or
push
test
and
xor
pop
scas
cltd
sbb
cmp
sub
add
adc
shlb
and
out
lcall
push
inc
shll
mov
outsb
xor
fyl2xp1
dec
mov
call
mov
sbb
push
dec
sbb
cwtl
ret
sbb
or
roll
lods
lcall
cmc
into
std
xor
pop
aaa
pop
jae
fwait
test
inc
xor
fwait
adc
jge
in
mov
cmp
push
ds
lahf
dec
jmp
lret
or
in
mov
jne
in
rcrl
mov
data16
mov
xchg
pop
mov
push
push
or
adc
jns
addr16
pop
add
pop
or
or
movsl
fidivrl
and
xchg
test
jg
mov
pop
or
ret
mov
lea
mov
testl
outsb
mov
mov
jnp
in
cmpsl
stos
mov
jmp
mov
or
push
dec
xor
mov
je
sahf
xorps
cmp
pushf
mov
std
pop
lcall
stc
dec
pop
popl
mov
flds
mov
cld
push
iret
mov
enter
stos
outsb
mov
stos
jecxz
mov
sbb
xor
das
cmpsb
jmp
push
ss
sbb
sti
sub
fimull
ret
dec
lds
sti
rep
mov
test
xlat
shr
add
mov
xchg
xchg
rorl
and
fldenv
lds
mov
add
mov
popa
pop
out
add
jmp
mov
adc
sbb
aad
les
dec
in
dec
and
add
xor
jl
pushf
out
lahf
data16
inc
or
inc
jecxz
mov
pop
ljmp
jns
stc
mov
imul
insl
fcoms
lret
loopne
fstpt
repnz
iret
adc
testl
push
mov
xor
sbb
add
mov
and
adc
cmpsb
sub
push
lods
movb
push
mov
sahf
rcrb
push
leave
mov
jno,pn
data16
xor
mov
test
pop
adc
imul
fwait
mulb
mov
xor
push
in
fwait
movsl
lahf
and
or
push
push
rcrb
es
movl
sub
pushf
rcll
call
test
mov
lods
sbb
adc
add
lret
push
sbb
cmpsb
add
sub
aam
dec
lret
sub
pop
test
xor
adc
das
xchg
int
test
popa
sahf
jl
adc
out
stos
push
sub
push
adc
xlat
or
mov
inc
or
inc
adc
xchg
pop
xorb
aas
or
pop
outsb
dec
lcall
fisubrl
and
and
fsubrl
arpl
les
ret
ljmp
or
or
pop
test
ja
adc
ss
adc
cmp
clc
push
or
sahf
dec
push
imul
mov
mov
lret
push
movsb
sti
jb
xorb
les
sub
push
pusha
push
jo
or
ret
leave
jl
cmpsl
adc
repz
or
into
lods
cmpsl
mov
jo
shr
scas
jl
fcmovb
adc
xorb
mov
dec
sbb
int3
jbe
lock
fidivs
jmp
add
or
dec
into
inc
pop
int3
pop
cld
icebp
aas
out
mov
imul
mov
mov
fistl
lret
mov
adc
imulb
cmp
dec
mov
scas
mov
xchg
mov
stos
push
sub
sbb
iret
sub
aas
ss
ljmp
je
push
movsl
mov
fbld
int3
mov
cmpsb
fcoml
mov
daa
aaa
push
add
push
mov
rorb
sub
xlat
testl
pop
rolb
ss
cmpsb
jnp
push
inc
cmp
mov
mov
sbb
xchg
dec
mov
les
fs
movsl
sub
rorl
iret
adc
cmp
inc
stc
sbb
pop
lret
mov
rcrl
mov
pop
cmc
mov
or
ds
pop
jnp
mov
scas
imul
std
xor
and
dec
mov
and
mov
into
outsl
pushf
pop
jns
std
hlt
ds
mov
push
add
add
fistl
push
sbb
adc
stc
xor
jbe
icebp
pop
shl
or
push
xor
mov
bound
out
mov
cs
in
and
iret
mov
and
int
les
aas
mov
daa
mov
inc
jle
sub
cmp
xchg
mov
cmpsb
mov
jle
mov
out
mov
test
ficoml
push
jnp
fimuls
sbb
push
roll
jnp
pop
out
mov
dec
add
mov
je
rcr
stos
pop
mov
stos
andb
and
les
insb
fsubr
or
fcoml
cli
scas
iret
pushf
daa
pop
add
xchg
push
lret
arpl
dec
pop
pop
ss
sbb
jnp
jmp
aam
shll
imul
lahf
adc
adc
pop
push
les
pop
shr
xchg
repz
xor
scas
jmp
lret
popf
sbb
pop
hlt
jecxz
push
push
add
mov
rorb
mov
mov
sbb
mov
in
loop
cli
negb
movl
mov
mov
adc
daa
xlat
pop
mov
mov
out
outsb
or
lods
push
out
sahf
adc
pop
fcompl
roll
into
cmp
in
xchg
dec
inc
dec
jo
movsl
test
add
add
cli
insb
sbb
outsl
addr16
mov
loop
cs
sbb
xchg
or
arpl
out
das
outsb
cmpsl
stc
mov
or
push
daa
xor
inc
sub
jo
pop
enter
add
movsl
jecxz
or
or
fmul
mov
jae
sbb
jno
js
mov
inc
push
add
imul
aad
insl
in
fiaddl
inc
repz
shl
addr16
pop
sub
cs
pop
push
or
or
xor
cmpsl
push
sub
push
popa
stos
inc
xchg
xor
mov
ljmp
pop
in
bound
arpl
jg
icebp
jl
sub
lods
in
dec
or
sub
enter
sub
cmpsb
fdivrs
dec
jne
aam
pop
push
inc
clc
sub
xchg
pushf
xchg
sti
jp
int
bound
or
pop
imul
test
ljmp
adc
inc
sbb
xchg
repz
xor
lock
scas
cmp
push
jl
mov
lods
fs
js
jmp
and
fidivrs
jno
mov
sub
lods
idiv
xor
je
xlat
aam
ja
insl
inc
mov
sbb
ss
imul
push
out
rolb
xchg
jae
repnz
or
inc
clc
idivl
cmp
fsubrl
xor
adc
add
adc
mov
outsl
inc
andl
imul
or
out
lock
std
sub
orl
cmp
cltd
mov
or
popf
scas
lret
or
push
iret
mov
sub
sbb
test
xor
mov
push
ljmp
jge
adc
aad
lds
jb
jg
mov
rolb
mov
aad
mov
adc
xor
add
imul
mov
data16
jae
cli
xchg
jo
push
test
mov
fs
fsubrl
in
ret
push
mov
in
shlb
inc
test
pop
and
in
mov
hlt
xor
pushf
cmovp
cld
sbb
sbbb
inc
cs
add
mov
hlt
je
mov
mov
or
hlt
xchg
mov
jge
pop
addb
inc
and
cmp
addr16
mov
movsb
push
jle
jmp
insl
std
jnp
insl
adc
imul
and
fimull
xchg
movb
xchg
add
mov
or
cmp
inc
movsb
loopne
jb
movsb
out
out
sub
push
aas
cmp
stc
pop
cmp
ljmp
data16
shlb
mov
cld
sub
ret
imul
inc
sub
test
shll
mov
mov
mov
mov
and
add
xchg
repz
cmpsl
mov
mov
les
orl
clc
sbb
adc
mov
rcrl
jnp
mov
mov
inc
lcall
sahf
cmp
outsb
jl
jl
inc
push
xor
test
cli
lret
jge
xor
jae
cs
imul
idivl
loopne
mov
mov
xlat
inc
mov
popf
js
int
stos
iret
or
lcall
mov
js
aaa
mov
insl
shll
adc
fs
pop
add
cmpsb
mov
pushf
sub
lret
fbld
add
inc
jl
pop
sbb
mov
movsl
popf
outsb
fadd
popa
popf
test
mov
inc
icebp
mov
adc
lock
jne
jge
and
test
dec
not
sub
cmpsb
xor
mov
out
lcall
sub
mov
insl
pushf
inc
xchg
lret
enter
dec
fldlg2
xchg
add
cmpb
mulb
testb
cli
mov
mov
and
sti
lret
bound
mov
dec
test
icebp
lcall
rcl
xchg
arpl
ret
and
mov
sub
and
mov
cmp
dec
es
sub
or
out
mov
inc
js
hlt
mov
pop
out
scas
add
mov
push
test
hlt
std
jp
imul
lret
int3
jbe
das
das
jge
into
jbe
ja
outsl
jno
push
or
negb
add
cmp
mov
adc
imul
dec
ja
sahf
jbe
dec
xor
out
les
adc
dec
rolb
cmp
lcall
rcr
scas
aad
daa
cmp
mov
cmp
out
mov
in
xlat
adc
pop
or
adc
add
mov
sub
pop
nop
dec
mov
pop
cs
mov
xor
inc
and
outsb
es
sarb
jne
mov
xchg
dec
fists
addr16
in
aad
mov
repz
lds
rcll
call
ja
inc
push
call
push
dec
je
bound
cli
insb
add
mulb
mov
xor
in
mov
fstp
or
mov
cld
arpl
dec
xorl
jmp
int3
in
sbb
cmp
lods
mov
icebp
mov
cwtl
js
cmpsb
jl
xor
fmull
cli
jns
or
js
xchg
outsl
dec
test
fsubl
dec
fdivl
pushf
sarl
or
mov
dec
sbb
adc
bound
push
pushf
std
push
stos
sub
imul
arpl
inc
shl
int
call
add
ss
hlt
jnp
fwait
mov
cmp
pop
cmp
xchg
movsl
jb
xchg
scas
xchg
in
sub
mov
sbb
bound
mov
aad
pop
mov
sub
xor
je
mov
movb
mov
lea
lds
jno
daa
daa
lcall
mov
adc
sbb
movsb
xchg
outsb
dec
shl
xlat
andl
icebp
outsb
pop
inc
pop
je
push
pop
sub
pop
ljmp
jmp
cli
data16
jecxz
into
mov
dec
dec
inc
push
push
or
dec
mov
loop
jo
aas
loop
aaa
push
add
xchg
scas
jne
sub
pop
outsb
and
fsts
imul
lds
pop
cmpsb
mov
test
ljmp
xchg
lods
aas
insb
cmpsb
or
rorl
xor
push
movsl
mov
pop
int
movsl
enter
xorb
xchg
fnstenv
aam
cmp
jno
push
cmpsb
popa
fiaddl
push
mov
push
scas
mov
xor
lds
daa
or
xchg
addb
push
lahf
repnz
adc
push
add
ret
xchg
int3
jg
pusha
sbb
mov
sti
in
je
inc
sarl
ds
add
and
shlb
clc
add
pop
push
mov
das
inc
icebp
xchg
test
fdivl
mov
jns
ret
loope
push
mov
fnstenv
pop
mov
repz
mov
adc
aam
sarl
adcl
mov
dec
cmc
jg
mov
lds
jmp
jne
jge
jo
or
xor
adc
pop
pop
stos
lds
cmp
jbe
inc
push
push
fwait
add
cwtl
or
sbb
inc
sbb
mov
sub
js
ljmp
push
xchg
sbbl
call
inc
fildl
push
sub
divl
xchg
popa
jmp
imul
inc
xchg
cmp
ret
pop
std
ret
cmp
stc
repnz
std
adc
incl
cmp
or
cmc
cld
add
mov
mov
movsb
into
mov
cmp
scas
out
jns
fsubr
adc
mov
lock
or
mov
xchg
lret
dec
push
push
jbe
or
or
lods
movsb
adc
mov
cwtl
mov
push
pop
jmp
xor
mov
or
pop
lcall
jecxz
sarl
insl
out
loope
and
push
sub
test
sbb
sbb
push
cmc
xchg
sarl
push
sub
sbb
dec
and
mov
bound
dec
or
ljmp
rolb
repz
loopne
out
in
adc
loop,pn
xchg
dec
push
push
sbb
pop
sub
lds
daa
dec
dec
movsb
add
mov
arpl
sti
cmp
or
push
sbb
mov
aaa
insb
push
mov
mov
mov
sbb
scas
aas
inc
lret
or
push
push
push
jmp
sub
sets
ficoms
mov
inc
addr16
ficompl
mov
std
xchg
xchg
cmp
cwtl
dec
lea
jae
stc
out
dec
faddl
mov
mov
add
pop
fcompl
hlt
je
mov
clc
out
add
mov
imul
pop
test
sbb
stc
mov
mov
lods
insl
inc
test
mov
and
or
xor
loop,pt
leave
out
cmp
xorl
adc
lcall
inc
inc
cmp
and
push
call
pop
xchg
xchg
jle
ret
mov
fcmovnu
jns
test
push
inc
sarl
cli
cld
adc
mov
popa
push
shr
fidivrs
or
outsb
mov
xchg
sub
cwtl
sub
stc
cmp
mov
dec
enter
dec
jo
or
out
push
pop
xor
and
or
sti
aas
outsl
sub
add
js
sub
test
dec
xlat
movsl
je
jae
mov
ficomps
mov
push
lret
adc
cmp
cmp
imul
outsb
and
pop
jnp
daa
cli
pop
pushf
push
std
mov
mov
std
cmc
pop
adc
xor
xor
ret
and
sub
out
cs
push
mov
fs
xor
int
lahf
jp
dec
jno
sub
rcrl
pop
dec
sub
loopne
jae
sbb
out
push
sahf
add
nop
es
jnp
sub
into
add
jp
xchg
add
pushf
hlt
pop
movl
xchg
jle
jecxz
les
push
mov
in
or
mov
sub
fildl
ss
subl
cld
cs
test
add
inc
sti
xchg
inc
out
xchg
imul
sbbl
mov
out
out
in
xchg
mov
in
and
int
data16
les
push
mov
push
out
clc
inc
sti
cwtl
jns
in
sbb
push
pop
sbb
loopne
cmp
sti
pop
jl
add
lcall
enter
dec
mov
xchg
mov
add
jp
nop
push
jge
in
inc
pop
movsb
jmp
xor
shrb
and
cmpsl
pushf
lret
aaa
sahf
loopne
and
or
jge
cmpsb
dec
pop
inc
add
lcall
cmc
and
xchg
aas
test
inc
lods
push
lods
loop
or
pop
xchg
pushf
das
nop
lret
stos
dec
dec
adc
ret
sbbb
xchg
inc
dec
popf
int
lret
adc
push
pop
sbb
mov
sbb
test
ficompl
dec
je
pushw
xchg
jo
jae
in
sbb
outsb
pop
or
das
imulb
jnp
xchg
mov
es
mov
mov
jns
test
jbe
mov
jl
mov
dec
xor
push
jns
lea
sbb
jge
jg
jp
and
fidivrs
fildll
bound
std
aad
mov
aaa
int3
je
les
shlb
shl
lods
les
and
xchg
mov
push
xor
xchg
ja
test
mov
test
clc
data16
pushl
adc
pop
movsl
jae
adcl
pusha
sub
pop
fcmovbe
aas
daa
cmp
jp
dec
popf
ljmp
movhps
inc
adc
push
cwtl
xlat
push
jb
repz
in
icebp
in
adc
mov
push
rolb
adc
sbb
les
xchg
mov
jbe
inc
jae
pushf
nop
cli
xchg
sub
mov
push
dec
jecxz
and
shrl
mov
int3
pushf
xor
and
fisttps
mull
sbb
filds
shr
or
xchg
arpl
lret
xchg
or
loop
mov
xchg
in
or
inc
das
dec
movsb
jmp
inc
into
mov
xchg
aas
dec
jp
clc
jns
add
sbbb
dec
sub
jl
std
jo
jmp
out
ljmp
out
stc
mov
lret
fsub
mov
test
outsl
jmp
movb
mull
imul
dec
pop
repnz
xor
jmp
mov
js
outsb
rorb
mov
sbb
adcl
shrl
out
das
mov
lods
jecxz
nop
notl
jae
jl
jno
into
and
ret
lods
arpl
or
cmc
lods
rol
pop
sbb
add
cmp
ja
mov
xchg
adc
stos
xchg
cld
xchg
sub
cmp
sbb
in
ror
imul
jmp
mov
addl
jmp
dec
clc
or
jne
sub
jae
int
or
lret
test
lods
loop
or
movlps
das
push
cmpl
insl
mov
fistps
test
pop
mov
push
adc
xor
add
ljmp
mov
and
imul
mov
mov
imul
mov
loop
pop
mov
ss
xchg
add
xor
aas
sarl
mov
add
aad
outsl
push
mov
in
mov
add
mov
jnp
mov
sti
outsl
insb
xchg
jb
mov
cmp
add
insl
aaa
leave
popf
stos
sbb
fmuls
and
dec
jl
mov
stc
or
jae
xchg
jnp
dec
jmp
jne
dec
lds
mov
in
fiadds
insb
in
push
sub
push
in
lods
jge
mov
ret
sbbb
pop
jmp
mov
sub
and
insb
inc
jae
push
push
dec
or
cmp
xor
lret
cmp
xor
ljmp
cmp
lahf
addr16
pop
inc
xchg
lahf
xor
mov
sbb
xchg
scas
cmp
daa
scas
sbb
dec
push
scas
mov
rcl
jmp
xor
push
test
mov
addr16
push
push
and
or
and
mov
rcr
int
mov
push
clc
cmove
sub
mov
scas
push
je
aad
fsubrs
xchg
mov
or
or
das
in
add
jb
arpl
add
pop
insb
inc
in
sbb
leave
arpl
inc
cwtl
movsl
sbb
cmpsb
in
adc
jo
je
push
push
fstpt
inc
fidivs
mov
add
xor
or
ret
cli
adc
in
out
cmp
push
dec
cmp
adc
sub
mov
iret
ret
pop
cmp
mov
add
xchg
mov
pop
jecxz
popa
sub
lea
inc
mov
lret
nop
add
pop
test
aam
sub
test
das
insl
bound
insl
je
sub
cs
rcrl
iret
mov
cwtl
adcl
add
sahf
fnstcw
in
mov
adc
enter
push
mov
repnz
mov
lods
cwtl
xor
cwtl
or
mov
and
popa
sbb
sub
sub
cmp
cmp
aam
sub
mov
arpl
or
pushf
rorl
cli
adc
stc
shrb
sarl
ficoml
push
mov
lods
xchg
lods
lret
fld
adc
aas
test
out
cld
push
pop
loop
add
mov
mov
xchg
cmp
pop
out
sarl
lock
sbb
and
xchg
jl
mov
adc
fadd
loopne
push
in
push
mov
inc
xor
test
lods
imul
arpl
sub
or
sbb
xor
test
imul
test
std
ja
movsb
adc
fsubrl
gs
pusha
lds
xchg
mov
movsl
push
incb
and
in
sti
ja
xor
shlb
push
add
cli
in
jns
jns
push
jnp
xorb
sbb
sahf
adc
rcl
insb
xor
out
icebp
popa
push
orl
into
fnstcw
or
test
sbb
inc
mov
repz
ss
aam
les
and
inc
adc
out
dec
out
ret
mov
mov
lcall
pop
pop
fsubrp
xor
push
movsl
push
aaa
mov
inc
mov
arpl
and
inc
fdivl
ss
out
xchg
mov
idivl
cmp
nop
mov
push
aaa
jo
lock
pop
test
jne
mov
stos
repz
push
push
bound
loop
in
pop
outsb
outsb
xor
das
mov
jl
sub
lahf
push
outsb
ja
jno
mov
jmp
test
clc
pop
rorl
sub
dec
stos
lods
xor
pop
sbb
cwtl
and
push
mov
int
adc
push
push
sub
stos
push
inc
fs
loope
xor
sbb
add
arpl
shrb
test
cmpsl
pop
pop
clc
mov
mov
test
incb
and
sbb
mov
andnps
jbe
fisubrs
sbb
roll
mov
icebp
fwait
stos
in
add
pop
push
pop
inc
nop
add
adcl
ret
dec
mov
sbb
adc
push
rcrl
std
pusha
and
clc
cwtl
lret
int
fs
cmpsl
inc
int3
fiadds
and
popf
xor
adc
or
out
in
cs
jle
xlat
fldt
sub
lcall
rcll
inc
and
mov
mov
xor
movsl
xchg
dec
ja
sub
jb
mov
fld
out
pop
pop
xlat
cmc
dec
xor
sahf
push
mov
mov
ret
xor
xorb
and
mov
jb
fs
int
sbb
addb
xor
jmp
aaa
ds
push
rorl
subb
fsubs
mov
loop
sbb
mov
pop
mov
clc
cmpsl
test
das
fwait
daa
scas
mov
aam
or
or
adc
xor
dec
push
shll
xchg
je
pop
push
mov
xor
mov
jle
xor
jbe
ds
add
pop
mov
add
mov
jge
shufps
dec
mov
inc
std
mulb
repnz
ja
inc
bound
sub
sub
mov
mov
cmpsb
cmp
movsl
adc
out
mov
sbb
cmp
push
jne
xchg
pop
sbb
mov
cmpsb
leave
faddl
test
out
out
test
xchg
push
and
orl
xor
mov
and
jmp
scas
and
sub
dec
push
sub
jns
mov
jne
adc
cmp
jl
push
test
popa
jmp
xchg
cmpsl
insl
cmc
xor
rolb
rclb
out
pop
xlat
mov
cmp
jp
movsl
xor
pushf
cmp
inc
arpl
sbb
and
mov
pop
sbb
popf
outsl
jb
popa
cmpsb
push
mov
dec
mov
mov
cld
stos
outsb
push
mov
push
jmp
mov
mov
data16
sbb
pop
push
jns
jae
push
cli
mov
cmc
adc
mov
cmp
adc
adc
leave
mov
push
cmc
cmp
and
or
gs
movsl
xchg
fdivr
pop
orb
mov
repnz
test
or
lahf
or
filds
mov
mov
lods
xchg
mov
loopne
lods
adc
lds
and
cltd
sbb
inc
test
xor
test
mov
cmp
sbb
insb
mov
pop
dec
and
popf
jecxz
xor
xlat
xchg
and
dec
cmp
mov
jl
std
xchg
fwait
cwtl
mov
dec
push
flds
push
shr
cmp
leave
sbb
aaa
push
dec
mov
mov
cmpsb
push
pop
icebp
cmp
pop
xor
bound
in
adc
shr
adc
stos
push
icebp
adc
dec
xlat
scas
cmc
fisubl
insb
dec
out
and
push
out
add
popf
add
cmpsb
and
sub
xchg
rcrl
jle
xlat
push
xor
jge
imul
jg
and
in
add
mov
pand
fistps
mov
xor
xchg
jne
movsl
cmp
data16
xchg
cld
js
lods
push
dec
jecxz
scas
imul
cmpl
inc
addr16
xchg
adcb
cld
pop
repnz
adc
repnz
mov
mov
jb,pn
pop
xchg
mov
lcall
mov
test
xor
int3
not
pop
pop
push
jp
sub
inc
push
adc
mov
daa
cmp
sti
xchg
cmp
mov
es
popf
lods
adc
sbbb
jg
sbb
fcmovb
pop
pop
and
or
cmp
xchg
dec
imul
lahf
shlb
cmc
jnp
loop
nop
popf
or
movhlps
leave
fstpl
or
xor
in
pop
sbb
inc
xor
das
loope
imull
push
add
loopne
in
ficompl
inc
jecxz
cwtl
pop
push
lock
std
lcall
mov
add
xchg
add
lea
adc
std
jno
or
mov
sahf
pop
or
adc
adc
ficompl
hlt
cmpsl
jecxz
roll
outsl
je
xor
or
test
add
outsb
jmp
jno
imul
sub
stos
lahf
ss
hlt
lret
ss
in
inc
jae
adc
dec
stos
sub
shl
push
sub
add
int3
and
orb
xchg
std
fstps
adc
fdivs
inc
and
dec
jle
mov
sbb
ret
stos
jae
xchg
mov
xor
fsubs
sub
sub
xchg
icebp
mulb
sbb
loop
fnstenv
testl
dec
in
and
cmpsl
test
lods
pop
xor
adc
mov
lds
push
incl
negl
mov
clc
pop
lods
pop
xor
leave
adc
or
and
dec
aaa
stc
jmp
jae
adc
mov
xlat
test
add
in
decb
rorb
cmp
je
outsl
pop
add
sbb
jno
mov
decl
testl
int3
sbb
fmull
or
cli
cmp
mov
mov
sbb
jb
jmp
js
pop
aam
cmp
or
leave
jge
xchg
inc
dec
push
pop
ret
or
icebp
xor
shlb
in
fmull
jg
or
mov
mov
sbb
jb
and
xchg
mov
jmp
cmpsb
and
aas
repnz
repnz
int3
dec
enter
ja
ret
lock
adc
es
inc
arpl
lods
je
in
shrl
jne
jo
lcall
add
mov
jge
lret
cli
mov
outsb
inc
pop
adc
leave
push
test
jmp
xchg
fwait
test
ja
sahf
cmp
aad
sub
mov
cmp
ds
push
mov
xchg
or
xor
push
lret
mov
sbbl
loop
ss
dec
les
dec
lahf
pop
add
or
movsl
mov
push
test
adc
movsl
cmp
lret
adc
pop
adc
sbb
es
ljmp
mov
les
dec
adc
mov
das
inc
xchg
testl
xchg
cld
xchg
andl
sub
leave
adc
bnd
aam
into
mov
mov
cmpsb
pop
jns
xchg
mov
cmp
jge
cmp
mov
mov
sbb
or
divb
lret
lcall
shrl
daa
bound
aam
mov
jbe
inc
shlb
push
testb
pusha
xor
sahf
in
adc
jns
lahf
fistpll
das
insb
outsb
loope
push
cmp
inc
inc
pop
cmp
sbb
jle
insl
and
lods
sahf
pop
xor
loope
mov
push
xchg
in
jp
mov
push
or
outsl
es
sahf
mov
sbb
jge
cltd
enter
dec
xchg
mov
or
lock
mov
adc
push
rcl
pusha
jecxz
das
jo
cmp
mov
aam
or
adc
mov
iret
mov
rol
push
pop
das
xor
xor
add
mov
cmpl
mov
outsl
or
and
jno
sbb
jp
test
mov
lods
inc
inc
jo
mov
not
or
dec
add
popf
cmp
jp
lock
fbld
cmp
ja
jmp
or
and
cs
cmp
in
add
adc
sbb
xchg
sbb
mov
xchg
jp
and
cmc
pop
pop
or
rorl
mov
add
pop
ret
jns
scas
stos
push
mov
jnp
jbe
mov
inc
sub
xchg
mov
jns
addb
ss
insb
add
jmp
jp
cmpsb
shr
jnp
call
jbe
ss
rclb
mov
lock
out
jbe
dec
push
push
jae
cmp
mov
jnp
lcall
xchg
cmpsl
mov
or
xor
ficomps
push
push
cmp
push
bound
test
sbb
arpl
jecxz
pop
cmp
lret
sub
stos
in
push
push
sbb
movsl
mov
and
out
adc
jle
inc
daa
dec
adc
jb
movsl
scas
mov
lock
icebp
pusha
test
mov
jg
mov
sarl
in
jae
push
pop
fidivs
jg
mov
mov
je
rorl
out
pop
mov
lea
popf
xor
les
leave
lret
mov
and
outsl
clc
gs
add
or
icebp
fdivrs
adc
pop
and
clc
cmp
xchg
les
adc
sub
adc
iret
cltd
loopne
cld
lds
out
mov
push
adc
cmp
into
ja
pop
sub
jmp
mov
sub
stos
jmp
sbb
out
lods
enter
jecxz
clc
jge
push
les
ficoml
aaa
stos
insl
fs
rcrb
xchg
popf
jl
cmp
adc
out
imul
mov
push
mov
mov
in
repnz
fildll
adc
cmp
lods
push
clc
outsb
and
call
ret
jb
pop
fldl
sbb
pushf
push
stos
andb
sub
std
orb
sub
mov
jo
lahf
jb
adc
pop
cmp
fwait
jp
sti
add
xor
push
pop
and
sti
movsl
cmpsl
jl
xor
movsb
adc
xchg
dec
lahf
dec
jbe
pop
iret
or
lret
push
ret
and
and
loope
mov
inc
xchg
sbb
push
mov
adc
std
test
test
push
or
sbb
pop
icebp
inc
lds
or
lods
stc
jmp
std
bound
dec
pushf
and
sbb
xor
sbb
std
iret
push
jmp
add
mov
ficompl
lcall
popf
jl
xchg
mov
add
or
or
or
dec
hlt
sbb
push
repnz
clc
in
clc
sub
fiaddl
in
adc
lcall
mov
cmc
cmp
xor
imul
stc
shlb
mov
loope
jmp
ss
and
stc
mov
or
and
scas
xchg
mov
sbb
sub
cmp
jl
stos
or
mov
mov
mov
test
push
mov
sub
adc
and
add
add
insl
jno
fnstsw
jmp
loopne
xchg
sahf
xor
inc
rcrb
loopne
insb
mov
imul
dec
dec
scas
xchg
idivl
dec
inc
ja
fimull
pop
pop
cmpl
fcomps
pop
ficompl
and
arpl
mov
scas
xor
sbb
mov
and
jecxz
mov
mov
out
cmpsl
stos
cmc
fucom
js
ljmp
adc
test
cmpsl
lret
out
test
mov
mov
dec
shl
inc
sbb
and
fs
xchg
rorb
push
movsb
sbb
ja
cmp
xlat
and
pop
inc
push
popf
stc
pop
lods
jb
mov
jb
and
leave
test
push
cmpsl
dec
imull
mulb
jb
pop
mov
lds
adc
lods
sbb
imul
jnp
sbb
leave
inc
xchg
jno
mov
cwtl
mov
cmpsl
pop
dec
mov
adc
xlat
int
dec
andl
or
movsb
jae
mov
pop
sbb
imull
sbb
mov
inc
cmpsl
scas
inc
es
sub
call
cmp
aam
fwait
xchg
andl
or
sbb
rorb
enter
int
pop
lods
ret
hlt
mov
or
dec
fisubrl
daa
pop
push
add
mov
iret
jns
fisubrs
pop
inc
int3
rcrb
cltd
out
rcl
mov
add
adc
jle
sbb
xchg
mull
sbb
adc
shlb
push
cmp
xchg
pop
mov
mov
cwtl
xor
cmp
mov
inc
std
mov
pop
iret
sbb
pushf
pop
cmp
cmpsl
lea
or
test
hlt
sti
aad
fstpt
clc
pop
lods
cs
sbb
xlat
in
nop
call
leave
jge
nop
repz
lods
and
pusha
daa
sarb
mov
push
xchg
cmp
loop
mov
pop
test
fstpl
hlt
sbb
cmp
data16
dec
cmp
mov
fdivl
cmp
jno
sar
cs
mov
into
fiaddl
pop
jmp
les
cmpsb
and
jnp
sub
mov
dec
mov
lock
clc
sub
pop
dec
sub
cmp
and
xchg
inc
addr16
jle
mov
cmp
data16
popa
pop
cmp
dec
push
sub
or
xor
call
lahf
repz
cmpsl
cli
jge
pop
aad
push
mov
xlat
daa
push
or
pop
lret
jmp
inc
mov
push
cmp
pop
mov
mov
stos
call
fadd
fldenv
es
cmp
mov
mov
inc
into
lea
cmp
outsb
jbe
shlb
sub
cld
push
enter
add
mov
mov
inc
push
inc
lods
leave
sbb
push
sbb
adc
add
andb
mov
xchg
cmp
xchg
cmc
adc
push
clc
jle
push
iret
ret
outsl
test
cmc
sbb
add
negl
sub
xchg
sub
rcr
mov
loop
je
pop
sahf
mov
adc
mov
inc
cltd
push
jb
add
cmpsl
cmp
adc
enter
inc
mov
repnz
popa
xchg
data16
scas
into
lahf
pusha
fldenv
mov
in
jg
mov
cmp
lods
lock
dec
jmp
test
outsl
lock
out
jbe
inc
adc
sar
push
or
lcall
fcomps
out
iret
pusha
xchg
aaa
xor
push
inc
pop
mov
cmpsl
mov
or
xchg
in
mov
orb
fcmovnu
daa
dec
ja
adc
inc
adc
lret
clc
pop
push
pop
xor
fst
dec
lea
cmp
call
mov
in
mov
mov
jns
jmp
or
push
mov
int3
xor
js
sub
and
das
gs
aam
inc
ds
pushf
push
pop
and
mov
stos
fisttps
sbb
lret
inc
mov
jge
xchg
nop
fcmovnbe
pop
jne
sbb
testl
jge
loope
ljmp
inc
repnz
popf
dec
and
mov
sub
sbb
sub
xor
or
jge
stos
xchg
push
sbb
or
shrd
adc
pusha
lcall
repnz
int
sbb
xchg
fisubrl
push
iret
adc
out
or
mov
cmp
repnz
pop
pop
push
and
sbbl
lret
jo
jle
ret
inc
xor
fwait
jno
sbb
xor
dec
mov
hlt
add
fdivrp
in
push
sti
aam
aad
call
idiv
pop
cmp
clc
jns
cli
xchg
addr16
xchg
xchg
jle
pop
iret
scas
fwait
lea
dec
fldenv
in
inc
adc
arpl
sub
add
add
sbb
mov
scas
fsubl
adc
xchg
sti
test
out
rol
inc
enter
inc
in
push
test
stos
lock
mov
push
mov
jnp
cmp
pop
fs
lods
imul
stc
cmovg
xor
jmp
popl
pop
lods
mov
and
push
fildll
in
push
add
dec
xor
mov
in
push
mov
cmpsb
adc
dec
aad
mov
pushf
ja
push
stos
loopew
lret
rcrl
dec
add
loop
outsl
cmp
inc
pop
mov
xchg
mov
pop
andb
rorb
neg
push
notl
ljmp
dec
repz
xchg
xor
xchg
in
mov
inc
std
inc
mov
and
bound
test
cld
imul
inc
imul
push
outsl
inc
and
push
aas
in
fisubs
mov
roll
cmp
ja
movsl
lret
orl
push
mov
inc
ds
cli
add
pop
cld
xor
fwait
movsb
aaa
inc
sbb
push
adc
sub
xorb
push
cmp
xor
not
out
sub
or
jl
push
xchg
mov
mov
push
hlt
pop
add
loopne
cmc
sub
xlat
adc
add
cmp
xor
orb
movsb
loopne
jno
sub
adc
test
enter
cmp
jno
jnp
xor
lea
int
imul
jmp
or
das
leave
clc
daa
cmpsl
pop
sub
fs
pop
cmc
xorl
out
push
jp
in
inc
out
pop
enter
push
inc
out
mov
int
call
lahf
push
push
mov
xchg
xchg
je
xchg
jmp
sti
lahf
dec
mov
fisubs
mov
in
jno
shlb
mov
mov
in
in
inc
push
lret
push
xchg
mov
cmp
mov
jbe
scas
inc
dec
repz
in
mov
inc
jmp
sbb
scas
inc
jmp
out
pop
rcl
pop
lods
repnz
add
mov
testb
outsl
inc
jge
sub
ljmp
xchg
in
sti
sbb
out
int
out
adc
rolb
popf
add
push
icebp
xor
orb
movsb
inc
cmp
xchg
aad
add
adc
xchg
movsb
push
jnp
rorl
add
dec
dec
enter
or
adc
cltd
mov
daa
ds
cmp
filds
std
loopne
cmpsl
mov
sub
mov
dec
and
push
mov
jecxz
out
mov
jbe
jae
xor
cwtl
jnp
fs
imul
jge
pushf
pop
push
and
aas
leave
aam
xor
scas
pop
and
cmpsl
xchg
jle
cmp
popa
stos
call
aad
repz
sub
add
sahf
cmpsl
rcll
in
je
movsb
sahf
sbb
mov
enter
xchg
jmp
dec
mov
imul
xor
push
sub
pop
jle
cmp
es
cmp
cld
aad
inc
nop
rcrb
mov
inc
sbb
jo
sbb
enter
adc
add
repz
mov
mov
and
pop
mov
pop
pop
jo
insb
js
xchg
insb
inc
jne
push
xchg
xchg
lcall
or
mov
xchg
shl
jmp
dec
pusha
jbe
out
test
fucomi
out
jbe
sbb
add
movsb
ret
mov
ret
imul
enter
dec
ffree
shlb
xlat
in
jae
in
out
cmpsb
or
or
daa
dec
fistpl
add
and
out
sbb
push
gs
sbb
insb
imul
ja
sub
nop
cmp
push
cs
lds
shrl
sub
mov
stos
or
out
xlat
add
arpl
std
mov
inc
pushl
and
je
and
cmp
out
adcb
hlt
cli
inc
loopne
movsl
sub
push
mov
sub
pusha
imul
adc
ret
push
inc
mov
test
mov
inc
xchg
push
adc
push
xchg
pop
pop
clc
pop
push
jge
push
popf
mov
outsb
mov
cmp
sti
jle
mov
jmp
cs
ja
cs
jbe
mov
aam
int
mov
adc
xor
ret
cmpsl
inc
sbb
jnp
into
mov
xchg
push
xchg
je
lods
dec
or
hlt
lock
dec
mov
mov
into
in
mov
fadd
mov
mov
and
jae
pop
xchg
mov
insl
adc
dec
fsubl
aam
stos
dec
enter
push
mov
dec
into
adc
in
add
inc
pop
movsl
loope
sub
dec
mov
inc
jno
mov
daa
mov
push
cwtl
and
cmp
fwait
or
add
das
cwtl
neg
jb
sahf
std
aas
add
aaa
sbb
mov
ja
push
js
mov
test
test
or
fwait
ljmp
movsl
ffree
push
jl
cmp
xchg
xor
test
mov
adcb
and
loop
pinsrw
push
pushw
pop
je
dec
or
xchg
clc
int
out
ret
jne
pop
mov
aam
inc
cmp
mov
leave
rolb
stos
rorl
adc
xor
data16
fidivrl
stc
adc
pop
sbb
xchg
lcall
dec
xor
mov
push
or
jo
and
ss
cmp
mov
jnp
enter
jno
leave
cmpsl
std
jns
test
push
and
lea
fistl
dec
out
xrelease
jecxz
and
cs
add
imul
mov
pusha
pop
scas
in
mov
push
stos
loop
repz
int3
and
sti
mov
filds
pop
out
sub
push
mov
cmp
lret
dec
fnsave
pop
pop
fs
push
bound
sub
push
inc
in
rcll
dec
js
inc
and
ret
sub
jge
fcomp
movsl
decl
pop
cmp
add
xchg
ja
cmp
mov
adc
cmp
popa
dec
sbb
sub
pop
inc
gs
stc
rcrb
sti
popa
mov
xor
jp
mov
add
outsb
pop
mov
repnz
pusha
inc
push
or
inc
mov
das
pop
es
jecxz
mov
sub
loopne
ret
ss
sub
mov
xchg
inc
fldenv
loope
movsb
lahf
ror
enter
and
xchg
mov
jmp
xchg
pusha
sub
inc
repnz
add
push
sbb
jne
stc
dec
sbb
filds
xor
pusha
xor
loope
adc
sub
imull
mov
or
ss
sub
xchg
js
xor
mov
ficoms
mov
pop
inc
mov
lds
fsubp
cmp
test
cld
cmp
mov
sti
rorb
sbb
and
or
pop
dec
in
sub
cltd
xchg
iret
gs
imulb
inc
int
or
jmp
jl
xor
pushf
dec
test
cmp
outsl
ret
addr16
adc
push
sbb
les
into
clc
sbb
daa
xor
loopne
push
cmp
mov
into
fidivl
xor
mov
mov
adc
dec
inc
cmp
add
cmp
icebp
mov
mov
mov
push
dec
mov
cmp
lret
inc
xor
test
mov
jns
mov
clc
daa
xchg
and
or
inc
cli
cld
mov
dec
inc
pop
lcall
mull
loope
cmc
inc
xlat
xor
lea
lcall
imulb
lret
mov
push
lock
cwtl
ja
test
push
cmpsl
call
lea
ficoms
push
jne
mov
mov
scas
cld
in
sbb
dec
push
mov
sub
sub
mov
outsl
pop
sub
dec
dec
xchg
jo
jbe
mov
mov
jge
adc
fwait
push
and
fcmovnbe
ret
jo
or
adc
mov
cmp
shlb
jp
sbb
dec
fcompl
out
sub
mov
rcll
es
into
stos
xlat
movsb
test
inc
stos
or
mov
int
push
out
push
icebp
fwait
mov
mov
jg
sub
dec
mov
adc
add
add
test
add
sub
sbbb
clc
mov
cmp
mov
incl
test
cmp
fdivl
hlt
repnz
es
jle
xchg
scas
sbb
jle
add
push
push
cmp
inc
in
dec
scas
fsubr
imul
pop
dec
insl
mov
adc
int3
in
enter
cs
hlt
adc
test
sbb
cwtl
repnz
in
clc
push
and
rorb
add
dec
mov
rorl
push
inc
cmp
les
ss
std
lahf
dec
loopne
sbb
ficoml
decl
in
lods
or
cmc
sub
stos
fnstsw
xor
sbb
shl
mov
movsb
sbb
js
mov
cmp
les
inc
mov
cs
sbb
inc
fsts
pushf
sbb
fsubrs
xchg
js
into
subb
jne
dec
cmpsb
lahf
mov
les
lods
lcall
add
bnd
stos
and
cmp
imul
cmpsb
sbb
adc
fistl
dec
adc
xchg
cwtl
push
scas
fbstp
insb
push
pop
cli
mov
orl
sub
lahf
int
fs
icebp
jge
cli
adc
cmpsl
cmpl
xor
pop
sbb
out
or
push
sbb
repnz
aas
stos
xor
sahf
or
popa
ret
xor
cmp
sbb
loope
mov
cmp
test
and
mov
add
sub
mov
xor
xchg
cltd
cmpsb
lods
pop
pop
cmp
lcall
cmp
pop
mov
pop
jle
pop
lods
and
mov
sti
aam
inc
jo
popf
and
popf
scas
jmp
add
int
sahf
cmp
push
push
icebp
outsb
xor
dec
cmp
addl
xor
aad
sarl
icebp
adc
jne
outsb
shlb
jg
mov
jno
xor
cmp
leave
enter
push
and
in
cmpsl
and
out
and
sub
push
fildl
jne
mov
mov
push
adc
jmp
andl
addr16
loope
sbb
cmpsl
pop
jo
jle
in
ja
push
lods
jp
cmc
mov
push
cmp
mov
pop
push
nop
dec
cmc
rolb
pop
push
ret
inc
jp
out
lret
push
rcr
inc
mov
cli
lds
pop
repz
mov
fcmovnb
flds
rcr
aam
mov
cld
add
ljmp
and
lahf
shlb
sub
inc
adc
xor
jbe
xchg
jbe
ret
sub
dec
and
mov
sbb
xor
mov
pop
mov
add
pop
mov
ss
cmp
in
mov
dec
adc
sub
insl
pop
sbb
jo
xchg
lret
sub
or
sbb
push
dec
mov
fisubs
or
popf
dec
cmp
aas
adc
ret
mov
adc
inc
sbb
pop
insb
sub
out
or
pop
insl
sbb
lea
and
call
sbb
push
lods
clc
les
and
cmp
inc
mulb
xor
ret
int
and
mov
cmp
mov
xor
shlb
daa
arpl
js
data16
aam
scas
mov
mov
ret
push
dec
shrl
popf
and
jo
mov
in
pop
sbb
and
mov
pop
lret
and
mov
push
push
ljmp
sub
jnp
enter
test
cwtl
data16
mov
push
cmp
movsb
sub
rcr
ret
sarb
cmp
mov
gs
or
jmp
call
inc
ret
sbb
or
sub
je
nop
test
and
ja
and
inc
iret
out
or
sbb
repnz
mov
pop
jmp
dec
mov
xchg
jl
dec
mov
adc
or
out
lock
rcll
in
fcoms
dec
leave
cmpsb
cmp
pop
dec
ja
xchg
inc
pop
or
rcl
ret
xor
cmp
sub
xchg
pop
mov
cmp
repnz
pusha
or
movsb
aad
testl
push
add
push
add
pop
fisubl
sbb
ret
jp
popl
mov
xor
popa
pop
faddl
mov
inc
sahf
lods
stos
mov
mov
jge
jecxz
insb
add
push
inc
insb
sub
outsl
lods
repnz
in
mov
jg
push
push
inc
insl
pop
add
and
pop
pop
mov
push
int3
leave
nop
andl
sub
push
mov
and
es
pop
xor
or
pop
mov
mov
push
jecxz
ss
daa
leave
push
cld
dec
push
push
push
fidivs
shrl
xchg
movl
or
shll
cwtl
or
ja
and
mov
inc
test
mov
mov
adc
or
and
shrb
test
lods
out
out
das
scas
jo
sub
mov
popa
jecxz
je
adc
mov
popa
nop
and
in
jecxz
fisubl
lds
iret
push
loope
xchg
sti
es
fmull
stc
rcr
and
pop
pop
mov
and
mov
mov
sub
dec
mov
mov
cs
mov
mov
xor
aam
int3
pop
adc
loope
or
das
push
push
arpl
jb
in
mov
in
icebp
inc
and
std
adc
inc
hlt
push
xor
push
stos
sbb
lds
inc
dec
aad
sub
sbb
mov
lcall
mov
data16
fiadds
popa
xchg
xlat
ficompl
pop
js
rcrl
push
shll
dec
in
or
mov
dec
inc
mov
mov
in
je
pushf
push
cmp
add
mov
aaa
test
push
ss
jae
mov
adc
sete
int3
pop
pop
mov
imul
xchg
pop
mov
and
xchg
lods
push
out
pusha
mov
sarl
sahf
push
addr16
push
mov
lret
push
pop
cltd
fdivr
sbb
repnz
ret
jnp
and
pop
sub
adc
fwait
sbb
lret
leave
pop
jb
inc
sub
or
aaa
push
icebp
outsl
pop
and
mov
popf
rcr
shr
cmp
dec
inc
gs
sahf
mov
fcompp
sahf
adc
cmp
test
xor
sub
dec
jle
dec
dec
xor
mov
mov
pop
loopne
push
sub
add
sub
jo
adc
lahf
mov
cmp
xor
sbb
pop
jp
mov
data16
adc
pop
jns
mov
cmp
push
sti
fdivs
mov
sub
xchg
adc
outsl
pop
ret
jne
rcrl
stos
int
xchg
mov
or
pop
sbb
fdivrl
cmp
popf
fidivl
mov
sbb
lcall
xor
fsubrl
dec
mov
loope
mov
adc
test
jge
mov
mov
ficompl
add
int
cmc
pop
sbb
std
dec
cwtl
sbb
aaa
mov
or
and
inc
out
xchg
jae
pop
shr
repz
mov
jecxz
xor
fwait
push
popf
fwait
xor
sub
data16
cmpsb
xor
nop
push
fildl
gs
inc
cwtl
aad
xchg
push
repz
jecxz
push
sbb
sbb
push
sub
aad
out
leave
cs
add
fsubl
pop
call
mov
and
push
jo
xor
dec
jge
dec
push
xlat
ljmp
aam
dec
inc
mov
xchg
or
out
push
icebp
jo
dec
cmpsb
mov
pushf
pop
icebp
sahf
int3
xor
into
push
pop
mov
dec
push
inc
inc
xor
cld
or
xlat
imul
or
adc
mov
enter
sbb
arpl
add
idiv
sbb
rcrl
xchg
imul
or
xchg
incb
adc
clc
xor
pusha
pop
movsb
jmp
dec
xor
push
fcoml
sub
cmp
mov
cmc
jno
movsb
aas
sub
int
push
inc
mov
sbb
jle
clc
and
ljmp
sbb
adc
repnz
mov
decl
push
jno
dec
push
xor
in
into
mov
mov
fists
dec
shll
push
aas
lds
shrl
in
mov
sbb
adc
cmpl
andb
pop
nop
fisttpl
aaa
pop
adcb
cmc
iret
pop
rorb
add
xor
push
mov
js
sub
mov
sti
push
pop
mov
nop
insl
adc
add
jne
lret
shll
lods
scas
xor
dec
cmp
mov
ret
loop
sbb
inc
hlt
sbb
mull
adc
jge
in
xor
imul
arpl
mov
mov
adc
xchg
mov
aam
jnp
data16
cwtl
clc
shl
lret
xor
xchg
xor
xor
push
cld
mov
sbb
stos
push
push
ret
mov
mov
pushl
sarb
leave
jae
fsubr
rcl
fisubrs
adc
pop
js
pop
dec
xor
sub
imul
pop
add
fsubrl
mov
dec
scas
xor
dec
pop
roll
push
jge
out
stos
in
mov
adc
xchg
fnstsw
insl
aas
sub
jno
mov
add
cmp
jp
jge
out
or
jae
jno
jbe,pn
faddl
mov
xor
adc
adc
stos
jo
mov
lret
std
and
loopne
ret
leave
cwtl
pop
shlb
jle
int
jge
push
adc
xchg
pop
mov
push
clc
push
std
xchg
jbe
test
and
adc
xor
push
push
pop
or
dec
cmp
push
pushf
jmp
cltd
push
popf
fldt
mov
xchg
rcrb
lods
lcall
jecxz
ret
clc
stc
inc
movsl
mov
hlt
cmp
sub
adc
mov
test
aam
mov
fwait
sbb
mov
fildll
fistpl
repnz
pop
push
insb
imul
repz
mov
xlat
ss
cmp
hlt
cs
mov
xor
rcl
mov
enter
sub
rorl
lods
push
or
dec
pop
mov
test
push
out
xchg
insb
sub
sbb
adc
pop
je
cmp
addb
xchg
push
dec
lret
jo
mov
jmp
mulb
push
mov
cmp
cmpsb
push
push
mov
add
pop
push
loope
inc
cmp
call
sbb
imul
xchg
lods
xchg
cmp
mov
xchg
fwait
andb
dec
int3
mov
pop
xor
addb
push
outsl
ja
scas
in
int3
lods
xor
cmp
popa
fsts
lret
faddl
dec
pop
fcompl
movsl
enter
jbe
filds
std
pop
arpl
mov
roll
fiadds
ficompl
mov
cli
xchg
aad
lcall
rolb
jae
jb
pop
ja
xchg
in
rorl
nop
daa
mov
sub
sbb
xor
adc
lods
dec
test
pop
nop
mov
outsb
scas
es
orb
cltd
mov
repz
mov
leave
sarb
fwait
imul
rorl
dec
movsb
push
and
test
cmp
lret
js
pop
mov
sarl
mov
in
roll
imul
imul
and
nop
pop
lret
push
jg
fwait
mov
dec
sbb
pop
in
cmp
adc
fisubs
pop
jnp
mov
rorb
pop
xchg
test
push
inc
fs
adc
push
sar
mov
loop
push
mov
loopne
shrl
aaa
out
and
mov
out
cmp
mov
xor
xchg
sbb
pushf
fnsave
jmp
subb
shll
loop,pt
stos
add
adc
icebp
push
ror
mov
mov
push
pushf
es
and
insb
sbbl
sub
inc
dec
pusha
cltd
mov
mov
cld
aad
jmp
loopne
mov
outsl
cmp
sbb
psrad
inc
inc
aam
add
call
dec
add
mov
pusha
pop
movsb
push
std
xor
inc
daa
pushf
sbb
and
adc
leave
dec
mov
lods
pop
mov
xchg
mov
mov
xchg
or
leave
addb
mov
jae
cmp
sub
insl
sub
mov
jae
adc
xor
sar
ja
lea
lcall
addl
cld
les
int
test
jg
inc
cmpsl
mov
shlb
mov
cs
int3
aaa
icebp
mov
sbb
mov
insb
cmpsl
push
push
scas
enter
jne
xchg
lret
or
cmp
push
insb
sbb
xchg
stos
leave
loope
push
xor
inc
sbb
sbb
roll
ljmp
push
sub
lock
loop
imul
out
and
xchg
pop
leave
stos
push
js
jne
sbb
jno
mov
or
jmp
xor
dec
and
jno
xor
jl
push
shlb
pop
out
jp
lahf
shrb
xlat
jo
sbb
or
cmc
mov
xchg
inc
or
push
adc
repz
sub
push
mov
xor
inc
inc
fucomi
insl
rcl
stc
adc
or
dec
lock
jo
push
daa
addb
rorl
mov
mov
lcall
in
inc
insb
jp
test
into
fidivl
mov
push
lds
insb
mov
mov
fdiv
sub
loope
mov
js
jbe
in
aad
mov
daa
popa
dec
popa
hlt
jno
jns
pop
mov
mov
pop
fisttpl
adc
add
cmp
inc
adc
and
into
mov
bound
mov
xchg
add
pop
adc
fistl
inc
movsb
and
mov
rcrl
arpl
inc
mov
cmp
rcrl
lods
push
popa
fisttpl
lds
dec
pop
mov
adc
mov
or
cs
cmpsl
stos
xor
movsl
and
out
dec
lock
xor
mov
push
xchg
jns
jns
add
mov
dec
bound
push
test
in
dec
mov
sbb
or
or
adc
jae
movsl
loopne
shlb
aas
subb
outsl
cltd
jae
or
mov
jge
xchg
pusha
xchg
rcl
sub
lds
push
mov
rcrl
inc
fimull
xor
iret
sahf
adc
cmpsl
mov
int
inc
jle
push
popa
dec
pop
dec
arpl
popf
jbe
mov
adc
cmp
rclb
mov
inc
mov
into
mov
dec
ss
les
add
aas
fwait
jbe
push
addr16
addr16
stos
pop
bound
es
inc
stos
cmp
in
jmp
pop
dec
arpl
outsb
jg
xchg
in
xlat
sub
scas
dec
lods
add
icebp
cmp
mov
xor
lock
fidivrl
pop
lds
adc
gs
mov
sbb
or
adc
fwait
ss
addr16
in
mov
pop
insl
xor
loopne
mov
or
jnp
idivl
outsl
xchg
sbb
lahf
sti
gs
and
call
cmp
push
loope
filds
sbb
cld
sbb
sub
popf
lods
popa
fwait
pop
test
loope
int
je
cmp
fsts
push
mov
jecxz
subl
add
add
pop
xchg
insb
insb
push
inc
test
xchg
mov
scas
fbstp
push
in
out
cmp
loopne
ljmp
pushf
lcall
call
gs
stc
jne
or
std
mov
mov
popf
pushf
hlt
dec
pop
inc
pop
dec
in
lods
mov
mov
ss
ss
xor
fdiv
and
fisttpll
clc
add
in
outsl
in
testb
sub
adc
push
int3
pop
mov
iret
rcr
pop
add
repnz
scas
movaps
jp
pushf
fldcw
loope
inc
movsb
jns
scas
loopne
repz
and
sub
push
xchg
hlt
inc
push
repz
sbb
mov
lea
lcall
enter
lods
repnz
icebp
dec
jmp
push
lret
xchg
inc
dec
or
je
lods
js
push
push
js
sub
add
jo
dec
jae
rolw
mov
jbe
sbb
pop
add
scas
scas
inc
mov
adc
inc
insl
fsubrl
in
push
mov
stos
imul
or
stos
jbe
push
les
inc
loop
jns
loopne
pop
jmp
lods
cltd
fwait
and
stc
push
dec
mov
xor
dec
faddp
cmp
enter
dec
pop
jle
into
inc
popf
sbb
xchg
or
xor
loopne
xchg
stc
shll
movsl
pop
lds
shrb
arpl
mov
jg
mov
out
and
jp
in
mov
lock
fdiv
jne
sahf
and
mov
shrl
cmc
xchg
push
dec
xor
test
cmp
lea
jae
idivl
adc
jbe
mov
aaa
popf
jp
cltd
mov
or
or
cmc
xchg
mov
pop
push
cli
out
inc
in
lea
xor
or
push
push
movsb
pop
adc
cmc
mov
sbb
or
fcompl
test
pop
pop
rorb
cmp
pop
aam
or
mov
nop
int
jb
adc
jo
je
add
xchg
fwait
mov
push
sbb
imul
lds
in
pop
test
xor
pop
xor
xchg
insl
out
fcmove
test
hlt
mov
or
sub
imulb
in
cmpsl
insb
fisttpll
movsb
lock
add
dec
fwait
sub
push
dec
pop
ret
ror
nop
into
fildll
insb
jnp
adc
rclb
pop
sti
clc
loop
mov
xchg
outsb
clc
push
sar
pop
or
mov
xchg
js
iret
ja
fldcw
push
mov
bound
and
mov
pop
out
pop
clc
jae
dec
out
and
pop
sub
in
imul
fs
xchg
mov
or
scas
rcrb
mov
xor
push
sub
jne
cltd
icebp
and
mov
sti
push
pop
jp
xchg
adc
test
out
push
fdivrl
ret
sub
aad
mov
popf
lds
pushf
adcl
movsb
push
jnp
inc
add
dec
lret
iret
pop
xor
adc
lods
out
fwait
sub
push
jnp
test
movsl
leave
xor
stos
mov
popa
mov
out
sahf
adc
out
adc
fnsave
lret
push
mov
das
mov
cld
pushf
je
mov
sbbl
enter
jb
jecxz
mov
test
in
inc
hlt
daa
adc
dec
add
and
shrl
sub
pop
fmull
xchg
and
push
dec
xor
and
pop
xchg
fnsave
push
je
loope
adc
mov
jnp
cmp
in
stos
neg
dec
lods
add
push
lods
addr16
aam
inc
xlat
mov
shrb
cli
add
inc
out
pop
mov
mov
int
add
jmp
push
in
sahf
jb
add
mov
cmp
jg
shrl
xor
and
mov
push
mov
push
stc
dec
or
sahf
mov
mov
insb
rol
popa
mov
sbb
mov
inc
adc
addr16
inc
in
cmpsl
movsb
out
jecxz
cmp
incb
dec
jnp
sub
sub
movl
sub
sub
fadd
xor
cmpsl
es
push
mov
mov
push
xor
jbe
dec
inc
jmp
sub
in
sbb
inc
js
or
pop
xchg
mov
aad
cwtl
lcall
xchg
lret
pop
js
call
adcl
repz
mov
sbb
mov
loope
add
enter
sub
add
popa
mov
cwtl
or
addr16
gs
mov
stos
data16
xchg
pop
mov
dec
shll
rcrb
aas
icebp
fsubs
je
jmp
sbb
pop
scas
mov
popa
outsb
imul
mov
lds
inc
dec
mov
xsha256
cmpsb
push
pop
sub
sti
mov
mov
mov
jbe
fcomip
leave
popf
imul
rolb
mov
push
inc
xor
fistl
lock
mov
aaa
sbb
or
push
inc
inc
push
call
xchg
lods
push
stos
stos
test
inc
jne
inc
mulb
and
jns
lds
lcall
inc
jle
dec
cmpsb
lret
mov
scas
mov
movsb
push
fnstenv
adc
mov
xchg
push
add
jge
cmp
mov
inc
daa
nop
push
xchg
push
loop
cmp
in
mov
xchg
nop
cmpsb
into
cmpsl
out
out
test
or
ss
cli
stos
mov
or
mov
inc
cltd
int
mov
ret
xchg
out
pause
and
pop
push
mov
adc
dec
xchg
cli
push
jmp
aam
jmp
outsl
repnz
mov
iret
cltd
ja
push
sbb
std
sbbl
adc
jmp
jb
inc
jbe
test
mulb
enter
cmp
fsubs
inc
movsl
adc
in
jns
in
js
adcl
imul
nop
add
jbe
inc
mov
nop
out
in
mov
and
push
dec
outsl
aad
sbb
stos
add
call
fmuls
cwtl
js
push
scas
mov
rcll
push
xchg
gs
std
jo
lods
xchg
mov
sub
cmp
xor
lea
push
stc
adc
xlat
push
daa
mov
mov
mull
cmp
adc
aaa
adc
cmpsb
jmp
lock
les
jae
insb
push
cltd
sub
jb
push
push
mov
outsw
or
fnstsw
ret
into
subb
andl
ret
jle
cmp
lods
ror
cmp
or
mov
das
je
jg
icebp
inc
shr
dec
xchg
cmpl
cmp
daa
jge
nop
sub
jmp
sub
mov
in
andb
scas
loopne
stc
leavew
pushf
push
test
mov
jmp
add
dec
push
sub
aad
pop
adc
decb
int3
push
push
into
outsb
mov
jnp
sbb
test
ss
inc
test
and
imul
mov
adc
mov
idiv
lahf
inc
mov
mov
adc
loop
inc
jecxz
lods
xor
scas
mov
mov
push
mov
and
ja
cmp
bound
mov
or
js
rcrb
fcmovb
imul
push
pop
dec
pop
push
and
dec
mov
mov
cli
stos
mov
cwtl
and
andb
test
cltd
add
mov
push
jge
mov
shll
mov
or
test
adc
outsb
and
fcomp
mov
mov
ret
add
push
lret
xchg
aam
adc
mov
lods
xor
dec
xor
lea
sbb
push
dec
sub
pop
jmp
test
cmp
popa
dec
xor
ret
xchg
scas
or
xor
add
iret
mov
in
pop
xchg
xchg
outsb
cmp
fdivrl
jns
xchg
insl
inc
aas
xor
in
adc
and
adc
jge
cmp
xchg
inc
dec
push
mov
je
or
cli
ret
push
mulb
mov
into
out
jne
or
mov
pop
shr
xor
popa
test
ds
mov
stos
stos
stc
movsb
jae
pushf
and
jp
pop
push
sarl
add
test
ficomps
xor
mov
push
cmpsb
aad
popf
movsl
push
lahf
movsl
sbb
mov
pop
loop
jl
shrb
std
test
xchg
xadd
sub
adc
pushf
insb
or
lahf
repz
test
xchg
mov
xor
jno
adc
xchg
jge
fiaddl
push
jae
icebp
xor
jno
cmp
jge
ss
add
sub
adc
sbb
lods
dec
aam
mov
and
pop
sub
pmullw
movsb
sub
mov
imul
fwait
pusha
sbb
rolb
rclb
les
sbb
cmp
fiaddl
call
test
or
sbb
cwtl
cs
xchg
iret
lods
jnp
sub
je
mov
inc
add
dec
cmpsb
sahf
and
mov
jge
adc
xor
xchg
ret
mov
xchg
push
pop
and
or
imul
notb
xchg
pop
jns
add
testl
loop
fcoml
lret
repnz
aam
sub
lods
pop
in
xor
add
pusha
imul
jo
imul
inc
sub
insb
lods
dec
cs
addl
lods
ret
data16
scas
push
jecxz
cwtl
lods
pop
sub
pop
pop
lcall
ljmp
fidivs
shl
popl
xchg
jecxz
pop
andl
fcompl
jno
mov
call
sbb
mov
cmp
mov
movl
scas
cwtl
jle
sub
mov
pusha
mov
cmpsl
lock
ljmp
cmp
cmp
lock
pop
fbstp
push
in
int3
rorb
testl
dec
sbb
push
out
mov
test
xchg
dec
lret
movsl
data16
pop
lahf
pop
sbb
or
sti
sbb
or
pop
xchg
sub
stc
imul
mov
push
sub
mov
lcall
test
outsl
vmread
mov
xlat
lods
shr
mov
addb
cld
jecxz
nop
push
sarl
and
jecxz
jae
mov
mov
adc
into
pop
pop
push
mov
jno
jecxz
ljmp
scas
sbbb
pop
call
insb
loop
ficoml
xchg
fldl2t
sbb
xchg
leave
xchg
pop
xchg
pop
jno
aaa
sbb
shll
scas
push
cmc
lahf
mov
std
loope
xchg
shrb
insb
mov
sub
jbe
hlt
cmc
push
mov
adc
mov
cmpsl
mov
in
int3
sbb
sbb
popf
cmp
sbb
cmp
shll
bound
subl
dec
xor
imul
push
and
jnp
cmp
mov
mov
int
adc
push
lods
mov
cmp
cmp
jge
lods
daa
es
jo
bound
push
jo
loope
aam
test
lcall
outsb
movsl
jle
mov
lea
mov
sub
push
pop
movl
scas
popf
adc
jl
pusha
or
stc
fistps
mov
sbb
out
loope
in
lret
jae
and
cltd
mov
icebp
aam
repz
pop
xorb
stos
mov
and
jg
adcb
out
sub
repnz
dec
loope
pop
fs
hlt
and
push
mov
or
decl
dec
dec
sahf
filds
fistpll
or
outsl
and
lods
aaa
mov
mov
add
ljmp
push
sub
out
imul
sbb
jo
pop
xor
movsb
dec
aam
xchg
test
aad
pop
mov
adc
mov
repnz
inc
xchg
xor
cmp
fsts
xchg
sub
push
jo
pop
inc
stc
xor
inc
xchg
clc
gs
mov
mov
insl
sub
das
pop
xchg
dec
xor
push
mov
cltd
inc
and
xor
mov
and
out
cmp
dec
ja
in
std
pop
movsl
fstpl
jp
mov
mov
inc
ja
sbb
pop
pop
pusha
jl
loope
and
xchg
xchg
daa
pop
je
int
notl
inc
cs
aas
fistps
pop
cmpsl
xchg
ljmp
je
jb
fildl
pushf
pop
sub
mov
jle
or
mov
inc
int
fldl
mov
dec
mov
xor
sub
xor
pop
in
cmpsl
inc
sti
scas
or
sahf
or
and
sbb
mov
jp
cmp
inc
sub
jl
mov
jecxz
add
sbb
popa
add
cld
adc
sub
stos
pushf
popf
xor
std
sub
pushl
mov
dec
or
test
adc
ret
mov
push
std
sub
xlat
adc
je
pop
add
lret
fistps
xchg
aas
push
outsb
repnz
iret
mov
push
iret
aad
sbb
push
loopne
in
jmp
cmp
in
or
orl
outsb
out
out
daa
xor
pusha
jne
ret
ljmp
dec
std
rsqrtps
add
sbb
test
cmp
add
inc
in
and
sahf
das
lds
jo
jae
and
rorl
je,pn
xchg
call
lcall
xchg
dec
stc
clc
mov
shr
mov
jp
fadd
mov
rol
xor
es
clc
push
cmp
shlb
stos
push
jns
ret
mov
daa
and
mov
mov
fnstenv
mov
aad
or
popa
adc
xchg
mov
cmp
adc
iret
sarl
lods
mov
stc
jmp
jge
xchg
or
ja
bound
jp
sub
mov
aad
jno
xor
add
mov
lret
shll
push
push
nop
mov
rcrl
push
sbb
inc
jmp
in
data16
cmp
xor
sbb
test
mov
cltd
xlat
add
les
enter
fists
and
enter
fs
jecxz
leave
mov
jb
mov
jge
and
dec
pusha
dec
mov
cmp
repz
fimuls
test
dec
subb
roll
xchg
fdivrl
loopne
inc
lret
dec
mov
mov
add
gs
dec
cmp
adc
fdivr
mov
popa
lds
jmp
xchg
inc
and
jp
mov
sub
adc
imul
out
mov
pop
ljmp
mov
xchg
dec
cmp
pop
out
ljmp
icebp
xor
or
sub
pushf
add
out
test
jp
pop
sahf
push
repz
jge
pop
rcrb
inc
imul
faddl
pop
jns
out
jmp
dec
or
xchg
inc
je
stc
pop
in
lcall
jne
fcompl
and
loop
pop
loop
sub
loop
repnz
lahf
xchg
pop
clc
dec
pushf
mov
push
popa
mov
in
stos
dec
lock
dec
cmpsl
hlt
xor
ljmp
es
test
pop
mov
mov
sarb
cmp
loope
cmp
cltd
add
push
jne
aaa
lahf
jno
test
movsb
jmp
loopne
aam
inc
jmp
test
jo
vmwrite
adc
pop
mov
sbbl
sbb
int
adc
cmpsb
inc
inc
or
mov
sub
insl
in
push
mov
sub
adc
jno
aas
cmc
lods
test
jp
pop
subb
sbb
jecxz
sti
mov
imul
inc
dec
cmp
xchg
mov
jg
popa
sbb
pusha
ror
por
jle
jmp
fptan
ds
xchg
aad
push
cmp
xor
lock
jnp
bound
addr16
iret
icebp
js
test
out
push
test
fstpt
fsub
clc
test
mov
jo
movsl
sbb
data16
push
data16
aam
inc
xor
pop
sub
push
stos
dec
sub
hlt
fstl
jl
lret
leave
cmp
in
mov
test
add
stmxcsr
mov
jne
mov
xchg
and
and
xor
pop
mov
loopne
movsb
pop
fildll
and
addr16
pop
int
outsb
sahf
push
add
or
dec
adc
mull
jns
or
and
out
int3
add
xchg
shl
aam
inc
js
rcll
mov
gs
mov
inc
fidivs
std
mov
add
out
pusha
pop
loope
inc
cmp
xchg
cmp
testl
stc
cmpb
push
scas
fistl
pop
push
mov
sahf
jl
add
jo
cmp
addr16
or
mov
xchg
ljmp
fs
cltd
sub
jbe
inc
sti
mov
pop
dec
cmp
mov
out
rorl
hlt
lods
inc
ds
push
sub
std
mov
cmp
and
cmc
bound
cmp
scas
and
iret
call
pop
push
aaa
inc
adc
fnclex
das
cmc
out
ljmp
daa
cmp
daa
push
xor
pop
add
cmpsb
data16
xor
movaps
dec
ret
push
jp
add
loop
andb
jecxz
enter
das
lret
push
push
popa
int
stos
popa
lods
mov
xor
hlt
lea
mov
xchg
test
cltd
in
hlt
lds
pop
pop
add
das
ss
adc
mov
push
mov
out
sbb
mov
pop
mov
xor
xor
cmc
jae
cmpsb
mov
dec
iret
mov
or
test
loop
push
or
adc
mov
testl
and
push
shll
jae
push
mov
mov
out
call
outsl
arpl
mov
test
ljmp
movsl
sbb
mov
jnp
lcall
pushl
cmp
fdivrs
shll
push
inc
mov
cmp
imul
lds
sbb
ret
push
jg
xor
movsl
jecxz
inc
cmp
sbb
gs
jg
or
pusha
nop
xchg
cmpsb
mov
and
stc
mov
test
mov
imul
cmpsl
scas
sahf
div
fcmovnbe
leave
mov
jb
add
jmp
push
in
xor
xchg
add
dec
add
aaa
shlb
addb
aad
xchg
scas
sbb
orb
popa
pop
sti
add
lcall
mov
cs
dec
mov
push
push
mov
rolb
std
rcl
xor
shlb
in
fdivs
jne
dec
inc
imul
sub
sub
lcall
sub
mov
test
hlt
mov
push
xchg
mov
dec
and
out
and
ljmp
int3
and
pop
addr16
mov
jbe
pop
aam
test
movsb
inc
cmpsl
cmp
push
xchg
les
or
rcr
iret
xor
pop
push
pop
dec
lahf
loope
cs
sub
and
pop
shl
scas
mov
shr
test
ljmp
repnz
dec
and
data16
pop
out
xchg
out
stos
stos
add
pop
mov
sbb
movsb
jle
xchg
xor
push
inc
jb
push
aam
cmc
adcl
adc
das
add
xchg
or
sub
adc
or
loop
loop
jl
pop
stos
pop
rcrl
fsts
add
nop
outsb
xchg
int3
add
adc
popf
cmp
mov
mov
sti
mov
icebp
mov
cltd
ss
xchg
mov
xchg
dec
push
leave
mov
mov
call
dec
adc
inc
cmp
cld
sti
xor
arpl
and
or
mov
jge
xor
les
out
rcl
xchg
push
xor
lret
push
and
sbb
mov
test
fwait
xchg
sub
xor
add
pop
lcall
cwtl
lock
add
pushl
cmp
notl
ret
test
lock
adc
gs
sub
aas
jg
dec
pop
movsl
subl
cmc
xchg
fists
cmp
sbb
jg
insl
aam
ja
xor
loope
popa
and
mov
je
pop
xor
cmp
pop
mov
add
mov
cmpsb
cmp
insb
add
and
out
pusha
jp
and
aam
push
or
mov
jno
adc
mov
xor
mov
sbb
jbe
out
mov
in
cmp
inc
ficompl
stos
cmpsb
pop
dec
mov
push
pop
pop
mov
in
imul
sub
sub
mov
or
add
xor
push
mov
cmp
imul
cmpsb
mov
in
add
mov
sbb
cmp
popa
aaa
dec
or
inc
stc
adc
out
arpl
test
or
lret
fildl
orl
xchg
lcall
mov
cwtl
jb
pop
jle
push
mov
movl
in
jnp
pop
and
mov
enter
mov
inc
rorl
jle
cld
sub
ja
xchg
xor
flds
mov
push
pop
dec
daa
xchg
stos
pop
push
pop
lods
sub
subl
inc
inc
xchg
cltd
pop
arpl
mov
push
outsb
mov
adc
pop
or
sbb
ss
jmp
inc
aad
jge
fmull
mov
cwtl
rolb
push
aas
mulps
push
xchg
loopne
or
mov
mov
pop
mov
dec
xchg
gs
popa
lods
push
cmpsb
adc
sahf
xor
push
or
inc
int3
ja
imul
push
pop
into
jp
stc
ja
sbb
cmpl
call
imul
negb
push
push
sbb
ja
mov
mov
out
adc
scas
add
inc
aas
mov
cmp
mov
leave
mov
mov
pop
outsl
jmp
dec
and
sti
movsb
jmp
out
dec
cmpsb
lcall
mov
push
pusha
mov
adc
sub
inc
sahf
mov
inc
jne
sbb
ja
dec
movsl
repz
addb
jo
lret
subl
in
sub
mov
mov
jle
or
imul
push
jge
lock
inc
xchg
ja
popf
inc
inc
fnstenv
add
add
jle
rorb
lcall
push
popf
jne
lahf
xchg
sbbl
add
bndcu
ss
loop
xchg
xchg
jge
xchg
movsl
sbb
dec
js
hlt
vpacksswb
mov
call
scas
arpl
sbb
lods
int
lret
lcall
cmp
inc
enter
inc
mov
out
popf
push
pop
les
fnstcw
jne
jg
ret
mov
sti
js
adc
mov
call
lcall
add
ss
inc
int
out
fildll
shrl
jnp
lods
cwtl
pusha
hlt
push
hlt
sbb
xchg
inc
repz
ret
shll
push
and
mov
daa
jmp
fwait
leave
mov
push
psubusb
movsb
push
ss
pop
imul
out
loopne
andb
out
mov
sub
ficomps
ror
ficoms
push
insb
repz
loope
push
outsl
pusha
dec
push
dec
sti
mov
dec
mov
arpl
insl
xor
lcall
lea
or
dec
std
pop
cmpsb
adc
sbb
mov
lahf
mov
and
or
or
xchg
push
pop
iret
lods
je
cs
imul
or
push
repnz
inc
add
xchg
in
xchg
adc
jle
push
jle
jmp
icebp
aaa
cltd
in
mov
ljmp
cltd
aad
outsl
and
mov
out
push
jmp
push
pop
fwait
ret
dec
push
and
and
adc
or
push
inc
clc
pop
int
mov
icebp
or
xchg
pop
or
push
enter
fisubrs
mull
movsl
mov
cmpsl
int3
adc
mov
ret
lcall
dec
repz
ret
aam
out
dec
stos
inc
loop
cltd
or
scas
in
fnsave
pushf
sub
shll
inc
lea
mov
cmp
jmp
pusha
les
push
sub
mov
das
call
xor
pop
fucomp
cmp
fldt
cld
and
mov
and
lods
leave
sub
enter
push
mov
mov
sbb
fstpl
mov
push
cmpl
mov
jmp
filds
cmp
mov
mov
and
inc
lret
pop
das
les
mov
mov
pop
mov
xchg
adc
imull
pushf
mov
out
loope
addr16
cli
jne
pop
ljmp
or
jmp
int3
jmp
push
jo
ret
pop
jge
scas
ret
js
pushf
aad
incb
lock
mov
pop
cs
mov
sbb
xchg
in
jno
in
test
loopne
rcll
cmp
mov
fidivl
xor
push
inc
cmp
fnstcw
fwait
js
fnstenv
pop
adc
jne
mov
add
sbb
jle
and
movsb
pop
movsb
sub
repz
lahf
pop
cwtl
pop
push
js
jo
cmp
test
mov
and
divb
adc
xchg
daa
shlb
sub
sub
les
add
jl
add
push
pushf
inc
pop
xchg
add
aas
fiadds
pushf
aaa
das
lahf
outsl
adc
iret
and
ljmp
scas
mov
sub
repz
icebp
push
cmpsl
test
jne
enter
cmpsl
les
push
push
fstl
gs
and
std
ja
roll
sub
or
out
les
and
scas
nop
jmp
jmp
cs
adc
jmp
or
xor
push
lret
dec
aad
ret
loopne
dec
mov
pushw
pop
std
cmp
dec
dec
push
sbb
jbe
movsb
mov
mov
pusha
rolb
add
out
xchg
add
and
or
push
repz
cmp
iret
mov
aad
cmpsb
pusha
add
stc
inc
test
outsb
jns
inc
inc
fwait
in
out
rcrb
ljmp
mov
sub
clc
xchg
aad
sbb
jge
cmp
dec
sub
xchg
mov
loop
fdivrs
fimull
and
cltd
clc
test
or
mov
inc
mov
dec
inc
stc
mov
lods
cmpsb
cmpsl
cwtl
dec
js
mov
push
lret
mov
pop
andb
repz
jno
jbe
jl
ljmp
or
nop
xchg
pop
push
and
mov
cmc
jle
and
pop
pop
jns
dec
cmp
xchg
orb
fnsave
add
xor
jmp
leave
int3
lock
loopne
push
mov
push
imul
int3
xor
test
shlb
in
pop
xor
mov
and
adc
sti
mov
shlb
je
cwtl
not
cld
push
cmp
data16
stos
mov
loopne
mov
lds
stc
sub
xchg
push
mov
cmp
mov
xchg
imul
push
mov
dec
mov
js
pop
idivb
scas
rcrb
lds
arpl
stos
mov
cmpsb
mov
aaa
sbb
mov
sbb
xlat
and
or
jge
mov
push
cmp
in
out
xchg
andl
aaa
dec
scas
xchg
gs
mov
popa
jge
pop
pop
cmp
mov
pop
js
inc
shrb
sub
jecxz
fbld
data16
jbe
and
push
xchg
int3
cs
xchg
add
repz
lahf
inc
mov
mov
mulb
shrb
out
clc
fwait
adc
leave
insl
mov
inc
dec
cmp
ret
xor
pop
mov
mov
insl
add
push
test
add
xchg
in
notl
xor
inc
shll
das
adc
or
fistpll
mov
push
bound
and
cmp
push
in
stc
stc
jns,pt
das
xchg
arpl
push
in
dec
mov
pop
or
fldcw
loop
and
aaa
xchg
push
add
arpl
lea
sbb
scas
arpl
mov
xlat
in
hlt
jmp
mov
push
push
imul
lret
fwait
pop
in
popa
call
add
and
fsubrl
xor
call
or
jmp
or
sbb
fbstp
cmp
hlt
and
inc
jmp
lahf
dec
int3
jp
bound
addr16
push
lock
ud2
mov
mov
ss
cwtl
arpl
fsubs
sti
mov
out
push
push
lock
enter
fdivrs
cmp
scas
dec
adc
push
cmp
addr16
jle
sbb
jno
pop
lret
imul
mov
xchg
xchg
mov
dec
fistps
enter
daa
outsb
push
push
xchg
ss
sub
dec
lahf
fnstenv
jmp
addr16
pushf
dec
inc
stos
lods
add
fdivs
sub
cmp
out
or
test
ror
out
xchg
xor
aad
imul
ljmp
scas
or
insb
cwtl
jno
inc
and
insb
add
xor
mov
in
shlb
push
lds
cmpsl
mov
adc
iret
adc
in
addb
sbb
mov
sti
push
xor
ds
push
mov
adcb
in
shrb
fidivrs
dec
push
push
insl
xchg
inc
xor
loopne
mov
pop
sbb
inc
dec
dec
dec
or
out
lret
or
xchg
ret
xor
and
leave
mov
imul
mov
arpl
repz
cmp
test
adc
repnz
pop
pushf
and
call
call
rcrb
mov
mov
and
jg
mov
push
adcl
mov
xchg
rcll
sete
enter
xlat
mov
push
cltd
inc
das
inc
cmp
and
mov
fwait
lret
pop
in
inc
stos
enter
aas
cmc
and
xor
lcall
stos
std
sarl
push
xor
push
mov
fisttps
sub
cwtl
fsubs
jne
jle
jecxz
insb
cmpsl
repnz
and
xor
lret
shll
std
push
outsb
cmp
hlt
aaa
repz
scas
lcall
fwait
push
clc
cwtl
sbb
fstl
xlat
int3
int
cltd
and
sbb
sub
dec
jecxz
cld
das
mov
call
cmp
scas
fucomip
dec
cmp
sub
into
mov
movsb
xchg
mov
fsubl
into
sbb
mov
sub
lret
cwtl
cld
fwait
in
out
mov
clc
and
adc
dec
enter
push
sbb
dec
jmp
adc
in
jb
shll
test
cmp
jns
pop
adc
loop
lea
mov
fistps
sarb
sub
xor
std
aaa
xlat
cmp
lret
inc
cmpb
lret
lcall
mov
das
rcll
xchg
push
or
jmp
aad
not
sbb
xor
test
insb
add
outsb
jo
out
jne
loope
mov
inc
dec
add
sub
push
cmpsb
mov
xacquire
push
mov
xchg
jns
push
mov
or
aam
mov
or
fdivl
iret
xor
or
push
mov
sub
jbe
mov
out
lahf
inc
js
sub
in
push
sbb
jo
repz
movsb
popa
sub
pop
sarl
dec
popa
cmp
arpl
imulb
push
mov
mul
mov
adc
or
std
pop
pop
inc
pop
cmp
mov
lea
xchg
rcll
pop
push
in
jbe
dec
out
nop
add
ds
jecxz
repnz
repz
mov
std
cmpsb
fnstenv
cmp
jle
or
repz
push
inc
pop
add
jg
adc
adc
sbb
jecxz
ja
movsb
ficomps
movsb
add
shll
inc
add
mov
cmp
xchg
fiaddl
insb
iret
test
cmp
es
repz
int3
mov
push
pop
xchg
dec
popf
mov
xor
in
jne
sar
cmc
sbb
leave
sbbl
jae
add
xor
push
and
mov
aad
lahf
test
sbb
aam
push
sub
mov
sub
inc
std
les
imul
mov
cmp
dec
lcall
sub
mov
or
sbb
js
out
nop
cs
sbb
in
lahf
ds
mov
cmpsb
cli
das
pop
sahf
mov
cmc
dec
cmp
dec
dec
xchg
fcmovnbe
dec
xor
sbb
es
xchg
mov
push
rcll
dec
sbb
jge
xchg
add
pop
add
in
lods
hlt
and
add
and
stos
rsm
xchg
or
mov
add
das
pop
js
cmp
test
sub
sub
lahf
out
adc
inc
push
xchg
imul
mov
or
popa
fadds
mov
and
sub
sbb
xchg
aas
pop
pushf
cwtl
shll
loopne
pop
incb
push
mov
popa
dec
push
imul
xor
in
dec
je
ret
inc
jg
push
lahf
and
out
aaa
cmp
mov
mov
cmp
fnsave
dec
push
rclb
ss
pop
ret
repz
inc
pop
aam
mov
es
dec
jo
xchg
pop
and
je
stos
mov
and
xchg
xor
pop
rcrb
xchg
mov
aam
frstor
fldt
ss
out
clc
pop
pop
mov
inc
dec
fstpt
or
mov
xchg
sahf
push
out
sahf
lret
jl
cmp
mov
cs
sbb
imull
mov
iret
jno
jnp
lret
or
pushf
int3
js
adcl
or
fdivp
outsl
das
popl
lcall
fs
cli
pop
mov
jge
shlb
sub
aad
popa
aas
xchg
and
cmp
jl
mov
scas
adc
push
sbb
lea
aaa
fsubs
das
add
ss
test
inc
mov
sbb
xor
jbe
iret
subb
xchg
lret
jbe
movsl
hlt
inc
inc
in
fmulp
dec
xlat
mov
jns
xlat
pop
std
jp
repz
or
sahf
dec
divl
adc
dec
push
scas
call
and
out
xchg
cmp
cmpsb
lret
or
sub
inc
add
rolb
rclb
shll
je
inc
sbb
xchg
pop
or
outsb
loop
push
loopne
cmp
dec
loop
fnstenv
xor
daa
lods
and
xor
fcmovbe
gs
aas
movsl
lret
enter
int
add
icebp
or
cmp
rcrb
addb
in
vpminsw
adc
inc
fmull
push
sub
mov
cmc
sbb
bnd
mov
sbb
or
fwait
adc
add
subl
rolb
xchg
add
movzbl
sub
mov
mov
jg
out
das
rclb
pushf
lock
cld
test
neg
es
punpcklbw
fistps
cld
lods
out
dec
popa
mov
push
or
fnsave
divb
out
pop
push
pop
sahf
pop
xor
push
jp
jb
sti
add
mov
sbb
fwait
std
adc
aad
xchg
mov
jo
pop
cmp
into
cltd
movl
mov
in
inc
enter
imul
sub
inc
movsl
cmp
lahf
stos
rcrl
int
mov
mov
jb
fcompp
and
adc
mov
adc
hlt
movsl
mov
xchg
and
ret
fcomps
aam
mov
inc
push
mov
pop
out
and
or
popa
add
test
adc
inc
out
mov
test
xchg
dec
bound
xchg
adc
adc
mov
rolb
or
das
ficoms
arpl
mov
xchg
out
rcrl
sub
enter
mov
std
dec
xor
pop
pop
cmp
outsb
xor
out
into
xlat
out
push
ret
dec
test
cmc
lret
stc
ret
adc
les
adc
mov
ret
mov
mov
cwtl
in
nop
ja
push
aad
xchg
sub
push
in
push
insb
lds
js
add
fwait
sub
cltd
mov
test
and
push
jmp
push
and
scas
mov
sbb
cmp
popf
jle
into
inc
jae
jp
or
pop
jbe
lahf
mov
jecxz
jnp
shll
aam
movsl
out
sbb
jmp
aad
orl
push
lea
lock
ret
andb
and
mov
imul
in
movsl
mov
fsubrp
xchg
cld
jbe
adc
out
lock
in
aam
mov
icebp
imul
in
jl
shlb
add
in
sarb
sub
jb
repnz
sbb
xchg
subl
leave
adc
outsl
ds
or
jne
out
pop
fwait
jae
sub
les
cs
sub
cmpsb
xor
mov
push
xor
jo
mov
pushf
ss
push
push
mov
nop
mov
sbb
pop
xor
pop
gs
cmp
inc
xorl
jl
dec
addr16
pushf
jmp
and
fwait
loop
or
xor
sub
jbe
ficomps
ficoml
into
stos
sub
rcrl
sub
cltd
pop
sub
icebp
int
pop
adc
jl
mov
inc
sub
nop
dec
add
pop
inc
and
and
loope
ss
mov
pop
jns
or
xchg
xchg
mov
fs
inc
scas
loop
pop
icebp
add
dec
mov
aas
dec
daa
inc
mov
and
lret
lock
add
loope
sub
push
sti
adc
movsl
mov
repz
cmp
cmp
dec
loop
inc
dec
mov
cmp
adc
cmpsl
push
sub
jae
mov
xor
push
push
pop
clc
insb
stos
leave
das
pop
mov
push
xchg
adc
lcall
or
pop
out
cmpsb
xchg
inc
rol
push
sub
test
fs
outsb
dec
stc
insb
stos
xchg
inc
test
push
jno
fmul
pop
inc
or
movsl
adc
mov
jmp
ret
mov
cmp
pop
mov
xchg
sub
mov
mov
in
mov
daa
imul
sub
and
xchg
xchg
stos
in
inc
je
in
js
jbe
cmp
mov
fstl
or
pop
pusha
and
insl
inc
cmp
shll
push
aas
sbb
daa
pop
mov
fs
sbb
jp
dec
dec
shll
orl
jne
dec
xorb
xchg
xchg
pushf
push
pop
test
push
lea
cmovg
push
movsb
push
ja
jg
je
xchg
imul
sahf
sub
inc
jbe
xor
imul
xor
inc
dec
cli
pop
cmpl
cwtl
fs
xchg
cld
clc
test
xor
arpl
or
ret
inc
and
in
lcall
pop
inc
xchg
aad
mov
and
hlt
xor
mov
or
iret
xchg
add
mov
and
inc
scas
rorb
adc
push
das
outsl
push
or
movsb
add
inc
push
push
in
enter
mov
push
xchg
xchg
sahf
addb
adc
daa
lahf
roll
pop
in
jnp
and
mov
iret
add
sysenter
orb
sbb
das
in
lods
sti
mov
sub
or
psadbw
dec
std
xchg
pop
cmp
stos
sbb
out
fiaddl
outsb
mov
jmp
popf
or
sub
cwtl
mov
sbb
enter
loop
fprem1
lret
or
push
sbb
cmp
xchg
sbb
cmp
mov
jb
sbb
shll
outsl
ljmp
stos
aad
inc
out
push
jo
inc
inc
mov
fnstenv
mov
stc
aad
xchg
std
imul
adc
cmc
push
cmp
mov
adc
push
rcrl
cmp
icebp
dec
pop
or
cld
sub
sub
lods
jecxz
in
add
icebp
jp
hlt
jbe
xor
aad
xor
addr16
or
xchg
mov
cmp
xchg
je
jmp
jnp
mov
nop
jmp
mov
mov
jnp
fisubrl
sbbl
sub
xchg
jae
mov
cmpsl
out
mov
inc
aam
adc
bsf
xchg
jmp
or
inc
sbb
mov
test
push
cmp
out
mov
and
arpl
add
adc
dec
frstor
or
insl
jl
adc
cmp
fisubrs
sbb
mov
hlt
adc
loopne
enter
fwait
data16
mov
sub
daa
sub
jg
xor
out
xor
daa
add
popf
movsl
jmp
xor
out
dec
and
addr16
cmc
xor
mov
or
fists
in
lods
xchg
lret
hlt
pusha
mov
xor
dec
and
fpatan
xor
add
adc
push
push
int
pop
aam
push
pop
inc
movsb
jae
mov
movsl
movsl
in
ret
pop
sub
mov
xchg
inc
lods
movb
jo
orl
or
addl
lahf
inc
cld
es
bound
mov
dec
xor
mov
mov
inc
jnp
fisubrs
jmp
sbb
push
ret
xor
and
in
mov
mov
sub
fwait
stos
jnp
xchg
cmp
out
lret
sub
jne,pt
cwtl
push
in
and
fdivrs
push
mov
mov
lahf
add
dec
pop
pop
stc
xchg
push
scas
lahf
into
shr
push
out
sub
mov
cmp
mov
adc
lahf
jnp
stos
in
aas
mov
icebp
fstps
cmp
push
ljmp
mov
repnz
jae
loopne
decl
push
add
mov
sahf
sbb
icebp
je
cmp
stos
push
aad
mov
fidivs
andl
lods
xchg
fwait
test
lock
xchg
bound
inc
stos
mov
ljmp
repnz
out
push
sarb
in
lds
fbstp
inc
movsb
stos
lods
outsb
aas
neg
cmp
mov
dec
aam
repz
adc
stos
sti
into
sti
je
mov
fcompl
mov
sbb
mov
das
fdiv
jnp
es
jbe
adc
adc
loop
add
movsb
mov
pop
in
lds
cmc
das
fnsave
stos
scas
mov
jae
mov
and
mov
loopne
stos
into
jo
js
jo
add
push
fstpt
clc
add
lcall
sbb
daa
lcall
popf
faddl
push
fmuls
mov
or
iret
push
mov
cwtl
pop
xchg
movsb
les
push
mov
jae
inc
cwtl
mov
fnstsw
hlt
test
jo
ret
inc
jp
test
cs
mov
ret
jge
movsl
mov
ret
filds
popf
xor
je
fwait
fwait
and
cld
call
push
inc
and
in
jg
lcall
jmp
or
jo
arpl
and
xchg
fwait
adc
pop
add
or
and
mov
lods
movlps
inc
pop
mov
ljmp
mov
fistps
dec
data16
popa
outsl
mov
or
std
fisubrs
lods
repz
test
jl
aam
js
add
dec
mov
adc
fcomps
xor
dec
mov
pop
xor
jge
dec
adc
popf
insl
jle
clc
lock
testb
push
jl
mov
mov
xlat
pop
or
outsb
icebp
insb
push
jle
mov
sbb
cmc
dec
push
pop
jno
jl
arpl
pushf
push
mov
jae
pushf
test
mov
xchg
xor
xchg
sbb
adc
jb
adc
ss
cmp
fcomps
adc
jns
pop
mov
and
outsb
and
call
fdivs
clc
pop
ret
add
dec
das
enter
pop
jmp
add
bound
lock
add
mov
mov
test
repz
sbb
loopne
jnp
mulps
ficomps
push
cmp
mov
lods
pop
scas
jmp
jecxz
xor
aaa
jo
sti
pop
sub
pop
push
mov
cmp
in
mov
in
mov
pop
mov
andl
out
stos
mov
dec
inc
cltd
sbb
cmpsl
testb
and
sbb
sbb
sbb
xor
or
sbb
repnz
out
jge
in
pop
js
xor
dec
pop
pop
cltd
mov
daa
cli
aad
jnp
lods
and
sbb
lods
loop
sub
notl
jns
gs
mov
push
in
cli
pop
cmp
add
push
push
arpl
adc
mov
jge
mov
mov
popa
aam
cs
mov
clc
sub
ljmp
stos
lea
mov
cmpsb
daa
sbb
push
jmp
gs
lods
mov
test
dec
popa
and
sbb
fwait
jmp
xchg
jno
add
dec
into
jb
cmp
xor
xlat
stos
dec
jle
jne
dec
sti
mov
or
int
add
pushf
inc
or
dec
iret
ljmp
sbb
data16
test
das
sti
pop
popf
jo
arpl
inc
inc
inc
inc
xor
imulb
dec
mov
push
cmp
aad
movsb
lods
outsl
mov
pop
xchg
push
mov
add
sbbl
cltd
jb
sub
lock
faddl
mov
movsb
in
imul
cwtl
stos
icebp
add
insb
mov
mov
pop
movsl
iret
dec
movsb
mov
mov
les
add
daa
dec
cmc
sbb
mov
xor
lock
jbe
mov
dec
jl
pop
les
ss
and
test
std
cmpsb
adc
push
pop
dec
testl
enter
xorb
dec
jne
and
dec
outsl
mov
jb
testl
or
movsb
loop
mov
xchg
jge
lods
inc
sbb
push
ds
popf
in
mov
and
jne
adc
xchg
push
imul
inc
add
test
cmp
in
arpl
and
lea
xchg
jae
cltd
pop
lods
pop
iret
pop
sbbb
das
je
xor
es
insl
lds
test
outsb
movsl
adc
fnstsw
dec
stos
enter
mov
dec
sub
sbb
push
bound
ret
ds
mov
mov
idiv
icebp
andl
adc
loopne
sar
fnstcw
mov
jo
cwtl
mov
std
mov
jge
mov
lds
jb
lret
cltd
add
sub
add
jge
sub
aas
loop
les
dec
jns
cmc
xchg
dec
jae
pop
mov
popa
aad
push
dec
dec
pop
pusha
aam
add
push
jb
scas
fcomps
xchg
xchg
sub
adc
lock
pushf
aaa
sahf
out
sahf
aam
push
pop
sub
push
movsb
adcl
fs
xor
sub
xlat
icebp
fwait
incl
je
dec
push
sub
fdivs
cltd
mov
movsl
push
mov
divl
sahf
adcl
adc
hlt
aam
lock
cmp
pop
and
dec
add
push
shl
jns
test
push
jmp
inc
icebp
sti
imul
jae
repz
jno
and
mov
stos
jno
hlt
cmpsl
jnp
ja
mov
inc
into
iret
fwait
xor
ljmp
test
inc
les
popf
mull
mov
xlat
cmp
lret
cmp
xchg
xchg
sbb
divl
ret
push
test
and
jne
add
mov
imul
sti
or
arpl
inc
add
fsubrs
icebp
dec
leave
xchg
adc
loopne
lock
cli
out
inc
ret
es
loope
rcrl
xor
rorl
xor
in
pop
inc
dec
fstl
dec
push
sub
daa
add
mov
mov
mov
ja
aad
dec
and
adc
jle
push
pop
mov
aaa
mov
xchg
xorb
cmp
xor
lods
ljmp
je
lret
or
xor
xchg
sbb
mov
pop
jmp
mov
xchg
jns
loope
inc
push
jl
mov
jg
imul
out
std
mov
es
push
clc
jnp
std
pop
pushf
loop
xchg
pop
and
mov
sbb
dec
outsb
jne
pop
in
enter
sub
ss
push
sub
xchg
add
jne
in
push
loope
aaa
or
inc
arpl
xchg
mov
xchg
nop
setns
or
lret
repnz
mov
xor
adcb
jb
sbb
and
fadds
je
xor
lds
dec
jnp
inc
add
pop
sub
xchg
jb
stc
icebp
aaa
sbb
inc
mov
jmp
ss
imul
icebp
dec
je
adc
add
push
cwtl
jmp
adc
adc
mov
add
pop
xchg
cmp
rcl
sti
adc
pop
sahf
or
sar
adc
mov
in
and
fsubrl
push
jno
testl
imul
sub
in
inc
pop
dec
and
out
adc
int3
addr16
sbb
mov
repnz
out
lock
mov
push
xchg
mov
mov
fists
aad
cmpsb
pop
enter
inc
dec
out
loope
adc
mov
mov
pusha
fwait
sti
and
pop
sub
je
call
loope
sub
sub
daa
push
repz
shlb
std
popf
xorb
insl
sbb
mov
mov
fistpll
mov
mov
pop
jp
fstps
imulb
and
mov
scas
xchg
decl
cwtl
mov
push
xlat
sub
movsb
xchg
xchg
or
mov
xchg
add
add
jg
test
push
test
test
pop
iret
inc
bound
test
daa
popl
cmp
dec
popf
pushf
jns
mov
bswap
in
mov
push
mov
loop
cmp
movsb
lcall
out
push
xor
test
push
clc
dec
arpl
shll
lret
lods
loopne
out
clc
adc
loop
out
pop
movsb
out
sub
stos
mov
out
mov
out
mov
pop
outsl
test
rcr
mov
jo
pop
sahf
mov
mov
clc
jo
or
adc
jae
cmpsb
imul
jecxz
dec
push
cld
sbb
out
fiaddl
lods
fs
mov
and
scas
testl
ret
fnstcw
xorb
dec
les
pop
add
clc
pop
lcall
les
jnp
jno
sub
addl
lcall
fnstcw
or
push
subb
mov
push
push
xlat
dec
inc
dec
or
mov
push
pop
aas
adc
sbb
xchg
fcmovnbe
loope
jmp
sub
loope
push
jne
lods
xchg
addb
mov
flds
mov
xchg
leave
movsl
mov
lret
addr16
test
inc
mov
aaa
leave
imul
inc
lds
icebp
xor
jns
cli
and
mov
jmp
push
inc
jg
adc
push
xlat
stc
and
lds
jg
je
out
sub
sbb
xchg
stos
push
test
loopne
lock
push
iret
fs
lretw
push
inc
mov
cltd
inc
push
aad
xchg
aad
fildll
addr16
adc
lret
xchg
inc
push
scas
push
pushf
sbb
dec
adc
test
test
je
dec
aam
mov
das
daa
stos
movsl
or
cli
mov
insb
cmpsl
pop
add
addb
in
adc
xlat
xchg
mov
into
inc
push
subps
mov
cmp
aad
sbb
imul
xor
jecxz
cmpsl
decl
nop
data16
cwtl
dec
jmp
out
xchg
or
stc
xchg
imul
hlt
push
add
lcall
outsl
push
add
lods
mov
imul
xchg
in
jg
cmpsb
loope
jae
lock
insl
inc
mov
adc
mov
bound
adc
insl
stos
sarl
movsl
lret
mov
dec
clc
pop
test
fstpt
bnd
fs
mov
and
jmp
dec
sbb
pop
rcrl
jge
fisttpll
shlb
neg
sti
rcr
ljmp
add
jle
pop
xchg
push
sahf
sub
dec
mov
cs
lea
popa
int
dec
cmp
jno
mov
mov
fisubs
jmp
xchg
jbe
pushf
lock
sti
in
pusha
roll
xchg
cli
mov
inc
lock
ds
rclb
adc
or
xchg
jae
ror
xchg
or
mov
jmp
fcompp
adc
fcomp
cli
adc
out
adc
jmp
sbb
mov
xchg
pop
pusha
jecxz
pop
inc
sahf
mov
push
fcmovnbe
add
movsl
cmp
gs
push
mul
in
stos
daa
lds
lahf
mov
fidivs
movsb
or
and
sub
arpl
cld
call
ja
lret
mov
rcll
es
jle
lock
cltd
cmpsb
xlat
jge
pop
test
adc
mov
leave
or
shl
jmp
adcb
xchg
xchg
pushl
push
sub
sub
cmp
jbe
xchg
sbb
push
aaa
xorl
and
jle
int
cs
cmp
mov
in
stos
jmp
push
icebp
js
lret
mov
idivl
or
adc
movsl
sub
outsb
pop
fdivrs
and
lods
test
sub
in
pand
in
out
sbb
xor
cmp
add
imul
lret
invlpg
pop
aaa
inc
sbb
jo
into
das
jg
jns
iret
dec
and
inc
dec
jnp
stos
inc
aas
nop
or
adc
daa
aas
pop
sbb
mov
push
xchg
cmp
xor
pusha
inc
ret
push
in
sahf
stos
loop
nop
pop
pusha
mov
mov
int
sub
dec
push
je
jb
xchg
loope
in
mov
sahf
jo
pop
xor
repnz
add
hlt
sbb
push
repnz
je
rclb
fdivl
jp
mov
cmp
pop
daa
rol
mov
or
add
mov
pusha
cmpsl
cmp
outsl
sar
js
fld
inc
iret
push
int
outsb
mov
and
push
in
adc
jge
shll
pusha
dec
das
jns
add
inc
mov
dec
sub
sub
flds
inc
add
mov
jbe
mov
xor
lahf
std
loop
sar
sbb
add
dec
pop
and
mov
mov
cmc
data16
push
and
lret
push
aas
mov
sbb
lods
dec
dec
pop
addl
mov
mov
dec
scas
test
pop
sahf
data16
hlt
mov
in
or
hlt
jbe
pop
xchg
sbbl
sarb
fisttpl
pop
xor
rclb
scas
cmp
mov
pop
inc
lods
mov
stos
mov
xchg
aam
jae
imul
lea
fcoms
and
adc
lea
cmp
insl
gs
cwtl
loopne
jns
lret
hlt
cs
mov
std
mov
push
decb
fiadds
sub
and
cmpsl
cmp
push
leave
push
inc
sub
les
gs
cld
jl
cmpsl
pop
shll
adc
add
mov
or
inc
sub
cmpb
ds
js
in
push
and
dec
test
jmp
out
sub
push
and
adc
faddl
pop
stos
or
add
dec
int3
sub
lods
mov
shl
inc
out
xchg
imul
adc
mov
xchg
aad
aaa
push
dec
inc
out
les
sbb
inc
pop
push
mov
jno
movsb
or
jle
push
lods
fmull
sahf
adc
das
fbstp
es
xchg
add
mov
vmovntps
sbb
movsl
pop
aam
movsb
test
fwait
or
in
lods
xchg
popa
lds
sub
in
std
ja
xbegin
out
insl
inc
mov
xchg
idivl
mov
mov
pop
xchg
dec
orb
pop
or
faddl
fcomip
cltd
imul
ret
inc
add
inc
lods
stos
xor
mov
repnz
sbb
mov
fcom
mov
mov
mov
cli
aaa
mov
add
iret
adc
arpl
mov
jmp
movsl
ret
jecxz
test
xor
lahf
enter
xor
rclb
mov
scas
out
fnstsw
sbb
or
mov
adc
sbb
lock
popf
js
mov
or
mov
inc
jmp
insl
adc
push
mov
stos
mov
pop
ss
mov
jp
mov
xchg
jb,pt
repz
ja
or
cs
jbe
stc
jnp
add
xor
mov
mov
test
jne
decb
test
out
es
aaa
cmpsb
mov
addr16
testb
enter
cmp
or
es
nop
dec
add
shlb
mov
sbb
leave
mov
stos
movsb
daa
outsb
push
aas
cld
pop
enter
cli
sub
jmp
jb
pop
out
add
xor
in
xchg
or
test
mov
jl
inc
mov
arpl
cs
int
sub
cli
pop
mov
jne
lods
in
clc
nop
cmp
dec
adc
inc
sub
insb
ds
mov
lret
pop
pushf
fimuls
jle
mov
push
or
cmp
sub
cs
std
pop
lock
xorb
cmp
in
and
loopne
fsubr
mov
inc
inc
and
adc
cmp
jge
mov
andb
mov
mov
rclb
sbb
add
dec
lret
mov
lahf
pop
sbb
imul
pop
inc
dec
mov
adc
cmp
or
inc
cbtw
mul
subl
mov
cmpsl
fsubl
mov
cmp
scas
cmp
or
dec
jle
std
sarb
pop
clc
adc
mov
ds
inc
sbb
lds
push
orl
jmp
dec
outsl
lcall
pusha
pop
pop
fcom
dec
mov
jl
cmpsl
mov
xlat
push
pop
std
and
out
shr
xchg
fcoml
mov
push
jno
mov
push
mov
imul
int3
mov
fstpt
mov
stos
cmc
or
jmp
arpl
xchg
xlat
xlat
jle
mov
pop
mov
add
or
inc
xor
stc
xchg
fmull
jmp
push
stos
dec
arpl
dec
mov
push
cmc
daa
push
cld
inc
sub
filds
js
push
decb
movsl
xor
jmp
mov
lods
orb
pop
je
dec
adc
jge
movsl
scas
or
adc
lods
pushf
data16
inc
insl
adc
mov
or
adc
pusha
cwtl
sahf
dec
cli
or
add
inc
jmp
add
push
dec
or
or
pop
fsubrs
or
movsb
sub
imul
cmpl
push
inc
in
jecxz
adc
in
test
ds
push
repnz
dec
test
xor
iret
jg
xlat
cmpsb
mov
push
dec
outsl
add
mov
cvtps2pd
in
es
and
inc
mov
adc
add
ret
and
leave
xchg
xor
stos
cmp
stos
cmp
cmp
add
js
pop
aad
push
push
jbe
inc
jp
in
mov
mov
test
jne
dec
mov
mov
jge
insl
jno
lret
test
call
in
decb
dec
cltd
jg
mov
xchg
mov
mov
add
cmp
in
cmpl
inc
fcomps
pop
sbb
mov
or
mov
push
aas
sbbl
mov
les
pop
and
hlt
test
pushf
mov
and
dec
movsb
xor
xor
xor
or
clc
dec
mov
mov
xchg
adc
ds
mov
loopne
push
ret
and
and
inc
fwait
push
jp
test
pop
sub
iret
fxch
sub
gs
jne
ss
sbb
xchg
ret
xchg
jl
mov
data16
dec
hlt
popf
push
push
mov
jg
out
or
dec
mov
call
ljmp
or
pusha
shll
das
inc
nop
adc
sbb
pop
dec
sbb
mov
adc
rclb
nop
xchg
xor
pop
sub
and
mov
sbb
pushf
and
repz
lcall
cmpsb
pop
cwtl
mov
movsl
push
adc
cwtl
imul
addr16
jbe
dec
push
mov
mov
add
cld
mov
pop
jmp
test
pusha
mov
out
pop
jmp
xor
popf
sub
mov
xchg
addr16
lock
shlb
xlat
data16
jge
inc
cld
nop
or
or
and
out
mov
xor
or
js
stos
xchg
mov
adc
push
adc
idiv
int
fnstcw
mov
or
lds
mov
push
jle
pop
add
add
mov
sbb
sbbb
out
dec
into
fucomi
jnp
jmp
add
dec
scas
arpl
cmc
push
xor
jmp
sub
subb
ljmp
push
xchg
inc
je
xchg
out
addb
data16
icebp
add
orb
xor
iret
sbb
adc
dec
repz
fadd
mov
jns
out
dec
outsl
insl
ja
sub
mov
mov
fdiv
xorl
jmp
jge
or
jbe
sahf
call
sub
dec
cli
xchg
xlat
jno
pop
pop
scas
stos
mov
negb
mov
out
push
dec
inc
and
jne
pop
rcrl
xchg
and
mov
stos
push
lds
js
test
mov
mov
jp
cmp
arpl
inc
adc
aad
mov
cli
pop
push
mov
js
xchg
sbb
push
sub
mov
pop
or
out
lret
jno
sahf
add
adc
sbb
lods
outsb
xor
xorl
add
js
xchg
xchg
pop
adc
sbb
adc
xor
and
aad
lds
fdivr
push
shll
inc
rcr
loope
add
adc
xchg
loopne
sub
inc
jle
imul
roll
lds
lds
mov
in
loopne
popa
ss
dec
insl
adc
jno
js
inc
mulb
sub
loopne
clc
pop
inc
dec
cmp
fmul
sub
inc
test
mov
pop
repz
loop
mov
and
jbe
adc
and
sbb
repz
les
int3
cwtl
popa
inc
shlb
pop
icebp
movhps
mov
adc
pop
pushf
mov
lret
sbb
dec
int
xor
rorb
push
sub
or
sub
lock
shlb
xor
mov
cmp
xchg
jg
lods
mov
push
out
les
sbb
push
fwait
cld
ret
jb
xchg
movsl
add
mov
sbbb
pop
outsl
or
test
mov
jbe
out
icebp
inc
lods
sarb
xchg
xchg
mov
int
gs
movl
test
dec
sub
pusha
dec
jge
js
xlat
dec
pop
mov
sbb
aad
fsubrs
out
popf
mov
lea
jge
fidivrl
in
and
inc
pop
sub
xor
lock
pop
inc
add
es
in
out
dec
stos
mov
xor
punpcklwd
lret
pop
std
imul
scas
movsl
jle
mov
or
inc
repz
xor
or
xchg
and
ss
cs
mov
in
test
mov
movsb
jo
ret
in
mov
add
xorb
add
stc
aad
adcb
std
sti
mov
sbb
fmuls
xlat
mov
pusha
push
mov
je
jne
inc
fdivrl
mov
add
gs
jne
pop
in
or
adc
sbb
or
mov
mov
shrb
pushf
fsubs
stc
clc
cld
mov
imul
jmp
mov
rcl
lods
mulb
lahf
and
mov
xchg
mov
dec
cmp
adc
rorl
stos
outsl
and
push
pop
pusha
adc
add
inc
imul
push
rcrb
add
rcrl
not
je
adcl
in
int
jo
neg
es
and
sub
inc
cmp
repnz
popa
ljmp
sbb
sub
sub
fimull
pop
mov
lods
inc
or
or
rorb
int3
outsb
xor
dec
clc
outsb
pop
jle
adc
xchg
adc
inc
xchg
push
xchg
adc
pop
lds
jp
and
bound
xchg
mov
sub
fists
jae
cwtl
cmp
aam
mov
fistps
fs
pop
add
adc
and
idivl
or
push
lahf
notb
mov
aas
or
xchg
andl
mov
das
imul
sub
cli
bound
incb
xchg
cs
cs
pop
dec
mov
inc
mov
aaa
icebp
push
sbbl
stos
dec
mov
loope
aaa
aad
xor
jbe
mov
daa
notl
iret
aad
dec
outsl
xchg
mov
and
stos
dec
adcb
addl
sahf
xor
jo
cld
jo
adc
jns
mov
mov
stc
subb
pop
and
add
sub
sahf
rclb
lcall
or
out
fiaddl
cli
ret
xchg
sub
mov
push
pop
imul
test
faddl
fucomp
scas
adcl
xchg
jnp
jp,pt
jo
ljmp
sub
aas
jbe
cmp
mov
loope
bnd
push
daa
lock
iret
insb
hlt
fidivl
ss
cmp
mov
je
jns
push
inc
aas
scas
jno
xchg
gs
and
xor
nop
pop
gs
clc
adc
lahf
test
out
mov
pusha
xor
out
sbb
call
popf
nop
dec
jmp
cwtl
adc
cli
cmp
dec
mov
ljmp
in
pop
test
scas
ret
mov
inc
test
xchg
dec
lret
dec
imul
aaa
in
daa
sbb
arpl
mov
and
ret
xlat
mov
dec
shrl
sub
aad
ret
ss
icebp
mov
cli
or
mov
jns
dec
sbbb
inc
pop
adc
push
inc
imul
mov
mov
jnp
shrb
sbb
add
sbbl
sbb
push
push
lds
mov
jle
mov
cli
pop
push
ljmp
sub
pop
mov
pop
rcrl
sub
mov
data16
mov
popa
push
dec
mov
inc
loope,pt
int
push
xor
inc
inc
gs
sbb
add
push
xchg
sub
dec
xor
or
gs
jg
mov
jne
dec
push
lret
inc
andl
je
arpl
mov
jbe
xchg
jg
lock
pusha
jo
push
fldt
insb
test
jnp
cmp
push
mov
jo
or
les
je
push
stos
loopne
push
outsl
jp
push
push
jl
xchg
lret
push
adc
xchg
out
out
inc
out
or
arpl
aam
cmpsb
cli
dec
imul
repz
insl
lock
arpl
sahf
fisubrl
pop
jbe
sub
test
add
dec
xchg
outsl
loop
jo
jne
loop
dec
mov
js
jecxz
ja
cmp
ds
pop
les
lret
outsb
fnstenv
sti
xlat
test
mov
or
iret
mov
xor
cmpsb
insb
cmc
adc
or
xchg
pushf
and
cmpsb
fistpl
mov
imul
adc
sbbl
enter
xchg
xlat
jbe
std
jl
test
outsl
add
rorl
imul
call
stos
inc
int3
std
movsl
sti
and
push
cmp
loope
lcall
cmpl
cmp
adc
aad
xor
adc
xor
mov
stos
iret
add
pop
add
fwait
das
pop
dec
ret
repz
inc
xor
sahf
jb
neg
add
fmull
sbb
xchg
lahf
lds
cwtl
ja
mov
xchg
popa
pop
cltd
sarl
or
mov
dec
mov
mov
and
push
add
int3
jge
iret
shlb
ret
pop
adc
pusha
cwtl
cmc
loopne
std
mov
lcall
pop
adc
or
sbb
lret
fldt
lock
and
mov
mov
jae
out
nop
jge
aas
and
inc
cltd
mov
aam
enter
insl
mov
hlt
test
push
out
xchg
xchg
mov
jmp
pop
mov
data16
inc
mov
xchg
mov
push
mov
lds
xchg
dec
bswap
and
adc
inc
add
cmpsl
lea
inc
and
pop
cld
mov
xlat
push
inc
clc
nop
out
orl
dec
push
mov
add
push
cld
xchg
dec
popa
xchg
outsb
mov
fs
push
pushf
sub
sbb
dec
roll
sbb
push
dec
adc
pop
cmp
dec
and
loopne
lds
out
loop
adc
inc
cmp
cmp
ret
mov
test
sbb
sub
sarb
xor
loopne
ss
cwtl
fbstp
lods
sbb
jb
ljmp
mov
aam
inc
add
and
lahf
iret
sbb
mov
push
or
or
mov
pop
arpl
shlb
in
jmp
mull
xchg
bound
rep
xor
adcl
scas
xchg
movsb
mov
or
pushf
xchg
popa
mulb
fidivrs
cmpsl
sbb
stos
adc
clc
inc
aad
mov
lret
mov
jmp
ja
call
mov
sbb
and
mov
mov
test
xchg
call
ja
push
dec
loope
inc
imul
dec
or
push
add
pusha
adc
and
or
lea
popa
and
dec
inc
shll
fistps
js
dec
mov
cwtl
mov
arpl
insb
stos
iret
add
iret
movsl
inc
repz
out
popf
test
xchg
pop
out
mov
cli
nop
mov
outsb
movl
jo
dec
aam
sub
and
ja
push
mov
jae
es
and
xchg
or
or
xor
stos
jg
xor
sbb
xchg
mov
cmp
addr16
cld
sub
inc
and
js
pop
shll
scas
lret
test
es
add
pop
out
inc
mov
out
xor
js
bound
outsb
test
fsts
inc
ret
fbld
push
inc
xchg
pop
repz
cld
aas
sub
sbb
outsb
jae
aaa
xchg
add
roll
into
movnti
sbb
fimull
sbbl
sbb
outsl
mov
test
cwtl
fdivrl
ljmp
jmp
push
jmp
jg
mov
mov
inc
cs
inc
xchg
add
xor
xor
or
sub
rcrl
icebp
fistl
cmp
fists
xchg
outsb
jo
inc
mov
sbb
jmp
add
andl
mov
sarl
sub
push
pop
inc
push
inc
sahf
push
pop
push
add
rol
jno
aas
xor
push
lds
jl
popa
nop
cmpl
or
mov
decb
xchg
in
jnp
addl
iret
jo
aaa
and
jecxz
and
pop
pop
clc
push
push
or
bound
push
dec
pop
or
loopne
jl
insl
cmp
xchg
pop
nop
cltd
push
sub
mov
pop
xor
loop
dec
sarl
dec
inc
sbb
mov
cli
mov
pop
mov
aas
push
test
icebp
xchg
mov
jae
mov
jmp
cs
divb
sbb
sub
jns
xor
or
and
orl
pop
mov
and
or
inc
cmpb
out
cmp
aas
lods
div
imul
add
pop
inc
dec
adcl
adc
nop
popf
int
and
and
js
aad
stc
cmpsb
into
mov
pop
dec
mov
sbb
jo
jbe
lcall
jmp
aam
add
fidivrl
push
into
xchg
adc
add
xor
jo
push
inc
enter
mov
rcr
cmp
xchg
cmpsb
pop
mov
mov
leave
add
mov
divb
stos
call
jno
es
lea
out
pop
push
cmp
adc
mov
add
cmc
jmp
pop
sbb
stos
pop
fcompl
ljmp
mov
push
iret
push
fsubs
rolb
les
lods
push
cmp
data16
mov
add
jne
shrl
jae
lods
in
repz
push
loop
lods
xor
test
xchg
enter
sub
lds
and
xchg
movb
xchg
je
sti
fistl
icebp
dec
or
jp
xchg
outsl
jmp
iret
mov
mov
push
lret
jb
cld
mov
lahf
xor
lret
jnp
mov
jbe
dec
jmp
jle
lock
pop
mov
das
push
sub
scas
cmp
shl
add
push
scas
mov
test
sti
ja
dec
lea
mov
sbb
mov
mov
add
mov
cmp
xchg
dec
adcb
sub
adc
xchg
add
je
add
and
xor
push
cmp
stos
sbb
pusha
mov
dec
xlat
dec
in
sbb
movsl
movsb
mov
hlt
and
sbb
pop
push
test
xor
popa
arpl
add
stc
mov
xchg
sbb
mov
push
scas
in
inc
aas
adc
clc
jecxz
rolb
out
lcall
jb
adc
iret
cmp
jbe
and
iret
dec
ljmp
mov
clc
test
xor
cmp
rolb
mov
jg
sahf
and
test
xor
dec
or
xor
and
or
push
std
es
sbb
insb
mov
sbb
pop
xor
add
or
xchg
jecxz
push
fistl
jno
test
add
mov
mov
dec
push
pop
lock
add
aaa
dec
data16
or
inc
and
push
lret
jl
int
cmp
mov
ja
and
fs
jae
in
ljmp
push
movsb
mov
jge
adc
sar
fidivrl
ss
adc
lods
fwait
cli
pusha
test
cmp
jno
pop
fcompl
fldenv
in
inc
mov
mov
popf
jnp
aaa
cs
movl
in
cmp
iret
es
jnp
jne
test
and
adc
mov
nop
pop
loop
fcompl
hlt
lock
dec
jle
sbbl
leave
stos
fwait
dec
cmp
mov
imul
test
push
and
ret
jno
lds
sbb
xor
jmp
or
pusha
lods
movsb
and
shl
xlat
aad
mov
enter
dec
fwait
and
decb
or
andw
inc
pop
imul
sti
movsb
dec
xor
add
dec
push
lret
stc
sub
dec
xor
pop
jecxz
cmp
xor
mov
iret
push
inc
lods
popa
bnd
pop
cld
cs
push
jmp
dec
aam
roll
jnp
push
imul
xor
call
jecxz
push
cmc
scas
xchg
lcall
fnclex
pushf
test
fwait
data16
das
xchg
dec
inc
test
mov
gs
sbb
lret
sti
mov
mov
sbb
fbstp
std
repz
and
lods
adc
add
and
pushw
jmp
mov
xor
mov
mov
movsl
dec
sbb
dec
mov
iret
and
sahf
outsb
mov
push
cltd
jns
mov
lods
popa
loope
mov
pop
je
outsb
sub
or
mov
jmp
jae
rcll
and
jge
add
aaa
push
jle
inc
mov
lcall
mov
sub
adc
aad
sbb
adc
aas
js
aam
pop
sarb
mov
xchg
in
dec
sbb
push
test
xor
out
outsb
movsb
jnp
aad
lret
cmp
loopne
lret
inc
mov
or
loopne
lea
stos
les
jb
sbb
push
out
test
inc
add
pop
mov
movsb
mov
testl
sbb
mov
mov
stos
xchg
je
daa
mov
jo
adc
fiadds
cmp
je
jo
jmp
imul
and
daa
lret
sahf
inc
xchg
inc
inc
mull
pop
shll
jl
xchg
hlt
jnp
jle
jnp
push
or
push
dec
sbb
inc
jbe
jmp
sub
push
arpl
cs
sbb
fucom
pop
cmp
add
iret
xor
sbb
ret
jne
test
xchg
dec
leave
mov
mov
cmp
mov
jg
ss
dec
jmp
pop
inc
inc
sub
arpl
mov
nop
add
out
mov
fistpl
ret
fsub
adc
cld
jae
testb
into
stc
pushf
jmp
mov
cmp
xchg
int
ret
adc
jbe
popl
mov
mov
out
mov
pop
sub
or
mov
std
mov
fisubrl
push
test
addl
stos
sbb
xchg
in
nop
popa
ss
iret
in
xor
pop
insl
mov
jae
std
mov
and
imul
pusha
leave
pop
les
add
cmp
cmc
sahf
lea
ljmp
mov
jae
mov
bound
cmp
jo
cmpsb
outsl
popf
das
mov
push
or
aas
mov
cmc
outsb
xchg
push
int
popa
mov
xor
pop
and
daa
xlat
push
test
js
mov
adc
out
xchg
sbb
sbb
rcrl
or
inc
cmp
je
int
adc
cli
loopne
pop
hlt
gs
add
adc
and
jmp
push
xor
mov
inc
mov
mov
jp
js
pop
cltd
jno
xchg
mov
hlt
mov
push
pop
popa
xchg
pop
daa
push
shrb
adc
cwtl
pop
lret
aam
push
inc
or
shlb
pop
mov
leave
sarl
pop
sub
mov
or
les
adc
add
out
pushf
addr16
sbb
push
or
and
xor
pop
pushl
loop
mov
sub
sbb
inc
repz
shl
movsb
cwtl
out
inc
stos
into
jg
push
in
mov
xchg
aam
mov
jmp
adc
xchg
or
inc
stc
and
mov
jne
push
xor
mov
pop
adc
push
xor
dec
push
push
je
aaa
out
mov
inc
cmp
push
cmpsl
push
jle
stos
pop
std
aaa
shl
mov
loope
fisttps
loop
pop
sbb
andl
pop
jmp
jp
std
fildll
mov
int3
lcall
cmp
int3
xor
cmp
adc
push
inc
mov
xchg
aas
mov
fistpll
cmc
outsl
ljmp
add
dec
test
sahf
sub
mov
xchg
pop
fnsave
sbb
push
fisubl
adcl
in
jl
out
push
fnsave
cmp
cmpsl
dec
mov
cld
sbb
fwait
lret
mov
hlt
loope
in
insl
call
add
movsb
loopne
inc
mov
outsl
out
jae
lahf
mov
xchg
jno
ljmp
ja
xor
or
notl
popa
mov
mov
mov
mov
push
nop
xchg
iret
lcall
jnp
clc
inc
mov
sub
pop
imul
mov
cmp
mov
mov
ret
gs
adc
xchg
loop
jnp
iret
pushf
jo
jl
mov
pop
in
lahf
scas
sbb
repz
mov
jle
add
lods
ret
test
push
xchg
dec
cwtl
cmp
lret
cld
mov
adc
add
pop
mov
leave
mov
loope
rcrl
lahf
mov
hlt
lret
mov
ret
mov
jae
and
jle
mov
push
rcrl
xchg
fs
cltd
in
pop
mulb
sbb
pop
lods
aad
sbb
dec
mov
mov
dec
sbb
stc
repz
seta
and
push
push
int3
xlat
mov
test
mov
ss
or
inc
xchg
cltd
ljmp
mov
ss
and
push
jp
sbb
nop
xchg
dec
cmp
popa
lds
jns
lret
mov
bound
imul
jmp
jecxz
in
and
push
inc
mov
xchg
xor
pop
push
jns
jle
in
xor
ret
fs
cmpl
dec
cli
adc
int3
inc
mov
cmp
popf
sub
sbb
push
pop
jle
cmp
out
mov
jb
pop
sahf
fnstenv
shl
cli
and
adcb
xchg
sti
icebp
dec
pop
int
into
cwtl
insl
lea
jg
push
pop
repz
xchg
push
dec
sbb
sbb
sbb
dec
addr16
jp
xor
xchg
sahf
cwtl
ljmp
push
stc
mov
pop
lcall
dec
mov
sbb
bound
inc
mov
xchg
js
cmp
mov
imul
ret
ja
mov
or
in
mov
loop
out
in
or
dec
sub
repnz
or
mov
int3
add
mov
ss
sub
cld
pop
xor
dec
add
add
mov
mov
ror
xchg
mov
sbb
nop
jae
sbb
xlat
and
or
fwait
and
lds
ljmp
insl
jl
cmp
jne
mov
lock
or
dec
es
pushf
add
mov
add
stos
arpl
mov
aas
dec
rcrb
inc
es
fmuls
movsl
test
shl
roll
pop
cmp
lret
jecxz
mov
outsl
push
xchg
push
or
stc
loop
lret
orl
fnstenv
or
jg
sbb
mov
jno
pushf
dec
jo
pop
sar
pop
and
mov
insl
icebp
movsl
push
test
cmp
xor
fldenv
in
addr16
and
mov
clc
sub
adc
and
adc
sbb
sub
push
mov
das
jnp
in
inc
test
xchg
int3
xchg
inc
lds
inc
into
mov
jno
dec
fstpl
inc
mov
xchg
lods
xchg
xchg
cmpsl
pop
mov
adc
sub
jno
inc
dec
add
fsubl
imul
out
adc
inc
ja
mov
popa
in
jo
xchg
or
or
rcll
idivb
rol
mov
fsubs
jno
push
mov
pop
les
push
ja
mov
or
inc
lock
pushf
sti
mov
fstps
mov
mov
aad
push
fiadds
fdivrs
cmp
cmp
js
pop
xor
call
testb
jns
mov
pop
push
loopne
dec
xor
sub
gs
dec
test
cmpsl
mov
sub
xor
rcrl
movsb
or
rclb
dec
stos
in
xor
cld
addr16
xor
pop
mov
xchg
repz
inc
mov
subb
jmp
xchg
hlt
mov
sbbb
mov
test
mov
in
pop
in
and
push
or
stos
sbb
lcall
inc
adc
dec
fs
or
insb
cmp
jg
mov
mov
dec
rcrb
mov
mov
ja
jp
push
pop
or
xor
gs
cmpsl
cmpsb
gs
mov
mov
jns
sbb
jg
mov
xor
mov
test
lret
sti
push
sarb
xor
xchg
sbb
int
ror
scas
adcl
das
jo
jbe
push
std
pop
and
xchg
jl
jecxz
ret
loope
nop
ss
sbb
fs
test
mov
incb
sub
sbb
jg
inc
bound
sub
mov
popf
add
jns
aaa
fwait
cltd
fcoml
inc
and
sbb
xchg
dec
std
add
jnp
add
iret
pop
lods
imul
and
das
sbb
sar
adc
fists
in
mov
mov
mov
ljmp
lgs
stos
out
xchg
popa
xchg
orl
daa
push
adcb
jo
mov
dec
fwait
fwait
adc
push
lods
sbb
les
aam
sub
imull
shrb
cmpsb
shlb
push
push
out
sti
shr
add
xchg
jmp
imul
and
xchg
orps
iret
lret
pushf
pop
and
mov
push
inc
ficoml
cmp
dec
in
cmp
insl
adc
pop
mov
shlb
jo
stos
fwait
ret
cmc
mov
in
clc
mov
ficoms
testb
mov
rcrb
add
jo
sahf
sti
adc
outsb
push
inc
sub
push
mov
mov
or
out
add
mov
cli
sbb
push
fidivrs
jbe
cli
xor
pusha
jge
out
adcl
pushf
or
mov
mov
and
repz
pusha
jle
cmp
shll
adc
rolb
inc
test
mov
stos
mov
cwtl
mov
shr
cmp
inc
lock
addr16
in
fs
out
xorl
mov
dec
mov
sbbl
add
cmc
sbb
or
pop
xor
and
aad
xchg
cmp
mov
dec
sbb
inc
in
cmp
sbb
adc
stos
mov
or
mov
mul
cs
dec
jp
popa
in
out
mov
jmp
inc
cwtl
jmp
xor
jmp
in
bound
clc
pop
jle
cmp
jmp
sbb
aaa
pop
pop
xchg
frstor
sub
addr16
sbb
adc
aaa
fstl
outsl
mov
push
mov
or
lods
imul
mov
in
xor
js
xor
in
mov
in
jne
nop
out
je
mov
repz
and
dec
imul
mov
nop
mov
mov
mov
ljmp
insl
es
fcomps
in
repnz
int
iret
lret
mov
divl
negb
lds
cli
test
filds
inc
jnp
xlat
hlt
dec
inc
imul
and
xchg
shlb
mov
in
int
xchg
int
jns
popf
pushl
mov
adc
insl
hlt
jmp
mov
mov
fiaddl
push
fstp
xchg
pop
mov
cmp
sub
mov
loope
test
mov
dec
in
sub
mov
ret
int
cmpsl
jbe
or
cmp
xor
icebp
rorl
pop
or
push
and
sbb
push
jge
rorl
mov
mov
cmp
arpl
pop
mov
cmp
mov
pop
lods
mov
push
lret
insl
call
pop
frstor
jg
cmp
sub
mov
xchg
mov
and
and
in
nop
push
mov
arpl
imul
xor
xor
cmpsl
ficompl
out
and
push
cmpsl
mov
cmp
push
xchg
sbb
pop
hlt
xchg
mov
ss
insl
dec
push
in
imul
test
roll
jge
mov
iret
mov
cmp
enter
jmp
mov
fistl
out
xor
mov
dec
and
xlat
int3
jecxz
pop
push
test
data16
popl
sub
mov
sub
lock
cmp
push
sahf
push
and
out
adc
mov
inc
push
mov
dec
jo
push
or
in
push
dec
pushf
sub
ss
adc
bound
xchg
xor
lods
pop
sbb
lods
or
test
ljmp
xchg
cmp
idivl
dec
sti
in
push
stc
fwait
push
movsl
mov
les
femms
daa
sbb
push
sub
cltd
or
out
test
leave
xchg
ds
arpl
movsb
and
lds
sub
sbb
mov
adc
insl
arpl
mov
leave
fsubs
push
add
cltd
push
mov
lea
aas
jp,pt
ljmp
push
rclb
dec
mov
push
mov
xchg
or
mov
jbe
inc
popa
test
in
lods
sub
cld
gs
xor
fisubs
les
outsb
push
or
nop
mov
addl
loopne
pop
dec
xchg
scas
push
addr16
push
adc
int3
ret
push
notl
ds
sub
mov
dec
mov
dec
add
and
add
mov
cmp
ljmp
arpl
mov
mov
idiv
sub
push
arpl
imul
push
or
pop
shrb
xor
adcb
mov
mov
sahf
inc
sarb
push
icebp
mov
lds
leave
ds
cmpsl
adc
popa
sbb
xor
movsb
ja
sbb
in
mov
ss
dec
jbe
jecxz
out
out
mov
orb
push
in
fwait
or
cmp
push
imul
xchg
mov
xor
push
fwait
enter
add
fsubs
cpuid
mov
mov
dec
dec
ja
cld
inc
pushf
js
rclb
lcall
add
addb
or
jge
cmp
das
aad
iret
jno
lcall
movb
cmc
out
dec
or
jge
mov
xor
andb
cmp
sbb
mov
mov
bound
lcall
ja
mov
xor
mov
repnz
ljmp
jle
wrmsr
ss
mov
in
mov
mov
inc
mov
imul
movsl
sahf
mov
cmpb
or
stc
or
jb
adc
arpl
into
dec
cmpl
sbb
mov
mov
outsl
js
cwtl
pop
cld
leave
push
or
jns
in
pop
cmp
fsubrp
xor
sub
hlt
out
pop
sub
enter
adc
fwait
daa
out
push
aam
call
clc
adc
add
sti
iret
cmp
cld
sub
add
adcl
nop
push
lret
xchg
loop
pop
outsb
add
cltd
inc
repz
push
and
loope
sti
and
push
out
popl
or
lods
scas
iret
scas
or
verw
adc
push
mov
call
push
cmpsl
jmp
addr16
mov
add
subb
testl
out
mov
dec
mov
inc
dec
mov
push
fs
sbb
stos
inc
mov
mov
mov
jae
movsb
add
push
mov
inc
inc
dec
iret
pop
mov
into
xchg
aam
adc
in
test
aad
pop
jbe
push
rcr
xor
lahf
imul
mov
push
in
fnstenv
xor
xchg
sbb
sbb
xor
repnz
mov
in
int3
mov
popa
pop
sbb
xor
dec
xchg
jle
andb
es
aaa
jbe
and
lcall
sub
mov
addr16
iret
mov
nop
sub
add
repz
and
std
dec
xchg
sub
aam
fs
test
mov
cwtl
mov
insb
out
mov
imul
add
cmpsl
sub
and
mov
insl
insl
mov
and
cmp
leave
aaa
push
dec
pop
mov
mov
fisubrl
pushf
out
xor
add
add
in
scas
jnp
notl
mov
inc
jecxz
fs
notb
inc
repz
push
test
or
jne
andl
in
pop
out
and
jmp
fs
idivl
mov
addr16
add
arpl
cmpsl
xchg
inc
adc
add
loope
fiadds
sub
cmpsl
lret
add
jmp
sub
pop
mov
arpl
mov
lret
or
mov
mov
push
jo
pop
iret
xlat
xchg
cmp
pop
popa
sbb
fsts
int
ret
or
popa
pop
adc
ss
jno
push
hlt
movl
xchg
cmp
or
in
pop
xchg
fmul
in
jl
xchg
adc
loope
loope
test
in
mov
push
cmp
sub
xchg
mov
lahf
arpl
or
mov
cmpsb
jns
cmp
ret
ret
mov
adc
les
sbb
jno
es
jl
push
sub
cmp
sbb
cs
ds
fcomps
jnp
aas
xor
hlt
loopne
js
mov
add
aas
jl
sbb
jle
pop
das
inc
ficoms
or
jp
add
rcll
cld
imul
mov
repnz
cltd
push
mov
and
xchg
sub
push
cwtl
lock
rcrl
xchg
adc
xor
sub
sbbb
aam
std
cmc
imul
aaa
movsb
aad
xchg
js
cli
xchg
cmp
outsl
fimuls
jge
fsubrl
outsb
or
es
sbbl
addr16
xchg
stc
dec
out
les
ret
cmp
cmp
pop
cmp
sub
sbb
xor
push
int
cmp
aaa
pop
jl
dec
push
xchg
sub
or
test
mov
lea
add
push
add
jne
test
push
jmp
ljmp
cltd
ret
in
pusha
and
loop
mov
dec
push
mov
pushl
mov
aaa
sub
or
xchg
cmp
push
mull
imul
push
xor
inc
insb
or
imul
sbb
addb
sti
loop
stos
icebp
mov
cmp
dec
pop
shrl
insb
fiaddl
ljmp
inc
test
insl
mov
test
test
lock
sbb
xor
mov
test
jle
mov
ficomps
pop
loop
jbe
loop
sbb
sub
imul
mov
cmc
call
mov
es
inc
frstor
out
jae
sbb
stos
popf
dec
adc
jae
out
pushf
ljmp
sbb
sub
arpl
or
shrb
add
dec
nop
sahf
push
xor
mov
rcll
adc
fimuls
aam
mov
mov
lea
pop
push
lods
scas
clc
out
divl
stc
jp
mov
sbb
out
xchg
aas
ss
out
fistpll
inc
or
mov
cmc
pop
cwtl
mov
cmp
leave
push
je
shlb
in
rcll
pop
movsl
hlt
or
xchg
sbbl
iret
xchg
loope
fdivrl
cmpsb
ficompl
mov
xor
das
xor
fcmovu
or
ret
inc
xchg
ss
lahf
jmp
xchg
rorl
aas
dec
jmp
xor
ljmp
sti
add
dec
cld
jle
xor
adc
mov
jae
jae
leave
scas
stos
stc
sbb
push
pushf
or
sbb
lods
pop
mov
dec
pop
add
aas
add
or
das
mov
mov
mov
push
cmp
dec
jge
xor
arpl
je
mov
xchg
mov
sbb
pop
lock
jae
and
mov
pop
mov
ds
int3
jo
inc
stc
sub
jg
imul
lahf
and
jge
add
and
inc
and
pop
pop
mov
xor
inc
jmp
adc
loopne
fwait
cltd
adc
mov
les
testl
cld
push
sbb
insl
and
sbb
repz
addr16
iret
pop
sbb
inc
icebp
pop
out
fwait
inc
push
les
loop
jo
xchg
or
cs
jg
je
or
lods
in
and
aam
jno
insb
scas
mov
shll
sub
xchg
or
push
clc
in
sahf
push
cmpsb
enter
scas
push
push
out
lods
jns
push
das
movsl
negb
inc
push
inc
sub
hlt
sub
in
or
test
xchg
push
jle
out
cmp
add
std
sarl
mov
ja
cmpl
mov
adc
fldcw
scas
jmp
push
xchg
inc
adc
dec
push
and
pop
fcompl
decl
sub
dec
mov
lods
movsl
jnp
cmpsb
gs
insb
mov
fwait
std
sub
repz
cmp
jecxz
inc
cmpsb
adc
ret
repnz
icebp
sbb
mov
pop
fadd
jg
push
and
dec
dec
bound
inc
out
mov
into
jp
mov
nop
cmpsl
sub
inc
test
aam
sub
outsl
movsb
movsl
mov
ja
nop
in
adc
mov
ja
out
or
add
das
dec
pop
push
xchg
loope
std
sarl
ret
imul
hlt
adc
push
pushf
outsl
sub
lret
loopne
int
mov
dec
xchg
mov
syscall
rcrl
xchg
fstl
fs
andl
mov
inc
inc
dec
mov
mov
or
movsl
data16
shll
inc
adc
popf
addr16
inc
cli
push
ljmp
pop
push
sub
jb
push
and
dec
dec
clc
pushf
pop
sub
dec
cmp
mov
aas
repz
or
push
icebp
jg
xchg
movsb
jecxz
add
es
cld
push
dec
jge
add
add
repnz
xchg
int
jae
sbb
push
inc
scas
add
ljmp
mov
cmpb
sub
neg
shl
data16
add
xor
scas
imull
cs
xchg
push
mov
imul
add
into
cmp
nop
clc
test
dec
repnz
sub
sarl
aam
ret
xchg
adcb
test
and
lahf
push
xor
out
xchg
ds
mov
data16
fucom
inc
pop
movsl
push
lock
jecxz
pop
push
int3
ficompl
leave
mov
mov
jb
jo
push
cmp
add
lods
or
mov
andb
hlt
mov
lret
dec
fildll
sub
jbe
lcall
cmpsb
inc
dec
popf
sbb
lahf
adc
jge
push
dec
and
cmp
jno
xor
movsl
imul
out
mov
out
es
jbe
shll
pop
daa
sarl
icebp
arpl
aam
jo
mov
inc
jb
fidivs
sub
ds
push
stos
rolb
inc
dec
xchg
add
sbb
sarl
movsl
inc
jne
popf
adc
sbb
popa
adc
jb
rorl
mov
iret
fwait
rol
mov
add
mov
pop
xchg
push
addl
aad
out
or
sbb
js
shll
mov
mov
jg
xor
jge
sbb
cmp
mov
jge
jecxz
xorl
jo
mov
pop
cld
fcom
stc
gs
data16
hlt
jbe
dec
mov
xchg
aas
jl
inc
inc
push
xor
push
call
cmp
test
subb
sub
sub
inc
ja
rclb
push
add
cmp
rcr
xchg
or
enter
ds
scas
mov
popf
pop
add
push
testb
dec
fs
ret
pop
repz
lcall
inc
mov
lods
lret
pop
or
sbbl
cmp
in
push
lea
leave
cmp
shll
daa
mov
gs
push
mov
fwait
cmp
orl
mov
cmp
adc
and
mov
push
jecxz
stos
inc
xor
or
fdivrl
hlt
ss
cmpsl
sub
pop
mov
fisubrs
inc
roll
int
or
cltd
test
push
push
jg
fimull
rorl
popf
aad
add
sbb
imul
ret
sbb
in
xchg
rclb
cmp
adc
add
pop
mov
mov
sarl
push
ds
add
pop
sti
outsb
rolb
les
inc
sbb
fcoml
add
mov
xchg
and
jo
pop
std
int3
or
jp
adc
xchg
mov
mov
outsb
call
sub
mov
orb
decl
mov
repnz
lret
xchg
mov
clc
js
divb
xchg
ret
xchg
es
mov
jo
ret
push
ljmp
adc
out
shlb
cmp
cmc
lcall
outsb
leave
inc
or
xchg
jle
fistl
xchg
test
mov
cmc
cmp
jns
jnp
push
inc
ds
imul
inc
jge
cmp
add
mov
sbb
inc
and
mov
ret
arpl
mov
sub
push
pusha
mov
adc
jne
jae
push
and
dec
mov
sub
inc
sub
loopne
mov
pop
mov
pusha
inc
loope
sbb
cmp
xor
ret
cltd
pop
mov
xor
mov
repz
lods
cli
imul
rolb
adc
arpl
repnz
outsl
xchg
test
adc
in
icebp
sbb
jmp
out
cwtl
and
jb
cmp
lahf
mov
xlat
ret
mov
sub
jle
inc
jl
push
rcrb
int
xchg
std
cli
test
in
push
lcall
push
dec
lods
inc
pop
dec
aad
addr16
cmpsb
in
inc
les
jne
xor
adc
ret
add
sbb
add
pop
das
repz
cmpsb
inc
inc
xchg
jo
mov
lret
je
ljmp
sbbl
and
aaa
movsl
insl
stos
xchg
maskmovq
idivl
adc
fimuls
xchg
xchg
or
ds
fnstenv
addb
js
sub
mulb
movsb
imul
sub
xchg
les
pop
je
fsubl
push
fldt
adc
mov
inc
aad
push
fs
pusha
stc
mov
or
sub
sub
xlat
sbb
sbbl
popa
pop
bound
xchg
dec
in
fcompl
xlat
add
popf
push
orb
fidivrl
add
and
les
jae
icebp
dec
test
mov
or
mov
jl
sub
ljmp
sbb
ja
call
mov
sub
outsl
je
mov
and
inc
icebp
or
add
inc
or
jmp
xchg
push
insb
icebp
inc
shrl
mov
mov
dec
xchg
hlt
xor
dec
and
adc
mov
insl
push
sbb
lods
sti
pop
push
jg
pusha
jb
mov
xchg
jmp
loop
sbb
xchg
or
mov
fidivrs
cld
sub
mov
or
jmp
pop
mov
and
test
adc
cmp
jno
jmp
iret
test
shrb
inc
or
xor
outsl
pop
or
ljmp
call
aam
shrl
cmpsl
rclb
adc
imul
test
xchg
shr
or
xlat
insb
ljmp
fucomp
js
sbb
iret
aam
and
clc
push
in
dec
or
cmp
data16
movsl
jg
sub
mov
inc
mov
int
sbb
nop
dec
push
and
dec
fwait
inc
inc
neg
jb
mov
ss
cmp
div
test
and
daa
cmp
movsb
cmp
loop
cmp
push
jecxz
sub
push
fmul
push
cmp
test
nop
popa
stos
push
and
xlat
call
cmpsl
cmpb
shrl
es
dec
inc
popf
icebp
dec
mov
or
out
lret
rcll
or
movsl
xchg
in
dec
or
mov
bound
push
jns
negb
shll
stos
enter
into
fstpl
imul
push
test
dec
imul
lret
pop
or
xchg
daa
xor
jnp
sbb
xchg
hlt
jg
xchg
xor
mov
les
pusha
xor
push
push
mov
mov
ret
mov
imul
adc
ss
je
stos
xor
in
es
ret
lods
dec
adc
sahf
insb
inc
les
jo
push
or
xor
or
cwtl
insb
jmp
hlt
or
stos
or
push
aad
and
jl
dec
les
inc
xchg
push
loope
movb
test
in
dec
jmp
ss
mov
fsts
test
lods
and
ds
stc
idivb
jno
sub
ret
mov
std
or
nop
sahf
and
xor
leave
in
movsl
mov
jne
and
push
repnz
adc
jnp
jbe
and
cmp
std
cmp
out
scas
or
out
sub
rcll
mov
pop
sbb
mov
mov
test
imul
aaa
sub
mov
mov
out
shl
sub
dec
sahf
mov
aaa
movsl
or
mov
and
pop
sub
rol
mov
xor
nop
mov
or
iret
fstl
fisubrs
fisttps
mov
push
adc
cmpsb
shlb
aad
lret
cmpsb
outsb
rclb
cld
int
push
shrl
leave
loopne
dec
jo
mov
sub
rcr
mov
sbb
cmovl
mov
push
out
mov
in
lods
or
loopne
pop
mov
dec
test
sub
and
xchg
and
sub
lcall
out
pop
aas
push
jb
insb
sub
into
mov
push
cli
je
insb
push
xchg
aas
clc
fcomps
jp
in
sub
push
adc
ret
cmp
add
iret
divl
mov
pop
aam
stc
cmpsl
loopne
out
mov
into
hlt
loop
jecxz
popa
adc
popf
xchg
mov
or
je
sbb
add
sub
xrelease
inc
dec
mov
out
pop
push
in
aas
lods
pop
push
push
push
loope
les
dec
push
sarl
insl
mov
inc
fcmovbe
mov
ret
movsb
jnp
mov
xchg
test
movsb
jae
cli
cld
mov
mov
lods
imul
xchg
shlb
mov
cmp
dec
sub
inc
sub
loop
in
fmul
push
xchg
inc
lock
lret
jns
sub
arpl
jl
les
mov
outsb
mov
and
inc
dec
push
cmp
fdivrs
jns
mov
shr
xor
mov
clc
add
push
pop
inc
jecxz
xchg
es
xor
push
mov
pop
pop
leave
adc
pop
maxps
aas
pop
mov
sub
dec
sbb
push
add
sbb
add
cmp
sbb
cmpb
or
lds
icebp
xor
pop
dec
enter
iret
or
or
or
imul
mov
aas
mov
hlt
lahf
leave
dec
sub
orb
inc
and
subl
out
inc
fiaddl
leave
xchg
push
call
rorl
fstps
ret
inc
adc
jge
aas
cli
push
rcl
cmp
ret
sbb
cld
jae
repz
es
ja
cs
and
pop
pop
jp
cwtl
push
jecxz
icebp
adc
into
pop
sbb
dec
cld
xlat
sahf
sbb
insl
fildll
add
xor
ljmp
push
flds
pop
xor
fstps
sbb
jmp
inc
inc
repz
jmp
xor
add
inc
gs
mov
rorl
lret
sub
dec
jno
jl
push
and
push
ror
ljmp
mov
mov
fwait
int
fwait
jle
inc
outsl
xor
loope
pushf
jbe
mov
mov
and
cwtl
xchg
mov
into
sahf
push
bound
xchg
int
mov
lods
call
movd
mov
fimull
inc
bound
in
lcall
dec
lea
sahf
shrb
or
mov
popa
inc
mov
or
repnz
jae
jl
cld
cmpsl
lods
aaa
jnp
lds
rolb
leave
mov
aas
mov
jecxz
ret
lea
inc
mov
pusha
jge
inc
jnp
pop
hlt
xchg
pusha
lea
cmpsb
int3
mov
and
ffree
idivl
cmpsb
and
jecxz
in
sbb
ret
pop
cli
adcl
xor
sbb
cmp
nopl
cs
pop
sbb
mov
xor
ret
lret
int
movsl
push
nop
mov
dec
dec
xor
ljmp
lcall
xchg
xor
push
lret
arpl
dec
adc
ficoml
dec
popf
std
in
imul
pop
xadd
dec
xor
fistpll
mov
mov
jno
mov
aas
jb
lock
xor
push
xchg
add
iret
fs
je
fsubrp
mov
movsb
mov
jb
loop
mov
repz
ja
stos
mov
gs
inc
das
mov
or
or
das
push
mov
inc
cld
stc
test
hlt
xor
out
dec
cmp
mov
inc
outsb
add
sbb
shlb
jo
dec
mov
xor
dec
pop
repnz
pop
mov
inc
or
jnp
mov
cmp
mov
sbb
mov
cmp
fidivl
call
adc
cmc
aam
inc
aad
mov
mov
add
pop
ret
add
out
pop
push
cmpsl
mov
add
fwait
mov
inc
cmp
inc
nop
jge
xchg
out
stc
in
stos
test
mov
arpl
movsb
lods
popa
ljmp
xor
insl
sbb
pusha
repz
hlt
push
add
jns
fnstenv
stos
sbb
sbb
outsb
sbb
sahf
push
in
jbe
es
add
push
fwait
stc
pusha
lcall
sbb
out
popf
je
lds
js
sbb
js
push
or
adc
fwait
mov
push
jmp
mov
push
and
inc
mov
mov
sbb
arpl
js
dec
aaa
sahf
ljmp
aaa
out
icebp
add
mov
repz
dec
subb
jbe
pop
sahf
and
test
fistl
adc
dec
mov
add
cmp
or
xor
and
frndint
mov
xchg
mov
bound
adc
mov
sbb
push
jge
fnsave
std
jae
cmp
adc
sub
insl
fwait
push
and
out
mov
xchg
xorb
xchg
sbb
in
dec
mov
jnp
pop
mov
fwait
mov
mov
add
das
add
xchg
fs
pop
rcll
jno
and
les
jbe
es
adc
das
push
cmp
dec
subl
cmp
push
add
dec
imul
mov
jl
dec
and
pop
inc
add
push
jno
jnp
je
aam
pop
pop
sarl
popa
lods
hlt
mov
imull
cmpsl
mov
inc
cmpsl
cmc
movsb
dec
loop
ret
xchg
inc
mov
jle
mov
jns
lret
imul
jge
adcb
nop
das
push
gs
lods
rcrb
push
and
cmc
add
mov
cmp
inc
push
cld
add
dec
insb
out
pushf
es
cmp
mov
xor
iret
insb
lock
orl
cld
gs
cmp
fcoms
rclb
dec
jecxz
or
sahf
scas
cmc
mov
cld
xchg
xchg
push
out
mov
mov
ret
hlt
into
pop
js
aas
imul
pop
nop
mov
shrb
cli
adc
pop
lret
in
fsubp
xor
aam
pop
imull
add
and
inc
jmp
mov
pop
pop
fidivs
std
paddsb
cltd
cltd
pop
jge
pop
xor
jns
jae
pop
icebp
inc
int3
mov
lds
sub
into
sbb
mov
push
cmpsl
push
aas
scas
mov
push
negl
cmp
dec
shr
pop
aas
dec
cmp
lea
cmp
adc
lds
sub
cmp
scas
mov
mov
iret
mov
iret
ret
aas
ljmp
out
rol
mov
sub
mov
dec
incb
sbb
adc
sbb
int3
std
and
mov
lock
data16
sub
repnz
out
lods
sti
xchg
lds
hlt
cmp
mov
jbe
es
lods
xor
or
mov
es
mov
scas
xchg
bound
sbb
sbb
xor
repz
imul
in
cmpsl
js
dec
inc
jl
pop
sbb
jo
xchg
sbbb
popf
add
and
mov
ljmp
push
mulb
pop
push
inc
stos
push
and
mov
mov
cmc
pop
ret
aam
test
ds
mov
hlt
lods
xchg
aad
jmp
fmull
adc
sbb
add
pcmpeqb
imull
push
xchg
lahf
jmp
lret
cmp
popf
mov
insl
repnz
xor
jns
mov
push
pushf
and
popa
push
ljmp
dec
popa
sub
xchg
movsl
mov
lock
imull
mov
push
and
popa
roll
xchg
cmpsl
sbb
xchg
subl
mov
mov
jnp
adc
out
out
stos
dec
mov
scas
popf
aaa
lcall
repz
sbb
in
jge
lahf
jb
stos
jb
fidivl
test
push
sahf
out
sbb
xchg
ljmp
xor
into
inc
jg
xchg
movsb
pop
inc
hlt
hlt
call
push
cwtl
out
mov
xchg
adc
leave
mov
pop
shll
stos
imul
fistl
pop
push
popa
inc
repnz
mov
loope
jg
push
add
cs
outsb
add
xchg
aam
jnp
outsl
cmp
xor
andl
dec
scas
jl,pn
lahf
fmuls
pop
adc
sbb
jbe
insb
cs
add
xchg
stc
js
cltd
xchg
push
test
lods
mov
or
daa
mov
pop
sbbl
in
adc
or
pop
and
pop
or
cli
add
sbb
dec
cli
cmpsb
and
imul
call
movsl
in
dec
dec
inc
sahf
mov
xchg
shr
nop
stc
ja
nop
repz
gs
or
gs
pushf
and
hlt
negb
dec
mov
mov
adc
push
movsl
dec
lods
rol
test
jnp
jp
loopne
jmp
aaa
outsb
cmp
cmp
test
les
and
dec
or
repnz
jecxz
dec
adc
fwait
mov
lock
and
dec
sub
cmp
pushf
jmp
push
jno
lods
inc
outsl
aas
add
pop
ss
pop
call
and
sti
sbb
cmp
fs
dec
and
lods
test
seto
xor
pop
jnp
jb
ss
sub
sar
in
icebp
dec
aad
mov
pop
inc
sub
outsl
push
adcl
pop
mov
imul
jo
cmpsb
cwtl
out
jmp
hlt
in
xor
cmp
or
jo
jno
aam
movsb
or
push
daa
add
cmp
lods
fisttpll
add
sbb
and
push
rclb
pop
pop
jae
loop
sahf
add
das
pop
jb
hlt
mov
pop
xlat
mov
xchg
dec
fcoml
scas
jp
enter
jge
test
cmc
adc
mov
inc
mov
scas
dec
cld
scas
add
adc
xor
mov
sub
or
xchg
and
jae
lods
cld
mov
neg
nopl
pop
add
mov
xchg
outsb
sbb
mov
xor
push
loope
call
xchg
pop
add
enter
mov
sbb
dec
add
movsl
inc
or
stc
and
cmp
clc
adc
sub
and
pop
out
push
xchg
cli
sub
jge
fisubl
sub
negl
inc
xor
jne
lock
dec
dec
cmpsl
sahf
and
roll
or
std
dec
leave
and
mov
xchg
jb
adc
jae
movl
ljmp
shll
mov
sbbl
call
imul
add
mov
scas
sti
push
pop
icebp
out
lock
rorl
jp
mov
aad
push
lods
inc
lcall
lods
mov
jne
push
adc
in
inc
mov
shrl
stc
jmp
lahf
pusha
sbb
pop
mov
pusha
in
cld
xchg
daa
mov
loop
mov
in
dec
cmpsb
xchg
cwtl
in
icebp
cmp
dec
out
in
leave
enter
push
movsl
mov
mov
jmp
pop
sahf
or
add
rol
jnp
inc
movsl
into
pop
sbb
fadds
sar
into
jno
stos
xor
jecxz
add
and
icebp
lea
dec
add
add
loopne
inc
fsubrl
fstpt
sbb
jns
out
mov
and
mov
loopne
jo
hlt
ror
cmpsb
inc
popl
dec
mov
gs
mov
jecxz
int3
lret
push
test
push
xor
rorb
jmp
push
lods
jecxz
mov
popa
fiaddl
fwait
sahf
cmp
sbb
push
popf
mov
insb
xchg
mov
stos
and
in
negb
fwait
js
cmp
mov
fcomps
idivb
shrb
out
ds
mov
pusha
stos
repnz
jne
aas
aas
push
outsb
loop
pop
testb
mov
push
or
xchg
cmovge
dec
fstp
inc
stc
inc
inc
xor
ds
out
or
loopne
popw
and
or
out
push
into
cld
mov
pop
std
rcll
ret
jle
xor
fyl2x
in
jnp
not
and
sub
lret
lret
sarb
xor
das
mov
mov
mov
btc
aam
mov
add
dec
addr16
adc
pop
rol
enter
inc
dec
pop
clc
arpl
sub
ds
and
adc
insb
adc
arpl
mov
idivl
lock
andl
mov
imul
push
pop
fisttpll
adc
scas
push
sbb
lret
scas
inc
sbb
xor
or
call
inc
push
dec
jne
xor
and
ds
cmp
gs
push
test
and
aad
pop
mov
stos
xchg
ficomps
push
xor
adc
nop
mov
xchg
pop
mov
cmp
icebp
adc
xlat
cmp
lret
push
xchg
js
or
cmp
and
jl
aad
pushl
and
js
out
sub
mov
xchg
adc
mov
dec
or
sub
inc
imul
push
dec
xchg
les
lret
scas
cmp
sbb
in
inc
sub
add
mov
lea
lock
lcall
or
out
xor
pop
sbb
xchg
cmp
or
ss
dec
cmp
repz
jb
add
xor
aaa
bnd
lahf
out
out
cmp
xchg
int
cltd
inc
lods
inc
dec
or
div
test
push
stc
punpckhdq
movsb
in
movsb
hlt
or
mov
adc
sub
test
jns
mov
jmp
js
pop
push
lods
xchg
xchg
jge
inc
pop
and
mov
sbb
dec
jno
cmp
jmp
cltd
inc
jmp
mov
xchg
adc
add
sub
mov
add
dec
cmc
push
jno
shr
jno
xchg
int
pop
lods
addr16
and
jl
add
push
inc
mov
cmp
popf
mov
inc
jno
dec
or
sahf
mov
ret
push
repnz
pop
sub
sbb
and
push
ret
ljmp
xor
add
xchg
xchg
ret
xchg
shr
xchg
jg,pn
idivl
loope
shrb
xchg
lock
movsb
negl
push
lret
sbb
mov
icebp
int
add
sbb
xchg
xor
mov
lods
adc
outsb
or
and
ss
and
imul
sarl
enter
stos
mov
out
addr16
adc
loopne
nop
pop
out
cmp
hlt
enter
imul
xchg
hlt
dec
ds
ficompl
pop
mov
lods
xchg
roll
int3
aas
sar
int3
enter
daa
int3
shll
mov
mov
cmpsl
test
in
and
push
hlt
std
mov
sub
inc
aas
pop
sbb
cmpsb
int
jp
mov
fstl
or
cmp
leave
call
jae
push
and
mov
or
fldt
mov
push
in
lret
rcrb
sub
inc
int3
shll
and
inc
mov
xlat
cmp
fs
fs
int
popf
add
jle
test
mov
adc
testb
pop
ja
mov
cmp
jne
inc
mov
or
es
js
lds
mov
push
test
repnz
lcall
xor
inc
loopne
int
hlt
std
jle
inc
aas
sahf
adc
lods
lcall
jo
movsl
inc
lahf
pop
popa
adc
in
inc
add
je
mov
les
add
mov
and
fadds
in
test
mov
pop
mov
fistpl
add
cmp
dec
xor
pop
gs
xor
xchg
dec
mov
mov
mov
dec
dec
loopne
test
cmpb
sahf
and
cmp
out
insb
mov
push
cld
mov
popa
out
push
jo
pop
mov
xor
nop
sub
xor
test
jp
scas
rol
sub
adc
fs
xchg
push
cmpsl
xchg
and
out
push
popa
cmp
add
pop
push
cmp
ja
inc
pop
sub
nop
in
cmp
sahf
dec
out
jle
fdivrs
pop
icebp
push
add
push
push
push
je
inc
cmp
mov
loop
jp
test
or
cwtl
sbb
mov
hlt
jmp
mov
jmp
fiadds
movsl
out
int3
inc
sub
or
ror
dec
subb
call
and
mov
jae
popf
cmc
popf
ss
push
add
xchg
or
sub
popf
mov
add
and
push
dec
jnp
shll
sub
iret
sbb
cmpsl
inc
call
sbb
jge
push
cmp
jp
shll
xchg
inc
sbb
jo
add
and
and
jns
mov
scas
loopne
adc
mov
outsb
hlt
daa
pop
pop
cmpl
jmp
lea
push
sub
push
lea
or
mov
iret
cli
inc
fnsave
ja
addr16
ljmp
xor
pushf
ss
push
pop
shrd
xlat
cmp
pusha
dec
inc
sbbb
mov
lock
fidivrs
xor
push
sahf
ret
mov
fwait
mov
in
insl
mov
insl
int3
jae
jecxz
pop
mov
fistps
cmp
aaa
push
mov
std
idiv
sti
dec
mov
sbb
scas
or
ss
push
out
xor
cwtl
stos
mov
inc
push
ja
and
iret
in
es
mov
lock
loop
fs
mov
aam
add
or
jae
cmp
aaa
outsb
and
lret
outsb
push
jmp
fistpll
mov
cs
adc
mov
mov
pop
xchg
sbb
shll
out
in
popf
dec
xchg
xor
orl
int
cmpsb
rcrl
stos
inc
aam
push
mov
lods
aaa
das
mov
sub
mov
sti
movsl
sti
call
dec
lcall
fstps
test
xchg
jl
mov
popa
mov
push
dec
mov
push
or
dec
data16
test
pusha
daa
xor
fwait
or
sbb
xor
outsb
dec
popa
repz
push
outsb
xchg
pop
inc
pushf
imul
sub
mov
jne
pop
js
or
inc
std
jne
fs
movsl
mov
mov
push
nop
jnp
ja
dec
mov
jmp
sbb
out
mov
push
cmc
xchg
pop
push
mov
js
xor
cld
mov
mov
mov
adc
xorl
subb
inc
addb
push
fisttps
mov
sub
cltd
dec
cmp
jo
push
push
inc
sbb
loope
les
adc
sub
cmpsl
add
ret
xchg
idiv
std
add
sub
out
in
das
in
imul
mov
out
pop
nop
push
ds
fwait
clc
ja
cli
fistps
clc
leave
and
jo
nop
jl
ljmp
xor
ds
mov
mov
push
paddsb
mov
cmp
mov
jne
dec
in
add
and
dec
pop
xchg
cmp
push
pushf
mov
mov
shlb
cmp
or
loop
ja
or
in
iret
out
int
pop
cmp
or
aaa
sub
xor
lods
or
pop
push
cmpsl
lods
sub
cmp
pushf
xor
je
xchg
das
xchg
leave
sbb
adcb
jmp
sbb
pop
cmovge
insl
in
movsl
in
cmp
mov
pop
inc
push
data16
and
popa
adc
cmc
fs
adc
lea
fs
lock
jnp
xor
cltd
add
movsb
fldenv
gs
jg
add
lahf
js
repz
dec
cs
push
inc
xor
xor
xor
jo
int
and
aaa
pop
and
test
in
insl
into
mov
push
mov
out
adc
sbb
faddl
inc
push
xchg
jne
insb
decl
data16
cmp
lea
roll
push
jnp
and
or
mov
or
lcall
sub
inc
inc
inc
adc
orb
insl
das
jg
cmpsb
ss
scas
dec
jbe
xchg
sub
shll
pop
sbb
xchg
xchg
add
clc
mov
pop
ds
rcrl
nop
sbb
cmp
or
in
adc
sub
aam
pop
repz
aad
jb
in
insl
fcomps
push
loope
cmc
arpl
fsts
adc
lock
scas
test
or
pop
sub
cltd
mov
xor
xchg
ret
lds
pop
xlat
ret
ret
adc
imul
movsl
xchg
shll
xchg
jnp
cli
lock
mov
mov
jbe
pop
inc
cmp
xorb
lcall
push
addb
mov
and
stos
mov
cmp
pop
hlt
imul
pushf
cmp
ljmp
dec
test
aas
addb
aad
add
sahf
fnstsw
push
inc
pop
add
inc
leave
sbb
jae
lods
fdivr
out
je
mov
mov
xchg
lret
or
jo
cmpsb
push
fisttps
xor
jns
inc
cmc
icebp
pop
mov
mov
inc
movsb
mov
mov
inc
pop
fwait
gs
sbb
repnz
cmp
jbe
inc
mov
sub
jb
lret
rclb
sub
dec
imul
rorl
setae
cmpsl
and
aaa
popa
jno,pt
xchg
xchg
imul
arpl
repz
sub
leave
in
pop
mov
pop
loope
jb
push
test
lret
sar
xchg
mov
ret
cmp
xchg
push
inc
imul
push
dec
push
inc
aas
add
push
lret
into
mov
ljmp
movsb
lret
aas
dec
xchg
mov
inc
jb
inc
imul
and
ss
mov
xor
fldenv
dec
or
add
shlb
aaa
fisubs
movsb
iret
dec
cmp
or
mov
mov
jo
push
xor
fdivrl
mov
loop
cmc
adc
pop
dec
outsb
lret
cmp
imulb
divb
and
sub
xchg
ljmp
dec
data16
imul
xorl
fstl
fisubrl
fucomip
jecxz
cmpsl
push
addr16
incl
out
mov
jns
movsl
jne
sbb
arpl
aaa
mov
mov
pop
push
xor
inc
lret
xor
inc
pop
cmpsb
cmp
fsubs
xlat
repz
gs
xchg
arpl
mov
dec
inc
mov
std
jecxz
push
sub
sub
aad
xchg
mov
sbb
sbb
or
test
repnz
cs
sbb
in
jle
scas
mov
adc
daa
icebp
and
xchg
les
or
fiadds
loop
nop
xor
es
aas
mov
imul
insb
insl
jg
inc
imul
cmc
xchg
cltd
pop
dec
mov
inc
or
jmp
dec
mov
outsl
fsts
shr
arpl
xor
fisttps
movsl
mov
pop
jp
js
lock
ret
leave
sub
dec
shrl
mov
fisubrs
or
int
stos
cmp
and
xchg
jbe
cmp
adc
call
inc
adc
and
bound
and
fstp
fisttpl
popa
xchg
or
cwtl
and
repnz
push
add
adc
mov
je
mov
enter
stos
dec
aaa
pushl
inc
fyl2x
mov
inc
das
out
iret
push
pop
lods
pop
mov
js
mov
xchg
or
gs
outsl
out
loop
sub
inc
repz
les
fcomps
rcrl
xchg
sti
je
add
in
aad
repz
out
mov
cmp
das
jne
fcomp
aam
push
xlat
inc
jmp
adc
mov
adc
icebp
outsb
or
sbb
inc
dec
dec
sub
push
shlb
rep
jl
ret
push
adc
movsl
lcall
imull
rol
pop
scas
pop
stos
pop
and
ja
xchg
cld
daa
jg
in
cwtl
testl
jns
push
and
cld
loop
sbb
pop
test
mov
cwtl
hlt
lret
test
jge
dec
mov
push
shrb
lret
call
jbe
xorb
mov
inc
ret
pop
dec
xchg
push
and
sbb
jle
or
imul
push
lcall
repz
pop
cmc
cmpsl
mov
sub
add
push
jg
push
stos
push
ret
es
outsb
fwait
mov
mov
push
fsub
ret
mov
rol
shll
popl
lcall
in
enter
aas
out
or
iret
jg
lret
push
push
mov
or
pop
pop
mov
pop
iret
push
or
mov
hlt
jge
out
cmp
aad
inc
push
xor
push
das
int
adc
out
lcall
aam
jge
negl
mov
icebp
js
push
mov
pop
test
inc
loopne,pn
mov
imul
movsl
lock
add
mov
sub
lods
push
adc
jmp
jg
and
adc
in
pop
mov
jl
pop
or
lret
jge
pusha
shrb
jl
shrl
sbb
mov
repz
adc
cmp
adc
cld
out
mov
jbe
movsl
push
flds
or
addr16
icebp
or
out
decl
push
loopne
cmp
mov
adc
roll
repnz
fmulp
mov
jne
pop
in
data16
mov
scas
xchg
aaa
ja
pop
cli
std
loop
sbb
pop
sbb
repz
jne
push
lds
add
mov
scas
enter
mov
push
jbe
cmc
lock
cwtl
jb
jns
jg
in
push
dec
jp
cmpsl
into
push
push
shrb
aam
mov
jl
sub
cmp
leave
dec
sbb
sarl
jno
dec
shlb
shlb
adc
push
adc
sub
daa
push
notl
js
mov
cmp
pushf
inc
xchg
or
repz
int3
sarb
ljmp
xor
xchg
aas
ss
fstl
fidivrl
add
mov
lods
ror
cmpsb
leave
insb
cmc
out
xchg
push
and
cmp
mov
jg
add
adc
in
repnz
lcall
stos
xchg
add
pop
imul
rolb
xchg
xor
mov
mov
jne
add
xchg
mov
ret
jge
and
seta
pop
popf
lahf
popa
subl
popa
es
rcrb
cmpsl
xor
js
shrl
jg
popa
sti
int3
adc
cmpsl
lock
jg
das
and
repz
xor
or
imul
cli
push
dec
lcall
fldt
faddl
pop
push
ss
sub
pop
jb
and
cmp
scas
mov
sbb
insl
cmpsb
stc
das
and
fdivl
dec
xchg
push
sub
ficompl
testl
mov
ret
das
dec
dec
add
sub
xor
jno
fildll
or
mov
or
sub
mov
aas
and
or
pop
push
test
adc
and
mov
fdivrs
clc
fcmovb
sbb
out
cmp
or
xchg
xor
fisttps
mov
mov
rorb
pop
mov
cwtl
or
cmpsl
insl
jne
lds
adc
jmp
fs
in
jle
inc
negl
xchg
lods
xor
xchg
iret
xor
dec
loopne
mov
push
dec
push
mov
or
add
pop
insl
loop
neg
sub
sub
sbb
fstps
fnstcw
jns
dec
jge
adcl
xchg
out
jmp
jae
in
mov
jnp
scas
lcall
les
sbbl
jne
sbb
bswap
push
xor
push
cwtl
imulb
inc
outsl
cltd
sbb
scas
sti
aam
cs
lock
mov
xor
adc
jle
in
and
mov
dec
imul
gs
cmp
mulb
sub
out
sbb
frstor
lods
cmp
xchg
xchg
gs
jge
pop
sti
jecxz
cmp
insb
out
fists
iret
mov
test
popf
sbb
xor
aaa
cmp
mov
adc
and
jl
notb
inc
shrb
mov
sbb
or
mov
jp
push
xchg
cmp
aam
dec
mov
lret
sbb
addr16
mov
popa
inc
dec
in
or
fcoml
lock
fisubrl
pusha
daa
lods
cmp
daa
mov
pusha
shl
aam
sbbl
adc
bound
xor
inc
mov
pop
adc
je
clc
mov
xor
jne
stc
cld
loopne
push
sbb
adc
xor
imul
popa
hlt
les
shlb
out
fs
push
loopne
lret
mov
lds
stos
xlat
mov
pushf
cwtl
dec
filds
lret
leave
fmuls
pop
cs
ljmp
jp
fsubrs
out
inc
push
shrb
out
ds
sub
jmp
xchg
ss
aas
or
dec
adc
lret
mov
mov
stos
fs
xlat
inc
or
stos
test
add
clc
add
jge
mov
scas
pop
push
mov
add
mov
jl
fidivl
add
outsb
bound
sahf
ss
clc
imul
test
sti
fs
arpl
cmp
pop
add
test
mov
aaa
mov
cmp
jg
xor
push
xor
lahf
adc
fmul
imul
jg
shrl
and
mov
popa
imul
in
inc
das
push
push
push
dec
cmpsb
mov
cmc
adc
out
daa
cmp
jnp
and
jp
je
jle
stos
insb
addr16
sub
or
aad
movsl
pop
jl
shlb
leave
pusha
dec
push
in
sbb
mov
push
popf
adc
xor
int3
mov
jnp
pop
stc
mov
or
adc
loope
sbb
cmp
clc
mov
and
cmp
xorb
jp
add
mov
icebp
jo
cmp
leave
dec
out
cmp
es
adc
pusha
stc
lods
dec
and
mov
sti
mov
pop
pop
push
xchg
enter
and
out
push
arpl
mov
jmp
icebp
mov
inc
adc
outsb
cld
shlb
mov
push
loope
add
add
push
inc
leave
add
in
add
notb
lahf
cmp
mov
in
cs
loopne
cmp
jns
inc
add
addr16
loopne
std
mov
add
xchg
scas
call
sbb
pushf
inc
xchg
xchg
call
dec
xor
lock
push
leave
popfw
and
fnsave
xor
xor
mov
jbe
sbb
pop
enter
or
loopne
pop
test
push
mov
cmp
or
push
lret
rcll
shrb
aam
dec
rol
inc
pop
jae
mov
std
lcall
lcall
mov
dec
and
and
aas
je
aam
lahf
cli
cmp
movsb
xlat
inc
mov
arpl
icebp
ror
xchg
xor
jne
cwtl
lods
pop
lcall
scas
xor
mov
jns
mov
test
add
fiaddl
cmp
mov
inc
jge
test
lcall
xchg
mov
jge
mov
sarl
push
notb
sbb
push
mov
pop
test
adc
or
fnsave
mov
xor
pop
rcr
cmp
push
mov
rclb
mov
pop
xchg
pop
pop
sti
cmp
test
stc
in
xor
dec
push
jo
sub
pop
mov
jle
add
ret
or
dec
adc
data16
outsb
lock
jge
cmp
leave
mov
mov
adc
inc
rcll
adc
addr16
popf
sbb
fistpll
mov
push
fwait
add
sub
pop
pop
push
sub
aas
xchg
push
mov
mov
xchg
incl
mov
fdivrs
xchg
int
fsub
dec
mov
cmc
lods
mov
cli
arpl
sub
lcall
push
jnp
lods
popf
jl
cmp
sbb
mov
imul
mov
or
cmp
clc
inc
xor
je
add
fldt
inc
stos
mov
mov
push
cmp
ret
sarl
cmp
loop
in
lret
fsts
scas
cmp
scas
cmp
mov
mov
mov
jbe
arpl
test
js
push
sub
jg
lahf
sbb
aaa
sbb
daa
lret
int
lds
gs
popa
mov
fmull
rcr
int3
mov
mov
inc
mov
pusha
nop
inc
push
fwait
sbb
add
or
cs
adc
ret
xchg
fbld
mov
push
sarl
xchg
mov
jno
inc
push
or
push
imul
pop
lods
bound
ljmp
ss
aam
je
aaa
or
stos
adcl
push
pop
or
pop
popf
aaa
sbb
mov
dec
in
adc
cmp
mov
into
dec
jmp
pop
out
sahf
mov
pop
lea
xchg
fldcw
xchg
cld
inc
and
stc
lock
push
loopne
mov
lahf
lds
in
mov
sub
popa
lcall
or
aas
cmp
push
sti
push
adc
mov
xchg
jecxz
nop
stos
cmp
shll
jmp
das
or
dec
or
lods
lcall
lock
fidivl
movsb
inc
sarl
add
lahf
ljmp
xlat
inc
repnz
sbb
xorb
cmp
jns
sahf
xor
aaa
notb
lods
out
fisttpll
jnp
inc
adc
xchg
sbb
aam
add
pop
call
pop
jl
stos
imul
push
loope
xchg
and
xor
hlt
cmpsl
pop
xchg
jno
adc
outsl
adc
sbb
mov
js
inc
adc
push
or
mov
rorb
jae
pop
imul
in
mov
jo
jno
loope
pop
adc
jg
sbb
jge
lahf
jnp
push
out
bnd
ja
popa
push
jno
iret
jmp
mov
in
push
out
sbb
mov
or
and
mov
lret
popa
lods
mov
shrl
and
dec
cmp
push
xor
adc
ss
or
aam
xchg
movsl
test
sbb
out
jmp
xchg
mov
test
jo
xchg
lret
outsl
mov
repnz
scas
xchg
subb
cmp
icebp
ret
sub
repz
daa
cwtl
sbb
push
jecxz
scas
cltd
lahf
int
push
inc
xor
xchg
inc
scas
and
xchg
movl
xchg
inc
imul
lds
nop
popf
retw
or
jg
leave
xchg
dec
int
jno
and
clc
add
dec
pushf
scas
jnp
xchg
fists
mov
mov
mov
repnz
pop
sub
sbb
inc
mov
mov
inc
ds
cli
pop
negl
adc
mov
into
jge
sar
push
xchg
push
pop
mov
mov
pop
loope
xor
cwtl
mov
ds
jnp
enter
pushf
hlt
out
mov
jne
das
loope
pop
iret
push
push
push
test
xchg
in
dec
and
bound
gs
in
lds
cwtl
mov
flds
and
lea
and
jl
lods
mov
sahf
cmp
imul
xor
hlt
je
lret
xchg
mov
push
cs
pop
inc
pop
add
jns
mov
push
push
fs
rdpmc
fsubl
ljmp
ja
fnstsw
ror
ss
jns
fs
lods
push
xor
jecxz
and
decb
sub
push
int
sahf
dec
popf
push
mov
movsl
xorl
dec
push
cltd
fwait
xchg
leave
mov
xor
out
sbbl
rorb
mov
aam
mov
cmp
mov
push
clc
insl
fldenv
xchg
sbb
mov
jns
scas
xor
push
adc
in
imul
fmuls
insl
into
lahf
movsl
push
pop
lret
lret
pop
mov
or
ljmp
ret
lahf
mov
insl
and
shld
or
xchg
sti
ljmp
jmp
sbb
push
nop
fidivrs
adc
or
sub
mov
adc
rolb
inc
inc
enter
xchg
ret
push
xor
add
jb
aad
sbb
sti
push
in
and
bound
cmpsb
mov
push
mov
jmp
jp
leave
xor
mov
cmpl
dec
aad
sbb
xorl
inc
xor
inc
push
mov
lahf
lret
sbb
xor
push
mov
aaa
pop
jp
inc
test
jp
bound
mov
dec
es
lea
pop
sub
pop
in
and
nop
out
mov
jns
shlb
inc
cs
or
dec
stc
sub
int3
jecxz
in
enter
add
sub
xchg
test
xchg
adc
and
nop
mov
ds
cmp
mov
test
mov
add
add
movntps
or
pushl
add
pop
fs
adc
rcll
into
cmp
mov
mov
scas
clc
repz
je
enter
cmpsb
mov
and
dec
addl
cmc
sbb
push
jo
sub
mov
xchg
ret
fs
jmp
insl
movsb
ss
arpl
ss
lcall
push
pop
fldl
add
push
mov
test
xchg
in
xchg
xchg
pushf
xor
std
aas
sahf
ds
insl
test
scas
xchg
push
jmp
lods
adc
rcl
cmp
xor
mov
mov
mov
div
adc
notl
jmp
dec
push
enter
jo
rcrb
ret
pop
push
mov
inc
in
imul
stos
dec
cmp
ljmp
pop
adc
dec
daa
add
pop
jle
sub
ja
jge
insb
fistps
js
movsb
push
cld
xor
adc
mov
inc
fadds
imul
repnz
push
imul
pop
mov
dec
xchg
mov
pop
mov
or
pop
mov
cmp
pushf
xchg
addr16
in
jl
jnp
push
sbb
das
sbb
outsb
in
loopne
adc
jo
xchg
stos
push
push
stc
stos
mov
lcall
cmp
lock
scas
sub
sbb
bound
cmp
sbb
es
adc
shrl
mov
idivl
xor
enter
pop
loop
cmp
xchg
cld
cmc
xchg
mov
pusha
lret
pushl
xchg
faddl
insb
mov
inc
mov
jge
fstpt
imul
cld
push
mov
pusha
or
and
int
cmp
mov
rcr
pop
mov
mov
push
aad
add
pop
bound
pushf
mov
popf
xchg
xor
int3
mov
jp,pn
lods
push
sbb
aad
cmc
loope
test
sbb
or
sbb
jno
mov
or
cmp
popa
out
sbbb
cmp
push
dec
aas
out
aam
roll
pop
icebp
cmp
pop
punpckldq
insb
insb
aad
fld
mov
lock
aad
ror
imul
dec
sub
je
out
jmp
sbb
jne
jns
rcrl
in
addr16
inc
in
jo
sbb
fmuls
mov
xchg
jl
scas
rcrl
sub
out
pop
icebp
sbb
les
sub
ja
mov
mov
or
cmp
insl
mov
movsb
movsb
jl
sbb
mov
cmp
mov
jmp
rorl
loopne
sub
iret
std
dec
or
jo
mov
inc
jge
adc
shl
in
incl
cmpsb
mov
jl
sbb
mov
sbb
pop
rcr
and
inc
clc
scas
inc
xor
sub
lret
add
mov
push
addr16
das
jmp
out
rcrl
arpl
dec
adc
pop
push
les
pop
ds
cld
jnp
pusha
aad
pop
lods
xor
rolb
pop
lock
inc
sbb
or
inc
popl
or
nop
push
lahf
icebp
cltd
inc
xor
loope
cmp
mov
cmp
imul
mov
jbe
js
or
cmpsb
mov
mov
mov
call
mov
lret
loop
in
adc
xchg
popf
das
into
xchg
call
std
or
or
aad
ret
inc
shlb
fwait
sbb
cld
add
xlat
or
and
or
rolb
pop
ja
cmpsl
int
adc
lock
leave
xchg
or
hlt
add
mov
aad
popf
out
sub
and
data16
inc
pop
or
push
ss
push
jnp
orb
dec
test
adc
out
add
pop
test
fildl
xchg
pusha
in
je
dec
mov
inc
xchg
mov
in
loope
fldt
add
ret
cmpl
sub
je
xchg
jae
ret
pusha
lcall
test
in
inc
and
fildl
fwait
pop
dec
js
inc
pop
outsb
xor
add
mov
test
lea
sub
pushf
repz
stos
jle
inc
jecxz
xchg
dec
sbb
stos
jbe
jo
dec
mov
mov
cmpl
shll
pop
stos
int3
jno
cmp
stc
sbb
cwtl
add
decb
push
adc
loope
dec
inc
jb
adcb
jo
test
lods
jnp
shrb
sub
jge
mov
pop
out
lds
and
fisttpll
sbb
gs
cwtl
call
sbb
cmp
mov
mov
mov
inc
add
push
test
movsl
add
xchg
in
dec
ja
lds
sbb
in
inc
cs
decb
repz
mov
rcll
cmp
je
dec
push
out
lods
cwtl
leave
pop
jno
lods
iret
pop
hlt
fmuls
mov
inc
icebp
sbb
sarb
cmpsb
pop
fadd
add
mov
or
push
push
or
xor
lret
xchg
cmpsl
sahf
shll
jae
popa
push
cs
sub
mov
sub
push
icebp
and
xchg
push
xchg
ret
insb
sub
jno
add
test
flds
push
add
mov
fimuls
mov
dec
das
or
subl
test
int
out
jns
out
lcall
jge
sub
js
lcall
mov
out
and
adc
dec
stc
arpl
negl
push
scas
inc
dec
cwtl
movsl
icebp
xor
jge
pop
add
mov
lcall
push
out
ret
in
mov
jmp
sbb
cli
mov
cld
aas
out
pusha
in
mov
adcb
les
push
inc
test
inc
dec
sahf
jp
cmp
loopne
push
ret
push
rclb
mov
es
add
fdivl
pusha
insl
pop
scas
sbb
in
sbb
fiaddl
pop
and
mov
mov
loop
int
ss
sbb
adc
dec
push
and
add
imul
and
jp
push
dec
lret
xlat
push
jmp
sbb
fcompl
fdivrl
or
mov
icebp
in
sti
xchg
ficoml
and
mov
out
push
push
mov
lods
fimull
std
jecxz
pop
mov
jecxz
outsb
ja
mov
ss
leave
imul
jl
cwtl
sahf
xor
inc
mov
adc
icebp
and
lret
pop
inc
mov
cmp
loop
daa
into
cmpsb
push
jno
fisubrl
cmp
xor
xchg
stos
orb
inc
int3
mov
test
mov
frstor
dec
test
ss
rclb
pop
or
mov
cmp
addr16
into
shlb
das
mov
cmpsb
outsb
imul
loope
cmp
mov
popf
fsubrs
mov
mov
and
jns
subl
push
es
stc
mov
lock
pusha
pop
push
and
loop
and
xor
xlat
insb
add
ja,pt
std
rcll
sub
das
or
rcll
pop
repnz
inc
mov
jmp
out
mov
or
cs
jo
jo
mov
xchg
loop
pop
mov
push
aam
mov
xlat
lret
and
dec
pop
bound
test
mov
add
test
sbb
stos
cmc
loopne
adc
iret
stc
inc
sub
aam
inc
out
in
xchg
loope
push
push
xor
cmp
xchg
stos
xor
mov
cld
push
dec
mov
pop
leave
stc
inc
fs
das
ja
notb
loopne
pop
mov
fcmovnb
mov
mov
mov
dec
lcall
push
sahf
out
cmp
xchg
movsb
pop
sub
mov
insb
fs
cld
test
sahf
stos
and
aaa
cmp
popa
in
cmp
lret
js
cmpl
xchg
mov
jge
pop
xor
mov
push
mov
push
sub
cwtl
insl
ret
add
dec
mov
and
pop
mov
inc
jmp
mov
pop
xlat
jns
and
imul
jnp
orb
or
je
int3
fistps
xchg
add
mov
push
sbb
mov
psubusw
stos
mov
mov
dec
fwait
subb
loopne
add
adc
cli
pop
pop
out
sub
add
xlat
jge
inc
push
mov
push
jne
mov
testl
push
lahf
imul
pop
pop
pop
cld
inc
subb
dec
push
jmp
fwait
into
sbb
fmulp
cmp
dec
jmp
push
data16
ja
mov
jne
jo
xchg
and
leave
cmp
in
out
mov
clc
aas
mov
inc
arpl
insb
inc
dec
mov
push
mov
inc
lret
lret
xor
inc
pop
stc
add
in
or
lcall
push
imul
push
mov
mov
inc
inc
jge
in
js
sbb
hlt
fdivrl
rorb
or
xor
adc
shr
icebp
xor
fcomps
mov
outsb
loop
xchg
addr16
or
push
inc
dec
or
mov
lret
push
or
pop
dec
xrstor
jno
scas
repnz
inc
push
jnp
ret
rolb
push
add
and
pushf
xchg
arpl
dec
ret
stos
sbb
andl
lret
and
mov
pop
cmp
mov
cmp
gs
sbb
lret
jnp
inc
lea
mov
xchg
jmp
dec
icebp
test
loope
dec
and
cmpl
dec
aam
pop
enter
jne
adc
push
xor
push
mov
cs
jbe
add
xor
mov
movsb
gs
add
loope
mov
push
adc
es
jbe
and
mov
imul
pop
in
das
sub
fsubr
inc
pop
lret
or
lcall
mov
je
inc
mov
xchg
pop
jge
lds
jecxz
sbb
pusha
jp
xchg
lock
movsb
and
in
cmpb
fwait
ja
stos
out
loop
sub
pushf
and
insb
jmp
jae
sbb
pop
push
cli
mulb
test
js
jns
sub
shl
sahf
out
or
pusha
sarl
cmp
data16
push
xor
mov
imul
push
jne
in
stos
cmpsb
xchg
sub
inc
sbb
jo
sti
sbb
sbb
lea
mov
aaa
test
cmc
addr16
adc
dec
dec
mov
test
cli
dec
pop
movsb
mov
cmp
dec
push
inc
xchg
fidivs
xor
and
mov
sub
xchg
pop
test
shlb
lods
adc
xchg
sbb
scas
cmc
adc
hlt
hlt
nop
mov
lret
mov
fsts
leave
leave
xor
push
test
leave
fsubp
outsb
jp
divl
mov
add
push
mov
aam
cmc
test
dec
pop
push
lret
cmpsb
addr16
jno
lds
add
shl
pop
cmpsb
lret
cli
insl
fcmovnu
sub
ret
lcall
dec
jno
bnd
call
bound
daa
mov
sub
stc
ss
movlhps
sub
cmp
xor
fs
mov
mov
xor
sub
in
xor
dec
jo
jnp
shlb
xchg
lahf
jge
mov
div
mov
movsb
and
push
pop
push
iret
bound
mov
mov
and
sbb
xor
fstl
dec
push
jl
out
mov
in
push
xor
xchg
test
mov
xchg
cmovg
dec
jp
dec
or
fmull
out
xchg
push
mov
testb
mov
pop
xor
jbe
xor
xchg
inc
cmp
dec
jmp
outsb
dec
imul
js
shlb
ror
das
popa
xor
mov
js
mov
shrb
icebp
or
push
push
sbb
mov
lds
mov
push
rcrl
jae
hlt
or
outsl
sahf
sub
xchg
aam
jo
mov
dec
popf
add
enter
fwait
sti
or
and
xchg
fdiv
sub
fisttpl
cld
les
and
adc
test
mov
rcr
xlat
mov
mov
jmp
jle
cmp
adc
mov
repz
fmuls
stos
xchg
cld
mov
cmc
scas
mov
int
jge
pushf
sub
xchg
psubsb
mov
add
push
int3
or
outsl
aas
enter
push
sarl
or
push
lea
sbbl
ljmp
mov
scas
faddl
cmp
out
cmp
pop
ljmp
xor
cld
add
mov
lcall
cmp
jecxz
push
push
mov
dec
jp
dec
std
push
xlat
adc
icebp
inc
xchg
mov
push
xor
std
and
gs
sub
and
loope
out
clc
mov
outsb
sbbb
sbb
and
pop
or
xor
inc
cld
inc
lret
push
adc
xchg
test
test
leave
cli
inc
ficoms
xor
es
popf
mov
sub
and
mov
mov
jnp
jnp
ds
arpl
or
sbbl
inc
frndint
cmp
popf
jle
aam
mov
dec
xor
xor
mov
out
pop
dec
mov
cmpsb
or
arpl
jne
dec
xlat
xchg
lret
xchg
and
cmpsl
jo
adc
lcall
xchg
mov
popa
sahf
sti
push
push
mov
mov
fsubrs
sbb
push
cmp
jne
test
sbb
dec
xchg
fcomps
daa
sub
es
jne
sarb
in
jmp
lods
pop
pop
or
xor
xchg
sub
sbb
jo
loope
inc
addr16
popa
fisubs
sbb
cmp
clc
inc
sbb
mov
daa
add
dec
and
mov
addr16
jb
les
add
stos
sbb
aam
mov
fsubr
xchg
pop
sub
arpl
push
mov
int3
icebp
fdivrs
inc
cmpsb
fisubrs
jno
out
sti
lret
test
fs
gs
rorl
push
add
stos
inc
mov
xor
cmp
push
pop
mov
mov
adc
pop
mov
arpl
pop
out
lret
push
repz
std
hlt
push
cmp
push
inc
das
xchg
insl
ss
sbb
cmp
adc
inc
push
xchg
pop
xchg
jle
dec
push
or
lcall
and
mov
mov
ljmp
push
shll
jmp
cwtl
lret
orb
popf
mov
jbe
int3
sub
mov
inc
scas
insb
repz
xchg
imul
inc
ja
fistpll
fisttps
inc
int3
outsb
rcr
mov
inc
or
dec
loopne
pop
jno
adcl
sbb
mov
dec
mov
jne
jmp
xchg
mov
pusha
leave
inc
adc
pop
call
mov
cmc
nop
lock
pop
push
int3
or
or
xchg
inc
adc
or
testb
popf
jo
data16
jecxz
jae
sbb
mov
pop
test
sbb
sub
xlat
stos
and
pop
scas
pusha
imul
cli
test
sub
in
mov
mov
push
fst
aaa
cmp
lock
pusha
dec
xor
push
sahf
or
add
test
or
push
cli
je
out
adc
add
rcl
ficoml
cmp
inc
lahf
rcrb
test
in
sti
xchg
sub
mov
sub
bound
loop
cmpsb
ljmp
fimull
pop
cli
mov
leave
out
or
psubw
dec
enter
es
mov
lods
loop
cmp
movsb
notb
mov
bound
jbe
std
and
adc
sbb
dec
dec
roll
cwtl
subb
loopne
mov
loope
and
jecxz
jb
test
jo
outsl
nop
mov
cltd
psubd
or
xchg
pop
fwait
pusha
or
dec
xor
bound
sbb
mov
add
mov
ret
pop
in
repz
cmovns
scas
mov
xchg
ljmp
push
addr16
xchg
aam
js
pop
cmp
adc
imul
adc
outsb
pop
or
fs
pusha
icebp
jp
xor
fisubrl
pop
add
and
in
je
bound
xchg
add
movsl
xchg
pop
cmc
gs
jno
lret
enter
sbb
loopne
mov
movsl
hlt
fxam
dec
dec
sbb
lods
cmpsl
or
movsb
shll
or
js
cmpsb
mov
dec
inc
mov
and
leave
and
pop
nop
push
outsb
es
int3
jl
fsubrp
add
add
xor
jecxz
xchg
inc
rcl
imul
stc
mov
pop
push
fcomps
pushf
push
dec
jle
repnz
inc
inc
fisttpll
fidivl
jno
jnp
mov
repnz
icebp
mov
mov
test
rcll
xchg
inc
outsl
cmpsl
fadd
das
lea
pop
and
or
sub
lret
or
imul
lret
pop
iret
ret
and
push
das
flds
cli
imul
shlb
push
test
movsl
push
and
fs
sub
xor
inc
shl
cwtl
popf
or
adc
xchg
xlat
xchg
in
sbb
into
xor
inc
loope
sahf
and
inc
or
adc
cmpsl
ret
outsb
jg
add
pop
inc
push
cmp
xor
xchg
sbb
mov
pop
outsl
xchg
test
or
movsb
mov
jmp
lahf
ja
push
add
jbe
mov
imul
sahf
adc
incl
lea
mov
in
popf
or
orl
sbb
ret
jmp
mov
js
xchg
add
adc
xchg
xor
movsl
outsb
fs
pop
jno
aas
pop
fsub
mov
mov
pushf
ljmp
loopne
ret
or
gs
jl
dec
adc
out
jnp
and
test
in
push
pop
inc
outsl
push
jnp
movsw
adc
inc
mov
mov
mov
push
std
or
mov
aad
push
enter
dec
out
mov
int3
rcl
mov
jcxz
loop
xchg
lea
jae
mov
mov
rcr
fcoml
lock
popf
gs
mov
cmpl
cltd
sub
dec
shll
pushf
lods
pusha
or
fildl
jb
fnstenv
ret
inc
jle
cmp
shr
or
dec
imul
sbb
add
aas
jb
out
test
int
fldcw
lds
mov
dec
or
or
sub
cli
inc
push
cld
icebp
aaa
mov
lret
js
pop
scas
jne
xchg
cmp
inc
out
sbb
fsubrl
pop
xchg
out
add
movl
or
xor
cli
repz
sub
xchg
jnp
arpl
cmc
pop
cmp
pop
iret
bound
in
insl
xorl
cmp
popf
dec
push
jne
cmp
mov
xor
add
jns
cmpsl
push
pop
xor
int3
mov
fwait
or
lods
cmp
rorl
or
xor
adc
push
fwait
cltd
xor
jmp
add
and
inc
notl
xor
jge
movsb
inc
mov
outsb
add
mov
cmp
es
dec
jge
push
add
xchg
cmp
stc
cmp
jne
mov
lcall
jne
xchg
je
pushf
in
sub
xchg
mov
push
lcall
test
jl
inc
push
aaa
ret
sbb
adc
bound
mov
dec
push
fwait
adc
pop
insb
fs
jnp
and
xor
push
and
mov
cmp
xchg
icebp
les
pop
cmc
call
shl
or
scas
lods
or
push
notl
push
add
mov
adc
test
cmp
movsl
out
js
mov
daa
xchg
fbld
aam
daa
push
pop
pop
mov
pop
add
jo
outsb
add
pusha
aaa
mov
das
pop
ljmp
lock
rolb
adc
mov
ds
inc
pop
lods
daa
mov
mov
push
sbb
pop
mov
pusha
ja
sbb
jp
push
loope
pop
jns
push
loopne
fs
aas
lcall
push
and
lcall
sbb
mov
push
in
xchg
push
push
inc
inc
lret
mov
ja
aad
pop
jle
dec
out
xchg
aaa
cwtl
shr
push
mov
insb
in
jns
stos
hlt
mov
mov
and
push
push
and
inc
outsb
mov
mov
inc
std
mov
cmp
xchg
lods
inc
pop
sbb
aaa
cwtl
xchg
jbe
test
mov
fsubr
jg
mov
lods
bound
mov
dec
lret
cmp
jno
nop
dec
mov
orb
in
rcrl
and
pop
dec
outsb
cmp
push
pusha
pop
mov
adcb
mov
pop
and
sbb
xchg
mov
aaa
lret
imul
xor
xchg
fdivs
mov
mov
push
sbb
or
mov
add
fsubrl
xchg
arpl
rclb
outsb
xchg
mov
stos
ficompl
sbb
es
push
jg
cmp
mov
xchg
or
in
imul
push
adc
iret
pop
fimuls
push
push
mov
inc
cltd
pop
mulb
iret
lcall
jne
cld
inc
push
loopne
arpl
dec
or
outsb
fmull
push
scas
lock
mov
jo
repnz
rcrl
push
in
pop
popl
jae
fdivrl
mov
stos
sbb
fnstsw
inc
or
faddl
setl
mov
xchg
leave
push
mov
sbb
mov
ret
and
addr16
sbb
ja
shlb
shlb
jmp
shll
pop
lods
xor
mov
mov
test
and
jno
pop
lret
adc
pop
sub
inc
inc
iret
xorl
gs
loopne
test
sub
push
stc
mov
add
xchg
or
push
mov
mov
push
jb
jns
jecxz
jo
mov
sub
lahf
mov
jmp
fsts
std
mov
in
hlt
movsl
and
pop
aaa
and
loop
pop
or
cmp
pop
xchg
pop
sub
add
inc
xchg
les
push
hlt
or
rolb
sbb
adc
imul
cmp
je
imul
jl
rol
cmp
jge
jne
fbstp
xchg
push
sbb
sbb
push
nop
xor
movsl
loop
inc
repnz
push
dec
icebp
dec
lcall
aaa
xchg
sbb
dec
jo
sub
cmp
hlt
and
dec
adcl
and
sbbl
repnz
and
sbb
inc
imull
and
test
aad
mov
out
adcb
loope
hlt
mov
mov
xor
jns
or
addb
xor
cmp
ret
sbb
iret
mov
enter
sbb
xchg
jecxz
aad
lret
sub
cmp
nop
cli
out
pop
lods
mov
sbbb
lret
mov
push
das
sub
movsw
lods
cmp
jnp
data16
mov
mov
mov
push
jne
inc
dec
cwtl
jne
notb
mov
addr16
mov
jg
pop
jno
out
sbb
fwait
dec
and
std
add
jae
push
xchg
jmp
add
mov
aad
pop
add
mov
cmp
jae
xrelease
mov
pop
push
xchg
cmpsl
xlat
enter
mov
or
adc
lahf
shlb
in
mov
nop
and
pop
lret
or
pop
rcll
inc
mov
pop
dec
pop
and
mov
cs
scas
scas
jne
lds
adc
ja
into
orl
mov
mov
dec
jp
cmpsb
movsb
repz
loop
ss
push
inc
insl
hlt
xor
movd
scas
push
cmp
rcrb
pop
popf
jle
add
pop
inc
jbe
adc
pop
xor
xchg
out
pop
clc
insl
cmp
sahf
daa
push
fwait
insb
pop
jg
inc
xchg
sbb
sub
int3
and
mov
mov
inc
lods
imul
mov
mov
xchg
fisubrs
ret
add
or
ljmp
sbb
ja
pop
cmp
mov
rcrb
pop
inc
nop
lcall
loope
cmp
add
insb
xor
pop
jno
clc
pop
jp
je
outsl
jl
add
arpl
ss
jecxz
shll
popa
adc
leave
jp
les
xor
push
mov
leave
push
xchg
mov
sbb
sahf
add
shlb
and
xchg
or
and
out
add
sbb
es
push
sbb
es
sub
sbb
xor
stos
sub
fisttpll
mov
loop
mov
xchg
pop
mulb
jp
shlb
out
stos
outsl
and
or
and
rcrl
insb
sahf
fisttpll
mov
xchg
or
in
sti
cmp
mulb
xchg
mov
test
arpl
fisttpl
daa
and
gs
out
or
and
push
pop
xlat
xchg
cld
inc
dec
es
int
cmp
adc
cltd
ds
dec
sbb
or
push
xor
jmp
and
movsl
fnsave
cs
lcall
or
incb
es
insb
jbe
lods
rol
ja
imul
outsl
push
add
and
sbb
pop
cmc
push
xor
mov
orb
out
dec
cmove
xchg
insb
pop
mov
xchg
pop
repz
xchg
in
or
pop
fmuls
or
mov
jmp
es
mov
sbbb
fcmovb
add
cmc
stos
pop
inc
sahf
mov
cmp
in
push
xor
setg
adc
dec
add
or
movsb
mov
in
xor
fcmovnu
adc
data16
or
sub
xor
dec
fwait
mov
inc
sbb
fcoms
cs
jle
mull
cmpsb
sub
cli
clc
cmp
or
imul
int
jnp
pop
lret
fs
insb
lock
dec
sub
dec
fnsave
test
or
lret
iret
shrb
test
cwtl
cwtl
inc
push
mov
loop
pop
inc
and
mov
and
xchg
out
or
iret
lret
sub
cmpsl
fdivrl
int
sub
sub
enter
movsl
stos
jmp
js
jne
fwait
mov
pop
in
sbbb
inc
lret
sbb
ja
mov
mov
push
jg
push
add
mov
adc
inc
icebp
add
jmp
test
arpl
dec
mov
aad
xchg
daa
sbb
out
insl
sbb
push
cld
and
subb
jno
xchg
loopne
or
clc
aam
add
lea
enter
inc
aaa
andb
jmp
dec
out
xchg
mov
cmp
cmp
outsb
adc
sbb
test
inc
lret
mov
push
into
addr16
xor
sbb
xchg
and
push
dec
std
js
mov
enter
jno
push
pop
sbb
mov
idiv
test
pop
je
lea
mov
pop
and
mov
cmc
movsl
dec
aaa
xor
cmc
mov
ss
inc
push
lea
mov
xor
mulb
outsl
repnz
mov
mov
cli
call
mov
pop
ja
mov
repz
jle
fdivl
cmpsb
sahf
inc
cmp
shll
jg
push
stc
stos
out
sti
mov
mov
adc
pop
xchg
orb
arpl
subb
stos
push
bnd
mov
addr16
pop
push
push
or
mov
popa
or
aam
push
and
or
jle
out
xchg
cmc
sub
mov
jle
pop
sbb
es
adc
fwait
icebp
dec
adcb
vmovntdq
push
mov
fnstenv
jl
sbb
cmc
or
mov
les
sub
adc
mov
mov
add
mov
imul
adc
xor
icebp
and
sbb
in
cld
std
cltd
ss
inc
arpl
lcall
in
dec
fucom
loopne
inc
addr16
lock
xor
out
push
xor
sahf
sub
pop
xor
stos
loope
mov
popf
add
inc
mov
fbstp
daa
mov
sbb
jae
rcrb
cmc
push
jb
imul
imul
dec
in
mov
jne
fisttpl
inc
add
xchg
xor
nop
jmp
jne
nop
mov
or
add
push
ss
jle
popf
cmp
mov
push
push
sub
jge
dec
inc
mov
sbb
ljmp
adc
jl
mov
inc
faddl
les
in
inc
repnz
inc
pusha
sbbl
mov
dec
adc
jecxz
insb
mov
inc
ret
cmp
lea
dec
xor
fmull
adc
testb
and
inc
repz
insb
xchg
add
jp
out
fwait
sbb
aad
out
inc
arpl
and
jle
mov
add
adc
mov
mov
mov
mov
inc
mov
out
push
in
xchg
int3
mov
out
mov
adc
pop
fistl
nop
xchg
cmp
pop
aas
test
divl
repz
push
sub
lods
stc
mov
cmpsl
sub
jnp
and
sbb
push
adc
movsl
dec
cltd
cmp
jno
pop
daa
cmpb
std
ja
leave
and
xor
out
popf
push
push
sub
and
dec
cs
pop
sti
mov
dec
cwtl
movsl
cmp
mov
pop
inc
loop
or
inc
orl
stc
jp
dec
dec
sub
mov
jbe
fidivs
xchg
clc
xor
sbb
bound
iret
xor
dec
cmpb
mov
cltd
les
lahf
push
or
dec
mov
inc
imul
add
pop
sbb
and
mov
pinsrw
sahf
push
xchg
je
stos
add
mov
and
das
sbb
out
sbb
fidivl
pop
mov
hlt
inc
iret
sub
or
adc
mov
mov
icebp
int
pushf
lock
mov
and
push
push
add
mov
pop
push
sub
pop
push
mov
push
pop
arpl
divb
out
ljmp
mov
ja
pop
in
loop
mov
push
sbb
pop
sub
cmp
lret
ret
adc
xchg
aaa
fs
fistpll
hlt
nop
testl
push
lret
xlat
ja
inc
sub
xchg
fists
jp
ss
aam
stc
sbb
xchg
xchg
cmpsb
add
cmp
mov
cli
in
pop
xor
or
lret
hlt
jecxz
inc
shlb
mov
arpl
push
inc
cmp
incb
xchg
sbbl
leave
imul
fcomps
je
imul
add
lods
sub
shrl
das
add
mov
loopne
outsl
push
fcom
int
ljmp
sbb
mov
das
fdivrl
or
in
jl
rcrb
add
or
adcb
dec
xor
jb
push
lods
mov
gs
sub
fwait
push
sbb
add
enter
ret
addb
sbb
xor
inc
inc
adc
pop
movsl
adc
cmp
fwait
jne
mov
xorl
jne
inc
dec
dec
data16
nop
add
jmp
mov
jge
imul
mov
shlb
out
add
push
out
adc
push
inc
inc
pusha
and
fldcw
int3
jle
pop
lret
sub
sub
lds
div
cmp
repnz
movsl
pop
and
aad
jae
ret
into
ljmp
and
pop
out
xchg
jmp
fisttps
and
clc
fisubrl
dec
lods
fiadds
nop
pop
inc
enter
mov
fimull
xchg
inc
in
je
hlt
cmp
mov
mov
lahf
js
fs
jg
jbe
push
pop
add
scas
dec
mov
inc
bound
js
xchg
pop
sbbb
insl
hlt
inc
aas
pop
mov
cli
mov
pop
fs
cmp
cmp
shll
sbb
sub
push
addb
push
fwait
pop
lret
in
inc
pop
push
sub
test
pop
inc
sub
dec
rol
mov
lret
movsb
mov
sub
aad
or
push
sub
data16
or
or
pop
jg
inc
dec
xchg
ficoms
cmpsl
shll
shrb
loope
dec
test
sbb
dec
push
push
in
ds
sbb
negl
scas
xchg
stos
fisttps
xor
lods
sub
adc
sub
push
jo
jecxz
jmp
sbb
jl
subb
loopne
arpl
fdivs
pushf
or
mov
in
cmp
push
lea
cmp
push
testl
lods
cld
subl
out
imul
xorb
xchg
mov
push
inc
cs
clc
jnp
xchg
jecxz
and
movsl
les
into
dec
cmc
filds
push
or
test
jne
and
jne
cmp
cld
mov
mov
fidivrs
adc
mov
mov
jle
xor
mov
popf
fistl
inc
xor
push
jno
in
imul
pop
sub
sbb
movsl
cld
sub
and
adc
push
aam
mov
sahf
test
jo
outsl
sbb
call
pushf
sbb
cs
jnp
dec
mov
cmp
mov
and
mov
ljmp
sub
xchg
xor
daa
cmp
inc
jle
adc
push
push
ljmp
cld
sub
pop
data16
mov
loopne
or
inc
lock
jne
jbe
enter
insb
cmp
stc
push
inc
imull
pop
xchg
adc
jg
into
repnz
push
jle
fidivrs
sarb
mov
jns
pushf
jns
in
pop
stos
mov
fiaddl
addr16
mov
pop
mov
mov
popa
pop
push
mov
in
out
push
mov
out
jb
push
inc
fisubl
addr16
xchg
lahf
loopne
imul
jb
das
in
sbb
jnp
inc
add
dec
aad
dec
out
repnz
arpl
pop
stc
and
pop
inc
mov
jae
mov
cmpsl
mov
ss
dec
lea
push
lret
xchg
jp
mov
push
add
inc
push
mov
and
fldpi
jle
cli
push
add
fstpt
jmp
mov
fcmovbe
aam
scas
stos
hlt
inc
cwtl
jne
outsb
or
jp
mov
add
stos
inc
sbb
xor
or
aam
les
lret
pop
clc
pop
jno
clc
mov
jmp
adc
push
xrelease
leave
pusha
arpl
imul
imul
or
pop
ljmp
nop
adc
jmp
cmpl
outsb
mov
mov
repz
in
out
add
jno
sti
addb
and
ja
jg
addl
dec
sbb
pop
or
lret
mov
jo
aaa
movsl
dec
lret
jo
jp
shl
xchg
add
push
push
popa
lock
jl
and
adc
nop
popa
scas
jne
sub
or
movsbl
cmpb
push
adc
inc
jbe
xchg
pop
or
adc
dec
nop
xor
dec
inc
cmc
ds
clc
push
in
mov
in
jno
sbb
call
ret
or
mov
sbb
enter
push
and
popf
dec
jno
cmp
lock
fs
or
cmpsb
pop
xor
mov
test
cmp
push
jmp
leave
jo
repz
imul
cli
push
test
mov
xor
fistpll
out
cmp
sahf
imulb
iret
inc
repnz
push
shlb
enter
test
xchg
pop
popf
out
and
dec
in
sub
rolb
test
push
ljmp
inc
adcb
pop
xor
out
mov
cmp
jo
or
dec
cmp
sar
jg
in
out
sbb
push
icebp
sub
lods
imull
clc
jle
push
aaa
pushf
addr16
lret
test
sahf
xor
push
inc
push
and
imul
xlat
mov
lahf
sbb
repnz
cmp
pop
sarb
std
and
decl
and
fsubs
scas
adc
icebp
fists
or
cmpsl
mov
into
jl
addr16
mov
stc
hlt
sbb
sahf
in
adc
sub
cld
cmp
and
std
sahf
inc
mov
clc
aas
xor
adc
add
fisttps
dec
xchg
movsl
lret
out
pop
jae
repz
addr16
sbb
out
repz
cmp
mov
cwtl
cmp
leave
xor
outsl
addr16
push
sbbb
or
pop
xchg
test
pusha
in
add
pusha
dec
or
jecxz
fisttpll
add
cmp
ret
jg,pn
out
xor
pop
mov
je
mov
mov
dec
push
push
addr16
ja
pop
jecxz
sbb
rcrl
push
pop
lcall
sub
fbstp
add
xlat
imul
mov
push
mov
lods
inc
pop
jmp
push
push
rorl
sub
lret
sbb
push
fcmovnu
xchg
push
fisubs
repnz
jmp
xor
imul
mov
imul
pop
xor
call
lds
cs
rorl
cmp
idivl
mov
iret
cmp
dec
incl
mov
test
xlat
and
xchg
loope
sbb
add
loope
or
xchg
out
into
xchg
pop
ja
dec
mov
pop
push
jl
sub
inc
int
clc
jbe
jb
hlt
dec
test
pop
inc
adc
and
cli
pop
jns
xchg
sbb
movsl
push
dec
scas
stos
mov
call
xchg
out
cs
pop
les
sbb
and
cmp
adc
ror
ja
aam
adc
sub
sub
fbstp
dec
xor
jnp
addr16
rolb
cmp
push
push
insb
std
leave
adc
mov
pop
and
sub
imul
jae
pop
lods
rcr
push
push
lock
pop
push
in
ss
mov
mov
mov
mov
sub
rolb
dec
jbe
mov
call
pushf
imul
rolb
cmp
sti
mov
add
push
xchg
call
frstor
or
imul
mov
and
jmp
dec
mov
push
ljmp
xor
outsl
cmc
movsb
inc
ljmp
lret
out
push
les
add
flds
inc
dec
xor
xor
lds
pusha
das
or
pop
int
pop
xor
xlat
sub
cs
sub
arpl
mov
mov
push
pop
push
dec
pusha
pop
mov
xor
gs
pop
adc
daa
enter
lcall
test
ds
mov
pop
xchg
jmp
scas
xchg
ss
push
mov
mov
dec
sbb
push
jp
cmp
push
push
cmp
loope
mov
mov
adc
cmp
sbb
xor
xchg
fstl
mov
jmp
or
add
inc
fimull
out
xor
jp
outsl
int3
sar
int
scas
ja
popl
mov
in
cmp
pop
outsb
popf
cmp
add
pop
pop
shrl
or
pop
mov
pushf
popa
cmpb
sub
repz
xlat
mov
std
adc
into
rcr
sbb
jmp
jne
sub
lods
push
cmpsb
repnz
ret
add
pop
add
mov
inc
adc
cmp
dec
stos
pop
leave
push
adc
dec
loop
outsl
adcb
js
push
repz
lea
and
fstpl
push
xchg
add
cltd
test
and
shlb
mov
in
pop
inc
cs
dec
push
das
ret
push
inc
leave
mov
nop
push
shlb
rorb
sub
loop
rorl
loop
inc
cmp
inc
ficoms
xchg
test
and
xor
testb
test
cltd
xchg
rolb
test
ss
xchg
rorb
sbb
fcomp
cmp
je
adc
cmp
adc
sbb
adc
fists
shlb
ss
out
adc
jnp
cmp
or
hlt
pop
out
lods
mov
sbbb
out
pop
mov
jmp
mov
dec
outsl
sub
movl
sbb
dec
sti
test
icebp
cltd
lods
loopne
mov
in
aaa
aam
push
dec
mov
fildll
xchg
add
data16
adc
enter
ret
dec
jl
in
sub
into
cli
push
dec
fistps
sub
into
mov
sub
shlb
xor
scas
and
movsb
lock
mov
jp
cmp
sub
in
dec
cmp
xchg
inc
test
add
lock
push
lock
inc
rclb
jae
push
std
enter
stos
test
pop
pop
cwtl
mov
ficomps
lret
mov
test
mov
mov
adc
in
cmpsl
cmp
cmpb
xchg
cmpsl
mov
mov
sub
sbbl
imul
ja
pushf
in
adc
and
mov
jmp
push
jae
pushl
mov
in
paddd
cmp
adc
scas
inc
popf
xchg
int
fsubl
inc
aaa
push
pop
jae
xor
xchg
dec
inc
ror
cmc
out
mulb
jnp
testb
add
or
out
or
paddb
lahf
movl
push
dec
push
outsb
jg
or
lret
pop
jg
js
adc
mov
add
clc
repnz
ret
lods
xor
cmp
push
xor
xchg
bound
jb
inc
sub
inc
pop
jge
xchg
mov
cmp
jl
dec
xlat
mov
aam
mov
add
out
daa
nop
test
repnz
push
xchg
stos
std
jg
add
xchg
sbb
popa
push
sbbb
or
mov
mov
adc
mov
jg
inc
xor
ja
lahf
inc
mov
popf
nop
frstor
cmp
mov
aaa
sahf
lahf
xor
mov
jle
cli
or
incb
and
in
cmpl
adc
ja
sub
xor
nop
xlat
andl
pop
ja
adc
and
or
addr16
sbb
inc
aad
push
into
sub
push
das
or
lahf
pop
inc
movsb
repnz
pushf
lods
pop
hlt
jns
cmp
or
ja
aas
fisubrs
imul
pop
xchg
inc
dec
rclb
mov
inc
hlt
lock
mov
mov
arpl
pop
mov
outsl
dec
adc
cltd
xchg
subb
xor
ss
fcos
popf
int3
fwait
daa
test
pop
test
lods
lahf
xorb
mov
fcom
lahf
cmpl
mov
add
punpckldq
rorl
sti
jns
int
mov
mov
xchg
in
xlat
jl
pop
clc
gs
hlt
lock
leave
outsl
in
sahf
into
mov
or
mov
negl
push
ja
int
rcrb
jl
dec
jb
insl
je
jecxz
int3
inc
sti
leave
mov
mov
cmpsb
push
arpl
xchg
pop
mov
add
ret
loope
sbb
mov
test
add
and
adc
xor
andl
push
cmpsl
push
mov
daa
cmc
mov
stos
adc
push
test
push
loope
roll
rcr
push
cs
into
lret
sbb
popa
jb
iret
push
int3
dec
jecxz
fldenv
rcrl
mov
jns
dec
mov
cmp
jl
int
xchg
divl
mov
ds
andb
dec
inc
xor
jecxz
dec
mov
adc
jns
pushf
outsb
cli
iret
sbb
jl
xor
dec
sbb
add
fstps
inc
adc
cmp
push
out
nop
xchg
aaa
add
std
push
add
adc
dec
test
fadd
insl
pop
sub
lock
pop
or
mov
in
push
lods
bound
push
ret
out
popa
jge
add
xchg
daa
mov
adc
arpl
jmp
push
sub
mov
dec
or
addl
nop
push
call
mov
arpl
stos
or
rolb
test
sub
add
mov
mov
xor
imul
mov
jns
mov
xor
lahf
mov
repz
and
int
scas
push
pop
fimull
adc
and
fistps
add
add
add
out
addr16
jl
mov
aam
sub
scas
mov
call
pop
sub
inc
subb
mov
lret
mov
dec
gs
ret
xor
lret
jb
jb
xchg
in
push
mov
outsl
or
popa
cmp
push
clc
iret
icebp
inc
out
push
adc
sbb
lods
xor
cltd
jge
dec
sub
xchg
xchg
dec
mov
sbb
push
mov
and
xchg
js
or
inc
jl
or
popa
and
mov
cmc
loopne
sub
jae
push
sbb
out
pop
mov
shrl
hlt
fcmovne
testb
dec
test
pop
ja
roll
dec
dec
jge
add
hlt
mov
into
mov
incl
movsb
jae
div
das
xchg
int3
cmpsb
adcl
xor
sarb
or
cltd
iret
leave
bound
sub
dec
ret
xchg
cmp
or
mov
stc
loopne
sub
adc
inc
or
inc
cmp
out
and
sub
cmc
xchg
sbb
push
cmp
inc
xor
es
push
push
mov
mov
xlat
or
mov
cmp
test
insb
out
jne
jmp
repz
in
sbb
aaa
xchg
jbe
mov
and
loope
jecxz
in
jmp
inc
aam
adc
jp
jl
cltd
in
cld
cmc
out
or
sbb
loope
in
gs
sub
pop
das
pusha
lock
sbb
ljmp
js
sub
sahf
or
outsl
inc
pusha
fisttpl
inc
mov
inc
jne
aam
dec
cmp
push
pop
out
insb
ljmp
aam
sahf
jo
pop
cmp
addr16
and
jge
cmp
movsb
adc
mov
movsl
jecxz
jp
mov
add
add
push
cmp
in
jp
pop
sbb
sub
xor
sbb
sbb
lret
popf
push
mov
cmp
mov
jne
daa
cwtl
rcrl
aaa
lods
xchg
or
das
add
cwtl
xor
lcall
mov
pop
xor
cmp
es
and
stc
mov
ljmp
pop
adc
fwait
jns
in
dec
mov
inc
jb
cs
jmp
mov
dec
sbb
test
push
hlt
and
arpl
jnp
push
fnstsw
xor
mov
push
inc
imul
jb
jo
les
in
clc
push
fdivrs
leave
in
jge
sarl
rcr
test
adc
mov
out
and
inc
out
dec
movups
int3
dec
aam
dec
mov
mov
xchg
pop
hlt
push
ret
in
push
rorl
insl
xor
dec
dec
repnz
mov
hlt
sahf
cmpsb
jp
fstps
dec
push
shrl
adc
mov
push
or
pop
jnp
out
or
popa
fstps
inc
loope
cwtl
jl
sbb
sbb
mov
sbb
and
mov
les
or
cmp
and
dec
inc
int3
push
inc
ja
sti
and
nop
test
inc
jecxz
popf
repz
sbb
hlt
mov
sub
fwait
dec
xchg
in
mov
iret
fdivl
inc
jg
mov
cmpsl
nop
inc
dec
mov
mov
imul
xchg
inc
lcall
out
repz
or
pusha
insb
pop
les
lret
inc
jg
add
je
ss
pop
xchg
push
sahf
jp
ficoms
lds
mov
jmp
cli
pushf
scas
xor
mov
idivb
cli
add
and
test
ret
pop
xor
xor
pop
push
call
mov
dec
add
pop
pop
loope
xor
fildll
mov
insl
loope
cld
inc
lock
test
ror
rolb
fld1
sub
js
and
push
sbb
xchg
stos
cmp
into
popf
push
addr16
inc
push
ficoms
mov
jl
cli
fnstenv
pop
cmpsl
stc
mov
cltd
sbb
nop
pop
pop
cmc
mov
pop
ljmp
lock
loop
cmp
lea
mov
cmp
xchg
dec
movl
inc
sub
idiv
inc
ret
ja
jmp
scas
data16
push
into
jmp
push
xor
fidivs
mov
dec
sbb
jge
pop
adc
jl
sbb
scas
insl
push
cmp
add
jp
mov
jno
mov
dec
popf
je
dec
jmp
and
sbb
cmp
xchg
in
xchg
dec
popf
xchg
out
add
pop
bound
in
xchg
jb
das
add
pop
mov
movsb
jge
push
incb
adc
ja
fdivl
xor
add
jecxz
data16
mov
and
int
pop
ficomps
pop
cmp
xchg
mov
dec
inc
pop
cmp
dec
lods
push
test
fisubrl
cs
mov
xchg
add
std
add
push
fists
pop
lods
or
add
and
pop
inc
push
inc
adc
fstp
ljmp
js
in
push
xchg
mov
xchg
jmp
jns
lahf
cmp
mov
mov
stos
lcall
xchg
xor
outsb
xchg
lea
dec
lock
sub
pop
jb
add
ds
fistpll
aad
je
nop
jno
pop
jne
fists
push
xchg
push
push
inc
sub
stc
dec
pop
ret
cmpsl
or
into
mov
jg
jns
loop
pop
push
leave
mulb
mov
insb
dec
inc
jae
mov
pop
push
subl
xchg
aaa
cmp
and
push
mov
xchg
xor
or
test
call
push
test
stos
int
xchg
and
loopne
pusha
sub
mov
rdmsr
xchg
jecxz
mov
pop
sbb
test
push
inc
xor
mov
scas
sbb
mov
popa
das
add
outsb
lcall
les
dec
fwait
les
cmpsb
xchg
mov
dec
jge
movsl
inc
adc
nop
xchg
xlat
jns
stos
push
mov
sub
dec
push
fsts
mov
push
por
dec
mov
ljmp
mov
daa
adc
jns
scas
xchg
nop
insl
js
mov
push
xchg
cmp
xor
mov
sti
js
popa
ss
inc
xor
out
jl
xchg
data16
mov
imul
es
in
lcall
ret
imul
das
mov
nop
cltd
mov
sbb
cmc
add
lret
xchg
pusha
sbb
push
lea
fldenv
lret
aaa
ljmp
and
jnp
xor
jle
out
xchg
leave
sahf
sbb
dec
adcl
sub
and
das
inc
mov
and
pushf
pop
dec
cli
aad
pop
daa
mov
or
push
push
jb
mov
sub
xor
add
cmp
xchg
adc
push
mov
dec
xchg
or
mov
scas
add
inc
aam
clc
lea
fidivrs
mov
nop
mov
cmp
mov
aas
add
lods
and
jl
push
clc
push
repnz
add
inc
fisttpl
mov
cwtl
pusha
mov
loopne
iret
subb
pushf
out
outsb
push
cmp
mov
shlb
stos
jns
outsl
ret
outsb
pop
in
inc
dec
out
xchg
data16
mov
movsl
push
sbb
mov
xchg
mov
xchg
xchg
jae
lods
nop
jmp
lock
test
push
bnd
andl
pop
cs
lea
cmp
ret
add
xchg
pop
mov
mov
and
pop
adc
push
push
test
lret
pop
adc
add
xchg
or
arpl
push
jbe
mov
adc
xorl
jo
ja
loope
xchg
popa
and
push
lods
sahf
xchg
xchg
jge
or
push
call
xchg
cli
adc
sbb
xor
inc
sub
xlat
sub
into
das
std
lods
push
push
push
cmp
xchg
hlt
jmp
pop
into
or
adc
mov
pushf
lock
cmp
pusha
pop
push
sbb
insl
pushf
je
xchg
pop
jb
pushf
mov
jo
shl
xor
iret
popf
xchg
scas
inc
daa
sbb
sub
test
test
fdivr
cmc
in
and
jle
inc
xchg
addr16
fadds
xlat
test
nop
sub
push
aam
xor
dec
xchg
sub
cmp
inc
xor
pop
or
pop
cmp
repz
jg
leave
decl
into
mov
loope
imul
cld
icebp
cld
add
hlt
cmp
cli
dec
sarl
pushf
imull
sbb
xor
jle
pop
jge
jne
lea
data16
mov
jmp
movsl
sub
add
js
movsl
or
clc
out
sbb
iret
and
xlat
sub
xchg
dec
and
out
into
cmp
insb
dec
mov
mov
xchg
cli
fwait
push
inc
mov
iret
and
xorl
or
test
inc
fsubrs
data16
add
pusha
mov
and
into
sbb
mov
inc
pusha
mov
or
fs
ret
and
mov
mov
lret
lods
mov
inc
sbb
aam
cmpl
sub
mov
mov
hlt
xor
pop
xchg
std
aaa
movsl
fnstcw
std
testl
dec
daa
adc
add
jnp
insb
mov
dec
into
adc
sub
and
aas
mov
sahf
pop
sarb
fdivl
rep
cwtl
dec
movl
aam
pop
inc
daa
out
imul
clc
pextrw
inc
mov
test
adc
xchg
adcl
cmp
mov
pop
jne
test
imul
or
loope
push
testb
in
cmpb
push
pop
fldt
addl
fadd
cli
jmp
out
and
dec
add
dec
and
sbb
dec
or
cli
int
fbstp
faddl
lods
xor
xchg
dec
in
adc
test
jb
in
push
stos
cld
mov
jnp
shl
aam
das
push
mov
leave
test
push
mov
sbb
jp
xor
das
or
push
mov
jl
jns
push
out
insl
or
leave
jecxz
xlat
adc
or
pop
add
or
push
jo
or
add
and
test
mov
dec
fildl
jl
popa
daa
stos
loope
mov
fiaddl
inc
mov
push
stc
jbe
inc
loope
xor
or
pmulhuw
orl
or
sti
push
stos
sub
sbb
inc
mov
outsb
sub
insb
loop
aad
rep
rcrl
jo
jnp
sbb
inc
mov
movsb
sbb
rolb
push
add
pop
icebp
mov
push
cli
adc
pop
imul
shr
adc
pop
mov
ficomps
cmp
sbb
jl
xor
pop
push
or
or
push
inc
push
fidivs
and
out
rclb
sub
push
and
inc
cli
paddsb
push
mov
push
je
pushf
stc
test
ja
ficoml
add
out
dec
fst
xor
mov
xchg
xor
pop
push
mov
pop
dec
int
xchg
rolb
jecxz
and
cli
loop
movsl
pop
ss
nop
loop
popf
shrl
lock
pop
inc
adc
xchg
sub
or
mov
and
outsl
jne
mov
ja
jl
mov
in
pop
aaa
adc
ficomps
xchg
int
repnz
stos
xchg
mov
mov
mov
push
mov
inc
cmp
les
test
add
mov
jae
sub
push
movsl
jg
pop
jp
push
std
sub
sbb
incb
pop
rclb
gs
shlb
push
mov
adc
sub
repnz
test
mov
adc
lret
dec
adc
or
dec
mov
out
loop
cmp
in
pop
xchg
push
and
sub
imul
daa
push
pop
xor
inc
test
lock
cmp
lcall
loopne
pop
aaa
leave
and
pop
fsubrs
cmp
mov
cmc
jecxz
pop
outsb
lds
adc
cmpsl
pop
outsb
test
mov
adc
xchg
jb
dec
sti
mov
lods
xor
push
or
and
xchg
xor
les
pop
adc
push
push
outsb
ret
leave
loopne
into
lar
scas
outsl
sbb
lret
adc
ljmp
xchg
mov
insb
xchg
call
dec
les
setge
xorl
pusha
bound
cmp
jmp
or
dec
push
jl
mov
jecxz
ret
pop
mov
outsb
cmp
mov
cmp
jns
fdivrl
imul
jp
imul
les
jecxz
sbb
inc
mov
jbe
ret
nop
cs
xlat
mov
adc
and
dec
and
sbbb
jmp
sbb
movd
fwait
adc
pushf
pop
ljmp
xor
or
mov
cltd
jge
scas
test
test
add
call
pop
add
loop
pop
les
mov
cld
and
adc
lahf
jl
jnp
into
sti
mov
je
das
jecxz
cmp
and
in
popa
dec
int
sub
test
gs
arpl
pop
arpl
cmc
or
fsts
pusha
and
fildl
ds
xchg
test
inc
xchg
mov
rep
pop
jne
jb
mov
jno
das
push
sub
mov
jae
cmpsl
cli
lcall
scas
xor
adc
lahf
inc
push
xchg
rol
pop
xlat
push
arpl
in
mov
and
mov
sub
mov
aas
mov
into
mov
inc
pop
mov
daa
mov
stos
xor
cmpsl
push
and
movsb
js
jp
data16
repnz
lret
fbstp
mov
std
dec
enter
ljmp
lret
aam
sub
adc
xchg
jne
xchg
push
sti
mov
push
adc
repnz
add
mov
sbb
jo
mov
jb
les
add
in
out
xchg
roll
jmp
shlb
adc
cmp
nopl
jmp
out
in
inc
lret
mov
int3
jo
or
inc
xor
mov
std
stos
repz
clc
out
sbb
movsb
cli
mov
out
pop
or
inc
lahf
rol
push
out
or
and
mov
cld
mov
mov
in
out
dec
adc
loop
fs
jecxz
lret
inc
cwtl
scas
adc
adc
mov
testl
sub
cld
jno
hlt
add
dec
in
aas
aam
mov
shr
jmp
push
mov
ret
dec
jne
cmp
push
icebp
jl
call
pop
out
mov
mov
loopne
repnz
out
in
js
orl
enter
shl
dec
sub
pop
add
repnz
loopne
jg
add
add
scas
lods
insl
pop
push
cmpsl
add
jb
cwtl
popa
sbb
xor
in
and
fistpll
jno
repnz
icebp
sbb
lock
js
pop
add
mov
popa
add
inc
jnp
hlt
mov
les
mov
nop
jmp
arpl
xor
push
jmp
jp
dec
mov
arpl
mov
mov
mov
inc
es
rcr
jl
jns
sahf
insl
mov
movsl
dec
fstpt
mov
dec
pushf
nop
push
iret
cmp
mov
leave
repz
enter
mov
clc
and
lods
movsb
adc
or
dec
fcmovnu
fistps
or
aad
add
test
xchg
inc
fnstenv
push
fisttpl
sub
pop
roll
in
movsb
lds
push
mov
mov
dec
hlt
out
sti
xor
rclb
roll
adc
xor
in
cmpsb
pop
mov
lea
adc
push
adc
and
cmp
mov
les
aas
scas
inc
and
pop
add
mov
add
dec
mov
stos
out
push
pop
pusha
xchg
cwtl
aas
sub
xchg
std
xchg
addr16
lods
lcall
int3
aas
sti
push
outsb
add
out
jb
imul
jecxz
lret
enter
test
push
pushf
jg
enter
cmp
pushf
ficoms
daa
sahf
xor
addr16
inc
aaa
xchg
pusha
and
int
pusha
bound
movsb
inc
das
mov
mov
push
or
aaa
push
icebp
mov
lods
jp
rcrb
add
clc
enter
inc
jo
cmp
mov
loopne
dec
out
loop
dec
sbb
sahf
pop
push
and
pop
and
out
pmulhuw
inc
or
push
xlat
test
pop
xchg
jbe
cmp
mov
clc
pop
lret
orb
popa
pop
aad
push
xchg
popa
push
sarb
pop
pop
repnz
mov
push
orb
test
xor
or
adc
inc
jl
enter
mov
sub
push
dec
subb
mov
lods
icebp
das
sub
mov
mov
loope
push
imul
xor
mov
lods
pop
bound
call
icebp
fnstenv
fcoms
mov
test
int
inc
imul
and
xor
dec
jae
sub
jne
pop
mov
in
adc
cmp
dec
scas
insb
in
dec
add
or
test
sbb
sub
test
xchg
test
or
lcall
in
mov
aas
mov
sub
sub
loop
les
cmp
jmp
jmp
pop
pushl
ret
repz
mov
pop
enter
cmp
mov
adc
push
mov
and
dec
leave
cs
mov
adc
loop
fisubrl
es
pop
mov
pmovmskb
dec
stos
movhps
push
or
dec
mov
adc
inc
jecxz
mov
cmc
sbb
jnp
jecxz
enter
and
das
in
je
sub
mov
cli
lods
les
push
adc
enter
add
in
inc
cmp
pop
push
xor
out
xor
sub
test
addr16
les
inc
push
rcrl
or
dec
stos
in
stos
cmp
outsb
outsl
mov
xchg
ret
loope
mov
in
rcrb
es
mov
es
in
jno
mov
test
mov
loop
test
push
mov
pop
call
dec
mov
out
jmp
faddl
sbbb
mov
sbb
inc
loopne
pop
into
iret
pop
cmpsl
adc
mov
mov
sarb
sbb
jo
data16
jge
dec
xchg
pop
xor
adc
ret
mov
into
or
push
mov
jge
mov
and
xor
mov
jnp
xchg
pushf
inc
mov
mov
mov
mov
cmp
sbb
pop
imul
cmp
outsl
ret
fwait
jge
jg
data16
ret
xor
movsb
fsub
cwtl
push
jmp
movsl
cmp
jae
push
sub
mov
xor
sbb
cmp
xorl
divb
test
xchg
repnz
push
dec
mov
dec
cmpsl
mov
movsl
sbb
test
or
insb
inc
data16
jbe
bound
and
jge
or
jg
jo
push
enter
mov
push
lret
jle
push
push
xchg
adc
pop
lds
pop
or
popa
fwait
inc
lock
fdivrl
dec
push
push
nop
and
lret
sti
jnp
pop
cli
fsts
pusha
cwtl
fbstp
stos
lock
cmpsl
test
mov
in
mov
in
cmp
pop
xchg
mov
push
xor
loope
lock
adcb
adc
jae
push
jp
cmp
orl
fs
cltd
stos
xchg
push
xor
cmp
mov
mov
ds
inc
ror
mov
adc
lret
mov
int
es
push
dec
xchg
push
push
insb
push
sbb
or
js
jg
and
and
scas
loopne
push
xchg
pop
into
cli
xor
cmp
mov
dec
test
cli
sub
adcb
repz
mov
call
push
lods
and
in
sti
jbe
dec
mov
fisubs
cli
fs
roll
add
and
aas
les
xchg
sbb
xor
pop
push
sbb
adc
nopl
data16
or
add
and
aaa
cmp
cmpsl
xchg
test
fwait
repnz
sbbl
dec
arpl
dec
scas
das
mov
popa
push
xor
mov
cwtl
mov
xlat
imul
mov
sbb
rcl
cmp
movsl
lahf
rcrl
out
dec
int3
inc
push
dec
loop
icebp
dec
outsb
mov
int
addl
aam
jo
loopne
outsl
loop
and
jmp
pop
out
sub
mov
lock
data16
stos
mov
fs
mov
filds
orb
push
xchg
fdivp
mov
or
lock
xor
xchg
lea
cmc
repnz
xchg
jle
sub
jge
into
jp
aas
loop
sub
inc
sbb
inc
xor
inc
fs
dec
mov
ret
shl
insl
rcr
jmp
inc
inc
inc
push
lcall
pop
xchg
lods
bound
or
push
pusha
mov
adc
push
push
cmpsl
iret
mov
sub
jg
loopne
mov
roll
inc
icebp
leave
adc
test
in
pop
jno
cmpsl
gs
xlat
std
lds
jno
shrb
or
lret
dec
mov
xrelease
pop
mov
adc
enter
popa
lea
jle
xor
jne
aad
mov
push
lret
xchg
aam
add
rorb
dec
gs
insl
jmp
jl
and
push
sbb
scas
inc
dec
std
inc
mov
inc
lcall
fcmovb
add
jo,pn
xor
mov
int
mov
cmp
lret
adc
inc
es
sti
cmp
daa
fmuls
push
rcrb
ficoml
xchg
getsec
fwait
pop
js
mov
lea
mov
cmp
incl
out
push
mov
xor
cmp
lods
scas
xchg
xchg
jge
mov
lock
sub
adc
push
sarl
jbe
ljmp
out
rclb
vphsubbw
xchg
mov
in
dec
push
xchg
mov
jle
rcr
fstpl
test
xor
in
mov
fwait
pop
push
add
and
inc
inc
sbb
xchg
push
daa
sub
jno
fnstenv
out
pop
push
pop
fidivl
jmp
and
xchg
inc
in
mov
fxch
dec
test
pop
fidivrs
sbb
adc
cli
sbb
xchg
xchg
and
xchg
mov
ja
jmp
mov
popa
cmpsl
add
mov
fildll
mov
jne
inc
and
pop
push
icebp
jp
or
jo
push
fldl
inc
mov
mov
xchg
sub
xchg
sbb
and
loop
dec
sbbb
loope
enter
add
movsl
pop
pop
inc
repz
andb
push
fcomps
lret
cmp
movsb
roll
aaa
lret
mov
sub
dec
aaa
mov
data16
sub
mov
inc
dec
es
pop
mov
cmp
mov
add
ss
jg
sahf
stos
inc
aad
incb
sti
fiaddl
mov
rol
ja
push
adc
lahf
test
mov
pop
sub
xlat
cmp
cmp
addr16
pop
iret
pushl
xchg
pop
fs
mov
test
jne
iret
jecxz,pt
mov
mov
insb
fsubp
fldcw
cli
pusha
cmp
adc
lods
icebp
jno
aaa
push
stos
nop
pop
int
mov
dec
loop
es
jo
movsl
inc
or
std
mov
dec
jb
mov
mul
sub
mov
pop
dec
and
mov
mov
dec
push
clc
xor
repnz
mov
leave
nop
sbb
pop
cwtl
mov
in
ljmp
cmp
fcomip
jne
xchg
imul
mov
fnstsw
add
cmpsl
scas
test
push
sbb
pop
fucom
das
add
pop
jae
sub
shlb
xchg
push
xor
cwtl
imul
lahf
and
pop
stos
xor
lret
sahf
nop
push
test
lcall
jmp
xlat
ljmp
lea
add
mov
in
ss
outsl
jno
std
inc
pop
add
loopne
mov
lock
jae
pop
mov
leave
or
push
int
xchg
mov
add
enter
cli
pop
cmp
stc
lods
xchg
lock
pop
sahf
xchg
movsl
les
jne
cwtl
jo
loope
imul
mov
imul
rol
fimull
mov
jmp
adc
sub
mov
leave
xor
loopne
sub
js
ds
or
movsl
push
int3
mov
sbb
push
mov
outsb
inc
ss
xor
int3
sahf
popa
ret
mov
stc
in
sbb
add
adc
add
mov
insb
ja
and
adc
lea
xor
pop
jo
push
sub
jmp
loopne
or
loope
mov
mov
sbb
xorl
xchg
push
shld
fbstp
dec
js
lds
lds
jl
inc
out
cwtl
sbb
cmpsl
aam
jns
xchg
and
adc
ret
xchg
mov
push
movsb
fisttpll
rorb
adc
cmp
inc
stos
mov
xor
mov
push
call
lcall
jg
pop
movsl
xchg
pop
out
cmpsl
fldenv
fcomp
sarb
into
cli
lret
adc
xchg
pop
pop
les
fmull
xchg
mov
and
leave
and
and
xor
or
loope
dec
jnp
es
iret
adc
dec
push
aas
stos
jmp
out
out
jle
rclb
mov
adc
cwtl
repnz
inc
or
fstps
mov
jmp
incl
xor
std
cmpsl
mov
in
mov
mov
lss
add
push
nop
add
lahf
mov
daa
jl
movsb
adc
sbb
andl
sub
mov
cmp
cltd
xchg
in
sub
fwait
cld
dec
and
lods
jbe
adc
mov
cmc
push
sti
scas
fsubrs
cmpl
rorb
fwait
jge
mov
and
pop
adc
inc
outsb
lods
xchg
jp
mov
cmovl
neg
cwtl
outsb
lahf
cltd
pop
cmpsl
mov
mov
test
insb
fcmovnu
jns
aam
test
outsl
pop
cmc
xor
cwtl
xchg
dec
jb
outsl
sub
mov
fwait
aaa
shrb
sub
ret
xor
das
pop
sub
push
xchg
fisubrs
mov
jp
cltd
cwtl
add
jmp
cs
sarl
std
imul
sub
sbb
loop
sub
dec
sti
jne
fnstenv
jae
rolb
negl
xchg
pop
sbb
into
sub
jg
add
mov
std
insb
test
sbb
xchg
inc
pop
icebp
incb
pop
out
gs
scas
fistpl
add
push
mov
inc
xor
xchg
jnp
ljmp
int
inc
imul
je
jmp
push
daa
jge
or
add
inc
jg
stos
add
lret
jge,pt
dec
gs
mov
mov
lods
imul
ss
xchg
sti
add
inc
pop
pop
inc
push
mov
bound
push
lcall
cld
cmp
aas
lret
xchg
adc
xchg
xor
inc
ret
push
arpl
sub
add
push
add
testb
xlat
mov
mov
inc
and
pop
loop
or
and
xchg
push
pop
mov
sub
xchg
push
mov
push
sub
fs
imul
js
cmp
gs
adc
xor
jge
stc
mov
adc
push
sub
in
cmp
add
iret
jge
or
sbbl
sbb
add
pop
pop
cmc
add
dec
dec
xor
mov
push
notl
std
and
add
hlt
ds
push
xlat
xor
cs
testl
inc
xor
les
pop
xchg
loopne
movsb
imul
push
jecxz
shlb
cli
fildl
addr16
xor
nop
aaa
push
lock
mov
pop
jno
movsb
jae
fsubr
push
mov
mov
jns
sub
inc
pop
mov
xor
in
push
loopne
pop
add
and
popa
enter
adc
push
jl
ds
aam
mov
int3
mov
flds
add
cs
sti
sti
roll
cmpsl
loop
inc
mov
pop
mov
cs
daa
dec
scas
ljmp
mov
push
sarl
inc
xor
fwait
pop
mov
nop
mov
imul
les
push
jae
repnz
sbb
addr16
popf
mov
out
pop
ja
cmp
icebp
add
cmpsb
call
inc
xor
xchg
ja
sub
inc
cmpsl
sub
jp
out
inc
jecxz
jmp
mov
sbb
sahf
cmp
jno
fs
movb
sti
xlat
adc
mov
in
sub
push
xchg
push
or
sub
lret
xchg
cli
cmpsl
jmp
sub
push
xor
inc
shll
fsub
pusha
xchg
aad
inc
shl
cli
add
testb
cmp
dec
pop
mov
ja
sub
hlt
adc
inc
or
mov
movsb
xchg
sbb
mov
out
jp
cmp
adc
repz
in
adc
adc
and
xchg
adc
mov
and
add
mov
xor
lea
fwait
jae
fisubl
sti
add
add
ds
push
or
xchg
insb
fdiv
dec
das
or
or
sub
or
insl
sbb
lods
stos
jb
loopne
or
jo
mov
arpl
jg
adc
jb
lea
xor
lahf
xchg
cmp
jae
and
add
fwait
bound
mov
push
and
push
sbb
sub
cli
jmp
lcall
ja
sti
sbb
mov
popa
push
push
or
dec
mov
mov
jbe
cmp
popf
ror
add
mov
jecxz
mov
jl
push
daa
adc
mov
icebp
sbb
mov
in
gs
cmp
fs
cltd
lcall
push
shl
pop
dec
out
cmp
aaa
out
loop
dec
rorl
outsb
pop
inc
lcall
push
mov
adc
jo
fisttpl
adc
jo
push
push
jp
cld
and
push
or
push
inc
lea
adcl
loopne
es
das
jno
dec
movsl
fsub
xor
add
cmp
ja
and
in
jge
stos
fiadds
dec
fucomi
cltd
inc
leave
mov
rcl
idivb
push
stos
pushf
and
mov
out
psubb
push
push
xchg
idiv
or
cwtl
outsl
movsl
repz
mov
fcoms
enter
test
sti
dec
and
mov
movsl
adc
jecxz
aad
lret
shrb
hlt
pop
dec
lret
pusha
jl
mov
pop
mov
mov
jl
in
jb
add
add
outsb
add
add
dec
mov
cld
stc
loop
cmc
xlat
into
inc
lods
ss
sub
sbb
pop
sbb
cli
jne
dec
jnp
jl
pop
int
pop
or
mov
push
push
sub
pop
jb
jb
jb
xchg
jae
jo
xlat
jne
fildll
outsl
popa
and
add
jno
dec
aad
adc
xchg
test
into
mov
push
lea
in
xchg
data16
xor
aad
xor
jmp
mov
pusha
xchg
cmpsl
and
or
sub
xchg
mov
or
push
jle
xchg
mov
sbb
lds
cwtl
test
adc
xor
imul
movsb
adc
push
push
inc
daa
fs
repz
mov
popf
mov
cmp
fsubl
or
and
fwait
das
fwait
sti
mov
loop
out
clc
xor
adc
add
cmp
sarl
leave
cld
adc
fsts
jge
xchg
push
xor
imul
push
mov
sub
lret
and
adc
sub
push
pop
xchg
movb
cmp
mov
into
jge
shll
mov
mov
pop
xlat
cwtl
mov
jmp
xlat
sub
mov
fwait
push
sbb
aas
adc
aam
fldl
call
mov
dec
pop
pop
arpl
out
push
stc
xchg
scas
repnz
jge
cmp
dec
icebp
pop
ds
imul
imul
adc
mov
frstor
in
or
icebp
cmp
imul
mov
xchg
shrb
pop
cld
mov
adc
mov
fs
dec
jl
xchg
repz
mov
add
ret
or
and
outsl
sbb
sbb
pushl
lods
sub
jo
leave
ret
push
andl
sbb
int
cmpsb
mov
imul
pop
pop
insb
mov
inc
outsl
out
sbb
cltd
outsl
xor
cmc
inc
inc
pop
out
xchg
lds
sbb
ss
std
pusha
push
bnd
aas
movsb
fldt
jge
inc
xchg
in
fdiv
or
mov
push
fistpl
cmp
and
pop
cmc
ret
lock
xchg
jle
stos
cmc
sub
sub
enter
mov
xor
or
imul
fsubr
mov
jb
pop
lahf
add
rolb
mov
inc
mov
cmp
fldl
jb
xchg
dec
inc
jnp
lahf
push
pop
lods
inc
adc
gs
add
data16
outsb
jo
and
mov
repz
bound
dec
dec
daa
sub
mov
jl
lds
fdiv
mov
je
rclb
leave
js
je
leave
pop
jl
jle
dec
dec
aas
sar
adc
pop
and
mov
dec
test
in
roll
bound
pop
fwait
adc
add
sub
leave
sarl
sbb
xchg
repnz
test
pop
jns
pop
inc
loop
sub
mov
adc
push
gs
das
sbb
rorl
es
shr
pop
push
dec
mov
dec
icebp
xor
jp
jnp
cld
in
fdivr
dec
jg
std
or
enter
or
das
test
loop
sbb
push
xorb
in
shlb
mov
insb
movsl
rorb
mov
or
leave
jae
imul
cmpsb
or
mov
lea
xchg
or
jle
xchg
fsubrl
xor
lods
mov
in
movsl
test
xlat
daa
stos
add
fxtract
lret
xchg
cld
ret
add
pop
pop
in
xchg
mov
sahf
aaa
test
in
xlat
add
xor
ficompl
out
inc
or
jo
mov
cmp
bound
inc
je
orb
notb
in
xchg
imul
sbb
loope
or
hlt
repnz
js
shll
fld
and
mov
inc
sub
negb
test
push
in
or
pop
add
addl
rcr
in
xor
fcoms
test
mov
prefetchwt1
test
stos
aam
fmulp
or
push
cmp
inc
mov
sub
pop
scas
mov
popa
xchg
rcrl
sbb
mov
or
cmp
enter
xchg
pop
push
fs
push
mov
scas
mov
je
push
cltd
icebp
mov
cmpsl
mov
mov
pavgw
into
imul
adcb
cmpsl
into
ljmp
es
or
aam
cmp
xchg
in
iret
inc
pushf
btc
mov
lock
mov
lret
mov
jg
sbb
jae
std
jae
fnstenv
lods
js
mov
cltd
dec
jg
call
jle
stc
shlb
xor
lahf
out
push
fstl
pop
cld
jae
sub
adc
inc
fdivrs
out
mov
addr16
push
subb
stos
push
sub
xor
into
cltd
shlb
mov
inc
pop
data16
push
out
pop
out
call
testl
pop
divl
jg
in
or
cltd
addr16
mov
imul
mov
jb
rcrb
dec
jno
push
out
aam
jmp
fstl
and
inc
std
clc
ss
adc
out
popf
ud1
pop
cmp
push
test
jns
mov
dec
gs
mov
subb
js
adc
jne
sbb
test
mov
sti
mov
jecxz
or
cmp
imul
mov
addr16
shll
jmp
add
mov
fiaddl
lods
xchg
adc
or
aaa
in
outsl
adc
mov
cmpl
xor
sub
push
adc
mov
mov
insl
push
stos
rorb
and
push
mov
add
and
shr
aas
leave
fbstp
push
cmp
inc
pop
xor
mov
xor
int3
adc
cmp
rcrl
push
mov
sub
loopne
test
ljmp
pop
cld
cwtl
xchg
xlat
pushf
mov
test
pop
mov
out
cld
xchg
and
sahf
or
std
xchg
or
mov
fldl
push
movsb
xor
dec
lret
push
sbb
idivl
dec
bound
inc
enter
enter
xor
sub
xchg
movsb
mov
xchg
inc
dec
adc
pop
adc
cwtl
mov
pop
shlb
mov
stos
and
add
psubw
out
and
lcall
imul
xchg
stos
call
shl
lods
sbbb
dec
mov
fldl
or
addr16
xchg
fnsave
inc
int
dec
inc
pusha
leave
stos
jne
fidivs
push
inc
mov
andb
aas
movsl
jns
add
loopne
int3
in
mov
cmpsb
and
dec
xchg
jno
inc
dec
pop
enter
lret
ret
mov
out
fsubrl
xlat
rclb
shl
cmpsb
xlat
xor
sbb
cmc
not
and
dec
lcall
cwtl
repz
or
daa
mov
adc
push
and
int3
push
out
stos
or
cmp
add
gs
loope
add
sub
pop
rorb
and
and
test
sbb
incb
jle
scas
sbb
out
imul
add
in
mov
mov
push
jno
adc
gs
hlt
out
pop
scas
insl
mov
ret
dec
sbb
ret
icebp
out
lds
pop
xor
push
clc
scas
mov
scas
pop
mov
enter
xchg
xor
leave
cltd
pop
mov
std
out
add
loopne
cld
fcmovb
ss
inc
pop
xchg
repnz
xor
adc
lcall
mov
ror
push
mov
movsl
lds
sub
ret
sbb
add
dec
aam
sub
scas
push
popa
out
scas
xchg
push
stc
pop
lret
in
add
lea
or
int3
xor
jb
and
add
pop
lock
lret
ret
jmp
outsb
mov
lods
dec
jnp
or
push
enter
xor
push
in
test
ja
inc
or
imul
outsb
clc
ret
divb
testl
icebp
fmul
mov
or
sub
sarl
in
xchg
add
push
xor
or
jle
jge
sbb
pop
sti
fsub
rcl
mov
cmc
mov
loop
adc
inc
mov
sub
pop
les
mov
int3
jg
pop
and
jbe
test
xchg
jecxz
add
dec
pop
or
cli
sar
jb
jl
cmp
dec
cli
xor
cmc
sbb
mov
cmpsl
add
cmc
fisubrl
mov
mov
dec
xchg
push
test
sbb
jmp
es
dec
dec
les
inc
movsl
insl
jecxz
push
push
adc
mov
popa
push
sub
dec
out
pop
shll
ljmp
icebp
lret
sarl
and
adc
fisttpll
xor
mov
fs
jge
cmp
jb
or
test
das
in
add
mov
jno
imul
lret
loope
jmp
inc
cmp
lcall
xchg
popf
subb
push
or
popa
inc
arpl
add
ret
push
out
in
mov
aaa
scas
arpl
ljmp
mov
aas
and
mov
pop
in
and
mov
sahf
mov
add
scas
popf
out
stos
outsl
dec
and
push
xor
ja
push
ja
sub
mov
add
mov
mov
sbb
cld
aad
cmpsb
push
add
mov
sub
pop
stos
fcoml
fistps
dec
sub
push
mov
pop
cmp
or
aas
mov
stos
int
cmpl
orb
outsb
lods
aaa
outsl
fdivrs
sbb
scas
xor
scas
out
pop
and
push
adcl
adc
dec
inc
push
pusha
repz
inc
lock
mov
mov
xlat
dec
shl
xchg
enter
jno
pop
xlat
mov
xor
xchg
xlat
dec
movsb
or
cmp
adcl
pushf
xchg
lahf
cmp
loop
fs
pop
jl
cmp
out
pop
add
popa
ljmp
lds
add
dec
push
xor
adc
pop
mov
mov
sti
cmp
out
xchg
lahf
rcrb
lret
ss
mov
jp
stos
fs
clc
loopne
loopne
xchg
jns
jmp
and
sub
jp
cmp
les
ljmp
out
fucomi
or
mov
or
test
sahf
add
iret
das
jae
or
xlat
xor
out
mov
movb
sub
sbb
or
orb
xchg
mov
ficoms
rcll
mov
arpl
leave
inc
dec
fbld
jg
imull
add
dec
fildll
lret
dec
xchg
mov
and
inc
and
cmpsb
mov
movsb
fidivs
roll
jmp
mov
pop
xor
repnz
out
push
xor
cs
jmp
cmp
out
pop
out
push
int
lahf
cmpsl
pop
outsb
jnp
mov
mov
and
loop
adc
inc
mov
aad
push
push
sbb
jg
scas
and
int
inc
mov
std
dec
ficoms
mov
cld
popa
mov
testb
push
push
fxam
sbb
jae
lods
jbe
cld
inc
mov
cmp
dec
roll
lods
inc
xor
xor
ljmp
ja
push
add
mov
rcr
jne
mov
nop
cmpsl
push
int3
arpl
dec
dec
jns
sbb
int
sbb
inc
dec
mov
push
les
dec
insl
xchg
call
roll
xor
dec
pop
jae
mov
mov
inc
ja
sbb
pop
outsl
pop
xchg
sub
pusha
mov
xor
lcall
sbb
xchg
cmp
mov
orl
shl
xchg
xchg
mov
loope
mov
aam
sbb
inc
scas
icebp
xchg
je
popa
ret
stos
sti
mov
push
push
cmp
xorb
cmpb
cmp
fsubl
loopne
out
cmp
fistl
les
or
ret
jge
jl
stos
fdivrl
jnp
adc
dec
or
arpl
xchg
xlat
out
insl
pop
mov
cmc
je
mov
rorb
sbb
and
aad
aad
out
cltd
stos
mov
sub
adc
jns
cmc
mov
outsb
lods
xchg
mov
icebp
mov
rolb
pop
arpl
in
xchg
xchg
cmp
repnz
fstp
and
cmp
jg
jle
xlat
push
das
mov
jbe
gs
cltd
daa
sub
decl
push
stc
pop
out
pop
pop
rcl
inc
imul
rclb
in
ljmp
jae
sbb
xchg
mov
test
mov
mov
out
sti
ffree
out
jno
xchg
push
negl
pop
cli
sbb
lcall
adc
jne
test
fxtract
mov
jmp
mov
jecxz
mov
jmp
lahf
xor
ret
sti
jg
fistpl
add
out
pushf
push
nop
xchg
mov
xchg
shrb
jne
jecxz
insb
sbb
inc
add
subl
sbb
pop
adc
out
xor
adc
test
cmp
test
mov
cmp
insl
lret
lret
mov
mov
fs
mov
push
je
lea
popa
mov
aas
je
or
int3
push
add
in
mov
mov
mov
cmpsb
lods
test
cmc
jp
push
lret
mov
mov
lds
xor
int
jmp
in
jle
push
lcall
jmp
fistl
jno
adc
nop
adc
pop
insb
dec
xchg
fstpt
sub
push
mov
in
xlat
pop
imul
pop
iret
testl
dec
pop
sbb
je
shrb
cmp
xchg
divl
sub
sbb
aad
les
pop
cmp
or
mov
and
hlt
mov
fisubrl
pop
dec
sbb
imul
sbb
mov
outsl
fdivr
je
add
cmpsl
cltd
aas
dec
push
mov
in
push
out
popf
jbe
imul
sbb
fisttpll
adc
xchg
cmp
jecxz
lods
rcrl
popa
pop
popl
or
out
xorl
inc
leave
mov
cmc
xchg
into
pop
jnp
sbb
shl
pop
adc
dec
adc
sarb
fisttpl
sub
in
repz
gs
loopne
aam
jb
scas
jbe
loopne
je
mov
cli
rcrb
xchg
jnp
sbb
adcl
insb
jecxz
aaa
outsl
je
js
iret
dec
loope
push
loope
call
add
inc
aad
push
nop
pop
jno
lock
pop
mov
insl
ljmp
lods
fwait
gs
fimuls
ja
ret
pop
xor
xor
add
dec
daa
push
fidivs
stos
pop
or
jp
xchg
int3
in
les
cmpsl
or
cmp
enter
leave
dec
out
sub
lret
idiv
fwait
mov
movsl
sar
mov
push
xchg
cmp
sub
mov
jl
sub
pop
repz
outsb
pusha
inc
lcall
das
cmp
gs
push
popf
and
xchg
into
test
push
std
jae
repnz
cmpsb
adc
inc
ds
inc
xchg
adc
or
jo
inc
or
int3
adcb
insb
push
sub
pop
xor
mov
add
fucomi
cmp
dec
setns
das
aad
adc
push
add
inc
movsb
inc
xor
jmp
int3
mov
xlat
test
cli
mov
dec
mov
les
addr16
dec
das
mov
jmp
in
push
repz
jle
pop
xchg
es
scas
fwait
mov
arpl
cmpsl
cld
in
dec
popa
and
je
mov
xor
push
or
test
test
inc
fidivrl
xchg
adc
push
daa
mov
xchg
in
cmc
jb
scas
repz
or
xor
hlt
adc
mov
mov
test
jo
lret
cmp
push
je
sub
pusha
jmp
cmp
or
lretw
bound
jge
pop
rcr
jnp
sbb
lret
dec
inc
adc
bound
test
cld
ret
lods
xor
xchg
pop
pusha
mov
in
int
jp
jecxz
mov
pop
fwait
cs
mov
dec
xlat
or
jp
mov
adc
std
xor
out
mov
cltd
mov
scas
ja
add
xchg
sbb
cmp
shll
test
dec
aam
push
xchg
cmp
jmp
test
inc
es
mov
gs
aam
jno
mov
jge
sub
adc
stos
cwtl
subb
pop
sbb
roll
cmpsb
dec
add
mov
inc
jns
fwait
scas
mov
aaa
inc
mov
adc
sub
cmpsb
mov
mov
ss
and
inc
int3
mov
scas
add
mov
mov
hlt
mov
inc
dec
mov
fwait
and
icebp
mov
pop
fnstsw
mov
mov
imul
fwait
inc
pop
mov
out
dec
inc
add
sbb
pop
test
outsl
popf
pop
push
cmp
ret
repz
repz
enter
mov
sbb
sar
sub
test
cwtl
fs
and
repz
mov
repz
sbb
out
mov
pop
sti
iret
pop
or
ret
jmp
pop
xor
in
dec
xor
inc
dec
sbb
nop
je
shll
jnp
mov
shr
or
mov
pcmpgtb
or
sub
xor
mov
mov
mov
js
lret
rcrb
cmp
pop
mov
aas
leave
call
adc
push
js
sbb
loope
ljmp
inc
sub
mov
adcl
jns
inc
jne
dec
fmul
mov
jae
imul
xor
repz
cld
mov
sub
xor
push
cmp
loopne
cmpsb
push
or
aaa
popa
bound
cmpsb
sti
ljmp
aas
test
or
xchg
pop
out
out
sub
loope
shll
jp
or
fwait
jp
mov
jecxz
xchg
dec
jmp
xchg
mov
pop
jnp
xchg
xchg
and
test
outsb
inc
les
jbe
dec
addb
add
lods
cmp
imul
jae
mov
ljmp
out
lods
xchg
and
inc
add
fcomps
loopne
cwtl
fstpt
gs
aam
loop
ficompl
pop
lret
pop
mov
mov
gs
mov
sbb
lret
cmp
mov
inc
mov
int
and
dec
cmpsb
mov
adcl
and
popf
bound
stos
jae
int3
jle
shrl
and
mov
lea
icebp
jae
push
subb
push
xchg
shl
jb
adc
dec
sbb
lahf
xor
sbbw
mov
cmpsl
or
inc
cwtl
out
stos
mov
cmp
in
sbb
loop
or
orb
inc
jno
das
pusha
push
jb
lahf
shll
test
movsb
adcb
rorb
iret
inc
stc
jb
jp
gs
mov
ljmp
aaa
lret
pop
aas
data16
cmpsb
lods
lods
lods
mov
fsub
fbstp
jb
add
ss
push
lds
out
jle
cld
lret
xor
jo
icebp
loopne
mov
pop
push
imul
and
int
in
adc
sbb
push
imul
mov
fwait
decl
mov
mov
cmc
add
jp
pusha
lcall
pusha
xchg
xchg
sub
lds
clc
call
cmpsl
sti
sbb
xor
jb
dec
repz
jge,pt
in
les
decl
adc
aaa
mov
rcll
sar
xchg
enter
rorb
fidivrs
push
mov
repnz
sub
aas
mov
dec
scas
jle
outsl
xchg
loope
dec
imulb
loopne
xor
mov
or
or
cwtl
mov
add
add
push
lret
fsubrs
daa
in
fldt
stos
jecxz
in
imul
insl
adc
leave
cmc
xchg
fs
xor
cmp
mov
jno
mov
inc
xchg
test
scas
cmp
adc
rolb
mov
outsb
add
lahf
in
pslld
divb
inc
outsb
mov
int
loopne
adc
and
in
loop
mov
pop
xlat
cmpsl
stc
sub
push
in
push
mov
mov
sub
xchg
les
cmp
xor
cmp
insl
adc
xchg
jl
je
mov
pop
xor
stos
mov
jg
lds
xor
or
adc
jle
lock
inc
push
add
jmp
subl
test
xor
mov
xchg
sbb
xchg
xor
out
mov
loopne
into
inc
xchg
mov
cmc
mov
out
sbb
hlt
mov
pusha
fsubrp
add
fbld
xor
sbb
jmp
adc
mov
fbld
push
xor
sahf
outsl
adc
push
insb
addr16
inc
jg
sti
das
jge
and
ss
xchg
mov
jl
jg
pop
jge
cmp
pop
jo
fisubs
dec
rcrb
insl
sahf
jmp
fidivrs
jecxz
fildl
sub
push
aam
int3
cmc
xchg
pusha
mov
fcompl
push
mov
or
jecxz
xchg
jns
popf
cmpsb
xchg
les
jp
or
jl
xor
adc
mov
test
les
dec
mov
scas
scas
mov
mov
add
inc
sbb
js
cmp
or
addb
inc
aas
sti
aam
push
add
js
mov
cmp
xorb
jnp
jecxz
test
ss
lcall
fsubrs
mov
and
xor
xchg
pop
fistl
fistl
xor
repz
push
pop
xor
pop
sti
aam
out
mov
outsb
jne
sub
add
jge
cmp
fsubp
fstpl
xchg
insb
addr16
add
loopne
adc
cmp
sbb
das
cli
idivl
inc
mov
pop
pop
leave
mov
mov
or
push
mov
and
test
sbb
cmp
jae
add
icebp
pop
cs
clc
imulb
jmp
inc
mov
dec
outsb
sub
xchg
xor
bound
jmp
imul
loop
addr16
mov
or
or
pushf
xchg
das
out
lds
mov
into
and
pop
movsl
mov
cmp
gs
movsb
mov
sahf
lods
repnz
pop
and
sub
sahf
xor
inc
or
jns
lret
in
adc
dec
std
mov
mov
jle
adc
or
shll
xchg
sbb
fcoms
idivl
sbb
loopne
ja
or
fidivrl
sarl
test
dec
jae
sahf
dec
nop
insl
das
jle
jno
sub
pop
mov
mov
stos
fmul
xor
push
les
cld
fsts
lret
cwtl
fisubs
daa
and
out
bound
mov
sub
out
es
inc
stos
sub
cmp
cltd
mov
lock
cmp
iret
mov
xor
mov
xor
xchg
movsb
scas
pop
jge
sub
js
jno
sarl
fldt
jbe
dec
call
or
popl
bnd
adc
push
mov
int
fnstenv
daa
adc
leave
pop
push
bnd
cli
sbb
jg
lods
cmp
inc
fdivrl
lds
mov
bound
xchg
push
pop
fiaddl
popf
pop
jmp
sbb
mov
testb
sti
lcall
inc
xchg
mov
movsb
call
shr
jp
aas
lcall
and
pop
mov
push
into
dec
cli
mov
fistps
test
mov
mov
and
mov
or
sbb
fsts
cmp
std
fidivl
mov
sbbb
jnp,pn
lock
dec
fwait
es
cmp
aad
iret
aaa
sub
into
pushf
xchg
mov
roll
mov
hlt
push
cli
cmp
fmul
fptan
iret
cmp
cltd
stc
loopne
xor
mov
popa
aaa
jne
jo
sbb
dec
jge
inc
adc
xchg
or
aad
imul
mov
xchg
je
add
cmp
inc
and
insl
push
fisttpl
adc
and
popf
sbb
les
pop
int
inc
cmp
xor
mov
ljmp
mov
push
xchg
mov
pop
in
into
mov
pusha
arpl
out
ljmp
mov
sbb
fldl
push
jmp
mov
ds
jecxz
lods
xorl
popf
push
push
jl
push
rorb
shrl
ss
mov
pop
int3
insb
sub
push
lods
imul
je
mov
or
outsb
xlat
in
aad
jp
mov
rcr
pop
sub
aad
jns
and
fucomi
js
jmp
mov
pop
out
mov
div
adc
aas
dec
push
push
lock
jbe
sub
mull
pushf
sbb
mov
or
daa
int3
push
mov
push
loop
mov
add
push
mov
je
xor
fistpll
push
popa
nop
out
gs
mov
adc
jae
imul
push
mov
xchg
fidivl
adc
aad
xchg
int3
sarl
dec
pusha
pop
iret
loopne
rorb
fldl
or
les
notb
adc
cmp
add
rolb
adc
mov
pop
pop
add
fidivrs
inc
addr16
test
jns
dec
and
mov
or
mov
mov
iret
cmp
ret
out
mov
les
jns
and
mov
add
dec
das
cld
jmp
in
adc
push
jecxz
add
adc
xorl
push
ret
sub
icebp
in
shrb
mov
loope
mov
mov
repz
test
popa
dec
aam
inc
xor
movsb
pusha
and
push
add
sbb
clc
icebp
cmc
movsb
adc
adc
lds
push
lea
push
jns
push
push
in
sub
or
or
int3
ret
sbb
sbb
add
adc
rcll
inc
lcall
in
bound
mov
scas
test
cmp
push
orl
pop
inc
add
jbe
lret
mov
pop
sbb
enter
std
mov
insb
cltd
push
pop
mov
jnp
push
test
lods
lock
push
negb
xchg
inc
sub
mov
and
or
xchg
hlt
adc
mov
jbe
popf
adc
sahf
mov
rcrb
mov
or
push
sub
aaa
icebp
mov
pop
and
repz
push
jg
enter
mov
push
mov
jmp
adc
out
or
test
mov
test
xchg
mov
jmp
mov
test
jae
pmaddwd
data16
scas
jnp
aam
add
cmpsl
sbb
shlb
cmpl
jg
out
ss
in
in
ret
jg
xor
push
ljmp
xchg
push
xchg
jnp
fidivl
popa
scas
repnz
out
xchg
mov
mov
xchg
lods
int3
bound
push
movsb
push
lret
daa
inc
and
fs
xchg
daa
mov
aaa
xchg
inc
fidivrl
mov
jb
lret
mov
test
pop
stos
pop
pop
mov
pop
imul
inc
fs
mov
bound
xor
xor
cli
loope
sbb
test
cwtl
xor
mov
adc
push
stos
into
xor
mov
adc
cwtl
es
sbb
lock
add
sub
cmp
inc
les
add
dec
rol
xchg
adcb
cmp
jne
add
sub
bound
mov
adc
idivb
xchg
xchg
push
jmp
xchg
mov
cli
xchg
cwtl
mov
mov
shrb
inc
call
ret
les
pusha
mov
inc
jbe
pushf
or
shlb
push
shll
lock
and
js
mov
push
lea
iret
js
shll
jmp
xor
adc
popf
sbb
mov
sti
mov
push
int3
fimull
pusha
nop
pop
push
sub
pop
push
inc
and
fistl
lods
aam
shl
add
sub
dec
mov
jns
dec
or
mov
xor
sbb
cmpsb
dec
push
dec
imul
fwait
subl
hlt
xlat
lea
adc
pop
sbb
leave
ss
add
xchg
xor
mov
and
push
jecxz
dec
jmp
aas
sub
adc
jp
cmp
inc
mov
sbbl
jmp
orl
add
push
je
mov
pushf
and
cmpsb
inc
cli
movsb
push
ja
mov
jae
clc
add
pmaddwd
mov
push
fs
push
je
ss
inc
call
sarb
fucom
push
lds
insb
mov
xchg
imul
repnz
jb
ss
sub
pop
add
dec
adc
fildl
push
hlt
mov
push
mov
mov
add
fdivrs
repz
xlat
cmp
data16
sbb
inc
add
sub
mov
lahf
xor
xor
add
push
cmp
mov
fnsave
imul
mov
mov
mov
or
notl
adc
sbb
pop
bound
xchg
jge
loopne
push
sbb
inc
imul
adc
xor
cmc
mov
fldenv
xor
add
mov
xchg
adcb
sarl
cmpl
push
int
insl
shl
jae
mov
jno
leave
fwait
mov
push
mov
jmp
sarb
das
adc
stos
xor
and
fnsave
aaa
inc
dec
pop
pop
sbb
mov
jl
add
fscale
xor
or
sub
inc
sbb
aam
mov
jge
pushf
jge
into
rcll
test
call
out
jg
push
adc
push
and
mov
lret
or
xor
popf
and
inc
mov
aas
mov
inc
adc
xor
das
pop
jbe
adc
in
fnstcw
into
adc
push
mov
sub
mull
lea
mov
mov
pop
sub
cmp
iret
ret
in
aad
xchg
mov
push
xor
sbb
ret
scas
mov
je
pop
sbb
scas
push
add
mov
lret
fsubl
sti
cmp
popl
aam
sub
xchg
push
out
pop
jb
push
fsubrs
mov
ret
sub
add
push
xchg
ljmp
jle
xor
test
out
mov
ret
je
ss
add
sub
into
daa
lds
sub
jge
stos
dec
push
aam
scas
inc
xor
int
test
scas
inc
imul
cmpsl
pop
stos
push
adc
mov
dec
inc
cmp
xchg
cmp
xchg
xor
inc
mov
shlb
cmp
inc
pop
movsb
js
or
cltd
sti
fs
xchg
sbb
or
aas
mov
shll
addr16
add
push
hlt
std
ljmp
jo
cmp
paddsb
movsl
rorb
push
loopne
lcall
dec
mov
fstpt
xlat
pop
sbb
mov
inc
sub
inc
inc
sub
push
add
lock
mov
bswap
xchg
xchg
mov
out
or
add
daa
mov
clc
or
and
cmp
dec
in
cld
insl
into
test
xor
mov
xchg
mov
popa
dec
fisubrl
and
fcoms
subb
sub
sub
mov
mov
daa
dec
sub
mov
lods
in
je
or
stos
std
xchg
nop
push
aad
or
out
jg
sub
test
movsl
push
shrb
out
psubq
and
shrb
push
out
mov
push
pop
std
pop
cltd
sti
cld
dec
out
push
add
mov
inc
mov
mov
fsub
pop
int3
outsl
cmp
push
or
mov
lds
mov
stos
notl
xchg
out
movsl
sub
fdivp
lret
shl
orl
jmp
dec
adc
cmpsl
cmc
push
fsts
sbb
cltd
or
int
push
pop
mov
fcmovne
dec
cmpsl
xchg
scas
in
lahf
mov
sub
mov
sbbb
dec
repz
cmpsb
pop
pop
ret
dec
jecxz
mov
inc
push
movsl
mov
inc
mov
clc
inc
enter
pushf
pop
mov
inc
std
cmp
pop
fisubrl
jmp
movsb
shrb
pushf
cmp
or
cmpsb
sub
pop
xchg
inc
mov
mov
ret
aam
cmp
das
xchg
and
or
or
pop
fs
pop
jne
in
adc
inc
xchg
scas
xchg
and
add
loop
inc
fxch
pop
add
ljmp
adc
outsl
pop
pop
cmpsl
push
out
xchg
sbb
out
lret
mov
lret
mov
lcall
mov
or
pop
push
mov
push
push
das
std
das
pop
movsl
jecxz
adc
ja
repnz
sbb
mov
loop
mov
in
mov
xchg
dec
cmp
or
cwtl
int
es
push
cmpsb
sbb
xchg
cmp
xor
sahf
sbb
out
mov
inc
sbb
gs
mov
negl
mov
jno
lret
xor
lcall
movsl
sbb
dec
aaa
fnsave
dec
fimuls
xor
lcall
xor
orb
xchg
xchg
mov
mov
into
jno
dec
dec
or
test
xor
addl
cmp
insl
xchg
or
repz
mov
or
jp
xor
adc
inc
lret
sbb
out
jo
cmpsb
cltd
pop
or
cmp
repnz
out
pop
test
and
inc
and
mov
pop
stc
fpatan
adc
xchg
adc
xchg
test
js
add
jl
stos
and
mov
inc
xchg
inc
sub
jb
and
push
test
xlat
call
mov
incl
xchg
jl
test
xchg
jbe
rcll
ret
mov
cs
cld
mov
fldenv
ss
push
jmp
lds
int
repnz
adc
and
fldcw
cld
clc
in
dec
popf
and
stc
movsb
cwtl
std
sbb
and
mov
jbe
and
fs
or
jb
inc
inc
inc
fs
jnp
loop
xchg
jge
call
or
mov
mov
dec
lahf
push
jecxz
jp
scas
dec
push
sbb
mov
imul
pop
out
in
adc
sbb
cmpl
cmpsb
dec
xchg
stc
das
sub
cmp
xchg
jae
jmp
je,pt
or
xchg
cmp
ds
mov
or
cli
les
and
lcall
mov
cmp
lds
out
jno
or
out
cmp
rolb
ret
xchg
out
fwait
setg
push
xchg
cmpsb
jecxz
pop
rolb
mov
mov
out
push
fcmove
mov
scas
pushf
cmp
bound
and
push
sbb
dec
pop
into
scas
dec
push
adc
cs
dec
ret
fwait
mov
add
cmp
pmuludq
push
xchg
jo
mov
jbe
lahf
xlat
push
pop
mov
data16
dec
call
mov
inc
xor
loopne
xchg
push
sbb
mov
repnz
or
test
ror
negl
adc
cmpb
cmp
sbb
dec
idivb
mov
bound
mov
xchg
sarb
push
sub
fsubrs
lret
fildll
xchg
cmp
cmc
or
pop
es
jecxz
sbb
jp
mov
mov
adc
mov
jecxz
cli
add
sbb
add
push
mov
insb
sbb
pop
cmp
outsl
and
jbe
pop
xchg
mov
imul
ja
inc
loopne
iret
push
sub
aaa
rcr
das
jno
sub
rclb
fpatan
pushf
ret
jg
sbb
in
sub
mov
push
cld
shrb
negb
and
adc
nop
cmovg
hlt
bound
dec
sbb
ss
jo
mov
jo
ss
mov
add
pop
insl
jecxz
outsb
les
sub
mov
int3
in
xlat
scas
jmp
push
mov
aad
cmp
leave
inc
lret
les
adc
jbe
and
cmp
ficompl
lea
es
mov
stos
pop
xor
mov
test
ljmp
jle
dec
lea
jbe
sbb
arpl
int
adc
cmp
adc
repz
test
ss
inc
or
mov
mov
ja
mov
adc
pop
inc
sub
mov
iret
movsl
xchg
jg
inc
pop
pusha
popf
or
xor
stos
cltd
sbb
gs
subb
aad
aas
jno
aas
or
dec
out
lret
pop
jg
imull
in
pop
ret
mov
xor
pop
jo
cmp
dec
push
outsl
pop
das
push
jl
pushf
sub
mov
leave
or
xchg
hlt
inc
mov
push
sarb
ret
adc
lock
inc
cmpsl
cmpsl
roll
sub
jne
inc
pop
jnp
imul
dec
adc
xor
jb
and
dec
std
addr16
mov
dec
ds
push
mov
xchg
and
lea
data16
cli
shlb
mov
cmpsl
inc
call
daa
mov
mov
syscall
aaa
fld
test
add
or
cltd
xor
sub
lret
jbe
repz
mov
cmp
fimuls
adc
icebp
mov
dec
dec
mov
sub
repnz
xchg
aas
dec
xor
or
loope
mov
xchg
cli
cmp
add
int3
test
es
mov
scas
push
sbb
test
mov
jne
loop
loop
push
leave
mov
bnd
icebp
jg
inc
or
mov
jae
dec
aad
mov
test
xor
repnz
lcall
sbb
lods
jmp
or
jecxz
dec
inc
lds
adc
xchg
jmp
std
adcl
add
repz
rolb
sub
cld
jecxz
dec
push
jg
jp
ficoms
push
call
test
mov
xor
push
mov
popa
fimull
xchg
sbb
adc
cmp
mov
pop
dec
jp
ficompl
jnp
les
sub
mov
inc
addb
data16
fsubrp
gs
xchg
or
xor
insb
fcmovu
inc
gs
or
cld
pop
fstps
mov
cmp
test
out
call
dec
sbb
stc
pop
loop
in
and
push
dec
push
fwait
lock
sbb
or
aad
mov
int3
int
push
das
mov
fcoml
lret
sahf
mov
sbb
push
arpl
adc
jno
cli
adc
jo
inc
lods
sbb
push
xchg
adc
xchg
ljmp
pop
sub
xor
aas
cmpsb
jnp
mov
ret
cli
daa
xlat
scas
iret
out
pusha
mov
pop
push
mov
jns
cmpsl
cmp
xchg
insb
int
push
push
out
and
sub
and
andb
mov
imul
pop
pop
imul
out
cmp
scas
jns
lods
xchg
jne
clc
add
jl
mov
or
sub
push
div
fisttps
or
cmp
jb
sub
in
jg
aad
mov
adc
pop
rcrl
xchg
in
fsts
sub
ret
dec
std
and
cmp
jne
adc
mov
lahf
push
subb
das
fildll
and
xor
and
sub
in
pop
push
inc
ss
cmp
mov
xlat
pushf
test
cmpsb
aad
xlat
vmwrite
call
lcall
cmpsl
insb
int3
cmpl
pop
leave
nop
gs
in
mov
into
stos
and
ja
jge
xchg
scas
lcall
pusha
xor
push
bound
lahf
adc
data16
sti
push
sbb
push
sub
pop
into
leave
jl
lea
int3
cmp
fimull
es
and
arpl
out
cli
shll
es
xor
lcall
pop
jns
and
pop
inc
add
and
ja
insl
pop
ss
movb
mov
pop
sbb
filds
cmovg
loope
or
insb
jns
out
in
mov
sub
pop
iret
push
call
insb
lahf
pop
adc
cli
push
inc
lcall
or
xor
jb
dec
cmp
xchg
pop
scas
lahf
xchg
inc
test
cmpsb
mov
xorl
cltd
bound
cmp
inc
in
cs
call
push
dec
jle
or
jl
fistps
or
out
and
inc
fcomps
popf
outsb
xor
mov
sub
cmp
dec
outsb
cmp
stos
das
cltd
sbb
push
fld1
jns
pusha
lds
ret
cmpsb
push
fs
arpl
cld
mov
leave
inc
and
sahf
sbb
adc
push
fistpl
aad
jmp
mov
jecxz
mov
mov
movsl
push
sbb
aas
cmpsl
cmp
aas
js
xor
icebp
sub
in
xchg
sarl
idivb
push
insb
mov
inc
popf
jne
pop
push
cmpsl
mov
cmp
addr16
jg
dec
out
mov
mov
jl
movsl
pop
aam
rorb
jmp
pop
insb
mov
iretw
xor
jno
push
fs
jae,pn
loop
add
xchg
jae
movsb
xor
js
das
stc
and
push
push
pop
pop
xor
lock
cmpsb
cmp
and
xchg
push
and
sub
cmpsb
jle
pop
sub
es
add
xchg
lret
fwait
cli
add
cli
jge
inc
mov
push
pop
inc
push
mov
aad
jle
cltd
ret
xchg
push
inc
mov
cmc
mov
ret
notl
adc
cld
xchg
dec
inc
jb
xor
mov
add
push
cmp
push
adc
mov
rorl
sub
xchg
push
insl
ficoms
jp
xor
or
pop
rorb
jp
pop
jnp
in
pop
stos
bswap
cmpsb
sbb
rolb
js
adc
in
adc
sti
rorb
iret
jge
fsts
rclb
stos
lea
aam
shl
mov
enter
aad
cltd
mov
bound
lcall
repnz
and
repnz
xor
les
lock
cmp
das
mov
mov
xor
jo
mov
cli
xchg
adc
lock
fs
insb
cmpsl
loopne
movsb
fidivrl
jno
push
es
sub
push
sub
or
cmp
inc
mov
sahf
add
and
add
sub
xor
arpl
out
pop
mov
arpl
xchg
and
aam
add
lock
jle
lret
enter
or
sub
addl
xlat
xchg
mov
sahf
loopne
pop
aaa
inc
jb
pushf
push
int
mov
add
inc
xchg
test
dec
sub
xchg
stos
jne
test
pop
and
mov
or
pop
jp
leave
lods
pop
aaa
ds
mov
cmp
rcrl
cmp
jge
mov
cwtl
cmp
aas
callw
dec
stc
lcall
mov
aaa
sbb
imulb
in
pop
enter
hlt
and
cwtl
mov
outsl
popa
jno
mov
jmp
mov
or
jo
fwait
add
cli
cmp
insl
loop
std
xlat
mov
fldenv
lds
sbb
push
jnp
mov
mov
repnz
fdivl
fmull
xlat
bound
in
fcmovnbe
cltd
or
das
mov
sub
xchg
mov
cld
push
cmp
es
xor
xchg
cmp
lret
out
push
ds
xchg
xchg
mov
cmpsl
cmpsl
push
push
xchg
arpl
leave
movsl
pop
mov
push
sahf
push
sub
jmp
and
and
sub
and
iret
mov
adc
adc
mov
jb
mov
lret
xchg
daa
adc
mov
jbe
mov
dec
loope
imul
stos
pop
dec
inc
sbb
in
jle
gs
mov
scas
daa
scas
aas
cwtl
ret
adcl
jae
mov
sbb
and
jno
mov
inc
test
nop/reserved
imul
mov
inc
mov
lret
sub
lret
out
bound
jle
inc
xor
int
pop
out
jbe
pop
imul
inc
xor
cld
imul
hlt
and
mov
sahf
aad
mov
ret
mov
cld
fists
xorl
test
clc
add
lahf
sti
jmp
pop
mov
fmuls
xchg
mov
xchg
xchg
xor
and
daa
and
xchg
loopne
cmc
jp
xchg
sbb
and
jg
mov
rcrl
fimuls
mov
fcmove
jle
mov
mov
fcoml
lret
xor
das
mov
dec
fisubrs
dec
into
push
aad
test
jge
mov
and
mov
dec
dec
shlb
lds
or
pop
dec
pop
mov
mov
adc
not
push
int3
and
call
and
jmp
icebp
addr16
push
or
sbb
inc
or
stc
mov
lahf
in
jp
jns
and
inc
pop
or
scas
test
divl
aad
and
rcll
sbb
pop
call
nop
ds
ficoms
outsl
rolb
add
xchg
jge
pushl
mov
popf
lcall
mov
enter
mov
xor
shlb
mov
out
xchg
mov
xor
add
mov
pop
cmp
incl
cmp
insl
inc
mov
nop
sbb
imul
mov
cmpl
mulb
dec
std
add
ss
imull
hlt
lods
cmpsb
mov
movsl
ljmp
mov
scas
adc
mov
dec
xchg
add
outsb
mov
mov
push
pop
and
xor
ss
sysret
lock
xlat
mov
mov
aas
cmpsl
sbb
lea
mov
mov
dec
and
mov
lods
popf
pushf
icebp
sbb
or
scas
out
jge
cld
xchg
sbb
imul
cmp
mov
mov
dec
in
jne
mov
ret
cmp
leave
aas
push
mov
cli
adc
mov
push
mov
lea
push
xchg
mov
sbb
mov
daa
push
outsb
add
cli
pop
out
ret
mov
mov
lret
call
std
aas
jae
repz
sub
mov
ja
inc
aaa
pushf
jne
xchg
push
lret
lods
psrad
and
cmpsl
hlt
bound
mov
test
das
sub
mov
jecxz
cmpsl
lcall
js
ja
pop
xor
jbe
sbb
fstp
add
sub
test
fcoms
jbe
pop
out
dec
push
fisttpll
and
sbb
lock
xor
sub
xchg
inc
jbe
pop
pop
dec
ja
or
xor
leave
andb
inc
jle
fsubrs
ljmp
mov
pushf
jne
ret
pop
data16
jmp
add
aaa
fwait
jge
pop
or
push
sbb
mov
cmp
lret
mov
adc
notl
in
mov
pop
hlt
fbstp
push
xor
fimull
sbbb
and
fcoml
or
loopne
cmp
imul
leave
sarl
mov
sarl
and
scas
out
jno
test
cmp
or
push
sbb
jns
bound
push
mov
mov
push
in
adc
fistpll
or
jl
jle
mov
in
fadds
jae
movsl
xchg
mov
cmp
pop
jns
and
and
hlt
push
insb
push
jns
pushl
sub
pop
cltd
arpl
enter
int3
adc
or
xchg
inc
mov
pop
addb
push
jae
fmuls
jmp
jae
sub
mov
sbb
scas
jg
lods
pop
pop
sbb
loop
sub
xor
cmpsb
jg
jecxz
lds
cs
xchg
mov
out
mov
out
lds
bound
mov
fidivs
das
cwtl
push
lods
out
mov
dec
insb
insl
scas
sub
loop
idivl
xchg
sub
adc
xor
in
in
out
inc
mov
iret
pusha
pop
jb
adc
call
adc
sub
xchg
pop
jno
inc
lret
and
mov
mov
inc
aam
mov
sub
pop
pop
lahf
jecxz
jne
addr16
fildll
pop
sbb
mov
and
outsb
outsb
pusha
mov
in
ret
xchg
nop
lods
mov
jg
test
jmp
fimuls
pushf
sbb
push
in
jb
lods
cmpl
scas
jns
sar
sub
rcrb
js
mov
xchg
repz
add
adc
or
clc
rolb
arpl
mov
push
jo
add
xor
int3
aam
enter
add
out
cmp
mov
jb
dec
outsb
scas
sti
ja
push
inc
inc
scas
sub
les
cmp
cmc
or
lahf
out
jecxz
adc
gs
mov
ret
dec
test
dec
lret
into
pusha
xor
or
neg
adc
dec
cld
outsl
and
pop
clc
cmpsb
mov
cld
jnp
cmp
enter
mov
xor
cmp
xor
mov
xchg
sbbl
cs
cli
in
fucomi
addr16
jmp
call
outsb
adc
js
jns
cmpsl
inc
std
inc
ret
mov
outsb
imul
jnp
enter
xchg
outsb
mov
or
add
push
jb
jp
out
push
pop
add
pop
xchg
pop
and
roll
shll
push
call
ret
lock
fisubrl
in
and
adc
or
scas
andl
xor
shlb
sbb
imul
lahf
mov
pop
lret
jmp
fdivrl
jnp
addb
in
test
outsb
fistps
mov
out
rdpmc
movsb
sub
push
mov
jmp
insb
dec
mov
out
inc
stos
in
pop
ja
aas
cmp
xchg
out
cmp
fs
jecxz
or
ja
fidivl
sbb
fnstenv
jecxz
add
mov
inc
mov
loopne
and
dec
aaa
out
sub
stos
adc
and
pop
sub
aas
scas
push
outsl
sub
jbe
add
loope
fimuls
mov
je
hlt
mov
xchg
adc
aad
fildl
dec
arpl
mov
sub
stos
shlb
mov
imul
enter
out
pop
mov
rclb
ret
or
mov
xchg
cmc
add
xor
insb
add
decl
jl
xor
enter
push
lock
stc
adc
fcoms
ret
mov
mov
and
int3
clc
in
andb
ja
push
rolb
add
lahf
pop
mov
in
data16
sbb
fcomps
les
test
adc
push
dec
xchg
and
xlat
jp
loope
xor
andb
push
mov
mov
cmp
adc
lock
imul
fidivrs
loopne
sub
sub
insb
cmpsl
sbb
pop
mov
add
pop
dec
and
aad
adc
into
cmc
cmp
xchg
xchg
mov
jnp
dec
push
add
aam
mov
ds
fsubp
ja
ss
xlat
xor
mov
jnp
ss
mov
dec
movsb
xchg
ljmp
bound
lretw
jge
mov
sub
push
or
xor
adc
add
lea
push
mov
push
xchg
hlt
pop
mov
pop
jge
adc
sub
inc
loopne
sub
cmp
mov
sub
outsb
leave
mov
jle
push
jmp
push
fcompl
cli
js
enter
push
fsubr
pop
add
outsl
cmp
ja
popa
dec
mov
mov
stos
dec
adc
in
xor
push
js
in
out
shlb
out
fistpll
sbb
jecxz
push
push
sbb
dec
jmp
mov
mov
adc
movsb
adcl
in
mov
fildll
jge
ja
pop
stos
fwait
stos
xchg
inc
shl
sbb
push
rcrb
aaa
pop
push
mov
adc
dec
pushf
in
push
inc
fnstsw
pop
aam
ficompl
fiaddl
gs
enter
xchg
push
ret
leave
popa
fistpl
fwait
leave
adc
sbb
call
loop
lcall
xor
fsts
xor
sbb
xchg
ja
xchg
adc
xchg
shlb
notb
es
add
push
push
movsl
addl
stos
add
pop
out
and
movsb
jbe
xor
pop
pop
clc
movsl
out
outsl
gs
xchg
into
daa
lock
push
fwait
xor
mov
xor
clc
movsl
in
pop
mov
fbld
sahf
adc
push
into
and
pop
pop
xor
nop
ret
icebp
fstl
inc
push
gs
pop
fisttpll
inc
mov
sahf
sbb
sbb
push
jmp
xchg
out
enter
das
sbb
fiaddl
pop
xchg
dec
insl
sbb
clc
push
insl
inc
lods
pop
lea
out
mov
call
push
lods
pop
outsl
jge
popa
in
push
popa
mov
sub
xor
xchg
xor
cmp
stc
test
pop
xor
xor
orb
jne
je
fidivs
jl
icebp
or
lock
cmp
lds
sub
xchg
je
outsl
xor
xchg
mov
call
leave
mov
loope
outsl
cs
rorb
arpl
pushl
jmp
sub
pop
testb
cs
ret
ja
es
in
movsl
pop
loopne
cmc
dec
test
rorb
int3
std
push
fwait
lea
mov
rcll
xchg
or
inc
lds
ss
out
mov
jbe
js
negl
mov
in
sbb
add
loope
jl
pushf
sub
adc
mov
sete
stos
cmp
cmpl
test
ja
xchg
int3
xor
loop
mov
mov
mov
jge
daa
mov
rcll
adc
insl
test
imul
movsl
xchg
outsl
shlb
add
mov
cmp
call
xchg
push
ffreep
shll
mov
or
xchg
call
sub
or
xchg
idivl
sbb
mov
dec
ljmp
dec
dec
push
jg
scas
roll
xor
rclb
jb
fistps
push
mov
jmp
daa
lods
adc
mov
jae
push
mov
imul
repz
fcomps
mov
daa
mov
stos
jecxz
mov
dec
mov
cs
mov
add
mov
ljmp
push
xchg
and
inc
pop
insl
std
mov
xchg
out
adc
lods
sub
add
mov
lcall
imul
outsl
rorl
fldl
int
mov
test
add
dec
dec
mov
or
cmp
push
push
mov
jl
outsb
inc
outsl
test
pop
popa
insl
mov
mov
out
popa
or
arpl
clc
das
fs
inc
sbb
jae
shrl
mov
or
cld
mov
call
cwtl
cmp
pop
loop
xchg
sub
jns
js
inc
rolb
in
pop
fbld
ret
out
insl
sbbb
jl
adc
pusha
xchg
push
outsl
arpl
xchg
or
mov
das
sahf
dec
mov
iret
push
sub
rclb
adc
sbb
shlb
push
pop
pop
cltd
mov
and
jp
jne
pushl
pop
inc
imul
repnz
jmp
push
into
fsin
mov
ja
ror
aad
or
fdivs
lea
imul
neg
mov
push
int3
shrl
lods
adcb
lcall
pop
call
sub
xor
add
adc
lret
jg
sbb
pop
arpl
add
das
cmp
insl
pop
cmp
ret
inc
or
aas
xchg
adc
or
nop
xchg
fdivrp
xchg
orl
iret
mov
jg
or
sarl
dec
and
pop
push
enter
ss
sub
leave
dec
xchg
push
incl
dec
lods
mov
mov
dec
inc
push
jl
stos
and
ss
cmp
rorb
jle
iret
in
xorl
iret
dec
lret
out
sbb
daa
arpl
pop
cmp
mov
jmp
sub
cmp
in
inc
pushf
stc
mov
sbb
cmpsl
and
and
jo
out
cmp
aam
je
push
enter
sbb
add
add
call
xchg
outsl
push
or
lea
push
dec
mov
xchg
movnti
sub
imul
insb
xchg
fldenv
adc
xchg
push
test
mov
mov
aaa
adc
mov
push
jg
add
cld
xchg
movsb
stos
cmp
stos
scas
add
or
pop
push
bound
push
pop
sbb
jl
xchg
cmp
and
jo
sbb
daa
sub
lahf
nop
adc
pop
jo
nop
push
js
pop
xchg
mov
in
sti
xchg
push
jnp
repz
push
xchg
add
in
jnp
popf
sub
and
sbb
aaa
test
in
fmul
addr16
nop
aaa
fisubl
fidivl
sahf
mov
or
into
sbb
dec
dec
imul
sbb
or
sub
sbb
cwtl
out
or
mov
sbb
mov
movsb
adc
ljmp
leave
es
jl
xchg
pop
xor
jl
xor
insl
xchg
hlt
inc
clc
or
idivl
fnstsw
sbb
sarl
mov
bound
inc
lahf
mov
test
std
mov
int
inc
add
clc
mov
cmp
fcomip
fsubs
lods
ja
push
cmpsl
sub
jecxz
mov
loop
fcomp
mov
jmp
mov
and
cmc
jmp
popa
loope
pop
outsl
add
es
add
aaa
push
and
add
adcb
jb
push
fs
movsb
jge
push
xor
fcmovbe
dec
pushf
xchg
jno
pop
jo
sub
cmpsb
or
cmc
adc
jns
scas
pop
sub
imul
cltd
into
fbstp
cmpsb
or
into
mov
adc
or
sbb
dec
push
movsl
mov
orb
inc
pop
rclb
push
xchg
in
call
rclb
jg
pop
stos
shll
fdivrl
pop
icebp
in
mov
pop
inc
inc
push
lahf
cmp
loope
sbb
jne
subl
ljmp
cmp
popf
inc
movsl
aaa
imul
jo
jno
pop
cwtl
sarl
push
es
ljmp
pop
sub
inc
je
lcall
cs
and
cmc
adcb
insb
lods
sbb
shr
mov
add
aas
jmp
mov
aaa
cld
inc
adc
repnz
xor
mov
iret
aaa
pusha
dec
enter
cli
jmp
sbb
clc
cmpsb
lret
cmp
mov
cmp
add
iret
push
imul
mov
out
mov
pop
mov
jbe
fadds
ret
outsb
cmp
xor
push
cli
repnz
cmp
loope
sarb
scas
popf
jns
fs
test
fsubrl
sbb
jno
cmp
pusha
add
push
ja
jne
xor
insb
fiadds
outsb
push
or
mov
adc
scas
leave
mov
icebp
inc
rclb
shrb
push
ret
lock
mov
push
jge
inc
jl
or
icebp
mov
pop
xchg
dec
lahf
xor
and
or
es
xchg
es
js
hlt
sti
out
into
insl
bound
push
inc
inc
lahf
adc
test
es
mov
adc
arpl
fs
inc
in
repz
xchg
cmpl
cmp
xchg
aaa
push
push
pushf
cmp
pop
sbb
loop
repnz
inc
pop
mov
inc
cmc
cli
rcl
adc
lcall
sbb
or
dec
push
jmp
pop
popf
sti
stc
jb
or
dec
push
mov
scas
andl
mov
cwtl
mov
mov
test
lock
mov
cld
pop
imul
dec
imul
ds
and
rcll
xchg
lcall
out
dec
inc
js
dec
sub
ret
push
daa
jno
fimull
xchg
jp
mov
xlat
pop
xor
hlt
ja
aam
xchg
xchg
push
sahf
dec
xchg
mov
sbb
pop
orl
mov
mov
or
xor
sub
and
push
nop
dec
push
mov
push
fcoml
popa
push
xlat
cli
ret
mov
shl
add
sahf
outsl
mov
loope
cmp
ja
sbb
movsb
cmp
push
lds
imul
outsl
aas
jmp
test
pop
cmpsl
daa
or
lcall
mov
iret
test
je
shr
jo
stos
dec
outsl
stos
rclb
cmpsb
cmc
xor
adc
imul
scas
dec
lods
add
dec
lds
adc
testl
push
lcall
adc
or
sub
cmp
xchg
mov
repz
ljmp
scas
lahf
mov
dec
sbb
adc
scas
into
stos
outsb
jno
into
adc
mov
jo
lods
mov
pushf
adc
xchg
ret
sbb
jle
in
xchg
push
xor
mov
andb
pop
gs
jle
mov
aad
jmp
stos
repnz
pop
jle
mov
shl
push
mov
jo
lods
mov
inc
gs
scas
pop
dec
mov
push
pop
inc
mov
cmpb
adc
push
xchg
mov
in
push
dec
pop
xor
mov
mov
xorl
mov
mov
in
lahf
adc
aas
inc
les
lahf
rcrb
dec
lods
pop
sub
lahf
mov
fiaddl
sbb
dec
xchg
push
filds
frstor
pop
rcrb
ret
loope
dec
popa
and
lret
cmp
xchg
les
inc
mov
sbb
out
lock
sbb
gs
imul
insb
and
mov
jo
xor
adcb
xchg
fucomip
jp
stos
nop
in
in
pop
dec
add
adc
int
out
push
push
and
imul
mov
repnz
push
xchg
leave
jnp
orl
out
lcall
mov
or
in
sbb
push
jnp
push
outsb
or
xchg
mov
shrb
sbb
mov
pop
test
shrb
aad
es
jecxz
data16
jmp
mov
call
mov
dec
adc
js
hlt
pop
sub
dec
repnz
or
out
mov
shr
sbb
bswap
dec
xchg
add
jmp
ficompl
lods
cmpsb
pop
rorb
xor
dec
shll
fmuls
in
xlat
add
in
mov
ss
push
adc
and
mov
rcrl
int3
pop
stos
xor
fistpll
add
and
les
inc
popf
pop
add
and
jne
or
std
lock
mov
xchg
in
jecxz
push
dec
pop
add
add
mov
fidivl
arpl
pop
in
insb
imul
dec
les
loope
or
dec
mov
dec
or
push
sbb
inc
icebp
inc
test
adc
cwtl
add
push
xor
pop
cmp
ljmp
inc
xor
lret
js,pt
or
inc
mov
jmp
xor
dec
stc
rorb
js
inc
sub
call
imulb
xchg
push
in
arpl
inc
bound
xlat
xor
stc
inc
pop
pop
shld
imul
fs
aaa
inc
mov
je
shrl
jg
sti
and
mov
loop
mov
or
mov
test
movsl
push
push
leave
repnz
inc
mov
cmpps
vpaddsw
mov
out
push
jne
push
and
add
loope
nop
xor
jmp
icebp
sub
and
test
adc
mov
inc
sub
inc
stc
xorb
into
jae
and
or
out
pop
mov
scas
mov
mov
scas
cltd
fisubrs
movsb
and
test
fistpll
data16
mov
inc
dec
cld
inc
xlat
fimuls
adc
cmp
into
sti
loop
out
mov
pusha
pop
xchg
int
cmp
jmp
push
subb
ret
jp
lcall
test
mov
arpl
and
jp
aas
mov
push
push
pop
sub
in
cmp
pushf
fistpll
sahf
int3
aas
outsb
inc
xchg
dec
and
std
inc
pop
and
pop
fidivrl
outsb
or
lcall
mov
xor
loopne
lahf
inc
adc
out
sbb
je
mov
leave
inc
xor
cmp
lods
pop
mov
or
and
jb
int
dec
into
jecxz
cmpsb
xchg
mov
loopne
out
stos
pop
dec
mov
pop
mov
xor
std
cmp
in
cltd
and
cmp
lock
gs
daa
mov
js
mov
and
sbb
sub
pushf
in
jp
cwtl
lock
rcl
xchg
leave
ljmp
push
mov
das
in
fidivrl
xchg
inc
dec
mull
push
icebp
mov
out
jp
addr16
out
cmp
mov
jge
data16
jge
xor
fnstsw
mov
punpckhbw
arpl
jno
sarb
adc
dec
lock
popa
mov
inc
pop
scas
int
bound
jmp
sub
jecxz
fsts
pop
rorb
call
mov
push
mov
push
mov
and
aas
pushf
sti
xor
mov
jl
mov
cmc
addr16
sub
gs
in
pop
insb
test
jle
mov
shr
je
push
xchg
fwait
enter
add
cli
mov
fistpl
jbe
cmp
pop
es
cs
push
dec
out
and
cmpb
adc
mov
aaa
xor
inc
cmc
orl
jbe
push
and
pop
jno
sar
test
repnz
jnp
sahf
out
scas
pusha
cli
mov
jecxz
mov
pushf
aas
push
cmc
xor
arpl
sub
jp
enter
mov
fs
mov
fisttpl
sbb
stos
hlt
test
xor
pop
fwait
mov
dec
inc
add
mov
pop
add
call
mov
jl
movsl
push
sub
jl
dec
mov
fcmovu
aam
mov
fidivrl
out
mov
add
sub
outsb
cmp
repnz
and
jl
scas
pop
or
jmp
or
test
and
adc
jg
xor
sub
testb
cmpsb
stos
fs
pop
push
dec
fimull
fcmovnb
mov
mov
or
loop
and
pop
stos
call
test
jp
in
cmp
push
jae
test
jg
jmp
cmp
mov
mov
xchg
imul
dec
ja
dec
jbe
inc
xchg
stos
xchg
or
andb
iret
add
push
jmp
xchg
inc
insb
sti
sbb
je,pt
insl
sahf
cmpsb
loope
aad
mov
xor
jge
lods
daa
xchg
movsl
cmpsb
je
iret
push
push
and
cmp
xchg
inc
inc
inc
jno
rcrb
cmp
stos
fimuls
outsb
mov
fildll
xor
loop
pop
xchg
call
xor
aam
xchg
xchg
mov
enter
insb
push
sub
push
mov
test
scas
adc
and
mov
jb
add
push
jno
out
ret
jl
out
das
jns
cmc
or
pusha
aas
outsl
test
mov
stos
mov
inc
repz
lahf
mov
fisubrs
loop
sbb
sti
xor
scas
mov
lods
pusha
pop
nop
dec
mov
xor
rolb
jno
mov
lds
repnz
dec
xor
mov
loopne
nop
cli
inc
bound
mov
mov
ljmp
inc
inc
movb
popf
add
out
icebp
and
imul
js
mov
les
call
je
fcmovnbe
mov
icebp
mov
sub
stc
and
inc
mov
fldcw
ja
icebp
push
cmp
fisttpll
add
adc
out
int
shrb
cltd
arpl
lret
or
outsb
jno
shlb
aam
xor
and
fmull
je
fdivrl
fadd
cmp
lret
cmp
pop
adc
shl
leave
popa
cmp
inc
lret
xchg
lods
scas
mov
mov
push
xchg
inc
adc
shrb
sub
jae
enter
jnp
xor
jl
loopne
xorb
jo
in
fucomip
les
push
and
shr
in
inc
jns
arpl
popa
test
test
add
pop
sbb
jnp
inc
push
and
sub
sbb
mov
outsb
and
ret
cli
or
lds
jp
jle
mov
andl
xchg
xlat
mov
sarb
sbbl
outsl
adc
mov
pop
mov
fistps
pop
jb
cmp
into
and
ds
xchg
fwait
sahf
and
movsb
imul
jae
xor
stos
cmp
mov
in
mov
mov
or
sbb
daa
pop
scas
nop
adc
setp
cli
stos
push
scas
mov
lahf
sub
jmp
adc
inc
jge
inc
sub
pop
out
mov
xchg
xchg
cmp
sysret
xlat
movsl
or
cmp
fldenv
inc
cmp
loop
fdiv
adc
mov
aaa
movsb
dec
dec
adc
pushf
ds
dec
xchg
imul
jp
nop
popf
stos
insl
and
bound
pop
lcall
push
adc
add
loope
sub
iret
pop
inc
fisttpll
jbe
jg
negb
mov
add
icebp
andb
sbb
adc
shl
inc
popa
and
les
sub
mov
stos
or
sub
pop
adc
add
mov
enter
pop
imul
cmp
mov
mov
cli
pop
insb
cmp
repz
arpl
dec
push
push
scas
dec
fildl
sub
and
test
mov
fsub
in
cmp
jg
xchg
xchg
inc
push
mov
jmp
je
push
das
inc
mov
sub
jno
popa
inc
ja
add
test
sub
out
jecxz
stos
stos
cmpsb
clc
xchg
outsl
icebp
xor
icebp
loop
jmp
popa
insl
jle
cmc
fs
aam
mov
gs
loope
xchg
jl
xchg
ja
out
sahf
insb
sbb
jecxz
sbb
sbb
jae
fs
js
fnstsw
imul
mov
jne
sub
dec
and
sub
push
cli
sbb
xchg
int3
aad
movsb
iret
mov
pusha
ss
movsb
inc
inc
pop
or
neg
ja
inc
sbb
sbb
mov
mov
sbbl
mov
addr16
xor
iret
cmp
inc
mov
loopne
and
dec
lcall
sub
mov
inc
imul
test
ret
aam
push
mov
arpl
dec
adc
mov
sub
loop
pop
jns
imul
clc
fsubl
cli
inc
ficoms
and
test
and
jbe
mov
inc
mov
loopne
pop
movsl
ret
movsb
pop
xchg
lods
call
push
imul
jge
ret
push
jns
in
vunpcklpd
xchg
daa
pop
std
mov
sub
xchg
mov
inc
mov
push
or
pop
lea
sub
outsl
popa
sti
jb
nop
lret
xchg
and
scas
or
imul
dec
adc
js
mov
sbb
adc
cmpsb
in
lods
xor
es
pop
ficomps
mov
xchg
inc
adc
push
jl
inc
mov
addr16
jnp
cld
sub
ret
xor
adc
xor
sahf
mov
pop
loope
cmpb
mov
sub
adc
ja
cmpsb
add
std
ljmp
in
es
sub
lods
lret
mov
dec
inc
dec
lahf
fldlg2
loop
dec
inc
inc
jo
jo
xor
sub
add
stc
stos
adc
mov
loop
fbstp
adc
mov
sub
add
adc
sub
enter
cld
inc
push
insb
jo
mov
jbe
fidivrs
jnp
and
mov
mov
scas
inc
cmp
sbb
sub
xor
into
rorl
or
pop
lahf
scas
push
or
ret
push
pop
ficoml
cmp
adc
test
fstpt
das
pop
or
int3
ljmp
dec
dec
or
test
nop
xchg
xchg
loopne
loope
ja
divl
pop
inc
sbb
and
imul
aas
stc
pop
out
push
xor
sub
or
inc
add
jnp
fdivl
mov
push
test
daa
mov
jne
sti
add
lcall
jg
jmp
add
mov
jg
aad
icebp
subl
jecxz
mov
add
cmp
jle
mov
jg
jno
dec
sbb
enter
gs
loope
inc
out
cmpsb
adc
dec
mov
scas
and
pop
jg
pop
xchg
out
sub
dec
pop
add
cmp
adc
xchg
shr
xchg
push
cwtl
xchg
xchg
std
cs
int3
sahf
aad
adc
loop
add
jmp
pushf
mov
xor
pop
push
dec
xchg
call
leave
or
lods
mov
jne
inc
ljmp
cmc
dec
fldl
dec
outsl
add
mov
int3
pop
sti
mov
lods
cli
xor
out
insl
je
jge
or
cmp
in
daa
popa
in
test
outsl
dec
iret
ficomps
mov
repnz
arpl
mov
fdiv
ja
sbb
jb
dec
mov
and
js
jg
jb
enter
sub
sub
pop
xor
aaa
dec
stos
xlat
sbb
or
mov
xor
dec
adc
sbb
and
daa
nop
pop
add
sub
js
cmp
dec
mov
adc
das
outsb
cmpsb
nop
adc
push
xor
push
int3
sbb
adc
aad
push
pop
lods
in
aas
pop
add
xchg
outsb
push
jbe
aam
sub
stos
sub
subb
or
xchg
cmpb
add
mov
inc
lret
stos
cli
test
or
xor
push
dec
sti
loopne
mov
enter
and
in
sbb
inc
std
cmp
dec
fdivl
push
cmpsb
in
notl
mov
cmp
push
test
mov
mov
loop
jno
es
es
mov
rcl
inc
cld
mov
loope
mov
dec
cmp
xor
addr16
dec
xchg
jmp
sub
imul
vpsrlq
jae
dec
dec
and
outsl
adc
or
jl
xchg
xor
mov
into
mull
movsl
test
jg
add
pop
enter
popf
je
mov
dec
imulb
stos
mov
data16
xchg
out
outsb
inc
xor
daa
jmp
test
xchg
les
pop
fwait
les
mov
push
je
push
jp
mov
cmpsl
add
in
test
cmpsl
push
jmp
push
cmp
sbb
enter
jmp
sbb
jbe
push
dec
addl
pop
cmpsl
add
dec
enter
fwait
xor
dec
adc
daa
lcall
cwtl
sub
ss
outsb
dec
or
aad
sub
mov
sub
adc
nop
in
ret
cmp
add
dec
and
pop
xor
adc
lcall
rclb
cmp
adc
insl
mov
std
rcll
lea
jnp
add
mov
jno
fldenv
pop
lods
add
sbb
mov
xor
mov
sbb
xchg
std
dec
out
daa
push
sbb
pusha
ret
sub
ret
stc
add
dec
sub
mov
push
sbb
and
cmpsb
or
lret
cmp
add
repnz
movsb
sbb
test
sbb
push
jmp
jae
push
jle
xor
sbb
out
jmp
push
sub
sub
sbb
push
shll
push
icebp
int3
movsl
add
pop
das
lods
ja
iret
pop
icebp
nop
push
outsl
fs
jns
insl
popa
pusha
mov
add
sbb
xlat
in
mov
jle
sub
test
cmp
pusha
out
imul
jbe
dec
inc
sbb
push
loopne
aas
mov
flds
inc
jns
icebp
test
ljmp
cmp
or
xor
inc
test
add
mov
in
in
mov
rcrl
fildll
and
cmpsb
or
lock
mov
mov
lahf
jae
cmp
mov
shlb
js
into
mov
and
inc
mov
in
repnz
cmc
push
sub
cmp
xchg
mov
jl
jb
mov
jmp
push
cmp
aam
inc
lret
inc
sbb
inc
jecxz
loope
mov
leave
xor
pop
jg
ds
mov
loopne
xor
and
test
and
cmc
push
out
popf
insb
sbb
mov
push
ja
sub
sub
stos
mov
int
mov
xlat
add
out
mov
int
pop
sub
adc
mov
sub
out
fmuls
test
pop
das
ret
jae
jge
inc
jb
pop
mov
movsb
out
cmc
fnstsw
fs
inc
add
pop
scas
xlat
lahf
outsb
je
push
xor
std
mov
cwtl
and
xor
bound
push
jnp
xchg
or
mov
push
jmp
xchg
lea
fisubrs
sub
stc
and
cmp
xchg
loope
xchg
movsl
fildl
outsl
popf
rorb
mov
popf
in
test
push
movsl
sub
xorb
cli
ret
dec
dec
inc
lock
jmp
cmp
cmpsl
adcb
fwait
pop
flds
es
mov
pop
aaa
add
or
lret
daa
cmp
inc
mov
xchg
push
xor
or
fsubl
fs
mov
cmp
fsubr
aam
icebp
cmp
push
ja
in
xor
push
ds
pop
loop
cmp
out
mov
dec
mov
mov
loopnew
add
pop
pop
repnz
fs
inc
jae
sbb
bnd
into
pop
and
jge
aaa
inc
mov
xchg
or
pop
push
lds
pop
pop
mov
sbb
sub
adc
push
mov
mov
and
sbb
lret
test
cmovp
ds
dec
xor
mov
pcmpgtw
pop
and
xlat
pop
mov
cmp
fwait
push
dec
test
nop
push
cld
call
xorb
or
adc
inc
bound
sub
xchg
stos
movb
or
aad
shll
adc
xchg
xor
stc
sub
pop
or
mov
incb
mov
shr
push
ret
and
jnp
lcall
mov
les
mov
or
int3
push
and
mov
test
pop
fcoms
add
push
xchg
icebp
insl
jg
stos
dec
adc
out
dec
lahf
xlat
rcrb
movsb
stc
aad
loope
jo
dec
sub
or
in
jmp
jl
dec
dec
mov
xor
loope
push
mov
int
lea
pop
mov
cld
lock
loop
pop
rorb
scas
fidivrl
lods
mov
scas
into
pusha
std
lret
inc
xor
in
push
outsb
mov
mov
data16
test
mov
dec
inc
or
insb
addl
pop
repz
inc
or
xor
jp
insb
inc
iret
fcoms
aas
jge
xchg
mov
rep
ss
hlt
loopne
loop
jl
stos
lods
setns
in
fucomip
outsl
mov
aad
mul
adc
aam
out
lahf
dec
mov
test
push
insb
fcoml
xchg
negl
mov
push
pop
ja
out
mov
movsl
mov
add
sbb
adc
add
mov
into
or
inc
push
cmpb
pop
mov
sarl
push
push
sti
jge
popa
stos
and
insl
jg
push
lcall
rcl
imul
fisubl
aas
shrl
xchg
in
pop
aad
inc
cmp
loopne
ja
popa
lea
imul
add
dec
iret
dec
std
shlb
lcall
ds
pop
adc
and
testb
pushf
mov
cli
push
scas
in
stc
push
loopne
in
imul
inc
xchg
add
je
add
testb
ret
jge
hlt
mov
pop
and
xor
loope
and
jns
sub
sub
xor
out
jmp
stc
push
cmp
lea
lahf
roll
xor
mov
pop
inc
adc
test
adc
push
push
icebp
lret
insl
jmp
call
les
push
shlb
imull
in
test
je
outsl
dec
mov
cwtl
aas
mov
faddl
dec
mov
lcall
mov
fmul
mov
icebp
movsb
xchg
mov
aad
lods
clc
jnp
jl
dec
gs
aam
push
sbb
in
inc
int3
dec
mov
sahf
outsb
push
lret
fisttpll
xchg
adc
jnp
inc
ret
cmp
ljmp
mov
dec
fcmovb
xor
inc
sbb
imul
push
ja
and
ficompl
movsl
sbb
les
in
mov
rorl
pop
pop
mov
xchg
push
dec
es
cld
mull
fnstsw
in
jnp
add
and
rclb
jl
cld
xor
scas
dec
stc
xchg
cltd
lods
ss
xchg
inc
xchg
dec
add
shrb
adc
lret
and
adc
dec
stos
push
adc
xchg
dec
mov
xchg
jecxz
push
xor
jne
ret
or
cwtl
icebp
inc
cli
sub
mov
xlat
xchg
imul
mov
out
adc
add
xchg
je
sub
mov
pop
lret
cmp
mov
cld
fwait
mov
xchg
loop
inc
mov
icebp
movsb
xchg
sbb
xchg
xchg
repz
ror
mov
pop
not
in
test
sbb
ss
adc
mov
aaa
in
or
jmp
pop
data16
js
dec
dec
test
sbb
push
je
adc
enter
jg
cs
jle
mov
mulb
cmpsb
adc
sbb
sbb
pop
cmp
adc
cmpsb
or
divl
fdivrl
sub
mov
subl
and
gs
cmp
mov
cwtl
pop
adc
inc
inc
bound
jnp
clc
push
pop
sbb
popf
out
jecxz
int
lock
fs
ficoms
inc
pop
in
pusha
andl
lods
jecxz
ss
mov
jge
push
jns
dec
pop
sbb
lret
std
jne
loop
lret
pop
pop
mov
mov
pusha
lock
push
xor
je
aad
stos
dec
and
push
fistpll
pop
sbb
notl
cmp
enter
aad
adcb
adcl
push
movsl
fwait
in
fst
push
inc
adcl
lds
push
int
bound
cwtl
hlt
mov
das
mov
out
lcall
push
sbb
movsl
and
ja
jo
in
xchg
pop
mov
inc
jge
cli
insl
sub
dec
mov
sub
pop
js
loop
insb
xor
test
enter
and
dec
push
cwtl
cmp
push
dec
push
loope
test
lcall
and
insb
mov
adcb
dec
orb
orl
dec
idivb
scas
and
pusha
fdiv
inc
jg
out
movsl
fistpl
mov
fsubs
dec
aad
call
rolb
push
mov
dec
xchg
out
push
ja
sbb
mov
jmp
pop
shl
fstpt
imul
inc
xchg
mov
test
daa
dec
mov
and
sti
movsl
cmp
xchg
scas
xchg
shlb
inc
jp
xchg
dec
js
daa
sbb
sahf
xor
mov
ret
cmp
outsb
mov
std
es
testl
pop
cltd
int
mov
enter
dec
imul
mov
sbb
inc
test
mov
xchg
adc
ds
hlt
jne
dec
mov
test
roll
or
movl
stc
sbb
adc
pop
mov
jae
push
add
xchg
popa
dec
jbe
js,pt
sub
in
aas
mov
fs
fwait
cld
shrl
fstpl
and
push
cld
stos
fidivs
negb
mov
pop
cmp
jns
test
pop
cmp
rorb
pop
push
sub
pop
mov
jb
insl
lods
aad
je
pop
or
mov
or
fs
dec
jno
xlat
push
or
and
push
or
xchg
jns
jns
or
insl
pop
xchg
ljmp
stos
xor
cmp
ja
ret
xchg
cltd
cli
jle
mov
cmp
das
jle
mov
inc
adc
sbb
lds
sub
rcl
jo
and
mov
or
inc
sub
movb
xchg
mov
cmp
dec
insl
repnz
imul
in
inc
cmp
or
test
pop
test
ret
imul
xchg
sbb
in
and
jb
addr16
adc
jg
jmp
outsl
mov
mull
or
jns
adc
inc
mov
mov
sbb
popa
outsl
lods
cmc
jmp
pop
dec
icebp
sub
inc
bound
roll
cld
les
jecxz
lahf
ret
nop
and
lods
pop
fdivrs
or
push
cwtl
mov
arpl
imul
mov
mov
aad
dec
sti
xchg
and
add
or
jns
iret
insb
ss
lcall
ret
sub
sub
jmp
into
sub
xor
sbb
lret
call
sti
fcmovnu
test
sub
test
inc
insb
jle
pushf
xchg
lcall
dec
shlb
dec
loope
push
push
xchg
daa
icebp
mov
push
ja
aaa
push
mov
leave
int
pop
stos
outsb
iret
aad
sbb
push
jne
fisubl
or
inc
mov
mov
pop
sub
inc
xchg
movb
sbb
or
xchg
mov
int3
push
neg
vmread
xchg
xchg
or
lret
cld
pushf
pop
pop
jnp
out
inc
imul
and
xor
fdivl
inc
test
lret
aaa
and
push
movb
mov
mov
data16
or
pop
xor
sbb
mov
xor
or
clc
adc
dec
lock
shrl
lahf
popf
out
in
mov
shl
jno
lock
pop
mov
push
stos
lods
insl
cmpsl
aaa
push
mov
mov
push
daa
sub
add
xor
add
in
add
inc
repnz
mov
cmc
addr16
mov
xor
imul
ret
fidivs
movsl
xchg
xchg
mov
fnstcw
jnp
ds
stc
aas
int
arpl
nop
mov
pop
jl
or
mov
xor
scas
mov
cmpsb
mov
loopne
sti
lods
pop
data16
ret
adc
xorl
pop
pop
mov
dec
out
push
cmp
xchg
icebp
and
mov
mov
je
ror
rcl
and
leave
test
rolb
xlat
mov
daa
sub
inc
pop
les
or
jl
inc
outsl
les
dec
out
cmp
xor
icebp
jns
push
sub
aad
lds
jbe
idivl
scas
cmp
adc
les
jecxz
jp
mov
or
repnz
cli
inc
mov
push
cs
push
popf
push
mov
and
imul
xor
stc
movsl
pop
data16
add
icebp
ss
int
xchg
push
jbe
loopne
cmp
lea
sbb
clc
subb
xchg
jno
ror
xchg
lods
in
aad
stc
out
add
sbb
addr16
adc
inc
dec
ss
add
fwait
test
mov
sbb
pop
xor
test
and
or
shl
sti
pop
repnz
addb
xor
rcl
push
aad
xor
cmpb
push
add
cltd
push
out
imull
push
xor
mov
xorb
or
mov
push
mov
xchg
adc
and
outsb
ret
xor
lods
aam
fldl
or
add
stos
or
pop
mov
cltd
cmpl
sbb
loope
sub
fsubs
sbb
fxch
mov
sub
sub
adc
fs
fstpl
andl
or
sbb
adc
loop
test
xchg
lret
scas
clc
mov
mov
std
test
push
add
jno
push
in
dec
sub
jg
lds
pop
scas
in
jmp
aaa
inc
push
ret
mov
pop
stc
dec
scas
sub
lsl
push
dec
cmp
cltd
lods
out
cld
icebp
pop
mov
lods
and
push
lock
xchg
sbb
xchg
je
outsb
fidivrs
and
popf
xchg
pop
outsl
mov
xchg
add
xor
fcmovnbe
push
ret
fnstcw
lods
mov
push
or
mov
push
fadd
push
popa
inc
shrb
fsubrl
xor
hlt
fistpll
push
pop
int3
xchg
test
cmp
adc
rcrl
pop
les
mov
out
xchg
inc
loop
cmpsb
jg
data16
adc
jl
mov
jp
loopne
es
inc
xorl
ss
mov
out
mov
sbbb
push
movsl
pop
mov
ljmp
dec
xchg
or
sbb
repnz
lret
iret
popf
push
mov
push
sbb
sbb
stos
test
cmpsb
sti
pop
nop
imull
xchg
fstpl
fucom
lcall
xchg
push
sub
jl
ret
jbe
lea
data16
cs
sub
imul
xor
xlat
les
add
mov
xchg
and
pop
push
or
cltd
or
push
lahf
movsl
sub
xchg
stos
pushf
pandn
jecxz
pop
mov
std
lods
jg
mov
xchg
adc
int
and
into
push
fstps
mov
inc
pop
mov
insb
mov
pushf
cmp
cmp
inc
pusha
add
ret
mov
mov
cmpsb
cwtl
lret
or
orb
mov
push
dec
rol
jo
sahf
mov
sbb
dec
aas
fistpll
add
adc
in
xor
mov
enter
cmp
dec
repnz
mov
fisttpl
fsubs
push
cmp
sbb
jnp
loopne
inc
rcrb
lods
sbb
sbb
sbb
out
aad
push
push
rol
lds
jno
sti
cwtl
mov
inc
sub
dec
std
mov
xor
sbb
add
out
test
aad
inc
adc
xor
dec
stc
adc
bswap
cmp
cmp
jae
leave
sbb
dec
mov
out
sub
fdivs
xor
adc
mov
inc
hlt
call
in
ja
sub
in
test
push
loopne
pop
stc
iret
aad
xchg
sti
ret
ss
in
scas
repnz
call
jle
repz
leavew
adc
in
scas
jl
sarl
sub
dec
stos
inc
mov
lret
negl
push
xchg
mov
sub
aas
aas
sbbl
aaa
sbb
iret
push
movsl
outsl
std
mov
jb
mov
adc
xor
push
adc
sub
push
fs
std
mov
add
arpl
sarb
pop
daa
sbb
cmp
mov
xor
mov
xchg
lret
iret
lods
lods
and
pop
jl
adc
movsb
inc
sub
sbbl
lds
pop
sub
adc
xor
cmpsb
outsl
and
jnp
mov
imul
jg
cmp
xchg
lea
and
sbb
sub
jnp
movsl
shll
arpl
pop
mov
pop
mov
push
les
pop
js
mov
std
push
loope
loop
das
test
sbb
outsb
js
out
inc
push
inc
test
or
or
mov
pop
cmc
in
jb
fcoms
mov
nopl
mov
out
nop
mov
mov
cmp
push
add
jmp
insl
rcrl
pop
dec
jg
jbe
sub
cld
cmp
enter
or
inc
stos
xor
or
push
sbb
mov
dec
inc
insl
jecxz
das
in
gs
int3
inc
sbb
xor
jecxz
rep
cmp
sbb
shlb
push
stos
cmp
bound
movsl
pop
fdivl
or
les
mov
push
movsb
fildl
inc
out
sub
add
sbb
and
leave
rclb
xor
mov
fxch
jne
xchg
and
mov
xchg
inc
pop
lcall
add
das
mov
lea
sub
cmp
insl
imul
cmp
addr16
mov
mov
jbe
mov
out
popa
xchg
cmp
mov
sub
std
and
xchg
jbe
push
push
iret
ljmp
push
adc
pop
icebp
rcrl
jae
shl
repnz
test
xchg
mov
sub
pop
inc
inc
outsb
and
dec
test
add
lods
lods
inc
es
arpl
jl
das
js
mov
mov
insl
mov
inc
xorb
or
ffreep
inc
xchg
jg
mull
shl
rcrb
in
push
mov
out
jnp
je
or
xchg
ds
scas
add
fists
aad
mov
add
push
mov
fstpt
jmp
xchg
mov
or
dec
fsubrl
mov
aam
jl
repnz
xor
sub
pop
push
js
mov
out
push
pop
ja
jp
adc
pusha
icebp
jecxz
sbb
test
push
mov
jl
fwait
cli
das
mov
fs
xor
nop
pop
ljmp
int3
jnp
sbb
stos
arpl
push
addr16
jg
mov
cwtl
cmpsl
jl
pop
mov
int3
push
sub
mov
pop
pushf
mov
and
mov
nop
pop
loope
cltd
xchg
mov
iret
mov
stos
push
rorb
sarl
notl
add
push
inc
adc
jge
dec
jo
push
mov
jb
dec
xchg
xor
push
imul
and
and
inc
dec
mov
push
sbbb
daa
stc
inc
cmp
lds
cmc
jnp
nop
and
mov
in
push
xlat
cli
js
xor
xchg
pop
pop
shrl
subl
scas
jbe
push
dec
sbb
push
mov
out
pop
bound
jnp
or
jns
and
icebp
fnstenv
pusha
outsl
cmp
mov
ficoml
pop
mov
and
push
fcoml
gs
movl
pop
in
sbb
das
aad
inc
inc
stos
mov
cmp
lock
sbb
fidivs
int
shl
aaa
mov
scas
adc
inc
stc
jbe
adcb
and
ja
push
aam
cmp
outsb
mov
or
push
mov
shll
jmp
pusha
das
nop
sbb
daa
mov
sbb
movsl
sbb
int
jge
mov
sarl
jmp
outsb
cmc
sbb
sbb
cs
cmp
inc
mov
data16
xor
mov
repz
push
sub
pop
push
and
push
xchg
dec
cs
fnsave
fs
sub
fcmovu
or
aad
mov
aaa
mov
addb
imul
sbb
incb
jl
jns
ds
bound
rol
inc
cwtl
xlat
sub
xchg
mov
mov
xchg
inc
sarl
bound
pop
scas
out
mov
dec
rol
aaa
nop
sub
pop
rcrb
ret
lods
adc
cmp
shll
cmc
push
sbb
call
sbb
push
sub
sbb
hlt
sub
and
loope
in
or
mov
shll
mov
xchg
xor
aaa
outsb
ss
gs
pop
mov
pushf
xor
lret
and
pop
pop
dec
in
out
cs
push
int3
mov
iret
ljmp
adc
xchg
add
mov
mov
mov
sahf
dec
sahf
sbb
call
or
xchg
lods
imul
sbb
pop
repz
push
imul
fcoml
mov
lea
int
ss
pop
pop
inc
cld
das
xchg
fdivrs
out
in
push
jnp
dec
mov
sub
jle
lock
lock
notl
xor
pop
cwtl
mov
pushf
mov
insb
cwtl
out
sub
and
clc
jns
or
jae
sbb
add
adc
xchg
lret
stos
xchg
fucomip
mov
xchg
leave
in
xchg
mov
xlat
stos
mov
ss
int
stos
aaa
jmp
xchg
movsl
fsubl
addb
dec
xchg
jge
repz
sahf
inc
js
push
stos
inc
test
out
mov
mov
movsl
xor
and
fidivrs
add
pushf
mov
dec
push
cmpsl
jmp
mov
orb
dec
pop
mov
mov
push
arpl
sub
add
sbb
pop
adc
or
dec
fdivp
mov
push
push
btrl
mov
je
ror
and
and
in
push
jge,pn
xor
dec
lock
jecxz
not
cmp
repz
push
mov
push
aaa
stos
aad
sbb
push
test
or
je
pop
stc
ret
lret
jns
cmp
adc
inc
add
cmpsb
stos
fstp
and
arpl
xchg
xorb
push
es
inc
rcrb
nop
jle
mov
insb
cld
cwtl
jae
fdiv
xchg
push
cmp
lcall
int3
mov
das
inc
mov
in
shrl
xchg
mov
ret
mov
mov
pop
mov
bound
sub
push
jle
addb
shlb
jo
mov
push
js
lea
mov
adc
xor
jmp
rcl
test
enter
jmp
andl
je
ss
dec
sarl
jp
in
push
fcompl
jbe
popa
xor
and
mov
push
dec
push
sbbl
mov
idiv
mov
sbb
add
fwait
xchg
xchg
stos
and
lds
call
in
xor
inc
out
cmpsl
aam
jne
mov
dec
add
or
icebp
sub
dec
out
jmp
mov
jbe
mov
mov
data16
gs
test
mov
push
xor
cltd
xor
xchg
mov
xor
cmp
jl
lahf
pop
lea
sbbb
mov
repz
dec
sub
cmp
dec
bound
adc
mov
fiaddl
cld
scas
xor
nop
lcall
mov
jle
xlat
stos
push
in
fidivrl
cmp
nop
outsl
popf
xchg
xor
pop
mov
fildll
hlt
aas
andl
imull
push
aas
mov
xchg
dec
cs
ljmp
lret
imul
and
sub
lret
imul
xchg
andl
push
lea
sti
adc
daa
loope
sub
add
lahf
hlt
movsl
mov
sub
add
sub
mov
sub
cwtl
repnz
mov
imul
xchg
xor
sub
xor
xor
mov
data16
cltd
mov
das
std
cmc
sub
sahf
in
imul
inc
loope
xchg
icebp
adc
sbb
mov
inc
outsl
dec
fidivs
inc
inc
test
xchg
pop
pushf
movsl
xor
je
mov
mov
mov
lret
and
int
in
pop
sbb
or
jnp
cmp
repz
imul
sub
nop
mov
cmp
and
stc
pop
xor
mov
out
call
jae
mov
mov
xchg
xor
scas
pop
add
mov
repnz
push
push
push
cli
fisttpll
mov
lret
xor
test
inc
aad
add
scas
cli
clc
cwtl
scas
rcrl
cmpsb
jns
jbe
aam
sbb
xorb
in
rcrl
outsb
jecxz
gs
push
or
dec
adc
jne
hlt
push
jbe
mov
loope
jbe
and
in
test
int3
push
sbb
int
sub
or
push
int
ja
out
mov
or
xchg
movsb
ret
in
dec
fildll
adc
add
sti
aam
mov
inc
pop
cmc
mov
hlt
dec
sarb
mov
les
ja
scas
lock
push
sbb
cs
iret
mov
loope
mov
mov
sub
and
fs
inc
pop
hlt
push
jmp
pop
xlat
scas
or
xchg
inc
cwtl
push
inc
out
xlat
dec
jbe
mov
pop
mov
push
jns
sub
bound
dec
xchg
and
mov
sub
les
jecxz
insl
or
jle
and
ds
jp
xlat
mov
mov
mov
mov
pop
xor
xor
shlb
xor
es
sbb
dec
push
rcr
mov
fidivl
mov
dec
push
pop
and
mulb
nop
insl
rcrb
js
mov
inc
sbb
pushf
movzbl
pop
pusha
inc
fistl
out
repz
stos
dec
cld
stos
idivb
pop
mov
pop
xchg
xchg
outsb
out
cltd
add
jle
cmp
jmp
pop
mov
pop
test
sbb
inc
andb
popf
imul
push
xchg
fcompl
jno
mov
std
push
dec
outsb
inc
gs
sub
movsl
insl
or
dec
sti
mov
outsb
xor
sub
insl
or
xchg
mov
aaa
mov
mov
xor
mov
mov
andb
stc
push
xchg
jp
sahf
mov
pop
nop
cmc
jne
pop
sub
in
mov
repz
push
insb
into
repnz
add
or
xor
jb
outsl
jbe
push
cwtl
jl
mov
and
into
test
test
jbe
xchg
lret
mov
inc
lds
inc
pop
xor
in
fstps
ret
pop
and
mov
pop
push
aaa
pop
sbb
sub
shll
cmp
cmp
xchg
lcall
and
fcomi
xchg
test
mov
mov
jb
mov
mov
fidivrs
and
mov
daa
dec
pop
fnstcw
pop
sbb
lahf
cld
pop
sub
ret
ret
cld
mov
out
jnp
in
ds
and
lods
data16
imul
ret
pop
cs
push
cmp
jp
stos
ret
xor
sub
leave
les
sub
xorb
or
and
mov
mov
dec
gs
add
sub
jle
int
arpl
mull
sub
out
mov
mov
jge
sub
adc
push
cmp
add
mov
xchg
sub
in
cmc
aas
gs
xchg
mov
inc
jo
test
je
jmp
pop
fidivrl
fistps
add
mov
lods
and
mov
jg
push
mov
inc
cld
mov
ds
ss
pop
push
and
fwait
push
push
pop
xchg
or
fisubs
fadds
ss
sub
xlat
out
xchg
mov
push
adc
xchg
mov
pusha
or
xchg
fsubl
mov
cmp
fst
sub
lods
and
cmp
mov
mov
dec
pushf
aas
insb
and
mov
lahf
fsts
push
fsts
mov
mov
cs
shrb
aas
cmp
in
subl
and
leave
xchg
adc
insl
xchg
adc
stos
sub
hlt
push
jmp
je
add
push
rorl
mov
and
test
add
scas
xor
inc
pushf
pop
addr16
stc
shrl
scas
inc
mov
xor
mov
roll
push
mov
jp
ja
setp
stc
dec
fstpl
adc
cld
nop
cmp
push
mov
stc
ja
inc
inc
bound
mov
loopne
int
or
push
leave
dec
hlt
aaa
pop
sti
data16
sbb
pushf
push
lock
jg
lods
pop
mov
mov
pop
fldl
lock
rcll
nop
or
inc
fcmove
inc
in
je
inc
inc
loopne
das
mov
pop
jbe
mov
xor
cmp
loope
imul
in
bnd
push
outsl
repnz
push
in
adcb
xor
mov
xlat
mov
cmpsl
icebp
inc
clc
lahf
inc
into
clc
mov
xchg
scas
int
or
scas
mov
dec
rcrl
sub
xor
push
sbb
hlt
ds
aad
out
pop
xor
add
mov
add
inc
fstps
mov
call
add
and
xlat
ja
dec
jecxz
jns
mov
frstor
push
sub
cmpsl
jle
push
aad
pop
or
inc
movsl
adc
outsl
or
mov
imul
ja
pop
or
and
sub
adc
sbb
pop
fwait
cs
add
cltd
sub
xor
mov
inc
rclb
mov
mov
or
pushf
sbb
js
sahf
adc
push
xor
xchg
nop
sbb
sahf
adc
into
jae
jmp
pop
jb
imul
sub
test
mov
xchg
imul
aaa
call
lahf
and
subb
cmpsb
out
pop
out
ret
xor
je
xorl
dec
or
call
mov
andb
fisttpl
add
mov
xchg
jle
pop
inc
sbb
dec
pop
es
jle
in
mov
fsubl
add
rorl
cmc
inc
dec
sti
cmc
call
lods
shl
stos
insb
pop
sub
scas
mov
int
fdivp
cmpsb
dec
mov
inc
test
sub
rolb
add
jmp
push
orl
and
mov
fildll
adc
mov
jno
fisubrl
add
pop
cmp
jl
hlt
pop
xchg
and
xor
icebp
repnz
cmp
inc
pushf
sub
in
fcmovbe
dec
arpl
cmp
cmpb
movsb
dec
mov
push
movsl
les
mov
stos
inc
scas
loopne
es
inc
mov
arpl
and
xchg
iret
fs
mov
push
jb
repz
inc
cld
fs
cmp
es
mov
lret
cmp
cmpsl
xlat
mov
push
mov
sbb
dec
fucomi
sbb
fcmovu
xor
push
sbb
arpl
mov
pop
loopne
push
movsb
mov
fstps
add
pop
mov
das
fwait
mov
into
sub
mov
in
shlb
mov
fcom
jle
ljmp
or
mov
enter
das
ja
jge
mov
leave
ret
add
sti
fnstsw
in
adc
mov
push
jno
lret
adc
jb
dec
das
push
iret
faddl
mov
inc
mov
pusha
rcrl
js
clc
push
mov
mov
call
jge
movsb
mov
popf
inc
das
mov
cmp
pop
out
shll
push
xchg
mov
aad
or
mov
and
and
push
addl
inc
notb
sbb
mov
js
flds
cld
xor
inc
push
rcll
cmpsb
dec
add
ficoms
push
adc
int
xchg
push
loope
stos
jecxz
sbb
popf
into
mov
in
mov
aas
fildl
push
cmp
test
pop
jbe
stc
es
add
call
fisttps
jp
xor
mov
add
jmp
in
fsubs
ss
mov
outsb
dec
mov
mov
js
jge
rol
aas
test
cmp
mulb
dec
cmpsb
dec
test
scas
out
push
sbb
cli
cmp
sbb
lea
mov
dec
cld
js
in
xchg
loop
pop
jg
pushf
repnz
jmp
mov
dec
std
rclb
insl
adc
bound
lods
bound
push
out
xor
or
mov
pop
out
cltd
mov
pop
dec
jnp
and
pop
mov
mov
mov
prefetch
fadds
mov
mov
popf
add
fucomp
jg
cmpsb
push
jmp
mov
xor
xchg
jo
inc
dec
fdivrs
push
rcrb
xor
das
imul
ss
xchg
cld
stc
jecxz
dec
push
dec
cmp
push
stos
or
repz
mov
add
bound
pop
xor
pop
daa
loope
je
testb
addr16
int
adc
lock
mov
in
mov
jbe
mov
ja
mov
insl
rol
fistps
decl
mov
stos
jecxz
sbb
and
inc
inc
pop
js
loop
lret
lods
in
scas
fldenv
sti
lods
cltd
inc
jle
inc
dec
les
popf
subb
xor
sub
movsl
shr
ss
adc
js
test
dec
sub
shll
shll
jbe
into
dec
inc
xchg
and
pop
shlb
mov
jnp
fadd
addb
shrb
scas
add
cmp
cmpsl
outsl
dec
push
sbb
mov
les
loope
lea
pop
add
test
test
aam
nop
add
daa
xchg
pop
les
mov
icebp
sarl
jae
mov
mov
rorb
add
cld
mov
out
fcompl
pop
arpl
add
roll
jecxz
sbb
fucompp
bound
repnz
aas
and
fsub
fdivrs
inc
fists
cmp
es
outsb
pop
icebp
lahf
ffree
lea
add
icebp
jbe
test
test
pop
cmp
adc
dec
das
lds
fdivrl
pop
cld
push
jo
mov
pop
decb
push
insl
movsb
das
sub
test
shrb
cmp
fcmovnbe
xchg
mov
fnstcw
pop
jge
mov
adc
mov
insl
lds
mov
out
repz
add
push
pop
mov
into
sub
or
cltd
pop
or
lea
adc
mov
fdivl
jns
mov
ror
pop
iret
icebp
insb
cmpsl
cwtl
leave
dec
or
stc
addl
rep
or
ja
xlat
jl
sub
sub
insb
aam
push
fimuls
jbe
addr16
jle
xchg
lods
add
stc
inc
out
icebp
push
mov
stc
aaa
or
inc
sub
inc
lret
xchg
in
or
push
inc
pusha
and
fs
jmp
divl
pushf
mov
jg
or
xor
mov
pop
mov
stc
arpl
sahf
stos
sahf
movsb
add
cli
arpl
xchg
clc
fsubs
sbb
call
cld
aad
jp
cmc
negb
jnp
ds
sbb
add
or
cli
and
leave
dec
push
pop
cltd
xchg
jno
mov
push
sbb
inc
stos
je
insl
lock
mov
pop
dec
fwait
push
js
daa
and
test
pop
imul
adc
lods
or
lret
les
mov
mov
arpl
inc
inc
cmpsb
scas
mov
out
sub
xchg
jnp
jno
js
les
es
in
stos
push
call
fdiv
cmp
ljmp
mov
or
pusha
push
xchg
pop
out
mov
loopne
out
sub
mov
adc
inc
nop
dec
ljmp
push
pop
roll
and
xchg
pop
cwtl
cmp
sahf
xchg
dec
push
jns
jns
rcrb
pop
mov
jns
push
and
je
pop
js
xchg
shrb
push
leave
mov
push
adc
push
cmp
push
xchg
js
ss
sub
xchg
sub
lock
in
fwait
mov
cmovns
mov
sbb
adc
pushw
fidivrs
cli
cmp
xor
push
mov
ret
lret
dec
adc
andl
imul
fucom
add
push
inc
imul
nop
in
pushf
aas
xor
ret
lds
mov
aam
cmp
mov
mov
xchg
xchg
out
mov
or
dec
cmp
xchg
mov
out
push
sbb
bound
add
scas
sub
shlb
inc
or
adc
in
in
push
jb
adc
push
cmp
test
test
lods
cmc
bound
mov
mov
in
and
mov
adc
jge
ss
mov
cmp
in
xchg
adc
shrb
lods
xchg
jmp
imul
mov
cmpsl
mov
fnstenv
xor
mov
push
pop
rorl
or
sbb
ret
loope
dec
jecxz
int
lods
sbb
adc
pop
es
sub
stos
dec
insl
repz
xor
movsl
jmp
sub
mov
adc
test
outsl
adc
ljmp
je,pn
inc
and
mov
cmp
out
cmp
pop
inc
test
mov
lods
dec
jo
pushf
xor
add
or
jl
shll
ja
push
fbld
out
xor
fisttps
pop
adc
xor
mov
dec
pop
aad
add
and
aas
out
or
dec
enter
push
repnz
fsubr
xor
fmuls
and
loop
jecxz
cld
addr16
cltd
jb
push
add
adc
outsl
ficoml
outsb
xor
into
cmpsl
push
in
les
pop
sub
mov
sub
jmp
push
mov
jbe
mov
add
imul
std
int
or
outsl
fdivrl
pop
jl
lods
push
or
je
jae
xor
jl
jp
xor
ret
mov
pusha
mov
xor
jbe
adc
sbb
sbb
xor
add
mov
or
jb
fld1
mov
add
add
xchg
sbbl
imul
into
ja
lcall
rep
mov
inc
std
insb
xchg
arpl
into
mov
icebp
jp
adc
push
pop
jns
lahf
jle
xchg
mov
xor
jo
add
addr16
lahf
aas
inc
mov
dec
pop
xchg
bound
xor
les
fincstp
fwait
lahf
adc
ljmp
mov
mov
pop
pushf
xor
imul
xchg
imul
or
sti
xor
pop
leave
jnp
xchg
stos
jb
aam
test
sbb
imul
and
xchg
data16
cli
data16
ja
fimull
and
int3
cmp
in
or
xor
or
jnp
insl
out
sub
cmp
popa
xor
mov
test
push
loope
push
mov
mov
test
push
pop
int3
insb
shl
push
add
js
cmp
daa
fnstcw
mov
fstps
shrb
jp
pop
imul
pop
movsl
shll
sbb
cld
out
js
jl
fsubs
cmc
stos
int
xor
rol
lret
push
pop
xlat
inc
sub
mov
sarb
and
out
mov
into
ljmp
cld
pop
shll
lcall
enter
push
or
mov
mov
jge
daa
and
ret
jae
lea
outsl
fsts
jne
lahf
data16
pop
stc
jmp
mov
sub
mov
stos
movsl
lds
xchg
icebp
and
mov
or
sar
pop
test
shll
xchg
pop
out
bound
inc
popl
lcall
pop
mov
adc
bound
clc
out
imul
fbstp
add
mov
arpl
pop
in
pop
mov
es
ror
divb
pop
and
aam
bound
add
stos
or
into
cmp
outsb
lds
jno
jg
repnz
imul
and
xlat
fs
jmp
fldt
or
pusha
mov
loope
push
sub
cwtl
add
rsqrtps
xchg
in
jno
ret
push
fstpt
cld
dec
dec
clc
and
push
jge
sub
outsl
addr16
sti
sbb
sahf
lods
adc
aaa
pop
bound
outsl
test
cmp
rcrb
outsl
imul
mov
xor
out
fwait
add
xor
mov
mov
scas
sbb
jmp
pop
in
fnsave
push
xor
out
paddq
push
arpl
pop
pusha
mov
and
or
mov
nop
pop
and
xorb
outsb
movsb
lods
push
and
xor
pop
inc
pop
mov
cld
insl
mov
push
dec
stc
jb
pop
jecxz
iret
imul
pusha
icebp
lret
insl
daa
decl
inc
stos
jp
cltd
inc
into
fcomip
stos
pop
divl
pop
sub
movsl
or
and
push
pop
testl
sub
arpl
sub
dec
ljmp
mov
jbe
push
int3
and
xchg
pop
stc
push
enter
aaa
loope
xlat
rcrb
adc
sub
call
jmp
mov
jl
es
daa
push
dec
ss
mov
cmp
xchg
test
mov
cmpsb
psrlw
push
mov
mov
movsb
mov
insl
xchg
adc
mov
loop
lret
pop
cwtl
inc
mov
in
pop
mov
mov
icebp
push
pop
nop
popf
dec
jle
lds
movsb
add
xchg
outsl
rol
dec
push
or
sbb
sub
inc
mov
sub
movsl
rolb
in
lea
jb
dec
f2xm1
shll
cld
xlat
xchg
mov
fs
shlb
push
jecxz
mov
jo
cmc
adc
outsl
add
add
add
jmp
int3
xchg
ss
adc
lea
jmp
div
sub
cmp
lods
sahf
push
cltd
cmp
inc
or
sar
sub
pop
loop
sti
lods
rcrl
xor
fucom
jns
push
cmpsb
adc
les
std
jo
xchg
orb
mov
cmc
mov
cmp
leave
imul
mov
fwait
repz
test
cmp
jnp
dec
adc
inc
out
and
out
mov
mov
lahf
and
xchg
lcall
adc
inc
in
insl
push
pop
cmpsb
test
cmp
clc
out
pop
mov
mov
inc
jne
mov
mov
inc
scas
inc
dec
jbe
ss
enter
and
pop
mov
dec
stos
aaa
mov
sbb
shl
lcall
testl
mov
adc
xor
xchg
addr16
inc
adc
or
jecxz
lcall
call
mov
jae
cmpsl
jmp
and
lods
aaa
cmp
add
out
decl
add
cmp
jge
adc
mov
sub
pop
gs
insl
push
mov
and
xor
mov
imul
das
daa
jb
jle
lock
cmc
adc
mov
lods
ret
and
lods
arpl
jne
repz
mov
call
push
cld
lea
lea
bound
pop
inc
cmpsl
clc
popa
push
push
sub
dec
adcb
pop
xor
loopne
ljmp
push
into
sbb
mov
rorb
push
pop
shrb
rolb
pop
mov
xchg
mov
push
lods
mov
mov
lods
daa
popf
pushf
or
out
fcmovb
jns
shll
dec
lods
mov
push
int3
into
push
js
fisttpl
xchg
mov
xchg
and
jmp
rorl
jge
cmp
sti
popa
fwait
mov
in
dec
xor
sti
pop
nop
inc
insb
xor
rcrb
ljmp
aas
pop
std
lods
fdivl
jns
popf
cld
or
pop
jnp
sti
xchg
inc
mov
xchg
aaa
in
pop
jo
dec
je
dec
std
jl
ljmp
mov
jno
jno
loop
addr16
sub
mov
ljmp
push
mov
rolb
aam
or
int
xchg
mov
clc
out
push
add
notb
xor
adc
sarb
jno
push
or
lods
xchg
cmp
shrl
subl
sarl
js
into
cmp
mov
xor
shlb
int3
in
aas
xor
enter
mov
in
data16
cmp
and
ja
ljmp
and
fwait
lret
cmp
mov
sub
push
inc
js
out
test
adc
fs
add
repz
mov
movsl
cmc
mov
out
scas
scas
inc
leave
out
jecxz
es
inc
adc
les
stos
xchg
dec
pushf
mov
imul
pop
mov
insl
xchg
pop
inc
pop
adc
inc
mov
or
test
decl
repnz
add
fsts
sub
xor
dec
mov
cmp
sub
mov
popf
outsb
mov
das
add
ds
jno
dec
jle
sub
lds
and
and
shrl
xchg
loopne
scas
inc
mov
mov
out
iret
mov
xchg
ret
shll
or
xor
sbb
xchg
in
jmp
aad
add
inc
and
xor
aad
adc
mov
adc
mov
jmp
or
nop
int3
fsubrs
xor
xlat
mov
aas
push
frstor
test
pop
pop
cmp
into
pop
inc
mov
icebp
sbb
repz
adc
xchg
push
pop
lret
cmp
add
mov
pop
cmp
sti
and
xor
or
mov
ret
pop
add
xchg
jmp
inc
pop
lcall
in
icebp
bound
cwtl
dec
pop
add
mov
jge
int3
mov
adc
ret
push
xchg
xor
jmp
inc
or
mov
mov
cmp
in
cmp
fs
pop
adcl
pop
shrb
jo
mov
mov
test
es
incl
pop
mov
push
cmpsb
fisubs
jl
mov
inc
mov
je
dec
imul
rol
out
lods
adc
xor
dec
mov
jae
lcall
icebp
repnz
das
and
addb
mov
xor
cmp
inc
xlat
xchg
fwait
in
dec
test
mov
scas
push
adc
mov
cmp
out
lret
inc
divb
sbb
xor
and
invd
sub
mov
lret
inc
sahf
xchg
xlat
jl
aas
lret
mov
mov
data16
add
leave
cmp
jg
mov
sub
dec
fldenv
xlat
mov
add
or
xor
insb
sub
gs
sahf
ds
lret
cli
or
mull
jmp
dec
fildll
ret
adc
xor
in
cmp
int3
insb
hlt
jmp
lods
sub
push
imul
and
mov
fsts
add
or
movsl
mov
push
stos
adc
movsl
cmp
mov
loop
xor
int3
xchg
fbstp
fwait
pop
cwtl
out
pop
xchg
lret
jnp
test
push
mov
xchg
lods
adc
ret
pop
sub
add
mov
pop
cmpsb
loopne
aaa
cmpsl
jb
cltd
nop
mov
sub
test
sbb
ret
out
adc
loop
xchg
stos
stos
xor
dec
mov
jg
cmp
ret
adc
movsb
outsb
scas
mov
or
mov
adc
inc
mov
push
popf
push
mov
out
movsl
rcrl
cmpsb
les
xchg
nop
xor
adc
mov
mov
data16
lea
adc
xchg
dec
test
add
loop
cli
inc
push
pop
xchg
pop
lods
cwtl
push
jo
mov
in
adcl
add
dec
mov
and
shrl
cmp
divl
mov
insb
mov
outsl
orl
movsb
mov
cmpsb
dec
adc
aas
ret
fidivl
mov
in
lods
es
add
out
dec
test
xor
jecxz
fistpll
mov
cwtl
xorl
push
clc
mov
clc
scas
repz
pop
mov
lock
push
out
sar
cld
test
dec
popf
nop
sarl
mov
jo
push
adc
test
shlb
dec
mov
jl
cmp
outsl
cltd
lret
icebp
xchg
mov
out
lock
cmp
ret
popl
push
das
lock
jae
pop
mov
rorl
xchg
dec
inc
out
mov
dec
addr16
fprem1
xchg
in
fs
mov
mov
leave
cmpsl
mov
ss
test
bound
jne
pop
pop
adc
mov
mov
xor
lahf
shrl
inc
notb
roll
mov
pop
inc
mov
add
imul
push
stos
test
xchg
flds
cmp
adc
xor
imul
bound
dec
jp
jbe
sahf
add
test
addl
push
and
sbb
pop
inc
aas
sbb
mov
fbld
xchg
mov
dec
mov
xor
jecxz
fdivrp
mov
lods
add
or
push
cwtl
pusha
add
xchg
addb
jle
push
cmpsl
jmp
aas
cmp
call
scas
pusha
mul
cmp
cld
aas
ret
add
aaa
iret
ljmp
out
inc
jl
sbb
push
cltd
test
js
push
lret
ja
aas
sbb
pop
enter
test
fs
xor
push
add
xor
bound
inc
lds
fwait
add
outsb
adc
mov
dec
lock
shrb
insl
mov
je
gs
mov
xlat
jbe
test
mov
inc
out
xchg
mov
pop
stos
sub
ljmp
rcr
push
xchg
push
push
int3
mov
inc
dec
in
xchg
lds
pop
push
jl
jne
jmp
lret
cwtl
xor
jmp
cld
icebp
jp
pop
mov
mov
dec
xchg
movsb
loopne
xor
fsin
mov
xchg
adc
pushf
mov
xchg
mov
or
inc
testl
inc
cmp
jge
cld
in
aaa
fcomps
push
add
les
adc
out
inc
repz
dec
jo
cmc
xlat
lret
pop
sbb
inc
sti
mov
push
pop
push
pushf
or
out
int
es
ljmp
stos
add
sub
pop
int
addb
aaa
les
outsl
mov
mov
mov
in
shl
out
fdivs
pop
or
xor
or
out
fcomps
addb
sub
in
jl
fwait
push
loopne
add
xor
mov
sbb
sub
cmc
adc
loop
aas
sbb
jne
ja
andb
sbb
fwait
ja,pt
mov
xchg
jecxz
xchg
sbb
popa
iret
into
lret
pop
cltd
cmpb
dec
pop
nop
in
ja
stc
fildl
cmc
addl
jge
push
inc
xor
jp
jmp
mov
repnz
xchg
fnstsw
jae
pop
mov
cmp
cmpsb
fsts
cld
in
pop
pop
inc
and
cli
pop
inc
pushf
pop
adc
hlt
flds
popf
inc
cs
jbe
call
add
into
cli
inc
stc
je
subb
and
jg
jmp
xor
dec
fidivrl
arpl
mov
repz
cld
mov
mov
inc
cmp
cltd
scas
xchg
pop
cmp
stos
mov
cwtl
leave
xchg
gs
inc
xchg
jmp
ret
inc
and
or
in
clc
movsl
xchg
cmp
stos
mov
jno
fildll
xchg
push
pushf
adc
mov
daa
mov
push
imul
push
test
cli
call
sbb
add
mov
pop
data16
jg
jno
and
in
xor
loop
stos
mov
mov
jge
add
stos
je
js
add
adc
or
fildll
arpl
push
xchg
lock
jne
cmp
jnp
loopne
gs
pushf
inc
dec
arpl
adc
cltd
pop
stc
add
mov
ss
lcall
push
andl
mov
jo
inc
mov
call
mov
xor
xor
fwait
bound
dec
sbb
lea
pop
inc
inc
lcall
popf
add
pop
mov
xchg
cmp
mov
xor
subb
dec
sub
add
outsl
adc
gs
enter
mov
sub
movsb
ret
lret
dec
scas
imul
into
call
rcrb
stos
dec
mov
mov
hlt
cmp
incl
into
andl
dec
cmp
pop
mov
add
sub
mov
xor
iret
cld
mov
mov
daa
fnstenv
testb
ds
jp
stos
pop
jbe
shll
dec
pop
jl
into
push
mov
int3
enter
mov
fcompl
ret
into
xor
adc
mov
push
test
iret
cmp
ljmp
sbb
pop
loop
mov
std
xchg
dec
xorb
pushaw
or
shlb
or
aaa
add
push
and
xchg
cli
and
cmp
sbb
call
or
lea
pop
mov
cmp
lahf
ret
loop
test
hlt
mov
xorl
adc
add
das
xchg
fildll
jo
adc
sbb
out
imul
jg
test
fnstsw
mov
adc
mov
jle
sub
pusha
sub
fimull
xor
jecxz
rol
dec
mov
cmp
lods
out
sti
ljmp
test
xor
outsl
sbb
loopne
cmc
push
sbb
or
hlt
and
addr16
cs
cmc
xlat
movsl
fdivrs
mov
sub
popa
sub
ljmp
and
xor
out
xor
sbb
sbb
lret
cwtl
xchg
pop
mov
mov
aad
repz
sti
add
inc
push
fninit
dec
movlps
push
lods
cltd
mov
cltd
fcmovb
jno
mov
sbb
dec
fnstsw
outsl
pop
rorl
mov
das
dec
movb
cmpl
out
xlat
sbbl
inc
cmpsl
and
into
mov
xchg
mov
stos
jge
mov
adc
sub
cmp
call
jp
xchg
popa
std
jl
test
test
repnz
cmovge
add
cwtl
adc
adc
push
xchg
cmpsb
mov
add
xchg
inc
cmp
incl
push
lahf
sub
mov
or
hlt
add
loope
mov
xchg
bound
xor
dec
scas
fs
clc
mov
push
sbb
dec
add
push
fldl
sbbb
adc
pop
sub
dec
and
mov
jecxz
push
inc
cwtl
std
jecxz
or
enter
push
popf
movaps
pop
hlt
into
jmp
pop
jg,pt
xor
lahf
outsb
std
and
add
sub
ja
mov
and
dec
fs
sbb
enter
aas
or
adc
lds
shll
mov
jg
xor
jp
ret
and
cmpsl
mov
adc
int3
sbb
aas
push
out
pop
push
pop
test
mov
pop
mov
push
or
sbb
insb
pop
push
sbb
pop
mov
pop
mov
lods
popa
mov
sbb
call
es
pop
lods
imul
fisubrs
fs
mov
adc
dec
adc
dec
mov
ret
xor
mov
stos
arpl
add
shll
cmp
mov
push
loopne
popa
das
mov
leave
inc
xchg
sub
push
push
push
sbb
cmp
lea
mov
insb
jns
cmp
jp
add
stos
sbb
pop
xlat
scas
xchg
jns
xchg
xor
sti
imul
mov
pop
rcll
je
lods
and
stos
fistps
in
inc
mov
xor
push
cmp
fdivl
sub
sbb
xchg
and
sbb
int3
lock
xchg
mov
push
pop
dec
mov
jae
push
popf
ds
xchg
lea
xchg
loop
pop
sbb
fdivl
repz
in
popa
and
xchg
jmp
in
xor
push
mov
jne
push
test
xchg
lods
jb
push
mov
incl
pop
test
inc
or
scas
push
into
cmpsl
sbb
mov
iret
aam
jge
jnp
or
jecxz
comiss
pop
mov
mov
aad
xchg
add
iret
mov
mov
mov
sbb
subl
cld
and
lods
jno
js
outsb
cli
mov
or
out
and
push
push
push
mov
push
xchg
jmp
aad
test
inc
push
ret
jmp
fdivrs
sub
ljmp
test
in
pushf
add
decb
jmp
aam
sub
jge
notl
shll
int
clc
add
inc
and
cmp
rolb
leave
ret
xchg
aas
jp
xchg
clc
int3
sbb
push
cmp
gs
aas
movsb
mov
daa
pop
gs
push
dec
add
or
test
or
imul
push
xchg
inc
cli
rorb
add
inc
mov
jmp
aam
aas
lea
std
cld
jp
mov
lock
clc
pushf
insb
cld
outsb
xor
rcrb
movq
es
jnp
call
sahf
add
xor
mov
xchg
fadds
popf
and
mov
mov
imulb
pusha
mov
dec
jge
push
mov
xor
xlat
test
dec
xor
sub
push
fistl
and
arpl
dec
shrb
pop
cmp
popf
inc
icebp
fabs
add
enter
notl
sbbl
xchg
xor
or
clc
in
pushf
and
mov
gs
mov
scas
femms
push
or
pop
mov
mov
cmp
mov
lret
pop
jp
repnz
popf
xor
int
je
test
dec
lahf
aaa
push
mov
cmp
jg
ja
push
push
jb
and
sub
adc
mov
add
adcb
out
into
out
mov
out
or
push
aam
dec
sbb
lods
add
jns
popa
aaa
ds
shrl
and
dec
cltd
pushf
and
nop
cmp
xchg
mov
pop
cmp
imul
lock
mov
sbb
sbb
jne
jle
cltd
sar
or
add
push
dec
mov
daa
fldt
ret
dec
xchg
push
xorb
cli
push
out
mov
aaa
dec
jmp
pushf
jbe
in
adc
in
and
leave
call
mov
mov
stos
pop
add
mov
add
xchg
cwtl
adc
gs
adcl
pop
hlt
add
inc
jbe
pop
sbb
jne
scas
sbb
cmpsl
fdivr
outsl
xchg
xchg
cld
in
and
fstl
fstpt
out
in
dec
and
mov
jns
lret
push
xor
xor
xor
loopne
adc
fwait
call
inc
in
mov
andl
lods
out
lds
mov
jmp
adc
test
mov
lcall
fisubl
xchg
popf
mov
in
loope
fidivl
call
or
jmp
lret
push
jg
pop
jno
mov
jbe
int3
mov
rcll
dec
mov
lods
pop
pop
dec
push
inc
sbb
adc
xchg
pop
lea
sub
rcrb
jbe
mov
lahf
inc
sbb
pop
cmpsb
sub
enter
mov
jnp
mov
gs
push
stc
icebp
sbb
popa
test
mov
xlat
lahf
sub
xor
mov
bound
cmpsb
iret
and
xchg
inc
lods
mov
mov
dec
xor
xchg
dec
lds
movsb
mov
pop
push
xchg
sbb
and
popf
rcrb
xchg
lret
bound
mov
out
lds
lret
sub
inc
stos
hlt
dec
xchg
in
and
iret
adc
cmc
jnp
xchg
pop
mov
ret
and
push
dec
fcoms
jb
jno
ficompl
ret
int3
fwait
pop
or
mov
cmc
xchg
mov
jmp
inc
ljmp
xor
jmp
push
imul
mov
adc
jmp
dec
testb
imul
jp
push
add
ret
pushf
cmp
mov
jnp
pop
jb
pop
ret
adc
dec
mov
mov
js
ds
enter
add
loop
outsl
jle
aam
dec
cmp
repz
das
push
mov
mov
roll
ret
mov
jbe
pop
push
mov
adc
mov
sub
inc
mov
dec
adc
pop
jae
loopne
stos
sbb
pop
addb
mov
outsb
push
lret
push
xchg
mov
mov
jge
out
sbb
mov
adcl
and
sbb
fwait
mov
cmc
adc
mov
test
aam
out
and
lahf
mov
pop
rorb
outsb
cwtl
and
xchg
cld
mov
jecxz
mov
and
movsb
and
jge
mov
lea
test
xchg
in
xor
xchg
add
mov
aaa
or
mov
int
mov
jo
adcb
or
roll
in
push
and
insb
lret
push
loop
mov
into
in
sbb
pusha
jne
dec
mov
jmp
mov
add
inc
movsl
jp
loop
fwait
cmpsl
test
adc
out
jecxz
mov
fiadds
lret
sub
jg
add
in
pop
and
pop
mov
arpl
loopne
sti
into
sbb
sahf
cmp
loop
sub
push
xchg
lods
jbe
loope
pop
pop
adc
ljmp
dec
pop
jecxz
sub
add
pop
adc
pop
mov
and
into
rorl
data16
mov
pop
mov
sbb
out
dec
insl
rsm
outsl
adc
popa
stos
aaa
fisttpll
sbb
jbe
loop
pop
dec
sub
sub
lods
call
push
inc
cmpsl
and
movsb
lods
mov
lds
test
adc
mov
pop
std
test
or
faddp
push
push
or
mov
sub
shll
mov
mov
in
mov
mov
imul
or
test
push
dec
sbb
dec
sub
cmp
push
loope
jge
out
scas
in
lock
scas
pop
jnp
outsb
push
pop
jae
std
scas
adc
lret
stc
cmp
fisttpl
cmp
lock
mov
xchg
hlt
mov
pop
dec
push
imul
in
dec
xlat
je
rclb
js
push
jb
cmpsb
inc
mov
sub
fiadds
je
lock
adc
add
pop
pop
cmp
pop
mov
jl
sbb
mov
push
xchg
and
sbb
xchg
loopne
aad
aas
pop
mov
add
mov
out
pop
xchg
xchg
sub
fwait
movsl
push
add
lret
xor
js
mov
dec
mov
subb
and
pop
insl
push
jns
pop
jecxz
sbb
xchg
add
push
sub
movsb
test
mov
insl
cli
xchg
xchg
dec
les
subb
jl
xor
xchg
call
lcall
lea
js
lcall
xor
hlt
dec
mov
push
int3
or
int3
bound
cmpsb
sub
loop
mov
dec
out
mov
dec
stos
ja
pop
int3
mov
lea
adcb
data16
aaa
data16
dec
adc
imul
sub
insl
jle
test
mov
ret
test
test
stos
or
xor
mov
test
pop
stos
jg
add
push
clc
rcrb
add
clc
inc
xor
shl
pop
nop
or
lods
inc
les
paddusw
test
inc
test
mov
daa
sbb
sbb
jg
js
add
dec
cwtl
lock
add
test
cld
in
cli
outsl
pop
or
lock
aaa
jae
pop
in
cmp
loop
push
clc
out
aas
jg
lcall
bound
addr16
icebp
mov
dec
push
cmp
inc
jno
push
jmp
lds
push
outsl
into
inc
xor
push
inc
cmp
inc
jo
dec
imul
push
mov
xchg
mov
outsl
push
push
xor
and
mov
test
shl
and
pop
inc
lahf
sbb
adc
test
ds
push
ficoms
mov
inc
rolb
dec
mov
aam
imul
movsb
scas
adc
xchg
add
pop
scas
lock
js
sti
xorl
xor
and
arpl
jle
xorl
xchg
sub
inc
xchg
leave
jno
js
rol
mov
and
dec
lods
aad
test
xchg
xchg
add
cmp
stos
fdivrl
out
and
faddp
popf
mov
pop
mov
xor
rcll
jp
push
sbb
pop
stc
push
jecxz
xchg
cwtl
sub
jg
addr16
daa
pop
mov
dec
sbb
lods
ror
adc
cmpl
lret
je
bound
int3
fcoml
mov
outsb
jnp
pop
mov
sub
jo
add
ljmp
push
jo
and
push
aad
dec
mov
mov
sbb
jle
pop
lahf
dec
stos
inc
push
stos
and
nop
stc
mov
outsb
repz
ljmp
sbb
stc
dec
xor
test
lcall
incl
cmp
hlt
sbb
aas
ret
xchg
adc
inc
lahf
mov
jne
mov
push
pop
or
inc
pop
push
cltd
sub
add
and
jle
xchg
jl
xor
lret
test
xchg
adc
addr16
test
xor
mov
sub
cmp
jle
jae
test
cmp
icebp
jmp
lds
cmpsb
push
lret
repnz
push
pop
imul
cmp
int3
sbb
inc
dec
outsb
lahf
mov
fnstsw
lahf
jns
pushf
adc
or
fiaddl
stos
ret
inc
jbe
xor
add
mov
pop
ret
push
jmp
lods
sub
dec
mov
jb
cmp
les
loopne
xor
inc
fs
pop
mov
mov
dec
push
test
jne
stos
mov
outsl
jne
jns
jp
xor
sahf
sub
cld
mov
sub
mov
mov
sti
imul
lock
mov
mov
mov
mov
inc
push
mov
adc
sarb
inc
dec
lahf
lods
addr16
push
sub
arpl
in
push
andl
sbb
hlt
cmp
and
daa
in
cmp
mov
ss
fistpll
or
adc
push
jmp
in
decl
cmp
dec
xchg
test
adc
push
pop
out
cld
mov
xchg
xlat
xchg
adc
aas
xor
pushf
ret
mov
jp
mov
mov
cmp
sbb
sub
sub
adc
fld
sti
fs
aas
jp
into
ret
xchg
imul
sub
cmpsb
and
push
jl
movsl
cmp
jmp
dec
int
sub
push
xchg
cmp
pop
jbe
std
and
orl
int3
cli
add
lret
dec
movsb
and
xlat
or
or
rclb
and
mov
stos
jne
je
pushf
pusha
dec
cmovns
daa
leave
cmp
add
mov
icebp
xchg
mov
pop
cli
loopne
cmp
cmpsb
scas
push
pop
mov
notb
in
jp
ja
sbb
jo
ljmp
mov
pop
xlat
popf
rcrb
push
mov
iret
enter
rcrl
pop
insl
pop
xlat
insl
pop
sbb
push
mov
loop
adc
pusha
into
std
repz
movsb
addl
mov
mov
aaa
out
mov
mov
movsb
aam
push
sbb
or
aaa
ss
jnp
pushf
pop
sti
adc
add
adc
or
mov
notl
cwtl
xchg
sbb
ds
xchg
jle
and
popa
ds
test
stc
je
xchg
fisubrs
pop
xchg
push
xchg
push
cwtl
and
loopne
jmp
fwait
cmc
outsb
pop
xor
orl
js
cld
movsb
into
mov
int
xchg
ds
add
sub
lods
push
mov
test
push
lcall
sbb
jo
int
or
subb
pop
mov
incb
push
cmp
adc
pusha
jmp
rorb
or
mov
ljmp
out
adc
jg
ljmp
shrb
mov
orb
std
ret
lock
pushf
rclb
and
and
pop
pop
sahf
movsb
je
push
dec
mov
mov
jo
inc
xchg
jne
test
repnz
cmp
out
adc
mov
xor
sarl
sbb
inc
outsl
cmpsb
adc
cli
cmpsb
lcall
jecxz
mov
xchg
pop
shll
cmp
jp
mov
lods
xor
xor
test
mov
int3
push
jae
movsl
inc
lret
icebp
xchg
mov
dec
int
scas
add
mov
and
loope
lret
in
pop
outsl
xor
pop
pop
mov
inc
adcb
addr16
leave
dec
sbb
cwtl
imul
mov
pop
fprem1
cmp
lock
xchg
push
mov
add
pop
cmp
jo
int3
push
into
negb
mov
mov
pop
jp
clc
rorl
stos
cltd
sbb
ficoml
lea
push
pusha
jge
leave
dec
dec
push
add
ret
sbb
fwait
sub
add
push
xchg
mov
xor
pusha
loope
and
loope
es
mov
cmpsl
aad
repz
or
add
or
shll
lret
bound
cmp
mov
jno
xchg
aas
shlb
or
lea
test
pop
xor
pop
add
cwtl
pop
cmpsl
push
aaa
adc
and
pop
pushf
jns
pop
gs
xchg
addr16
jae
jo
call
vmovntps
mov
loop
cld
adc
sub
and
cmc
jae
ds
insb
cld
arpl
iret
xor
pop
icebp
stos
std
addr16
dec
popl
dec
push
movsb
shlb
imul
mov
fcmovbe
sbb
fwait
mov
and
fcmovb
cs
cmc
js
and
mov
inc
ljmp
loopne
xlat
ljmp
rcpps
fldenv
ror
pushf
pop
mov
push
and
jle
loopne
or
outsl
cmc
jno
add
cmp
mov
mov
cmp
mov
adc
mov
test
in
pop
out
je
ljmp
dec
cwtl
lcall
xor
sbbl
insl
pop
mov
pop
es
jmp
inc
inc
subl
push
jae
sbbb
repnz
pop
stos
xchg
pop
sbb
push
lods
xchg
rcll
sub
and
push
mov
dec
xchg
enter
popf
imul
jae
js
div
sub
jb
in
fs
ficompl
fs
imul
cmp
in
scas
repz
clc
cmpsb
pop
and
jp
or
inc
pop
jle
push
cmp
fnstsw
adc
pushf
loope
cli
aad
mov
sub
inc
cld
cmpsb
in
inc
add
mov
jp
int3
pop
mov
inc
xchg
jb
cmp
fistpl
cmp
rclb
ss
sub
test
add
out
in
aam
call
jns
gs
push
lahf
or
test
mov
dec
add
mov
sti
in
mov
in
test
mov
testl
inc
inc
add
test
adc
or
in
xchg
inc
test
jmp
sub
jle
pop
insb
push
popa
test
push
incl
dec
popf
scas
sub
shrb
adc
fwait
jb
and
lods
dec
fldenv
xor
mov
pusha
cltd
mov
dec
imulb
imul
jo
paddb
sbb
fs
jno
mov
jo
pop
lock
push
lea
ja
jge
es
mov
sub
out
dec
scas
jb
push
or
mov
pushf
leave
jmp
nop
mov
cwtl
pop
mov
jl
out
sub
cmp
xor
repnz
std
js
ds
in
jge
mov
mov
dec
out
pop
in
jnp
rclb
sub
loope
cmp
pop
mov
xchg
inc
push
fsub
and
push
testb
outsl
ja
adc
das
dec
add
in
mov
pop
and
adc
popa
push
add
jmp
pop
jns
or
adc
add
jb
jno
mov
adc
cmp
adc
rolb
dec
cmpsb
arpl
xor
mov
sbb
xchg
adc
shlb
or
dec
mov
dec
aad
inc
dec
aas
add
sub
jns
rcrl
mov
ljmp
pop
adc
cld
cli
test
xchg
divl
das
stos
push
lods
lock
into
mov
dec
repnz
in
xchg
pop
dec
add
sbb
mov
stc
sub
fs
push
lret
call
insb
loope
loop
add
push
fnstenv
jb
dec
gs
insl
mov
xchg
sti
push
mov
mov
pop
push
and
loop
jae
into
xor
sub
ret
shrl
cmp
nop
mov
and
mov
xlat
cld
int
push
inc
bnd
xor
dec
jno
sbb
dec
sbb
rcr
lea
jl
insl
outsb
or
lods
mov
push
sbb
mov
push
add
decl
xchg
icebp
jmp
mov
lods
adc
xor
push
mov
movsb
xor
gs
fs
push
cmp
lock
and
xor
xlat
xor
jl
sti
int
xor
bound
pushf
outsb
cmp
sub
add
enter
in
fucomp
mov
xchg
mov
sti
ljmp
pop
faddl
out
dec
test
and
js
cs
imul
jmp
sahf
stc
inc
sub
addr16
cmp
fnstsw
xor
jne
xor
mov
push
das
cvttps2pi
je
mov
out
scas
inc
and
mov
jmp
add
xor
les
frstor
popa
xchg
sarl
push
xor
xchg
xor
jmp
shlb
push
popf
adc
adc
push
imul
mov
inc
hlt
jno
cwtl
outsb
cs
mov
lahf
lods
or
icebp
jne
mov
add
cmp
mov
xor
push
adc
imul
fistps
stos
ljmp
sbb
into
mov
int3
in
push
or
cwtl
dec
sbb
pop
pop
outsl
call
gs
loop
xor
out
outsb
mov
push
jne
jmp
scas
sbb
sbb
dec
jne,pn
mov
ret
inc
dec
aam
adc
jne
mov
jecxz
popa
cmp
adc
add
sub
vpmacssdql
daa
push
or
rolb
into
ret
jo
outsl
popa
dec
inc
sub
pop
int
lods
iret
pushf
fistl
sub
and
mulb
int
push
adc
mov
int3
testl
ret
sbb
push
jno
mov
test
in
pusha
mov
pop
jg
lcall
daa
pop
dec
fidivl
loop
adc
sub
mov
stos
mov
mov
in
mov
mov
mov
add
pop
out
mov
push
xchg
nopl
fiadds
dec
cmc
add
outsb
dec
mov
js
daa
cld
push
lahf
add
and
push
jbe
es
push
adc
mov
push
ja
daa
xchg
imul
jne
jg
hlt
pop
mov
incl
cld
cld
pop
lcall
gs
stos
js
addl
roll
clc
arpl
scas
xchg
push
xlat
imull
xchg
decl
xorb
pop
rol
test
and
filds
fs
sub
data16
push
mov
xchg
sbbb
inc
sbb
xor
xor
lods
xchg
mov
cwtl
loopne
mov
xor
mov
jns
and
popa
pop
mov
clc
jg
rorb
sub
cmpsl
imulb
scas
cmp
es
out
dec
pop
xchg
sub
test
inc
mov
fcoms
push
fisubs
pushf
push
mov
add
pop
les
jecxz
fdiv
cld
push
adc
outsl
rcrb
cs
cmp
or
popf
rclb
popf
inc
add
test
test
in
dec
bound
xor
gs
pop
mov
mov
jp
pop
stc
lcall
mov
jnp
rclb
pop
lds
mov
sub
pop
or
pop
xor
das
mov
and
test
aam
ss
xchg
repz
jno
sbb
les
mov
test
or
sub
push
aas
fildll
jno
les
and
imul
dec
fildl
outsb
add
les
daa
jne
out
mov
push
pop
jbe,pn
lds
sub
and
and
arpl
lods
sub
sbb
pop
flds
dec
scas
out
int
sbb
and
jle
je,pt
fs
mov
pop
xchg
dec
scas
dec
fisttpl
cmp
out
and
inc
fbld
loop
adc
lds
ss
shlb
cli
cmpsb
lahf
adc
jb
repnz
push
and
rorl
pop
pop
pop
xlat
mov
lret
sub
mov
out
mov
orl
inc
cmp
push
sbb
outsl
sahf
mov
push
scas
xchg
int
in
aad
push
mov
repz
ret
pop
pop
hlt
mov
imul
jmp
jle
or
push
pop
mov
xor
sbb
sbb
aam
inc
mov
mov
cmpsb
mov
dec
adc
aas
popf
int
and
xchg
cmp
pushf
pop
and
cmpl
push
sbb
loopne
and
movsb
xor
mov
push
pop
xor
pop
sbb
xor
icebp
iret
cmpsb
orb
out
iret
pop
and
push
in
push
jmp
push
pop
sub
es
mov
add
test
movsl
ficoms
scas
dec
scas
add
push
fnsave
lcall
es
mov
test
es
or
movsl
jns
cmpsb
fdivrl
mov
cmp
cli
xor
add
pusha
ds
lods
add
loopne
bound
shr
sbb
push
call
adc
xor
dec
pop
inc
daa
xor
imul
sbb
and
bound
aaa
outsb
cmpsl
call
push
and
into
push
dec
loop
stos
fwait
rol
lds
lock
add
rcl
mov
xchg
dec
outsb
imul
dec
mov
stc
sbb
loopne
sbb
add
push
loop
pop
ss
je
nop
fwait
sbb
test
int
pop
adc
mov
inc
sub
nop
xchg
pop
add
and
or
xor
sbb
push
xchg
movsb
mov
andb
mov
sbb
in
dec
push
testb
adc
mov
lahf
popf
hlt
inc
movsl
pop
lahf
cltd
fstpt
cmp
mov
mov
outsb
inc
inc
xchg
mov
stos
ret
jle
push
jl
lock
xchg
sbb
es
push
inc
cmp
sub
dec
outsl
out
mov
js
jnp
pop
and
mov
pop
dec
out
sub
mov
inc
sub
into
aas
fsubl
pop
sbb
scas
cmp
lods
fcompl
dec
test
pop
mov
movb
adc
inc
in
xlat
test
sub
cmp
sti
fisubrs
push
mov
push
sbb
mov
loope
pop
imul
out
popf
es
lea
sbb
pop
inc
inc
ret
mov
or
aad
xor
cmp
lret
pop
into
push
mov
int3
sarl
dec
mov
or
in
xchg
push
arpl
out
inc
inc
fdivrs
rcll
inc
mov
xor
leave
in
inc
mov
cmp
push
sbb
idiv
movsb
jb
mov
mov
lcall
jns
pop
fs
or
shll
xchg
mov
jp
cwtl
inc
push
cmovnp
imul
pop
div
int3
xlat
xor
push
mov
jmp
xorl
fnstsw
xor
mov
sbb
loope
sbb
pop
iret
outsb
ds
test
movsb
pop
outsl
pusha
sbb
leave
push
call
dec
insb
dec
xchg
scas
loope
in
movsb
aam
jmp
xor
push
push
jl
inc
xchg
push
pop
shlb
cmp
adc
addl
cs
mov
cmp
sub
out
mov
fcmovnu
pop
aad
push
test
rolb
xchg
xlat
arpl
inc
sbb
cmp
test
pop
sbb
xor
adc
aam
jl
test
mov
jb
lea
sbb
add
push
into
outsb
mov
cli
sarl
scas
out
add
xor
cld
loope
mov
adc
jmp
subl
jns
int
dec
or
subb
pop
or
cmp
in
add
xlat
push
fmull
mov
and
pop
and
push
insl
lcall
jnp
sub
cmp
mov
mov
xchg
or
test
inc
mov
lods
aad
jge
dec
pop
xchg
pop
movsb
mov
sub
mov
adc
repnz
fmuls
jmp
ss
fisubrl
and
mov
pushf
sbb
out
push
xchg
call
sti
sbb
loop
jne
adc
or
sub
mov
mov
sbbl
fsubl
inc
and
pop
bound
insl
repnz
lea
leave
push
es
mov
cmp
dec
shlb
mov
sbb
data16
inc
mov
cltd
out
mov
and
cmp
iret
cmp
call
sarb
mov
pop
aad
cmpsl
mov
jecxz
icebp
pop
fstps
aam
mov
push
iret
pop
movsl
and
outsb
cld
inc
andb
dec
mov
pop
mov
sarl
adc
push
mov
mov
xchg
outsb
fwait
es
pop
rcrl
jo
mov
imul
mov
mov
push
xor
adc
in
mov
hlt
adc
add
pop
pop
call
sub
jge
xchg
add
rclb
jae
push
aad
sbb
pushf
xor
xor
iret
pusha
clc
sub
mov
jmp
movsb
dec
adc
jbe
lods
into
sub
std
ds
fcoms
xchg
movsl
icebp
in
pop
shrb
mov
cmp
test
shll
xlat
mov
rcr
daa
cmp
clc
pop
or
in
jns
in
sbb
pop
xchg
pop
iret
sarb
dec
or
adc
call
pushf
loope
scas
push
push
les
adc
mov
lods
and
in
data16
sbb
ja
push
dec
push
inc
cld
loope
imul
adc
jecxz
aas
mov
cmpsl
pop
xchg
add
pop
or
xlat
mov
icebp
in
sbb
shl
push
add
xchg
mov
lock
loopne
rorb
ja
es
cs
fs
pop
adc
adc
lret
cmp
xchg
cmp
cmp
cmp
sar
aad
dec
cmp
das
lahf
popf
mov
mov
and
shlb
pop
loopne
out
mov
cmp
lcall
cld
movsl
xchg
jne
push
xor
xchg
add
lret
xor
xor
add
jle
ja
aas
mov
fs
dec
test
or
cli
ret
dec
lret
scas
adc
jno
enter
pop
inc
xchg
add
jl
jns
mov
js
aaa
add
movb
or
sbb
pop
orl
sub
pop
adc
inc
subl
pushf
pop
in
xchg
scas
jnp
inc
mov
sbb
outsl
sbb
fsubrs
nop
aam
in
sbb
jecxz
push
repz
fs
movsb
je
cmpsb
xor
lret
jnp
xchg
mov
jo
jo
js
xchg
inc
pop
xchg
xor
mov
movlps
pop
mov
cmp
sub
movsl
dec
das
mov
push
push
pushl
nopl
ret
repnz
mov
mov
stc
sub
js
loopne
xor
roll
xlat
pop
pop
test
xchg
and
jecxz
push
test
fldenv
push
int3
cmp
in
cltd
push
pop
and
fadd
filds
sbb
movsb
or
jecxz
mov
call
and
pop
inc
loopne
js
loope
das
ljmp
sbb
aad
mov
xor
cmp
frstor
jb
cmp
sbb
cs
sarb
sub
jmp
push
mov
jno
pop
std
jmp
or
ret
int
es
jl
dec
inc
scas
mov
clc
std
mul
sub
add
inc
cmp
jo
repnz
ljmp
adc
test
add
mov
movlps
mov
jle
add
inc
or
fs
in
xor
add
xor
mov
ret
cmpsw
xor
inc
out
xor
mov
jnp
test
jnp
mul
mov
out
xchg
dec
add
xchg
testl
lahf
xchg
cs
imulb
outsb
hlt
pop
icebp
dec
mov
jg
fwait
rcll
xor
cwtl
insb
fistpll
cmovae
lds
sub
mov
inc
adc
scas
xchg
and
pop
adc
test
in
sahf
cmc
mov
or
mov
push
dec
scas
ljmp
mov
mov
sti
rcll
movsb
lret
pop
jg
or
xchg
popa
inc
sbb
mov
jno
imul
lret
sub
std
cld
mov
push
sub
and
fists
aad
loop
xchg
mov
mov
repz
mov
adc
dec
sub
scas
pop
mov
mov
shll
adc
enter
ja
out
subb
gs
pop
mov
xchg
imul
push
mov
stos
lcall
inc
call
mov
dec
add
icebp
test
xor
into
jns
mov
jae
lahf
aad
push
add
sti
pop
hlt
jb
push
pop
inc
jae
stc
jl
stos
imul
inc
cmp
inc
jmp
mov
cmp
mov
jmp
mov
fisubs
gs
insb
mov
repz
or
xchg
mov
sub
testl
insl
jb
shrl
dec
fadds
adc
scas
dec
sub
push
iret
testb
repnz
lods
jl
mov
ljmp
inc
xchg
iret
pop
adc
pop
imul
cmp
lcall
popa
dec
xorb
or
lret
mov
fs
xor
or
sbb
outsl
dec
mov
lret
or
aas
testb
jle
rcr
cltd
mov
and
push
lcall
cmp
push
mov
hlt
dec
sub
repnz
shl
rcrb
push
or
cmp
or
cmp
or
cli
jp
pop
shrl
inc
cmpsl
out
xlat
adc
ret
mov
test
fwait
imul
sbb
xchg
movsl
in
jmp
jp
popf
lahf
and
movb
in
or
lea
xor
jge
push
add
xor
sbb
sahf
lahf
jmp
dec
mov
notl
add
or
dec
fs
pop
xchg
jge
pop
daa
stos
pop
scas
adc
out
into
sbb
enter
imul
jle
jecxz
cmc
jns
test
add
pop
push
cwtl
sbb
push
ljmp
jb
fdivrp
inc
pop
and
and
bound
out
outsb
scas
mov
faddl
ss
push
sub
and
mov
ret
sbb
lds
shlb
out
lock
or
cwtl
cmp
arpl
push
xlat
fidivl
xor
sarb
cmp
cwtl
shll
fs
pop
lds
aam
cmpsb
shlb
les
or
rorb
or
mov
dec
xor
test
dec
dec
or
je
cmp
sub
adc
lods
jnp
call
mov
insb
int
jbe
lcall
cmp
cltd
cmp
cmc
push
push
and
push
and
add
outsb
mov
mov
cld
lahf
push
cmp
mov
xchg
shl
jo
in
cli
into
js
ljmp
cmp
xchg
mov
js
pop
aam
and
jnp
fisubs
imul
das
divl
jp
leave
insl
dec
and
lret
fnstcw
lock
push
xchg
in
xchg
pop
inc
js
sahf
test
jl
test
je
or
lret
imul
scas
fistl
dec
mov
stc
mov
fcmovnbe
movsb
push
adc
xchg
mov
fisubrs
nop
in
mov
subl
pop
inc
dec
push
lock
mov
rcrb
nop
ja
leave
xor
mov
sbb
jmp
rolb
xorl
pusha
xchg
xlat
nop
jmp
dec
and
sbb
push
out
mov
adc
push
jmp
inc
adc
mov
cmc
and
lods
out
xlat
or
sbb
cmp
lahf
mov
movsb
fneni(8087
mov
aam
out
inc
dec
jge
cmp
dec
push
jle
push
dec
xchg
mov
scas
fld
popa
mull
pop
mov
mov
fst
out
mov
xchg
adc
or
outsl
mov
xchg
push
call
jae
mov
lods
pop
sahf
inc
jl
sub
push
mov
push
stos
push
jae
repz
stos
mov
stc
mov
jb
inc
cmp
icebp
outsb
xor
inc
sti
rorb
into
jae
pop
fidivrl
pop
test
pop
imul
mov
jns
sahf
movsb
test
jb
jae
repnz
cld
cmp
aad
inc
fsubr
bound
jecxz
and
sbb
cmp
and
fstps
pop
sbb
cmpsb
mov
xchg
mov
push
pop
sbb
inc
sar
xor
jo
cs
mov
cmp
dec
push
add
mov
xor
mov
inc
jno
adc
movsb
xchg
cmpsl
sbb
inc
roll
jbe
fisubl
movsb
call
add
dec
roll
or
and
out
mov
mov
cmp
aaa
mov
rorb
xor
jb
shl
lcall
pop
and
dec
xchg
or
cmpb
mov
jl
test
adcb
and
mov
leave
xor
sbb
cmpsb
shll
and
aam
mov
or
xorl
mov
mov
fsts
cmp
bound
xchg
fisttpll
and
data16
sub
sarb
fcomps
cmp
mov
inc
cmp
cmp
cmp
push
inc
jno
jne
and
dec
ficoml
jno
and
xchg
mov
lret
and
es
sarl
cli
mov
das
ret
cmpsb
pop
mov
mov
adc
xor
out
movsb
push
sahf
xor
ljmp
test
call
sub
lret
cmp
lret
or
mov
jo
rol
shlb
pusha
mov
loopne
clc
sbb
notl
push
hlt
lea
sbb
sbb
adc
add
into
mov
and
dec
ret
pop
scas
or
test
sub
incb
xchg
addr16
cwtl
xchg
inc
jnp
cmp
sbb
xchg
test
cmp
fidivs
add
aad
xor
sbb
movsl
les
mov
bound
push
dec
imulb
fcom
jb
int3
dec
aas
outsb
push
mov
mov
cmc
cmovnp
into
jns
pop
jecxz
jmp
in
lret
jns
fldcw
xchg
negl
adc
into
and
xorl
mov
or
jb
add
and
sbb
xor
xor
aad
sub
inc
call
jp
rorl
sub
int
cld
insb
mov
mov
gs
pop
cltd
adc
clc
and
aad
lds
das
pushf
cmp
out
mov
or
jecxz
xchg
xchg
dec
ljmp
cli
mov
jecxz
gs
insl
stos
neg
jo
dec
push
ret
and
adc
loopne
inc
push
pop
jo
jecxz
and
dec
lahf
scas
xorb
in
jno
add
lcall
in
jns
aam
pop
std
cwtl
jno
sbb
cmp
jns
rclb
jnp
call
loop
jp
jge
test
pop
or
idivb
cmpsb
push
imul
cltd
jmp
fistps
mov
test
xchg
dec
stos
jl
or
ljmp
sbb
xchg
out
arpl
xor
mov
mov
divb
pop
mov
mov
mov
mov
lret
stc
dec
sub
imul
rcrl
sbb
stos
repnz
sbb
cld
lret
es
in
fucomp
aam
lahf
xchg
shrb
rcr
shlb
pop
push
les
ret
rcrl
in
xchg
mov
call
xor
push
pop
mov
pop
push
sbb
loop
add
xor
xor
mov
sub
test
xor
jg
ss
or
add
sti
jecxz
mov
mov
mov
mov
cs
adc
push
dec
dec
bound
jmp
mov
js
rclb
push
je
xor
pop
and
nop
push
inc
adc
inc
mov
jbe
mov
mov
bound
aas
mov
fisubrs
popf
aas
loop
jno
xor
loope
insb
xchg
ss
xlat
push
cli
push
loope
add
jne
sti
dec
push
jo
nop
push
push
enter
out
sti
les
arpl
sbb
add
xor
ror
pop
movsb
push
sbbb
incl
add
jbe
lret
mov
xor
aas
mov
loop
jmp
leave
out
jb
jae
cmp
dec
insl
xchg
jmp
cmp
xchg
imull
cmp
or
or
sub
mov
imul
sahf
push
jge
cmp
jp
push
xor
in
pusha
repnz
in
xor
mov
gs
lahf
inc
add
push
dec
xor
mov
pop
mov
fldcw
mov
test
push
jle
cmp
mulb
pusha
jbe
mov
mov
mov
adc
sbb
mov
in
dec
fistpl
das
add
into
dec
mov
inc
rorb
sbb
pop
pushf
into
cld
push
arpl
rcrb
cltd
push
hlt
mov
xchg
mov
jno
sbb
cld
fwait
popa
xchg
xor
sbb
js
cmp
xchg
aaa
daa
cwtd
jns
adc
hlt
mov
movsb
sub
mov
cmp
icebp
aas
test
xor
aad
adc
data16
ljmp
jecxz
mov
std
push
cmp
test
dec
inc
inc
xchg
adc
push
mov
insl
sbb
test
sarl
in
movsb
scas
jp
inc
mov
int3
sbb
push
mov
cmp
mov
pop
push
movsl
arpl
jns
dec
je
lods
xlat
movsb
lcall
mov
cld
scas
fcmovnu
ljmp
arpl
imul
sarb
xor
ds
or
pop
sub
mov
ds
lea
movsl
outsb
sub
xlat
pop
adc
cwtl
inc
fucomip
fs
std
pop
sahf
dec
mov
mov
mov
cmpsb
mov
mov
bound
sti
cli
lods
sbb
mov
out
sbb
inc
dec
xor
jmp
insl
cwtl
leave
push
and
aam
test
push
fildl
iret
adc
out
std
bound
dec
pop
mov
cltd
outsb
scas
lea
pop
ljmp
insb
xchg
xchg
jp
adc
outsb
orb
add
bound
sahf
xchg
cmc
ficoml
xor
mov
imul
and
fsub
leave
orl
sbb
sti
popf
xchg
mov
or
stos
jnp
xchg
arpl
push
and
sti
lds
call
les
mov
pop
shrb
mov
jge
fdecstp
ja
pop
jmp
ror
pop
insl
insl
mov
pop
xchg
jmp
add
jge
mov
das
mov
std
jno
lds
pop
mov
and
jns
lods
shlb
icebp
or
sub
aad
insb
xor
mov
cmpsl
cmp
ret
mov
jmp
pshufw
test
mov
pop
sbb
add
iret
and
iret
mov
fildll
ret
dec
sub
addb
mov
dec
bound
repz
xchg
fstl
mov
shrl
arpl
jo
icebp
xchg
and
enter
pop
and
mov
pop
loope
and
xor
push
xchg
sub
sub
sub
ljmp
sahf
jbe
xor
test
add
stc
hlt
pop
cmp
outsl
ja
mov
or
and
xor
or
call
inc
test
or
cwtl
outsb
jne
xor
xor
lea
insb
push
inc
in
mov
aad
mov
xchg
dec
push
lret
fldt
dec
xchg
fwait
scas
xor
lds
sub
movsb
out
popf
jge
adc
lds
mov
inc
ficomps
cli
out
mov
xor
adc
fwait
inc
jecxz
gs
aam
popa
bswap
mov
lds
mov
in
mov
pusha
test
adc
stos
mov
ds
xor
or
enter
push
pop
jae
rol
out
mov
push
ror
add
loop
pusha
add
lret
negb
sti
mov
stc
push
jge
push
test
push
out
mov
nop
jnp
cmp
je
jmp
jbe
insl
lods
ror
hlt
mov
imul
or
fwait
inc
iret
pop
sbb
dec
add
mov
test
pop
cmp
jge
jns
fsubr
daa
xlat
mov
pop
in
cmp
ja
adc
and
inc
cmpsb
pop
adc
lret
inc
sub
subb
lods
fisubl
xchg
adc
hlt
test
push
aad
mov
add
cwtl
stc
mov
jno
pop
pop
sbb
adcl
popa
es
jmp
push
pop
scas
push
cltd
mov
pop
ret
cmp
sub
ljmpw
popf
sbb
xor
xor
pop
dec
dec
test
jns
in
shl
cld
test
jmp
das
mov
mov
xor
or
int3
add
les
sti
dec
aam
mov
push
fadds
pop
sbb
mov
out
std
out
pop
sub
cwtl
ds
leave
sub
imulb
adc
bound
pop
or
fisttps
add
bound
push
cmp
sahf
lods
adcl
xlat
dec
pop
stos
adc
ss
mov
xchg
jb
xchg
mov
sub
xchg
push
mov
inc
fnstenv
andb
inc
sbb
cmp
jbe
jbe
push
cs
les
and
sub
shrb
jl
movsb
push
inc
negl
sbb
add
movsl
ja
call
dec
cmp
dec
call
adc
les
jns
and
sbb
int
pop
and
cmc
loopne
xchg
js
pop
or
scas
xor
sbb
out
out
xchg
mov
inc
inc
test
rclb
scas
mov
jno
sti
or
mov
adc
cmc
push
shll
out
imul
jae
lods
sub
adc
addr16
mov
addr16
sub
cmp
out
scas
inc
cld
loope
push
push
fdivrl
stos
and
xchg
inc
pop
scas
jbe
fwait
cwtl
lds
xchg
sub
mov
push
in
std
ljmp
sub
sbb
or
push
ja
int3
rcrl
add
sbb
pop
in
lret
jle
dec
xor
out
mov
shrd
popa
nop
iret
call
seto
cmp
cld
enter
test
insb
out
mov
pop
inc
cmp
enter
xor
jg
test
call
cli
sbb
dec
cld
mov
inc
into
push
push
mov
mov
push
push
daa
adc
in
adc
call
shll
jle
cmp
ja
ret
xor
repz
lcall
sbbl
dec
inc
stc
cmc
add
int
pushf
and
roll
dec
or
int
xchg
mov
insl
sti
into
fstps
xchg
out
shll
jne
cmp
enter
add
push
aad
mov
mov
sbb
or
inc
push
jb
or
pop
es
pop
sbb
inc
cld
cmc
mov
dec
mov
movsb
js
ror
sub
inc
pop
fistpll
enter
mov
test
int3
cld
mov
ret
mov
lock
push
movsb
push
xchg
adcb
mov
or
jg
popa
insb
inc
push
sbb
leave
lcall
ja
roll
jmp
push
mov
add
sbb
gs
out
ret
repnz
sahf
pop
and
cli
add
jbe
xchg
xchg
lods
clc
mov
in
xor
xor
icebp
in
mov
adc
testl
pop
sbb
test
cwtl
mov
jae
mov
test
in
popf
fmul
fmul
xor
mov
je
dec
mov
das
out
out
sub
les
pop
pop
into
sbb
xlat
data16
and
pushf
lds
jge
pop
pop
mov
arpl
and
sbb
xor
sub
push
je
js
imul
clc
jo
out
or
xor
cmc
pushf
out
jne
jbe
popa
push
in
sbb
stos
enter
jno
mov
rorb
stos
popf
and
sub
cltd
pusha
ret
imul
andb
cmp
push
add
repnz
and
nop
lret
or
jo
push
or
jl
mov
pop
cmc
push
push
popf
enter
mov
ss
imul
addr16
mov
jnp
mov
mov
xchg
mov
popf
outsb
call
mov
mov
push
pop
movsb
inc
into
sub
decb
loop
stc
test
inc
mov
cs
pop
sarb
rclb
jg
adc
ret
adc
shlb
lcall
xor
leave
ret
out
pop
xor
xchg
mov
mov
gs
pushf
ljmp
add
mov
incl
add
es
int
add
ror
mov
push
pop
scas
and
negl
fcmove
sub
cmp
pusha
inc
call
enter
outsl
push
xor
stos
mov
mov
int3
sbb
lds
andb
or
pop
sub
sbb
and
dec
divl
fstl
std
mov
call
sub
lcall
xor
xchg
std
aaa
cmpsb
or
sbb
imul
add
push
lods
pop
mov
imul
sub
adc
xchg
add
mov
sub
mov
sbb
insl
popf
out
mov
cs
mov
push
xchg
add
adc
mov
out
fdivr
data16
mov
xlat
xchg
mov
dec
mov
dec
dec
inc
mov
fwait
mov
arpl
test
and
jno
and
sbb
ss
adc
push
xchg
pop
xchg
jb
jle
mov
jae
mov
out
aas
arpl
push
jae
adc
repnz
mov
cmpsl
pop
scas
daa
mov
mov
cmp
mov
dec
repnz
cmp
inc
and
dec
inc
jmp
cli
and
loope
fdivs
js
jnp
push
das
in
or
lods
lret
pop
dec
std
insl
add
insl
dec
mov
mov
dec
dec
and
push
xor
cmpsb
lea
sbb
iret
fbld
hlt
je
cmp
popf
lods
mov
cmp
out
mov
and
popf
xor
imul
fstps
rolb
gs
pop
mov
pop
pop
shr
mov
xor
aam
mov
imul
cmp
into
daa
test
pop
mov
sub
jp
push
xchg
fidivrs
add
sahf
mov
out
cmp
test
mov
fldenv
loop
hlt
xor
js
and
mov
pusha
pop
addr16
pop
inc
and
cld
xor
and
pop
in
les
sbb
xchg
aaa
mov
mov
dec
idivb
aas
enter
pop
test
loop
imul
sbb
popf
inc
cli
push
xor
xor
or
pop
pop
push
mov
lahf
jb
in
or
popf
jecxz
xlat
fistps
mov
scas
lock
aas
jle
jp
lcall
ljmp
arpl
ftst
cmp
stos
ja
inc
pop
xchg
mov
addr16
jne
xor
mov
rol
xchg
ret
mov
mov
ja
cmp
cmp
in
pop
xchg
clc
push
sahf
rcrl
and
add
xlat
js
mov
push
cmc
inc
and
mov
subl
adc
mov
xchg
sti
xchg
jge
sub
inc
push
mov
int3
fisubrs
adc
int3
cltd
pop
icebp
arpl
xchg
or
xrelease
test
pushf
push
adc
lret
cmc
sub
lcall
leave
pop
imul
fisttpl
lods
dec
mov
rcrb
jbe
repnz
dec
nop
cmp
iret
and
add
sub
int
jo
jmp
dec
jns
popf
dec
imul
xchg
xlat
jg
pavgw
pop
test
mov
popa
xchg
icebp
aas
test
mov
adc
imul
adc
fcoms
mov
fdivl
mov
jne
rcrl
add
sbb
jne
mov
dec
movb
sbb
outsl
pop
sahf
mov
sub
adc
nop
inc
cmp
ss
inc
sub
roll
add
and
dec
adc
sbb
lock
xor
cld
and
test
push
sarb
sbb
popa
pop
ja
ljmp
xchg
and
in
pop
dec
ljmp
xchg
dec
push
rorl
add
lds
imul
dec
add
push
mov
adc
mov
dec
mov
sbb
adc
out
lock
or
inc
mov
push
cli
pushl
mov
add
test
or
int3
lret
in
dec
jl
pop
xchg
faddl
push
and
aad
or
sbb
rol
xlat
pop
cmp
stos
loop
cmp
in
push
inc
mov
jle
stc
and
jae
add
pop
and
js
pop
int
fwait
xchg
movsl
dec
loope
pop
push
mov
out
sbb
jno
arpl
jmp
inc
lods
push
push
push
ror
jmp
mov
push
push
jmp
orb
mov
leave
ljmp
repnz
aas
add
mov
add
or
int3
in
mov
lret
mov
jmp
mov
pushf
push
jecxz
adc
jo
ret
jp
mov
in
inc
mov
xor
scas
lods
fs
repz
popa
lea
out
adc
xorb
jl
sub
mov
aam
scas
fs
hlt
mul
mov
cmp
add
leave
stos
sbb
mov
test
adc
hlt
adc
and
je
ret
mov
pusha
jo
fs
test
dec
into
pop
adc
in
outsl
test
int
cmp
scas
lods
fdivs
inc
adc
hlt
mov
dec
push
das
xchg
jl
je
daa
sbb
or
popf
lock
rcl
aad
int
mov
cld
xchg
and
push
idivb
mov
rolb
clc
adc
sbb
inc
mulps
rolb
jle
push
lret
outsl
or
sub
mov
sti
loopne
clc
pop
mov
leave
adc
shl
push
lea
inc
adc
popa
mov
lods
test
and
cmpsb
fbstp
mov
pop
inc
jbe
xor
rol
out
add
dec
mov
lret
mov
sbb
xor
mov
add
mov
xlat
adc
jne
cmpsl
mov
int3
daa
push
sbb
xlat
repz
sbb
mov
stc
imul
test
loope
movsb
int
xchg
inc
insl
jbe
pop
jmp
fwait
or
les
testl
cli
adcw
fwait
xor
arpl
lret
xlat
xchg
and
dec
shll
inc
in
xrelease
add
test
and
inc
test
and
adc
mov
dec
stos
mov
add
cld
mov
xchg
mov
je
sar
mov
add
adc
push
sbb
rorl
mov
xchg
or
scas
rclb
rorb
in
cmp
push
dec
imul
cmp
jmp
xchg
mov
sbbl
shl
jbe
inc
sbb
dec
mov
sbb
addr16
mov
int
inc
or
in
mov
xchg
test
mov
cld
mov
imul
ud1
sub
movsb
sub
add
sub
fwait
loope
aad
sub
packsswb
js
repz
in
sbb
mov
cmp
sbb
jo
jo
gs
rcl
push
sti
adc
dec
mov
push
inc
mov
outsl
clc
xchg
xchg
out
pop
push
push
ss
xor
out
add
xchg
jae
icebp
outsb
cld
repnz
jo
shrl
insl
sbbb
inc
sub
test
pop
mov
push
or
xchg
sti
jbe
pop
mov
cltd
fisubrl
pushl
push
adc
inc
mov
push
into
lret
inc
call
push
dec
sub
cltd
pop
xor
pusha
pop
pop
loope
pop
push
cmp
js
aam
jae
cmc
push
ret
movsl
mov
lods
sbb
fstl
or
clc
push
repnz
inc
xchg
loop
cmp
lret
xor
pushf
fnstsw
sub
mov
add
test
mov
mov
xchg
pop
test
insb
fs
inc
xchg
add
mov
dec
dec
cmpsb
pop
cmpsl
scas
sub
cmp
cmc
xor
fstps
and
push
gs
lods
cwtl
popf
call
stc
lds
clc
push
jmp
xor
cwtl
push
or
daa
lods
movsl
je
sub
pop
dec
xchg
test
iret
flds
inc
int
cs
mov
lds
jnp
push
mov
shll
and
xchg
jo
mov
test
sti
mov
clc
add
aad
outsl
cmp
aad
adc
cmp
outsl
hlt
sbb
arpl
inc
mov
addr16
fscale
fstpt
cmpsb
jb
ss
jae
mov
and
jmp
fsubr
dec
pop
stos
mov
cwtl
aam
push
mov
sub
mov
fistps
and
mov
out
mov
movsl
lret
gs
mov
stc
rorl
or
xchg
lret
das
jmp
jbe
cmp
jns
pop
pop
lds
push
and
ret
lret
mov
xchg
xchg
push
push
xchg
adc
cmp
or
das
adc
sub
cltd
mov
jecxz
popa
inc
mov
in
aaa
add
stos
test
sbb
pop
cmpsb
mov
adc
sbb
movsb
cmp
stc
sub
mov
out
mov
and
add
adc
jle
pop
cld
lods
ja
and
add
sub
cmp
push
xchg
sahf
and
xor
in
mov
fstps
mov
nop
or
mov
inc
cmp
pop
add
cmpsl
out
lret
test
or
xchg
rcrl
outsl
mov
gs
test
xor
inc
cmpsb
push
inc
xchg
mov
aad
push
into
or
or
sahf
xor
es
dec
out
fisttpll
mov
xor
lock
sub
fsubl
cmpsl
mov
divl
jb
outsb
jo
ret
repz
pop
xchg
cmpsb
rcll
pusha
and
sarl
xchg
mov
pop
data16
mov
pop
pop
pop
xchg
call
fidivrl
mov
icebp
jnp
or
mov
inc
xor
dec
adc
int
repz
or
das
shll
outsl
or
xchg
int
ja
mov
sub
xchg
or
push
push
inc
pop
xor
add
adc
mov
push
fsub
ret
int
mov
push
shlb
jb
inc
xchg
jecxz
mov
pop
in
out
inc
sahf
fnsave
or
mov
out
or
dec
shlb
push
iret
cs
add
addr16
sbb
cmp
pop
test
shrl
lods
xchg
cltd
pop
mov
pusha
out
lret
test
arpl
push
pop
ljmp
cmpsl
mov
dec
out
flds
pop
fistpll
decl
cld
mov
adc
repz
lret
inc
icebp
xor
jno
fs
pushl
sti
mov
pushf
sbb
fwait
leave
dec
mov
mov
lods
xlat
cli
inc
xchg
xor
push
mov
mov
xor
icebp
scas
fnstsw
adc
and
xor
das
cltd
movsl
in
jb
xchg
loope
scas
jp
xchg
xchg
sbb
xor
push
sbb
int
adc
mov
dec
mov
xor
orl
xchg
jns
shr
cli
xor
mov
movsl
xchg
mov
push
jbe
imul
push
push
inc
xor
mov
xor
dec
mov
movsb
repnz
xor
dec
dec
adc
loopne
sbb
les
dec
sub
fmul
or
nop
push
ja
xchg
aaa
lcall
push
icebp
je
pop
clc
add
jb
push
fldl
dec
push
test
jp
lods
cld
mov
jmp
ja
dec
sub
icebp
cltd
cmp
jecxz
inc
scas
shll
pop
mov
mov
dec
test
sub
jp
gs
mov
pop
adcb
jp
lods
lret
pop
aam
add
sub
test
gs
cld
subl
xchg
call
dec
frstor
sub
pop
insb
fisubs
mov
stc
jbe
sub
testb
sub
pop
pop
and
xor
jbe
aam
lock
lods
xchg
lret
and
fwait
mov
in
xorb
mov
pop
movsb
cli
out
addr16
sub
ss
and
sub
into
outsb
push
xchg
pop
movsl
xor
add
pop
jg
loopne
pop
fidivl
sti
push
lock
jmp
jl
pop
or
cmc
outsb
dec
and
push
mov
sti
cmp
dec
pop
xchg
outsl
xor
jmp
push
lds
push
mov
lret
fildll
ror
xchg
ror
pop
pusha
jne
fsubl
sti
pop
or
push
pushf
mov
int
lods
sub
sahf
lods
mov
outsb
lods
mov
ja
int3
adc
cli
pop
pop
sbb
inc
add
in
xchg
ret
or
inc
outsl
es
test
outsl
fstl
fwait
and
fisubrs
xchg
insb
sbb
push
jnp
mov
int
pop
lret
push
cld
fldl
sarb
push
xchg
mov
sbb
add
xlat
pop
imul
jg
xchg
and
push
nop
fisubl
mov
inc
xor
mov
dec
enter
stos
shll
mov
pop
test
sbb
xchg
jmp
sahf
pop
or
mov
cmp
es
push
ja
ds
dec
jmp
or
pop
jae
xor
cmp
sub
or
repz
and
mov
in
mov
fstpl
lret
lahf
xor
aad
sub
in
popf
cmp
xchg
or
sbb
mov
shrl
or
mul
sbbl
push
call
jns
pop
mov
sahf
mov
cmp
pop
add
orb
jae
fs
iret
xor
cmp
jo
int
sti
in
push
push
mov
mov
jmp
flds
lret
sub
pop
push
adc
or
mov
lcall
sahf
fidivrs
lret
out
stc
cmpsb
or
dec
sbb
add
in
lock
sbb
xor
ffree
and
cmp
xor
test
lods
imul
loop
out
pop
add
sbb
xor
test
push
fisubrl
into
push
pop
clc
xchg
jle
inc
jne
mov
imul
inc
and
int
mov
rcll
mov
cmp
dec
ret
iret
and
push
mov
dec
add
jp
xchg
cmp
mov
jns
ds
addb
pop
jmp
add
fwait
jp
pop
mov
repz
fbld
adc
mov
pop
mov
out
mov
and
fnstenv
pop
movl
test
cmp
pop
xchg
sub
insl
mov
lea
es
add
mov
test
std
lea
out
inc
dec
cli
xor
ja
pop
hlt
jl
mov
jge
sub
adc
je
cli
div
fwait
push
aas
lods
dec
sub
cmp
lds
int
xchg
lods
loop
cltd
or
inc
loopne
xor
mov
xchg
xchg
sahf
fidivs
mov
in
mov
push
push
les
fimuls
push
xchg
sbb
xchg
enter
xchg
xor
pop
xor
add
jge
cmp
dec
test
shl
push
push
enter
and
movsl
sbb
out
stc
pop
out
mov
sub
and
aas
repnz
dec
out
jmp
pop
sbb
cmp
pop
push
rep
push
jp
js
sahf
enter
cwtl
mov
mov
mov
cmpsl
or
pop
out
jno
jns
mov
sub
es
inc
cmp
dec
sti
ret
ret
xchg
mov
sub
push
mov
stc
imul
add
cmp
xlat
je
outsb
inc
int
xchg
imul
cmpsl
rcll
call
and
mov
inc
roll
mov
dec
mul
int
add
orl
test
aas
into
pop
lds
sbb
mov
jmp
fwait
jp
add
repnz
xor
sarb
push
sbb
push
notl
insb
fs
or
push
insl
and
ror
ja
ret
in
subl
mov
jp
or
ret
add
js
mov
jp
cwtl
js
xlat
loop
aas
adc
icebp
mov
aam
inc
pop
call
mov
mov
pop
sbb
sbb
arpl
pop
inc
adc
sub
push
cmpsb
mov
fildll
je
aas
add
xchg
xchg
aas
jnp
sbb
mov
xchg
fsubrl
cmp
mov
sub
lcall
xlat
pop
in
jb
cmp
jp
ret
shr
stos
imul
sbb
mov
lock
rclb
push
outsb
jno
cld
cmp
adc
out
jae
pop
mov
test
dec
fdivr
and
jbe
pop
testb
mov
cmp
scas
mov
or
sti
sbbl
mov
xchg
pop
mov
sbb
inc
lods
lds
jno
imul
repnz
cmp
sbb
test
fs
inc
loop
cmc
insl
push
repz
mov
jmp
into
pop
xlat
push
push
mov
push
xlat
mov
imul
int3
out
push
mov
stos
ja
pop
inc
mov
inc
loope
cmp
jbe
pushf
adc
sbb
pop
jg
or
scas
dec
add
repnz
stc
ud1
dec
or
mov
push
xchg
mov
mov
addr16
jae
lods
jl
fists
mov
mov
mov
leave
addr16
decl
xchg
mov
cmp
nop
push
and
sbb
dec
psubq
ljmp
or
int
or
mov
xor
mov
out
mov
popa
add
jns
imul
add
pop
jo
leave
mov
pop
sub
sub
fiaddl
push
sahf
popw
mov
or
push
popf
lea
pop
push
loope
cmpsb
mov
jecxz
mov
pop
xor
ret
cmp
shll
jbe
arpl
or
test
xchg
dec
das
out
and
xchg
mov
and
adc
jmp
sbb
scas
roll
jmp
ds
leave
or
xorl
cs
hlt
mov
push
inc
adc
lahf
jbe
dec
stos
mov
mov
jle
jns
fbld
xchg
dec
iret
fidivs
push
jmp
int
test
mov
xchg
jb
lahf
mov
mov
ds
out
inc
lret
std
test
in
shl
push
cmp
aad
xor
into
mov
ret
lret
dec
test
cmp
daa
push
dec
test
aaa
enter
enter
xchg
mov
daa
push
xor
dec
cmp
in
out
sub
sub
mov
xor
jmp
pop
test
int3
and
jge
jb
mov
aad
mov
notl
push
cmpsb
jns
add
scas
pop
lahf
inc
push
je
leave
xchg
test
dec
cmc
adcb
repz
mov
testb
xor
add
cmp
cmp
cmpsl
xchg
mov
mov
lock
mov
addr16
xchg
and
adc
cmp
test
je
lods
ljmp
inc
lods
jnp
das
repnz
add
ret
inc
loopne
or
lock
scas
mov
es
or
cmp
out
inc
movsl
mov
shll
je
xchg
addr16
aaa
inc
lods
out
pop
mov
or
fs
int
pop
rolb
push
sbb
sub
in
add
fisubrs
es
fbstp
je
cmp
push
jp
pop
into
imul
lahf
jnp
xchg
pop
push
out
testl
sbb
or
sub
sub
jle
sbb
outsb
xor
popf
sub
movsl
xor
call
stos
mov
jae
adc
insl
inc
mov
add
lds
loop
lea
dec
mov
or
inc
arpl
and
iret
test
js
or
sub
push
inc
popa
mov
xor
mov
push
mul
loopne
mov
in
jb
movsb
mov
or
jo
cmp
pop
aam
pop
mov
push
inc
ret
inc
mov
dec
scas
pusha
das
imul
jbe
pusha
mov
ljmp
mov
test
or
leave
push
pop
jp
cmp
aas
lahf
out
aam
mov
sbb
ss
call
lods
pop
mov
arpl
mov
insl
loope
mov
mov
xor
xchg
jbe
lods
xor
loop
mov
sbb
add
lcall
xor
test
mov
fstpt
gs
shll
or
sub
push
jecxz
or
imul
dec
sbb
gs
ss
mov
xor
pop
mov
testl
out
adc
sub
pop
pop
filds
test
sub
pusha
icebp
fldcw
mov
fisttpl
int3
mov
jmp
pop
int
cmp
dec
outsb
add
mov
inc
loop
xor
out
mov
fisubs
pop
data16
inc
mov
push
pop
call
xchg
mov
mov
ret
movsl
jl
jg
xor
inc
pop
stos
adc
xor
inc
mov
adc
xor
scas
mov
jbe
mov
pop
lret
lcall
xor
jl
xor
aad
xchg
ja
mov
mov
push
arpl
cmc
sbb
ljmp
lea
dec
in
je
adc
cmp
nop
test
out
lds
pop
arpl
sbb
xor
xorl
xlat
in
and
lods
aas
inc
mov
mov
imul
pop
inc
stc
jmp
xor
aad
cmp
popa
notb
pop
mov
nop
sbb
ljmp
ja
outsl
push
jmp
cmpsb
and
mov
insb
es
sub
hlt
ret
notb
ret
dec
loope
test
and
ds
or
rcll
mov
inc
retw
pop
inc
setno
stos
icebp
stos
cwtl
dec
jle
loopne
stos
int3
add
lods
fcmovbe
mov
fcompl
fdivrs
cli
jle
lret
lcall
popf
mov
jmp
xchg
or
int
sbb
mov
add
xchg
cli
in
cmc
xor
std
jmp
xchg
add
cmp
movsb
pop
mov
lret
add
ret
push
icebp
pop
mov
jne
shll
sarl
imul
sbb
add
cli
and
jl
aad
adc
mov
mov
leave
loop
setle
inc
das
pop
sbb
cmc
loop
aaa
lods
jo
idivl
hlt
pop
aad
jmp
daa
or
mov
inc
xor
jle
mov
jl
iret
xor
jecxz
jle
ss
mov
aaa
repnz
adc
adc
repz
push
lret
imul
sbb
pop
movsb
stos
lcall
rorl
fwait
pop
sub
in
xchg
inc
test
push
jl
xor
jmp
aad
sub
jg
add
jnp
mov
sub
fsubrs
insl
xor
in
pop
rol
dec
lock
push
insb
dec
out
les
xchg
nop
pandn
cltd
fistl
sub
mov
icebp
ljmp
fisubrl
das
adc
mov
or
push
rcrb
nop
negl
sbb
cmp
pushf
xor
cwtl
repnz
lods
lcall
fmulp
mov
add
push
or
aas
mul
pop
sub
mov
inc
movsl
ds
jle
xchg
mov
pushf
fsqrt
lds
cld
adcl
pop
cmpsb
nop
loopne
pop
mov
jmp
inc
clc
mov
and
es
jge
mov
cmp
mov
cmp
testl
jo
mov
lock
mov
in
ljmp
inc
mov
jg
leave
and
int3
pop
mov
xorl
lret
scas
inc
mov
addr16
and
cmovb
mov
repnz
add
scas
dec
lods
xchg
ss
pushf
insl
cmp
rcrb
xor
xchg
loope
lahf
xchg
loop
xchg
cltd
popa
cs
jmp
mov
ja
sbb
xchg
cltd
icebp
push
stmxcsr
push
outsl
fisubrl
push
loope
xchg
adc
flds
push
dec
and
pop
jne
sbb
push
ret
lcall
hlt
xor
lcall
lods
pop
in
flds
in
cwtl
sti
adc
xchg
or
xor
int3
mov
jnp
pop
bswap
hlt
movsl
int
int3
sbb
out
xchg
outsb
xor
push
xchg
fwait
inc
inc
dec
push
test
lret
sarb
xor
aas
mov
rcl
push
div
cmc
mov
xchg
and
push
mov
test
inc
sbb
adc
mov
ja
pop
shrb
pushf
mov
xchg
jg
inc
das
mov
mov
cmp
nop
lea
jmp
fnstcw
mov
add
mov
mov
outsb
test
std
inc
hlt
dec
ds
orl
lret
xchg
add
daa
jno
inc
inc
es
cltd
loopne
fildll
xchg
push
rolb
mov
in
pop
out
out
push
in
movsb
inc
lods
sub
pop
mov
push
xor
scas
push
adc
sahf
cld
leave
pop
add
out
sarl
sub
adc
push
negb
or
cmp
js
or
icebp
sub
jecxz
sub
inc
aam
mov
mov
inc
fincstp
lahf
xchg
or
data16
push
jp
inc
cmp
xor
cmp
gs
enter
xor
rol
mov
ret
mov
xchg
jb
pop
stos
icebp
stc
pop
out
cmpsb
jnp
sbb
inc
sbb
cs
in
push
dec
es
or
out
mov
xchg
sub
sub
inc
movsb
add
cmp
outsl
ffree
loope
inc
fstl
and
push
insl
pop
stos
xchg
aas
xchg
in
fprem1
pushf
aaa
std
cmpsl
ficoms
insb
loopne
sbb
pop
in
fdivl
dec
and
int
xchg
mov
sub
sbb
push
or
stos
outsl
sti
lods
inc
popf
dec
mov
lahf
sbb
icebp
int3
and
es
es
je
adc
roll
sahf
jmp
mov
push
sti
scas
ret
das
inc
or
sbb
push
cmpsb
add
or
mov
fldenv
fcmovb
mov
imul
nop
fcomip
scas
cmpsb
subl
xchg
test
mov
inc
out
sub
cmp
shlb
push
dec
jmp
dec
dec
fdivrs
xor
das
sub
mov
out
lods
pop
lret
std
call
or
add
and
jb
jmp
pop
cmp
sbb
int3
test
add
fstl
xchg
xchg
test
or
dec
call
lcall
repz
out
popa
jecxz
jnp
jg
loope
xor
or
push
mov
int3
cmp
cmpsb
out
insl
into
addl
cmp
mov
adc
dec
out
sbb
inc
adc
mov
push
xchg
int3
xchg
fucomi
dec
mov
clc
sahf
cmc
in
add
pop
jmp
lock
adc
nop
jp
jge
nop
sarl
jg
or
addr16
jle
mov
xor
fdiv
xchg
adc
jmp
aaa
mov
inc
and
pop
mov
sbbb
and
imul
lods
in
mov
mov
stos
mov
jns
dec
jecxz
int3
or
inc
push
fsubrs
ficomps
add
lcall
lock
xchg
inc
movsb
or
jns
lcall
inc
aas
dec
hlt
lods
push
les
add
mov
xor
ljmp
jnp
ja
xor
inc
cmp
test
flds
push
jecxz
addb
out
dec
push
and
in
negl
xor
jl
add
loopne
mov
jmp
jno
inc
push
faddl
sbb
inc
ss
dec
or
add
fwait
inc
xchg
jno
sti
fsubrs
jmp
jmp
mov
dec
push
mov
jae
adc
jo
jnp
pop
jle
arpl
push
xchg
cli
incb
dec
inc
fldenv
push
les
sbb
push
adc
cmp
aad
filds
push
into
xor
in
jne
call
inc
test
movsl
push
cmp
lret
pop
jb
dec
fs
cmovne
fldt
imul
es
mov
push
and
mov
sbb
sub
ret
out
push
xor
xchg
add
loopne
pop
rcrb
cmp
int3
cli
inc
fnclex
cmpl
inc
pusha
popf
lcall
sub
pop
loop
stos
dec
and
sub
or
ja
scas
add
iret
and
int3
xor
mov
movsl
es
pop
mov
push
rorl
pop
test
out
xor
popa
int3
adc
test
lds
and
mov
add
imul
sbb
lods
out
cltd
xchg
leave
and
repz
xor
in
cmpsl
jle
add
xor
sti
push
fdivrl
testl
ljmp
stos
add
fs
repnz
test
sub
push
insl
xor
dec
les
loop
lods
mov
push
cmp
xor
in
scas
mov
shlb
xor
ljmp
add
dec
ja
lea
sub
adc
xchg
aad
pop
rclb
pop
das
test
pop
and
pmulhuw
and
jle
fisttps
lds
xchg
out
sbbb
mov
mov
insb
pop
adc
mov
xchg
xor
ret
push
adc
outsb
pop
mov
push
mov
xchg
shrb
pop
dec
jle
les
es
inc
or
jg
push
shrl
adc
push
adc
dec
ja
mov
daa
popa
pop
aaa
mov
or
movsl
mov
lea
sbb
pushf
xchg
xchg
gs
fisttps
pop
fdivrs
push
adc
les
iret
sub
insb
in
int3
out
sub
push
pause
subl
pop
pop
cmpsb
pop
and
jno
pop
xchg
movsl
lods
sub
imul
out
mov
jp
push
push
cmpsl
cs
mov
lock
scas
insb
xchg
adc
stc
jg
add
mov
or
jno
enter
decb
pop
add
and
jnp
aam
aad
dec
movsb
mov
out
dec
jns
enter
adc
arpl
data16
rorb
daa
out
or
inc
and
test
xchg
adc
xchg
addr16
add
andl
lods
mov
rcll
in
test
inc
call
pop
mov
in
lds
jmp
out
stos
mov
rdtsc
adc
pop
nop
xchg
pop
sbb
mov
add
les
adcl
ret
xor
push
insl
arpl
mov
pusha
push
cmpsl
inc
jmp
and
mov
cmpl
sahf
cmp
or
clc
and
push
es
in
pushf
xorb
pop
jl
test
inc
sub
fadds
dec
add
xor
negb
push
mov
adc
push
mov
xor
loop
xor
lods
or
add
iret
neg
lock
int
sbb
dec
ds
daa
leave
push
aaa
mov
push
loopne
stos
pop
adc
add
add
icebp
jmp
outsl
in
cmp
jne
inc
push
mov
xor
mov
mov
mov
icebp
sub
rorb
sbb
xor
cmp
sub
pusha
cmp
add
mov
aaa
lock
aaa
gs
outsl
movl
mov
mov
lret
testb
cmpsb
ss
or
sub
pop
leave
fisubrs
mov
es
sbb
sub
xor
test
pop
sbb
bound
xor
cwtl
into
scas
push
imul
and
inc
xchg
ljmp
jae
fwait
das
cmc
mov
fwait
sbb
ds
xor
or
fs
pop
in
xor
lds
int
lret
lods
sbb
sub
xor
daa
ret
sub
stc
inc
xchg
pop
call
rorb
movsb
dec
sbb
inc
ret
inc
jne
mov
clc
jne
mov
in
hlt
mov
add
rcrl
mov
inc
fnsave
pop
ja
dec
hlt
dec
pop
ja
mov
mulb
jne
dec
mov
lods
movsl
add
jns
and
mov
lods
or
outsb
sbb
ret
out
sub
jle
sbb
stc
add
push
into
push
mov
test
iret
mov
loope
shll
ja
xor
test
roll
add
dec
fcoml
or
adc
inc
ret
adc
xor
lret
inc
test
shl
incb
hlt
inc
fcoms
pop
bnd
ss
notl
in
xor
xchg
aas
jg
ljmp
mov
arpl
in
inc
insb
mov
push
out
insl
cld
sbb
lret
mov
mov
adc
or
sub
enter
pop
mov
jns
dec
andl
std
push
dec
add
call
push
push
mov
orb
pop
mov
mov
adc
mov
adc
sub
movb
aam
pandn
xor
mov
stos
mov
test
pop
jg
stos
mov
les
int3
cmpsl
mov
pop
es
pop
push
mov
adc
xor
mov
inc
movsl
cmpsb
push
iret
rcll
mov
push
mov
cmp
imul
sub
cwtl
shll
jno
adcb
jne
outsb
lcall
cltd
or
dec
jle
sub
or
mov
lcall
arpl
pop
loopne
jne
fidivs
push
cwtl
pop
iret
xchg
inc
mov
cmp
sub
jl
jmp
pusha
das
sbb
xlat
sbb
push
pop
mov
lcall
loop
push
push
cmp
sbb
bound
sub
push
fsubrs
pop
in
pop
fsub
int3
inc
jl
aam
out
adc
dec
dec
outsl
sbbl
dec
jne
xchg
push
mov
insb
mov
push
sub
fwait
ss
jmp
add
fbld
clc
out
xchg
fbld
cmpsb
add
inc
lcall
push
in
dec
xlat
pop
test
mov
cmp
fstps
loope
andb
add
adc
pop
push
sbb
xchg
in
stos
push
lcall
pop
push
and
pop
stos
push
scas
outsl
aaa
out
fwait
xor
push
xchg
hlt
mov
mov
popa
mov
jae
push
popf
call
es
sti
fisubrs
lea
cmp
sub
or
sub
iret
inc
scas
scas
jae
mov
mov
hlt
adc
jge
or
mov
pusha
out
jl
inc
mov
movsb
int3
int3
popa
or
roll
aad
inc
hlt
adc
rorb
cli
add
add
outsb
or
mov
push
mov
stos
addl
cmp
shll
leave
or
shll
outsb
inc
mov
and
cli
mov
cltd
call
jnp
ds
pop
movsl
negb
dec
lahf
sti
adc
decl
push
gs
fwait
and
int
xor
sub
iret
lahf
cmp
dec
push
dec
pop
popa
or
push
and
fidivl
cmpsl
jg
mov
jbe
call
imul
add
adc
cmp
jmp
popf
push
mov
dec
sbb
clc
mov
rclb
roll
add
gs
dec
push
div
test
dec
or
out
in
jg
ds
or
sub
ret
sub
test
loopne
add
jne
xor
stos
add
jne
popf
outsb
lret
mov
in
dec
mov
xor
sbb
mov
test
cs
push
int
in
scas
sbb
pusha
mov
rol
inc
push
stos
jg
pop
cmp
or
jp
jmp
hlt
push
xor
cmp
fisubl
mov
scas
xlat
xchg
xchg
cltd
dec
pop
ret
pop
sar
dec
xchg
and
lahf
and
fisttpl
sub
data16
cmpb
aam
movsb
pop
fwait
lret
lcall
jb
xor
test
lea
fstpt
fisttpl
sar
pop
mov
fcoms
cmpsb
inc
xor
not
repnz
xchg
adc
data16
int
inc
insl
leave
jo
nop
stos
add
push
mov
mov
mov
sbb
call
sbb
lods
icebp
mov
sbb
mov
add
xlat
push
mov
in
in
lods
pop
cmp
lcall
or
xor
int
dec
mov
sbb
ljmp
add
sub
bound
jo
sbb
imul
aaa
loope
dec
addr16
or
cmp
xor
pushf
int3
xor
popf
fdivl
mov
sub
xchg
xor
adc
lahf
push
mov
mov
adc
fbld
jbe
jns
lahf
shrl
movsl
dec
add
push
leave
jp
sub
push
fwait
jmp
inc
mov
push
adc
mov
mov
or
bswap
fsubrl
xor
into
mov
xchg
pop
jne
fdivrl
jno
pushl
gs
adc
loopne
sub
imul
add
xchg
test
lods
aaa
js
jecxz
or
jmp
adc
mov
pop
dec
lds
pop
aaa
and
pop
mov
ror
jmp
mov
icebp
xor
xchg
xchg
andl
jno
mov
add
lods
mov
push
xchg
jbe
andb
add
push
jne
adcl
pmullw
lret
add
stc
lret
out
cs
push
mov
xor
iret
mov
dec
push
in
cmpsl
mov
add
sbbb
jb,pt
and
adc
icebp
sti
rcrb
ds
or
mov
sbb
in
adc
push
mov
filds
fidivrs
and
ss
fsubrs
sbb
aaa
mov
repz
addr16
add
inc
es
sahf
mov
xor
dec
push
sarb
mov
xchg
add
pop
ljmp
call
mov
mov
icebp
fldcw
pop
out
addb
js
cmp
pop
pop
addr16
lahf
arpl
inc
mov
out
xor
mov
insb
aas
hlt
and
add
jo
loop
ret
sbb
sahf
mov
mov
mov
mov
mov
outsl
shll
xchg
movsl
sub
sahf
sbb
jg
mov
scas
pop
mov
inc
mov
push
inc
lea
mov
push
inc
add
cli
aam
popf
cli
insb
xor
pop
sub
pop
xorb
push
lret
mov
xchg
leave
or
fistpll
bound
mov
sbb
fldcw
push
add
clc
adc
xlat
test
sub
push
aaa
jns
mov
inc
fwait
xchg
xchg
xchg
fwait
arpl
ffreep
dec
sub
ja
hlt
jmp
jns
sahf
jl
adc
aad
into
shll
jbe
ds
push
dec
out
mov
insl
and
push
sub
sarl
mov
clc
inc
pusha
stc
insl
and
ficoml
xchg
in
push
push
sbb
adc
push
in
sub
gs
out
sahf
cmp
fsubp
shrl
dec
sub
ja
lds
and
pushf
ret
in
movsl
test
jle
mov
insl
out
inc
xorps
ret
pop
mov
cli
pop
out
fwait
add
out
fldcw
jle
sti
xor
bndstx
or
out
movsb
repnz
mov
or
sub
je
inc
pop
inc
or
xchg
push
repz
in
insb
and
es
sbb
fcmovu
movsb
divl
mov
add
stos
subb
mov
push
mov
jnp
stos
es
mov
cs
into
or
pop
js
xor
sbb
and
pusha
in
aaa
dec
ja
sbb
bound
data16
mov
sbb
movsb
sub
lret
insl
shll
sahf
mov
pop
out
shll
outsl
cltd
mov
pop
jp
pusha
stos
test
cwtl
into
mov
mov
movsl
sub
push
mov
mov
inc
imul
jne
xor
cmpsb
imul
mov
lret
sbb
lods
testb
xor
leave
out
cmpsb
ret
es
test
cmp
xchg
jo
xor
lods
cmp
out
mov
jnp
rcll
cli
push
sbb
dec
pushf
jns
test
rolb
sbb
mov
jg
mov
mov
aad
xchg
jl
adc
jg
out
imulb
cmpsb
mov
sub
dec
fucomi
push
dec
pusha
mov
int3
add
adc
xor
dec
jmp
es
imul
push
out
jl
aam
mov
inc
sub
dec
aaa
mov
in
or
mov
xchg
and
addr16
nop
add
sbb
mov
jo
xchg
lods
fnstenv
xchg
imul
dec
aad
xchg
inc
mov
out
repz
mov
out
incl
push
xor
or
xor
test
sbb
shlb
adc
push
orl
cmp
xlat
insb
hlt
mov
out
jbe
push
mov
mull
mov
push
divb
mov
push
das
inc
movsl
inc
jmp
lods
push
lret
xor
pop
mov
out
add
pop
push
sub
pop
dec
out
movsl
loop
fstps
jp
or
pop
pop
mov
mov
xorl
mov
gs
mov
scas
icebp
js
lods
jb
enter
lock
les
icebp
pusha
cmp
push
cmp
push
pop
addb
inc
jge
out
lea
pop
fsubp
pop
ss
pop
cmp
ret
sarb
or
ljmp
adc
xor
cmp
dec
or
movb
xchg
adc
clc
in
test
testb
xlat
dec
mov
js
testl
mov
js
pop
push
pusha
daa
je
xchg
cmpl
mov
in
mov
dec
pop
mov
mov
popa
push
or
lods
pop
push
xor
cld
test
mov
pop
cmp
or
xlat
and
cmpsl
in
repz
in
int3
jl
das
cs
inc
add
or
mov
inc
adc
cmp
jp
test
stos
mov
push
pushf
ret
xchg
loopne
icebp
adc
xor
int
sahf
mov
push
xor
pop
xchg
add
sbb
cld
out
test
xor
jbe
je
jne
lcall
lds
fsubp
sbb
push
std
imul
push
insl
lea
lds
repnz
fisttpll
jl
cmp
sahf
push
movsl
lds
dec
mov
xor
fwait
mov
jmp
lods
cld
or
and
and
dec
pop
push
pop
xlat
ljmp
mov
push
repz
icebp
pop
stos
loopne
rcl
lret
ss
test
icebp
xor
jne
in
push
lret
adc
ljmp
out
jecxz
sbb
pop
add
adc
push
sub
nop
les
int3
mov
shrb
and
loope
sarl
jg
cli
hlt
push
testb
jecxz
pusha
sbb
cmp
push
jne
rorb
push
pop
int3
mov
add
ljmp
jmp
out
cld
pusha
xor
stc
cmp
or
aam
inc
jecxz
fisubrl
enter
inc
mov
scas
psrlq
pop
or
xor
mov
imul
push
xor
sub
mov
xor
or
dec
ret
jge
inc
cltd
jnp
xlat
ret
add
in
jle
jae
int
cltd
cmp
fsubl
cwtl
push
movsl
rolb
fldt
dec
pop
loope
mov
push
aaa
mov
ror
lcall
iret
lea
testb
mov
test
in
mov
jg
mov
popf
mov
andl
js
repnz
jne
mov
jno
mov
or
ljmp
test
pop
inc
dec
or
lea
jbe
cld
sbb
mov
hlt
lret
cmc
call
dec
hlt
mov
adc
sub
dec
sbb
mov
mov
xchg
insb
xchg
mov
push
repz
mov
adc
adc
imul
cmp
ss
xchg
xchg
addb
inc
fsubs
xchg
push
mov
orl
adc
in
or
mov
popa
sbb
bound
jb
cmp
push
fisubl
scas
push
xor
adc
pop
adc
sbbl
mov
jg
mov
adcb
lret
pushf
lods
jae
push
in
mov
js
push
cmc
gs
dec
pop
and
loop
out
lea
imul
pop
lcall
cmp
sub
sbb
fsubrs
lcall
cmp
sbb
outsl
ret
sub
pop
fdivrs
aad
dec
or
mov
pop
mov
negb
sub
push
add
adc
and
leave
inc
fcompl
push
mov
ret
mov
fmulp
mov
mov
ds
xor
cmp
add
lds
mov
dec
or
popf
es
sar
sub
sahf
mov
cmpsl
leave
xchg
daa
mov
and
sub
jmp
bound
jns
add
jg
cmp
punpckldq
cltd
pop
ja
lret
xchg
js
add
mov
iret
jnp
in
popa
jle
sub
ficoms
roll
pop
daa
sbb
and
push
push
out
repnz
add
jle
std
ljmp
insl
es
ja
fdivs
mov
ficoms
test
imul
arpl
adc
sub
jmp
mov
rcll
sti
scas
xchg
jbe
and
cli
in
mov
jbe
inc
loope
add
mov
add
out
dec
xor
and
push
push
int
cld
scas
mov
insb
sbb
cmpsb
cmpb
pop
xor
mov
shl
les
sahf
push
ficomps
mov
js
pushf
jne
xor
fidivl
push
ror
add
scas
movsl
repz
mov
loope
push
repz
mov
faddl
rcl
imul
repnz
jne
call
mov
repz
xor
push
push
das
sub
and
and
mov
mov
cmp
add
mov
or
or
repnz
ja
aaa
jg
in
push
pusha
repnz
mov
cmp
add
push
push
lods
and
cmc
sahf
xor
cli
gs
mov
movsl
sbb
cltd
add
or
dec
jbe
cmp
cli
inc
loopne
push
xor
push
xlat
cwtl
movsb
subb
mov
sahf
out
sub
aas
negb
imul
hlt
aas
enter
adc
pop
xchg
vpmacsww
leave
test
dec
cmp
and
and
and
xchg
ss
xor
mov
mov
fildll
ss
and
jae
jo
lahf
push
inc
push
xchg
xchg
or
jle
xlat
xor
in
or
cmpsl
inc
aaa
pushf
cmpb
push
pop
fldcw
push
push
test
jb
sti
mov
in
in
push
loop
stos
jecxz
bnd
lret
adc
iret
in
popf
push
clc
cli
inc
push
shrb
push
mov
inc
addl
mov
add
dec
adc
lea
inc
xor
shl
in
das
out
add
adc
mov
jo
mov
ret
out
pushf
mov
sub
dec
push
sbb
inc
mov
sbb
rol
dec
daa
xchg
int3
scas
xor
adc
mov
ror
call
sub
ds
mov
mov
mov
mov
adc
enter
sub
add
push
stos
jmp
ljmp
adc
or
mov
xor
scas
shlb
mov
xchg
cltd
push
jmp
scas
or
mov
repz
icebp
mov
jae
cltd
mov
push
mov
subb
daa
dec
add
mov
mov
bswap
adc
outsl
das
roll
xchg
in
xchg
fdiv
xchg
dec
scas
movsb
jmp
repnz
scas
loop
imul
xor
ss
lods
xor
aam
mov
mov
out
js
mov
mov
out
mov
data16
test
mov
dec
dec
or
in
xchg
pop
insb
jo
sub
xchg
fwait
mov
adc
mov
jg
sub
adc
mov
aad
je
addb
addr16
inc
daa
mov
loope,pn
popa
sub
push
pop
pop
mov
lds
fisubs
shrl
mov
or
lea
and
jl
icebp
or
xchg
mov
push
shr
jbe
xor
out
lds
data16
jl
call
add
addr16
mov
mov
aas
inc
inc
mov
fisubl
loope
push
xchg
fimull
imul
lret
outsl
add
adc
arpl
pop
lcall
loope
cmp
xor
cld
daa
divb
lea
sahf
fdivrs
insb
push
push
lcall
imul
inc
ss
xor
je
jg
adc
lds
xchg
jo
ja
aas
lcall
hlt
imul
stc
insl
pop
ret
sbb
xchg
faddl
xchg
or
and
enter
or
imul
jmp
in
push
rcrl
lea
rcr
xchg
sbb
adc
pop
test
loope
fisubrs
jp
ds
bound
icebp
pop
repnz
adc
je
into
icebp
and
pop
jno
in
popf
dec
cmp
adc
outsb
sub
xor
repz
or
mov
test
sub
push
cmc
ret
outsb
je
int3
jae
mov
out
jmp
and
imul
outsl
add
outsl
jle
je
or
xchg
mov
mov
or
inc
jle
xchg
fwait
or
sub
loopne
push
push
push
sub
mov
mov
test
call
mov
out
mov
xchg
push
hlt
pop
sti
inc
pusha
sbb
jnp
cld
enter
andl
mov
clc
jo
cmp
lods
fistpll
js
pop
adc
inc
jge
lahf
sbb
aad
jae
enter
or
test
shlb
or
adc
xorb
sub
fiadds
mov
call
outsl
push
jbe
stc
jmp
sarl
iret
shll
xor
add
subl
mov
fmuls
lcall
addr16
hlt
repz
xchg
call
inc
pop
jl
lds
inc
sbb
push
and
stos
out
arpl
int3
sbb
mov
pop
xchg
xlat
and
xor
leave
inc
jo
adc
xor
clc
imul
pop
sub
addl
fcoml
xchg
cmp
adc
repnz
fidivrs
mov
cli
ret
shrb
imul
daa
cmp
and
adc
or
stc
cmpsb
add
dec
movsl
xor
inc
dec
jb
pop
adc
mov
nop
add
dec
imulb
int
scas
mov
mov
fwait
mov
xor
lahf
pop
and
bound
and
mov
cwtl
inc
or
nop
xchg
fisubrs
repnz
mov
cmp
push
mov
loope
lds
mov
jo
pop
pop
dec
dec
int3
int
cmp
add
adc
aad
and
mov
or
and
cmp
nop
enter
popa
or
rcrl
and
adc
mov
inc
jbe
or
sbbl
sub
xor
lcall
stc
out
std
mov
xor
and
mov
shlb
xor
in
cmpsl
mov
inc
hlt
movsl
push
fiadds
test
fidivrs
dec
cmpsb
jl,pn
mov
jmp
adc
int
scas
pop
xor
dec
enter
xchg
lods
lds
or
cmpsl
sbb
insb
bound
xor
adc
mov
fdivl
sarb
sbb
jl
adc
fs
out
leave
adc
shl
inc
iret
pusha
jl
shl
push
test
test
lret
mov
pusha
jge
adc
call
es
jecxz
jo
xor
test
cmp
imul
sbb
mov
add
dec
mov
sub
and
mov
add
push
pop
clc
test
cltd
rorb
icebp
mov
lds
pop
add
push
or
mov
fadds
mov
dec
sbb
xor
enter
adc
xchg
imul
jae
dec
gs
pop
imul
dec
mov
mov
adc
mov
pop
push
test
mov
lods
jge
or
hlt
inc
xchg
inc
mov
xchg
mov
subb
mov
pop
mov
sub
cmp
mov
scas
test
loope
nop
mov
data16
adc
or
xor
iret
mov
inc
inc
pushf
adc
or
lds
loopne
sarb
pop
lcall
andb
sub
mov
push
rcrl
jp
cltd
mov
jae
imul
xchg
sbb
movsb
outsl
or
fimull
mov
mov
call
outsb
and
pop
test
fistpl
jo
xchg
jo
arpl
outsl
pop
xchg
jl
xchg
mov
or
cmp
and
cmp
pop
xchg
mov
inc
loop
cmpsl
jl
or
cld
in
fcom
ja,pt
add
lret
mov
fmull
sbb
loop
dec
push
jb
xor
inc
pop
insb
shll
fidivl
leave
aaa
pop
mov
push
cmp
movsb
cmp
dec
mov
mov
push
sub
icebp
fwait
inc
sarb
and
add
sub
or
movsb
push
pop
dec
movsb
notl
call
daa
lea
inc
xchg
fdivs
sarl
mov
sarb
mov
mov
xor
repz
xchg
data16
cmp
lret
lods
mov
push
stos
dec
jecxz
outsl
aam
nop
xchg
les
loope
cmpsl
lret
push
sarl
xor
sub
cmp
pusha
cmp
adc
jg
fdivrs
call
daa
imul
shlb
test
adc
les
fcoms
scas
sub
mov
lcall
into
jo
cs
gs
int3
xor
pop
dec
cmp
adcl
pop
adc
inc
fcompl
cmc
xchg
pop
jns
adc
adc
mov
hlt
push
aam
pop
sbb
ds
neg
adc
mov
dec
pop
icebp
mov
imul
lret
test
dec
movsb
inc
add
sti
add
mov
cli
sarb
enter
dec
mov
fimull
call
in
push
jg
mov
cmp
cmp
les
addr16
cmpsb
shrb
in
jg,pt
lret
in
push
push
jge
stos
adc
je
out
subb
add
pop
xchg
pop
jg
std
sbb
call
test
mov
jnp
movsb
cmpsb
sbb
mov
call
push
clc
scas
sbb
xbegin
pop
jnp
scas
and
out
and
cmp
jl
cmc
stc
push
push
in
cmp
decl
pop
pushf
je
in
or
mov
insb
mov
adc
xchg
insb
xor
sub
sar
jbe
cmp
dec
xsaves
mov
leave
dec
lds
jno
jo
lods
sub
jmp
push
mov
stc
mov
mov
sti
scas
stos
mov
ds
cmc
nop
add
adc
xchg
adc
sbb
sbb
jl
stos
jae
and
rcrl
loop
pop
mov
pop
decl
dec
pop
ret
and
or
movsb
sub
sub
nop
jmp
sub
push
lods
add
mov
andb
push
hlt
loope
ffree
stos
lock
sub
les
lds
mov
xchg
add
outsb
les
pop
adc
das
pop
mov
jns,pt
ret
sub
adc
pop
jbe
add
adc
pop
repnz
leave
shll
jbe
lods
lahf
adc
cli
xchg
dec
imul
orl
nop
fbld
push
or
stos
lcall
ds
lods
inc
movsl
shl
in
and
xchg
mov
loope
cs
test
xchg
ss
cmp
push
enter
arpl
and
jge
scas
cmp
test
repnz
shlb
mov
and
cmp
mov
adc
xchg
out
add
lods
cmp
push
mov
mov
repz
in
loope
cli
test
mov
jge
aad
fdivr
lahf
stos
sbb
call
arpl
push
pop
xchg
lahf
loopne
addr16
cmp
mov
or
mov
in
adc
jmp
fdivp
sub
int3
imul
mov
push
jae
lods
xchg
xchg
pop
fldl
addps
subb
in
scas
pop
in
push
lds
lahf
xor
jmp
test
fldcw
sub
cmc
xor
aas
cwtl
push
test
sbb
push
xchg
fistpll
stc
lcall
pop
pop
loope
pop
sti
hlt
adc
push
push
dec
dec
sub
mov
xchg
icebp
sub
js
mov
rorl
jg
fwait
jbe
push
enter
pop
into
push
push
sub
adc
mov
jns
sbb
int
sub
mov
xor
push
add
nop
mov
mov
mov
or
push
or
fadds
into
xor
sub
xor
xchg
mov
movsl
iret
shl
pusha
xchg
fs
sarl
es
divl
rcrb
cld
aad
fidivrs
adc
stos
push
xchg
push
jp
add
push
test
adc
fsubrl
flds
pop
cli
mov
xchg
jnp
mov
dec
jge
je
stc
aam
cmp
in
and
sarb
sti
mov
add
arpl
int3
pop
scas
out
pop
mov
test
mov
jmp
roll
mov
in
sub
out
push
push
or
xchg
xor
fmuls
cmc
push
jo
out
xor
xchg
xchg
add
mov
daa
iret
sahf
jecxz
jmp
rcrb
inc
pop
add
clc
adc
xlat
lcall
scas
repnz
jmp
ret
sub
sti
shlb
subb
movb
mov
push
lods
jmp
stos
push
inc
divl
mov
fcomp
nop
jnp
jmp
sbb
jmp
jnp
jl
fcomps
inc
pop
shlb
arpl
sub
mov
mov
jnp
and
aas
out
mov
inc
push
mov
pop
xchg
cmc
inc
in
add
mov
inc
scas
mov
adc
pop
out
das
movsb
outsl
je
push
ds
adc
or
sbb
dec
xchg
movsl
xchg
jge
mov
lret
ret
inc
pusha
sub
mov
aad
jb
mov
jecxz
mov
inc
push
mov
shll
add
leave
stos
cli
xor
in
inc
lods
sar
iret
mov
cmpb
mov
into
fdivs
scas
fs
mov
int3
or
pusha
imul
iret
insb
inc
jg
adc
jbe
and
pop
lret
xlat
push
call
sahf
jo
push
out
or
lahf
pop
xorb
jo
mov
daa
jp
mov
jb
frstor
test
notl
inc
das
cltd
mov
insb
and
and
bound
cmp
jge
add
or
mov
or
leave
jge
fidivs
js
lock
into
popf
fwait
loopne
cs
cmc
inc
hlt
cmc
scas
mov
jae
aam
ret
add
lock
arpl
xchg
xchg
lds
fisubl
shrb
ret
orl
test
sahf
jb
aas
data16
xchg
fisubs
inc
add
bound
xor
insl
data16
add
popa
mov
jb
movsl
xor
dec
cli
call
mov
mov
insl
test
repz
or
sub
sub
cmp
or
mov
scas
pop
add
mov
mov
lahf
xchg
int
or
fildll
push
mov
pop
test
popa
and
mov
cli
cmpsl
jbe
mov
sbb
mov
sub
aaa
add
push
add
test
out
addr16
pop
leave
aaa
fistl
mov
outsl
adc
adc
scas
stos
out
inc
popf
lahf
lret
sub
popa
lods
testb
pop
adc
ja
cmpsl
inc
add
aas
in
lahf
xor
xchg
dec
xlat
jae
sbb
jns
mov
jl
push
nop
xor
mov
mov
ficompl
mov
cmp
or
jp
fnstcw
mov
mov
js
cmp
ret
and
andb
pushf
add
and
ljmp
pushf
test
pop
push
xchg
xchg
hlt
xchg
in
stos
mov
in
clc
mov
jbe
in
imul
push
into
xchg
mov
roll
leave
test
test
xchg
addr16
lret
mov
movsl
jnp
dec
adc
pop
mov
pop
cmp
push
outsl
outsb
inc
fstps
movsb
push
lods
mov
stos
mov
push
fs
orl
aam
shll
pop
push
and
push
sub
out
pop
divl
repz
push
test
and
aaa
mov
pop
xor
daa
add
inc
add
ja
dec
jne
mov
fnstenv
or
repnz
pop
dec
sbb
mov
push
push
push
push
xchg
push
mov
fcmovnbe
pop
pop
or
or
push
mov
inc
fcmovb
loop
xor
mov
loopne
mov
dec
jbe
nop
stos
mov
pop
or
lret
fs
inc
pop
xchg
arpl
std
jp
pop
pop
repnz
adc
mov
mov
call
mov
call
xor
mov
adc
add
push
std
jbe
scas
add
mov
pop
xor
push
std
mov
sbb
into
sub
jae
jno
call
rcrb
cmp
jae
dec
push
xor
lahf
sti
lret
mov
sbb
mov
adc
xchg
outsb
cmpsl
sub
icebp
push
sbb
jnp
push
fwait
mov
repnz
and
mov
dec
ret
daa
fwait
pop
cmpsl
and
xchg
dec
jp
push
cmpsb
repz
rorl
insl
es
lea
xor
call
inc
call
in
sbb
mov
cs
inc
pop
pop
rol
adc
sarb
xor
inc
adc
jo
sbb
jo
xor
sub
xor
xor
por
cltd
add
fsincos
imul
sbb
enter
fadd
mov
es
bound
mov
sub
sub
pusha
lcall
dec
int3
test
sbb
pusha
sbb
cmc
jns
mov
push
dec
out
or
xor
cmp
call
mov
mov
inc
mov
mov
fstpt
jne
mov
fsts
cld
clc
cltd
lds
cmp
stos
push
dec
or
jge
shrl
call
or
push
ret
outsb
mov
ficoml
popa
xchg
ret
ss
xlat
lcall
jg
jbe
push
push
imul
push
pop
jg
cs
inc
nop
xchg
sub
fs
in
shlb
and
fisttpll
aas
dec
and
mov
mov
cmp
and
mov
movsl
mov
xchg
leave
jp
int
inc
sub
dec
daa
cli
popa
jns
adcb
enter
ss
in
rorb
sarl
xor
lret
shlb
nop
and
pop
xchg
mov
or
push
addb
movsl
jecxz
daa
mov
xchg
cmp
cmpsb
movsb
cmpsb
and
gs
sahf
js
xchg
cmpsb
leave
xchg
adcb
in
add
mov
mov
mov
jae
es
pop
add
lods
imul
sbb
push
cwtl
mov
icebp
cmp
sub
cltd
inc
cmpsl
adc
int
mov
mov
add
mov
xor
daa
rcl
es
scas
in
or
sbb
add
es
std
inc
mov
ret
repnz
cmpsl
sbb
pop
rcl
inc
cmp
push
pop
aam
testl
in
add
stos
cmp
jl
jno
js
das
and
jae
adcl
cltd
dec
jbe
icebp
xchg
popf
enter
sbb
sub
mov
adc
ds
mov
xor
fnstcw
xchg
outsb
mov
movsl
mov
adc
xor
jne
fimuls
jo
xchg
mov
fisubs
adc
cmpsl
insb
pop
and
cmp
or
inc
ja
push
xor
inc
fwait
sti
fwait
add
cwtl
xor
daa
adc
rol
popa
inc
mov
and
sbb
andl
scas
test
cltd
xchg
aaa
out
fisttpll
dec
lcall
and
pusha
loope
lods
push
movsl
jae
aad
mov
popf
rclb
push
popa
imulb
shlb
mov
jns
lea
dec
push
adc
sub
inc
dec
mov
aad
int
js
adc
popf
iret
xchg
incb
int
test
ss
pusha
popa
ja
xor
mov
push
inc
inc
xor
sbb
movsl
iret
imull
dec
pop
xor
push
leave
fnstsw
ja
sbb
pop
sbb
or
cmp
in
cmc
lcall
scas
xor
pop
push
aas
jnp
xor
inc
les
jnp
lcall
xchg
call
xchg
add
pop
add
fdiv
xchg
mov
xchg
movsl
mov
add
stos
cmpsl
int3
mov
cmp
pop
popf
mov
dec
and
add
or
test
inc
stc
add
test
lock
pop
push
cwtl
push
ljmp
mov
push
jb
dec
push
mov
arpl
jp
les
cmpsb
sbb
aad
push
adc
mov
mov
push
sub
xchg
xor
sbb
cmpsb
sbb
jle
pop
dec
in
shll
aam
and
xchg
xor
fwait
cld
lcall
ds
jecxz
aam
shr
xchg
roll
jnp
je
dec
test
adc
jg
push
inc
into
fcoml
aad
cli
xchg
imul
imul
adc
stos
sbb
inc
inc
cltd
adc
out
adc
pop
leave
jge
pop
dec
cmp
cli
ret
mov
mov
xchg
int
mov
call
mov
push
lcall
pop
aaa
cmp
clc
jle
call
jge
and
aas
adc
lods
addb
jmp
out
jmp
fidivl
mov
cltd
push
lock
sbb
sub
and
jmp
stos
adc
dec
cmp
enter
fwait
inc
push
push
mov
call
and
stos
outsl
jg
jnp
mov
adc
push
jnp
mov
add
ret
pop
inc
push
pop
cmc
mov
pop
dec
mov
pop
or
adc
sub
jmp
ror
test
add
mov
into
pop
add
into
inc
hlt
pop
repnz
lods
pop
repnz
push
cli
and
js
mov
fnstenv
cwtl
add
add
pop
leave
add
xchg
daa
sbb
or
in
inc
adc
int3
setp
mov
or
ds
in
scas
movsl
sbb
aad
add
fdivrl
inc
mov
leave
lcall
ret
fsubl
scas
lods
enter
je
rorl
sahf
xchg
and
push
lcall
xchg
xor
or
call
xchg
xchg
ja
out
in
in
roll
and
jl
sub
cld
aad
neg
mov
out
adc
lcall
stos
in
add
sahf
lock
mov
and
jl
pop
dec
shlb
inc
mov
fldt
adc
add
test
push
cltd
add
lods
pop
stos
adc
sbb
pop
mov
ljmp
mov
movsl
xchg
test
push
data16
stc
ljmp
cwtl
and
mov
cmpsb
push
imul
mov
scas
repz
rorl
stos
mov
fstpt
xchg
icebp
xlat
cmc
sti
pop
nop
sub
shll
sub
jecxz
repnz
mov
rorl
jle
pop
and
mov
cmpb
movsl
jmp
fs
jp
mov
xlat
sti
push
pop
sub
xchg
xchg
neg
mov
pop
pop
ja
push
mov
aad
repnz
loop
pop
repz
pop
ss
add
cmp
push
or
movsb
xchg
ss
mov
outsb
rcl
sub
jno
loop
or
mov
and
adc
out
dec
fsubr
push
stc
xchg
mov
mov
and
xchg
jmp
repnz
out
xor
jo
adc
das
lahf
fwait
inc
push
into
int
sub
repnz
push
sbb
mov
inc
test
ds
inc
pop
sbb
cli
js
xchg
rcr
sahf
loope
push
scas
loope
mov
mov
loop
xor
sbb
lcall
outsb
out
das
mov
or
push
adc
jl
cmp
stos
and
in
inc
push
mov
jl
repz
arpl
xor
adc
out
test
outsl
pusha
aam
jg
sub
jp
add
loopne
rol
push
push
dec
mov
push
pop
push
lahf
pop
xchg
push
add
call
mov
push
shrb
aas
cli
push
insb
xor
fisubrs
push
hlt
push
lea
sbb
mov
jmp
push
inc
adc
add
xchg
adc
push
ds
mov
add
in
pop
xor
lock
lcall
aam
xchg
push
sbbl
add
jmp
xor
ret
subb
xor
mov
sbb
cmpsb
xchg
pop
popa
loop
test
adc
lock
or
xchg
stos
push
out
and
call
push
dec
test
ficoml
adc
repnz
iret
int3
sbb
or
adc
in
mov
je
jecxz
imul
sbb
mov
pcmpeqb
add
pop
adc
and
pop
and
lret
pushf
dec
add
cmp
sbb
iret
mov
push
jb
je
imul
js
sbb
sub
mov
in
cmp
nop
sub
sbb
push
leave
es
ret
cltd
cmp
popa
inc
ficoml
pop
gs
mov
scas
fisttpll
and
mov
iret
add
fwait
ret
data16
fisubrl
int
mov
dec
jecxz
test
xorb
shll
mov
xchg
int
iret
pusha
push
jmp
mov
mov
mov
mov
lock
scas
inc
stos
jo
sarl
aam
cmp
ljmp
push
insb
in
shlb
nop
push
mov
rorl
or
call
mov
fisubs
jno
mov
lcall
and
sub
push
clc
cwtl
xor
mov
cs
movsl
notb
sbb
and
dec
adc
mov
jbe
loope
imull
dec
ja
in
sbb
in
xchg
dec
inc
mov
pop
add
nop
mov
sbb
cmp
test
div
mov
push
push
or
mov
xor
lahf
or
stos
sub
xchg
sbb
movsb
fldt
add
xor
pop
ret
pop
adc
bound
out
lods
and
jnp
adc
dec
shrl
push
dec
dec
mov
push
push
or
cmpsb
or
gs
mov
ret
jne
mov
movsb
cmp
fiadds
int3
jae
mov
and
mov
ficoml
scas
rcl
sbb
lods
dec
stc
dec
fs
enter
or
xor
jp
push
loop
sbb
int3
ss
xchg
mov
cli
pminub
outsl
hlt
adc
repz
add
test
lea
mov
xor
ljmp
jbe
leave
mov
mov
loop
or
nop
mov
fwait
lret
addr16
pop
push
aaa
sub
mov
mov
vpminub
pop
mov
js
xor
cwtl
mov
stos
pop
jecxz
xor
pop
sbbl
push
movsb
adc
mov
sti
mov
std
and
mov
sub
xlat
jae
mov
test
ljmp
seta
stos
rcrb
jne
adc
add
xchg
jno
mov
push
lods
aad
sbb
pusha
insb
push
int3
jmp
push
ret
jle
cltd
test
jno
adc
jbe
fstl
scas
mov
jb
test
mov
dec
mov
dec
jge
jl
or
xchg
ficompl
jmp
mov
pop
sub
xchg
sub
hlt
aam
mov
mov
ljmp
sbb
cmpsl
push
cmpsb
fstl
adc
pop
dec
jge
hlt
mov
or
cmc
fsubrs
into
push
outsb
imul
cmpb
cmp
and
gs
insl
ficomps
andl
rolb
testb
cmp
inc
rcl
test
dec
fiadds
push
sahf
sbb
mov
addr16
xor
das
push
imul
std
popl
sbb
mov
jp
aam
mov
or
insb
sub
fwait
jae
xchg
xorb
or
xchg
cmp
sub
inc
fwait
sub
loope
cmp
dec
pushf
das
jl,pn
call
jmp
mov
add
mov
add
fdivrl
out
add
jno
push
subb
fidivrs
add
lea
jnp
mov
xlat
enter
and
jns
dec
push
jg
push
icebp
jns
jbe
xor
pop
xor
orl
jbe
push
and
mov
mov
shll
fwait
adc
bound
lret
dec
ret
adc
fldt
out
and
or
and
dec
push
jno
aaa
push
mov
clc
jmp
push
jmp
ror
inc
bnd
fs
sbb
fsubl
mov
cmp
xchg
enter
in
mov
cmovno
gs
inc
or
test
sub
adc
negb
jmp
xlat
cld
pop
repnz
or
pop
mov
bound
and
mov
jne
or
clc
xor
jmp
cmpsl
scas
fldt
jg
mov
sbb
inc
dec
inc
mov
mov
push
loopne
lahf
dec
mov
xchg
loope
jle
stos
xchg
pop
sub
stos
aas
push
je
add
pop
sub
dec
or
jb
pop
daa
xlat
popf
popa
inc
sbb
bound
subl
scas
xor
sbb
inc
mov
add
js
ljmp
inc
sbb
pop
test
outsl
into
mov
adc
gs
or
leave
into
mov
pop
pop
dec
jmp
push
mov
out
mov
ficoms
jns
daa
out
pop
xchg
mov
adc
arpl
xchg
iret
popl
dec
jecxz
andb
leave
lds
test
push
or
mov
sub
imul
xchg
inc
cmp
sub
aas
sbb
jge
xor
xchg
adc
das
lods
les
mov
sub
push
jb
outsl
mov
cmpsb
stos
outsb
mov
cmp
into
mov
and
pop
sbb
jno
mov
popa
cltd
idivb
sub
in
xor
outsl
test
or
mov
push
fstpl
out
jns
cmpsb
ss
pop
hlt
xor
imul
popf
sub
mov
jnp
adc
scas
scas
push
lahf
xlat
dec
test
xlat
arpl
mov
int
les
push
stos
and
adc
clc
pop
cmp
mov
call
shrl
fwait
push
dec
xchg
mov
or
shlb
push
aad
test
mov
and
jo
jg
sahf
das
dec
pop
and
sahf
scas
or
movsl
mov
js
and
stc
xchg
aam
mov
cmp
xchg
xor
xchg
lcall
cmp
jae
sub
mov
pop
sub
sbb
mov
mov
aam
xor
push
jp
xor
icebp
out
mov
sub
push
pushf
lret
adc
sub
mov
xchg
in
pop
gs
adc
lcall
lds
rcll
lret
fbld
dec
aaa
ss
enter
shll
push
adc
inc
fwait
cltd
xor
inc
lods
add
iretw
and
in
sbbl
sahf
in
xchg
dec
mov
cmp
int
adc
mov
stc
adc
test
jle
pop
cmp
inc
call
stc
mov
mov
mov
dec
test
loop
in
or
push
shll
inc
pop
mov
and
bound
loop
inc
negl
push
cmpsb
lret
imul
mov
or
add
adc
sub
pop
mov
push
lret
adc
mov
movsb
push
add
clc
notl
mov
test
lds
mov
jne
xchg
push
dec
dec
fsubrs
cmp
pop
or
sbb
push
mov
pusha
xor
jge
in
jmp
push
push
mov
jb
and
clc
dec
cmp
mov
pop
aam
add
loop,pt
jecxz
ljmp
shll
mov
pop
mov
mov
jl
lret
or
arpl
ss
sub
scas
sbb
sub
pop
push
inc
and
fwait
dec
std
mov
mov
push
sub
push
insl
mov
popl
jge
adc
xchg
mov
mov
dec
loop
rcr
fildl
aaa
xor
loop
rorb
xchg
inc
mov
mov
test
and
adc
iret
mov
lcall
push
fwait
jecxz
clc
cmp
push
inc
sub
fistpll
mov
xor
fstps
lahf
popl
add
sbb
hlt
shrl
inc
push
or
mov
mov
loopne
fbld
pusha
cmp
fisttpl
xor
rolb
stc
mov
cli
pop
adc
shlb
ret
out
pusha
iret
loopne
aad
shlb
and
cwtl
in
lret
push
cmp
sti
jne
or
repz
cmc
out
fimuls
cmpsl
push
lods
cmp
mov
adc
inc
or
sbb
jb
fdivl
mov
lcall
add
cmp
jge
pop
jecxz
test
ja
push
lcall
cwtl
movsb
aam
fimull
sub
fs
imul
mov
mov
sahf
fmul
subl
sbb
sbb
and
sub
adc
dec
cmp
aaa
leave
sub
or
lods
dec
ror
adc
bnd
mov
insl
jle
mov
sub
pop
loop
ret
ljmp
mov
addr16
add
sbb
icebp
push
or
inc
subl
aad
dec
cmp
mov
and
mov
pop
sbb
add
arpl
out
mov
popa
push
push
data16
outsl
lods
clc
push
mov
shll
lret
add
and
jecxz
xchg
mov
repz
nop
pop
adc
ss
jbe
sbb
pop
fcmovu
pop
push
inc
test
jae
xor
popf
jl
xlat
inc
cwtl
xor
sub
dec
adc
cs
or
xor
mov
inc
rcll
xor
fsts
rcr
sbb
test
sub
dec
int
and
xor
movsb
int3
inc
jbe
mov
xorl
adc
icebp
push
outsb
inc
in
popa
xchg
ds
pop
int3
scas
cmp
int
add
add
mov
iret
je
test
fucomp
out
ja
nop
inc
mov
fs
and
dec
imulb
jl
xor
cmp
sub
stos
push
cmp
or
mov
insb
xchg
mov
fstpt
out
jmp
sub
push
xor
je
sahf
dec
and
std
imul
std
addr16
mov
in
outsl
ss
push
addr16
jbe
shll
mov
push
xchg
mov
inc
fildl
lods
sub
pushf
fdivrp
movsl
xchg
adc
mov
cltd
add
pushf
lods
cwtl
pusha
mov
jo
out
mov
pop
jnp
popa
sub
jmp
loopne
cmp
xor
or
aaa
imul
das
jp
pop
divb
repz
sub
sub
or
cwtl
inc
adc
pop
jo
es
ret
subl
push
dec
mov
lock
add
divb
jmpw
adc
mov
inc
fildll
xor
ja
mov
push
mov
jg
test
sbb
rcrl
ret
or
mov
xchg
mov
adc
scas
inc
fs
loop
inc
mov
out
enter
or
pop
stos
cwtl
cmpsl
ja
loop
pop
mov
insb
test
in
add
and
inc
roll
test
xchg
iret
arpl
inc
cmp
stc
call
sbb
fisubrs
fcompl
cmp
jg
incl
fisubrl
mov
xchg
insb
mov
add
out
fists
aam
jecxz
hlt
cld
lret
lcall
xchg
ficoml
adc
add
ficoms
cmp
push
jnp,pn
shlb
adc
test
aas
push
clc
cmp
pop
cs
jl
repz
xor
in
popf
lret
es
jmp
pop
mov
mov
outsl
dec
sub
mov
into
out
imul
cmp
push
jl
dec
jp
push
pop
push
mov
shll
dec
insl
into
jge
xlat
pop
push
sti
fcoml
sub
fisubs
lcall
repnz
sub
popa
add
xchg
sahf
jp
fcomps
mov
enter
adc
cmpsb
jl
xchg
sub
pushf
cmp
cmp
mov
sahf
adc
xor
cmp
cmp
iret
shll
lahf
cs
mov
imul
mov
push
stc
adc
jmp
or
fucomp
stos
js
pop
and
lods
mov
dec
mov
in
lock
lret
xor
enter
ret
addr16
out
lcall
les
outsb
xor
scas
inc
inc
xor
mov
lcall
in
popa
inc
xor
pop
scas
rorb
lret
test
filds
add
dec
xchg
cmpsb
in
into
add
loop
mov
mov
addb
call
pop
out
stc
imul
in
push
repnz
mov
sub
or
mov
ss
sbb
insl
imul
and
in
push
repnz
jb
add
lcall
or
out
push
push
faddl
add
stos
lcall
push
cmp
cli
sub
xor
icebp
ds
aas
rcrl
lods
fistpl
xchg
xchg
es
scas
jo
xor
aas
inc
cs
mov
bnd
pop
mov
xchg
and
xor
pop
icebp
xchg
icebp
sub
mov
icebp
mov
dec
lods
mov
lret
popa
cmpsb
popa
call
in
int
and
sbb
lret
add
dec
pop
and
add
sbb
xchg
lcall
stos
mov
and
inc
jl
xchg
xchg
idiv
xchg
xchg
mov
jne
fldl
lock
dec
nop
lods
cmpsl
pop
shlb
movb
scas
fs
popa
push
into
icebp
add
testl
and
out
adc
outsl
xlat
adc
mov
cmp
loop
mov
stc
xchg
xchg
fistl
aas
dec
mov
pop
mov
cwtl
xlat
push
pusha
jge
mov
fistl
sub
addr16
les
mov
orb
xchg
shrb
push
popf
dec
xchg
cwtl
jge
add
ret
xorl
das
dec
enter
xchg
sub
shrd
rcll
fmul
cmp
and
mov
cmp
int3
mov
add
shll
sbb
xchg
mov
push
repnz
xchg
data16
loop
cmpb
stos
int
push
cwtl
fmuls
inc
xchg
orb
es
aas
inc
inc
xchg
mov
insb
gs
cmp
dec
push
iret
test
adc
out
add
lahf
imul
into
pushf
aam
sbb
sbb
mov
incb
push
or
fwait
addr16
mov
add
cmp
push
jno
jmp
add
cmp
cld
jo
mov
dec
clc
outsb
test
lds
or
es
jle
gs
mov
mov
xor
pushf
dec
lds
test
and
es
arpl
pop
out
das
ja,pn
ss
cmp
mov
push
jae
pop
lock
mov
mov
xchg
aad
imul
and
out
jo
inc
daa
aas
orl
std
xchg
inc
imulb
cltd
fsubrs
mov
in
mov
lret
sbb
mov
mov
idivl
test
and
fsts
push
adc
popf
loope
into
dec
icebp
mov
mov
lret
test
and
std
int
int
xchg
lea
shl
xchg
push
cmpsl
dec
gs
inc
pushl
ljmp
jb
inc
xchg
clc
xor
inc
or
jne
cmp
rolb
cmpsl
xor
mov
mov
pushf
test
out
out
scas
push
jecxz
xchg
leave
push
sbb
shl
das
sbb
cs
mov
add
adc
jecxz
clc
aad
mov
je
call
ret
in
sar
jl
les
mov
imul
repnz
cmp
adc
iret
mov
in
dec
fstpl
lcall
cmovle
and
movsl
pop
mov
and
pusha
addr16
adc
mov
ret
iret
push
jg
cwtl
fdivrp
jl
je,pn
jno
push
cmp
and
test
mov
push
xchg
addl
pop
mov
jns
jge
ja
push
fwait
mov
add
push
mov
pop
adc
cli
mov
mov
out
test
hlt
adc
lret
sub
mov
pop
mov
mov
add
stos
inc
cmp
dec
mov
cmpsb
scas
mov
inc
mov
test
mov
xchg
push
ja
pop
dec
pop
push
add
or
dec
sub
jge
pop
adc
adc
ret
mov
sub
jb
sub
or
sarl
pop
lret
cmpsb
mov
mov
push
push
dec
mov
les
push
or
xchg
call
imul
repz
seta
dec
mov
inc
pop
cld
sbb
stc
pop
mov
dec
sbb
mov
inc
gs
or
inc
and
or
jns
pop
jl
mov
add
idivb
mov
inc
fdivr
xlat
repnz
stos
dec
fisttpl
cmpsb
cs
or
sub
sbb
lds
and
sbb
add
jecxz
lds
adc
lods
ss
or
mov
sub
popf
clc
jge
adc
and
xor
out
lret
adc
stos
mov
sti
ret
or
mov
mov
add
je
adc
sub
lock
mov
not
mov
aaa
loopne
pop
cmpsl
adc
or
xchg
push
je
push
or
imul
test
sbb
js
xchg
mov
sbb
or
imul
scas
jne
popa
test
daa
add
cmp
rclb
leave
adc
and
or
shll
xlat
mov
pop
add
out
int
push
or
push
leave
lret
mov
cmpsb
push
mov
test
xchg
inc
clc
inc
popa
das
bound
cld
push
fidivs
push
pop
inc
enter
cmp
test
sahf
fwait
movsb
push
xchg
adc
push
sti
sub
int
adc
cmp
adc
cbtw
mov
test
lahf
and
nop
imul
or
test
in
pop
push
push
xchg
sbb
je
dec
in
sbb
adc
jbe
sub
iret
pop
xchg
sub
ds
sahf
inc
stos
mov
fmuls
xchg
enter
lds
push
orl
rcrl
dec
jmp
rorb
adc
dec
push
pop
andl
int
dec
into
fstpt
mov
push
aaa
dec
mov
xor
jb
jge
add
or
negl
push
push
add
jbe
mov
loop
insl
or
mov
imulb
in
outsb
add
std
int
mov
mov
pop
pop
pop
jno
inc
das
add
sub
mov
mov
lods
jne,pt
jl
enter
out
xorl
inc
push
outsl
cmp
adc
mov
scas
out
pop
xlat
lods
mov
mov
pop
inc
push
push
xchg
push
test
incl
xchg
xchg
push
lahf
dec
xabort
shll
mov
stos
sub
xchg
out
ret
je
shlb
push
push
dec
in
mov
inc
cmp
and
aas
movsl
sbb
rclb
sbb
mov
sbb
and
lcall
xchg
mov
test
xchg
in
cmp
cmpsl
sub
je
out
imul
push
adc
outsl
mov
pop
addr16
cmp
inc
inc
aas
movsb
cmc
sti
loopne
and
push
cmp
shlb
adcl
push
push
xchg
inc
jne
test
ljmp
xor
icebp
std
xchg
in
xchg
imul
or
fwait
add
pop
sbb
int3
mov
sarb
or
mov
loope
push
bound
ss
adc
les
or
popf
cwtl
sbb
sahf
sarb
xor
bound
sbb
incl
int
enter
iret
hlt
jno
daa
icebp
mov
mov
cmp
inc
mov
lcall
cmp
mov
mov
mov
adc
sub
mov
inc
in
xor
test
fs
sub
bound
add
push
sbb
mov
or
dec
stos
xchg
adc
fcoms
jne
xor
jl
or
aas
pandn
mov
push
pop
sub
add
xor
pushf
iret
push
push
push
push
jnp
out
add
xchg
push
lods
pop
fstpl
push
adc
xor
adc
adc
rorb
mov
and
std
push
sub
xor
out
adc
sbb
jnp
cmp
adcb
data16
aas
jmp
out
int
push
jl
in
mov
dec
les
outsl
imul
cmp
lods
outsl
push
les
inc
xchg
jae
mov
insl
call
stc
and
push
xlat
movsl
xchg
jo
loope
fnstsw
dec
dec
nop
or
daa
mov
ret
dec
fadd
push
sub
push
pop
adc
aam
daa
or
test
xchg
arpl
clc
cmp
push
mov
dec
mov
push
inc
xor
pop
mov
decl
je
movsl
or
cmp
jns
lret
ds
aas
cmp
pushf
testl
mov
sub
push
jnp
es
out
push
push
sbb
pop
rcrl
cmpsl
out
subl
push
mov
pusha
ficomps
and
ljmp
inc
dec
subl
mov
aad
adc
jns
test
into
mov
repz
pusha
or
xor
dec
push
or
aad
jp
dec
xlat
enter
cmp
cmpsb
ja
mov
test
inc
test
push
lcall
jle
or
divl
push
pop
repz
xor
xchg
jl
shll
sub
cmp
ret
push
add
xchg
jne
push
and
fs
add
mov
int3
mov
repnz
pop
pop
push
shll
cmpsl
add
nop/reserved
fcmovb
stc
les
call
sbb
mov
test
cmpsb
movsl
and
jp
roll
and
jl
std
in
in
cltd
sub
xorl
jge
int
leave
add
sub
ds
les
stos
loop
or
jp
sahf
js
mov
lods
xchg
xchg
and
add
xchg
pop
leave
les
aaa
jle
js
call
outsl
mov
or
lock
sub
jl
xor
inc
mov
popl
inc
or
shr
sub
bound
rcl
and
test
cmc
js
rorb
inc
dec
pop
mov
xor
mov
imul
repnz
rcr
xchg
jge
mov
lods
bound
sarb
andl
xorb
xor
or
daa
nop
mov
push
pop
ljmp
dec
mov
and
notl
negb
dec
test
ss
loopne
loope
iret
sub
hlt
xchg
popf
pop
inc
call
aad
test
mov
aam
or
sbb
mov
pop
xchg
lret
jbe
jmp
mov
clc
or
dec
and
add
sarb
xchg
push
push
insb
out
or
jae
adc
inc
jnp
fnsave
sahf
xchg
inc
pop
and
mov
pop
testb
jns
mov
cmp
jbe
mov
xorl
mov
popf
sbb
cld
iret
push
push
fsubs
adc
cmc
cmpsl
adcb
add
inc
jmp
mov
dec
lret
adc
clc
mov
in
jne
leave
dec
arpl
jns
push
jg
lret
add
sub
mov
cmpsb
or
jae
xor
push
stc
in
xchg
mov
fidivrl
dec
ljmp
mov
stos
mov
inc
or
inc
lods
cld
repnz
jge
jae
loope
inc
xor
sub
pop
xor
mov
mov
je
sub
xor
xchg
dec
adcb
adc
rorb
inc
mov
mov
xor
stos
adc
loopne
ds
sahf
scas
divl
out
xchg
cmpsl
popa
or
ja
mov
cmpb
test
pop
rcrb
lea
xor
je
pusha
and
pop
in
call
fadd
push
sub
push
shll
insb
adc
sub
gs
stos
push
sub
fildl
loopne
adc
xchg
lahf
sub
movsb
mov
xor
xchg
adc
cmpsl
jno
and
add
xor
insl
adc
jg
int3
lds
mov
fisubs
hlt
ret
jecxz
sbb
pop
xor
inc
dec
fdivr
jl
cltd
cmc
dec
and
and
ja
fcoml
and
inc
and
ficomps
xchg
adcl
fwait
ret
cmpsl
add
push
in
mov
jnp
push
adcb
mov
mov
cs
jmp
adc
add
mov
lcall
cli
cmp
sub
pop
jg
or
dec
sbb
push
and
lods
push
add
xchg
push
jge
lea
icebp
xor
jb
sbb
std
push
iret
inc
mov
mov
ss
mov
ret
dec
andb
inc
or
xchg
xlat
dec
mov
jbe
push
adc
sbb
dec
std
sbb
in
shll
xchg
lods
stos
dec
clc
pop
outsb
xchg
jp
pop
mov
jo
aaa
jae
imul
leave
xor
push
sahf
fwait
inc
push
adc
dec
mov
lcall
inc
test
fcomps
jl
dec
xor
dec
fsubrl
repnz
pop
inc
xchg
ret
sub
push
xchg
loop
jp
arpl
fnstcw
rep
pop
push
shlb
dec
mov
popf
sbb
ret
std
js
mov
sub
pop
jl
es
nop
iret
xchg
bound
icebp
mov
and
cmp
test
mov
pop
in
leave
sbb
lods
mov
mov
stc
mov
mov
sub
xor
lods
jecxz
mov
lds
iret
push
cmp
mov
rol
stc
imul
push
in
js
dec
scas
outsl
fldl
sarl
scas
sbb
ljmp
loopne
and
mov
inc
jmp
xchg
mov
je
mov
xor
lcall
mov
pop
into
push
jmp
pop
jns
loopne
subb
jne
dec
sub
mov
insb
pop
aaa
in
fnstcw
pop
cmovne
pop
or
sbbb
out
cmp
ss
jecxz
xchg
invd
outsl
enter
lea
arpl
enter
or
test
push
daa
jbe
mov
xchg
repnz
lods
out
inc
add
cmp
adc
cmc
xor
loop
sub
in
mov
xor
push
dec
push
push
dec
cltd
or
jl
hlt
int
xor
lcall
cmp
xchg
jae
mov
add
sub
and
popf
jno
fistpll
ds
aam
jmp
cld
mov
enter
inc
js
vpcmpeqd
push
or
pop
movsb
out
fwait
pop
xor
into
add
xlat
jne
adc
pop
sbb
mov
sub
xchg
or
shlb
scas
lods
mov
outsl
jo
or
shl
add
pop
cmpsb
hlt
xor
xchg
and
int3
cmpsb
aad
mov
lods
mov
and
xchg
push
jl
mov
adc
cmp
cmovo
test
inc
lret
pop
dec
movsl
push
mov
mov
lock
js
push
push
and
out
or
outsb
inc
jne
test
mov
xor
lret
mov
mov
lcall
jg
in
out
aaa
sub
add
mov
add
xor
les
neg
mov
and
in
push
shrl
push
popa
imul
repz
out
dec
sarb
inc
clc
lds
sarl
cmpsb
int
sub
or
jb
jo
sub
mov
mov
cmpsl
cmp
gs
pusha
enter
outsb
pop
cmp
sbb
and
mov
out
jne
or
inc
adc
das
or
gs
dec
sub
data16
sbb
cmp
jne
fwait
outsl
xchg
sti
and
repnz
ss
bnd
loopnew
loopne
dec
inc
dec
setnp
sub
arpl
out
fistl
in
push
mov
leave
dec
pop
or
adc
loope
test
clc
scas
xchg
jno
lcall
out
adcb
pusha
mov
push
mov
imul
xchg
adc
gs
adc
fsubs
js
jb
popa
jmp
out
nop
xchg
push
shl
mov
sbbb
es
loop
cmc
jmp
in
mov
ss
mov
into
insb
inc
mov
imul
sbb
imul
add
inc
fidivrl
xchg
and
icebp
sub
adc
std
sub
cmp
sub
mov
lock
je
pop
push
add
mov
outsl
push
pusha
int
arpl
clc
xorb
ja
mov
xchg
stos
push
scas
int
ret
pop
popa
cmp
pop
fidivl
stos
subl
dec
push
mov
enter
cmc
rcrb
jmp
cmp
sbb
mov
mov
movsb
cmp
jo
sbb
add
jmp
fnstcw
push
xchg
fwait
dec
lods
int3
mov
pop
push
add
popa
mov
hlt
xchg
ror
mov
add
fcmovbe
sar
inc
sub
js
xor
out
cmpsl
sub
pushw
stos
or
pop
fidivrl
aam
sub
add
jne
icebp
jl
pop
mov
in
pushf
pop
das
mov
mov
loopne
mov
mov
mov
jo
and
xlat
inc
xchg
fbld
aaa
cmp
lret
jmp
mov
popf
inc
les
bound
dec
mov
insb
insb
dec
push
je
jns
dec
push
jle
call
jnp
lds
and
cmp
xchg
jbe
hlt
pop
outsl
ror
incl
mov
push
shll
mov
ds
push
sbb
fldl
pop
out
inc
cmc
pop
or
inc
jp
pushl
mov
mov
inc
out
jb
nop
mov
fwait
and
lods
mov
jle
hlt
jg
add
lea
hlt
cmpsb
xchg
mov
mov
rclb
enter
lods
xchg
in
add
and
inc
mov
jbe
cmp
mov
data16
xor
xor
push
cwtl
xor
in
loopne
inc
movsl
scas
add
pop
aaa
jle
out
lahf
scas
ficompl
xchg
push
xchg
or
jmp
sub
cmpsb
sub
mov
inc
hlt
sub
sub
xchg
push
xchg
dec
in
xchg
or
dec
frstor
xor
int3
or
xchg
add
mov
dec
push
add
xorl
add
inc
mov
popa
dec
sbb
andl
pop
or
xchg
lods
push
sub
sbb
xchg
lock
gs
dec
test
mov
clc
add
shrl
cmc
pop
mov
inc
cld
orl
loop
mov
mov
std
cmp
mov
repnz
shl
jge
imul
inc
sub
and
push
rclb
repnz
into
clc
jecxz
sub
cmp
fwait
and
imul
push
cltd
fdivs
jbe
push
cmp
push
ss
loopne
mov
in
out
mov
icebp
jno
inc
adc
sahf
dec
jg
mov
sub
xor
cmp
mov
loopne
add
gs
mov
pop
xchg
leave
xor
not
push
sbb
cmp
push
in
leave
dec
scas
xchg
jmp
mov
setge
cmpl
pop
in
int3
fcoml
fsubp
call
add
xchg
cmc
cmc
orps
cmc
jnp
je
pushf
add
xchg
addr16
sub
mov
mov
mov
stos
popa
add
xchg
daa
lea
and
shrb
rcll
arpl
stos
fdivrs
mov
call
movsb
and
cmpb
cmp
jl
dec
xchg
aas
jbe
jbe
punpckhdq
cmpsw
test
sub
pop
outsl
imul
sbb
sarl
mov
ficompl
or
adc
pop
ret
rorl
cwtl
cmpsb
cmp
sbb
mov
or
push
fyl2xp1
xchg
mov
jne
jl
subl
and
mov
das
aaa
subb
int3
inc
std
inc
hlt
cs
mov
fildll
roll
mov
dec
cwtl
dec
les
fdivrs
mov
push
movsl
insb
pop
outsl
pop
cmp
sub
std
xor
sbb
rcrb
pop
jae
lods
pop
outsl
adc
leave
sub
jmp
rolb
xchg
xchg
inc
daa
daa
cwtl
xor
xor
idivl
ret
rcrb
and
or
jnp
inc
pusha
lock
add
and
adc
and
rcll
inc
mov
pop
loope
inc
movsl
faddl
jnp
das
push
sbb
mov
and
or
insb
xor
jmp
add
mov
rorl
mov
push
into
cmp
daa
mov
out
pop
adc
scas
pop
dec
out
scas
and
sub
cmpsl
js
decb
ja
pushf
and
test
orl
push
mov
cmp
decb
pop
and
push
mull
adc
or
xor
call
mov
dec
push
sbb
inc
push
or
nop
insb
jl
notl
mov
inc
test
lods
rcrb
jne
pmuludq
negl
sub
inc
loopne
and
loope
rolb
cli
adc
out
aad
in
out
fistpl
push
hlt
aas
add
adc
add
les
pop
or
mov
sub
stc
in
cmc
inc
dec
dec
ret
lods
fadd
aas
sarb
aad
add
cld
das
pop
dec
jl
lahf
outsb
adc
dec
inc
pop
call
jb
mov
xchg
push
inc
clc
je
push
in
dec
je
dec
fwait
loopne
arpl
xchg
mov
and
fstp
stc
fsubrp
jge
in
lahf
dec
sub
and
mov
pop
dec
xchg
out
xchg
cmp
lds
xor
add
xchg
dec
mov
adc
dec
and
insb
clc
nop
or
push
ja
cmp
push
iret
icebp
add
outsl
repz
ret
in
inc
sub
mov
cs
in
add
int
pop
and
add
lret
mov
cwtl
pop
cltd
and
insl
push
loopne
cmp
adc
movsb
cs
std
imul
jmp
orb
adc
jb
jnp
and
mov
sbb
in
stos
jmp
push
dec
inc
decb
jle
xlat
push
mov
fdivrp
js
mov
jb
iret
leave
and
sbb
mov
ljmp
into
rorl
test
imul
cmpsb
into
ficompl
popa
test
cld
cmp
sarb
ljmp
sbb
sarl
lcall
dec
push
xchg
stos
sbb
mov
sbb
mov
sti
xor
inc
jmp
push
add
int
jp
les
jmp
or
dec
pop
int
mov
sbb
in
fwait
aaa
push
adc
imulb
dec
repnz
and
pop
es
fistpl
fdivs
lret
mov
adc
and
lret
jle
imul
push
xor
inc
loop
das
cmp
dec
stos
sub
jns
rorb
cmp
out
faddl
sbb
jnp
out
inc
je
add
mov
rcr
and
lret
test
or
and
loopne
mov
and
in
cmp
xchg
mov
jg
loop
add
ret
jmp
cld
rcr
lods
inc
jb
call
mov
jbe
jecxz
popf
icebp
push
or
jne
jbe
shlb
stos
mov
rol
pushf
int
sti
push
sbb
mov
cmp
mov
lock
adc
adc
dec
add
cld
push
cmp
rcrl
mov
out
xor
xchg
mull
push
or
fst
push
test
vunpckhps
adcl
in
ss
sti
test
pop
lock
xchg
mov
inc
andb
and
repz
repz
push
ljmp
and
popf
xchg
je
push
dec
test
popf
leave
les
pop
inc
mov
push
inc
rcrl
pop
cmc
out
or
or
gs
cmp
jecxz
jno
lds
fimuls
add
xchg
pop
dec
js
faddp
inc
inc
mov
daa
jl
inc
sub
inc
inc
insb
ds
out
inc
in
sarl
cs
mov
lods
sub
fsubrl
mov
loopne
jns
lea
mov
or
or
in
dec
push
mov
sub
imul
xchg
dec
and
pusha
pop
and
mov
cmp
fsts
pop
jb
adc
lret
fs
lock
xchg
outsb
lock
jnp
pop
mov
ljmp
mov
jno
imull
stc
lahf
sbb
daa
shlb
fisubrl
mov
fadd
and
xor
sarl
jb
in
adc
and
jne
push
icebp
dec
mov
mov
xchg
xchg
inc
push
fsubs
or
rcrb
repz
adc
mov
add
sub
clc
aaa
je
xchg
mov
jge
push
ret
loopne
sub
jge
loope
push
cld
or
dec
inc
dec
repz
jl
insb
fistps
push
xor
push
jae
out
dec
lea
fldenv
loope
popa
testl
and
push
ds
mov
dec
pushf
mov
adc
std
jns
stc
subb
aaa
sub
push
xor
arpl
fst
mov
sbb
out
lds
test
push
jns
mov
mov
inc
and
cmp
movsl
aam
sbb
addr16
mov
jbe
inc
pop
mov
cmc
and
mov
and
jecxz
rcrb
mov
dec
ds
jns
in
jg
jne
or
lock
mov
add
outsl
sbb
adcl
mov
into
ja
jae
std
rcr
mov
mov
lret
push
lret
mov
sbb
nop
mov
mov
inc
jno
cmp
mov
ss
push
inc
repnz
mov
out
and
mov
cmpsb
call
shlb
xor
push
or
inc
xchg
or
push
xor
popa
push
popa
clc
mov
clc
xlat
xchg
jmp
shrb
mov
insb
dec
mov
fs
mov
mov
add
push
int3
sub
dec
sbb
mov
jo
daa
sbb
sub
ja
mov
xchg
pop
adc
jg
push
push
ja
or
pop
mov
repz
or
jno
dec
xor
fisttpl
ret
push
jnp
into
add
adc
dec
fisubl
xchg
test
loop
and
fisttpll
movsl
das
pop
adc
pop
fbstp
in
push
mov
clc
or
xchg
daa
je
push
lock
loope
js
lahf
cmp
mov
xor
fmull
and
insl
in
outsl
stos
enter
ljmp
shll
mov
mov
cmovae
mov
loopne
out
outsl
mov
stc
or
lcall
test
lods
ret
ja
xchg
shl
sahf
dec
insb
sarl
ja
or
mov
sbb
lahf
shlb
mov
push
dec
sub
shll
xchg
push
loopne
inc
cmp
sti
outsl
mov
pushf
shrl
jmp
jmp
sub
fidivl
sahf
cmc
fwait
scas
aas
push
fucomp
je
mov
and
pushf
insb
pusha
inc
xor
adc
gs
cmp
and
movl
mov
out
out
cli
push
sbb
test
mov
xchg
and
xor
push
push
clc
fsubrl
sbb
pop
addl
arpl
push
xor
lock
jo
add
xor
arpl
or
movsl
inc
and
hlt
stos
pop
hlt
inc
cwtl
in
shr
sbb
push
cs
mov
out
testb
cmc
inc
inc
ret
mov
test
and
xor
test
adc
into
mov
jl
xchg
cld
jg
xchg
mov
pop
mov
sahf
jb
mov
add
mov
notb
pusha
imull
pushf
mov
mov
lock
lea
test
cmp
stos
jnp
mov
inc
xor
add
in
xchg
push
in
push
fistpll
add
cmp
enter
push
dec
or
dec
and
movsl
ljmp
popf
fisubrl
mov
adc
sub
mov
aaa
sarl
mov
out
inc
inc
in
jmp
clc
and
xchg
or
xchg
shlb
lret
mov
lods
jp
xchg
shll
ret
lds
insb
xchg
xchg
dec
pop
pop
push
fisttpll
mov
aas
and
sub
repz
imull
or
lret
inc
jle
pop
dec
sbb
xor
inc
sub
jno
inc
mov
lcall
subb
xchg
push
out
jno
xchg
push
mov
xor
inc
ljmp
adc
add
int3
pop
or
lcall
mov
outsb
call
rcl
dec
lea
mov
sub
pop
loope
jb
stc
mov
jp
add
pop
pop
jge
push
js
mov
mov
mov
stos
adc
sbb
adcb
inc
xchg
out
loopne
mov
test
les
pop
mov
movb
xchg
mov
inc
cmp
fidivrs
rcrl
shll
mov
pop
mov
test
shll
sub
popa
mov
inc
fwait
aam
imul
iret
or
cwtl
jne
sub
push
scas
pop
sbb
and
sub
aaa
mov
inc
movsb
out
mov
jne
cmpb
cltd
andl
sbb
sbb
jl
mov
pop
xchg
aas
sbb
jbe
bound
jg
mov
hlt
out
out
imul
dec
xchg
adc
push
add
xor
cli
cmp
cli
dec
loope
es
cwtl
sub
loop
jp
xchg
and
cmpsl
xchg
inc
addl
pop
pop
jl
sbb
out
xor
scas
out
dec
filds
cmp
mov
or
sub
rorl
dec
fsubrp
dec
cmp
popa
mov
ret
shl
cltd
loop
les
test
adc
cmp
gs
xor
mov
movl
push
not
orb
jb
stos
and
jl
xor
gs
mov
adc
test
jecxz
pop
in
fcmovb
ja
push
sub
inc
dec
out
call
pop
lahf
cwtl
aas
rcrb
clc
xchg
add
push
std
lods
cmp
push
in
cmp
mov
dec
or
push
push
add
mov
sub
setnp
xchg
aam
outsb
push
out
fsubs
test
shll
rolb
loopne
mov
mov
push
push
mov
shll
jno
ss
test
movsb
lea
jge
movsb
jb
adc
add
rol
lock
inc
jno
pushf
repnz
test
jmpw
clc
jno
outsl
rcr
es
scas
popf
mov
mov
pop
lret
leave
dec
pop
xchg
mov
outsb
push
mov
push
cmp
rol
daa
daa
push
ljmp
and
and
or
sub
andl
jl
xor
mov
pop
push
push
mov
push
ret
stos
addr16
pmaddwd
loope
dec
mov
jp
popa
jbe
xchg
aas
xchg
fstl
jge
mov
push
dec
hlt
arpl
movsb
shl
out
jb
in
or
mov
jge
or
sub
dec
xor
and
push
mov
ret
jb
fimull
rcr
pop
inc
jl
test
inc
xor
mov
mov
adc
outsl
push
out
pop
jno
cld
xor
push
add
lds
mov
cmp
lock
cmpsl
loope
rcrb
push
dec
lcall
mov
cmpsl
dec
adc
clc
add
mov
jns
gs
sbb
inc
fstp
int3
cmp
xor
inc
lods
dec
adc
imul
lret
push
mov
enter
movsb
cmpsb
mov
cli
sub
or
out
gs
pop
insb
mov
movsl
ja
stc
pushf
rcl
xor
lret
mov
mov
lods
cld
push
cmp
scas
push
out
dec
xchg
in
out
mov
popf
push
fstps
aad
cmp
inc
imul
adc
dec
pop
cmpsb
xor
adc
fldcw
inc
call
imul
cld
mov
mov
push
int
or
call
notb
xor
sbb
aad
push
mov
cmp
dec
mov
aaa
lock
xor
cmpsl
movsb
in
std
add
lea
pop
andb
xor
jb
sti
jecxz
or
call
pusha
faddl
out
xchg
jnp
rol
imul
mov
inc
insb
sarb
mov
jb
fldcw
jp
lret
mov
subb
add
pop
ficoml
test
dec
xchg
mov
jl
mov
and
sbb
imul
rorb
iret
clc
xor
cmp
xchg
jbe
ret
mov
imul
mov
sub
sub
inc
sub
inc
jp
leave
mov
scas
mov
daa
mov
fs
dec
mov
push
push
cmpsb
sahf
sbbb
notl
push
add
into
cmp
mov
fiadds
jno
sahf
enter
dec
cmp
fcom
sub
in
adc
rsqrtss
inc
lahf
inc
xchg
pushf
push
dec
sbb
mov
mov
xlat
jecxz
rcr
cwtl
mov
jecxz
adc
mov
mov
insl
icebp
jecxz
ljmp
popa
insl
jle
pmulhuw
sub
jg
sbb
outsl
shl
bndldx
fs
ror
cmp
rcrl
dec
inc
rcrl
pusha
jg
adc
mov
leave
pop
mov
dec
inc
mov
jnp
mov
pop
fwait
lds
xchg
inc
xchg
push
int3
ficoml
mov
movsl
cmp
mov
pusha
fdivrp
and
sarb
mov
imul
adc
popa
insb
out
pop
lcall
mov
pop
mov
pop
icebp
sbbb
and
fstp
xchg
mov
dec
lods
cmp
jns
mov
mov
xchg
xchg
pop
cmp
or
notl
adc
add
mov
jge
nop
or
imul
fucomp
cld
std
mov
or
mov
add
add
xor
sbb
mov
das
jno
test
pop
lret
cmc
out
jne
addr16
in
jo
insb
jb
das
pop
mov
jp
jns
lahf
cwtl
jno
addr16
xchg
adc
aam
add
test
jl
adcl
dec
les
pop
js
loopne
orb
call
jecxz
jl
insl
sub
cmc
popf
loopne
es
mov
pusha
fbld
and
xchg
in
test
gs
adc
fmul
jno
xor
or
cld
lcall
cwtl
leave
xor
into
loop
and
xor
push
mov
js
xor
inc
and
dec
adc
cmc
shrl
in
stos
lds
iret
sbb
add
xchg
imul
int3
pop
and
mov
frstors
pop
sub
shll
lret
mov
out
sub
sbbl
adc
int3
mov
adc
cmp
scas
mov
ret
xchg
mov
sub
jp
add
dec
fsubl
popf
adc
test
push
mov
mov
adc
flds
gs
inc
jae
ljmp
mov
insl
lss
mov
push
pop
pop
test
lods
in
mov
cld
cltd
bswap
pop
imulb
fscale
and
adc
insl
mov
mov
call
fwait
sbb
add
dec
sbb
pop
mov
dec
xchg
imul
out
fs
sbb
mov
sbb
lds
push
jg
mov
mov
mov
push
push
fwait
inc
mov
mov
mov
movsb
std
pop
pop
sbb
xor
out
jne
scas
jmp
insb
mov
in
jnp
cmpsb
movsb
dec
lcall
rol
sub
mov
lea
push
mov
fidivl
push
dec
insl
mov
mov
call
in
mov
dec
sub
cmpl
xchg
adc
mov
xor
pop
mov
xchg
xchg
repnz
shrl
into
imulb
in
enter
je
pop
bound
mov
and
ljmp
and
lcall
sbb
bound
adc
lret
loop
mov
adc
push
adc
int
mov
or
mov
push
in
sbb
ja
adc
jge
mov
adc
test
mov
sub
or
jge
push
mov
in
ret
jae
dec
insb
jne
lcall
push
mov
std
imul
inc
sti
xchg
jae
inc
ret
push
outsb
loope
mov
jne
enter
jo
call
aam
data16
cmp
rcrb
mov
push
dec
xchg
cmp
jb
mov
dec
or
mov
dec
jne
push
jns
mov
pop
std
xchg
fs
mov
inc
aam
stos
stc
popf
push
mov
call
in
bound
testb
xchg
mov
adc
adc
loopne
or
xor
mov
sbb
sti
jne
sbb
mov
subl
out
test
xorl
mov
jae
sub
add
cmc
imul
sub
add
lret
ss
stos
ret
xor
int3
jae
or
repz
pop
xchg
jae
scas
dec
mov
jbe
xor
in
ret
fldt
lret
add
iret
jle
sarl
and
mov
pop
ret
push
add
ja
mov
jecxz
push
loope
insl
xchg
pushf
pop
sbb
cmpl
loopne
inc
addr16
je
cmp
add
test
jns
cmpsb
mov
nop
stos
inc
sbbl
mov
das
aad
jb
out
lea
inc
adc
xchg
adc
out
mov
sub
cmpsl
and
fwait
push
lahf
iret
push
xchg
pop
sbb
shl
push
cld
push
testl
mov
ja
imul
outsb
movsl
push
frstpm(287
pop
jb
shll
add
inc
movsb
sub
inc
inc
sub
push
jne
cmp
repz
cmpsb
loope
stc
mov
dec
mov
adc
imul
push
jo
or
jnp
and
lret
in
lods
das
stos
clc
cmp
cli
fcomip
xchg
push
stos
jge
mov
mov
imulb
xchg
push
add
rcll
mov
ss
roll
dec
mov
inc
adc
imul
call
cmp
addr16
mov
repz
xchg
arpl
dec
adc
cwtd
mov
add
and
lahf
test
into
cmp
cmp
aam
push
xor
mov
sub
ret
push
lret
mov
fs
je
sbb
in
leave
xor
push
push
or
repnz
js
or
mov
pop
and
xchg
or
ja
pushl
jns
mov
pop
cmp
mov
mov
jns
aam
and
inc
aad
mov
or
adc
mov
lock
mov
ret
inc
mov
mov
out
cltd
out
and
rcl
stos
jno
imul
sub
or
nop
flds
sbb
adc
icebp
hlt
mov
jmp
dec
aas
nop
inc
nop
insb
xchg
ret
jmp
sub
jne
inc
popf
xchg
bound
xchg
push
adc
je
jle
mov
pop
sbb
pop
repz
xor
test
popf
lahf
sub
cmp
mov
mov
cmp
cli
in
cld
or
jns
cmpsb
leave
lret
pop
movsl
lret
sub
mov
mov
xchg
leave
stos
imul
mov
or
inc
sub
xor
ret
mov
jmp
sbb
sbb
stc
stc
lods
add
leave
into
stc
je
cmp
pop
lahf
andl
xchg
out
xorb
jle
add
imul
dec
sub
or
push
xchg
enter
dec
lds
loopne
or
enter
ljmp
sbb
push
sbb
mov
cmp
push
xlat
jg
mov
in
movsb
loop
sub
ljmp
inc
lret
adc
xor
data16
call
sub
adcl
hlt
jo
movsl
mov
dec
aaa
icebp
int3
aaa
xor
cmpl
sbb
stos
pop
leave
cmpsl
cltd
xor
dec
cld
repnz
jnp
icebp
lods
push
or
cmpsb
xor
inc
xchg
sub
insl
jo
xor
add
je
call
pop
or
xchg
scas
add
or
test
loopne
sbb
loopne
and
xchg
test
mov
sahf
and
push
xchg
push
sbb
outsb
cmp
push
xchg
popf
adc
icebp
cmp
pop
ja
and
popa
int
xchg
pop
mov
cmc
cmp
mov
addb
in
push
mov
loop
inc
popf
inc
mov
adc
add
add
paddusw
cmp
push
mov
sbb
xchg
cmp
popf
pop
add
cmpl
fdivs
cmp
adc
jo
mov
mov
cltd
mov
ljmp
push
jmp
jb
pop
shlb
seto
push
pop
pushl
aad
jle
lock
dec
sub
or
dec
enter
sbb
sti
nop
rcrl
push
pop
sub
mov
je
sbb
rcl
dec
push
xor
lds
cltd
push
add
out
std
xlat
add
adc
or
pop
mov
dec
out
ficoms
dec
push
xchg
rol
sti
pop
repnz
sti
cli
mov
jbe
loope
add
mov
xchg
push
bound
rcl
xchg
into
ss
mov
imul
mov
hlt
addr16
addr16
lods
mov
mov
pop
or
scas
aas
mov
push
dec
jle
dec
push
pop
dec
out
insl
jp
jle
mov
sbb
mov
sub
jnp
insb
pop
xor
push
icebp
enter
pop
aaa
ret
test
mov
int
out
sub
test
push
testb
jg
mulb
lods
xor
jg
mov
sbb
inc
adc
mov
in
fwait
push
mov
imul
movsl
dec
fiadds
dec
xor
or
ja
pand
mov
cmpsl
and
data16
out
or
pop
data16
mov
bswap
push
mov
jb
sbb
test
addr16
into
push
and
lret
fcmovb
xor
and
mov
insl
bound
lock
adc
das
jbe
xchg
xchg
cmp
sbb
xlat
mov
mov
and
and
adc
jb
mov
sub
sti
sub
sub
push
das
mov
push
xchg
xchg
jle
dec
xchg
addr16
inc
ds
out
xor
xor
stos
outsl
pop
mov
test
arpl
fdivrs
mov
clc
loop
jne
jae
aam
jg
fs
add
ja
and
add
push
das
enter
leave
fisttpll
dec
outsb
inc
and
add
lret
xchg
cmp
pop
popa
jo
mov
push
mov
or
pop
mov
add
lds
and
xchg
call
ds
shlb
jbe
mov
stc
mov
mov
inc
pop
movsb
std
mov
jge
rorl
pop
mov
outsb
and
and
adc
adc
ljmp
jge
sub
cmc
sbb
aas
jo
dec
cld
xchg
icebp
orb
dec
test
pop
sbbl
int3
orl
aas
adc
lea
test
and
jmp
lods
xlat
leave
mov
and
and
movsl
fcmovnu
push
mov
sub
ja
pop
enter
pop
sub
cli
adc
rcll
dec
aad
or
mov
push
mov
sar
rcl
rcrl
dec
lcall
mov
shll
in
cmp
dec
sarb
push
cld
pop
add
in
cmp
int3
fistpll
and
adc
iret
insl
out
adc
repnz
faddl
testl
xchg
je
push
andb
cld
cmp
stos
mov
dec
out
jno
fs
add
out
cmp
xchg
push
ret
sub
fdivrp
jecxz
dec
push
cld
dec
imul
ljmp
jb
inc
in
push
fldcw
mov
lahf
inc
lods
ret
lock
push
in
int
add
dec
out
inc
ret
dec
jnp
adc
mov
mov
sti
xchg
mov
das
sti
testl
pop
icebp
fcompl
dec
js
loopne
adc
aam
dec
push
ret
lcall
dec
xchg
rcrb
idivl
mov
xor
adc
mov
cmp
push
jno
mov
inc
lea
fidivrs
cmpl
scas
pop
xchg
dec
xlat
inc
push
nop
push
xlat
xchg
mov
outsb
cmc
jmp
nop
fadd
faddp
leave
push
iret
push
sbb
push
sbb
sarl
mov
xor
fsub
dec
pop
inc
and
xchg
movsl
mov
ljmp
pop
jg
je
nop
stc
sbb
or
inc
clc
sar
cmp
punpckldq
push
add
xchg
sbb
pop
sub
push
testl
jle
pop
add
stos
adcl
decb
jge
add
fidivl
inc
add
jp
aad
in
loop
scas
cs
inc
lods
xchg
inc
sbb
jmp
lock
scas
or
lds
mov
xor
xor
mov
and
insl
daa
jp
adc
xor
insb
imul
jl
gs
xchg
lods
es
fs
or
add
mov
inc
mov
aas
cmc
movb
mov
lea
call
ss
jmp
inc
icebp
in
fcmovne
gs
mov
adc
cs
cmp
jp
lds
shlb
sub
jg
push
loope
jbe
sbb
test
push
jbe
lods
dec
and
lea
lahf
xchg
imul
addr16
notl
mov
mov
push
scas
add
loop
fucomi
imul
and
push
mov
push
hlt
and
js
cltd
incl
mov
push
pop
insb
fs
insl
jecxz
jae
cmc
addr16
lcall
bound
std
xor
jmp
push
add
popa
adc
cmp
pop
ret
or
xchg
adc
test
dec
and
sub
cli
aad
pop
jg
jp
aas
lock
mov
icebp
fcomps
cmpsb
jno
sbb
fisttpl
pop
cmp
out
sbb
mov
sub
dec
pop
icebp
inc
jns
aaa
pop
jl
mov
push
ss
insb
cld
imul
push
or
les
daa
ljmp
xchg
aaa
rcrl
sbb
je
notl
cmpl
lods
mov
push
xlat
leave
imul
in
cmpl
push
push
notb
test
xchg
shll
and
dec
jl
in
clc
xor
mov
stc
ret
aas
enter
pop
fs
pop
adc
sti
fwait
idivl
and
inc
rorb
subl
iret
outsl
mov
outsb
nop
push
movsl
pop
cltd
jo
xor
mov
adc
out
ja
jno
jl
jb
xor
sbb
cmp
push
adc
push
sbb
fstpl
mov
sub
popa
cmpsl
inc
scas
in
push
jmpw
pop
outsl
fnstcw
cltd
fadds
fcmovnbe
pop
aad
decl
dec
mov
outsl
xchg
popf
lods
aaa
xor
xor
hlt
stos
dec
jmp
mov
cmp
shl
cmp
rcll
shr
std
inc
add
cmp
rol
xchg
adc
mov
and
cmp
sbb
xchg
lcall
rorb
add
shrb
idivl
mov
shll
mov
xchg
enter
push
std
test
outsb
std
out
sbb
push
mov
test
mov
inc
movsl
sahf
repz
push
cmp
stos
dec
loope
adc
inc
dec
inc
in
xor
add
mov
mov
mov
jmp
mov
sub
mov
dec
and
sbb
addr16
jecxz
lds
push
sti
jle
ret
subb
sti
out
inc
push
or
out
repz
pop
pop
not
lods
push
jge
add
mov
pop
push
in
dec
xchg
push
insl
xor
ja
movl
or
mov
push
int3
jl
iret
mov
sub
dec
mov
mov
cli
cmc
daa
test
or
fstpt
mov
fwait
cld
aas
jo
clc
icebp
int3
sbb
inc
sbb
push
pop
sub
push
mov
arpl
pop
aaa
imul
cmp
into
lock
dec
add
nop
shll
fsts
mov
xor
rolb
mov
xor
shll
or
mov
faddl
jb
lret
sub
cltd
mov
cltd
insb
jb
ret
xor
lret
push
sbb
aas
subb
or
and
dec
outsl
xchg
test
mov
mov
adc
mov
not
or
ret
cmp
dec
jge
mov
mov
inc
cwtl
xchg
bound
mov
add
pop
ret
cmc
dec
jcxz
or
mov
sbb
int3
fdivr
cmp
loope
jbe
push
adc
jle
test
mov
pop
add
jmp
dec
sub
jl
inc
mov
push
movsl
sahf
aam
push
js
mov
cmc
add
sbb
lods
out
jbe
mov
sbb
push
lret
mov
outsb
ss
insb
pushf
and
fisubs
mov
dec
ficomps
mov
out
fnstcw
aam
xor
popl
mov
cwtl
mov
das
test
cmpsl
mov
pop
pop
push
leave
sub
push
xor
or
mov
jle
xor
dec
int3
leave
orl
subl
push
jmp
xchg
aas
add
cmpsl
lahf
addr16
pop
xor
jbe
je
sbb
es
arpl
dec
fidivs
mov
pop
fxch
jns
add
pop
js
in
add
dec
test
or
jmp
fiadds
loop
movsb
mov
inc
pop
lahf
stos
nop
inc
outsl
adc
pop
push
daa
or
std
push
push
daa
push
dec
inc
xor
xor
sarl
adc
aad
cmp
push
or
dec
lods
cmp
rol
mov
daa
iret
xchg
cmp
mov
lods
fsubr
aas
mov
jecxz
mov
and
jmp
clc
nop
xor
inc
push
sbbl
jbe
cmp
loopne
mov
repnz
aad
ds
pop
shl
mov
and
pop
mov
rcrl
out
xor
mov
js
cld
jne
sbb
stc
push
mov
mov
jl
mov
popf
mov
test
popa
lock
push
cmp
jl
mov
lret
out
cmovns
iret
dec
mov
lea
popa
repnz
mov
push
dec
mov
fisubs
mov
movaps
jbe
mov
into
out
jns
cmp
inc
or
imul
ret
mov
sbbl
mov
test
cltd
jecxz
and
nop
aas
int
jno
std
xchg
jb
mov
shrb
insl
in
aaa
int3
repnz
dec
pushf
xchg
xchg
aas
fwait
out
scas
test
test
in
push
call
xor
lret
stos
jg
jnp
sub
push
je
mov
mov
test
xchg
cmp
aas
jge
pop
gs
or
insl
jp
hlt
mov
cmp
sbb
add
or
push
xchg
or
pushf
out
jl
mov
in
sbb
inc
sub
sar
inc
scas
ss
insl
aas
mov
cld
sub
sub
mov
cmc
xchg
xor
xchg
dec
sbb
das
pop
shr
inc
mov
iret
clc
orl
fldt
push
xor
pop
mov
es
sub
xlat
ss
mov
cli
lods
in
inc
incb
cmp
pusha
and
and
or
mov
xor
in
and
cmp
arpl
in
sub
cmp
adc
dec
or
push
pop
xchg
push
sti
fs
daa
rclb
mov
aas
repz
add
jecxz
lahf
and
test
ret
mov
pusha
push
aaa
push
dec
push
adcb
adc
scas
pop
fstp
stc
and
jb
pop
jp
aas
jbe
stc
fcoms
adcl
xchg
jp
in
cltd
xor
fidivs
pop
push
xchg
pusha
mov
icebp
imul
data16
push
push
fsubrs
stos
mov
testl
ja
jno
adc
lahf
cmp
ss
cmpsb
in
jle
mov
xor
push
xor
lods
adc
pop
test
push
shlb
ja
clc
out
clc
jno
adc
outsb
and
lods
pusha
outsl
call
jle
int
xchg
out
xchg
add
pop
aas
inc
loopne
dec
jl
mov
bound
or
add
fnstcw
aas
push
push
in
and
iret
aad
push
leave
sti
cmpsl
sub
mov
scas
xor
rcl
mov
xchg
scas
mov
jb
loop
adc
pop
jne
out
leave
and
fcmovbe
fmul
movsb
shll
jns
out
repnz
cli
out
lahf
outsl
in
rcl
mov
lcall
cs
push
cmpsb
cmp
mov
add
jl
mov
add
sbb
jl
cmpb
jnp
lret
movsb
jo
in
adc
jl
xor
movsl
repz
jmp
xchg
mov
mov
arpl
loope
pusha
lods
mov
dec
sti
sub
aad
fs
mov
aad
jle
jnp
add
xlat
xor
out
push
daa
adc
dec
xor
orl
and
pop
notl
rcrl
dec
dec
xlat
sar
mov
jnp
into
push
sub
int3
cmp
xlat
jg
clc
sub
iret
or
roll
xor
ds
fstpt
popf
cltd
arpl
sbb
and
psubsb
xorl
imul
xchg
pop
test
mov
pop
and
xor
inc
dec
out
xchg
loop
mov
stos
lret
xchg
sbb
mov
mov
es
pop
push
lcall
popf
xor
mov
insl
cmp
mov
arpl
shll
lds
repnz
scas
dec
insb
test
imul
jnp
fcompl
push
jb
shlb
dec
mov
pusha
inc
inc
push
ss
push
cli
adc
cltd
xor
xor
int
add
xchg
or
inc
iret
sub
loop
rolb
mov
xchg
sbb
clc
jb
leave
add
xchg
add
out
test
in
addb
outsl
dec
aaa
out
jecxz
or
fstp
fwait
xlat
push
lock
inc
test
int3
mov
test
aas
xor
inc
adc
inc
adc
xchg
dec
dec
xor
pop
xchg
in
jb
sbb
shlb
movsl
cs
xchg
push
mov
cmp
lods
test
enter
fcmovne
cmc
sbb
sub
dec
cltd
inc
lods
xchg
jmp
out
push
jo
scas
test
dec
aas
scas
cmp
in
sbb
jne
ret
mov
ss
sarb
or
fstp
push
int3
lds
cmp
repnz
les
xor
pop
fbstp
idiv
call
xchg
ljmp
xor
mov
push
mov
orb
aas
sahf
clc
scas
push
pop
lods
xor
push
fmulp
pop
push
cwtl
ficompl
or
jb
xchg
bound
adc
sub
fwait
sbb
lcall
xor
sub
mov
sub
out
pop
movsb
jbe
or
xor
out
xlat
ficoml
jne
mov
sub
add
call
and
push
or
aad
mov
or
lods
xchg
ror
aam
int
dec
mov
mov
pop
pop
movsb
loopne
mov
inc
cmp
mov
stos
push
pop
xchg
sbb
pop
and
cli
push
sbb
sbb
and
inc
enter
stos
nop
repnz
add
outsb
xchg
cs
shlb
lods
xchg
iret
dec
not
and
mov
aad
in
lret
dec
popf
pop
outsl
test
jge
mov
fmull
jmp
xor
popf
mov
dec
and
sub
loop
sarb
push
push
push
jge
dec
sub
nop
out
shrl
mov
adc
push
xlat
sub
mov
xor
cmp
jae
lahf
shlb
nop
or
scas
jbe
xor
lret
and
add
ja
mov
int3
sbb
xor
or
dec
xor
or
psadbw
mov
cmp
ret
test
cmp
mov
or
add
xchg
testl
mov
jnp
push
add
fidivrl
jae
adc
push
pop
mov
in
pop
sahf
pop
pop
insb
push
mov
dec
test
insl
jl
inc
stos
cwtl
xor
enter
cmp
aam
inc
in
arpl
mov
int3
xlat
mov
add
out
in
arpl
jmp
leave
loop
cmp
fisttpl
outsb
cmp
and
arpl
repz
les
repz
pop
mov
and
cmc
in
cmc
ret
out
mov
inc
or
sub
mov
adc
or
in
sbb
bound
shrl
add
jbe
sub
std
or
xchg
test
arpl
mov
sub
push
mov
sub
xchg
addr16
cmc
movsb
pop
or
mov
loop
daa
sarb
push
ss
xchg
add
repnz
sbb
int
repz
test
push
xor
in
adc
inc
add
into
mov
mov
dec
jno
or
xchg
ljmp
push
sub
pop
cmpsb
out
scas
loopne
into
ljmp
jnp
lods
loopne
mov
jo
mov
add
je
clc
imul
sub
out
clc
dec
in
sarl
mov
js
jbe
push
lock
lock
aaa
pop
dec
dec
cmp
or
push
sarl
mov
mov
test
js
loopne
sbb
lods
cli
mov
mov
xchg
dec
lds
adc
push
mov
imull
out
dec
int3
mov
add
push
fs
mov
cmp
cmp
out
pop
shll
mov
mov
pop
pushf
cmc
aam
fsubrs
das
mov
add
loop
push
jnp
js
arpl
pop
push
fcomps
sbb
cmp
add
add
and
push
sbb
cmp
ret
sub
stos
shll
adc
call
lods
and
test
mov
adc
out
jo
aam
orb
mov
repz
imul
stos
pop
cmp
pop
out
imul
cs
xchg
jbe
outsb
mov
loope
stc
repz
stos
getsec
pop
hlt
jo
addr16
mov
mov
pop
popf
jg
adc
les
out
inc
or
dec
push
mov
aam
or
or
dec
aad
out
jae
test
inc
cmpsl
sub
repz
and
xor
jae
es
xlat
test
xor
inc
divl
scas
xor
jne
sub
or
adc
enter
icebp
mov
jns
xchg
leave
jne
sub
stos
jle
dec
push
cmp
jb
add
ret
imul
pop
in
aad
jp
fdivrl
mov
inc
arpl
dec
dec
ljmp
dec
sub
xchg
icebp
das
pop
ds
lea
mov
fidivl
fwait
outsb
cli
dec
adc
test
push
or
pop
adc
out
jo
mov
negb
dec
int3
mov
fld1
pushf
dec
mov
cmpsb
mov
fisubs
add
sbbl
mov
pop
shll
push
dec
insl
and
dec
jns
xchg
and
add
aam
inc
add
pop
mov
fwait
inc
lret
xor
xor
int3
cmp
dec
pop
pop
addr16
fldt
xlat
in
adc
push
les
xchg
xchg
addr16
sbb
mov
mov
pop
mov
mov
and
mov
mov
cmp
jg
fmul
push
and
fs
pop
je
inc
mov
dec
xor
loop
and
insb
mov
stos
mov
fsts
fstpl
fisttpll
jge
push
icebp
es
and
mov
push
xlat
iret
sbb
or
pop
dec
xchg
out
pop
out
divb
cltd
out
mov
push
fcmove
and
rorb
pop
xor
xchg
push
mov
jae,pt
fists
jae
push
clc
jbe
mov
mov
aam
jmp
lret
aaa
add
jnp
and
inc
cwtl
jb
inc
xor
pop
jecxz
or
bound
daa
push
add
cmp
xor
int3
inc
sub
sti
enter
push
mov
mov
lock
iret
adc
out
enter
adc
cmc
lea
mov
cmpl
mov
jne
sub
mov
or
test
sbb
jb
inc
icebp
movsl
add
sti
adc
cmp
std
or
cmp
rcr
and
aaa
xchg
popf
jmp
daa
into
push
mov
cmpsb
adc
inc
dec
das
les
stos
shl
in
push
adc
dec
dec
pushf
sarl
arpl
mov
jecxz
push
or
mov
mul
shl
lret
mov
lret
and
sub
daa
lgs
call
pop
jbe
adc
adc
lods
dec
outsb
rorl
add
mov
mov
loop
popf
cmp
int3
push
scas
into
pop
repnz
mov
into
int3
arpl
leave
scas
mov
sbb
mov
jne
push
enter
repnz
mov
mov
es
dec
add
push
dec
insl
pop
outsb
dec
adc
cmp
lods
xlat
push
push
mov
dec
int3
or
mov
inc
sub
cmp
cli
icebp
cmp
lcall
push
cmc
ret
inc
das
jbe
sbb
call
sarb
movsb
jle
enter
out
push
add
leave
in
in
clc
shl
adc
call
xor
movsb
stc
das
lds
fsts
test
xchg
call
adc
dec
lret
xchg
jle
mov
in
arpl
cmp
jae
pop
pop
push
push
push
mov
push
push
fbld
js
lock
dec
sub
aad
xchg
out
xchg
add
stc
sub
mov
push
sti
adc
stos
fistpll
cmc
xor
pushf
push
jbe
stos
pusha
cltd
in
jp
stos
scas
cmp
sti
enter
mov
aas
mov
mov
test
call
mov
pop
out
sub
lcall
inc
lret
add
xchg
mov
or
mov
xchg
xchg
mov
test
hlt
in
lret
sbb
or
rcr
roll
scas
incl
fucomp
hlt
shl
inc
dec
push
ljmp
rcl
lods
cwtl
jns
add
add
or
mov
xchg
sbb
xchg
sahf
stos
iret
xor
lds
mov
inc
fucomp
dec
outsb
loop
xchg
cmc
xchg
or
bound
call
inc
scas
xchg
sti
pop
movsb
add
inc
mov
scas
pop
in
mov
movsl
and
jmp
ljmp
loopne
sub
and
jl
mov
pop
ljmp
clc
popa
add
xor
xor
jge
pop
adc
shll
adc
lock
inc
clc
or
sarb
or
adc
insl
sub
jmp
mov
add
push
aaa
ret
mov
out
test
sub
aas
xor
add
push
pop
push
fs
xchg
dec
adc
neg
stc
mov
adc
outsb
pop
jmp
out
cltd
mov
sub
jne
and
xor
js
push
inc
mov
fwait
pop
into
into
inc
cmp
xor
sbb
popf
sbb
fsubrs
lock
mov
and
test
jg
scas
add
push
mull
xor
jae
enter
lds
fdivr
movsl
shrl
stos
push
cld
ss
cmc
ret
adc
adc
or
in
inc
cltd
push
stos
leave
mov
push
or
jnp
mul
lea
outsl
loopne
cmc
shl
dec
mov
push
push
jae
rcrb
cmc
jns
std
or
mov
cmp
xchg
inc
sbb
sub
jecxz
icebp
stos
das
cmp
push
insb
cwtl
mov
mov
rcll
scas
retw
xchg
sahf
push
test
and
daa
stos
mov
mov
test
in
stos
in
cld
sub
sub
jg
out
mov
jge
jnp
xchg
add
adc
inc
and
dec
ret
mov
inc
clc
scas
xchg
sub
jecxz
and
loope
mov
mov
out
lahf
outsl
stos
cs
out
ljmp
mov
cltd
dec
jne
xchg
cmp
push
call
int
or
add
les
push
dec
sbb
jmp
dec
pushf
cmp
cltd
lea
add
cli
cmpsl
sub
mov
repnz
cmp
lret
repnz
ret
and
pushf
ss
xchg
cmpsb
insl
negl
das
andb
fcomps
and
js
fldt
int3
mov
push
mov
add
mov
data16
ss
push
pop
ret
fidivs
int
adc
je
lea
jns
js
js
push
pop
adc
mov
sbb
add
lret
mov
jae
aad
jg
outsl
or
shrl
and
into
hlt
faddl
std
mov
cmpsb
test
incb
xchg
and
jmp
hlt
fcomps
cmp
sub
sbb
adc
xchg
xchg
push
pop
repnz
fldl2e
hlt
adc
jbe
mov
orl
jl
call
in
sbb
fdivl
add
push
gs
dec
lcall
mov
ljmp
sbb
dec
mov
call
or
ja
pop
sub
or
push
mov
inc
mov
adc
pop
test
or
cltd
out
cmp
cmp
out
mov
je
or
push
xor
lcallw
push
mov
jb
fucomip
or
xchg
adc
imul
test
mov
stos
push
imul
add
test
sbb
aad
xor
mov
enter
mov
movsb
and
jno
in
test
xor
fwait
cmp
inc
cs
in
daa
int
roll
pop
test
mov
mov
dec
addl
fdivrs
push
xchg
hlt
push
xchg
test
aaa
shlb
bound
gs
test
or
das
imul
push
hlt
loop
and
shlb
mov
popf
rcl
jecxz
push
adc
push
jns
icebp
shll
cwtl
int
in
mov
pop
fwait
sbb
ret
cmp
push
shll
insb
cmp
add
sub
sub
dec
sub
add
mov
ljmp
xchg
sub
in
out
adc
negl
xorl
xlat
shl
push
mov
cmp
fidivrs
ret
out
or
in
xchg
mov
jmp
fcompl
inc
sub
cmpl
push
sub
push
sub
push
mov
jae
icebp
adc
fiaddl
cli
out
mov
jmp
divl
lock
cltd
aam
jo
das
push
out
loope
or
cmp
pop
mov
sbb
loope
push
push
cmp
or
insl
lret
test
cmp
ffree
jle
lods
ds
dec
push
and
xchg
adc
xchg
es
push
test
out
xor
xchg
je
sub
mov
mov
lcall
adc
jnp
cmp
in
mov
sbb
add
and
jle
mov
mov
rorl
add
stc
push
pop
insl
mov
mov
jle
cmp
jbe
mov
repz
jle
inc
mov
push
icebp
movsb
jp
pop
or
pop
mov
xor
mov
mov
push
pop
jo
push
aas
dec
mov
movsb
ror
sti
xchg
rorl
and
sub
sub
mov
push
or
rcr
std
add
xor
sbb
mov
and
xor
jo
sti
shlb
push
pop
inc
add
int
dec
shlb
lock
mov
test
clc
rorb
adc
nopl
adc
pop
pop
mov
std
sbb
and
loope
dec
or
dec
mov
xor
sub
mov
cld
dec
push
xchg
xchg
repz
pop
lds
fcom
mov
and
adc
fwait
mov
cmpsl
es
sub
imul
push
push
repnz
sub
mov
mov
sub
shrl
xor
dec
xor
mov
cwtl
mov
sti
push
mov
fisubl
in
sbb
cli
sub
clc
fsub
add
pusha
or
ljmp
std
cmp
cmp
add
fists
and
fldl
xchg
lds
sub
jns
cmpsl
mov
rol
dec
jbe
mov
push
mov
add
adc
mov
and
cmpsl
in
outsb
cmp
sub
inc
inc
xor
add
shrb
nop
xor
cmc
xchg
aas
pushf
and
or
lock
push
ds
mov
jg
sbb
mov
push
jmp
push
jmp
popf
xor
in
enter
sub
outsl
cmp
cmpsl
pop
scas
cmp
and
rorl
mov
stos
xchg
mov
and
mov
es
jb
mov
or
aad
loope
or
jae
pop
sub
sub
dec
lcall
xchg
pop
int3
cmc
cmpsb
jle
mov
sbb
jbe
pop
stc
rorl
outsl
fdivrl
xchg
lods
out
jg
jmp
jae
mov
loope
mov
or
xor
jp
daa
dec
jns
imul
add
jl
push
test
mul
les
fisubl
sub
mov
sahf
repnz
dec
xchg
fldl
fwait
cmp
sbb
inc
xor
sbb
decl
cli
js
xchg
cmp
adc
push
or
sahf
iret
flds
inc
xlat
shlb
mov
cmp
xchg
jno
popa
xchg
push
shlb
and
loopne
fists
stos
mov
decb
dec
cmp
inc
mov
lods
fwait
inc
enter
rcll
aam
enter
push
add
lret
out
data16
xchg
xchg
jmp
dec
rolb
das
pop
push
xchg
stos
jbe
pop
repnz
cmp
add
lods
push
adcb
test
mov
push
and
int
pop
or
xchg
push
mov
fs
sub
cmp
int
dec
add
xor
jae
adc
pop
push
out
or
imul
xchg
jle
mov
cmp
movsb
cmp
jp
pop
mov
ss
or
mov
adcb
xchg
dec
pushf
je
rcrb
popa
sarb
mov
lret
maskmovq
notl
shl
fists
mov
test
addr16
mov
shlb
mov
or
in
push
push
fdivs
nopl
lds
sbb
sub
push
mov
icebp
outsl
pop
push
nop
pop
outsl
rcrb
and
xlat
mov
mov
popa
ss
cwtl
mov
pop
imul
jns
push
mov
mov
mov
ror
cmpl
mov
adc
xlat
xchg
add
dec
mov
sbb
or
pop
cld
cmp
out
adc
int3
mov
mov
ds
pop
mov
out
cmp
xchg
push
addl
lods
xchg
in
rol
pop
out
xor
pop
mov
adc
addb
xchg
sbb
pop
mov
lods
pop
repnz
subb
adc
cmpsl
in
cmp
sub
in
xchg
or
js
or
out
loop
inc
dec
outsb
das
mov
push
dec
mull
sti
sbb
out
jl
clc
mov
addl
pop
outsb
mov
data16
or
mov
adc
stos
mov
std
sub
xor
jnp
adc
outsl
push
push
adc
mov
mov
cmp
je
push
dec
lock
push
pop
mov
mov
or
or
pop
pop
mov
in
outsl
jae
aad
sbb
mov
stos
pop
xor
std
xchg
push
clc
out
testb
sarl
imul
cmpsb
sbb
mov
xchg
cmp
jecxz
addb
jg
add
and
pop
aas
std
mov
xchg
or
loopne
xchg
mov
lcall
lcall
stos
rol
outsl
push
out
inc
xor
cmc
inc
jge
xchg
pop
inc
and
fmul
leave
push
movsb
scas
and
dec
lea
cli
pop
in
jge
inc
sub
dec
jno
or
dec
sbb
rcrb
pop
xlat
loopne
cmp
inc
mov
and
mov
jo
enter
in
dec
movsb
sbb
inc
and
rcr
test
push
test
bnd
xchg
prefetch
std
lds
decl
sub
cld
lahf
sbb
pusha
push
mov
add
cmpsb
or
int
mov
shll
mov
pop
inc
cld
or
call
xchg
ss
cmp
daa
push
stos
cmp
clc
mov
mov
mov
pop
pop
mov
sbb
or
push
xchg
mov
std
mov
sbb
mov
mov
rorb
mov
jl
je
mov
sub
pop
add
push
push
mov
pop
imul
imul
mov
and
dec
sahf
cmpsb
iret
pop
jp
rol
int3
mov
jne
gs
pusha
sbb
xor
nop
inc
inc
push
mov
loope
push
inc
call
xchg
icebp
icebp
xor
enter
xlat
sub
jb
mov
dec
mov
jne
push
mov
jecxz
pusha
dec
xchg
mov
xchg
cltd
fsts
add
sub
xchg
sti
mov
ret
dec
cmpsb
mov
add
cmc
mov
mov
mov
mulb
sbb
imul
push
cmp
jb
adc
js
ss
dec
xor
xchg
sahf
loope
clc
xchg
aas
sbb
in
jae
jmp
dec
mov
push
cmp
int3
and
sti
add
jbe
ds
stos
sahf
push
stos
out
popfw
stos
scas
stc
sub
jp
mov
xor
or
shrl
sbb
and
addl
inc
and
fs
add
scas
fisubl
dec
pop
arpl
xor
mov
stos
xor
inc
inc
jae
inc
icebp
add
jecxz
pushf
inc
subl
jno
push
rorb
sti
enter
xor
xchg
mov
lds
xchg
mov
mov
mov
lret
and
xor
push
in
or
jmp
mov
in
out
div
hlt
dec
inc
sbbl
dec
or
mov
aam
cmp
call
imul
cmp
adcb
push
jg
and
sbb
hlt
mov
mov
mov
mov
and
in
cmc
xchg
insl
xchg
dec
lods
dec
xchg
shrb
mov
pop
fwait
jne
leave
cmp
loop
sti
lods
loope
push
jo
mov
xchg
pop
push
mov
inc
pushf
addr16
cmpsl
xchg
jno
lods
sub
fisttps
cmc
dec
xchg
pop
cli
shlb
push
mov
adc
repnz
sbb
or
sub
ficomps
loope
sub
ret
or
xchg
mov
or
sbb
cltd
into
leave
pop
pop
decb
xor
dec
xchg
cmc
ret
scas
loope
leave
sub
sub
add
inc
cmp
ja
insb
pop
sub
mov
inc
xor
mov
test
dec
cmc
pop
push
mov
jl
test
xor
fldl
aad
cmp
or
adc
ja
sbb
jmp
jbe
push
xchg
mov
repz
imul
test
arpl
out
adc
fwait
enter
test
fucomip
arpl
sub
movsb
dec
cmp
or
cmpsb
aad
rolb
lahf
iret
sub
jb
pushf
dec
push
sbb
mov
dec
aad
fisubl
loope
mov
mov
mov
xchg
out
repnz
sub
aam
in
fdivl
mov
scas
cmp
push
sub
leave
push
mov
and
sbb
shl
clc
pop
xchg
mov
es
je
lds
xor
out
stc
rolb
jmp
push
cltd
mov
sub
aam
dec
dec
jno
leave
ffree
jg
jl
out
addr16
sbb
mov
movsb
sbb
sarl
mov
push
call
dec
fs
lret
xchg
push
aad
in
addr16
mov
bound
out
cld
ds
test
pop
iret
mov
outsb
jbe
or
sub
fistl
cmp
inc
shlb
outsb
outsl
pop
bound
add
dec
gs
cmp
lcall
js
or
stc
push
dec
cltd
or
lahf
cmp
fcom
sbbb
cli
imulb
xchg
push
add
addl
mov
rcrl
rorb
sub
and
cmc
or
pop
repz
sub
insb
mov
push
push
push
cld
rclb
xchg
pushf
mov
ljmp
lds
into
adc
pop
push
pusha
pop
pop
dec
mov
push
xor
push
mov
push
insl
jmp
aad
stos
xchg
sbb
xchg
mov
ret
dec
dec
inc
subl
sbb
pop
jmp
sub
scas
lret
test
push
pop
pop
cmp
loop
and
adc
mov
shlb
rcr
dec
mov
jl
xchg
xchg
iret
xor
rcrb
dec
lods
std
daa
mov
dec
loope
xchg
push
dec
jmp
cmp
cmp
sahf
loope
mov
stos
pop
push
cli
mov
adc
inc
repz
mov
notl
or
test
into
in
pop
lock
push
add
mov
mov
mov
pusha
mov
out
mov
pop
xor
inc
or
inc
add
imul
cmpsl
mov
ss
cmp
inc
sbb
lcall
testb
lea
call
xor
cmp
dec
test
jae
incl
pop
mov
mov
in
lods
lret
jl
adc
cmpsl
pop
jmp
fwait
lock
cmp
adc
sbb
push
je
jle
add
les
cltd
mov
push
xor
pushf
insb
pop
aam
and
and
cwtl
stos
enter
pusha
aas
insl
sti
cmp
sub
sub
sub
push
dec
xchg
xor
ja
or
test
mov
bound
fisttps
mov
scas
adc
lret
mov
rcr
or
inc
sti
sub
les
xlat
or
cmp
jmp
outsb
sub
popf
jns
pop
fistl
sbb
lcall
cs
adc
ss
outsl
aam
clc
fidivrs
in
xchg
clc
jge
ret
jmp
outsl
push
xchg
shl
daa
popl
popf
dec
inc
iret
push
fwait
mov
and
mov
rclb
lods
adc
mov
lahf
jns
repnz
push
jp
stos
stc
int3
insb
jge
cmp
repnz
cmc
lods
mov
push
imul
cld
jbe
mov
ret
mov
mov
jmp
mov
imul
push
ret
jae
lods
xor
aad
sub
int3
inc
orb
jbe
clc
ffree
cmp
xchg
loopne
out
outsl
push
fsubrs
outsl
xorl
sbb
ret
frstor
dec
jo
jno
shll
mov
push
bound
subl
cmp
mov
xor
jne
mov
cwtl
mov
test
out
pusha
jo
or
mov
dec
rcr
shrb
mov
fisttps
addr16
dec
or
push
add
mov
lret
jnp
je
aas
pop
dec
js
js
out
ret
xchg
es
xor
lods
sub
ds
mov
adc
pop
mov
mov
sarl
xchg
cmp
fsubr
mov
clc
adcb
int
popf
mov
in
call
js
and
stos
mov
jne
fcmovne
insb
pop
jne
mov
sti
adc
mov
mov
sub
lret
inc
mov
subb
cltd
mov
dec
jecxz
jecxz
jp
ret
mov
push
pop
test
stos
mov
mov
and
ret
outsb
pop
je
jmp
aad
fildll
stos
ret
and
leave
xchg
cmp
ja
xor
das
lcall
hlt
dec
pop
sub
fmuls
ja
jnp
iret
es
inc
add
jg
rcrb
addr16
repnz
movsb
push
jmp
daa
pop
jl
test
push
cs
sub
inc
xor
xlat
shl
jle
inc
fucom
mov
gs
cmp
mov
sbb
inc
add
mov
mov
cs
or
jne
in
sbb
dec
out
sarl
adc
push
fs
inc
imul
fisttps
or
pop
push
push
jnp
ja
mov
xchg
int
iret
testl
outsl
frstor
outsb
dec
imul
shrb
sbb
push
mov
push
push
xor
mov
xchg
sub
sub
dec
push
lock
sbb
or
lock
std
push
movsl
mov
mov
imul
data16
aas
shlb
les
adc
add
mov
jbe
push
aad
test
mov
sub
jle
xchg
popa
and
pop
cmp
xor
aad
pop
xchg
insb
push
or
add
sbb
pop
or
pusha
jp
in
daa
xchg
cmp
push
clc
gs
sahf
ljmp
jns
and
sbbb
test
mov
loop
aaa
mov
pop
loopne
fldcw
cld
xor
xchg
daa
movl
out
xor
mov
cmpsb
inc
icebp
bound
push
faddl
pop
mov
xlat
adc
aaa
lds
fs
push
inc
fstl
js
push
aam
out
xchg
lahf
sbb
sub
cmpsb
mov
mov
sub
imul
cltd
jp
push
repnz
push
mov
mov
or
je
and
adc
fdivp
outsb
and
lret
xchg
cmp
dec
mov
pop
jmp
fmuls
xor
push
jge
or
loopne
mov
mov
adc
and
ljmp
ljmp
and
shll
icebp
aas
jecxz
adc
rcr
cmp
bound
arpl
xchg
pop
jo
pop
and
inc
int3
outsl
movb
xorl
cmp
mov
add
cmp
icebp
gs
clc
mov
cli
orb
fisubl
sbb
lock
jbe
inc
and
mov
stos
dec
mov
adc
repnz
pop
dec
scas
mov
mov
jl
pop
in
leave
shll
out
sub
ret
push
jbe
xchg
push
imul
scas
enter
and
mov
pop
cmc
inc
jecxz
jmp
das
xchg
cmpsl
ja
ljmp
xor
ja
pop
and
js
jp
imul
int3
xor
bound
mov
pushw
pop
mov
dec
int3
imul
push
add
adc
and
mov
in
mov
out
jo
dec
movsl
jbe
mov
push
xchg
mov
dec
inc
pextrw
and
outsl
jg
mov
les
mov
fs
je
popa
mov
test
xor
push
push
repnz
and
pop
and
aaa
loope
loope
jge
hlt
out
enter
fsubrs
mull
or
adc
sub
mov
cmp
aaa
pop
jp
inc
push
xchg
jns
adc
fmuls
leave
loope
pop
fs
pop
lahf
add
xor
fcomi
icebp
push
addr16
jae
aam
js
icebp
dec
icebp
mull
dec
mov
lret
jnp
push
dec
xlat
xor
aad
push
jnp
fisubrs
fistpll
in
mov
mov
push
jns
ds
out
lock
jle
jmp
or
pop
cmpsb
insb
mov
scas
sub
mov
lea
sbb
mov
push
cmc
loop
pop
or
shlb
xor
jo
xchg
pop
mov
pop
dec
jns
int
pop
pop
dec
pop
adc
jb
loop
or
inc
rclb
jle
callw
dec
vmwrite
dec
jp
pop
jns
mov
or
xchg
sub
mov
lss
inc
xchg
ja,pt
std
dec
or
out
andb
jl
mov
xlat
mov
or
push
ficoml
jl
push
daa
pop
adc
cwtl
pop
mov
inc
mov
dec
enter
mov
out
gs
dec
movsb
xor
add
or
iret
aad
in
jl
cmp
rcrl
ret
ljmp
and
lods
add
sub
jmp
inc
imul
fimuls
push
inc
xchg
push
adc
mov
cmc
dec
pop
dec
addr16
jmp
mov
jl
outsl
jno
into
mov
cli
pop
pushf
stos
aaa
movsl
rolb
sbbb
scas
aam
mov
add
je
test
fwait
push
xchg
cs
and
fadd
and
outsb
adc
mov
pushf
mov
mov
test
jle
xchg
add
fadds
mov
sub
popf
or
xor
outsb
cmc
xchg
mov
negb
fistl
mov
sbb
aaa
mov
lahf
mov
inc
push
push
testb
aad
aas
push
xchg
fnstsw
out
in
sub
loopne
mov
stos
and
cmp
es
jecxz
popa
and
inc
call
imul
push
xchg
fisubs
test
jmp
mov
mov
insb
out
lahf
dec
in
jno
popa
jns
xor
fstpl
and
test
inc
cmpsb
movsl
repz
dec
mov
ss
es
cmp
fisubrs
inc
fidivs
std
adc
repnz
sub
pop
xchg
add
shl
pop
adc
add
imul
mov
jae
ljmp
mov
and
cs
repz
stos
out
dec
push
mov
dec
adc
adc
clc
test
ret
aam
sub
jge
push
stos
inc
mov
outsb
es
mov
mov
stc
sub
cli
pop
popa
lods
inc
insb
jmp
ret
and
fcomps
and
inc
add
fcoms
cltd
ret
mov
stc
rorb
shrl
or
sbbb
loope
add
push
icebp
and
jno
out
imul
pushl
mov
fucomip
push
bound
mov
fistps
inc
jne
shll
xor
fcomps
fld
lahf
mov
add
pushl
int3
lock
cmp
mov
mov
inc
fwait
loopne
lcall
scas
push
enter
xor
xor
jl
dec
xchg
inc
push
xor
call
mov
mov
shrl
jp
jl
es
ficoml
fs
lock
jno
cld
mov
inc
cmpsl
sbb
pop
es
dec
dec
ja
hlt
int3
cld
or
xchg
push
sub
testb
roll
push
sahf
jl
rclb
pusha
sub
out
cmp
scas
imul
add
popl
dec
jle
jle
pop
and
out
jns
test
call
xchg
xchg
fwait
loop
inc
and
inc
inc
or
popl
xor
stos
pop
fdivrs
pop
jg
adc
hlt
jns
imul
scas
push
inc
mov
jmp
call
pop
xchg
mov
mov
jns
in
or
pop
arpl
popf
int
sahf
imul
sbb
sbb
inc
xor
leave
aam
jbe
add
mov
les
outsb
jne
mov
mov
cmpsb
addr16
mov
sbb
mov
pop
add
loopne
in
pop
sti
sbb
sbb
mov
cmp
ja
pop
xchg
shr
cmc
mov
mov
sbb
mov
push
pop
xor
jo
jo
xchg
and
dec
and
jp
pop
cmp
pop
iret
mov
es
f2xm1
out
jle
mov
mov
mov
das
and
push
xchg
enter
lock
xor
test
cmp
or
and
jnp
push
movsl
out
xor
test
roll
arpl
jb
nop
and
dec
cmp
cmpb
sbb
cpuid
inc
scas
mov
insl
outsb
pop
jge
in
dec
inc
xchg
shll
mov
xchg
and
cmpsb
fldenv
fmuls
test
call
sub
in
pop
clc
dec
ds
jg
xchg
add
adc
pop
mov
enter
imul
testb
mov
cwtl
mov
les
add
imul
in
les
mov
inc
daa
cld
mov
xchg
data16
add
cmp
mov
mov
jo
ljmp
mov
sub
or
pop
dec
ss
repz
clc
std
or
orl
cmpsl
jb
sub
rcll
pop
mov
dec
popa
or
jecxz
dec
cli
xor
imull
jp
mov
xchg
mov
mov
mov
pop
fcomi
xorl
mov
xchg
lods
rolb
cmp
cmc
cltd
jnp
mov
scas
addr16
xlat
mov
cmpsl
jecxz
test
jmp
jno
je
enter
adc
mov
or
sarb
repz
popf
in
dec
pop
push
cmp
rolb
dec
push
xor
icebp
dec
ss
pop
ss
movsb
xchg
stos
dec
hlt
aas
scas
xor
lods
sbb
lods
jecxz
pop
int
sarl
pop
dec
sub
adc
or
shrl
andl
push
ret
cld
ljmp
xor
insb
int3
push
sbb
push
stos
out
out
dec
push
sbb
push
xchg
xchg
ret
fmuls
and
cvtdq2ps
popf
mov
push
sti
mov
inc
pop
jecxz
decb
xchg
push
ds
lahf
lcall
test
fs
add
push
cs
sub
dec
inc
shrl
pop
jo
rcll
mov
insl
gs
int3
inc
adc
fucomi
pushf
sub
ljmp
xchg
cmp
scas
pop
int
jg
ret
push
hlt
popa
sub
in
fcoml
adc
inc
leave
repz
adc
jns
fsubs
jnp
cmp
int3
xor
clc
jmp
jb
xchg
fiadds
adc
addl
std
xchg
leave
adcl
push
ret
and
dec
mov
repnz
lds
sub
adc
mov
das
xchg
dec
adc
sar
sbb
lret
repnz
xchg
push
in
testl
add
jp
stc
addr16
sub
adc
dec
popf
xor
mov
dec
pop
lahf
mov
clc
cld
xor
sbb
adc
lret
fcom
sub
loope
sub
push
adcl
or
adc
dec
jae
ret
mov
inc
xchg
add
mov
stos
hlt
sarb
or
out
dec
aam
movsb
mov
xchg
sbb
out
and
pop
xchg
cmpsb
popf
pop
ljmp
int3
or
in
push
push
mov
sbb
testb
fisubs
sbb
push
movsb
jp
popf
int
push
push
sub
ss
jg
mov
cwtl
sbb
loopne
imul
push
fimuls
mov
icebp
xchg
test
pop
cmp
pushf
mov
adc
inc
pop
push
loop
test
iret
mov
cmp
xor
adc
pop
test
repz
sbb
mov
mov
sbb
and
lcall
jl
repz
popa
mov
inc
fwait
jbe
xchg
jo
jl
lock
dec
lods
push
pop
sub
mov
fsub
scas
push
loopne
in
sub
fisubrs
add
mov
cmpsl
out
sahf
dec
out
and
jnp
ss
int3
sub
mov
and
out
push
mov
xor
xchg
int3
popa
push
dec
or
mov
jmp
mov
repz
jg
lret
fistl
pushf
mov
std
xor
fsubrl
xchg
jecxz
negl
loope
inc
mov
fsub
cmp
dec
test
mov
xchg
movsl
push
or
imul
push
jae
jecxz
add
stc
adc
xor
in
xchg
jb
ljmp
lods
out
cmp
ja
stc
int3
inc
stos
xchg
inc
mov
jle
arpl
or
int
cmp
adc
mov
dec
and
ficomps
shrl
adc
ljmp
xchg
testb
inc
mov
cwtl
adc
xchg
mov
inc
testb
sub
ret
lcall
xlat
lock
test
lock
movsl
mov
xchg
mov
imul
shrl
pop
xchg
jle
leave
mov
adc
leave
notl
insl
jg
and
jnp
and
cwtl
sbb
lea
scas
mov
scas
inc
lret
mov
dec
push
insl
int
lods
inc
aas
xchg
push
div
jmp
push
and
jecxz
mov
mov
mov
jmp
and
scas
outsl
adc
sub
push
mov
out
mov
cs
bnd
inc
pop
pop
jmp
xchg
pop
xor
pop
jbe
jae
test
jne
ds
cmp
inc
lret
xchg
dec
lcall
sub
aaa
call
cmp
lret
jmp
jecxz
or
pop
xor
jbe
fwait
inc
fsts
jb
cwtl
pop
pushw
mov
xchg
jmp
xchg
push
xor
pop
stc
out
nop
pop
bound
js
filds
cwtl
pop
movsb
cmp
dec
jb
bound
ret
repnz
mov
cmc
fcomps
cmpb
test
push
cmp
add
movsl
dec
dec
adc
inc
test
ret
jg
mov
add
daa
sub
sub
out
mov
test
iret
jle
and
js
xchg
xchg
push
and
out
jg
gs
jb
out
ss
ja
jb
ror
fnsave
js
lahf
jo
mov
cmp
jno,pt
adc
xchg
mov
fbld
jmp
ljmp
mov
orl
out
xchg
and
jmp
pop
inc
cwtl
mov
cltd
mov
push
mov
sub
rolb
or
mov
rcr
pop
mov
hlt
cli
mov
sub
push
cmp
mov
call
push
ror
sub
jle
lock
mov
iret
test
stc
out
push
and
sub
jne
push
fidivrs
in
addr16
fsubl
mov
pushf
dec
mov
jle
aas
mov
loopne
movsb
das
jno
fisttpll
frstor
mov
mov
cmp
sbb
cmpb
and
jmp
inc
enter
ret
shlb
jb
inc
mov
std
fisubrl
inc
push
mov
sti
imul
jnp
jae
adc
and
daa
call
jno
loop
mov
inc
jo
arpl
inc
jbe
mov
mov
cmp
lcall
dec
and
test
int3
iret
xor
xchg
lock
push
test
sbb
xchg
jbe
xor
mov
fdivs
ret
ror
les
push
add
ja
repz
mov
jbe
frstor
lret
sub
mov
xchg
gs
jnp
shl
cmpsb
mov
inc
adc
shlb
mov
fs
mov
fidivrs
iret
xchg
sub
mov
test
jmp
mov
jbe
mov
sbb
pop
cmc
sbb
jle
jmp
mov
dec
rorl
lods
jnp
cmp
sbb
enter
scas
pop
fs
mov
lahf
or
mov
xor
xchg
jbe
flds
mov
xor
xor
fistpll
dec
mov
push
push
jle
out
jmp
cmc
das
and
movsb
fnstcw
inc
sub
mov
in
or
aam
pusha
cs
bound
imul
cli
jg
xor
xchg
jl
imul
mov
xchg
lcall
std
sub
xchg
mov
out
pop
or
or
mov
enter
adcb
in
mov
xchg
xchg
into
or
scas
lds
adc
sbb
repnz
out
xchg
mov
cs
push
loope
cwtl
sbb
dec
fidivs
scas
stos
jmp
cs
pop
dec
mov
cmc
mov
jg
xchg
outsb
push
mov
stos
mov
cli
jp
icebp
repnz
std
mov
pop
xchg
mov
mov
aam
and
mov
imul
push
mov
push
scas
std
ja
dec
into
adc
imul
ljmp
jge
clc
jb
mov
xor
dec
imul
cmp
lea
insb
fidivs
hlt
push
rorb
add
and
jecxz
jle
outsl
mov
xchg
stos
push
inc
push
fxch
or
adc
fstpt
inc
mov
lret
pusha
lock
mov
xor
mov
rol
adc
cmp
std
fisttps
mov
add
insb
adc
and
add
add
out
loope
inc
mov
fcmovu
sti
movsb
sbb
push
call
lods
cmc
push
pop
inc
jne
cmp
imul
mov
divl
xor
mov
ret
xchg
mov
add
mov
sbb
push
ret
or
mov
xchg
sub
out
push
mov
loope
dec
leave
jl
test
fwait
add
xor
jo
xlat
pop
cmp
lds
cmpsl
add
pop
or
in
push
pxor
sub
movsl
shrb
mov
jne
push
xchg
int3
and
stos
rcll
loop
scas
mov
push
or
sbb
mov
adc
dec
xchg
mov
ja
and
loope
sub
lret
jge
leave
jo
jle
pop
cltd
pushf
push
aaa
add
stos
in
in
xchg
xchg
cmpl
push
aaa
pop
ds
pushf
les
adc
in
jecxz
cmc
repnz
or
pop
lock
push
in
movl
adc
or
mov
sbbl
in
mov
mov
push
sahf
fwait
add
add
orb
mov
fs
sub
fucom
jne
out
jbe
addb
std
mov
push
stos
xchg
mov
xchg
fstpt
dec
jae
xor
fwait
xor
adc
aam
cmp
push
xor
dec
mov
adc
icebp
fst
cmp
lods
xor
in
insb
loope
dec
aam
js
cwtl
jl
sub
or
jmp
dec
dec
iret
out
nop
pop
lods
psubd
push
cltd
jno
sbb
push
and
dec
sahf
popa
mov
sbb
xchg
call
cmc
xchg
lds
cmpb
enter
ds
mov
imul
pop
mov
sahf
int
jns
lea
cli
push
cmc
mov
cmp
mov
or
inc
outsb
mov
out
pop
pop
ret
aam
inc
pop
sbb
idivb
in
dec
daa
push
clc
add
jmp
iret
int3
pop
cmc
lret
insl
push
jne
fs
or
cmp
mov
sbb
add
enter
pushf
sub
xchg
mov
sarb
sbb
idivb
test
sub
aas
add
loop
mov
xchg
or
dec
adc
loope
repz
xor
inc
mov
xchg
rcr
hlt
dec
push
loopne
insb
pushf
mov
mov
and
inc
stos
loopne
mov
bound
or
mov
xor
xchg
aam
in
pop
cld
fs
inc
push
loope
stos
mov
xlat
push
mov
mov
insb
mov
adc
arpl
lahf
jo
push
pop
cmpsb
fs
or
stos
popa
aaa
imul
lods
cs
mov
aam
outsl
pop
sub
cmp
sbb
sub
xchg
mov
pop
and
jge
add
in
fdivs
ficompl
loop
mov
ret
sub
cwtl
mov
dec
inc
xor
mov
sarl
adc
lods
loopne
inc
jne
cwtl
clc
cmp
push
mov
aad
push
xor
and
cld
lcall
outsl
mov
sbb
or
movsb
add
jno
pop
bound
fdivrp
mov
mov
test
xchg
xchg
lods
aas
adc
add
repnz
xchg
xchg
inc
lcall
dec
jge
sbb
inc
adc
cmp
jbe
sbb
lahf
mov
mov
inc
pop
jbe
sti
fldl
sub
or
jno
jne
sbb
cmp
hlt
daa
ss
dec
decl
rolb
sbb
mov
xchg
mov
int3
push
pop
fdivs
repnz
xbegin
imul
sahf
sbb
out
xchg
in
dec
scas
push
add
test
jmp
arpl
push
mov
icebp
inc
mov
pushf
ljmp
sahf
in
lods
pop
loope
mov
fldt
es
pop
sbb
sbb
pop
movsb
jle
pop
add
fbld
out
xchg
es
push
icebp
dec
decl
xor
in
mov
aad
push
jmp
bound
pop
cmp
jo
xchg
dec
jge
mov
sbb
jne
fbstp
sbb
int3
mov
cmp
rcll
arpl
jge
shll
cwtl
adc
mov
or
sub
jp
or
and
mov
clc
xchg
xchg
mov
or
cmp
sub
mov
adcl
jmp
xor
pushl
frstor
test
insb
or
fdivrp
out
test
inc
les
mov
lret
stos
sbb
dec
jnp
add
xchg
stos
mov
dec
push
push
cmp
sti
push
mov
pusha
or
cmp
aad
cmp
mov
sbb
orl
stc
lret
stos
adc
jge
jg
or
jne
test
or
mov
dec
test
je
jp
stos
cmpsl
sub
sbb
dec
in
jmp
jne
push
imul
test
imul
mov
mov
push
lret
jle
jne
add
sbb
cs
inc
cmp
cwtl
jae
pop
jae
aaa
lock
stos
imul
int3
iret
cld
mov
sub
adc
sub
xchg
jb
xchg
mov
dec
inc
pushf
cmp
mov
xlat
sub
sti
xchg
cmovae
ss
inc
push
sbb
xchg
sbb
cmp
add
loope
push
sti
add
inc
sub
xchg
in
and
ja
cmp
scas
pop
jno
lahf
lds
add
mov
lea
cmp
mov
icebp
sahf
xchg
lea
xchg
fwait
test
jp
fwait
mov
sbbl
push
mov
int
cwtl
xor
xor
stos
mov
push
flds
loopne
bound
popf
pop
ljmp
pop
jge
into
loopne
insl
xor
dec
sbb
testl
adc
pop
dec
dec
or
fildll
out
lcall
int
nop
xchg
or
jae
jae
xchg
pop
loopne
test
jo
insl
fsubrs
xchg
in
loope
aam
loop
mov
addb
sbb
jns
cs
mov
dec
cmpsl
add
imul
and
mov
dec
push
push
addr16
xor
mov
repz
jne
pushf
cmpsb
mov
mov
dec
adc
add
lahf
mov
ds
jae
lahf
jo
in
xchg
jge
mov
and
ljmp
rolb
scas
push
ss
mov
jmp
pop
das
pop
mov
fistpl
or
lds
inc
adc
outsb
inc
mov
nop
popa
mov
mov
out
inc
shrl
sbb
test
sbb
shl
cmc
sub
mov
fucomip
lods
loopne
out
jbe
and
pop
aaa
mov
mov
push
es
neg
mulb
mov
push
mov
ja
nop
ret
or
fldcw
or
push
ret
jecxz
add
mov
or
or
int3
sbb
roll
push
fdivp
mov
sbb
pop
stos
push
xor
adc
adc
sub
test
scas
fidivl
adc
inc
sbb
pop
cmp
in
js
sahf
mov
or
sarb
jnp
xor
sub
mov
mov
das
repnz
mov
imul
push
adc
aas
add
push
and
sbb
or
xor
and
aad
jp
mov
dec
in
jecxz
rclb
add
dec
arpl
push
test
pushf
jnp
int
cld
dec
fnsave
mov
pop
and
inc
and
cmpsl
sbb
dec
ljmp
jae
jns
test
sbb
popf
cltd
pop
scas
sbb
cmc
pop
sub
mov
adc
popf
xlat
pop
adc
or
dec
shl
adc
xchg
int3
jns
in
push
cld
sbbl
cmp
aas
jo
pop
inc
cmp
jns
mov
leave
dec
stc
xor
push
push
rcrl
jns
sub
insl
cwtl
mov
xchg
fisubrl
addr16
dec
xchg
inc
adc
loop
mov
in
sbb
push
cmp
in
dec
fldt
jmp
sti
arpl
cmp
add
mov
test
cmc
xchg
pop
mov
repnz
cmc
cmp
ret
push
test
inc
cmp
pop
push
shlb
movsb
out
cmc
xchg
lret
ljmp
add
dec
xlat
ror
mov
inc
push
ret
fs
xchg
mov
mov
fcomi
bnd
sbb
sub
int3
imul
jmp
popl
lods
scas
out
data16
popl
pusha
mov
addl
ljmp
push
pushf
dec
jns
jns
clc
out
and
sbb
lret
cmpsb
and
jb
test
gs
xor
push
dec
jno
flds
dec
pop
push
adc
push
fwait
addr16
loop
xor
ja
push
mov
mov
stos
rolb
and
push
mov
lods
jge
or
mov
aam
sub
movsl
loop
rcll
cltd
pop
std
out
sub
xlat
in
repz
inc
clc
repz
addb
fcomps
pop
jle
lcall
dec
pusha
jl
jecxz
loope
sbb
jle
arpl
imul
lret
daa
pop
insb
jge
dec
xchg
dec
outsb
daa
sub
stos
jle
inc
mov
pop
fld
outsb
outsb
addr16
in
push
push
pop
repz
into
cmc
cltd
sbbb
push
or
test
mov
inc
jmp
call
xchg
sbb
mov
and
pop
nop
push
cmpsl
lret
jl
jns
out
ljmp
push
out
sbb
adc
and
pusha
pop
mov
sub
cmp
pop
add
or
test
js
movsb
je
sub
dec
std
insl
pop
mov
out
and
imul
fbld
lods
scas
adc
adc
repnz
enter
imul
rorl
mov
push
adc
test
movsl
cmpsl
decb
std
xchg
adc
add
lods
idivb
or
sub
inc
or
call
mov
mov
adc
xlat
ror
mov
mov
sub
mov
jge
mov
dec
sahf
imul
pop
mov
ds
mov
mov
xchg
xchg
loope
dec
add
push
dec
inc
pop
push
pop
outsl
xchg
cmp
pop
or
aad
add
xchg
and
lahf
push
call
lcall
in
test
test
xchg
sbb
movsl
mov
hlt
inc
mov
pop
and
push
pushf
sbb
hlt
cmpsl
aam
int3
and
mov
mov
push
ja
idivb
mov
dec
and
jl
push
mov
and
divb
in
sub
aas
and
ds
adc
outsl
push
in
iret
xor
ret
cmp
xor
jae
jmp
rorl
movsl
mov
stc
dec
in
mov
jb
repnz
add
sbb
and
pop
hlt
push
mov
fimull
sbb
push
fstpt
orb
xor
push
xor
sbb
std
mov
sub
or
dec
mov
sbb
xchg
in
mov
jmp
xchg
cs
mov
int
popa
cmp
and
js
loopne
push
aaa
in
clc
add
adc
adc
jge
inc
ret
stos
mov
into
loopne
bnd
es
mov
ja
lcall
push
mov
fs
and
cwtl
insl
jle
test
add
sbb
push
es
je
movsb
stos
dec
dec
mov
xchg
or
stos
push
addr16
mov
dec
adc
lods
xorl
mov
mov
aaa
mov
outsl
or
test
push
jns
sub
aaa
out
std
adc
push
loop
sbb
mov
jae
movnti
jbe
jge
pusha
nop
push
xchg
call
aam
iret
popf
pop
pop
jecxz
push
inc
sub
lret
jo
scas
fs
adc
mov
lds
cmpsl
cmp
jle
inc
or
stc
rcrb
xor
imul
mov
repnz
adc
mov
mov
and
enter
jb
stos
mov
leave
mov
cmpb
or
mov
outsb
jbe
shlb
sti
jecxz
lods
jne
xchg
and
testl
clc
nop
fnstenv
cmp
inc
lret
push
sarb
mov
scas
or
gs
mov
adc
add
or
inc
js
add
push
mov
adc
ret
adc
or
cld
mov
in
lret
jae
lea
mov
add
push
lds
leave
test
cmp
mov
jne
pop
and
call
xchg
dec
mov
mov
ja
jmp
aam
mov
cmp
scas
fcomps
outsl
jecxz
shl
xor
fs
lods
mov
scas
in
xchg
jmp
push
hlt
xchg
fisttpll
jp
fadds
mov
cmp
jle
sub
loope
cmpsb
dec
dec
cmpsl
je
inc
scas
std
pop
rclb
insb
scas
out
xlat
mov
inc
or
mov
rol
jmp
xchg
pop
leave
or
subl
inc
adc
push
les
xorl
lods
adc
mov
aas
pop
fs
sahf
int
push
call
or
inc
jg
test
jnp
push
mov
fs
push
cs
lods
fcoms
shl
leave
pop
pop
push
mov
jge
test
sub
mov
cmc
cmp
cmp
enter
push
orb
shl
pushl
mov
ja
in
inc
xor
pop
push
pop
mov
jecxz
pop
ret
stc
xor
mov
stos
bound
adc
xchg
stos
in
sbb
jge
inc
out
xor
lods
rcll
push
cs
das
imul
cltd
xchg
cmp
xor
lock
jg
push
pushf
mov
rcrl
movsb
push
cmp
cld
pop
push
sub
mov
cmpsb
mov
push
push
lods
mov
push
stc
ds
iret
dec
idivb
std
fs
leave
mov
mov
fcom
jp
and
mov
xlat
xchg
ljmp
cmp
sub
or
xor
bound
push
xor
mov
xchg
jae
dec
jl
neg
dec
cmp
notl
aas
mov
test
daa
sbb
jl
icebp
incl
in
popa
sarl
pop
sbb
repz
test
mov
call
outsb
sub
test
shlb
push
adc
xor
lahf
icebp
cld
out
mov
pop
loop
cmp
sbb
out
lock
xor
popf
inc
out
sub
daa
aas
es
xchg
and
sbb
jg
sar
and
xor
stos
mov
ja
jmp
xchg
mov
mov
roll
jnp
jns
cmp
or
push
pop
insl
sbb
loop
ret
cs
pop
les
dec
imul
imul
incb
cmc
cmp
fimuls
cltd
pop
mov
xchg
gs
flds
add
dec
movsb
lret
outsl
push
xor
xlat
repz
and
int
mov
or
std
push
xlat
leave
int
push
popa
jnp
aad
dec
rclb
xchg
push
mov
mov
and
or
dec
testl
sahf
xchg
aam
and
push
mov
pushf
and
xor
bound
test
xchg
sub
shlb
je
sti
sbb
dec
shll
aad
sbb
cmovl
mov
incb
dec
push
dec
or
push
lds
stos
adc
mov
adcl
or
mov
pusha
and
mov
jb
fldt
lds
in
fs
mov
popa
and
std
lods
popf
push
pop
add
movsl
cmc
cs
shrb
bound
mov
dec
cmp
jmp
dec
cltd
inc
jnp
ds
lds
cwtl
dec
xchg
adcb
daa
or
mov
sub
push
xchg
dec
mov
adc
rcrb
repz
insl
pop
pusha
leave
outsb
jp
cltd
xor
mov
into
daa
mov
scas
mov
popa
stos
cli
sahf
int
or
sbb
js
add
jae
mov
jnp
lock
or
imul
scas
jmp
pop
jmp
cs
aas
inc
fisubl
sbb
jmp
shll
fsubl
ss
jno
inc
mov
movsl
testl
cmp
ljmp
adc
insb
bound
inc
ficomps
test
dec
or
sub
xchg
stos
in
imul
lcall
je
pop
pop
jo
or
leave
dec
dec
sbb
inc
mov
push
push
mov
loope
je
icebp
cltd
xchg
push
mov
mov
mov
aas
jnp
lods
cmp
cmpsb
mov
add
inc
sahf
mov
cmp
mov
inc
and
test
mov
clc
jbe
cs
adc
cmpsl
loope
dec
add
pop
push
xor
sbb
fstl
into
push
or
sub
inc
pop
pop
add
enter
testb
and
mov
push
je
dec
push
add
sub
mov
mov
test
loope
clc
in
cwtl
dec
fwait
cs
aas
fcmovnu
out
cmp
mov
xchg
sbb
int
orl
nop
cs
inc
aaa
sahf
cmc
jb
mov
add
ret
push
adc
fstpt
push
insb
push
jg
clc
push
ds
aaa
inc
mov
jle
movsb
mov
aas
call
cmp
gs
popa
push
insb
lds
std
xchg
mov
xor
mov
lret
xchg
or
out
test
imul
xor
mov
testl
sbb
mov
js
adc
popa
ja
stos
xlat
mov
data16
lock
adc
out
imul
ret
dec
and
std
inc
jmp
packssdw
fcmovnu
aam
movb
or
cwtl
or
flds
testl
dec
insb
or
out
mov
and
sub
sti
out
add
cvtps2pi
dec
jae
push
sbb
ljmp
in
cwtl
loop
pushf
insb
inc
int
add
in
dec
lret
adc
xchg
mov
icebp
push
sub
mov
mov
xchg
arpl
dec
jmp
stc
rolb
test
sbb
xchg
push
aas
jnp
cmpsl
push
cmp
pop
jbe
jnp
or
loop
out
outsl
sti
stos
ficomps
sarb
fidivl
push
test
aaa
adc
fcmove
push
xchg
fldt
cmpsl
cmpsb
scas
push
or
dec
pop
xor
imul
out
ficoml
jne
or
sahf
and
sahf
roll
test
or
dec
push
cmpl
cmp
sub
mov
sub
out
fisubrs
outsb
mov
inc
mov
pop
pop
xchg
roll
inc
xor
mov
lods
pop
cwtl
idivb
ja
adc
insb
or
andl
ds
scas
or
jo
mov
ja
pop
pop
and
push
or
xchg
or
pop
lret
xchg
sahf
sub
outsl
inc
daa
gs
lret
or
mov
mov
in
sbb
inc
jp
in
dec
inc
pop
sti
sbb
arpl
cli
jg
in
mull
push
xor
sub
test
and
push
int3
adc
sub
testb
out
cmp
add
loopne
cmp
rolb
mov
sbbb
mov
mov
jg
mov
test
sahf
sbb
mov
addr16
mov
lret
pop
loope
jp
repz
cmp
push
aad
xchg
sub
aad
pop
out
leave
dec
notb
flds
mov
or
in
test
mov
in
arpl
mov
mov
adc
and
sub
inc
pop
or
pop
enter
or
mov
mulb
lods
cmp
cmc
sub
xor
mov
test
test
mov
jb
into
inc
mov
push
out
in
dec
leave
push
cltd
pop
pusha
jne
lcall
fcoms
and
pop
fwait
ss
sbb
test
shlb
inc
sub
sub
or
xor
mov
or
xchg
scas
outsl
mov
lret
arpl
aaa
jne
push
lods
mov
mov
and
dec
fucompp
xchg
call
adc
bound
cmp
pop
outsl
cmpsl
dec
inc
out
inc
cmp
adc
inc
mov
mov
mov
roll
mov
mov
test
and
rorl
jl
leave
outsl
jmp
sbb
pop
cwtl
loope
jo
fisttpl
mov
cmp
out
or
push
loope
mov
std
xchg
or
xor
pop
sbb
lcall
cmp
or
mov
pop
arpl
sbb
loope
push
lcall
enter
stc
dec
fnsave
mov
in
and
repnz
repnz
notl
xchg
mov
inc
les
inc
xor
push
cmp
mov
iret
and
or
jae
imul
jl
cmp
sub
xor
daa
loope
lods
dec
into
xor
dec
mov
xchg
hlt
pop
loopne
mov
in
xor
or
cmc
jns
add
mov
pop
out
lock
jp
test
push
negb
dec
repnz
mov
dec
sub
push
and
popf
lods
movsl
add
lret
outsl
std
div
inc
sahf
insl
sti
mov
mov
pop
sub
int3
inc
sbbl
xchg
xor
lock
cmp
jae
fistps
add
add
inc
inc
bound
aas
cwtl
xchg
xchg
sbb
insb
adc
clc
push
push
jae
insl
in
xchg
cmpsb
mov
repnz
pop
inc
xlat
xchg
mov
pusha
inc
mov
add
mov
jns
mov
mov
pop
icebp
and
ret
ret
jmp
cmc
and
jge
popa
xlat
outsl
loopne
lcall
in
pushf
movsl
stos
and
pop
inc
cli
dec
test
out
pop
push
adc
push
enter
jge
add
push
cmp
pop
dec
std
sub
dec
ljmp
cltd
je
inc
push
push
enter
rcr
jmp
mov
movsl
sbb
mov
jno
sbb
and
imul
or
add
and
mov
or
sbb
cmp
xorl
iret
adc
jg
pop
mov
sub
fimull
mov
pusha
sbb
mov
push
cmp
inc
imull
pop
cltd
std
pop
loope
mov
jns
leave
cltd
out
mov
mov
cmp
and
lret
lcall
nop
outsb
pop
ficomps
add
inc
mov
or
data16
ss
sbb
and
dec
inc
pop
push
mov
iret
push
repnz
sbb
mull
jle
movsl
test
inc
roll
outsb
es
aad
daa
jmp
shll
push
jecxz
cmp
xchg
add
jp
jp
cmp
and
leave
dec
ljmp
shll
loopne
fstl
and
pop
mov
push
out
mov
psllw
outsb
pop
add
xorb
es
pop
pavgb
data16
out
and
ret
mov
mov
sub
ds
repz
es
adc
jecxz
or
movsb
jnp
out
add
sub
jge
loope
push
je
insl
cmp
fwait
sbb
sahf
jp
sub
push
push
out
jp
hlt
test
popa
jge
sbb
sbb
ret
movsl
aas
pusha
lahf
jle
mov
ret
cmpsb
test
sbbb
and
jne,pt
jmp
stos
cli
and
pop
imul
and
jl
mov
push
call
ffreep
lock
jb
cmp
insl
ret
mov
icebp
in
ja
int
push
out
movb
fstps
add
inc
icebp
scas
jne
mov
mov
adc
lods
jle
mov
cwtl
call
add
test
rcrl
incl
insl
cmp
mov
push
mov
hlt
pushf
sub
xchg
jmp
rorl
shlb
fistl
sub
lods
inc
cwtl
imul
arpl
aaa
dec
fiaddl
rorb
push
mov
jne
and
xchg
mov
push
lret
add
mov
je
cmpsb
hlt
cmpsb
nop
sub
out
out
add
fcomps
inc
ret
mov
lods
add
lods
sbb
pavgb
or
outsb
imul
aaa
mov
pop
lods
aaa
data16
sbb
xchg
dec
in
in
mov
xchg
ds
out
jl
aad
gs
lods
cltd
ret
inc
in
adc
adc
int3
xor
loop
jp
jne
sub
ret
sbb
mov
test
mov
divl
lds
sub
scas
inc
leave
cmp
daa
sbb
cmp
jl
inc
ret
jne
gs
in
jmp
push
sbb
inc
insl
lret
rcll
les
ja
popl
imul
repz
adc
fistpll
out
mov
push
popa
sbb
in
add
cmp
dec
push
dec
pop
imul
je
test
push
pop
daa
fidivs
and
jl
ljmp
mov
mov
mov
mov
pusha
dec
xchg
jae
dec
add
sbb
inc
sti
xchg
pop
dec
xchg
sbb
mov
and
popf
cmp
or
into
lods
icebp
adc
sub
stos
jge
nop
cld
jno
fdivs
inc
xchg
loop
aam
jbe
out
test
bnd
cs
fcomps
bound
xchg
push
shll
lods
mov
mov
pop
mov
aad
mov
in
and
in
push
andb
jns
divl
mov
pop
xor
out
pop
pop
test
sarb
out
scas
mov
cmp
sahf
lcall
cmp
into
jae
push
sbb
lret
daa
jmp
sbb
pop
les
int3
sub
sbb
ret
icebp
xor
adc
jg
in
add
bound
sub
or
sbb
shll
fadd
mov
addr16
cmc
jae
std
insl
pushl
sub
lcall
sar
and
dec
fildll
sbb
sub
xchg
sbb
push
in
dec
je
sbb
popa
iret
fistpl
add
clc
adc
das
jns
push
inc
test
mov
cmp
mov
scas
pop
jecxz
rorl
stos
movzwl
sti
dec
fcoml
push
pop
je
jle
repnz
orl
and
and
ljmp
adcb
xorl
add
mov
add
mov
xor
cmp
iret
dec
mov
jle
repnz
out
rcl
adc
push
mov
mov
loopne
sub
aaa
sub
add
dec
mov
and
das
call
rcrb
jns
sub
data16
nop
add
sbb
iret
inc
and
imul
and
mov
bound
loopne
mov
jns
aaa
aaa
stc
test
mov
fstpl
xor
jbe
dec
adc
repz
adc
inc
push
xor
push
dec
lcall
xchg
sarb
jl
jmp
sub
int
push
adc
adcb
pop
pop
push
call
and
rclb
and
sbb
dec
sub
sub
fadds
ss
ret
orb
aas
enter
cmc
jbe
pushf
or
sbb
or
fiadds
pushf
xchg
cmp
fs
fs
sbb
fbld
mov
cmp
sub
daa
repnz
int3
inc
inc
cs
ret
imul
cwtl
add
xchg
push
mov
cli
add
stos
mov
push
fs
xchg
lock
adc
xchg
pop
mov
xor
test
gs
hlt
lds
fidivrs
mov
aaa
and
push
sub
add
repnz
add
js
lods
fabs
pop
lods
adc
inc
push
add
mov
aas
push
inc
sbb
and
out
xchg
push
lods
iret
xorb
xchg
cli
mov
jnp
dec
cmp
xor
mov
int
dec
xor
orb
cmp
push
adc
loop
rcrl
mov
insl
push
xor
aam
testl
sub
shlb
jp
inc
aad
stc
es
push
jmp
mov
stc
cmp
mov
lds
mov
dec
addr16
adc
and
sub
mov
sub
decl
pop
neg
imul
sahf
xchg
in
mov
shrb
add
je
fucomi
lods
mov
and
dec
xchg
dec
leave
pop
repnz
mov
in
clc
pop
call
jno
jmp
test
daa
mov
daa
cltd
or
dec
mov
loope
cwtl
mov
nop
xchg
sbb
xor
ds
jl
in
daa
jo
stc
stc
fimuls
pop
xor
gs
mov
out
lahf
adc
lds
mov
xchg
jge
xor
shrb
and
int3
pushf
jecxz
mov
pushf
or
jne
repz
fs
mov
pop
adc
inc
jbe
mov
lea
pusha
mov
test
push
lea
sub
cwtl
push
fbstp
cwtl
les
stos
cmp
repz
or
jecxz
incb
add
fidivrl
lcall
es
mov
fwait
rcll
dec
jmp
pop
push
push
fisttpl
push
cmp
pop
cmc
push
or
ja
jbe
or
and
lods
and
out
rolb
incb
pop
fnstsw
dec
cwtl
pop
jge
add
and
sbb
jle
cld
or
out
pusha
push
add
mov
and
repnz
bnd
ja
movsb
inc
sti
jo
neg
mov
hlt
lcall
testl
push
fistps
out
ss
sbb
mov
js
sbb
je
xchg
push
or
pop
mov
xor
arpl
movsl
pop
outsl
or
aaa
loopne
cmp
fsubl
out
xchg
sub
pop
push
insl
jmp
adc
cmpsb
outsb
sbb
scas
inc
cmpsl
jbe
or
sub
push
je
dec
stos
popf
pop
jge
inc
mov
xchg
pop
pusha
ljmp
mov
out
mov
and
dec
inc
repz
inc
sbb
rcll
lock
mov
jecxz
mov
clc
cli
pop
js
jae
dec
out
mov
inc
movntps
decb
punpcklbw
jle
mov
xchg
aaa
das
daa
jg
jg
adc
test
xchg
fdivl
pop
dec
and
imul
push
rcrl
imul
mov
and
clc
pop
xchg
mov
loop
mov
mov
pop
inc
ficomps
in
mov
xchg
sbb
mov
imull
in
addr16
push
mov
mov
mov
push
mov
mov
mov
das
add
and
fdivs
jns
or
fstpt
and
test
push
add
push
loop
mov
sub
dec
xor
pushf
sub
cmp
mov
movl
add
xchg
xchg
add
xor
fstl
js
add
push
mov
repnz
push
sub
mov
out
movsl
dec
out
mov
mov
pop
push
sbb
cltd
outsb
and
test
jnp
sbb
push
push
out
jbe
jle
mov
adc
xchg
mov
js
mov
clc
les
mov
cmp
pushf
scas
mov
outsb
cs
pop
fcomps
inc
xchg
cmpsl
mov
mov
or
negl
and
test
clc
into
fisttps
adc
out
cli
sarl
fs
cmpsb
lret
andb
cmpsb
pop
outsl
jns
imul
inc
jo
cltd
js
jg
pop
adc
lock
and
fstps
mov
mov
sbb
std
sbb
xor
lret
push
mov
jae
sbb
and
xchg
loope
les
scas
fsubrl
movsl
or
push
xchg
and
daa
cltd
scas
push
xor
xor
xor
inc
push
xchg
test
loope
xchg
imul
jo
cwtl
push
iret
std
xchg
popf
and
and
rcrl
sti
fs
ss
mov
cmp
pop
cmpsl
add
push
sub
mov
pushf
cmp
pop
xor
push
aam
cmp
js
sbb
xor
iret
or
fildl
ficomps
gs
addr16
sbbb
clc
arpl
aas
movsl
push
ja
imul
xchg
bound
and
shlb
mov
pop
lea
call
cmpl
xor
lds
mov
inc
mov
enter
test
jb
xor
push
and
sbb
xor
sbb
xchg
jno
cmp
adc
jp
fidivl
idivl
loopne
pop
xchg
mov
xchg
adc
js
lahf
mov
or
into
inc
lahf
insl
into
xor
lahf
mov
outsb
rolb
je
mov
dec
xchg
push
pop
fdiv
push
sub
mov
xchg
add
out
out
mov
adc
out
and
adc
cltd
dec
mov
adc
shlb
imul
add
xor
mov
mov
ds
push
nop
stos
icebp
test
out
int3
data16
lret
divl
outsb
xchg
mov
jno
rcrb
cmpsl
test
mov
push
sbb
jne
jge
rol
cmp
dec
scas
inc
int3
dec
out
and
xchg
lahf
sub
jmp
mov
or
insl
mov
ret
xchg
mov
daa
leave
inc
or
je
mov
pop
mov
iret
daa
or
push
push
jle
bound
movsl
pop
sti
inc
pop
jg
rol
jne
jge
sbb
hlt
push
xchg
push
nop
leave
lods
cs
rorl
mov
cli
ljmp
insl
jns
adc
jno
xchg
fildll
rolb
scas
in
ret
jae
dec
and
xor
mov
jae
or
sub
aas
add
inc
xchg
sub
cmp
lret
out
lret
rcr
sub
sbb
sub
pop
pop
nop
mov
mov
jns
mulb
add
shlb
adc
cmp
dec
sub
test
popa
out
js
jle
cmpsl
push
std
adc
pop
push
out
testb
xchg
bound
xchg
movsl
cltd
sub
ret
sbbb
call
rcrl
shr
fcmovb
jo
xchg
aad
adc
mov
xor
fidivs
or
push
inc
jg
sub
pop
cmp
fisttps
es
jno
imul
in
stos
inc
sbb
add
test
pusha
ja
pop
scas
cmp
pushf
dec
shr
jnp
xchg
daa
pop
mov
push
and
add
outsl
nop
mov
pop
xchg
or
mov
pop
out
mov
pop
ss
sarb
xor
shlb
and
inc
pusha
push
cmc
imul
mov
nop
sbb
ja
lcall
dec
popf
jo
fisubs
inc
out
xorb
imul
jmp
mov
lcall
insb
aad
ret
in
scas
or
jl
xor
and
or
nop
sub
repnz
hlt
pop
bound
jp
adc
xor
dec
mov
add
cmpsl
and
xor
add
rcll
les
or
movsl
shrb
mov
cltd
nop
mov
rcll
push
out
rcl
lods
data16
or
decl
repz
cmpsl
and
loope
sub
or
push
decl
ss
pop
fildl
cltd
sarl
shlb
inc
sbb
mov
xchg
in
jmp
jae
sub
fisttpll
cltd
out
mov
pop
ljmp
cmp
add
inc
mov
fildll
or
movl
sub
jmp
sbb
mov
cltd
call
adc
sahf
outsb
mov
clc
push
into
fdiv
dec
inc
cltd
in
stos
movsl
sbb
insl
cmpsb
lea
movsb
lds
pop
jmp
mov
nop
out
jle
xor
pop
fs
icebp
add
or
cmp
mov
mov
imul
insb
sbb
add
push
outsl
imul
push
jmp
add
in
out
pop
in
jno
sub
jle
mov
cltd
cmp
fstps
or
dec
imul
adc
jbe
mov
jbe
push
cli
cmp
popf
mov
mov
fiadds
xchg
mov
sti
jl
sub
pop
xor
ret
push
mov
iret
mov
cmp
pop
fisubs
aaa
outsl
test
xchg
jno
clc
push
fisttpl
jns
daa
test
mov
rorb
popf
push
mov
jl
inc
push
dec
push
push
rorb
and
dec
sbb
or
lahf
push
add
sahf
dec
or
lret
aas
jge
push
sti
mov
movsl
jns
cli
adc
cmpsb
aad
lods
jno
sub
lret
sbb
andl
ret
pop
pushf
xchg
test
or
rorb
dec
scas
and
pop
addps
cs
jne
mov
xor
xlat
mov
pop
ret
jo
and
xchg
adc
into
xor
shlb
aam
inc
lret
fsubrp
outsl
cmpsb
addr16
popf
scas
sbb
sbb
jmp
cmp
pop
mov
sub
jne
les
cld
rorb
aas
inc
stos
pusha
sbb
xchg
jg
in
mov
jne
add
loop
xorb
fadd
and
pop
and
test
in
ret
sub
or
in
pop
das
lods
andb
mov
dec
and
cmp
jge
dec
mov
push
std
mov
leave
push
pop
stc
fwait
jae
pop
jg
add
add
jns
jae
fwait
and
arpl
pushf
or
movsl
push
mov
jbe
data16
sahf
dec
shlb
mov
loope
jb
push
mov
add
shr
adc
test
or
jecxz
jo
ret
jno
pop
aas
xchg
pop
mov
and
cmp
scas
sti
into
scas
lods
and
arpl
sahf
push
popa
es
sarb
stos
or
stc
cmpl
xchg
adc
ljmp
cwtl
mov
scas
in
sti
mov
arpl
adc
fisubrl
sub
mov
xor
cltd
add
add
push
cmpsl
pop
sar
mov
notl
sti
repz
adc
in
xorl
and
stos
xchg
jbe
inc
in
ss
dec
mov
pop
out
mov
pop
dec
cmc
rorb
lock
xor
test
sahf
aaa
fcompl
xchg
xor
inc
add
and
rcrb
sub
inc
jmp
and
fbld
and
push
push
movsl
push
ljmp
sbb
ret
cmp
insl
dec
add
sbb
hlt
insl
xchg
in
push
cmpsb
pop
data16
cmp
pop
push
bound
and
mov
jns
mov
scas
sub
add
rcrb
pop
xor
mov
sbb
xchg
cmp
addr16
xor
mov
scas
stos
add
mov
sub
adc
das
sbb
and
ja
lds
push
push
jle
bound
xlat
push
push
fldcw
inc
cmp
out
fdiv
add
mov
and
fimull
sub
and
popf
add
pop
rcll
es
fcmovu
insl
nop
or
je
aas
xchg
pop
xor
add
ret
adc
pop
xchg
cmc
js
rcl
mov
cld
mov
cmp
pop
xor
lea
jp
scas
mov
sti
push
pop
mov
xlat
sub
imul
mov
pusha
ja
stos
or
add
sub
pop
into
add
sub
in
repnz
cld
xchg
cmp
mov
push
pop
sbb
out
into
lods
jmp
sar
pop
sbb
or
test
cwtl
bound
xor
xchg
iret
dec
pop
mov
popf
fcomps
jb
mov
jbe
inc
out
daa
outsb
cmp
clc
jg
xchg
inc
pop
adc
mov
rclb
out
push
lods
icebp
dec
sbb
jns
jmp
aam
mov
repz
xor
sbb
movb
cmp
mov
lods
jl
stc
aaa
push
scas
les
out
xor
sub
or
js
es
xchg
dec
mov
in
js
add
int3
cli
inc
mov
in
and
in
ja
stos
repz
aam
and
jle
cld
xchg
mov
filds
ss
div
lods
test
outsl
out
jno
push
loopne
sbb
xlat
cmp
mov
addr16
aaa
mov
push
loop
faddl
xchg
clc
mov
icebp
mov
and
xor
js
les
push
dec
into
mov
xchg
jg
inc
ret
mov
fbld
stos
jnp
divl
bound
jecxz
nop
leave
dec
push
movl
mov
mov
outsb
xchg
outsb
jbe
dec
daa
mov
fmul
testb
stos
mov
sbb
and
add
xchg
mov
dec
and
inc
xchg
cld
call
push
sbb
mov
push
repnz
xchg
stos
push
fs
adc
mov
jb
insl
jecxz
pop
xchg
pop
mov
pop
or
pop
jnp
fisubrl
fsubrl
adc
sub
pop
out
pop
mov
lock
xor
data16
subl
loop
sub
test
mov
add
pop
mov
movsl
shrb
xchg
inc
xor
inc
bound
push
pop
adc
cmpsl
push
xchg
add
test
lds
fs
cmpsl
lock
and
shlb
je
add
mov
test
test
push
mov
nop
cli
sarl
xchg
mov
cmpb
jo
loope
xor
out
fidivl
push
push
test
adc
mov
std
fldl
or
sub
subl
xchg
cmc
adc
in
fiadds
inc
jo
sbb
mov
adc
xchg
scas
jae
mov
in
inc
int3
xor
lds
adc
int
mov
pop
jecxz
js
ss
roll
stos
jp
stos
jne
out
cmp
sahf
stos
ror
orl
sub
imul
outsl
int
sbbb
mov
rcll
jg
pop
mov
sbb
rcr
rcrl
sti
cmp
inc
dec
repnz
out
jne
push
push
pop
inc
push
sub
sti
cltd
and
into
scas
imul
add
and
popa
mov
sarl
xor
cltd
divb
xchg
add
neg
mov
pop
xchg
xchg
stos
jmp
movsl
dec
cmp
xchg
test
sahf
lock
rcll
lcallw
iret
outsb
mov
sti
mov
ss
xchg
shl
fwait
gs
scas
ljmp
cwtl
shl
es
push
imul
orl
shl
mov
mov
fldt
inc
ds
pop
add
sbb
add
test
cmpsb
cmp
gs
f2xm1
cmp
xchg
dec
inc
cwtl
mov
pop
into
xchg
rcll
aad
sub
popf
hlt
arpl
jns
push
add
inc
les
test
cwtl
out
inc
icebp
xchg
clc
mov
inc
rcl
ret
dec
shl
fidivrl
mov
dec
fldcw
mov
scas
bound
aaa
cli
inc
imul
push
push
mov
or
adc
testl
icebp
outsb
add
mov
lea
adc
pop
cltd
out
or
ficoml
jno
cmp
out
mov
sahf
fdivrp
push
and
faddl
pop
inc
pop
inc
aam
ljmp
xchg
dec
jnp
or
cmp
xor
jmp
mov
sub
adc
push
insb
dec
push
in
scas
jle
pop
jnp
cmc
cmc
int
add
sbb
cmpb
loope
cmpsl
mov
sarb
dec
imul
loopne
push
jbe
lcall
sub
xor
fistpll
jnp
mov
sub
push
test
insb
xor
mov
sbb
xchg
xor
mov
cmp
adc
push
lods
pop
push
popf
push
sub
sub
jg
and
or
out
or
flds
push
jbe
pop
cld
cmp
pop
test
mov
cld
jnp
inc
add
stos
push
lods
jle
jle
sarb
jae
fisttpll
bound
sub
sub
lret
cli
push
jno
xor
dec
cli
leave
xor
mov
inc
and
clc
pusha
lds
test
cli
rorb
aaa
daa
inc
mov
xchg
and
daa
repnz
adcb
mov
dec
fadd
cs
xchg
or
xor
out
push
cmp
add
adc
sbbl
sbb
pop
je
push
clc
int3
or
inc
lock
das
testb
ja
or
das
stc
fistl
sti
sbb
fnsave
lret
mov
xchg
push
outsb
pop
xor
or
pop
inc
lret
xchg
std
or
add
repnz
mov
cmp
pop
movsb
push
cmp
pop
cmc
aas
lcall
cmc
fwait
cmp
jecxz
into
or
and
or
subb
xlat
icebp
or
sbb
add
sub
pop
test
xor
jmp
ror
mov
stos
loop
mov
outsl
sub
out
jnp
push
cmp
out
jbe
jmp
cmc
ret
push
addr16
push
add
jle
mov
sarl
and
cmpsl
xor
xor
ret
rcll
fmuls
mov
cs
daa
push
jbe
mov
aad
es
mov
and
adc
out
iret
imul
mov
aas
sub
js
pop
pop
inc
lcall
xchg
pusha
dec
xchg
std
xchg
lock
sbb
arpl
mov
mov
mov
test
dec
mov
adc
loop
data16
add
xchg
mov
mov
push
ret
mov
sahf
bound
jecxz
fwait
or
mov
xor
inc
xchg
xchg
jg
mov
out
and
cs
mov
push
test
pop
xchg
xor
add
mov
jb
hlt
xor
cmc
ret
dec
mov
or
mov
sbb
dec
dec
outsb
pushf
lahf
adcl
pop
jecxz
std
add
mov
xchg
subl
and
loopne
mov
xor
div
add
shll
orl
fcmove
push
cld
push
add
imul
mov
ret
mov
shrb
es
movsl
rcrl
sub
push
imul
js
cmp
outsl
cmp
adc
dec
test
cwtl
je
fidivrs
in
cli
xchg
jns
jb
mov
and
andl
pop
int
movsb
out
xor
addl
inc
into
into
jecxz
and
stos
cs
mov
mov
scas
dec
mov
movntps
and
mov
push
sti
pop
lds
add
loopne
and
rorb
ds
fiadds
imul
ljmp
into
xchg
sub
test
mov
call
xor
sahf
pop
js
cmpsb
cmp
xchg
or
adc
cmp
or
adc
repz
push
cmpb
movsl
in
and
testl
ret
lcall
dec
pop
sbb
pusha
mov
sbb
loope
data16
movsb
lahf
push
repz
sub
xor
adc
mov
jbe
out
inc
loop
scas
mov
leave
fmull
sbb
pop
cs
push
push
loop
les
insl
jl
out
dec
jmp
mov
cmpsl
pop
enter
int3
push
stos
cltd
mov
sub
lods
pop
popa
leave
xchg
std
push
mov
js
js
push
xor
push
inc
xor
mov
out
sbbb
mov
inc
scas
mov
sahf
mov
inc
mov
loop
bound
inc
into
ret
mov
loopne
add
gs
or
jg
insl
xor
push
shlb
and
add
sub
gs
mov
cmpsl
aaa
cmp
push
negl
jnp
outsl
ror
mov
push
mov
fistpll
fadd
imul
cli
pushf
or
push
or
adc
leave
pop
js
xor
adc
mov
popa
incb
inc
mov
ficoml
ja
adc
js
cmp
iret
les
jge
and
cmc
mov
negb
orb
mov
sbb
shll
out
mov
push
mov
es
inc
xor
inc
push
scas
filds
cs
push
push
push
adc
cmp
jecxz
int
pop
loopne
jae
mov
loop
mov
push
xchg
push
in
sub
movsb
or
adc
fcoml
popa
vpsubusw
aam
popa
pop
jecxz
dec
arpl
pop
push
adc
mov
out
imul
mov
out
xchg
sahf
in
mov
dec
push
std
pusha
int3
rorb
outsl
ret
inc
filds
scas
inc
cmp
insb
cmpsb
test
jmp
pop
cmc
nop
and
ret
enter
testb
pop
and
push
iret
pop
fwait
jne
aas
ret
push
mov
pop
pop
shlb
adcl
jmp
les
or
subl
jbe
cmp
inc
leave
sub
lea
enter
adcb
out
out
pushf
imul
hlt
ffreep
mov
jge
imul
jmp
aad
mov
xor
dec
push
inc
and
mov
lods
icebp
cmpsb
movsl
fwait
orb
notl
sbb
xchg
mov
jge
sub
add
decb
push
jno
fucomp
clc
or
jno
or
jae
cld
dec
mov
mov
loope
imul
mov
int
ret
rolb
sbb
stc
jae
mov
or
xor
and
mov
cli
mov
inc
icebp
xor
mov
jnp
pusha
mul
jae
loopne
and
lahf
jno
cmp
ljmp
xor
pop
or
pop
mov
mov
subb
add
xchg
frstor
decl
incl
xor
aam
jne
sub
mov
lahf
mov
xor
scas
enter
aad
popf
repz
cwtl
ficoms
incb
inc
lods
shrb
adc
mov
pop
fneni(8087
dec
xchg
orb
xchg
xor
dec
pop
stos
lcall
rorl
adc
hlt
cmc
cwtl
inc
push
fsubp
das
adc
mov
mov
sbb
sub
and
loopne
daa
push
xlat
repnz
int3
mov
push
in
add
rclb
notb
pusha
push
jge
pushf
mov
pop
pop
rcll
sbb
scas
xchg
shr
adc
mov
insb
pop
push
inc
addr16
dec
add
pop
jg
inc
adc
sub
mov
inc
je
repz
jl
or
addl
rcrb
lret
shl
in
lock
je
push
mov
ret
cmpsb
lea
cli
pop
mov
in
xchg
cli
rcll
xchg
enter
cltd
sub
jg
enter
mov
in
std
pop
xchg
or
in
aaa
stc
jg
push
jge
add
out
enter
fdivrs
insl
out
ret
mov
mov
cwtl
jg
lds
in
jne
loop
mov
dec
xor
test
test
std
xor
push
adc
rolb
and
jae
xchg
xorl
icebp
xchg
fdiv
leave
shlb
ret
les
call
sub
das
or
cltd
and
fs
scas
cmp
fstps
fwait
adc
arpl
jge
popa
adc
test
mov
mov
mov
sub
sahf
ret
sbb
fistl
xor
inc
into
jo
aaa
xlat
faddl
mov
pop
stos
cld
inc
xor
icebp
sbb
push
and
lods
dec
loop
in
cmpsb
xchg
out
mov
pop
popf
daa
mov
dec
xor
scas
xchg
je
test
xor
xor
jge
xor
push
xchg
mov
inc
testl
sti
add
xchg
pusha
pop
mov
daa
adc
or
mov
xor
inc
push
xchg
mov
arpl
jmp
dec
push
insb
jb
or
cmc
adc
cli
add
xor
int
shll
pusha
jl
popf
push
iret
lods
mov
mov
push
shr
fistpll
cmpsb
imull
add
add
push
stc
inc
xlat
pop
cmpsb
pop
mov
xor
imul
cmp
movsl
dec
cs
and
mov
out
xchg
fimull
lret
jl
pop
or
stos
rorb
into
aaa
xchg
xlat
and
cmpsl
fidivs
roll
sbb
insb
xor
or
jo
rorb
aaa
xor
mov
addb
mov
in
xchg
pop
dec
mov
ss
jmp
out
fidivs
pusha
cmp
mov
dec
cmpsl
pop
dec
mov
mov
xchg
sub
mov
cmpsl
mov
jbe
icebp
rclb
push
push
shll
pop
push
and
test
xor
mov
data16
pop
xor
adc
cmp
inc
imul
push
sub
mov
cmp
xlat
idivb
aaa
jle
leave
imul
cmpb
lods
xchg
aaa
adc
in
dec
jecxz
push
int
nop
cmp
in
or
and
cmpsl
into
jmp
inc
sub
lcall
stos
xchg
fwait
jns
jne
and
out
negb
jecxz
lret
out
mov
sarl
xor
fnsave
shl
pop
push
jbe
xchg
fbld
and
jle
add
idivb
es
mov
or
ret
xchg
mov
insb
lret
sbb
pop
mov
aaa
int3
jb
cmp
stos
pop
pop
pushf
dec
cmc
jle
inc
mov
lret
push
mov
cmp
clc
fisubl
je
bnd
test
xchg
sub
out
leave
mov
pop
pop
push
test
insb
call
or
pusha
iret
dec
jns
sbb
jg
in
mov
out
pop
push
lea
adc
lds
out
popa
jmp
adc
xlat
add
dec
cmp
push
mov
jle
push
mov
fcomps
lods
popf
ret
adc
out
dec
xchg
cmpsl
ret
mov
dec
xchg
and
ss
fisttpl
pop
push
cli
cmpsl
movsl
mov
ffreep
imul
test
fsubl
iret
scas
stos
dec
jge
mov
das
stos
xchg
xchg
cmp
cld
mov
ljmp
or
ficoml
or
cld
inc
and
test
xchg
push
addr16
sub
mov
mov
dec
fdivp
mov
xchg
add
hlt
jmp
cmp
out
cwtl
mov
je
lret
cwtl
add
sahf
add
xchg
gs
push
in
into
dec
inc
adc
pop
rorb
add
call
loop
mov
or
cli
aas
add
dec
or
lock
and
push
sub
jb
mov
adc
fidivs
lret
add
popa
fisubrl
dec
lds
sbb
jl
push
lods
push
stc
inc
xor
fmul
inc
inc
call
or
sahf
cmc
mov
pop
cmp
push
pop
and
mov
pop
inc
bound
or
adcb
cmpsl
jle
adc
stos
cmp
dec
add
jle
jge
pusha
add
imul
dec
fwait
cltd
mov
insl
and
push
sub
or
sbb
xor
hlt
test
jmp
pop
mov
subb
dec
mov
inc
jg
aad
pop
pop
dec
mov
add
mov
mov
fimull
out
xor
jp
lock
aad
sbb
sub
das
ret
jmp
lea
and
lea
bound
lcall
sub
movsb
call
mov
in
dec
mov
xchg
call
pop
or
mov
aaa
pushf
cwtl
jnp
test
hlt
leave
std
mov
scas
mov
mov
and
dec
xchg
aad
mov
xchg
clc
add
cwtl
fstpt
in
push
cwtl
jl
call
loope
inc
sub
ret
ss
icebp
xchg
daa
xchg
pop
mov
cmp
mov
dec
push
push
xchg
fcoml
pop
stos
mov
mov
fisttps
loopne
scas
loop
pop
ds
ret
jnp
das
es
xlat
ret
cmp
xor
jl
ljmp
sahf
jecxz
push
in
dec
inc
fimull
jl
lcallw
out
gs
pop
push
fnstenv
sub
push
scas
lds
pop
jg
fimuls
pop
imul
xlat
repz
sbb
movsl
adc
jle
mov
js
mov
aam
cmpsl
or
pop
ss
je
push
sub
inc
arpl
xor
les
out
mov
mov
cltd
adc
xchg
jbe
or
pushf
mov
shrl
stos
das
mov
rcl
add
pop
sbb
mov
or
imul
je
out
jbe
mov
test
xlat
mov
push
xor
xchg
dec
repnz
loope
add
mov
mov
xor
loopne
jae
sbb
sarb
adc
repnz
lods
shrl
jg
int3
enter
cmp
sub
cmp
sti
push
das
mov
fcmovnb
test
jae
das
pop
mov
sti
scas
mov
mov
adc
adc
and
jmp
cmp
cli
cmp
pop
scas
stos
ds
sbb
push
and
mov
pop
aad
pushf
daa
jno
cld
cmpl
pop
sbb
dec
stc
inc
popa
dec
aaa
sahf
repz
inc
add
fisttpl
rclb
pop
test
fwait
and
lods
jnp
xor
adc
add
xchg
mov
fisttpl
inc
inc
and
mov
lds
int3
and
test
add
dec
jecxz
dec
pusha
ret
leave
loope
lahf
xor
std
outsb
aad
sbb
lret
sbb
sub
addr16
insl
inc
add
daa
ss
cmp
lret
push
mov
mov
cmp
push
outsb
adc
mov
cmp
rclb
inc
mov
dec
sbb
mov
addl
fnstcw
lea
lea
jg
leave
jecxz
sahf
sbb
or
push
es
stc
roll
insb
xchg
fisubrs
jmp
cmp
lahf
testb
add
cld
pusha
aas
gs
inc
and
push
push
loopne
mov
sub
mov
inc
jge
mov
sbb
pop
enter
cwtl
out
pop
aam
mov
notb
mov
push
sub
cmp
imul
fisttps
sti
incb
add
data16
sahf
adc
nop
adc
int
jp
push
and
repnz
ret
dec
mov
sub
cmc
inc
push
dec
push
or
imul
inc
add
mov
pop
popf
mov
pop
ficomps
out
xchg
movb
mov
rcrb
pop
sbb
xchg
jo
addl
mov
fdivs
xor
lea
orb
mov
fnstenv
jge
dec
adc
iret
cmc
xlat
dec
sbb
loopne
mov
jcxz
inc
lcall
pop
iret
js
sbb
scas
mov
dec
lods
mov
stc
adc
test
dec
in
and
in
jno
hlt
jns
out
pop
jno
add
sbbb
push
or
inc
sbb
bound
mov
fdivs
insb
push
popf
pop
xchg
loopne
mov
jns
adc
int3
cmp
push
mov
sbb
pop
xchg
pop
adc
call
shr
je
or
jns
sbb
into
adc
xchg
dec
dec
mov
ret
push
enter
pop
outsl
jbe
ret
sbb
aaa
notl
and
adc
xor
cmc
or
test
mov
inc
in
outsb
or
lret
mov
pop
inc
hlt
js
cmpsl
pop
mov
jp
or
in
std
jbe
pop
pop
and
data16
lock
rol
out
loope
mov
es
or
shlb
imulb
mov
add
test
xor
imul
push
cmc
dec
cmpl
xor
xor
mov
icebp
add
loopne
dec
sub
pop
pop
lcall
subb
ret
jg
sahf
or
mov
inc
fcmove
ficompl
sub
mov
test
sbb
leave
push
repz
call
dec
movsl
data16
sub
in
out
jg
imul
loop
or
into
and
or
inc
notb
sti
xchg
xor
testb
gs
dec
sbb
loopne
xchg
fdivrl
xchg
stos
loopne
mov
sbb
ret
sub
cmp
insl
repz
mov
fildl
daa
movsl
sub
aam
and
jae
push
inc
int3
packsswb
cmpsl
mov
stc
lock
shlb
jae
add
mov
push
dec
mov
data16
std
sub
call
popf
test
jns
lods
movsl
pushf
cltd
mov
out
mov
adc
lea
lret
in
mov
daa
out
hlt
sub
push
pusha
push
xorb
adc
loop
add
or
arpl
lods
scas
lcall
mov
push
fdivp
or
xchg
adc
cltd
mov
xchg
lcall
pop
or
arpl
xlat
adcb
mov
mov
dec
jg
in
dec
in
ret
aaa
push
test
jno
hlt
enter
push
stos
fdiv
sub
mov
jno
bound
sar
xor
mov
sub
cltd
xlat
cmp
sbb
adc
push
push
push
enter
adc
and
dec
in
push
shll
sub
push
imul
xchg
or
or
int3
cmc
test
mov
jbe
xor
add
push
popf
cmpl
push
mov
pop
cmp
out
cmp
jg
and
mov
jne
gs
mov
rcr
iret
js
shlb
push
and
xchg
jbe
test
rcl
add
or
mov
mov
es
clc
js
fsubrl
pop
les
cmp
mov
imul
imul
lods
mov
or
data16
or
adc
data16
hlt
inc
inc
aas
inc
dec
inc
out
mov
movsb
mov
push
jne
scas
stos
arpl
or
in
sub
cmc
shrd
add
stc
push
sbb
xor
xchg
xor
sti
data16
add
dec
or
sti
sti
xchg
dec
test
sub
mov
push
enter
lret
les
and
pop
mov
lds
push
lea
cmp
mov
sbb
stc
dec
aad
add
cli
dec
or
js
jns
fsts
das
mov
aam
cmpsb
mov
repnz
hlt
xchg
ret
cld
adc
dec
test
imul
pop
add
cmpsb
shll
cmp
xlat
or
pusha
int
sub
mov
pop
pop
gs
outsb
imul
cmpsb
push
stos
bound
jp
jle
jo
popa
inc
mov
push
cld
cmp
inc
sbb
sti
mov
or
ss
sub
mov
mov
cmpsb
pop
pop
rcll
xchg
push
test
inc
int3
push
mov
out
aas
mov
shrb
jbe
mov
cmc
int3
dec
into
xchg
popf
loop
sub
xchg
call
es
out
xor
out
pop
rcr
and
clc
lret
ret
fsub
stos
orl
fadds
iret
imul
inc
pop
incl
movsl
lret
out
flds
sub
xchg
mov
mov
sahf
jb
inc
xchg
ret
cmp
mov
loope
add
repz
mov
ja
enter
addl
int3
das
mov
insb
mov
mov
nop
or
icebp
add
vprotq
mov
repnz
lds
xor
inc
mov
dec
pop
rcl
cmp
adcl
in
cltd
inc
add
rcll
mov
cmp
insb
fsubrl
jae
sub
mov
xlat
inc
imul
inc
fmul
test
pop
ds
cmpl
jge
mov
int3
add
rorl
sahf
pop
mov
andl
test
cmp
addr16
push
mov
int3
movsb
jb
das
mov
testl
fisubl
sub
jge
xchg
cmp
and
xchg
loope
xchg
jnp
inc
push
aam
push
add
mov
and
jae
pop
jbe
test
fisubs
vcmppd
xchg
fildl
cli
ret
push
xor
ficomps
mov
mov
jmp
xor
jbe
add
lock
push
iret
push
int
pop
mov
mov
gs
int3
inc
xchg
lahf
out
nop
pop
pop
pushl
push
lods
ss
add
btr
or
xchg
cmc
into
lea
or
mov
outsl
ret
mov
cmpsb
and
stc
pop
imul
stc
or
jecxz
mov
popa
loope
cmp
jnp
lret
jo
test
push
dec
add
mov
mov
inc
imul
ds
dec
jmp
sti
dec
es
aad
aaa
mov
leave
shr
pop
inc
ljmp
mov
test
idiv
push
stos
xor
and
mov
add
push
fsubrs
shl
lea
pop
mov
pop
and
imul
enter
mov
sti
cs
into
xchg
out
fidivl
or
add
inc
mov
mov
add
sbb
mov
ljmp
lods
push
push
sbbb
cmp
sub
insb
daa
icebp
ss
subb
mov
loope
mov
fisttps
dec
popf
push
and
orl
arpl
cltd
pop
cwtl
push
inc
xchg
push
mov
or
cmp
shll
mov
outsb
nop
adc
push
jae
and
loope
sub
inc
mov
inc
mov
adc
das
jno
nop
test
cltd
push
and
xor
push
xchg
push
add
xor
jg
cwtl
mov
cli
stos
outsl
or
add
inc
fsubrl
leave
sub
aas
ror
and
xchg
cmp
gs
sbb
adc
popa
aas
arpl
inc
leave
orl
pop
ja
jg
mov
push
xor
pop
loope
sbb
and
out
inc
dec
daa
aas
lret
in
sarb
in
mov
cmp
je
sbb
icebp
and
ret
jnp
mov
sbb
sub
icebp
dec
ds
outsl
add
adc
sarb
popf
push
cli
loop
in
sahf
mov
lea
movl
sub
push
fsubs
push
rorb
inc
xor
fstpt
push
xchg
jle
mov
popf
shl
lret
mov
outsb
dec
stos
mov
and
mov
add
ljmp
jecxz
rcll
outsl
shll
adc
cmpsb
mov
shll
fs
xchg
add
pushf
cmp
int3
orl
outsb
mov
mov
sub
mov
pop
push
in
data16
jbe
rcll
mov
cltd
ret
xchg
aaa
int
xor
lds
mov
sub
movsl
jae
ret
add
inc
push
jle
mov
mov
inc
xchg
sub
push
int
sahf
adc
and
into
test
ds
pop
jmp
add
push
mov
push
bound
cltd
add
subl
insl
xor
mov
cmp
std
pop
cs
mov
inc
js
cld
aam
movsl
shlb
mov
popa
xchg
cs
inc
shrb
add
inc
stos
punpcklbw
repz
fnstenv
mov
cmp
adc
push
out
test
nop
mov
or
jle
fmuls
mov
test
idivb
jne
inc
or
fcmovne
push
mov
lahf
out
js
js
idivb
lcall
lods
call
add
cmp
jp
les
xchg
addr16
pop
mov
jb
data16
adc
pushf
push
mov
jle
shrl
add
cmp
sbb
fwait
sub
pop
push
cmp
rolb
push
mov
rorb
movsl
jo
aad
dec
subl
bound
imul
imul
mov
movsl
adc
mov
mov
push
xchg
test
orl
pop
rcrl
enter
sarl
popa
cltd
jmp
or
fwait
mov
adc
push
sub
pop
mov
test
mov
sub
rol
xchg
xchg
movsl
imul
inc
fs
mov
mov
and
cltd
aaa
sbb
mov
dec
loope
push
push
andb
fsub
stc
int3
and
push
mov
push
jmp
and
sbb
imul
push
cmp
jg
sbb
outsb
fnstcw
aad
adc
outsl
mov
in
dec
push
cmp
mov
mov
gs
aad
mov
jmp
add
mov
leave
pop
cltd
addr16
adcb
pop
sub
scas
inc
adc
cmc
dec
xchg
xor
xor
push
shlb
popf
mov
in
aas
jp
dec
stos
data16
mov
fnsave
dec
lock
mov
pop
fldt
stc
das
sbb
popf
xor
inc
roll
cmp
shl
push
mov
movsl
mov
shrl
xor
xchg
cmp
xchg
loop
ud2
scas
testl
out
pop
das
or
fcoms
jl
bound
sbb
aaa
xor
pop
cmp
jecxz
and
adc
mov
xor
fs
mov
dec
leave
arpl
mov
cmp
fsubl
roll
mov
sub
lds
ficoml
mov
loop
and
loope
rorb
mov
imul
roll
shl
ds
jmp
dec
fcomip
lahf
stc
mov
scas
mov
add
adc
movsb
push
jb
sbb
sti
mov
stos
jg
popa
cmp
cli
scas
push
push
sub
decl
loop
mov
lods
decl
mov
daa
inc
sub
mov
jmp
jl
inc
orb
addr16
add
decb
mov
sbb
mov
and
out
inc
loope
adc
out
scas
clc
cmp
call
faddl
orb
aad
jo
scas
and
xrelease
outsl
jno
inc
nop
jmp
adc
filds
cmc
test
arpl
pop
das
xor
lret
push
push
mov
jae
push
mov
aam
cmc
cmpsb
mov
inc
rcr
and
sub
popf
rcr
popa
fbstp
pop
mov
xor
test
decb
push
lds
icebp
push
frstor
jnp
je
add
jl
aad
test
dec
mov
mov
sbb
mov
dec
in
sub
aaa
mov
lret
inc
cmp
and
repnz
fs
mov
pop
es
adc
std
jle
mov
mov
pop
xor
pop
adc
cltd
subb
in
pop
xor
dec
cld
ret
sub
mov
jge
sbb
mov
sub
fbld
ret
add
push
ret
xchg
push
pop
mov
out
sub
xchg
je
imul
pop
je
lods
push
icebp
jmp
mov
mov
and
lcall
pushf
jp
fbstp
cmpsl
push
das
add
pop
and
test
psrlw
add
dec
adc
or
popf
cmp
cmc
inc
dec
faddl
int3
push
pop
jae
cmp
fadds
push
imul
cmpsb
shl
cmc
insb
and
repnz
mov
jecxz
xchg
fcomps
cmp
lret
dec
jne
stos
or
std
sbb
dec
outsl
sbb
mov
xlat
les
xchg
sub
cmp
mov
mov
int
jnp
cs
test
xchg
mov
lock
cli
movsb
sub
jmp
ljmp
in
mov
sbb
mov
push
lock
outsl
xchg
icebp
push
mov
arpl
add
xchg
jle
fldcw
shrl
shl
aas
test
aam
jmp
add
daa
xchg
mov
cmpsb
sbb
jbe
into
imulb
mul
je
inc
rcr
mov
mov
mov
test
cmp
mov
mov
imul
mov
dec
clc
lahf
imul
int3
jo
xlat
in
cwtl
fnsave
ja
push
test
insb
ret
pop
sarl
dec
cld
mov
out
pop
lret
addr16
mov
cmpb
inc
or
lds
mov
xor
sub
das
repz
mov
sbb
js
repnz
andb
rcrb
test
push
sti
dec
adc
jmp
fstpt
adc
clc
dec
les
loope
lret
test
stos
test
xlat
icebp
mov
mov
ret
push
dec
out
icebp
sub
dec
addb
shlb
sub
sar
cld
and
sets
mov
mov
jo
mov
jb
lret
pop
mov
mov
lcall
inc
out
sub
inc
scas
or
push
jl
sub
mov
dec
pop
mov
repz
xchg
aas
data16
ljmp
mov
lods
data16
je
sbb
push
out
mov
outsb
sbb
sbb
pop
push
jge
xchg
scas
icebp
pop
jns
cmp
mov
cmc
mov
fidivrs
inc
mov
lcall
mov
cld
cld
push
pop
lahf
cmp
mov
jge
push
jg
jge
mov
lcall
jnp
xchg
ja
push
adc
push
lcall
lret
pusha
rorl
jecxz
xor
dec
std
adc
jno
ja
push
and
insb
subl
ljmp
pop
addl
sub
cld
jle
leave
fnstcw
jg
pop
movsl
pop
fnop
in
fcomip
jecxz
fisttps
inc
subb
imulb
cmc
jg
stos
cwtl
jo
stos
shl
mov
or
push
jno
dec
xor
xchg
and
cltd
insl
jne
and
mov
test
cwtl
ds
ret
inc
lods
push
ret
out
xlat
daa
dec
xor
xchg
sahf
xchg
lods
ljmp
mov
addb
sbb
stc
jmp
pushf
ret
cld
pop
inc
push
mov
xor
movsl
addb
xor
roll
shll
inc
sbb
inc
repz
xchg
in
mov
cmpsl
mov
push
rcrb
loopne
in
mov
incl
in
dec
xor
cltd
fidivl
inc
sub
xchg
mov
stos
inc
pusha
xor
jecxz
add
push
in
pushf
jge
ss
push
or
jmp
gs
dec
dec
jnp
fwait
dec
sbbb
mov
inc
cmp
int
push
movsl
into
stc
in
or
in
xor
js
out
shlb
adc
cs
enter
fcom
jns
push
adc
test
data16
mov
jae
xor
subb
sbb
add
movb
pusha
jg
stc
push
or
cmp
pop
cmp
clc
icebp
enter
das
mov
lds
mov
sbb
mov
push
or
lret
mov
dec
sahf
sbb
iret
int3
and
fidivl
pushf
in
daa
sbb
rcrb
orb
stos
jbe
arpl
sub
push
out
or
sbb
fwait
lret
lahf
cld
gs
jmp
mov
pop
adc
jae
lods
cmp
imul
jmp
je
fidivl
xchg
insl
test
bound
dec
cltd
mov
push
sti
in
jns
adcb
adcb
xchg
dec
pop
iret
push
imul
pop
push
mov
and
jmp
movsb
insb
and
xchg
and
pop
mov
je
fs
popa
mov
jae
jp
movsl
inc
data16
xor
rolb
je
xchg
xchg
pop
push
mov
dec
movsb
insb
lock
sbb
mov
pop
sbb
lret
push
inc
mov
cmp
and
fistl
mov
pop
cmpsb
sbb
jne
fs
lea
sbb
sub
jnp
mov
dec
push
sbb
adc
aaa
fbld
test
xchg
jge
cli
outsb
mov
fcmovnbe
aaa
jne
cmp
sub
push
push
pop
cwtl
iret
inc
dec
pop
ljmp
cmp
or
shll
cmpsb
mov
xor
outsl
shl
mov
push
icebp
arpl
scas
adc
lcall
cmp
stc
loop
xor
daa
push
mov
mov
push
movsl
je
dec
ret
xor
cs
ljmp
out
xchg
out
lds
cld
add
andl
jnp
sahf
fs
imul
cmovo
xchg
test
daa
mov
jl
ja
push
xorb
fisubrl
notl
or
inc
call
dec
dec
pop
lret
push
std
pop
inc
aad
shl
movb
xor
inc
and
inc
or
push
push
adc
test
cmpsb
cmp
popa
inc
mov
fists
jo
mov
roll
fidivl
fdivl
sarl
arpl
push
sahf
inc
mov
lds
enter
pop
adc
mov
cld
enter
sub
arpl
aas
in
rcll
mov
or
lret
test
xchg
inc
sub
loop
clc
xchg
mov
lcall
inc
pop
loop
sbb
imul
rcll
adc
cltd
loope
sbb
fists
push
imulb
cmpsb
nop
xchg
mov
out
cld
push
testl
addl
js
fsts
out
outsb
int
sub
out
mov
fisubs
call
or
mov
in
xchg
outsb
pop
insl
gs
scas
ret
popa
repz
in
or
cmp
fcompp
push
and
dec
aas
fadd
xchg
jno
idiv
cmpsl
sub
mov
pop
popf
mov
push
stc
js
push
fprem
xchg
movsb
fstl
lmsw
jle
testl
inc
cmpb
inc
js
in
imull
inc
xchg
cli
leave
xor
add
push
mov
lock
jne
mov
lea
js
push
repnz
lods
sbb
int3
pusha
lcall
push
jo
ds
mov
dec
xchg
inc
test
inc
sub
addb
data16
stos
aas
rorl
pop
imul
xchg
rcll
out
or
sub
out
dec
jo
adc
je
fsin
movsb
push
push
int
push
push
xor
scas
iret
aam
adcb
pusha
push
arpl
dec
push
stos
jne
sbb
enter
push
faddl
and
dec
and
es
rcrb
lcall
cmpsb
xor
inc
fs
jno
ss
mov
pushf
xor
lcall
sbb
cltd
pop
jns
cwtl
push
rcrl
ds
scas
ljmp
xchg
outsb
fdivrs
push
sbb
outsb
fisubrs
roll
movsb
lods
fimuls
in
mov
fcompl
int
je
or
sbbb
pop
movsl
in
cmc
jns
cmpsl
jmp
pop
xorl
xchg
pop
xor
leave
sti
adc
outsb
enter
das
inc
or
std
jg
test
test
imul
mov
jge
je
or
fsts
stos
or
xchg
jg
je
sub
popa
cmpsb
jb
jbe
dec
push
nop
adc
sbb
jge
inc
cwtl
repnz
lahf
in
out
ss
cmp
mov
ret
fwait
pop
push
inc
arpl
test
mov
insl
sti
frstor
cltd
inc
jns
lret
mov
into
sub
jb
movsb
pop
mov
mov
shrl
lods
inc
cmc
aaa
int3
nop
pop
cmpsl
jb
push
mov
ds
daa
xlat
inc
mov
or
sti
xchg
xor
mov
pop
adc
xor
andb
mov
dec
jae
push
dec
fisttps
push
dec
xchg
sbb
xchg
mov
or
nop
jg
push
cmc
scas
pop
loopne
orl
loope
cmp
pxor
xchg
in
pop
adc
je
cmpsl
cld
and
leave
add
ss
mov
loop
mov
inc
fdivrp
stos
jns
xchg
add
push
inc
lds
and
lcall
fwait
mov
or
inc
xlat
jp
jg
popfw
loopne
mov
sbb
pop
popf
xor
lahf
aaa
add
lea
aad
mov
pop
pop
test
out
jne
cmp
push
lea
xlat
outsl
shrl
or
jge
mov
cmp
jmp
aam
xor
or
outsb
and
stos
pop
lea
clc
jp
jns
dec
xchg
in
lcall
or
test
fwait
divb
ss
jmp
cmp
mov
lcall
sub
das
shr
lret
xchg
rclb
cld
adc
stos
and
or
je
xchg
fisttpl
adc
test
cli
rcrb
out
push
jb
lea
lret
sbb
ja
sub
mov
mov
or
inc
lahf
pop
cmc
das
push
xlat
in
cmp
repz
pop
xchg
das
dec
sti
pop
pop
jecxz
mov
push
pop
mov
or
lcall
mov
add
enter
scas
sti
cmpsb
fwait
out
inc
shl
sbb
adc
pushf
notl
aas
cwtl
ds
in
lret
into
lret
pop
mov
xchg
adcl
pandn
les
push
filds
sbb
stos
jne
iret
repz
xchg
inc
or
pop
mov
or
orb
pop
imul
std
dec
xor
or
dec
xlat
jb
cmp
mov
push
pop
lcall
insb
outsb
scas
test
push
xor
cli
xor
cmp
iret
in
mov
movl
jge
xchg
aad
mov
jle
andnps
nop
mov
push
mov
aas
test
mov
xchg
jg
adc
std
testl
mov
jecxz
push
insb
sahf
dec
jnp
jb
aad
xor
inc
push
mov
jno
dec
jns
imul
mov
mov
cltd
push
sbb
or
mov
insl
stc
fstpl
out
sub
lahf
xchg
sbb
test
aam
xchg
test
sub
mul
or
mov
hlt
jnp
mov
sbbb
sti
fcomps
cmp
push
rorb
or
push
js
pop
lea
nop
popl
insl
scas
push
jl
push
jge
popa
lea
add
jae
faddp
sub
mov
inc
dec
scas
mov
mov
mov
scas
sub
out
insb
shll
insb
xchg
dec
addb
xchg
mov
cmp
dec
stos
jg
sar
inc
imul
cmpsb
fwait
enter
stos
pop
andb
enter
scas
xor
and
cltd
cmpsb
cli
or
mov
movsb
movsl
shll
push
sti
mov
insl
mov
shlb
xchg
pop
and
mov
pop
cmpsb
in
xor
mov
sbb
jmp
lods
xor
push
jle
mov
and
cmp
mov
sub
mov
cmp
pop
lret
aaa
or
mov
inc
dec
imul
aam
cmpsl
and
push
out
mov
adcl
sub
inc
xor
ficompl
mov
out
scas
sahf
push
fucomip
into
pop
aas
aas
arpl
sbb
fwait
cmp
addr16
mov
pop
cmpsb
test
fwait
dec
push
mov
sub
out
popl
lret
stos
dec
iret
loope
and
addb
ret
inc
je
and
pop
xor
mov
fs
adc
out
push
sub
xchg
cmp
lock
xchg
lcall
dec
and
jmp
cs
mov
mov
mov
and
fs
sub
xchg
inc
dec
pmaddwd
inc
dec
movsl
inc
adc
cmp
mul
mov
pop
pop
fisttpll
aaa
pushf
and
dec
inc
and
jb
lahf
stc
pop
xor
inc
scas
xchg
lea
enter
adc
in
sbb
cmp
mov
mov
and
notb
jne
pop
mov
adc
in
js
leave
js
mov
jp
int3
dec
jb
mov
add
es
jo
fcompl
hlt
xorb
xchg
adc
arpl
js
out
jns
xor
nop
mov
movsb
pop
push
sub
popa
stos
push
test
and
in
push
stos
xchg
mov
test
xchg
and
pusha
mov
pushf
sbb
movsl
or
mov
mov
stc
mov
fidivs
mov
pop
adc
push
mov
inc
lret
inc
imul
loopne
cs
xor
das
in
adc
adc
and
sub
sbb
pop
call
jnp
cwtl
push
mov
in
mov
shrb
hlt
jmp
inc
fstpl
sbb
adc
hlt
and
orl
in
xor
lock
aam
adc
ret
outsb
loop
sbb
sub
or
je
and
pop
fdivrl
cmp
clc
addb
push
push
rcll
lahf
push
mov
adcb
pop
icebp
inc
imul
lea
push
sub
repz
lods
dec
jae
popa
mov
fldenv
aaa
adc
leave
int3
inc
aaa
push
mov
mov
enter
mov
push
fucomi
dec
xchg
adc
mov
lods
xchg
inc
pushf
mov
mov
add
push
jo
cmpl
pop
xor
ss
repz
gs
shr
je
sub
imul
cmp
add
pop
insb
out
jnp
lahf
in
jmp
or
push
or
push
xor
jnp
cmp
push
leave
sub
mov
and
mov
lock
dec
push
imul
cmp
jns
jge
dec
xchg
cld
add
divb
fdivl
jo
mov
or
outsl
clc
cmp
out
sub
add
jg
push
das
and
jle
pop
leave
pop
shlb
test
xchg
das
ss
fildll
cs
inc
sub
popa
fisubrs
mov
adc
sub
jns
cltd
mov
mov
mov
xchg
inc
push
movsl
enter
sub
push
mov
pop
push
fcoml
pop
dec
popf
inc
jne
out
add
sbb
jb
sbb
adc
jne
lock
mov
adc
cwtl
subb
sub
stc
sbb
jp
xchg
lret
dec
call
rolb
ret
jae
ret
jnp
jbe
push
lret
cmc
and
jge
in
lds
imul
dec
mov
gs
inc
xchg
inc
data16
lods
mov
mov
mov
dec
dec
testl
lds
pop
jecxz
repz
pop
mov
jnp
xchg
sub
xchg
jbe
cmp
mov
cmpsl
mov
cmc
in
mov
add
frstor
gs
cltd
mov
cmp
lcall
add
out
mov
mov
push
pop
and
leave
testl
push
aas
rcll
fidivl
inc
je
dec
lods
lods
mov
movsb
pop
not
inc
inc
bnd
fs
push
or
pop
sahf
leave
xor
cmc
mov
adcb
pop
mov
sub
or
cmp
sub
sub
sahf
test
gs
psrlq
xlat
push
jne
dec
scas
xchg
mov
and
out
xlat
mov
pop
pop
xchg
pop
addl
pop
daa
addb
icebp
insl
sbb
subb
sub
int3
xchg
sub
incb
pop
out
pusha
xor
decl
jmp
mov
lcallw
test
rcr
clc
pop
dec
or
jne
mov
cmc
inc
les
sub
jmp
es
dec
fcomp
cmpsl
sbb
ss
rcrl
push
dec
lock
push
sbb
pop
xor
cmp
dec
sub
dec
add
push
adc
pop
and
lret
cmp
and
jge
mov
push
fst
mov
aad
sbb
sub
push
jg
pop
inc
rcrb
dec
mov
cmp
pop
or
dec
mov
aad
test
mov
gs
enter
movsl
outsl
cwtl
mov
mov
push
or
push
addb
in
push
cmp
push
or
in
add
dec
sbb
stos
je
mov
mov
and
aas
clc
fdivrl
jnp
pop
sbb
xacquire
imul
pop
mov
cmp
mov
cmp
jl
arpl
dec
xor
xor
sub
jle
jg
jo
mov
out
in
sarl
xorl
and
lcall
into
jg
jle
stos
or
xchg
sar
push
ljmp
imul
jg
pop
and
lds
xchg
test
fwait
adc
push
outsl
sti
shr
fcmovnbe
mov
mov
or
movsb
out
push
idivl
xor
ret
pop
outsb
mov
adc
mov
adc
pop
mov
sbb
dec
fst
sub
mov
aad
mov
add
fsubs
mov
ds
dec
aaa
jmp
lret
in
daa
dec
out
je
popf
sahf
shrl
jnp
cmpb
cmc
inc
sbb
sbb
xchg
mov
mov
mov
sbb
stos
mov
cld
fscale
jl
call
push
mov
mov
mov
ret
pop
gs
dec
mov
mov
or
cmc
icebp
inc
insl
dec
sbb
xchg
and
aaa
xchg
insl
jnp
sbb
es
inc
inc
add
iret
adc
jge
add
loope
pop
jnp
mov
outsb
jne
or
mov
out
xor
pop
test
xchg
clc
fcomps
jge
push
cmc
lahf
cmp
pop
sbb
adcl
cwtl
sbb
pushf
arpl
arpl
bound
cld
ja
lret
mov
adc
push
pop
fistpll
sti
clc
jmp
ds
sub
out
mov
pop
out
imul
out
cmp
scas
cltd
das
lods
aam
je
aad
sub
mov
mov
push
fwait
dec
mov
shlb
mov
testb
mov
and
les
sti
add
stos
push
mov
icebp
adc
ljmp
jbe,pn
dec
push
xor
xchg
pop
mov
test
das
shl
ss
jae
jnp
pushf
sub
lock
jb
push
popf
ret
int
cmpsb
mov
out
loope
jno
jmp
data16
lahf
and
test
mov
into
jle
imul
jb
pop
repnz
loopne
outsl
cltd
add
mov
jecxz
sub
mov
push
mov
shll
outsb
add
push
cmp
pop
aaa
cli
xchg
fidivrs
and
repnz
pop
xchg
stos
add
add
addr16
add
rol
mov
mov
mov
outsb
lret
bswap
and
lock
push
pop
jns
xchg
mov
mov
fisubrs
sub
and
mov
sbb
lds
push
and
xchg
jbe
inc
fcoms
cmp
fisubrl
scas
mov
in
leave
addr16
dec
dec
call
rorl
and
push
lahf
idivb
cmp
cmp
rol
mov
mov
or
mov
mov
add
div
mov
push
in
shlb
int3
stc
out
push
or
scas
add
add
sub
pop
pop
loope
jnp
sub
std
or
sbb
push
xor
sub
mov
mov
imul
pop
lahf
dec
cmp
nop
jle
adc
pop
sbb
pop
sbb
sbb
mov
dec
sar
insb
mov
or
xchg
xor
neg
notl
dec
sbb
mov
nop
ret
pop
or
pop
mov
sbb
ja
mov
lret
lock
mov
aad
je
sbb
mov
mov
movb
push
xchg
idivb
aad
xor
xorb
das
add
cmp
scas
stos
ss
jae
cmpsl
idivb
lock
cmp
sub
lea
js
push
stc
es
cld
lods
fwait
and
in
in
or
push
popa
cmp
dec
repz
mov
xchg
and
int3
or
mov
icebp
inc
and
insb
daa
popa
push
cmp
icebp
rolb
out
pop
push
jp
pushf
lods
cli
cmpsb
add
dec
lods
inc
push
in
dec
bound
out
push
mov
mov
xor
fnstenv
lods
cli
dec
addr16
in
into
je
pusha
push
rcrb
add
pushf
add
add
push
shl
adc
fidivrs
sub
jne
adc
imul
lods
dec
bound
dec
push
dec
cmp
dec
fistpl
inc
ret
or
pop
or
pusha
dec
inc
mov
mov
mov
imul
lea
push
test
push
jno
xchg
xchg
add
push
je
xor
in
divb
or
cmpsl
loope
insb
xchg
cmp
std
push
sbb
jl
fistps
dec
scas
std
inc
push
cmp
out
jnp
or
pop
out
mov
pop
sbb
mov
jno
xor
sbb
movsl
cmp
loopne
ss
push
xor
push
js
push
sbb
mov
inc
jnp
jbe
jl
sbb
cltd
and
int3
movsb
adc
jle
in
iret
mov
push
adc
push
test
shrb
xor
iret
or
or
test
fdiv
push
cmp
outsl
sti
notb
mov
ljmp
jne
ret
mov
test
jo
sbb
adc
cmp
ss
jmp
out
aad
nop
xchg
adc
xchg
mov
cmp
out
insl
insb
add
or
mov
insb
fcmove
cmpsb
cmp
fldenv
inc
loopne
and
and
cmc
fimuls
adc
pop
pop
pop
jne
inc
loope
sbb
stc
lods
xchg
mov
adc
lret
lds
adc
adc
popf
dec
test
inc
lds
and
out
imul
sbb
dec
sbb
pop
fistl
lods
sbb
sbb
jmp
and
pop
cmpsb
ja
data16
pop
sbb
out
cmpsl
xchg
mov
inc
sub
jmp
shl
or
fptan
cmpl
arpl
lds
ss
int
adc
cs
mov
inc
lods
sahf
mov
jle
loop
push
mov
xor
ss
shl
xor
pop
push
jne
inc
cs
and
mov
pop
shl
mov
or
clc
dec
int
pop
dec
mov
mov
push
test
std
cmp
mov
jno
push
xchg
or
mov
lods
arpl
and
lock
bound
jnp
pop
mov
mov
sub
sti
cmp
dec
nop
xchg
movsl
into
test
sbb
rcrb
in
addr16
in
mov
add
mov
jecxz
cmpsb
push
jl
or
lret
mov
push
ror
dec
dec
mov
mov
push
pop
add
xor
mov
pop
push
std
pop
sbb
dec
jle
movsb
stos
movl
sub
lret
push
jp
scas
pop
push
or
int3
jae
das
mov
fmul
dec
imul
jbe
mov
lahf
pop
ss
out
popf
popf
addr16
and
cmpsb
add
pushf
cmpsb
bound
jns
add
sbb
inc
movsb
mov
sub
sbb
int3
call
mov
and
push
xor
ret
hlt
and
sbb
lods
mov
insb
imul
mov
and
lods
dec
mov
sub
mov
nop
js
jmp
fiaddl
addr16
add
hlt
xchg
into
test
adc
jo
call
mov
js
jns
jmp
int
dec
xchg
popa
sub
je
xor
mov
dec
clc
inc
scas
mov
adc
xor
pop
test
movsb
xchg
sbb
mov
sub
inc
ds
xor
repz
std
mov
pop
mov
pop
mov
push
test
push
in
js
fwait
pop
lock
pop
iret
mov
fsubrs
arpl
ja
sbb
aad
ljmp
movb
mov
iret
aad
lea
xlat
lock
out
push
and
xchg
lds
in
loop
adc
dec
mov
push
and
mov
pushf
cs
insl
dec
ljmp
scas
push
aas
adc
pushf
cmp
ljmp
mov
xchg
outsl
adc
stc
jp
rcr
mov
mov
icebp
xor
in
adc
mov
into
int3
js
mov
bound
sbb
fidivl
stos
mov
push
data16
fldt
stos
xchg
imul
insl
mov
fisubs
dec
mov
sbb
or
je
mov
cltd
jp
outsb
cmp
arpl
mov
sahf
and
int
cmpsb
adc
push
int3
mov
push
cmpb
fsts
scas
dec
cmp
add
jecxz
push
aad
cld
icebp
and
xor
out
je,pt
sahf
loope
sahf
and
cmp
pop
mov
inc
mov
sbb
sub
add
je
shll
xchg
cmp
xor
imul
imul
imul
fimuls
pop
and
jg
cmpsb
dec
and
xchg
adc
in
sbb
insl
hlt
out
sbb
jnp
out
sub
pushf
out
lods
sub
out
cmp
popf
add
sub
repz
leave
jle
pop
stos
jl
ds
dec
lcall
mov
jne
pop
sbb
in
pop
dec
mov
stos
inc
shlb
xor
sbb
fnsetpm(287
sub
push
mov
mov
cmp
cli
inc
mov
cmp
xchg
jecxz
and
xor
inc
adcb
jge
cmp
int
int3
inc
mov
or
nop
pop
test
scas
repnz
adc
push
test
in
add
jb
xchg
shrl
rclb
mov
lods
jmp
cltd
subb
push
rcrl
push
inc
fsubl
sbb
jbe
pop
lcall
cmc
and
and
mov
stos
jecxz
cmp
movsl
test
icebp
test
or
stos
into
dec
mov
mov
and
shl
cmp
sub
pop
push
inc
imull
xor
or
mov
fisttps
mov
jae
mov
nop
jmp
repz
cmp
shlb
popa
push
call
push
and
sti
inc
lahf
orb
in
adc
mov
scas
push
cmp
popa
add
inc
enter
jae
push
and
inc
insl
mov
imul
cmp
cmpl
insb
cli
ret
ficomps
cmp
cmpsb
popa
fildll
scas
loopne
jg
xor
sbb
dec
dec
sarb
jp
roll
adc
pop
add
pop
das
and
mov
push
cmpsl
pushf
jg
in
xor
test
leave
xor
dec
add
xchg
ret
push
in
or
or
les
sub
push
jbe
out
xor
or
push
out
cmp
add
dec
in
test
test
popa
in
and
xor
outsl
xor
mov
shlb
lods
xlat
push
inc
lret
in
or
push
xor
xchg
push
loope,pt
inc
cmp
dec
add
mov
outsb
xchg
inc
dec
mov
outsl
push
pop
leave
sbb
pusha
and
gs
push
popf
add
aaa
cs
sti
in
lcall
shlb
cmp
test
pop
ret
ds
mov
fstpt
inc
mov
fistps
sbb
or
ror
test
rcrb
in
xchg
pop
mov
cmp
out
mov
enter
sub
inc
and
fstpl
mov
cld
jb
push
gs
mov
inc
subb
insl
aam
in
xchg
mov
cmpsb
mov
loop
fstps
outsl
out
aas
cli
cld
adc
into
adc
pop
fwait
inc
rorb
add
js
mov
sub
sub
cmpsb
call
lret
xlat
jl
jp
push
or
imul
clc
lret
push
push
test
xchg
icebp
mov
and
repz
push
testb
cwtl
ja
daa
in
mov
sbbb
jnp
cltd
adc
nop
int
pushf
cmc
push
out
add
mov
inc
and
sbb
mov
push
mov
scas
clc
xchg
add
jb
outsl
in
loope
cmp
sub
jno
pop
out
inc
jl
ljmp
mov
out
movsl
in
scas
or
lea
xor
icebp
and
scas
add
sti
fistpl
lret
test
test
jb
cli
je
xchg
addb
jno
cmpsb
mov
dec
dec
pusha
xchg
cmpsb
ftst
push
mov
shlb
std
or
or
dec
ffreep
cmp
sub
psadbw
fcomps
cld
and
rol
jp
out
xor
insb
mov
outsb
loope
mov
dec
xchg
xchg
les
inc
dec
cs
mov
jae
mov
pop
fcom
push
cmp
pop
mov
jbe
add
ljmp
insl
mov
or
xor
movsb
ljmp
cltd
test
lahf
scas
push
pop
sbb
repz
push
dec
adc
sbb
daa
add
mov
test
js
sub
xchg
jmp
adc
dec
sub
jns
or
mov
ss
jnp
jle
inc
pop
fstpl
pop
push
decb
arpl
in
gs
inc
ret
test
mov
xor
cli
dec
and
dec
andb
test
jbe
inc
and
jp
adc
paddb
cmpsb
repnz
cld
pop
mov
jae
xchg
or
inc
in
lods
push
ficomps
and
enter
pop
and
jge
push
inc
cmp
mov
adc
xor
clc
nop
flds
popa
pop
in
adcb
in
lahf
jecxz
mov
mov
imulb
mov
fnstsw
and
mov
dec
cmp
mov
dec
push
je
adc
fsubrl
je
in
xchg
cmpsl
xchg
aam
fisubs
pop
lods
pop
jge
in
data16
push
out
ds
and
lds
pop
and
ret
cmpb
stc
add
roll
mov
mov
pop
mov
dec
repz
adc
int
loopne
into
arpl
dec
aas
ret
mov
sar
xchg
loop
mov
cmp
mov
sti
add
xchg
jns
jecxz
dec
inc
pop
loopne
movsl
stos
into
jns
in
sbb
push
xor
dec
stos
ret
and
xchg
bound
dec
das
dec
mov
jb
xor
shrb
stos
lds
sbb
xchg
ficoml
movsb
int
ss
xchg
and
sbb
aaa
xchg
icebp
inc
sbb
pop
les
gs
sti
vandps
inc
ds
mov
in
sahf
in
xchg
popf
or
aam
jge
cs
adc
and
rorb
or
jmp
xor
test
add
shlb
frstor
cmp
ljmp
repnz
adc
int3
dec
into
fwait
cmp
test
cmp
testb
xchg
adc
jbe
ljmp
push
mov
xor
sti
xor
or
shl
inc
fs
sub
fcmove
and
add
push
rorl
scas
pop
out
scas
sub
xchg
loop
or
xchg
ds
pop
adc
pop
int
add
lret
sub
leave
shr
push
js
scas
gs
imul
outsl
aaa
cmpl
les
mov
fs
xchg
aad
pop
out
test
mov
scas
sub
mov
lods
loope
lock
lcall
mov
into
push
cmp
les
outsl
adc
push
dec
xchg
rorl
lds
int
inc
inc
inc
mov
mov
fsubrl
xchg
rcrl
sbb
lahf
aam
jmp
mov
mov
sbb
shr
xor
fldcw
dec
sub
aad
cmp
insl
sbbb
mov
data16
jl
jmp
mov
je
mov
mov
nop
and
cmpsb
arpl
dec
or
in
pushf
dec
shl
int3
scas
bound
loop
and
cmpsb
push
adc
rcll
xchg
mov
xlat
lds
cmpsl
lods
shlb
lahf
and
pop
mov
pop
adc
stc
loope
je
dec
int
mov
push
mov
cld
cmp
jo
das
push
sbb
scas
dec
sbb
xchg
fisubrl
loope
inc
out
lret
xchg
mov
push
xchg
sbb
xchg
inc
pop
out
cmp
pop
sub
jge
inc
aam
iret
inc
outsl
mov
jne
adc
enter
ret
sub
adc
sub
and
mov
xchg
subb
jns
mov
repnz
sub
adc
out
fstps
jmp
inc
pop
xor
and
mov
lods
lcall
inc
js
lahf
insl
dec
adc
mov
push
addb
mov
jecxz
es
pop
ret
rcrl
fsubs
fs
jecxz
adc
arpl
mov
out
sub
sub
hlt
int
sahf
mov
add
arpl
loope
test
push
mov
fs
add
xchg
cmp
fisttps
mov
jge
fs
fisttpll
clc
add
cmc
mov
outsb
cmpsb
roll
mov
xchg
pop
pop
mov
xlat
xorl
add
js
inc
mov
push
int3
sbb
popf
push
int3
adc
push
dec
cmp
dec
fwait
cmp
ss
in
push
push
daa
fbstp
push
in
mov
jg
pop
mov
mov
pop
adc
push
adc
cs
aaa
inc
pop
lods
dec
popa
cmp
lret
mov
ljmp
ss
addb
or
pop
fsubp
add
leave
out
mov
inc
xor
push
push
loope
and
inc
fnclex
lds
push
pop
adc
sbb
xor
mov
shll
sbb
mov
push
jp
ds
hlt
push
pop
mov
lcall
popf
cmpsl
imul
push
or
dec
inc
shrb
out
enter
arpl
stos
sbb
inc
adc
cmp
mov
or
lods
dec
popa
jp
sbb
adc
out
out
sbb
mov
add
in
push
dec
push
cmp
cld
mov
movl
push
iret
add
scas
add
jg
inc
push
outsb
mov
into
ficoms
sti
out
mov
bound
mov
shl
inc
test
mov
out
jno
push
fprem1
mov
push
jg
adc
adc
loopne
xlat
arpl
sub
sbbb
jnp,pt
aaa
mov
call
mov
mov
divb
push
sbb
push
js
sbb
xchg
stc
sbbb
fdivl
pop
gs
xor
jb
test
xchg
das
cmp
cmp
mov
fldt
jp
lds
imulb
adc
aaa
bswap
test
vmread
lea
mov
mov
ljmp
add
arpl
push
sahf
in
rorb
dec
in
pop
or
mov
or
jnp
mov
fidivrs
pushf
sti
adc
movsb
mov
dec
inc
mov
or
lahf
bound
push
aas
scas
mov
push
xchg
pop
rcll
clts
insl
jle
dec
or
fs
repnz
jp
and
adcl
adc
jb
scas
push
bound
fstpl
cmp
ss
insl
inc
and
xor
xchg
test
pop
adc
jp
xor
sbb
dec
cmpsb
inc
xchg
das
jb
iret
xor
ja
mov
out
mov
aam
stos
ss
dec
ret
out
cwtl
rolb
popa
and
repz
or
call
shrl
fiaddl
je
inc
rcr
orl
pusha
xor
testl
jns
int3
jmp
imul
dec
addr16
outsb
dec
sbb
xchg
les
bound
andl
cmp
lods
cmp
dec
mov
movsb
xor
les
dec
cmp
mov
xor
jb
loope
push
fnstsw
and
or
test
orb
iret
js
je
dec
xlat
mov
clc
imul
aaa
cmpb
jo
inc
xor
cmc
insl
push
push
test
fisttpl
outsl
roll
out
pop
pop
xor
lret
mov
push
mov
scas
rorb
insl
ret
mov
stos
xor
jp
es
push
push
pushf
xchg
inc
fldenv
mov
mov
pop
jne
rep
sbb
mov
xchg
inc
call
ljmp
or
mov
mov
ljmp
cmp
jecxz
outsb
aaa
push
pop
loope
test
xor
stos
mov
jne
and
jno
sub
sub
mov
loope
xchg
rcll
xor
pop
push
jne
pop
ficoml
adc
xchg
cli
xor
mov
dec
or
repz
stos
adc
push
aas
jecxz
aaa
iret
or
jl
divb
arpl
test
sahf
push
and
jbe
bound
ja
xchg
cmp
pop
int3
push
mov
dec
push
ds
sbb
imul
jge
scas
dec
js
sub
out
mov
icebp
mov
jge
adc
leave
fld1
mov
lea
add
cmpsl
call
jno
and
push
stos
shlb
pop
es
cmpsl
loop
sbb
daa
or
xchg
loopne
inc
mov
int3
std
ret
mov
inc
mov
mov
repz
xlat
pop
xorb
inc
pop
mov
jae
jg
cld
xchg
stos
pop
stos
mov
lods
pop
in
loop
roll
mov
sbb
pop
dec
mov
cmp
jmp
sbb
add
bound
jae
xchg
sahf
mov
outsl
jb
dec
in
mov
inc
mov
xchg
jg
clc
dec
movsl
xor
popa
push
test
mov
testb
insb
ret
inc
jb
xchg
mov
mov
pop
sbb
sbb
adc
dec
sbb
pop
fisubl
dec
pushf
imul
jo
mov
push
aam
pop
arpl
test
xchg
hlt
mov
push
inc
xlat
fistpll
scas
ja
mov
cld
adc
jge
popl
mov
xchg
sub
mov
sbb
cmpsb
inc
fcmovbe
pop
jmp
rorb
push
mov
std
loope
jo
xor
mov
push
xor
fnsave
stc
mov
mov
in
addr16
mov
sbb
mov
mov
or
or
jmp
jno
adc
add
push
sbb
cli
inc
bound
mov
jo
leave
gs
js
fstl
iret
xor
add
cwtl
scas
jae
dec
or
adc
ret
adc
test
xorb
out
loopne
imul
jmp
rcrb
pushf
jmp
dec
fwait
nop
pusha
jg
outsb
and
push
rclb
dec
mov
popf
pop
adc
push
push
test
mov
movsl
repz
insl
stos
adc
xchg
inc
cmp
push
out
mov
adc
push
dec
loopne
xchg
xchg
lock
dec
sbb
bswap
ljmp
and
mov
imul
cmp
xor
test
xchg
ret
rcrb
aam
fsubs
roll
mov
cwtl
sti
lret
pop
insl
test
cltd
imul
gs
mov
insl
adc
nop
negl
lods
cmp
xchg
push
cmc
das
add
mov
scas
stos
sub
rcrb
insb
xchg
stos
loope
ds
pop
jns
rclb
add
or
sbbb
loop
fisubl
aad
shrb
and
daa
mov
repz
dec
pandn
xor
cmp
sub
or
stos
inc
and
popf
jne
popf
dec
jge
inc
mov
jmp
xchg
jmp
popa
imul
rcrl
adc
sbb
mov
dec
push
cmp
sub
gs
iret
jge
mov
fwait
imul
nop
test
mov
stos
mov
enter
in
aad
inc
idivb
or
lods
shrl
mov
or
addr16
pushf
fwait
pusha
cmp
sub
pop
sahf
pop
xchg
loop
loop
in
cmpsl
gs
add
mov
push
push
or
loop
mov
clc
fmuls
push
orb
cld
pop
adc
mov
stc
arpl
xor
dec
ja
dec
push
cmc
jne
imul
adc
inc
adc
push
dec
cmpb
rclb
pop
xor
or
add
push
mov
lcall
lcall
add
mov
out
fiadds
sbb
mov
mov
popa
in
pop
add
cwtl
test
mov
push
popa
fsubrl
out
and
or
xchg
int3
mov
aas
cwtl
lret
sbb
insb
js
mov
push
xor
pop
and
lcall
and
iret
mov
movsb
movsb
pop
lret
xor
xchg
xor
inc
and
xor
iret
stos
out
out
mov
movl
ljmp
shl
pop
outsl
mov
jp
mov
shrb
std
out
inc
mov
cmpb
popf
and
mov
add
xchg
push
jmp
jg
dec
lfs
lahf
push
adcb
iret
inc
cs
pop
decl
cld
xor
jg
cld
bound
push
cli
test
pop
jge
lds
jns
adc
pop
je
push
test
fimull
das
dec
cmp
pop
mov
flds
pop
test
stc
pusha
in
adc
mov
jns
push
or
mov
add
je
out
cld
push
leave
and
mov
cmp
daa
cmpsl
xlat
test
mov
scas
fsub
clc
dec
adc
pop
mov
sub
mov
mov
popaw
dec
in
lock
imul
push
mov
pop
outsb
loope
aam
mov
stos
xlat
cmpsb
jl
not
lahf
dec
mov
push
pop
inc
push
xlat
jne
or
jecxz
cmp
jns
in
jb
cwtl
icebp
shrb
sub
lea
jg
push
and
nop
mov
mov
cmp
and
adc
imul
std
lock
xchg
movsl
dec
shlb
cld
aaa
xchg
mov
mov
test
mov
cmpl
mov
pop
les
pop
mov
push
push
pop
inc
rcl
lock
mov
int
ret
shlb
jp
pop
shll
enter
cmp
stos
lods
push
inc
fsts
hlt
push
add
mov
dec
aam
movsl
pop
inc
jnp
test
push
jp
pop
xor
jmp
mov
mov
out
repz
ficomps
shrb
mov
and
loopne
adc
sbb
push
add
xchg
or
lahf
sbb
jno
jnp
stc
outsl
movsl
and
fsubs
inc
add
sub
mov
mov
mov
inc
out
mov
xchg
pop
daa
pop
xchg
pop
sahf
xchg
or
jecxz
xor
scas
mov
ds
icebp
cmpsl
mov
mov
jns
mov
sbb
ja
inc
cld
inc
insl
out
push
inc
int
scas
lock
sbb
pop
push
dec
xor
into
mov
mov
in
les
inc
mov
addr16
mov
fdivl
fs
in
push
mov
addl
jp
xchg
xchg
negl
dec
test
iret
fs
inc
xor
and
jns
test
das
popf
popa
movl
sub
scas
ja
in
pop
aaa
stos
push
gs
lds
mov
jno
je
xor
mov
or
in
adc
dec
push
sub
pop
jmp
stos
dec
push
mov
push
jae
mov
mov
arpl
pop
pop
jne
cwtl
sbb
out
ret
jo
xchg
aaa
clc
fildl
stc
outsb
addl
pop
mov
xor
daa
inc
pushf
outsb
mov
ret
stos
stos
inc
and
sar
in
nop
mov
fldt
jae
into
and
fisttps
addl
scas
ljmp
in
xchg
adc
notl
xor
mov
ss
mov
out
pop
mov
lea
add
sbb
push
and
icebp
sub
mov
xchg
mulb
mov
cltd
sub
clc
xchg
cli
test
fidivs
mov
push
js
mov
mov
iret
inc
push
daa
lea
repnz
adc
xchg
pusha
sbb
sahf
jp
loopne
test
mov
shrb
push
xchg
dec
int3
push
data16
mov
andl
inc
cmc
insl
fmuls
mov
lods
pop
xor
mov
push
lea
cmpsb
das
data16
test
hlt
lea
cltd
push
data16
xchg
jnp
aas
sub
jge
out
call
pusha
adc
out
adc
xchg
xor
and
cmp
ds
pusha
nop
mov
int
sub
add
jns
or
frstor
mov
cmp
cmp
dec
inc
jo
mov
pop
test
ljmp
mov
inc
inc
add
dec
xchg
mov
jmp
jmp
mov
imul
jmp
jecxz
lret
lret
inc
add
push
mov
sub
aas
fdivrs
or
int3
fdiv
lods
jmp
xchg
sbb
arpl
xchg
inc
mov
push
sbb
mov
push
jns
subl
push
jnp
ja
ficompl
mov
mov
mov
inc
and
sti
mov
out
pop
add
arpl
loopne
xor
lock
and
xor
orb
adc
dec
fdivl
cmc
jmp
testl
aam
mov
cmp
sbb
inc
les
int3
imul
mov
test
sub
js
fsubl
ret
adc
jge
xor
xchg
pop
insl
cmp
int3
lret
cmpl
add
pop
ss
and
push
ds
mov
xchg
repz
int3
push
ds
hlt
cwtl
push
ror
in
pushf
cmp
cld
jmp
mov
sub
jecxz
outsl
into
jecxz
inc
sbb
xor
adc
inc
cmp
out
faddp
pop
test
cmpl
jg
insb
mov
push
cmp
xchg
stos
xor
xlat
mov
outsb
push
pop
mov
mov
stos
iret
xchg
jbe
push
es
jmp
fsubrl
outsb
pop
and
lds
or
jmp
aas
mov
sbb
xor
das
sbb
jb
cld
mov
push
add
mov
dec
sti
test
jo
push
push
roll
mov
into
out
jbe
mov
je
pop
mov
out
mov
and
stos
sub
jge
xrelease
repz
push
pop
inc
nop
cltd
jle
insl
insl
add
int3
clc
pop
js
jmp
icebp
jl
push
rcl
adc
add
sti
mov
sbb
jnp
cmp
push
js
pop
orl
push
jp
out
test
mov
sub
icebp
movsb
inc
popa
insl
lds
or
jl
test
jg
or
add
mov
add
lods
mov
stos
sbb
loopne
test
ror
adc
cs
inc
jmp
sbb
push
dec
cmp
fisttps
sub
add
mov
inc
in
sarl
and
dec
jg
test
ficompl
cli
lret
repz
movsb
fimull
nop
sbb
cmpsb
cmpsl
insl
stos
arpl
in
lret
xchg
ljmp
jg
add
lods
enter
push
hlt
arpl
stc
push
dec
repnz
mov
cmpsl
scas
adc
or
xchg
in
inc
in
add
cmp
scas
push
rorl
xor
cmp
in
cmpsl
cli
fldl
testl
jp
les
dec
data16
and
push
jne
inc
push
or
rdpmc
mov
sbb
insl
std
scas
or
imulb
stos
out
mov
inc
loope
insl
cli
mov
lret
add
push
adc
add
ret
fdivrs
pop
push
mov
pop
pusha
and
push
dec
push
xchg
je
sub
out
cmp
mov
test
sarb
mov
testb
add
adc
popf
add
or
jp
jp
lret
ret
and
xor
lds
jnp
mov
mov
js
cmp
mov
jne
sti
dec
and
sbb
insl
les
mov
push
and
lret
cmp
ds
mov
insl
adc
and
add
stos
mov
or
xchg
xor
cmpsb
lock
gs
jl
jno
pop
xchg
adc
out
stc
stc
je
xor
mov
lcall
mov
jns
push
dec
sub
dec
mov
xlat
iret
or
adc
ret
lock
push
jo
jmp
sub
or
imul
hlt
mov
insb
jmp
es
mov
inc
out
adc
mov
lret
jb
lahf
dec
stos
cmp
sub
inc
push
shl
mov
jle
xchg
xor
xrelease
in
shrb
push
iret
push
jg
jge
test
adc
ljmp
adc
add
and
add
iret
push
into
jmp
inc
test
push
cmp
cmp
negb
and
sub
aam
fs
mov
xchg
aam
or
loop
setle
daa
cmp
sub
mov
clc
js
mov
lods
dec
and
push
testl
stos
ja
pop
pusha
pop
ljmp
add
iret
push
andl
pop
push
outsl
dec
into
scas
pop
aas
mov
jns
or
push
scas
inc
mov
xor
xor
add
cwtl
in
imul
mov
out
in
paddw
jo
xor
jecxz
lret
xchg
out
xchg
imull
jmp
mov
popf
sahf
addb
popa
aad
mov
insl
jmp
mov
xchg
xchg
adc
nop
stc
js
jnp
adc
dec
ds
insb
cmp
dec
sti
pusha
dec
bound
push
cltd
dec
mov
mov
mov
scas
fs
mov
sahf
add
negb
adc
sarb
out
popf
inc
in
dec
jb
mov
inc
lods
add
test
add
icebp
adc
andl
jp
imul
and
push
addr16
or
and
mov
pop
rcl
xor
test
xorl
inc
icebp
push
cmp
ljmp
xchg
and
mov
ds
mov
cwtl
lods
jae
mov
loope
sbb
pop
hlt
xchg
pop
lcall
dec
call
adc
cwtl
fisttpl
xchg
lods
xchg
jns
adc
jp
aad
push
mov
xchg
jge
int
mov
cmp
lret
or
sbb
idivl
mov
out
push
pop
fsqrt
in
pop
aas
cmp
clc
and
loope
mov
popa
pop
add
andb
aaa
fldt
fsubrl
sub
cmp
xchg
xchg
iret
movsb
jbe
cmc
fidivs
xchg
test
mov
cli
out
add
mov
les
sub
popa
sub
in
push
shlb
pop
stos
loop
in
or
loope
cli
push
xchg
push
fcmovnu
mov
fistpl
subb
fsubr
cmp
insl
sub
imul
jl
pop
ljmp
insl
cmovg
add
mov
mov
dec
sub
jmp
jnp
or
cld
ret
xchg
insb
mov
test
cltd
adc
push
jecxz
xlat
bnd
add
push
xor
cmp
xor
test
ds
inc
cmpsl
inc
push
arpl
push
mov
mov
or
andl
xor
movsl
into
in
mov
shl
ficompl
mov
outsl
data16
sub
push
sbb
leave
push
jge
lea
in
test
imul
cmpsl
hlt
sbb
cmp
pop
adc
mov
into
cld
pop
pop
out
enter
sub
into
insb
mov
cmpsl
inc
divl
inc
sub
sbbl
mov
adc
sahf
xlat
add
out
dec
pushf
jl
repz
imul
inc
push
cmpsb
lcall
addr16
psubsw
je
int3
jecxz
mov
dec
inc
pop
in
mov
movsb
loope
ss
mov
add
add
testb
sahf
shlb
adc
shr
insl
push
mov
mov
icebp
sub
jne
push
fucom
bound
or
push
xchg
dec
rcll
roll
mov
shll
mov
cli
in
stos
xor
int3
lock
dec
dec
push
xchg
xchg
adc
mov
outsl
cld
insb
rcr
ds
in
sub
fistps
add
sub
ljmp
push
mov
jno
dec
outsl
mov
lret
addr16
push
iret
enter
dec
jmp
mov
jbe
add
inc
rol
aaa
xor
push
mov
push
insb
adc
stos
out
adcb
mov
outsb
inc
insl
xchg
push
inc
cli
mov
jno
data16
fwait
movsb
jge
jne
mov
fldt
mov
cmp
mov
adc
ljmp
xchg
mov
es
sbb
lret
xchg
jge
js
pop
mov
arpl
mov
cmp
jmp
std
sbb
loope
rep
xchg
das
fcoms
mov
popa
pusha
mov
imul
popa
adc
in
cmp
cmpsl
and
movsl
outsb
cmc
lock
dec
xor
dec
cmp
xchg
adc
add
cld
sarb
call
int
jo
sub
add
sti
ficoml
add
pop
or
insb
repz
adc
shrl
stc
xchg
adc
aad
cmp
jno
movsl
adc
sbb
insl
nop
dec
xchg
pop
sbb
ljmp
stos
imul
lret
sbb
mov
add
insl
in
cmpsl
mov
repz
push
cmp
fstl
cltd
push
inc
pop
test
pusha
adc
jne
sub
push
jnp
mov
faddl
std
pop
lret
cmp
std
sbb
out
xchg
pop
mov
cwtl
jb
mov
push
push
mov
lods
jg
mov
cmpsb
repz
cmp
push
jbe
cmc
adc
sub
sbb
xor
xorb
pop
sbb
nop
dec
jg
and
shl
fisttps
or
sbb
js
ret
aad
bndstx
cld
xchg
enter
gs
xchg
jmp
xchg
mov
outsb
loopne
imul
or
into
stos
call
push
mov
pop
fadd
pusha
lahf
pop
clc
stos
add
loop
dec
loop
cli
movaps
leave
daa
inc
pop
gs
pop
mov
aam
shl
cmpsl
mov
out
repz
mull
das
adcb
lret
idivl
sbb
sbb
daa
mov
jnp
xchg
scas
mov
add
push
mov
mov
pop
imul
inc
nop
ljmp
jno
push
movsb
mov
jnp
xchg
add
jnp
iret
mov
lock
jae
aam
outsb
inc
pop
or
lret
fidivl
mov
adc
adcl
loop
mov
mov
test
pop
xchg
cwtl
scas
jo
mov
out
inc
inc
lea
or
pop
aad
imul
mov
mov
das
mov
pushl
sti
clc
sti
mov
mov
es
in
jg
mov
or
sub
fsubs
gs
or
jo
insb
mov
jl
and
jl
scas
push
cmp
cmpsl
call
jmp
ljmp
sarb
pop
xchg
xchg
xor
xor
out
loop
push
mov
es
addr16
subl
scas
jno
repz
sti
mov
subl
cmp
jmp
decl
dec
fsubr
jo
out
stos
ja
fsubrp
push
sbb
arpl
and
aam
fsts
or
sub
or
jnp
xchg
and
xor
cli
xchg
add
lcall
push
mov
jle
inc
cmpsb
push
push
dec
push
enter
cmpl
lods
in
or
test
mov
insb
lods
addl
sahf
int
lret
sbb
inc
adc
movsl
ljmp
jp
pop
cmp
sbb
sub
arpl
sub
push
mov
and
dec
adc
pop
in
push
out
push
stos
mov
fldenv
movsb
inc
jno
jne
adc
sub
pushl
adc
mov
imul
push
dec
sbb
jb
cmc
lds
subl
add
mov
inc
and
xsaves
mov
lea
jae
cmc
adc
out
adc
cmp
popl
cltd
mov
pop
push
addl
nop
inc
or
scas
pop
pop
sub
out
cmpsb
xchg
inc
bound
adc
ror
and
imul
push
rcl
in
out
out
out
pop
add
out
arpl
mov
jbe
sbb
inc
out
stc
lahf
mov
aad
lahf
add
fdivr
mov
mov
and
outsb
nop
or
and
in
push
lods
push
add
push
sbb
les
jb
mov
mov
xor
lock
pop
jl
or
sub
jg
xchg
sbb
notb
jne
pusha
push
test
in
je
dec
cmpsl
pop
sbb
adc
mov
imul
or
cwtl
pop
movsb
xor
andb
lcall
out
inc
imull
jns
pusha
cmp
pop
jno
out
jmp
push
push
stos
sti
out
cmp
push
inc
and
cmova
mov
cmc
gs
icebp
fimuls
push
inc
loopne
sub
jp
cwtl
and
sub
pop
jnp
or
xlat
iret
scas
lret
and
add
movb
and
pop
sub
ja
jb
es
jp
mov
jg
add
adc
lret
mov
jo
mov
lods
sbbl
mov
pop
in
add
inc
outsb
mov
enter
and
or
mov
or
repnz
lock
aad
enter
xchg
mov
push
mov
dec
bound
mov
sbb
lods
in
xchg
sub
mov
jg
hlt
fidivrs
sti
lock
or
imul
ret
outsb
fidivl
or
outsl
imul
sub
das
stos
and
mov
jmp
ret
inc
sub
push
xor
outsl
fs
adc
xor
sbbb
stos
adc
xchg
int
dec
popf
inc
cmp
push
cmpsl
cs
das
jecxz
aas
dec
ret
mov
pushf
mov
data16
jo
pop
sub
mov
mov
dec
out
or
lret
popa
mul
inc
cmpsb
push
popa
sbb
ss
cltd
or
repnz
mov
jo
adc
jae
xor
lods
lahf
fmull
stc
fwait
and
cmpsl
hlt
and
xchg
lock
pop
push
dec
mov
movsl
dec
jg
adc
and
push
xor
inc
mov
scas
fnstenv
and
insl
std
lea
dec
push
jmp
cmpsl
mov
lods
andb
and
cmpsl
xor
mov
sbb
cmpsb
jge
sbb
stos
or
mov
jns
sub
add
popf
test
cmp
sub
rclb
in
push
and
sbb
jno,pt
shll
xor
jnp
sbb
shll
xchg
ret
push
js
add
cltd
lcall
jecxz
sahf
std
and
xor
dec
jno
or
fcmovu
cwtl
adc
mov
or
adc
outsl
dec
jne
xchg
mov
loopne
test
xor
jecxz
sub
fwait
push
addb
fbld
fisttpl
sub
out
or
icebp
cmc
mov
or
add
xor
arpl
das
notb
push
aad
and
jle
sbb
xor
arpl
jbe
push
inc
arpl
xor
jge
int3
inc
out
dec
iret
cmp
jae
adc
outsl
or
int3
vmovshdup
fs
add
fmuls
fisubl
push
adc
mov
xchg
aaa
inc
ficompl
sbb
fistl
pop
or
leave
add
fs
and
ja
add
jae
jb
ret
repnz
rcll
push
push
sub
orl
or
out
jle
mov
ljmp
setb
ret
hlt
ljmp
call
xor
mov
jne
ljmp
bnd
push
lds
fisttpll
mov
fadd
ss
jbe
gs
dec
call
orl
jl
sbb
rolb
test
dec
insl
inc
and
sub
rcr
mov
inc
loope
mov
dec
mov
insb
je
es
cmp
out
lcall
jno
cltd
cwtl
jp
add
loop
push
call
movl
rcr
jae
and
test
mov
cwtl
out
lcall
out
cld
lret
cmpsb
insl
jb
mov
add
in
inc
pop
jmp
dec
in
mov
call
mov
addl
adc
sahf
add
adc
dec
popf
sub
in
sbb
xor
xchg
mov
xchg
mov
adc
or
mov
pop
das
lahf
test
add
or
sub
outsl
inc
xor
loop
mov
push
sbb
ret
cmpsl
sbb
stos
ret
xchg
fldcw
stos
lods
dec
push
movsb
cmp
loop
mov
cmpsb
imul
lret
daa
rcl
adcl
fisubrl
fisubrs
stos
pop
dec
cwtl
ret
imul
hlt
jecxz
add
jmp
mov
sbb
sarb
jbe
out
xchg
lcall
aas
in
stos
xor
xlat
test
cwtl
mov
pop
mov
sbb
cltd
insl
mov
dec
out
push
or
popf
cmpsl
stc
push
sbb
xor
lret
lret
dec
mov
pop
mov
xchg
pop
sbb
lods
dec
dec
xchg
mov
push
push
fistps
add
cmp
adc
jg
push
push
or
jae
lcall
sub
into
cmp
inc
sub
and
ficoml
iret
dec
inc
mov
and
jo
bound
daa
jns
xchg
call
adc
ffree
xor
adc
fnsave
lods
add
movsl
xor
mov
or
pop
push
mov
push
xchg
jne
cmpsl
pop
cli
mov
stos
cmpsb
pop
clc
aam
mov
addb
or
pop
loope
jnp
imulb
push
inc
mov
ret
scas
cltd
daa
xor
push
sahf
xor
pop
orb
pop
icebp
inc
and
and
movsb
test
aam
in
lret
and
xchg
inc
inc
adc
imul
nop
leave
dec
sarb
and
mov
add
stc
push
inc
mov
inc
repz
jnp
dec
mov
arpl
cmp
push
jp
or
pop
into
out
pop
rorb
jnp
std
mov
sti
jns
aaa
push
sbb
fiaddl
xchg
roll
pushf
js
push
push
sub
inc
je
add
outsb
push
jo
je
add
popf
stc
into
jl
mov
sti
or
insl
mov
xor
into
insb
xchg
mov
ss
insl
xor
fmull
jo
or
add
sub
js
psubd
dec
repnz
loope
mov
nopl
jp
mov
roll
cld
repz
adc
pusha
cmp
out
mov
sub
sub
cmpsl
incl
mov
mov
or
fs
xchg
mov
jb
shll
loope
jbe
aas
mov
repz
shlb
movsb
repz
in
cmp
int
dec
mov
shll
cmpsb
mov
jecxz
xor
and
cmp
cmp
push
fs
cmp
cmc
xchg
mov
sahf
aad
mov
jb
or
roll
mov
int3
lods
jmp
inc
mov
push
ret
out
das
mov
loop
adcb
mov
inc
adc
cmc
cmp
jp
mov
push
sub
addr16
jnp
daa
insl
repz
fst
push
xchg
inc
adc
ds
add
jo
rolb
and
add
jle
les
pop
test
roll
mov
xor
outsb
addr16
cltd
fcmovne
mov
cmp
pop
xlat
into
mov
mov
pop
sub
lods
mov
mov
sub
mov
or
pop
shr
mov
shlb
or
xchg
or
inc
scas
es
mov
aas
ljmp
stos
or
insl
jne
and
sbb
sbb
cmpsb
in
jo
cmp
inc
jns
mov
xlat
mov
loope
inc
in
cmp
xchg
rolb
sti
adc
adc
les
dec
subb
mov
or
push
je
fcomps
or
imul
frstor
mov
cmp
stc
and
add
subb
dec
mov
adc
fiaddl
in
mov
xor
repz
dec
jmp
inc
shlb
cmp
mov
and
in
cmpsl
jge
cltd
sbb
mov
sahf
inc
test
pop
call
mov
jae
fs
jae
mov
push
xor
mov
pop
xchg
mov
insb
pushf
mov
mov
cmp
mov
outsb
dec
push
xchg
js
xchg
cmpsb
out
js
sub
adc
xchg
mov
sub
sub
addr16
int
cmp
mov
cmp
xor
clc
es
sbb
push
std
js
js
jb
stc
push
jg
jg
push
lds
rcll
xchg
xor
nop
cmp
imul
xor
scas
dec
and
cmp
jp
iret
fwait
cmpsb
mov
ret
push
pop
push
ljmp
sbb
adc
pop
clc
pmaxsw
sbb
enter
not
lcall
adc
cmp
push
fiadds
fs
and
popa
pop
imul
shll
movsb
mov
mov
mov
sbb
test
jo
test
fimuls
xchg
xchg
xor
mov
xchg
mov
mov
xor
lret
mov
call
mov
imulb
push
loop
in
loopne
sbb
fwait
clc
jge
cmp
stc
mov
jge
cmp
mov
sbb
js
mov
les
push
pop
add
pop
cmp
jle
mov
fcmovbe
fistl
xchg
ja
adc
dec
insb
jno
iret
ja
pop
and
mov
sub
mov
sbb
or
fisubs
neg
mov
jmp
dec
xor
jmp
mov
dec
mov
mov
out
adcl
insl
jecxz
xchg
cli
inc
bound
and
mov
mov
out
and
sbb
pop
sub
sub
movsl
add
inc
into
ss
sbb
mov
inc
or
xor
jp
scas
lcall
cmpsb
or
mov
or
into
call
pop
fstpl
icebp
popa
ja
adcl
mov
cltd
leave
xor
add
scas
xchg
ja
jne
cwtl
jp
and
mov
sub
dec
sub
jg
mov
cli
out
rol
jg
sub
aam
rclb
aaa
fwait
jmp
pop
call
push
jmp
loop
andb
shll
mov
ds
inc
shr
ljmp
cmp
frstor
ret
mov
add
sahf
jne
xchg
out
jns
out
or
popl
mov
inc
shl
dec
mov
mov
rolb
addr16
dec
stos
mov
pop
xlat
sub
mov
mov
adc
jne
cs
mov
cmp
dec
sub
movlps
in
cmp
lock
test
mov
pop
out
jns
dec
xchg
mov
jl
push
aam
shll
mov
mov
test
add
cld
inc
or
pop
add
je
cmp
mov
popl
aas
inc
cmp
leave
add
loope
cmp
mov
xor
out
jnp
mov
mov
sbb
push
mov
mov
pop
cmp
ljmp
andl
das
mov
icebp
loope
pop
sarb
pop
jl
mov
jmp
lods
cmp
inc
adcl
sub
add
ja
xchg
adc
mov
cmp
loop
shrl
inc
and
pop
and
pop
icebp
sahf
mov
cwtl
daa
jo
push
xchg
popa
sbb
jb
cmp
movl
pop
mov
dec
sub
ja
loop
popa
sti
mov
data16
ds
inc
and
mov
add
gs
mov
test
lods
cs
cmp
fldl
push
cmp
dec
or
sbb
adc
lahf
repz
push
xchg
mov
or
cli
lods
iret
icebp
mov
mov
mov
stc
inc
jo
cs
cmp
rcrl
gs
cltd
mov
sbbb
in
xchg
stc
pusha
ss
out
or
dec
cmp
cli
in
pop
inc
scas
mov
data16
sub
fsubrs
mov
stos
pop
ja
lods
inc
scas
out
fmul
cmp
mov
ljmp
les
pop
inc
ret
fnstenv
das
add
jmp
imul
into
push
mov
test
cmp
rol
jecxz
adc
inc
test
test
fdivrs
ret
jge
cmp
sbb
dec
cmpxchg
fs
mov
in
sub
dec
test
ljmp
outsl
rcr
cmp
movsl
pop
push
add
ja
fstpt
stos
test
mov
add
adc
imul
pavgw
dec
pushf
mov
and
mov
insb
inc
outsb
int
shlb
test
xchg
aad
test
pop
out
and
jle
push
mov
xor
xchg
imul
subb
cmp
push
or
jmp
pushf
dec
push
jg
into
lahf
outsb
call
in
cltd
cmp
ds
or
pusha
xor
pusha
addl
insl
iret
pop
mov
mov
mov
pop
std
nop
outsb
das
insl
aad
or
out
fidivrl
mov
sbb
push
sti
lea
dec
or
out
adc
lahf
mov
pop
ja
sbb
decb
and
push
dec
add
cvttps2pi
push
xor
pop
std
lds
add
enter
xorb
popf
cmpsb
mov
mov
int
notb
test
pop
popf
scas
mov
jmp
imul
ret
aaa
test
mov
or
filds
jmp
jmp
incb
adc
mov
lods
dec
dec
into
mov
cmpl
xchg
lret
dec
mov
mov
das
je
orb
popa
call
fidivs
mov
and
fucomp
fisttps
rcrl
pop
pop
cwtl
pop
cmp
shrl
sbb
icebp
iret
jb
ljmp
xchg
adc
popa
ja
adc
test
mov
or
mov
addb
dec
cld
mov
scas
jne
mov
xor
sarb
imul
cmp
outsl
scas
mov
mov
inc
inc
out
loop
rcrb
xchg
mov
adc
xchg
and
push
arpl
cltd
inc
fs
cli
pop
das
sub
push
fbld
lock
xor
inc
xchg
mov
and
aad
pop
or
mov
dec
pop
xchg
pop
es
into
repz
xchg
mov
add
jecxz
ror
sub
into
cs
mov
push
or
cmpsl
roll
mov
popa
fbld
and
mov
out
xor
push
mov
daa
jl
jno
lahf
pop
pop
insb
inc
or
sub
lcall
jbe
stos
xchg
mov
popa
xchg
and
int3
repz
sub
addl
inc
or
das
mov
ret
xor
and
inc
inc
fcomps
addr16
movsl
in
ret
pop
mov
mov
loope
jg
pop
lret
dec
stos
movsl
sbb
mov
sub
xchg
in
pop
add
dec
dec
jns
clc
or
and
pop
or
push
dec
xchg
dec
movsb
adc
call
fdivrl
pop
call
lret
pop
pop
xchg
loop
sub
add
cmp
add
dec
rorl
xchg
outsb
and
inc
ret
rolb
add
ja
loope
gs
lods
mov
inc
push
stc
sub
cmp
jecxz
loope
mov
adc
xchg
test
xchg
mov
and
mov
mov
push
pop
and
les
push
adc
cmpsb
shrl
dec
mov
sub
mov
mov
pop
cmp
iret
xor
push
lret
jg
lock
icebp
sarb
inc
fs
inc
scas
inc
je
cmp
xlat
cli
js
orl
icebp
mov
sub
and
mov
sar
iret
mov
or
mov
mov
push
mov
aad
lret
xchg
or
dec
cmp
in
mov
and
dec
in
fildl
mov
jmp
loope
insl
int3
inc
xchg
cmpsl
lcall
pop
out
aam
dec
mov
mov
fdivrl
xor
push
inc
stos
sahf
sub
jmp
ss
jne
aad
cmpl
popf
jg
in
mov
mov
adc
leave
fcoms
adc
data16
jmp
xor
lock
mov
aam
push
xor
mov
fisubl
inc
test
shll
in
dec
push
jmp
call
das
les
push
pop
stos
pop
lods
test
or
lret
jp
sbb
jg
pop
insb
enter
push
movsl
or
sub
cli
dec
and
ret
mov
lds
pop
sub
sub
gs
call
lahf
aad
lods
push
lret
add
cmp
or
or
rcr
mov
fistpll
arpl
lods
add
cmp
push
adc
imulb
adc
je
dec
or
inc
push
mov
fldt
add
stos
xlat
stc
imul
sbb
lret
inc
pop
mov
or
pop
aad
jb
mov
pop
das
fucomi
push
cmpsl
in
stos
popf
pop
xchg
les
push
pop
cld
cmc
push
nop
dec
sub
inc
mov
stos
lods
inc
pop
add
lods
push
fstl
loope
adc
xchg
shlb
mov
mov
mov
xor
push
mov
push
outsl
nop
es
pop
rcll
jmp
sahf
cltd
ret
mov
les
cmp
push
mov
or
mov
fistl
aad
jns
xchg
leave
mov
repz
ja
jle
adc
sub
mov
jle
xorl
mov
aaa
push
dec
mov
mov
sti
popl
jecxz
or
rcrl
pop
lea
test
pop
add
or
arpl
mov
pop
jbe
add
push
dec
repz
nop
or
rorl
and
test
and
ja
adc
jl
or
push
or
scas
sbbb
pushf
and
adc
js
lods
mov
js
dec
das
mov
fs
in
in
mov
dec
bound
cmp
xchg
push
sahf
sub
iret
and
in
loope
or
jmp
aad
andl
cld
mov
sarl
push
mov
test
int3
dec
push
or
sbb
mov
dec
cmc
mov
fsub
cmpsl
sub
mov
mov
jle
mov
fsubl
popf
cwtl
and
loop
test
loope
sbb
or
xchg
daa
sbb
test
adc
cwtl
xchg
mov
sbb
push
pushf
jno
notb
jb
out
mov
sub
out
pop
mov
je
pop
out
mov
cmp
mov
movsb
sbb
andl
movsl
or
fnstenv
mov
fcompl
lods
lods
xchg
call
leave
imul
les
int
es
popf
scas
addr16
int3
rclb
nop
adc
mov
dec
dec
xor
cmc
roll
mov
cmp
sub
pop
mov
lds
aaa
jo
xchg
lret
sbb
stos
jb
shl
data16
int
data16
inc
sub
sub
sar
jmp
sub
test
jmp
test
mov
lock
inc
inc
dec
jnp
pinsrw
scas
jns
push
xor
es
sbb
das
sub
nop
or
lods
pusha
push
imul
data16
xor
add
mov
jns
gs
aam
mov
and
cmp
xchg
or
push
cmp
test
mov
dec
xchg
jo
je
sbb
out
lods
add
jnp
jae
decb
inc
scas
push
pop
mov
xor
out
jbe
mov
cmp
jne
stos
test
pop
pop
and
xor
dec
lock
jns
jge
jp
jo
fucom
mov
ja,pt
iret
xchg
xchg
adc
pop
inc
xor
in
test
ret
int
cmc
or
cmp
dec
sti
pop
loop
xchg
cmp
sub
cmp
stc
push
gs
in
xchg
scas
leave
sub
das
cmc
repz
and
inc
jge
push
push
jg
and
into
outsb
outsb
adc
adc
adc
xor
add
popa
movsl
or
es
sbb
xor
daa
into
aaa
out
stos
mov
incb
call
insb
xchg
data16
add
cmp
int3
addl
rcrl
insl
cmpsl
push
cmp
jbe
nop
add
mov
cld
sub
lret
repnz
neg
mov
inc
push
pop
dec
cmp
sti
aaa
loop
jne
xchg
mov
dec
dec
push
lret
xor
aad
rcl
xor
inc
insl
sub
jno
sub
push
je
int
xchg
mov
pop
lods
add
mov
movsb
pop
push
push
ret
pop
add
lahf
or
stc
js
and
in
icebp
mov
test
ret
lahf
add
dec
pop
aam
jge
test
push
frstpm(287
sbb
addr16
js
mull
ret
rcr
cmp
cmp
mov
jmp
jns
add
dec
sub
imul
std
dec
xor
mov
mov
xchg
or
pop
xorl
out
mov
mov
sbb
sarb
sbb
inc
aam
and
mov
jecxz
push
test
pop
add
je
scas
xchg
inc
lock
xor
loope
adc
das
mov
sahf
pop
or
add
push
jge
inc
adc
cwtl
pop
and
sbb
stc
repz
jmp
add
gs
test
stos
into
fnstsw
fcomi
and
cmc
cs
cwtl
pusha
cmp
inc
mov
insl
shrl
lea
mov
mov
sub
scas
data16
pop
jge
push
nop
aaa
cltd
push
push
or
or
inc
ret
push
mov
movl
jmp
movsl
inc
dec
sub
daa
loopne
sarl
lea
gs
xor
ja
loope
lahf
pop
mov
fs
cwtl
sbb
ljmp
adc
out
cs
and
cld
xor
inc
jmp
cld
push
push
push
repnz
sub
jno
add
dec
inc
bound
inc
ja
xorl
pop
pushf
sbb
es
fisttps
aam
xor
jnp
and
lods
addl
cmp
jge
push
in
in
movsb
in
out
cmp
sub
out
aad
jns
lahf
adc
jmp
jae
sbb
pop
push
and
aas
lahf
outsb
dec
fiadds
mov
push
jp
mov
push
xchg
daa
enter
repnz
notb
repz
and
int
enter
mov
pop
stc
scas
icebp
rorb
sbb
or
imul
cmp
rol
std
bound
dec
out
scas
stos
stos
das
xor
dec
hlt
ret
test
pop
mov
in
out
or
aaa
fimull
dec
jne
icebp
cli
in
xchg
cld
pusha
mov
push
aas
sti
insb
add
jo
push
xchg
mov
xor
pusha
mov
mov
jnp
pushf
mov
push
repnz
fiaddl
sarl
sbb
leave
adc
in
mov
or
shrl
or
push
aaa
movsb
rcl
xchg
dec
inc
stc
xchg
out
push
cwtl
cmp
aas
aaa
xor
orb
std
es
or
cmp
push
cmpsb
inc
mov
out
imul
fisubrs
int
outsl
jge
call
je
jnp
pop
ja
sbb
bound
add
mov
leave
and
outsb
pop
aaa
xor
xchg
cmp
cmp
insb
movl
ja
push
sahf
jne
add
scas
mov
out
lods
retw
das
adc
loope
sbb
fbstp
mov
fmuls
adc
push
ss
cmpsl
xchg
or
scas
pushf
repnz
or
shrb
cmpsb
subl
mov
mov
lret
mov
lret
out
push
out
xchg
mov
push
subb
add
int3
dec
sub
cmp
cld
cmp
js
jmp
cmp
lods
mov
rcl
mov
addr16
icebp
xor
loope
push
push
inc
les
cld
adcl
push
outsb
in
xchg
add
fistl
push
adc
sarb
xor
outsb
push
scas
jo
cmp
adc
jne
xchg
push
jno
inc
inc
insl
lods
push
outsl
loop
mov
mov
pop
fistps
sub
dec
xor
mov
insl
aaa
jbe
mov
ja
cmp
das
in
cmp
adc
sahf
faddl
push
xor
jns
mov
daa
dec
dec
sub
jne
mov
xchg
repz
pop
idivl
mov
rcll
cmpsb
dec
xchg
sub
lock
xor
push
push
sub
iret
jb
sbb
sbb
sbb
ss
sub
shlb
sbb
jne
in
movsb
push
ret
push
lahf
sub
dec
push
or
and
cmpsl
xchg
int
jne,pn
adc
inc
std
cmp
mov
loope
rorb
insb
sbb
adc
roll
mov
mov
xor
fidivs
mov
cmp
jmp
bound
push
jge
imul
or
arpl
ss
enter
jae
cmpsb
mov
add
test
mov
rcrl
adc
andl
sub
xchg
mov
icebp
xlat
pop
dec
jecxz
daa
cmp
dec
popa
movsb
mov
xlat
rcl
jbe
xlat
in
loope
in
jae
and
cmpsl
stos
lock
jb
cmpsl
adc
xchg
jmp
pop
xor
out
hlt
mov
jnp
loopne
and
and
hlt
mov
xor
cmp
add
mov
push
shlb
push
pusha
jle
lds
lock
push
es
fwait
push
adc
adcb
test
pop
sbb
shll
popf
jns
test
jle
addr16
cmpsl
jns
fdivrs
popf
outsb
cli
fstpl
push
push
push
int
jno
lret
cmp
pusha
mov
lcall
mov
jnp
jo
sbb
mov
xor
insb
ret
cmpsl
nop
aad
jne
inc
das
mov
mov
insb
adc
xchg
inc
sub
bswap
cmp
inc
pop
jo
nop
pandn
and
daa
movsb
stos
sbb
mov
mov
add
add
std
or
rorl
sbb
sub
sbbl
cli
lahf
pop
inc
cmp
jg
mov
imul
and
lods
mov
loope
push
dec
dec
arpl
xlat
repnz
out
push
cmp
mov
neg
pop
jb
add
sub
cld
mov
jmp
sub
add
icebp
cltd
cmp
push
inc
cwtl
mov
cli
fdivrl
add
in
mov
out
rcrl
push
xchg
in
inc
sub
pop
fdivs
aaa
int3
out
mov
loope
inc
push
xor
lcall
ret
sub
xchg
xchg
pop
sbb
je
cmpsl
jo
sti
sub
inc
xchg
adc
rol
sbb
inc
sbb
dec
xchg
imul
or
popf
xchg
xor
lds
dec
dec
or
fwait
pop
and
addr16
pop
mov
out
aaa
cmp
lds
popf
xchg
in
aaa
cmpsl
jp
or
inc
sbbb
push
mov
testb
cli
inc
adc
sbb
stos
xchg
das
jae
push
arpl
in
rorl
cmp
scas
fbld
or
inc
enter
jecxz
imul
hlt
int3
dec
or
push
lcall
mov
pop
insb
push
dec
fidivrl
inc
mov
dec
mov
ret
xchg
xor
jno
sub
mov
cmp
insl
jne
pop
and
sub
or
xchg
lods
lock
or
dec
popa
test
push
sahf
xor
dec
and
ljmp
int3
out
push
or
lret
cmp
add
xchg
sar
cwtl
mov
xchg
bound
clc
aad
lea
sti
sbb
pop
ret
ret
test
test
in
rcll
sbb
sbb
dec
jmp
sub
rorl
insb
mov
in
inc
inc
lret
loope
lods
sub
cs
dec
hlt
mov
mov
or
rcr
cs
mov
sbbb
jbe
addr16
daa
or
ljmp
div
inc
adc
ja
mov
ljmp
dec
inc
fdivs
add
push
movsl
pop
push
pop
jns
test
mov
nop
pop
andl
or
ds
jne
sbb
xor
sarb
inc
mov
push
cmc
add
cmp
das
sti
in
lds
jae
daa
ficomps
insb
or
jne
icebp
mov
test
testl
lahf
push
lcall
fcompl
jmp
lahf
add
lods
jmp
movsb
push
lds
fstl
hlt
sbb
inc
sub
add
push
lret
nop
mov
cmpsl
push
mov
add
xor
lods
cmpsl
mov
in
sub
xchg
and
xchg
xchg
dec
jbe
cmp
cmp
cwtl
cli
jle
lret
inc
jno
pop
pop
jecxz
fwait
sarb
test
push
ret
cmp
push
push
fstps
mov
mov
cmpsl
movsl
xor
sbb
shll
inc
push
or
popa
clc
fbld
shrl
mov
or
lods
pop
rcll
scas
xor
jns
js
insl
xchg
aam
push
push
lret
std
cmp
fstps
inc
sbb
sub
adc
loop
pop
mov
pop
aas
iret
pushf
fsubl
cmp
xlat
imul
jbe
jb
int3
mov
pop
xor
xchg
mov
pop
fmull
jecxz
enter
or
bound
pop
push
int
xor
add
push
mov
push
add
stos
mov
mov
call
mov
dec
jecxz
fmuls
lock
gs
xor
push
and
in
scas
xchg
fldt
adc
ljmp
imul
xor
dec
add
adc
or
push
sbb
and
mov
in
sub
sub
cs
das
in
sub
and
lods
mov
adc
ret
stos
and
xlat
push
xchg
in
adc
mov
or
loopne
call
xor
rolb
mov
inc
repz
push
push
fmull
mov
out
clc
pop
add
cmp
andl
mov
outsl
test
or
rorl
mov
test
ret
repnz
xor
add
sbb
hlt
into
test
lret
popf
ja
cmp
sbb
pop
sub
mov
mov
sbb
sbb
scas
enter
adc
int3
out
lods
jecxz
jge
add
rcrb
add
cmp
cmpsl
inc
xor
jge
pop
loope
mov
mov
mov
ret
lahf
inc
xor
or
and
push
lret
pop
sahf
into
mov
adc
cltd
pop
imulb
mov
jecxz
insl
movsl
jnp
aaa
sub
popf
jl
or
jl
mov
mov
dec
jecxz
ret
cmp
or
xlat
mov
sarl
xchg
cmc
mov
mov
mov
sbb
jbe
in
or
pop
push
std
sahf
jno
sbb
cmpsb
inc
mov
adc
stos
push
jae
mov
scas
decb
mov
clc
pop
movsb
pushf
dec
jb
shrl
adc
sbb
push
mov
clc
mov
lahf
fisttpl
inc
or
xor
sti
add
daa
inc
lock
jae
outsl
jmp
addb
in
and
adc
shlb
gs
jns
pop
cmc
pop
bnd
sbb
lods
int
popa
clc
fwait
jno
mov
fs
xchg
insb
sbb
sahf
mov
lcall
adc
or
sti
jo
lcall
gs
cmpl
loopne
pop
mov
jge
sbb
sbb
mov
cmc
out
popf
add
dec
imul
pop
sub
push
icebp
jmp
and
lds
outsb
jmp
mov
xor
fdivr
lret
stos
pop
sub
lods
add
shll
cmpsb
and
repz
dec
cs
dec
int3
mov
push
cltd
dec
xchg
push
int3
mov
cmpsb
bswap
arpl
lret
rcrb
mov
dec
cmp
fidivrs
mov
push
dec
cmpsb
stos
cmp
mov
cmc
iret
xor
inc
add
test
pop
mov
inc
test
xor
adc
push
mov
pop
add
insb
adcl
std
adc
push
push
cmp
and
ret
rolb
scas
dec
push
out
xchg
aas
hlt
scas
xchg
test
jecxz
mov
push
aaa
into
loopne
pop
pop
jmp
push
pop
fcoms
mov
comiss
sarb
xor
aad
ret
mov
lea
sahf
cmp
push
fisubrs
mov
add
shrl
adc
ja
imul
ja
xor
mov
cmp
pushf
ret
sub
adc
das
dec
sahf
out
outsb
xchg
dec
push
outsb
pop
out
pop
scas
cmpsl
dec
mov
scas
sub
push
jne
test
cmp
xor
adcb
add
add
dec
lods
xchg
mov
add
je
xchg
dec
mov
ret
insl
ret
mov
xlat
popf
ret
out
pop
sbb
mov
insb
mov
xchg
lods
xorb
push
xchg
dec
fdivs
mov
sub
mov
int
fsubrp
xor
xchg
cltd
loopne
mov
std
xchg
leave
je
je
cld
dec
jmp
push
push
loop
push
aaa
cmp
mov
mov
les
fsubrl
pop
int
xor
cmp
mov
sub
xchg
xchg
test
je
out
mov
mov
mov
sbb
hlt
mov
insl
xchg
push
insl
sbbl
mov
sbb
push
push
clc
lock
jbe
popl
enter
cmc
dec
pushf
fstl
and
pop
into
lahf
mov
dec
bound
push
ficoms
xor
push
fnstenv
add
adc
sub
ret
sub
or
loop
push
imul
das
fmuls
in
cs
out
sahf
and
ret
jns
test
push
lods
iret
mov
and
jecxz
mov
ja
xor
mov
sbb
int3
cmp
loopne
mov
test
or
in
inc
mov
daa
addr16
push
shll
cmp
xchg
loope
cwtl
dec
jecxz
popf
dec
pop
push
fsubrs
dec
out
pop
sub
in
cmpl
inc
movsb
adc
shlb
xchg
rclb
pop
ss
shlb
rclb
inc
aam
int
ss
adc
les
mov
ret
and
out
sbb
arpl
shll
inc
fiaddl
inc
or
ret
sub
inc
andl
insl
inc
inc
sti
mov
xor
or
ret
xor
bound
jl
jg
xor
and
insb
cmp
arpl
fsubl
aad
push
xchg
nop
or
lea
loop
call
xor
mov
repz
scas
dec
out
inc
cmp
testb
mov
inc
hlt
stos
fdivp
push
stos
mov
rol
push
mov
pop
and
rcrb
adc
xor
jno
dec
divl
cld
cmp
push
cwtl
mov
lret
fldt
in
test
sub
add
jns
jo
inc
outsw
pop
inc
mov
pushf
movb
scas
hlt
bound
inc
ja
push
xchg
icebp
or
rorb
xchg
push
sub
jmp
subb
inc
popa
fwait
sbb
and
aaa
lahf
popf
cmpl
add
cmp
push
cld
mov
mov
or
push
jbe
or
insb
and
lcall
mov
imul
push
fnstcw
fwait
aam
rolb
pop
xchg
cli
imul
fsqrt
addr16
dec
ljmp
stos
jg
jne
xchg
pop
jp
sub
out
nop
jl
sbb
mov
sub
mov
cmc
jecxz
subl
cmpsb
or
cmp
faddl
push
into
andl
xorb
fcomi
aam
pop
sbb
ret
imul
inc
lock
sub
adc
pop
je
push
and
jb
divl
sub
xor
cmp
test
push
pop
call
insb
icebp
xchg
push
fs
push
hlt
mov
ret
push
xchg
ret
lea
xor
push
dec
xchg
aaa
and
repz
push
jg
sub
sbb
adcl
push
in
pop
jecxz
xor
cmp
test
add
adc
cwtl
and
jne
sbb
out
fs
mov
pop
rol
pushf
fistpl
addb
pushf
mov
andb
or
add
loop
out
int
and
pusha
jbe
lock
enter
xchg
push
xchg
lret
sub
inc
enter
sub
test
push
bound
sbbl
cmp
push
mov
sub
push
clc
lret
adc
and
xchg
cmp
jo
enter
xlat
cmp
ja
jl
mov
jp
jb
and
sahf
ret
sub
xor
subb
mov
xor
push
test
push
ljmp
jnp
shrl
fwait
or
lods
out
push
cld
jmp
dec
ret
xchg
push
xorb
in
xchg
in
xchg
sub
lock
cmpsl
xchg
dec
lahf
movsl
and
adc
stos
push
add
int
fstpt
mov
imul
ret
cmp
push
sub
mov
mov
rorb
mov
or
scas
fdivp
mov
cli
and
int3
adc
push
push
push
inc
les
imul
adc
jg
mov
pushf
jbe
loop
fistpl
out
lret
sub
loopne
dec
push
pusha
iret
loop
push
bound
movsl
es
loop
int
mov
xor
cmp
push
xor
mov
jl
add
fiaddl
lock
cmc
pop
ss
mov
xchg
filds
enter
mov
outsl
cltd
add
dec
fisttpl
inc
pop
fs
enter
mov
dec
mov
dec
mov
stc
mov
rcr
insl
rclb
add
loop
inc
negb
mov
out
ljmp
fisubrl
loope
lret
xchg
ret
test
pop
mov
mov
enter
push
lea
minps
outsb
dec
push
pop
fistps
sbb
cmpsb
or
push
divb
pusha
ja
inc
xchg
divb
fwait
dec
xchg
push
aam
adc
jle
pushf
sub
xchg
push
add
aaa
xchg
mov
fistpl
cmp
loope
dec
ja
mov
bound
jp
or
pop
das
sbb
int
or
add
out
jle
adcl
ror
xor
sub
mov
ret
subl
fbstp
decl
xchg
dec
pop
mov
xchg
push
lretw
repz
sub
negl
dec
frstor
aas
pop
and
xor
cmp
fbld
mov
clc
xorl
mov
cltd
mov
pusha
sbb
aam
stos
pop
jns
pop
out
sub
or
xor
orl
sahf
add
jb
shlb
fs
test
push
pop
or
push
loope
xchg
sub
addr16
or
adc
add
or
popf
mov
fistpll
movsl
fildll
and
into
xchg
cltd
dec
ljmp
int3
xor
mov
pop
rolb
push
out
sbb
std
scas
dec
loopne
push
sti
sub
leave
jb
cmp
xchg
pop
mov
fbstp
sbb
test
fmulp
ljmp
adc
xchg
lret
nop
nop
sbb
fstpt
sub
cmp
and
cmpsb
xchg
aas
lods
fsts
pop
ds
idivb
out
jmp
frstor
jecxz
jp
jbe
dec
les
xchg
das
push
ljmp
iret
mov
insl
stos
inc
test
or
push
push
outsb
jmp
add
xchg
mov
pop
jae
mov
shrl
pop
mov
push
std
test
icebp
mov
inc
sub
out
inc
cmp
mov
pop
or
imul
popf
xor
cmp
sbb
and
cmpsl
xchg
pop
cmpsl
mov
stos
pop
lret
mov
xchg
and
jo
dec
mov
push
jae
sbb
push
sub
in
pop
insb
add
mov
cli
pop
jle
fwait
push
pop
cmp
add
mov
stc
xchg
call
scas
and
bound
aam
ljmp
cmpsl
adc
in
outsl
inc
in
pop
jo
adc
inc
push
rclb
leave
ret
sub
bound
sti
cmp
ja
add
xor
jmp
pop
mov
mov
push
dec
inc
xchg
cld
dec
add
sub
data16
out
aam
fisubrs
adc
shlb
in
add
std
ss
xor
fmull
pop
test
push
in
sub
mov
jmp
adc
mov
mov
mov
ds
sarb
jle
mov
sub
nop
lcall
cmp
or
adc
in
fsubl
mov
pop
jmp
call
movsl
xor
scas
hlt
push
in
fsts
mov
cmp
sbb
push
xor
out
dec
add
in
jecxz
push
and
mov
mov
add
and
sub
ficoml
outsl
addl
aas
xor
push
insb
leave
out
jo
enter
and
mov
sub
or
shlb
lret
stos
sbb
add
rclb
jge
cmpsl
stc
rorb
in
and
and
into
sar
iret
push
mov
aam
movsb
cmp
arpl
xor
inc
sbb
adc
mov
test
jle
mov
mov
fwait
es
test
mov
cmc
inc
inc
inc
jne
test
addr16
sub
loope
vpslld
mov
sub
das
push
or
mov
jp
popf
jp
shr
sbb
pop
jle
add
and
sbb
push
lahf
dec
sbb
and
and
mov
repnz
push
cmp
insl
nop
jecxz
and
bound
mov
adc
pop
inc
stos
fisubs
mov
shrl
cmp
push
outsb
scas
nop
mov
clc
fcmovnu
push
andl
insb
shl
inc
cmp
ss
mov
loop
push
ss
stos
adc
stos
arpl
cmp
dec
test
test
in
loop
mov
loopne
sbb
cltd
loop
xorb
cmp
aad
xorb
movsb
dec
jnp
jns
jg
adc
xor
fst
frstpm(287
mov
xchg
dec
ljmp
sub
test
or
popf
aad
xchg
dec
out
outsl
outsl
push
adc
orb
xchg
dec
mov
std
insb
iret
push
xchg
loop
loopne
inc
insl
cmc
xor
or
mov
adc
adc
invd
fwait
push
sub
rol
lcall
call
push
add
dec
inc
rcll
pop
xchg
cmp
adc
xor
faddl
lret
cmp
push
sub
pop
jae
or
pop
pop
dec
xchg
es
sub
push
js
mov
in
popf
ret
sbb
frstor
std
add
call
popf
icebp
pop
mov
mov
pop
jmp
lods
sarl
inc
mov
pop
hlt
pop
jge
dec
jo
sub
mov
data16
les
cli
xor
mov
mov
cmp
mov
mov
loopne
cmpsl
inc
dec
mov
jne
xchg
loope
mov
mov
hlt
fcmovbe
mov
jbe
add
mov
sub
inc
arpl
lods
ds
out
in
or
mov
mov
adc
mov
arpl
xchg
cmp
aaa
aam
cmovle
xchg
xor
je
fsubs
stos
push
cld
pop
jns
xchg
or
je
jmp
sub
test
mov
pop
dec
lods
cmp
in
in
sbb
sub
ja
xor
cmp
inc
ja
fs
mov
leave
xchg
or
mov
mov
mov
xor
rcll
test
ret
mov
imul
jno
lods
out
push
loop
insb
je
sbb
sub
in
jp
stc
cmc
push
mov
adc
adc
cmp
sti
add
repnz
test
mull
cmp
cmp
jmp
outsb
mov
sbb
stos
cmp
adc
inc
out
ud0
lods
fldcw
je
and
in
sub
stos
jo
jb
loop
jns
lcall
lea
or
gs
mov
push
push
test
sahf
jae
scas
scas
xchg
scas
jp
mov
jle
add
sub
popf
and
xchg
sbb
out
inc
mov
fiaddl
stos
sarb
popf
jns
scas
xchg
cmpsb
nop
push
mov
adc
or
jae
jb
xchg
cmp
lods
nop
test
mov
cltd
lret
inc
loope
test
pushf
push
repz
push
cmp
out
xor
addr16
jmp
fsubrs
fimull
cwtl
add
jb
pop
inc
roll
pop
or
sub
aam
ja
sbb
mov
adc
enter
xchg
jle
xor
test
loopne
aaa
and
fcoml
out
aam
mov
aaa
adc
mov
xor
xchg
rclb
xchg
cmpl
dec
test
clc
ror
out
out
sub
cmp
pop
clc
pusha
or
jl
fwait
dec
mov
lock
lds
loopne
rclb
mov
in
push
test
xchg
xchg
add
mov
sub
xor
aaa
aas
jl
mov
int3
xor
insb
mov
data16
add
sti
adc
xchg
mov
or
jns
jae
cld
adc
mov
inc
pop
js
mov
shll
xor
jl
call
aaa
fucomip
sbb
xchg
jbe
test
mov
and
mov
icebp
add
enter
mov
int3
andb
sbb
ret
push
cmpb
je
fisttps
jae
push
xchg
and
fstl
movsb
mov
imul
push
aaa
mov
jl
dec
stc
jmp
int
push
sub
mov
or
out
xchg
or
pop
outsb
call
jno
sbb
lret
loop
xchg
or
daa
mov
cmp
sbb
outsl
loope
fldcw
push
addr16
lock
pop
fadd
popa
ret
sub
in
addr16
xchg
jne
push
clc
xchg
roll
push
in
imull
pop
lock
imul
dec
sub
dec
popa
xor
out
mov
jns
pop
loope
sti
subb
cld
push
loop
rclb
jge
test
push
mov
aas
int
pop
orb
enter
mov
inc
adc
jno
cmpsl
jl
sti
out
jo
adc
adc
loop
pop
test
lock
xor
inc
gs
lea
pop
jbe
test
and
cmc
js
xchg
in
dec
jbe
lcall
int
sbb
pop
inc
notb
rolb
push
popa
cltd
test
mov
dec
sbb
int
inc
mov
imul
mov
out
cld
idivl
jp
dec
cmpsb
outsl
add
test
ss
cli
pop
push
jmp
ss
dec
outsb
insl
push
cmp
jns
inc
jne
lock
inc
das
mov
bound
cmp
push
mov
pushl
jbe
jle
lret
or
mov
jno
arpl
pop
loope
in
xchg
pusha
pop
out
adc
push
and
idivl
mov
lret
hlt
add
mov
xchg
cmp
ljmp
jae
das
repnz
add
call
out
mov
test
mov
sub
jge
and
xchg
sbb
jge
outsb
and
ret
xchg
pop
std
stos
add
pop
and
lock
hlt
cmp
sahf
std
jle
daa
dec
ficoms
mov
loopne
lcall
xchg
cmc
mov
lcall
mov
stc
and
in
subb
adc
cmp
das
mov
lcall
ljmp
bound
out
mov
mov
aas
and
xor
and
in
lods
sub
xor
lock
test
daa
sub
fsts
movsl
into
test
lods
clc
scas
icebp
int
rcrl
data16
lcall
cmpxchg
jnp
jnp
dec
scas
push
cwtl
sbb
popf
testb
sub
cmp
xor
dec
insb
inc
cltd
je
repnz
arpl
testl
mov
ljmp
je
arpl
xlat
mov
adc
into
xchg
fcmove
push
sub
cmp
mulb
int
push
fmuls
jb
push
inc
mov
cmp
mov
cld
inc
sbb
pop
jne
adc
and
mov
jbe
rclb
and
psubd
add
imul
mov
into
or
mov
pop
lods
lods
adc
pusha
ja
pop
push
icebp
push
sub
stos
rclb
roll
xchg
and
cmp
xlat
nop
mov
int
nop
push
mov
dec
mov
dec
xor
insb
xchg
icebp
push
addb
mov
mov
cmp
cwtl
cwtl
sub
shll
inc
jbe
pop
or
ljmp
dec
loopne
int3
jns
pop
add
lods
arpl
or
cmpsb
out
cmpsl
pop
sarb
inc
sahf
sbb
mov
pop
ja
sti
xchg
int3
lea
push
loopne
cmpsl
into
pushf
push
out
fnstcw
aaa
mov
pop
lea
shll
not
xchg
sub
in
mov
leave
shll
and
loope
mov
mov
insb
pop
xchg
fs
sub
pop
push
cld
push
jns
mov
inc
clc
ror
dec
push
mov
cmpb
lods
fisttps
mov
dec
dec
call
cmpsb
push
mov
xchg
add
jp
xchg
sub
push
or
mov
jb
movsl
adc
pop
and
rorb
dec
cmp
pop
jae
push
cli
cwtl
mov
je
push
test
push
js
add
adc
mov
sbbb
pop
xchg
add
xchg
das
neg
xor
push
jmp
addb
stc
aaa
cmc
sahf
hlt
int
xchg
jb
sbb
jno
or
sarl
outsl
call
icebp
pop
mov
iret
mov
cmp
outsl
xchg
add
inc
sbb
jo
lods
mov
and
mov
imul
scas
dec
jge
dec
mov
push
adc
cmc
mov
repnz
loope
xlat
xorl
sahf
pushf
jns
jns
adc
pop
jb
stos
mov
test
mov
in
jb
inc
mov
push
imul
mov
and
cld
and
and
jge
pusha
jae
ljmp
rclb
jo
icebp
sub
jge
test
rorb
ss
mov
loop
addb
cmp
shl
jl
enter
push
mov
sub
inc
add
mov
stc
cld
mov
mov
aam
push
lcall
mov
xor
cmp
ret
insb
jno
test
lret
lahf
orl
pop
inc
in
mov
leave
in
pop
add
sbb
cmp
daa
push
ljmp
push
cmpsb
fwait
ljmp
fwait
xchg
push
inc
daa
pop
mov
or
and
ficoms
pop
hlt
aam
mov
dec
pop
scas
pop
add
lret
sti
ss
cmp
es
sub
js
sub
inc
ja
pushf
or
pushf
mov
xchg
clc
lcall
in
pop
mov
cmp
xor
hlt
and
sbbl
lahf
mov
pop
adc
test
jb
ljmp
dec
mov
add
dec
stc
jo
stos
mov
into
lahf
sbb
and
es
xchg
cli
mov
add
or
scas
gs
pushf
popa
or
out
scas
pop
je
dec
int
jmp
push
jne
call
loope
push
add
out
aas
xor
xchg
bound
sbbl
cmp
in
push
ja
popa
cmpsb
lods
pop
push
out
sbb
sbb
jg
ret
test
into
xchg
adc
in
sbb
out
shll
add
jmp
mov
movsb
in
mov
add
jmp
jg
sub
insl
rol
jg
xchg
adcb
in
std
jns
test
dec
leave
jbe
pop
inc
mov
or
and
lcall
insl
repz
pause
sbb
cltd
das
sub
and
fbstp
jp
ja
fnsave
dec
cmpsl
shl
fadds
fsubrs
or
mov
mov
xor
scas
or
rorl
mov
inc
pop
jl
lcall
cmp
push
icebp
xchg
adc
fwait
scas
pushf
bound
fildl
cmp
aam
push
pmaddwd
mov
stos
aam
fcoml
psllq
scas
fisttps
mov
xor
or
sbb
iret
in
adc
jle
hlt
mov
add
test
mov
or
jae
mov
data16
push
in
fidivs
inc
push
xchg
and
and
out
inc
xor
test
and
es
dec
xlat
rcr
lret
hlt
push
pop
pop
imul
cmp
repz
addb
and
fldenv
adc
arpl
pushf
das
dec
xchg
mov
cli
xchg
js
dec
mov
sahf
lods
fldenv
inc
push
lcall
test
pusha
enter
inc
rcll
push
adc
xchg
adc
ss
push
mov
adc
add
dec
cmp
push
cmp
scas
insb
xchg
mov
mov
rep
imul
jo
jbe
xchg
mov
sub
ljmp
pop
xor
push
and
xor
jge
push
push
jb
and
adc
stc
and
jns
sub
popa
out
outsl
movsb
cs
shlb
ret
lea
xchg
mov
jb
daa
lahf
mov
pop
mov
xor
xor
in
sub
sahf
call
sbb
clc
jle
jae
xchg
mov
jge
mov
repz
sahf
xchg
popa
mov
mov
cmp
lock
das
loope
push
mov
test
ret
loope
pop
xchg
jmp
sub
adc
push
pushf
cmc
cmp
push
cmpsb
stc
push
xchg
pop
pop
sbb
imul
add
add
je
sbb
push
in
rcll
sbb
ret
popf
inc
cmp
xchg
add
loopne
testb
adcb
push
out
imul
push
pop
addr16
sub
lock
incl
nop
pop
popa
push
cmp
adc
das
sub
mov
enter
rorl
fldcw
cltd
imul
jl
add
xchg
sbb
jnp
mov
imul
cli
adc
out
test
cmpsb
push
adc
fcmovnbe
adc
mov
fnstcw
fisubs
push
fsubrl
and
aas
adc
lret
int
jne
mov
imul
arpl
rorl
sub
sbb
jecxz
sub
outsl
lea
orl
cwtl
mov
sbb
xor
ljmp
xchg
xchg
jecxz
jnp
pop
mov
mov
mov
nop
cmp
pop
fsubp
dec
inc
int3
shrb
mov
in
mov
sbb
orl
adc
arpl
and
xorl
out
pop
pusha
dec
push
iret
iret
sti
mov
cmp
in
jno
or
push
inc
mov
inc
ss
jecxz
andb
fnstenv
push
push
in
cmp
fisttpll
xor
and
xchg
loop
aas
xor
inc
xchg
xchg
adc
fs
mov
insb
xchg
bound
fwait
data16
xlat
jecxz
scas
xlat
arpl
inc
xchg
sbb
push
pop
out
dec
lcall
fsubrs
imul
out
pop
mov
jo
testb
xor
jp
fcmovnu
enter
loop
lods
add
push
scas
push
mov
inc
gs
jns
cmp
mov
cmp
test
pop
push
sub
loopne
jb
push
ljmp
fildll
mov
cmpsl
xor
xchg
lock
imul
fnsave
sahf
push
mov
inc
fs
add
dec
lods
xlat
cli
sbb
add
loopne
sbb
or
pop
leave
ret
dec
dec
xchg
xor
jae
lret
jbe
lea
inc
imul
mov
lea
add
mov
lret
ja
push
mov
or
add
rolb
pusha
test
int3
call
fimuls
xor
mov
subl
je
xor
push
mov
cwtl
popf
mov
lds
and
scas
jg
rcrl
xor
fs
cs
ljmp
xchg
dec
movsb
inc
cmpsl
rcll
push
aaa
pop
das
scas
popf
push
or
mov
push
inc
inc
jae
add
push
xchg
jne
sbbb
stc
or
outsl
jg
test
lcall
stos
cmp
push
std
mov
pusha
mov
or
out
add
imul
dec
cmp
xchg
xor
push
sub
add
sarl
mov
loopne
aaa
mov
mov
inc
add
andl
int
imul
fbstp
cmp
stos
adc
mov
and
and
inc
xchg
xchg
mov
imul
insl
int
sbb
lcall
jp
pop
lret
decb
mov
scas
sub
jp
mov
sub
faddl
idivb
pop
sbb
popf
xor
daa
notb
ss
pop
inc
mov
mov
jne
pop
push
cmp
js
push
sub
mov
jl
clc
dec
stos
lods
add
xlat
xchg
and
sbb
xchg
lret
mov
leave
push
dec
shlb
xchg
xor
bound
in
cli
mov
jnp
push
sub
mov
aad
cmp
loopne
sub
pop
sbb
push
lret
and
divb
inc
cmpsl
out
inc
lcall
ret
cmpsb
repnz
movsl
or
mov
adc
daa
test
xor
ret
push
push
int3
xor
and
popf
jnp
push
mov
cmp
std
lcall
push
cmc
jge
adc
shll
mov
stos
mov
xor
movsl
mov
sub
dec
jle
cmp
adc
xor
or
loop
dec
lds
std
mov
pop
je
dec
adc
lahf
cltd
jmp
dec
loop
leave
mov
out
lea
jb
cli
or
or
imul
sbb
imul
inc
jmp
xchg
push
xor
add
mov
psubusb
into
inc
ret
out
mov
xor
sub
jne
loopne
mov
mov
push
adc
mov
lahf
inc
mov
sarl
adc
jno
call
inc
or
flds
movsl
mov
jne
out
cmp
lahf
inc
daa
fbstp
push
test
push
mov
xchg
fsubr
or
fbld
test
loop
jns
adc
mov
push
ret
xorl
mov
sub
or
push
test
and
push
orl
out
inc
in
fcompl
in
int
cmp
xchg
in
xor
push
dec
movsb
and
mov
cmp
pop
sbb
aaa
mov
ja
add
decb
cmp
clc
jp
push
mov
ja
mov
add
sub
pop
mov
ljmp
xchg
sub
cmp
orb
mov
cwtl
lcall
rol
call
jmp
fistpll
outsl
adc
pop
jp
iret
shr
mov
inc
rclb
leave
pop
pop
out
pop
shlb
dec
repnz
cmp
test
sub
hlt
pushl
ret
inc
dec
cmc
mov
push
or
jne
lahf
push
cmc
scas
inc
aaa
and
dec
fs
into
push
sbb
pop
inc
add
cs
push
mov
xor
lea
pushf
xchg
sub
inc
movsb
mov
inc
or
out
es
loop
loope
jecxz
mov
mov
pop
stos
dec
sbb
xlat
inc
movsb
mov
cs
mov
jge
adcl
clc
fnstsw
mov
push
shl
jnp
adc
cmp
mov
fmul
in
frstor
ss
fwait
jg
loope
xchg
mov
fwait
aas
pop
push
inc
cmp
loop
sbbl
shll
push
adc
js
push
call
pop
and
test
fldenv
mov
fnstcw
push
in
fwait
or
pop
mov
jp
push
xor
shrl
cld
add
sub
xchg
xchg
insl
jno
repz
cli
mov
into
xchg
jae
imul
outsl
cmc
lods
add
sbb
or
or
dec
or
or
mov
dec
dec
or
icebp
inc
xchg
xor
rorb
mov
iret
jo
sarl
test
push
test
dec
adc
jecxz
addr16
sub
pop
adcb
lock
int3
ret
jbe
push
scas
dec
mov
xor
add
add
jo
mov
sub
fldcw
pop
inc
aad
mov
jbe
dec
and
cwtl
out
xchg
repnz
mov
rcll
sub
addr16
jle
pushf
mov
js
adc
sti
fistpll
fsts
mull
movsb
inc
sub
jb
je
out
and
cs
and
incl
enter
cs
ds
loop
jo
sub
mov
out
push
fcoms
mov
pop
lret
mov
lock
push
pushf
cltd
je
adc
adc
aaa
ljmp
sbb
lahf
ret
mov
cs
push
sti
mov
sar
sub
loopne
gs
nop
andl
pop
aaa
and
cli
les
js
xchg
sti
adc
lods
jbe
inc
mov
cld
lcall
push
in
mov
shr
or
xchg
dec
sub
jg
out
addr16
imul
and
imul
js
cmp
into
mov
push
sbb
xchg
stos
pop
push
je
sbb
xorl
lods
rcll
xchg
out
movsl
jae
mov
sub
mov
or
or
and
sti
dec
push
cmpsl
push
movsl
mov
jb
inc
pop
sub
pop
pushf
jo
or
xchg
cmpsl
jb
icebp
aas
jle
jge
popa
sub
jecxz
mov
cmp
shlb
inc
inc
mov
arpl
mov
rorb
push
or
and
shll
hlt
es
pop
imul
cmp
dec
notl
sub
cmpsb
incl
push
jnp
test
mov
jle
mov
lcall
xchg
inc
pusha
or
clc
cmc
dec
mov
pushf
and
in
aas
in
out
in
iret
mov
dec
stos
mov
xchg
xchg
inc
jle
enter
cltd
call
cmpb
loope
fisttps
mov
roll
mov
push
jnp
repz
fs
stos
int3
xchg
in
pop
cmpsl
lahf
loopne
and
ds
jne
fcoml
inc
insb
popa
push
fstpt
scas
insl
push
xlat
sbb
inc
inc
xor
dec
fwait
add
push
inc
sahf
mov
clc
pop
push
movsb
adc
jecxz
sub
ds
sub
inc
inc
clc
cld
inc
daa
xor
cmpsl
pop
mov
xchg
mov
pop
rcl
nop
pop
shll
out
push
movsl
xchg
add
and
push
push
loopne
jnp
mov
das
xchg
iret
movb
add
int
dec
push
imul
in
mov
inc
loopne
call
and
orb
jbe
insl
xchg
dec
mov
ffree
call
dec
and
shlb
cvtps2pi
test
or
add
or
cmp
roll
pushl
adc
stos
js
push
ret
push
dec
sbb
rorb
ljmp
cmp
popf
ret
pop
pcmpgtw
clc
dec
adc
jbe
movsb
inc
xchg
add
dec
loope
roll
pop
xchg
sub
cld
mov
mov
push
mov
hlt
inc
sbb
or
sub
into
push
lahf
adc
scas
insb
or
fucomi
pop
out
add
and
sub
stc
rcr
jl
sub
jbe
loopne
or
sub
inc
jge
mov
mov
cmpsb
jp
cmpsb
pop
push
pop
mov
pop
das
push
orb
xor
jnp
rcrl
push
mov
testl
cld
test
mov
dec
mov
arpl
fcom
enter
pushf
add
adc
pusha
cmp
cmp
add
inc
mov
jae
or
push
int3
les
fcoms
sbb
lock
or
adc
xlat
mov
sarl
iret
movsl
nop
stos
pop
sub
orb
mov
pop
setnp
pop
xchg
mov
mov
in
sahf
push
fwait
sbbb
xor
mov
xorb
cli
jl
push
pop
pop
mov
mov
sub
test
sbb
mov
gs
dec
mov
and
imul
fldl
add
pop
outsb
adc
popa
cmc
push
mov
int
sbb
sarl
inc
out
push
pop
jns
dec
popa
inc
fwait
sbb
roll
mov
lret
sub
mov
repz
mov
mov
sub
js
cwtl
mov
test
or
mov
mov
xchg
or
ss
cmp
fwait
imul
inc
out
test
das
jl
shrl
mov
ficoml
xor
js
xor
cmpsb
aad
pop
rol
test
cli
mov
xchg
cmp
sub
lock
cltd
mov
pop
aad
cwtl
sbb
mov
mov
ret
jg
jnp
test
and
or
xchg
rcll
les
movsl
xchg
addr16
pop
mov
test
pop
pop
push
and
add
mov
pop
jg
scas
adc
push
rcrl
popa
bound
jo
sbb
clc
pop
fstp
outsb
or
lcall
and
jb
ret
aaa
imul
popf
xchg
cmp
adcl
dec
pop
insb
sbb
cmp
scas
xchg
add
test
xorl
lods
pop
mov
pop
decb
loope
and
ss
add
cmp
mov
or
clc
das
xchg
fidivrs
xlat
fwait
push
sbb
cmp
mulb
xor
or
mov
es
lods
outsb
sbb
aam
add
stc
in
xor
xchg
push
xchg
ss
das
sbb
push
xor
mov
aas
cwtl
push
push
into
int
push
test
popf
mov
cld
das
dec
stc
jae
fildll
add
sub
loopne
repnz
repnz
jl
test
sbb
push
xchg
dec
mov
jbe
cli
mov
dec
sbb
gs
aam
mov
fcoms
cmpsb
ret
mov
mov
cld
xchg
add
lods
xchg
repz
in
stc
sarl
add
jmp
fcoml
hlt
or
shrl
divb
sub
les
pavgw
pop
loopne
sbb
clc
daa
aam
push
adc
push
lret
or
pop
push
xchg
ljmp
and
test
and
inc
inc
divl
xor
rolb
popa
pop
addb
popf
mov
xlat
xchg
jg
or
jge
mov
ja
push
mov
sub
inc
aaa
dec
dec
sub
push
pop
rcl
mov
out
mov
out
stos
je
cmpsb
clc
ss
testb
dec
and
push
jp
mov
adc
mov
ljmp
out
les
testb
es
ljmp
sti
fwait
ja
dec
xchg
xchg
imul
pushf
jecxz
push
xorl
mov
push
mov
in
ret
icebp
or
jmp
fadds
mov
lods
mov
sarb
cmpsb
fildl
xlat
mov
lods
mov
int3
out
daa
jne
ret
aaa
dec
add
sub
daa
in
mov
sbb
cmp
jl
xchg
mov
shr
inc
mov
imul
in
xchg
aas
jb
aas
sub
mov
movsl
pop
adc
aam
mov
and
push
push
jne
pop
or
shl
clc
cmp
sahf
iret
cmp
pop
sub
shll
mov
clc
inc
or
les
xor
movsb
pop
mov
adc
mov
jg
sub
sub
jmp
movsl
pushf
dec
sysenter
push
test
in
adc
scas
push
loopne
inc
fcmovbe
sbb
pop
popl
add
das
jno
dec
cmp
imul
jo
idivl
leave
or
lock
mov
xor
sar
push
cmp
call
sbb
sti
rol
lods
cmp
and
outsb
pusha
mov
xor
adc
add
cmp
cmpsl
mov
push
jno
cli
adc
daa
scas
sbb
stc
fwait
std
decb
push
mov
dec
call
push
aad
push
cmp
lods
fs
fadds
push
js
aad
shlb
mov
ja
add
inc
jmp
fisubs
aaa
or
push
adc
int3
sub
cmp
repz
test
jmp
cmp
and
stos
gs
dec
mov
mov
xor
lret
in
xor
lret
inc
adc
inc
out
xchg
push
js
push
ja
ret
mov
cmp
inc
pop
cld
add
ss
push
shlb
jmp
push
pop
movsl
xor
pop
cmpsl
das
sti
lds
ljmp
in
adc
leave
icebp
adc
je
sbbl
push
cli
out
and
aam
aaa
add
xchg
push
pushl
add
test
aad
out
into
cmp
popa
pop
lock
int
dec
sub
lea
ds
pusha
mov
in
xchg
xchg
or
mov
ljmp
movsl
jae
push
jne
orl
in
dec
dec
mov
jmp
push
sub
jo
pop
mov
fmuls
daa
mov
fs
and
fwait
test
xchg
xor
gs
sub
je
ljmp
loopne
mov
test
mov
dec
sub
xlat
loop
rcrl
std
js
int
dec
or
push
mov
repz
mov
jb
test
fistpl
xchg
mov
clc
repz
fs
pusha
test
push
pusha
cmp
popa
or
ret
xlat
mov
mov
lods
insb
push
decl
movsb
dec
dec
add
cwtl
fstpl
add
jl
xlat
hlt
inc
shrb
dec
jmp
mov
or
adc
mov
outsb
push
icebp
push
inc
sbb
cmp
or
xor
rcl
push
hlt
inc
sti
jg
xchg
sub
stc
loope
std
jne
push
leave
pushf
test
fdivrp
push
repnz
insl
fs
xchg
xor
addr16
cmpsb
mov
popf
fs
and
sbb
pop
xchg
cmp
and
cmp
and
push
mov
xchg
or
stc
inc
dec
lods
dec
fdivs
ret
sbb
or
push
push
inc
lahf
cmp
clc
adc
pop
jns
xchg
mov
mov
and
insl
scas
arpl
cmp
mov
aad
lret
mov
dec
adc
outsl
jle
xor
stc
mov
jmp
mov
jnp
cmp
sub
aad
sub
add
ljmp
testb
xchg
push
fsub
mov
mov
inc
add
test
and
mov
aas
outsl
int3
cmp
mov
and
scas
popf
int3
cs
mov
in
cmp
sbb
mov
mov
jl
sbb
xor
mov
jg
loopne
test
jne
les
pop
xor
into
std
cmp
cwtl
mov
out
fdivrl
test
cmp
mov
inc
jbe
int3
xor
jno
cmc
cltd
pop
aaa
mov
ret
loop
in
test
push
jge
jg
mov
xor
lea
jle
pusha
xchg
xchg
fsubs
div
adc
jae
mov
push
and
inc
mov
scas
addr16
scas
out
shll
xchg
mov
xchg
fistl
loop
lret
movb
div
fwait
pop
cmp
pop
add
jg
in
movsb
cmp
jecxz
inc
xchg
idivb
js
addr16
dec
lret
vmwrite
lea
leave
ret
push
dec
mov
daa
mov
clc
pop
jbe
rep
jg
jp
shrb
or
xorl
sbb
clc
std
jmp
jle
inc
ss
xor
jns
les
incb
pop
jnp
adc
in
push
lcall
jg
in
fs
add
or
js
sbb
call
mov
addr16
fimull
mov
inc
jns
outsb
xchg
xchg
or
imull
xchg
push
pop
lods
insl
sbbb
xchg
ljmp
mov
inc
gs
adc
xor
inc
mov
addr16
or
cld
mov
xlat
bound
jnp
arpl
adc
shl
mov
add
hlt
test
neg
mov
insl
stc
shlb
cltd
call
jecxz
sbb
sbb
into
inc
fwait
insl
inc
xor
and
roll
mov
insb
lret
popa
in
loopne
idivb
adc
inc
or
aaa
scas
loope
xchg
push
cmpsl
shlb
mov
pop
cld
mov
adc
mov
adc
adc
js
pop
enter
jg
xchg
mov
push
or
lahf
sbb
add
out
rcrl
ret
ljmp
lea
fsub
out
icebp
data16
inc
pop
and
xor
and
aam
xchg
es
out
je
push
mov
pop
in
inc
or
inc
pop
sub
je
clc
adc
pop
inc
push
andl
sub
mov
dec
lret
cli
fwait
mov
in
jle,pt
add
sbb
cltd
sbb
loope
cmp
fisttpl
jb
stc
mov
xchg
test
dec
ds
iret
pop
std
je
aas
pop
cmp
push
mov
sub
mov
aaa
add
sahf
leave
mov
repz
pop
dec
or
xor
mov
aaa
inc
sub
mov
push
cltd
inc
pop
rorl
and
and
insb
daa
sub
int
add
movsl
mov
roll
and
inc
xchg
imul
fsubrs
negl
dec
insl
xchg
sti
pop
mov
pop
push
cli
sti
lahf
cmp
pop
lea
push
fimull
es
adc
and
in
rorb
and
roll
cmp
push
or
inc
rclw
sti
mov
mov
inc
outsl
xchg
mov
push
dec
inc
repz
push
mov
mov
pop
cli
sbb
test
or
cmp
imul
pop
or
mov
sarb
mov
push
lret
pushf
mov
jge,pt
shl
cs
out
cmpl
cli
mov
sub
jae
pushf
and
mov
roll
cmpsb
std
imul
stos
cmc
addr16
imul
jbe
scas
pushl
push
imul
mov
pop
pusha
xchg
push
clc
sbb
jmp
mov
fimull
lods
stos
or
in
fnstsw
arpl
jne
mov
lret
pop
mov
loopne
mov
repnz
adc
out
add
xchg
clc
int3
test
and
and
ds
shl
push
cld
jp
stos
sbbl
or
dec
or
fidivrs
daa
int
dec
lahf
je
sub
and
add
int3
mov
fwait
xchg
fmull
push
cmc
imul
pushf
in
jno
pushl
cld
test
add
cmp
mov
shlb
repz
cmpsl
icebp
sbb
int
loope
jle
inc
or
adc
test
icebp
aad
jnp
lret
data16
jns
test
cmpsl
sahf
xchg
shll
pop
dec
aad
cli
sub
push
bound
mov
xor
mov
adc
sbb
fcomps
cmp
call
mov
xor
call
fsubrp
das
jp
mov
mov
iret
or
xchg
imul
dec
in
mov
mov
or
mov
lret
or
or
or
andb
mov
mov
mov
or
stos
inc
cmp
clc
xchg
fwait
cmpsl
sbb
orl
loopne
lods
jmp
jle
or
sbb
sarl
test
pop
inc
out
dec
jle
push
jb
out
jmp
andb
js
cmp
fiaddl
adc
adc
xchg
int
icebp
jp
clc
movsl
int
cwtl
pop
or
inc
aaa
inc
stc
dec
cvttps2pi
xchg
inc
pop
mull
push
and
fs
adc
xor
sbb
fwait
stos
pop
push
xor
cmp
cmp
or
mov
and
inc
add
rcrl
jns
mov
xor
mov
or
adc
add
cmp
lahf
dec
fstps
cmpb
push
sbb
inc
ret
popa
sub
fucomi
repnz
cmp
push
fdivr
sub
xchg
add
rcrl
fsts
jo
cmp
and
rcrl
fstpt
pop
add
ljmp
mov
leave
xchg
loop
xchg
into
xchg
fisubrs
and
pop
loopne
ljmp
movsl
int3
push
js
and
sub
ds
popf
add
fildl
insl
xchg
inc
sub
push
adc
data16
scas
rcr
fsubrs
jne
movsbl
mov
jmp
gs
ret
ret
xor
dec
mov
popa
jmp
mov
or
iret
mov
jp
mov
fucompp
ret
out
sub
pop
inc
aas
mov
inc
addr16
sbb
mov
push
pop
jns
in
jmp
xchg
fistpl
mov
test
mov
inc
mov
xchg
fdivrs
sbbb
pop
loope
mov
push
jp
ja
scas
adc
loope
pusha
and
pop
int3
jb
adc
dec
sbb
imul
jo
xchg
test
pop
bnd
popf
dec
xchg
in
repnz
add
imul
pop
movsb
jns
imul
fidivl
iret
call
pop
pop
scas
cmpsb
cmp
mov
lcall
dec
sbb
mov
cmpsl
push
je
mov
inc
test
mov
lods
sub
and
outsb
cld
imul
cli
pushl
xor
xor
xor
or
xor
arpl
sub
and
icebp
hlt
sub
jo
insl
mov
cmp
mov
sub
sbb
lcall
insl
cmp
shrl
ficomps
sbb
pop
cld
mov
mov
imul
icebp
xor
and
inc
add
xor
aas
xchg
popf
jno
sti
cmp
movsb
push
jne
adc
movsl
in
adc
out
dec
add
cmp
aad
data16
push
fidivrl
aaa
int3
dec
jne
jg
addr16
push
movsl
cwtl
and
mov
enter
out
lds
iret
imulb
mov
mov
cld
and
mov
test
lcall
scas
notl
cmovge
fisubrs
pusha
inc
rep
pop
adc
outsb
dec
fsubl
movsb
xchg
loopne
ret
pop
test
dec
xchg
iret
lods
rcl
cli
add
fs
dec
aad
dec
call
mov
adc
fimuls
or
jl
xchg
sub
dec
pop
push
mov
xor
and
sbb
xchg
and
mov
into
lds
imul
hlt
pop
mov
shll
mov
out
push
inc
cmp
sub
mov
inc
xchg
sub
cmpsb
add
jmp
cmpsl
cwtl
fwait
out
mov
cmpsb
fidivrl
stos
test
inc
popa
fsubrl
rorl
loopne
pop
outsb
mov
and
mov
out
push
daa
mov
mov
fldcw
and
lock
out
jno
xor
popa
xchg
test
xor
xlat
fstl
dec
cmc
pop
mov
push
negb
xchg
lea
out
mov
push
loope
popa
ret
sar
fnsave
mov
iret
xor
fucomp
add
mov
aad
movsb
cmpsw
in
xor
mov
mov
sbb
push
movsl
cmp
nop
jecxz
add
xor
or
push
in
pop
mov
push
xchg
das
int3
cmc
jecxz
fwait
movsl
test
insb
add
add
mov
mov
js
xchg
cmpsb
jmp
mov
push
inc
push
lods
roll
add
test
mov
enter
dec
arpl
shll
inc
int
fwait
mov
jmp
or
test
cmpsl
push
cld
in
push
leave
push
movsb
je
subl
imul
sahf
push
mov
mov
xor
sbb
cmp
out
ja
cmp
fldt
mov
mov
je
fisttpll
push
arpl
mov
out
ss
sbb
or
cmp
adc
loop
xor
cmp
xchg
cli
roll
or
mov
xor
pop
xor
lret
out
leave
xor
or
jmp
cmpsb
fisubrs
enter
lret
inc
mov
ret
mov
leave
jp
movsb
sti
cmp
ficoms
clc
int
sbb
test
xor
fadds
insb
xchg
sub
cwtl
mov
icebp
scas
repz
lock
ja
jge
fcoms
dec
sub
cmpsb
outsb
pushf
xchg
xchg
icebp
aas
jl
loop
lret
and
outsb
pop
fcoms
aad
and
push
push
negl
cmp
rorb
xchg
sbb
or
call
daa
xor
jge
mov
add
mov
outsb
fneni(8087
push
call
sub
pushf
jno
and
jbe
test
cld
xorb
sbb
mov
mov
lret
mov
leave
inc
jg
scas
dec
dec
shrl
insl
ljmp
cmp
cmp
mov
xor
and
cwtl
in
outsb
mov
and
mov
adc
sbb
movsb
call
stos
mov
ret
inc
and
int
stos
push
pop
adc
cmp
sbb
push
sbb
nop
mov
in
pop
jne
pop
xchg
pop
xchg
dec
adc
loopne
fcoml
shrb
or
lea
push
sub
in
cld
adc
je
fsts
inc
lea
adc
ljmp
adc
lcall
insb
les
cmp
test
in
mov
mov
cmpb
cwtl
fistl
adcb
mov
cmc
enter
clc
sarb
inc
cs
cltd
inc
mov
pop
xchg
cwtl
mov
rcrl
pop
js
mov
daa
dec
test
pop
cmp
lods
mov
in
imul
jg
repz
imul
inc
jno
js
lret
jo
test
fmull
cmp
es
in
adcb
mov
mov
xchg
xor
rol
jg
push
cmpsb
enter
push
loopne
rcr
lock
xor
mov
sbb
outsl
push
inc
lds
ljmp
nop
in
lcall
adc
rcrb
push
aad
xor
jnp
dec
in
fsubs
jmp
enter
pop
movsb
mov
vmwrite
shlb
or
imul
sub
xor
and
pop
insl
out
orl
push
arpl
leave
fsubrs
mov
ss
sub
mov
push
push
je
inc
push
rorl
sbb
mov
popa
pop
in
mov
mov
xchg
or
jae
test
aad
mov
and
or
sub
fmulp
lods
xchg
mov
add
lret
aam
ss
and
andb
jle
fwait
idivl
or
das
mov
out
mov
int
call
xchg
inc
cmpsl
pop
div
sub
cmp
ret
lods
xor
push
adc
pop
mov
jns
jnp
addr16
insb
inc
rorb
dec
fcomps
mov
ret
loop
and
dec
aas
jl
dec
sbb
fdivl
rcl
andl
pop
push
sub
decl
jle
jl
add
mov
inc
sub
cmp
adc
push
lock
inc
aaa
pushf
push
mov
dec
mov
mov
lret
pop
dec
cli
dec
adc
mov
jle
lret
addr16
stc
fisubrl
in
jle
sbb
outsl
sub
pop
imul
or
add
cltd
into
sbb
sub
mov
je
loop
xor
xchg
inc
test
inc
add
pop
lret
popf
mov
cmp
xchg
stc
sbb
inc
dec
xlat
mov
cmpsb
mov
mov
fistps
mov
aad
dec
ret
and
adc
xchg
mov
fcoms
mov
lret
nop
pop
rolb
mov
pop
cmpsl
subl
and
je
enter
in
dec
add
pop
xchg
adc
daa
adc
icebp
imul
in
cmp
roll
dec
call
mov
mov
out
and
adc
negb
sti
aam
dec
mov
mov
daa
jl
sub
sbb
cwtl
dec
or
lods
out
xchg
mov
insb
mov
jmp
pop
cmp
es
lcall
inc
mov
dec
stc
data16
xchg
sub
cmp
cmp
loope
fildll
pop
aas
ljmp
push
lret
xor
fwait
lods
out
lahf
sbb
loop
xchg
mul
fwait
push
adc
leave
rcrb
enter
int3
jns
movsl
in
mov
in
data16
sbb
out
add
cs
dec
idivl
mov
sbb
imul
cmpsl
inc
jmp
cmp
cmpsl
add
xchg
stos
inc
xchg
fsubrl
jg
fwait
or
bound
mov
ret
jb
and
sbb
popa
sti
push
push
and
in
pop
xor
sbb
sar
pusha
push
jno
push
movsb
and
jae
adc
push
cmc
popa
je
sub
sub
push
repz
gs
jae
adc
test
pop
imulb
lea
repnz
fnstsw
mov
ja
pop
mov
aam
fimuls
iret
pop
mov
inc
enter
or
mov
inc
xchg
loopne
push
test
xchg
push
and
cltd
nopl
pop
inc
lahf
aad
adc
lock
lods
sbb
add
rorb
cltd
cmp
lds
cli
cmc
imul
jle
jmp
jno
out
sarl
repnz
adc
mov
lahf
dec
sub
psubsw
sbb
into
jne
lods
fmull
out
stos
loopne
in
imul
jne
dec
in
cmp
cmp
mov
arpl
inc
push
xchg
aad
fcomps
sub
mov
pushf
mov
pop
adc
mov
lret
sarb
sbb
lret
sbb
sahf
mov
jno
outsl
mov
out
push
push
pop
dec
dec
xchg
mov
mov
stc
fstps
sbb
in
insl
push
jp
repnz
call
je
pushf
fxch
sahf
syscall
pop
mov
mov
mov
data16
rclb
pop
gs
out
idiv
nop
cmp
mov
pop
stos
mov
ret
inc
push
repz
sub
push
cmp
aam
sahf
mov
mov
lock
mull
sbb
or
mov
mov
mov
lea
pop
mov
mov
sbb
gs
xchg
aad
dec
xchg
cwtl
cwtl
adc
mov
add
cli
je
out
loopne
push
outsb
clc
pop
xchg
cwtl
pop
shll
or
int3
mov
add
and
and
insl
in
add
dec
in
xchg
popa
filds
fimuls
std
cltd
jbe
mov
jb
sub
test
cwtl
lods
inc
push
addr16
fsts
rcrb
push
lods
loopne
mov
jmp
data16
cmp
adc
sub
fldenv
xchg
cmpsl
out
dec
repnz
fs
nop
shl
arpl
jmp
mov
cmp
ss
mov
adc
inc
in
adc
adc
arpl
pop
adc
jmp
rcl
push
xchg
imul
movsl
fistl
dec
aaa
imul
push
cmp
push
movsl
aaa
or
movsb
pusha
xor
push
push
xor
js
out
xchg
and
insb
dec
jbe
ficomps
sbb
xchg
pop
push
cld
ljmp
movsb
in
jae
loope
arpl
or
cltd
jle
outsb
jb
ret
sub
mov
inc
cmp
leave
mov
or
jno
pop
cmp
mov
pop
cmp
and
enter
repnz
xor
pusha
cmpsb
mov
push
push
lock
cmpsl
out
mov
lds
xor
in
pop
or
call
je
inc
adc
aas
or
mov
fmuls
loope
rcr
push
int3
divl
or
rcll
jo
fldl
sub
mov
sti
rcrb
sbb
imul
mov
or
inc
jge
sbb
cmp
xchg
push
aas
mov
sti
cld
dec
xchg
mov
xorb
mov
stc
xorb
mov
push
add
xchg
mov
loope
sbb
dec
enter
xchg
decb
daa
cmp
iret
sbb
xor
in
aaa
shll
jne
into
add
scas
daa
aam
jl
cld
shll
push
arpl
or
jecxz
lret
inc
in
lds
in
and
in
sbb
push
xchg
cmpsl
xchg
dec
loopne
push
lods
ss
sbbb
adc
dec
sbb
sub
cmp
sbb
js
pushf
adc
data16
push
dec
fwait
mov
shll
and
lret
in
rcrl
aam
out
inc
movsl
loope
pop
sti
mov
ds
imul
lahf
fbld
les
mov
mov
jae
inc
push
jo
outsb
repz
in
push
cli
loop
sbb
xor
cwtl
mov
sbb
jmp
sbb
sub
fs
pop
cmpb
adc
sub
xchg
js
es
out
and
in
subl
jo
ds
jae
out
enter
sub
fldl
repz
clc
outsb
imul
jb
xor
fs
loope
mov
mov
push
xchg
cs
daa
arpl
add
sbb
jecxz
jb
cmp
mov
jnp
xor
out
xchg
popf
cmpsl
dec
fwait
cmpl
fdivrl
shll
mov
cmc
add
dec
loopne
cwtl
cmp
push
sbb
pop
ss
inc
movsb
xchg
ficompl
fimull
push
sub
jmp
addl
enter
arpl
jne
popa
fstpl
jecxz
jecxz
cmp
insl
jae
lock
or
pop
scas
inc
imul
pushf
xchg
xchg
adc
popa
inc
jae
dec
fisubrs
lock
lea
out
mov
mov
scas
gs
rorl
mov
xor
daa
mov
stos
jb
mov
xchg
inc
pop
jg
stc
out
push
sti
dec
push
in
mov
sbbl
scas
dec
dec
mov
jecxz
clc
or
xchg
in
adc
sbb
test
pop
aad
sub
or
push
aad
jo
test
mov
mov
adc
lods
les
test
xchg
sbb
cld
fidivrl
cmp
test
stc
and
push
lret
in
cwtl
ljmp
mov
mov
lds
cmp
sbb
jmp
ss
clc
je
enter
inc
repz
jecxz
sub
dec
mov
test
pop
outsb
loope
jo
mov
fcomps
sahf
xor
sahf
outsl
sub
push
movsb
jne
or
aam
scas
divl
and
lds
movsb
jae
pop
sub
jnp
inc
fwait
addl
sub
aas
jl
imul
xchg
fists
cmp
jge
ret
xor
xor
add
cmp
loope
vmread
mov
push
cmp
jecxz
fmul
ds
dec
and
mov
jge
hlt
or
dec
mov
jo
icebp
dec
jge
aam
jns
in
jp
fnsave
xor
jne
mov
mov
nop
sub
add
cltd
add
add
shll
outsl
sub
jg
sbb
add
nop
adc
scas
ja
pusha
pop
adc
leave
cmp
aad
ret
cld
push
lods
lods
lret
incl
push
sbb
xchg
es
inc
int3
das
mov
and
in
inc
sbbl
arpl
inc
shlb
lods
cltd
push
add
aas
shrb
popa
nop
mov
push
jnp
add
cmp
cmp
out
enter
mov
fidivs
or
jmp
mov
jmp
fwait
dec
in
xor
push
in
sub
pop
cmpl
jecxz
and
add
mov
popf
fiadds
sbb
pop
and
bndstx
xchg
sbb
mov
dec
xor
in
ret
aad
sbb
jb
and
insb
dec
outsl
lret
fiadds
outsb
mov
or
inc
mov
es
hlt
pop
mov
repz
cmpsl
jne
out
mov
xor
mov
arpl
aam
mov
mov
adc
adc
leave
rcll
mov
mov
push
xor
xor
mov
bound
das
ja
sahf
bound
dec
sub
clc
mov
sbb
or
repnz
rcll
push
push
sub
leave
xor
sub
inc
fisubrl
dec
outsb
add
jb
xchg
jo
push
push
mov
jmp
push
xor
fnstenv
push
aas
sub
pop
fimuls
ja
aam
sub
loopne
and
xor
inc
jns
sahf
movsl
cwtl
es
jg
lahf
sbb
xor
scas
mov
jge
in
movsb
lcall
adc
imul
sbb
mov
rorl
cli
lods
mov
mov
sbbl
sbb
ss
in
inc
ret
mov
iret
loop
add
cmp
and
sub
pusha
push
or
jl
mov
repnz
xchg
add
inc
aam
cmp
lods
pop
dec
arpl
mov
add
push
in
es
cmp
fcomps
in
and
lcall
loope
mov
and
mov
xor
cwtl
stos
stos
int
xchg
adc
xchg
and
in
ljmp
push
and
mov
mov
ja
std
outsb
ret
push
je
es
push
cmp
popa
das
adc
and
imul
insl
pop
fwait
call
fs
mov
push
cs
fwait
popa
scas
stc
jp
popa
sub
jmp
sub
jl
out
add
cmpsl
xor
subl
jno
pop
ljmp
fistl
add
rol
dec
in
xchg
repz
insb
stos
or
cmp
push
pop
or
lret
cmp
sub
mov
repz
les
popf
imul
jg
cwtl
hlt
xchg
mov
jmp
push
pop
push
pop
cmp
call
push
hlt
movsl
fwait
xchg
xlat
es
std
lcall
fwait
and
add
add
mov
testb
lds
repz
popf
add
pusha
cmp
dec
mov
movsb
je
iret
out
or
adc
imul
stos
sub
jecxz
mov
in
lahf
or
prefetch
imul
jge
lret
aad
in
dec
add
fisttps
lcall
cltd
shlb
sbb
lret
cltd
jnp
rep
in
testl
cmp
lock
std
inc
sub
addr16
jp
cmp
jbe
fdivrs
jnp
inc
pushf
dec
add
dec
dec
inc
stc
jp
bound
stos
int3
sub
leave
scas
add
push
sbb
sbb
xor
xor
inc
jo
mov
ds
loopne
mov
int3
adcb
loopne
aam
idivl
leave
push
xchg
cmp
repnz
jno
push
incl
push
xchg
inc
cli
jecxz
push
popa
into
cli
lret
in
cmpsl
rcrl
xacquire
xor
xchg
repnz
daa
mov
pop
jl
dec
cmp
leave
push
cmp
movsl
sub
nop
xchg
fistpll
xchg
mov
dec
nop
test
add
icebp
push
and
or
test
mov
clc
pop
pop
or
stc
mov
mov
in
xor
push
xchg
hlt
sub
mov
inc
hlt
add
enter
loope
test
mov
fidivs
insl
scas
mov
or
test
insl
insl
in
xchg
sbb
sti
jo
stc
out
out
inc
mov
scas
push
mov
in
nop
jge
mov
into
js
aaa
or
inc
ljmp
sbbb
dec
shrl
adc
sub
out
mov
inc
scas
pop
jmp
shrb
imul
lds
push
in
loope
shrb
imul
mov
dec
mov
sahf
sahf
pop
pop
xor
icebp
sbb
outsl
xchg
cli
fistpll
xor
xor
or
mov
out
or
adc
dec
push
out
pop
jge
or
and
jl
xlat
out
push
push
test
mov
test
mov
adcb
lret
aaa
int
aaa
mov
lcall
imulb
fidivs
and
pop
xchg
mov
mov
xor
imul
push
or
xchg
mov
jge
add
rorl
xchg
mov
lahf
sub
or
bound
and
mov
les
mov
and
jae
cmp
es
test
stc
ret
jg
test
adc
shlb
hlt
je
nop
pop
or
sahf
mov
xchg
xchg
xchg
scas
sub
aas
jo
outsb
xor
xor
iret
jno
cmpsb
mov
ja
andl
call
sbb
push
inc
dec
imul
icebp
dec
test
lahf
jecxz
cwtl
push
jge
dec
jbe
sbb
stos
mov
int3
dec
ljmp
test
cwtl
push
andl
mov
push
aaa
lahf
adc
inc
xor
call
mov
pop
push
or
sub
idiv
mov
aad
repz
enter
loopne
shlb
rcrb
ja
cmp
mov
push
cltd
fld
push
adc
test
cmc
icebp
and
fdivs
pop
sti
inc
lea
push
call
aas
retw
mov
dec
adc
out
mov
add
jle
adc
shl
push
fdiv
sub
hlt
sti
and
in
cmp
pop
fcomps
dec
ret
push
aad
or
test
push
ror
clc
cli
int
jno
dec
fs
punpckhbw
repnz
pushf
shl
mov
push
insl
rolb
push
mov
lods
sub
jmp
jge
mov
mov
rclb
inc
call
push
lods
data16
adc
fsubrl
or
sbb
mov
mov
pop
inc
int
cmpsb
ret
imul
lret
mov
xchg
xchg
inc
int
inc
pop
lcall
cld
xlat
xorb
fcompl
inc
xchg
lret
pop
iret
daa
into
mov
or
sub
push
mov
pop
mov
lds
popa
out
and
jge
sub
leave
jp
out
outsb
call
test
cmpsb
mov
add
daa
xchg
aas
lcall
daa
xchg
mov
xor
jne
or
sbb
fs
cmc
ror
shl
ss
adc
mov
mov
scas
clc
lcall
in
test
push
jge
aaa
jo
jl
cmpsl
lods
dec
scas
fcoml
pop
pop
lret
pop
push
out
mov
adc
xor
dec
or
insb
dec
mov
leave
dec
adc
cld
outsl
cmpsb
stos
shlb
push
in
fadds
add
aad
ja
ret
test
jne
mov
insb
icebp
xchg
push
mov
std
sub
jl
std
xor
stc
cltd
ss
add
fistps
stc
fldcw
jae
into
jecxz
xor
ret
or
pusha
inc
shr
out
or
xchg
cli
loope
jb
mov
mov
dec
inc
aam
pop
lds
sbbl
inc
aaa
jbe
fists
dec
cld
dec
leave
adc
bound
je
lret
push
subb
xor
mov
mov
dec
pushf
sub
nop
faddl
cwtl
jnp
sub
xchg
sahf
loope
sub
jle
jmp
popf
mov
cltd
mov
push
in
sbb
dec
fmuls
add
pop
jl
sub
ficoms
xor
adc
mov
mov
rcr
xchg
add
das
out
xadd
fistpl
dec
psubw
inc
jne
or
lret
je
shll
scas
lret
and
rcl
cmpsb
adc
xlat
cmpsb
call
or
sub
xchg
test
ret
imul
or
fnsave
insb
repnz
andl
pushf
jbe
add
sarl
mov
aaa
xor
pop
out
xchg
jbe
add
jg
add
in
push
xor
bound
sub
add
jmp
cmp
sub
ds
mov
arpl
loop
and
roll
inc
adc
jb
adc
repnz
add
in
jbe
mov
frstor
push
mov
mov
cs
psadbw
mov
mov
out
xlat
pop
lea
or
mov
adc
daa
pop
ljmp
imul
pop
cs
lahf
ds
mov
mov
cmp
sbb
jmp
add
mov
incl
inc
mov
mov
xchg
mov
mov
jbe
push
mov
nop
aam
mov
push
bound
jb,pt
in
sub
int
and
ret
std
popf
jbe
adc
push
and
shlb
cwtl
mov
pop
pop
inc
das
cwtl
push
aas
loop
pop
sti
dec
push
out
sub
insl
rolb
jecxz
push
ss
repz
icebp
movsl
mov
xchg
icebp
push
adcb
add
imul
sbb
adc
lds
and
insb
lcall
in
cmp
out
pushf
ja
pop
and
and
jmp
jo
or
int3
xchg
or
adc
pop
fldl
aam
xor
insl
popf
daa
pop
rdmsr
xchg
dec
dec
lds
inc
gs
push
xchg
enter
push
push
lahf
mov
push
outsl
jecxz
into
and
out
inc
xchg
outsl
mov
cmp
cmpsl
jge
sub
mov
test
loope
lods
mov
out
call
mov
pop
xchg
dec
dec
mov
push
mov
mov
das
lods
mov
in
adc
int3
xchg
mov
or
push
js
adc
jnp
jmp
pusha
pop
pop
shrl
xchg
je
mov
cmpl
jp
xchg
jg
shrl
mov
fwait
icebp
push
bound
mov
xor
stos
jae
test
mov
dec
sbb
fistps
jp
fs
incl
imul
cmpsb
xchg
xor
sbb
aas
lcall
cmpsb
out
dec
loope
in
dec
dec
aas
cli
or
ljmp
xchg
push
xchg
enter
sbb
mov
fadd
shlb
fistpll
leave
scas
scas
es
sahf
add
pushf
pop
insl
pop
pop
imul
xor
adc
call
int3
jl
popa
cmp
pushf
lds
and
stos
enter
and
cs
cld
mov
movsbl
jge
inc
ja
fcoms
xchg
mov
je
clc
xor
imul
dec
jle
in
cmp
cmp
sbb
xchg
dec
in
mov
push
xor
aam
dec
call
jne
mov
and
imulb
push
cmp
push
jp
inc
add
faddl
mov
movsl
or
clc
add
jno
out
cmpsl
jnp
sti
das
jno
xchg
adc
das
shl
or
mov
push
mov
aad
fsub
outsb
sbb
jp
and
loop
pop
rclb
adc
loopne
lock
aam
sub
popa
fbstp
jae
testl
mov
fucomip
lds
sub
popf
adc
aad
jb
add
push
cmp
aad
push
inc
mov
sbb
push
scas
enter
inc
or
jbe
movsl
shlb
cmp
sub
arpl
aaa
mov
cmpsl
mov
pop
pop
daa
inc
cmp
loopne
inc
dec
mov
mov
pusha
iretw
xchg
xchg
jl
lods
gs
pop
adc
jle
sarb
mov
mov
sbb
stos
movsb
mov
sub
xor
std
dec
jp
insl
dec
mov
jp
adc
outsl
scas
sbb
int
test
clc
sbb
push
hlt
jl
sahf
add
jae
mov
cs
or
adc
mov
jne
fidivs
cmpsl
pop
mov
xchg
es
xor
or
call
jne
jge
mov
imul
jp
push
add
movsl
sbb
and
jmp
test
addr16
xor
add
addr16
mov
or
mov
loopne
int
or
cs
add
mov
cwtl
cmp
cli
mov
bound
adc
lods
pop
dec
push
jb
insl
fninit
push
add
std
cld
fcmovbe
adc
pop
jmp
ret
push
mov
inc
test
sub
in
cli
test
js
mov
sub
jle
shll
mov
jmp
shll
dec
mov
cmp
cmp
iretw
xor
lods
mov
jbe
fs
dec
xchg
in
mov
and
xlat
add
aad
popf
or
aaa
out
jecxz
cmp
popa
pop
daa
aam
pop
sub
jmp
fisubrl
or
idivb
jmp
das
mov
aas
popa
ss
xor
rcr
pop
addr16
jge
popa
xchg
lods
into
sbb
out
cmpsl
cmp
push
fdivrs
push
shrd
sbb
push
xor
jecxz
ds
sbb
xchg
mov
test
mov
fsts
iret
hlt
test
cmp
iret
mov
and
vmulps
cmp
jecxz
mov
push
cmp
loop
scas
mov
incb
dec
hlt
insl
outsb
fidivl
mov
sub
jle
pusha
xor
aas
pop
adc
dec
test
push
or
daa
and
mov
push
fbstp
rclb
adc
jbe
dec
jnp
xor
push
fsubl
mov
daa
add
push
sbb
fldt
fdivs
sbb
cmpsb
cmpsb
xchg
jns
icebp
push
mov
or
mov
stc
dec
pop
xchg
and
fidivl
les
in
inc
xor
fsubrl
push
inc
inc
xor
push
sub
inc
lcall
mov
scas
mov
cmp
or
push
jle
adc
dec
movsl
lret
sti
mov
std
mov
shrb
push
repnz
test
aam
std
jp
int3
cmp
add
jo
dec
les
sub
nop
jb
cltd
xchg
pushf
nop
mov
jg
inc
inc
inc
dec
jb
add
jae
pop
repnz
hlt
xchg
and
push
push
cwtl
insb
cwtl
outsl
in
jne
push
push
xchg
dec
jecxz
push
lahf
jae
sbb
adc
sahf
pop
push
inc
out
rcll
mov
pop
in
loop
sti
add
cs
es
lcall
cmp
lahf
loop
jb
pusha
dec
lock
push
push
or
push
xor
lea
pusha
push
push
inc
jb
jns
xchg
fdivrp
addr16
mov
mov
ret
adc
lds
xor
push
sbb
dec
and
arpl
push
pop
add
aad
std
mov
repz
aad
xchg
cld
cmpsb
gs
jne
xor
es
int
scas
pop
jmp
pushf
jl
add
test
popa
jae
movsb
jmp
pop
add
test
mov
out
repnz
hlt
jne
sub
dec
in
push
dec
aad
add
ficomps
or
movsb
ret
pop
sahf
arpl
pop
mov
dec
sub
xor
andl
in
inc
push
popf
jge
sub
daa
repnz
sbb
xor
into
jns
pop
out
or
dec
mov
add
xchg
push
hlt
add
sub
cld
sbb
or
xchg
fwait
imul
add
adc
imul
xchg
lods
icebp
mov
xor
pop
loop
dec
daa
mov
bound
mov
fmull
push
into
lcall
push
mov
popa
lahf
adc
cs
push
mov
adc
jne
int
fbld
aaa
mov
sub
dec
loopw
mov
cwtl
jg
and
inc
and
aam
pop
or
pushf
cwtl
sbb
roll
movsl
xchg
jmp
dec
mov
incl
pop
sarl
sbb
push
xchg
pop
pop
outsl
les
xchg
add
dec
and
inc
ljmp
cmp
lods
mov
cmp
es
push
inc
or
dec
jmp
pop
jmp
cli
mov
fwait
push
add
movsb
stos
in
stos
mov
inc
cmp
xor
jb
push
mov
sub
aam
fistl
inc
jo
scas
jg
inc
inc
pop
mov
push
in
stos
lock
out
daa
into
mov
push
cltd
add
int
outsb
adc
negl
mov
rorb
adcl
aam
push
push
pop
insb
sahf
mov
sbb
insl
subb
xor
ret
mov
ret
aad
outsl
imul
jp
push
mov
mov
xchg
jbe
das
sbb
inc
inc
in
push
xchg
js
fcomps
dec
fcoml
pop
push
pop
test
scas
addl
or
das
ret
mov
push
jl
push
in
push
jg
jg
sub
shll
inc
sub
mov
jle
or
push
mov
cmp
sti
adc
icebp
insl
pop
cltd
xchg
mov
and
jmp
int3
inc
mov
dec
pop
enter
push
iret
test
inc
repz
dec
clc
lods
pop
bound
xor
pop
mov
enter
mov
mov
ljmp
and
jnp
jmp
pop
negl
jne
mov
mov
jne
add
loop
xchg
xchg
sahf
cmpl
mov
add
xor
jge
cmp
jmp
cmp
jne
rorl
jmp
push
inc
out
lea
jb
sbb
inc
sbb
cmpsl
adc
lds
orb
lods
stos
repz
imul
xchg
mov
pop
pushf
rep
jnp
cld
lock
repz
dec
test
fcoml
xchg
je
xchg
cli
mov
test
out
or
fnstsw
nop
sahf
enter
mov
test
push
pusha
pcmpeqd
lods
or
push
mov
sub
ret
xor
dec
gs
data16
enter
mov
roll
sub
lock
xchg
inc
or
cmp
mov
jb
jno
mov
imul
push
movsl
bound
jge
or
aad
mov
and
js
pop
jge
nop
sub
fidivrl
loope
out
push
ljmp
inc
pop
test
in
hlt
in
loopne
push
pop
dec
aas
mov
add
sbb
sub
leave
cltd
or
stc
xchg
or
push
or
and
jp
lret
dec
xor
adc
cld
mov
jmp
cs
aad
popf
mov
rolb
mov
pop
stos
mov
or
or
aas
mov
cmp
mov
adc
xchg
mov
jp
loope
inc
inc
mov
les
insl
aas
and
mov
test
icebp
int
and
or
push
ret
or
cmp
addr16
cmp
lods
ret
mov
ret
jecxz
call
sub
stc
je
inc
ror
fidivrl
aaa
xchg
popf
or
int3
or
xchg
sub
adc
jle
xlat
lea
lods
and
loopne
rorl
jnp
int3
inc
repnz
notl
out
pop
in
ret
xchg
xchg
sti
stc
ja
dec
sbb
pop
inc
inc
mov
pop
cwtl
cmpsl
jbe
xor
xchg
cmp
scas
sub
mov
loop
pop
mov
ficomps
cli
insb
or
hlt
adc
xor
mov
sbbl
int3
bound
ljmp
stos
sbb
jae
out
sti
mov
shl
xlat
inc
lret
popa
bound
dec
sar
out
push
lock
testb
lods
jb
push
aam
mov
mov
xchg
xor
fucomi
loope
inc
stc
push
sub
test
inc
xchg
sub
adc
sub
cmpl
in
mov
outsl
fwait
test
inc
sub
add
mov
data16
sbb
sub
rcrb
and
jno
into
clc
das
outsb
hlt
xchg
mov
out
dec
push
xor
lock
loope
popf
pushf
cmp
dec
jnp
imul
cwtl
push
mov
nop
fistpl
mov
mov
fcomp
add
xchg
cli
gs
or
aaa
cwtl
xor
stos
iret
out
test
add
idivl
mov
out
sub
cs
mov
mov
mov
test
cmc
hlt
imul
mov
es
mov
popf
mov
mov
inc
inc
popf
mov
fsin
in
negl
push
sbb
push
data16
notb
imul
dec
pop
sbbb
and
or
scas
mov
insb
shll
fcomp
xchg
imul
imul
jp
test
das
leave
lods
add
cmp
sub
les
cmpsl
sub
fwait
or
mov
pop
or
jmp
xor
xchg
sbb
fs
cmp
inc
data16
jns
jbe
ds
inc
sbb
adc
inc
add
push
xor
clc
xor
jbe
sbb
cmp
and
cmpsl
xchg
jo
xor
pop
jmp
loop
sub
dec
clc
movsb
lods
push
iretw
enter
dec
xor
jl
dec
push
jp
inc
and
adc
fisubs
pop
push
sbb
pop
lea
cmp
mov
loopne
fwait
xor
push
insl
loope
xchg
cltd
ja
inc
push
jne
mov
xor
push
mov
mov
xchg
inc
movb
jo
pop
nop
sahf
std
dec
pop
xor
xor
dec
sbb
jbe
fstpt
in
dec
jmp
int3
jo
cwtl
popf
xor
shlb
out
add
inc
or
adc
sbb
mov
pop
sub
inc
sahf
jge
push
ror
cs
mov
lock
dec
out
mov
pop
sbb
pop
out
insl
dec
adc
lret
jo
and
xlat
fndisi(8087
inc
testl
ljmp
int
negl
stc
sub
adc
jmp
mov
pop
mov
mov
mov
test
cltd
mov
shl
xchg
push
push
int
ja
sbbb
into
scas
jl
mov
test
les
xchg
sbb
or
clc
xchg
jmp
mov
push
or
cwtl
mov
lcall
test
add
icebp
or
cmp
add
jmp
outsb
xor
push
pop
cmp
outsb
stos
lds
mov
fldcw
mov
out
or
popf
inc
test
jecxz
fndisi(8087
pop
mov
out
mov
fdivr
push
push
jno
jmp
push
fnstenv
aam
sub
int3
mov
xor
add
mov
dec
fcmovu
inc
lret
lods
jge
push
jmp
repnz
idivb
jge
fisttpl
movsl
mov
cmpl
out
movb
adc
or
dec
mov
cmp
dec
ja
inc
jmp
lea
imul
and
jp
and
mov
pop
dec
fsub
shr
pop
in
mov
mov
dec
into
bound
and
jb
and
jns
popa
jnp
loopne
and
push
jle
sub
cwtl
and
push
xor
mov
mov
xchg
pushf
sub
jge
lahf
scas
mov
or
fstps
jbe
mov
jle
icebp
mov
out
push
sahf
and
cwtl
ret
sti
or
in
pusha
mov
fs
or
sahf
xor
loop
jb
lds
cmpsl
ret
stos
cvttps2pi
inc
mov
andl
inc
or
ja
jo
cmp
icebp
and
jp
inc
mov
lret
fs
pusha
leave
cmp
push
cmp
into
loopne
lret
sub
adc
jecxz
mov
fimull
in
mov
orl
adc
dec
add
pushf
sbb
popf
xchg
cmp
ds
xchg
and
cmp
jno
xchg
ret
test
movb
loopne
push
cmp
xlat
std
lahf
adc
mov
lock
addr16
mov
jne
xchg
mulb
dec
or
pop
fs
mov
mov
pop
xchg
xor
pop
push
mov
adc
adc
jmp
imul
and
data16
addr16
shl
or
jl
cmpb
sub
jle
mov
fisubrl
mov
and
xor
imul
cmp
mov
lret
push
lock
jl
movsb
cltd
cs
sub
cmp
in
fadd
cmp
mov
dec
or
mov
jnp
call
inc
ja
adcb
lret
sbb
test
cld
in
dec
pop
and
dec
cltd
pop
adc
lods
enter
pop
ss
call
adc
lock
gs
mov
out
jge
scas
xor
mov
movsl
add
in
and
inc
enter
stos
mov
sahf
fidivrs
movsb
cmp
mov
xchg
stos
lods
push
jmp
pop
out
rolb
icebp
push
adc
scas
jl
mov
xchg
sub
jp
test
nop
insl
dec
sub
mov
jno
push
jmp
or
dec
mov
dec
movsl
push
mov
stc
push
cwtl
out
jbe
inc
mov
or
dec
push
lcall
pop
xor
jae
fs
ja
jle
rcr
jo
mov
pop
out
imul
rorl
inc
mov
mov
inc
mov
add
fsubrs
inc
lret
cmp
repnz
pop
mov
or
mov
mov
lea
adc
push
lcall
dec
sarl
sub
mov
mov
mov
inc
fstps
test
cmpsl
mov
mov
push
adc
pushf
lret
xor
sub
xchg
pusha
pop
add
xchg
pop
jp
repnz
mov
icebp
jg
jl
and
mov
xchg
bound
fcomps
clc
or
xchg
xchg
fmull
notl
xor
lods
popf
jmp
xchg
add
or
cmc
push
and
mov
enter
jg
jmp
mov
cmp
push
rclb
mov
mov
sarl
or
inc
jl
lock
and
pop
test
call
leave
and
mov
cltd
repnz
mov
jl
sti
aaa
cmpsl
fisttpll
and
adc
mov
test
fdivrs
dec
je
cmp
jp
subb
jne
push
or
call
jno
cmp
jbe
stos
and
loopne
adc
push
add
add
push
into
xlat
xchg
jb
cmp
scas
cwtl
inc
pop
mov
sub
mov
jno
jb
stos
xor
popf
dec
xor
add
cli
das
outsl
js
xchg
ja
dec
inc
into
in
or
in
push
lahf
cmp
leave
sub
mov
cltd
loope
clc
enter
dec
xchg
std
das
or
or
mov
jbe
repz
andb
push
es
jno
cmpsl
mov
mov
jo
or
ja
mov
in
mov
bound
lds
jns
mov
imul
mov
out
fsts
leave
mov
push
lcall
xor
fisttps
shl
bound
loopne
dec
stos
shl
add
pop
mov
pop
cmc
subb
cmpsl
es
sbb
sbb
jo
imul
mov
sub
aas
xchg
lret
cmp
mov
movsl
pop
clc
dec
sbb
jb
add
jl
loopne
inc
aam
insl
movsl
lds
outsl
push
jecxz
and
push
cli
rolb
enter
fwait
stc
imul
inc
push
insl
pop
in
lret
rcrb
pop
sub
pop
add
aaa
enterw
dec
and
pop
fists
jne
outsl
inc
repz
in
or
mov
inc
sub
adcl
jno
mov
das
test
mov
movsb
mov
push
push
pop
fnsave
xchg
dec
mov
incb
xorb
lods
cmc
or
fwait
cmp
sub
pop
addr16
mov
sbb
shll
xor
test
fisttps
xor
add
and
xchg
lods
push
pop
lret
dec
dec
or
mov
jno
jg
xor
insb
popf
push
jg
inc
push
inc
loope
jle
stos
jne
xlat
sbb
push
fdivrs
loope
dec
dec
and
outsl
mov
jns
dec
push
xchg
pop
push
inc
xor
adc
or
and
std
into
inc
stc
fsubs
into
mov
or
fs
xrelease
push
fbstp
nop
mov
and
out
mov
rcrb
mov
cmp
pop
daa
xchg
mov
leave
addb
popf
xchg
adc
in
ficompl
xchg
cmpsl
pop
jae
pop
inc
sub
ljmp
add
xchg
xchg
pushf
pop
sub
mov
jge
dec
xchg
aam
and
imul
cwtl
ret
insl
scas
rorl
leave
dec
jae
xchg
lea
xchg
lret
push
xor
mov
movsb
movsb
xor
cmp
mov
aad
jbe
xchg
testb
pop
arpl
popf
adc
inc
fwait
cmpsb
and
out
in
data16
sub
or
lcall
xchg
es
iret
test
pop
pop
pushf
xchg
clc
out
push
lahf
and
stc
std
stos
enter
fisubl
aam
fstpt
mov
faddl
lahf
popf
fldcw
xchg
mov
outsl
js
inc
jb
mov
dec
or
inc
adc
sub
insb
in
xor
dec
mov
add
hlt
loop
sbb
cmp
lea
pop
or
shll
cmovns
pop
popf
in
mov
fcmovu
dec
cmp
loope
out
mov
outsb
ds
rcr
and
punpcklwd
and
ficoms
sbb
push
sub
cmp
cmp
inc
push
cmc
cli
xor
mov
movsl
adc
pop
std
call
shlb
pop
pop
sbb
mov
cmp
or
cs
mov
mov
and
cltd
mov
jns
iret
pusha
aaa
xlat
cmp
and
pop
lods
add
lds
adc
cmp
adcb
push
xchg
mov
mov
test
repnz
pop
nop
pop
sub
sbb
mov
or
je
and
sarb
jae
das
pop
mov
das
adc
mov
mov
ja
hlt
sarb
or
out
or
lcallw
lods
test
pusha
mov
jp
pop
orb
clc
mov
bound
mov
push
leave
pop
jmp
mov
xchg
iret
ss
test
sub
notl
xchg
inc
sbb
dec
orb
xchg
mov
cwtl
xlat
imul
outsl
into
jp
lahf
mov
push
mov
bound
sub
fdivrl
adc
jbe
int
lret
pop
jmp
scas
popa
or
pushf
add
dec
xchg
je
push
repnz
or
xor
jae
nop
ljmp
mov
leave
sbb
in
enter
lds
jecxz
and
cmp
lods
xchg
repz
cmpsl
jae,pt
notl
sub
sbb
clc
dec
lea
pop
sub
pop
pushf
mov
ficoml
cmp
mov
bound
mov
hlt
insl
or
mov
imull
dec
inc
xor
test
push
cmpsb
mov
xchg
scas
cs
cld
pop
fisttpll
outsl
jnp
in
dec
stos
jge
mov
roll
cld
dec
adc
negl
in
jnp
xchg
fldenv
outsb
adc
les
push
inc
out
filds
or
sbb
or
addr16
push
enter
push
insb
xchg
push
sar
xorps
out
dec
mov
adc
imul
imul
stos
stc
arpl
jnp
lret
fidivl
mov
cltd
jae
mov
fildll
das
mov
cmp
icebp
roll
mov
mov
out
cmp
or
xor
daa
insb
push
roll
mov
rcll
mov
jmp
arpl
cld
and
pop
les
cmp
mov
push
jge
jbe
jle
sbb
sti
dec
lods
xorl
sbb
gs
faddl
mov
mov
push
out
enter
xchg
aad
jbe
decb
sub
dec
ja
test
aad
es
arpl
frstor
dec
pop
push
mov
hlt
add
fcmovnu
add
rorb
mov
and
jp
mov
mov
inc
or
test
popf
xlat
js
test
and
jmp
jno
in
xchg
in
aam
jmp
cmc
std
pop
pop
ds
iret
xor
inc
mov
xlat
lret
andb
int
jl
pop
add
mov
in
jge
lds
mov
cmpb
das
sbb
inc
popf
cmpsb
inc
mov
pop
mov
mov
xlat
push
std
shlb
push
nop
imul
shlb
imull
or
icebp
iret
xor
mov
cmc
pop
mov
dec
inc
loop
jp
jne
lods
sub
or
sarl
cmpsb
mov
jge
sub
shlb
lahf
or
or
outsb
add
icebp
mov
jns
pushf
push
scas
shrb
sub
cmp
data16
in
out
pop
fstps
inc
repnz
dec
lret
fwait
daa
adc
out
imul
jne
xchg
out
shrl
out
sbb
cmpsl
stc
add
and
lds
roll
pop
nop
out
ss
mov
mov
imul
aam
dec
jl
or
xor
stos
mov
stos
aam
mov
or
pop
sbb
push
jge
add
xchg
repz
add
mov
adc
sbb
out
pop
and
insl
ja
jae
xor
push
repnz
insl
sub
xchg
stc
les
je
shrb
dec
mov
dec
jno
dec
fcom
or
leave
rcrb
jl
pop
push
sub
insl
push
dec
sbb
or
adc
xorb
int
insl
insb
adc
mov
push
sbb
cmp
sti
insb
js
adc
xchg
push
mov
frstor
mov
das
jnp
movsb
pop
jne
push
int
mov
out
and
enter
xlat
cld
mov
daa
mov
push
add
lcall
xchg
sarb
sahf
mov
mov
xchg
lret
test
cmp
cmp
dec
adc
mov
mov
ret
xchg
lods
lods
adc
adc
jns
inc
out
sub
jmp
in
repz
jge
popf
inc
shl
xor
iret
mov
insb
mov
mov
sbb
mov
insb
jns
xchg
mov
pop
push
mov
jmp
int3
sub
mov
push
andb
xchg
fisubs
sub
and
cmpb
cmp
loope
jne
mov
insb
scas
pusha
mov
jb
jnp
loope
push
shl
mov
test
outsl
mov
push
lcall
incb
or
fwait
jb
and
adc
rcl
xchg
es
sti
maxps
iret
mov
adc
xor
xorl
sub
clc
ds
jo
les
xchg
aam
xor
test
mov
loope
dec
repz
shlb
mov
cmp
inc
add
jbe
mov
test
nop
push
add
cltd
pop
ljmp
sub
sbb
dec
pop
jb
mov
dec
dec
imul
mov
sarl
lock
insb
stos
push
das
insb
mov
adc
lds
pop
lods
test
sti
pushw
sub
add
clc
sqrtps
call
into
insb
inc
das
pop
mov
adc
inc
jl
push
daa
push
pop
outsb
in
mov
js
sub
stc
xor
sahf
sbb
dec
in
add
pop
push
imul
dec
mov
fidivl
jbe
xchg
add
divb
mov
dec
fstps
pop
mov
jmp
and
jae
xor
cmpsb
cmpsl
xor
das
les
testb
cmp
sbb
rorl
push
outsl
ljmp
test
adc
clc
xor
cmp
sbb
adc
and
add
push
xor
mov
xlat
call
mov
loope
clc
xor
xlat
jo
or
inc
mov
inc
pop
sti
fdivr
das
push
sbb
movsl
lcall
push
push
mov
push
hlt
jge
clc
js
xchg
es
and
mov
dec
inc
por
loope
pop
dec
dec
mov
mov
sub
mov
jp
call
jl
mov
mov
stos
jle
sysexit
leave
or
and
cld
add
mov
in
dec
jmp
push
out
mov
mov
lods
sbb
arpl
std
cmpsl
jg
cmp
sbb
lret
dec
fsubl
in
pop
test
jnp
scas
push
scas
rolb
lods
clc
int3
rorl
shl
mov
mov
mov
popa
xchg
cmp
in
clc
inc
call
jle
popf
xchg
mov
jnp
lods
mov
mov
adc
lods
push
ja
pop
in
jb
test
pop
jo
sbb
cmp
cmp
mov
in
dec
es
cmp
mov
imul
pop
stos
add
xchg
pushf
into
daa
leave
shll
loop
in
les
jge
dec
fcomps
dec
cs
mov
push
jge
cmc
sub
dec
sub
out
daa
movsb
add
cmp
jecxz
xor
outsl
push
jmp
rcr
pop
ljmp
mov
lahf
scas
cmp
mov
pop
int
pop
imul
push
dec
lock
or
fcompl
sub
pop
add
dec
inc
jnp
jle
fstpl
xchg
cmc
int3
mov
dec
mov
dec
jne
xorl
imul
mov
mov
cmp
mov
adc
scas
push
pop
lods
std
leave
test
push
imul
ljmp
and
outsl
scas
hlt
push
test
xchg
popf
pop
pushf
cmp
mov
add
call
cli
leave
add
pop
push
cmpsl
outsl
push
insb
in
aas
jo
xor
jno
aas
and
dec
xor
es
dec
lahf
arpl
scas
sub
repnz
out
mov
shrb
push
pushf
xchg
mov
or
cmp
aaa
ljmp
mov
mov
push
leave
das
xchg
push
mov
push
aaa
jge
repnz
mov
mov
cltd
mov
mov
stc
ja
mov
sub
std
mov
and
loop
push
jle
rep
daa
xchg
loopne
enter
out
pushf
testb
xchg
stos
dec
cmp
ljmp
pusha
movsl
imull
clc
adc
jge
sbb
cmpsb
xchg
xor
ljmp
out
shrl
pop
shrl
int3
xchg
movsb
sbbb
mov
scas
in
adc
xor
and
xor
icebp
pushf
pop
push
rorb
push
mov
xor
pop
push
es
lds
shlb
fmul
mov
mov
ds
jle
and
pop
test
mov
xlat
and
xor
sub
subl
clc
cmpsb
fucom
jge
mov
stc
cmp
stc
dec
jle
addb
sti
mov
cmpsl
dec
fwait
jbe
cmp
push
sbb
addr16
sub
arpl
sbb
aaa
xchg
add
mov
jo
push
dec
jns
mov
or
jecxz
test
mov
movsb
daa
fistl
and
dec
hlt
ret
fsubrl
xorb
lods
jae
stc
gs
push
in
inc
fidivl
push
add
aas
mov
cltd
cli
pushf
insb
mov
push
mov
push
rol
xchg
in
mov
subb
xchg
jb
mov
mov
pop
xor
movsb
pop
inc
push
jle
fstps
jne
aam
mov
aas
fwait
jno
ljmp
test
xor
mov
lods
add
adc
mov
jo
adc
nop
push
adc
scas
mov
popf
xchg
jb
stc
mov
repnz
adc
ljmp
xor
xor
aaa
lods
push
fsubr
xor
sbb
jecxz
jne
fadds
imul
mov
aas
mov
aad
mov
push
lcall
mov
and
addr16
jecxz
mov
mov
xor
add
sahf
inc
adcl
pop
push
fsubp
nop
mov
push
mov
call
loopne
sub
ret
lahf
push
dec
pop
fsubrl
pop
pop
inc
jge
out
iret
xchg
ret
rcrb
stos
adc
fcmovnb
jae
int3
outsl
sbb
xchg
adc
inc
push
pop
js
jmp
iret
adc
cwtl
jne
aaa
dec
jp
pop
xchg
fisttps
mov
hlt
fcom
push
jno
jno
jecxz
mov
sbb
inc
popa
les
push
cmc
call
xor
jmp
es
out
jo
or
mov
shll
fidivl
fisubrs
loop
mov
loope
rcll
and
jge
mov
and
mov
int
movsb
out
in
addr16
insl
mov
jp
lds
mov
repnz
clc
fwait
and
xchg
add
sbb
or
ljmp
stc
push
adc
iret
cmpsl
cmp
push
cwtl
cmp
inc
in
adc
call
andb
fmull
lods
or
out
test
xchg
mov
addr16
xchg
daa
aam
gs
jne
arpl
rorb
sub
dec
and
data16
dec
push
mov
lea
add
or
dec
mov
adc
pushf
mov
sub
push
cmpsb
mov
sbb
scas
mov
or
call
mov
hlt
into
jmp
pop
push
jo
lahf
neg
testb
adc
shrl
bound
in
dec
dec
sub
aaa
divl
and
cmp
pop
mov
mov
outsl
pop
lcall
xor
std
push
je
sahf
jno
push
int3
ret
xor
xchg
movsb
add
mov
lods
sub
testb
dec
inc
sub
jg
in
cs
and
sbb
dec
imul
push
cmpsl
pop
test
cmp
mov
shrb
mov
lret
mov
repz
sbb
xchg
xor
out
insl
ret
push
add
sub
mov
dec
nop
ljmp
lahf
xor
fmull
xrelease
aaa
sarb
or
xchg
popa
lret
jl
adc
or
lret
sbb
arpl
adc
mov
test
lds
lret
xor
mov
aad
add
lock
lahf
pop
mov
cmp
testb
add
jnp
dec
cmp
aas
and
sti
outsb
in
int3
mov
sbb
xor
add
pop
ds
jle
jmp
sbb
mul
dec
mov
imul
movb
jecxz
add
push
lcall
nop
adc
test
xchg
loop
ss
in
dec
nop
std
push
sub
jne
hlt
cmc
clc
mov
xchg
jbe
cmpsl
into
int3
xchg
adc
ret
fldcw
mov
mov
notl
adc
mov
xchg
push
cmc
push
mov
sahf
cs
repz
cmp
insl
mov
push
bound
mov
fcoms
sub
jns
pop
ja
push
xchg
sub
xchg
cmpsl
sbbb
or
xchg
addb
scas
sub
and
jae
pushf
subb
push
jmp
and
gs
and
testl
adc
test
cmpsb
push
das
cmpb
or
xchg
lods
xchg
pop
or
lds
int
mov
test
imul
and
cmc
movsl
ret
shrl
xchg
rorl
loopne
int
fbstp
inc
sub
movsl
adc
enter
imul
pop
mov
call
testl
cmp
je
jno
dec
pand
fnsave
call
sbb
or
xor
stc
jge
push
mov
mov
xor
ds
cmp
pop
push
mov
sbb
add
mov
adc
jbe
outsl
arpl
es
not
push
xor
pop
daa
lret
lea
filds
sub
mov
xor
sub
inc
idivb
pop
ss
fwait
push
fsubrs
push
dec
xor
mov
pop
testb
inc
jb
push
or
xchg
fbstp
repz
jne
mov
fldl
cmc
bound
add
pop
ficoms
mov
pop
dec
or
sti
mov
inc
mov
cld
and
sti
xor
repz
xchg
or
mov
cmpsl
ret
aas
fwait
scas
lret
lea
sub
xchg
lods
add
push
xchg
pop
sbb
push
shrb
push
xchg
or
cs
testb
ss
ret
mov
dec
dec
mov
mov
fdivs
shlb
dec
add
out
test
sbb
fsubrp
mov
mov
popf
push
arpl
lea
std
xchg
lahf
sub
mov
fisubl
shlb
test
adc
xchg
sub
lods
shl
jg
cltd
pop
cmp
aas
xchg
push
sub
sub
mov
sarl
xchg
dec
aas
int
or
jns
adc
mov
sbb
or
sbb
pop
call
mov
jns
inc
adc
test
mov
in
jl
cmp
dec
rolb
xor
and
fdivl
or
jmp
jae
cmpsb
cmp
imul
sub
mov
imul
xchg
scas
mov
repnz
add
mov
jmp
jo
jecxz
in
not
out
lahf
xchg
cmp
ret
aas
aas
sti
fnsave
dec
inc
and
push
movzwl
pop
mov
ret
aas
xlat
enter
andl
xor
clc
das
aam
mov
sbb
inc
xlat
cmp
dec
movsb
xor
jle
int3
mov
adc
out
and
cmp
adc
cs
lea
mov
outsb
test
mov
mov
mov
ret
jg
stos
cs
mov
xchg
jno
jmp
xchg
outsl
xchg
cwtl
rcll
les
sbb
xchg
insl
adc
clc
pop
fistl
rcl
cmp
add
inc
ret
add
int3
clc
xor
add
dec
fistps
xchg
stos
jo
sbb
push
xchg
mov
fcoml
jecxz
hlt
fimull
lea
mov
push
jg
push
popf
js
jge
test
jb
push
in
lcall
sub
jne
bound
mov
inc
or
add
sbb
jl
push
faddl
loopne
pop
push
in
es
jno
jns
sbb
movsl
sbb
cmpsb
in
add
cmpsb
mov
cmc
cmp
xor
in
ret
dec
xchg
push
mov
shll
inc
add
mov
lcall
bound
aaa
mov
pop
sarl
or
ficompl
add
dec
sub
pop
ja
push
hlt
outsb
jge
sbb
into
cmp
sar
in
mov
sub
clc
lods
fucomi
pop
fstpl
sub
mov
loopne
jg
xchg
outsb
rolb
sbb
dec
fldcw
mov
inc
sbb
mov
jbe
in
mov
xor
nop
sub
pusha
push
fistpll
fadd
stos
push
inc
cmp
mov
pop
in
jmp
clc
xchg
jno
xchg
ficoms
loop
adc
sbb
mov
je
pop
idivb
test
in
rcll
and
orb
xchg
mov
mov
testl
scas
push
inc
mov
and
adc
jg
pop
fwait
mov
jae
lds
enter
lret
push
sbb
fstpl
mov
push
xchg
out
cmp
xor
jp
mov
cmpl
cmp
adc
cmp
and
imul
stc
cmp
sbb
mov
jns
insl
jbe
mov
inc
cmp
inc
adc
xchg
fwait
and
mov
ja
push
hlt
repnz
jl
enter
stc
pop
and
clc
sbb
jecxz
and
arpl
loop
out
xchg
jecxz
and
sub
fnstsw
cmp
sbb
jb
aas
push
adc
mov
into
pop
sub
add
daa
xchg
xchg
scas
jecxz
pop
xor
mov
add
shr
push
mov
aaa
sti
sbb
mov
mov
cmp
xor
jne
pop
sbb
lods
insb
idiv
mov
popl
or
gs
inc
push
add
add
cld
and
sahf
push
jmp
jge
rorl
fcoms
mov
adc
sbb
push
mov
nop
cmp
ret
pushf
call
lock
out
mov
inc
mov
cmp
jae
mov
pop
loop
dec
mov
pop
jb
push
cwtl
gs
test
dec
cmp
cmp
sbb
std
ljmp
outsb
fsubl
cs
mov
shlb
inc
fisttps
mov
je
mov
xchg
jle
xor
int3
pop
xchg
aad
fstps
adc
and
call
ljmp
icebp
jne
pop
es
mov
sahf
xchg
loope
push
jp
adc
push
scas
sbb
jo
mov
mov
and
std
jb
mov
add
sub
and
xchg
test
xchg
mov
xchg
cmpsb
insl
sub
shll
pushf
outsb
jge,pn
out
sub
and
jnp
js
adc
xchg
lret
bound
adc
add
mov
jmp
ljmp
scas
aaa
and
cmp
loopne
cmp
sbb
xor
outsb
xchg
shl
and
push
inc
add
inc
dec
into
jo
movsl
xchg
fcoms
lock
enter
dec
sbb
xchg
sub
sbb
imul
dec
mov
xor
cmp
xor
mov
in
shr
lret
mov
out
imul
jecxz
movsl
sub
push
inc
adc
dec
clc
rclb
dec
or
mov
pop
xchg
sub
and
adc
sub
lea
jp
in
ljmp
out
push
imul
hlt
popl
mov
push
outsb
push
or
pushf
hlt
mov
lahf
fsubrl
dec
lock
js
fistps
subb
adc
add
das
gs
fnsave
ret
dec
dec
mov
and
mov
cmp
int3
imulb
inc
scas
lods
std
mov
int
aad
je
bound
inc
push
cmp
jmp
jmp
or
adc
mov
scas
out
loope
repz
repz
es
cmp
leave
adc
insb
or
xchg
in
dec
pop
shl
mov
mov
iret
aas
cmp
arpl
dec
inc
cmp
inc
dec
adc
ja
cmc
adc
cmpsl
dec
xor
mov
mov
test
outsl
or
cli
neg
mov
je
fldenv
dec
cmpsl
or
in
aad
aam
in
cmp
arpl
daa
out
call
xor
xchg
lahf
in
mov
sbb
popa
cld
movsl
mov
cmp
jns
sbb
xchg
mov
xlat
mov
xor
mov
sbb
arpl
jo
out
in
or
lahf
sub
adc
lock
pop
xchg
aas
push
mov
pop
fstps
sbb
and
xchg
sub
sub
mov
inc
jo
rcrb
cmpsb
mov
mov
sbbl
scas
sub
daa
xor
fs
test
ret
mulb
out
xor
xor
pop
stc
loope
push
test
mov
popf
in
test
leave
inc
lahf
push
dec
jnp
les
add
xchg
mov
mov
cmp
lock
cld
popf
dec
xlat
fisubl
jp
in
test
rcrb
cwtl
pop
cmp
pop
push
mov
jae
sub
into
ret
and
je
fsub
cmc
scas
arpl
inc
push
ss
mov
xchg
dec
push
xchg
out
mov
fildll
out
sub
mulb
fcmovb
xchg
flds
add
pop
and
clc
or
mul
xchg
dec
mov
pop
adc
mov
pop
mov
movsb
cwtl
mov
lahf
mov
out
imul
pop
lcall
push
pusha
ds
and
jo
sub
mov
repz
scas
jno
mov
jl
pusha
mov
addr16
cmp
and
and
sahf
jbe
sbb
jmp
jnp
jp
lcall
or
stc
cmp
iret
das
push
mov
imulb
stos
xor
pusha
out
adc
cwtl
lods
sub
adc
lcall
dec
ret
in
add
sub
jnp
pminub
pop
fucomp
xchg
dec
fbld
jb
cmp
dec
test
stos
popf
popf
and
xchg
push
ret
scas
pushf
xor
shlb
cmp
sti
adc
pop
outsl
xchg
or
or
and
push
dec
cld
rolb
jns
pop
les
push
mov
jne
adcb
test
mov
cwtl
mov
and
pushf
sbb
adc
sub
jno
pusha
aas
hlt
push
das
cmpl
add
cli
cmp
push
es
pop
inc
push
fcomps
jne
adc
mov
push
lods
adc
pop
cli
call
add
rcrb
imul
pop
add
out
pop
inc
pushf
push
jae
jne
or
xchg
out
inc
enter
pusha
pop
pop
xchg
shlb
push
popa
subb
loope
pushf
pop
ret
daa
pop
mov
test
xor
add
in
pop
adc
add
test
pop
jge
add
push
dec
lods
lock
xor
test
xor
jle
lds
js
je
xchg
xchg
mov
mov
jno
xchg
push
sub
or
mov
inc
inc
adcb
sub
dec
mov
adc
int3
mov
dec
sbb
jbe
jo
shl
mov
sbb
daa
and
fisubs
popa
xor
gs
cwtl
cmp
xchg
fwait
jg
aam
cmp
call
pop
ficomps
insb
mov
clc
mov
aam
inc
sub
pushf
push
cmp
adc
clc
and
stc
pop
cmp
inc
mov
add
xor
mov
insl
or
add
pusha
pop
mov
add
push
dec
jne
push
xchg
add
in
insl
inc
adc
iret
lea
imul
jnp
sbb
ja
and
fiadds
les
scas
mov
or
imul
xchg
push
push
lahf
add
pushf
dec
test
leave
pusha
cmpsb
inc
pop
inc
cli
mov
test
xchg
je
xlat
call
out
mov
push
stc
add
pushf
lods
push
adc
add
mov
iret
push
sub
xor
jnp
sbb
out
in
fnsave
shrb
insb
fmull
sti
mov
int
pop
out
or
cmp
sahf
adc
aaa
mov
mov
cmp
jae
xchg
fwait
inc
dec
pop
mov
sub
xchg
ja
or
outsl
dec
repnz
mov
test
mov
sbb
stos
and
mov
push
jge
inc
cltd
sub
dec
insb
pop
adc
mov
shll
movsb
mov
xor
jecxz
inc
cmpsb
sti
push
adc
scas
mov
fisttps
pop
cmp
sbb
cmpsl
adc
sbb
xchg
dec
js
hlt
xchg
jno
or
push
mov
aad
xchg
das
xchg
jmp
pop
enter
in
mov
fisttpll
mov
insb
jg
xchg
sub
jg
in
xor
cmp
pop
scas
inc
or
sub
out
or
dec
push
mov
pushf
in
out
sahf
test
aam
pop
ret
push
ds
dec
pop
add
lret
inc
outsw
cltd
mov
mov
jle
cmpsb
dec
leave
lcall
imul
push
scas
ds
cmp
test
cmp
iret
and
sub
pop
cmpsl
stc
call
stc
mov
adc
sbb
ds
fucomip
adc
stc
push
push
inc
dec
int
mov
test
jg
add
xchg
clc
ss
das
adc
cmp
std
cmp
or
pop
dec
jae
shrb
sbb
and
ret
xor
and
adcl
sti
mov
outsb
inc
scas
stc
jns
sub
cs
jmp
push
aas
inc
mov
js
sub
inc
cmpsb
push
in
xor
movsl
call
mov
xor
pusha
cld
mov
mov
pop
test
in
sub
loop
mov
push
movsb
adc
pop
aas
sub
dec
mov
pop
jns
or
push
cmpsb
orl
les
xlat
sarb
or
ret
fs
xlat
imul
arpl
lds
mov
flds
outsl
xchg
dec
xchg
sub
call
sub
das
mov
jns
pop
cmpsl
or
or
jle
mov
cltd
pop
int3
add
mov
xor
lahf
sbb
sbb
add
repz
cmpsl
add
fwait
gs
or
shl
test
dec
mov
adc
iret
pop
jg
cwtl
xor
or
lcall
lcall
cmc
mov
adc
outsl
lret
xchg
push
insl
outsb
lock
or
sub
dec
jg
ret
add
fnstenv
dec
bnd
repnz
sub
inc
mov
and
and
jo
std
or
aad
sbb
adc
push
hlt
mov
ds
clc
mov
jnp
orb
jge
jns
sbb
sbb
fildll
es
cmp
cmp
faddp
out
adc
int
dec
mov
movsl
addr16
xor
sub
adc
sub
jnp
push
fucom
xor
mov
push
testb
mov
jno
dec
xor
fsts
enter
sarl
mov
push
lds
mov
cltd
fbstp
fldenv
push
mov
into
ret
ja
mov
cld
jne
and
xchg
loopne
xor
sbb
cltd
inc
mov
es
adc
adc
inc
inc
push
insb
pop
stos
add
loop
scas
sub
push
sub
mov
adc
test
push
movsl
jbe
jmp
sub
stc
sub
test
sbb
aam
cmp
xchg
mov
ljmp
ret
sbb
inc
movsb
bound
inc
pop
ss
inc
pop
stos
lods
jno
or
in
fisubs
cmp
sbbl
cmc
push
xchg
xchg
pushf
push
idivl
mov
lcall
push
xlat
gs
xor
push
mov
mov
xchg
or
mov
dec
push
and
and
xorl
push
mov
inc
lret
sub
xor
xchg
sub
loop
cmp
loopne
pushf
lea
inc
movsb
jecxz
std
jp
xor
dec
adc
pop
daa
test
mov
out
arpl
imul
loope
or
mov
add
es
loope
xchg
pop
ret
or
push
rcrl
nop
mov
pop
lock
out
movsl
and
add
sahf
mov
pusha
pushf
mov
mov
sahf
xchg
adc
mov
or
or
ret
aaa
loopne
bound
push
sub
mov
out
pop
or
icebp
je
jle
test
push
xchg
jmp
inc
cmp
fwait
jb
ss
pushf
lds
jne
loop
push
dec
sub
push
es
pop
cs
scas
cmpsl
bound
sbb
popf
and
call
mov
aad
xorb
pop
cmp
outsl
or
sbb
and
add
repz
mov
and
out
ret
stos
pop
mov
xchg
mov
test
loope
add
loope
repz
mov
jo
adc
xor
mov
cmp
rcrb
cmp
or
pop
mov
adcl
or
lds
adc
ss
orl
jns
gs
push
sarb
bound
test
aaa
lret
sub
push
or
dec
or
pop
mov
lea
mov
xchg
xor
pushf
jecxz
mov
sbb
rsqrtps
sub
and
insb
inc
nop
pop
xchg
ljmp
lret
mov
cltd
in
sbb
jg
lods
aad
sbb
pop
sbb
jp
add
and
sbb
cwtl
inc
push
mov
andb
xor
sbb
insl
pop
mov
fxch
pop
xchg
push
nop
xchg
add
ret
mov
mov
sarl
inc
push
mov
roll
mov
hlt
mov
frstor
mov
inc
movsb
rcll
test
or
and
dec
testl
mov
scas
clc
sub
push
xor
je
mov
inc
fnstcw
test
leave
addr16
cmp
popa
cmc
mov
fdivrl
jnp
imul
insb
pop
dec
nop
push
mov
push
mov
push
test
add
xchg
xchg
or
inc
xlat
pop
pop
stos
sbb
cli
xor
lods
cmp
xor
push
mov
mov
xor
inc
dec
sbb
mov
leave
testl
push
lret
jg
out
adc
sub
dec
jbe
cmp
or
std
mov
xor
lea
jl
jmp
mov
imul
lods
test
sbb
inc
imul
out
add
stos
push
pushf
data16
fwait
and
in
mov
in
push
test
lcall
jecxz
add
sbb
mov
cmp
es
out
or
test
and
pop
rorl
aad
sahf
adc
adc
pop
test
enter
outsl
mov
cli
ljmp
sbb
and
push
push
and
sbb
pop
push
jle
xor
mov
scas
enter
cmp
sub
leave
pop
push
sub
divl
mov
mov
es
test
mov
push
cmp
cmp
std
in
lock
imul
xchg
pop
xlat
pusha
dec
push
pop
xchg
std
add
adc
mov
xor
sbb
stc
add
and
adc
ret
jbe
movsb
push
and
sub
icebp
dec
mov
inc
jne
jl
cld
inc
add
jmp
adc
lahf
push
push
jae
adc
fs
fiaddl
into
pop
dec
aas
lds
xor
repz
lret
outsb
xlat
or
out
mov
push
adc
aam
dec
mov
mov
loope
fistl
mov
dec
and
sti
xor
push
call
in
dec
sub
and
test
inc
outsl
insb
mov
adc
dec
push
out
stos
leave
jns
cmc
sub
dec
or
or
fisttpl
loopne
in
out
pushf
adc
out
adc
jne
xor
dec
scas
sahf
adc
and
cmp
and
inc
pushf
add
sbb
dec
loopne
and
push
xor
cmp
add
and
pop
je
es
movsl
add
and
dec
movsl
insl
repz
jno
or
lock
push
mov
ljmp
or
fisubrl
clc
cmpsb
push
lcall
push
std
loopne
and
mov
outsl
pop
xchg
stos
notl
shll
xchg
pop
add
out
jge
adc
mov
fwait
pop
sub
gs
repnz
or
cli
jmp
cmp
jns
xchg
pop
dec
scas
or
ret
fildl
inc
inc
fs
bound
push
stos
fs
insl
and
sbb
sbb
mov
nop
fstl
aaa
stos
mov
mov
in
fnsave
dec
iret
sbb
fs
dec
inc
stos
or
pop
sbbb
and
xchg
adc
dec
xchg
rorl
dec
aam
adc
pop
cmpsb
inc
mov
push
jg
dec
jo
add
outsb
arpl
push
cmp
fidivs
dec
test
ret
add
scas
xor
push
push
add
int3
sub
jae
or
cltd
inc
inc
cwtl
push
cli
mov
mov
add
jl
adc
xchg
jg
xlat
sahf
mov
movsl
shl
dec
aam
je
pusha
mov
imull
inc
and
in
and
jl
addr16
dec
inc
xchg
hlt
jne
jge
mov
push
push
pop
enter
jno
aam
aaa
stc
test
shll
jg
inc
cs
pop
xchg
dec
or
outsl
orl
adc
jbe
sub
lcall
in
push
mov
adc
push
scas
out
js
pop
add
lahf
push
aad
cmpsb
pop
lret
hlt
and
cwtl
dec
notl
ja
or
jbe
mov
push
mov
nop
xchg
pushf
xchg
mov
imul
xor
pusha
data16
jns
mov
mov
cmc
cltd
inc
add
ret
lds
mov
loopne
sbb
aas
pop
and
pop
lcall
sub
jge
or
loop
lahf
push
ss
adc
inc
cli
repz
clc
add
lock
jo
pusha
jnp
pop
aad
xor
jge
mov
adcl
jbe
lods
mov
xchg
mov
out
aas
adc
filds
sub
mov
add
add
or
in
or
adc
dec
xchg
ljmp
ss
shll
jo
insb
lahf
lods
stos
mov
bound
imul
fsubrs
into
or
pop
shrl
in
add
bound
dec
inc
dec
pop
sbb
aas
jb
movsl
or
xchg
leave
hlt
lret
jo
test
cmc
and
or
and
inc
sahf
adc
xor
mov
arpl
xor
imul
outsb
mov
push
iret
inc
push
js
pop
rcrb
loopne
adcb
lea
insb
push
and
pop
cmc
testb
sub
mov
push
or
sub
iret
inc
xchg
pop
data16
xchg
jb
xor
xchg
push
push
test
ja
imul
data16
pop
push
les
xchg
lea
mov
fnsave
ret
cmpsb
dec
or
ret
iret
inc
popa
xchg
mov
faddp
mov
cs
repnz
inc
xchg
and
jae
cmp
jne
jb
outsb
bound
jne
aad
pop
mov
jne
xchg
shrb
push
add
addr16
mov
mov
mov
sbb
imul
idivb
imul
fistpl
inc
nop
xchg
adc
xchg
sub
mov
sbb
rcl
mov
dec
cmp
loopne
fdivs
fcmovnu
iret
or
xlat
loope
sub
aam
sbb
xchg
and
mov
push
mov
mov
sub
adc
stos
cmpsb
pop
xor
clc
jo
enter
cmc
vmovd
pop
and
xchg
mov
xchg
xor
push
mov
and
outsl
sbb
movsb
add
push
dec
dec
push
dec
dec
pop
mov
inc
fsubrl
mov
repnz
fsubr
push
outsl
jbe
imul
mov
in
imul
in
xor
mov
int3
mov
out
mov
insl
and
cmpb
ds
out
inc
push
movb
dec
and
ljmp
push
inc
pop
sbb
push
xchg
mov
setne
xlat
adc
inc
lods
adc
inc
sub
mov
cli
pop
outsb
and
xchg
xchg
and
nop
cmc
and
mulb
mov
fsubs
pushl
mov
outsb
fisubs
push
je
mov
pop
pop
pop
dec
push
pusha
push
jmp
or
push
out
sahf
data16
test
in
sar
ficoms
pop
scas
mov
fbld
add
inc
xor
jl
hlt
pop
sbb
push
mov
jae
and
sub
pop
add
fiadds
dec
push
or
sahf
mov
test
stos
cld
mov
sbb
push
mov
add
and
out
xor
nop
loope
fcmovu
add
daa
outsl
jbe
sahf
test
push
jae
pop
aad
or
or
cmpsb
mov
clc
pop
or
int
jl
repnz
mov
push
pop
cmp
jmp
pop
out
mov
lret
adc
push
std
daa
mov
push
mov
xchg
jnp
dec
into
mov
push
bound
cmp
jno
mov
lods
lcall
pop
filds
movsb
lret
dec
test
cmp
or
lahf
push
ficoml
adc
out
jg
addr16
mov
cwtl
adc
popa
xor
jae
imul
insl
mov
pop
or
xchg
int3
or
xchg
cmpl
jp
cs
aaa
out
and
fcmovb
push
lcall
mov
add
xor
pop
xor
loope
push
xchg
mov
scas
jmp
test
repnz
mov
pop
icebp
push
pop
mov
xor
add
aaa
test
ds
sub
faddl
xchg
into
mov
mov
xchg
adc
loopne
lahf
push
xchg
cli
adc
repnz
lock
xlat
push
mov
jg
movsl
scas
add
orb
lret
lahf
adc
lock
dec
loope
lcall
cmpsl
and
int
mov
sbb
scas
inc
mov
jno
sbb
arpl
xchg
mov
mov
ret
stos
insl
arpl
mov
arpl
outsb
sub
pushl
aam
cmpsb
adc
out
test
fnclex
pop
fbstp
int3
mov
jne
ss
aad
xchg
outsb
outsb
mov
pop
cmp
out
leave
test
popa
add
push
xchg
outsl
xor
shrl
les
mov
adc
aaa
dec
ss
int3
push
das
cmp
cmp
jo
dec
and
sarl
out
insb
adc
sbb
cs
movsb
sahf
pop
push
cmc
xchg
push
cmp
fadds
cli
sbb
out
fcmovne
jnp
addr16
int3
lods
jmp
mov
jl
std
mov
mov
inc
pushf
arpl
aam
mov
cmp
adc
or
ds
lods
cmp
cmp
mov
cs
mov
or
rep
pushf
cmpsb
dec
push
cmp
push
and
push
dec
in
cmp
out
sbb
lods
jo
jle
nop
addr16
mov
ss
enter
outsl
push
jnp
add
mov
or
cmp
outsb
fs
lret
cmp
add
inc
or
insl
adcb
pop
push
xchg
xchg
int
dec
and
cmp
mov
mov
xchg
push
lret
jns
cmpsb
cmpl
insb
cmpsb
fcmovnu
mov
adc
mov
and
jg
testl
xor
test
pushf
das
mov
xor
dec
movsl
mov
adc
out
jae
mov
fimull
lds
fnstsw
cmpsb
orl
mov
lret
push
fiadds
mov
gs
lahf
push
pop
sahf
mov
add
cmp
imul
inc
mov
loop
pop
jns
dec
aad
mov
add
pop
andb
ljmp
xchg
and
ljmp
sti
dec
shl
cmp
orb
xchg
je
mov
cmp
mov
push
xchg
int3
jl
push
pop
push
jl
rcl
rorb
scas
cli
push
popf
pop
negb
xor
fnsave
xchg
adcl
xchg
insb
fimull
xchg
mov
adc
rcl
out
add
outsl
scas
inc
movsl
mov
lret
mov
popa
decb
jmp
push
movsb
in
sub
fwait
ds
loopne
pusha
pop
outsb
clc
pusha
inc
jmp
test
inc
int3
dec
mov
sbb
add
pop
fs
imul
sahf
jo
push
loop
pushf
mov
sub
rclb
shr
lcall
dec
inc
or
fcomi
and
jl
call
pop
xor
xor
stos
js
ret
mov
loop
fisubs
jae
pop
shl
in
mov
cmp
or
xchg
hlt
mov
call
xchg
clc
stc
int3
push
xor
sbb
cmp
imul
push
lds
daa
or
icebp
or
mov
xlat
ja
add
and
dec
jns
pop
jge
sbb
xchg
adc
std
test
and
hlt
jb
mov
and
adc
mov
in
test
xchg
mov
ss
cmc
jle
add
xlat
jge
and
jae
stos
out
inc
adc
xor
stc
and
cmc
test
iret
xchg
xchg
aad
mov
pusha
jb
fwait
xor
jmp
cmp
arpl
mov
outsl
dec
notb
sbb
fistps
sbb
lcall
rcll
xorb
pop
mov
xchg
aam
bound
test
sbb
inc
fimull
test
jbe
ljmp
cld
push
push
outsl
out
das
mov
add
mov
jmp
adc
stc
add
imul
sub
leave
rcll
cwtl
cwtl
lods
mov
cwtl
cltd
add
jb
mov
dec
or
pop
xor
das
xchg
or
jo
xchg
lea
aad
inc
pop
jge
out
and
xor
inc
push
add
in
stc
and
daa
stc
lds
adc
cmpl
jle
mov
decl
lret
stc
pop
xchg
inc
out
adc
mov
lods
stos
lahf
jae
fucomip
xchg
jnp
repz
popl
xchg
ljmp
xchg
arpl
into
outsb
add
outsb
aam
pop
adc
lock
jecxz
pop
shld
cld
jne
ret
mov
stos
popf
jbe
push
int3
xadd
es
jmp
xchg
mov
mov
pop
mov
mov
fiaddl
cmp
pushf
imul
ljmp
lcall
cmpsl
loope
test
stos
jmp
mov
push
inc
sub
cmc
adc
add
es
call
or
ret
cs
jecxz
ret
popf
add
cld
gs
pop
mov
mov
mov
ljmp
cs
pop
xor
hlt
sbb
addb
negb
out
shl
or
lea
cmpsl
test
enter
push
movb
lea
ficomps
mov
ficompl
ret
flds
call
sub
jb
test
lods
ds
cmp
xchg
lcall
xchg
pushf
int3
cmp
dec
jns
mov
std
mov
inc
adc
je
xchg
leave
mov
rclb
sbb
insl
nopl
int
ja
adc
mov
inc
movsb
push
in
or
jae
or
in
add
dec
int
push
clc
dec
dec
push
cmp
mov
addr16
push
xor
mov
les
mov
cmp
clc
inc
shlb
push
xchg
test
xor
pop
int
mov
or
and
dec
and
loopne
lret
cmp
add
mov
and
lds
mov
ret
stos
lret
adc
or
imulb
inc
inc
jp
cmp
mov
test
add
pop
popa
out
jecxz
aaa
mov
xchg
inc
lahf
adc
subb
fwait
jmp
fdivr
push
int
in
mov
inc
xor
push
fisttpl
cmp
loope
cmp
jnp
xor
pop
mov
add
loop
ljmp
push
fcompl
popf
ds
xchg
mov
lea
cmp
or
mov
or
pop
lret
or
xchg
imul
xchg
je
jo
mov
arpl
xor
outsl
jno
mull
jg
jno
sti
jae
decl
jmp
pop
bound
stc
adc
mov
or
test
dec
hlt
dec
cs
loop
ja
pushf
cli
aam
jns
xor
fadds
dec
push
jne
sahf
jnp
mov
out
cmp
mov
mov
push
jp
aaa
ret
inc
std
rorl
push
xchg
sub
ss
rolb
add
loopne
jne
or
mov
push
cmc
repnz
clc
jle
cmp
loope
pop
dec
popf
mov
adc
arpl
push
and
adcl
push
push
int3
push
and
cmp
sub
in
test
pop
ss
imul
mov
add
sbb
lahf
gs
push
je
sbb
xor
dec
in
stc
outsb
cmpsb
inc
sbb
leave
mov
or
fwait
imul
outsb
fimull
xor
out
mulb
sbb
inc
mov
cmpsl
dec
dec
push
add
inc
xor
inc
imul
mov
sbb
bound
outsl
frstor
xor
jmp
mov
pop
xlat
sti
mov
mov
jae
lahf
mov
xchg
dec
mov
mov
fdivrl
sbb
leave
pop
insl
out
mov
dec
pop
aas
mov
rcrb
pushf
call
mov
in
mov
roll
add
pusha
jae
push
cmpsb
les
aaa
rcll
pop
inc
popa
je
mov
mov
add
lods
add
mov
push
out
xlat
jge
lret
jno
sbb
in
mov
jbe
inc
dec
inc
sti
outsb
out
adc
mov
mov
mov
dec
imul
dec
mov
scas
mov
cmpsb
dec
inc
gs
xchg
fwait
and
pop
mov
js
in
popa
cmc
lahf
and
ja
jno
mov
stc
jp
les
insb
bound
call
sub
jmp
lahf
inc
fisubrs
jae
fidivrs
js
arpl
ret
mov
adc
lods
mov
push
enter
xchg
or
inc
and
std
or
adc
neg
add
or
jae
cmp
mov
jmp
jae
mov
subb
pushl
sub
push
inc
fwait
aas
cs
push
dec
xchg
ret
jo
js
push
xor
test
add
cmc
mov
pop
jno
push
lret
gs
and
sbb
out
hlt
mov
pop
popw
out
scas
jecxz
sbb
xchg
dec
dec
mov
iret
jp
fs
cmc
dec
pop
jbe
sub
xlat
mov
jmp
sbb
mov
jo
sbb
aas
mov
cmp
cmpsl
or
fstps
xchg
pop
mov
add
sti
sub
jl
push
push
jp
addb
dec
push
xchg
jae
lods
lea
fildl
data16
xlat
in
dec
fs
and
jg
and
dec
lcall
dec
cmp
sub
push
inc
jb
inc
addb
gs
push
jmp
mov
les
jle
sub
pop
add
xchg
pop
pop
rcrb
out
gs
sbb
movsl
or
xor
mov
mov
ss
clc
cmp
in
scas
in
xlat
cmp
sbb
divl
and
or
loopne
leave
inc
js
rcrb
pop
mov
rcr
xchg
popa
sub
in
sbb
ds
jbe
mov
aad
sbbb
mov
adc
add
ss
not
adc
mov
test
orl
icebp
fisubrs
jge
cmpsl
sbb
dec
mov
jae,pt
lods
int
push
inc
popf
xchg
lods
aad
pop
xchg
add
dec
in
jecxz
dec
sti
test
jge
sahf
jbe
pop
popf
cmp
mov
mov
fcompl
sbb
sbb
cmpsl
inc
cmc
sbb
pop
dec
sub
adc
lods
les
pop
push
int3
push
sbb
mov
out
scas
por
rorb
xchg
pop
sbb
repz
test
pop
mov
mov
stos
push
and
add
push
push
mov
sub
jp
mov
test
mov
stos
fwait
or
mov
xchg
inc
pushf
cmc
loope
adc
cwtl
add
mov
add
test
outsb
add
iret
add
insb
leave
sub
pop
push
dec
mov
sbb
sbb
mov
outsl
jle
pop
sbb
in
mov
or
push
add
or
movsb
mov
cld
xor
adc
xor
mov
and
cmove
inc
mov
popf
fcmovnbe
ja
mov
hlt
and
out
lock
xchg
iret
ds
movsl
out
jae
test
adc
or
loop
lcall
mov
xor
ret
sbbb
add
jo
rclb
cld
mov
xchg
iret
jg
fisttpl
jbe
jecxz
pop
cmpsb
mov
nop
sbb
sbb
and
sbb
stos
bound
je
rcrl
out
dec
xchg
mov
push
mov
inc
pop
mov
imul
and
jb
dec
lds
hlt
jbe
or
movsl
outsl
cwtl
push
lock
daa
mov
orl
jae
insl
out
push
inc
pop
enter
mov
sbb
pop
insl
mov
mov
mov
lock
fidivrs
xchg
stos
mov
inc
push
push
xchg
je
sub
fdivr
and
mov
xlat
inc
mov
ss
adc
push
sbb
sub
cs
mov
xor
pop
jns
xchg
dec
sub
mov
cmp
and
je
rcr
divb
dec
js
mov
insb
out
xchg
and
mov
jmp
pop
cmp
jne
fstpt
fidivs
ljmp
sar
pushf
mov
gs
add
lods
cltd
cmpsb
mov
in
xchg
decb
mov
mov
push
pop
dec
mov
inc
ja
in
inc
scas
ret
xor
inc
inc
cmp
insb
scas
enter
cmp
adc
pop
incl
adc
jp
mov
mov
mov
lds
imull
dec
out
cld
das
ret
and
nop
xchg
jbe
pop
popa
dec
jno
repnz
jecxz
sbb
dec
cld
loope
repnz
jecxz
loope
insb
xor
arpl
jmp
stc
mov
inc
mov
push
xor
cmp
mov
adc
xchg
in
fidivs
cwtl
popa
inc
jae
sbbl
imul
arpl
push
aas
cmp
call
inc
push
add
and
clc
mov
cld
dec
ss
dec
dec
repnz
inc
fmull
aam
mov
adc
out
call
adc
jbe
adc
inc
sbb
mov
or
xchg
sarb
in
data16
fs
push
leave
dec
call
mov
push
xor
cli
dec
jmp
sub
xor
call
xchg
lods
lea
je
jle
mov
pop
movsl
setl
ds
add
sub
fs
iret
cli
and
lods
mov
jbe
addr16
sbb
pop
mov
out
inc
or
mov
ss
adc
mov
out
cmp
jge
xchg
mov
leave
cltd
xor
pop
sbb
jle
inc
jae
test
fwait
jne
adc
mov
popf
pop
cli
pop
sbb
and
shrb
xchg
fbstp
out
pop
test
xor
or
inc
das
sahf
push
cmp
lods
and
add
in
push
or
hlt
movl
adc
push
xchg
cld
sahf
adc
mov
rol
mov
add
decl
dec
clc
aaa
scas
adcl
or
loop
push
int
mov
dec
cmp
lcall
in
loop
pop
mov
stc
sub
mov
cmp
jne
or
std
inc
inc
mov
cmp
mov
sti
popa
ret
pusha
and
sub
mov
pop
lret
rorl
cmc
cltd
imull
jle
pop
cmc
inc
jg
movsb
xor
pop
inc
fdiv
jae
js
adc
jecxz
mov
sub
roll
add
cmovg
mov
sti
jmp
push
std
dec
jl
arpl
data16
push
ret
inc
leave
mov
or
push
add
mov
mov
adc
xchg
shl
push
hlt
loop
rcr
or
add
scas
adc
and
xchg
aaa
lock
mov
mov
adc
jns
add
adc
fnsave
gs
call
addr16
lods
push
js
in
imul
mov
inc
cmp
fucomip
outsl
add
std
push
mov
push
sbb
or
js
lods
adc
xchg
and
sbb
movsl
stos
rol
dec
xor
mov
lods
dec
into
cmp
sbb
xor
mov
sub
adc
cmpsl
inc
lods
dec
mov
aaa
xor
divb
dec
jae
add
jo
sbb
gs
out
jge
test
adc
out
sbb
pop
aas
mov
ss
movl
add
stos
cs
fwait
inc
xor
fistpll
lret
xor
xchg
push
lods
pop
adc
mov
lahf
add
xor
jge
pop
in
fstp
xor
xor
or
and
lahf
syscall
or
jmp
cwtl
out
imul
jle
ljmp
push
or
add
fsubr
push
sub
or
push
sub
jb
cmp
inc
jbe
inc
ljmp
fbstp
cmp
loopne
test
movsb
sub
cmp
dec
dec
or
shlb
jbe
xchg
pop
xchg
in
pop
xor
mov
dec
repnz
outsb
scas
lret
loopw
int
cli
push
pop
addr16
inc
xchg
loopne
pop
rorl
sti
aas
jno
leave
adc
xchg
call
add
ljmp
sbb
popl
popf
mov
adc
loope
sbb
sbb
idiv
idivl
mov
pop
or
fstpt
into
pop
sti
xchg
insb
mov
notl
mov
in
xchg
dec
adc
gs
pop
roll
push
or
dec
pop
mov
andnps
or
xchg
lds
sahf
sbbb
add
loop
push
dec
clc
cld
push
scas
xor
addr16
push
ds
mov
mov
push
jae
or
fcmovnbe
in
pop
out
and
push
pop
insl
rol
or
hlt
cmp
fwait
repnz
sub
sbb
pop
cwtl
cmp
pushf
and
sub
xor
adcb
cmpsb
mov
imul
inc
shufps
mov
std
ljmp
pop
imulb
lahf
jl
roll
cmp
add
data16
int
loopne
test
cwtl
stc
cmpsl
lea
ret
rorl
jns
nop
jnp
test
loop
jecxz
xor
push
test
inc
push
xchg
xor
and
cwtl
aam
xor
out
mul
jns
mov
sbb
sbb
jp
and
jmp
push
daa
sahf
icebp
mov
arpl
stc
cs
mov
stos
cli
jl
aam
movsl
jnp
and
scas
test
fsubs
cltd
out
dec
mov
int
push
or
cmp
inc
dec
les
popa
xlat
call
pushf
in
sti
inc
test
cmc
sub
mov
in
outsl
add
mov
pop
sbb
cld
xor
sub
test
sbb
call
sti
adc
mov
mov
push
push
add
subb
lods
int
mov
xlat
fcoml
mov
and
test
int3
mov
in
lods
xor
out
rclb
in
push
dec
inc
shll
ja
mov
jmp
faddl
xor
fmuls
aad
sub
pushf
and
in
adc
int
fs
push
cmpsb
add
notb
mov
ficomps
ret
std
js
fistpll
daa
cmp
mov
jnp
sub
cli
fbld
fnsave
jnp
lea
jle
aam
xchg
push
jmp
pop
or
pop
cwtl
outsl
add
push
ja
mov
mov
dec
std
and
mov
sbb
push
sbb
pop
out
aas
and
push
pop
jl
and
rol
push
ret
outsb
fcoml
push
mov
jo
imul
inc
enter
or
mov
movsb
mov
push
and
rclb
adc
arpl
push
aaa
mov
xchg
out
insb
in
inc
stos
sub
cmp
jnp
dec
shl
jg
cmp
sbb
jb
pop
inc
jne
out
imul
xchg
cld
pop
mov
aam
mov
popf
clc
movsl
pop
or
and
jnp
nop
mov
xor
sub
and
mov
push
push
arpl
add
lea
arpl
daa
push
test
and
inc
mov
mov
fdivs
mov
xor
mov
xchg
cmp
xchg
repnz
in
mov
sub
in
shlb
rclb
pop
loope
ljmp
push
and
je
pusha
push
popa
js
fdivs
fstps
mul
dec
pusha
pop
and
lret
bound
ret
call
dec
push
int3
loope
fs
xlat
and
fisttpll
jmp
jnp
jb
jnp
ret
lods
cmp
rolb
pop
in
adcb
test
cltd
cmc
aad
dec
outsl
xor
mov
popa
pop
push
adc
jns
aam
loop
xlat
inc
push
shlb
add
cli
mov
cltd
mov
jp
push
xor
stos
mov
lahf
int
mov
jne
push
ds
fiaddl
sub
cmp
sub
push
pop
mov
push
aas
jg
dec
jg
adc
sub
sbb
fcom
mov
fwait
das
jne
xchg
dec
fbld
push
add
subps
mov
sub
fbstp
xor
negl
shr
sub
cmp
xchg
dec
stc
push
fsubl
pop
bswap
ror
pop
lcall
push
sub
dec
xchg
xor
mov
cmp
aaa
add
pop
cld
add
jle
outsb
sbb
test
pop
in
or
mov
mov
mov
jmp
pop
pop
jecxz
clc
fiaddl
push
dec
cwtl
sbb
xchg
xchg
mov
les
inc
iret
sahf
inc
jb
mov
call
and
push
jno
cmc
fdivl
rorl
ljmp
jp
jne
fcmovne
xchg
stos
jbe
in
adc
push
iret
xor
out
add
or
dec
inc
sbb
lds
pop
int
das
f2xm1
rorb
ret
add
pmaddwd
test
aam
insb
jb
dec
jbe
sahf
jnp
xchg
lods
sub
mov
mov
ds
cwtl
pusha
std
xchg
add
shll
cmp
mov
icebp
stos
jle
push
stos
mov
xor
icebp
incl
inc
or
pop
cmp
inc
pop
addl
arpl
dec
fadds
mov
mov
or
stc
mov
jne
ljmp
xchg
es
sub
pop
xchg
pop
mov
mov
addr16
pushf
push
pop
nop
jne
aaa
arpl
daa
mov
mov
in
adc
es
adc
mov
shlb
pop
lret
pop
icebp
cmp
lret
xchg
ljmp
mov
mov
dec
cmpsl
jbe
xchg
nop
stc
pop
cmc
xchg
mov
test
xchg
rcr
cmp
push
inc
mov
in
test
jl
xchg
aas
jp
dec
sarb
mov
add
sub
frstor
pop
and
xor
mov
roll
xor
and
sti
jmp
lds
adc
sub
outsl
sahf
div
inc
jmp
inc
loope
mov
shrb
jmp
in
dec
fwait
mov
mov
push
pop
fdivr
imul
push
imul
repnz
les
xor
xchg
mov
sub
sub
shrb
adc
dec
dec
adcb
add
adc
push
push
mov
adc
lret
push
fstl
sub
out
jne
mov
imul
dec
int3
stc
mov
mov
cli
ret
fidivs
xchg
adc
mov
xchg
mov
mov
or
mov
aam
cmp
or
push
and
shll
xor
je
lods
mov
les
fstpl
add
jecxz
inc
adc
lods
movsb
jne
push
sbb
jno
jae
bound
mov
mov
mov
loopne
mov
lock
insb
mov
imul
das
push
outsl
jo
push
inc
push
cltd
arpl
cmp
mul
push
sbb
loopne
sahf
cltd
mov
popf
dec
rorb
mov
add
and
jmp
pusha
and
data16
fildl
mov
xchg
sub
add
loopne
hlt
mov
ljmp
rcll
fwait
sub
mov
lahf
dec
loop
sub
mov
adc
leave
negb
test
hlt
repz
inc
inc
adc
cwtl
push
mov
xchg
adc
imul
in
test
into
mov
nop
xchg
push
xor
inc
out
mov
stos
jo
jmp
in
into
fisubs
push
pop
std
sti
outsb
push
inc
cwtl
ret
mov
mov
push
xchg
mov
test
jg
mov
pop
movsl
lods
test
add
popf
scas
mov
pop
sbb
lcall
jae
xchg
sbb
lods
xchg
adc
loopne
cmp
inc
popf
lock
push
jne
test
imul
loopne
fucomp
cli
or
xorl
lock
insb
call
sub
rclb
ljmp
js
lret
ljmp
xor
in
mov
inc
std
popa
adc
inc
loop
push
add
mov
pop
outsb
int
mov
sbb
push
cmp
xor
add
pushw
pop
data16
ret
lret
clc
mov
xor
dec
jo
jge
jmp
jmp
add
mov
data16
xchg
into
or
xorps
imul
ficompl
cli
imul
xchg
adc
pop
adc
mov
into
fs
call
jmp
popf
adc
sub
inc
stos
and
push
sub
sbb
iret
pop
mov
xor
test
aad
cli
popf
xchg
loopne
jne
jecxz
pop
mov
aad
loop
iret
or
pop
fadd
mov
int3
cmpsl
mov
cmp
xchg
xchg
and
or
aad
jmp
lods
shrb
pop
and
scas
cmp
adc
out
insl
ja
inc
sub
push
insl
dec
fistl
scas
sbb
adc
jne
fdivrs
sbb
add
dec
and
stos
cmp
sbb
loop
flds
or
arpl
mov
xchg
ds
xor
push
xor
add
xor
mov
or
mov
push
mov
or
mov
mov
lret
sub
rcrl
add
fcomp
and
rolb
push
jns
loop
cmp
in
in
addr16
mov
adc
lret
cwtl
jo
push
mov
mov
lds
inc
and
push
test
inc
sbb
sub
sub
cmpl
sti
push
arpl
fstps
push
inc
adc
push
mov
test
lods
mov
inc
adc
pop
jp
out
ja
push
jle
mov
out
rcr
scas
inc
movsl
insb
sbb
movsb
popf
jmp
call
mov
sub
mov
push
icebp
repnz
std
ss
sub
dec
lcall
cmpsb
add
ljmp
fstps
daa
daa
sub
mov
mov
mov
cli
mov
jb
pop
pusha
mov
or
dec
jne
movsb
data16
xchg
sti
test
and
int3
inc
dec
lods
push
int
push
cmpsb
out
xbegin
jle
ret
mov
or
mov
and
adc
leave
movsb
loope
xchg
mov
jge
fimull
lods
out
dec
or
movl
pop
lock
fistpll
mov
xchg
movsb
cmp
sarl
add
data16
sub
push
push
fmuls
push
adc
cmp
add
push
cs
in
xchg
push
lret
movsb
les
mov
jne
jae
shlb
add
xchg
dec
push
movsb
push
mov
mov
shlb
leave
imul
jns
jle
movsl
pop
popf
jecxz
cmp
popa
stc
loop
jb
icebp
incb
inc
sub
pop
repnz
lock
dec
push
call
ret
ret
rcrb
push
lahf
cltd
mov
das
adcb
std
pop
mov
and
out
lods
pop
icebp
xorb
push
push
mov
jnp
mov
test
cwtl
inc
mov
mov
and
xor
loop
lds
lods
fbstp
sub
xlat
jae
hlt
hlt
int3
subl
pop
sub
xor
jb
sbb
repz
mov
adc
pop
pushf
jno
pop
leave
jg
in
sbb
iret
push
and
int3
mov
fsubrl
inc
stos
pop
sub
cmp
std
stc
inc
lods
insl
fnstcw
xchg
adc
pop
xlat
aad
mov
xor
int3
xor
and
inc
mov
push
lock
pop
xlat
push
jp
jo
sub
and
and
mov
pop
jl
mov
mov
ljmp
inc
pop
pop
sbb
bound
mov
es
dec
adc
ficompl
push
cmp
xchg
sub
out
out
jne
sub
sub
insl
cmp
mov
or
aaa
ret
add
neg
xchg
roll
in
jge
insb
lea
mov
andb
ret
mov
je
or
xchg
push
fsubrs
inc
mov
mov
fisubs
and
repz
fdivrs
out
add
pop
sti
push
movsl
ss
push
mov
xor
pop
ljmp
arpl
outsb
add
out
push
movsb
ss
cld
lock
mov
dec
inc
and
push
pop
cltd
xchg
jns
sub
loopne,pt
pop
add
adcl
mov
inc
fs
dec
dec
xchg
adc
test
and
jp
ret
outsl
jg
add
lods
les
sbb
out
jne
dec
cwtl
lret
adc
and
cmp
dec
xchg
bound
call
in
lcall
cli
xor
das
sarl
shl
jne
cmp
ret
xor
pop
and
cmp
stc
xchg
mov
js
push
mov
or
cli
sbb
idivb
add
inc
jno
roll
sti
lods
ret
sbb
mov
outsb
les
adc
nop
push
sbb
stos
cmp
int3
or
sub
inc
push
rcll
push
jecxz
orb
cmp
pop
mov
inc
xlat
test
imul
mov
data16
aas
enter
add
fisubl
fucomp
pusha
cmp
fs
inc
xor
push
ret
mov
mov
out
push
xorb
dec
jne
int
out
gs
xor
in
in
jmp
add
hlt
sahf
jnp
outsb
pop
scas
add
mov
push
repnz
push
stc
xchg
add
movsb
std
xor
repnz
push
bound
je
xor
adc
imull
adc
mov
ret
push
aas
stos
cmp
aad
cmpsb
aas
ja
adc
sub
mov
scas
in
jmp
lcall
fwait
or
jge
mov
pop
daa
xchg
scas
cmp
or
or
sbb
inc
ja
jp
insb
ss
aas
add
sub
mov
add
cmpsl
lea
mov
mov
repz
fsubrl
lds
std
testb
cmpsb
filds
es
mov
mov
clc
dec
aaa
dec
aaa
lea
xchg
rorb
inc
push
mov
test
push
popa
jg
cmpl
lock
mov
and
repnz
mov
imul
or
arpl
pop
leave
xchg
dec
stc
inc
mov
fnstcw
fdivl
flds
mov
push
inc
xchg
data16
hlt
xchg
popf
xor
mov
in
outsl
or
pop
cmc
in
fiaddl
and
loopne
pop
dec
cwtl
pop
cmp
push
data16
xchg
jno
jl
push
lret
sti
and
fwait
pop
mov
out
dec
dec
push
sub
arpl
aas
jnp
push
mov
mov
cld
dec
pop
rcrl
call
into
adc
add
mov
xorl
out
xchg
xor
push
pushw
and
push
icebp
mov
addr16
imul
inc
mov
gs
lea
sahf
mov
out
mov
or
mov
and
mov
dec
daa
lret
push
lret
push
cmp
jbe
lret
jo
insl
addr16
push
push
test
orb
mov
and
jp
sbb
fstps
mov
shrb
enter
or
jle
inc
mov
outsb
stos
xorb
sbb
shl
aad
pop
lods
xlat
inc
aad
data16
pop
clc
mov
negl
call
test
cs
inc
mov
stos
push
or
pop
lahf
mov
jecxz
sar
push
sbb
scas
adc
xchg
shl
mov
mov
in
aam
lahf
out
bound
mov
in
mov
fists
sub
arpl
ficomps
or
inc
cmp
inc
int
repz
aaa
and
fistps
dec
popf
addr16
pop
outsl
fs
adc
les
mov
ret
dec
arpl
xchg
xchg
add
cmp
inc
mov
ljmp
or
push
or
cs
add
add
movsb
jns
in
xchg
xchg
int3
stos
sbb
dec
push
add
add
jl
xor
test
jmp
int3
push
outsb
pop
icebp
push
xchg
mov
out
and
add
std
scas
or
pop
xorb
cmpsl
insl
popa
stos
test
adc
mov
gs
jne
int
enter
jno
push
mov
mov
mov
int
outsb
jmp
imul
xor
or
fsts
aas
push
test
mov
pop
push
and
rep
nop
fyl2x
mov
scas
adc
iret
mov
and
inc
ljmp
push
or
xchg
fiadds
sub
adc
or
jns
or
pop
dec
xchg
cmc
cltd
stc
clc
push
adc
lods
cmpsb
cmp
cmpb
push
idiv
pop
lcall
mov
loop
mov
ficompl
mov
dec
mov
add
add
out
mov
sub
insl
dec
or
add
xchg
popf
loop
fxch
int
cmpsb
inc
inc
push
fwait
adc
or
xor
stos
jmp
cmp
jne
mov
push
mulb
jbe
mov
enter
push
add
cmpsl
insl
pop
leave
jbe
jae
xor
push
icebp
xlat
ret
mov
pop
mov
jnp
aas
mov
ficompl
fsubrl
je
aas
adc
adc
jae
sbb
out
notb
sbb
sub
xorl
leave
jae
mov
mov
push
pop
fnsave
pop
and
arpl
xor
daa
ficompl
cmp
std
xchg
push
xchg
pop
pop
lods
inc
out
dec
mov
sub
lea
add
dec
decl
pop
mov
in
loopne
jg
les
cmp
mov
pop
repz
sub
pop
pop
out
and
add
xchg
xor
ja
cmpsl
mov
frstor
or
int3
test
xchg
sub
lock
fsubr
add
push
mov
aas
jmp
add
rol
pop
and
mov
pshufw
insl
repz
add
out
dec
sbb
mov
mov
inc
clc
add
push
inc
mov
es
sbb
xor
sbb
xchg
add
cmc
out
or
cmc
subb
and
scas
pop
xacquire
sbb
xchg
sahf
mov
mov
jecxz
mov
mov
or
dec
push
pop
rorb
sub
rcrl
dec
jle
and
cmpsb
in
mov
pop
fisubrs
or
shlb
lock
jl
mov
xchg
and
xchg
das
in
scas
scas
call
sub
or
xor
mov
dec
ficomps
inc
call
inc
pushf
ret
mov
data16
jp
psubq
leave
movl
pop
add
imul
mov
out
sub
cmpsb
mov
lock
popa
add
test
adc
add
push
push
push
sbb
jge
mov
mov
aaa
cld
mov
jb
call
andb
in
cmp
std
mov
les
fwait
jecxz
dec
enter
and
stc
mov
cmc
and
sahf
stos
fidivrl
and
rclb
lret
pop
sbb
test
fiaddl
jne
jbe
int
into
lds
test
xchg
inc
lock
test
ljmp
jb
add
jbe
addb
das
inc
inc
push
rcrl
outsl
xchg
popa
cld
les
or
jl
pop
push
je
sbb
shl
test
mov
movsl
idivb
mov
dec
and
mov
mov
push
cmp
scas
push
dec
jb
mov
mov
mov
add
in
and
mov
fdivr
lret
in
mov
xor
js
push
jge
mov
sub
cmpsl
cmp
hlt
pop
hlt
inc
cmp
and
dec
clc
int
scas
mov
bound
aas
pop
mov
jo
xor
imul
lahf
bound
daa
mov
pusha
out
neg
cmp
loopne
adc
sub
inc
mov
xor
push
mov
aaa
arpl
call
mov
fucomi
inc
lods
sbb
scas
inc
mov
xchg
hlt
ret
or
adc
xchg
out
js
pop
cmp
jns
mov
push
enter
or
out
in
fstpt
jg
add
adc
lret
or
dec
out
xchg
inc
push
icebp
pop
test
add
xchg
cmp
cli
mov
fidivrl
fisubrl
sbb
adc
insb
or
mov
adc
mov
jo
and
fcompl
imul
and
dec
rolb
xor
mov
or
mov
mov
subb
mov
ret
and
rorl
nop
mov
mov
or
aas
out
sub
das
cltd
cs
inc
lods
dec
cmp
dec
js
fwait
in
sbb
mov
cmp
jo
xchg
cmpsl
mov
lcall
subl
ffreep
in
inc
mov
repnz
mov
loope
jp
mov
test
push
mov
push
out
iret
out
sub
mov
sbb
mov
push
cwtl
sbb
sbb
pusha
cmpb
push
jb
sub
insl
inc
xchg
mov
das
jno
fwait
push
dec
imul
imul
es
lahf
xchg
rclb
clc
xchg
fs
fdivrl
xchg
ret
add
push
xchg
out
test
xor
xor
lea
sbb
pop
sbb
fcoms
fs
mov
mov
sbb
nop
popa
jge
mov
ficompl
push
out
and
dec
cwtl
insb
fs
cmp
sub
lahf
outsl
ja
and
add
mov
ja
push
ficoml
sbb
repz
arpl
or
out
rorl
inc
stos
shll
or
leave
shrb
push
xchg
jne
ds
fwait
pop
ljmp
jo
cli
shrl
add
jno
shll
stos
enter
iret
scas
and
dec
adc
cmp
push
nop
pop
incl
outsb
add
scas
movsl
push
xchg
pushf
adc
mov
jmp
repnz
mov
push
push
mov
dec
adc
push
ret
outsb
test
or
aaa
and
pop
es
dec
cmp
xorl
cld
rolb
dec
out
mov
dec
jbe
add
addr16
rorl
in
push
mov
sbb
int
inc
lret
mov
xchg
cltd
or
jle
add
inc
stc
sub
sub
or
imul
pop
or
rorb
xchg
xlat
insl
out
aaa
cmp
loopne
mov
into
or
jl
jp
insl
mov
outsb
jmp
adc
or
mov
push
push
ja
nop
adcl
cmc
std
in
arpl
test
int3
outsb
insl
bnd
cmp
es
sub
sarl
popf
push
cs
mov
cmp
push
adc
pop
das
je
add
sub
sti
test
les
pop
mov
push
loopne
push
cli
dec
dec
aad
rolb
dec
add
add
sbb
into
cmp
in
aaa
lret
lock
xor
jae
sarl
stos
hlt
mov
xchg
xor
ja
push
sub
pop
dec
enter
das
cli
mov
mov
pop
loope
push
popf
add
sbb
add
and
scas
cmpsl
inc
popf
sub
cli
fnstsw
pop
inc
adc
and
push
push
cmc
mov
xlat
mov
stc
sbb
push
inc
shll
subl
jmp
adc
xchg
pushf
adc
dec
fucomip
pop
dec
imul
insb
xchg
xchg
es
or
sarl
es
xabort
lahf
mov
jle
pop
arpl
push
cmp
fildll
mov
lods
popa
stos
add
inc
xchg
push
xchg
jbe
sbb
xchg
in
in
dec
or
inc
xchg
mov
mov
push
jb
mov
add
ficoms
sbb
mov
js
mov
or
pop
shrb
aam
cmp
push
jp
jbe
inc
fld
adc
in
div
push
cmpsl
ss
cmpsl
dec
lcall
and
jg
enter
les
es
ret
mov
push
fidivl
mull
and
adc
sub
add
and
xchg
jno
mov
aas
inc
inc
inc
dec
test
inc
daa
jnp
jns
mov
stos
push
jbe
roll
xor
inc
mov
jge
je
clc
mov
and
rorl
sub
lea
adc
test
daa
cwtl
movsb
adc
add
push
add
fstl
or
inc
js
loop
fadds
out
xlat
and
sbb
lods
jle
adc
xchg
repnz
neg
aaa
cld
sbb
jo
adcb
rol
outsl
jg
pop
fs
sub
xchg
ja
out
jg
outsl
adc
cmpsl
lret
adc
std
inc
lea
out
adc
out
xchg
inc
test
out
pop
fldenv
aam
jbe
pusha
mov
xor
les
fidivrs
icebp
fbld
mov
std
sahf
int3
lahf
mov
inc
add
call
fwait
lret
xor
loope
sub
loope
testl
jnp
lock
inc
ja
pop
sti
cltd
test
adc
cmp
pop
stos
xchg
movsb
add
cmp
fisttpll
dec
mov
gs
xchg
mov
jne
adc
addr16
fsubp
and
dec
movsl
insl
mov
icebp
mov
xchg
xor
jg
fucom
lahf
js
or
mov
mov
cli
mov
shll
int3
out
adc
call
pop
cld
pop
into
dec
js
sbb
push
test
fisttpll
aad
xor
ljmp
sbb
xor
lret
and
add
arpl
lahf
fildll
pop
int3
cmp
xchg
jmp
pop
xchg
sbb
sub
sti
pop
push
adc
pop
or
xchg
add
repz
push
mov
dec
cld
mov
fwait
sub
test
and
adc
or
test
insl
aas
lret
cmp
adc
xchg
adc
into
test
adc
lea
insb
mov
mov
mov
xchg
fildll
ret
sbb
shlb
or
mov
add
dec
nop
pushf
mov
fisttpll
cmpb
sub
int3
stos
pushf
iret
int
in
fildl
out
push
in
or
sub
jg
jecxz
jbe
inc
mov
js
xor
dec
and
fisttpll
movsl
mov
push
roll
mov
mov
mov
out
cltd
je
shl
adc
icebp
dec
pusha
mov
iret
and
sub
or
mov
movsl
sbb
fs
andl
insb
dec
in
xchg
inc
aas
aas
pop
insl
push
inc
scas
push
loope
inc
daa
dec
xor
aas
clc
fmul
sub
repnz
and
daa
mov
lret
cld
push
xor
sti
stos
clc
mov
shlb
jo
push
fs
movsb
pop
aad
aad
cmp
mov
das
cmp
inc
adc
je
nop
shll
and
xchg
xor
shl
cltd
and
and
ja
pop
in
fs
gs
fsubrl
loope
out
mov
out
in
dec
out
jle
ficoml
add
sbb
hlt
add
lods
mov
or
fdivrp
inc
repnz
neg
ja
push
out
movsl
int3
cmp
dec
fistps
loope
dec
and
add
sahf
xchg
out
mov
push
ljmp
iret
outsb
cmp
cmp
mov
and
imul
movsb
dec
roll
mov
aad
fsubr
xor
mov
loop
jecxz
pusha
cmp
inc
mov
inc
sbb
cmp
movsl
test
jo
pop
jl
rcrb
mov
push
pushf
iret
xchg
pop
stos
push
xchg
or
das
add
xor
sub
xor
lea
js
shl
or
out
sbb
testb
or
xchg
xchg
lock
scas
mov
aad
jmp
add
cmp
leave
adc
movsl
insl
fdivp
jge
ret
mov
jmp
clc
aam
push
aas
stc
lcall
in
movsl
sub
xor
jl
mov
jbe
or
pop
push
sbb
mov
in
cld
into
aad
xchg
rorb
repnz
adc
lahf
mov
adc
mov
pop
lret
jmp
inc
pop
jge
mov
dec
xchg
aad
add
cltd
bnd
sbb
adc
mov
mov
inc
dec
and
into
and
mov
movsb
lock
ret
dec
push
fs
inc
jb
shrb
incl
bound
mov
pop
pop
jp
cmp
test
mov
pop
mov
and
cmp
adcl
mov
repnz
mov
ror
into
add
nop
xchg
xorb
in
in
xor
jmp
aam
xchg
fcompl
xor
xchg
cmc
jge
adc
in
dec
jge
jmp
push
push
mov
adc
movb
aas
addr16
xchg
ljmp
cmp
dec
cmp
hlt
pop
and
cli
mov
pop
cmovge
ss
mov
cmp
sub
xor
mulb
cmpsb
leave
shl
inc
xor
ss
jne
cs
pushf
and
mov
pusha
lock
std
test
xor
lea
pop
pop
add
push
mov
ja
adc
sub
in
inc
sbb
adc
stos
pop
jmp
mov
popf
daa
cld
inc
divb
jmp
xor
cmp
data16
cmp
hlt
sbb
lds
sarl
test
inc
mov
mov
pop
pop
mov
stc
and
imul
jno
xor
mov
adc
pop
xchg
xchg
fdiv
sarl
loopne
bnd
imul
aad
fs
aam
sbb
out
mov
jbe
aas
in
inc
mov
jo
int3
test
or
stos
jns
popf
mov
sub
adc
arpl
aas
mov
inc
cmovae
xorb
sti
mov
xchg
dec
sub
xor
cmp
pop
pushf
popa
cmc
lods
cmp
jp
push
sahf
adc
popa
cli
push
mov
mov
sub
shlb
mov
popa
adc
jns
adc
mov
loope
inc
lds
pushf
in
pushf
aam
add
ja
add
pop
repnz
sti
int
jae
test
adc
add
into
mov
fxch
ret
jl
xor
jo
daa
mov
push
adc
mov
and
dec
mov
jnp
xchg
shlb
leave
pop
das
je
push
xchg
inc
lcall
pop
movb
jl
mov
rcl
shrb
movsl
add
pop
xchg
cmp
pop
cli
dec
sub
fsubr
repz
mov
jge
xor
into
cmp
xchg
aas
insl
mov
ja
out
push
push
stc
ds
test
jae
lods
cmpsl
or
fld
icebp
push
and
loopne
inc
icebp
sbb
test
lcall
pop
push
inc
jmp
add
shll
sbb
jge
xchg
loop
daa
lock
push
test
cmp
or
push
lret
xor
sub
insb
int
scas
imul
std
sbb
dec
adc
mov
jne
aam
rorb
push
dec
pop
mov
int
imull
xchg
in
lret
out
xor
les
ljmp
ja
cmc
push
into
leave
xchg
test
xlat
ljmp
pop
js
pop
add
xor
imul
filds
stos
xchg
cmp
pop
scas
sbbb
or
push
aad
rcl
nop
pop
lahf
shll
push
fistpll
add
aad
inc
push
pop
sti
adc
pop
aam
dec
pmaxub
pusha
mull
fldl
movsb
mov
xor
frstor
loope
mov
jns
add
dec
je
push
movsb
fimull
loope
or
stos
fstpt
sbbl
xchg
les
nopl
mov
mov
adcl
repz
popf
scas
push
mov
stos
adc
mov
jne
mov
lret
fbld
dec
xchg
add
sti
icebp
add
loope
enter
sub
in
adc
test
xchg
arpl
sub
js
std
push
rorb
mov
sbb
jae
pop
xor
or
orb
add
xor
addr16
cmp
in
adc
add
or
ss
mov
mov
lahf
mov
inc
or
push
xor
mov
xchg
push
call
adc
loop
lret
js
jp
lods
mov
sbb
fst
inc
sbb
das
xchg
repz
scas
cmp
lock
adc
pushf
sub
aam
mov
sbb
in
mov
jp
sbb
imul
aas
cmpsb
leave
nop
fs
push
xor
inc
adc
xor
mov
sub
mov
setae
mov
jle
mov
js
jge
mov
pop
sub
dec
mov
xor
jbe
insl
add
sbb
aam
mov
and
popf
add
sub
sbb
sbb
xchg
movsb
jg
mov
and
mov
mov
jmp
mov
imul
mov
jno
cs
add
cmp
sub
mov
shr
dec
lahf
jge
sub
adc
in
neg
fisubs
rolb
inc
cmpsl
jg
sti
push
mov
movsl
xchg
lods
es
pop
mov
xor
movsb
xor
push
add
sbb
xchg
pop
test
jecxz
ror
icebp
sbb
or
sub
dec
icebp
pusha
iret
mov
push
mov
add
add
orl
cmpsb
pop
dec
sbb
in
daa
push
xchg
sub
sub
add
sub
push
mov
mov
loop
dec
pop
stc
movsl
sbb
sarb
insl
sahf
sahf
add
mov
pop
cmc
xchg
ds
bound
orb
cmp
mov
scas
mov
out
scas
cmp
cs
mov
in
or
cmp
imul
addr16
dec
push
pop
xchg
pop
scas
pop
sub
push
cmc
ljmp
inc
das
pushf
jp
flds
add
pushf
ja
test
movsl
ds
in
inc
xor
push
movsl
push
and
mov
int
adc
pop
mov
sti
jmp
cli
adc
xor
into
dec
pop
cld
add
add
psrad
adc
pop
shl
pop
negb
jae
jno
fdivl
rcrl
adc
pop
jg
mov
imul
cs
and
cmp
test
mov
arpl
pop
jne
adc
insb
mov
out
inc
push
jne
jl
repz
add
cmp
add
rolb
jno
mov
xchg
adc
fstpl
fidivs
out
push
fsubp
push
shlb
fwait
push
imul
pushf
movsl
rolb
and
pop
cmpsl
adc
xor
mov
push
mov
stos
or
fdivr
jmp
xor
mov
sub
xchg
rol
inc
jle
xchg
mov
ljmp
add
pop
call
mov
fadds
and
rolb
ljmp
sbb
and
xor
push
imul
lods
pop
push
ljmp
int3
mov
pop
push
clc
imul
pop
and
ret
add
pop
in
push
imul
in
mov
insl
cmp
push
add
ss
sub
mov
repnz
xchg
mov
icebp
sbb
mov
mov
jnp
jg
push
les
jne
cmp
adc
sbb
jne
mov
and
fdivrs
sahf
jnp
pop
cmp
arpl
jne
and
mov
and
push
pop
outsb
sbb
adc
sbb
push
cmp
call
or
sub
cltd
jnp
push
movsb
xchg
mov
rclb
jb
pop
fld
mov
cmp
lea
fadds
int3
outsl
push
inc
insl
dec
sti
mov
sbb
iret
xchg
in
push
out
pop
enter
js
adc
jecxz
xchg
dec
adc
inc
in
sbb
dec
cld
pop
fwait
sbb
icebp
ret
sub
xor
mov
popa
inc
xchg
testl
in
arpl
jle
and
arpl
lcall
sbb
or
dec
jne
out
adc
cmp
sbb
push
xor
xor
jp
push
sub
or
lahf
adc
inc
mov
sub
lds
insb
in
mov
fwait
dec
adc
inc
or
test
pop
xlat
add
xchg
pop
sub
stos
jbe
and
shlb
popa
stos
dec
inc
repz
ret
and
jbe
xchg
aaa
lahf
mulb
loop
xor
addr16
popl
push
push
push
push
loop
outsl
adc
jg
fnstsw
xchg
bound
push
pushf
lods
dec
dec
movsb
popa
notb
ss
and
jno
insb
add
ljmp
jnp
xchg
push
xor
sbb
cmp
std
imul
push
xor
popa
xchg
xchg
xchg
mov
jp
sahf
out
sbb
jecxz
out
addr16
rcll
andb
adc
inc
gs
and
test
lret
lret
fldt
test
in
or
or
push
mull
lcall
testb
repz
add
mov
clc
icebp
jmp
push
mov
cmp
adc
mov
sahf
aas
jl
sbb
pop
pop
imul
jne
or
hlt
test
cmp
ds
mov
push
add
or
int
movsb
subl
pop
pop
jecxz
rorb
pop
mov
pusha
pop
iret
lods
mov
stos
arpl
das
cwtl
or
shl
iret
dec
icebp
gs
mov
arpl
je
ret
or
xor
inc
xchg
and
adc
jbe
insb
pop
add
inc
sbb
lret
cwtl
addl
mov
push
pop
pop
andb
add
test
xor
mov
jmp
adc
add
cmp
and
out
push
mov
or
xchg
mov
add
xor
mov
mov
cmp
shrl
ljmp
push
push
adc
imul
sub
jo
inc
arpl
inc
mov
fcoms
add
les
cli
mov
push
jg
stc
bound
lahf
add
shl
mov
add
cmpsl
inc
adcl
adc
pushl
xchg
inc
cmpb
sahf
cld
push
mov
mov
cld
xchg
xor
mov
mov
rcl
loop
jmp
pop
mov
add
cmp
fisubrs
cmp
mov
in
mov
pop
ficomps
mov
mov
jmp
mov
pop
xchg
test
fs
adc
xor
imul
pushf
jp
out
ret
xor
xchg
stc
stos
incb
push
adc
arpl
inc
jnp
xchg
jbe
mov
leave
jbe
ret
lcall
insb
rcl
inc
mov
cmp
jle
std
loopne
jne
loopne
data16
shll
insl
xchg
outsl
adc
jmp
push
dec
mov
stc
push
rcll
ljmp
dec
inc
push
add
add
pop
in
mov
mov
in
add
or
lret
or
mov
mov
and
jmp
push
xor
xchg
lahf
rorl
adc
jp
leave
fisubrl
push
add
js
mov
add
jae
xchg
add
insb
mov
mov
scas
aad
inc
shl
push
loop
xor
jge
mov
outsb
inc
push
bound
test
push
aam
mov
and
lock
test
aas
cmp
aad
mov
dec
test
sub
mov
mov
ljmp
xor
xor
popf
in
push
rol
loope
push
sbb
je
outsb
icebp
jmp
movsb
pop
dec
hlt
test
and
cmp
adc
xchg
dec
push
inc
mov
adc
jns
and
scas
or
cmp
or
mov
notb
pop
lea
fsubp
ret
pop
mov
imul
lcall
out
dec
jp
mov
rcrl
cwtl
fcmovnb
inc
xlat
roll
mov
mov
pop
fsubl
lahf
xor
jp
jo
movsl
push
push
movsl
int3
flds
lcall
push
mov
aam
jnp
xor
push
or
insl
jno
adc
xchg
jb
push
ss
data16
insl
and
loopne
xchg
xchg
shlb
sti
xlat
int3
fxam
rcrl
frstor
add
sbb
inc
adc
xor
stc
loopne
cmp
rcr
add
call
and
mov
adc
mov
cwtl
add
hlt
sbb
or
enter
mov
inc
out
dec
cmc
iret
iret
sbb
sub
rcrl
jg
mov
aaa
repnz
call
lahf
or
mov
rorl
inc
add
pushf
jb
ret
pop
test
or
les
pop
lods
iret
add
add
sahf
sbb
mov
mov
mov
cld
divb
lock
aas
lds
fbld
jp
pop
into
lods
loope
test
xor
popa
add
stc
ficomps
pop
mov
cmp
sahf
add
jecxz
lea
sbb
push
pop
mov
xor
icebp
shlb
lahf
inc
and
bound
mull
shrl
inc
mov
test
incl
add
ljmp
sub
lods
push
shl
push
xor
fadd
cmp
add
push
sub
call
add
stos
cmp
xchg
imul
lahf
jge
ss
mov
xchg
loopne
aam
repz
ss
ficompl
repnz
repz
xchg
ss
cli
mov
cs
push
shlb
pop
es
sbb
add
inc
cmp
and
pop
repnz
dec
out
push
out
sub
movb
rcll
xchg
xchg
jg
inc
aad
fs
inc
push
lret
push
fwait
mov
mov
iret
xchg
pop
enter
loope
xor
out
push
leave
add
pop
and
inc
mov
mov
nop
jge
jge
mov
cmp
in
pop
ja
mov
inc
cmp
shlb
cwtl
sti
cmpl
mov
mov
mov
ret
add
cmp
movsb
inc
loope
jae
mov
add
cwtl
push
xchg
add
adc
les
dec
pop
push
mov
fdivl
push
push
push
mov
add
xor
push
les
jg
and
sbb
mov
icebp
push
sub
scas
pop
js
and
push
adc
arpl
add
add
xchg
add
mov
adc
or
lods
setge
ret
sub
js
frstor
jbe
mov
out
pop
sub
pop
test
mov
aam
lret
inc
mov
xchg
test
mov
repz
imul
cmpsb
cli
xchg
ret
cmp
in
and
pop
jl
inc
mov
insl
loop
adc
adc
in
std
pop
mov
or
inc
adc
leave
aas
std
sub
fidivs
nop
or
inc
adc
pop
dec
add
vcvtpd2dqx
lcallw
mov
loopne
decb
inc
loop
icebp
jae
dec
loope
xchg
xor
jle
stc
jnp
mov
lods
ljmp
mov
orl
fs
enter
sub
mov
mov
pop
pop
shrl
loope
mov
je
xchg
stos
and
sbb
inc
cmp
mov
sbb
sti
xchg
test
lcall
pop
mov
das
mov
fcomps
push
lods
sub
pop
incl
pop
aam
fdivrs
iret
inc
push
gs
mov
xlat
and
push
jmp
int3
mov
in
das
and
mov
ficomps
test
sub
lods
out
xchg
inc
add
out
sbb
inc
lock
dec
pop
and
fsts
sbb
and
jo
clc
test
adc
movb
sar
arpl
mov
mov
cmc
xchg
cltd
imul
mov
hlt
outsl
lea
stc
dec
push
push
mov
addr16
testb
sahf
fwait
and
adc
gs
in
mov
call
int3
push
jg
subl
xor
ss
je
dec
sar
js
adc
xchg
mov
fidivrl
mov
test
inc
pop
movsl
inc
out
inc
lods
inc
jne
mov
xor
pusha
cs
mov
jmp
pextrw
dec
fmuls
jl
add
int3
jg
jl
cmp
cmp
pop
popa
out
jge
rcrb
or
jecxz
add
inc
inc
sub
out
dec
add
sbb
xor
jle
pop
enter
and
adc
mov
xchg
and
fs
popf
and
mov
mov
fadd
lea
cmpsl
jl
jno
movsb
sbb
cmp
ja
lds
and
push
sub
cltd
out
fildl
push
out
mov
mov
repz
dec
push
sub
sbb
in
inc
xchg
dec
cwtl
shlb
dec
sub
xchg
outsb
scas
mov
and
or
ret
and
pop
scas
xchg
and
dec
lds
fnstcw
int
sbb
jno
dec
jge
aas
and
ja
fadds
xchg
aad
cmp
jbe
pusha
pop
sbb
xchg
mov
xor
cmp
fs
insl
stc
leave
out
enter
mov
and
shlb
ja
rcll
mov
cmp
jle
enter
cmpsb
in
inc
imul
jb
xor
sbb
ficoms
test
sarb
adc
adc
adc
imul
or
push
into
adc
popa
out
les
cwtl
push
aaa
nop
in
cmp
dec
sbb
imul
das
cmp
jmp
subl
fdivrs
push
jmp
push
mov
xlat
adc
jle
leave
cmp
lods
push
out
je
imul
push
adc
sbb
bound
rcrl
stos
leave
aad
out
idiv
iret
inc
jge
sub
cwtl
adc
sbb
sub
push
cli
in
adc
lock
push
icebp
mov
arpl
jae
xchg
loop
xor
pavgb
sub
push
jecxz
inc
aam
ret
mov
es
mov
mov
jp
inc
xchg
add
adc
pop
sub
cmp
mov
inc
dec
add
cmpl
inc
add
and
fldcw
test
lock
add
insb
jle
cmp
pop
adc
popa
and
add
xchg
movsb
cmc
pop
dec
lahf
mov
cmc
cmc
ret
dec
xchg
cltd
lcall
aad
ja
popf
xorl
pop
stc
jno
push
mov
imulb
mov
inc
jecxz
jecxz
jno
aam
mov
testl
jecxz
sub
cltd
inc
stc
mov
or
jbe
sbb
mov
loopne
jo
jp
andl
nop
add
mov
mov
dec
scas
into
fistl
lea
inc
mov
mov
les
add
repnz
or
mov
xor
xor
dec
lret
push
shl
jle
dec
xchg
dec
inc
test
adc
inc
mov
in
outsb
vpsllw
loope
push
aad
add
shlb
sti
fmuls
xlat
sbb
cmpsl
jle
repnz
lret
popf
adc
xor
leave
add
mov
movsb
pop
adc
xchg
nop
ja
repz
insl
mov
ss
dec
out
arpl
ds
enter
xchg
or
in
mov
cmpsb
ret
sub
adc
lcall
push
clc
sbb
dec
test
lds
out
nop
pop
pushf
push
pop
pop
inc
dec
outsb
mov
mov
mov
sahf
in
xor
sub
inc
cmp
fbstp
mov
mov
jb
dec
and
mov
cli
addr16
rclb
push
unpcklps
cmp
xor
push
insb
lds
sbb
cmp
and
mov
cmc
not
in
add
das
sti
push
jg
ljmp
js
push
std
jge
dec
sti
ror
jmp
or
cmp
adc
mov
inc
cmpsb
ds
and
lock
icebp
fnsave
icebp
popl
xlat
outsb
jge
gs
and
push
fs
movsb
stos
pop
repnz
scas
popf
daa
out
std
pop
mov
shl
int
ljmp
cmp
pop
shrb
adc
or
and
mov
mov
in
movsb
xchg
add
lret
rcll
adc
jge
xor
mov
jg
mov
push
jp
ret
int3
repnz
fidivrs
ret
mov
xchg
loope
add
cmp
mov
lods
inc
xor
lret
mov
inc
pusha
rcrb
dec
pop
popf
pop
sub
adc
dec
jl
bound
testb
mov
cmp
arpl
and
fbld
or
and
xchg
cmpsb
dec
pusha
fists
sbb
sub
icebp
lahf
pop
pop
movlps
mov
fistpll
ja
addr16
outsl
or
cmpsl
mov
fstpl
lret
hlt
sarb
pop
push
rcr
jg
cmp
subl
aam
sahf
clc
cmp
xor
jnp
ret
xor
sbb
push
stos
jno
pop
ds
xor
xorl
fidivl
cmp
xchg
mov
stos
sub
aaa
leave
pop
and
fs
in
daa
ljmp
mov
pushf
jns
in
mov
mov
lahf
mov
add
adc
shll
nop
or
or
jne
sbb
jb
test
lret
icebp
mov
imull
xor
nop
jl
and
in
mov
stos
pop
cmpsb
int
adc
dec
add
inc
mov
in
mov
enter
loop
hlt
inc
popa
inc
adc
pusha
xlat
mov
testb
adc
jle
test
jge
mov
lds
addb
pop
inc
rcrl
xchg
cmp
inc
sbb
or
repnz
scas
pushf
or
xchg
add
dec
outsb
fnop
cmp
adc
lods
hlt
lcall
add
ljmp
mov
es
cld
mov
inc
jmp
in
cld
lcall
scas
fucom
cld
repz
adc
aaa
ds
aaa
mov
out
mov
xlat
mov
stos
icebp
inc
fstpt
jmp
pop
fwait
adc
add
test
popa
out
inc
adc
or
inc
inc
loopne
std
mov
cmp
and
sbb
std
jmp
jle
mov
cmc
les
js
pop
lea
rcrl
and
xor
mov
or
mov
loope
dec
incb
fcmovne
fucomip
inc
fsubs
xor
push
pop
inc
fdivrl
cli
and
dec
pop
frstor
lahf
add
aad
outsb
lcall
push
icebp
cmpl
test
mov
pop
adc
or
sbbb
aaa
int3
inc
jecxz
movsb
mov
or
push
mov
mov
adc
nop
adc
repz
sub
test
in
cmp
add
loope
or
jae
xchg
in
sahf
push
insb
push
rep
add
xor
daa
push
aam
inc
or
jg
dec
hlt
in
sub
mov
bound
bound
add
outsb
inc
jno
fcomps
lahf
fldcw
or
cmp
push
add
jbe
or
stos
jnp
ja
sub
sbb
in
jle
lods
and
xchg
fidivrl
mov
int3
ja
adc
and
orl
xorps
rclb
aad
mov
inc
xchg
shr
xchg
out
repnz
add
mov
pop
in
leave
sub
in
pop
sahf
lcall
jg
out
loop
addr16
mov
cld
out
fcmovnb
push
pop
out
mov
pop
addr16
or
pushf
aaa
push
movsb
dec
pop
dec
lahf
cmp
repnz
std
lock
popa
mov
cmp
mov
xlat
xchg
lds
out
lret
repz
adc
push
pop
je
lock
adc
cmp
fstpl
pusha
pop
lea
mov
dec
clc
into
cmp
fisubs
pop
insb
int
inc
fisttpll
mov
jns
mov
add
and
cmp
jnp
ror
xchg
or
jo
mov
jecxz
and
pusha
mov
pop
jbe
fucomp
int
xor
cwtl
push
inc
push
adc
std
int3
push
dec
lods
cltd
pop
rcr
enter
flds
ror
push
jno
stc
jae
add
or
sub
inc
test
mov
xor
add
dec
and
xchg
aaa
loop
nop
xchg
pop
rcr
and
push
push
jns
popa
movsl
xor
stos
dec
call
stos
leave
mov
sar
sarl
test
jae
scas
ret
xor
adc
clc
bound
stos
outsl
inc
xlat
pop
push
jb
push
add
stos
enter
add
ret
cmpsb
std
lds
and
and
mov
dec
mov
cltd
lret
addr16
stos
xchg
test
jb
or
out
xorb
mov
sbb
in
scas
es
mov
mov
xchg
adc
je
int
movsb
inc
and
outsl
xor
add
cmp
push
ret
sub
inc
jnp
adc
or
mov
aam
adc
sahf
mov
lret
sti
mov
sub
mov
test
mov
repnz
inc
mov
repz
adc
dec
or
stos
je
and
pop
xchg
call
pop
test
xchg
pop
decl
xor
scas
push
mov
sahf
inc
mov
mov
dec
sbb
fs
fisttpl
sbb
jle
and
adc
pop
jnp
xor
shl
jmp
jne
cmp
jno
inc
jnp
idiv
jmp
ds
add
jg
and
xchg
cmc
mov
or
mov
insb
cltd
mov
setg
xchg
aad
push
add
inc
xlat
dec
outsb
aad
sub
pop
pop
insb
ret
addr16
xor
nop
rcrl
mov
add
mov
ja
lods
arpl
shll
jae
xchg
push
shld
inc
sbb
pop
jns
xchg
rcll
xor
dec
mov
clc
xchg
subl
inc
xor
jp
loop
add
cmc
pop
int3
and
cwtl
outsb
and
pop
inc
int
adc
push
pushf
and
fisttps
adc
outsl
push
xor
xor
push
nop
test
xchg
mov
out
xchg
mov
ljmp
test
jae
pusha
xor
lods
mov
mov
sbb
jmp
xchg
adc
divl
andl
mov
jbe
test
jmp
pop
in
in
cmp
loope
pop
test
sbb
fildl
inc
jns
add
mov
pop
sti
das
push
xchg
jns
or
out
xchg
gs
sub
dec
lea
lcall
pop
adc
in
add
push
add
adc
dec
enter
mov
lahf
jne
or
adc
add
xchg
dec
sub
pop
push
push
aam
mov
cmp
push
xchg
out
out
outsb
fisubl
adc
cmp
pop
pop
dec
dec
and
cmp
dec
pop
sbb
aaa
jmp
sub
fidivrs
jo
enter
dec
aam
mov
push
cmc
push
out
or
push
out
call
es
ss
in
pop
ror
repz
test
sbbl
ret
fcoml
pop
fmuls
and
dec
dec
popa
and
inc
push
mov
mov
lods
cmpsb
neg
ds
cmp
pop
push
jbe
rclb
out
and
cmc
jmp
clc
adc
add
push
mov
sbb
xchg
dec
lret
pop
movsl
jg
or
dec
lea
test
ret
fucomp
jae
stos
xor
xor
rcrb
xlat
outsl
scas
nop
cs
cmpsl
stc
scas
enter
ret
adc
adc
jl
ficomps
or
in
xchg
rolb
xchg
dec
inc
add
mov
pop
stos
out
dec
and
cmp
stos
lock
sbb
arpl
dec
sub
inc
mov
popa
sbb
dec
inc
inc
fidivl
jno
push
insb
jbe
xor
mov
mov
pop
ret
mov
xchg
test
jne
ror
jb
mov
les
sti
xchg
pusha
dec
repz
xor
xchg
outsl
repnz
and
inc
xorb
fs
lods
divps
mov
pop
rcll
ljmp
std
xchg
adc
cmpsl
out
stos
mov
shl
int
inc
imul
cmpsb
outsb
clc
adc
and
push
xor
out
je
shll
scas
sub
jnp
sbb
dec
shl
adc
mov
mov
dec
cmpsb
dec
lea
fstl
mov
icebp
cld
pop
pop
fsubrs
fs
inc
orl
cmpsl
jle
jecxz
mov
sub
cmpsb
aaa
cmpsl
dec
mov
fmull
filds
lahf
jbe
roll
adc
bound
stos
jmp
mov
sbb
jb
adc
adc
jns
xor
mov
iret
push
lcall
mov
xchg
and
in
inc
imul
int3
mov
insl
arpl
push
into
adc
stos
cltd
dec
add
xor
pushfw
js
in
fiadds
daa
jb
sti
repz
xor
push
mov
push
es
sti
push
cmp
jne
push
cltd
xchg
dec
ret
hlt
arpl
ljmp
dec
and
repnz
jns
in
mov
add
jl
mov
lods
mov
inc
out
lods
es
sarb
ds
xchg
sub
outsl
fs
push
dec
xlat
or
dec
push
arpl
ficoml
pushl
jmp
incl
dec
jl
add
popa
inc
mov
ret
in
sbb
jecxz
ja
js
push
sub
loopne
xchg
fs
fisttpl
mov
xchg
inc
inc
call
mov
adc
mov
aam
fldl
or
add
add
push
sbb
or
into
mov
ret
dec
dec
daa
push
sub
hlt
pop
in
orl
into
outsb
leave
lods
push
lahf
sbb
test
cwtl
in
inc
cmp
cmp
sahf
dec
add
imul
xchg
icebp
sbb
pop
or
xor
fadd
lret
iret
bnd
roll
mov
adc
xchg
test
sbb
dec
adc
adc
jbe
movsl
fstps
push
popa
jmp
jne
or
je
daa
dec
push
mov
in
sub
movsl
lea
jmp
sub
cmp
or
cmpsb
push
cmp
rcrl
pop
lods
ret
xchg
cld
cmpl
inc
in
movsl
push
mov
mov
ja
dec
mov
mov
sub
les
inc
mov
mov
cmpsl
jne
jmp
loop
in
stos
push
jecxz
pusha
aaa
jb
dec
fwait
push
or
stos
addb
int3
sub
insb
lcall
jae
mov
or
mov
xchg
jmp
mov
pop
sub
xchg
fstl
or
dec
mov
mov
dec
repz
enter
movsb
ljmp
adc
pop
add
mov
xor
jno
out
xchg
cmp
pop
mov
popa
icebp
lods
fs
mov
lock
inc
xchg
sub
pop
roll
into
fsubr
xchg
sub
fnsave
xchg
add
data16
pusha
jmp
sbb
lret
loopne
in
iret
lcall
bnd
jmp
xlat
mov
nop
push
or
mov
pop
popf
xlat
rclb
pop
mov
movsb
cmpsb
dec
xor
and
pop
cmp
scas
lret
pop
test
jmp
cli
scas
test
jge
add
sub
outsl
mov
jg,pt
enter
mov
imul
fstpl
cmp
jo
lock
xor
cmp
cmp
push
inc
mov
aaa
mov
xor
sahf
push
leave
inc
jae
mov
rorl
loopne
enter
mov
jle
test
cs
add
jl
inc
andl
add
inc
sub
jb
jmp
pop
lock
movsb
fadds
std
lds
addr16
rcl
cld
push
add
or
and
cld
jb
out
and
push
inc
je
sbb
jo
cld
add
xchg
lea
test
add
lret
xchg
ja
mov
fninit
push
lods
push
xlat
jg
inc
popa
out
lods
inc
repz
inc
andb
mov
sti
lods
daa
lret
or
int
pop
daa
inc
test
int3
jnp
lahf
mov
dec
aaa
pop
scas
push
lret
cmp
pushf
add
mov
sub
out
sub
cwtl
iret
mov
cmp
leave
xor
jp
mov
xor
pop
cltd
inc
inc
xchg
movsb
clc
in
repz
xlat
jno
add
inc
adc
push
sbb
scas
push
pop
add
fisubl
add
pop
out
add
mov
and
or
outsb
dec
movsb
pusha
or
dec
fwait
sbb
xchg
sbb
gs
pop
sarb
outsb
out
cmp
sbb
cltd
nop
add
jmp
rorb
and
shl
rcrb
and
cmp
not
addb
lods
pop
xor
pop
pop
stos
cmpsb
add
xor
inc
bound
mov
addr16
stc
mov
push
cs
mov
mov
dec
add
dec
pop
mov
xor
outsb
insl
fldcw
lea
mov
xor
out
xchg
clc
shll
mov
cwtl
insb
lret
mov
jo
push
scas
arpl
fcomps
add
cmp
dec
sbb
fistpl
push
xchg
test
or
dec
cmp
xchg
jb
mov
out
inc
jg
mov
testb
daa
je
mov
mov
pop
sbb
sti
loop
mov
dec
dec
pop
arpl
dec
arpl
sub
stc
and
lock
add
ret
mov
adc
in
inc
loopne
loop
sub
ss
cmp
cld
ss
cmp
outsl
xor
pop
adc
sub
in
sub
daa
push
cld
lods
cmp
jae
mov
push
in
scas
arpl
adc
mov
push
ljmp
ret
push
mov
stc
add
push
gs
fs
mov
push
lock
add
mov
push
movsl
dec
int
adc
inc
jno
hlt
loop
push
inc
push
movsb
or
dec
adc
lret
fmul
bound
cwtl
sarb
or
sub
jge
inc
shrl
xorl
inc
test
mov
jnp
cmc
pop
push
xchg
cmpsb
push
cmp
std
int3
mov
xchg
fmull
clc
les
xchg
lret
outsb
fistpll
sub
movsb
xchg
or
inc
aaa
aas
add
repz
fdivrl
or
int3
sti
sub
mov
push
dec
add
xchg
jle
dec
cmpsb
jge
or
pusha
mov
inc
rolb
add
or
mov
scas
push
push
fadds
inc
aaa
std
out
ds
lock
pop
sti
mov
iret
dec
jp
sbb
loopne
jo
xchg
push
xor
push
push
xor
pusha
out
adc
add
iret
cmp
hlt
xchg
adc
push
mov
out
sbb
in
cmp
cmp
add
sub
add
xchg
es
jne
sub
lret
lcall
mov
mov
cmc
mov
jne
pop
push
fimull
sbb
jno
mov
test
adc
add
mov
fisubrs
sub
pop
loope
jge
and
mov
lock
xchg
bound
cmp
repnz
xchg
movb
adc
mov
inc
cs
jns
mov
jns
movsl
fcompl
mov
or
or
inc
sub
inc
mov
cs
push
rol
xor
sahf
jb
inc
lret
xor
cmp
add
test
fcomps
push
pop
xor
fcomps
sub
jbe
fwait
ljmp
decl
aam
sahf
dec
add
or
ljmp
sbb
or
clc
scas
test
push
mov
test
dec
jns
cwtl
imul
flds
pop
stos
sbb
push
inc
push
or
pop
dec
cmpsl
clc
ja
xchg
inc
jns
gs
push
mov
pop
inc
inc
fildl
and
dec
push
fidivl
popf
rcll
bound
mov
push
xchg
cmpsl
inc
xor
xlat
jns
dec
sbb
nop
cld
out
pop
lahf
scas
mov
dec
pop
xchg
aam
mov
jb
xchg
ss
clc
mov
or
pop
lret
stos
mov
mov
fwait
sub
inc
mov
sbb
ja
mov
xchg
pop
push
fisubl
ret
sbb
pusha
dec
push
ljmp
lahf
lea
adc
mov
sbb
cmpsl
dec
negb
aas
cld
xor
hlt
dec
js
adc
jle
jnp
mov
or
leave
shll
sti
dec
fcomip
mov
and
xchg
shlb
push
pop
mov
or
movsl
imul
add
pop
arpl
sarl
ljmp
outsl
out
andb
lock
int3
mov
imul
pop
cld
inc
xchg
test
inc
add
loope
pop
xor
pop
sub
or
mov
inc
js
leave
jl
or
leave
out
out
pop
mov
and
lock
sbb
ljmp
inc
mov
cmp
jb
push
mov
roll
ret
dec
xchg
mov
fistl
rcr
lret
jl
nop
scas
xchg
jo
push
xlat
mov
outsb
popf
and
sub
sti
pusha
jp
inc
in
jl
lock
mov
push
scas
inc
jbe
test
dec
ss
pop
xchg
sbb
and
mov
loop
aad
jecxz
cltd
pusha
push
daa
lds
unpckhps
mov
pop
inc
ja
fwait
push
sbb
mov
lret
sbb
imul
imul
sbb
sub
cld
jbe
aas
and
xor
or
aad
hlt
sbb
jecxz
xor
xchg
mov
sbb
into
jns
ret
xor
sub
dec
popf
push
push
add
inc
lods
insb
leave
loopne
pop
push
testb
pop
pop
cmc
cltd
loop
jb
jnp
mov
in
sbb
inc
and
test
cmp
gs
cmp
dec
sub
cmp
lods
or
add
add
fdecstp
inc
lea
and
nop
dec
jge
cld
add
dec
add
dec
shrl
cmp
clc
orb
xor
inc
or
das
sbb
lret
mov
arpl
add
mov
jnp
cwtl
je
mov
sti
stos
lret
xchg
cmp
jae
xor
xchg
push
fcmove
int3
mov
pop
xchg
ljmp
cwtl
jl
hlt
lcall
mov
mov
dec
xor
ret
aam
mov
clc
inc
jo
jno
lods
xchg
sbb
cli
pop
jbe
mov
and
aaa
push
popf
jae
mov
cmp
cmc
xor
xchg
out
pop
jmp
call
xor
leave
cmp
xor
push
lret
es
sub
ror
out
call
or
inc
jmp
bound
mov
or
add
mov
mov
xor
dec
adc
mov
orl
pushl
mov
push
inc
adc
lret
and
dec
clc
test
mov
adc
mov
scas
inc
xor
inc
out
push
sub
mov
mov
ljmp
sarb
inc
loopw
cld
xchg
call
add
mov
inc
cmc
jge
jbe
push
jbe
inc
pop
jae
mov
movsb
mov
js
add
mov
out
hlt
jnp
sahf
or
mov
mov
out
test
dec
or
and
fwait
inc
cmc
enter
jecxz
dec
in
fwait
rol
loope
cltd
pop
inc
xchg
rcrb
lret
pop
inc
xchg
and
add
fnclex
lods
in
or
mov
adc
pusha
push
jnp
in
stos
inc
ljmp
pop
pop
cmpsl
fwait
xor
in
jno
add
out
cmp
xchg
icebp
jbe
jg
push
jle
fsubrs
in
mov
icebp
xor
mov
mov
pop
popf
or
addb
stos
push
aad
sti
pop
bound
testb
jnp
push
jnp
pusha
xchg
repz
pushf
call
int3
xchg
pop
pop
rcl
clc
xchg
clc
loop
lods
dec
ret
shl
mov
scas
mov
repz
sbb
shrd
int
jnp
hlt
sbb
scas
mov
jp
adc
mov
xchg
lret
lret
or
pop
mov
shr
mov
imul
rcr
lahf
loope
pop
or
sbb
inc
inc
ficompl
xor
loopne
es
fdivr
mov
iret
imul
add
ss
dec
inc
fwait
inc
flds
int3
cwtl
ja
idivl
jae
cmpsl
push
or
cltd
sarb
push
xor
subb
push
bound
mov
lods
xchg
mov
mov
ss
mov
add
xchg
xor
test
hlt
and
lock
dec
sti
mov
nop
push
lcall
pop
sub
outsl
and
in
test
cmp
mov
ds
hlt
les
lcall
mov
outsb
xchg
dec
add
sub
repnz
and
xor
jo
dec
adc
jecxz
xchg
push
mov
xchg
cmp
movb
and
add
fwait
jmp
add
mov
and
into
xor
in
pop
pusha
pop
imul
imul
mov
outsl
dec
int
sbb
in
add
scas
or
inc
push
pop
cs
es
or
jno
ret
and
mov
and
and
sub
dec
fnsave
imul
movsb
pop
adc
push
leave
les
pop
lods
popf
cmc
leave
pop
push
cmp
mov
jmp
mov
inc
stos
icebp
sub
out
into
xchg
aad
cmp
hlt
mov
mov
push
mov
stc
jp
xchg
cwtl
mov
jno
arpl
stos
adc
dec
pop
jmp
cmp
sbb
imul
inc
in
cmp
fidivl
int3
xor
aaa
int3
xor
dec
in
imul
outsl
in
jle
cmp
fiadds
test
hlt
xorl
cli
mov
pop
sbb
stc
icebp
push
push
adc
test
cmpsl
mov
mov
jl
and
mov
invlpg
jmp
cltd
fldcw
fildl
xor
push
adc
fdivr
mov
mov
jns
repnz
and
into
cmp
mov
scas
sbb
xchg
jp
mov
cli
jle
test
stos
mov
xchg
cmp
es
out
in
cld
addr16
scas
sbb
lret
repnz
sub
or
or
jmp
xorb
xchg
jno
push
cmp
shll
inc
adc
xchg
dec
mov
in
jle
mov
cmpl
pop
out
pop
shl
lret
scas
shll
out
scas
aaa
mov
sub
jo
push
cltd
add
inc
mov
xlat
ja
jnp
cli
and
pop
sub
fadd
bound
adc
mov
push
and
and
add
mov
sbb
sarl
insb
mov
add
xor
jl
pop
lock
or
daa
xchg
loope
adcb
mov
mov
sahf
fcom
add
xchg
cltd
pop
mov
jmp
add
call
into
scas
mov
in
jo
bound
shr
mov
mov
clc
js
hlt
pop
sti
cmp
jo
dec
lods
hlt
jne
sub
js
les
fwait
inc
daa
test
aas
sbb
xor
dec
scas
and
mov
out
mov
mov
push
mov
add
adc
ret
push
cmp
popa
adc
pop
ret
sbb
inc
jmp
and
sbb
test
jns
jmp
pop
fdivl
popf
push
mov
lret
jecxz
xchg
or
push
cli
xor
mov
add
mov
insl
notl
aaa
xchg
xor
pushf
adc
jo
mov
inc
jns
xor
push
loope
xchg
inc
ds
and
fdivl
xchg
cmp
shll
pop
cmp
sub
fdecstp
dec
xchg
mov
repnz
xlat
daa
adc
jmp
lret
mov
cmp
rorb
idivl
xorb
jne
jo
lcall
mov
xor
and
repnz
clc
sbb
lahf
sbb
dec
sub
jmp
fiaddl
pop
push
xchg
pusha
sbb
sahf
jb
cmp
jle
sub
lret
out
xchg
jo
cmp
adc
inc
pushf
ret
jge
sbb
mov
loop
push
adc
shlb
mov
out
mov
and
xchg
add
pop
or
xchg
addl
test
fisubl
cmp
or
jnp
lds
mov
sub
outsb
jmp
xchg
mov
jle
xor
ja
daa
les
xlat
sahf
cmp
cmp
out
mov
push
jmp
out
sbb
mov
push
push
inc
aam
add
add
mov
pop
sbb
int
sub
mov
ja
fcompl
inc
enter
cmp
or
stos
enter
inc
bound
dec
push
nop
cmpsl
repnz
dec
cmpsb
ds
adc
ret
scas
and
ret
ffree
sahf
pushf
pop
in
xlat
pop
test
add
iret
xor
out
les
sbb
jg
lcall
in
std
adc
mov
sbb
mov
loopne
mov
fsubrl
add
xorl
xchg
in
jmp
add
xchg
add
push
push
dec
push
pusha
stos
std
xorl
pop
sub
pop
mov
insl
call
xchg
xlat
leave
sahf
addr16
jecxz
adc
sti
mov
nop
push
lahf
push
push
pusha
cmpsl
mov
push
jne
pop
xor
cmp
dec
inc
in
mov
adc
cltd
dec
sbb
loope
add
inc
inc
nop
adc
or
dec
xor
sbbl
movsl
fcoml
fildll
pop
sub
adcb
inc
pop
mov
testl
std
ljmp
mov
cli
or
fsts
push
pop
mov
int3
scas
or
loope
mov
pop
sub
je
pop
sbb
lea
sbb
rclb
and
xlat
outsb
ja
add
xlat
in
ds
mov
dec
jecxz
sahf
jg
subl
inc
dec
mov
pusha
mov
or
inc
aaa
mov
xor
bound
pop
iret
xor
rcrb
mov
fcomi
insb
adc
mov
leave
mov
jmp
jno
mov
sbb
lock
inc
jmp
and
mov
cmp
add
aaa
out
add
shrl
stc
scas
imul
or
test
sbb
push
pop
movsl
push
pusha
enter
sub
adc
insb
in
cmpsb
jge
notb
outsb
ficomps
pop
fwait
andb
xor
test
inc
dec
adc
cmpsb
fwait
and
sub
lahf
xchg
mov
nop
fs
or
mov
jmp
sub
mov
fnsave
daa
add
test
add
add
sbb
ss
sub
push
adc
jns
mov
sbb
push
test
repnz
js
xor
mov
jle
adc
fisttpll
push
repz
or
adc
aaa
jnp
pusha
inc
adc
xchg
pop
movsl
aad
pop
fstpt
xchg
es
mov
icebp
cmp
and
out
out
add
push
sti
and
push
enter
test
cli
outsb
pop
pop
sbb
pushl
inc
cmp
enter
xor
imul
add
mov
jnp
notb
add
or
ficompl
mov
or
sub
adc
mov
fwait
bound
fdivrl
movsb
pop
test
inc
test
or
add
lret
rolb
in
loop
in
or
and
int
cld
adc
inc
test
rol
mov
shr
cltd
cmp
fstpl
adc
loopne
jbe
stos
inc
or
pop
loop
sub
pop
mov
mov
xchg
and
test
out
dec
lods
inc
xor
lea
push
flds
lea
pop
inc
divb
sbb
and
sub
pop
fcomps
stc
mov
mov
and
jbe
pop
dec
adc
outsb
mov
lcall
xchg
sbb
fidivrs
mov
or
lea
jno
test
mov
push
sub
orb
clc
les
test
xor
add
pop
mov
xor
inc
jbe
scas
and
push
and
jno
and
jbe
adc
push
jmp
lcall
test
add
xor
and
ss
mov
pusha
adc
pop
adc
sbb
xchg
icebp
leave
adc
jecxz
sbb
in
fsubr
push
popf
mov
jo
leave
and
iret
fistl
inc
loope
mov
aas
jmp
movsb
mov
sti
les
pop
int
dec
fdivr
fdivrs
ret
pop
sbb
cmpsl
addr16
sbb
test
dec
jle
dec
cmp
sbb
push
push
mov
pop
inc
dec
xchg
pop
aam
jbe
les
sbb
xchg
jbe
or
lahf
sbb
pop
add
mov
test
mov
mov
aad
jns
push
fsts
mov
pop
ljmp
fistl
test
and
dec
std
jnp
es
jns
hlt
and
sahf
test
movsb
aad
push
cmp
fisttps
mov
subb
iret
cvtpi2ps
mov
xor
inc
and
jmp
xor
cld
lock
std
or
clc
and
pop
mov
fsts
rclb
push
inc
shll
addr16
adc
or
stos
mov
repz
sub
es
pop
aam
mov
sbb
push
mov
mov
mov
push
jl
ja
jno
test
dec
and
popl
jbe
test
int3
or
xchg
push
stc
sub
sbb
xlat
cltd
inc
fldt
fmull
loop
pushl
xchg
arpl
nop
inc
fnstsw
and
jle
push
jo
loop
and
mov
sub
std
hlt
mov
out
ja
xor
mov
cld
sbb
dec
pusha
test
add
out
push
add
fisttps
sub
push
gs
dec
sti
inc
xchg
dec
jno
adc
lahf
popa
jnp
jnp
xchg
mov
add
in
insb
sbb
sbb
sar
pop
and
jmp
ds
in
cmp
jae
or
jnp
loope
jne
xchg
pop
or
inc
out
imul
call
fsubl
lds
push
lret
outsb
movsl
push
cmpl
cmp
pop
les
int3
cmp
std
mov
sbb
test
into
jl
in
stos
ss
dec
sbb
pop
pop
push
repz
push
cmp
jne
inc
push
cs
mov
out
lret
stos
nop
sbb
lods
or
xchg
fwait
aas
inc
call
jnp
lea
std
ss
xor
push
pop
aaa
cmp
push
adc
mov
ljmp
aam
pop
repnz
clc
out
mov
stos
test
xorl
pop
push
aas
or
xor
or
pop
jl
pop
arpl
mov
inc
adc
jns
pushf
cmp
pop
jns
pop
mov
mov
cwtl
mov
ret
lds
mov
int3
data16
in
adc
push
xchg
xlat
fwait
sub
loop
cld
xchg
pop
outsb
inc
rcrb
mov
jne
xlat
outsb
or
inc
out
add
mov
incb
fs
loope
pusha
dec
scas
inc
cli
xor
jb
push
bound
pop
insl
inc
jle
or
fadds
sbbl
mov
mov
or
add
gs
xchg
jl
xor
push
inc
pusha
mov
pop
jbe
mov
jg
add
mov
stos
mov
cmp
push
cmpsl
enter
ja
pop
test
std
mov
fwait
subb
or
xor
inc
addb
gs
mov
or
lahf
add
and
test
in
and
aad
jnp
add
cmc
sti
and
fmul
adc
xchg
xchg
sti
jg
cmp
in
leave
mov
mov
or
lods
or
and
test
lret
hlt
jnp
mov
jecxz
cli
test
sub
dec
mov
cmc
lock
pop
push
dec
test
pop
jne
inc
mov
stc
pop
ret
js
fstpl
nop
mov
cmp
bound
mov
hlt
outsl
stc
negb
aaa
aas
add
mov
and
cmpsb
in
cs
mov
jo
test
je
mov
and
pop
popl
std
cmp
cmpsl
cmc
std
pop
fwait
push
rcrb
mov
cmpb
or
mov
cli
sbb
test
scas
lds
and
stos
pop
ljmp
ljmp
jns
inc
jl
insl
cmp
cmpsl
and
jnp
sbb
int
aas
pop
mov
ja
ret
lds
clc
js
orl
outsb
das
sti
jbe
push
inc
jb
add
cmpsb
jle
cmp
jl
cmp
pop
div
push
or
inc
dec
scas
push
shlb
sub
jl
mov
dec
mov
ds
dec
outsl
int
pop
test
xchg
movsb
jnp
repnz
sbb
inc
stc
in
and
ja
sub
push
push
xchg
mov
xlat
out
or
testb
insb
fnstsw
fisubrl
sub
movsl
mov
sbb
mov
xchg
aas
in
lds
lcall
inc
popf
test
fimull
mov
sbb
jmp
pop
shrb
mov
jge
fldcw
mov
popf
or
fwait
dec
pop
insb
pop
mov
shrl
sub
sbb
inc
cmp
fmul
test
mov
out
scas
rcll
push
add
sub
orb
inc
mov
ja
push
in
cld
mov
shll
int
in
push
stos
fdivp
int
inc
lods
jp
xor
mov
test
rolb
stos
mov
jnp
xorb
in
adc
mov
fmul
loope
movsb
inc
jmp
jo
pop
dec
or
imul
or
int3
insl
xchg
adc
mov
pop
cmp
hlt
jge
xchg
mov
lahf
cmp
enter
dec
adc
jp
jae
ret
adc
stos
adc
xchg
jnp
adc
dec
cmp
dec
leave
and
test
fcomps
add
inc
insb
sbb
sbb
loopne
mov
insl
std
outsb
push
jge
clc
mov
push
mov
mov
push
insb
jl
roll
notl
sbb
xchg
pop
cmpsb
lcall
test
lcall
jb
sub
jmp
es
repz
daa
pusha
xor
mov
jecxz
mov
inc
test
pop
outsl
mov
mov
in
push
mov
fisubs
ja
push
subl
jns
lods
adc
cmpl
mov
jg
sbb
shrl
int3
lret
dec
pop
or
scas
cmpsb
push
dec
fs
pop
in
inc
mov
and
loop
or
jge
popf
and
mov
cmp
inc
mul
xchg
jge
cmp
pop
dec
je
sarl
dec
mov
sbb
popa
mov
gs
fadd
add
pop
push
imul
cmc
out
push
mov
jo
dec
mov
push
ror
sbb
sub
inc
sub
das
inc
mov
cld
mov
mov
notl
cmp
and
in
pop
inc
xorl
aam
and
push
fwait
dec
fs
lods
pop
jg
xchg
insl
mov
stos
out
cmp
popf
mov
xor
push
dec
in
dec
sbb
imul
enter
loop
js
xchg
sub
shrl
and
fimull
jg
and
fdivrs
lods
sbb
mov
mov
addr16
mov
mov
out
testb
mov
lahf
cmp
lds
fcoms
es
iret
out
dec
jmp
clc
add
adc
sub
jo
inc
mov
jle
cwtl
or
mov
in
xor
cmpb
fcomi
xchg
jmp
ret
jo
pop
ret
dec
imul
in
mov
push
push
and
push
xor
scas
and
jno
mov
aad
xchg
xor
arpl
mov
xchg
mov
in
mov
xor
test
les
outsl
gs
dec
leave
mov
sbb
pop
int3
aaa
out
inc
out
cmp
jp
ss
std
xor
mov
dec
int3
and
insl
jb
cld
xchg
or
popa
sub
push
dec
jae
sub
mov
rcrb
mov
fwait
lret
mov
mov
arpl
lahf
sarl
push
push
popa
fiadds
add
sub
mov
outsl
mov
popf
push
ret
pusha
fisttps
lea
in
sbb
out
pop
fistl
xchg
sbb
push
xlat
xor
mov
inc
test
cmc
xorb
dec
xchg
leave
nop
jns
xor
test
ljmp
in
dec
int3
push
xchg
rcll
scas
sub
fstp
xlat
adc
repnz
popa
testw
cmp
push
ljmp
adc
add
in
pushf
xchg
sub
sub
in
dec
mov
mov
cmc
mov
and
or
in
scas
dec
pop
push
imul
stc
icebp
push
push
mov
push
or
imul
fnstenv
out
add
int3
or
xor
mov
push
scas
xor
cmpsb
push
rol
push
dec
sbb
or
std
add
js
dec
jo
dec
xchg
ja
out
addr16
pop
sti
fwait
xchg
int3
jbe
jecxz
ss
hlt
pop
insl
std
adc
sub
or
xchg
pop
pop
insb
aas
pop
dec
test
fs
push
addr16
xchg
call
xchg
fiaddl
mov
xlat
xor
int3
nopl
sub
jge
in
inc
adc
insb
nop
in
mov
cmp
insb
addr16
inc
mov
jo
pop
sbbl
add
cmc
mov
pop
pop
mov
xchg
sbb
ret
jl
add
ficoms
stos
int
push
push
and
fsubrp
xchg
out
cltd
mov
scas
cwtl
stc
notl
jge
js
jb
jbe
stos
test
lret
int
std
adc
and
jecxz
setle
stc
push
mov
insl
adc
mov
int3
mov
into
add
out
mov
xchg
in
ret
in
push
pop
or
pop
lret
icebp
aad
jmp
mov
dec
dec
aad
and
loopne
mov
icebp
or
mov
jl
xchg
int3
inc
leavew
call
sub
popl
cmp
adcl
out
mov
orl
and
or
xor
cmp
xor
daa
or
xlat
sbb
add
enter
fs
mov
sub
orl
push
cmp
push
cli
les
icebp
fidivrs
sub
lods
jne
cmpb
fs
jmp
adc
das
lcall
pushf
stc
add
xchg
aaa
push
jl
imul
xor
imul
test
int
scas
cmpsl
xchg
pop
mov
dec
sarb
push
xor
mov
cwtl
stc
push
and
jno
jmp
lcall
fcomps
dec
test
sbb
and
es
xchg
clc
in
add
or
sbb
pop
adc
ds
enter
lods
sub
and
sub
les
lea
jbe
sub
xor
push
int3
testb
add
jge
pop
cld
mov
lret
sbb
mov
pop
test
jl
jle
sbb
xchg
fdivs
iret
sahf
mov
adc
aad
mov
jle
fcomps
jle
aad
in
adc
adc
movsl
adc
jmp
inc
xor
call
cmc
add
jno
icebp
add
mov
cmpl
scas
test
xchg
into
xchg
icebp
jno
inc
aaa
or
test
push
pop
ror
outsl
popa
sbb
aam
test
sbb
xchg
mov
enter
je
xor
std
or
xchg
movsb
xor
xchg
pop
in
aam
sub
clc
sub
or
or
pusha
mov
and
and
stos
cmc
sbb
inc
cli
mov
xchg
sbb
cli
sbb
or
jp
lret
mov
dec
sub
fists
cld
shrl
ficoms
aaa
xchg
orb
sbb
jb
sbb
loopne
imulb
cmp
jnp
pop
mov
xchg
fcmovne
arpl
mov
sarl
add
and
add
mov
sbb
jnp
dec
in
mov
loopne
cwtl
mov
fs
adc
lret
cmp
and
mov
dec
cmp
add
xchg
add
pop
ljmp
and
mov
shlb
mov
ret
test
push
xchg
inc
mov
jbe
jne
add
add
push
ja
lock
sbb
push
push
push
je
sbb
and
dec
bound
fdiv
xchg
nop
xor
repz
lock
jecxz
cmpsl
sbb
mov
add
mov
mov
stos
in
dec
arpl
fisubl
dec
mov
push
xchg
pop
lds
ret
adc
icebp
shlb
xor
popa
ret
or
adc
adc
pop
inc
jno
pusha
adc
pushf
jnp
nop
pop
jne
xchg
ja
pop
cmp
dec
lret
inc
and
test
test
cmpsl
and
loopne
gs
fs
sbb
dec
jno
int3
cmp
add
xchg
pop
push
jnp
cltd
xchg
scas
jns
icebp
aas
mov
fsubrs
adcl
nop
or
leave
sbb
sbb
mov
iret
test
les
sbb
cwtl
dec
dec
ljmp
out
pop
movsl
clc
leave
pop
pop
xchg
lret
push
jmp
push
push
pop
dec
shl
adc
dec
mov
or
jno
nop
and
test
inc
xorb
mov
ss
inc
adc
sub
in
stos
lock
inc
out
jnp
aam
out
mov
es
sbb
aas
mov
xor
push
mov
aaa
adc
cmp
popf
hlt
ret
pop
cmpsl
push
fcomps
aaa
jne
push
push
jmp
sub
dec
add
filds
incb
sbb
cmc
cmpsl
mov
outsl
mov
xchg
loopne
fldl
aad
shll
or
inc
add
mov
mov
shlb
mov
sub
and
in
dec
dec
sbbb
adc
or
adc
stos
lods
xchg
out
jo
and
inc
insb
adcl
ret
repnz
out
or
cwtl
mov
pop
enter
push
dec
idivl
cmp
add
test
test
cmp
inc
mov
inc
and
es
test
rcll
xchg
rorb
or
mov
mov
and
fbld
cld
pop
int3
sub
mov
movsl
adc
push
aas
rclb
add
sbb
repz
ljmp
in
xchg
mov
addr16
ds
dec
inc
mov
add
jbe
out
dec
and
push
mov
test
gs
cmp
add
out
jp
dec
sbb
push
dec
cmc
fstl
fistps
mov
pop
dec
addr16
cld
jp
adc
imul
mov
out
gs
dec
jnp
lahf
lcall
inc
xchg
in
dec
xor
es
cmc
insb
cmc
addl
and
inc
in
mov
roll
jb
mov
int
jmp
ret
adcl
cmc
xchg
mov
sti
push
aas
mov
int
xchg
xor
mov
dec
dec
adc
sti
in
mov
jg
or
stos
inc
mov
sub
or
xor
xchg
cmp
xor
loop
adc
add
pop
inc
xchg
dec
fisubl
jne
loope
mov
dec
pop
mov
pop
and
fs
or
adc
xchg
jne
jnp
inc
cmpsb
jb
and
xchg
lcall
mov
inc
push
inc
add
loop
sbb
leave
jnp
pop
xor
mov
mov
sti
push
pop
cmpl
mov
js
xor
jae
mov
jmp
push
mov
insb
inc
jae
xor
inc
pop
jl
mov
dec
cli
fcmove
fsubs
adc
fmulp
in
jnp
std
jbe
dec
adc
xor
xchg
stos
dec
push
ja
jmp
jne
jnp
xor
xor
push
ljmp
fsubrs
adc
imul
aam
adc
arpl
cmpsb
xchg
jmp
fwait
or
aad
imul
lahf
mov
cmp
sbb
sbb
js
push
pop
xchg
jl
inc
lret
hlt
jae
loopne
adcl
and
push
out
dec
lahf
outsb
aad
ret
xchg
inc
ljmp
call
add
xchg
pop
dec
xor
je
or
mov
jecxz
and
ss
in
jo
mov
in
into
repnz
sti
sub
orb
jp
push
lods
cmp
les
cwtl
xchg
add
xchg
mov
ret
xchg
inc
out
sub
pop
mov
jg
mov
sbb
in
bound
outsl
fpatan
and
aaa
push
rolb
ret
scas
adc
iret
xor
loopne
pop
gs
mov
aas
ret
insl
ljmp
push
add
frstor
repnz
mov
sub
cli
mulb
xor
add
cli
add
cmp
cmp
shl
push
or
imul
aaa
or
pop
cs
lea
pcmpgtw
aas
loope
rcl
pop
inc
jno
cmpsl
jnp
stos
mov
sbb
cmp
push
and
mov
testl
adcl
mov
loope
icebp
mov
pop
clc
dec
and
in
cs
xor
call
push
push
rcll
or
xor
sub
movsb
push
rorb
rclb
cmpsb
sub
ret
jp
loope
dec
jmp
inc
cmp
popa
bound
and
and
add
xchg
les
or
ja
xlat
shl
xor
or
jmp
add
push
lret
mov
loope
xor
mov
dec
mov
mov
or
push
loope
call
scas
test
stos
mov
cmpsb
cmp
inc
dec
ror
jecxz
cli
or
leave
jge
out
hlt
hlt
pop
adc
jle
sbb
cmp
sub
jmp
ja
mov
mov
mov
packuswb
pop
mov
scas
sbb
enter
and
pop
or
mov
movsb
hlt
jle
mov
sbb
cmc
stc
int3
xchg
ret
bound
or
mov
pop
sbb
popa
mov
popa
test
test
adc
push
sbb
scas
out
cmp
stc
ljmp
sti
push
jb
jns
aad
xor
pop
rolb
outsl
pop
sub
js
inc
shll
or
dec
imul
das
dec
jle
inc
cmp
ret
stos
aaa
sti
lret
mov
sub
popf
shr
mov
pushf
imul
push
mov
fidivrs
ljmp
mov
adc
sub
xor
mov
mov
test
pushf
lahf
mov
jbe
out
sbb
in
lret
int
and
cmp
lods
sub
fucomip
icebp
movsl
dec
mov
lock
dec
xchg
divl
adc
fdiv
and
ret
or
jmp
push
cld
xor
add
repnz
pop
xchg
rcrb
sbb
or
jne
push
fdivs
cld
push
data16
loope
in
out
aaa
jb
sbb
inc
pop
pop
je
jbe
movsb
push
or
cmp
xchg
std
lea
mov
inc
outsb
xor
shrl
mov
mov
dec
pop
jbe
lret
mov
flds
sbb
lret
insb
lret
xor
loope
std
jo
xchg
push
lock
ss
outsw
push
jno
sub
fsubp
xchg
clc
out
stc
xchg
ret
mov
mov
sbb
pop
jle
decl
ret
sbb
hlt
outsl
pop
or
imul
adc
ficompl
cmpsl
mov
mov
lcall
lods
out
out
inc
mov
xchg
ficomps
xchg
cs
ret
rcrb
dec
mov
cmpsb
sbb
inc
jbe
ds
xor
pop
add
mov
mov
mov
insl
mov
and
repz
mov
roll
mov
pop
aam
jnp
or
ret
lahf
jbe
hlt
adc
out
pop
ljmp
aas
xor
pop
clc
daa
cmp
sarb
push
xlat
aas
inc
add
lahf
mov
jge
lret
cmc
fidivl
rclb
nop
fists
outsb
sbb
adc
stc
lods
movsl
in
lea
rep
cs
cmp
mov
in
mov
dec
mov
inc
pop
lret
stos
fistpll
test
jbe
push
insl
mov
cmp
push
mov
cld
fwait
cmp
in
cmp
mov
loop
fsubr
push
dec
sbb
mov
mov
inc
sub
fsubrl
mov
sub
jle
inc
jno
in
jns
jle
int3
cmp
add
mov
arpl
cmp
add
push
jno
or
or
movsb
lret
test
roll
lods
dec
std
add
ljmp
inc
xchg
jl
jns
mov
inc
setge
mov
jbe
or
scas
out
rolb
aas
sahf
aam
mov
push
ds
mov
cmc
nop
mov
stos
jnp
mov
xchg
adc
in
pop
dec
pusha
les
dec
pop
push
js
mov
add
repnz
cmpsl
adc
mov
es
mov
mov
rcll
mov
inc
icebp
mov
mov
aam
sar
aas
inc
cld
test
call
push
lahf
aam
call
scas
bound
movsl
xchg
jno
int3
xchg
jge
mov
lcall
aaa
and
dec
mov
mov
pop
inc
push
sahf
hlt
mov
mov
sti
and
test
sbb
shlb
add
cs
hlt
fiadds
push
push
xlat
jmp
sub
mov
jo
pop
rcrb
xor
popf
sub
stos
ss
and
mov
clc
mov
push
add
sub
or
out
loop
or
sub
adc
xor
cmp
mov
mov
sub
stc
in
mov
add
bound
mov
adc
sub
negl
loop
pop
pusha
loopne
int3
lods
sbb
xor
aaa
repnz
or
enter
cmp
out
and
push
mov
das
sub
test
jo
sti
js
push
stos
mov
push
mov
xor
neg
sbb
pusha
mov
call
sbb
stos
jge
jp
int3
out
inc
pop
push
popa
or
adc
cmp
mov
jns
je
add
mov
jp
sbb
orb
lods
jb
or
push
add
in
subb
mov
or
jo
mov
adc
mov
jne
jns
cmp
inc
pop
xlat
sar
xor
jbe
xchg
xor
mov
xchg
outsb
inc
add
rcrl
nop
mov
hlt
jb
mov
mov
dec
es
mov
imul
pop
lea
dec
jge
mov
sbb
aaa
mov
mov
jae
outsb
mov
cmp
push
imul
jle
mov
sub
or
cli
aaa
jl
and
iret
clc
and
fucomip
cmp
cmp
push
pop
addl
loop
sbb
mov
test
push
stos
imul
mov
pop
lea
aas
sarl
cmp
sub
lea
fsts
cltd
add
fidivl
test
fdivrs
and
popa
sbb
pusha
push
jns
call
fwait
push
movsl
jb
xor
je
xchg
loop
inc
adc
lock
scas
lahf
sub
mov
add
imul
lret
inc
rcrb
imul
ss
in
std
fstps
popa
out
push
cli
jmp
cmp
adc
mov
mov
mov
insl
pushf
cmp
dec
pushf
idivb
and
scas
test
push
icebp
pop
rcrl
lea
mov
cli
sbb
mov
inc
mov
cmp
movsb
in
jnp
cwtl
jle
loopne
aad
and
jbe
adc
xor
xchg
and
lahf
cmp
push
jle
adc
mov
push
inc
cwtl
push
mov
das
sub
decl
sbb
es
gs
mov
daa
popf
aam
pop
inc
xchg
sub
aaa
jb
int3
xor
pop
pop
test
mov
movsl
icebp
and
ret
dec
fstpt
rcr
fadds
xor
push
lret
pop
into
adc
test
sub
inc
dec
nop
jnp
add
xchg
cmpsb
cmp
and
inc
imul
fbstp
orb
jb
push
push
test
rcrb
mov
mov
aam
ja
fdivs
dec
add
je
outsb
push
jg
sub
rorl
ret
imull
in
jle
mov
jne
mov
div
pop
jb
cmc
and
sub
fsubrs
jbe
pop
xchg
xchg
sbb
pop
stos
insb
cmc
mov
out
lcall
xor
les
sahf
negl
adc
leave
cmpsl
jno
call
push
iret
call
sub
scas
idiv
jnp
or
push
dec
cmp
mov
flds
fdivrs
mov
and
push
pop
jge
add
inc
cli
or
daa
fs
lods
ds
xchg
fwait
pop
sub
test
inc
shll
adc
xor
mov
xchg
ds
adc
or
pop
scas
and
sub
and
arpl
test
lods
fnsave
mov
out
push
sub
pop
or
push
pop
or
cmc
jb
sbb
fidivs
loop
and
xor
ds
insb
mov
mov
cmp
push
cmp
cld
pop
les
popa
add
repz
rolb
ffreep
xor
jno
dec
push
insb
loope
call
fcompp
repz
enter
adc
jge
sub
pushf
dec
push
out
cmpsb
std
mov
mov
test
stc
fstps
pushl
inc
mov
jp
cwtl
push
shl
pushf
mov
addr16
mov
xor
cmpsl
jl
lcall
fildl
roll
push
das
out
xchg
xchg
jecxz
xor
inc
and
dec
push
insb
sub
inc
pop
int3
in
clc
inc
fsubr
dec
cld
push
mov
push
push
add
ret
lods
les
ja
icebp
push
push
jns
sarb
arpl
arpl
in
adc
mov
cmp
fwait
jo
les
test
in
scas
cwtl
sub
push
arpl
xorb
stc
or
mov
hlt
iret
mov
scas
in
jl
filds
pop
sub
outsb
xorl
sbb
mov
xor
add
xor
pop
repnz
mov
cmpsb
out
shrb
insl
arpl
dec
outsb
aad
jae
pusha
aaa
loope
jnp
dec
cli
dec
repz
cmp
mov
cmpsl
shrl
jl
rcll
push
xchg
sbb
int3
pop
pop
jnp
or
jns
mov
inc
stos
cltd
repz
adc
adc
or
mov
ja
push
clc
call
push
lock
and
jl
into
data16
fadd
lcall
xchg
in
dec
cmp
xlat
data16
fisttps
negl
sbb
push
dec
and
xchg
sarl
testb
push
jge
jg
pusha
or
mov
or
movsl
pop
in
xor
leave
xlat
rorb
inc
xchg
sub
out
mov
ret
xlat
dec
mov
in
lods
add
cmp
inc
lret
jbe
cmp
cmp
fcoms
sbb
loope
sbb
dec
fsubrs
out
cmpsb
cmp
ret
inc
xchg
mov
insb
roll
rorb
outsb
pop
and
push
xchg
je
sbb
or
in
push
rcr
outsl
xchg
dec
and
or
lods
stos
cwtl
push
xor
out
lret
jle
xchg
and
sbb
movsb
loopne
xchg
popf
popf
ja
imul
stc
imul
movsb
lock
mov
les
sti
inc
cli
push
lret
pop
jecxz
push
or
rcrl
andl
pop
into
mov
sbb
xchg
lcall
adc
xchg
lcall
mov
lahf
xchg
cs
pop
cli
sub
mov
ret
adc
test
pushf
lods
add
pop
xchg
mov
xor
fbstp
imul
xchg
and
dec
sbb
mov
lret
popa
rcll
aas
aad
dec
pop
icebp
xchg
clc
pop
shll
push
dec
repnz
push
dec
sahf
jge
add
pushf
fs
push
out
and
pop
xchg
call
xor
fnstsw
adc
fisubs
push
cmpl
adc
pop
in
cmp
cs
fdivl
mov
mov
sub
mov
xchg
addb
adc
inc
xor
jo
mov
imul
cli
fsubrs
jmp
lds
jns
cltd
out
outsl
pop
add
std
jp
ds
ljmp
pop
pop
mov
movsb
adc
sbb
out
repnz
sti
iret
test
mov
loopne
imul
movsl
insl
pop
sahf
mov
cltd
out
xchg
ficoml
or
inc
sub
mov
cli
mov
sbb
xchg
adc
adc
and
repnz
popa
cmp
push
outsb
xchg
stos
add
and
int
ljmp
mov
ja
dec
daa
rcrl
jge
mov
int3
xchg
sbb
or
mov
jg
test
sahf
js
and
pop
mov
xor
inc
pop
push
add
aam
sbb
push
repnz
nop
xchg
jg
jne
pop
test
negl
jle
pop
loop
or
repz
mov
cmp
xorb
ret
mov
jo
insw
mov
dec
sub
loop
orl
adc
cmpsl
out
pop
lock
pop
add
sti
int
sub
inc
dec
movsb
testl
add
cmpsl
push
outsl
dec
popf
sbb
movsl
jecxz
push
jo
mov
jge
mov
mov
push
ss
daa
jmp
xchg
lods
icebp
sbb
xor
rcrb
or
push
xchg
dec
mov
call
sbb
ret
xchg
cmp
lea
cmp
inc
push
mov
test
add
cmp
into
or
push
jns
mov
jge
rcrb
adc
fwait
xchg
dec
mov
fidivrs
mov
cmp
loope
mov
adc
orb
in
sub
mov
hlt
xor
jbe
dec
push
add
in
daa
cmpsl
fmul
pop
arpl
adc
cmp
iret
mov
or
mov
cld
jg
xor
int3
std
mov
cmc
rolb
stos
add
popa
fwait
mov
add
mov
mov
jbe
mov
lret
popa
cmpsl
dec
fcompl
add
outsl
mov
cld
push
test
inc
push
sub
jmp
push
adc
cld
fstl
je
push
mov
mov
movsb
lahf
xor
pop
sbb
push
ja
xchg
mov
bound
popf
ljmp
les
and
push
pop
mov
movsl
imul
sbb
aaa
sahf
icebp
fistpl
xor
gs
cs
push
pop
shll
adc
xor
popa
pop
jo
jne
adc
lret
adc
push
sub
and
testb
xor
sub
jle
imul
adc
jge
stc
xor
ljmp
aaa
inc
sbb
push
popf
or
stos
call
jecxz
push
sti
stos
cltd
mov
repz
jne
hlt
dec
cli
mov
imulb
adc
aaa
cmp
inc
mov
test
decl
out
sub
ds
daa
jne
sub
je
jne
scas
mulb
adc
mov
and
and
dec
in
ljmp
repz
hlt
loop
or
flds
inc
dec
push
dec
ja
cmp
or
lcall
sbb
sub
subl
dec
add
out
inc
jnp
lea
push
ret
mov
pop
pop
outsl
bound
sahf
mov
dec
pop
cs
pushf
inc
sbb
mov
cmpsl
xchg
out
hlt
subl
pop
lods
into
rcl
cmpsb
adc
cmp
mov
ja
mov
sub
imul
in
cmp
fmulp
cmp
add
add
ds
sti
test
daa
adc
or
mov
pop
push
in
testb
xchg
adc
jmp
ss
mov
adc
dec
jo
jg
mov
mov
test
jp
ja
pop
inc
sub
loopne
or
fildll
xchg
cmp
push
or
add
cli
sub
push
or
mov
xchg
pushf
sahf
push
out
fsubl
mov
dec
pop
pop
or
sub
jae
imul
mov
add
fsubp
inc
add
cmp
fcmovnbe
jg
adc
sbb
in
rcrl
or
jg
ss
fimull
dec
push
fisubs
fsubs
pop
pop
jbe
mov
in
xchg
or
inc
mov
cmp
mov
jmp
dec
mov
stc
jo
xchg
cmp
fucomi
and
mov
fs
sbb
repz
pop
pop
jle
dec
mov
add
test
call
lret
push
fbstp
repnz
dec
test
jae
adc
mov
pop
insl
cli
jnp
std
or
lds
imul
paddusb
inc
sub
cmp
mov
je
sub
dec
pop
orl
adcl
mov
dec
lods
roll
js
je
das
daa
cwtl
add
fdivrl
mov
addr16
inc
pusha
in
lea
loopne
adcb
sub
mov
push
call
leave
mov
aam
dec
mov
outsb
test
push
cmpsb
test
scas
sti
lds
xor
cwtl
dec
rcr
aam
xchg
dec
arpl
dec
jmp
shlb
cs
fcoms
cwtl
push
jg
rcll
sub
jnp
iret
pop
pop
adc
cld
or
lret
imul
lds
into
out
mov
pop
out
or
mov
scas
dec
add
xchg
xlat
popf
mov
cmpsl
dec
push
dec
or
push
pop
mov
dec
jp
dec
inc
pop
outsb
cmpl
lret
lret
xor
add
fildl
pop
mov
mov
jnp
sub
dec
leave
fildl
xchg
stc
or
xchg
data16
push
aaa
xor
mov
mov
imul
mov
sub
lcall
adc
lahf
in
ljmp
sub
out
pop
pop
jo
sbbb
push
pushf
or
push
and
shll
call
insl
pop
adc
lods
mov
lahf
test
cmp
mulb
sub
test
hlt
pusha
xlat
popa
add
insl
sub
stc
mov
xchg
pop
lds
loop
icebp
sub
xchg
aaa
jge
jg
jb
aam
lock
push
repz
ljmp
add
mov
push
dec
pop
and
cmp
mov
loop
shll
mov
test
ficoms
mov
or
imul
mov
or
adc
and
loope
mov
lds
pop
shll
lahf
mov
xor
mov
imul
addr16
adc
pmullw
shll
lahf
lock
shrl
cmp
mov
push
mov
subl
xchg
lret
stos
mov
js
sti
jmp
insb
or
xor
ss
loopne
lcall
test
push
mov
dec
push
push
and
pop
shrl
test
cmp
aaa
addr16
mov
in
shlb
cmp
out
push
nop
rcl
push
test
and
loop
andb
repnz
cmp
test
and
aam
call
cwtl
outsl
push
adc
loope
lea
cltd
hlt
sbb
daa
testl
data16
jns
daa
lock
ljmp
js
mov
lods
and
cltd
push
std
lret
sbb
pop
into
dec
mov
mov
iret
push
xchg
std
pop
sub
ds
adc
mov
sbb
sub
jne
inc
fisubs
fs
imul
pushf
daa
push
push
movsb
mov
filds
pop
mov
add
shr
ljmp
cmp
loop
adc
jmp
xchg
loope
jno
cmp
inc
stc
inc
sbb
jecxz
icebp
lods
cwtl
ss
repz
callw
mov
setg
lret
mov
lret
rol
sbb
lahf
lea
push
mov
push
sub
dec
sbb
cmpsb
adc
push
pusha
ja
scas
sub
call
cmpsb
sub
mov
stc
inc
pop
fstl
lea
jnp
lods
mov
or
scas
inc
mov
mov
rorb
adc
js
call
insl
repz
and
xchg
out
fldln2
in
lods
xchg
hlt
sbb
cmc
shl
adc
into
aas
pop
cmp
add
cmp
bound
movsb
mov
push
jg
push
lds
stc
cmp
add
pop
stos
fwait
add
xlat
cld
adc
add
mov
in
outsb
inc
cmp
sub
mov
lsl
pop
cmp
out
cwtl
repz
adc
lods
jl
dec
inc
je
imull
fs
loope
sbb
in
xchg
adc
mov
repz
sbb
push
cmp
inc
nop
dec
cmp
pop
sub
dec
rolb
into
pop
lods
and
iret
mov
add
pop
cli
fldenv
and
push
bswap
cltd
cmpsl
pop
pop
jecxz
dec
aad
adc
cltd
xchg
out
jnp
mov
jne
cmp
xor
stc
pop
sbb
sbb
cld
je
insb
adc
sti
jle
int
std
cmp
sbb
addr16
dec
mov
or
push
in
add
pop
inc
pushf
cmp
xchg
or
movsb
jl
std
jnp
xchg
fldt
sub
ret
push
sahf
xor
xchg
cmp
pop
pop
adc
mov
test
std
ret
and
sti
mov
fisttps
mov
in
ss
pop
nop
fisubrs
mov
or
xor
bound
arpl
jmp
repz
and
push
cltd
push
sahf
dec
mov
popa
xor
lcall
sahf
push
adc
enter
movsb
rcrl
push
push
lea
or
fstps
jmp
push
fsubr
push
dec
xor
out
mov
in
fstps
packuswb
fucom
rcrb
popa
inc
push
jle
pop
push
in
rcl
cmpsl
adc
jae
insl
in
testb
dec
or
aad
xchg
inc
test
mov
imull
ds
jg
fistpll
dec
sub
dec
subb
test
lds
ss
lds
xchg
es
mov
aaa
adcl
insl
aad
mov
push
jns
push
dec
cli
stos
add
pop
ret
mov
inc
gs
sbb
push
cmp
sub
sbb
jno
mov
adc
jmp
add
aas
ss
rcr
jmp
divb
lret
in
repz
outsb
mov
mov
adc
mov
ljmp
je
rcr
cltd
out
mov
ljmp
adc
jbe
comiss
sarb
xlat
or
jl
xor
xor
jmp
dec
cmpsb
sbb
movsl
out
push
lods
xor
and
stos
lcall
shll
jo
sbb
into
pop
inc
lret
jb
jmp
push
fcmovbe
add
mov
stos
test
cltd
inc
rcll
sub
inc
adc
pop
out
pusha
rcrb
pop
les
dec
stc
ror
xchg
xor
stc
cmp
movsl
ror
xchg
xchg
orb
cwtl
cmp
pop
xor
mov
movsl
sbb
pop
sbb
cld
add
rcrl
xchg
jae
jle
imul
xlat
push
and
mov
sbb
shrl
rolb
push
movsb
cmp
lahf
cmp
clc
or
and
mov
rsm
push
fidivs
mov
inc
lret
jge
pop
fsubrp
xchg
pushf
andb
lret
ds
ret
add
outsl
sbb
adc
jge
cmc
pop
ret
and
movntps
ret
push
es
mov
js
push
adc
adc
sub
nop
outsl
or
jmp
test
scas
mov
scas
jl
sahf
xchg
add
in
mov
jp
roll
xchg
out
inc
mov
dec
mov
sahf
hlt
lahf
sti
in
loopne
scas
test
mov
das
outsl
shll
xchg
pushf
inc
shll
adc
std
xchg
cmp
mov
fldcw
push
testb
in
or
sbbb
addr16
add
int3
adc
add
push
icebp
mov
sbb
lods
xchg
pop
mov
push
rcr
or
push
pop
fldl2t
cmc
push
aam
cmc
loop
out
int3
rcrb
insb
pusha
mov
xchg
out
dec
fiadds
pop
shrl
addr16
adc
inc
push
hlt
test
pop
into
mov
sbb
mov
sbb
and
clc
push
sub
negb
mov
sbb
cld
push
in
ret
popf
lret
push
subl
loop
pop
cmp
mov
jne
out
out
adc
xchg
loopne
fsubrl
rcrl
mov
fldz
pop
js
jp
scas
lahf
lods
and
inc
and
sbb
mov
sbb
idiv
pop
add
push
in
xlat
fsub
fcmove
cli
fnstcw
adc
out
out
sbb
movsl
out
push
and
xlat
jecxz
fdivs
frstor
aaa
lcall
cmp
mov
push
scas
cmc
test
xchg
dec
hlt
pushf
rcl
ror
scas
xchg
aad
insl
inc
clc
and
movsb
rorl
and
inc
in
inc
jb
adc
pop
pop
sbb
sarl
ja
mov
cmp
movsb
push
pusha
dec
push
mov
iret
cmp
xchg
pop
xor
outsl
mov
rcr
mov
daa
jnp
mov
cmp
cmp
inc
in
inc
inc
dec
imul
xor
sti
cwtl
xchg
and
fmull
sbb
xor
jecxz
and
adc
add
dec
ret
rcl
pop
fcomi
xor
sti
cmp
in
cmpsl
mov
faddp
sbb
repz
pop
addr16
dec
mov
cmp
sbb
movsl
outsl
sub
jno
and
jp
mov
call
pop
gs
xchg
jl
aad
push
inc
cmp
inc
fs
mov
and
push
rcl
insl
inc
xchg
aaa
mov
jl
sbb
xor
addr16
stc
jmp
push
dec
ljmp
sti
xchg
push
insb
rorb
fsub
loop
dec
or
bnd
mov
xchg
cwtl
mov
mov
cmp
mov
test
stos
add
xlat
pop
rorb
js
add
jecxz
add
cld
inc
fcmovnbe
jecxz
cwtl
sub
test
popf
jl
popa
ja
push
xchg
sub
test
cmpsl
mov
lret
jbe
cmp
leave
mov
stos
dec
and
adc
xchg
and
js
mov
fidivl
sub
jae
pop
cmp
pop
addr16
ret
sbbl
sub
shl
push
clc
fwait
lods
out
cmp
dec
jbe
cmpsl
outsl
scas
inc
mov
pop
xor
pop
mov
fisubl
push
adc
movsb
fwait
sbbl
sbbb
xor
fstpl
push
inc
cmp
in
jns
push
xchg
lods
adc
and
mov
adc
pop
lea
or
xchg
xor
stc
xchg
pop
mov
rorb
cmpsl
mov
fsubs
and
das
test
mov
add
xchg
fcompl
mov
and
int
pop
cld
or
ret
sbb
and
shlb
lock
lahf
shlb
or
pop
jge
jmp
mov
push
clc
cmp
push
pop
xchg
in
xchg
test
or
push
jo
mov
push
and
sbb
clc
sbbb
scas
push
mov
pop
lret
push
xor
scas
push
leave
repz
sbb
mov
push
ljmp
insl
push
adc
xchg
repnz
es
sub
push
gs
rolb
mov
dec
jecxz
shr
and
sarl
movsb
mov
fildll
pusha
jnp
loopne
enter
dec
jno
mov
fmuls
jo
cmc
stc
std
popf
data16
push
rcll
sub
std
lret
test
pop
inc
fsubs
arpl
cmpsl
nop
fnsave
fisttps
pop
repz
mov
fists
test
and
cltd
jo
pop
cmc
xchg
mov
xchg
ret
pop
fs
lret
arpl
mov
repnz
sbb
jo
fcom
adc
int
adc
pop
in
fwait
test
arpl
mov
outsb
xchg
into
inc
fdivl
jb
add
jae
push
or
test
inc
mov
mov
mov
stos
pusha
and
mov
fwait
enter
sbb
stos
adc
popf
or
jne
or
hlt
icebp
in
jmp
iret
sbbl
cmp
sti
mov
fwait
test
mov
inc
mov
ljmp
arpl
outsl
dec
mov
cmp
jecxz
sub
inc
sbb
or
jb
popf
icebp
push
cmpsb
dec
movsb
mov
les
cli
shll
movsl
daa
aad
addr16
stc
sbb
cmpsb
lret
mov
lods
jmp
imul
pop
jp
mov
xchg
push
jge
xchg
xchg
sbb
arpl
cmp
cmpb
jecxz
add
rorl
sub
mov
add
mov
inc
lock
fbld
cli
in
data16
lret
cli
mov
xor
dec
sub
adc
pop
mov
jo
xchg
dec
inc
scas
cld
xchg
cmp
icebp
jnp,pn
mov
or
cmpsl
sub
pushf
pop
push
xchg
jb
fucomi
mov
mov
mov
or
or
bound
aaa
andps
js
adc
cmc
sbb
rcll
daa
insb
in
push
inc
jp
push
fisubrs
clc
dec
jbe
aad
push
sub
test
cmp
adc
lcall
inc
add
ljmp
outsl
xchg
test
lods
mov
imul
lods
and
pop
push
xor
push
add
popa
iret
sub
mov
sub
mov
fnstcw
cmp
push
repz
dec
push
sbb
repnz
dec
cmpsb
lret
into
and
out
cmpsb
dec
sub
jno
loopne
xchg
add
or
aas
outsl
jbe
cmpsb
pop
lret
xor
pop
leave
out
and
lret
and
push
dec
or
pop
stos
bnd
cmova
adc
cmpsl
outsl
mov
xchg
pop
mul
rcrl
incl
out
cmc
sahf
jbe
testl
jo
pop
mov
test
fidivrl
cwtl
pop
jp
lods
pop
mov
jle
xchg
push
adc
jle
roll
jge
lret
flds
sub
mov
push
xlat
and
lods
xor
mov
mov
xchg
jmp
mov
push
sbb
pusha
mov
and
lock
cmc
xor
inc
jne
lret
repnz
outsb
add
lcall
and
pop
ret
xchg
xchg
push
sbb
jbe
outsl
mov
inc
adc
bnd
pop
outsl
out
inc
xor
mov
push
cs
xchg
mov
sbb
cmc
iret
out
test
mov
hlt
sub
mov
mov
mov
fwait
jmp
xor
repz
dec
jl
dec
dec
mov
jbe
das
int3
lock
aas
jo
daa
imul
lock
stc
addr16
dec
hlt
cli
mov
pusha
cs
cmp
jns
lods
mov
stc
in
les
pop
sub
adc
loope
mov
stc
repz
into
sub
fists
jo
cmp
xchg
adc
or
or
mov
fmuls
push
and
insb
pop
stos
and
mov
lret
cmpb
push
lahf
arpl
ficoms
mov
mov
stos
fimull
in
or
adc
jnp
push
cmp
xchg
ss
loopne
xchg
push
lods
inc
mov
cli
mov
adc
or
xor
out
sbb
xor
out
pop
orl
push
repz
scas
xor
mov
mov
test
mov
arpl
dec
sub
and
ficoml
inc
jns
pop
jb
aas
in
mov
sub
cld
push
adc
and
nop
bnd
js
daa
mov
movsl
int3
xchg
das
std
pusha
adc
push
dec
pop
mov
repnz
xchg
stos
sub
jmp
sub
cmp
aas
cld
mov
or
std
mov
mov
outsl
inc
mov
enter
sbb
xchg
test
xor
add
je
or
dec
movsb
push
ret
add
xor
cmp
push
pop
adcl
lods
push
in
mov
std
add
and
ja
test
push
dec
mov
xchg
xchg
js
adcb
int3
aad
enter
xchg
in
outsb
push
dec
je
frstor
pusha
sub
call
jne
jl
and
sbb
fbld
inc
cld
ret
ja
pop
jecxz
sbb
add
jl
jb
add
ret
cli
push
mov
popa
aaa
test
mov
push
loopne
cmp
mov
cwtl
jmp
xor
push
cmp
insb
mov
sub
and
sub
xchg
adc
sub
sbb
and
and
push
popa
pop
mov
jle
test
and
xchg
sub
jbe
mov
in
mul
mov
fbstp
repz
mov
lea
dec
insl
mov
ja
pop
pop
in
outsb
mov
stos
enter
add
daa
xor
sub
mov
leave
xor
ret
imul
popa
sub
fdivrs
inc
xor
jg
push
adc
stc
aad
mov
or
push
xor
or
push
jo
out
xor
push
inc
insb
xor
jmp
les
jno
inc
in
sbb
inc
jmp
mov
ret
out
inc
iret
xchg
ret
xlat
and
pop
imul
repz
ss
fstps
lret
adc
dec
in
mov
pushf
push
mov
dec
or
inc
dec
inc
mov
pop
sti
cli
outsb
cmp
cmpsl
sbb
movsl
adc
aaa
jle
lock
cli
mov
cmpsl
call
je
scas
outsb
xchg
add
add
pop
push
leave
push
push
push
push
and
pop
int3
lods
leave
push
jmp
and
mov
jmp
and
lock
add
xlat
or
add
mov
cmp
jle
mov
mov
cli
pop
out
mov
sbb
cld
push
iret
out
sar
xchg
stos
je
popa
and
outsl
pushl
xorl
push
int3
testb
repz
xor
testl
cmp
adc
jecxz
std
aaa
mov
mov
push
sbb
push
inc
add
ja
rorb
xchg
xchg
xor
lods
push
mov
sahf
add
mov
int
push
jno
test
cltd
outsb
xor
push
mov
decb
arpl
fs
hlt
mov
fcompl
cltd
fldenv
lcall
xchg
adc
push
imul
or
push
rcrb
inc
pop
cli
std
adc
jnp
adc
cmp
sub
jg
dec
cmp
or
enter
xor
stc
adc
test
mov
jecxz
mov
in
push
add
mov
stos
mov
mov
dec
xchg
add
imul
inc
mov
or
lldt
mov
jae
sbb
inc
and
or
cmpsl
cmp
mov
int3
test
pop
adc
out
add
adc
es
cmp
push
xor
imul
lods
imul
mov
cmc
roll
mov
in
movsl
cmpsl
mov
mov
mov
out
jns
sub
ljmp
out
cmpsl
insl
leave
jb
jb
sar
out
jne
sarl
add
gs
mov
aam
bound
jle
pushf
jg
and
adc
cmp
cmpsl
data16
sbb
or
jge
jns
xor
and
fsub
add
push
dec
or
xchg
add
addr16
clc
push
les
testb
sub
fsubs
data16
aam
lods
xchg
je
xchg
and
dec
int
aad
jl,pn
push
rcrb
ficoml
mov
xor
pop
mov
inc
int3
jnp
lret
fcmovbe
lret
out
and
mov
add
dec
rcll
sbb
cld
add
adc
jno
aas
stos
test
adc
jbe
fwait
pop
dec
dec
mov
mov
push
and
ja
ljmp
fsubrl
sub
push
cli
pop
push
test
cld
scas
mov
fwait
xchg
cmpsb
popa
cmpsb
nop
sbb
test
push
rolb
jbe
sbb
mov
jg
scas
sub
and
and
stc
push
rcrl
sbb
mov
inc
mov
loop
adc
inc
popf
xchg
aas
idiv
mov
xor
shl
call
add
in
add
repz
aad
xor
arpl
fisubs
jle
push
xlat
call
shll
xor
sbb
sbb
push
add
jmp
pusha
movsb
mov
in
aam
lods
into
sub
mov
push
jle
add
sbb
aas
rcrl
mov
imul
imull
adc
call
jmp
and
fucomi
into
fwait
mov
xchg
into
xor
xor
adc
or
movsb
cmp
mov
lds
mov
movsb
stos
nop
cld
sbb
fcompl
sti
psrad
dec
xor
lret
fwait
jge
ss
outsl
shlb
add
dec
mov
fimuls
fdivs
push
mov
shlb
aam
and
dec
sbb
rorb
inc
ror
fidivrs
fiadds
jg
xchg
ud2
lods
sbb
ds
cmp
in
push
cmp
sti
xor
jmp
xchg
aam
push
insb
shl
jmp
mov
dec
in
cmp
xchg
xchg
sub
xchg
pusha
scas
inc
les
ja
mov
in
inc
adc
push
or
shl
stc
ficoms
movl
andb
xchg
pop
test
jl
sbb
jnp
and
loope
lahf
roll
lds
adc
xchg
rorb
mov
arpl
js
mov
mov
int
movsb
push
std
int3
loope
mov
mov
push
push
scas
lock
fwait
pop
inc
aam
adc
lds
outsl
adc
fsubrs
push
nop
mov
scas
cmp
xor
xor
mov
adc
mov
stos
push
in
fists
cmp
mov
adc
add
xchg
push
lea
clc
iret
add
xlat
sbb
xlat
mov
push
test
sbbl
xor
xchg
rolb
scas
dec
std
dec
mov
mov
pop
jno
rcl
adc
cmp
scas
ss
rorb
and
add
rolb
dec
and
in
xchg
pop
mov
mov
stos
in
iretw
and
test
pop
mov
xchg
inc
push
pop
jl
dec
out
adc
cmp
dec
stos
lcall
fstl
sbb
mov
out
and
rcrb
inc
mov
stc
sub
loope
movsb
adcb
loopne
dec
out
and
sbb
pop
das
lds
adc
jne
imul
cs
adc
pop
xor
mov
sub
shll
sub
xor
jne
xchg
outsb
mov
mov
jns
out
rsm
or
xchg
adc
xlat
mov
adc
mov
notb
jle
mov
out
push
xlat
add
popa
cltd
ss
outsb
call
and
les
jo
call
sahf
cli
dec
fcoms
xor
js
imul
add
daa
orl
and
xchg
jl
imul
lea
imul
pop
jge
inc
sbb
bound
imul
xchg
nop
mov
cmpsb
lahf
lcall
leave
dec
mov
push
cwtl
fists
pop
or
test
ljmp
or
std
into
and
arpl
cld
les
mov
pop
gs
or
xor
stc
push
xchg
sub
or
ja
jbe
pop
loop
pop
popf
adc
fstps
or
xlat
fmuls
xor
out
test
xor
int
or
pop
add
mov
xor
jnp
nop
lea
inc
lret
and
mov
push
mov
arpl
mov
sbbb
lret
fisubrl
xor
xor
inc
push
mov
pop
inc
jo
mov
subb
sarl
lods
insl
mov
cwtl
mov
inc
mov
mov
pop
push
adc
add
mov
fs
lcall
or
mov
dec
sub
sbb
mov
mov
icebp
adc
sub
aas
cmp
push
stos
add
scas
cmp
sbb
jbe
movsl
test
ja
cmpsb
xchg
mov
aad
add
daa
subl
std
sbb
cmpsl
pop
dec
inc
cld
das
int3
sub
iret
xchg
dec
cmp
mov
lcall
cmp
stos
gs
push
outsb
mov
or
mov
mov
mov
stos
cmpsb
das
adc
jbe
fs
sti
mov
scas
ret
mov
les
push
xchg
scas
std
mov
inc
cltd
sbb
jae
add
and
jp
inc
mov
inc
enter
sahf
dec
push
pusha
js
jno
mov
pushf
js
jnp
xchg
out
pop
aam
cld
push
aam
jecxz
cs
pusha
cmc
inc
ljmp
pop
or
inc
jns
lcall
loopne
sbb
mov
xchg
dec
outsl
mov
xor
loopne
sbb
inc
inc
pusha
cld
push
inc
mov
jb
test
movsl
xchg
fnstenv
add
or
adc
daa
aaa
lret
repz
mov
outsb
jmp
add
fiaddl
dec
jge
mov
inc
sar
in
scas
cmp
xor
dec
dec
add
bound
in
xchg
pusha
add
subb
lea
push
lods
lcall
ds
fstpt
fsubrs
push
ss
mov
and
insl
shll
repnz
and
xchg
mov
loopne
jnp
pop
ja
adc
repnz
insl
ss
mov
xor
fwait
add
dec
cmpsb
push
cwtl
mov
jb
mov
jecxz
fwait
push
cs
nop
fstpl
sti
push
clc
jae
scas
pop
cli
pop
push
jne
xchg
push
jne
xchg
xchg
mov
daa
push
mov
test
push
into
adc
xchg
sbb
fimull
jb
mov
in
mov
subl
add
pop
hlt
push
push
add
loopne
xchg
daa
inc
xor
movsb
push
out
dec
cmp
shr
pushf
outsb
pop
and
cmpsb
shr
mov
cmp
cwtl
stc
push
lret
mov
pop
aam
adc
jle
in
cs
mov
cmp
jno
sub
ffree
push
out
or
cmpsl
call
out
in
push
aas
xchg
push
fnsave
add
xchg
aad
fucomp
loopne
mov
out
dec
inc
js
lahf
cltd
ja
pop
push
adc
pop
or
mov
xor
xchg
in
mov
and
cs
sbb
mul
cmp
inc
incl
xlat
push
xchg
shrl
add
sbb
repz
mov
enter
rcll
int
fs
inc
mov
test
pop
std
rclb
stc
xchg
pop
adc
paddusb
cld
shlb
push
stos
cmp
ss
andl
or
or
outsl
jns
dec
jp
or
jge
cli
mov
loop
loope
ljmp
dec
sub
lret
sbb
call
and
mov
push
ret
push
jbe
sub
stc
cwtl
xchg
jno
in
mov
repnz
sahf
push
adc
movsl
pop
pop
ficomps
cmpsl
jbe
push
clc
pop
lcall
pop
cmc
mov
mov
les
push
mov
xor
xor
enter
loopne
sub
xchg
adc
mov
pcmpeqw
stos
sbb
cmpsb
stos
imul
stos
in
mov
out
jb
lods
dec
test
xchg
sbb
sub
jmp
sbb
sbbl
sub
cmpsb
testl
lds
sbb
jo
and
pusha
mov
pop
push
fdivr
cmp
or
decb
ja
fistpll
adc
imul
movsl
or
inc
das
sti
push
das
add
fnstenv
mov
cs
aam
or
adc
repnz
mov
mov
push
aam
inc
mov
mov
cmpsb
adc
lret
outsl
in
pop
test
pop
push
pop
and
out
jns
fsubl
test
dec
sbb
jns
mov
xchg
jmp
std
adc
in
xchg
lret
dec
lahf
mov
movsl
call
out
or
test
insb
cwtl
aad
cmp
xor
shrl
jae
nop
and
ucomiss
mov
sbb
out
or
mov
pop
jg
add
cmp
bswap
inc
and
pop
int3
xchg
add
ret
icebp
pushf
mov
pop
fwait
mov
and
inc
sbb
xchg
mov
dec
dec
insl
inc
leave
shl
out
mov
lcall
mov
cwtl
call
clc
sarb
scas
nop
scas
out
xchg
lea
push
push
rep
stos
imul
in
out
sbb
icebp
nop
xchg
das
pop
in
xchg
xchg
pop
ss
inc
frstor
lods
repz
jge
fwait
cmp
push
xchg
fistps
and
push
push
push
in
mov
data16
or
cli
call
cltd
jb
push
jmp
lcall
mov
pop
das
sbb
sub
sub
cmc
in
das
adc
pop
sub
push
push
daa
pusha
dec
scas
sbb
movsb
pop
xchg
jb
dec
or
jmp
sub
out
insl
lahf
sub
add
add
je
lods
in
scas
mov
push
mov
mov
sarb
mov
and
jae
out
std
movsl
mov
jo
rolb
xorl
mov
fbld
mov
test
sub
std
sbb
and
mov
and
test
mov
rcl
nop
ljmp
jge
mov
cmp
movsl
fmul
xchg
inc
sbb
outsb
enter
dec
aaa
sbb
into
es
sbb
test
cmc
sbbb
scas
mov
mov
xchg
fidivs
test
inc
jno
out
in
push
mov
jbe
call
push
movsb
mov
jg
inc
inc
rol
outsl
cmp
popa
add
iret
jno
pop
push
pop
scas
add
enter
push
mov
cld
pop
xchg
mov
inc
mov
pop
add
xlat
mov
std
jecxz
and
push
jge
mov
aas
sbb
or
daa
mov
or
test
negb
incl
sbb
or
ja
les
jae
adc
and
push
hlt
add
sti
and
mov
loop
mov
in
aaa
imul
lock
xchg
xchg
ret
mov
stos
pop
xchg
aaa
sub
push
out
push
dec
dec
js
dec
popa
jle
mov
sbb
shld
or
dec
aam
pop
rcll
mov
insb
pop
sbb
ja
sbb
cmpsl
cmp
call
jp
hlt
xchg
xchg
in
std
fildl
stos
fdivrp
cmp
sub
sub
adc
adc
xchg
in
xor
insl
fisubl
gs
xorb
fldcw
sarl
test
jb
fs
out
cmp
pop
scas
fstpl
pop
xor
push
out
sbb
sbb
pushf
ja
aas
adc
leave
or
faddl
sub
stos
xor
mov
rolb
jo
adcl
les
jnp
push
pop
orl
adc
or
xchg
inc
cmp
fnsave
mov
sub
fbstp
push
dec
jnp
and
pop
mov
jl
mov
sub
fst
insb
cmpsb
lret
dec
adc
mov
pop
sbbb
lret
into
lret
pop
sbb
into
adc
sahf
sub
out
cmpsl
sbb
fisttps
sub
pusha
fldcw
mov
push
sub
dec
std
pushf
jecxz
jmp
or
ret
ficompl
shr
mov
jb
sub
cli
and
outsl
jl
adc
test
mov
stos
rcll
jge
pop
inc
mov
fisubrs
mov
test
repz
pop
ror
adc
fcomps
es
mov
lea
mov
jl
adc
test
out
mov
sbb
loopne
imul
cmp
inc
xchg
or
shl
test
dec
cmp
rorb
adc
add
fldl
and
pop
jne
cmpsl
adc
stos
and
mov
mov
add
sub
pop
add
mov
cwtl
jbe
ljmp
cmp
xor
sbb
jmp
pop
push
imul
mov
mov
sbb
add
cmp
xchg
outsb
xor
cmp
jecxz
pop
sub
repz
out
lea
push
xor
jp
in
loope
mov
repnz
mov
stc
add
shl
and
je
cwtl
dec
xchg
xor
cwtl
outsl
ss
mov
add
pushf
ds
mov
nop
mov
aad
rorl
jl
into
cmpsb
or
cli
insb
and
gs
ss
xchg
mov
cltd
jae
cwtl
lea
pop
inc
mov
sbb
adc
or
aaa
inc
jmp
and
pop
fisubrs
sub
adc
out
pop
popf
mov
dec
fmul
pop
jne
js
ds
cmp
push
jmp
mov
push
xor
out
int3
ret
subl
ret
sahf
out
jp
lcall
add
imul
xlat
adc
pusha
sub
popa
push
pushf
arpl
popa
push
repz
lods
les
fsubs
int3
dec
into
and
mov
add
in
inc
and
ret
adc
lret
mov
mov
icebp
pop
pop
mov
cmp
in
pop
add
enter
fisttpl
outsl
fdivl
and
cmp
movsb
movsb
out
pushf
lahf
push
lcall
inc
and
sbb
loop
pop
imul
xor
int3
add
adc
lahf
in
ja
fwait
mov
dec
scas
movsb
lea
fidivs
repz
pop
loope
fcmovne
out
fwait
add
and
jge
lea
xchg
lcall
adc
adc
sbb
sbb
js
imul
fs
cmp
sar
push
lcall
leave
xchg
add
cmpb
pop
mov
lahf
loopne
les
in
push
or
inc
pop
mov
inc
enter
adc
arpl
lcall
jp
test
les
aad
dec
in
test
or
mov
xor
jl
lcall
ss
push
xchg
std
clc
data16
mov
test
imul
aaa
inc
sahf
fildll
mov
mov
dec
jg
mov
or
pop
stc
pop
nop
rcll
adc
out
pop
testb
inc
cmp
mov
mov
inc
inc
in
cmp
add
test
xor
add
xchg
loope
ds
shrb
shll
nop
cwtl
int
loope
push
stos
pop
mov
fnstcw
arpl
daa
popa
sub
sub
int3
pop
xchg
fimuls
dec
nop
cmp
dec
dec
pop
shll
add
sti
inc
push
adc
pop
sarb
dec
dec
mov
add
loop
or
push
xor
ret
push
outsb
ret
jmp
dec
jge
mov
fsubrs
dec
not
pop
aas
cli
mov
movl
out
xchg
mov
aaa
leave
lcall
fcoml
scas
add
psrlw
push
or
ljmp
ret
roll
xchg
shlb
mov
and
sub
pop
dec
insb
roll
and
jns
xor
xchg
xchg
add
loop
mov
fsubrs
cmp
insl
xchg
cmpsl
xchg
push
test
gs
cmp
adc
std
in
xchg
test
fbstp
lret
push
and
inc
xchg
test
clc
mov
int3
xchg
insb
jg
cmc
pop
data16
ja
sbb
lock
dec
dec
push
insb
sbb
inc
test
jb
andl
inc
shl
or
fcmovnbe
add
enter
shl
add
sub
or
mov
andl
push
das
or
dec
cmpsb
push
sarl
jmp
cmc
xorb
lods
jbe
adc
adc
inc
dec
xchg
test
sti
imul
sbb
andb
movsl
cmpsl
push
add
ficompl
xchg
cmp
pop
lds
mov
mov
mov
lret
dec
outsl
inc
sub
js
pop
add
pop
add
into
mov
mov
loopne
out
sbb
sbb
or
test
adc
in
test
xchg
adc
jp
sub
shlb
add
cmpsl
loop
pusha
xor
mov
test
xlat
or
aas
imul
add
lods
or
xchg
in
sub
cmp
xchg
pop
inc
jecxz
lcall
jae
shll
pop
jne
jns
cmp
stos
cmpsl
js
dec
scas
sub
test
cltd
div
movsl
xchg
out
mov
cs
sub
fsts
sarl
add
sbb
xchg
cmp
xchg
dec
clc
mov
jle
lds
mov
sub
jbe
jns
pop
dec
or
lret
jno
in
jnp
pop
sbb
es
xor
cmp
cmpxchg
jle
pop
clc
pushf
call
mov
add
leave
lods
xor
jno
sub
xchg
jno
sahf
icebp
icebp
fidivrl
nop
or
rorb
scas
inc
test
xor
dec
add
pop
fcomps
dec
sahf
test
inc
jne
ret
out
dec
dec
mov
leave
lea
inc
push
jo
push
pop
xor
sbb
adc
movsl
fwait
mov
inc
xchg
mov
jg
mov
and
imul
cmp
in
add
mov
mov
aas
lods
add
repz
mov
sub
into
lret
enter
popf
stc
sub
push
mov
lock
adc
fxch
jae
xor
mov
rorl
add
cltd
pop
add
push
icebp
cwtl
ljmp
stc
mov
std
xchg
or
xchg
inc
loopne
ljmp
dec
leave
cmp
mov
loopne
mov
out
icebp
repz
pop
inc
add
stos
push
mov
adc
andl
test
rolb
jns
jnp
or
mov
add
out
push
and
in
nop
mov
xchg
xor
push
push
mov
push
sub
roll
xchg
push
test
fdivr
or
add
lret
pop
nop
sub
in
cmpsl
pop
negl
cmp
mov
and
xchg
data16
jbe
sub
fcmovu
xor
ds
insl
fisubl
mov
mov
in
add
xor
xorl
repnz
or
test
and
jne
fptan
test
jp
fists
fists
out
testb
jp
test
test
stos
sbb
jo
cli
int
jae
popf
je
cmp
cmp
or
adc
pusha
mov
pop
dec
or
push
ds
iret
jp
add
push
push
jb
cmp
xor
mov
les
push
or
aad
adc
push
mov
cmc
add
test
pop
lock
rorb
dec
dec
fisubrl
ja
xchg
js
jb
shrl
bound
sbbb
pop
xchg
jbe
stc
aas
orb
stc
mov
stos
mul
push
push
lock
sub
setle
inc
dec
fcompl
mov
push
sbb
mov
or
int3
sbb
xlat
push
popa
dec
add
andb
jmp
in
pop
das
inc
or
push
jge
pop
jns
mov
sbb
xchg
les
fisttps
sub
ja
subl
pop
dec
push
pop
push
daa
dec
enter
push
jae
std
adc
ljmp
leave
mov
pop
add
js
push
sti
orb
fcmovnu
std
shll
imul
pop
jg
fldl
mov
imulw
sbb
pop
hlt
rcrb
lret
lds
lock
in
lock
movsl
scas
lret
popf
ja
test
sbb
pop
lret
jmp
inc
lret
push
cmp
jae
jmp
in
mov
xlat
dec
movsb
xchg
aad
out
and
inc
gs
mov
xor
and
mov
push
xchg
mov
sub
imul
adc
pop
es
xchg
dec
ljmp
xchg
aaa
lods
add
add
jb
cwtl
sbb
aaa
ja
pop
psrad
sbb
aam
cmp
pop
xor
jb
movsb
aam
jle
pop
dec
ficompl
cs
push
or
mov
ljmp
fs
sarb
hlt
inc
clc
push
and
lret
dec
push
adc
imul
je
inc
aaa
push
fildll
shll
or
xor
adcl
push
mov
mov
fwait
or
cmp
scas
bound
xchg
jge
insb
or
mov
pusha
outsb
jle
add
rcl
mov
arpl
sahf
and
inc
pop
inc
lods
leave
sbb
sbbl
inc
out
xor
sub
adc
cmp
or
pop
stos
ljmp
scas
fcoms
pop
jae
in
mov
sub
xor
jo
jl
xlat
mov
add
into
cmp
cltd
lret
dec
loopne
fmuls
sub
xchg
lahf
das
jne
icebp
xchg
out
pop
inc
sbb
dec
lcall
mov
addr16
or
in
jg
popf
iret
mov
cmpsb
push
out
jecxz
cmc
sub
or
mov
aas
jp
shl
jmp
jno
mov
jno
cltd
cld
mov
dec
out
insl
push
sbb
mov
movsl
lods
cmp
adc
and
int3
int
stc
adc
ljmp
jmp
test
pop
add
push
or
mov
xor
cmp
popf
imul
cltd
fs
or
movsl
push
ret
in
lret
or
jmp
or
mov
roll
inc
dec
je
mov
xchg
mov
pop
sbb
mov
mov
lock
ljmp
popf
aad
jle
jne
add
xchg
jmp
faddl
and
jge
mov
fwait
push
pop
adc
outsb
in
cmp
dec
repz
mov
daa
lds
push
xchg
imul
test
sarl
sbb
xlat
dec
nop
int3
stos
aam
or
mov
es
not
jno
inc
mov
hlt
lcall
test
jg
inc
mov
lahf
xchg
add
testl
data16
cmp
loope
inc
ja
aas
add
ret
ss
cmp
std
fists
lock
dec
sub
inc
into
mov
loope
cmpsl
sbb
int3
xchg
shl
out
out
insl
dec
in
adc
mov
es
dec
fsubs
es
in
adc
sub
xchg
pusha
jne
icebp
xchg
sbb
ds
push
rolb
xchg
adc
mov
icebp
leave
std
add
jo
sub
inc
push
add
mov
insb
adcl
std
sbb
rcrl
jp
jmp
jmp
loope
pop
add
jp
push
dec
test
fs
jge
jnp
hlt
stos
insl
out
adc
cmp
push
add
pop
sbb
loopne
push
in
jo
dec
vaddss
clc
cmp
lahf
out
repnz
pop
dec
incl
add
jmp
not
cld
or
repnz
push
test
jecxz
fmull
xchg
fadd
shll
mov
icebp
mov
and
inc
dec
cmp
addr16
loope
jne
cmp
adc
mov
and
pop
xchg
xchg
inc
sahf
jp
cmp
pop
jae
mov
jae
sbb
je
je
outsl
in
mov
xchg
pushf
sahf
jmp
mov
popa
fistps
in
or
nop
pop
push
dec
pushf
adc
sbb
mov
xor
aam
dec
xlat
push
xor
lcall
fidivl
sbb
dec
ret
mov
xor
sub
imul
ret
cmp
pop
mov
mov
pop
mov
sub
inc
fadd
imul
jl
call
xchg
aam
fwait
daa
xorb
mulb
test
push
push
dec
aam
inc
lock
jmp
loope
push
mov
lahf
loop
mov
cmp
dec
mov
loop
sub
aaa
call
push
jno
inc
test
adc
sbb
xor
and
addb
scas
daa
bound
adcb
jg
or
jae
xchg
out
xor
inc
hlt
aam
in
arpl
flds
xor
sub
sub
lds
rolb
inc
daa
inc
mov
cmp
xchg
inc
in
mov
data16
push
je
jmp
jg
cmp
xchg
push
xor
aad
jne
push
out
stos
in
sahf
js
fcomps
enter
jmp
jmp
mov
jne
into
das
icebp
in
inc
inc
rclb
ret
es
daa
mov
repnz
sub
pop
pushf
inc
dec
orl
pop
sbb
mov
jns
addl
inc
aad
sub
sub
int
add
and
fildll
cmc
dec
jbe
out
mov
out
pop
push
cs
lods
aad
jmp
jbe
mov
xchg
fs
push
lahf
insb
or
nop
mov
pop
fstpl
mov
lods
cmp
xor
xchg
shlb
fwait
cmp
std
fldenv
fisubs
aaa
stos
xor
in
test
out
xchg
movsl
push
psrad
sub
sbb
xor
cmp
loope
dec
or
jne
pop
pop
adc
mov
add
mov
scas
cmc
addr16
push
pop
aam
inc
xchg
bound
or
adc
in
ret
loopne
and
sbb
mull
xchg
or
jg
or
pushf
pop
and
or
lea
xorb
scas
lahf
lea
in
ds
repnz
mov
cmp
insl
inc
sbb
mov
or
or
lcall
pop
sub
cli
ret
sub
xchg
jns
cmp
adc
pop
mov
inc
mov
ds
add
stos
pushf
mov
push
xchg
lcall
ret
mov
cli
mov
mov
jl
loope
aaa
fsubrl
orb
cmc
ss
popf
and
ret
test
mov
push
add
mov
adc
xor
mov
fsubrl
dec
imul
add
xchg
std
pop
pop
shr
sub
mov
cmp
inc
cmp
sub
aam
xchg
loopne
adc
fnsave
add
fstl
fnstsw
bnd
in
mov
sub
stos
lfs
mov
shll
adc
aam
test
loope
outsb
sbb
sahf
sub
inc
adc
push
push
imul
std
test
cli
dec
mov
insb
add
test
sub
ja
push
fdivl
out
cli
iret
adc
mov
pop
mov
dec
jge
mov
xchg
mov
test
gs
cli
push
pop
jne
add
or
movsl
repnz
inc
ficoml
aad
push
es
push
imul
leave
jnp
adc
outsl
mov
jl
mov
outsl
test
adc
rol
sbb
movsb
in
fadds
leave
pop
mov
adc
jle
mov
mov
or
fxch
xor
out
or
outsl
in
sbb
pop
pop
push
pop
stc
pop
or
out
repnz
mov
lahf
fsubl
popa
mov
lahf
sub
popf
xchg
sbb
mov
jne
mov
jb
mov
push
cs
xor
js
jb
push
mov
xchg
mov
push
cld
mov
xchg
mov
pop
incb
sbb
lods
cli
add
into
cld
inc
inc
pop
mov
push
adc
jb
jg
mov
and
push
cmpsl
push
into
insb
adc
test
dec
or
xchg
jecxz
jno
pop
icebp
les
out
adc
orl
nop
sbb
cmc
dec
push
cmp
roll
xor
out
sub
or
pop
jl
rcll
dec
jno
and
or
fbstp
ss
cmp
or
sti
icebp
jbe
add
dec
and
mov
pop
ja
cmp
mov
movsl
adc
dec
dec
mov
or
xor
dec
push
movsl
aaa
inc
ss
cltd
fdivl
lahf
leave
push
stos
aas
cltd
push
inc
mov
xchg
popf
test
mov
cmpsl
sub
gs
cmpsb
arpl
dec
pusha
cmc
add
add
idiv
lea
mov
shll
xchg
sub
jne
mov
dec
add
sbb
aad
lcall
loope
cmpsb
xchg
xchg
jl
std
arpl
mov
cmpsl
fs
inc
sbb
dec
mov
xchg
adc
aam
mov
enter
outsl
sub
lock
add
and
jmp
scas
incb
or
cltd
xor
aaa
pop
jo
mov
das
mov
mov
dec
sbb
cmp
stc
sub
int
dec
xchg
mov
pushf
popf
arpl
outsl
aam
xor
je
sbb
jo
mov
orl
std
mov
out
add
ret
movsb
sbb
lcall
testl
call
movsl
testl
loop
and
in
fbstp
sti
notb
testl
add
add
ficomps
inc
lea
adc
adc
dec
and
sub
or
lock
mov
mov
dec
ss
test
mov
in
movsb
cltd
jge
ret
mov
lahf
sub
sahf
xchg
xchg
inc
adcl
and
out
mov
mov
mov
lea
pop
and
xchg
mov
sbb
repnz
fcmovu
mov
prefetch
imul
cmc
test
pop
push
sarl
sub
mov
add
scas
dec
jmp
inc
das
std
add
std
scas
call
addl
je
lahf
shrl
jo,pt
popf
imul
xor
aas
dec
call
adc
adc
cmpsb
dec
cltd
scas
sti
je
xchg
jno
and
test
push
ds
push
int
xor
pop
lods
cmp
fstpt
push
jne
and
loopne
shll
insb
xchg
js
negl
dec
xchg
adc
test
insl
xchg
mov
lods
fwait
notl
mov
jno
push
mov
xor
push
arpl
fcoms
inc
stos
cmp
mov
xlat
pop
jge
dec
insl
in
jg
dec
sub
popf
out
push
add
mov
cmp
popf
jge
lahf
push
push
popa
lcall
push
sbb
mov
mov
out
call
xchg
lahf
insb
insl
call
popf
clc
add
stc
jmp
or
push
push
call
jmp
or
stos
aas
fmuls
mov
inc
sbb
xor
out
jecxz
and
outsl
mov
mov
jmp
shrl
daa
xlat
push
add
cmp
jp
in
out
xor
dec
aas
std
sub
addr16
xor
push
mov
mov
cmpsl
daa
cmp
fimuls
inc
mov
sub
pop
sbb
cs
cmpsb
test
lret
push
and
in
arpl
dec
mov
int
stos
int
les
adc
mov
lahf
mov
decl
cmpl
sbb
sub
adc
inc
push
dec
fld
push
cld
xor
clc
sub
fstpl
cmp
pop
sbb
mov
dec
je
inc
xlat
cwtl
or
fstl
stos
cmp
mov
mov
iret
adc
dec
mov
imul
adc
ret
push
outsl
jae,pt
std
gs
rcl
add
dec
sub
pop
negl
pop
pop
cwtl
mov
or
js
push
mov
fmuls
in
add
sahf
push
mov
sbbl
in
jo
and
push
cli
iret
mov
lock
mov
push
sub
int3
mov
mov
insl
xchg
fs
les
aaa
sbb
cmpsl
and
rorb
cld
clc
movsb
pop
shrb
ret
lods
cmpsl
ljmp
mov
mov
sub
test
add
dec
mov
xchg
dec
mov
sarl
and
and
xor
and
fsubl
rcrl
hlt
adc
lret
iret
test
add
xchg
cmp
in
sub
sub
hlt
cli
push
mov
add
outsl
mov
rclb
call
and
stc
rorl
mov
movsl
pop
pop
sbb
jl
mov
fwait
jle
loopne
sbb
mov
adc
adc
cmp
push
mov
jl
fcoms
cmpsb
les
and
inc
adc
mov
inc
sbb
jb
cmp
lcall
js
jo
pop
push
cmpsb
test
sbb
movsl
ds
lret
ret
xor
mov
xor
push
sar
jg
mov
imul
inc
xor
sub
inc
leave
or
xor
push
enter
and
ds
cmp
pop
insl
adc
ljmp
aaa
movsb
cmp
mov
enter
shlb
dec
ds
mov
xor
insb
xchg
pop
js
xor
ds
pop
dec
fdivs
mov
jmp
and
ljmp
pop
sub
adcl
fs
sbb
ljmp
adc
jmp
fbstp
sti
add
push
pop
fiaddl
out
das
cltd
xchg
sbb
add
inc
iret
ret
je
or
mov
pop
pop
in
popf
xchg
mov
xchg
or
outsl
loop
jno
out
cld
jge
rorl
imul
sbbb
movsl
mov
jne
dec
or
daa
sub
push
hlt
psadbw
sub
loopne
lods
fisubs
std
adc
gs
jecxz
cmc
mov
stos
adc
dec
stc
loopne
add
nop
repz
mov
pop
sub
call
jb
test
sti
sub
fs
mov
sti
cmp
scas
xchg
dec
sbb
lahf
scas
xchg
data16
fwait
mov
sub
gs
imul
jg
mov
stc
ds
cmp
roll
jmp
adc
js
xchg
lds
xorl
imul
add
jle
dec
sbb
mov
xor
dec
dec
push
adcb
fs
cmpb
adc
xchg
lret
enter
mov
inc
cmc
pusha
adc
lock
lds
xchg
aas
loope
push
incl
sar
sbb
mov
pop
xchg
insl
mov
dec
xor
ss
iret
add
daa
loop
pop
mov
add
cli
fs
cmp
fndisi(8087
push
push
out
or
push
adc
nop
adc
js
sub
data16
push
fucomp
mov
xchg
addl
ljmp
push
loopne
xchg
and
nop
icebp
and
xchg
sbb
insb
hlt
inc
sbb
cli
in
arpl
xchg
sub
out
dec
mulb
or
in
xor
stos
pop
cmp
push
sbb
dec
mov
stos
es
das
das
xchg
xor
cmovne
adc
shr
fcomps
mov
in
xor
iret
int3
mov
or
pop
mov
scas
icebp
sub
adc
inc
sti
xchg
pop
add
stos
push
mov
cmpsl
xor
xor
cmpsb
cmp
rol
or
lods
cmp
cmp
clc
lar
shrl
pop
enter
cmp
jo
pop
mov
decb
mov
aam
inc
call
and
call
int
test
int
adc
inc
sbb
fyl2xp1
pop
mov
inc
cmp
xchg
out
leave
fnstenv
int
ret
lock
adc
movsl
cs
xor
clc
idivb
mov
testl
xor
mov
jle
jbe
pop
jmp
and
cwtl
xchg
inc
addr16
in
mov
or
adc
xor
xor
shlb
fwait
cmpsb
sti
jne
xchg
or
ret
fs
dec
mov
into
test
jecxz
mov
lcall
push
xchg
je
pop
xlat
pop
pop
mov
or
sub
pop
mov
jo
xchg
xchg
sub
xor
and
mov
jb
pop
cmc
dec
or
pop
mov
jno
adc
dec
test
pusha
out
lret
pop
fnstsw
rcll
jne
sbb
and
cmp
sub
push
mov
pusha
sub
lods
jb
mov
call
xor
test
mov
inc
push
rclb
push
dec
or
cmp
jl
add
sbb
outsl
rol
lds
cmpsl
test
cmc
in
sbb
xor
push
ror
test
mov
pop
mov
es
pop
pop
stc
test
daa
xchg
lret
fldl
adc
push
fnstsw
cmpsb
lahf
lea
push
jle
roll
int3
jg
stos
inc
fisttpl
jge
and
xchg
scas
das
xchg
movsw
aaa
movb
fistl
notl
and
ret
or
pop
std
jl
aam
or
sbb
test
mov
xchg
cmpsb
mov
xchg
hlt
popf
inc
stos
adc
jp
mov
stos
mov
add
jmp
movswl
cmc
rcrb
mov
inc
stc
mov
lds
and
in
mov
push
jmp
push
mov
mov
or
pop
sti
mov
dec
or
dec
mov
je
stos
shll
xor
gs
pop
andl
lods
loopne
ss
push
dec
pushl
aam
aad
andl
adc
outsl
pop
iret
lock
jmp
dec
and
jno
xchg
pusha
roll
mov
inc
stos
lds
shl
mov
jbe
rolb
out
xchg
cmp
fcmovu
sbb
lea
mov
mov
xchg
imul
dec
scas
inc
rclb
jecxz
push
scas
subl
into
mov
cmp
mov
adc
cli
andl
mov
ret
stos
push
jmp
sbb
jb
aam
xchg
xchg
adc
jo
mov
int3
fnstcw
cmpl
addb
out
inc
je
add
xor
test
ja
pop
imul
fisttps
mov
dec
movsl
add
dec
cld
inc
add
or
clc
call
loopne,pn
pop
out
jl
sbb
jns
adc
scas
cwtl
cli
dec
push
je
cli
fcoms
and
fs
or
push
arpl
sbb
loopne
xchg
adcb
mov
cmp
or
out
leave
add
cld
fildll
inc
push
and
lahf
mov
xor
jmp
popl
insb
pushf
jmp
dec
fadds
mov
bts
iret
repnz
xchg
imul
int3
pop
dec
mov
addr16
push
iret
push
adc
sbb
dec
out
push
pop
jle
mul
and
lcall
cs
push
stos
clc
cli
pmovmskb
sti
jmp
or
cmp
imul
faddl
ds
mov
enter
fidivl
cwtl
rorl
or
call
nop
jbe
addr16
clc
inc
lahf
frstor
xchg
in
push
pop
mov
xchg
test
cs
ud2
cmc
je
test
and
hlt
adc
stc
jmp
ret
pop
cld
in
add
icebp
addl
lret
jmp
loop
fs
test
pop
sahf
jno
rcrb
mov
mov
mov
cld
pop
push
ja
dec
movsl
sahf
les
push
into
pop
cs
mov
cmp
pop
and
loopne
lock
cmpb
and
lods
mov
mov
in
or
add
jecxz
ret
push
pop
fidivrl
add
jno
sti
test
aaa
cmp
xchg
xor
testl
popa
push
cld
pop
add
ja
inc
and
mov
mov
inc
test
cwtl
inc
xlat
sbb
mov
ss
jle
add
movsb
or
nop
or
push
jmp
sub
insb
cmp
add
int3
test
loopne
clc
in
vphsubbw
mov
pop
pop
test
xchg
pop
pop
mov
jb
inc
shrl
iret
movsb
aam
dec
jmp
adc
call
push
sub
cmpsl
aam
push
bound
or
jno
in
and
inc
fcomi
push
mov
rep
mov
mov
loopne
push
daa
out
mov
mov
jp
fs
ss
pop
js
shrb
sub
insl
pusha
sar
rorl
pop
imul
xchg
mov
les
es
adc
sbb
sarl
cwtl
sub
enter
mov
pop
mov
loopne
sbb
stos
addb
pop
dec
fnsave
xchg
and
xchg
push
jnp
fstpl
push
and
jle
adcb
out
pop
mov
push
loop
data16
mov
test
imul
hlt
mov
or
cmc
adc
es
push
xchg
lcall
push
adc
xor
ret
in
std
aaa
lret
inc
mov
push
xchg
mov
cmp
mov
aaa
lods
mov
dec
and
jbe
es
ljmp
clc
mov
sub
sbb
inc
sbb
mov
or
lahf
push
jg
mov
out
pusha
popa
incb
test
pusha
in
cli
js
enter
icebp
test
mov
mov
jno
jg
and
icebp
and
dec
iret
xlat
sbb
sti
lods
xor
dec
and
popa
test
push
out
das
xlat
mov
inc
into
cs
cwtl
clc
shrb
leave
cmpsl
mov
adc
loope
lock
arpl
pop
lock
lock
pusha
lret
and
shrl
lea
dec
mov
add
sub
std
and
push
cmpsl
outsl
mov
dec
jnp
popa
mov
stos
int
push
fcomps
mov
repz
fwait
cltd
outsb
pop
add
mov
pop
push
out
xchg
inc
xchg
inc
sti
xor
enter
pop
fistl
push
and
add
fcmovu
xchg
dec
test
fistpll
dec
ds
out
and
outsb
test
ja
call
jb
mov
pop
in
movsb
xlat
sbb
insb
sub
es
jne
into
adc
sub
and
loope
mov
add
test
out
cld
cmc
repz
lods
and
jmp
loope
imul
ficompl
push
jecxz
xchg
mov
xchg
jno
or
push
adc
ss
pop
inc
clc
and
push
popa
cld
push
in
push
mov
sbb
push
addr16
xchg
call
pop
pop
cmpsl
pop
inc
fs
cmp
fisubl
push
in
nop
mov
ret
ds
ffreep
nop
call
xchg
xchg
in
pop
cmpsb
cltd
movsl
fnstenv
sub
jp
pushf
mov
mov
bound
je
dec
out
leave
scas
add
out
mov
push
inc
fdivrp
cwtl
lock
lds
sbb
fmul
ljmp
sub
jnp
in
add
xlat
sbb
mov
stos
stc
insb
out
sti
adc
mov
dec
pop
mov
mov
and
mov
mov
int3
imul
push
inc
les
push
flds
pusha
js
call
cmp
or
fwait
xchg
sbb
jb
xor
xor
lea
call
push
cmp
fwait
mov
mov
sbb
push
frstor
jp
jo
loopne
repnz
js
outsb
mov
xor
pop
jb,pt
pusha
leave
dec
adc
dec
data16
out
mov
stos
sbb
ret
dec
sti
lea
es
lds
lcall
leave
push
push
push
nop
or
push
dec
out
cli
mov
outsl
or
rorl
loope
aad
in
push
or
sbb
pop
sub
leave
mov
mov
xchg
mov
imul
pop
stos
out
pusha
stos
jp,pn
testl
jo
and
je
push
in
out
inc
sbb
ljmp
cmc
push
mov
testb
mov
lret
and
inc
dec
mov
cmp
in
fwait
xchg
mov
movsb
fsubl
xor
jns
test
pop
lea
dec
mov
mov
and
pop
mov
fistl
out
adc
or
or
in
scas
inc
mov
lcall
push
sbb
jbe
mov
rcl
movsl
jno
pop
arpl
push
addr16
push
clc
pop
mov
dec
mov
cmp
es
push
lcall
movsb
mov
ljmp
mov
ss
outsb
pop
xchg
pop
and
shr
dec
test
fcompl
lea
xor
cmp
mov
loopne
js
jae
outsl
dec
cmp
cli
xor
out
movsb
enter
cmpsl
das
jmp
aad
aam
pushf
andl
mov
movl
aam
dec
std
mov
shl
icebp
mov
inc
je
cmp
lret
lretw
lea
sub
test
repz
cmc
push
mov
jmp
lret
hlt
cli
mov
and
adc
adc
in
or
in
inc
sbb
or
push
sbb
or
js
or
cs
insb
lret
sti
sbb
xchg
add
mov
sbbl
mov
lods
aam
xlat
imul
pushf
cmpsl
fistpl
iret
add
lods
insb
out
fistpll
nop
cli
push
jo
xchg
cs
pop
xchg
fcoml
cwtl
jge
and
outsb
aam
popf
gs
rcrb
xorb
shll
fcompl
in
xor
aad
xchg
inc
repz
inc
shrb
dec
mov
hlt
lcall
mov
out
loope
mov
lods
aas
dec
in
ret
push
loopne
pop
sahf
aam
xor
jmp
jae
insl
cmp
ror
lahf
imul
cmp
stc
add
shll
jl
sbb
lods
popa
mov
int3
adc
xor
xor
aam
hlt
repz
mov
cmpsl
push
jmp
and
pop
mov
bound
imul
push
sub
cli
sarb
sbb
stos
lret
out
xchg
xor
push
or
lods
or
dec
stos
xchg
arpl
xchg
and
icebp
mov
mov
pop
push
cmp
sahf
test
cmp
dec
cmc
fmul
xchg
aas
mov
sbb
sbb
outsb
xchg
cmc
xchg
int
ret
out
cmp
mov
gs
mov
push
popf
mov
sbb
jae
dec
pop
mov
dec
aam
sub
mov
xor
mov
adc
or
jmp
push
push
bound
mov
push
arpl
mov
cmc
mov
or
enter
lods
jp
test
and
push
leave
sub
leave
bound
popa
pop
inc
scas
lahf
cmc
add
cmp
test
mov
fsub
aam
pop
mov
iret
dec
push
sub
or
and
test
cmp
xor
test
mov
xchg
inc
fmuls
mov
sti
jle
out
test
xchg
clc
cmp
xchg
gs
and
sarl
je
adc
negl
mov
pop
or
movl
stos
pop
xlat
or
push
mulb
inc
clc
xor
xor
fisttpl
push
mov
ret
sub
cmp
std
iret
and
out
adc
mov
movsl
movlps
push
cmpb
fwait
in
mov
cmc
nop
add
aad
ret
jmp
aam
add
push
dec
aam
dec
cmpsl
xor
mov
ficomps
push
or
pop
jg
push
mov
sti
and
lcall
cmp
jne
dec
or
mov
insb
jno
xchg
push
test
jae
lods
add
icebp
pusha
rorl
es
lds
pop
pop
sub
pop
scas
in
les
cmpsb
pop
clc
rcll
or
xchg
push
add
loopne
repnz
pop
fucom
sub
lock
inc
imul
hlt
mov
add
and
lahf
dec
je
mov
out
pop
pop
adc
shr
mov
mov
pop
daa
mov
or
sbb
jge
imul
or
add
cli
lret
stos
sbb
dec
pusha
push
dec
cmp
shlb
and
inc
lret
mov
sahf
fstpl
subb
stos
mov
lock
xor
insb
xchg
adc
xchg
inc
outsl
jbe
xorl
dec
mov
fistps
enter
shlb
not
inc
insl
adc
sub
loopne
repz
mov
add
xor
jge
adc
roll
leave
lds
ds
and
sub
call
daa
mov
xchg
dec
add
es
repz
dec
sub
mov
ljmp
cld
data16
mov
adc
fimull
lods
ljmp
cmc
xchg
stos
imul
pop
ret
push
sbb
sub
cs
cmpsb
lods
cmp
xchg
push
dec
leave
dec
xchg
inc
into
int3
or
and
dec
std
rcrb
stc
dec
jae
xchg
lret
mov
daa
fistl
mov
inc
jns
icebp
mov
pop
cmp
cwtl
push
fdivrp
push
or
mov
bound
jae
testb
xchg
cmp
jmp
mov
add
mov
in
mov
popa
jnp
repnz
std
push
out
xchg
cs
add
push
mov
cmp
xor
push
test
jb
sub
push
add
jbe
push
dec
sub
add
cmpb
mov
mov
cmp
sub
fmuls
bound
out
push
sub
add
xor
lods
jle
mov
jnp
cmp
jne
loop
adc
lods
call
lock
lods
pop
movsb
mov
add
dec
mov
mov
vmread
mov
push
push
add
adc
sbb
cmp
pop
mov
xchg
jns
jg
js
cmpsl
fprem
and
cwtl
pop
hlt
or
mov
cwtl
mov
leave
addb
inc
pop
jp
mov
add
pop
fistpl
cmpsl
aam
movsb
or
adc
mov
popf
pop
jo
nop
call
xlat
cmp
jno
popa
dec
xchg
push
pop
or
or
pop
mov
xor
insb
and
pop
sbb
jno
fsubp
xor
sbb
cld
mov
icebp
bound
les
icebp
fisubl
lret
mov
add
cmp
gs
cmp
rcll
mov
int
ret
insl
inc
lret
repz
lret
gs
out
test
xchg
icebp
test
jo
xchg
adc
inc
out
lret
sub
adc
cli
fidivrs
and
repnz
fstl
inc
subb
daa
mov
notb
icebp
fdivrl
mov
mov
push
xor
jecxz
mov
mov
mov
adc
insl
imul
nop
inc
jl
sbb
es
add
lods
outsl
ret
or
sbb
push
fnstenv
bound
sar
mov
in
jg
xor
push
std
pop
and
jnp
sub
insb
jo
mov
sbb
sub
fdivrs
iret
aaa
inc
mov
popf
je
roll
sahf
xor
enter
sbb
jno
push
dec
push
imul
xor
popa
xchg
dec
ds
mov
jmp
or
lds
or
hlt
pop
inc
adc
jl
ror
add
cltd
stc
in
xor
inc
ffree
push
add
dec
inc
popf
mov
bound
push
adc
mov
ret
je
xchg
mov
mov
push
push
jo
ret
cwtl
cs
push
and
mov
mov
sub
xor
xchg
xchg
mov
mov
xchg
push
push
jne
pusha
ss
fstpl
ret
movl
int3
push
sbb
testb
clc
xchg
stos
inc
dec
pop
shl
sub
cwtl
mov
aad
adc
xorb
mov
inc
orb
into
or
movsl
mov
mov
cli
jae
mov
roll
cmp
mov
sbb
jle
xchg
adc
mov
mov
xlat
fs
push
adc
dec
iret
or
out
insb
arpl
or
dec
jnp
shrl
js
insb
call
sub
sbb
pop
stos
jo
orl
stos
popf
aam
jbe
xchg
xor
popf
mov
mov
mov
out
sub
dec
add
pusha
or
ja
loope
push
sub
fcomi
mov
jo
xchg
fwait
in
jae
push
pushf
jo
sub
fs
xchg
dec
sbb
ret
nop
jp
cwtl
mov
and
lret
add
jo
out
rol
jmp
xor
xchg
fdiv
mov
xchg
xchg
jo
and
sti
aas
data16
dec
push
sub
mov
jbe
ss
shlb
sbb
std
dec
stc
jb
jns
insl
push
push
xor
cmp
mov
dec
inc
lea
out
sahf
jnp
xchg
inc
mov
adc
inc
cmp
inc
jg
mov
lret
in
sub
jns
ficompl
out
adc
sahf
cmp
fdivl
std
in
mov
xor
int
pop
lods
lret
mov
test
outsb
in
jae
xchg
stos
sbb
out
jae
pop
rcr
sbb
dec
pop
ret
dec
js
aaa
sub
outsl
out
ret
enter
mov
mov
or
ret
mov
je
mov
fsubl
jno
loopne
pop
mov
lret
or
push
cmpsl
cld
add
adc
dec
sahf
adc
shl
adc
xchg
push
ds
fwait
push
pusha
insl
mov
cltd
and
adc
dec
sub
cld
scas
jnp
adc
jno
ss
sti
dec
sahf
aam
add
lods
je
sub
pop
adc
pop
aam
jo
int
sahf
je
ret
adc
in
out
adc
popf
mov
jne
jmp
cld
or
aaa
or
cmc
gs
addl
push
jnp
cmc
movsb
add
dec
cmovs
jnp
bnd
fdivl
dec
push
aaa
mov
jmp
and
and
sub
fdivs
mov
push
pop
stos
int3
xor
ljmpw
scas
xchg
jb
xchg
mov
out
dec
das
ja
inc
adc
mov
fwait
push
jns
inc
loop
leave
or
add
push
addl
andb
push
add
movsl
jnp
xor
push
sub
ret
adc
popa
or
and
push
cmc
testb
and
mov
jns
push
notb
xchg
inc
into
jl
mov
and
in
xchg
jmp
inc
scas
sbb
stos
jecxz
adc
sub
popa
cs
div
jmp
jp
cli
cmp
push
or
xor
sub
cmp
fisubl
xor
loope
add
pop
push
and
jae
fisttps
lock
xchg
lea
xchg
xchg
rorl
dec
pop
push
adc
out
mov
sbb
sub
xchg
pop
jge
add
and
out
call
jno
ret
in
imul
add
sbb
cmpsb
gs
pop
repnz
int3
loope
out
pop
and
sahf
mov
jp
dec
cmpsl
pop
add
in
mov
jo
rolb
loop
gs
dec
stos
xchg
mov
in
xchg
xlat
int3
cs
push
push
xchg
filds
or
js
sbb
ja
xchg
std
jno
jnp
push
dec
lods
cmpsb
lods
mov
push
out
dec
lretw
cmp
lcall
mov
dec
pop
push
xchg
pop
inc
and
mov
fsubp
pop
adc
xorb
jnp
les
imul
push
fstpl
repz
std
daa
or
push
not
out
push
xor
int
and
test
and
insl
ret
cmp
loop
addr16
fisubrs
and
popf
dec
ja
cs
add
sub
sbb
sbb
jge
sti
fnsave
or
jne
jl
imul
jmp
scas
inc
aad
sbb
into
inc
arpl
jge
push
jl
mov
scas
xor
mov
jae
push
xchg
nop
mov
movsb
outsl
cmp
shl
xchg
push
icebp
sub
xlat
in
ja
jns
stc
add
xor
es
fisttpl
add
hlt
stos
push
xorb
push
jns
lds
sbb
loopne
out
movsb
jns
inc
repz
xchg
cmpsb
sub
mov
ret
fcomps
xchg
fcompl
nop
and
ja
ljmp
mov
cs
sub
cmp
mov
icebp
cmp
xor
push
or
cmp
in
cmp
sub
mov
sub
mov
xchg
push
or
xor
inc
jmp
or
pop
adc
les
xchg
aam
and
fcomp
mov
fucomp
aaa
mov
sti
sub
mov
mov
xor
inc
pop
test
bnd
xor
or
mov
adc
dec
and
outsb
mov
lret
daa
push
xchg
cmpsl
loope
mov
mov
cltd
xor
and
and
ret
mov
sub
movsl
mov
rcll
pusha
rcrl
xchg
hlt
divl
or
push
jnp
pop
mov
add
push
orb
sbb
insl
pop
mov
cmp
fisubs
add
aad
sbb
pop
sarb
mov
lcall
push
insb
lcall
cs
push
or
jge
iret
in
cs
push
loope
lahf
dec
or
dec
pop
inc
cs
xchg
dec
pop
mov
mov
xchg
pop
insl
mov
je
sar
lods
movsb
jb
adc
addb
xchg
ljmp
jle
xor
jle
xor
xor
push
adc
in
icebp
outsl
push
shr
push
push
dec
mov
sbb
fwait
cmpsl
add
adcb
arpl
mov
mov
pop
or
rcr
fisttpll
mov
push
fdivrs
push
ret
adc
jnp
loopne
imul
mov
or
scas
add
jne
testl
ss
xor
jnp
bound
nop
cmp
mov
and
or
mov
sbb
sub
jl
push
sar
aad
notl
loopne
rorl
lock
pop
negl
inc
ret
inc
sbb
sbb
movsb
test
xchg
rcrb
sbb
mov
sub
movsl
mov
ret
sub
rclb
xchg
push
mov
pushf
sti
jne
pop
sub
les
and
jge
aaa
add
xor
pop
popa
stc
adc
and
or
fildll
imul
stos
jl
push
into
mov
loope,pn
push
ret
outsl
pop
adc
shll
imulb
lcall
popa
pusha
imul
ret
jge
lods
flds
inc
popf
xchg
ja
sub
cli
fstl
js
pop
lods
push
push
and
sbb
fisttps
mov
dec
pop
addl
ljmp
pop
mov
xor
test
ror
cwtl
scas
aad
push
push
fwait
pop
or
mov
mov
xchg
loop
lods
ljmp
or
xchg
sub
daa
jns
and
fwait
lods
ficoml
adcl
adc
lcall
mov
mov
cmp
push
inc
mov
mov
jne
add
or
and
pop
xlat
cmp
cmp
push
sbb
or
or
push
mov
rorl
repz
clc
loopne
adc
sub
outsl
mov
fistl
add
jae
mov
clc
sub
arpl
fists
pop
xchg
mov
lock
das
js
cmp
inc
fwait
stos
out
jle
jg
and
sti
fistpl
push
or
adc
or
cmpsb
rcrb
std
lahf
bound
add
idivl
out
and
fsts
mov
lock
xchg
adc
negl
mov
xor
cmp
int3
test
clc
mov
xchg
movsb
rorb
mov
pop
jb
push
insl
test
push
out
je
dec
int
lret
pop
jns
ret
loop
cli
shr
cmp
test
adc
cli
mov
xor
jne
jae
int
jnp
sub
inc
dec
lcall
mov
imul
xor
repz
add
pop
mov
dec
push
pop
pop
addb
outsl
pop
sub
sub
neg
sub
cs
mov
sti
mov
ja
sub
add
fbld
and
xchg
imul
jb
sbb
mov
stos
sub
cmp
mov
inc
cwtl
loope
jns
mov
div
lock
in
inc
aas
gs
in
scas
adc
stc
test
add
jl
popa
sahf
pop
stc
or
scas
and
fistps
jle
sbb
insl
pushf
icebp
es
repnz
cvtps2pd
xor
push
or
fwait
or
stc
cwtl
ffree
lods
in
sub
shrl
ret
lcall
adc
shlb
mov
cmc
xor
test
push
dec
cli
outsl
sub
and
xchg
repz
cmp
push
xchg
enter
xor
inc
jns
xchg
adcl
mov
inc
lcall
test
lahf
roll
dec
adc
imul
mov
mov
negl
cmp
push
dec
leave
push
in
push
push
lcall
xchg
jmp
cmp
or
sbb
pop
xor
and
jae
or
ficomps
out
xor
cmp
lock
xor
js
arpl
cmpsl
repnz
push
mov
adc
mov
sub
repnz
aad
lret
mov
jns
fbld
inc
popf
mov
jne
adc
es
les
sbb
cmp
xchg
push
repnz
negl
or
popa
adc
xor
pushf
mov
lret
dec
fcoml
fstps
xor
push
aam
xchg
das
xlat
sub
pop
ret
xchg
mov
xor
cmp
imul
push
jnp
outsl
out
pop
add
mov
push
shrb
outsb
arpl
mov
sbb
jl
scas
out
push
js
imull
movsl
sahf
loope
repnz
add
inc
dec
pop
mov
jnp
clc
jmp
xor
mov
rorl
sbb
mov
sahf
loop
inc
lret
fwait
gs
mov
xchg
adc
and
cmpsl
mov
cmp
jp
dec
jge
rcll
push
rcrl
jae
int
push
push
cmp
out
cmp
push
adc
add
cli
lods
dec
cmpsb
mov
cmp
add
ja
outsb
pop
mov
test
push
aas
mov
and
in
test
jmp
jmp
push
sbb
rcrl
pop
mov
dec
int
inc
lock
sbb
jae
cmp
ficoms
or
mov
aad
outsb
fimuls
lcall
js
imulb
mov
fisttpl
xor
sbb
sbb
roll
test
or
or
imul
cmp
sub
xor
loop
pop
popf
push
cld
mov
hlt
jb
xchg
xchg
or
lods
pop
push
negl
int3
in
es
fnstcw
and
xchg
sub
lahf
sbbb
push
movsl
xchg
cmp
outsb
jle
xchg
enter
pop
ljmp
std
lods
insb
test
pop
adc
cmc
test
adcl
stc
sub
jae
movsb
je
shll
test
out
cli
pop
dec
cmp
scas
dec
inc
pop
lods
mov
rorb
and
cld
pop
mov
mov
sub
aad
lea
scas
fs
jecxz
xchg
sbb
mov
testl
gs
aad
insl
leave
add
adc
pop
mov
adc
pop
cmp
xor
ds
mov
int
sti
xor
pop
dec
push
sbb
movsb
das
fbstp
fldcw
adc
push
lahf
test
jb
jb
ja,pn
stos
or
popa
jb
mov
out
pusha
mov
cli
push
mov
enter
mov
into
lock
cmp
cld
xor
xchg
pop
pop
addr16
add
jmp
lret
in
outsb
pusha
hlt
mov
push
hlt
jb
pop
rcrb
push
xchg
inc
jnp
mov
test
test
imul
cmp
andb
pop
jle
stc
lods
cs
frstor
fwait
push
mov
popf
pop
or
and
jge
xchg
jnp
sbb
js
imul
add
jae
add
out
ds
sbb
stos
jp
inc
pushf
cld
jns
pop
in
shll
test
jmp
jnp
sbb
das
mov
mov
fdiv
in
sbb
jecxz
idiv
or
jb
rcrl
mov
imul
stos
cwtl
test
jg
stos
pop
xlat
cmp
mov
jle
xchg
sub
test
je
loope
or
cmp
aam
aaa
jmp
xchg
pop
or
pop
sub
inc
loope
or
push
and
mov
jg
popa
mov
sub
cmc
cli
push
leave
push
add
pusha
scas
jecxz
pop
pop
dec
fidivrl
pop
push
pop
nop
push
lods
mov
and
sub
pop
fsubrs
or
mov
cmpl
inc
jbe
jnp
stos
mov
jmp
lds
movsl
mov
fimuls
lods
push
xchg
dec
mov
stos
sbb
stos
pop
lods
fs
add
fwait
mov
xor
jp
js
fs
test
sub
add
insb
arpl
add
xor
mov
xchg
sbb
andl
jecxz
or
mov
lds
jg
repnz
notl
or
and
sub
dec
insl
fidivrs
jle
lcall
mov
adc
repz
xchg
ret
mov
data16
fcmovnbe
data16
xchg
mov
ljmp
mov
mov
mov
out
pop
xor
outsb
xchg
movsb
aad
movsl
mov
xor
fidivrl
or
int3
jge
push
fcomip
fwait
sub
sub
test
movsb
leave
and
dec
or
shlb
mov
rorl
cmp
cmp
adc
enter
add
daa
es
jecxz
mov
sub
pop
mov
negb
aam
cld
flds
ljmp
lods
xor
loop
xchg
pop
xor
mov
xchg
dec
arpl
mov
cmpl
adc
lea
gs
ret
dec
xlat
mov
arpl
mov
xor
push
jns
push
push
xchg
jo
add
jmp
dec
add
jbe
fmull
and
aad
inc
or
cltd
insl
mov
dec
xor
jg
mov
dec
pop
pushf
data16
xor
add
test
mov
dec
test
push
add
sbb
fwait
mov
mov
fnstsw
out
ret
mov
scas
push
and
push
mov
mov
ja
imul
mov
lea
leave
sbb
faddl
or
ljmp
fs
movsb
mov
push
sub
push
push
test
sbb
ret
ret
xor
aad
int
daa
mov
dec
push
fwait
outsb
movsb
xor
movsl
sbb
stos
push
xor
ss
or
sbb
stos
sub
jb
lods
enter
cli
sbb
in
or
mov
cmc
cli
fsts
mov
push
jae
stos
sub
iret
adcb
sti
cmpsb
mov
sbb
out
push
cmc
jge
mov
insl
push
leave
shl
stc
dec
xchg
cmp
sbb
mov
adc
xchg
mov
push
data16
test
pushf
inc
fdivrl
push
bound
mov
or
xchg
cmp
lret
add
repnz
iret
mov
movsb
ja
sahf
mov
fbld
mov
popf
ss
enter
jbe
cmp
xor
jae
adc
cmp
fsts
mov
insb
mov
cltd
sbb
std
pop
in
jg
aaa
or
popf
jbe
mov
paddq
sbb
cmp
call
in
push
sbb
in
sub
inc
dec
dec
push
mov
rorb
cmp
bound
push
lock
mov
pop
xor
stc
and
pop
popf
mov
mov
xor
jbe
dec
lea
or
or
pop
sarl
repz
cmp
pop
cmp
pop
sbb
mov
out
loopne
dec
xchg
je
push
jae
cmp
cltd
push
mov
jne
adcb
mov
fucomip
jno
les
hlt
mov
mov
inc
xchg
in
cmpb
inc
dec
sbb
mov
movsl
shll
and
or
push
or
inc
aad
pop
roll
mov
mov
jmp
fstpl
xchg
sub
jmp
and
daa
pop
enter
andb
sbb
xor
stos
orl
in
adc
jnp
sbb
mov
jecxz
mov
test
jmp
int
sub
jle
addr16
and
ret
leave
lret
jbe
daa
sub
bound
sub
inc
pop
inc
rorb
mov
call
push
fmull
jns
movsl
pop
mov
or
lcall
lods
test
dec
jb
mov
mov
mov
inc
lret
jne
sbb
jo
add
xchg
cltd
ret
or
jae
lock
mov
mov
shll
mov
imul
sbb
xchg
lcall
jl
jnp
adc
orl
je
sbb
and
stos
out
adc
push
insl
jmp
andl
xor
in
pushf
loope
jno
push
lods
mov
ret
jp
or
push
mov
test
push
js
cmpsb
add
movsb
lret
inc
fistpl
int3
add
pop
loop
xor
inc
inc
imul
or
jnp
test
or
imul
mov
mov
mov
jno
mov
sti
add
test
push
and
push
loope
dec
inc
divl
xor
pushf
jns
cwtl
sbb
pop
aam
arpl
loopne
jne
pop
pop
mov
add
mov
lahf
mov
test
ljmp
jp
shrl
or
mov
inc
push
inc
mov
xchg
mov
sub
in
mov
es
and
dec
fsubl
out
fwait
push
shl
cwtl
lret
adc
and
loopne
cmp
test
je
xchg
leave
mov
pop
jg
mov
push
rsm
bound
mov
cltd
ss
mov
cmp
pop
xchg
jmp
arpl
insl
mov
mov
xchg
mov
xor
jmp
mov
rorl
sbb
fadd
scas
sub
fdivl
or
pop
mov
ret
int3
jle
xor
lods
rorb
scas
shr
push
leave
dec
mov
out
dec
fimuls
repnz
in
out
sbb
mov
cmpsb
nop
push
inc
sbb
push
lcall
xor
or
mov
out
ficompl
cld
or
cmp
push
cwtl
aas
xchg
in
push
stos
dec
daa
or
sbb
pop
push
sbb
or
mov
xor
mov
sbb
icebp
cwtl
cmc
leave
lods
push
inc
jge
jae
jecxz
pushf
or
das
add
dec
popa
adc
insl
cmp
cli
fcmovb
inc
aaa
inc
and
push
pusha
test
ret
dec
mov
sbb
das
andl
pop
jmp
mov
add
pusha
test
sub
aad
pop
mov
adc
in
dec
or
jo
movl
idivl
addr16
sti
push
testl
ljmp
push
stos
inc
hlt
test
xchg
movsb
xlat
ficoml
sbbw
lret
int3
sbbb
lret
mov
and
jb
test
inc
xchg
rcrl
cmc
xchg
pop
push
lcall
popf
repnz
fs
jne
inc
adc
dec
mov
fidivrs
sbb
jns
dec
add
roll
ds
pop
dec
imul
sahf
lods
and
in
clc
pop
cmpsb
pop
int3
cmp
stc
sbb
dec
cmpsb
sbb
dec
lcall
mov
shl
ja
inc
fnstenv
mov
add
shll
or
subb
into
inc
leave
mov
cmp
lret
dec
inc
mov
mov
cwtl
jns
in
stc
and
mov
push
movsl
xor
pop
push
xor
cld
dec
rdtsc
shlb
sub
sub
adc
or
fwait
add
movsb
les
and
decb
add
lahf
push
add
xchg
mov
addr16
leave
or
mov
mov
xor
test
imul
push
xor
popa
arpl
popf
dec
cld
insl
clc
hlt
add
cmp
repz
subl
mov
or
int
loopne
sub
or
lcall
sub
icebp
scas
das
add
sar
std
in
sub
shlb
add
loop
jno
mov
std
inc
and
sub
xor
sub
cs
mov
pop
xor
test
inc
add
mov
add
pop
and
out
add
sub
popa
pop
arpl
add
xor
xchg
or
aas
iret
push
divb
loope
dec
or
jno
add
pop
das
sarl
fistpl
jno
test
adc
inc
jmp
cmp
pop
bound
stc
and
in
leave
fmulp
and
inc
int3
fisttpl
cltd
dec
sbb
cmp
push
xlat
ret
imul
pop
in
iret
jge
adc
inc
stos
pop
xlat
mov
push
push
mov
sub
cli
and
sub
mov
in
clc
gs
cmp
xchg
jo
loopne
push
mov
fwait
mov
or
scas
testb
or
inc
lret
fildll
inc
int
inc
or
push
mov
inc
cli
jne
outsb
mov
scas
test
mov
ljmp
in
fistpl
dec
cmpsl
pop
lods
js
stos
and
pop
push
xbegin
orl
mov
rclb
mov
mov
and
xor
inc
ret
mov
je
dec
cmp
fnsave
notl
and
xchg
push
pop
jmp
jo
add
push
pop
rolb
dec
leave
sub
mov
push
std
mov
xchg
push
adc
mov
and
or
xlat
fidivrs
jge
add
inc
xchg
loope
xor
fsubs
stos
int
xor
xor
pop
in
stos
fisttpll
and
aas
add
dec
mov
mov
cmp
push
stos
fidivl
pusha
decl
dec
inc
sub
mov
or
fnstenv
push
outsb
jge
inc
xor
les
sub
ljmp
jae
sub
test
mov
sub
add
in
xor
or
mov
adc
add
frstor
sub
in
xor
dec
xchg
xor
mov
push
xchg
and
jle
not
xor
xchg
add
iret
and
nop
mov
daa
xor
jg
inc
sbb
iret
rcrl
adc
enter
subb
mov
pop
inc
cltd
xchg
pop
shlb
les
in
es
push
jg
outsb
and
pusha
mov
inc
xchg
and
jnp
pop
mov
pop
ss
mov
mov
inc
sbb
lods
or
inc
add
dec
jno
fimull
adc
jbe
movsb
mov
push
rcll
xchg
and
bound
sub
loope
stos
xchg
out
dec
in
cmc
xchg
negb
stos
cmc
repnz
jg
cmp
jle
sarl
dec
outsl
int3
and
pop
in
xor
xor
xchg
adc
sub
imul
sub
and
sahf
clc
or
addb
push
imul
daa
movsl
in
inc
imul
mov
test
xor
mov
out
push
sub
call
mov
cmp
sbb
outsl
test
dec
pop
and
and
push
cs
les
sarl
sbb
sub
pop
out
cmp
fidivrl
mov
mov
mov
fidivrl
call
xor
pop
test
sbb
pusha
cmpsb
sub
or
scas
loope
mov
lret
cmp
mov
jno
in
mov
xor
leave
testl
pop
lahf
fnstenv
pop
cs
sbb
xchg
push
mov
dec
ss
inc
xor
dec
adcb
jo
sub
inc
push
jo
iret
lock
lds
xchg
xchg
dec
subl
outsb
ret
enter
and
jecxz
sbb
stc
sub
xlat
dec
add
jecxz
xchg
ds
out
sub
out
mov
scas
sbb
ds
insl
cli
fstl
rcl
out
sbb
mov
mov
test
mov
mov
lock
xchg
and
jae
out
in
add
dec
pop
in
jnp
mov
and
pop
mov
movl
hlt
insb
int3
lds
int3
aas
lock
xchg
fcmovnu
int3
movsl
aam
inc
bnd
sub
incb
scas
leave
mov
sub
push
daa
push
aad
cmp
and
add
das
es
jne
fidivrs
repnz
add
addr16
out
and
das
and
sahf
rep
gs
pop
push
and
sarb
daa
mov
sub
push
movsb
jns
adc
xchg
mov
cmpsl
arpl
sbb
ja
jns
fldt
loop
sarb
inc
inc
xor
lahf
jo
push
cmp
enter
cmc
fwait
push
mov
scas
pop
js
or
incb
fprem1
add
add
loope
fsub
cmp
mov
push
sub
int3
mov
inc
or
imul
and
mov
and
cmp
dec
jae
ljmp
xchg
mov
lds
jb
mov
jb
dec
movsl
enter
dec
push
pusha
lahf
leave
mov
fidivrs
mov
xlat
push
frstor
mov
mov
int3
sbbl
xor
jmp
loope
inc
pop
rclb
push
nop
xor
idivl
ret
cmc
xor
sbbl
in
das
jecxz
nop
imul
nop
in
loope
inc
cmp
inc
mov
mov
repz
xabort
insb
xchg
test
sub
jbe
mov
loopne
addr16
mov
cmp
in
inc
arpl
push
and
mov
sub
cmp
into
fs
mov
setge
sbb
mov
push
repz
cmp
imul
sub
into
fcompl
daa
push
and
dec
movsl
sub
and
cmc
aad
stos
insb
push
nop
loopne
fists
icebp
inc
inc
jge
sbb
inc
shlb
xchg
mov
add
push
or
cld
rcr
addr16
add
les
jno
aam
xchg
push
inc
push
nop
or
sti
test
push
mov
sarb
adc
mov
mov
je,pn
and
pop
lods
je
subb
aam
push
fsubrp
rolb
pushf
outsb
jae
pop
inc
lret
leave
dec
inc
inc
stos
push
leave
mov
xchg
xor
xchg
and
lahf
jo
adc
shlb
loope
aaa
sub
addr16
nop
jge
ljmp
jge
cmpsb
cmc
addr16
xchg
sbb
pop
sbb
adc
test
xor
das
jns
out
cmp
lcall
sub
pop
lahf
pop
popf
addb
fs
loop
xorl
xchg
fdivl
adc
lods
push
adc
iret
mov
xor
mov
adc
pop
and
mov
mov
movsb
mov
push
bound
inc
lahf
jl
clc
jo
mov
jns
cmp
aas
jg
in
loope
addr16
in
fmull
rcrb
mov
repz
and
lret
sbb
sbb
aad
xchg
or
daa
cwtl
sbb
sub
rol
aad
xchg
clc
aaa
push
leave
jl
stos
into
pop
push
repnz
push
into
iret
mov
pop
pop
xchg
gs
mov
add
push
cmc
ror
xor
bound
aam
std
lret
jno
movsl
and
ds
dec
and
push
and
and
es
inc
xchg
movsl
inc
push
repz
inc
mov
sub
mov
xchg
test
mov
inc
addb
cmp
fstpt
out
cmpsb
lret
pop
test
jnp
sahf
push
fistps
cltd
jge
mov
add
loopne
cmpsb
xchg
push
push
sbb
mov
subb
mov
aas
adc
pop
clc
sub
sbb
aam
jp
add
loope
push
cmpsb
sahf
fsubs
repz
push
mov
or
fisubl
scas
push
enter
jno
outsb
out
jl
pop
cmp
shl
add
push
cmpsl
push
nop
xchg
out
aad
or
rcrb
dec
and
ret
mov
bound
sti
inc
addr16
mov
sub
pop
decl
pop
enter
push
push
stc
lcall
inc
jp
mov
ds
in
lret
push
outsb
call
shll
xor
xchg
insb
mov
clc
push
ss
fistpl
push
push
cmp
gs
outsb
mov
out
je
scas
xor
mov
mov
pop
es
add
ljmp
fiadds
add
sbb
xor
or
jb
fwait
sub
cmp
mov
adc
jno
add
dec
cs
sbbl
jp
xchg
pop
cli
push
shl
fs
outsl
or
lcall
and
aaa
hlt
xchg
mov
stos
dec
sbb
clc
fadds
fs
fnstenv
js
in
inc
push
popa
sahf
mov
sbb
jmp
nop
cmp
mov
xor
movsb
mov
adc
enter
call
push
sbb
div
adc
out
out
mov
inc
lahf
push
fsubrl
in
sbb
mov
psubb
leave
pushf
jl
pop
push
sbb
ret
cwtl
add
sbb
std
aaa
sbb
push
or
lahf
mov
jp
pushf
inc
jg
and
test
or
stos
adc
cmpsb
mov
and
push
jmp
push
ja
je
out
lods
testl
add
shl
sar
jle
cmp
jmp
sbb
mov
lods
in
push
roll
ds
mov
xor
pop
lds
rcl
xchg
jno
and
cmp
xlat
jnp
sbb
mov
repnz
movsb
shl
stc
push
dec
in
mov
outsb
loopne
sbb
scas
push
lods
or
shlb
fcoml
adc
mov
mov
mov
sbbl
out
mov
scas
psubsw
add
out
xor
add
rcrl
inc
sub
push
pop
mov
repnz
pop
mov
ror
aad
jp
les
daa
je
pop
stos
mov
and
rorl
jmp
repz
cmp
fildll
into
jae
insl
mov
mov
sbb
and
add
mov
jmp
stos
xchg
cmp
movsb
out
cmp
mov
mov
mov
adc
movsb
mov
lahf
cli
xchg
insb
mov
xor
insl
outsl
push
test
jnp
aaa
adcl
aad
stos
mov
cmpsb
and
mov
sub
xlat
mov
cmp
sbb
addr16
mov
divb
ja
and
jbe
push
mov
or
pusha
es
stc
fs
inc
jp
inc
sub
dec
dec
je
outsl
push
cld
ss
fstpt
ja
cmpsb
test
push
xchg
popf
mov
stc
fdivrp
mov
push
pop
icebp
jno
adcb
inc
enter
add
jecxz
pushf
jge
xor
add
add
adc
adc
and
jne
aad
adc
les
cmp
xchg
std
cli
sub
lods
dec
xchg
psrld
push
pushw
sub
dec
pop
pop
pop
aad
lock
mov
lret
sbb
push
sub
pusha
add
mov
sub
mov
outsl
out
mov
mov
les
les
push
add
lods
push
ret
frstor
sbb
stos
dec
sahf
dec
mov
out
sbb
dec
and
imulb
pop
and
fisttpll
cwtl
push
mov
dec
repz
lahf
movsl
cwtl
aam
and
jae
popf
dec
jl
pop
mov
sahf
cmp
mov
fiadds
push
adc
cmp
std
cs
and
movsl
popa
cmc
xlat
ljmp
mov
lods
fwait
inc
xor
lcall
sbb
dec
add
jne
push
out
and
cwtl
aaa
sbb
jle
dec
fisubrs
enter
xchg
mov
push
adc
mov
cmc
idivl
jp
arpl
jns
clc
loopne
lea
xorl
cmpl
mov
jmp
adc
fbstp
fwait
icebp
hlt
fisttpll
call
add
mov
es
xchg
imul
das
dec
sbb
and
sti
mov
add
push
std
xlat
scas
out
movsb
cmpsl
dec
xor
push
xor
decb
outsl
test
mov
inc
ljmp
mov
sub
in
push
iret
mov
mov
pushf
imul
inc
fcom
lods
lret
jne
inc
out
icebp
mov
inc
dec
loopne
jle
std
jmp
push
pop
filds
sub
push
mov
into
xor
mov
mov
xchg
xchg
movsl
cmp
pop
adc
iret
popf
enter
jne
loop
jb
fisttps
imul
xor
mov
sbb
cmpsb
hlt
popa
mov
bound
mov
pop
subl
rclb
jge
xor
das
cwtl
inc
repz
xchg
xor
daa
inc
mov
push
data16
loope
xor
lea
inc
pop
out
loopne
loope
add
cmp
sahf
push
adc
adc
cmp
jg
fdivrs
shlb
mov
jbe
jns
inc
cmpl
lahf
or
lods
cmc
and
jno
lods
sub
rcrl
push
es
cmpsb
add
push
cmp
daa
xchg
push
xchg
inc
clc
rclb
mov
push
or
int
addb
add
lods
testl
adc
sbb
pop
fmul
pop
aad
sub
data16
sahf
sbb
ficoms
test
cld
pop
mov
sub
ljmp
xchg
push
and
int
jbe
pop
test
xchg
mov
movsl
ret
push
sub
ja
imul
or
in
into
adc
ss
push
pcmpeqb
adc
jb
mov
test
imul
imul
mov
push
ja
pop
push
cmp
xor
adc
cmp
in
pop
iret
mov
mov
leave
jl
addl
xor
cmp
push
popa
movsl
jbe
mov
mov
cmp
jne
cmp
xor
nop
adc
push
outsl
push
push
int
gs
add
outsb
mov
push
int3
lds
repz
jle
movsl
cmp
mov
arpl
dec
inc
lock
xor
sbb
enter
call
cli
outsl
mov
sbb
pop
lretw
aaa
xor
fdivl
sub
les
pushf
arpl
inc
jno
xchg
and
or
xchg
adc
pop
xor
imul
insl
push
mov
fcompl
inc
push
xchg
rorb
or
xchg
dec
add
ja
push
dec
sub
jg
bound
enter
add
push
rorb
xor
je
daa
dec
push
rorb
sub
mov
adc
scas
mov
xchg
sub
sub
insb
in
cmp
mov
cli
gs
in
push
xlat
rclb
dec
jb
inc
push
sub
inc
push
ror
in
jmp
and
in
or
ss
outsl
adc
in
push
aam
data16
jmp
hlt
idivl
mov
and
call
in
lahf
lds
int3
enter
cld
pushf
mov
mov
jle
push
fsubl
push
out
sub
mov
inc
or
mov
rorl
and
stos
xor
mov
jb,pt
jne
dec
mov
scas
jg
popf
fidivrl
xchg
js
aam
push
mov
xor
in
sub
fnstcw
pop
or
loopne
mov
mov
arpl
fisubrs
fsts
mov
shll
jo
fprem
fistps
push
pop
movl
and
in
sub
push
int
ja
into
xchg
leave
mov
mov
xorl
iret
push
jl
or
dec
ret
push
push
dec
subl
test
rcrb
mov
mov
jmp
repnz
daa
maxps
in
lods
push
add
cli
jns
dec
lret
sti
mov
pop
jbe
rclb
cmp
push
pusha
mov
cmp
add
push
and
cmp
cmp
out
mov
lods
and
mov
cmpsl
sub
leave
mov
mov
dec
aad
mov
sub
sub
movsb
test
jl
imul
pop
mov
stos
test
or
jae
scas
cltd
push
or
aas
mov
stos
fwait
adc
xlat
ret
jnp
mov
mov
pushf
jno
shll
mov
adc
and
out
add
dec
in
adc
mov
jo
test
push
repz
lds
jle
call
nop
jbe
into
push
arpl
enter
lds
add
cmp
add
addb
ds
repz
fstpt
sub
xor
jb
add
add
dec
daa
ficoml
pop
loope
push
lock
in
das
sti
ja
or
imul
jbe
push
mov
insl
mov
jne
sti
cmc
mov
inc
or
mov
aam
sub
aaa
sub
in
xor
or
mov
jmp
mov
sub
dec
int
iret
jnp
mov
ja
mov
jl
inc
xchg
inc
inc
hlt
xor
movsl
jl
push
push
xor
imul
mov
cmp
aam
ret
out
shl
mov
push
ss
clc
lcall
std
shlb
lods
leave
jecxz
loope
rol
pop
lods
cwtl
test
mov
dec
mov
pop
loope
mov
mov
adc
sbb
loop
mov
pop
fiaddl
mov
sbb
rorl
pop
jecxz
push
gs
mov
sbb
mulb
mov
or
sbb
aaa
scas
lret
ret
sub
mov
out
mov
icebp
addr16
fildll
cmp
mov
jbe
out
push
adc
push
pop
ret
les
xchg
sbb
sbbb
in
rcr
mov
mov
aas
call
xor
jle
adc
loopne
sar
inc
sbb
dec
dec
push
xchg
and
arpl
sub
jp
sub
pop
pop
mov
test
jmp
add
dec
push
rol
sub
inc
mov
stos
cmp
das
aam
push
xchg
dec
pop
pop
add
adc
pop
mov
in
dec
adc
push
adc
push
and
jb
jmp
sub
int
pushf
cmp
inc
mov
xorb
leave
mov
inc
repnz
not
iret
mov
ficomps
ss
mov
or
in
aaa
mov
jno
out
data16
adc
mov
iret
out
or
repnz
movsl
aaa
push
xchg
add
xchg
ret
mov
ljmp
in
cld
daa
std
and
push
je
shll
mov
adc
fisubl
icebp
repz
mov
inc
mov
shrl
cmp
or
or
int3
testb
push
cmovne
imul
sarl
or
aad
adc
xor
test
jg
shl
dec
jecxz
in
and
mov
rorb
cmp
clc
outsl
sub
add
add
data16
test
clc
ret
push
fadd
popa
xchg
adc
mov
pinsrw
out
ret
icebp
dec
mov
loope
adc
subl
lds
sub
cmp
repz
xor
xchg
cltd
enter
adc
sub
push
cmp
test
jp
cwtl
jge
addr16
mov
and
outsb
inc
xchg
into
mov
loop
loope
lret
stc
es
dec
mov
jle
stos
pusha
mov
xor
fs
inc
pusha
stos
rcl
test
scas
mov
cmp
jmp
inc
xchg
jae
out
mov
sbb
mov
mov
push
rcrb
enter
dec
sub
inc
lcall
xchg
and
mov
cltd
lret
pop
push
and
mov
jno
and
jns
xchg
aad
mov
lock
pop
mov
cmpsl
js
pop
mov
adc
jecxz
push
aaa
dec
ret
adc
test
xorl
dec
adc
or
sbb
test
jp
mov
xchg
pop
jg
xor
pop
lods
inc
addr16
and
cmpsb
adc
xchg
mov
mov
daa
jmp
call
js
idivl
popl
shll
push
pop
aam
repz
arpl
xor
les
testl
sarb
roll
adc
leave
adc
pop
fisubl
rep
adc
movb
imul
xor
arpl
aad
xchg
iret
jecxz
hlt
out
enter
cmp
cmp
mov
jge
fwait
in
daa
cltd
ficoml
xchg
fistpl
jg
adc
jne
rclb
in
popa
pop
out
sbb
cli
insl
pop
fists
dec
popf
push
clc
mov
imul
das
xor
sub
in
mov
sub
fsubr
jne
lods
mov
inc
add
mov
sbb
dec
add
or
sbb
test
inc
fs
decl
pop
outsb
dec
jae
gs
jl
mov
or
mov
jl
mov
cmpsl
lcall
jmp
cwtl
jnp
or
xchg
xchg
mov
xor
sbb
mov
jmp
cmp
and
push
jnp
push
cltd
xor
mov
lock
mov
std
out
stos
or
push
dec
xor
inc
cmp
mov
sub
fstpt
jno
push
adc
pop
aam
int3
imul
mov
or
and
aam
and
push
ljmp
cmpsl
fists
pop
leave
int
lret
or
aad
sbb
stos
lds
aad
sub
jno
mov
sbbl
push
sub
iret
sbb
mov
imul
dec
and
add
inc
jmp
pusha
cmp
xchg
dec
push
movsl
fistpl
mov
ret
sub
js
sbb
jae
dec
adc
or
pop
and
ss
mov
lea
fstps
adc
push
insl
push
or
and
jbe
mov
pop
sbb
push
stos
in
rolb
pop
inc
pop
adc
pushf
pop
adc
pop
lret
push
aad
pop
push
adc
incb
cmp
es
ljmp
lods
mov
fistpl
popa
mov
data16
and
add
mov
push
sub
add
or
jp
lods
xor
cmp
lds
stc
int3
mov
push
pusha
xor
lahf
or
dec
jnp
and
scas
jne
popa
data16
test
adc
push
ret
jnp
mov
hlt
jl
stos
mov
add
cmpsl
push
adc
adcb
push
xchg
cld
push
pushf
scas
mov
xor
jmp
pop
out
add
pop
les
jg
pop
add
dec
andl
jns
test
stos
xchg
sbb
stos
adc
addr16
add
jle
int
sarl
loopne
iret
mov
sbb
cltd
ljmp
sub
notl
pop
lcall
clc
imulb
inc
shll
dec
fisubs
test
xchg
pop
loopne
movsl
push
mov
rorl
sbb
sub
jmp
int3
push
cmp
fmuls
or
xor
pop
adc
movsl
popa
sub
xchg
neg
cmpsb
cmp
into
jmp
fadds
push
xchg
sbb
push
icebp
xor
out
sub
mov
cmc
fstps
push
in
pop
xchg
test
imulb
negl
std
push
data16
ret
inc
rcrl
dec
jno
dec
and
ficoms
jp
ret
push
mov
out
jae
mov
mov
cs
xchg
cmp
sahf
mov
cmpsb
movsb
loop
in
mov
inc
lret
cmp
pop
mov
mov
push
in
lods
jo
mov
xchg
or
icebp
mov
or
add
push
ljmp
jge
int
mov
loop
mov
cmpsl
or
loop
push
dec
push
fldcw
sub
fwait
and
loop
and
cli
imul
clc
push
int3
mov
lret
cmp
int
in
mov
test
hlt
stc
xrelease
ja
pop
jmp
jmp
ss
mov
imul
shll
enter
or
stc
adc
push
leave
push
and
add
popa
ja
fsts
xlat
cltd
jnp
dec
jno
inc
gs
add
xor
cmp
flds
imul
mov
mov
or
lods
stc
aam
scas
pop
sub
pushf
aad
adc
dec
js
in
push
pop
leave
test
mov
sub
inc
out
mov
nop
dec
adc
call
addl
std
jmp
sbb
out
push
loop
pop
dec
dec
ret
pop
or
push
cmp
dec
iret
inc
ja
sub
jbe
add
dec
inc
lds
mov
pop
lret
out
pop
arpl
iret
xchg
xor
lret
sub
aam
iret
loop
mov
or
scas
xor
cld
mov
dec
pop
mov
ja
fwait
stc
xor
pop
or
dec
sbb
jns
cmpsl
jns
push
pop
enter
lahf
jl
lahf
or
popf
aam
test
and
repz
call
dec
lods
call
rcll
sub
or
push
fldl
nop
loope
jp
ja
xor
test
push
sbb
xor
add
lahf
cmp
push
inc
test
jae
mov
lds
adc
push
call
aaa
jl
or
ja
shrb
outsb
cmp
cmp
aaa
adcl
testl
insb
pusha
sarb
mov
fdivrs
sbb
fidivrl
scas
cwtl
insb
jp
push
cld
xchg
inc
dec
add
push
sbb
inc
push
iret
stc
jmp
mov
stos
xchg
mov
sahf
ret
adc
jae
cli
add
xchg
popf
add
adc
mov
push
add
call
in
inc
mov
lcall
dec
add
xchg
cwtl
imul
sbb
rolb
pop
dec
push
jne
ficomps
pandn
arpl
ret
gs
popa
fimull
xor
repz
inc
push
jmp
and
push
icebp
shll
mov
dec
push
pop
cmpl
jne
rcr
adc
pop
call
in
ss
or
mov
mov
das
mov
add
sarb
mov
and
outsb
dec
ret
jmp
dec
lds
fldcw
insb
iret
aaa
xchg
xor
cld
push
xchg
nop
sar
icebp
in
mov
repz
sbb
mov
stos
jae
aaa
fsubl
sbb
repnz
or
fucom
enter
mov
mov
add
insl
idivb
arpl
rol
fwait
mov
pushf
addl
and
in
std
loop
sbb
xchg
dec
push
dec
lret
lock
push
jecxz
ljmp
xorb
ljmp
int
sbb
sub
add
pop
sub
es
scas
dec
fimull
lahf
dec
or
sbb
sbb
xchg
in
shrl
clc
fcoml
lahf
mov
push
pop
dec
pushf
push
jno
xchg
jle
loope
inc
aaa
jl
jbe
ret
frstor
inc
inc
push
inc
pop
jmp
ret
push
xchg
mov
cmp
xor
xchg
fs
xchg
xchg
xchg
dec
jmp
dec
js
mov
jae
dec
imul
cmp
leave
cmpsb
lods
pushf
xchg
call
adc
sti
icebp
xor
xor
imul
mov
mov
cmp
int3
dec
in
sbb
xor
lods
inc
mov
push
jle
sub
test
out
mov
mov
adc
add
shlb
fildl
lds
pop
outsb
imul
ror
inc
adc
lret
packuswb
cmp
mov
imul
in
cs
bound
daa
jg
dec
call
cltd
dec
loopne
or
sub
add
ds
iret
xor
xor
ret
add
arpl
aad
inc
xor
lods
pop
push
pop
jne
pop
imul
mov
sub
cwtl
pop
ret
mov
or
sbb
fimuls
call
sbb
movsb
fcmovbe
insb
loope
in
ret
push
mov
pop
add
mov
repz
mov
adc
aam
jle
sbb
add
sti
adc
xchg
add
pushl
movsb
stc
pop
jp
sbb
enter
jmp
stos
inc
or
fs
pushf
cltd
pop
pop
xchg
pop
insl
out
loopne
pop
movsb
dec
sub
jp
sahf
and
in
aam
mov
aaa
mov
repnz
mov
dec
mov
inc
int
push
cli
cmc
sahf
or
adc
enter
and
pop
push
xor
pop
ds
lods
fldcw
ret
inc
test
push
xchg
lret
loopne
xchg
std
sub
add
xchg
jmp
jg
inc
mul
sbb
adc
xchg
dec
add
add
aam
imul
mov
jle
shrb
das
fstl
fsubl
leave
mov
out
pop
pop
nop
stos
in
xchg
inc
xor
jne
lock
push
aas
scas
push
fstpt
or
push
push
xor
push
jns
lea
pop
mov
loope
inc
mov
lret
dec
mov
jle
je
imul
mov
xchg
pop
adc
addr16
sbb
js
pop
and
daa
pop
add
xor
out
gs
repnz
adc
push
cmp
inc
xchg
ss
popf
mov
cwtl
scas
outsl
push
cmp
repz
push
sbb
xlat
dec
out
orl
add
xchg
mov
pop
dec
cmp
mov
lahf
xchg
and
pop
int
mov
cli
xor
cmp
pop
cmpsb
dec
popa
adc
cwtl
outsb
es
daa
cmc
sbb
out
xchg
cmpsb
lock
lret
cmp
or
ret
xlat
pushl
or
sahf
stos
ja
adc
cmp
mov
lods
aas
popf
mov
sub
mov
jge
rorb
xchg
je
xchg
paddusb
cld
or
movsl
js
dec
popa
dec
xchg
or
adc
popf
fisubrl
add
sub
rclb
inc
sub
repnz
pop
xchg
loopne
adc
pusha
stc
and
push
sub
fcomip
pop
cmp
mov
lcall
dec
push
fcmovne
and
popf
fs
ja
out
stos
dec
scas
mov
and
cs
jb
push
add
js
rorb
daa
icebp
fiadds
leave
repz
mov
loopne
sub
dec
test
mov
and
negl
aad
movsb
stos
inc
push
sub
rorb
push
and
mov
bound
dec
outsl
inc
fistpll
mov
aas
lret
sahf
pop
inc
add
pop
mov
sub
icebp
dec
mov
call
inc
jne
call
fmull
mov
mov
or
inc
sbb
cld
clc
ss
scas
stc
and
xchg
mov
mov
or
sbb
inc
pusha
adc
mov
mov
mov
fisubrs
mov
negb
xor
sti
add
jecxz
rolb
adc
jecxz
ljmp
inc
pop
push
sbb
ret
and
inc
mov
cmp
sar
mov
mov
in
dec
js
or
mov
daa
or
xchg
push
rorl
mov
pop
fldt
daa
test
push
mov
repnz
insl
mov
out
xor
and
mov
xchg
pusha
cmpsb
cmp
and
jnp
and
std
aas
jne
insb
in
arpl
test
lcall
xchg
push
sub
or
and
test
push
mov
cmp
test
shll
jl
leave
lret
in
sbb
cltd
sbb
inc
mov
scas
icebp
negb
decl
pop
in
cwtl
lock
inc
lea
cltd
ds
or
inc
jns
out
jl
fs
jg
dec
cmp
inc
add
lock
mov
adc
lahf
push
lods
pop
rcll
test
in
insb
aas
dec
iret
cmp
or
inc
add
popf
cwtl
loope
mov
inc
mov
and
mov
xchg
pop
fmull
scas
les
cmp
inc
cmp
sbb
mov
fnstenv
out
inc
into
loop
aam
inc
hlt
loopne
xchg
xlat
sub
mov
jno
stc
pop
xor
sub
cld
into
cvtps2pi
xchg
and
jo
push
aam
mov
iret
out
jl
mov
cs
xlat
mov
mov
out
pop
jb
jnp
scas
in
loope
in
je
mov
push
inc
add
inc
dec
sti
fscale
sub
mov
jb
hlt
dec
cmpxchg8b
jp
mov
lods
sbb
push
pop
pop
repnz
cltd
sbb
jno
fistl
hlt
rclb
rcrl
ss
pop
jl
fwait
push
xchg
inc
mov
push
mov
add
add
push
add
or
push
les
mov
sub
cld
stos
repz
mov
adc
in
fiadds
cld
adc
sbb
scas
mov
int
fnstenv
jmp
sarb
lods
push
add
and
cli
enter
mov
rorl
inc
xchg
pop
sub
daa
call
ret
adc
mov
out
mov
xchg
sbb
push
andl
xchg
add
repz
cmpsl
leave
stc
cmpsl
fucomip
add
push
popf
push
sti
aad
setns
jae
ds
fisubs
shlb
sbb
inc
inc
push
and
or
and
jp
fsubr
xchg
inc
movsb
pop
lret
mov
int3
shll
int
sbbb
repnz
dec
scas
push
dec
push
fcmovu
mov
sub
fsubrl
and
das
stos
adc
imul
add
cmc
mov
cli
cs
or
lahf
sub
mov
inc
mov
cmp
ds
negb
inc
ss
xor
adc
mov
into
mov
sub
in
xchg
add
jl
pop
ljmp
lret
add
ljmp
std
test
mov
cmpsl
add
mov
dec
adc
jmp
movsb
pusha
xchg
mov
stos
cmpsb
mov
lods
jmp
and
mov
lret
ret
jle
arpl
xchg
aas
loop
and
stos
xor
cmp
pop
in
sub
add
out
mov
mov
inc
shrb
aam
mov
idiv
mov
sub
push
imul
adc
lods
cmpsl
jle
pop
scas
push
test
or
or
mov
scas
inc
ljmp
sub
sbb
loope
jg
fldl
movsb
out
fs
push
orb
jp
lock
es
test
fdivs
cmpsb
and
xchg
dec
fistps
daa
xchg
aad
xor
imul
sbb
xor
sbb
add
xor
pop
and
pop
mov
xor
cmc
push
incb
and
add
mov
or
push
repz
inc
push
inc
fnstsw
cmc
jno
bound
pop
jg
mov
ds
enter
inc
lods
repz
mov
inc
pop
and
popf
dec
mov
jnp
adc
cwtl
arpl
in
sub
xchg
add
in
pop
inc
data16
jo
mov
clc
ljmp
fwait
leave
cld
rorb
lds
outsl
outsl
mov
stos
cwtl
shlb
outsb
insl
dec
cli
popa
push
insl
cmpsl
adc
dec
sub
fsubs
jne
or
inc
dec
cs
js
and
push
daa
nop
add
xor
divl
xchg
fcmovbe
pushf
add
cwtl
cltd
clc
sbb
je
negb
lret
sbb
pop
adcb
shrl
or
fmul
jo
xor
jae
aam
push
lock
jo
repz
mov
pushf
popa
into
jmp
pop
repz
dec
ret
pop
dec
cmp
hlt
adc
in
push
mov
xor
cmp
fwait
and
jnp
mov
sub
jg
jbe
std
mov
in
xchg
aam
pop
xchg
mov
inc
fildl
jle
pop
call
cmc
add
movsl
cmpsl
in
fstp
sar
sti
pop
pop
mov
mov
jg
aam
rcll
mov
call
clc
sti
test
ss
gs
loopne
xchg
dec
repz
cmp
js
dec
mov
cmp
pop
in
xor
ficompl
jecxz
pop
in
jge
mov
dec
xchg
pop
je
loop
adc
mov
jmp
cli
inc
cmp
lret
pop
sub
int3
adc
shll
sbb
jmp
cmp
pop
xchg
push
fsubrl
rorl
and
push
lret
fbstp
push
mov
push
addr16
or
sbb
jb
cmp
out
iret
pop
or
cltd
into
push
and
int3
jno
sahf
int
adc
loope
test
sbb
stos
out
mov
dec
mov
into
and
outsl
test
or
push
sbb
and
add
test
xchg
push
xor
inc
jnp
adc
or
fidivrs
jg
mov
sbb
xor
pop
aam
and
fisubl
dec
scas
inc
cmp
add
repnz
rcrl
nop
dec
lock
jne
test
shlb
xchg
test
test
test
js
add
sub
adc
repnz
lret
popf
fsts
cmp
into
inc
int3
push
mov
inc
or
stos
fs
stos
and
xor
ja
out
aaa
jo
popf
test
cmp
cltd
mov
sti
xchg
es
mov
pop
movsb
fbstp
int3
mov
fstp
cld
dec
jecxz
xlat
rorb
xor
call
cmp
mov
test
out
lods
push
frstor
movsl
push
mov
mov
cmp
xchg
and
mov
fwait
push
js
dec
mov
xchg
shlb
aaa
sbb
shll
shlb
call
dec
sub
mov
or
outsb
and
divb
xchg
addr16
das
sbb
jl
cmp
cmp
xchg
fsubrs
inc
sbb
fxch
add
cld
mov
cmp
hlt
xchg
popf
mov
ret
pop
or
std
mov
or
lods
loope
lcall
jnp
push
cmp
push
lret
cmp
inc
sub
sbb
fldcw
out
xchg
push
mov
scas
inc
test
imul
jp
xor
out
adc
testb
cmp
push
inc
pop
daa
and
ret
insl
movsb
add
lret
test
pop
fdivrl
push
inc
jae
jmp
scas
xchg
cmp
stos
or
jno
inc
shll
daa
out
lea
inc
enter
xchg
xchg
push
and
mov
lret
mov
ljmp
arpl
les
mov
xor
xchg
push
bound
push
dec
pop
cmp
enter
jb
mull
mulb
xlat
sbb
sbbb
shrb
mov
mov
rol
pushf
and
or
adc
sbb
mov
jl
add
out
aad
scas
mov
es
dec
leave
pop
aaa
add
ret
into
hlt
in
inc
dec
test
arpl
iret
das
or
xchg
adc
cmp
or
popf
adc
mov
jg
movsl
cmp
push
aam
and
pop
aam
sbb
adc
in
pusha
js
inc
mov
test
fmul
xchg
sub
pop
sub
icebp
cmp
int3
stos
outsb
xor
rcrl
mov
hlt
imul
cmc
adc
mov
adc
gs
fnstcw
dec
sub
sbb
inc
insl
shl
mov
fdivs
push
xchg
sbb
insb
out
push
shlb
jle
lcall
add
mov
ret
push
and
lret
fsubrl
and
sub
jnp
mov
lods
insl
bound
test
imul
aad
ds
rcrb
dec
adc
out
sbb
adc
test
xchg
fwait
aaa
cs
xorb
ljmp
icebp
adc
cmp
xchg
pop
adc
outsb
fucomi
scas
repnz
sahf
push
mov
clc
ficomps
in
xor
lea
mov
adcb
xor
push
xor
xchg
das
cmp
push
pop
loop
sbb
nop
xchg
inc
mov
pop
sbb
rcrl
xor
pop
mov
pushf
nop
out
xor
sti
fcomps
mov
ds
push
mov
cltd
mov
pop
out
js
lods
mov
dec
stos
add
int
jo
clc
push
add
sub
std
pop
lret
sbb
daa
sbb
inc
dec
push
stos
scas
ljmp
loope
jecxz
cmp
andb
mov
mulb
out
lock
xor
lcall
push
iret
sbb
insl
test
sub
loopne
sbb
xor
call
test
adc
cmp
add
adc
jb
pusha
or
idivb
xor
ds
movsl
test
sbb
repz
loop
jecxz
outsb
les
dec
outsb
add
pop
into
cmp
inc
int
sbb
push
cmp
xor
sahf
inc
sahf
loopne
cltd
jo
xchg
test
movb
leave
and
mov
repz
xchg
jg
testb
sub
aam
cmp
add
rorb
pop
push
cmp
adc
mov
jp
push
push
ja
sub
jo
xchg
popa
mov
xchg
sbb
or
cmp
mov
dec
stos
cmpsb
mov
xchg
mov
push
cltd
push
inc
sub
filds
mov
dec
add
data16
mov
gs
mov
and
divb
push
dec
data16
adc
jb
hlt
inc
sbb
cmpsl
shl
shl
popf
adc
xor
push
xchg
cmpsb
arpl
das
and
fadds
cmc
stc
add
and
pop
cs
sub
mov
pop
ss
fldt
les
das
fisttpll
rcll
jg
cltd
mov
ja
jbe
sbb
dec
out
adc
mov
fldl
test
sbb
bound
repz
or
mov
xchg
insl
pop
push
cmp
aas
outsl
popa
push
mov
jg
inc
test
sbbl
addl
test
cmpl
cmpxchg
imul
sbb
ror
ds
faddl
outsb
nop
loop
inc
and
dec
push
pop
mov
insb
xchg
stc
lret
xchg
shl
into
test
testl
push
jl
dec
adc
ds
je
push
ljmp
call
addb
sbb
popf
jae
push
mov
incl
pop
fwait
pusha
out
xor
inc
mov
and
inc
ja
lret
fnstsw
inc
sbb
lret
cmp
inc
or
dec
lods
xor
ret
shlb
scas
sti
mov
outsb
movsb
testl
cs
cmp
call
loopne
xor
sbbb
int
out
xor
das
cmpsb
mov
ficompl
cmp
pop
inc
xchg
adc
repz
push
xor
mov
or
jmp
mov
scas
push
pop
enter
pushf
and
dec
or
cwtl
stc
and
outsb
lret
aad
cmp
mov
lods
xor
fdivrl
int
xchg
mov
add
inc
pop
sbb
loope
cmp
xchg
movsl
adc
or
int
incb
andb
sbb
enter
aas
das
std
fstpt
shll
jnp
mov
adc
lods
das
sbb
mov
and
sarl
inc
pop
cmp
popf
xor
xchg
cwtl
jno
and
lds
adc
in
and
or
fistpll
shlb
push
rcrb
fnstenv
in
xlat
mov
inc
xchg
aaa
imul
adc
inc
jo
insl
inc
ljmp
ret
xchg
arpl
aad
jg
mov
mov
frstor
test
ror
lret
lea
push
test
jb
mov
sti
mov
mov
fstpl
sbb
fdivr
jns
ja
xchg
fsubl
in
jl,pn
mov
daa
push
dec
dec
jmp
jae
or
std
add
dec
jmp
das
call
and
mov
pop
jmp
mov
push
pop
jg
das
in
xchg
or
out
sbb
andb
rclb
movsb
jo
inc
dec
jg
mov
or
sbbl
fwait
inc
add
add
gs
mov
sub
movsb
les
mov
ss
mov
sub
adc
fiadds
cmp
cmpsb
cmp
or
addl
jle
in
aas
add
mov
adc
sbb
sbb
adc
pop
out
popa
nop
dec
mov
or
jo
add
mov
ret
or
lret
jnp
and
cmp
dec
cmpsl
mov
adc
cmp
dec
or
mov
movsl
inc
das
adc
jne
aad
pop
pusha
loope
pop
push
gs
dec
cltd
mov
imul
and
push
dec
lock
fstl
pop
add
outsb
jb
clc
jge
inc
loope
bound
sarb
jnp
and
js
ja
xchg
cld
mov
inc
std
xor
insb
inc
notl
and
mov
fst
jae
add
fistps
mov
mov
sub
sub
in
pop
sbb
xor
lea
test
inc
xor
std
sbbb
mov
aaa
pop
mov
fsubl
js
sbb
scas
test
xchg
jg
dec
xchg
test
and
add
lea
mov
fucomp
cli
aam
pop
jo
pop
push
pop
jmp
cwtl
inc
mov
cmp
or
xlat
sahf
xchg
jecxz
cmp
push
and
lods
test
cmpl
testl
les
lea
adc
test
or
aam
or
sbb
jnp
in
inc
js
jle
xor
les
aas
testl
fstps
das
mov
lods
roll
xchg
gs
sbb
gs
out
mov
sbb
cmpsb
dec
jno
out
push
je
cltd
mov
shufps
rorl
enter
inc
pusha
shlb
jl
lahf
sub
neg
dec
inc
psubd
pop
mov
in
outsb
push
rcr
mov
and
dec
ss
sbb
jb
pop
cli
lods
push
sbb
imul
sbb
or
mov
push
inc
or
or
js
push
add
clc
out
out
movsl
popa
dec
adc
push
adcb
scas
xchg
inc
xor
and
mov
xchg
xchg
sub
psubb
mov
mov
sub
ret
ret
fcomip
fdiv
pop
in
mov
add
cmc
hlt
out
cltd
cmc
inc
nop
cmp
fdivr
insl
test
pusha
andl
adc
xor
lds
sbb
imul
mov
fdivs
pop
mov
movsl
scas
icebp
pop
shl
adcb
rcll
sub
jmp
inc
hlt
sub
or
inc
in
jo
adc
jns
mov
pop
cmp
cmp
js
xchg
mov
in
fisubrs
pop
negb
push
push
add
test
push
int3
sbbl
outsl
add
mov
jl
fs
cmp
mov
out
add
or
pusha
and
iret
xor
fsts
je
iret
in
dec
pop
or
mov
lods
sbb
fidivrs
add
rcl
pop
jle
cli
stc
mov
enter
int3
push
pop
or
cmp
arpl
mov
pop
and
mov
enter
dec
mov
and
testl
dec
icebp
inc
das
dec
mov
xchg
into
stos
mov
sti
or
outsb
repz
out
xchg
jl
loopne
mov
and
fmull
and
into
out
int
rcl
push
repnz
movsb
mov
loope
mov
cmp
add
xor
ficoml
test
testb
inc
jnp
out
pop
jb
dec
mov
loopne
inc
sbb
loop
call
jp
push
adc
enter
inc
dec
xchg
push
and
mov
mov
xchg
lret
inc
ja
into
dec
imul
rclb
cmp
push
push
repnz
bswap
pop
in
js
dec
mov
ljmp
jno
test
loopne
lcall
mov
adc
mov
xlat
sbb
inc
jne
xor
ja
orb
scas
ljmp
movsb
neg
popf
mov
dec
inc
xchg
cmp
xchg
roll
jg
and
inc
pop
shrb
insb
add
fwait
mov
lods
jl
mov
cmpsl
fs
movsb
pusha
in
fisttpl
pop
xchg
jo
ret
mov
adc
aaa
xchg
pop
cmp
pop
push
in
jmp
push
push
mov
mov
and
lock
outsl
mov
push
lret
iret
inc
outsb
or
push
stos
pushf
add
push
add
xchg
pop
fcomps
adcl
out
add
fld
shlb
push
and
inc
aaa
loope
insl
leave
std
icebp
mov
sbb
test
mov
or
xchg
loop
inc
arpl
leave
or
and
xor
rclb
mov
std
mov
rcrl
dec
mov
cli
mov
sub
pop
pop
mov
pop
xchg
fildl
sub
dec
cmpsb
cmc
lret
mov
pop
mov
icebp
cwtl
test
mov
iret
lea
arpl
test
ja
scas
sub
ja
sub
adc
sbb
rclb
pop
dec
add
or
aas
pop
dec
dec
bnd
and
and
fisubrs
pop
int
xchg
pop
fsts
xchg
sub
xchg
mov
mov
fistpl
adc
loop
adc
pop
fcmovb
inc
sbb
cmc
lea
mov
loopne
or
mov
xchg
cmp
ret
roll
push
fidivrs
mov
inc
and
bound
imul
adc
loopne
pop
pop
mov
ret
jno
dec
pop
sbb
mov
movsb
clc
adc
mov
sub
fidivl
xor
inc
sbb
imulb
or
pop
ljmp
mov
mov
aaa
and
decb
cmpsb
sub
outsb
xor
loop
add
fldenv
mov
sti
stc
loop
jo
pusha
jp
sub
jnp
push
outsb
sbb
mov
xchg
adc
lret
cld
stos
jbe
mov
inc
inc
movsb
xor
push
pop
mov
cmp
mov
mov
outsl
mov
dec
movsb
repnz
mov
lret
mov
cwtl
sub
mov
test
push
arpl
mov
pop
mov
mov
cwtl
cmpsb
scas
lds
stos
pop
push
jbe
push
cwtl
das
leave
sbb
inc
and
incb
mov
loope
movsl
xor
mov
std
xchg
xlat
mov
stos
daa
inc
out
aaa
pop
je
outsl
nop
ljmp
das
out
aaa
pop
shlb
enter
lock
nop
and
mov
sbb
enter
sbbb
add
push
ss
xor
xchg
push
push
aam
cmp
fidivrl
shrb
xor
bound
pop
mov
sahf
dec
and
inc
fnstcw
cmpsb
jp
xchg
mov
jecxz
aam
popa
sub
inc
mov
frstor
cmp
sbb
mov
stos
sbb
bound
sub
sbb
data16
stos
jb
push
pushf
repnz
cltd
adc
lds
sbb
push
addr16
mov
inc
adc
dec
sahf
outsl
xchg
xchg
xor
mov
in
pusha
push
nop
xchg
stc
stc
push
fisttps
insb
adc
or
test
push
mov
in
arpl
pop
sbb
adc
adc
mov
les
pushf
data16
sub
sarb
mov
stos
lock
jl
stos
xchg
fistpl
jle
shr
fmull
fsubrp
imul
add
lahf
and
xor
rcl
dec
in
jne
or
dec
inc
ds
sbb
xor
jne
inc
popa
jg
nop
cmc
dec
push
mov
or
fwait
add
repnz
sub
sbb
movsw
pop
pop
mov
jnp
mov
and
cmp
or
push
dec
xchg
int3
mov
cmpsb
rcr
inc
icebp
jp
pop
jno
cmp
jns
neg
call
or
fwait
jle
cld
pop
push
std
mov
xchg
sbb
repnz
rep
stc
aaa
dec
inc
adc
dec
pop
adc
iret
mov
jne
rcl
cmp
js
orb
fsubr
sub
mov
sub
sti
test
pop
test
cmp
push
xorb
rcrl
leave
and
in
cli
je
push
push
nop
test
push
and
enter
mov
shufps
jecxz,pt
decl
nop
fdivl
scas
pop
or
push
mov
clc
cmpsl
and
test
outsl
jl
mov
insb
sub
addr16
push
lea
sbb
adc
sub
sarb
dec
fsubrl
addr16
add
and
ficompl
das
cltd
inc
mov
in
push
dec
adc
pop
dec
pop
scas
mov
dec
filds
into
addr16
cmp
movsl
adc
cld
arpl
add
repnz
les
mov
sarb
add
mov
insl
in
loop
add
push
inc
insl
jl
jne
in
cmp
lcall
pushf
gs
je
dec
jg
jecxz
fmull
xchg
pop
and
push
movsl
mov
ret
inc
jns
imul
cmp
out
add
bound
das
fdivrl
loop
sbb
jbe
mov
dec
rcll
jb
test
mov
dec
pop
ss
lahf
push
notl
les
bound
out
dec
fdivl
mov
adc
imul
lock
inc
ret
jno
cmp
mov
lea
push
aas
test
scas
sbb
jnp
adc
fstps
dec
dec
push
rcrl
jmp
ja
pop
xchg
adc
ss
lods
out
mov
adc
int
outsb
icebp
adc
sub
jo
mov
adc
lret
inc
pop
lahf
leave
aam
push
add
pop
dec
push
pop
jb
cmc
cltd
leave
push
jb,pn
add
cwtl
and
pushf
pop
cs
mov
xor
cmp
cltd
pop
mov
sbb
icebp
push
addr16
out
pop
xchg
cli
mov
test
push
mov
adcb
rorb
in
enter
fcoms
inc
fisubrs
or
test
cmp
dec
arpl
fldt
pop
push
test
sub
cmp
insb
mov
jge
mov
fs
in
nop
popf
adc
sbb
ja
loop
xor
ljmp
mov
popf
aaa
pop
fwait
pop
cmovo
dec
repz
xchg
jmp
shlb
sub
push
in
mov
mov
mov
push
test
stos
and
cmp
iret
pop
push
jnp
jg
shlb
and
lds
sahf
std
mov
inc
mov
jle
or
fcomi
leave
rclb
add
or
xorb
xchg
pushf
add
sti
scas
stos
lods
fs
popl
cmp
test
imul
sub
mov
das
fistpll
and
cmp
mov
cmpsl
in
movsl
xlat
jp
dec
sahf
popl
out
aam
mov
adcb
adc
sahf
add
sub
es
mov
xchg
sbb
mov
outsb
jae
add
repnz
push
daa
inc
pop
add
test
fwait
sub
pop
pop
lcall
sub
popa
dec
or
jle
dec
icebp
or
xor
cmpsb
inc
xchg
adc
lret
sbb
and
and
cmp
jge
js
ja
cmp
mov
dec
lcall
xor
call
stos
or
cltd
movsl
add
mov
loope
push
imull
loop
pop
lret
ja
push
int3
and
ret
adc
popf
sub
sub
ds
in
adc
daa
mov
imul
and
jecxz
daa
push
lcall
ds
push
pop
data16
sub
les
push
fwait
cmp
dec
push
add
dec
add
ljmp
add
xchg
std
or
adc
xchg
inc
or
adc
stos
cwtl
mov
pop
push
repz
xchg
push
add
adc
testb
adc
cmp
loopne
popf
rcr
jns
loope
test
ficoml
and
imul
mov
push
fcomi
iret
movsl
lret
cltd
cmp
mov
dec
filds
sbbb
mov
inc
int3
sub
inc
add
add
cmpsb
lea
sahf
pop
mov
dec
adc
outsb
int
int
cltd
and
xchg
orb
mov
ds
or
jmp
imul
inc
lods
mov
mov
bound
sub
rorl
pop
and
das
sbb
push
frstor
lods
push
add
repz
lahf
xor
dec
fildl
shl
cwtl
xchg
cmp
lds
push
js
movsb
and
xor
imul
mov
add
inc
out
stc
mov
push
sub
sub
mov
outsl
inc
iret
push
dec
in
xor
in
jecxz
lahf
mov
mov
push
inc
and
and
or
movsl
repnz
movsl
inc
jge
pop
sub
cmpxchg
and
movsb
movups
popa
adc
sbb
xor
or
jmp
mov
sbbl
pop
loop
mov
xchg
sub
push
push
mov
add
sbb
aam
cli
inc
orb
xlat
leave
dec
ret
fnstcw
adc
push
dec
mov
ret
mov
xor
jns
in
rcl
inc
insl
or
in
xchg
leave
adc
jbe
or
nop
insb
push
lds
adc
jo
ljmp
and
adc
xchg
jno
stc
cmpsb
pop
mov
clc
sahf
mov
rclb
cmp
sbb
lock
add
mov
xchg
pop
fwait
sbb
test
xor
arpl
cs
test
adc
dec
adc
jp
jae
arpl
inc
dec
movsb
push
addr16
jmp
push
test
shr
jge
lcall
lods
and
push
inc
fimull
or
loopne
ret
cwtl
pop
fsubrp
pushf
jmp
push
sub
pop
push
sub
enter
cmp
punpckhdq
loopne
sbb
sbb
insl
adcl
mov
aas
fcomip
sub
xchg
mov
rorl
jg
and
mov
ja
mov
xor
dec
mov
sbb
nop
addr16
or
xor
leave
mov
test
ret
mov
std
out
loop
cmp
rcll
nop
cmc
fistl
mov
test
mov
addr16
sbb
jmp
bound
or
aad
arpl
insb
ret
push
hlt
and
jmp
and
mov
es
test
sbb
imul
dec
mov
insl
loope
aaa
adc
and
sar
pusha
addr16
sti
rcll
pop
repz
cmc
iret
or
scas
arpl
add
call
call
mov
or
loop
mov
in
adc
daa
jecxz
subl
cmp
movsl
test
pop
pop
add
pop
bound
lret
push
scas
pop
pop
pusha
int3
ret
and
ret
sub
sbb
add
movsl
in
pushf
mov
pop
sbbb
sbb
int3
mov
loopne
cwtl
mov
movl
stc
sub
mov
xchg
cld
sbb
mov
push
popa
test
outsl
repz
inc
mov
mov
stc
movsb
gs
int
mov
lret
jecxz
dec
cmpsb
int3
adc
sahf
mov
insl
outsl
clc
mov
cmpb
pop
mov
call
push
int
inc
jge
ljmp
sbb
popa
lret
shr
psrlq
nop
or
add
and
scas
lods
adc
mov
std
lds
pop
shrd
sbb
inc
and
mov
sti
fnstsw
repz
or
dec
sbb
pop
dec
xchg
jge
mov
cmp
stc
roll
inc
shrl
pushf
enter
jmp
adc
inc
fldcw
ljmp
adc
mov
lock
test
push
jno
xchg
ret
push
fildl
jno
and
push
clc
cwtl
pop
mov
pop
inc
ss
inc
imul
loop
call
add
mov
push
and
mov
dec
xchg
dec
popf
imul
ds
sahf
mov
dec
cwtl
pop
dec
dec
mov
dec
xor
pop
je
lods
test
and
inc
inc
inc
sbb
data16
cmp
scas
and
popf
ljmp
lods
sub
inc
jmp
push
add
mov
jno
mov
sti
sub
inc
dec
push
jecxz
loop
dec
lea
imulb
dec
jb
stc
mov
push
dec
aaa
andl
fildll
sbb
xorb
or
ss
outsl
scas
xchg
dec
out
stc
xor
repz
jns
enter
mov
pop
pop
mov
push
adc
inc
mov
cmp
mov
mov
cmp
push
popl
xchg
cmp
adc
push
dec
movsb
leave
inc
xchg
test
push
push
ds
ljmp
shll
push
and
clc
pop
mov
popf
mov
pop
aas
addl
mov
movsl
mov
js
dec
sahf
jae
inc
or
sbb
ret
outsb
xor
mov
mov
inc
cmp
scas
fsubr
push
out
mov
and
jl
test
xchg
out
or
icebp
mov
filds
pop
push
pop
lahf
inc
xor
mov
fs
scas
pop
dec
lods
imul
inc
in
jne
cli
out
sub
into
rcrl
adcl
test
sub
daa
push
mov
add
add
inc
sub
xchg
mov
inc
daa
and
push
push
dec
mov
pop
sarb
cmc
mov
adcb
pop
fs
jmp
insb
sahf
xchg
mov
xor
stc
mov
mov
lods
add
cltd
ja
mov
aam
fidivs
or
mov
or
jbe
jbe
out
lret
mov
add
adc
jae
jp
jb
xchg
movsl
xor
int
mov
xchg
call
and
jl
arpl
inc
stc
dec
jnp
inc
pop
jge
cmc
mov
sub
sbb
bound
cmpsl
add
push
fdivr
push
out
imul
xchg
inc
bound
xchg
outsb
cltd
pop
fdivrl
lea
stos
aam
pop
add
jbe
cld
scas
in
int3
xchg
mov
pop
fbstp
rclb
push
inc
pop
or
hlt
jne
stos
adc
cwtl
adc
dec
add
popa
lcall
inc
xor
adc
pushf
test
add
push
inc
fidivrl
fcomps
and
push
inc
cmpl
mov
sub
cmp
dec
test
shrb
mov
and
jb
pop
or
mov
aaa
pop
jo
sub
ljmp
je
in
sbb
insl
rolb
outsb
popf
lds
mov
sti
ret
mov
push
dec
xchg
inc
ja
pop
testb
jle
push
pushf
imulb
in
xlat
add
mov
dec
push
rcrl
mov
cmp
sub
int
and
stc
repz
dec
repnz
icebp
push
sbb
cmpsb
mov
mov
xor
dec
pop
xor
sbbl
jge
mov
xor
orb
fistps
fs
enter
inc
jno
or
jle
pusha
aas
jne
pop
inc
aad
xor
ret
clc
lods
dec
test
orb
dec
lds
aad
movsl
movsb
jae
ds
pop
int3
or
pusha
pop
pop
ljmp
pop
repnz
and
mov
shr
mov
jne
xor
jle
pop
in
sbb
fidivrs
shrb
inc
mov
loope
pop
mov
push
test
scas
test
je
mov
jg
mov
push
cwtl
jo
sbb
mov
jge
sub
or
daa
mov
mov
pop
push
mov
nop
les
dec
and
je
int3
adc
int
das
cli
lea
mov
je
adc
mov
xlat
and
testb
add
and
jnp
or
aaa
sbb
jo
or
push
dec
jnp
fisubl
mov
push
movsl
mov
pop
xchg
xchg
int3
insl
aam
add
dec
jg
aad
pushf
jge
sahf
add
aaa
call
repnz
jl
push
adc
shlb
fldt
pop
std
inc
mov
sbb
call
cli
jne
fwait
sbb
pop
out
sahf
add
cld
and
mov
cmp
xchg
adc
dec
lea
jb
push
push
xor
sbb
mov
xchg
lret
and
xor
inc
inc
repnz
pop
jno
add
sbb
daa
nop
xchg
jns
iret
shl
rclb
mov
or
pushf
ds
mov
adc
jle
add
adc
mov
in
and
push
ja
jae
jl
icebp
popa
and
pop
cmp
dec
int
dec
mov
loopne
rcrb
rcrl
push
push
mov
mov
xor
jmp
add
inc
mov
and
test
je
push
inc
pop
into
mov
sahf
mov
popa
jnp
mov
aaa
aam
addb
add
cmpb
rorb
jns
lcall
mov
adc
push
mov
iret
and
cmovl
arpl
pop
jb
sbbb
js
fsubrl
cmp
push
cld
mov
cmp
movsb
ret
aam
mov
test
xchg
mov
insl
dec
dec
inc
xchg
push
mov
movsl
jecxz
xchg
call
js
je
add
mov
loopne
mov
xor
repnz
push
imul
xor
xchg
sub
inc
outsl
cmp
add
repnz
out
pop
xchg
shrl
call
jnp
and
pop
add
xor
ds
ja
repnz
lret
xchg
sti
jb
jne
scas
dec
lods
pop
jecxz
mov
and
xchg
adc
dec
leave
insb
pop
je
adc
icebp
subl
push
and
mov
fldcw
loop
xchg
mov
sbb
pop
decb
fwait
xor
subb
xor
xor
ss
lds
pop
jle
jnp
rcl
sbb
lahf
sub
push
ds
or
addr16
inc
adc
push
rorl
test
cmpl
arpl
push
push
popf
pop
or
outsl
and
lods
insl
cmc
push
ret
mov
pop
dec
cmp
push
mov
cmpsb
jo
jnp
jns
fwait
mov
push
sub
lock
clc
aas
mov
mov
xchg
icebp
int
lret
dec
mov
push
repnz
sub
test
rolb
and
adc
cmp
push
sub
arpl
out
sbb
arpl
mov
outsl
test
enter
xor
xor
insb
jo
dec
pop
std
lock
aaa
or
or
xor
das
cwtl
pop
enter
pop
mov
andb
nop
and
aas
pop
or
add
push
cmp
les
mov
mov
push
add
inc
jo
mov
mov
push
pop
nop
and
mov
in
jnp
aad
sub
pop
cmp
fistps
fists
jb
push
adc
dec
cmc
xchg
jge
cmp
cmp
pop
push
mov
dec
and
scas
sbb
stos
cmp
les
lret
mov
sti
and
push
jno
ficoml
xor
push
add
pop
jae
ret
ljmp
mov
inc
push
in
xchg
aas
inc
xorb
push
fildll
lea
outsl
xor
stc
mov
incb
das
jne
mov
jbe
imul
sarb
add
das
mov
mov
sub
out
adc
jns
pusha
jecxz
dec
pushf
rcl
repz
lahf
sarb
out
aas
lret
sbb
out
sub
xorl
pop
mov
jmp
inc
inc
or
loopne
and
nop
repnz
adc
mov
dec
lcall
lods
cli
dec
out
cmp
mov
pop
scas
jne
and
pop
shl
aad
sbb
repz
idiv
pushw
pop
mov
sub
xchg
push
mov
pop
adc
movsl
clc
mov
and
decl
aas
adc
sbb
add
jge
mov
mov
leave
cmpsb
into
adc
fnstcw
or
or
add
mov
aas
ret
pop
in
shrl
pop
cwtl
xor
jbe
cmp
or
xchg
jnp
and
sub
leave
inc
push
dec
imul
pop
cmc
movsb
repz
ja
repnz
jbe
lock
mov
adc
sahf
mov
sbb
and
int3
aad
dec
fwait
xor
imul
inc
mov
js
shlb
push
and
sub
sbb
cmp
xchg
xchg
mov
sarb
aam
call
xor
add
or
loope
jo
xor
sbb
adc
push
inc
ret
cli
pop
iret
ficomps
xor
ljmp
aaa
cmp
loop
sbb
ficomps
mov
lods
lds
jns
lcall
jl
gs
and
pop
jcxz
mov
movsb
imul
negl
mov
call
jle
xor
jl
push
inc
iret
in
adc
sbb
mov
and
push
sahf
js
std
push
mov
lods
es
xchg
notb
xchg
xor
outsb
iret
mov
dec
jnp
dec
pop
adcb
mov
stc
bound
ret
cmp
push
sbb
leave
cmp
insl
add
std
and
loope
xor
jns
adc
out
pop
loopne
mov
sbb
test
pop
cmp
jp
and
insl
push
push
js
or
cmc
cld
jl
popa
shl
or
imul
xchg
mov
fs
add
lea
mov
push
or
test
out
mov
xchg
dec
loope
sub
and
jge
adc
inc
pop
aad
xor
xchg
outsl
mov
xchg
inc
popa
push
jecxz
mov
pop
and
or
idivl
adc
pop
adc
sub
or
pop
pop
int3
jae
in
daa
mov
stc
mov
jns
mov
adc
pop
in
aaa
mov
sub
idivl
adc
cmp
add
es
mov
js
test
lahf
or
inc
call
push
out
sbb
pop
sbb
je
or
lret
bound
xchg
das
lret
jns
mov
xchg
mov
cmp
in
lods
xor
mov
out
jno
and
shl
mov
or
adcl
sub
rcll
aas
shll
in
xchg
cli
cltd
aad
enter
jae,pt
dec
adc
sbb
and
or
icebp
shl
loopne
shll
add
push
jmp
fcmovb
out
jge
and
test
outsl
add
xchg
inc
jle
dec
arpl
xchg
cmp
movsl
dec
mov
sbb
imul
lods
into
xchg
push
scas
xor
mov
ja
out
inc
cwtl
aam
jo
mov
cld
pop
stc
adc
lock
cmpsb
ret
ret
add
ficoml
loop
dec
mov
cmp
incb
int
and
mov
adc
and
ljmp
sbb
outsl
das
mov
and
jle
mov
ret
js
push
mov
je
aaa
je
das
mov
scas
in
std
push
jnp
add
lods
fsubrl
pop
movsl
pop
jle
arpl
pop
hlt
pop
gs
mov
mov
xor
mov
mov
loop
cmc
aam
enter
push
or
insl
lahf
mov
and
in
jp
push
cmp
sbb
push
push
mov
or
add
das
dec
cmpsb
sub
jbe
out
mov
es
mov
push
xlat
sti
mov
cmp
or
xchg
adcb
cmc
push
dec
or
inc
cltd
mov
movnti
pop
loopne
movsl
dec
loope
dec
mov
lods
movsb
dec
sti
cmp
adcb
sub
sub
mov
lret
lock
push
mov
fs
mov
sbb
mov
movsl
ret
in
out
cmp
sub
insb
mov
push
xor
subb
inc
cmp
or
mov
xchg
dec
lahf
sahf
testb
jno
pop
sbb
dec
inc
and
into
fwait
scas
mov
shll
adc
push
test
imul
dec
ss
cltd
mov
sbb
cmp
lds
int3
test
xchg
sub
into
das
pop
push
sbb
mov
idivl
imul
and
mov
pusha
xor
inc
xor
cmp
fisttpl
push
xor
sahf
adc
jg
dec
loop
cmp
xor
mov
cmp
bound
or
test
or
insl
adc
inc
jne
test
lcall
shlb
mov
and
xchg
xor
mov
popf
push
add
jmp
jae
scas
popa
sbb
jbe
ret
stc
divb
ds
je
fisttpll
jno
inc
fwait
and
in
mov
stc
xchg
jne
cmp
inc
dec
pop
incb
xchg
pop
fs
daa
lods
in
xor
lods
dec
in
xor
pop
xor
inc
jno
cmp
clc
das
lock
mov
cmpsl
pop
push
xchg
cmp
dec
in
xor
out
ss
xor
inc
stc
xor
sbb
fchs
nop
inc
push
push
sbb
jp
das
pop
dec
fwait
cli
mov
and
ds
push
mov
mov
or
nop
ret
sbb
xchg
shl
pop
loopne
jge
iret
cltd
xchg
testl
test
jae
iret
ror
cmp
xchg
mov
arpl
mov
push
xchg
mov
fs
add
cmpsl
mov
std
sti
cli
cmp
daa
imul
call
lods
xchg
call
mov
jmp
dec
lahf
push
cwtl
cltd
pop
jnp
pop
pop
mov
ja
insl
hlt
cmp
into
loope
rcrb
fimuls
test
movsb
lods
inc
mov
sti
jg
arpl
xor
arpl
sbb
sbb
and
negb
mov
cmpl
adc
mov
loopne
aad
mov
subl
lods
ucomiss
jne
xor
fdivp
push
add
or
out
xor
cmpsl
inc
mov
and
repz
arpl
rorb
out
add
jge
repnz
mov
inc
jne
xchg
lea
ss
cmpsb
fstpt
sub
out
pop
and
out
push
adc
ret
aam
cmp
mov
pop
addr16
call
sarl
icebp
sbb
int3
rorl
sub
lret
adc
xchg
out
inc
jl
xchg
pop
jecxz
aas
inc
pop
xor
test
fwait
sbb
cmp
or
test
repnz
popf
movntq
dec
and
inc
iret
scas
movsb
std
in
sub
pop
jne
sti
pop
fs
mov
jbe
imul
rcrb
lret
js
xchg
xchg
into
or
dec
push
jo
push
pop
arpl
jns
lahf
bound
dec
jb
push
mov
cmpsb
loopne
stos
iret
movsl
push
stos
shlb
fdivl
movsb
push
lods
jmp
mov
cmc
inc
jle
jno
in
cmp
test
mov
out
push
not
es
scas
or
jl
cmp
addr16
pop
rcr
subl
loope
data16
sub
popf
mov
icebp
cli
mov
lret
cltd
std
aas
add
shll
cld
jl
loopne
aad
sbb
fs
mov
and
sar
neg
loopne
ja
jle
xorb
cmp
adc
iret
jnp
xor
xchg
fs
mov
movsl
divl
and
mov
les
mov
pop
jmp
adc
mov
jmp
clc
mov
or
sti
lods
add
in
push
fidivs
fcompl
es
cmpsl
and
push
pushf
ljmp
xor
jle
mov
test
push
loop
imul
in
test
fcompl
fidivl
mov
inc
lock
fbstp
mov
mov
fildl
sbb
cmp
xor
fisubl
cmpsb
lret
aas
adc
lock
gs
shr
lret
and
pusha
adc
xor
cli
pop
jecxz
inc
xor
out
out
jnp
mov
cld
mov
sub
inc
inc
sbb
pop
mov
xchg
pusha
outsl
call
sub
bnd
push
jnp
dec
dec
clc
inc
push
cmp
outsb
and
or
adc
inc
std
outsb
shrb
xchg
mov
nop
dec
lock
inc
inc
lds
in
push
sbb
rclb
mov
add
push
or
xor
aaa
push
lret
notb
mov
adc
add
fdecstp
xchg
sbb
addb
enter
jecxz
and
andb
les
mov
movsl
mov
fs
aam
mov
mov
daa
cmp
pop
outsb
ficompl
or
mov
in
jb
dec
mov
rorl
fadds
and
mov
adc
inc
ret
dec
pop
xor
movsl
mov
cmp
cltd
addb
xchg
std
out
iret
sbb
ljmp
pop
iret
fwait
mov
sbb
or
ret
xchg
out
mov
ja
mov
xchg
stos
push
push
idiv
adc
arpl
pop
pop
jmp
loop
mul
cmpl
aam
dec
jno
cmpl
ror
ds
sarb
imul
lret
rorb
mov
ror
pop
and
repz
cmp
ljmp
sub
movsb
push
cld
andb
loope
icebp
mov
fdivrs
movsb
loope
add
mov
call
cmp
repz
sub
push
movsl
mov
test
jl
cmp
scas
xor
rcrl
jecxz
push
ffree
int3
cmp
add
sbb
hlt
out
repz
pop
adc
lret
stos
sbb
loop
push
or
cmc
jnp
mov
movsl
iret
stos
push
inc
cmp
movsb
jns
push
aaa
fnstcw
adc
mov
sbb
test
es
dec
jne
mov
sbb
push
lea
push
mov
adc
testb
lock
mov
imul
mov
push
lods
into
push
das
inc
jbe
std
adc
idivb
fsts
js
lret
sbb
add
in
jecxz
mov
mov
add
dec
decb
cmp
jmp
pop
jne
add
jmp
pusha
jge
int
call
jbe
test
vphaddubw
push
scas
jbe
xor
sub
mov
inc
pushf
cs
sbb
shr
mov
cvttps2pi
pop
cli
mov
fmuls
mov
mov
stc
repnz
out
mov
fildll
or
movsl
fmull
iret
int3
out
push
test
into
or
lret
add
outsl
xor
fxam
jns
inc
pushf
aaa
das
sti
xchg
adc
add
add
test
stc
mov
mov
es
xorb
cmp
inc
cmp
cltd
dec
sub
push
jbe
sub
lahf
push
imul
or
fwait
mov
push
pop
push
mov
movsl
push
mov
mov
aam
cmpsl
lea
push
adc
mov
xor
addr16
test
mov
sbbb
fdivr
and
and
in
cmp
xchg
arpl
push
aaa
mov
adc
mov
out
or
test
repnz
divl
ss
ret
sub
stos
xchg
addr16
cmpsl
add
aad
jge
es
lcall
outsl
ret
dec
scas
jl
cmc
mov
mov
inc
clc
adc
hlt
ss
push
cmp
outsb
xor
aaa
add
sbb
xchg
shll
decb
fidivrl
xchg
andb
cli
mov
in
add
jl
lret
lret
inc
in
or
icebp
popf
dec
inc
inc
mov
popa
xchg
and
or
sti
push
enter
adc
testl
loop
lea
inc
push
insl
lock
jp
and
les
lds
int3
arpl
cmc
stc
outsl
mov
insl
test
lods
mov
jno
sub
mov
jecxz
inc
xchg
fs
int
aaa
and
sbb
or
stc
jns
cmp
lock
into
xchg
int3
lret
sbb
mov
loopne
pop
inc
fcomip
inc
add
mov
or
call
dec
bound
arpl
das
insb
mov
jbe
ss
jns
push
cmp
mov
fistps
in
cmp
push
mov
sti
in
notl
mov
or
inc
sub
mov
int3
dec
lods
aaa
pusha
loope
leave
clc
aas
sti
push
int3
push
fstpl
ds
or
leave
mov
xchg
insb
mov
insl
cltd
or
js
xchg
dec
insb
shl
dec
pop
rorl
addr16
and
or
push
add
subl
pop
jbe
cmpsb
das
out
out
mov
jle
dec
mov
aam
jle
push
cltd
enter
jg
pusha
daa
flds
sub
mov
mov
leave
fwait
pop
cwtl
mov
inc
xor
test
inc
or
dec
ja
and
jmp
push
or
mov
lahf
roll
xchg
stos
out
hlt
pusha
ret
adc
push
fisubrl
imul
push
mov
sarb
cmpsl
pop
repz
add
cli
mov
jae
cld
shll
loop
mov
nop
jne
sbbb
xor
or
push
divb
xor
orl
xchg
sarl
aaa
int
xor
mov
fldenv
pusha
xchg
int3
dec
xorl
hlt
inc
mov
sbb
outsl
jnp
arpl
imul
and
outsl
jle
arpl
pusha
lahf
add
scas
enter
jb
xor
mov
push
clc
lret
adc
inc
mov
cmp
fs
ret
cmp
cs
mov
dec
outsl
loopne
fimull
mov
scas
add
xor
and
xor
cld
flds
jo
sahf
cmpsb
fcomip
mov
loop
xchg
pop
dec
in
pusha
inc
hlt
mov
mov
pusha
mov
pop
gs
sbb
notl
mov
adc
data16
mov
cmp
jne
or
movsb
push
ljmp
xchg
pop
adc
push
out
mov
test
and
mov
push
and
jno
or
scas
stos
scas
jecxz
shrd
mov
fildll
jl
or
pushf
adc
lds
inc
inc
std
mov
adc
pop
jp
mov
ja
loope
ss
shr
jge
or
aaa
xchg
ret
or
and
or
xor
mov
xor
cwtl
push
push
cmc
jns
out
enter
test
popf
mov
adc
mov
ret
loope
jge
dec
jb
hlt
fsubl
sbb
loopne
dec
sbb
xchg
insl
mov
in
addr16
mov
scas
xchg
ja
mov
jg
xchg
repnz
push
popa
mov
push
fimuls
das
test
push
faddl
enter
dec
popf
xor
cwtl
jle
aam
pusha
xchg
mov
inc
mov
xchg
cmc
push
in
dec
sbb
sub
jo
pop
scas
js
mov
pop
idivb
pushw
sarb
arpl
mov
ja
popf
in
jns
cli
and
cmp
cmp
mov
jbe
adc
stos
mov
aas
pop
js
adc
dec
jle
sub
jne
in
jp
leave
add
cwtl
cltd
lods
jo
pop
push
rcrb
andl
fs
pop
popa
inc
andl
or
sarb
repnz
or
dec
push
sub
adc
out
cmp
lods
push
xchg
hlt
add
cmp
push
mov
movsl
outsb
test
or
push
insb
xchg
rolb
out
jg
mov
ljmp
int
add
xchg
lds
repnz
sub
mov
xchg
stos
push
aas
xor
xor
or
dec
mov
es
popa
mov
mov
mov
sbb
or
dec
xchg
fisttpl
cs
imulb
shrb
fsubrl
pop
mov
lds
in
xor
ss
lods
ja
jmp
jns
adc
xchg
dec
add
inc
push
iret
and
push
scas
ljmp
jp
outsl
adc
add
sub
aas
mov
mov
xor
in
jne
stos
test
imul
sbb
dec
test
dec
shl
cmpsb
add
pop
ja
pop
inc
fildll
push
sbb
into
push
xlat
lock
decl
jecxz
in
imul
notb
pop
jl
fwait
pop
sub
add
mov
pop
fcomps
leave
push
mov
fs
rol
out
xchg
imul
jmp
aam
push
and
popa
adc
xchg
cwtl
push
cmpsb
push
negb
sbb
and
jecxz
adc
xor
fsubrl
les
pop
sbb
arpl
mov
inc
push
dec
dec
in
andb
ss
call
scas
jle
call
mov
and
daa
push
addr16
pusha
mov
or
push
jbe
and
sub
dec
jmp
leave
sti
iret
in
or
adc
mov
cmp
jno
push
adc
cld
inc
adc
out
fdivs
gs
mov
aam
shrb
cmc
dec
pop
inc
fisubl
lds
push
lret
mov
fimull
in
stos
push
and
lods
xor
mov
push
dec
fwait
scas
push
shr
pop
sbb
sbb
test
jecxz
mov
leave
ficompl
lods
fs
lock
loopne
and
jns
inc
or
mov
popa
fucomp
cmp
je
shlb
add
pop
daa
xchg
jmp
aaa
push
jno
lds
or
mov
sub
cmp
or
loopne
jl
pop
mov
inc
pop
cld
daa
jo
and
sub
shll
fs
sbb
xchg
repnz
xchg
pop
cmpsb
jae
dec
push
in
cwtl
jg
jbe
xchg
dec
aad
imul
jl
mov
sbb
rcrb
cmpsl
pop
lcall
and
mov
vmovups
or
push
cld
or
nop
das
icebp
rorl
daa
dec
pushf
xchg
inc
adc
nop
xchg
mov
lock
sbb
aaa
shll
sub
add
stos
or
repz
jno
jnp
sti
dec
arpl
cmp
ds
scas
xchg
nop
in
mov
imul
pushf
shrb
arpl
icebp
sub
or
mov
push
add
stc
or
cmp
cmc
das
mov
sbb
pop
and
pop
cmp
sbb
adc
xchg
imul
iret
lret
jne
mov
add
add
incl
pop
or
out
xchg
xor
test
fs
inc
arpl
fsts
sbb
stc
cmp
mov
sarl
sub
adc
adc
xor
mov
loope
imul
or
adc
mov
jg
out
in
dec
fsubs
js
popa
xchg
or
cltd
xor
notb
cmc
mov
leave
shrl
imul
push
mov
inc
or
pop
je
popa
add
pop
stc
fucomi
mov
stos
add
pop
sti
pop
sbb
fnsave
xchg
pop
int
sbb
fidivs
cmp
jb
mov
mov
adc
fwait
lahf
push
mov
sbbl
jae
xchg
pusha
xor
hlt
pushf
sub
mov
nop
ljmp
inc
mov
cmpsl
bound
enter
pop
icebp
jbe
outsb
cld
pop
test
data16
add
out
sub
push
hlt
fisubl
shr
fdivrl
xchg
pop
test
dec
push
push
push
mov
inc
cmc
cs
and
in
mov
jge
repnz
push
pop
jp
sbb
sbb
testb
test
jne
adc
in
js
jmp
inc
mov
divl
xor
lock
movsl
push
push
in
ret
dec
adc
push
add
filds
repnz
jns
repnz
inc
mov
xor
cmpsl
es
dec
xor
sub
jb
cmpsb
pop
sbb
movsl
sub
mov
lods
into
repz
das
mov
pop
sahf
into
xchg
xor
push
and
pop
and
rorl
mov
push
pop
mov
hlt
notb
jg
mov
ljmp
sti
fstps
cli
pop
mov
popa
mov
cmp
xchg
hlt
lahf
paddd
aas
push
pop
sbb
xchg
push
add
outsb
jne
push
and
jno
or
lret
inc
shll
out
fisttpll
ret
stos
sbbl
mov
inc
xor
in
movsb
mov
enter
xor
mov
in
mov
mov
leave
or
adc
out
in
mov
xor
xor
dec
repz
jbe
jge
and
addb
xchg
movsl
pop
sbb
lods
xchg
fisttps
xor
sti
pop
ss
fsubrl
mov
dec
loop
out
jmp
enter
dec
fnsave
fiaddl
lahf
outsl
lds
jmp
mov
lds
xorb
nop
pusha
push
dec
xchg
sbb
popa
test
jecxz
xor
jbe
mov
xchg
add
xorb
mov
push
pop
mov
or
fcompl
and
push
jo
jbe
mov
push
cltd
and
cs
ret
mov
imul
fldt
and
push
jne
test
jge
cld
fdivrl
int
out
mov
insb
shrl
mov
insl
push
lds
sbb
xor
pushf
xor
inc
sbb
push
jbe
mov
mull
jmp
outsl
fs
mov
into
cbtw
pop
cs
jbe
cld
scas
stos
xor
lret
add
or
xor
mov
dec
inc
jge
stos
adc
sbb
nop
daa
fdivp
ds
xor
or
pop
jle
adc
cmc
in
cwtl
hlt
jecxz
cs
test
sub
movsl
sub
es
push
ss
cmp
int3
into
js
sub
push
clc
cmc
dec
jecxz
into
shll
xor
add
sbb
mov
out
cltd
or
push
xor
cmp
mov
jno
adc
adc
xchg
aam
fcoml
imul
addl
popf
mov
add
out
jb
lea
push
out
popa
into
mov
jmp
test
shl
out
shll
addr16
fsts
int3
jge
lcall
in
into
pop
dec
jns
and
cmpsl
inc
mov
ljmp
shrl
mov
and
call
mov
jno
xor
mov
in
scas
addb
mov
and
cltd
cmp
dec
inc
mov
mov
and
movsl
jae
lret
sub
imul
jle
sbbb
sub
enter
test
vandnps
lret
roll
fadd
add
mov
aam
add
mov
dec
mov
je
cmp
mov
xchg
xchg
push
into
lds
lock
jecxz
aad
mov
shll
lret
push
sbb
fucomi
push
fs
jb
jl
and
push
xor
fsts
call
pop
jle
lret
in
mov
dec
fadd
stos
int3
pop
adc
test
popf
inc
mov
mov
popf
jb
push
aad
fldl
xchg
repnz
pop
imul
enter
xlat
jo
adc
movsb
int3
je
std
loope
fstpt
xchg
mov
and
mov
and
outsb
inc
mov
sbb
jmp
das
insl
movsb
mov
push
arpl
inc
xor
mov
jmp
mov
insb
enter
lock
stos
jns
loop
push
repnz
divl
loope
adc
jbe
xchg
mov
ss
mov
pop
fwait
push
loop
dec
pushf
sbb
add
mov
icebp
mov
cmpsb
xchg
dec
or
or
aad
push
jp
aam
lock
sub
push
jb
jb
pop
jne
icebp
mov
test
adc
add
or
mov
call
or
mov
dec
imul
clc
jns
int
cld
movsl
xchg
icebp
xor
gs
int
adc
cmc
addr16
mov
inc
aad
imul
sbb
cmp
cwtl
adc
jne
cmpsb
cmpsl
or
push
in
data16
add
loop
popa
xor
stos
add
pop
fs
mov
and
imull
xor
adc
sub
shrb
and
sahf
sbb
jmp
mov
dec
out
addr16
cmpsl
xchg
sbb
push
in
add
enter
jg
sbb
jg
lret
and
jae
pop
sbb
mov
movsb
and
cmp
push
mov
add
es
dec
xorl
jae
mov
mov
cmpsl
pop
or
int3
adc
xor
mov
mov
push
mov
dec
or
out
call
nop
aas
mov
and
loopne
jmp
ficomps
test
popf
adc
pop
push
andb
pop
and
andl
in
push
mov
scas
fcmovb
or
fdivs
lcall
stos
pop
in
jbe
mov
lcall
cmc
scas
aaa
stc
lret
roll
sub
into
scas
mov
ss
in
cmp
das
jecxz
xchg
jle
push
jb
jg
mov
bound
imul
sbb
fsts
insb
mov
jecxz
test
push
movsb
push
test
cmpsl
inc
shlb
jp
movsb
xchg
out
mov
cmc
inc
rorl
jae
pop
out
push
int3
out
ljmp
xchg
ror
enter
lods
jo
insl
inc
lods
les
inc
stos
pop
mov
pop
jg
aad
xchg
xchg
les
xlat
and
into
pop
sbb
sti
jns,pn
add
lahf
lds
popa
outsb
dec
ret
shll
dec
push
call
inc
push
fistl
mov
xchg
test
xor
mov
in
mov
jmp
ss
lods
ja
adc
int
add
jae
dec
pusha
mov
pushf
ljmp
push
xchg
push
pop
jmp
dec
fisubl
and
icebp
inc
into
leave
in
push
fadd
cmp
or
test
pop
adc
das
test
sub
fnstsw
test
cmc
dec
mov
bound
mov
rorl
jmp
dec
xchg
aaa
js
pushf
pusha
out
inc
popa
jp
xor
fcmovu
pop
stc
push
or
xchg
shlb
push
ja
cmp
outsl
pop
push
push
xlat
cwtl
mov
mov
xchg
dec
add
adc
adc
cs
cmp
imul
and
pop
stos
mov
rcrb
test
xor
mov
mov
and
xchg
push
xchg
push
or
in
jle
fldenv
cmp
outsl
jbe
xlat
pusha
and
adc
nop
xor
xlat
orl
mov
sbb
bound
out
pushf
sbb
pop
fwait
js
pop
les
lea
into
cld
mov
das
cmp
push
fdivl
aad
cmp
sub
fcom
jnp
sbb
cmp
xchg
adc
xorl
aad
push
mov
cli
int
lret
adc
lcall
pop
cli
mov
or
popa
test
xor
adc
gs
jnp
subb
std
in
addl
fwait
shll
mov
outsl
adc
movsb
data16
push
cmpsl
dec
pop
xchg
jb
fwait
mov
mov
adc
jge
nop
lea
movsb
inc
int
sub
popa
loop
stc
mov
xchg
inc
fsubrs
xlat
enter
xor
aas
call
in
rcll
pusha
inc
out
mov
inc
stc
fisubrl
imulb
out
cli
or
test
adc
cs
adc
repnz
cmpsl
jbe
push
mov
mov
out
sub
scas
jb
ret
push
stos
add
es
lods
sarl
sbb
orb
test
in
dec
cmpsb
icebp
mov
inc
jno
cmp
loopne
dec
push
push
inc
xlat
mov
xchg
std
cli
jb
lret
xchg
inc
mov
jecxz
or
in
fwait
or
cmpsb
fs
pushf
and
sbb
push
cmp
pop
cmp
xor
fsubrl
or
das
cwtl
push
loop
loopne
adc
lock
stos
mov
mov
mull
iret
mov
pop
enter
jae
push
add
lea
addr16
or
mov
es
lock
or
push
dec
sbb
fdivr
data16
cmp
push
inc
pop
sub
cmpsb
bound
jne
movsl
loop
xchg
add
bound
dec
or
or
enter
xchg
and
inc
add
in
cmpsb
adc
sub
les
clc
jmp
adc
addr16
and
mov
jmp
mov
and
imul
fsubrs
pop
fsub
outsb
rclb
mov
pop
cs
int
xchg
mov
sbb
jb
testb
mov
sbb
cltd
xor
scas
shl
mulb
sub
cmp
mov
lock
addr16
and
push
iret
jle
lcall
add
cmp
xor
aaa
xchg
nop
rolb
clc
popf
xor
rorb
call
test
dec
adc
add
les
loopne
enter
orl
push
mov
xor
xchg
lret
ja
shll
in
inc
js
leave
enter
or
and
mov
movsl
dec
test
divl
add
cmpsl
xor
cli
sub
ja
in
mov
pop
and
cmpl
add
mov
inc
mov
xorb
aaa
mov
adc
ja
scas
jns
add
inc
lahf
fcmove
andb
mov
es
test
inc
xor
es
dec
sbb
mov
fnstcw
jg
dec
out
cmp
mov
call
sub
addr16
nop
clc
leave
pop
sub
cmpsb
adc
call
je
repz
and
push
les
or
cmp
pop
push
push
adc
dec
push
imul
addr16
jl
ret
fcmovbe
or
repnz
rcr
fbstp
aas
fcompl
sbb
ret
icebp
pop
xchg
cmp
fwait
xor
test
xchg
das
daa
in
popf
stc
int
xorl
inc
out
fisttps
add
push
sbb
mov
and
fidivrs
xchg
test
xchg
aad
or
pop
sti
xor
test
dec
out
cs
std
push
outsl
xor
mov
cmp
imul
cmc
lret
popa
das
icebp
and
and
sub
add
dec
adc
adc
fadds
xlat
ljmp
mov
sbb
les
pop
push
inc
add
enter
cmp
and
cs
sub
es
pop
xchg
sub
mov
and
scas
notb
int3
mov
mov
jno
lods
mov
pop
sbb
add
dec
adc
and
push
fnstsw
dec
adc
mov
push
sub
mov
test
mov
mov
sbb
push
js
lea
cli
scas
gs
movsl
test
js
mov
jae
mov
fcomps
jns
or
lock
sub
push
popa
add
xchg
dec
lcall
add
shrl
neg
push
insl
cwtl
xchg
je
adc
fs
mov
push
xchg
hlt
into
mov
stos
sbb
dec
mov
push
sbb
xor
insl
lds
jge
cltd
aas
repnz
jl
lods
inc
xor
sbb
test
sub
sub
push
fsubrl
sbb
outsl
xchg
sti
fsub
imul
push
xor
and
mov
fxch
inc
out
xchg
pop
cmp
or
stc
pop
push
adc
pop
adc
jb
jg
mov
add
andl
push
adc
xor
fcmovbe
push
sbb
push
cmp
and
iret
test
lea
mov
enter
or
pop
lea
cmpsb
mov
sub
xor
pop
inc
cli
lcall
ret
mov
imul
loop
xchg
daa
out
int
ljmp
pop
and
aam
pop
int3
fnstcw
stc
jge
push
cld
add
addr16
xchg
sub
lahf
mov
mov
xchg
dec
and
inc
addr16
fldenv
jb
shrl
int3
inc
inc
pusha
iret
and
ss
push
es
dec
mov
inc
mov
call
mov
mov
in
clc
add
xchg
xchg
rorb
xchg
push
mov
push
inc
or
dec
in
or
ljmp
xchg
sahf
les
imul
inc
rorb
adc
sub
shl
js
xchg
repz
xor
xchg
push
mov
hlt
cli
clc
imul
sub
mov
inc
or
cmp
test
xchg
xor
pushf
repnz
cmc
nop
adc
fdivrs
mov
popaw
les
xor
xor
mov
aas
inc
sub
movsb
xlat
lret
dec
mov
push
jae
adc
pop
sbb
pop
sbb
out
sahf
cmp
sbb
dec
mov
sbb
pushf
rcll
pop
cli
pop
push
fldcw
push
sbb
rolb
fimull
mov
pop
mov
xor
push
cmpsl
or
pop
cmpb
cbtw
iret
fldl
add
cld
cmp
dec
sub
mov
ljmp
add
adc
sti
cs
imul
mov
incl
xchg
and
insb
aas
dec
arpl
adc
cmp
adc
dec
sub
jl
add
pop
pusha
xor
test
out
test
test
sub
sub
push
xchg
ljmp
pushf
fidivl
movsb
mov
or
scas
lea
mov
xor
jle
test
popf
mov
and
adc
pop
pop
cmp
dec
lea
js
pop
aaa
jp
in
jbe
ds
fsubp
adc
imul
push
in
lods
rcrb
stos
icebp
sti
dec
mov
popf
mov
lods
sub
cmp
xchg
xor
cmpsl
and
ficoms
mov
push
mov
int
inc
adc
sub
and
mov
lods
mov
dec
inc
mov
inc
or
mov
dec
loope
xor
cmp
adc
pop
hlt
leave
repnz
mov
mov
loope
sub
roll
out
xor
jnp
jne
rorb
or
outsl
push
movsl
sbb
fdivs
mov
dec
dec
mov
clc
cltd
xchg
enter
cltd
outsl
xchg
pop
js
pop
out
inc
lods
shlb
cmp
je
fwait
jno
mov
test
dec
inc
fwait
add
add
jg
pop
insb
push
call
cmc
movsl
aam
fdivl
dec
das
cmp
xorb
jno
mov
stc
hlt
mov
mov
jnp
sti
mov
pushf
ja
fnstcw
daa
adc
orl
in
push
js
xchg
and
gs
push
xor
out
cmp
push
lock
lret
hlt
cmpsl
mov
addl
mov
jg
leave
jae
dec
insb
in
fstpl
or
and
mov
hlt
ja
mov
lock
es
xchg
mov
ljmp
jne
fiadds
stos
cmp
lea
leave
mov
mov
cltd
js
adc
lea
dec
cmp
jmp
lahf
scas
cmp
std
xor
pop
lods
xchg
int
dec
lahf
out
lcall
xor
lods
mov
repnz
jg
xor
add
lahf
outsl
mov
test
jg
jge
aas
add
add
in
dec
cltd
fidivs
or
push
arpl
sub
xor
int3
pop
loopne
fcom
ss
loop
pcmpeqb
testl
inc
mov
sahf
imul
jb
lret
aam
push
xor
xchg
cld
shll
jle
sub
dec
mov
dec
aas
mov
insb
out
cmc
ss
mov
pushf
pop
lret
push
mov
jb
leave
mov
xorb
mov
movsl
mov
cs
mov
int3
xchg
fstps
repz
adc
cmp
add
loop
xchg
dec
mov
push
jmp
mov
into
inc
data16
mov
sub
adc
xlat
add
es
mov
sbb
movsl
push
mov
add
js
pop
enter
fwait
dec
scas
add
imul
sbb
and
mov
inc
or
enter
dec
lret
addr16
mov
cltd
shll
lea
push
ret
pop
pop
stos
int
inc
adc
pushf
popf
scas
and
xchg
or
cmp
pusha
mov
das
xlat
xchg
add
mov
xchg
add
cmp
inc
test
cmp
push
btr
pop
and
popf
cmp
rcrl
pop
dec
es
push
xchg
outsl
pusha
clc
inc
lret
jno
lock
xchg
cmp
mov
mov
or
jo
push
lods
dec
cmpsb
fsts
int3
lcall
insb
sub
daa
call
in
inc
push
clc
mov
mov
lahf
icebp
daa
inc
xchg
dec
lcall
int
test
dec
cmp
mov
dec
test
pop
mov
mov
test
lret
cmp
or
repz
pop
pop
push
add
fidivs
mov
fidivl
stos
mov
xor
orb
xchg
jg
and
fldt
push
shrl
in
or
loope
shl
mov
push
dec
out
mov
into
ds
jno
ret
jg
xchg
repz
aas
lea
mov
outsb
cmp
mov
out
adc
gs
pop
fisubrs
jmp
inc
adc
push
mov
cwtl
icebp
cld
pop
hlt
or
push
test
sub
lahf
inc
ja
repnz
stos
outsb
fs
into
cmpsl
insl
fs
aas
mov
lret
mov
add
adc
inc
cmp
add
out
adc
xchg
sub
mov
aaa
jg
ret
xlat
adc
mov
insb
mov
and
stc
mov
lcall
cmp
scas
lods
mov
daa
out
mov
out
xchg
push
cmpsb
repnz
xor
mov
fs
push
add
nop
iret
or
mov
nop
xor
cmpsb
lds
icebp
iret
mov
lods
mov
rorb
ret
test
cmp
out
mov
push
dec
sub
les
ljmp
dec
mov
les
shr
lcall
in
subb
movsb
imul
fadds
xor
xchg
imul
mov
ss
repnz
aam
pop
mov
nop
and
jmp
insl
popa
xchg
lods
mov
ds
mov
xor
cmpsl
and
xchg
mov
xchg
test
aam
outsl
fs
fld
lods
lcall
jge
and
hlt
cmp
sbb
pop
test
arpl
or
sbb
mov
lock
sbb
ret
loope
lret
pop
int
push
push
mov
inc
enter
pop
pop
lahf
xchg
jp
pop
push
rcll
or
mov
inc
add
sub
rorl
push
test
shlb
ja
andb
ror
ss
jle
ds
pusha
repz
out
sarl
ret
int3
sbb
push
xchg
cmpsl
shl
cs
add
je
adc
and
cmp
arpl
cmpsb
movsl
lcall
ret
test
nop
xchg
mov
fwait
aaa
push
into
addr16
inc
dec
je
out
sbb
cmc
pop
fsts
loope
mov
into
aas
mov
cli
pop
push
imul
int
add
cmp
test
stos
inc
pusha
mov
xor
lods
addb
andb
out
mov
mov
jnp
mov
data16
mov
xchg
or
sub
push
or
push
fmulp
mov
cltd
push
cmp
sahf
xchg
push
mov
pop
gs
mov
inc
nop
dec
das
push
jnp
sub
xchg
pop
mov
mov
xor
sbbl
push
icebp
or
inc
ret
mov
mov
lods
add
addr16
cmp
mov
cmpsl
insb
mov
cli
jle
sbb
xor
adc
sbb
push
jns
cmpb
jae
outsb
push
mov
out
inc
shlb
jmp
je
add
sub
jmp
lods
inc
xchg
jae
sbb
adc
call
repnz
daa
in
and
insb
test
sub
andl
lcall
inc
or
out
ljmp
sbb
mov
mov
pop
adc
or
in
jg,pn
sbb
sub
lcall
daa
xchg
bound
nop
imul
or
in
xchg
movsb
stos
js
loopne
mov
dec
xchg
enter
or
scas
int
test
mov
je
imul
jo
xor
pop
pop
cmp
dec
adc
jns
mov
or
repz
loop
pop
jge
popf
xchg
ucomiss
pcmpgtw
sub
xchg
stc
xchg
push
sbb
push
std
and
rcrb
jmp
pop
call
cmp
outsl
xchg
out
sar
test
xor
mov
insl
mov
mov
sub
dec
ficoms
test
xor
cltd
inc
shlb
adc
xchg
mov
jne
cmp
push
push
lret
mov
insb
mov
fsubrp
je
push
call
push
gs
mov
enter
mov
sub
sti
js
sub
cmp
mov
loop
in
sbb
dec
and
stos
test
sub
xchg
xchg
xchg
mov
cmp
and
adc
loop
rorl
cs
push
mov
push
rorl
inc
jo
cmp
hlt
add
inc
mov
cmpsl
pop
adc
out
inc
cmp
sub
mov
sub
inc
into
lcall
dec
fstpt
xchg
imul
and
push
inc
sbb
mov
pop
inc
push
add
cld
mov
or
mov
fcompl
loop
divl
jmp
xchg
mov
sub
andb
pop
add
iret
call
call
shlb
mov
stos
dec
xchg
ljmp
rolb
cmp
adc
scas
pop
mov
pop
cmp
enter
jns
dec
pop
cwtl
pop
ret
adc
pop
into
add
and
fimull
imul
cmpsb
xchg
jl
sub
outsl
push
insl
xchg
mov
int3
pop
add
ljmp
out
sub
xchg
xlat
adc
aas
xor
pop
popf
jae
lds
or
scas
lret
scas
adcl
mov
ficoml
lahf
hlt
or
or
inc
sub
gs
in
enter
jmp
mov
mov
lret
into
and
add
xchg
push
pop
xorb
lds
pop
mov
xchg
das
cs
mov
add
aaa
das
fidivrs
cmp
loop
jno
pop
popf
jl
push
and
addr16
mov
mov
jb
int
sub
pop
stos
cs
es
cli
lcall
rcl
rorl
insb
xchg
subl
add
lods
das
stos
lods
mov
mov
stos
js
aad
imul
jle
adc
test
out
lock
cmpsb
ficompl
sbb
aas
mov
je
fsts
pop
rolb
inc
test
xchg
loope
imul
aam
fcomps
jle
mov
cmp
stc
pusha
ljmp
call
call
aaa
roll
dec
dec
movsb
mov
mov
dec
pop
ja
or
aam
cwtl
subb
aaa
stc
pop
push
cs
or
loope
mov
aaa
ret
or
and
jle
pop
xor
inc
aam
aas
jge
xchg
push
movsl
add
cmc
inc
pop
idivl
sbb
push
push
mov
sub
ja
sti
ret
pop
repz
dec
subb
xchg
repnz
xor
dec
cld
jecxz
ficoml
lock
xchg
jecxz
shl
mov
mov
pop
push
mov
dec
mov
out
sub
inc
loope
push
mov
pop
mov
cmp
dec
arpl
or
pop
xor
adc
and
fidivrl
test
mov
and
into
gs
ret
fisttps
xchg
addb
adc
pop
ror
lds
push
cmpsl
fcomi
jo
inc
nop
fists
sub
pop
add
lret
or
inc
call
jle
insl
out
int3
clc
and
in
cwtl
lret
push
jmp
jno
mov
andb
lret
sti
jbe
mov
aam
push
mov
adc
lahf
push
mov
dec
fimuls
ror
int
xor
pop
mov
sbb
mov
aam
in
out
rolb
mov
shlb
xor
lret
jl
inc
jp
pop
xchg
ljmp
xlat
mul
mov
stos
adc
movsb
inc
add
push
dec
push
repz
cltd
pusha
andl
cmp
fidivs
jae
pop
add
mov
iret
cld
aas
cmp
pop
mov
xor
ds
mov
dec
enter
leave
mov
andps
push
lods
or
in
add
loop
pop
into
adc
mov
xchg
cwtl
vpaddd
ret
jno
lret
cmp
repnz
pop
cmp
xor
and
adc
jmp
insb
xor
in
mov
sub
cmp
xor
mov
mov
loope
out
rclb
data16
into
and
and
mov
and
lcall
dec
push
clc
add
les
jge
jmp
mov
cmpsb
inc
add
add
add
inc
dec
or
mov
dec
sahf
and
sbb
arpl
xchg
jecxz
not
and
mov
ret
mov
js
loop
inc
out
mov
jge
fnsave
lret
orl
loopne
mov
in
imul
add
stos
loop
pop
fcomps
or
add
adc
lret
jnp
pop
add
repnz
loope
lret
loopne
xchg
mov
test
xchg
loope
roll
cmp
scas
cli
jmp
xchg
dec
mov
mov
and
cwtl
lods
out
dec
add
addr16
or
repnz
mov
icebp
dec
xor
faddl
lret
inc
aaa
subb
and
and
loope
cmpb
jo
data16
test
xchg
jp
lock
inc
std
push
fs
sbb
cmp
inc
pop
inc
roll
mov
dec
ret
mov
push
and
cltd
dec
mov
out
push
call
ss
in
mov
sbb
mov
xlat
push
mov
int
pushf
test
in
in
cmp
cmp
shlb
or
fdiv
push
es
lcall
lret
call
mov
sub
stos
pop
jmp
and
mov
mov
popf
mov
notl
insb
ror
into
mov
cwtl
sub
addr16
xchg
fidivl
decl
push
popf
cmp
sbb
ja
push
fildl
ss
cs
xchg
mov
hlt
pop
sti
ljmp
sarl
mov
outsb
lock
nop
and
lods
sub
sbb
cli
sbb
add
rolb
adc
add
adc
mov
shl
shll
sub
xor
int3
cmp
xchg
es
xor
push
jmp
fcmovu
enter
lds
inc
loopne
and
arpl
mov
fisttpll
and
xchg
addr16
adc
pop
xchg
scas
and
sub
pop
xchg
push
pop
mov
jle
or
andb
jp
stc
scas
dec
lret
js
shlb
xchg
call
jo
les
sti
lods
sub
xchg
lods
dec
jnp
jg
xchg
cmp
cs
jae
movsl
pop
clc
enter
push
add
cmp
xchg
fcmovnbe
notb
repz
es
sbb
aas
cmp
xor
in
into
scas
mov
mov
xchg
rcrb
dec
out
and
dec
adc
mov
mov
add
jbe
add
cmpsb
movsl
ret
dec
shrb
jns
enter
rcrb
or
xchg
or
inc
xor
aam
pop
ljmp
mov
inc
dec
into
popf
mov
test
cmc
dec
inc
cmp
insl
pop
or
adc
scas
lret
fstpt
ds
popf
stos
pop
in
cld
sti
add
fistps
push
int3
loope
test
cmp
cmp
xor
mov
mov
xchg
leave
mov
filds
xchg
arpl
movsl
dec
cltd
movsb
scas
sti
scas
jp
mov
movsb
xor
stos
jae
lret
aas
add
or
imul
sub
and
int3
js
or
scas
ds
nop
repnz
or
pop
jmp
lea
into
dec
sbb
fs
in
xor
cmpsl
pop
cmpsl
stos
aas
into
push
push
sbb
call
in
popf
lds
cmp
insb
or
pop
cmc
in
scas
sub
push
out
outsl
push
mov
hlt
mov
scas
insb
cmpb
roll
mov
mov
dec
push
lea
adc
jnp
into
or
or
cmp
enter
cltd
jecxz
ficompl
loopne
or
jno
add
test
pop
scas
jne
loope
sarl
sar
outsl
out
pop
test
lret
js
sbb
adc
loopne
xlat
addr16
adc
insb
jns
fwait
in
inc
inc
lea
pop
inc
dec
cwtl
pop
mov
aam
jae
mov
in
xchg
xchg
and
or
pop
hlt
push
pop
dec
lds
and
scas
out
loope
aas
call
or
mov
gs
loopne
mov
fcoms
ucomiss
dec
mov
in
fildl
daa
xchg
je
sbb
cmc
xchg
cmp
fidivrl
sbb
popf
push
mov
hlt
scas
pop
popa
mov
sbb
repnz
adc
in
sub
bound
mov
xchg
idivl
cmpsb
fwait
out
popa
in
cwtl
xchg
in
pop
popa
sarb
movsb
mov
repz
call
ja
xor
aad
repnz
addr16
sub
int
icebp
dec
or
push
cli
stos
mov
inc
fsubrl
push
test
int
ja
adc
ret
jne,pn
push
mov
xor
xchg
and
dec
orl
xor
dec
mov
jnp
dec
test
nop
jo
xorl
bound
je
ror
pop
sub
fnstenv
scas
test
inc
movsl
clc
xor
je
jnp
fnsave
or
fmull
sbb
outsl
loopne
lods
jle
lock
jo
push
xchg
mov
mov
dec
je
les
add
test
repnz
mov
mov
and
out
pop
pop
or
mov
inc
lock
lret
push
jecxz
loope
push
fcoms
xor
sbb
cmp
xchg
setp
adcl
insl
or
lods
inc
in
ret
adc
stos
jnp
inc
imul
mov
cli
sbb
std
ja
mov
jp
inc
add
mov
push
mov
imul
rcll
pop
lods
sahf
sbb
push
mov
and
or
jo
pop
ret
lahf
xor
xchg
test
mov
dec
and
xchg
cmpl
pusha
mov
or
add
sbb
jp
ja
lret
pop
aaa
sbb
in
lock
popf
xchg
sbb
xlat
movsl
push
pmulhw
stc
xchg
fistps
mov
sbb
jns
int
imul
sub
xchg
movl
or
mov
mov
inc
cmp
push
in
into
xchg
dec
xchg
mov
sbb
mov
dec
pop
ror
pop
fisubrl
cmc
gs
adc
mov
xchg
sub
repnz
add
xor
rorb
lahf
jmp
fcoms
and
loop
movlps
push
sahf
cmc
loop
or
iret
imull
test
test
pop
xchg
lahf
iret
or
es
pushf
nop
popf
rol
adc
mov
sbb
ret
cmp
or
sub
push
jns
call
and
fidivrl
mov
mov
icebp
loope
fwait
loop
loop
out
sub
nop
adc
push
dec
loop
fildll
mov
sbb
push
push
in
cmp
iret
nop
mov
lret
loop
push
and
pushf
enter
sub
ficomps
jmp
pop
or
sub
mov
xchg
pop
mov
jbe
aas
lret
mov
loop
rcll
mov
pop
shlb
pop
lret
sbb
cmpsb
sub
gs
mov
es
lea
das
mov
fcompl
fdivrp
mov
adc
ret
test
push
test
idivb
xchg
xchg
xchg
frndint
imul
test
xchg
out
add
pop
inc
add
sub
les
add
or
jno
imul
or
and
inc
scas
pop
cli
mov
mov
dec
cmpsb
int
dec
test
sti
dec
arpl
test
nop
test
shlb
inc
rol
mov
xchg
jle
in
sbb
out
inc
push
or
and
pop
mov
fs
addr16
adc
addl
jl
in
cs
outsb
in
jl
xor
push
gs
lret
pop
cmp
xchg
movsl
mov
push
jnp
idivb
pop
lret
divb
int3
push
xor
test
or
jp
and
inc
and
jns
or
lcall
data16
test
mov
jae
cli
adc
xchg
ss
or
push
into
fwait
dec
pusha
adc
dec
test
into
xchg
cmpsb
in
fisubl
cltd
dec
fbld
mov
jne
cmpsb
xor
add
popf
or
mull
ljmp
imull
sub
cwtl
cmpsl
imul
sub
inc
fistl
fsts
lea
inc
out
xchg
pusha
out
sahf
addr16
pmaddwd
cs
test
mov
test
test
test
jb
sbb
jb
inc
adc
mov
pop
gs
fistpll
shll
stos
imul
loop
or
call
mov
sbb
cs
sub
lds
outsl
cmp
sbb
fdivs
sti
or
dec
mov
sub
cld
sarb
or
push
xchg
bound
xchg
mov
jecxz
gs
adc
and
movsb
pop
arpl
daa
lods
mov
les
addb
lcall
dec
push
pusha
stos
or
add
add
mov
out
sub
lods
sbb
test
mov
mov
ljmp
cmc
fistps
imul
mov
aam
ds
lahf
out
ret
daa
xor
pop
mov
fistpl
jne
insl
dec
loopne
outsl
mov
cmp
ret
pop
es
jnp
out
stos
mov
jne
push
fcoms
mov
push
js
sbb
or
jmp
iret
das
addl
insl
xchg
xor
shl
pop
mov
mov
shlb
js
xchg
adc
mov
mov
movsb
dec
pop
rclb
cmp
mov
push
jnp
xchg
jecxz
xchg
sbb
bound
dec
cmp
fisttps
arpl
ret
sub
incb
adc
mov
jns
addr16
or
fwait
ret
push
sub
push
loope
pop
leave
mov
adc
lret
xor
mov
std
cmp
pop
rol
mov
pop
jmp
ret
add
das
testl
fucomi
mov
sub
xor
mov
movsb
lods
xchg
in
jmp
mov
lock
pop
ljmp
mov
xor
push
jnp
inc
inc
xchg
or
add
nop
fbld
mov
out
jle
and
push
iret
sahf
push
pop
mov
fsubrp
enter
adcb
setns
jne
cmp
cs
adc
lcall
jo
xchg
dec
in
xlat
add
ror
sbb
adc
pop
adc
test
out
mov
jb
insl
out
mov
fsubl
lret
in
mov
push
lds
add
in
sub
push
dec
fsubrl
add
ljmp
mov
aad
cli
inc
sahf
xlat
enter
xchg
fs
adc
mov
push
dec
hlt
and
fsubr
inc
lods
lahf
pop
mov
in
mov
sbb
insb
movsb
push
jae
insl
shl
xor
jo
add
cltd
aas
and
inc
nop
sahf
and
insl
fiadds
inc
ret
mov
push
mov
je
scas
xchg
mov
popf
push
jecxz
into
push
dec
dec
xor
dec
sbb
dec
inc
dec
or
cwtl
lds
sub
push
std
pop
add
fld
fsubs
hlt
push
mov
repz
in
push
mov
and
fisttps
sub
gs
cmpsl
cltd
dec
mov
adcl
stc
cmp
les
cmpb
cmp
push
xchg
adc
sbb
adc
xor
stc
aaa
cmp
jp
pop
adc
aam
movsb
mov
sbb
or
aam
push
sahf
daa
stos
lods
dec
mov
cmpsb
icebp
adc
xchg
std
mov
jno
nop
enter
pop
clc
mov
les
add
add
lret
mov
lock
shrl
sbb
push
xor
arpl
xchg
push
or
jno
inc
mov
inc
xchg
orl
jle
xor
pop
sbbb
jnp
ret
rcll
andb
adc
lods
fidivrl
xor
xor
enter
call
mov
cli
xor
lret
fisubrs
add
lods
dec
imul
test
cmpsl
sub
cs
xorl
rcrl
adc
fsubl
or
push
and
mov
icebp
in
pop
and
shlb
mov
in
jo
inc
lea
test
aam
nop
push
mov
xorb
mov
in
inc
addr16
and
movsb
or
sub
xorl
sbb
es
mov
adc
cmp
je
addl
mov
mov
jns
jns
daa
dec
and
int
jge
inc
jecxz
xorl
aad
cmpsb
adc
fnsave
cltd
inc
pop
jp
jnp
pop
mov
lahf
adc
in
sahf
sbb
notl
push
pop
mov
in
add
enter
into
imul
imul
adc
jne
repnz
fcoms
cmp
lcall
xchg
sbb
rcl
mov
test
sbb
and
push
sbb
stos
lods
ret
push
cmc
rol
lret
jg
push
add
mov
pop
add
cmp
lret
pop
sub
xor
or
repz
clc
mov
jmp
pop
aad
lds
push
jle
lret
sub
sub
jmp
mov
sub
xchg
pop
jo
nop
clc
add
decb
and
movsl
sub
or
pop
nop
imul
jb
push
shrl
pushf
cli
pusha
adc
sub
repnz
stos
xor
fcom
imul
jmp
mov
pop
je
push
cs
clc
stc
repnz
lea
xor
lahf
dec
leave
mov
mov
loop
mov
insl
leave
stc
mov
jle
shlb
and
xorl
xchg
and
add
xchg
data16
cmp
stos
pop
jp
mov
fmuls
outsl
dec
adc
mulb
hlt
adc
testb
pusha
sbb
js
outsl
loope
ljmp
fldl
cli
pop
ret
cmpsb
insl
inc
xlat
jmp
into
arpl
sbb
adc
test
and
pop
aad
sbbb
xchg
iret
inc
or
inc
sub
outsb
loope
xor
dec
and
dec
sub
adc
push
das
jo
or
xchg
call
push
fst
aas
loopne
xchg
dec
rcrb
xor
mov
cmp
imul
jbe
pop
push
add
push
dec
pop
lods
lret
sahf
je
lea
mov
mov
popf
add
mov
nop
cli
aas
or
dec
jecxz
fs
jne
in
or
das
iret
cmp
out
jne
jp
scas
sbb
adc
int3
mov
scas
lcall
mov
cmc
lods
repz
mov
add
and
xlat
adc
in
sbb
stos
mov
push
ds
push
andb
jg
psrad
xor
push
sub
push
fildl
pop
cmp
mov
mov
cltd
and
dec
mov
adc
jno
mov
test
or
pop
mov
out
lods
pusha
arpl
xchg
mov
inc
in
rcll
cmp
adcl
cmp
jo
mov
jecxz
pop
push
repz
push
push
jno
mov
mov
mov
pushf
cld
inc
mov
scas
jg
push
push
into
xchg
xor
sti
mov
lahf
pop
xchg
imul
jb
dec
cmp
jmp
sub
jnp
push
push
je
mov
icebp
pushw
arpl
push
aam
arpl
and
mov
pop
mov
cltd
push
jo
fcmovu
adc
pop
or
jo
add
scas
aam
add
dec
cmpsb
sbb
test
subl
cmp
fidivrl
or
xor
stos
xor
and
mov
je
xchg
jge
xlat
scas
in
adc
jp
add
fs
inc
fcmove
or
xchg
dec
in
jp
pop
cwtl
mov
cli
aas
dec
sbb
sbbl
fucomip
in
mov
jecxz
mov
inc
mov
mov
xchg
add
xor
scas
jmp
adc
nop
sbbl
aad
or
jne
jl
loop
sub
rorl
mov
scas
mov
mov
cmp
icebp
imul
call
xchg
jb
fisttpl
movsb
jb
jns
mov
adc
outsb
outsl
or
cli
xchg
jp
outsl
push
loope
mov
outsl
imul
xchg
xchg
lds
jge
xchg
xchg
rolb
mov
ds
sub
in
sbb
shrl
ret
or
ffreep
inc
test
and
dec
add
int
js
nop
adcl
fsubs
lcall
cmp
add
jmp
leave
mov
and
lret
dec
cmp
mov
mull
cwtl
sbb
cmp
cmpsb
out
roll
pusha
addl
das
push
ret
lock
inc
and
add
sbb
outsl
sbb
sub
sub
push
add
scas
in
out
sub
dec
sub
icebp
add
cld
push
sub
sub
stos
aam
push
outsl
push
and
cmp
push
jl
lea
pop
mov
enter
jge
aam
pop
mov
adc
inc
adc
gs
aas
push
fcompl
or
js
roll
sbb
xchg
push
cmp
cmp
testb
mull
sbb
sub
pop
mov
push
inc
xchg
jne
mov
xor
mov
adcl
or
sti
lock
mov
icebp
loop
lea
call
inc
btc
mul
pop
dec
adcl
repnz
mov
mov
xchg
inc
ror
int
decb
mov
insl
ret
jne
sub
jo
inc
pop
test
repnz
nop
mov
in
xchg
cmp
and
add
push
leave
push
dec
mov
xchg
inc
xor
mov
insb
push
add
mov
mov
jg
mov
adc
xchg
xor
das
cmp
mov
cmp
pop
aad
push
inc
adc
popa
xor
pop
xor
pop
cmpb
out
int3
psubq
pop
pop
cmp
add
nop
andl
imul
mov
cli
fldl
mov
cmpsb
andl
das
add
cmp
xchg
leave
lods
pop
dec
and
or
idiv
bnd
divb
mov
icebp
rcrb
mov
iret
ffree
mov
jo
push
xor
push
test
les
jge
test
add
mov
lock
mov
fnstcw
jg
push
sbb
and
sbb
in
fs
out
cmp
rcll
sbb
sub
fadds
stos
add
lret
xchg
jns
pop
xchg
push
sub
fdivs
mov
xor
and
mov
ja
pop
insb
negb
cmp
push
dec
xchg
cmp
xchg
int3
sub
jecxz
test
jge
xorb
mov
mov
dec
out
pop
pop
fidivs
sbb
mov
mov
lds
jecxz
dec
int
fstl
fcmovnb
ret
fidivrl
fcmovu
orb
dec
inc
add
bound
add
insl
mov
mov
jg
sbb
xchg
repz
in
pop
imul
insb
push
jg
rcrb
clc
sahf
add
inc
sub
insb
aam
jge
daa
in
mov
xor
mov
push
nop
test
sub
sbb
push
out
xchg
jbe
jge
jl
inc
inc
hlt
add
mov
insl
testl
and
fsubrl
lcall
or
test
cltd
xchg
and
stc
sub
mulw
lds
push
push
pop
jns
lods
mov
mov
into
or
imul
jne
sbb
cmpsl
pushf
stos
cmp
xor
sti
mov
add
ds
aaa
mov
je
rorl
loope
out
sbb
sbb
mov
repnz
pop
mov
pusha
sub
xlat
popf
mov
cmpsl
jae
adc
push
inc
xlat
fildl
or
adc
push
sbb
and
sub
add
imul
fmuls
sub
ret
mov
das
out
or
sbbb
mov
add
stos
xor
pop
imul
or
cli
mov
pop
data16
insb
fisubrl
and
cmp
sub
jle
scas
xlat
dec
ret
or
lock
out
clc
into
lret
stos
push
fldt
pop
pop
mov
div
or
insb
divl
xchg
leave
dec
sbb
xchg
jg
test
mov
inc
pop
movsb
pop
fildl
jbe
imul
data16
dec
out
add
push
jp
scas
xchg
pop
scas
fiadds
arpl
lods
in
jne
or
ret
cmpsl
pushf
lahf
mov
xchg
or
test
mov
or
leave
arpl
pop
in
ljmp
and
jmp
jmp
repz
imul
fldlg2
jbe
jecxz
push
insb
xchg
rclb
out
out
jecxz
mov
popf
mov
repnz
leave
sbb
lock
mov
xor
int
jns
push
or
jle
pop
imul
sbb
ret
test
mov
mov
popf
test
rorl
adc
iret
shlb
ret
out
pop
clc
enter
dec
js
scas
popf
cmp
popa
mov
icebp
pop
fdivrl
stos
push
cmpsl
movsb
out
xchg
adc
lcall
mov
loope
dec
pop
pusha
lahf
jp
hlt
fisubrl
scas
scas
inc
cmp
in
aaa
ret
push
cmp
imul
add
aas
cmp
dec
pop
dec
adcb
cmpsb
xchg
sbb
in
ja
jl
stos
ret
data16
fwait
push
inc
sarl
lods
jl
in
ja
lret
xor
inc
sbb
jnp
out
out
xor
or
into
jmp
aam
xorps
fiaddl
inc
push
xchg
push
rcrl
jns
stc
push
push
cmpsl
out
nop
fwait
scas
ja
inc
outsb
loop
sbb
inc
aaa
xor
dec
sub
aad
out
call
pop
pop
push
fidivl
stc
loop
xor
hlt
jno
xchg
xchg
pusha
mov
out
test
mov
ret
ret
data16
mov
call
rcrw
pop
lret
mov
ja
movsl
psubusw
into
fsubs
mov
push
sub
aaa
add
jg
lods
mov
mov
test
in
xchg
ljmp
sub
xor
test
dec
bound
dec
shrb
sub
icebp
aaa
jno
bound
push
cmpsl
fsts
mov
fcomp
pop
sbb
pop
bound
jae
or
rolb
pop
mov
in
mov
push
sbb
sbb
xor
dec
mov
sahf
fisttpll
sahf
out
mov
pminsw
arpl
push
arpl
shl
pop
push
fpatan
push
xor
mov
popl
clc
daa
stc
push
pop
imul
test
nop
mov
int3
dec
push
pop
push
lahf
ret
popf
mov
fwait
mov
inc
mov
mov
mov
psllw
sbb
adc
in
lahf
outsb
inc
addr16
pop
cmp
mov
inc
xor
fstp
push
imul
push
jo
pop
jp
in
js
jge
ja
lret
test
jno
or
imul
cmpsb
insb
adc
pxor
lods
add
cwtl
dec
imul
sbb
rcl
pop
notl
jmp
xchg
shrb
std
mov
cli
arpl
xchg
dec
clc
loopne
ljmp
out
lahf
cmp
iret
imul
xor
push
sub
out
jmp
leave
mov
lcall
add
pop
jmp
mov
sar
push
and
movsb
mov
adc
das
mov
push
inc
mov
ret
xor
cli
xorl
pop
iret
lock
mov
inc
mov
out
pop
mov
test
pop
mov
pop
inc
adc
je
ljmp
or
or
ja
jecxz
jne
cltd
push
sub
sbb
cs
in
mov
jle
rcll
dec
mov
or
pop
les
inc
sbb
xor
shl
pushf
imul
inc
out
sbb
testl
jmp
cmpl
dec
push
and
add
cmp
add
jecxz
xor
bound
sets
cmp
ljmp
stos
in
popa
gs
adc
push
adcl
sti
and
add
sub
xchg
aad
push
lret
and
int
dec
mov
mov
test
mov
mov
and
sub
jb
andl
xor
sbb
mov
gs
push
adc
mov
or
mov
xchg
xor
loopne
je
push
jg
into
xor
sbb
mov
lods
sub
xor
push
sub
inc
mulb
cmpsl
pushl
inc
or
aas
and
fwait
outsl
jae
ror
out
aad
dec
int
and
rcll
cli
stc
push
jmp
add
mov
add
mov
mov
cmpsl
wrmsr
xlat
push
sub
add
js
and
stc
cltd
push
ficompl
es
xchg
mov
out
push
push
fsub
or
jbe
data16
xchg
fcoms
cwtl
int
sbb
sarl
xor
sbb
sub
and
sub
cmp
pushl
pop
mov
add
cmpl
rolb
mov
sub
fwait
or
bound
hlt
mov
mov
dec
test
loope
mulb
mov
ffree
cs
sub
inc
iret
jnp
test
cmpsb
sub
fdivr
adc
test
mov
sbb
xorb
sub
or
ja
pop
dec
imul
mov
mov
mov
jge
loopne
xor
shlb
mov
pusha
jl
push
jecxz
outsb
ljmp
and
lods
lea
pop
imulb
sbb
and
call
mov
popf
sub
cmp
nop
cmp
cmpsb
clc
lcall
add
mov
or
mov
cs
xlat
fnstenv
out
push
pusha
outsb
mov
scas
xchg
fsqrt
sahf
and
faddl
inc
push
and
inc
outsl
mov
outsl
dec
push
sub
stos
out
lret
das
imul
dec
add
push
push
pop
sarb
mov
enter
push
sub
sahf
insl
or
jle
cmp
scas
xor
inc
dec
sub
in
out
inc
loop
jb
jns
mov
xchg
xor
sbb
dec
ret
sbb
jp
movq
data16
or
or
dec
mov
xchg
push
ret
ficomps
xchg
iret
andb
jnp
jg
aaa
or
imul
in
push
sbb
xchg
shll
ja
adc
frstor
shll
pop
test
aas
sub
loop
and
mov
loopne
mov
or
push
popf
sub
les
in
mov
lods
hlt
mov
sbb
or
loop
cmp
push
call
inc
mov
xchg
rcrb
lock
mov
rcrb
pop
ljmp
mov
repz
or
dec
int
loope
fnstenv
mov
push
ljmp
mov
frstor
popf
push
xor
sbb
xchg
cmp
adc
aam
daa
loope
popa
clc
in
jecxz
or
in
ja
jecxz
sahf
mov
fstpl
pop
inc
and
outsb
lret
gs
mov
jp
gs
lock
push
ds
movsb
les
push
nop
js
std
divb
add
daa
inc
push
sbb
or
shll
inc
inc
add
dec
fdivr
push
bound
pop
lcall
push
dec
mov
pop
icebp
into
loope
jo
bound
aad
jns
adc
pushf
es
sti
cmp
aam
ss
xchg
mov
ss
xor
jbe
xchg
lods
cmp
jo
fists
jecxz
inc
jae
pop
adc
decl
fdivrl
mov
xchg
ror
lock
mov
test
scas
fstps
jmp
adc
mov
cmp
iret
movsb
call
add
fstpl
xor
in
roll
fsubp
addb
push
push
and
shl
in
or
dec
push
cltd
sub
jle,pt
dec
fcom
insl
loope
js
enter
push
clc
mov
stos
les
jmp
pop
cltd
nop
or
arpl
cld
loop
lea
xchg
sbb
cs
xor
cmp
inc
push
mov
test
es
sbb
dec
mov
pop
lea
inc
and
and
ljmp
aam
sbb
inc
mov
cmp
jmp
dec
add
cmp
or
jo
mov
and
mov
out
push
mov
aad
push
das
cmovle
jbe
aam
xchg
push
out
mov
daa
add
addb
dec
jl
mov
ds
add
test
neg
mov
fdivrs
push
add
lock
jmp
xchg
jae
and
fdivrs
sbb
int3
movsl
push
hlt
orl
jmp
insb
push
std
xchg
pop
and
mov
ljmp
int3
and
inc
imul
jecxz
rcrl
adc
sbb
out
and
pop
adc
aam
into
popf
in
mov
movsb
add
sbb
fsubrl
push
sahf
aam
call
js
stc
aaa
xchg
cltd
pop
loop
adc
mov
fdivrl
jno
pop
and
fstpl
sbb
sbb
inc
cs
cltd
sub
xchg
cmpsl
adc
addr16
std
inc
add
popf
rcrl
ret
in
ret
dec
roll
lea
adc
push
test
dec
insb
xchg
push
testl
xor
cmp
outsb
jg
pop
xor
sti
lret
in
cwtl
dec
xchg
pop
fisttpl
mov
xchg
xchg
mov
push
std
add
andl
ds
jp
pop
cmc
jecxz
mov
mov
jl
sub
inc
push
fdivrl
scas
sahf
nop
fsubrl
dec
in
push
mov
je
cmpsl
data16
insl
aad
adc
jne
mov
in
sarb
jl
ljmp
roll
call
cmp
outsl
cmpsb
xor
fsts
add
xchg
clc
or
test
pop
inc
xchg
xchg
jae
push
pop
xchg
rcpps
int3
test
int
xor
das
js
pop
add
mov
sar
loop
push
sbb
jg
dec
rorl
je
mov
xor
dec
push
adc
rcrl
push
repz
push
outsb
out
mov
cmp
mov
mov
push
popa
cmpb
scas
cmpsl
xchg
or
mov
cmp
adc
sbb
orl
xchg
mov
lock
inc
ffreep
repnz
fwait
cmp
sub
aam
add
lret
mov
or
pop
je
push
into
imul
pop
nop
or
inc
pop
xlat
inc
clc
imul
xchg
push
dec
and
and
push
cmp
nop
repz
jbe
sbb
and
iret
mov
xor
and
shlb
inc
adc
cmpsb
adc
jae
xchg
pop
das
dec
cmp
aas
arpl
movsl
dec
add
sbb
lahf
jecxz
push
test
sub
bound
or
push
xchg
inc
pop
push
cmp
and
mov
xor
jecxz
pop
roll
xor
inc
cmpsl
dec
or
in
movsb
pop
push
sbb
mov
mov
out
or
call
pop
add
lods
sti
sbb
call
outsb
adc
jnp
jne
idiv
lods
std
clc
icebp
mov
and
dec
adc
adc
scas
out
outsl
fildll
xchg
notl
mov
xor
mov
out
push
arpl
insl
add
adc
push
mov
jns
jle
rolb
pop
and
mov
pop
lock
std
push
ljmp
mov
mov
xchg
mov
pop
cmp
pop
pusha
xor
out
push
inc
shl
jnp
bound
in
test
adc
sbbl
imul
jnp
jmp
adc
mov
movsb
loop
mov
dec
dec
push
addr16
shll
push
inc
push
mov
cmp
test
mov
or
mov
add
or
mov
enter
mov
outsb
lds
push
cmpb
ss
cld
mov
pop
loope
and
jns
dec
frstor
rcll
in
out
jns
pop
push
adc
std
mov
adc
test
negb
mov
sbb
dec
inc
and
or
test
cmp
or
cmp
jo
mov
sub
test
lds
pusha
stc
jnp
inc
rcrl
aam
dec
jb
dec
loop
mov
fisubs
mov
lods
ja
inc
pop
pop
lahf
add
inc
mov
loope
fists
mov
loopne
or
and
stos
mov
mov
fisttpll
iret
cmp
bound
xor
lret
jg
sbb
aam
iret
stos
push
in
sub
xor
xchg
rcrl
out
movsl
aas
cmc
test
enter
scas
push
je
je
push
push
jbe
movsl
xchg
lds
xor
lahf
jnp
xchg
idivb
mov
or
cmp
xchg
enter
aam
push
lea
xor
cmp
and
rorl
adc
sbb
xchg
mov
ss
insb
fnstenv
sbb
jne
inc
mov
iret
jl
mov
lods
mov
jecxz
add
out
sub
enter
sbb
pop
in
mov
xor
cwtl
imul
inc
push
in
repz
xlat
or
out
xchg
add
int
insb
es
pop
pop
fsubr
rclb
mov
in
shll
cltd
int
cmp
out
jmp
cmp
cmp
ss
or
shld
es
mov
adc
loop
popa
adc
pusha
bound
inc
pusha
adc
je
lock
inc
add
out
push
pop
fs
ja,pn
xor
and
jo
shrb
push
sub
sub
movsb
lret
int3
rcll
iret
jns
adc
dec
sub
sti
xchg
sub
out
call
xor
xor
fsubr
pop
sbb
mov
mov
push
jmp
adc
adc
and
mov
shll
adc
mov
leave
jmp
add
daa
xor
loop
mov
data16
loope
scas
adc
xchg
out
ds
sarb
ja
ja
sub
out
lret
inc
repz
xchg
das
mov
push
push
push
shl
sub
rcll
scas
repz
jmp
loop
xchg
aaa
jg
inc
lret
and
daa
aas
inc
rclb
mov
mov
popf
in
push
pop
scas
cltd
xchg
and
xchg
mov
and
in
xchg
imul
test
test
sarb
pop
arpl
pop
jg
or
cs
clc
data16
mull
pushf
in
mov
imul
insl
mov
icebp
mov
rcll
out
into
loop
test
out
push
mov
aaa
pop
mov
ret
fcoms
or
or
ljmp
rol
outsl
lret
mov
das
xchg
sbb
loopne
jmp
or
add
jecxz
cmpsb
gs
outsl
dec
mov
loop
and
pop
loope
call
jp
and
xchg
push
lods
xorl
and
adc
mov
pushf
test
xor
mov
jle
push
push
movsb
ficomps
pop
test
in
dec
stos
cli
mov
fcmovnbe
lods
sub
ljmp
push
pop
stos
mov
inc
daa
loop
aam
lock
pop
jg
ds
je
dec
imul
loope
sahf
xlat
adc
jp
push
mov
movsl
mov
and
and
aas
jno
lea
jmp
test
test
fdivrp
orl
mov
adc
aaa
aam
and
and
xchg
lods
mov
or
int
mov
push
es
add
and
lcall
xchg
push
js
mov
sub
push
lcall
and
adc
mov
sbb
push
lods
enter
adc
pop
push
jne
jmp
aaa
sbb
push
sbb
leave
sub
fnstcw
pop
fs
data16
subl
jno
pop
fnstcw
shll
fsts
in
ljmp
sbb
mov
push
inc
jns
fcoml
fisubl
push
testb
xor
pusha
fwait
aam
out
pushf
out
or
cld
scas
mov
push
jge
pop
inc
mov
inc
pop
push
in
inc
cmp
lcall
leave
and
xchg
bound
enter
data16
loopne
insl
pop
cwtl
sarb
cmpl
push
dec
xchg
push
jbe
inc
jnp
out
leave
mov
in
lds
hlt
popf
sub
jl,pt
je
jnp
or
xchg
and
mov
mov
or
jmp
in
and
leave
inc
ror
dec
sarb
inc
adc
jp
or
xor
fidivl
adc
mov
sarl
test
or
mov
cmpsb
cmpsb
push
push
inc
push
fstps
xlat
push
mov
jmp
setno
push
mov
mov
xchg
stos
add
stc
pop
cli
das
leave
movsb
popf
pop
jne
popf
pushf
andl
sti
nop
outsb
insb
cmp
popa
fnstcw
out
jnp
and
or
add
push
mov
mov
je
mov
push
pop
xchg
jecxz
xor
push
sub
hlt
pop
add
ja
in
mov
fcoml
movsl
aam
or
sub
xchg
xor
test
cmp
mov
lahf
outsb
xor
mov
inc
jae
lea
stc
aas
fnstsw
mov
loopne
hlt
mov
push
pop
dec
in
and
aaa
mov
repz
pop
out
sti
repz
inc
ja
sub
cmp
fnstenv
leave
icebp
mov
jo
lcall
mov
xchg
lret
jl
negb
int3
les
mov
xor
fxch
outsl
mov
icebp
sub
or
push
fstpl
fwait
mov
push
sahf
arpl
and
add
dec
push
xor
push
pop
or
xchg
sbb
lahf
in
jle
movsb
sub
pop
pusha
fdivrs
jns
leave
cmp
mov
sub
add
clc
jne
inc
sarl
in
pop
push
xor
lock
cmp
popa
ficoml
jno
call
cmpsl
add
mov
jne
mov
daa
lahf
sbbb
les
sarb
xor
cwtl
jno
xchg
out
in
mov
xor
mov
sbb
stos
aas
fdivl
aaa
loope
xor
cmp
cli
jecxz
xchg
shl
mov
xchg
and
pop
sub
fadds
rorl
scas
sahf
cmpsb
shrl
ret
inc
mov
sub
pop
push
mov
ljmp
out
mov
jle
add
xor
nop
xchg
fstpt
push
stos
adc
bound
xor
and
pop
test
pushf
and
pop
inc
mov
inc
pop
arpl
mov
adc
pop
add
lea
xor
gs
xor
movsb
shr
and
adc
aam
fsubl
lods
push
jae
popf
push
test
cs
cmp
lcall
in
fildl
lods
sbb
sub
push
cmpsb
enter
cmp
xchg
adc
cmp
xor
lahf
inc
jle
dec
add
mov
inc
inc
shll
jno
sbb
aaa
inc
nop
xor
lock
and
fwait
dec
sub
push
test
pop
ficoms
push
out
aam
lcall
insb
dec
bound
lea
xlat
and
cmp
das
ja
es
ljmp
or
js
loopne
jno
dec
add
and
lret
in
cmp
push
loope
stos
xor
xorb
leave
dec
pop
stos
cmp
in
inc
push
aam
dec
mov
lock
dec
mov
xor
jp,pt
inc
xlat
pop
fwait
inc
pop
inc
sub
outsb
mov
data16
adc
jo
arpl
mov
fisttps
shrb
filds
test
push
adc
jmp
fwait
mov
adc
add
shl
es
iret
inc
divl
sti
jmp
shll
int
mov
pop
xor
pop
mov
and
ficoms
push
testb
lds
addr16
and
push
dec
inc
mov
scas
mov
les
cwtl
fwait
enter
adc
dec
mov
mov
push
push
mov
in
mov
repz
lret
int
jl
ficomps
add
dec
push
pop
aas
fildl
insl
stc
cmp
scas
dec
aad
negb
dec
lret
mov
xor
pop
jge
or
jmp
adc
jnp
jmp
push
sub
push
in
lret
stc
in
clc
shl
sub
iret
repz
sbb
xchg
mov
insl
dec
jns
dec
mov
fiaddl
ljmp
pop
xchg
mov
in
bound
mov
enter
mov
sbb
jg
fcmovbe
into
jmp
xchg
iret
dec
movsl
lcall
dec
imul
rolb
sbb
sbb
insb
arpl
add
mov
jp
dec
xchg
xorl
push
out
jae
loopne
hlt
push
jbe
ja
pop
xchg
jge
data16
pusha
pop
mov
inc
cli
pushf
jl
in
imul
dec
push
popf
pop
fildll
das
xor
push
adc
pop
and
ret
cltd
mov
mov
add
add
sbb
dec
sub
sbb
cmpsb
jne
fisttps
mov
into
add
mov
adc
dec
mov
fnstcw
das
inc
dec
fwait
push
add
push
inc
dec
stos
pop
jmp
push
or
jo
jle
ds
int3
cs
pop
int
js
repz
pop
stos
stos
push
nop
loope
cwtl
push
in
and
sub
popf
dec
jns
stos
pop
sub
insb
or
push
pop
mov
roll
inc
dec
and
add
xchg
adc
ficoml
push
or
sahf
cmp
std
fdivl
pop
nop
jecxz
arpl
adc
mov
cmpsl
loopne
adc
add
js
sub
cltd
jae
das
mov
cmp
scas
in
mov
negb
xlat
call
add
scas
jbe
test
or
loop
xor
pop
outsl
cmp
jl
xchg
leave
mov
push
aaa
in
lret
daa
inc
push
sbb
shl
xchg
sbb
adc
add
and
cmp
out
push
mov
pop
inc
ret
cld
hlt
aas
jmp
or
pushf
lods
mov
pop
jo
mov
mov
aam
add
cwtl
ss
repnz
pop
jns
rorl
mov
in
stc
jle
dec
roll
xchg
adc
xor
notl
popf
adc
xchg
fcompl
push
adc
mov
dec
push
fucomip
sub
imul
pop
add
test
push
pop
adc
icebp
ret
ss
movntq
out
loope
and
in
or
movsl
das
jle
loopne
or
rolb
int
inc
add
mov
mov
shl
push
pop
lods
es
ja
test
mov
jae
ret
int
jb
xlat
cmc
xor
xchg
adc
je
ds
pminub
test
push
mov
popa
leave
cmc
mov
and
push
jl
call
fsubrl
sub
lock
std
arpl
ja
inc
rcr
jg
sbb
popa
nop
sbb
fwait
dec
cld
sub
int
pop
fnstsw
and
lods
and
or
and
mov
mov
inc
or
rolb
mov
sub
or
cwtl
jno
add
inc
sub
and
sbb
push
flds
xchg
pushf
lods
bound
mov
inc
push
mov
pop
dec
jb
lahf
or
in
nop/reserved
sub
sarb
mov
lret
mov
das
neg
iret
xchg
test
sbb
xor
pop
mov
stos
xor
out
add
pop
daa
inc
or
cs
lods
xchg
pop
cmp
jge
xchg
mov
stos
arpl
inc
mov
mov
pop
inc
mov
mov
stos
imul
pop
popa
xor
mov
and
mov
push
mov
std
call
add
shll
adc
inc
gs
push
pop
notl
pop
mov
pshufw
in
jno
push
aaa
jmp
mov
daa
fildl
xor
loopne
lret
fwait
mov
movsb
xor
adc
jp
imul
in
jp
sub
adc
jl
cmp
out
add
stos
inc
jmp
sub
jbe
xor
movsb
jns
fcoms
movsl
das
mov
xor
loopne
push
dec
lcall
lret
lcall
bound
nop
push
sub
cmp
inc
xchg
cli
insl
out
rorl
xor
fwait
icebp
xor
aam
sub
ss
cwtl
scas
pusha
add
sub
dec
adc
aam
pop
out
mov
es
xorl
arpl
bound
and
es
mov
xchg
mov
mov
in
xchg
and
in
mov
xchg
or
mov
bound
cmp
sbb
inc
sbb
adc
sbb
repz
daa
mov
xchg
js
or
cli
mov
add
shlb
mov
and
bound
sbbb
sbb
lahf
cmpsl
das
in
sahf
sub
lods
inc
push
lods
je
subb
icebp
inc
cmp
popa
addr16
js
pop
fwait
xchg
xchg
dec
negb
aad
idivl
loope
pop
mov
ja
dec
rclb
cld
movsb
push
aad
repz
adc
ret
jmp
test
out
push
movsb
jno
sub
xor
fidivs
jg
dec
add
jo
cmp
lahf
out
push
je
mov
cmp
imul
and
sub
cmp
xor
iret
sbb
mov
xchg
pop
fbstp
push
inc
jg
filds
jg
xor
les
popa
lcall
lret
loopne
mov
jg
xor
test
bswap
sahf
jno
gs
stos
outsl
arpl
loopne
adcb
ja
rorb
je
adc
jne
in
cmp
dec
out
inc
lea
adc
add
or
aaa
xchg
lock
push
fstpt
test
or
insb
xchg
notb
xchg
jo
mov
xlat
mov
xor
sti
sub
push
imul
xchg
pop
mov
cmp
jae,pn
jnp
sub
es
out
or
icebp
jmp
and
xchg
mov
in
add
push
fstpl
inc
lods
push
dec
mov
mov
lea
mov
and
lret
inc
ds
jo
adc
iret
mov
xchg
jbe
xchg
in
nop
divb
pop
push
cmp
xchg
jb
fdivs
and
lea
jbe
mov
js
mov
rcrb
adc
ja
out
xchg
jns
testb
aad
xchg
cmp
frstor
xorl
data16
mov
jbe
movsl
ficompl
mov
hlt
hlt
cwtl
mov
mov
and
and
jg
dec
sarb
into
mov
iret
sti
sarl
stos
pop
xchg
jmp
cld
cmpsb
adc
outsl
ljmp
jmp
mov
xchg
xchg
dec
mov
lcall
pop
push
sbb
mov
jns
fnsave
cli
xchg
dec
xor
jns
xchg
jge
mov
lds
fs
add
lods
pop
xchg
in
out
jno
std
adc
add
sarl
mov
mov
jmp
stc
xchg
cmp
cmpl
xor
and
ror
jg
sbb
dec
jecxz
and
fxch
adc
dec
lret
xchg
push
addl
pop
push
jmp
stc
sub
sbb
pop
stos
adc
jl
and
inc
jno
pop
push
nop
sbb
push
pop
insb
pop
mov
jo
orb
add
pop
xchg
ret
xchg
in
push
adc
xchg
adc
and
sbb
dec
jle
add
push
jb
jl
pusha
out
dec
jbe
ljmp
pusha
call
andl
stos
or
fcompl
or
xchg
xor
mov
aam
arpl
xchg
shlb
dec
cmp
sub
fldenv
stos
imul
into
xchg
decl
xchg
insb
es
in
dec
push
push
ljmp
cmp
les
shrl
dec
pop
or
mov
xchg
pop
xor
ret
sti
mov
or
mov
out
pop
push
sub
mov
push
jp
aaa
mov
stc
pusha
mov
mov
aam
jg
cld
repz
mov
adc
gs
stc
xchg
int3
push
lahf
orl
sbb
jmp
in
push
out
in
dec
out
and
out
outsl
imul
aam
ds
or
xchg
or
lret
call
fsubrp
scas
mov
mov
sub
add
or
cmp
jno
dec
jbe
pop
in
sahf
sub
movsb
mov
jbe
pop
jns
dec
or
push
add
xchg
rclb
and
repz
push
xor
add
jbe
lea
mov
cmp
in
fisttpll
inc
nop
test
sahf
out
gs
cmp
orl
sub
ficoms
shr
mov
jg
xlat
add
jg
jne
repz
push
js
lods
mov
jg
pop
in
and
adcb
cmpsl
push
loopne
mov
mov
stos
dec
push
popf
pop
lods
jge
int
adc
mov
cli
cs
xor
loop
add
testl
xchg
adc
gs
dec
mov
ffree
xor
jno
lahf
and
pusha
jo
jp
adcl
lret
inc
push
ljmp
je
sub
sar
rcr
xorb
les
mov
dec
loopne
mov
dec
add
mov
jge
ljmp
int3
pop
repz
cwtl
insb
das
iret
sub
fistl
pop
mov
or
inc
negl
popf
mov
push
jg
loope
popf
mov
arpl
ja
pop
and
xor
loopne
and
out
clc
fldl
jbe
lahf
imul
das
es
push
and
inc
test
loop
jno
add
aam
lock
lret
orb
lret
cmpsl
mov
fucomip
lock
lds
jmp
mov
jb
jle
or
cmc
in
jmp
test
jmp
pop
inc
leave
sub
cmp
jno
or
cmpsl
rcll
into
enter
xlat
andb
push
call
popa
xor
loope
shlb
out
aas
push
pop
xchg
pop
int3
adc
cs
mov
lock
std
jnp
add
pop
scas
mov
mov
cli
fsubs
adc
xchg
jmp
xor
cld
push
sub
pusha
sti
xchg
in
outsl
ret
stos
es
mov
int3
sbb
or
jae
movlps
mov
push
or
dec
jae
out
add
test
adc
in
popa
in
pop
sbb
call
test
flds
sbb
cmpsl
or
push
data16
adc
insl
int
pop
mov
jne
mov
cs
stos
imul
cmpsl
pusha
cmp
cltd
imul
test
in
jmp
or
shr
inc
rcll
psubusw
mov
mov
lret
xchg
out
pop
movl
push
dec
cmp
jne
xchg
arpl
jp
jb
into
mov
push
cmp
test
sub
and
movsl
fisubl
add
mov
push
inc
inc
jnp
cmpsb
xor
les
mov
shufps
bound
pop
out
add
lds
sbb
cmp
ljmp
push
std
or
inc
cmpsl
fidivs
lret
scas
sahf
pop
inc
pop
pop
mov
jne
push
mov
fistpl
ret
xor
cmp
pushf
and
flds
pop
loopne
sub
sbb
adc
and
and
or
cmp
data16
pusha
lahf
dec
popl
dec
push
mov
cld
pop
dec
mov
ss
adc
pop
cld
fstpt
sbb
inc
icebp
sarb
sub
andl
xor
sbb
ds
xchg
nop
ds
sbb
sbb
sbb
and
sub
lret
jle
repz
loopne
pop
xchg
add
gs
sub
int
push
dec
cwtl
addps
dec
sarb
push
sub
nop
xchg
imul
jp
jmp
mov
xchg
pushf
or
ljmp
pop
xchg
fisubrs
not
andb
rclb
and
and
xchg
or
addr16
roll
push
cmp
scas
lea
pop
subl
out
push
addr16
push
or
je
rclb
pop
loope
push
fs
ffree
mov
test
push
mov
je
jle
sub
lds
inc
dec
into
and
faddl
mulb
andb
mov
movsl
adc
dec
or
jnp
stos
fildll
call
cld
jb
or
ret
ja
xor
adc
cmp
out
dec
inc
push
mov
les
mov
cmpsb
fcoml
test
out
pop
dec
cmp
pop
and
jp
sbb
jno
mov
lcall
test
cmc
add
ljmp
cwtl
ret
cwtl
add
in
push
push
or
dec
mov
daa
cwtl
cmc
pushf
mov
jl
or
outsl
repnz
push
lock
loope
aam
push
dec
pop
jp
ljmp
mov
mov
aad
inc
xor
mov
push
sub
int
pop
test
mov
xor
mov
ljmp
jne
sbb
xchg
push
or
jno
outsl
pop
jp
daa
and
and
add
push
outsl
push
mov
fidivrl
or
mov
dec
mov
mov
cmp
jnp
mov
sub
andl
and
loopne
mov
or
or
sub
ficomps
mov
sbb
rorb
outsl
repz
loope
mov
mov
aad
mov
and
adc
repnz
addr16
mov
xor
mov
in
aas
mov
push
jecxz
pop
jp
or
cmp
lea
push
mov
jnp
xor
outsb
mov
mov
imul
and
ds
inc
cli
divb
fs
add
sbb
jmp
push
bound
std
das
inc
mov
or
sub
std
jns
jnp
mov
cld
mov
add
leave
add
pop
sbb
xchg
push
hlt
out
popa
les
stc
out
sarl
insb
or
lea
inc
ss
popa
jae
mov
cmpsl
push
or
js
aam
insb
loope
and
lret
jns
aam
rorb
lret
fldt
sbb
lock
mov
adc
mov
jno
push
dec
out
xchg
dec
push
movsl
push
sbb
jecxz
inc
test
jl
lret
test
out
outsb
sbb
addr16
push
lock
and
mov
and
into
cld
les
adc
push
call
pop
dec
jno
jle
push
add
cmpsb
fdivs
push
sub
outsb
andb
sbb
xchg
sub
popf
cs
jmp
mov
es
cwtl
or
push
les
push
aad
jmp
push
push
sti
gs
sbb
jo
cwtl
sarb
jo
xor
add
imul
or
int3
imul
lcall
dec
pop
orl
out
adc
cmp
dec
pop
imul
in
popf
pop
sahf
movsl
pop
jmp
fwait
jae
stc
mov
clc
xchg
or
xchg
jo
rcr
cmpsl
sbb
mov
js
mov
add
push
dec
leave
adc
cli
das
xchg
jns
notb
outsl
pushf
sub
mov
push
ss
pusha
ljmp
pop
push
sub
pop
inc
leave
ljmp
scas
inc
loope
adc
pop
jno
cmp
bound
mov
add
dec
mov
fistps
loope
in
lods
ficoml
mov
mov
and
sbb
dec
jmp
jle
fwait
or
repnz
adc
xlat
mov
loopne
inc
jle
cmpsl
sub
push
das
imul
int
jae
sub
sub
push
push
xchg
bound
frstor
inc
mov
movsb
call
jae
jle
gs
sbb
iret
jl,pn
xchg
xlat
imul
cmp
cmpsl
add
inc
fildll
cmp
mov
cltd
test
cmp
dec
adc
mov
incl
fildl
lock
sets
dec
insl
mov
jl
shrl
add
mov
sarl
mov
xchg
xchg
pop
addb
jbe
aas
lret
push
in
test
test
xor
jl
shufps
cmp
stos
pop
adc
jmp
testb
daa
call
or
scas
pop
dec
std
rolb
mov
mov
imul
xchg
mov
push
arpl
rorb
bound
rclb
ret
pop
pop
icebp
mov
call
push
out
outsb
push
es
lcall
sarl
insb
and
xchg
addb
and
decl
pop
push
in
daa
aas
outsb
loope
push
xchg
lods
test
pop
cmp
jg
sbb
ljmp
mov
fcomps
cltd
mov
mov
pop
jo
sbb
fldcw
pop
add
or
xlat
mov
out
repz
decb
insl
test
sti
loopne
and
mov
je
sub
std
aad
adc
pop
into
inc
shll
pop
jno
test
dec
cwtl
sub
pop
nop
mov
incl
sbb
sbb
push
imul
pop
xor
jo
ds
jo
and
pop
push
test
mov
pop
adc
and
lcall
shlb
add
mov
or
imul
pop
or
lret
das
pop
xchg
push
xchg
mov
imul
lcall
pop
add
and
cmc
push
les
xchg
xchg
scas
jmp
movsb
xor
test
in
push
aad
pop
aaa
sub
jb
insl
xor
mov
pop
out
add
inc
popf
or
cmp
sub
leave
xchg
xor
jns
stc
xchg
sub
cmpsl
ret
testb
rol
les
inc
adc
insl
xlat
add
mov
pop
mov
scas
or
cmp
imul
into
jo
xchg
fstp
sbb
mov
je
mov
in
xor
adc
lods
xchg
push
mov
xchg
out
dec
pop
lcall
cmpsl
std
add
outsb
int3
lret
das
jo
push
adc
stc
mov
inc
out
pop
lods
aad
inc
xchg
sbb
mov
ret
xor
add
into
push
mov
jle
fdecstp
inc
add
outsb
mov
divl
cmp
rcl
xchg
or
sbb
mov
and
fnstenv
adc
in
mov
pushf
cmp
mov
sub
mov
mov
push
test
xor
mov
call
mov
add
mov
sub
inc
mov
push
shll
sbb
insb
test
sbb
add
inc
hlt
jne
daa
or
jnp
pop
insl
mov
sub
lods
repz
in
and
mov
xchg
into
out
dec
inc
pushl
add
xchg
mov
push
or
add
sbb
sub
add
popf
adc
insl
add
mov
lds
mov
mov
outsb
pop
daa
adc
pop
vcvtsi2ssl
or
fdivrs
push
fiaddl
clc
ret
jle
nop
xchg
in
cmp
out
aaa
inc
xor
in
cmp
insb
repnz
ss
xchg
dec
jns
sub
addb
mov
mov
xchg
and
push
into
sarb
or
xor
xchg
stc
push
or
xchg
inc
inc
sbb
pop
notl
push
aam
dec
test
inc
pushf
rcl
and
push
icebp
fdivl
sbb
adc
clc
inc
addr16
pop
sbb
sub
pop
sbb
cmp
jge
jp
stc
push
mov
lret
ss
add
cmp
loop
ror
mov
mov
icebp
push
lea
mov
jo
mov
mov
fidivrs
aam
fcmovnu
stc
dec
mov
mov
rcll
inc
push
jecxz
cmp
xor
push
pop
pop
rcrl
leave
dec
movsl
jl
or
add
loopne
mov
fwait
xchg
test
iret
scas
push
imul
pop
popa
lock
arpl
inc
out
loope
in
js
add
xchg
fdivs
mov
mov
push
rcrl
mov
ss
push
pop
xor
idivb
cmp
dec
or
jecxz
sbbb
mov
hlt
outsb
jmp
fmuls
mov
xchg
or
mov
dec
les
arpl
sbb
pop
pop
call
cmp
and
push
insl
fildl
ds
ljmp
jb
arpl
enter
out
cwtl
jno
add
xor
jnp
sbb
test
shlb
aaa
fwait
cmp
mov
jl
fucomip
xor
dec
and
hlt
sub
lds
fs
mov
dec
scas
add
popl
movsb
test
ficoml
xchg
pop
mov
jle
mov
rorl
jbe
pop
push
and
pop
clc
orb
sbb
popa
je
lock
mov
add
stos
scas
rsm
in
arpl
subl
mov
xorl
xchg
out
lock
mov
sub
dec
sti
movsl
call
xchg
inc
pop
pop
enter
js
mov
lods
bound
std
icebp
fisubl
xor
fsubp
scas
out
out
arpl
mov
adc
mov
mov
rcrl
sub
outsb
xchg
int
or
inc
adc
dec
jl
call
mov
lret
lock
jle
dec
or
mov
inc
mov
popf
dec
and
or
inc
cwtl
pop
push
ret
pop
je
lcall
gs
sahf
shrl
into
xchg
sub
jmp
iret
icebp
movsb
rorb
sub
repnz
ds
jb
cld
push
push
mov
test
dec
jnp
cmp
aam
sub
pop
fidivrl
loop
in
in
xchg
nop
push
dec
jb
push
stc
xchg
stos
push
inc
and
lret
mov
fmull
dec
pop
cwtl
mov
addl
outsb
xchg
sub
sub
fcoms
int3
pop
andb
push
push
pop
sbb
sub
ds
repz
mov
adc
aam
out
cmp
dec
inc
adc
sub
fbstp
mov
xorb
loope
pop
and
arpl
mov
sbb
sahf
jecxz
cmc
mov
ljmp
ret
jo
xchg
fwait
jne
cmc
pop
lret
inc
nop
int3
and
xchg
aam
mov
outsl
cmc
xlat
mov
scas
or
mov
fs
loop
mov
jg
leave
sbb
mov
imul
gs
lcall
adc
fsub
jo
xchg
ljmp
and
int3
jno
in
dec
cmp
out
je
or
int
and
pushf
paddusw
adc
inc
or
ds
xor
jb
mov
dec
push
mov
adc
stos
and
sbb
es
inc
adc
lock
add
add
out
stc
loop
js
mov
mov
push
dec
add
add
pop
push
add
pop
call
int3
stos
add
sub
mov
inc
push
aam
je
stc
aam
mov
jb
mov
mov
mov
daa
rorl
mov
adc
add
sub
inc
je
ficomps
sbb
ja
int
cmc
cmp
cmp
std
xchg
stos
popf
xchg
fists
mov
cmpsl
add
rcr
mov
push
mov
aam
je
inc
jbe
mov
fistl
sbb
ret
jecxz
jno
adc
orb
or
adc
push
xchg
xchg
mov
and
dec
and
mov
call
addb
arpl
xchg
push
lret
mov
xor
jno
mov
inc
push
xchg
rolb
in
push
mul
sbb
cli
pop
dec
aaa
out
mov
ffreep
js
orb
mov
out
scas
adc
mov
div
jbe
movsl
mov
scas
inc
cmp
daa
daa
aam
pop
gs
sbb
cli
pop
jns
dec
cmp
stos
add
or
xchg
mov
lods
jge
sub
insl
loop
ja
mov
jp
jg
mov
inc
nop
aas
les
in
ret
xchg
push
mov
ss
xor
inc
and
sarl
sbbb
pop
or
add
jl
mov
pop
and
mov
add
push
cmove
jg
bound
test
test
mov
push
push
mov
xor
inc
sub
imul
sbb
mov
push
cs
cmc
jmp
and
add
mov
test
mov
aaa
jg
lods
ror
test
jge
imul
adc
ss
gs
jno
fdivrl
mov
xchg
mov
int
imul
sti
mov
mov
adc
cmpl
jo
mov
pop
dec
push
shll
iret
push
dec
inc
in
and
pop
lock
push
jmp
xor
jno
mov
mov
pop
jge
jae
outsl
push
cltd
insl
cmp
lods
xchg
out
sub
sub
dec
repz
shrb
call
push
imul
mov
push
dec
out
dec
out
push
cmp
push
loopne
pushf
lahf
cli
mov
mov
ss
insl
pop
imul
loope
rolb
loop
inc
arpl
out
dec
push
add
int3
cmp
into
int
clc
xchg
aam
cmpsb
roll
lods
imul
sti
pusha
lea
popf
and
dec
xchg
or
jbe
cmp
stos
cmp
cli
xchg
cwtl
mov
mov
outsb
pop
xor
xchg
mov
pop
subl
add
outsl
inc
sahf
insb
dec
insb
and
pop
mov
arpl
pop
loopne
sub
lock
je
add
mov
shl
mov
add
jl
iret
data16
mov
jge
fwait
mov
movsb
add
ret
adc
imul
jp
adc
jb
sub
les
cmpsb
or
ret
xchg
xchg
pop
jae
loop
stos
jge
mov
loope
sarb
arpl
mov
add
mov
xchg
repnz
jmp
dec
xchg
cmp
loope
push
lods
dec
mov
int
cmc
sbb
jle
adcl
jmp
dec
adc
int3
jle
mov
out
sub
in
xor
icebp
fdivrs
out
sbb
mov
popa
jo
and
jno
cmp
fstps
test
leave
hlt
inc
adc
push
cmc
in
dec
jnp
add
pop
cmc
jns
das
clc
dec
inc
and
pop
lret
jecxz
arpl
in
int3
cmp
js
es
inc
pop
sbb
pop
xchg
enter
leave
mov
or
cli
fdivrs
fwait
mov
and
sbb
fs
scas
inc
sub
mov
xor
fisubl
add
in
jne
mov
es
push
mov
scas
mov
xor
jb
cmpsl
inc
ret
testb
xchg
cltd
or
lds
pop
ds
xor
outsb
ret
data16
fcomps
orb
sahf
jno
out
imul
pop
mov
subb
pop
pop
mov
jno
cmpsb
rcrb
push
mov
nop
pop
mov
fdecstp
rcrl
mov
jmp
cwtl
into
inc
andl
xchg
mov
loope
stc
inc
cli
inc
mov
in
dec
push
aam
jbe
or
sbb
je
rcrl
cmpsb
adc
adc
inc
push
aaa
mov
dec
and
scas
cmp
dec
ja
mov
sbb
and
imul
jb
ds
pop
mov
jmp
inc
sbb
push
test
fucomi
adc
pop
imul
adc
orl
mov
call
mov
cmp
cmp
pop
cli
out
cmp
icebp
pushf
push
clc
cmp
test
lret
or
jg
mov
sbb
les
enter
cwtl
mov
push
adc
out
pop
cli
je
sub
lds
ljmp
xchg
xorl
fidivrl
mov
mov
push
fs
cmpsl
and
test
aas
inc
xor
mov
gs
xchg
scas
mov
lods
mov
lret
pop
or
jo
cwtl
add
sub
or
data16
dec
jmp
pusha
pop
in
sbb
fdivp
sub
inc
sahf
pop
filds
cmc
aad
movsb
enter
ret
jle
mov
ret
ss
das
movsl
stc
add
jae
inc
mov
in
out
cmp
jbe
xor
lret
aaa
adc
jo
inc
push
sub
lods
xor
pop
pop
or
jge
sti
or
lcall
mov
jnp
repnz
ljmp
mov
iret
fsubr
dec
cld
dec
test
mov
pusha
mov
cltd
push
pusha
add
cmp
sbb
sub
and
or
mov
enter
push
push
js
pop
dec
or
adc
mov
mull
jle
dec
push
xabort
test
pop
out
sahf
call
mov
mov
dec
mov
iret
fwait
push
adc
xor
scas
rorl
insb
jge
fwait
pushf
inc
das
fisttpl
mov
pop
movsl
mov
push
mov
mov
sub
inc
cltd
mov
mov
outsl
sub
xchg
inc
xchg
push
sbb
xor
mov
add
shlb
push
addr16
or
mov
gs
pop
lods
das
mov
inc
cmp
dec
sbb
bound
popf
xor
lods
mov
and
aad
lahf
and
push
das
jp
repnz
mov
push
call
push
fildl
mov
movsb
cmp
fadds
sbb
add
andl
fdiv
and
call
loop
test
nop
in
cmp
cmp
xchg
outsb
ds
icebp
leave
push
push
adc
imul
push
addb
stos
das
lods
pop
fwait
pop
cmpsb
xor
cmp
testl
nop
jmp
or
xchg
inc
sbb
out
jns
test
stos
sbb
jb
xchg
cltd
outsb
or
cmc
cmc
fdivs
mov
mov
hlt
into
cmpsl
mov
negb
push
and
negb
ret
sahf
fildll
xchg
data16
cmp
out
fisttpll
add
je
mov
shr
lret
inc
mov
shl
push
mov
lods
in
sub
sbb
fs
ret
aaa
xor
repz
mov
pop
push
fs
push
push
arpl
cmpsb
aas
test
fidivrl
js
add
icebp
dec
sar
cmp
fisubs
je
lock
mov
lock
fs
sbb
sub
loopne
cld
inc
pop
je
cmp
xchg
adc
pop
mov
hlt
ret
sbb
mov
mov
lahf
inc
mov
xchg
cmp
pop
es
xor
or
icebp
push
sbb
cld
fsubl
sarb
cmp
lea
arpl
stc
push
pop
fistpll
into
div
cmp
sub
addl
xor
add
and
and
xor
imul
xchg
mov
push
movsb
aaa
cs
loope
lcall
pop
xor
adc
adc
test
andb
or
and
or
inc
js
sbb
xchg
incb
stos
mov
fs
sahf
in
test
sbb
push
push
mov
xchg
loop
std
rcr
sub
sub
out
les
mov
in
ficomps
insl
add
stc
dec
hlt
mov
lea
cmc
loopne
push
je
sbb
lea
mov
jge
je
dec
mov
bound
lcall
sbb
or
inc
lcall
xor
push
jo
loope
sub
add
cmpsl
lret
inc
daa
les
mov
fidivrl
mov
lods
aaa
cmp
pop
jne
in
inc
outsl
addr16
out
dec
sbb
hlt
pop
into
imul
inc
jae
xchg
loop
adc
push
jg
imul
inc
pop
popf
stos
mov
in
repnz
adc
xchg
les
push
pop
cmpsb
cmp
inc
sbb
adcb
and
push
stos
cmc
mov
cmp
sarb
orl
not
ljmp
sub
in
lret
aas
icebp
mov
in
mov
pop
dec
mov
adc
or
or
popa
ds
jecxz
inc
popf
stos
fisubs
jp
inc
jle
rol
add
mov
cmp
push
lret
push
out
jo
xchg
orb
cmp
lcall
or
adc
dec
pop
test
jg
and
jecxz
stos
js
dec
enter
jg
ds
sub
jmp
dec
jge
iret
xor
and
dec
fimull
jo
inc
or
movsl
lock
shlb
lahf
cmp
iret
lds
xchg
adc
mov
lahf
aad
or
call
mov
xor
dec
and
lock
ror
testl
add
add
xchg
mov
adc
fwait
push
fdivl
jne
lea
jge
inc
add
insl
popa
fsubs
jno
jns
push
sbb
push
iret
and
xchg
fldt
xchg
push
mov
pop
sub
es
inc
ds
mov
mov
adc
mov
stos
mov
cmp
sbbl
insb
pop
mov
inc
fadds
sbb
test
inc
mov
stos
js
stos
add
out
pop
dec
pop
xchg
movsb
outsb
xor
js
mov
and
ret
and
mov
aam
xor
imul
or
sahf
scas
outsb
push
jl
testb
mov
shrl
xor
inc
iret
inc
scas
mov
mov
lods
jb
jnp
pop
inc
push
imul
adc
mov
mov
xchg
xchg
clc
adc
adc
cs
xchg
inc
movsb
outsl
mov
xchg
mov
sbb
dec
shll
adcl
and
sub
insl
fsubl
mov
pushf
push
fmuls
dec
and
xchg
arpl
daa
jle
xor
mov
gs
icebp
push
test
inc
rolb
mov
orl
leave
dec
jl
data16
or
out
dec
int
or
pop
fnstenv
mov
shll
mov
lods
imul
aaa
rorb
push
repnz
mov
cmpsl
lods
jno
mov
mov
jmp
je
test
push
xlat
and
xor
jbe
pop
fwait
stos
les
bound
sahf
adc
mov
add
fxam
add
cltd
es
mov
inc
andl
add
imul
inc
movsl
lret
les
cmp
sub
xlat
aad
cmp
subl
mov
and
and
xor
push
adc
lock
jp
outsl
cmp
adc
mov
inc
adc
push
push
jmp
mov
jl
out
scas
and
ret
push
push
jno
aam
push
iret
aad
or
adc
jno
or
xchg
addr16
mov
jp
and
pop
popf
lock
xlat
sub
cmp
xor
push
int
adc
int
leave
pop
adc
sbb
xor
fnstcw
pop
pushf
popf
enter
adc
dec
inc
pop
daa
push
dec
inc
sub
inc
and
lret
andb
mov
insl
sub
and
mov
aad
rorb
mov
int
inc
cmp
insb
sbbb
outsb
add
mov
in
arpl
lahf
fidivrl
xchg
frstor
lea
mov
sarb
push
mov
stos
aam
in
inc
fs
lock
mov
clc
dec
push
std
dec
shlb
push
idivb
sub
inc
push
cmp
dec
pop
fisttps
cmp
ljmp
shlb
int3
dec
push
fs
into
mov
cmc
push
adc
test
pop
test
and
pop
stos
ret
icebp
lret
movsl
sbb
xchg
cmpsb
adc
add
dec
leave
cmpsb
int
or
in
mov
or
push
push
mov
test
mov
mov
jmp
out
ljmp
xor
js
not
xor
cwtl
cmp
movsb
cmp
out
add
mov
lock
pop
stos
jle
push
mov
aam
add
out
std
cmc
call
xlat
lds
jmp
ret
push
cwtl
mov
mov
mov
mov
orl
sub
sbb
gs
cmp
and
cmpsb
ja
arpl
in
push
mov
int
mov
push
mov
cmp
es
ljmp
arpl
stc
inc
lcall
dec
lea
rolb
pop
or
mov
xchg
or
enter
sbb
lret
loope
mov
ret
sbb
pop
mov
pop
xor
ss
pop
movsl
sahf
or
lret
mov
sbb
mov
scas
mov
push
dec
pop
sbb
shrb
pop
pop
mov
fsub
adcb
pop
decb
aaa
aaa
dec
out
fiadds
ret
pop
pop
or
push
je
bound
xor
in
ss
test
ret
repnz
jb,pn
jmp
jae
push
push
lahf
clc
dec
shr
fadds
xchg
rorb
lods
rcll
sub
cmp
into
pop
pop
pop
iret
cmpsl
sahf
xchg
or
das
int
mov
test
adc
imul
cs
out
shll
push
jmp
je
popf
inc
movl
mov
pop
sbb
adc
call
cltd
sbb
jmp
mov
xor
insl
loopne
fsts
orb
xchg
xor
and
btr
pop
add
xchg
call
jg
mov
sbb
jmp
clc
fisttpl
jae
mov
or
out
loopne
sbb
cld
mov
mov
mov
sub
imul
lret
subl
in
sub
enter
out
mov
insb
int
cltd
and
ret
sbb
leave
push
aad
pop
test
xor
imul
dec
pop
adc
fildl
fs
ds
mov
pop
xor
stos
cs
mov
scas
push
push
jb
mov
add
into
jae
lahf
addr16
scas
aaa
movntq
movsb
sub
ljmp
mov
int3
and
push
in
das
mov
fimull
insl
scas
mov
push
jo
sbb
inc
sbb
sub
dec
inc
ja
sub
sub
xor
and
popf
mov
into
cli
sub
lret
lret
sarl
inc
sbb
jno
rorl
pop
xor
cltd
xchg
xlat
dec
cs
pushf
jl
and
and
cs
jmp
ss
test
orl
dec
sbb
jmp
xchg
dec
and
mov
pop
and
pop
adc
lods
mov
int
lock
xchg
add
mov
sbb
loop
rcl
mov
movsl
iret
pop
popf
fxch
out
daa
adcl
pop
push
mov
into
addr16
adc
rcr
sbb
xorb
idiv
loopne
cmp
popa
mov
pop
and
add
adc
push
and
out
mov
or
addr16
and
and
lret
leave
repz
addr16
scas
jge
push
add
gs
leave
jle
xchg
xchg
lcall
sbb
cmp
sub
inc
jmp
std
negl
lds
in
mov
sarb
and
sbb
stos
pop
loope
js
aaa
rdmsr
sub
es
xlat
pop
cld
mov
in
adc
lcall
ja
cmpb
lret
pop
inc
iret
bound
insl
sbb
test
pop
testb
mov
repnz
fsubr
mov
jmp
jo
mov
cmp
and
test
out
negb
jmp
push
and
lock
iret
testb
xor
fisubrl
sub
loop
mov
inc
push
inc
les
inc
insb
mov
sbb
stos
sbb
adc
cmc
push
add
push
fstpt
cltd
sub
or
cmpsl
incl
pop
and
mov
jae
add
pop
cmp
pop
mov
aaa
mov
pop
scas
jecxz
das
jno
mov
mov
hlt
scas
pop
loopne
inc
push
inc
jle
mov
xor
dec
cmp
iret
loop
add
das
test
mov
xor
and
xor
dec
xor
push
stos
sub
loopne
or
sbb
push
adcb
mov
and
repz
pop
cmpsb
sbb
cli
dec
in
cli
sti
in
call
push
dec
pop
dec
add
stos
pop
adcl
jecxz
jge
mov
mov
push
push
pop
sub
leave
xlat
xchg
mov
stos
and
mov
pop
jo
out
sbb
sbb
pop
mov
popf
mov
cmp
push
repnz
sub
js,pn
das
add
xor
adc
xor
jne
test
in
mov
pop
dec
ss
xchg
loop
pop
xchg
push
dec
repz
dec
repnz
imul
push
push
inc
sub
or
inc
test
gs
xlat
add
xor
xor
outsl
loope
data16
xor
pop
andl
push
jmp
push
and
je
push
mov
mov
sub
push
cmp
push
sub
mov
add
fs
sbb
addl
test
in
lock
mov
orl
lods
push
add
insb
imul
lret
testb
push
mov
arpl
in
pop
aaa
in
dec
sbb
cmpsb
mov
dec
mov
int3
outsl
xor
loop
cmpsb
sbb
cmp
pusha
xchg
mov
adc
pop
test
mov
sbb
sub
push
add
jl
fisubs
or
dec
into
mov
mov
dec
dec
sbb
in
pop
sarb
fidivrl
in
pop
sahf
clc
fadds
jne
and
test
sub
movsl
push
mov
je
das
mov
push
dec
cmp
jnp
roll
mov
jecxz
pop
or
sbb
mov
std
jmp
sub
mov
subl
xchg
mov
js
dec
stc
add
xor
jae
push
cmp
mov
cmp
sbb
ficoms
mov
je
and
in
adcb
andl
lea
push
push
stos
fiadds
ret
arpl
add
repz
sarb
lea
jecxz
fstpt
dec
mov
mov
clc
cmp
mov
sti
jno
mov
ret
lods
subl
pop
andb
aad
fidivrl
add
and
loope
xor
dec
gs
repnz
mov
mov
push
xchg
and
mov
mov
sbb
xchg
pop
movl
cmp
xchg
or
lcall
adc
sahf
outsl
out
pusha
mov
aas
ret
pop
mov
push
jb
out
inc
mull
push
adc
aas
testb
mov
push
daa
mov
cmp
sarl
and
rclb
fwait
xor
sub
mov
lret
or
jns
jae
inc
inc
add
cmp
or
sub
mov
inc
loopne
mov
sbb
div
and
xchg
jl
je
data16
adc
sbb
lea
popa
jl
mov
mov
and
adc
jge
sub
adc
int3
cmc
ror
cmp
mov
loop
ss
es
cmp
aaa
leave
shll
add
fistpl
and
inc
xor
mov
fwait
lds
mov
or
or
mov
out
in
push
push
adc
sbb
inc
inc
inc
pop
insl
or
and
lds
sbb
and
jae
loopne
call
push
arpl
mov
scas
mov
xor
in
jne
fcoml
jp
jae
mov
sbb
pop
addr16
repz
notl
push
and
imul
fdivs
loope
hlt
sub
imul
inc
xchg
test
mov
push
cli
mov
jecxz
adc
out
adc
jge
insl
insl
popa
out
out
into
mov
rcl
sti
pop
rclb
dec
push
jb
push
or
aad
push
fs
mov
inc
subl
scas
pop
int3
frstor
add
lret
cltd
and
xchg
jne
jg
ret
jl
ret
and
adc
mov
xor
fsubs
loopne
mov
xor
pusha
mov
and
fists
sub
xchg
and
push
xchg
pop
imul
flds
cltd
mov
mov
sub
cmpsb
int3
stc
fidivrs
pop
fs
dec
pop
mov
jnp
dec
les
mov
dec
lahf
push
imulb
adc
mov
loop
imul
dec
lcall
hlt
fisubrl
xor
xchg
push
or
mov
das
fnsave
lahf
xchg
cmp
sbb
outsb
xchg
pop
adc
rcrl
dec
pop
xchg
shll
cmovl
inc
iret
adc
cltd
icebp
movsb
loop
out
adc
jle
dec
bt
sbb
scas
hlt
jl
push
sbb
jo
lods
jmp
lods
cld
mov
cmp
add
lock
pop
mov
test
add
test
sub
sti
fnstcw
dec
mov
or
push
pusha
and
xchg
sub
pop
jbe
subl
cmp
xchg
fwait
cwtl
cmp
sahf
push
ja
sub
jns
xchg
pop
cs
push
dec
notb
je
sub
dec
aad
ret
mov
adc
cmc
loopne
inc
mov
dec
xorl
pop
cmpsb
pop
mov
lret
or
mov
xchg
sbb
fiaddl
xchg
shll
xor
fadds
jns
and
out
aam
push
sbb
cltd
das
in
jmp
bound
add
mov
xor
push
push
and
in
repnz
and
xchg
movsb
imul
pushf
jb
out
movsl
pop
fists
jp
movsb
or
sbb
mulb
jmp
test
aaa
jle
xchg
and
pop
mov
int3
push
data16
mov
inc
pop
or
bound
and
push
xchg
dec
push
adc
nop
shlb
sar
scas
shlb
and
filds
mov
sbb
mov
xchg
pushf
jg
hlt
add
push
fnstsw
push
test
jle
push
bnd
push
stos
pushf
into
mov
and
lcall
rol
lods
inc
pop
cmp
cld
fisubl
inc
jns
mov
in
int3
int3
out
or
push
outsl
incb
jb
add
popf
pop
jnp
cmpsl
sbb
lods
in
xchg
ret
push
push
lock
inc
mov
lea
lods
mov
add
jbe
andl
lds
sbb
push
cmp
test
or
push
adc
xchg
xlat
cmp
lods
lcall
push
and
jmp
ljmp
jecxz
cmpsb
fwait
fwait
nop
mov
sub
push
shld
or
jne
cwtl
or
shlb
mov
sarb
into
xchg
ja
cmp
mov
xchg
push
js
cmc
and
push
nop
add
lahf
push
push
aam
and
and
push
out
push
enter
dec
add
in
dec
jnp
fcomip
inc
dec
add
gs
inc
adc
test
dec
fmuls
inc
push
popl
mov
xchg
pop
out
je
mov
or
xchg
lahf
mov
loop
enter
dec
dec
lahf
mov
mov
xor
ja
jge
push
xchg
dec
cmp
insl
pushf
lret
mov
ret
or
loope
outsl
es
negb
out
adc
arpl
bound
bound
in
neg
mov
dec
sbb
adc
inc
mov
xor
lret
sahf
jnp,pn
add
movsb
lcall
or
shrl
cltd
sub
popf
xchg
add
xchg
lods
pushf
stos
xor
mov
mov
daa
mov
sbb
pop
xorl
fwait
adc
outsl
cmp
mov
mov
aam
lea
xor
dec
icebp
inc
in
pop
mov
daa
movsl
sbb
adc
xchg
test
xor
push
in
enter
sbb
ret
je
aam
js
mov
jb
repz
int3
sub
stc
jmp
jno
mov
sbb
sarb
or
popf
lods
imul
jp
pusha
aad
imul
aas
push
ss
mov
stc
mov
in
std
lods
xchg
adc
mov
repnz
mov
adc
cmpsl
jbe
repz
and
and
jp
push
push
cmp
popf
cld
out
ja
jae
decl
xor
aaa
test
repnz
rcrl
mov
aaa
mov
cld
flds
push
dec
and
add
push
ret
mov
and
pop
jge
push
in
ljmp
lret
aam
mov
sbb
sti
inc
sbb
cmp
cmpsl
lret
jnp
jae
cld
mov
jns
mov
push
inc
rolb
sbb
andl
adc
xor
test
mov
xchg
mov
sbb
orl
popf
fistl
repnz
in
jo
mov
mov
mov
into
ljmp
ret
lea
fdivrs
mov
insb
int
xchg
adc
aad
sbb
xchg
push
test
repnz
popf
das
ss
sarb
inc
andl
ret
jecxz
adc
in
mov
testl
cmpb
ficompl
inc
dec
pop
add
fists
mov
loope
fldt
fwait
xor
rcrl
ss
test
jecxz
ss
pop
je
int3
mov
lds
cmp
xor
or
out
leave
mov
stos
cmpsb
fwait
push
repz
jns
int3
loope
push
or
cmc
pop
jb
mov
pop
dec
pop
roll
xor
leave
cli
lds
pop
or
and
lcall
mov
ret
push
jle
lods
mov
sbb
inc
mov
xchg
inc
dec
mov
mov
jo
and
in
fmull
mov
mov
mov
lahf
xor
xchg
cmc
in
add
xor
sub
jg
mov
mov
cmp
in
int3
add
gs
mov
aad
lock
fdivl
popf
in
lret
inc
push
or
inc
imul
ja
push
je
insl
sarb
sub
push
inc
sub
cmp
cld
fstpl
pusha
cmp
fs
ds
loopne
lea
inc
ficoml
loope
jo
out
jns
lock
arpl
rorl
dec
inc
cmp
fmuls
jne
xchg
addr16
mov
popf
cmpsl
pop
cmp
cld
movb
push
push
mov
add
mov
mov
jp
jge
lcall
loopne
adc
sbb
pop
pop
jae
inc
aad
xor
or
mov
fwait
lods
fisttps
iret
jge
pop
fildll
fadd
movsl
dec
loopne
mov
arpl
inc
sub
mov
testb
jl
test
sub
pop
jge
in
adc
test
push
xor
push
fidivl
mov
push
jb
fisubl
mov
rcrb
aas
dec
out
or
sub
ja
insb
pop
adc
std
lcall
and
mov
pop
scas
lock
int
shlb
add
jo
jns
scas
sti
sub
fdivrl
pop
mov
and
ret
pop
mov
test
pop
sub
rorb
lea
mov
xchg
xchg
pop
in
mov
push
test
icebp
arpl
mov
inc
test
xor
cmp
rorl
dec
inc
fs
jnp
lods
stc
and
loop
test
push
adc
or
sub
pop
jmp
and
xchg
xchg
lea
andl
and
cmc
sbb
shr
pop
stos
icebp
flds
inc
pop
outsl
mov
test
jbe
icebp
and
xlat
addl
icebp
mov
jae
mov
dec
call
mov
nop
js
cmp
cmpsl
adc
dec
xchg
mov
jo
out
outsl
aaa
mov
pop
incb
jae
jo
and
pop
test
xchg
pop
cmp
dec
push
in
jae
cltd
rorb
fstps
dec
stos
mov
dec
movsl
xchg
aas
in
repz
fs
pushf
les
ja
insb
lods
sarb
push
rcrl
and
dec
iret
jno
mov
pop
loope
roll
lea
rorl
xor
mov
sahf
scas
sbb
out
mov
loop
inc
or
mov
addr16
xor
fcmove
push
push
ja
jb
scas
adc
dec
push
pop
fsubrl
in
or
nop
jnp
jmp
mov
cmp
adc
xchg
cmp
incl
jne
fwait
mov
daa
loope
ficoml
test
ret
sub
pop
inc
iret
jns
add
sub
jne
int3
in
xor
jno
js
sbbl
adc
xchg
and
sub
test
lcall
sbbl
cwtl
sub
scas
insl
mov
or
xchg
in
scas
cmp
cs
in
mov
arpl
push
lret
adc
bound
jns
in
pushf
mov
shll
adc
std
lcall
test
mov
test
inc
scas
xchg
lea
imul
or
clc
or
hlt
jp
jo
adc
inc
mov
lods
mov
int
jle
pop
shr
int
adc
hlt
add
or
jno
test
movl
mov
push
mov
cmp
cld
dec
movsb
sbb
cwtl
xor
cmp
fsubrp
adc
pop
es
cltd
mov
mov
cli
rorb
jbe
sub
addb
pushaw
push
xlat
cmpsl
push
je
add
int
ret
repnz
jne
lret
xchg
pop
movlps
mov
dec
hlt
push
out
or
js
roll
gs
inc
loop
push
sti
sub
jg
imul
xor
add
push
xor
daa
push
loopne
inc
jbe
es
arpl
inc
mov
pushfw
jle
lret
repnz
addr16
pop
in
jnp
xor
out
clc
and
inc
insb
add
jp
mov
jle
jbe
push
xchg
cld
mov
jae
into
lods
push
jmp
sbb
and
mov
stc
cmp
mov
xor
lea
adc
fs
sbb
jmp
aaa
ret
nop
pop
std
sub
dec
xor
cmc
pop
je
sbb
loopne
dec
pop
popf
sbb
nop
lods
stc
xor
call
xor
inc
cli
scas
test
mov
cmp
data16
dec
cs
dec
xchg
xor
inc
loop
jb
shlb
push
pop
leave
icebp
fldt
imul
pop
push
inc
in
xchg
movsl
addr16
dec
pop
leave
mov
xchg
xor
das
or
push
jge
imulb
bnd
push
adc
sbbb
adc
dec
lds
sarb
or
push
movsl
rcll
or
data16
mov
les
pop
adc
sub
test
pop
and
lret
push
enter
enter
adc
mov
outsb
jmp
inc
push
mov
call
pop
cmp
dec
mov
xor
out
mov
xchg
cli
lods
or
arpl
loope
aad
xchg
push
dec
test
pop
or
leave
jle
sti
pop
bound
das
mov
jns
fstpt
out
movl
mov
adc
adc
sbb
sbb
daa
jb
lods
jge
mov
xchg
in
add
insl
inc
mov
cmpsl
add
mov
push
xchg
sub
sbb
ds
cmc
inc
fcmovne
dec
cmp
iret
pop
ljmp
out
fimuls
and
dec
pop
les
jbe
pop
stc
ljmp
mov
push
aas
or
mov
sub
inc
js
add
mov
clc
sbb
add
dec
add
outsl
call
lret
adc
out
repnz
subb
cli
adc
push
bound
out
or
js
xor
int3
les
push
cld
cs
hlt
loopne
jbe
icebp
cmp
mov
mov
fistps
mov
add
mov
push
jl
hlt
xchg
inc
cmp
cmpsl
jbe
rclb
test
inc
jg
pop
xor
sahf
fisubrl
cmp
sti
popa
mov
pop
cmp
push
dec
xchg
jl
movl
cmp
orl
dec
mov
js
lret
iret
xor
jg
leave
inc
mov
dec
fldcw
dec
outsb
ljmp
xchg
mov
xor
sbb
jmp
push
repz
jecxz
repz
or
push
jbe
lock
test
jo
lahf
flds
dec
mov
add
imul
and
cmpsb
mov
loopne
jno
int
jp
stc
test
adc
dec
repnz
addr16
popf
dec
lretw
inc
test
leave
push
push
adc
ret
push
mov
int3
fldl
xor
gs
sub
rol
cmovno
dec
mov
push
scas
adc
mov
and
dec
out
lds
fs
stos
mov
insl
cltd
or
add
sub
movsl
ret
mov
jecxz
fxam
lods
test
cmp
test
sub
imul
sarl
orb
cmp
js
add
jb
mov
bound
add
mov
lret
and
gs
and
adc
repnz
adc
js
in
fmul
sbb
adc
mov
andb
or
add
jge
lahf
in
je
push
iret
inc
mov
inc
lcall
mov
push
xchg
cmp
ljmp
sbb
ret
aam
int
sti
cmp
rcrl
pusha
push
lock
js
xchg
fistl
or
jae
pop
bound
daa
scas
cmpsb
sub
mov
mov
roll
and
mov
mov
int3
push
lds
pmullw
and
data16
mov
sbb
add
and
mov
pop
add
push
sub
push
xchg
outsl
jnp
sub
gs
and
dec
lods
neg
bound
mov
mov
pop
je
xor
stos
jo
cmp
imul
xor
mov
popa
sub
jno
dec
or
inc
and
mov
andb
mov
jno
and
aam
aas
in
and
test
popa
mov
sbb
push
stc
jae
xchg
mov
test
inc
cmpsl
outsl
jb
icebp
dec
insb
inc
lods
inc
sbb
jmp
sahf
cld
mov
pop
cmp
lock
pusha
and
push
pop
fadd
jae
fcomps
shrl
and
xor
cmc
sub
xor
push
js
xor
mov
fisubrs
cmpsb
in
push
shlb
insl
test
rcl
pop
js
test
cmp
inc
jle
jb
jo
mov
mov
aaa
xchg
repz
ret
loop
xor
jb
inc
sbb
mov
ss
cmp
mov
xchg
lea
testl
cmpl
sub
pusha
mov
out
pop
jns
fdivrl
neg
cwtl
dec
bound
push
ds
sub
aaa
shll
xchg
in
push
pusha
shlb
inc
imul
lods
pop
loop
mov
jbe
xchg
out
sub
sarl
fstl
or
rol
pop
data16
mov
sbb
test
xchg
xor
fsubrs
pop
ds
dec
aad
mov
inc
stos
fsubl
sub
daa
js
stc
pusha
xorl
dec
in
mov
pop
and
and
sub
xchg
lea
clc
pop
jl
pop
cmp
xor
or
mov
adc
mov
insb
sbb
mov
test
cwtl
mull
mov
mov
xor
sub
jb
cmp
mov
adc
ret
sbb
neg
test
sbb
bound
sarb
sbb
xchg
dec
inc
inc
jae
mov
jl
pop
ljmp
mov
push
xor
lcall
fcoml
arpl
mov
inc
xchg
xlat
shr
in
cltd
pop
dec
pop
ficoms
pop
push
inc
mov
xchg
fwait
dec
push
push
sbb
out
cltd
add
lods
mov
pop
pushf
shlb
aam
loopne
loopne
sti
lret
push
mov
sbb
movsb
or
push
or
mov
mov
mov
adc
lret
lock
xor
ja
scas
popa
stos
stos
jl
fwait
mov
in
push
ljmp
push
pop
xchg
nop
xchg
push
add
fidivs
rorl
or
outsb
ss
scas
inc
fdivrs
jecxz
aaa
mov
push
xor
in
test
mov
cmc
pop
jmp
lea
sbb
xchg
add
addl
cld
push
shl
dec
xchg
xchg
cmpsb
mov
pop
outsl
or
lds
push
cs
test
popa
xchg
pop
adc
rolb
push
fs
xchg
inc
pusha
sub
inc
aam
shlb
outsb
and
mov
call
push
mov
mov
cs
and
push
out
sti
add
xchg
mov
mov
mov
cmp
xor
add
sub
movsl
xor
cmp
sbb
xchg
addr16
movsl
xor
test
sbb
xchg
dec
jne
fs
xchg
sar
mov
daa
decl
andb
stos
pop
xor
stos
xor
cld
stc
test
mov
popa
xchg
mov
mov
shl
insb
lock
or
pusha
mov
in
stc
add
sbb
rorl
adc
jno
jne
sub
mov
cli
and
ljmp
sbb
scas
and
aam
jo
aad
xchg
addr16
adc
mov
inc
je
xchg
fldenv
push
ja
stos
daa
je
pop
lock
sbb
in
mov
sub
xchg
push
or
addr16
pop
fidivs
daa
rcr
rcll
test
or
loope
dec
pop
cmp
mov
mov
mov
xor
in
shlb
shrl
or
enter
push
push
push
out
add
add
mov
lretw
push
or
pop
repz
ror
sub
mov
sub
dec
flds
dec
mov
pop
shrl
int
aad
push
enter
and
sub
jne
mov
add
test
ja
inc
lahf
daa
cltd
xchg
enter
enter
out
pushl
lret
add
and
testb
testl
lcall
push
subb
sub
fadd
push
ret
insl
pop
push
sahf
mov
int
jecxz
outsl
je
or
adc
xor
sub
push
movsl
mov
pop
sub
ror
pusha
cmp
icebp
inc
mov
sub
loopne
xchg
daa
mov
fisttpll
fwait
insl
inc
ror
sbb
mov
xchg
dec
rcrl
push
movsb
dec
enter
addr16
pop
xchg
int3
cli
fwait
push
popa
adc
dec
das
lahf
jo
push
jecxz
loopne
adc
mov
xor
sub
sbb
jecxz
movsl
adc
ljmp
jae
pushf
loopne
fldcw
xchg
add
mov
les
sbb
sub
and
lds
iret
mov
xchg
sbb
adc
mov
adc
pusha
cmc
and
popf
aaa
add
and
pop
push
andb
cmp
dec
or
sub
movsl
in
mov
cmpsb
or
dec
xchg
lret
pop
mov
sbb
cmp
jns
les
adc
cmp
push
and
sbb
inc
pop
cmp
arpl
jno
sbb
mov
pop
orl
insb
mov
outsl
and
fisubrl
dec
and
orl
mov
mov
cmp
xor
stc
nop
pop
fidivl
add
mov
rcrb
jo
pop
mov
inc
rclb
mov
ret
jae
mov
mov
daa
mov
jmp
mov
push
sub
inc
jmp
mov
xorl
hlt
mov
fwait
out
mov
in
xor
sti
fldenv
adc
cmp
inc
sti
jmp
fcom
das
int
xchg
fcmovbe
test
into
repnz
ljmp
push
aam
jl
lds
cmp
mov
mov
mov
jno
push
mov
xor
sub
jo
pop
idiv
xlat
jmp
mov
adcl
cmp
adc
ret
gs
in
dec
pop
movsb
cmp
cmp
mov
in
sub
mov
aas
pop
mov
test
fdivrl
in
into
and
bound
adc
scas
nop
sbb
mov
or
in
jp
adc
fadd
add
xchg
imul
test
inc
and
stc
add
inc
repz
lea
xchg
cmpsb
shrb
inc
fstps
push
and
shlb
out
loopne
inc
sub
imul
push
movsb
aad
dec
scas
mov
clc
hlt
sbb
aad
xor
ljmp
inc
jl
insb
cmp
cli
test
test
push
loope
push
pop
mov
in
pop
out
lcall
or
fmulp
jecxz
inc
jb
adc
std
mov
add
mov
push
ds
xor
scas
insl
iret
pop
sbb
les
add
inc
popf
popf
outsl
add
out
test
cmp
pop
fisttps
and
lcall
loope
mov
stc
xchg
dec
mov
gs
sub
pushf
in
daa
mov
lods
push
cltd
aaa
je
xor
pop
inc
push
jns
fstpt
inc
loope
xchg
mov
mov
pop
push
mov
ret
loopne
hlt
mov
out
lods
fcompl
mov
sahf
out
pop
iret
pop
lods
int3
jno
shll
insl
aad
push
adc
cmpl
je
ror
leave
iret
inc
lods
push
fsts
je
pop
sub
pop
pushw
popf
inc
sub
cmp
fidivs
push
repnz
dec
sti
stos
lahf
xchg
push
sub
xchg
and
rcr
or
addl
data16
xor
sbb
lret
sbb
xchg
mov
mov
xor
push
jl
push
lcall
push
sub
adc
js
push
mov
sarb
push
popa
std
popf
inc
mov
adc
addr16
or
fmul
xchg
cmp
fiaddl
dec
ret
pusha
mov
nop
push
outsl
mov
push
inc
push
out
test
cltd
notl
pop
shlb
jo
jmp
pop
and
jo
fwait
jbe
mov
pusha
mov
mov
sbb
push
in
push
out
sub
jnp
or
and
mov
cs
pop
push
jnp
adc
jne
xor
fldt
notl
dec
adc
sub
or
add
cld
push
push
cli
mov
scas
xor
mov
xor
or
mov
adc
nop
cmp
cld
adc
cmpsb
jmp
pop
mov
test
out
nop
and
fcmovu
xchg
orl
sub
push
insb
xchg
shlb
and
mov
push
mov
or
mov
imul
std
xchg
xchg
or
push
inc
ds
lea
shll
fisttpll
insl
xchg
imul
fxch
jp
fs
pop
pop
je
notl
sarb
push
popf
int
pop
subb
xchg
adc
rorb
sbb
mov
stos
in
stos
enter
mov
cmp
push
xor
jmp
sbbb
jl
lea
mov
push
inc
in
and
sbb
xor
lahf
cmc
jge
fistpll
leave
stos
pop
faddl
lock
xchg
icebp
mov
or
insb
pop
jge
push
pop
add
mov
lods
lock
cmp
out
lock
repnz
mov
ret
or
aaa
jecxz
jno
test
leave
mov
imul
dec
loope
cwtl
add
add
fs
fisttps
sub
ret
loopne
fcomps
pop
gs
pop
sahf
stos
mov
mov
dec
push
mov
cmp
jne
scas
std
cwtl
xchg
icebp
out
sub
out
or
sbbb
xorl
xchg
hlt
fisubl
or
jb
and
jns
cld
outsb
mov
cwtl
iret
xor
sbb
clc
jo
xchg
cltd
adc
adc
ds
mov
out
xor
call
leave
inc
push
add
pop
cmp
pusha
scas
mov
or
mov
mov
lcall
cld
xlat
notl
lea
ja
in
or
hlt
or
shll
jnp
pop
fsub
lcall
loop
jle
inc
jp
push
cmp
sbb
sbb
in
cmp
mov
xchg
jp
push
insl
cwtl
mov
aam
pop
aas
xchg
ljmp
lds
aam
sbb
mov
pop
sbbb
in
xchg
pop
int
decl
mov
es
fdivp
push
fisubrl
out
sub
mov
pop
enter
pop
aam
push
mov
sbb
mov
jo
loope
push
insb
loope
push
dec
imul
into
push
sbb
jg,pn
xor
jo
test
pop
pop
push
add
ret
insb
lods
cmc
ret
enter
push
dec
fwait
dec
int3
out
lock
data16
adc
inc
addr16
xchg
pop
gs
sub
or
sub
sbb
mov
loope
cld
and
push
xchg
jb
data16
pop
or
jno
xor
ret
scas
das
mov
push
add
pop
rolb
adc
sti
nop
lds
mov
cmc
inc
in
fs
movsl
push
jns
xor
cmp
push
xchg
jbe
mov
pop
lock
adc
cmp
mov
fstl
stc
cwtl
and
call
cli
push
pushf
cmp
mov
add
push
mov
xchg
insb
aas
add
jae
adc
loope
mov
jp
or
xor
call
xchg
jo
call
inc
dec
add
enter
sbbb
jl
inc
sbb
lea
fstps
push
mov
iret
lods
push
add
hlt
sub
xchg
xor
mov
mov
dec
das
push
dec
pusha
rcrl
daa
cltd
push
xchg
pop
dec
mov
out
out
mov
mov
rcrb
adc
je
adc
sbb
ret
ss
add
loope
jp
out
dec
pop
and
jae
dec
xchg
insl
mov
pop
mov
cmpb
xchg
mov
sub
clc
call
lods
int
add
inc
jl
inc
sti
push
div
lock
jo
daa
movsb
adc
out
push
pop
mov
loopne
outsl
movsl
push
ja
inc
test
xchg
xchg
pop
call
sbb
mov
sbb
mov
popa
dec
add
push
jge
push
sbb
shlb
and
jecxz
mov
mov
adc
inc
pop
sbb
jl
stos
add
ret
pop
cmp
push
lds
adc
or
sub
mov
movsb
call
ret
sarb
sahf
sti
cmpsl
cmp
push
sub
idiv
imul
mov
loope
clc
test
and
and
push
inc
jae
out
jnp
lods
subb
sub
mov
scas
add
add
xchg
subl
movl
jns
dec
pop
or
lcall
add
cltd
sub
testl
outsl
shlb
mov
pop
dec
pop
sbb
lret
pushf
es
cmp
aam
dec
push
pop
mov
cwtl
jp
xor
mov
dec
in
cmp
popa
and
into
out
nop
pop
popa
shr
lea
movsb
shrl
push
test
notl
mov
or
add
sti
and
popf
adcl
clc
movsb
idivb
dec
push
daa
idivb
roll
mov
aaa
bound
sub
jge
or
aad
adcl
scas
pop
and
add
jbe
cmpsb
jmp
pusha
mov
mov
pushf
xlat
enter
inc
sbb
stc
push
loop
push
mov
popf
adc
sub
mov
movsl
out
lcall
adc
iret
pop
mov
mov
inc
add
or
add
pop
sarl
mov
xchg
cmpsb
iret
stos
and
rcll
adc
mov
inc
sub
mov
cmpsb
shll
stos
push
or
jecxz
push
dec
iret
clc
call
mov
dec
push
mov
pop
xor
mov
sub
xchg
add
les
mov
lea
xorb
dec
xor
sub
inc
add
mov
cmpsl
mov
mov
lods
pop
add
adc
orb
int3
push
jg
dec
xchg
jbe
push
push
iret
and
enter
or
xchg
nop
dec
js
xchg
dec
mov
mov
jp
and
or
mov
dec
pop
dec
dec
and
arpl
shl
mov
jo
add
rorb
pop
xchg
setno
push
push
aad
sub
pop
xchg
rorb
xchg
pop
push
add
repz
dec
in
insl
sub
sti
adc
clc
mov
xchg
mov
push
push
cmp
push
movsl
mov
aad
frstpm(287
ja
and
sti
das
popa
icebp
cld
sbb
loopne
xor
dec
repz
jnp
outsl
outsb
inc
in
add
jge
ja
scas
and
xchg
shl
lret
pop
out
stos
fdivrp
outsb
adc
mov
out
mov
loopne
imul
xchg
dec
xchg
fildl
push
iret
pop
jbe
mov
xchg
xchg
inc
jmp
decb
dec
ret
fisubrs
in
lahf
pop
pop
cmp
js
movsb
fisubrl
lret
sbb
push
mov
mov
insb
adc
imul
lret
xchg
dec
mov
and
subl
dec
imulb
xor
or
mov
adc
stos
adc
rorb
xlat
cmpsl
mov
movl
in
sub
shl
xlat
stc
iret
cld
mov
scas
in
xor
mov
mov
xchg
mov
and
cmpsl
or
std
aaa
mov
imul
pop
mov
ljmp
add
fs
push
lea
lods
imul
sbb
mov
pushf
mov
shr
icebp
mov
xchg
repz
adc
mov
cld
test
xchg
sbb
punpcklbw
xor
pop
gs
mov
cwtl
test
dec
je
lcall
sub
pop
jb
dec
cmp
mov
fisubrl
lea
popa
mov
adc
clc
dec
adc
inc
adc
push
sbb
pushf
jbe
pop
adc
mov
add
or
and
leave
adc
push
js
insb
lods
mov
setbe
xchg
xchg
scas
inc
add
add
push
mov
hlt
fucomi
in
jle
ss
rclb
sahf
jns
cld
and
movsb
cmc
xor
sti
icebp
cmp
adc
mov
xor
cmp
cmpsl
stos
jge
mov
daa
add
cmpsl
adc
cmp
pop
sbb
shrb
mov
xchg
lods
or
popa
mov
dec
jg
dec
fists
push
sbb
test
mov
into
scas
xor
mov
scas
pop
or
in
ficompl
push
aas
stos
jae
or
inc
sub
xchg
insl
jecxz
ja
rcrb
lds
and
fsubrs
xor
push
jmp
xchg
xor
into
xor
xchg
icebp
imul
cmp
push
sbb
test
cld
adc
xchg
popf
xchg
lret
push
jg
xor
lods
mov
jb
jp
push
fisttpl
rol
add
lock
out
mulb
or
xchg
dec
jnp
enter
adc
fdivrl
sahf
movsb
jo
sarb
and
dec
push
and
cmp
push
jge
cwtl
in
adc
inc
lods
aam
sub
sahf
jmp
shr
das
and
lahf
std
mov
adc
int3
lea
jecxz
mov
int3
cli
ret
or
fs
push
outsl
into
adc
in
adc
or
insl
movsl
imul
push
dec
adc
jge
icebp
xor
mov
cmp
movsb
sarl
stos
push
out
inc
test
popa
push
mov
test
dec
push
mov
sahf
mov
rorb
pop
adc
and
mov
int
inc
sub
mov
inc
test
sub
adc
xor
add
mov
cltd
and
test
push
pop
xlat
sbb
je
cmp
cwtl
adc
sbb
stos
mov
mov
sbb
imul
cs
je
push
xor
sarl
stc
test
filds
xor
or
sub
inc
or
imul
mov
int
and
lret
push
repz
pop
or
lock
jecxz
es
icebp
jns
and
les
hlt
mov
push
and
pop
sbb
jno
xchg
dec
out
push
mov
in
repz
orb
repz
fwait
sub
std
outsb
jbe
xchg
mov
jns
jns,pn
mov
sahf
pop
push
adcb
inc
movsl
lahf
fwait
test
stos
push
jp
fnstcw
inc
mov
js
lods
mov
xchg
and
pushf
pop
xor
sbb
lret
inc
inc
sub
cmp
mov
push
pop
push
icebp
mov
in
jecxz
sub
mov
cmp
cwtl
movb
jl
scas
hlt
addr16
out
mov
daa
push
in
cmp
inc
mov
scas
push
out
adc
imul
inc
xchg
shrl
mov
push
outsl
cli
sub
jge
jns
push
sub
push
aas
mov
std
cmpsl
push
insb
outsl
popa
add
push
lds
sub
mov
push
cwtl
or
and
sub
push
push
and
out
xor
lahf
ret
bound
xor
call
aas
jbe
iret
xor
adc
imul
loope
or
js
data16
jmp
jge
xor
mov
and
inc
stos
fisubl
test
and
rclb
xor
inc
mov
icebp
push
xchg
cmpsb
lret
addr16
cwtl
inc
push
mov
sarl
dec
adc
sbb
mov
rcr
adc
add
jge
sbb
jecxz
shlb
gs
in
cmpsl
outsb
js
xor
dec
daa
outsl
add
or
sti
je
scas
xor
cmp
cs
ljmp
xchg
aam
aas
dec
into
out
or
cmpl
arpl
shlb
pop
jp
sbb
insl
inc
and
es
fadd
or
out
decb
xor
vpaddq
insb
cs
dec
cmp
mov
pop
out
jo
jb
mov
add
push
mov
aas
sbb
adc
addb
sub
cmova
jnp
fsub
sahf
jae
das
and
and
pop
cmc
adc
jne
in
mov
mov
mov
mov
aaa
aam
fstps
mov
mov
cmp
pop
cmpsl
hlt
sbb
mov
stc
xor
xor
negl
cli
jp
hlt
mov
loopne
xchg
push
mov
dec
int
pushf
mov
ljmp
mov
mov
into
ljmp
jl
lahf
push
in
call
scas
cmp
aam
inc
cmp
out
xchg
iret
mov
adcl
xchg
int
add
fcmovne
sbb
add
cs
mov
inc
sbb
add
test
push
jns
rolb
xchg
jnp
out
or
sti
in
cmp
cmpsl
ljmp
adc
adc
repnz
jle
pop
jno
movsl
addr16
in
sub
inc
xchg
inc
ss
add
sti
mov
and
xlat
cltd
ja
sbb
pop
pop
mov
and
and
lret
push
sbb
stos
repnz
into
andl
lret
push
pop
sbb
test
pushl
cltd
outsl
popf
scas
hlt
int
mov
inc
add
outsb
cmp
loop
mov
movsb
mov
cltd
shlb
mov
sbb
and
push
je
arpl
fwait
in
dec
push
imul
adc
xchg
xchg
sbb
mov
mov
push
jbe
movsl
pop
push
mov
add
dec
lahf
cwtl
shlb
leave
push
add
mov
sub
jl
mov
pop
cmp
jae
movsl
jns
xor
push
nop
xchg
es
jno
imul
xchg
xor
sub
add
jae
pop
fidivrs
ds
cmp
out
mov
push
repnz
insb
arpl
sarl
in
dec
aas
or
push
and
decb
inc
cmc
fwait
dec
sub
ss
aam
fcoms
fnstenv
push
inc
gs
and
mov
pop
int3
stos
ret
or
rcr
push
mov
aad
add
daa
pop
bound
test
pusha
add
aad
les
push
aas
and
daa
es
mov
out
addl
adc
dec
clc
mov
inc
push
push
idivl
test
adc
mov
pop
xchg
decb
and
mov
lcall
cmp
cmp
add
and
in
jecxz
out
sbb
pop
rcll
loope
insl
pop
enter
sti
lods
xor
popf
dec
jecxz
cmp
adc
mov
xor
mov
imul
push
xor
ds
push
pop
xchg
out
ljmp
or
and
xor
mov
fcmovnb
push
ret
push
lcall
cmp
jb
jne
mov
and
cmc
cmp
sbb
or
adc
sbb
add
cmp
lds
cmp
movsl
sub
cmpsb
pop
push
cmp
dec
jb
jbe
cs
cmpsb
repz
aam
jo
lods
add
jo
js
xchg
jmp
mov
sub
imul
add
jge
pop
mov
mov
and
mov
icebp
pushf
add
mov
int3
inc
mov
pop
mov
xchg
fwait
jae
push
mov
xor
push
sti
pop
adc
adc
push
jb
shll
lods
cmp
inc
orb
mov
popf
in
xchg
aad
sub
and
push
les
cmp
or
sub
fisttpl
dec
ds
sub
sub
or
in
xor
inc
sub
mov
xchg
idiv
pop
push
stos
push
rcr
adc
xlat
mov
jmp
dec
inc
ss
cld
inc
pop
inc
mov
jl
movsb
call
sbb
xchg
mov
adc
xor
pushf
mov
pop
call
into
mov
add
fucomip
or
pop
subb
jle
xchg
rorb
push
int3
pop
loope
push
jo,pn
mov
cmp
sbb
xchg
dec
cmp
sbb
or
dec
and
pusha
lea
test
sbb
out
pop
and
dec
mov
rorb
aaa
fsub
and
pushf
xchg
dec
cwtl
mov
cmovno
adc
stc
sbb
jbe
sbb
out
inc
or
mov
lea
mov
xchg
ret
fadds
bound
mov
push
sub
popa
popa
loopne
jle
sbb
lret
mov
cmc
jno
mov
xchg
dec
mov
pop
rorb
push
dec
pop
dec
addr16
arpl
xor
adc
mov
mov
ret
pop
xchg
pop
add
sti
enter
xlat
outsb
sbb
outsb
lahf
mov
jo
or
cli
stos
cltd
lcall
xchg
push
out
sbb
xor
lods
loopne
int3
cwtl
add
sahf
rcl
add
nop
daa
push
popa
pop
xor
sub
iret
mov
ss
jle
nop
lret
cmp
test
pop
pusha
xor
pusha
and
pop
in
test
jmp
inc
sbbb
adc
imul
test
sti
cmp
fwait
xor
mov
fsubr
mov
loop
jae
and
inc
imul
or
xchg
xchg
aaa
and
push
dec
clc
shlb
push
pop
lods
or
shl
addr16
xchg
add
fwait
rorl
stos
lahf
aad
add
inc
dec
mov
push
mov
cltd
mov
adc
and
incb
loop
xchg
imul
pushf
daa
or
and
out
or
jns
or
xor
je
subl
push
mov
or
lahf
jo
test
lock
dec
inc
or
mov
subl
mov
add
dec
mov
into
rol
add
je
fiaddl
sub
cmp
lds
push
fstp
pop
aam
sbb
push
adc
stc
or
cwtl
scas
fld
test
pushf
test
ss
adc
out
add
xchg
sub
xchg
or
mov
fcoml
scas
lock
je
loop
xor
divb
dec
popf
scas
sbb
negb
or
mov
loope
pop
cmpsl
mov
sbb
fldt
movsb
cmpb
sbb
notb
sub
lret
mov
push
inc
mov
xchg
fistl
pop
push
jo
adc
inc
add
push
push
rcrb
fucomi
in
fcompp
adc
dec
mov
and
lret
pushf
mov
add
testb
push
sbb
repnz
or
xchg
push
js
popa
mov
mov
dec
fidivrl
scas
inc
ss
mov
mov
sub
jp
cmp
rcrl
jbe
mov
repz
les
inc
push
add
push
or
aas
adc
daa
gs
mov
jge
add
mov
outsb
test
divb
repz
ds
repz
push
push
stc
sub
fstpl
notl
dec
dec
adc
pushf
or
mov
sub
enter
fildl
mov
fldcw
cmp
fistpll
cmp
sbbl
out
push
jle
and
jmp
jb
lock
xor
mov
not
filds
xor
cmp
fsts
jb
cmp
inc
xor
pop
cld
sbb
es
fnsave
jae
mov
inc
add
mov
ljmp
lds
xor
xchg
out
dec
push
in
cmpsl
insb
ja
test
mov
push
pop
bswap
add
test
cmp
scas
movsl
adc
push
mov
cmpl
mov
mov
xor
aad
fidivs
cmp
xchg
mov
divl
push
push
xlat
mov
hlt
movsl
push
mov
daa
pop
shlb
insb
bound
js
mov
jmp
out
inc
mov
cmc
not
in
or
mov
outsl
add
cld
enter
mov
sahf
xlat
cmp
jg
fwait
in
adc
mov
jnp
jecxz
inc
in
inc
shrb
xchg
inc
stos
sahf
fcomip
fcoml
outsl
mov
xchg
enter
lock
imul
adc
aam
dec
repnz
or
or
mov
mov
je
icebp
outsl
lcall
lods
loop
adc
arpl
roll
popa
inc
lock
mov
pop
mov
or
sub
sbb
inc
inc
mov
mov
daa
repnz
mov
pushf
call
cltd
sbb
push
add
sub
inc
xor
dec
and
or
mov
jo
xchg
push
jnp
fcompl
inc
mov
or
sbb
repnz
pop
out
fdivs
sub
xchg
stc
rcrl
in
or
dec
idiv
ret
lock
cmp
imul
fsubrs
adc
scas
pop
mov
ljmp
lods
int3
sub
dec
or
mov
das
loop
fcoms
mov
add
mov
sahf
lock
xor
mov
push
data16
sahf
xchg
sub
sbb
notb
dec
lods
das
in
inc
add
add
and
mov
sbb
xor
ficomps
jg
push
xor
xchg
sub
das
pop
cmp
adc
or
in
aad
mov
dec
xor
jno
test
mov
dec
popf
popf
sarl
in
sub
imul
loop
push
movsl
inc
push
cmp
iret
sbb
add
xchg
xor
jecxz
xor
xchg
and
sub
mov
pop
xor
sub
push
add
iret
xor
mov
and
and
rol
dec
sbb
adc
jecxz
dec
inc
das
pop
out
pop
ljmp
push
adcl
dec
incl
sub
push
adc
jb
fmull
mov
clc
or
inc
lock
jns
hlt
jnp
out
push
xchg
pop
jle
push
in
dec
push
sub
insl
sahf
lds
adc
rcrb
data16
fstpl
in
xchg
sub
bound
add
roll
faddl
lahf
and
loop
popf
pop
cld
int
rol
cli
cmpsb
mov
daa
sti
sub
or
in
inc
pop
mov
adc
pop
shrb
add
add
mov
push
mov
in
into
arpl
stos
test
adc
lahf
lret
add
cmp
adc
add
popa
int
sbb
mov
movb
out
pop
mov
sub
outsl
fadds
pop
xchg
jne
cmp
or
dec
scas
nop
jbe
mov
iretw
dec
or
int
mov
add
add
int
sbb
into
enter
arpl
arpl
push
sbb
leave
or
push
das
adc
outsb
pop
out
out
mov
xorb
dec
ja
fnsave
mov
ucomiss
cmp
imul
sub
cmpsb
jns
ja
sub
mov
jno
scas
jo
and
dec
cmp
fidivrl
and
scas
cmp
andb
sbb
call
shll
sarl
xchg
add
aaa
xchg
out
pop
addb
mov
fldt
jl
mov
add
pop
jle
pushf
inc
lret
push
shlb
lods
cs
mov
add
push
rol
cmpsb
cld
mov
fidivrl
pop
xchg
pop
jg
pop
inc
pop
ljmp
loopne
mov
stc
or
ret
nop
mov
icebp
jle
and
out
xor
sti
lahf
sub
jecxz
pop
fcoms
shrl
mov
movsb
fwait
gs
adc
pop
jg
or
xchg
aas
and
shlb
ja
fildll
movsb
cmp
add
mov
ds
stos
int
dec
shrl
lcall
dec
cmp
xchg
xchg
jmp
ds
xor
fnstenv
sti
std
aas
jl
insb
push
sbb
pop
outsl
sbb
or
scas
inc
pop
mov
jo
push
je
imul
mov
jbe
mov
sarl
imul
dec
stc
and
rcr
xchg
push
insb
repnz
xchg
adc
mov
in
lret
pop
mov
adc
mov
or
push
jmp
pop
xor
test
inc
dec
mov
in
xchg
ss
dec
jle
inc
jle
cmp
and
cwtl
jnp
mov
xlat
xor
cmpsl
sub
loopne
cmp
sub
add
jle
lret
in
mov
mov
repnz
xchg
int3
pushf
adc
xlat
in
inc
insl
fyl2x
jae
cs
rcrb
jl
mov
jmp
pop
sbb
sarb
outsl
out
mov
and
sub
call
scas
out
mov
or
enter
push
iret
xor
pop
int3
je
cmpsl
out
xchg
in
and
leave
pop
mov
xchg
loop
test
vmovddup
rol
adc
cmp
popa
into
loop
pop
andl
push
rclb
jp
fwait
sub
jmp
mov
ljmp
lods
xor
adc
jbe
in
pushf
aam
pop
mov
cmp
daa
mov
scas
xchg
cmp
sbb
or
mov
fsubr
fildll
xor
sub
pop
dec
imul
jno
cmp
out
out
unpckhps
add
fldcw
xor
adc
cmp
jb
sub
push
adc
xor
pop
push
fbstp
push
popa
add
mov
add
outsl
pop
fdivl
cltd
jle
sarl
or
sbb
lahf
dec
add
xchg
pop
adc
sbbb
into
lea
outsb
std
cld
jg
rorl
ja
push
adc
stos
rorb
push
outsl
into
mov
ss
push
jns
insb
dec
idivl
fsubs
addb
outsb
mov
add
lock
stos
loop
sub
aad
jmp
cmp
lods
ret
lret
imul
jl
mov
aas
out
test
mov
jg
jl,pt
add
arpl
or
ja
push
adc
mov
mov
in
xlat
bnd
xchg
sub
jae
pusha
daa
pusha
mov
inc
outsb
jp
sbb
je
pop
fnstcw
inc
sbb
ret
dec
adc
jne
std
and
jne
fs
mov
inc
dec
sbb
flds
es
and
in
out
arpl
leave
mov
insl
movsl
mov
sub
xchg
mov
aas
ds
lods
mov
mov
call
pop
jecxz
sahf
loopne
dec
fistl
notb
inc
in
inc
pop
dec
movsl
or
push
dec
imul
outsl
ficomps
std
mov
fstpt
test
or
mov
mov
push
aam
add
rcr
in
fcmovnu
pusha
cmp
mov
fwait
sti
imul
mov
pop
das
jp
leave
scas
xorb
ret
inc
popf
subb
das
js
icebp
shld
sub
and
push
jg
call
inc
or
pushf
mov
subl
call
in
outsb
mov
adc
cmp
loope
testl
js
outsl
jecxz
dec
mov
sti
pop
mov
inc
or
int3
mov
xchg
mov
xchg
push
mov
or
inc
insl
mov
pop
imul
cltd
and
testl
fnstsw
cmpsl
dec
pop
push
into
pop
or
test
xor
sub
add
xor
lock
addr16
sbb
xchg
and
adc
pusha
lods
jmp
mov
notl
lds
dec
add
or
and
hlt
mov
loopne
ret
mov
lods
ja
jecxz
xchg
test
mov
ret
outsl
call
pop
mov
jp
dec
jns
sub
inc
push
ja
nop
inc
inc
cltd
xor
xchg
xchg
push
lahf
dec
mov
pop
sub
sbb
imul
mov
movsl
outsb
push
les
cmp
loope
sbb
pop
int
mov
push
mov
shrb
imul
arpl
mov
dec
xchg
in
xchg
push
cmp
addl
jl
nop
adc
loope
sub
pop
xor
or
push
and
scas
fs
lods
mov
pop
mov
mov
sub
dec
imul
xor
out
push
insb
lods
test
mov
cmpsb
push
dec
and
pop
loope
mov
jno
imul
xor
sub
test
or
decb
fwait
out
sbb
sbb
push
xchg
repz
fmul
rolb
popf
jo
xor
cmp
mov
push
jge
mov
nop
das
sbb
push
test
cltd
popf
lahf
push
jae
cltd
fsts
movsb
and
pop
push
inc
fnstcw
add
gs
movsb
jo
mov
addr16
sbb
pop
ret
xchg
int
adc
adc
outsl
divl
add
mov
push
lea
mov
jo
ficoml
sub
mov
xchg
sub
hlt
sbb
mov
aad
fcoms
adc
push
sti
mov
cli
lahf
leave
lahf
dec
leave
lock
xorb
dec
cmp
out
dec
and
xor
or
add
push
test
xor
lea
imul
xchg
out
cmp
cmp
add
fsts
fcmovnbe
mov
lahf
ror
aam
dec
idivl
or
movsb
push
jecxz
call
out
scas
pop
add
sbb
cltd
cmp
ret
outsl
jb
sahf
jne
push
add
paddusb
dec
add
ljmp
push
adc
cld
fwait
arpl
xchg
ds
int3
pusha
cmpb
dec
inc
xchg
loop
scas
fsts
aam
cmpsb
push
dec
stos
sahf
stc
loopne
inc
push
push
into
std
lock
je
lret
scas
popa
xor
xor
shrb
fldcw
sbb
sbb
pop
repz
out
adc
jmp
lock
mov
sti
cmpsb
repnz
fwait
pop
clc
push
add
mov
clc
lahf
int3
orl
icebp
pop
xchg
sbb
movsl
data16
cmp
std
cs
jge
jmp
push
out
fsubl
inc
aad
aad
repz
gs
jnp
pop
push
mov
bound
sbb
push
sti
decl
arpl
inc
fsubp
and
xor
mov
and
pop
inc
and
sub
in
pusha
popa
repz
cli
pushf
idivl
jmp
aaa
ljmp
cld
fcmove
jecxz
push
cmpsl
inc
mov
dec
lahf
xor
xchg
pop
lds
adc
int
ja
pop
aam
out
sqrtps
xor
jmp
mov
ret
std
ds
movhps
jo
ret
or
in
lods
and
push
iret
jno
xor
xlat
mov
mov
filds
ret
mov
inc
lcall
pop
mov
mov
out
sub
and
sub
and
adc
xchg
cmpsl
loope
pusha
xchg
jle
pop
pop
pop
in
or
jb
sahf
icebp
xchg
or
mov
push
sub
scas
clc
adc
ss
add
ss
fdivr
outsb
popf
je
rcrb
pop
ret
clc
mov
and
into
test
or
push
jp
lahf
push
xor
and
in
out
xor
mov
jmp
insb
lcall
pop
sub
adc
jg
cltd
jmp
loopne
jnp
ret
repz
xor
push
jns
push
test
test
or
jle
mov
cli
xchg
addr16
adc
lcall
sbb
ds
push
sub
jae
and
insl
notb
mov
jb
mov
leave
and
std
fs
out
icebp
das
mov
rcll
jne
subb
movsl
jmp
popa
in
xchg
sub
and
stc
cli
mov
aaa
mov
filds
cmp
or
fmull
testb
loopne,pt
in
int3
shll
in
inc
enter
stos
fisttps
imul
sbb
inc
pushl
push
repz
outsb
cmp
out
xor
fidivs
fldl
sub
ja
or
xchg
push
cs
pushf
lret
rcrb
jns
addr16
and
fisttpll
pop
jne
jl
mov
adc
mov
mov
hlt
testb
xor
aaa
test
mov
mov
shlb
sar
in
test
das
mov
dec
js
and
xor
and
lea
add
push
cmp
mov
inc
adc
pop
lahf
ds
sub
xorb
jmp
add
inc
mov
mov
mov
cmp
mov
inc
mov
fidivs
ret
out
add
jecxz
pop
test
and
divl
inc
fldt
pushf
popa
push
push
lcall
aaa
sahf
scas
pushf
mov
ss
xchg
sbb
jae
addr16
aam
out
addb
movsb
sahf
lods
pop
mov
push
mov
scas
mov
xchg
mov
mov
imul
push
fnsave
pusha
les
push
inc
xchg
mov
mov
mov
push
xor
jl
dec
fsubrs
dec
ljmp
xchg
pop
movntq
pop
mov
push
arpl
inc
mov
mov
das
out
lds
adc
pushf
and
mov
cmpb
in
xor
xchg
sbb
xor
out
fiadds
pushf
push
mov
shlb
or
orb
jmp
ja
jo
movsb
jle
sti
and
cmpsl
stos
loop
lock
or
adc
mov
dec
or
sbb
testl
addr16
subb
pop
mov
xlat
add
movsb
jne
out
sbb
mov
jno
push
aam
inc
fbstp
and
dec
mov
int
jne
fbld
xor
stc
and
movsb
mov
je
fs
mov
adc
mov
mov
jns
es
cmp
add
push
nop
cwtl
sub
in
and
jmp
ja
dec
and
push
sub
ror
sbb
test
sahf
sub
nop
adc
mov
cmp
cmpl
pop
mov
dec
inc
cmp
jbe
xchg
or
mov
movsb
xor
xlat
push
rorb
jnp
dec
divl
rclb
xchg
mov
mov
sub
jne
cltd
shll
aad
ljmp
sbb
dec
cmp
xchg
popf
jp
push
xchg
loope
push
mov
jnp
mov
gs
push
mov
xor
inc
or
mov
nop
ret
add
loopne
mov
push
xor
lods
jmp
adc
mov
jo
dec
lods
lods
fst
jp
test
sahf
and
sub
inc
out
mov
pop
inc
inc
jp
subl
cli
push
test
pop
jp
dec
pop
push
mov
lcall
push
jmp
mov
add
incl
and
rcll
aaa
pop
scas
add
inc
mov
mov
adc
push
mov
pop
movsb
dec
add
adc
test
out
imul
add
inc
aad
roll
push
cmpsl
insl
fsubp
add
mov
jb
push
out
loope
scas
aam
add
or
add
popf
sub
sub
pop
fidivl
xor
and
add
stc
and
pop
clc
mov
push
sbb
add
jb
push
mov
pushf
popf
xchg
jmp
sbb
shr
mov
xlat
mov
mov
leave
jg
fistpl
lcall
dec
fwait
ret
pushf
mov
je
mov
cmp
fsubl
mov
xchg
negb
mov
mov
loop
pop
lahf
inc
jno
xchg
aas
mov
sbb
mov
mov
enter
jmp
scas
lock
sbb
bound
sti
add
lock
nop
fistpl
mov
xchg
leave
pushf
rol
pop
popf
push
stos
inc
push
xor
mov
mov
jp
movsl
push
adc
xor
push
stc
lret
xor
gs
cmp
add
shl
push
test
cli
push
adc
outsl
sub
jbe
mov
jns
jb
rcrb
mov
int3
lock
add
call
dec
xchg
adc
in
dec
sbb
mov
clc
and
enter
sbb
outsb
cmp
mov
mov
lret
add
mov
jge
push
lods
cmp
scas
xlat
shl
push
cmpsb
dec
xlat
sahf
movsl
sub
mov
mov
xchg
inc
add
in
or
push
rcrb
push
inc
pop
add
xchg
stc
cli
jne
xchg
aaa
repnz
pop
mov
imul
les
push
xchg
cmp
outsb
xchg
dec
jl
rcrl
cmp
bound
xchg
test
pop
xchg
test
fnsetpm(287
pop
loop
roll
sub
dec
mov
dec
lods
mov
push
push
xchg
test
mov
es
or
lock
xchg
push
sar
mov
add
icebp
mov
push
sti
add
mov
lods
int
fimull
lods
sub
cmp
movsb
cmp
lret
mov
subb
push
and
jecxz
jmp
sbb
movsl
enter
loope
cltd
sbb
xchg
xchg
push
fdivrp
dec
into
hlt
xchg
in
push
popa
mov
jbe
mov
xchg
sub
cmpsb
pop
xor
pop
cltd
inc
adc
adc
dec
xor
push
sahf
adc
dec
adc
mov
and
ja
pusha
xor
and
mov
loope
add
xor
jge
scas
mov
sub
mov
mov
xor
jge
inc
cld
xor
stos
and
insl
fwait
cld
xor
aad
adc
mov
bound
scas
inc
sbb
aaa
sbbl
pop
mov
lods
repnz
test
jnp
pop
lods
xchg
jecxz
mov
rcr
in
jle
sbb
outsl
inc
cmp
dec
mov
push
inc
push
mov
jo
sub
jle
cmp
add
lock
xchg
mov
jns
fcomi
inc
test
cmc
xchg
fcoml
sbb
rolb
or
pop
aas
stos
push
ss
mov
and
xchg
mov
cmc
jge
pusha
sub
in
pop
pop
dec
xchg
in
mov
out
in
out
jbe
xor
jle
jb
push
adc
sbb
jns
pop
sub
ret
pop
lahf
scas
sbb
and
iret
add
and
xchg
adc
adc
data16
and
pop
xchg
fs
call
pop
mov
pop
cmp
xchg
call
or
lahf
adc
in
imul
dec
cmpsl
std
sub
outsb
lahf
xchg
fldl
out
fdivrl
adc
jge
lock
lds
mov
pop
test
out
mov
inc
push
push
xor
leave
push
test
jp
scas
xchg
pusha
dec
enter
push
mov
fldenv
lods
adc
clc
mov
js
push
push
aaa
inc
imul
mov
inc
sub
and
clc
aam
into
lods
add
adc
mov
mov
mov
pushf
and
pop
push
and
mov
add
cmc
popf
push
leave
and
push
jle
jbe
popa
mov
push
clc
dec
pop
jns
mov
xor
jb
add
outsl
out
push
daa
clc
les
pushf
fcomps
sbb
lods
out
jbe
int
outsb
clc
and
dec
sarb
inc
outsl
inc
cmp
jno
int3
sbb
cmp
cmp
xor
roll
test
and
loope
or
pop
or
inc
mov
xlat
adc
xchg
jno
bsr
scas
jmp
cmpsb
fwait
pop
jecxz
mov
rcl
dec
add
jns
dec
test
fisttps
hlt
cmp
arpl
push
imul
pop
ss
in
pop
push
shll
ret
cmp
adcl
lea
push
in
pop
js
fisubs
inc
gs
cmp
icebp
out
jmp
pop
addr16
inc
repz
rcll
movsb
sub
xchg
loope
inc
push
adc
leave
outsb
push
out
mov
add
int3
cmc
push
push
xchg
sbb
loop
add
dec
stos
popf
xchg
ficomps
es
push
lods
xor
pop
inc
xchg
in
mov
fadds
arpl
cmp
adc
cmpsb
cltd
fldcw
or
or
shrl
in
add
iret
lret
pusha
and
pushf
sub
pop
mov
lock
insb
ds
xor
in
sub
sbb
cmp
mov
in
pop
and
dec
mov
data16
mov
enter
cs
mov
sahf
dec
enter
pop
int3
fisubs
decb
fwait
sub
rcrb
sbb
push
push
gs
inc
in
cmp
imul
jo
jbe
outsb
into
stos
mov
fst
gs
dec
and
or
movsl
fwait
ret
mov
push
test
lods
fidivrl
rclb
push
mov
cli
dec
mov
mov
and
addb
cld
inc
les
push
sub
xchg
or
mov
aaa
std
jg
mov
sub
xor
and
enter
mov
mov
shrl
xchg
adc
xchg
call
inc
shll
sub
cli
stos
jb
mov
lds
inc
call
int3
jbe
in
xlat
cs
repnz
data16
and
repz
dec
daa
jecxz
xor
out
adc
nop
pop
push
inc
das
fnstenv
mov
inc
mov
pop
aam
inc
jle
inc
daa
add
pusha
xchg
fisubl
push
lret
out
xchg
jecxz
dec
lock
jp
push
bound
fistl
jp
lea
cld
lock
stos
sub
aad
call
sub
xor
rcrl
mov
pop
jb
aas
jecxz
xchg
lods
dec
xchg
and
pop
push
stc
lock
arpl
adc
imul
adc
push
ja
mov
and
lods
sub
fdiv
pusha
adc
push
lret
sti
lahf
out
add
popf
pusha
lea
dec
mov
inc
mov
adc
pop
dec
adc
out
adc
enter
mov
into
sbb
loopne
add
mov
add
mov
inc
cwtl
sub
xchg
sub
adcl
mov
bound
gs
lea
orl
cmpsl
pushf
daa
jp
xchg
xchg
or
out
adc
cltd
out
es
sbb
xor
inc
and
scas
mov
push
xchg
jmp
jge
popa
xlat
outsb
mov
aad
pop
adc
cwtl
cs
dec
je
mov
lea
repnz
push
lcall
pusha
and
adc
cli
daa
cmp
cmpsb
add
jmp
cltd
push
out
hlt
inc
xchg
repnz
ljmp
mov
xchg
and
iret
push
pop
cltd
sahf
cli
jl
mov
pop
xor
stos
repz
fsubrl
pushf
in
loope
pop
dec
xchg
jnp
jo
call
dec
sub
lock
mov
je
xchg
mov
insb
fwait
and
mov
mulb
lods
mov
pop
mov
pop
mov
and
mov
add
push
nop
mov
into
in
nop
outsb
xor
mov
in
lret
les
mov
xor
sub
iret
dec
push
rolb
sbb
cld
lea
int3
pop
jne
pop
push
ror
sub
adc
out
and
and
repz
lahf
outsb
xchg
cmpsl
shl
movsl
stc
inc
mov
jae
dec
xchg
mov
aam
mov
inc
mov
movsb
xor
cmp
arpl
inc
into
inc
or
or
cmp
add
and
fwait
push
xor
sub
inc
mov
xchg
cmp
mov
daa
ja
aam
cmp
push
stos
jl
lea
dec
dec
bound
imul
out
pop
fnstcw
dec
xor
mov
sbb
jmp
dec
shrb
pop
sbb
push
rcrb
sub
shr
or
lahf
ret
sbb
repnz
nop
jae
outsb
mov
into
xchg
fisttpll
jge
int3
gs
push
out
or
pop
sti
inc
push
sub
add
hlt
mov
clc
data16
lret
pusha
std
push
add
sub
sub
push
dec
pop
jmp
push
dec
mov
mov
sbb
lea
pop
lret
les
pop
cs
jecxz
cwtl
mov
jae
data16
push
std
lahf
ret
out
or
dec
mov
lods
call
testb
push
xor
cmp
bnd
fs
mov
and
repz
int
push
cmp
lret
je
xlat
pop
xchg
xchg
rolb
fwait
inc
loope
adc
add
jb
insb
or
mov
jbe
imul
xor
dec
repz
sub
sub
sub
pop
dec
or
inc
xor
mov
xorb
pop
mov
xor
idiv
popa
fisubrl
or
test
pushf
lcall
push
xor
out
jb
aas
imul
xor
xor
sub
push
imul
sarl
pop
and
dec
jl
dec
pushf
push
nop
push
fiaddl
fisttpll
xchg
jbe
add
add
jnp
and
jb
in
sub
pop
push
xchg
aam
dec
inc
adc
mov
insw
inc
jns
je
in
dec
push
mov
es
test
iret
test
push
ret
jb
lock
mov
aam
subl
push
ret
loop
add
test
or
popa
mov
push
daa
xchg
jle
adc
mov
sbb
mov
popa
xchg
cmp
aad
jno
daa
push
popf
jbe
neg
pop
cld
popa
ja
orb
xchg
arpl
outsl
mov
lock
mov
xchg
dec
out
out
push
push
mov
repnz
or
add
adc
mov
xchg
and
scas
pushf
mov
mov
push
enter
adc
mov
sbb
insb
into
loope,pn
mov
ret
dec
xor
add
arpl
test
clc
cli
or
sbb
jle
push
rorl
cmp
mov
inc
cmpsl
mov
clc
imul
icebp
shll
pop
out
mov
push
pop
scas
cmp
in
in
xlat
pop
and
cmp
push
mov
cmp
rorl
mov
add
and
loop
into
cmp
mov
mov
push
imul
dec
inc
lds
lods
in
adc
or
sti
scas
jmp
std
sbb
sbb
push
jo
cmp
andb
stos
pop
jmp
push
fcoml
filds
lahf
xor
push
sub
cwtl
pop
pop
xchg
dec
cwtl
mov
sti
loope
popf
lcall
adc
popf
in
push
sarb
scas
cli
or
or
loopne
repnz
xchg
and
adc
lret
sub
les
es
cwtl
inc
inc
jb
fisubl
fcmovnu
popa
jno
dec
mov
pop
sti
push
dec
lea
ja
sub
push
movsb
xor
jg
lcall
sbb
mov
shl
pop
cmc
into
cmpl
subl
mov
loopne
push
imul
jecxz
xchg
shlb
jns
adc
jnp
lds
iret
push
adc
inc
es
sbb
adc
cmp
mov
dec
mov
je
repnz
fcomip
int
dec
test
lcall
push
mov
aas
into
xorb
pop
cld
inc
mov
jb
jmp
and
jb
mov
call
imul
cmp
fcmove
fildll
xchg
push
aas
dec
add
jns
xchg
stc
aam
mov
sbb
jnp
xor
out
push
jns
cltd
outsl
and
mov
add
lods
pop
in
or
push
or
ja
sahf
loopne
or
out
cmp
scas
dec
jae
dec
dec
add
mov
pop
insl
repz
inc
inc
pushf
lods
aas
push
mov
ret
pusha
mov
lock
mov
jnp
scas
jecxz
pop
push
or
dec
mov
push
push
scas
imul
outsl
popf
enter
cmpsl
pop
mov
iret
xlat
incl
clc
rcr
fwait
adc
std
push
icebp
push
mov
cmp
scas
in
inc
jns
addr16
js
call
pushf
push
bound
int3
sub
inc
lcall
jno
in
mov
mov
and
push
push
push
lods
cwtl
add
lret
sbb
mov
or
mov
jbe
inc
fiaddl
andl
roll
fs
inc
sti
std
pop
je
out
aad
jnp
enter
test
testb
mov
push
inc
sahf
mov
xchg
pop
inc
iret
ss
jg
test
push
sbbl
fs
insb
imul
lahf
inc
ficomps
in
adcb
mov
jae
mov
cmp
lcall
pop
rcrb
and
pop
or
or
inc
jae
je
cmp
ret
mov
dec
and
mov
out
int3
test
dec
xchg
cwtl
daa
sub
mov
adc
pop
movsl
jecxz
shrb
pop
pop
jecxz
xchg
arpl
pusha
imul
mov
sub
popf
insl
mov
ljmp
sub
push
xor
push
imul
je
scas
or
mov
mov
jb
movsl
icebp
sti
lahf
mov
inc
movsb
int3
idiv
xchg
push
notb
std
fnstenv
outsb
jbe
dec
imul
push
adc
lods
adc
out
addr16
je
stos
pop
cltd
push
xchg
test
xlat
mov
fldcw
cmp
sahf
lea
and
and
push
sub
mov
jl
pop
sub
push
fldcw
addr16
movsl
jo
mov
xor
cmpsl
pop
std
mov
sbb
cld
cmc
adc
inc
int3
jns
cmp
outsl
int
aam
xchg
cltd
pop
cmpsb
divl
fs
fwait
shll
adc
jno
loopne
pushl
orb
cli
push
jl
add
mov
scas
mov
std
lcall
sbb
cmp
imul
dec
push
mov
pop
push
dec
sub
shl
ror
popa
pop
stos
shrb
or
out
adc
jns
mov
into
imul
mov
flds
push
pop
imul
mov
mov
loope
testb
scas
mov
lods
push
movsl
fwait
imul
ret
push
mov
xor
push
xor
data16
adc
arpl
ret
data16
into
jbe
xor
dec
pop
jl
sbb
inc
shlb
inc
shrl
das
icebp
aad
sub
and
and
lcall
aam
push
and
fsubrl
ret
clc
pop
or
mov
pushf
xchg
xchg
jmp
mov
dec
fwait
cmpsl
push
mov
sbb
sti
mov
add
gs
and
es
ds
fnstsw
jge
je
jbe
lcall
inc
push
pop
mov
lods
fwait
push
gs
mov
scas
repz
rorl
aam
lock
dec
adc
pop
pop
aam
sarb
rcrb
setb
sub
js
cmp
fsubrs
addr16
push
xchg
in
test
or
test
pushw
adc
add
in
sahf
into
test
push
call
mov
jge
lea
in
repz
pop
fisubs
out
jecxz
sbbl
inc
mov
xor
cmp
jns
xchg
mov
mov
std
ret
repnz
ljmp
sbb
aas
mov
jle
inc
adc
and
or
ret
scas
das
inc
movsl
sub
add
jle
xchg
testl
xchg
rcl
cmp
pushf
es
cmp
pop
inc
jae,pt
fs
sti
loop
dec
or
lods
mov
andl
push
into
fucom
cs
mov
stos
dec
adc
mov
cmpl
sbb
mov
imul
mov
mov
fisubs
xor
and
fmul
sbb
inc
xchg
push
xchg
repz
xchg
scas
fs
ret
lret
out
adc
popa
jbe
ljmp
jbe
aaa
or
sub
icebp
or
repnz
lock
idivb
mov
push
and
ret
jmp
addr16
ja
rorl
xor
lds
lahf
je
scas
sti
mov
mov
mov
mov
jp
imul
fistps
jnp
leave
cmpsb
bound
add
roll
lods
rcrb
out
aaa
xor
pop
xchg
subl
fidivrl
fisttpll
xchg
pushf
xor
pop
cmp
cwtl
loope
rorb
in
lods
bound
aaa
imul
clc
add
mov
enter
sbb
lahf
xchg
add
aam
pop
gs
dec
add
push
rcrb
rorl
out
daa
in
sub
push
mov
rolb
jecxz
and
in
pop
imul
inc
movl
push
outsl
cmc
jmp
stc
and
dec
push
jge
ja
inc
pop
sbb
adc
leave
into
mov
inc
xchg
rcrl
mov
int
es
stc
mov
mov
pop
jp
mov
or
xchg
add
sub
cmpsb
movsl
adc
jecxz
and
aas
imul
and
cltd
mov
das
fwait
add
push
repz
leave
loopne
xchg
cwtl
and
push
adc
les
test
sub
test
cwtl
mov
mov
mov
popf
jae
mov
xchg
movd
cwtl
cs
arpl
xchg
and
dec
cmp
arpl
mov
shr
cltd
lock
xchg
scas
mov
insl
nop
push
aaa
dec
ja
cmpsl
and
xor
add
clc
rcrb
loopne
mov
fucomip
xchg
inc
lods
rcll
test
jnp
sbb
in
imul
mov
xor
hlt
icebp
xor
mov
insb
jl
adc
inc
call
pop
daa
or
popl
test
xor
mov
addr16
mov
faddl
int
sub
add
mov
ret
mov
enter
jns
push
fucomi
mov
mov
pop
pop
inc
into
ret
push
fidivs
daa
mov
dec
stos
sbb
lds
xor
xchg
pop
pop
pop
addl
jne
mov
scas
fdivs
and
adc
xchg
out
test
les
inc
push
jecxz
pop
mov
cmc
sti
add
pmuludq
cmp
jne
icebp
in
loop
jg
mov
lds
mov
xor
rolb
pushf
rol
cmp
cli
in
lods
loop
int
cmp
jne
shll
adc
mov
bound
fs
add
pushf
fwait
mov
bound
clc
sahf
shll
dec
dec
or
sbb
ficoml
pop
mov
sbb
dec
push
mov
outsl
cmp
and
pushf
cmp
leave
jge
test
lods
cmp
jecxz
filds
lret
daa
push
mov
cmc
sub
loope
xor
imul
cmp
or
nop
push
inc
in
scas
xor
jno
cltd
xchg
stc
jnp
cmp
push
mov
insl
pop
repz
jb
mov
fsubs
mov
les
cmp
cli
push
sub
mov
aam
call
sub
shrb
imul
push
lcall
jmp
hlt
push
mov
mov
cmp
and
cmp
mov
xor
sti
xorl
dec
or
aaa
pop
stos
in
pop
pop
fstpl
jl
push
push
mov
dec
jb
into
mov
bnd
xor
pop
shl
cmpsl
and
sub
lds
sar
cmpsb
jbe
rcr
popa
sub
mov
cmp
clc
sub
sub
out
data16
ds
pop
dec
movsb
lahf
and
movl
out
xor
bound
repz
mov
xor
add
cld
jbe
stc
sub
cwtl
or
arpl
into
iret
sub
subb
in
pop
xchg
pop
sbb
xchg
ror
loopne
pop
xchg
lcall
sub
cwtl
push
fcmovne
fists
shll
pop
push
test
mov
and
pop
and
scas
xchg
sbb
out
mov
mov
cmc
gs
inc
or
inc
test
inc
or
dec
inc
aaa
jecxz
dec
sahf
jg
xchg
shlb
jg
int3
int3
mov
pusha
addr16
and
faddp
repnz
aam
sbb
jns
xor
lds
mov
or
mov
fldenv
push
inc
adc
adc
mov
test
rcrl
push
cmp
and
sbb
ret
lcall
insb
or
aaa
dec
sbb
sub
sbb
sub
jmp
psubw
jno
inc
out
clc
add
out
mov
iret
cmc
nop
cmp
mov
mov
jne
out
mov
in
mov
add
mov
xchg
sbb
push
mov
pop
js
cli
enter
mov
or
xor
cltd
js
mov
aad
fwait
icebp
out
xchg
mov
inc
cmpsl
stc
dec
jmp
adc
fs
mov
cmp
mov
arpl
adc
sub
imul
imul
cwtl
imul
iret
inc
icebp
push
lea
inc
pop
xchg
add
add
adc
ret
int
add
push
aaa
fimull
xchg
shl
out
adc
push
push
adc
dec
add
sbb
int3
lcall
xor
sbb
inc
jb
sub
aam
scas
xchg
lea
das
or
rol
and
call
jl
fnstenv
inc
jmp
ss
ds
sti
sti
daa
sbbl
add
and
mov
mov
adc
push
pop
ss
ror
xor
cltd
jno
iret
sahf
add
roll
repz
push
ret
adc
pushf
add
repnz
sub
sbb
jo
fs
sbb
int
push
fsts
test
xor
xchg
call
mov
les
aad
hlt
cmp
insb
movsl
mov
jg
stc
or
jo
jl
rclb
into
push
addr16
repz
rcrl
inc
mov
jl
mov
inc
addr16
mov
popf
add
popf
mov
xchg
mov
rcr
and
clc
jle
mov
and
push
cs
in
pop
mov
dec
popw
cwtl
call
adc
test
mov
push
pusha
lods
cmp
ret
mov
mulb
inc
mov
fidivl
shl
add
mov
jmp
sub
insb
add
addr16
scas
icebp
daa
lcall
or
inc
sub
xchg
xor
lds
repz
imul
jecxz
fldenv
push
enter
je
add
inc
lods
ja
adc
aad
pop
shl
push
imul
jae
cmp
bound
jo
jge
and
or
lea
lods
sbb
test
popf
dec
es
es
cmp
cmpsb
push
jmp
and
pop
pop
add
fbld
sub
push
test
outsl
out
xchg
sbb
insb
or
in
fsubs
das
int
aaa
enter
insb
mov
sahf
cli
std
cs
ja
dec
scas
adc
mov
lods
scas
dec
sahf
xor
mov
add
ficoms
mov
xchg
in
or
mov
adcb
bound
sub
movsl
xor
nop
repz
mov
mov
add
push
inc
lock
ret
popf
mov
dec
pop
push
push
cld
jmp
rclb
pop
sbb
loop
in
stos
pop
fidivl
mov
sbb
sbb
or
inc
push
lds
nop
rcll
outsl
pop
pop
fistps
shll
xor
icebp
das
in
nop
insb
loop
mov
or
hlt
jle
cmc
insl
inc
repnz
sub
addr16
xchg
fstps
add
or
fstps
lar
lahf
adc
flds
call
mov
rorl
imul
hlt
cmpsb
xlat
jb
push
aas
mov
outsb
xchg
test
jb
daa
cld
iret
xor
sbb
rol
aas
stc
push
jne
loope
xchg
inc
jmp
xchg
shl
sarb
in
sbb
jp
nop
dec
cmc
loope
lret
jno
pop
adc
mov
and
testb
push
sahf
mov
lret
sub
jg
shrb
fwait
jno
push
in
mov
xchg
cwtl
sbb
mov
fadd
mov
enter
inc
ljmp
cld
or
adc
inc
mov
fcoms
sbb
sahf
cmp
inc
xor
jp
cmp
movsb
loopne
push
sbb
jb
mov
push
jge
in
cli
movsl
loopne
sbb
mov
cli
movsl
sbb
dec
sahf
in
lods
outsl
sbb
cmpsl
imulb
mov
movsl
mov
rorb
pop
sub
cmp
inc
rorl
dec
add
dec
subl
int3
inc
sbbb
inc
loop
gs
out
dec
dec
loop
push
xor
rsqrtps
and
cs
sbb
push
sub
aas
cltd
mov
test
mov
es
and
xchg
jb
sbb
push
lcall
dec
les
nop
sub
cmpsb
inc
sbb
out
int
cmp
mov
mov
pop
jl
mov
cwtl
or
xchg
jg
clc
sti
inc
ja
jae
in
addr16
mov
leave
pusha
push
mov
add
imul
sub
jo
mov
je
mov
ja
inc
xchg
ss
mov
lods
sbb
mov
or
or
xor
jns
jne
mov
hlt
out
mov
imul
add
imull
test
push
test
shl
adc
push
roll
jge
iret
mov
xor
fadd
xor
sbb
inc
loop
in
insl
shl
xor
xor
lds
and
add
imul
mov
xchg
stc
jnp
add
fwait
stos
shrb
inc
lock
sub
pop
sahf
mov
add
lret
or
pop
and
popf
outsl
push
jg
or
call
mov
xor
xor
fildll
and
cmp
leave
jo
ljmp
fs
mov
dec
inc
rolb
movsb
daa
sarb
fisttpll
sbb
dec
xor
in
xchg
pop
xchg
adc
sahf
sub
lds
insl
sbb
pop
add
pop
cmp
dec
pusha
jp
push
test
sbbb
es
out
push
pop
and
push
xlat
insb
and
pop
scas
pop
arpl
mov
mov
gs
ja
cmp
mov
sbb
into
or
sti
aaa
push
add
imul
sti
popa
out
jmp
das
mov
or
jns
lods
inc
add
mov
lock
out
cmc
xchg
push
cs
stos
sarb
dec
jne
push
or
and
sub
pop
rcr
or
adc
fdivl
cmpsb
incl
xchg
enter
aam
in
loopne
rol
push
pop
push
icebp
xlat
outsl
jb
jg
lcall
es
jnp
mov
push
jg
iret
cmpsl
ds
pop
insl
ret
cmp
andl
pop
pop
scas
addr16
inc
int
cmp
dec
add
mov
or
mov
jno
fmuls
js
aas
fwait
daa
xor
xchg
xchg
test
outsb
xor
into
loopne
sbb
repz
hlt
mov
sub
sahf
outsl
pop
xchg
cmp
inc
inc
jbe
adc
or
sbb
or
outsb
cmp
push
fs
scas
xchg
and
fisubs
scas
in
push
pmuludq
dec
adc
insl
xchg
enter
sbb
add
sbb
repnz
rcll
dec
stc
out
mov
int
loopne
test
xchg
lret
pop
lods
lret
jle
in
xor
sub
ffree
mov
iret
sbb
das
dec
imull
test
sub
or
sbb
add
lret
lods
leave
push
cmp
inc
in
push
ds
inc
mov
add
push
mov
nop
loop
mov
test
jns
push
bound
addr16
lret
mov
jecxz
mov
jne
js
xor
mov
scas
fisttpl
pop
pop
push
jb
pop
or
rcll
stos
push
into
jmp
aad
data16
in
adc
or
dec
mov
movsb
pop
lds
idivl
adc
sub
sub
mov
xchg
shr
in
push
pop
adc
inc
cmp
les
addr16
lcall
mov
jmp
aaa
pop
push
cmp
in
or
sti
andb
and
idivl
pop
shll
and
or
ljmp
les
push
and
cs
mov
xor
mov
mov
jbe
mov
jno
jle
jecxz
jbe
sbb
inc
dec
mov
int3
loope
inc
sub
mov
sub
dec
shrl
lods
jg
out
std
push
enter
pop
jge
sbb
adc
mov
or
loopne
jecxz
jle
in
adc
sbb
std
into
ja
loope
and
mov
shrl
aaa
arpl
mov
dec
pop
jae
mov
insb
call
sbbl
lcall
pop
pop
and
fldenv
xor
mov
jle
add
dec
frstor
scas
aaa
jg
stos
int
push
fwait
aaa
imul
movsb
and
fnstenv
iret
sub
or
add
sbb
rcrb
lret
jmp
mov
pop
pop
jb
cmpsl
daa
and
mov
xor
sub
jmp
mov
out
pop
push
dec
push
sbb
cmp
mov
jae
or
cmp
icebp
xchg
inc
ja
fcmovb
jbe
cmp
inc
push
lods
lcall
cmc
fwait
mov
mov
test
push
cmpsb
out
mov
andb
test
cli
or
into
cld
jo
push
pop
arpl
gs
scas
and
imul
mov
enter
jnp,pt
repz
bswap
mov
outsb
int3
mov
adc
cld
fwait
out
imul
icebp
xor
xchg
mov
sbb
inc
xchg
in
push
out
pop
xchg
mov
lcall
push
push
sbb
cltd
or
clc
xor
insb
xor
in
xchg
fst
movsl
mov
out
pushf
jno
mov
fwait
call
ja
rorb
xchg
mov
sub
mov
mov
lock
pop
iret
roll
adc
in
mov
or
inc
adc
iret
clc
fadd
jle
jecxz
lds
shl
shlb
icebp
and
sub
lock
daa
popa
ds
dec
push
stos
xor
aaa
incl
sbb
mov
cmp
jmp
sbb
outsl
loopne
push
sbb
dec
in
sbb
push
dec
hlt
cmp
mov
out
jle
outsl
repz
out
adc
sbb
and
and
or
pop
inc
rorl
sbb
adc
adc
cmpsb
cmp
aaa
pop
mov
insl
insb
add
xchg
int
daa
and
dec
sarl
jp
adc
mov
jg
iret
xor
or
std
js
negl
mov
and
lock
sub
sub
scas
push
or
and
sub
add
inc
leave
idivb
xchg
mov
fldenv
mov
ss
aam
out
out
inc
push
lea
mov
rcll
cld
jmp
mov
lods
xchg
jl
cmp
in
lds
xchg
pop
mov
int
mov
pop
mov
add
or
push
pop
xchg
fldcw
scas
movb
mov
lret
mov
mov
leave
mov
insl
push
or
mov
jmp
ss
ds
je
ret
lods
imul
outsb
adc
adc
popf
push
stc
mov
cmp
add
add
into
mov
push
stc
pop
and
aas
int
xlat
mov
xchg
movsl
jge
add
jae
inc
adc
mov
mov
std
shrb
mov
sahf
jne
fisttps
lds
mov
xor
iret
lret
sahf
call
cmp
loop
and
shrl
lahf
adcb
adc
dec
push
pop
mov
ds
loopne
adc
xor
cmpsl
mov
xchg
jnp
sbb
insl
scas
sahf
stc
imul
push
test
ret
call
push
or
lea
inc
sub
ljmp
inc
in
scas
or
out
das
wbinvd
bnd
xor
or
paddusb
push
fnstsw
dec
pop
xchg
cwtl
push
and
arpl
ret
out
call
pop
lret
frstor
lret
mov
jbe
push
stos
xchg
adc
and
mov
and
xor
lcall
push
lcall
push
mov
pop
aaa
xchg
in
and
mov
loop
les
shrb
or
xor
jg
xchg
aam
mov
push
pop
lods
data16
test
push
mov
push
add
addr16
cmp
ljmp
das
ds
les
mov
mov
pop
dec
in
pop
cmpsl
push
cmp
sbb
inc
and
mov
mov
xor
ficompl
jb
inc
aas
stc
xchg
addl
into
xchg
iret
and
xor
push
mov
cmpsl
cmp
pop
cmp
xor
push
mov
addl
cmpsl
in
sub
movsb
pop
clc
ljmp
push
pop
dec
mov
aad
leave
ja
divl
cmpsl
jecxz
dec
add
daa
adc
jo
adc
sbb
ret
lods
inc
cmpsb
xor
ficoml
test
movsb
dec
std
mov
mov
adc
sbb
sbb
movsl
add
lods
stos
in
jnp
pop
jl
fildll
mov
sub
stos
mov
sbb
hlt
sbb
inc
pop
hlt
cmp
das
inc
add
iret
mov
jg
iret
rol
sbb
jg
lahf
movsb
cmp
push
xchg
outsb
mov
dec
and
xchg
cmpsb
xor
je
xor
ret
int3
cmc
push
push
push
sbb
and
push
out
push
push
push
pop
push
xor
sbb
sahf
into
out
sbb
iret
jg
jo
lcall
sti
rcr
lahf
push
mov
dec
aad
lods
icebp
xor
mov
pop
lret
push
les
scas
pusha
sti
or
aaa
xchg
mov
inc
sub
cmp
cli
mov
inc
data16
mov
addr16
mov
xchg
mov
mov
mov
sti
jne
dec
lret
sti
shrb
mov
or
out
repnz
mov
cwtl
subb
notl
xor
cmp
mov
xor
mov
lock
ret
out
pop
push
bound
xor
dec
jno
add
jmp
js
sbb
sbb
inc
repz
ficomps
push
std
cmpsb
stc
fldl
fistpll
mov
mov
or
icebp
and
cld
div
add
mov
je
inc
dec
xchg
insb
and
out
and
sbb
loopne
rolb
or
repnz
ror
adc
dec
sub
test
push
and
std
dec
pop
shrb
movsl
jle
and
aas
push
pop
ret
mov
insb
pop
push
push
and
test
repnz
dec
mov
xor
data16
mov
out
lds
test
jb
icebp
and
stos
xor
repz
pop
or
mov
push
ss
inc
mov
push
xor
jmp
xor
add
jmp
pop
fwait
push
mov
push
xor
jno
or
lods
lret
mov
int
dec
sti
jl
pop
xchg
je
ret
mov
pushf
mov
mov
pusha
pushf
dec
arpl
xchg
sub
mov
out
dec
idivl
adc
adc
int
ret
push
inc
push
xor
cmp
stos
mov
xor
and
call
into
lock
sarl
mov
cmp
sub
or
decb
mov
and
das
cwtl
iret
xor
pop
repz
fsubrl
repz
or
pop
push
inc
jmp
adc
aam
adcl
cwtl
mov
out
int3
mov
leave
mov
xor
mov
adc
jg
lcall
shll
sbb
enter
mov
mov
addl
sarb
push
loope
and
cmp
jl
subb
jecxz
fwait
push
insb
push
in
int3
adc
js
jb
inc
push
xchg
xor
cmp
and
out
fmulp
repz
cmpsb
cs
iret
ss
add
ja
dec
add
sbb
xor
in
xchg
pop
out
stos
mov
or
fwait
jg
add
lcall
sti
xor
xchg
mov
push
sbb
dec
mov
test
fldt
les
repnz
mov
adc
lea
rcrb
lcall
add
aad
neg
mov
xchg
pop
mov
aaa
movsl
hlt
test
rclb
lods
ljmp
jb
or
inc
popf
dec
js
pop
insb
popa
das
imul
inc
repz
loopne
shrb
push
lock
mov
mulb
mov
into
dec
cmp
fldl
loop
pusha
sbb
jnp
pop
aad
bound
rolb
cmc
test
ficoml
addr16
xor
popf
mov
pop
xchg
push
jle
pop
xchg
add
imul
adc
xsaveopt
icebp
out
pop
or
lret
pop
lods
add
stos
subb
cwtl
dec
or
add
hlt
and
pushf
pop
roll
inc
push
rcll
xchg
es
inc
jno
jecxz
das
xor
les
push
adc
jge
rol
nop
inc
add
jne
mov
jge
aam
pop
cmp
loopne
test
sub
frstor
out
jne
lahf
xor
rcrl
lcall
lock
mov
xor
jg
ficoml
or
lret
scas
pop
bound
pop
sub
fwait
cmpsb
jmp
add
fbld
or
sarl
lds
adc
mov
xor
or
orl
jecxz
loope
mov
stos
xchg
jno
push
pop
mov
scas
ret
lahf
std
or
dec
sbbl
pushf
sbb
addl
add
add
insl
call
sbb
stc
insb
sahf
cmpsl
cmp
xchg
loop
and
adc
out
inc
pop
insl
gs
imul
mov
xor
cmp
add
add
scas
cmp
jae
mov
cmp
xchg
or
or
outsb
popa
pop
outsb
add
mov
cwtl
lds
rorb
stos
sub
test
dec
outsb
pop
orb
in
ljmp
pop
js
push
jno
test
add
stos
inc
mov
lea
dec
hlt
mov
push
fwait
sbb
sub
test
dec
inc
and
jmp
popf
lods
inc
jle
scas
pop
out
fdiv
faddp
pop
mov
insb
or
int3
or
pop
iret
push
shlb
movb
cs
cld
inc
xchg
dec
leave
or
pop
inc
push
add
mov
adc
fstp
rclb
mov
testl
fiadds
mov
shl
add
rcrl
and
rcll
sub
ljmp
add
and
adc
or
and
inc
xor
in
mov
iret
cmp
gs
lock
fwait
outsl
orb
jo
aas
lock
jecxz
xchg
add
fwait
and
les
xorb
inc
fcmovu
scas
sbb
arpl
test
mov
pop
or
out
mov
enter
mov
adc
xchg
dec
nop
jae
into
out
dec
popl
mov
ja
data16
or
push
sbbb
adc
or
sbb
xor
arpl
push
sbb
int
inc
and
mov
inc
dec
pop
test
xchg
cmp
xchg
adc
and
adc
xchg
xchg
ja
mov
jno
push
add
outsb
push
cmp
lea
mov
rorb
ret
push
bnd
dec
into
aad
mov
pop
shll
sub
mov
lcall
mov
mov
xchg
cmp
dec
jo
and
sti
mov
mov
ja
and
lock
cmpsl
ljmp
das
mov
xor
mov
xchg
dec
arpl
push
or
dec
xchg
jecxz
int3
psubw
fisttpl
or
orb
daa
jmp
daa
mov
xor
fisubrl
xchg
dec
xor
push
jne
mov
popa
xchg
xchg
jb
xchg
hlt
dec
pusha
and
dec
stc
xor
inc
insb
scas
cmp
or
xchg
fwait
dec
stc
jae
or
cli
aas
insl
mov
mov
add
dec
xor
xor
test
lods
push
sbb
sub
sub
pop
mov
push
push
mov
lods
bound
sbbb
int3
imul
mov
lcall
sub
iret
popl
or
test
mov
mov
inc
dec
test
and
push
jbe
in
cli
aaa
or
sbb
mov
inc
adc
mov
imulb
pop
orl
xor
cmp
push
mov
xor
movsl
add
fwait
popf
out
and
push
push
stc
shll
push
bnd
cmp
sbb
aas
adc
jp
xchg
mov
pop
or
ja
icebp
shll
mov
jg
push
outsl
and
inc
int
mov
inc
xor
push
dec
dec
jmp
ficomps
pop
mov
and
repz
imul
and
and
enter
or
sbb
mov
adc
adc
enter
jno
pop
je
pushf
or
bound
or
cmpsb
push
test
lret
or
jecxz
in
mov
lock
add
loopne
insl
xor
mov
push
mov
mov
jmp
ret
xchg
sub
ret
cs
mov
mov
bound
and
loopne
lahf
stc
or
inc
pushf
into
jns
dec
imul
and
or
mov
xor
push
lcall
mov
mov
fwait
imul
xchg
sbb
ds
mov
mov
insl
stos
pop
rcrb
dec
jmp
pop
out
mov
dec
jg
cmpsl
cltd
fdivrp
sbb
fildll
add
xor
sub
lret
mov
lods
sbb
push
insl
xchg
sub
dec
add
stc
jno
mov
ljmp
notb
std
sarl
sbb
sub
push
pop
add
dec
test
jle
mov
or
xor
mov
adc
adc
add
or
loop
sbb
adcb
sti
pop
ljmp
pushf
bound
cmp
int
mov
or
jmp
aaa
icebp
pmuludq
push
aad
inc
mov
sub
mov
lcall
inc
adc
pop
fdivrl
dec
addr16
insb
es
cli
pusha
add
fisubrl
mov
popf
orb
dec
pop
jb
lock
fdivrl
out
jecxz
or
cs
fidivs
mov
ja
or
xlat
push
outsl
popa
into
sbb
and
cwtl
jmp
insl
push
mov
lds
repnz
mov
fsubl
mov
loop
sbb
add
sbb
lods
mov
cmpsb
pushf
pushf
icebp
imul
popl
arpl
test
mov
lock
orl
repnz
ror
xor
paddsb
and
push
in
shrb
mov
ja
and
fbld
dec
arpl
add
aam
mov
sbb
and
jns
jecxz
push
ffreep
push
push
es
fcmovbe
cs
fdivl
and
add
mov
je
out
xchg
daa
pusha
aam
or
aad
loope
inc
or
add
mov
add
mov
addr16
test
push
es
lods
sub
sub
dec
fsubr
cmp
xchg
bound
outsl
lea
add
in
paddq
fldt
cmp
gs
ret
scas
mov
jg
aas
loopne
jae
jl
add
jo
inc
nop
jl
adc
or
arpl
pop
lods
faddl
xor
or
and
aaa
jbe
add
cmp
xor
call
test
rclb
into
push
aaa
add
mov
adc
rcrl
add
lret
inc
xchg
adc
ret
add
in
test
cwtd
in
mov
in
je
scas
daa
out
popa
cmpsl
insb
outsl
lods
imul
inc
data16
shrb
enter
jmp
aad
ss
movsb
icebp
or
cwtl
fcomi
sub
lds
and
aaa
shlb
jb
scas
in
or
stos
lea
scas
int
cld
dec
not
loop
or
outsl
out
push
add
popa
sub
mov
jecxz
sti
lahf
cmp
jle
add
lret
cmp
and
ret
jb
clc
ss
or
repz
xlat
cmp
daa
xor
mov
adc
xchg
mov
js
add
repnz
movsb
lds
pop
div
aaa
adc
jmp
lock
dec
dec
jle
add
shlb
loope
xchg
pusha
das
fidivrl
dec
xchg
mov
push
or
movsl
popa
fs
idiv
jno
add
mov
jle
pop
cmp
insb
std
xchg
mul
fucomi
int
aam
mov
push
jb
or
sbb
ret
out
push
or
xor
int3
mov
dec
mov
cmp
loop
popa
ret
stos
lods
sbb
gs
vpsllq
mov
sub
fisubrl
ljmp
or
pop
sbb
loopne
push
xlat
inc
sarl
divl
mov
dec
cmp
pop
repnz
xchg
sbb
push
lahf
add
xor
inc
aaa
scas
out
jns
jnp
lret
test
enter
in
daa
stos
inc
xchg
jle
icebp
and
insl
icebp
ss
sbbl
jmp
test
push
scas
pop
sbb
lds
out
xor
jmp
ret
dec
add
jns
sti
fisubs
adc
or
fwait
adc
repz
cmc
enter
adc
in
lock
cmp
xor
popf
add
out
mov
imul
shl
js
jecxz
stos
inc
je
or
sahf
dec
test
popa
scas
add
cmpsb
lds
push
out
push
push
inc
loop
fnop
xor
cmpsb
adc
lods
xor
sbb
pop
cli
jae
aad
push
cmp
cmc
jno
imul
pop
mov
inc
outsb
xor
mov
pop
vpcomuw
dec
dec
push
dec
and
mov
xchg
frstor
and
sbb
int
fiaddl
add
inc
inc
dec
pusha
cs
xchg
cltd
cmp
lret
fstpl
cmp
mov
scas
in
insb
fcmovb
mov
call
xchg
imul
push
sbbb
lcall
ret
imul
mov
addb
test
xor
push
cmp
imul
and
mov
mov
into
andl
mov
repnz
ljmp
jge
xchg
mov
dec
mov
pop
pushf
lahf
in
push
shl
xchg
push
inc
loope
insl
sbb
insb
mov
loope
inc
stc
mov
imul
dec
ss
js
add
xchg
pushl
mov
test
or
mov
pop
push
pusha
push
scas
adc
aas
mov
jb
push
adc
mov
push
inc
pop
dec
fcompl
mov
push
mov
int
xlat
out
das
add
xor
lret
pop
outsb
cmp
in
cmp
jb
int
push
mov
inc
fs
adc
mov
push
mov
ja
push
nop
fs
xchg
imul
lds
jae
jge
mov
inc
jp
mov
cltd
daa
push
les
decl
stos
loop
xor
leave
in
lock
or
fiaddl
in
popa
mov
std
pop
js
fwait
dec
mov
push
mov
in
mov
push
out
int3
cmp
mov
mov
mov
pop
fidivrl
ja
adc
jnp
cmp
sbb
cmc
mov
xor
aam
jo
divl
iret
jp
pop
icebp
cmp
fnstsw
xchg
xchg
popf
in
adc
out
jb
pop
or
sbb
or
in
rcrb
test
and
or
wbinvd
gs
xchg
cmp
iret
mov
jns
nop
xor
leave
adc
adc
sbb
adc
jo
rcr
inc
imul
inc
rclb
sub
clc
or
pop
shll
repnz
cmc
sub
mov
out
mov
or
psllq
stos
in
aas
pusha
pusha
outsb
cmp
cmp
jmp
or
in
stc
movsl
fcom
jp
mov
pop
cmp
ljmp
stos
xchg
cli
inc
mov
cmp
inc
aam
mov
inc
in
and
jb
jb
dec
lret
js
push
add
pop
dec
cs
xchg
mov
xor
push
iret
pop
pushf
arpl
cmp
loope
fnstenv
cmp
xchg
inc
dec
and
xor
sbb
popf
lret
fistps
dec
mov
cmp
pop
push
lock
xchg
outsl
das
jne
pop
pop
in
and
les
daa
ds
aad
mov
xor
jle
outsl
push
pop
pop
lcall
inc
mov
pop
stc
cld
roll
cmpsb
jno
daa
sbb
test
or
push
mov
push
in
or
pop
add
inc
cmpsl
insb
jge
mov
rcll
inc
mov
jle
mov
jp
cs
pop
hlt
daa
mov
lret
fstpt
xchg
out
sub
pop
pop
jge
push
imul
mov
jle
sbb
into
push
pushf
vpcomneqb
mov
inc
cmpsl
aas
or
cmpl
jbe
adc
add
shll
daa
lock
pop
mov
and
ss
pop
sti
cmpsl
out
mov
imull
dec
shr
cmp
lret
pop
imul
push
aad
out
pop
mov
fisttps
sub
aad
cmpsb
in
cs
push
jno
xchg
sbb
lock
out
scas
mov
pop
pop
fcom
pop
fimuls
add
jb
mov
insb
dec
adc
sub
inc
mov
lea
and
jo
xchg
sbb
ja
enter
movsl
enter
lea
shlb
xor
fbld
dec
subl
dec
inc
and
lret
jnp
imul
stc
je
sub
dec
xor
inc
cld
cmc
dec
idiv
lods
xor
push
add
scas
das
shl
or
and
das
pop
or
scas
pop
mov
ds
xchg
lcall
xchg
daa
imul
push
repnz
mov
mov
mov
and
lret
imul
fstl
jl
inc
push
inc
mov
push
push
popf
subl
imul
scas
sub
cmp
and
xchg
jmp
adc
sbb
jbe
cmp
dec
xor
cmp
js
xchg
sbb
leave
jl
loopne
sbb
es
ja
call
adc
push
cld
sbb
outsl
push
pop
add
push
push
mov
aam
pusha
jmp
leave
add
push
ja
dec
leave
pop
cmc
pop
imul
jns
push
imull
je
or
mulb
insb
sub
inc
push
shr
push
mov
mov
add
mov
icebp
addr16
or
cmovge
insb
pusha
push
ss
xchg
push
sub
dec
stos
pop
aas
jmp
mov
sbb
pop
shrb
in
dec
es
xor
sbb
movsb
outsb
inc
inc
push
outsb
int3
xchg
cmp
popa
aas
sbbb
mov
pop
sub
lock
mov
add
xchg
push
mov
add
add
sbb
mov
push
push
lds
push
pop
imul
aaa
std
arpl
sbb
in
iret
ds
or
pop
out
or
xor
test
xorb
notl
je
bound
sahf
xchg
add
loopne
pop
or
ficoms
rolb
cld
cmpsb
jmp
inc
mov
mov
add
pop
cltd
hlt
aas
and
or
jae
mov
xchg
adc
xor
push
repz
ficomps
or
pop
subb
rcrb
hlt
jmp
sub
xchg
push
shlb
mov
and
movsb
das
sbb
dec
imul
push
push
test
push
inc
add
cmpsl
xlat
pop
fwait
and
jbe
dec
or
mov
leave
adc
cmp
pushl
out
push
loop
jb
inc
divb
imul
lret
gs
out
flds
scas
dec
and
pop
xchg
inc
adc
mov
jl
push
xor
shlb
lret
mov
ret
pop
pop
cmc
push
icebp
es
cmp
jns
or
push
repz
rol
les
jmp
add
push
dec
lds
and
jne
pop
shll
pop
ret
popf
bound
jb
sbb
sub
aaa
jns
jg
icebp
loope
adc
scas
mov
xchg
ljmp
inc
int3
cwtl
fs
hlt
leave
fsubs
mov
sbb
mov
outsb
testl
mov
loopne
sbbb
scas
out
and
xor
mov
ds
imul
pop
xor
mov
rol
dec
jo
clc
iret
dec
movsl
and
pusha
bnd
pop
inc
mov
js
pop
jmp
sub
jns
dec
pop
arpl
divb
mov
mov
fstp
rorl
fcompl
into
pop
shll
int3
inc
add
dec
jmp
rclb
or
bound
inc
pop
sub
adc
mov
add
sub
mov
outsb
pop
jb
xchg
iret
ja
andl
xor
test
ret
out
push
add
outsb
push
adc
std
or
pushl
or
push
push
ret
mov
adc
scas
pop
aas
pushf
fwait
cmp
push
adc
leave
test
fists
pop
lods
add
popa
ds
jle
pop
dec
push
xchg
push
inc
mov
repnz
cmpsb
adc
ja
mov
push
fcmovb
xor
add
pop
je
xchg
pusha
pop
xor
pop
stos
cmp
mov
jns
add
xchg
nop
adc
dec
ja
mov
add
or
sti
and
outsl
scas
daa
and
lods
mov
sbb
push
lahf
jg
cwtl
dec
and
mov
lock
push
xchg
push
cld
lahf
outsb
push
shr
fidivrl
inc
nop
mov
jo
jno
sub
enter
js
iret
daa
sub
out
fisubrs
aaa
ja
imul
stc
adc
call
xchg
lret
sarl
inc
dec
push
adc
in
fwait
lock
cmp
or
push
movsl
fs
cltd
lods
jno
xchg
pop
rcrb
orb
cmp
add
out
adc
arpl
xlat
cmp
sbb
loop
mov
lock
xchg
outsb
inc
xchg
pop
mov
std
sbb
mov
pop
pop
mov
adc
mov
lret
scas
lods
push
xchg
in
adc
je
mov
int
daa
aas
mov
cltd
jbe
inc
cmp
nop
xor
daa
cmp
roll
push
pop
into
sbb
push
cmpsb
cmp
xchg
jno
lock
shlb
sarl
mov
movsl
and
cmp
pop
adc
mov
sub
pop
mov
xchg
pop
inc
ret
add
push
test
mov
inc
ret
mov
inc
sub
inc
andb
fildll
pop
jno
fisttpl
sub
addb
xchg
sbb
pop
xor
or
inc
and
cli
pop
pop
out
xchg
repz
decl
out
jo
sbb
in
inc
gs
jp
add
arpl
pop
add
sub
add
mov
jne
das
jp
mov
daa
or
pop
sub
sti
stc
push
sbb
push
and
cmp
shlb
inc
cmc
lea
add
fisttpll
lods
repnz
push
test
outsb
or
rcr
jb
into
push
pusha
std
testb
push
and
fdivr
add
test
subb
inc
mov
mov
js
jb
xor
mulb
jae
in
push
int3
cmpsb
lea
lods
ja
int3
aaa
clc
pop
int
loopne
sbb
fsubrs
mov
in
addr16
cmp
std
cli
pusha
push
cmp
pop
push
stos
mov
mov
jmp
xorps
das
hlt
mov
push
test
mov
stos
dec
cmpsb
pop
add
outsb
call
mov
mov
cmp
xlat
fisubs
or
jg
jnp
divl
xlat
stos
cmpsl
sub
cmp
push
dec
sti
push
pop
jb
sub
fiadds
dec
cmp
push
out
lret
mov
nop
ds
mov
and
sub
mov
rclb
dec
sti
outsl
mov
or
popf
push
inc
dec
jns
mov
lds
pop
xchg
mov
fnstenv
xor
xchg
hlt
rorl
ret
inc
jmp
fwait
sub
jge
jge
shll
sub
cmp
lds
and
jecxz
cld
push
ss
inc
data16
jmp
insb
lahf
pop
dec
mov
xlat
int
divb
xchg
or
bound
fnsave
jl
scas
sub
ffree
addr16
adc
jo
push
pop
das
in
mov
clc
cltd
inc
sbb
cs
cmp
pop
jmp
jp
movsb
je
or
inc
icebp
sbb
lock
dec
cs
pop
mov
mov
pop
pop
mov
test
in
lock
cmp
mov
in
pop
add
xchg
cmp
cmp
sub
add
loopw
adc
imul
lds
push
cmp
and
xchg
cmp
das
loop
stos
notl
add
pop
int3
jno
mov
shll
xor
fs
push
scas
push
outsb
test
push
stc
outsb
outsb
rclb
movsb
test
or
outsb
or
aaa
jecxz
out
xor
xor
jns
out
mov
iret
and
add
pusha
xchg
stc
lds
stc
mov
xchg
and
and
test
movsb
into
hlt
ss
lret
int
pop
idiv
mov
cmp
bound
test
fsubr
adc
and
jg
xchg
jmp
mov
aaa
mov
dec
mov
int
insl
sarl
fisubl
pop
fsubs
mov
cwtl
xor
inc
mov
lods
rcrb
out
popa
add
mov
cmp
aad
xchg
push
mov
mov
xchg
sub
in
or
and
add
lahf
mov
jbe
xchg
xor
stc
sbb
adcl
out
aaa
add
jno
lea
push
sbb
fisubrl
sub
les
mov
add
std
mov
scas
xlat
dec
or
sbb
cmp
fmull
dec
mov
cwtl
popa
clc
shl
testl
cwtl
lods
gs
cmp
test
fwait
andb
dec
push
push
loop
xor
test
cmp
add
xchg
xor
jg
cmp
sahf
andl
and
adcl
pushf
sbb
in
and
push
clc
cmp
and
bndstx
add
test
sbb
push
movb
mov
icebp
scas
loope
aam
jo
or
and
fcmovnbe
push
xchg
sarl
loopne
ret
lahf
xor
or
repnz
fs
imul
and
xor
out
call
dec
lcall
rcl
mov
xor
jne
pop
mov
ja
popf
out
xor
sbb
inc
mov
fcmovne
idiv
add
mov
cmp
pop
scas
cmp
scas
lods
ljmp
mov
push
sbb
leave
mov
mov
or
push
and
sub
sub
lahf
scas
push
hlt
es
nop
and
rcrl
lods
ret
mov
push
or
orb
pop
push
jno
mov
push
or
pop
hlt
xchg
scas
jnp
scas
mov
mov
push
popf
movsl
mov
cmp
inc
sub
inc
insb
iret
mov
jae
call
add
or
out
call
cmp
or
loopne
jl
cmpsl
xchg
fwait
cmp
iret
sti
inc
or
cmpl
ret
add
pop
jne
mov
sbb
mov
enter
inc
into
adc
pop
sar
pushf
adc
mov
mov
cmp
push
jb
scas
and
jae
popa
loopne
idivb
xchg
scas
push
fpatan
popa
lcall
sbb
mov
ret
inc
and
test
or
xor
push
inc
shl
loope
lahf
jp
cltd
movsb
push
div
ljmp
das
jns
jns
xchg
out
pop
and
jae
mov
repz
lods
int3
mov
pminsw
mov
jb
dec
mov
dec
leave
add
jo
clc
adc
sbb
stos
ret
imul
je
sbb
loope
inc
inc
mov
pop
cli
inc
ret
fnsave
imul
fdivrs
pop
stc
ss
sub
xor
lcall
popa
push
leave
ss
in
lcall
fldlg2
mov
add
push
add
sbb
dec
mov
fcmovne
loope
pop
xor
cmpsl
js
ljmp
test
clc
repz
aas
push
sbb
dec
movsl
jae
mov
test
aam
ret
and
xlat
jle
test
push
jp
nop
rol
mov
sbb
xor
data16
gs
repnz
sbb
mov
push
sbb
fmulp
sbb
in
cwtl
pop
sub
jbe
cs
mov
imul
and
sub
ja
icebp
push
pop
mov
jp
popl
mov
mov
mulb
out
mov
and
mov
dec
rcrb
push
jae
and
aad
dec
fcompl
push
movsl
adc
aam
mov
mov
mov
mov
fwait
lea
shll
movsl
fisubl
or
mov
out
scas
cmp
fnsave
mov
add
cmp
mov
int3
ret
shll
mov
test
mov
or
fiadds
push
xor
or
je
and
loope
sub
xlat
movsl
xchg
daa
adc
je
mov
lret
add
lahf
adc
rorb
imul
push
cmpsb
lods
popf
push
orl
add
cld
adc
shrl
xor
inc
xor
insb
loop
movsb
jle
aaa
cwtl
xor
and
sub
test
push
cmp
in
xchg
mov
xchg
les
cld
sbbb
in
sbb
filds
imul
add
add
hlt
jbe
sub
js
fists
push
out
mov
ds
sub
jl
into
outsb
in
je
jmp
mov
insb
jp
scas
scas
push
sbb
add
lods
adc
cmp
jnp
addr16
jo
jg
xor
mov
das
push
sbb
cmp
aas
mov
test
pop
outsl
ja
inc
cwtl
mov
orl
jnp
and
push
stos
lods
push
sbb
test
sub
sahf
leave
outsb
inc
jo
push
mov
movb
push
push
dec
adc
cmpsl
xchg
bound
pop
pop
dec
in
xor
outsl
in
or
sbb
out
mov
cli
arpl
insl
adc
jp
repz
dec
shrb
arpl
push
adc
in
scas
sbb
insb
lret
sbb
data16
inc
jp
stos
call
mov
out
sti
mov
sarl
dec
stos
int3
decb
lcall
andl
inc
add
sub
mov
lahf
pop
lea
add
and
ficompl
insb
outsb
out
cld
data16
cmp
shlb
icebp
adc
jp
xchg
sub
rorb
ljmp
fs
popf
je
sub
jmp
pop
outsl
mov
in
ljmp
cmp
sbb
lret
clc
mov
sub
andb
insw
add
jne
je
push
pop
jp
pushf
pop
add
mov
mov
popf
sub
sub
adc
fsubp
stos
push
ret
cltd
stos
mov
or
mov
xor
jmp
or
push
xor
into
lcall
xor
cmp
out
gs
in
mov
lret
insb
je
inc
in
lods
pop
xor
lcall
mov
shrb
shlb
cmp
inc
fwait
mov
ja
mov
mov
sub
mov
ljmp
ficomps
fisttps
cmp
inc
jbe
pop
std
xchg
jno
lret
dec
cmpsb
out
cld
jp
repz
lods
mov
mov
cmp
or
pop
inc
push
cwtl
lock
push
adc
movl
pop
test
lea
and
jl
or
gs
sub
pushf
xor
shl
pop
or
mov
mov
or
add
inc
fstpt
mov
ja
mov
inc
cmc
cs
cltd
out
sbb
sub
lods
mov
pusha
mov
jmp
je
mov
mov
mov
add
je
lods
nop
adc
test
movsl
outsl
push
jae
or
cmp
dec
ret
mov
push
xor
push
mov
inc
cltd
and
repnz
adc
ja
ret
push
imul
sbbb
jbe
xchg
test
mov
sub
cmp
fwait
push
cmp
cmc
cmp
jle
add
push
test
cmp
sub
dec
xlat
dec
lock
pusha
xchg
xor
or
movsl
push
fidivs
xor
push
dec
xor
test
xor
adc
popa
outsl
pop
outsl
repz
fists
mov
xchg
outsl
pop
repnz
call
ljmp
outsl
add
ret
push
test
dec
jl
ljmp
cltd
scas
in
in
call
mov
ds
cld
cmp
clc
cmpsb
daa
les
mov
add
lods
movsl
jecxz
jne
imul
sbb
jne
dec
cwtl
dec
mov
imul
jg
lds
lods
inc
fidivrl
orb
push
mov
rcl
cmp
ds
sti
lea
push
xor
jne
add
mov
stos
pop
push
xor
ss
mov
or
jno
pop
lods
and
filds
ret
incl
pop
sub
fs
or
ficoml
or
xchg
mov
nop
lret
gs
rcrl
or
js
std
or
pop
icebp
mov
lea
fsub
push
push
adc
lock
pushf
push
je
movsl
xor
cmp
pop
jge
sar
pushf
or
mov
mov
cmp
xchg
mov
sub
sub
mov
mov
and
inc
popa
cmp
lret
dec
sarb
push
and
mov
sub
es
test
xor
out
dec
rcrl
sbb
and
pusha
adc
ds
add
dec
js
lcall
cmp
adc
jbe
orl
or
mov
int
cwtl
in
daa
jae
cmp
insl
jecxz
xchg
js
xchg
aam
iret
data16
xor
stos
leave
out
mov
sarb
sub
or
inc
mov
xchg
pop
aad
and
rcrl
mov
out
mov
jae
in
mov
lods
cmp
mov
pop
sbb
mov
pop
sbb
add
mov
fisubrl
jno
cltd
cmpb
xlat
inc
pop
fstpl
in
sbb
ljmp
xor
pop
mov
adc
and
jno
dec
cmp
cltd
daa
int3
dec
fnstsw
imul
bound
dec
insb
pop
int
jl
in
roll
xlat
inc
cmpsb
repnz
popa
rorl
lcall
push
sbb
movsb
paddsb
xchg
pushf
dec
sbb
lea
imul
add
mov
cmpsb
rolb
fimull
mov
mov
sbb
hlt
lea
idiv
je
stos
pop
pop
mov
loope
and
mov
rolb
xor
add
mov
aad
test
cmpsb
das
ret
les
sbb
xchg
jmp
rolb
out
sub
sbb
cld
in
jmp
xchg
repz
dec
jle
add
dec
in
push
mov
dec
and
xchg
sbb
xchg
ja
int
into
bound
adc
pop
mov
mov
adc
add
stos
mov
fisubs
add
push
cmp
xor
enter
lahf
sbb
jnp
enter
lock
enter
mov
mov
cs
sbb
push
jns
subb
pop
shrb
mov
ret
adc
or
pop
outsb
shlb
and
call
cltd
pusha
cmp
out
dec
jo
mov
outsb
adc
das
dec
mov
stc
lods
add
adc
cmp
jns
lods
cmp
xchg
fists
addl
cmc
mov
test
clc
xor
add
or
mov
test
xor
mov
push
cmp
lods
xor
loope
cmp
xchg
dec
insl
xor
jo
pop
addr16
cmp
aam
adc
mov
out
loopne
sub
out
mov
imul
mov
std
dec
loope
fistps
mull
push
test
sub
sahf
lea
add
aad
repnz
and
inc
mov
jle
jo
in
sbb
and
jmp
out
cs
mov
stc
cmp
push
and
enter
sarb
xor
mov
cmpsb
mov
sub
lret
sub
mov
pusha
dec
push
xchg
hlt
xor
cmpl
mov
enter
popf
movsb
hlt
pop
in
ss
fiadds
dec
mov
shrl
xor
sub
mov
mov
ja
pop
jle
sub
jecxz
movsb
and
nop
rcl
jae
lods
push
add
incl
or
pop
jg
fidivl
mov
sarl
sbb
scas
inc
xor
ret
jecxz
pop
shlb
sub
sbb
push
sbb
into
adc
out
call
mov
push
jmp
mov
gs
inc
push
fisubl
movb
cmpsb
jge
out
xor
popf
inc
xchg
lahf
or
aam
sar
faddp
int3
sbb
ja
cmp
gs
fs
mov
pop
imul
sbb
sbb
andb
scas
sub
aaa
clc
aam
and
negl
pop
out
cmp
lea
cmp
mov
cli
jae
jbe
mov
scas
xchg
lds
movsb
xchg
into
mov
shrb
xor
sub
xchg
cmp
sub
sbb
mov
push
jp
xlat
xchg
or
nop
jns
add
or
icebp
inc
insl
jbe
adc
cmp
popf
int
stos
and
mov
add
push
jecxz
subl
in
jmp
dec
es
sub
outsl
inc
sbb
ja
decb
cmpsl
mov
insb
sti
push
in
xchg
or
mov
pop
ret
stos
decl
dec
int3
ret
jg
rorl
xchg
outsl
addr16
daa
test
jnp
xor
inc
jl,pt
mov
mov
mov
jmp
stos
push
mov
jnp
filds
xchg
and
pop
xor
mov
adc
fisubs
insb
iret
je
mov
mov
adc
dec
icebp
push
cmp
mov
push
data16
inc
xlat
out
mov
sub
xor
jecxz
lock
xchg
mov
je
mov
movsb
fimull
test
xchg
and
push
cs
cld
addr16
push
gs
fdivrs
push
mov
cld
jne
outsb
fs
xchg
dec
fmul
pop
or
scas
in
fistpl
call
insl
into
cmpsb
int3
cmpsb
stos
cltd
dec
mov
push
pop
or
imul
sub
out
xor
in
add
fstl
pop
into
cmp
lock
sub
movsb
sub
and
mov
sub
imulb
xchg
stos
in
inc
cltd
fcmovne
mov
push
pusha
aad
cwtl
mov
adc
inc
mov
popa
pop
cmpsl
xor
sbb
std
dec
fmull
popf
mov
call
cmpsb
iret
inc
push
mov
aas
jle
add
lea
mov
pushf
lret
mov
adc
hlt
push
xchg
mov
outsb
lcall
dec
cs
mov
test
bound
mov
stc
das
fmull
jmp
xchg
mov
and
pop
addl
or
sub
pop
in
divl
out
icebp
xchg
fs
mov
xchg
lahf
neg
loop
icebp
mov
jae
adc
cmp
stc
push
lea
test
push
mov
sub
mov
cld
loopne
xchg
clc
mov
ja
jp
repnz
popf
stos
mov
dec
in
ret
fs
push
adc
or
xor
mov
sarb
and
jns
push
mov
mov
add
xchg
movsb
pop
push
inc
data16
in
lods
scas
cli
lcall
jo
cmp
rorb
scas
push
mov
shlb
cltd
lret
cs
fwait
jae
iret
jb
mov
xor
add
hlt
loope
movsb
push
cwtl
fld
mov
dec
xor
sarl
dec
jb
aas
mov
push
faddp
mov
clc
add
push
cwtl
test
rcll
mov
inc
rcrl
in
arpl
fbld
or
xchg
dec
mov
fwait
clc
jle
jb
push
stc
xchg
jecxz
icebp
sub
aas
inc
bound
sbb
cltd
fiaddl
dec
xlat
cmp
dec
xchg
fiaddl
xor
out
push
icebp
inc
xor
push
add
dec
popf
sbb
mov
cmpsb
add
xchg
push
mov
push
lret
ja
xchg
and
sahf
into
mov
incl
orl
ja
push
push
and
iret
in
lahf
out
pop
mov
pop
pop
jl
dec
sbb
mov
lret
popa
call
outsl
pop
pusha
pusha
xchg
icebp
ret
scas
iret
push
adc
add
and
mov
in
ficomps
pop
cmp
push
insb
movsl
mov
pop
cld
insb
int
rcr
or
xchg
pushf
lods
lds
dec
cmp
aas
in
adc
push
insb
nop
push
js
mov
mov
icebp
fmulp
ret
pop
mov
dec
or
push
aas
pop
fistl
aad
and
cli
arpl
dec
sbb
mov
push
fdiv
mov
pop
int3
data16
pop
sub
mov
test
push
adc
lcall
loopne
int3
mov
lock
pop
sbb
dec
inc
outsl
push
jnp
in
inc
ret
shrl
out
mov
shll
dec
adc
js
fidivrl
push
xchg
clc
movsl
nop
mov
dec
es
inc
xchg
rcll
add
fld
repz
sub
arpl
sbb
jge
jl
ss
andl
push
insl
in
xchg
lcall
xor
loope
jb
and
cli
push
cld
push
jnp
pusha
xchg
hlt
cmp
imul
fists
jg
movb
or
xchg
cmc
sub
scas
insl
pusha
les
lea
ret
int3
sub
into
mov
mov
adc
cltd
jmp
cmpl
ds
mov
adc
jbe
ljmp
notl
push
cmpsb
pop
std
push
fidivrl
insl
push
mov
das
shlb
int
adc
jp
sbb
mov
jg
jmp
push
mov
xor
iret
pop
lcall
outsb
cmp
jno
lahf
sub
jp
sarl
and
adc
int3
add
adc
pop
push
je
ret
ja
popf
push
outsl
jg
inc
les
aad
std
xor
pop
dec
cmc
push
mov
and
lahf
pop
fmuls
xor
das
rclb
iret
pop
lahf
cmp
decb
or
sub
test
jns
sbb
mov
pop
pop
sarl
pop
outsb
mov
xor
in
loope
outsb
xchg
dec
fs
xlat
dec
std
nop
sub
xchg
outsl
and
test
pop
sub
bound
scas
sub
imul
ret
leave
dec
inc
pop
inc
dec
insb
mov
mov
fldl2t
fisubrl
in
imul
or
sbb
iret
leave
out
pop
or
nop
adc
jge
stos
stc
loopne
fwait
and
add
mov
iret
in
add
bound
pop
pop
cmp
fnsave
push
inc
sti
dec
nop
adc
pop
mov
cmc
call
xor
frstor
or
adc
mov
je
mov
sbb
xchg
fadds
fwait
push
add
and
lea
js
sbb
notrack
adc
mov
inc
mov
dec
sbb
cwtl
fsubs
je
mov
lret
dec
gs
fs
adc
fnstcw
cmp
das
adc
lret
cltd
leave
cmp
cmp
sbbb
xlat
xor
pop
fcom
repz
sbb
jecxz
mov
xlat
cmc
mov
fbld
add
outsb
push
out
push
jnp
fsubrl
gs
adc
je
push
xchg
aaa
push
mov
cmpsl
popf
out
cmc
jecxz
daa
sbb
daa
ss
cmpsb
bound
mov
inc
loopne
mov
mov
sub
lods
fildll
and
xchg
int
hlt
out
mov
mov
pop
and
mov
in
jb
push
enter
pushf
sar
lods
cmp
pop
je
cli
arpl
es
cli
jb
jne
pop
adc
xchg
pushf
lods
pop
pop
mov
and
out
cmc
xchg
mov
adc
mov
pop
and
outsl
rcll
jbe
pop
mov
push
adc
stos
daa
jno
test
mov
hlt
add
int3
fisttpl
loop
pop
or
fldl
jne
sbb
test
les
pop
outsb
pop
movsl
mov
sbb
push
fwait
push
adc
sbb
call
and
cs
cs
pusha
adc
xchg
enter
pop
scas
movsl
push
adc
fsubrl
movsl
lcall
notl
inc
jl
jne
sub
jle
push
sub
int
push
jae
ds
aad
scas
imul
in
mov
sar
inc
xchg
andl
jl
push
pop
or
lds
xchg
shll
dec
xchg
fwait
and
xchg
repz
nop
aaa
mov
pop
loop
loopne
pop
jb
jo
xor
cmp
mov
in
daa
imul
into
pop
ret
dec
aam
stos
mov
cmpsb
mov
adc
fld
jns
cmpsl
jae
or
outsb
imul
add
cs
roll
std
enter
inc
pusha
je
outsl
mov
push
dec
sar
jp
data16
jl
rcrb
rcl
mov
add
loope
or
or
or
cwtl
xor
lods
call
aam
pop
std
inc
lods
and
int3
shl
inc
test
pop
orl
inc
sbb
inc
insl
xchg
or
cltd
popf
xor
fnsave
mov
iret
cmpb
fwait
sub
cmc
xor
fstpt
pop
jecxz
in
adc
cmp
dec
cmp
fdivrs
adc
std
sub
mov
xchg
adc
scas
imul
cmp
sbb
les
lahf
push
or
cltd
enter
mov
je
fldcw
out
mov
xchg
mov
fstp
lds
xchg
daa
dec
inc
xchg
push
or
movsl
dec
inc
mov
mov
mov
mov
hlt
fmuls
mov
call
mov
jb
hlt
adc
add
push
data16
data16
movsb
sbb
in
pop
cwtl
xor
xchg
je
leave
xchg
enter
shlb
imul
sahf
test
les
not
push
lea
repnz
cmpsl
lahf
push
divl
pop
mov
std
hlt
lcall
fs
daa
xchg
dec
pop
pop
cmp
mov
popa
in
sbb
paddq
in
out
pushf
popf
lods
pusha
pop
daa
add
outsb
in
jno
pop
jmp
pop
mov
pop
ds
inc
mov
sub
lret
ja
pop
pop
push
int
jbe
rcrb
loopne
repnz
xchg
loopne
lret
sti
push
lahf
cmp
les
push
loopne
fs
cli
shl
stos
sub
loopne
stos
cmp
out
push
xchg
fwait
xchg
cmc
aam
mov
ljmp
out
mov
add
and
mov
shll
dec
inc
pop
fwait
sbb
imul
loop
sbb
dec
mov
lods
jmp
cwtl
lret
cmc
or
out
push
mov
outsb
sub
enter
das
cmp
mov
shll
call
ret
sahf
movsb
out
add
out
inc
mov
les
dec
cwtl
mov
test
mov
notl
in
mov
lahf
ds
mov
mov
dec
imul
fbld
pop
and
or
cmp
faddl
mov
mov
movsb
mov
dec
pop
fmulp
jge
aas
dec
pop
loope
leave
jecxz
jne
lods
lret
xchg
dec
push
ja
repz
imull
jo
mov
stos
xor
in
cli
out
repz
rorb
fldt
imul
cmpsb
mov
dec
ljmp
cmpl
push
shll
or
aad
jge
into
inc
push
pop
fistpl
mov
xor
or
mov
cmp
fmuls
stos
ret
and
sbb
mov
mov
cmp
push
in
mov
addb
cmp
bound
sbb
cmp
pop
ret
bnd
pop
movsl
xor
xor
aas
scas
sbb
sbb
xor
fwait
jae
or
in
fisubs
repz
jg
addr16
cmpl
scas
ror
cli
outsb
and
xchg
mov
sub
addr16
daa
add
jl
xchg
and
push
lods
popa
int3
xlat
jbe
dec
xchg
or
jmp
push
sub
adc
stos
jae
jge
inc
inc
mov
ret
xor
out
not
sbb
imul
repnz
stc
or
add
popa
and
dec
xor
add
dec
sub
les
push
data16
pop
adc
loopne
mov
push
aas
les
cmp
mov
or
ss
subl
lret
ja
sahf
push
scas
enter
call
imul
mov
lods
or
jecxz
ret
sbbb
loopne
ret
std
push
mov
jg
cmpsb
rcll
shl
adc
pushl
xchg
sbb
pop
sbb
lret
xchg
pop
xchg
xor
sahf
std
or
divl
jno
je
xor
push
inc
sbb
xor
icebp
flds
inc
repnz
adc
inc
mov
xor
test
mov
pop
and
sub
pop
repz
lods
push
insb
cmp
cwtl
jp
xor
push
ror
stos
sbb
push
mov
pop
jle
rorl
int3
mov
or
loop
outsb
cmp
lods
iret
inc
inc
pop
mov
sub
mov
testl
subb
mov
push
mov
mov
sbb
mov
je
pop
lods
push
push
fildll
or
xor
or
inc
cmp
sub
adc
xchg
in
js
cltd
inc
dec
cmc
imul
or
sti
xchg
std
femms
jbe
mov
fmulp
repnz
xor
sti
aad
mov
mov
dec
leave
je
jl
push
xor
js
adc
enter
sub
lret
cmpsb
sbb
xchg
adc
das
mov
sub
xor
pop
js
xor
loopne
cld
add
xor
cmp
xlat
jo
loope
mov
or
lret
dec
or
pop
add
test
test
adc
dec
pop
push
mov
xchg
dec
adc
fmulp
cmp
dec
cwtl
fsts
imul
mov
jge
mov
and
enter
jg
mov
gs
xchg
lock
mov
sbb
pop
shrb
pop
sti
add
mov
inc
add
mov
dec
jb
je
adc
jge
neg
jnp
mov
mov
hlt
sbb
xchg
dec
push
outsb
iret
imul
aaa
mov
xchg
scas
adc
sub
or
xchg
dec
mov
jnp
sub
pop
pop
mov
sub
jno
mov
daa
jbe
loopne
scas
mov
rorb
xchg
cmpsb
aaa
sub
hlt
movsb
and
out
repz
mulb
mov
jge
mov
inc
outsl
inc
stos
imul
testl
jp
push
add
call
rcrl
stos
idivl
add
jb
hlt
push
xor
inc
add
dec
mov
fistpll
jecxz
cmp
or
imul
sbb
pop
sbb
push
daa
push
cmp
jmp
jmp
ss
je
pushw
xor
pop
jne
adcb
mov
outsb
dec
ror
clc
and
lret
sbb
arpl
leave
test
fs
mov
js
aam
test
aad
bnd
in
dec
inc
icebp
repnz
popa
imul
push
cmpb
cmp
add
lea
inc
push
inc
cwtl
test
mov
sahf
loope
insb
addr16
insl
pusha
fs
lds
clc
pop
out
cmp
sbb
insb
fisubrl
pop
add
and
cli
xchg
test
lock
sbb
xchg
mov
aad
add
arpl
mov
pop
in
cmpsl
stc
sahf
in
cmc
mov
shl
movsb
xor
nop
cmp
dec
push
outsl
ds
enter
adc
cmc
inc
fldl
xchg
adc
sbb
mov
pxor
sub
or
repnz
loop
fildl
iret
leave
mov
lea
push
and
xchg
mov
enter
lods
adc
cli
pop
sbb
call
ret
clc
in
adc
adc
xlat
mov
mov
decl
inc
adc
dec
std
pop
mov
gs
push
sub
andb
lods
outsb
pop
adc
fs
andb
into
pop
jo
pop
fidivrl
push
ror
rorl
fs
das
pop
popf
mov
xor
or
mov
popf
sbb
push
cmp
mov
addr16
int3
pop
inc
fs
xlat
sub
sub
int
aas
push
and
ret
jecxz
inc
pop
fimuls
repnz
outsb
mov
or
push
inc
push
dec
lcall
imul
lahf
xor
aad
fs
data16
jle
daa
aam
jmp
shll
in
push
adc
mov
jne
lcall
jbe
scas
xchg
aam
push
das
fisubs
gs
scas
and
mov
or
clc
mov
inc
loopne
add
dec
cltd
add
sbb
sti
addr16
lret
mov
xchg
test
push
mov
sar
popa
push
fcmovb
mov
mov
andl
push
das
popa
das
sar
sub
sbb
orl
test
or
imul
popl
lea
adc
jne
pop
lods
jae
in
xor
fwait
xor
ret
pop
loopne
add
andb
jae
mov
outsb
movl
mov
out
push
inc
xchg
cmp
cmp
test
das
or
or
test
xchg
and
push
pop
dec
mov
mov
jo
in
push
pop
or
into
loopne
mov
mov
pop
and
cmpsb
inc
dec
mov
xchg
mov
xchg
shl
sbb
int3
test
sbb
movsb
adc
ret
jae
or
pop
js
xor
xchg
stos
jp
test
ret
insb
cmp
shl
fs
std
out
ret
jne
aad
inc
mov
into
mov
dec
in
dec
jnp
pop
mov
rcll
push
bound
fistps
lds
pinsrw
mov
mov
int
jne
ds
mov
pop
pop
cmpsl
repz
sub
pop
popa
xchg
cs
hlt
shll
loope
pop
xor
cmp
add
fisubs
jle
push
or
outsl
xchg
or
jbe
out
inc
lcall
or
push
adc
sti
pop
ficompl
inc
adc
and
xor
fists
dec
and
pop
test
lret
data16
ja
rol
scas
inc
cmc
cmp
hlt
xchg
inc
add
into
adc
inc
inc
pop
inc
sbb
jb
shll
es
outsb
jle
cmp
mov
testb
mov
lret
cmp
jecxz
fisubl
inc
or
push
loop
xchg
iret
or
cmp
mov
fisttpl
out
imul
adc
frstor
ss
jb
ds
sub
jge
push
sarb
pushf
lret
loop
xchg
in
leave
into
pusha
xchg
mov
xchg
mov
jnp
pop
sti
mov
jmp
cmp
sub
movb
or
cmp
pinsrw
testb
adc
mov
mov
inc
lea
adc
mov
sbbl
push
dec
mov
hlt
add
cmp
cmc
inc
sahf
sbb
jno
aad
mov
in
lret
mulb
dec
push
xchg
mov
or
mov
push
out
cmp
or
ja
mov
adc
in
cli
mov
xor
mov
pushf
cwtl
inc
add
in
cmc
out
sub
jo
fnstsw
or
inc
orb
aad
inc
jbe
popa
sub
adcb
lds
pop
dec
lcall
popa
push
jno
mov
fs
out
stc
dec
pop
xchg
sub
insb
andb
cmc
fcmove
test
pop
in
negl
fistl
dec
adcb
cmp
add
test
push
inc
out
xchg
mov
arpl
shl
inc
lea
dec
shrl
push
dec
jb
mov
std
popa
xchg
aad
push
pop
fnclex
mov
push
sbb
sub
scas
pop
mov
out
xor
loope
lods
push
dec
jno
lods
mov
mov
xor
lods
mov
aas
stos
adc
les
jg
test
adc
adc
xchg
cmp
sub
jecxz
lret
data16
mov
repnz
and
and
mov
ret
xchg
xchg
add
shlb
sub
rcl
xchg
imul
cwtl
cmpsb
ret
xlat
mov
push
stos
mov
mov
push
ret
jg
inc
jecxz
repnz
cmc
xchg
fs
adc
inc
xchg
or
in
out
int
hlt
mov
adc
subl
sti
loopne
mov
arpl
and
jp
mov
pop
out
push
in
test
inc
orb
out
fwait
pusha
negl
cmpsl
test
adc
fsts
xchg
adc
xchg
cs
pop
sub
cs
cmpsb
arpl
dec
in
repz
adc
lcall
mov
fisubl
and
inc
xor
fistpll
data16
adc
lret
imul
loopne
addr16
fistpll
nop
sub
pop
fbld
ds
and
mov
popf
inc
or
gs
xchg
xlat
mov
clc
cs
push
sbb
les
shl
xchg
rcll
loope
icebp
fisttps
inc
dec
sub
popf
cli
or
dec
xor
pushf
sti
ljmp
cs
not
and
mov
enter
jge
cmpsl
call
out
cmpsb
daa
jge
js
sti
mov
shll
jl
lds
fisubrl
and
pushf
ret
int
in
stos
cld
lea
add
subl
imul
sbb
loopne
es
dec
fidivs
xchg
lods
jmp
loopne
stos
jo
mov
adc
adc
push
cmp
jo
add
cwtl
inc
testb
xor
xchg
push
push
stc
mov
setg
jno
xor
xor
int3
push
pop
repz
sbb
icebp
cwtl
mov
idiv
imul
ljmp
sub
or
lods
adc
add
repz
push
out
jmp
xchg
sbb
inc
lods
inc
adc
sti
sbb
sti
xor
mov
adc
add
repz
push
fucom
cmp
mov
sahf
xchg
jae
popa
fldt
or
sarw
decb
je
in
test
xor
sub
jne
cmpsb
adc
and
cmp
cmp
imul
mov
pop
xchg
dec
or
inc
pop
push
xchg
and
ret
stos
add
mov
mov
sub
lcall
add
data16
pop
and
mov
lahf
xchg
test
movsb
and
faddl
or
cmpsl
clts
lods
mov
leave
and
dec
in
lea
push
pop
in
jmp
movsb
jmp
xchg
inc
push
out
pop
repnz
cwtl
and
jmp
cmp
xchg
or
repnz
inc
push
sub
ret
and
hlt
and
test
in
and
fnstenv
and
pop
dec
aaa
int3
addb
loop
dec
or
and
mov
fmull
jg
mov
mov
lret
mov
std
dec
sbb
rcrb
xchg
scas
pop
cwtl
push
mov
sub
test
sub
leave
add
aad
lods
orl
sbb
movsb
stos
xchg
test
int
lds
into
add
mov
je
mov
test
mov
push
cmc
pop
ja
idivb
insb
sahf
outsb
lods
outsl
popa
or
loope
jmp
imul
jo
outsb
sbb
pop
loope
add
pop
test
enter
pop
jne
icebp
insb
lods
es
aam
rcrl
dec
or
lret
lods
imul
inc
je
call
sub
inc
push
js
fildll
jmp
sbb
stos
out
mov
inc
scas
or
cmpsl
push
test
lret
out
xor
inc
rolb
rolb
add
xchg
pop
mov
mov
loope,pt
inc
test
popa
jb
mov
jae
jmp
push
xlat
sbb
ret
movsb
sub
sub
cmc
inc
insb
sbb
jb
test
sub
pop
es
mov
inc
add
mov
cmpsl
fstps
repz
lret
pop
pop
mov
inc
dec
mov
das
scas
push
nop
shrl
fstpt
xor
pop
push
dec
sub
push
outsl
insl
xchg
ret
add
cwtl
sub
xchg
xor
or
mov
lahf
stc
xchg
pop
adc
stc
hlt
mov
shll
or
popf
int
jge
push
xlat
add
xlat
aam
out
pop
lods
xchg
jo
scas
ds
cmp
in
out
mov
jge
xchg
mov
sbb
cmp
sub
or
mov
lock
fcomps
lcall
jg
into
and
push
add
sbb
mov
fcomp
mov
xor
imul
jne
mov
repnz
cs
jbe
mov
xchg
loop
out
cmp
in
sbb
dec
mov
sbb
cmc
cwtl
arpl
fdivr
jae
cltd
adc
ret
ficoms
jo
outsb
imul
inc
and
insl
jp
aas
jl
fdivrs
int3
iret
popf
stos
push
ret
leave
les
int
sub
loopne
stos
jo
mov
pop
ds
les
inc
pop
mov
cld
out
cwtl
add
notl
loop
xchg
or
xchg
ja
test
mov
adc
mov
sub
mov
jecxz
test
repz
xchg
jg
movsb
lcall
mov
sahf
cmp
sub
sbb
mov
out
test
loope
sub
adc
jne
pop
mov
repnz
cmp
rorb
imul
adc
sar
scas
add
pop
lods
mov
push
test
pop
repz
pop
subl
inc
cmpsb
pop
adc
je
lds
faddl
mov
popa
pop
and
mov
inc
movb
mov
pop
sahf
add
lret
stos
cmpsl
adc
pop
int
xchg
mov
inc
je
das
jns
ja
sbb
fadds
dec
in
mulb
push
lods
cmp
jb
add
cmp
arpl
stos
pop
cmp
sub
inc
adc
xchg
jo
out
pop
pusha
ret
push
xor
or
psllq
jne
pop
pop
add
and
push
pop
lret
jmp
ss
orb
data16
stos
leave
jno
sbb
mov
xor
scas
int
jl
int3
fidivs
push
stos
aad
xor
hlt
shll
mov
push
mov
stos
mov
mov
adc
cltd
pop
and
xlat
sbb
xor
inc
imul
add
subl
lods
out
mov
cmp
mov
add
ret
movsb
orb
xor
cmpsb
bound
insl
test
jp
in
int3
pushf
mov
ret
add
arpl
loop
adc
incl
mov
pop
ljmp
adc
xor
mov
es
fildl
loopne
pop
add
adc
inc
xchg
in
aaa
mov
and
mov
hlt
in
cltd
ret
push
lret
sti
push
sub
cwtl
and
jl
idivl
cwtl
in
lods
mov
xchg
adc
cs
jb
pop
add
mov
mov
stos
ret
push
insl
xor
xor
pop
and
lea
push
jle
jb
mov
push
int
addr16
xor
mov
sarl
jo
pop
mov
mov
mov
xor
stos
ret
mov
enter
loope
dec
shrl
imul
into
addb
clc
inc
test
insb
inc
popa
xchg
lods
clc
out
sti
aaa
sub
pushf
loopne
xor
sub
xchg
ds
addr16
dec
test
cmp
ficoms
jmp
in
es
cmp
in
scas
or
mov
mov
dec
xchg
mov
xor
les
mov
cmp
sub
into
out
add
repz
pop
je
mov
jp
or
cltd
ret
inc
dec
mov
jl
mov
jbe
fs
sub
cmp
cs
mov
cwtl
jge
adc
into
ret
lea
decl
shr
mov
jmp
sub
sbb
sbbl
je
cmpsl
sarb
shl
cmp
imul
lods
or
inc
data16
sub
xchg
mov
and
or
push
mov
mov
dec
test
leave
repz
push
aam
enter
fildl
push
ljmp
pop
pusha
loope
lock
popf
push
outsl
addl
mov
addr16
jb
stos
push
dec
in
jp
es
out
mov
jbe
pop
aad
movb
pop
xchg
das
pop
mov
mov
mov
das
insl
xchg
fsts
repz
push
or
pusha
jns
iret
mov
jmp
jge
movsl
mull
sub
dec
das
popa
mov
xor
gs
lods
cmp
inc
mov
mov
or
sbb
sub
jge
movsb
mov
sub
outsl
pusha
add
inc
and
iret
sbb
pop
test
into
nop
jne
loopne
push
aaa
ja
sub
push
mov
test
enter
outsl
inc
inc
xchg
inc
daa
stos
repz
xchg
pop
or
adc
int3
sbb
jg
addr16
pushf
mov
sbb
fdivs
mov
cmp
imulb
inc
pushf
dec
fsubr
xchg
xchg
mov
sub
jae
loop
sub
push
cmp
movsl
jne
repz
or
push
aas
rclb
icebp
daa
repz
or
cmp
fildll
rcl
mov
xor
inc
mov
lods
icebp
and
es
jns
and
incb
jno
push
mov
xchg
std
adc
ret
pop
cmp
mov
rol
xchg
repnz
call
mov
pop
rolb
jle
xchg
shrl
mov
fcomps
mov
stos
push
out
cmp
ret
loope
or
es
pop
std
sbb
jp
out
int3
shrb
aaa
or
cmp
cs
dec
push
or
jo
pusha
jmp
pusha
xorb
aad
movsl
and
stc
or
adc
subb
hlt
scas
loop
adc
pop
mov
popa
faddl
fsubrl
push
adc
dec
loop
cltd
lea
xor
adc
push
test
jno
inc
test
dec
dec
sbb
adc
loop
lds
inc
mov
repz
inc
push
ret
adcb
scas
pusha
adc
aam
mov
fdivrl
stc
aam
in
cmp
inc
arpl
aad
xchg
fstpt
push
cmpsb
sbb
jg
aad
cmpb
pop
lcall
aad
lret
add
es
mov
cmpsl
jge
outsb
dec
arpl
jmp
fiaddl
mov
in
stos
movsb
mov
in
xchg
cmp
and
push
mov
adc
jae
out
and
sub
js
lret
push
in
es
xor
in
xor
sub
lahf
lea
and
into
das
loop
xchg
add
cmp
lcall
idivl
rcl
stos
inc
daa
pop
lret
pop
test
dec
pop
sub
push
sub
cld
ja
sbb
in
fiaddl
jp
test
dec
jmp
fisubrs
test
dec
mov
icebp
mov
movsl
lret
and
cltd
pop
xchg
cmp
test
push
push
xchg
inc
in
ss
imul
sbb
xchg
push
in
xchg
mov
sarl
push
lret
inc
sub
ljmp
cld
mov
cmpsb
negl
sub
mov
clc
xor
add
lret
push
sub
pop
ret
pop
mov
test
or
cmpsl
int3
dec
and
or
ficompl
and
sbb
and
dec
test
enter
addr16
mov
xor
mov
cmp
adc
int3
jo
lcall
push
outsl
lods
hlt
mov
fcmovbe
shll
mov
fsubr
pop
mov
jb
or
inc
cmp
cld
or
mov
jns
cld
push
mov
outsl
mov
pop
shlb
adc
mov
aad
out
pushf
rcr
shlb
lods
mov
inc
adc
sub
mov
nop
cmpsb
lcall
fldenv
lea
clc
rcrb
jmp
shlb
mov
mov
sbb
lret
cmc
out
rorl
repnz
lea
lock
popf
fwait
clc
dec
adc
jo
and
xor
push
and
fs
lds
xor
and
mov
jl
dec
add
jne
jl
stos
fstpt
das
lds
dec
out
add
icebp
sbb
sub
sbb
mov
push
dec
jmp
inc
lods
paddusb
sbb
jbe
mov
xor
mov
out
or
loopne
mov
roll
fsubr
sbb
pop
inc
int3
cmp
inc
nop
cmp
xlat
imul
shlb
test
mov
xchg
ret
subb
pop
loop
cmc
sbb
int
popf
push
add
daa
ss
mov
lods
lock
or
gs
fnstcw
jae
lret
add
addr16
sbb
pop
test
stos
out
leave
pushf
and
push
or
sbb
test
popa
pop
sar
pop
test
and
dec
in
add
sub
lahf
les
dec
ja
js
cmpsb
jnp
pusha
pop
pop
cmpsb
inc
sbb
setge
mov
sar
pop
sub
jo
add
cmp
test
xor
mov
or
popf
add
cmp
aad
jge
jnp
in
pushf
loopne
mov
aaa
push
int
out
popf
aas
inc
push
mov
mov
and
adc
sub
idivb
xor
pop
and
xor
xor
push
loopne
lret
jbe
mov
orb
push
add
movsb
aaa
jle
sarl
in
pop
cld
outsl
adc
mov
mov
out
cli
test
stos
out
sahf
inc
ret
lret
daa
and
stc
xor
pushf
loope
test
push
add
bound
insb
lods
xchg
out
in
sbb
adc
jge
push
shrb
jle
and
out
idiv
xor
jnp
dec
nop
lahf
cmp
imul
and
mov
xor
dec
xchg
xchg
sub
inc
decb
jbe
test
in
bswap
in
lea
push
ja
jo
iret
fs
fs
aas
arpl
pop
sbb
jae
out
out
rol
dec
push
aas
add
cld
testl
mov
out
add
xor
inc
or
mov
cmp
jmp
pusha
inc
cwtl
fnstenv
pushf
xor
mov
mov
bound
ret
mov
mov
pusha
insb
mov
bound
add
jmp
xor
sarl
rcr
push
pop
jmp
adc
movsl
flds
xlat
dec
add
lret
pop
inc
xchg
clc
xchg
mov
loop
inc
sbb
les
xor
mov
lods
cld
sbb
jg
cmp
int3
imul
mov
push
or
sbb
mov
xchg
mov
outsl
addr16
inc
fisttpl
stos
mov
xchg
jmp
push
xchg
fs
push
dec
sub
data16
xchg
sub
bound
push
sbb
lahf
adcb
test
jecxz
js
das
dec
sbb
fcomip
pop
out
or
mov
xor
mov
jp
cs
pop
xchg
call
sbb
ss
ds
filds
bound
iret
test
push
pop
cwtl
mov
ds
lea
xor
es
idiv
js
dec
mov
pop
ret
clc
ret
jno
push
xor
dec
push
push
and
movsb
daa
int3
sbb
or
ret
aad
addb
push
shr
or
add
jne
mov
push
shl
ja
push
loop
hlt
int
dec
int3
mov
jae
lcall
imul
adc
xchg
loope
sbb
jle
into
cmpsb
add
addr16
pop
out
and
imul
inc
push
incb
xor
mov
lcall
lods
sub
cmp
cmp
dec
and
inc
xchg
push
push
jae
dec
xchg
jg
cmp
sbb
int3
sarl
dec
push
pop
sbb
shrl
sahf
pop
add
mov
add
mov
and
push
out
add
mov
test
out
push
cmp
std
fdivs
mov
fstps
cmpsl
ja
popa
ficoml
jmp
leave
aas
jmp
push
fadd
mov
xor
icebp
pusha
sahf
jae
lds
enter
sbbl
dec
mov
divb
sub
mull
into
push
xor
data16
mov
pop
jnp
nop
pop
scas
xchg
xchg
lods
mov
lcall
test
inc
sbb
stos
mov
fdivrl
mov
cwtl
xchg
scas
sbb
xor
sub
mov
sub
push
inc
inc
push
and
pop
add
sbb
xor
sahf
in
mov
ret
xor
hlt
sbb
cmp
out
xlat
dec
ret
gs
sahf
mov
outsb
xor
jg
idivl
ss
hlt
lods
sub
mov
xchg
adc
lahf
add
xorb
orb
mov
sbb
jge
ds
pop
enter
jmp
push
push
pop
fwait
cs
mov
sbb
push
xor
lock
pusha
das
or
pushf
rcrb
xlat
xor
stc
adc
sahf
adc
mov
sub
enter
dec
adc
daa
push
mov
or
fistl
adc
dec
cs
test
cmp
je
out
pop
inc
xchg
xorl
addr16
rcll
xor
cmp
mov
and
cmp
into
in
and
sub
es
bound
popf
mov
pop
sbb
mov
adc
mov
mov
clc
insl
out
dec
negb
cwtl
mov
fwait
in
sbb
fbld
mov
sub
aam
add
fistl
xchg
xor
jge
ja
jb
in
test
dec
jnp
pop
scas
add
sub
xor
mov
les
shll
xor
xor
mov
mov
shr
sarb
shlb
clc
jbe
imul
gs
dec
jno
push
pusha
mov
fcomp
shlb
or
inc
push
adc
lcall
sub
out
push
scas
sub
andb
xlat
adc
addr16
jg
nop
maskmovq
add
in
mov
icebp
shl
subb
mov
test
fcoml
mov
add
shll
sbb
dec
ss
arpl
dec
mov
adc
mov
add
pop
jle
stc
or
mov
pop
test
xor
sbb
ficompl
mov
sbb
xchg
push
and
add
or
xchg
lock
fcoml
leave
lcall
or
adc
test
add
jo
sub
filds
add
shl
mov
push
and
enter
add
mov
mov
pop
or
jmp
ljmp
lea
ljmp
int3
and
out
cmp
test
shlb
push
sub
inc
sbb
pushf
cmp
test
fstpt
stos
dec
lcall
cmp
out
cmpsb
shlb
add
ja
out
jb
mov
fsub
mov
push
stc
pop
dec
ss
fdivr
sahf
movb
stos
insl
fidivl
inc
in
lods
xchg
in
cmp
gs
xor
sub
shr
and
ja
das
xchg
inc
jmp
cmp
cmp
lods
cmp
or
filds
push
jae
mov
sub
bound
imul
cltd
sub
mov
add
add
into
lret
sub
outsl
jo
lods
movsb
or
mov
pop
adc
cmp
inc
mov
xchg
mov
in
pop
cmpl
sbbb
inc
imul
scas
jbe
cltd
gs
aas
add
jne
cmp
mov
lahf
jne
nop
push
ficomps
out
or
ret
callw
lcall
out
mov
xchg
enter
mov
mov
imul
in
inc
popa
aaa
mov
xor
loopne
jmp
into
in
mov
mov
inc
jle
loope
int
pop
fimuls
inc
sub
fwait
repz
lahf
xor
push
loope
stos
ljmp
adc
aam
fwait
push
stos
in
sbb
dec
data16
fcoml
int3
sub
adc
pop
xlat
stc
imul
jl
push
mov
sbb
mov
push
lock
iret
out
jg
xchg
sub
mov
add
jge
test
cmp
iret
hlt
inc
jb
push
cli
and
mov
sub
xchg
outsl
imul
rclb
jo
push
outsl
xorb
lahf
pusha
arpl
repnz
std
outsl
cwtl
lods
leave
jp
cmp
into
xchg
icebp
ret
out
xchg
or
les
mov
pop
test
mov
mov
and
sarl
or
loopne
jg
stos
xlat
push
push
aas
and
jbe
mov
sbb
jecxz
add
shr
insb
mov
out
lods
ret
sub
out
inc
fisttps
sti
adc
mov
iret
aaa
pop
add
xchg
push
popf
ret
sbb
loop
pop
dec
xchg
dec
hlt
mov
xlat
pushf
test
mov
lahf
outsl
mov
lods
repnz
xchg
mov
xchg
repz
testb
add
xchg
cmp
popf
jp
ds
and
jg
aaa
inc
lock
mov
sub
mov
jbe
in
xchg
adc
sbb
out
sub
xor
addr16
dec
repnz
nop
out
in
rcl
xlat
cld
rorb
les
push
pop
cltd
in
add
lahf
push
fisttps
pop
mov
leave
pop
xor
testl
daa
je
push
lods
inc
dec
outsl
fdivl
push
imul
sub
in
mov
fsubrs
faddl
sub
out
jno
jmp
xor
pop
add
loope
pusha
add
es
mov
loopne
jbe
repz
jle
dec
push
jecxz
test
pusha
lahf
jl
rcrb
les
mov
mov
in
cltd
xor
popa
mov
daa
xchg
mov
sub
dec
dec
and
sbb
fisubrs
hlt
push
or
clc
test
pop
jmp
mov
jecxz
sbb
mov
lret
and
push
inc
sub
stos
repz
sbb
loope
adc
stos
imul
adc
stc
add
jecxz
das
pop
dec
mov
cmpsl
arpl
mov
jb
lret
xchg
dec
and
bound
sub
mov
xor
aad
fcomip
ret
sbb
in
aaa
popf
test
jecxz
repnz
and
sub
fisubl
xchg
cmpsb
adc
mov
in
dec
pop
shl
push
loop
jne
imul
push
xor
mov
subl
int
sbb
les
and
inc
imul
push
test
enter
call
cmp
pop
sub
inc
mov
cmp
cmpsl
jne
jno
mov
fwait
pop
call
cmc
push
das
daa
jnp
and
in
pop
iret
add
xchg
in
push
divb
andl
pop
ja
fwait
gs
mov
xchg
into
xor
push
push
lret
sub
xor
daa
mov
sti
sahf
cwtl
pop
cld
bound
dec
xchg
and
pop
stc
leave
ret
daa
js
adc
and
dec
insb
dec
pop
xor
out
mov
jbe
subb
dec
jge
pop
cmc
mov
push
push
adc
dec
mov
push
fiaddl
or
cmp
fists
bound
xor
mov
lahf
or
cmp
aaa
std
jne
cli
fsubs
rorl
push
ror
roll
mov
dec
xchg
sub
or
pop
test
xor
inc
cld
mov
push
dec
add
dec
les
hlt
sti
mov
js
jecxz
lea
pusha
or
loope
leave
fildl
and
xchg
shrl
add
fwait
push
mov
repz
mov
push
mov
out
imul
mov
btc
cmp
clc
pop
sub
flds
mov
stc
sbb
sbb
xlat
mov
cmp
daa
in
add
cmp
xchg
and
cmpl
imull
mov
xchg
sahf
and
jle
rcrl
mov
cmp
inc
popf
push
jge
and
fnsetpm(287
push
xor
leave
mov
add
pop
pop
push
je
jns
xor
test
xchg
add
fstps
or
push
xchg
movsb
push
and
aaa
out
mov
pop
test
cs
aam
dec
imul
outsl
shl
push
lods
or
dec
mov
jmp
push
mov
push
cs
rcrb
cmc
inc
fisttps
test
push
mov
fstps
sbb
inc
arpl
add
mov
scas
mov
ret
pop
mov
pop
mov
pop
xchg
or
mov
insb
aas
mov
push
popa
ret
std
in
dec
int3
xchg
mov
dec
testl
pop
pop
jl
scas
leave
test
xor
fisttps
cmp
push
pop
mov
cmp
mov
jmp
sahf
jmp
mov
or
cmp
dec
inc
xor
sbb
dec
loop
pop
cmc
mov
sub
and
push
cli
loope
fstps
sub
les
mov
daa
jb
loopne
and
pop
push
mov
movsl
dec
lret
or
sbb
test
xor
mov
mov
and
loope
sub
sub
push
and
or
out
xchg
xlat
in
sbb
ja
bound
cmp
daa
fidivrl
out
pop
ss
mov
pusha
or
insb
xchg
outsb
sti
aad
and
jno
pushl
inc
mov
pop
add
out
out
pusha
xor
push
int3
aaa
scas
mov
sub
push
xlat
cmp
add
movsb
pop
or
into
mov
push
and
jg
push
mov
push
into
fldl
mov
or
dec
mov
xor
pushf
mov
xchg
jmp
cmp
add
xlat
cmc
jmp
aam
xor
adcb
scas
out
clc
push
leave
lock
subb
pop
cltd
fmuls
and
mov
sti
jo
roll
and
lret
mov
inc
out
out
mov
dec
or
adc
in
push
call
test
fwait
inc
mov
cmc
enter
add
lods
sbb
cmp
popf
mov
add
or
or
rclb
xchg
scas
pop
ficoms
sahf
or
jl
lods
mov
cmc
ja
loop
es
das
adc
inc
lret
push
arpl
sub
sbb
js
xlat
mov
add
int3
jo
lods
and
or
hlt
xchg
cwtl
shrb
sahf
int
movsl
push
cmp
leave
dec
push
icebp
sub
xlat
fs
adc
adc
push
pop
mov
cmp
pop
aad
adc
mov
dec
imul
sub
mov
movb
negb
loop
lahf
and
out
je
cltd
std
jbe
mov
test
lods
adc
xlat
mov
xchg
or
repnz
cld
repnz
lret
lock
mov
pop
adc
push
push
sub
jp
loopne
imul
aam
push
inc
out
add
imul
fldcw
adc
mov
cltd
pop
jno
fisttpll
aad
aaa
and
mull
data16
rcr
test
add
push
into
outsb
adc
jecxz
fcompl
fsubs
fcompl
pop
cmp
lret
xor
jmp
lret
pop
or
push
sbb
xchg
jle
outsb
add
stos
pop
lock
ja
movsb
in
ds
adc
daa
out
push
adc
loopne
cli
inc
hlt
cmp
movsl
jle
insb
mov
mov
push
cmpsb
cmp
adc
sub
adc
or
mov
or
in
xchg
mov
xchg
xor
jp
sbb
orl
push
dec
dec
sub
out
or
test
xor
sub
mov
outsl
fistps
and
add
scas
adc
inc
imul
call
push
pop
pop
out
xchg
pop
out
imul
sub
push
inc
cmp
xchg
imul
or
loop
enter
sbb
xor
adc
js
cmp
mov
or
mov
lods
inc
and
add
into
xchg
jae
addr16
outsb
inc
xchg
sub
lret
push
add
out
and
mov
jge
cmp
scas
mov
aam
addb
enter
in
fnstsw
mov
mov
movb
xchg
insl
sub
cmp
add
aam
dec
mov
inc
stos
xor
and
or
pop
inc
fs
ljmp
sub
jl
scas
dec
sbb
in
pop
insb
jl
xchg
test
mov
cmp
mov
jle
scas
xchg
cs
addr16
mov
mov
dec
pop
dec
rorl
xchg
nop
loopne
jl
jge
push
mov
iret
jle
cmpsl
out
das
stos
adc
add
fbld
cmp
inc
in
mov
or
inc
push
pop
xor
jp
xchg
and
dec
cmp
adc
fdivrl
outsl
push
ds
sbb
sbb
addr16
and
jne
sbb
fcoml
ret
jl
enter
mov
xlat
pop
notl
and
jns
in
popa
shrd
es
mov
fnstsw
sti
sahf
jne
in
mov
xchg
add
decl
nop
add
lret
cmc
dec
inc
fisubs
and
mov
aad
lret
out
arpl
and
nop
bound
mov
jge
jno
xchg
mov
loope
push
adc
sbb
add
jb
int3
add
sbb
stos
je
add
fistl
sbb
sbb
js
and
imul
cmp
mov
scas
cmp
or
push
dec
or
pop
mov
outsl
push
pop
xchg
mov
loope
cld
fstl
outsl
and
imulb
test
mov
fdivr
or
js
or
enter
and
das
adc
inc
ljmp
and
pop
dec
cli
out
adc
jecxz
push
in
pop
stos
or
out
dec
sahf
fsubr
or
cld
mov
xor
sbb
movsb
arpl
repnz
xchg
push
and
mov
outsb
mulb
or
scas
ja
fisubrl
xchg
jnp
loop
xor
adc
jecxz
in
gs
std
mov
hlt
popw
adc
push
xchg
add
ds
push
adc
add
lea
dec
cmp
jge
arpl
mov
aaa
and
and
mov
mov
adc
movsl
in
shrl
dec
stos
pop
loope
add
or
pusha
dec
pop
sbb
popa
mov
or
sarb
sbb
lods
rcrl
push
add
in
ror
sti
mov
scas
lret
xlat
pop
and
dec
sub
inc
mov
jbe
imul
dec
pop
leave
pop
sbb
jno
add
pop
xchg
imul
or
mov
inc
sbb
jb
ljmp
lds
gs
dec
imull
sub
je
leave
push
jle
inc
cld
xlat
in
orb
push
inc
jl
subps
pop
jb
test
adc
ja
jns
cmp
arpl
shll
or
pop
js
addl
or
xor
xlat
test
ja
stos
pop
mov
lcall
and
or
push
push
cmp
mov
mov
inc
insb
xchg
mov
jmp
and
jbe
shlb
fsubl
dec
out
leave
inc
lock
dec
ljmp
insl
shl
xchg
sub
push
cmp
and
std
hlt
test
cmpsb
mov
jb
dec
inc
jne
cltd
lcall
add
pusha
xor
push
push
pop
dec
repz
adc
jno
xchg
mov
aam
and
orb
in
mov
mov
stc
adc
xlat
push
movsb
int3
and
and
push
or
mov
or
sub
arpl
xor
ss
push
popa
cwtl
jmp
mov
mov
pop
push
arpl
cltd
out
loopne
into
repz
push
ljmp
pop
pop
xor
dec
movsb
xor
out
mov
add
xchg
inc
cltd
leave
test
setge
jb
outsl
sbb
in
add
shll
aas
mov
jl
je
xlat
arpl
xchg
xlat
sbb
mov
pop
cwtl
pop
jl
pop
lea
stos
mov
pusha
inc
mov
lahf
add
jb
sbb
ret
adc
or
in
dec
or
adcb
leave
mov
or
ja
pop
adc
fsubrs
into
shl
inc
loope
inc
inc
sbb
out
pop
scas
clc
sub
lahf
pop
outsl
mov
dec
lret
jmp
mov
cmp
ffree
mov
add
or
test
cmp
xlat
or
loop
sbb
sub
ja
jb
popa
pop
pop
cmpsb
xchg
icebp
mov
in
push
sub
aam
movsl
dec
mov
pop
and
lods
sub
sub
sub
xor
clc
les
sbb
push
es
pop
aam
sahf
inc
movsb
imul
mov
arpl
mov
inc
mov
cs
sbb
inc
adc
ficoml
pushf
shlb
test
test
and
dec
test
mov
add
or
dec
jp
pop
xorb
arpl
mov
xor
mov
notb
insb
movsl
sub
pop
push
aam
push
or
push
fisttpl
inc
lds
insb
adc
and
into
jl
push
mov
movsb
inc
push
lahf
jmp
lahf
add
repz
mov
inc
jmp
ss
daa
push
and
xor
arpl
test
mov
enter
jae
nop
rolb
fcom
jae,pt
add
insb
loope
xchg
inc
jo
mov
and
add
pop
or
stc
mov
add
in
jo
imul
sub
rorl
cltd
xor
pop
leave
ret
dec
sbb
add
sub
fbstp
inc
fwait
dec
dec
push
ja
push
mov
mov
mov
lahf
jp
push
cmp
sar
adc
push
sbb
out
or
and
enter
or
xchg
mov
push
mov
lods
or
addr16
mov
iret
jge
shrb
mov
and
pop
dec
sbb
mov
ja
jmp
mov
test
mov
mov
mov
push
xor
pop
mov
sbb
inc
dec
fs
pop
fstps
fdiv
adc
jg
xchg
pop
mov
sub
xchg
push
sar
mov
xor
cmp
xchg
xchg
jg
jl
imul
leave
mov
inc
insl
push
push
or
inc
int
lods
insb
sub
inc
lods
jo
popa
xor
iret
aam
inc
sbb
jge
icebp
pop
jge
aaa
dec
jae
mov
xchg
sbb
mov
mov
ja
or
mov
cmp
lret
pop
xorl
push
mov
mov
out
cld
sbb
xchg
aas
in
or
dec
jae
dec
or
adc
inc
scas
add
lret
mov
pop
push
cld
push
movsl
repz
jecxz
jnp
fcoml
pushf
fdivs
or
push
sub
lods
and
stos
cwtl
data16
testl
aaa
lret
aad
push
xor
in
adc
bound
negb
adcl
mov
cmp
push
jo
aad
xlat
lcall
push
ja
ja
cmp
ja
shlb
adc
jg
in
add
sub
int
xor
jl
xchg
pop
ret
xchg
mov
pop
data16
push
fidivrs
sti
lret
icebp
pop
daa
jns
enter
xchg
xchg
add
jno
adc
and
inc
or
adc
xchg
scas
or
or
cmpsl
or
lds
arpl
movsl
xchg
fimull
fsubl
stos
inc
pop
fsubrl
cmp
push
jo
lret
movsb
sub
lret
out
jb
test
add
aaa
inc
popf
ss
test
pop
inc
jnp
dec
popf
pop
ret
popa
sub
pop
test
pop
into
jb
sub
outsl
mov
mov
push
lock
sbb
sub
ret
inc
push
sbb
xchg
xchg
icebp
add
or
or
ljmp
test
jge
cmpb
cmp
loop
sub
dec
push
fs
jp
or
push
pop
pop
xor
pop
mov
movsb
sbb
mov
stos
mov
pop
mov
add
cmp
adc
hlt
addr16
enter
mov
pop
sub
adc
pop
ficompl
inc
mov
loop
mov
in
mov
push
out
test
addb
rorb
sbb
dec
sbb
out
jp
jb
mov
clc
movsb
imul
and
xchg
divl
ss
xor
cwtl
out
shrb
adc
aad
push
lea
sbb
mov
mov
mov
add
sub
hlt
dec
mov
and
sbb
int3
xchg
inc
repnz
mov
push
mov
or
les
cmp
fnstsw
fcomp
jmp
adc
inc
adc
mov
addr16
dec
pop
jge
and
xchg
lds
xor
fwait
pop
push
push
cmp
lock
repnz
lock
xorl
gs
and
mov
shlb
fcmovu
xchg
lcall
decl
inc
add
or
rorb
test
in
and
repnz
stos
jne
cmpsb
fidivrs
jecxz
popf
ret
adc
and
outsb
iret
dec
fadds
and
gs
cmp
mov
jg
jb
sbb
jl
out
dec
jg
xchg
enter
or
xor
xor
lds
les
and
inc
aaa
fsubrs
outsl
insl
mov
jmp
addl
jge
data16
mov
xchg
rorb
mov
loopne
fnstcw
mov
stc
outsl
iret
in
jmp
out
out
or
cmpsl
sbb
add
clc
xchg
xchg
pop
scas
fwait
cmp
fstl
cmp
mov
es
xor
cli
cmp
ret
scas
hlt
mov
push
leave
pop
cmc
xchg
loopne
push
pop
pop
sub
and
add
rcll
jg
jne
or
hlt
jg
pushf
pop
ret
inc
test
lret
gs
ja
mov
rcrb
je
mov
mov
sbb
adc
aaa
popa
sbb
mov
mov
or
fistpll
pop
pop
jne
icebp
iret
adc
daa
add
jle
adc
jle
pop
out
or
dec
push
lcall
stc
aas
mov
ss
shlb
dec
xor
mov
pop
test
repz
cs
out
dec
xchg
test
inc
repnz
mov
xchg
jl
pop
leave
sbb
fmul
icebp
xchg
in
clc
ja
rolb
stc
pop
sub
xor
and
aas
jne
mov
and
sahf
or
push
sbb
mov
sub
fs
jae
les
push
dec
mov
inc
xchg
addr16
xlat
mov
lahf
imul
inc
jne
adc
mov
inc
jmp
jge
fsubr
lahf
cmp
fnstenv
clc
in
shrl
mov
fstpl
pop
je
imul
fwait
es
mov
jno
loop
mov
movsl
js
mov
sahf
test
int3
cmpsl
push
fiaddl
adcl
pusha
fsubrs
aaa
pop
xor
test
inc
ds
out
add
xor
pusha
or
add
cld
sarb
jmp
mov
jno
fsubrs
inc
les
test
lods
ret
mov
dec
mov
pop
test
sahf
xchg
dec
clc
mov
aad
push
xor
jnp
outsb
dec
fs
popa
push
push
lock
dec
sarb
mov
jae
mov
push
sub
lsl
jmp
mov
inc
fisttpll
scas
fldt
and
pop
cltd
sub
mov
add
sub
inc
dec
and
hlt
ret
aaa
lock
jle
cmc
xchg
fnstcw
jnp
inc
xchg
inc
jae
or
pop
cmp
xchg
pop
dec
out
push
dec
popa
stc
mov
dec
fisubs
pop
jl
jmp
pusha
inc
mov
mov
negb
mov
mov
pop
leave
call
shl
xchg
or
push
push
pop
js
dec
jns
rep
outsb
pusha
cmp
fisttpl
pop
xchg
jo
addr16
ss
sbb
bound
aas
in
push
mov
call
inc
iret
loopne
push
sub
adc
sbb
repz
outsl
or
fs
repnz
pop
cmp
xor
xor
ret
push
aas
inc
add
adc
mov
popa
push
and
xchg
orl
data16
iret
fwait
push
cmp
test
into
arpl
xchg
mov
push
jg
test
sbbb
inc
pop
sbb
pop
mov
jo
mov
popf
lods
mov
or
dec
je
enter
je
lds
leave
push
jmp
pop
mov
mov
push
cmp
icebp
mov
and
and
mov
mov
fists
fwait
mov
mov
cmp
lcall
gs
dec
mov
jae
in
xor
and
push
xchg
cs
cmpsb
int3
imul
rcr
pop
push
cmc
dec
loopne
jns
iret
js
icebp
pop
pop
cmc
jle
or
push
in
sbb
gs
jecxz
cmp
insb
in
sbb
stc
mov
lcall
out
adc
orb
jecxz
or
fmulp
xchg
xor
test
jmp
jmp
rcrb
mov
mov
add
into
loop
enter
jmp
fcmovnbe
daa
fcomps
cmp
popf
lea
mov
sub
or
leave
pop
nop
lds
add
mov
add
sbb
jmp
and
and
xchg
mov
idivl
test
insl
mov
push
xor
push
mov
cmpsl
nop
jb
sub
stos
xchg
push
mov
fiaddl
pusha
pop
jl
pop
std
lret
cmp
inc
mov
jnp
add
mov
pop
int3
sbb
jno
mov
or
data16
sbbb
in
inc
pop
rclb
inc
ror
decl
test
and
jae
adc
adc
push
stos
xchg
pushf
in
sbb
inc
inc
in
xor
sbb
jae
leave
dec
cmpsb
push
mov
loop
mov
dec
mov
test
sub
movzbl
cmp
arpl
in
mov
add
jle
leave
incl
xchg
fldenv
aaa
vpinsrw
xor
inc
fsubrs
outsl
adc
and
test
dec
lds
push
xor
push
sarl
push
cmp
insw
lahf
cs
jp
inc
das
leave
pop
lods
fidivl
aam
sbb
sub
int3
mov
jo
into
push
jbe,pn
aad
jbe
mov
pusha
jmp
fidivs
or
jns
aas
xchg
jge
aam
mov
pextrw
push
sbb
xor
sub
pop
mov
fwait
aas
scas
leave
cmp
mov
add
xor
mov
arpl
mov
ja
pop
in
jmp
sub
mov
enter
push
adc
pusha
jae
int3
xchg
jae
or
mov
fldenv
rorl
mov
pop
xchg
lret
dec
add
push
add
mov
jmp
in
das
push
add
shrb
scas
mov
add
shrb
push
xor
sbb
and
push
lea
sti
sub
pop
or
andb
test
icebp
adc
pop
aad
add
cmpsb
test
cli
outsb
movsl
lock
sbb
mov
cmp
sub
or
sub
es
ret
shrl
mov
adc
shrb
xchg
and
and
rcrl
add
push
sahf
sbb
leave
ds
adc
lahf
imul
push
jmp
xor
sbb
js
cs
xchg
aad
push
push
arpl
test
adc
hlt
adc
mov
movsb
push
dec
shr
push
insb
xchg
xchg
add
add
jb
aad
dec
out
jno
shlb
les
test
in
cmc
std
add
sbb
add
mov
out
push
fsubs
out
scas
or
ret
push
lcall
loop
or
and
mov
mov
xchg
xor
jb
sbb
push
sbb
mov
push
push
fcoml
call
mov
out
hlt
lds
shrl
idivb
xor
insl
aaa
clc
loop
jecxz
sub
jb
xchg
dec
pop
dec
jns
lds
loope
cmpb
sbbb
sbb
incb
mov
push
lret
jg
jno
xchg
adc
xchg
mov
mov
nop
lcall
mov
cmpsb
cmp
mov
jne
bound
mov
mov
pop
push
mov
mov
xchg
push
mov
ss
lret
jp
and
fisubs
cs
mov
movsl
sbb
orl
icebp
ss
cmp
popa
ds
dec
jmp
sub
jl
sub
mov
enter
cmpsl
repnz
popa
out
pusha
lods
adc
call
ret
xor
mov
fcom
cli
add
iret
pushf
stc
imul
pop
mov
popa
adc
mov
ds
dec
jno
ret
jb
pushf
test
add
dec
or
mov
mov
dec
lock
addr16
das
mov
outsb
xchg
jo
in
scas
push
xchg
fwait
cltd
xlat
and
adc
xchg
adc
sub
lock
imul
mov
in
aaa
mov
shr
push
shlb
pop
add
xchg
out
loope
rorl
inc
cmp
inc
and
int
inc
lret
jns
xchg
mov
xchg
xchg
dec
stc
jmp
jno
pop
push
cld
ljmp
xor
adc
loop
push
and
sub
and
jmp
add
out
lea
inc
xlat
leave
xchg
popf
leave
lret
adc
mov
std
push
adc
xchg
sbb
sahf
rcr
or
pop
mov
mov
sub
call
xor
gs
sub
in
ret
mov
adc
es
cmp
inc
nop
loopne
fwait
cld
inc
sbb
jg
and
aad
fwait
insb
les
and
sbb
dec
push
pop
mov
mov
int
mov
les
cmp
pop
dec
mov
cwtl
inc
fmulp
sub
mov
loopne
movsb
adc
hlt
lret
or
cmp
or
xchg
int
mov
mov
or
outsl
mov
add
adc
mov
or
dec
and
or
cs
lahf
js
pop
test
mov
xchg
pusha
xchg
les
insl
pop
mov
dec
shufps
cwtl
data16
outsl
adc
aas
fistps
lret
dec
xor
loope
jbe
sbb
daa
fwait
insl
mov
aad
push
fucomi
xor
mov
dec
pushf
call
insb
push
and
inc
dec
xchg
xlat
mov
repz
out
sbb
and
or
out
lcall
xor
repnz
lds
enter
repnz
dec
mov
mov
cmpsl
jb
stos
mov
fs
add
arpl
scas
jge
sbb
sbb
pop
jo
stos
int3
jae
leave
clc
rcrl
push
icebp
sbb
pop
pusha
aas
cld
rolb
stos
add
cld
sbb
add
adcl
mov
xor
sbb
xlat
cltd
iret
testl
mov
aad
aas
mov
out
in
insl
dec
mov
adc
and
int
lods
rclb
aam
or
dec
insb
out
jle
fstpt
xorb
dec
dec
mov
adc
add
xor
or
lcall
inc
xchg
xchg
popa
hlt
or
push
inc
mov
dec
out
lcall
jae
sbb
inc
jle
add
mov
test
cmpsb
lcall
lahf
stos
sbb
xor
sbb
fwait
or
lds
jge
mov
mov
mov
adc
in
or
xor
es
cwtl
out
leave
fidivrl
ret
aaa
mov
push
dec
pop
jb
pop
ret
mov
cmpb
in
gs
js
mov
iret
into
push
jb
or
shlb
bound
cld
clc
mov
imull
lret
pop
popl
pusha
mov
lods
hlt
data16
adc
cmp
xchg
fwait
ds
popa
push
aam
inc
inc
ffreep
mov
pop
stos
lods
movsb
loopne
jg
lods
mov
xlat
inc
push
sub
cmp
rorb
sbbb
sub
out
mov
aad
adc
jle
and
lds
jmp
rorl
or
rclb
insb
out
pop
cwtl
gs
outsb
in
push
xchg
sti
int
jo
lret
xchg
mov
int3
insl
rol
mov
loope
jp
xchg
jg
int
dec
fldcw
cmp
dec
pop
iret
adcb
pop
cs
xor
sub
inc
jp
cmp
jecxz
inc
pop
push
aas
sbb
push
mov
cld
cmp
sub
in
mov
out
inc
mov
add
cs
adc
dec
jle
decb
pop
jno
fidivs
inc
or
mov
idivl
adc
bound
outsl
mov
xchg
ljmp
stos
fs
xchg
pop
adc
or
into
repz
fbld
xor
lods
das
inc
ficoms
push
mov
or
push
and
and
scas
lods
mov
jbe
shlb
jbe
sbb
fcomps
push
cmp
cltd
jg
cs
rcll
cmp
push
sub
mov
cmp
lahf
xchg
push
mov
frstor
sbb
lea
add
mov
push
add
push
add
mov
lods
adcl
out
out
loopne
lods
and
ds
mov
ret
inc
stc
aas
das
sub
mov
fs
jns
lea
into
mov
jb
hlt
mov
inc
cltd
sub
xchg
jne
pop
inc
fcmovne
xchg
adc
je
jg
cmc
pusha
cld
shll
mov
and
mov
push
jecxz
fisubrl
sub
enter
jp
push
in
movsb
fucom
lods
mov
mov
push
mov
data16
pushf
and
shll
sbb
cmp
cmpb
fwait
push
and
jl
lods
enter
aam
cmp
jg
or
pop
dec
call
sub
in
add
js
sti
xchg
das
jmp
push
lcall
pop
jg
ss
push
dec
jecxz
add
pop
das
das
and
in
aad
inc
orb
mov
xor
outsb
pop
or
and
push
loopne
int
lods
and
and
lods
je
movsl
xor
push
fsubp
inc
mov
push
jp
lcall
fnstenv
jo
mov
imul
mov
jl
adc
xor
data16
aas
out
test
mov
call
mov
jo
xor
fs
mov
or
jmp
sub
and
shrl
jae
int3
mov
bound
cltd
mov
pop
dec
mov
xor
sub
xor
add
aam
cmp
add
lock
xchg
and
pop
adc
xchg
dec
out
push
nop
mov
jmp
pop
inc
icebp
inc
aad
jg
push
cld
jo
sbb
idivb
xchg
pop
adc
icebp
add
lods
mov
inc
rcll
imul
mov
iret
or
mov
and
dec
dec
in
nop
fsubp
dec
jne
add
mov
aaa
daa
aas
sub
movsl
jno
cld
rcrl
mov
mov
push
int
aad
inc
hlt
dec
or
lock
cltd
cmp
insl
mov
outsl
push
loope
and
or
jns
mov
lahf
ss
movsb
adc
push
stc
out
add
pusha
lret
dec
jge
jbe
mov
jl
sub
or
lds
mov
mov
pop
mov
sbb
mov
xchg
push
lods
mov
negl
push
cmp
mov
fstl
push
ficomps
js
mov
in
pop
test
scas
fidivrs
ljmp
loopne
fs
mov
cmp
stos
or
loope
inc
mov
pop
ret
aaa
rcr
cmc
push
hlt
cmc
cld
fidivrl
adc
jp
movsb
push
lcall
fsubrs
lea
stos
add
enter
push
aam
pushf
xchg
faddl
lods
mov
jmp
push
push
fstps
dec
ds
pushf
sbbl
movsb
jmp
je
pop
les
jns
mov
fmuls
mov
xchg
add
enter
dec
mov
xor
push
mov
xor
mov
js
and
sbb
mov
fwait
stc
push
roll
mov
lods
lret
insb
inc
leave
out
stc
sub
mov
add
inc
pop
xchg
mov
pop
lcall
loop
imul
ficoms
insb
cmp
int3
adc
inc
and
hlt
shlb
adc
cmpsl
or
fiadds
sub
int
xchg
or
lds
adc
sahf
test
mov
adc
cmp
ret
adc
cmp
cmpsb
dec
mov
out
fmull
cmc
sbb
mov
dec
pop
jmp
sub
popa
dec
xor
mov
cmp
mov
popa
dec
mov
xchg
inc
ja
adc
out
push
jno
outsb
jecxz
xchg
roll
push
cmpsb
idivl
push
iret
pop
outsb
inc
fildl
iret
or
push
sbbl
dec
jmp
mov
adc
push
adc
mov
lods
cmp
xor
inc
or
cmp
insb
add
icebp
jl
xchg
popf
rcrl
add
lret
outsl
jo
and
dec
mov
clc
int3
mov
into
pop
mov
sbb
leave
jl
cmp
les
push
jae
insb
pop
jl
pop
adc
ret
enter
ficoms
mov
mov
testw
scas
fistpll
inc
nop
and
mov
mov
xchg
jae
and
loope
call
out
int
xor
iret
and
xlat
notb
ja
setle
sbb
sub
xchg
mov
pop
xor
xchg
ret
mov
sbb
inc
sbb
outsl
movsl
in
push
mov
add
mov
test
sbb
rcll
js
mov
mov
push
mov
push
test
sahf
fisttpl
mov
movsl
bound
xor
cmp
lds
lods
xchg
imul
mov
push
maskmovq
mov
jne
pop
loop
sub
push
fstpl
xlat
negb
in
aad
inc
mov
fs
cld
mov
pop
std
lock
xlat
les
jne
or
mov
cmp
dec
in
test
push
aam
cltd
xchg
es
jle
cmpsl
test
sbb
cmpsb
mov
push
dec
leave
add
les
xor
shlb
xor
shlb
xor
int
xor
push
pop
add
pop
sbb
push
ds
inc
sub
adc
es
mov
or
out
adc
xchg
sub
outsb
jg
loope
xchg
pmaxub
test
xor
adc
sub
dec
mov
cmp
rcrb
xchg
sbb
mov
adcb
pop
add
lock
cmp
and
and
adc
notb
dec
ficomps
lods
leave
out
insb
lahf
mov
xor
or
out
and
cs
cli
rcrl
xor
sub
cmpsl
cmp
jecxz
pop
fnstcw
orl
mov
je
arpl
inc
jns
fimuls
and
frstor
mov
or
sbb
add
xchg
adc
pusha
pop
mov
sub
call
add
clc
and
mov
negl
clc
or
fldt
lock
in
or
in
fmul
push
and
out
movsb
fwait
into
add
in
cwtl
fwait
mov
jb
clc
sub
into
push
push
mov
cmp
inc
mov
mov
push
sbbl
shll
jb
testb
xor
and
fs
pusha
dec
adc
sti
xor
jmp
jp
pop
jg
add
cwtl
lcall
adc
xchg
and
dec
daa
xchg
jge
outsl
push
ds
sahf
test
int
sub
fs
inc
sub
enter
js
jae
sub
lret
dec
cmp
push
icebp
lcall
sub
xor
into
sbb
aam
dec
pushf
movsb
cmp
add
jne
push
cmp
les
push
ja
cltd
loope
addr16
stos
cmpsl
mov
addb
repnz
pushf
push
push
jle
outsb
sbb
inc
sbbl
sbb
cmpsl
mov
fistpl
jmp
sub
and
push
xor
pop
nop
mov
mov
adc
mov
mov
inc
push
lods
cmp
xor
fbstp
testb
sbb
or
std
shlb
arpl
pusha
shlb
ss
mov
dec
pushf
arpl
std
add
fcompl
cld
or
inc
idiv
repz
outsb
mov
mov
cmp
popa
lcall
lcall
xorl
aas
ds
lock
inc
mov
sarb
loopne
aaa
fdivs
shlb
popf
cmp
pop
outsb
insb
sbb
xchg
and
movsb
inc
mov
das
jno
test
subb
push
mov
jb
sub
fmuls
mov
or
pop
mov
int3
pop
je
lds
out
out
popf
pop
icebp
cmpsl
xchg
adc
push
adc
cli
inc
push
gs
scas
adc
scas
jge
push
jo
xor
int
fnstsw
loope
dec
mov
ds
rcl
cmc
xchg
push
adc
xchg
push
ja
ret
outsl
sub
movsb
xchg
movsb
mov
sub
pop
imul
hlt
insl
pop
sbb
push
stos
popa
add
scas
sbb
hlt
adc
xlat
repz
and
mov
fildl
ja
jmp
fnsave
xor
inc
sub
pop
repz
orb
cld
ljmp
push
fs
add
jbe
jnp
dec
out
or
arpl
or
lret
leave
xchg
jo
mov
inc
sub
hlt
cmc
mov
pop
dec
lret
mov
sub
mov
loope
shr
sub
dec
xlat
pop
xor
hlt
andb
push
popl
mov
sub
sti
jae
sub
je
call
dec
adc
pop
cmp
flds
pop
pop
add
and
movsl
mov
lods
test
stc
ljmp
loopne
stos
mov
add
xchg
jns
dec
outsb
lods
dec
das
pop
stc
xor
cmp
les
fnstsw
pop
jmp
pop
shll
shll
push
lret
nop
xor
lcall
repz
mov
enter
jl
xchg
out
mov
stc
and
dec
and
xor
inc
jo
sub
ret
inc
jg
jnp
sahf
inc
push
imul
or
mov
data16
call
pop
sub
imul
sbb
xor
inc
lds
pop
jge
mov
jmp
push
jns
dec
xchg
pop
int
push
and
shrl
sub
adc
je
adc
gs
pop
add
push
outsb
or
adc
imul
shll
xor
out
add
sbb
sub
sbb
aas
std
jl
vmaxss
xor
daa
jg
mov
mov
adc
fidivrs
push
testb
or
cmp
gs
or
pop
shll
xor
add
in
movsb
test
std
adc
jg
inc
pop
sub
push
sbb
push
fcompl
pop
mov
mov
jle
pop
xchg
or
mov
jo
mov
adc
pop
idivb
push
outsb
sarl
pop
int
adc
int
shl
cld
inc
pushf
dec
inc
mov
mov
xlat
fs
scas
negb
cmp
enter
inc
rcr
mov
cmp
movsb
sbb
pop
ret
loope
adc
cmpsb
popa
insb
cli
insb
movsb
ja
cmp
sti
lock
std
dec
mov
mov
fistpll
dec
mov
push
pop
into
sbb
mov
pop
lea
jae
out
adc
xchg
inc
mov
loop
into
inc
cmp
je
sbb
cltd
loopne
popa
int
clc
ja
pop
test
sub
push
pushf
ficoms
or
lret
ja
pop
mov
jb
mulb
inc
jl
fidivs
jge
pop
fidivs
test
or
cmpsl
movsl
dec
xor
mov
jp
inc
fidivrs
das
cmp
movsb
mov
test
pop
xor
pop
ds
mov
cmpl
and
jno
lds
inc
cmp
sysexit
adc
cltd
and
fidivrs
sub
xchg
stc
out
xor
adc
in
mov
sahf
xchg
mov
cmp
divb
arpl
scas
int
xchg
aas
cwtl
mov
imul
jno
mov
cld
adc
mov
loopne
in
mov
call
insb
inc
push
lcall
jmp
fists
inc
cld
push
mov
jl
rorb
pop
test
enter
rorl
ljmp
add
push
gs
or
adc
test
or
iret
dec
and
xchg
sbb
shrb
xor
jmp
mov
dec
sbb
xor
sbbb
mov
je
inc
inc
push
mov
call
cmp
std
jmp
adc
lret
push
xor
loope
and
cmpsl
push
jne
mov
das
push
xor
iret
es
mov
test
loopne
fnstenv
mov
fcompl
in
out
mov
push
push
scas
notl
enter
xorb
xor
popa
out
lret
leave
jle
jmp
lret
int3
push
sbb
int
jmp
pop
rorb
push
mov
and
insb
cwtl
xlat
mov
ds
cld
popf
pop
fsub
push
mov
sbb
lea
mov
aas
push
inc
mov
jb
adcb
jns
cmp
xor
scas
cmpsl
stos
jp
cwtl
xor
add
add
mov
add
sbb
xlat
add
sti
fidivrl
aam
or
scas
sarb
lock
aas
int3
stos
mov
sbb
in
add
lret
add
mov
jae
cwtl
popa
out
shl
mov
pop
fldcw
call
and
repz
idivl
aam
in
adc
sbb
gs
push
dec
in
xchg
insl
mov
sub
ret
iret
and
xor
sbb
adc
outsl
aaa
rclb
ljmp
andb
jbe
dec
mov
mov
ret
jl
imul
cmp
icebp
and
mov
jbe
mov
enter
gs
cmp
sahf
sarb
mov
dec
fucomip
aas
sbb
jnp
hlt
mov
adc
shrl
push
mov
shl
and
dec
notl
and
cmp
mov
ja
inc
mov
sti
pop
insb
popa
adc
push
jmp
xchg
push
or
data16
xor
ja
pop
in
jno
pop
add
jge
xchg
test
ss
dec
nop
mov
mov
jl
add
inc
insb
jbe
fwait
stos
mov
jp
inc
andl
daa
inc
add
mov
cwtl
push
inc
or
and
fdivr
adc
mov
rcrb
mov
test
test
mov
ljmp
icebp
rol
or
jbe
mov
pop
hlt
mov
movsb
sbb
sarb
lret
xchg
hlt
mov
mov
ds
add
mov
mov
mov
out
adc
or
pusha
add
lret
pushf
or
and
dec
out
xor
das
test
xchg
sbb
xor
movsl
enter
adc
movsl
adc
mov
divb
lods
imul
jle
test
xchg
popf
es
push
xchg
xchg
leave
movsl
movsb
jmp
fnstsw
xor
pop
test
int
loope
jno
inc
push
xchg
mov
cmp
fisubrs
or
lds
cmp
cmp
push
fucom
icebp
push
cmp
jo
mov
test
mov
cmpsb
jecxz
mov
divl
xor
or
out
fwait
or
xor
xor
or
sub
pop
mov
sbb
mov
ljmp
js
nop
mov
popa
xchg
mov
pop
fadds
push
cmp
lods
xchg
movsl
jg
fwait
jg
or
mov
xor
pop
inc
out
test
adc
ret
lea
fs
call
sbb
jl
cmp
repz
fwait
adc
std
mov
fsubl
adc
adc
fchs
or
adc
push
xchg
frstor
add
sub
daa
inc
fwait
stc
sub
jo
sti
arpl
pop
fists
cmpsb
pop
lcall
rcr
push
movsb
stc
call
ja
jecxz
mov
out
push
xchg
test
jge
push
dec
imul
jmp
cmp
xor
fadds
imul
cld
stos
mov
popf
cmp
pop
push
inc
add
cli
inc
mov
cmp
stc
pop
ljmp
fwait
pushf
into
fstpl
add
dec
shll
sar
out
outsl
and
adc
inc
push
pop
sub
mov
cmp
stos
mov
adc
mov
loopne
ja
push
in
and
hlt
enter
pop
push
inc
inc
jecxz
and
negb
arpl
ss
pop
cmpsl
cmc
and
pop
dec
mov
icebp
repz
scas
mov
adc
dec
test
div
jp
sub
leave
test
adcl
jmp
xor
cmc
mov
arpl
dec
out
xor
add
xchg
sbb
mov
mov
insl
js
mov
jp
cld
sbbb
insl
add
push
sbb
ljmp
mov
pusha
les
xchg
sub
lea
data16
cmp
xchg
sbb
sbbb
push
push
out
mov
jge
dec
mov
lods
imul
orb
push
adc
lds
bnd
push
std
jg
push
inc
mov
xor
inc
fistl
cmp
pop
push
sbb
and
mov
addl
add
push
adc
push
subl
fidivrs
dec
bound
jg
fnstsw
xchg
sahf
test
add
and
dec
inc
jno
popf
inc
lods
mov
lea
divb
inc
lock
xor
push
cmp
notl
ret
orl
faddp
adc
insl
adc
xchg
dec
fiaddl
ficoml
shr
cmpsb
pop
add
aas
in
incb
loop
and
call
shrl
cmp
in
dec
push
adc
int
fs
stos
jmp
adc
inc
mov
dec
bound
add
js
push
in
mov
lret
ja
sahf
mov
mov
arpl
subb
fmuls
shll
shlb
xchg
je
push
pop
mov
btc
jge
das
or
sbb
pop
call
xchg
data16
shll
pop
lods
dec
inc
dec
adc
mov
lods
dec
js
imul
addr16
call
imul
repz
jo
and
sub
js
or
jg
push
dec
and
xchg
rorl
out
fldt
mov
xor
js
hlt
scas
cmp
mov
and
push
roll
cltd
xchg
out
mov
enter
lods
xchg
xor
or
mov
mov
sub
add
push
fdivrp
mov
fidivs
mov
out
inc
inc
std
fidivs
mov
in
fcoml
push
or
xchg
stos
fldl
mov
lcall
lods
and
test
xchg
mov
call
mov
pop
ret
pop
dec
mov
cmpb
sub
lock
lret
in
imul
sti
pop
add
fsts
xchg
xorl
and
cmp
pop
mov
sub
int3
fidivrl
mov
pusha
ror
push
sahf
repz
test
stos
out
inc
sbb
out
addb
jmp
xor
fldl
jecxz
sub
inc
xchg
mov
mov
push
test
and
cmpsb
mov
add
out
and
psrlq
mov
adc
push
fistps
jp
shll
outsl
mov
fldcw
sub
adc
mov
or
mov
mov
jb
cltd
cmpb
mov
cltd
in
mov
cmp
xchg
or
pop
xor
cmp
xor
sub
repnz
daa
mov
les
push
ss
ud1
dec
jl
pop
pop
mov
out
mov
mov
jl
int3
movsl
adc
jecxz
and
jae
and
jo
rorb
adcb
popa
push
sahf
cs
jno
sub
outsl
add
mov
xchg
sub
stc
jmp
dec
bound
and
xor
das
js
jns
xchg
jne
mov
adcb
and
xchg
jnp
sar
stc
das
xor
adc
in
push
or
aam
pop
enter
test
and
mov
testl
and
sbb
jle
mov
daa
inc
or
add
mov
dec
int
inc
dec
bound
or
fcomps
daa
rorl
rcrb
out
cltd
xchg
in
pop
sets
int
add
in
pop
mov
sbb
mov
mov
dec
in
ret
rorl
sbb
cli
mov
xor
inc
jbe
mov
jecxz
xchg
jg
daa
lods
sbb
inc
sarb
mov
pop
cmpsl
lds
cmp
mov
rcll
arpl
jmp
adc
push
pop
pop
pop
in
pop
shl
jb
xchg
stc
cmc
cwtl
push
pop
and
pop
sub
loop
fwait
imul
push
or
stos
clc
xor
in
aam
fldcw
repnz
mov
xchg
dec
loopne
mov
jmp
xchg
outsb
push
add
mov
shlb
andb
pop
sub
dec
sub
mov
pop
jl
inc
jp
push
pop
sub
push
xchg
sbb
mov
lock
ss
push
out
xchg
insl
clc
push
inc
insb
mov
ss
dec
xchg
dec
push
cmp
popf
movsl
imul
movsl
decl
aas
lea
aad
adc
mov
les
mov
mov
subl
push
mov
jo
dec
stos
ljmp
xchg
xchg
cmp
pusha
lcall
inc
mov
sahf
add
vrcpps
test
add
push
cltd
pop
outsb
jge
adc
push
mov
lds
ja
cmpsb
push
xchg
mov
dec
sbb
jmp
or
mov
test
mov
xchg
in
lahf
cmc
jno
pop
dec
mov
test
pop
outsl
cwtl
mov
aam
les
jne
push
es
daa
xchg
mov
cld
xchg
scas
xchg
lds
movsl
xchg
movsb
es
icebp
test
sar
or
leave
add
iret
frstor
cmp
pop
or
ret
scas
add
mov
xor
mov
xchg
xchg
lds
adc
sub
cmpsb
outsl
jge
push
adc
pop
inc
enter
cwtl
dec
mov
aaa
out
stos
adc
mov
push
aas
mov
xor
sar
mov
jmp
iret
loope
fs
movsb
dec
sbb
cmp
in
ret
sub
mov
jecxz
push
shl
movsb
pop
pop
inc
test
mov
rcrl
loope
sub
int
insb
stos
flds
adc
fists
xor
or
cwtl
jne
cmp
out
pop
and
dec
into
dec
cmp
test
outsb
xchg
cmc
sub
sbb
outsb
call
out
inc
fsts
cmp
ret
pop
cmp
pop
push
add
js
fldl
adc
cmc
lea
js
popa
cmp
lds
xchg
stc
int3
pop
es
push
adc
ds
xchg
in
mov
daa
sbb
xchg
pop
sbb
mov
scas
mov
jae
push
xchg
sub
in
in
fcomps
cmp
push
aad
ret
loop
jae
sub
xor
sar
loopne
pusha
in
aad
scas
inc
xchg
inc
or
stos
or
fnstsw
mov
xor
aam
xor
mov
sti
add
lret
sarb
jae
inc
and
decb
cmp
add
bsr
icebp
stos
push
adc
push
jne
sub
aad
test
and
pop
in
pop
seta
xchg
ret
fwait
inc
loope
daa
cmp
xchg
sbb
push
aam
repnz
sbb
jge
cmpl
push
stos
xor
jns
cwtl
dec
mov
sub
xchg
jmp
jl
xor
aam
leave
sbb
orb
movsl
outsb
pshufw
push
hlt
or
mov
jns
lahf
stos
aaa
add
call
sbb
imulb
lret
push
outsb
inc
inc
popf
mov
push
in
push
sbb
sbb
movzbl
cmpsb
out
out
into
insl
aad
insl
dec
sbb
sar
lahf
pusha
lods
and
out
gs
rorb
or
sbb
inc
js
mov
inc
inc
jbe
xchg
cmp
in
push
cmpsb
in
and
popa
cmpsb
ljmp
inc
scas
cmp
mov
add
and
data16
aas
push
mov
lods
xchg
add
mov
xchg
adc
leave
mov
in
xchg
add
fistpll
and
pop
gs
xchg
mov
enter
test
outsl
pop
aaa
or
pushf
push
std
jae
jp
xchg
mov
pop
push
push
add
mov
sahf
sbb
mov
mov
pop
rcll
sbb
stos
sahf
push
mov
int3
notl
inc
mov
push
int3
or
imul
nop
lds
dec
xor
ja
insl
out
xchg
jae
adc
mov
lcall
pop
sbbl
movsb
pusha
lock
or
xchg
push
dec
mov
or
ljmp
ljmp
scas
xchg
mov
lods
dec
cmp
xchg
mov
mov
pop
cli
popf
popa
insl
mov
call
jle
cmp
xchg
lahf
mov
loope
sarb
in
cmpsb
or
or
xchg
test
inc
cmc
int3
mov
sub
inc
mov
ja
mov
cld
sub
je
sbb
pop
mov
inc
adc
mov
sbb
test
lret
fwait
adc
shl
inc
in
popa
mov
je
lds
mov
pushf
mov
fisubrl
sbb
and
je
mov
jae
sbb
aam
dec
imul
shl
out
das
adc
adc
jmp
and
inc
fsubl
loope
mov
xchg
and
pop
mov
repz
out
mov
mov
cmp
jno
push
das
clc
add
loop
bound
fwait
arpl
xchg
mov
loop
daa
movsl
sahf
iret
add
mov
ror
loop
push
loop
pushf
ja
test
mov
sub
bound
psubd
xchg
add
sub
rcll
jb
insl
data16
inc
and
hlt
pop
stos
imul
dec
movl
mov
xchg
xlat
ret
mov
pop
xlat
shll
out
scas
inc
add
or
xchg
and
sarl
jecxz
cmp
add
jmp
inc
mov
rcll
jo
mov
test
or
pop
and
out
pop
data16
std
stc
mov
hlt
fidivl
cmp
scas
pop
daa
adc
xchg
xor
inc
fidivl
mov
popa
js
jno
sub
lcall
stos
nop
hlt
cltd
jne
sahf
lock
fcoml
pop
aam
push
cmp
outsl
push
call
outsl
repz
jmp
add
jno
rcrb
inc
lret
mov
dec
pop
out
jo
cmp
or
clc
xor
aas
xchg
mov
fcompl
stc
jo
dec
and
loopne
or
ja
lcall
dec
aaa
dec
adc
subb
pop
xor
mov
loope
jg
lock
in
in
es
inc
adc
inc
test
or
int3
xchg
out
enter
movsl
push
xor
out
xchg
jb
mov
lcall
adc
pop
repz
mov
andb
push
pop
pop
cs
in
xchg
add
ss
push
out
mov
cmp
jae
xchg
or
pusha
sbb
inc
fisttps
in
fst
sbb
js
or
insb
cmp
and
arpl
mov
sbb
or
jo
in
xchg
aas
lock
sbb
xor
enter
mov
push
pop
lahf
mov
scas
mov
add
adc
lret
hlt
xchg
jl
inc
or
pop
mov
cmp
sbb
jl
push
push
mov
xor
cwtl
loopne
mov
xlat
hlt
in
push
mov
fbstp
test
cmpsl
add
xchg
dec
cmpsb
dec
xchg
sub
mov
std
jmp
sarb
mov
pop
sahf
adc
xchg
add
test
adc
fisubs
pop
cmp
data16
std
dec
mov
repnz
add
andl
mov
add
lcall
loop
loopne
sub
es
arpl
inc
inc
pop
mov
mov
mov
les
adc
and
push
inc
mov
je
adc
sbb
out
pushf
decb
leave
and
aaa
fidivrl
push
fdivr
int
pop
push
fiaddl
ret
push
xchg
dec
push
jne
pop
xchg
mov
mov
imul
push
push
xlat
iret
rclb
aam
sub
or
pop
cmc
orl
ds
jo
adc
mov
push
xlat
adc
into
mov
pop
pop
fcmovnb
cli
xchg
jbe
sbb
incb
xchg
and
gs
cmpl
push
push
in
adc
push
xor
dec
cmp
xor
int3
inc
pop
hlt
rorb
fwait
addr16
test
pop
scas
jae
popa
and
xlat
mov
mov
dec
push
hlt
or
lock
dec
cwtl
in
and
or
lds
jns
ja
dec
sbbl
lods
clc
in
dec
cmp
cld
adc
aaa
jnp
test
or
mov
sbb
add
jle
cmp
rclb
pop
mov
mov
icebp
xchg
ds
mov
ljmp
add
insl
loop
call
jb
xor
in
mov
mov
push
loop
push
adc
aam
xchg
leave
hlt
jb
aas
shll
cmp
mov
daa
xchg
cld
inc
ret
or
stos
ljmp
test
fs
and
cmp
fstpt
and
out
xor
jmp
stos
fdivrs
notl
jno
cmp
js
or
test
dec
mov
inc
cmp
repnz
xor
sub
cltd
sub
or
mov
nop
and
gs
push
out
jo
xor
sub
jecxz
jne
add
stos
xchg
xchg
add
lock
jl
test
sub
dec
jns
popw
inc
repnz
lods
and
js
adc
cmp
cmp
pop
test
aaa
shlb
mov
stos
sbb
or
loope
jns
movsl
cs
add
test
nop
imul
repz
sti
push
add
aad
add
xor
lahf
fsubs
fisttpl
mov
fwait
movb
pop
icebp
push
push
fildl
xchg
mov
in
loopne
jo
and
sbb
add
int3
jns
inc
test
and
repnz
stc
push
mov
cmpb
sbb
insl
jecxz
adc
lret
xor
and
inc
scas
xchg
js
nop
mov
xchg
out
mov
hlt
out
jg
push
mov
out
int3
mov
loopne
test
xchg
mov
lds
jle
sti
mov
and
push
pop
aam
popa
inc
and
xchg
test
or
imul
or
repz
mov
shll
and
rdmsr
mov
jns
sahf
and
insl
mov
xor
push
xchg
xor
test
aas
push
pop
add
ret
sbb
pushl
mov
and
mov
lock
ja
test
mov
push
cmc
xchg
sub
mov
or
popf
in
es
add
jp
jne
cmp
clts
cmp
dec
dec
sbb
in
dec
add
push
add
cwtl
add
ljmp
loop
into
and
sub
jmp
xchg
movsb
lods
es
aad
mov
ja
scas
xor
aas
repnz
inc
in
in
jo
into
movsb
add
pop
mov
jl
fwait
push
push
addb
pop
ss
xchg
lahf
gs
dec
adc
scas
xchg
cs
dec
sub
repnz
add
add
dec
repnz
cmp
leave
xor
sbbl
pop
adc
and
movsl
popa
imul
lahf
push
repnz
in
push
inc
push
xlat
pop
xchg
add
mov
fbld
lea
push
xchg
out
aam
dec
adc
xor
ljmp
pop
inc
scas
rol
pop
cmpsl
cmp
cld
jno
inc
jo
cli
imul
jnp
mov
lea
sti
lods
rcrb
sbb
aam
push
sbb
fwait
mov
sub
xchg
int3
add
mulb
andb
mov
sub
and
jl
push
and
mov
loope
sbb
or
jp
mov
sub
pop
lock
inc
push
out
cmp
je
pop
push
mov
mov
push
push
movsl
notl
jns
push
adc
dec
imul
lods
jg
add
add
data16
in
rorb
dec
test
insl
or
in
pop
imul
sti
fldt
movsb
call
popf
call
cld
inc
cmp
add
cltd
sub
push
adc
xchg
mov
adc
and
xor
cmpsl
push
aaa
imul
push
jge
inc
xor
testl
sub
sub
nop
mov
sbb
push
inc
in
dec
std
scas
xchg
push
jl
jno
xchg
mov
loope
insb
int
adcl
fidivs
out
ss
lock
cmp
sub
aas
dec
out
add
mov
cwtl
getsec
jg
insb
repz
fwait
cmp
push
fsubrl
mov
and
mov
outsl
mov
jmp
out
cmpsb
aam
inc
nop
leave
repz
and
test
loopne
stos
sbb
cmp
adc
xchg
outsl
xchg
aas
xchg
jns
cmpsl
sbb
ja
mov
sub
jo
imul
sub
xchg
daa
jmp
xor
mov
bound
or
jae
ret
jae
ja
mov
cmp
and
or
jp
pusha
in
inc
fildl
mov
and
inc
lea
ljmp
ret
xchg
add
push
jne
and
hlt
inc
movl
pop
sbb
sbb
pop
add
jl
mov
dec
imul
shlb
mov
pop
mov
sti
jns
push
jge
or
out
push
cmpsl
lods
loopne
fidivrl
mov
faddl
lods
loopne
daa
adc
jo
call
inc
mov
and
dec
loopne
lret
clc
js
jns
fucomip
mov
xchg
loope
inc
pop
dec
mov
testl
push
shrl
int3
fsubr
cld
cmp
cmp
rcl
sub
sbb
add
xchg
mov
lahf
scas
sub
in
sub
sti
push
mov
outsl
in
sbb
xchg
ret
push
aaa
loop
pushf
in
push
adc
mov
in
add
movsl
push
pushw
ljmp
mov
push
enter
and
repz
fistpll
aaa
cmp
test
lcall
dec
nop
xchg
jns
mov
dec
xchg
mov
push
push
dec
push
push
xchg
and
adc
jnp
std
push
stc
adc
and
add
stc
adc
adc
jl
leave
inc
pushf
jp
leave
jns
in
mov
xchg
xchg
push
adc
mov
pop
jno
aam
fmuls
cmpsb
mov
shll
loope
scas
in
xchg
pushf
mov
sbb
fdivs
inc
jns
dec
push
sub
fisttpl
or
fs
ss
cs
inc
loop
xchg
mov
insl
rcll
and
cmp
in
mov
imul
into
cs
cmp
mov
call
repnz
stos
jbe
adc
andl
fistpl
xchg
addr16
mov
gs
pop
sub
fcomps
pop
pop
adc
add
rolb
clc
popa
xor
pusha
imul
insb
xchg
js
add
xchg
mov
jae
test
mov
stc
insl
pop
xchg
and
test
repz
lret
mov
ss
leave
xchg
cli
loop
xor
mov
jp
dec
push
or
loopne
pop
xor
push
sub
pop
cld
cld
hlt
fwait
adc
cmp
outsl
mov
cmp
lcall
cmpsb
adc
andb
push
inc
aad
adc
push
xor
and
lds
stos
les
adc
sbb
or
decl
dec
adc
arpl
int
inc
out
xor
sub
add
vunpcklps
or
inc
mov
bound
push
inc
add
xchg
aad
cwtl
jmp
push
icebp
cld
sub
shll
xor
cltd
movsb
mov
xchg
sbb
cwtl
das
inc
loopne
in
mov
xchg
cmp
cmpsl
xlat
daa
dec
movsl
push
repnz
xchg
cmpsb
aad
add
lods
push
es
int
in
repnz
mov
and
movsl
ljmp
in
lahf
dec
inc
or
push
cmc
imul
mov
loop
push
imul
jbe
mov
arpl
adc
sbbb
negb
add
into
dec
sbb
gs
xchg
scas
bound
aas
push
sub
dec
mov
pusha
adcl
mov
xchg
cmp
shr
lret
in
mov
out
pop
mov
mov
pop
pop
cs
push
test
clc
push
fisttpl
and
jo
xor
xchg
mov
sbb
cli
add
push
adc
roll
in
mov
aad
mov
push
dec
imul
pop
into
rorb
pop
dec
mov
pop
roll
cli
lahf
jo
cmpsb
cmp
andl
cmp
ror
xor
dec
divb
pusha
cmpsb
inc
xchg
fmulp
repnz
inc
call
sbb
movsl
and
loope
xor
std
mov
sbb
or
js
scas
movsl
and
lret
pushf
out
lahf
pop
dec
jg
call
push
cmp
cmp
repnz
leave
push
jp
jae
stc
imul
add
xchg
and
int3
lret
jecxz
inc
inc
xor
lods
mov
leave
mov
stc
lods
push
js
pop
push
test
pop
in
sub
test
clc
add
mov
cmp
in
push
push
sub
xor
in
mov
in
mov
push
cmpsl
fcoms
xchg
sar
or
roll
mov
aaa
sub
jae
push
dec
roll
imul
jns
xchg
nop
mov
bound
fidivs
xchg
js
rcl
int
gs
arpl
daa
sbb
xor
adc
xorb
addr16
std
add
jnp
or
dec
shrb
dec
mov
or
mov
or
stos
mov
out
push
aam
sub
or
in
nop
mov
stos
xchg
adc
aam
mov
fsubrl
in
aas
out
pushf
outsb
pop
mov
pop
sbb
mov
mov
cli
pop
and
push
xchg
dec
dec
sahf
adc
mov
pop
and
xchg
cmp
mov
lds
sti
rcr
mov
pop
js
cwtl
pop
ds
cmp
std
add
outsb
inc
loop
pop
xor
ret
popa
lret
push
outsb
mov
xchg
and
imul
pop
lret
enter
sbb
pop
int3
mov
jno
xorl
mov
movsb
push
dec
pushf
xor
push
inc
jns
cs
je
adc
pop
popf
gs
push
push
dec
loop
cmp
and
repz
out
pop
in
test
inc
mov
fildll
jae
mov
and
push
testb
call
mov
xchg
icebp
adc
fucom
and
mov
jb
mov
jle
sbb
xchg
xor
jne
add
pop
ret
mov
push
fdivs
dec
sahf
mov
cmp
data16
dec
or
xor
lret
sub
sbb
xchg
push
xchg
add
roll
or
mov
ljmp
cmp
adc
adc
cmc
jge
mov
arpl
in
jo
iret
addr16
jp
mov
out
outsb
lret
movsb
out
insl
mov
lret
cmpb
sarb
and
bound
sub
mov
call
push
in
mov
xor
pop
popa
sbb
mov
ljmp
mov
scas
adc
cmc
sbb
push
outsb
inc
stos
push
jge
dec
mov
fildll
gs
cmp
xchg
fdivrl
jns
xchg
mov
icebp
sbb
es
push
sub
mov
or
xchg
pusha
mov
stos
adc
outsb
push
int
mov
xor
jmp
ds
xchg
aaa
push
scas
adc
pusha
movsb
aaa
and
shlb
aaa
lret
lods
jmp
or
out
fs
push
xchg
lods
shlb
sub
sub
and
and
rcrb
push
int3
sbbl
mov
arpl
mov
out
das
pop
cmp
cwtl
mov
or
lds
loop
cld
and
cs
fldt
push
int
cmpb
push
into
sahf
rorb
xchg
mov
sar
outsb
push
mov
xor
sub
inc
sub
sub
sub
mov
xchg
out
movb
push
inc
ja
jmp
int
adc
dec
adc
mov
and
dec
mov
rep
add
fdivrl
push
incb
push
add
iret
and
dec
xchg
mov
or
jge
dec
outsl
ret
dec
ftst
add
ljmp
push
xor
mov
sub
xchg
and
cld
filds
jns
mov
mov
shlb
test
outsb
cmpsl
fcmovne
jbe
pop
ljmp
sub
mov
or
fstpt
push
jmp
mov
je
xlat
xor
data16
jno
xlat
arpl
les
addr16
pop
loopne
jo
add
cltd
cmpsl
mov
push
cmpsb
out
inc
call
mov
mov
xor
mov
adc
jns
cmc
add
xlat
lahf
xchg
mov
jae
jb
fs
inc
xor
dec
out
aas
lahf
enter
std
shrb
xchg
sbb
add
notb
rorb
mov
push
mov
xchg
sbb
std
sbbl
or
push
stos
lods
out
xchg
jge
xor
mov
mov
pop
mov
jnp
or
lcall
insl
push
mov
xchg
jecxz
lcall
add
xchg
rcrb
cwtl
pop
sub
cmc
jmp
leave
jle
xchg
fs
cmp
and
inc
cmpsb
dec
dec
sbb
pop
add
jle
lret
or
gs
leave
cmp
sbb
mov
mov
xchg
fwait
roll
inc
sub
scas
popf
mov
pushf
mov
push
das
cmpsl
std
xchg
orb
call
pop
roll
push
mov
sbbb
addr16
repz
stc
mov
jns
ds
daa
dec
pop
xchg
push
aad
sbb
add
dec
xor
jno
iret
push
rcll
adc
movsl
xor
cmpsb
mov
loop
jecxz
push
mov
enter
inc
push
pop
and
pushl
or
ja
lret
flds
pop
outsb
insl
cmp
movsl
ljmp
xchg
and
xchg
out
sub
ret
mov
xchg
mov
push
mov
sahf
adc
pop
xchg
in
clc
lods
lcall
push
arpl
aam
shlb
or
mov
test
mov
sbb
and
xchg
flds
mov
pop
xor
or
or
je
imul
or
fwait
les
xchg
or
dec
in
popa
insb
addl
aad
test
fisttpll
fwait
jae
jp
pop
mov
adc
mov
sub
pop
dec
int
inc
jle
popf
push
fld
iret
jp
adc
test
push
sbb
add
push
sbb
sbb
and
pop
add
xor
divl
xor
push
xchg
dec
push
sub
dec
test
sbb
mov
jns
mov
pop
push
xor
and
mov
mov
ljmp
lret
movsb
adc
in
mov
aaa
scas
or
out
pop
sahf
xchg
cmp
dec
mov
dec
dec
jg
popa
xor
mov
out
arpl
cs
sti
lods
xor
mov
inc
xchg
dec
jne
mov
push
mov
sahf
ret
or
jbe
push
rorb
sbb
test
ja
enter
cs
aad
mov
in
daa
lods
fisttpll
mov
jg
adc
jecxz
les
cmp
xor
or
mov
fwait
es
bound
xchg
aaa
adcl
cmp
aas
dec
ja
inc
mov
setle
imul
outsl
xor
adcb
dec
fstl
add
lds
mov
fildll
lcall
jmp
mov
cmpsl
andb
repnz
jecxz
int
in
jmp
and
or
mov
cli
add
notl
dec
fidivrs
imul
sbb
and
jno
pop
mov
paddusw
in
hlt
es
pop
xchg
into
xchg
fcomip
inc
shrl
xchg
frstor
sti
jecxz
adc
mov
jnp
ret
and
dec
rcr
or
nop
push
inc
pop
or
fisttpll
mov
pop
adc
sbb
lods
cmp
xchg
jne
jb
jnp
loop
add
push
inc
insl
mov
pushf
dec
lods
pop
cmpsb
bound
push
jge
test
push
jmp
add
sarl
push
mov
inc
stos
push
mov
jecxz
xchg
les
xchg
repnz
cmpsb
mov
sbbb
cmc
and
or
popf
pop
xchg
nop
pop
xchg
xchg
push
xor
dec
cltd
into
repnz
inc
cli
les
adc
pop
movsb
daa
ja
outsl
shl
mov
lcall
and
sub
aam
sub
pop
nop
adc
popf
mov
iret
push
cmpsb
cmpsl
hlt
sub
inc
push
lock
enter
clc
test
lret
push
xor
cld
ret
and
sbb
scas
xor
test
cmp
fst
sahf
sub
sub
inc
icebp
and
cmpsb
in
or
adc
imul
cmp
or
mov
and
mov
xchg
dec
pop
imul
or
sub
imul
inc
push
mov
ljmp
jmp
fimull
jmp
dec
adc
ficompl
add
das
fdivrs
push
jge
xchg
fcmovnbe
xor
lods
mov
stos
adc
xor
data16
pop
in
and
andl
dec
es
out
popa
xchg
loopne
loop
cmc
mov
into
ret
mov
sub
push
cmpsb
jb
je
clc
in
jmp
push
or
aad
in
das
nop
mov
je
pop
jb
lret
cltd
ljmp
push
pop
jmp
js
lret
xor
ret
cmpsb
xor
inc
jbe
adc
repnz
scas
rclb
in
add
loope
mov
hlt
mov
add
enter
cld
notl
push
xor
into
mov
in
mov
fsubrs
sbb
jns
sub
outsl
hlt
xchg
std
fwait
cld
jmp
repnz
fidivrl
cwtl
or
mov
jnp,pn
call
or
enter
dec
sbb
inc
mov
mov
push
xor
sbb
bound
mov
add
pop
mov
mov
popa
mov
lock
jne
jmp
ret
fsts
dec
dec
xchg
mov
jo
ja
shr
push
and
insl
in
repz
lret
scas
pop
lock
leave
data16
jmp
lahf
out
xchg
xlat
out
daa
or
jno
out
std
mov
or
psadbw
mov
inc
es
cli
rorb
mov
aad
andb
pop
sbb
shrl
xorl
mov
jbe
jge
data16
dec
xchg
or
shll
into
and
adc
mov
mov
mov
loopne
repz
movsb
scas
rolb
arpl
adc
xor
or
test
add
dec
and
adc
testl
pmulhuw
icebp
mov
arpl
jae
inc
cmp
lret
cmp
loopne
clc
lcall
in
rorb
pop
push
add
cltd
xchg
pop
stos
in
adc
inc
fdivp
xor
dec
or
push
dec
mov
loope
repz
mov
clc
xchg
or
movsl
jno
imull
test
dec
cmpsl
mov
sub
pop
imul
jle
adc
mov
adcb
movsb
fwait
jle
xchg
push
jne
movl
sbb
into
in
jb
cmpsb
inc
dec
popa
sbb
pop
adc
jbe
push
fsub
inc
lret
imul
mov
xchg
lods
xlat
addr16
adc
push
aas
adc
push
mov
mov
inc
mov
jbe
jp
cmp
clc
xchg
dec
mov
push
ss
mov
call
hlt
or
mov
dec
jmp
pop
dec
mov
loope
push
sub
or
adc
cmp
inc
pop
popa
in
aas
stos
mov
sub
arpl
mov
adc
lret
or
inc
cli
dec
inc
roll
movsb
outsb
inc
mov
and
push
sub
sahf
test
xor
fwait
pop
clc
mov
cmp
in
xor
cltd
scas
pop
leave
xchg
jg
inc
inc
outsb
jo
inc
imul
daa
call
inc
adc
cmp
test
jle
mov
sub
mov
pop
test
fxch
pop
sub
testb
cwtl
scas
xchg
test
in
notl
jg
call
push
fisubrs
mov
xchg
mov
xor
mov
mov
add
xorb
aaa
je
and
hlt
in
cs
or
ds
push
push
cli
in
flds
fmull
mov
inc
cli
mov
shll
mov
pop
mov
xchg
sub
pop
addl
out
adc
inc
sub
in
addr16
fwait
lock
int
addb
xlat
cli
cltd
les
xchg
mov
adc
ss
leave
rorl
sub
jb
hlt
mov
in
adc
dec
movsb
mov
js
jle
fdivs
lock
mov
push
je
jge
js
inc
imul
mov
push
mov
sbb
xor
fisubs
xchg
lcall
push
ljmp
cmp
add
jne
mov
testb
es
inc
mov
push
pop
movsl
xor
sub
adc
stc
ss
je
pop
in
jo
cmp
clc
dec
pop
leave
sbb
jbe
pop
daa
jne
and
fildl
cmp
mov
cli
or
sub
rorl
nop
shl
imul
hlt
mov
jno
dec
icebp
pop
ss
popf
fwait
cli
shlb
mov
test
out
jmp
inc
out
cmp
xlat
mov
cmpsl
xchg
movsb
ljmp
sahf
mov
das
pop
fimuls
cmc
paddusw
sbb
pop
jnp
stc
and
pop
iret
add
xor
push
push
cmpsb
sbb
jmp
xor
adc
jns
cltd
push
mov
jno
inc
cmp
rclb
enter
outsb
pop
cmp
das
pop
dec
roll
pop
stos
push
gs
mov
sub
mov
mov
cli
ja
xlat
push
cltd
mov
add
sar
inc
cltd
and
outsl
insb
data16
mov
sbb
push
shll
mov
or
mov
out
dec
add
fcomps
xchg
shll
cmp
das
inc
cmp
mov
sbb
lret
push
sbb
mov
bound
outsb
push
outsl
out
xor
fs
in
mov
fadds
scas
sarb
repz
mov
das
mov
imul
pop
aam
enter
in
add
in
push
or
test
adc
jge
testl
xor
pop
mov
shll
adc
jge,pn
scas
movsb
clc
inc
popf
mov
lret
jns
push
call
jne
clc
mov
int
loope
and
and
es
sbb
je
cltd
mov
icebp
ja
sar
out
jbe
test
imul
or
pushf
subl
jne
and
push
and
pop
out
ret
inc
cmp
sbb
adc
aas
jnp
xor
out
cmp
outsl
in
stc
jmp
cli
test
xchg
fld
or
mov
lcall
mov
mov
fs
jg
adc
cmp
jmp
adc
xchg
shlb
lret
or
jne
or
fisubrl
cmp
cmp
push
xor
lcall
add
rolb
fstl
ds
add
fists
push
mov
jl
xchg
shll
cmpsb
and
push
push
mov
mov
movl
push
ss
lret
mov
ljmp
incb
and
sbb
mov
xchg
cmpsb
jo
popa
mov
cmp
aaa
mov
push
orb
les
mov
subb
adc
hlt
shrl
scas
shll
push
sbb
adc
and
adc
xchg
adc
nop
sub
js
dec
sub
outsl
hlt
pop
pop
mov
pop
adc
push
int
mov
mov
mov
mov
arpl
mov
dec
scas
add
ljmp
lock
pop
fiaddl
mov
cltd
lret
out
sti
ffreep
fcoml
mov
mov
cmp
or
pop
and
dec
mov
xor
cmp
std
pusha
push
jp
in
lret
cli
jne
xor
jle
dec
mov
fnstsw
enter
lods
pusha
into
sub
cmpsl
jo
pop
jo
enter
out
mov
sbb
jbe
mov
test
adc
cli
xchg
mov
adc
lret
adc
test
and
xor
mov
push
ljmp
popa
push
mov
pop
ret
ret
adc
ret
pop
dec
outsw
imul
out
insb
pop
cs
sbb
movsl
mov
daa
push
lret
add
sbb
inc
pop
jno
loope
std
movsl
lret
xchg
mov
shl
or
mov
je
mov
scas
cmp
nop
aas
mov
adc
inc
and
ret
inc
pop
sbbb
pop
and
push
ret
add
cltd
pop
mov
fimull
add
aad
add
inc
das
je
das
rcll
mov
mov
aas
mov
sub
in
or
jg
pop
mov
add
inc
cvtdq2ps
fdivs
cmp
fistpll
cmp
jecxz
jb
pop
sub
arpl
xor
rolb
rolb
mov
dec
fucom
decb
xchg
cld
stos
enter
imul
divl
pop
ja
jl
jmp
sub
inc
mov
push
fbld
sub
sbb
fstl
cmp
xor
ucomiss
aad
jle
ljmp
push
lods
fsub
mov
popf
jbe
add
rcl
cmp
mov
lahf
fisttps
and
xchg
and
fincstp
iret
mov
pop
fwait
or
inc
jb
stc
push
push
ret
dec
fsubrp
int
and
fnstenv
adc
xor
ret
inc
pop
cmp
loope
jg
icebp
test
cltd
popa
movsb
pop
inc
and
out
mov
jmp
ss
les
mov
fyl2x
and
mov
hlt
xchg
cmc
stos
ss
mov
cmp
inc
out
xor
adc
daa
cmp
loop
sti
push
cwtl
dec
pop
stos
fucompp
cmp
mov
sub
jae
mov
pop
mov
movsb
xor
pop
out
xchg
sub
jno
test
cmp
adc
dec
std
cmp
pop
dec
cmpsl
or
sub
ficoml
aam
inc
push
jp
push
cmp
inc
inc
mov
mov
xor
sahf
stc
lahf
out
ljmp
sub
icebp
and
outsb
fcom
pop
mov
push
mov
fstpl
stos
out
mov
sbb
pusha
stc
sub
gs
mov
test
pop
jnp
pop
int
enter
pusha
lcall
lcall
fucomip
aaa
cmp
loop
fdivrp
imul
mov
inc
rcrl
imul
mov
jle
addr16
popa
push
xchg
add
fldt
movb
lds
sub
pop
sub
mov
loop
ja
shl
jbe
and
xchg
mov
or
sbb
and
cmp
fcomi
cmpsl
popf
push
scas
cld
and
cld
dec
mov
push
mov
jno
and
lods
sbb
outsb
shll
das
addr16
shl
idivb
addb
aas
xlat
pop
xor
add
arpl
pop
and
jle
sub
outsl
mov
push
push
and
sbb
jg
inc
icebp
notl
stos
call
sbb
jne
lahf
xlat
jns
dec
mov
pop
pop
push
addr16
mov
cmpsb
data16
and
jno
fwait
xchg
cmp
mov
and
int3
vpunpckhwd
dec
fucomip
mov
sahf
mov
xchg
ret
mov
in
pop
enter
sbb
imul
jl
fcoml
cmp
fwait
sub
pusha
ss
xchg
and
daa
mov
loop
cmp
xchg
in
sub
lcall
ret
lods
movsb
or
mov
stos
inc
mov
xchg
imul
cwtl
adc
dec
loopne
xor
int
dec
xchg
cmc
mov
int
mov
push
xor
dec
dec
int3
fmull
cmp
mov
and
mov
add
aas
jg
xchg
cmp
jle
lret
stc
cld
mov
mulb
xor
pop
mov
add
mov
pop
mov
jns
cmp
loop
das
pop
push
pop
add
out
loop
decl
in
xchg
lds
and
jne
mov
add
cmp
xchg
xchg
dec
dec
andl
add
jecxz
push
lret
pop
xor
jnp
inc
mov
add
movsb
pop
insl
mov
and
pusha
jne
loopne
loopne
mov
inc
cmp
lea
jb
mov
insb
pop
or
scas
rcll
sbb
xor
and
rolb
push
aaa
pop
pop
pushf
sahf
sub
imul
inc
orl
jg
jge
sbb
clc
les
aaa
sahf
inc
sbb
jecxz
jmp
scas
js
mov
jo
mov
xor
add
sahf
mov
out
inc
outsb
jg
cmp
mov
add
ficoms
cli
and
or
das
in
jp
pop
and
inc
inc
dec
push
xor
movsb
std
jbe
ret
pop
mov
jge
mov
xchg
stos
in
out
in
in
add
jo
int
decb
arpl
jecxz
cmp
xor
pop
mov
andb
jb
push
inc
rorl
jecxz
mov
enter
stos
pop
leave
xor
push
and
xchg
mov
fs
imul
mov
outsb
dec
sbb
mov
mov
sbb
inc
push
fwait
out
inc
mov
es
jg
inc
inc
sbb
sbb
mov
mov
xor
xor
int3
push
jns
out
or
arpl
testb
dec
dec
sbb
xchg
outsl
push
mov
add
leave
xchg
jae
xchg
ss
scas
repnz
xlat
and
push
pop
aad
pop
jg
xor
xor
mov
mov
xchg
cs
jmp
cmp
aam
fstps
pop
mov
std
add
mov
aas
stos
mov
mov
fldl
aaa
jne
jb
stos
or
fsubs
cmp
sub
repz
outsl
lahf
lods
xchg
pop
cmpsb
pop
add
or
adc
cmp
insb
push
mov
shll
je
xorl
ljmp
push
loope
dec
adc
in
push
rcll
divl
pop
mov
iret
xor
mov
rorb
sub
lods
dec
pushf
or
xchg
jbe
fdivrs
hlt
push
cld
je
shrb
cmp
push
dec
adc
add
fwait
sbb
xchg
mov
push
adc
loop
clc
jnp
add
shrb
hlt
stos
jmp
pop
pop
cmp
shl
call
ja
mov
xchg
add
aaa
loop
sub
add
leave
mov
inc
push
cmp
and
test
fsubrl
dec
mov
pop
inc
and
lret
and
and
sbb
push
mov
xchg
add
jbe
gs
dec
bound
ret
dec
sub
push
sub
lods
pop
jl
aad
mov
push
jp
jmp
push
call
out
aad
mov
or
sbb
xchg
fwait
jnp
stc
mov
lcall
mov
and
jno
jecxz
repnz
inc
cmp
hlt
in
out
mov
lea
data16
cmp
test
sahf
mov
in
js
lods
and
les
das
stos
push
lcall
mov
mov
loope
mov
jb
in
or
pop
xorl
mov
sub
adc
imul
adcl
mov
out
xlat
aad
mov
adc
sbb
insl
xchg
imul
adc
mov
mov
hlt
xlat
pop
or
xchg
outsb
mov
lock
dec
ja
sub
pop
in
rcrl
sub
popf
sbbb
inc
mov
cmp
xorl
fimuls
sub
loop
outsl
xor
and
mov
das
js
into
add
xchg
mov
jmp
or
dec
shlb
xor
or
sbb
icebp
sbbb
push
fsts
sbb
jae
js
out
dec
jmp
dec
int
sub
lds
ljmp
ds
ds
adc
xchg
jg
test
mov
mov
xor
add
push
dec
sub
add
call
pop
dec
jmp
fsubl
jno
out
out
addl
pushf
fstpl
pop
lock
jno
stos
out
fcoms
xchg
hlt
mov
fwait
dec
ret
scas
shrl
stos
cmp
cld
loopne
jg
xor
and
pop
movswl
sbb
mov
in
insl
or
inc
cwtl
loopne
dec
mov
stos
fcomps
sahf
pop
cmp
in
imul
loope
shrb
add
jmp
daa
in
das
lret
js
cmp
ljmp
cmp
mov
addl
mov
cmpb
insb
pop
lock
sbb
pop
lea
fcoml
add
shl
sbb
fadd
ss
lock
cmp
jae
insl
cmpsb
xor
addb
dec
xchg
in
or
jne
dec
inc
pop
das
inc
pop
cld
inc
xor
outsb
adc
clc
xchg
pop
or
test
pop
stc
or
mov
or
out
fsubl
scas
dec
in
push
mov
add
movsb
js
mov
mov
mov
push
sbb
lret
jl
jb
dec
and
sbb
enter
int3
mov
pop
lret
xlat
aad
push
mov
cmpl
add
push
sbb
adc
sub
mov
in
addr16
cmpsb
lret
sub
xor
adc
cmp
pop
push
mov
dec
and
adc
mov
jecxz
xor
cmp
das
fstl
shrb
mov
in
pop
insb
pop
xchg
sahf
loopne
sub
mov
jmp
lea
mov
inc
dec
pop
leave
adc
jmp
adc
add
popf
testl
and
out
mov
dec
or
clc
es
pop
sbb
cmp
push
aad
imul
pop
mov
enter
sbb
es
sbbb
and
mov
notb
xor
mov
cmp
jmp
pop
or
fdivrs
or
mov
mov
sbb
mov
xchg
stos
sub
cmpsb
mov
adcl
pop
and
rorb
or
lods
xor
cmp
add
dec
push
xor
mov
pushf
xchg
mov
or
adc
aas
push
cmp
inc
imulb
push
andb
test
ficoms
lods
jbe
push
out
xor
int
dec
and
mov
inc
sub
test
addr16
aad
test
push
mov
cmp
sarb
arpl
mov
sub
xchg
mov
cmp
cmovp
fs
add
jne
jo
xor
xor
in
sub
jbe
roll
jo
push
int
mov
enter
orl
addb
cmp
lock
std
xchg
out
icebp
lar
jecxz
and
sub
es
in
push
push
cli
ja
cmp
sbbb
and
add
mov
ljmp
ljmp
xor
xchg
lods
cwtl
and
sbb
xchg
fldcw
jo
sub
fwait
or
fdivs
lret
push
movsl
loope
ret
xchg
or
mov
sahf
pop
iret
push
push
aaa
jns
repnz
cmp
addr16
mov
jmp
into
inc
mov
cmp
jno
mov
jg
nop
out
xchg
mov
sbbl
sub
xchg
enter
adc
loop
add
and
jmp
dec
sub
push
mov
mov
sar
insb
sub
hlt
arpl
cmp
pop
mov
dec
mov
pop
lahf
in
insl
and
jp
sub
sbb
jnp
mov
aam
clc
loopne
out
sahf
push
in
call
shlb
into
cmp
add
in
mov
sub
into
add
dec
adc
or
out
scas
mov
inc
gs
stc
leave
or
pop
xchg
push
aad
mov
movsb
lock
dec
data16
adc
mov
or
inc
scas
add
xor
and
or
xor
popf
push
push
sub
in
shlb
xor
cmp
sub
mov
js
imul
fiadds
out
mov
cmp
cltd
int3
xlat
add
stos
imul
xor
fwait
pushf
mov
andl
xor
addr16
dec
mov
mov
or
pop
mov
cmpsl
movsl
psubq
mov
subb
push
xchg
dec
cmc
lcall
cmp
push
stos
cmpsb
fidivs
sahf
andl
mov
push
dec
stc
xchg
ja
sub
hlt
sbb
lea
dec
hlt
or
fistl
repz
in
out
lock
jmp
vmovss
xor
mov
andb
mov
pop
sub
pop
sub
adc
jmp
xor
iret
add
push
inc
es
xor
mov
push
into
ret
add
push
jg
mov
mov
mov
aaa
outsl
outsb
push
pop
mov
out
movsl
adc
jp
mov
mov
vmwrite
dec
in
pop
bound
rcrl
pop
adc
mov
inc
incl
mov
dec
mov
pusha
rclb
or
mov
mov
push
divps
adc
filds
pop
popf
adc
outsb
mov
mov
dec
and
dec
rorb
or
dec
enter
xchg
sbb
cs
cmp
arpl
push
mov
lcall
stos
loopne
mov
push
jg
and
lea
outsl
divl
lods
cltd
mov
imul
or
inc
ljmp
mov
jle
xchg
cs
insb
ljmp
clc
pop
icebp
dec
cmp
sti
jge
inc
movsl
rcrb
out
adc
popf
jno
push
lret
outsb
stc
or
fxch
or
scas
xchg
and
mov
dec
imul
loopne
pop
dec
sbb
sbb
cmp
mov
arpl
out
sbb
sbb
push
in
or
daa
fildl
mov
add
mov
negb
fildll
sub
lock
out
jg
pushl
aam
and
test
dec
rcrb
dec
adc
stc
out
inc
jnp
ja
cmpsb
int3
jecxz
mov
stc
in
leave
push
ljmp
mov
mov
test
push
push
sub
dec
cmp
and
or
cmp
push
mov
lods
or
sub
ficoml
pop
aam
xchg
xor
aam
ss
fs
mov
out
xchg
shlb
xchg
es
jge
insl
xchg
hlt
jg
les
in
cwtl
movsl
and
xchg
std
and
lcall
mov
mov
ss
int3
adcb
movsl
cwtl
loope
xlat
xor
mov
sbb
xor
insb
jbe
repz
mov
adc
jno
mov
ljmp
pop
gs
dec
in
sarb
sti
xchg
push
jb
mov
push
and
lea
adc
lret
std
pusha
movsb
add
dec
ljmp
lcall
mov
cs
push
push
sbb
push
fsubs
mulps
cmc
mov
push
mov
jno
xor
xchg
mov
shlb
jns
mov
int3
sbb
incl
mov
cmpl
inc
jne
fbstp
repnz
mov
cld
das
aas
and
rclb
pop
lods
xor
push
and
or
xchg
jne
cmp
lcall
adc
in
mov
mov
xchg
pop
dec
cld
add
fcoml
stos
mov
pop
cmc
add
push
xor
pop
inc
sti
sbb
lods
cmpsb
xchg
gs
jnp
pop
xorb
xor
mov
adc
pop
test
out
cmp
cmpsl
cli
xor
jo
aad
push
ljmp
data16
and
nop
in
push
or
scas
pop
repz
cmp
xchg
mov
push
dec
lahf
imul
divb
mov
or
or
sahf
mov
cltd
jp
cltd
sar
lret
repnz
ljmp
nop
pop
mov
sbb
push
xor
aam
dec
pop
sub
sub
imul
mov
fistps
cmp
imul
push
adcb
sub
lods
lcall
mov
push
push
outsb
fidivs
sbb
andl
jns,pt
inc
arpl
jae
cld
out
adc
popf
and
test
test
js
sub
arpl
lret
lret
push
cld
outsl
push
push
flds
cmpsb
or
adc
setg
imul
mov
mov
jb
hlt
ret
xlat
test
sub
mov
in
lret
rcll
or
sub
inc
sbb
adc
fcmovne
cmp
fistpl
cs
rolb
sbb
testb
mov
xchg
fstl
sub
outsb
stos
call
shll
mov
out
lods
mov
lahf
in
cmpsb
lea
dec
lcall
ljmp
loop
cmpsb
leave
sub
xlat
out
sub
sarl
mov
cwtl
jg
fwait
push
sbb
lret
cmpsb
mov
xchg
fcoms
inc
pop
seto
int
lods
mov
leave
push
mov
lcall
mov
mov
jns
js
add
pop
cs
out
xchg
out
push
mov
aad
cld
cwtl
std
and
inc
jns
xchg
pop
cmp
loope
fldl
insl
popa
test
mov
sarb
mov
aad
mov
insl
pop
inc
mov
mov
mov
lahf
push
push
shrb
movsb
aad
inc
xor
fimull
jecxz
sbb
lock
je
cmpb
sbb
in
and
or
sub
jno
out
xchg
adc
xchg
jmp
aas
add
push
aam
negb
cs
mov
xchg
mov
dec
push
sub
stos
test
arpl
dec
lods
jmp
data16
stos
lods
mov
in
lds
jne
mov
adc
mov
and
test
pop
or
mull
mov
sahf
out
fmulp
enter
in
inc
fwait
out
mov
sub
xchg
pop
mov
jl
shrb
movsb
test
push
pop
mov
mov
add
push
xchg
lock
cmp
fwait
repz
mov
cmc
mov
imul
aam
inc
cmp
sub
jae
inc
fcomps
popf
int3
or
cld
or
es
mov
sub
lds
les
cli
or
arpl
test
mov
push
lret
sbb
jnp
aas
loopne
repnz
shl
pop
lock
scas
stc
mov
sbb
imul
scas
sub
xor
testb
xchg
dec
test
pusha
imul
sahf
aas
cmp
aad
test
subl
fldcw
jae
mov
cmp
inc
arpl
outsl
outsl
mov
popf
jmp
das
out
loope
pop
mov
insl
mov
inc
test
stc
js
xchg
imul
pushl
adc
jns
adc
mov
add
int3
sahf
jecxz
insb
jnp
bndldx
xor
push
insl
repz
das
mov
sub
dec
inc
js
test
xchg
inc
xchg
sbb
adc
sbb
cmpsl
add
je
mov
lods
or
addb
add
jbe
shrb
aad
jbe
push
inc
xor
mov
mov
xor
mov
outsl
je
pop
xchg
add
xchg
sub
mov
lcall
mov
or
mov
jns
adc
stos
test
mov
push
push
jb
movl
shlb
inc
jle
dec
call
and
xor
xchg
cli
dec
std
mov
test
or
scas
repz
test
push
shlb
xor
add
dec
xchg
dec
push
push
lcall
add
fiadds
mov
mov
or
lock
outsl
sar
rcrb
ror
std
mov
repz
fcompl
jecxz
into
repz
mov
add
dec
mov
loop
or
adc
and
pop
inc
cmpsb
lahf
jg
stos
loopne
jle
push
test
shlb
push
push
cmp
pop
adc
icebp
sub
stos
xchg
sub
sbb
cmc
outsb
sbb
sbb
dec
sbb
in
rcrl
or
in
int
aad
mov
lods
dec
ds
pop
pop
mov
pop
in
outsl
lods
adcl
or
mov
aad
in
xchg
shll
stos
dec
inc
in
adc
sbb
pushl
cmc
fmull
andb
mov
int3
add
call
jmp
xchg
mov
sti
leave
push
xor
in
jmp
adc
inc
scas
mov
lret
pop
fsubrl
ds
jmp
pushf
dec
pop
in
dec
enter
fcoms
movb
dec
and
jb
cmp
fs
call
mov
inc
sub
dec
pushf
imul
sbb
adc
in
and
sub
add
je
pushf
repz
push
loope
mov
ljmp
pop
and
pop
sub
stos
aas
mov
and
mov
test
mov
gs
aam
rolb
imul
ficoml
int3
or
es
pop
shl
je
mov
add
std
pop
sbb
xchg
mov
mov
rcrb
outsl
mov
mov
add
call
aam
xchg
inc
dec
mov
jne
in
out
iret
shl
cmp
lret
inc
rcl
ret
dec
fsubrp
adc
adc
mov
repz
enter
les
dec
or
fsubrs
jo
orb
pusha
incl
std
pop
aas
fcomip
icebp
sbb
pop
inc
fldl
cmp
or
mov
andb
adc
and
dec
sbb
es
push
and
mov
xchg
cli
cmpb
std
mov
repz
adc
cs
jno
mov
sub
and
stos
push
add
lcall
pop
cmp
inc
test
hlt
pop
pop
ljmp
mov
dec
or
jns
xor
jge
mov
and
daa
and
fcomps
jae
cld
mov
jmp
bound
jl
pop
stos
fiadds
ficompl
repnz
mov
xchg
iret
aas
xchg
jg
int
ljmp
jb
push
mov
pop
or
push
push
push
imul
jne
sbb
cwtl
or
gs
je
push
repnz
push
push
and
xchg
add
sub
pop
add
add
cmp
jno
jo
test
imul
push
dec
jg
dec
sahf
jne
sbb
push
mov
mov
pusha
cmpsb
pop
mov
movsl
push
xlat
mov
jg
aaa
cld
sbb
arpl
sbb
push
enter
xor
push
xchg
lahf
mov
loope
xchg
pop
push
cmpb
sbb
imul
pop
es
ja
sbb
loopne
sbb
es
cli
mov
xchg
mov
pop
sti
das
adc
or
sti
push
je
inc
aam
mov
je
push
loope
sarb
loopne
jbe
int3
fucom
rorb
movsl
shrl
ljmp
adc
and
insl
les
inc
subb
adc
pop
cltd
push
call
ljmp
and
sub
jecxz
mov
add
xor
sahf
mov
add
inc
push
sbb
mov
fucomp
stos
jb
idiv
adc
lret
fs
adc
xchg
aam
iret
or
adc
aas
dec
adc
push
pop
mov
mov
lret
xchg
push
enter
xor
repz
cmp
orl
xor
xor
dec
out
mov
fisubrl
lods
lahf
scas
jb
cmc
mov
or
mov
rolb
xchg
sbb
cmp
shlb
int
sbb
lods
xor
mov
scas
jo
out
dec
push
pushf
fidivrs
movsb
in
shrb
daa
and
int3
popfw
in
or
pop
jne
and
cmc
and
out
aad
outsb
cli
sub
cs
ret
cmp
xchg
ds
int
mov
fwait
cmp
outsb
cmpsl
std
pop
push
xchg
mov
rol
sti
mov
or
lret
outsl
shrb
adc
or
push
je
outsl
cmp
cld
or
clc
mov
leave
cmpsl
mov
xchg
pushf
out
in
fwait
repz
dec
adc
movswl
sti
jmp
and
mov
outsb
sti
mov
xor
pop
or
lret
dec
mov
pop
fadds
ja
ss
pop
iret
pusha
inc
xchg
sub
int
jae
bnd
or
repnz
mov
jmp
in
test
cltd
call
inc
push
xor
out
enter
xchg
cld
cmp
cmpsb
jne
xlat
mov
repnz
mov
xchg
stc
pop
adc
jb
fs
jnp
loope
scas
daa
and
pop
inc
dec
test
ret
loopne
fucomp
sub
arpl
mov
rol
stos
nop
pop
mov
popa
or
inc
ficoml
dec
js
or
add
subb
rclb
mov
sbb
pop
addr16
lahf
mov
mov
ds
das
aam
jno
mov
xchg
mov
subl
into
pop
sub
cmpsb
mov
sub
addr16
dec
push
mov
fcmovnu
xor
push
cli
inc
popa
mov
pop
inc
aaa
imul
inc
dec
push
cmp
bswap
int3
pushf
cmp
xchg
fisubrs
jmp
dec
push
dec
dec
adc
push
cmp
push
add
pop
iret
or
or
xor
fisttps
cmpsb
mov
stos
mov
insl
adcb
mov
repz
lods
jae
pop
test
aas
in
dec
pop
sahf
mov
outsl
mov
mov
decl
stos
addl
add
ss
xor
out
and
add
or
inc
cmp
sub
rcrl
fwait
sbb
lock
lock
sub
rorb
adc
out
loopne
cmp
clc
sarl
insb
push
pop
fucom
inc
xor
jno
adc
pusha
jne
lea
adc
push
mov
cmp
add
or
imul
adc
xchg
out
pop
sbb
pusha
pushf
outsb
loope
or
xchg
rcll
mov
xchg
xchg
mov
sub
add
ss
icebp
mov
fcompl
xchg
arpl
std
stc
cmpsl
push
and
sub
and
sub
into
jbe
js
cmp
xor
xor
sub
or
jle
les
lret
cmpsb
or
add
inc
xor
add
inc
mov
enter
mov
imul
pop
mov
adc
mov
or
in
cmp
popa
add
out
add
sub
fiaddl
mov
jle
popa
cwtl
xchg
adc
jp
mov
scas
cs
clc
and
jecxz
adc
orb
xor
stos
push
and
dec
fimuls
clc
add
xor
es
ja
incl
ficoms
push
aas
mov
pop
jmp
outsb
je
mov
mov
jmp
xor
inc
mov
add
inc
cltd
cmp
jo
sub
mov
mov
pusha
into
cwtl
xchg
bound
call
xor
dec
sub
je
in
mov
pop
add
cmp
cmpsl
sar
out
mov
lock
test
xor
test
aaa
and
cli
jbe
sub
subb
ss
mov
shll
pop
push
test
sti
and
push
nop
data16
add
sbb
lods
xlat
mov
and
xchg
bound
in
sub
fsubs
ret
inc
test
pop
sub
push
mov
mov
ds
cmc
rcl
movsl
outsb
cmpl
adc
cli
xchg
push
xor
pop
ret
xchg
imul
mov
add
dec
dec
jl
mov
push
xchg
or
mov
cmp
je
pop
ljmp
mov
or
aam
jnp
fwait
inc
test
stc
subl
or
jae
std
dec
add
add
and
aas
divl
adc
xchg
mov
xchg
sbb
push
mov
or
pop
mov
rorl
mov
mov
mov
dec
subb
lret
lcall
dec
jp
xor
ljmp
scas
push
fwait
sub
push
push
xor
cltd
enter
in
sti
test
jg
jmp
bound
mov
or
jmp
in
jns
insl
or
mov
mov
aas
push
xchg
pop
push
lret
pop
lds
sahf
lahf
fnstsw
sub
cmpsb
stos
je
ds
stos
sarl
mov
ds
push
jns
cmpsl
mov
xorl
lret
cmp
xor
insb
cmp
filds
xor
ljmp
enter
rcl
xchg
pop
cmpsb
mov
mov
loop
pop
imul
dec
mov
fcompp
mov
xchg
lsl
jge
xor
jne
add
push
shlb
test
sub
in
rcr
jge
test
pminub
in
lods
mov
cmp
fs
inc
mov
in
xor
mov
mov
cmp
adc
shll
push
jecxz
xor
push
mov
jns
mov
or
and
xchg
jnp
sbb
mov
in
iret
lods
pop
push
sub
jp
js
or
lds
dec
out
les
notb
sahf
xchg
jbe
mov
mov
mov
mov
push
push
std
jle
mov
jne
push
daa
mov
xchg
cmp
and
pop
fidivl
mov
mov
jmp
clc
lret
lods
push
dec
test
nop
sbb
mov
das
mov
add
aam
pop
push
mov
rdpmc
daa
mov
pushf
push
mov
insb
ficoml
sub
inc
adc
xor
shll
les
jmp
xlat
sbb
scas
pop
loopne
lods
add
sbb
cltd
mov
lods
js
movl
fistpll
push
aam
cmpsl
or
cltd
dec
mov
dec
in
cmp
lcall
daa
sub
lahf
cmp
push
leave
adc
popa
adc
or
or
xchg
data16
jne
ljmp
cmpsb
inc
js
lea
leave
jg
in
mov
aas
jno
adcl
mov
mov
pop
pop
mov
jnp
jmp
call
inc
adc
or
dec
loop
adc
stc
cli
or
enter
scas
inc
jbe
mov
mov
mov
add
adc
pop
nop
jbe
adc
imul
int
inc
mov
cmpsb
or
jl
push
pop
cmpsb
adc
jae
shrb
jmp
sub
cmp
sti
push
mov
push
ljmp
fucomi
enter
sub
dec
repnz
mov
xor
fnstenv
fwait
test
xor
mov
loope
jb
sbb
hlt
push
shll
fsubrs
jno
xchg
jbe
jno
sbb
sbb
xlat
xchg
cmp
mov
cmp
mov
and
mov
add
mov
push
add
aaa
jmp
pushf
xor
jb
pop
inc
dec
or
xor
and
inc
loop
xor
scas
push
jo
fistps
mov
push
in
pop
stos
fwait
inc
mov
lea
add
push
ljmp
push
std
xor
cmp
pop
mov
fildl
test
sti
jp
mov
mov
pop
in
jo
push
stos
mov
out
pushf
call
cmp
in
mov
test
push
jg
fwait
imul
fcmovnbe
mov
mov
mov
out
adc
mov
mov
arpl
pop
sbb
add
push
sbb
mov
pusha
xor
test
push
jmp
andb
add
loope
or
cmpsl
mov
test
imul
mov
xchg
jo
das
in
or
xchg
scas
fwait
in
add
xlat
rclb
lods
enter
and
pop
xor
fst
sub
push
imul
pop
xchg
sub
jecxz
push
mov
push
aaa
subl
xor
das
insl
ds
ljmp
test
popf
cmp
mov
mov
lahf
sbb
dec
pop
test
xchg
mov
pop
insw
imul
enter
pusha
shll
mov
jl
jp
xchg
stc
insb
adc
pop
sbb
adc
jl
fwait
mov
orb
cld
loope
or
cmpsb
mov
sub
cmp
hlt
adc
outsb
dec
mov
cwtl
jbe
movl
jb
fcomip
xchg
xchg
inc
add
pop
stos
arpl
sti
lds
add
inc
inc
xchg
clc
stos
shrb
test
ret
push
popa
int
sbb
bound
imul
xor
scas
jmp
ret
mov
xor
dec
ss
jno
arpl
or
sub
xor
je
sti
in
pop
out
stc
sub
stc
xor
dec
push
cltd
xchg
dec
mov
xorb
movsl
fsubs
gs
repnz
cmp
add
in
cmp
xchg
outsb
xchg
sub
ret
arpl
shl
loopne
mov
sub
jp
and
shl
inc
xor
add
sbb
or
jnp
add
mov
jmp
add
add
push
push
movlps
nop
xchg
fiadds
mov
subb
mov
ret
adc
mov
aad
push
loopne
shrl
emms
ds
outsb
testb
lret
or
hlt
pop
sub
outsb
clc
adc
repnz
dec
pop
pop
mov
loope
addr16
jge
out
repz
adc
sub
lcall
xchg
out
rol
jb
nop
sub
jg
into
xor
mov
inc
imul
popa
in
scas
outsb
push
xor
and
or
mov
or
aam
int3
es
fwait
jno
out
sbb
lock
fcoml
mov
inc
outsb
xor
inc
cmpsb
in
sbb
call
or
or
dec
iret
scas
sbb
jbe
xchg
mov
nop
shr
push
das
jne
cwtl
sbbl
iret
icebp
pop
clc
nop
add
ffree
or
lock
pop
pop
mov
push
cmc
xchg
cmpsb
into
test
xchg
sbb
adc
aas
icebp
bound
mov
xor
pop
fstps
jl
inc
mov
pop
cwtl
mov
lahf
mov
cld
gs
call
rcll
and
sti
aaa
cmc
sub
xorb
cltd
inc
sbb
sti
das
insl
add
out
loop
sub
inc
jno
loop
outsb
xchg
popa
leave
and
aas
out
mov
or
cmp
jecxz
cmp
mov
fimuls
test
cli
cltd
ficoml
mov
sbb
jl
mov
add
lret
insl
loope
cs
pop
add
shrb
mov
inc
rorb
adc
and
pop
notb
mov
les
ja
push
daa
pusha
jge
cmp
test
sbbb
stc
out
mov
inc
test
pop
outsb
int3
aad
cmpb
popf
cmp
arpl
mov
inc
or
fwait
loope
mov
mov
aaa
sahf
mov
mov
xchg
lret
loop
jbe
mov
jmp
jp
push
outsl
sarb
rcrl
fsubp
sub
test
jl
lods
add
pop
out
jle
push
aas
test
stos
xor
scas
xor
jmp
and
dec
shlb
in
sbb
outsb
das
and
pop
and
pushf
xchg
movsb
mov
lcall
push
stos
inc
jne
mov
repnz
pop
jge
adc
lahf
aad
adc
int3
stos
fstpl
xor
repz
mov
orl
adc
mov
xchg
dec
shlb
movsb
sti
lcall
add
aas
mov
jg
push
push
sub
test
test
lcall
xchg
clc
sti
rcll
mov
cwtl
int
jge
jmp
ror
mov
jecxz
test
adc
jno
in
pop
test
fwait
mov
iret
mov
pop
int3
xchg
cltd
cmpsb
inc
xlat
movsl
inc
xor
xchg
mov
call
gs
mov
push
repnz
arpl
adc
pop
pop
cs
jmp
fs
test
and
insl
dec
scas
nop
dec
mov
pop
dec
lcall
cltd
pushf
push
rol
push
xor
shrb
xor
aad
cmpsb
pop
mov
loop
sarb
cltd
xchg
icebp
push
and
xor
lods
mov
shrb
fidivrl
dec
ret
mull
shlb
fisubs
int
sub
mov
inc
pop
cmpsb
sbb
push
fistpl
popf
xchg
xor
dec
ret
dec
push
dec
aas
pop
inc
jmp
xchg
daa
bound
cs
pop
pop
out
mov
cmp
pop
dec
jae
xor
movsl
sbb
int
jmp
imul
mov
aad
xchg
pop
notb
in
push
pop
pop
adcl
ljmp
fdivrl
or
in
adc
mov
sbb
insl
adc
lock
or
sbb
pushf
or
ljmpw
gs
out
push
mov
ja
int3
ret
mov
jmp
add
loopne
mov
int
ret
ljmp
addr16
jns
lods
insl
push
inc
add
fsts
mov
in
lock
mov
inc
add
add
mov
add
loop
sub
inc
mov
je
stos
sbb
pop
shl
pop
mov
xor
inc
or
fcompl
popa
das
inc
notb
pop
loope
out
and
lcall
pushf
inc
xlat
loop
add
test
dec
mov
pop
and
cmp
dec
jl
cmp
roll
push
mov
mov
jo
push
xor
pop
sbb
inc
ds
xchg
sub
cli
int3
insb
mov
adc
push
xchg
pop
push
mov
mov
cs
and
out
or
push
adc
xchg
fsubrs
aam
inc
cmp
or
adc
icebp
outsb
jb
arpl
imul
sbbl
stos
sub
push
xor
fidivs
pop
stos
inc
and
movsb
stos
out
es
hlt
repnz
pop
mov
jns
jbe
cmp
test
pop
out
ret
xor
xchg
data16
mov
cwtl
fs
mov
lea
sub
sbb
push
adc
inc
orl
mov
dec
pop
iret
pop
jnp
xor
push
mov
outsl
or
out
jo
xchg
xor
pop
jno
dec
push
mov
dec
mov
aad
out
into
dec
or
jb
sbb
dec
repz
jne
cs
and
push
mov
xchg
xor
pop
cmp
stc
cmp
sbb
sbb
stos
cltd
in
sti
cld
es
jl
in
iret
sbb
in
shrl
mov
inc
mov
ja
js
je
mov
ret
loopne
mov
ret
cs
loope
xor
stos
or
cmpsb
lcall
cwtl
mov
mov
aaa
lds
inc
jmp
xor
fsubrl
pop
sbb
mov
add
sbb
push
fdivl
xor
in
push
add
leave
das
es
adc
inc
add
fcoms
xchg
push
xor
fildl
add
push
xorb
out
testb
xchg
push
rolb
inc
popa
xchg
bnd
pop
xor
mov
push
cmpsb
icebp
inc
andb
cmp
and
test
push
ret
push
je
cltd
xchg
int
popa
xor
out
push
outsb
pop
add
aad
outsb
cmp
dec
ja
rol
push
jo
cmp
mov
sub
mov
push
sbb
cmpsl
sbb
fs
mov
loop
push
jbe
sbb
sahf
fisubs
xchg
jecxz
roll
and
loope
sbb
cmpsl
mov
inc
in
scas
cwtl
push
stos
scas
and
rol
leave
jns
outsb
out
pop
add
mov
mov
das
mov
fcmovnb
or
unpckhps
mov
push
fwait
push
mov
sbb
in
xchg
cmp
int
fisttpl
pushl
xchg
je
subb
cmpsl
sbb
pushf
scas
inc
push
pop
rcrb
jmp
pushf
jl
clc
push
cmp
or
sti
pop
cmpsb
lods
sbb
and
push
dec
mov
inc
add
js
bound
xchg
adc
lea
cwtl
jmp
pop
outsb
and
pop
push
add
xor
xchg
mov
add
scas
clc
out
push
inc
adc
sbb
xorl
notl
lret
cmp
sbb
mov
push
push
in
mov
mov
in
dec
mov
cwtl
pop
fstl
movsl
adc
hlt
stc
push
ret
aad
lcall
or
hlt
in
jl
and
inc
xchg
pop
xor
add
mov
inc
setp
cmp
stos
iret
cmp
inc
dec
pop
jg
out
mov
sar
stos
xchg
movl
push
gs
push
sub
dec
enter
ss
mov
mov
mull
mov
mov
jo
add
push
arpl
dec
cmp
push
ror
xchg
ja
call
xchg
cmpsl
mov
lock
es
out
in
outsl
jmp
sub
aas
fiadds
xor
push
outsl
jne
dec
popa
shr
dec
iret
pusha
push
mov
in
and
ds
fimull
push
jo
sbb
ljmp
cmpsl
xchg
mov
add
or
push
repz
mov
sahf
and
mov
jmp
sub
das
sti
loope
mov
jge
pop
loop
push
aad
enter
je
cmpsl
dec
mov
dec
es
je
cmpsl
pop
inc
das
mov
repz
cmc
adcb
imul
dec
xor
cmp
in
aaa
iret
cld
inc
cmp
xchg
js
rolb
dec
mov
mov
add
ret
mov
neg
add
inc
bound
ret
and
push
ja
fisttpl
and
jbe
outsl
xor
xlat
mov
push
test
jne
mov
and
jns
cmp
rorl
mov
mov
pusha
lahf
bound
pop
test
xchg
adc
cmp
ret
jne
xor
pusha
add
add
xchg
jecxz
icebp
jmp
stos
in
shr
sub
and
inc
out
aam
xor
cltd
lock
incl
in
icebp
das
ss
movsl
test
movsl
pop
insb
mov
fiadds
and
mov
lods
adc
aad
sub
adc
cs
fisttpll
loopne
in
cmp
lret
sub
jp
jns
ja
je
or
je
imul
sahf
test
fldl
jo
fcoms
sahf
push
sbb
sub
cmp
mov
loopne
jp
lcall
xchg
pop
jl
jle
add
das
or
mov
pushf
jb
test
cmp
shl
out
pop
add
sbb
sbb
push
mov
daa
xor
cli
loop
dec
loopne
sbb
and
int3
test
data16
and
sbb
fildll
dec
daa
or
cmp
pop
or
fldl
xchg
or
xor
stos
add
icebp
repnz
push
addr16
movsl
sbb
lods
out
mov
adc
push
or
dec
loop
insb
mov
sub
int3
adc
jmp
jecxz
pop
jmp
sarb
test
mov
into
push
add
inc
sub
pop
mov
and
adc
sub
jbe
shrb
je
int3
std
pop
push
sub
push
dec
aad
mov
adc
xchg
shlb
mov
add
idivb
inc
ss
jmp
adc
ja
cmc
add
mov
lret
jl
pusha
arpl
clc
adcl
ja
and
cmp
sbb
fistpl
inc
mov
cwtl
and
fistps
add
add
dec
pop
pop
add
cmpsl
fwait
insl
and
fstps
mov
push
mov
outsb
xor
mov
mulb
aaa
insl
dec
outsb
add
pop
push
jnp
lcall
repnz
jmp
lea
lret
lds
fdivrp
mov
leave
adcl
xchg
inc
hlt
jecxz
sub
aaa
push
aaa
lods
xchg
ljmp
lock
xor
xor
mov
enter
fmull
fs
loop
movsb
cmpsb
mov
and
xchg
inc
pop
shll
ret
xor
int
bound
adc
fs
mov
ret
pop
pop
mov
pop
sbb
nop
cmp
je
jecxz
jg
and
sbb
mov
add
push
imul
adc
in
pop
icebp
or
push
fcmovnu
or
and
rcll
mov
movsb
pop
or
xor
rcll
das
jb
scas
and
int
popf
loop
pop
outsb
insl
in
cmp
xor
push
nop
stc
push
adcl
pusha
jb
rclb
out
lcall
mov
cltd
xchg
sub
mov
jb
pop
cmp
imul
pushl
popf
ljmp
push
sahf
fmuls
scas
in
and
icebp
in
jb
sub
insl
push
fldl
loop
insb
les
jmp
adc
out
xchg
shrl
imul
cwtl
mov
inc
sbb
or
orl
and
sbb
lcall
dec
sbb
addb
ret
jmp
negb
movsl
out
mov
jge
arpl
movsb
mov
stos
inc
enter
out
fincstp
cmp
in
adc
ret
mov
add
fstps
cmp
adc
and
dec
inc
loop
ret
pusha
loope
xor
dec
mov
sbb
repz
repz
mov
lods
push
icebp
mov
das
pop
xchg
insl
sub
sbb
rep
add
or
xchg
xor
nop
imul
popl
pushf
and
ja
jmp
fiadds
fisttpll
pop
ds
fldcw
or
sbb
xchg
sti
jb
lcall
xchg
xchg
bnd
nop
fs
mov
jne
test
call
neg
int
aas
lods
lret
ljmp
xor
sbb
push
push
jb
in
inc
out
sbb
ja
lock
xchg
cmc
jbe
ficomps
pushf
xlat
push
sub
and
je
xor
xchg
std
fstps
or
mov
lods
xchg
fsubrl
loopnew
jecxz
repnz
jno
or
cmp
outsl
or
fcomi
jns
mov
push
add
push
push
shlb
xor
ds
jle
xchg
mov
xorb
jo
je
add
orl
sub
cmpsl
lock
mov
mov
xlat
cmpsb
mov
push
pop
out
into
mov
and
out
test
mov
jo
xor
data16
sarl
pop
mov
or
dec
and
test
add
mov
repnz
dec
sahf
aaa
adc
xchg
aas
loopne
cmp
push
xor
mov
jns
shl
cs
cmpb
push
push
sti
mov
jp
sahf
jmp
mov
push
call
jnp
popf
adc
dec
adc
mov
push
xor
pusha
add
lods
sub
add
imul
stc
cmp
mov
mov
icebp
mov
push
xchg
or
cmp
mov
pop
dec
lret
pop
sti
and
mov
or
idivl
test
mov
dec
and
ja
shrl
mov
out
rorb
out
ss
fdivs
das
adc
adcb
aaa
sub
jl
sub
mov
push
push
xchg
jl
es
dec
push
xor
fldenv
xor
aam
pusha
mov
sbb
movl
jmp
daa
inc
out
sbb
test
sub
test
xorl
insl
xchg
adc
push
xchg
pop
inc
pop
or
addr16
jl
sbb
push
imul
test
fmull
adc
dec
imull
stc
in
jecxz
adc
jecxz
ljmp
lret
or
insb
lock
iret
push
idiv
loop
dec
popa
lret
push
sbb
stos
jb
adc
sub
popf
aam
outsl
jmp
xchg
cmpsl
cltd
inc
mov
dec
adc
scas
mov
faddl
mov
dec
jbe
adc
dec
jbe
xchg
dec
aaa
cmp
lods
sbb
fmuls
cmp
rorb
sub
gs
push
push
mov
loopne
ds
ret
or
adc
movsl
push
mov
lcall
xor
push
adc
xlat
mov
xchg
xchg
mov
mov
jnp
fisttpll
movsb
loope
cwtl
mov
es
imul
push
xchg
hlt
lds
je
cwtl
es
sub
xchg
xchg
inc
mov
push
hlt
lahf
mov
or
insl
jmp
jecxz
mov
pop
dec
push
loop
sub
dec
aas
xchg
scas
sbb
inc
cmpsb
xchg
or
xor
int
inc
mov
ss
xchg
sarb
into
cmp
dec
daa
inc
pop
xchg
xor
push
hlt
sbb
and
mov
outsb
mov
gs
pop
inc
pop
lods
fcmovne
sub
data16
dec
stos
inc
cmp
jmp
mov
cmpsl
mov
jo
inc
out
mov
movsb
adc
arpl
push
xlat
lahf
mov
aad
xchg
imul
dec
mov
movsb
push
mov
xchg
mov
loope
scas
jns
int3
xor
repnz
ds
ss
adc
mov
xor
fldt
sbb
insb
mov
mov
inc
push
inc
imul
nop
sub
dec
mull
pop
in
cmc
or
pop
push
sbb
cmp
movsb
mov
cld
dec
mov
fs
js
sti
sbb
jmp
shll
cmp
jae
xchg
fnstcw
rcrl
or
inc
mov
and
dec
mov
stc
add
enter
xchg
das
cmp
inc
mov
xchg
sti
pusha
add
icebp
pop
lcall
xchg
mov
sbb
in
pinsrw
mov
dec
into
xchg
ds
inc
push
lods
loop
push
cwtl
fisttps
std
jp
cmp
jmp
popa
xchg
lcall
in
pop
in
mov
cmp
repnz
cwtl
adc
shl
iret
je
repz
and
jmp
test
inc
dec
xchg
push
inc
pop
mov
std
cmp
pop
dec
fs
inc
into
mov
ds
xchg
in
popa
xor
mov
mov
jg
les
test
jge
test
insb
aas
int3
fisttpl
lea
pop
sub
xchg
mov
pop
ja
adc
ret
fdivrl
xor
ljmp
out
sub
xor
enter
movsb
cmp
cmp
fisttps
daa
pop
xchg
orb
mov
scas
or
xchg
mov
ss
xor
enter
mov
fcompl
cmp
fisttps
cmpsl
lret
daa
cmpsb
cmpsb
int
mov
lret
rcrl
outsl
add
outsl
aaa
dec
mov
xchg
mov
data16
add
aaa
sbb
cmp
xchg
xchg
popa
inc
inc
xchg
cmpsb
push
push
in
dec
mov
scas
jbe
cmp
cmp
mov
popa
jns
mov
cmc
dec
out
mov
and
sbb
fwait
aam
popa
ficoms
test
cltd
sbb
lret
mov
rcrb
push
dec
lret
cvtps2pd
pop
fstpt
test
adc
sub
cmp
out
cmp
adc
test
inc
imul
lret
stos
cs
jle
xchg
sub
lods
xchg
test
loopne
jmp
fsubs
cmovbe
add
stos
push
mov
imul
sbb
les
and
lret
movb
mov
test
or
pop
pusha
sbb
xchg
int
jns
mov
add
fst
in
gs
mov
xchg
xchg
mov
add
int
adc
xchg
jmp
sbb
cmp
data16
lcall
jae
sub
std
push
fwait
sbb
mov
add
repz
lahf
sub
or
fstpl
mov
adc
lods
push
popf
ds
ficoms
pop
daa
fcmovb
mov
mov
add
xchg
mov
divb
in
mov
pop
repz
inc
and
push
fwait
cmp
pop
add
xchg
hlt
pop
mov
mov
popf
xor
mov
imul
mov
movsl
adc
push
xchg
pop
and
stos
cli
in
pushf
pop
and
mov
mov
divl
and
movsb
out
mov
mov
aam
sbbl
sub
fistl
in
xchg
mov
rorb
pop
mov
popf
call
xor
mov
test
adc
std
jo
xchg
inc
mov
lds
dec
and
test
or
push
xor
scas
dec
popa
dec
je
xor
iret
mov
loope
es
clc
gs
fwait
jbe
in
cwtl
sbbb
roll
dec
cli
push
gs
push
mov
adc
loope
mov
dec
push
outsl
rcrl
arpl
and
mov
clc
stos
sbb
xorl
enter
aas
jg
in
xor
std
push
test
shlb
imul
aaa
adc
mov
sub
pop
ret
mov
std
insl
std
mov
jns
repnz
inc
ljmp
inc
dec
cltd
and
or
inc
scas
test
es
cmpsb
cmp
mov
in
jns
imul
loop
out
sub
push
mov
in
in
sub
pop
adc
out
xchg
fistps
push
insl
daa
rol
sbb
stos
lods
mov
cmp
push
fistps
push
cs
jns
xorb
inc
mov
add
pop
out
or
mov
xchg
push
xchg
jae
sbb
outsl
cmpsl
or
movsb
mov
ret
shll
ret
aas
xor
rorb
sbb
pop
pop
sub
add
cld
mov
aad
mov
mov
jbe
into
cmp
cmp
mov
pop
pusha
aas
adc
sti
sti
sub
pop
and
and
test
xchg
adc
push
mov
push
arpl
into
shl
rolb
mov
lods
sbb
adc
mov
sub
test
jnp
leave
mov
arpl
fwait
pop
movb
sbb
int3
fdivrs
mov
jns
dec
mov
popf
adc
lret
pop
push
jl
lret
and
push
xchg
lcall
imul
sahf
aas
xor
mov
out
into
jb
xchg
push
and
dec
mov
out
jg
and
push
mov
cmp
rcll
ds
fldl
add
or
test
insb
push
fdivrl
mov
mov
mov
movsb
rcrl
mov
xchg
push
cmp
inc
imul
icebp
cli
adc
jo,pn
hlt
xlat
in
stos
rolb
sahf
leave
lcall
fldt
lahf
data16
cmc
jl
imul
fisubs
inc
xor
popf
idivl
notl
sub
xchg
mov
in
or
ret
je
pusha
cs
aam
imul
mov
jecxz
loope
jno
mov
and
scas
add
pop
xchg
xor
xor
ret
jno
inc
clc
mov
sbb
fnstcw
pop
xchg
repz
sub
push
in
mov
movsb
and
sbb
lds
adc
inc
or
mov
sbb
pop
mov
sub
in
andb
inc
idivb
sbb
inc
mov
jge
outsl
enter
test
pop
leave
scas
fistl
lods
push
jb
aas
popa
jno
xor
imul
popa
dec
sbb
dec
mov
popa
out
xchg
jne
push
pop
stc
mov
sub
jl
mov
fisubs
or
jmp
dec
xchg
test
in
sub
in
imul
adc
iret
lods
jp
xchg
mov
inc
push
mov
sarb
adc
adc
inc
subl
in
call
mov
ljmp
bound
jo
stc
in
mov
mov
mov
icebp
pop
shlb
into
add
and
pop
dec
pop
mov
jmp
jmp
std
push
inc
out
lcall
mov
popa
sbb
pop
daa
xchg
bound
addr16
inc
mov
mov
in
addl
sub
xor
jae
push
hlt
inc
repnz
mov
out
inc
hlt
dec
add
xchg
jo
inc
in
xor
cmp
sub
dec
aas
in
dec
inc
out
pop
add
xchg
jno
add
sbb
mov
xchg
sarl
or
cmp
add
mov
pop
nop
jbe
arpl
scas
std
inc
and
xchg
inc
and
mov
push
add
imul
add
cmp
or
dec
and
adc
pop
pop
popf
pushf
dec
movsb
jns
lea
out
fcoms
jmp
sbb
push
sub
jo
scas
popf
inc
or
push
stos
lock
xchg
out
int3
push
inc
rclb
pop
adc
imul
cmp
ja
add
je
outsl
pop
shll
aam
mov
outsb
movsl
fbld
fistl
sub
sbb
pop
and
mov
pop
mov
ljmp
mov
lds
pop
xchg
push
sarl
je
sbb
sub
ret
jb,pt
sbb
aam
mov
imul
jno
stc
test
out
dec
repnz
pop
xchg
popa
fisubl
aaa
dec
imul
push
mov
test
mov
mov
xchg
orl
jge
repz
mov
pop
ss
cmpsb
sub
and
mov
pop
clc
sub
les
jne
sbb
mov
jle
pop
jo
lds
and
addb
xchg
stc
or
rolb
mov
scas
jl
mov
shrb
sbb
add
push
xor
sbb
jbe
xchg
sbb
cmpsb
push
lods
shl
lods
imul
testl
cmp
inc
leave
push
dec
pushf
in
inc
das
jmp
in
inc
xchg
add
sbb
mov
xchg
sub
jne
std
push
jae
imul
mov
adc
addr16
jnp
stc
sbb
xor
imul
dec
jl
adc
rolb
sbb
push
into
scas
lret
cs
les
xor
and
pusha
pop
pop
ljmp
or
xor
mov
xchg
outsl
dec
test
repz
pop
push
int
enter
out
mov
subps
mov
call
roll
loope
test
stc
sbb
je
adc
push
push
fidivrs
iret
inc
sbb
jbe
test
xor
cwtl
mov
lret
push
xor
das
push
scas
rorb
js
jg
aas
inc
jae
outsb
mov
jg,pn
pop
sub
lret
int
cld
jnp
jecxz
lret
mov
sub
fsubrl
cmp
mov
movsb
imul
jmp
inc
mov
outsl
mov
testb
bswap
adc
notl
call
loopne
jg
add
dec
push
in
pop
or
inc
add
dec
mov
mov
jns
and
pushf
inc
pop
adc
and
push
and
cltd
fbstp
std
mov
fwait
in
ret
push
loope
dec
rcrb
enter
sub
sti
xor
lcall
sub
pop
ja
fidivl
popa
xchg
push
push
jle
clc
test
arpl
pop
enter
test
sahf
dec
cmc
lds
adc
push
mov
gs
gs
cli
adc
imul
outsb
test
push
cld
orl
push
enter
pop
xor
mov
mov
pop
roll
stos
scas
xorb
mov
test
xor
les
aaa
ret
sub
mov
in
daa
mov
jno
mov
mov
cmc
stc
adc
sti
xor
pop
cmc
pop
adc
outsl
push
jge
xchg
pop
out
pop
daa
movsb
pop
sbb
lret
cs
sbb
test
out
jmp
xchg
pop
jne
jl,pn
repnz
pop
sarb
and
cmp
pusha
add
hlt
mov
mov
outsl
mov
repnz
jmp
xlat
test
pop
ss
mov
mov
sbb
sub
rclb
mov
je
or
ds
mov
dec
imul
and
fwait
adc
out
testl
sub
push
sbb
mov
mov
repnz
adc
jmp
clc
push
adc
xchg
sbb
addr16
ret
filds
xchg
clc
out
xor
dec
lret
sbb
insb
cmp
loopne
and
arpl
and
push
daa
mov
push
inc
addr16
pcmpgtb
xchg
sub
xchg
ror
fs
pop
adc
in
xchg
movsl
pop
std
cmpsl
inc
or
mov
in
push
push
int3
out
in
popf
icebp
mov
jmp
loopne
lods
in
mov
adc
loopne
cmp
cmpsb
mov
mov
pop
divl
lret
pop
dec
imulb
subl
inc
xchg
imul
test
cmp
push
lods
bound
lret
xorb
stos
and
push
mov
mov
cs
leave
cmpsb
jge
icebp
andb
sub
aam
and
push
xchg
icebp
ja
push
adc
clc
mov
ja
arpl
movsb
and
mov
pop
test
xor
rcl
push
testl
dec
je
dec
inc
add
dec
mov
mov
call
test
shl
hlt
fs
aaa
pop
loope
repnz
sti
movsl
scas
into
gs
mov
inc
and
cltd
popf
mov
fwait
cmp
jge
mov
push
mov
and
fmull
aas
jnp
cld
data16
lret
push
push
out
jns
adc
and
mov
jmp
fiaddl
push
mov
sahf
ret
in
cmp
jecxz
dec
pop
dec
movsb
push
or
lods
cwtl
stos
imul
pop
inc
add
jecxz
ficompl
push
pop
cltd
dec
sbb
mov
and
mov
sahf
or
imul
push
push
sahf
add
paddusb
jne
xchg
mov
mov
mov
pop
into
push
jnp
inc
and
sbb
mov
leave
sbb
imul
dec
call
in
test
inc
iret
js
adc
push
or
lcall
addl
jle
das
dec
test
iret
stc
xchg
inc
or
push
cmp
scas
mov
int
mov
push
ja
popa
xchg
dec
mov
add
outsl
cwtl
rcr
adc
mov
pushf
mov
cltd
test
insb
mov
dec
add
xchg
cli
pop
sbb
outsl
cmp
leave
and
mov
adc
push
pushf
xchg
sbb
lock
loope
data16
add
rclb
fistps
pop
jno
jmp
pop
mov
dec
mov
and
hlt
fsubrp
cmp
aas
inc
icebp
mov
fistpl
xchg
cmovnp
out
ljmp
mov
test
xchg
mov
cmp
gs
sbb
xchg
adc
insb
icebp
xchg
sbb
mov
test
mov
js
dec
ja
mov
clc
inc
ficompl
add
inc
ficomps
aam
sarb
jne
or
popf
je
mov
loope
in
imulb
xchg
xchg
add
cmp
pop
mov
add
jmp
jno
loope
aam
cltd
stos
or
push
mov
xchg
mov
cmp
or
int3
pop
enter
xchg
mov
fnstsw
jle
adc
test
scas
dec
cmc
dec
in
and
ja
hlt
mov
cmp
in
jle
das
jb
pop
mov
xchg
les
mov
or
lret
movsl
cli
lahf
iret
mov
les
out
sub
dec
loop
sbb
mov
stos
cmp
leave
jne
data16
out
sbb
and
fisubl
mov
adcl
jp
pop
out
add
mov
xor
inc
pop
push
xor
adc
add
mov
fst
push
arpl
subb
pop
inc
dec
pop
je
outsl
cmp
stc
jmp
push
leave
sub
xlat
andl
adc
jb
aas
icebp
loopne
add
jmp
and
aaa
stc
in
cli
push
mov
int
fmull
ljmp
ja
add
sub
call
cmp
mov
dec
test
mov
cmpsl
int3
test
addl
and
gs
or
xchg
mov
and
add
dec
cmc
lds
mov
pushf
clc
mov
or
pop
add
xor
dec
sqrtps
xchg
dec
addr16
push
cmp
pavgw
mov
daa
leave
insl
and
xlat
insb
add
jbe
or
pop
inc
scas
ja
push
fnstsw
ja
mov
in
shrl
xchg
jmp
iret
xchg
bound
mov
es
push
jo
ds
mov
cltd
jmp
mov
stc
sbb
imul
fstpl
mov
add
xchg
push
bound
lret
imulb
arpl
push
fiadds
xor
push
mov
dec
stos
jg
push
ss
popa
out
gs
out
sub
icebp
ds
lret
std
pushf
lret
mov
fstps
int
sbb
pop
dec
xchg
arpl
dec
mov
pop
jl
nop
imul
mov
mov
xor
xor
and
or
cmp
mov
daa
pushf
stc
imul
shlb
push
push
repz
sub
fs
sbb
adc
and
push
or
sub
loopne
dec
outsb
jle
cs
jl
gs
hlt
mov
das
adc
sub
stos
inc
xchg
mov
cmp
jg,pt
aad
xchg
dec
push
das
cmp
jne
or
arpl
inc
mov
mov
mov
xchg
sti
stc
xchg
xor
and
mov
fwait
test
mov
loop
cmp
fs
mov
call
dec
push
fistps
mov
push
jge
fs
xlat
add
lahf
stos
cld
jae
das
or
push
sahf
movsl
xchg
add
adc
insb
roll
or
push
adc
popa
mov
push
cwtl
ljmp
sarl
xorps
test
jnp
adc
xor
daa
jle
aad
fnstsw
aam
jnp
xlat
xlat
ficompl
movsb
cmp
in
in
rolb
in
pushf
push
mov
jae
scas
cs
pop
les
aas
jne
xchg
mull
sub
sbb
fs
fcoms
and
andb
inc
xor
add
fs
sub
mov
dec
sbbb
popa
insb
inc
test
pusha
idivb
or
cli
xlat
sub
aam
xchg
divl
jg
and
mov
ss
lea
inc
sbb
xchg
and
out
scas
push
stos
mov
mov
jp
cmc
pop
test
out
push
and
xchg
or
mov
adc
push
jne
jnp
push
or
inc
and
mov
or
cmp
es
pusha
cwtl
shrb
mov
icebp
adc
and
mov
mov
lea
sbb
cli
or
outsb
call
jo
inc
sbb
cltd
loopne
insl
adc
dec
fbld
dec
stos
xchg
pop
lods
imul
add
das
mov
mov
inc
mov
test
shll
add
test
jbe
mov
jge
and
loope
into
pop
stc
fiadds
int
push
popf
jle
jmp
out
out
xor
mov
ret
dec
sub
push
daa
add
pop
add
js
add
adc
aam
dec
imul
and
add
insb
test
stos
inc
int
jns
lret
enter
lret
mov
push
mov
outsb
jno
les
inc
xor
pop
cltd
nop
movups
dec
sub
addr16
xchg
aaa
cli
arpl
xor
shlb
jns
mov
loope
out
data16
fisttps
lcall
lea
inc
add
test
sti
xchg
jne
cltd
cmp
xchg
ja
js
fcompp
lods
sbb
lea
aas
sbb
dec
fld
lcall
cltd
push
into
or
mov
ror
decb
lods
fisttpl
jno
push
dec
pop
xor
pop
cwtl
xlat
rorb
pop
xchg
repz
cmp
pop
sbb
jbe
jg
cltd
rcl
inc
cmp
sbb
adc
out
cwtl
mov
dec
dec
mov
ret
add
mov
outsl
pop
fdivs
popl
push
icebp
iret
fisttps
aad
pop
add
leave
xor
push
add
dec
cmc
mov
insl
movq
cmp
xchg
sub
mov
mov
adc
xchg
lds
push
or
loopne
sbb
jmp
lock
out
or
pop
aam
stc
cs
dec
lock
cltd
inc
es
xor
adc
rcrl
popa
fisubl
fimuls
mov
push
enter
or
jmp
sub
sbbl
jo
sbb
iret
xor
jnp
fmull
scas
lods
or
nop
in
imul
adcb
push
xor
or
adc
push
jne
pusha
jnp
xor
pop
xor
mov
xchg
dec
mov
push
mov
push
ljmp
shlb
push
and
push
xchg
sarl
mov
xchg
and
and
or
movsl
inc
lea
stos
mov
or
xlat
mov
add
sbb
enter
pusha
xchg
sub
or
testb
xor
je
xchg
in
or
sbb
out
mov
cwtl
mov
aad
pop
mov
cli
or
inc
aam
bound
mov
xor
mov
pop
pop
pusha
movsl
arpl
mov
scas
pop
testl
in
iret
ljmp
xor
fcmovnbe
sahf
sbb
jl
cmp
inc
fisttps
push
dec
xchg
inc
push
es
and
xor
addr16
leave
or
xlat
adc
stc
aam
loope
hlt
out
fsub
fst
mov
xchg
orl
int3
mov
add
outsb
aad
dec
dec
pop
sti
xlat
inc
jge
add
pop
sbb
pusha
pop
pop
add
pop
loope
pop
scas
movsl
xchg
ret
fldcw
and
daa
mov
mov
nop
cwtl
into
jb
les
aam
fcmovnbe
or
sub
mov
loop
pop
sub
cwtl
cmc
icebp
cmp
or
push
leave
mov
inc
popf
pop
xlat
scas
jp
mov
inc
inc
push
fmuls
cs
xchg
or
push
xchg
jbe
and
or
int
dec
aam
mov
pop
mov
mov
jp
nop
rorl
testb
xchg
iret
das
jbe
insb
pop
test
mov
jbe
sbb
jmp
popf
insl
or
test
lds
cmp
nop
dec
mov
lods
lds
not
bound
adc
pop
sbb
pushf
out
cwtl
mov
sbb
adc
jl
pop
arpl
add
cmp
push
mov
dec
icebp
jne
sbb
out
xor
adc
xor
cmp
ja
lods
test
cmp
add
lds
dec
clc
stos
out
mov
subb
dec
push
icebp
int
adc
mov
pop
ja
dec
adc
adc
fidivl
daa
dec
mov
sub
adc
stc
mov
jo
xchg
jo
aam
lock
push
sti
test
fsubr
in
test
arpl
gs
xchg
test
inc
test
xchg
out
push
je
push
sbb
scas
int3
dec
xchg
lahf
nop
cld
mov
lea
imul
xchg
inc
dec
jp
jno
mov
push
fists
adc
popa
mov
ja
inc
dec
sub
fadd
xchg
jp
lock
aas
push
jmp
pop
mov
push
outsb
pushf
into
enter
loope
xchg
inc
mov
icebp
js
icebp
std
xchg
jnp
bound
dec
or
std
xor
out
mov
sti
inc
mov
int3
cmp
jb
xor
pop
jp
xorb
das
adc
dec
dec
sbb
sbb
pop
stc
aaa
rolb
jmp
stos
test
nop
xor
mov
rcll
push
fstpl
cmp
dec
lret
mov
jns
push
out
bound
mov
imul
mov
cltd
cmc
popf
xchg
pop
push
xchg
fs
jnp
shrl
or
loope
dec
imul
sarb
mov
stos
test
lea
int3
mov
add
ja
adc
adcl
into
popa
add
sbb
hlt
jl
cmp
rol
add
cmc
iret
into
sbb
jb
scas
jae
xchg
mov
inc
mov
mov
aaa
jge
jb
push
jno
vpcmpgtd
stos
jno
daa
and
mov
lret
or
cmp
ret
fisubrs
inc
push
test
bound
jmp
aaa
outsb
rorb
push
sub
icebp
sbb
mov
cwtl
adc
aad
dec
push
call
das
repz
les
icebp
jmp
mov
out
or
loope
sub
mov
cmp
ret
lods
lock
pop
push
insb
int
cwtl
sbb
aam
adc
js
jnp
push
or
shll
add
fistpll
sub
mov
cltd
sbb
jo
inc
xchg
mov
jmp
sub
and
movl
icebp
mov
cwtl
xor
cs
nop
and
pop
mov
and
adc
mov
xchg
outsb
mov
test
mov
loop
jne
mov
mov
jl
add
pop
xchg
rcll
loope
aam
fs
in
shr
arpl
push
idivl
and
aaa
stc
jl
enter
in
inc
adc
sub
inc
push
mov
xorl
lods
add
jns
sbb
push
cmp
add
cmpsl
dec
rcrl
dec
sti
mov
addb
ret
cwtl
rcr
sahf
cmp
scas
adc
mov
pop
mov
cmc
ss
adc
ret
sbb
call
test
xor
aam
bound
jb
inc
scas
dec
ljmp
iret
imul
xchg
cltd
mov
sub
mov
jmp
loop
arpl
enter
add
shrl
hlt
add
and
ret
mov
add
cmp
loop,pt
std
mov
push
lea
lea
mov
jbe
ss
and
rclb
cs
fisttps
adc
shll
int3
pushf
inc
pop
cmp
test
push
cmp
add
les
popa
je
call
in
sub
fldl
cmpsb
ret
adc
mov
lods
dec
mov
xchg
xchg
test
stos
mov
rorb
popf
popf
enter
push
lock
jp
mov
xchg
lods
or
std
add
pop
testl
in
rclb
adc
inc
pop
dec
sbb
and
enter
dec
sahf
jnp
cmpsl
int3
test
xchg
and
jae
adc
sub
cltd
sub
cmc
push
sub
aas
aam
adc
adcl
inc
and
xchg
mov
xchg
adc
xchg
jmp
outsb
adc
mov
xchg
cld
jns
adc
into
pop
xorb
mov
dec
sub
xchg
inc
test
loopne
loopne
sbb
mov
out
fcmove
jecxz
and
adc
sub
pushf
dec
xor
fldcw
mov
fcomps
rolb
sub
lret
cld
sub
fbld
pop
out
mov
mov
shll
add
daa
dec
mov
stos
sub
push
fs
dec
mov
dec
stos
mull
arpl
add
inc
paddusb
sbb
sub
mov
mov
sub
sub
into
cwtl
fsubrs
es
sarl
fsub
jg
imul
xorb
call
push
mov
jle
scas
mov
out
jb
fbld
imul
sbb
xor
inc
mov
repnz
notl
jb
imul
sbb
mov
push
sbb
dec
mov
out
dec
mov
push
dec
sbb
dec
mov
mov
push
fstl
pop
pop
cwtl
pop
dec
xchg
jl
int
sbb
movsl
jl
addr16
into
scas
lret
out
fwait
inc
out
outsb
adcb
push
dec
xor
add
cli
imul
sbb
mov
push
pop
mov
mov
ret
fmull
nop
mov
gs
push
dec
add
inc
adc
cmpsb
mov
enter
gs
or
jne
fadds
lret
jb
fstpl
aam
adc
mov
stc
out
leave
mov
mov
mov
push
in
or
jle
pop
imul
mov
mov
pop
jnp
addr16
xor
sub
les
xlat
add
cltd
stc
xchg
mov
in
cmp
pop
inc
cmpsl
mov
sub
inc
flds
stc
add
lods
lds
pushf
and
mov
enter
das
push
mov
int3
movsb
call
dec
xchg
sbb
cmp
jns
or
addb
adc
and
add
jbe
insl
cmp
pop
fucomip
or
mov
lods
and
insl
mov
mov
add
pushf
xchg
fidivrs
lahf
in
cmc
cwtl
or
push
repz
sub
fadd
movsl
call
scas
pop
int
fwait
xchg
xor
out
je
adc
js
or
push
push
rcll
adc
aas
lock
shrb
popf
pop
mov
psrlw
inc
fcompl
sub
and
stos
lock
inc
mov
lock
or
outsb
test
lock
cmp
jno
into
cmp
cmp
cltd
sbb
sete
cli
mov
fidivrs
sbb
pop
jb
xor
addr16
adc
arpl
cmp
jae
inc
push
mov
cmpsb
adc
sub
inc
mov
nop
xchg
iret
shrb
lods
and
fcompl
sub
ss
sub
outsl
test
stos
push
cmp
imul
mov
out
fnstenv
into
orl
mov
lcall
or
mov
adc
in
call
push
ja
jno
xchg
mov
sahf
push
pop
int3
icebp
fdiv
popf
cs
sbbb
cli
adc
lock
out
imul
imul
daa
faddp
dec
and
int
andl
pop
icebp
jns
cli
dec
cmp
neg
cmp
sub
xchg
in
push
mov
add
jnp
rorb
add
xlat
adc
and
sub
aad
cmpb
test
loope
lahf
lock
aas
dec
sub
mov
mov
mov
inc
idiv
les
leave
dec
js
lods
mov
xor
or
stc
and
pop
in
imul
jl
or
leave
mov
cmp
into
or
out
inc
sub
mov
sti
in
sbb
cmp
xchg
popf
rcrl
add
sbb
das
test
int
stc
rcrb
push
mov
push
mov
sbb
adc
scas
dec
jmp
sbb
cltd
jo
inc
cmc
mov
subb
adc
jecxz
xor
mov
sbb
ret
or
push
cmp
leave
enter
jge
jl
or
test
pushw
push
sub
ret
sarb
enter
or
in
cmp
mov
gs
jae
mov
add
icebp
stc
sbb
out
adc
inc
xchg
push
lahf
jl
cmpsb
mov
and
jne
push
adc
fmull
push
pop
or
push
fidivrs
rol
mov
mov
enter
and
paddb
ds
pop
sbb
cmp
push
lret
jg
pusha
xchg
ja,pn
adc
xchg
stc
cmp
and
add
out
push
push
dec
sarl
or
je
adc
mov
cmpl
subb
ljmp
jo
fsubrl
mov
xchg
add
scas
mov
mov
std
in
sub
sbb
jo
pop
dec
and
xchg
xor
mov
pop
mov
and
xor
jp
inc
ret
sbb
popf
lea
or
mov
sbb
jbe
mov
pop
fistl
xlat
mulb
arpl
jno
imul
fistpl
fmull
xor
pop
rclb
lock
mov
sbb
mov
pusha
pushf
pop
popf
mov
push
xchg
gs
out
ds
xor
out
aaa
and
jo
scas
lret
sahf
repnz
pusha
cmp
pop
xor
xchg
push
bound
mov
jne
or
rcll
push
or
cmp
imul
add
mov
push
rcrb
int
jmp
xor
imul
ret
push
xchg
adc
fldenv
into
xor
scas
adc
shr
shlb
jae
xor
add
xor
adc
in
enter
bound
aaa
cmpsb
test
dec
add
call
mov
adc
inc
dec
in
std
xor
sbb
je
not
movsb
push
inc
sub
adc
in
mov
jnp
fs
hlt
fmuls
sbb
inc
add
sbb
addl
enter
lods
fdivs
mov
sbb
mov
icebp
data16
sbb
sahf
loop
and
adc
xor
push
insl
outsb
ss
stos
xor
mov
adc
cmp
pop
nop
test
cmpsl
stc
inc
pop
and
cmp
push
and
repnz
mov
lods
stc
or
std
loope
dec
inc
mov
data16
and
test
adc
pop
sbb
xor
jp
mov
mov
insb
js
push
xchg
repz
jo
jno
pop
scas
push
cmp
xchg
repnz
flds
loopew
push
pop
sbbb
push
movsl
xchg
adc
jo
cmp
scas
das
jle
sbb
pop
or
add
lcall
pushf
lahf
or
pop
ror
lret
pushf
je
adc
inc
fwait
jg
ds
clc
cmpsl
jne
mov
jbe
outsl
into
shll
and
and
add
ficomps
inc
sbb
je
pop
fs
push
add
hlt
cmp
cld
aad
mov
inc
lock
push
lods
sub
mov
ficomps
mov
rcll
mov
rcr
mov
mov
out
ret
dec
lret
jle
pop
mov
or
std
and
mov
das
jge
and
jb
repz
push
push
jecxz
ficoml
add
cmp
arpl
loop
sub
aam
mov
jecxz
sbb
fdivrs
sti
out
inc
sbb
jo
pop
sub
out
xor
and
mov
clc
adc
add
inc
ret
mov
gs
mov
add
mov
jp
mov
fwait
movsl
in
mov
cmp
in
jl
out
sti
bound
xchg
aam
xchg
jecxz
out
dec
adc
addl
lock
cmp
lahf
repz
inc
repz
jnp
cs
cmp
push
xlat
popa
dec
pop
jo
fildll
add
jne
inc
out
adc
cmp
cld
push
icebp
int
xchg
pop
mov
jmp
aam
lea
lahf
nop
add
mov
mov
lret
in
sbbb
push
lods
adc
mov
jns
ss
and
add
cmp
mov
fisubrs
jne
in
sub
mov
out
and
sbb
fbld
sbb
cmp
lods
fldl
sub
adc
mov
add
pop
roll
imul
enter
jg
and
inc
and
push
xchg
mov
insl
push
sbb
fidivs
xor
aam
cltd
sub
adc
mul
cmp
aaa
add
addl
mov
xchg
push
lahf
lods
push
fbld
stc
adc
mov
out
lret
add
rcll
ljmp
dec
stos
push
mov
dec
jnp
or
cmovo
lret
inc
mov
inc
sbb
fwait
jmp
mov
adc
push
loop
sti
cwtl
dec
mov
outsb
xor
pop
movsb
inc
jecxz
push
in
mov
mov
std
mov
mov
xchg
fistps
test
icebp
clc
outsl
inc
cwtl
adc
mov
add
push
movsl
sbb
push
jecxz
dec
cmp
lods
push
lcall
or
loope
scas
imul
cmp
adc
lock
fstl
xor
jne
das
mov
mov
int3
aad
lods
andb
mov
fbstp
xor
dec
cmpsl
lods
mov
lods
jle
xchg
push
jno
mov
adc
inc
pushf
scas
sub
aas
leave
jmp
and
jmp
into
std
jbe
push
xchg
sbb
cmc
push
imul
out
adc
mov
ret
js,pn
push
out
ret
push
pop
leave
sub
mov
ljmp
mov
mov
dec
loopne
dec
sub
outsl
push
inc
out
sti
mov
pop
xchg
cmpsl
lret
xchg
push
dec
dec
mov
push
jnp
cmpsl
sbb
js
outsb
ljmp
cmp
std
pop
clc
sub
mov
lods
mov
cmpsb
sbb
adc
les
lret
jecxz
sahf
je
aad
ja
lods
xchg
lahf
ficomps
repz
pop
jno
out
mov
jecxz
mov
call
lcall
ret
adc
cs
fcoml
and
ret
or
ljmp
cmc
insl
shrl
std
and
scas
std
cmp
cmp
es
pop
out
sub
or
add
lret
add
xchg
push
rolb
lahf
test
ss
xchg
xor
jo
stos
xor
xchg
sub
rorb
in
jl
imul
mov
adcb
sub
repnz
and
cwtl
pop
iret
sbb
js
mov
xchg
mov
xchg
sub
xchg
push
pop
pop
scas
movsl
fadds
ficoml
mov
gs
mov
mov
pop
sub
cs
push
into
cwtl
jo
pop
ret
pcmpeqb
add
popf
dec
cmpsb
mov
insb
inc
inc
in
mov
and
lock
mov
sbb
xchg
fnstsw
and
out
xchg
fwait
sahf
loope
pop
test
in
mov
dec
in
lds
fldz
mov
sub
cmp
xchg
mov
fcomps
push
cmpsb
add
pop
test
xor
push
pop
jo
ret
sub
inc
push
and
jbe
int
add
inc
push
notb
push
push
mov
lods
filds
lret
stos
sub
dec
jle
lods
push
cltd
jns
bound
addr16
lock
hlt
xor
shrl
test
sbb
jne
arpl
imul
sub
imul
push
push
push
imul
pop
or
rorl
pop
into
inc
pop
xchg
mov
rcrl
xor
mov
cmp
jge
jbe
cmp
inc
push
shll
gs
dec
dec
std
xchg
pushf
jle,pn
mov
xchg
das
jno
dec
call
cmp
mov
push
dec
fidivs
cltd
add
stc
dec
andb
push
pop
fldcw
addr16
xchg
xor
xor
leave
ss
int3
cmpsl
sbb
aaa
in
in
flds
cmp
jg
add
sbb
ret
add
sbb
imul
inc
pusha
cmp
and
sbb
xchg
popf
js
or
ret
outsl
aam
ret
out
daa
ljmp
xchg
int3
pop
jnp
sbb
inc
fbld
and
push
push
cs
cld
mov
popa
adc
xor
lret
fidivs
jno
mov
adcb
mov
add
js
lea
jmp
mov
fsubr
fistps
negb
mov
lock
sub
je
orl
repz
jmp
and
xchg
pop
mov
insb
movsb
jg
popa
bound
fstpt
dec
pop
int3
inc
jle
cmpsb
fs
test
push
or
jecxz
pop
sbb
pop
jl
jecxz
out
mov
test
testl
iret
mov
and
adc
adc
push
xchg
outsb
sub
shlb
add
pop
inc
xchg
lock
adc
imul
mov
bound
sub
cmp
mov
mov
mov
xor
lahf
mov
mov
inc
inc
div
xor
icebp
xchg
icebp
mov
and
loop
test
pusha
jbe
movsb
xchg
es
adc
adc
cs
pushf
loope
fldenv
sti
int3
or
push
mov
out
dec
ficoml
insb
mov
fcomp
test
data16
jecxz
out
mov
or
test
jo
sbb
lods
xchg
dec
jno
jne
dec
mov
xchg
mov
xor
aaa
and
lods
push
scas
loop
mov
cld
inc
mov
sub
scas
mov
cwtl
dec
ret
fstps
mov
test
fmul
mov
andl
mov
xor
inc
movsb
mov
subb
mov
mov
adc
mov
stc
jg
mov
xor
push
test
rorl
call
add
and
dec
xchg
xchg
loopne
lcall
rolb
mov
fsubrl
mov
subb
push
mov
or
xchg
pop
ss
sbb
jne
fnstsw
mov
in
or
cmp
dec
daa
adc
xchg
sub
add
call
push
adc
loopne
mov
data16
jl
xlat
and
subl
rorb
mov
in
clc
aam
push
mov
loopne
sbb
adc
ds
int3
hlt
out
dec
nop
test
sahf
push
enter
jbe
jmp
outsl
and
xor
pushf
into
sub
orb
sti
fdivrp
sbbl
lcall
mov
enter
jo
ljmp
pop
iret
orl
lock
mov
jecxz
jl
sti
lea
push
inc
adc
pushf
idivl
test
xor
out
pop
imul
cmp
ljmp
in
mov
lret
inc
pop
mov
std
inc
das
movsb
mov
sub
dec
in
lock
cmc
ret
test
out
data16
xchg
add
pop
cs
xor
mov
xor
test
ds
cmp
sti
into
lock
jbe
je
repnz
rorb
addr16
loopne
xor
divl
leave
test
xor
jmp
cmpsl
xchg
clflush
pop
lahf
scas
fsubr
push
pop
js
test
aad
adc
pop
repz
movsb
test
jp
push
in
add
and
push
out
pop
mov
sub
fldenv
iret
js
imul
add
les
mov
mov
sbb
ret
pop
add
out
jp
sbb
mov
ds
cmp
mov
jnp
aaa
clc
xor
or
addr16
mov
pop
bound
jp
jge
mov
iret
mov
or
loopne
inc
mov
xchg
loop
test
stc
or
mov
inc
ljmp
dec
scas
xorps
jo
and
push
test
call
push
test
inc
lret
cmp
adcb
mov
bound
push
mov
ret
xchg
sbb
call
pusha
add
dec
inc
jp
insl
add
xor
fxch
and
out
mov
inc
push
inc
bound
vmovaps
movsl
jge
push
inc
ja
inc
pop
testl
in
in
in
cmp
mov
mov
ret
jle
in
jnp
jo
dec
or
shrl
pop
ficompl
mov
and
lods
insl
in
or
inc
insb
sub
mov
movsb
loopne
sbb
rolb
jbe
mov
cmp
jmp
cld
test
popa
jbe
adc
jle
addr16
into
imul
xlat
or
xor
push
gs
and
inc
jl
lret
movsb
es
add
jno
mov
lahf
xchg
scas
push
pop
call
ljmp
in
xor
out
out
adc
jno
stc
addr16
lret
mov
inc
jnp
or
jns
frstor
xchg
cmc
and
insl
out
jg
clc
negb
push
rol
jg
push
out
cmp
sub
mov
push
aaa
mov
push
jge
js
cmp
imul
jbe
jno
iret
fsincos
fwait
test
fldenv
push
mov
or
loop
mov
divb
inc
dec
test
cmpsl
pop
and
daa
fwait
iret
and
out
xchg
push
les
or
sub
add
bound
mov
or
mov
stos
cmp
fnstcw
mov
push
push
int
dec
dec
je
inc
movsl
lods
jbe
test
lret
mov
add
cmp
sti
xchg
jbe
or
pop
enter
jb
maxps
jmp
cmp
mov
xlat
sbb
mov
es
gs
pop
xchg
mov
xor
jb
adc
jae
movsb
mov
movsl
ror
ja
ljmp
xor
inc
jl
or
repz
sub
cmp
dec
or
mov
and
int3
jp
out
inc
jb
fsub
lods
adc
out
inc
xchg
xchg
xor
mov
mov
dec
xchg
mov
es
dec
aaa
ret
repz
out
mov
aas
push
cmpsl
inc
loope
adc
jecxz
pop
cs
pop
cmp
sub
xchg
pop
or
add
cmpsl
jnp
mov
adc
mov
orb
xor
orb
fwait
push
imul
lret
cmc
push
ss
add
cmp
fidivrs
fs
cwtl
mov
inc
lds
insl
bound
mov
xchg
stos
lret
and
in
mov
mov
push
mov
adc
loop
stos
and
cmpsl
and
lret
xchg
adc
pop
movl
jno
repz
add
addr16
adc
pop
clc
test
std
ljmp
sub
test
mov
pop
test
dec
jmp
cmp
loop
insb
je
sbb
fidivl
xlat
or
xchg
aas
lods
xor
mov
into
cmp
jle
es
mov
xchg
sub
cli
pusha
push
dec
ficoml
movsb
and
xchg
adc
les
inc
push
repz
popa
arpl
sets
mov
or
sti
jne
es
and
test
sub
mov
or
out
mov
fwait
pop
aam
rolb
pusha
pop
aad
pop
xchg
cmp
pop
push
into
lcall
sbb
xchg
jp
inc
dec
loope
inc
inc
sbb
push
add
jl
push
rclb
movsb
popf
inc
retw
cmpsb
mov
imul
mov
popa
sub
scas
mov
cmp
stos
and
add
daa
mov
idivb
dec
jl
ja
jnp
dec
loopne
dec
cmc
repz
ret
adc
loop
add
sahf
shrl
push
xchg
jno
push
js
in
jmp
fmuls
sub
cmp
push
fsubrs
push
pop
sbb
test
pushw
push
std
imul
and
and
or
xchg
mov
and
cmp
jge
add
lret
and
mov
pop
std
xchg
adc
add
pusha
xor
sbb
jb
sbb
pop
and
aaa
cmpsb
xor
sti
sub
aaa
imul
fsub
or
sti
push
in
and
xchg
and
adc
fldcw
push
icebp
lret
mov
ret
jg
push
and
adc
add
ret
add
mov
cmp
mov
inc
and
popa
jbe
cmp
dec
das
ljmp
enter
pop
sub
cltd
in
aas
inc
mov
cmp
mov
xor
es
in
push
mov
xchg
adc
pop
loopne
adc
dec
mov
mov
mov
jb
shlb
mov
push
fiadds
push
loope
xor
sbb
pop
mov
insb
jb
aad
jle
and
in
lret
sahf
adc
dec
mov
mov
lock
jae
xorb
cmpl
dec
jmp
out
jmp
jne
inc
aad
cld
pop
ss
push
out
out
mov
std
xchg
lahf
jle
pop
jp
ds
sub
dec
andb
js
mov
dec
dec
adc
sub
pusha
sub
aam
xor
loope
adc
jl
outsb
addr16
push
pop
testl
sbb
mov
inc
adc
addl
xorl
fidivrs
fsubrl
xor
ficompl
loope
and
rorb
ds
or
mov
enter
add
lcall
popa
call
jle
or
stos
fs
add
das
jl
cmpsb
mov
std
insb
or
mov
insl
shlb
pop
enter
in
jl
and
xlat
aad
call
cmp
lahf
jge
fwait
aam
int
aam
fcomi
push
stos
in
xchg
or
xlat
sub
inc
bound
mov
add
push
xor
inc
stc
dec
cmp
jecxz
lahf
cmp
scas
cli
sarl
stc
or
mov
sti
or
outsb
adc
push
notb
mov
pop
fimull
fbstp
lods
movsl
int
xlat
test
dec
push
mov
inc
daa
xchg
push
out
fmul
mov
in
xor
cmp
outsl
inc
popf
cli
or
adc
addr16
mov
mov
sarl
jmp
xchg
mov
sbbb
sub
stos
push
je
addr16
icebp
sbb
adc
scas
scas
test
sbb
ss
or
loopne
jge
lock
inc
inc
mov
mov
xor
cmc
jns
xchg
shrb
iret
xor
sub
js
xor
andb
aam
xchg
push
out
push
mov
jp
jmp
dec
lcall
cmp
ljmp
add
popl
mov
mov
cltd
mov
fnstenv
mov
cmp
jp
jne
scas
mov
mov
ds
mov
sbb
inc
cmp
xor
jp
mov
push
add
out
inc
pop
push
and
push
mov
ss
adc
sbb
fidivs
or
inc
jmp
fs
mov
dec
jb
imul
je
test
lret
adcl
in
lahf
push
sbb
rcl
lods
movsb
fdivrs
test
imul
out
sahf
or
hlt
or
mov
sub
push
xor
in
stos
fdivl
out
or
inc
xor
roll
push
sub
enter
ds
mov
and
sbb
pop
aas
dec
or
xor
ljmp
dec
and
js
jge
repnz
push
or
xor
in
mov
and
rcll
orb
push
jo
pop
jecxz
cmp
or
xlat
jo
or
push
dec
arpl
out
jp
sbb
fldpi
sub
in
shlb
xlat
dec
mov
add
arpl
int
aas
push
es
rolb
jp
sbb
fstp
inc
mov
cmpsl
lods
sbb
test
cld
fisubl
xchg
imul
xor
dec
bound
ljmp
jp
insb
add
into
push
pushf
imul
test
js
outsl
sbb
shr
xchg
sub
and
ja
xchg
nop
pop
push
mov
jns
mov
jle
xor
jno
xchg
pusha
leave
xchg
cld
faddl
pop
mov
iret
and
in
imul
pop
jle
jnp
xor
jl
test
repz
push
mov
daa
adc
xchg
pop
ss
jmp
out
in
out
xchg
outsb
flds
add
mov
sarl
test
movsl
idivl
outsb
sarl
loopne
adc
xor
sahf
call
sub
push
pop
dec
push
loopne
xchg
call
jmp
mov
jb
ljmp
xor
adc
fdivl
jmp
mov
notb
movsl
js
outsb
ljmp
aas
pop
lea
pop
sbb
lea
pop
xlat
movsl
sbb
mov
xor
pushf
jmp
xor
mov
leave
jno
push
sub
dec
insl
inc
call
loopne
lea
movsl
mov
inc
cmpsl
and
add
in
bound
mov
push
addr16
fs
ficoml
test
aam
ds
outsb
cmpsb
push
sbb
jb
sub
ds
or
fdiv
out
lds
sub
adc
add
adc
mov
cmpsl
in
push
enter
inc
out
imul
or
mov
movswl
pop
into
les
cli
push
lea
imul
inc
dec
std
jecxz
adc
dec
or
fs
shrb
int
cwtl
push
or
or
cmp
mov
icebp
loop
fisttpll
xor
mov
neg
xchg
cmp
dec
cli
mov
jnp
divb
mov
jmp
shlb
out
dec
inc
push
loop
sub
les
call
popa
push
mov
hlt
jp
imul
xor
jg
adc
and
arpl
push
scas
rcrl
sub
icebp
add
lods
loop
inc
ljmp
cmp
aas
push
cmp
or
inc
addr16
mov
jno
xchg
fcmovbe
mov
mov
push
xchg
insl
mov
fistl
jmp
xchg
lock
mov
cwtl
ficomps
jne
xchg
mov
pop
cltd
bnd
cs
sbb
ja
out
or
fstpt
or
leave
std
jns
mov
mov
push
push
push
jae
and
int
dec
mov
scas
jge
mov
adcb
xor
sbb
mov
add
jmp
mov
pop
ror
aad
lods
repz
int
stc
dec
out
mov
fs
mov
jnp
inc
aaa
mov
scas
push
test
jb
mov
push
pop
cmpsl
push
test
pop
fisubl
dec
mov
cmc
dec
push
imul
jg
sarl
adc
push
mov
xchg
test
andb
mov
pop
push
stos
shlb
xchg
loope
jge
dec
cltd
push
jmp
and
es
push
les
mov
xchg
loop
xchg
shll
pop
adc
xchg
rorl
scas
outsb
adc
mov
fsub
mov
insb
imul
js
outsb
push
mov
bnd
aam
pop
push
ror
xlat
pop
out
xchg
movsb
sbb
or
or
mov
aam
mov
cmp
or
mov
test
shrb
test
fldt
add
dec
popf
loop
mov
sti
xlat
mov
mov
mov
clc
push
adc
jae
mov
enter
jae
adc
dec
jne
jae
mov
ret
xchg
push
test
jns
icebp
lcall
pop
fldcw
sub
cs
push
xchg
sbb
or
pop
and
fcmovnb
inc
inc
into
imul
mov
jo
insl
out
movsb
sahf
icebp
xor
cltd
sarb
sub
jbe
lods
xchg
repnz
jmp
xor
mov
or
jne
jno
and
or
and
hlt
imul
mov
push
jecxz
in
xor
and
test
jmp
and
add
pusha
stos
aaa
cmpsb
add
fisttpll
cmp
aaa
jne
jo
les
dec
adc
adc
push
sbb
jmp
jns
testl
lock
daa
daa
xor
pop
cmp
arpl
fwait
pop
add
enter
mov
sbb
jge
fsubrs
arpl
mov
pop
dec
push
and
insb
push
jb
mov
shr
scas
rcll
movl
testb
orl
xchg
enter
rcrb
mov
addr16
movsl
fs
mov
lock
icebp
or
mov
movsl
mov
inc
leave
push
dec
sbb
lods
jge
nop
pop
fbstp
pop
push
push
stos
ret
pop
mov
xchg
sub
push
sbb
pop
sarb
sbb
imul
in
insl
test
call
pop
add
mov
icebp
jl
lret
pop
fsts
pop
and
dec
jae
jp
xchg
dec
in
incl
sub
push
outsl
pop
fildl
xchg
jmp
pop
jg
test
jmp
out
pop
fwait
or
xor
mov
lods
push
adc
add
fcoml
add
loopne
cltd
dec
cs
mov
je
adc
ficoml
inc
rorl
push
arpl
pop
loop
xorb
xor
sub
push
sbb
jne
arpl
das
cmpsb
dec
stos
pop
and
int3
movsl
popf
mov
insb
push
cvtps2pi
fnstcw
hlt
cmpsb
jge
sub
repnz
mov
fbld
jmp
jmp
lods
xor
lret
pop
mov
or
lea
lock
pop
mov
cmc
nop
mov
jge
pop
pop
shll
ret
test
add
int
add
xorl
aaa
or
loope
mov
ja,pt
dec
cld
stos
leave
ret
scas
sub
xchg
push
mov
mov
mov
mov
push
in
out
in
cli
and
stos
inc
test
pushf
pop
jecxz
in
ficompl
out
xchg
cmpsb
das
xchg
aad
mov
jbe
mov
in
mov
or
sub
jne
iret
sub
push
pop
mov
add
and
adc
cmp
dec
cmp
cmp
outsb
js
mov
xor
push
or
cmp
pop
pop
gs
outsl
xchg
jp
leave
push
call
jmpw
lds
stos
lret
ja
pop
pop
mov
jmp
adc
sbb
pop
ds
test
add
lret
out
xchg
cmp
xor
lods
mov
or
cld
mov
cltd
ret
call
dec
movsl
pop
jo
dec
sbb
ljmp
aad
push
dec
jl
int3
pop
ja
ret
add
inc
ret
insl
data16
aad
pop
dec
cli
aam
insl
fisubrl
add
test
int
dec
pop
xor
or
test
aad
test
xchg
cs
cmp
sub
imul
psubsw
pop
pop
sbb
push
imulb
rcrb
aas
sbb
mov
jbe
jge
lods
push
call
sbb
inc
mov
sahf
mov
test
decl
inc
aas
mov
mov
lds
call
jecxz
cwtl
test
sbb
pop
lcall
pop
loopne
and
popa
add
mov
dec
xchg
loopne
fsubs
loop
mov
adc
mov
and
or
sti
sti
cmpsl
mov
sub
popf
bound
pop
bound
dec
or
sar
popa
push
xor
sbb
ja
je
mov
je
cmpsl
sbb
bound
loop
sbb
rol
or
jae
insl
outsl
add
fldenv
adc
pop
sub
mov
and
ds
add
push
jecxz
pop
sti
inc
data16
rorb
adc
sar
add
pop
sub
jns
jl
add
pop
mov
lds
pusha
ss
push
push
shrl
push
pop
pop
daa
movsl
inc
mov
mov
pop
das
jmp
mov
outsl
mov
add
jecxz
cmp
test
add
mov
movsb
xor
mov
jbe
hlt
inc
push
mov
jnp
jl
lock
shlb
xor
int3
sbb
les
xlat
xor
out
dec
decl
nop
pusha
mov
adc
jmp
arpl
inc
cmp
sbb
mov
sub
loop
arpl
mov
sbb
sbb
scas
mov
scas
cmp
adc
push
mov
fiadds
subb
ds
xchg
pop
push
xchg
movsl
cmpsl
addb
fdivrl
mov
jmp
mov
arpl
jns
out
push
adc
loope
sahf
lcall
adc
bnd
dec
ljmp
cli
mov
xor
fiadds
lods
mov
ja
add
mov
test
aad
dec
xor
lock
mov
xchg
pop
repnz
mov
jne
das
in
inc
icebp
mov
and
insb
mov
fwait
xchg
adc
addr16
fdivrs
mov
adc
xchg
sub
pop
lret
ret
es
inc
into
mov
jge
dec
repz
mov
mov
test
cmpb
sbb
mov
test
lods
push
enter
fisubrs
hlt
mov
lret
pop
popf
xchg
sbb
sbb
push
jo
inc
jbe
negl
repnz
sub
dec
xchg
inc
ja
or
scas
ja
std
pop
jg
les
push
mov
inc
gs
aaa
lret
ja
clc
pop
stos
cmp
push
jo
mov
bound
jnp
sub
sub
and
fsubl
lods
push
jns
push
jl
loop
push
loopne
bound
ret
cltd
pop
scas
adc
aas
adc
and
sub
ljmp
pop
decb
or
ljmp
test
dec
dec
lods
xchg
cmpb
inc
aad
jo
dec
scas
mov
pop
dec
mov
inc
repz
push
push
rol
pop
jmp
jg
adc
sbb
adcl
lods
hlt
and
dec
inc
sbb
ljmp
cwtl
cmpsb
inc
out
push
data16
inc
push
cwtl
or
lcall
in
rcrb
pop
mov
sarb
and
sbb
jne
in
sub
cltd
mov
in
pop
dec
mov
xchg
sub
xor
push
sbb
out
test
into
xor
lock
or
adc
cmp
mov
mov
jl
sub
jl
sub
jno
into
in
scas
fisubrl
and
xor
jl
shrb
int
js
jecxz
ret
lods
xchg
insl
sbb
sbb
dec
or
outsl
jmp
jno
or
mov
mov
push
adc
sbbl
imul
pushf
ljmp
mov
xor
and
movsl
vmovaps
inc
xor
stc
or
xor
leave
outsl
repz
mov
js
mov
mov
xchg
mov
dec
pushf
imul
mov
push
sbb
or
sbb
xor
push
sub
int3
pop
dec
mov
icebp
mov
enter
jae
jmp
pop
mov
sub
push
adc
or
sub
jae
call
sub
xchg
cld
lods
out
cltd
and
pop
je
jecxz
add
push
cmp
ja
movsl
mov
mov
lcall
shrb
mov
mov
int
push
test
or
loopne
scas
arpl
ds
cmp
jg
cmp
nop
mov
arpl
hlt
sti
mov
adc
push
cltd
push
cmp
lret
cmp
lods
mov
pop
mov
cmp
into
fstl
stos
adc
dec
shl
jmp
repz
mov
mov
jns
xchg
out
xchg
mov
pop
scas
xor
fbld
pop
rcl
mov
sbb
sbb
sbb
shl
push
xor
xlat
imul
das
pop
cwtl
xchg
sbbl
mov
shr
dec
decl
cltd
leave
icebp
mov
mov
or
jp
enter
add
and
add
xor
and
dec
fucompp
stc
mov
lock
fdivl
mov
jmp
cld
pop
notl
rep
cmpsl
mov
sbb
mov
ret
loopne
pushf
and
daa
pop
cmp
xlat
outsl
and
lahf
roll
ret
lcall
fiaddl
inc
add
sbb
push
jbe
pop
add
test
mov
ja
in
outsl
cmpsb
mov
and
lods
lcall
pop
jne
das
adc
cli
and
push
sub
ret
xlat
push
in
add
in
je
jb
aam
push
dec
lret
xchg
mov
add
mov
packsswb
scas
jp
push
leave
mov
enter
ret
sbb
inc
jnp
int
inc
and
je
mov
cmp
sbb
testb
mov
xchg
and
jge
cmpsb
mov
sub
push
movsl
es
loopne
push
mov
int3
adc
xor
daa
rcrb
shr
rcr
pop
jno
mov
out
les
aam
xchg
inc
mov
add
addr16
jbe
pop
inc
iret
pop
or
insb
repz
jmp
sbb
cmc
bound
add
push
enter
loope
sbb
cld
jnp
fdivl
adc
dec
push
or
cmp
int3
fwait
cltd
xor
mov
push
fsubrl
inc
mov
pop
inc
ret
ret
mov
rorl
dec
mov
inc
ss
scas
pop
add
in
xchg
movsl
stc
jne
int
mov
shr
xchg
cmp
mov
icebp
mov
and
sbbb
pop
jge
ds
sub
inc
or
mov
loope
pop
bound
push
ja
sub
scas
and
addb
mov
lea
cmpsb
xchg
push
lahf
fbstp
addr16
popf
nop
insl
out
hlt
int3
jne
pusha
push
pop
pop
stc
lods
shlb
dec
into
push
jb
pop
es
aaa
fbstp
cmp
fnstenv
add
rorb
lret
dec
js
mov
add
inc
pop
cld
outsl
insl
xchg
in
sbb
push
outsb
jle
std
add
scas
movsl
out
pop
in
xor
inc
xchg
repnz
sub
flds
jl
cmpsl
lea
lret
loopne
out
dec
jcxz
aad
sbb
mov
jecxz
sbb
mov
rcrb
cwtl
movsb
fildl
iret
mov
ja
sbb
popf
gs
stos
subb
sub
cmpb
sbb
and
fbstp
push
mov
and
inc
test
lods
rcll
popf
stos
fldcw
out
in
adc
jl
cmp
call
je
and
daa
xchg
pop
mov
lcall
adc
inc
movsl
xor
stc
das
and
or
sub
dec
nop
dec
clc
lock
fisttps
int3
inc
gs
ret
inc
mov
mov
jo
clc
xor
sub
rol
jns
inc
sub
rcrl
repnz
aad
adc
pop
pop
sbb
std
stos
mov
jae
shl
jbe
in
inc
dec
in
xor
xchg
adc
enter
adc
cmp
sub
jle
jl
popa
ss
push
and
xchg
sub
repz
in
jg
imul
scas
adc
push
sbb
add
pusha
cmpl
rcl
xor
je
mov
cwtl
or
pusha
pop
add
idivb
flds
xor
jp
inc
sub
mov
testb
pusha
inc
sub
daa
jns
dec
aam
aam
cltd
mov
lret
les
fsubrl
lea
stos
xchg
jmp
das
mov
mull
movsb
inc
push
adcl
cld
testb
je
repz
dec
ja
cmp
pop
es
dec
test
mov
bnd
and
xchg
mov
mov
ds
xor
jb
or
inc
mov
lret
ljmp
xchg
or
xchg
xchg
push
or
dec
dec
mov
daa
loopne
sub
push
arpl
lods
push
sub
inc
cmp
inc
adc
mov
es
lret
cwtl
add
out
inc
test
addl
mov
fstl
enter
imul
jae
pusha
sarb
in
fadds
push
or
lods
fwait
dec
mov
adc
xor
pop
xchg
inc
std
xchg
out
pop
cltd
or
pop
jae
pavgw
inc
mov
cmpsb
pop
nop
aam
sti
or
or
dec
or
jge
loope
jmp
adc
lret
lahf
add
cmp
fs
sti
enter
push
aas
inc
pop
sti
lock
or
xchg
mov
inc
sub
ljmp
jne
sbb
inc
aam
push
ret
sahf
xor
or
and
in
adc
jnp
mov
dec
call
jo
sub
scas
adc
shlb
pusha
popf
faddl
inc
pop
jecxz
je
fistps
mov
imul
and
cmp
fsubrs
mov
cltd
push
sub
dec
jl
subl
mov
lret
mov
fucomp
in
into
arpl
pop
cmc
popa
xorl
lds
loopne
sti
dec
mov
xchg
and
xchg
xchg
adc
repz
push
sub
sbb
xchg
pop
scas
or
cltd
stos
or
lods
cli
jecxz
adc
add
xchg
sbb
pop
inc
xrelease
add
mov
mov
adc
cmp
inc
sbb
mov
scas
fs
hlt
fisttps
ds
push
pop
outsl
mov
or
outsl
filds
nop
loope
jns
rcrb
mov
ss
fsubrl
das
inc
mov
addr16
aas
jns
sahf
mov
cmp
dec
andb
xchg
into
aad
lret
dec
dec
mov
sub
lahf
lds
int3
testl
jo
xchg
mov
mov
lods
and
sbb
adc
inc
jg
ret
pushf
pusha
cmp
call
dec
inc
pop
adc
push
sub
rol
pop
daa
push
subl
mov
mov
loop
mov
dec
test
lret
pop
pop
mov
ret
jle
movsl
mov
push
rcrb
jmp
mov
lret
fwait
add
dec
add
jns
or
arpl
sahf
jle
push
pop
adc
and
lret
lret
mov
pushf
adc
inc
add
bound
outsl
sbb
clc
ss
jns
fldenv
movsb
mov
mov
cmp
jo
push
je
fbstp
enter
add
mov
mov
lret
test
subb
outsb
popf
sub
inc
jecxz
mov
cmp
std
dec
xor
add
in
jmp
shll
jl
cli
dec
je
cmp
movsb
adcl
ret
xchg
dec
loopne,pn
pop
xor
nop
add
mov
jecxz
js
mov
and
adc
dec
xchg
movsb
xchg
icebp
mov
inc
lods
xor
bound
or
cmp
cmp
scas
or
adc
push
aas
mov
jmp
xlat
cmp
push
sbb
lret
jb
sti
mov
mov
mov
fsubrl
push
ljmp
daa
xor
pop
xor
aam
pop
out
jae
xchg
pop
cs
imul
push
test
add
xlat
adc
ret
xchg
scas
je
and
pop
or
int
insl
bound
dec
in
testb
int
cmpsb
and
divl
insl
dec
inc
cli
pop
arpl
xor
cli
ficomps
aam
stos
lods
aam
adc
push
insl
mov
lods
ror
inc
inc
inc
pop
stos
and
jns
fs
mov
data16
int3
ficomps
sbb
add
mov
dec
vaddpd
dec
sbb
bound
fsubrl
mov
cmp
lcall
stc
mov
mov
scas
icebp
sub
mov
sti
hlt
xor
das
pop
xchg
das
pop
test
dec
mov
sbb
andnps
cmp
outsb
iret
cmpb
jecxz
cltd
dec
cmp
or
xchg
dec
repz
mov
jnp
cwtl
pop
and
adc
aam
mov
cmp
out
outsb
and
adc
mov
add
addr16
sbb
ficoml
add
in
inc
fisttpll
or
add
and
pop
and
out
or
lret
pop
jl
xlat
push
push
jnp
lods
mov
popl
pop
fisubs
jne
sub
push
sub
dec
cli
js
mov
aam
imul
inc
cli
arpl
and
mov
push
or
inc
push
fxch
notb
mov
fidivl
pop
jns
push
imulb
ds
pop
int3
pop
aaa
in
aad
loop
adcb
cmpsl
int3
pop
pop
mov
das
dec
pop
sub
fcmovnbe
out
cmpsb
test
jnp
test
fistpl
dec
std
mov
dec
daa
xor
and
enter
push
add
sbb
movsb
mov
mov
jmp
mov
out
xchg
out
fstps
es
test
stos
xor
int3
dec
aaa
adc
pop
push
hlt
jl
xchg
jnp
inc
in
int
push
jmp
mov
outsb
dec
dec
inc
out
mov
cmp
rorb
ds
arpl
sbb
xchg
stc
xor
or
fs
loop
pmaxub
leave
movsb
xor
add
pop
xchg
fcoms
jne
rolb
and
dec
ret
add
popa
sbb
sub
or
out
mov
leave
lret
xchg
xchg
cli
jns
sub
and
push
mov
aam
stc
ljmp
aam
pop
jg
rcr
pop
repz
in
das
ret
or
aam
lods
stos
fidivs
mov
shll
adc
cmp
xlat
mov
mov
xchg
sbb
sub
and
pushf
sub
nop
push
mov
enter
push
sub
mov
cmp
sbb
adc
cmp
mov
rorl
dec
add
clc
cli
adc
filds
ret
mov
aad
jl
sub
inc
stos
pop
push
mov
mov
adc
push
roll
xchg
pushf
xchg
ret
pop
sub
cli
xor
mov
outsb
xchg
mov
xchg
mov
nop
add
jo
and
lret
enter
fmuls
and
pusha
inc
outsb
mov
rcll
pop
cmpb
lea
add
push
aas
out
cmp
lods
in
nop
push
sub
dec
ja
int
dec
in
aas
inc
mov
clc
loop
not
add
push
lahf
mov
jmp
cmp
jl
add
jecxz
lea
data16
testl
jp
sub
push
inc
push
xor
and
add
sbb
mov
scas
daa
cmp
dec
clc
test
inc
cmpb
scas
aaa
xchg
jge
fwait
sbb
mov
sub
xor
pop
movsb
adc
sbb
in
add
dec
cld
pop
std
lret
insb
jnp
ljmp
rcrl
gs
loope
fdiv
sub
lea
stos
sub
enter
dec
dec
popa
inc
mov
sbb
dec
addl
mov
dec
adc
and
imul
arpl
hlt
pandn
xchg
orl
push
pop
inc
cli
adc
jnp
inc
cmp
aam
jb
rcrl
mov
mov
loope
pushf
pushf
inc
mov
mov
adc
or
ja
stos
push
mov
jae
mov
int
stc
pop
xor
add
mov
push
pop
cmp
dec
xchg
insl
dec
fcompl
aas
stc
jmp
pop
pop
iret
mov
mulb
inc
mov
xorb
mov
push
cmp
mov
pop
sub
iret
ss
jle
js
sub
hlt
inc
pop
xlat
pop
addr16
mov
scas
jl
dec
jle
jge
pop
scas
mov
adc
lods
out
jge
and
ret
repnz
in
rclb
fs
xchg
push
adc
popa
cmpsb
les
push
int
mov
xor
sbb
arpl
es
or
push
lods
sbb
jbe
arpl
shl
js
icebp
sbb
and
daa
or
flds
das
nop
loope
arpl
sub
push
inc
out
pop
mov
adc
cmpsb
jecxz
xchg
mov
fdivp
mov
imul
xchg
stos
cmp
fisubs
mov
jb
ret
jle
and
inc
jl
hlt
daa
jne
xchg
inc
sbb
mov
jae
movsl
dec
jo
sub
es
jecxz
cmpb
adc
cmp
in
mov
adc
dec
dec
fs
sbb
or
lret
push
pop
xor
mov
lret
jnp
mov
fldcw
cmpsb
sub
mov
adc
sbb
sbb
loope
subl
sbb
repz
les
out
dec
out
stos
dec
and
inc
call
jl
das
mov
pop
pop
fcomp
notb
pop
rcl
cmp
and
iret
mov
movsl
jle
pop
mov
lock
lcall
std
or
cmpps
mov
mov
mov
lcall
test
js
sbb
fildll
pop
lret
ret
dec
mov
push
xor
sbb
hlt
les
in
sub
fwait
cmpsl
jns
mov
add
xchg
insb
cmp
pop
jle
lock
subb
repz
mov
adc
movsb
mov
push
les
mov
adc
fidivs
out
fidivs
data16
sbb
or
push
in
in
and
dec
testl
xor
call
nop
pusha
sbb
aam
xchg
pop
aaa
or
push
push
les
or
out
fwait
or
std
insl
sahf
mov
mov
lret
std
dec
pushf
std
mov
hlt
add
sub
shll
cmp
lea
fidivrs
outsb
or
into
cmpsb
mov
sti
and
cmp
add
stos
push
popa
push
clc
cmp
add
inc
js
sbb
sub
mov
xchg
mov
stos
repz
cmp
aas
push
cwtl
outsb
or
xchg
js
push
jge
sbbl
fwait
xchg
adc
push
subl
inc
cwtl
sahf
ret
out
jp
lret
dec
ljmp
xor
mov
aaa
mov
rcll
sbb
nop
push
sbb
dec
xchg
pushf
rcrb
lret
das
dec
sbb
pop
inc
sub
les
sbbb
dec
insb
mov
mov
cmp
inc
fiaddl
push
std
mov
std
xor
hlt
pop
mov
scas
mov
xchg
and
js
dec
pop
jne
test
adcb
mov
and
fisubs
test
jg
scas
or
xor
and
insl
jno
pop
ja
das
mov
mov
push
cmp
xchg
sub
dec
out
mov
lahf
inc
push
das
loope
les
shl
js
jp
fdivrs
in
jo
ds
or
adc
imul
sti
jbe
push
repnz
cmpl
pop
imul
dec
fists
jecxz
lock
pop
push
shll
sbb
int
adcl
popa
inc
lcall
out
sub
cmpsl
jno
popa
mov
dec
jl
stos
and
arpl
rcll
mov
rclb
dec
test
imul
mov
mov
or
hlt
sbb
loop
out
shll
mov
mov
loopne
xchg
in
mov
popf
xchg
pushw
push
pop
ljmp
lahf
pop
fstps
jae
leave
or
cmp
ret
mov
shll
and
jno
fwait
iret
sub
push
add
jnp
sub
bsf
inc
mov
inc
sub
ljmp
jp
and
inc
out
mov
es
and
adc
fdivrl
into
dec
jl
push
sbb
lret
mov
scas
std
mov
shrl
cmpsl
pop
inc
into
xor
test
outsb
adc
insb
xor
popa
bound
mov
sub
imul
bound
mov
insl
xchg
call
pop
je
imul
xor
mov
leave
sbb
outsl
mov
jg
add
ss
sub
daa
sub
clc
and
ret
jnp
icebp
fnstenv
dec
cmp
addb
dec
and
xor
das
bound
jg
xlat
cld
fistl
rcrb
dec
cmpb
imul
sarb
adc
leave
mov
subl
call
mov
clc
in
cmp
pop
adc
push
addb
cltd
scas
sub
mov
mov
pop
and
mov
fxch
push
adc
xlat
push
ret
data16
js
pop
testl
out
mov
xchg
mov
sub
test
test
pusha
jns
push
test
fbstp
loopne
lds
jb
jl
movsb
add
inc
pop
jmp
mov
mov
and
jae
inc
jl
push
maxps
xor
les
sbb
sub
sbb
adcl
inc
cld
lahf
ss
bound
sbb
stos
sbb
mov
addb
aam
sbb
jg
stos
xor
pop
push
out
and
jg
and
cs
jo
addl
fmulp
bound
lock
add
sbbl
movsl
pop
daa
out
xchg
int3
imul
jge
test
dec
jnp
enter
push
inc
pop
lcall
pop
sbb
jnp
pop
dec
xor
cs
jmp
cmovo
idivl
jae
inc
adc
popf
sahf
adc
push
mov
cmp
inc
aam
xchg
mov
leave
loopne
jnp
ret
rorb
imul
test
add
add
cmp
cltd
or
fidivl
mov
int
ljmp
stc
and
cwtl
jo
and
or
imul
push
adc
mov
ss
jae
popa
cmpsl
in
iret
mov
dec
dec
sbb
pop
gs
and
shl
rclb
iret
mov
cld
xchg
fnstenv
daa
mov
movsb
fs
das
push
into
adc
enter
or
adc
in
fadds
sub
sbb
sarb
push
jb
and
jg
rorb
int3
mov
ret
repnz
mov
sub
test
xchg
std
ret
sub
push
xchg
mov
jno
mov
test
cmp
ret
dec
inc
movsl
addr16
jl
add
xchg
xchg
push
push
fstpl
or
xlat
sbb
push
inc
fwait
test
pop
mov
repz
pushf
inc
pop
mov
jg
xor
nop
out
xchg
xchg
push
adc
jg
mov
push
enter
or
imul
inc
std
xchg
mov
or
push
loopne
mov
fs
inc
jg
pop
xchg
stc
loopne
mov
ljmp
ljmp
pusha
pop
inc
inc
mov
xchg
or
dec
or
cmp
pop
jae
inc
aaa
pop
cmpsb
xchg
push
inc
cmc
push
outsl
push
jge
jbe
or
adc
mov
leave
mov
ljmp
lahf
ret
xor
rcr
ds
xor
fistpll
data16
sbb
push
push
push
adc
sub
insl
in
dec
cs
rclb
in
adc
adc
adc
insb
mov
push
ljmp
mov
iret
mov
xchg
xor
mov
pop
push
mov
out
lahf
orl
sub
in
xor
rol
es
push
mov
mov
and
xchg
cli
add
pop
inc
push
xor
xchg
test
inc
mov
mov
fcmovnbe
sbb
mov
xor
push
leave
adc
adc
movsb
gs
cmpsl
in
in
cmpsl
nop
repnz
fsubrs
outsl
ja
mov
mov
rol
test
out
mov
test
and
clc
insb
dec
lods
dec
xor
mov
dec
arpl
cltd
or
jle
mov
orb
lea
pop
mov
arpl
mov
and
mov
mov
inc
inc
mov
addr16
iret
push
faddp
push
pop
mov
and
scas
mov
pop
inc
ss
call
bound
mov
movsb
les
test
jne
adc
adc
inc
sahf
dec
jbe
add
inc
incl
sbb
lea
inc
push
push
jge
push
and
mov
enter
test
adc
ja
mov
sub
movsl
pop
lret
push
cwtl
jl
pop
jne
adc
cmp
or
rcl
aam
imul
lock
pushf
sti
or
mov
arpl
clc
icebp
fwait
lods
rorl
rclb
push
xor
jno
dec
fwait
out
pusha
and
dec
or
mov
sarb
fcmovnbe
push
mov
shrl
xorl
pop
dec
mov
enter
sub
insl
enter
nop
ljmp
ret
push
add
sbb
gs
test
mov
mov
shrl
lahf
cs
cmc
pop
daa
in
test
push
dec
cs
mov
mov
outsb
add
fnstenv
or
shlb
cmp
rcll
jns
fs
or
inc
add
xchg
lret
lahf
test
out
jecxz
lret
shr
dec
lods
add
sbb
xchg
div
jge
js
push
dec
arpl
rorl
or
call
mov
ret
fwait
pushf
fists
lcall
fnsave
sarl
divl
pop
jp
or
fldt
xchg
pop
iret
push
inc
ficoms
outsb
ljmp
popa
push
pop
xchg
scas
mov
xor
xor
pop
shlb
mov
fstpt
add
add
out
std
out
sti
ds
push
scas
pop
xchg
xchg
mov
xchg
jns
ja
mov
jo
mov
es
mov
dec
mov
cmp
ret
xchg
out
jo
nop
pop
loop
cld
xor
rol
push
mov
mov
add
insb
sbb
faddp
mov
cli
and
mov
adc
jmp
cld
pop
cmp
adc
dec
mov
out
cmp
je,pt
jnp
cmp
shlb
xchg
or
ret
sahf
orb
roll
push
sub
outsl
inc
mov
das
xchg
fildl
aam
icebp
sbb
push
cmp
fmul
push
jo
mov
imul
ret
lods
fdivs
xchg
jno
mov
stc
mov
jle
addr16
jl
jo
popf
xchg
lea
mov
jle
cmp
mov
in
in
nop
inc
inc
sbb
mov
pop
dec
sbb
outsb
cmpb
mov
outsb
repz
fsubrs
xlat
shll
js
xor
mov
xor
xchg
adc
push
add
lods
add
out
decl
mov
js
ds
leave
loopne
push
icebp
fsincos
xchg
or
stc
dec
or
stc
push
xchg
push
or
ret
mov
scas
rcrb
sub
shrb
mov
std
adc
jae
jb
sbb
lret
inc
fwait
add
mov
js
daa
aas
subl
or
sbb
lahf
stos
out
jae
dec
pusha
and
push
mov
jmp
sbb
enter
mov
and
push
psrlq
mov
cmp
mov
or
in
rcrb
or
xchg
subb
cli
jge
jecxz
in
fdivrs
rcll
es
jg
mov
pop
cmp
fistpll
cmc
shlb
sub
add
mov
out
movsb
and
fistps
or
dec
push
and
test
mov
aad
jmp
cmp
inc
xchg
lret
lods
push
sub
loope
ss
pushf
cmpl
mov
stos
sub
push
aad
in
and
rclb
cs
push
xchg
cld
mov
and
xor
repz
leave
xchg
sbb
add
cwtl
int
movl
pop
mov
jo
inc
in
mov
mov
scas
mov
idivl
pop
leave
stc
int
xchg
lds
xchg
arpl
xchg
clc
jmp
pop
mov
xorl
mov
lods
jne
mov
insb
inc
and
rclb
ss
lods
jg
sbb
icebp
xor
pop
ret
dec
cmp
fidivs
sub
shlb
roll
addb
das
jbe
ficompl
adc
pop
cmpsb
mov
loopne
enter
jge
inc
loopne
fwait
scas
mov
or
jecxz
xor
in
sbb
sahf
or
xor
gs
push
ljmp
jg
add
xor
pop
mov
mov
pop
ljmp
aad
mov
sti
pop
fisubs
mov
mov
lea
pop
stc
out
xor
sub
in
rorl
mov
and
ja
inc
and
out
mov
sti
pop
lcall
cmp
xchg
cmc
arpl
sbb
jg
inc
jge
in
shll
loop
inc
mov
cmp
stos
mov
inc
out
mov
ja
push
pushw
sub
sti
pop
lcall
shll
mov
shlb
les
adc
add
les
in
xchg
int
ljmp
xchg
pop
mov
repz
ss
insb
in
xor
jb
mov
push
dec
add
fimull
sub
mov
outsl
cmp
dec
in
enter
mov
jo
fsubrl
mov
sub
adc
cmp
mov
dec
inc
lods
dec
jbe
mov
push
pand
mov
insl
in
fistpl
xor
cmc
lock
shrl
and
cmpb
push
stc
leave
divb
lds
jns
mov
outsb
pop
push
xor
mov
and
ljmp
mov
adc
xchg
pop
outsb
outsb
inc
ljmp
lea
cmp
js
loope
fsubr
or
pop
ret
inc
cltd
mov
sbb
push
ficomps
movl
xor
nop
xchg
push
out
imul
fists
shrl
movsl
or
lcall
inc
jp
sti
mov
push
jmp
mov
inc
cmp
inc
cltd
jo
or
push
sub
mov
xchg
ffree
scas
cmp
dec
pop
iret
xor
scas
xchg
cs
data16
push
dec
lds
jmp
sub
push
ret
mov
cmp
mov
pusha
mov
sub
cli
outsl
in
xchg
add
pushf
stos
sub
pop
out
jp
lods
sub
xor
hlt
cwtl
in
jmp
and
mov
mov
jb
lds
int
les
outsb
mov
xlat
ja
cld
scas
in
xor
jmp
jbe
test
cld
popa
cs
cs
push
inc
push
and
pop
clc
jp
fstps
pop
jmp
sub
rcrl
repnz
inc
repz
inc
sub
dec
js
mov
stos
dec
mov
jb
jns
mov
das
dec
je
mov
mov
pop
xlat
mov
xchg
mov
sbb
int3
cwtl
stc
rcrb
lods
mov
into
leave
in
push
sub
xchg
adc
shlb
mov
mov
push
dec
cld
dec
notb
in
lahf
mov
mov
adc
mov
push
inc
jmp
xor
insl
jnp
mov
adc
cmpsl
lret
rcrl
or
xchg
into
pop
pop
fldl
add
adc
and
fs
xchg
jo
xor
add
ds
dec
pop
or
add
add
out
inc
out
out
pop
scas
add
push
sub
xchg
mov
add
xor
jno
cmp
stos
add
mov
testb
pushf
fisubs
mov
sub
lds
jmp
loope
daa
adc
gs
push
scas
addr16
add
sbb
push
xor
adc
jno
xor
inc
push
in
shlb
pop
fdivl
mov
push
fmull
pop
in
test
xor
push
sub
lods
lock
scas
out
and
push
xor
dec
mov
loope
shrb
xchg
test
stc
lcall
je
inc
shlb
push
js
test
cmp
loopne
mov
jnp
pop
imul
in
fstps
mov
arpl
sbb
cli
cs
jmp
xor
sub
popf
jnp
shll
mov
push
jl
adc
idivl
stos
pop
sub
add
int3
cmp
orl
mov
std
or
mov
cmpsl
xor
mov
jns
jmp
dec
bound
jb
mov
bound
and
mov
jo
push
mov
mov
xor
or
popa
out
jns
int3
or
popa
inc
push
push
sub
sub
sbb
in
fstl
aas
mov
sub
shlb
push
out
pop
mov
xlat
ret
sub
and
push
xorb
inc
test
mov
pop
add
call
cmp
mov
or
jbe
jg
or
jmp
mov
jo
fsubr
mov
mov
data16
fs
mull
mov
in
mov
and
xor
movsb
lock
pop
mov
jge
stos
int3
psubd
repz
lock
fwait
ds
ret
cmp
sub
test
imul
fsubl
mov
cmpb
movsb
and
mov
not
xchg
out
hlt
insl
rcll
xor
lahf
xor
es
jmp
movsb
xchg
dec
mov
xchg
push
rclb
inc
repz
and
xchg
je
pop
jp
push
inc
in
pop
push
out
test
dec
push
arpl
xchg
jmp
add
xor
mov
sub
sub
sub
pop
xor
loop
sbb
push
push
fbld
cmpsb
repnz
das
jo
sbb
push
dec
dec
mov
insb
xorl
je
pop
adc
sti
ljmp
in
inc
sahf
sub
mov
and
out
lret
imul
test
bound
jle
pop
adc
pushf
sbb
js
sub
jbe
pop
in
call
clc
dec
xor
pushf
loop
xor
push
mov
push
bnd
cmp
push
mov
mov
mov
jb
sbb
or
pop
xchg
mov
pop
js
in
sub
fucomp
test
pop
es
addr16
mov
hlt
sbb
sbbb
push
cmc
int
mov
test
push
sub
xchg
dec
sti
pop
mov
and
adc
fnstcw
repz
stc
jmp
jnp
mov
jo
adc
push
ds
xchg
fucomi
repnz
adc
arpl
jg
loop
daa
lret
add
xchg
adc
je
push
cld
pop
enter
pop
mov
movsb
aas
movsl
inc
mov
lods
lock
mov
out
insl
movsb
lock
loop
mov
in
ret
push
sub
test
jns
fadd
or
push
jae
mov
sbb
aam
loop
scas
pop
pop
jg
dec
gs
adc
jge
aam
pop
nop
daa
cld
test
inc
inc
rolb
push
nop
mov
pop
aas
dec
mov
daa
pop
test
das
jmp
sub
in
call
test
cmpsl
inc
or
shlb
xchg
lret
insb
push
int
pop
scas
jg
push
adc
lods
sub
pop
push
xor
add
add
dec
pop
ret
push
subl
mov
push
sbb
or
in
rclb
jl
out
mov
jbe
fdivrp
fisubs
jmp
lcall
addb
cmp
fsubs
icebp
jne,pt
popf
out
shlb
sub
inc
dec
pop
cwtl
fdivrp
ljmp
pop
rclb
dec
sbb
call
dec
cmp
xor
mov
sbb
enter
and
iret
outsl
popa
pushf
jg
mov
sub
xor
fmull
xchg
mov
xchg
mov
loope
arpl
cmp
pusha
sbb
adc
mov
inc
stos
or
sub
js
imul
addr16
pop
int3
pushf
fdivl
fldenv
or
cltd
adc
inc
das
fwait
xor
mov
cmp
int3
and
push
add
cmp
push
fwait
xlat
dec
xor
fdivs
rcl
mov
loope
adc
es
rclb
xchg
add
ret
cmpsb
inc
xchg
lret
inc
jno
inc
in
cmp
add
flds
xchg
insb
into
dec
ret
ja
addl
sbb
cmp
or
sub
or
mov
imul
cmp
mov
mov
xor
jbe
xor
and
pop
stos
int3
adc
cltd
stos
mov
jne
in
dec
outsl
mov
adc
aas
loop
addb
or
call
xchg
add
cmp
cwtl
jge
mov
mov
movsb
fs
xchg
mov
out
std
or
xor
movsb
scas
call
jo
pushf
or
inc
test
adc
xor
movsl
push
cmp
daa
arpl
nop
lods
sub
inc
cmp
push
out
stos
imul
fdiv
cmp
mov
inc
fdivl
mov
xor
lcall
out
test
sub
xor
notb
jmp
in
xor
js
popf
sub
or
xchg
in
push
pop
jb
fwait
and
dec
or
sub
in
dec
jno
test
jnp,pn
cmp
push
add
pop
std
out
insb
pop
out
imul
les
fnstenv
std
enter
fcmovnu
addr16
into
cmp
ljmp
push
sub
xor
xchg
cmpsb
jae
or
lret
jle
lods
aaa
dec
pop
inc
xchg
jecxz
test
push
loope
ds
call
mov
pop
and
jp
mov
je
arpl
inc
movsl
inc
jl
inc
loopne
and
sub
sub
int3
iret
lret
mov
inc
sub
movb
push
inc
pop
repz
mov
inc
mov
sbb
addb
repz
ss
pop
aad
cmp
idivb
xchg
mov
inc
popa
adc
lret
movsl
pop
xor
mov
xor
sbb
push
mov
or
sub
add
xor
pushf
orb
xchg
inc
push
popf
rcrl
stos
jnp
lods
dec
movsl
cmc
das
sub
mov
into
fildl
push
imul
or
jmp
push
adc
in
repnz
in
test
push
xor
and
cmp
or
lret
jbe
and
divl
int
out
aam
movsl
lods
jnp
fs
jmp
push
pop
dec
jnp
cltd
out
push
sbb
inc
sub
xchg
push
mov
pushf
aad
adc
xor
fadds
xchg
push
fcomps
inc
data16
paddusb
call
in
lahf
pop
inc
mov
ja
cwtl
pop
add
mov
outsl
push
sti
fimull
add
lods
repz
sub
mov
repnz
cmp
out
jle
shll
jg
xchg
mov
rorb
shll
or
jae
movsb
cmpsl
mov
ret
rcrb
jae
sub
xchg
das
sub
movsb
arpl
or
sbb
outsb
lods
cmpsb
sub
daa
lret
js
mov
add
and
sub
test
sbb
push
sub
in
dec
fbstp
pusha
scas
pop
sbb
pop
mov
ja
add
dec
push
sub
cli
mov
inc
push
dec
or
inc
fmuls
add
xchg
ss
xor
aad
mov
dec
arpl
cmp
loope
sub
shr
pop
cmp
push
cmp
jmp
pop
testb
sarl
cmpb
inc
nop
fs
aas
cwtl
inc
ret
sub
jmp
je
pop
mov
xchg
daa
adc
xchg
test
sbb
mov
jns
jne
sub
out
sbb
mov
test
aas
cli
dec
sbb
pop
sbb
dec
loope
mov
shl
les
jo
jmp
fsub
inc
xor
mov
stos
js
mov
out
adc
aaa
shlb
and
lock
cmp
into
mov
dec
mov
shrb
mov
pop
std
jle
mov
and
call
cli
cmpsl
outsb
sbb
lcall
dec
lods
push
sbb
dec
and
imul
cmp
pop
shr
mov
mov
jecxz
lds
scas
sbb
sbb
ja
bound
clc
and
les
cmpb
xchg
loope
mov
mov
mov
lods
popa
mov
outsb
xchg
xchg
test
int3
sti
es
and
or
adc
insl
xchg
rcll
and
xchg
and
sbb
loopne
cmp
aaa
rep
out
jo
lds
jmp
mov
outsl
pop
call
mov
call
xchg
enter
xor
jge
adc
mov
loop
jno
out
mov
mov
aad
cmp
ret
lea
mov
in
jae
out
or
inc
lret
orl
lods
push
mov
jp
add
sub
pop
cmp
mov
push
fldenv
mov
and
jbe
lret
cwtl
mov
lahf
les
dec
iret
repnz
pop
jne
bound
flds
imul
push
inc
std
pop
cmp
dec
cld
test
xor
mov
adc
aaa
xor
mov
mov
xor
outsb
push
and
mov
lret
sahf
repz
xlat
push
in
imul
lret
in
push
or
pop
jns
fistps
mov
cmp
fstl
and
adc
jbe
jmp
shrl
pusha
dec
xchg
ljmp
ficoml
push
leave
push
xchg
sbb
adc
sbb
push
mov
mov
xchg
cmp
inc
xchg
xchg
add
mov
push
xchg
cli
je
scas
pop
psubq
and
mov
push
sti
cmpsl
sbb
clc
and
mov
or
xchg
cs
add
frstor
cltd
inc
adc
cwtl
mov
inc
lret
xor
inc
aad
rdpmc
jbe
cmp
cltd
stos
daa
or
cmp
mov
scas
pop
int3
nop
movsl
rorl
test
jmp
xchg
mov
loop
insb
pop
sub
sub
addr16
dec
call
lret
push
mov
jno
ror
imul
or
mov
lods
movsl
pop
daa
xor
popa
adc
movb
push
dec
int
add
aad
in
popa
sbb
mov
xchg
fists
add
xor
ljmp
cmp
fisttpl
mov
nop
loope
adc
cmp
mov
into
or
mov
jl
mov
mov
jle
subb
jns
in
sti
mov
push
add
mov
std
add
push
je
sub
cmp
or
pusha
add
push
adc
push
fidivl
stos
sarl
sbb
push
add
loope
mov
mov
dec
addl
lcall
fstps
mov
mov
fidivl
jns
ret
xor
sbbl
mov
add
ja
shrl
add
lds
test
push
pop
lock
or
stos
lods
add
and
lcall
test
ret
stos
pop
cmp
les
movsl
mov
and
sbb
dec
repz
lods
cltd
shrl
dec
mov
jb
cwtl
mov
push
jmp
push
and
mov
jg
jge
pop
and
ror
push
bnd
xchg
jecxz
pop
adc
leave
imul
sub
daa
or
pop
xor
pop
cwtl
add
inc
xor
pop
lock
adc
xor
push
fcmovnb
fisttpll
cmp
stos
inc
decb
push
mov
and
jae
jmp
adc
sub
pushf
adc
jecxz
outsb
jo
fldl
jae
fisubrl
push
or
xchg
sub
or
nop
mov
xchg
sub
sahf
rcrl
mov
lret
lret
mov
xlat
test
dec
mov
rolb
ret
lea
loopne
add
lock
je
adc
sbb
xchg
mov
adc
pop
fidivrs
xchg
ds
mov
ljmp
sub
daa
fcoms
test
cmp
mov
xchg
xor
bound
fistps
jb
out
add
and
cmp
sti
xchg
mov
jge
jae
sub
shlb
xchg
mov
loope
or
les
stos
orl
cs
cltd
cli
cmp
js
pop
jge
add
int3
xor
in
div
mov
sbb
lods
les
inc
lcall
test
and
sbb
js
add
les
out
xor
stos
dec
sub
or
mov
sti
add
and
ret
test
cltd
clc
stos
jle
js
cs
sbb
or
les
stos
push
push
mov
sarl
xchg
lahf
pop
mov
mov
push
movsl
std
dec
jbe
ret
sub
inc
and
sarb
andl
lret
inc
outsl
cmc
mov
push
mov
jns
mov
outsl
lods
inc
jo
andb
nop
daa
call
mov
cwtl
mov
fwait
pop
in
ja
push
test
lds
and
gs
mov
xlat
scas
push
scas
std
pop
xchg
out
xor
lods
fs
sub
lcall
daa
std
in
sti
pfadd
test
nop
dec
push
mov
add
ds
ds
pop
cmp
insl
lds
push
adc
mov
dec
rcrb
xchg
ja
cmp
jb
in
lods
jge
test
fadds
mov
push
mov
sub
pop
mov
pop
icebp
lds
jbe
ficoms
ss
cmp
add
stc
mov
jbe
mov
ret
xchg
mov
subb
in
mov
jbe
mov
dec
jb
in
cmp
inc
cmp
shll
outsb
add
gs
ss
cmp
sti
mov
inc
in
cli
pop
push
pop
adc
loop
push
jne
xor
dec
xchg
bound
push
dec
jbe
adc
cwtl
aas
cmp
jg
loopne
leave
and
scas
sahf
pop
cmp
xchg
cltd
ljmp
lock
fistpl
outsb
out
xchg
int
add
hlt
jns
pop
mov
xor
push
aad
cmp
inc
and
ljmp
sbb
push
movsb
dec
pop
cs
sub
xlat
and
jge
cmp
dec
ret
mov
mov
in
mov
test
push
loope
or
adc
inc
inc
push
adc
push
push
mov
xor
adc
aas
mov
ja
xor
and
lret
mov
xchg
cs
ret
pusha
leave
lret
lcall
and
xor
bound
push
repnz
add
push
lahf
and
pushf
xchg
jns
repnz
pop
cmp
aas
mov
mov
imul
mov
or
lds
mov
fimull
faddl
add
imul
in
mov
mov
ljmp
mul
sub
in
pop
jae
dec
jp
dec
pop
inc
cmp
sub
jne
mov
imul
rorb
mov
mov
sbb
or
fsubl
fidivl
leave
pop
jecxz
lret
or
jecxz
lret
pop
call
fiaddl
fs
fildl
sbb
ljmp
cmp
xchg
xchg
nop
sub
icebp
dec
push
dec
aam
cmp
mov
mov
jns
or
push
and
pop
sub
cmp
and
or
mov
daa
push
div
add
inc
fstp
aad
inc
push
mov
or
int
loopne
movl
cmp
mov
sub
xchg
cmpl
pop
mov
mov
dec
hlt
push
repnz
ja
inc
int3
adc
adc
mov
mov
pushf
jp
insb
fiadds
shlb
out
xchg
stos
or
das
imul
jnp
mov
aam
xchg
adc
out
mov
out
pop
aad
xchg
adc
ror
faddl
cld
add
mov
xor
mov
in
inc
in
addb
js
xor
sbb
fmull
in
push
add
xchg
jbe
mov
pop
loope
mov
repz
dec
xorb
popf
inc
scas
mov
dec
negl
dec
ja
test
hlt
int
rclb
fiaddl
ret
dec
in
or
loopne
mov
rcrl
pop
xor
jmp
or
and
pop
arpl
nop
leave
sub
mov
mov
or
mov
aad
cmpsb
stos
lahf
push
repz
mov
xchg
in
out
lods
push
jo
jmp
jl
cmpsl
lock
adc
push
cmp
sti
mov
imul
aas
fwait
lret
dec
cmp
push
lods
fsubl
nop
lea
jb
add
ret
lahf
mov
enter
pop
add
xor
out
sub
enter
ljmp
adc
std
mov
jno
out
pop
bound
jae
sbbb
dec
sti
adc
xchg
xchg
inc
repz
scas
in
add
mov
in
mov
in
mov
push
inc
xchg
and
adc
push
ds
push
leave
jne
idivl
push
hlt
lcall
dec
push
enter
movsl
jnp
cmpb
xor
int
daa
cmp
ret
jmp
outsl
scas
xchg
loopne
out
dec
xchg
out
mov
popf
mov
aam
inc
in
xor
mov
pop
rolb
push
loop
test
inc
push
sarb
icebp
cmp
ljmp
jns
cmp
pop
push
add
insl
lock
and
leave
fidivrl
pop
imul
cmpsb
xchg
aad
lret
cmp
push
xchg
mov
enter
add
push
insl
push
push
rolb
shrb
loope
jo
and
adc
cmp
mov
mov
fucomip
insl
cmp
loopne
sub
xchg
sub
inc
cmp
imul
rorb
push
push
fwait
loope
rorl
xor
lahf
sbb
scas
jmp
bound
je
dec
jno
jnp
aam
out
test
test
jmp
insl
cwtl
out
movsw
mov
inc
mov
mov
jmp
fistpll
lahf
pmulhw
mov
push
dec
stos
cltd
sub
cmp
sbb
add
lcall
mov
fwait
sbb
or
mov
cmpsl
adc
push
xchg
pop
ret
andl
loop
test
lea
and
mov
rcrl
jne
ss
cwtl
stos
das
jno
cld
addr16
shl
fbstp
mov
test
sub
into
or
leave
push
or
iret
loop
push
out
popa
pop
push
xchg
add
lahf
shrl
jno
fisubrl
mov
mov
imul
xchg
stc
outsb
xor
fwait
or
jo
mov
push
adc
cmp
mov
in
mov
or
mov
popf
jae
stos
push
or
xlat
insb
pop
mov
or
dec
adc
clc
mov
fstps
sbb
jle
cmp
mov
test
sub
dec
mov
mov
fadd
add
les
insl
out
dec
fdivl
jecxz
xor
unpcklps
xor
mov
cmp
push
fdivrs
in
out
mov
orb
mov
test
jg
lods
cwtl
decl
lods
in
push
icebp
test
ficomps
push
mov
jae
ds
mov
lret
cs
add
cmp
sub
mov
mov
and
xchg
push
jno
xchg
lea
vucomisd
sub
nop
jno
sbb
sub
xchg
push
sbb
je
clc
add
sbb
adc
xchg
imul
jg
in
cmp
push
repz
xor
or
and
sbb
lea
push
subl
pusha
pop
and
fidivs
cmp
data16
ficoml
cmp
pop
fcomip
es
into
lret
inc
es
aam
rol
repnz
push
adc
repz
je
cmpsb
daa
jge
fisubrl
jg
stc
xchg
repz
out
fistpl
ja
loope
xor
rolb
push
jle
adc
test
push
scas
jecxz
jb
and
pop
and
cmp
mov
outsb
or
div
mull
out
cltd
test
mov
xchg
test
pop
adc
dec
adc
pop
sbb
and
and
or
jne
insb
xor
out
aad
sbb
inc
mov
jbe
mov
clc
adc
dec
jbe
fmull
icebp
lods
inc
mov
mov
scas
jmp
push
inc
adc
and
push
lods
popa
fs
xor
fsubrl
fsts
xchg
sti
dec
dec
jno
sub
mov
add
cmp
jg
or
adc
xor
sarl
dec
aad
push
xchg
inc
xor
imul
fldcw
mov
imul
xlat
sti
lahf
out
rcl
lods
and
mov
inc
enter
scas
push
loope
push
out
jl
jmp
jge
pop
test
mov
xchg
xorb
fdivl
xchg
lods
pop
sub
arpl
rorb
imul
pop
insb
insb
sbb
mov
pop
inc
push
ret
jecxz
aaa
fldenv
rcrl
and
mov
jmp
cmc
pop
push
xlat
ja
fmull
fsts
cmc
out
inc
sbb
push
js
adc
mov
out
movsb
jle
insl
jne
push
xchg
outsl
cmp
and
sbb
inc
insb
dec
xchg
xchg
mov
adc
xor
and
bnd
pop
imul
cmp
mov
dec
nop
mov
sti
insb
mov
rcll
push
xor
inc
pop
sub
test
test
icebp
xorb
cmc
and
stos
jp
push
popf
cld
cs
movsl
mov
or
outsb
inc
pop
test
add
loopne
or
add
mov
jge
jnp
shlb
inc
push
popa
aad
dec
pushf
xor
and
sub
dec
movsb
sbb
js
imul
add
mov
test
inc
mov
or
enter
sbb
jp
aas
mov
notb
test
fisttpl
mov
add
add
xchg
stos
and
mov
xor
clc
push
push
into
jno
rclb
divb
xlat
sbb
loopne
cmpsl
mov
out
sub
scas
cmpsl
push
clc
xlat
jbe
cmp
sbb
pop
loope
cmp
mov
and
clc
inc
dec
mov
inc
das
loopne
in
notb
add
lret
mov
mov
mov
insl
cs
or
sbb
movsl
push
push
and
xchg
shrb
lock
xchg
lods
push
dec
mov
loope
daa
push
imull
pmulhuw
jo
pop
pop
pop
lock
mov
and
adc
push
sahf
orl
add
pop
push
std
adc
call
cmpsl
adc
pop
adc
dec
gs
inc
pop
in
pop
push
xor
add
loope
loop
push
mov
scas
lock
lret
cwtl
cltd
jecxz
imul
xor
fbstp
cld
push
inc
out
arpl
pop
pop
mov
sahf
pop
ficompl
repz
in
cld
testl
insb
rorl
in
mov
mov
movsb
pushf
mov
sbb
jns
mov
xor
addl
das
rclb
ja
jmp
repnz
or
mov
cli
sahf
push
xchg
ret
cmp
or
out
mov
dec
mov
std
add
mov
dec
imul
mov
xchg
fcompl
lret
dec
push
repnz
or
arpl
imul
repz
sbb
out
add
nop
sub
mov
imul
pusha
push
sbb
aam
push
call
daa
ret
push
push
sub
and
sbb
cmp
jp
push
mov
jl
mov
lcall
in
gs
popf
pop
mov
movsl
inc
sbb
pop
xor
in
jmp
stos
in
fbstp
dec
movsb
mov
dec
push
xchg
mov
and
fucompp
pop
shll
jb
lahf
movsb
imul
out
cmpsb
or
jmp
mov
adc
aas
repz
leave
lock
cli
outsb
jl
jg
jb
jmp
in
jecxz
push
ja
inc
mov
push
cmp
dec
and
ret
push
cmp
xchg
mov
jnp
mov
in
mov
aam
mov
inc
popa
dec
iret
and
enter
lret
jp
lds
scas
andl
mov
and
lcall
stc
daa
mov
arpl
push
pop
fs
sbb
sbb
xor
es
test
stc
mov
mov
sahf
rcrl
jbe
mov
sub
fnstenv
pop
int3
inc
mov
and
dec
lock
ss
ffree
and
xor
pop
pop
ljmp
jmp
xchg
xor
inc
jecxz
mov
lcall
repnz
cmp
sti
dec
jp
mov
cmp
adc
xchg
arpl
movsb
add
xchg
xchg
hlt
push
add
bound
xchg
rolb
push
or
lea
stos
shrb
lret
inc
gs
dec
mov
dec
lahf
mov
jb
repz
lock
movsl
jg
inc
mov
dec
and
ljmp
push
repnz
pop
lods
neg
mov
jnp
mov
stc
daa
hlt
hlt
fwait
int3
or
xchg
bound
ja
aas
jbe
sub
sub
jb
jns
pusha
mov
and
sub
stc
aad
fbld
pop
in
jbe
addl
and
fadd
sti
cwtl
jae
inc
addb
fwait
ljmp
shlb
adc
mov
shrd
ss
sub
movsl
fcomi
sbb
dec
pop
in
jp
fisubl
clc
aad
call
add
or
pop
ret
enter
jbe
dec
xor
je
jae
sbb
and
orl
mov
les
dec
lock
out
outsl
insb
mov
mov
mov
or
and
cmpsb
or
jp
mov
inc
mov
lahf
sbb
stos
shrb
rolb
loop
negb
in
ret
stos
sub
dec
or
int3
push
mov
pop
add
mov
or
ret
movsl
addr16
xchg
shl
cmpsb
jae
add
sub
add
and
mov
xchg
sub
adc
loop
adc
jmp
xor
adcl
push
shl
adc
xor
pusha
into
lret
adc
loope
push
je
jno
mov
jge
mov
adc
ret
add
std
fcoml
lret
add
mov
xor
and
mov
cli
or
test
jmp
mov
pop
push
dec
pop
xchg
js
mov
stos
std
movsb
dec
gs
es
out
mov
out
popf
imul
cwtl
xchg
pop
inc
sbb
in
lods
adc
adc
xlat
or
adc
cmc
jne
fwait
sbb
sub
add
inc
rcrl
cmc
cmpsb
jmp
movsb
mov
push
adc
arpl
dec
adc
cli
add
add
imul
jo
std
pop
add
mov
lock
xor
addr16
out
mov
out
sahf
shl
mov
ljmp
scas
fisttps
xchg
pop
xor
jno
cmp
pcmpgtb
pop
lcall
sub
adc
or
add
push
jle
and
fwait
dec
and
scas
cmp
mov
adc
shll
mov
jmp
aam
dec
sbb
iret
mov
mov
inc
sub
xor
icebp
iret
and
std
loop
js
or
jg
enter
sti
sti
jmp
xchg
imul
shlb
mov
call
dec
add
repz
sbb
filds
gs
loope
cltd
shl
mov
pusha
cmp
mov
pop
xor
pop
mov
push
movsb
adc
push
fadds
popa
sbbb
in
mov
rcrl
push
cltd
pop
jmp
dec
dec
lods
pop
imulb
sahf
cmpsb
mov
dec
mov
adc
mov
or
and
jg
mov
test
test
cltd
push
std
jl
xchg
add
arpl
push
sbb
loop
rcl
enter
push
fidivs
mov
add
xor
stc
inc
pop
mov
jmp
cmp
inc
jne
loopne
sbb
aas
mov
jne
and
mov
cmp
mov
mov
dec
push
shll
mul
sahf
fsts
jg
in
ss
and
dec
push
push
out
pushf
xchg
and
fsubrl
dec
loope
add
inc
test
in
xor
aaa
cmc
jne
out
test
imul
sbb
popa
rcrl
stc
inc
pusha
insl
jle
and
push
lods
jg
push
mov
and
xchg
xchg
xchg
sub
movsl
repnz
cmpsl
iret
sbbb
popf
sti
xchg
jmp
push
jecxz
aaa
sahf
in
xchg
adc
aas
jl
cmp
stos
shl
fmuls
clc
xchg
pop
dec
jl
ret
lea
arpl
insl
mov
orb
sahf
xchg
pop
push
cwtl
add
cmpsb
aaa
mov
sbb
popa
gs
add
mov
stos
pop
mov
idivl
push
pop
lret
mov
xchg
pop
mov
hlt
xor
frstors
mov
stc
fidivrs
mov
xor
imul
add
xchg
xchg
and
push
call
test
scas
inc
shll
es
mov
enter
test
cmp
lods
mov
inc
popf
xchg
add
cmc
stos
outsl
jbe
mov
cwtl
xchg
inc
stc
mov
popf
adc
sti
cmp
jno
or
xchg
jns
xor
adcb
imul
test
pop
sbb
rorb
test
or
insb
or
int3
popa
jle
mov
inc
xchg
iret
lds
pop
sub
addl
mov
jecxz
inc
mov
xchg
add
aaa
xchg
stos
mov
repnz
xchg
push
push
ja
pop
sub
ret
addr16
repz
push
inc
fucomp
sub
dec
xchg
mov
roll
xchg
adc
cmp
pop
pop
imul
outsb
mov
xor
sbb
mov
xor
dec
fdivp
mov
sub
push
cmpsb
setne
sub
sub
pop
loopne
cs
scas
test
push
cmp
cmp
jl
mov
push
dec
mov
push
loop
daa
sub
fiaddl
cmp
sahf
push
leave
repnz
pop
lret
mulb
xchg
mov
insb
mov
add
mov
inc
xchg
push
in
push
jno
popf
repz
in
sub
jae
inc
and
fadds
lds
dec
jo
lods
test
adc
adc
cs
xor
jne
xor
ret
enter
call
call
sbb
xchg
mov
iret
pop
cltd
inc
xor
jns
loope
push
mov
fwait
loopne
push
jns
mov
cmpsb
xlat
cmp
in
pop
test
dec
or
iret
jo
cmp
or
jmp
sbb
dec
scas
stc
outsl
call
mov
jp
test
mov
aad
cmp
push
jg
insb
mov
jo
test
cli
fs
add
pushf
cld
or
adc
out
push
pop
into
inc
push
int3
cli
daa
cs
push
fwait
ss
mov
mov
jmp
xchg
dec
pop
jmp
add
movsl
dec
rolb
cmp
dec
pop
xchg
pop
push
leave
jg
roll
idivl
and
or
mov
iret
inc
divl
outsl
cmpsl
fsubrl
lea
mov
dec
test
xchg
jbe
ds
mov
imul
movsl
dec
jns
test
inc
inc
in
hlt
cmc
sbb
repnz
add
add
clc
leave
mov
push
dec
in
mov
in
test
mov
test
pop
ss
adc
sbb
int
and
divb
shlb
lret
sub
leave
xchg
icebp
shl
mov
cmp
adc
add
xchg
or
mov
cmpb
sub
push
andl
test
xchg
clc
cmpsb
pushf
adc
dec
jl
stos
lock
dec
jae
or
cs
gs
outsb
adc
and
jmp
movsl
cmp
lods
adc
push
mov
pop
pop
or
mov
push
jae
ljmp
rcll
in
daa
xor
or
pop
pop
cmp
xchg
pushf
lret
xchg
mov
cld
inc
mov
mov
test
sub
outsb
sbb
insl
cmp
lcall
por
jg
lds
imul
sub
jmp
sub
or
jne
adc
mov
sbb
loopne
je
pop
hlt
out
orl
xchg
dec
js
test
and
cld
jp
outsl
sbb
data16
ret
mov
bound
mov
das
jns
pushf
mov
pop
fcomip
cld
sbb
xchg
movsl
add
sub
sbb
dec
ljmp
cli
dec
mov
push
cmpsb
cltd
cltd
repnz
or
cltd
pop
dec
out
sti
adc
pop
cmp
mulb
mov
sub
sarl
xor
mov
outsl
or
or
dec
das
aad
ret
push
lcall
fmull
es
aad
jle
dec
lods
sbb
loop
push
test
mov
or
pop
pop
sbb
hlt
jmp
insb
xchg
inc
inc
cmp
mov
int3
or
inc
push
mov
add
cs
xchg
xor
leave
jbe
imul
push
mov
lock
inc
jp
je
jg
jns
xchg
push
jbe
int3
cmp
das
clc
mov
and
lods
xchg
fidivrs
insb
add
clc
mov
and
and
ja
add
jl
xchg
sahf
cmp
lods
fisubrs
push
xchg
mov
mulb
mov
fmulp
adc
xor
xor
mov
popf
outsb
adc
adc
jp
cmc
sub
fcomps
dec
mov
movsb
mov
mov
stos
and
cmp
enter
pop
mov
imul
cli
insb
mov
bound
movsb
hlt
aaa
cmc
aad
dec
mov
pop
cld
inc
movsb
inc
aaa
mov
jecxz
js
fldenv
and
pop
pusha
std
jne
and
inc
push
pushl
into
lock
inc
xor
jg
cmpsb
sub
popa
mov
inc
and
divps
cmpl
lcall
sbb
imul
adc
jae
sub
sub
push
add
xor
sub
js
nop
adc
add
test
push
imul
test
insl
popa
subb
dec
ds
jb
jb
or
mov
push
repz
or
lahf
addr16
out
inc
std
ret
arpl
cmp
test
insb
jno
out
stos
jbe
fcoml
fimuls
push
repz
ss
xchg
dec
add
les
mov
aas
pop
insb
add
lds
icebp
into
in
repz
mov
xor
jo
pop
inc
cld
add
xor
cs
dec
mov
repz
fimuls
adc
jmp
push
dec
sub
mov
jge
mov
ficoms
lods
movsl
mov
imul
shrb
xor
adc
call
cmp
fsubs
sbb
repz
mov
push
pop
push
pop
das
sub
sub
push
repz
pop
cli
lea
repz
lock
cwtl
in
jae
mov
mov
cltd
into
js
pop
cmp
push
repz
pop
popa
fidivrl
pusha
sbb
scas
fidivs
pop
sub
outsb
sahf
incb
adc
or
out
das
das
incl
sbb
fcoml
loopne
and
jo
and
subb
bnd
mov
push
or
sbb
mov
test
cli
pop
mov
lret
lods
dec
cmp
iret
add
mov
jl
pushl
test
shlb
add
and
loopne
xor
xchg
or
xchg
mov
mov
mov
jns
lahf
ds
iret
xor
dec
mov
add
or
sub
push
dec
ljmp
outsl
loope
sub
daa
push
out
mov
iret
mov
je
add
popa
push
cmc
xchg
and
add
xchg
ret
pop
and
push
or
repz
pusha
test
xchg
adc
nop
inc
lret
mov
sub
insb
mov
xchg
std
cmpsl
rcll
pop
and
in
adc
lret
pop
pop
pop
push
lahf
mov
pop
aaa
xchg
inc
push
xor
jg
mov
xor
add
jg
mov
jl
cmc
js
lcall
mov
mov
xor
inc
stc
inc
addb
mov
xor
dec
cld
pop
je
out
das
test
jg
cmc
scas
test
shl
inc
lcall
inc
test
repnz
inc
lret
push
out
xchg
les
dec
adc
in
enter
into
stos
in
jge
outsl
inc
and
es
scas
sbb
insb
or
pushw
push
add
orl
ret
outsl
add
sahf
aas
jmp
lods
xlat
adc
ficoms
or
in
sbb
imul
mov
stos
icebp
fadds
es
sub
cli
mov
xor
push
push
out
cmpsb
pop
icebp
mov
push
xchg
movsb
lret
xor
iret
test
or
pop
xchg
jo
pop
sarl
jmp
xorl
push
and
aam
leave
cli
or
popa
sahf
hlt
add
push
adc
ja
mov
and
cmp
mov
mov
pop
push
std
push
iret
fdivrl
mov
sbb
dec
pop
in
or
adc
jne
xor
mov
std
call
mov
inc
lds
and
cmpb
cwtl
cwtl
notl
pop
jns
xor
aaa
push
lds
fwait
repz
push
or
pop
test
in
or
in
jno
mov
dec
xchg
psraw
pop
mov
outsb
push
adc
inc
popf
shl
dec
fs
xor
pop
bound
xchg
cmp
lcall
outsb
lods
jnp
dec
xlat
pop
push
iret
xchg
adc
rcll
pop
cmp
jmp
cltd
and
out
sahf
dec
enterw
fstps
lods
xor
sti
add
cmp
inc
cmp
and
push
sbb
mov
dec
pop
lret
mov
cmp
das
push
add
scas
out
ja
jl
in
les
cmp
push
push
cmp
cmpl
sub
hlt
std
mov
out
out
pop
pop
shlb
cmp
inc
pop
mov
inc
xchg
pop
pop
and
sbb
lret
cmp
test
fwait
jns
fcmovb
fidivs
pop
call
shll
lahf
je
bound
sarb
pop
aaa
jno
cmpsb
fbstp
cli
push
jo
jnp
mov
cmpb
lcall
rclb
jmp
push
rep
sbb
fmuls
push
lods
lock
rcrb
cmp
sub
mov
jg
es
mov
sarl
in
or
repz
pop
xchg
fldcw
ss
das
dec
pop
add
push
je
fmul
loop
into
xchg
fs
loope
loopne
or
andl
sub
pushf
mov
ljmp
fwait
js
jo
fidivrs
and
les
cld
mov
inc
push
fwait
es
mov
pusha
ds
ret
fadd
mov
icebp
das
adc
pop
inc
jmp
pushf
mov
sub
stos
add
inc
xchg
sar
shrb
sub
sub
mov
js
push
imul
jno
scas
or
imul
cli
cmpsb
xchg
sbb
push
xchg
das
shlb
pushf
popa
cmp
lock
ret
fsub
pop
fstp
enter
mov
test
xchg
fucomi
les
hlt
jle
scas
pop
mov
test
pop
mov
xchg
stc
out
popf
in
dec
sbb
inc
lea
in
sti
insl
fsubrs
cmc
dec
jle
inc
jle,pt
clc
cli
mov
cmp
dec
push
xlat
jle
cli
pop
dec
adc
jno
dec
pop
jle
inc
imul
ror
or
sbb
mov
out
movsl
push
mov
pusha
rorb
call
std
mov
cli
inc
sub
mov
out
movsl
cs
or
mov
test
das
pop
mov
sub
xchg
lea
cmpsl
aaa
inc
ja
shrb
inc
ret
lock
imul
xchg
ss
xchg
out
mov
and
call
dec
mov
cmp
ja
ljmp
xor
dec
jge
inc
mov
cmp
pop
cltd
mov
jae
xchg
mov
jg
xlat
and
pop
inc
adc
into
inc
stc
sbbl
add
pop
push
mov
cmp
ss
fimull
push
xchg
jg
scas
fsubr
pushf
frstor
adc
sub
jae
lret
out
sbb
xchg
ljmp
xor
dec
mov
sub
mov
xchg
xor
inc
arpl
fwait
inc
popf
pop
test
cltd
dec
out
mov
mov
lret
xor
into
inc
mov
insb
sahf
rcl
mov
out
in
and
xor
clc
xchg
repz
popf
pop
xor
pop
jmp
dec
sub
xchg
out
jge
hlt
lret
cmp
shll
xor
daa
out
pop
mov
push
imull
adcl
jecxz
cli
or
cmp
daa
pop
sub
fwait
mov
dec
pop
gs
sbb
fildll
mov
xchg
cld
fdivs
and
sahf
gs
imul
es
cmp
mov
loop
into
xor
inc
aam
push
imul
add
outsb
arpl
xor
cmpsl
xchg
mov
dec
movsb
imul
sahf
mov
push
sub
lret
add
pushf
fistpl
lods
and
jbe
inc
icebp
add
push
sub
lcall
mov
dec
adc
xchg
mov
push
xchg
jb
mov
pop
sbbb
lds
call
xchg
sti
pop
fcomps
xchg
push
ret
and
push
dec
ret
aam
outsl
in
adc
stos
cmp
inc
cmpsl
hlt
push
mov
inc
xchg
dec
jne
shlb
add
or
das
cmc
xlat
jmp
dec
icebp
add
in
jb
lock
fdivl
js
dec
outsl
jmp
push
jne
dec
rcrl
pop
push
mov
leave
fmuls
fdivrs
xchg
dec
repz
leave
ret
mov
inc
add
rcr
test
xor
add
call
incb
sub
lods
xchg
jns
pop
sar
lahf
shlb
mov
fwait
sbb
sbb
push
cmp
mov
sahf
pushf
ret
jne
insb
stos
outsl
mov
pop
inc
aaa
inc
mov
dec
mov
jle
dec
xchg
mov
fcmovnbe
pop
inc
cmp
int
movsb
mov
loopne
jg
rcrl
dec
stos
cmpsb
ret
int
mov
pop
int
movsb
in
ljmp
leave
sti
mov
mov
fldt
iret
inc
xchg
ljmp
xchg
sbb
sahf
sbb
aad
test
inc
xchg
negl
dec
jno
mov
dec
sub
add
clc
mov
jmp
sbb
mov
adc
mov
pop
icebp
add
or
jne
push
sub
mov
adc
cwtl
dec
movsl
dec
insl
or
or
jg
imul
ja
ret
in
jg
dec
orb
stos
add
push
fucomp
and
movsb
push
jle
push
push
repnz
pop
cld
shlb
outsb
push
aas
aad
dec
mov
xor
jnp
fscale
xchg
jle
out
in
xchg
repnz
adc
sub
jnp
das
in
sti
push
xchg
daa
mov
jle
jo
dec
shlb
dec
inc
xchg
inc
pop
inc
stos
push
mov
jne
push
xchg
inc
jp
mov
push
iret
xor
aaa
sarl
cwtl
pop
enter
push
cli
jle
les
jbe
ss
or
adc
rol
dec
inc
push
push
jbe
lds
int3
mov
loop
inc
push
cmp
mov
mov
add
sbb
jecxz
lds
pop
dec
jns
and
enter
mov
or
insl
xchg
clc
subl
scas
comiss
pop
pushf
insl
and
inc
mov
pop
xchg
inc
out
bound
push
enter
adc
insl
mov
add
ja
in
mov
loopne
pop
and
sub
mov
cmc
add
gs
push
fidivs
mov
sub
test
xlat
jne
xor
int3
mov
lds
cs
jb
data16
mov
jns
ja
fptan
mov
pop
adc
aad
push
inc
xlat
into
or
scas
out
xchg
cmc
push
push
pop
mov
lods
out
daa
jno
das
sub
pop
test
cmc
insb
bound
push
lret
hlt
mov
dec
outsl
push
mov
jno
xorl
lock
mov
jo
sbb
push
xchg
xchg
sbb
jb
out
cmp
push
xchg
stos
push
das
adc
cmp
mov
arpl
adc
jbe
es
or
cmp
leave
push
mov
mov
push
dec
je
push
fcmovne
mov
xchg
sbb
cmpsl
out
popf
bound
addr16
mov
lock
ret
xlat
add
mov
inc
add
mov
mov
sbb
adc
div
mov
fists
jns
xchg
mov
fistps
xor
inc
xchg
sub
mov
xor
mov
add
jmp
insl
mov
fcoml
in
cmpsl
fpatan
xchg
bound
outsl
mov
add
ret
fildl
cwtl
aaa
aaa
ret
cmp
adc
sbb
fisubl
shr
inc
mov
pop
push
sbb
or
stos
mov
es
mov
jnp
js
add
enter
push
in
popa
jge
sbb
mov
mov
inc
adcl
inc
jns
aaa
mov
shlb
bound
cmp
or
sub
lret
fwait
cwtl
jbe
stos
nop
mov
sub
repnz
mov
mov
icebp
fnsave
movsb
xchg
mov
dec
push
and
rorb
sbb
aas
push
sbb
cmpsb
and
inc
cmp
shll
mov
mov
or
pop
jp
mov
dec
sub
xor
dec
adc
pop
cli
mov
scas
test
in
inc
add
loope
daa
push
push
mov
pop
roll
outsl
mov
and
mov
test
dec
mov
nop
lret
imul
ds
out
testb
push
push
adc
jge
inc
jne
popa
sub
mov
pop
fwait
and
leave
icebp
xor
jl
pop
or
cmpsb
jo
aas
in
js
lret
jbe
sbb
scas
lods
pusha
mov
adc
jno
js
sbbl
aad
ljmp
js
nop
mov
fisubrl
or
xchg
mov
pop
clc
loop
sub
or
jecxz
or
mov
insl
xchg
ja
or
push
and
push
rcll
or
in
outsl
aaa
fmul
push
out
leave
orl
mov
push
add
cld
loopne
sbb
pop
mov
mov
lods
inc
insb
xchg
pop
les
mulb
movsb
repz
or
pop
jo
jp
and
les
iret
clc
mov
sarb
mov
add
lds
add
mov
and
mov
testb
jb
lcall
out
jl
jp
addr16
mov
and
cmpsb
add
arpl
push
in
and
jb
loope
pop
movsl
and
cmp
std
mov
mov
call
sbb
shlb
inc
or
pop
pop
sbb
pop
adc
mov
sub
push
or
sbb
dec
xor
idivl
rcr
fmuls
scas
addr16
mov
or
stos
xchg
lods
xchg
add
mov
push
or
and
mov
mov
cmp
inc
mov
loopne
fcoms
cmpsb
mov
cmp
sub
aas
pop
sti
je
and
loop
inc
push
or
lret
jecxz
adcb
fstps
rorb
filds
mov
mov
cs
jmp
arpl
mov
mov
and
scas
out
pop
inc
inc
leave
cmp
fimuls
fisttpl
pop
rolb
and
jg
sbb
mov
das
in
mov
bound
jle
jp
imul
dec
mov
shrl
and
lea
insb
dec
aam
dec
ds
xor
in
addb
xor
cmc
jae
add
adc
push
cmpsb
hlt
cmpb
dec
lods
pop
clc
lods
jae
loopne
inc
shl
shlb
loop
push
fisttpll
cmc
mov
test
fimull
test
pop
mov
mov
mov
and
pop
xlat
movsl
or
popf
pop
mov
lret
loop
arpl
mov
cli
mov
sub
dec
enter
insl
xchg
addr16
pop
lret
insl
insb
add
lods
xchg
or
push
iret
movsb
mov
cmp
orl
shll
ss
test
jmp
xchg
das
enter
and
inc
xor
repz
fcmovnb
shll
mov
dec
and
daa
mov
aaa
nop
lods
lahf
xchg
xor
ss
push
mov
push
orl
lods
xor
or
xor
sbb
lret
jno
mov
or
jbe
clc
lods
sub
dec
in
call
jle
sbb
cld
iret
dec
jbe
jae
daa
and
dec
inc
cs
pop
rcrl
out
add
inc
test
in
setne
hlt
aam
xor
lods
pop
stos
aad
or
and
cmp
das
inc
jns
imul
sbb
and
loopne
ret
and
mov
ret
mov
xchg
jo
mov
add
mov
rcrl
mov
or
lret
cld
decl
cmp
jbe
pop
in
lcall
lahf
daa
mov
or
movsb
lods
xor
and
push
mov
ret
nop
outsl
mov
xor
mov
test
dec
jecxz
dec
inc
popf
aad
and
jne
or
xor
arpl
and
imul
xchg
gs
rclb
and
notl
jae
mov
dec
arpl
mov
sub
call
popf
out
adc
pop
pop
mov
push
xchg
mov
ds
dec
test
pop
ficoml
add
dec
sbb
push
push
sub
out
cmp
sahf
jge
test
mov
out
jbe
mov
repnz
outsb
outsl
mov
push
loope
and
push
clc
fidivrl
fsubs
icebp
outsb
push
lock
push
push
cmp
fiadds
sub
push
sbb
mov
dec
cmpps
jmp
push
lods
addb
adc
pop
rolb
xor
es
out
test
xorb
fs
cmp
mov
jge
or
jb
add
pop
test
cwtl
pusha
addl
mov
push
jge
das
insb
popa
clc
mov
push
xor
ror
xlat
mov
cld
ret
aad
mov
imul
neg
push
out
mov
jbe
dec
cmp
aad
insb
cmp
cmc
lret
das
in
mov
jnp
rcr
loop
adcb
xchg
stos
inc
movsb
push
mov
jns
insb
adc
sbb
mov
lods
jnp
sub
dec
cmp
sub
or
mov
pop
dec
sarb
dec
adc
out
stos
mov
leave
and
sub
imull
inc
into
inc
and
cwtl
xor
pop
adc
or
jae
aas
and
fwait
rclb
addr16
dec
loop
inc
imull
push
mov
inc
adc
stos
data16
test
testl
pop
pop
or
bound
inc
outsb
xchg
iret
mov
icebp
pop
outsl
cmp
mov
cmp
js
sub
insb
stos
add
movsb
clc
jno
sbb
pop
hlt
pop
mov
dec
push
push
dec
mov
cwtl
inc
sub
adc
scas
cmp
mov
xchg
lcall
xor
push
push
add
ljmp
cmp
enter
outsb
cmp
mov
pushf
adc
lds
scas
ret
jne
cmp
loop
xadd
inc
push
ret
dec
pop
push
lds
and
faddl
pop
add
push
loop
aad
cmpsb
out
jle
xor
mov
arpl
xchg
mov
repz
push
push
xor
scas
adc
xor
out
sub
cld
insb
add
es
fstps
add
push
daa
mov
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
push
adc
dec
pop
xchg
sub
cmp
jle
dec
push
ja
cmc
sbb
movsl
adc
enter
addr16
dec
pushf
addr16
insl
cmp
dec
hlt
das
std
out
adc
mov
inc
loope
mov
popf
cmc
lcall
and
js
movsl
aaa
mov
scas
push
dec
fsubs
aaa
inc
and
push
or
fdivrs
jne
aas
xchg
lahf
cmp
daa
xchg
push
aad
arpl
mov
std
jp
add
into
jno,pn
cs
out
sub
ss
outsb
in
dec
das
dec
adcl
int3
imul
lds
push
xchg
xchg
bound
adc
pop
mov
xlat
ffreep
pop
mov
push
out
jmp
and
stos
into
int
sbb
inc
xchg
pop
dec
aam
dec
dec
sar
stos
fs
loopne
aam
pop
cmp
shl
add
leave
xchg
fldenv
enter
sub
and
gs
stos
mov
dec
sarb
out
and
sbb
mov
adc
js
mov
addr16
outsl
jno
xchg
sbb
imul
adc
jnp
int
and
dec
cmp
pop
xchg
ja
mov
outsb
gs
gs
js
mov
xchg
push
push
lds
mov
pusha
pushf
sbbl
out
out
cltd
hlt
xchg
fs
int
movb
xor
cmp
cli
mov
fstl
push
dec
dec
stos
push
scas
stos
icebp
mov
push
xchg
sbb
mov
mov
push
jle
lcall
fsubrs
nop
aaa
cld
mov
cmc
daa
sbb
cld
ror
into
rcl
pop
mov
sbb
jae
lahf
shll
inc
mov
xchg
xor
repz
and
cmpl
lea
sub
cli
add
cmp
mov
les
sub
sub
and
pop
adc
mov
setns
out
test
dec
cli
aad
popf
mov
and
cmp
sbb
dec
dec
pop
mov
mov
xor
add
mov
push
test
fidivrs
lds
inc
push
dec
push
push
or
xor
and
lea
push
dec
into
scas
nop
sub
decb
mov
out
xor
xor
rcrl
sbb
sub
jne
pusha
aaa
adc
arpl
pop
cmp
mov
movl
mov
in
add
jae
outsb
loope
mov
negl
jo
test
dec
cld
ljmp
movsb
dec
imul
sarb
iret
jle
cwtl
or
fnstcw
pop
repz
leave
test
lcall
jl
mov
ljmp
sub
mov
inc
je
sub
jo
lea
js
dec
es
aas
xor
sbb
or
mov
aas
fs
sbb
inc
adc
nop
dec
insl
incb
pop
in
mov
dec
and
adc
pop
add
mov
push
inc
test
das
and
movsb
cld
mov
xchg
or
int3
inc
mov
imul
and
or
sub
lcall
aam
inc
out
mov
int
into
mov
jle
rcr
imul
popf
lods
pop
dec
inc
add
dec
pop
mov
ss
out
and
inc
sub
cs
shlb
mov
dec
mov
inc
addb
loopne
and
fs
lods
cwtl
dec
js
xchg
cmp
mov
ror
dec
sahf
cld
mov
sub
hlt
scas
push
cmpsb
lds
loopne
mov
mov
add
xchg
mov
mov
rcrb
aad
out
mov
rclb
cmp
pop
out
dec
and
clc
cmc
enter
pusha
insl
ret
cmp
xor
pop
and
mov
mov
test
add
dec
jo
fstpt
and
jnp
xor
xchg
lret
add
in
clc
imul
nop
sub
mov
and
imul
xor
mov
pusha
ljmp
ret
sub
lods
mov
ret
in
xchg
inc
mov
pop
inc
pop
popa
enter
test
aas
lods
dec
das
inc
jp
lea
outsl
mov
sub
dec
mov
mov
cmp
add
or
mov
jo
dec
mov
dec
pop
js
and
out
pop
cmp
mov
xor
push
mov
cmp
notl
jno
and
mov
ret
arpl
mov
mov
or
pop
sub
mov
in
enter
jne
mov
dec
lret
mov
jno
in
lahf
mov
ret
push
arpl
mov
sarl
adc
lock
outsb
mov
aaa
mov
mov
roll
and
and
sbb
js
bound
popa
call
ret
push
xchg
call
or
lret
jae
inc
fcmovne
pop
adc
xchg
int
xchg
ja
cltd
cmp
and
xchg
movsl
jecxz
icebp
mov
leave
repnz
arpl
test
add
pop
pushf
push
pop
xor
lods
inc
jne
add
xor
push
hlt
dec
dec
popf
inc
xor
fcoml
aad
cmp
sub
sbb
js
pop
xlat
add
fists
and
mov
pop
in
addr16
gs
sbb
test
cmp
lods
inc
push
nop
ret
aam
cmpsl
sub
xchg
dec
or
push
pusha
add
mov
ja
inc
mov
mov
mov
sbb
inc
add
push
in
sub
imul
sahf
lock
rclb
mov
cmp
xor
leave
out
cltd
cmp
lods
pop
mov
jno
adc
inc
xchg
xchg
in
sbb
mov
push
mov
cld
jo
int3
ret
shll
adc
push
std
aad
push
and
out
push
mov
cltd
cwtl
shlb
push
insb
xorb
sbb
imulb
sub
mov
add
data16
jo
test
pop
scas
mov
add
mov
test
loope
jae
cmp
xchg
dec
stos
es
out
mov
into
lea
cmpsl
xchg
aam
xor
in
xchg
push
jg
int3
cmp
int3
mov
push
mov
decb
dec
imul
or
cmc
sbb
fcos
cld
gs
dec
inc
jno
adc
mov
rolb
push
sub
and
rcll
jae
or
add
jg
cmp
push
notb
lcall
cltd
cmp
mov
ja
adc
jno
push
mov
loope
imul
aad
xchg
and
sub
pop
insb
jle
sub
fldenv
lock
out
pop
sbb
xchg
and
mov
out
out
pushf
lods
pop
ja
pop
insl
dec
xchg
pop
out
es
xor
ficoms
cltd
cld
mov
fnstsw
out
xor
mov
rclb
add
mov
insl
test
xorl
out
and
xlat
mov
jge
sub
jmp
push
xor
and
daa
icebp
out
mov
ret
dec
mov
xchg
nop
out
cltd
sub
dec
adc
loopne
pop
xchg
add
xchg
sbb
negl
fists
loopne
dec
jae
popa
cmpsl
dec
inc
adc
pop
lahf
mov
cli
popf
into
test
add
gs
cmp
fsubrs
inc
mov
pop
push
cmp
sbb
sub
push
push
sub
repnz
jecxz
sub
out
and
cwtl
sub
loopne
cltd
mov
leave
andl
mov
pop
sbb
in
or
pushf
and
mov
sub
repnz
xchg
fdivs
and
in
xlat
and
mov
pop
pop
cmp
ljmp
shll
and
int
scas
inc
in
int3
aad
rcll
daa
popa
lahf
jb
fistpll
lds
or
inc
pop
insb
subb
loop
add
ljmp
sub
inc
cld
in
sub
daa
sub
mov
cld
and
sar
sbb
sarb
lock
xchg
xchg
loopne
sarl
sbb
lret
test
push
loopne
jl
sbbl
mov
aas
in
fsqrt
sbbl
dec
cwtl
ror
fnstsw
in
fdivrs
push
xchg
lret
xor
or
push
fildll
fld
ss
pop
icebp
les
xor
push
mov
dec
sbb
fs
push
test
inc
scas
sbb
xor
dec
jns
mov
pusha
xor
mov
mov
jne
xchg
es
mov
jo
jge
push
pop
inc
in
xchg
jnp
inc
scas
add
cmc
ja
or
in
xor
je
popf
lods
inc
mov
or
out
mov
jns
mov
xchg
push
dec
push
add
dec
adcb
aaa
decb
ja
sbb
push
jle
jo
push
jno
adc
dec
sub
sahf
icebp
mov
pop
mov
inc
dec
dec
and
or
in
mov
inc
mov
test
inc
or
data16
cmp
nop
in
das
jns
sbb
xchg
imul
daa
cli
inc
shll
test
cmp
test
adcb
mov
shlb
sbb
or
ret
xchg
jmp
js
shll
jbe
sbb
mov
push
ds
cmc
outsl
clc
repnz
xchg
mov
mov
jecxz
mov
xchg
push
cmc
arpl
cmp
inc
push
outsl
inc
cmp
pop
add
pop
mov
stos
inc
sbb
mov
xchg
cld
dec
add
mov
cs
cmp
in
inc
inc
je
icebp
decl
rcrl
adc
lret
xor
mov
xlat
addr16
scas
xor
lahf
dec
cmp
cld
add
pop
rcll
cmp
mov
pop
shrl
cmp
pop
pushf
push
push
shl
loop
push
fnsave
popf
aam
or
add
sbb
repnz
jg
or
jg
mov
fs
call
movb
jnp
fsubl
push
jp
pop
or
adc
cs
es
outsb
pop
aas
std
stos
shlb
jae
jns
xorb
lret
push
aas
pushf
repz
and
or
int
push
shr
jle
wrmsr
std
mov
mov
arpl
sahf
sub
lea
or
mov
pop
fwait
mov
imul
lock
movsb
xchg
adc
enter
stos
xchg
addr16
mov
enter
xor
add
xchg
sub
scas
sbb
aam
shl
popf
in
xor
xor
shl
imul
leave
lea
scas
std
cmp
imul
or
jnp
mov
jae
lods
push
or
adc
lods
das
jecxz
push
dec
loopne
adc
pop
jg
adcl
popf
stc
addr16
xor
sub
push
jle
imul
clc
dec
cmp
inc
mov
icebp
xor
jae
out
push
imull
and
cwtl
lock
fs
movsb
inc
outsl
insb
cmp
stos
mov
xchg
push
jle
ret
lock
adc
bound
sahf
pop
mov
inc
and
pop
push
xchg
fucomp
loopne
dec
pop
call
dec
jnp
lcall
cwtl
into
js
mov
pop
inc
mov
cmp
add
xchg
xchg
pop
lahf
jo
or
adc
sub
cltd
repnz
es
or
stos
mov
aad
outsb
add
iret
ret
mov
cmp
std
jle
enter
or
pop
or
dec
xor
jge
cmp
insb
mov
dec
xor
or
push
test
jb
in
and
sbbb
pop
aas
fdivrs
shl
aaa
push
adc
cmpsl
dec
testl
subb
out
cmp
adc
out
pushf
and
rorb
push
cmpb
cs
mov
mov
push
xor
sub
xchg
hlt
pop
subb
mov
icebp
cli
jns
fsub
pop
sub
xchg
mov
or
in
ficompl
sbb
gs
imul
adc
sbb
rcrl
popl
pop
popa
movsb
in
std
mov
lret
out
test
rorl
pop
inc
cmp
mov
inc
lds
adc
pop
cmpsb
cltd
mov
inc
in
je
cmp
and
out
divl
push
cmc
jnp
cltd
orl
mov
bound
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
jecxz
add
arpl
