sbb
add
mov
mov
xor
outsb
cmp
sub
and
lods
pop
pop
push
jp
or
std
xchg
jecxz
mov
inc
xchg
or
leave
insb
leave
cmp
stc
push
push
fdivrl
gs
xor
or
cmp
repnz
sbb
lds
ss
mov
xor
stc
leave
imul
pop
rol
and
mov
xchg
je
push
and
sbb
pop
push
add
pop
and
scas
push
sarb
into
pop
jae
dec
inc
loop
cmpsb
das
arpl
xorl
pop
cmpsl
addr16
xchg
sub
icebp
sbb
in
or
dec
mov
push
cltd
mov
dec
xchg
mov
pop
stos
test
add
rcrl
fcmovu
imulb
push
jl
mov
mov
repz
mov
xchg
sbb
fcompl
push
std
and
shlb
push
xchg
pop
lret
jnp
inc
mov
sahf
xchg
andb
mov
mov
push
rorl
lock
sbb
es
es
loopne
ss
sbb
or
push
repz
inc
push
lods
imul
fwait
stc
icebp
orb
cmp
dec
test
in
movsl
and
jne
pop
xlat
inc
mov
sahf
lret
cmp
out
ss
js
out
mulb
and
xchg
sbb
movsl
mov
pop
jp
repz
imul
test
pop
xchg
lock
and
pop
rolb
adc
pop
cwtl
pop
pop
js
aaa
sarb
cmc
push
xchg
fmull
jae
mov
dec
aaa
and
enter
clc
sub
or
mov
clc
nop
fsts
or
test
popa
fs
insb
nop
add
loope
add
jge
jl
and
inc
scas
jb
divb
loope
mov
push
cmp
lods
lcall
push
shll
xchg
es
mov
das
test
dec
xchg
push
dec
mov
cltd
mov
out
popf
jl
and
sub
adc
sub
fiadds
js
or
sub
loope
jbe
xchg
pop
jns
subl
xchg
ds
cmp
rorl
jmp
subb
sbb
dec
pusha
adc
lea
add
and
mov
incb
sbb
lcall
repz
aad
cli
and
sbb
hlt
or
fs
lcall
je
leave
cmp
dec
push
jns
mov
popf
mov
xor
and
push
xor
xor
movsl
jg
xchg
lea
dec
fwait
subl
lods
jecxz
sbb
test
lods
or
mov
scas
push
inc
push
xchg
in
fiaddl
dec
push
adc
add
push
enter
sub
stos
cmpsb
popa
mov
rorb
hlt
jae
push
fwait
imull
es
cmp
call
mov
dec
aas
daa
pop
test
sub
pop
xorb
jl
andb
es
push
xorl
mov
cmp
mov
xchg
insb
jle
fxtract
mov
cltd
sbb
xor
pop
cmp
jmp
gs
sbbb
xor
pop
pushf
sub
stos
fs
push
cltd
sbb
cmp
sub
add
insl
xor
or
popa
xor
pop
pusha
rcr
adc
mull
adc
imul
and
mov
and
jne
shlb
pop
push
or
out
dec
dec
cmp
add
mov
mov
xchg
ret
je
sub
clc
or
aam
pop
push
mov
fdiv
outsb
mov
fmul
jmp
jge
sbb
stc
and
add
into
or
fwait
push
test
mov
jb
mov
dec
test
hlt
mov
dec
bound
jne
ja
lock
repz
rcrb
fidivrl
aad
push
hlt
dec
cld
loop
nop
test
cmp
cmp
dec
es
or
stos
pushf
add
xchg
pop
test
mov
imul
in
push
loope
pop
pop
pop
push
sbb
sbb
popf
pop
inc
mov
jle
out
xchg
out
sub
cltd
mov
jno
stos
jbe
aam
sarb
ja
jle
push
sti
add
dec
lahf
adc
test
les
mov
sbb
jmp
sub
cmc
std
add
pop
xor
mov
out
add
cli
pop
pop
add
ds
xorl
cmpsl
insl
sub
shlb
ret
stos
dec
add
les
xor
xor
sbb
lahf
sub
adc
mov
nop
jl
rolb
jl
ja
pop
or
stc
pop
xchg
test
xchg
icebp
xchg
mov
sahf
nop
cmp
pop
dec
jl
add
sub
jmp
xor
data16
lret
and
std
push
inc
mov
out
xchg
mov
dec
push
fnstenv
or
and
test
sarb
pusha
aad
inc
icebp
mulb
dec
inc
arpl
dec
sarb
fldcw
sub
or
fstp
inc
and
push
inc
dec
xchg
icebp
sub
das
fsubrl
pop
arpl
les
lcall
mov
xor
pop
mov
fnstsw
add
in
dec
into
call
mov
mov
aas
pop
out
sti
lods
jno
xchg
cld
je
ja
xor
cs
jge
movsl
test
aad
xor
jge
adc
test
insb
loop
mov
add
enter
clc
repz
jnp
jo
adc
iret
xchg
jle
dec
cmp
mov
or
stos
inc
push
test
out
roll
push
jge
ret
insl
sub
pop
lret
mov
add
push
mov
inc
cwtl
jl
pushf
mov
rolb
mov
mov
out
mov
call
lahf
into
stos
mov
dec
inc
aad
inc
leave
push
mov
sbb
fildll
mov
test
fsts
adc
outsb
popa
cwtl
mov
dec
add
jle
pop
xchg
mov
arpl
jmp
pop
fidivrl
js
inc
mov
fdivp
mov
dec
jecxz
lea
inc
sbb
sbb
inc
mov
sbb
mov
sahf
add
inc
shll
dec
jge
xor
divl
lret
cs
and
jbe
push
sar
lock
inc
sbb
in
rcll
cld
pusha
or
out
pop
out
cld
fwait
lahf
xchg
mov
push
add
fsubl
mov
xor
loope
call
cmpsl
flds
mov
lock
imul
mov
inc
pop
stc
rcr
xor
cmpsl
push
stc
xchg
iret
int3
into
fmuls
mov
pop
movsb
enter
mov
mov
mov
js
aad
add
andl
fwait
lahf
and
insl
test
or
adcl
jl
aad
loopne
idiv
jle
inc
or
int3
addr16
inc
add
cltd
dec
ja
les
clc
js
pop
hlt
mov
cmp
mov
or
fsubrl
jbe
lahf
int
mov
inc
push
lahf
xchg
fucomp
xor
js
adc
jae
test
dec
adc
xor
cmp
pop
mov
mov
ret
cltd
mov
cmp
lds
in
push
sub
aam
sbb
jns
and
lods
call
test
mov
inc
dec
dec
mov
ja
mov
cmpsb
cmc
cltd
mov
jl
movsl
subl
enter
pop
scas
add
xor
cwtl
testb
add
sti
pusha
repz
push
jbe
and
stos
adc
int
jg
pushl
mov
jb
cmp
data16
cld
xchg
lea
push
hlt
repz
jp
push
mov
push
das
adc
outsb
or
cmp
fadds
into
jmp
xor
stc
adc
xchg
push
push
out
cld
mov
xchg
fwait
mov
or
popa
mov
fbstp
pop
mov
sbb
stos
or
xor
xor
adc
inc
mov
add
inc
lcall
push
jno
iret
xchg
fidivs
aad
push
loop
add
jne
ja
pusha
xchg
lret
shrl
push
pushl
lds
xor
pop
shlb
fld
test
in
push
dec
notb
out
dec
test
andl
mov
out
es
fsubrl
dec
rorb
insb
scas
lcall
cli
loop
cmpsl
or
test
mov
and
add
mov
int3
dec
pushf
or
rol
enter
movsb
scas
mov
pop
cmp
adc
enter
mov
popa
cmp
mov
and
test
cmc
popa
jg
orl
dec
mov
fldt
xor
pusha
mov
les
pop
stos
jns
sub
rolb
leave
mov
cld
ljmp
jne
pop
movsb
clc
xchg
xchg
rcrl
mov
mov
and
mov
or
sub
mov
push
mov
xor
lret
push
out
shlb
inc
std
and
sub
das
icebp
sub
pop
flds
enter
dec
mov
sbbb
lcall
dec
add
into
movsl
mov
fidivrs
jns
xor
push
xor
daa
andb
adc
mov
mov
gs
adc
cmp
clc
mov
clc
shlb
dec
push
push
pop
push
adc
inc
push
mov
cmc
nop
and
sub
jp
testb
in
and
cmc
in
push
mov
in
jecxz
movsb
cmpsb
push
sti
orl
jb
rclb
pusha
dec
ds
dec
inc
push
ss
xor
pop
sub
xlat
mov
cmp
adc
xchg
bound
jecxz
es
loopne
iret
loope
insl
xchg
sahf
das
enter
mov
cmpsb
cmp
bound
sahf
rcr
fmuls
ss
mov
push
fs
jl
dec
pop
aam
imul
jns
dec
gs
jge
popa
scas
mov
add
aad
leave
sarl
stos
sysexit
xor
imul
dec
inc
mov
cltd
xchg
testb
outsl
dec
daa
or
stc
fucom
rcl
sbb
xor
jae
mov
cmp
imul
outsb
mov
xorl
xor
jg
inc
jno
xlat
cltd
pop
mov
mov
pushf
mov
inc
jmp
sti
shrb
les
int3
aaa
clc
int
jno
sti
shll
movsb
outsb
jno
sbb
mul
cwtl
inc
or
dec
and
xchg
adc
sbb
mov
repz
fadd
insl
bound
enter
nop
push
out
ficoml
data16
xlat
inc
add
idiv
scas
test
xor
aam
sbb
push
repnz
loopne
jno
inc
clc
fildll
popf
fs
in
inc
pop
xchg
pop
divl
mov
test
sbb
pop
jecxz
imull
scas
sar
shll
xchg
pushfw
rcl
lods
insl
addb
lret
mov
mov
je
and
sub
movsl
push
push
push
pop
fs
xor
rcrb
sarl
fildl
jle
push
sti
rcll
inc
push
cmp
sub
pop
out
dec
rorb
cmp
mov
dec
inc
rorl
push
popa
jbe
nop
out
loopne
fisttps
mov
lahf
aaa
insl
lcall
dec
out
mov
push
dec
lock
jno
fildl
dec
xorps
jmp
fcmovne
xchg
bound
lahf
jmp
cmpsl
xor
lea
xor
push
dec
and
mov
aaa
in
pop
aas
inc
mov
std
loope
aam
or
add
fstl
jae
pop
adc
mov
pop
mov
sbb
data16
int3
mov
cltd
or
pop
sbb
int
jge
aas
es
pop
pop
xlat
loope
aas
rcrl
xor
and
pop
pop
mov
imul
pop
loop
cmp
mov
jecxz
or
outsl
out
cmpsb
add
push
pop
and
outsl
ljmp
adc
sbb
fisubrl
shlb
loope
xchg
mov
scas
push
ja
ud0
push
sti
sub
mov
js
sti
cmc
subb
stc
add
ja
mov
and
sbb
cmp
dec
and
jle
rclb
imul
xor
dec
mov
xor
movsb
negb
adc
je
ret
movsl
cltd
sbb
add
test
inc
loop
into
nop
xchg
cwtl
inc
and
iret
shlb
xchg
adc
pop
fildll
outsl
ffree
add
pop
lock
fadds
call
or
mov
int
dec
lods
xchg
jle
cwtl
sar
movsl
mov
arpl
lods
ds
xchg
outsl
movsb
mov
loop
dec
test
bound
ljmp
jnp
test
das
add
sub
cmp
leave
inc
pop
jne
shl
test
jnp
cmc
sahf
aaa
and
fists
imul
mov
push
rolb
xchg
mov
mov
dec
into
mov
repz
lock
lret
push
sub
and
in
inc
push
out
repnz
popf
cmc
jnp
sub
dec
gs
xor
sub
cmpsb
sahf
add
imul
ja
mov
sbb
pop
inc
cli
adc
je
jl
js
push
mov
mov
call
xor
mov
pusha
fsub
stc
js
imul
lods
jnp
sub
mov
cmpsb
mov
mov
pop
push
add
les
mov
cmc
je
sbb
int3
push
and
adcb
jmp
inc
out
sub
aad
mov
push
repnz
cli
jg
cmpsb
xor
push
in
hlt
int
rcl
ret
xchg
loope
cmpsb
pop
lret
mov
xchg
xor
jo
xorl
and
jge
mov
adc
xchg
lds
fisttps
adc
decl
das
fisttpl
fmuls
mulb
test
and
into
in
imul
jle
inc
mov
jecxz
or
cmp
adc
sbbl
xchg
shrl
data16
lahf
xchg
dec
mov
inc
popf
mov
pop
mov
outsb
mov
mov
mov
push
add
pusha
mov
jl
dec
repz
jbe
sti
inc
jns
imul
int3
loop
inc
fsubrp
jne
push
inc
gs
or
neg
lds
cmpsl
neg
push
in
push
inc
sbb
imull
mov
lahf
test
add
in
adc
test
fwait
add
jmp
push
sub
jnp
cmp
movsl
inc
push
push
cmp
xor
pop
push
jno
add
mov
inc
jle
sti
xor
pop
jle
adc
negl
xor
cmp
int3
mov
cmp
pop
rcrb
mov
lcall
sarl
cmp
pop
addr16
shrl
nop
xchg
mov
ret
movsb
push
daa
or
dec
mov
leave
loop
jns
mov
daa
xchg
or
sbb
arpl
dec
movsb
popa
sbb
cli
or
jbe
and
rclb
popa
push
je
out
jmp
es
mov
fidivl
xchg
in
call
nop
mov
pop
cld
jg
and
or
sub
mov
in
add
push
pop
stos
cmpsl
testb
dec
cli
cld
loopne
iret
pop
xchg
add
push
pusha
pop
fmul
mov
sbb
adc
jp
jmp
das
jb
test
enter
popa
pusha
sbb
xor
mov
sub
out
jp
xchg
aaa
pop
mov
push
repz
pop
jae
sub
nop
cwtl
mov
dec
iret
pusha
and
adc
pop
mov
into
loopne
xorb
dec
sti
outsl
mov
cli
push
and
stc
xor
lods
dec
inc
daa
cmp
daa
fwait
add
sbb
adc
arpl
xor
push
int
leave
inc
add
mov
sub
icebp
test
aam
fwait
fwait
pop
dec
lret
xchg
pop
jp
pop
push
icebp
mov
into
ljmp
fnsave
inc
dec
xor
mov
mov
pop
jp
mov
ficoms
cmp
outsb
or
xchg
sbb
sbbl
mov
pop
fstl
ret
xchg
xchg
jp
mov
movsl
lcall
cmc
js
cld
xor
sbb
jno
jb
enter
and
mov
insb
ja
addr16
push
push
jae
xor
rcrl
xlat
add
xor
cmc
iret
daa
mov
out
cs
mov
pusha
fisubrl
leave
mov
ret
rep
movsl
mov
jmp
pop
jg
cmp
jno
sbb
ljmp
les
xor
xchg
add
int
call
xor
loope
cmpsb
adc
mov
and
mov
xor
shrl
ficoml
imul
or
jge
push
test
add
in
outsb
dec
pop
fldcw
lret
lds
hlt
push
icebp
push
mov
mov
sbb
jne
adc
mov
loop
mov
sbb
scas
stos
sarl
into
lahf
xchg
repnz
in
enter
pop
inc
aam
or
sar
int3
jle
sub
lock
pop
dec
jnp
cmp
insb
mov
scas
inc
shlb
mov
popa
cwtl
shrl
jno
xchg
inc
int3
add
sbb
jmp
lods
jg
je
leave
aad
bound
out
or
lret
xchg
and
jg
mov
pusha
mov
gs
sbb
dec
ret
xchg
arpl
adc
mov
inc
leave
mov
scas
inc
pushf
jb
pop
pop
xor
lock
mov
ljmp
hlt
insb
dec
loope
or
xchg
call
das
xchg
bnd
and
sti
sbb
pop
sub
stos
mov
ss
mov
repz
or
mov
cmp
sub
loop
cmpsl
mov
ret
inc
mov
sbb
lea
lods
mov
arpl
xor
lods
cli
mov
lcall
rep
loope
scas
repnz
cmpsl
mov
incl
pusha
push
xchg
inc
cmp
cs
pop
lock
sbb
and
rcl
cmc
call
mov
pusha
adc
pop
xchg
lods
call
pop
mov
aam
daa
fsubp
push
fwait
mov
dec
ret
jmp
mov
push
icebp
add
icebp
testl
mov
and
and
loopne
fdivl
xchg
out
repnz
xor
jns
mov
mov
xchg
sub
mov
jge
pop
imul
scas
das
sti
sarl
mov
sbb
or
inc
jae
pop
sbb
mov
pop
out
or
loope
xor
xor
mov
xor
adc
adc
mov
xchg
and
sub
lcall
push
iret
cli
and
mov
out
ja
and
test
scas
in
jnp
cmp
mov
sub
adc
std
scas
sbb
xor
jnp
push
dec
fnsave
sbb
repnz
loope
xor
loop
sbb
push
dec
dec
dec
test
cmc
insb
cmpsb
cli
xchg
test
cmpsl
add
imul
das
test
or
fstps
ror
mov
dec
and
lods
scas
cmp
loope
cwtl
ret
xor
divl
or
mov
sub
mov
sarb
xor
adc
or
sub
lock
repz
pop
jo
imul
popf
mov
mov
add
mov
mov
stc
sbbb
int
loope
lods
dec
leave
outsl
or
mov
sarl
mov
int
jp
fistps
aaa
add
outsb
nop
mov
dec
js
aam
addr16
subl
sub
ficoml
sahf
jle
shlb
lods
call
mov
stc
std
xchg
clc
rcll
cltd
push
dec
push
or
lds
pop
cmp
shr
repnz
pop
xchg
pusha
jno
pop
stos
jp
movsb
xchg
clc
repnz
int3
ficomps
pop
dec
xchg
ds
js
stos
in
cmp
fiadds
inc
cmp
jbe
cmp
sub
ds
stc
adc
cmp
sub
loop
rcll
fisttps
or
inc
or
xchg
idivb
andb
int3
out
bound
push
xchg
xchg
pusha
cltd
dec
out
sub
mov
cmp
pop
pop
shlb
loope
cmp
and
in
mov
jle
sti
shlb
and
aaa
mov
push
mov
push
lahf
popa
sub
cmc
pop
adc
outsb
dec
sbb
inc
xlat
or
push
push
push
cwtl
stos
test
xor
lret
call
stos
add
mov
es
out
dec
pop
aad
mov
adc
and
stos
sub
incb
sbb
push
mov
fwait
push
mov
aam
mov
in
jecxz
add
xchg
addb
dec
and
icebp
jmp
adc
scas
cmp
inc
inc
ret
pop
or
arpl
test
and
rclb
and
mov
fs
cmc
mov
or
and
or
push
fsubs
jp
ja
inc
or
bound
out
mov
lret
pusha
fmul
enter
add
or
fnsave
out
dec
jae
fists
into
add
sub
inc
adcl
xchg
jp
mov
stos
xor
lcall
cmp
mov
jmp
das
les
cmp
inc
call
fstps
je
and
mov
fbstp
add
cmpsb
xchg
cmp
mov
enter
ljmp
clc
push
rorl
ljmp
outsl
fisttpl
imul
leave
dec
mov
inc
lods
nop
xchg
xchg
push
repz
xchg
inc
jno
sub
push
jmp
mov
push
rclb
cli
pop
fdivrs
xor
push
dec
shll
popa
pop
push
ret
mov
jmp
dec
scas
iret
inc
xor
jae
loop
sub
jl
push
insb
rclb
mov
shrb
int
lahf
ja
or
dec
pop
roll
lret
jl
scas
lods
popf
test
test
std
icebp
and
test
mov
rcl
inc
add
rcrl
ss
xchg
mov
sub
pop
incl
push
jno
jno
push
xchg
shrl
test
pop
inc
in
loope
xorb
test
mov
ret
ret
shlb
add
add
pop
repnz
or
std
int
popf
mov
inc
xchg
ret
rolb
add
pop
jmp
jge
jg
sbb
mov
adc
aad
iret
test
repnz
sahf
lret
scas
imul
test
mov
push
cli
pop
sti
sahf
push
jle
sub
es
push
push
pop
cmp
xchg
dec
pop
jns
lret
cwtl
push
fldcw
dec
cmpsl
sub
fnstenv
cs
aaa
mov
inc
push
int3
sahf
jae
xchg
cltd
push
jmp
imul
arpl
testl
cmp
mov
xchg
mov
inc
mov
mov
sarl
xchg
push
xor
jns
or
cmp
movsb
lods
xor
ljmp
loopne
lahf
in
clc
call
fcmovnbe
mov
aam
xchg
adc
push
scas
adc
push
sarl
push
imul
out
mov
into
imul
test
jne
adc
mov
pop
and
mov
jb
sub
stos
cwtl
in
xchg
xchg
pop
pop
pop
add
push
call
mov
lds
pop
xchg
aad
jbe
and
mov
lods
loopne
adc
ja
shll
in
pop
xor
sbbb
nop
fstpl
push
adc
mov
sti
mov
push
mov
mov
jp
cs
imul
mov
add
dec
push
hlt
repnz
movsb
aas
push
mov
decb
mov
inc
sarb
rclb
pop
or
dec
pop
sbb
push
sub
std
pop
imul
add
push
xchg
clc
and
push
inc
in
inc
mov
xor
into
adc
mov
aam
push
inc
mov
add
push
push
shrb
stos
lods
out
adc
pop
jno
push
lods
shll
or
xchg
inc
stos
adc
pop
rclb
xchg
push
cmp
fwait
shll
sub
xchg
rcrl
sbb
or
push
loope
js
nop
cltd
add
imul
daa
push
in
inc
xchg
rclb
mov
add
and
cltd
pop
lods
orl
shll
dec
andb
add
mov
jmp
ret
mov
add
inc
mov
std
and
xor
pop
loope
imul
xor
mov
jmp
mov
movsb
mov
dec
sbb
sbb
movsb
push
rcrb
xchg
lcall
cmp
push
dec
in
push
fsubrp
pop
cli
aad
mov
icebp
cwtl
in
lock
fmuls
pop
in
iret
xchg
pusha
xchg
dec
fsts
push
jp
lock
mov
pusha
je
loopne
add
inc
mov
or
or
pop
pop
push
popa
repnz
pop
out
push
mov
inc
enter
leave
mov
ret
cmpb
push
les
pop
xchg
mov
push
in
and
pop
ret
mov
rorl
daa
add
mov
jnp
cmpsb
xor
cmp
and
xor
add
iret
negb
mov
das
xchg
xor
ljmp
inc
popf
out
mov
sub
ja
cmp
fisubs
clc
mov
mov
test
les
aas
mov
aad
sbb
mov
test
dec
cmc
mov
out
sti
ljmp
ret
xor
mov
inc
sbb
dec
mov
cmpsl
js
ffree
dec
cmp
cwtl
mov
testb
test
mov
push
call
into
ret
dec
faddl
outsb
xchg
adc
cmpsb
and
shr
imul
adc
mov
lret
pop
jl
hlt
sti
popf
pop
mov
movsl
add
push
add
test
and
adc
sbb
mov
fisttpl
enter
or
dec
jns
pop
in
mov
or
xor
pop
pushf
stc
xor
inc
iret
cmp
xor
mov
lods
call
fbld
push
mov
test
pop
lret
lahf
dec
jp
lret
lods
lock
icebp
mov
mov
adc
jle
mov
or
push
sbb
pusha
xchg
and
sahf
les
sbb
inc
pop
sub
sbb
pop
in
ds
je
inc
xchg
movsl
test
notl
mov
aas
mov
jnp
loop
outsb
pop
xchg
int
inc
in
mov
mov
es
bound
dec
push
and
xor
ljmp
test
mov
int3
adc
xor
in
aad
push
jne
xchg
sub
jle
cli
fistps
jb
incl
push
out
cmp
popa
push
mov
int
icebp
mov
clc
fwait
stos
lea
pop
popf
cmpsb
sti
gs
cli
inc
movsl
jo
int
aas
pop
mov
xlat
mov
loopne
std
add
push
cmp
shl
lret
insb
out
sahf
cli
sbb
mov
xchg
mov
fdivl
decl
es
hlt
mov
dec
shr
sub
in
cmpb
jno
cmp
arpl
adc
mov
cmp
xchg
stc
mull
and
push
ljmp
mov
cli
je
ficoms
call
dec
dec
jb
adc
out
xchg
mov
ja
loop
push
movsb
jne
dec
mov
cld
and
xor
mov
imul
xor
and
out
push
xor
dec
repnz
pop
pop
inc
jne
xchg
mov
fimull
cmp
cmc
adc
cli
mov
out
fs
inc
fwait
cwtl
dec
fistpll
loope
add
pusha
addb
pop
addl
roll
and
or
adc
clc
test
divb
lods
repz
pop
popf
je
adc
loopne
mov
dec
decl
fcmovne
or
pop
mov
ss
xor
cmc
call
mov
xchg
aaa
mov
test
pusha
mov
ficompl
mov
stc
adc
sub
in
push
out
movups
out
enter
lahf
jnp
cmp
out
lcall
pushf
add
mov
mov
push
sub
inc
dec
ljmp
outsl
sbb
lods
xchg
jg
and
mov
jge
fistps
sbb
xchg
aam
pop
movb
test
mov
loop
sub
mov
pushl
fsub
lods
push
jecxz
sbb
shll
sub
pop
pop
adc
addb
pop
xor
mov
out
loop
sub
outsb
pushf
shlb
jg
shr
iret
jecxz
les
xor
or
test
iret
ss
lods
sub
sbb
mov
repnz
in
or
inc
std
aad
mov
lahf
dec
test
int
sub
stos
pop
mov
adc
mov
std
mov
and
addb
lahf
mov
inc
or
or
mov
outsl
sub
stos
fists
ret
mov
jmp
imul
pop
loopne
sub
or
xor
or
fisttpll
movsl
flds
js
jge
push
mov
fcomip
dec
push
in
bound
popa
fnstenv
cmp
mov
nop
cmp
sub
push
add
out
sahf
adc
pushf
pop
push
sbb
mov
mov
jne
mov
and
shlb
xor
sbb
or
mov
notb
iret
cmp
xchg
mov
test
xchg
pusha
jae
lds
hlt
roll
icebp
sub
dec
not
aas
sub
xchg
out
insl
shrb
jns
mov
cwtl
ret
fadds
jecxz
out
sbb
mov
enter
adc
add
je
lea
andl
xchg
loope
sbb
neg
sbb
ret
sbb
test
fimull
je
add
pushf
xlat
bound
lret
repz
ljmp
imul
out
mov
and
fnsave
movsl
mov
push
mov
ja
push
dec
cwtl
sub
rep
nop
mov
lret
movsl
jmp
and
adc
dec
mov
sbb
cld
xchg
insl
jo
std
test
movsb
inc
sbb
sub
pusha
in
addr16
cld
fdivrp
xchg
or
mov
lret
xor
pusha
push
test
movsb
pop
jge
incb
xchg
ficomps
enter
pop
imul
mov
mov
mov
dec
cs
xchg
dec
movmskps
push
test
data16
inc
cwtl
pop
in
hlt
push
sbb
xchg
pop
mov
fstps
jae
je
mov
sub
loopne
push
pop
dec
popl
jmp
mov
mov
xchg
jb
scas
jnp
je,pn
shrl
dec
mov
cmp
and
dec
push
adc
clc
lahf
pusha
pop
loop
inc
mov
jp
xchg
and
call
adc
leave
lock
add
mov
inc
mov
fistpll
cmp
push
add
push
jge
aam
and
mov
or
jecxz
inc
addb
ds
iret
cbtw
jp
inc
xor
fistpl
es
outsl
xchg
je
fcmovnbe
push
loope
push
cmp
or
push
push
stc
lea
fldt
in
add
adc
iret
loopne
bound
jl
cmp
add
ret
cmp
stc
leave
icebp
cmpsb
fistl
sub
stos
leave
pop
inc
sbb
std
dec
outsb
in
sub
jne
into
mov
add
addr16
sub
inc
sub
mov
sbb
mov
clc
daa
jbe
xor
in
jns
ljmp
ss
and
andb
ljmp
sbb
mov
jae
fstps
or
mov
scas
push
jp
cmp
adc
cmp
insl
mov
out
mov
xchg
pop
in
ret
out
addr16
cmc
jbe
dec
mov
dec
fdivl
pop
bound
aaa
or
add
sub
iret
mov
sbb
lods
insb
push
out
aas
mov
mov
pop
push
lods
mov
lret
add
dec
dec
repz
sbb
dec
push
mov
jae
gs
xor
mov
pushf
sti
gs
xor
scas
or
mov
scas
aam
popf
ds
sub
dec
icebp
jmp
pop
jle
mov
sbb
mov
inc
leave
testl
jb
lock
fnstenv
push
icebp
pop
jbe
shlb
cmp
das
jle
or
ret
mov
outsl
movsl
mov
inc
pop
adc
jl
mov
sbbl
dec
lea
add
and
ja
cltd
sub
jne
stc
popf
inc
popf
mov
pop
movsl
in
cmpsb
rorb
and
xrelease
jae
or
cs
dec
and
arpl
outsb
daa
mov
lods
jmp
dec
daa
aaa
fmul
xor
es
imul
stos
jecxz
pop
or
jae
and
arpl
loop
mov
sbb
mov
mov
xchg
inc
lahf
mov
cmp
cmp
jmp
cwtl
test
pop
movsb
fstp
dec
movsb
dec
xchg
or
add
inc
xor
clc
xchg
call
lods
das
pop
jecxz
loopne
fildl
out
sub
sbb
and
gs
cli
fstl
fwait
pop
fiaddl
in
cltd
fwait
adc
lods
inc
pop
xchg
fidivrl
or
fs
cmpsb
lcall
imul
es
inc
pop
jns
cmpsl
neg
dec
imul
popa
cmc
adc
mov
mov
jns
push
xor
je
rorb
jns
into
xor
insl
mov
movl
outsl
es
or
fwait
icebp
or
clc
mov
mov
jb
lahf
ja
fists
aas
adc
loop
mov
add
inc
push
lret
mov
pop
sub
jmp
ret
sbb
jb
cltd
movb
sbb
lods
stc
test
out
cmp
mov
mov
fdivrp
fwait
test
xlat
jle
sub
or
fwait
test
mov
ficoms
sti
hlt
ds
out
lods
mov
cli
cmp
pop
vcvtpd2psx
jnp
sti
lret
mov
xor
movsl
in
fwait
add
outsb
es
bound
sbb
xor
nop
jb
lahf
sarl
movsb
adc
push
mov
out
sub
lcall
adc
xor
sbb
lret
jle
mov
lock
cld
ret
cs
fs
sbb
testl
loop
call
jno
rorb
push
inc
imul
xchg
inc
testb
jne
fsubrp
cmp
jge
mov
out
add
sbb
pop
mov
mov
dec
jns
jg
mov
jae
in
test
mov
adc
subl
mov
pusha
xchg
pop
adc
into
popl
dec
inc
mov
sub
nop
mov
shll
ret
sarb
dec
lds
lcall
xor
in
or
jge
arpl
inc
enter
enter
inc
cmp
inc
mov
test
dec
aaa
bound
adc
pop
int3
xchg
cmpsb
sbb
dec
xor
cld
ss
or
mov
xchg
into
mov
pop
mov
sbb
fcmove
push
insl
add
or
std
rcll
push
xor
not
fcmovnbe
push
xchg
inc
sbb
int3
sub
ljmp
clc
dec
and
lds
lods
mov
jns
jb
scas
mov
test
int3
repz
xor
push
push
mov
pop
enter
mov
adc
jle
js
int
lods
cwtl
and
push
mov
call
sub
jecxz
jp
jbe
sahf
ljmp
or
mov
out
mul
inc
in
dec
inc
add
negl
mov
sbbl
adc
daa
xchg
xchg
fninit
mov
fdivrp
mov
ds
jecxz
ljmp
lea
xchg
mov
cli
lret
loopne
add
mov
adc
xchg
in
rorl
lahf
outsl
call
mov
das
adc
jl
loope
int
xor
int3
adc
jae
push
aaa
ss
jne
cmp
lods
mov
jge
test
mov
fwait
popf
adc
add
enter
arpl
jae
rcrb
jno
mov
or
cmpsl
enter
or
insb
aas
cmpsb
sub
push
xchg
lahf
mov
push
push
dec
mov
cli
aas
lods
test
cmpb
cld
lock
jae
repz
rol
sbb
jl,pn
sub
bound
nop
pop
out
sbb
sbb
push
mov
mov
dec
inc
daa
cmp
out
loopne
daa
ret
push
out
and
dec
int3
lds
push
adc
pop
xor
sti
mov
rcrl
ss
xor
stos
test
mov
insl
movsl
push
orl
dec
push
in
xchg
jnp
cmpsb
and
push
frstor
test
mov
push
lock
xlat
fcomps
jp
inc
aam
push
ret
imul
pop
add
sbb
push
or
xchg
mov
out
push
dec
push
jle
stos
adc
mov
pushl
or
mov
mov
dec
imul
dec
mov
jg
loope
ljmp
loope
lret
dec
mov
mov
std
test
mov
ficoml
shll
call
js
ds
and
insl
stc
xor
imul
popa
out
int
xor
dec
sbb
cltd
pop
push
push
push
cmpsl
xlat
mov
into
cmp
jecxz
imul
mov
decl
xor
inc
xchg
xor
jb
out
lret
jno
cmp
fildll
test
sbb
xchg
push
sbb
pop
adc
and
fs
inc
arpl
popf
ss
into
push
sti
aaa
and
mov
jae
mov
adcl
in
loope
fmul
out
rcrb
fmul
pop
cld
loopne
ret
xchg
insl
pop
addr16
loope
xor
push
push
fstps
dec
shll
leave
inc
jp
aad
sbb
xchg
mov
orb
dec
andl
out
or
pop
ss
or
dec
xor
out
jecxz
cltd
and
outsb
and
inc
push
cmp
pushf
mov
jge
or
jmp
push
ret
ja
shlb
iret
ficoms
inc
jbe
scas
xchg
cld
into
pop
pop
mov
pop
insb
pop
xchg
jo
popf
pop
push
outsl
andl
fwait
pop
popf
movsl
jmp
inc
sti
or
jmp
dec
or
pop
aam
stos
pop
out
cmp
icebp
shrb
outsl
arpl
sub
add
pop
jae
movsb
outsl
fists
jbe
xchg
in
daa
rorb
mov
cld
dec
push
xor
int
or
cmp
rorb
ficompl
popa
cli
into
mov
in
cmc
mov
cmp
and
xor
push
popl
in
aad
sub
jbe
sbb
aam
push
and
jp
jmp
jle
popa
movsl
lcall
pop
pop
in
inc
daa
ljmp
pushf
enter
push
push
xchg
xchg
enter
push
shlb
dec
or
fcompl
and
push
repz
loope
jle
add
and
lock
or
xlat
ljmp
jo
test
lcall
sti
mov
mov
sbbb
or
js
mov
js
rorl
dec
lahf
out
daa
dec
cmpb
dec
xchg
pop
or
xor
xchg
adc
mov
fs
dec
sahf
out
cld
xchg
xor
outsl
cmp
cld
dec
pushf
push
insb
bound
das
das
cld
inc
imulb
lock
jmp
sbb
mov
sbb
fnsave
dec
xor
xchg
pop
mov
lods
fistpl
icebp
push
lds
pop
xorl
lea
data16
std
sti
add
or
enter
mov
ret
push
imul
ss
jle
jbe
xor
mov
push
mov
sub
mov
add
out
imul
jecxz
das
scas
loopne
jne
push
xor
scas
bound
inc
stos
ret
movsb
punpcklwd
fisubl
repnz
scas
xor
nop
adc
mov
adc
arpl
negb
dec
push
iret
rcrl
mov
movsb
stos
lret
mov
sbb
xchg
jae
mov
jmp
pop
mov
icebp
xchg
es
insb
sbb
push
sub
stos
mov
arpl
sub
loopne
mov
lahf
sahf
das
sbb
repz
mov
test
mov
lret
roll
aad
and
sahf
dec
lock
ja
and
enter
or
leave
test
sbb
push
pop
push
xor
lods
sub
mov
add
add
fisttpll
dec
in
pop
orl
sub
jmp
mov
cmp
pop
loop
lahf
test
arpl
push
out
xchg
and
mov
jbe
sbb
shrb
or
aas
mov
lahf
xchg
enter
pop
stos
sbb
rcrl
insl
xchg
mov
jns
jecxz
iret
mov
out
mov
mov
rcr
jo
fnstenv
mov
imulb
push
add
pop
mov
idivl
stc
out
and
and
push
mov
sbb
loop
jl
push
adc
mov
loop
cmpsb
adcl
mov
fdivrl
lret
dec
mov
rcll
lock
fcomp
mov
dec
jle
xchg
push
xor
mov
xor
push
push
out
pop
data16
inc
sub
repz
stos
in
add
orb
inc
es
arpl
inc
mov
imul
sti
sbb
xor
and
inc
js
les
cltd
mov
adc
push
adc
ja
clc
lock
outsl
js
xchg
scas
shll
mov
lds
shl
lret
xor
push
mov
gs
jo
pop
popf
xor
std
add
push
add
mov
fistpl
cld
and
cs
pop
or
enter
inc
lods
xchg
jnp
movsl
xchg
dec
xchg
jmp
jo
fcompl
mov
das
adc
xchg
aas
pop
xchg
or
mov
frstor
psubq
jns
pop
insl
mov
pop
add
cmc
sub
int3
icebp
adc
jne
andl
vmaxss
push
xchg
aas
scas
fildll
push
dec
jmp
hlt
mov
xor
and
test
mov
xor
mov
repz
repnz
test
loop
popa
xchg
cmpsl
push
mov
jnp
adc
popa
jl
movsl
and
fldcw
sbb
rorl
jb
cmp
mov
cmp
lods
add
xchg
cwtl
or
dec
roll
add
shl
rcrl
addr16
adc
push
ss
subb
adc
adc
rcrb
lods
movsb
fnstsw
adc
aaa
xchg
pop
in
or
push
insl
mov
sbb
pop
xchg
push
dec
cmpsl
mov
scas
je
xor
lret
mov
adc
fstps
std
orb
out
inc
add
adc
xor
sub
lret
nop
in
insb
mov
dec
lds
addr16
push
dec
dec
stos
dec
mov
cld
xor
jge
mov
popl
or
or
cmpb
cli
sbb
iret
in
mov
mov
adc
in
xor
sti
mov
cmp
jecxz
pushf
outsl
or
xchg
imul
icebp
fwait
adc
inc
ret
jae
mov
jno
aas
mov
mov
insb
das
jo
pop
sbb
test
mov
mov
repnz
push
mov
mulb
fidivrs
inc
sub
push
jecxz
mov
ret
loope
adc
sti
push
jnp
les
sbb
and
movsl
jo
sub
pop
and
ljmp
mov
mov
rol
mov
sbb
ja
scas
arpl
jae
cmpsb
sbb
leave
leave
lcall
pand
add
std
sub
cwtl
imul
cmpsl
push
into
cmc
jl
add
inc
mov
mov
inc
jae
cmp
test
adcb
pop
jecxz
icebp
or
jl
add
mov
aas
lea
push
shll
shrb
rolb
mov
add
xchg
mov
or
mov
adc
aaa
and
xor
ss
mov
fldcw
jbe
pop
adc
fcmovnu
dec
mov
mov
pushf
fldl
out
sub
addr16
lea
fsubl
negl
mov
cmp
xchg
dec
mov
insl
js
pusha
shl
mov
jae
push
out
mov
mov
adc
inc
push
cmc
rolb
stc
lcall
out
mov
lods
jno
fidivrl
int
and
lcall
jle
push
adc
xlat
jp
cltd
xchg
loope
push
push
aam
jne
movsb
jl
xor
mov
and
push
sub
mov
mov
push
movsb
icebp
ret
push
and
loope
shll
or
cli
in
in
sbb
sbb
cmp
lea
mov
into
sub
cmp
iret
ljmp
cmp
test
dec
divl
push
xor
sbb
lock
fwait
movsl
mov
inc
imul
mov
fs
push
das
mov
das
adc
clc
push
adc
sub
out
jmp
inc
out
cmpsl
or
dec
ljmp
jge
dec
dec
mov
ss
decb
lahf
test
outsl
test
das
jbe
incl
sahf
xor
pop
ret
test
cli
and
xchg
mov
xor
cmp
mov
ret
aaa
cmc
xor
and
xor
rcrl
pop
inc
sbb
cmp
cmp
jnp
ja
and
in
fisttpl
inc
dec
or
adc
inc
ret
xchg
xchg
push
jecxz
mov
into
mov
cld
pop
inc
out
and
push
dec
lods
add
jge
mov
or
sbb
sub
notb
adc
jecxz
sbb
enter
jle
dec
into
cmp
mov
es
test
sub
pop
xor
int
ret
adc
push
inc
cmpsl
add
loop
push
rolb
sub
push
scas
cmp
xchg
outsb
or
stc
clc
loop
and
mov
mul
popa
daa
mov
stos
imul
pop
shl
add
and
xor
test
aaa
mov
push
jg
inc
in
imul
push
cbtw
or
leave
xchg
push
in
mov
cmp
mov
dec
packsswb
sub
push
or
js
add
cmp
in
fadds
repz
cltd
into
adc
inc
scas
push
sbb
pop
cmc
or
push
mov
in
xchg
mov
xor
int3
dec
mov
jmp
out
ffreep
xchg
loopne
or
adc
ror
test
out
mov
cmp
jno
mov
sub
jae
shr
sub
pusha
mov
jae
dec
shl
ljmp
gs
shll
jbe
lds
cwtl
ds
mov
jge
jns
rclb
test
popa
inc
mov
cmp
jnp
stos
fildl
icebp
divb
bound
stc
add
jbe
stos
sub
mov
cld
cmp
out
in
fisubrs
adc
mov
jb
xor
jne
dec
jmp
dec
push
lds
scas
mov
xchg
dec
aas
push
pop
ret
fnstsw
and
push
fiaddl
xchg
cmp
xor
orl
xchg
or
rcl
jmp
pop
dec
inc
adc
ret
xor
mov
in
inc
dec
mov
inc
out
jbe
cmp
push
ret
clc
in
divb
fildll
push
stc
shl
pusha
shlb
xor
cwtl
mov
fstps
push
ret
xor
out
sub
add
xchg
loop
jnp
cmpsb
jae
jbe
mov
cmp
test
in
int3
inc
lahf
cld
or
arpl
clc
bnd
clc
out
add
mov
imul
clc
inc
scas
jae
stos
cmpl
test
popa
xchg
xchg
mov
pop
xchg
xchg
mov
loop
fucomi
fmuls
hlt
adc
loopne
and
push
push
insb
fcoml
aam
xchg
jb
sub
mov
stos
or
orb
sbbl
push
testl
sub
xchg
lds
mov
aad
std
popa
push
and
jo
insl
lret
nop
jge
jne
xor
int
jne
iret
fstl
adc
pop
pop
dec
xchg
clc
ljmp
push
ret
pop
add
adc
mov
push
mov
xor
je
add
xchg
addr16
cmp
push
xor
push
scas
xchg
pop
aam
dec
mov
sarl
test
mov
cmp
arpl
scas
mov
sti
lret
in
outsl
or
in
flds
cmp
xor
aaa
into
mov
cmp
addb
cltd
hlt
or
inc
jle
or
imul
fiadds
mov
xor
push
scas
clc
imul
xchg
iret
mov
data16
cwtl
fistps
xor
cmpsb
icebp
aas
aaa
pop
leave
and
xor
mov
jno
mov
leave
or
aad
rdmsr
jae
test
adc
fidivs
rclb
movsb
sbb
fldenv
icebp
xor
sub
mov
fdivrs
out
fs
sbb
scas
in
mov
or
jp
mov
xor
je
scas
mov
cli
push
out
into
push
pop
mov
dec
movsb
add
es
jbe
test
adc
cwtl
cmp
shr
ljmp
pop
mov
mov
mov
cmp
sbb
adc
mov
pop
daa
lods
add
inc
mov
sub
mov
mov
mov
mov
xchg
shl
sarl
cmc
xor
push
dec
pop
outsl
mov
xchg
mov
loope
push
sub
shlb
and
mov
mov
push
mov
pop
xor
lcallw
jmp
fstl
add
adc
xchg
push
xor
push
sbb
orb
fwait
jge
stos
sub
sbb
icebp
cmpsb
jle
daa
subb
ret
pop
fmull
cmpsl
jecxz
dec
mov
xor
imul
inc
cltd
cs
in
push
pop
xchg
adc
cmc
test
push
jno
jecxz
sbb
iret
xchg
or
orl
add
fisttpll
movsb
insb
sbb
into
cmp
call
cmp
testl
cmp
jl
lret
cmp
stc
ret
into
inc
xchg
cmc
leave
les
aas
sub
hlt
frstor
add
mov
push
sub
ja
js
xor
pop
jns
adc
lods
call
stos
mov
xchg
mov
bound
fucomip
jns
stos
or
push
add
pusha
mov
scas
push
out
push
es
mov
mov
and
inc
and
movsl
cld
cltd
lock
in
mov
lcall
add
inc
mov
rorb
and
mov
or
dec
sub
xorb
inc
adc
mov
cltd
mov
repz
rolb
jo
shl
xchg
mov
pop
cs
sub
in
xor
scas
jae
cmp
pop
jge
sbb
adc
fstpt
mov
pop
subl
sbb
xchg
cli
cmp
and
cmpsl
andb
sub
and
sub
mov
call
sub
gs
popa
push
cmp
mov
adc
ljmp
and
repz
xor
add
mov
pushf
sti
lcall
test
cli
xor
xchg
iret
sbb
gs
push
testl
sub
in
cmpsb
fimull
loopne
jg
repz
rcrl
out
mov
out
sbb
adc
outsl
cmp
push
pop
jge
jne
push
out
adc
push
aas
repnz
add
sbb
cmp
in
adc
cmp
or
adc
repz
leave
dec
and
jbe
mov
not
in
adc
cmp
sub
push
or
sahf
loope
or
pop
outsb
lock
jle
loopne
sub
orb
xchg
dec
out
or
mov
repnz
mov
cmpsl
in
push
es
add
mov
jl
xchg
push
pop
add
pop
fnstcw
int
seta
cmp
out
ja
out
aam
jle
push
sbb
jnp
les
imul
into
pop
stc
push
popf
jge
xorl
popa
dec
sub
ljmp
mov
mov
rcll
jno
xchg
mov
arpl
jno
test
repz
and
out
pop
dec
ret
mov
out
in
mov
bnd
hlt
jbe
fsubrl
out
jno
sti
sub
in
das
fimull
adc
pop
lcall
enter
or
push
icebp
test
inc
lds
cwtl
decb
pop
xor
push
fistps
pop
cmp
mov
sbb
or
stos
in
add
sub
xchg
jo
test
xchg
adc
sub
cmpsb
xchg
daa
mov
loope
imul
sahf
icebp
xchg
adc
push
fucomi
add
insb
ret
adc
ja
aaa
popa
out
or
test
lods
aaa
jnp
mov
cmpsl
imull
xchg
cld
gs
adc
push
dec
pop
pushf
xor
cmpsb
dec
push
xchg
test
mov
push
repz
xsavec
xchg
es
cmp
jae
adc
shlb
rclb
repz
pop
ret
dec
xlat
movsl
pop
cmp
adc
xchg
and
jecxz
pop
add
xor
mov
stc
sahf
ret
push
jl
out
push
or
nop
popa
xor
xchg
and
shll
fldenv
movsl
adc
test
aam
lret
jb
and
xchg
stos
cmpsb
jge
fcoms
sub
xchg
hlt
rorb
inc
leave
mov
xor
jge
les
cvtps2pi
stc
daa
sti
add
sub
and
fistpl
mov
xchg
movsl
or
shlb
xlat
lock
dec
fwait
and
or
lret
fwait
adcl
js
sbb
pop
inc
adc
shlb
ljmp
pop
sbb
and
adc
pushf
rclb
cmp
insl
cmp
push
jbe
into
outsl
jno
push
jmp
bswap
xchg
dec
mov
sahf
scas
fs
mov
jae
add
mov
add
aas
pop
adc
test
jmp
call
lods
insl
fisttps
cld
sbbl
cmpb
cld
fwait
lahf
inc
mov
movsl
into
sbb
jmp
sub
and
push
xor
and
cli
pop
mov
or
mov
cmpsb
mov
rcl
push
cmpsb
jnp
xchg
mov
addr16
movsb
or
jg
xchg
addr16
shlb
lods
dec
push
jae
jmp
push
mov
ja
movsl
mov
jnp
inc
xchg
popf
mov
negl
in
ret
xor
jno
sti
repz
mov
pop
cmp
mov
cmp
lcall
test
xor
pop
xchg
hlt
sub
iret
mov
lret
dec
es
adc
sbb
std
jg
push
pushf
cmp
pop
xor
jecxz
pop
or
inc
pop
adc
push
dec
push
cmp
sub
mov
dec
mov
popa
pop
mov
inc
std
push
imul
add
out
add
fwait
mov
jbe
sbb
pop
inc
mov
cmp
inc
mov
cli
pop
sbb
ror
cmp
rol
lret
shll
jno
pusha
dec
aaa
cmp
out
outsb
cmp
shlb
popa
popa
popa
jb
sub
adcb
dec
mov
loope
xchg
jo
js
xor
push
pop
sbb
leave
cli
cmpsb
sbb
lds
mov
addr16
gs
sub
fcmovb
push
or
mov
adc
std
cs
fwait
jno
inc
shl
int3
shlb
mov
mov
test
inc
and
fisttps
and
jbe
push
int
mov
mov
inc
out
sbb
mov
lahf
mov
cmp
clc
cmp
dec
aad
mov
add
push
xchg
xor
and
iret
or
mov
hlt
inc
cmp
xor
std
xorb
imul
mov
fsubs
cmp
jo
cwtl
outsb
cld
cmp
mov
inc
popf
jno
fisubrs
lea
rcr
adc
mov
push
lahf
mov
mov
clc
into
push
test
xchg
jg
inc
xchg
or
pop
cltd
out
cmpsb
in
inc
jmp
mov
daa
call
mov
ss
push
mov
xchg
addr16
lret
mov
xor
adc
pop
rclb
sub
xchg
adc
ljmp
insl
pop
jo
imul
push
mov
ret
pop
shlb
push
rcll
jge
test
popf
in
clc
dec
in
mov
sbb
dec
add
inc
inc
ljmp
push
jg
std
ds
adc
mov
or
inc
aad
and
add
dec
and
mov
into
gs
mov
dec
push
jno
mov
pop
mov
mov
mov
push
subl
lcall
adc
loop
sbb
fsubr
push
addl
jl
xlat
dec
lcall
mov
leave
mov
daa
xchg
pmullw
mov
enter
fmull
mov
mov
std
mov
daa
loopne
mov
inc
arpl
push
jbe
and
clc
cltd
mov
dec
into
mov
and
cld
scas
into
sbb
pshufw
inc
out
pop
pop
loopne
pushf
sbb
std
dec
sbb
xchg
in
ror
call
roll
pop
cmp
jns
dec
and
test
sbb
dec
ror
jle
iret
mov
fiadds
dec
psrad
pop
movsl
fbld
and
pusha
xchg
push
mov
out
and
lahf
sbb
sbbb
dec
add
popa
lret
out
push
sub
sbb
dec
jo
loop
pop
fs
pop
and
inc
pop
pop
mov
and
nop
adc
pop
clc
into
js
adc
daa
cmp
adc
add
fadds
popf
dec
scas
jg
fcom
push
out
and
scas
add
pop
adc
xchg
rcrb
and
jae
mov
cmc
sbb
repz
inc
xchg
pop
das
jge
xchg
stc
mov
jle
jns
in
int
xchg
jno
mov
lods
pop
or
cmpsl
rorl
mov
pop
shrb
sarb
popa
mov
int3
cmp
cmpsb
notb
cmp
sbb
jmp
sub
or
mov
mov
stos
and
mov
stos
outsb
repnz
push
movl
test
pop
jecxz,pn
fwait
xlat
add
fdivs
mov
out
push
sub
inc
cmp
pusha
mov
inc
cmp
gs
dec
adc
scas
dec
adc
sub
jb
mov
xchg
pop
xorl
mov
lcall
je
dec
cmp
inc
sarb
cmp
or
ret
jae
cmp
push
in
add
jg
push
mov
inc
push
jg
repnz
cld
inc
mov
aaa
lods
lret
push
xchg
rep
imul
add
or
mov
fsubl
inc
in
dec
sbb
sub
stos
lahf
orb
int
subl
bound
cmp
or
shl
and
push
xchg
dec
sbb
call
test
testl
xor
xchg
add
insb
jno
xchg
loope
mov
sar
sbb
cmp
cs
int3
in
fstps
xor
jns
jae
cmpsb
inc
pop
and
adc
fs
mov
mov
pop
push
xor
add
lds
sbb
mov
mov
aam
popf
jl
repz
sub
lea
mov
add
mov
ret
or
push
sahf
insl
xchg
mov
xchg
lock
mov
stos
mov
hlt
sbb
or
push
sub
inc
mov
cld
pop
aam
push
je
dec
adc
cwtl
filds
aaa
and
push
sub
repz
fistpl
repnz
loop
push
ss
push
inc
cmp
push
pop
subl
push
lods
xor
aad
adc
scas
inc
xchg
and
aad
cmp
inc
lcall
adc
das
mov
pushf
push
cmp
pop
and
and
lcall
inc
mov
or
imul
lahf
xchg
push
outsl
rorl
nop
clc
lock
xchg
fiadds
xor
pop
sbb
gs
in
es
ja
repnz
repnz
mov
jp
xor
lds
cmp
ja
testb
insl
adc
and
shrb
pop
and
mov
xor
repnz
popf
xchg
cmc
orl
aaa
push
push
xchg
push
jge
out
shlb
fs
je
out
jbe
xchg
daa
jb
add
subl
add
outsb
mov
les
mov
jo
pop
in
mov
jmp
or
movsb
or
lret
sbb
inc
sbb
cmpsb
jb
mov
cltd
push
and
jl
or
xchg
loopne
hlt
cmpsb
fcmovu
lret
jg
gs
in
jmp
inc
out
adc
sub
mov
sbb
popa
cltd
es
inc
or
movsb
std
shr
jp
inc
xor
nop
push
add
xorb
cmpl
and
adc
cmp
pop
pop
je
pop
es
iret
adc
jg,pt
movsb
or
loope
movsb
iret
cmp
and
and
ds
add
push
arpl
push
sbbb
andb
add
dec
clc
mov
inc
icebp
sbb
mov
mov
lods
out
bound
push
js
mov
leave
mov
add
dec
pop
mov
add
xorb
int3
aad
data16
sbb
sbb
sub
ret
iret
sub
jmp
mov
daa
jp
or
dec
bound
clc
sub
xor
divl
fs
negb
push
mov
movb
pop
mov
or
add
xchg
test
aam
and
jns
mov
cmpsl
mov
dec
cmc
mov
xchg
out
xchg
test
mov
arpl
xor
mov
pop
jnp
xchg
mov
stos
sub
addr16
stos
pop
mov
roll
add
push
dec
in
mov
cltd
inc
xor
cmp
ja
adc
push
xor
push
push
aad
xchg
xchg
xor
shrl
add
scas
in
into
test
arpl
test
loop
inc
imul
inc
mov
inc
xor
fcoms
mov
sub
jge
in
loopne
ss
cmp
xchg
mull
sti
xchg
das
neg
fmull
xchg
push
xchg
aad
rol
sarb
stos
lds
bound
xchg
xor
lods
jo
dec
pop
cli
push
cmp
add
xchg
mov
mov
notl
mov
fmull
mov
gs
xchg
cmp
lds
imul
or
dec
adc
lea
mov
sbb
out
inc
stos
popf
lods
popf
lods
enter
jnp
mov
mov
mov
les
movsl
dec
push
or
push
lcall
repnz
fnstenv
mov
push
or
mov
and
andb
test
adc
lahf
jg
clc
mov
inc
jno
mov
pushl
pop
cmp
sub
mov
push
stos
je
jne
adc
sbb
testl
sbbb
hlt
les
mov
call
test
sahf
int3
xchg
mov
dec
jb
cmp
pusha
cmp
test
in
icebp
arpl
pop
and
dec
outsb
bound
mov
movsl
push
mov
cmp
stos
je
subps
mov
addb
adc
mov
ja
cmp
jae
pop
mov
stos
aad
adc
inc
mov
sub
mov
fldt
inc
loope
add
fdivr
daa
mov
cltd
adc
push
test
sub
bound
mov
adc
xor
fldt
idivl
dec
lahf
and
arpl
lret
dec
or
jmp
add
cmp
rolb
imul
lods
incl
sub
std
dec
jnp
xchg
adc
fidivs
mov
repz
in
xor
nop
sbb
add
rcrb
or
aad
xor
jmp
into
mov
add
out
jae
xlat
lea
mov
cmpsb
xchg
shlb
sti
mov
std
or
jne
xchg
mulb
ds
sub
push
inc
pop
cmc
mov
and
sub
adcb
add
push
sbb
mov
loopne
mov
mov
or
dec
push
iret
inc
aad
jmp
out
pop
arpl
inc
dec
cmp
jg
lcall
aaa
xor
add
call
roll
inc
pop
adc
adc
test
pop
pop
out
iret
arpl
xor
and
lods
dec
dec
dec
sti
roll
aam
pop
jne
mov
mov
and
dec
mov
out
sbb
icebp
repz
repz
test
popa
insb
xchg
sbb
cwtl
sbb
jno
pusha
fwait
lret
in
imul
mov
mov
shll
cmpsl
leave
test
jnp
jecxz
mov
or
leave
cmpsb
or
loop
rcrl
sub
lods
add
js
jecxz
es
cmp
pop
cmpsl
loope
sarl
outsl
lret
xchg
ds
loop
movsl
jno
fwait
repz
xorl
cld
mov
call
cld
fstl
sbb
mov
cmpsl
and
xchg
mov
mov
int3
xchg
sbb
jae
inc
popa
push
fbstp
sbb
sar
pushf
sub
inc
stc
aaa
and
mov
mov
push
in
sub
mov
icebp
jns
jo
or
aas
loopne
jge
and
enter
iret
test
cli
and
jb
mov
test
pop
inc
inc
and
add
cmp
sbb
int3
fisubrl
mov
mov
xchg
xchg
lret
and
xor
sub
jno
lret
lods
xor
dec
xchg
rcl
movsl
dec
test
and
cmpsb
iret
and
fsubrl
adc
pop
rcrl
jg
xorb
or
cmc
pop
pop
and
ror
mov
mov
lret
push
xchg
jl
inc
jmp
mov
aaa
xchg
xchg
test
xchg
mov
xchg
cmpl
scas
rol
cmp
rorl
test
addb
cli
xchg
dec
mul
xor
clc
hlt
ja
sbb
jg
sbbb
mov
aam
sub
sahf
adc
lock
pop
aas
jae
add
or
scas
test
mov
jno
dec
mov
lea
pop
popa
sbb
xchg
aaa
inc
dec
pop
sbb
inc
push
hlt
mov
xor
and
push
dec
pop
and
adc
pop
lea
adc
xchg
movl
mov
daa
xlat
or
xor
sbb
jbe
xchg
sti
push
and
out
push
out
scas
inc
insb
add
mov
lods
jmp
lods
fwait
popf
imul
js
cmp
sbb
data16
and
or
push
push
lock
jbe
lods
xchg
je
pop
faddl
test
mov
test
test
inc
fwait
xchg
dec
mov
jne
dec
stc
stos
cs
adc
xor
aaa
pop
jb
mov
cmpsl
xchg
push
pop
mov
outsb
lods
mov
rcrl
pop
inc
xor
scas
push
or
imul
mov
mov
push
pushf
sti
stos
push
cli
cmp
mov
xchg
loope
sbb
out
nop
add
in
mov
or
sub
fistpll
call
inc
iret
shlb
test
repz
jns
xor
jmp
cmp
scas
js
mov
push
repnz
cmpsb
mov
dec
aam
int
and
call
xor
xchg
lcall
std
add
xor
mov
inc
lcall
shll
stc
nop/reserved
xor
sub
dec
fisubs
pop
dec
in
daa
cli
scas
lods
hlt
outsb
or
dec
roll
xor
iret
mov
stos
aas
stc
pop
int3
push
pushf
xor
les
mov
dec
nop
and
arpl
push
xchg
or
adc
lods
ljmp
and
dec
inc
mov
iret
mov
mov
lahf
mov
inc
push
jl
dec
mov
rcrl
jmp
adc
add
xchg
xor
gs
pusha
and
int
add
mov
cmp
jle
dec
loop
ss
lret
jbe
cmpsl
inc
jmp
in
cmp
out
or
adc
push
mov
imull
mov
inc
mov
jne
sbb
repnz
inc
popf
movsb
cmpsl
imul
add
inc
mov
pop
rcrl
cmc
adc
push
xchg
repz
xchg
out
lods
pop
prefetch
das
sub
inc
stc
mov
add
mov
ljmp
push
xchg
inc
andl
sub
cmp
sub
ret
aaa
add
jmp
xor
or
bound
dec
inc
pop
ficomps
cmpb
inc
or
pop
inc
mov
leave
enter
hlt
nop
in
je
inc
xor
jne
pmuludq
pop
fsts
jle
sbb
sub
pop
popf
into
cmp
ljmp
sub
out
xchg
pop
pop
aaa
dec
adc
pusha
xchg
test
nop
cmc
mov
les
daa
and
sub
mov
sbb
cmp
lcall
fcoml
dec
int
mov
jle
loop
ljmp
fnstsw
icebp
push
add
test
cmp
pushf
scas
outsb
jg
int
xor
jae
clc
pop
mov
fcom
sub
mov
mov
push
cmp
int
push
or
adc
fneni(8087
bound
out
jne
push
fwait
mov
dec
inc
test
or
loope
pusha
cmp
sub
orl
lds
mov
gs
jp
xor
pusha
fsts
jp
fisubs
in
les
pop
push
insb
push
imull
xchg
dec
and
pop
push
pop
aas
mov
jl
test
adc
out
repnz
cld
cmp
aad
repnz
xchg
mov
push
or
add
bound
xor
fs
cmc
fisttpll
sub
inc
lods
and
addr16
pop
jns
push
movsb
insl
mov
cmpsl
push
movsb
push
in
pop
nop
cmpsl
inc
pop
lea
xor
popf
hlt
mov
outsb
out
jp
inc
test
cmp
and
sar
pop
jmp
ret
arpl
xor
xchg
mov
loop
mov
mov
cmc
cmc
sbb
int3
xor
and
repnz
inc
pop
mov
push
pop
or
push
cmp
insl
ds
je
ret
mov
push
rorl
fcmove
xor
pop
and
cmp
movsb
lahf
push
cmpsb
dec
add
lret
dec
lock
pop
notl
push
sar
inc
mov
call
mov
lret
repz
pop
add
jle
and
push
adc
out
xchg
jb
inc
andb
xchg
and
nopl
push
push
sub
push
jbe
pop
nop
insb
out
out
clc
out
repz
mov
rol
or
shlb
mov
sub
iret
das
dec
ss
rorb
call
xor
push
in
lds
push
xchg
fcomi
mov
sub
jmp
pop
divb
push
mov
push
add
sub
aaa
sbb
push
push
push
cli
ds
int3
sub
mov
xor
addl
aas
jb
out
in
cmp
ret
adcb
sti
fisubrl
or
inc
imulb
pusha
and
insl
inc
or
dec
mov
aaa
xchg
jl
mov
and
test
xchg
push
xor
cmpsl
and
pop
xlat
push
pop
add
jmp
loope
std
xlat
arpl
cmpsl
ds
xor
les
pop
mov
cmp
insl
mov
xor
cli
mov
sub
lcall
fmuls
ret
movsl
cmp
sti
adc
test
fmul
loop
ss
rcrb
inc
dec
and
pop
jge
aad
shlb
outsl
dec
nop
fcoms
in
aam
mov
jne
mov
adc
jmp
ds
sarb
xor
loop
sub
test
shll
ret
cmp
insl
dec
scas
fisttps
adc
ljmp
std
or
sbb
enter
jp
arpl
das
sbbb
sahf
aaa
add
imul
sbb
pusha
sti
imul
inc
sbb
pusha
aam
ja
mov
dec
sub
add
call
mov
addl
in
mov
jo
add
pop
xchg
in
push
adc
mov
movsb
and
adc
std
push
cltd
xlat
ror
jno
daa
jmp
arpl
cmp
sub
into
repnz
sub
and
cmp
shl
sbb
fstpl
test
push
push
or
mov
pop
push
das
test
sub
in
mov
lock
popa
dec
push
sbb
aaa
cld
adc
push
iret
icebp
daa
cmc
cs
stc
jmp
jns
add
cwtl
sarl
xchg
cmpsl
enter
and
jno
in
jb
push
xchg
xchg
mov
shrb
and
or
adc
and
adc
pop
mov
pop
subl
mov
sub
sub
inc
fdivrl
jecxz
mov
or
sbb
test
cmpsb
and
xor
scas
xchg
lret
jo
fdivrl
dec
xor
inc
dec
daa
cmpsl
sbb
in
or
jns
test
or
fdivrp
cmpsl
sub
jecxz
insl
stos
iret
sub
mov
pop
push
dec
data16
lret
inc
stc
xor
xchg
icebp
int3
ret
fnsave
jmp
cltd
inc
pop
sbb
popa
add
sub
push
cltd
add
sub
jb
xchg
sbb
in
roll
xor
insb
adc
loope
daa
mov
bound
daa
cmp
pushf
push
in
aas
int
mov
dec
xchg
mov
pop
sbb
scas
pusha
sub
das
inc
mov
sbb
pop
push
aas
std
mov
lret
in
out
inc
shll
das
cmpl
jle
fstpl
or
sub
ffree
jno
jmp
add
cmp
popa
jl
pop
fcomps
inc
add
movsb
or
pop
stc
mov
inc
fldt
idiv
lcall
negl
pop
data16
jae
inc
fisubs
cmp
xor
jg
pop
aam
lock
ss
sbb
pop
xor
and
xchg
pop
popa
pop
negl
mov
pusha
xlat
aad
adc
stos
and
xor
mov
xchg
js
test
sbb
jmp
cmp
or
xchg
xor
ds
sarl
adc
jo
push
inc
insl
mov
je
xchg
cmpsl
sti
lahf
mov
mov
hlt
pop
cmovg
inc
sub
testl
aad
inc
and
sbb
pop
addr16
repnz
in
mov
inc
test
call
push
jno
jge
mov
popf
cmpsb
and
movsb
mov
sbb
mov
sub
insb
mov
jne
mov
mov
dec
test
jge
sub
leave
push
psubsb
push
xchg
and
int
fisubl
stos
pop
xchg
enter
or
push
scas
jmp
icebp
insl
xor
lahf
dec
call
xchg
aas
mov
out
out
test
movsl
hlt
outsl
jns
leave
and
and
in
mov
sbb
leave
sub
arpl
repnz
and
mov
lea
push
sub
shr
sarl
push
nop
pushf
je
je
movl
in
pop
sub
xchg
pop
mov
insl
addr16
mov
sub
mov
out
outsl
nop
movsb
imul
test
jns
lahf
sbb
ds
decl
adc
addl
popf
rorb
rorl
pop
push
push
enter
jmp
pop
inc
mov
icebp
cmpsl
cmp
bound
jmp
out
sti
frstor
cs
xlat
lret
push
faddp
push
aad
and
and
leave
das
bound
cld
movsb
scas
test
mov
out
cmpsb
push
mov
adc
in
loopne
inc
movsl
xchg
cs
xorb
or
pushf
fyl2xp1
leave
scas
ja
mov
cs
jnp
es
neg
push
jbe
sub
mov
outsb
pop
xor
push
insl
xchg
fldcw
jle
ss
cmpsl
imul
negl
jo
fucomp
icebp
ja
pop
addb
inc
cwtl
movsl
pop
jle
stc
aad
push
mov
push
lods
iret
mov
js
mov
hlt
push
fs
scas
cmpsl
or
cli
icebp
mov
dec
xchg
jle
mov
jge
mov
xor
movswl
push
mov
popf
sub
mov
jge
pop
jnp
mov
fs
dec
negb
aas
outsb
dec
sub
mov
sahf
pop
mov
jnp
sub
or
out
ja
in
lock
jno
out
push
sbb
popf
pop
scas
adc
sldt
clc
rcrl
mov
popa
scas
or
sbb
iret
fs
mov
push
imul
cli
mov
push
repz
fst
call
out
push
int3
cmp
out
lds
aaa
add
bound
mov
xchg
hlt
or
test
mov
sub
rorb
cld
sbbl
adc
xchg
in
push
popa
ss
mov
sub
inc
mov
push
cmp
dec
sarb
inc
arpl
fs
jo
cmp
add
loop
mov
ja
insl
mov
sbb
push
js
std
repnz
xchg
lahf
inc
or
je
scas
xchg
adcl
mov
arpl
xchg
je
cmp
pop
mov
jecxz
cmp
xchg
or
or
hlt
adc
je
sbb
sub
and
out
inc
mov
cmp
jmp
sub
jge
scas
adc
adc
enter
inc
mov
and
add
or
xor
filds
or
mov
out
stc
fucomp
inc
cmpsl
popl
push
push
sbb
push
or
fwait
sbb
cwtl
jns
filds
outsb
xlat
pop
pop
stos
push
jmp
ret
lock
add
or
jb
nop
enter
insl
lods
dec
add
fmul
sahf
in
stos
push
pop
sbb
push
pop
sub
cs
mov
dec
mov
aaa
pop
push
push
ljmp
scas
and
jne
jle
mov
fdivs
push
dec
xor
add
pusha
pop
enter
sub
mov
cmpsl
mov
pop
fidivl
pop
add
xor
pop
lock
pop
xor
cmp
rcll
js
popf
out
sahf
scas
bound
pusha
movsb
hlt
js
cmp
mov
mov
push
mov
rorl
or
imul
incl
aam
mov
push
mov
jge
jnp
imul
adc
and
sbb
push
inc
addr16
ja
in
mov
push
mov
mov
dec
push
mov
pushf
xor
repz
or
sbb
mov
pop
dec
lahf
sbb
fstps
dec
mov
into
js
xor
lock
mov
mov
mov
dec
pushf
xchg
pop
stos
push
rclb
pop
mov
call
sub
or
fucomp
loopne
pop
pop
fcom
dec
ficomps
sub
mov
sub
ja
sub
rorl
flds
mov
jo
icebp
jne
sub
mov
xchg
push
sbb
leave
ds
dec
rcll
push
testb
aam
pop
mov
out
test
sub
mov
std
pop
mov
cmpsl
pushf
mov
mov
mov
mov
ffree
and
cmove
ror
pushf
cwtl
dec
jns
jo
imulb
jo
movsl
mov
jmp
add
stc
fsubl
sahf
int
and
xor
dec
pop
and
cmp
pop
shrl
aam
add
inc
xchg
call
gs
add
fwait
mov
fs
push
add
bound
jbe
sar
bound
xchg
adc
popa
xor
incl
pop
jg
mov
mov
pop
or
or
arpl
int3
dec
dec
inc
mov
xchg
dec
mov
stc
aam
js
enter
mov
stos
call
stos
xchg
mov
mov
cmpl
inc
push
push
add
add
lcall
cmp
push
mov
pop
out
adc
mov
push
push
xchg
xor
daa
fwait
cwtl
adc
jo
xor
aad
repnz
inc
push
shll
mov
das
add
inc
sub
sbb
out
jbe
push
faddl
sbb
mov
dec
aaa
mov
or
pushaw
and
inc
and
inc
dec
push
pop
pop
add
ljmp
pop
sbb
mov
inc
and
mov
std
lock
cmpsl
dec
insl
sbb
int3
fs
gs
paddusw
loop
mov
xor
addr16
nop
add
scas
cmp
jae
imul
push
arpl
insl
push
adc
or
dec
gs
inc
and
arpl
or
sub
inc
rolw
mov
mov
sub
pop
mov
leave
pushf
in
fistl
adc
jne
pop
out
and
outsl
or
ret
outsb
mov
mov
bound
jae
std
push
pushl
icebp
sub
mov
notb
leave
mov
jmp
pop
jl
in
out
aas
xor
negb
jae
mov
inc
adc
fadd
gs
mov
sbb
jecxz
ds
sbb
push
lds
mov
ffreep
cmp
out
mov
pop
loop
fistpll
pushf
and
cmpsb
adc
inc
lods
cltd
pop
xor
xchg
mov
sbb
mov
pop
call
or
dec
sahf
adc
cmc
sub
dec
mov
std
xchg
movsl
mov
ficompl
lahf
dec
idivl
test
fisttpll
dec
adc
aam
fwait
inc
push
and
frstpm(287
frstor
xor
es
shll
test
sahf
cmp
into
pop
add
inc
pop
fiadds
nop
mov
xchg
dec
sahf
sbb
cmp
pop
inc
fbld
out
in
call
in
xor
cmpsl
cmp
gs
test
adc
faddl
xor
rcrb
es
mov
popf
nop
add
jo
wbinvd
addr16
rcrb
faddl
jo
and
and
es
inc
aad
fidivrs
jns
nop
sub
and
fs
push
cwtl
push
and
xchg
or
mov
push
or
push
daa
mov
jno
pop
loope
adc
call
cmp
xchg
out
cmpsl
subl
mov
data16
adc
cmpsl
lds
aad
loop
push
cmp
and
lods
lcall
testb
es
pushf
xor
push
add
jge
and
subb
ret
push
inc
lret
cwtl
and
notb
cmp
repz
outsb
sub
dec
stos
adc
mov
addr16
iret
jmp
xchg
push
mov
push
jl
sub
inc
fwait
dec
add
scas
jl
loopne
dec
stc
imul
mov
cmp
adc
pop
out
orl
mov
push
ficoml
mov
repz
insl
fwait
cmp
pcmpgtw
imul
mov
sbb
xor
mov
xchg
mov
jnp
or
mov
inc
ljmp
lea
call
cmpsb
in
pushf
idiv
xor
popa
xchg
aas
pop
mov
rcll
cmpsl
pop
push
andb
cmpsb
add
mov
sbb
in
add
jbe
push
jmp
pop
cltd
mov
aaa
jnp
mov
pop
cwtl
imul
out
mov
cwtl
push
aaa
sbb
mov
or
fsubl
push
popa
pop
daa
fcoms
mov
xor
sub
cmp
aam
in
int3
lcall
fmul
dec
inc
out
xchg
inc
adc
dec
add
or
scas
enter
pusha
push
out
pop
mov
mov
addl
jmp
jae,pt
cwtl
rcrl
rorl
inc
fdivrs
popa
xchg
push
mov
jno
cli
and
loope
jle
mov
bound
mov
aam
addb
mov
jp
lock
sub
out
into
test
repnz
pop
cmpsl
inc
xchg
push
lods
inc
stc
pop
js
adc
mov
xchg
cmpsb
aas
adc
je
push
fsubl
cmp
dec
mov
pop
push
stos
inc
push
mov
aam
cltd
and
cmp
mov
xor
xchg
mov
scas
jmp
test
push
mov
sbb
std
lods
orl
repnz
sbb
mov
cmp
xor
scas
add
repnz
xchg
ret
mov
shlb
callw
out
cwtl
or
mov
mov
stc
cmp
aas
and
cmc
in
mov
dec
repnz
lea
mov
and
jnp
jnp
xor
inc
loopne
dec
xor
insl
insl
pushf
data16
mov
das
sbb
pop
out
jmp
ja
shrb
adc
stc
loopne
or
inc
inc
jns
pop
vpminsw
sub
mov
jp
jns
or
push
scas
xchg
cmp
in
xor
into
je
xchg
call
repnz
xchg
ficomps
cmp
jge
loopne
push
out
xor
cmpl
ss
int3
in
pop
sti
sbb
xchg
dec
iret
out
mov
xor
jl
push
sti
push
sub
ffree
sub
lods
sub
loope
clc
icebp
lret
inc
shl
mov
mov
push
push
shlb
loopne
cmp
stc
pusha
aas
push
fiaddl
out
jl
mov
jne
mov
sarb
jbe
mov
pop
stc
into
shl
mov
movsb
outsb
scas
decb
pop
inc
mov
rclb
pop
inc
and
orl
xor
or
sbb
xor
adc
mov
sbb
arpl
movl
xorb
cli
cmpsb
imul
insl
scas
or
cli
sub
push
leave
gs
add
and
cmpsb
push
scas
jb
aaa
or
addr16
mov
lds
mov
iret
in
fidivrl
jne
data16
sub
int
pusha
mov
stos
xor
jnp
dec
in
ret
sub
aas
add
and
push
mov
into
add
scas
push
pop
rolb
outsb
lods
hlt
fisttpll
jl
and
sbb
xchg
pop
xchg
shl
stos
and
iret
loope
jns
pop
dec
repz
push
arpl
jno
shrb
test
in
data16
cli
test
outsl
mov
inc
sub
xchg
xchg
ficompl
sub
push
sbb
ds
in
xchg
loop
jle
inc
inc
pop
daa
cmp
and
lret
push
dec
divl
sti
push
pushf
add
mov
mov
mov
xor
sub
outsb
cwtl
sub
dec
push
sub
test
cmp
pop
adc
fistl
dec
mov
lods
insb
lock
fwait
mov
mov
push
bound
es
xor
in
scas
push
jnp
ja
sub
xor
sub
js
pop
ret
sub
mov
sbbl
pop
xchg
xchg
stc
pushw
rorb
test
sbb
xor
sbb
pop
lods
mov
pop
cli
add
inc
jp
xor
xchg
ds
adc
test
in
mov
dec
aad
pushf
push
add
bound
out
loop
push
adc
das
jge
in
adc
push
mov
mov
repz
out
lock
inc
push
rorb
or
stc
es
lret
insb
fcompl
mov
inc
inc
inc
xor
jl
je
xor
adc
dec
popa
scas
sbb
lcall
mov
arpl
test
loope
ljmp
imul
push
cwtl
in
add
inc
cmp
pop
insb
sbb
shll
inc
stc
push
mov
aad
jbe
nop
icebp
std
loopne
xchg
add
loopne
stos
xor
je
xchg
dec
push
inc
xchg
cmp
shll
insb
fcomps
jbe
xchg
sub
xor
nop
sub
sub
push
shlb
or
addr16
dec
notl
inc
inc
test
outsb
pushf
xlat
lods
test
push
shl
mov
out
push
jmp
cmp
cli
setb
test
and
movsl
ljmp
sahf
loopne
mov
insl
test
dec
xchg
clc
jl
negl
ss
push
or
adc
lret
gs
outsb
cltd
je
sbb
mov
jg
mov
mov
cmc
daa
call
ljmp
adc
xchg
iret
or
cmpsl
cmp
cs
rolb
cmp
popl
inc
push
arpl
cmp
repz
push
inc
mov
sub
out
adcl
mov
sbbb
fldl
mov
mov
cmp
lcall
push
inc
jno
js
cmc
cs
or
mov
mov
add
clc
in
push
sub
mov
or
dec
aad
mov
std
lea
dec
repz
addr16
dec
fiadds
jg
sub
cltd
lea
jle
xor
mull
lret
mov
add
push
es
mov
stc
sub
adc
stos
lahf
xor
mov
shrb
xor
sbb
loop
mov
cmp
and
repnz
xchg
nop
popf
xor
cmpsb
clc
in
or
lret
cmp
jp
sub
iret
push
xchg
xchg
aam
push
pop
jns
jae
jns
dec
in
in
sub
sub
add
lea
test
xor
jb
sub
fcmovne
push
adc
fsts
sbb
inc
add
pop
or
inc
movsl
lds
cs
ss
shlb
inc
nop
movsl
jno
adc
ficomps
pop
fnstenv
fs
xchg
outsb
or
or
addr16
roll
fcmove
add
cmpsb
std
xchg
arpl
cmp
sti
test
lcall
movb
adc
mov
sar
sti
inc
cmovns
pop
pop
or
in
cmp
dec
mov
call
adc
cmpb
sbb
and
fists
int
into
in
xacquire
add
adcl
jmp
cli
sbb
std
pand
imul
mov
jp
mov
dec
jae
repnz
in
nop
rclb
roll
pop
cmp
mov
outsl
fsubr
cmpsl
xchg
lods
int
aaa
mov
imul
push
push
xchg
lock
test
and
mov
inc
cmp
add
pop
cmp
dec
mov
test
cmc
pop
dec
cld
repz
cld
dec
mov
adc
popa
xor
inc
cmp
mov
inc
jg
into
je
mov
pop
cmc
ror
insl
mov
mov
push
xchg
sub
mov
mov
jne
cmpsl
inc
cmpsb
xorb
test
adc
pop
sbb
sets
int3
sbb
enter
sbb
jecxz
mov
ljmp
mov
push
inc
jne
pop
push
in
pop
call
leave
mov
jnp
addr16
adc
add
and
jmp
or
push
jns
xor
std
or
xor
and
push
das
jle
mov
scas
in
inc
dec
jo
push
jae
xchg
xor
xor
imul
pop
sub
clc
mov
xchg
pop
cmovle
inc
outsl
fstps
xor
pop
dec
jno
mov
dec
das
push
inc
pop
mov
xor
sti
pop
cmpsb
ret
push
fsubr
xchg
fmull
mov
scas
sbb
jp
xchg
shl
xlat
aaa
lods
cmp
cmp
inc
push
mov
inc
mov
xor
ljmp
inc
add
jg
pop
stos
jae
hlt
push
xor
divps
push
and
add
mov
fisttpl
je
movaps
sub
sarl
xor
xor
push
xor
enter
add
jl
jo
mov
push
negl
orl
mov
or
xchg
add
mov
dec
ja
mov
xor
mov
or
mov
jne
test
shrl
scas
cltd
lock
pop
sbb
mov
push
and
mov
add
call
arpl
test
or
pop
dec
jl
es
fwait
imul
mov
mov
daa
int3
push
sbb
filds
mov
cld
das
cmp
out
aam
lret
mov
sub
push
pop
fptan
psubw
ret
mov
fcompl
jmp
hlt
stos
mov
cltd
shr
jp
xchg
out
and
adc
add
push
ss
stc
jno
push
jo
mov
ds
cltd
fwait
lock
out
rorl
nop
mov
pop
test
dec
push
movsl
fildll
rcl
jne
mov
fstps
push
push
pop
adc
adc
mov
enter
pop
xchg
cmp
leave
add
xlat
dec
lock
ret
in
sub
popa
je
mov
inc
stos
add
and
cmp
or
sub
adc
sbb
cmp
or
lods
fs
pop
testl
pop
mov
dec
jge
mov
and
daa
cmp
mov
push
dec
roll
insl
mov
fwait
inc
loop
scas
xchg
mov
into
stos
and
cmp
sub
mov
push
enter
in
cmp
dec
inc
pop
leave
das
add
mov
lods
push
xchg
fs
hlt
xchg
movsb
pop
andl
jp
cmp
xchg
in
bnd
push
es
lea
cmp
dec
sahf
or
lret
fs
leave
mulb
aad
jns
mov
inc
incl
ljmp
and
sbb
mov
filds
pusha
add
push
mov
jbe,pt
lock
test
xor
aaa
inc
pop
insl
and
cmpsb
fldl
int
or
jmp
in
xchg
arpl
out
ffreep
mov
mov
lods
cmp
pusha
cmpl
lods
rcr
and
test
push
mov
nop
mov
sbb
sbb
pop
pop
mov
ret
jecxz
adc
ss
and
or
jo
sbb
ja
mov
adc
push
push
pop
subb
addl
inc
mov
daa
push
pop
sbb
pop
jo
out
cmp
xor
jp
adc
xchg
fnsave
or
pop
leave
pop
jo
clc
pop
inc
xchg
testl
in
ret
cs
xchg
mov
sbb
push
or
push
inc
pusha
jge
addr16
lcall
jge
push
fldcw
cs
daa
pop
ficoms
sarl
cli
dec
cmp
ljmp
out
addr16
fnstenvs
xchg
ret
sbb
jl
cmp
cmpsb
stc
pushf
int
sub
jle
aas
mov
divb
iret
js
out
push
enter
orl
push
subb
jb
xchg
leave
mov
jo
sub
add
lea
lock
nop
dec
out
jmp
cmp
jno
pop
pop
out
sbbl
daa
dec
arpl
les
add
popf
xchg
inc
pop
in
or
ss
call
cmp
insb
sub
xchg
xchg
cwtl
aam
and
aad
xchg
push
or
movsl
pop
shrl
testl
xchg
mov
jl
nopl
mov
fdivrl
lods
mov
rolb
jmp
popf
loopne
enter
mov
test
movsl
mov
aam
stos
push
xchg
sahf
mov
mov
jle
les
xor
nop
cmp
lds
div
cmc
mov
movsl
mov
and
or
lods
in
adc
rolb
dec
adc
xchg
pop
mov
dec
or
pop
sub
cmp
jp
jmp
adcl
inc
iret
sbb
mov
jb
jecxz
call
cmp
lea
inc
sub
push
in
or
pushf
movsl
or
enter
mov
mov
fldl
xchg
cmpsb
push
and
leave
cmp
xchg
aad
int3
mov
bound
inc
outsb
sbb
push
xor
mov
mov
or
js
push
mov
subl
push
mov
pop
mov
ja
imul
mov
or
sahf
movsl
pop
in
std
inc
in
leave
dec
fiaddl
inc
lret
pop
dec
mov
cwtl
loopne
add
mov
test
cmp
mov
inc
pop
ja
xchg
sub
add
fsubs
mov
mov
inc
or
shll
cmp
xor
es
scas
andl
pop
push
xor
sbb
pop
push
bound
lods
mov
cwtl
pop
nop
stos
aas
mov
cmpsl
fs
leave
xor
ss
push
mov
and
xchg
imul
jb
icebp
test
push
push
inc
in
jmp
mov
lds
and
clc
rcll
xchg
jg
jmp
in
add
hlt
rcrb
fildll
repz
mov
fisubrl
std
dec
daa
test
or
arpl
pop
lahf
xchg
ret
icebp
xlat
repz
push
push
cmp
in
ds
dec
pop
jbe
add
out
test
push
inc
loopne
xchg
fildl
dec
jbe
lcall
mov
mov
aad
and
inc
mov
in
jp
mov
out
mov
adc
pop
addr16
aam
ret
pop
sahf
in
pop
lea
adc
bound
sbb
fwait
idiv
cld
int
ds
dec
rcrb
call
lock
icebp
and
mov
cmp
mov
sbb
push
fdivs
in
sbb
fldenv
lods
push
je
lcall
in
lods
cmp
sbb
shr
int3
sbb
or
ja
inc
adc
sbb
and
and
sub
xchg
insb
rcrl
push
push
mov
negl
out
sbb
sub
ljmp
hlt
pop
inc
test
pusha
popl
enter
xchg
cmpsl
pop
addr16
xchg
dec
aad
sub
aad
sbb
daa
xor
push
ret
cmp
fmull
es
jle
mov
out
dec
push
cmp
or
sub
pop
insl
test
cmp
xchg
js
push
jae
out
and
pop
mov
dec
ds
insl
ja
push
pop
ja
xchg
test
test
cltd
subl
adc
or
mov
mov
loop
inc
shll
out
push
jecxz
xor
add
lock
lods
mov
xchg
lea
sti
fs
test
test
addr16
das
xor
xor
dec
mov
adc
mov
lds
mov
cltd
cmc
iret
jge
pop
popl
add
addr16
adc
add
inc
je
sbb
mov
cmp
pop
inc
rcrl
jae
fsubr
and
fcoms
daa
add
sbb
das
cs
xor
negb
ss
in
filds
int
mov
push
addr16
js
insl
xor
outsl
test
imul
dec
cmp
mov
jae
sbb
bound
mov
fdivs
pop
xor
push
dec
push
outsb
shrl
lahf
or
repnz
outsb
outsl
xchg
sub
loop
push
push
mov
pushw
les
sub
jecxz
fidivl
jnp
jo
and
jnp
adc
nop
int3
pop
xchg
rolb
test
popf
sub
in
dec
xchg
jno
fldl
inc
inc
pusha
pop
mov
pop
or
xor
ja
inc
pusha
xor
dec
lahf
xor
xor
loope
insl
orl
cmc
in
inc
xchg
or
cwtl
movsl
jp
push
jp
mov
mov
fimuls
xor
push
dec
cmp
insb
lock
test
das
gs
decb
push
jmp
jmp
mov
cmp
jb
test
mov
lret
and
addr16
jl
aam
lcall
dec
pop
ret
xor
push
ss
push
cmp
mov
and
sbb
pop
mov
mov
and
cld
clc
stos
out
cmp
mov
add
xchg
call
push
mov
fs
lea
ljmp
fmulp
sbb
clc
mov
or
push
lock
dec
jmp
cmp
jmp
push
pop
or
mov
dec
or
leave
add
pop
pop
jbe
addr16
push
fs
loopne
xor
sub
psadbw
repnz
loope
sahf
nop
mov
inc
inc
rcl
in
loop
bound
fldenvs
xor
repz
jno
arpl
fsubp
test
cmp
mov
jle
cwtl
jl
pop
and
repz
xchg
or
xchg
mov
shrb
sti
sub
pop
inc
mov
adc
shl
lods
loopne
fnsave
xchg
inc
add
jbe
mov
and
decl
add
lret
mov
sub
sbb
pushf
mov
cmc
loopne
mov
movsl
cwtl
aam
jb
lea
repz
fldcw
mov
or
lods
aas
dec
mov
nop
mov
pusha
pusha
sbbl
mov
add
adc
dec
sbb
pop
pmaddwd
and
stc
jnp
sbb
js
cli
pusha
insl
jb
mov
test
rcll
popf
and
aas
sti
stos
dec
shrl
xor
inc
cli
pusha
pop
loope
insl
out
loop
mov
mov
loopne
sub
sbb
out
lods
push
jae
xchg
push
xchg
and
add
pop
scas
test
mov
xchg
mov
incl
fimull
adc
dec
in
leave
xor
std
insb
push
movsl
xor
jp
in
jg
mov
inc
xchg
fdivrs
jge
loopne
add
ds
cmp
dec
push
int3
es
push
in
cbtw
ljmp
leave
and
mov
mov
cmp
jmp
inc
lret
int
xor
movsl
push
dec
jp
cltd
mov
push
sbb
push
insb
dec
push
xchg
pop
cmp
imul
mov
cs
pop
sti
jne
inc
push
stc
add
sub
addr16
or
popf
in
mov
js
mov
jge
add
cmp
cli
pop
test
and
adc
pop
jmp
or
fistpll
pop
dec
xlat
data16
adc
std
aad
or
test
movsb
stc
push
lock
popa
push
fs
enter
dec
xchg
jmp
cmp
out
daa
sti
xchg
push
jno
enter
jmp
push
lret
pop
mov
and
fldenv
push
jp
push
sub
pop
inc
mov
jno
cmpsb
mov
sbb
aam
or
dec
dec
jnp
pop
mov
xlat
repnz
jge
and
mov
jg
icebp
bound
and
nop
inc
jb
sahf
lea
push
aas
fbstp
testb
in
push
lret
push
les
inc
dec
mov
out
cmp
cmp
or
pop
jl
ret
popf
and
fwait
sub
adc
and
adc
jno
ret
movsb
jne
jecxz
add
cmpsl
lods
push
aad
mov
add
inc
push
in
xchg
mov
into
cmp
data16
cltd
xchg
loope
mov
and
pop
cmpsl
mov
lret
xchg
gs
cmc
sbb
jne
or
mov
and
cltd
xchg
test
cs
jmp
mov
inc
adc
fs
mov
addl
jne
aaa
pusha
sub
adc
aaa
dec
adc
mov
cmp
aas
adc
test
aad
fstpt
out
jbe
xchg
lods
in
roll
cli
dec
push
and
cmp
test
adcb
mov
popf
lahf
mov
loopne
ja
ljmp
flds
or
movsb
scas
fcmovu
or
push
push
mov
out
paddusb
fstpl
jns
push
shll
jns
mov
sahf
shll
sbb
popa
shl
enter
mov
ror
sti
stos
sahf
in
fdivr
pop
sti
mov
jl
push
dec
add
inc
das
inc
daa
inc
jg
dec
outsb
jno
cltd
inc
mov
xchg
inc
stos
scas
xor
or
or
sbb
lock
insl
in
outsl
sub
push
mov
or
jmp
sub
lea
stos
inc
and
mov
mov
mov
jae
leave
rorl
pop
or
jo
xor
out
xchg
inc
in
dec
sbb
xor
addl
adc
es
idivl
fidivs
fwait
test
in
pop
cmp
sub
dec
jno
cmpsl
mov
dec
xchg
and
pop
mov
lods
or
in
mov
dec
adc
xor
xlat
ljmp
testb
vzeroupper
sbbl
lret
add
xchg
adc
ror
stos
shll
dec
nop
pushf
fnstenv
dec
mov
mov
out
or
sub
push
addr16
adc
mov
dec
jmp
sub
pop
fisubl
mov
in
inc
xor
inc
adc
ljmp
hlt
sahf
pop
pop
movsb
jl
out
mov
or
popl
clc
add
adc
ret
jge
and
inc
insl
and
jecxz
push
sub
cmpl
pop
addr16
in
out
lods
sbb
jbe
cmpsb
sti
loope
mov
pop
mov
enter
sarb
cltd
push
lahf
leave
inc
sub
xor
xchg
mov
push
ficomps
cld
push
lret
xor
int3
push
in
dec
xlat
adc
mov
sbb
in
xor
ficompl
shrb
imul
mov
mov
movsb
pop
pop
cmc
in
adc
push
insl
or
add
jno
repnz
aad
imul
lods
in
in
push
loope
jle
movl
pop
push
cmp
lods
jp
ret
xchg
iret
enter
jg
pop
ss
jge
mov
add
das
xor
push
or
scas
in
jg
sbb
stos
sbb
cmc
dec
mov
xchg
nop
xor
inc
push
and
adc
jmp
push
dec
push
sub
mov
jo
cmp
mov
cmp
movsl
pop
cmpsb
outsl
btc
dec
shlb
ror
ficoms
mov
or
js
push
cmp
cmp
dec
sarl
cmp
mov
jecxz
adc
xlat
dec
sub
mov
mov
and
sub
ss
into
or
pop
jne
in
ftst
add
sbb
in
fwait
xor
test
int3
push
inc
add
xor
sarb
leave
outsl
xchg
mov
js
or
push
dec
pop
jp
push
pop
dec
push
clc
and
lods
mov
sub
adc
jnp
iret
push
jmp
jmp
or
push
and
add
sub
lea
arpl
loope
lret
cmp
cmp
into
mov
and
sub
push
mov
iret
popf
xor
jbe
icebp
sbb
movsl
mov
sbb
sbb
pop
in
mov
mov
fstpl
mov
mov
daa
mov
shll
movsb
dec
js
jb
xchg
popf
jp
mov
cli
mov
or
xor
xchg
data16
xorb
pushf
dec
incb
xor
or
xchg
and
push
sbb
pop
shlb
push
and
jno
xchg
mov
repnz
add
adc
dec
cmpsl
fidivs
das
stc
scas
addr16
sub
push
hlt
pushf
ja
sub
int3
cmp
and
outsl
lods
mov
mov
mov
bnd
imul
repnz
push
pop
adc
mov
jbe
mov
kmovw
push
push
xor
push
lock
ss
aas
jnp
push
sti
in
pop
cmp
test
xor
adc
repz
pop
nop
out
pop
push
cwtl
cwtl
test
xchg
xor
inc
xlat
pop
shll
add
mov
and
lahf
sbb
xor
js
fs
fcmovnbe
lds
aad
jo
cmpsb
imul
push
dec
call
fnsave
aad
loope
mov
dec
xchg
out
adc
push
mov
bndldx
push
sbb
popa
and
push
std
fnstenv
or
in
and
mov
js
push
arpl
xchg
sbb
pusha
rcr
incb
pop
into
sub
hlt
fdivrp
adc
inc
add
dec
or
jno
push
cli
xor
ds
loop
imul
inc
mov
xchg
scas
incl
insl
aaa
sbb
jle
xor
dec
inc
push
or
shr
fcomi
callw
outsl
loop
sbb
ret
xor
mov
fisubl
fsin
popf
adc
in
stc
popa
sub
push
fdivl
inc
sbb
jmp
lret
cmp
mov
jnp
cli
stos
push
lods
je
cmp
mov
and
xchg
imul
loop
cmc
cmp
add
inc
jmp
sbb
mov
test
jno
loope
inc
mov
out
pop
in
xchg
shrl
mov
pop
or
mov
add
mov
mov
dec
jge
andb
dec
leave
sti
cltd
push
mov
fadd
dec
jae
mov
pop
shrl
inc
gs
bound
xchg
mov
addr16
sahf
cmp
lahf
arpl
loop
ljmp
addr16
lahf
nop
dec
and
cs
jne
mov
das
mov
stos
push
outsl
push
jmp
out
test
stos
loop
sub
in
repnz
pop
xor
adc
adc
push
mov
jecxz
sarb
sbb
cmpsl
dec
imul
dec
ret
stos
cmp
popa
inc
mov
mov
les
push
cmp
call
add
jle
iret
sbb
jbe
push
mov
push
test
pop
shlb
aad
and
pop
dec
cmc
xchg
clc
out
cmp
arpl
fadd
mov
mov
adc
xchg
cmpsb
xchg
pusha
push
xchg
movsl
aaa
mov
push
mov
inc
jb
pop
pop
sbb
js
pop
and
push
mov
mov
les
jmp
or
dec
lods
mov
daa
sbb
orb
sbb
lock
mov
into
loop
clc
mov
pop
xchg
imul
fs
daa
out
nop
ret
stos
mov
or
dec
push
repnz
add
xor
popa
jae
mov
xchg
jnp
jle
mov
push
push
out
push
pop
das
movsl
les
jo
scas
out
mov
daa
push
aas
jo
fisubrs
imul
pop
notl
ret
leave
daa
out
int3
jb
nop
dec
orl
mov
mov
imul
fiaddl
cmp
lea
cmp
cmp
das
push
lret
loope
push
fsubrp
sub
sbb
insb
xor
dec
lods
pop
xor
sub
xlat
and
popf
ret
gs
sbb
mov
pop
aas
xchg
shrb
cltd
hlt
push
fisubrs
mov
xchg
loope
dec
cmp
mov
lcall
jmp
xchg
cmpsl
lret
in
push
aam
filds
jae
scas
sbb
aam
push
ljmp
cmp
mov
and
push
pop
mov
pop
or
insb
add
loope
in
and
repz
mov
lds
sub
dec
incb
sub
xor
xchg
xchg
cmp
lea
xor
push
pop
push
jns
sbb
mov
adc
scas
jbe
inc
lods
xchg
icebp
arpl
xchg
adc
popl
pop
lds
jo
adc
mov
jecxz
fwait
or
pop
incb
mov
rcrb
jge
mov
into
add
sbb
jmp
aas
jne
jb
xor
cld
mov
jg
push
int3
mov
nop
jo
adc
xchg
mov
adc
mov
into
and
jge
mov
lcall
push
jg
pop
mov
sub
fwait
cltd
ficomps
sub
mov
roll
clc
inc
adc
inc
fs
gs
cld
pop
pushf
push
ret
je
pop
out
xlat
push
sub
sub
stos
pop
aas
je
inc
call
fistps
sbb
in
gs
fisubl
mov
fsubrp
mov
dec
arpl
out
lret
sbb
push
mov
cltd
outsb
paddb
xorb
xlat
sbb
mov
mov
in
mov
dec
testb
mov
data16
push
in
sub
sahf
clc
sbb
lock
dec
shll
std
push
hlt
xchg
inc
and
insl
aad
and
ljmp
js
aam
fadds
add
jae
mov
cmp
stos
test
jle
dec
push
sub
push
fldln2
jnp
mov
fstpt
fistps
push
cmpsb
xlat
popa
jae
adc
aad
clc
dec
mov
sub
sbb
ds
jmp
sub
lret
scas
int3
xchg
addl
pop
out
jl
xor
pop
mov
sub
xchg
insb
or
jecxz
mov
adc
push
out
pop
das
sbbl
lahf
push
shlb
cmp
inc
data16
popa
in
pop
movsb
inc
sub
mov
sub
xchg
lret
dec
jbe
in
or
es
pusha
inc
shrb
mov
mov
mov
sub
inc
popf
sbb
adc
push
pop
ret
add
cwtl
rol
push
ja
not
outsl
add
jg
jge
imul
or
add
fstpt
cmpl
ljmp
pop
mov
into
stos
cmpb
mov
push
cmp
push
and
jmp
fisubrl
aas
xor
addl
shrl
and
imul
push
inc
popf
or
arpl
test
sub
jecxz
out
mov
cmp
shll
jmp
inc
movsl
sti
into
icebp
enter
and
data16
sub
test
icebp
loopne
mov
dec
mov
dec
and
clc
jmp
adc
jle
lret
mov
push
jnp
and
pusha
jg
sbb
lret
add
mov
scas
sub
cld
leave
test
dec
mov
pushf
mov
sub
std
shll
dec
pop
sbb
xor
ljmp
and
fs
dec
mov
jp
out
mov
hlt
add
or
aaa
aam
lds
and
inc
xor
inc
adc
fcompl
push
inc
je
insl
xor
add
add
push
jae
shlb
out
add
aad
push
add
aam
rorb
mov
inc
or
mov
flds
ja
lea
repz
test
lods
inc
dec
adc
sub
aad
insl
std
push
out
adcl
or
pop
jle
or
or
cmp
popa
cmp
sub
jnp
mov
add
int3
xor
into
into
jp
scas
fwait
scas
pop
clc
push
cmp
mov
iret
xchg
test
and
lret
push
shlb
mov
sub
fdivs
dec
mov
test
scas
adcb
repnz
mov
cltd
js
rcr
cld
dec
jno
es
push
lods
leave
jnp
stc
pop
iret
imul
incl
fnstcw
mov
xchg
or
lea
or
pop
cmp
int3
add
mov
pop
mov
std
popf
mov
aad
out
lea
rcr
in
and
jo
sbb
out
repz
mov
mov
mov
xchg
add
mov
inc
pop
add
push
lock
push
subl
sub
mov
lock
mov
fcmovnu
mov
pop
adc
int3
cltd
popa
cltd
cmp
notl
dec
sbb
mov
mov
fstps
dec
push
inc
in
in
dec
hlt
and
fsubrl
rcll
cmp
lods
push
cmp
jg
fistl
aaa
add
add
nop
shl
shl
sarb
rorb
pushf
jne
lock
mov
mov
or
push
dec
jo
adc
pop
out
dec
das
loope
bound
rcrl
dec
pop
add
mov
leave
popf
lret
sarl
repnz
adc
sub
cld
fnstenv
loopne
pop
push
and
add
insl
jne
repnz
scas
dec
vpmulhw
out
cs
dec
aam
xchg
cmp
dec
imul
adc
sbb
dec
rcl
jno
jne
push
shlb
mov
fmuls
and
icebp
push
and
sbb
dec
fld
inc
pushl
jle
lahf
pushl
dec
xchg
hlt
push
push
xor
xor
inc
sbb
push
addr16
cltd
push
or
xchg
cli
xchg
mov
and
adc
je
mov
jmp
mov
pushf
mov
in
lret
inc
fistl
jae
xchg
and
orl
icebp
out
mov
leave
mov
jnp
cs
push
xchg
fwait
lods
adcl
sbb
aaa
stc
sbb
mov
mov
mov
xchg
adc
push
sbb
sub
repnz
mov
aas
mov
mov
sub
jmp
jge
imul
push
sbb
cmp
inc
adc
sbb
rol
mov
inc
mov
mov
mov
or
lea
enter
sub
cld
xlat
dec
and
rcrl
std
xor
icebp
and
jne
fldenv
mov
aam
jno
mov
clc
adc
out
adc
or
imul
mov
je
in
inc
pop
testb
jno
sub
hlt
std
pop
ret
mov
inc
lret
pmaxsw
fwait
popa
enter
cmp
flds
and
jns
cwtl
jo
inc
add
and
js
dec
rcrb
fiaddl
addr16
ret
xlat
xor
inc
es
fbld
inc
mov
sbb
aas
push
lods
incl
adc
aas
dec
add
addr16
sbb
jecxz
fistpll
stos
stos
imul
mov
sub
clc
jmp
mov
movsb
xor
sub
fistl
loopne
push
and
xor
addb
mov
lock
insb
pop
icebp
mov
mov
xchg
jg
mov
mov
hlt
and
xchg
aaa
and
lret
outsl
xchg
xor
xchg
fisttpll
jecxz
mov
arpl
xchg
lods
pop
lock
sub
dec
pop
icebp
xchg
push
in
inc
addb
cmp
sarl
pop
jg
add
xchg
push
out
pusha
mov
adc
shrl
out
ret
mov
sti
cmp
add
adc
mov
add
xchg
pushf
enter
and
pusha
ds
jp
jne
imul
xchg
in
cmp
dec
and
les
popl
jno
sbb
daa
ljmp
cmp
inc
push
aas
xchg
lds
stos
mov
cmpsl
aad
jg
add
lret
jo
cli
mov
shrb
dec
push
int
in
cmpl
cld
test
scas
imul
xor
imulb
enter
popa
insl
mov
dec
push
xchg
stos
cmpsl
in
cmp
pop
jge
stos
inc
xchg
dec
jge
call
std
mov
pop
repnz
mov
push
cmp
cs
lcall
repz
or
dec
cmpsb
xchg
out
sub
int3
jne
test
rol
dec
mov
imulb
int
cmpsl
sub
add
nop
lahf
jmp
fisttps
test
enter
test
subb
jne
or
push
cmpsl
je
fwait
aas
add
addr16
loope
jne
fmuls
push
xchg
adc
pop
loopne
fadds
icebp
mov
in
sbb
xchg
jns
sub
sub
cmpsb
scas
jno
test
insl
roll
nop
fimull
pop
out
testl
lock
add
or
jmp
arpl
add
cmc
sbb
testl
lods
add
mov
cli
aad
clc
std
in
jne
addl
cmp
mov
lock
jmp
sbb
xor
mov
mov
outsl
aam
dec
jmp
mov
push
fisttpll
sbb
jae
mov
shlb
jae
ja
add
int
mov
and
clc
jl
xor
popa
enter
mov
or
mov
sarb
mov
in
mov
push
es
enter
sbb
pop
stc
cmp
push
xor
pusha
cltd
xchg
and
add
sub
jns
dec
jl
jle
movsl
test
xchg
mov
cli
cmc
and
mov
mov
addl
pushl
fldcw
aam
in
aam
outsb
sahf
lahf
jg
out
adc
rcll
add
dec
push
sub
test
out
js
xchg
test
es
and
fcmove
loopne
in
xlat
fldl
xchg
xor
jg
das
negb
call
or
ljmp
inc
ret
mov
adc
outsl
int3
add
add
jne
mov
and
les
add
push
jl
scas
in
out
mov
add
jb
testb
push
add
ljmp
enter
insb
sub
mov
repz
in
jmp
inc
lods
jno
andb
mov
outsb
pop
jge
into
pop
mov
inc
mov
outsb
orb
jae
out
adc
movsb
test
xchg
mov
or
cmp
data16
hlt
mov
push
js
pushf
pop
sbb
add
jg
lods
add
mov
or
mov
lret
ret
les
push
cltd
xchg
sub
movsl
jge
or
outsb
test
jne
icebp
dec
mov
lret
push
mov
sbb
cmp
cli
push
push
mov
test
mov
adc
push
cld
pushf
cli
mov
push
scas
or
xlat
ljmp
mov
pop
ja
out
fistl
inc
in
jne
sbb
aaa
out
xor
das
imul
iret
in
mov
adcl
push
aad
mov
cmpsb
mov
add
lods
jo
in
pop
sub
dec
jb
pop
std
lods
int3
out
push
xchg
xchg
dec
imul
push
jns
enter
daa
scas
mov
fnsave
call
push
jge
push
mov
jae
in
cmpsb
xchg
dec
fidivrl
mov
or
pop
es
cmp
stos
or
add
stos
sbb
test
aas
mov
in
jne
ret
ljmp
lea
xor
mov
hlt
shlb
fs
sbb
in
push
pop
imul
ret
rol
xchg
lods
imulb
mov
cmpsb
or
fwait
push
std
mov
push
xor
lret
sub
int3
lock
mov
adc
push
push
mov
push
int3
and
out
sbbl
popa
sbb
xlat
popf
jecxz
inc
mov
lret
mov
mov
movb
out
in
jo
fstpl
enter
mov
test
push
cmp
das
xchg
xor
inc
test
mov
sti
lcall
movsb
sbb
mov
adc
popa
or
mov
imul
fsub
sub
int
mov
xchg
js
and
cmp
aaa
ret
aad
and
mov
rclb
add
pusha
and
movsl
lods
mov
pop
data16
jp
mov
cltd
frndint
inc
sub
dec
adc
arpl
ja
mov
pop
xchg
rcll
ret
imul
lahf
enter
push
shlb
push
aam
xchg
xchg
and
divb
cli
stos
popa
test
sti
cltd
pusha
push
test
das
push
jne
loopne
dec
pusha
fsubrl
adc
sbb
fdivl
faddl
cmpl
test
adc
in
or
lret
arpl
stos
in
aad
sbb
loopne
push
lahf
test
jns
repnz
xchg
ja
and
daa
bound
dec
lods
negl
iret
pop
and
inc
fists
add
sub
mov
out
paddsb
cmpsb
idivb
stos
mulb
ret
rorb
lock
clc
add
mov
mov
sarb
in
mov
pop
aaa
push
ljmp
popf
inc
add
jmp
pop
pop
xor
mov
push
shl
dec
ja
xor
pop
int
aad
nop
cmpsl
lds
iret
push
outsb
mov
inc
dec
cltd
add
aas
testb
repnz
sbb
shll
pop
cmp
mov
inc
sbb
cld
in
into
enter
mov
xchg
pop
xor
mov
xor
fistps
and
ljmp
pop
pop
xchg
mov
mov
enter
push
sub
popf
sub
test
fxch
nop
or
pop
je
test
jg
lods
cli
call
call
lods
rdpmc
ficoml
jp
mov
hlt
and
adc
nop
add
inc
push
dec
dec
loopne
mov
mov
xlat
ret
jp
lret
or
cwtl
enter
mov
mov
jg
into
push
push
xchg
sbb
and
dec
xchg
mov
enter
jnp
arpl
test
push
sbb
mov
sub
cmpsl
test
or
adc
pop
insb
sbb
mov
insl
gs
sbb
popf
and
nop
insl
xor
add
push
int
aam
sub
pop
movsl
lods
fdivrs
les
sub
jne
inc
outsl
mov
fidivrl
in
inc
inc
popa
mov
rcrb
cltd
aaa
xchg
popa
xchg
add
pop
sti
popa
inc
xchg
push
or
int
cmove
adc
xor
jge
out
mov
adc
test
jle
aam
sub
mov
xchg
arpl
sbb
test
push
pop
leave
or
aad
repnz
pop
je
fsubr
jnp
mov
jmp
cmp
sahf
mov
fdivs
stc
addb
out
dec
fwait
pop
xorb
mov
mov
fdivs
lods
adc
jbe
sbb
jmp
xchg
icebp
mov
and
cmp
jo
cltd
jnp
dec
inc
decb
jnp
sbb
fstp
mov
dec
inc
scas
cmp
push
xchg
push
push
jo
daa
arpl
cmc
call
sub
data16
xor
mov
test
sbb
iret
filds
test
cmp
pushf
and
xor
push
insl
int3
inc
sub
nop
adc
mov
fs
test
roll
jae
jmp
cld
ja
jmp
push
out
sub
test
jp
push
jmp
and
pop
adc
jp
mov
in
pop
idivl
mov
or
into
cmc
out
arpl
jnp
lock
mov
rcrl
add
daa
xchg
les
push
xchg
loop
or
js
sub
push
sahf
dec
lods
fsubs
test
subl
movsb
mov
addr16
mov
push
movsl
xor
push
mov
mov
mov
std
ret
xor
sbb
lahf
push
scas
fs
aas
mov
test
cmpsl
jp
sub
dec
jae
bound
jno
rorl
dec
cmp
adc
xor
pop
mov
sub
xchg
es
dec
std
bound
xchg
iret
fimuls
ror
ja
xchg
ret
clc
jo
sub
cmp
inc
mov
in
call
or
dec
clc
idivl
lret
inc
add
push
cli
lret
xchg
push
int
and
adc
jne
loop
dec
pushf
cmpsl
iret
xchg
scas
add
fcom
push
xchg
sbb
test
mov
call
movsl
jae
pop
sub
addl
and
leave
mov
pop
push
test
pslld
std
sbb
xor
aas
jle
mov
ds
mov
jns
pusha
pop
mov
data16
xor
cmpb
adc
push
push
jae
jns
mov
and
into
jle
pushf
hlt
sub
es
cwtl
and
pop
cwtl
shrb
sbbl
push
mov
ljmp
daa
rcl
push
sbb
aad
mov
dec
gs
negb
stc
int3
call
test
rclb
sbb
sub
shlb
mov
nop
into
mov
add
and
xor
pop
dec
jmp
ret
ja
pushf
sbb
push
ja
mov
frstor
mov
iret
jo
push
sub
lcall
inc
adc
roll
fsubrp
jp
enter
jg
iret
lret
std
lods
popa
shll
sahf
mov
add
bound
mov
lahf
fsubrp
sbb
dec
pop
dec
mov
ret
loopne
sbb
xchg
mov
lea
es
push
mov
cs
stos
xrelease
mov
mov
add
mov
jo
pop
sub
sub
xor
mov
dec
mov
push
push
push
aaa
adc
xchg
cmp
cmp
add
sbb
mov
xchg
mul
popa
call
pop
mov
arpl
xor
mov
mov
in
jae
ljmp
lgdtl
cmp
pushf
out
mov
fidivl
mov
pop
and
cli
pop
js
fsubrs
imul
fdivl
cltd
scas
inc
xor
adc
out
int
push
fstl
lcall
out
js
xor
rorl
xchg
pop
add
das
stos
xchg
dec
pop
loopne
movsb
fisubl
xchg
cmp
pop
xchg
je
adc
aaa
push
and
dec
loop
dec
jle
mov
xchg
test
movsb
sbb
leave
dec
mov
addr16
popa
mov
repnz
adc
pop
and
jno
jmp
ret
js
jae
movb
mov
int
jne
adc
icebp
add
lret
inc
test
stos
sbb
aas
stc
sub
shll
lcall
xchg
and
push
inc
fsubrs
mov
movsb
mov
imul
push
aam
hlt
addr16
pop
inc
mov
inc
mov
insl
or
pop
sub
xor
cmp
sub
adc
movsl
es
add
pop
or
mov
mov
fists
xchg
mov
add
cmc
xchg
ret
or
in
or
divl
cli
mov
sub
roll
cmp
loope
hlt
jg
lcall
cmp
mov
or
xlat
out
fmul
aam
cld
push
mov
push
and
push
and
cmp
fmulp
push
leave
dec
cs
xchg
mov
push
push
pop
in
xchg
xor
sbb
xor
stc
shl
dec
lret
mov
iret
dec
outsl
pop
paddq
rcrl
aaa
dec
fmull
cmc
cwtl
loope
xchg
repz
mov
repz
iret
in
xor
stc
add
mov
xor
mov
inc
sub
cli
insb
hlt
inc
sub
std
jmp
xchg
pop
sub
ja
sti
cmc
cmpsl
pop
pop
fcmovne
push
mov
aas
int3
xor
mov
into
jo
adc
push
jae
popa
pop
push
out
sbb
call
mov
adc
xchg
cmp
fdivrl
mov
addr16
push
outsb
cmc
jnp
cmp
lcall
adc
mov
or
fsub
mov
jecxz
leave
xor
int3
pop
adc
jbe
add
sarl
add
mov
cmc
pop
cmc
inc
das
pop
jmp
xor
pop
push
orb
imul
sub
mov
xor
inc
xor
xchg
xor
into
cli
mov
pop
icebp
bound
jbe
mov
adc
pop
xor
push
cmp
ret
addl
adc
fistl
lods
xchg
sub
push
jge
lods
jo
pop
push
dec
sahf
mov
out
dec
xor
outsb
lcall
ljmp
cmp
loopne
fmull
adc
mov
fsubrs
repz
push
movsb
divl
xor
cvtps2pd
xchg
push
push
or
inc
repnz
rorb
mov
jae
inc
sub
inc
rcr
pop
loope
inc
mov
cmp
sub
xor
jmp
pop
mov
ja
sub
add
es
push
sub
lahf
ret
pop
mov
jbe
test
std
dec
push
cld
inc
inc
imul
cmpsl
cld
nop
mov
movb
and
mov
lahf
imul
sbb
pushf
iret
ss
mov
repz
pop
loope
mov
sbb
ficomps
imul
fwait
ja
xchg
aad
repnz
or
gs
mov
ret
stc
xchg
loope
stos
xchg
sti
out
pop
mov
imull
push
fmuls
nop
xchg
popf
repz
test
dec
pop
mov
dec
fsubrs
rorl
mov
lock
lcall
ret
fisttpl
popf
lods
mov
lods
add
pop
mov
mov
mov
add
push
mov
fsubrp
adc
cmc
scas
add
mov
and
ds
ret
xchg
xor
push
fmuls
subb
inc
and
sub
mov
pushf
pop
jae
idivb
sbb
int3
cmp
fistl
or
xor
push
movsb
add
nop
adcb
cmc
cmp
test
xlat
pop
stos
cmp
iret
mov
xchg
dec
inc
cmpsl
arpl
aas
xor
pop
repz
sahf
cmpb
mov
sbb
ja
frstor
adc
cmp
mov
fldcw
fistl
popf
cmp
icebp
test
mov
rolb
lds
xchg
pop
std
pop
pushf
sahf
mov
imul
xchg
or
repz
std
xchg
sub
mov
adc
ret
ja
pop
pop
repz
lcall
or
sbb
or
aas
outsl
push
mov
add
add
cmp
ficomps
dec
cmp
int
lcall
sbb
cli
pop
sahf
pop
push
pop
mov
jecxz
lods
xchg
jg
loop
inc
mov
movsl
pop
jge
jge
jnp
pop
or
mov
jp
xchg
cmpb
std
cwtl
test
iret
and
jmp
dec
push
ret
mov
cmp
lcall
scas
pop
test
mov
sub
cmpsb
push
push
repz
and
cmp
cmp
sub
inc
test
xor
dec
inc
jno
cmp
lcall
jno
fwait
mov
pop
mov
xor
test
push
fbld
outsb
pop
pop
aam
mov
sbb
shrb
or
enter
bound
lret
fbstp
cmp
in
hlt
and
setae
mov
lret
out
mov
jmp
cmp
lods
add
lods
cmpsl
repz
fisubrs
hlt
jle
in
sbbb
push
add
mov
pop
out
dec
inc
popw
lods
nop
loop
rclb
popa
rcrl
and
bound
and
mov
adc
xor
fs
pop
sbb
jno
int
jb
fisttpl
sbb
int3
and
xor
mov
imul
mov
in
jae
xchg
cmp
adc
xchg
icebp
inc
xor
ljmp
je
mov
movsb
mov
add
imul
out
mov
and
mov
mov
mov
sub
lds
cmp
sbb
stc
pop
xlat
dec
jmp
sbb
mov
cmp
repnz
loope
xchg
push
packuswb
xchg
pop
sub
cmc
jb
orl
sub
inc
ret
fisttps
jg
pop
jmp
loop
xchg
dec
cmp
push
cli
es
rorl
mov
xchg
nop
pop
cli
in
into
es
dec
pop
loopne
dec
sub
outsl
sahf
or
repnz
add
rsqrtps
jmp
int3
sbb
xchg
fbstp
mov
shrl
adc
rcr
pop
jno
lods
dec
bound
pop
shll
mov
int
lods
imul
aas
rcrb
inc
pop
stos
imulb
pop
scas
cwtl
push
jo
mov
mov
xchg
inc
jmp
aaa
mov
aas
in
dec
dec
outsb
fildll
fwait
or
fiadds
test
negl
in
test
inc
sbb
push
sub
shrl
mov
test
iret
mov
mov
jp
fistl
sahf
aad
les
lcall
mov
push
pop
xchg
fnstenv
mov
icebp
lahf
aad
icebp
gs
push
dec
cmp
lcall
movsb
adc
pop
ficompl
in
xchg
rclb
enter
scas
data16
and
mov
imul
subb
or
movsb
push
inc
xor
cmpsb
dec
sbb
sub
lahf
aad
popf
cli
shlb
pop
outsb
sub
rolb
popa
hlt
push
xchg
pop
enter
cli
test
adc
xlat
pop
pop
es
leave
nop
sbb
lock
mov
popa
xor
repnz
into
lods
jno
xor
sub
mov
or
pushf
push
ljmp
bound
xchg
mov
or
mov
arpl
mov
stc
daa
incl
rcr
pop
and
dec
daa
inc
sahf
cmp
call
pop
cmp
jb,pn
push
scas
pop
stos
mov
jns
sbb
sbb
leave
shl
hlt
push
pop
addl
inc
push
mov
and
cs
mov
mov
jmp
arpl
add
aaa
int3
aad
add
imull
sub
ss
xor
jecxz
jmp
xorb
jle
inc
dec
push
mov
cmpsb
inc
sbb
mov
mov
into
cmp
shrb
mov
pop
xchg
pop
shrb
dec
bound
cmc
add
cwtl
sub
cmp
jae
enter
jb
jge
sbb
scas
dec
mov
cmpsl
fcmovnu
pop
push
pop
stos
jo
in
xchg
xchg
xor
cmpsl
data16
inc
shrl
int3
daa
mov
inc
cmpsl
pop
lds
aaa
cmp
inc
in
xchg
mov
loop
xlat
fisubrs
jp
cmp
jns
sti
push
mov
insb
fcoms
or
pop
or
xor
or
xchg
or
sub
and
add
jle
dec
push
or
pop
xorl
hlt
fsubrp
jno
add
dec
and
pop
add
dec
mov
clc
jbe
adc
mov
dec
mov
aad
out
xlat
stos
popa
jg
xchg
sahf
push
in
and
or
adc
ljmp
mov
sub
inc
jnp
mov
data16
imul
cmpsl
mov
dec
pop
mov
mov
cmp
pop
fildll
mov
popf
pop
sub
adc
jo
dec
dec
and
outsb
movsl
test
pop
sub
pop
frstor
lcall
mov
adc
shr
and
movw
or
xor
lock
daa
test
mov
stos
sbb
push
clts
xchg
cmp
lods
repz
jge
xorl
call
mov
sub
mov
pop
dec
dec
jmp
ffree
dec
rcr
or
push
xor
jnp
jnp
jb
aas
xor
cpuid
jns
push
adc
bound
add
dec
mov
jecxz
outsl
sahf
faddl
and
in
and
inc
add
fisubs
out
and
shll
pusha
loopne
aam
push
pop
imul
mov
insl
ds
or
jbe
add
gs
jl
not
scas
imul
cs
pop
inc
mov
sbb
mov
pop
xchg
fidivl
jne
aas
jo
cmpsb
in
inc
push
sub
sbb
xchg
enter
dec
addb
sub
outsl
icebp
daa
fsubs
inc
xor
fs
mov
dec
xor
ljmp
and
ret
mov
push
aam
sbb
and
xchg
jge
aas
mov
push
cmpsb
in
mov
movsl
movsl
pushf
sbb
movsb
std
nop
out
or
pusha
mov
xchg
fadd
sbb
pop
int
jbe
pop
imul
mov
jl
dec
mov
test
mov
mov
cmp
cmc
jmp
inc
dec
cmp
sub
mov
push
pop
inc
mov
lret
pop
mov
movsb
dec
xchg
xor
and
add
add
xor
sarl
insb
test
cltd
pop
xor
popa
xorl
fs
bound
sub
outsl
mov
dec
jnp
std
cltd
dec
mov
clc
or
jno
mov
shlb
or
and
addl
aaa
inc
pop
rcrl
jo
lea
sti
cwtl
rolb
packuswb
cmp
bound
fistl
fisttps
xor
clc
sbb
negl
xchg
lret
call
push
in
je
popw
push
jg
movsl
aad
dec
jne
dec
loope
loopne
mov
mov
aam
testl
outsb
mov
pop
sbb
add
dec
mov
or
les
out
xor
fs
ja
lcall
icebp
lcall
repnz
push
clc
shlb
pandn
test
enter
and
or
jmp
xor
xchg
mov
mov
lret
jge
ficomps
cmpsb
fs
dec
mov
xchg
or
filds
xchg
stos
pcmpeqb
inc
pop
je
xor
lret
dec
loop
je
insb
stc
mov
add
daa
fadds
pop
outsl
add
inc
xor
xor
cmp
fwait
aaa
out
xchg
push
dec
pop
push
jne
cmp
lcall
mov
dec
xlat
jne
insl
push
test
jnp
xchg
fwait
std
hlt
inc
and
stos
mov
adc
push
push
ja
rorb
cmp
xor
sub
ret
pop
jge
mov
mov
mov
jl
push
mov
outsb
push
lcall
call
fwait
inc
and
loop
cmp
jmp
pop
jg
outsb
fldenv
xchg
and
mov
mov
push
lcall
jmp
sub
fnstenv
call
mov
dec
das
jmp
sub
sbbl
les
add
lret
in
add
adcl
repnz
jo
sub
loopne
nop
fldt
xchg
jmp
cwtl
push
mov
push
xor
jne
imull
std
pop
lret
lds
sub
fisttps
jo
or
mov
loopne
xor
insl
sub
jns
inc
jle
xchg
cltd
ljmp
aaa
mov
push
dec
adc
jns
cwtl
pop
add
adc
mov
push
sahf
loope
xchg
sti
and
xchg
scas
repnz
aas
lds
idiv
aad
cwtl
xor
addr16
das
inc
pop
adc
mov
or
ds
adc
insb
call
hlt
dec
mov
push
dec
mov
xor
jmp
push
adc
inc
mov
cmc
insl
sub
push
fcompl
aas
xchg
out
fld
ss
imul
fidivrs
jb
in
push
push
mov
movsl
or
inc
cltd
lret
movsb
mov
imul
xor
test
sti
cmp
jns
std
nopl
push
adc
dec
or
jbe
mov
out
inc
cltd
int3
lea
mov
inc
scas
push
adc
sub
xor
fimuls
jns
cld
rcl
imul
pop
daa
or
mov
or
mov
les
rcrb
push
fimuls
inc
cmp
add
push
mov
sub
xor
montmul
cmpsb
inc
push
jae
mov
inc
stc
mov
das
rol
inc
vmovntps
insl
inc
or
stos
add
imul
mov
out
lcall
mov
push
loop
stos
cmp
insl
mov
shrb
js
jae
inc
pusha
jb
jl,pn
mov
rol
popa
cmc
sub
cmc
xchg
stc
aaa
jecxz
sbbl
and
mov
into
lods
stos
imul
xor
fdivrs
push
jno
and
orl
outsb
and
mov
mov
fidivrl
or
inc
dec
and
gs
fldenv
jno
pop
ret
jb
xor
cltd
pop
mov
cmp
add
outsl
xchg
lea
int
sub
lahf
int
out
sub
inc
dec
cli
and
into
fcmove
aas
add
in
aas
aad
int3
mov
pop
fdivr
adc
out
fbstp
adc
cmp
jp
push
rcrb
pop
inc
test
sbb
lret
xchg
ss
and
lods
jbe
mov
int3
std
insb
push
sbb
sbb
es
inc
shll
pop
xchg
pop
push
lret
outsb
subl
flds
lods
outsb
dec
sub
jnp
xor
jne
out
je
stos
push
imul
pop
daa
add
int3
xor
xorl
push
pop
sti
mov
mov
inc
pop
xor
leave
ret
xor
psubw
cmp
rorb
cwtl
jne
push
push
shrl
lcall
pop
mov
jno
xchg
lahf
enter
outsl
cmc
pop
or
mov
cli
shll
ds
loope
push
adc
fs
mov
mov
aas
pop
mov
lcall
and
xor
sti
lea
mov
fldenv
jno
pushf
mov
stos
jle
pop
pop
addr16
adc
xchg
inc
sub
aas
xor
int
ljmp
cltd
push
pop
push
xor
xchg
imul
and
mov
xchg
sub
fisttps
cmpsl
movsb
dec
xor
pop
sarl
insb
push
inc
xor
aas
les
rorb
and
add
and
jmp
push
test
fwait
sbb
pop
push
mov
jnp
popa
dec
int3
jbe
test
dec
insb
xor
movsl
bound
mov
inc
aaa
cld
dec
jl
mov
sub
orl
jne
pop
lds
jg
fcmovnb
movsb
push
xchg
pop
mov
shlb
jp
aam
int3
mov
loop
dec
cwtl
cmpb
jne
jo
cmp
lods
mov
lods
adc
inc
das
movsb
cmc
jno
pop
pop
stos
sti
mov
xor
popf
in
xchg
repz
popa
les
jns
ds
add
loopne
pop
imul
scas
sub
das
mov
pop
out
pop
test
mov
dec
insl
mov
pop
movsb
imul
or
cld
fs
mov
adc
mov
shlb
icebp
popf
rcll
push
mov
adc
into
std
sbb
cmpsb
cmpsl
xchg
fisubl
mov
adc
push
fs
cwtl
mov
je
push
push
mov
rorb
ja
or
xchg
int3
mov
and
jne
pop
aaa
inc
pushf
xlat
fs
jno
mov
sub
pop
cmp
subl
mov
mov
mov
lds
adc
jnp
pop
je
aad
pop
cwtl
icebp
ja
into
gs
dec
repnz
mov
lcall
insl
int
fdivrl
and
mov
in
popf
jl
repnz
mov
nop
pop
cli
dec
mov
and
mov
shl
insb
imul
bound
xor
jne
rcrl
sbb
repnz
pushf
pusha
mul
sbb
push
and
rcll
lods
scas
popa
test
stos
mov
cwtl
sub
dec
mov
cltd
ds
sub
movsb
insl
mov
adc
or
movsb
adc
sbb
addr16
jmp
push
mov
call
sub
sti
xchg
xchg
clc
push
bound
sti
lods
jb
pushf
call
mov
ja
test
orl
push
add
jg,pn
xorb
in
fildll
or
iret
cmp
testb
jb
inc
dec
in
mov
cmpsl
ficomps
and
sbb
lea
test
dec
mov
idivb
push
iret
adc
sbb
sub
dec
cmpsl
in
roll
push
jb
bound
nop
ret
push
mov
leave
fisubs
pop
jnp
fadds
mov
lods
xor
bndldx
mov
sbb
clc
push
cltd
movsl
inc
test
jnp
xor
push
jecxz
mov
pushf
xchg
out
inc
in
sar
in
cli
dec
adc
stos
incl
or
sbb
arpl
xchg
add
and
mov
lahf
add
jne
jle
aam
int
imul
adc
iret
lret
scas
dec
test
std
dec
sub
repz
gs
mov
xor
xor
nop
nop
pushf
xor
xchg
sub
pop
enter
addb
add
push
mov
mov
mov
movsl
dec
inc
adc
mov
adc
je
or
or
xchg
out
ficomps
add
xchg
enter
insl
sub
outsl
call
add
daa
mov
and
jbe
jecxz
js
cmpsb
mov
arpl
pop
test
jmp
cmp
lock
dec
test
jo
dec
popf
cwtl
dec
push
push
sbb
cli
pushf
jae
rol
ret
dec
xor
adc
jle
loope
cmp
dec
push
mov
sbb
jecxz
repz
mov
dec
cmp
mov
push
sub
xchg
xchg
in
outsb
incb
pushf
sahf
in
test
fwait
cmp
or
xor
push
movsb
out
and
push
out
mov
out
mov
add
adc
and
mov
dec
ret
imul
insl
stos
mov
inc
xor
inc
push
jecxz
xlat
pop
stos
aas
cmp
or
inc
test
mov
fdivl
sarl
rclb
dec
jo
adc
inc
dec
cltd
mov
cld
rol
xlat
push
repnz
out
clc
jae
mov
pop
mov
mov
pop
aas
cmp
push
cmpsb
enter
cmp
jge
jmp
ljmp
rcrb
rcrb
mov
into
cmpsl
mov
int
cmp
loope
sub
aam
xchg
popw
cmp
push
push
sbb
push
dec
xchg
xlat
fwait
ret
stc
jnp,pt
lret
mov
jnp
lahf
xor
cmp
push
loop
int
insl
daa
fnsave
iret
push
sub
sbb
mov
sahf
loop,pn
xlat
jge
push
adc
enter
xchg
jmp
push
cmp
and
test
push
loop
add
inc
cld
scas
jae
lds
or
fdivl
insl
cs
cmpsb
pop
dec
inc
jge
mov
cmc
or
insl
jmp
fdivl
gs
outsb
scas
mov
sub
cs
movsl
adc
add
lea
mov
sub
pop
stc
scas
gs
push
add
cmp
dec
jns
es
mov
stos
scas
scas
int3
or
or
or
ds
push
gs
std
popa
jnp
lahf
or
push
ror
test
and
aam
lea
jae
mov
xchg
mov
xchg
jecxz
push
in
jp
std
pushf
repnz
loope
or
test
aaa
cmp
sbb
and
sbb
js
loop
mov
jo
test
daa
xchg
mov
stos
js
stc
lahf
pusha
lahf
jae
jmp
in
enter
ffreep
int
clc
ljmp
and
sbb
stc
mov
rcr
pop
ss
aad
or
leave
fs
out
repnz
dec
out
mov
mov
repnz
cld
movsb
adc
andb
inc
sub
mov
sbbl
push
ja
add
mov
enter
cmp
pop
and
lcall
aas
popa
jecxz
cmc
loop
mov
adcb
xor
iret
and
push
inc
rcr
pop
inc
xchg
lcall
add
sahf
add
repz
dec
mov
add
scas
sub
out
dec
adc
add
xor
xor
push
cmp
clc
pop
inc
insb
fs
fdivr
test
pop
inc
addb
add
ja
fcoms
and
mov
xor
ret
cwtl
adc
cld
test
push
fdivs
jg
mov
inc
repz
lock
ror
xchg
add
sbb
mov
pop
movsl
daa
fstpl
jp
add
jne
hlt
loopne
add
leave
xor
and
int3
in
sbb
sub
mov
push
push
push
repnz
dec
and
out
test
lret
leave
jl
not
call
xlat
jne
test
mov
int
dec
fmulp
mov
pop
mov
sbb
dec
js
inc
adc
sub
add
dec
repnz
xlat
mov
pop
mov
rcrl
jne
sahf
outsl
sbb
adc
mov
cmpsl
jo
mov
xor
sbb
xor
call
push
mov
in
popf
mov
mov
xchg
xor
inc
mov
sub
ljmp
sbb
mov
push
aad
add
xor
fiadds
xchg
shr
push
enter
xchg
pop
scas
cld
rolb
push
insl
sub
call
mov
sub
mov
in
mov
outsb
inc
cmp
adc
stc
xchg
cmp
jb
push
aaa
inc
addl
sub
nop
icebp
jo
push
inc
mov
imul
test
mov
jb
push
lods
in
insb
test
rcll
loop
xor
into
sub
sub
adc
adc
test
jle
xchg
inc
push
or
xorl
xor
jnp
stc
jmp
stc
aaa
sbbl
fld
fs
idivb
cmp
imul
pop
or
bound
inc
mull
pop
jg
push
cmpsb
lods
test
popa
scas
push
or
sbb
mov
push
iret
pop
lock
in
cmpsb
lahf
jp
xor
cltd
std
or
xchg
sub
mov
mov
push
inc
insb
sbb
adc
jnp
test
jno
dec
gs
xchg
loope
fwait
loope
xchg
dec
xorb
mov
lods
add
sarl
fisttpl
cs
mov
sub
dec
jp
in
lret
xchg
mov
xchg
jle
inc
xor
fcomi
out
mov
cmpsl
add
fcomi
icebp
loop
mov
push
and
mov
adc
cmp
inc
xchg
mov
push
sub
or
popf
add
or
test
ja
mov
shlb
daa
pop
addr16
aaa
sahf
dec
pusha
push
rcll
adc
sub
sub
inc
imul
shrb
pop
movsl
jnp
sbb
mov
outsb
cmp
mov
sarb
out
int3
jle
sti
mov
orb
cmc
mov
jge
adc
xor
adc
sti
pop
sbb
add
movsb
lea
out
cmpsb
mov
lods
adc
jecxz
and
fdivr
sub
in
push
test
mov
fwait
movsl
fnstenv
mov
int
cs
or
sahf
inc
jecxz
add
pusha
cmp
jmp
pop
jno
cmpsl
mov
pop
or
repz
movsl
xor
pushf
ret
pop
mov
pop
add
push
andb
xor
xchg
leave
mov
aad
pop
and
xor
mov
test
jg
push
int
dec
scas
fisubrs
arpl
adc
movsl
xor
in
and
add
cld
mov
push
pop
pop
pop
inc
in
xor
xchg
mov
incb
lret
cmp
fmuls
and
sbb
dec
stos
add
sti
jae
mov
sysenter
aad
mov
scas
loopne
out
data16
jmp
mov
jne
cmpsl
addb
xchg
pusha
xchg
insb
in
jae
adc
lcall
in
addr16
orl
cli
negl
mov
sub
sub
mov
push
cmp
shl
hlt
test
jae
or
stc
ss
nop
push
pop
pop
cmp
out
mov
rcl
dec
cmovle
fidivl
xor
std
push
cld
sbb
mov
loope
push
fimuls
test
xor
test
and
jmp
add
pop
push
movsb
movsb
movsl
sbb
je
push
in
jae
xchg
aaa
fwait
test
cmp
pusha
cli
aaa
and
xchg
xor
mov
or
pop
sbb
or
fistpl
inc
enter
mov
add
mov
ljmp
add
fcomip
adc
mov
xor
cmpsl
mov
fwait
cmp
repz
lods
sbb
mov
jl
add
out
cld
mov
je
inc
sbb
mov
xchg
pop
outsl
je
mov
mov
jae
rcrb
mov
xchg
enter
enter
pop
jmp
xchg
jbe
sbb
or
sub
and
pop
movsl
add
movsl
mov
mov
imul
clc
sub
push
fisttpll
ljmp
cmp
adc
scas
push
mov
push
cmpsb
jecxz
jecxz
in
les
cmp
mov
mov
popf
in
roll
out
xlat
adc
icebp
fsubrs
or
fucomi
dec
fstpt
push
sbb
xor
push
hlt
xchg
mov
or
push
outsl
outsl
rcl
jge
insb
jno
mov
lret
clc
out
out
push
adc
mov
imul
mov
and
ljmp
add
lret
insb
inc
lods
ficoml
dec
sbb
stos
mov
mov
bound
fisubs
mov
cld
mov
jns
or
stos
cmpsb
xor
push
repz
jg
mov
jmp
rcr
push
or
dec
xchg
inc
push
jmp
push
pushf
xor
sbb
monitor
jg
iret
iret
jl
jns
fsubl
pop
lods
out
dec
sub
jg
push
lds
in
subl
xor
jp
lock
adc
jl
loope
les
imul
pop
jo
inc
cmp
je
test
jnp
lds
push
sbb
lcall
jo
fldcw
xchg
mov
jmp
xor
and
jae
test
inc
std
xlat
pop
shl
jo
mov
lods
pop
mov
fdiv
mov
add
into
mov
dec
dec
jge
mov
movsl
adc
fcoms
adc
mov
rcrb
mov
pop
lahf
or
pop
loope
jnp
and
mov
daa
jecxz
xor
push
mov
ljmp
jb
xchg
mov
mov
aaa
frstor
cmpsl
clc
mov
loopne
mov
or
dec
dec
popa
dec
pop
and
icebp
aaa
add
rclb
mov
int3
xchg
sbb
lea
lods
or
or
scas
cmpsb
xchg
mov
sbb
add
jne
push
shlb
imul
pop
outsb
sub
outsb
adc
jmp
fs
mov
push
add
ljmp
in
enter
outsb
cwtl
scas
inc
sarb
cmp
or
cmp
mov
mov
and
mov
jns
push
mov
inc
outsl
xchg
sbb
sbb
adc
movsb
adc
and
out
cmp
xor
dec
fcmovb
mov
andb
ds
adc
xchg
jno
sbb
push
lock
shll
lods
call
mov
fcmovnu
adc
push
clc
daa
movsb
mov
inc
xor
test
daa
fwait
rorb
das
pop
in
es
and
cmpsl
cmp
test
xchg
xchg
pusha
out
int
dec
mov
je
mov
fmuls
mov
jle
std
sahf
xor
add
lods
or
pop
lods
or
xchg
push
imul
mov
sub
push
jle
mov
pushf
andl
jge
int3
lahf
push
sub
lods
or
cs
mov
xchg
aam
fstl
xchg
test
int3
shrb
in
xchg
in
sbb
jg
mov
imul
scas
fildll
cwtl
out
rclb
mov
call
inc
aas
bound
stc
pop
xchg
or
jl
flds
push
daa
mov
sarb
mov
jbe
call
sbb
mov
jg
lea
fildll
mov
mov
jl
jge
push
sti
stos
jne
movsl
es
xor
dec
jmp
and
scas
dec
and
roll
or
and
andb
divb
pop
cmpb
or
or
jle
jo
pusha
jne
loopne
data16
cmpsl
out
insl
mov
sti
and
les
inc
xchg
jge
xchg
cmpsb
lret
push
jl
cmpsb
lahf
sub
or
pop
xchg
in
fadds
cmp
loopne
dec
mov
sarb
es
or
ret
ljmp
aaa
stos
stos
push
pop
dec
push
dec
inc
pushf
call
inc
jae
lret
jns
dec
in
adc
lea
add
mov
dec
or
mov
mov
pop
movsb
add
sti
push
ja
xchg
lods
sub
sahf
sub
js
push
and
adcl
ss
imul
dec
ret
cmp
or
xor
pop
xor
add
xchg
inc
insb
ljmp
cmc
xlat
pop
pop
popf
int3
inc
add
es
mov
out
rorl
adc
sub
xchg
fcoml
orl
sbb
fisubrs
js
push
orl
lods
cmp
lea
adc
stos
int3
mov
fwait
sbb
jne
dec
adc
outsl
push
inc
pusha
xchg
andb
xchg
mov
push
lods
jb
sub
dec
loopne
bound
jne
add
mov
sub
ja
add
mov
mov
fcoms
xchg
int3
das
ds
enter
and
pop
sti
test
fnsave
mov
cmpsb
popa
lods
stos
cmpb
testb
lahf
mov
les
and
jae
addr16
dec
daa
out
shrl
fldcw
es
jmp
sub
push
dec
and
and
jle
pminsw
xor
sub
fdivr
add
and
daa
lds
sub
jo
add
in
mov
push
push
sub
cmp
and
test
mov
fnstenv
and
xor
sbb
add
pop
das
sbb
xor
gs
or
adc
cs
ljmp
in
andl
arpl
fldenv
add
mov
dec
je
sbb
and
push
fiaddl
js
gs
dec
xor
ss
or
sbb
out
jmp
jmp
cmp
pop
pop
jg
and
int3
push
jo
jmp
aam
push
xchg
fsubl
ficoml
push
loopne
push
mov
scas
int
mov
sbb
mov
add
sbb
fucomp
pop
jns
fdivrl
outsb
imul
cmp
sub
hlt
and
or
pop
in
lods
clc
push
mov
mov
xchg
pop
push
xchg
jg
xor
jmp
cs
mov
mov
add
fstpl
xchg
add
cli
pop
sbb
ja
or
pop
adc
js
jne
push
push
mov
enter
jnp
aad
push
mov
dec
mov
roll
xchg
add
fsubrs
pop
ret
xchg
in
sub
xchg
lods
leave
icebp
dec
test
sub
popf
xor
dec
paddd
mov
sti
mov
std
mov
push
inc
cmp
xlat
rorb
in
ds
movb
sub
xor
lods
cmp
mov
mov
in
xor
stc
repz
insl
shr
mov
setge
sbbb
inc
dec
out
clc
cmpsl
lods
xchg
sbb
sbb
das
adc
add
adc
frstor
notl
sahf
add
jne
andl
stos
das
xor
adc
xchg
adc
inc
movsb
inc
ja
mulb
pop
adc
pop
mov
and
push
mov
stos
and
or
rcrl
and
or
les
pop
ficoml
dec
cmp
mov
scas
mov
movsb
outsb
out
fsubrl
inc
mov
lgs
outsl
in
outsl
dec
mov
push
std
aas
xlat
hlt
xchg
add
rcll
push
fcomps
test
push
into
or
dec
sub
testl
fwait
out
add
xchg
in
mov
ss
mov
les
ss
push
xchg
das
bnd
dec
sti
dec
popa
out
sub
lret
addr16
adc
lret
xchg
jmp
jge
pop
pop
mov
in
push
inc
cmp
cld
sbb
or
xchg
mov
xchg
or
sbb
sub
flds
xchg
daa
mov
mov
adc
repz
mov
xor
pop
cwtl
pushf
or
cmp
ja
sub
loopne
outsb
pusha
mov
fcomps
les
stos
and
cld
push
sahf
frstor
insl
add
pop
rcrl
dec
adc
int3
out
pop
inc
adc
jno
jnp
imul
inc
hlt
mov
leave
and
fisttps
inc
mov
and
pop
xchg
clc
jo
xchg
mov
pop
ja
sub
jno
push
push
xchg
lcall
lods
shl
push
rorl
mov
mov
leave
inc
jb
dec
xchg
inc
insb
les
pushf
and
xchg
lds
scas
or
push
or
dec
push
in
xor
cld
testb
mov
movsb
add
in
xchg
jl
pop
nop
in
int
movsb
xchg
rclb
imul
jnp
test
mov
push
push
and
nop
rolb
mov
cmp
xchg
push
hlt
mov
std
adc
les
jno
lahf
xchg
inc
mov
ret
jnp
aas
push
adcl
inc
pop
das
and
sahf
lods
js
sahf
cmpsl
in
add
icebp
mov
cwtl
ffree
pop
push
jns
test
push
cs
std
lods
adc
imul
lods
popf
or
and
ja
cwtl
mov
add
add
xor
pop
jge
cmp
mov
aam
or
dec
mov
sub
stc
mov
or
test
insb
jecxz
loope
cmp
pop
mov
dec
int
jns
xchg
sahf
outsl
stos
cwtl
ja
rcl
mov
jns
push
outsl
out
imul
clc
jne
out
pop
sbb
sti
mov
xor
pop
inc
push
lahf
add
fdivp
repz
add
adc
cmc
lcallw
mov
daa
arpl
repnz
pop
aaa
shl
cmc
es
jmp
push
inc
add
xchg
popa
inc
push
cmp
sbb
inc
cmc
ljmp
or
jp
loope
pmulhuw
xchg
add
cltd
aas
inc
mov
mov
int
lahf
mov
arpl
pop
and
sbb
xchg
mov
addr16
out
mov
xchg
push
rcll
sub
mov
shl
xchg
push
outsl
lahf
test
lcall
jbe
aas
movsb
pop
insl
adc
jo
stos
adc
bound
cld
cmp
jecxz
nop
push
aaa
cmp
out
mov
xor
sar
jg
js
ss
test
mov
lea
cmp
pop
mov
mov
pop
rorl
adc
and
test
jecxz
sahf
xlat
aam
test
xchg
pop
add
loopne
add
ss
add
push
rclb
sub
fdivrl
addr16
adc
or
mov
les
cmc
movsl
push
xlat
cld
xchg
sbb
inc
fidivrl
shlb
mov
popa
cmpsb
lret
push
in
inc
subl
test
fisubl
addb
scas
shrb
mov
inc
es
leave
cmp
fistl
cmpsb
mov
adc
je
out
jb
mov
rclb
cwtl
lock
outsb
outsl
icebp
xchg
ljmp
aas
sub
cmpsl
lcall
std
xchg
dec
mov
xor
ja
addr16
lds
push
mov
pop
xchg
push
dec
in
push
mov
jle
int3
cmp
aad
cmp
faddl
dec
cmp
out
aam
popf
push
mov
in
push
sarl
push
xor
or
shl
jno
xchg
lcall
jb
std
cmpsl
adc
mov
or
push
scas
icebp
mov
mov
imul
ds
sbb
xchg
cmpsl
dec
fisubl
sbb
push
push
test
push
scas
add
in
or
lods
mul
into
call
dec
in
mov
mov
jo
and
es
rep
xor
repnz
fidivrl
data16
mov
repz
sti
inc
dec
sbb
pop
stc
scas
stos
insb
in
xchg
add
mov
xchg
dec
fisttpl
sti
fsubl
xchg
aam
or
movsb
std
test
in
jg
jne
movsl
push
dec
add
lret
icebp
rclb
mov
stos
int3
sbb
push
test
sub
rcll
addr16
in
and
adc
xor
lock
dec
lock
xchg
xor
xor
xor
scas
aam
pop
mov
mov
ret
es
or
divl
push
out
adc
outsb
mov
pusha
ficoml
mov
adc
fwait
dec
mov
je
and
test
daa
mov
mov
lcall
dec
test
cld
loop
xor
adc
sbb
movsl
call
loope
cmp
mov
rclb
cmp
mov
jl
inc
mov
sub
iret
mov
movsb
je
into
xor
lahf
adc
ret
shrb
mov
in
push
mov
mov
stc
test
and
pop
mov
cltd
mov
std
mov
leave
outsb
or
cmp
cld
ret
push
gs
xor
add
aas
jmp
sbb
nop
cwtl
push
mov
imul
push
sti
jecxz
jp
add
jo
jne
mov
dec
insl
add
out
or
sbb
and
mov
lock
pop
push
sbb
push
or
adcl
lods
dec
addr16
xchg
mov
adc
xchg
int
push
dec
dec
xor
lret
mov
jp
sub
pop
mov
aam
testb
int
loope
add
sub
xchg
jge
stos
and
mov
sub
push
xor
jne
je
xlat
sbb
mov
das
and
clc
push
aaa
jne
push
pop
pushf
mov
jge
ret
popf
push
dec
shl
gs
and
mov
mov
xor
push
or
out
cmp
mov
pop
inc
andl
sub
cmp
lret
test
lods
lods
fnstcw
pop
xchg
pop
xlat
push
inc
xor
jg
lcall
in
jp
jno
adc
int
xchg
adc
pusha
cmp
icebp
bound
sbb
mov
lahf
testb
test
mov
test
insl
fwait
movsl
mov
cmp
mov
fisttpll
xlat
es
pop
int
cmpl
out
adc
js
and
or
daa
or
scas
shll
int
aaa
mov
rol
jbe
pop
loop
daa
das
adc
pushf
inc
or
mov
out
dec
out
push
mov
mov
into
aam
mov
and
pop
xlat
icebp
js
in
inc
inc
jae
jge
rcrb
xchg
cs
lods
mov
mov
or
mov
ret
std
cs
push
or
push
pushf
mov
adc
jbe
daa
cld
sub
jg
and
jge
adc
add
pop
pop
pop
push
mov
sahf
ficomps
mov
lret
mov
jnp
subl
icebp
in
jno
push
cmp
in
leave
xchg
push
loope
xor
outsb
call
cmc
or
inc
pop
xchg
xchg
or
jge
icebp
insb
loop
ja
sub
stc
daa
dec
push
push
cltd
push
jmp
inc
xlat
jb
mov
in
std
inc
lahf
mov
sub
lods
or
lahf
ljmp
jmp
push
test
test
rcrl
xor
call
daa
pushf
mov
idivb
mov
test
jne
pop
pop
lods
test
ds
xor
fldl
stos
sub
in
sub
sbb
push
push
aam
inc
inc
ret
rorb
cld
cwtl
dec
mov
and
lea
outsl
rcr
fisubs
xor
xchg
or
mov
mov
scas
pushl
add
mov
pop
mov
jge
jne
mov
jo
adc
mov
sahf
push
sub
repnz
sti
sub
mov
xor
insl
repz
jo
dec
out
adc
mov
dec
jns
and
cwtl
adc
sti
adcb
shrl
lods
icebp
jo
inc
icebp
or
jns
loope
xor
in
sbb
or
jmp
xor
popw
sarb
pop
dec
dec
push
daa
ljmp
out
and
jns
gs
leave
mov
mov
pusha
mov
mov
in
negb
cmp
in
cmpsb
movl
jg
aas
sub
stc
stc
sub
shll
std
push
mov
dec
mov
pop
sbb
adc
les
mov
mov
insb
subb
lods
mov
pop
test
push
jmp
ret
xchg
pop
imul
mov
imul
jg
pop
imul
mov
xchg
sub
inc
inc
push
clc
ja
iret
push
into
sub
ss
rcr
inc
or
decb
inc
and
inc
repnz
xor
xor
test
sub
inc
sub
pop
mov
cli
lcall
jne
add
loopne
push
int
fistl
jmp
iret
and
aad
insb
fcmovne
sub
out
sub
hlt
pop
and
add
add
cmp
push
iret
scas
dec
orl
push
adc
xchg
sarb
shll
mov
cmp
mov
aaa
sbbb
pop
sub
lea
rcll
sbb
dec
pop
jns
xor
sbb
jne
inc
sbb
in
jne
iret
cmpsl
inc
pop
lcall
sbb
mov
mov
aad
xchg
sbb
jns
xor
int3
or
push
add
cmp
sub
and
adc
jnp
lret
xchg
xor
cmp
je
ljmp
add
pop
xchg
add
test
loopne
sbb
push
inc
xchg
mov
mov
jmp
add
negb
sub
mov
cmc
cmp
jge
and
int3
inc
mov
add
dec
adc
fimull
ja
rorb
or
insb
cmpsb
xchg
sub
ja
pop
bound
and
lahf
in
jns
outsb
lea
filds
cwtl
sbb
les
or
adc
loop
pop
js
test
pushf
outsb
or
rol
insb
jne
add
out
lgs
outsl
jae
mov
xchg
push
aaa
fidivrs
xchg
shrb
xchg
js
push
and
mov
sbb
inc
sarb
xor
pop
mov
mov
nop
push
pop
and
std
imul
mov
out
int
fwait
push
in
leave
push
int3
ret
pop
out
outsl
fdivs
and
sbb
xchg
lea
or
jmp
insb
push
ficoms
dec
adc
xchg
js
inc
sbb
movsb
xorl
test
les
scas
fwait
enter
rcll
std
inc
mov
cmp
and
push
adc
or
hlt
xchg
pop
jbe
sbb
sbb
add
stos
mov
and
mov
sub
aad
lret
fisubl
fld
jge
popa
add
aad
add
test
pop
leave
pop
jecxz
mov
push
mov
push
mov
xor
jns
mov
inc
sbb
pop
aaa
xlat
dec
aas
sti
movsb
jo
lea
push
pop
lret
jge
adc
jb
in
sub
pop
aas
push
int
jbe
test
pop
repz
add
lret
cs
sti
aaa
cmp
notl
std
nop
and
pop
or
xor
sub
in
outsl
mov
out
mov
mov
dec
idivl
xor
in
mov
test
add
cmovae
jne
push
lahf
icebp
add
xchg
int
sbb
in
mov
lods
adc
xchg
inc
addr16
dec
inc
and
push
sub
mov
push
jecxz
hlt
xchg
push
cmp
and
xor
push
mov
pusha
sub
cmc
or
out
mov
sub
lea
add
repz
into
pop
mov
cmp
jb
pop
xchg
jmp
inc
xchg
lods
cmc
dec
push
mov
lahf
test
rolb
js
add
push
sbb
jle
not
in
and
mov
je,pn
add
cld
outsb
pop
aam
sbb
add
cmp
test
pop
daa
adc
cmpb
shll
movsb
rep
mov
and
or
adc
push
sbb
jb
pushf
inc
shrb
mov
fcmovb
loopne
ffree
sub
xor
jno
es
cmp
pop
inc
adc
clc
imul
jg
cli
xchg
lret
lods
into
ss
or
rcrb
mov
loopne
lods
loope
in
xchg
out
mov
dec
cmp
test
mov
stc
leave
lret
mov
jl
and
push
das
sbb
xchg
std
popa
mov
xor
loop
push
in
adc
stos
xchg
ror
cmp
or
test
inc
inc
xchg
rorl
add
ss
cs
cmpb
sbb
mov
push
pop
mov
cltd
add
sbb
lret
adc
cwtl
add
inc
sahf
decb
stos
pop
dec
xchg
add
mov
dec
push
adc
test
jl
sub
test
insl
addr16
flds
mov
addr16
mov
scas
push
mov
loopne
out
xchg
cmp
leave
pop
out
mov
or
xchg
jle
fldt
add
cmc
pop
jnp
lret
push
mov
frstor
push
add
mov
xchg
push
inc
outsl
lahf
dec
jl
fistps
mov
ja
test
gs
cmp
lahf
fldln2
mov
cltd
jns
fcoml
xor
push
outsb
add
dec
ljmp
jno
xor
inc
mov
sub
lret
daa
xchg
mov
xchg
in
sub
cmp
inc
testl
js
dec
mov
dec
in
cld
inc
std
mov
pop
int3
sbb
rep
sub
push
les
cmp
ja
cmc
xchg
dec
fxch
and
mov
push
aaa
pusha
mov
cmp
xchg
mov
fmul
jle
in
mov
mov
sti
pop
scas
leave
push
imul
lret
fsubs
dec
popf
scas
add
xor
jge
and
cld
pop
stc
sbb
addr16
sub
test
arpl
dec
clc
inc
sbb
inc
lods
pop
cmpsl
mov
jb
dec
mov
jecxz
lods
mov
js
cmp
out
cmc
out
fistpl
xor
pop
xor
aas
fimuls
notl
or
lcall
in
fsubl
or
jmp
shl
dec
or
hlt
enter
icebp
adcb
mov
and
lds
lea
inc
mov
pop
jo
and
je
inc
push
inc
gs
or
xchg
dec
aas
or
or
or
inc
je
jecxz
and
lock
sub
std
and
nop
inc
xchg
stos
xchg
inc
pushf
xor
ret
fs
push
test
adc
out
inc
pop
sub
xor
ss
sub
loope
pop
fcomps
testl
scas
push
leave
addl
cmp
xor
xchg
push
stos
mov
sub
jecxz
adcb
mov
add
pushf
test
jecxz
pop
cmp
jno
lock
lock
loop
mov
ds
jb
xchg
popf
and
enter
stc
arpl
or
inc
mov
in
xchg
dec
sbb
inc
pop
out
xor
sub
stos
sbbl
in
mov
xchg
idivl
jmp
movsl
outsb
push
rcrb
add
pop
inc
or
jnp
and
test
cltd
mov
pusha
frstor
aaa
mov
outsl
cmp
pop
aas
mov
jp
addr16
and
adc
inc
dec
jbe
sbb
sbb
loopne
inc
test
cmpsl
int3
je
inc
adc
mov
fbstp
dec
push
pop
xchg
adc
push
xor
jge
mov
fs
adc
mov
pop
xlat
push
add
stos
add
pop
out
and
mov
push
push
aas
or
pop
xchg
cmpsb
add
or
inc
sbb
dec
mov
fwait
loop
test
outsl
lock
dec
loop
dec
repnz
rorl
xchg
xor
xchg
sub
es
ret
jnp
dec
hlt
push
js
movsb
sub
mov
inc
cmc
dec
clc
mov
jmp
xchg
jge
dec
dec
pop
loopne
mov
imul
xchg
mov
adc
cmp
or
mov
int3
xchg
xchg
int3
push
aad
jecxz
dec
mov
frstor
test
sti
and
pop
icebp
cmpsl
out
or
mov
loope
into
mov
outsb
inc
pop
xchg
push
jbe
insb
mov
sub
cmp
xchg
sbb
xlat
mov
pop
push
je
mov
lret
std
movsl
sbb
xorl
adc
push
int
mov
jo
stos
insb
in
jp
mov
movsb
lcall
pop
mov
andl
sbb
cltd
sbb
das
inc
jecxz
stos
and
addr16
or
dec
lea
lret
mov
jmp
fcoml
cmpsb
push
push
sbb
hlt
sub
cmp
jecxz
rcl
mov
pusha
js
adc
je
es
je
xchg
jbe
sbb
out
ja
andnps
adc
data16
test
pop
call
popf
xchg
jo
xchg
adc
adc
iret
mov
mov
movsl
jns
fwait
inc
add
mov
enter
aad
xor
dec
xor
mov
in
enter
jns
loopne
cmp
jno
testb
adc
rep
outsl
xor
or
mov
sbb
mov
adc
or
aad
xchg
insb
into
mulb
wbinvd
lods
fildll
and
out
pop
pop
mov
test
stos
add
inc
insb
sub
subb
xor
out
inc
sahf
addl
adc
popf
ljmp
cmp
fidivrl
lret
fcmove
lds
scas
stos
inc
cmp
bound
out
fmuls
sbb
sub
icebp
dec
out
jmp
sbb
mov
sub
add
push
leave
sti
je
push
arpl
lret
and
std
fs
shrl
inc
lret
repnz
std
in
sub
inc
insb
add
lahf
gs
js
lea
rcrb
inc
pop
ret
cmpsb
mov
dec
stos
jae
xchg
dec
sub
add
repz
xchg
mov
mov
mov
dec
and
cli
cmpsb
repnz
add
cmc
in
and
xchg
add
stc
mov
in
adcb
mov
mov
sbb
movsb
jl
inc
outsb
sub
mov
mov
sub
xchg
fldenv
in
aam
stos
popa
test
negl
out
sub
pop
cwtl
and
jns
imul
addr16
fldt
mov
dec
lods
dec
inc
xchg
lahf
sahf
mov
push
lret
scas
push
or
jbe
lods
popf
mov
adc
arpl
inc
mov
in
lcall
push
mov
push
testb
mov
ret
jmp
call
add
aaa
retw
icebp
xchg
stos
dec
jp
xor
addr16
pop
rorl
mov
cmc
mov
bound
push
sahf
lret
test
xchg
sub
push
inc
inc
xchg
mov
jb
push
and
testl
sub
xchg
jnp
mov
sbb
bound
out
arpl
or
mov
adc
fbld
mov
xlat
xchg
jge
je
xchg
mov
cmpsb
rol
and
cmpsb
repz
and
ss
in
mov
jg
stos
cmc
das
out
fldenv
adc
outsb
aas
in
mov
jecxz
stos
adc
mov
dec
jg
movb
js
inc
out
inc
les
ret
jo
pushf
rcrb
xchg
movsb
int
rcrb
mov
pop
inc
push
jl
cmp
sub
stc
push
mov
sbb
sub
data16
cmp
xchg
push
lahf
adc
sub
in
aam
xor
repnz
neg
les
push
adc
jo
enter
fs
inc
sub
add
jp
xor
pop
ljmp
icebp
cmc
jo
mov
test
idiv
das
lods
repnz
js
imul
arpl
dec
jg
jecxz
aaa
push
push
lcall
push
sbb
gs
or
lods
enter
push
sub
addr16
dec
mov
test
lcall
aam
pop
aaa
insl
stos
mov
es
out
inc
mov
add
xchg
lcall
cmc
mov
jmp
shll
push
mov
insl
int3
ja
sbb
rcl
lret
jp
xor
push
sbb
aam
xlat
shll
jg
xchg
lods
sbb
adc
loope
dec
jmp
insb
mov
ja
gs
xchg
xor
push
in
xor
mov
jae
xor
xor
dec
dec
add
inc
repnz
or
add
repz
shl
mov
and
push
xor
inc
sub
mov
enter
call
inc
data16
xchg
adc
popa
stos
incl
mov
fisubs
aam
jg
scas
cmpl
push
and
pop
mov
cwtl
xchg
and
fsub
adc
fisubrl
or
leave
push
es
xor
add
rolb
data16
mov
push
cld
sub
movb
repz
aaa
out
push
aas
in
or
mov
stc
xchg
add
int3
xchg
aam
mov
adcb
imul
xor
jno
mov
cmp
fcoml
sbb
sbb
push
mov
pop
xorl
out
das
shrl
rcrl
xchg
mov
shr
and
dec
mov
test
adc
lock
jl
sub
mov
xor
or
xchg
push
xchg
repz
mov
mov
lock
test
push
out
cmp
pop
movsb
leave
cmp
ret
fidivs
shll
addb
adc
mov
lretw
mov
adc
mov
pop
sbbl
lock
lods
jecxz
mov
fdivp
lahf
mov
in
add
fimull
xor
push
int3
pop
fnstsw
sbb
mov
pop
pop
sarl
xchg
jne
xchg
mov
fmulp
xchg
aas
iret
and
outsl
ja
jecxz
sub
dec
adc
sbb
mov
popl
cs
push
pusha
ds
divb
lret
fsubs
pop
sbb
push
cmp
cmp
and
inc
or
outsl
js
adc
and
out
lahf
fidivs
fcompl
cmp
lcall
inc
mov
add
jp
cmp
into
mov
scas
and
cmp
mov
mov
jmp
or
and
xor
fldl
push
movl
in
lcall
in
inc
push
sbb
adc
cmp
movups
rorl
mov
ds
ss
push
scas
pop
or
pop
adc
mov
loope
out
add
dec
cwtl
add
xor
xor
xor
loop
cmp
and
outsb
sti
call
sbb
xchg
sahf
test
imul
push
popa
cmpsl
adc
xor
leave
inc
sbbb
and
dec
jbe
or
mov
push
test
aas
cmc
rol
pop
cld
sub
dec
and
repnz
icebp
outsb
orb
aad
xor
ss
jp
cli
pop
dec
mov
add
js
test
adc
adc
mov
pop
xor
bound
mov
stc
xchg
aam
inc
xor
das
or
dec
out
xor
subl
sub
mov
stos
jg
fs
lret
mov
sbb
out
or
dec
fnstenv
mov
xor
cs
mov
iret
insb
dec
adc
jmp
lock
mov
mov
mov
dec
pop
dec
iret
lock
stc
inc
ja
outsl
ffree
leave
xchg
push
lods
test
unpckhps
les
inc
subl
cmp
out
sub
sub
jnp
dec
dec
pushl
mov
imul
aam
scas
das
cmp
test
and
sbb
mov
sbb
dec
mov
xchg
sbb
dec
push
push
aaa
mov
sbb
mov
or
push
hlt
popa
and
mov
xor
sub
fisubrl
movsl
daa
pop
jns
xor
push
push
push
jne
repnz
inc
inc
test
pop
pop
sbb
adc
or
rorl
pop
in
mov
je
f2xm1
inc
inc
dec
pop
std
inc
ja
xchg
cmp
in
je
pop
lahf
xor
daa
ja
dec
cld
daa
in
mov
cmp
push
fnstenv
imull
xchg
jns
or
fucom
call
sub
push
js
dec
sub
jmp
mov
mov
shll
jns
testl
sbb
lock
xchg
pop
add
pop
adc
push
in
subb
shrl
dec
sbb
mov
cmp
inc
inc
lcall
push
outsb
jb
out
mov
push
mov
push
add
imul
fs
insl
xchg
ljmp
ret
scas
out
add
jbe
stos
add
inc
stc
and
loop
movsl
push
inc
fadds
mov
mov
ret
push
jbe
shlb
push
nop
iret
test
jbe
imul
mov
dec
pop
in
push
sbb
leave
mov
cltd
scas
jge
pop
stc
in
pop
pop
xor
loope
or
sub
jge
jmp
adc
popa
xchg
pop
outsl
mov
sbb
add
sub
mov
ljmp
xchg
sub
xorl
bound
fnstenv
pop
mov
mov
fnstcw
mov
mov
dec
call
dec
cld
mov
pop
movsb
sub
aad
pushf
cmpsl
shlb
mov
xchg
and
cmp
mov
add
xchg
sub
movl
push
dec
dec
scas
cmp
sbb
insb
pop
movsl
jb
push
mov
push
aad
mov
mov
stos
push
iret
mov
mov
dec
mov
scas
add
xchg
addr16
jmp
cmp
jnp
sbb
push
jmp
subl
pop
in
push
ss
or
ret
clc
sbb
movsb
dec
or
dec
mov
data16
pop
rcl
pushf
out
sub
jp
mov
jmp
es
fdivrs
dec
lds
mov
out
iret
daa
or
pushf
daa
cmpsl
jbe
dec
inc
fwait
xchg
cmp
iret
sub
ljmp
xchg
jbe
rcr
aad
cmp
out
out
inc
hlt
ss
push
data16
mov
inc
pop
loopne
xchg
pop
int3
pop
xlat
ret
xlat
daa
ljmp
adc
int
mov
lea
xchg
pop
adc
nop
iret
addr16
sub
ljmp
bnd
push
int
lcall
int
or
jno
scas
pop
popa
jmp
icebp
or
add
xor
cmp
or
mov
fcmovne
jno
dec
cmp
insb
dec
mov
mov
jmp
outsl
mov
fs
outsb
ljmp
andl
dec
xchg
sub
enter
mov
stos
sub
pop
inc
rolb
or
leave
xchg
xor
les
add
jbe
jmp
xlat
out
loop
push
test
dec
arpl
scas
mov
sbb
in
dec
push
jg
sbb
loopne
clc
das
in
jle
scas
sub
insl
stos
outsl
outsl
gs
stc
xorl
sub
pop
pop
rcrb
call
cmp
pop
je
test
inc
mov
aam
inc
push
repnz
ret
mov
ss
insb
pop
jmp
pop
pop
inc
js
xlat
sub
mov
lcall
sbb
and
movaps
mov
je
roll
mov
cltd
inc
pushf
add
ljmp
movsb
gs
nop
clc
loopne
jns
pushf
xor
aas
and
cmpsb
xor
fdiv
lret
into
push
xor
xchg
mov
xor
das
pop
inc
mov
in
and
lcall
mov
jb
int3
popa
int3
jnp
push
pop
or
in
cmpsl
xchg
loope
dec
dec
push
int3
jl
lods
fisttpl
fs
mov
xor
data16
pop
stc
pushl
mov
js
mov
scas
test
xor
adc
inc
aad
xlat
sbb
sbb
mov
into
scas
and
pusha
test
daa
in
pop
stos
shlb
mov
rolb
shlb
push
jno
inc
jns
gs
and
icebp
sub
scas
leave
rclb
mov
int3
cmpsb
mov
or
je
addr16
mov
les
and
xchg
iret
push
pop
xor
inc
popa
mov
pop
xlat
pop
mov
inc
aas
in
push
cld
push
jge
mov
insb
add
and
lret
push
pop
fstl
sub
push
push
or
dec
cmp
inc
push
inc
in
jecxz
push
pop
add
sahf
and
fstpl
rcl
xchg
lret
xchg
fstpl
mov
stos
pop
inc
ljmp
pop
sbb
dec
jbe
pop
in
cmp
add
enter
add
xchg
mov
ret
cwtl
mov
icebp
sub
push
push
jne
mov
cwtl
pop
sbb
mov
adc
jge
xor
mov
in
fyl2xp1
mov
cmp
lea
lret
pop
push
push
nop
mov
jp
ret
add
lea
add
notl
add
mov
test
fwait
ds
cmc
test
aas
ret
sub
mov
es
mov
add
xchg
xor
or
cli
jp
js
add
in
aaa
mov
and
insl
jbe
sub
inc
mov
push
jg
mov
or
cltd
jl
loopne
cmpb
or
inc
popa
pop
and
cmpl
cmp
jnp
popa
dec
add
lret
mov
mov
fcom
push
insl
outsl
pop
mov
jge
lea
stos
jnp
pop
add
adc
cmp
and
stos
clc
and
xor
rcrl
mov
movsb
es
aaa
lods
fdivl
xchg
fwait
or
jbe
aam
xchg
xor
fs
mov
pop
pop
enter
loopne
stos
or
push
push
mov
in
clc
pop
js
mov
in
inc
pop
adcl
adc
cmovne
imul
lods
pusha
es
ja
push
popa
inc
aam
push
fistps
dec
ret
negl
lahf
push
sub
loope
mov
pop
enter
sub
into
or
sbb
mov
fxch
fists
cld
fs
push
push
mov
aaa
in
cmp
mov
mov
xor
shll
add
leave
cmpsb
mov
pop
or
lcall
xor
pop
dec
add
jle
addr16
cltd
in
les
mov
test
xchg
pop
jg
xchg
dec
mov
int3
adc
cmc
mov
imul
sbb
test
mov
fs
mov
jns
inc
pop
sbbb
mov
cmpsl
sti
arpl
shrb
enter
mov
pop
adc
pop
jg
not
fdivl
popa
xchg
int3
and
xchg
add
int
mov
xor
jg
sbb
sbb
clc
or
push
mov
cmp
outsl
iret
fs
xor
sbb
int3
cmp
loop
lcall
mov
hlt
mov
and
fs
push
jg
popf
xchg
add
out
mov
leave
sbb
test
int3
jge
cmc
jecxz
fstpt
xor
shll
mov
shlb
mov
icebp
data16
and
imul
lcall
mov
xchg
shlb
fsubrs
inc
adc
xor
add
mov
addr16
inc
clc
add
pop
xor
mov
scas
enter
jnp
cmp
or
adc
scas
in
fdivrl
inc
stos
cli
add
rcrl
ficoml
add
inc
in
js
add
mov
ljmp
push
aaa
cmp
dec
sub
dec
arpl
mov
and
jno
add
pop
or
xchg
pop
ja
add
xor
shr
mov
into
dec
imul
das
aaa
cmp
mov
je
pushf
pop
add
enter
push
daa
mov
mov
push
sub
pop
add
xchg
shll
mov
mov
inc
push
aam
in
inc
pop
ljmp
sub
lcall
push
stos
test
sub
les
adcb
dec
ja
push
cmpsl
adc
push
pop
mov
jnp
jnp
leave
xor
test
lock
pop
lds
and
push
inc
aas
mov
dec
or
idivb
jl
pop
cmp
jecxz
pop
jp
push
in
lcall
xchg
popa
sub
jecxz
cmpsl
push
insb
daa
sarb
sub
cmc
out
push
fcoml
push
or
or
dec
jmp
mov
xchg
nop
mov
xchg
push
nop
xor
rolb
mov
fists
ss
in
mov
sub
out
lret
inc
sub
sub
pop
mov
pop
add
lods
test
je
cmp
add
mov
fwait
jl
mov
mov
xchg
dec
sub
js
pop
xchg
dec
cmp
push
mov
mov
jns
jg
in
and
push
sarb
ja
inc
jp
cltd
xchg
dec
fld
lahf
jmp
dec
daa
jne
fld
dec
mov
add
bound
pop
pop
in
mov
cmp
push
cs
add
arpl
mov
shlb
dec
roll
lods
and
cwtl
mulb
fidivl
sahf
mov
fbld
xlat
mov
sub
and
jge
push
inc
je
fstl
mov
sbb
sti
rcl
movsb
pop
pop
jle
and
jb
lods
mov
xor
mov
push
cli
mov
daa
std
mov
ds
and
mov
pop
lret
adc
test
bound
test
lods
dec
adc
cmpsb
cmpsb
push
xor
add
push
or
pop
popf
add
lock
cld
xor
sbb
inc
or
push
cmp
dec
or
dec
pushw
xrelease
insb
lock
add
popf
xlat
gs
ljmp
ret
aaa
xchg
inc
mov
pop
jb
xchg
int
repz
ror
jmp
sbb
sti
shrl
sbb
in
hlt
xchg
jp,pn
loope
xor
jns
lahf
notl
out
adc
aaa
jb
mov
sti
or
inc
dec
sub
repz
inc
mov
arpl
outsl
dec
mov
int3
xchg
jmp
cwtl
push
pop
xchg
xchg
bnd
andb
mov
xlat
in
pop
jl
push
pop
inc
es
pop
push
adc
sahf
stos
cs
flds
add
mov
test
fucomip
cmp
movsl
push
mov
mov
outsl
pop
adc
aaa
stc
out
jae
or
xchg
js
mov
movsb
jae
stc
jb
or
jno
jns
outsb
in
jecxz
lods
js
shlb
adc
outsl
sub
adc
dec
jl
std
add
fs
pop
movsb
addr16
scas
stc
xor
pop
icebp
adc
jecxz
in
scas
fstpt
dec
cltd
inc
mov
xchg
sbb
inc
sti
push
test
sti
mov
pop
xchg
adc
xor
jmp
mov
scas
and
aad
mov
fucom
or
lods
mov
popa
adc
sarl
sub
lret
in
push
iret
dec
dec
xchg
dec
push
addl
pop
fstpt
and
hlt
sti
adc
in
mov
into
adc
mov
sub
push
pop
fistpll
sub
rolb
sbb
dec
in
mov
test
add
adc
aaa
imul
xor
push
int3
add
dec
mov
sub
jnp
mov
sbb
inc
test
jnp
loopne
into
xchg
push
and
jnp
adc
iret
mov
out
or
push
leave
js
dec
dec
cmpsb
cmp
jge
pushf
pushl
jnp
or
xchg
int
call
xchg
cmp
jmp
or
dec
lret
daa
inc
mov
xchg
and
shll
test
daa
sbb
addl
mov
cs
in
or
ss
push
and
scas
test
popf
push
push
xchg
and
int
loopne
test
push
jg
mov
pop
add
stc
pop
daa
loop
sbb
test
adc
test
mov
push
push
adc
xor
jne
aas
pop
loope
roll
jl
lock
lea
aas
call
aas
xchg
in
add
mov
xchg
loop
cmp
rorl
aad
xlat
je
sub
test
mov
mov
and
xor
inc
and
pusha
inc
dec
mov
xchg
lret
add
neg
sub
cmp
inc
das
add
movsb
inc
or
cmpb
cmp
das
sub
and
pop
test
orb
in
jmp
mov
sub
subb
cs
inc
pusha
dec
sets
push
out
in
mulb
imul
adc
dec
cli
les
incb
std
pop
dec
cwtl
pop
insl
mov
sub
sbb
cmp
js
dec
dec
jmp
lods
push
out
sbb
add
push
mov
xor
jg
pop
xlat
inc
repz
dec
pop
roll
jecxz
clc
scas
out
pop
adc
fs
gs
jne
mov
mov
or
cmp
mov
insl
mov
mov
sub
mov
stc
mov
jecxz
pushf
ds
push
and
call
xchg
sbbl
xchg
cld
cmp
stc
bound
cmp
lds
inc
iret
cmp
data16
cmp
insb
in
jae
jmp
and
loop
cwtd
mov
lock
pop
cmp
and
mov
bnd
push
push
fcmove
enter
pop
push
sahf
xchg
cmpsl
loop
push
popf
sti
cmc
mov
fdivl
movsb
mov
sub
mov
iret
cmp
xor
cmp
rolb
pusha
dec
mov
pushf
mov
sub
adc
sti
pop
and
inc
adc
ja
icebp
sub
jno
jae
push
sub
pop
es
dec
int
cmp
pop
cli
fldl
pop
sbb
hlt
fcompl
adcb
in
daa
push
dec
ret
sub
jecxz
insl
adc
aas
clc
mov
xchg
shrb
mov
xor
xchg
fldl
dec
stos
inc
in
mov
loop
xchg
lret
jb
repnz
test
mov
push
fwait
pop
sub
cli
inc
int
shlb
pop
sbb
sar
ret
push
mov
out
call
int
mov
dec
mov
push
jo
sahf
aam
outsl
xchg
mov
sbb
out
xor
push
cmp
mov
jle
aad
insb
imul
in
aam
xchg
fidivl
and
arpl
lods
negl
daa
or
and
aad
pop
aas
and
call
inc
xchg
inc
mov
jb
mov
out
sbb
mov
cwtl
pop
inc
dec
add
fbld
je
or
testl
popa
movsl
sub
addb
xor
shlb
scas
filds
pushf
mov
add
pop
push
pop
sbb
pop
in
outsl
stos
adc
pop
adc
fwait
lret
lea
test
lret
sbb
pop
push
push
and
xor
xchg
xor
xorl
adc
es
lods
mov
xlat
dec
aam
push
sub
adc
dec
in
jns
enter
push
xchg
les
pop
je
scas
jo
outsl
mov
sub
inc
mov
jecxz
enter
repz
sub
mov
inc
cld
stos
mov
cs
mov
xor
xor
jnp
ret
icebp
notl
shll
jae
mov
inc
or
mulb
fiadds
or
mov
mov
clc
dec
aaa
push
lcall
inc
mov
add
xor
ljmp
and
pushf
imul
or
push
fs
xchg
into
lea
mov
loop
fisubrs
out
ds
mov
rorl
or
jg
or
xor
add
movups
pop
rcrl
icebp
sub
mov
jne
lea
mov
enter
ret
jg
fnsave
sbb
pop
je
xchg
fisttpl
mov
mov
fcmovnu
lods
push
jbe
ja
aam
jp
xchg
outsb
xchg
mov
xor
testl
aaa
mov
int3
fdivrp
insl
dec
mov
jl
dec
fnstenv
aaa
mov
push
cmpb
mov
arpl
push
mov
jno
ret
xchg
cli
rclb
jge
sub
int3
cmpl
leave
test
pop
inc
sub
push
jmp
stos
ffree
mov
and
mov
cmp
pop
fcoms
fimuls
push
inc
insl
lcall
bnd
cmp
movb
addr16
push
dec
cld
jne
repnz
repz
inc
imul
leave
and
out
xchg
xor
jae
outsl
jb
mov
les
xchg
cld
scas
call
dec
mov
outsl
cmp
iret
dec
sbb
mov
or
mov
add
loope
xor
icebp
dec
push
and
xor
cmp
pop
rorl
in
jecxz
imul
lods
jmp
mov
inc
mov
lods
shl
mov
lcall
mov
and
xor
popa
xchg
push
push
stc
and
int3
mov
mov
mov
clc
cli
nop
pop
fimull
pop
sbb
js
cmp
outsb
xchg
push
push
fmul
xorb
mov
mov
inc
adc
ds
repnz
inc
inc
sub
mov
out
lea
stos
iret
lock
pop
nop
dec
dec
or
enter
mov
hlt
stos
mov
je
jnp
adc
popf
sub
push
sbb
cmp
and
inc
lea
inc
stos
jns
mov
ret
std
add
fsts
and
jae
inc
pop
mov
jbe
out
aaa
and
mov
jb
idivb
shr
mov
notb
cmpsl
dec
shll
xchg
sbb
jmp
push
lods
mov
js
cmc
lods
popa
push
das
jns
adc
cmp
das
addl
cmp
mov
mov
mov
fdivr
sub
xor
gs
mov
imul
push
add
cmpsb
xchg
pop
xor
out
fiaddl
movsb
mov
ss
mov
sbb
icebp
mov
mov
inc
fnstsw
sti
cmp
in
hlt
test
push
dec
ficompl
add
outsl
mov
nop
jno
jne
add
xor
xchg
pusha
inc
ds
lock
and
mov
sub
fsubl
pop
jbe
adc
jno
xor
insb
dec
inc
add
pop
mul
nop
adc
xchg
xor
call
clc
mov
pushf
add
xor
lock
add
frstor
mov
mov
sbb
xbegin
jmp
inc
sub
add
imul
lcall
jecxz
dec
add
hlt
js
fbstp
rolb
mov
mov
mov
in
rcrl
jge
inc
icebp
mov
stos
out
sub
xchg
mov
imul
pop
imull
xorl
mov
cltd
cli
in
notl
jle
pop
addr16
mov
into
sbb
cmpsb
mov
shll
lds
fwait
mov
dec
or
mov
and
imul
and
ljmp
das
cmp
jbe
loopne
cli
rcl
mov
mov
aas
xchg
xchg
imul
dec
cmpsb
fisubl
rcrb
enter
add
adc
cmp
xor
xor
test
xor
jp
enter
je
ja
pop
mov
add
lahf
or
mov
inc
hlt
xor
mov
lock
ret
iret
scas
adc
int3
push
jae
call
shl
xlat
out
out
test
cmp
stc
mov
test
jbe
adc
and
push
jb
adc
lods
jb
hlt
lock
fwait
mov
aad
js
mov
fwait
jecxz
shrl
pop
add
pop
icebp
movsl
clc
adc
inc
mov
icebp
clc
lret
out
mov
sbb
call
mov
cwtl
out
jne
and
stos
mov
push
add
in
and
mov
ret
add
push
fisubs
cmp
sub
adcb
leave
cmp
mov
ljmp
adc
fldenv
cmp
cmpsb
pop
xchg
sbb
outsb
add
sbb
flds
leave
add
dec
dec
cmp
js
xchg
mov
dec
sub
jns
mov
dec
pushf
loope
stos
jg
lcall
fs
shll
mov
xor
repnz
cli
insb
mov
mov
jle
cmp
aaa
adc
pop
mov
xchg
jg
icebp
lea
mov
and
dec
pop
inc
jle
push
loope
sub
ret
testb
push
sub
ror
cmp
pop
dec
ljmp
mov
insl
test
pop
or
ds
pop
es
adc
inc
daa
mov
add
pop
push
and
fstps
sub
cmpsl
adc
aad
cmp
loop
mov
popf
ficoms
xchg
loopne
adc
pop
inc
xchg
mov
stos
jns
mov
sbb
cmp
pop
lcall
mov
loope
sub
aad
lret
or
or
jg
xor
xchg
sub
leave
jno
imul
std
push
aaa
jecxz
jne
jl
fs
push
cltd
imul
mov
outsl
adcw
popa
sbb
inc
fsubrp
and
add
loopne
mov
jnp
fstl
xorb
addr16
mov
push
jl
lea
jl
mov
push
mov
sub
stos
in
dec
inc
cli
inc
jno
lea
mov
and
js
cwtl
rcrl
ja
jbe
mov
dec
jne
push
xor
sahf
es
dec
mov
or
push
jb
adc
add
pop
lea
in
or
jp
pop
mov
adc
xchg
lret
shl
out
rolb
in
and
push
cltd
inc
scas
mov
jae
pop
xor
add
lock
lds
sbb
incl
cmp
out
popa
lcall
frstor
mov
or
clc
nop
add
mov
add
cmpsl
stos
dec
mov
push
es
and
pop
in
fstpt
xchg
cmp
mov
cld
jle
fwait
mov
mov
pop
enter
inc
popf
arpl
js
mov
mov
mov
xor
inc
push
mov
add
orb
test
sbb
mov
add
sbb
test
add
jp
lcall
test
push
xchg
inc
push
sbb
ljmp
sti
sbb
outsl
shl
mov
push
add
and
leave
loope
nop
fcomps
xor
mov
mov
and
rclb
insb
pop
dec
fwait
and
dec
add
mov
repnz
cs
pop
pop
adc
push
add
aas
sahf
roll
sbb
mov
arpl
push
ds
dec
scas
into
and
push
in
jne
or
mul
aaa
jo
jo
aaa
ficompl
popa
shlb
stos
ror
aad
dec
jmp
pop
addr16
sbb
or
xchg
out
push
out
and
pop
inc
xor
stos
pop
xor
inc
jne
lock
jge,pn
mov
ds
lahf
les
insl
dec
adc
or
xchg
lods
adc
xchg
add
mov
adc
loope
rorb
sub
mov
cmp
scas
mov
pop
cmpsb
adc
les
lea
adc
and
insl
sbb
or
dec
push
iret
mov
pushf
repnz
jbe
pop
pushf
mov
adc
mov
xor
xchg
scas
pop
pop
cmpsl
xor
cmp
sub
push
aam
shrl
or
imul
push
dec
pop
movsl
pop
imul
xor
fisttpll
cmc
or
mov
hlt
dec
and
or
mov
call
dec
mov
or
idivb
jae
loope
lcall
int3
jae
mov
pop
sbb
aad
mov
mov
sbb
cmpsb
xchg
fcomps
or
negl
test
dec
popa
mov
mov
mov
mov
add
mov
add
push
scas
sbb
ja
sahf
movsb
xor
mov
sti
test
xor
imul
sbb
lds
adc
dec
jae
xor
iret
cmp
xor
inc
stc
dec
aas
mov
cwtl
lea
xchg
rclb
push
add
dec
push
xor
mov
stc
imul
leave
mov
out
push
mov
cld
mov
pop
in
xchg
notl
pop
imul
add
mov
fstpt
push
sahf
mov
cmp
jmp
or
fsubl
movsbl
mov
push
or
xchg
add
testl
scas
jns
mov
or
enter
mov
add
enter
lods
orb
jno
mov
adc
mov
lea
popf
push
ss
inc
orb
adc
jg
pop
sub
inc
xor
mov
xchg
pushf
mov
jmp
popa
jne
adc
hlt
ja
sub
pop
lds
int
decb
insb
ret
stos
mov
adc
adc
and
fstpl
xchg
push
mov
push
and
test
iret
lret
xchg
xchg
pushf
je
mov
sbb
inc
rcl
jb
in
or
call
mov
or
pushf
sub
jg
mov
loope
stc
int3
lcall
pop
mov
xchg
cmc
mov
aad
mov
cltd
push
jb
mov
ret
mov
pushl
pop
fdivrl
movsb
cmp
pop
scas
mov
sti
xchg
pop
mulb
cmpsb
cmpsb
jns
aad
rcr
ja
sub
ljmp
add
mov
mov
xchg
call
cli
jnp
mov
and
fcomi
push
addr16
std
scas
popf
push
iret
dec
push
aas
adc
xlat
and
loopne
dec
inc
loopne
and
add
cmp
mov
mov
hlt
add
pop
lret
pop
cmp
xchg
mov
imul
iret
cmp
fsubs
xor
loopne
stc
cwtl
mov
add
dec
mov
add
mov
dec
fmuls
lahf
mov
idivl
loopne
les
push
mov
adc
mov
xchg
clc
push
subl
stos
test
fsubs
iret
aaa
je
fistps
out
les
mov
push
data16
sbb
cmp
arpl
and
xchg
adc
mov
pop
mov
nop
fistpll
out
mov
lret
into
sub
outsl
aas
sub
mov
or
mov
xor
rcl
and
or
jns
pop
xchg
mov
push
out
mov
hlt
pop
call
add
jno
xchg
dec
enter
cmp
jmp
leave
call
and
repnz
xchg
mov
jl
lret
cwtl
adc
outsb
lods
push
and
cwtl
push
ret
push
stc
call
hlt
mov
mov
mov
or
push
mov
push
insb
pop
dec
pop
out
sub
nop
pop
cmpsl
mov
mov
pushf
icebp
fadd
pop
mov
push
push
cld
cmpsl
and
xor
dec
dec
mov
aam
or
addr16
sahf
jge
and
in
inc
add
mov
pop
popf
mulb
sahf
inc
cmp
mov
sbb
pushf
lock
mov
sbb
push
pop
test
adc
scas
xlat
loope
into
out
data16
scas
adc
lds
ret
insb
fwait
jl
sbb
rclw
dec
and
add
sub
cmp
lahf
mov
test
mov
fadd
jbe
dec
sub
fimull
cwtl
cmpsl
add
jno
repz
add
fwait
rcrb
jp
cmp
dec
shr
sti
and
test
dec
xchg
xchg
mov
cmp
mov
das
mov
mov
rorl
test
push
xor
mov
arpl
sub
pusha
out
nop
jmp
adc
jbe
inc
fwait
jecxz
outsl
mov
ret
js
mov
stos
gs
outsb
xchg
or
add
in
xor
insl
fistpl
pop
or
ds
mov
xchg
xchg
add
or
stc
push
fsts
lret
out
dec
popf
xchg
movsb
push
lret
fisttpll
cmpsb
cmp
mov
out
inc
out
jae
jl
and
mov
inc
loop
lods
cs
jb
push
fists
push
into
and
cmp
psubusw
cmp
inc
jmp
je
jnp
add
lret
adc
or
pop
mov
jnp
xor
sti
idivl
mov
push
loope
and
and
mov
in
push
testl
push
xor
mov
jne
fcmovne
imul
jge
insl
lods
inc
mov
add
dec
cs
aaa
and
cmpsb
fs
adc
fs
xchg
mov
arpl
xchg
add
cmp
filds
and
push
push
sub
aas
push
shrb
cmpsl
pop
and
loope
lea
sahf
xor
pop
mov
int3
mov
rorb
and
add
lods
daa
add
cmp
fucomi
les
sub
sub
fbld
lock
jp
mov
mov
lret
dec
inc
out
mov
loopne
xchg
movsb
mov
pop
push
pop
rcr
cmp
sbb
lock
cld
mov
sub
pop
stos
cmc
add
gs
in
inc
scas
cmpsl
dec
in
push
mov
and
dec
lcall
cmpb
pusha
scas
cmpl
push
loopne
mov
or
mov
xor
xor
push
repnz
mov
push
add
sarb
mov
pop
adc
pushf
sbb
mov
add
and
ljmp
lods
loopne
mov
push
push
clc
push
jmp
data16
ljmp
pushl
std
ror
pop
add
outsb
inc
in
mov
fsub
outsl
lds
mov
cwtl
lea
dec
mov
dec
arpl
jg
loope
and
insl
mov
or
fistpll
sub
js
sbb
ret
mov
mov
lahf
out
clc
mov
and
stc
mov
hlt
in
clc
sub
pop
lret
sbbl
scas
adc
add
jp
dec
orb
jg
mov
or
ret
mov
jne
and
addr16
loop
jbe
cmp
push
and
mov
outsb
sahf
inc
outsl
mov
adc
es
movsl
fcomps
pop
rol
pushl
dec
arpl
sbb
sub
mov
arpl
subb
pop
and
pop
sub
mov
je
stos
and
adc
jbe
inc
mov
cld
push
or
cwtl
mov
cmpsb
out
sub
cmpsb
aaa
jnp
mov
in
stc
ret
in
arpl
or
inc
cmp
aaa
aad
insb
inc
sbb
insl
in
das
mov
mov
sahf
ret
lahf
and
in
test
mov
xchg
push
call
push
jle
xchg
filds
rorb
jno
pop
test
dec
mov
sarl
insl
fiadds
addr16
inc
inc
xor
xlat
or
shlb
fsubp
outsb
ror
mov
sub
and
add
and
fs
xor
lock
mov
xlat
sub
fcmovne
or
ljmp
inc
mov
sub
cmp
lahf
leave
adc
lcall
or
xchg
ja
insb
sub
out
xor
or
mov
and
dec
pop
push
std
insl
cltd
and
dec
xorl
push
xor
lds
fs
scas
int3
gs
pop
dec
out
lret
push
fwait
or
aas
pop
dec
loop
mov
flds
in
mov
and
jne
out
pop
cmp
jns
jno
std
mov
sub
test
inc
cmp
dec
xor
loop
sahf
dec
cmp
ja
subb
adc
or
xchg
push
jecxz
imul
aas
jle
fcmovbe
cs
add
sub
movsb
inc
movsb
aam
push
sbb
add
arpl
jge
std
ret
hlt
xchg
out
sbb
scas
inc
cmpsb
mov
pop
cmp
mov
jnp
mov
dec
mov
das
sub
mov
inc
mov
pop
xor
push
or
mov
cld
shlb
push
push
cmp
and
mov
test
sub
and
cmc
imul
mov
jmp
nop
int
lret
out
xor
fs
pushf
mov
pop
mov
fcmovnb
mov
xchg
pop
shrb
pop
dec
mov
sbb
cmp
daa
or
lret
test
lahf
add
faddl
negb
xchg
or
mov
sti
xor
lods
lahf
mov
lods
aam
xchg
sahf
mov
sbb
mov
mov
fstl
lods
sahf
pusha
lods
mov
sar
and
repz
mov
rcrb
xchg
jnp
mov
inc
in
pop
mov
adc
data16
xor
cmc
add
jo
lods
clc
push
sbb
mov
jge
pop
xchg
scas
pop
and
test
jl
lods
lcall
adc
test
imul
cmp
dec
lods
inc
inc
inc
ret
push
mov
int3
call
aas
dec
outsb
out
lret
jnp
add
shl
add
addl
loope
xchg
outsb
dec
add
pop
out
ret
dec
sub
clc
mov
lock
in
add
mov
sub
cmpsl
nopl
and
movsl
outsl
fmuls
sbb
sbb
xlat
shl
jmp
add
mov
xchg
mov
in
xchg
pusha
lock
fwait
dec
mov
cmc
dec
add
mov
fsubs
xchg
xor
jno
sub
cmp
dec
and
mov
ljmp
mov
dec
or
fwait
shll
outsl
jmp
pop
call
lcall
bound
xor
loop
and
mov
jle
fmull
mov
pop
das
mov
imul
xchg
ret
cmpsl
inc
inc
add
jnp
pop
pusha
push
mov
cmp
cmp
out
out
lret
cwtl
nop
lret
dec
mov
jnp
mov
pop
adc
negb
push
push
dec
mov
push
jb
cmc
addr16
mov
push
addr16
ret
adc
mov
int3
loop
pop
lea
or
pop
clc
xorl
insl
inc
jmp
xchg
lods
jge
fstpl
sub
loope
call
xchg
mov
ljmp
push
out
arpl
pusha
mov
xor
lods
dec
pushf
ds
sbb
mov
mov
test
shlb
adc
lcall
dec
clc
sub
pop
sbb
jge
adcb
cmp
cmpsb
mov
repnz
mov
mov
out
ljmp
inc
push
daa
push
pop
out
mov
mov
je
int3
inc
icebp
arpl
das
test
or
xchg
adc
gs
inc
dec
shlb
out
out
jl
into
ja
inc
or
orb
inc
jge
ret
and
js
adc
sbb
fwait
jmp
mov
ffreep
cltd
push
pop
in
or
cmp
pop
inc
imul
int
aas
fwait
xchg
xchg
nop
testl
aaa
mov
dec
and
daa
sar
jmp
in
stos
xchg
test
lods
mov
mov
lods
dec
pop
jle
sub
repnz
sar
pop
ja
pop
mov
mov
les
in
mov
mov
push
mov
push
insl
xchg
xchg
mov
rolb
popf
jo
int
or
cmp
movsb
popl
xor
repnz
adc
sahf
cli
test
icebp
out
push
xor
pop
sub
xchg
adc
aad
pop
sbb
mov
mov
cmp
repnz
fsubs
dec
push
mov
jge
ljmp
push
cmp
fidivrs
test
fwait
test
fstpl
and
sbb
push
fildl
or
inc
push
pop
pushf
jo
pop
cs
xchg
xchg
test
adc
push
ds
out
push
cmp
cwtl
inc
out
jnp
pop
iret
add
rcrl
icebp
ds
dec
mov
jge
push
mov
sub
sub
adc
and
sbbb
or
test
sbb
add
dec
mov
xchg
lock
adc
movsl
pushl
cmpsb
in
arpl
inc
mov
pushf
inc
inc
sbb
rcrb
shlb
int
push
mov
sub
jnp
and
roll
or
add
out
dec
add
or
mov
cmp
dec
in
adc
inc
scas
and
mov
cmc
lcall
test
xor
mov
push
iret
push
cmp
xlat
insb
sub
sbb
mov
outsl
pop
and
jno
mov
pop
pop
xchg
cmc
dec
xchg
push
clc
aaa
nop
and
push
sahf
enter
xchg
jecxz
lds
ffree
cli
push
or
sub
jmp
inc
adc
dec
lock
jle
popw
mov
jecxz
add
cmpsb
call
addr16
mov
jmp
out
in
add
jl
stc
loopne
repz
push
jle
sti
xchg
dec
jle
fcoms
cmp
mov
insb
xor
inc
add
xor
call
xor
jo
scas
jecxz
imul
je
pop
js,pn
sbb
lock
xor
push
fimull
repnz
outsb
mov
in
cmp
mov
adc
cmpsb
cwtl
das
mov
adc
imul
cld
enter
rol
push
add
push
cmpl
xor
and
into
push
imul
push
jl
mov
insl
mov
and
cmp
mov
lret
and
push
mov
fcomp
inc
lret
inc
mov
out
and
loopne
ja
xlat
mov
pop
rcrb
push
repnz
xor
clc
and
cmp
mov
xchg
add
in
mov
shr
in
imul
xchg
shr
cld
jb
mov
pop
mov
call
rorb
fistl
stos
xor
dec
jbe
dec
cltd
cld
ljmp
sahf
mov
cmpsl
xor
mov
adc
or
gs
mov
std
jmp
cli
sbb
js
rcll
pop
xchg
jp
xlat
repz
xor
mov
jge
inc
ljmp
std
pop
rcrl
xor
nop
sbb
fcoms
inc
int3
sbb
lret
and
xchg
test
fldl
arpl
cmpsb
fbld
cs
and
and
jecxz
inc
sub
adc
mov
out
pop
mov
sub
mov
pop
jg
stos
sbb
adc
popa
outsb
mov
cmpsb
imul
pop
fnsave
mov
jp
mov
out
and
push
lds
pusha
and
sub
je
sub
das
loope
xchg
pop
add
mov
and
mov
loop
or
cld
cld
pushf
sub
clc
xchg
ljmp
or
stos
mov
xor
js
jle
push
fcmovb
clc
add
pop
mov
out
or
dec
gs
rorl
pop
fs
into
insl
gs
add
stos
sbb
sbb
es
ret
mov
push
jb
push
lret
shlb
cld
xchg
incl
or
mov
cwtl
mov
cmpsl
les
xchg
shrl
movsb
pop
xlat
mov
or
aas
cmp
cwtl
mov
xchg
cmp
push
testb
cmp
in
push
add
orl
mov
dec
fistpl
aad
fsub
inc
xlat
jle
mov
and
adc
ja
out
cmpsb
hlt
jge
dec
mov
mov
adc
sub
sbb
out
idiv
and
ret
daa
fstl
out
sar
xchg
sti
inc
mov
in
adc
xchg
out
jae
or
pop
pop
xor
adc
les
insb
mov
sub
jmp
sub
add
setge
ret
sub
jnp
gs
push
and
aad
cltd
shrl
in
jbe
and
mov
push
hlt
jl
insb
pop
sbb
adc
cmpsl
out
cmp
xchg
dec
mov
stc
sbbl
das
test
insb
into
ret
popf
or
repz
mov
std
clc
pop
push
inc
in
addr16
mov
gs
lods
mov
fdivr
cmp
jnp
out
mov
xor
jl
mov
clc
push
sarl
mov
popf
in
int
pop
or
inc
push
cs
int3
shll
xchg
pop
and
imul
xlat
fdiv
inc
and
ljmp
pop
pop
fstps
ret
mov
pusha
loopne
xchg
or
sbb
jo
inc
adc
inc
test
ret
fstpt
and
push
in
call
pop
sub
mov
leave
loope
add
and
aad
and
bound
dec
jecxz
dec
xor
cwtl
push
insl
lret
fcmovbe
rcrb
scas
sub
push
mov
mov
and
jbe
pop
push
out
sahf
mov
daa
jl
lret
and
mov
mov
pop
mov
repnz
adc
sar
jl
lock
sub
or
jno
or
mov
notl
mov
push
lds
jne
lds
lcall
in
xor
pop
add
mov
add
dec
cmp
int3
push
mov
jb
fsubs
insl
popl
imul
xchg
jno
sbb
fcomip
imul
test
inc
les
push
inc
ret
xchg
testb
adc
xchg
dec
pop
pusha
movsl
mov
js
mov
mov
inc
paddusw
mov
cmpsb
jmp
loope
xchg
xor
insb
jle
cmc
xorl
jne
or
xor
sahf
mov
sbbl
mov
and
add
fiadds
inc
jo
lods
lds
xchg
jg
mov
mov
movsb
inc
lret
das
lds
es
push
dec
jge
stos
dec
addr16
lea
imul
nop
push
lcall
fmuls
adc
mov
icebp
loop
xchg
int3
das
mov
push
inc
xlat
mov
pop
mov
mov
push
insb
adc
cmp
roll
out
or
push
jl
jecxz
mov
cmc
cmp
andb
das
mov
dec
push
roll
ss
add
xchg
loop
push
push
stos
iret
orb
addb
ret
in
or
push
and
out
and
andb
cmp
fdivs
mov
cli
add
xor
xchg
insb
repnz
pop
jg
push
popf
pop
inc
push
scas
lea
mov
popf
pop
into
rolb
pop
sub
lcall
dec
xchg
add
addr16
mov
cli
or
mov
sbb
test
aam
out
xchg
sarb
popa
lea
outsl
lea
in
ret
push
mov
scas
pop
rorb
in
mov
sub
mov
push
les
arpl
stos
mov
sub
int3
xchg
in
inc
cwtl
icebp
inc
mov
imul
and
pop
je
dec
ret
sbb
cmpsl
add
xor
push
mov
insb
cltd
lahf
clc
cmp
adc
call
sub
fbstp
test
out
mov
jmp
and
outsb
sbb
lea
test
jmp
fsubp
mov
mov
cmp
jnp
xor
loope
cmp
mov
jl
fwait
mulb
mov
adc
xlat
popf
dec
pop
xlat
or
cmp
cltd
mov
adc
jno
outsb
sbb
xchg
imul
pop
insb
push
jp
sti
xchg
pop
or
in
rcrl
loope
scas
in
aaa
clc
xchg
popa
movb
adc
sahf
sti
inc
sub
in
inc
sub
or
or
lret
adc
lcall
testl
movsl
xlat
mov
dec
dec
nop
cld
notb
sbb
xlat
or
sbb
dec
jp
dec
inc
out
jae
mulb
dec
jge
test
add
jb
jnp
movsl
mov
movsl
mov
lret
into
divb
jmp
test
mov
icebp
rolb
ret
pop
mov
ret
sti
mov
stc
jge
jle
xchg
sbb
subl
jae
dec
hlt
gs
jo
outsl
test
mov
xor
jp
mov
and
mov
mov
sti
ljmp
js,pn
insl
and
cmp
xor
mov
ret
fnstcw
mov
lret
push
or
in
inc
sub
loope
outsl
push
sbb
inc
outsb
arpl
sub
mov
gs
les
jbe
insl
sbb
jmp
lods
lret
in
rcrl
lahf
and
shlb
ljmp
call
js
dec
cmp
fnsave
add
sbb
imul
inc
insb
and
fcmove
mov
or
inc
mov
push
rcrl
call
mov
jmp
adc
jno
xchg
outsb
push
outsb
cmpl
ror
xor
mov
icebp
inc
in
popa
mov
sub
mov
cmp
iret
das
or
insb
add
stos
and
and
ljmp
subl
shlb
pop
mov
mov
and
jne
cltd
cmp
or
scas
ror
mov
dec
loop
fsts
or
movsl
mov
mov
out
testb
sarl
or
mov
jecxz
inc
shrb
push
je
sub
cld
lret
jno
inc
mov
scas
jno
stc
loopne
inc
cld
add
lahf
stos
pop
les
ss
adc
fstpt
push
adc
iret
loop
add
outsl
int
js
push
or
testl
notb
sti
cmc
ret
mov
dec
xchg
cld
insl
pop
rcl
sahf
scas
cmc
lock
outsl
dec
sub
lret
xor
mov
insl
push
pop
sub
movsl
xchg
mov
dec
push
xlat
jge
imul
jns
pop
mov
incb
pop
sub
add
mov
sub
lret
or
or
push
pop
int3
jo
xor
ret
sti
loopne
mov
pushf
mov
lret
adc
xchg
jl
jmp
pop
mov
push
xor
shrb
or
rcrl
mov
insl
push
fildll
pop
insb
xchg
mov
pop
adc
push
loopne
push
fwait
xor
lock
push
nop
negl
pop
inc
xchg
enter
inc
mov
inc
negb
es
outsl
pop
xchg
addr16
mov
add
xor
in
pop
jae
add
stos
add
addr16
cltd
jg
xor
xor
add
push
sahf
test
or
adc
push
dec
jnp
sbb
fstl
test
test
mov
or
outsb
repnz
daa
les
cmp
hlt
mov
xor
sti
dec
loope
fbld
iret
dec
clc
addl
outsb
xor
sub
xchg
push
push
iret
fsubp
jbe
popa
cmp
unpckhps
gs
cmp
divl
stc
repnz
sub
inc
mov
scas
adc
jbe
jns
push
sbb
dec
pop
add
pop
jns
testb
push
jae
pop
xor
fadds
pop
into
sub
push
xor
mov
or
lock
sarl
jmp
pop
push
dec
pop
add
call
fists
pop
sbb
add
int3
mov
jp
push
and
lret
daa
adc
mov
jae
sub
sarl
mov
push
stc
outsb
sub
cmc
testb
mov
pop
cwtl
adc
outsl
xchg
test
test
mov
cs
jbe
xor
jns
jo
sbbb
mov
push
push
jg
adc
outsl
adc
shll
rolb
fnsave
ljmp
repz
mov
push
mov
and
imul
dec
adc
iret
imul
test
rcrb
jg
nop
mov
cmp
mov
out
insl
fidivrl
mov
mov
ret
sbb
mov
xor
out
fldenvs
movsl
fidivrl
push
push
mov
lcall
add
pushf
sti
mov
dec
jge
cmp
sub
sahf
dec
xchg
jmp
jg
pop
pop
loop
xchg
jl
jl
pop
idivl
ds
cli
je
xor
mov
cmp
push
outsb
and
cmp
cmp
jnp
mov
je
movsb
mov
ret
mov
xor
dec
jbe
jno
sti
inc
and
pop
pushl
les
ficoms
inc
sbb
sbb
addr16
adc
pop
adc
cli
add
lds
dec
push
adc
and
add
es
adc
fnstcw
sbbl
jmp
push
jp
call
jge
dec
popf
xor
aad
sub
or
sbb
sbb
gs
or
sbb
scas
mov
jmp
xchg
xchg
inc
jge
and
les
call
out
lret
fsub
adc
mov
out
sti
cmp
adc
push
or
pop
call
sti
xchg
mov
inc
adc
scas
dec
mov
shlb
push
int3
cmp
mov
fdivl
adc
in
sub
add
lret
ret
shr
jb
xchg
daa
dec
repz
dec
mov
xor
sbb
jae
ja
jge
cmc
aam
aad
loopne
inc
divb
add
push
test
pop
aaa
and
jne
idivl
cmp
pop
pop
rcrb
in
mov
nop
test
subl
aad
test
mov
stos
dec
jg
movsb
cmpsl
jnp
imul
aas
in
dec
sbb
mov
sub
jo
addb
add
popf
js
sub
sbb
cmp
arpl
std
nop
or
pop
adc
roll
sbb
mov
xchg
or
lcall
add
cmpsb
push
jge
test
mov
mov
scas
not
and
out
es
mov
mov
mov
adc
cmp
push
data16
jl
mov
ds
push
aaa
mov
add
lret
scas
js
cmp
in
test
adc
test
dec
out
into
outsl
outsl
push
sub
lret
in
jle
nop
inc
das
out
mov
ja
xlat
fs
push
cmp
add
sub
xor
pop
aad
adc
inc
mov
mov
or
xor
out
mov
das
mov
outsl
in
jo
push
jmp
popa
add
outsl
xlat
fisubl
mov
pop
sahf
outsl
out
fwait
jmp
rorb
mov
lds
aas
sub
dec
lods
fisubs
or
lds
dec
jae
sbb
sub
mov
lods
js
xchg
xchg
jne
cmp
mull
pop
sbb
mov
cli
iret
push
in
hlt
data16
mov
dec
jbe
push
loop
pop
cltd
mov
outsb
or
jae
pop
int
lock
adc
xor
pop
lahf
subb
xor
fs
mov
inc
cmp
inc
xor
ret
push
mov
cmp
adc
adc
adc
lcall
les
add
pop
iret
add
xor
cwtl
clc
inc
pop
callw
imul
test
mov
and
imul
xchg
aaa
loope
fbld
cmpl
int3
mov
jg
or
cmp
xlat
jns
pop
jecxz
lahf
dec
push
add
imull
aaa
or
sbb
cs
fildll
addr16
fcomip
dec
pop
xchg
sahf
ret
inc
call
mov
mov
mov
bound
das
mov
jnp
fsubrp
jge
out
movsl
sub
sbb
cmpsb
popa
cli
adc
test
cmp
shll
xchg
into
cmp
push
sahf
imul
cmovns
jo
xor
inc
pop
lods
lcall
mov
test
xor
xchg
mov
pop
pop
sbb
jnp
repz
push
mov
gs
idivb
fs
ret
inc
aam
ret
roll
mov
dec
push
fscale
mov
cmp
mov
add
mov
dec
test
adcl
jecxz
sar
and
xchg
push
dec
test
push
push
and
cmpsl
cmc
mov
or
cld
jp
mov
into
push
iret
int3
add
sbb
lods
ds
lret
cmp
inc
xchg
fdiv
ja
clc
scas
inc
cld
jmp
and
loopne
shlb
mov
enter
mov
push
jge
adcb
lcall
jns
push
scas
int
das
mov
sti
push
roll
and
in
pop
mov
or
add
ret
mov
adc
mov
outsl
add
loopne
scas
mov
roll
push
hlt
leave
push
and
lea
jb
div
mov
pop
push
in
mov
cmp
mov
adc
mov
mov
loop
sbb
mov
xchg
jmp
leave
and
inc
inc
xor
adc
mov
pop
shrb
popa
mov
test
add
jle
push
cmp
test
jns
jle
fs
leave
iret
xlat
pusha
push
jns
add
fwait
inc
jne
test
or
jl
insl
push
xlat
xchg
jb
xchg
push
gs
push
ret
xchg
or
jnp
push
dec
rclb
dec
pushf
mov
lret
ffreep
lcall
lds
dec
aas
lret
mov
hlt
mov
or
xor
adc
gs
shrl
pcmpgtb
xchg
rol
push
jae
or
lret
jns
stc
mov
sub
mov
cmp
adc
xchg
test
lods
xchg
cmp
out
enter
shll
push
jbe
mov
add
push
mov
outsb
add
adc
sbbb
push
mov
mov
mov
inc
cmpsb
mov
xor
rol
roll
cmp
xor
out
test
push
in
insb
gs
xchg
sbb
mov
arpl
and
lcall
inc
loop
dec
mov
pop
or
push
push
aad
or
jns
daa
sub
outsl
iret
fdivs
shr
add
in
into
lret
pushf
cmp
xchg
bound
mov
pop
in
stc
aad
pop
xchg
ja
or
jae
into
test
mov
mov
jmp
pop
mov
bound
aad
enter
jno
lock
testl
inc
or
xchg
mov
nop
repz
mov
std
mov
lcall
nop
push
ret
clc
push
sub
shlb
rclb
les
mov
lods
in
sub
push
outsl
push
into
sub
lds
fildl
rclb
popf
mov
sub
dec
data16
jb
mov
fmull
fists
sub
jmp
je
sbb
arpl
mov
neg
adc
sti
cwtl
cltd
ret
dec
out
mov
mov
imul
mov
jns
mov
and
fldt
out
stc
pop
ss
ret
sbb
cmp
cmc
repnz
popa
imull
jae
icebp
xchg
sbb
fsubrs
rcll
mov
jne
cs
lcall
mov
adcb
sub
push
in
ret
cs
mov
cmp
test
movsb
cwtl
xchg
mov
xchg
fildll
add
daa
out
xchg
pop
push
sar
mov
xchg
or
pop
cs
data16
out
lock
mov
dec
int
loope
xchg
xor
int
mov
out
adc
stos
idivl
cmp
mov
in
xor
and
add
mov
sub
ss
testb
mov
pop
inc
pop
fcmovnu
adc
jne
xchg
mov
shl
pop
ret
push
fidivrl
iret
mov
in
xchg
and
mov
sub
cmp
mov
mov
inc
sub
xchg
jecxz
loop
or
jae
and
lock
sbbb
xlat
addr16
stc
gs
fnstsw
popf
aaa
mov
fwait
aam
sbb
aam
hlt
push
add
xchg
mov
mov
add
or
xor
or
mov
jge
mov
fdiv
jle
adc
inc
and
aad
push
push
mov
subb
jb
jge
cmp
add
xor
es
jecxz
mov
adc
push
ljmp
lea
dec
mov
sbb
sbb
dec
mov
add
imulb
or
cltd
addl
cltd
shl
mov
mov
fwait
pop
dec
jns
or
cmp
mov
and
notb
mov
cmpsl
int
das
add
sbb
sbb
cwtl
inc
sbb
lods
xchg
mov
lret
cmpl
rol
test
js
dec
sbbb
dec
inc
mov
orl
nop
adc
and
xor
data16
and
dec
lret
outsb
clc
mov
int3
sti
in
inc
popa
ret
cwtl
dec
sar
hlt
jg
xchg
xchg
xchg
pop
insl
sub
sbb
pop
mov
pushf
ret
das
mov
jnp
xchg
or
sbb
jnp
or
mov
ret
jge
xor
xchg
lret
xchg
repnz
sub
leave
mov
ss
jns
scas
mov
inc
leave
popw
lods
adc
ljmp
fdivp
adcl
aas
je
mov
jo
enter
add
fsub
push
pop
push
cld
jp
lods
sbb
mov
mov
lret
adc
inc
popf
std
cmp
daa
add
addr16
jmp
pop
int
mov
js
inc
xchg
outsl
or
mov
imul
mov
mov
aaa
pop
les
xchg
and
adc
negl
aaa
or
cltd
ss
sub
repnz
xor
jno
or
xor
loop
rcrb
jg
cmpsb
push
pushf
ret
xchg
outsb
adc
adc
or
jbe
xchg
xchg
mov
fcmovnb
pop
fisubs
aam
sbb
call
mov
push
mov
push
sub
retw
jl
cmp
adc
xlat
add
adc
ja
cwtl
xchg
lods
push
lahf
cli
and
loop
jl
cmp
inc
movsl
in
movswl
adc
or
pop
rep
je
stc
jne
mov
hlt
xor
cld
mov
cmp
jp
fidivrs
pop
mov
mov
test
out
sahf
inc
addr16
xchg
inc
jno
mov
es
adc
push
jo
mov
push
test
jno
mov
sbb
out
ljmp
xchg
incl
iret
xchg
xchg
int
adc
in
std
mov
outsl
in
incl
stos
rsm
jmp
push
pop
bound
or
dec
or
mov
fnsave
fsubr
fsubs
jb
mov
es
rcrb
hlt
push
movsb
mov
push
mov
jge
mov
push
jecxz
rcll
mov
cld
test
jp
int3
loope
mov
inc
dec
xchg
inc
mov
mov
xchg
lcall
daa
xchg
ret
sar
mov
enter
jg
adc
arpl
out
int
popa
adc
mov
jnp
dec
imul
add
cmc
inc
inc
mov
addr16
jmp
dec
push
call
out
aam
push
test
movsl
aaa
or
das
or
jb
repnz
xchg
int3
cmp
nop
or
movsb
cmp
push
movsl
test
mov
outsl
sub
movsl
add
or
ss
enter
aas
and
xor
jno
push
outsb
sahf
into
fsubrs
jecxz
je
sti
enter
xor
outsl
pop
cmpsl
jl
scas
or
pop
negl
or
shlb
call
mov
pop
sub
cmp
adc
push
pop
pusha
cmp
lds
xchg
gs
xchg
push
lcall
dec
mov
xor
cmpsl
dec
sbb
pushf
mov
lret
or
fists
lock
dec
mov
gs
arpl
outsb
clc
adc
cmp
imul
xchg
jge
mov
clc
outsb
outsb
std
adc
dec
cmpsb
cmp
pop
pop
xchg
push
pusha
das
xor
popf
sub
mov
inc
jle
stos
pop
xor
adc
jns
jecxz
out
sub
pop
mov
pop
imul
gs
mov
xor
xchg
sbb
imul
js
jmp
movsb
xor
arpl
and
fdivrs
jbe
pushf
push
or
sbb
gs
mov
xchg
rcr
xor
bnd
pop
lea
mov
push
jp
imul
and
inc
mov
jl
pop
pop
inc
aam
es
rorb
and
and
frstor
es
inc
sub
gs
mov
mov
mov
daa
rorb
test
jb
mov
cmp
ss
mov
or
dec
mov
cmp
jae
mov
ffreep
aas
dec
shrl
callw
outsl
mov
push
sarl
js
cli
push
push
adc
ljmp
push
stos
and
cmp
iret
add
sbb
hlt
jg
stos
cmp
pop
in
push
std
jo
dec
cmp
arpl
or
lea
mov
jg
jbe
xchg
clc
icebp
repz
push
sbb
stc
mov
out
fucomip
push
pop
mov
cmpsb
mov
push
push
jns
mov
cmc
push
jl
and
test
test
sub
mov
pop
negl
add
gs
clc
jp
add
hlt
jne
pop
jp
loop
inc
mov
adc
mov
inc
test
adc
mov
add
call
push
lods
or
xlat
and
in
lds
and
or
pop
pusha
mov
and
loope
or
loope
xrelease
stos
jge
xchg
xor
or
xor
mov
jns
xchg
push
dec
je
sub
nop
dec
out
rcll
and
lret
sti
js
mov
outsl
sub
add
and
adc
ret
ret
aam
mov
stc
pop
mov
cmp
xchg
aas
dec
or
leave
lret
and
lods
inc
outsb
pop
out
mov
or
xchg
rcll
incl
or
decb
push
pop
cmp
aaa
aam
xchg
int
mov
xor
scas
ljmp
jl
inc
adc
aas
outsb
sub
push
jmp
xor
jbe
xchg
or
in
movsb
jmp
pop
push
mov
dec
xor
add
and
inc
xor
mov
mov
cmpsl
pop
mov
gs
push
mov
xchg
outsb
mov
rcll
movsl
loop
pop
and
sbb
cwtl
mov
mov
pop
mov
dec
cmp
popf
dec
data16
lea
fnstsw
push
test
aam
mov
mov
adc
or
mov
shrl
mov
jbe
push
push
enter
inc
dec
push
adcl
out
cmpsb
push
lods
mov
testb
icebp
lock
loopne
cmovp
xor
mov
pop
sub
push
dec
aad
lods
push
movntq
out
scas
pop
mov
mov
test
mov
push
lcall
addl
sub
cmp
lods
and
inc
ljmp
cmc
push
add
mov
mov
push
fiaddl
adc
cld
sbb
dec
std
fstps
lcall
cltd
fcmovnu
push
enter
mov
jne
dec
and
mov
std
fs
or
sbb
jbe
mov
xchg
push
adc
mov
mov
in
loope
mov
mov
bound
mov
cmp
dec
lds
daa
mov
or
aas
loop
dec
push
cs
sub
sbb
mov
in
ja
testb
bound
inc
addb
dec
fisttpl
ret
aam
adc
cmpsl
mov
lods
add
pop
push
in
sbb
mov
in
sbb
mov
pop
int3
out
sbb
sar
sti
jno
adc
out
jo
xor
jmp
out
jle
insl
lcall
xchg
xor
mov
ja
pop
inc
enter
pop
mov
mov
es
push
das
adc
jb
fildll
aad
iret
cwtl
jno
mov
faddl
push
pusha
icebp
pusha
jecxz
sub
mov
pop
lret
xchg
push
mov
mov
cmpsl
dec
jl
xor
shll
jae
add
cmp
push
adc
jo
mov
imul
lock
cmp
in
pusha
ds
xor
cli
adc
ss
jecxz
inc
fdivrs
orl
mov
out
lds
sbb
mov
popa
add
dec
mov
pop
xchg
push
ret
jns
das
mov
fnstcw
cmc
popf
pop
cld
nop
mov
pop
mov
push
into
loope
popf
scas
rolb
push
cld
lcall
rcrb
sahf
jmp
cmpsl
jl
subb
enter
cwtl
test
adc
or
call
add
cltd
ds
div
mov
das
aam
mov
sub
iret
mov
jp
jle
xchg
arpl
or
or
jecxz
ds
mov
stos
push
sbb
out
mov
or
addl
fistps
test
dec
cmp
mov
push
adc
aas
mov
outsb
sub
sub
add
sub
mov
lods
xchg
fisttpl
pop
inc
shrb
loope
cld
pop
ret
movsb
cmp
inc
jg
xchg
cwtl
push
adc
push
or
push
sarb
loopne
push
dec
ret
es
rcll
lods
out
cltd
daa
cwtl
loop
xchg
xor
jle
arpl
pushf
pop
rcrl
shrb
aas
icebp
mov
xor
jge
ficoms
out
xchg
cli
mov
and
das
mov
mov
sarl
packsswb
scas
repnz
inc
stc
push
add
pop
or
js
or
jecxz
out
jecxz
xor
fadd
lret
sarb
js
pop
push
jmp
mov
sahf
and
ja
add
jne
nop
sbb
xchg
out
mov
out
cmpsl
movsl
cmp
mov
mov
ja
xlat
push
dec
movsl
punpckhbw
lock
pop
stc
mov
aas
ficoms
cli
pushl
push
sti
adc
mov
subb
clc
orl
call
stc
push
negb
dec
mov
sahf
cmc
xor
adc
mov
popa
jecxz
mov
lds
mov
push
jno
pop
or
imul
add
aam
lods
rorl
sub
rcrl
xchg
in
xlat
sub
mov
sub
in
xchg
xorb
cmp
insl
fimull
adc
mov
push
fiaddl
sub
clc
xor
jecxz
roll
xor
ret
cmp
or
or
ret
int3
lret
lret
pusha
repnz
dec
adc
xor
inc
sub
jg
adc
sbb
cltd
hlt
mov
pop
test
or
push
popf
scas
mov
push
mov
mov
inc
out
mov
xchg
push
inc
outsb
dec
mov
sub
and
push
cmp
mov
or
dec
or
int3
inc
and
es
mov
dec
out
out
adc
push
add
pop
bound
dec
or
daa
jne
push
and
xchg
imul
es
xor
js
push
mov
or
xchg
aam
push
sbb
in
cwtl
das
subl
sub
lahf
dec
mov
rorl
lds
push
pop
add
mov
adc
js
pop
clc
or
mov
ret
sub
pop
test
adc
rolb
out
cmc
and
icebp
dec
mov
push
int3
jo
insb
mov
jmp
nop
adc
mov
and
fnstcw
mov
js
or
pop
dec
jp
xchg
mov
outsb
jbe
ss
stos
push
inc
add
mov
movsl
lea
int3
pop
addr16
push
or
aaa
ficomps
rcll
addr16
push
pusha
ret
cld
ss
jbe
mov
mov
sbbl
lret
movsl
mov
jl
cmp
sub
repnz
cmc
pusha
imul
inc
lret
pop
cld
movsl
nop
and
iret
fstp
jne
std
shll
bnd
inc
stc
lock
shrb
test
outsb
test
rcll
cmc
cltd
sbb
add
call
sbb
inc
nop
jbe
mov
aas
aad
add
push
movsb
sbb
aam
xor
dec
pop
xchg
xor
adc
out
scas
lret
mov
mov
xchg
loop
push
dec
push
repnz
stos
mov
cwtl
lods
pop
and
fwait
xchg
js
push
and
cmp
dec
cmpsb
div
gs
dec
push
bound
mov
pop
insb
rorb
sub
lcall
mov
pop
pop
dec
iret
xorl
inc
lret
pop
outsl
sahf
push
and
stos
hlt
mov
sub
inc
inc
fldenv
cwtl
pop
adc
mov
or
mov
mov
pop
fbld
lods
mov
jne
fwait
dec
lods
push
rolb
lret
subb
pop
sar
sti
mov
imul
fs
cmc
sahf
push
rorb
adc
cmc
ja
push
rclb
xor
outsb
sahf
mov
pop
mov
shrb
divb
lods
divb
ret
sar
inc
mov
cmp
xlat
jns
insb
push
leave
emms
lock
lret
fdivrl
mov
or
jl
mov
fiaddl
xchg
test
dec
xchg
roll
jecxz
inc
insb
sbb
mov
add
jmp
or
push
lret
bound
or
pop
cld
xchg
mov
push
cmp
jo
pop
fisubs
hlt
roll
xor
stos
push
add
imul
pop
add
mov
stc
dec
xchg
and
cmp
xor
cmp
fidivrs
cltd
or
adc
inc
cmp
xchg
jmp
fnstcw
jae
adc
arpl
aas
sbb
mov
cmpl
or
imul
out
sub
mov
ljmp
push
sub
pop
xchg
jge
mov
loop
jb
push
add
dec
mov
push
shlb
inc
sub
jl
mov
xchg
cmpsl
xchg
outsl
mov
or
mov
ret
fwait
mov
mov
jmp
fistpll
dec
jb
outsl
xor
test
xchg
or
lock
xchg
loopne
mov
or
pop
dec
in
sbb
inc
call
pop
mov
popf
push
in
dec
cmpsb
jno
xor
pushf
xchg
add
add
cmp
ror
mov
and
xchg
dec
sbb
add
mov
repz
out
mov
imul
xchg
popf
test
inc
push
fwait
call
lret
cwtl
scas
jno
loopne
aas
loope
xchg
adc
mov
orb
xchg
fldl2t
enter
je
pop
jge
sub
movsl
and
test
pusha
push
leave
movsb
mov
sub
rorb
repz
imul
ljmp
jg
sahf
mov
mov
loopne
daa
in
out
mov
dec
nop
dec
or
adc
or
mov
filds
sbb
cmp
shl
outsb
add
sbb
mov
cmp
xchg
gs
lcall
jp
push
shrb
notb
out
inc
lcall
mov
push
cmp
movsl
sti
popf
es
fldl
sbb
sbb
cmpsb
jb
add
std
sahf
into
fbstp
jg
cwtl
push
arpl
call
xchg
xchg
inc
adc
mov
repz
jmp
into
movntq
out
sub
xchg
xlat
sbb
in
in
cmpsb
push
or
int
mov
rorl
int
jne
add
addr16
mov
jnp
lret
sbb
data16
lods
xlat
mov
dec
xor
inc
dec
xor
aad
add
ret
mov
jmp
stos
jmp
sbb
jno
neg
sbb
sub
mov
fs
int
jne
add
jmp
jmp
adc
dec
roll
mov
xor
dec
das
push
orl
aad
add
popf
pop
or
mov
imul
sbbl
adc
add
adc
int3
jno
lcall
inc
pushf
mov
dec
notl
fs
fidivs
xor
and
inc
insl
mov
loopne
push
xchg
lods
cmp
mov
inc
mov
and
and
mov
movsb
xchg
mov
movsb
inc
sbb
push
nop
jbe
rorl
push
and
sbb
add
outsb
mov
inc
mov
cmc
xor
sar
scas
mov
imul
mov
rclb
inc
mov
dec
icebp
popf
pop
bound
inc
outsl
scas
jbe
sub
push
scas
cmp
call
idivl
dec
adc
je
push
in
faddl
int3
orb
dec
loop
push
mov
mov
mov
xor
add
adc
xor
adc
inc
cltd
inc
mov
adc
aas
incl
xor
jbe
insl
roll
sub
jge
int
mov
lcall
mov
ret
push
mov
test
xlat
jns
dec
push
xchg
xor
inc
inc
sbb
pop
add
movsl
pop
sub
popf
pushf
shl
js
add
push
sbb
mov
iret
ljmp
cmp
movsb
or
or
js
psubd
das
mov
mov
sub
pop
mov
fidivl
jb
out
sub
xchg
dec
or
pop
mov
push
loopne
arpl
sti
in
jge
push
mov
xchg
mov
ss
and
es
out
stos
cmc
test
adc
mov
push
xchg
imul
test
shll
rcl
cli
lds
jb
dec
xchg
test
fbld
push
or
daa
lods
loopne
jo
xchg
rcrl
push
mov
fildl
push
xor
movsl
sub
push
cld
gs
xchg
lock
aad
scas
or
push
cmpsb
xchg
pop
lods
jge
lods
push
mov
aad
fucomip
mov
outsl
punpckhdq
mov
int3
jo
lret
pop
pop
sbb
je
sahf
sub
test
cmp
dec
inc
inc
mov
and
aam
sbb
lea
inc
lods
icebp
int
rolb
int
stos
rcll
add
test
ret
cmp
push
imul
or
pop
mov
cmpsb
push
gs
iret
cltd
adc
enter
mov
jl
adc
popa
aad
xchg
lods
pop
std
adc
test
enter
les
mov
scas
lret
fwait
int
test
add
outsl
push
imul
stos
push
outsb
cmc
xor
es
sub
and
mov
loopne
lds
adc
in
add
mov
stc
leave
test
sahf
mov
sub
imul
test
cmp
add
jo
pop
sub
adc
je
mov
sub
jns
pusha
andb
ss
pop
mov
out
repnz
adc
dec
or
cmp
dec
movsl
fcoms
adc
out
xor
insl
ss
loope
mov
cltd
and
mov
dec
mov
lods
cmp
popf
xchg
out
adc
mov
or
sbb
lahf
push
icebp
dec
ret
out
jecxz
jmp
or
push
xchg
or
pop
push
ljmp
jb
or
inc
sub
test
jae
icebp
inc
mov
dec
or
pop
mov
sbb
xlat
movsl
rcll
int
mov
mov
pop
cltd
cmp
pop
inc
push
imul
inc
lock
bound
mov
es
push
add
push
mov
pop
mov
outsb
lods
xlat
mov
adc
pop
pusha
sub
xchg
pop
int3
dec
icebp
mov
jne
push
sub
inc
inc
nop
bound
fcmovnb
xchg
adc
sub
pop
push
sub
mov
xchg
scas
aad
aas
out
xchg
movsb
out
pop
mov
dec
mov
mov
js
mov
repnz
gs
lods
jb
sub
rorl
sbb
cltd
cmp
sahf
nop
mov
adcl
stos
popa
sbbb
cli
xchg
or
fisubs
pop
int
fnstenv
fsubrl
into
or
xchg
into
adc
clc
hlt
push
out
jne
data16
mov
xchg
and
mov
mov
insl
call
roll
inc
repz
imul
push
arpl
xchg
out
cli
sbb
sbb
pop
enter
jae
add
sbb
jl
xor
cmpsl
mulb
ja
mov
mov
ja
and
xor
loope
test
in
mov
mov
stos
insb
leave
popa
xchg
mov
cmp
mov
cli
jecxz
jnp
jecxz
mov
xor
dec
adc
fwait
lock
mov
dec
sub
js
adc
aas
ja
sub
pop
stos
cltd
ret
inc
mov
or
mov
fistpll
inc
jp
test
cmpsl
lret
movswl
cmc
lret
test
pushf
dec
data16
icebp
repz
or
fstp
xor
push
jmp
ss
add
adcl
inc
cmp
lcall
jb
adc
dec
dec
mov
push
mov
icebp
test
or
aas
mov
stos
mov
cld
add
cld
and
sbb
fstps
popa
push
je
fcmovb
push
arpl
push
pushf
xor
dec
scas
xchg
movsl
mov
jl
int
push
test
stc
xor
clc
sahf
mov
cmpsb
mov
dec
xor
xchg
jecxz
negl
sbb
jnp
es
shrb
out
inc
pusha
aam
mov
iret
xor
jo
mov
xchg
pusha
cmp
push
mov
testb
sub
sub
push
and
inc
cs
ja
jmp
pop
push
nop
add
mov
in
sub
bound
add
cmpsb
insl
rcr
int3
loope
je
push
outsb
sub
mov
and
in
jne
and
mov
div
in
daa
sub
cli
cmp
mov
xor
sbb
lds
or
mov
cmp
das
dec
scas
lahf
call
stos
fdivl
dec
dec
push
push
and
mov
push
rorl
push
sbb
sub
or
add
add
sub
outsb
mov
add
into
fsubr
xchg
bound
aad
xchg
jb
and
mov
fcmovnb
outsb
adc
iret
fiadds
outsb
pop
inc
pop
pop
xchg
push
mov
mov
neg
jge
mov
rcrl
lods
lods
push
mov
cmpl
cli
mov
call
inc
push
xlat
cmp
in
orb
int3
jnp
enter
pop
xor
mov
test
ds
rcr
imul
test
ret
xor
aam
int
xorl
xlat
jnp
jno
pushf
mov
push
push
cmp
movsl
push
dec
xchg
and
fisttpll
cmp
faddl
fidivs
xchg
cli
mov
fisubs
sbb
pusha
cmpsb
lods
scas
jl
clc
sbb
adc
push
sbb
les
testl
pop
add
popf
inc
mov
inc
pop
adc
mov
mov
inc
adc
lcall
mov
push
iret
push
or
push
aaa
dec
and
enter
xchg
lock
xor
cld
push
add
in
aas
repnz
jg
inc
andb
enter
dec
jae
pop
dec
xor
xor
xor
jae
sbb
scas
pop
dec
xor
jecxz
pop
stc
dec
xchg
xor
mov
mov
into
xchg
ret
push
inc
cmp
test
jmp
sahf
xor
fwait
and
push
movsb
sub
xchg
out
aas
jne
aad
pop
jb
lods
add
cmp
dec
mov
arpl
int3
lcall
cwtl
fadd
dec
lods
xchg
mov
les
lcall
sahf
sub
dec
lahf
add
leave
daa
xchg
push
xchg
sub
sub
pop
repnz
mov
mov
and
mov
add
gs
push
and
imul
daa
aaa
insl
mov
fbstp
call
xor
pusha
xchg
mov
movb
aaa
add
mov
cld
fimuls
stc
cmp
aas
or
insb
push
or
stc
jne
insb
push
ja
mov
mov
pop
push
adc
scas
or
ret
test
icebp
pop
ja
xor
int
and
inc
scas
lods
lds
nop
sahf
and
stos
lret
bound
xor
out
xchg
in
call
or
push
loop
cmc
fs
les
push
push
lds
mov
pop
or
inc
fisttpl
jo
mov
ljmp
lahf
mov
mov
or
cmp
das
fs
dec
pop
data16
adc
mov
je
aad
pop
aam
mov
pushl
adc
sub
call
push
outsb
stos
dec
imul
mov
cmp
add
mov
fdivl
mov
fldenv
jne
popf
mov
lret
mov
aaa
sub
jecxz
jae
dec
pop
je
or
jne
inc
mov
stos
sub
out
xchg
or
fisttpll
sbb
or
into
push
push
xchg
mov
pop
mov
leave
jmp
ficoms
push
mov
push
and
push
sahf
xchg
dec
pop
sbb
sbb
mov
mov
mov
or
ljmp
fistpl
cmp
ret
popa
rcrl
scas
jae
pop
outsl
and
test
xchg
lahf
repz
pop
loopne
cld
xchg
pop
out
cmp
jae
push
mov
je
sbb
cmpsb
cltd
leave
enter
or
jnp
mov
loope
sub
cs
or
int
pop
hlt
test
insl
stc
xchg
bound
in
stos
adc
stos
mov
inc
xor
push
outsl
or
and
push
push
iret
inc
das
in
out
test
xchg
xchg
push
lea
pop
cld
ret
mov
cwtl
mov
adc
pop
mov
adc
popa
pop
std
cmp
ljmp
pop
fcoms
sub
mov
lods
icebp
pop
dec
adc
adc
ror
mov
add
js
sti
roll
enter
loope
fdiv
inc
arpl
dec
out
fsubrp
pop
xor
stos
push
loopne
out
test
cld
lcall
xchg
inc
push
sub
imul
test
rclb
adc
ret
fisttpl
or
push
outsl
dec
sub
adcb
push
pop
xchg
stos
in
or
in
mov
mov
rol
hlt
fistps
mov
adc
xor
das
rcrb
push
mov
repz
jae
xor
push
aaa
push
imul
push
jge
data16
dec
jmp
out
mov
xchg
pop
xchg
sbb
rep
push
test
push
and
pusha
jmp
popa
sbb
js
inc
aas
pusha
out
pop
cmp
inc
pop
pop
aaa
and
int
pop
ds
inc
movsb
and
fidivs
vpshaq
sub
fldl
clc
addr16
jg
inc
pop
xchg
sbb
dec
sbb
jmp
jbe
cld
sub
test
xchg
mov
test
dec
sub
int
pop
call
in
outsl
jo
mov
scas
cs
add
jp
jne
insl
pusha
xchg
mov
xor
dec
pop
adc
pop
xor
mov
fcomi
shl
xor
pop
push
lret
daa
xor
callw
and
addr16
adc
decl
movsb
lock
cwtl
in
sbb
pusha
mov
cmp
dec
mov
mov
daa
lcall
mov
sub
cmp
push
push
push
test
cmp
pop
enter
out
lods
imul
arpl
pusha
fildl
mov
dec
cmp
cld
xlat
dec
bound
aam
popf
insb
mov
xchg
imul
and
sbb
test
cwtl
mov
imul
and
jbe
cltd
lahf
mov
das
fstpl
pushf
repz
pop
ss
pop
pop
xor
add
int
xchg
mov
cld
aas
jnp
mov
fistl
xor
pop
roll
enter
cmpsl
jp
mov
int3
mov
pop
jne
push
es
sbb
nop
jmp
cmp
jl
std
push
pop
insb
xchg
and
lods
shlb
jecxz
fstpt
jg
cld
lods
shll
inc
out
cld
xchg
jne
mov
loopne
mov
in
fmuls
fcoms
ja
jge
mov
aas
cmp
cmc
js
mov
jl
xor
inc
hlt
repz
repz
mov
xorb
loop
lea
push
hlt
push
repz
sbb
fists
lods
out
sbb
adc
sahf
pushf
dec
add
jl
or
pop
test
inc
fsubr
mov
ret
loope
push
les
xor
fimuls
xor
cltd
fxch
push
add
pusha
or
jno
cmpsb
dec
test
or
mov
xor
dec
lret
hlt
lahf
fucomi
outsb
xorl
mov
and
pop
inc
in
and
sarb
mov
adc
cmp
ljmp
mov
sbb
rorl
js
clc
rorl
push
dec
xchg
movsl
xor
gs
dec
sub
mov
andb
scas
cmc
sub
sub
rcrb
lret
jmp
sub
dec
push
xor
call
push
int
test
add
lds
pop
xchg
enter
inc
and
add
dec
in
or
pop
mov
gs
sbb
in
cs
xorb
call
adc
ret
lods
adc
fsubrl
sbb
mov
cmpsb
add
shlb
mov
cmp
dec
outsb
aas
mov
aas
aam
mov
cmp
ja
push
out
and
mov
pop
sub
stc
push
pushf
and
jecxz
mov
mov
inc
push
arpl
fcmovnu
movsb
jns
pop
and
dec
mov
pop
fs
xor
stos
mov
cli
xchg
pop
lret
test
cmpsb
cmp
in
lret
in
lahf
leave
pop
sahf
sub
jns
out
ret
rorl
cs
adc
jp
mov
push
imul
or
mov
imul
pop
mov
cmp
pop
sub
add
pop
mov
pop
in
inc
or
and
mov
and
popa
mov
imul
push
icebp
enter
fcmovnbe
jb
push
ljmp
jns
push
adc
scas
out
arpl
push
pop
push
sbbb
sbb
stc
ret
popa
inc
mov
shlb
leave
push
xor
xchg
ret
jecxz
sub
mov
movsb
pop
xlat
js
mov
pushf
jae
mov
add
xor
push
rcll
into
imul
insl
add
xchg
push
or
jnp
sahf
fnstsw
mul
cmp
ljmp
or
test
mov
cltd
fnclex
sbb
loop
and
push
sbb
pop
pop
out
cmp
push
xchg
enter
sub
les
xor
xchg
in
std
push
jecxz
rolb
sbb
sbb
pop
and
push
shr
mov
outsb
cmp
loop
push
inc
gs
and
adc
mov
shlb
icebp
pop
xchg
test
mov
lcall
lret
aaa
mov
sub
movsl
cmc
test
test
loop
cli
int3
cmpl
adc
add
fs
cmp
rorb
pop
xor
faddl
test
test
mov
dec
lods
sub
and
fstl
cmp
push
mov
or
or
sub
stc
lds
mov
mov
addr16
xchg
lods
xor
stc
and
sbb
dec
ret
popf
mov
adc
mov
test
xchg
push
clc
inc
adcl
pop
fisttpl
dec
out
loope
dec
and
gs
pop
add
push
out
jno
add
cmpsb
xor
cmp
mov
repnz
subb
les
mov
dec
fcmovbe
into
or
lret
push
sub
jne
sbb
pop
aaa
jb
push
fnstenv
mov
adc
pop
test
sbb
testb
lahf
enter
lret
loopne
rcrl
sub
frstpm(287
mov
rol
clc
add
jno
imul
push
and
cli
jne
scas
add
sub
lods
in
fdivs
lods
adc
or
out
ss
cmp
ss
or
mov
call
mov
adc
in
inc
add
and
push
inc
and
cld
cmp
clc
pop
cltd
mov
push
mov
call
lret
jns
ret
mov
divb
aam
iret
jl
frstor
cmp
test
xchg
addr16
dec
mov
pop
loope
movsb
jg
jecxz
jo
xchg
push
dec
cs
lret
lret
out
ja
pusha
mov
mov
jg
aad
cwtl
mov
inc
je
push
add
cmc
mov
xchg
push
adc
repnz
cli
imul
pop
mov
movsb
cmp
call
and
movsl
push
repz
mov
mov
stos
add
sub
lods
mov
push
and
incl
stos
bound
fs
jns
mov
cli
xlat
mov
cmp
fisubl
stos
push
sub
pop
faddl
out
push
ret
clc
cmp
scas
push
insb
xchg
std
dec
pop
jmp
mov
lahf
or
pop
cmc
pop
addr16
sbb
aam
test
or
xchg
or
xor
ret
and
outsb
mov
dec
adc
inc
xlat
insb
ret
arpl
mov
divb
pop
in
adc
cli
loope
sarl
mov
pop
sbb
out
adc
adc
cmpsl
mov
hlt
push
add
test
jg
push
mov
xchg
sbb
sahf
das
push
push
shlb
bound
int3
inc
add
mov
sub
inc
add
ret
push
arpl
jb
das
sbb
enter
out
ds
dec
jae
aaa
loopne
mov
call
imul
ret
push
enter
inc
dec
gs
cmp
addl
jecxz
lret
and
aad
jge
mov
lds
or
inc
lods
rclb
and
sub
shll
test
mov
mov
inc
stos
addr16
dec
pop
out
mov
add
ret
mov
and
xor
push
adc
dec
mov
inc
incl
lcall
out
leave
cmp
out
xlat
xor
hlt
outsl
push
xchg
cld
das
fadd
imul
leave
fldcw
inc
dec
int
mov
cmp
sub
aam
fmul
jae
orb
enter
jae
jmp
xchg
mov
add
popa
stc
jnp
jge
sub
dec
repz
mov
cmpsl
xor
dec
out
xor
pop
fwait
cltd
or
jmp
inc
cmc
sub
pop
pop
jo
in
seta
incb
iret
and
jl
dec
xlat
cmp
mov
xchg
jmp
rdpmc
mov
push
loopne
mov
ret
aad
push
dec
sbb
popf
fucomi
jns
pop
dec
int3
push
mov
out
ss
mov
nop
cltd
int3
lahf
ja
mov
and
or
hlt
inc
cmp
movl
test
pop
xor
mov
add
and
mov
jbe
in
pop
mov
inc
or
push
xor
repz
xor
movsl
pop
inc
mov
fsubr
rol
and
hlt
in
jecxz
icebp
and
and
arpl
mov
mov
jg
jg
add
mov
cmp
lods
jnp
enter
and
jecxz
shrl
std
adc
mov
xor
sbb
fcomps
scas
aad
xor
xchg
ljmp
inc
cmp
pushf
mov
inc
lock
jecxz
imul
les
inc
sbb
lret
call
sub
repnz
xchg
push
in
in
in
les
inc
mov
or
sti
jno
cmp
jp
lret
stos
inc
and
ja
dec
inc
inc
jge
aaa
pop
pushf
mov
push
cwtl
push
xor
imul
mov
out
ljmp
test
ret
fistl
and
adc
jle
xchg
and
xor
sti
mov
sbb
jp
cmc
pop
dec
xlat
adc
nop
sbb
mulb
daa
and
xchg
in
cmp
jecxz
fldenv
pop
cmpsb
xor
add
enter
mov
cmc
and
mov
pop
cmp
and
in
fdivp
jecxz
pop
aam
scas
adc
xchg
fistl
orl
andb
addb
jg
sbb
or
jecxz
push
ds
sub
stos
push
ss
cmp
std
lods
cli
rolb
scas
push
jge
mov
and
fimuls
push
inc
cli
and
enter
mov
orb
loopne
ret
adc
fadd
add
adc
shlb
stos
rol
movl
sar
dec
jae
mov
stos
ljmp
jb
nop
pop
sub
dec
lahf
and
or
cmp
loopne
xor
cmp
into
adc
call
and
push
or
mov
pushf
pop
in
inc
fldl
leave
add
in
jne
cwtl
pop
clc
in
sub
and
cmpsl
sbb
out
xchg
in
shlb
dec
lods
movsb
pop
jb
in
jb
lea
ret
aas
dec
rcrl
ret
inc
sbb
lcall
push
adc
push
dec
adc
push
sub
out
mov
push
mov
adc
inc
jp
movsb
lods
inc
and
xor
sahf
mov
pusha
push
mov
out
test
loope
sbb
dec
scas
cmc
mov
xlat
call
inc
cmp
and
cmpsl
adc
call
insb
pop
add
jecxz
flds
ret
bound
ja
mov
in
aas
pop
jne
clc
jp
std
cmp
mov
ja
cwtl
mov
mov
cld
test
in
adc
jge
or
push
inc
inc
push
fsubr
pop
or
movsl
mull
push
jno
xor
adc
aam
push
test
stc
xor
lret
subl
or
cmp
mov
add
mov
cmp
dec
clc
dec
push
das
cwtl
dec
addr16
int
sbb
out
mov
and
xchg
flds
add
sahf
mov
sub
push
mov
and
rolb
xchg
mov
and
daa
cli
mov
sub
mov
sbb
add
out
dec
pusha
adc
out
mov
dec
les
dec
dec
rol
mov
cmp
mov
out
and
insb
rorl
dec
scas
incl
movsb
mov
and
push
mov
sbb
stos
push
sub
cwtl
and
aam
mov
jp
add
pushf
jne
add
mov
pop
mov
push
or
jl
and
lods
pop
imul
fsts
fmuls
xlat
sar
lds
inc
fs
pusha
mov
loop
sahf
lock
arpl
mov
rcll
xor
sbb
lret
and
nop
inc
shlb
adc
mov
and
push
notl
pop
xor
mov
mov
into
sub
mov
cmp
push
mov
or
mov
data16
repz
fld
cmpsb
push
jns
jmp
orl
xchg
cmc
fwait
push
test
xchg
cmp
push
popf
jb
addr16
dec
cmpl
inc
push
push
fld
addb
lret
sbb
push
jbe
ret
fildll
les
add
cmp
test
jl
mov
or
push
jno
in
dec
xor
in
cmc
addl
cmp
icebp
jno
jnp
js
lahf
mov
outsl
popf
pop
cmp
adc
push
jp
mov
ja
xchg
jae
push
aaa
push
jnp
adc
jo
gs
js
sti
fsubrs
iret
jecxz
or
fcompl
fisubrs
jmp
mov
data16
sub
xlat
pop
addb
pop
dec
fsubrs
rcrb
shlb
insl
xor
into
pusha
push
xchg
lods
cmp
pop
cmp
es
mov
loop
inc
outsl
sbb
inc
xchg
ss
xchg
push
movsl
inc
sub
mov
fwait
dec
adc
in
xor
imul
add
shlb
dec
add
pop
sub
adc
pop
test
and
mov
je
popf
fnsave
jbe
std
jg
rcl
lods
inc
out
idivl
faddl
je
adc
jle
dec
xor
adc
mov
mov
xchg
adc
xlat
ret
push
push
or
repz
clc
ret
pop
inc
adc
mov
sub
pop
adc
pop
cmp
fwait
aaa
leave
lret
inc
xlat
aad
movsl
ljmp
mov
push
lcall
imul
out
aam
in
xor
fldt
negl
out
clc
ljmp
jbe
rclb
sub
add
gs
pop
pop
xchg
imul
dec
dec
xchg
aad
cmpsl
lock
push
cltd
fbld
adc
mov
mov
push
mov
mov
xor
sbb
pushf
hlt
and
inc
out
fidivrs
insl
mov
sub
in
dec
or
lods
shl
lds
stos
inc
insl
imul
pop
cmp
sahf
aam
nop
cmpsl
lret
pop
mov
clc
ds
into
cld
insl
jns
out
mov
pop
stc
ret
or
jmp
adc
mull
aam
es
xor
jns
fs
cmpsb
pop
out
mov
sub
mov
push
jo
jno
rcrb
xor
popf
xlat
dec
nop
push
push
and
dec
adc
add
mov
jl
inc
lea
fiadds
outsb
cmp
out
movsl
cmc
ss
jns
ror
out
mov
adc
mov
xchg
mov
jmp
sahf
xor
fsts
or
cmovo
aad
cs
insl
mov
adc
pop
jne
push
imul
jb
repnz
mov
test
push
out
inc
std
int3
cli
stc
js
xor
out
shrl
adc
scas
int
icebp
movsl
test
cmp
sub
push
or
adc
jae
jge
inc
insb
xchg
movl
xor
cmp
add
cmp
int3
jno
fcom
pop
into
test
cmp
adc
jne
mov
jae
inc
fs
jns
fs
into
int
cmp
repnz
fistpl
xchg
adc
jmp
xchg
in
je
sub
mov
pushf
out
mov
inc
movsl
jbe
in
mov
les
sbb
adc
scas
and
xor
insb
jge
cmp
out
sub
cmpsb
aam
dec
and
repnz
dec
mov
pop
dec
sbb
aas
pusha
cmp
ror
sbb
jno
loop
add
scas
das
mov
cmpsb
rcrl
xorb
and
cwtl
sub
pop
scas
push
xchg
cltd
sub
imul
xchg
dec
xor
dec
std
pop
cltd
ljmp
push
ljmp
inc
jno
push
pop
push
fnstsw
sbbb
mov
dec
adc
inc
cs
clc
jle
scas
pop
inc
push
sbb
aas
jge
push
hlt
fucomi
leave
ret
adc
aam
pop
add
loopne
jle
sbb
popf
jle
stos
mov
jne
int
pop
mov
cmovno
jae
cs
roll
sbb
jg
test
and
in
nop
dec
test
sub
lds
stos
outsl
daa
lods
stos
mov
sbb
push
pop
ret
cmc
dec
popf
add
mov
ja
daa
shlb
in
out
lahf
push
sti
jo
test
out
std
lret
or
cs
xorb
int
js
push
ret
xor
cltd
push
mov
in
push
pushf
mov
push
iret
push
and
jmp
mov
mov
dec
or
into
lea
xor
lahf
aaa
jae
daa
sbb
push
leave
inc
cmpsb
sbb
je
xchg
clc
aaa
sbb
or
sbb
fidivrs
cwtl
out
jle
cwtl
aaa
sbb
mov
add
outsl
movsl
sar
push
mov
enter
call
xor
and
js
inc
add
mov
push
loopne
xlat
pop
push
ret
mov
xchg
jmp
push
movsl
loop
subb
ss
fptan
inc
push
shl
repnz
mov
mov
inc
xor
mov
push
mov
outsl
cmp
adc
push
push
cmp
mov
mov
pop
cmp
xchg
ljmp
insb
cmp
test
test
out
push
jae
sahf
sti
add
in
iret
cmp
movsb
movsb
les
es
xchg
iret
cli
adcb
out
mov
mov
ljmp
daa
and
addr16
iret
mov
lods
call
inc
or
jns
ficomps
call
out
and
incb
add
dec
sbb
pusha
xor
push
shlb
mov
mov
inc
jae
enter
jnp
or
jle
fcomps
clc
test
js
loopne
pusha
sub
sbbb
dec
mov
ja
int
pop
adc
shrb
out
cmp
adc
xchg
push
inc
lea
jg
mov
mov
mov
sub
int
test
push
in
out
mov
xor
outsb
mov
push
sbb
mov
lret
mov
add
jp
xchg
es
mov
xor
call
pop
and
add
or
loopne
out
pop
out
rclb
dec
push
jb
push
movsb
stc
lcall
pop
inc
jo
dec
push
push
scas
cwtl
fisttps
adc
pusha
test
pop
and
fdivrl
adc
scas
cltd
jo
popa
out
lds
push
adc
cwtl
out
sbb
pop
ret
sub
xor
push
sub
push
jae
loop,pn
mov
push
gs
incl
cmpsl
rep
or
jmp
sbb
clc
mov
pusha
or
sub
xchg
loope
lds
xor
cmpsb
loop
push
or
sbb
fs
sbb
add
lock
cmpsb
mov
jmp
push
and
imul
bound
cmpsl
adc
ljmp
mov
aad
cmp
mov
mov
popf
cs
lahf
and
mov
mov
cwtl
imul
lea
mov
dec
inc
cmp
mov
dec
xchg
inc
into
sub
mov
jmp
imul
push
pop
and
inc
fimuls
push
jp
push
mov
and
xlat
cwtl
inc
inc
mov
cld
jo
mov
flds
push
lock
int3
outsb
push
in
cld
sbb
es
sbb
jne
sbbb
fstpl
xor
ljmp
into
in
insb
lret
mov
adc
xchg
out
sbbb
insl
push
pop
mov
jns
inc
xchg
or
xchg
jp
outsb
jo
sub
sbb
loope
push
in
movsl
or
dec
mov
lea
loop
fsubr
cwtl
mov
in
dec
cmp
jns
jno
rolb
lret
xor
and
dec
icebp
test
ds
and
iret
sahf
std
dec
sahf
clc
pop
std
nop
jg
pushl
dec
dec
mov
popl
out
mov
cwtl
shlb
sti
cwtl
adc
je
dec
sahf
add
adc
jmp
repnz
jmp
adcl
or
xchg
jnp
dec
nop
jmp
outsl
mov
mov
outsl
test
push
iret
sbb
cmp
cmp
insl
or
pop
fdiv
je
jge
test
xchg
int3
mov
mov
pop
test
addr16
lahf
push
push
push
dec
pop
lahf
add
hlt
mov
test
fmull
cli
mov
mov
pop
in
mov
or
jo
aam
sub
xchg
dec
ds
fs
pop
pop
adc
in
xor
addr16
and
or
or
mov
je
pop
mov
sub
clc
jp
cmp
or
movsl
test
packssdw
push
xor
sbb
mov
push
fwait
sub
loop
cwtl
cs
sbb
mov
xor
enter
lahf
test
data16
ljmp
ja
sti
enter
repnz
inc
inc
inc
mov
xchg
jae
mov
xchg
outsb
pop
add
stos
repnz
cmp
dec
and
dec
mov
or
out
pop
test
rol
adc
adc
loop
fstp
shll
mov
push
jp
push
stos
enter
imul
jl
lret
fimuls
lods
inc
sti
lods
inc
cmc
test
out
test
jbe
jb
ret
xchg
nop
fists
xchg
pop
and
out
mov
sub
imul
push
stc
js
test
pop
out
subb
and
dec
lret
xchg
jno
inc
pop
das
aad
sub
fcom
xchg
pop
xlat
iret
cmp
hlt
scas
mov
iret
jbe
pop
push
cld
sub
push
cmp
insb
rolb
cmp
sti
dec
mov
xchg
mov
cmp
ja
adc
arpl
lock
fdecstp
icebp
xchg
jmp
pop
lea
and
call
push
mov
in
push
fcom
xchg
outsb
sub
pop
imul
outsb
inc
cmp
cmpsb
sbb
cmpsl
mov
ds
pop
rclb
rol
lea
loope
adc
sarb
and
mov
xchg
repnz
sub
mov
in
sub
jns
cltd
xlat
stos
xchg
rorl
mov
jl
and
into
mov
iret
dec
repz
sbb
cmpsb
xor
jbe
shl
fwait
rcl
jns
cwtl
adc
rorl
mov
sub
iret
mov
les
sub
pusha
std
and
aas
leave
cmpsl
push
fmull
cwtl
sti
enter
pop
mov
cltd
pop
js
push
cmp
cmpsl
jge
les
mov
mov
cmp
mov
xor
aam
mov
cmp
dec
push
mov
push
pop
jb
xchg
jns
test
cli
dec
adc
xor
fidivrs
ss
inc
fisttps
int
push
xor
add
cmpsw
lods
cld
or
fildll
in
cwtl
ss
xchg
lret
dec
xchg
orl
xor
push
add
cmp
or
cs
jae
push
adc
adc
dec
jecxz
ret
sbb
ljmp
pop
mov
or
inc
movsl
jecxz
push
jbe
mov
xlat
mov
clc
addr16
jp
les
xchg
mov
inc
sbb
xor
fstpl
xchg
jbe
pop
sahf
sarb
fwait
jecxz
stos
xchg
fistl
sbb
pop
inc
cmpb
jb,pt
lahf
push
sub
out
movsl
es
imul
lds
mov
aam
lds
sbb
dec
pushf
bound
lea
cmc
mov
fs
outsb
dec
daa
out
inc
jl
sbb
pop
hlt
jno
mov
negb
mov
dec
or
xor
fcmovb
imul
lods
xchg
fwait
sti
int3
mov
sub
xchg
mov
pop
cmpsl
mov
cmpb
repz
adc
jns
fstpt
in
dec
mov
sbb
push
pop
mov
dec
jae
shlb
xchg
insb
ret
xlat
and
test
xchg
sahf
mov
imul
in
mov
mov
mov
dec
cwtl
ret
and
push
lahf
shl
test
mov
sbb
stc
inc
lcall
inc
push
in
lods
in
sarl
inc
adc
sub
imul
divb
adc
adc
stos
adc
gs
mov
push
sbb
or
enter
cmp
movsb
std
or
nop
sahf
or
xchg
jb
fidivs
pushf
xchg
out
jo
ds
sub
test
rcl
loop
mov
sti
pushf
pop
imul
out
fs
fadds
push
xchg
fwait
leave
ret
divl
mov
ja
mov
fnclex
pinsrw
push
mov
repz
adc
push
pushl
ss
sub
mov
xor
dec
je
rcrb
mov
pop
int3
popa
xor
lock
shrb
sub
mov
adc
movsl
inc
sbb
int
das
jb
jle
lret
in
lea
mov
lcall
in
xchg
insb
cmp
mov
sub
sub
sub
push
aam
mov
jae
call
inc
scas
add
xchg
aas
push
not
jl
fwait
iret
test
inc
bswap
add
pushf
pop
lret
mov
pusha
ret
sub
adc
mov
dec
cltd
js
dec
cli
cmpsl
pop
fsubs
mov
jg
ret
cs
cmp
imul
jle
jle
add
bound
ret
movb
test
in
and
mov
bound
sti
jo
jno
inc
jns
push
adc
lahf
cmp
mov
lods
and
pop
fdivr
inc
icebp
rcll
cs
xor
roll
jl
andl
dec
jne
mov
insl
cmpsl
subb
sbb
rorl
mov
push
out
fwait
and
pop
adc
cli
xor
call
outsl
neg
daa
cmp
sbb
outsb
in
add
xchg
call
loopne
pop
xlat
mov
add
push
inc
cmp
aas
jmp
sub
cwtl
cmp
jl
add
xor
andps
dec
cwtl
mov
mov
xchg
add
mov
fwait
loopne
clc
pop
jg
mov
inc
mov
jns
cli
xor
mov
fwait
mov
inc
inc
pop
lahf
adc
scas
fsts
outsl
test
adc
pop
fwait
sub
jnp
add
hlt
mov
cmp
mov
sub
sub
dec
dec
jno
sbb
mov
hlt
dec
mov
xchg
sub
fld
lahf
and
lods
rolb
mov
add
inc
sbb
les
mov
pushf
inc
pusha
sub
cmc
xorl
imul
ror
int3
loope
xor
cwtl
imul
dec
cmp
out
mov
in
pop
mov
lret
imul
popa
cmp
sbb
jae
fldenv
sbb
or
sbb
arpl
lret
xchg
lods
adc
or
mov
testl
and
in
addr16
push
pop
test
in
cli
in
pusha
pop
scas
push
fisttps
ss
sbb
aaa
inc
sub
out
jmp
dec
cmp
adc
inc
fadd
loop
xchg
sub
rolb
imul
cmp
adc
sarl
enter
fwait
pop
sbb
sbb
popf
add
adc
push
sbbb
push
int
cmp
lock
daa
lret
inc
xor
and
and
insl
inc
fnstsw
mov
jns
push
jo
push
sbb
aas
push
jo
push
inc
notb
stc
mov
loope
gs
mov
jae
jb
insl
dec
shll
data16
shll
pushf
jmp
cwtl
add
dec
out
enter
and
rorb
and
cmp
jae
into
scas
in
jb
and
cmp
pop
cmc
cld
xlat
insl
xor
fucomp
aas
pop
xcrypt-ecb
cmpsl
leave
daa
rcll
cmp
inc
int
popa
jns
mov
or
fsubrl
scas
and
es
sub
add
lret
jmp
xchg
loop
and
std
push
outsb
bnd
js
inc
xchg
xchg
and
cs
mov
xor
inc
nop
dec
clc
jl
outsb
add
xchg
adc
into
lret
js
or
add
adc
mov
add
gs
inc
inc
fadd
sub
daa
clc
pop
ss
into
fs
outsb
lahf
ret
sbb
push
xchg
cltd
push
lea
sub
rcr
negl
mov
pushf
repnz
xchg
adc
lret
mov
adc
sti
ret
adc
mov
popf
pop
ret
jo
fcmovbe
imul
mov
jnp
xlat
mov
lcall
imull
pop
add
or
enter
lcall
loop
cli
call
aas
adc
imul
sahf
or
nop
fcoml
loope
test
inc
add
sbb
cmp
pop
adc
fsts
jnp
mov
sub
fdivl
push
dec
or
adc
xchg
mov
add
pop
pop
je
into
ficompl
inc
jno
scas
add
inc
mov
mov
movb
insl
sbb
popf
movsl
icebp
dec
ja
arpl
jae
addr16
fsubrs
orl
jbe
lret
cld
ffreep
mov
jmp
sarb
jnp
and
jge
xchg
insb
sbb
js
jg
popa
xchg
pop
scas
call
inc
leave
imul
sbb
stc
jns
mov
mov
call
cmp
mov
xor
fldcw
push
xchg
mov
jae
clc
roll
setne
xor
test
push
xchg
fstpl
jl
add
mov
jnp
adc
pop
jno
sbb
clc
test
xor
imul
xchg
push
sbb
cmp
xchg
cmp
mov
pop
sbb
mov
insb
sarb
dec
repz
addl
lds
xchg
pop
iret
pop
mov
jns
pop
dec
xchg
push
and
push
dec
loopne,pt
xor
jmp
cmp
adc
lahf
push
jnp
jno
jbe
mov
shl
xlat
adc
stc
lret
xchg
mov
pop
ds
in
movsb
mov
aaa
jae
xor
add
xchg
mov
stc
js
or
loop
lcall
xchg
adc
not
dec
cmp
add
sbb
pop
loope
inc
xchg
gs
pop
shl
mov
or
outsl
cli
sbb
pop
notb
dec
lcall
in
push
or
xor
repnz
add
xchg
dec
mov
cmp
mov
cmp
ret
jle
xlat
arpl
orb
fsts
arpl
movw
repnz
mov
xchg
mov
mov
xor
in
and
sti
inc
mov
jb
into
mov
xor
lcall
push
pop
sub
mov
lcall
pop
movsl
mov
out
mov
int
adc
mov
xor
push
jne
xchg
add
sbbl
je
push
xor
aam
xor
mov
jle
lcall
mov
nop
daa
je
xchg
loope
repnz
mov
jae
mov
mov
or
sbb
pusha
dec
shlb
imul
loope
lock
fisubs
mov
push
jo
and
mov
push
xor
shll
arpl
adc
inc
loop
dec
ret
dec
push
pop
sub
cmp
mov
mov
daa
in
inc
mov
movsl
in
in
and
aam
sti
lods
insl
push
movsb
xor
loopne
into
enter
imul
jp
cwtl
jmp
push
and
sub
sub
roll
cli
lahf
call
dec
jbe
push
rorl
movsb
add
add
jmp
shrl
cmpb
inc
mov
xor
js
mov
fiadds
adc
jl
stos
lret
hlt
sub
test
mov
arpl
sbb
xorb
push
push
dec
jno
pop
pop
notl
mov
ret
push
xchg
dec
decl
jne
xor
fistl
rcrb
cmpsb
sti
pop
pushf
cld
int
arpl
mov
or
adc
mov
sub
xchg
cs
icebp
cmp
in
leave
outsb
fists
cmp
aas
push
pop
xor
lret
and
ss
mov
rcll
daa
adc
data16
loope
clc
out
sub
sahf
stc
stos
cmp
pop
pop
mov
mov
vpaddd
sbb
inc
subl
pop
jmp
imul
lods
in
jl
adc
enter
push
js
inc
mov
mov
cmp
xchg
sahf
cmp
cmp
dec
enter
ret
aad
and
pusha
fmuls
leave
jmp
mov
adc
test
loope
adc
ret
jle
add
sbb
iret
xor
inc
rorl
insl
jns
lods
scas
frstor
arpl
pop
nop
fsub
mov
xchg
xchg
aad
xchg
pop
rol
xchg
es
out
xchg
cmp
arpl
jl
mov
mov
xchg
cmp
mov
push
mov
push
adcl
and
mov
lds
pop
xchg
aad
ffree
ret
pop
mov
cs
fiadds
mov
daa
ja
push
mov
xchg
sub
fldcw
std
adc
add
in
sbb
sbb
jg
xchg
ud0
inc
lret
das
and
xchg
inc
lods
push
iret
or
lods
shr
add
mov
into
ret
dec
scas
daa
mov
jge
jbe
or
das
iret
fucomip
mov
cwtl
inc
movsl
insl
push
fcompl
xchg
test
mov
push
pop
movsb
mov
fwait
rcrb
inc
cld
dec
mov
lcall
add
jae
cmp
xchg
fdivrl
popa
mov
frstor
adc
mov
push
add
pop
push
bound
pusha
xor
push
push
bound
sbb
lods
mov
mov
pop
cwtl
mov
mov
cmpsb
sub
mov
cwtl
mov
mov
add
std
sahf
insb
lods
jb
inc
scas
dec
dec
mull
add
jg
or
jmp
mov
ret
or
movsl
out
movsl
pop
out
subl
insl
into
dec
mov
mov
adc
cmp
add
int3
or
adc
mov
push
pop
adc
mov
and
shrb
dec
xor
xorb
pop
stos
xchg
test
lcall
sub
lock
jnp
push
cmp
loop
mov
lods
fwait
xor
mov
xchg
sbb
inc
add
aam
mov
mov
nop
cmpsl
imul
lods
jnp
adc
fwait
rolb
shr
add
jb
aad
adc
fisubs
shll
loop
pop
out
iret
add
das
push
mull
and
push
xor
cmc
push
aaa
fimull
inc
inc
rep
lahf
inc
jb
push
mov
rolb
sub
jno
jl
ljmp
movsl
add
pop
push
xchg
call
dec
mov
icebp
mov
into
testl
add
popf
ja
fsubl
icebp
push
and
and
pop
lods
pusha
lcall
mov
fistps
loop
nop
mov
aas
pop
mov
sti
cli
push
cmp
cli
push
aad
rep
iret
xor
add
les
cmp
icebp
jno
js
add
dec
popa
popa
sahf
dec
adc
les
sub
sti
es
and
sub
dec
sub
xchg
dec
jg
in
setno
pop
mov
jg
mov
popa
aas
push
adc
pop
add
xchg
test
scas
mov
pop
fists
sub
push
jb
inc
rcpps
scas
fcomi
pop
cmpsb
cs
or
sbb
sbb
mov
sbb
subl
lods
add
popf
mov
xor
mov
mov
cmp
dec
jnp
lock
cmp
mov
popf
out
cmp
lods
imul
aad
sti
mov
fwait
lahf
xchg
test
mov
test
or
jbe
xlat
inc
scas
faddl
dec
mov
aad
mov
inc
xchg
cwtl
fs
fadd
std
out
fsubrs
add
iret
inc
push
pxor
cmp
in
sub
jne
aad
adc
repnz
data16
inc
repz
lret
push
ds
fsubp
push
add
test
add
cmp
cmp
test
mov
pusha
cltd
xor
cvttps2pi
mov
sbb
imul
mov
lret
push
mov
fidivl
xchg
mov
fidivrs
pop
xchg
call
out
fadds
outsb
and
dec
mov
jl
mov
and
cmpb
push
js
xchg
mov
add
dec
mov
mov
add
add
sti
rol
ljmp
aas
mov
cmpsl
repnz
iret
mov
mov
sbb
mov
test
or
mov
hlt
std
into
cld
push
cmp
shl
inc
and
adc
notb
stos
jo
loop
rclb
pop
jmp
daa
sbb
xlat
rol
push
gs
leave
adc
add
jns
pop
pop
dec
and
pop
scas
shlb
imul
pop
push
dec
cld
lock
in
add
lret
adc
or
adc
add
les
or
movntq
out
out
push
mov
or
or
jg
inc
push
negb
rolw
movsl
xor
incb
mov
movsl
loope
scas
inc
scas
mull
add
push
es
orl
in
push
pop
sarb
push
js
inc
add
fcomps
cmpsb
sbb
pop
mov
cmp
and
stc
pop
stos
xor
ja
pushf
sub
sarl
or
adc
pop
in
mov
pushf
in
and
sahf
sbb
mov
mov
xor
xchg
mov
lods
inc
icebp
hlt
fstpl
loopne
sahf
dec
fwait
mov
addb
jbe
jl
call
insl
scas
sbb
xlat
ss
fsubrl
mov
fldt
add
das
inc
xor
dec
mov
stos
into
into
stos
xchg
aaa
or
add
xchg
lahf
xor
int3
push
dec
adc
pop
mov
adc
mov
pop
dec
bound
push
sub
hlt
std
lods
movsl
inc
and
jns
mov
mov
popa
test
dec
mov
push
loopne
out
sub
lret
repnz
jns
sbb
cltd
and
lret
and
iret
xor
pop
int
pop
js
in
adc
lret
fsubrp
lea
je
movsb
sti
pushf
leave
test
adc
cld
xor
lret
xor
or
or
adc
cmp
fcmovnb
imul
jmp
xchg
test
ds
rep
js
iret
cltd
xchg
ret
int
dec
and
daa
inc
cmovnp
mov
addr16
jmp
mov
xor
icebp
mov
adc
xor
add
xchg
mov
add
fstl
jp
pop
cmpsl
push
cmp
ljmp
cmpsl
lret
mov
fs
inc
push
lcall
dec
subl
jp
dec
shll
mov
pop
js
insl
or
idivl
mov
incb
popf
dec
and
jb
dec
cld
andb
scas
icebp
clc
xchg
mov
dec
adc
jae
cmp
pop
faddl
push
fisubrs
push
pop
int3
mov
cmc
pop
jmp
cmp
jmp
jno
fwait
xor
cmp
and
lcall
and
inc
aaa
push
mov
inc
mov
lods
gs
inc
push
add
inc
lock
lock
andb
outsb
sbb
cmp
out
enter
adc
int3
cmpsl
not
push
fimuls
ret
and
dec
sahf
sub
sbb
cmpb
je
cmc
push
and
push
cmp
xor
test
jo
xlat
xchg
cmp
int
das
das
fildll
hlt
add
lock
inc
mov
fwait
mov
cmpsb
fadd
mov
ljmp
lahf
sub
mov
inc
mov
aaa
flds
stos
arpl
jnp
sahf
mov
orl
loope
lret
fwait
enter
adc
pop
push
mov
mov
mov
lcall
les
mov
mov
xchg
xor
cmp
lret
or
pop
sti
insb
sbb
cltd
lcall
mov
loop
jno
cmp
test
mov
xchg
push
enter
and
cmc
mov
cmpsl
mov
sub
sbb
and
adc
mov
cwtl
push
mov
fnstenv
das
jl
mov
jbe
cltd
arpl
fsubs
xchg
lock
jne
addb
pop
out
pop
mov
popf
pop
jno
xor
sbbl
or
push
rol
push
shll
out
mov
ja
push
sub
test
sti
sarl
or
mov
fmull
pop
xchg
jg
inc
les
fistps
adc
adc
jp
sub
mov
mov
sbb
inc
scas
addr16
repz
push
dec
mov
add
insb
jo
and
repz
js
roll
enter
out
movl
jg
out
push
rol
aad
or
shrb
lret
lcall
ja
cmpsb
xlat
jl
mov
mov
in
subb
ds
call
inc
shlb
dec
scas
out
cmp
mov
iret
mov
adc
fs
das
loop
push
es
mov
int
jp
xor
nop
sub
pop
ljmp
ficomps
push
or
cmpsb
in
lods
mov
arpl
xor
sbb
daa
sub
pop
gs
dec
pop
jl
orb
rcll
lods
aaa
aaa
mov
xor
dec
cld
push
xchg
mov
and
dec
idiv
leave
jbe
call
aaa
dec
cmp
fimull
fs
xor
aam
movsl
in
push
and
sub
jne
mov
jbe
ret
out
lods
std
fwait
sbb
sbb
push
sbb
outsb
push
lea
cs
movsl
jmp
jae
fcmovu
lods
adc
jp
loop
inc
bswap
fsub
in
mov
ret
inc
mov
pop
xor
dec
cld
dec
pop
das
cmp
popf
es
jg
cmp
imul
js
fdiv
inc
mov
fldln2
das
mov
out
push
popa
jle
popa
xchg
jae
icebp
pushf
cmp
inc
fs
std
mov
icebp
mov
pop
dec
cli
lea
lret
pop
or
xor
lods
fwait
orb
test
lds
cmp
dec
stos
jle
rcrl
adc
jbe
mov
jmp
push
xchg
rolb
jnp
bound
aaa
and
xchg
sub
sbb
movsb
movsb
aaa
mov
inc
mov
jmp
jne
loopne
and
mov
xor
mov
add
test
jo
mov
xchg
xor
or
loopne
sbb
lock
jmp
dec
repz
sbb
pop
mov
adc
les
addl
fidivrl
or
lock
lods
push
icebp
out
fsubrl
mov
cmp
push
out
mov
in
mov
fdivrs
sbb
insl
orb
test
loopne
int
sbb
jnp
sbb
mov
inc
aad
add
sub
add
cmc
and
xor
lock
daa
sbb
jecxz
leave
fndisi(8087
movl
jecxz
inc
int3
add
sub
or
dec
shrl
mov
addb
inc
insb
mov
dec
mov
mov
adcb
jmp
aaa
and
xor
adc
push
int
jg
icebp
aad
scas
movsb
jp
test
fisubrl
pop
shll
scas
adc
pop
sar
hlt
inc
mov
dec
adc
xor
stc
in
cmp
adc
sbb
dec
enter
test
pop
xlat
jmp
std
into
stos
pop
mov
mov
or
loope
or
lock
pusha
or
arpl
adc
xchg
jge
pop
or
cli
and
and
daa
insl
cli
dec
movsb
mov
jbe
and
xchg
mulb
je
sub
push
mov
jg
xor
int3
inc
jae
lret
mov
pop
sub
ljmp
push
std
cld
sahf
movb
sahf
fnstsw
pop
fsubs
lds
pushf
cmp
xchg
cld
mov
les
rorl
inc
into
dec
sbb
testb
add
das
adc
push
xor
js
mov
lea
into
aad
jae
jbe
es
sub
cmpsl
cmc
pop
cmpsb
pop
xchg
lea
inc
xchg
gs
mov
push
fdivrl
push
stos
pop
and
loop
popf
push
in
and
or
jbe
subl
mov
rclb
mov
cltd
dec
push
cwtl
push
mov
and
repz
movsb
adc
mov
sbb
mov
xor
lret
iret
into
sub
xchg
jge
in
inc
insb
mov
popl
insb
fcoml
jnp
andl
test
xchg
cmp
repnz
popf
and
and
pusha
stc
ret
popf
popf
cmp
cmp
int3
push
outsl
sub
lret
pop
inc
cltd
xor
ret
jbe
aam
sub
add
fcmovnbe
pop
repz
push
mov
push
mov
sti
ss
cs
xlat
pop
mov
cmpb
inc
adc
out
fsubrl
jmp
fldl
outsb
jb
aad
lock
xchg
fsubrp
cmc
cmpsl
add
sarb
in
cmp
or
popf
subl
sub
lahf
adc
sub
enter
rcrl
jne
stc
xchg
inc
mov
dec
cmp
sbb
shll
jmp
mov
ljmp
pop
adc
cmpsl
cmp
and
mov
pop
dec
gs
mov
inc
dec
cmp
lret
scas
sbb
sbb
sti
xor
mov
sarl
cwtl
and
and
mov
xlat
dec
cmpsb
and
std
int3
fwait
xor
add
mov
repnz
add
pop
hlt
sub
rclb
test
out
pop
cmp
and
cmp
push
negb
cltd
inc
jno
pop
mov
arpl
pop
xchg
outsl
imul
jbe
test
pop
push
aam
scas
cmpsb
dec
fnsave
cli
inc
jb
mov
das
inc
add
or
out
ja
inc
cmpsl
cmp
cli
outsl
aad
jae
pop
dec
jne
cmc
inc
call
fsubrs
pop
mov
lods
add
sub
xchg
jno
or
jbe
imul
out
inc
ffree
cmp
pop
adc
int
insb
sub
mov
xchg
mov
add
data16
mov
pop
xchg
jno
cmc
push
pop
xchg
jle
cli
or
es
sarb
adc
inc
shrb
sbb
or
and
sub
sti
stos
cmc
out
xchg
push
insb
sbb
jle
idivl
push
add
shr
add
xchg
add
ja
xor
movsl
dec
add
int
test
cmpsl
aas
adc
cmpsb
mov
scas
rorl
or
cmp
pushl
outsb
jne
mov
cmp
jno
cmp
lret
sbb
mov
fdivrs
mov
add
xor
ss
std
rclb
sbb
cmp
jae
add
mov
mov
leave
addr16
pusha
mov
cwtl
out
loopne
add
pop
icebp
and
pop
ja
mov
push
into
clc
mov
pop
and
out
scas
mov
jne
adc
add
test
pop
je
out
jmp
xor
adc
mov
movsl
scas
dec
lock
xchg
cmp
pop
lock
cmp
dec
adc
aaa
shlb
movsb
mov
pop
jl
adc
inc
cmp
cmpsb
inc
xor
pop
sub
ds
mov
push
mov
lahf
in
cmpsb
or
mov
lea
lcall
push
xchg
insb
arpl
hlt
fistl
sahf
aad
inc
jno
mov
jmp
sbb
sub
jl
ljmp
sub
inc
cltd
jecxz
rorb
jne
test
movsb
jmp
int
mov
ret
mov
and
mov
push
push
and
test
das
stc
jno
inc
sub
test
or
int3
mov
xor
dec
aad
push
xor
shl
mov
ljmp
xor
fsubrs
ljmp
inc
fisttps
dec
sahf
inc
int3
push
fs
aaa
and
jnp
mov
cmp
xor
xchg
je
pop
rcrb
cs
and
aaa
push
mov
or
mov
jge
xlat
into
dec
fisubs
mov
mov
mov
stos
cli
xchg
mov
lods
into
jmp
rclb
xchg
out
gs
arpl
fimull
jnp
push
or
sub
jg
idiv
inc
jp
pop
push
xor
dec
stos
jnp
bound
xchg
aam
xchg
daa
jmp
lods
popf
mov
fildll
ret
or
dec
xchg
mov
mov
mov
pop
stos
js
mov
jmp
fidivrs
call
in
jb,pt
mulb
or
add
mov
ret
inc
inc
sbb
cmp
mov
aas
or
mov
dec
dec
imul
jbe
push
fmulp
dec
lahf
imul
add
push
mov
mov
pop
cmp
and
jno
jg
push
les
xor
leave
add
pop
mov
js
mov
ljmp
push
scas
pop
or
mov
movsb
inc
insb
xchg
mov
mov
push
rolb
sbb
inc
out
cmp
clc
mov
jp
adc
mov
imul
pop
aas
test
pop
pop
sbb
test
mov
push
roll
dec
mov
and
push
pop
lret
mov
movl
xchg
mov
sub
adc
xchg
mov
pushf
fisubs
xchg
subb
test
sahf
sub
shll
iret
sub
pop
and
scas
or
hlt
xchg
test
or
mov
bound
fdivrl
cmpsl
sub
dec
sub
scas
push
xor
int3
cmpsl
jbe
jnp
into
pop
adc
movsb
stos
repz
adc
lret
test
fisubrl
lea
ret
mov
movsl
js
pop
push
into
ficompl
cmp
add
stos
xor
movsl
dec
mov
pop
add
sub
popa
lods
xchg
fidivl
shl
scas
xor
sbb
jno
and
adc
dec
or
cmpsl
movsb
sub
test
dec
call
push
jge
pop
adc
dec
sbb
mul
inc
ljmp
repz
das
fwait
and
pop
or
or
pop
mov
add
jmp
sbb
jmp
dec
mov
jl
into
cs
push
inc
mov
adc
xchg
stos
cltd
ret
sub
data16
inc
adc
hlt
mov
les
popa
mov
xchg
cwtl
mov
sub
iret
cmpsl
pop
sbb
enter
xchg
stos
repnz
and
pop
psubd
inc
jmp
pop
daa
iret
in
xchg
loopne
inc
daa
mov
xchg
inc
dec
mov
scas
mov
dec
popf
je
push
push
stos
cmpsl
push
jg
or
sub
push
in
stos
adc
adc
out
or
stc
mov
hlt
jl
subb
or
hlt
fsubs
ss
add
or
lock
push
nop
ljmp
out
popa
leave
or
loope
rcr
xor
idivb
test
pop
dec
int
rol
dec
dec
and
cmp
jg
push
jecxz
xchg
xchg
ret
dec
out
daa
mov
push
subb
or
push
push
js
stos
int3
clc
vcvtdq2ps
repnz
pusha
lods
inc
fwait
dec
or
jb
add
faddl
cmp
das
inc
adc
in
dec
mov
mov
mov
shrl
sbb
pop
inc
insb
stos
test
adc
mov
mov
cmpsl
fldenv
loopne
neg
outsl
dec
mov
mov
int
mov
hlt
fldl
test
lds
scas
adcl
pop
sub
xchg
mov
dec
in
scas
jl
push
push
sub
jb
mov
pop
cmpsb
jl
sbb
jnp
mov
or
cmc
out
test
movsl
cmp
cmpsb
je
cmp
out
test
jle
ds
aaa
add
xchg
aaa
sub
sbb
ret
icebp
stos
adc
jne
mov
dec
test
sub
jl
mov
icebp
mov
test
pop
std
out
cmp
fidivl
pop
inc
subl
or
and
repnz
lea
hlt
lcall
cltd
nop
or
aas
insl
movsb
push
push
mov
adc
int3
lret
outsl
std
dec
jo
lret
repz
loopne
xchg
fs
push
cmp
inc
sbb
fisubs
ficompl
xchg
repz
mov
xchg
dec
inc
ret
testb
std
iret
jae
add
fsubs
int
shl
jo
shll
fildl
sub
fimull
sub
adc
dec
mov
sti
orl
add
inc
dec
sbb
add
movsl
jmp
addr16
inc
mov
das
inc
cld
jle
pop
pop
hlt
mov
lea
mov
pusha
mov
or
outsb
sbb
add
and
adc
daa
mov
dec
cmp
xlat
sbb
into
repnz
and
push
negl
xchg
clc
cmp
pop
int
repz
arpl
and
xchg
aaa
test
mov
push
sub
stos
popf
dec
add
cmp
int
and
lods
test
adc
das
sbb
shrb
sub
jge
arpl
sahf
pop
int3
sbb
mov
nop
ret
xchg
pop
and
pop
lds
mov
and
into
cmpsb
pusha
out
popa
xor
jo
xchg
and
lret
lcall
sete
popa
stos
dec
cld
shlb
jbe
stc
movsb
rcll
xor
sbb
jl
rorb
dec
dec
dec
lock
adc
jb
pushf
sub
negl
ret
and
rcr
mov
arpl
push
mov
ret
loopw
clc
mov
jl
inc
xor
xlat
push
push
dec
stc
add
xchg
ss
popa
imul
adc
push
push
aad
mov
push
dec
lea
push
aad
xor
cmp
jno
stos
xor
jbe
das
leave
jp
shrl
push
pusha
jne
out
cwtl
jbe
test
xchg
and
repz
fnstcw
push
addr16
mov
jbe
jmp
fs
icebp
fidivrs
mov
fstl
repnz
xchg
add
aad
popa
enter
scas
int
fisttpll
arpl
lcall
sbb
lea
mov
or
xor
jbe
rorb
jp
shll
cmpsl
lahf
pop
push
into
pop
and
fwait
cmp
out
cwtl
xchg
mov
mov
push
push
mov
lcall
fmuls
xchg
rcrl
mov
mov
pop
in
jl
stc
lcall
out
cmp
push
fidivrl
mov
popa
dec
leave
or
rolb
rcrl
stos
xor
fimull
jnp
and
repnz
dec
les
sub
inc
jge
fisubrl
push
xchg
or
or
ficoms
testl
daa
push
inc
sbb
add
lea
out
out
sub
in
mov
mov
bound
xor
insb
lds
xchg
outsl
mov
ficoms
jge
mov
mov
out
or
sub
cmp
inc
mov
pop
mov
das
sbb
mov
sub
inc
ljmp
roll
mov
cld
mov
xchg
jle
dec
xor
xchg
cwtl
jl
xor
pop
aad
cmpl
xor
ret
nop
in
jo
std
pop
notb
enter
jne
ror
mov
mov
leave
push
xchg
mov
push
sbb
add
lds
es
out
cmp
addr16
bound
cmc
negb
and
shl
hlt
insb
ror
mov
arpl
insb
hlt
stc
pop
mov
dec
jmp
jno
loopne
dec
call
mov
mov
movsl
mov
adc
inc
mov
clc
addr16
out
sub
inc
cwtl
fbld
xlat
imul
mov
test
bound
xor
cltd
inc
scas
dec
mov
out
mov
test
mov
or
mov
fldcw
into
rorb
cmpsl
sub
mov
or
flds
inc
cmp
xor
and
sti
fcomps
mov
lret
mov
or
das
in
cmpsl
movsb
xor
mov
stos
aam
js
frstor
enter
movsb
fimull
inc
mov
cmc
mov
pop
scas
xchg
cmpl
cli
or
mov
add
cmp
sub
inc
pop
fs
mov
sbb
pop
xorb
mov
cld
arpl
jno
xchg
aad
sub
or
in
jle
rorl
cmp
fsts
shrb
cs
daa
or
xor
xchg
in
sub
ljmp
push
lods
shrb
xchg
arpl
lahf
repz
pop
pop
cmpsb
pushf
cmp
out
icebp
add
jno
mov
jb
or
sub
cmpsb
and
push
push
pushf
inc
mov
jae
shl
or
pop
pop
mov
push
fwait
js
in
and
xor
sbb
xchg
xlat
pop
mov
adc
aaa
adc
pop
fildl
mov
ja
inc
and
sbb
ret
push
xor
cmc
cmp
ret
adc
and
mov
sbb
addr16
xchg
pop
pop
ds
test
jmp
js
and
loop
rclb
jg
dec
sti
rclb
xor
scas
psubd
xor
jge
inc
mov
jge
mov
je
fcmovu
inc
scas
fwait
mov
pusha
mov
popf
mov
lcall
lds
inc
pop
pop
mov
lds
xchg
cmpsl
sub
mov
sbb
add
cmp
mov
jl
jb
les
jo
jno
pop
bound
jg
ds
pop
push
test
dec
mov
and
in
js
sub
jne
xchg
stos
mov
mov
and
xor
sar
and
sub
bound
mov
rorl
and
push
mov
idivb
loop
push
xlat
daa
in
jbe
sbb
add
lea
es
jg
outsl
cmp
cmp
lcall
and
fwait
sbb
and
jnp
sbb
cmp
dec
cli
cld
lret
dec
or
loope
mov
dec
push
cs
sbb
lods
push
fistps
push
dec
sbb
repnz
inc
mov
mov
and
imul
jno
inc
addr16
inc
data16
xchg
dec
roll
test
xor
inc
loope
mov
jge
les
inc
popa
sub
mov
cmp
cmp
cmp
mov
sahf
sbb
push
shrb
dec
in
ret
push
push
cmc
scas
repz
add
or
pushf
lods
fwait
push
repz
or
hlt
mov
adc
push
xchg
outsl
ljmp
pop
addl
dec
adc
gs
sbb
xor
xlat
jg
je
cmp
sub
ja,pt
inc
xor
in
sbb
adcb
out
adc
sub
jecxz
ja
cltd
and
in
movsl
gs
xor
xor
dec
xchg
dec
sub
loope
mov
inc
mov
std
jbe
enter
xchg
xchg
and
or
ret
push
inc
inc
aad
xchg
and
pop
fidivl
ret
xchg
stc
sbb
fmull
clc
adc
xor
or
pusha
and
leave
icebp
dec
js
inc
xchg
lret
mov
add
lock
inc
push
ja
enter
stc
sbb
ljmp
pop
pop
push
and
fstps
rorl
xor
inc
cmp
xor
push
out
je
pop
mov
enter
cmp
pop
aaa
push
add
cmp
xchg
jg
pop
and
xchg
xor
adc
sub
push
mov
mov
aad
testl
packsswb
mov
push
pop
sbb
jne
sbb
mov
inc
xchg
cmp
xchg
or
mov
add
dec
loop
push
dec
and
pop
jg
ficomps
hlt
cmpsl
xchg
sub
and
cmp
out
ds
mov
push
jo
sub
lods
or
mov
jl
adc
fisubl
and
cmpsb
daa
testb
int3
jnp
mov
fdivrl
jno
cmp
out
xchg
mov
in
outsl
xchg
movsl
mov
fisubs
add
mov
or
cmpsb
shrl
add
imul
push
mov
sti
sub
or
jnp
cs
das
loope
mov
test
xchg
cwtl
xor
stos
iret
jbe
iret
outsb
int3
mov
mov
pop
xor
adc
xchg
push
popa
xor
aam
les
adc
pop
daa
mov
mov
sbb
lods
test
cmp
adc
leave
xchg
dec
call
push
fwait
aaa
stc
mov
mov
jmp
addl
rcl
pop
inc
enter
mov
dec
jmp
push
pop
add
inc
cmp
sub
dec
jo
add
jb
aad
imul
mov
es
and
daa
push
push
in
sbb
int
cmp
jno
jp
fwait
hlt
insl
sbb
push
in
loopne
lea
ja
jmp
and
pop
jo
sub
out
loop
daa
cld
and
adc
orl
ret
cmp
xchg
fldcw
xor
adc
fcmove
cli
dec
xor
cmpsb
rcl
xlat
xor
pop
push
mov
arpl
scas
mov
push
insl
popf
xchg
xchg
jmp
mov
daa
sub
das
sbb
les
gs
nop
test
xchg
adc
arpl
sbb
mov
gs
sbb
mov
test
cmp
mov
push
lcall
cmp
sahf
sbb
push
in
jb
pop
out
mov
fcomps
cmp
int3
mov
cmpsb
movsb
or
dec
jnp
stc
jg
stc
pop
imul
fnstcw
adc
std
xor
and
hlt
mov
imull
fdivl
ljmp
sub
push
mov
je
imul
and
dec
jl
ja
movsb
divb
jne
mov
movsb
xchg
mov
sub
or
cmpsl
ds
jo
cmp
push
ljmp
xchg
jmp
dec
shr
xor
xor
popa
sahf
jo
pop
or
lods
mov
adc
out
jge
xor
and
xor
lods
jb
or
push
push
jae
xor
cmpsb
int3
adc
jle
adc
adc
or
popa
pop
jnp
mov
aad
lcall
xor
fsub
popa
mov
aad
sub
ret
iret
enter
sbb
xchg
rcr
pop
and
ja
ret
push
sub
adc
test
add
in
aam
lret
pop
mov
adc
and
mov
cmpsl
xrelease
pop
imul
clc
nop
sbb
out
fidivrs
cld
popa
xor
push
adc
mov
pop
repnz
fidivl
nop
ja
jp
jle
pop
jbe
push
jno
jns
jg
enter
inc
jmp
mov
or
lds
dec
or
addr16
nop
push
mull
dec
pop
dec
xlat
adc
xchg
sub
jb
les
je
pop
pop
out
inc
xchg
popa
jnp
xchg
cs
sub
dec
js
les
dec
ret
decb
pusha
inc
mov
pushf
xor
inc
shlb
mov
or
cmc
test
jp
repnz
mov
insl
jg
push
xchg
xor
or
por
out
jnp
es
pop
jp
mov
movsb
cli
ret
xchg
pop
xor
std
mov
add
into
loope
mov
cld
cmp
call
pop
pop
jb
mov
push
inc
pop
ret
out
sbb
scas
pop
sub
xor
es
push
jecxz
mov
jne
andb
dec
inc
and
dec
mov
adc
dec
mov
jmp
jae
mov
ror
sub
gs
sub
loopne
mov
dec
and
add
pop
xlat
and
pop
push
roll
mov
loopne
xchg
jge
mov
fsubl
aad
xchg
mov
cld
mov
pop
bound
je
add
ficomps
lahf
out
xor
push
and
pop
mov
mov
imul
pop
daa
adc
movsb
pushf
xor
aad
cmc
mov
scas
sbb
xchg
xchg
add
sbb
pshufw
mov
loop
mov
js
fs
sti
insb
int3
mov
icebp
xor
push
cmp
lret
subb
fdivl
xor
jbe
clc
shrb
mov
out
dec
ja
mov
lock
std
xchg
mov
movsb
sub
and
mov
jle
mov
in
dec
sbb
repz
iret
xchg
lret
adc
fbstp
mov
mov
jl
leave
mov
xor
pop
add
xlat
je
mul
aam
pop
jecxz
push
stos
dec
mov
mov
test
mov
out
pushw
scas
dec
sti
add
test
push
sahf
arpl
cmpsb
xchg
addr16
test
mov
fisubrl
dec
in
shll
std
dec
bound
xor
lods
cmpsb
jne
pop
sub
imul
cmpl
jb
ret
xchg
inc
xor
test
cltd
pop
add
cltd
lods
inc
pop
cmp
xchg
mov
repz
add
push
je
fstpl
cltd
dec
cwtl
mov
fimull
call
xor
jp
mov
sbb
or
les
aad
out
scas
add
outsb
dec
add
movb
test
mov
fldt
jge
push
mov
xchg
mov
hlt
clc
mov
or
xor
pop
pop
or
lret
sti
or
out
inc
pop
add
cwtl
jge
and
enter
cltd
mov
hlt
cmp
xor
hlt
stc
push
push
fcmove
and
cs
push
dec
pop
enter
in
mov
xor
mov
push
std
xor
jge
out
es
jo
in
dec
in
pop
pop
insl
or
inc
mov
xor
mov
ja
add
xchg
jp
sbb
inc
lds
lea
scas
push
sub
and
incb
or
add
jmp
add
mov
stos
jb
xor
movsl
cltd
or
loopne
andl
jecxz
arpl
movsb
or
aaa
or
jecxz
ljmp
lods
and
popa
leave
dec
mov
jmp
mov
in
mov
repz
mov
push
jmp
push
cmpsb
into
stos
sub
add
add
jne
sbb
icebp
pop
push
outsl
jae
mov
lret
cmp
pop
mov
or
xor
dec
xor
call
mov
xor
cmp
sbb
lea
insl
enter
mov
adc
xlat
mov
in
mov
pop
cmpsl
jp
hlt
push
inc
jge
mov
cmpsl
or
jecxz
dec
jecxz
inc
mov
push
add
or
stos
icebp
outsl
or
sti
sub
lods
add
aaa
nop
xor
test
adc
lcall
in
test
aam
lret
cmp
add
daa
lods
fwait
pop
pop
dec
push
insl
jmp
stos
xor
add
inc
jle
loopne
pop
sti
add
out
fmuls
inc
outsb
pop
shl
xchg
leave
push
or
stos
push
ret
test
in
adc
adc
pop
pop
jl
std
xchg
adc
mov
xchg
or
imul
mov
push
aaa
pusha
jbe
jmp
fidivl
push
jne
fadds
sbb
rol
test
jmp
push
in
insl
imul
xor
push
stc
push
xchg
mov
sahf
cwtl
sub
push
clc
das
shrb
pop
rcr
pop
out
lods
xchg
int3
lods
in
lods
dec
sub
ss
fnstsw
test
add
jmp
mov
test
leave
or
shl
inc
lock
push
sub
call
and
fcomps
ljmp
iret
in
xchg
incl
or
rclb
jne
in
cltd
out
add
lcall
jecxz
or
ja
loop
mov
cmp
pop
adc
cltd
or
and
dec
jle
mov
sarb
sub
mov
inc
cld
mov
fcoml
sbb
ret
dec
hlt
cli
int
and
jp
jns
cmp
mov
lea
mov
ret
ss
orl
mov
enter
fwait
xchg
pop
mov
adc
cmc
pop
dec
in
out
sbb
mov
xor
call
cmpsl
jbe
subb
xor
fisubrs
imul
je
jnp
faddl
mov
dec
in
dec
cmp
sbb
pop
jp
xchg
mov
cmp
jne
js
adc
pop
and
mov
icebp
int
es
out
cmp
lahf
pop
std
js
loop
popl
rcr
repz
fwait
addr16
fldt
sbb
mov
mov
in
lock
js
out
into
sub
cltd
add
loop
rorb
and
cmp
mov
push
icebp
mov
pop
jne
inc
pop
das
xor
imul
sahf
popf
xchg
push
xor
hlt
fsubrs
insb
sub
jecxz
movsb
or
js
shrl
adc
push
fsubrl
push
leave
js
pop
pop
in
iret
addr16
dec
gs
cli
inc
push
xchg
or
stos
ljmp
dec
cltd
and
mov
xchg
mov
dec
pop
dec
lcall
adc
mov
sub
fs
inc
enter
mov
mov
xchg
cwtl
stos
xchg
xchg
mov
rol
ljmp
dec
aad
loopne
addr16
xor
pop
mov
js
mov
icebp
ja
aaa
sbb
ja
jo
and
mov
es
inc
mov
pop
push
pop
loopne
push
and
cmpb
adc
sbb
ja
addb
mov
fisubs
and
idiv
int
lods
and
dec
bound
mov
pop
add
push
add
xchg
sub
fidivrl
inc
int3
movsl
jo
sub
int3
sti
pop
testl
add
mov
mov
and
dec
pop
lahf
ljmp
mov
jo
dec
mov
dec
leave
mov
mull
inc
inc
fldl
out
sbb
ret
adc
sbb
xorl
jbe
cmp
push
loop
jg
mov
negl
arpl
std
outsb
iret
in
mov
ret
es
fld
stos
xchg
pop
dec
xor
ret
xchg
outsl
sbb
sub
pusha
mov
inc
lock
les
fstpt
jnp
stc
loop
cmp
loope
dec
mov
icebp
xor
into
sbb
mov
and
lock
xchg
mov
mov
sbb
xchg
pop
fcmove
or
loopne
push
or
jb
insl
je
jb
jnp
mov
jbe
fsubl
pop
arpl
test
jae
inc
xor
cmc
aas
or
lcall
pop
inc
outsb
lahf
outsb
movsb
imul
jmp
mov
fs
mov
push
cmc
pop
mov
mov
rcr
dec
loope
sbb
shl
mov
jns
and
fildl
or
add
jl
imul
test
pop
test
andb
push
dec
jb
ret
pop
push
int
lret
jmp
out
in
dec
inc
test
mov
out
push
sub
les
mov
lret
dec
fst
fsubs
in
aad
jae
call
mov
adc
and
std
jo
ja
sahf
out
jbe
pop
icebp
lret
inc
shll
or
hlt
popa
and
pop
jp
jb
jmp
inc
push
ds
inc
mov
xchg
and
ja
adc
inc
add
int
xchg
cmp
nop
insb
dec
aaa
jno
adc
dec
push
cmp
xchg
aas
gs
ret
fbld
or
pop
ret
clc
mov
pop
dec
aad
fcmovne
adc
mov
leave
movsl
sbb
sbbl
cmc
push
pop
loope
mov
ret
add
cmp
or
insl
mov
arpl
mov
mov
in
pop
fs
mov
aad
lods
mov
jmp
mov
push
xor
pop
rolb
inc
pop
sub
rolb
jmp
lret
sub
dec
mov
lea
or
pop
in
cld
xchg
test
jmp
lods
mov
outsl
sub
pop
into
imul
mov
xchg
in
movsl
xor
sti
pop
xchg
addl
jp
add
mov
movsl
push
cmp
outsb
and
mov
pop
mov
mov
inc
shr
clc
push
inc
sarl
jo
cld
jg
rorb
or
sub
cwtl
nop
loopne
mov
sbb
add
ret
jno
pop
add
dec
adc
nop
stos
jns
cmp
sbb
leave
outsl
cld
sahf
jns
int
scas
mov
mov
test
dec
fistpll
ja
in
cmpsb
test
mov
jmp
cmp
ficomps
xlat
lcall
fwait
mov
pop
mov
push
lds
test
mov
sub
jo
pop
loopne
stos
mov
jge
xchg
mov
inc
aas
mov
xchg
dec
pop
mov
scas
mov
ds
push
cmp
inc
ljmp
push
mov
imul
fdivr
test
bound
ret
jge
fistl
dec
sbb
ds
popa
adcb
frstor
mov
inc
clc
add
loopne
cmp
js
xor
mov
jbe
es
add
sbb
add
push
jl
ja
scas
sub
jmp
aad
js
xchg
sub
mov
lahf
sbb
add
push
sub
xor
or
inc
sahf
test
or
inc
popf
in
inc
and
ja
mov
out
pop
sbb
sbb
and
mov
in
leave
daa
mov
ds
stos
sbb
add
jb
mov
andl
xchg
cmpsl
in
ja
xlat
adc
sti
fldcw
mov
add
das
sbb
scas
mul
pop
jb
mov
or
adc
lahf
push
dec
loope
imul
iret
jne
fptan
fbstp
mov
xchg
test
sarl
and
out
mov
test
lea
fiadds
or
filds
xchg
sbb
cmc
fstps
pop
xchg
mul
loopne
mov
and
pop
adc
into
xlat
adc
sbb
and
mov
aad
mov
lahf
inc
into
add
sar
cmp
shrl
arpl
fnsave
in
stos
xchg
fsubl
mov
xchg
pushf
lahf
sbb
inc
mov
xchg
cwtl
or
jmp
cli
dec
cmp
dec
mov
mov
xchg
xchg
push
add
pop
std
xor
jb
fistpll
jge
adc
shrb
sahf
lea
ret
push
mov
loopne
and
fcmovu
inc
rorl
sbbb
push
sbb
into
push
test
mov
in
fcomps
jle
lods
in
mov
dec
ss
cmpsb
push
mov
and
gs
stos
cmc
mov
push
cmpsl
aaa
ss
test
ss
mov
jno
loopne
xchg
sbb
sub
fdivr
dec
lea
call
enterw
lret
imul
pop
xchg
cmp
mov
jno
sub
frstor
adc
mov
adc
test
sarl
mov
push
push
daa
arpl
std
int
das
dec
cmp
pop
push
xor
test
mov
add
out
inc
cmp
xchg
mov
pop
mov
cld
add
add
call
scas
lret
jne
xchg
test
leave
test
ror
in
pop
and
mov
fisubs
cli
movsb
mov
xor
bound
jmp
and
dec
fnstcw
sbb
mov
repnz
jne
mov
stos
jmp
mov
stc
or
push
mov
daa
inc
pushl
gs
ret
xchg
jle
loopew
clc
mulb
adc
stos
mov
je
mov
inc
cmpsb
sti
adc
data16
cmp
mov
fidivrl
mov
imul
mov
sbb
sub
and
jecxz
xchg
fs
gs
lcall
mov
sbb
cmp
fildl
js
lret
insb
sbb
ds
fdivrs
jl
lret
jne
iret
cmp
in
and
ret
lods
mov
lds
inc
push
or
cli
cmp
rcll
js
insl
add
insb
clc
in
mov
bound
push
xchg
mov
xor
mov
jae
add
lods
insb
pushl
sub
cmpsl
push
ret
pop
std
lahf
rcr
leave
leave
clc
fsubp
mov
ss
scas
sbb
fs
jecxz
xor
inc
push
addr16
inc
mov
ja
jae
in
shrb
or
and
mov
pop
or
adc
mov
inc
push
rcll
adcb
cmp
lods
shlb
imul
imul
int
int
push
subl
icebp
mov
rclb
sub
push
daa
ljmp
xor
add
test
push
ds
or
test
mov
filds
fsubrs
sub
addb
pand
add
mov
lret
enter
fstl
xor
out
sti
outsb
mov
mov
test
popa
pop
cli
jb
pop
inc
insb
les
stos
add
lods
in
adc
sbb
jge
pop
pop
dec
mov
fstps
test
adc
scas
mov
scas
or
mov
jo
inc
int
test
sbb
outsl
xchg
jae
dec
stos
popf
je
cmpsl
loope
es
cmp
mov
fisttpll
dec
jecxz
xor
jge
lahf
testb
in
lods
notl
or
pop
sub
xor
xchg
pop
pop
cmp
pop
fisttpll
lret
in
jno
repnz
adc
in
or
js
adc
sub
mov
orl
jne
outsl
outsl
cmpsb
mov
aaa
sbb
or
out
pop
cmp
dec
idiv
dec
xchg
pusha
imul
cwtl
stos
xor
stos
mov
in
or
nop
jno
lock
adc
and
cmc
mov
movsb
cmp
adc
loop
subb
lcall
mov
sbb
scas
arpl
sub
in
xchg
jp
ja
mov
fbstp
daa
or
inc
mov
mov
cmp
cmp
arpl
mov
ret
jnp
dec
xchg
cmp
cmpb
push
or
push
pop
adc
pop
pop
in
jae
fwait
decl
mov
jp
dec
int3
andl
cmpsb
jb
imul
shrl
jp
lea
mov
push
sub
xor
dec
pop
sbbl
lea
mov
call
aad
imul
inc
sbb
jl
outsb
jmp
xchg
dec
js
cwtl
sub
mov
add
add
popf
imul
loopne
and
pop
adc
clc
movsl
sahf
les
cs
scas
jp
and
jo
sahf
sbb
aad
mov
push
insl
mov
dec
pop
jmp
sub
rcll
sub
sub
lahf
adc
jnp
cmp
mov
xor
and
cmp
test
adc
out
inc
add
sub
xchg
testl
out
jno
or
gs
and
pop
subb
bswap
sarl
into
call
dec
sbb
loopne
jle
and
cmpsl
xor
cmp
leave
mov
ljmp
fimuls
nop
push
cs
mov
aas
jp
dec
xchg
add
divl
aas
or
loopne
cmp
inc
out
pop
pop
lahf
aas
or
and
jge
sub
pushf
mov
loop
xlat
ret
xchg
cmp
pop
in
scas
and
mov
fiadds
jmp
inc
and
jnp
iret
jnp
or
or
jle
clc
lahf
aas
test
jo
test
fnstenv
mov
add
or
adc
loope
les
or
shlb
pop
mov
sahf
int
push
or
cmp
xor
dec
dec
adc
pop
xlat
pop
or
sub
test
or
push
dec
scas
or
cmpsl
sarl
lods
pop
clc
and
shlb
adc
leave
data16
and
sbb
dec
sarb
subb
xchg
jns
out
cltd
aaa
fsubp
mov
cmpsl
aad
and
lret
push
mov
or
movsl
sub
popa
xlat
add
call
outsl
ret
mov
movsb
stos
sti
cmovg
xchg
or
lods
sub
mov
loop
sahf
xor
xor
dec
add
ret
aaa
out
test
adc
loopne
inc
add
sub
push
pop
roll
inc
shrb
inc
jp
push
push
mov
cmp
test
ds
push
lds
loopne
inc
lahf
cmp
jecxz
shrl
pop
enter
test
test
dec
rcll
jmp
cmc
push
adc
loope
into
jl
imul
jnp
mov
or
mov
imul
push
pop
gs
repz
xor
mov
or
jb
into
shlb
xor
cmp
jno
rclb
outsl
cmpsb
iret
pushf
cmp
push
add
push
lods
or
aam
ror
out
dec
cmp
push
and
add
lock
movsb
movb
pop
push
xchg
shlb
mov
lods
xor
andb
cltd
outsl
lea
pop
and
inc
aas
test
or
es
pop
test
out
ret
mov
mov
bnd
stos
into
jb
jp
pop
adc
jg
lea
pop
pop
jno
nop
mov
out
lea
pop
test
mov
ljmp
sbb
or
mov
adcl
add
cmpb
pop
hlt
pop
sahf
dec
ret
jnp
dec
or
xor
lds
lahf
mov
and
insl
inc
sbb
cli
inc
fbld
mov
sub
push
jmp
push
std
ja
or
aaa
pop
lret
dec
jnp
inc
vshufpd
scas
arpl
or
xor
imul
mov
repnz
testb
mov
das
in
jecxz
cmp
mov
fucomip
xor
fidivrs
ss
adc
pusha
cmp
mov
orb
push
outsl
adc
ficoms
or
add
and
jp
aas
cld
cmp
loop
push
sbb
adc
mov
and
xor
or
xchg
cmp
mov
fidivs
mov
loop
jle
nop
jnp
mov
or
mov
push
cmpsl
inc
fnstsw
popa
das
add
repz
xor
std
addr16
fnstcw
dec
test
and
inc
nop
push
sbb
jae
push
out
fnstcw
fdivl
ss
pushf
pop
and
mov
mov
cmp
jle
inc
aam
aas
xor
jae
shll
cwtl
cmp
xchg
jae
ret
dec
or
and
inc
aaa
push
jmp
out
int
stc
test
pop
or
mov
pop
loopne
dec
mov
clc
jge
out
sbb
pop
jo
repz
call
enter
cltd
mov
in
jae
mov
shld
mov
popa
scas
sti
rorl
aas
dec
loopne
ficomps
jge
jae
dec
mov
mov
adc
ljmp
mov
push
jp
xchg
sbb
xchg
sbb
mov
sub
sub
cmp
out
mov
cltd
mov
jns
mov
add
int3
scas
lock
aam
push
jecxz
mov
sub
icebp
addr16
mov
mov
jmp
imul
andl
and
jns
mov
jecxz
test
mov
cmc
xor
push
push
int
jmp
in
aaa
xchg
sahf
adc
dec
push
sbb
insb
imul
mov
mov
add
ljmp
aad
imul
ljmp
cwtl
lret
in
jle
cld
pop
dec
fucom
fs
ds
hlt
loop
add
push
cmc
push
int
cmp
jmp
add
mov
add
mov
inc
push
mov
pusha
scas
rcrb
xchg
aam
mov
mov
fidivrl
and
add
jbe
shll
fnstsw
mov
push
pop
call
addr16
or
dec
stos
adc
incl
scas
call
xchg
outsb
cmp
xor
adc
addr16
or
xchg
mov
into
fnstsw
pop
repnz
push
and
push
mov
sbb
les
jo
mov
jl
push
fdivr
jl
mov
push
mov
lcall
sub
dec
dec
jo
xchg
enter
cmc
aas
xorb
divb
in
and
and
mov
aad
jmp
pushf
test
rcr
stos
xor
dec
xchg
bound
mov
loope
xchg
or
push
mov
jmp
mov
mov
add
pop
daa
movsl
into
and
jp
xor
cmc
inc
sbb
xchg
dec
inc
je
nop
cltd
inc
push
sbb
popa
push
fnstsw
xchg
test
imul
in
ljmp
dec
mov
push
test
es
pop
mov
pop
push
vandps
jmp
dec
push
mov
xchg
pop
rcll
imul
push
shl
lods
lea
jg
cmp
and
insl
sti
push
insl
sbb
add
shll
pop
enter
jecxz
or
int
movsl
pop
out
sbb
or
daa
mov
push
adc
xchg
add
mov
pop
shrb
fdivr
inc
cmp
inc
ss
gs
add
adc
lcall
icebp
push
xchg
daa
jge
lock
in
inc
xchg
xor
outsb
cwtl
out
mov
shlb
cmc
lcall
jecxz
das
sub
idiv
ret
and
push
imul
pushf
lret
std
lods
rcrb
hlt
popa
adc
rclb
pop
xchg
mov
scas
rorl
mov
inc
jmp
outsb
jbe
xor
loopne
out
mov
push
mov
jl
sub
sarb
and
inc
adc
sbb
xchg
inc
aas
ficompl
jns
cld
push
fstpt
mov
gs
sti
jno
pop
loope
xchg
xor
stos
icebp
mov
sub
lea
add
adc
dec
lret
lea
dec
xchg
js
rorl
adc
sub
push
adc
lock
inc
rolb
add
push
mov
in
add
mov
cmp
in
adc
sti
or
cmc
pop
popf
lock
add
xor
std
sbb
js
push
sar
lods
cltd
mov
cmpsl
mov
pop
cmp
hlt
pop
add
jnp
scas
adc
mov
pop
in
cltd
loop
cmpsb
lock
pop
test
xchg
fs
dec
and
pop
and
in
mov
stos
shll
pop
ss
mov
std
dec
sub
inc
in
scas
jns
lock
lods
imul
cmp
mov
cmp
outsb
xor
lcall
cld
mov
int3
lea
daa
daa
push
push
out
jb
loope
or
mov
xor
xor
lret
je
mov
push
mov
sti
cmp
cwtl
dec
negb
cmp
adcl
jne
pusha
adc
sbb
aad
pop
es
adc
or
xchg
ret
xor
mov
frstpm(287
push
adc
adc
pop
mov
mov
ror
out
mov
mov
icebp
mov
bound
xor
insb
mov
jge
and
rcrb
add
inc
mov
dec
fisubs
rcr
pop
mov
stc
mov
dec
test
and
andl
lret
in
aad
stc
mov
stos
dec
sbb
inc
push
mov
scas
sti
in
mov
jp
test
ret
push
les
or
push
push
cli
data16
mov
xlat
xchg
aad
push
cmc
push
rcr
adc
jns
dec
arpl
das
int
out
add
pusha
inc
sub
js
out
and
insb
shlb
hlt
mov
scas
cmpsl
adc
add
inc
xchg
jle
aas
ja
inc
movsb
je
add
cs
cmpb
repnz
cmp
cld
lea
xchg
and
divb
add
adc
hlt
lahf
jecxz
jp
sbb
cmp
inc
push
popa
ss
cmp
jge
pop
fadds
daa
aam
xchg
mov
enter
orb
mov
and
test
es
jne
and
pop
pop
jb
mov
mov
aad
ss
push
fstps
filds
mov
inc
mov
dec
andb
fnstsw
jmp
pop
inc
ret
movsb
rcrb
sti
outsl
inc
test
fstl
pop
jg
iret
sbb
push
sub
std
xchg
and
jmp
in
add
imul
js
add
sub
lret
mov
adc
es
and
aas
add
sbb
sbb
mov
stc
mov
enter
sub
sahf
mov
lods
loop
xor
xchg
mov
jp
stos
add
jne
xchg
incl
cmp
in
lods
or
push
aam
jmp
daa
adc
ficompl
stos
inc
sbb
adc
cmpsb
mov
ficoml
and
in
popf
addr16
xlat
pop
or
push
rolb
movsb
popa
je
out
push
out
sub
out
lock
rcrl
cwtl
in
and
sbb
mov
stos
add
xor
cs
pop
xchg
andb
repz
or
xchg
jecxz
push
lock
mov
ss
scas
add
rorl
xor
add
adcb
mov
inc
aas
add
sub
test
adc
jmp
sub
cmp
push
popl
jns
pushf
inc
int3
cmp
out
add
sbb
push
cli
lods
lret
sub
mov
or
subl
pop
mov
std
lea
insl
cmp
sarl
repz
jb
jg
sbb
data16
jae
pop
sbb
lahf
pop
pop
sub
rorl
cltd
setg
jg
inc
pushf
sub
push
sahf
in
mov
mov
stc
aad
sbb
and
lcall
sbb
jp
xchg
fdivp
cmpsb
movsb
jne
push
cwtl
push
rorb
lods
arpl
inc
push
call
mov
xlat
sbb
jg
fldl
dec
xchg
sti
rcrl
push
push
imul
stc
fsubl
sbb
jecxz
xchg
cmp
test
dec
and
sub
and
fldenv
mov
jecxz
int
mov
or
jno
xchg
add
pop
cli
data16
in
sti
cld
dec
outsb
cmp
lds
lcall
cmc
push
les
ret
sbb
add
xchg
cmc
mov
scas
sub
mov
sbb
test
pop
pushf
loopne
pop
out
cmpsl
arpl
ret
or
mov
movl
rolb
orl
jg
xchg
cmpsb
adc
dec
inc
in
iret
cs
shlb
aam
adc
cmp
sarl
es
pop
in
inc
sbb
cmp
jae
fs
jle
test
xchg
and
adc
cltd
rorb
pop
cli
xchg
jne
aaa
divl
mov
xor
lods
adc
or
dec
into
les
mov
mov
dec
inc
test
dec
inc
dec
xor
push
call
and
xchg
out
inc
cmc
mov
mov
mov
es
jecxz
sub
call
adc
and
jo
sbb
rcrl
mov
jmp
mov
in
nop
ja
pop
xchg
int3
xchg
ret
jo
mov
insl
lods
scas
xor
rorb
cmp
cmp
push
and
pusha
sbb
push
ss
scas
cmp
dec
std
stos
or
lret
mov
repz
scas
and
fists
adc
ja
mov
xlat
xor
sbb
inc
jmp
test
xchg
and
les
loope
jns
das
mov
loopne
add
inc
jge
incb
push
dec
add
push
cmp
push
outsl
das
in
fwait
dec
mov
mov
aad
cld
push
add
cmp
pop
test
ret
in
xchg
aaa
cmp
dec
xchg
xchg
xor
pop
in
dec
sbb
pop
popf
stos
sarl
popf
and
mov
aad
mov
icebp
adc
in
mov
sarl
add
push
mov
inc
pusha
add
test
pop
mov
int3
mov
ror
push
movsl
fwait
int3
lds
xchg
xor
and
fisubrs
sbb
sti
dec
cli
cmp
inc
subl
in
cltd
aad
xchg
jp
mov
mov
sahf
gs
or
xor
fs
mov
push
jb
aaa
add
lds
xor
movsl
mov
cmp
cmp
xor
leave
js
sbb
arpl
popa
mov
pop
int
pop
xor
xorb
or
mov
aad
mov
cmpsl
xchg
rclb
xor
out
inc
iret
gs
xor
mov
mov
cltd
scas
add
pop
out
mov
lods
push
sti
adc
jl
xor
nop
lea
fs
jb
add
xor
hlt
xor
sbb
mov
xchg
xchg
push
add
lods
push
mov
cmpsb
mov
mov
sar
clc
ret
icebp
adc
xor
xor
jne
push
jle
mov
add
nop
shll
outsl
lock
repz
hlt
cltd
andb
ret
test
mov
cltd
mov
sub
aas
iret
dec
mov
xchg
pusha
push
add
xor
jb
mov
or
idivl
nop
fisttps
add
addr16
push
out
in
clc
imul
arpl
mov
and
cmc
dec
push
and
jns
inc
leave
push
sub
mov
mov
xchg
testb
dec
rclb
xchg
lahf
fisttps
mov
scas
sub
push
std
call
cmp
cmpb
jg
ds
lods
mov
sub
rorl
es
bound
stos
repnz
cmpsb
mov
pop
fcompl
push
adc
mov
in
mov
es
push
push
or
clc
xor
cmp
pop
jb
aad
divl
pusha
xor
int
nop
inc
fstpt
cmp
xor
test
jge
cmp
mov
mov
xor
scas
ss
rol
inc
jmp
or
dec
inc
orl
ljmp
ret
and
jae
sbb
sub
cs
adc
mov
sub
cmpsl
and
sub
int3
jmp
rorb
mov
xcrypt-ecb
cmpsl
lret
in
cs
dec
ja
dec
or
mov
xchg
mov
outsl
movsb
fsubl
jne
mov
or
mov
dec
add
jns
inc
push
imul
dec
insb
fwait
xchg
lds
push
adc
or
int
cmp
mov
cmc
rcr
and
and
add
in
psllq
xchg
jg
mov
insb
mov
jmp
xor
mov
iret
mov
inc
mov
ret
pop
inc
imul
adc
cmp
mov
addr16
popf
fmull
xor
xor
int3
test
stos
gs
aam
ret
imul
movsb
shrl
ja
fwait
and
push
out
add
or
loop
xchg
ja
mov
push
outsl
jecxz
mov
aam
jae
ret
scas
imull
notb
mov
pusha
xchg
dec
xchg
mov
lahf
jmp
rcll
decb
xchg
or
cmp
xchg
inc
out
xlat
in
in
decl
subl
out
cmp
lds
popa
mov
aam
das
push
addr16
mov
sbb
jle
and
adc
mov
ficoml
popa
and
in
jae
adc
aad
add
sarb
mov
xor
data16
or
in
xlat
xor
lret
addr16
mov
add
sub
repz
dec
test
add
push
adc
cmp
jg
cmp
mov
lods
xchg
test
ljmp
popf
out
mov
int
mov
clc
mov
sub
ljmp
les
scas
mov
sub
push
inc
xor
ficoms
xor
popl
sbb
out
sbbl
pop
sbb
jo
subb
mov
pop
loop
sbb
mov
xor
push
mov
out
jp
cmp
stc
insb
leave
mov
fcmovnu
inc
fistps
dec
in
and
jg
jnp
stc
test
cmpsb
rcll
ljmp
insb
and
push
sahf
insb
and
and
pushf
pop
rcrb
cmp
mov
int
sbb
cmp
add
pop
push
or
cli
js
dec
ds
roll
jno
jge
or
mov
mov
pop
gs
dec
sahf
cltd
lret
cmpsl
cmp
dec
das
push
fdivl
pop
ss
cmp
sbb
jmp
mov
int3
push
cmp
rorl
aad
fstpl
addr16
aas
sbb
sub
sub
dec
inc
push
imul
mov
les
cmpsb
adc
popa
sahf
inc
mov
or
and
dec
loopne
add
lcall
fxch
jg
mov
xor
jns
ds
jl
mov
cmpsb
pop
pop
js
jecxz
push
aam
ficoms
xchg
add
mov
jne
test
xchg
stos
cs
in
into
faddp
sub
icebp
xchg
fs
xchg
jbe
and
sti
scas
cmp
js
push
rcl
insl
nop
xchg
and
xchg
inc
jnp
loope
and
cltd
cld
stos
cmp
cli
popf
sbb
je
jecxz
push
jecxz
mov
and
and
lahf
xor
mov
js
leave
das
cmc
jae
sti
mov
xor
jp
pop
andb
lret
insb
and
xchg
in
or
push
xor
cs
mov
in
dec
in
int3
mov
jmp
in
outsb
jne
ljmp
pushf
mov
aaa
scas
test
cltd
add
pop
in
jnp
mov
inc
sti
stc
dec
fnsave
inc
insl
cmpsb
out
cld
out
pop
cmpb
ret
mov
mov
mov
mov
js
xor
addb
jmp
push
jmp
test
jno
sub
cmpsl
mov
xchg
sbb
call
adc
int
mov
jle
lret
fiaddl
lahf
dec
mov
push
sbb
js
lret
sbb
push
jge
js
jbe
mov
inc
mov
sub
ficompl
add
add
jp
add
pop
cmp
mov
mov
int3
push
pop
test
sub
cmp
mov
test
ljmp
fsubrl
rcl
sub
shlb
pop
jg
push
fidivs
pop
inc
jno
nop
scas
push
test
jae
or
jo
cmovbe
into
and
cmp
xchg
cwtl
repz
in
leave
or
push
add
scas
mov
sub
xor
es
jge
mov
inc
ficoml
data16
mov
add
mov
aas
xchg
mov
loope
push
cmp
mov
jmp
jb
scas
mov
inc
xor
cmc
jp
repz
dec
cltd
insl
imul
mov
int
test
sbb
or
rclb
push
dec
sub
cmpsl
stc
fxch
push
mov
xor
es
push
xor
pop
aas
and
test
daa
jl
bound
sarb
stos
or
mov
insb
sub
lods
int3
scas
popf
jns
jno
rcll
in
pusha
stos
push
fstp
pop
cmpsb
loope
test
push
insb
pop
mov
jns
inc
mov
cmp
jp
stc
adc
daa
lahf
int
pop
dec
pop
xor
fwait
add
sbb
cmp
bound
inc
enter
lods
push
mov
pop
dec
ret
pop
pop
ror
add
mov
add
dec
sti
jp
mov
cmp
mov
push
mov
mov
xchg
sub
adc
ret
movsb
cwtl
loop
pop
cmp
mov
xlat
cmp
sbbl
inc
into
adc
mov
and
out
xlat
cmp
jecxz
out
and
or
lahf
or
inc
fadds
mov
lret
xor
orw
repz
ljmp
xchg
sbb
addr16
lock
inc
jg
aaa
or
cmp
sub
xchg
mov
fisubrs
pushf
int
xor
cli
push
push
pop
jbe
add
dec
pop
xor
jecxz
adc
shll
data16
fsubrl
pop
xor
push
popa
stc
and
adc
dec
dec
fldenv
fs
scas
int
scas
xchg
mov
pop
sub
add
mov
dec
rcr
add
add
stos
lcall
icebp
fsubr
rcr
shrl
push
xor
xor
gs
cmc
loopne
cwtl
xchg
shll
movsb
gs
mov
ljmp
push
outsl
adc
and
fs
cmpsl
fbstp
lock
test
imul
out
sbb
imul
jae
aas
add
push
fsubrs
cld
pop
aam
pop
mov
and
je
repz
and
out
enter
bound
hlt
sbb
lcall
jl
leave
mov
out
pop
shrl
pop
mov
add
clc
push
pop
dec
lock
sahf
mov
pop
pop
pop
mov
mov
inc
dec
mov
mov
mov
dec
cli
enter
push
roll
adc
cs
cmp
fs
push
pop
ljmp
pop
outsl
xlat
mov
jg
cmp
lods
fs
sarl
xchg
in
les
es
std
fstpl
dec
sub
daa
sbb
mov
sti
les
pop
xor
and
pusha
loop
ret
fmul
shl
or
and
push
mov
jnp
fwait
cmpsl
insb
cmp
jmp
adcb
test
enter
shlb
pop
or
sub
push
rclb
js
jecxz
mov
push
pop
cmpsl
xchg
cli
inc
and
test
je
mov
ja
add
imul
mov
out
addr16
mov
or
mov
dec
xchg
lods
insl
adc
mov
push
xchg
test
div
cmp
loop
add
sub
imul
daa
dec
popa
insb
je
fstps
rol
ret
jge
int3
frstor
fimuls
clc
push
xchg
insl
out
push
and
arpl
mov
jp
add
sti
sub
and
into
mov
sub
iret
push
cmp
inc
imull
dec
mov
jmp
fwait
cmp
sub
dec
mov
lret
inc
push
mov
mov
cwtl
mov
icebp
out
pop
sbb
mov
stos
and
dec
mov
into
sahf
repz
out
imul
pop
dec
arpl
cld
pushw
pop
shl
repz
mov
mov
jl
adcl
or
lock
xor
and
lahf
mov
sbb
cwtl
and
es
xlat
cmp
iret
imul
mov
sub
sbb
aaa
pop
lcall
cltd
xor
push
lcall
and
mov
pop
xchg
movsb
xlat
jle
add
mov
xchg
jnp
xlat
into
adc
insb
xchg
add
adc
divl
out
xchg
mov
sti
int3
sbb
test
in
or
xor
push
cwtl
sbb
adc
out
addr16
pop
jmp
pop
or
xor
xchg
jb
into
ja
popa
enter
repnz
pop
out
int3
inc
in
mov
gs
das
sahf
adc
repz
push
xchg
pop
lods
mov
scas
dec
test
xchg
popf
ja
ret
push
sub
mov
xchg
add
mov
adc
inc
mov
jle
inc
js
gs
call
sbb
jb
mov
test
pop
and
ljmp
mov
sub
insl
push
ret
or
cmp
addr16
imul
mov
pushf
cwtl
cmp
mov
movsb
mov
sub
xor
cmp
or
xchg
mov
xchg
push
ret
pop
je
push
jo
mov
xor
mov
jne
lods
movsl
jns
lds
xchg
shlb
iret
ficoml
call
and
pop
clc
out
mov
sbb
add
pop
fdivs
in
jmp
adc
in
iret
gs
in
adc
stos
sub
leave
lret
pop
cmp
outsb
inc
popf
ja
mov
popf
and
add
xor
mov
ret
hlt
les
jno
sbb
xchg
sub
xor
jmp
xchg
pop
jg
pop
xchg
sbb
stos
sub
push
dec
pusha
movsl
sbb
xchg
icebp
setp
push
aam
and
out
jns
jae
popl
push
push
xrelease
shlb
rolb
es
repz
lock
cmc
jg
sbb
in
cmp
enter
cmpsb
and
jns
inc
sub
add
sarl
cltd
insl
jle
xchg
shlb
outsl
dec
lock
fisubl
insl
jge
inc
fldt
popf
mov
bswap
xorl
sbb
aad
push
jl
out
out
mov
sbb
push
add
mov
stos
rolb
mov
fstpl
add
das
push
lock
loop
cmp
or
shl
and
add
je
mov
mov
mov
lods
mov
gs
repnz
inc
xchg
sub
fdivl
push
test
push
ljmp
test
pop
xchg
rclb
pop
daa
or
pop
out
xor
jg
xor
sub
loope
mov
js
sbb
loope
mov
jo
inc
rcrb
sub
jg
add
stos
jbe
ret
in
xor
or
xlat
xchg
outsb
idivb
shlb
jbe
xchg
push
cmp
push
push
es
xchg
push
mov
mov
in
rorl
fadd
mov
mov
stos
test
push
dec
mov
cmp
jae
daa
add
cmpsb
push
jge
xchg
addr16
xor
out
xchg
jno
sub
pop
insb
hlt
stc
sti
pop
sub
cli
jge
adc
out
mov
cmp
adcl
jge
push
jmp
push
cld
inc
clc
xlat
loope
jo
ja
xchg
imul
out
js
push
dec
sar
inc
lcall
push
xor
xchg
rcl
pop
dec
push
sub
jbe
in
xchg
push
mov
xor
out
pop
add
data16
test
and
rcrl
lcall
sub
inc
test
xchg
fisttps
and
test
jl
xchg
inc
inc
mov
jmp
dec
xor
and
sub
mov
dec
push
pop
mov
mov
dec
and
clc
xchg
loope
insl
ds
mov
aad
lods
lods
mov
xchg
mov
xor
add
repz
dec
jp
cwtl
mov
loope
sbb
or
add
jb
jae
xorl
clc
sti
inc
into
push
jno
lods
or
push
fisubl
and
fnsetpm(287
daa
pop
push
das
popf
test
sbb
or
push
cli
test
sbb
scas
push
jl
rol
and
fildll
leave
int
stc
adc
addl
fs
mov
or
dec
hlt
fldl
push
and
arpl
mov
mov
mov
dec
inc
add
aad
sbb
fmull
lcall
adc
movsb
into
int3
cmpsl
in
xchg
sub
xor
rol
fisubl
ljmp
jne
sub
andl
popf
xlat
popf
and
pop
and
cmp
nop
jae
incb
je
push
pop
lds
xchg
cltd
bound
jnp
ret
adc
in
xor
int3
stc
sub
incl
pop
lret
mov
jecxz
js
cld
lods
and
movsl
fisubl
mov
jb
imul
mov
cmp
pop
in
test
loop
fcoms
hlt
push
mov
imul
cli
pop
cmc
cmpsl
sbb
adc
xchg
push
mov
inc
shrb
fidivs
sbb
dec
mov
or
inc
jecxz
dec
rol
mov
in
ret
pop
ss
pop
xchg
mov
in
push
adc
dec
pop
jmp
adc
bound
repnz
ds
mov
inc
push
pop
iret
xor
add
ret
in
cltd
xchg
rorl
cli
jmp
jae
cli
cmp
xor
cmpsb
out
in
inc
xchg
push
cmp
outsb
push
mov
pop
mov
xorb
add
lods
leave
jae
lods
das
enter
mov
data16
pusha
test
cmp
adc
xor
jns
mov
fdivs
xor
repz
loop
in
sbb
or
xchg
mov
dec
pop
sti
jp
lret
ja
mov
stos
sbb
cltd
in
or
sti
add
ret
stc
inc
inc
fisttps
or
xchg
mov
int3
loopne
sub
sub
fistpll
pop
lds
xchg
mov
add
sbb
mov
inc
sarb
adc
stos
cmp
daa
push
sbb
and
int
jns
mov
jns
into
or
dec
push
stos
lds
mov
stos
push
lea
jo
js
xor
sub
rorl
pop
dec
dec
sub
sub
push
pop
add
jnp
into
std
xchg
loope
cmc
jge
mov
in
and
and
xor
or
adc
scas
push
lea
mov
les
jmp
xchg
jmp
xor
mov
sbb
into
add
shlb
lods
xchg
sub
jo
inc
push
push
cs
out
dec
add
cmc
out
andb
cwtl
cmp
cltd
add
or
adc
sub
jmp
mov
xchg
nop
in
jmp
and
mov
insl
jns
dec
add
adc
popa
mov
mov
dec
sbbb
lret
repnz
dec
dec
sub
in
mov
dec
scas
xchg
mov
sub
pop
push
sub
lea
subb
cmpsb
popf
ficoms
or
inc
adc
mov
inc
mov
lock
loopne
push
bnd
ljmp
add
ljmp
xor
fstps
pop
adcb
decb
fstpl
cwtl
movb
lcall
sbb
lods
jnp
repz
fnsave
xor
jo
cwtl
aad
dec
fwait
test
or
leave
sub
and
inc
mov
pop
pushf
mov
inc
adc
or
test
iret
lahf
cwtl
cli
cmp
xchg
sbb
cwtl
and
add
mov
movsb
lds
popf
adc
sub
xchg
and
repz
aaa
test
or
sbb
call
insl
clc
test
ret
inc
dec
ficompl
inc
fsubrl
pusha
ds
stc
sbb
loop
in
aam
mov
mov
pop
aas
push
mov
xchg
mov
or
addr16
orl
aad
or
mov
stc
iret
jmp
fldenv
xor
sub
call
int
outsl
imul
jo
ret
data16
jecxz
and
cmpsl
es
lcall
mov
xor
popf
or
pop
lcall
pushf
dec
xchg
test
adc
inc
ficoms
std
adc
or
mul
xor
or
loop
mov
es
ds
adc
aas
sbb
dec
fcmovnu
mov
ss
das
out
cmpsl
call
xor
fidivl
and
cld
scas
jle
pushf
or
mov
jp
xor
scas
add
popa
nop
pop
dec
pop
adc
cld
sbb
inc
fisubrl
outsl
cmpsl
mov
insb
jo
xchg
lds
add
cmc
mov
cmpsb
pop
popa
fcoms
inc
js
mov
and
scas
dec
adc
iret
mov
sarl
xor
push
out
jle
imul
cs
stc
mov
inc
xor
sbb
dec
lret
sbb
jbe
invd
fwait
cmp
sbb
cmp
outsl
xor
add
mov
insl
call
add
sbb
lea
adc
mov
add
cmp
jp
psubusb
push
and
aad
jo
fdivrl
add
mov
fildl
gs
adc
push
fiaddl
adc
adc
nop
mov
xor
mov
loop
ret
test
jno
cmp
inc
push
push
xchg
ljmp
sub
lahf
mov
hlt
daa
ficomps
adc
mov
popf
insb
mov
and
inc
jo
lret
jmp
jl
scas
dec
clc
mulb
sbb
fs
imul
fnstsw
ud2
cmp
lods
xor
xchg
out
aad
dec
xor
in
and
sarl
mov
aaa
xor
lahf
sub
jbe
sbb
mov
and
fs
into
frstor
add
push
js
xlat
sbb
jecxz
and
inc
pusha
jecxz
push
loop
or
add
das
jge
cmp
cmp
outsl
xchg
xchg
lods
hlt
and
iret
dec
ljmp
outsl
pop
pop
inc
leave
inc
repz
jge
ss
sbb
insb
inc
and
into
xchg
ljmp
mov
stos
mov
subl
sti
push
clc
hlt
loopne
enter
test
jg
out
and
add
repnz
mov
xchg
ret
sub
repz
and
pushf
scas
sbb
lcall
cmp
sub
int
add
inc
fwait
cmp
sub
repnz
jbe
lret
sub
xlat
test
dec
lods
jne
or
fadds
fbstp
pop
dec
out
jns
inc
pop
and
out
mov
jbe
je
jae
mov
frndint
sahf
inc
mov
stos
outsb
mov
test
fisubrs
jbe
push
jae
jge
cwtl
inc
aas
dec
jo
push
jge
jmp
test
outsb
call
scas
jo
sti
fwait
adc
mov
mov
fnstenv
mov
hlt
sbb
sarb
mov
jg
repz
data16
adcb
push
add
rcll
mov
push
jecxz
lcall
into
dec
cmp
push
hlt
aas
inc
mov
mov
cmp
push
cltd
lds
lea
mov
xor
push
fistpl
test
jne
jl
sbb
mov
pusha
inc
dec
and
ja
outsl
adcb
pop
jge
dec
mov
or
lods
out
je
sbb
mov
out
repz
das
das
or
sbb
lcall
xchg
lods
mov
pop
incl
cmp
push
or
sahf
cmp
jne
jne
sub
out
rolb
mov
lods
das
ljmp
bndstx
push
ret
popa
lahf
xor
inc
jnp
sbb
scas
xchg
pop
mov
xchg
fwait
lret
bound
inc
aad
add
mov
cmpsl
inc
in
pusha
add
sub
fwait
popa
cltd
or
push
inc
imul
aad
js
pop
test
push
adc
ds
ss
aas
dec
mov
ficompl
bound
fstpl
sub
ja
xchg
shll
ljmp
stc
mov
inc
jmp
test
jl
rcl
jns
ja
sub
push
mov
or
mov
lret
subl
outsl
cmpsl
mov
lret
int
sbb
cmp
aas
in
lcall
jns
in
add
loope
stos
push
jp
pop
or
out
fbstp
ljmp
fidivrs
or
add
ja
mov
and
or
xor
xorl
fdivrl
movsl
jbe
lock
aam
jne
out
sbbl
dec
cmpsb
push
outsb
cmp
call
incb
stos
je
andl
cmpsl
pusha
insl
lea
mov
int
dec
or
es
daa
sbb
lods
scas
test
jge
lods
insl
or
test
inc
mov
mov
mov
mov
or
or
sub
loope
jnp
add
das
pushf
and
in
fwait
xchg
sbb
xchg
or
cmp
xor
loope
hlt
in
pop
mov
or
loopne
jmp
push
xor
bound
or
stos
push
bound
test
inc
jmp
icebp
out
loopne
inc
scas
sbb
push
fisubrl
jno
push
mov
outsb
lcall
add
xorb
and
inc
jns
inc
xor
and
es
push
pushf
les
popa
mov
and
rorb
inc
push
stos
rcl
mov
jge
lds
enter
mov
xor
jge
mov
push
sti
scas
pop
xor
sub
out
popa
mov
test
or
sbbl
fwait
xchg
cmp
pop
cmp
or
stos
sbb
scas
gs
and
inc
xor
aaa
mov
jb
cmpsl
and
rorl
or
sub
push
dec
popf
xchg
stc
out
jo
push
jno
lods
rcll
jae
in
lcall
in
pop
popa
mov
pop
scas
hlt
adc
dec
mov
mov
lods
imul
mov
push
dec
inc
jmp
nop
bound
bound
mov
scas
push
mov
sub
sub
mov
aas
xor
nop
rorl
fdivp
cmpsl
lahf
stc
and
adc
mov
int
sub
sbb
stc
xor
push
xchg
mulb
enter
fs
int
ss
mov
cmp
sbb
mov
cmovae
cmc
push
mov
nop
push
jo
repnz
addr16
dec
cltd
sub
cmp
fiaddl
fildl
aad
push
xchg
xchg
out
stos
fcoms
jb
fs
mov
test
push
shll
mov
aad
mov
insb
xchg
nop
out
insb
and
pop
ret
prefetcht1
test
jle
lret
jb
mov
cmc
dec
test
outsb
xor
xchg
fidivl
xchg
cmp
subb
mov
cmp
imul
push
or
and
push
and
test
rcrl
sub
jge
lret
lods
enter
dec
add
in
insb
and
daa
jmp
je
xor
loope
push
xchg
push
lea
mov
or
push
cmpsb
jge
cmp
and
adc
xor
and
mov
sbb
lods
les
xchg
or
mov
jo
gs
add
sub
fucomi
lds
jp
jo
insb
push
sub
xchg
jmp
das
loope
fidivl
loopne
ret
mov
xchg
push
fwait
adc
inc
les
ss
in
jl
jo
jecxz
push
lret
iret
mov
inc
enter
aaa
in
pop
movb
icebp
xor
xor
shr
sahf
pop
and
xchg
adc
push
add
outsb
lahf
mov
daa
xor
sub
scas
or
fldl
loope
adc
mov
test
pop
adc
test
dec
or
shrb
fldenv
sbb
push
mov
lods
xor
lret
out
fidivrs
push
stos
insb
add
into
pusha
repz
popa
mov
adc
fidivs
sub
adc
test
adc
sbb
aas
mov
push
xchg
outsb
jne
out
add
std
lea
xchg
in
cmpsl
cmp
ficoms
push
push
stc
mov
and
imul
mov
jmp
test
dec
rorl
mov
movsb
sbb
xchg
pusha
sub
mov
push
dec
int3
gs
sar
stos
fimull
pop
cs
add
inc
cmpsb
fists
test
cmp
mov
les
add
jns
push
mov
lea
mov
mov
inc
jmp
dec
mov
mov
inc
movsl
daa
or
lahf
mov
mov
test
daa
or
dec
add
ss
pop
mov
sbb
movsb
test
inc
and
sub
aam
inc
hlt
push
imul
data16
aas
pop
popf
shr
lret
cmpsl
adc
push
cli
inc
aad
add
sti
sub
sbb
jo
rcl
jne,pn
xchg
push
aas
gs
jmp
push
test
inc
xchg
mov
fistpll
dec
aam
mov
int3
push
jg
inc
sbb
mov
push
mov
xor
push
aam
pop
push
fists
mov
push
je
jle
mov
adc
jecxz
xor
sub
jo
icebp
cs
mov
cmp
inc
rcrb
pop
cmp
push
out
leave
mov
jnp
in
fs
je
test
ss
push
jg
push
cmp
push
pop
dec
pop
or
pop
pop
cld
mov
mov
mov
data16
lahf
icebp
js
jecxz
cld
jp
jae
mov
movsl
pop
pop
or
outsb
pop
fs
lock
xchg
jl
lea
jnp
lods
dec
outsb
and
in
leave
ds
push
mov
imul
mov
jo
or
roll
mov
lret
ret
sbb
inc
nop
pusha
sahf
mov
fbld
dec
cmp
test
dec
jg
xor
add
pop
int3
mov
dec
loop
lcall
shll
test
into
imul
sub
loopne
and
xchg
jp
shrb
scas
xchg
or
loopne
aam
pusha
sbbl
fwait
adc
mov
outsl
dec
frstor
add
xor
movsl
or
in
ficompl
jo
in
sub
dec
clc
pop
cmpsl
loop
add
pusha
or
inc
shr
pop
mov
fnstenv
sbb
mov
stos
cmpsl
or
mov
mov
cmpsl
lret
clc
subb
inc
lock
or
sbb
gs
push
adc
dec
jecxz
or
mov
mov
mov
mov
sbb
xchg
and
inc
jnp
mov
pusha
ss
pop
out
jecxz
adc
cmp
xchg
pop
push
inc
sub
inc
mov
mov
xor
repz
fucomp
sub
or
and
xchg
int3
jb
test
or
push
mov
push
lea
sub
and
mov
cmp
icebp
xchg
sbb
jle,pt
inc
arpl
inc
mov
cmp
test
std
xchg
dec
insl
push
insb
pushw
mov
pop
fldenv
cld
pop
pop
cmpl
pusha
loop
dec
push
mov
jbe
outsl
sub
mov
pop
jno
push
inc
mov
out
pop
loop
popf
sub
mull
inc
pushf
lods
adc
ret
cltd
mov
daa
jl
pop
jg
lock
scas
mov
scas
lock
xchg
or
loop
or
pop
inc
in
gs
rcrl
sahf
mov
test
inc
cmpsb
imul
adc
sub
pop
sub
int
jecxz
mov
stc
shll
loop
divl
loope
cmp
outsl
fcoml
dec
cmpsb
dec
pop
lahf
mov
lea
jae
movsl
movsl
sub
mov
jge
loop
cld
mov
movaps
hlt
adc
xor
test
insb
lods
mov
cmp
jecxz
mov
lea
lds
outsl
fwait
jle
ret
jns
lret
les
inc
cmpsl
sarb
out
mov
pop
xor
nop
int
lea
imul
call
fdivl
jae
adc
or
fildll
xor
sbb
xor
mov
cmc
mov
imulb
adc
popf
enter
or
cmp
mov
cltd
test
xchg
out
scas
adc
sbb
addr16
imul
es
and
adc
pop
push
int
mov
mov
inc
inc
pop
es
lcall
cli
ja
xchg
mov
aam
push
mov
ja
notl
fdivr
jne
xchg
jbe
iret
decl
in
add
movsl
xor
push
jno
std
pop
or
fdivrl
mov
in
rcl
xchg
les
add
repz
es
push
xchg
inc
push
sub
dec
lret
icebp
fs
loope
cmpsb
out
push
pop
mov
cld
mov
imul
fcoml
fcoml
aam
enter
xor
nop
jnp
es
add
mov
mov
xchg
in
adc
and
sahf
fwait
aas
sub
dec
cli
sti
pop
inc
out
mov
inc
mov
push
std
pop
aad
jbe,pt
daa
push
lock
icebp
pop
pop
lcall
sub
push
lods
or
test
cmpsl
cli
lahf
push
ret
pop
orb
or
jecxz
inc
popf
mov
icebp
scas
lods
bound
lds
inc
add
stc
ret
enter
call
or
mov
push
push
xor
add
jb
fiaddl
outsl
jmp
in
mov
xor
sbb
mov
rol
sbb
movsb
pop
or
cltd
mov
push
jne
jmp
push
dec
xchg
dec
cli
ficomps
jb
scas
sub
push
pop
xor
lret
mov
rcll
jge
js
or
push
mov
inc
xor
mov
cmc
xlat
cmp
popl
push
sub
adc
icebp
push
out
in
pusha
and
jae
add
fsubr
or
stos
sarb
les
mov
xchg
ret
jnp
ljmp
or
sbb
and
arpl
imul
jp
incl
aam
jno
jae
adc
mov
dec
das
xor
repz
sbb
cmp
test
fcompl
lahf
push
mov
jbe
lock
jnp
mov
jbe
test
outsb
push
or
xchg
fisttps
xor
in
call
mov
and
test
cld
int3
inc
les
jle
loope
dec
adc
push
in
rorb
pop
sbb
push
notb
jecxz
out
enter
nop
repz
imul
mov
fistpl
int3
scas
ret
add
push
sti
fs
lds
push
mov
andb
mov
and
mov
ds
mov
adc
cli
arpl
inc
add
outsl
cld
dec
loop
mov
addb
push
push
inc
mov
repnz
and
fdiv
das
ds
in
push
leave
pusha
push
jae
pop
xlat
shlb
pop
mov
test
insb
mov
add
insb
or
fcomp
jle
movsb
jg
into
or
jmp
mov
xor
mov
adc
sub
add
fnstenv
sub
imul
push
jbe
ljmp
push
push
call
xchg
scas
pop
inc
mov
sbb
xor
jae
dec
iret
bound
push
pushf
fistl
and
jne
mov
pop
repz
sbb
dec
pop
es
or
imul
fs
mov
loope
adc
inc
clc
loop
push
fdivl
mov
js
xor
lahf
mov
int3
mov
enter
mov
dec
sub
dec
repnz
adc
adc
fmulp
ret
popf
push
xor
add
mov
xchg
sbb
mov
stc
std
fnstcw
push
pop
jecxz
icebp
js
jle
enter
push
frstor
sub
mov
leave
add
sahf
aam
mov
xlat
xchg
xchg
mov
jno
xchg
sbbl
cmp
aad
or
rcrb
jnp
scas
pop
hlt
and
xchg
dec
iret
cmp
jb
inc
sbb
push
dec
mov
repnz
iret
cwtl
sub
ja
test
mov
rcll
mov
jecxz
mov
lock
lods
insl
inc
popa
mov
in
imul
cmp
mov
js
mov
adc
sbb
stos
sarl
imul
and
shl
icebp
mov
push
mov
nop
cmp
or
out
adc
test
mov
sbb
xor
repnz
gs
lcall
into
push
and
xor
mov
pop
outsb
les
and
pop
mul
fildl
jno
shll
test
mov
icebp
inc
mov
pop
mov
and
xor
in
mov
jnp
mov
or
dec
adc
add
rclb
pop
enter
addl
mov
and
aam
movsl
pop
sbb
mov
mov
pop
lret
pop
lret
mov
ja
aam
ja
push
jmp
mov
out
jmp
cmp
sbb
xor
mov
xlat
mov
sub
fmull
mov
xchg
test
mov
cmp
and
mov
loop
add
ljmp
int3
mulb
jmp
mov
jo
or
xor
push
out
mov
rcrl
loope
lcall
sub
mov
sahf
das
mov
xor
nop
cmpsl
mov
in
lds
call
jno
push
adc
jmp
shr
mov
pop
in
je
fmull
lods
cmpsl
into
pop
dec
insb
lods
test
inc
movsb
inc
aas
shrl
sub
bound
mov
daa
es
in
test
rolb
scas
shrl
mov
ds
addl
ficoml
cs
sub
cmp
push
pop
rolb
pop
inc
ficomps
xor
adc
lds
xchg
std
push
test
xchg
lret
inc
imul
int3
popf
es
out
xchg
jb
stos
xchg
in
stos
jge
mov
popa
fisubs
dec
lods
mov
movsb
dec
and
dec
lds
add
lock
adc
in
push
pushf
mov
inc
and
dec
jnp
icebp
repnz
into
pop
aaa
stos
daa
mov
and
push
mov
loopne
xchg
es
pop
in
ss
outsl
shlb
rclb
lea
xor
pop
std
pop
xor
sbb
imul
sub
lea
jge
push
mov
jne
xchg
cwtl
pop
dec
icebp
add
cmp
adc
mov
fs
dec
xchg
dec
push
js
jno
cmp
adc
mov
test
xchg
leave
mov
xchg
pop
daa
mov
mov
add
shrb
mov
sub
test
aad
xor
sbb
adc
mov
inc
js
sub
jle
xlat
lds
xorb
aas
lods
adc
jmp
or
or
popa
cmpsb
adc
lds
js
in
js
cmp
cli
mov
out
xchg
outsl
adc
imul
mov
dec
mov
xchg
cmpsl
xlat
adc
adc
ficompl
das
push
push
or
adc
daa
inc
into
sbb
loopne
push
stc
push
out
xorl
or
cld
sub
jb,pt
add
insb
imul
inc
cwtl
js
pop
addr16
push
in
sbb
fsubr
lret
sub
ja
repnz
in
in
jno
repz
int
icebp
pop
push
scas
add
fisubl
into
scas
xor
pop
jecxz
xchg
mov
das
adc
repnz
push
andps
sbb
cs
push
imul
stos
movsl
mov
pop
ret
mov
lods
outsl
mov
mov
repz
adc
pop
stc
fnstcw
push
or
cmp
mov
adc
push
mov
dec
adc
pop
push
out
scas
mov
arpl
jnp
enter
std
lret
inc
adcl
mov
ljmp
xchg
inc
and
lahf
and
jno
loopne,pn
xchg
dec
dec
dec
push
mov
cmp
jb
data16
mov
cmp
lods
mov
ret
arpl
cmc
test
sbb
and
sub
jo
das
imul
bound
or
ficompl
mov
dec
dec
and
sbb
or
outsb
sbb
jb
daa
cmp
subb
ret
mov
leave
repz
cmpsl
pop
mov
and
and
jg
push
xor
pop
out
loopne
and
cs
mov
out
pop
call
test
adc
and
in
shr
cmp
fstl
cmp
mov
shrl
dec
xor
jbe
dec
cwtl
addr16
add
std
enter
in
xchg
mov
lods
cmp
pop
and
dec
inc
mov
inc
push
jns
test
sti
push
mov
push
cmp
or
sbb
das
push
repnz
movsb
clc
out
sahf
es
xor
adc
std
jg
jns
jo
adc
inc
in
sub
fstps
ss
movsl
jno
imul
flds
int3
movsl
mov
jb
test
call
sti
dec
fsubrs
adc
or
out
insb
add
jmp
push
fnstsw
or
sbb
pop
in
pop
aaa
nop
sub
sbb
push
stc
mov
mul
repnz
inc
adc
cmp
pop
push
mov
mul
arpl
push
out
imul
ds
cwtl
sub
in
pop
and
es
das
fiadds
and
and
mov
mov
lock
movsb
xchg
pop
scas
xor
test
pop
or
ficoml
inc
fdivrs
insl
orl
aas
jmp
sbb
scas
mov
sbb
cmp
push
mov
mov
jae
shrl
js
clc
push
pushf
fptan
divb
push
mov
test
inc
rcl
fldcw
cmp
mov
enter
sub
inc
jmp
jmp
fsubrl
xor
jns
pop
pop
cwtl
mov
jle
sti
xorb
jno
mov
sbb
add
test
test
add
or
pop
or
test
loop
pop
xor
jno
fwait
sahf
js
lock
imul
cwtl
and
xchg
mov
cs
test
mov
cwtl
mov
xor
jl
push
jne
xchg
lret
and
jns
ret
gs
pushl
xorl
cltd
dec
stos
mov
out
and
stc
out
cmpsb
les
sti
sub
add
xchg
add
or
jb
ficoms
addr16
insb
xor
orb
xor
movsb
shl
lret
addr16
cmpb
or
int3
call
test
mov
push
mov
cmp
stos
or
cmc
xchg
mov
jns
sub
mov
dec
xchg
shrl
add
add
push
mov
popa
fs
jl
mov
std
mov
mov
xor
xchg
cmp
adc
lahf
push
icebp
dec
orl
cmpsb
movsl
sbb
movsl
pop
pop
ds
adc
add
mov
sub
stos
sbb
mov
scas
or
or
mov
jo
cltd
xor
dec
fisubrs
cmp
adcw
cltd
outsb
sti
ret
pop
les
and
mov
mov
mov
lods
cmpsb
pushl
cltd
xchg
std
js
jecxz
hlt
lods
pop
add
cmp
fsubrs
sub
inc
mov
jo
cmp
xor
pop
mov
in
je
call
call
idiv
sahf
hlt
push
sub
mov
stc
ror
je
testl
xor
out
icebp
or
test
test
sub
cmpsl
arpl
sub
jg
daa
inc
mov
shl
daa
outsb
and
push
sahf
aad
cld
cmp
xor
push
lret
mov
xchg
lea
mov
or
inc
mov
sub
xor
rcrl
jne
addr16
xchg
jo
dec
repnz
push
rcrb
jmp
xor
scas
dec
repnz
inc
out
dec
inc
sub
add
bound
dec
repnz
rolb
jno
cmp
lods
sahf
jmp
jl
fwait
dec
sub
mov
mov
dec
arpl
cwtl
insl
inc
divl
jb
jp
jle
fnstenv
xchg
in
pop
lcall
jns
sub
cs
fisttpl
jne
aad
cmp
pop
add
push
loopne
pushf
test
aaa
dec
shrl
pusha
dec
jb
sbb
dec
shl
arpl
aaa
sbb
jmp
fs
xor
jge
jae
sbb
test
push
inc
dec
out
add
js
bound
xchg
cmp
loopne
sahf
mov
pop
jg
hlt
hlt
add
mov
imul
and
xchg
shr
mov
je
inc
nop
pop
and
lcall
stc
dec
and
lock
repnz
adc
cmp
mov
lock
sbb
mov
nop
out
rolb
popf
inc
pop
ja
andb
sbb
das
scas
shlb
inc
pushf
mov
lret
ss
mov
and
cld
imul
xlat
jl
add
dec
mov
and
cmpsl
push
lcall
repz
push
sbbb
pushf
pop
pop
adc
cmp
ja
sub
les
addl
sbb
push
push
stc
cmp
pop
hlt
mov
das
inc
dec
mov
cs
jns
mov
inc
mov
cmp
rorl
jne
mov
pop
dec
mov
aaa
lret
movl
inc
das
sbb
mov
xchg
push
addr16
dec
inc
repnz
pop
add
push
lods
inc
add
ja
pop
std
popf
xor
xor
jp
adc
mov
push
add
sub
pushf
push
cmc
jle
notl
xor
dec
push
mov
lret
fidivl
and
inc
xchg
mov
push
test
je
in
cmp
scas
nop
mov
rorb
clc
mov
out
or
mov
mov
mov
shr
lea
loope
and
ds
jecxz
repnz
push
js
jae
aam
pop
cmp
imul
push
add
xlat
lret
xchg
arpl
adc
push
aad
in
mov
mov
jge
movsl
iret
pop
fistpl
jbe
pop
or
jnp
jmp
lahf
loope
push
stos
popa
je
test
test
in
bnd
cli
mov
rorl
das
sub
mov
out
jl
dec
mov
dec
add
cmpsb
adc
cmp
out
cmp
je
adc
lock
sub
pop
sbb
push
dec
inc
andl
in
push
loop
push
roll
lret
push
add
fstp
dec
push
sahf
push
scas
int3
fucomi
mov
cmpsl
dec
aam
cmpb
mov
hlt
mov
xor
cmp
and
mov
mov
leave
push
pop
cs
xor
push
es
movsb
pop
add
mov
dec
aas
cs
fdivs
cwtl
fldcw
sbb
mov
popf
dec
jmp
imul
insb
push
cmp
mov
andl
pop
mov
pop
inc
pop
push
cmp
clc
push
int
repz
mov
aaa
fistpl
incb
cmp
fwait
mov
inc
movsb
aas
fisttpll
repz
cs
mov
push
cld
lods
pop
lds
or
shlb
orb
decl
cmp
ficomps
sbb
inc
loope
icebp
mov
push
ss
sbb
ss
push
xchg
sub
add
inc
stos
xor
rclb
sbb
stos
pushf
insb
inc
pop
sbb
xor
clc
cld
pusha
or
aaa
data16
les
mov
inc
cmpb
push
mov
jb
or
xlat
jle
jns
adc
jnp
or
jo
cvtdq2ps
lea
jae
pop
aas
mov
xchg
sub
push
xlat
inc
loop
fstpt
xor
pop
mov
cmpsl
clc
sbb
xchg
pop
jmp
mov
mov
rcll
and
xchg
adc
jg
dec
movb
push
adc
jge
adc
cmpsl
arpl
cmp
sbb
fcomps
loope
and
cmc
arpl
leave
pop
dec
jnp
cmc
inc
mov
rep
sub
mov
jp
sub
call
or
in
std
test
mov
leave
xor
sub
movsb
gs
lahf
mov
pop
xor
ss
ja
test
cmc
popf
push
mov
fcoml
enter
xorl
icebp
push
nop
jns
in
lods
call
pop
loope
push
adc
sbb
adc
push
out
push
jno
stos
fcoms
adc
push
jb
inc
xor
inc
mov
pushf
shlb
push
shlb
cmp
inc
mov
scas
pop
and
testb
and
cmp
out
mov
scas
outsl
push
pop
sub
mov
push
dec
inc
jo
scas
inc
icebp
and
lea
enter
jae
sub
out
int3
in
jg
popf
cs
cli
popl
sub
ds
jne
jle
push
push
dec
test
nop
addb
pop
ficomps
sti
rclb
stos
decb
jno
je
ds
sbb
in
jmp
mov
stos
xchg
jp
push
mov
or
push
dec
in
out
cmp
ret
pop
adc
iret
mov
mov
and
into
pop
shll
mov
sub
ret
xorl
inc
ja
nop
mov
stos
push
lods
lahf
pop
cwtl
icebp
mov
jecxz
pop
outsb
ljmp
xchg
sbb
popf
mov
enter
gs
loope
dec
mov
fwait
mov
ret
pop
fucomi
lea
cmp
jnp
std
nop
cmp
cmp
cmp
xchg
push
pop
adc
adc
mov
loope
cmp
adc
jns
xchg
xchg
mov
dec
loopne
adc
sbb
mov
inc
das
imul
jno
es
dec
out
inc
lock
mov
xor
leave
sub
and
push
pop
adc
pushf
adcl
inc
mov
dec
add
gs
add
int3
arpl
xor
push
gs
dec
cltd
sar
inc
jne
or
add
push
dec
push
jmp
sbb
dec
cwtl
mov
jno
mov
pop
mov
outsb
aad
jp
pusha
mov
xchg
xchg
aad
outsb
inc
cmp
jecxz
cld
mov
fs
and
dec
ret
mov
daa
rclb
push
mov
icebp
xchg
pop
mov
pop
jns
cmp
push
sub
pop
arpl
lahf
or
pop
ljmp
xchg
sbbb
pop
test
bound
inc
cmc
mov
je
cmpsb
lods
test
mov
hlt
fdivs
or
sbb
je
cmp
xchg
sbb
sub
addr16
ljmp
sbb
pop
inc
jns
jmp
xchg
lret
ss
popf
and
and
cli
jne
adc
sub
mov
xor
lods
push
xchg
cmpsb
pop
and
call
in
lods
jo
leave
sahf
dec
mov
or
adc
sahf
sbb
cmp
sbb
xchg
cltd
ss
dec
std
cltd
sbb
adc
mov
jg
pop
enter
adc
cmpl
mov
mov
xor
call
jmp
push
dec
xadd
or
xor
mov
jno
xor
xor
pop
or
insl
or
fs
fs
aam
jne
pop
test
xchg
out
cmp
dec
repnz
jp
or
adc
jge,pt
scas
add
dec
or
jp
adc
mov
lret
xchg
stos
aaa
adc
in
cmc
sub
shll
mov
dec
mov
in
mov
xchg
xchg
in
movsl
jle
jbe
clc
dec
hlt
cmpsl
dec
inc
mov
popa
sub
outsb
push
jo
dec
ja
rcll
jmp
xor
int
ret
fildll
sub
cmp
mov
jecxz
jne
add
lret
das
imul
push
popf
sbb
xlat
xor
xchg
inc
lds
insb
test
fwait
outsl
ret
mov
add
pop
stos
jmp
test
scas
mov
movsb
jne
in
lcall
call
cmp
xchg
push
dec
lcall
push
jns
sub
push
sub
cmp
or
out
sbb
mov
jp
xchg
dec
sbb
mov
repnz
bnd
jns
adc
mov
add
addb
cmp
and
jl
pop
jbe
aas
jo
scas
add
je
add
sbb
xor
test
push
scas
clc
inc
push
insb
lea
jb
call
rorb
sbb
inc
fdivrl
ljmp
jo
fld
mul
xor
inc
sbb
call
fstpt
cli
in
data16
dec
push
in
aas
sahf
sbb
sbb
inc
push
or
pop
and
cmp
out
mov
fisttpll
in
leave
jne
lods
xchg
dec
jbe
push
out
adc
inc
xor
shlb
nop
scas
jae
repnz
mov
push
inc
lea
in
insl
js
push
ja
pop
sub
push
arpl
sahf
dec
icebp
gs
lock
dec
sbb
lret
mov
stos
mov
sti
ret
and
mov
imul
ror
imul
inc
jp
mov
ret
sbb
mov
test
or
es
cmp
sbb
in
lcall
insb
pop
jnp
cmpsl
loopne
xchg
fmuls
or
rcr
sub
addr16
movsl
mov
xor
lods
mov
dec
shll
xlat
mov
loopne
outsl
adc
xchg
pop
lret
or
lcall
or
icebp
ljmp
loope
subl
add
dec
pop
mov
jno
movsl
sahf
push
out
xchg
call
out
mov
push
fstpl
cmp
je
fwait
or
mov
fwait
pop
call
pop
mov
add
xor
lcall
or
movsl
push
out
cmp
jle
fwait
pop
pop
addb
les
pusha
inc
xlat
out
add
shl
or
in
adc
imul
cmp
jo
cmp
shrb
mov
ret
insl
ds
lea
inc
inc
push
shr
adc
jle
mov
loopne
testl
daa
hlt
jo
add
sub
lock
insb
insl
jp
xchg
jae
mov
fnstcw
ret
jnp
call
dec
insl
mov
cmp
or
jg
mull
xchg
int
sbb
mov
adc
testl
cmp
jmp
aad
mov
adc
sbb
fldcw
jmp
xor
adc
adc
cmp
rclb
mov
aad
out
in
sahf
out
push
push
movsb
je
cmp
repz
or
in
mov
fstpl
push
repz
dec
inc
lret
cmpsl
cltd
outsl
pop
mov
dec
cmp
push
jg
cmp
jmp
jp
adc
push
rcl
cmpsb
lds
sbb
cmpsb
lea
pusha
mov
shrb
xor
pop
fmul
inc
mov
icebp
int3
in
fnstsw
sahf
mov
adc
jno
sbb
push
sbb
pop
js
ljmp
and
push
add
add
and
ss
push
add
std
movsb
adc
cmp
lret
and
testb
or
jbe
icebp
sub
cmp
loop
daa
iret
jno
inc
pop
pop
add
lret
xor
repnz
pop
mov
xor
push
pop
mov
dec
rcl
test
add
xchg
mov
xor
inc
fstps
jmp
insl
aas
xor
fimuls
xchg
insl
nop
das
dec
mov
fwait
xor
rclb
cmpsb
mull
sub
jnp
lock
dec
setbe
sbb
jbe
gs
dec
xchg
loopne
cmp
loopne
jbe
dec
mov
xchg
aaa
sarb
arpl
das
xlat
or
movsb
add
and
popf
sbb
std
fcompl
movsb
and
sar
sbb
xchg
ljmp
adc
stc
mov
inc
or
sar
call
rorb
loop
mov
imul
add
mov
xchg
sub
dec
in
dec
add
cmp
mov
add
mov
pusha
out
daa
pop
mov
fwait
sbb
aam
jle
ss
xchg
lret
mov
add
mov
add
enter
mov
jl
cwtl
jecxz
out
lods
cmpsl
xor
dec
xchg
mov
imul
rcll
xchg
bound
jo
movsb
mov
or
cmp
and
test
xor
idiv
outsl
stc
push
scas
adc
jbe
imul
or
jmp
ror
inc
test
xor
outsb
jae,pt
push
sub
push
jns
dec
push
stos
ljmp
xchg
mov
push
in
or
test
fldenv
lret
pop
insl
ss
dec
addr16
jns
fmulp
inc
sbb
into
cmp
mov
movsl
sbb
add
gs
stos
push
mov
mov
lahf
fstps
sub
mov
fsubp
mov
push
jns
repz
or
cmc
daa
test
rclb
roll
pop
pop
push
mov
xchg
dec
xchg
mov
leave
incl
jo
jo
ret
and
fcomi
sbb
repnz
fwait
iret
gs
inc
in
add
int3
mov
sbb
jmp
sbb
outsb
mov
lcall
jge
push
insb
popa
or
imul
push
aas
mov
jge
scas
adc
aad
add
clc
movsl
cltd
lods
and
push
int
sub
sub
test
cli
adc
test
xchg
dec
jge
clc
das
das
scas
cmp
into
loop
lock
scas
jmp
aad
imul
xchg
inc
jo
inc
cwtl
lea
inc
push
pushf
mov
ret
testb
mov
mov
push
mov
pop
lcall
inc
repnz
pop
push
repz
or
fdivrl
jmp
stos
fwait
rcll
mov
xor
lahf
mov
lds
mov
fdivrl
cs
daa
pop
or
sbb
and
or
pop
xlat
xorb
jne
cld
xchg
pop
mov
rcrl
or
inc
or
pop
fwait
and
test
leave
int
test
inc
shrb
push
mov
and
nop
cmp
iret
dec
push
cmp
xchg
je
mov
out
xchg
mov
push
mov
adc
loope
xor
dec
push
sub
inc
cmp
mov
push
ret
push
push
clc
mov
dec
les
jge
loop
std
jl
push
test
xchg
xchg
adc
xor
jb
jae
xchg
mov
jmp
inc
or
div
sbb
jno
subb
das
int
push
and
rclb
pop
or
jno
int
lret
and
lret
mov
ja
fs
adc
push
jmp
lds
mov
ja
jno
mov
cmpsl
sbb
cmpb
jecxz
repnz
insl
and
and
insl
repz
enter
cmp
mov
xor
sub
jne
shl
ret
push
dec
loopne
adc
addr16
mov
popf
fmull
mov
cwtl
in
leave
cmc
cmovo
inc
es
lret
and
ljmp
cmp
enter
and
add
xor
hlt
dec
fdivl
popa
addl
mov
ja
sti
lods
stos
mov
push
sub
mov
cmpsl
dec
push
push
cwtl
cs
mulb
int3
pushf
push
adcl
in
loope
loopne
mov
xchg
cmp
xchg
les
xchg
or
dec
xor
push
fmull
sbb
in
lcall
pop
cs
insb
cmp
dec
scas
dec
adc
jp
in
sub
cmp
mov
pop
jne
test
sub
scas
mov
sti
pop
lods
lahf
lret
movsl
push
mov
pop
loop
and
pop
icebp
xor
mov
xchg
cmpsl
in
jecxz
adc
daa
pop
xor
xlat
inc
fiaddl
sub
xchg
sub
ror
xor
ret
cmp
mov
pop
ja
cmpsb
sahf
fwait
pop
mov
cmc
ret
cwtl
jle
adc
jns
popa
test
fdivrs
add
dec
addb
jmp
add
pop
push
jb
test
into
sarl
imul
clc
nop
shrb
push
arpl
pop
fs
aam
cmc
int
jns
scas
ljmp
cld
push
popa
pop
enter
mov
lds
in
sbb
xor
add
cld
mov
mov
xchg
cmp
add
xchg
call
ror
in
dec
outsl
jo
dec
outsl
push
xor
nop
gs
jp
and
mov
mov
lock
bnd
test
pop
into
imul
mull
jo
sub
loop
jmp
fmuls
fwait
leave
arpl
je
inc
adc
mov
je
shlb
inc
inc
jne
jb
lock
aam
cwtl
pop
or
js
xchg
mov
adc
jne
pop
insl
fs
pop
cwtl
repnz
flds
in
pop
inc
ret
cmp
nop
mov
in
fidivrl
push
or
fcomip
pop
outsl
clc
in
int
pextrw
inc
adc
gs
push
mov
mov
das
or
in
mov
jo
xor
xchg
fadd
lcall
sub
or
rclb
xchg
xchg
iret
add
iret
jg
adc
xchg
push
xchg
loopne
jle
cmp
mov
popa
outsb
xor
lods
int
cmpl
loope
mov
cmpsl
or
cmp
fs
cmp
cmp
jp
ja
movsl
popf
mov
mov
addr16
nop
shl
inc
jno
cli
arpl
jns
pop
adc
leave
jno
inc
cmp
xchg
je
data16
ds
lahf
mov
sub
and
jae
xchg
push
ja
push
clc
icebp
sbb
jno
fistl
int3
and
mov
das
aas
cmpsl
cmp
sbb
js
ret
mov
clc
mov
decl
sti
mov
adc
subl
into
or
and
dec
ss
xchg
roll
jns
lds
dec
add
xchg
test
pop
push
and
sub
out
sub
push
pop
mov
xchg
daa
lock
xor
out
int3
ret
ret
mov
or
lahf
dec
sub
bound
xchg
sahf
sbbl
push
std
mov
in
iret
xchg
test
je
bound
dec
mov
or
jb
inc
fmuls
dec
out
int
pusha
or
clc
fdivr
les
in
mov
icebp
fbld
cmp
outsb
mov
push
repnz
lods
and
or
iret
movsl
insl
int
pop
mov
xchg
sbb
dec
xchg
pop
jbe
lods
cmpsb
jns
jecxz
outsb
roll
cmc
aaa
mov
cmp
pusha
pop
fidivrl
rol
insl
aas
cld
mov
sahf
pop
in
loopne
lahf
sub
repz
ret
mov
push
lcall
xor
inc
sbb
push
mov
mov
push
fisubs
pushf
int
xchg
imul
mov
cmp
sbb
shrl
dec
sub
lcall
xchg
or
les
mov
shrb
xlat
hlt
mov
xchg
pusha
les
xchg
xchg
js
jb
push
pop
lret
aaa
pop
push
pop
jno
mov
ret
fidivrs
bound
jl
flds
scas
xor
add
sbb
jnp
loopne
leave
xor
or
mov
in
cmp
inc
mov
sub
or
adcl
data16
xlat
repnz
js
out
fnstenv
cs
sbb
cmpsl
jae
pop
xchg
in
or
daa
mov
bound
xor
dec
jecxz
std
in
je
push
sahf
mov
stc
std
jbe
cwtl
add
pop
sti
out
stc
fwait
ss
out
adc
mov
adc
ret
dec
nop
adcl
xor
hlt
aam
pop
sbb
sub
arpl
orl
sub
or
pop
mov
push
or
test
push
xchg
mov
jo
or
or
mov
jb
push
xchg
subb
sbb
nop
mov
fists
addr16
xor
dec
mov
mov
mov
mov
xchg
ss
ret
push
stos
mov
and
repnz
sub
push
test
push
dec
sub
movsb
jns
or
xor
add
inc
jb
pop
and
push
sub
push
sub
cmp
push
ljmp
xor
mov
jmp
rcll
dec
sbb
test
sbb
xchg
int3
lcall
cltd
inc
or
xchg
int3
lock
sbb
out
pop
sbb
scas
dec
fdivrs
test
mov
mov
in
push
add
lret
lret
imul
je
jae
push
inc
std
sub
dec
sbb
lods
push
dec
iret
sbb
xor
mov
std
lcall
addl
shll
jbe
xchg
add
mov
push
pop
xchg
inc
in
sbb
jmp
mov
pop
cmp
mov
shlb
and
jb
pop
push
mov
das
inc
stc
mov
mov
fisttpll
sarl
leave
idivl
lcall
popa
pop
lret
stos
enter
mov
jl
cmpl
mov
mov
mov
lock
mov
rcl
sbb
mov
gs
pop
cmpsl
outsl
shlb
xchg
ds
shl
ds
ret
push
sbb
test
imul
sbb
pop
ja
dec
sbb
mov
jle
cli
daa
adc
lahf
decb
fadds
rorb
xchg
ds
sub
mov
pop
xsavec
cmp
scas
push
test
lret
cmp
or
ficoml
and
mov
pop
xor
daa
mov
mov
shrb
push
cmp
xchg
cmc
cmpsl
lahf
cmp
sbb
clc
add
xchg
push
xor
push
fcomps
in
jecxz
loop
inc
test
sub
or
scas
sarl
jb
add
insb
push
pop
popa
xchg
stos
mov
ret
aam
and
insb
lahf
cwtl
inc
and
add
dec
es
std
sbb
adc
jmp
ret
mov
movsb
into
sub
outsb
mov
sbb
sub
lcall
cmp
fcmovbe
cmc
insb
pop
mov
ss
sub
jmp
add
out
xchg
add
into
xchg
test
xchg
mov
push
inc
xchg
ljmp
pop
pop
mov
mov
jns
lock
mov
lahf
sbbl
leave
jno
enter
mov
mov
mov
pop
ja
mov
divl
sbb
jbe
dec
leave
mov
sahf
pusha
xor
and
xchg
or
cmp
ljmp
dec
inc
lods
xchg
sbb
push
filds
jae
divb
sub
orb
int3
bound
cltd
lahf
or
pop
lret
cmp
inc
out
aam
sbb
dec
mov
push
sbb
nop
ds
adc
bound
bound
sub
xor
fimuls
dec
addr16
pop
ja
cmpsb
rorl
add
sbb
sub
push
ja
leave
rol
scas
popf
shll
mov
std
cmpsl
dec
loop
mov
or
fisubrs
jge
hlt
or
mov
fnstenv
incl
jge
or
arpl
push
cs
movsb
leave
adc
insl
nop
and
gs
inc
jbe
adc
and
lret
push
xchg
aad
aas
imul
sbb
push
and
popf
das
stos
pushf
jp
int3
dec
sub
pushl
mov
jge
mov
mov
adc
push
mov
data16
push
je
shll
add
jbe
outsl
movb
shll
sub
faddl
ret
insl
lods
push
fwait
int
repnz
lcall
mov
push
ret
adc
je
inc
imul
xlat
pop
and
aaa
inc
lahf
imul
jne
mov
stos
orb
pop
nop
ret
insb
jg
xchg
cltd
test
sub
jg
insb
mov
jmp
leave
sbb
jne
jle
jle
add
pop
pop
jl
add
mov
push
mov
and
mov
mov
add
inc
and
pop
mov
test
std
ljmp
mov
xlat
push
xchg
push
aaa
add
jbe
jb
stos
adc
inc
inc
sahf
mov
cld
pop
add
xchg
and
add
orb
int
or
lret
sub
inc
fwait
and
mov
gs
aaa
add
addb
in
mov
or
fsubl
adc
adc
push
cmp
sbb
fcmovnbe
icebp
and
idiv
cmp
push
test
xrelease
lcall
push
sahf
mov
lds
insl
pushf
cmp
mov
pop
mov
xor
daa
and
stc
sub
in
mov
xchg
cmp
adc
jmp
imul
stos
xchg
pop
jno
sub
cmp
sub
movsl
aad
and
cmp
ret
pushl
cld
sub
outsl
adcb
pop
fdivrp
sbb
insb
int
mov
sbb
inc
rcll
gs
xchg
outsl
and
pusha
cwtl
mov
cmp
leave
or
into
jmp
pop
and
in
sbb
in
cmpsl
jl
push
cmp
enter
test
cmp
out
adc
stos
or
sbb
lret
xor
push
or
arpl
dec
nop
jne
shrb
jle
sub
adc
push
or
pop
iret
jl
popa
in
or
movsl
cltd
or
aam
or
cwtl
adc
shl
xor
add
outsb
and
mov
scas
push
pop
mov
imul
and
fldenv
jne
push
mov
mov
nop
int
aas
pop
jg
clc
orl
lahf
pop
cmp
adc
insl
test
adc
aaa
adc
or
cmp
es
mov
cmp
mov
clc
ljmp
jge
and
jb
dec
dec
mov
ja
cmpsl
dec
shll
fists
push
test
int3
pop
pop
jecxz
dec
add
add
andl
call
xchg
mov
xor
ds
rorl
lds
xchg
cld
dec
stos
dec
inc
jp
ljmp
dec
repz
nop
in
pop
sahf
aam
sbb
pop
outsl
push
mov
push
inc
jns
aas
stc
cltd
add
add
hlt
xchg
mov
dec
adc
pop
xor
aam
adc
lods
in
repnz
push
and
test
ficompl
outsb
xor
subl
xchg
and
inc
pop
add
ss
or
xor
daa
clc
mov
cmp
fmulp
mov
and
daa
cmp
into
xchg
pop
xor
pop
scas
or
iret
mov
lds
test
int3
hlt
push
daa
out
iret
mov
add
mov
add
and
aas
adc
mov
mov
or
in
loope
mulb
loopne
sbb
insl
repz
icebp
rcll
adcl
test
aad
jb
jmp
jp
push
das
cmpsl
fsts
push
out
sbb
push
addr16
lods
mov
ficompl
push
inc
cmpsl
mov
scas
scas
clc
adc
push
subb
je
ja
fwait
inc
push
mov
sti
call
out
cmp
pop
mov
hlt
lods
xorb
dec
mov
mov
dec
roll
xor
pop
xor
enter
mov
sub
aas
jns
fcoms
dec
inc
loopne
test
xchg
andb
sbb
sbb
jmp
fdivs
lcall
insl
dec
mov
xor
outsl
xchg
dec
imul
inc
mov
adc
dec
nop
mov
stos
dec
cmpsb
pop
aad
sbb
repnz
inc
push
das
call
dec
dec
push
xor
movsl
lea
jo
aaa
dec
ljmp
push
mov
xchg
inc
pop
sbb
xor
push
sub
out
sbb
cmp
adc
push
les
add
iret
lea
pslld
pop
lea
add
scas
xor
enter
cmpsl
in
jne
xchg
enter
jns
pop
xor
stos
imul
sbb
mov
xor
add
or
or
mov
sbb
cmpsb
movsl
mov
sarb
mov
mov
iret
dec
fnsave
ficoms
imul
int3
out
adc
sbb
cmpsl
in
sbb
ja
loopne
outsb
in
insl
inc
cs
xchg
pop
jl
clc
jo
aaa
lea
nop
aas
or
mov
stos
cld
call
ds
call
sub
je
dec
jne
in
add
and
mov
jle
sbb
inc
les
or
sbb
shll
xor
aaa
subl
daa
adc
jo
orl
jmp
imull
fidivs
aaa
mov
lods
loopne
pop
add
loope
push
mov
enter
icebp
mov
into
sub
cmpsb
stc
arpl
add
rolb
ds
shlb
pop
add
sbb
enter
jns
fadd
outsl
or
jge
int3
ds
mov
clc
lcall
ds
or
lea
mov
mov
je
mulb
add
pop
jecxz
enter
pop
inc
add
sbbb
int
loope
xor
into
xor
data16
stos
rorl
and
sub
push
inc
pop
scas
out
call
inc
ja
scas
pop
bound
cmp
test
xchg
ja
cmp
out
xchg
xchg
inc
cmc
loop
bound
push
xchg
repz
lcall
push
pop
jnp
mov
cmp
cld
sbb
pushf
add
fisubs
popa
enter
add
xlat
clc
and
jae
fdivl
xchg
jl
add
cmp
mov
rcl
dec
push
js
sbb
mov
push
dec
jp
add
inc
gs
cmp
jmp
or
outsl
xor
lods
xchg
pusha
cmpsb
mov
cmpsl
xor
xchg
pop
sahf
xchg
pop
lods
lods
lret
adc
scas
xchg
add
pop
cli
out
adc
test
push
rcr
cs
push
jnp
add
mov
das
cmpsb
or
imul
inc
jne
hlt
insb
into
out
out
int
lahf
mov
bound
or
out
xchg
fwait
xlat
inc
dec
mov
fsts
mov
pop
xchg
insl
ss
inc
xlat
adc
mov
arpl
ja
cmc
mov
and
loop
jmp
jmp
or
cmpsl
idiv
fwait
pop
iret
icebp
add
je
in
testb
in
xchg
mov
push
push
leave
jo
mov
xor
loopne
sub
jnp
loop
xchg
push
sbb
or
or
adc
jns
lock
lahf
call
sbb
jbe
pop
cvtpi2ps
mov
jmp
push
lret
sbb
in
arpl
bound
scas
cmp
ret
mov
dec
push
or
test
inc
xor
mov
fwait
pop
xchg
das
idivl
inc
stos
inc
add
cs
jne
icebp
int3
mov
adc
mov
xor
jl
adc
sub
dec
jno,pt
insl
sbb
std
scas
sbbb
subl
xchg
jb
xor
mov
jno
xchg
les
lcall
pop
sub
cmp
pop
lahf
push
daa
lea
lds
fiaddl
aad
mov
mov
ja
xor
loopne
push
shll
push
add
adcb
aaa
add
push
adc
repz
xor
xor
fbld
cli
lock
xor
xchg
icebp
jg
add
xchg
add
mov
ds
mov
xor
add
push
ret
dec
jg
div
out
cmp
jbe
and
inc
cs
push
ja
mov
or
mov
xchg
negb
adcl
insl
pop
sub
dec
push
sbb
lahf
das
movsb
fbstp
aam
and
pop
int
mull
dec
jno
outsl
loop
lret
movsb
stc
ja
xor
in
pop
sbb
and
mov
pop
insb
dec
push
inc
cmp
pop
and
xchg
mov
cli
int3
sub
imul
mov
cmpl
sub
std
sbbb
ret
lods
jne
aam
jnp
data16
xor
scas
dec
or
xchg
and
notl
mov
jne
mov
in
and
jne
mov
daa
mov
in
inc
in
ret
xchg
je
test
xchg
ss
paddw
mov
lock
call
push
stos
rcrl
and
jne
add
stos
les
das
inc
addr16
adc
loop
sbb
xchg
outsl
inc
mov
xlat
adc
das
dec
or
inc
sub
xor
cwtl
loop
stos
xchg
jo
mov
sbb
enter
dec
sub
faddl
xor
loopne
sahf
cmp
jg
dec
outsl
pop
fisubl
popa
or
or
test
fucom
dec
js
ret
inc
fimull
jmp
mov
lahf
and
cltd
insb
push
pop
jno
int3
aas
or
sub
inc
mov
fcoml
dec
cmpsl
jae
mov
cmp
es
mov
fisttpl
lds
icebp
mov
mov
jl
sub
shll
jae
inc
int3
add
pop
pop
xchg
cmp
push
sbb
out
gs
pop
inc
aas
insl
fldl
adc
cmp
addl
jno
mov
mov
ficoms
adc
mov
ljmp
mov
call
enter
cmp
andl
addb
pop
adc
adc
test
or
fcoml
int3
mov
arpl
stos
in
andb
xor
lcall
mov
pop
loope
mov
mov
adc
xor
call
aaa
sbb
xchg
or
mov
into
mov
push
test
mov
sbb
fidivl
icebp
xor
daa
out
inc
mov
js
call
sbb
push
adc
or
bound
lods
and
fistpll
cmpsb
jnp
push
cltd
and
xor
dec
arpl
ljmp
xlat
inc
lahf
mov
bound
dec
in
mov
mov
mov
andl
cmp
pop
cmp
mov
ljmp
stc
loope
mov
dec
repz
cmpsb
scas
mov
mov
fiaddl
or
inc
dec
mov
out
lret
push
fistl
into
inc
dec
jg
into
stos
int
sar
jmp
aam
dec
mov
es
mov
adc
sbbl
lods
mov
xchg
xchg
mov
mov
xor
int
dec
push
bound
mov
inc
push
cmp
test
std
sub
jmp
popf
jl
push
mov
rcrb
mov
sub
xchg
nop
cmp
pop
mov
dec
decl
cltd
lret
lds
mov
or
cwtl
and
psubw
shl
pop
jo
mov
mov
push
cltd
inc
or
ljmp
loope
sbb
dec
lcall
test
mov
pop
mov
push
stos
ss
cmp
jo
cwtl
mov
mov
jge
inc
adc
fistps
lea
adc
xlat
imul
pop
dec
in
outsl
fucomi
ljmp
fs
jecxz
or
ljmp
test
sub
popl
dec
pop
std
fsubs
ret
and
and
movd
repz
pop
out
mov
sub
adc
sub
sbb
outsl
aas
push
negl
repz
sbb
xchg
insl
ror
xchg
adc
lds
jae
lods
ror
out
xchg
pop
enter
inc
rcrb
fs
mov
mov
mov
ljmp
cmpps
and
dec
stc
push
cmp
mov
cmp
push
inc
xchg
inc
je
call
ds
cmpsb
pop
mov
push
mov
sub
or
pushf
je
mov
adc
mov
es
push
testb
loop
mov
fnstenv
ficomps
popa
int3
and
adc
cmpsb
mov
fstps
pop
push
repz
jp
insb
test
pop
sti
pusha
inc
sub
push
xor
and
sub
loopne
fdivrl
shl
sub
jne,pt
or
mov
inc
loop
jb
mov
pop
xchg
lahf
insb
jae
mov
ror
les
add
subl
push
cs
or
fwait
outsl
stos
das
dec
sbb
shrl
loope
mov
adc
mov
cltd
mov
sbb
dec
push
in
mov
mov
xlat
ja
cmp
cs
sub
shrl
popf
es
dec
and
loopne
sti
cmc
mov
nop
dec
push
rcl
lcall
or
fistpll
push
push
mov
push
mov
pop
and
mov
scas
pushf
push
and
aas
add
inc
cmp
jo
xor
iret
push
test
movsb
aad
mov
pop
sub
xchg
sub
xor
in
jb
adc
xchg
lods
pop
pop
out
xchg
aas
es
sti
dec
sti
mov
dec
ficoms
xchg
pop
jecxz,pt
sub
into
push
rol
jle
int3
jo
jmp
out
pop
dec
incb
in
ror
bound
rorw
and
mov
mov
mov
cmp
andb
pop
mov
inc
push
cltd
mov
test
jno
outsb
cmpsl
outsl
inc
and
or
scas
test
movsl
in
mov
out
push
movsb
pop
lock
push
fistl
cmp
iret
inc
pusha
adc
call
mov
in
out
mov
cld
or
mov
inc
movzbl
push
and
hlt
pushf
pop
stos
test
xchg
int
jp
xchg
jns
xchg
mov
jl
jns
add
mov
xor
adc
jnp
adc
gs
int3
dec
xchg
sbb
add
jl
xchg
orb
dec
loop
int3
lods
inc
ret
sbb
test
pushf
ja
mov
xchg
or
adc
pop
push
cltd
ss
out
mov
gs
dec
inc
push
ja
jg
sub
inc
in
push
add
or
pop
sbb
mov
dec
loop
inc
jne
inc
sbb
mov
aam
mov
lds
sub
mov
loope
fidivrs
mov
adc
lret
repnz
mul
bound
and
cmp
data16
xchg
mov
inc
clc
outsl
out
cmp
cmpsl
sub
sbb
ret
enter
adc
xchg
or
and
mov
fdiv
mov
and
ret
inc
cmpsb
xchg
fisubs
into
out
inc
scas
push
hlt
cmpl
inc
mov
mov
aam
lahf
stos
inc
lock
enter
test
scas
std
fsts
adcb
aam
mov
test
into
sub
xchg
testl
fidivrl
punpcklwd
lret
ret
mov
sbb
push
scas
roll
mov
jb
xor
jl
and
std
push
cmc
adc
ret
fsubs
sbb
xor
aas
push
and
mov
push
push
sub
dec
cltd
lods
cmp
mov
rcr
mov
mov
movsb
and
jle
mov
mov
rclb
jne
jmp
test
adc
fcoms
imul
mov
in
std
lcall
jp
dec
xor
pushf
outsb
mov
daa
mov
pop
sbb
adc
pop
push
psubw
ficompl
fcoml
scas
inc
movsb
mov
push
sbb
and
mov
cmc
add
xchg
dec
sub
sbb
inc
mov
jmp
loope
inc
ret
lea
xchg
orl
jbe
and
dec
jmp
aad
jo
push
jle
sub
dec
adcb
inc
fildll
mov
push
in
fxch
or
cmpsb
mov
mov
cmp
push
add
ss
cld
lahf
xorb
adc
out
jno
push
jnp
dec
out
pop
das
lahf
push
cmp
jg
push
dec
jno
scas
add
in
xchg
xor
inc
dec
push
int3
out
pop
movb
into
push
cmp
pop
push
fistl
push
mov
rolb
or
inc
lods
xorl
sub
out
stos
popa
push
sarb
push
in
push
adc
shll
ficoms
out
pop
mov
lods
add
test
std
sbb
ss
fmull
xor
or
cltd
pop
xorb
jecxz
fadds
cmp
lcall
mov
mov
mov
and
out
xchg
xor
xor
and
xchg
push
cmc
out
jns
sub
rcrl
fiaddl
dec
ss
inc
aam
and
mov
fisttpll
mov
pop
adc
es
insl
mov
mov
mov
fwait
outsl
das
test
jno
jp
stos
pop
cmpsb
xor
pop
adc
popa
data16
xchg
mov
imul
aaa
movsb
push
cltd
repz
xrelease
dec
mov
cmp
xchg
les
sbb
repz
dec
mov
loope
add
mov
out
out
adc
jae
in
add
jmp
jmp
sarl
mov
ljmp
outsl
fists
push
mov
or
std
in
sub
decl
pop
cmpsb
inc
pushf
jne
mov
cmpsb
in
les
dec
mov
fiadds
mov
test
fmull
sbb
mov
stos
and
mov
adc
inc
mov
lret
dec
popa
mov
lahf
lds
add
pop
hlt
test
mov
test
ftst
add
sbb
fmuls
mov
das
mov
jnp
rorb
mov
or
arpl
mov
popf
jl
aam
daa
xor
arpl
outsl
lods
sub
leave
add
lods
in
or
jae
xchg
sahf
inc
fisttps
inc
in
notb
out
lods
mov
addb
and
add
dec
push
jnp
pop
int3
push
cmpsb
xlat
int
test
out
adc
inc
in
fcompl
mov
loopne
mov
fbld
dec
insb
mull
dec
xor
sub
pop
ja
sub
lret
ja
leave
jnp
testl
add
lock
xchg
sub
lods
jns
pop
xchg
xor
mov
das
dec
hlt
rcrb
cli
mov
xor
sahf
sbb
dec
movsb
mov
rcrb
lock
mov
inc
sbb
and
cwtl
imul
xchg
dec
adc
ret
cs
popa
or
loopne
cmp
adc
jg
mov
popf
add
ficoms
jae
ret
push
jp
mov
fistpl
popf
bound
sbb
and
mov
add
fisubrs
insl
ror
imul
add
jl
jb
pop
pop
adc
into
push
cmp
jo
push
lcall
jecxz
insb
or
ds
test
push
nop
mov
cmp
mov
ds
aam
ficomps
pop
cs
loop
leave
cmp
sbb
pop
stos
pop
pop
std
cltd
cmp
scas
mov
arpl
lahf
push
and
lods
sub
xor
insl
xor
sub
xchg
push
dec
xor
push
fists
movsb
lock
es
xchg
gs
in
fistl
mov
add
cmp
push
mov
scas
lcall
in
xor
scas
xor
lds
aam
jae
sbb
or
xor
lods
shl
and
lret
insl
cmpsl
enter
test
add
out
xchg
clc
mov
push
ret
es
ss
and
push
jns
dec
out
xchg
add
fadds
sub
ret
jo
in
fisubrl
or
and
mov
sbb
movsb
sub
or
pusha
test
imul
cwtl
mov
fnsave
into
mov
out
ss
lods
jl
jbe
add
repz
jae
ja
dec
nop
lods
add
cmp
inc
dec
cmp
jge
sbb
dec
cmp
inc
adc
and
mov
xchg
push
into
cmpsb
in
out
mov
inc
cmp
push
xchg
inc
lcall
mov
imulb
shl
pop
xor
push
jae
sub
aaa
psubsb
cmp
jg
add
sar
repnz
and
mov
imul
mov
jae
imul
ljmp
mov
xlat
sub
mov
sti
push
rol
cmp
mov
or
push
inc
aas
xor
inc
ds
or
mov
das
inc
push
dec
loopne
adc
add
dec
aad
jecxz
nop
subb
pop
cmp
daa
dec
lods
out
mov
add
jns
jecxz
pop
in
adc
sbb
out
xorl
mov
addr16
sub
test
fwait
sub
adc
cmp
jl
dec
push
test
or
push
mov
sub
mov
imul
jae
mov
mov
in
cld
aaa
jno
inc
int
sub
xchg
adc
lds
and
ja
mov
jp
sbb
jmp
jmp
mov
addr16
rorb
fsubl
nop
imul
push
outsb
lock
mov
cmp
scas
ficompl
mov
ds
loope
xor
inc
or
mov
sbb
lret
addr16
inc
mov
push
call
and
cmp
cmp
repz
fsubl
xor
addr16
pop
iret
ljmp
loop
shrl
mov
mov
adc
es
and
push
dec
lret
addr16
test
push
push
and
jle
movsb
xor
cmpsb
ss
jmp
lock
push
das
mov
pop
inc
or
cmp
je
popf
bnd
das
mov
fldl
imul
dec
dec
mov
aad
outsb
inc
jnp
xlat
cld
pop
mov
xchg
not
add
test
int3
outsl
inc
mov
xchg
mov
call
mov
test
arpl
icebp
aas
xchg
and
cmp
cmp
mov
fmuls
or
les
sub
push
js
sub
aaa
dec
and
push
and
sub
out
aas
pop
fsubrp
rcrb
dec
jbe
adc
push
push
and
test
packuswb
lock
es
aam
or
and
fwait
rcr
shlb
data16
sbbb
sbb
sbb
cmp
mov
dec
dec
push
sbb
jno
bound
loope
mov
fldenv
push
jns
pop
fmuls
inc
sbb
ret
sub
popa
arpl
pushf
insb
sub
xor
xlat
jo
adc
jbe
out
and
adc
test
xor
aad
scas
ljmp
out
adc
xor
xor
aaa
movsl
cmp
ja
in
add
inc
and
fsubs
in
xchg
andb
sarb
add
dec
idivb
pop
ficoms
mov
test
cmp
mov
gs
and
lahf
inc
push
movsl
ret
sbb
cli
mov
adc
dec
aaa
jbe
inc
or
mov
rcr
xor
mov
ljmp
mov
xlat
addr16
xchg
lock
mov
add
fstps
xchg
mov
cmp
or
xchg
add
ljmp
lcall
push
out
mov
jl
cmp
call
fimull
enter
lret
push
push
push
aam
inc
mov
sbb
push
dec
pop
cmpsl
shlb
lret
out
pop
pop
fldenv
pop
pop
ds
mov
mov
dec
lret
mov
repnz
rolb
fisubrs
and
stos
pop
bound
scas
mov
xor
mov
pop
das
out
lcall
pop
mov
lods
jmp
jb
fisttps
sahf
repz
or
lcall
sahf
test
inc
cmpsb
loope
pusha
fsubl
lea
mov
dec
int3
sbb
push
sub
pop
lahf
pop
lds
icebp
imul
cmpsb
test
lods
dec
sbb
enter
inc
cmp
push
in
sub
jle
test
xor
insl
mov
iret
inc
mov
push
adc
stos
rcrb
lahf
dec
rcl
cmpsb
pushf
inc
shlb
mov
dec
je
mov
mov
push
xchg
out
push
push
mov
inc
cld
sbb
cld
divl
ffree
notb
sbb
fwait
test
mov
pop
std
and
leave
andl
push
inc
fmuls
jle
stos
adc
cwtl
movsl
out
add
fists
rcll
adc
jp
push
ja
xchg
test
jp
fs
daa
rol
aas
jo
mov
mov
daa
mov
xor
dec
ss
push
or
aam
sbb
cmp
cwtl
in
iret
push
call
mov
mov
data16
xchg
inc
jbe
std
xor
sarb
test
repz
leave
aaa
adc
fdivl
jo
sbb
dec
jp
std
adc
popf
lcall
mov
mov
bound
xchg
cmpsb
popf
xchg
xchg
lds
loope
imul
xchg
call
outsb
sahf
mov
pop
std
fs
in
mov
jbe
pusha
icebp
sub
add
aaa
pop
jne
movsl
jns
adc
xlat
xor
loopne
mov
push
cwtl
inc
and
dec
or
popf
pop
xchg
inc
cltd
jo
add
push
ja
adc
test
in
andb
inc
xchg
jne
btc
rclb
gs
out
add
or
jno
push
jae
xchg
daa
test
mov
dec
cmp
jb
xor
jl
sub
std
setnp
xchg
pop
jmp
test
sar
shl
cmp
lea
push
mov
ss
loop
cmpsl
arpl
xor
data16
fldl
lock
xor
hlt
push
decl
mov
jmp
or
es
dec
or
outsl
pop
rclb
xlat
shlb
add
bound
es
lds
mov
jmp
mov
mov
or
fs
imul
pop
or
sahf
and
sub
push
push
xor
pop
lock
jl
lret
test
les
pop
mov
xchg
movsb
icebp
gs
jecxz
aad
push
mov
shll
nop
movd
inc
stos
or
addb
mov
sbb
out
pop
cmp
push
and
sub
or
pop
adc
mov
popa
xlat
testl
cmp
popa
loopne
idivl
shr
pop
mov
mov
mov
xchg
adc
lret
pop
mov
mov
mov
or
les
add
popa
fdivl
test
stos
mov
jno
movsl
inc
add
imul
pop
iret
scas
pop
adc
inc
aaa
lock
mov
and
sub
sub
sti
and
mov
adc
lods
jae
fldl
into
jo
push
mov
push
xchg
cmp
clc
xor
pop
jns
nop
dec
jno
in
xchg
mov
push
aas
jo
dec
and
aaa
cmp
lods
mov
icebp
mov
shll
sahf
cmp
xor
inc
adcb
xor
insl
mov
les
mov
adc
bound
adc
orb
mov
dec
cmp
xor
push
push
fs
notb
repz
mov
adc
pop
data16
out
mov
jae
lods
loope
pop
sub
jae
add
or
popa
pop
jge
cmovg
out
imul
mov
xor
in
hlt
daa
shlb
in
int3
sub
hlt
rcr
adc
push
lds
lret
ret
jl
scas
push
pop
pusha
iret
sbb
sti
popw
cmpsl
jo
mov
xor
xorl
data16
jle
ret
lds
cmp
and
mov
sbb
fcoms
je
popa
clc
pop
push
or
mov
mov
stc
and
push
and
adc
cmp
aad
xor
decb
push
push
enter
cmp
jl
pusha
push
mov
push
clc
xor
jbe
out
xchg
cli
push
jbe
hlt
lret
iret
in
lcall
negl
jne
icebp
fs
or
xor
jae
clc
pop
sub
cs
data16
jbe
enter
pop
adc
mov
push
dec
jns
fsubr
cli
popf
xchg
adc
mov
or
gs
loopne
out
addr16
push
sub
or
sub
adc
sbb
shrl
ss
push
dec
jge
cmpsb
shlb
push
out
and
in
imul
or
and
scas
push
movsl
xchg
sub
out
pop
add
sub
lock
and
push
int3
hlt
and
adc
jbe
hlt
fstpl
xchg
les
jno
sub
mov
push
sbb
in
cld
and
iret
rcl
lret
call
sbb
inc
add
lds
js
fs
pusha
cli
mov
js
adcb
adc
sub
adc
and
call
add
rcrb
mov
cmp
bnd
push
lret
mov
mov
cmp
add
call
pop
inc
add
das
jns
pop
jle
mov
xor
outsb
mov
scas
into
roll
fcoml
pop
pop
popf
mov
leave
fdivp
push
sub
pop
mov
mov
out
scas
xchg
test
sar
mov
rol
cmp
pop
ljmpw
mov
dec
ficompl
sbb
mov
insb
hlt
mov
stos
cmp
push
scas
jne
mov
out
jb
mov
loopne
movsb
sti
add
sub
jnp
or
bound
aas
mov
mov
in
lret
nop
sub
rclb
lret
les
inc
fadd
pop
stc
lock
jae
sbb
out
adc
ljmp
mov
leave
dec
insb
fwait
sbb
dec
dec
adc
inc
idivl
loop
xlat
outsb
fsubrs
imul
fisubl
fisubrl
shll
mov
aad
imul
cmpsl
cs
adc
pop
arpl
cmp
and
subl
sbb
inc
je
enter
subl
dec
ja
push
push
lods
int3
test
push
sbb
xlat
cmp
sub
xor
sbb
fs
xchg
movsb
sbb
push
ds
or
jmp
icebp
mov
cmpsl
fisttps
pop
xor
jp
movsb
pop
jle
xchg
mov
mov
test
fwait
xchg
sbb
pop
icebp
cmpsl
iret
lds
and
dec
push
pop
adc
sbb
loopne
pop
popf
sub
call
jnp
ss
aam
push
arpl
je
sbb
push
and
xchg
mov
dec
pop
push
mov
pop
pop
xchg
std
rcll
data16
add
jmp
sub
aam
movsb
sub
adc
dec
test
lret
enter
mov
adc
and
xor
push
or
jge
xchg
cmp
data16
aaa
lret
lret
push
mov
sbb
insl
jp,pt
sub
out
in
cmp
das
push
int
pusha
or
out
push
sbb
cvtps2pi
xchg
testb
mov
add
fidivrs
loope
jo
stos
icebp
inc
or
nop
outsb
cmc
call
push
or
mov
xchg
or
push
loope
adc
add
cld
mov
xor
push
fists
jae
adc
mov
fisubl
mov
ljmp
lahf
add
jbe
adc
jmp
push
test
stos
addb
lods
mov
mov
psubsw
aad
daa
jbe
xchg
insl
cmp
adc
std
mov
test
sahf
call
inc
cmovbe
subb
sub
push
insl
outsl
ret
outsb
je
push
sub
sub
rclb
mov
add
jnp
or
xchg
push
inc
sub
mov
mov
into
inc
or
xchg
xchg
decb
adc
mov
mov
out
adc
cmpsb
adc
sub
cmp
mov
add
mov
jge
out
or
cmp
lahf
mov
xchg
add
push
ret
mov
pop
or
or
fs
popa
mov
mov
inc
hlt
mov
mov
xchg
xor
in
int
std
xchg
and
xchg
repnz
rcrb
call
je
adc
or
sbb
enter
pop
xchg
sub
xchg
pop
dec
insl
popa
mov
sub
or
pop
jle
dec
sbb
jle
pop
enter
pushf
jb
push
cmp
and
fsubs
mov
call
enter
push
movsb
cmc
test
mov
stos
int3
call
xchg
or
sarl
in
or
xchg
mov
mov
cmp
add
gs
or
mov
rcr
addr16
mov
push
pop
dec
popf
out
inc
jb
jg
mov
roll
mov
addr16
jge
pop
mov
jne
icebp
out
lret
shrb
mov
push
add
push
or
stos
fldl
out
lahf
inc
popa
push
dec
push
xor
cmp
jg
pop
push
mov
in
aam
mov
cltd
pop
pop
and
clc
mov
pop
or
int3
mov
or
iret
call
sbb
mov
shrb
or
das
xchg
mov
test
push
pop
das
and
arpl
or
sub
mov
cmc
clc
shrb
fidivs
sub
add
dec
mov
push
fisttpl
jae
inc
and
pushf
mov
pop
pop
jae
fs
cmpsb
aas
dec
loope
and
or
push
fisttpl
xchg
shll
push
push
and
or
jle
push
sbb
push
pop
mov
push
fistps
sub
add
decb
add
pop
mov
mov
lahf
sbb
out
hlt
jae
iret
int
fistpl
dec
fs
cmpsl
mov
lahf
ret
popa
cmp
dec
jo
out
mov
mov
fistl
cmp
jl
in
fnsave
fcmovne
addr16
jne
loop
xchg
mov
repnz
adc
fsubl
mov
lods
and
jb
mov
stos
or
push
fisttpll
arpl
jmp
scas
push
jo
je
ds
sub
call
mov
adc
jns
pop
xor
in
push
mov
in
mov
imul
into
pop
aas
inc
fiaddl
lods
cmp
push
movb
mov
cld
mov
shlb
fcomi
js
stos
pop
mov
and
and
mov
mov
mov
sarl
fldt
enter
lods
inc
pop
fmuls
das
xor
and
push
dec
pop
or
out
cmp
cmp
bound
out
add
jo
jecxz
xchg
cwtl
jno
cmp
and
insb
mov
idivl
mov
xlat
inc
jle
loopne
popf
pop
or
and
iret
rcrb
fidivrs
lods
mov
push
aam
push
int
hlt
dec
cmp
popf
cwtl
cmp
loop
mov
inc
sub
ljmp
sub
jbe
cmp
jecxz
cmp
mov
call
sub
fstl
adc
sub
loopne
std
outsb
into
lret
or
ficompl
push
test
push
rcll
push
fistl
jl
mov
push
and
dec
enter
loope
cmpb
sbb
loop
mov
les
test
push
push
ds
in
loope
aaa
pusha
gs
adc
pop
pop
adc
pushf
jp
in
add
jl
push
das
stos
xchg
test
lcall
push
sub
adc
mov
insl
xor
cmp
mov
jo
ret
push
cld
scas
or
insb
sti
icebp
mov
cltd
and
adcl
cmp
mov
test
js
fisubs
pop
sbb
dec
cs
add
out
test
sarb
dec
fcompl
scas
push
enter
arpl
stos
into
leave
pop
mov
cmp
mov
sub
adc
lea
loope
xor
ds
lods
pop
out
lea
inc
pop
in
push
mov
test
dec
movsb
movsb
jns
mov
sbbl
movsb
push
popa
filds
push
jmp
xor
lods
cltd
mov
test
js
incl
bound
adc
int
loopne
loopne
add
push
sar
xor
jae
push
pop
xchg
mov
inc
pop
sub
outsl
sbb
lret
mov
cmp
push
adc
sub
xor
stos
pop
push
jge
jge
mov
in
mov
or
pop
in
sub
divl
scas
mov
movsb
in
xchg
movsb
sbb
pop
ja
js
or
or
xchg
lcall
ret
adc
je
jge
mov
inc
dec
cmpsl
sub
popa
movsb
loopne
addr16
cmpsb
xlat
cmp
push
or
mov
pop
mov
and
push
push
repz
ljmp
xchg
mov
ret
jg
daa
or
loope
repnz
push
inc
pop
jno
mov
inc
dec
out
push
or
repz
inc
in
fsubs
mov
or
pushf
repz
js
add
orl
pop
lret
cmp
mov
sbb
mov
dec
inc
out
push
and
bound
mov
fsubr
and
dec
pop
int3
cmp
fbld
adc
push
es
in
add
enter
lods
xlat
jmp
sub
mov
add
dec
mov
orl
bound
fisttps
rorl
push
incl
dec
cmp
and
movsl
xchg
xorl
in
and
adc
add
or
aas
inc
iret
lcall
add
jno
outsb
fs
jp
jns
pop
arpl
xor
test
sti
pop
xchg
sahf
insl
jnp
mov
mov
xchg
xchg
je
jl
in
movsb
dec
xor
jg
bound
push
cs
and
enter
cmp
lret
in
add
cli
sbb
outsb
cmp
scas
inc
and
pushf
cmpsb
xor
lret
ljmp
mov
cld
pusha
push
sahf
adc
xor
int3
cwtl
mov
adc
push
xchg
int3
xor
and
mov
mov
loope
imul
testl
sbb
or
shll
jmp
pop
xor
ljmp
dec
shll
jno
movsb
rolb
leave
in
nop
adc
scas
fiaddl
aaa
sahf
stos
cld
cmp
stos
adc
loop
pop
sbb
jbe
xchg
ss
hlt
iret
mov
outsl
jle
inc
mov
outsb
dec
rcrb
fcom
icebp
popf
repz
shrl
popf
fisttpll
xor
add
hlt
lret
lahf
jge
jl
push
jle
js
scas
int
cbtw
xor
sti
in
enter
xor
or
mov
sti
pop
or
push
je
mov
jnp
or
mov
psllw
and
mov
movntq
out
mov
and
sub
mov
cltd
xor
loopne
push
fwait
add
pop
loopne
shl
mov
fmull
imull
and
and
dec
stos
xor
ja
jg
xchg
pop
inc
add
jns
icebp
lods
pusha
push
push
sub
xor
sbbb
xor
mov
shrb
aad
nop
dec
and
sahf
shl
adc
fsubr
jo
sbb
jp
pop
xor
cmp
push
es
xlat
imul
xchg
insb
dec
leave
inc
loopne
sbb
aaa
xchg
sbb
cmp
std
xchg
std
pushf
mov
das
jne
arpl
xor
cmpsl
in
les
cwtl
xor
add
ret
test
dec
bound
add
fwait
dec
insb
adcl
sarl
gs
xchg
popa
jmp
fidivrs
lea
push
push
mov
insl
mov
leave
and
mov
lret
daa
mov
mov
cmp
arpl
pop
test
jnp
push
mov
pop
out
or
mov
imul
neg
in
movsl
xchg
ror
pushf
pop
inc
cmp
loopne
pop
mov
shrb
pop
shlb
cmp
push
cmc
int
cli
cmp
out
xchg
mov
fildll
ljmp
mov
das
inc
mov
sbb
jbe
add
mov
add
scas
ja
int3
cmp
sub
mov
pop
mov
jne
in
pop
pusha
mov
aad
out
mov
inc
mov
mov
sub
in
fwait
adc
pop
cmp
fisubs
pop
xchg
inc
std
cmp
inc
out
push
mov
in
xchg
xor
mov
add
sub
stos
jmp
mov
jb
mov
pop
push
jo
mov
mov
push
sbb
mov
shrl
xor
rcl
inc
icebp
ret
sbb
jg
xchg
into
cwtl
shl
arpl
jns
sub
push
xchg
shlb
je
ja
or
push
cmp
push
scas
aad
les
fisttps
and
lahf
imul
or
xor
pushf
ja
cmp
push
js
pop
out
leave
lods
ja
je
addr16
mov
pop
push
pop
test
stc
xor
xchg
imulb
mov
das
lock
movsl
das
insb
mov
xchg
rclb
jl
or
lcall
mov
adc
movsb
clc
inc
lea
in
jmp
mov
gs
jno
push
in
aam
out
in
pop
xchg
mov
insb
xor
jl
mov
dec
sub
test
ror
adc
aam
leave
push
pop
jle
mov
add
and
outsl
jb
mov
das
adc
jnp
sbb
dec
cmp
sub
dec
mov
gs
and
fstl
notl
push
push
imul
inc
xchg
dec
out
dec
or
push
push
pushfw
sub
dec
sub
daa
push
adc
push
out
push
mov
jns
lea
mov
leave
sbb
sbb
dec
out
push
leave
arpl
cmpl
jmp
lods
push
dec
jge
dec
pop
and
addr16
mov
push
jg
cld
or
mov
pop
jmp
mov
shrb
testb
lea
sub
add
add
jne
test
sub
mov
ss
subb
add
jnp
jmp
test
lcall
or
sub
out
pop
ja
lret
push
mov
xor
push
in
xor
rolb
pop
jns
aad
cltd
pop
aad
cmp
inc
jnp
popa
mov
push
xchg
test
je
xor
scas
xor
jecxz
test
mov
in
lods
sbb
mov
fnstenv
xor
aaa
fs
orl
and
lahf
jecxz
mov
hlt
sbb
add
stos
mov
dec
cld
outsb
xor
adc
shl
push
mov
jmp
sar
into
push
test
sahf
add
std
lret
inc
sub
pusha
std
mov
cmp
and
out
add
pop
mov
inc
fdivp
sar
push
pop
loope
inc
adc
scas
sti
add
add
mov
clc
mov
mov
push
outsl
jbe
adc
dec
lret
jge
out
cld
insb
cld
and
push
rorl
lret
mov
mov
lock
faddl
mov
and
in
fwait
and
jns
popa
repnz
fisubrs
clc
rorb
scas
leave
clc
cmp
nop
pop
mov
movsb
xchg
insl
sub
ret
inc
push
xchg
cmp
cmp
aaa
xor
js
hlt
xchg
sbb
mov
in
and
fldcw
inc
mov
out
jb
call
sbb
pushf
pusha
cwtl
jecxz
mov
jmp
pop
int3
or
jmp
pop
add
mov
lock
ficompl
inc
adc
or
mov
xchg
xor
cli
sub
popa
out
subb
dec
aam
dec
in
out
cmpsb
in
sbb
cmp
out
cld
push
and
sbb
sti
aam
mov
outsb
xor
gs
mov
out
inc
push
enter
bound
shrb
inc
cmpsl
repnz
dec
loopne
out
insl
inc
inc
test
in
push
lods
mov
sub
and
mov
stc
insb
bound
pop
clc
mov
out
xchg
xchg
pop
or
sahf
imul
mov
pop
clc
mov
fimuls
xor
je
mov
je
mov
cmp
das
popf
mov
push
mov
idivb
stos
mov
add
sbb
sub
punpckldq
cmc
cmpsl
pop
jno
push
mov
jbe
ja
push
mov
arpl
jbe
sub
pop
dec
js
mov
shl
cs
sub
repz
xor
jl
outsb
outsl
lock
stos
inc
and
movsl
and
fsubp
mov
ja
push
pop
inc
imul
js
and
sbb
cltd
stos
hlt
mov
mov
cmpsb
daa
and
pop
mov
jge
dec
lock
orb
xchg
rcrl
jge
add
mov
push
scas
inc
ret
and
cmp
push
xchg
in
jmp
imul
push
pop
ljmp
adc
orl
cmp
repz
adc
xor
dec
mov
leave
xchg
xor
or
xchg
ret
mov
add
pusha
into
push
sbb
xor
ljmp
dec
pop
outsb
dec
pop
xchg
in
cli
mov
in
ficoms
mov
std
add
mov
jecxz
ljmp
popa
push
push
xor
inc
mov
cld
jnp
imul
test
pop
mov
inc
fbstp
jg
call
and
mov
sbb
xor
cmp
mov
repnz
and
xlat
mov
mov
and
jg
fs
imul
pop
fs
dec
repnz
or
sbb
jg
es
jnp
cwtl
out
dec
xlat
enter
xor
xor
ja
ret
and
xchg
sbb
out
add
cmp
test
sarl
outsl
scas
xor
in
sbb
mov
jne
dec
ds
dec
mov
mov
cmc
out
stos
pushf
ss
mov
in
adc
pop
mov
daa
fs
cmovae
sub
popf
pop
in
dec
les
lds
dec
fcoms
negb
fmulp
cmp
test
or
hlt
test
movsb
in
popf
push
or
push
jb
es
inc
sbb
sub
pop
xchg
repz
push
fsubrs
out
cmpsl
ret
bound
es
mov
push
sub
jbe
sub
cmp
dec
lods
int
cmpsb
test
jp
pop
loop
or
mov
adc
add
cmpsb
cmp
rcll
add
jae
andl
sbb
insl
jnp
adc
test
arpl
xchg
inc
jo
xchg
mov
sti
and
mov
mov
push
cltd
inc
popa
xchg
outsl
sbb
lock
add
and
cld
push
or
stc
stos
xor
pushf
jmp
ret
mov
out
and
in
mov
mov
stc
in
jecxz
inc
xchg
xor
scas
push
jg
cmp
or
dec
pushf
sti
push
test
push
lcall
xchg
pusha
icebp
leave
in
mov
pop
pushf
mov
cwtl
fsubrl
push
jo
add
daa
mov
inc
pushf
xchg
add
ja
dec
cmp
mov
jge
jae
ret
push
adc
rcrb
movsl
xchg
in
push
xor
jbe
or
loop
mov
iret
pop
lcall
incl
insb
in
inc
das
fadd
add
sbb
xor
ss
xchg
sub
jge
add
outsl
jno
pop
in
sub
pop
in
scas
test
pop
and
inc
mov
xchg
sbb
cwtl
cmp
pop
sub
inc
loope
or
jno
jmp
and
out
flds
in
idivl
pop
push
repz
imul
xchg
cmp
add
xchg
add
in
mov
std
mov
push
gs
pop
jb
jne
pop
cmc
scas
jns
xchg
sbb
or
into
iret
pop
fwait
add
xchg
xor
or
xchg
cwtl
xor
dec
sbb
addr16
fcomps
fistpl
push
insb
push
mov
fists
loop
gs
xchg
adc
rorb
fadd
daa
ljmp
sbb
add
inc
mov
fnsave
mov
jl
pop
xor
inc
xor
cmp
lahf
add
push
lock
cwtl
cmp
mov
shlb
rcr
loopne
leave
push
jbe
cmp
ret
mov
cmp
sub
dec
sahf
daa
daa
daa
sti
push
mov
stc
jmp
and
jmp
add
pop
in
cmp
out
neg
xor
stc
pop
xor
push
scas
mov
and
in
sti
scas
scas
iret
mov
mulb
icebp
push
push
sub
jae
cmc
lock
dec
jmp
xchg
imul
loopne
imul
dec
mov
mov
subl
xchg
fnstsw
imul
push
or
mov
mov
ret
cmp
sbb
jne
pop
imul
inc
mov
std
inc
pop
pop
in
pop
or
pop
jbe
rcll
out
mov
inc
dec
int3
mov
adc
cmp
std
and
out
addl
push
xor
jae
test
popa
jp
bndldx
lahf
ret
or
xchg
andb
loop
je
ret
jmp
fcoms
cs
mov
mov
imul
adc
jb
push
mov
fs
push
xchg
jmp
cmp
in
or
fldz
add
loopne
ds
pusha
sbb
push
or
cs
arpl
pusha
mov
sarb
sbbl
outsl
movsb
in
push
test
sub
mov
xchg
mov
push
fistpl
sub
in
inc
sbb
add
mov
shr
out
push
cmpsl
sub
lods
and
add
inc
dec
scas
repnz
lahf
repz
mov
pop
bound
or
out
dec
outsl
sub
lods
ret
outsl
jne
loop
dec
ret
add
fs
pop
mov
shl
jns
or
add
add
je
rcrb
sub
jo
rcr
xor
nop
jg
out
cwtl
sub
or
out
sti
mov
pop
add
lret
addr16
mov
mov
inc
movsl
inc
and
cmp
arpl
add
push
rorb
or
dec
scas
cmpb
aas
scas
aas
fisubrs
aaa
subb
pop
hlt
add
ret
je
leave
loop
and
mov
int
testl
loope
sbb
inc
daa
push
sarb
pusha
pop
mov
jno
mov
scas
idivb
pop
fdivl
in
or
xor
imul
std
in
mov
rclb
scas
imul
lods
xchg
lods
fmuls
dec
bound
ss
jae
ljmp
inc
fsubs
mov
ds
dec
cmp
push
in
data16
pop
dec
fisttps
imull
or
les
xor
xor
mov
xor
xor
push
sbb
sti
dec
push
rorb
xor
mov
lcall
adc
mov
call
sbb
inc
sub
cltd
sbb
out
fsubs
jno
jns
xchg
and
sar
insb
std
push
fmull
adcl
pop
loope
adc
dec
cli
xchg
jo
fdiv
xor
ds
pop
lock
add
fwait
pusha
hlt
pusha
shlb
mov
sub
push
push
dec
pop
shl
cmp
movsl
adc
out
and
add
dec
ss
lds
mov
gs
cwtl
jle
fs
and
lea
push
mov
inc
adc
ja
mov
mov
cltd
stos
scas
test
add
loopne
mov
push
dec
push
xor
xchg
mov
cmpsl
mov
cld
sbb
std
pushf
dec
xchg
leave
sub
sbb
icebp
out
xchg
rolb
xor
test
sarl
jge
pop
lods
movsb
cmc
mov
pusha
fadds
es
cli
out
cltd
lock
pop
popf
xor
mov
roll
pop
jmp
jecxz
xchg
inc
xlat
stos
sub
gs
or
jbe
mov
jg
ds
xchg
pop
in
cmp
stc
jecxz
sbbb
pop
loop
xor
scas
je
aad
ret
imul
aas
jmp
adc
inc
clc
fnstsw
cmp
cwtl
loopne
inc
faddl
dec
js
lcall
outsb
cmpsl
pop
mov
cmp
je
aas
push
push
mov
cmp
lret
jmp
ficomps
shr
sar
imul
stos
pop
rorb
popa
inc
icebp
push
fsubrl
add
int3
xor
add
insb
subl
leave
push
push
push
jo
fimuls
fisubrs
rolb
adc
mov
ret
pusha
and
jge
add
pop
aaa
and
out
lcall
push
push
jmp
sub
and
mov
lret
test
push
repnz
adcl
fistps
ds
xor
lea
and
imul
loope
rcrl
mov
adc
mov
jnp
sti
xor
scas
rorl
and
rorb
into
js
xor
push
mov
inc
add
jl
popa
lahf
sub
inc
stos
rol
add
mov
mov
fwait
xchg
sub
pop
jmp
mov
hlt
pop
lahf
xchg
mov
mov
scas
push
pop
cmp
popa
fists
aaa
inc
push
pop
out
lods
xchg
xor
and
fistpl
mov
fwait
sbb
add
cmp
movsb
push
xchg
repnz
shl
cltd
jnp
mov
or
lea
or
xor
pusha
push
cmpsb
xor
dec
insl
out
push
stos
jle
mov
ret
cltd
test
imul
push
sahf
insl
lret
jp
mov
inc
mov
lahf
call
or
or
aad
adc
loop
add
cmpsb
mov
movsl
int
movsb
adc
rcl
mov
cmpb
fiadds
xor
movb
stc
sarl
dec
or
mov
popa
mov
ds
insb
cmp
fistl
adc
mov
pop
int3
sub
inc
mov
outsl
pusha
lea
mulb
iret
je
pop
sub
cmp
or
sahf
test
in
fs
push
push
mov
jns
jmp
mov
mov
and
stos
ret
stos
rorb
cmp
insl
mov
mov
sti
adc
sub
cmpsb
orl
push
in
cmp
push
dec
in
lret
sbb
cmp
nop
sarb
sarb
mov
stos
sbb
jl
scas
ljmp
imul
mov
push
pusha
cmp
out
inc
clc
or
scas
data16
ja
jmp
adc
mov
cli
push
cmp
jb
sbb
mov
lea
xchg
insl
inc
icebp
xchg
or
movsb
sub
add
cltd
add
gs
adc
and
pop
mov
xchg
pop
adc
sub
mov
inc
daa
mov
outsb
push
icebp
mov
sbb
jge
cmp
push
rorb
sub
push
push
clc
imul
rclb
pop
mov
rcl
jmp
or
lahf
push
sti
mov
pusha
dec
test
dec
cmp
mov
imul
movsb
cld
sbb
xchg
push
push
aaa
mov
xor
stc
sub
add
or
addr16
in
xor
paddsw
stos
rorb
movsb
inc
mov
outsl
sti
mov
push
int3
adc
cmp
loop
inc
aaa
jb
inc
push
mov
xor
insb
cmp
ror
stos
inc
pop
push
sbb
xchg
jno
jge
adc
shrb
sub
int3
dec
sub
inc
adc
iret
or
in
mov
das
fld1
and
cmpsl
cmp
sbb
in
dec
cmp
ja
ds
adc
das
and
xchg
adc
push
sbb
and
inc
mov
leave
dec
in
outsl
lods
shrl
inc
cmpsl
sub
cmp
je
mov
bound
fdivrs
and
pop
mov
adc
inc
xor
lods
jne
fimuls
inc
jno
sahf
and
jl
incb
push
dec
pop
xchg
cmp
jg
or
mov
jne
icebp
imul
sub
add
jns
icebp
push
loopne
mov
inc
scas
ljmp
inc
mov
cmp
pop
imul
lods
mov
cli
adc
dec
dec
nop
inc
sbb
push
add
jo
fs
fnstenv
mov
out
cltd
sbb
in
mov
enter
or
lcall
or
ljmp
test
dec
rclb
dec
or
loopne
stc
nop
stos
scas
mov
sub
mov
jbe
jns
aas
stc
pop
dec
mov
je
xchg
int
adc
nop
mov
loop
mov
out
and
inc
dec
xor
sub
pop
mov
dec
lret
jmp
lcall
cmpsl
lcall
cmp
stos
lock
push
ja
lods
fs
bound
ror
jae
inc
mov
jnp
cmp
adc
pop
pop
test
xchg
loopne
xor
xor
out
aad
sub
icebp
lret
dec
xchg
ret
sahf
fdivrs
loope
ljmp
jp
lods
mov
cmp
pop
out
xor
jle
adc
flds
aam
out
pop
inc
mov
scas
gs
jnp
jmp
push
push
mov
push
aam
ss
jmp
divl
xchg
mov
push
sub
fdivs
call
mov
lock
or
jne
sub
bound
lods
and
fildll
add
ds
xchg
mov
pop
push
ljmp
xchg
adc
xchg
xchg
ja
stos
jae
mov
lock
push
mov
ficompl
imul
and
jbe
push
and
nop
push
sbb
fdivl
mov
inc
aad
sti
xor
push
mov
das
push
and
fldl
cmp
mov
pusha
pop
std
divl
inc
test
fdivrl
xlat
lcall
pop
or
dec
jne
jbe
sbb
std
out
cmp
xchg
push
cwtl
popf
push
sub
xor
out
iret
add
adc
outsl
pop
pop
fsubrl
xchg
mov
dec
jnp
or
out
pop
andw
dec
xor
repz
or
mov
sarb
les
fcomip
pop
sub
addr16
cmp
loopne
daa
stc
test
push
sub
jl
mov
pop
add
ljmp
test
push
out
inc
inc
jl
add
pop
sub
jo
ljmp
add
xor
lret
je
xchg
mov
test
mov
mov
dec
mov
rclb
sub
mov
jmp
das
daa
aaa
fwait
dec
clc
enter
or
mov
movsb
jns
imul
ficompl
cmp
dec
sahf
leave
ficoms
and
mov
shl
cmp
lea
decl
cmpsl
dec
adc
push
icebp
pop
push
xorb
inc
imulb
jne
pop
adc
outsl
in
cli
into
jnp
in
and
jecxz
loopne
jnp
std
dec
arpl
or
or
out
rolb
or
push
shlb
bound
les
daa
add
incl
adc
iret
and
cmpsl
aas
sub
mov
or
xchg
fisubl
rolb
jns
or
pop
arpl
mulb
cmp
xchg
int3
mov
sub
icebp
mov
outsb
mov
lods
mov
mul
jbe
xlat
mov
sub
xor
jge
add
pop
cli
mov
jbe
sub
mov
cltd
popa
mov
and
jo
leave
and
mov
adc
test
xor
push
scas
insb
shlb
xchg
in
jo
sbb
sbb
mov
sub
dec
push
push
ja
repnz
stos
push
cmp
xor
sbb
testl
das
fsubs
subl
rcll
mov
cmp
dec
dec
dec
test
or
fidivs
jmp
mov
aad
movsb
popa
adc
dec
nop
idivb
data16
push
mov
in
inc
push
jae
out
xchg
jnp
in
mov
mov
rcll
sbb
neg
js
jge
and
cld
arpl
data16
int3
adc
enter
out
xor
adc
cmp
lret
and
mov
add
mov
mov
dec
sub
leave
xor
test
adcl
jge
pusha
stos
stos
je
xor
mov
imul
jo
mov
sub
jp
mov
popa
imul
cmp
pop
ljmp
ljmp
mov
and
notl
mov
fpatan
dec
ja
push
xor
test
xchg
push
repz
xor
cmp
scas
popf
div
std
xor
jecxz
rcl
mov
xor
push
cld
roll
sbb
in
mov
pop
loope
mov
andb
insb
sub
jg
add
adc
in
xor
xlat
pushf
pop
or
cli
inc
sub
jns
rsm
mov
push
xchg
pop
push
add
out
or
out
rorl
adc
pop
sub
cli
rol
or
xlat
mov
incl
adc
fs
shl
xchg
cmp
jnp
cld
fwait
jecxz
scas
mov
lods
popa
xchg
mov
cld
sbbl
xchg
xor
lahf
test
xchg
xor
sub
sub
add
cltd
dec
push
shlb
xor
js
jae
cmp
or
leave
popa
mov
xchg
push
or
fucomip
ret
or
mov
pop
and
add
shlb
jbe
lock
test
les
and
cmp
or
pop
xchg
hlt
inc
add
mov
jb
ss
mov
mov
jp
push
ret
cld
out
fisttpl
ss
xor
push
sub
mov
cmpb
push
push
and
iret
dec
xchg
dec
jge
addr16
mov
mov
in
in
mov
repnz
mov
mov
push
mov
push
es
xchg
icebp
add
mov
adc
pop
adc
nop
loopne
push
scas
mov
mov
xchg
jmp
or
js
sub
roll
lret
adc
mov
ret
fildl
imul
arpl
std
fdivs
adc
sub
repz
ljmp
pop
inc
scas
xchg
cltd
adc
mov
mov
push
std
scas
shrb
jge
mov
push
scas
es
popf
je
xchg
lret
notb
xchg
push
leave
ficomps
lret
mov
mov
cmc
dec
pop
push
sub
sarb
call
pand
sbb
call
push
and
dec
xor
xchg
push
and
xchg
fs
cmp
xchg
mov
and
lret
hlt
inc
sbb
enter
sbb
pop
xchg
lret
ret
insl
scas
mov
fistps
pop
jp
inc
push
insl
pusha
xchg
ret
add
pop
pop
dec
mov
sub
std
das
xor
and
jns
or
sub
sbb
sub
daa
lock
jae
push
cmpl
std
add
mov
and
fdivrs
or
cltd
mov
or
fcmovu
cmp
adc
jo
je
insl
jle
test
or
fnstenv
faddl
mov
push
out
mov
inc
movsb
cmc
jmp
mov
jbe
lahf
xor
adc
or
mov
lret
lahf
dec
insb
cmp
popf
fisubs
push
sti
xchg
adc
jge
jno
add
sub
xchg
fwait
scas
push
shrb
test
mov
loop
ret
aaa
fmuls
insb
push
je
jns
push
jg
mul
mov
adc
arpl
or
jne
and
lock
inc
push
out
and
cltd
ja
aas
add
jb
jae
pop
imul
sub
cmp
cmp
mov
adc
push
xor
mov
sbb
cmp
out
cli
test
cmpb
or
sub
push
roll
pop
mov
dec
or
or
jge
push
sub
sahf
jg
xchg
xchg
mov
scas
jge
daa
leave
outsl
or
push
loope
stos
sub
push
inc
adc
in
out
pop
mov
insb
lods
dec
adc
jle
sbb
ret
and
pushf
movq
out
sbb
sbb
mov
mov
jne
adc
lock
inc
popl
sub
and
dec
movsl
je
mov
add
enter
imul
xchg
lods
scas
adc
sub
out
pop
daa
jae
cmp
pop
mov
jns
push
flds
sub
dec
inc
cmp
es
idivb
xor
pop
repz
mov
sbb
adc
mov
xlat
and
test
notl
and
mov
mov
add
inc
fbstp
jae
pop
xor
fcomp
outsl
into
das
cmp
xchg
inc
add
psubsb
cs
or
xlat
jl
popf
stos
dec
mov
idivb
add
add
jecxz
mov
fldt
dec
aaa
in
pop
mov
test
ss
mov
sub
dec
inc
cmpsl
loop
sti
cmp
imul
into
cmpsl
adc
lds
mov
enter
push
or
fisubrl
movsb
adc
jmp
mov
sub
jnp
lock
nop
inc
cmp
pop
cmp
and
insl
repnz
daa
hlt
mov
push
sbb
pop
and
jl
rorb
sub
pcmpeqd
dec
jmp
mov
stos
addl
out
inc
into
add
insl
jo
hlt
inc
jmp
cmpsl
mov
jnp
fbld
or
dec
jle
mov
iret
enter
inc
fidivrl
bound
aad
xchg
jns
lahf
xchg
fcoml
pusha
or
lods
cli
lock
cmp
dec
sahf
iret
mov
add
int
scas
nop
jmp
pop
push
xor
cmpsb
pop
fbstp
fadds
mov
sahf
xor
lock
int
mov
add
push
mov
popa
addr16
js
es
rcrb
cli
repz
fstpl
lret
xor
cmp
push
insl
fisubrl
xor
es
out
fidivrl
cmpsl
jo
ficoml
push
or
mov
adc
jne
mov
and
fcmovbe
and
or
insl
xchg
sbb
push
aam
push
xchg
mov
int
leave
mov
xor
outsb
and
shll
insl
std
sbb
fists
and
loope
jae
call
icebp
inc
stos
ret
or
push
mov
cld
push
and
ds
pop
and
js
ss
mov
xchg
imul
sbbl
cld
enter
aad
mov
adc
xchg
fisttpl
imul
notb
addr16
mov
dec
movsb
aad
mov
mov
cmpsb
and
enter
mov
jle
mov
adc
sarl
mov
jp
fcmovu
inc
pop
or
jmp
pop
pop
xchg
sti
clc
xor
dec
int
adcb
sbb
jb
xchg
inc
mov
cmp
or
pop
dec
pop
or
jne
cmpb
adc
clc
bound
icebp
lods
sub
xor
out
jp
lea
fcoml
mov
loopne
popa
scas
loope
lock
lahf
push
sbb
cmc
leave
movsb
jns
mov
push
pop
sahf
loopne
insl
out
shll
fmuls
gs
or
adc
rcll
jae
test
inc
cltd
test
orb
insb
sbb
repz
test
xchg
in
cmc
jge
adc
fisubrs
aam
daa
lcall
xor
cmp
clc
jae
sbb
adc
imul
sub
shlb
dec
mov
pop
leave
lret
loop
cmp
xchg
popf
add
mov
add
pop
push
test
dec
mov
mov
int3
mov
adc
test
adc
xor
push
push
xchg
dec
fs
in
je
insb
mov
out
rol
lea
fimuls
jno
and
leave
into
push
std
mov
pop
std
cmp
jp
mov
arpl
or
push
mov
cltd
js
arpl
lcall
and
or
jg
push
in
and
push
cmpsb
inc
or
popf
in
inc
jae
pop
scas
dec
mov
dec
lea
push
ljmp
push
lock
dec
inc
loop
aas
add
xchg
mov
test
xor
jp
imul
push
push
lret
jmp
loopne
mov
lods
into
mov
je
push
dec
lock
mov
out
sbb
movsb
xor
sub
cmp
lods
sub
int
pop
and
lock
or
cs
imul
mov
ljmp
or
jmp
imul
inc
bound
stc
not
arpl
stos
xor
jb
gs
cmp
das
sub
jmp
xor
loopne
test
mov
mov
push
aaa
xor
mov
cmp
add
dec
pop
scas
mov
sbb
jle
das
loope
cli
pop
pop
xchg
sahf
mov
push
inc
pop
enter
dec
sub
cmp
mov
std
and
xadd
jno
jae
xlat
push
test
push
xchg
scas
add
int3
dec
inc
jns
sub
aam
push
sub
push
add
inc
sarl
mov
lahf
xchg
sarl
outsb
enter
loopne
in
je
fisubrl
mov
shll
jno
cmp
xor
leave
cld
xchg
mov
jecxz
inc
cmpsb
push
fsubl
push
scas
fcoml
add
je
jno
fs
fwait
mov
cmpsb
fistps
inc
mov
mov
xor
test
out
jns
xlat
and
xor
ss
es
inc
outsl
stos
sarb
pushf
aas
lock
and
andb
adc
fcompl
cmpb
ja
fwait
les
out
stos
dec
and
shr
out
sbb
push
xchg
int
sahf
mov
lods
pushf
sbb
mov
test
cmp
ret
sub
out
cmovle
inc
mov
ja
mov
adc
xchg
dec
out
int3
jne
ja
mov
stc
scas
or
push
xor
icebp
push
jno
pop
pop
es
adc
movd
cli
sub
stos
pop
mov
pop
pop
rorb
sbb
test
mov
mov
mov
inc
mov
dec
ret
mov
mov
dec
iret
jle
xchg
mov
das
mov
cmp
movsb
hlt
push
cld
jge
mov
lcall
dec
dec
jo
mov
and
ror
xchg
rorl
mov
add
push
rcrb
inc
sbb
dec
push
mov
jno
jb
adc
dec
icebp
xchg
iret
popf
cmp
jno
cmpsb
xchg
jbe
add
test
in
adc
fnstcw
xor
dec
add
mov
idivb
popa
dec
mov
jge
dec
mov
and
movsb
cld
xor
jl
push
jge
mov
repnz
push
xchg
dec
shrb
push
out
in
push
adc
les
dec
dec
pop
fstl
mov
xor
adc
sbb
test
mov
and
out
std
push
mov
in
jo
out
push
or
inc
push
jmp
sbb
mov
lock
or
dec
xchg
push
sub
jp
fidivl
insl
sbb
pushf
push
int
fldt
adc
sbb
leave
xchg
cmp
js
inc
sub
cmp
push
fnstsw
mov
mov
in
push
sbb
cmp
nop
imul
dec
int3
cmp
out
cld
xlat
mov
pop
je
enter
inc
icebp
lahf
outsl
mov
sub
inc
pushf
add
cltd
incb
testb
pop
lods
imul
cmc
mov
imul
adc
test
hlt
repnz
lret
popf
and
jb
pop
or
push
dec
loope
mov
jnp
jp
jo
out
js
pop
sbb
jg
push
int
adc
ljmp
mov
scas
jmp
cwtl
in
popa
sbb
mov
xor
decl
push
pusha
jne
sub
add
inc
mov
cli
insl
sub
sbb
lods
jecxz
mov
outsb
push
mov
push
lret
push
push
ret
test
shll
push
pop
push
push
test
mov
sbb
and
add
daa
pop
sub
pop
addr16
and
nop
aam
sti
sub
iret
pop
mov
add
addr16
mov
sbb
int
push
movsb
scas
pushw
pushf
int
cld
dec
push
iret
mov
cmpsl
inc
add
fisubs
pop
outsl
movsl
jmp
xor
xor
rcrl
cs
jo
xchg
mov
orl
clc
in
pop
aaa
scas
pop
cld
notb
inc
mov
daa
aam
neg
vhaddps
add
in
int
shlb
sbb
addr16
mulb
mov
cmp
sub
add
stos
push
mov
pop
arpl
out
mov
mov
cmpsl
fstps
add
out
or
pop
mov
daa
rcll
repnz
ljmp
xor
inc
or
mov
pop
loop
dec
sbb
mov
test
jg
enter
sbb
cltd
sbb
mov
in
fimuls
fidivrs
pop
cmp
or
fidivs
out
lods
dec
adc
roll
negb
pushf
mov
psubsb
xchg
sbb
sti
xchg
sub
pushf
cmpsl
icebp
or
leave
mov
sbb
fisubrs
mov
sahf
shr
add
pop
in
out
ret
adc
std
stc
sub
xchg
jle
stos
push
add
add
xchg
cmp
fisttps
pushl
inc
cmpb
iret
inc
push
mov
push
popa
push
add
mov
std
addr16
aad
insl
aaa
aaa
push
pop
xchg
sbb
jge
mov
cld
daa
add
cwtl
fsubrs
dec
or
cmp
xor
js
or
add
adc
inc
cmp
push
test
pop
ret
clc
inc
or
out
mov
xor
inc
pop
pop
push
pop
lret
addb
lret
loop
cmpl
imul
test
into
xor
ja
shll
lds
lcall
pop
sbb
adc
mov
pop
mov
jne
add
jg
jecxz
bnd
inc
outsl
popf
arpl
inc
mov
pop
scas
mov
cmpsb
je
rcr
in
cltd
dec
xchg
add
jo
jns
push
scas
dec
loopne
gs
cld
outsb
fnstsw
push
sub
into
movsb
lahf
push
jp
sub
rolb
and
jno
mov
push
stos
cwtl
jl
mov
ds
cmp
movsb
xor
jg
inc
insb
mov
adc
or
xchg
jae
pop
movsb
lods
scas
sti
jecxz
sbb
outsb
mov
xlat
jp
cld
cmpsb
mov
sub
xchg
mov
cmp
push
mulb
xor
pop
hlt
dec
fidivs
adc
jb
bnd
cmp
adc
push
test
out
add
enter
addl
mov
hlt
adc
cmp
xor
xchg
out
fs
inc
scas
movsl
xorl
lods
mov
jle
jns
outsb
pop
mov
xchg
cwtl
mov
pop
jnp,pt
dec
xlat
push
les
ljmp
scas
mov
js
adc
mov
test
and
mov
jge
push
jb
ja
fildll
jge
popa
pop
lret
dec
cmc
pop
push
ds
insl
pop
sbb
cmpsl
dec
cmp
lds
lret
pop
loopne
mov
mov
xor
xor
push
push
out
jae
push
push
lcall
adc
adc
push
cld
sbb
adc
dec
movsb
xchg
lods
js
daa
xchg
pop
cmpsb
ljmp
loop
jbe
mov
mov
out
inc
out
loop
std
adc
popf
rolb
fisubrs
iret
fidivs
repnz
cs
cmpsb
xor
call
cwtl
or
out
outsb
dec
jo
or
cmp
lret
or
sahf
pop
sbb
dec
lret
lret
and
mov
cld
inc
adc
mov
sahf
or
outsb
insb
mov
int
xor
outsb
fcomps
push
test
adc
fimuls
inc
xchg
data16
loopne
insl
pop
cmpsb
fcos
fimull
adc
cmp
sub
cmp
sar
cmp
repnz
imul
sbb
or
rorl
rcrb
xor
sub
mov
pop
lock
ds
imul
mov
lods
adc
sbb
and
sbb
xchg
aas
jo
cmp
sbb
add
repz
adc
loope
leave
inc
pop
movsb
mov
jnp
fldt
insb
fidivl
xor
or
rorw
sub
in
xchg
adc
scas
aas
in
mov
test
leave
sbb
xor
push
gs
das
rclb
and
stos
hlt
iret
dec
movsb
loop
int3
push
mov
xchg
cmc
or
aaa
cmp
jnp
cwtl
and
enter
mov
notb
popa
ja
in
xor
iret
loop
movsb
adc
xchg
fisubrs
or
shl
in
xor
and
idiv
sbb
xor
push
jp
cmp
dec
mov
jge
scas
mov
pop
loop
jmp
test
iret
mov
cli
stc
test
mov
or
pop
mov
loope
loope
fisttpl
inc
into
mov
dec
hlt
adc
jle
fisubrs
push
xchg
enter
dec
popf
lods
jbe
jnp
inc
adc
mov
push
push
ljmp
test
imull
push
push
mov
jecxz
add
mov
sbb
insl
cmp
or
xor
xchg
scas
mov
mov
fstpl
pop
or
cmp
mov
mov
aas
stc
sbb
mov
xchg
or
pop
mov
sahf
cld
pusha
shr
aaa
mov
dec
shrl
mov
stc
push
lock
arpl
xchg
jp
clc
xchg
icebp
push
js
or
sbb
mov
out
sti
loope
xchg
or
movsb
and
push
inc
push
stos
rcrb
sub
out
pop
jge
add
jne
mov
and
mov
or
xor
pop
test
data16
inc
inc
xlat
leave
rcll
pop
mov
mov
pop
and
xchg
inc
sbbb
cmp
xchg
or
xchg
outsb
cmpl
mov
repz
stos
xchg
scas
fcoms
ret
mov
xchg
xlat
cmc
add
lret
mov
test
je
adc
sub
test
dec
je
cmp
sarl
jne
push
push
das
mov
fadds
xor
lret
pop
adc
xchg
insb
in
in
popf
in
loope
insl
add
inc
fs
test
pop
ret
scas
test
mov
daa
and
sub
stos
out
pop
dec
pushl
inc
and
mov
adc
daa
lods
out
shr
ret
and
mov
and
dec
xor
ja
jge
pop
or
xchg
sti
jb
out
xchg
push
gs
inc
gs
movq
jecxz
mov
push
cld
bound
dec
pop
lods
sub
cltd
fmuls
mov
pop
sbb
cmp
jb
mov
or
daa
push
lea
rorl
inc
sub
mov
enter
push
sbb
daa
data16
rorl
sub
lcall
adc
fstps
loop
sbb
idivb
movsl
sbbl
mov
sub
xchg
push
nop
fistl
faddl
inc
sbb
pop
and
adc
pusha
in
mov
sub
cmp
test
or
inc
push
and
cmp
xor
and
out
ds
lahf
repz
dec
mov
sub
push
sti
and
sbb
iret
push
outsl
push
cs
cs
or
fidivs
or
jl
pop
jb
insb
adc
dec
enter
mov
dec
sub
adc
in
add
inc
popf
or
add
or
icebp
mov
xlat
in
jge
mov
xor
push
mov
xlat
sub
iret
push
pushf
scas
test
arpl
cli
pop
add
xchg
mov
xchg
in
ret
mov
movsl
add
dec
insb
stc
ds
test
leave
test
push
fwait
sub
addr16
iret
mov
mov
shll
add
scas
int3
jb
cmpsl
jo
shlb
or
fldenv
xor
fs
test
mov
push
filds
mov
cmpsl
arpl
sahf
je
add
or
sbb
push
mov
enter
or
or
sbb
inc
das
loopne
shll
push
mov
mov
jg
cmc
daa
pushf
ja
cmp
jmp
or
stos
and
cltd
sub
pop
clc
dec
dec
les
out
sbb
dec
gs
ljmp
pushf
loope
mov
push
mov
push
and
icebp
sbb
insb
cmc
lea
bndldx
xor
fidivl
pop
into
idiv
sub
rorb
in
outsb
arpl
dec
inc
inc
jg
pusha
adc
andb
scas
inc
sti
jecxz
dec
pop
inc
push
xchg
popa
sub
push
fists
shrb
lea
pop
bound
adc
pop
and
xor
sbb
test
mull
dec
adc
ss
jbe
pop
gs
std
adc
mov
pop
push
sub
stc
jae
cwtl
lret
mov
and
push
fldt
dec
pop
xchg
xlat
mov
pop
idivl
dec
cld
daa
and
and
rorb
jmp
and
in
rclb
inc
in
outsl
shl
insl
fimuls
pushf
pop
cmp
inc
loopne
dec
inc
jecxz
inc
fsubl
pop
sub
cmpsb
mov
std
mov
ja
je
out
das
cmpl
sbb
cmpsl
inc
and
or
dec
out
sub
mov
cltd
pop
loop
xlat
into
fistpl
in
mov
sbbb
lret
mov
int
cmpb
out
pop
sbb
mov
push
psrlq
addr16
stos
push
jb
imul
dec
fistps
or
insw
aaa
aad
cmpl
adc
int
popa
sub
pop
push
xlat
mov
xorl
dec
push
push
cli
into
repz
mov
dec
test
mov
add
sbb
cli
enter
decb
lret
adcb
adc
xchg
and
xchg
cmp
out
push
xchg
mov
mov
in
ljmp
and
outsb
push
mov
pop
push
mov
sbb
mov
mov
jp
movsb
jb
in
and
xchg
icebp
popa
cmp
pop
js
or
jb
xor
mov
incb
leave
mov
popa
and
bound
sub
add
pop
push
ret
cmp
cmp
push
outsb
or
xor
aaa
xchg
adc
cmp
jbe
in
insb
pop
insw
pop
test
xchg
and
dec
mulb
in
push
cmpb
jbe
cli
or
push
adc
mov
movsb
fs
arpl
dec
mov
arpl
icebp
insl
loope
int
add
rcrl
ljmp
mov
lret
mov
shlb
cltd
dec
push
mov
sub
pusha
mov
xchg
and
jb
sti
or
mov
pop
test
nop
enter
es
xchg
xor
xchg
icebp
ds
aam
mov
movsb
je
out
repnz
lock
and
add
jge
inc
shlb
dec
xchg
or
xor
dec
mov
push
dec
cmp
lods
scas
or
push
test
stc
inc
mov
sub
add
out
cmp
push
or
and
jb
imul
mov
stos
enter
fsts
dec
mov
inc
pop
jle
mov
xchg
mov
sahf
loop
mov
push
enter
js
clc
fimuls
test
call
mov
push
test
pop
addr16
jle
addl
add
xchg
xchg
lcall
cs
andb
mov
add
inc
adc
xchg
ret
data16
mov
push
jo
xor
call
js
mov
and
outsb
data16
mov
jns
daa
sbb
ror
gs
hlt
mov
movsb
adc
fs
arpl
in
lahf
mov
cltd
add
inc
add
bound
sub
adc
dec
push
popa
jl
movsb
imul
and
push
lock
data16
mov
test
subl
loope
xchg
xchg
xchg
or
mov
cmp
sbb
sbb
adc
in
cs
andb
test
lock
dec
fdivr
ret
loope
mov
inc
adc
sub
ret
push
xor
add
data16
push
rorb
adc
sub
popa
xor
jnp
and
daa
aam
xor
push
cmp
add
sub
je
mov
das
inc
jne
gs
dec
pop
or
stc
fsub
fsubrl
mov
pop
push
repnz
or
and
jmp
xchg
out
lret
je
and
enter
ss
add
scas
aad
loopne
insb
mov
jno
xlat
mov
or
or
idivb
arpl
jp
push
out
out
loopne
pop
cmpsb
ret
loop
sti
lcall
cmp
int
rcll
mov
arpl
pop
lret
cmp
cld
mov
daa
xchg
inc
test
stc
mov
push
insl
adc
fs
rcrl
xor
cmp
and
stos
jae
insl
jle
adc
in
bound
jp
insl
clc
fld
push
fwait
push
cli
scas
xor
fsin
pop
in
fimull
jg
sbb
std
test
xor
pop
xchg
xchg
in
push
adc
into
hlt
lcall
or
cli
cmp
roll
daa
int
cmpsb
add
outsb
xor
adc
jae
dec
sub
pop
xchg
mov
push
fisubrs
outsl
addr16
lods
jno
shr
pop
dec
and
xchg
fadds
and
pusha
fsubr
insb
or
out
cli
push
cmpb
jmp
push
inc
stos
and
dec
js
push
cmp
lods
cmp
cmp
inc
cld
mov
icebp
in
nop
popf
sbb
and
dec
icebp
and
and
jl
mov
rcll
dec
repnz
into
pop
icebp
incb
fiadds
imul
pop
movsb
mov
add
push
mov
fcompl
push
lcall
stos
fmuls
xchg
stos
in
mov
add
in
mov
repnz
xchg
xor
push
push
add
shll
ss
mov
xchg
push
aad
hlt
aam
add
mov
mov
jmpw
into
cmp
in
lret
out
xchg
dec
cwtl
mov
cmp
cmpb
loope
fwait
es
push
pusha
clc
test
push
clc
sub
and
mov
gs
cmpsb
arpl
xchg
dec
pop
jns
imul
les
pop
dec
dec
jae
xor
stos
inc
or
mov
ljmp
mov
lret
icebp
movsl
xrelease
add
lock
icebp
adc
adc
mov
cs
idivb
out
add
jle
push
push
repz
cmp
add
out
jmp
gs
pop
lods
mov
mov
mov
int
dec
roll
icebp
mov
push
sub
xor
out
mov
fadd
orb
inc
or
xor
push
test
inc
dec
adc
loope
xor
or
ds
call
sub
scas
mov
jne
dec
cmp
and
mov
or
ficoml
bound
adc
std
or
dec
in
outsb
shl
inc
mov
icebp
inc
bound
inc
xchg
js
in
jnp
ljmp
mov
inc
repnz
push
aam
fsubrs
mov
lea
jle
mov
in
ss
std
sub
dec
out
and
sbb
test
aas
push
adc
arpl
in
push
add
in
pop
mov
inc
mov
xor
mov
mov
icebp
mov
sti
sub
lds
outsl
jge
sub
jno
pop
out
sbb
mov
fnstenv
subl
sub
jno
aam
push
xchg
mov
inc
pop
mov
fsub
pop
or
dec
imull
negl
hlt
out
fs
pop
push
mov
sbb
mov
rorl
push
dec
adc
das
lods
inc
roll
sbb
pop
enter
xchg
xchg
std
sbb
dec
dec
xor
test
shlb
xchg
xchg
mov
pusha
test
stos
or
inc
mov
lods
inc
fbld
int3
das
call
cmp
lods
testb
cmp
dec
fadd
jno
mov
xchg
push
adc
pop
jno
mov
mov
test
or
popa
mov
sbb
xchg
pop
cwtl
cld
push
pop
mov
jl
outsb
cmp
xor
sub
jecxz
ljmp
dec
test
negl
idivl
and
adc
mov
scas
lods
jbe
ret
fwait
adc
xchg
pop
push
stos
sbb
pop
sbb
sbb
mov
cmp
popf
or
int
xchg
lods
lock
stos
push
jns
fprem1
rcrb
dec
push
out
popf
inc
dec
sub
test
rcll
push
out
add
lahf
ja
cmp
cmpsb
int
add
lret
nop
arpl
cmp
shrb
shlb
mov
int
imul
mov
ficompl
and
push
test
sarl
add
pop
sahf
not
lods
mov
negl
xchg
cmpsb
js
mov
lds
movsb
fmul
mov
jge
push
push
out
jno
mov
leave
dec
daa
out
in
call
sub
push
out
aam
mov
out
mov
cmc
mov
gs
push
jp
adc
adc
mov
in
lea
inc
adc
or
xchg
mov
mov
js
and
ficompl
xchg
fnstsw
pop
or
xor
fsub
mov
push
push
adc
out
mov
das
fcom
sbb
fisttpll
inc
mov
xor
cmpsl
xchg
repnz
nop
lahf
repnz
das
mov
dec
icebp
mov
xor
popa
sbb
jl
pop
adc
daa
adc
pop
test
cmp
mov
or
and
fs
add
jp
inc
popa
mov
or
sti
nop
ljmp
lods
sbb
mov
sbb
scas
mov
les
jmp
je
imul
divl
das
gs
inc
into
std
loopne
jbe
inc
or
sbb
cmc
outsb
push
popf
cltd
sbb
shrl
and
mov
in
dec
cmpsl
movsb
or
ss
cwtl
sbb
dec
xchg
xchg
es
jle
push
and
pop
dec
test
xorb
dec
sbb
shl
inc
mov
lods
xor
xlat
inc
lds
mov
sub
sbb
mov
lcall
xchg
pushf
div
mov
hlt
mov
dec
add
pop
jns
movsb
pusha
jecxz
int3
mov
jo
popa
popf
hlt
pop
int
std
xchg
orl
sti
sbb
jle
or
pop
mov
aam
add
insl
lret
push
rclb
and
stos
lods
jp
mov
and
xchg
scas
enter
xor
ss
aad
mov
dec
leave
lret
test
mov
js
or
test
jb
jmp
and
test
arpl
mov
mov
dec
lock
cmp
dec
fneni(8087
xor
out
fnstcw
in
inc
sbb
sbb
dec
push
shlb
xchg
dec
cmc
sub
cmp
icebp
push
fcoms
das
and
cmp
cwtl
push
jnp
lods
add
sub
je
icebp
adc
daa
xchg
movsl
mov
shlb
pop
or
jmp
xor
das
jns
dec
mov
mov
and
shlb
in
xchg
stos
vunpcklps
shrl
loopne
xchg
iret
xchg
jle
jecxz
add
sbb
inc
inc
cmc
rep
insl
and
adc
mov
push
lock
cmp
enter
inc
orb
iret
xor
or
fdivs
rcll
mov
push
cmp
outsl
sar
xchg
dec
mov
mov
xor
cwtl
push
fsubl
and
sbb
mov
cmc
aad
shrl
les
rcl
pop
ljmp
xchg
out
lods
arpl
aaa
inc
xchg
pop
loop
scas
addr16
xchg
cld
dec
stos
mov
xor
add
adc
cli
lods
cmpsb
sahf
pop
mov
pop
push
shll
in
mov
cwtl
stos
jne
in
aam
cmp
add
and
or
ret
and
push
add
lss
mov
xchg
mov
sbb
cmp
stos
lahf
inc
out
adc
lret
and
fisubrs
loop
xor
ffree
xor
inc
out
sti
es
pop
push
dec
mov
pop
das
lods
cmp
push
fidivs
xchg
aam
cld
pop
xchg
push
add
inc
push
or
fbstp
inc
enter
outsl
xchg
leave
ds
xchg
bound
out
stc
push
mov
or
fmull
dec
je
icebp
pop
mov
add
mov
pop
in
mov
mov
lds
pop
bnd
sarb
sbb
and
inc
jbe
sahf
in
test
push
cs
data16
loopne
mov
and
mov
mov
pop
sahf
or
jae
data16
sahf
arpl
pop
cmp
xchg
loope
call
sbb
xor
inc
pop
lret
mov
rorl
daa
js
push
icebp
sub
cs
cmp
xor
ss
pusha
incb
fstps
push
mov
jnp
aaa
cmpsb
cmp
mov
and
aam
adc
jb
sub
and
dec
mov
ja
out
adc
push
les
inc
mov
adc
jo
jae
ljmp
cmp
repnz
outsb
imul
sbb
insb
lcall
fidivs
dec
dec
dec
and
pop
inc
and
mov
lea
imul
pushf
lahf
movsb
push
scas
push
pop
cmp
iret
loope
rclb
jns
pusha
dec
jno
mov
dec
and
dec
ss
mov
stc
loope,pn
inc
add
in
pop
pop
pop
inc
push
iret
push
iret
push
xchg
push
jg
pop
scas
jmp
jne
movsb
xchg
pop
mov
sbb
enter
cmc
push
fs
out
or
outsb
sbb
ja
daa
mov
dec
mov
lock
add
hlt
das
subl
mov
sub
fildl
imul
dec
fwait
xchg
mov
add
and
push
adcl
jbe
int3
pushf
push
xor
sbb
outsl
sub
xchg
cmp
int3
popa
int3
stc
adc
stos
inc
push
sbb
sbb
xchg
lock
sbb
cltd
jbe
in
jmp
sahf
aaa
and
divl
fbld
ficoml
sbbl
mov
outsl
push
sub
ljmp
rcl
push
pop
cmpsb
ret
sarb
ror
adc
call
ja
data16
xchg
cmp
inc
stos
mov
xor
nopl
jb
out
inc
sbb
cmp
add
imul
lahf
aaa
imul
das
seta
ret
std
popf
lods
and
and
les
xchg
mov
add
imul
jb
add
dec
add
sub
jmp
or
add
sub
rorb
dec
sbb
inc
mov
cli
ret
mov
jns
out
jle
aaa
es
sbb
test
sbb
mov
adc
push
shl
insl
mov
iret
cmp
mov
cmc
insb
adc
ret
fdivs
sub
xchg
dec
stc
mul
pop
xchg
mov
add
mov
pop
lea
xchg
cmp
dec
mov
test
aad
scas
add
push
ja
popf
push
icebp
sub
sub
pop
out
adc
sti
xchg
sahf
jmp
sub
lret
sub
addr16
out
leave
xor
or
arpl
mov
or
push
pop
addr16
pop
lcall
xor
xor
shrb
inc
repnz
test
lods
xchg
and
leave
sub
dec
pop
inc
or
ss
call
mov
push
pop
pop
test
add
inc
cmp
xor
xchg
mov
add
mulb
addb
dec
cmpsb
dec
test
hlt
test
lret
add
add
std
pushf
insl
dec
das
in
imul
stc
sarl
cmc
jmp
fcoml
push
sti
pop
roll
push
jmp
insl
push
les
int3
pop
cs
pop
cmp
hlt
sbb
or
outsl
mov
jmp
shl
test
int
lahf
movb
inc
in
stc
addb
xchg
inc
adc
std
hlt
call
outsl
mov
scas
mov
subl
ss
shlb
out
ds
jg
les
add
pop
mov
rcll
movsl
call
jae
cmc
ret
jge
cli
fbld
push
inc
into
aaa
int3
js
in
xor
fcomps
dec
mov
fldcw
push
aad
rolb
jge
pop
xchg
fstp
sbb
pop
imul
mov
or
pushf
out
daa
lds
dec
cmp
cmpb
out
loopne
cmc
lods
imul
es
ret
stc
mov
aaa
mov
or
jb
aam
mov
jmp
mov
lret
adc
pop
add
push
inc
iret
out
pop
cld
mov
cltd
ret
scas
and
dec
inc
leave
aam
mov
arpl
repnz
cmpsb
xchg
les
pop
js
inc
enter
ss
jle
adc
push
aaa
inc
add
outsl
push
testl
icebp
loopne
andb
or
sarb
mov
cmc
int3
add
clc
or
jb
push
sub
stc
loope
sub
movsl
rclb
jne
jo
jp
mov
outsb
fcmove
jp
cli
cmp
push
pslld
mov
imul
shll
sub
xchg
mov
sub
je
subb
or
dec
inc
push
adc
or
jle
out
cltd
sahf
imul
out
insb
cwtl
lock
mov
sub
mov
addr16
sbb
inc
ret
jb
or
aad
lahf
in
loop
repz
mov
fistl
mov
lret
mov
xchg
mov
into
push
pushf
les
stc
xor
push
shrb
fmull
jno
movb
lcall
push
mov
out
mov
fwait
sbb
fbstp
xchg
add
out
pop
mov
fisubs
ds
enter
imul
aad
inc
adcb
frstor
push
xor
add
rcll
or
mov
ja
in
test
stos
pop
jo
jmp
sub
cmc
push
inc
leave
insl
dec
xor
in
inc
int3
fwait
mov
movsb
repnz
sub
push
leave
sbb
call
pusha
testb
ss
cmp
sbb
jge
ret
pop
jnp
cmp
lods
dec
out
sbb
pop
cltd
cmp
mov
insb
push
or
jle,pt
data16
popf
pop
icebp
dec
fldcw
push
mov
mulb
mov
push
mov
pusha
icebp
adc
out
popl
fisubl
sahf
xchg
sbbb
popf
and
call
dec
jno
outsl
push
dec
jnp
xor
add
xor
cltd
inc
mov
outsl
push
lret
jg,pn
dec
pushf
mov
adc
fiaddl
pop
dec
mov
adc
xchg
pop
aaa
sub
sbb
div
daa
ja
push
mov
or
jb
xor
pop
mov
xor
xchg
aad
loopne
mov
stos
add
push
pushf
fs
and
stos
leave
fstpl
stos
push
xor
push
mull
mov
scas
xchg
push
or
and
mov
push
les
fmulp
dec
xchg
jae
add
clc
lds
sbb
xchg
pop
outsb
lock
adc
outsl
adc
dec
add
push
dec
xchg
cmp
aad
cs
pushf
ficompl
jb
mov
xchg
aaa
mov
inc
dec
fsubl
or
loop
xchg
rorb
fwait
lock
lods
dec
push
jge
mov
sbb
andl
mov
dec
lds
sbb
pop
mov
adcl
adc
mov
leave
lcall
psubq
jmp
and
add
sbb
jmp
fbld
cmp
es
out
in
pop
movsb
jg
cmpsl
rclb
aaa
cmp
enter
mov
jg
push
push
xor
imul
and
pop
es
in
lahf
xor
push
xchg
cmp
mov
dec
mov
int
adc
pop
iret
loop
jg
mov
lock
stc
sub
adc
jecxz
and
aam
inc
or
push
inc
mov
sarl
jns
imul
mov
std
and
pop
inc
inc
movsb
cmc
dec
mov
and
xlat
mov
loop
dec
lds
pop
xor
loop
jle
dec
rcll
shrl
movsb
inc
mov
in
dec
in
adc
fstps
test
pop
adc
and
xchg
mov
xor
push
movsl
inc
xor
or
lret
movsl
mov
loopne
dec
push
testl
sub
pop
out
gs
imul
add
loope
imul
push
xor
mov
adc
jns
fs
ljmp
js
es
lcall
inc
ret
push
adc
fidivs
subl
test
mov
pop
add
cmp
dec
in
xor
jne
icebp
repnz
fstpl
jg
sbb
addr16
in
inc
ljmp
mulb
enter
jmp
xor
dec
xchg
sub
int
les
cltd
int3
xchg
xchg
dec
push
xchg
mov
jnp
test
jno
xchg
mov
in
daa
pushf
mov
fisubs
add
adc
out
test
pop
jb
inc
test
mov
and
sbb
push
leave
fadds
leave
xchg
ss
addr16
and
pop
xchg
movb
imul
push
daa
into
fistl
xchg
jmp
inc
mov
sti
xor
sbb
push
add
jnp
or
inc
xor
pcmpgtw
mov
pop
xlat
out
dec
cmp
xchg
addr16
loopne
movsb
subl
dec
fldl2e
loopne
or
and
cmc
add
cmp
xchg
adc
arpl
inc
jbe
and
fucom
push
mov
jne
cmpsl
xchg
cmp
or
push
stc
addr16
or
sahf
mov
repz
ljmp
push
push
test
push
pop
cmp
ds
cmp
lods
push
jg
xor
aas
xor
and
sbb
jb
mov
dec
nop
pop
fwait
adc
push
and
data16
mov
xorl
and
fstpt
mov
mov
adc
test
mov
mov
sub
stos
jo
sub
neg
imul
movsb
jge
pop
ret
sbb
dec
loopne
or
aaa
sarl
jno
push
push
popf
arpl
ja
add
sti
cmp
lahf
push
cmp
mov
mov
pop
xchg
dec
mov
fsubrs
xchg
int3
jb
pop
sub
fimuls
pop
fcmovu
repz
stos
subl
es
xchg
fwait
mov
and
out
push
mov
xchg
push
fcmovu
nop
sub
stos
aaa
xor
push
bound
out
push
pop
inc
xchg
sub
xor
cmp
test
mov
adc
jmp
or
aam
sahf
test
lret
jmp
or
out
fsubl
lds
mov
xchg
cwtl
lret
cmpsl
mov
in
loop
ljmp
mov
insl
pop
imul
aaa
pop
adc
mov
into
cmp
or
dec
pop
aad
lods
out
cltd
pop
dec
ret
mov
popa
and
mov
jl
sub
dec
mov
test
cmp
inc
lcall
subl
xchg
jg
out
fdivrs
mov
adc
call
popa
and
outsb
jne
push
loopne
repnz
rorb
stos
sub
popa
push
xchg
xchg
lcall
cmp
pop
cltd
fsubr
test
sub
dec
cmp
mov
jns
add
mov
out
ss
mov
sub
out
jle
lcall
aad
hlt
inc
push
ljmp
cmp
cmc
sub
cmpsl
xor
pop
les
push
dec
jbe
sahf
pop
sbb
push
test
pop
pop
push
or
popa
push
inc
jne
sub
loop
sub
and
inc
mov
sub
adc
sub
aas
push
inc
notl
mov
roll
out
test
roll
xchg
mov
lods
xor
inc
xchg
push
jo
scas
cmp
and
mov
xchg
bound
lret
cmpsb
fbstp
addr16
dec
xchg
and
adc
in
je
sti
pop
cmp
inc
es
daa
cmp
icebp
xchg
std
xlat
test
and
cld
jae
in
sbb
xchg
stos
cmc
rcr
xor
jle
aaa
lahf
jo
jmp
inc
sbb
repz
push
lea
adc
fisttps
cmp
out
test
pop
insb
cmc
pop
pusha
rorl
gs
mov
inc
fdivrs
arpl
pop
pop
stos
lret
inc
inc
mov
subb
orl
jp
fdivrl
or
push
lods
inc
adc
mov
adc
xchg
les
and
mov
push
aad
pop
push
pushf
fistps
stos
out
out
cmp
int
add
cwtl
and
sub
loope
lods
xchg
test
inc
adc
psubusw
movsb
and
adc
mov
dec
je
jge
stos
clc
fwait
clc
inc
jp
shrb
test
jbe
decl
mov
or
xor
mov
sub
rorb
mov
in
xchg
mov
stos
stos
xor
loopne
jns
pop
lods
fisubs
ret
mov
xchg
cmp
pop
adc
push
mov
jb
mov
je
out
stos
call
nop
push
adc
pop
xchg
int3
sar
cmc
fildl
or
mov
in
loop
iret
adcl
dec
stos
and
mov
shll
xor
cmpsl
xor
shlb
dec
rorl
push
or
mov
mov
jl
or
or
neg
xchg
dec
push
add
insl
aad
sbb
imull
add
add
xor
or
mov
cmp
imul
fisttpll
sub
dec
jmp
and
push
cld
mov
insl
xchg
sub
out
or
push
imul
push
icebp
cld
mov
adc
mov
cmpsl
mov
mov
pop
insl
movsb
push
sub
gs
or
in
mov
cli
mov
dec
stc
test
jg
popl
sarl
jp
inc
push
int
loope
cmp
incb
jns
sahf
sbb
xchg
in
movsl
adc
xor
jnp
cmp
or
pop
sub
push
je
xchg
ret
lods
in
jb
stos
or
fisubrl
xchg
jno
xor
xor
push
push
jne
test
cli
paddsw
xchg
dec
dec
in
mov
nop
divb
add
pop
enter
adc
add
jbe
inc
adc
aam
fstpl
test
dec
je
jmp
ret
jno
mov
fimull
daa
fdivrs
sbb
in
mov
pop
jg
sub
mov
mov
sub
mov
xor
enter
adc
int3
ljmp
push
mov
mov
or
jae
sahf
aam
in
hlt
aas
incb
inc
mov
pop
sbb
mull
jno
push
add
mov
adc
dec
inc
mov
cwtl
mov
jecxz
call
lds
rclb
add
mov
movsl
jg
movsb
bound
jnp
push
add
jae
xchg
daa
repz
ficomps
movb
inc
mov
andl
lods
imul
lock
leave
dec
mov
ret
sbb
movsl
sbbl
clc
out
ret
xchg
mov
hlt
shrl
jecxz
xlat
mov
sbb
daa
test
mov
jge
ficompl
inc
shll
test
sbbb
push
jle
inc
jnp
lods
cmpsb
in
inc
dec
aad
js
enter
lea
mov
xor
cld
in
addr16
in
in
loope
fisttpll
add
add
sub
daa
stc
mulb
xchg
cmp
pop
inc
sbb
sar
pop
or
cmp
daa
stc
sti
xchg
lock
cli
iret
push
mov
into
xor
and
mov
pop
mov
push
adc
scas
leave
es
sub
shll
gs
sub
push
lods
mov
fnsave
ror
inc
test
cmp
mov
mov
push
jns
xchg
lret
imul
dec
insl
movb
outsb
out
dec
cmp
movsb
ljmp
fbstp
xchg
sbb
inc
xchg
fwait
and
mov
sub
pop
sbb
call
arpl
mov
aam
sub
popa
push
jb
mov
cmpsl
lods
lret
js
sbb
iret
pusha
xchg
fldl2t
aad
pop
filds
clc
sbb
xor
jmp
mul
mov
and
and
add
shll
stos
movb
cmpsb
push
or
roll
mov
adc
movsl
imul
addb
mov
xchg
andl
sbb
rorl
or
sbb
adc
mov
push
test
adc
push
fcomps
fnstenv
mov
and
pushf
loop
sub
clc
fldl
add
adc
mov
sarb
pop
pop
cld
ljmp
icebp
cmc
bound
fs
or
jg
ficoms
into
pop
insl
pop
lret
push
fsubs
cmp
sahf
xchg
je
sbb
repz
pop
push
or
std
lret
push
xor
daa
inc
pop
adc
mov
xor
pop
jo
add
aaa
mov
xchg
xchg
sbb
sbb
into
test
push
xor
jo
sahf
fidivs
ret
cmp
inc
adc
mov
add
push
in
lea
xor
jbe
mov
jo
add
loope
imul
inc
mov
cmp
cmp
xor
jno
pop
jge
popl
jmp
mov
lock
lret
inc
mov
lcall
push
adc
lods
pop
jle
inc
pop
xor
pop
xchg
in
arpl
lock
popf
in
fcmovbe
shrl
fildll
xlat
push
dec
insb
movl
xchg
int3
shl
and
popf
imul
rcll
loopne
xchg
das
mov
setnp
add
or
xchg
add
test
or
ljmp
or
add
jns
mov
pop
add
cld
scas
sbb
pop
push
mov
enter
fsincos
mov
pop
sub
xor
cmp
scas
xor
adc
push
adc
push
out
pop
adc
push
rcrb
fprem
insb
lret
sbb
pusha
sub
lahf
and
cmp
fs
adc
stos
addr16
sarl
ret
inc
call
mov
roll
pop
rorb
shlb
sub
imul
lods
imul
fmuls
mov
mov
out
ljmp
movsl
adc
out
mov
cmp
cltd
lahf
mov
mov
dec
push
sbb
pop
jmp
ja
mov
mov
fs
xchg
mov
mov
cmpsl
dec
iret
mov
inc
dec
inc
ret
iret
xchg
mov
lods
imul
inc
cli
ljmp
mov
push
xchg
loope
xchg
inc
jmp
xacquire
mov
insl
fsts
fmulp
adcl
test
aaa
xorb
cmp
pop
xchg
xlat
icebp
fistps
sub
xchg
pop
add
notb
loopne
xlat
jg
xor
repz
xor
insb
rcrl
pop
fcoml
jns
push
mov
add
mov
cmp
and
push
aad
push
xchg
pop
mov
bound
js
dec
xchg
adc
subl
and
push
push
adc
or
mov
or
es
js
jnp
add
enter
gs
adc
mov
out
rorl
sbb
inc
add
mov
xor
aam
std
inc
or
outsb
clc
push
add
mov
in
fsubr
inc
pop
dec
subl
addb
lods
fiadds
adc
dec
mov
fsubl
inc
and
push
arpl
mov
push
daa
or
xlat
pop
or
mov
mov
push
movsl
cmp
push
enter
cmp
jmp
js
iret
dec
sbb
mov
fbld
hlt
loopne
and
aad
push
push
or
lods
push
mov
jnp
mov
xchg
scas
fadds
xor
test
push
push
and
into
sub
pop
shlb
cmp
xor
jl
scas
es
xchg
adc
lret
test
aas
cmpsb
cs
stos
loop
movsb
adc
xchg
push
and
leave
lfs
cmp
cmp
stos
push
dec
fiadds
push
test
lret
push
sbbl
mov
mov
xchg
jbe
add
shrl
xchg
jns
fmuls
sarb
mov
enter
repnz
int3
pop
or
jge
xchg
lds
push
or
dec
shll
cmp
xchg
dec
data16
xor
outsb
iret
sub
std
addr16
addr16
sub
push
or
xchg
add
mov
fdivrp
adc
cmp
sbb
ret
push
sbb
and
xchg
lock
mov
mov
int
shll
adc
jb
sbb
sub
or
jae
addl
mov
fwait
cli
cmpsl
cmp
jno
fisttpll
int
imul
faddl
xor
dec
pop
xchg
out
loop
mov
or
out
or
add
les
jp
bound
mov
scas
loopne
or
pop
jl
and
leave
or
xchg
pop
xor
aam
test
push
fdivrl
cmp
xchg
cmpsl
dec
lods
pop
fldt
mov
sbb
mov
mov
mov
sub
jle
das
test
ja
popf
cs
push
xor
sti
scas
jb
lods
jg
pop
out
subl
adc
filds
lret
xor
fs
nop
lock
fadds
cmpsl
cmc
inc
das
xchg
repz
lcall
push
cltd
mov
rcrb
imul
mov
jecxz
scas
fcoml
fldcw
inc
cmp
shll
data16
mov
xor
in
dec
dec
jae
cs
scas
test
shll
out
jns
mov
outsl
lret
add
lods
push
dec
test
push
out
or
add
add
jecxz
cltd
mov
jg
dec
icebp
data16
mov
repnz
incl
mov
repz
iret
mov
repnz
nop
xchg
adc
push
inc
cwtl
cwtl
jo
loop
in
jg
jae
jmp
mov
ja
mov
pop
imul
mov
cmp
and
mov
mov
fidivrs
add
aas
and
leave
stos
or
stc
pop
cmp
insb
fbld
mov
call
jae
jb
pop
dec
sub
daa
and
push
pop
jno
mov
inc
push
rcrl
adc
sbb
mov
mov
add
test
aas
imul
fwait
sub
fsubrs
movsb
rcrb
adc
into
pop
xchg
mov
mov
sbb
test
mov
mov
push
sarb
repnz
addr16
stc
sarl
jmp
loope
or
mov
pop
add
dec
pop
in
ja
es
jnp
ljmp
dec
mov
adc
push
cmpsl
jmp
in
push
jb
mov
xchg
in
in
in
ja
movb
dec
lods
rcrl
push
cmp
sub
xchg
popa
dec
clc
adc
gs
xchg
mov
stc
jecxz
ss
and
sub
fld
test
js
push
push
dec
rolb
xchg
shlb
repz
push
add
loop
xchg
push
push
mov
subps
fsubl
pop
outsb
sbb
inc
mov
push
cltd
xor
cli
sbb
dec
and
insb
add
packssdw
mov
mov
int3
test
cmp
xchg
add
push
mov
clc
fiadds
add
jg,pt
sub
sub
jae
rcr
adc
and
loopne
inc
aas
cli
or
jb
imul
mov
mov
push
ds
imul
adc
push
data16
mov
stos
fldpi
addl
decb
hlt
cmp
push
cmp
sahf
and
fistps
inc
mov
push
adc
test
lahf
arpl
sbb
gs
shlb
xchg
adc
out
mov
faddl
ret
lcall
repnz
in
in
and
pop
pop
ja
lahf
mov
push
stos
fs
es
sbb
inc
aaa
lock
movsl
lea
push
shll
mulb
mov
fldl
jo
mov
fisttps
inc
jg
jo
jecxz
add
ss
mov
je
arpl
sbb
popa
jl
mov
pop
cmp
out
stos
imul
test
es
sbb
xor
in
mov
sub
iret
adcb
xor
ds
stos
xchg
and
jbe
gs
je
out
push
cmp
mov
hlt
lods
jns
sbb
call
inc
push
mov
imul
mov
movsl
aam
cmpsl
cmp
add
sarb
and
pop
out
xchg
pop
fisttpl
jnp
mov
cmp
mov
dec
bnd
add
mov
movsb
sbb
inc
push
dec
sub
roll
das
adc
movsb
cmc
push
cmp
inc
ret
push
lods
scas
add
ds
inc
and
mov
dec
stos
jb
icebp
mov
pushf
mov
in
sarl
sbb
xchg
or
pop
add
popl
popa
aas
dec
dec
xor
lret
cld
add
lods
pop
dec
sbb
test
push
into
mov
and
jns
xchg
add
loop
jecxz
inc
add
adc
or
fcmovbe
leave
mov
pop
mov
xor
enter
jae
xor
pop
int
xchg
pop
or
or
pop
push
add
push
dec
jno
inc
insl
aad
push
inc
sbb
inc
cmp
into
or
xchg
add
adc
cmp
pop
mov
cld
dec
pop
pop
add
jge
cmpsb
ds
lahf
add
push
lret
xlat
aad
cwtl
xchg
aad
inc
xor
sub
fdivrp
idivb
cmp
test
or
xchg
push
inc
faddl
or
adc
cmc
ret
add
imul
dec
lods
jb
js
sbb
inc
hlt
int3
add
and
cmp
aas
aam
or
movsb
mov
mov
adc
testl
mov
sbb
jg
sahf
push
ds
xor
xorl
and
sub
jge
xor
xor
jne
ljmp
std
and
mov
push
aad
leave
add
fdivr
int3
jb
addr16
int3
test
jge
mov
fbld
jge
push
add
and
dec
mov
xor
dec
cmp
leave
jbe
fistpl
adcb
loope
dec
push
xor
sbbl
sbb
or
sti
lea
sub
repnz
add
dec
xor
push
lret
arpl
xor
pop
mov
and
jmp
jecxz
cmp
notl
ljmp
sub
pop
cmpsl
push
jno
out
inc
in
fdivs
xabort
xor
rcl
loopne
arpl
adc
in
int
push
cmp
fcoms
fneni(8087
sbb
mov
out
das
mov
pop
mov
cmp
or
add
adc
xor
lcall
test
sahf
repz
orl
sub
test
jle
jmp
mov
cli
add
dec
addl
fs
mov
cmp
fwait
and
xlat
mov
loop
jmp
mov
mov
inc
sub
add
pop
shrb
aad
fdivr
test
xchg
cmp
cmp
fucomp
ss
pop
dec
es
push
fisubrl
sbb
add
inc
shrb
sbb
mov
cmp
mov
or
inc
mov
mov
pshufw
jg
aam
vaddps
fldcw
scas
pop
cwtl
imul
out
push
xchg
adc
adc
push
test
ja
adcl
out
mov
nop
aam
repz
ljmp
push
shll
add
movsb
add
bound
push
loopne
xor
jecxz
insl
xchg
cli
sahf
mov
inc
nop
scas
sahf
jae
or
nop
repnz
jmp
aas
mov
jg
adc
xor
add
mov
mov
dec
das
sub
stos
sub
mov
es
inc
inc
rcrl
repnz
inc
pop
shr
daa
mov
sub
dec
notb
andl
pop
mov
enter
push
mov
lahf
or
add
or
mov
jo
push
mov
loope
inc
insl
pop
mov
lret
cltd
scas
inc
cmpsl
icebp
test
out
jmp
pop
adc
jmp
jle
sbbl
fwait
cli
in
pop
inc
push
call
or
aas
cmpsb
scas
call
xchg
fwait
cmovb
cmpsb
jns
adc
xor
lods
xor
push
mov
das
lods
xchg
pop
stos
js
call
roll
inc
mov
mov
add
cltd
sbb
xchg
test
jne
insb
shl
je
lods
aad
lds
jl
or
insl
mov
aam
inc
in
ds
pop
hlt
dec
dec
ja
int
sbb
lcall
jg
adc
sbb
dec
xchg
pushfw
arpl
arpl
mov
das
jle
inc
add
push
cmp
enter
adc
arpl
rcr
jne
les
sbbb
cwtl
pusha
or
lock
bound
cmp
into
dec
push
xchg
insl
mov
mov
mull
push
push
enter
push
adc
push
push
sahf
lret
xchg
add
daa
adc
mov
sub
xor
mov
in
pop
push
and
cmp
loop
xchg
mov
jp
pushf
js
out
add
push
lret
fmuls
cmp
cmp
loop
popf
das
fimuls
xor
push
es
arpl
cmc
lea
movsb
addb
pop
out
sti
stc
mov
addr16
cwtl
lods
adc
inc
inc
xor
sbb
in
jp
jp
cmpl
or
push
adc
xor
cld
scas
data16
inc
add
mov
add
adc
push
xchg
gs
jp
pop
pusha
js
push
cmp
ja
add
xor
pop
leave
and
into
cld
ret
or
dec
aad
pop
adc
sbb
adc
movsl
or
lods
pushf
add
or
push
stc
inc
jbe
mov
imul
mov
mov
or
xlat
mov
dec
xchg
mov
popl
or
dec
aam
icebp
out
inc
fwait
or
jno
movsl
pop
lods
or
adc
test
push
push
cmp
add
test
cmpl
push
cs
jne
rcl
dec
lahf
lahf
ret
cmp
mov
xorb
mov
loop
or
fcoml
fwait
cmpsb
cmp
stos
mov
push
add
push
dec
shrb
and
push
outsl
fildl
aad
out
and
mov
inc
sbb
mov
push
mov
adc
pushf
jno
cmp
pop
out
xlat
mov
adc
popa
jmp
je
adc
pushf
jb
jne
xor
pop
aam
fcompl
pop
pop
sbb
inc
clc
leave
fsubl
notb
out
xchg
fisttpll
and
jg
je
mov
and
pushf
mov
cwtl
stc
mov
cvtdq2ps
xchg
out
xchg
and
movsl
xchg
ljmp
xchg
inc
ret
or
rolb
imul
mov
dec
inc
jge
dec
mov
ja
xchg
les
je
hlt
jle
mov
xchg
stos
mov
dec
lds
push
rcrl
add
cld
jp
dec
pop
shll
lods
cwtl
jp
mov
lahf
or
mov
lea
test
inc
int3
inc
mov
push
or
mov
divl
adc
pop
pop
push
rep
jns
inc
push
int
pop
jo
xlat
ja
or
fs
cmpsb
dec
inc
and
mov
and
sub
insl
xchg
iret
ljmp
mov
cli
pop
clc
cli
movb
fldenv
push
add
jp
shr
lret
sbb
push
mov
dec
pop
push
icebp
ja
mov
xor
rorb
lea
mov
jmp
cmpsl
mov
push
mov
inc
and
insl
mov
shll
test
nop
mov
ja
xor
insb
sub
dec
xchg
enter
cmpsl
in
push
daa
mov
xor
push
idiv
sarl
push
fisubs
loope
call
and
das
aad
adc
xor
repnz
decb
mov
test
jl
lret
fidivrs
out
std
jge
fs
scas
dec
fadds
pop
outsl
cld
daa
dec
or
cmpsw
adc
add
pop
push
mov
mov
out
jmp
movsl
fwait
add
insl
out
jle
sub
xlat
xor
inc
push
jg
mov
pop
mov
add
out
div
aaa
mov
cltd
rcll
mov
cmp
mov
mov
push
mov
xchg
add
mov
or
cld
cmp
cmp
int3
mov
psllq
mov
xor
pop
cmp
dec
push
pushl
push
add
xchg
int
test
aas
enter
pop
fadds
pop
mov
sub
sub
pushf
adc
rorl
xchg
shlb
adc
std
dec
mov
pop
cs
adc
bound
mov
xchg
jno
mov
sbb
push
push
xchg
mov
iret
cmp
xorl
je
scas
dec
push
mov
or
xor
mov
gs
pop
mov
lods
cmpsl
sbb
ficomps
hlt
mov
adc
inc
sahf
xor
lret
rcrl
cmp
adc
mov
xchg
sahf
xchg
mov
loope
dec
mov
xchg
cmp
mov
jmp
cmp
divl
and
dec
imul
cmp
push
mov
test
cmp
push
adc
or
repz
jno
test
ss
push
xor
dec
jle
test
add
xchg
pushf
xlat
mov
xchg
iret
fists
jp
sbb
pop
cwtl
and
repnz
xchg
enter
xor
into
lods
or
xor
adc
pop
ljmp
mov
lods
pusha
lds
mov
stc
ret
add
pop
call
pushf
sbb
out
mov
jmp
mov
inc
or
loop
dec
je
jle
and
inc
push
mov
add
lea
push
sub
ljmp
insl
icebp
xchg
int3
add
xchg
pop
pusha
mov
mov
inc
popf
inc
and
or
push
cmp
es
mov
sbbb
ss
sub
orl
mov
jmp
jl
dec
repz
dec
pop
je
movsl
pop
aam
fists
lahf
test
js
or
iret
mov
sbb
into
dec
sbb
xor
pop
pop
lret
mov
mov
dec
jae
mov
pop
mov
or
cs
jmp
push
push
mov
adcb
mov
in
aam
push
fcomps
cmpsl
or
sbb
sub
mov
dec
xor
fcmovnu
stc
ss
jp
insl
ret
into
call
sti
xchg
sti
shrl
std
imulb
cmpsb
push
sub
add
lods
ret
dec
jmp
xlat
sbb
mov
sahf
fisubrl
jo
stc
sahf
sub
pop
xlat
nop
insl
mov
cmp
jbe
mov
lea
push
jne
rcr
dec
mov
jl
sub
mov
mov
clc
pop
add
pop
dec
xchg
cltd
mov
aaa
lahf
stos
mov
and
add
xorl
popa
add
leave
ret
jnp
cmp
fcom
mov
or
xchg
in
fstpl
cltd
pop
pop
outsb
inc
std
scas
pop
cld
ret
cmpl
pop
pop
pop
std
ljmp
sbb
js
sbb
test
lods
ret
stos
lods
mov
clc
fdivrs
mov
or
and
and
ret
mov
lds
or
in
in
sti
out
mov
push
fsincos
inc
add
popf
sarb
in
ret
mov
popf
push
pushf
adc
push
add
adc
xor
push
dec
xchg
mov
in
mov
roll
cmp
aad
pop
pop
aam
mov
movsl
and
mov
popa
inc
mov
cmp
int
pop
stc
adc
add
out
testl
mov
mov
xor
pop
mov
ljmp
mov
arpl
loopne
into
and
xchg
inc
push
std
roll
mov
dec
add
les
sbb
xchg
out
arpl
sub
cmp
xor
cmp
pop
sub
and
insl
xchg
pop
les
jne
popa
repz
into
sarb
rcrb
jp
jns
sbb
dec
in
sub
scas
nop
xor
int3
lahf
sbb
rcr
idivb
ljmp
add
cltd
sub
out
and
ret
adc
jp
sbb
lret
jp
add
push
fisubrs
push
mov
cmp
sbb
pop
jo
sub
fistpl
pushf
push
cmpsl
add
ficoms
sbb
js
sti
add
leave
filds
dec
sarl
imulb
push
sbb
lcall
scas
clc
lahf
je
mov
jne
jl
out
xor
cmpsl
push
mov
cmc
in
xchg
push
insb
jbe
xor
pop
icebp
pop
mov
sub
cmp
push
xorb
test
shl
sub
xchg
arpl
mov
inc
idivb
mov
adc
sbb
pop
rclb
xchg
int3
jns
push
outsb
dec
int
loopne,pt
sbb
sbb
andl
mov
leave
sahf
iret
add
out
int3
push
adcb
lcall
ds
xor
lods
adc
jmp
ljmp
shll
fidivl
adc
pop
push
xchg
loope
ret
jp
clc
cld
dec
xor
inc
cmp
xor
add
sub
xchg
or
pop
xchg
call
xor
cmpsl
je
mov
push
and
xor
adc
int3
out
imul
push
dec
outsb
mov
jae
fdivrp
test
inc
fldenv
adc
push
mov
push
mov
sbb
pop
daa
shl
mov
push
cltd
inc
mov
xlat
sub
adc
sub
movsl
cmp
mov
adc
mov
xor
fistps
loope
or
lret
rorb
sti
std
push
jne
and
mov
xor
fimull
imul
cmpsb
cmp
jae
mov
bswap
or
adc
mov
divb
adc
sub
iret
push
sbb
mov
add
icebp
cmp
sbb
add
sbb
mov
in
test
scas
scas
adc
shlb
fdivl
in
jbe
aam
rol
mov
mov
mov
mov
cld
arpl
inc
sbb
push
jp
cmpb
mov
or
or
adc
pop
jae
jb
aad
and
test
inc
mov
mov
inc
ja
jmp
xchg
xor
arpl
ja
cmp
fs
sbb
scas
inc
xchg
repnz
jge
jl
stos
mov
outsb
leave
push
notb
push
jg
stc
jmp
in
pop
jp
push
jg
loop
pop
outsl
aaa
outsb
lcall
jno
sbb
cmpl
call
lahf
rcr
inc
push
mov
inc
mov
sbb
mov
mov
jmp
jb
dec
into
imul
mov
out
enter
pop
popf
rolb
lods
lret
cmpsl
repnz
scas
pop
xchg
lock
adc
movsb
or
ja
jno
int3
repz
sbb
jl
sbb
jg
icebp
push
mov
inc
test
js
fwait
ret
idivl
sbb
lods
push
lcall
sbb
xchg
pop
dec
add
pusha
add
xor
sti
sub
push
jecxz
daa
cmp
mov
adc
push
nop
jae
mov
dec
jmp
cwtl
sbbl
mov
lahf
in
mov
mov
call
ss
arpl
cmp
pushf
sub
es
fxch
int3
stos
and
loope
mov
inc
mov
mov
cmp
fwait
es
pusha
fstps
cmp
mov
pop
sub
mov
fs
clc
aas
lahf
mov
push
lcall
lock
cmp
pop
pushf
xchg
adc
and
sbb
pop
lahf
or
xor
adc
mov
iret
out
loopne
push
jg
add
mov
jo
xchg
call
cld
push
sbb
sahf
xor
icebp
dec
mov
test
inc
fsts
addr16
mov
push
xchg
pop
cmp
or
push
clc
arpl
and
sub
outsl
cmp
push
mov
or
xchg
call
pop
add
cmp
mov
jnp
jmp
pop
push
pop
sub
arpl
movsb
arpl
mov
shr
enter
xchg
push
mov
adc
mov
imul
sbb
adc
push
xchg
mov
mov
jbe
cmp
fdivrs
jmp
or
js
js
jnp
mov
rclb
cmp
mov
and
aam
aas
pop
xor
dec
dec
mov
inc
push
pop
aam
lock
ja
fnsave
fldcw
pop
mov
sbb
aad
inc
xchg
and
mov
jmp
imul
insl
fpatan
push
xor
clc
test
and
js
popf
push
lds
inc
and
dec
out
in
cmp
in
adc
jae
data16
imul
notb
in
ds
jo
aad
push
es
dec
lret
push
jge
enter
ljmp
icebp
add
mov
dec
push
inc
pop
shrb
test
xchg
sub
enter
adc
mov
repz
mov
mov
inc
repnz
ja
jb
sahf
rclb
sbb
aam
in
dec
mov
in
add
aad
add
arpl
in
cmpsb
jmp
pop
jmp
cld
outsb
scas
scas
mov
sub
out
mov
stc
pop
mov
add
cmp
repnz
dec
mov
cmp
pop
push
rolb
iret
test
mov
jno
xor
cmp
repnz
loope
cmp
cmp
cmpsl
push
sbb
or
inc
mov
jb
xor
pop
cltd
popa
test
shl
loop
lds
ja
nop
xor
movsl
mov
adc
dec
out
and
insl
inc
lret
sbb
and
js
lock
lret
mov
lahf
or
xor
fiadds
inc
js
mov
pop
mov
lods
mov
mov
pushf
jg
dec
insb
jnp
dec
or
fs
out
mov
les
ss
popa
lods
mov
xorl
ret
jl
adc
cmp
insl
adc
push
jo
adc
xor
cld
and
push
lods
xchg
in
rcll
xlat
push
or
adc
popf
ret
movhps
jbe
int
rcr
repnz
ret
pop
imul
mov
adc
or
into
mov
out
jle
jmp
push
lret
jp
and
mov
rcrl
mov
inc
cmp
lds
je
sti
loopne
mov
sbb
adc
fldenv
and
push
insb
mov
lea
adc
lock
or
pop
jbe
ds
pop
in
adc
cmpsl
inc
jne
shll
jle
popa
xchg
jnp
frstor
mov
dec
xchg
stc
inc
mov
xor
aaa
and
mov
rcrb
or
inc
mov
or
sahf
mov
jo
push
test
push
adc
adc
or
pop
mov
mov
mov
mov
mov
xchg
out
push
pop
xlat
dec
jb
ret
mov
das
test
das
jne
pusha
js
imul
mov
insl
outsl
ret
les
mov
mov
xor
push
inc
jb
inc
inc
jle
or
xchg
pushw
pop
icebp
out
dec
in
xchg
push
jge
pushf
pop
popf
ret
mov
cld
lock
or
test
sbb
xor
sbb
ret
in
lea
popa
mov
call
mov
jbe
or
call
gs
aas
insl
rolb
push
sub
les
mov
hlt
jb
jle
dec
sub
xor
adc
push
in
push
lods
sarb
add
aas
pop
push
xor
jnp
dec
scas
push
lahf
or
rolb
lcall
xchg
xor
cli
sahf
lret
push
push
lcall
cld
xchg
mov
inc
daa
lahf
push
push
lret
pop
cmp
in
jl
pop
cmp
push
popa
jecxz
addr16
hlt
jp
inc
imul
movsb
jbe
push
out
xor
cmp
movsl
fcompl
dec
jle
sbb
lahf
and
sbb
pop
mov
dec
icebp
js
pop
or
gs
push
pop
mov
jp
adc
xlat
push
push
mov
sub
sub
dec
sub
scas
dec
xchg
scas
daa
ja
add
inc
xchg
and
or
xor
hlt
mov
ja
cmp
loop
repz
inc
lret
cltd
int
fxch
xor
cmp
shlb
xchg
cltd
ret
sbb
push
mov
jge
xor
mov
test
sti
loope
jo
pop
fisubs
sbb
push
xchg
mov
je
pop
mov
or
nop
adc
std
pop
inc
hlt
mov
mov
jmp
mov
mov
sbb
cld
add
les
jnp
ss
out
cmpxchg
test
ljmp
cmp
in
dec
jnp
jae
adc
decb
sub
je
fs
push
dec
jp
repnz
dec
aam
jecxz
xor
push
cmc
movsl
inc
enter
std
push
stos
mov
nop
xor
test
or
inc
push
clc
or
std
in
xchg
test
out
shl
movsl
in
arpl
stc
adc
stos
lcall
mov
icebp
push
das
pop
xchg
lret
mov
jb
add
call
icebp
dec
pop
pop
lods
test
xor
pushf
pushf
inc
pop
adc
sbb
and
outsl
mov
in
and
pop
cmp
cld
push
orb
stos
arpl
xor
lods
cld
aas
jle
xchg
popa
adc
mov
inc
xchg
push
and
daa
jmp
maxps
sbb
push
jecxz
ud0
sub
adc
pop
repnz
xchg
insl
lcall
jmp
sbb
fcomps
scas
daa
rclw
mov
jo
insb
lods
xor
jp
out
dec
js
stos
jno
movsb
clc
add
add
or
enter
push
mov
test
pop
cmc
mov
mov
mov
fnstsw
add
push
jae
cmpsl
or
inc
or
xor
mov
jno
cmp
jg
adcl
sub
insl
test
or
inc
pop
out
or
sarb
fdivs
lea
ret
data16
outsl
mov
rolb
fnstenv
out
repz
adc
loop
sarb
lods
fcomip
enter
sbb
ja
xor
adc
stos
enter
enter
ficoml
add
fxch
sub
lds
in
push
pop
mov
push
popa
aas
call
add
stc
sub
xor
popf
clc
repnz
push
test
xchg
repnz
or
stos
push
pop
out
mov
pop
rorb
add
fnop
hlt
mov
push
adc
lock
mov
imul
inc
je
loopne
cltd
ljmp
inc
data16
mov
in
sbb
mov
leave
pop
test
das
ret
push
or
out
lods
sub
push
aad
xchg
add
pop
aas
xlat
mov
insb
sub
iret
stc
call
push
push
xor
outsl
add
cmc
xchg
or
lcall
sub
aam
xchg
test
mov
xchg
inc
into
testb
pop
dec
aad
popf
dec
inc
inc
adc
in
xchg
sbb
push
fdivl
and
jl
js
xor
in
pop
or
add
push
sbb
dec
out
out
lea
loope
xchg
mov
inc
jno
mov
cmp
ret
xor
or
std
cs
or
mov
pop
and
shl
or
add
lock
fcoml
jmp
mov
mov
push
in
add
jo
or
lods
cmc
jno
sub
jecxz
mov
xchg
mov
lock
pusha
stc
in
repz
push
xor
faddl
loope
inc
rcr
and
pop
adc
in
mov
insl
push
fisubl
scas
sarl
dec
in
fbld
loopne
jl
and
out
sub
mov
jge
mov
test
jge
pop
or
xchg
ret
popa
scas
fidivl
sbbl
repz
jle
push
pmulhw
andb
cmpsb
adc
jo
pop
loop
iret
dec
push
mov
pushf
aad
pop
div
push
dec
frstor
add
xchg
aas
pop
mov
xchg
js
test
sbb
daa
adc
iret
scas
push
aas
leave
lds
jmp
adc
cmp
sbb
test
stos
test
in
in
loope
sbb
mov
mul
into
popf
adc
stc
xchg
xchg
xchg
int3
incb
sbb
imul
jmp
or
out
fs
adc
add
incl
lods
sbb
mov
outsl
mov
inc
push
adc
rorb
movsb
xor
mov
xchg
rcrb
and
icebp
aas
cwtl
mov
stos
sbb
lahf
pop
lods
dec
mov
daa
fwait
aaa
push
sub
lock
sub
loop
sbb
adc
test
xchg
or
sub
mov
push
popa
in
sarb
mov
fwait
jg
inc
mov
repz
pusha
dec
out
repz
js
bound
ljmp
sti
out
repnz
das
aas
pop
test
lods
pop
outsl
inc
or
int
adc
lea
push
dec
sub
mov
das
push
or
sub
clc
idivl
mov
pusha
icebp
incb
sbb
sarl
xchg
adc
push
loopne
push
test
pop
cmp
pop
xchg
aad
bound
daa
inc
outsl
adc
dec
dec
xor
imul
mov
sti
dec
cmp
loop
jnp
jg
lret
int3
in
jl
ret
sub
mov
adcl
in
xchg
in
sub
fwait
jg
xor
mov
and
loop
sub
xor
les
iret
push
jnp
out
sub
sahf
add
lods
test
jecxz
add
add
add
ljmp
push
lods
and
adc
es
push
xchg
arpl
xchg
cmp
stc
stos
test
mov
xchg
das
mov
push
in
mov
shll
mov
xor
push
fdivrs
jae
or
shll
sbbl
push
pop
xchg
insb
add
out
scas
add
xchg
mov
add
mov
popf
daa
sbb
mov
xor
test
cmpsb
or
jl
add
push
mov
in
mov
sub
leave
shll
out
in
mov
ds
xlat
loop
rcr
mov
sahf
dec
mov
dec
mov
push
mov
add
pop
test
bound
xchg
sbb
cmp
add
mov
cmp
mov
in
ret
ret
sti
fdivrs
mull
popa
popf
fs
jmp
in
jns
bound
xor
lcall
xchg
mov
clc
push
les
cs
mov
cmpsb
push
or
xor
and
rorl
jmp
fstpl
ret
inc
xchg
pop
imul
push
fisubs
dec
data16
cmpsb
movsl
jmp
jge
insb
idivl
rcrl
arpl
pop
adc
fcompl
pop
dec
pop
cmp
in
jnp
lods
jbe
je
out
lret
and
adcl
add
aas
lret
dec
scas
mov
xchg
clc
dec
pop
andb
mov
and
test
and
setae
loope
mov
enter
out
aas
add
xlat
xor
mov
and
pop
sbb
or
mov
pop
xor
ret
cmp
inc
ss
pop
jle
pop
iret
in
out
and
and
or
or
inc
and
push
stos
mov
sub
xor
clc
sub
fstps
scas
je
or
test
frstor
ret
xchg
loope
sbb
add
lds
popa
inc
mov
ret
dec
mov
into
aaa
push
push
jno
pop
push
cmc
or
and
pop
mov
sub
lods
popa
das
out
sbb
xor
inc
addr16
sub
loopne
and
into
mov
stos
and
or
jmp
jg
mov
rclb
je
sbb
sbb
sub
pop
test
jmp
mov
ja
lods
call
imul
xchg
pusha
jge
or
stos
out
pop
fwait
cmpsl
aas
insl
repz
aas
xor
add
mov
rclb
mov
cmp
les
dec
dec
jp
sti
push
pushf
mov
pusha
pop
cs
leave
sub
roll
pop
and
dec
xchg
dec
rclb
cld
push
dec
lds
xchg
fisubl
fwait
and
pop
adc
sbb
jle
adcb
mov
mov
sarb
jmp
js
dec
iret
cs
sarb
inc
dec
es
clc
nop
lods
pop
out
dec
pusha
xor
push
xor
inc
dec
cmpsb
jmp
arpl
rclb
movsb
push
sti
mov
jl
pop
shrb
aad
fldl
inc
pop
push
and
dec
xor
fsts
sahf
clc
inc
dec
repnz
jge
lahf
dec
mov
out
add
cmp
pop
shrl
fisubs
popf
xor
fsubl
sub
jne
fiaddl
jo
cmp
movsb
icebp
jecxz
sub
pop
cmp
outsb
jmp
jae
mov
jno
inc
imul
or
in
jb
mov
mov
sub
scas
jbe
mov
bound
and
ret
into
xlat
es
sub
fnstcw
and
add
bound
mov
inc
testl
push
cmp
arpl
push
in
jle
dec
call
pop
cmp
hlt
and
imul
xchg
and
inc
sub
cmp
cmp
rcrb
mov
subl
add
clc
stos
xor
es
imul
sarb
lods
jne
and
loope
pop
push
mov
xor
cmp
lcall
popa
aas
cmp
or
and
fistl
mov
dec
pushf
rcl
iret
and
push
int3
push
negb
je
dec
cli
in
or
and
cltd
add
mov
lods
insb
pop
jno
mov
dec
pop
cltd
aad
mov
mov
rorl
adc
inc
mov
pop
sub
adc
out
mov
daa
xlat
cmp
pop
mov
mov
push
cltd
rcrl
pusha
cmp
dec
pop
lods
dec
mov
hlt
stc
sub
ja
fwait
xchg
add
mov
jecxz
mov
fimull
insl
sub
mov
cmp
int3
hlt
sbb
jmp
out
sbb
sbb
lds
ss
cld
icebp
xor
pop
pop
mov
mov
jl
jecxz
add
or
mov
add
jge
pop
iret
mov
pop
adc
inc
jl
gs
dec
aam
xchg
test
inc
push
repz
stc
fs
xor
shlb
pop
mov
call
ds
inc
cmp
lret
gs
inc
mov
leave
adc
cli
in
add
rcll
arpl
xchg
outsb
out
dec
lret
popf
cmp
lret
mov
add
adc
xchg
jb
mov
or
and
xchg
mov
std
mov
sub
notl
xchg
cmpsb
adc
sbb
loope
sarb
dec
mov
lahf
push
test
and
mov
adcb
sarb
rorb
push
movsb
or
sbb
outsb
sub
add
cmp
sbb
mov
xchg
push
cmp
js
mull
sbb
sbb
das
cld
mov
pop
push
and
cmp
enter
arpl
fwait
adc
xchg
loope
hlt
movsb
sub
or
jle
mov
aam
add
std
iret
jae
repnz
into
in
adc
daa
jg
and
sbb
cwtl
inc
pop
idivb
or
gs
aaa
fcmovu
scas
pop
inc
andl
xchg
push
repnz
adc
dec
mov
fprem1
cmp
cmp
adc
mov
push
pop
clc
or
inc
mul
lods
cs
jl
push
fildll
dec
jle
scas
inc
inc
xlat
push
test
xchg
pop
xor
xor
xchg
mov
xchg
adc
inc
xchg
pop
xlat
or
xchg
repz
sahf
and
add
das
fucom
adc
sarb
movsl
sbb
xor
push
bswap
sbb
push
xchg
pop
test
xor
js
mov
fcmovbe
or
inc
jae
ret
lret
dec
push
pusha
je
stos
push
mov
ljmp
imul
stos
sub
fimuls
xorl
std
stos
sti
lret
movsb
mov
enter
xchg
lods
in
bound
mov
in
mov
cmpl
dec
aas
mov
push
das
testb
xchg
nopl
sub
jno
pop
sub
pop
or
pop
inc
aam
dec
push
or
out
stos
in
cli
dec
fisttpl
sbb
adc
adc
int
test
das
imul
xorl
shrb
xor
and
sub
jecxz
out
ja
scas
pop
xor
xchg
push
je
dec
cli
jae
in
bnd
pop
je
mov
cs
cmp
iret
rcrb
in
in
dec
dec
lods
jnp
adc
ret
insb
xor
sub
inc
lods
and
fwait
push
push
mov
inc
sub
cmpsl
xor
mov
mov
cmp
mov
pop
sub
xlat
rcll
in
xor
cltd
adc
mov
in
sarl
gs
adc
cwtl
inc
jbe
and
cmp
push
jno
sbb
jne
xor
add
or
imul
mov
xchg
aas
iret
sbb
xlat
in
xor
cmp
push
cmp
lret
jb
mov
pop
mov
cmpb
mov
fmul
shll
std
sbb
imul
mov
cmp
pop
test
inc
or
lds
or
arpl
dec
fmulp
shrl
inc
lahf
cmp
fiaddl
mov
sub
mov
rol
and
es
xor
cmp
pop
pop
xchg
pop
lahf
ss
pop
adc
jge
cs
add
jg
scas
jae
jp
mov
cwtl
mov
leave
sbb
lock
pop
push
pop
pop
adc
cwtl
lret
lret
divl
cmp
mov
nop
or
repnz
sbb
add
jp
dec
mov
filds
test
pushf
lahf
xchg
js
gs
or
inc
repz
cltd
dec
sub
addl
pop
pop
out
fldl
insb
out
and
sub
inc
faddl
xchg
xchg
push
and
xchg
add
lret
jns
rcr
je
dec
pop
mov
jo
mov
rcrl
addl
out
fisttpl
adc
out
xabort
xchg
pop
lret
mov
cmpsl
ds
xchg
inc
or
fsubrs
repnz
std
aam
pop
repz
dec
aad
insb
adcb
subl
cmp
icebp
push
stos
push
inc
sub
and
add
jo
mov
jnp
cmp
sbb
adc
mov
sub
xchg
jo
pop
dec
nop
js
or
lret
xor
mov
fucomp
push
cs
xchg
rcrl
mov
xor
xchg
fs
sub
divb
fsts
add
mov
mov
fldcw
jmp
daa
mov
stos
imul
in
inc
aaa
push
movsl
mov
add
cwtl
fwait
mov
pop
adc
add
sti
mov
fiaddl
xchg
adc
jbe
int3
out
cmp
out
sti
std
loop
add
add
daa
rcll
jnp
addr16
call
and
mov
mov
mov
cmp
inc
push
push
inc
mov
push
xchg
xchg
movsl
dec
add
dec
pop
adcb
cmp
cmc
cld
cmp
fwait
cld
test
fcoml
add
scas
pushf
mov
leave
dec
or
sub
cmp
decb
hlt
adc
jle
push
ret
sbb
jp
pop
mov
rclb
lahf
jmp
jp
sub
and
ret
mov
push
sahf
dec
mov
jg
cmc
mov
in
mov
mov
cld
lret
sub
lea
inc
adc
aaa
mov
fucomip
xchg
pusha
loope
movsb
les
adc
cltd
notl
sub
adc
pop
and
mov
mov
aas
test
xor
jg
cwtl
rcrl
jg
leave
lods
loope
push
mov
inc
cmpsb
mov
lock
xchg
push
cwtl
call
and
out
sbbb
jl
rol
adc
lods
add
jns
xchg
popf
push
fiaddl
cmp
cmpsl
and
pop
pop
mov
or
nop
aaa
mov
lret
lret
idivl
push
push
xchg
in
mov
pop
dec
lods
push
sub
mov
xchg
or
inc
popa
lret
in
pushf
cmc
or
inc
push
dec
daa
mov
in
aaa
ret
out
mov
jmp
les
stc
sub
js
subl
and
and
sub
into
out
test
inc
pop
insl
sbb
sbb
adc
shlb
cmp
xchg
loopne
dec
xor
sbb
aam
push
cmp
jp
clc
rcll
or
inc
mov
or
mov
test
test
add
inc
outsb
mov
insb
push
or
xor
out
mov
repnz
stc
adc
push
pop
sahf
sti
fld
mov
in
or
cmpsl
push
pop
add
mov
shll
mov
xchg
inc
or
xor
loopne
pop
shr
cmp
in
lock
push
cmp
cmp
out
cmp
daa
pop
ss
insb
addr16
jno
repz
add
and
sarb
data16
insl
sub
hlt
xchg
sbb
enter
and
pop
out
mov
jbe
test
fdivr
loop
sbb
mov
xchg
mov
pop
in
jmp
jo
pop
loopne
xlat
out
rcr
scas
add
outsb
fiaddl
dec
lret
jns
out
loop
mov
and
sub
repnz
fs
fistl
rorb
ret
test
jmp
sub
cmpsb
xor
dec
sub
push
lea
cmp
inc
adc
push
js
enter
and
lahf
gs
ja
lea
sub
adc
rcr
cmp
pusha
loope
xchg
fdiv
adcb
jecxz
or
mov
dec
jl
outsl
push
mov
adc
lahf
lds
dec
loop
jecxz
cs
outsb
sub
mov
push
pusha
xlat
cmp
dec
xchg
fld
shll
mov
cmpl
xchg
lods
pop
adc
shrl
ror
adcl
or
std
push
mov
and
dec
lods
mov
mov
cmpb
pop
outsb
es
cmp
mov
rclb
mov
dec
pop
clc
movsb
xorl
movsb
xlat
jno
loope
arpl
push
push
jl
pop
mov
cli
out
adc
mov
pusha
bound
jb
inc
jb
xchg
dec
shufps
incl
movsb
imul
lods
pushf
fs
cmp
and
std
xor
rol
shr
and
pop
repz
inc
inc
xor
push
xchg
lret
jp
mov
mov
loop
flds
cld
in
fstpl
outsb
and
imull
addr16
jle
nop
pop
cmp
jb
int
out
cmp
mov
ja
push
arpl
dec
push
inc
push
jmp
mov
mov
cltd
or
xchg
in
fucomip
bound
pop
in
mov
mov
inc
outsl
adc
sub
sbbl
in
pop
imul
popa
xor
and
jle
xor
pop
mov
in
pop
fldt
xchg
mov
jg
fiadds
push
push
cmpsb
dec
push
es
sbb
sarl
sti
pop
mov
push
jne
es
addr16
shll
es
cs
aad
inc
fimull
inc
sti
mov
jo
inc
cmp
mov
call
inc
mov
inc
jp
jns
call
mov
loopne
int3
in
mov
mov
inc
jbe
push
fadd
fists
nop
mov
hlt
aas
push
orb
loope
test
enter
xor
jbe
dec
sub
fbstp
fwait
in
shl
adc
cmp
arpl
inc
scas
mov
cmp
xor
fnstcw
push
jbe
icebp
ss
mov
sbb
pop
dec
jg
test
dec
cli
ficoml
xor
repnz
xchg
dec
repnz
sub
idiv
lods
pop
mov
daa
mov
push
xchg
into
push
cmp
adc
pop
in
and
out
xor
pop
mov
sub
scas
mov
andl
add
or
stos
push
aad
xor
in
jnp
dec
out
out
or
arpl
in
mov
jns
outsl
fidivrl
pop
test
adc
int3
fs
fs
adc
fdivrs
push
mov
incb
test
mov
push
cmp
mov
shlb
mov
fmul
pushf
jb
out
cmpsb
lret
mov
fs
in
fst
dec
popf
jbe
test
stos
xor
and
fwait
inc
mov
mov
pusha
int
mov
lcall
stos
movsb
inc
jb
jmp
sahf
add
shll
push
dec
outsl
add
mov
push
dec
lea
mov
outsb
lods
xor
xor
popf
sti
cs
adc
lcall
adc
scas
stc
lods
inc
mov
inc
mov
lock
hlt
je
repnz
arpl
jne
pop
cmpsb
roll
dec
dec
dec
jmp
iret
mov
sub
fbstp
aaa
push
in
dec
xchg
repnz
insb
dec
icebp
lcall
std
push
push
and
negb
inc
into
sub
mov
repz
pop
pop
add
push
nop
sbb
xor
movsb
mov
mov
inc
inc
movsl
je
cmp
out
sbb
inc
jae
mov
pop
or
push
shr
jge
clc
sarl
stos
iret
adc
xor
jl
rolb
inc
adc
nop
ret
cmc
lret
bound
mov
or
in
arpl
adc
push
pusha
push
mov
or
push
and
nop
cmp
je
das
mull
sbb
and
push
xchg
inc
out
or
outsb
rorb
outsl
xchg
sub
mov
adc
loope
popa
test
or
cmp
shl
or
pop
test
pop
sahf
int
adc
ja
cmp
lcall
mov
mov
neg
xchg
cmp
jbe
lret
imul
and
pop
in
xchg
dec
or
adcb
xor
dec
test
icebp
dec
adc
push
das
push
xchg
outsb
sbb
xchg
insb
into
in
xor
pop
cmp
ret
mov
mov
or
jmp
ljmp
sbb
dec
or
jl
mov
pushl
adc
dec
jbe
jg
xor
out
fcoms
in
xchg
pop
adc
mov
pop
cld
xchg
cwtl
sahf
mov
xchg
fcoml
xor
jp
or
pop
imul
inc
fadd
pop
aad
ljmp
fldl
out
jp
addw
daa
adc
mov
add
xchg
sbb
fnstenv
fsts
mov
mov
fiaddl
js
je
lods
xor
std
xchg
testl
xchg
xlat
xchg
aas
iret
push
in
fsubrs
iret
pop
mov
sbb
push
enter
test
cmp
mov
mov
pop
dec
int
dec
lahf
and
aaa
jp
push
jmp
inc
ror
jl
je
jb
add
push
pop
pop
movsl
insl
sbb
sarl
rolb
inc
addr16
xchg
cmp
inc
adc
pushf
fwait
cmp
iret
dec
pusha
mov
inc
mov
mov
loope
jno
in
lds
inc
cmp
orl
sub
stos
xorb
movsb
push
js
mov
sbb
inc
rcrl
sbb
test
lock
add
pop
cmp
pop
or
data16
stc
cli
daa
mov
jnp
gs
sbb
cmc
jecxz
and
jno
bound
push
repz
lds
popa
inc
or
insb
mov
add
jb
push
out
push
in
imul
jg
or
cmp
fwait
sbb
push
mov
je
mov
inc
push
cmp
sbb
repnz
in
daa
inc
lret
add
sti
xor
sahf
adcl
in
rep
jno
nop
sub
dec
lods
push
sarb
jp
push
pop
mov
jp
aad
lock
jge
in
or
cmpl
int3
pop
push
movsb
jns
lods
mov
jecxz
push
lret
inc
cmpsl
stos
adc
pop
sbbb
adc
flds
icebp
cmp
mov
data16
mov
adc
iret
or
mov
mov
mov
or
dec
cmp
lret
adc
push
leave
pop
scas
cld
push
out
inc
and
xlat
insb
xchg
dec
gs
push
mov
pop
xor
xor
dec
subl
mov
jne
int
pop
mov
ljmp
inc
adc
in
shrl
push
sbb
jp
or
mov
nop
mov
push
dec
sahf
inc
push
divb
add
xor
or
je
pop
pop
nop
xchg
test
lret
rcl
dec
std
xchg
mov
sahf
and
mov
cmp
repnz
xchg
popf
outsl
shrb
mov
dec
sti
out
in
pusha
mov
test
loope
pushf
and
jmp
and
cmp
sub
in
xchg
cmp
pushf
or
inc
pop
js
xchg
inc
pop
cmpsb
leave
sbb
call
xor
lods
ss
inc
adc
movsl
aam
xor
ret
sbb
pop
push
into
in
je
dec
and
push
insl
mov
jle
pusha
inc
adc
scas
push
add
imul
dec
push
push
mov
xchg
mov
xlat
push
sbb
popf
jbe
mov
lret
outsl
in
sub
fsubl
fdiv
jge
cmpsl
cmp
into
mov
lock
sbb
dec
dec
movb
rorl
fimuls
int3
cltd
sbb
mov
xchg
mov
pop
test
add
and
fstpt
and
lods
inc
in
pop
pusha
inc
in
push
push
cmp
mov
sbb
jnp
xor
mov
repz
fidivs
sub
add
leave
adc
movsb
cmpsl
jmp
sbb
mov
ja
xchg
lods
lahf
pushf
pop
ret
push
push
jne
icebp
test
lock
cmp
cmp
or
push
inc
inc
into
lcall
inc
cmp
adc
fstl
mov
scas
ljmp
xchg
cld
mov
cmp
int
pop
xchg
dec
and
addr16
mov
sub
sub
imul
lods
mov
pop
and
mov
pop
stc
sbb
mov
aaa
rcll
mov
push
dec
ja
ret
orl
mov
or
mov
daa
or
movzbl
cli
sti
adc
mov
and
enter
es
mov
mov
out
out
mov
pop
pop
fucom
testb
pushf
jl
xchg
fs
push
jl
fs
dec
subb
iret
xlat
cmp
out
mov
pop
jns
ja
mov
fsts
xor
lods
mov
movsl
jnp
or
pop
loop
repnz
jb
dec
gs
inc
jae
pop
dec
adc
add
sti
call
lcall
lret
call
mov
shlb
or
cwtl
jp
mov
and
xor
dec
inc
mov
rep
jp
in
insb
idiv
pop
gs
lds
mov
mov
loopne
mov
sub
xchg
add
das
push
shll
sbb
cltd
inc
push
sbb
add
std
inc
insl
int3
jmp
xchg
test
in
pand
jns
cmp
mov
xchg
inc
jecxz
les
xchg
sahf
mov
mov
sarl
inc
bound
jle
jno
dec
mov
inc
xlat
out
push
movsb
push
les
outsl
cmp
in
adc
popa
mov
adc
enter
mov
cmpl
inc
lahf
or
in
adc
or
cmp
loop
jae
sub
leave
inc
pop
mov
test
sub
mov
rcrl
ss
data16
sahf
jne
fcomps
and
jb
testl
mov
test
pop
add
vmovntpd
je
cmp
aad
cmp
jp
add
inc
daa
push
xchg
fsubs
inc
je
aas
icebp
adcb
cltd
imul
jl
and
pop
fdivrl
stos
dec
arpl
js
jb
jne
jne
jp
add
enter
pusha
sbb
movsl
xchg
xor
sti
popf
xor
shlb
addl
push
arpl
pop
mov
leave
mov
imul
shll
xor
icebp
sbb
hlt
cli
pushf
in
filds
mov
xor
xchg
fmulp
sbb
imul
jge
mov
pop
lock
mov
lea
rcr
mov
scas
shl
or
mov
push
sub
notl
popa
jmp
pop
cmp
repnz
adc
lea
daa
negb
mov
xchg
sub
and
aas
cltd
mov
and
jmp
ljmp
in
jp
jg
dec
cli
and
cld
add
inc
pop
cmp
jl
in
enter
mov
mov
mov
imulb
xchg
jae
xchg
xor
testb
aas
das
les
leave
mov
xchg
xor
cmp
jns
xorb
movsb
dec
aad
jno
mov
dec
out
xor
es
les
jp
xchg
or
or
mul
das
hlt
push
sub
ret
fldt
jl
int
cs
and
and
pop
bound
rol
cli
decb
lods
fwait
cmp
fs
repnz
lods
rcrl
loope
xor
mov
mov
mov
sub
pop
push
stos
push
or
es
add
inc
call
push
out
sbb
cmp
push
jne
jge,pt
out
ret
test
les
xorl
shl
dec
dec
xor
pusha
in
les
sbb
shll
loope
dec
jno
in
addr16
add
adc
xlat
push
fs
dec
xchg
cltd
mov
pop
sub
movsb
das
jp
cmp
rcr
xor
mov
mov
pop
cmp
daa
add
mov
es
jae
test
dec
jecxz
test
pop
jno
mov
in
dec
mov
push
lcall
or
xchg
dec
outsb
arpl
testb
mov
mov
mov
dec
or
shr
pop
dec
mov
cmp
push
mov
or
loopne
jg
stc
lods
adc
js
int
xlat
ret
dec
mov
shld
push
ret
mov
cmp
sub
push
jno
enter
dec
mov
xchg
mov
ljmp
lods
stos
loope
cmpsb
daa
addr16
out
xchg
ret
jns
js
sti
rorb
stc
outsl
mov
mov
repz
fwait
ret
cld
and
iret
mov
not
test
xchg
lods
ret
jle
mov
and
imul
stos
adc
jno
inc
loope
aam
loopne
jl
mov
mov
mov
or
mov
jae
dec
test
popf
xchg
hlt
sbb
rcll
pop
dec
outsl
xor
xor
loopne
adc
out
and
adc
orb
inc
jmp
bnd
jbe
lods
mov
or
inc
cli
push
gs
ror
lret
mov
daa
pop
dec
pop
mov
loope
lock
mov
out
adc
pop
adc
int
popa
mov
cmp
sbb
push
cmp
arpl
leave
idivl
xchg
sub
cmp
test
or
mov
dec
mov
xchg
fidivs
jbe
adcl
inc
or
arpl
xchg
inc
push
iret
push
testl
push
scas
and
push
cmp
add
shlb
dec
mov
orb
jl
mov
push
nop
insb
out
xchg
inc
inc
add
mov
cmpsl
fwait
jmp
stc
sbb
and
cltd
push
cmp
jbe
xchg
mov
outsb
xchg
and
inc
pushl
sub
mov
jg
stc
lcall
lcall
cwtl
rol
lds
loop
test
cmp
insb
add
add
xor
mov
or
pop
pop
inc
ret
or
incb
cmp
int3
pop
in
leave
mov
movsb
ret
stos
rol
or
sbb
adc
or
jb
addr16
loopne
insb
outsl
sbb
pop
pop
test
testl
call
jl
aas
jbe
or
cltd
aas
rclb
data16
xchg
adcl
mov
je
mov
fs
push
call
in
jecxz
roll
sti
je
hlt
aaa
mov
cmp
push
xchg
in
inc
data16
pop
dec
nop
in
cmpsl
sbb
xchg
and
jno
cmpsl
or
data16
adc
mov
addr16
push
rorb
jle
lods
jnp
dec
call
stos
gs
insl
mov
ret
inc
sbb
in
mov
dec
push
lds
cmpsb
mov
daa
dec
jle
dec
adc
clc
ljmp
shrl
aad
movsl
push
mov
xor
jecxz
push
xchg
push
push
adc
mov
int
mov
pop
test
adc
repnz
adc
inc
lahf
push
je
and
and
or
faddl
lcall
jmp
dec
orl
loop
fcomip
sbb
mov
test
or
icebp
xor
push
test
scas
ret
rep
shlb
and
mov
jg
jge
ds
hlt
decl
push
fmull
adcb
addr16
xor
and
repnz
mov
jecxz
mov
adc
lret
mov
test
pusha
jecxz
jne
pop
xchg
imul
mov
mov
or
and
data16
push
cmp
adc
jae
push
sbb
rclb
xor
xor
adc
adcb
inc
int3
push
std
adc
push
jl
ret
popf
loope
jnp
push
rclb
stos
xor
cld
and
xor
or
getsec
xchg
notl
pushf
call
pop
jp
popl
pop
dec
add
lcall
fs
arpl
repz
addr16
cmp
sbbl
scas
sbb
dec
fidivs
ret
pop
and
ud1
sub
fidivrl
outsl
lahf
cld
lcall
jmp
movsb
dec
into
push
adc
movsb
std
test
xchg
test
mov
add
popa
xor
repnz
fildl
shlb
pop
pop
dec
xor
cmc
xorl
mov
mov
or
mov
dec
faddl
loop
testl
mov
sbb
fdivrl
in
iret
ss
xchg
cmp
jmp
add
dec
inc
idiv
call
das
push
out
rcr
xchg
popf
pop
mov
scas
or
push
aad
cmp
int3
cmp
ss
sub
add
loop,pn
popf
pop
imul
icebp
ja
test
test
jns
in
push
sbb
or
mov
and
jp
mov
and
add
aas
popl
mov
adc
or
cmpsb
xchg
fcmove
adc
clc
or
in
pop
inc
movsl
mov
out
shll
roll
xchg
sub
hlt
adc
ficompl
pop
xchg
jnp
inc
cltd
loopne
and
mov
pop
cmp
inc
mov
icebp
xchg
push
cmp
pop
neg
pushl
push
inc
pushf
jns
add
outsb
in
loope
and
mov
scas
push
pop
imull
in
cs
les
sbb
mov
or
sub
xchg
loope
inc
insl
fbstp
mov
imul
stos
add
leave
dec
mov
lea
inc
sub
in
inc
stos
stc
add
add
xchg
xchg
cmpb
incl
aam
ja
fwait
aas
inc
dec
insl
jmp
into
push
movsb
iret
movsl
popa
and
sub
lcall
loop
xchg
popa
push
lock
jl
or
int
sub
jns
hlt
rcl
outsl
or
dec
movsl
mov
lret
mov
cmp
fcoml
add
int
bnd
xchg
cmp
or
push
pop
sbb
add
sub
roll
iret
cmp
mov
sub
ljmp
cli
test
mov
in
sar
dec
cmp
cmp
repz
outsl
mov
mov
push
push
pop
mov
das
shlb
adc
or
call
cmp
cmc
cwtl
pop
cmpsl
in
adc
add
stos
mov
inc
mov
hlt
out
xor
sarl
insb
pop
mov
nopl
jae
lahf
lds
fdivl
pop
dec
inc
insl
ficoms
fimuls
add
lock
loop
xor
mov
mov
cmp
pushl
mov
sub
pop
roll
lcall
and
push
in
push
jg
add
cmp
pop
xchg
mov
int3
xchg
inc
adc
add
dec
and
fisubrl
out
inc
lahf
mov
loope
jb
jbe
test
cltd
lahf
or
popf
ds
cmp
je
cmc
out
movsl
pop
dec
dec
scas
out
sub
out
cmc
cltd
adc
mov
and
fisttps
loopne
cmp
std
outsl
jnp
adc
mov
jno
pusha
dec
inc
nop
lods
shl
jne
or
fnstsw
xor
jbe
sbb
xor
leave
and
in
mov
add
pop
rorb
inc
push
fildl
rdtsc
dec
das
add
xor
cmpsb
push
jnp
test
pop
xor
fiaddl
jp
cmpsb
jmp
adc
rcrl
jl
mov
leave
in
mov
add
jno
stos
cmp
add
xchg
cmp
cltd
add
push
or
insb
pop
inc
pop
inc
js
xchg
rorb
mov
cmp
adc
stos
shll
scas
aas
in
lock
lret
fcomps
mov
mov
jno
pop
dec
bound
dec
popf
mov
pop
cli
mov
xchg
out
out
cmpsb
sarl
push
dec
mov
ret
je
mov
or
clc
mov
out
and
ret
or
xchg
ja
test
fs
jo
cmp
adc
xchg
std
pop
mov
add
push
cwtl
push
mov
jp
mov
xchg
mov
sahf
adc
sahf
push
pop
mov
scas
fildll
sub
iret
cmc
xchg
lock
or
jno
outsl
or
rcrb
outsl
aad
mov
test
mov
xchg
js
inc
or
ljmp
jp
fisubl
or
adc
dec
fidivrs
pushf
xchg
mov
mov
inc
pop
inc
lcall
push
cmp
push
xlat
lret
into
cmp
mov
xchg
and
js
cmp
add
iret
sub
fisubrl
lea
inc
xlat
sub
jg
pop
hlt
add
mov
pop
rcrl
sub
out
add
fmull
ja
rcrl
popa
flds
sahf
sbb
addl
xlat
cmpsb
loop
sub
add
lahf
mov
cmp
add
ret
bound
mov
stos
push
cltd
cmpsl
xor
int3
mov
mov
or
sarb
scas
cmp
fdivrl
in
dec
xor
pop
push
pop
std
dec
cmc
es
xchg
or
out
test
rol
gs
sub
push
cmp
push
inc
mov
dec
mov
pop
push
and
xchg
insl
lcall
lahf
jne
dec
or
fcomps
xchg
add
jae
jae
jecxz
cwtl
addr16
or
repnz
mov
push
and
cwtl
fstps
imul
shrl
pusha
aad
loopne
inc
jnp
testl
push
or
lods
in
sbb
push
cmp
add
mov
pop
sub
cwtl
sub
in
xor
adc
repnz
jne
xrelease
leave
mov
jbe
jl
mov
sbb
or
or
or
dec
loope
rolb
rcrb
sbb
sahf
cmp
and
push
adc
xchg
or
stos
cmpsb
xchg
add
or
pop
aam
ds
adc
sahf
lods
push
mov
mov
push
pop
lcall
jecxz
test
cs
jne
adc
sub
pop
dec
cmp
scas
inc
sbb
mov
inc
pop
cmp
mov
mov
ret
push
cld
mov
dec
enter
mov
addl
dec
es
les
int
lods
std
or
sbb
or
popf
push
shrl
mov
clc
push
loopne
push
or
cmpl
dec
inc
in
xchg
mov
rcrb
les
mov
xor
xchg
xchg
push
inc
cmc
mov
es
xchg
pop
loop
mov
mov
or
test
sbb
in
popa
js
pop
mov
mov
clc
orb
ret
dec
test
ja
rcrb
push
jns
jbe
loope
ret
adc
jmp
jecxz
ret
paddusb
loope
dec
ret
dec
pop
aam
inc
pusha
cld
and
imul
cmpsl
pusha
push
popl
lods
dec
je
and
mov
mov
notb
mov
or
les
adc
rclb
adc
dec
in
jbe
cli
repz
lock
insb
scas
xchg
in
inc
or
mov
or
xchg
aaa
out
hlt
mov
sbb
mov
test
mov
and
insl
shrl
dec
mov
xor
lret
bound
outsl
mov
insb
repnz
or
scas
in
outsl
stc
test
icebp
push
push
ret
sub
dec
divb
adc
enter
fidivs
nop
into
push
add
std
ljmpw
lcall
and
sbb
ja
sbb
and
mov
jl
adc
jno
subb
outsl
arpl
dec
inc
inc
inc
shlb
insl
iret
js
xchg
popf
xchg
dec
push
adc
cmp
xchg
and
daa
inc
jo
pop
pop
inc
mov
lods
dec
xchg
std
mov
nop
mov
movsl
js
mov
out
mov
cmp
iret
add
xchg
mov
or
stc
push
and
add
int
and
fs
and
jecxz
loope
lods
addr16
lods
sub
cmp
inc
cmp
adc
push
fwait
dec
cmp
das
in
imul
sub
xchg
jb
pop
cli
dec
int3
mov
lahf
dec
or
xchg
mov
nop
xchg
fdivl
mov
adc
lcall
xchg
cld
xchg
add
das
js
pop
xor
pop
std
rolb
push
ret
leave
adc
stos
dec
inc
mov
enter
push
or
lea
jb
sti
mov
xchg
mov
iret
pop
test
pop
test
rorl
imul
stos
fabs
cmp
test
adc
out
andb
inc
adc
rcrl
movsb
xchg
jne
outsl
das
hlt
or
mov
dec
cs
jns
push
jb
icebp
cmp
iret
mov
xchg
adc
or
add
and
push
jbe
xchg
rorl
dec
inc
xor
or
cmp
dec
add
jno
xchg
xchg
data16
fisubrs
sbb
lods
test
push
pop
call
ficompl
rcrl
dec
push
dec
fs
cmpsl
sub
cwtl
push
xor
lds
sbb
iret
and
sub
test
push
in
hlt
les
or
aaa
int3
or
mov
mov
cmpsl
cmp
jp
cmp
cmp
and
into
add
adc
lahf
push
cmp
and
push
add
fidivl
or
repnz
add
test
movsb
mov
ljmp
push
pop
notl
cld
les
jbe
inc
pop
dec
mov
xor
add
pop
aad
sahf
dec
pop
jne
sub
and
adc
ret
outsl
and
cmpxchg
sbbl
jecxz
jmp
jno
push
xor
shl
sarb
jle
shrl
push
sbb
loope
movsl
pushf
rorl
cmp
add
js
or
fsincos
mov
andl
xchg
scas
outsb
mov
lds
sahf
imul
jge
in
xor
adc
dec
shll
push
cmc
cld
pop
push
lcall
sub
mov
sbb
dec
std
jle
xor
outsl
repz
mov
fistps
mov
cmp
mov
lds
test
popl
lret
pushf
repz
inc
imul
lahf
gs
loope
movsl
pop
xchg
xchg
aad
cmpsl
and
subb
mov
fdivl
or
add
jnp
xchg
jnp
scas
dec
or
xor
sarb
mov
and
fcmovnb
sbb
mov
movsb
fwait
add
push
mov
mov
mov
fildll
pop
fcompl
jno
dec
mov
out
test
movsb
mov
push
sbb
dec
jg
jbe
test
push
outsl
mov
shrl
test
lock
sbb
daa
mov
flds
idivb
ret
lret
nop
mov
test
cmp
dec
aas
mov
xor
sub
xor
in
fldl
arpl
andb
pop
daa
or
call
rcll
adc
jb
jnp
aas
insb
in
lret
cld
cmc
icebp
shll
shr
out
mov
lods
cmp
std
jns
sub
nop
in
mov
adc
pop
xchg
or
movsl
leave
cmp
cmp
in
in
sub
lods
into
fmuls
inc
xlat
call
push
jge
pop
rorl
aad
mov
pop
lods
mov
cmp
add
scas
cmp
cwtl
xchg
xchg
lcall
sub
jge
sub
cltd
add
mov
ss
sub
push
or
jb
icebp
mov
rolb
lret
mov
xor
sub
xchg
in
stc
xor
and
inc
outsb
adc
cmp
adc
and
push
es
sarl
cmpsb
repz
pop
or
sub
test
shl
rol
jge
repnz
add
cmp
lock
mov
dec
mov
sahf
aaa
adc
mov
xchg
lods
lahf
adc
sub
mov
rcrb
sub
je
fnstenv
sbb
jl
aas
fs
mov
or
mov
push
cwtl
cwtl
rolb
and
in
lods
xlat
sub
mov
mov
out
jle
mov
fcoms
mov
test
sub
cmp
push
aam
mov
cmpsb
popa
mov
cwtl
test
je
data16
jo
pop
addr16
inc
pusha
jne
je
hlt
mov
pushf
mov
sti
cmpsb
push
sbb
or
or
xor
hlt
push
lds
add
push
pop
pop
imul
xor
and
lret
lahf
aaa
mov
daa
adc
dec
scas
insl
mov
adc
push
fildll
push
xchg
cmp
sbb
cld
scas
imul
jns
cld
jno
pop
or
les
push
lock
inc
sub
adc
cwtl
push
mov
mov
pushl
shll
and
ss
add
jle
push
fsubrl
mov
xor
gs
fstps
in
and
outsb
mov
xchg
stos
dec
ljmp
add
mov
cmp
shll
in
mov
sbb
lahf
mov
aam
xor
arpl
and
std
or
shll
fincstp
fbld
mov
and
jecxz
cmpsb
clc
lea
mov
and
add
pop
pop
mov
inc
mov
lret
cmpsl
add
mov
mov
popa
movsb
ss
inc
push
das
mov
pop
xor
dec
and
xchg
xchg
dec
repnz
cmp
push
cmp
fisttpll
fildl
cmc
mov
clc
in
pushfw
jecxz
pop
scas
cmp
hlt
sub
shl
adc
dec
loopne
std
push
lock
arpl
cmp
lret
jmp
data16
push
aaa
dec
push
sbb
and
int
gs
leave
dec
lds
das
cmp
pop
mov
mov
in
bound
jo
ret
cwtl
ret
xchg
dec
mov
cmpsl
stos
mov
sub
add
mov
cltd
sbb
out
inc
pavgb
fmuls
or
mov
xchg
scas
cmp
xor
xor
lret
inc
add
push
mov
mov
test
cltd
stos
mov
outsb
movsb
sarb
cltd
std
xor
out
sub
scas
xchg
faddl
out
popf
jle
in
jae
mov
outsl
vfnmadd213ps
movsl
add
add
out
adc
ja
adc
xor
int3
jbe
repnz
mov
aam
sbb
cld
popa
inc
aad
into
dec
push
mov
push
js
mov
inc
push
hlt
sbb
pop
das
sub
mov
test
shll
loopne
les
or
and
or
movsb
adc
ljmp
mov
jne
jno
cmp
movsl
xor
das
lock
push
lcall
pop
fwait
mov
aad
sarl
in
mov
and
mov
sub
dec
stos
aam
xor
fsubl
popf
xchg
lods
addr16
test
or
aaa
mov
rclb
add
movsb
lods
mov
add
ret
int
sub
sub
lea
loopne
xor
call
adc
in
inc
push
or
mov
add
popf
nop
jp
pop
xor
arpl
lods
dec
cmp
sub
inc
add
out
jne
cmpsb
jo
cmpsb
mov
cmpsl
popa
sub
lret
push
mov
mov
out
into
sub
jp
mov
push
data16
mov
in
je
mov
mov
and
jbe
or
lret
dec
mov
ret
int
inc
lcall
int
mov
int
loope
push
out
push
sub
mov
xchg
mov
xchg
stos
dec
push
repz
lahf
mov
imul
imul
lret
idivb
mov
cli
cmc
adc
push
cmp
xchg
adc
push
and
dec
and
cvtps2pd
mov
fwait
ja
cmp
pop
mov
jg
push
gs
das
cmc
cld
popf
testl
out
repz
and
or
popa
dec
addr16
pop
cmp
test
push
jne
jnp
mov
mov
popf
mov
xchg
es
das
xor
cmp
in
cmpsb
cwtl
pop
ret
out
sub
sbb
in
push
jg
sub
mov
mov
aad
test
negl
mov
fidivrl
cmpsb
repnz
inc
in
loop
and
push
clc
add
inc
jne
or
lahf
dec
cmc
ss
pop
cmpsb
mov
sbb
push
repnz
cmpb
jns
js
call
or
ljmp
cmp
aas
mov
and
xor
jge
adc
mov
data16
imul
sub
push
arpl
adc
jno
nop
xor
xchg
push
mov
iret
push
in
mov
add
imul
mov
cs
jne
out
or
cmpb
adc
xor
repnz
pop
inc
sub
test
cs
mov
xchg
ljmp
nop
sbb
or
or
pop
add
push
mov
xor
sbb
dec
sub
xchg
ret
dec
inc
stos
and
imul
mov
sbb
sbb
mov
jo
shrb
adc
pop
jp
movsl
jmp
outsb
ret
xchg
cmp
mov
push
pop
outsl
pop
ds
cmp
iret
stos
femms
pop
push
adc
cmp
aaa
cli
pop
dec
and
lahf
xchg
and
pop
aad
xor
ljmp
mov
jns
fisttpll
cli
int3
add
mov
and
and
mov
add
fwait
aam
adc
fwait
clc
sbb
test
add
aas
loopne
or
and
mov
inc
loopne
push
pop
mov
add
add
out
addr16
in
add
filds
decb
outsb
aam
sub
fdivrs
push
in
pop
daa
fcmovbe
out
lods
push
rcrl
cmp
pop
mov
fs
jne
sbb
push
mov
sbb
push
test
cs
jne
mov
lret
jns
ficompl
push
movsl
outsb
shl
adc
jecxz
ret
pop
out
idivl
loope
and
sbb
mov
rorl
cmp
ljmp
push
cmp
xchg
imul
shll
and
test
jecxz
xor
bsf
or
cld
ds
loop
addl
mov
inc
in
pop
rolb
in
jno
mov
bswap
outsl
sbb
icebp
or
fs
aam
pop
dec
cmp
divl
pop
jnp
jnp
fstpt
fsubrl
push
pop
push
das
nop
fwait
pop
cmp
int3
push
loop
push
divb
shr
movsl
add
lretw
sub
dec
inc
lds
jnp
imul
pop
pop
push
outsb
cmp
clc
std
subb
pop
push
out
mov
mov
loope
aas
pop
frndint
and
dec
iret
ror
pop
aam
jns
xchg
dec
mov
dec
rcrb
mov
stc
jns
sbbb
ds
divb
shl
dec
mov
add
sbb
lret
loopne
jne
cmp
pop
pop
adc
cmp
inc
inc
test
sub
outsb
pop
subl
jg
mov
xchg
ljmp
inc
aad
add
and
push
inc
lock
and
fldcw
pop
mov
pop
aad
shll
test
cmpsl
test
ljmp
ss
aad
add
ss
in
lock
mov
xchg
test
jge
push
push
or
dec
add
shrb
xchg
out
mov
fldcw
insl
dec
aad
mulb
jbe
push
xor
adc
rorl
mov
pop
or
push
xchg
lea
stc
xor
dec
adc
jmp
mov
rcrl
out
dec
jo
jo
mov
mov
stc
xchg
or
inc
pop
cmp
sub
lea
sub
test
movsl
divl
and
jbe
das
out
pop
dec
dec
imul
fistps
push
xor
inc
push
xlat
mov
mov
fwait
sbb
mov
push
jne
shll
sbb
push
imul
mov
xor
lcall
cmc
fstpt
add
add
or
dec
xor
in
push
in
or
mov
fwait
icebp
fcmovb
mov
lret
jmp
test
adc
add
push
push
daa
mov
dec
cmpsb
lahf
adc
push
push
frndint
jne
push
mov
in
xchg
aas
popf
movsl
test
jmp
arpl
mov
dec
cmpsl
fsubrl
or
leave
fsub
call
fildl
cmp
jecxz
lret
cmc
mov
jo
mov
pop
jns
movl
dec
sub
insl
xchg
loope
pushf
cmc
xchg
mov
dec
dec
das
dec
pop
mov
cwtl
mov
add
mov
sub
jl
andb
lahf
sub
xchg
sub
hlt
jg
cmp
and
jne
mov
inc
in
cmp
mov
and
std
out
jmp
sub
mov
xchg
sub
leave
rol
pop
pop
xchg
push
jge
idivl
aad
inc
mov
imul
xor
jl
mov
movl
jmp
mov
add
dec
dec
out
lock
aad
dec
add
cmp
push
rep
xor
inc
std
scas
leave
and
std
xor
jns
push
lea
adc
lods
imul
fisubrl
inc
and
aam
rcrb
jbe
int
lcall
fwait
xchg
cmp
jecxz
jnp
or
and
push
insl
sub
lock
jns
ljmp
mov
pop
pop
and
and
fimuls
jl
and
or
inc
mov
lds
fldt
loop
mov
sbb
loopne
enter
sbb
pop
dec
cmpsl
in
cmpsb
sbb
mov
sbb
popa
mov
fwait
addr16
sahf
xor
push
dec
les
xchg
adc
aas
iret
addr16
push
iret
test
mov
je
ret
cmpsl
test
xlat
sbb
push
xor
jmp
xorl
dec
push
ret
adc
cmpsl
push
inc
add
mov
repz
jmp
gs
jl
jb
inc
pop
xor
sti
cmc
nop
andb
xchg
mov
cli
xchg
sbb
jmp
test
andl
mov
lock
xor
scas
scas
outsl
sbb
adc
push
fstps
aad
lret
fdivrs
ja
push
cwtl
das
es
jge
lahf
les
nop
or
dec
in
sbb
dec
sbb
push
clc
movsl
sti
add
sbb
push
mov
test
repnz
push
or
add
out
sahf
mov
inc
push
aaa
mov
mov
loopne
fidivl
jg
dec
test
test
cmc
into
mov
mov
sub
stos
cli
cmp
mov
cmp
nop
pop
lea
sbb
ficompl
pop
lea
les
in
repz
or
dec
push
xchg
aad
xlat
cli
jns
mov
aaa
push
jge
pop
jnp
inc
pop
jecxz
sbb
ret
cltd
adc
arpl
ds
cmp
fisttpl
leave
mov
and
fs
jo
xchg
add
cmpsb
cld
insb
stos
mov
xchg
cmpsl
push
loop
sbb
pop
lods
sbb
imull
loope
fdivrs
popa
lret
jno
push
fcos
jns
cli
ret
xchg
fs
cmp
das
pop
pop
enter
addr16
jbe
mov
clc
mov
movsb
xchg
xor
mov
jl
insb
lahf
cmpsl
push
int3
mov
pop
xchg
sub
mov
xor
movsb
cmp
sbb
pop
pop
inc
cli
jmp
sbbb
inc
repz
sbb
shlb
movsl
inc
int
pandn
mov
test
adc
les
fwait
dec
cmp
or
or
movb
dec
push
sub
bound
sar
call
push
adc
shl
sbbl
cli
imul
adc
mov
jnp
inc
icebp
fnstsw
push
lcall
and
jg
dec
ss
push
cs
cwtl
mov
inc
int3
xchg
je
scas
mov
mov
xor
bound
jp
lret
stc
xor
loope
scas
inc
pop
add
jge
push
xchg
stc
lret
xorb
outsb
xor
clc
dec
bnd
lea
jne
dec
js
sbb
inc
jl
pop
xchg
cmp
shll
sub
mov
dec
jmp
sbb
clc
insl
sbb
lds
inc
jnp
inc
pop
dec
bound
jno
ja
sbb
jbe
out
imul
enter
fldpi
mov
sbb
in
stos
out
jb
dec
loope
adc
mov
cmpsl
fcompp
test
mov
std
outsb
and
das
fwait
aas
fbstp
dec
mov
cmp
push
mov
mov
jne
mov
xchg
inc
xor
stos
xor
pop
add
xchg
or
cmp
xchg
adc
ds
in
sbb
mov
mov
ficoml
inc
push
inc
cmpsl
xchg
out
push
repz
push
in
inc
out
cmpsb
into
push
pop
ja
in
clc
push
and
scas
hlt
subb
fs
cmp
test
inc
jns
popa
loopne
mov
pop
arpl
sub
ja
cmp
loope
xchg
ret
push
scas
mov
stc
pop
jbe
push
fcoml
mov
int3
mov
xlat
adcb
nop
sbb
mov
fiadds
stos
jmp
ss
ss
daa
xor
mov
stos
inc
xchg
xchg
imul
pop
dec
xor
iret
daa
sub
gs
repnz
push
sar
sti
pushf
lods
in
cwtl
xchg
cmp
cmp
mov
in
mov
ss
jle
lcall
push
dec
xor
pop
jo
mov
push
lock
cs
or
or
mov
xor
fs
stos
aad
push
in
inc
pop
xor
out
pop
into
int
ret
cmp
cltd
xchg
sub
cld
stc
and
outsl
inc
pop
pop
cli
or
mov
sbb
nop
jp
cmp
cmpsb
rolb
mov
sbb
sahf
mov
mov
sub
pop
cltd
or
cld
pushf
jge
xchg
add
jne
lock
outsl
cld
repnz
xor
addb
sahf
xor
or
mov
dec
inc
mov
dec
mov
andnps
jp
mov
mov
fistpll
or
push
lock
sbb
jne
popf
pop
daa
mov
mov
pop
jp
sub
inc
mov
adc
jns
xorl
inc
xor
mov
fidivrl
jl
and
outsb
mov
nop
and
xor
insl
daa
lret
push
mov
int3
sub
xor
jns
lds
mov
gs
add
and
test
sbb
je
sub
jmp
pop
jecxz
lock
xor
pop
fs
mov
lret
insb
lcall
adc
cmp
insl
mov
dec
aaa
mov
jns
mov
inc
je
add
ds
dec
mov
cmpsb
sbb
lods
push
std
jb
jae
cmp
pushf
loope
mov
les
add
xchg
ret
jne
loopne
aad
cmp
stc
fadds
and
daa
fmull
xor
sbb
lock
fmul
fiadds
adc
aaa
pop
adc
dec
leave
xor
data16
adc
xchg
jmp
adc
movlps
dec
inc
mov
lret
or
jbe
dec
xchg
stos
test
fcoml
ffree
jecxz
cmc
fstpt
cli
or
sub
dec
or
mov
insb
jo
sarl
xchg
imul
in
adc
paddb
pop
inc
push
rcrb
daa
into
xor
repnz
je
sahf
icebp
mov
inc
idivl
xchg
sbb
or
mov
push
cmp
imul
sbb
pusha
std
add
cmpsb
loopne
in
dec
cld
aas
arpl
in
and
or
imul
fldt
inc
das
div
stc
and
mov
ja
inc
push
aaa
or
iret
cwtl
shlb
lods
add
push
andl
neg
xchg
imul
rol
push
aaa
jbe
fisubl
xor
adc
mov
cli
adc
inc
js
and
adcl
andl
mov
dec
cmp
jae
dec
movsl
dec
sub
xchg
xchg
rolb
mov
xor
std
and
sbb
push
lret
pop
push
dec
mov
bound
int
adc
mov
push
fs
data16
hlt
add
ja
je
push
cmpsb
or
les
dec
push
repnz
stos
fdiv
test
inc
push
inc
xor
addr16
push
mov
sub
mov
dec
imull
and
cmc
ds
mov
loope
mov
xchg
test
jb
jo
in
jnp
jmp
cli
and
cld
lea
xor
sbb
xchg
and
sub
pop
jns
movsb
or
bound
jmp
mov
pop
pop
out
sti
ss
or
jle
xchg
cmpb
ja
or
hlt
sbb
cmpsl
in
mov
sbb
shr
xor
imul
xchg
sbb
cmp
ret
jl
xchg
dec
sbb
mov
add
aam
fmuls
insl
lret
out
cmp
mov
outsb
adc
test
xor
push
leave
cltd
outsl
fadds
pop
ret
xor
pop
fistpll
pushf
dec
stos
lahf
scas
ret
cmp
xchg
outsl
out
or
out
lret
fcoms
fwait
xor
push
sub
js
xor
or
dec
pop
js
add
out
dec
in
xor
stos
sahf
push
pop
push
out
push
pushaw
jecxz
cli
push
rclb
mov
scas
aad
adc
cld
test
jmp
pop
mov
aam
jge
push
xor
lcall
push
adc
jbe
imul
test
adc
mov
hlt
xor
mov
movsl
jg
mov
xorb
and
mov
jmp
xchg
in
in
push
das
clc
jge
xchg
jg
repnz
dec
insb
roll
mov
int
mov
inc
sbb
mov
jle
pop
rcr
mov
leave
adc
xor
adc
push
jnp
fistpll
mov
mov
or
movsl
adc
xor
imul
push
into
push
fdivl
mull
into
adc
mov
mov
fwait
push
clc
dec
jecxz
mov
xchg
xchg
sahf
xor
rcrb
jnp
lahf
inc
fistpll
pop
out
add
sbb
inc
repnz
push
jmp
add
sbb
mov
aaa
push
sbb
cmp
ret
jl
and
pop
jge
fwait
loop
cmp
scas
roll
pop
jo
xlat
and
push
xorb
out
inc
out
mov
fwait
or
cmp
fistpll
add
cmp
sbb
pushf
sbb
mov
incl
sub
bound
dec
iret
xlat
jne
push
mov
std
mov
adc
idiv
or
fwait
push
leave
inc
inc
mov
jbe
xor
int
lcall
repnz
out
jnp
repz
pusha
inc
push
xchg
into
xor
xor
mov
jl
std
sbb
js
insb
es
or
cwtl
push
outsb
ljmp
adcb
sbb
xchg
test
push
icebp
mov
adc
xlat
mov
lock
inc
pushf
cmp
ret
cmpl
jno
fwait
leave
mov
push
inc
rcr
mov
jns
popf
pop
adc
push
das
push
es
mov
adc
xor
push
ret
incl
sbb
ljmp
jmp
cld
mov
fistps
and
sahf
setge
add
or
adcb
and
or
in
lds
add
adc
data16
dec
mov
xor
js
sub
stos
lcall
dec
pop
nop
rcrl
lcall
dec
aam
mov
lock
cmpsb
dec
dec
mov
jmp
movsb
lahf
xor
movsl
jmp
cli
lret
sbb
jb
and
inc
iret
in
xchg
xchg
sbb
lret
js
imul
push
aaa
add
xchg
and
sbb
pop
or
aam
or
loope
rolb
lods
cmp
sub
lock
push
sub
jb
nop
lret
add
inc
xor
int3
push
sub
in
push
cmp
shll
test
scas
jb
mov
mov
mov
imul
arpl
outsb
loopne
mov
mov
jne
mov
xchg
xlat
inc
push
inc
pop
popf
fcmovb
mov
sbb
and
fiaddl
fcmovne
ret
in
rcll
pop
pop
or
gs
shrl
popf
lret
fisubs
xor
je
imul
fs
mov
outsl
pusha
xchg
jne
mov
mov
stos
es
pop
fnstsw
mov
mov
nop
sbb
ss
fwait
test
fcoml
mov
mov
ljmp
js
xchg
mov
iret
adc
js
add
int3
push
insb
jle
cld
aaa
lcall
mov
aas
mov
xchg
mov
outsl
xchg
iret
inc
into
in
push
lds
cwtl
aad
sbb
pop
xor
sub
push
jbe
mov
push
fstps
inc
pop
mov
das
xchg
loopne
sbb
in
stos
xlat
mov
int
js
xchg
xor
sub
cmp
mov
pusha
sub
ret
mov
scas
and
loope
mov
cs
mov
ret
push
and
aam
xorl
orl
divb
sbb
pop
and
in
in
push
addb
nop
test
hlt
lret
cmp
fwait
xchg
sub
adc
lock
pusha
mov
lock
fsubp
push
xchg
jle
dec
inc
es
clc
lcall
imul
test
out
into
and
fnstenv
movsb
adc
fisttps
scas
in
add
dec
sub
lret
cmc
mov
cmpsb
in
push
int
mov
mov
fdivs
lret
add
popa
mov
vpmadcsswd
rcll
and
fs
sub
sbb
pop
data16
dec
test
pop
fistps
jl
mov
mov
pop
sbb
lods
sbb
jb
stc
pop
pop
dec
xchg
js
fcmove
gs
cmp
popa
add
movsl
mov
int
out
xchg
xchg
xchg
push
inc
sub
push
jne
ret
jae
push
aas
ret
or
addr16
das
repnz
js
clc
insb
fnstenv
and
popa
repz
adc
pop
movl
dec
push
clc
jle
cmpb
adc
and
pop
pop
lods
dec
or
jnp
loop
lcall
pop
pop
push
cmp
ljmp
xchg
sub
and
sub
jb
sbb
out
lods
mov
test
mov
in
sub
jmp
dec
fstl
mulps
lea
setns
roll
cmpb
fiadds
bound
push
xor
rcll
insb
adc
lcall
jns
jge
adc
jg
sub
adc
popf
jp
jg
push
dec
ret
add
fists
push
loope
sbb
lret
daa
repz
fwait
cld
pop
xchg
mull
daa
int3
add
aaa
out
inc
sbb
sarl
xchg
or
es
inc
fstl
imull
ss
push
mov
fidivl
cmp
mov
xor
cs
ss
sub
jae
pop
call
dec
add
ljmp
sub
les
repz
sub
push
adc
out
fisttpll
xor
jmp
xor
jns
xchg
or
sbb
out
pop
call
addl
pop
dec
into
sbb
pop
test
or
out
sub
lods
movsb
inc
mov
mov
imul
xlat
or
mov
arpl
or
and
std
or
inc
mov
cmp
inc
lret
je
inc
cmp
jnp
cmpsl
loope
jns
jle
mov
or
data16
or
call
pop
sbb
mov
pop
insl
cmp
and
imul
push
mov
fisttpll
in
lds
add
mov
push
inc
adc
cmpsl
xchg
cwtl
cmc
mov
sub
sub
movsl
or
or
aam
aaa
dec
pop
shl
jo
jle
clc
daa
loop
filds
jl
punpckhbw
sbb
sub
and
pop
std
addb
mov
addb
subb
sbb
imul
dec
dec
cmp
outsl
pushf
xchg
aam
xchg
jl
leave
jp
jl
loope
push
aam
cli
pushf
bound
int3
jbe
adc
lea
xchg
xchg
bound
dec
stos
ret
lret
lea
es
and
sub
les
pop
jecxz
cmp
out
out
push
jecxz
lahf
and
and
movsl
or
xadd
mov
pop
mov
sbb
push
rcll
inc
push
and
push
lds
inc
inc
in
mov
js
sahf
psadbw
cmp
adc
pop
mov
cmp
and
hlt
andl
cmpsl
dec
mov
push
cmp
jmp
cli
das
pop
xchg
movsb
inc
call
inc
loopne
mov
mov
jp
pop
xor
frstor
out
jbe
gs
iret
in
mov
frstor
shll
ret
insb
inc
and
jg
cmp
aad
mov
jecxz
fwait
pop
xchg
out
ret
push
lahf
adc
test
fidivl
push
test
js
insl
xchg
cwtl
jg
dec
loopne
insb
mov
xor
or
jb
push
push
adc
lock
sbb
cmp
or
aaa
mov
or
adc
cmp
inc
mov
cmc
push
loop
test
adc
pusha
cltd
test
or
or
aaa
stos
shll
xchg
jmp
repnz
daa
push
aam
stc
cmp
je
mov
xchg
aam
fs
mov
lock
xlat
decb
jge
fimuls
outsb
xchg
mov
lods
mov
add
icebp
or
push
scas
int3
mov
pop
sarb
es
loopne
inc
lret
pop
add
js
loope
and
cld
cmpsl
lret
prefetchwt1
or
xchg
and
and
jne
mov
in
xorb
add
aaa
aad
add
sbbb
sbb
div
movsl
iret
mov
mov
xor
jns
xchg
jg
enter
fidivl
ror
mov
divb
cmp
outsb
cmp
int3
movsl
out
out
jecxz
pop
mov
ss
in
lret
and
scas
sub
jp
int
insb
es
mov
xor
cmp
in
test
xor
stc
popf
fstps
jb
xchg
cmpsl
shrb
jp
sbb
mov
cmc
mov
int3
jno
and
sub
fnstsw
std
add
inc
bound
jne
dec
push
imul
rclb
and
stos
out
sub
mov
push
pslld
adc
cli
lods
and
in
mov
cs
jo
mov
fldenv
dec
mov
mov
lds
jae
adc
fwait
dec
rorl
arpl
mov
mov
enter
jbe
mov
int3
xorb
cmp
lea
addl
jmp
or
mov
ss
shll
cmp
pop
pop
rcl
mov
stc
cwtl
mov
cmp
out
lret
pop
adc
pop
xchg
mov
lcall
add
xchg
repnz
mov
xchg
mov
inc
push
xor
dec
or
lret
inc
test
add
cmp
mov
or
jbe
or
psadbw
add
scas
stos
push
jns
lock
xor
in
scas
lods
xor
out
mov
lods
aaa
fdivr
fs
rsm
in
pop
push
gs
das
in
enter
std
jecxz
mov
inc
in
cli
mov
rorb
sub
mov
inc
push
cld
mov
mov
dec
or
dec
push
lret
dec
sbb
imul
ljmp
lahf
aam
in
xor
sbbb
nop
mov
inc
sub
dec
cmp
lds
rcrl
push
add
or
sub
dec
cmpb
fcom
pusha
popa
push
das
rcll
xchg
cmp
test
arpl
or
cltd
adc
in
sbb
push
dec
mov
jl
push
push
sbb
std
in
cmp
scas
fdivs
aas
mov
cwtl
les
push
xchg
inc
leave
inc
loope
inc
dec
adc
pop
ret
jecxz
cld
fcoml
test
mov
pop
movsl
jle
jno
stc
or
and
jmp
inc
sbb
mov
aaa
jp
push
mov
cwtl
repz
fdivs
mov
push
cmp
gs
iret
sbb
loope
mov
sti
cmc
or
jo
cbtw
sti
cpuid
inc
adc
and
add
pop
mov
mov
push
dec
push
gs
lock
std
fcomip
adc
jnp
push
add
int3
mov
pusha
dec
rorb
pop
test
add
mov
lods
sub
sub
cwtl
xchg
scas
pop
ljmp
lods
push
xlat
dec
ss
mov
ret
fbstp
push
testb
and
pop
adc
mov
add
pop
inc
jg
cmp
cmp
mov
push
pop
and
adc
std
push
fs
fcmovbe
mov
sbb
test
out
jo
test
inc
adc
sbb
pop
pop
test
adc
xor
dec
and
movsl
mov
filds
testb
inc
icebp
sbb
and
das
ficoml
mov
out
js
int3
pop
mulb
ret
xchg
xor
and
push
sbb
clc
add
jmp
and
xchg
push
xchg
fsubl
lret
and
mov
insb
ret
jae
popa
pop
scas
rol
divl
and
cld
mov
xorl
fxch
xor
repnz
inc
les
shll
scas
add
mov
pop
or
daa
addr16
aas
in
cli
sub
loopne
xor
or
xchg
out
and
inc
iret
nop
xor
ror
inc
andnps
push
xchg
xorl
jnp
xor
sbb
pusha
movsl
into
cmp
andb
jge
aas
icebp
jne
mov
mov
sahf
insb
xor
jp
es
push
jns
jmp
in
lcall
insl
leave
xor
std
jl,pt
ds
pop
jnp
subb
fiadds
dec
fcmovne
xor
sbbl
addb
jae
in
mov
shrb
add
xchg
cmp
cmp
cwtl
xchg
dec
subl
push
cmpsl
movsl
lahf
outsl
ret
jmp
push
mov
sub
mov
loopne
pushf
stos
test
sub
mov
inc
rolb
adc
mov
sbb
or
cs
gs
sahf
and
popf
data16
rcl
imul
jecxz
cmp
out
add
int3
js
arpl
cmpsb
sbb
in
imul
lahf
xchg
mov
or
cli
jne
pop
std
sub
jns
xchg
or
cwtl
mov
pop
xor
ss
int3
repz
cltd
inc
jmp
and
mov
cwtl
pop
jmp
or
or
pushf
lret
add
or
stc
orl
xor
push
fdivl
sbb
add
xchg
pushf
dec
add
sbb
add
mov
ret
dec
jbe
push
jp
sub
mov
mov
cwtl
lret
stos
pop
gs
fs
outsb
divb
lock
insb
sub
cmp
mov
arpl
or
outsb
shlb
fsubs
mov
jns
jne
repz
imul
xchg
imul
jbe
jae
in
test
call
mov
adc
orb
pop
roll
sbb
lea
jb
movsl
mov
rorl
ja
cwtl
sub
call
push
lock
mov
fildl
cmp
cmpl
xchg
sub
sub
lcall
mov
sarb
sub
inc
sbb
xchg
inc
lret
xlat
inc
add
xchg
push
sti
xchg
and
push
daa
mov
inc
pop
lcallw
repz
movsl
ss
in
in
fiaddl
xor
adc
jnp
call
push
loopne
sbb
sbb
mov
push
xor
push
and
jne
aam
mov
pop
lods
inc
mov
push
sti
sub
into
cmp
mov
loopne
fmuls
rclb
es
test
int
xor
lret
push
loop
je
mov
jl
sbb
leave
lcall
mov
dec
rol
popl
xorb
imul
xchg
mov
xchg
sbb
mov
int
test
dec
push
pop
icebp
jae
frndint
int3
sub
shl
xor
inc
movb
pop
push
mov
sub
adc
mov
and
in
cli
push
or
les
pushfw
pusha
push
and
inc
push
js
ficomps
fsts
repz
and
into
inc
mov
jno
xor
xchg
pop
mov
xchg
hlt
mov
adc
sbb
jmp
into
loope
and
outsb
and
fstp
xlat
in
das
cld
push
in
push
cmp
nop
pop
lods
ret
sahf
movsb
jge
add
inc
in
sarl
fucom
adc
push
add
ljmp
adc
aad
rol
jns
push
lret
scas
push
mov
out
mov
xor
test
add
icebp
das
loopne
mov
cwtl
leave
idiv
xchg
stos
jecxz,pt
std
test
aad
pusha
in
rcrl
loope
daa
push
push
adc
mov
aad
aad
ljmp
fsts
subl
ds
imul
roll
out
pop
cmp
sub
dec
in
imul
sti
loopne
push
lods
xchg
jle
into
movsl
sbb
aas
adc
fsts
push
les
jle
push
imul
js
jl
fmuls
outsl
adc
dec
mov
out
mov
test
sbb
popa
xor
inc
pop
jno
int3
jge
sub
dec
lcall
out
ljmp
lds
js
dec
push
xor
jb
pop
sbbb
std
cld
sbb
sub
or
and
cmp
fildl
fwait
cmpsb
add
in
and
je
mov
dec
mov
push
aas
ficompl
xor
or
mov
and
outsb
fistl
mov
popa
lcall
adcl
mov
popf
int
test
or
add
sub
stc
xchg
add
std
test
lcall
add
xchg
popa
in
xchg
cmp
outsb
pop
movsl
out
xor
mov
jmp
xchg
scas
mov
in
jo
inc
pop
pop
inc
loop
bound
es
dec
adc
cld
out
push
pushf
pop
xor
and
mov
in
cmpsb
mov
sub
pop
stc
ljmp
xchg
jne
cli
adc
cli
mov
out
jmp
inc
adc
ss
int3
ja
jl
dec
xor
push
stos
daa
push
sbb
xchg
add
and
testl
add
xchg
and
lds
lods
xchg
dec
in
mov
scas
mov
pop
xor
or
fiaddl
outsl
lret
lret
jmp
mov
adc
les
ja
push
jle
out
sub
cld
fnsave
push
push
mov
out
ret
dec
dec
inc
push
mov
mov
jp
sub
iret
out
sub
and
inc
dec
lcall
xor
mov
mov
hlt
jle
inc
lods
sub
xor
mov
insl
cltd
gs
pop
pop
test
mov
cld
sbb
arpl
lea
pushf
fistps
adc
xchg
gs
xchg
cmp
sbb
in
push
lds
xor
lea
sub
ror
sbb
dec
shrb
bound
hlt
and
sub
dec
adc
push
jmp
and
jmp
sbb
data16
sbb
inc
pop
out
out
mov
into
ljmp
cmp
cmp
loope
repz
lods
cmpsb
inc
aad
adc
out
lods
mov
nop
push
inc
xchg
inc
or
repnz
fldl
or
mov
mov
cmpsl
shlb
add
scas
xchg
in
loop
add
popa
pushf
pop
in
xlat
imul
aam
add
inc
xor
icebp
mov
cmova
mov
mov
jg
ljmp
and
sbb
outsb
push
mov
pop
xor
hlt
daa
jge
aaa
insl
sbb
dec
sar
mov
aad
pusha
and
adc
lods
jae
adc
pop
adc
lods
lret
sub
push
test
mov
into
adc
mov
fsubrl
or
cltd
mov
dec
lahf
in
fs
rcl
adc
push
enter
iret
and
fnstenv
js
push
das
and
sbb
addr16
xlat
bound
xorb
filds
sub
sbb
push
or
pop
pop
ret
and
test
mov
jns
mov
adc
inc
push
aam
les
push
orl
mov
cwtl
push
leave
shl
loope
les
popa
lock
into
pushf
cmp
jg
pop
dec
add
lret
repz
loopne
cltd
mov
and
inc
scas
pop
ret
loop
dec
js
jb
pop
shrb
repnz
lahf
jno
inc
pushf
cli
sbb
into
push
mov
cli
and
adc
jo
and
pop
jmp
int3
dec
mov
pop
ja
fists
inc
popl
mov
dec
xor
test
and
popa
das
cld
test
aad
xchg
jb
jg
shlb
or
jp
pmullw
lcall
sub
jo
popf
cmpsb
sub
iret
pop
test
cltd
push
xor
inc
add
lea
jl
in
mov
dec
int
fsubl
sbb
mov
ljmp
jmp
arpl
or
in
jecxz
sahf
into
cmp
int
out
in
lea
push
mov
call
outsl
adc
neg
negb
or
repz
scas
cmp
stc
scas
in
xchg
popf
pushl
jge
idivb
clc
roll
push
jle
lahf
ja
das
push
movsb
or
mov
or
int
stos
adc
loope
enter
xorl
add
dec
dec
mov
lds
in
popa
jno
jbe
into
loop
jns
out
lea
pushf
dec
loop
gs
and
scas
loopne
into
push
sub
sub
lret
pop
orl
cs
imul
jp
ret
inc
sbb
cmp
das
mov
pop
into
cwtl
enter
lock
or
nop
jle
stos
mov
dec
shlb
dec
sub
xchg
mov
decb
cli
xchg
cmc
xchg
cmp
cld
test
jne
adc
ds
lock
mov
pushl
push
and
dec
data16
pop
nop
inc
addr16
js
cmc
xchg
push
movsl
xchg
pop
bound
lods
sarl
mov
jge
cmp
jae
sbb
test
add
cmp
xor
in
mov
inc
add
push
scas
idivl
pushf
and
push
pop
or
je
dec
dec
jg
in
mov
mov
mov
cmp
pop
out
xor
pop
in
inc
aas
clc
insl
lock
inc
mov
test
je
xchg
and
pop
into
jne
dec
sub
or
outsl
adcb
xchg
xchg
cmp
frstor
pop
jno
loope
mov
xor
adc
fnstsw
push
das
in
jb
sub
add
shrb
lods
fistpll
lea
push
mov
test
mov
inc
popa
inc
test
js
cs
sub
or
sub
aaa
pop
xor
cld
loopne
inc
outsb
mov
stos
cmc
sbb
mov
sbb
xchg
hlt
cltd
jle
icebp
mov
fcom
bound
sub
rolb
scas
dec
cmp
inc
shlb
in
stos
call
ds
mov
lods
cwtl
insb
push
loop
push
push
and
cmp
mov
dec
mov
jb
mov
nop
jge
mov
pop
jle
push
sbb
sub
push
mov
mov
and
adc
mov
jmp
popa
mov
push
pop
cmp
pop
js
je
xorb
cmp
sbb
popf
cmp
add
sub
mov
cmp
mov
mov
testb
mov
mov
xor
repz
xchg
pushf
xchg
ss
cmpsb
outsl
out
cmp
int
add
or
and
add
or
repnz
sbb
lods
mov
sbb
mov
sbb
fld
dec
ror
pop
dec
add
lahf
push
xchg
call
ja
popa
stos
std
aas
cmp
cmp
iret
lods
mov
push
inc
cmp
jmp
push
jl
jmp
mov
push
out
push
imul
jle
mov
test
xor
sbb
data16
or
rclb
call
inc
ja
mov
jmp
sbb
stos
mov
xchg
fwait
mov
pop
cs
inc
xchg
inc
lods
jl
insb
cwtl
xchg
xor
ret
or
sysenter
in
push
and
sub
sbb
out
inc
xor
push
leave
and
sub
mov
mov
jg
push
dec
mov
test
adc
pushf
xor
fldl
jg
adc
arpl
sub
dec
imul
jmp
mov
sbb
movsl
xor
test
xchg
mov
mov
add
fildll
iret
mov
xchg
sahf
aam
movsl
lret
pop
shll
jl
enter
addl
sbb
pusha
gs
in
or
movsl
rol
inc
jbe
iret
mov
xchg
bound
leave
sbb
in
push
jmp
jmp
in
sub
stos
mov
and
lcall
inc
or
test
cmpb
pop
imul
or
leave
les
push
mov
clc
fistl
xor
dec
daa
pop
add
mov
dec
fldl
lds
roll
jge
fildl
lds
lds
cld
inc
or
mov
fsub
sbb
out
and
mov
inc
jp
lret
std
lods
mov
push
jns
iret
js
mov
xor
adc
test
jnp
mov
loop
pop
pop
cmp
subl
sbb
lea
cs
mov
push
dec
mov
fsubs
xchg
enter
xor
sub
inc
mov
rorb
push
lea
cmp
aas
xor
imul
inc
in
mov
pop
lret
push
out
jp
inc
lea
cs
xchg
mov
add
lods
push
js
xor
and
jns
lea
and
les
add
mov
jmp
jecxz
loop
xor
mov
adc
pop
xor
repz
mov
loopne
leave
adc
mov
dec
stc
repz
sub
dec
or
push
pop
fstpt
clc
push
pop
inc
std
aaa
inc
xor
repz
cmp
dec
sbb
mov
mov
push
and
jno
xchg
lret
inc
push
jg
push
in
and
add
packssdw
int
pushf
stos
mov
jl
inc
fcmovnb
mov
push
jo
adc
mull
mov
push
jns
repz
cld
and
fists
sub
loop
or
push
repnz
or
mov
call
push
hlt
adc
mov
pop
test
cld
cli
popf
mov
fists
sub
xchg
pop
bound
push
cmp
mov
mov
sub
push
stc
movsl
xor
fcoms
lock
inc
mov
aad
ds
inc
xchg
xchg
repnz
mov
vmovups
sub
xor
jecxz
pop
mov
or
test
movsl
xchg
sub
scas
scas
mov
lods
int3
loopne
shll
xlat
ror
test
xchg
rolb
addl
pop
ret
push
loop
and
inc
jmp
incl
cmp
jmp
jnp
fstpl
scas
aam
sbb
loopne
outsb
cmpsb
xchg
es
push
jnp
ret
icebp
xchg
call
mov
test
movsb
popa
je
pop
mov
das
add
add
shlb
push
inc
cmpsb
insb
pop
mov
rol
pop
aad
loope
shlb
xchg
add
dec
pop
outsl
test
cli
in
cmpsb
pop
aas
out
adc
inc
push
mov
pop
mov
pop
idiv
shl
inc
sti
xlat
mov
loop
lret
imull
lods
test
dec
or
test
cmp
in
and
add
lods
lods
inc
and
bound
test
sbb
or
cmp
aad
mov
shrl
fisttpl
fxch
adc
inc
cmp
and
mov
stos
mov
in
clc
aam
cmp
xor
aas
sub
xlat
sbb
shl
fldenv
mov
popa
or
lret
push
lahf
pop
dec
stos
pop
out
cmp
cmp
push
lods
stos
dec
lret
fsubs
or
mov
pop
addr16
aas
sbb
push
pop
lahf
jae
hlt
mov
into
dec
cmpsb
jmp
call
fldl
test
stos
push
in
sub
mov
and
fsubr
pop
push
jo
pop
cvtdq2ps
stos
lea
divb
and
xchg
pushl
xchg
enter
push
jb
arpl
mov
push
dec
push
cwtl
sbb
stos
hlt
mov
dec
shlb
xor
test
cmp
jns
ret
stos
cmp
cmp
dec
out
dec
jnp
xor
lea
or
test
js
jecxz
sub
cmp
or
add
cmp
mov
in
pop
or
shll
movsb
mov
sbb
mov
mov
mov
notl
push
jae
mov
add
sbbb
movsl
jo
push
imul
repz
inc
mov
mov
dec
xor
mov
loopne
push
mov
jae
in
inc
and
sbb
sbb
pop
sub
in
dec
xor
lret
mov
adc
jg
push
mov
test
xchg
cmp
andl
push
mov
pop
flds
in
leave
out
xor
or
jmp
and
leave
in
or
aaa
insb
sahf
jecxz
in
jle
xor
jb
pop
dec
pop
data16
mov
out
xchg
fstl
add
push
andb
pop
xchg
add
push
push
xlat
dec
lahf
push
push
sarb
outsl
and
dec
sub
pop
xor
cmp
mov
in
push
pop
es
jns
out
xchg
gs
sub
sbb
hlt
or
dec
pop
cmp
sbb
je
adc
inc
dec
or
scas
jge
pop
inc
movsl
lahf
rep
push
decl
iret
movsb
pop
jns
icebp
pop
pop
cmp
outsl
pop
and
inc
xchg
hlt
xlat
dec
xor
mov
sub
cs
xchg
jge
addr16
in
fmuls
mov
add
mov
loop
fwait
cmp
decb
pop
adc
pop
mov
mov
xchg
lahf
andb
adc
cwtl
mov
or
xchg
rclb
das
leave
in
sub
fdivp
xor
nop
mov
repnz
add
popf
xchg
scas
out
push
inc
cmpsb
mov
push
xor
adc
jno
sahf
je
rorl
sbb
jle
shll
jg
loope
cwtl
dec
xchg
pop
cmpb
movsb
push
xlat
test
test
imul
pop
clc
in
push
scas
sbb
mov
jmp
jns
pop
xchg
in
push
mov
insb
cmpsl
stc
fistl
insl
into
and
sar
jle
push
fcomi
inc
mov
sub
nop
repz
and
dec
leave
jb
cmp
mov
fnstsw
cmc
cmp
push
inc
push
cli
scas
cmp
mov
popl
adc
icebp
flds
and
ljmp
xchg
std
mov
mov
fwait
cmpl
cmp
mov
daa
repnz
cmp
jl
mov
gs
push
js
or
pop
cmp
push
rcrl
jmp
rorl
fimull
arpl
test
inc
and
int3
movsl
mov
jne
cwtl
push
jecxz
or
mov
aas
sub
push
lea
shll
lods
lcall
iret
jno
mov
lret
fnclex
cmpsb
xor
mov
repz
les
inc
hlt
fcoml
lcall
dec
pop
or
cmp
sbb
in
stos
adc
pop
pop
sbbb
sub
aaa
mov
pop
fxch
ljmp
xor
xchg
cmp
out
inc
push
notb
xor
ja
adc
mov
dec
into
push
iret
mov
cmp
mov
pop
cld
jo
fsubr
cmp
adc
inc
and
lret
ljmp
and
aam
pop
call
cmpsl
dec
int3
mov
adc
fcmovne
sbb
scas
es
pop
mov
and
sub
lret
mov
and
sub
out
sbb
jae
out
xchg
inc
push
dec
jl
lock
lret
lock
roll
outsb
stos
mov
adc
xchg
xor
je
pop
cmpsl
fstpl
pop
jmp
nop
lcall
xor
arpl
das
lcall
mov
cmp
jmp
mov
push
pop
outsb
ja
cmp
popf
cmp
test
punpckhdq
or
mov
mov
test
pushl
cs
xlat
inc
push
inc
push
dec
dec
call
fs
dec
or
out
dec
daa
and
push
iret
fsubrp
xchg
in
test
lret
pop
adcl
test
lods
xchg
xor
aam
dec
mov
test
sti
inc
rorb
cld
orl
mov
rclb
sbb
daa
pop
xor
jg
and
std
cmp
adc
push
stos
cltd
and
sbb
cmp
push
daa
xor
mov
jmp
dec
mov
or
mov
jecxz
xchg
mov
mov
jmp
pop
pop
lea
mov
add
xchg
mov
int
pop
loope
mov
mov
stos
mov
push
or
ds
push
fxch
mov
dec
xor
hlt
inc
loop
pop
lahf
fadds
mov
cltd
cmp
push
lcall
aad
roll
shll
pushf
cli
bswap
add
cmp
jbe
pop
jnp
test
testl
mov
call
loope
daa
rcl
aaa
lea
je
and
inc
mov
sbb
push
repnz
or
mov
lret
lds
cmc
mov
sbb
and
jae
mov
jmp
or
mov
inc
repnz
loopne
sub
ror
pop
ja
jge
iret
dec
lahf
adc
test
fwait
sbb
fsubrs
ss
ret
ja
sub
clc
add
stos
xchg
xchg
addr16
pop
aas
and
push
int3
adc
push
mov
xchg
dec
or
cmp
mov
cwtl
cltd
add
mov
push
jne
sbb
sahf
xor
inc
jmp
cli
xor
sbb
pop
pop
pop
leave
add
sub
sub
iret
sti
push
dec
in
dec
rcr
ss
or
pop
leave
mov
mov
mov
xor
mov
mov
out
es
xchg
pop
fwait
sub
aam
mov
fcmove
xor
in
repnz
mov
dec
xchg
shlb
mov
dec
out
stos
or
fiadds
mov
push
cld
out
mov
sub
mov
shlb
call
test
pop
popa
or
pop
in
lods
lret
sbb
mov
jecxz
jno
shrl
and
push
pop
imul
fcoml
sbb
je
adc
cmp
push
fstl
mov
jbe
xchg
push
arpl
movsb
scas
dec
add
pushf
lds
pop
xor
int
into
mov
jp
mov
aas
testb
mov
mov
dec
cmp
cmc
add
pop
adcl
int
xchg
into
fs
sub
fimull
or
ja
mov
aas
jo
lea
fldt
mov
dec
pop
sbb
roll
or
scas
stc
lock
add
cmc
sub
dec
movsb
sysexit
xchg
test
ljmp
add
sbb
adc
inc
cwtl
dec
repnz
xchg
outsb
fsubl
cmc
ljmp
inc
das
jo
int
fs
cmp
mov
leave
xchg
mov
mov
cmp
inc
push
sub
jl
clc
adc
cli
adc
push
jo
shr
jg
int
lods
ds
shll
sarl
mov
outsl
and
rcrb
and
imul
stos
es
in
push
xchg
inc
jp
mov
pop
xchg
xor
arpl
clc
inc
push
in
mov
sbb
push
cmp
jle
mov
mov
scas
out
scas
sbb
popa
sub
cmc
test
xchg
mov
xchg
mov
dec
lock
cmp
lea
stos
and
mov
repnz
mov
jns
cmp
jo
cld
pop
push
arpl
test
inc
mov
push
jg
sahf
or
outsl
xchg
jecxz
xor
cmpsl
ficomps
pop
sub
sti
loop
lret
decl
lds
and
dec
lcall
adc
jge
mov
push
pop
lahf
flds
push
and
sub
jo
hlt
pushf
cmp
scas
pop
add
cld
scas
xor
and
mov
push
push
sbb
in
mov
lea
movsl
rcrb
mov
and
out
add
dec
mov
decl
mov
jae
jbe
je
inc
mov
or
repnz
sbb
adc
pusha
xchg
ret
dec
scas
push
sbb
call
fdivrs
clc
fidivrs
xchg
ret
xchg
shlb
mov
pop
lods
ja
xor
out
mul
scas
scas
lea
xchg
pushl
inc
sbb
mov
ficompl
addr16
mov
test
mov
leave
test
jnp
pop
or
dec
stc
or
sarl
rorb
adc
cs
mov
rolb
or
sub
outsb
das
andb
das
bound
jge
sub
cmp
addl
test
loope
sbb
fwait
popl
loopne
pop
or
inc
inc
repz
testb
xchg
add
jp
ror
add
cwtl
push
in
fildll
mov
leave
dec
out
pop
arpl
das
dec
cmp
jmp
inc
cmpl
jo
pop
xchg
sbb
aad
xchg
bound
jae
comiss
push
sbb
sti
jne
lret
leave
xchg
aad
xchg
popf
cli
test
cmp
adc
scas
pop
jo
mov
nop
cmpl
test
push
stos
adc
xchg
enter
sub
or
inc
or
cmp
adc
roll
jp
lock
xchg
iret
and
mov
stos
bound
adc
pusha
das
dec
push
mov
xchg
sbb
push
cli
pusha
mov
jns
xchg
push
pop
lret
jge
aad
push
xchg
jl
xchg
out
idivb
testb
jge
cmp
push
cmc
rcll
cmp
imul
push
add
ljmp
lock
repz
aad
not
mov
in
fidivs
dec
cld
gs
repz
pop
loop
pop
mov
rol
cmp
sub
outsl
mov
lods
fnstenv
and
pop
add
sub
and
pop
mov
add
repz
cli
mov
push
push
or
jne
jnp
jnp
xchg
mov
xchg
add
mov
ret
cmp
pop
mov
inc
outsb
jno
dec
outsb
sbb
loopne
int
push
sub
insb
mov
mov
ret
mov
and
mov
loopne
call
sti
loop
lret
mov
pop
jle
shrl
aam
sbb
enter
in
pop
gs
xor
movsl
add
or
fnstenv
lock
mov
xor
icebp
adc
xchg
or
inc
sbb
cld
sbb
cmpsb
or
mov
xchg
sbb
out
xchg
and
sbb
fmull
mov
pop
mov
sbb
shlb
pop
lds
mov
mov
rorl
mov
fildl
sub
std
es
orb
pop
or
imul
mov
adc
in
sbb
dec
mov
sahf
pop
xchg
push
jmp
bswap
jo
movsb
test
adc
cmp
xor
dec
mov
jo
push
and
jecxz
fcompl
xor
int3
adc
jl
rorl
into
add
fmull
daa
add
mov
cmp
addr16
cli
cld
cwtl
or
cmpsb
insl
fwait
bound
push
push
fmull
mov
sahf
aaa
xchg
push
sti
push
sarl
push
pop
cltd
test
adc
mov
adc
add
adc
lea
cmpsl
and
cmpsb
mov
fsincos
aaa
lds
std
adc
cmp
movsb
cmp
enter
inc
repnz
lcall
add
mov
aad
fstpl
push
xor
and
inc
and
jnp
jne,pt
out
cmp
inc
push
mov
ret
xor
stc
jbe
leave
dec
push
mov
or
call
ret
fs
and
xchg
adc
or
pop
xlat
push
mov
inc
aas
pop
fdivs
test
insl
xor
outsb
jmp
push
insl
dec
mov
dec
adc
fstl
pop
inc
in
and
cmp
sub
push
inc
rclb
push
fldt
lea
push
and
lea
sbb
test
sbb
mov
jb
sub
clc
mov
dec
sub
cmp
orb
jnp
out
and
inc
mov
gs
mov
inc
sahf
cmp
inc
dec
or
push
ret
into
aam
inc
and
xchg
sub
rcll
jge
out
scas
sbb
outsb
jl
push
jge
jne
pop
gs
orb
xor
sub
mov
lahf
cwtl
pushf
lods
fistps
dec
sbb
and
mov
in
mov
cmp
xchg
ds
pushfw
xchg
jb
adc
aad
out
sub
add
faddl
shlb
rorl
cltd
sarl
xchg
js
mov
cld
pavgw
push
jl
push
pop
mov
out
cmp
in
or
cmp
mov
lods
leave
loop
inc
in
add
ljmp
push
add
or
mov
test
iret
xor
push
mov
xor
sbb
dec
loope
fsubrl
lods
jo
pop
dec
dec
gs
and
dec
sarl
cmpsb
in
or
jmp
out
and
mov
and
cmp
std
add
cltd
xor
lods
push
mov
mov
pushf
jle
sbb
outsb
shl
test
aas
popa
imul
nop
push
or
lret
negl
mov
cs
cmp
fucomip
div
shll
xor
test
fwait
clc
xor
pushf
sbbb
xchg
sbb
and
or
add
cmp
insl
xor
push
les
inc
xor
dec
mov
stc
stos
std
addb
inc
dec
testb
lock
dec
push
test
adc
in
push
das
lret
loope
out
push
popf
aam
mov
cld
jmp
imul
mov
pop
outsb
cld
inc
lds
xchg
hlt
push
or
inc
je
shrl
push
xchg
sub
ja
loopne
jge
lahf
sarl
mov
insl
mov
pop
aaa
mov
cwtl
orl
cld
push
arpl
popa
mov
rcr
pop
sub
jmp
and
mov
and
sub
dec
lock
jle
sub
test
insb
jmp
sub
gs
xchg
aaa
sarb
sahf
movsl
repz
cmp
popa
subb
xor
pop
xchg
dec
shl
xor
sbb
mov
xchg
fimuls
es
mov
xor
and
lods
dec
mov
mov
or
pop
ljmp
data16
fucomi
xchg
in
push
jnp
rorl
adc
or
test
dec
ret
loopne
test
pop
push
xchg
add
inc
dec
addr16
jbe
int3
xchg
cld
xchg
in
rorb
xor
inc
cmp
adcb
xchg
adc
ror
push
cli
out
push
mov
inc
jge
sub
mov
mov
ret
adc
inc
addl
push
insl
push
fsubrs
rcrl
out
mov
fcoms
int3
pushf
sbb
daa
jo
in
mov
or
mov
mov
xor
rcl
adc
daa
mov
dec
mov
jle
pop
mov
jge
push
jge
ss
lahf
movsb
fbld
or
xor
icebp
popf
mov
push
inc
mov
or
inc
pop
jg
xor
fldenv
adc
push
nop
pop
jl
shrl
sub
cmp
mov
cld
mov
adc
out
sbb
mov
fnstsw
test
inc
cmpsl
insb
fwait
loope
lea
fs
inc
int
cltd
adc
xchg
test
and
sub
fmuls
popa
test
int3
fldcw
es
jo
outsl
movsb
subb
out
sbb
lock
sti
jbe
sbbb
and
adcl
cld
mov
mov
jg
jnp
push
xor
insl
adc
jb
popa
mov
nop
aam
jg
pushf
clc
mov
subb
call
xchg
sbb
sbbl
ret
movsl
ja
loop
mov
test
aad
sbb
rcrb
pop
dec
xorb
and
lods
cmp
jae
sbb
jle
daa
test
movsl
push
fsubl
or
fs
in
xor
push
repz
xor
and
stc
or
mov
adc
icebp
roll
je
insb
outsb
jne
mov
pop
inc
and
sbb
jle
mov
inc
arpl
xor
in
inc
or
lock
dec
mov
cmpsl
sub
mov
sub
xchg
rclb
ljmp
sub
test
loop
dec
stos
jo
pop
jecxz
push
push
gs
and
loop
fisttps
cmp
xor
cs
lock
sub
aaa
push
cmp
xchg
cmpsl
and
mov
inc
add
sub
jb
notl
xorb
push
xor
xor
add
pop
mov
mull
mov
pushf
sub
scas
jle
and
pop
mov
insb
inc
xchg
sahf
jle
int
mov
movsb
xchg
fwait
daa
ret
les
jnp
dec
imul
mov
add
pop
idivb
dec
dec
in
push
xchg
shlb
inc
hlt
mov
xor
push
adc
sti
inc
lcall
inc
loop
adc
lret
dec
push
and
fstps
mov
es
movsl
dec
xchg
lock
jnp
pop
push
stc
mov
lods
dec
or
xchg
scas
push
sbb
in
mov
or
cmp
stc
sub
aaa
xor
xorb
cmp
jno
push
xchg
pushf
sub
orl
pushf
jno
mov
push
ss
xor
adc
dec
mov
xchg
fnstcw
rcll
sub
fsubs
dec
or
dec
test
xchg
pop
jl
xchg
pop
push
jns
aas
das
xchg
seto
icebp
cmpsl
xor
insl
imul
jmp
lahf
mov
scas
inc
push
pop
negl
cli
add
push
std
ss
orb
insl
adc
sbb
xor
fiaddl
cmpb
inc
js
cli
mov
rdtsc
and
inc
and
out
xchg
mov
push
and
and
fbstp
pop
xor
mov
in
sub
setg
or
daa
pop
popf
or
mov
and
jmp
mov
cmp
cwtl
xchg
sub
fidivs
mov
sbb
inc
jl
outsl
sbb
mov
psrad
fwait
sbb
mov
push
test
mov
adcb
pop
les
pop
jmp
and
mov
pop
xchg
pop
or
sub
fisubrs
and
fadds
test
push
clc
shlb
movsb
add
cmove
xchg
dec
mov
roll
repz
imul
cld
xchg
push
jge
push
fidivl
pushf
int
je
sub
xchg
sbbl
icebp
out
cli
iret
std
daa
add
clc
add
lods
mov
lods
pop
xchg
dec
push
sub
loope
adc
jmp
ljmp
mov
jne
xor
subl
jg
test
sbb
dec
cltd
adc
cltd
mov
pusha
jmp
pop
sbb
fwait
rorb
mov
add
sub
pop
cmpsb
xor
sar
mov
in
les
insb
xchg
lret
xchg
ficomps
xchg
jle
push
insl
popa
cmpsl
mov
adc
data16
insb
cmp
sbb
daa
xorl
subb
sub
or
jle
dec
mov
ds
lcall
test
loope
mov
pop
iret
ljmp
push
xchg
pop
pop
sub
fbld
popa
popa
int3
cmp
shl
pop
sahf
lahf
push
mov
pop
test
and
aaa
les
shr
int3
and
call
sub
adc
add
in
movsl
mov
mov
mov
lock
fxam
inc
ss
out
mov
and
cmp
pop
pop
sub
shrb
or
inc
fs
push
cmp
sbb
pop
push
inc
mov
movsl
in
jno
and
rorb
dec
lret
push
shll
jle
dec
enter
ss
stc
inc
ret
std
inc
xor
push
xor
mov
cmp
pop
mov
or
add
jp
mov
repnz
add
es
add
fists
mov
mov
push
and
push
and
lods
jle
pop
js
scas
sbb
dec
sbb
mov
sahf
pop
daa
mov
jecxz
mov
jbe
pop
loope
sub
and
rorb
push
aad
mov
dec
mov
aam
sub
mov
and
lds
inc
loope
mov
mov
scas
hlt
adc
xor
xor
jl
mulb
andl
hlt
fdivrs
xchg
test
test
mov
jnp
cli
xor
leave
mov
imul
jnp
movsb
adc
jp
outsb
lock
pop
inc
dec
loopne
adc
add
or
or
test
xor
and
jmp
mov
fbstp
cmc
ret
addl
stos
cli
sbbb
not
and
xchg
pushf
pusha
outsb
out
cmp
lahf
fstps
int3
scas
fmull
push
cld
lods
xlat
popa
int3
in
add
jge
lret
adc
repnz
mov
sub
test
pop
idiv
mov
jae
mov
test
sbb
xchg
js
xor
fnsave
xor
mov
es
stos
xchg
ja
push
lods
les
ret
out
enter
lock
imul
insb
ret
and
outsb
enter
test
call
pop
ss
ljmp
inc
out
test
mov
mov
inc
leave
aam
cld
pushf
mov
outsl
roll
shlb
mov
pusha
inc
lods
push
rorb
mov
xor
pusha
dec
rcll
ljmp
cwtl
jg
add
xchg
mov
pop
std
xlat
inc
push
adcb
cli
rcl
mov
jo
or
int3
mov
out
or
inc
sbb
imul
push
mov
inc
movsb
mov
push
int
fwait
aas
pop
xchg
movsl
dec
pop
jnp
mov
pop
xchg
inc
cltd
adc
pop
jo
sub
imul
call
shlb
lds
or
xor
cli
sti
and
xor
mov
jle
adc
clc
ja
es
jmp
pusha
mov
inc
gs
pop
cmc
ljmp
test
jg
loopne
dec
adc
adc
ljmp
dec
xor
roll
repz
mov
push
mov
pusha
fists
aas
ret
loopne
out
fidivl
cmp
es
sahf
into
fstpt
jae
pop
loope
cmp
mov
fistl
out
mov
mov
push
lcall
fwait
or
icebp
out
jle
jns
and
xchg
xchg
daa
sbb
popa
and
pop
push
sbb
aam
inc
pcmpgtb
mov
lods
jae
lods
pusha
xor
mov
aas
lods
or
xchg
mov
fmuls
out
jmp
mov
ljmp
mov
stos
scas
out
inc
dec
add
sub
sub
add
addr16
mov
dec
mov
int3
mov
test
xchg
cmc
mov
add
in
int
push
mov
inc
cmp
fsubrl
dec
lret
xchg
sti
inc
jnp
or
xor
inc
adc
cmc
pop
push
pop
aas
pop
repz
xor
or
inc
sbb
add
xchg
aad
es
rcr
push
loope
lahf
aam
adc
jae
mov
lods
xchg
jge,pn
ret
fmuls
rcl
js
adc
mov
ret
mov
pop
fs
hlt
fwait
pop
or
icebp
xchg
fisubrl
jl
pop
testb
cwtl
test
scas
fwait
mov
insl
ljmp
inc
js
dec
and
insl
and
sub
cld
or
daa
lods
icebp
dec
pop
hlt
xorb
inc
inc
push
push
lahf
push
cmp
pushf
cld
sbb
add
dec
fwait
sbb
hlt
mov
pop
dec
es
out
js
aaa
or
mov
xor
clc
movsl
sbb
popf
sub
sub
xor
aad
imul
lret
sub
mov
icebp
divl
mov
xor
push
mov
aam
or
ljmp
xor
jnp
lock
aam
mov
cmpsb
jmp
mov
xor
loop
sub
ljmp
jmp
mov
cs
dec
or
pop
dec
loope
ret
out
jle
neg
xlat
cwtl
test
xor
fwait
repz
psadbw
xlat
insl
enter
xchg
outsl
sbb
push
rcl
or
jae
mov
cmp
movsb
inc
lcall
dec
push
test
inc
inc
mov
xchg
mov
add
push
mov
xchg
xor
loopne
and
test
and
fistps
imul
in
or
or
jge
push
hlt
adc
jns
pusha
loope
dec
je
dec
pop
and
sub
imul
lret
jge
pop
sub
or
cmpsl
iret
std
sbb
sbb
sbb
cmc
cs
in
pop
jbe
add
ja
call
sbb
jno
pop
clc
fcmovne
and
imul
jae
inc
vmovntps
repz
mov
mov
jnp
inc
xchg
push
hlt
pushf
xchg
xor
lds
insb
sti
aad
push
and
je
arpl
fsubr
out
stc
lods
or
rol
paddq
mov
pusha
mov
sub
ficoml
enter
mov
fwait
add
cwtl
lock
fnstenv
mov
and
cmpsb
lcall
inc
lds
sbb
push
cs
lret
xor
jg
adc
testb
dec
mov
xchg
daa
mov
sub
cmp
adc
gs
rep
adc
sbb
ficoml
mov
mov
test
movsl
adc
in
mov
cs
pop
add
into
or
scas
inc
sub
dec
or
inc
lret
aad
fwait
xchg
xchg
pop
adc
int
mov
outsl
xor
sub
push
mov
pop
inc
jg
or
pop
mov
add
sub
fstpl
inc
sub
pop
leave
add
push
lcall
dec
inc
ret
loope
testb
nop
or
vphaddbd
lret
pop
sub
ja
and
sub
lret
adc
jmp
arpl
das
fdivrs
fwait
hlt
jmp
outsl
mov
inc
icebp
ja
popa
or
gs
cmp
jle
mov
lar
insl
repnz
mov
adc
sbb
and
ret
fneni(8087
push
cmpsl
and
outsb
es
push
dec
imul
jp
mov
push
pop
xchg
lock
ja
and
push
pop
jb
jbe
xor
mov
or
dec
xchg
cli
rorb
dec
outsb
cltd
sti
in
cmp
mov
sahf
cmp
mov
leave
xchg
sbbl
aam
mov
pushf
neg
jle
mov
cmpsl
cmp
cli
cli
arpl
ret
xchg
cmp
popa
cmp
leave
push
cld
js
mov
daa
cmc
dec
mov
xchg
sbb
stos
add
xorl
test
cmpl
int
cmp
xchg
ret
pushl
ja
ficoml
mulb
outsl
adc
push
fnsave
cmovns
push
shrb
bound
dec
jp
mov
in
push
or
adcb
testb
je
lods
cmp
je
xchg
hlt
add
sahf
push
mov
ljmp
in
es
lret
mov
mov
dec
rcrb
fs
jnp
inc
pusha
outsl
addr16
push
ret
inc
gs
mov
push
stc
fisttpl
xchg
or
add
lea
hlt
dec
lret
sbb
lods
xchg
fwait
dec
lods
mov
imul
enter
xor
xchg
rclb
outsb
push
lahf
push
jnp
xor
dec
ficoms
sub
lret
sbb
inc
insl
xor
pushf
lods
lret
int3
test
mov
stc
mov
sub
das
cmp
lcall
cmp
and
and
inc
mov
xchg
dec
push
out
in
or
movsb
bound
add
iret
sar
inc
cli
mov
es
dec
lahf
inc
sahf
pushl
call
inc
insb
testb
mov
xor
in
outsb
popf
rorl
imul
jns
rcll
or
sbb
shll
xchg
rol
push
jae
adc
xor
lcall
cmpsb
jp
mov
popf
int3
ja
inc
push
push
rcrb
push
push
jno
outsb
sbb
push
mov
arpl
ljmp
insl
fsts
das
sub
cmp
popa
rorl
mul
xchg
jo
out
or
mov
aas
push
std
xor
js
or
ret
leave
sbb
push
mov
xchg
mov
cmp
adc
int3
xchg
daa
popf
cld
mov
ret
pop
jl
jnp
jle
aad
jo
sti
stos
ret
icebp
mov
mov
arpl
mov
or
pop
mov
jne
in
mov
mov
push
loopne,pn
jbe
sub
pop
or
fistpl
outsb
mov
push
add
push
jno
inc
outsl
int3
push
lret
mov
jnp
push
out
cmp
xchg
mov
pop
xchg
aam
mov
jmp
out
push
lahf
push
out
cli
mov
sub
adc
mov
sub
shrl
mov
jmp
cmp
push
in
movsb
dec
jns
sbb
filds
mov
push
mov
call
add
mov
nop
pop
loopne
test
cmp
pop
and
loop
sub
push
sbb
addr16
repz
cmp
cmp
sub
pusha
out
adcl
xchg
cmp
shll
out
rorb
out
test
and
xchg
subl
stos
mov
pop
loopne
mov
sub
daa
imul
lods
andb
push
lcall
dec
hlt
or
sbb
or
sbb
enter
cmp
push
push
mov
lahf
jp
cwtl
clc
mov
pop
stos
push
push
incl
rcl
inc
pusha
mov
mov
and
adc
cmp
adc
mov
xchg
pop
data16
fdivp
cmp
lods
jmp
lahf
mov
data16
mov
in
xor
jl
dec
in
push
faddp
daa
dec
adc
popl
inc
jp
lods
rcll
push
dec
out
in
pop
sbb
sub
enter
outsb
lods
dec
pop
aaa
jge
adc
daa
sbb
test
lahf
shlb
ret
nop
adc
sub
call
xor
cmp
movsb
ja
sbb
mov
stos
fsubs
je
aas
sbb
sahf
dec
insb
or
push
pushf
lds
push
stc
add
jg
cmpsl
aam
shrb
xchg
ds
jb
mov
push
leave
in
mov
sub
in
pop
jns
lcall
adc
sbb
add
in
mov
pop
push
sahf
pop
jecxz
mov
cmpsl
xchg
jns
push
push
cmc
add
xchg
stc
jle
icebp
sbb
fsubrs
xchg
imul
jecxz
mov
adc
out
out
loopne
or
int
cwtl
sub
fwait
scas
shlb
add
inc
push
or
outsb
push
mov
sub
arpl
inc
mov
pop
jmp
cmpb
ret
jo
loopne
mov
fimuls
inc
shl
fstpl
pop
jns
pcmpgtb
aaa
clc
add
repz
ds
icebp
jge
or
and
mov
lods
lea
add
nop
sub
loopne
xchg
call
ret
mov
jno
test
cli
test
push
in
jnp
daa
rcrb
pop
daa
cmp
adcb
out
iret
out
rorl
sahf
out
sbb
add
cmp
pusha
je
push
into
pop
adc
mov
je
adc
jmp
fucomp
pop
xchg
or
adcl
out
lret
inc
cli
inc
out
cltd
pop
mov
lcall
mov
and
pop
mov
cmp
movsb
insl
and
inc
and
xchg
xor
cli
sete
sub
sbb
mov
lret
lods
lea
cs
mov
rorb
jge
cwtl
sbb
jae
into
imul
and
push
mov
hlt
fwait
cmp
mov
mov
push
je
pop
sbb
insl
rcrb
ret
pusha
in
out
jp
lea
pop
xchg
mov
xchg
rcll
cmpsl
sub
lcall
jg
repz
and
fistpll
fwait
stos
js
cmpsb
call
mov
mov
cmp
sbb
ret
pop
sub
scas
or
repz
sbb
and
inc
inc
insl
in
jmp
test
fwait
lcall
adc
das
inc
cmp
lods
ret
pusha
sti
test
xchg
rcrl
divl
mov
dec
fidivrl
pop
push
xor
mov
loop
pop
mov
mov
fidivl
in
rorl
add
fstpt
imul
out
dec
mov
adc
adc
ret
cld
push
les
in
das
sbb
lahf
pop
pop
mov
call
scas
adc
mov
popf
sub
ret
cs
xchg
inc
adc
lock
daa
popw
loope,pn
mov
mov
add
adc
sbb
shll
xorb
aam
xor
cli
orl
xor
jmp
aaa
push
fcmove
xchg
mov
or
mov
push
test
leave
xchg
stos
imulb
jnp
pop
mov
aam
mov
sbb
hlt
push
add
cmpl
loope
idiv
cmp
xchg
xor
xchg
mov
jmp
inc
fmuls
mov
test
lods
andl
mov
push
inc
lds
push
sub
inc
mov
scas
dec
jno
push
imul
scas
sarl
movsb
notb
xor
xchg
pop
fnstenv
or
mov
ret
mov
gs
cli
mov
enter
xor
incb
les
fdivs
lret
xor
cltd
cld
int3
test
and
loop
movsl
or
lcall
and
paddq
test
mov
rcrl
sub
into
notb
or
lahf
push
je
xchg
and
call
jecxz
push
ret
mov
mov
dec
mov
fadds
cmp
push
data16
cmp
mov
int3
or
jge
xchg
int3
adc
mov
cmpb
or
inc
fdivrs
pop
and
es
mov
inc
inc
lock
cs
mov
lods
cmp
lahf
and
cmpsl
repnz
sahf
adc
int
inc
rolb
fwait
pop
xor
out
cmp
sub
test
jno
dec
out
push
dec
fdivr
lret
or
fdivs
lcall
andb
pop
insl
push
lret
test
push
jle
shlb
mov
insl
fld
dec
push
int3
data16
lods
xor
dec
and
xchg
or
jmp
out
sbb
jne
xor
pop
adc
sbb
sub
mov
and
and
loop
ret
adc
es
and
jmp
dec
mov
lcall
aas
aas
js
call
test
test
adc
add
clc
mov
mov
mov
pop
mov
or
xlat
mov
push
push
popa
mov
sub
add
xchg
leave
sub
ret
mov
and
mov
data16
mov
mov
repnz
rorb
mov
rorl
aaa
mov
lahf
sbb
dec
dec
inc
push
pop
mov
mov
pop
and
jl
mov
and
sub
push
inc
leave
rorb
jg
addr16
mov
roll
mov
adc
outsl
pop
fcoms
dec
jle
mov
aad
sbb
jbe
pop
lea
cli
pop
into
inc
or
movsb
dec
cld
test
pop
repnz
cltd
push
push
shr
rolb
xchg
loop
or
ss
xchg
in
hlt
xor
rclb
scas
mov
das
shrl
push
fbld
roll
stc
es
inc
mov
in
cld
pop
clc
je
pop
xlat
mov
inc
add
or
pop
jp
push
dec
test
jg
bound
sub
inc
push
xor
adc
xor
jecxz
push
mov
xor
mov
sarl
push
cmp
xchg
mov
inc
movsl
xchg
inc
daa
mov
popf
inc
sbb
push
push
das
faddp
int
mov
outsb
fs
pop
test
popf
cs
mov
xchg
push
mov
imul
push
repnz
xchg
adc
movsb
test
or
scas
pop
je
xchg
mov
idivl
add
sub
add
pop
mov
mov
mov
cmpsb
cmpsl
fists
scas
in
push
pop
xor
enter
fcomps
popf
sbb
lds
jnp
dec
sbb
in
ret
add
clc
fadds
mov
lret
loop
jo
push
lret
add
cmpsb
lds
adc
xlat
outsb
clc
mov
fstp
scas
data16
or
inc
lock
xchg
push
inc
testb
pop
mov
adc
fs
add
pop
ret
call
mov
xchg
test
sub
inc
cmpsb
mov
or
imul
cmp
faddl
repz
sahf
aaa
pop
test
mov
mov
cs
adc
add
adc
xchg
mov
dec
negl
notl
int3
jecxz
xchg
cmp
jbe
inc
mov
mov
xchg
lahf
dec
ficoms
les
xor
test
pop
mov
lret
mov
jne
repz
ss
fs
mov
les
mov
cmp
xchg
insl
jbe
orl
xlat
jno
xchg
cmp
out
dec
cli
pushf
jnp
mov
add
mov
push
pop
adc
nop
divl
dec
mov
stos
ret
bound
dec
inc
sahf
int
mov
inc
mov
jb
ljmp
mov
pop
jns
jl
cs
insl
jns
sub
aad
jne
orl
jne
jbe
xchg
dec
add
or
lret
imul
cwtl
or
or
or
addr16
xchg
cmp
adc
lods
push
gs
movsl
loope
dec
inc
mov
test
or
notl
jmp
mov
jns
mov
push
xor
mov
add
sub
jnp
bound
js
inc
sub
cmc
jmp
xchg
mov
or
shll
mov
dec
mov
shll
dec
adc
or
dec
lret
adc
data16
cli
cmpsl
push
cmp
pop
mov
push
xlat
jns
bnd
lahf
push
jge
jo
shl
cmp
mov
test
out
mov
out
in
fldenv
jns
cli
rol
out
pop
arpl
mov
daa
hlt
ja
test
mov
jge
inc
mov
push
pop
loop
movsb
arpl
jp
in
pop
xor
cmpsl
jb
xchg
xor
cs
mov
out
fldcw
in
or
lret
mov
jmp
mov
or
stos
lret
xchg
mov
and
cmp
stos
cmc
mov
xchg
jg
push
mov
xorl
pop
pop
movntps
shll
movb
pop
push
pop
adc
lds
jne
jmp
sbb
int
mov
mov
loop
es
rolb
sbb
cmpsl
lods
pop
movsl
xchg
mov
movsl
js
insl
adc
cmpsb
add
icebp
push
xchg
inc
and
adc
mov
push
ret
inc
and
test
imul
jg
repnz
adc
loope
push
push
fisubl
lahf
sbb
js
pop
ja
arpl
stos
es
ds
pop
cmp
ret
cmp
jnp
pop
enter
inc
inc
adc
je
or
shll
pop
jle
dec
xchg
pop
push
dec
sub
push
std
orl
rolb
pop
pop
fnstenv
sub
xlat
pcmpeqw
xor
xchg
sbb
xor
shlb
sti
sbb
or
push
cmpsl
scas
fs
mov
add
addr16
data16
icebp
dec
out
clc
cwtl
adc
pop
pop
fldenv
sbb
in
lcall
imul
imul
test
lret
mov
mov
mov
es
jmp
add
and
leave
mov
jmp
pop
adcl
or
cmp
jbe
push
int
push
mov
cli
push
add
stos
xchg
xor
jo
dec
js
push
ss
iret
jecxz
inc
mov
xchg
pop
mov
mov
inc
inc
in
jbe
xor
mov
loope
test
cs
xchg
inc
fsub
test
adc
adc
andb
dec
xor
out
cld
dec
mov
lcall
cld
jl
inc
mov
imul
push
lcall
shrb
cmpsb
sub
fnstsw
mov
pop
scas
bound
dec
sbb
push
ret
je
lods
divl
ljmp
sbb
ja
es
fsubrl
sbb
inc
xchg
popa
mov
mov
mov
loope
fldenv
xchg
out
out
mov
jp
pop
gs
sbb
dec
jb
pop
into
push
push
popf
lods
dec
jg
ret
fwait
outsb
je
mov
xchg
sahf
add
dec
cli
jb
pop
scas
dec
and
leave
cmc
push
lods
aad
popf
sbb
fincstp
mov
jae
add
repnz
mov
add
cmp
in
fsubrl
inc
mov
pusha
pop
sub
cmp
cs
mov
sbb
mov
sarb
xor
sub
repnz
or
subb
ss
out
mov
xchg
xchg
jmp
popa
scas
insb
test
xor
sbb
jl
xchg
cld
pop
pop
lods
aaa
int
sub
push
inc
add
jecxz
in
adc
hlt
cmp
repz
fs
cmp
sbbl
data16
xchg
or
jae
sub
std
hlt
rcrb
insl
out
insb
fdivrs
push
outsb
lret
add
in
add
test
ss
mov
dec
adc
mov
cmpsl
pusha
arpl
scas
scas
mov
bound
pop
and
and
aaa
or
pop
fs
hlt
mov
test
orl
mov
ljmp
jns
adc
jb
dec
iret
icebp
lret
adc
stos
arpl
stc
cwtl
loopne
dec
add
sub
cmpsb
fsubr
jae
imul
xchg
pop
mov
sub
xor
scas
stc
mov
xchg
adc
and
push
mov
push
adc
pop
cli
mov
nop
rorl
in
mov
xchg
jb
aas
jne
mov
imul
lds
lods
cmp
jne
cmp
icebp
std
jg
popf
loopne
jb
inc
mov
jmp
sub
fimuls
or
dec
leave
pop
shrb
rcll
shrb
es
xchg
outsl
dec
xchg
xor
insb
xchg
add
jl
popa
push
sahf
shll
and
std
adc
cltd
sahf
push
std
cmp
sbb
or
xchg
dec
fdivrl
out
ret
push
add
pand
out
xchg
ljmp
cwtl
inc
push
mov
mov
bt
hlt
fsubs
push
cltd
mov
dec
adc
mov
or
test
push
push
mov
cmp
lods
les
out
xchg
inc
rcll
ljmp
or
cmp
lods
dec
iret
mov
test
inc
cmpsb
test
jne
jl
mov
mov
or
push
in
push
add
and
mov
or
ss
push
mov
or
sub
mov
in
xchg
push
xor
in
mov
mov
adc
cmp
sub
and
ljmp
ss
test
xchg
push
fisttps
mov
out
das
mov
aas
out
ret
xchg
add
fstpl
sbb
repz
cmp
adc
xchg
xlat
fsubl
dec
inc
jge
je
cmp
mov
sub
stc
xchg
loope
or
leave
or
inc
sub
hlt
sbb
aas
add
jns
sahf
jmp
hlt
jle
pop
out
xchg
outsl
inc
cmp
in
jns
dec
push
xchg
pop
gs
add
idivb
pop
pop
repnz
es
jbe
mov
es
pop
dec
inc
ficompl
pop
mov
shrl
movb
ds
xor
int
arpl
xor
sbb
mov
aad
or
sub
and
pop
sar
jb
test
or
dec
inc
in
add
inc
pop
cmp
mov
add
pop
jmp
mov
mov
mov
jnp
xlat
push
sbb
cmp
cmp
stc
mov
adc
or
or
cmp
das
jmp
arpl
testl
or
push
ret
out
decb
push
aad
das
mov
cmp
add
xor
mov
xor
fs
aad
push
push
enter
ret
adcl
scas
dec
push
mov
push
inc
sbb
lret
adc
outsl
mov
add
xchg
ret
mov
outsl
sub
jmp
fdivr
popf
sbb
lods
adc
and
xor
pop
std
add
pop
mov
jmp
cmpsb
jb
add
dec
adc
push
cli
shll
add
push
or
cli
rol
jb
sbb
sub
sub
adc
mov
jo
sbbl
mov
lods
dec
sub
shrl
movsb
add
or
mov
leave
push
push
mov
add
xor
cmpsb
iret
cmp
adc
mov
inc
jge
jp
imul
int
add
insb
jmp
mov
mov
or
mov
rcl
sbb
pop
mov
xor
lods
add
push
ljmp
out
jge
adc
nop
fwait
rorl
xchg
push
and
pop
out
lret
and
fs
sub
mov
test
xor
xchg
ds
shr
lret
fsubs
mov
cmpb
cmp
pop
dec
aad
sbb
test
dec
sub
push
adc
xchg
call
outsl
test
pop
and
sbb
je
loop
int
push
inc
xor
add
push
jecxz
jbe
iret
test
mov
bswap
push
outsb
cmp
add
inc
jge
iret
loope
sbb
pop
cwtl
cmpsb
aas
inc
cwtl
inc
mov
push
jmp
rorl
jno
shll
subl
xorl
mov
movsb
ret
adc
ret
in
cmpsl
jb
stc
cmp
dec
ljmp
dec
push
sbbl
in
jl
scas
and
dec
sahf
test
out
addb
sub
xchg
cli
sbb
shll
xor
bound
mov
pop
sahf
je
jno
fs
dec
test
add
xor
clc
sub
out
imul
pop
lds
cld
inc
inc
jbe
adc
outsb
inc
mov
mov
nop
pop
loope
ja
cltd
push
test
cmc
sbb
sbb
dec
xchg
xchg
push
jg
and
pop
out
mov
lds
in
fstpl
repz
mov
cmp
pop
in
xchg
ret
fdivs
in
loopne
pop
dec
sub
xchg
mov
mov
cltd
and
out
int3
repz
push
test
scas
jecxz
pushf
scas
pop
xor
filds
in
popf
mov
arpl
and
lds
mov
addl
dec
movsl
rcrl
and
adc
mov
icebp
scas
sti
cmp
jae
pop
mov
mov
cmc
push
and
cmpsb
add
push
std
sbb
aad
and
pushf
sub
jnp
cltd
xor
dec
push
pop
lods
lds
aas
push
fadd
sbb
bound
jl
notl
push
imul
cwtl
push
and
xchg
testb
push
nop
jecxz
out
adc
push
test
aam
stc
icebp
jne
push
add
out
scas
sti
movsb
outsl
insl
mov
inc
mull
cltd
push
dec
dec
std
test
cld
loopne
mov
sti
into
testl
dec
cmp
mov
gs
and
inc
mov
cmp
cmp
lods
hlt
adc
mov
test
jp
push
divb
mov
pusha
push
push
dec
ljmp
test
cmp
aad
fwait
out
dec
and
jecxz
mov
pop
xor
je
insl
cmc
sbb
mov
sarb
repz
xor
out
sbb
dec
push
cmc
adc
adc
in
out
sub
jbe
dec
jae
inc
add
popf
pop
mov
out
pop
hlt
push
xchg
out
fsubrl
dec
sahf
lods
adc
ret
and
andl
jecxz
cmp
pop
inc
lcall
shrl
push
ds
arpl
xor
push
or
andl
dec
mov
adc
push
cmp
out
inc
loopne
lcall
sbb
mov
imul
pusha
bound
xchg
pop
push
jae
cmp
xchg
dec
pop
mov
xor
xchg
clc
arpl
sbb
ljmp
inc
inc
test
mov
mov
sbb
sti
std
aad
adc
aas
movups
fs
int3
sub
sarl
mov
lds
jecxz
sub
xchg
outsl
jno
subb
imul
push
and
push
add
stos
fs
add
xchg
rcrb
in
insb
leave
test
sbbl
jmp
dec
dec
xlat
fiaddl
test
push
jl
mov
mov
jae
pusha
lds
adc
lret
xor
and
adc
jle
bt
jo
outsb
fidivs
push
mov
enter
xchg
aam
cmp
xchg
in
inc
pop
adc
insl
aaa
pop
xor
mov
testl
inc
lods
lret
icebp
stos
das
jnp
sub
dec
test
fs
outsb
xchg
push
xchg
xchg
or
push
mov
lcall
arpl
mov
cmp
mov
and
pop
icebp
xor
js
xlat
mov
push
jge
dec
cld
or
stc
out
mov
add
or
or
mov
sub
mov
loope
push
cltd
cmpsb
xchg
xor
into
dec
lret
pop
pop
dec
lock
xor
xor
clc
pop
mov
and
mov
xor
repz
outsl
adc
out
int
adc
xchg
jae
inc
fwait
into
ljmp
mov
test
outsl
mov
and
inc
mov
sarb
shrb
push
in
push
and
movsb
aaa
leave
scas
popa
pop
jbe
fwait
jp
xchg
xchg
mov
xchg
and
or
dec
out
enter
mov
test
stc
xchg
frndint
aad
clc
add
or
xchg
mov
aaa
push
xor
mov
add
daa
jle
lea
mov
add
rorb
jo
dec
int3
pop
xor
lcall
jmp
fs
sub
xchg
xor
push
sbb
shlb
les
sbb
lock
sahf
mov
cld
cmp
add
stos
push
jnp
xchg
es
inc
xchg
stos
push
es
mov
adc
xchg
ja
xor
push
ds
add
enter
movsb
lock
jmp
div
rol
xchg
ss
adc
inc
stos
push
loopne
int
js
popa
jg
xchg
loopne
inc
adc
xchg
es
test
jl
sbb
mov
fsub
cmc
inc
pop
in
repnz
xchg
mov
adc
adc
pushf
xor
ds
push
mov
ret
jae
mov
inc
add
ror
jns
inc
cmp
dec
sub
sub
pop
mov
stos
insb
jmp
repz
xchg
xchg
outsb
test
cmc
lcall
xor
lods
ret
xchg
in
mov
in
mov
dec
cltd
in
sbb
push
fcmovnu
lahf
jne
xor
jae
inc
fimull
sti
lods
push
push
or
les
out
movsb
pop
add
push
adc
push
shl
daa
mov
pop
lret
jge
or
jbe
movsb
cld
lcall
xchg
test
mov
mov
les
sbb
jecxz
xor
std
inc
call
frstor
sbb
ffreep
incb
fwait
scas
repnz
jbe
jl
les
lahf
lea
or
sbb
jecxz
push
addr16
sub
mov
mov
or
insb
dec
fiaddl
pcmpgtw
xor
dec
les
xchg
int3
ret
repnz
pop
mov
fistpll
inc
xchg
push
sbb
cmp
jae
and
xlat
mov
mov
rcrb
int3
decb
xchg
insb
xor
fsubs
push
hlt
lret
mov
push
scas
sub
jp
and
mov
mov
outsb
scas
aad
ret
mov
pop
popf
dec
sub
test
dec
sahf
fstps
mov
decb
mov
pop
insl
popa
insl
mov
test
ljmp
xor
or
mov
in
fldt
push
sbb
jmp
cmp
test
and
daa
jle
inc
mov
mov
inc
mov
lahf
in
cld
xor
ljmp
push
repnz
mov
int
jp
fmuls
adc
or
dec
inc
dec
bnd
hlt
add
paddw
sub
cmp
xor
lret
mov
pushf
icebp
sub
dec
dec
mov
sbb
xchg
cld
mov
sub
mov
mov
xchg
inc
cmp
xchg
rolb
icebp
les
mov
mov
hlt
or
mov
mov
dec
add
sti
aas
bound
push
insb
or
dec
dec
xor
das
jl
ret
sub
inc
pop
sbb
movsl
popa
pop
dec
dec
call
adc
sti
dec
mov
or
popa
mov
inc
adc
nop
in
xchg
rcll
xor
mov
sub
lahf
adc
out
out
inc
xchg
cld
add
inc
fsts
insl
sub
ljmp
push
into
icebp
sub
js
xchg
stc
std
or
jne
jle
mov
add
loope
or
js
in
notl
or
fsubr
mov
push
dec
cmp
push
and
xlat
and
push
cmp
lods
ret
movsl
pop
popa
lahf
push
xchg
sbb
shl
cmp
cmp
xor
mov
cld
rorb
inc
mov
sub
pop
sub
push
mov
cmpsb
push
push
dec
pop
mov
mov
adc
push
scas
jns
andb
data16
mov
pop
add
cmp
rcr
out
loop
mov
or
jge
in
or
add
nop
loopne
mov
fnstcw
mov
dec
aad
xor
icebp
leave
push
arpl
lods
cmpb
loop
pusha
test
rcrb
nop
pop
pushf
and
and
cs
adc
jno
and
sbb
int3
pushf
mov
xor
out
xchg
add
mov
arpl
cmpsb
or
in
xor
sub
hlt
jg
movsl
xorl
mov
dec
and
ja
mov
ror
pop
dec
hlt
and
rcr
add
stc
aad
xchg
outsb
sub
sub
and
jno
popf
stos
lret
imul
loope
imul
icebp
addr16
inc
inc
popf
scas
ss
rdtsc
rcr
mov
push
cli
fcmove
loop
ds
lahf
int
cmpsl
mov
xor
inc
pop
mov
pop
dec
ds
xor
jbe
adc
sti
xchg
mov
mov
xchg
iret
int3
push
mov
cmp
mov
enter
das
testl
jns
ret
ss
lock
dec
aam
loopne
subb
mov
mov
call
dec
movsl
jnp
mov
or
addr16
pop
sub
or
ljmp
les
out
icebp
paddsw
out
hlt
mov
jmp
pop
jecxz
xchg
jae
dec
mov
popa
fsubrs
dec
mov
push
stos
pop
stos
mov
imul
inc
push
jo
aaa
jb
xchg
shrl
mov
shr
push
test
fwait
les
mov
into
lods
and
mov
enter
pop
push
fistps
mov
pop
jb
xchg
mov
out
push
pop
cmp
repnz
mov
jb
int
push
or
mov
repnz
es
mov
popa
into
xor
xor
sbb
test
pop
insb
xchg
xchg
lods
inc
xchg
adc
jae
enter
xor
sbb
xor
dec
les
mov
lcall
cmpsl
in
in
inc
mov
pop
out
mov
dec
push
adcb
xor
into
leave
or
pop
adc
jmp
pushf
or
stc
out
test
add
add
pushf
pop
xlat
pop
xorl
fs
pop
adc
js
movl
fsts
enter
mov
pop
mov
or
cwtl
jb
and
adc
lret
jg
aaa
adc
jle
and
fcoms
ficoml
xor
jnp
outsl
cmpsl
test
and
cmpsb
cmpsl
push
into
pop
iret
dec
sbb
rol
aaa
pusha
fnstenv
push
mov
andl
jle
inc
mov
sbbb
lods
sbb
test
mov
inc
shl
movsb
pop
sbb
mov
in
mov
xor
jae
mov
sti
adc
push
inc
orl
mov
icebp
jecxz
push
pop
xchg
leave
pop
xchg
lods
adc
mov
loope
sbb
popa
pushf
add
or
inc
scas
push
mov
mov
out
jmp
dec
movb
clc
jle
cltd
push
int3
shl
test
cli
sub
lods
mov
mov
pop
hlt
lcall
cs
cli
scas
repz
jecxz
bound
xor
mov
std
dec
jle
hlt
push
push
cld
push
nop
rclb
sarl
icebp
in
sahf
xchg
fidivl
jg
popf
cmp
js
adc
cmp
movl
gs
xor
jo
dec
sahf
pushf
cmpb
rolb
xor
and
mov
roll
pop
adcl
sbb
cli
jmp
movb
cmp
mov
xor
mov
repz
lret
add
add
pop
jno
pushf
jge
adc
test
dec
jo
addr16
mov
xlat
cld
out
ret
pushf
cmp
xchg
ja
dec
hlt
dec
sub
aas
outsb
fisubs
and
movsb
fisubrl
clc
test
pusha
push
inc
nop
movsl
cmp
mov
int3
test
xor
inc
dec
mov
fcoml
jp
fwait
aaa
in
js
decb
xchg
pop
inc
push
xor
out
mov
pop
nop
sti
xor
sbb
cmp
push
jns
je
decb
ss
inc
mov
in
sub
in
pop
aad
sub
jmp
pop
jge
push
insb
outsl
std
iret
ljmp
lock
out
xchg
popa
mov
shl
xor
loope
dec
imull
fiadds
loop
sarl
test
stc
test
pop
mov
pop
cmpsb
mov
fwait
xchg
ret
xlat
lret
leave
fadds
mov
add
sub
pop
sbb
push
daa
mov
lahf
test
add
add
add
inc
adc
push
fdivrl
jl
movsb
jae
pop
xor
mov
and
sbb
cmp
xchg
leave
mov
cltd
adc
cmp
stc
imul
xor
push
ffreep
mov
xchg
sbb
jecxz
sahf
cli
mov
adc
pop
scas
cmpsl
mov
xor
out
pop
cmpl
add
cmc
push
jbe
enter
cwtl
adc
adc
shlb
leave
sbbl
es
pop
ljmp
movsl
lock
jmp
inc
int3
dec
bound
out
push
out
pop
adc
imulb
in
pop
fmull
cwtl
pop
and
sub
mov
xor
sub
xchg
sti
mov
mov
loop
xchg
sbb
pusha
fidivl
cmpsb
and
inc
shrb
and
leave
into
subb
ror
stc
lds
xchg
jne
push
pop
stos
stc
lea
insl
outsb
sbbb
adcb
pop
popf
cld
pop
push
movsl
int
xchg
xor
push
cmpsb
xchg
push
cmp
iret
mov
mov
mov
std
int
roll
ret
mov
cmp
icebp
test
lcall
adc
jo
ss
add
fists
loopne
cmpsb
lret
loopne
lahf
test
xor
aam
and
shlb
mov
xchg
xchg
jae
inc
das
icebp
sbb
xchg
sbb
push
inc
inc
xlat
mov
sub
in
movl
xchg
popf
push
aad
cmp
js
das
mov
rcrl
popf
insb
pop
imul
xchg
inc
jnp
mov
mov
pop
xchg
ja
dec
and
shlb
hlt
mov
mov
aad
lds
cltd
stc
fildll
test
cmp
stc
push
aad
xor
popa
call
insl
out
xchg
hlt
sub
out
mov
cmp
outsl
jmp
jns
hlt
aad
cli
xor
sub
test
add
dec
fldl
mov
flds
out
addr16
lcall
popa
scas
scas
sbb
jns
cmp
pusha
sub
imul
cs
lods
in
addr16
mov
daa
and
fstpl
pop
jle
fbld
sbbb
and
cmpsb
add
add
bound
xor
jecxz
pop
outsl
mov
and
lret
xchg
dec
sarb
movsl
adc
lcall
inc
sbb
pop
and
jmp
insl
dec
xchg
or
inc
cmp
call
shlb
mov
loope
mov
insb
inc
fistpl
lahf
pop
adc
push
test
cmp
cmp
enter
hlt
repnz
sbb
imul
sbb
add
sbb
push
inc
clc
divb
nop
add
mov
dec
mov
mov
xchg
out
das
sub
in
push
cmpl
add
adc
or
mov
in
repz
lret
sbb
fildll
pushf
pop
push
popf
add
inc
mov
test
sarb
mov
sub
mov
into
dec
mov
lret
movb
xchg
push
je
gs
lcall
ret
mov
add
xor
mulb
inc
adc
jp
or
and
subb
mov
xchg
les
xlat
test
push
xor
rol
ja
test
ja
push
popf
int3
mov
les
adc
mov
fprem1
add
pop
or
in
push
jns
xchg
fcmovu
cltd
xor
mov
les
sti
pop
jae
mov
mov
xchg
mov
lods
add
inc
xchg
mov
push
cmp
jge
dec
or
xchg
shl
outsb
cmpsl
sbb
gs
mov
data16
jbe
fs
das
fbstp
pop
dec
lds
aaa
jne
loope
adc
arpl
filds
clc
in
mov
rcrl
adc
or
imul
mov
xchg
fucom
popf
cs
fbld
das
es
cmp
icebp
pop
jns
jp
jne
mov
lcall
pop
dec
mov
fisubrs
test
jp
mov
sbb
in
xchg
out
mov
dec
sbb
and
das
out
add
pop
in
dec
jp
xorl
pop
js
sahf
add
mov
dec
mov
jg
and
mov
sub
cmp
ja
mov
inc
dec
popa
lock
jge
lds
dec
mov
in
sbb
frstor
jecxz
mov
scas
aam
mov
xor
test
je
jne
mov
into
sbb
shrb
lods
cmp
icebp
jnp
loope
xchg
and
addr16
push
adc
inc
and
lods
mov
fisttpll
into
je
repnz
fcmovb
cmp
shlb
cli
mov
jge
or
std
push
dec
or
push
outsl
mov
mov
and
pop
push
fwait
push
or
jne
test
mov
pop
xchg
cmp
dec
aaa
pop
addr16
and
or
dec
insb
movsl
xor
repz
addb
and
adc
imul
sub
cmp
dec
push
fadds
mov
addl
aam
pop
pop
pop
fbstp
push
sub
sbb
rcr
test
es
sarl
mov
xchg
mov
mov
into
sub
ljmp
jg
sbb
clc
insl
fistpll
mov
jae
pop
sahf
sbbl
jecxz
sbb
xchg
mov
bound
xor
sub
pop
cmp
sbb
test
inc
dec
scas
dec
imul
incl
in
xor
sahf
add
and
repnz
repz
rclb
jmp
mov
and
sub
aas
loop
inc
in
popf
xor
pop
in
push
sti
int3
outsl
mov
pop
mov
sub
sbb
sub
lcall
mov
ret
add
fists
cmp
dec
jno
arpl
cmpsl
push
lret
add
in
ret
jo
cli
xchg
mov
popa
in
ret
movsb
imul
jecxz
xor
push
and
xchg
mov
test
fadds
sbb
shrl
sub
mov
mov
inc
dec
xchg
shlb
or
aam
mov
push
mov
cmp
pop
es
popa
fwait
sbb
jmp
pop
jl
lret
jne
pushaw
into
jae
mov
cmp
push
mov
shl
mov
cmp
fnstcw
mov
ds
and
fucomip
andl
insb
or
divb
lods
lods
aas
mov
xchg
aas
insl
sahf
test
jle
fs
adc
lea
mov
stos
xor
xchg
xchg
add
lock
stos
lock
mov
push
bound
push
pop
pop
arpl
xchg
and
pop
out
insb
mov
inc
js
xchg
pop
add
mov
xor
push
repz
repz
xchg
xor
push
pop
add
setne
xchg
or
sbb
out
cmp
dec
inc
xor
xor
clc
jbe
inc
mov
mov
sbb
sbb
jbe
jl
in
lret
mov
jae
pop
push
sahf
ja
sahf
jbe
sub
imul
or
sahf
push
sti
jnp
pop
add
out
scas
and
scas
inc
add
cmp
and
sub
dec
cli
xchg
es
lcall
aaa
and
insb
mov
cwtl
ljmp
mov
push
clc
loop
test
push
or
adc
int3
pop
test
cmp
psllq
inc
popf
les
adc
in
int
cmp
test
jp
mov
fsub
pop
out
ret
inc
enter
aam
push
test
pop
push
pop
add
add
push
mov
push
ljmp
mov
mov
in
add
int3
xor
lret
pop
push
jecxz
mov
xchg
lret
add
test
ljmp
xchg
ja
sbb
jnp
cmp
push
cmpl
inc
and
lret
mov
lret
test
sub
aaa
pop
jmp
shl
ja
push
add
and
or
clc
mov
mov
gs
mov
and
cli
inc
sbb
jb
pop
loop
xor
cwtl
js
push
pop
aad
add
imul
fstps
pop
mov
mov
enter
pop
lea
loopne
cltd
xor
js
xor
sub
adc
mov
out
inc
sbb
mov
fiadds
popl
cltd
jne
adc
fisubrs
js
pop
daa
scas
mov
cmp
jl
push
jg
ljmp
and
outsl
xchg
sub
xchg
jg
push
out
out
pop
aam
mov
add
cmp
mov
loop
mov
mov
jno
les
scas
cli
push
adc
add
call
test
or
cs
lret
mov
mov
dec
jbe
sub
push
mov
jmp
adc
loop
pop
je
cli
dec
dec
add
sarb
add
xchg
mov
fs
mov
mov
insb
and
mov
divl
xchg
lar
adc
add
sbb
pop
mov
andb
test
arpl
xor
mov
sub
aas
adcl
inc
mov
cltd
mov
lret
les
cli
sbb
fwait
enter
shlb
sub
pop
mov
loop
lods
in
push
xor
cmpsb
push
out
jae
cld
repnz
sbb
and
and
and
in
dec
das
dec
lods
inc
stos
jl
cmp
pop
mov
inc
sti
stos
mov
jl
in
lock
shlb
bound
ret
out
movsl
pop
mov
mov
ss
cmpsb
les
xchg
outsb
inc
mov
cwtl
scas
xchg
and
jmp
ja
mov
fnstsw
rcrl
push
dec
aaa
imul
les
xchg
dec
push
pop
jns
cwtl
fs
dec
into
outsl
in
movsl
lcall
pop
xor
leave
out
imul
and
gs
mov
fldt
stc
scas
mov
add
inc
jne
mov
jg
aas
movsb
mov
fs
jno
mov
inc
mov
mov
cmpsb
jno
int
movsl
ss
adc
out
cwtl
in
xor
push
inc
pop
mov
pop
popa
lods
mov
xchg
arpl
inc
fwait
sahf
push
mov
loop
cmpb
mov
lahf
negb
sbb
je
add
push
sub
movsl
outsl
les
pop
push
add
mov
jbe
xor
mov
push
lea
jns
push
pop
fnstenv
jecxz
jmp
mov
mov
push
cltd
fisttpll
mov
adc
sub
dec
subl
add
fwait
adc
outsl
inc
push
jle
std
and
jge
push
mov
arpl
jmp
cmp
in
idivb
inc
sbb
aam
testb
sbb
add
fs
mov
push
adc
ds
flds
mov
repz
mov
pop
sbb
add
xlat
inc
add
push
popa
fwait
sbb
xor
mov
push
popf
repnz
cwtl
mov
xchg
xchg
xor
add
add
push
lock
inc
cmpb
pop
adc
jmp
add
adc
and
or
jge
outsb
inc
mov
jbe
stc
jo
pop
adc
fwait
mov
loop
push
lods
push
negl
mov
les
pushl
dec
adc
aas
and
lahf
xchg
pusha
hlt
ljmp
mov
sbb
sub
and
sub
leave
stc
das
xchg
scas
cs
inc
inc
cld
and
inc
pop
scas
loope
std
push
inc
sub
adc
cmpsb
pop
inc
add
mov
outsl
cltd
insl
call
ret
out
arpl
sbb
sub
mov
mov
scas
add
jbe
cli
pusha
lods
mov
dec
jg
loopne
ljmp
pop
pop
xchg
rol
jmp
cli
jae
jge
lea
lret
push
cmc
fxch
ror
xor
xor
adc
or
add
stos
scas
cs
aam
fisubrs
out
mov
lock
and
sub
push
mov
lret
and
js,pn
repnz
push
int3
and
push
mov
loope
jmp
fstps
movsl
jge
xchg
xchg
sbb
loop
jl
out
xchg
push
jnp
mull
insl
inc
jmp
in
jb
leave
mov
pop
mov
sbb
rclb
add
dec
xchg
jno
lcall
je
stc
aam
mov
in
or
cmpsl
xchg
sarl
mov
push
daa
cld
mov
mov
xchg
add
mov
xor
mov
shl
lock
pop
push
push
pop
dec
push
push
in
lock
mov
mov
mov
insb
mov
je
push
loope
std
aaa
ret
and
pushf
xchg
outsl
mov
add
cwtl
cmc
aam
adc
push
mov
mov
mov
or
mov
jmp
scas
inc
jmp
insl
mov
pop
push
or
sbb
lock
icebp
gs
pop
pop
pop
xor
or
mov
mov
rcl
cld
cmpsl
test
or
std
add
test
mov
xor
imul
pop
sbb
cs
pop
adc
xor
ss
adc
jge
jo
lock
or
cmp
test
inc
movsb
push
sub
es
xorl
add
ret
gs
pop
ljmp
jno
jg
xchg
mov
jg
into
dec
pop
xchg
pop
lea
les
and
push
inc
inc
inc
add
mov
adc
dec
outsb
cmp
pop
aam
daa
add
pop
insl
push
test
ss
rcl
inc
pop
inc
lahf
pop
addb
lcall
mov
popf
fimull
mov
lret
add
mov
pop
jp
sub
adc
aad
adc
bound
push
add
je
cmp
and
cwtl
addb
cwtl
mov
mov
out
jo
cmp
sub
or
xchg
inc
loop
lods
aad
cwtl
xor
and
jne
pop
test
sbb
lods
jno
and
imul
fwait
inc
aam
add
and
xchg
jae
enter
aaa
mov
mov
movsl
fiadds
fsubp
adc
mov
in
or
jp
xchg
arpl
inc
or
and
push
lcall
nop
and
jne
push
push
testw
pop
fs
test
xlat
add
loopne
test
cmpb
push
inc
add
outsl
insb
xor
add
cmp
push
mov
fimuls
inc
cmp
mov
fidivs
sub
addl
inc
movsl
and
outsb
dec
lcall
xchg
sbb
mov
bound
mov
leave
mov
or
or
aaa
pop
jbe
clc
lea
xchg
leave
jg
jo
xorl
fwait
push
cmpsb
in
add
mov
xor
inc
mov
push
gs
faddl
pop
mov
and
pushf
xchg
push
imul
sbbb
test
lds
ja
stos
mov
lds
scas
iret
xchg
lret
cmp
mov
mov
inc
xchg
mov
ljmp
jmp
push
jb
xor
sub
imul
and
out
scas
lock
xor
lcall
mov
pop
xchg
sub
cmp
inc
clc
cmc
mov
mov
cld
outsl
xor
outsb
mov
fiadds
cltd
loop
addr16
test
xor
or
xchg
add
cmp
mov
cmpsb
jno
pop
imul
adc
fs
popa
jns
les
out
arpl
in
push
bound
pushf
leave
loop
das
nop
insb
imul
nop
sbb
rcr
clc
inc
xor
add
fcmove
jbe
push
jmp
fwait
mov
jns
push
mov
das
dec
jl
pushf
outsb
pop
push
jp
mov
fsts
sbbl
cmpsb
xchg
mov
jno
shl
mull
scas
in
imul
ret
adc
addb
pop
testl
or
mov
jge
sub
jge
xchg
add
fisubs
in
push
and
cltd
stos
frstor
lds
xchg
and
bound
iret
sub
cmp
fldt
xchg
repz
inc
jmp
int
cmp
mov
mov
push
insl
lcall
lret
mov
adc
stc
in
pop
add
cmp
lahf
mov
enter
mov
fwait
lock
jnp
xor
mov
les
test
xor
push
scas
insl
mov
shr
sbb
int
inc
fs
pop
add
js
xorb
add
jbe
test
or
lock
dec
fnstenv
push
out
pop
lea
sub
mov
jl
dec
pop
mov
in
movsl
mov
sbb
sbb
xor
gs
loopne
das
nop
jne
loop
bound
push
mov
sti
dec
lcall
pop
or
es
repz
shll
xchg
fisubl
mov
push
aas
inc
fwait
dec
cmp
push
das
call
les
xor
aam
jmp
jo
adcb
outsl
fiaddl
pop
xor
movsl
or
mov
push
loopne
in
imul
mov
test
sub
loope
push
jmp
dec
paddusb
into
adcb
cmpsl
sarl
mov
inc
cli
es
aaa
inc
jmp
mov
lahf
mov
das
cmpsb
pop
or
shlb
sbb
and
xor
push
mov
mov
fs
jecxz
xor
pop
out
ja
shlb
or
andb
ret
xchg
inc
out
fpatan
xor
jbe
add
lods
cld
jns
test
cltd
mov
xchg
push
js
rcrb
lcall
jae
push
inc
lret
push
in
xchg
xchg
into
inc
push
sahf
outsl
dec
pop
push
lcall
outsl
rclb
mov
pop
mov
lret
dec
std
mov
inc
movsb
sbb
aad
dec
addb
cmp
push
mov
mov
pop
jne
int3
inc
dec
inc
mov
mov
jle
pop
out
pop
and
jbe
cld
dec
pop
out
jecxz
insl
cmp
pop
push
cmc
pop
daa
push
pop
pop
into
push
dec
mull
loope
test
jg
jp
pop
cmpb
and
push
cmp
cwtl
inc
mov
jmp
neg
cmp
ficoms
mov
lea
xor
enter
cmp
mov
mov
test
test
arpl
xor
xchg
push
xchg
repz
and
stos
scas
cmp
out
jns
popf
mov
shrl
icebp
push
sahf
push
aad
jb
in
push
mov
mov
xchg
xchg
xchg
push
push
jecxz
ret
fxch
mov
rcl
mulb
pusha
jle
adc
ljmp
mov
mov
xor
cwtl
xlat
inc
aam
push
gs
or
push
and
jl
test
cmpsl
movb
aas
js
testl
aad
cmp
xor
dec
push
sub
fisttpll
push
stc
jo
xlat
or
ret
cmpsb
and
jno
orl
lods
sti
flds
push
pop
adcb
pop
pushf
insl
inc
or
mov
lock
sti
cmc
dec
cltd
jmp
mov
imul
fidivs
packsswb
jo
aam
in
push
test
fwait
ds
dec
std
adc
insb
in
or
std
cmp
in
movsb
lahf
sub
or
mov
out
out
pop
or
pop
fcomps
mov
loopne
popf
test
js
push
shlb
inc
in
orl
cmp
pop
nop
iret
inc
jg
dec
or
icebp
or
push
fdivs
pop
fucom
and
mov
movsb
cmp
fdivrp
filds
jmp
dec
sub
loope
mov
test
popf
push
inc
push
gs
mov
cmp
fcomp
cmp
sti
and
call
movsl
in
aas
push
sub
ret
pop
iret
or
sbb
cmp
cmp
pop
mov
add
rorb
call
cmp
xchg
int3
test
mov
adc
xlat
lock
outsb
push
gs
js
mov
fisubrl
std
sarl
shlb
mov
and
mov
mov
jae
pop
aad
xor
cmp
pop
cmpsb
xchg
add
popa
add
xchg
test
in
dec
mov
hlt
cmp
sarl
arpl
mov
mov
pop
dec
xchg
repnz
arpl
std
je
xchg
inc
stos
mov
push
jp
clc
or
inc
mov
nop
lret
xchg
sbb
jge
sub
adc
inc
out
xor
xchg
xor
push
inc
imul
push
pop
iret
jmp
xchg
xor
sub
iret
cmc
jle
clc
xchg
icebp
push
pop
ret
add
aam
in
faddl
jmp
xlat
jne
jns
dec
rclb
jle
cli
adc
aad
pop
mov
repnz
sbb
xchg
je
loop
jmp
es
xchg
dec
dec
in
mov
popf
mov
pop
cmc
xor
ficoms
jmp
push
jecxz
pop
fstps
mov
mov
xchg
and
call
cli
stos
cmp
cmp
add
mov
ret
mov
fsubs
insb
add
cmp
bound
mov
addr16
inc
iret
mov
mov
lret
adcl
or
inc
push
xchg
jbe
dec
mov
mov
and
outsb
dec
push
sbb
jl
outsl
sti
dec
cmp
dec
shl
add
shlb
fs
loop
cmp
out
out
pop
or
jns
mov
into
mov
clc
and
inc
les
jo
orl
std
xchg
shrl
cli
cs
pop
dec
dec
jg
mov
gs
xor
cmp
fs
jns
jne
and
stc
sar
imul
scas
or
sbb
mov
cmp
aam
push
enter
js
bound
cltd
xchg
movsb
inc
push
mov
add
out
mov
dec
out
scas
insl
imul
mov
subb
and
jmp
addl
push
mov
shll
jge
jb
popa
mov
lcall
aam
leave
pop
dec
test
hlt
aas
mov
lea
ret
jo
xchg
pop
gs
nop
stos
cld
out
push
test
shrb
mov
int3
aaa
out
xor
and
cmp
std
les
xchg
mov
and
xchg
xchg
or
ss
inc
inc
push
lock
jae
add
dec
mov
inc
mov
jne
add
cmp
out
ret
mov
popa
shll
repz
fisubl
pusha
or
and
fbstp
or
xchg
cmp
push
mov
test
push
scas
pop
out
aaa
sbbl
jne
pop
xor
inc
ja
lods
push
mov
or
imul
inc
xor
ss
mov
and
xor
fisubs
cs
fnstsw
add
nop
push
inc
cmp
out
imul
loopne
fdivrs
jne
inc
cltd
xchg
add
test
sub
inc
and
mov
jecxz
lock
sahf
xchg
cmp
lds
sbb
xchg
mov
mov
pop
push
ror
fs
adcb
xchg
stos
test
fs
mov
sub
cmp
mov
jg
pop
in
andb
jecxz
mov
pop
xchg
sbb
xchg
out
out
xor
xor
push
xchg
sbb
pop
andl
jg
ljmp
sarl
ret
scas
jnp
jp
mov
cmp
arpl
push
mov
dec
xchg
add
push
push
cli
inc
jnp
mov
cmp
ljmp
dec
pop
inc
inc
and
dec
inc
je
xchg
mov
pop
jg
jmp
mov
sbb
mov
mov
sbb
fdivs
xor
mov
sarb
int3
push
cs
push
add
loopne
pop
pusha
pop
je
jo
std
sub
adc
cmpsl
or
cmp
cld
jns
gs
pop
out
add
scas
and
push
adc
daa
jne
es
mov
out
ret
push
mov
add
pop
ret
ja
pop
push
idiv
mov
sub
test
flds
cmp
adc
and
scas
insb
test
lret
movsl
in
mov
popa
xor
or
mov
cmc
pop
stos
sarb
ljmp
pop
cwtl
mov
pop
enter
mov
sbb
fdiv
cmpsb
or
addr16
stos
or
xchg
push
adc
es
cli
clc
push
and
imul
js
and
fstps
add
cmp
orl
push
add
lret
push
mov
cltd
jg
scas
dec
sub
test
push
das
ss
fldl
fisubl
mov
mov
dec
cmp
in
cmp
jnp
popf
or
sub
mov
ret
cmp
jne
cwtl
and
xchg
mov
nop
out
lahf
fcoml
testb
jns
jge
lds
adc
jb
xchg
shll
lock
imul
push
pop
shlb
orb
in
scas
jecxz
add
rcrb
and
xchg
out
mov
cld
xchg
inc
pusha
pop
dec
cmp
push
mov
inc
xchg
push
scas
icebp
fildll
jge
xor
mov
fs
dec
pop
dec
clc
inc
popa
cmp
cmp
mov
lock
mov
dec
push
mov
lock
and
sbb
dec
pusha
xchg
mov
push
jmp
sub
xor
mov
sti
cmp
popa
call
testb
idivl
add
fbstp
or
stos
mov
lahf
xchg
ja
iret
sbb
outsl
jb
add
sbb
cmc
sub
and
test
pop
int
mov
inc
mov
dec
sub
aaa
mov
addr16
and
cmpsl
test
std
ret
xchg
cs
fisubrs
sbb
enter
cs
repz
sub
add
inc
lcall
xor
lods
add
pop
pop
sarl
cwtl
jnp
mov
xor
jnp
mov
and
mov
jnp
push
test
dec
add
addr16
in
int3
xor
xchg
lcall
push
sub
stos
lods
jno
cs
idiv
aaa
mov
and
adc
int
mov
pop
sub
dec
les
out
shll
cmc
adc
cmp
movsb
dec
nop
std
in
gs
pop
sbb
jecxz
ret
and
das
or
cwtl
sub
inc
or
out
mov
xlat
add
adc
outsl
jne
test
daa
dec
cli
cmp
dec
xor
shll
xchg
add
add
popf
dec
mov
xchg
inc
inc
mov
jo
mov
dec
mov
inc
add
push
mov
fildl
movsb
mov
push
aaa
mov
lea
popa
push
push
sarl
mov
xchg
pop
jae
mov
mov
push
pushf
pop
fucom
dec
inc
push
mov
lods
inc
push
and
xchg
nop
adc
xchg
outsl
sub
gs
pusha
jecxz
repz
mov
std
shrl
dec
inc
gs
shrl
xor
roll
xor
mov
lods
fistl
outsl
pop
mov
mov
dec
xor
mov
jno
jae
fisubrl
lcall
xor
bnd
or
push
cmc
cli
cmp
mov
sbb
inc
iret
ljmp
cmp
add
mov
call
aam
sub
out
pop
fnclex
iret
xor
xor
out
sub
scas
sbb
lahf
and
mov
lds
into
sbb
jg
lods
scas
testb
pop
int
loop
leave
mov
stos
enter
enter
xor
cmpsl
cltd
fsubs
enter
repnz
jle
or
adc
movsb
push
inc
inc
push
fadds
cld
fildll
mov
enter
adc
mov
dec
jnp
mov
pop
ret
sub
andb
aaa
loop
pop
mov
ror
jmp
aam
aam
clc
push
mov
sahf
push
add
dec
push
out
lahf
loop
fisttpl
mov
pop
gs
and
xchg
mov
mov
ljmp
imul
lea
xchg
cmp
sbb
mov
fsubp
int3
outsl
xchg
ret
pusha
popa
out
sbb
mov
or
cld
loop
adc
addl
jbe
arpl
scas
stc
js
loop
jbe
in
cmp
inc
cmp
pop
jae
fwait
dec
mov
dec
jno
jae
or
inc
jmp
popa
fdivs
push
dec
and
sub
mov
int3
sbb
mulb
pop
xchg
mov
sbb
cld
inc
inc
dec
cmp
fldenv
sub
insl
jae
sbb
rcrl
add
xor
sbb
fsubl
jg
or
int3
movsb
enter
jp
sbb
mov
xor
push
insb
loope
pop
mov
xchg
mov
add
iret
xchg
mov
inc
or
cmc
cltd
lock
sahf
loopne,pn
sub
js
fs
out
mov
xorb
jl
jge
lock
and
sarl
inc
ret
shll
movsl
testl
xchg
jnp
jle
mov
xorb
ret
popa
leave
push
outsb
xlat
shlb
sbb
call
inc
insb
jb
call
sbb
fs
movsl
lods
loope
fcmovnu
pusha
adc
negb
and
jbe
popf
fs
in
add
or
cmc
call
cltd
push
pop
jno
adc
sbb
sbb
out
fisubrl
sbb
sbbl
jl
sahf
sub
loope
mov
mov
repz
push
sub
cmp
test
outsl
adc
and
mov
mull
fstpl
sub
out
xor
jo
and
bound
jbe
fidivrl
ds
rorl
std
sub
xor
add
push
inc
aas
sbb
or
xor
xchg
aaa
or
mov
lret
in
push
ljmp
sbb
aad
sub
inc
mov
push
lds
xor
push
jecxz
jmp
pop
adc
or
out
mov
call
in
dec
dec
xor
add
stos
out
pop
jp
fimull
xor
and
mov
push
add
loopne
mov
add
cmpsb
rcll
jle
and
stos
scas
cmp
and
pop
aam
mov
add
push
ja
out
mov
or
ds
xor
pop
mov
je
ds
jno
jae
addr16
rorb
cmp
cld
clc
lds
outsl
and
jmp
fistpl
xchg
ljmp
into
mov
jns
mov
es
mov
outsl
popf
iret
shl
inc
loope
test
mov
xor
imul
dec
mov
and
inc
push
jmp
lea
cmp
pop
mov
js
dec
inc
ss
ja
ret
sub
push
stos
xor
stos
push
mov
xor
test
dec
add
fisttpll
insb
mov
or
mov
andb
mov
clc
xchg
xor
ret
mov
sbb
mov
fwait
stc
je
mov
xchg
out
mov
repnz
push
xchg
add
test
sti
lret
mov
xchg
mov
cmp
pop
mov
das
cwtl
xor
in
test
or
cmp
testb
jl
xor
pop
addr16
mov
cmp
jle
out
sti
ss
and
aad
jmp
or
scas
pop
adc
cmc
dec
sti
aad
ficompl
outsb
andb
push
cmp
jae
clc
stc
mov
adcb
lds
push
rcrl
xchg
sbb
fisubl
int
or
mov
fcmovbe
lock
xor
add
lahf
cmp
cltd
mov
sub
scas
inc
dec
push
negl
mov
out
push
pop
stos
in
sbb
subl
and
jmp
cmc
in
lret
xchg
mov
or
lea
out
rcll
pop
in
pusha
push
cmp
pop
jb
xchg
in
cltd
dec
movsl
and
inc
pop
dec
adc
fwait
fwait
cmp
inc
clc
add
mov
loopne
xchg
or
aas
repz
lock
ret
jae
cmp
sub
add
gs
mov
and
cmpsl
adc
push
outsb
dec
xor
js
add
jp
mov
xor
int
pop
push
and
test
add
bound
aas
inc
notl
int3
addb
aam
cmp
dec
adc
xor
stc
outsb
insb
aas
or
ljmp
aam
xor
mov
adc
movsl
adc
insb
pop
loopne
arpl
loop
push
push
jmp
push
aam
mov
add
pusha
inc
xor
es
cmpb
leave
in
mov
ret
mov
or
dec
ja
push
ds
adc
lret
cmc
mov
push
mov
and
lds
mov
in
stc
xchg
pop
dec
outsb
push
dec
pop
fwait
mov
push
sub
or
loop
adc
sbb
sbbl
daa
rcr
mov
out
out
nop
pushf
inc
pop
jp
jle
jg
mov
push
xchg
sub
cld
mov
jmp
cltd
lods
xor
out
imul
fistpll
pop
xor
cmpsb
xorb
push
add
push
mov
ljmp
cli
sarl
gs
or
push
push
pop
gs
lret
stc
or
push
push
out
inc
mov
insb
inc
dec
daa
inc
repnz
push
jecxz
xchg
push
scas
cmp
jmp
or
push
or
pop
scas
push
add
lcall
xchg
iret
aad
in
scas
test
cmp
or
ficomps
jle
or
aaa
faddp
or
mov
add
push
add
push
sbb
mov
add
jecxz
or
lock
inc
xor
in
into
cs
mov
sbb
dec
aas
fdiv
push
inc
shll
stc
add
lahf
idivb
ret
xchg
ret
cmp
ficompl
mov
adc
out
mov
adcb
mov
ffreep
or
xor
lock
aas
xchg
mov
pop
es
dec
mov
hlt
jp
push
add
out
xchg
imul
mov
aad
aas
push
pop
out
aad
add
mov
mov
sub
popf
xor
inc
ja
add
aad
pushf
and
pop
and
add
ds
push
fs
pop
push
pop
mov
sbb
loope
cltd
insb
mov
sub
xchg
mov
push
fsts
jmp
sbb
insl
adc
adc
mov
cwtl
jno
cmp
cmp
into
in
lret
fstpl
xchg
cmpsl
scas
cmpb
pop
aaa
fistps
push
je
push
mov
mov
jl
dec
nop
jge
dec
in
mov
cltd
mov
and
test
aam
in
lcall
xorl
repz
js
int
pop
test
cmp
test
push
mov
adc
repnz
push
inc
andl
dec
xchg
arpl
sbb
sub
pop
adc
aam
add
sub
xor
bound
sti
push
add
stos
notb
fmull
jnp
sbb
mov
or
cmp
stos
dec
xor
xor
mov
lahf
fistpl
mov
ret
rcrl
cli
sahf
push
add
mov
dec
sbb
mov
rorb
xchg
and
or
mov
add
or
int3
mov
sub
aaa
movsb
ret
sub
cld
dec
lds
or
std
lds
rcrl
jecxz
cmpsb
inc
and
xlat
lock
cmp
and
lods
lods
outsl
clc
sbb
lds
xor
arpl
adc
mov
rcrl
out
dec
xor
or
xchg
popf
stc
mov
xor
adc
mov
or
repz
dec
sbb
jo
add
add
pop
and
fs
out
add
popf
in
jne
ljmp
adcl
movsl
dec
xchg
daa
lahf
adc
hlt
test
xor
inc
mov
lret
lods
mov
push
arpl
dec
pop
divb
push
popa
dec
lock
mov
test
dec
rcrl
xchg
in
pushf
dec
pop
xor
fwait
jle
jnp
daa
xchg
or
push
xchg
inc
xor
enter
imul
stc
pop
pop
dec
and
call
inc
pop
mov
movsl
mov
leave
lret
adc
cmp
mov
cmp
ljmp
out
pusha
les
aam
shll
xor
mov
div
mov
mov
cmp
outsl
mov
pop
mov
popf
mov
shlb
xor
sti
pushl
or
es
aaa
adc
test
ds
inc
sbb
fs
dec
xor
int3
imul
fimull
cmp
imul
jno
push
dec
xchg
xor
and
mov
ret
jno
sarl
pop
xchg
xor
sti
sub
xchg
out
mov
push
int
xchg
xchg
imul
inc
jno
gs
int3
test
popf
andb
cmpsb
out
inc
dec
ficoml
or
xchg
adc
sbb
aad
push
ss
xor
xchg
inc
or
cmp
stos
dec
ret
jnp
shl
pop
inc
dec
inc
or
xchg
lcall
shll
and
jp
out
cmp
lea
push
nop
lcall
mov
jp
test
out
loop
push
jbe
int
into
mov
mov
dec
scas
imul
push
push
pop
mov
gs
jge
in
push
dec
and
xchg
lret
dec
lret
in
mov
sub
jmp
stc
sub
jecxz
and
xchg
data16
xorl
jns
daa
stos
aas
add
mov
cmp
sbb
cs
mov
inc
mov
shll
inc
jle
xchg
push
adc
push
push
xchg
leave
cmpsl
sahf
push
testb
into
sbb
pop
ret
pop
ds
sub
jmp
inc
gs
test
xor
fimull
das
fprem1
cs
imull
scas
sub
movsb
jb
lock
nop
lret
call
or
lds
sbb
pop
enter
cli
add
lods
bound
cltd
or
in
aaa
data16
scas
mov
fnstenv
lea
push
mov
mov
lar
pop
test
cld
dec
xchg
or
and
or
mov
mov
pop
gs
mov
jl
add
inc
mov
inc
jecxz
cmp
das
iret
movsb
rcrl
test
or
inc
cmp
xchg
pop
ljmp
popl
sub
fdivr
cmp
and
out
sub
imul
mov
in
mov
scas
jg
pop
pop
inc
adc
popf
nop
dec
sbb
je
fisubrs
dec
jb
dec
jb
jo
fidivrs
mov
pop
rcrl
addr16
cwtl
leave
push
cmp
pop
call
movsb
and
add
adc
mov
mov
xchg
mov
cltd
fwait
push
push
out
pop
test
pushf
dec
fstpl
pop
stos
hlt
or
mov
fdiv
leave
push
sub
cmp
idiv
fs
mov
push
ss
imul
jb
fstp
xchg
fs
pop
jp
push
mov
hlt
mov
fdivrs
push
xchg
orb
mov
pop
xchg
mov
mov
jg
push
scas
pop
shrl
mov
pushf
xor
dec
cltd
ss
iret
jp
mov
das
pop
sti
or
inc
pop
mov
cs
add
cs
imul
iret
jns
dec
xchg
and
rorb
rcrl
push
xor
ljmp
repz
arpl
mov
lahf
sbb
fiadds
sbb
arpl
mov
adc
mov
out
pop
xor
hlt
pop
and
adc
mov
pop
into
adc
shlb
idivb
outsl
mov
out
mov
imul
adc
mov
dec
or
xchg
les
lahf
ret
mov
lret
pop
push
mov
mov
add
aas
test
dec
xor
loope
je
repz
pop
mov
shlb
call
cmp
movsb
or
sbb
and
mov
sub
cmpxchg
sbb
movups
inc
inc
inc
ret
and
push
clc
int
xor
sti
test
mov
les
sub
adc
imul
xor
lea
mov
and
dec
xor
rolb
subl
notb
push
or
or
sbb
popa
sti
xor
fbstp
xor
shlb
cld
fnstcw
xor
fdivr
inc
sub
fs
leave
push
mov
xchg
add
jg
ret
mov
pop
icebp
push
cmp
in
jno
cmp
popf
dec
ror
xchg
xor
xor
add
mov
test
imul
and
sbb
fdivl
out
push
dec
shrb
mov
jb
push
and
mov
pop
mov
sub
fsts
jp
subl
sbb
push
cmpsl
ljmp
inc
sbb
sub
loopne
std
loop
jo
dec
or
stos
sbb
fnstenv
add
cmp
cmp
mov
jle
adc
das
testl
aas
ljmp
test
mov
fwait
adc
or
in
ret
pop
enter
popa
sti
inc
out
cmp
or
ds
adc
pop
mov
pop
mov
arpl
imul
lods
pop
or
ja
loope
out
hlt
xor
int3
mov
outsb
push
mov
shlb
jne
cmc
jbe
adc
mulb
bound
repnz
push
and
daa
adc
xor
dec
or
dec
mov
lahf
push
lock
add
dec
mov
adc
insl
jl
push
mov
sbb
inc
cld
enter
cwtl
adc
adc
mov
sahf
scas
mov
add
cmpsb
arpl
jnp
imul
xchg
sub
dec
test
push
ljmp
xchg
inc
data16
in
cmp
fwait
movsl
pop
mov
xorl
push
mov
xor
or
fmul
jae
mov
aad
mov
rorl
lahf
mov
mov
cwtl
adc
fmull
gs
pushf
hlt
shl
mov
into
fldcw
out
shll
mov
loopne
push
or
cltd
inc
or
mov
sbb
cmc
leave
repnz
cmp
lret
cld
and
shl
jnp
mov
sbb
cmpsl
or
or
scas
dec
inc
lock
mov
add
inc
popa
stc
mov
sub
mov
jns
pop
scas
fiaddl
or
daa
xor
fnstsw
ret
insb
gs
sbb
jl
pop
mov
lods
mov
shrl
xchg
add
rorb
and
icebp
or
push
scas
repz
into
dec
xor
dec
nop
mov
fidivrs
loope
add
sub
push
add
test
mov
dec
cmp
pop
jge
cmp
mov
or
mov
loope
call
push
inc
push
sbb
cmp
cmp
dec
popa
popa
pop
stos
inc
xorb
ficoml
in
and
mov
stos
mov
dec
adc
fidivrl
cmp
add
xor
pop
insl
call
sub
adc
xchg
mov
pop
stos
pop
loop
sahf
cmp
xor
add
stc
jb
xchg
xchg
pop
push
lock
cmpsb
scas
adc
push
add
shl
dec
scas
pop
jnp
jb
mov
xor
sarl
lock
dec
dec
dec
xor
pushf
ficoml
sbb
and
mov
insl
cld
mov
sub
mov
xor
mov
xor
popf
test
bound
out
or
mov
dec
aad
cld
ds
pop
and
push
xchg
nop
daa
scas
xchg
das
icebp
cmc
or
add
dec
repz
scas
sbbb
cmp
aam
jnp
mov
mov
sub
out
mov
xchg
leave
hlt
stos
dec
in
sub
sbb
pop
lds
cmp
pop
push
das
or
dec
sub
mov
mov
mov
cs
fdivr
mov
ja
int
cmp
xchg
test
mov
mov
cld
les
fwait
mov
dec
ljmp
movsb
mov
int3
cmp
shrl
jbe
dec
jbe
movsb
jns
jle
ss
jmp
fnsave
mov
mov
add
fdivp
ficompl
pushf
or
in
add
test
stc
dec
jo
imul
popa
jp
popf
cwtl
mov
sahf
shll
mov
test
push
pop
pop
repz
cwtl
cmp
cmp
jmp
xor
cmp
out
xchg
sbb
xchg
repnz
xchg
mov
fxch
icebp
xor
imul
mov
bound
sti
mov
add
sub
inc
or
or
lds
dec
in
cs
jnp
movb
and
cmp
sbb
add
cmp
xchg
ret
dec
iret
dec
cltd
dec
adc
jmp
movsb
cld
aad
lock
push
xchg
test
das
pusha
push
push
inc
outsl
cmp
mov
and
push
das
inc
cmp
add
mov
pushf
je
add
jmp
enter
pop
lods
xor
cmp
loop
pop
popa
ficomps
pop
lods
movl
sbb
push
popf
fidivl
dec
fisttps
cld
imul
xchg
and
adc
inc
lock
aad
jp
fbstp
adc
jmp
inc
arpl
fisttpll
les
xchg
xlat
sbb
dec
scas
test
aaa
sarb
jae
lock
fmuls
push
adc
lock
sbb
xchg
out
cs
test
test
pop
ljmp
arpl
sub
fstl
pushf
pop
cs
aam
inc
or
int3
cmp
shll
lret
mov
adc
or
cmp
sub
mov
push
sub
push
mov
cmpsl
lock
xchg
sbb
orb
mov
sbb
sahf
in
mov
pop
push
sti
mov
push
inc
lahf
fdiv
mov
test
lock
std
xlat
movsl
iret
fwait
xor
out
fs
lock
push
adc
js
pop
cltd
mov
or
xor
aam
jno
leave
loopne
xor
push
insl
scas
hlt
sub
fcoms
push
orb
testl
adc
jmp
mov
divl
or
scas
enter
push
lods
vorps
sub
outsl
outsl
pop
inc
aam
jo
xchg
pop
mov
fstpl
dec
ja
jno
call
js
mov
test
cmp
movsl
jp
mov
or
lretw
sbb
mov
shlb
aaa
xchg
xor
and
iret
pop
test
dec
xchg
lods
jmp
jg
loopne
inc
iret
mov
loop
int
dec
xchg
shrb
mov
or
push
push
rep
pop
arpl
adc
lods
sbb
in
fldcw
outsl
nop
popf
cmp
push
sbb
lock
out
mov
cmp
rcl
push
jl
xchg
sbb
cmp
nop
cmpsl
jp
stos
xchg
jmp
adc
jl
mov
pop
xor
test
mov
push
pop
in
and
mov
jl
loopne
dec
mov
dec
jo
fiadds
adc
adc
add
jne
daa
inc
jmp
test
aad
adc
sbb
inc
dec
hlt
cmpsb
mov
sub
lds
push
inc
in
nop
cmp
adc
sub
sbb
es
xorb
jne
popl
or
cmp
jl
add
or
mov
sbb
add
cmpsl
lds
insl
loop
mov
jmp
push
jo
or
and
push
mov
sarb
dec
into
push
arpl
fstpl
inc
mov
push
jmp
ds
in
push
mov
fwait
dec
or
in
adc
and
cmp
arpl
and
cmp
sti
xor
popa
sub
jo
cmp
push
sbb
rclb
aaa
mov
and
or
jo
or
jnp
jnp
pop
mov
int3
mov
into
adc
test
fstpl
fs
inc
mov
mov
aad
add
mov
and
lods
lret
adc
shrb
scas
xor
push
dec
pop
sub
aaa
movsl
int
xor
incb
test
xchg
icebp
pop
popf
xchg
pop
stc
stos
je
imul
repnz
mov
jno
scas
or
ret
les
adcb
imul
or
je
and
test
sub
push
aad
in
test
pop
cmpsb
leave
jle
lock
in
inc
sbb
sbb
push
push
jl
ret
and
aaa
add
std
shrl
dec
test
xor
rorl
out
bnd
movsl
or
in
jbe
leave
scas
mov
mov
fs
and
jecxz
outsl
scas
cli
adc
mov
int
aam
cltd
insl
xor
mov
repnz
dec
jbe
outsl
add
xchg
ljmp
adc
jp
fwait
incb
and
test
js
cmp
outsb
pop
dec
adc
adc
mov
sbb
sbb
sar
cmp
jb
dec
mov
incl
je
addl
jle
mov
cmp
mov
insb
sub
ja
adc
repz
ja
loop
sarb
sub
cli
insb
xchg
mov
lret
adc
mov
push
lock
push
cmp
jb
push
popf
sbb
daa
loop
jl
mov
fildll
mov
or
sbb
out
scas
int3
jl
test
dec
xor
xchg
popa
xlat
insl
cltd
lock
jbe
fdivrp
in
sbb
adc
push
xor
stc
push
fidivrs
cmp
mov
ret
sub
jecxz
dec
dec
jge
imul
mov
sbb
xchg
jp
ds
pop
daa
loope
mov
out
cmpsl
fmul
fwait
xor
bound
push
sarl
cmp
out
sbbb
cmpsb
jns
loope
or
push
cltd
daa
imul
aas
lods
xor
add
daa
scas
data16
leave
xchg
push
mov
jg
xor
aas
insb
bswap
xchg
fsubl
sbbl
ret
add
lret
xorl
push
dec
dec
inc
mov
clc
mov
and
inc
enter
jg
xchg
mov
pop
lds
je
xchg
out
iret
and
mov
xchg
ljmp
sub
mov
jnp
test
ret
mov
xor
icebp
loope
push
push
sbb
fadds
mov
repz
aaa
sahf
jecxz
jno
mov
andb
xchg
insl
imul
and
arpl
out
mov
test
daa
cmp
mov
js
or
pop
mov
sub
push
push
lods
jecxz
mull
lock
add
xchg
cltd
or
inc
aaa
adc
lret
aad
call
jmp
mov
sti
addb
out
fistpll
pop
test
cmc
popa
test
ret
mov
in
mov
jo
jge
aam
push
sbb
mov
jb
imull
int3
rclb
enter
mov
push
and
jb
ss
lock
xor
test
test
mov
out
push
call
orl
pop
jno
cmp
cmpsb
test
aas
jle
cmc
cmp
jl
sub
cmc
into
orb
mov
mov
cmovs
cs
jp
fisubrs
pop
bound
aam
dec
stos
jp
sbb
stos
dec
inc
ds
fs
push
inc
mov
xorl
repnz
pop
pop
icebp
xchg
adc
jp
scas
shl
mov
adc
stos
xor
inc
jno
cli
lret
mov
idiv
sub
push
fnstsw
and
inc
sub
push
inc
popf
and
stos
jl
dec
xchg
jge
aaa
mov
or
dec
adc
adc
pop
divl
and
adc
xor
mov
fistl
scas
or
xchg
stc
push
sbb
popa
xlat
in
js
ss
mov
jp
addb
lea
cli
dec
jnp
or
outsl
sbb
jb
pop
mov
pop
jmp
jg
fiaddl
mov
inc
orb
xchg
out
aas
rorb
in
ljmp
ret
call
popa
add
pop
sbb
jno
sbb
lcall
gs
push
add
movsl
std
stc
out
mov
dec
pop
xchg
push
andl
aam
lds
sub
inc
adc
loop
pop
inc
mov
adc
stos
jp
jl
and
enter
dec
int
shl
jns
or
and
mov
popf
fidivrl
popa
inc
cli
cs
movsl
je
add
xchg
lea
cltd
mov
xchg
ret
and
push
adc
jbe
add
cmp
aas
sahf
aas
loop
fwait
imull
inc
dec
ret
rcrb
adc
aaa
inc
daa
add
cmc
cmp
and
add
xor
call
je
sbb
jno
xchg
adcb
fucomi
test
leave
jg
in
jge
mov
mov
ljmpw
adc
push
inc
sqrtps
jecxz
and
jns
mov
rorl
dec
imul
andb
loop
popf
shlb
add
mov
inc
dec
fnstenv
daa
in
or
leave
add
movsl
or
sbb
test
mov
lret
insl
int3
cmc
mov
fadds
in
pop
inc
daa
icebp
lret
lods
outsl
xchg
inc
dec
sub
pop
into
enter
inc
xchg
sarb
das
xlat
lock
dec
xchg
jl
loopne
lcall
lcall
mov
fildl
fstpt
leave
pop
cmp
sahf
outsl
add
xchg
popa
out
xchg
cmp
sub
leave
inc
cmpsb
rdmsr
loop
lods
mov
ret
sbb
aas
or
cltd
mov
lods
ds
sub
dec
mov
jmp
filds
push
iret
lret
insl
in
test
push
inc
test
xchg
jno
outsb
mov
jmp
sbb
pop
cs
ja
pusha
movsl
cmp
add
das
loope
sahf
cmp
test
mov
inc
out
lods
fimull
pop
into
sahf
orl
insl
adc
in
cld
std
in
push
inc
addr16
sub
enter
lock
shll
in
push
ss
js
xor
sub
scas
scas
or
lret
jle
fimull
cwtl
sbb
enter
cmp
push
dec
jp
sahf
lock
mov
xor
cmpb
lods
inc
lds
in
push
and
mov
sub
icebp
mov
ret
inc
loop
dec
mov
add
cli
das
scas
enterw
loop
add
je
mov
add
add
mov
cmp
mov
popa
push
int3
int3
jge
fildl
dec
push
sbb
stc
or
jle
and
push
mov
call
idivb
and
jge
gs
sbb
inc
cmpsl
into
lea
icebp
push
fs
stc
aas
outsl
js
js,pt
push
lds
mov
mov
sub
add
cmc
stc
cs
scas
arpl
jno
xchg
cmpl
in
push
cwtl
cmp
xchg
mov
jge
xor
mov
add
cmpsl
push
outsb
dec
out
inc
out
cwtl
jo
mov
add
pop
test
shl
sub
insl
js
push
sbb
mov
sahf
shlb
jle
stos
xchg
cs
jns
push
push
xchg
mov
cmp
popa
icebp
sbb
mov
insb
cli
pop
cmp
dec
data16
filds
push
in
pop
in
das
ljmp
dec
divl
mov
cmpsb
push
movsl
decl
adcl
cmp
push
cmc
orb
and
lahf
out
push
test
or
mov
mov
cmp
sbb
mov
mov
adc
aas
pop
inc
mov
arpl
das
ss
insl
pop
pop
xchg
and
inc
outsl
adc
ret
or
inc
xchg
leave
inc
testb
cmp
arpl
sbb
sbb
pop
mov
dec
xor
iret
sbb
shrb
sub
test
adc
xor
or
jg
stos
mov
dec
xor
adc
mov
add
fldl
repnz
call
push
fstpl
add
cmpsl
das
cmp
out
rorl
idivb
es
push
push
or
adc
test
inc
daa
adc
mov
popf
popa
and
mov
xchg
jp
jle
or
inc
arpl
ss
mov
sub
in
cmpsb
sbb
adc
inc
scas
sbb
cmp
xlat
aad
pop
mov
leave
sbb
pop
cwtl
dec
cmp
cmpsb
lret
icebp
cs
mov
mov
lods
xlat
hlt
leave
popf
inc
lret
cmp
iret
shlb
cmp
lock
jne
xchg
cltd
test
cmp
ret
push
enter
jo
and
push
aad
sub
scas
and
add
fwait
imul
cmp
pop
ds
dec
test
int3
std
push
lret
lcall
and
cmpsb
push
icebp
das
xchg
jne
scas
int3
cmp
xchg
xor
or
cmp
cli
cmp
or
cmp
outsl
sahf
sahf
push
lds
mov
cwtl
cmp
xor
pusha
dec
bound
mov
dec
pop
inc
movsb
pop
hlt
aas
pop
aam
inc
pop
rcrb
mov
rorb
gs
in
sub
jbe
push
out
sub
jp
in
les
mov
in
shl
mov
push
fildll
adc
into
adc
pop
iretw
in
in
mov
mov
sbb
inc
or
fsubs
jae
push
das
lcall
into
ds
sbb
cli
ret
inc
movntq
sti
mov
jge
test
sbbb
xor
icebp
mov
add
mov
in
int
mov
cmp
lret
pop
add
rcr
dec
adc
adc
out
stc
or
lock
cs
out
mov
dec
dec
pop
test
pop
xor
jb
clc
push
icebp
enter
mov
or
cltd
arpl
nop
inc
inc
push
xchg
inc
pusha
loopne
outsb
sbb
iret
js
jmp
test
mov
and
stos
popa
js
or
ljmp
mov
dec
jg
dec
jge
xor
mov
mov
push
hlt
mov
mov
aad
jo
cmpsb
inc
push
lock
pusha
scas
xor
sbb
add
ret
cld
stc
ret
and
fwait
leave
adc
call
hlt
jmp
mov
in
xchg
and
mov
dec
int
enter
add
pop
imul
out
push
mov
rolb
mov
popa
xchg
popl
inc
and
add
cli
rcr
ret
jnp
lret
push
push
and
jle
xchg
dec
mov
gs
xchg
lret
pop
mov
scas
mov
movl
lahf
pop
jbe
stos
movsb
sbb
repz
sti
and
mov
cmp
lods
mov
mov
fwait
loop
dec
popa
ficoml
scas
pop
stc
in
and
inc
inc
outsb
mov
int
imul
dec
mov
rcrl
aad
pop
and
subl
enter
pushf
mov
dec
test
or
mov
pop
dec
adc
div
adc
popf
dec
and
scas
lcall
jb
cmp
pop
aam
aam
int3
int3
cmp
in
mov
adc
cmp
xor
or
cmp
testb
sub
movsb
mov
pushf
mov
rclb
sbb
icebp
inc
cld
inc
sub
and
push
in
lahf
adc
dec
xor
test
mov
jns
or
add
xor
loop
and
out
cmp
scas
pop
jle
xchg
pop
xchg
repz
bound
aad
mov
mov
and
fidivrs
fs
and
cmc
ret
push
and
dec
sub
aam
cmc
cmp
sub
mov
aad
and
xchg
add
in
pop
xchg
bound
movq
popf
push
jb
lcall
loope
mov
pop
cmp
pop
mov
push
mov
cmp
or
out
cmpsl
movb
jns
pop
push
andb
xlat
iret
dec
and
xchg
sbbl
ficoml
std
pushf
jne
pop
cmp
incb
add
pusha
mov
sti
in
jnp
dec
cmp
pop
cltd
into
outsb
xor
push
pop
xchg
sbb
ds
test
insl
fnsave
lock
out
incb
jp
mov
daa
insl
ja
push
mov
jb
mov
shlb
pop
test
imul
pop
ja
dec
cwtl
xor
les
leave
push
out
adc
stc
pusha
mov
mov
push
xchg
dec
mov
cs
loop,pn
lcall
jbe
or
cmc
sub
mov
lret
int3
addr16
jbe
cwtl
lea
adc
call
or
lock
mulb
push
xor
mov
out
les
or
or
add
pop
imul
push
lahf
lret
sbb
push
push
iret
imul
dec
jg
push
mov
nop
and
mov
add
rorb
sub
repz
or
pop
repz
dec
orb
insb
xorl
jl
pushf
jl
or
cmp
test
or
mov
mov
cmp
add
shlb
pop
pop
adc
mov
and
jo
insl
repnz
cld
add
jb
add
xchg
xorb
out
push
cltd
cmp
in
xor
sbb
cs
inc
data16
rcl
out
jnp
aas
enter
mov
js
andl
mov
mov
fstpl
and
ja
xchg
adc
jne
add
stos
pop
xor
push
xchg
dec
fidivl
aas
notb
sbb
fcmove
rcrb
mov
dec
aam
int3
mov
or
rorl
hlt
bound
cltd
mov
pop
fisubl
xor
andb
push
sbb
loop
test
xchg
scas
lock
pop
pop
pop
xor
stc
ljmp
fdivrl
or
mov
in
gs
sbb
inc
or
addr16
xor
popf
add
loopne
pop
in
nop
scas
es
jle
jo
jne
jns
adc
test
cwtl
pop
fildll
fildll
test
xor
push
loopne
jp
inc
mov
adc
repz
pop
and
mov
push
jle
cmp
jl
fildll
dec
fs
stos
mov
lret
rcll
jmp
mov
cmpsw
pop
orb
js
fstl
mov
inc
negb
mov
insl
in
jle
pushf
dec
rep
es
pop
jg
repz
js
add
mov
add
imul
xchg
icebp
jo
fcomi
xchg
out
int
in
das
xchg
mov
and
loop
xor
mov
and
gs
test
inc
mov
push
cmpsl
mov
sti
negl
outsl
fs
and
mov
insb
fimull
push
jne
shll
push
push
xor
dec
xchg
aas
pop
inc
mov
fldcw
arpl
pop
int
cmp
push
testl
dec
and
pop
mov
sbb
jmp
movsl
xchg
sbb
pop
add
bound
nop
jbe
shll
sbb
mov
lret
idiv
mov
out
add
xorb
add
std
xchg
cmpsl
and
test
fwait
inc
jge
lret
mov
outsl
shlb
nop
jb
out
sbb
and
sbb
insl
fwait
mov
lcall
jb
aad
in
lds
or
call
jge
hlt
xchg
mov
or
rorl
repnz
test
mov
aaa
fstps
addb
mov
pusha
mov
enter
mov
test
cmp
mov
test
sbb
push
mov
outsb
xor
bound
push
mov
scas
addb
icebp
mov
dec
mov
stc
outsl
jg
jb
xor
or
les
add
xchg
jg
in
xchg
mov
cli
cmp
pop
add
cmpsb
add
sbb
inc
into
movsl
in
lcall
shl
dec
sub
pop
aas
sbb
flds
sbb
insb
es
pop
cmpsl
out
pop
mov
movsl
and
fisttps
pushf
fistl
outsb
popa
lret
icebp
mov
inc
inc
mov
xor
push
jns
sub
popa
add
xchg
jmp
dec
movsb
push
xor
pop
ret
loope
xorb
add
sbb
dec
stos
int
and
test
lcall
or
sub
pop
xchg
cltd
mov
cld
popl
nop
mov
in
adc
sahf
mov
fidivrs
mov
insl
aam
mov
push
adc
test
outsb
jl
in
mov
mov
scas
jbe
mov
or
sub
in
sti
push
mov
fbld
ljmp
flds
rorl
adc
sbb
sbb
cmp
sub
mov
lea
push
mov
jnp
mov
aaa
mov
push
inc
out
int
sub
divb
outsb
mov
in
xchg
cmp
stos
dec
dec
repnz
addb
sub
inc
arpl
xchg
int3
add
fs
sbb
jae
enter
insl
hlt
fistpll
fwait
fisubrl
test
js
dec
xor
dec
repz
out
and
daa
cltd
int
adc
and
int3
jne
lods
sbb
iret
xchg
les
fwait
lea
pop
mov
xchg
mov
or
enter
inc
clc
rcrl
sub
mov
movb
fisubrl
loop
jo
mov
ja
popf
das
popf
mov
les
fdivrs
mov
mov
and
jae
leave
cmc
adc
sbb
js
mov
add
and
adc
adc
in
lcall
out
adc
rcrb
cmp
inc
mov
pop
in
dec
out
lea
ret
push
xchg
push
mov
cmp
cltd
ret
mov
movsb
aaa
lock
lea
shlb
xchg
mov
xchg
cmp
adc
jp
mov
push
mov
divb
mov
add
or
add
stos
aaa
mov
fildll
xchg
pop
xchg
daa
notl
shlb
xchg
mov
lds
adc
mov
dec
mov
jge
cmp
lds
aad
outsb
sub
rol
xchg
inc
sbb
dec
push
outsl
in
lret
push
xchg
data16
aad
jo
push
enter
fidivl
inc
cmpsl
cmp
xor
in
adc
xchg
lcall
ret
pop
mov
xlat
in
inc
jle
xchg
lock
movsl
movsl
mov
pop
iret
test
or
pop
xlat
mov
pop
mov
adc
int
ret
out
dec
pop
testb
lahf
mov
inc
call
add
dec
adc
and
mov
fwait
cmp
xor
call
rcl
cs
hlt
orl
xor
lods
xor
out
pop
in
pop
sub
shrl
push
and
add
push
add
cmp
mov
jle
lods
jnp
add
lahf
nop
xlat
insb
adc
xchg
jecxz
add
popf
mov
pop
ss
xchg
push
push
int3
test
adc
jle
sub
adc
gs
jnp
push
test
out
inc
pop
dec
cmp
jo
mov
je
cs
pop
xchg
push
aaa
scas
sub
inc
lahf
mov
bound
jge
xor
mov
icebp
hlt
jmp
sti
fwait
jbe
sub
mov
jo
lcall
sub
jmp
jbe
lcall
vrsqrtps
punpckhdq
data16
adcl
and
enter
nop
adc
mov
inc
add
jl
mov
add
ret
dec
jb
xor
fldlg2
inc
test
jp
es
pusha
fwait
aam
js
je
adc
scas
xor
cltd
cmpsb
dec
push
mov
mov
aam
dec
sbb
jns
pop
jno
adc
lea
fbld
icebp
xchg
lret
clc
incl
les
fwait
adc
xor
idivb
andb
insb
push
mov
jmp
test
pop
dec
imul
hlt
cmc
in
push
dec
and
out
mov
cmpsb
in
xchg
in
lret
dec
call
jge
in
jl
rcrb
sbb
or
mov
jb
mov
test
push
xchg
xchg
or
mov
cmp
jb
dec
adc
pop
xchg
mov
movsl
out
int
sub
mov
or
mov
mov
sbb
outsl
fldl
scas
mov
dec
cmp
test
or
jecxz
pusha
and
xor
pop
dec
sbb
das
xchg
aad
mov
mov
and
leave
xlat
fisttps
out
mov
iret
inc
push
fisubs
jo
or
cs
pop
xchg
jne
test
in
jb
inc
mov
ret
dec
xlat
sti
das
out
frstor
jbe
nop
push
sub
test
lods
mov
push
mov
not
pop
adc
sub
stc
mov
push
sbb
jae
outsl
push
iret
subb
sub
push
add
daa
idivl
call
push
add
lahf
xchg
cmp
lret
push
cmpsb
dec
add
mov
rcrb
js
xlat
je
mov
jle
lcall
mov
jmp
out
mov
int3
pop
das
scas
sub
mov
xchg
out
push
inc
or
jbe
xor
add
imul
xchg
ret
test
fimull
test
xor
cmc
rcll
mov
fidivs
adcb
or
out
xor
rol
push
call
fwait
je
or
dec
test
cmove
aam
adc
fdivs
mov
stc
outsl
arpl
pop
aas
xor
or
pop
inc
pusha
dec
aam
pusha
adc
out
addr16
loop
cmp
les
lcall
adc
sbb
jmp
movsl
in
fnstcw
sub
xchg
push
mov
adc
jne
inc
test
fiaddl
inc
sbb
adc
popf
or
add
pop
aas
or
mov
pop
rolb
adc
ja
pop
sbb
fs
xlat
adc
add
push
iret
xchg
cmp
xor
cmp
dec
shl
xchg
ret
xchg
xorl
mov
sti
sub
xor
jno
push
mov
out
xor
lcall
dec
out
jecxz,pt
pop
pop
xchg
inc
ficoms
popf
adc
dec
inc
inc
lret
outsl
push
cmp
mov
add
cltd
pop
mov
adc
incl
gs
in
jbe
mov
sbb
cld
sbb
add
fs
push
pop
push
pop
add
mov
cmp
mov
loopne
jbe
popa
cmpl
mov
xchg
pop
or
outsl
cmp
sub
pusha
call
fstpt
mov
into
and
mov
adc
mov
cli
lock
adc
in
outsl
testb
push
fs
fdivrs
rorb
push
pop
xchg
cli
out
ds
jmp
xor
inc
and
ss
stc
mov
jg
mov
mov
sbbl
add
add
sub
jle
xor
addr16
pusha
xor
cld
shrb
nop
jbe
ljmp
inc
repnz
pushf
lcall
hlt
lahf
jno
push
push
sarb
push
adc
xchg
leave
lock
in
aam
mov
sti
pop
rcrb
mov
xchg
xor
xchg
xor
push
dec
dec
sar
daa
or
push
pop
jo
rolb
fdiv
les
daa
in
xor
test
test
mov
mov
nop
cmp
fdivrs
icebp
ret
sub
xchg
sarb
mov
out
rclb
mov
lcall
cmpsl
shr
and
hlt
out
push
scas
dec
sub
adc
pop
sub
aam
in
shlb
ret
mov
stos
fstps
jb
jne
inc
cs
xchg
mov
lret
lahf
sub
data16
movsl
rclb
ret
aad
xchg
aaa
sbb
outsb
mov
dec
mov
xchg
mov
mov
sub
addl
sbb
shlb
outsb
cltd
xchg
nop
lahf
push
lods
out
int
int3
fldt
fstp
imul
add
mov
sub
sbb
fwait
pop
jnp
mov
inc
jb
jbe
xorb
rorl
cmpsb
cld
gs
push
jecxz
cwtl
sbb
roll
dec
jg
aam
imul
dec
cs
mov
mov
aad
mov
shlb
push
jo
cmp
lahf
mov
or
aas
fxch
aas
sar
adc
nop
andl
ret
cmp
adc
hlt
cmp
xchg
adc
or
adc
nop
in
sarb
imul
lock
es
jb
add
int3
cwtl
jmp
mov
xor
cwtl
jmp
pop
xor
push
pop
hlt
rcrb
sbb
adc
icebp
xorl
lahf
repz
movhlps
xlat
cmc
and
out
loope
mov
mov
jp
cli
daa
out
jle
test
adc
xchg
loope
and
xor
pop
mov
mov
sbb
push
xchg
jbe
inc
arpl
test
dec
mov
lret
std
in
rcrb
cltd
push
pop
cmp
fs
jp
hlt
or
fwait
push
push
mov
iret
lret
inc
das
dec
cli
mov
sti
fst
int
cmpsb
test
decb
add
lods
mov
std
sub
pusha
adc
xchg
push
call
mov
add
movb
clc
scas
cmpsb
jle
rorl
push
in
rolb
pop
rolb
repnz
sub
ret
mov
mov
jecxz
lock
pop
loop
cmc
in
and
dec
push
jb
xchg
mov
mov
les
dec
mov
daa
cmp
add
cmpsl
pusha
mov
and
jmp
or
add
adc
les
sub
xchg
andl
or
sub
shll
divb
fnstenv
pop
icebp
jp
movsl
je
mov
xor
mov
or
push
add
test
cmp
insb
lods
mov
mov
dec
add
xchg
inc
pop
fucom
xor
dec
scas
lods
jle
pop
into
xor
inc
pop
test
cmp
adc
sub
outsb
xchg
in
lods
ret
xor
icebp
cmp
or
pop
xor
sti
ror
or
push
dec
fisttpl
xchg
scas
add
push
pmaddwd
test
or
mov
or
mov
push
scas
scas
cmp
addl
into
dec
and
sbb
pusha
xchg
inc
push
inc
fists
test
xchg
shrb
inc
es
out
adc
cmpsl
lock
and
adc
pusha
out
je
sub
xor
cmpsl
pop
push
push
lret
andl
out
jb
or
dec
nop
mov
push
jnp
add
fisubl
ljmp
jbe
push
push
and
push
gs
lret
loop
jne
mov
sbb
or
push
stc
fsubr
je
xchg
cmp
fdivrs
push
daa
pushf
or
inc
add
in
arpl
pop
cmc
mov
add
fadd
leave
leave
mov
in
test
rcll
mov
jecxz
addr16
int3
add
or
aaa
call
xchg
sbb
sahf
les
push
fidivrl
ret
pop
jae
sbb
andl
mov
xor
movb
push
ret
ljmp
out
pop
cmp
in
repnz
ja
mov
lock
sbb
mov
and
iret
mov
cmpsl
shll
test
pusha
and
jae
push
ljmp
imul
sahf
xchg
lock
cli
and
subl
xchg
mov
xchg
insl
scas
movsl
sub
sub
mov
sbb
pop
jg
or
jo
mov
sbb
or
inc
and
and
push
dec
push
gs
jecxz
push
cmpsl
add
mov
ficompl
testb
paddq
repnz
push
test
and
cmpsb
pusha
mov
ret
and
add
add
sub
insb
cmp
je
push
push
mov
andl
es
cltd
fwait
xchg
and
das
lods
enter
lea
clc
ficoms
mov
jg
cltd
inc
add
es
shl
adc
adc
aam
cmp
xchg
jnp
mov
icebp
popa
add
mov
aaa
sbb
adc
arpl
jno
sub
mov
mov
push
dec
xor
cmp
shrb
mov
mov
ret
jns
dec
or
add
fisubrs
mov
test
push
sarb
andl
jo
xchg
mov
dec
movsb
mov
call
mov
scas
aam
ja
pop
imul
enter
jb
jo
in
inc
inc
adc
and
repz
xchg
gs
popf
or
ljmp
push
dec
std
popa
sub
pop
ret
scas
call
push
push
and
out
mov
dec
roll
mov
xor
popa
mov
mov
ljmp
sti
outsl
pop
adc
mov
mov
aad
clc
and
shll
or
repz
or
adc
inc
sub
jnp
mov
or
cmpsl
int3
jno
pop
lret
and
or
and
movsb
test
fwait
dec
imull
bound
out
sbb
pop
fdivrp
rcrb
xor
sub
jg
jns
es
mov
mov
xor
fwait
cmp
and
pop
fstps
jmp
sbb
jns
and
add
movsl
inc
mov
idivl
mov
and
mov
and
cld
or
sub
divb
or
jnp
aad
mov
bound
push
inc
cli
pop
repnz
jbe
fistpll
xlat
add
movsl
cmp
popa
or
es
push
or
sub
and
adc
insb
iret
stc
add
pop
mov
cs
rcrb
xor
insb
add
and
cltd
xor
cltd
mov
jp
pushf
jne
shrb
fildll
inc
imul
xor
les
and
push
cwtl
leave
push
jb
lock
daa
je
aas
and
sub
addr16
mov
and
sub
cmp
adc
repz
xlat
mov
or
pop
movq
mov
int
sarl
pop
rorb
outsb
mov
das
fcomps
push
ficoms
test
mov
insb
data16
arpl
add
pop
in
orb
shll
push
jecxz
aas
jge
mov
pop
stos
jne
out
jp
iret
clc
stos
mov
jo
cwtl
pcmpgtw
scas
push
xchg
dec
std
ret
out
cld
ficoml
lea
loope
jbe
xchg
subb
inc
jl
mov
in
push
fdiv
clc
mov
cltd
xor
add
test
hlt
add
daa
jl
stos
mov
idivb
dec
test
mov
push
inc
cmp
adc
rorb
inc
jmp
lods
in
insb
std
xor
inc
mov
sub
jne
xchg
dec
pusha
nop
push
inc
lods
inc
sub
mov
mov
idiv
clc
mov
js
movsb
filds
test
mov
lds
xchg
popf
fdivs
cmpsb
mov
jp
shrl
xor
cmpsb
out
xor
inc
jno
add
xchg
testl
push
cmp
push
dec
mov
test
dec
fnstcw
inc
jl
lret
mov
js
cmp
mov
jns
jae
loopne
insl
ret
push
out
push
xor
and
dec
in
ljmp
icebp
add
or
xor
scas
inc
and
xor
fcomp
mov
fsubs
pop
mov
xor
push
fistpl
stos
sub
insb
movsb
das
repz
mov
aas
lods
sbb
mov
movsl
xor
ss
enter
out
mov
and
dec
subb
mov
std
pop
cld
and
jp
jge
jecxz
dec
inc
in
and
pop
and
shll
jb
xor
adc
push
pop
xchg
and
xlat
loope
sub
lret
pusha
inc
daa
xor
cld
insl
push
mov
jo
and
les
pop
cmpl
arpl
dec
mov
into
pop
xor
scas
jp
dec
pop
paddw
je
sbb
outsb
and
ss
adc
add
cmc
rol
sub
fidivl
push
mov
mov
fdivr
andl
or
stos
inc
pop
push
in
mov
sbb
test
inc
sub
popa
into
cmp
xchg
negb
inc
dec
sbb
push
flds
decl
rcll
push
push
div
test
sbb
mulb
jl
out
mov
push
ret
push
fidivrs
inc
rorl
or
xchg
sbb
mov
lahf
scas
jle
je
inc
mov
dec
xor
add
fdivp
xlat
jmp
stos
scas
loope
add
jae
cmpb
adc
dec
jo
jg
mov
cmp
sahf
mov
das
push
dec
jbe
dec
lock
ret
xchg
pop
cmp
sbb
pop
scas
test
cwtl
cltd
sub
dec
adc
and
or
arpl
imul
push
out
inc
hlt
push
push
icebp
adcb
mov
mov
adc
stc
push
adcb
in
leave
out
sahf
icebp
sahf
movsl
pop
pop
inc
jne
or
rcrl
mov
das
adc
lret
mov
arpl
arpl
stos
daa
mov
pop
cmp
sahf
pop
add
adc
adc
addr16
push
ljmp
mov
cmpsb
iret
or
cld
loopne
int3
nop
aad
cmc
ja
loop
cmpsl
fldenv
mov
int
and
sub
push
mov
pxor
sub
mov
add
fldl
add
out
mov
fdiv
psubd
out
insl
mov
add
out
mov
sub
push
mov
sbb
fsubl
loop
sbb
pop
push
cld
jg
mov
sbb
insb
lahf
flds
jl
jns
fldcw
js
mov
add
mov
xor
xor
jno
mov
sub
push
mov
sub
xlat
push
movsb
fistpl
mov
call
xor
push
mov
movsl
movsl
out
js
je
jmp
movsb
pmaxub
and
movsb
insb
push
pop
fbld
cmc
jp
jbe
inc
xchg
movsb
ss
jb
pop
subb
xchg
xchg
ja
lods
test
mov
test
hlt
loope
push
sti
in
out
mov
inc
xchg
dec
fnstenv
rcrb
jmp
stc
sub
sub
inc
adc
mov
leave
mov
dec
sti
movsl
data16
loopne
es
lea
pop
jne
push
cmp
add
push
bound
mov
out
and
adc
in
mov
and
and
push
test
xor
and
xchg
popa
rcrb
int
rcll
int3
push
jbe
push
xor
repnz
mov
fildl
rorl
xor
jb
push
xchg
push
xlat
xchg
xchg
add
jecxz
pop
dec
inc
xchg
insl
out
xor
dec
addr16
xchg
add
lods
dec
popa
stos
fisubl
or
xor
ljmp
imul
mov
ja
fsts
inc
inc
stos
into
call
mov
loope
cltd
rcll
sti
xchg
aad
shl
pop
pop
inc
mov
shlb
outsb
lods
pop
push
popa
mov
cld
icebp
mov
das
sbb
push
jle
xchg
rolb
pop
jge
cmp
aam
test
mov
mov
in
ret
or
out
clc
in
xor
jmp
mov
inc
mov
jp
cmc
xor
loop
mov
fimuls
pop
in
jno
dec
mov
lret
jp
loopne
incl
daa
stos
ret
sub
mov
scas
je
pop
aad
cmp
lret
mov
int3
pushf
call
in
scas
jmp
and
insb
lahf
jae
movsb
push
jl
xor
popa
cli
sub
aas
sti
scas
push
cmp
movsb
addps
inc
mov
imul
dec
pusha
cmp
rorl
mov
repnz
mov
add
and
shlb
pop
mov
jno
cmp
mov
and
pop
mov
rcll
mov
inc
mov
pop
pop
in
mov
notl
je
out
xchg
jnp
ja
cs
mov
movsb
lahf
pop
mov
or
jp
scas
sbb
jo
aas
jbe
in
enter
sti
call
ljmp
rol
mov
mov
les
loop
stos
push
mov
adc
ret
std
rsm
hlt
fdivrs
pushf
mov
add
or
add
mov
xor
outsb
sub
mov
adc
insb
inc
mov
popf
dec
es
cld
test
jno
sbb
cmp
pop
dec
inc
lret
scas
sahf
pop
inc
decb
pop
rolb
xchg
and
frstor
xor
inc
cmp
mov
mov
insl
push
repz
enter
xor
push
sub
and
jge
daa
test
cld
mov
jnp
inc
mov
pop
int
ss
push
aam
fsin
sbb
cli
mov
xchg
scas
insb
call
xor
mov
ja
loopne
lods
out
imul
mov
lods
arpl
aad
clc
xor
in
imul
fimull
push
mov
mov
mov
cli
cs
out
inc
xor
cmp
inc
nop
cmc
fcmovnb
jnp
mov
cs
fwait
idivl
jne
cmp
xor
xchg
push
add
dec
jnp
cmp
pop
add
shrb
lcall
xor
je
sbb
sub
cs
and
hlt
popa
pop
sbb
mov
fadds
jp
shlb
sti
pop
jne
and
mov
lret
bnd
pop
push
in
loop
inc
shll
xchg
sub
inc
fsub
je
aam
xchg
aam
xchg
sbb
pop
repnz
dec
aad
iret
imul
out
jg
scas
fnsave
fstl
cmp
xor
mov
mov
cld
and
mov
fs
cmp
movsl
in
mov
nop
mov
cld
rolb
lock
outsb
test
xchg
movsl
popa
fdiv
test
add
ljmp
xor
mov
fisttpl
nop
cs
add
stc
stos
int3
scas
and
scas
mov
cmp
and
das
in
cmp
cmp
dec
addb
call
push
cs
out
es
sub
nop
cld
jle
inc
imul
leave
pop
jb
insb
lret
les
and
adc
fistpl
mov
sub
xorb
lcall
jae
out
pop
lods
stos
pop
pop
loope
mov
sub
mov
adc
rcr
mov
push
push
out
mov
add
sbb
cwtl
sarl
cs
incb
mov
and
lret
dec
data16
dec
push
sbb
push
sahf
in
mov
xlat
hlt
sbb
push
xor
push
sbb
xor
lea
in
mov
cmpsl
jge,pn
and
pushf
aam
ss
add
dec
push
pop
jle
pop
outsl
mov
arpl
xor
xchg
xor
xor
inc
pusha
sbb
mov
push
and
jg
mov
stc
outsb
mov
sub
clc
les
add
dec
cmc
adc
gs
cli
js
push
push
imul
or
hlt
cmp
xchg
insl
test
mov
push
scas
dec
cmp
lret
jnp
out
dec
and
mov
adc
outsl
mov
negb
loope
shll
aaa
push
sbb
cli
lock
xlat
inc
mov
cltd
push
pop
push
shr
jne
adc
or
or
fsts
mov
leave
outsb
in
ja
arpl
flds
mov
mov
shlb
or
and
push
lds
jno
in
popf
imul
fisttps
mov
mov
sub
pushl
sbb
lods
sbb
jmp
mov
in
xchg
push
cwtl
fistl
insb
loop
sbb
fdivrp
mov
out
fsub
pop
and
fwait
leave
adc
loopne
out
mov
cmp
lods
out
cmpsl
pop
sahf
push
aam
inc
lret
sahf
inc
ds
xor
gs
cmp
adc
cmp
cmp
jns
jbe
sahf
fisttpll
push
dec
repz
clc
sbb
push
jae
mov
cwtl
ja
addb
dec
scas
cmc
stc
in
xorl
dec
mov
jge
repnz
mov
mov
addr16
sub
ljmp
insb
sub
jg
sub
mov
addr16
popa
ljmp
cmp
int3
cwtl
pop
xchg
fnstcw
mov
les
cmpb
lods
ja
imulb
xchg
les
xchg
dec
loop
mov
inc
aad
add
in
jae
div
or
mov
ss
fwait
aam
aam
jmp
hlt
dec
or
pop
testb
dec
sub
loope
bound
sbb
pop
ljmp
test
cmp
mov
sub
xchg
loope
dec
xor
shrb
push
cmpsl
sti
hlt
fstl
out
and
push
xlat
push
push
jmp
and
adc
adc
or
test
loopne
ficomps
mov
mov
cltd
sahf
sub
push
aam
mov
push
bound
cmp
cmp
dec
mov
iret
loop
xor
arpl
dec
movsb
jge
ret
pop
andl
movhlps
add
mul
adc
fmul
mov
cs
inc
mov
sub
or
stc
int3
push
iret
cltd
mov
shrl
mov
lahf
push
mov
sbb
push
mov
cmp
and
mov
fistps
sahf
mov
cmp
rolb
fnstsw
mov
adcb
or
lock
mov
les
cmp
or
dec
add
mov
addr16
dec
jge
mov
jmp
scas
xor
mov
push
push
iret
dec
dec
cmpsl
dec
mov
mov
in
xchg
rorb
cmp
adc
or
adc
push
adc
dec
shl
push
mov
ret
mov
mov
movsb
and
pop
pushf
sub
cmp
sar
test
sub
mov
out
jp
imul
sbb
stos
mov
push
lods
in
mov
call
std
fwait
dec
testl
mov
inc
enter
push
dec
sub
cwtl
pop
jmp
sbb
lods
iret
into
ds
xor
imul
iret
aaa
imul
mov
mov
inc
jmp
lea
xor
fidivrs
dec
mov
or
addl
add
or
mov
push
insb
push
subb
adc
imul
sbb
ret
jg
mov
aas
imul
aas
ret
push
mov
inc
fcmovnb
jecxz
pop
mov
mov
popa
loop
cmp
or
mov
jnp
adc
add
and
push
int
push
inc
lods
pop
rcll
fs
test
and
stos
js
inc
iretw
sbb
aaa
stos
test
jle
movb
mov
push
mul
sub
fldenv
jbe
cmpsb
jmp
repnz
lret
clc
mov
xchg
push
cmpsb
mov
or
xchg
out
out
lahf
sub
pop
add
jg
lcall
repz
pop
clc
pusha
popa
xlat
cmp
xor
popa
scas
or
mov
ret
fs
lods
mov
lods
sub
mov
sbb
packsswb
nop
fwait
or
dec
push
jb
cwtl
nop
test
mov
scas
rclb
and
adc
push
mulb
clc
fcmove
repnz
aaa
xor
jp
imull
aad
jl
in
sub
jmp
mov
mov
mov
cmp
inc
loop
and
lahf
xchg
lods
sbb
cmovle
mov
push
dec
adc
mov
lcall
inc
iret
in
loope
scas
cmpsb
jae
lcall
xor
cmp
ljmp
ja
or
repz
fwait
sbb
orl
repnz
ljmp
xor
add
jae,pn
push
jecxz
pop
movsl
rcl
dec
loope
add
cmp
or
rorl
mov
mov
xlat
jecxz
in
lret
jno
mov
ss
aad
pusha
fcompl
gs
lods
push
lret
sbb
mov
int3
aaa
daa
and
hlt
jp
inc
call
xor
sbb
jne
icebp
sti
stos
xor
mov
mov
sarl
mov
or
cmp
xor
clc
loopne
std
popl
leave
fisubl
hlt
dec
test
roll
push
sbb
repnz
and
mov
push
out
jnp
mov
lock
xchg
and
test
xchg
mov
cli
xchg
aam
fdivrs
aas
bound
push
leave
popa
xor
je
sub
pop
fldt
inc
xchg
icebp
lods
imul
aaa
insb
test
test
jle
pusha
lret
hlt
mov
sub
xor
jb
or
clc
push
das
gs
dec
aas
push
push
mov
cmp
scas
sub
inc
lds
addr16
nop
in
dec
int
jmp
pop
inc
ficompl
push
inc
push
loope
outsb
in
sti
jmp
jo
mov
sbb
xor
pop
mov
mov
popa
xchg
mov
mov
xchg
pusha
adc
jns
ss
lret
push
inc
add
adc
push
rclb
adc
sbb
add
stc
xor
stos
aas
xchg
rorb
mov
icebp
scas
xchg
sub
fcmovnb
outsl
sub
sbb
nop
cli
in
jno
outsb
cmpsl
pop
inc
in
mov
lods
pop
push
adcb
sahf
stc
xlat
xchg
xchg
imul
inc
inc
jae
xor
mov
fistps
jl
push
pop
sti
fucomp
int
sub
xchg
test
fcmovnb
xchg
fdivl
out
orb
push
pop
mov
aad
mov
mov
in
mov
pushf
sbb
ss
xchg
or
add
cmp
jae
push
dec
jmp
mov
push
cs
mov
jl
clc
cmc
aas
mov
sbbl
outsl
dec
fildll
mov
mov
adc
mov
test
cltd
mov
xchg
xor
push
or
pop
pop
and
test
lret
xchg
in
ret
sbbb
aaa
push
xchg
icebp
adc
enter
ljmp
mov
xor
xor
rcl
icebp
mov
stos
into
add
adc
mov
jecxz
inc
sub
mov
sbb
push
mov
fldcw
inc
test
jl
sbb
stc
mov
inc
sbb
mov
std
pusha
ret
imul
and
mov
pushf
aas
scas
scas
fbstp
lds
aam
popa
test
hlt
test
mov
sub
cmovge
aaa
pop
nop
and
jo
mov
rcll
test
test
pop
lret
jge
push
sbb
cmp
jge
shll
pop
pop
sbb
dec
dec
loopne
or
in
lods
jecxz
mov
fwait
test
sub
cmp
scas
cmp
cld
xchg
lds
dec
mov
iret
push
popa
mov
pop
into
test
addr16
mov
add
jno
jge
insl
push
dec
insb
js
cmc
dec
mov
ret
push
out
and
sub
pop
or
cltd
adc
hlt
addr16
and
flds
lret
adc
or
mov
jmp
or
xchg
cmpsl
xor
popa
mov
sub
adc
mov
pushl
in
sub
push
push
add
shl
xor
push
call
or
in
add
lret
or
mov
adcl
cltd
jmp
inc
xor
btr
arpl
mov
insl
mov
push
add
or
hlt
xchg
and
int3
or
pop
pop
or
mov
jl
cld
outsl
cwtl
inc
out
out
outsb
cmp
jp
jo
popf
mov
lds
add
cli
fistl
ds
fists
jb
or
pop
shr
add
out
jb
and
jg
loope
aas
cmp
sub
jns
push
sub
inc
mov
mov
imul
into
and
rclb
dec
mov
in
fs
cmp
and
lahf
pop
mov
push
adc
cmc
out
xor
or
dec
imul
adc
adc
jbe
mov
arpl
push
pushf
mov
jmp
movsl
shlb
insb
cmp
add
int
inc
sbb
or
fs
jp
mov
out
lea
jb
cmp
testb
adcb
inc
and
fistps
scas
xchg
les
dec
bound
mov
ja
adc
aaa
xorb
lock
dec
lcall
pop
push
jp
and
daa
inc
push
or
aam
incb
pusha
cmpl
jmp
out
mov
je
imulb
cmp
loope
fsubrp
dec
xchg
and
add
mov
fstpt
cs
addr16
lret
sub
mov
leave
test
and
adc
xor
sbbl
mov
dec
call
sbb
mov
sahf
cmp
push
das
aam
sahf
cwtl
imul
iret
repz
mov
outsl
jecxz
pop
xchg
paddusb
je
sbb
and
dec
mov
outsl
xor
add
push
xchg
cmp
push
enter
outsb
hlt
mov
jge
inc
lea
orb
call
xor
int
pushf
adc
cmp
and
bound
sbb
sbb
imul
inc
pop
pusha
iret
ljmp
aad
sub
subl
jmp
jae
data16
mov
and
js
add
outsb
test
sbb
and
insb
mov
mov
mov
imul
enter
cmp
mov
inc
cmc
int3
fwait
outsb
or
dec
scas
fstpt
push
or
jb
push
jp
sub
rolb
test
hlt
hlt
pop
xor
ljmp
int3
sbb
push
mov
fbld
pop
mov
lods
rorl
xor
mov
mov
pop
cmp
in
fs
mov
inc
ret
into
lds
lahf
cltd
mov
ficompl
and
nop
xor
insb
inc
popf
jno
clc
fwait
mov
and
in
leave
repz
inc
int
push
push
call
cs
sub
loopne
gs
sbb
fs
shrb
imulb
std
or
inc
mov
sbb
pop
inc
cmp
pusha
pusha
xchg
jne
mov
sarb
mov
push
sub
jne
das
imul
cltd
mov
faddl
jbe
movsl
xlat
sbb
leave
leave
dec
push
lea
dec
outsl
pop
out
jb
fwait
popl
push
leave
push
lods
idivl
ret
ret
and
lods
and
mov
lahf
shll
adc
lock
cmpsl
popf
inc
inc
xchg
popf
lahf
inc
sbb
mov
mov
repz
fcoms
xor
jbe
movsl
adc
mov
popa
mov
pop
out
xchg
mov
cltd
out
push
js
inc
pop
cmpsl
push
je
fidivrs
fwait
mov
lods
mov
daa
addr16
jbe
dec
imul
sbb
andl
xchg
bound
add
dec
pop
std
enter
dec
cld
mov
xchg
xor
dec
aas
push
mov
in
imul
aam
fs
push
cmp
push
scas
sahf
mov
data16
cmp
arpl
scas
inc
and
pop
lret
jb
in
add
lcall
pop
jmp
inc
xor
inc
pop
pushf
lock
inc
sti
jmp
ja
cmp
sbb
lahf
int3
lods
dec
popa
out
mov
int
stos
js
inc
push
cmpsb
imul
ficomps
ljmp
std
xlat
aad
pop
insb
jbe
mov
or
push
adc
in
ljmp
jnp
pop
jl
mov
xchg
xchg
pushf
cs
int3
sahf
hlt
insl
fldl
adc
popf
insl
dec
jno
dec
bound
jo
sub
sbb
jecxz
cmp
cs
cmpsb
mov
sub
notb
xchg
aad
ror
mov
jle
mov
in
sub
lds
mov
push
jnp
sbb
bound
aam
test
out
xor
aas
lds
jecxz
in
sahf
std
mov
ljmp
sub
stos
jbe
pop
out
jo
cmc
xchg
jb
xor
mov
push
inc
ret
sub
xor
nop
in
pop
sub
push
test
popf
sahf
mov
test
sahf
push
in
mov
mov
mov
inc
gs
aam
les
daa
push
test
xchg
pop
or
dec
ds
and
fisubrs
cmc
fadds
push
addl
sub
into
lods
jg
add
insb
xchg
push
ja
sti
ss
pop
mov
sub
pop
add
cwtl
call
addl
insb
jno
pand
inc
fidivl
in
mov
adc
push
cmp
aaa
aas
repz
insb
pop
les
daa
push
mov
jne
pop
and
test
xor
movsb
pop
sbb
inc
iret
fisttpll
aaa
fxch
mov
add
mov
stos
sbb
sti
imulb
ret
dec
mov
xlat
sbb
add
mov
dec
sub
adc
dec
jge
cwtl
jae
and
stos
add
sub
cmp
daa
inc
sub
aam
jl
sbb
xor
or
jae
xchg
ror
outsb
add
outsb
mov
inc
sbb
and
inc
out
sub
outsl
cs
popf
mov
mov
icebp
cmp
adc
in
icebp
call
xchg
sti
pusha
arpl
out
lods
adc
or
das
pop
es
scas
dec
mov
xchg
xchg
stc
mov
cli
xchg
in
ss
jg
cmpsb
fmuls
cmpb
pop
mov
add
xor
xor
mov
and
pop
daa
lahf
arpl
sbb
pop
aad
mov
or
popa
stos
lcall
mov
mov
xchg
das
je
pop
hlt
gs
fcmovnbe
pop
inc
push
inc
push
or
orb
dec
push
sub
mov
push
aaa
lods
adc
jl
adc
outsb
movl
sub
popa
fnsave
ja
scas
add
repnz
mov
mov
call
xlat
adc
sarb
sub
in
add
stos
mov
aaa
jle
and
cwtl
adc
fldenv
jle
jmp
sbb
into
jne
pop
mov
stos
icebp
pop
add
negl
das
js
aad
mov
jl
subb
aad
pop
sti
popa
push
mov
and
lock
pop
pusha
cmpsb
addl
dec
dec
inc
cltd
add
jge
adc
mov
outsb
or
inc
mov
inc
test
jb
sub
mov
sub
in
in
sahf
xorb
or
mov
out
push
sub
sbb
and
xor
insl
ja
call
insl
popf
scas
mov
jno
mov
dec
scas
inc
movsb
add
movsb
add
mov
insl
and
negb
cwtl
scas
roll
jb
push
mov
push
adc
jl
or
imul
lods
pop
pop
push
dec
mov
out
mov
cmp
sbb
xor
lahf
mov
stos
mov
imul
les
lock
jge
xchg
std
inc
iret
pop
xor
jns
or
push
out
aad
fisubl
fs
xchg
xchg
mov
inc
stos
jge
scas
es
lock
add
jno
sub
adc
repnz
js
xlat
sub
push
jno
iret
jmp
mov
mov
jae
mov
push
inc
loopne
mov
mov
mov
mov
sbb
sti
inc
dec
int
out
aam
or
push
imulw
xchg
popa
clc
ljmp
mov
addr16
mov
insl
and
ret
xchg
imul
dec
out
mov
or
sbb
icebp
fcompl
imul
imul
or
ret
adc
cwtl
sub
out
push
add
enter
adc
and
cmovbe
cwtl
mov
and
jns
sub
call
and
mov
xor
fsubs
sub
xchg
stos
adcb
xchg
popf
jno
xor
and
or
xor
mov
hlt
lret
outsb
int3
daa
xor
mov
lock
mov
sbb
fcomp
mov
imul
jmp
aaa
jbe
jbe
popl
movsb
mov
add
and
cmpsb
mov
dec
inc
jno
mov
mov
das
fmull
pop
xor
and
xchg
scas
cltd
call
mov
add
xor
and
sti
cltd
les
daa
pop
mov
push
pop
ja
xchg
pop
scas
cltd
test
inc
xchg
push
sarl
add
mov
fidivrs
cltd
sub
mov
outsb
leave
fwait
inc
lcall
imul
and
add
lret
mov
in
pushf
xchg
or
nop
push
mov
pop
leave
out
cmp
stos
out
ret
dec
pop
add
shrb
ja
es
sub
cli
mov
pop
stos
cwtl
inc
ret
ds
or
cld
in
mov
sbb
adc
roll
mov
mov
lahf
pushf
mov
jo
jle
in
stos
jmp
inc
xrelease
sbb
jge
mov
rcr
data16
and
dec
daa
jmp
icebp
addl
cltd
inc
jmp
sti
sub
push
adc
xchg
add
int
push
gs
in
arpl
in
push
nop
adcl
adc
mov
imul
lret
adc
mov
popf
fisttps
sbb
pop
mov
adc
out
cli
outsl
aas
rcrl
movsb
imul
jg
xchg
add
mov
ds
cmp
js
into
sarw
xchg
mov
and
mov
inc
mov
xchg
aaa
std
je
data16
pop
mov
loope
mov
lods
hlt
mov
ljmp
cmp
les
mov
shll
jae
notb
ja
push
pop
shrb
testb
mov
lock
push
clc
push
aad
add
xchg
and
push
dec
aad
sub
jno
scas
push
leave
in
ljmp
int3
push
xchg
sub
xor
mov
mov
mov
lahf
movsb
cmpsb
out
push
xchg
pop
inc
je
ss
cmpl
cmpsl
dec
push
repz
insb
hlt
das
and
jecxz
push
xchg
cmp
xor
repz
clts
insl
loopne
fsubp
dec
lret
add
sar
dec
hlt
fadd
jge
mov
mov
in
addb
nop
rclb
test
les
lret
jle
pop
fldt
lods
push
xor
cltd
data16
jmp
ljmp
les
or
or
xchg
loopne
fs
ds
jo
xchg
test
pusha
mov
adc
lret
repz
insl
mov
sub
mov
or
adc
cmp
inc
push
in
xor
cltd
loopne
push
mov
xor
sbb
mov
int
arpl
cwtl
mov
add
push
and
enter
les
jmp
sub
mul
cmc
aam
movsl
or
jecxz
push
mov
decb
xlat
mov
jp
and
xchg
add
aas
add
xchg
push
daa
mov
fcoms
mov
std
mov
pop
inc
mov
lods
pop
insb
repz
mov
and
sti
aad
ret
cmp
and
xchg
add
push
mov
rcrb
pop
adc
out
sub
sbb
xor
mov
pop
lds
add
jae
xchg
push
aam
adc
and
cmpsb
inc
scas
lret
mov
jnp
enter
push
mov
shr
pop
mov
dec
cmp
xchg
inc
sub
or
nop
jne
nop
inc
pushf
xor
aaa
je
push
sysexit
out
push
fbld
js
in
sub
pop
nop
idiv
or
jmp
addl
andb
mov
sbb
lret
jb
push
push
pop
add
and
xor
in
sbb
inc
fsubrl
mov
pop
test
pop
xchg
mov
lcall
pop
inc
rorb
leave
mov
add
fs
js
adc
shlb
inc
std
cmpsb
iret
sti
mov
pop
and
inc
cli
add
rorl
adc
cmpsb
push
dec
sbb
nop
sbb
jmp
mov
shrl
movsl
in
push
leave
ljmp
loop
inc
stos
lock
dec
add
pop
inc
repz
add
fldcw
sarl
out
inc
mov
bound
add
sbb
cmpl
pop
fsubrs
dec
mov
pop
loopne
hlt
loop
js
adc
jo
jb
ror
xor
imul
inc
add
lcallw
rol
and
sbb
stos
adc
mov
push
mov
stc
jmp
add
jbe
inc
hlt
jg
xchg
mov
sbb
xchg
mov
and
lds
in
ljmp
pusha
xor
hlt
pop
pushf
stc
mov
hlt
or
int3
mov
movsb
pavgw
rorl
insb
push
sahf
out
push
cmc
xlat
out
pop
loop
scas
or
push
xchg
sbb
push
cmc
dec
sbb
mov
rol
mov
dec
jg
sti
and
bound
xchg
lret
iret
adc
ret
mov
int3
dec
out
lods
int3
sbb
and
test
repnz
clc
adc
repz
xor
or
test
pop
jae
bnd
in
es
dec
dec
lock
xor
xchg
nop
adcl
scas
mov
xor
jl
nop
test
scas
fisttpl
pop
mov
mov
jp
jo
ss
push
add
lock
pop
movsb
cld
ret
pop
xor
scas
xlat
test
add
in
xchg
push
mov
inc
in
stos
cmpsb
dec
cltd
mov
push
popf
mov
xchg
stos
cmp
pop
cmp
add
cltd
aaa
cwtl
xchg
ror
pushf
std
out
pop
scas
les
fucomi
jge
das
add
arpl
and
in
dec
scas
jnp
add
cmpsl
std
fwait
aas
cmpsb
gs
mov
sub
stc
pop
lods
testb
ds
adc
mov
adc
stc
fs
mov
in
inc
daa
mov
popa
xor
pushl
sbb
mov
decl
loop
fistl
cmpl
sbb
add
fcomip
clc
mov
cli
mov
mov
lds
dec
dec
push
imul
or
out
std
push
push
stos
cmp
ds
dec
std
out
jno
xchg
test
adcl
pop
jne
lods
pop
out
pop
adc
jecxz
test
call
mov
add
cmc
sub
mov
mov
loop
or
inc
mov
add
subl
adc
push
outsl
enter
push
or
push
jne
shlb
dec
cmp
push
lods
dec
cli
jno
sub
lock
insb
dec
or
or
das
cmp
add
push
icebp
and
sbb
repnz
popf
mov
jne
push
dec
lods
scas
cld
inc
repz
stc
adc
movsb
sbb
sarl
xchg
test
sahf
inc
clc
fldt
test
pop
lock
stos
loope
icebp
cmpb
addr16
sbb
inc
clc
add
and
dec
hlt
movsb
pop
add
cmp
sarb
shl
shrl
movsl
cmp
cmp
push
mov
hlt
push
jmp
out
mov
jmp
mov
jnp
mov
inc
gs
push
cmp
mov
sbb
dec
sbb
frstor
and
sub
testb
push
loop
xlat
mov
out
call
cmpsl
lods
fucomi
sbb
mov
push
hlt
dec
xchg
dec
fnsave
jle
inc
mov
xchg
dec
enter
imul
rcrb
push
jae
push
push
mov
int3
pop
push
aas
test
push
xor
cmp
cmc
mov
lock
lods
inc
jnp
xor
cmp
in
jns
mov
fistl
inc
lods
push
popa
adc
daa
xor
aam
movsl
aad
dec
lods
in
cwtl
bound
pushf
cmp
cld
out
addr16
and
xchg
movsl
or
dec
jmp
mov
mov
dec
mov
adc
jns
fstpl
push
adc
out
adc
pop
cmpsb
xor
dec
mov
shll
iret
adc
push
adc
pop
out
adcl
xchg
jl
mov
imul
in
rol
xor
cmp
repnz
sbb
ljmp
mov
jmp
stos
mov
add
jl
lahf
pop
aad
and
sarl
cmp
mull
cmp
in
std
mov
mov
adc
pop
stos
fwait
daa
dec
int
jae
pop
insl
aas
lahf
enter
push
in
adc
clc
sti
pop
and
dec
dec
inc
imulb
in
add
daa
mov
scas
or
call
shl
outsb
dec
sahf
test
pop
mov
push
fcmove
scas
fimull
int3
sub
mov
xchg
je
mov
arpl
lcall
mov
imul
in
test
jbe
push
xchg
xor
scas
popf
xchg
xlat
pop
cmp
mov
aad
sti
rcll
stos
xor
imul
ret
pop
jg
bound
jo
dec
cs
mov
leave
outsl
push
arpl
mov
fcoms
fadds
inc
popa
mov
mov
movsb
fcoml
inc
ret
lret
loopne
popf
push
inc
push
lods
mov
lahf
push
in
insb
cwtl
movsb
ljmp
movsb
inc
mov
lcall
jnp
negl
mov
imul
movsl
pop
lods
pop
mov
fistpl
pop
aas
sub
jns
xchg
or
and
aad
psubsw
or
mov
test
mov
mov
lock
xor
mov
add
inc
sbb
pop
or
testb
mov
jp
stos
hlt
adc
and
fnstenv
test
insb
mov
jns
pop
add
mov
push
test
stos
or
cltd
sub
sub
sub
fsts
mov
ja
jle
aaa
mov
adc
fidivs
xor
inc
in
cmp
decb
pop
out
mov
xor
subb
sahf
or
insb
and
sbb
ror
add
cld
mov
jno
jmp
push
es
lods
jmp
cmpsb
fnstenv
mov
movsl
loope
pop
add
mov
aam
jge
idivl
push
adc
and
xor
inc
std
mov
and
jbe
xor
push
es
sub
insb
inc
jbe
jo
mov
pop
leave
and
mov
xlat
push
xor
sbb
faddl
push
sahf
jg
jp
iret
std
push
mov
jl
orl
xchg
stc
pop
xchg
push
mov
adc
dec
rcl
in
lds
mov
idivl
fisttps
xchg
xchg
jecxz
mov
incb
xlat
xchg
fwait
jne
and
dec
sub
pop
mov
stos
pop
idivl
dec
mov
lret
shlb
pop
mov
cmp
int
add
adc
inc
add
movsl
sbb
pop
cmp
popf
sub
sub
adc
mov
pop
xor
mov
jecxz
pop
sub
jmp
mov
arpl
push
inc
cmp
mov
dec
add
movsl
jge
imul
jmp
mov
subl
aam
popa
cmpsl
mov
test
stos
and
rolb
cmpsb
jmp
or
mov
sarl
mov
call
jp
push
scas
pop
mov
sub
loope
pop
add
or
jmp
mov
imul
insb
adc
cs
mov
xchg
lods
idivb
movups
in
sub
jns
aaa
or
popf
mov
cmp
push
imul
popf
push
jge
sarl
iret
mov
jp
out
shl
mov
aas
or
mov
fadds
cmp
sub
xchg
mov
jecxz
mov
or
and
pop
mov
lea
pop
jo
sub
idivb
push
testb
pop
stc
cli
dec
je
push
imul
cmp
sub
leave
inc
lods
stc
stc
mov
inc
inc
loope
sub
pusha
pop
mov
repnz
xchg
dec
out
sub
test
and
xor
pusha
adc
jg
das
shrl
enter
dec
aad
xor
inc
sbb
dec
add
scas
or
test
mov
sbb
lret
aam
fsubrs
push
ret
push
adc
jp
shll
mov
lea
pop
cmp
sbb
mov
xchg
rol
add
dec
sub
fcoms
cli
ret
test
jo
out
or
adc
push
dec
pop
cmp
mov
std
mov
fnstsw
mov
sbb
stc
sub
fdivp
stc
jmp
xlat
inc
sub
cmp
loope
sub
xchg
inc
nop
pop
sahf
inc
jp
loope
ret
aaa
push
inc
cmc
or
inc
add
movsb
iret
mov
pop
sbb
loopne
jnp
fildll
pop
push
nop
mov
add
js
ret
mov
fwait
js
adc
inc
jne
aam
add
outsl
popf
add
jnp
xchg
andl
xchg
cmp
xchg
cmp
nop
xchg
xor
sub
mov
mov
mov
jb
inc
sbb
xchg
loope
cmp
fimull
stos
xchg
fst
sahf
push
push
das
or
pop
pushf
mov
push
xlat
inc
inc
adc
call
fstps
mov
push
mov
divb
pop
lods
or
inc
jno
mov
or
iret
imul
outsb
movsb
insb
or
cli
mov
sahf
xchg
xlat
lea
in
xchg
aad
outsb
pop
in
les
jecxz
rorl
mov
ret
mov
scas
inc
sbb
repz
jno
and
xor
add
xchg
jne
iret
outsl
ja
inc
xor
add
fnsave
xor
cmp
adc
out
in
dec
xchg
stos
popa
add
pop
lcall
or
fnstcw
je
scas
andb
jne
popf
adc
dec
outsb
test
xchg
mov
inc
test
fidivl
ss
push
push
fs
mov
data16
popf
lea
or
mov
mov
xor
push
int
ljmp
outsl
imul
xor
test
dec
outsb
mov
mov
cmpsl
dec
jge
pop
lea
xchg
leave
mov
lcall
pop
or
xor
mov
mov
jge
jge
movsl
sub
int3
dec
xor
jge
ljmp
stc
or
scas
clc
fdivp
fiaddl
aam
jno
sub
les
add
aam
insl
xchg
imul
sub
cmp
sub
cmpb
xor
and
mov
ret
aam
jecxz
outsl
jmp
lret
push
mov
push
cmc
inc
pop
ja
enter
sbb
mov
repnz
outsl
sahf
testl
cmc
aam
dec
pusha
cmovne
mov
adc
fistps
rcrb
fcomps
dec
mov
dec
imul
pop
std
cmp
mov
adc
and
pushf
or
adc
mov
arpl
mov
mov
in
data16
lds
mov
add
xchg
insl
dec
andb
stc
pusha
or
jp
cmp
xchg
add
jmp
and
stc
mov
jmp
inc
push
lea
inc
sub
repz
out
lods
clc
push
in
xchg
ss
lret
scas
and
mov
sub
pop
add
int3
inc
inc
into
add
pop
and
xchg
hlt
es
mov
rclb
jle
push
jb
and
fcmovnb
adc
push
push
mov
and
nop
popf
clc
daa
xchg
outsb
rcl
notb
dec
cmpsb
subl
push
test
xchg
notb
jae
cmpb
and
sti
and
mov
adc
xchg
pop
jb
shrl
mov
pop
xor
dec
jb
fwait
jns
and
and
adc
fidivs
add
pushf
jmp
dec
je
int3
movsl
cmp
dec
inc
movsb
pop
mov
sbb
das
xor
int3
mov
fcomi
fidivl
cltd
mov
sahf
sbb
int3
inc
stos
daa
inc
arpl
mov
mov
sub
sbb
inc
js
mov
mov
addb
cwtl
out
stos
mov
adc
mov
sub
scas
mov
test
sbb
xlat
xchg
jbe
mov
mov
xchg
fdivr
jo
lock
adc
shrb
stos
lods
stos
pop
imul
pushf
fcoml
sbb
cltd
push
and
pop
adc
mov
repz
sub
sahf
or
cld
lahf
sbb
or
mov
dec
popf
je
in
inc
xchg
adc
add
popa
outsb
std
inc
cmc
outsl
sbb
dec
aaa
shll
fst
into
mov
call
ja
fsubrl
inc
pushf
push
sub
inc
pop
fwait
lock
js
andb
aaa
or
movb
loope
popf
lods
test
test
out
popa
stos
dec
lret
arpl
adc
inc
fdivrl
int3
fadd
pop
add
adc
in
cmp
inc
and
mov
lods
fdivrl
std
ljmp
imulb
andb
outsl
rorl
icebp
mov
aas
dec
add
add
out
jbe
sub
mov
orb
or
cs
mov
pop
lods
enter
int
lods
insl
mov
xchg
pop
and
loop
xchg
jecxz
push
dec
lock
sub
lcall
add
xchg
sub
aas
push
mov
sbb
cmp
out
out
ss
xchg
aaa
adc
push
cmp
jbe
aaa
mov
cwtl
hlt
aaa
scas
fwait
dec
inc
cmp
aaa
mov
testl
xlat
xchg
dec
sub
pop
nop
ret
les
push
outsl
shll
cltd
fldcw
pop
jge
or
and
adc
add
dec
push
mov
pop
inc
enter
fsubr
mov
pop
sub
aas
out
push
xchg
sarl
repz
mov
insl
add
ret
test
and
dec
push
ljmp
mov
out
pop
cmp
movsb
mov
xchg
fsub
xor
jle
pop
ds
cmc
nop
sbb
icebp
rcrb
or
dec
jl
add
xchg
fbstp
xrelease
jmp
sti
dec
js
dec
and
bound
es
int
adc
incl
sub
jl
es
insl
dec
jno
or
test
xlat
add
push
jns
mov
jp
hlt
movsb
loop
aad
dec
adcl
aaa
push
xor
jnp
ja
stc
lods
pop
loopne
mov
adc
adc
pop
lock
test
cmp
push
ds
sub
mov
jecxz
movsl
and
bound
outsb
js
xorl
cs
subb
add
mov
popf
sarb
jl
loope
jns
int3
mov
add
push
in
mov
inc
jnp
aam
rorb
inc
das
out
dec
jnp
adc
or
call
mov
call
repnz
mov
sub
pop
and
mov
mov
and
cld
arpl
push
fsts
mov
je
in
push
imul
fisubl
add
xor
xchg
xor
out
xor
gs
cs
dec
xchg
pop
out
cmpsb
and
mov
ret
ljmp
repz
les
orb
sub
call
daa
test
mov
fistpll
mov
mov
mov
sbb
add
mov
mov
mov
mov
sbb
cmpsb
imul
inc
pop
cmpsl
inc
push
js
dec
nop
imulb
lahf
sahf
dec
es
mov
in
sub
adc
sub
jecxz
stc
ret
stos
lods
adc
pop
pop
int
imul
jle
adc
int3
je
subl
cmpb
cwtl
inc
ret
sub
xchg
push
fcomps
xchg
and
fcomip
js
pusha
sub
popf
into
xchg
or
xor
mul
mov
mov
test
orl
test
jno
sti
jge
push
outsb
sarl
xor
ret
pop
lret
or
inc
mov
fsubrp
std
mov
cmc
repz
fsubrs
cmp
dec
ret
imul
lcall
adc
fcoms
push
add
lock
xchg
inc
sbb
notl
jbe
std
ss
loopne
dec
popa
xchg
loopne
jne
sub
mov
popa
inc
loop
aad
jns
daa
push
lea
not
in
and
fisttpll
aas
xor
jle
sub
outsb
call
add
push
xchg
aad
out
cmp
insl
pusha
push
pop
ret
xchg
enter
add
cwtl
push
pop
add
subb
push
push
out
jg
or
xchg
dec
lret
stos
pop
push
xor
mov
xchg
lahf
scas
sbb
pusha
mov
mov
int
in
mov
mov
stos
out
mov
xchg
leave
adc
xor
cltd
stc
sahf
in
es
pop
mov
fisubs
pop
leave
lods
sti
jns
jb
out
cmp
call
sub
shl
mov
sahf
rcrb
xor
movl
and
sbb
imul
or
fidivrl
js
pop
jecxz
push
outsl
jb
sbb
inc
or
pusha
mov
in
fldt
pop
dec
orl
fnsave
add
inc
inc
xchg
push
push
movsb
adcb
push
xor
nop
sbbl
push
aam
hlt
sub
cmpb
bound
add
mov
sub
sar
loop
sub
loope
mov
cld
int3
sub
xor
mov
ret
and
adc
int3
shrb
xor
or
js
arpl
jp
inc
fldt
push
ljmp
add
push
dec
outsb
xchg
adc
hlt
jecxz
mov
sbb
pusha
lret
mov
mov
mov
idiv
pmulhuw
sbb
dec
fcompl
inc
push
add
lret
jmp
cmp
cmp
xchg
bound
repnz
push
nop
insl
cmp
dec
sub
jge
xor
inc
iret
pushf
lock
outsb
ret
rorl
xchg
mov
js
mov
ds
mov
fmuls
dec
inc
ja
push
cltd
addr16
adc
out
sbb
jmp
imulb
mov
push
inc
pop
dec
in
and
mov
xchg
mov
in
jl
fadds
in
das
test
addr16
xchg
orb
aam
bound
sti
fnsave
pushl
test
cmpsl
jns
pop
sbb
das
or
test
mov
stc
sbb
or
lods
aaa
repz
mov
push
or
sub
sahf
lcall
in
cmp
stc
push
inc
out
movsl
sub
pinsrw
ljmp
mov
add
sbbb
push
mov
push
loop
das
or
dec
pop
cli
es
lods
lahf
jb
cmp
andl
clc
inc
hlt
cwtl
adc
mov
pop
jg
add
loop
xor
and
xor
cmc
in
aam
cmpsl
aas
shlb
mov
pop
pushf
scas
cli
push
dec
jae
or
mov
arpl
push
scas
stc
stos
and
or
pop
jmp
clc
pop
dec
dec
icebp
pop
jg
pop
inc
mov
jle
lcall
pop
and
jnp
xchg
jge
push
dec
es
xor
out
bound
mov
sbb
jbe
insb
fidivs
cmp
inc
mov
push
fisubl
cmc
xchg
gs
mov
lahf
cwtl
jbe
lods
push
shrl
xchg
adcb
mov
pop
mov
dec
push
push
stos
cwtl
fisubrs
cmp
aaa
arpl
jb
or
pop
jns
js
lcall
mov
inc
pop
sub
lea
push
xor
adc
cld
jmp
inc
movsl
ja
pop
jne
fwait
jmp
cli
push
adc
sbb
lea
pushl
rorb
mov
mov
jno
inc
or
dec
mov
xor
jns
je
fucomi
mov
adc
xor
jo
push
inc
push
or
fdivrl
sub
faddl
ss
out
xor
movsl
sub
dec
xor
cs
test
adc
lahf
adc
mov
fmul
sub
mov
sbb
jno
dec
sti
xchg
sbb
es
cmp
movsl
mov
push
pop
rcll
loopne
ffree
cmp
fwait
pop
lret
pop
movsl
stos
cmpsb
jl
pop
aaa
arpl
scas
inc
cwtl
fisttpl
fisttpll
xor
xor
test
aad
mov
dec
add
push
dec
fwait
pop
ljmp
insb
pop
jo
test
ja
push
adc
popf
pop
mov
sbb
test
mov
xor
cld
mov
and
ss
sti
loopne
mov
inc
ss
jmp
test
lret
icebp
xor
gs
sub
push
int
inc
mov
pop
and
or
test
mov
andl
inc
test
fdiv
out
dec
popf
and
inc
out
sbb
jne
aas
imul
and
cmpsb
bound
xor
jb
jbe
mov
push
jne
add
scas
loope
mov
int
fnstcw
push
mov
scas
cld
push
pop
inc
ret
clc
loopne
add
out
jne
lods
repz
cltd
insb
pop
dec
xchg
lret
scas
jge
sub
xchg
xor
sbb
in
or
add
pop
iret
push
notb
push
or
lock
add
mov
nop
lock
into
pusha
in
std
hlt
adc
mov
add
jle
test
clc
add
stos
stos
test
data16
adc
in
xorb
dec
lea
sub
xchg
adc
push
out
shl
xor
iret
inc
fdivrp
mov
stos
cmp
jge
pop
push
xor
jg
xorl
pop
jns
cmpsl
add
sahf
mov
ds
addb
sbb
imul
fidivrl
or
ds
add
ss
aas
pushf
mov
stos
in
andl
push
mov
adc
push
arpl
test
sub
popf
fsqrt
insl
sub
bound
movsl
jb
or
jmp
shlb
cmp
adc
and
push
push
xchg
into
jmp
xchg
cwtl
lcall
push
sub
mov
cltd
hlt
jns
inc
ret
jmp
out
idivb
jle
loope
mov
add
stos
dec
int3
and
inc
ds
shr
aas
inc
mov
mov
leave
mov
sti
xlat
pop
jmp
dec
add
daa
cmp
mov
add
jb
and
pusha
sarb
nopl
mov
out
aaa
mov
dec
inc
jecxz
addr16
jb
repz
or
adc
xchg
divl
inc
sbb
jl
and
rorl
push
lea
push
pop
pop
mov
xchg
mov
icebp
sbb
orb
dec
pop
imul
loope
lahf
dec
loope
or
lret
mov
insl
lods
pusha
jl
sbb
or
add
loop
mov
mov
cmp
adc
sbb
inc
sbb
sub
mov
lret
lret
push
sahf
rorb
lock
adcl
and
aam
leave
or
inc
mov
push
push
mov
arpl
cli
mov
pop
int
lahf
jb
aaa
mov
xchg
je
pop
inc
push
call
fnsave
inc
fs
dec
repnz
mov
fsub
orl
mov
mov
mov
pmaddwd
int
lods
jnp
add
mov
and
adc
sbb
repnz
mov
pop
fdivrl
out
pop
insl
cmp
ljmp
xchg
xchg
hlt
sbb
jl
int
mov
xchg
sbbb
mov
fs
inc
int
pop
xchg
popa
in
int3
pop
and
sbb
or
enter
insl
hlt
loope
mov
ljmp
loop
insb
daa
aam
pop
jns
stos
pop
add
xchg
push
sub
bound
cmp
jnp
fdiv
mov
test
adc
push
lcall
sub
cmp
cmp
mov
rorb
pop
clc
cld
adc
int3
cmp
mov
xchg
cmp
sub
std
in
je
loopne
inc
rcrb
hlt
sbb
pop
cmc
mov
push
pop
leave
jecxz
xorb
mov
hlt
es
out
mov
push
out
push
les
rorl
mov
fwait
dec
cld
jns
jnp
pop
aam
mov
push
je
sbb
sub
data16
inc
xchg
aas
or
push
pop
inc
sbb
adc
popa
sub
sarb
or
scas
pause
mov
sbb
cmp
mov
cmp
push
xlat
popf
dec
js
push
inc
dec
push
test
int
cmp
daa
inc
cmp
xor
jae
cmp
pop
out
push
xchg
xchg
mov
adc
shll
lea
std
lcall
subb
cmp
insb
inc
xchg
mov
mov
les
mov
push
jmp
gs
leave
mov
adc
shll
loope
adc
or
imulb
adc
repz
sub
sbb
jo
cmp
fadds
out
jmp
jns
shl
mov
mov
pop
lret
pop
jp
xchg
stos
scas
xchg
sub
push
sahf
ret
jbe
aaa
outsb
ja
and
mov
call
xchg
xor
out
mov
loop
adc
and
sub
jae
movsb
or
es
dec
das
and
roll
jns
cmp
sti
inc
mov
sarb
into
mov
xchg
mov
mov
mov
xchg
mov
orl
rorb
shrl
bound
cmp
mov
or
rol
or
push
scas
and
arpl
dec
pop
dec
xorl
adc
inc
sahf
xchg
lahf
data16
into
or
or
jbe
mov
lods
pusha
movsb
ljmp
sub
fcompl
pop
xchg
xlat
enter
dec
shl
push
cld
or
adc
pop
pop
mov
in
jg
push
adc
or
mov
push
cmp
sbb
mov
dec
cmpsl
imul
sahf
xor
aaa
repnz
mov
fbld
jb
pop
popf
das
and
pushf
or
push
inc
fcomps
xor
popf
ja
mov
jnp
sbbb
cld
in
sbb
fstl
jbe
scas
sub
ja
mov
dec
stc
mov
cmp
jbe
mov
xchg
mov
push
dec
add
mov
adc
mov
rcrl
test
pop
push
aam
jge
sahf
pop
mov
mov
jmp
cmp
cmp
aas
mov
sub
fsubrl
push
mov
xor
out
cli
cmp
in
sub
fsubs
and
pusha
pusha
inc
or
jno
xchg
dec
pop
adc
ljmp
fisubrs
push
mull
out
mov
mov
insl
jmp
in
orb
lret
xchg
dec
mov
lret
test
sub
sbb
sbb
addr16
fimull
mov
push
mov
shlb
rcrl
xchg
pop
mov
mov
in
andl
adc
mov
jmp
mov
outsb
mov
mov
mov
sbb
pop
jge
fnstcw
and
int
pop
test
jle
fldl
loop
fsts
mov
cmp
scas
shrb
sbb
mov
filds
xchg
ret
jp
add
aaa
dec
dec
xchg
inc
ret
outsl
xchg
pop
cmp
inc
jle
lods
xor
insb
pop
mov
imul
mov
pop
pushf
mov
repnz
and
jmp
ret
int3
ret
fnsave
jle
jno
insb
add
or
sub
mov
mov
int3
movl
mov
cmpsb
pusha
jmp
leave
sbb
movsb
fistl
out
clc
popf
cmp
jnp
stos
add
pop
add
cmp
push
ds
inc
fmulp
jne
mov
mov
aad
stc
or
aad
and
sahf
test
dec
pop
fcomip
cmp
inc
inc
sbb
pop
fnstenv
fwait
xlat
adc
add
jne
xchg
or
and
out
pushf
or
inc
pop
xor
rcl
dec
xchg
xchg
dec
roll
outsl
pushf
jno
ret
test
cmp
shlb
fcomps
cmp
dec
cld
xlat
or
jae
mov
mov
adc
mov
inc
jl
jecxz
in
sbb
jge
out
mov
jmp
cld
test
cmp
repnz
dec
mov
jecxz
nop
ss
mov
xorb
dec
mov
insl
sbb
sbb
xchg
jne,pn
pop
adc
leave
jbe
jo
inc
lret
outsb
xchg
mov
sbb
fs
xchg
xchg
mov
sbb
scas
lea
xor
push
test
push
sbb
cmp
ljmp
test
xchg
ret
je
outsl
sbb
and
jle
sub
mov
mov
push
fnsave
std
rclb
mov
push
push
jns
mov
add
sbbb
repnz
mov
mov
mov
call
shrb
aam
dec
cmpsb
cmpsb
push
mov
out
mov
cmp
aaa
inc
es
jb
pop
mov
movsl
test
cmpsl
add
sub
jb
test
sbb
and
incb
inc
ljmp
cltd
in
fisubl
jg
inc
push
jl
dec
ljmp
pop
in
dec
mov
sbb
mov
pusha
inc
inc
ret
dec
or
mov
bound
sti
cmc
std
sub
std
xor
out
outsl
fdivrl
pop
clc
sub
mov
jge
out
rcll
and
addr16
call
add
js
pop
aas
xchg
loop
mov
cmpsb
out
sbb
sbb
push
lret
je
jno
leave
jo
sbb
out
in
dec
xchg
inc
inc
cmp
lock
fistpll
and
fwait
lret
jge
dec
dec
sbb
sbb
data16
lea
and
dec
sbb
je
sbb
pop
add
xor
leave
xlat
sbb
adc
xchg
mov
lahf
clc
push
or
fsubl
adc
pop
sub
faddl
lcall
inc
ljmp
xchg
xchg
les
js
je
pop
rcll
sbb
lea
mov
movsl
adc
cli
shll
insl
mov
rolb
popa
cmp
adc
pop
push
lcall
cwtl
fsubr
adc
jbe
inc
mov
sbb
mov
rcll
into
sub
xchg
aas
mov
hlt
in
jg
sub
cmp
addr16
jmp
iret
adc
mov
xor
shrb
add
repz
add
addr16
daa
and
clc
or
in
push
inc
mov
pop
or
sti
add
or
roll
sbb
loopne
pop
sub
dec
mov
mov
mov
inc
mov
xor
aam
sbb
icebp
mov
pushf
push
fsubl
xchg
es
aad
cmp
rolb
outsl
or
stos
xlat
shll
pop
movsl
and
mov
mov
pop
push
rclb
inc
pop
adc
std
rorl
enter
add
adc
insl
repz
jmp
les
andb
xchg
js
pop
adc
xchg
cs
lock
and
inc
mov
loope
cltd
cmp
enter
rorb
testl
adc
and
lock
mov
pop
mov
daa
les
push
cmp
pushl
fldl
inc
lret
xchg
out
in
test
sbb
lods
ljmp
xor
xchg
int
xchg
filds
xor
jecxz
hlt
sbb
mov
mov
dec
mov
inc
pop
lock
dec
nop
ds
jb
push
rclb
xchg
mov
or
ret
test
call
dec
pop
nop
dec
stos
repnz
arpl
push
mov
pop
ljmp
aad
mov
orl
xchg
xor
push
dec
lret
shlb
xchg
sbb
mov
pop
imul
jae
xchg
jl
mov
adc
outsl
mov
xor
gs
adc
xor
mov
clc
aad
fsubrs
lods
scas
jmp
mov
inc
mov
mov
cmp
in
rol
jb
arpl
jle
ljmp
sbb
in
mov
lods
push
push
cmp
fwait
add
test
into
lahf
rcr
mov
subl
jl
clc
jle
sub
mov
test
cmpsb
xor
pop
mov
and
movsl
stc
arpl
testb
js
test
xchg
and
fldcw
mov
dec
jmp
sti
xchg
cmp
mov
mov
scas
dec
xchg
jns
test
push
mov
sbb
adc
jl
adc
sbb
mov
rolb
jmp
jno
inc
rcrl
adc
jb
ds
xchg
fistpl
sahf
adc
rol
xor
lcall
outsl
cmpsb
pop
xchg
jecxz
testl
and
or
lret
mov
shl
stos
fcmove
jo
jmp
xchg
clc
nop
pop
push
scas
and
arpl
jnp
jo
cmp
jnp
push
sbb
adcl
pop
xchg
pop
sahf
dec
and
pop
js
pop
mov
adc
push
sbb
cmp
lcall
dec
es
and
dec
out
fs
mov
and
cmp
leave
jp
testb
adc
std
adcl
mov
lret
insl
xchg
int
push
jne
or
xchg
sub
pop
add
pop
out
adc
je
jge
add
xor
inc
inc
push
inc
decl
in
insb
and
adc
xchg
nop
cmp
pusha
leave
cli
xchg
pop
lods
pop
mov
add
rolb
push
sbb
xor
scas
iret
push
lahf
jno
xlat
and
push
xor
cmp
add
div
cmp
shrb
lret
faddl
xor
jbe
lret
pop
dec
xlat
in
fisubrs
jg
aaa
mov
in
gs
cwtl
adc
scas
pop
das
cmpsb
sbb
icebp
push
push
push
xor
outsb
sahf
mov
pop
aam
lret
xor
add
push
sub
idivl
mov
jo
adc
mov
mov
pop
mov
or
mov
testb
dec
adc
push
cmp
cmp
clc
cmpsl
int
push
push
mov
test
ds
xchg
daa
arpl
cs
mov
mov
fcoms
outsl
stos
fstpl
push
or
loopne
in
ret
mov
stos
dec
jae
xchg
xchg
add
push
cmp
cs
es
std
dec
dec
inc
fcompl
enter
cwtl
pop
repnz
sbb
dec
xchg
jne
cmp
movsb
std
pushl
adc
and
xchg
pop
jb
jl
std
fldl
mov
jae
or
in
dec
test
jmp
or
pop
jns
jl
mov
js
mov
or
mov
cmp
inc
mov
mov
int
sbb
pop
sahf
sbb
mov
push
sbb
shrl
aas
ds
rcr
out
scas
dec
ficoms
inc
popf
jge
int
setns
and
adc
add
les
cwtl
and
fidivs
aad
scas
jg
out
fcoml
inc
lods
or
jb
cmp
dec
inc
clc
pop
mov
push
ja
arpl
inc
in
xor
in
fdivp
jb
jmp
xchg
xchg
inc
sbb
cmp
ret
out
or
mov
sahf
movsl
cld
cltd
lret
fsub
aad
pop
pop
xlat
add
dec
push
mov
cmc
popa
addr16
lods
xchg
push
or
push
out
cmp
add
add
mov
ret
sbb
stc
ror
lds
or
insl
add
insb
aad
movsb
mov
mov
test
cmp
mov
mov
adc
add
push
leave
xor
adc
repz
mov
inc
lds
pop
das
adc
jle
xchg
cmp
add
jp
push
dec
fnstenv
test
inc
cwtl
xchg
mov
insb
mov
inc
and
repz
pop
push
imul
sbb
loopne
adc
es
iret
cmp
mov
or
lcall
mov
iret
mov
sub
outsb
push
cmp
cmpsb
pushf
xor
xchg
popl
pop
fimull
in
nop
aaa
imul
leave
test
jg
pusha
jb
mov
mov
xchg
daa
dec
and
enter
mov
adcl
movsl
mov
les
push
bound
rcrb
adc
cmp
sbb
mov
test
nop
adc
lahf
xchg
jl
jns
or
push
cmpl
gs
inc
jo
rol
and
xchg
pop
aam
adc
enter
mov
arpl
mov
divl
mov
std
andps
xchg
insl
out
inc
in
sbb
add
js
dec
jge
push
aad
xchg
shrb
add
mov
dec
leave
scas
into
xchg
inc
push
in
mov
fists
mov
fs
fmull
cmp
jnp
pop
movsl
test
in
sbb
fsubs
and
adc
fadds
mov
sub
pop
insb
mov
jg
inc
and
push
push
test
insl
fsub
sti
mov
iret
fs
cmpsb
mov
mov
int
add
cmpsb
fmuls
lcall
in
jmp
adc
mov
cs
scas
sub
sbb
mov
sub
lret
daa
push
sbb
sub
jl
dec
xor
jmp
test
mov
add
mov
out
cmp
mov
or
fmuls
sbb
or
add
fwait
cmp
jnp
insb
jb
subl
cmpl
cmp
pop
idivl
movsb
scas
pop
mov
push
hlt
push
dec
jp
cmp
loopne
xlat
cld
ljmp
in
scas
gs
push
mov
push
lahf
aaa
mov
jne
jmp
fists
jbe
mov
add
pop
lods
addr16
mov
mov
lock
les
or
sub
mov
sub
pop
sub
mov
clc
jns
stc
sub
icebp
fcoms
mov
cmp
xor
sahf
sbb
rorl
and
rorl
stos
call
insb
mov
push
inc
test
stos
jecxz
sbb
mov
dec
out
fs
adc
enter
cmp
adc
xor
scas
sbb
jns
mov
js
adc
rcr
cs
mov
cmpsb
outsb
cmp
mov
sbb
or
cmp
push
rorl
and
push
jp
add
or
mov
cmpsl
idivb
mov
push
jnp
sbb
ret
sti
sahf
or
out
insl
lock
subb
jmp
add
ficoms
dec
xchg
or
jp
sbb
mov
push
add
adc
cmpsl
cmpsl
jbe
cmp
cmp
mov
fnsave
sbb
rcrb
sbb
cmp
fistpll
xchg
es
push
xchg
mov
les
push
jl
inc
repnz
push
cmpsl
adc
aam
popa
fidivrl
mov
adc
or
enter
lahf
out
insb
movsb
cltd
iret
push
mov
add
sbb
mov
dec
cli
imul
fs
inc
pop
sbb
pop
xchg
outsb
push
test
out
lea
and
rcl
out
jl
sbb
jbe
cs
jmp
stc
adc
bound
inc
xor
stc
pop
lahf
test
push
sub
mov
jbe
jmp
and
push
ret
cmc
push
movsl
dec
xorl
insl
sub
or
inc
into
dec
jno
aam
xorb
xor
das
mov
mov
aad
and
pop
lods
ja
sbb
aas
jle
gs
pop
popf
imul
fsubs
jnp
shrd
push
mov
xchg
push
push
cld
or
dec
fmull
jp
sbb
daa
sbb
cmp
scas
cmp
sub
inc
and
mov
test
mov
imulb
mov
insb
mov
fwait
clc
xchg
xchg
jmp
cmpsb
subb
inc
clc
imul
mov
cmc
test
jnp
push
in
shll
mov
push
and
mov
dec
mov
idivl
cmp
or
mov
ljmp
ljmp
mov
xor
jg
inc
sar
inc
xchg
jne
push
mov
push
int3
or
das
repz
repz
or
xchg
fdivrp
xchg
sbb
ljmp
xorl
jbe
sahf
fisubl
shrl
xchg
cli
mov
out
mov
rol
pop
xchg
pop
les
jg
push
inc
lahf
popf
add
mull
inc
mov
adc
add
dec
mov
lods
mov
int3
ret
adc
test
xor
xchg
sti
or
sub
sbb
xchg
addr16
popa
popa
sub
scas
add
inc
aas
sarl
nop
and
mov
xor
movb
add
add
shr
leave
nop
cmp
mov
sub
add
loop
insl
lea
sub
or
stos
mov
dec
out
cmpl
iret
aad
test
pushf
pop
stc
adc
sbb
shlb
js
inc
pop
repnz
mov
mov
jae
mov
push
popf
xchg
scas
pop
out
mov
les
add
pop
pop
testb
sub
xor
pusha
and
xor
stos
and
jno
scas
incl
xor
mov
iret
add
inc
xchg
adc
inc
mov
std
sbb
sub
cwtl
xor
push
mov
movb
mov
leave
cmp
sbb
or
jo
sbb
fcmovnbe
fs
push
pushf
add
out
jle
xor
fwait
mov
add
dec
into
inc
xor
in
stos
xlat
add
or
jbe
mov
repnz
jno
in
xchg
test
jns
in
mov
inc
cmpsl
jl
movsb
inc
aam
test
clc
vmread
and
dec
xchg
loopne
loopne
shlb
iret
sbb
mov
test
pop
add
inc
add
dec
sbbl
xor
inc
data16
out
fsts
inc
or
lods
test
ds
push
arpl
jp
xlat
shlb
rcrb
sbbl
lds
jg
xor
mov
test
loopne
sbb
das
sub
pop
mov
sbb
hlt
sahf
add
cmp
sbb
fimuls
jbe
sbb
in
iret
leave
std
in
fsubrl
loop
dec
daa
or
test
mov
pop
lock
jge
cmpsb
push
lock
in
push
enter
cld
test
sbb
adc
pop
enter
mov
mov
add
dec
push
pop
lcall
cwtl
outsb
pop
pop
jle
push
cmpsl
mov
add
cmp
pop
ret
les
cmp
lahf
or
xor
sti
sub
sub
and
sub
daa
dec
dec
dec
fwait
xor
in
aas
mov
inc
scas
push
inc
and
sbb
int
out
int3
fsubr
dec
ret
xchg
cvttps2pi
lahf
mov
bt
emms
xchg
cmp
in
jb
add
sub
adc
sti
fstl
sub
sbb
xor
jle
mov
out
add
int
or
ficoml
mov
nop
mov
int
mov
mov
sahf
repnz
loopne
and
push
out
mov
test
mov
pop
outsb
out
dec
push
cmc
ret
jmp
sub
dec
in
sub
out
lret
pop
shrb
or
daa
jp
aam
nop
addr16
push
mov
ljmp
sub
cmpsl
push
inc
loope
xor
pop
or
sub
js
pop
sub
xchg
or
frstor
orb
mov
aad
and
hlt
in
outsb
pop
jbe
jecxz
ret
imul
mov
lods
and
cmp
sbb
lcall
mov
orl
movsl
cmc
pop
mov
jne
ja
inc
sub
mov
shlb
pop
movl
ljmp
add
xor
mov
pop
inc
jns
xchg
push
loopne
xor
data16
pop
add
xchg
xchg
mov
fimull
bound
jo
ss
dec
sbb
test
mov
xor
or
lods
std
or
dec
ret
je
inc
xor
cli
rcrl
stos
testb
fiaddl
pop
repz
data16
scas
lcall
dec
lds
adc
icebp
test
ja
adc
sub
cltd
adc
sub
pop
adc
fwait
dec
pop
inc
and
xor
push
push
fs
sub
ss
mov
outsl
mov
jb
shr
loop
jmp
xchg
scas
mov
rcr
sub
imul
ja
fdiv
enter
aaa
in
pop
clc
jae
call
mov
inc
gs
les
cltd
adc
fwait
imul
dec
call
dec
test
test
les
cmc
and
xchg
stos
and
and
cmc
leave
sarb
lock
nop
sbb
fimuls
std
sbb
xchg
lret
add
aaa
pop
mov
mov
scas
std
fsubs
clc
lods
cmpsb
xlat
push
lds
jp
or
jbe
xchg
repnz
pop
push
push
ret
push
pop
push
andl
gs
push
daa
fwait
xor
enter
jl
fsubr
mov
mov
int
mov
mov
pop
xor
hlt
pusha
or
insl
stos
enter
imul
cmpsl
repz
xor
movsb
or
xchg
imul
ja
jae
cmp
fadds
stos
xor
pop
call
xchg
inc
xchg
insl
xchg
dec
jle
dec
fsubs
cld
cmp
lea
dec
lods
fcomps
ja
or
pop
cmp
xor
mov
adc
and
data16
test
push
test
fwait
test
nop
stos
adc
or
pop
ds
in
shrb
mov
adc
sti
repnz
dec
or
sbb
inc
ljmp
mov
xor
jns
ljmp
movsb
jae
mov
dec
ds
ds
cli
xor
jp
lock
push
sub
lock
sub
jno
lahf
mov
fs
outsb
xchg
jne
fs
inc
push
cmp
jnp
fs
roll
lods
aam
dec
pop
mov
inc
scas
mov
or
jo
dec
test
setg
pop
cmpsb
inc
xchg
sbbb
adc
arpl
cli
test
pop
lds
jge
ljmp
push
cmp
test
push
and
mov
jg
hlt
or
mov
out
loop
in
push
fstpt
cmp
cltd
add
sub
in
leave
and
push
mov
jne
test
addr16
scas
cmp
xchg
cmp
pop
push
adc
imul
fisttpll
or
stos
xor
jae
xchg
orb
mov
hlt
sub
lods
jo
cwtl
dec
out
or
xor
push
xor
ret
jle
sub
in
mov
pop
arpl
inc
mull
mov
dec
fwait
dec
les
in
icebp
out
inc
js
and
sub
imul
lret
add
sti
enter
daa
mov
andl
sub
das
sub
push
in
or
daa
xchg
mov
daa
inc
shrl
lret
daa
inc
mov
mov
clc
mov
or
cltd
add
inc
push
xlat
dec
mov
into
cmp
aad
lret
xchg
push
lea
popf
fadd
push
jmp
cltd
pop
xor
xchg
dec
push
fwait
xchg
in
shrb
or
sub
xor
or
xchg
add
fisttpl
ja
in
sbb
shl
cmp
push
mov
scas
and
insb
call
rclb
adc
mov
or
cmp
cmc
imul
add
pop
insl
stos
sbb
add
not
ret
inc
mov
fistpl
pop
xlat
int3
arpl
jecxz
outsl
push
xor
popf
jecxz
movsl
ucomiss
adc
inc
jmp
stos
mov
mov
sub
push
rorb
cmove
sub
adc
jb
shld
jg
dec
pop
mov
or
cmp
jno
adc
cmp
or
push
aam
and
sbb
adc
cmp
and
sub
and
out
pop
divb
adc
adc
loope
faddl
int3
repz
loopne
or
mov
gs
jne
lret
push
test
pop
mov
addr16
sub
sti
mov
push
addr16
stos
cmpsl
scas
jns
bound
cmp
fcomp
test
xchg
addr16
sahf
xor
add
outsb
pushf
ds
push
ret
mov
and
mov
outsb
push
add
mov
sbb
ret
cmpsb
jnp
lret
push
cmp
dec
sti
je
xchg
clc
sub
push
push
stc
aas
or
push
mov
mov
jnp
xchg
push
pop
pop
in
ret
sub
gs
dec
mov
or
popf
jecxz
cmp
orb
or
daa
aas
inc
xlat
in
je
adcl
xor
jo
pop
xor
pusha
add
adc
jmp
jns
mov
pop
inc
repnz
jno
rcll
and
fcmovnbe
subl
jmp
movsl
scas
insb
std
xchg
push
or
movsb
sbb
sbb
sti
stos
out
inc
xor
neg
cmp
push
mov
and
loope
mov
and
jg
jl
mov
call
pushf
mov
inc
jle
push
pop
mov
in
mov
sarl
fcomps
pop
jmp
lds
sbb
stos
fwait
xchg
shrl
lods
gs
mov
jo
sub
mov
lret
cltd
sbb
or
movsl
in
or
loope
xor
adc
nop
and
in
jne
fdivrl
xor
shr
push
push
call
add
adc
jecxz
add
cmpsl
scas
xchg
pop
loopne
out
xor
out
mov
ss
popa
jnp
pusha
lock
fsubl
shll
and
inc
dec
data16
test
cltd
xchg
adc
and
push
adc
and
push
sub
out
fs
mov
and
xlat
insb
jmp
pop
pop
or
in
push
adc
xchg
fmulp
push
js,pt
leave
sub
mov
push
xorb
lret
fadd
adc
cs
scas
xor
movsl
pushf
push
cmp
push
jbe
loop
icebp
jp
xchg
fwait
pop
or
xor
adc
cmp
in
and
add
shll
insb
int
sbb
pop
pop
sbb
dec
sub
test
inc
jbe
divl
adc
aam
out
mov
dec
or
pop
ret
add
int3
lret
lahf
or
js
loop
or
test
jb
dec
push
xchg
sub
gs
call
dec
push
and
insb
cmp
mov
add
fucom
cmpsb
daa
orl
cmp
lret
and
popf
mov
into
pop
cmp
xor
fnstsw
ja
int
pop
lods
aad
shl
loop
shr
dec
in
andl
popa
bound
inc
adc
pop
lds
cmpsb
iret
inc
out
das
sti
stos
sahf
dec
inc
das
mov
fwait
mov
sbb
xchg
mov
ret
pop
loope
and
int3
shll
in
sahf
fwait
dec
mov
pusha
or
insl
int3
lret
nop
jle
mov
cmc
insb
arpl
and
mov
ss
sbb
arpl
mov
rolb
dec
pushl
fs
cwtl
int3
adc
mov
cmpsb
pop
adc
rcr
add
test
jo
hlt
push
adc
xchg
cmp
xor
insl
sbb
or
movsl
mov
int
dec
pop
in
loope
push
rcll
cwtl
mov
dec
fwait
jae
shll
cmp
sub
loop
sbb
test
adc
jecxz
mov
mov
nop
daa
inc
insl
stos
cmp
add
add
mov
push
pushf
ret
mov
negb
mov
mov
mov
push
dec
movsl
jbe
add
or
fidivs
inc
xor
movsb
push
or
sub
es
adc
not
xchg
popa
jmp
test
dec
xor
sbb
call
repz
pop
pop
outsb
shrb
xor
loop
addr16
mov
lea
adc
push
mov
push
sbb
add
xor
loope
mov
sub
xchg
jnp
mov
mov
push
pop
push
out
inc
jp
pop
dec
mov
jns
es
or
sub
outsb
xor
jecxz
repnz
icebp
negl
pmaxub
lods
lahf
xchg
pop
sbb
mov
xor
mov
and
les
sbb
fs
fs
dec
int3
mov
push
mov
sub
jns
cmc
mov
dec
pop
lods
clc
jmp
add
sub
jno
popa
pop
jle
aas
sub
jns
bound
mov
mov
pop
js
pop
push
cmp
imul
fmull
cs
out
rcrl
dec
fdivl
nop
sbb
add
adc
push
dec
or
push
and
popf
sbbb
pushf
or
mov
jno
int
adc
rclb
movsb
in
push
or
lods
mov
es
add
pop
xor
clc
xchg
outsb
push
test
iret
shlb
xchg
les
xchg
add
dec
xchg
les
add
mov
call
jg
dec
adc
cli
xor
add
sbb
mov
hlt
sbb
test
xchg
pop
jp
or
add
int
dec
xchg
jne
xchg
mov
cltd
sbb
push
pop
or
in
cltd
jge
jne
pop
out
or
cmp
sarb
pop
cmc
out
jae
and
stos
sub
push
dec
clc
add
add
stc
fisubs
push
jg
les
jl
aas
mov
test
adc
jmp
jno
xchg
test
mov
pop
out
loope
dec
pop
cwtl
lret
adc
pop
dec
notb
pop
scas
pop
testl
lahf
mov
dec
sub
enter
out
insb
divb
and
xlat
dec
pop
inc
scas
shlb
jg
cwtl
jle
pushf
popf
mov
testl
mov
sbb
mov
ret
ud0
jmp
mov
stos
xor
out
sbbl
pushl
rcll
js
inc
mov
xor
lea
mov
mov
arpl
xchg
cltd
pop
out
aad
add
iret
sub
jnp
test
mov
dec
cmpsb
int
bound
xor
fs
mov
stos
ffreep
nop
ja
cmp
ljmp
adcl
pop
ficompl
inc
jp
arpl
into
dec
xchg
aad
xor
add
push
js
inc
push
jnp
mov
lods
push
imul
dec
cmp
fcoml
fwait
pushl
cwtl
jb
scas
cmp
and
pop
std
mov
pusha
subl
mov
and
add
mov
mov
shrb
jno
aaa
sti
mov
mov
aas
fwait
clc
xor
dec
or
aas
hlt
jge
mov
pop
and
testb
dec
jno
or
xor
lods
rclb
stos
iret
cs
aam
jae
rcl
xor
imul
pop
out
fidivs
out
dec
aad
lret
pop
inc
rorb
xor
sahf
das
rcrb
scas
or
xchg
xchg
mov
ficompl
jns
lahf
mov
ja
jle
sbb
hlt
push
in
or
or
mov
jo
sbb
mov
mov
cmpsb
inc
xchg
or
popl
cmpsb
mov
shlb
xor
movsb
es
add
and
or
out
cmp
cli
sbb
push
and
pop
mov
pop
fdivrl
loop
hlt
ret
mov
dec
aad
adc
or
mov
mov
push
add
adc
mov
push
inc
loopne
lret
or
add
xlat
leave
add
inc
pop
jo
adc
test
or
xor
push
addr16
ret
sub
inc
jnp
lods
jbe
adc
cltd
sarl
sbb
daa
ss
push
jecxz
mov
aam
xchg
fcoml
dec
adcb
mov
push
pop
add
mov
push
push
stos
pop
mov
fistpll
fidivrs
movl
mov
xor
arpl
repnz
push
xor
xor
or
shrb
aas
in
cli
fs
movsl
in
inc
pushf
inc
sbb
xor
jnp
pop
addr16
mov
sbb
mov
add
inc
push
mov
jns
inc
rcrb
jo
and
loopne
pop
jle
mov
jb
jnp
gs
sar
cmp
fwait
inc
clc
mov
jecxz
mov
inc
movsb
icebp
pop
push
pop
iret
adc
daa
inc
into
clc
inc
aam
dec
repz
xchg
les
les
test
add
dec
cli
out
movups
adc
scas
aam
inc
inc
pop
jl
sub
jb
shlb
test
push
cmc
sbb
ja
ss
jp
pop
shll
sbb
mov
insl
sbb
jno
add
mov
mov
jno
jne
cmpsl
ret
test
and
xchg
cltd
and
je
inc
sub
ret
cmpsb
rorb
push
push
in
es
push
iret
mov
sub
xchg
inc
and
aaa
data16
jmp
xor
sbb
cwtl
in
test
lock
adc
add
outsb
nop
mov
sbb
push
sbb
sbb
das
xor
out
ljmp
mov
scas
ljmp
test
xchg
jg
bnd
jge
cmp
mov
and
xchg
ficomps
xor
mov
dec
repnz
push
std
sub
call
loope
xchg
mov
pop
xor
xchg
push
cmp
pop
xor
nop
mov
dec
arpl
bound
mov
enter
xor
or
movsb
pop
add
shrb
or
ss
loop
aaa
add
dec
sti
dec
out
push
xchg
sub
outsb
ret
push
cmp
aas
ror
mov
movsb
mov
push
or
jbe
in
out
xchg
push
xchg
lods
iret
add
daa
mov
les
lea
mov
sbb
popf
cmp
ret
or
inc
cli
scas
sbb
adcb
jecxz
cwtl
mov
jmp
mov
mov
mov
sbb
cmp
sub
addb
mov
test
pop
std
mov
and
jge
hlt
add
lds
dec
jl
cmp
inc
scas
xchg
imul
cmpsl
out
sarb
jae
test
lcall
sub
mov
mov
pop
scas
jnp
lret
cli
fwait
xor
repnz
add
jp
mov
or
cmp
repz
jmp
or
rcr
sbb
and
ret
in
scas
mov
push
adc
jp
test
adc
repnz
sbb
and
mov
pushf
adc
xor
or
popa
movsb
push
sbb
repz
sbb
xchg
xor
repz
test
mov
xchg
xchg
inc
or
fdivl
sti
sbb
sbb
ds
clc
pop
sub
cs
xchg
bound
clc
mov
jns
cmp
movsb
aas
mov
repnz
gs
addr16
push
testb
je
imul
add
popa
outsl
test
mov
stos
mov
sub
sub
aas
mov
dec
dec
jle
cmp
out
push
sbb
jecxz
xchg
cltd
lods
mov
mov
imul
movsl
enter
shll
icebp
rcrb
adc
jbe
sar
fmuls
mov
mov
out
fcompl
dec
idivl
btc
sub
fsubl
push
cmpsl
scas
popf
sbb
insb
inc
loope
push
mov
xchg
test
sahf
sbb
mov
or
sbb
add
sub
ret
daa
cmp
movl
add
imul
int
xor
les
push
cmp
and
mov
xchg
push
xchg
mov
in
cwtl
mov
in
es
sti
popa
addr16
cwtl
aas
mov
out
xchg
lahf
pop
out
sub
mulb
ja
loope
fs
es
and
xchg
loop
in
movsl
not
push
cmp
pop
aaa
or
lahf
popf
hlt
scas
fistpl
adc
movsl
jl
movsl
push
inc
add
xchg
js
xor
jno
leave
rcrl
mov
jge
lret
push
push
cmp
xchg
lcall
pushf
cs
cli
out
jl
hlt
jbe
adc
fstl
or
lcall
sbb
sbb
cmp
jge
mov
dec
out
sub
jae
in
in
jp
cli
sbb
mov
nop
cltd
xor
push
ficoms
rorb
aas
xor
ss
fldt
jl
in
ret
sbb
or
jo
cltd
imul
adc
push
stos
fsts
negl
mov
mov
xchg
test
arpl
lret
and
xorl
pop
sbb
pop
aas
fdivs
xchg
cmp
cli
or
push
stos
pop
jecxz
jge
pop
aad
pop
popa
dec
fistpl
and
jmp
mov
lock
push
sbb
lret
push
inc
mov
sbb
cs
movsl
dec
hlt
in
lds
pop
push
add
sub
cmp
nop
and
adc
jle
stos
cmp
dec
cltd
sbb
mov
aad
mov
inc
ljmp
sbb
inc
gs
and
fmull
pop
cmp
rcrl
out
push
jle
inc
and
sti
insb
sbb
cwtl
mov
adc
mov
sti
pop
and
push
pop
mov
lcall
inc
sbb
pop
cmpsb
hlt
into
int3
gs
pop
cmp
sarb
xor
insb
mov
movsb
fists
jle
inc
mov
stos
dec
and
adc
push
xor
mov
loopne
ffreep
lcall
test
gs
mov
jl,pt
pop
adc
dec
mov
adc
jbe
xor
pop
lret
adc
es
jne
mov
lcall
cmp
inc
pop
push
sub
inc
cmp
rolb
pushf
testl
lahf
inc
dec
addb
jmp
test
idivb
js
pop
imulb
inc
inc
adcl
movsl
adc
jle
jp
rcl
or
fisttpll
cmpsb
xchg
xchg
sub
incl
rolb
lods
jbe
rolb
and
push
ror
test
mov
add
enter
adcb
leave
aam
imul
mov
jle
icebp
mov
mull
outsl
int
and
dec
mov
push
dec
fisttpll
daa
push
xchg
js
ja
cmpsl
cmp
clc
jge
or
dec
in
xchg
jb
pusha
push
add
push
jmp
dec
flds
cmp
inc
mov
xchg
pop
dec
leave
mov
inc
cmp
nop
pop
xor
add
sub
cmpsb
cmc
sahf
push
dec
add
add
shrl
movsb
shrb
test
pop
movsl
mov
jne
mov
cmp
pop
sahf
lahf
push
cmp
mov
orb
mov
or
cli
pop
enter
inc
scas
cwtl
jne
xchg
or
lret
push
mov
out
shlb
and
fwait
mov
lods
inc
jmp
or
sub
enter
push
movsb
popa
cwtl
add
int3
push
imul
mov
repz
clc
cmc
bnd
xchg
mov
lcall
test
jg
mov
repz
xor
xchg
lahf
ret
push
mov
pop
test
scas
mov
iret
add
push
popa
push
movsl
iret
cmp
push
out
lcall
int3
add
popl
cmp
adc
mov
cwtl
mov
enter
loope
ret
dec
cltd
and
adc
icebp
sarb
inc
iret
jae
cwtl
mov
shrb
cmp
shrb
pop
inc
fdivrl
repnz
add
mov
repnz
add
sbb
orl
push
lea
test
je
inc
mov
inc
js
rcrl
fldl
sub
mov
sbb
stos
arpl
inc
jnp
arpl
xor
mov
pop
adc
rcll
adc
sub
cs
sbb
mov
dec
and
or
adc
in
sarb
mov
cmpsb
jle
adc
inc
popa
mov
xchg
mov
js
xchg
mov
test
cmpsl
push
test
loope
xor
adc
inc
inc
sbb
int
fucomi
mov
sbb
sar
das
dec
jl
arpl
les
fists
push
fidivrl
lds
aas
jp
clc
shl
xor
in
subb
or
adc
xor
cld
test
lods
dec
inc
stos
cmp
pusha
jge
aaa
inc
pop
pop
out
xor
fistpl
or
cmpsb
icebp
jbe
push
mov
mov
push
push
mov
cltd
dec
sbb
divb
sbb
sub
sub
neg
std
mov
mov
and
orl
cmpsb
repnz
cmpsb
out
ret
xchg
loopne
stos
and
addr16
js
out
ja
out
xchg
popa
xor
loop
lret
rolb
inc
push
and
lock
gs
das
sbb
xor
aad
and
int
pop
ror
out
add
js
lods
push
or
inc
push
adc
mov
jecxz
stos
add
ja
adc
push
pop
jge
cltd
addr16
dec
xchg
cld
sbb
pushf
xor
xchg
add
les
add
dec
sahf
test
push
adc
insb
push
popa
sub
and
pop
adc
pop
xor
sbb
mov
loope
aad
divl
les
xchg
inc
mov
pop
or
mov
cmp
mov
xchg
inc
xchg
pop
mov
push
icebp
mov
insb
mov
ret
or
cli
mov
dec
sub
and
arpl
mov
int3
cmp
cmp
lcall
cmc
ficoml
fstps
faddl
adc
push
inc
enter
push
fstpt
sub
adc
pop
fsubrs
bound
iret
sahf
jb
add
clc
loope
push
fwait
dec
xchg
inc
jns
or
out
cmpsw
push
pop
mov
sbb
cli
cmp
push
out
jae
int
or
lret
adc
pop
xchg
popa
add
inc
jg
cwtl
sub
push
sti
xor
xor
mov
xchg
scas
sbb
pop
xor
add
in
lds
out
cmp
shl
or
mov
inc
mov
pop
pop
out
push
ja
dec
add
sub
outsb
mov
lcall
icebp
push
lds
rorb
jne
psubusb
xchg
push
cmp
ljmp
and
mov
fldcw
mov
movsl
call
sbb
sbb
mov
insb
add
mov
adc
pop
xchg
adc
or
and
mov
xlat
push
insl
jb
dec
pop
pop
inc
push
mov
lock
out
mov
jl
mov
jb
test
imul
add
pushf
mov
fcmovnbe
jge
repnz
fwait
mov
test
lods
cmp
ficoml
cmpb
inc
mov
fmull
insb
add
scas
xchg
outsl
shrl
dec
adc
jae
aas
jb
mov
in
xchg
and
xchg
mov
icebp
decl
and
sub
and
jne
outsb
sub
xchg
lcall
push
shll
pop
push
jge
aas
and
adc
xchg
out
sub
inc
ss
imul
addb
jo
clc
jbe
mov
inc
add
sub
cmp
gs
cwtl
xchg
push
test
cmp
fwait
push
lahf
outsb
mov
jle
int3
sbb
movsl
pop
fs
adc
mov
push
cmpsl
mov
xchg
sbb
push
xchg
addr16
sahf
push
fldl2e
ds
pop
mov
mov
add
stos
push
int3
xor
pop
pop
mov
push
outsl
imul
mov
enter
movsb
cmp
mov
xchg
fnstsw
sarl
sarl
pop
cmp
sub
cld
pop
fmuls
pop
lock
add
mov
fsubp
rcl
sbb
mov
push
push
add
out
push
jno
cwtl
sahf
and
cmp
mov
outsb
inc
fistpll
and
sbb
jle
mov
and
fwait
scas
shll
pop
sar
mov
or
insb
imul
mov
shrb
imul
inc
sbb
sahf
jne
mov
xchg
mov
shrb
bound
mov
nop
lahf
xor
mov
mov
pop
and
pushf
loop
lret
adc
les
mov
insb
gs
pop
mov
sbb
inc
int
sbb
cli
bswap
mov
insb
arpl
imul
and
sub
xchg
call
push
xorb
lret
adc
pusha
jnp
jp
mov
out
mov
addl
ljmp
adc
mov
cli
das
imul
sbb
add
jle
js
xchg
mov
or
inc
inc
lahf
mov
mov
dec
xchg
or
in
fs
fstl
pop
popl
and
cmpl
sahf
sub
rorl
add
xchg
dec
fisttpl
in
xor
push
les
scas
sbb
and
push
aam
cmc
sbb
arpl
cld
xor
mov
push
dec
in
mov
mov
mov
lds
and
repz
adc
cltd
jp
push
andb
negl
jne
and
fldcw
in
fwait
mov
fimull
sub
jns
inc
xchg
and
push
push
dec
pop
mov
outsb
jbe
cmp
pop
lods
mov
mov
inc
cwtl
lret
bound
lret
and
add
push
sub
xchg
push
dec
int3
aam
add
mov
lods
cmpsl
cmp
mov
xor
jp
ja
cmp
les
sub
scas
inc
nop
sub
ja
sub
xor
js
in
mov
cmc
lods
and
mov
xchg
or
fs
out
jge
scas
cs
pop
cmp
pop
insb
inc
push
ljmp
lret
mov
cmpsl
subl
push
fsubrl
mov
cli
cmc
popf
into
mov
push
or
rolb
dec
dec
add
jle
movsl
popa
push
inc
push
pop
fldenv
and
movsl
sar
and
pop
lods
aad
push
sub
cli
and
lcall
test
pop
jne
fisubl
test
popa
sbb
dec
mov
adc
inc
pop
scas
xchg
xor
push
mov
lods
push
sti
push
rol
and
daa
mov
push
push
out
ret
sbb
popa
dec
push
adc
and
sbb
pop
dec
aam
out
and
sbb
jecxz
mov
xchg
dec
sub
mov
nop
inc
push
cmp
roll
adc
inc
mov
push
dec
mov
popa
inc
int
fs
cmp
push
cmp
fidivrl
adc
cwtl
js
sbb
ja
jo
mov
or
push
adc
push
xlat
sbb
xchg
pop
pop
inc
add
aas
fstpt
jnp
xchg
movsl
jmp
orb
xor
pop
pop
cld
push
xchg
lea
outsl
push
imull
add
dec
loop
into
and
rclb
xor
jmp
cmpl
push
pop
cmp
cld
xchg
mov
jno
dec
out
jg
sbb
push
lds
movb
sti
sub
pop
mov
popf
jo
lcall
mov
testl
jge
sbb
lahf
adc
das
or
mov
lods
sbb
xor
daa
push
jb
call
in
out
mov
cmp
xchg
add
lods
cmp
idivb
add
dec
mov
or
and
xchg
pop
pusha
inc
sti
xor
push
adc
xchg
dec
and
in
sub
punpckhdq
test
add
sti
mov
sar
inc
ss
pop
pop
jo
add
cmp
cmpsl
sti
stos
mov
sbb
mov
out
cmp
adc
push
adc
mov
add
adc
dec
push
pop
push
mov
push
pop
mov
push
push
sbb
out
push
lock
lahf
push
sahf
imul
call
aaa
les
jmp
inc
xor
inc
fstpt
pop
cmp
flds
sbb
les
pop
loope
jb
push
dec
ret
or
inc
repz
mov
shlb
out
inc
jl
fisttps
or
xchg
mov
sbb
ss
enter
push
dec
jecxz
icebp
call
adc
jno
lcall
and
pop
nop
imul
jmp
rcrb
imul
inc
mov
decl
and
adc
enter
mov
mov
je
lret
jnp
mov
mov
mov
arpl
adc
dec
pop
inc
clc
fisttpl
dec
inc
stc
sbb
inc
push
dec
push
add
test
pop
fisttpl
cwtl
por
lock
js
jo
sti
jg
or
pushf
out
xchg
add
cwtl
popa
orl
pop
push
sub
mov
pop
push
das
mov
jg
test
sbb
mov
cmpsb
test
or
cmp
sbb
lahf
or
xlat
orb
and
subl
xchg
push
push
inc
lahf
xor
cmp
out
cli
int3
mov
aam
pop
jno
enter
jge
daa
or
aam
sahf
dec
sub
leave
cs
pop
in
mov
inc
cwtl
xchg
dec
fwait
loop
pop
lods
fisubrl
movsb
lds
gs
sbb
cmc
mov
or
test
sbb
dec
jns
sti
popf
stos
jnp
jmp
addb
push
push
mov
push
fstpl
les
ret
ja
xchg
movl
daa
mov
cmp
shrl
arpl
imul
test
add
lock
mov
sub
scas
pop
fadds
jae
scas
inc
pop
repz
dec
jne
mov
dec
push
repz
mov
das
jle
lret
fstps
ljmp
fbstp
jle
and
cmp
sbb
mov
xor
push
jb
xchg
cwtl
mov
xchg
add
je
fs
mov
imul
and
lea
stos
out
sub
ds
sbbb
in
mov
daa
xchg
aam
in
lock
xchg
push
inc
test
sub
test
andl
add
xor
pop
test
push
cld
jmp
lock
stc
and
arpl
sub
leave
mov
ffree
pop
inc
jbe
xor
mov
xchg
outsb
adc
iret
enter
lret
cmpsb
out
test
sub
jge
jns
aaa
pusha
mov
cmp
xor
inc
movsl
add
or
sti
or
add
adc
inc
dec
scas
cmp
les
dec
pop
in
cwtl
mov
test
sbbl
mov
cmp
stc
or
and
sbb
icebp
es
push
insb
les
inc
mov
cmc
inc
inc
push
js
jge
inc
add
pop
insl
scas
xchg
mov
into
mov
shl
xor
mov
fsubrl
and
push
add
pop
imul
jmp
xchg
test
icebp
add
sbb
jne,pn
test
xor
icebp
cmc
cmp
fs
mov
repnz
xchg
repnz
and
gs
xlat
stos
sub
stos
xchg
ss
imul
cwtl
test
pop
xchg
mov
xor
xor
call
shll
dec
lahf
inc
shll
aaa
lds
or
out
cmp
push
jge
xlat
enter
aas
ljmp
std
movsb
out
xchg
mov
insb
xchg
fistps
pop
or
mov
xorb
cltd
lahf
into
jns
jl
jp
inc
sahf
rolb
mov
fbld
pop
popf
sbb
pushf
jp
mov
js
inc
push
mov
je
sti
shll
repz
mov
clc
add
sub
mov
in
pushf
xchg
repz
sahf
ret
aad
xchg
mov
cmpsl
outsl
jns
lock
inc
xor
ds
mov
inc
or
sbb
repnz
pushf
jns
out
fsts
sbb
xor
test
aaa
sbb
sub
adc
shrb
ja
in
sti
or
popa
xchg
pop
mov
shrl
mov
pop
xor
mov
in
sub
mov
inc
mov
inc
lods
adc
jae
xlat
fmuls
mov
test
xchg
mov
outsb
cmpsb
icebp
push
ret
mov
shlb
sbb
mul
and
and
andl
pop
mov
stos
dec
pop
jae
stos
cmc
testl
sbb
das
out
lcall
imul
leave
insb
test
mov
out
iret
out
in
sub
lock
adcl
fsubs
push
jb
fidivrl
add
and
rclb
cmp
cmp
inc
mov
xchg
int
cmp
aas
addb
push
mov
dec
sub
and
sub
rcll
test
int
lds
push
outsb
out
xor
jmp
jmp
xchg
lret
and
ss
int
push
fisttpll
or
and
les
loopne
roll
or
ss
nop
sar
stos
mov
ret
outsb
in
or
test
ljmp
or
fisttpl
or
add
xchg
mov
mov
call
pushf
enter
pop
popa
xchg
rorb
mov
cld
adc
add
lea
mov
mov
insl
daa
call
cld
cmp
hlt
add
mov
mov
push
fnstenv
popf
adc
subb
dec
and
call
out
jg
push
push
pop
push
cmpsl
pop
xlat
in
push
or
data16
cs
in
mov
je
data16
cmpl
jnp
mov
or
leave
fwait
cmc
and
jne
push
ds
xor
xor
fstpt
adc
push
pop
imul
and
sahf
jne
push
or
mov
push
decb
mov
jle,pt
add
cmp
and
ja
gs
aas
dec
xchg
pop
push
das
js
jecxz
shr
xchg
lcall
imul
add
aas
push
add
xlat
js
xchg
mov
inc
xchg
test
add
filds
scas
cmp
mov
adc
insb
add
ficoms
or
insl
iret
jnp
popa
lcall
mov
dec
jnp
jnp
sbb
ret
ss
add
mov
inc
inc
push
scas
repnz
sbb
push
idiv
cmp
aam
xchg
or
mov
stc
leave
pop
std
ja
jo
cli
insl
js
sub
fcomps
inc
xchg
xor
fwait
or
and
mov
scas
out
mov
stos
movsl
xor
jno
fwait
inc
icebp
xor
ss
cmp
adc
fs
lahf
and
ret
jle
dec
mov
pop
es
lret
in
cli
xchg
outsl
adc
lock
mov
fldcw
dec
fistps
cmp
scas
call
sbb
jp
aas
pusha
cmp
es
and
mov
pop
fsubs
sub
inc
int3
imul
fwait
jge
fldenv
cmc
jl
les
data16
sar
cld
mov
sub
movsb
jns
mov
jns
insl
std
xor
test
jp
sub
jo
xchg
int
shll
ds
inc
jl
pop
jl
je
push
dec
and
scas
inc
popw
jmp
scas
mov
adc
lahf
cmp
scas
jne
dec
in
sub
lret
adc
fucom
call
push
lock
sub
cmpsl
push
sti
mov
adc
xchg
imul
sbb
shl
xlat
cmp
or
xor
xchg
cs
jb
imulb
int
xchg
loopne
push
mov
rcr
and
add
scas
loopne
frstor
gs
lods
iret
test
sbb
fs
xor
scas
sub
cs
mov
imul
sti
mov
sahf
and
and
addb
scas
arpl
sbbl
mov
dec
xchg
mov
cld
fnstcw
pop
adc
push
dec
fisttpl
inc
xor
xor
xchg
jo
or
jbe
dec
enter
mov
inc
ret
sbb
idivb
fadds
inc
push
loop
add
cwtl
out
imul
decl
inc
pop
aaa
clc
xor
mov
sbb
and
cmp
mov
push
add
fcomps
js
clc
pop
repz
jge
fnstcw
mov
cmp
jmp
icebp
insl
ljmp
into
in
adc
mov
mov
mov
mov
aam
int
arpl
mov
pusha
lock
mov
mov
mov
loop
mov
filds
rorl
in
mov
jns
mov
mov
out
mov
xor
and
cli
xchg
ljmp
dec
jmp
fs
jae
mov
js
mov
ljmp
dec
or
pop
jp
loope
or
lds
fisttps
jne
daa
mov
lgs
nop
popf
push
push
dec
mov
fisttpl
mov
xor
add
pop
dec
ja
js
rclb
sub
repnz
pop
aaa
lds
sbb
cmp
ds
mov
lret
aad
inc
rcll
add
les
loopne
cmc
and
popf
or
fdivrl
and
adc
cmp
xchg
inc
dec
dec
jge
adc
mov
out
icebp
fstpt
xchg
repnz
fidivrs
jl
jge
cmp
daa
and
sbb
push
ret
out
and
xchg
mov
orb
inc
fsubl
and
inc
cmpsb
aad
inc
adc
sub
pop
pop
int
scas
push
cmp
fsubp
push
xor
mov
rolb
sub
icebp
bound
push
mov
pop
ret
mov
jge
fwait
cwtl
test
into
push
pop
ror
in
mov
sti
call
lret
repnz
push
out
gs
pushf
dec
pop
pop
and
sahf
movsb
mov
add
adc
push
lret
fiaddl
xor
daa
cmc
into
inc
mov
mov
push
sub
js
ja
lret
pushf
inc
cmp
xchg
pushf
aaa
je
push
les
xchg
adc
push
mov
loop
imul
aam
mov
cmpb
les
xchg
dec
xlat
ljmp
fisttpl
icebp
push
hlt
cltd
mov
dec
stos
aaa
inc
divb
hlt
sarb
cmp
mov
push
add
xchg
int3
out
aam
jmp
aam
jl
lahf
xor
pop
push
xor
scas
clc
or
jno
add
movsl
int3
clc
push
inc
cmpl
fcoml
fidivs
lock
vmwrite
sti
mov
sbb
inc
out
mov
xor
pop
hlt
test
or
xor
fcom
and
sbb
lods
clc
sti
xor
rorb
cmp
mov
shlb
enter
loop
scas
mov
mov
mov
aas
jl
push
cld
aam
mov
xor
inc
inc
jl
push
push
les
aad
ja
add
int
jne
cmp
cmp
cmpb
mov
clc
sbb
jle
mov
frstor
call
lret
sub
xchg
xchg
or
push
lds
clc
divl
add
dec
dec
sbb
daa
pop
stc
int
imul
jns
cld
pop
mov
xor
jp
jnp
in
pop
sbb
adc
jb
sbb
dec
mov
adc
mov
add
cltd
aaa
int3
pushf
lods
fwait
sbb
in
rorb
jg
jo
cmc
inc
popf
or
add
test
xor
in
paddd
rorb
test
jbe
sub
mov
jb
outsl
shlb
cmp
sahf
mov
cmpb
pop
scas
jno
sbb
aaa
adc
lods
mov
xor
pop
clc
loope
fucom
cmp
sub
cwtl
arpl
and
es
mov
subl
mov
pop
push
test
inc
mov
inc
loope
or
out
fmul
mov
dec
es
lcall
movsl
dec
and
test
cmp
mov
ja
mov
lcall
push
icebp
lock
push
cmp
xchg
je
imul
push
pusha
js
dec
fsubrs
mov
sti
cmp
sbb
xorb
test
inc
pop
subb
mov
adcl
fstps
test
xor
xchg
notl
ja
xor
stos
lret
mov
sub
sub
sbb
imul
repz
sbbb
xor
xchg
jns
sub
icebp
call
pop
test
cmpsb
pop
ret
insl
cmp
adc
fs
jl
mov
cmp
mov
sub
mov
into
imul
xchg
repz
cwtl
ret
adc
cmpsl
jne
dec
mov
stos
in
leave
loope
shlb
pop
outsl
mov
cmp
insb
adc
shll
cmpsb
sub
lds
jp
adc
loope
arpl
mov
gs
in
cwtl
loope
xor
rcll
movsl
das
dec
pop
es
ret
xchg
enter
xor
push
add
orl
outsb
xor
cs
fidivl
outsl
push
gs
cs
and
loope
push
xchg
lcall
test
inc
nop
mov
xor
push
sbb
lock
adc
lcall
ret
mov
jle
mov
mov
mov
test
and
mov
pop
les
sub
daa
lret
xchg
movsb
test
mov
shll
push
jne
xor
dec
pop
mov
loop
and
nop
push
and
xchg
loopne
loop
movl
outsb
push
mov
loopne
loope
mov
gs
mov
cmpsb
aas
rcrl
xchg
mov
aad
fmull
mov
sti
cmp
rcr
mov
arpl
aas
lahf
push
repnz
jp
mov
push
rcr
dec
out
sub
test
js
add
outsb
test
cmpsl
cmc
mov
in
in
cmpb
movsl
hlt
in
and
dec
lock
sbb
xlat
imul
or
sti
sbb
es
mov
fdivrs
jg
loope
in
cli
mov
cs
and
adc
adc
in
jbe
ss
fcomp
push
jae
fildll
pushf
adc
mov
fs
loop
pop
pop
dec
or
ljmp
mov
in
mov
aam
cld
jle
stos
cs
jo
fimuls
mov
dec
lret
fwait
and
mov
sub
add
lea
xor
and
lret
call
xchg
inc
mov
scas
push
arpl
mov
outsl
jmp
scas
mov
pop
jl
les
jae
fadds
pusha
movsb
lock
das
jle
sub
mov
or
mov
and
jnp
cli
and
jae
lods
sti
adcl
test
pop
xor
repz
clc
push
jo
andl
aaa
pop
dec
push
popa
or
dec
jl
nop
clc
adcb
xchg
in
inc
jmp
mov
dec
lock
cltd
cmc
ljmp
pop
cmp
jg
ficoms
sub
jns
lods
jne
xchg
xor
push
cmp
push
and
cmp
pop
lret
ljmp
test
lds
xor
sbb
repz
xor
aam
test
mov
cmp
push
sbb
or
add
stos
xchg
xchg
adc
push
scas
je
dec
dec
shll
cld
sub
pop
jb
scas
mov
popa
jl
mov
jbe
jg
add
or
xchg
ja
movsl
outsl
idivb
push
mov
aas
les
daa
dec
test
mov
leave
loope
or
nop
fdivrl
xor
sbb
inc
pop
and
xor
daa
aam
add
push
cmc
jp
mov
pop
jnp
pop
mov
je
jmp
sub
adc
fsub
inc
sub
stos
iret
sbb
sahf
mov
jne
fld
jnp
mov
lock
add
int
jae
dec
pop
xchg
cmp
push
lds
xchg
mov
jmp
mov
push
add
pop
les
mov
les
push
cmp
sub
in
fstl
cmp
test
sahf
orb
inc
mov
arpl
aam
das
rcll
cmp
add
xchg
add
clc
outsb
adcb
repnz
xor
adc
sar
roll
pusha
or
lds
inc
out
mov
add
mov
pop
je
icebp
dec
cwtl
or
subb
bound
push
add
dec
stos
mov
and
and
imul
mov
dec
adc
ret
cltd
inc
mov
pop
jo
lahf
mov
stos
xchg
loope
and
xchg
mov
sub
pop
inc
xchg
fdivrl
xchg
sbb
adcb
dec
pop
jle
mov
shl
clc
push
in
lahf
xchg
dec
fdiv
loop
mov
test
fidivl
xor
xor
loopne
add
push
in
js
or
and
cmp
mov
xchg
add
lock
sub
enter
add
jno
inc
lret
sub
scas
ja
cmc
dec
out
es
ficomps
cmpb
pop
or
add
lret
imul
cld
add
push
inc
mov
mov
adc
mov
mov
sbb
aad
mov
enter
mov
cmp
sbb
in
mov
xchg
jle
enter
pop
rcl
jmp
movsb
scas
jmp
inc
mov
add
mov
dec
gs
inc
or
mov
das
cmp
dec
cltd
sbbb
pop
dec
dec
es
cmp
notl
add
jbe
insb
cs
pop
pusha
jecxz
stos
es
into
fcmovbe
lret
mov
sbb
adc
sub
das
and
mov
cmp
sahf
adc
inc
mov
cmp
jns
and
adc
nop
xchg
rcrl
rol
jle
xor
xchg
in
mov
pop
and
imul
sbb
notb
pop
dec
roll
aad
daa
xor
sti
scas
jae
leave
fsts
lcall
xchg
out
std
cvtpi2ps
cmp
cmp
outsb
or
and
sbb
sub
cltd
insb
mov
cmpl
inc
mov
xchg
subb
xchg
insb
sub
xchg
push
inc
jge
mov
xlat
nop
and
imulb
lahf
pop
lods
xchg
and
and
lods
jbe
add
adc
mov
push
out
lret
or
xchg
mov
jecxz
push
sti
nop
cmp
mov
push
xor
addr16
sub
mov
rcrl
mov
stos
mov
cld
loopne
in
jl
inc
adc
jmp
jge
and
mov
pop
or
les
add
sbb
add
and
mov
cmpsl
mov
cmp
xchg
push
nop
mov
sbb
and
lret
lcall
js
or
lcall
loop
pushl
cmp
pop
xor
add
call
into
jmp
push
lret
mov
sub
xchg
adc
sbb
mov
movsb
push
adcb
cld
cs
and
inc
cmp
xchg
sti
push
enter
jo
inc
and
jo
cmp
sahf
ja
xor
mov
subl
xchg
sahf
outsb
leave
xchg
add
sbb
out
stc
jmp
and
fisubrs
cmp
loop
test
mov
mov
mov
int
call
mov
pop
mov
in
mov
cwtl
xchg
cltd
scas
mov
and
inc
push
lret
mov
adc
inc
inc
movsl
lret
jmp
std
js
stos
sarl
push
xor
cmp
cltd
arpl
sarb
popf
je
cld
push
mov
mov
pop
es
movb
addr16
inc
aaa
hlt
add
push
mov
rcrb
xor
ss
cmp
or
push
in
add
mov
mov
imul
outsl
ja
lock
dec
push
mov
scas
mov
sbb
mov
mov
test
out
mov
mov
mov
sahf
fimull
les
push
or
aad
add
insb
movsl
imull
xchg
xor
loopne
test
sub
add
xor
popf
cld
aaa
jbe
xor
sbb
test
out
loopne
arpl
test
xor
in
cld
mov
movsl
aam
xor
cmp
jge
push
fcomi
xchg
pop
movsl
mov
or
das
pushf
repnz
enter
and
repnz
popf
outsl
dec
into
inc
push
pop
pop
pop
insb
bound
xchg
stos
sub
xchg
pop
nop
cmc
idivb
push
mov
les
sub
fwait
daa
in
cmpsb
pop
push
xlat
push
adc
mov
push
push
das
or
cmp
cmp
mov
dec
sbb
pop
sbb
cmp
lods
inc
adc
mov
in
mov
xchg
add
xor
dec
xor
into
js
nop
movsb
ret
lret
mov
pop
daa
outsb
xchg
cs
cmp
fisttpl
test
xchg
pop
ljmp
or
cmp
pop
fstl
xor
fnstcw
stc
test
orb
adc
push
pushl
out
stc
xchg
mov
push
jp
arpl
xlat
leave
dec
pop
cmp
test
cwtl
jl
dec
xor
movsb
or
in
lock
or
mov
hlt
out
ret
xorb
mov
jo
iret
loop
add
or
mov
jecxz
dec
push
aam
sub
xorl
inc
push
out
in
mov
xor
mov
std
inc
sub
push
dec
cltd
fwait
sub
test
hlt
scas
bound
cli
add
mov
push
jbe
pop
addr16
add
rorb
and
imul
sub
ds
xor
decb
call
xchg
mov
push
fiadds
cmp
ss
and
dec
inc
ljmp
jae
inc
sbb
xchg
xor
popa
sbb
js
outsl
cltd
stos
das
lds
into
fisttpl
in
add
test
std
test
push
cmp
outsl
sti
jno
enter
pushf
imul
push
xor
data16
roll
mov
mov
jp,pn
pop
push
cwtl
or
sub
dec
ds
push
out
xor
call
add
xchg
and
stc
xor
add
mov
movsl
shlb
cmp
mov
jbe
add
test
cwtl
out
frstor
hlt
pavgb
cmp
aad
es
aaa
xchg
pusha
inc
shll
push
xchg
inc
jecxz
leave
xor
pushf
test
adc
rclb
inc
ja
push
out
mov
push
das
in
xor
cmp
sbb
xchg
scas
dec
mov
fwait
clc
pop
pop
loope
or
cmpsl
mov
in
hlt
xchg
mov
jecxz
int
scas
inc
xor
outsl
mov
pop
popa
mov
add
int3
mov
outsb
jno
imul
dec
mov
imull
or
sub
addb
mov
in
ja
pop
xlat
xor
icebp
pop
jp
cmp
dec
lea
cltd
or
cmp
inc
mov
dec
arpl
mov
mov
popa
inc
decb
popa
sarl
adc
and
inc
jge
cmp
sub
sub
push
imul
mov
xchg
gs
adc
movsl
sub
andl
inc
mov
dec
subl
jae
or
in
lods
icebp
mov
adcl
lahf
ret
xchg
xchg
sarb
fstps
es
jbe
imul
in
inc
movsb
out
mov
or
call
repz
dec
fistps
xor
xchg
dec
pop
xchg
cmp
mov
xor
add
mov
fs
cmp
sub
call
xchg
mov
push
js
fs
arpl
xchg
pop
test
jle
inc
and
out
mov
cmpsl
leave
lcall
xlat
test
sbb
mov
clc
sahf
cmp
adc
minps
xchg
xchg
iret
cltd
xchg
cmp
push
negl
rorb
mov
and
inc
adc
sub
push
mov
xor
mov
mov
and
sub
mov
cmp
iret
dec
rcll
or
mov
inc
jmp
push
icebp
cmp
xor
iret
or
push
sub
push
mov
es
inc
dec
inc
dec
and
cmp
and
mov
aaa
sahf
int3
cmp
mov
pop
ljmp
sub
es
hlt
or
push
call
xlat
mov
sbb
xorl
dec
shlb
mov
pop
cmp
cmp
aad
or
adc
cmpsl
insl
mov
mov
cmp
das
mov
loope
inc
lock
add
dec
fistpll
fstpt
mov
jo
mov
push
pmaxsw
negb
cs
push
rcr
fdivl
jl
adc
stos
sarl
xchg
mov
or
mov
jne
sbb
cld
cmp
adc
int3
add
lods
xchg
xor
dec
and
in
sub
sbb
or
mov
shl
push
jge
int3
jne
push
test
adc
cmp
xchg
sete
mov
repz
scas
lock
retw
adc
je
jnp
xor
ffreep
mov
adc
std
orb
leave
jno
aad
xchg
push
imul
push
clc
in
xchg
mov
outsb
jno
add
sbb
sbb
mov
mov
lret
sub
or
add
mov
xorl
mov
adc
jecxz
and
xor
fldt
aad
push
fiadds
pushf
jecxz
mov
decl
xchg
je
repnz
inc
inc
fnstsw
mov
push
mov
or
cs
jle
outsl
push
ficoml
pop
movsl
movsb
cli
rclb
dec
lods
and
fs
adc
inc
stos
pop
sbb
ds
xchg
aam
xchg
sti
cmp
shrb
rol
nop
loope
mov
sub
mov
fsubs
es
popf
test
ret
int3
lock
aad
sbb
popf
sti
and
rcr
pop
mov
adc
repnz
push
shl
and
sti
cmp
cmp
cmp
std
jno
les
push
xchg
stc
add
mov
sbb
mov
and
add
or
or
daa
fidivrs
pop
lock
inc
push
mov
pop
inc
nop
mov
mov
stos
sub
sti
sbb
xchg
pop
xchg
pop
inc
das
leave
push
loope
inc
push
in
add
add
xchg
les
xchg
jecxz
fcoml
mov
stos
and
cmpsb
pusha
adc
call
lds
clc
xchg
nop
mov
mov
outsb
mov
popl
in
sub
data16
dec
popa
jecxz
mov
inc
testl
xchg
shrb
mov
in
shll
adc
push
fisubrl
lods
addr16
fcom
insb
iret
add
mov
mov
daa
fidivs
adc
notb
dec
sbb
popa
or
fisttpl
imul
test
movsb
dec
mov
mul
inc
fs
mov
aad
in
int
xchg
ja
xchg
js
xor
mov
das
dec
sbb
mov
and
outsl
aaa
fistpl
mov
mov
cmp
pop
sub
movsb
and
imulb
pop
mov
call
loop
mov
popf
out
push
jns
xchg
mov
pop
fsub
aaa
bound
jg
stos
repz
arpl
stos
inc
sbb
add
hlt
jl
call
jbe
sbb
dec
rolb
popa
fdivrs
xchg
loopne
and
orb
stos
addr16
cwtl
test
pop
sub
stc
cld
add
adc
lds
popf
push
sbb
ss
jecxz
xchg
cmp
sub
test
outsb
out
inc
iret
xchg
add
ror
mov
add
inc
imul
mov
inc
stos
es
adc
cltd
leave
mov
sahf
inc
mov
xchg
or
in
data16
ror
pop
mov
inc
jecxz
xchg
push
in
test
in
inc
lahf
pop
add
inc
or
aas
mov
rcl
mov
mov
outsb
shl
arpl
es
popa
add
cmp
mov
jp
pop
mov
mov
xchg
repnz
mov
jo
daa
addr16
adc
bound
jne
lea
stos
inc
stos
sub
xchg
out
xchg
sbb
sti
push
lds
hlt
stc
cmp
and
lahf
jnp
push
jno
es
or
jae
and
pusha
xchg
add
cmp
adc
js
or
testb
mov
into
mov
push
sub
and
pop
mov
movb
leave
jmp
add
fldlg2
dec
xchg
mov
addb
mov
cltd
lcall
add
clc
push
fstpt
sub
push
int
por
pusha
iret
cmp
icebp
mov
out
jbe
in
into
lods
mov
dec
mov
pop
repnz
lret
xor
in
pop
xchg
dec
rclb
lret
jmp
mov
inc
ja
data16
lods
stc
and
jno
sbb
pop
fcom
xchg
and
inc
insb
jae
push
shll
ljmp
sbb
orb
jge
cmpsb
arpl
jmp
and
fdiv
mov
mov
xor
arpl
and
lea
jb
gs
das
xchg
cmp
mov
aam
popa
xchg
aaa
popa
in
cltd
imul
insb
push
inc
je
sub
dec
stos
pop
add
mov
xchg
fdivl
ja
popf
fnstenv
inc
loope
int3
and
mov
shrl
pushf
ss
mov
sub
aam
std
pop
loope
into
ljmp
cmpsb
imul
push
mov
inc
xchg
ljmp
xor
stos
xor
inc
mov
js
in
jnp
fstl
fimuls
movhps
scas
mov
mov
mov
fs
mov
cmp
sub
stc
adc
enter
adc
ds
jecxz
jmp
lret
sbb
add
pop
push
add
push
data16
inc
push
enter
insl
shrd
loope
inc
push
jge
pop
mov
jno,pn
jno
sub
pushl
pop
xchg
adc
inc
or
jecxz
in
hlt
scas
cmp
mov
aaa
jg
mov
outsl
push
push
push
mov
dec
sahf
adc
sti
sub
out
dec
or
repz
popf
into
stos
lock
sub
insb
push
xchg
decb
xor
rolb
or
mov
mov
int
sbbl
into
push
cli
mov
pushf
sub
xor
inc
cmp
sub
in
xchg
mov
js
std
lods
jge
ja
stc
insb
add
in
gs
inc
push
xchg
lods
je
popf
scas
xlat
and
fadd
xchg
cmovp
xchg
push
mov
jmp
insl
xor
mov
cmp
push
xchg
out
or
fs
jns
pop
mov
addr16
frstor
mov
xchg
punpckhbw
jb
lds
imul
sub
add
or
cltd
movsl
jle
loopne
mov
lock
pop
outsb
pop
mov
shll
out
add
insl
scas
lock
cmp
add
jbe
stos
imul
inc
lret
and
stc
fucom
imul
mov
cwtl
and
nop
sbb
es
dec
mov
notb
mov
adc
and
mov
ljmp
mov
cld
clc
cld
sbb
daa
fists
inc
jns,pn
int3
xor
aad
sub
xor
or
lds
hlt
je
cmp
idiv
fildl
cmpb
or
das
mov
sbb
call
cmp
repnz
push
test
mov
lahf
jp
push
loopne
cmp
loopne
jne
test
cmp
gs
xchg
test
std
ret
shrl
mov
pusha
and
xor
cmpsb
mov
mov
movsb
mov
jp
lea
and
dec
mov
xchg
ret
mov
xchg
js
mov
add
test
scas
outsb
sbb
dec
dec
fisubs
movsl
lahf
adc
lret
and
loope
xchg
testl
pop
roll
push
fidivl
or
sbb
pop
push
and
cwtl
push
icebp
push
lahf
pop
mov
push
or
shll
sbb
outsl
in
fs
xor
push
std
jb,pt
push
push
aam
pop
xor
cmpsb
or
mov
xchg
xchg
xchg
jo
aam
in
jo
xor
mov
lcall
dec
add
dec
add
push
shrb
fstl
xchg
aas
lret
push
pop
mov
xchg
mov
in
mov
ret
mov
fidivs
mov
je
sub
dec
jle
xor
xor
insl
movsl
cs
mov
cs
repz
cmp
xlat
fs
inc
adc
mov
testl
xlat
test
dec
ja
movsl
push
negl
insb
xor
push
imul
aas
aam
test
sbb
sbb
insl
psrad
push
iret
adc
lods
or
mov
push
mov
mov
popa
popf
fisubl
xchg
inc
in
mov
ljmp
jns
fbld
mov
ss
loopne
mov
inc
cmc
cltd
out
pop
or
aam
test
pop
shl
sub
mov
jl
add
nop
adc
pop
aam
add
cli
fbld
inc
ds
mov
mov
xchg
imul
lock
mov
jp
lds
push
push
and
loope
xchg
mov
stos
arpl
push
inc
rep
fadd
and
inc
les
int
dec
sub
and
sbb
sbb
fmull
mov
push
fimull
clc
enter
pop
divb
and
pop
mov
jne
cmp
mov
shlb
call
rolb
dec
cli
mov
mov
into
icebp
xchg
or
xorl
mov
mov
or
int3
jb
add
sub
inc
bswap
out
jb
call
into
sub
fcomi
jno
pop
test
mov
pop
sub
push
lret
inc
or
pop
push
sbb
movsl
popa
sbb
adc
add
push
iret
xchg
adc
and
fnsave
jg
mul
push
test
add
sub
orb
stos
mov
test
inc
sbb
rcll
sbb
push
ja
jbe
xchg
testl
xor
cmpsb
pop
popf
sub
and
or
sub
push
fwait
mov
xor
xor
bound
adc
nop
cmp
xchg
adc
out
add
sbb
dec
jno
int
addb
push
std
loop
jne
int
adc
leave
mov
into
push
mov
repz
mov
xchg
push
lods
insl
out
sbb
jns
enter
loope
and
in
dec
lcall
jbe
idivl
movsb
sub
ret
cmc
cmp
inc
inc
sbb
jns
rclb
clc
sbb
sbb
div
std
cmc
out
mov
arpl
adc
jno
xchg
scas
sbb
push
mov
jae
xor
xchg
push
push
dec
or
inc
jl
popl
push
dec
call
mov
shrl
jg
sahf
ss
cltd
add
les
lahf
bound
orb
fstl
pusha
ss
pop
pop
daa
mov
sub
loop
call
add
and
push
adc
cmp
bound
pop
and
stos
fistps
sub
loop
sti
mov
adc
push
icebp
sub
xor
scas
cld
jns
pop
cmp
adc
aaa
and
popa
dec
jo
out
jecxz
ret
andl
sti
fbld
jl
out
cmpl
or
pop
adc
stos
cmp
pusha
stc
loop
scas
sub
sbb
sub
jmp
out
jo
cmp
out
or
fcmove
fldcw
inc
out
pop
dec
jae
sarb
mov
pop
int
mov
or
ja
dec
dec
popa
pop
add
add
ret
xchg
pusha
or
add
sbb
je
imul
pop
and
inc
inc
fisttpll
xchg
pop
sub
lea
mov
mov
cmp
and
sbb
or
imul
push
in
inc
jae
hlt
and
addr16
cld
or
mov
mov
adc
out
jecxz
imul
sub
xchg
jns
mov
adc
add
sbbl
or
sub
dec
jae
lea
add
orl
add
rorl
fdivrp
push
notb
fadds
ljmp
jmp
js
xlat
jno
mov
stos
xchg
lock
iret
mov
subb
push
cs
jle
xchg
sti
mov
aaa
dec
jecxz
mov
movsb
lods
loop
sbb
daa
inc
into
push
or
xchg
xor
lock
cmp
adc
movsb
push
out
nop
enter
xor
and
pop
jno
cmp
mov
and
push
test
jg
mov
lods
push
cld
aam
dec
jo
fwait
xchg
add
shr
daa
movsl
add
adc
or
mov
test
and
ss
rcr
sub
mov
aaa
and
fcompl
dec
ljmp
popf
lret
adc
sub
rolb
adc
inc
insl
arpl
dec
lcall
icebp
cltd
shr
jbe
mov
loope
roll
cmpsl
je
cmp
shll
jnp
clc
jno
ss
mov
bound
mov
ficompl
push
mov
sahf
cs
orl
pop
pop
imul
inc
xor
lea
sbb
xchg
fdivrl
int
dec
mov
pop
repz
xor
xor
lea
aad
das
cmpl
imul
add
sub
and
mov
ja
div
adc
jno
repz
pop
andl
hlt
sbb
leave
out
mov
xlat
shll
lods
inc
and
into
mov
insl
push
fwait
outsb
dec
ret
test
sbb
in
mov
adc
mov
sub
fildll
es
les
std
cmp
mov
shll
mov
sub
pop
mov
repnz
mov
ljmp
pop
push
xchg
xor
or
lods
fdivr
loop
mov
mov
or
cmpsb
outsb
xchg
mov
jmp
mov
cmpsl
jbe
pop
test
add
andl
sahf
lock
add
ljmp
sbb
iret
loopne
mov
inc
shlb
jmp
mov
test
sub
and
popw
outsl
pop
push
imul
add
sub
mov
rcll
les
cmp
dec
push
imul
iret
cmp
dec
mov
adc
and
fs
sbb
pop
sti
dec
xchg
sub
mov
inc
scas
sbb
scas
icebp
int
mov
aam
jns
jns
lods
mov
out
repnz
push
das
ret
mov
adc
popf
dec
sahf
inc
sahf
dec
scas
pop
popa
mov
loopne
cmp
nop
out
xlat
lret
xchg
inc
mov
pop
mov
pop
jmp
fsts
and
leave
mov
loope
sub
mov
fisubl
xlat
adcb
imul
outsb
inc
scas
add
stos
push
xor
aas
fcomip
cmpsb
cmp
inc
scas
fstpt
push
out
add
mov
jmp
push
add
adc
pop
out
mov
mov
nop
xchg
lea
mov
inc
iret
dec
sub
daa
mov
pop
fisttpl
in
movsl
or
mov
add
out
mov
pop
push
bound
pop
lcall
scas
xchg
dec
mov
or
idivb
insl
in
subb
push
fadds
xchg
jmp
dec
xchg
lock
push
testb
out
push
sbb
dec
dec
mov
fs
and
test
dec
mov
add
sbb
loope
mov
push
in
or
jnp
mov
jg
pop
je
mov
and
cmpl
and
xchg
push
imul
in
cmp
imul
pop
add
push
push
mov
dec
lret
jnp
mov
inc
call
inc
jb
sbb
mov
aaa
outsl
es
insl
adc
repnz
push
andl
out
push
push
cli
hlt
jb
in
sub
inc
test
js
cmpsb
imul
xchg
mov
xchg
cmp
inc
inc
sub
jnp
lret
ror
pop
sbb
dec
pop
lock
push
fstps
ret
add
popl
pop
mov
jnp
sub
aam
xchg
fldl
mov
mov
mov
int3
mov
sahf
push
mov
push
into
leave
pop
inc
arpl
addr16
add
jp
mov
mov
dec
lcall
xlat
stos
xor
lcall
mov
js
jbe
add
and
idivb
pop
call
negb
fcmovnu
in
lahf
pop
inc
pop
addb
sbb
gs
gs
lods
movsb
and
push
add
jle
fsubrs
sar
int
in
aam
sbbl
adc
roll
std
dec
xor
lcall
push
scas
mov
push
scas
xor
call
adc
xchg
cli
mov
sahf
jmp
loopne
cmp
or
std
call
in
sbb
xchg
test
add
or
jae
fstl
xchg
sbb
mov
sub
jecxz
loope
out
push
lret
inc
cmp
stos
cmpsl
or
frstor
push
ret
fildl
dec
imul
insl
in
mov
lcall
aaa
xchg
push
mov
out
gs
dec
shrl
or
movsb
sub
pop
addr16
sub
and
sub
fidivs
or
dec
jle
adc
adc
jge
sbb
inc
mov
imulb
je
xor
pushf
pop
xchg
negl
push
mov
mov
pop
jmp
mov
sahf
jp
pop
xor
mov
inc
sub
mov
into
imull
insb
movsl
mov
cmp
pop
repnz
dec
xchg
mov
fnstcw
push
out
fdivrs
imul
lret
ja
jp
mov
gs
adc
lock
dec
out
jbe
mov
mulb
test
cwtl
inc
pop
pop
jno
xor
adc
mov
insb
sub
sahf
lahf
inc
mov
cmpsl
popf
push
loopne
inc
dec
iret
pop
xchg
popf
xchg
pop
inc
sub
stc
ret
mov
outsb
ljmp
jge
add
pop
ja
inc
jo
insl
mov
sub
sub
adc
or
into
xchg
xchg
aad
sbb
cmp
mov
aas
dec
sti
cld
fistl
cmp
das
int3
xchg
push
push
sub
xchg
flds
rcl
je
cmpsb
fwait
inc
dec
sahf
test
sub
pusha
insl
cmp
sahf
dec
mov
gs
movsb
sub
pushfw
pop
testl
pop
inc
cmpsb
lret
push
pop
push
push
test
bound
test
sbb
and
jge
cld
rcrb
fldcw
shll
mov
jno
into
or
stc
movsl
cwtl
or
mov
sbb
sti
lcall
lcall
lock
push
jecxz
mov
inc
test
dec
cltd
mov
mulb
aad
push
pusha
addr16
mov
fucomip
stos
out
es
push
dec
insb
sbbb
mov
push
cmp
lahf
stc
dec
out
icebp
xchg
loop
sub
cmp
loope
pcmpgtw
outsb
mov
mov
mov
push
xchg
ret
icebp
push
testl
mov
cmovb
adc
ret
and
sub
repz
xchg
rcrb
test
enter
inc
imul
out
inc
icebp
mov
lds
enter
mov
cltd
xor
test
movsb
jns
sahf
pop
insl
push
inc
sbb
jno
sub
test
arpl
xchg
aaa
cmp
inc
xchg
sub
dec
js
push
and
sub
pop
xor
cmp
daa
cmp
ret
add
push
aas
popf
out
je
jbe
mov
and
in
mov
sarb
dec
or
clc
lods
scas
leave
fdivl
or
imul
xor
cmp
jns
dec
adc
cmp
dec
jp
pop
ss
mov
sub
add
lret
out
inc
push
shrl
jp
aas
mov
sti
mov
pop
jbe
rcrb
jo
inc
sbb
mov
sub
shll
shl
push
lock
cmp
sub
je
filds
jge
repz
jecxz
arpl
cs
mov
scas
test
fs
fisttps
xchg
xchg
out
pop
fstp
or
rcl
filds
outsb
mov
lret
jmp
movsbl
dec
lea
cmpsb
fs
xchg
dec
das
and
into
and
pusha
lock
push
into
inc
cli
cmp
add
fidivl
jge
jg
fnstcw
add
inc
push
sahf
cmpsb
divb
inc
jecxz
adcb
inc
xchg
mov
cmpl
push
mov
inc
inc
hlt
sub
jle
xchg
lret
mov
lods
lods
mov
dec
sub
mov
xlat
pop
dec
and
sub
xor
mov
loope
popf
xor
xor
cmc
xor
clc
fnstcw
adc
dec
adc
push
dec
inc
lods
popa
stos
cli
fldenv
xchg
jl
jo
das
lahf
fistps
jo
daa
jmp
int3
std
jb
or
rclb
pop
in
insl
ret
inc
push
cmp
pop
stos
cmp
int
mov
cmp
adc
test
mov
dec
push
adc
es
in
sti
dec
sub
jp
lret
adc
push
dec
into
dec
iret
push
in
fs
test
fdivr
mov
pop
push
cli
repz
divl
push
pop
in
ja
fs
addr16
mov
and
stos
fcmovne
fs
push
jmp
incb
fs
inc
xchg
add
adc
psrad
inc
jecxz
inc
das
das
lret
add
pop
mov
iret
mov
dec
lock
or
pushf
aad
icebp
dec
pop
ljmp
jle
outsb
mov
cs
push
mov
roll
cmp
sbb
scas
push
arpl
inc
adc
popf
aad
jb
repz
ror
call
jb
sub
and
cmp
test
adcb
mov
push
fidivrl
xor
cltd
icebp
adc
pop
cli
jbe
icebp
fsubrs
aas
dec
jmp
lea
inc
jge
cmp
iret
outsb
mov
ret
pop
or
test
jmp
sbb
push
jle
imul
sub
push
rolb
cmp
sbb
add
xchg
sbb
mov
in
shll
imull
cwtl
sbb
addr16
or
test
in
push
ficoml
or
mov
mov
dec
std
les
adc
push
push
cmp
inc
sbb
dec
or
xchg
jl
jb
sub
clc
jae
mov
loopne
xchg
pop
incb
hlt
lds
sbb
dec
lea
ss
int
insb
rcll
cmpsb
xchg
fnstcw
push
or
inc
gs
adc
pusha
int
sbb
dec
add
ror
mov
ret
inc
in
scas
inc
sub
es
adc
cmpl
pop
es
add
xchg
pop
mov
mov
dec
xchg
lret
inc
lods
push
cld
out
enter
insb
cmp
jle
push
cmpsl
inc
pop
add
in
faddl
and
dec
adc
rcl
jmp
aas
and
adc
push
sahf
outsb
sub
mov
test
fucomi
adc
xchg
sub
add
lods
fadds
popf
inc
loopne
stc
add
push
mov
insl
fimull
stc
jmp
test
call
mov
inc
sbb
pop
mov
pop
stc
xor
leave
ror
rcrl
and
pop
fmuls
out
sbbl
subb
cli
add
add
or
dec
adc
pusha
sub
ret
fstpl
mov
xchg
leave
cwtl
sbb
sti
inc
mov
cmp
xor
lcall
ds
add
sbb
mov
xchg
dec
add
adc
dec
inc
dec
sbb
jne
jle
ja
cmpsb
shrb
add
inc
push
cs
inc
mov
icebp
pop
dec
inc
scas
pop
andl
jge
or
mov
jnp
sti
sub
dec
aaa
test
stos
imul
cli
or
fmull
mov
fs
idivl
nop
test
inc
add
sub
fwait
sub
sbb
mov
pop
loopne
scas
sub
call
cmpsl
iret
aam
add
mov
push
addr16
sbb
mov
jp
lods
into
lcall
in
push
mov
adc
jge
cmp
dec
ret
les
sarb
sub
fsubrl
xchg
mov
or
cmp
jns
cmp
pop
adc
jle
inc
dec
idivl
lahf
insl
push
or
icebp
ljmp
aad
inc
mov
fisubrl
jp
test
cmpl
jg
cmp
pop
sub
or
test
fdivr
and
mov
testb
add
shl
scas
clc
cli
leave
and
into
pop
cmpsb
repz
jno
lods
and
in
imul
adc
push
gs
scas
mov
push
pusha
lret
lcall
cmc
xorl
daa
pop
jge
scas
ss
testb
scas
jnp
jg
sbb
mov
cs
adc
add
icebp
into
rclb
sbb
xor
test
mov
xchg
xchg
aad
push
sbb
pop
pop
pop
mov
mov
sub
xchg
mov
sub
sub
idiv
xchg
xor
int
orb
mov
ret
rcrl
push
gs
roll
xchg
shrl
sub
fisubs
int3
inc
jle
dec
ret
mov
xchg
mov
ds
loop
and
inc
movsb
jo
adc
push
jo
je
lods
rcrl
lret
insb
lods
xor
das
popl
je
xchg
lods
jns
pop
fs
cmpsl
pop
inc
test
data16
add
add
pop
push
adc
in
cmp
xor
dec
call
fs
pushf
inc
fwait
inc
test
out
mov
in
negl
mov
popf
cmp
push
fs
dec
lea
insb
or
ret
mov
ficoml
enter
mov
inc
xlat
les
sub
pop
sbb
negl
mov
inc
sub
movsb
shll
mov
inc
orl
mov
push
and
inc
and
mov
fcmovu
je
je
add
jo
dec
je
or
and
dec
cld
inc
stos
insl
into
jb
lret
lds
lods
pushf
leave
arpl
xchg
aas
xor
add
mov
jp
test
lds
shr
dec
cltd
loope
or
iret
pop
pop
call
addr16
mov
dec
jmp
push
push
inc
cmp
and
sbb
push
stc
or
xor
ror
shl
fwait
dec
stc
int3
inc
das
inc
pop
fsubr
mov
pop
mov
and
pop
sbb
call
dec
decb
sub
repz
shl
and
insl
mov
outsl
jb
je
mov
sub
mov
add
and
cmpsb
ficoms
push
mov
pop
adc
mov
push
jmp
popf
cwtl
cmpsb
sub
movsl
insl
sub
inc
jmp
data16
pushf
test
inc
push
xor
xchg
test
inc
insl
aas
test
stc
or
jae
adc
fwait
adc
cwtl
xor
movsl
sub
ss
cmp
pop
fdivrl
xorb
pop
dec
stos
pop
mov
movsl
lret
mov
repnz
or
clc
cmp
mov
les
sub
call
mov
xchg
ljmp
int3
dec
sbb
rol
dec
fnstenv
add
shll
adc
lds
xor
mov
xchg
dec
pop
sub
pop
std
inc
sub
std
in
rcr
pand
dec
mov
jns
inc
pop
cmpl
sbb
sbb
ret
xchg
mov
pop
negb
mov
fstpt
incb
mov
or
cmp
scas
mov
cmp
jnp
sbb
cmp
mov
subb
fstl
das
out
fimull
mov
mov
xchg
xor
das
cmpsl
or
lret
inc
push
adc
bound
mov
push
cli
cmp
cmpb
cmp
mov
and
inc
xor
sbb
cmp
leave
leave
cmp
je
pop
jle
mov
mov
je
fs
mov
ret
rorl
or
stos
cmp
rolb
cmc
or
out
mov
sub
jno
pop
inc
dec
cmp
dec
dec
insl
cld
pand
or
dec
orb
xchg
mov
pop
cmpsb
mov
mov
xor
jp
inc
inc
xchg
inc
aas
inc
pop
or
inc
push
movsl
pop
lods
loope
adc
hlt
into
push
repz
cmpsb
mov
xchg
sbb
and
xor
jno
push
dec
jno
ficoms
cs
jl
and
pushf
cmp
mov
fs
inc
lods
pop
or
sbb
push
mov
dec
push
out
cmp
xchg
es
mov
je
fnsave
or
inc
shll
push
in
in
fwait
orl
pop
fwait
imul
inc
int
aaa
dec
imul
jbe
mov
fisubl
stos
imul
mov
xchg
cmp
xor
inc
mov
cmp
lcall
push
push
pushf
xor
repz
and
push
lret
add
sub
pop
nop
sbb
repz
lret
pop
xchg
psubq
adc
cli
mov
ret
rcr
sub
leave
fdivrl
and
testb
aaa
rorb
and
and
into
pop
mov
sub
pop
test
jne
pop
int3
mov
jno
mov
lods
jl
imul
sub
repnz
adc
push
jns
stc
jns
cmpsb
push
sahf
mov
mov
mov
push
push
imul
imul
lods
pop
mov
mov
and
stos
popl
mov
std
pop
adc
sbb
rorl
xor
add
or
dec
jle
or
es
jns
nop
mov
stos
insb
test
mov
jns
jmp
adc
jp
mov
gs
push
or
loopne
mov
cmpsw
mov
leave
jb
daa
push
out
push
xor
mov
mov
div
mov
add
and
push
mov
and
mov
mov
inc
ja
mov
push
stos
dec
pop
out
or
mov
mov
iret
outsl
mov
repnz
in
fidivrs
pop
dec
aaa
jmp
jl
pop
nop
mov
les
sahf
pop
sub
cmpsl
shr
mov
clc
mov
jo
adc
inc
mov
mov
adc
rcl
xchg
mov
loopne
fiadds
lock
inc
add
outsb
xor
and
fnstcw
mov
mov
dec
xor
push
int3
and
movb
xchg
pop
pusha
bound
rcl
push
cmp
mov
loope
pop
cmp
ret
mov
hlt
idiv
movsb
clc
lret
mov
mov
dec
lds
hlt
inc
mov
inc
out
add
mov
mov
sub
outsl
clc
sub
insb
loope
lret
and
sti
test
repnz
mov
cmp
dec
pop
push
sub
lahf
aad
leave
sbb
push
cmpsb
push
test
fisttpll
sti
cmp
xchg
push
ja
push
ja
mov
sub
stc
and
lea
nop
inc
data16
out
lods
out
lret
popf
nop
pop
popa
xchg
dec
add
push
sete
cmpsb
outsb
les
fwait
bound
fsubs
sub
jnp
mov
pop
push
inc
xchg
iret
fisubs
fidivrl
jp
addb
or
inc
sbb
push
and
inc
aad
and
mov
adc
loopne
jb
pop
lds
mov
mov
or
xor
jnp
dec
imul
inc
push
pop
mov
adc
xchg
dec
inc
rorb
xchg
popa
push
sbb
jmp
mov
push
lods
movsb
or
xor
cmp
ss
fdiv
xor
inc
hlt
xlat
shlb
fisttps
mov
mov
adc
dec
sub
lock
and
fsts
ja
xor
jmp
and
into
push
push
sbb
iret
js
and
js
mov
pop
hlt
std
ss
mov
jmp
jl
xor
insl
sbbb
stos
xchg
and
inc
sub
jp
jno
outsb
test
test
ljmp
lcall
mov
cld
rorl
pop
inc
popf
lahf
mov
mov
in
mov
pop
dec
adc
pop
pop
xor
subb
ret
movsb
jns
test
and
sub
dec
popf
jge
imul
mov
call
mov
rorb
pop
sbb
and
rcrb
repz
rorb
add
popa
popa
sbb
shr
loope
mov
scas
jnp
lods
addr16
insl
pop
jp
movb
add
jg
cmp
xlat
or
daa
mov
icebp
mov
xlat
xor
popa
mov
jmp
subl
cltd
movsl
clc
mov
mov
cld
scas
jp
insb
sbb
ret
pop
pop
into
lret
cmp
push
mov
int3
out
or
and
testl
inc
outsl
add
sbb
mov
mull
les
jb
sub
push
nop
mov
sbb
insb
cltd
push
push
mov
mov
sbb
enter
dec
sub
dec
cmp
xchg
orb
fsub
dec
inc
pop
mov
adc
cli
mov
sarl
loop
sub
mov
inc
lea
clc
mov
mov
mov
xchg
sub
js
cmpsl
push
out
out
cmp
or
mov
xor
sbb
cmp
pop
lds
mov
test
add
aaa
inc
mov
jae
movsl
lcall
xchg
movsl
out
or
imul
and
and
test
sub
icebp
pop
ret
cmpsl
jne
ja
mov
sub
xchg
not
out
xor
add
xchg
xchg
lds
orb
adc
jg
add
fstpl
and
inc
fnstcw
js
outsb
mov
rcr
lret
pop
mov
mov
push
inc
push
sub
mov
aam
arpl
cld
add
fimuls
stos
test
test
je
fcom
ss
mov
jno
incb
jl
and
xchg
push
test
jne
loope
es
gs
lods
into
mov
outsb
jge
mov
xchg
aas
out
popf
jmp
sub
xchg
or
cli
cwtl
sbb
out
mov
test
push
add
fstpt
les
int
push
mov
inc
dec
mov
cmp
popf
mov
out
or
call
adc
cmp
les
out
sub
enter
aad
sbb
xor
imul
pop
shll
ljmp
lock
jae
push
adc
cmp
adc
sbb
mov
and
xchg
fistpl
add
cmp
test
mov
mov
dec
xchg
add
add
push
sti
shlb
aad
jg
aad
cmp
add
leave
jns
xchg
lds
xchg
dec
lea
sbb
and
and
loopne
test
cmp
jae
xchg
into
mov
cmc
mov
rolb
push
xor
fmull
imul
jns
push
xlat
mov
xor
sti
jno
mov
rcl
and
fsubl
inc
rorb
scas
arpl
add
mov
rcll
push
popa
fnstsw
and
push
push
mov
filds
lea
jge
xorb
sbb
adc
mov
into
cmp
shrd
mov
dec
push
sub
loope
aas
int
inc
cmp
or
fwait
in
dec
add
add
out
fisubrs
lds
rcr
test
adc
jb
cmp
cmpsl
dec
jo
xchg
insl
mov
inc
pop
stos
mov
sbb
rorl
xchg
mov
mov
sub
movl
inc
bound
fcmovu
cmp
call
push
scas
bound
pop
or
mov
inc
out
sbb
ljmp
jnp
das
mov
xor
and
or
fldcw
jbe
mov
cmp
xchg
call
fstpt
mov
mov
jae
aas
pop
xchg
int3
sbb
sub
sub
push
roll
jb
fbld
sub
fnstcw
jp
fisubrs
dec
xor
xor
push
jns
ficompl
mov
outsl
mov
xchg
dec
pop
adc
mov
mov
rcrb
popa
add
dec
mov
mov
mov
mov
out
sub
pop
leave
pusha
xchg
decb
clc
mov
data16
out
sub
sbb
nop
mov
imul
mov
mov
out
ljmp
inc
popf
rorb
inc
pop
add
sub
pop
es
mov
inc
fildll
bound
and
fimull
mov
loop
sbb
push
and
nopl
addr16
dec
mov
sbb
sub
xor
aas
mulb
pop
pop
imul
and
lock
mov
mov
fimull
out
cs
clc
lods
mov
pusha
std
sub
push
or
add
xor
xchg
movsb
aas
aad
lock
pop
sub
in
xchg
stos
mov
inc
mull
insb
hlt
push
addr16
sbb
push
mov
leave
in
xor
push
divl
sbb
mov
cmp
ss
or
add
repnz
jecxz
bsf
pop
jge
adc
mov
mov
loopne
adc
out
lahf
sub
int3
add
dec
adc
cmpsl
sub
add
pop
push
lock
jg
inc
push
or
jge
inc
inc
jecxz
sub
daa
movsb
aas
dec
pop
stos
mov
jl
xchg
jno
rcrl
push
mov
and
test
add
je
movsb
mov
fcomps
push
sbb
mov
std
sar
push
and
incb
pop
fldcw
jp
pusha
xchg
dec
sub
mov
and
mov
jbe
sbb
sahf
jbe
lahf
xchg
cmp
jp
movq
test
stos
sub
aad
aam
test
int3
cwtl
into
mov
aas
js
push
cmp
push
lahf
pop
add
mov
mulb
aam
cld
sarl
or
jnp
jg
jae
mov
push
scas
loope
push
int3
sub
xor
dec
push
mov
add
cmpsl
repnz
sti
cmpsb
adc
push
or
ja
shl
bound
lea
fisubrs
and
fcmovne
lret
pop
movsl
pushf
push
push
stc
and
test
inc
inc
gs
ret
in
mov
dec
or
mov
add
ljmp
xchg
call
rclb
in
cmp
mov
bound
push
mov
fisubrl
mov
data16
sahf
add
push
out
out
push
movsl
stos
add
repnz
rcll
fwait
inc
ja
mov
cmp
loope
movzbl
lds
repnz
insb
leave
fs
add
inc
pop
sahf
fisubl
add
push
ds
lahf
push
test
jbe
or
xlat
inc
sbb
push
lahf
mov
fisttpll
mov
fimull
xchg
push
cmp
or
das
fists
mov
mov
pop
std
xchg
pop
xchg
dec
rol
pop
out
jno
cmpsb
aad
sbb
in
loop
divl
test
gs
mov
imul
aad
cmpsl
and
bound
and
push
rolb
aas
or
pop
push
imulb
mov
lds
and
fs
mov
fbld
jnp
mov
aam
int
mov
outsl
scas
xchg
and
xchg
dec
and
es
ret
or
jp
inc
mov
div
adc
bound
xor
add
lret
xor
inc
data16
pop
movsl
add
add
rorl
vmptrld
add
and
fldt
push
fsubr
sub
jg
push
pop
xor
push
sbb
addr16
not
sti
xchg
andb
push
leave
cld
dec
dec
pop
adc
or
sbb
or
mov
inc
ret
out
mov
dec
adcb
cltd
fwait
inc
dec
or
pop
mov
jmp
pop
adc
movsl
movsl
jnp
je
push
jae
ror
dec
je
xor
push
sub
jns
push
lahf
pushf
add
mov
out
xor
xor
imul
pop
fucomip
pop
pop
push
les
mov
lds
inc
sbb
ljmp
or
divl
inc
xlat
idivl
mov
aad
push
xchg
xor
mov
es
in
jmp
fstpl
xor
xor
jmp
loop
pop
lds
out
in
aaa
cmpsb
aaa
repnz
outsl
adc
ret
add
into
repnz
ss
push
inc
cwtl
arpl
fldl
sahf
sub
popa
xor
addb
ss
test
out
push
sti
notb
jb
xor
add
rorb
mov
insb
mov
es
push
test
fldcw
out
fwait
ret
push
das
mov
xor
jne
inc
in
cmpsb
mov
mov
jmp
or
cs
dec
repnz
daa
andl
xor
in
pop
out
leave
das
idivb
cmp
out
mov
cmpsb
xor
dec
test
rclb
sbb
pop
xchg
les
and
pop
xchg
jg
pop
lcall
in
movsb
fildl
adc
daa
shrl
int3
loopne
sub
cmpsl
dec
dec
mov
insb
mov
dec
movq
mov
rcr
jmp
and
cmc
std
adc
jo
test
inc
mov
scas
cwtl
push
push
cli
mov
jne
cs
mov
fidivrl
push
testb
pop
mov
dec
pop
pop
clc
mov
cmp
scas
jo
pusha
mov
add
xchg
sub
jae
mov
gs
pop
lret
iret
jo
adc
xor
push
pop
sub
sub
enter
je
add
roll
es
lcall
add
and
xchg
ja
stc
mov
imul
xchg
dec
das
mov
shll
jg
dec
mov
icebp
andl
mov
das
mov
in
sub
std
pop
and
insb
shl
push
mov
ljmp
loop
mov
jg
fwait
hlt
push
jp
sbb
gs
add
xor
push
cwtl
push
stos
push
cs
pop
mov
ja
jbe
stos
leave
pop
addr16
sbb
push
mov
arpl
call
mov
pop
pop
je
xor
push
rclb
sub
xor
mov
mov
and
or
inc
fwait
dec
loopne
data16
aad
sbb
adc
insl
xchg
push
scas
add
mov
add
out
aas
dec
cmc
hlt
push
dec
adc
adc
shlb
aam
dec
fadds
fbstp
add
or
inc
scas
je
add
mov
pop
lods
push
popa
xlat
les
mov
jo
test
out
xchg
xchg
js
int3
adc
or
xor
int3
push
push
orl
test
bound
mov
mov
daa
mov
xor
jns
les
int3
les
jg
add
ret
push
pop
or
fdivs
mov
data16
js
outsb
jns
scas
je
cmpsb
addr16
cmpsb
cmpsl
mov
fisttps
xchg
fnstcw
push
outsb
aaa
test
repz
popa
out
out
ds
mov
xchg
shl
and
daa
mov
xor
push
mov
iret
sbb
push
xrelease
mov
test
loope
mov
push
in
jne
push
scas
push
inc
filds
aam
pop
faddp
insb
pop
xchg
dec
push
in
mov
xlat
sbb
cmp
jmp
mov
int3
dec
dec
iret
pop
test
cmpsb
out
out
xor
stc
mov
arpl
mov
incl
mov
and
outsb
mov
mov
jb,pt
push
dec
in
jge
push
add
jbe
testb
cld
sbb
popa
push
xchg
push
inc
or
test
sub
lea
add
jp
insl
add
inc
jno
jl
mov
mov
outsl
push
in
mov
sbb
xchg
pop
mov
and
imul
mov
shrl
xor
adc
sbb
or
sbb
jecxz
arpl
inc
jmp
jne
rcll
fsubl
jmp
and
mov
mov
cmp
movsb
out
cmp
adc
add
sbb
mov
test
and
scas
leave
xor
dec
jge
dec
in
mov
out
in
nop
sahf
imul
mov
push
sub
fists
pop
mov
push
lods
ret
gs
gs
mov
pop
adc
dec
sahf
inc
add
movsl
mov
cmc
ds
inc
cmc
std
mov
jns
inc
shl
enter
int
int3
sub
ss
test
xor
mov
sbb
or
lods
movsb
scas
xchg
das
inc
pop
lahf
lds
pusha
jge
clc
adcl
test
pop
dec
test
mov
or
xchg
cmpsl
add
add
cli
and
mov
cmp
out
pushf
inc
into
cmpsl
aad
mov
andl
lea
ja
jbe
push
push
stos
sahf
push
cmp
cmp
and
test
dec
dec
xor
ficoml
jae
out
movb
inc
cmpsl
jae
mov
aaa
xchg
lea
test
ljmp
insl
mov
shlb
ret
sbb
ljmp
adc
and
pop
and
sbb
repnz
pop
pop
movsb
int
imul
sti
jle
mov
js
mov
cmpsl
mov
jae
rcr
aad
sbb
mov
stos
rcll
pop
push
dec
in
cmp
addr16
es
lods
dec
mov
xor
jecxz
sub
popa
stc
pop
pop
inc
ret
push
pop
and
cs
cli
jp
test
lock
inc
jmp
cmp
in
sbbb
mov
jb
add
scas
sahf
pop
or
ret
pop
sub
repz
jmp
jmp
mov
and
inc
pop
sbb
sub
pop
dec
push
push
cmp
push
sarb
mov
mov
or
arpl
xchg
xor
sbb
xor
mov
out
xlat
jp
mov
outsl
aaa
add
leave
or
add
inc
mov
testl
pop
jle
push
mov
dec
adc
aam
xor
aaa
xchg
insl
push
ds
jecxz
or
jl
aad
xor
cmc
cmpsb
repnz
imul
gs
adc
adc
mov
je
mov
in
lcall
dec
add
mov
mov
idivl
mov
repz
xor
pop
push
loope
hlt
push
push
lcall
xchg
dec
test
jp
xor
inc
jo
lods
xchg
std
and
cmp
fdivrp
push
push
mov
pop
xchg
xchg
sbb
jnp
fdivrs
or
ljmp
pop
cmpsl
ret
jno
push
adc
dec
push
in
push
or
cli
jg
add
adc
insb
test
aas
adc
pop
add
dec
mov
or
push
mov
iret
aaa
or
test
push
sbb
lret
sbb
push
in
mov
xor
sub
stos
decb
xor
filds
shll
xchg
xor
in
aaa
je
sbb
mov
popf
bound
movsl
push
jbe
orl
jl
pop
push
push
fidivs
pop
mull
jne
jbe
mov
or
in
cltd
xchg
jb
inc
sub
ss
push
push
or
out
and
xchg
daa
je
dec
or
sub
xor
pusha
lret
jne
adc
pop
rcr
add
aam
lock
mov
sbb
clc
loopne
lcall
sub
in
push
mov
mov
xor
adc
jp
addr16
sbb
testb
xchg
rcrl
jns
aam
inc
jg
push
inc
in
push
repz
cs
jo
push
or
xor
sahf
pop
leave
addr16
rorb
test
jle
movsb
adc
or
xchg
mov
sbb
adc
divb
clc
jp
ljmp
pop
pop
pop
fwait
add
adc
dec
mov
pop
inc
xor
outsl
push
fidivl
jp
movsb
sahf
jae
add
aaa
inc
fcomip
add
dec
fldenv
sub
ds
aam
and
inc
in
in
sbb
ljmp
mov
ljmp
jle
dec
lods
stos
icebp
loopne
negl
sub
xchg
pop
or
cltd
out
aaa
xchg
lods
mov
in
imul
lcall
xlat
stos
dec
adc
int3
jne
cli
sub
addr16
in
xchg
aas
shll
lods
sub
stos
addl
pop
lock
es
movsb
xchg
cmp
mov
js
xchg
icebp
fs
jmp
mov
sbb
push
in
push
insl
popf
popa
leave
call
enter
shlb
pop
outsb
add
mov
mov
and
ret
mov
gs
les
test
sbb
lret
shrb
inc
fdivrp
ljmp
fstpl
jg
xor
mov
pushf
and
and
enter
aad
add
inc
push
fldcw
push
lds
lods
jg
cli
lods
jae
imul
cmp
lock
fs
loopne
lcall
dec
xor
lock
repnz
jge
nop
out
sbb
addr16
sub
in
in
mov
xor
mov
sbb
pop
and
aaa
pop
xor
mov
inc
mov
sbbl
scas
or
xor
call
push
sbb
sub
mov
addl
imulb
loope
push
push
sub
jnp
test
outsb
pop
out
das
fwait
sbb
mov
mov
inc
push
imul
rcr
addr16
jecxz
mov
into
fs
inc
insl
rorb
dec
push
lods
movsl
cpuid
ret
jno
pop
nopl
neg
sub
inc
jle
cmp
daa
pop
pop
adcb
jp
sbb
mov
cmp
lret
lret
cmpb
pop
jo
dec
jo
inc
mov
ljmp
dec
sub
test
jno
inc
mov
dec
jne
daa
aad
enter
xlat
or
shrl
inc
sbb
inc
jg
push
jl
inc
push
jae
mov
ljmp
mov
stos
in
mov
xor
adc
adc
add
and
int
push
ja
adc
dec
call
fiaddl
push
in
or
fwait
leave
pop
lret
scas
push
scas
and
pop
insl
xchg
pop
sbbl
icebp
sbb
and
mul
sbb
inc
jb
push
inc
adc
fstpt
pop
xchg
dec
jno
sbb
cwtl
test
inc
push
ret
adc
mov
data16
dec
popl
jns
je
xchg
fimull
rcrb
test
mov
cld
push
mov
mov
outsb
mov
and
add
add
mov
sub
je
pop
add
xchg
nop
outsb
sahf
push
data16
mov
cmp
mov
movb
pop
xchg
jge
pop
push
fnstenv
cmp
out
xchg
xchg
push
jp
mov
push
das
repnz
out
ds
xor
loope
inc
jecxz
imul
and
inc
inc
push
iret
adc
jno
dec
fwait
sub
fstps
xchg
inc
lahf
into
das
sbb
inc
add
jnp
cwtl
pop
jge
aam
cmpsb
jecxz
leave
or
jmp
repz
jmp
jle
mov
xchg
insl
daa
mov
sub
lcall
fwait
pop
ja
adc
sub
jo
fs
outsl
cmpsb
mov
sub
ja
outsl
inc
xchg
push
mov
xlat
enter
inc
bound
sahf
clc
icebp
inc
xlat
sub
pop
pop
movsl
mov
cwtl
sub
xchg
inc
pop
sub
ljmp
aam
xchg
pop
adc
sub
cld
fiaddl
daa
ret
inc
repz
push
popf
pop
test
fwait
add
or
icebp
ret
adc
push
imul
pop
inc
mov
int
and
push
or
rol
pop
mov
mov
add
js
mov
jb
dec
push
aas
ja
test
pusha
adc
add
std
cli
sti
pop
push
xor
xchg
shrl
cmp
repz
data16
push
idiv
jae
adc
in
dec
popa
clc
mov
neg
add
jecxz
lcall
mov
dec
rorb
cmp
fidivrs
loop
mov
cli
or
into
and
ficomps
jo
adc
outsl
out
xchg
lret
outsl
rorb
cmc
popl
pop
testb
scas
mov
loopne
xchg
inc
and
push
jb
pusha
int3
data16
lret
jle
rcll
ret
xchg
jecxz
icebp
mov
test
cmp
and
sbb
lcall
add
dec
movsb
test
push
js
or
pop
dec
mov
cltd
inc
repnz
mov
jmp
cmp
pop
push
cmpb
dec
in
adc
mov
out
xor
loop
mulb
cmp
cpuid
inc
data16
fistps
sub
ja
stc
cmp
lcall
ror
jb
paddsw
bnd
out
in
mov
arpl
add
aam
ss
jnp
xor
sub
call
rol
cltd
ds
call
fildl
and
ret
pop
and
movsl
mov
mov
cs
add
hlt
int
mov
sbb
lods
jae
repnz
cmpsb
push
dec
add
adc
push
pop
mov
mov
jb
xor
in
test
call
out
mov
mov
sbb
mov
cmp
adc
sub
xor
dec
test
clc
and
test
aam
popf
and
jmp
jl
cli
push
or
mov
adc
push
xor
gs
cmpsl
pop
pop
cld
pop
popf
scas
clc
mov
jmp
sahf
push
sbb
jb
mov
popf
pop
xor
cli
push
daa
outsl
adc
and
pop
icebp
jecxz
mov
cmc
mov
rclb
sbb
sub
xor
into
ljmp
and
inc
imul
and
jae
inc
lahf
dec
push
fmull
das
gs
in
in
jl
mov
mov
arpl
mov
out
or
adc
push
dec
cmp
sub
sahf
pop
in
in
lods
cmp
push
sbb
dec
testl
aas
mov
pop
lcall
loope
pop
cmp
fxtract
out
and
mov
mov
pop
jne
sbb
push
out
xor
out
mov
movsl
mov
sub
inc
push
push
out
mov
xchg
fdivrl
int
add
fistpll
push
sbb
bound
test
and
leave
and
call
cmp
mov
mov
movsl
xor
test
lcall
sub
fwait
mov
insl
mov
inc
out
inc
arpl
push
xchg
repz
sub
push
cmp
adc
add
or
sub
into
jmp
push
push
pop
xchg
mov
subb
inc
inc
jo
push
and
stos
push
popa
xor
fnsave
lods
pushl
cmp
movsl
push
pusha
pop
mov
pop
std
imul
pop
cltd
dec
push
lret
cs
pop
gs
mov
repz
pop
js
pop
dec
sbb
sbb
jne
into
sbb
aad
jge
popf
push
aaa
xchg
jne
and
or
in
mov
ret
pop
and
es
sbb
add
imull
sub
cmp
loopne
jnp
xor
and
jmp
pop
lods
rorl
pusha
sub
ljmp
daa
cmpsb
push
int
pop
dec
xchg
mov
jle
ret
inc
sub
add
xor
lods
jb
cwtl
fimuls
insl
and
xor
scas
jne
inc
cmp
jo
insb
xchg
test
jle
xchg
push
dec
adc
adc
gs
sub
sub
shr
jo
pop
sub
in
icebp
loop
fwait
gs
lret
stc
imul
jnp
loope
es
cld
pop
sarb
mov
int
rcl
out
ja
xchg
dec
test
add
fadd
push
movsb
mov
push
psubd
icebp
mov
ret
int3
inc
or
push
mov
bound
enter
pop
inc
lods
inc
std
in
ja
data16
push
cmpsl
push
jl
dec
jecxz
lea
lcall
stc
arpl
mov
ret
add
cwtl
sbbb
rcr
dec
daa
lods
push
mov
and
inc
cmp
jle
cmp
adc
inc
filds
xor
push
adc
shlb
mov
lock
lret
xor
sbb
push
cld
std
in
push
aaa
jmp
push
push
mov
ficoms
cmc
and
push
xchg
jne
dec
aam
movsb
leave
sub
out
ja
sub
and
push
insl
aas
xlat
push
jae
sbb
insb
ret
dec
sub
pop
push
mov
lds
mov
jg
fsubl
sahf
adc
dec
in
mov
repz
pusha
int3
fisubl
xchg
popf
cld
sbb
adc
into
scas
sub
test
lea
stc
insl
push
sarl
daa
jae
js
mov
mov
xchg
bound
push
mov
push
inc
into
mov
or
pop
xchg
push
ficomps
xchg
pop
scas
dec
shlb
sbb
inc
adc
dec
int3
cmp
imul
push
stos
test
push
ror
and
mov
movsl
inc
jae
mov
sbb
pusha
arpl
lcall
aad
pop
add
lods
and
mov
shrb
js
call
dec
sar
jbe
loop
scas
rep
int
jle
cwtl
inc
outsb
adc
dec
lds
in
dec
mov
stos
insb
aas
sbbl
bound
scas
fcoms
adc
loopne
xchg
sbb
cld
movsw
inc
mov
or
pop
push
lret
xor
fcom
cmpsl
and
inc
pop
jns
dec
sahf
jecxz
stos
push
jl
call
or
mov
cli
outsb
adc
push
sbb
sti
loope
adc
push
sub
push
fs
lds
mov
sub
jae
push
ss
mov
xor
mov
mov
sbb
xchg
lahf
aaa
ljmp
or
fs
aad
sbb
lret
cwtl
dec
pushf
dec
cmp
movsl
lds
mov
ror
addl
scas
repnz
xor
jb
or
fistpl
jnp
lahf
movsl
mov
inc
lcall
push
loopne
adc
pop
adc
emms
push
and
mov
repnz
ret
es
jmp
sub
hlt
push
or
xor
cmp
xchg
movsl
repnz
pusha
aad
ficoms
sbb
es
or
push
mov
pop
dec
fs
out
or
pop
jne
mov
js
pop
inc
stos
adc
ret
mov
jae
shl
lea
pop
rorb
pusha
or
mov
arpl
mov
jns
jbe
pop
jnp
fnstenv
movsl
dec
movsl
mov
popa
shrl
shlb
xor
mov
sub
and
je
dec
test
sbb
mov
repnz
mov
aas
hlt
fldl
lds
mov
mov
xchg
jo
jl
je
cmpsl
rol
cmc
nop
sahf
or
outsb
and
adc
imul
int
push
leave
pop
pop
pop
test
cmp
addb
ss
mov
xchg
fnstsw
cmpsb
lds
xchg
or
pop
sub
mov
daa
push
xchg
in
xchg
xor
push
fcmovnbe
paddw
jg
and
cwtl
aam
jo
xchg
aad
sbb
dec
stos
stc
test
sbb
ret
pop
push
mov
xchg
sarb
xchg
test
hlt
mov
adc
out
sahf
insl
mov
or
dec
lods
sub
dec
adc
push
or
xor
mov
mov
cmp
xchg
or
add
or
insl
xor
out
jecxz
mov
sti
orl
loope
lcall
mov
xchg
stc
in
fiadds
adc
adcl
lea
idivl
xor
cmp
into
xchg
mov
inc
stos
push
pop
lds
xchg
push
rolb
push
arpl
jecxz,pn
popf
ret
sub
iret
add
dec
in
mov
adc
enter
cmp
adc
mov
outsb
mov
cmp
outsl
js
add
movl
pusha
in
aaa
sbb
pop
loope
sub
ret
aaa
xchg
pusha
js
int
cmp
add
sbb
sub
ss
cmp
out
rclb
jno
xorl
cwtl
loopne
clc
jbe
xchg
adc
xchg
daa
pop
mov
jbe
dec
ss
adc
cmp
mov
mov
into
mov
mov
sbb
fdivrl
sbb
dec
popa
sbb
out
xchg
adc
fs
in
pusha
shrb
outsb
enter
push
xlat
pop
or
mov
jnp
push
and
test
jnp
mov
clc
int
in
sub
out
jae
rcr
test
das
and
lea
or
adc
push
add
in
lahf
xchg
push
mov
ds
or
inc
and
xchg
or
cmp
adc
es
arpl
fucomi
int3
imull
mov
mov
mov
repz
ss
push
mov
or
ret
mov
and
jns
lea
stos
mov
ds
push
pusha
lcall
and
pop
nop
xor
faddl
mov
std
xchg
dec
leave
jge
mov
xchg
add
stos
aad
outsl
pop
pop
push
mov
jns
lret
sub
inc
lret
icebp
sub
mov
jb
sub
inc
xor
jns
or
in
fnstsw
xchg
mov
inc
lret
mov
xor
pop
pop
pop
adc
stc
pop
jno
mov
loope
sub
stos
jle
mov
insb
out
scas
stos
clc
cmpsl
pop
and
push
inc
sbb
fnsave
lea
xorl
lock
lock
sbb
and
outsl
cmp
push
lods
lret
xor
sub
out
push
mov
adc
or
clc
jge
ljmp
orb
adc
lret
dec
lahf
dec
ds
sub
or
jo
hlt
fucomp
cmp
sub
gs
enter
add
cmp
pop
in
and
sub
int
in
imul
out
lea
cltd
adcl
dec
add
push
pop
scas
sti
adc
fcomps
bound
xchg
push
cmp
sbbl
test
insl
sbb
and
jb
enter
outsl
jb
cmpsl
jnp
add
stos
lret
pop
adc
in
clc
or
rcll
data16
int3
xorl
adcl
adc
inc
jno
dec
adc
push
lahf
out
xchg
fmul
jnp
jp
sarb
ret
xchg
xor
cs
je
roll
int
sbb
data16
loopne
dec
sub
hlt
fdivrl
sahf
xor
jp
fistpl
dec
or
popf
fwait
sub
push
sbb
aaa
fdivs
shlb
push
enter
sub
sahf
insb
in
xchg
pop
nop
ja
jbe
test
cmpb
aad
pop
je
test
adc
std
rcll
leave
test
xor
mov
mov
xchg
jecxz
dec
inc
cmp
pop
xchg
cmp
sarb
cmp
fwait
aas
es
test
mov
out
pusha
cmp
outsl
cld
out
dec
dec
adc
dec
pop
shll
repz
loop
out
addr16
and
nop
enter
mov
icebp
xchg
sbb
jmp
jne
cmc
popa
sbb
stos
push
enter
sub
mov
in
push
dec
mov
xlat
jno
mov
inc
lea
subb
addl
insb
xchg
pop
mov
or
sub
mov
daa
push
clc
repnz
mov
stos
push
cmp
sahf
popl
loopne
add
pop
dec
movsl
jl
cmpsb
rorl
es
inc
stos
inc
xchg
push
xchg
jl
inc
jne
pusha
mov
mov
xchg
dec
pusha
add
lret
push
add
push
add
addr16
dec
inc
adc
daa
mov
scas
ljmp
xor
lea
out
xchg
jg
push
sbb
xor
fildll
orl
mov
adc
push
or
mov
mov
rcrl
ret
and
sbb
daa
loopew
loop
inc
pop
data16
push
jmp
add
ret
daa
add
aas
fucomi
fstps
cmpsb
and
dec
mov
pop
cmp
mov
dec
repnz
les
shrl
mov
add
es
loop
cmp
popa
imul
add
mov
outsl
mov
shl
fisttps
and
sti
push
shrl
test
push
pop
inc
adc
incl
inc
dec
push
dec
insb
dec
cmp
lock
loop
jno
sti
push
add
fsts
adc
iret
mov
out
pop
mov
ja
orb
mov
jle
movsl
lea
testb
hlt
lret
xchg
jp
test
insl
scas
cmpsl
loope
fmull
xor
popa
and
mov
push
inc
test
xchg
push
pop
nop
xchg
mov
cmc
test
lahf
mov
insb
test
lret
push
pop
dec
mov
mov
movsl
mov
push
in
jp
adc
repz
pop
aad
xor
leave
xchg
repz
lock
xchg
xchg
sub
cmc
bound
in
inc
adc
stos
mov
inc
popf
addr16
push
fisubs
dec
std
or
addb
insl
mov
add
push
je
jne
mov
cmp
out
pop
dec
jp
cmpsb
push
sbb
jmp
cmpsb
sti
mov
dec
jno
xchg
inc
stc
test
subl
mov
xchg
pop
and
add
add
adc
stc
sbb
dec
addl
push
sub
shl
ret
js
adc
gs
out
mov
ret
push
fldcw
mov
xor
fcmovnu
push
dec
cmpsb
mov
adc
cld
and
push
add
mov
dec
sub
xchg
pop
adc
dec
mov
fiaddl
pop
pop
data16
pop
xchg
fists
add
and
lock
pop
repnz
sub
push
jge
mov
cmp
sbb
loop
push
test
in
mov
xor
cld
mov
push
push
iret
sub
add
mov
mov
push
xor
ljmp
subl
fnstsw
ljmp
loop
jecxz
and
cmpsl
std
inc
mov
lret
and
imul
and
sbb
add
xchg
insb
mov
fwait
push
add
fisttpll
inc
imul
out
xchg
rol
mov
in
ja
je
adc
test
les
sub
mov
xchg
pop
adc
imul
out
xor
or
mov
pusha
mov
fwait
and
int3
loopne
inc
add
add
dec
cmc
out
lods
push
test
adc
loopne
push
mov
inc
add
fsubl
loop
and
fistpll
outsb
lock
dec
std
in
aas
daa
mov
mov
add
stos
add
lods
pop
mov
push
pop
das
ja
jle
push
je
je
not
jo
sarb
cmp
test
insl
xchg
xorl
inc
std
xor
arpl
sub
mov
pop
fwait
jecxz
cs
add
cmp
sbb
sbb
add
xchg
push
fidivl
daa
cmp
adcl
outsl
xchg
int3
fmuls
stc
cmp
test
jmp
mov
jle
mov
jns
pop
mov
rcll
int3
mov
xor
inc
pop
enter
or
int
jecxz
cli
push
std
mov
movsb
cmpsl
jbe
and
repnz
lods
add
push
mov
pop
cwtl
cmp
xchg
scas
mov
out
sbb
mov
ds
sti
es
xchg
subb
inc
cmp
inc
cs
stos
cld
xchg
imul
ret
add
cmp
cmpsl
cmp
and
out
out
and
xor
dec
jl
movl
push
je
subl
cmc
sbb
sbb
add
dec
outsb
push
inc
xchg
addr16
mov
xchg
dec
xorl
clc
lret
dec
shlb
xor
mov
cmp
pop
hlt
xor
repz
stos
adcb
and
hlt
inc
push
xor
mov
push
shlb
push
lcall
cmp
mov
pushf
lret
fists
insl
or
out
xor
sbb
movsb
lods
data16
xchg
xor
push
pop
ss
mov
fmull
loop
movsb
adc
dec
dec
in
loope
dec
out
pop
loope
mov
loope
mov
ja
add
cli
int
cmpb
push
pushf
iret
and
dec
andb
jge
and
outsl
xor
pop
repz
inc
adc
mov
xchg
sub
mov
or
mov
popa
iret
sahf
lds
jp
fisttps
mov
mov
cld
xchg
sub
inc
jae
jnp
shr
jmp
add
sub
and
icebp
push
repnz
repnz
ljmp
dec
add
xchg
punpckldq
push
ja
xor
lea
js
mov
rcl
mov
movsb
jbe
mov
movsb
cld
adc
jno
push
xchg
push
inc
lcall
mov
test
push
sbb
jge
int3
in
add
lahf
stos
shlb
lock
pusha
rclb
cli
imull
lahf
bound
mov
sbb
jae
add
fsubp
push
sub
xchg
lock
lods
mov
cld
movl
mov
sub
stos
fsubrp
rolb
dec
cmp
jnp
adc
cmc
push
subb
data16
xchg
jge
push
pop
data16
push
or
cs
xlat
mov
aaa
aad
jg
dec
subb
testl
dec
stos
and
fbstp
fwait
push
adc
mov
push
enter
inc
ss
aas
mov
popf
push
movsb
push
and
lods
xchg
inc
cmpsb
pop
mov
ss
push
push
fsub
jmp
fimull
pusha
and
mov
inc
mov
testl
or
nop
aas
cmpsl
push
imul
push
adc
lods
add
in
sub
mov
or
xorl
mov
pop
adc
inc
fsubr
xchg
in
inc
mov
int
int
daa
pop
inc
add
sbb
dec
scas
ss
repnz
jnp
adcl
xor
and
mov
out
fstpt
mov
dec
enter
mov
xor
mov
jge
xorl
scas
xchg
cltd
mov
mov
mov
xlat
sbb
insb
jnp
fnstenv
push
add
daa
pusha
sahf
fnstsw
outsb
aaa
xchg
sub
mov
es
popl
popf
jp
movsl
jne
sahf
ret
or
jnp
movsb
push
outsl
cltd
mov
or
imull
fnstsw
sub
cltd
aam
and
and
leave
repz
mov
xchg
push
pop
mov
sbbb
dec
xor
and
mov
movsl
mov
jns
das
rcrb
arpl
pop
xor
js
sbb
dec
or
mov
jo
sbb
lea
jo
sub
mov
cmp
repz
mov
xchg
or
pop
js
aad
jnp
dec
stos
imulb
jne
aas
mov
sbb
mov
mov
add
mov
hlt
loop
sub
dec
fisttpll
out
sub
cltd
add
inc
movsl
add
xchg
mov
jmp
ss
cmpsl
push
xchg
into
pop
gs
lods
mov
rorb
aas
pextrw
movq
setae
lock
cmpsb
inc
pop
iret
mov
stos
mov
mov
popf
pop
imul
xchg
mov
das
scas
repz
sti
shrl
pop
mov
xor
push
fbstp
pop
add
mov
test
xor
pusha
lock
or
mov
int3
push
in
sti
jb
negl
mov
jns
lods
jle
push
mov
and
sbb
push
jbe
mov
clc
rcrl
or
int3
dec
test
xor
mov
mov
mov
add
movsb
outsl
loope
mov
dec
mov
pop
nop
fcoml
dec
and
mov
es
mov
sti
adc
jnp
mov
push
cmp
pushf
lahf
mov
gs
fisttpll
stos
mov
jp
push
lea
test
jecxz
xchg
pusha
movsb
test
out
push
xorb
rolb
ds
and
mov
cwtl
rcll
insb
dec
push
divl
lret
sbb
xchg
paddusb
jl
xlat
scas
subb
cs
imul
pop
lods
clc
lock
int3
dec
scas
cs
xchg
fstl
jp
jl
fwait
push
add
add
adc
jnp
sub
dec
mov
das
xor
movsl
pusha
cmpsb
cmp
hlt
fstpt
xor
rclb
popf
notb
mov
sub
jmp
adc
xchg
jno
shlb
data16
sbb
lods
imul
dec
out
add
inc
std
mov
je
jge
loope
push
mov
negl
call
pop
or
hlt
sahf
pop
in
mov
leave
push
dec
std
push
cmp
mov
push
sbb
scas
jae
fbstp
lret
push
mov
or
inc
cltd
sub
js
push
sub
xchg
cld
es
inc
jae
cmp
jb
jecxz
sbb
xor
mov
lret
test
fsts
enter
xchg
xor
aam
loope
dec
xor
or
mov
pop
mov
sub
mov
insb
push
loop
fstp
repz
pop
adc
push
dec
pop
out
jbe
data16
sbb
mov
sbb
jmp
dec
ficomps
inc
mov
pop
cs
int3
xorl
popa
data16
inc
xchg
jns
fiaddl
bound
mov
jge
xchg
mov
aad
mov
add
add
int3
pop
stos
inc
dec
jg
scas
dec
xor
les
and
idiv
xorb
xor
jle
pop
mov
sub
add
stos
mov
les
lret
dec
jo
mov
popa
jae
testb
mov
scas
bound
popl
push
bound
test
cmp
adc
sbb
jmp
mov
add
sub
in
mov
mov
mov
ss
test
push
ret
enter
clc
popa
xchg
jle
jp
sub
pop
popa
cld
add
and
cmp
push
call
jns
repnz
mov
lds
jge
icebp
xchg
outsb
test
fdivl
inc
rolb
mov
std
data16
mov
adc
inc
sbb
xorb
cmpsb
movsb
fistpl
lahf
push
pop
addl
sbb
stos
jecxz
or
scas
adc
add
rcr
fstl
inc
push
sub
add
mov
mov
data16
scas
cltd
div
stos
mov
pusha
add
out
mov
mov
gs
call
mov
mov
pop
rolb
js
cmpsb
lcall
gs
add
jns
xchg
sub
popf
add
sbb
add
daa
stos
or
or
and
inc
lds
pop
fidivrs
sub
or
jp
nop
or
xor
nop
add
movl
push
push
outsl
lods
jecxz
iret
add
scas
and
test
lea
xor
jecxz
and
pop
and
cltd
cmp
pop
ret
in
andl
leave
cmpsb
sbb
xchg
adc
mov
leave
fsubl
sbb
add
xchg
jg
pop
mov
adc
pop
dec
sarl
or
add
stos
ja
shl
mov
pusha
int
mov
and
mov
addr16
sahf
shrl
insb
lret
fs
dec
pop
fidivrs
adc
lock
sbb
shlb
mov
lods
stc
inc
inc
add
adc
shlb
xchg
loopne
fmulp
push
js
test
dec
adc
cli
mov
lods
jne
mov
lret
jle
inc
dec
test
das
js
arpl
inc
mov
xchg
sbb
push
jae
mov
incl
out
testl
mov
imul
sbb
add
sub
sub
pop
mov
inc
mov
xor
les
lahf
cmp
lods
sbb
xorb
shlb
cmp
adc
clc
cmp
lcall
sti
ja
js
dec
xchg
ret
push
jl
pop
mov
pop
push
nop
std
sbb
mov
mov
push
enter
es
pop
add
fs
prefetcht0
sub
ret
repnz
mov
cld
test
xor
out
dec
cmpsb
sahf
mov
cmpl
fisttps
int
imull
das
pop
ljmp
adc
adc
xor
xchg
out
lock
in
lahf
bound
fstpt
lea
nop
enter
ja
nop
stos
or
mull
or
cmp
add
mov
aas
inc
aaa
xor
and
shll
jbe
jecxz
push
add
and
push
inc
nop
and
notl
mov
sahf
loopne
and
ret
push
scas
xor
adc
and
xchg
dec
popa
fnstsw
jl
push
mov
jb
add
aas
push
xchg
movsl
xor
add
lods
rorb
cmpsb
bound
push
push
inc
push
fsubs
test
cwtl
fmuls
in
lahf
out
arpl
cmp
xchg
gs
sahf
dec
sbb
les
mov
xor
and
push
cmp
xor
inc
xor
pusha
es
fisttps
test
mov
sbb
mov
in
jo
ss
out
test
outsl
cs
jae
rcll
xorb
xor
xchg
xchg
repnz
pusha
dec
insb
dec
jb
xchg
jno
pop
sbb
mov
cmpsb
mov
fnstenv
add
and
dec
inc
push
and
xor
xchg
adc
push
push
mov
jns
push
lods
shr
xchg
mov
std
imul
in
jns
adc
lods
adc
loope
sbb
arpl
xchg
aaa
pop
hlt
inc
hlt
out
loop
inc
dec
outsb
mov
pop
out
lods
les
js
mov
imul
pop
push
in
and
push
sbb
pop
jp
pop
imul
pop
mov
inc
mov
ret
mov
popa
mov
mov
and
add
insl
icebp
pushf
dec
mov
clc
or
add
ds
sarb
mov
jge
flds
fwait
pop
xor
xchg
cmpsl
pop
div
lahf
or
cmp
lods
rcll
fsubl
inc
cmp
inc
or
jp
sti
and
jge
mov
ss
ja
fiaddl
clc
mov
sbb
inc
loop
jae
adc
loop
ret
and
aad
mov
add
lret
jecxz
into
fbld
dec
and
and
xor
imul
push
sbb
daa
scas
aam
mov
lcall
pop
out
mov
xchg
dec
call
mov
dec
sbb
xlat
dec
into
scas
scas
and
fadds
in
or
xchg
into
pop
in
dec
mov
push
rolb
xor
cld
xchg
xor
ljmp
outsl
cmp
jne
lock
mov
sub
js
movsb
sub
sub
sub
lea
insl
jg
xchg
pop
sub
xor
push
pop
outsl
insb
mov
jae
add
adc
fcompl
adc
mov
sti
ljmp
cld
dec
cmp
mov
pop
jo
add
push
xor
in
ret
adc
mov
test
mov
push
adc
mov
aaa
xchg
inc
ret
adc
sarb
decl
in
jecxz
inc
aam
into
inc
jbe
mov
jb
pusha
fwait
dec
xor
repz
push
cmp
jge
dec
or
je
push
loopne
idivb
push
scas
test
cmpsl
inc
add
cmp
pushf
shlb
int
ds
mov
jmp
jmp
inc
daa
jns
je
add
push
push
cltd
imul
dec
xor
imul
mov
ret
idivb
outsb
scas
xchg
es
aaa
insl
test
fcomps
pop
sub
dec
fsubl
xorl
inc
pminsw
mov
xchg
and
test
movsl
fdivl
cmp
jb,pt
movsb
push
mov
loope
pushf
lret
push
xchg
gs
sub
pushf
dec
xchg
jmp
sub
push
shlb
and
fsubrl
inc
push
shll
inc
or
jg
xchg
imul
enter
es
sbb
leave
ljmp
xorb
mov
ljmp
mov
jp
ds
fbstp
mov
push
cmp
xchg
jnp
add
nop
xchg
leave
setle
nop
loope
imul
scas
xchg
pop
call
repnz
mov
jge
jb
sbb
call
pop
movsb
xchg
hlt
pop
ljmp
outsb
sub
fsub
cs
pop
jmp
and
jbe
loopne
aas
adc
dec
push
dec
cmp
push
xor
adc
fsts
movsl
dec
sub
cmpsb
in
pushf
xchg
dec
push
and
imul
pop
gs
xchg
jns
movsb
jmp
rcrb
es
mov
lret
insl
cmpsb
in
jns
sti
sarl
push
add
movsb
loope
test
rep
std
jge
mov
std
mov
sbb
push
imul
push
lods
mov
push
xchg
dec
add
rcrb
or
adc
push
xor
in
enter
pop
mov
push
ret
jge
icebp
clc
mov
push
rorb
push
mov
and
xor
and
mov
aam
movsl
das
out
gs
dec
xlat
mov
sbb
sbb
inc
out
push
aas
scas
fimuls
mov
push
jp
push
mov
int
mov
inc
cmc
shl
sbb
lahf
bound
in
sahf
adc
pop
push
enter
movsl
or
xor
inc
cs
mov
ljmp
int3
pop
decl
cmpb
gs
pop
cmp
hlt
cmp
or
pop
push
outsb
adc
push
dec
ret
pop
push
mov
pop
push
push
pushf
cld
push
push
cmp
imul
fcomp
bnd
mov
mov
mov
xor
idivl
je
push
shr
aad
dec
aas
add
sub
mov
sbb
inc
cmp
sub
cltd
xchg
std
out
ja
dec
and
aaa
inc
scas
pop
lcall
adc
movsb
pushf
mov
push
aam
testl
test
push
es
pop
filds
in
out
popf
dec
call
loopne
add
inc
mov
fs
mov
icebp
mov
push
cmp
test
xchg
jecxz
aaa
flds
add
or
scas
xchg
push
movsl
ja
fildl
sbb
je
int3
loopne
addr16
in
popf
push
mov
adc
mov
sbb
notb
pop
sar
jge
cli
jb
jbe
and
aaa
in
pop
jp
cmp
test
dec
out
xchg
cmc
lods
dec
pop
mov
dec
test
mov
cltd
stos
lret
mov
movsl
ror
pop
sub
sub
mov
and
and
dec
sub
sub
ja
sahf
xchg
mov
loopne
add
jne
mov
lret
dec
and
pop
outsl
mov
or
fmulp
and
hlt
pop
aas
xor
push
mov
jl
dec
cli
pusha
pusha
ja
icebp
pusha
or
repnz
imul
dec
sub
mov
add
or
cmpsl
cld
cmp
test
inc
xor
inc
rcrl
push
jno
jl
adc
push
xorb
lods
mov
mov
lock
jl
nop
std
adc
iret
mov
dec
mov
pusha
push
loop
cmc
cmpsl
ljmp
outsl
jl
xor
stos
xor
out
imul
ds
cli
xlat
mov
fs
test
sbb
outsl
lahf
icebp
enter
jb
adc
pusha
mov
dec
test
add
rorl
fistpll
insb
cmpsb
sti
stos
sbb
aam
mov
stos
fnstenv
push
push
xor
xor
mov
jp
fstpl
sahf
out
inc
int3
sub
mov
pop
sbb
push
mov
mov
mov
push
mov
in
adcb
cltd
push
cmp
sbb
sbb
pop
repz
addl
sbb
std
cmp
xchg
cmp
or
sbb
add
mov
jns
mov
pop
sbb
popa
repz
inc
in
in
and
ja
sub
in
imul
data16
mov
leave
mov
in
test
inc
lods
xchg
dec
or
sbb
mov
push
int
rol
pushf
das
int
add
in
sti
xlat
xor
rcrb
push
or
das
mov
out
gs
xor
push
repnz
pop
lret
mov
mov
scas
xchg
pop
xlat
xor
or
cmp
jne
push
mov
sbb
scas
or
aam
dec
push
mov
fninit
cmp
mov
or
lea
or
mov
mov
subl
xor
fbstp
push
mov
orl
xchg
cs
cwtl
push
mov
push
jp
jae
fisttpl
inc
pop
loop
mov
mov
sbb
leave
jp
mov
xor
add
lods
jns
jecxz
stos
jp
int
lods
insb
xchg
mov
insl
pop
adc
push
fxrstor
fcmovne
dec
orl
xchg
inc
rolb
xchg
shll
xor
pop
lds
mov
jle
repnz
fadds
in
pop
cwtl
xlat
pop
jnp
inc
pusha
cmpsb
xor
and
cmc
mov
enter
add
mov
inc
mov
mov
mov
push
sbb
daa
mov
iret
sub
ffreep
test
push
xchg
fcoms
xchg
aad
std
out
mov
mov
xor
jp
xor
push
arpl
ss
mov
bound
jbe
and
test
cmp
ljmp
clc
ret
outsb
push
pop
movsl
inc
or
sti
in
jne
add
xor
cmpsb
push
xor
adc
repnz
or
jg
dec
adc
les
lcall
and
mov
shl
cmp
pusha
jge
gs
push
or
jnp
repz
mov
mov
mov
dec
inc
xor
call
xchg
int
leave
jmp
inc
nop
lret
mov
test
cmp
rcr
lret
cltd
test
out
add
sahf
mov
out
dec
les
jns
fmuls
inc
inc
jp
ds
push
sub
call
fcoml
adc
and
sbb
xchg
mov
push
xlat
adc
xchg
push
fsubrl
push
pop
in
fistl
rorb
pop
jo
push
and
jns
loop
popf
mov
xchg
cmp
adc
pop
aas
mov
mov
inc
jmp
mov
pop
adc
xor
xchg
sbbl
arpl
gs
sub
stos
pop
jge
mov
ljmp
jmp
in
inc
or
xchg
fdivl
rcrl
push
sti
out
add
test
test
pop
in
cmp
out
dec
ds
push
push
iret
mov
jp
fwait
inc
aam
flds
mov
lahf
adc
ds
inc
mov
xchg
mov
fisubs
cmp
into
cs
pusha
jae
dec
fwait
daa
mov
gs
cmp
mov
stc
clc
in
pop
insl
call
mov
dec
mov
xor
cmp
cmp
push
fistps
cs
lret
popa
jnp
popa
aas
jg
mov
daa
movsb
iret
pop
out
add
mov
adc
push
push
stos
nop
test
lret
cmp
and
fwait
mov
rclb
in
mov
add
daa
dec
jae
dec
jno
jecxz
mov
sbb
or
loopne
repnz
test
movsl
negl
stos
mov
jne
mov
icebp
mov
fistpl
adc
xor
jbe
mov
xor
mov
fs
les
andb
insl
imul
push
adc
xchg
mov
jecxz
xchg
cmpsl
in
or
adc
and
call
cs
dec
out
and
bound
stos
cld
out
dec
push
dec
sbb
dec
ja
mov
mov
jmp
dec
pop
rolb
notl
inc
push
ret
stc
push
mov
leave
fildl
push
daa
out
xor
jmp
stos
mov
test
dec
xchg
mov
lea
dec
mov
aad
mov
adcb
bnd
aam
mov
mov
inc
out
sbb
cmp
dec
adc
pop
ret
pop
lahf
rcr
mov
orl
adc
out
decb
sbbl
cmp
fwait
or
cld
lods
ja
cmp
pushf
jae
in
fisttpll
xlat
mov
bound
mov
insb
or
mov
jae
or
cmp
imul
inc
outsb
shrl
sbbl
jg
or
or
adcl
xor
test
lret
pop
mov
mov
xlat
out
lcall
scas
and
repz
fistps
pop
sbb
or
inc
mov
sbb
and
dec
push
enter
fsubrs
mov
insb
sahf
and
pop
mov
and
sbb
cmp
icebp
mov
fdivrs
xchg
mov
push
mov
rcrl
mov
sti
xchg
cs
jp
aas
xchg
cli
mov
add
sbb
mov
movsb
sbb
in
mov
cltd
adc
test
arpl
mov
es
cmp
sub
ret
cli
rcl
xchg
pop
mov
fwait
aam
add
sar
aam
sahf
sbb
out
mov
loopne
inc
mov
bswap
jo
mov
filds
fnstenv
test
gs
in
inc
jns
mov
fucomip
jp
mov
jecxz
orl
fcomip
std
mov
scas
mov
adc
lea
or
cmp
sub
sbbb
xchg
sti
mov
loopne
xor
mov
mov
or
sub
shrb
adcb
xor
jnp
and
mov
adcb
ss
push
es
sbb
xchg
xor
adcb
jl
dec
mov
sbb
jmp
fldl
scas
test
jge
stc
cmp
mov
gs
dec
stos
mov
sub
or
outsl
push
popa
popa
insl
mov
sbb
adc
int
lcallw
aam
cltd
lods
pop
fwait
mov
sub
pop
lahf
sbb
mov
mov
dec
addr16
mov
mov
les
das
sub
shll
fisubs
cmc
pop
pushf
sbb
ror
mov
hlt
fadds
mov
xor
dec
xchg
dec
repnz
push
cmc
mov
mov
in
mov
add
lods
movsb
leave
pop
ficoml
adc
xchg
add
in
pop
imulb
popa
mov
mov
mov
ja
jns
sti
xor
inc
add
pop
fistpl
ds
xchg
dec
pop
outsb
fcompl
sbb
data16
inc
outsl
loope
mov
cmp
gs
into
mov
out
ficomps
insb
divl
cs
stc
lods
xchg
mov
and
cmp
xlat
stos
push
mov
jns
cmpsl
jmp
lods
xchg
shl
push
xor
inc
int3
mov
mov
adc
mov
inc
in
out
mov
hlt
in
cwtl
fistps
sbbb
repnz
xchg
mov
outsl
into
jl
push
js
hlt
sub
mov
cmpsb
jge
out
jae
scas
outsl
inc
mov
daa
test
mov
push
mov
pop
lcall
in
push
jmp
cmpsb
jle
clc
mov
mov
cmpb
push
test
sbb
pop
loope
pop
mov
pop
fldt
push
cmp
jg
icebp
imul
out
aad
cwtl
popa
rclb
enter
pop
lret
shrl
ds
loop
loope
addr16
pop
push
iret
pop
lret
inc
clc
addr16
daa
popf
sbb
dec
mov
in
inc
cmpsb
in
xchg
add
adc
or
or
imul
arpl
popf
mov
mov
mov
leave
and
outsl
sti
mov
mov
push
mov
outsb
syscall
ljmp
jmp
mov
or
hlt
out
jecxz
cmp
mov
aas
cmp
lret
imul
mov
cmp
cmp
mov
cmp
imul
in
xor
push
add
ja
cmpsb
jbe
popa
ret
jl
js
jp
mov
lahf
inc
scas
int
or
pop
inc
mov
pop
call
pushf
push
push
dec
push
in
lret
adc
clc
adc
and
lods
inc
insb
mov
jg
fldenv
pop
data16
es
enter
xchg
imulb
xor
or
lea
jecxz
and
cmp
push
push
mov
xor
es
cmp
inc
ror
subb
lock
push
mov
test
pushf
imulb
sub
xor
call
mov
push
int3
mov
push
mov
mov
sti
jecxz
mov
add
inc
fisttpll
stos
enter
js
lret
sub
xchg
movsl
and
lcall
test
pusha
call
xchg
xchg
fmul
gs
mov
pop
pushf
jbe
imul
push
add
sub
les
sbb
js
je
flds
add
roll
and
out
ret
inc
cmpsl
repnz
stc
sbb
inc
add
lret
xor
mov
pop
cmp
push
daa
clc
fwait
test
jmp
cmpsb
faddp
pop
sub
mov
shlb
outsb
mov
aas
aas
inc
sbb
out
mov
ss
sbb
and
push
adc
out
pushf
stos
mov
mov
fsubr
jo
fs
jmp
int3
icebp
xchg
or
mov
pop
call
in
mov
clc
sub
lahf
sbb
or
repnz
or
andb
cmpsl
test
mov
or
fsubrs
xor
jmp
scas
gs
pop
or
mov
fdivs
data16
sahf
sub
inc
ret
int
inc
xor
pop
aam
loopne
cmpsb
bswap
rcll
scas
push
push
or
or
cmc
push
xor
int
add
jmp
push
pop
mov
xchg
cltd
sbb
jne
vaddss
jo
pop
push
in
add
lahf
enter
in
lahf
int3
lret
pop
cmp
je
push
into
enter
jnp
xor
sarl
push
and
out
jecxz
popl
jl
enter
jo
jbe
push
andl
dec
insb
xor
jb
mov
rcrl
lock
lret
xor
loope
cmpb
xchg
or
sub
mov
clc
aad
aaa
pushf
movsl
scas
fsubl
fs
popa
cli
push
shl
mov
jne
push
call
adc
lods
lock
cmp
lea
and
adc
sbb
xlat
jo
adc
mov
lcall
pop
repz
mov
sbb
sbb
pushaw
pop
mov
pushf
jmp
push
scas
xchg
xlat
cs
mov
mov
cmp
cmp
pop
aad
mov
push
push
push
pop
es
addr16
push
and
jne
or
jbe
jbe
adc
subl
in
arpl
add
mov
mov
sbb
dec
fidivs
jnp
lahf
pop
push
lock
pop
mov
mov
mov
add
ret
out
test
or
and
jno
aam
inc
mov
or
or
out
mov
popa
lods
jmp
push
mov
inc
cmp
stos
jae
or
adc
mov
out
js
jne
jnp
addr16
dec
iret
test
sub
fstp
hlt
push
cmc
sbb
ja
aam
lods
adc
mov
mov
cmp
mov
das
scas
add
xor
fidivrs
jb
inc
popl
sbb
insl
xchg
xor
repz
xchg
in
pop
mov
sbb
arpl
cmp
repnz
jne
dec
sub
mov
lret
push
push
push
loope
scas
xlat
icebp
mov
sahf
or
gs
push
popf
jo
xchg
sti
cmp
xchg
xchg
and
cs
inc
int3
imull
pop
mov
fdivs
movsl
mov
mov
les
test
mov
mov
in
sar
aam
pop
loopne
xchg
push
in
ds
bound
sub
xchg
sbb
popa
dec
rolb
pop
mov
scas
inc
xor
fsubs
std
or
in
inc
dec
push
ds
jae
mov
pusha
pop
lcall
ljmp
mov
int3
sub
inc
daa
test
sub
and
cld
addr16
cmc
mov
mull
or
or
out
mov
in
lods
xchg
xlat
dec
push
ss
dec
inc
add
lret
and
sbb
fistpl
push
out
and
ja
stc
and
je
mov
and
ret
push
enter
mov
icebp
data16
adc
in
jle
shll
sahf
pusha
lea
jmp
or
mov
push
mov
cs
outsb
push
cmp
jmp
inc
repnz
add
xchg
lret
xchg
jp
push
cwtl
orl
out
jae
sub
and
add
stos
or
push
jns
xchg
sti
sbb
pop
mov
push
mov
imul
fcoms
clc
aas
inc
fsub
loopne
ds
int3
das
movsl
lock
xchg
jno
enter
jle
push
insl
push
mul
test
pop
cmp
cmp
and
xchg
mov
sarb
and
mov
nop
icebp
mov
push
cld
inc
pushf
mov
aas
sbb
lea
scas
gs
push
das
loop
push
sarl
jb
adc
pop
imul
or
or
cmp
cmc
inc
mov
jecxz
xor
call
inc
ret
fucomp
imulb
ljmp
mov
sbb
negb
dec
into
sbb
in
push
xchg
cmpsb
divb
mov
pop
xchg
stos
outsb
ljmp
insl
sub
lcall
push
xlat
in
mov
int
ret
sbb
shlb
loop
mov
xor
in
cltd
ret
fildll
and
daa
and
idivb
mov
xor
fcomps
adc
pop
jno
mov
and
cmp
in
sub
xchg
stos
sub
nop
mov
pop
push
mov
mov
jno
inc
lahf
and
dec
rcrl
jo
dec
repnz
mov
mov
or
sbbl
jnp
dec
adc
add
xor
lahf
xor
lahf
fdivl
in
or
push
repnz
popf
mov
call
ror
testl
mov
out
jmp
cmpsb
and
loop
outsl
andb
dec
and
loope
je
insb
cwtl
leave
cmp
lcall
sub
cmp
cwtl
add
xchg
pop
mov
outsl
sub
enter
int3
scas
inc
sbb
push
repnz
dec
xor
js
and
xor
jecxz
ds
dec
sbb
lock
repnz
add
int3
push
push
xsha1
cmpsb
mov
repz
cmp
lods
jp
sub
mov
sub
xor
dec
fs
fimull
mov
dec
insl
rolb
fdivrs
or
xchg
jne
enter
fxch
cmpsl
pop
dec
inc
call
fsts
test
jg
xor
sub
adc
test
lock
sbb
or
and
pushf
or
out
out
mov
lds
outsl
pushf
ficoml
scas
cmp
and
mov
stos
andl
rolb
addb
and
add
or
push
push
cs
dec
xor
cmp
jb
mov
add
xchg
xor
sub
std
dec
push
mov
sub
icebp
ret
and
inc
test
clc
pusha
jg
jns
push
push
cmp
sbb
std
pop
inc
and
dec
fwait
dec
dec
or
icebp
scas
mov
push
lret
pusha
lret
mov
stos
jnp
push
nop
push
lea
pop
jne
leave
fildll
push
stos
fwait
mov
cwtl
xor
push
jbe
pop
adc
mov
jb
loop
pop
adcb
inc
push
inc
std
cmp
icebp
pusha
jge
inc
add
mov
lcall
xor
pop
cmp
movsl
cmp
mov
jno
decb
dec
mov
cwtl
test
fsubrl
push
divb
or
sub
cmp
int3
es
lea
pop
mov
js
and
fdivrs
mov
out
cltd
rclb
xchg
int3
leave
outsl
xchg
mov
repz
sbb
jp
cld
mov
fmuls
repz
fisubs
jmp
cwtl
lret
and
out
popa
sbb
imul
mov
jecxz
adcl
scas
xchg
xor
xchg
fiaddl
scas
dec
iret
add
dec
aaa
xor
in
clflush
cmp
sub
jns
jnp
idivb
adc
pushf
scas
jmp
jp
mov
jge
cwtl
xor
push
cmp
inc
movsb
call
xchg
inc
dec
cvtps2pi
jae
mov
out
xchg
adc
inc
int3
lret
push
dec
jmp
mov
lret
jnp
jne
inc
xor
inc
cmp
push
repz
add
loopne
aam
push
pushf
pop
cmc
mov
fdivs
inc
and
pop
cmp
jb
pop
repz
push
cmp
repnz
daa
fidivrs
lods
jp
adc
pop
insl
push
sarl
add
punpckldq
xchg
push
sbb
pop
xchg
imul
sbb
inc
and
out
or
rcrb
sub
mov
movsb
sbb
loopne
xor
pop
cs
sub
cmc
insl
mov
mov
and
adc
mov
bound
xchg
adc
push
xchg
gs
ja
in
mov
sub
and
addr16
sub
js
dec
jmp
loopne
fistl
jg
sahf
mov
adc
lret
arpl
dec
lahf
mov
push
and
stos
push
jae
push
pop
movsb
inc
jne
xor
movsb
cmp
adc
mov
movsb
add
loope
das
inc
jl
jmp
into
mov
mov
popf
cmp
adc
sahf
xchg
pusha
cmc
rorl
adc
mov
leave
daa
mov
cmp
test
mov
shll
mov
xchg
push
mov
mov
add
bound
mov
arpl
mov
push
add
inc
xor
bound
les
push
cmp
jno
jp
xor
xchg
cmp
cmp
and
out
outsl
dec
sbb
dec
pop
jne
add
loop
add
adc
jmp
nop
test
mov
icebp
dec
in
mov
xor
mov
pop
dec
dec
or
pop
repnz
icebp
sar
js
das
jno
das
jg
xchg
aam
cli
xor
sarb
mov
and
sub
push
lods
push
fisubrs
cmp
std
push
jae
movsb
mov
sarl
adc
sbb
shrl
lods
out
sub
mov
scas
xchg
pop
lods
jp
das
push
fdivl
add
dec
imul
and
dec
xor
scas
cltd
pop
pusha
sbbl
clc
repz
cs
ja
pushf
fnstsw
mov
imul
dec
stos
aas
push
lock
mov
jge
inc
push
lock
and
shrl
mov
sub
loop
jo
test
mov
jno
repz
lods
lods
push
cmp
mov
sub
aad
lods
xchg
add
out
test
cli
fs
push
xchg
mov
das
imul
sub
push
std
int
or
xchg
fwait
jmp
sbb
loopne
ffreep
out
rcr
loope
dec
add
sti
loop
sbb
mov
into
inc
jle
fwait
pop
mov
es
int
adcb
sar
aaa
push
out
aad
fldl
insl
mov
lret
subl
jno
aaa
aas
jno
out
dec
lret
cmp
jo
imul
push
sahf
jg
jle
adc
mov
repnz
inc
dec
pop
sub
push
in
add
pop
lret
mov
jle
xchg
div
pusha
mov
sbb
sarl
int
adc
xchg
ss
loopne
jnp
enter
fs
movsl
pusha
jecxz
push
pop
push
orl
xchg
pop
std
lahf
inc
push
clc
fsubl
jmp
imul
lods
sub
test
test
mov
fistpl
jecxz
push
or
negl
or
call
adc
movsb
pop
jl
mov
clc
je
jno
and
xchg
ret
pop
jge
inc
popa
push
inc
adc
dec
adc
xadd
jb
cmp
cmp
xchg
adc
testl
cmpsb
push
or
lret
push
sub
jbe
mov
sub
pop
mov
sub
mov
xor
ret
aaa
sbb
push
adcl
fnstenv
or
stc
sbb
inc
xchg
cld
mov
xchg
cmp
mov
mov
push
sbb
incl
mov
cmpl
cmp
test
fwait
add
cmpsb
aaa
cmp
sub
push
push
and
aas
sbb
insl
pop
ficoml
loope
add
inc
das
xchg
rol
mov
inc
mov
lea
sti
xchg
shrl
dec
pop
mov
imul
cli
cmpsb
sarl
shll
lds
adc
and
dec
lret
leave
adc
insl
leave
pop
rep
xchg
inc
dec
adc
sbb
lods
cwtl
out
ljmp
ja
orl
shlb
scas
mov
out
jb
xchg
sahf
lret
rol
mov
mov
lret
movsb
jnp
das
scas
push
cltd
lret
movsb
fnstsw
sbb
xchg
pop
mov
adc
xchg
sbb
ficoml
mov
inc
insb
in
adc
mov
das
repz
jge
js
mov
or
adc
in
in
rol
or
add
pusha
sbb
push
sti
mov
push
inc
and
ljmp
cmp
je
xchg
cmpsb
stos
push
incl
xor
mov
cmpsb
adc
xor
fistpll
aaa
xor
xchg
pop
pop
push
or
gs
xchg
aas
imul
jno
pop
ds
jb
ret
fsubrl
aam
cs
and
and
loope
xchg
lock
pusha
jb
jo
js
daa
les
inc
push
and
ret
addb
dec
daa
adc
lods
dec
add
data16
ja
mov
dec
add
daa
shrl
ret
push
add
sub
es
sbb
adc
or
stos
dec
int3
outsb
xor
cmp
inc
push
sub
rcll
frstor
cltd
jp
ret
outsb
xchg
or
ficoml
mov
cli
mov
in
add
shll
pop
mov
rorl
push
adc
mov
arpl
out
in
sbb
push
sbb
mov
mov
mov
shll
arpl
cli
adc
pop
jl
add
pop
adc
lahf
repz
sbb
stc
jns
leave
push
in
adcb
and
int3
fwait
jg
dec
lea
les
sbbb
push
ds
sbb
test
jp
repnz
xor
push
sti
pop
dec
or
ja
outsb
jae
rcl
jl
lcall
mov
in
fstps
test
push
mov
outsb
add
lock
imul
scas
sahf
in
fbld
nop
sbb
and
pop
pop
dec
outsb
lret
xchg
xchg
dec
mov
dec
mov
mov
xor
xor
push
pop
xchg
movsl
add
test
cmp
ss
imul
bound
fistpll
lcall
cmc
pop
les
cmp
xor
push
ljmp
loopne
mov
mov
jb
imul
es
fisubl
inc
dec
fld
or
sub
shrb
enter
fcompl
mov
sub
inc
faddl
lret
bound
daa
scas
jg
fldt
movsb
mov
scas
sti
mov
dec
jecxz
cwtl
lret
mov
pop
dec
enter
ret
jmp
mov
mov
xor
cmp
sti
or
lods
push
inc
insb
hlt
adc
jns
jle
repnz
ficoms
xor
out
sub
gs
mov
inc
mov
int3
cmp
rorl
lds
sbb
push
jecxz
out
das
loop
sub
sahf
mov
sbb
mov
sahf
xchg
inc
push
xchg
std
cld
outsb
mov
push
es
mov
add
pop
sub
outsb
cmc
imul
mov
mov
scas
sbb
xor
add
pushf
sub
mov
mov
xlat
scas
pop
pop
xchg
push
cwtl
out
or
lcall
sbb
xchg
rcl
ret
mov
or
adc
push
dec
lea
cmp
mov
xchg
push
imul
fidivl
jae
sub
or
push
xor
aam
jo
adc
test
mov
les
xor
aaa
mov
jae
sbb
inc
jns
push
lock
push
rolb
mov
jno
inc
mov
jl
xchg
mov
ret
cmp
imul
movsl
pusha
mov
fs
outsb
ret
dec
dec
andl
in
mov
mov
dec
xchg
cltd
and
adc
decb
int
xor
pop
push
inc
mov
cltd
push
xchg
shlb
mov
fistpll
outsb
pop
jl
out
dec
out
cwtl
rcr
je
repnz
xor
leave
and
vmptrld
test
push
in
push
jmp
and
and
out
pushf
gs
sub
inc
subb
lock
mov
jnp
cmp
out
and
test
push
mov
mov
nop
leave
stos
push
bound
ret
jge
testb
sbb
jge
lahf
jge
inc
aaa
inc
inc
adc
pop
mov
xor
sbb
scas
aas
cltd
out
adc
aad
and
pop
xor
test
jecxz
loop
sub
cmp
fmull
arpl
push
jecxz
xor
inc
adc
pop
ficompl
fcmovnu
out
int
jae
cmp
jl
push
fwait
xchg
sbb
inc
mov
jae
mov
scas
mov
jl
sbb
pusha
fidivrl
jb
xchg
jmp
fstl
in
mov
push
clc
stc
enter
rorb
xor
cs
loop
mov
add
icebp
push
call
inc
mov
jge
test
mov
dec
js
mov
ret
loope
jmp
jecxz
jo
push
aaa
fcoms
jb
or
out
jge
mov
inc
inc
push
cmp
mov
jbe
mov
dec
lods
pop
sbb
movsb
cli
cmpsl
push
and
sbb
lea
scas
cmpsb
leave
sub
inc
sarb
shrl
mov
cmp
pushl
mov
jb
cmpsb
les
jns
test
or
mov
movb
cwtl
cmp
test
mov
ss
adc
out
inc
jl
movsl
fs
push
mov
stos
loop
gs
repz
dec
movsb
loope,pn
fdivrs
shl
mov
lret
inc
or
icebp
jp
mov
and
add
je
aam
xchg
mov
repz
scas
add
call
arpl
add
jb
jmp
jo
mov
in
iret
add
cmp
mov
add
mov
mov
dec
test
cmpsb
push
iret
in
push
mov
fs
mov
or
icebp
lods
jmp
std
jl
mov
lods
push
and
sti
jp
inc
cmpsb
adc
dec
das
lahf
stos
sahf
mov
jne
adcb
sbb
sub
test
mov
push
xchg
push
sti
inc
mov
test
sbb
loope
and
bound
jns
xchg
push
dec
push
mov
pop
cmc
in
idivb
dec
fsubl
ljmp
and
xor
mov
scas
push
add
sti
repnz
inc
and
inc
mov
jae
xchg
es
movsl
sub
shl
fdiv
pop
sub
fimull
jb
imul
mov
loop
mov
lret
lahf
stc
call
xchg
stc
jo
pushf
dec
pop
push
mov
fnsave
add
sbb
stos
jge
inc
sub
push
mov
jmp
and
push
ret
sub
push
in
std
fmul
loope
in
adc
pop
mov
or
fwait
ror
add
popf
pop
fcompl
arpl
lret
repz
nop
ja
mov
pop
insb
inc
pusha
scas
adc
lock
mov
loop
and
shr
lret
mov
or
adc
xchg
sub
lods
pop
sbb
sub
cmp
sbb
or
jns
cwtl
mov
mov
adc
imul
jbe
sahf
sub
std
and
xlat
imul
sbb
pop
jb
push
outsl
mov
lahf
in
mov
fiadds
loop
add
pop
inc
mov
fisubs
aaa
iret
stc
cs
push
jns
repz
sub
mov
repz
dec
adc
inc
and
lods
fstp
pusha
imul
or
inc
jno
xchg
push
int3
and
pop
ss
mov
fwait
orb
sub
push
adc
es
push
mov
loopne
bound
jb
xchg
aas
fisttpl
stos
loopne
sbb
in
pusha
push
mov
push
les
jl
inc
push
movsb
adc
mov
sub
ficomps
mov
sub
fnstenv
sahf
mov
popa
jae
xlat
mov
xchg
or
sub
cmp
sbb
jae
iret
shrb
xor
iret
xchg
adc
loopne
sbb
ds
stos
int3
out
roll
mov
sbb
sub
xchg
cmp
leave
loopne
setge
ds
add
les
xchg
inc
addb
inc
nop
jecxz
push
dec
je
cld
inc
adc
enter
adc
push
les
and
test
hlt
fstpl
ja
adc
insb
push
fcomi
mov
jge
les
and
sub
mov
xor
mov
shrl
cwtl
pop
repnz
lea
cwtl
cmc
int
sahf
sub
add
movsl
adc
inc
fidivrl
subb
sub
xor
lcall
mov
jnp
adcb
in
popf
mov
mov
int
push
and
cmp
into
xchg
ret
pop
dec
dec
mov
fnstsw
cwtl
mov
es
adc
bswap
daa
cs
cld
in
out
aam
sbb
je
mov
clc
stos
pop
pop
mov
lcall
push
mov
mov
imul
pusha
xchg
cmpsb
mov
or
test
ja
and
jbe
xchg
dec
ds
push
cli
adc
js
mov
pushf
iret
js
pop
cmp
xchg
icebp
xchg
lea
sub
add
cmp
stc
sub
dec
test
push
push
in
push
pop
pop
aaa
or
dec
dec
dec
cmp
mov
cmpsb
or
jl
shl
es
sub
adc
sbb
andb
sbb
cli
test
adc
mov
mov
adc
cmpsb
adc
insb
pop
xlat
adc
fistps
sbb
in
in
pushf
cli
jle
fldl
mov
jle
xchg
stos
xor
adc
fisubl
dec
xchg
mov
out
mov
subl
xchg
and
adc
in
jle
adc
cmp
outsl
adc
sub
nopl
add
and
cmc
mov
jmp
pop
lahf
push
fcompl
cs
mov
in
cli
and
mov
loop
add
mov
into
addr16
aam
cmpsb
xor
xchg
jno
cld
pushf
inc
jl
push
mov
push
pop
jge
rcll
in
sbb
popf
xchg
push
cs
lea
bound
mov
xorl
mov
pop
imull
test
mov
push
sahf
jb
out
pop
imul
nop
sbb
enter
xchg
cli
cmpsb
xor
aam
rolb
mov
sbb
cli
aaa
jbe
push
mov
push
testl
mov
fcoms
pop
pushf
lds
icebp
jne
clc
fdivs
js
xor
adc
ficoms
pop
int3
pushf
and
sti
inc
in
mov
pop
and
pop
jmp
pusha
lret
pop
and
cmp
repz
add
cmpps
loop
xor
push
pushf
sbb
lock
jbe
lea
sbb
push
pop
sbb
cmp
add
cltd
mov
pop
sbb
sbb
inc
mov
cli
cmpsl
insb
jnp
sub
scas
sahf
pusha
sarl
out
pop
adc
mov
roll
ret
and
pop
in
test
in
adc
cmc
and
mov
test
ret
addr16
jg
jge
and
lds
icebp
sub
and
mov
fwait
stos
aaa
mov
add
jb
flds
xor
push
outsl
out
mov
dec
and
stos
cmp
fdivrl
pusha
jns
pop
cmc
bound
rorb
cwtl
cmp
stos
arpl
and
pushf
pop
mov
cmp
movl
lds
mov
fcompl
mov
inc
cmp
sti
hlt
or
ja
jmp
ret
mov
mov
nop
push
mov
fistpl
adc
jns
xchg
icebp
incb
pop
and
cmp
stos
dec
add
popf
fstps
xchg
mov
pop
jmp
adc
loope
inc
mov
pop
cltd
pushf
push
mov
mov
sub
test
lds
add
data16
dec
into
fwait
nop
dec
out
je
xchg
xor
popf
das
xor
adc
push
aaa
sub
or
jbe
mov
push
jnp
mov
xchg
push
ljmp
das
pop
fcom
repz
add
mov
jne
leave
les
cmp
fs
add
lods
inc
mov
outsb
sbb
lcall
test
mov
jp
fisubl
and
jp
aas
in
fwait
push
jo
xorl
fnstcw
push
inc
or
movsl
sbb
out
test
ret
mov
and
jl
jno
arpl
jl
je
call
jp
lods
outsl
mov
sub
cs
add
adc
es
fisubrs
inc
xchg
loopne
jnp
cmc
div
call
sbb
mov
iret
fwait
add
lahf
jo
orl
test
cltd
ljmp
decl
push
xor
inc
pusha
js
in
scas
arpl
cmpsb
jmp
inc
or
mov
inc
or
outsl
hlt
and
stc
and
mov
out
push
aad
push
idivb
out
pop
push
pop
insl
sub
stos
mov
popf
out
xlat
or
sbb
mov
lcall
jp
insb
sub
xor
nop
pop
sbb
sbb
sub
cli
cmc
out
loopne
jne
xchg
dec
sub
push
and
mov
rcr
xchg
rcr
push
mov
pop
push
mov
sbb
push
dec
and
dec
or
add
sti
push
inc
push
or
pop
pop
int
mov
xor
mov
push
loope
lods
ja
outsl
push
ret
and
movsb
jmp
push
cmp
mov
rcll
cltd
push
stos
add
ret
fimull
sub
rcrb
push
sub
mov
roll
popa
iret
push
notl
mov
or
push
inc
mov
sbbl
cmpsb
cwtl
mov
shll
arpl
push
enter
and
xor
or
stos
aad
cmc
stos
xchg
xchg
aas
movsl
cmp
rcrl
jne
shlb
mov
lock
xchg
bnd
push
mov
mov
mov
shrl
imul
or
hlt
mov
dec
sub
rorl
or
mov
cltd
imul
ret
xchg
ficomps
pushf
je
pop
rorl
icebp
pop
lcall
push
pop
addr16
arpl
lahf
jp
mov
add
and
out
and
ret
mov
inc
dec
sbb
ljmp
xchg
adc
popf
mov
xchg
pop
popa
xlat
dec
push
mov
inc
scas
les
and
jae
test
push
test
sub
les
fs
sahf
out
pop
pop
mov
xchg
push
addb
int
mov
inc
jl
mov
push
jp
mov
mov
out
push
jne
sub
push
xchg
mov
xchg
repz
mov
scas
mov
adc
ds
adc
scas
popf
ret
movsb
mov
inc
adc
sub
aad
aas
or
cmc
and
lea
iret
ja
sbbb
pop
sbb
mov
sti
lret
fdivrs
xor
adc
imul
sub
daa
movsb
xchg
in
fsubrs
add
out
sub
mov
sub
repz
sbb
sbb
push
jmp
pop
xchg
shll
jg
enter
gs
mov
lahf
xchg
cmp
push
pop
mov
xor
rolb
int
sbb
mov
popf
xchg
testl
sbb
cmp
inc
je
dec
dec
xor
xor
call
rclb
push
jmp
lock
adc
out
fdivr
nop
xchg
mov
inc
mov
jmp
test
out
xchg
adc
xchg
push
mov
int3
in
cmpsb
es
pusha
ret
jg
add
jbe
fldcw
mov
push
iret
jno
or
and
sbb
adc
outsb
inc
cmpsb
inc
xor
bound
fidivl
mov
stos
ss
sub
mov
or
sub
insb
sbb
test
add
push
cmp
popf
pop
lds
inc
mov
mov
sub
mov
pusha
cmp
mov
dec
or
xchg
mov
ret
test
dec
push
inc
jmp
push
jbe
inc
cli
xchg
sahf
pop
repz
sub
shlb
call
push
fiaddl
movsb
mov
inc
call
push
cmp
sbb
xor
pop
push
add
out
mov
out
iret
xchg
mov
push
ja
and
dec
mov
popa
shlb
mov
fstl
int3
ja
andb
test
push
pop
xchg
ret
sbb
cld
mov
cmpb
fisttps
lods
fwait
xor
stc
pop
xlat
mov
or
stos
xchg
loope
js
mov
jle
insb
int
cs
pop
fwait
jae
les
cmp
into
mov
dec
lock
dec
sub
mov
data16
lret
mov
inc
roll
cs
sbb
pop
push
js
icebp
insb
sbb
addr16
mov
mov
in
and
outsl
test
pusha
aas
jo
mov
in
and
xchg
mov
mov
pop
push
push
sub
mov
sub
fwait
push
push
daa
push
testl
in
add
ret
das
cmp
adc
cld
fstpt
sbb
push
fsubrl
xchg
insl
jge
push
jg
or
push
push
notb
lock
cmpsb
imul
mov
and
push
push
add
mov
lds
data16
cmpl
ja
or
loopne
sbb
add
sub
iret
mov
mov
stos
add
test
or
mov
sub
popf
jle
outsl
xor
aaa
xor
inc
jmp
sbb
sub
int
cwtl
push
mov
pop
stc
pop
popa
psubb
inc
mov
mov
ret
cmp
xchg
or
jge
jecxz
pop
call
sbb
daa
add
add
xchg
inc
inc
pop
ja
pop
int
sub
hlt
int
jb
mov
sub
shl
mov
add
mov
leave
fnstenv
loopne
mov
push
and
mov
and
movsl
pop
shll
orb
inc
ret
pop
xchg
clc
mov
dec
add
mov
sbb
mov
or
adc
sbb
das
pop
in
mov
or
or
mov
stos
rcll
mov
mov
lahf
enter
push
xorb
ljmp
mov
out
lods
add
push
push
repz
xorl
push
pop
fisubrs
pop
jg
fwait
and
imul
icebp
xor
pop
inc
leave
cmp
jmp
leave
popa
inc
mov
test
jbe
data16
aad
movsb
sbb
inc
fsubrl
ja
jmp
cmp
xchg
outsb
ljmp
imulb
faddl
out
emms
jo
mov
call
fwait
cmp
push
cmp
and
and
mov
and
sub
insl
fildll
enter
sub
jmp
inc
andb
mov
add
lcall
xchg
push
insl
call
add
mov
pusha
int
mov
mov
push
fidivrs
pushf
sub
nop
sub
mov
dec
sbb
cmp
rep
push
xchg
push
in
in
mov
xchg
fs
shlb
push
push
in
icebp
mov
lods
mov
js
nop
pop
je
fildl
or
loop
sub
push
dec
aam
mov
js
sti
sbb
aaa
fmull
add
call
imul
jne
lds
inc
push
jmp
mov
mov
sub
in
sub
fists
jecxz
pop
loope
and
pop
fcmovnbe
int3
or
or
je
sub
je
pop
pop
cmp
cs
cli
inc
xchg
in
out
fmul
fimuls
mov
ret
loopne
sti
mov
cmpsb
imul
sub
mov
adc
cltd
sub
adc
xor
xor
imul
pop
cmc
xchg
fs
in
aad
inc
in
push
xchg
cmc
pop
xor
jb
push
fdivp
lds
add
mov
sbb
inc
aas
and
adc
adc
nop
mov
bound
jge
jmp
cs
outsb
xchg
or
call
outsl
pop
inc
xor
mov
popaw
jns
mov
jge
or
int
mov
js
insw
mov
mov
popl
rcl
loopne
push
nop
mov
call
addr16
add
jl
inc
and
in
rol
sub
ret
lods
ljmp
clc
sbb
push
jp
test
mov
pop
fcomi
mov
out
in
das
and
pop
lds
inc
loop
in
inc
add
daa
jmp
test
iret
inc
outsl
jle
pop
push
pop
aad
cmpsb
jmp
and
xchg
mov
stc
lahf
lahf
xor
arpl
pusha
pop
jge
out
sbbb
lock
leave
adc
inc
stos
dec
xchg
jg
subb
and
into
das
add
push
lock
icebp
cmp
sub
je
into
rsqrtps
out
dec
or
mov
mov
pop
lcall
jo
daa
psrlw
pop
aam
cld
pop
out
sbbb
cld
mov
pop
dec
icebp
imul
scas
testb
iret
dec
arpl
and
and
in
fstl
daa
cmp
cmp
jnp
lods
mov
pop
push
insl
or
popa
and
aam
in
jae
inc
lret
outsl
dec
mov
pusha
in
mov
imul
jnp
popa
mov
mov
or
pop
sti
pop
cmpsb
jnp
adc
outsl
push
sti
cmp
fdivs
aas
mov
jne
sub
pop
fsubrs
sahf
pop
out
mov
mov
into
sarb
test
out
sub
test
xchg
mov
mov
jp
ja
pusha
insl
inc
icebp
in
xorl
dec
add
xchg
movsl
outsl
aad
mov
ret
cmp
repz
push
rep
jbe
lea
jnp
jge
imul
test
add
xor
mov
pop
in
inc
sub
ret
test
lds
push
out
repz
cmp
daa
leave
je
ss
retw
int3
push
sti
xchg
stc
adcb
addr16
sub
int3
push
cmpsl
ret
aam
int
push
cwtl
mov
inc
push
js
pop
or
stos
icebp
push
sti
push
cld
shll
jnp
xorl
sbb
lods
mov
jmp
loopne
xchg
xor
jge
push
jge
int
jns
mov
mov
dec
mov
imul
call
pop
cwtl
pushf
sahf
xor
xor
andl
jae
xor
push
or
push
outsb
stc
data16
jno
repz
xchg
fwait
lret
inc
cld
and
mov
je
add
and
mov
cs
dec
call
inc
movsl
rol
adc
mov
lock
not
icebp
pop
es
sbb
mov
or
loop
sbb
sahf
jp
lahf
push
mov
pop
arpl
mov
aam
inc
in
jo
dec
rcrb
inc
fs
mov
test
sbb
cmp
or
mov
sahf
cli
push
lcall
xchg
push
arpl
std
es
push
fsubrs
fisubl
push
mov
xchg
in
cs
xchg
push
int
lret
addr16
sarb
jno
shll
inc
or
lods
or
lcall
lcall
outsb
nop
jmp
sarl
xor
add
in
ret
repnz
mov
xor
and
mov
fldl
cmp
pop
lock
mov
pop
stc
shll
xor
jg
imul
add
das
fistl
lahf
pop
add
jg
in
pop
mov
add
lock
je
mov
push
inc
out
adc
push
jp
outsb
jbe
cmp
jae
icebp
fiadds
loope
test
rol
xor
popa
out
nop
lret
adc
ljmp
jbe
mov
das
std
push
xor
scas
sahf
inc
ficoms
clc
sar
jne
xchg
and
adc
mov
in
mov
jae
push
aam
psrld
mov
jg
stos
in
xor
and
pusha
cmp
lods
mov
fdivrl
sahf
call
mov
jns
push
dec
outsl
ret
sub
movsb
scas
sbb
xchg
inc
mov
sbb
cmp
test
stos
xor
jmp
stos
fs
cmpsl
jg
xchg
dec
gs
jmp
xlat
xor
adc
xchg
push
mov
dec
aam
sbb
and
dec
gs
jle
push
ret
outsb
dec
test
orb
mov
xchg
jmp
fidivl
fwait
mov
mov
mov
out
aaa
adc
test
das
je
outsb
lret
mov
icebp
lock
loopne
jno
inc
cwtl
cmp
add
aas
into
xchg
cmp
scas
jl
and
subl
je
enter
pop
add
inc
pop
pop
xchg
cmpsl
ljmp
sub
and
pusha
push
xchg
and
rcr
cmp
lods
cltd
std
mov
mov
and
add
test
iret
pop
bndldx
or
and
adc
into
push
sub
in
dec
cmp
mov
xchg
dec
flds
sub
cld
add
sbb
mov
sahf
cmp
xor
push
pop
movsb
outsb
cmp
mov
test
add
add
lret
jg
cmp
fs
add
cli
pop
je
lods
leave
test
xchg
out
testl
addr16
andb
or
mov
outsb
pop
inc
lock
shlb
movsl
jecxz
out
int3
jmp
idivb
pop
cmp
ljmp
xor
out
or
loope
inc
loope
loopne
xchg
dec
movsl
repz
enter
js
mov
dec
hlt
mov
test
sbb
rcll
in
xchg
fsubs
imull
adc
in
mov
jg
xor
sti
dec
add
mov
adcl
dec
out
and
scas
mov
cmc
add
pop
cmpsb
sbb
out
sahf
mov
mov
adc
sbb
push
ja
aad
test
insl
push
cmp
sbb
jo
and
inc
shlb
xor
and
lea
js
jp
push
lahf
aam
cmp
dec
jle
lods
push
jecxz
or
sahf
jp
jns
lock
fildll
adc
aaa
add
lcall
in
aaa
push
xor
fidivs
sti
jnp
testl
ret
and
pop
pop
loope
pop
push
dec
push
lods
into
mov
xchg
sbb
mov
leave
leave
cmpsl
pop
xchg
pop
xchg
arpl
lds
cli
mov
jecxz
imul
pop
push
repnz
jl
aas
cmc
fwait
xchg
xchg
sbb
push
or
lret
incb
inc
jne
adc
sar
pop
jge
xchg
aaa
test
jg
sub
xor
lahf
adc
mov
sbb
stos
mov
adc
out
pop
popa
and
xchg
or
sbb
jle
push
leave
push
into
sahf
pop
fisubrl
sti
sub
ja
enter
mov
sbb
inc
push
jmp
repz
dec
lock
mov
mov
out
or
data16
mov
test
cs
sbb
je
mov
mov
ja
aas
ret
out
mov
hlt
and
out
push
sahf
add
cmp
fsub
mov
popa
cmp
push
bnd
fcmovne
pop
add
pop
pop
add
cli
mov
mov
minps
daa
mov
ljmp
fcomps
mov
jno
repz
lret
mov
or
or
sub
fs
std
cmp
pop
test
pop
aas
xor
aas
xchg
nop
push
add
aad
dec
push
shl
ljmp
xchg
mov
sti
inc
or
pop
inc
mov
mov
pop
adc
adc
push
sbb
cltd
sbb
rcll
in
in
test
xor
imulb
popf
sti
cwtl
fistpl
addr16
rolb
aas
shl
xchg
int
push
mov
cmpsb
popf
sbb
enter
pop
pop
inc
fstps
filds
add
sub
inc
mov
fcomps
loope
insb
push
cmp
adc
inc
nop
pusha
push
pop
pop
popf
add
pop
pop
jno
xchg
jle
lods
push
inc
jbe
add
xchg
pop
movsb
iret
mov
mov
test
sahf
xor
push
and
sbbl
jmp
nop
movsb
add
mov
sub
int3
stos
pop
mov
sbb
repz
into
adc
imul
xor
sbb
jns
pop
repnz
xor
jp
rol
sub
and
fnstsw
push
outsb
stos
xor
addb
test
cmc
sbb
gs
adcb
sbb
mov
pop
loope
inc
pop
jl
lock
xchg
xor
repnz
pop
adc
and
mov
mov
dec
mov
cmp
push
bound
xchg
ja
mov
xor
cmp
lds
icebp
adc
insb
add
dec
cmp
outsb
ljmp
xor
jl
push
fwait
call
cmpsl
shlb
out
jne
add
scas
movsl
sahf
out
int3
dec
push
aad
fnsave
add
cld
ja
out
fists
adc
mov
setns
hlt
mov
cmp
dec
mov
jb
cld
out
mov
scas
mov
xor
mov
adc
popa
lahf
add
jne
lret
mov
dec
imul
push
icebp
outsb
lods
push
sub
or
call
icebp
insb
fidivrs
mov
mov
jo
jp
and
rcll
test
or
rdmsr
mov
insl
cmp
scas
or
stos
cmc
testl
cltd
sti
pop
ret
xchg
outsl
movsb
ret
and
xor
xchg
pusha
adcl
fucom
sbb
mov
movsb
mov
push
gs
addr16
fs
test
ja
xor
jecxz
call
unpcklps
sub
addr16
pop
sbb
cli
cwtl
adc
int3
cmp
jno
inc
pop
pop
add
cmp
mov
push
inc
or
cltd
fwait
cmpsl
xchg
negl
aas
sub
popa
inc
inc
frstor
inc
and
das
adc
ss
pop
cmc
mov
sbb
push
or
dec
popa
in
int
mov
xor
std
and
ret
xsavec
and
cs
daa
arpl
out
sbb
mov
int
and
dec
push
mov
xor
sub
xchg
push
add
pushf
cmpsl
jne
fidivs
jo
jge
pop
enter
push
xor
pop
dec
idivb
icebp
ja
fcmovu
imul
cmpb
adc
out
push
jmp
jae
pop
pusha
testb
mov
jle
adc
les
int
xor
ret
xor
cmp
rolb
push
fmuls
mov
push
lret
fmull
in
adc
addr16
and
jl
jb
rcrb
add
and
ror
dec
pop
roll
js
bound
xchg
arpl
push
fdivl
push
fsubrl
mov
arpl
jnp
aas
ljmp
or
and
xor
popa
les
loop
lret
pop
add
xchg
mov
lcall
xchg
imul
test
leave
das
mul
push
adc
arpl
cli
je
repz
and
fisubrs
fwait
aad
xchg
cltd
dec
jg
sub
adc
mov
ds
mov
jno
orb
jmp
test
test
mov
mov
push
jecxz
xchg
scas
mov
mov
orw
call
outsl
nop
inc
in
vpunpcklbw
icebp
repz
fcompl
push
cmp
in
sbb
addr16
pop
mov
pop
mov
xchg
test
push
push
addr16
push
cmc
adcb
mov
dec
test
and
dec
out
inc
adcb
mov
xchg
pop
and
popa
mov
fcmovne
rcrb
jnp
mov
or
inc
insl
mov
in
adc
jae
mov
inc
clc
xchg
cmpsb
lcall
inc
negl
andb
push
xchg
mov
fwait
dec
daa
mov
addb
daa
and
inc
inc
xchg
sahf
ret
mov
mov
xorb
ljmp
js
mov
push
test
fs
mull
xor
in
push
sub
jae
cmp
inc
xor
or
sbb
or
cmp
push
pushf
dec
into
cwtl
or
das
xchg
cmp
jne
ds
subb
mov
mov
pop
fcmovnbe
imul
cmp
add
mov
pop
or
outsl
sub
inc
test
push
les
inc
sub
sti
shrl
push
insb
xchg
lock
je
mov
jne
jmp
fs
sbb
arpl
scas
sub
gs
sahf
ror
popa
jmp
dec
andl
push
add
sub
bound
outsb
outsl
push
push
movsl
adc
jl
ss
in
shr
repnz
push
popf
stos
ljmp
lcall
lods
mov
js
rep
mov
adc
bnd
mov
adc
or
pushf
addr16
shl
std
sbb
dec
sub
sbb
dec
mov
mov
adc
push
adc
push
data16
cmp
add
out
adc
and
jb
sahf
jg
xchg
lret
push
pop
cmpsb
out
ror
in
jnp
addb
repz
sub
adc
aas
sub
and
push
loope
sub
dec
cmp
push
lds
loopne
xchg
xchg
push
clc
xchg
push
adc
fsubl
loope
cmp
sub
cmp
add
incb
pop
push
adcb
mov
fidivrs
cmp
jnp
mov
add
and
loop
jl
fcomps
out
data16
bnd
sbb
xchg
jnp
jp
pushf
inc
into
mov
and
ja
and
jle
mov
xor
popa
xchg
pop
and
push
pop
jns
or
jbe
dec
xor
add
rol
mov
and
cli
pop
dec
repz
ljmp
pop
mov
adc
test
in
jo
pop
dec
pop
cwtl
repz
loop
cmp
iret
outsb
xor
gs
fsubl
dec
dec
dec
mov
jno
maxps
xchg
hlt
inc
popf
add
in
cmp
xchg
or
fdivl
leave
push
or
mov
lcall
cmpsl
aaa
in
iret
lahf
out
orl
cltd
movsb
xor
lods
out
mov
xchg
fmul
cmp
aaa
je
jmp
add
dec
pop
jb
outsl
inc
cwtl
leave
imul
aas
lea
adc
out
ret
mov
mov
call
sub
pop
call
mov
or
xor
xor
xor
xor
cli
in
popf
insb
hlt
and
or
shrl
pop
aad
and
ljmp
dec
sbb
xchg
dec
decl
dec
push
push
repnz
add
mov
fdivrl
loop
sub
mov
fistps
push
ret
mov
rcl
cmpsl
clc
push
xor
dec
push
out
imul
add
fwait
dec
push
or
mov
in
sub
adc
cmpsl
push
jecxz
aad
mov
outsl
sbb
adc
inc
pusha
sbb
xchg
inc
xchg
in
cs
idivl
pop
xor
fistl
push
test
pop
loope
out
mov
imull
cmp
loopne
ret
sahf
flds
pop
adc
sbb
popl
jle
xchg
arpl
loopne
js
loopne
xchg
and
adc
sub
pop
testl
shr
xchg
fnsave
jno
shl
insb
xchg
adc
mov
pop
f2xm1
dec
scas
dec
push
js
aas
fcompl
push
mov
push
jge
inc
rorl
aas
jbe
jns
inc
xor
cmpsb
popf
mov
imul
stos
stos
test
into
pop
mov
push
aam
enter
mov
dec
out
aaa
orl
adc
fisttpll
mov
sarb
inc
sti
icebp
int3
dec
mov
movsb
decl
mov
sub
out
sub
fs
jmp
pop
lds
fcmovu
imul
insb
xchg
iret
dec
test
xor
xor
je
mov
xchg
push
push
mov
mov
mov
dec
in
or
hlt
xorb
insb
enter
jecxz
mov
mov
push
add
inc
and
xor
cmpsb
decb
daa
mov
cmp
movsb
jae
jb
mov
mov
mov
les
xor
imul
mov
xchg
mov
mov
pop
mov
dec
mov
test
ret
fisubrs
pop
sub
aam
loope
iret
mov
loope
jnp
out
jge
or
loopne
mov
xchg
insb
outsl
or
mov
bnd
inc
push
pop
repz
subl
cwtl
dec
jl
daa
test
nop
outsb
loopne
xor
aaa
add
push
jne
or
cld
jmp
pop
sahf
inc
es
adc
sub
xchg
push
es
cmp
pop
fwait
push
pop
add
call
jl
sbb
or
xchg
fldcw
jg
arpl
jns
jge
adc
adc
cwtl
or
test
or
mov
scas
sub
inc
imul
and
mov
mov
insb
mov
sahf
jno
xlat
pop
push
out
mov
ja
xor
dec
mov
cwtl
jo
mov
mov
inc
adc
adc
push
sub
shl
push
xor
or
xor
lret
popf
subl
mov
sub
inc
pushf
adc
xchg
aad
divl
stos
fsubs
testb
or
loopne
jns
xchg
pop
inc
stos
inc
pop
pop
mov
ror
push
push
xor
sub
sbb
push
jno
scas
not
push
mov
and
sbb
push
insl
pop
sbb
addb
dec
xchg
mov
sbb
pop
pop
movsb
adc
lods
jmp
sahf
mov
imul
icebp
fxch
jmp
icebp
dec
stc
fwait
sub
or
xor
add
inc
mov
add
inc
mov
fs
in
push
add
ret
jno
icebp
pop
jo
bswap
bound
xchg
push
dec
sahf
arpl
test
mov
aaa
cmp
dec
test
mov
mov
mov
jb
test
arpl
mov
sub
mov
or
sbb
cmpsb
mov
aas
fimull
xchg
aas
jmp
or
test
sbb
clc
lret
xor
insb
jo
test
mov
mov
xchg
ror
jb
int3
loopne
push
movsb
iret
stos
movsb
adc
cwtl
rorl
sub
fnstcw
xor
scas
popf
in
adc
shll
sti
lret
mov
iret
outsl
jmp
rcl
repnz
test
add
jge
xchg
dec
jle
sub
fstpt
test
cmp
jae
or
setl
adc
aam
aam
dec
mov
add
setb
inc
sbb
rclb
xchg
mov
inc
xchg
inc
cmp
test
out
cmp
sbb
xor
vmovups
add
and
loop
inc
push
cmp
or
int
vmwrite
inc
fnstcw
jp
pop
sbb
mov
sub
push
mov
gs
pushf
shr
and
insl
xchg
xchg
fdivr
inc
popl
fldenv
cmpsb
push
test
mov
out
mov
leave
cmc
push
enter
sbb
xor
jo
mov
es
cmp
inc
dec
xchg
cmpsb
dec
jae
or
roll
and
jmp
cmp
addr16
cmp
ret
add
test
xor
jp
lods
popa
fdivrs
cmpsl
inc
mov
lock
ret
or
xchg
inc
jle
add
jecxz,pn
int
outsb
xchg
fs
pop
push
lods
lods
sahf
imull
call
or
loopne
mov
xor
add
xchg
lcall
push
sbb
and
mov
fsts
pop
fstl
sbb
xor
fimuls
in
jnp
pop
ss
ljmp
fiadds
fldt
dec
int3
leave
std
scas
ret
add
out
xchg
popf
sbb
fistpl
lcall
sbb
fists
xorb
pop
jecxz
push
jle
mov
cmpb
xor
shr
jge
dec
in
dec
mov
lahf
mov
leave
xor
cwtl
inc
ret
adc
mov
pop
xchg
shlb
sub
rcrl
push
adc
adc
ss
add
add
out
loopne
fisubs
dec
xchg
out
xchg
sbb
jecxz
mov
shll
or
push
mov
shrb
loop
jno
insl
dec
jb
pop
cmp
or
xorl
loop
jb
sbb
jne
mov
int3
pop
cs
imul
stos
pop
push
jle
test
cmpsl
add
xchg
dec
popf
std
xchg
mov
and
lods
aad
mov
add
cmc
in
mov
dec
sbb
daa
mov
jl
std
inc
mov
mov
mov
cli
repz
add
jl
jne
push
decl
aad
mov
cpuid
popa
xor
clc
jns
loopne
or
popf
push
and
xlat
repz
pop
inc
cwtl
fcomps
mov
shlb
pop
test
scas
mov
iret
and
repz
or
mov
inc
adc
xchg
aas
sbb
xchg
out
add
mov
jge
xor
cwtl
mov
popa
pop
mov
lret
jne
sahf
jns
scas
call
mov
lods
pop
js
xor
or
jg
mov
inc
mov
je
and
aam
cld
pop
jne
jns
cmp
and
mov
jle
mov
mov
mov
xchg
cmp
xor
punpckldq
xchg
pop
gs
mov
mov
std
fs
add
loope
test
push
mov
imul
dec
gs
mov
aad
fistpll
repz
test
mov
jecxz
flds
pop
pop
mov
hlt
lahf
loope
in
or
out
jo
test
or
movsb
jo
dec
addr16
ret
push
test
notb
xchg
push
into
jp
mov
add
mov
jl
iret
jg
int
mov
mov
lret
dec
sarb
clc
xchg
imul
cmp
stos
cld
jge
test
lods
fwait
cmc
xor
fsubrs
cmpsl
movl
mov
mov
loopne
lea
dec
cwtl
xchg
sub
cmp
out
es
mov
outsb
loop
pop
scas
cs
lock
xchg
xor
mov
std
in
sbb
cmp
cmp
enter
hlt
ds
sti
js
scas
pop
addb
sahf
adc
xchg
mov
mov
popf
daa
adc
stc
fadds
daa
cmp
cmp
inc
add
cmp
stos
adc
xchg
mov
call
inc
dec
adc
adc
jg
pusha
mov
fwait
sub
rolb
pop
dec
pop
cmp
mov
pop
inc
jno
push
cmpsl
daa
cmp
stos
loopne
daa
lret
stos
or
xchg
cmpsl
cmp
mov
jo
ss
les
out
fisttpll
cmp
and
lret
sbb
pusha
add
orl
sahf
mov
sbb
cmp
mov
cmp
movsl
pop
or
adc
mov
addb
sbb
or
jb
repnz
adc
in
mov
test
push
adc
movb
or
hlt
mov
hlt
mov
xor
stos
sub
in
aaa
sti
mov
imul
into
adc
xor
cld
or
loop
mov
aaa
rcr
jo
loopne
lock
clc
popa
mov
nop
sbb
ficoml
pop
xchg
aas
push
hlt
mov
dec
adc
imul
aam
sub
repz
imul
das
push
sbb
pop
mov
jne
cmpsb
js
faddl
mov
nop
pop
inc
hlt
iret
jae
ret
mov
or
sbb
stc
dec
gs
fcmovne
inc
leave
les
xchg
pusha
add
fisubrs
mov
push
pop
and
sbb
mov
push
cs
ds
fstps
icebp
stos
inc
loope
ja
pop
pushf
cli
cmp
stos
lods
push
or
add
in
pop
imul
lock
fwait
push
fists
lahf
mov
ret
xor
sbb
xchg
into
insl
push
cmpsl
add
iret
push
lret
test
pop
xor
or
imul
repnz
mov
xchg
sub
cli
jbe
push
pop
popa
dec
repnz
xor
in
hlt
push
jl
loop
xchg
push
mov
addr16
shll
dec
scas
or
rclb
sub
movl
cld
out
jmp
popf
jae
loopne
cmc
dec
iret
fs
and
push
fidivs
xor
ja
bound
mov
dec
aam
jl
aad
hlt
cs
and
rolb
xchg
fbld
mov
adc
or
push
push
call
repz
push
aad
in
popa
ret
mov
pop
push
dec
movsl
popa
ja
repnz
adc
mov
sahf
pop
es
inc
or
loopne
stos
pushf
clc
xchg
cmp
xor
jmp
aam
fld
inc
xchg
lret
and
jae
out
enter
inc
shr
and
pop
fwait
inc
das
lahf
inc
inc
xchg
ret
inc
cmc
popf
jno
jmp
xchg
cmc
movsl
pop
push
lahf
adc
and
fadd
adc
jne
sub
fnstenv
jae
mov
addr16
enter
push
pop
out
push
and
lcall
aam
notb
pop
jg
std
out
pop
fadd
push
fisubs
cmpl
dec
inc
hlt
enter
mov
mov
adc
out
repnz
fsubr
jle
lods
lret
sti
lcall
mov
and
nop
cmp
aaa
push
push
scas
jle
leave
mov
loopne
out
repnz
fcmovnbe
inc
jns
push
out
mov
jl
mov
or
repz
or
test
cmpl
xor
sub
lret
pop
mov
in
jnp
mov
add
sbb
xchg
rol
xchg
loope
dec
add
push
mov
adc
and
add
sbb
test
pop
cmp
sahf
sbb
loopne
adc
ficomps
sbb
add
sbb
or
lret
leave
cmpsb
inc
xchg
in
mov
test
pushl
std
pop
sbb
and
mov
sbb
fildll
scas
ss
mov
mov
dec
push
daa
scas
push
cmpsl
or
lahf
jae
mov
cmp
scas
pop
sbbl
or
sbb
enter
inc
push
sar
int
sbb
jg
into
movsb
popf
test
pushf
int
std
std
jmp
insl
fsts
and
mov
filds
lret
xchg
popa
push
scas
roll
loop
push
xor
into
pop
push
pop
lcall
sbb
pop
xor
mov
mov
andl
and
imul
dec
add
lahf
adc
incb
int
fimuls
movsl
in
sub
cld
xchg
pop
imul
add
cltd
cs
push
rcrl
mov
mov
out
cmpl
mulb
subb
scas
jnp
jl
dec
stos
pushf
dec
add
sbb
repz
pop
push
ss
mov
mov
push
dec
repnz
xor
enter
or
lea
cltd
jecxz
inc
adc
addr16
pop
in
loop
push
lods
pop
in
fucomp
fdivl
std
xchg
das
cli
add
icebp
loop
mov
mov
les
mov
rorl
and
ljmp
mov
jb
arpl
push
into
rcrb
mov
sub
popa
cmp
in
cmp
in
dec
cmp
pop
xor
fcmovnb
loope
arpl
mov
push
pusha
dec
fwait
mov
xor
jle
inc
lock
imul
adc
and
lds
xor
xor
sub
xor
mov
out
or
clc
lahf
dec
xor
dec
notb
nop
sub
pop
js
sbb
pop
into
ret
int
cmpsl
mov
adc
movsb
xlat
insb
adc
inc
in
jle
sub
sub
cmp
cld
sarb
daa
in
jns
out
aad
outsl
jbe
sarb
mov
mov
mov
frstor
cmp
inc
pop
mov
adc
add
xor
xor
roll
mov
movnti
lahf
pop
mov
sbb
loop
cmpsl
mov
push
cmpsl
mov
mov
xor
pop
test
outsb
push
repnz
mov
ja
mov
movsl
cmp
test
fld
push
jns
push
hlt
mov
mov
cmp
shl
pop
add
arpl
imul
jnp
into
mov
sbb
sbb
xchg
mov
mov
push
gs
push
mov
add
push
push
jge
push
enter
and
fnsave
icebp
fwait
dec
or
mov
xchg
stos
sub
jmp
or
or
xor
push
sahf
cmpsb
bound
lods
or
add
adc
and
push
hlt
or
mov
arpl
sub
xor
js
adc
jns
add
cmc
mov
imul
pop
xchg
inc
add
nop
xchg
call
push
fbstp
push
std
out
xor
push
pusha
ds
sti
xor
sub
pop
movsl
fwait
mov
inc
out
mov
iret
add
sub
inc
jmp
daa
in
or
dec
jg
pop
cld
int
das
repnz
push
inc
enter
sbb
lret
inc
es
lret
push
adc
or
out
icebp
imul
je
aam
jno
popf
lret
and
inc
jl
es
int3
add
cli
cmpsb
xchg
mov
xchg
aam
dec
cmp
stc
sbb
pusha
fistps
clc
mov
fs
test
imul
jno
lds
lcall
imul
cmp
pop
into
pop
jge
insb
xchg
movsb
xchg
into
sub
aaa
lcall
inc
fldt
pop
dec
or
les
outsl
arpl
xchg
daa
xlat
lock
subl
je
jo
pop
lods
dec
imul
cmpsb
in
test
pop
test
xchg
scas
dec
aas
ss
testb
mov
mov
cmp
sti
xchg
adcb
inc
test
push
popf
inc
pop
fldl
fmuls
and
aam
iret
shl
adc
bound
adc
clc
popf
mov
mov
pushf
aam
clc
cmc
nop
pop
xchg
cmp
and
mov
pop
push
adc
inc
xchg
dec
sub
leave
fwait
push
and
je
mov
aad
es
fs
add
xorl
mov
and
ror
test
fcomps
pop
stc
or
or
je
mov
xchg
test
call
in
cmp
xchg
push
fistl
sub
jno
aam
stos
mov
mov
in
into
lahf
cmpsl
inc
adc
lcall
adc
pop
jb
lea
stos
jo
or
iret
xchg
xchg
imul
out
mov
adc
add
xor
jnp
xchg
test
mov
sbb
add
sarl
ds
fdivr
and
test
inc
shl
pop
cmpsl
dec
sbb
lcall
out
xchg
cmp
xlat
iret
adc
push
inc
xor
jecxz
inc
hlt
fidivl
int3
cmp
xor
and
push
pop
or
or
cmp
cmpsl
cmp
mov
scas
out
xor
adc
sti
sub
and
push
es
xchg
fcom
lock
dec
mov
fwait
xor
dec
push
rcll
loopne
adc
lcall
je
in
sahf
jb
push
mov
call
ljmp
int3
scas
mov
popf
cltd
sbb
cli
sbb
mov
jb
jle
sbb
push
dec
xchg
bound
cmp
lods
cld
stos
daa
pop
xchg
cwtl
mov
or
fistpll
out
lret
sbb
inc
or
scas
in
test
ss
clc
inc
pop
scas
jno
cmp
xor
test
in
aaa
xchg
jg
mov
daa
xchg
std
mov
imul
fs
loope
lret
lcall
pushf
jg
cmp
jmp
jecxz
mov
and
out
xchg
jb
cltd
or
push
xchg
push
enter
mov
test
dec
sahf
aad
cltd
std
xor
scas
jne
mov
cld
aam
xchg
inc
mov
ds
xor
mov
dec
cmp
sbb
sbb
and
and
insl
repz
out
cld
and
test
cmpsb
loope
insb
in
out
int
mov
movsb
push
outsb
in
enter
ljmp
inc
lods
std
int
or
sbb
mov
int3
xchg
add
adc
or
jo
or
jnp
fdivl
nop
in
lcall
or
mov
outsb
xchg
enter
cmp
popl
sbbl
iret
mov
orb
dec
fstpl
mov
cmp
jg
mov
je
xchg
cmp
sbb
ds
clc
imul
pop
imul
out
ds
scas
fwait
adc
pop
fiaddl
outsl
jb
fcmovb
js
sbb
test
jno
loop
sub
inc
inc
jno
sbb
mov
fcompl
aas
mov
out
xorl
cmp
push
sti
or
mov
daa
fisubl
mov
add
fisttpl
idivl
mov
sbb
mull
mov
cmc
add
loop
call
fwait
sub
jmp
out
daa
mov
hlt
inc
xor
add
cmpl
xchg
addl
repz
adc
addr16
daa
ret
cmpsb
pop
arpl
hlt
pop
mov
xchg
jecxz
lds
jle
mov
jno
pop
fmuls
cli
push
lcall
lods
rorb
nop
fsubrl
jno
out
pop
sub
inc
rcl
xor
sub
bound
xchg
out
xor
insb
cmp
dec
add
sbb
xchg
add
stos
and
cmp
and
fsubl
sub
pop
test
pop
sub
fidivrl
subb
imulb
mulb
jnp
mov
sub
push
sbb
sub
clc
push
stos
cmp
jecxz
xor
mov
aam
jo
pop
xor
sbb
or
pop
sbb
arpl
mov
dec
mov
fwait
lret
addb
inc
les
test
pop
mov
mov
hlt
out
stos
stos
ret
xor
cli
sbb
mov
xor
cwtl
xchg
outsb
xchg
stos
mov
xchg
std
and
jg
cs
cwtl
push
fistpl
inc
mov
add
xor
or
cmp
mov
test
sub
lret
fnstcw
inc
in
test
mov
add
pop
imul
leave
lds
je
push
sub
cli
in
cwtl
xor
test
test
mov
xor
or
ret
xor
push
pop
sbb
popf
jne
into
ret
add
clc
pop
addr16
rcll
xchg
dec
pushf
insl
mov
inc
cmp
inc
add
dec
fcomps
int3
mov
scas
adc
pop
jns
mov
jp
inc
xlat
lea
fistpll
cmpl
push
test
out
or
sarb
into
insb
pop
add
lret
jmp
jp
xchg
pop
xchg
cmp
xchg
xor
movsl
inc
mov
jb
dec
sub
mov
pop
out
in
in
leave
jl
neg
push
xlat
aad
and
hlt
and
insl
lds
dec
inc
mov
adc
stos
push
shrl
xchg
mov
inc
mov
daa
inc
leave
sahf
inc
cmp
mov
fistpll
mov
addr16
push
popf
lock
sbb
orl
fistl
mov
sub
push
cli
adc
lret
cwtl
out
and
pusha
push
xchg
jo
adc
in
mov
adc
movsb
int
dec
flds
cmp
or
mov
jmp
xor
decb
popf
clc
ficomps
out
adc
pop
int3
or
mov
push
push
daa
das
aam
lds
sub
mov
dec
mov
insl
mov
test
int
sub
fidivs
xor
sbb
dec
in
jnp
jae
adc
and
sub
mov
sub
fdiv
xlat
je
xchg
sahf
stc
jns
xchg
movl
stc
loope
dec
adc
push
rcll
xor
push
loope
inc
movsl
pop
imul
push
lds
jecxz
sub
mov
mov
dec
sbb
pop
nop
dec
call
push
fmul
mov
xchg
fimuls
mov
fwait
div
mov
push
push
jo
loope
push
sub
ja
psubd
int
lcall
xchg
insb
cmc
mov
mov
aas
push
mov
inc
jae
fisttps
mul
dec
icebp
popa
adc
lods
imul
mov
mov
xor
leave
cmp
mov
mov
push
rorl
add
or
push
pop
lods
fimuls
push
lcall
enter
std
sti
adc
js
mov
xchg
xor
dec
xchg
rcrl
pop
jmp
add
jbe
stos
push
xor
mov
xchg
push
dec
insb
shrb
shrl
jne
mov
orb
orb
xchg
sbb
xchg
mov
dec
xchg
sbb
jae
adc
test
xor
inc
cmp
sahf
cltd
lret
cmpsb
jne
loope
lock
fsts
cmp
fyl2x
or
ja
fldt
xor
sarb
pop
int
mov
jl
pop
push
cwtl
and
roll
xorl
xor
add
cmp
pushf
in
imul
add
mov
or
cmp
lret
add
jg
and
movb
adc
jne
mov
mov
daa
mov
add
subl
xchg
insl
sbb
mulb
or
out
xchg
sbb
and
jne
pop
fimull
inc
mov
and
mov
cmp
xchg
pop
xchg
xchg
mov
test
jl
lret
shrl
shlb
pop
inc
imul
icebp
add
mov
mov
rcr
sbb
inc
sub
jno
mov
roll
stc
fcom
cmp
cmp
out
ret
js
sbb
or
jnp
pop
jp
jne
ljmp
adc
bnd
adc
mov
loop
dec
inc
aaa
mov
inc
jbe
pop
nop
jmp
and
xor
push
and
or
sti
imul
cmp
stc
rcrb
sub
mov
and
push
lds
and
cmpsl
bound
loope
push
sub
jl
sbb
mov
mov
push
pushf
push
jp
repnz
iret
adc
push
xchg
cmpsb
out
xchg
adcl
aad
cmp
jg
lret
outsb
sub
mov
xchg
es
cmp
mov
inc
push
dec
xor
push
sbb
test
test
push
dec
inc
push
dec
cli
xor
mov
add
loop
push
stc
mov
mov
lods
sbb
fnclex
sbb
push
leave
repnz
pusha
movsb
icebp
mov
fidivrs
les
dec
push
in
loop
aas
jl
pusha
clc
lock
dec
mov
inc
loopne
mov
nop
fcmove
mov
pop
aad
test
sub
je
jne
call
fidivrs
in
fdivr
std
cmp
xchg
inc
or
arpl
xchg
adc
jp
inc
jl
or
pop
addr16
xchg
stc
inc
sbb
out
popa
mov
lods
cmp
lret
push
push
xorl
xchg
movswl
xor
mov
adc
or
mov
sub
pop
mov
push
scas
loope
xchg
rcrb
popf
mov
xchg
sarl
xchg
pop
adc
cs
xor
cs
int3
mov
dec
ja
xchg
scas
mov
lea
push
cmp
mov
jae
pushf
xor
xchg
cwtl
pop
push
lret
mov
inc
dec
aas
add
inc
adc
aam
mov
pop
lock
ficoml
lret
jle
push
sub
push
gs
movsl
mov
mov
dec
dec
stos
mov
add
xor
enter
mov
sub
mov
js
arpl
push
xchg
mov
out
xlat
or
jp
and
ljmp
int
mov
sarl
repz
dec
mov
mov
push
fiaddl
fcompl
test
inc
xor
stos
cld
rclb
inc
mov
add
sub
popa
out
sbb
enter
pop
cmpsb
std
mov
mov
mov
mov
test
out
js
popa
fwait
mov
pop
and
fnstcw
fidivs
or
aam
push
push
fisttps
dec
sbbb
cmp
js
pushf
dec
sti
push
hlt
xor
out
leave
addr16
test
ret
lret
insl
les
loopne
mov
push
adc
stos
mov
out
inc
aad
cmpsl
push
sahf
fwait
test
mov
xchg
arpl
movsl
cmpsl
adcb
into
fnstsw
or
out
jns
add
cwtl
outsb
xchg
movsb
add
enter
jp
dec
outsl
inc
lret
and
jl
push
ds
shll
sub
or
pushf
xchg
clc
shll
std
sbb
ret
mov
mov
push
xchg
clc
xor
shlb
push
daa
fs
sub
fiadds
sub
hlt
and
inc
pop
repz
pop
and
mov
sbb
push
sub
mov
dec
and
mov
ret
test
inc
orl
mov
in
in
mov
inc
mov
sbb
jg
cli
iret
lds
push
jno
outsb
adc
xchg
and
enter
pop
push
sbb
int
mov
loop
scas
add
inc
movsl
test
lds
std
xor
inc
jb
cmp
mulb
jns
iret
js
dec
pop
ret
rolb
out
andl
mov
push
roll
mov
daa
pop
push
lock
jecxz
filds
xchg
mov
ret
addl
mov
movsl
mov
rclb
insl
movsb
jp
outsl
cmp
loop
push
ret
sub
imul
ret
cmp
add
jecxz
sbb
mov
jae
rep
scas
movq
adc
lods
mulb
add
cmpb
push
inc
and
push
insl
push
mov
mov
mov
dec
lret
test
std
std
mov
sbb
sarl
cmp
push
bound
das
icebp
fistpl
jns
mov
adc
pushf
adc
sbb
es
cmp
push
jl
and
push
adc
sbb
sbb
das
cmp
push
inc
ret
mov
mov
scas
cld
fisttpl
je
scas
and
xchg
and
xor
mov
cwtl
mov
push
inc
and
add
lahf
jecxz
inc
mov
iret
insb
sahf
lret
and
cmp
cld
ja
cltd
imul
xor
push
repnz
mov
inc
push
sahf
xor
mov
mov
cltd
or
lcall
iret
loope
pop
xchg
xor
pop
imull
lock
inc
pop
push
std
cmp
daa
mov
fs
jl,pn
mov
scas
mov
leave
pop
cmp
push
gs
hlt
mov
stos
or
mov
shll
xor
leave
sub
testb
dec
xchg
sbb
xchg
leave
scas
push
lds
sub
out
shrd
dec
inc
gs
jae
js
xor
stos
jp
mov
out
imul
std
adc
inc
call
xchg
les
jecxz
dec
mov
xor
ret
cmp
sbb
sbbl
sub
ljmp
scas
xor
imul
xchg
sahf
idivb
data16
mov
or
dec
xorl
sub
les
add
popa
out
pop
or
outsl
les
fsub
xor
popa
imul
pop
sub
and
dec
adc
popa
dec
jnp
in
inc
mov
or
pop
dec
xor
bnd
jno
pop
rolb
or
mov
mov
aas
mov
or
add
addr16
sbb
mov
lods
pusha
sbb
fnstenv
jmp
push
mov
mov
insb
sbb
mov
in
aas
lock
hlt
sahf
xchg
fucom
push
test
inc
push
leave
add
xor
aad
and
aaa
pop
in
mov
aaa
cmp
add
xchg
and
inc
in
pop
xchg
xchg
pop
inc
mov
mov
mov
mov
icebp
jmp
add
scas
orl
insb
dec
pop
aaa
mov
push
jg
add
push
imul
adc
adc
push
orb
jno
mov
stos
mov
bound
push
imul
aas
sahf
pop
hlt
scas
ja
mov
sarl
imul
mov
call
adc
dec
pop
les
xchg
stc
dec
mov
xchg
mov
test
daa
lods
clc
das
xchg
inc
adc
leave
dec
stc
mov
xor
cmp
xchg
imulb
sti
in
repz
push
in
cld
mull
pop
adc
repnz
pop
in
sbb
daa
xchg
fs
arpl
adc
jle
daa
out
jae
std
js
xchg
out
cld
inc
dec
andl
sbb
push
mov
popa
sub
mov
push
lret
inc
test
pusha
push
test
cld
cmc
dec
shrb
and
cmpl
add
clc
iret
bound
movsl
sub
sbb
test
lcall
adc
dec
arpl
or
mov
popa
mov
adc
mov
lcall
pop
xor
scas
iret
addr16
jnp
sbb
lahf
lods
inc
dec
pop
cld
push
dec
lahf
pop
cltd
cmp
push
jae
cli
sbb
add
pop
pop
push
jne
dec
xor
dec
call
sti
xor
jp
mov
push
xlat
ja
ljmp
es
cmc
pop
into
or
pusha
push
mov
add
pop
shll
bound
adc
icebp
mov
mov
sbb
mov
into
pop
pop
sub
xor
fidivs
sub
cwtl
xor
push
insl
lock
or
out
sbb
mov
xchg
push
outsl
pusha
and
les
mov
lcall
add
mov
shll
fwait
xor
mov
in
sbb
aaa
pop
adc
addr16
sub
hlt
ja
repz
xor
test
clc
push
aas
lea
sub
pop
pop
cmp
cmp
mov
idiv
outsb
iret
mov
pop
jg
jno
rolb
mov
mov
lret
mov
jl
fmuls
push
scas
std
stc
outsl
cwtl
pop
sar
adc
outsl
or
sahf
add
das
dec
push
jne
cli
into
ss
sbb
adc
mov
dec
scas
pusha
push
cmp
mov
push
add
lds
loope
sahf
xchg
xchg
shrb
inc
sub
lret
test
xchg
xchg
add
xlat
fcom
movsb
ficoml
shrb
repz
cmp
mov
fisubl
arpl
mov
sbb
mov
out
mov
xchg
mov
pushf
je
mov
sub
xchg
mov
loope
xchg
stos
xor
clc
sub
ja
lret
push
stos
fnstenv
mov
fsubs
or
outsb
lcall
not
pop
mov
sbb
cwtl
push
into
xlat
aas
jg
cmp
xor
mov
loope
adc
into
insb
mov
out
mov
les
sub
cmpsb
scas
outsl
pop
jecxz
push
cmc
xchg
fwait
jns
adc
mov
push
lea
ds
add
out
push
repz
dec
cs
mov
ret
lret
pop
daa
incb
push
int
lods
int3
nop
adc
lods
mov
dec
les
push
or
xchg
pusha
mov
and
inc
loope
cltd
and
sti
movb
in
testl
sub
mov
add
xlat
pop
movsb
push
push
push
xchg
iret
cmpsb
hlt
jmp
clc
mov
dec
ljmp
xabort
ss
rorl
or
push
andl
xor
adc
andb
data16
mov
push
dec
add
mov
jmp
div
imul
movsb
xor
es
and
rorl
pop
ficompl
adc
pop
adcl
sti
pop
sarl
mov
imull
or
pop
aas
fcmovnb
mov
test
mov
fcoml
mov
or
jae
mov
inc
out
idivl
mov
sub
push
insl
dec
push
mov
push
cld
leave
shrb
inc
inc
sbb
addr16
mov
cmpl
xlat
push
or
mov
push
add
in
or
push
cmc
adc
cmpsb
cmc
cwtl
add
pop
push
dec
dec
into
aas
scas
or
mov
aas
dec
test
lods
mov
dec
xor
sub
outsb
mov
into
xor
out
jno
fsubl
jnp
sti
fcompl
jbe
add
daa
or
scas
dec
vshufps
fsubrp
sub
mov
pop
rep
jnp
fadds
xor
and
xlat
pop
or
mov
jb
es
push
and
cmc
xor
imul
xchg
sbb
mov
dec
in
add
mov
imul
mov
push
sbb
insb
jg
out
cli
xor
loopne
sub
mov
loopne
nop
test
fistl
inc
push
mov
sub
add
sub
test
xchg
pusha
insl
int3
bound
or
inc
push
add
dec
or
adc
outsb
adc
fdivl
rorb
les
insl
sub
shl
jnp
add
dec
test
fwait
les
xchg
les
mov
lods
ds
loopne
and
pop
cmp
adc
das
dec
lret
mov
out
and
mov
sub
ss
call
rcll
fidivs
scas
xor
mov
mov
int3
fwait
bound
xor
dec
xor
dec
cmp
es
sbb
sbb
adc
movsl
add
push
push
lcall
push
daa
mov
fsubrl
loopne
cltd
ss
lods
adc
pop
xchg
ljmp
cmp
mov
jecxz
in
sub
mov
jle
jmp
lds
inc
jnp
movsl
pause
lret
cld
leave
sub
fsubl
lea
ss
pop
or
cmp
mov
push
cmp
push
pop
xchg
loope
or
xchg
jbe
push
insl
rorl
sar
xor
xor
in
dec
out
push
leave
fnstsw
xlat
push
cli
ud0
add
jnp
dec
mov
stos
mov
pop
add
push
mov
out
adc
add
push
outsb
imull
nop
imul
js
adc
hlt
js
sub
xor
xchg
mov
xchg
jae
jle
mov
sub
mov
dec
in
pop
shll
xlat
mov
xchg
arpl
xor
sub
add
inc
out
jmp
sub
aam
mov
loop
sbb
xlat
pop
mov
lods
pushf
sbb
stos
sbb
and
mul
add
sahf
pushf
insb
in
notl
call
mov
clc
sbb
sbb
lods
jnp
mov
jnp
mov
call
jg
pushf
inc
and
sbb
sbb
aas
adc
ret
lahf
xchg
mov
mov
std
inc
xor
stc
in
jp
loop
dec
out
out
mov
mov
mov
pop
cmp
pop
jmp
popa
das
int
mov
xor
ret
xor
movsb
stos
dec
rclb
sub
fsubp
dec
or
icebp
gs
dec
mov
pusha
cmpb
mov
push
adc
test
inc
or
sbb
push
sub
mov
cmp
jmp
out
pop
adc
mov
jp
lds
jns
jb,pt
add
mov
fdivrl
scas
pop
dec
into
repz
push
mov
jmp
ret
pxor
rcll
cs
sahf
mov
test
and
cmp
jmp
sti
aam
loope
shlb
push
gs
dec
fsubl
imul
orb
aam
mov
cmp
xor
ljmp
cmp
xlat
fisubl
mov
push
ret
outsb
xor
repnz
dec
arpl
mov
js
sbb
sbb
lcall
test
orl
mov
xchg
out
das
jno
psubd
mov
xchg
cmpsb
jmp
inc
adc
pop
popf
dec
pop
in
xchg
test
lret
sbb
das
push
sub
mov
mov
push
sahf
jmp
xor
int3
faddl
xchg
or
fwait
pop
adc
mov
add
or
ret
push
cmc
push
lea
push
outsl
stos
mov
adc
dec
xor
pop
push
lods
xlat
pop
repnz
mov
aaa
add
mov
jnp
fbstp
enter
push
es
pushf
fidivs
aaa
ds
dec
fsubrs
in
jnp
fisubs
stos
jnp
imul
shrl
movsl
sub
fs
jns
xor
add
cld
outsl
iret
in
cli
ficomps
cld
mov
mov
push
and
mov
stos
fcomps
aam
pop
and
ds
flds
sub
jp
pop
push
mov
test
pusha
xor
sbb
pop
call
or
sti
jl
cmc
out
cmp
push
inc
add
sub
push
dec
loope
sbb
push
xchg
lret
inc
cmpsb
in
push
stos
mov
push
cmc
cld
test
repnz
mov
rorl
ret
clc
cld
mov
mov
cmp
sub
aas
call
or
enter
jno
ret
add
inc
cmp
arpl
arpl
ficomps
inc
pusha
mov
rorb
lcall
jo
and
mov
mov
xchg
lods
or
jo
mov
imulb
dec
add
push
xchg
test
push
stc
idivl
loope
push
add
and
in
adc
xor
dec
bnd
xor
dec
out
rcll
or
dec
xchg
leave
pop
test
cmp
clc
stos
add
rorl
cmp
das
push
mov
lahf
lret
in
xlat
pop
xchg
xor
je
outsb
dec
mov
out
xor
add
loope
jo
das
dec
mov
jns
xlat
mov
sbb
xor
ret
loop
adc
into
lret
in
inc
or
sub
andl
nopl
popf
movsb
es
das
dec
push
mov
mov
call
inc
xor
movsb
mov
mov
ds
or
dec
push
xor
add
rcr
sti
out
invd
bound
pop
and
add
jno
xor
mov
enter
xchg
jl
out
int3
mov
adc
rclb
xor
mov
jo
fcmove
add
int
jno
shlb
sub
sbb
mov
sub
mov
es
mov
into
adc
clc
lahf
mov
xchg
sub
xchg
and
shlb
dec
mov
mov
sahf
and
jecxz
mov
pusha
imul
fcmovnbe
cmpsb
mov
xor
xchg
sub
je
insl
push
jg
add
fbstp
imul
jb
pop
fdivrl
dec
push
jb
jmp
cltd
cs
xor
cmpsb
or
push
loopne
mulb
and
mov
push
leave
sbb
clc
push
jns
pop
xor
dec
push
dec
outsb
and
inc
add
mov
cmp
mov
inc
or
adc
cmp
inc
or
pop
jns
lock
sbb
mov
lods
adc
pop
jmp
pop
into
push
mov
dec
push
dec
ret
sbb
sbb
push
cmp
mov
xor
cmp
cmp
mov
sbb
cwtl
dec
cld
aas
jmp
jns
je
bnd
sti
and
xlat
pop
adc
fwait
stos
inc
mov
outsl
mov
dec
imul
jo
movsl
cmp
xor
ljmp
sti
xchg
and
jl
ljmp
movsb
xchg
movsl
xor
je
dec
shlb
inc
inc
lock
pop
ja
inc
jp
jo
int
inc
xor
test
fs
dec
in
pop
movsb
jmp
mov
push
stos
or
lods
fs
cmp
xchg
pushl
pushf
sbb
outsl
aaa
popf
mov
aad
fisttpll
inc
lcall
loop
out
xchg
ljmp
xor
mov
ja
ja
dec
movsb
cmpsb
mov
xor
xchg
sub
and
mov
pop
popf
xor
test
dec
loope
mov
or
in
sub
mov
xchg
fsubs
paddusw
and
daa
je
jno
popf
pop
inc
iret
sub
jge
mov
jbe
dec
aas
into
addr16
loope
pop
cmpsb
push
sbb
sbb
out
repnz
aad
movsl
adc
dec
mov
insb
lret
inc
ret
pushl
sbb
stos
pop
jmp
ret
pop
mov
pop
movl
cltd
push
dec
xchg
fwait
shl
frstor
jno
mov
push
sbb
test
roll
sub
orl
xor
lahf
adc
ss
inc
xchg
imul
pop
add
pushf
inc
jp
inc
jmp
push
xor
pusha
push
xchg
lahf
mov
in
pop
iret
or
lcall
icebp
sub
jge
adc
pop
and
cmp
xor
pop
icebp
rclb
ficoms
xor
sbb
inc
xchg
adc
sbb
lret
lds
inc
mov
xchg
sub
push
mov
rep
xchg
sbb
test
ja
adc
rclb
mov
push
fisttpll
mov
mov
lret
fisubrs
xor
pop
int
mov
shl
andl
loop
push
lret
and
test
xchg
jmp
or
xchg
jp
inc
mov
cmp
sub
aam
and
out
std
rorl
push
push
jae
sbb
add
mov
mov
js
insl
sub
test
call
jmp
pop
dec
ret
mov
in
and
inc
sbb
repz
inc
adc
outsl
or
pop
and
xor
mov
inc
cs
rcrb
xor
sbb
aam
in
jle
ret
aaa
stos
xor
fnstsw
rcrl
or
dec
sbb
jg
je
pusha
mov
jp
inc
comiss
mov
push
aas
sub
fucomp
loop
iret
mov
fld
fmul
sti
in
cwtl
cs
mov
push
fldcw
xchg
xchg
add
sub
dec
fmul
or
xlat
repz
inc
cld
je
lds
aam
pop
in
imul
mov
inc
xlat
rcrb
mov
das
push
notb
add
jb
sti
in
pop
add
cmpsl
push
or
dec
dec
insl
or
lods
shrb
fcmovbe
sbb
jecxz
out
sub
fldcw
cmp
mov
sti
aaa
out
xchg
sub
cmp
sti
outsb
stc
loopne
xchg
xchg
lods
test
popa
lods
fwait
push
mov
xor
nop
push
sti
sbb
lea
add
mov
jns,pn
cmp
dec
push
jns
inc
jecxz
rorl
xlat
scas
outsl
in
xor
loopne
jae
in
dec
packsswb
shrb
cmp
sub
stos
or
sub
jno
divb
in
sub
dec
jae
mov
mov
sbb
jge
movsl
push
bound
je
cld
cmp
xchg
mov
cltd
push
fdivl
sahf
adc
bound
push
je
push
dec
mov
cmp
cmc
add
jnp
in
and
fstps
scas
mov
test
imul
jne
pop
outsl
mov
jge
jle
sub
sbb
pop
mov
cwtl
push
push
push
sti
aad
cmp
mov
xchg
insl
and
push
rcl
sti
data16
cmpsb
in
repz
sub
cld
cmpsl
xor
pop
in
and
lret
mov
ret
xchg
andl
sub
jecxz
dec
and
icebp
movsl
mov
shr
and
aaa
jg
push
push
mov
mov
into
and
icebp
mov
mov
arpl
mov
jecxz
hlt
inc
test
out
add
mov
js
xor
popl
or
aam
xchg
aam
inc
sbb
push
mov
out
xchg
aaa
mov
ljmp
inc
lock
mov
sbb
shll
scas
jle
mov
jo
loope
sbb
xchg
lcall
xchg
popl
jns
mov
notb
int
in
test
adc
leave
hlt
adc
and
stc
and
inc
jmp
pop
orb
or
pop
push
sub
jne
mov
sti
sar
ret
and
mov
mov
rorb
aad
les
fisubrs
push
push
cmp
mov
xchg
ds
cmc
es
insb
cltd
lock
and
add
pushf
jae
mov
sbb
mov
inc
shll
cmc
data16
inc
cmc
loopne
clc
jecxz
jmp
stos
repz
jno
test
aas
mov
ret
cli
aaa
roll
jecxz
sbb
add
pusha
push
xor
repz
xorb
fnstsw
sub
cmp
out
cs
adc
push
rcrb
sub
add
or
fisttpll
cmp
test
xchg
repz
adc
sub
xchg
les
pop
and
mov
rol
cmp
call
cmc
fcompl
jp
pop
pop
mov
pop
inc
xorb
sarb
shrb
ljmp
adcl
adc
xchg
mov
jnp
xor
jp
out
push
not
xchg
fcomps
jmp
mov
fstp
mov
adc
int
and
xor
xlat
cmp
sbb
leave
mov
loop
popf
and
push
mov
push
clc
sbb
movsb
dec
mov
movq
test
in
push
out
andl
dec
dec
test
jnp
push
je
insl
sbb
cmovbe
jle
xor
xchg
mov
in
hlt
dec
out
push
mov
iret
lret
imul
cli
imul
xlat
mov
jge
jg
orb
xor
push
lcall
and
add
push
pushf
stos
mov
and
ljmp
mov
test
or
mov
int3
fdivr
stc
xor
mov
popa
insb
fwait
cmpsl
lock
mov
test
stos
push
xor
aaa
sahf
je
sbb
lds
jg
jo
jmp
adc
mov
or
cmp
std
xor
mov
loope
bound
shrb
dec
imul
movb
aaa
dec
add
jns
setge
repz
xchg
dec
mov
loopne
call
xlat
cs
js
mov
pop
enter
jae
int3
mov
mov
je
mov
stos
int3
sahf
negl
aaa
pop
aam
xor
sbb
lahf
jb
rcll
shrb
insb
xlat
cmp
push
add
std
xchg
dec
orb
inc
out
add
jne
aas
xchg
aad
push
xchg
in
push
and
push
das
enter
sbb
imul
jae
movsb
push
or
pop
jnp
out
rorl
daa
cmp
push
push
sbb
lea
lcall
pop
dec
iret
and
sbb
shll
or
fwait
push
test
mov
mov
ds
pop
xchg
rcrb
dec
leave
imull
and
adc
pop
mov
pusha
popf
gs
push
ja
mov
les
xor
mov
jmp
nop
arpl
jne
push
loop
sub
adc
or
adcl
xor
xchg
mov
pop
testb
lahf
test
mov
out
mov
jle
lods
cmp
into
mov
test
mov
enter
je
xor
mov
cmpsl
mov
dec
aas
fs
psraw
inc
jmp
jp
push
adc
sub
cli
dec
mov
test
jge
ds
stos
lock
adc
mov
test
mov
das
movsb
sbb
adc
push
hlt
push
inc
test
push
add
jmp
sbb
xor
mov
aas
add
cmp
pop
les
dec
stc
cwtl
adc
adc
push
and
ret
xchg
sub
sahf
jmp
in
jne
push
jmp
out
int
push
mov
push
shl
test
xor
enter
sub
xlat
pushf
jb
scas
dec
ret
sub
cld
push
mov
mov
push
or
cwtl
adc
lds
fwait
or
xor
adc
mov
mov
add
mov
cmp
inc
clc
jp
mov
ret
call
pusha
ds
fildl
mov
jae
sti
push
int
add
jnp
cmp
fbstp
insl
adc
test
cltd
test
cmpsl
push
adc
pop
pop
jmp
jae
push
sub
rolb
test
inc
mov
les
add
out
and
sbb
inc
lret
hlt
or
mov
and
xchg
adc
incl
imul
pop
sub
mov
sub
cmp
cltd
xchg
cld
pop
loop
fistps
mov
inc
pushf
pop
ret
and
add
sbb
cmp
sub
ds
jmp
in
adc
data16
sbb
mov
push
jne
dec
and
mov
sub
divl
push
mov
jmp
pop
ljmp
lock
mov
and
or
lret
pop
add
sahf
add
cmp
sub
inc
fld
xor
fsts
loop
adc
aam
jle
mov
dec
mov
add
dec
jno
mov
cwtl
mov
sbb
lcall
aam
mov
jmp
adc
mov
cld
rcr
adc
and
mov
lcall
push
cli
cmpsb
push
sti
movsb
sbb
dec
or
adc
ss
int3
mov
mov
stos
add
mov
mov
cmp
mov
xchg
lret
std
push
std
shll
jae
rcrl
adc
fwait
mov
mov
adc
xchg
mulb
xchg
fidivrl
mov
mov
test
push
rol
jle
jae
jp
cwtl
ss
clc
scas
gs
pop
mov
addb
jns,pt
xor
test
sbb
pop
push
nop
fs
adcl
adc
mov
lea
je
scas
cmc
in
test
and
push
inc
std
daa
xchg
push
sahf
lds
scas
dec
push
dec
and
fdiv
roll
or
adc
sub
test
jg
test
inc
cwtl
sbbl
dec
adc
aaa
out
shrl
mov
dec
imul
mul
sub
lods
pop
out
pop
inc
pop
push
ja
mov
dec
dec
insb
push
pusha
mov
jbe
lret
and
lods
and
mov
pushl
clc
pop
xor
outsl
mov
fwait
call
push
sub
inc
jno
sub
arpl
stos
leave
leave
clc
and
out
lahf
sub
push
out
sub
jecxz
pop
pop
in
xchg
push
mov
daa
xor
cmp
xchg
popf
lea
ds
repz
sbb
dec
cltd
fistl
or
cmpsw
test
lcall
dec
in
insb
xchg
fwait
dec
out
andl
mov
mov
mov
push
pop
xor
aam
mov
sbbl
and
mov
mov
jmp
imul
ds
shl
cmp
mov
push
xlat
sub
or
imul
fnstcw
mov
fwait
dec
jne
clc
in
cmp
aad
sub
shll
shrb
ret
in
adc
xchg
lahf
adc
push
pop
jb
jo
push
repz
adc
jecxz
int
je
jmp
push
popf
in
mul
or
add
mov
push
pop
dec
fldl
or
cmp
or
and
xor
into
push
mov
cs
add
add
into
out
and
adc
jle
add
mov
cmp
out
jno
push
or
sub
mov
sub
mov
xchg
push
lock
outsb
xor
rorb
add
pop
rcl
adc
mov
push
dec
lds
cmpsl
in
stc
pop
sbb
neg
mov
out
std
in
mov
cmp
xor
inc
ret
adcl
push
sarb
mov
pop
into
je
mov
popf
dec
andb
push
mov
and
inc
mov
mov
jne
lods
inc
add
mov
mov
lret
stc
xchg
jbe
adc
xlat
int
xchg
arpl
mov
in
mov
lcall
inc
xchg
adc
xchg
push
and
fwait
mov
mov
and
pop
rcrl
mov
lret
adc
jmp
arpl
mov
jbe
cmpb
in
fldenv
cmp
jae
and
sarb
mov
mov
jne
sahf
cmp
fbstp
sub
cmp
add
aad
mov
stos
mov
ret
lods
clc
es
mov
dec
and
stos
adc
aad
inc
movsl
lods
and
sub
daa
xchg
stc
in
xlat
xor
sub
popa
je
outsb
sbb
mov
jns
mov
mov
xchg
sub
pop
stc
cmp
push
dec
ja,pt
icebp
xchg
movsl
push
or
push
push
out
pop
push
ja
or
shl
and
push
gs
pop
fwait
inc
test
xchg
out
arpl
push
pop
fists
lds
rorb
jle
int3
mov
loope
insl
fs
jecxz
lods
hlt
je
jge
jle
sbb
stos
adcb
iret
stos
jg
aaa
mov
pop
out
mov
jecxz
mov
insb
std
sbb
fs
in
imul
clc
test
mov
or
xchg
xlat
bound
ljmp
shl
test
add
int3
pop
dec
int3
lods
mov
dec
daa
mov
add
cltd
jmp
push
mov
int3
shrb
loopne
jecxz
xchg
pop
cmc
xchg
mov
loopne
nop
shll
and
in
ror
or
test
shl
jmp
adc
aad
les
xor
sub
jne
cmp
xchg
or
adc
insb
or
mov
aam
fdivs
fnstsw
sub
lcall
jmp
ret
dec
pop
data16
aas
das
xchg
clc
sub
fadd
das
xchg
jno
aaa
ja
or
test
push
in
stos
xchg
dec
jp
icebp
inc
push
cmc
inc
mov
pop
mov
scas
push
pop
mov
aam
push
pop
popa
shrl
cmp
lret
fidivrl
add
jb
bound
aad
faddl
lds
js
jg
aaa
adc
imul
into
je
call
push
xchg
sarb
les
test
repnz
xchg
icebp
sub
ss
leave
jecxz
movsl
jp
leave
dec
out
stos
js
push
xchg
enter
jne
aam
in
sub
adc
xlat
mov
adc
stos
sub
dec
orb
pop
inc
and
dec
repnz
mov
insb
sti
ud0
xor
testl
test
push
adc
test
mov
adc
push
xchg
pop
shlb
jo
addl
mov
push
cmp
fidivrs
add
add
pop
stc
es
sub
repnz
dec
or
rorb
shr
loope
les
movsb
call
jae
clc
adc
xor
cmp
xor
scas
jle
inc
adc
adc
dec
scas
iret
popf
test
sub
xor
fcompl
testb
mov
repz
arpl
gs
dec
push
imul
icebp
push
int
xchg
dec
gs
pusha
add
xor
or
and
filds
xchg
xchg
dec
adc
stc
push
or
pop
adc
idivb
inc
fldenv
sarl
fs
xchg
stos
xor
jne
cmc
cltd
lret
insb
pop
push
sbb
repnz
xor
inc
jecxz
xchg
jo
mov
xchg
fdivp
ficomps
cmpsl
xchg
inc
dec
mov
sbbb
push
cmp
lea
inc
sbb
enter
mov
or
cmc
rorl
iret
in
iret
xchg
cmp
sub
fidivs
push
filds
dec
out
call
shll
imul
and
ja
iret
mov
adc
icebp
jo
push
call
scas
fwait
int3
and
pop
cmpsb
fsubs
dec
sahf
cwtl
mov
or
lcall
adc
add
mov
mov
fidivs
arpl
sub
xchg
lahf
xor
dec
shr
dec
repnz
loopne
pop
cwtl
pusha
fwait
mov
daa
loope
clc
jecxz
mov
adc
enter
jb
sbb
ret
lock
dec
xor
and
add
fs
mov
sub
mov
insl
insb
cmp
xchg
lds
adc
insb
cmpb
add
or
gs
aaa
push
mov
mov
jmp
mov
cltd
imul
enter
test
sarb
ljmp
push
loope
or
mov
inc
leave
sahf
pop
ljmp
sub
xor
push
out
xchg
ret
sub
dec
push
mov
mov
in
mov
data16
adc
insb
cmp
divb
outsl
and
lcall
or
xor
cmp
ficompl
loope
es
add
out
jnp
and
rcll
test
cmp
mov
and
rorl
aas
into
insb
out
jl
pushf
dec
cmpl
je
jge
nop
pushf
jg
stos
sbb
daa
push
xor
gs
jmp
or
push
mov
shrl
cwtl
or
call
std
idivb
cmp
ljmp
or
mov
test
loopne
pop
call
jae
icebp
pusha
push
or
out
or
pusha
inc
lea
rorl
js
mov
inc
call
addr16
mov
rcrb
xchg
pusha
fsubs
loopne
push
pop
aam
mov
inc
mov
mov
je
ret
fisubrl
mov
data16
sbb
sub
mov
imul
pop
add
movsl
inc
sarl
inc
pusha
aam
dec
mov
and
inc
in
inc
pop
push
addb
popa
daa
inc
pop
push
mov
loopne
and
lock
bound
mov
dec
or
cmp
ds
cmp
and
jae
xor
inc
jae
adc
lret
add
loopne
mov
cmpsl
mov
dec
inc
dec
push
in
add
pusha
push
cvtpi2ps
push
shrl
mov
imul
in
clc
mov
sub
std
mov
outsb
xor
sbb
mov
loop
mov
in
insl
fistl
cmp
scas
cmp
scas
adc
xchg
aam
xorb
and
jbe
leave
pop
leave
lahf
ror
sbb
stos
scas
cmp
int3
cwtl
fsubrl
movsb
mov
jl
out
cltd
adc
insb
mov
pop
stos
dec
outsb
dec
lret
out
cmpsb
mov
jb
xor
mov
call
mov
dec
ds
jp
inc
call
xor
jne
add
push
loope
xor
cmp
and
popf
arpl
aam
subb
jno
or
fimull
fnstsw
sub
push
sub
lcall
test
mov
jno
repnz
loop
sbb
sub
add
cmpsl
daa
push
out
mov
lahf
mov
sbb
pop
lods
sub
xor
jg
stc
test
movsb
ret
pop
std
movsb
fiaddl
xchg
das
push
push
mov
std
scas
andl
xchg
ljmp
shlb
shr
stc
js
dec
out
dec
mov
pop
adc
hlt
imul
cld
inc
ja
nopl
mov
pop
xor
test
imul
cli
imul
mov
loopne
push
mov
cmpsl
inc
cmp
stos
inc
cmp
mov
push
xor
in
mov
cmpsl
iret
aaa
xchg
in
ret
lcall
mov
iret
stos
sub
enter
stos
imul
xchg
data16
in
xchg
fildl
jbe
fldt
or
adc
adc
fldt
push
dec
imul
imul
clc
jp
bound
xor
lret
mov
jl
pop
jl
mov
xchg
adc
xor
adc
adc
ret
mov
jmp
mov
mov
aad
sbb
mov
imul
mov
cld
aas
mov
scas
dec
in
sbb
mov
out
push
pop
scas
add
aad
les
repz
in
je
mov
fs
add
mov
sub
aaa
adc
rorb
jg
cmc
adc
inc
or
loope
dec
mov
mov
sbb
jnp
add
shll
mov
out
sbb
icebp
add
push
loope
ja
mov
jb
add
mov
fdivs
mov
stos
nop
lret
pop
xchg
insl
pop
mov
or
adc
jge
cmpsb
sbb
xor
fwait
sub
pop
call
movsb
mov
ret
sub
xorl
leave
fidivrl
fprem1
ja
and
mov
stos
mov
xchg
out
dec
movsl
mov
sbb
add
cmpsb
out
mov
fildl
shll
or
rclb
in
xlat
aad
movsb
and
mov
lock
cwtl
sbb
imul
jno
ss
adc
jbe
cmp
mov
subl
cmovbe
or
push
dec
jae
or
das
fwait
mov
lret
xor
pusha
xchg
hlt
mov
push
subl
cmp
jecxz
xor
scas
pop
jle
je
push
adcb
inc
xchg
fs
rep
sub
adc
push
lea
dec
loopne
sub
popa
mov
mov
shrb
lds
pop
sub
xchg
rorb
addr16
pushf
push
dec
mov
pop
je,pt
dec
or
aam
ret
repnz
cmp
iret
lea
pop
jno
push
divl
cmpsb
jne
sahf
push
lock
xchg
js
sub
push
sub
xchg
mov
and
mov
cld
divb
sbb
in
mov
mov
cmpsb
lahf
cmp
mov
fisttpl
mov
sahf
sbb
mov
jp
rep
in
pop
push
jl
xor
mov
and
pop
xchg
lahf
pop
dec
add
mov
fsubs
push
push
bound
jae
dec
dec
loope
dec
aas
dec
mov
lret
ss
into
pop
cwtl
lods
jecxz
rol
push
cmpsb
arpl
sub
cmp
xchg
mov
es
inc
jb
cmp
enter
cld
xor
mov
test
inc
sti
xchg
xchg
mov
add
loop
mov
mov
popa
imul
push
ja
adc
cmp
and
sub
lcall
ss
loope
stos
and
imul
or
mov
subl
jo
stos
dec
les
popa
push
dec
xchg
xchg
out
mov
dec
add
mov
sub
dec
test
dec
loope
sahf
push
and
rol
mov
je
ret
pop
adc
sub
add
xor
loope
movsb
push
lret
push
mov
sti
test
xor
ss
and
cmpsl
pop
in
inc
cmc
lds
add
inc
outsb
or
and
cmp
add
hlt
push
mov
and
idivb
mov
sahf
enter
fiadds
dec
inc
ss
int3
subl
lock
dec
fnstsw
xchg
jae
shlb
rorb
mov
dec
mov
mov
jnp
imul
test
fidivrs
out
repnz
mov
sub
mov
cmp
mov
stos
adc
dec
push
xchg
add
sbb
lret
xchg
sti
sub
subl
push
add
xor
orb
lds
fdivrl
xchg
jnp
aas
sub
mov
out
iret
xchg
out
jns
popl
add
ljmp
sarl
sbb
scas
mov
mov
call
aad
arpl
push
pop
inc
movsl
in
test
mov
and
cltd
xchg
outsb
repnz
jo
jb
sbb
outsb
xlat
or
lret
pop
add
in
cmpsb
rcrb
adc
sub
push
imul
inc
push
xor
into
sti
movsb
mov
dec
fisttpl
addr16
mov
incl
cmpsb
dec
es
mov
inc
sahf
adc
bound
and
fimull
aad
push
jnp
dec
sub
out
mov
popa
sub
jo
lods
mov
add
push
xchg
loopne
or
les
aas
pop
sub
out
and
jmp
rorl
sbb
push
push
inc
outsl
daa
mov
or
jnp
push
mov
inc
in
inc
lret
stc
adc
sub
mov
popa
sarl
jmp
xor
xchg
in
add
out
and
les
inc
push
addr16
inc
cmp
pop
hlt
dec
js
push
pop
push
jg
shrb
or
out
fsubrs
insb
fcomps
adc
adc
lcall
stos
add
push
cmc
clc
mov
out
aaa
xchg
dec
push
fstpl
add
sub
mov
aam
and
xor
inc
push
enter
loope
or
aad
test
mulb
shr
mov
iret
insb
stos
adc
sub
inc
push
jecxz
jg
das
hlt
lds
mov
cmpsb
pop
movaps
in
sub
pop
mov
xchg
es
imul
or
push
call
rorb
shl
jae
call
dec
imul
addr16
pop
jmp
repz
iret
sahf
jle
and
bound
cmc
mov
lcall
cltd
in
adc
and
stos
aam
cwtl
sbb
lock
mov
pop
mov
sub
aas
add
mov
pop
cmpsb
daa
ss
sub
insl
das
hlt
jbe
std
pop
pop
mov
bsf
test
xchg
subl
push
inc
lock
loop
icebp
jmp
dec
insb
mov
mov
mov
push
std
enter
sbb
lret
imul
in
push
int
jne
and
inc
incb
fistpl
cmp
jp
addb
xchg
or
sub
cmp
loopne
fiadds
cmpsl
mov
pop
out
jae
sbb
mov
call
stos
fmul
cld
xor
clc
lret
jecxz
popa
sbb
mov
stc
les
pop
jmp
pushl
clc
loop
insl
adc
xchg
push
daa
aam
mov
mov
xchg
mov
add
lds
and
mov
or
inc
xchg
pushf
loop
mov
inc
pop
imul
mov
xchg
mov
insb
fxch
push
mov
push
je
push
xchg
sbb
jno
dec
xchg
cld
cmpsb
imul
mov
lahf
leave
mov
int
out
inc
ret
repnz
mov
jnp
in
jne
pushf
js
movsl
ja
arpl
adc
mov
cmp
in
pop
jo
xor
push
jns
movsl
faddl
aad
popa
test
dec
aam
mov
stc
ds
lcall
and
sbb
and
fs
sarl
xchg
xor
xor
test
mov
sti
xchg
push
sub
push
lock
xor
iret
xchg
outsb
push
mov
mov
leave
and
out
jae
jno
pop
imulb
or
mov
lcall
lahf
mov
sub
and
stc
cwtl
mov
nop
inc
sbb
push
inc
testl
push
pop
add
insb
or
mov
aad
jl
cmpsl
fwait
mov
jmp
cmp
mov
adc
out
loopne
mov
push
mov
cmpsl
add
ja
call
das
mov
mov
call
pop
sbb
fisttpll
and
test
sub
lods
lahf
addr16
rcrl
mov
and
inc
dec
jmp
dec
leave
in
lret
sti
in
sbb
iret
mov
xorb
stc
inc
adcl
jbe
test
fwait
pop
fwait
cltd
xor
or
mov
cmp
sbb
mov
or
xor
add
mov
inc
adc
adc
shlb
popl
sbb
sbb
add
pop
push
or
cmp
idiv
cmp
cmpsl
adc
add
cwtl
adc
out
jp
fs
fmul
jmp
ds
nop
test
test
mov
sbb
inc
aad
lret
pop
fsub
pop
mov
push
loopew
xchg
add
fldcw
sbb
sbb
sbb
subl
sub
sbb
xchg
push
pusha
ret
outsl
das
pop
pop
lahf
pop
push
pop
or
subl
into
adc
daa
cld
inc
cld
mov
mov
jo
enter
hlt
jno
mov
test
dec
adcl
mov
outsb
scas
mov
aad
ja
and
mov
push
js
pop
movsb
mov
jne
cltd
cld
fsubl
cld
cmp
push
std
int3
inc
push
fistl
add
or
push
push
cmpsl
jp
lock
sbb
mov
ja
jmp
cmp
cmp
inc
mov
ja
pop
arpl
inc
sub
das
movsl
insl
xchg
add
int
in
outsb
or
test
stc
adc
mov
clc
and
mov
dec
movsl
push
pop
inc
dec
cmp
inc
and
and
js
mov
dec
mov
and
cmp
push
js
jb
mov
rcr
lahf
pop
mov
lea
dec
dec
popa
dec
push
cmpsb
hlt
push
or
xor
addr16
add
das
mov
sub
outsb
shrl
push
in
sub
jge
xor
loope
movsb
and
sahf
pop
in
pop
out
ror
sub
test
xor
push
fwait
dec
lods
insl
cwtl
shll
ss
mull
lret
jmp
adc
mov
pop
push
lret
notb
inc
stc
int3
fisubl
dec
lea
lret
in
pop
mov
jmp
pop
por
cmp
hlt
jge
add
ds
mov
push
ss
js
xchg
das
mov
lahf
ljmp
mov
or
mov
movsb
aam
add
pop
or
or
mov
fucomip
nop
arpl
int3
adc
cmpsb
arpl
dec
iret
sbb
push
adc
mov
xchg
pusha
mov
jbe
iret
gs
adc
in
xchg
pusha
leave
das
pushf
pop
flds
xchg
mov
loope
cli
xchg
add
cmp
imul
test
scas
popa
inc
shll
stos
mov
jge
and
push
daa
jbe
xchg
adc
sbb
cmpsb
jo
test
inc
test
push
daa
xchg
int
enter
pop
gs
dec
fdivrl
cmp
dec
push
leave
xchg
push
inc
and
push
cld
cmp
pop
xchg
xor
fists
xchg
sbb
call
sub
dec
sbb
cli
addl
pop
mov
jno
or
dec
mov
jmp
mov
inc
sbb
lea
mov
sbb
adc
sahf
mov
aad
jp
in
jb
clc
mov
shlb
hlt
ret
cmp
sub
jmp
mov
aas
sbb
gs
dec
pop
les
insb
repnz
mov
cmpsl
mov
int
pop
sub
ds
addb
fisttpl
lret
ficomps
or
sub
mov
or
sahf
cld
inc
jmp
fstps
pusha
sarl
cmp
arpl
stos
movsl
or
push
mov
mov
iret
ficoms
push
lea
jmp
lea
out
add
push
pop
sub
push
mov
mov
rcll
or
fimuls
pop
repz
sti
pop
mov
mov
adc
inc
dec
mov
cmp
adc
jg
fdivr
or
mov
loopne
inc
ja
pusha
cs
jae
imul
pop
call
xchg
aas
sahf
in
or
popl
imul
mov
mov
cmpl
adc
push
inc
icebp
dec
out
inc
mov
and
pop
mov
out
mov
jg
push
outsb
aam
and
imul
dec
sbb
xor
push
in
mov
mov
pop
xorl
mov
test
psubusw
addr16
add
adc
xor
adc
shll
cs
sub
subb
mov
loopne
sub
movsb
leave
cmp
push
sbb
imul
lea
int3
out
cmp
mov
cmp
ficoms
inc
jp
dec
stos
dec
lea
sbb
mov
fwait
and
sub
cmp
pop
jno
fcmovne
call
into
mov
addr16
pop
and
cmp
add
clc
es
cmp
adc
les
dec
scas
and
sbbl
pop
daa
ss
dec
jp
leave
mov
lods
out
jp
dec
cmc
cmp
fldenv
into
xor
xchg
push
xlat
daa
push
mov
push
mov
adc
stos
scas
sbb
xlat
jmp
out
cmp
xlat
jl
cli
enter
out
xor
sbbb
add
insl
scas
xchg
or
jge
enter
mov
ss
xor
mov
jnp
hlt
outsb
mov
addr16
cmp
dec
pop
xorl
mov
fcomp
lods
push
stc
sub
out
fdivrs
xor
mov
lods
fmuls
out
shl
mov
adc
fdivs
pop
js
mov
sahf
call
insl
xor
stc
bnd
loopne
push
clc
aas
pop
push
test
pop
popf
and
sub
daa
mov
hlt
in
scas
xor
jae
daa
std
mov
mov
dec
pop
lock
rclb
cld
dec
ja
mov
jl
add
and
cs
test
mov
lret
and
repnz
cmpb
mov
push
mov
repnz
mov
push
add
out
jmp
pop
scas
scas
in
pop
bound
std
sbb
int3
repnz
jmp
pop
jbe
gs
aas
pop
mov
lock
sbb
adc
and
sbb
mov
test
push
and
sti
iret
pusha
xchg
push
inc
jmp
jmp
push
stos
in
das
clc
cmp
sub
xchg
mov
and
leave
push
adc
call
xor
jo
ret
stos
xchg
sbb
xchg
into
into
popa
pop
push
sub
mov
mov
out
scas
or
xor
push
xchg
jns
add
fisubl
aas
rcr
loope
lret
dec
cmp
mov
enter
outsb
dec
dec
rcrb
orb
pop
insl
std
cmp
mov
es
add
sti
pop
jge
push
lcall
sub
pop
add
inc
sub
inc
cmc
fdivrs
scas
lds
out
jb
add
shrl
mov
gs
sahf
jne
xchg
jmp
cmpsl
mov
cmpsl
pop
cmp
fucomip
push
inc
das
dec
adc
frstor
jbe
pop
arpl
iret
pop
rcrb
stc
dec
mov
xchg
or
cs
test
xchg
je
push
ret
xchg
xor
mov
into
fldenv
inc
icebp
insl
adc
shll
mov
jbe
xchg
sahf
insb
push
pop
mov
cli
shl
lea
or
cwtl
cmp
testl
adc
or
mov
test
fs
mov
aad
sbb
stc
pusha
cmp
push
ljmp
out
dec
inc
mov
idivb
and
movsl
pop
add
cwtl
stos
arpl
jl
adc
adc
faddl
aaa
inc
cld
in
add
dec
int
cmp
xor
fsubs
sub
test
dec
cld
pop
movsl
out
rcrb
and
lods
lcall
xor
popa
mov
iret
into
add
inc
lcall
fsubrl
imul
hlt
xchg
cltd
imul
and
xor
jp
ror
mov
push
mov
pushf
daa
movsb
inc
mov
jnp
mov
test
inc
pop
pop
jo
in
inc
fisubrl
cli
or
add
sbb
stos
stc
out
outsb
dec
jno
fs
cmpsb
mov
dec
into
push
pop
push
xchg
xor
cmp
in
xchg
loope
repnz
clc
and
jno
incb
xchg
cwtl
paddb
je
cmp
out
mov
jbe
addr16
or
movsb
dec
push
scas
fs
mov
std
push
outsl
mov
cmp
shr
movsl
fsubrl
sbbb
mov
xchg
sbb
lea
in
movsb
adc
and
test
pop
repz
rorb
jne
add
test
xchg
ljmp
mov
test
call
dec
popa
movsl
xchg
in
mov
dec
mov
pop
dec
test
lock
mov
mov
lds
push
cltd
out
cs
adc
jo
lods
repz
rcl
push
cltd
fistpl
lds
mov
pop
jl
fs
pop
inc
addr16
xchg
xor
push
push
ss
imul
mov
mov
jbe
mov
jns
ret
jg
push
jnp
cmp
std
cmc
shlb
movsb
xchg
xchg
dec
data16
cmp
aad
xor
test
cmp
iret
cwtl
call
daa
inc
insl
jns
arpl
movsl
sub
outsl
rcl
je
ret
les
mov
or
aaa
mov
gs
shll
push
mov
mov
ljmp
incb
js
enter
jl
int3
xor
subl
or
and
nop
stc
xchg
int
addr16
adc
cs
mov
cli
imul
mov
icebp
add
push
or
fbld
ds
outsl
cli
dec
test
aaa
lods
mov
jmp
imul
mov
and
cmpsl
insl
lahf
xorl
aas
mov
das
pop
test
cld
cmc
xor
push
outsb
sti
sbb
cmpsl
mov
and
ds
mov
ret
lods
mov
notb
stos
xchg
pop
and
or
jecxz
fwait
lods
fmull
scas
insb
jge
ja
push
push
jp
cmp
mov
mov
ret
or
xor
repz
aas
lods
push
cltd
fs
inc
jle
movsb
cmp
mov
out
frstor
xchg
es
cs
push
rcrl
aam
jno
cmp
adc
inc
scas
shll
pandn
dec
mov
fstp
or
icebp
mov
mov
stos
outsb
ret
xchg
inc
pop
pushf
insl
insb
aad
rep
push
cmp
jp
jnp
dec
sub
mov
ret
js
stos
shll
dec
pop
or
pop
add
cmpb
and
xchg
cs
add
fbstp
aad
out
popa
mov
mov
sarl
test
push
enter
sahf
test
popa
aaa
or
jp
mov
mov
ja
push
das
jb
pop
pop
xor
sub
cmc
nop
cmp
sbb
loopne
push
lods
xchg
fidivrl
inc
js
jg
out
out
jbe
popa
pop
ljmp
std
daa
jp
push
out
or
mov
or
test
cltd
sbb
push
mov
mov
jp
loop
jge
fstpt
fdivs
xchg
push
movnti
fucomi
fiadds
jbe
push
mov
jne
jns
mov
test
dec
xorb
mov
outsl
sub
cld
mov
sbb
fsubl
je
cmp
fstl
sbb
imulb
das
das
aaa
xchg
stos
js
into
pop
cmp
mov
push
icebp
pop
lods
inc
adc
push
addr16
or
xor
push
pop
lock
sbb
clc
in
and
sarl
fidivrl
lds
imul
data16
jno
out
aam
popa
lret
in
mov
inc
jmp
loope
mov
fistpl
pop
and
lret
cmp
xor
mov
addb
jo
gs
popf
mov
lret
push
mov
adc
pop
popa
cli
lcall
add
sbb
add
shr
jne
fidivs
shll
int
mov
or
lds
cmpsl
or
xchg
add
inc
shll
dec
ljmp
mov
mov
xor
mov
sub
jg
sub
inc
dec
xlat
cltd
jle
jo
ds
icebp
fisubs
cs
mov
movsb
lods
imul
std
and
xchg
loop
mov
adc
aam
inc
cmp
ss
test
mov
sbb
call
ret
lcall
std
lret
imull
pushf
add
mov
sub
mov
xor
and
push
add
sub
add
call
out
xchg
mov
pop
int
bound
cmp
push
in
mov
shl
lahf
push
subl
mov
sbb
iret
xorl
insb
in
pop
out
dec
ret
repnz
test
into
sub
mov
enter
imul
push
add
aas
das
adc
loopne
insl
int
mov
mov
pop
pop
leave
sahf
adc
sbb
aam
loopne
jl
sub
jmp
xchg
clc
iret
aad
mov
imul
outsl
xlat
mov
inc
hlt
int3
rclb
bound
psrld
call
js
ss
dec
sbb
int3
adc
sub
repnz
hlt
mov
cli
sbbl
dec
jg
data16
adc
outsb
movsl
push
loop
rclb
sbb
pop
stos
sub
xor
push
jl
cmp
add
inc
mov
mov
adc
test
shlb
cmp
or
inc
inc
mov
sub
xor
das
outsb
inc
bound
pop
incb
sbb
pop
shll
shlb
xchg
sahf
xchg
jmp
bound
mov
into
add
push
int
inc
cmp
out
and
xor
or
popf
xor
mov
jge
jns
cmp
dec
pop
aaa
mov
pusha
jnp
pop
jl
cltd
add
lods
mov
daa
mov
out
push
incb
add
cmp
loope
scas
sarl
mov
lds
xchg
je
adc
dec
fs
out
add
sbb
andl
lret
xor
sbb
jge
jp
out
mov
out
aas
or
cwtl
lret
hlt
inc
inc
xor
out
adc
pop
xchg
add
es
scas
xchg
into
sbb
dec
mov
mov
in
mov
jne
xchg
jmp
mov
sarb
adc
push
cmp
ljmp
ret
push
shll
mov
mov
inc
mov
adc
jge
in
aad
mov
mov
cmc
repz
das
aas
or
adc
mov
mov
sti
in
rcrb
decb
cmp
xchg
lcall
mov
or
mov
mov
iret
jg
or
cld
shl
cmc
cli
hlt
sarb
mov
stos
into
fs
dec
sar
xor
or
jle
xor
push
inc
mov
xor
push
mov
insb
mov
pop
pushl
push
pop
fistpl
loopne
jmp
cmp
cmp
pusha
lret
mov
cli
test
sbb
and
cmpsb
jae
arpl
fidivs
push
cltd
dec
jmp
int3
mov
pusha
clc
bound
pcmpgtd
xor
xchg
aad
xchg
les
lret
ss
add
filds
lock
fdivr
and
out
xor
adc
pop
inc
adc
or
xorb
mov
test
int
xchg
push
in
clc
cltd
cmp
fs
mov
and
dec
xchg
test
fnstsw
lret
pop
mov
pop
push
cmp
into
enter
shlb
jnp
dec
add
inc
sbb
and
ror
stos
adc
mov
ficomps
inc
int
cwtl
out
int
testl
arpl
adc
adcl
icebp
mov
hlt
test
mov
into
xchg
and
rcr
stc
les
pop
std
sbb
lahf
mov
sub
inc
sti
sbb
inc
out
cmp
loop
or
mov
xor
push
mov
mov
lret
in
jno
pop
in
out
lods
cld
push
sub
je
sbb
and
cmp
sub
rcl
adc
add
fwait
scas
nop
das
push
lahf
jl
mov
xchg
jb
and
push
dec
push
js
fistpl
mov
movsb
ljmp
dec
cmp
rorb
cmp
adc
aad
addr16
inc
dec
mov
xchg
out
in
test
xor
repz
xchg
mov
xor
fstl
fadds
cld
cmpsl
insl
aas
inc
test
pop
lret
ffree
in
mov
fsubl
xchg
sbbl
hlt
mov
cmp
imul
adc
adc
mov
cli
adc
mov
xchg
pop
mov
lret
xor
mov
test
cmp
push
mov
xor
cwtl
xchg
push
mov
nop
xor
faddl
clc
or
sub
inc
mov
mov
addr16
mov
sbb
clc
outsl
pusha
int3
push
add
repnz
xchg
mov
pushl
push
xchg
not
rcrb
out
adc
ja
cmp
mov
bnd
mov
popf
mov
adc
push
loopne
stos
das
mov
mov
cld
fwait
sti
or
hlt
xchg
pop
dec
dec
push
push
pop
sbb
jnp
insb
xchg
repnz
add
mov
mov
in
out
lret
mov
xchg
jl
jmp
rcl
mov
cmpl
jg
leave
mov
jbe
or
and
xor
lea
mov
fildl
in
push
sbb
call
adc
out
je
pop
mov
push
sub
loop
push
pop
mov
mov
add
stc
testl
bound
insl
popa
mov
mov
mov
mov
gs
or
into
imul
pop
aad
and
inc
popa
push
cltd
js
xchg
leave
popa
cmova
sti
xchg
test
push
les
sub
scas
inc
dec
repnz
mov
adc
js
in
xchg
sti
mov
dec
adc
movsb
popf
popa
pop
outsl
cmc
xchg
lds
incl
and
fwait
aas
inc
and
sub
mov
mov
lock
stc
dec
hlt
sti
scas
loop
data16
add
adc
xor
push
push
sbb
xor
insb
imul
movsl
add
pop
mov
jno
mov
xor
mov
ss
shll
test
int3
jge
xchg
inc
pop
inc
test
test
mov
fiaddl
adc
leave
adc
fbld
lods
mov
scas
xchg
and
dec
cmp
adc
sub
notb
cltd
pop
or
scas
js
insl
adc
pop
das
mov
mov
les
call
push
mov
cld
sub
loop,pn
xlat
mov
xor
cli
das
cltd
push
adc
sbb
mov
repz
mov
mov
dec
mov
xor
jecxz
fsubrl
ret
fwait
shlb
lret
mov
xchg
mov
xchg
out
repnz
imul
xor
and
and
add
add
add
mov
xchg
jne
jbe
mov
mov
movsl
pop
and
sub
jl
mov
inc
fnstcw
push
xor
movsl
xor
nop
sarl
sub
and
mov
pop
cmp
lock
inc
js
mov
and
mov
mov
fwait
cltd
pop
or
lods
in
xor
imul
int
inc
cli
dec
xchg
mov
call
adc
jg
das
orb
or
call
adc
adc
mov
xlat
jmp
xor
mov
cmpl
fadds
jns
stos
jmp
out
imul
push
jae
jl
jg
rolb
xor
mov
xor
loope
testl
stc
aaa
xchg
mov
pop
lahf
out
imul
aam
lods
outsl
js
out
cmp
cmp
push
sub
jnp
shll
outsb
inc
in
sbb
inc
jo
and
lods
mov
pop
daa
mov
cmp
mov
cld
and
aas
add
pop
dec
scas
push
sub
fs
movsb
sbb
test
mov
fidivl
out
loop
mul
leave
xchg
gs
leave
ret
testb
pop
xor
mov
add
pusha
or
adc
mov
cmp
pop
rorb
addr16
outsl
and
xor
lcall
and
or
ret
rcrb
sub
neg
add
call
add
mov
adc
mov
xchg
dec
in
sti
lea
lret
sbb
push
xchg
scas
xor
jne
add
pushf
fstp
mov
scas
scas
xchg
pusha
loop
addr16
jne
iret
movsb
nop
sbb
inc
pop
pop
test
repnz
arpl
adc
sub
inc
es
ficoms
stc
jo
js
sahf
jmp
mov
and
add
imul
add
xlat
xor
xchg
in
les
cmp
cmp
movsl
ret
jl
clc
outsl
mov
insl
sbb
icebp
test
sbb
or
aam
sbb
xchg
pop
pop
adc
jns
jmp
pop
clc
iret
sub
sti
sub
mov
mov
sbb
test
fstpt
push
jbe
sub
xor
scas
loop
jle
pop
add
dec
imul
mov
sub
xor
mov
jp
dec
and
mov
fs
add
sbb
punpcklwd
jns
push
fs
jbe
aas
mov
int
mov
aas
out
fadds
ljmp
push
sti
or
mov
lcall
movsb
push
and
cmp
call
cmp
jl
aad
sbbb
ds
aam
das
fistpll
cli
cli
test
pop
testl
xchg
test
popa
sahf
sbb
or
mov
or
out
test
and
test
sbb
xchg
insl
in
or
xchg
adc
scas
jnp
insl
bound
cwtl
lds
popf
shll
fadds
xchg
cli
xchg
pushf
push
repnz
or
subl
pop
cmpsb
jo
fbstp
jns
sarl
adc
cmp
pop
out
in
push
aad
push
imul
test
bound
xchg
add
fdiv
xchg
and
push
jge
stc
fldt
mov
xchg
outsl
das
fsubs
push
ret
adc
pushf
lahf
pop
imul
push
jne
hlt
jge
mov
mov
sbb
into
cmp
rclb
imul
test
jb
pop
popa
mov
inc
mov
xor
sbb
sbb
lock
int
jmp
add
pop
mov
loope
add
xor
clc
mov
mov
add
mov
daa
mov
dec
fldpi
scas
mov
es
mov
popf
mov
movsb
lods
mov
pop
push
fbld
sbb
push
xor
cmp
mov
ljmp
fidivl
mov
scas
loop
jmp
out
sub
mov
call
stos
test
repz
push
testb
dec
mov
adc
dec
push
test
aaa
pop
lods
jl
imul
or
pop
lea
or
ja
mov
pushf
adc
pop
cmpsl
stc
fildl
dec
pop
ja
mov
enter
xor
in
jl
aad
mov
push
mov
movsb
rorl
dec
and
fstpt
fisttps
popa
insb
call
cmp
add
mov
fs
lret
jo
jnp
xchg
sbb
pop
iret
inc
dec
jmp
sbb
or
orb
dec
imul
and
adc
hlt
fildll
adc
xor
cmp
shll
mov
mov
mov
fsubrl
pop
mov
xchg
pop
insl
add
mov
popf
pop
push
mov
ljmp
jecxz
rorl
jge
xor
push
les
sarb
out
cs
dec
ret
test
sbb
addl
inc
rorb
push
jecxz
mov
gs
pop
xchg
fisubl
sub
jmp
pop
push
xchg
add
mov
pop
idiv
push
dec
test
rorl
push
push
sbb
insb
add
rorl
mov
pop
inc
sbb
push
cmpsb
add
loopne
mov
fistps
into
cmpsb
push
and
pop
int3
mov
xlat
in
pop
jecxz
adc
push
test
sub
insl
xor
rcl
arpl
out
xchg
jb
xor
out
sahf
rcrl
pop
sti
jle
stos
sahf
ljmp
dec
cwtl
gs
and
fisttpl
testl
sti
or
in
rol
cld
add
cmp
fucomip
inc
sbb
xchg
push
or
and
test
pop
clc
testb
mov
add
icebp
and
shlb
pop
mov
jb
dec
jae
imul
fisttpl
hlt
mul
cli
cmp
adcl
push
les
or
andl
js
cmp
das
mov
test
popf
jmp
cmp
fs
mov
pop
in
arpl
cmp
in
insl
jo
dec
outsl
pop
test
mov
fwait
outsl
stos
adc
push
test
test
push
and
shlb
sbb
jg
ljmp
insl
mov
xlat
fwait
cwtl
in
mov
adc
mov
inc
hlt
movsl
and
std
les
call
enter
adc
add
dec
movsb
fdivs
aas
inc
cld
std
test
repnz
enter
or
test
mov
xchg
test
push
fs
mov
jbe
pop
xlat
in
xor
in
push
and
mov
mov
outsl
shl
mov
and
or
sti
pop
xchg
daa
addr16
sti
jl
add
repz
xor
or
jl
lds
sub
jmp
mov
add
aam
mov
pop
add
mov
scas
out
jne
cwtl
xor
lods
push
add
pop
mov
or
sbb
ja
test
orl
std
mov
jge
fs
mov
rcrl
push
aas
pop
in
inc
inc
mulb
int3
into
xlat
jbe
aad
and
xchg
mov
jp
aaa
push
cmp
sarb
push
lods
lahf
enter
ss
scas
inc
out
or
loop
int
andb
pop
or
aas
cwtl
sbb
mov
sub
mov
jmp
inc
pusha
jo
in
imul
loope
add
insl
js
mull
jl
ss
jae
inc
sbb
mov
int
fwait
stos
outsb
adc
mov
cmpsl
leave
jnp,pt
cld
push
jo
dec
add
sub
hlt
cmp
lret
cwtl
sbb
stc
jno
cmp
leave
inc
test
out
call
xchg
mov
aas
jns
dec
clc
test
repz
lods
push
cs
push
stc
fisubl
js
dec
xchg
dec
lret
mov
pushf
outsb
mov
fimuls
inc
insb
mov
and
xchg
enter
mov
xor
repnz
mov
stc
lds
std
lods
xchg
negb
stos
bound
sub
fsts
mov
adc
add
cmp
mov
in
pusha
movsl
fs
ss
dec
dec
out
mov
fnstenv
call
jge
push
jae
std
shr
aam
mov
leavew
cmp
xchg
movsb
cmp
fs
adc
inc
adc
pop
mov
pop
add
inc
pop
arpl
std
add
into
aam
jp
mov
jl
push
mov
pop
mov
dec
inc
pop
inc
fsts
les
jo
stos
adc
into
push
repz
mov
into
mov
scas
push
cld
dec
clc
push
lods
cmp
fiadds
test
icebp
xlat
hlt
or
leave
or
adcl
mov
push
push
lea
mov
out
mov
ja
nop
adc
sbb
mov
aaa
xor
int3
mov
fidivs
and
leave
pop
insb
cmpsb
mov
bound
repnz
repz
cmp
ljmp
xchg
imul
cltd
negb
or
inc
add
cmp
adc
jmp
movsb
cwtl
mov
inc
xchg
mov
sahf
call
xor
and
add
mov
and
xchg
mov
dec
sbb
ja
sub
ret
je
fs
or
mov
cmp
insb
mov
jb
nop
test
outsl
sbb
lahf
inc
sub
movd
mov
inc
je
shrb
cld
shlb
adc
mov
cmp
negl
repz
push
arpl
jp
pop
clc
jecxz,pn
inc
push
push
in
clc
jb
hlt
shrb
xor
jns
fxch
cwtl
lret
cmp
xlat
xchg
mov
mov
xchg
pop
xchg
cmpsl
fdivl
scas
icebp
cwtl
xchg
adc
test
clc
std
imul
push
movsl
jle
mov
jg
push
mov
inc
push
rcl
jg
iret
mov
or
fcom
dec
and
sub
add
cld
aad
inc
test
sub
xor
int3
push
or
xor
data16
clc
pushf
outsb
sarl
es
jbe
inc
xor
loop
cmpsb
mov
inc
dec
inc
insb
sub
icebp
pop
sahf
jle
jg
sbb
xchg
jo
int3
pop
mov
mov
jno
imul
fcmovnu
imul
scas
dec
jg
cmp
test
cmp
xchg
gs
push
cmp
inc
sbb
add
scas
jecxz
int3
movsl
subl
aad
ds
iret
mov
adc
adc
psubb
xor
push
xchg
test
fbld
cmp
test
pop
nop
sbb
out
cmp
sub
push
sbb
aad
les
pop
popa
outsl
rcl
dec
sub
lock
fmull
push
test
push
repnz
dec
setl
jle
addr16
lods
das
jmp
xchg
or
lret
fdivrl
cmpsb
cmc
jecxz
addl
add
xchg
xor
std
inc
sbb
mov
inc
xchg
scas
insl
cmpsb
aam
xchg
dec
lods
push
mov
mov
dec
orb
inc
das
push
sbb
xor
rcrb
jb
mov
jbe
jg
int3
sbb
sbb
pop
icebp
mov
jle
xchg
cmp
inc
inc
mov
jns
pop
and
je
lods
jne
ja
inc
rcrl
aam
dec
jmp
mov
mov
mov
sbb
jne
sbb
ret
loop
jae
mov
dec
cmpsb
fwait
sbb
push
cmp
arpl
sbb
push
out
xlat
cmp
loope
pop
pop
int
sbb
std
js
jle
jle
ret
xchg
sbb
mov
testb
mov
or
inc
fstl
adc
adc
mov
push
mov
movsl
jnp
ror
fcomps
cmc
lods
adc
mov
in
ds
xor
mov
jge
xchg
xor
pextrw
lea
clc
ret
add
fcomi
or
int
adc
stos
sbb
mov
jmp
mov
push
negb
and
or
cmp
out
mov
pop
mov
into
daa
mov
lret
push
adc
fstps
cmp
outsl
inc
xor
repnz
sbb
fstpl
ret
inc
pop
pop
cmp
aaa
jl
ret
jp
lret
loopne
pop
stos
addr16
sub
cmp
mov
shlb
xchg
fnstenv
in
mov
add
add
sbb
mov
das
or
jne
xor
mov
leave
push
mov
inc
je
adc
lock
or
dec
cmpsb
mov
adc
sbb
mov
add
mov
inc
leave
sti
dec
test
mov
xchg
leave
inc
cmc
ljmp
mov
das
pop
rcl
sub
iret
scas
sahf
cmpsl
jp
movsb
xchg
lods
addl
fisubl
mov
aad
fsubrs
insb
int3
sub
lahf
test
xor
push
enter
mov
lds
add
mov
stos
push
dec
int
sbb
sub
int
push
and
fstpt
scas
fldl
jle
sub
fisubl
test
cmpsl
jl
push
cmpsl
scas
outsl
inc
in
fidivrs
dec
xchg
xchg
loopne
dec
xchg
test
pop
inc
loop
inc
scas
pop
mov
jl
lock
xchg
mov
push
cmp
ss
cli
sbb
push
pop
imull
loop
add
jp
in
std
mov
xlat
jl
in
or
outsb
inc
icebp
cwtl
adc
pop
in
call
mov
lds
loop
negb
or
or
stos
pusha
nop
cld
pop
in
cmp
add
fildl
fbld
mov
or
pop
dec
popa
sbb
dec
lea
test
mov
sub
imul
movsl
mov
clc
push
cld
xchg
iret
ret
fdivrs
ljmp
test
pop
jmp
cmp
repz
jb
mov
les
push
sub
cmpsl
mov
inc
outsb
cmp
stos
jle
mov
or
daa
mov
cmp
cmp
mov
mov
nop
jecxz
push
push
aam
stc
mov
mov
loopne
xchg
mov
insl
mov
mov
xor
mov
shll
loope
stos
adc
mov
push
incl
aas
mov
js
cmp
fistpll
inc
or
xchg
test
shlb
outsl
xor
xchg
mov
and
mov
fcmovnu
mov
aad
std
jge
shlb
inc
mov
mov
gs
jl
or
xchg
pop
dec
fsubrs
dec
imul
cmp
xchg
ds
fs
dec
cld
mov
fs
dec
test
shlb
xchg
sub
movsb
fdivl
xchg
xor
push
and
adc
lcall
scas
nop
mov
jl
sbb
mov
xor
add
outsl
or
add
fisubl
lock
rcl
ljmp
loop
dec
mov
outsl
mov
ljmp
aam
outsl
mov
stos
js
pusha
imull
cltd
adc
push
xor
dec
push
sahf
jne
pop
jl
push
out
pop
insb
inc
lcall
in
lret
lcall
and
and
sbb
pop
nop
mov
inc
fiaddl
push
push
lret
aas
mov
and
add
inc
xor
iret
out
sbb
add
fldcw
sub
imul
bound
rcrb
push
ret
stos
roll
inc
addr16
clc
add
xor
inc
push
les
outsl
push
or
out
jle
push
inc
mov
ja
out
rorl
cmpsb
aad
mov
sub
xor
push
pop
repnz
sbb
test
pop
and
icebp
das
pop
cmp
js
out
sbb
inc
jmp
and
out
and
inc
mov
lahf
jae
invd
out
std
rcrl
mov
push
xlat
in
cmp
mov
out
scas
dec
sbb
jp
lods
inc
xor
inc
jo
pop
and
pop
out
xchg
call
sub
lock
mov
inc
cld
out
mov
add
mov
xchg
imul
movsl
movsb
add
orl
std
mov
mov
lahf
frstor
xchg
adc
sbb
lods
fiadds
movsl
adc
jnp
and
shl
adc
sbb
xchg
and
ret
icebp
sbb
cs
adc
mov
dec
mov
stc
stos
cmp
jmp
test
cwtl
lret
call
jno
test
les
mov
jge
lret
pop
in
push
fwait
xchg
push
in
mov
sub
rolb
adc
push
shll
pushl
stos
sub
push
lcall
bound
les
loopne
sbb
insb
xchg
sti
scas
mov
xlat
aad
pusha
cmpb
dec
loop
mov
mov
ds
rcr
dec
push
and
shl
or
push
xorl
test
loope
pop
inc
addr16
mov
popa
cli
js
call
movsb
xor
inc
jp
mov
icebp
fisttpl
test
insl
sbb
je
mov
pusha
in
shrl
pop
lds
mov
stos
cltd
dec
fsubrl
mov
dec
add
insl
addr16
or
call
mov
loope
icebp
fwait
jecxz
pop
push
mov
push
push
dec
ja
adc
arpl
pop
test
push
sbb
orl
into
dec
iret
repnz
jmp
dec
int
cmpl
sub
loopne
je
lods
aam
mov
push
mov
add
pop
scas
out
add
dec
sub
pushf
addr16
push
or
jle
stos
cmpsl
enter
lods
pop
push
in
test
icebp
nop
mov
iret
or
sbb
mov
and
mov
and
add
fildll
test
sub
ja
enter
repnz
scas
movsl
pop
push
xor
pop
cmp
push
inc
xor
imul
cmpl
mov
insl
sbb
shll
jns
cltd
and
nop
sub
jl
mov
pop
dec
in
cs
pop
cs
arpl
dec
inc
inc
mov
sahf
outsb
jmp
xor
rcr
lods
daa
test
adc
mov
hlt
int
outsb
and
sub
in
imul
aam
mov
add
shl
repz
sub
shr
mov
imull
cld
inc
enter
jno
and
xchg
bound
pop
jb
add
mov
cmp
ret
dec
xor
insl
mov
test
jb
jl
enter
test
pop
loopne
js
pop
pop
icebp
addr16
call
cld
ljmp
mov
mov
ret
jle
clc
pop
adc
in
stc
pop
fdivs
jns
outsb
adc
or
push
xchg
mov
jmp
mov
loope
sub
call
inc
xchg
jbe
adc
xor
adc
adc
or
cmp
xchg
icebp
out
mov
stos
mov
mov
daa
in
loopne
mov
add
lods
mov
cmc
out
add
fnstsw
pop
pop
cmp
jle
pop
push
and
sti
lahf
andb
xor
es
pop
add
rol
push
mov
cmp
pop
int
or
adc
int3
inc
and
out
xchg
push
cmp
push
sub
push
data16
dec
or
pop
and
hlt
ljmp
lahf
call
hlt
jge
lret
nop
lods
sbb
mov
scas
xor
cmc
shrb
fdivr
inc
mov
pushf
push
push
jo
dec
mov
js
lahf
mov
push
in
cmp
test
dec
scas
daa
sbb
aam
or
call
in
mov
add
pusha
divl
sub
or
xor
xchg
cmp
and
lods
ja
out
mov
sbb
dec
mov
xor
movsb
bound
mov
stc
jns
mov
mov
push
cmp
cli
stc
xabort
sub
out
arpl
push
push
xchg
xorl
outsb
inc
cmp
push
sbb
lods
mov
loope
sub
sbb
lock
ss
mov
std
cli
mov
xor
sub
popa
pop
stos
pop
xor
mov
jecxz
pusha
sub
mov
xchg
rorb
jns
jno
push
mov
jle
fadds
sbb
push
or
shl
daa
xor
sti
daa
out
pop
adc
pop
add
push
cld
cmc
mov
insb
sti
ljmp
in
repz
push
mov
adc
fisubs
into
repz
test
std
shrl
test
dec
lds
fs
cmc
mov
and
fidivl
mov
faddl
or
fisttpl
pop
in
xor
cmp
pop
imulb
and
add
dec
inc
shrl
cld
fistps
insb
mov
inc
push
cmp
inc
and
das
pop
mov
inc
push
fcoml
push
subb
sub
jge
mov
imul
js
pop
je
icebp
cmp
jle
push
nop
out
pop
orb
lds
pop
adc
adcl
push
cmp
and
insl
jbe
fsubrs
outsl
xor
sub
or
fwait
ss
shl
fsub
cmp
mov
jmp
xor
in
arpl
cld
cs
dec
xchg
or
xlat
cltd
adc
in
insl
cmp
pop
pop
mov
or
loop
ss
iret
call
bound
mov
xor
push
pop
pop
mov
lock
test
xchg
adc
lods
clc
lds
clc
xchg
jge
hlt
or
clc
sub
ror
shl
or
mov
rcll
imul
and
out
in
mov
mov
leave
xchg
mov
loopne
paddw
or
or
jge
jge
xchg
inc
sbb
mov
cmp
out
mov
pop
mov
pop
xchg
mov
repnz
insl
xchg
fsts
rclb
popa
rorl
and
xchg
shlb
out
in
push
xrelease
or
jl
shlb
popa
cwtl
lret
aaa
enter
mov
jg
fldenv
push
add
mov
push
xor
pop
ja
in
or
mov
shlb
dec
lret
mov
or
mov
fildl
pop
xor
popf
pop
xchg
ds
sbb
sub
mov
dec
dec
call
push
add
cmpl
mov
pop
or
es
cld
mov
js
clc
fbld
jns
adc
xchg
adc
pop
pop
or
rol
dec
pushf
adc
xchg
addr16
jb
stos
shll
std
stos
pop
mov
inc
int3
leave
dec
mov
inc
movsl
lods
jb
or
imul
in
xor
rcr
jnp
lret
int
add
push
xchg
cltd
sub
scas
sbb
les
aas
pop
rolb
dec
adc
imul
ret
mov
jns
xor
cmp
into
xchg
jmp
daa
xchg
rcll
nop
imul
and
cmp
cld
lds
xchg
rorb
sbb
mov
sti
inc
xchg
notb
mov
ja
daa
std
ret
lods
jne
adc
in
or
aam
xchg
add
sbb
ficoml
cmp
push
lock
mov
sub
xor
xlat
xchg
pmullw
jno
aas
push
imulb
pop
jmp
dec
mov
pop
dec
scas
cmp
mov
jecxz
jmp
pop
sub
add
xor
mov
pop
inc
jae
xchg
gs
movsb
mov
ret
dec
push
cs
nop
mov
sub
cli
cmp
mov
inc
pop
push
add
popl
fisubrs
aam
lods
jecxz
or
lcall
jb
dec
sarl
xchg
push
in
lea
cmp
xor
mov
jns
inc
or
cltd
mov
mov
jbe
sbb
mov
cmp
sub
pop
test
test
xchg
repnz
loop
stos
cmp
in
jmp
popa
or
xor
je
sbb
cli
push
mov
jnp
mov
dec
mov
cmc
outsl
popa
enter
mov
aad
test
subb
sub
loopne
xor
divb
push
xchg
ficoml
subb
std
aam
in
mov
sbb
cs
jae
popf
fcmovne
and
pop
lods
fldl
push
cmp
fisubrl
jecxz
xor
mov
hlt
fadds
inc
xor
jle
mov
sarb
out
cmp
jne
cmp
into
adc
xchg
pop
in
nop
sbb
jp
inc
outsl
jecxz
mov
mov
add
mov
adc
and
lret
pusha
and
mov
xor
jnp
scas
xchg
stos
xchg
out
pop
notl
popa
fcoml
ss
lods
cmp
inc
rorl
jle
xchg
push
mov
data16
dec
aaa
mov
lods
mov
jge
mov
sbb
in
fmuls
jb
iret
cmp
mov
icebp
fs
xchg
jns
shlb
add
shll
mov
and
mov
push
sbb
push
xor
jmp
sub
rorb
outsb
adc
es
fmuls
xchg
xchg
dec
test
xchg
ror
je
push
mov
lock
mov
popf
addr16
adc
loope
xchg
jnp
jmp
nop
inc
adc
jnp
shl
loope
les
jg
outsl
cmp
inc
adc
popf
lahf
mov
inc
in
ret
ss
xchg
sbb
je
aad
and
icebp
pusha
in
cmp
adc
hlt
fisubs
shrb
es
popa
testl
test
in
out
call
xlat
in
mov
fsubl
imul
push
inc
push
mov
imul
int
shl
dec
push
sub
push
add
scas
xorb
mov
jmp
jno
xchg
adc
test
adc
pusha
jbe
cmpsl
int
inc
mov
movsb
addr16
loop
gs
xchg
push
in
imul
sbb
mov
stos
mov
dec
fwait
stc
dec
adc
fwait
leave
mov
mov
cmc
xor
and
shlb
jge
lcall
fbld
cli
mov
pop
jnp
xchg
lods
out
and
nop
repz
sbb
scas
fbld
iret
scas
cmc
popf
daa
fwait
aas
cmp
pop
push
cmpsl
test
ds
xchg
or
outsl
xor
nop
cmc
pop
imul
imul
stc
clc
rorb
cmpsl
fisubrl
push
dec
aas
test
sbb
push
dec
pop
mov
jle
jne
int
arpl
enter
sbb
pushf
sbb
pusha
mov
mov
pop
bound
xor
fbstp
mov
je
xchg
xchg
pop
das
movsl
xor
or
out
cmp
and
shlb
jno
jmp
loopne
and
sti
add
sbb
jp
inc
xor
pop
call
addr16
into
pop
iret
in
inc
pop
sub
push
mov
jecxz
mov
pop
js
pop
xchg
test
xchg
pusha
or
loopne
push
cli
mov
push
mov
andl
aaa
pop
test
imul
imul
pop
push
rcrb
push
cmpl
addr16
jnp
js
add
and
shlb
mov
xchg
adc
cmp
xchg
dec
pop
push
lods
popa
push
xor
cmc
ret
in
mov
out
pop
and
and
jnp
popf
push
les
add
push
ss
incb
or
enter
xchg
mov
mov
out
aaa
lods
mov
in
mov
out
push
jp
repz
sub
fsubl
lods
ljmp
xor
rcll
and
fstpt
icebp
loope
add
data16
dec
add
jae
add
mov
mov
iret
dec
orb
xchg
aaa
push
imul
xchg
mov
hlt
cmp
stc
iret
cmpsb
jns
cld
outsb
add
stos
mov
inc
cmpsb
int
clc
mov
adc
rcrb
aaa
iret
fisubrs
or
inc
jl
add
cld
jno
enter
into
in
cs
fsts
and
ljmp
jne
cmpl
mov
sbb
or
movsb
xchg
push
arpl
insb
xchg
rclb
or
push
add
xlat
mov
jb
stos
hlt
inc
fs
mov
mov
out
stos
or
ret
arpl
clc
sbb
push
jo
orb
mov
neg
int3
pop
sti
cmp
adc
bound
test
push
movsl
loope
pop
outsl
mov
push
rclb
mov
aad
std
mov
mov
je
sbb
mov
fwait
testl
push
and
cmp
or
subl
imul
int
notl
stos
nop
xor
movsl
adcb
adc
sbb
fwait
mov
jae
and
cmp
pop
adc
dec
out
push
fistpll
lcall
pop
lock
jp
dec
mov
arpl
mov
movsl
adc
and
push
fwait
aam
mov
daa
xchg
push
loop
mov
and
add
inc
loopne
imul
xchg
out
inc
mov
xchg
nop
shll
pop
xor
add
xchg
repz
xorl
aas
movsl
ret
dec
je
adc
pop
xchg
aaa
and
pop
mov
push
mov
inc
pop
insl
fisubrl
in
aad
lret
and
lods
cli
xchg
push
jns
or
outsb
mov
out
lret
in
mov
xor
in
sub
pop
sub
ret
outsl
mov
jns
dec
xchg
push
fdivs
ror
shl
push
cmp
push
mov
dec
stos
in
test
push
and
pop
add
imul
xchg
mov
rcrb
ficompl
insb
mov
push
or
enter
mov
xor
jns
push
mov
cmp
nop
or
pop
mov
or
popa
jmp
mov
into
cmp
mov
push
add
out
enter
cmp
xchg
test
mov
add
bound
gs
inc
repnz
cs
and
or
push
sub
test
jmp
lcall
mov
xor
push
push
jmp
enter
push
std
scas
test
mov
js
mov
sub
mov
push
ret
add
add
cmp
and
shl
loop
notb
xchg
aaa
add
and
testb
jmp
mov
sub
push
push
lods
popa
jno
sbb
fidivrs
es
jns
cld
mov
adc
in
cmp
rolb
out
shrl
pop
mov
shl
push
ljmp
push
push
mov
mov
jle
xorb
test
fstl
pop
push
fs
cmp
fmull
pop
out
roll
sub
and
ror
popf
rclb
sub
pop
or
ret
stc
ret
aas
adc
insb
sub
dec
cmp
add
sub
pusha
mov
jo
mov
xchg
and
lret
add
push
pop
inc
or
jb
xchg
out
mov
cwtl
jge
or
mov
jp
lret
sarb
aam
fistpl
scas
out
and
ret
xchg
sbb
das
push
imul
and
pop
adc
rorl
mov
add
dec
pop
repz
insl
insl
xchg
cmp
sbb
nop
in
loop
aam
push
sbb
leave
pushf
push
inc
into
cwtl
push
xlat
test
outsl
test
stc
mov
mov
jge
stos
jne
test
pop
sbb
idivb
xlat
loopne
fstp
add
int
dec
cmp
mov
fnstsw
jge
cmpsl
sub
stos
icebp
jmp
out
cmc
dec
push
dec
mov
out
leave
cmp
inc
mov
out
cmpsl
inc
xchg
pushf
jae
xor
shrl
mov
mov
gs
xor
mov
jle
shr
mov
lods
dec
add
mov
xchg
insl
imul
push
add
pusha
sbb
dec
test
mov
icebp
and
ss
add
lods
cmp
outsb
xchg
add
sti
das
mov
movsb
jecxz
mov
dec
xor
les
hlt
fnsave
imul
test
cli
std
mov
pop
push
enter
sbb
repz
inc
lds
nop
mov
outsb
insl
inc
dec
or
adc
lcall
xchg
push
dec
std
xchg
sti
inc
stos
xchg
adc
nop
rclb
cs
inc
jl
xchg
mov
xor
and
add
push
xor
in
enter
adc
xchg
ss
cwtl
lods
das
dec
out
xor
and
stos
rolb
dec
insb
out
jae
lcall
movsb
pop
xchg
sub
sbb
subb
mov
leave
sahf
mov
sbb
inc
dec
roll
shlb
nop
fidivrl
je
loopne
stos
jb
cmp
adc
push
dec
inc
in
push
mov
lret
mov
lock
push
sub
push
cmp
dec
add
sahf
mov
push
xor
xchg
mov
mov
lds
in
insb
pushf
fcmovu
and
imul
mov
xchg
cld
xlat
aas
xchg
arpl
stos
je
jl
insl
mov
outsb
clc
out
std
push
ljmp
sbb
push
mov
imulb
outsl
inc
mov
rcrb
dec
lahf
jno
andb
aas
jbe
sahf
ja
mov
mov
mov
int3
fwait
mov
mov
inc
fiadds
pop
dec
sbb
mov
mov
jno
fmuls
add
mov
lea
jg
test
lods
pushf
repz
jne
lahf
xchg
push
pop
mov
ficomps
jb
rclb
std
cmp
negl
ficoms
xor
inc
push
sbb
in
adcl
nop
in
dec
jp
sub
mov
call
sbb
inc
ja
mov
add
xchg
cmp
jne
jbe
pop
dec
mov
cmpsl
sti
gs
xor
shlb
push
nop
stos
jnp
ja
pop
scas
cmpsb
loopne
xor
repnz
ret
inc
orl
sbb
cs
rcrb
mov
call
adc
insb
cmpsl
xchg
pop
das
xor
jmp
sub
addl
pop
jg
sahf
cld
or
push
in
shrb
ret
cmp
lahf
cmpsl
or
aad
adc
or
add
jo
dec
sub
sub
jmp
mov
dec
hlt
bound
in
not
xchg
push
int3
leave
push
xor
adc
mov
out
lea
or
fldenv
xchg
mov
out
adc
lock
push
pop
pop
mov
mov
lret
cld
sub
scas
dec
lcall
dec
mov
add
cmp
lahf
mov
pop
mov
es
mov
into
call
inc
sbb
add
aas
push
stos
xchg
sbb
push
fsubs
pop
loop
hlt
mov
les
shll
cmp
repz
out
sub
pop
fs
dec
test
mov
gs
xor
add
cmp
inc
rcll
xchg
push
mov
inc
popl
push
std
fwait
lret
mov
xor
mov
sbbb
insb
jle
and
push
in
ret
xchg
mov
movsl
shrb
xor
stos
test
lret
imul
aam
mov
les
pop
push
jno
mulb
sub
ret
mov
dec
cltd
mov
xchg
enter
cmovle
lds
adc
add
rolb
or
test
jl
pop
sub
sub
mov
cmp
sbb
lods
les
sub
jns
icebp
jmp
movsb
test
fdivrl
in
cmp
pop
sub
xor
ret
cmc
sbb
and
dec
cmovg
inc
sbb
jmp
inc
inc
movsw
in
and
and
test
stos
jae
outsb
adc
stc
lods
xchg
int
gs
iret
hlt
pop
xchg
filds
cld
enter
subl
icebp
js
fs
fdivrl
jmp
add
jecxz
cmpsb
ljmp
inc
das
lock
xor
mov
pop
xor
xchg
in
mov
fmuls
popa
or
in
lahf
std
out
pop
inc
je
mov
loopne
arpl
adc
clc
mov
daa
inc
lret
xlat
movl
add
mov
add
addb
dec
loopne
or
inc
cltd
mov
pusha
stc
movsb
xchg
sbb
mov
imul
js
pop
mov
scas
mov
aad
dec
cmp
mov
mov
into
pop
and
ficompl
push
test
pusha
arpl
sbb
ss
aas
aas
call
stc
mov
mov
ret
fcmovnu
aas
sbb
add
push
hlt
out
arpl
sub
test
jnp
and
sub
sbb
jmp
ret
jbe
test
aas
stos
adc
dec
ds
ret
ljmp
loopne
cmpsb
in
fs
scas
push
xor
das
inc
andb
or
dec
das
mov
add
test
outsl
pop
jle
scas
in
test
xchg
stos
jno
aam
pop
sub
ja
mov
stc
jnp
push
xchg
cmpsb
xchg
in
xor
imul
or
dec
sbbl
repz
xor
imul
cld
jg
das
push
jmp
stc
aaa
add
mov
jmp
pop
call
pop
push
std
rol
xchg
roll
mov
mov
add
mov
lods
enter
push
cmp
xor
lock
imul
push
es
popa
sbb
icebp
mov
lock
cmp
in
lock
js
jae
aas
or
std
data16
push
xchg
scas
sub
xchg
pushf
sub
mov
mov
fmuls
fbld
std
data16
es
xchg
sub
out
repnz
inc
repz
daa
sub
fs
jp
and
push
ss
xchg
xchg
and
stc
fbstp
cmc
add
lret
out
jge
loopne
add
inc
pop
xchg
xor
add
xchg
xor
adc
adc
lcall
cmp
xor
xchg
popf
fcoms
rorb
aas
fists
xor
xchg
ljmp
push
pop
xchg
dec
sub
orl
cmp
xor
push
test
out
push
fidivs
cmpsb
xchg
imul
cltd
jle
sbb
repz
sbb
xlat
aad
stos
push
push
int
test
xor
movsl
fldl
imull
pop
repnz
add
sbb
int3
nop
jg
dec
jl
xchg
mov
test
inc
cmc
and
mov
push
outsb
add
push
or
std
mov
xor
dec
or
cmc
add
adc
pop
test
outsl
mov
dec
inc
cmp
xor
lods
fwait
test
adc
lods
in
xchg
nop
pop
divb
insl
dec
das
test
and
aad
add
cmp
in
xorl
adc
dec
fildl
ss
int
aaa
xchg
sbb
lret
adc
mov
jb
sub
xor
ret
dec
iret
pushf
inc
jb
jnp
lcall
sub
xor
mov
push
dec
adc
iret
je
mov
ja
pop
shl
and
cwtl
inc
mov
test
jecxz
lahf
push
inc
jg
je
jne
aam
ror
movsl
pusha
dec
mov
jecxz
out
mov
push
fistps
not
push
inc
xor
and
fsubr
add
add
inc
aas
dec
and
subl
sti
cmp
pop
sub
cmpsb
sub
ror
dec
sub
rorb
cld
mov
fstps
aam
rcrb
add
push
or
shlb
xor
shr
sbb
push
xchg
repnz
scas
fistl
stos
in
inc
lret
dec
push
mov
cmp
les
push
jne
stc
and
insl
cltd
dec
inc
mov
inc
mov
mov
jns
lret
imul
rcll
je
ja
das
sub
pop
ljmp
mov
mov
adc
or
sti
jnp
scas
int3
ja
dec
hlt
push
mov
or
mov
ret
mov
dec
lds
movsb
inc
rorl
outsl
mov
das
dec
out
inc
out
sub
outsb
adc
pop
mov
add
mov
dec
mov
push
sbb
rol
out
scas
test
mov
aas
mov
push
jns
jae
sub
xchg
hlt
jecxz
xorl
rolb
mov
sti
push
jge
ret
dec
add
test
push
lcall
sub
out
inc
imul
and
in
sub
sbb
dec
dec
xlat
idivl
mov
or
popf
dec
cmp
add
pop
dec
cmpsl
out
das
rcrb
mov
cmpsl
popf
test
xchg
xchg
cmp
sarb
cmpsl
jmp
fstp
mov
ja
lea
movsb
pop
fnstcw
andb
test
test
xchg
fs
lds
js
icebp
pop
add
aaa
push
jle
push
ja
mov
lods
out
jno
add
push
or
lds
rolb
and
stos
outsb
sbb
push
mov
and
es
mov
or
mov
push
inc
pop
or
xchg
jne
jmp
stc
cmp
jmp
jb
or
sti
push
aad
push
mov
ss
jp
fmuls
cwtl
lcall
xchg
mov
and
mov
insl
es
and
movl
les
out
andl
xchg
cmp
movsl
test
lcall
pop
pop
push
int
xchg
xchg
mov
add
addr16
test
xor
dec
cld
dec
int
inc
and
int3
shrb
add
jbe
jbe
mov
loop
cmp
fwait
inc
nop
fcmovne
adc
loopne
lock
push
xchg
mov
xchg
or
xor
pop
adcl
lock
mov
out
sbb
sub
shlb
enter
scas
jns
dec
jl
jae
hlt
lea
mov
and
inc
jg
adc
mov
fwait
and
popf
pop
and
ja
xchg
mov
ljmp
cmp
adc
push
inc
ds
mov
xchg
cmp
add
cmp
les
daa
das
dec
xor
leave
dec
fdivl
cld
push
xchg
into
sub
jns
add
sbb
ljmp
push
add
push
in
les
pop
mov
mov
pop
fldl
clc
push
and
stos
sahf
jle
sub
cmpsl
add
aad
xchg
xlat
jb
mov
roll
jecxz
ljmp
xchg
xchg
lds
and
clc
shr
ret
sub
mov
cld
push
insl
cld
push
push
nop
mov
sub
add
push
cmc
insl
pop
insl
mov
sbb
fs
mov
lret
push
mov
pop
aam
push
inc
sbbb
pop
stos
jle
sbb
cld
scas
push
test
daa
lret
sub
es
hlt
pop
add
insl
cli
pop
mov
in
icebp
lods
inc
cmpsb
ret
insl
sub
in
jge
dec
cmpsb
jnp
jo
fistpl
divb
call
xchg
and
jmp
fs
xchg
xor
cwtl
push
dec
dec
pop
fcmovu
test
pop
mulb
insl
iret
out
andl
ds
push
xchg
repnz
cli
jae
aad
jnp
pop
cmp
adc
xchg
cmp
test
and
and
nop
push
popf
fwait
adc
enter
jg
lock
mov
add
and
pushf
inc
inc
and
and
cld
mov
stc
pop
scas
insb
cwtl
adc
pop
and
add
jecxz
inc
and
into
adc
dec
add
push
data16
push
fs
or
adc
xchg
sbb
pop
sbb
xchg
insb
push
subl
shll
mov
adc
lcall
xchg
lea
xor
push
cli
push
push
call
outsb
pop
xor
fbstp
pop
push
ficoml
pop
and
adc
xor
repnz
rol
in
arpl
fidivrl
ss
and
pop
mov
adc
aad
scas
popf
test
mov
push
dec
scas
push
scas
in
pop
pop
adc
add
addr16
cltd
fsubrs
mov
lret
ja
mov
iret
lods
out
dec
jmp
mov
xchg
je
fstpl
fildll
mov
xchg
cmp
popf
into
cmpsb
or
adc
sti
mov
inc
mov
pop
jbe
imul
and
push
xor
or
pop
out
mov
mov
out
out
stos
loope
test
mov
or
mov
mov
lcall
testl
mov
aaa
mov
sti
adc
outsl
xchg
in
jmp
aaa
test
pop
pop
or
sarb
nop
insl
popf
ja
test
aam
jmp
or
push
and
or
jecxz
lds
int
in
jbe
stos
or
ret
cmp
daa
pop
pop
jo
mov
call
lret
add
sahf
rolb
and
cmp
or
push
jg
neg
lds
aam
andb
sbb
test
push
imul
sub
in
push
mov
aam
out
xchg
daa
loop
add
jecxz
push
mov
sbb
mov
xchg
jns
lret
xchg
imul
out
ja
insb
fwait
ljmp
sub
dec
push
mov
mov
mov
adc
lds
mov
add
stos
lcall
mov
inc
cmp
push
sbb
out
sub
xor
add
cmp
out
or
and
pusha
aam
out
jno
shrl
out
xchg
xchg
or
jge
cmp
ret
lods
xchg
sub
into
push
adc
mov
xor
in
mov
lahf
addr16
adc
push
mov
mov
in
bound
xor
jmp
popa
mov
arpl
cld
mov
pop
mov
mov
sbb
add
cmp
shll
movsb
je
sahf
aam
ja
call
pop
loop
or
fdivr
add
xor
push
add
repz
fwait
pop
mov
stos
lret
push
lds
sbb
imul
fwait
repnz
xor
arpl
dec
mov
ljmp
sub
cmpsl
mov
pop
jnp
push
push
or
jns
loop
jnp
pop
or
test
inc
insb
cmp
push
fs
lcall
xchg
int3
std
jl
es
adc
pop
cli
insl
mov
and
push
jge
loope
and
pop
inc
ret
adc
lods
lods
orl
jo
xchg
adc
dec
or
adc
inc
and
mov
sahf
aas
pop
subl
cmpsb
das
mov
push
ja
popa
aam
popf
mov
filds
xchg
lcall
sub
mov
loopne
mov
mov
in
sub
dec
lods
movsb
dec
mov
mov
nop
xchg
fsubs
lcall
cmp
push
sti
sub
insl
pop
inc
call
add
inc
xor
sub
insb
adc
clc
das
lahf
or
gs
lahf
xor
adc
rclb
aas
and
adc
xor
in
stos
fcmovbe
xor
sti
cmp
xchg
aas
popf
push
rorl
in
loop
inc
xor
test
shrb
das
inc
test
mov
dec
xor
jb
inc
movsb
lahf
push
mov
push
add
push
lcall
pop
sahf
enter
jl
mov
mov
test
sbbb
mov
xor
std
bound
mov
jns
push
out
or
push
stos
dec
jns
push
push
pop
mov
movsl
pop
lds
dec
cs
mov
aam
fmuls
jmp
stos
stc
sub
jbe
fcmovbe
in
jp
cwtl
scas
inc
lret
adc
fucomi
push
add
jge
jae
mov
xor
frstor
dec
cs
lods
xor
dec
lcall
mov
mov
cwtl
stc
insl
add
jg
ss
sub
jle
and
jae
aad
mov
mov
lret
test
arpl
ficoml
in
ret
sbb
in
fadds
push
or
or
test
call
mov
mov
mov
lock
lock
lock
aaa
adc
pop
test
xchg
sbb
imul
dec
push
push
idivb
push
jns
movlps
push
pop
fisubrs
cltd
xor
ficoms
sbb
in
sahf
jmp
mov
mov
mov
in
pop
icebp
les
sub
inc
or
mov
mov
inc
int3
insl
pop
js
sub
jb
cs
int3
fiadds
fisttpl
jno,pn
mov
jnp
lods
div
sub
sub
push
mov
je
loope
mov
dec
jg
or
sub
jle
pop
outsl
sti
sahf
call
mov
ret
adc
lods
sbb
add
cmpsb
ja
inc
add
cmp
sub
jnp
aam
push
xor
aam
insb
or
push
lock
mov
movsb
call
mov
xchg
xor
dec
xchg
push
pop
inc
sbb
push
jecxz
icebp
pop
fxch
mov
adc
pop
or
jp
dec
sbb
ja
add
mov
cmp
repz
or
xchg
stos
and
pop
out
push
out
lahf
lahf
adc
pop
cli
fwait
dec
popf
cmp
mov
mov
bnd
push
stc
callw
adc
xchg
pop
push
adc
leave
xchg
push
out
sahf
movsb
push
xchg
cmpl
add
jnp
jnp
stos
lods
fld
mov
sarb
cs
adc
jb
es
std
daa
push
jl
js
mov
ds
pop
mov
push
mov
xchg
je
popa
add
adcl
les
jne
pop
aad
in
in
cwtl
jle
jbe
stc
adc
add
mov
adc
dec
sbbl
into
pop
in
mov
ljmp
push
cmp
add
movsb
in
out
push
js
dec
push
sbb
sbb
xor
jmp
btr
hlt
cld
adc
pop
lcall
sub
fldl
cld
test
sti
and
mov
mov
in
cmp
and
sub
shlb
cmp
dec
or
xor
xchg
maxps
orl
adc
inc
inc
jecxz
jecxz
fadds
cmpsb
rcr
das
pop
adc
push
fmul
pop
jp
mov
cltd
mov
xchg
sub
ljmp
dec
mov
sbb
adc
lcall
aam
pushf
fs
outsl
xor
std
xchg
inc
dec
sub
dec
adc
dec
int3
sub
ds
mov
mov
sti
and
lock
jns
inc
repz
cmp
add
xchg
sbbb
and
mov
mov
test
xchg
data16
je
ja
xchg
jns
jo
push
sbb
inc
pop
addr16
adc
xor
and
sbb
mov
xlat
loopne
sti
cs
es
jb
adc
je
fs
push
jnp
cli
sahf
mov
add
or
cmp
fistpl
daa
xchg
pop
and
ljmp
ss
and
negb
mov
jne
sbb
pop
imul
lahf
push
xchg
mov
inc
sar
mov
jl
jecxz
negb
fdivrs
negl
out
mov
mov
scas
mov
push
add
sub
push
ficoms
xchg
stos
push
mov
in
in
loopne
sub
movsb
lcallw
mov
and
push
ret
xchg
test
in
rclb
adc
push
adcb
mov
push
and
fwait
cmc
cmp
cmp
lods
lods
movaps
dec
divl
adc
arpl
mov
xor
push
add
xchg
push
aas
push
mov
sub
pusha
mov
xchg
outsb
mov
inc
jge
pop
cltd
dec
mov
cmp
shl
fcmovnb
xor
aad
fwait
cmpsl
rorl
mov
xchg
and
cltd
test
imul
pusha
dec
sahf
mov
ja
insl
in
mov
jno
rcll
dec
push
std
inc
adc
cmpsl
js
repnz
cltd
div
scas
pop
mov
mov
iret
lds
or
or
insl
rcr
xlat
push
fisttpl
add
inc
and
pop
push
fdivrl
repz
inc
sbb
xchg
mov
and
cmp
lods
jne
jle
cmc
rcr
in
mov
sub
int3
out
loope
or
ret
mov
xor
fst
mov
cld
sbb
xchg
cmpsl
int3
and
sub
stc
pop
inc
cwtl
lcall
cmpsl
pop
mov
add
lahf
ja
aas
daa
lcall
sub
pop
mov
push
jge
and
js
popa
xchg
fisttpl
aam
push
sbb
add
pop
mov
ficomps
movsl
jg
dec
push
cmovge
add
sti
push
inc
hlt
cmp
ret
push
or
movlhps
call
ret
pop
fildll
dec
jl
inc
ss
outsl
test
mov
pop
fidivrs
dec
sbb
adc
mov
mov
mov
movsl
adc
test
jbe
outsb
lret
push
rcrl
xchg
jnp
jno
out
mov
das
dec
pop
lock
mov
jge
dec
lret
push
aas
lcall
movsb
xchg
stc
mov
and
imul
or
inc
add
cli
jg
out
cwtl
std
sub
and
xchg
cli
fistpl
call
inc
dec
pop
inc
dec
xchg
insl
insl
test
lds
ljmp
aaa
and
bound
imul
adc
jmp
jg
div
hlt
lea
adc
repnz
lret
jno
push
add
movsb
pushf
sub
std
leave
cltd
sarb
push
ja
jno
das
in
shlb
ret
lods
movsb
pop
pop
xor
or
das
sub
loop
je
inc
sbb
hlt
loope
lea
sti
sub
in
mov
cwtl
std
in
out
or
pusha
and
jle
and
pop
mov
sub
xchg
das
push
add
inc
xor
scas
pop
cwtl
pop
outsb
es
roll
out
lret
sbb
xor
sub
jmp
loope
and
bound
fmull
or
dec
and
and
movl
dec
mov
movsb
shr
sub
jecxz
cwtl
iret
fsts
push
jne
scas
add
sub
xchg
cwtl
sbb
push
mov
jle
cld
cmp
jecxz
movsl
iret
bound
test
cmp
jno
pop
mov
mov
pop
sbb
icebp
out
icebp
cmc
mov
adc
sub
jno
std
mov
pop
int3
testb
mov
lea
cmp
fiaddl
mov
jmp
push
in
out
dec
or
ss
fs
and
push
mov
fisubrl
jg
sahf
testl
xchg
fcmovne
pusha
imul
nop
sbb
push
push
mov
sub
dec
popf
stc
cmp
in
fsubr
mov
jp
and
shlb
add
cs
icebp
hlt
cmp
mov
mov
mov
gs
mov
dec
or
inc
in
in
in
fpatan
lds
adc
cwtl
pop
sub
mov
aas
dec
cmp
or
push
out
push
add
lds
dec
sbb
fsubrl
faddl
ds
fwait
sti
and
xchg
jne
ficomps
adc
stos
les
sbb
fldenv
adc
cld
shll
fwait
int3
lods
mov
loope,pt
adc
cld
adc
mov
aam
cmp
inc
pop
cmc
kaddw
outsl
mov
addr16
add
jae
mov
out
mov
or
into
movsl
aaa
dec
jg
xor
outsb
clc
ret
cmpsl
in
add
xor
inc
add
mov
into
mov
jne
adc
cmp
xchg
add
enter
cmp
aaa
jnp
loopne
rclb
iret
cmp
int
push
xrelease
movsb
and
mov
jnp
or
push
adc
mov
into
jmp
adc
mov
in
pusha
pop
sbb
mov
stos
lahf
cld
xchg
pushf
pop
sahf
andl
les
insl
push
and
gs
fisttpl
xchg
inc
cmc
adc
xchg
push
mov
stc
orl
test
sbb
je
jl
stos
push
js
xor
inc
sub
mov
aam
stos
sbb
rorl
mov
mov
dec
or
scas
inc
inc
sbb
seto
aaa
mov
outsl
jb
outsl
jo
add
and
lods
fidivl
popf
pop
xlat
dec
mov
sub
shll
cmp
into
jmp
xlat
mov
adc
sub
cmc
add
in
xchg
sub
push
mov
adc
mov
imul
jl
xchg
xchg
sbb
dec
sti
rclb
jae
and
loope
cmp
push
adc
lds
ja
mov
imul
jae
dec
sub
stos
push
negl
adc
push
adc
and
mov
push
jo
cmpsb
adcl
xchg
inc
jmp
xor
add
jnp
test
mov
inc
and
mov
sbb
pop
out
fldcw
add
adc
fwait
pop
lret
not
xor
cmpsl
push
or
dec
mov
xlat
cmp
stc
mov
loopne
cs
imul
pop
or
mov
xor
mov
jnp
dec
mov
lret
inc
sbb
pusha
lods
pop
xor
cld
mov
sahf
push
jno
testb
stos
push
out
testb
xor
test
sahf
xor
popf
adc
xchg
and
lea
loopne
mov
movsl
cwtl
mov
add
inc
cld
dec
repnz
mov
cmp
aaa
sbb
dec
andb
pop
ljmp
lods
in
jle
jl
lods
add
mov
pop
imul
jno
xchg
hlt
sbb
stc
insb
push
mov
add
and
dec
pop
int3
enter
jb
cmpb
outsb
mov
lods
pop
iret
sbb
sbb
fcmovb
arpl
jl
inc
nop
jns
pop
inc
pop
cmc
sbb
nop
mov
pop
add
and
xchg
ds
mov
in
pop
sbb
cmp
jo
cmpsl
jbe
xor
jnp
xor
dec
fiadds
test
push
repnz
dec
push
pop
pop
rorb
inc
ja
cltd
sti
insl
cmpsb
and
mov
stc
scas
mul
or
push
fldl
shll
cmpl
sbb
pop
mov
lcall
mov
or
inc
int
xlat
cwtl
das
xor
jg
pop
es
mov
mov
sahf
sti
xor
sahf
xchg
jg
xor
fisubrl
ljmp
mov
std
cltd
xor
test
mov
fbstp
dec
clc
pop
xchg
adc
lods
push
mov
add
push
or
in
dec
aam
sbb
or
outsb
dec
out
xor
xor
scas
addr16
add
addr16
pop
test
and
cmp
add
adc
sbb
sbb
mov
shrl
leave
lcall
dec
xchg
push
pop
and
f2xm1
xchg
minps
dec
hlt
dec
int
fdivs
inc
lcall
stos
pop
pop
lret
mov
pop
push
mov
cli
rcr
and
outsl
and
loop
mov
into
in
inc
aam
loopne
leave
or
rclb
bound
popf
cmc
and
daa
mov
outsl
jecxz
repnz
loop
push
stos
imul
repnz
out
enter
repnz
dec
cmp
xchg
xor
out
mov
loopne
adc
sub
inc
jbe
add
and
and
hlt
lock
das
add
mov
test
mov
or
adc
jnp
ds
test
out
add
add
mov
out
out
repnz
lea
pop
sbb
cmc
imul
mov
std
rcl
insb
stos
xchg
push
arpl
ss
cmpsb
sahf
xchg
push
aas
ss
insl
ja
add
dec
fstpl
dec
loopne
xchg
xchg
in
out
repnz
cmp
inc
outsl
iret
nop
sbb
idiv
sti
ja
xor
adc
out
cmp
pusha
subl
cmp
mov
lock
or
sub
lods
mov
xchg
setno
sbb
mov
adc
sahf
outsl
jge,pn
pop
dec
mov
rcr
cld
jecxz
cld
test
popf
inc
pop
out
dec
mov
in
mov
push
iret
ds
jp
insl
inc
mov
clc
push
aaa
clc
jb
clc
scas
xlat
mov
repz
xorb
push
cmp
push
push
ss
xor
test
pusha
and
fbld
das
xchg
pop
inc
outsb
push
pop
popa
sub
addr16
addr16
test
mov
jb
push
sbb
es
ret
loope
sbb
mov
cmp
xlat
push
outsb
incl
aaa
push
ja
lcall
fimuls
sub
or
into
adc
fbstp
scas
div
cli
popa
xor
inc
cmp
jge,pt
jns
rcll
jbe
addr16
cmp
subb
push
ret
add
fisttpl
jmp
mov
jecxz
and
cld
xlat
rcl
cmp
std
mov
sub
pop
mov
sbb
or
lcall
xchg
or
call
dec
std
popf
scas
aaa
xor
lahf
jne
pop
dec
inc
ficoms
add
ljmp
insl
lock
dec
and
sbb
mov
mov
push
aad
mov
data16
pop
mov
ret
mov
das
scas
sahf
jp
sbb
out
sbb
cmpsl
cmp
push
orl
ret
jae
jle
xor
push
sbb
xchg
out
fdivrl
pop
les
mov
xor
loope
stos
fnstenv
push
xor
mov
mov
rcrb
dec
sub
sar
mov
sbb
mov
lds
loope
mov
imul
lret
lret
xor
sub
rclb
loop
inc
fldt
and
sbb
pop
imul
pop
outsl
outsl
movsl
jae
sub
pop
cld
mov
push
in
sub
xor
inc
sarb
movsl
push
cli
dec
jle
pop
sbb
call
std
popf
xchg
std
mov
jp
inc
cmp
xchg
leave
shll
xlat
mov
rcr
mov
dec
push
out
dec
mov
in
push
ds
adc
dec
cmp
in
jns
mov
mov
movups
sub
shrb
xorb
jb
movl
inc
fbstp
xor
add
leave
lcall
jbe
and
dec
xchg
mov
hlt
aam
outsb
push
icebp
incl
push
fsubrp
dec
xchg
cmc
jnp
lret
aas
es
mov
loope
cwtl
filds
cld
aam
stos
xchg
addr16
mov
sub
in
push
and
daa
test
xor
dec
jns
add
push
shrl
or
test
adc
ss
sti
cmp
mov
sbb
scas
jg
rol
add
xor
jb
adc
xorl
sar
cmp
in
pop
xchg
jmp
adc
nop
hlt
fsubs
or
cltd
sub
testl
aad
inc
sbb
inc
cmp
mov
outsb
adc
pop
add
or
mov
and
pop
adc
mov
or
mov
mov
inc
dec
lret
loop
shll
pop
loope
std
in
loopne
ret
enter
pop
lret
and
icebp
and
jl
dec
clc
sbb
cmp
xor
fnsave
cmc
shl
jp
sub
dec
push
cmpb
mov
dec
stc
cs
cmp
cmpsl
insl
inc
gs
mov
sbb
mov
int3
mov
jmp
sbb
sub
test
sub
es
push
mov
jnp
fadds
stos
xchg
push
mov
mov
adc
and
mov
push
sbbl
push
xchg
fcoms
pushf
gs
xor
xchg
pop
scas
fbstp
xchg
adc
leave
add
mov
dec
push
pop
mov
xlat
push
mov
lcall
sarl
bound
inc
push
dec
adc
lock
and
ss
sub
add
test
sar
ss
mov
negb
mov
jle
xchg
insl
sub
icebp
sarb
rcl
insb
fnsave
cwtl
leave
loopne
xorb
into
and
loopne
dec
jp
popf
jg
subl
fldt
pushf
inc
mov
jns
gs
daa
and
ss
imul
aad
imul
addr16
dec
mov
in
pop
stos
cmpsb
leave
sarl
and
mov
mov
xor
les
mov
leave
jns
loop
dec
fcmovnbe
lahf
call
pushf
cmc
in
cmc
and
dec
nop
call
cwtl
xor
sbbl
pcmpeqw
fwait
sbb
cmp
inc
xchg
jns
and
fdivs
aas
adc
xor
mov
nop
or
jns
jns
into
in
clc
fstpl
add
jne
sarl
add
dec
xor
cmp
sub
xchg
cli
pop
mov
cmpsb
sub
lea
push
andb
mov
popa
mov
lock
insl
xor
push
push
pop
lods
stos
mov
pop
jo
rcll
dec
inc
jo
inc
lock
loop
xchg
out
sub
and
sbb
mov
stos
xchg
ret
ret
addb
sahf
lea
out
out
push
push
inc
mov
test
cs
movsl
mov
or
jecxz
add
adc
test
mov
cwtl
inc
les
rcrl
push
divb
xor
pop
xor
sub
dec
shrb
jnp
inc
filds
pushf
sub
mov
cmp
pop
cwtl
add
mov
adc
xchg
test
jmp
lret
cmpsl
ds
ss
pop
loope
and
mov
mov
inc
pop
shrb
xor
sbb
testb
mov
xorl
sbb
popa
imul
insl
loope
mov
cmpsl
int3
push
idivb
or
jb
sub
lret
cwtl
pop
shl
shrl
adc
push
cmp
xchg
and
xor
pusha
sub
cmp
imul
aaa
out
clc
out
cltd
mov
cltd
sub
incb
xor
mov
or
outsb
or
cmp
daa
add
xor
test
lock
add
cltd
call
lcall
subb
pop
aas
loopne
fsub
fwait
and
movsl
ljmp
je
mov
mov
imul
sbbl
mov
sbb
es
aas
cmp
in
pushf
fsubrs
xor
cltd
push
ss
xlat
pop
sub
xor
outsb
add
loope
fdivs
test
cmp
cmp
lock
or
dec
or
lea
adc
and
push
pop
fdivrs
fwait
jnp
sbb
mov
jne
mov
stos
pop
inc
je
xacquire
jle
xor
pop
mov
bound
cmp
dec
aas
ds
lock
daa
push
cmp
lds
add
pop
jns
push
ficoms
sub
sbb
cmpsl
or
dec
sbb
pop
mov
sub
mov
mov
mov
pushf
mov
test
jmp
mov
sub
mov
pop
sub
leave
push
cwtl
add
pusha
aaa
test
ss
cmp
cmp
xchg
xorl
lock
mov
adcl
ljmp
push
daa
xor
in
and
jmp
call
xor
mov
xor
and
dec
dec
adcb
js
lret
clc
and
loopne
cmp
push
bound
jmp
or
mov
push
scas
enter
xchg
dec
xor
out
call
es
and
jmp
les
push
cli
testl
mov
cmc
imul
rolb
insl
or
fisttpl
add
cmc
out
sti
movsb
sar
in
sahf
mov
icebp
test
int
fldenv
xorb
mov
imul
les
jl
mov
push
pop
mov
je
inc
and
mov
pop
add
xchg
leave
outsl
loop
sbb
jno
test
ret
adc
insb
ret
pop
mov
dec
int
sti
cmp
xchg
iret
xlat
add
idivl
jg
clc
scas
or
aas
out
scas
jp
ljmp
xor
aam
mov
pop
mov
and
data16
sub
daa
fadd
jne
aam
fstps
push
test
add
pop
cmp
sub
idivl
jbe
push
dec
lods
and
mov
dec
ret
xor
adc
dec
sub
incb
outsb
inc
out
xor
push
xor
add
ret
out
lahf
jle
lds
push
jo
mov
sub
icebp
or
enter
cmp
shrl
push
sbb
mov
outsb
das
in
in
push
out
aaa
fs
out
lret
clc
test
ret
ja
ret
xor
rclb
pushf
aam
or
outsl
xor
mov
roll
fidivl
fadds
add
mov
adc
popa
or
rol
sub
push
push
dec
test
orb
aad
data16
jmp
cmp
mov
jns
mov
repz
jno
lahf
push
sub
fs
jmp
stos
inc
stos
jno
pop
push
cmp
in
movsb
iret
mov
insl
dec
and
adc
push
or
jne
jb
int3
inc
data16
das
jg
stc
cmp
scas
mov
stos
in
lcall
adc
jmp
call
and
add
outsb
mov
adc
cmp
fldl
jle
fsts
into
dec
scas
add
xchg
add
inc
outsl
out
fcomi
jp
pop
ror
sti
adc
jl
std
adc
or
mov
js
pop
adc
pop
lcall
popa
test
xchg
pop
jp
inc
insb
inc
sub
test
adc
fcmovu
xchg
inc
mov
data16
xor
sti
dec
shll
aas
fstp
in
lods
je
or
inc
push
cs
push
xor
fsin
mov
ret
push
mov
lock
adcl
cmp
push
or
arpl
daa
fcomip
pop
stos
popl
add
jge
adc
xor
stc
xlat
mov
mov
sub
int3
lret
es
cmp
inc
mov
push
adc
xchg
lcall
and
lret
aam
lea
xor
shlb
dec
push
pop
repz
jge
in
mov
cmp
pop
inc
push
xor
adc
cltd
adc
inc
jae
into
push
adc
sbbl
ds
js
inc
cmpsb
mov
sbb
sbb
cmp
xor
xor
mov
inc
jmp
pusha
jnp
xorb
mov
jl
outsl
divb
jl
sub
push
stc
movsb
pop
nop
ljmp
lods
test
mov
cmp
pop
addr16
inc
dec
add
and
xlat
pop
sub
imul
ret
jo
es
adc
shlb
popf
jmp
mov
xchg
push
sub
in
pushf
mov
aaa
mov
inc
mov
dec
or
xchg
aad
dec
sub
and
xor
adc
add
arpl
lcall
in
and
cmpl
jb
xor
cs
push
bound
negb
push
adc
daa
loope
sub
xchg
ret
cmp
mov
jg
lods
pop
fucom
add
push
lock
fwait
dec
sub
jae
xchg
idivl
jg
cli
sbbl
lret
dec
test
sub
das
jbe
outsb
popa
xlat
jbe
aas
call
and
mov
or
lock
mov
mov
push
adc
daa
add
inc
test
cmc
fwait
mov
aam
xor
shll
les
fidivs
mov
shll
sar
addr16
js
dec
inc
push
data16
xor
or
inc
cmp
mov
enter
pop
xchg
in
jmp
ljmp
push
adc
and
aaa
mov
xor
dec
aad
sbbb
out
call
pop
orb
movsl
or
mov
enter
xchg
jne
mov
fsubrs
xchg
push
xor
sahf
mov
stc
shrl
sub
sarb
mov
lcall
in
push
pop
stos
lret
popa
lret
andb
scas
mov
loop
jbe
or
aaa
xor
pop
repz
xor
jmp
mov
mov
fs
fsubrl
mov
lods
push
incb
cld
rolb
out
adc
divb
imull
sar
fsubr
pushf
and
and
cmp
adc
test
daa
or
dec
loopne
jle
inc
loop
fstpl
stos
adc
adc
adc
cmc
dec
jle
xchg
mov
sahf
lock
mov
fnstcw
jl
push
or
mov
mov
leave
push
into
cld
lahf
out
call
insl
je
hlt
cmp
jne
add
in
out
pop
out
cld
cwtl
sar
sbb
xor
clc
movsb
or
sbb
subl
js
sbb
lock
lods
cmp
xchg
sbb
dec
or
xchg
pop
jb
add
fists
test
mov
mov
jl
std
jle
push
mov
inc
ljmp
sbb
xor
mov
iret
adc
mov
push
dec
xor
jnp
jp
sbb
into
int3
out
mov
push
mov
popa
mov
mov
loope
adc
frstor
sbb
ret
jmp
cmp
addr16
test
popa
and
adc
lock
dec
cmp
push
mov
mov
outsb
setae
movsl
ja
cmp
in
scas
dec
inc
adc
pop
popa
out
or
push
pushf
fdivr
dec
adc
sbb
data16
je
pop
inc
xor
push
inc
sbb
scas
cwtl
cmp
xor
mov
mov
mov
enter
cmp
mov
pop
movsb
push
stos
sarl
or
pop
cs
pop
xchg
jbe
cwtl
ss
ficoml
std
outsl
push
repnz
inc
fstps
or
out
sub
imul
je
add
xchg
arpl
std
jae
imul
inc
jmp
pop
xchg
or
or
sbb
lahf
or
pop
mov
inc
in
or
sub
xchg
lret
cltd
dec
cmpsl
mov
dec
sbb
jnp
sbb
rcll
pop
sti
mov
fistpll
add
dec
mov
push
mov
jno
mov
push
negl
sti
aaa
rcr
rcrl
and
or
pop
es
in
out
push
aam
push
cmp
test
lea
andb
fdivl
icebp
xor
pop
add
xchg
jae
pop
adc
or
xchg
fs
push
sub
dec
aaa
jge
pop
jb
out
imulb
fcoml
addr16
test
cwtl
push
lods
lock
hlt
aam
adc
pop
call
pop
sbb
fstl
rorb
test
mov
cmc
sti
js
cmc
cmp
push
inc
movaps
jbe
pusha
push
mov
adc
shlb
leave
cmc
jbe
ret
xor
push
in
imul
push
cmp
ja
or
gs
mov
xchg
loop
jp
outsl
or
int
fnstcw
xchg
xchg
sub
fwait
sbb
stc
adcl
mov
fistpll
inc
dec
outsb
and
int
cli
stc
repnz
and
daa
mov
sahf
pushf
xor
cmpsb
dec
inc
cmp
pusha
mov
sbb
add
dec
sti
jecxz
imul
loop
push
or
jnp
in
jne
xor
xchg
mov
mov
and
adc
pop
sbb
mov
ds
test
xor
out
dec
fsubrp
fwait
mov
or
iret
call
jmp
ss
lret
xchg
dec
fbld
push
ss
adc
rorl
push
dec
pusha
xchg
sub
sbb
xchg
xor
cmpsl
pop
cmp
ja
add
or
rcrl
mov
dec
sarb
daa
fwait
pop
outsb
mov
cmp
in
or
sbb
mov
test
add
iret
repz
imul
cltd
rol
fstl
incl
jl
sub
pusha
ja
lret
stc
mov
sbb
repnz
fnstenv
pop
push
hlt
test
xchg
inc
or
fldenv
insb
imul
movsl
or
fs
cmpsl
in
pop
fildll
add
addb
mov
jl
inc
test
das
out
pop
aad
xor
mov
and
cld
out
sbb
mov
test
mov
hlt
push
aad
mov
and
inc
or
lea
mov
dec
dec
add
adc
aam
push
adc
or
sar
add
daa
xlat
imul
imul
scas
loop
scas
jne
call
or
or
lahf
dec
push
adc
push
rcll
test
sub
and
push
fwait
out
rorl
out
test
popl
fisttpll
js
sti
aam
fnstcw
int3
repz
pusha
jne
mov
lds
sub
rclb
cwtl
fimuls
jp
xor
cmp
adc
mov
sub
outsb
cmp
lods
mov
mov
stos
cwtl
daa
sub
pop
or
add
adc
test
pop
xor
and
sub
xor
shrb
jp
push
adc
push
and
mov
mov
mov
sub
dec
fs
jo
mov
mov
dec
aad
mov
sub
in
mov
pop
outsb
cwtl
mov
or
inc
out
stos
cltd
pop
sub
mov
jge
ficomps
shrb
and
enter
ror
cmpb
xchg
pop
aaa
leave
mov
jae
mov
mov
sbb
mull
xor
js
add
inc
lods
pop
pushf
mov
cmp
inc
imul
cmp
add
pop
pop
xchg
push
nop
push
repz
add
ret
fwait
popa
lods
sub
daa
cmp
pop
fstp
test
dec
pop
jne
adc
das
cltd
jno,pn
sbb
pop
xlat
cld
dec
mov
inc
pop
aaa
movsb
add
out
lcall
inc
jg
xor
jnp
mov
adc
stc
pop
push
inc
xchg
aad
dec
loop
mov
mov
push
pop
iret
ret
aad
int
iret
fdivrp
xchg
jg
adc
or
movsb
push
cli
adc
dec
jo
or
and
jg
in
mov
add
push
sbb
jno
pop
in
lock
roll
enter
mov
or
sbb
arpl
push
loope
cmp
orb
pop
and
out
cld
and
mov
dec
cltd
iret
push
rcrl
movsl
and
xchg
fnsave
and
testb
jecxz
xchg
push
inc
push
fwait
mov
xchg
lcall
mov
scas
dec
and
jp
adc
leave
xchg
mov
cli
int
loopne
lahf
jns
xchg
and
pop
pop
xchg
sti
lock
dec
lock
xorb
xor
sub
or
inc
je
dec
aas
sti
cmpsb
lds
pop
shl
push
fcoms
mov
les
cmp
and
lds
div
sbb
push
xor
mov
adc
out
mov
pop
data16
cmp
jno
push
sahf
or
hlt
lret
enter
icebp
jnp
pop
out
jg
cmp
mov
loopne
jmp
xchg
xlat
call
lret
inc
mov
mov
add
cltd
test
aas
mov
cmp
jecxz
test
xchg
and
out
roll
sub
out
inc
mov
jo
push
cmpl
stos
ret
mov
mov
popa
and
ficoms
adc
icebp
leave
das
ja
subb
dec
xor
scas
inc
push
mov
lods
je
aaa
int
cmp
jns
sub
ss
outsb
cmpsl
dec
sbb
mov
and
orb
sarl
addr16
out
and
imul
test
scas
cmp
xor
sahf
lret
cwtl
or
sarl
shll
repnz
shlb
pop
mov
ss
aad
inc
icebp
jne
ja
push
mov
jp
rcrl
lods
add
fwait
xor
pop
repz
cmp
in
rol
pushf
pop
movsb
fisttpll
loope
cmp
fistpl
pop
cli
pop
rcll
outsb
sub
or
cmp
cs
push
and
cwtl
leave
and
jp
xchg
cmp
sub
and
inc
cli
jns
aad
insb
xchg
push
push
mov
arpl
and
outsb
bound
cs
scas
jae
cmp
loopne
lcall
arpl
pop
notl
dec
adc
setns
mov
cmp
inc
mov
inc
in
in
sar
sahf
jne
testl
mov
iret
xchg
and
xchg
aaa
mov
xor
scas
shl
push
call
sbb
lcall
cmpsl
mov
cmpsl
lret
or
out
mov
fadds
xchg
popf
pusha
ret
gs
out
mov
pop
or
and
sub
adcl
ljmp
or
mov
mov
testb
fs
faddp
outsb
popf
aad
mov
and
fisttpll
push
aas
ss
je
add
addr16
faddp
insl
scas
adc
mov
mov
xchg
int3
cmp
inc
sbb
call
push
int
cmpsb
ret
mov
inc
and
xchg
mov
scas
daa
xor
ja
jl
pop
out
div
or
cmp
mov
mov
push
xor
push
clc
adc
insb
ficoml
add
lret
in
mov
xor
xchg
sbb
stc
mov
sbbw
or
and
fdivr
pusha
inc
dec
inc
mov
add
adc
fstl
push
pop
into
push
dec
int3
fisttpll
ret
jmp
cs
aaa
arpl
ret
out
push
inc
jle
addr16
adc
in
sbb
jae
cld
inc
mov
das
xchg
mov
xchg
out
xchg
xor
movsb
sbb
call
fld
push
movsl
les
mov
je
xor
sahf
rclb
sbb
outsl
push
cmpsl
rep
xchg
mov
roll
pop
xchg
cmpsl
jbe
stos
jns
orb
test
sbb
jge
aas
push
xlat
lcall
cmp
repz
push
add
inc
psubd
ljmp
pop
test
push
mov
aam
add
dec
inc
out
popf
jmp
dec
fs
mov
pop
outsb
mov
push
add
sbb
pop
clc
jle
sub
ss
xchg
mov
inc
push
push
imul
nop
bound
das
sbb
cltd
outsb
xor
dec
iret
add
std
jno
jbe
lds
inc
xchg
fisubrs
cmpsb
mov
ret
jmp
ja
or
push
jbe
pushf
push
pop
pop
sbb
arpl
and
jmp
movsb
bswap
repz
std
cmp
jne
push
sub
mov
push
sub
into
inc
jle
mov
dec
cmp
push
xor
fcompl
xor
push
cmp
lret
fnstsw
and
inc
mov
insb
cld
insb
sti
mov
out
push
data16
push
pop
cltd
sub
movl
mov
insl
push
add
ss
sbb
cld
mov
xchg
sbb
into
insl
adc
pop
fiaddl
aad
icebp
in
mov
mov
mov
mov
stc
pop
sahf
mov
add
sub
dec
jns
sbb
adc
out
in
sbbl
punpcklbw
pusha
insl
pop
and
mov
ss
push
mov
inc
mov
ret
xchg
fldt
cmp
inc
jne
push
mov
sub
jnp
loop
jns
pop
lods
xchg
xchg
sub
add
cmp
sub
push
add
outsl
sbbb
xor
movsl
jbe
fisubl
das
sub
jge
dec
ror
add
mov
push
and
mov
cmpb
es
ds
imul
imul
arpl
lahf
dec
pop
or
jns
stos
loop
mov
mov
fnstcw
dec
mov
dec
loopne
sbbb
arpl
insl
insb
outsl
aaa
push
imul
bound
push
jb
test
sub
rcll
jnp
enter
outsb
xchg
lea
xor
and
xor
jg
sbb
sbb
call
insb
outsl
xor
scas
lods
or
and
pop
sub
add
jp
cmp
clc
lock
test
popa
jns
pop
lods
repz
popf
cmp
add
xchg
add
stos
outsb
jns
fucomip
inc
aas
test
xchg
add
pop
cmpsl
aas
sub
mov
jno
mov
leave
imul
push
xor
repz
dec
push
or
jno
or
and
ret
push
outsl
stos
roll
inc
lea
jnp
ret
mov
jg
and
and
sbbb
mov
adcb
ret
inc
adc
dec
sbb
cmp
inc
imul
les
push
xchg
or
mov
loop
push
push
stos
test
mov
lds
mov
add
cmp
out
push
addr16
mov
test
adc
cmp
mov
mov
js
outsl
in
cmp
sub
cs
or
mov
xchg
ljmp
outsl
int3
adc
xchg
sbb
or
sti
push
push
dec
inc
ss
dec
mov
push
aam
cmp
jmp
mov
aaa
sbb
out
mov
xor
cmp
jg
lret
push
pop
mov
xor
popa
xchg
fists
add
xor
mov
jp
aam
push
xor
push
inc
shlb
pop
jo
mov
pushf
xor
sub
mov
jo
mov
mov
and
mov
cmp
fisubrs
push
dec
ja
arpl
fnsetpm(287
xchg
lea
mov
imul
or
fstp
sub
or
and
sub
mov
scas
fisubrl
in
inc
jbe
jge
mov
mov
test
mov
je
out
mov
jbe
sbb
into
pop
adc
aas
sti
push
int
icebp
les
mov
les
xor
jae
repz
sub
inc
or
imul
add
cmp
in
inc
in
fcompl
lods
filds
mov
cld
pop
mov
ret
jge
or
add
repnz
pop
jno,pt
pop
andl
dec
cmp
loop
dec
sub
xor
mov
mov
shr
jnp
mov
mulb
pop
xchg
add
lret
pop
push
sets
xor
repz
lcall
mov
mov
andl
lock
xor
mov
mov
cli
loope
sbbb
inc
outsl
into
jno
and
sbb
lcall
and
pop
xlat
notb
into
push
pusha
dec
movsl
jg
movsb
in
repz
push
iret
das
cmpb
add
push
movsl
adc
jbe
les
fmuls
xchg
mov
mov
std
pop
daa
and
inc
lret
push
fisttps
in
rorl
in
ret
jmp
jbe
mov
shlb
sub
pop
xchg
xchg
add
cmp
jge
cmp
xchg
test
shld
aam
mov
jle
add
xchg
pushf
cmpsb
in
mov
xchg
cmpsl
or
mov
cmpsl
sbbb
cmp
pop
add
fbstp
test
push
xchg
decb
adc
jge
and
popf
lahf
lock
cmc
mov
push
or
xor
sub
popa
mov
andl
mov
jno
fists
cmp
out
dec
xchg
add
mov
jmp
jecxz
xchg
adc
mov
jp
mov
repz
rolb
jne
scas
xorl
loop
fistpll
cmp
leave
sahf
xchg
lret
loope
jge
std
or
push
dec
rolb
jmp
int
enter
push
push
je
ret
lods
sar
add
mov
adc
push
sarb
fxch
imul
imul
fwait
inc
sbb
add
jmp
mov
push
cmp
pop
stos
bound
mov
mov
push
mov
sti
js
inc
xchg
cli
sbb
inc
mov
xor
clc
iret
adc
sbb
xor
lahf
rol
aam
xchg
sbb
jne
pop
xor
inc
jge
inc
cmpsl
mov
out
outsl
nop
ret
and
add
adc
mov
loopne
pop
adc
jb
mov
in
pop
movsb
mov
inc
dec
jmp
lret
mov
dec
pop
ret
clc
pushf
sub
dec
lock
jno
inc
and
pusha
movsb
pop
xchg
adc
push
pop
push
adc
push
std
pop
iret
repz
sub
ss
push
les
stos
add
and
jno
pop
insl
mov
pop
adc
in
or
xor
push
pusha
sti
in
mov
pop
ja
xchg
insl
rol
pop
insb
adc
mov
xor
popf
imul
movsl
in
sub
adc
mov
jp
arpl
ret
pop
mov
dec
cmp
or
imul
inc
data16
ret
roll
rcrb
xor
stc
in
and
std
push
sub
push
pop
es
mov
inc
shrb
sahf
cmp
mov
je
adc
push
lcall
retw
fld1
jge
sbb
loop
xchg
fcmovnb
mov
jp
xor
xchg
arpl
mov
push
test
ljmp
or
push
push
pop
push
push
push
leave
cmp
loope
xor
scas
mov
arpl
std
jo
jle
aam
jno
xor
cwtl
xchg
adc
pop
cmp
outsl
sub
xlat
inc
int
pop
inc
and
push
lea
jecxz
inc
mov
stos
sti
xchg
push
sbb
lds
pop
sub
push
push
adc
ficoml
shl
pushf
inc
scas
imul
cwtl
loop
clc
arpl
jnp
jo
cmpsb
and
ds
pop
push
stc
fcoms
loop
mov
repz
inc
adc
aas
sbb
mov
lret
xor
addr16
xor
loope
sahf
daa
in
mov
mov
mov
insb
mov
outsl
add
enter
push
sub
stc
idivb
fstpt
xorl
pop
pop
clc
loope
sbb
shrb
imul
sahf
cmp
fcomp
pop
data16
jmp
leave
xor
push
dec
adc
int
sub
push
sub
sub
inc
mov
test
pop
adc
xor
call
mov
adc
sti
mov
xor
inc
into
insb
stc
notb
and
dec
push
push
fistpll
xor
xor
mov
lock
xorl
mov
popa
add
dec
push
add
add
movsl
stos
dec
mov
adc
jb
pop
rorb
jne
movsb
arpl
shr
mov
repz
and
mov
fcmove
in
out
add
mov
pushf
jb
aam
push
inc
orl
out
adc
xor
dec
jmp
ja
pop
adc
inc
data16
out
sub
lock
mov
shl
clc
fbstp
sub
pop
jp
sub
pop
outsl
push
test
jge
push
jns
lcall
pop
dec
aad
fwait
adc
cmp
iret
push
loop
xchg
jge
mov
loop
jl
sbb
jo
sub
idivl
out
inc
pop
aas
cmp
jl
es
dec
icebp
add
dec
fwait
xlat
dec
xchg
cmpsb
jle
sbb
mov
dec
in
stc
addr16
adc
pop
inc
rolb
inc
adcl
hlt
outsl
jne
inc
sbb
pop
cmp
test
and
nop
sbb
fmull
das
daa
or
pusha
inc
sbb
inc
mov
push
ja
cmp
dec
xchg
pop
xchg
push
mov
xchg
mov
mov
mov
leave
and
mov
xlat
bound
jle
sub
mov
inc
cmp
shr
jmp
test
stos
mov
jg
lahf
enter
sub
orb
jge
mov
movsl
cli
jp
out
mov
dec
cwtl
out
rcr
pusha
add
insl
and
fcmovbe
jbe
mov
imulb
sub
std
push
inc
test
add
subb
jno
xor
icebp
inc
jecxz
fcompl
xchg
mov
jo
dec
ficoml
pop
jbe
loope
sahf
shl
sub
or
lods
cld
inc
maskmovq
testl
lahf
cmp
ljmpw
das
call
fs
orb
lods
out
test
movsl
add
insb
xor
jae
add
lahf
mov
das
fldcw
nop
xchg
mov
ret
mov
push
pop
iret
sbb
fistpll
loope
push
xor
mov
sbb
mov
andb
mov
js
cld
movsl
mov
cmc
cs
xchg
jge
inc
repnz
add
push
pop
popa
dec
add
xchg
mov
push
dec
pop
movsb
inc
cmp
mov
cs
addr16
pop
xchg
adc
lock
int
push
mov
xchg
inc
dec
iret
imul
xlat
stos
lock
inc
mov
dec
push
dec
scas
pop
add
cmc
or
inc
fsts
shlb
pushf
cmp
ret
lret
sahf
gs
mov
fistpll
sbb
arpl
das
stc
mov
or
xchg
movsl
cwtl
into
cmp
lahf
inc
adc
jo
mov
cwtl
movsb
add
sub
mov
push
lcall
ret
loop
dec
cmp
lods
adc
fld
sbb
lea
clc
cmc
add
inc
dec
lret
jmp
xlat
lock
and
out
add
call
nop
mov
adc
sub
xor
es
insl
xchg
and
insl
xchg
jne
dec
arpl
cmp
dec
popa
rorb
ret
jl
stc
sub
movsl
or
inc
mov
adc
insl
and
mov
movsb
repnz
fwait
repz
cmp
bound
cmp
dec
stos
rol
adc
enter
sbb
jle
out
mov
mov
cmp
fiaddl
outsl
sub
mov
mov
lret
popf
pop
adc
cwtl
inc
mov
sbb
data16
dec
je
data16
mov
xlat
decl
daa
lahf
inc
repnz
scas
pop
dec
pop
stc
sub
add
mov
push
es
jecxz
test
adc
cs
jge
pop
xor
mov
xor
aaa
pop
mov
inc
adc
mov
cmc
xor
xor
push
inc
test
lea
fnstsw
imulb
push
rcl
push
ficoml
dec
out
xchg
sub
or
mov
lods
pop
mov
pusha
cmp
idiv
rol
frstor
ja
fs
pop
jg
or
pop
arpl
loop
std
dec
adc
lret
js
jg
sahf
jo
lret
int3
pop
or
xor
cmp
dec
fwait
lods
in
pushf
icebp
adcl
test
faddl
mov
xor
imul
mov
xor
mov
repnz
pop
testb
fbstp
in
rcrb
jns
inc
lock
and
in
std
xchg
or
in
pop
shl
or
and
lea
lcall
adc
fisubl
add
jnp
pop
nop
adc
shl
jl
hlt
sahf
mov
adc
and
fs
or
shl
aas
cwtl
test
test
adc
testl
iret
inc
sub
faddl
cmpsl
sub
xchg
sub
stc
sbb
cs
cmp
and
stc
cmp
popa
lods
cmp
pop
jl
push
movsl
add
mov
cmp
ss
lock
and
adc
stos
cli
sub
ret
enter
push
push
dec
or
xor
das
lea
push
push
sahf
popf
cmp
and
push
loopne
xchg
jg
loop
push
enter
loopne
and
push
and
call
bound
mov
fs
mov
leave
mov
sbb
sub
dec
cmp
push
cmp
fldcw
xor
mov
adc
pushf
nop
out
xor
xchg
inc
repz
dec
dec
fistpl
lods
repz
fstps
stos
imull
idiv
rorb
mov
xchg
xor
xchg
rorl
mov
std
cmpb
imul
nop
push
adc
or
push
outsb
pop
adc
mov
or
aad
addl
sub
stos
test
repz
pop
ret
fstps
rcrb
dec
fadds
fildll
jmp
sub
pop
rcl
push
cmc
loop
popf
cmp
cmp
mov
enter
mov
cmp
lret
or
jo
or
sub
inc
test
fucomp
inc
lret
in
movl
jne
sub
test
test
push
cmp
mov
mov
push
popf
bound
mov
push
outsl
sub
rcr
add
inc
neg
inc
sbb
jo
lea
jb
ret
in
pop
jmp
jne
xor
shlb
push
or
cld
mov
es
pop
and
nop
mov
jmp
lcall
outsb
and
adc
insl
ja
testl
pop
cmpb
mov
test
arpl
loope
fwait
pop
push
jge
arpl
cmp
push
shlw
fsubrl
imull
sub
xor
lods
pop
fisubrl
mov
out
mov
pushl
movsl
or
movsl
add
scas
xchg
inc
cmpl
rol
dec
xor
arpl
add
or
jge
ljmp
mov
test
pop
loope
rorb
ds
psrad
and
out
inc
test
mov
jae
lock
xchg
leave
sub
mov
push
xchg
cli
sbb
cld
inc
sbb
push
mov
gs
adc
loop
inc
mov
add
xchg
inc
sbb
or
pop
dec
pop
and
mov
pop
xchg
dec
daa
mull
dec
mov
cs
push
cmpsb
adc
xchg
int3
mov
mov
sub
fcom
les
out
and
lcall
lock
call
rcrb
testb
jnp
push
inc
fnstcw
mov
add
inc
lods
lcall
xor
xor
ds
js
popa
sti
es
aaa
enter
lcall
scas
in
lock
and
push
dec
jb,pt
jo
add
mov
pop
jno
mov
mov
ucomiss
sub
and
push
das
xor
mov
jecxz
outsb
add
daa
pop
cmp
cmpsb
pop
jecxz
sbb
add
stos
push
and
mov
or
ret
push
imul
or
cmpsb
test
movsb
mov
mov
lahf
lret
or
xchg
dec
xor
cli
push
inc
lds
cltd
insb
xor
int
hlt
mov
push
rcl
rorl
les
jo
dec
cmp
jle
jle
pusha
pop
cmp
add
adc
popf
aaa
sahf
lcall
push
rcll
ret
fbld
outsl
xor
dec
jl
push
push
dec
xchg
sbb
cmp
fs
jb
idivb
mov
and
std
hlt
int3
ret
aam
add
pop
and
xchg
sub
push
rcrb
push
out
push
sub
pop
mov
inc
ljmp
xor
faddl
jns
rcll
push
fiaddl
mov
lods
movsb
popf
subl
mov
inc
push
outsl
push
adc
xor
in
pop
cmc
shlb
inc
pop
and
xor
xchg
add
add
mov
hlt
addb
test
ret
sub
aam
enter
pop
jge
push
or
aad
push
xchg
lahf
int
xchg
mov
out
gs
mov
dec
or
sub
xchg
mov
hlt
std
sub
fdivp
xor
push
add
outsl
repz
sub
mov
sub
js
roll
mov
jmp
mov
sbbl
mul
out
push
inc
scas
xor
add
mov
mov
add
std
dec
fwait
mov
lahf
stos
pop
addb
pop
test
sub
jnp
mov
lods
push
loop
out
movsb
ss
jl
into
lods
test
insb
aam
push
and
lds
sub
sub
cmpl
jl
xchg
xchg
mov
notl
adc
xor
xor
stc
clc
push
adc
insb
mov
cmp
jmp
fisttps
mov
rclb
jle
push
push
sahf
xor
aad
je
or
push
iret
cmpsb
shl
pop
mov
scas
out
ljmp
mov
fisttpl
mov
outsl
sbb
movsl
pop
fsts
mov
jmp
push
cmp
mov
mov
les
pushf
mov
xchg
dec
pusha
ljmp
mov
inc
imul
iret
movsl
jnp
jmp
inc
or
mov
aam
pop
insl
aaa
stos
aam
lret
data16
and
jno
inc
in
out
rcrl
or
add
lds
out
xchg
mov
push
jb
mov
add
jns
xchg
jbe
or
adc
xchg
das
scas
mov
call
popf
push
or
xchg
dec
std
std
into
mov
jae
je
test
dec
divb
and
lcall
jmp
sbb
lea
mov
orb
loope
pop
adc
xchg
ret
xchg
mov
add
ror
por
loopne
ds
lds
pop
jne
adc
lds
cmc
push
lods
xchg
enter
pop
popa
pop
lods
cmp
pop
addr16
jg
scas
push
pop
pop
into
adc
and
inc
push
jmp
add
jb
in
pop
jno
lahf
and
in
in
xchg
idiv
xor
inc
push
das
or
je
in
sbb
sbb
mov
mov
jb
and
push
mov
xchg
sbb
mov
or
mov
lss
or
pop
jle
fistpll
aaa
loope
lds
pop
mov
and
adc
jg
fsubr
inc
mov
xor
add
and
jo
cld
jecxz
push
xchg
loopne
addr16
cmp
ljmp
dec
mov
push
add
push
xchg
cltd
gs
aas
sub
inc
repnz
xor
push
call
sub
movsl
popa
cld
mov
repz
adc
dec
mov
enter
and
dec
es
enter
lahf
jl
lret
lds
push
dec
sbb
and
je
out
mov
movsb
mov
cmp
jbe
push
in
pop
mov
and
lahf
mov
pop
stos
in
xor
outsl
mov
nop
popf
pop
jns
pop
test
test
fsubrp
ja
fisttps
mov
mov
xlat
das
or
pop
sub
mov
pop
int
lock
cmc
adc
stos
ret
xchg
mov
mov
test
jne
mov
cmpsb
subb
xlat
sub
inc
leave
xchg
int3
pop
mov
push
mov
and
mov
sbb
adc
mov
and
inc
lds
mov
lret
push
mov
fnsave
adc
jo
hlt
or
imul
pushl
sub
cli
pushf
ss
lods
and
mov
test
adc
aas
pop
ja
mov
lret
push
dec
cld
jg
sub
dec
add
das
call
push
mov
addr16
cmpsl
repz
cmp
mov
sahf
sub
int
or
int
inc
xchg
outsb
leave
xor
lods
pop
pusha
outsb
cwtl
clc
adc
push
in
cmp
sarl
sub
in
cmc
stos
mov
sub
daa
aaa
jne
xlat
icebp
cmp
sub
rcll
cmp
out
ret
fsubs
lahf
mov
sub
sbbb
ds
pop
in
stos
test
pop
js
lcall
sub
gs
clc
and
mov
jl
test
aad
hlt
mov
jae
adc
nop
inc
insl
cmc
sahf
xchg
sti
fildl
jb
push
icebp
sahf
pop
lds
cmp
out
push
push
lret
decb
or
dec
scas
mov
testb
cld
push
out
imul
inc
adc
aas
aam
clc
add
jge
les
ljmp
hlt
xchg
sub
movsl
cmovnp
dec
dec
xchg
sub
ss
jae
dec
xor
jmp
jp
leave
std
jb
imul
mov
push
pushf
ds
movsb
pop
mov
out
mov
enter
mov
loop
xchg
pop
pusha
xchg
ljmp
xor
bound
add
or
push
xchg
mov
mov
push
iret
xchg
mov
cmpsl
decl
and
jbe
sbb
inc
xchg
test
jns
jle
rorb
imul
leave
fadds
mov
faddl
loope
sub
mov
jmp
push
clc
mov
orl
mov
in
js
and
test
add
jo
mov
addr16
pop
jnp
mov
test
addr16
or
rcll
push
cmpb
js
xchg
stos
sbb
or
sti
ljmp
push
or
shlb
mov
pop
subb
insl
xor
push
cltd
jl
int
xchg
fmull
sub
jge
fdivrs
out
mov
cmpsb
les
popa
popf
xchg
jge
mov
and
push
adc
pop
xor
test
in
adc
add
gs
ja
dec
fs
pop
andb
adc
inc
cs
popa
mov
mov
pop
ss
jno
fcmove
or
ret
in
popf
xchg
in
dec
cltd
into
add
divb
sbb
into
and
in
sbbb
frstor
xchg
or
rclb
xchg
dec
sbb
cmc
cld
sbb
and
xchg
int
cs
dec
sarb
xchg
and
or
add
mov
cmp
or
mov
inc
push
cmp
inc
cmp
outsl
in
lock
imul
sub
pop
aaa
lahf
push
adc
pop
leave
xchg
inc
aaa
xlat
mov
test
repnz
std
sub
dec
scas
sahf
inc
lods
inc
dec
lret
aas
and
or
dec
cwtl
and
fs
push
in
shlb
push
sbb
repnz
cs
aam
aaa
rcrl
push
stc
pop
fildll
push
lock
mov
add
jmp
mov
sbb
scas
pop
jae
jne
clc
add
in
pop
or
sub
rolb
pop
xor
xchg
cmp
sbb
subl
arpl
sub
lahf
fldl
mov
push
aam
mov
fisubs
jns
push
mov
cltd
jg
sub
jmp
ret
jmp
sbb
ret
enter
add
test
push
adc
call
gs
lea
dec
jp
lods
and
repz
cld
sbb
push
loopne
rcl
nop
jg
lods
loope
add
pop
popl
cmpl
push
outsl
cmc
jns
mov
jmp
add
add
lock
xor
hlt
and
mov
dec
mov
loopne
orb
lahf
scas
add
push
xor
icebp
loope
imul
xchg
mov
mov
mov
mov
mov
and
imul
mov
and
shr
sarl
test
out
das
in
pop
cmpsb
xchg
movsl
jge
dec
loop
neg
negl
bound
subb
fucomp
pushf
mov
inc
lcall
pop
rorb
and
pop
xchg
inc
xchg
out
loopne
iret
jb
test
mov
sub
add
daa
test
mov
je
push
adcb
lret
nop
xchg
hlt
fbstp
xchg
xor
lods
or
ss
addr16
mov
aad
jo
enter
popf
fucomi
popa
push
sub
mov
scas
mov
dec
mov
dec
jne
dec
stos
adcb
loop
sbb
jmp
std
cwtd
adc
sbb
nop
cmp
mov
xchg
cwtl
sbb
nop
lahf
scas
sub
in
cmovbe
testl
jecxz
push
shlb
xchg
sub
adc
cmp
dec
gs
repnz
repz
dec
push
and
mov
xlat
pop
jno
add
repz
and
xor
pushf
call
sub
pop
pop
cmp
jno
dec
xor
loope
ffreep
pop
ret
lods
into
testl
sbb
leave
data16
dec
lods
call
imull
and
es
jle
mov
pusha
sub
jg
stc
xchg
fsubl
cltd
push
sti
or
cmp
shrl
leave
popf
and
mov
in
sarb
dec
jns
add
pop
sahf
in
es
add
push
adc
pop
mov
fmuls
push
aam
rdtsc
imul
and
dec
sub
xlat
dec
scas
xor
add
inc
inc
jmp
add
ret
xchg
mov
add
iret
sub
mov
ja
dec
cli
ss
push
mov
femms
mov
xor
jnp
cmp
mov
dec
int3
lods
cmpl
sub
and
stc
repz
adc
outsb
add
cwtl
pop
sti
loop
stc
in
shll
dec
jns
fcmovnbe
cmp
and
stos
hlt
cltd
scas
jo
adc
and
cmc
mov
xor
ja
jne
lea
mov
jmp
stos
pushf
sbb
imul
inc
std
cli
inc
adc
shrb
or
ss
add
pop
fsubrl
inc
repz
inc
xchg
sbb
sub
fcoml
jns
rolb
leave
fucomi
nop
xlat
test
pop
ja
pushf
and
test
dec
dec
inc
aaa
jle
lret
jne
sbb
pop
out
in
add
stc
jns
cmp
cli
lock
sbb
or
inc
sti
inc
jbe
lods
add
arpl
push
mov
aam
mov
lods
jmp
push
adc
lahf
loopne
push
dec
rcl
or
jb
fsts
out
push
xchg
and
adc
pop
dec
jns
fdivs
cli
add
shll
std
sbb
push
out
stc
cs
sbb
or
xor
dec
ljmp
ds
mov
jmp
idivl
faddp
push
int3
push
aaa
dec
xor
xchg
ds
cmp
cmp
mov
imul
mov
jns
repnz
or
stc
lahf
pop
mov
faddl
and
jmp
sbb
std
add
sub
or
dec
xlat
int3
jecxz
push
loope
adc
in
mov
dec
xchg
std
add
or
out
adc
lds
loop
sbb
mov
hlt
xchg
sub
mov
push
xchg
mov
out
aam
cmpsl
rcll
nop
movsb
out
xchg
inc
bound
lods
sub
sbb
jmp
cli
xor
stos
test
shlb
push
add
inc
mov
leave
push
fs
pushf
dec
lods
in
loopne
lock
and
leave
pop
pop
jle
adc
dec
push
and
fdivl
pcmpeqd
mov
jne
jne
cld
dec
mov
inc
dec
out
or
mov
add
adc
psubw
jp
in
push
scas
pop
push
in
mov
mov
fnstcw
and
int
ja
int
fucompp
or
outsb
inc
addl
std
mov
inc
cmp
or
mov
inc
pop
xlat
pushf
push
out
or
cmp
add
dec
fcoms
ss
leave
aas
sub
out
rclb
mov
push
jne
data16
fidivrs
ret
dec
lret
push
jae
into
negb
cmpsb
jne
xchg
or
inc
sub
or
cmp
addb
or
push
fisubrl
stos
add
call
imul
sub
je
jp
xor
in
inc
lock
xchg
lds
jae
mov
or
nop
cwtl
fdivl
mov
and
test
inc
inc
or
xor
lods
insb
scas
enter
dec
imul
hlt
mov
adc
insl
xchg
mov
pushf
insb
fsubrl
add
mov
iret
mov
sti
cmc
pop
movsl
mov
sub
xor
lcall
dec
scas
ficompl
or
mov
ret
fdivl
push
or
arpl
lods
sub
xchg
xor
out
in
sti
mov
lods
lret
aad
jns
dec
or
push
or
popl
xchg
movsb
push
sub
int
xor
sbb
inc
insb
jb
push
dec
xchg
test
imul
repnz
fs
sub
pop
add
jne
pop
cmc
or
cmpb
xor
negl
pusha
xor
shrb
aad
pop
dec
inc
mov
push
pop
inc
push
fldl
mov
or
mov
leave
subl
mov
cs
lods
pushf
jecxz
pop
fnstsw
jbe
push
mov
les
inc
hlt
outsb
or
mov
sbb
mov
fstps
aaa
jb
cmp
aad
adc
jp
fsubrs
ffree
cmp
ss
jns
cmp
daa
dec
repnz
sub
fstl
insb
and
movsb
call
mov
aad
jns
jle
repnz
je
cmp
xorw
push
lods
stos
add
push
pushl
shr
aaa
xchg
push
add
xor
loopne
push
ret
repnz
xlat
dec
fucomi
add
dec
cli
lea
xor
inc
insl
pop
xchg
pop
out
cmp
inc
dec
into
mov
push
inc
dec
pop
xor
dec
lock
ret
mov
aad
sbb
shll
mov
dec
clc
push
bnd
mov
inc
hlt
insl
cli
mov
mov
clc
in
push
test
je
shlb
dec
andps
sub
add
xor
repnz
rol
xchg
sub
iret
pop
pusha
cmp
xchg
ss
mov
push
inc
in
out
int
lods
cmp
ja
out
test
pop
mov
inc
sbb
pop
pop
mov
pop
jnp
hlt
fdivl
mov
mov
lret
xor
mov
data16
mov
shlb
out
imul
je
dec
inc
gs
and
imul
arpl
dec
adc
test
push
je
std
imul
and
imul
sub
push
push
or
pop
mov
xchg
jge
jb
fldl
rorb
push
mov
arpl
pop
xor
sub
mov
sub
pop
ret
orb
adc
in
leave
scas
enter
pop
rclb
push
enter
adc
sarl
shlb
sahf
adc
dec
push
push
pop
inc
add
loopne
cmp
ljmp
fwait
mov
lcall
ss
jge
divb
push
dec
mov
mov
xchg
xchg
sbb
jl
aaa
xchg
ds
sbb
insb
mov
or
push
mov
cmpsl
das
outsb
jns
adc
in
mov
mov
loopne
js
jns
dec
mov
sub
into
std
outsl
dec
xor
loopne
adc
jns
mov
leave
mov
mov
sub
mov
and
xor
in
out
jmp
repz
inc
pop
or
ror
push
aas
out
xor
mov
and
fdiv
and
xchg
aas
push
rcr
xor
sbb
mov
jno
jb
mov
fbld
out
xchg
fildll
and
cld
sub
cmpsb
or
pop
mov
iret
decl
popa
cmpsb
iret
pop
lcall
cli
icebp
in
adc
jg
dec
jb
mov
sub
inc
jp
dec
out
xor
mov
arpl
addr16
pop
fwait
sahf
sub
mov
mov
dec
jecxz
mov
insb
cmp
ss
daa
pop
and
jbe
jno
jo
stos
mov
frstor
repz
into
movsb
xchg
cmpsb
icebp
sub
psrld
sahf
test
and
sahf
cli
mov
shlb
sub
xchg
call
rcrl
movsl
mov
lahf
push
cmp
xchg
add
sbb
into
push
es
xchg
outsl
pop
mov
fstp
or
or
pop
sbb
pushf
xchg
jge
add
add
aaa
pop
imul
sbb
out
sub
push
pop
out
mov
or
sub
push
fidivrl
lea
ficoml
mov
idiv
mov
or
movsl
pop
faddl
fldln2
mov
jecxz
aaa
adc
jg
clc
pop
lcall
adc
or
imul
repnz
mov
scas
jmp
jae
addl
lret
dec
mov
or
arpl
jecxz
mov
mov
push
adc
push
xlat
data16
xor
pop
stos
cmp
into
cltd
or
lods
and
push
outsb
hlt
adc
js
adc
stos
cltd
sbb
xor
push
mov
add
sub
outsb
xchg
lods
jbe
mov
xchg
xchg
iret
jnp
sub
into
and
xorb
pushf
adc
das
ja
mov
daa
push
sub
mov
out
sti
xchg
push
mov
repz
lcall
movsl
daa
js
imul
and
scas
rcrl
je
in
jbe
mov
xchg
leave
xchg
dec
push
into
push
mov
pop
out
les
inc
repnz
fcompl
cmc
adcl
push
inc
rcrb
mov
or
mov
fistl
fdivs
fsubrl
and
lock
or
loop
aad
ja
sub
dec
cwtl
stos
push
call
mov
or
jmp
cmp
jecxz
ficompl
and
jne
mov
lret
push
stos
flds
addl
aad
dec
ret
lahf
adc
in
lret
push
pusha
mov
push
lods
cmp
xor
dec
mov
andl
add
mov
or
aas
hlt
fsubs
pop
andb
xor
loope
pushf
lods
ret
jo
call
fistps
loope
push
icebp
dec
sarb
cmp
jb
mov
pop
movsb
shll
jle
inc
adc
adc
push
inc
loopne
pushf
mov
xchg
xorb
int
xor
adc
add
xchg
sub
mov
addr16
popa
fldl
push
mov
adc
jae
or
shrl
std
insl
mov
pop
pop
fiadds
gs
mov
lret
outsb
xchg
xchg
pop
dec
and
xchg
sti
nop
push
mov
orb
fstps
pop
stc
add
jmp
xchg
jno
hlt
repz
pop
data16
scas
xor
cmp
cwtl
mov
xor
ljmp
jbe
test
loopne
fbld
mov
lods
dec
pop
cmp
test
or
shr
xlat
out
mov
cmpsl
cld
dec
xlat
push
aaa
xchg
insb
enter
or
imul
dec
or
jb
xchg
push
imul
outsl
ljmp
js
insl
sub
xor
ds
xlat
cmp
jbe
or
outsl
pop
add
aas
pushf
jo
jbe
lods
stc
pop
mov
jbe
fnstcw
sbb
xor
leave
jo
lods
and
fdivs
cli
or
pop
fwait
stos
pop
pop
lahf
pushf
mov
jnp
xor
std
icebp
out
les
mov
or
xchg
dec
insb
cwtl
cmova
or
pop
gs
fdivl
and
adc
inc
add
in
repz
lock
arpl
je
fsub
xchg
mov
pop
insl
das
push
push
call
dec
dec
push
mov
mov
push
jns
lds
cmp
movb
stos
in
mov
push
dec
add
clc
adc
in
cmp
sbb
or
mov
push
mov
insb
js
adcb
mov
sbb
push
aad
mov
gs
adc
xchg
xchg
dec
adc
jmp
jle
movsb
inc
in
sbb
inc
loop
js
mov
test
jnp
xchg
out
int
mov
pop
lcall
lods
jg
test
out
lods
scas
adc
cltd
pop
out
jbe
xor
std
inc
pop
bnd
jb
movsb
pop
inc
mov
inc
mov
movsb
mov
cltd
ficoms
adc
mov
pop
or
out
mov
test
gs
mov
clc
stos
cli
imul
adc
xor
out
jl
cwtl
out
xlat
pop
push
lcall
bnd
push
rcpps
daa
fistps
push
or
pushf
pop
lahf
aam
mul
push
mov
inc
cmpsl
push
popf
mov
sub
dec
repnz
lret
loop
dec
repz
lahf
cli
imul
ljmp
add
inc
call
subb
sti
push
testl
cmp
out
push
cmp
fisttpll
adc
jo
push
inc
or
dec
mov
je
mov
push
out
mov
cs
mov
mov
push
cmpsl
in
fdivs
test
fidivl
mov
cltd
outsl
out
mov
pop
xor
jp
add
and
iret
loope
mov
mov
loopne
mov
mov
mov
rol
rcr
cmp
xchg
push
jbe
or
outsb
movsl
shlb
xchg
fsqrt
cld
mov
inc
add
clc
push
mov
aas
pop
clc
adc
mov
sbb
or
lods
jp
mov
jo
inc
aas
mov
and
filds
xor
jnp
pusha
xchg
leave
es
int3
sbb
add
dec
mov
dec
mull
out
out
imul
mov
shl
sbb
or
rorb
xlat
sub
insl
adc
adc
add
push
les
dec
stc
sbb
ror
xchg
aam
add
orl
jnp
xchg
dec
push
in
dec
sub
call
test
out
scas
or
mov
mov
fbstp
sahf
nop
xlat
lea
xchg
mov
jnp
mov
inc
push
pop
sbb
divl
cmp
pushw
jp
sub
push
ds
dec
je
jne
ret
jne
add
fnstsw
popa
movsb
xchg
xchg
xor
jmp
adc
xchg
popf
jg
popa
jle
xchg
or
stos
loope
xchg
jno
add
xchg
dec
inc
cmp
jl
sarb
mov
stos
pop
std
movb
rorl
push
jp
jnp
adc
adc
fstpt
pop
popa
sbb
test
sbb
adc
clc
push
add
dec
insb
mov
mov
mov
je
cltd
cli
lcall
sbb
xlat
in
scas
add
push
lock
dec
shll
sub
xor
in
ret
jno
ss
mov
mov
dec
syscall
call
sti
lods
push
imul
mov
jb
xor
movsl
inc
mov
clc
lcall
cmc
aas
xorb
adc
daa
mov
mov
popa
out
into
jo
adc
mov
dec
cmp
or
pop
sub
aas
jmp
mov
stos
mov
inc
push
push
xor
cmpb
sub
jmp
jne
clc
int
div
stos
pop
lods
movsb
mov
pop
fmul
xor
add
sbbb
cli
repnz
pop
dec
jno
ljmp
mov
xor
rol
xor
xor
pop
mov
or
cmp
pop
inc
loopne
jg
mov
addb
loope
jb
add
cmc
movsb
push
adc
push
sub
sbb
nop
scas
sbb
mov
outsb
mov
add
xor
test
dec
mov
mov
lret
push
add
mov
scas
xchg
fs
adc
mov
movsb
repnz
ds
fisttpll
mov
sbb
cmpsb
repnz
inc
fmulp
pop
mov
stc
in
sbb
pop
jns
lret
jae
or
cmp
cmp
sbb
push
sub
in
enter
push
pusha
inc
adc
and
gs
in
inc
xchg
jp
add
push
dec
in
adc
and
inc
movsl
ljmp
jae
jmp
pusha
jl
pop
xor
adc
imul
mov
mov
test
fistpll
test
jl
inc
iret
stos
push
mov
testl
jl
cmp
xlat
cmp
add
icebp
push
mov
sbb
inc
ret
lods
mov
out
jno
popf
testl
cmp
push
and
bound
loope
dec
mov
data16
dec
xor
in
or
das
push
mov
aas
sbb
inc
mov
test
jne
aaa
jb
mov
sti
lcall
lret
stos
test
fldcw
push
in
ret
xchg
lret
cmovne
stos
push
loop
in
push
sahf
call
inc
add
mov
xchg
sbb
rcll
out
inc
dec
cwtl
fwait
inc
jno
js
aam
scas
lret
outsb
fildll
adc
std
push
out
mov
insl
std
orl
and
out
movsb
sbb
jo
mov
xor
jno
ja
inc
outsb
aam
pop
mov
scas
push
cmpl
mov
adc
inc
scas
add
lea
add
push
lods
jmp
in
jo
in
pusha
xchg
rorl
add
jne
jae
pop
jnp
cmp
sti
lcall
mov
inc
cmp
nop
scas
xor
repnz
ss
out
add
adc
xor
jecxz
movsl
mov
inc
pop
xchg
outsl
or
sti
shll
cltd
lahf
in
leave
mov
push
adc
and
push
pop
fs
shlb
imulb
imul
or
pop
aad
lahf
jecxz
nop
loope
leave
testl
out
xor
add
scas
arpl
inc
movsb
push
xor
sub
rcrb
push
test
mov
je
sub
jecxz
test
push
mov
mov
adc
test
ret
mov
pop
xchg
cmp
push
jbe
pop
movsb
fdivrl
and
jne
jns
js
lret
out
in
adcl
or
inc
fnstcw
mov
cmp
sbb
pop
outsl
mov
aaa
push
mov
sub
push
mov
cmp
jle
ja
es
lahf
sahf
leave
jp
pop
cmp
cltd
cmp
push
divb
xchg
cmpb
push
jnp
cmp
mov
mov
addr16
add
and
xlat
adc
aas
out
jne
imul
sub
incl
mov
jne
dec
test
loopne
xor
pop
add
or
dec
pop
mov
push
cltd
sub
xor
xchg
xchg
or
and
shl
inc
xor
out
add
xchg
xchg
push
jl
test
andl
dec
cli
imul
dec
das
or
rcll
jle
push
add
jmp
mov
mov
subl
cmp
add
je
push
jl
test
inc
js
rcrl
cmp
jne
inc
rcrl
cmp
stc
scas
pop
xchg
int3
inc
xlat
add
push
jle
xchg
push
pop
popf
mov
lea
gs
inc
xor
lret
outsb
out
inc
pop
outsl
or
loopne
lock
je
jnp
mov
or
ret
hlt
loopne
call
push
sbb
cmpsl
mov
stos
pop
js
rcrl
pop
je
fldl
mov
inc
and
or
lret
icebp
addr16
or
in
rcrl
fnstcw
xchg
aas
daa
pop
sub
fldl2t
ret
xor
popa
jo
inc
push
outsl
sub
jecxz
movsl
push
lds
shlb
sub
xor
xor
push
push
faddl
popl
into
out
push
fldenv
or
nop
gs
cmp
inc
sar
dec
ljmp
sarb
lds
push
xor
pop
notb
scas
cmp
push
mov
aaa
sub
data16
mov
pop
ljmp
dec
jo
orl
add
data16
cmpsb
mov
jne
cmp
repnz
repnz
lea
inc
sbb
mov
sbb
aaa
insb
adc
push
inc
xchg
pop
fsub
inc
arpl
test
lods
push
push
xor
sub
sbb
int3
stos
pop
push
repnz
push
cmp
pop
add
popl
push
movsl
xor
cmpsb
test
int
jb
pop
inc
pusha
inc
repz
popa
adc
fsubs
fisubrl
lods
adc
idivl
and
mull
daa
cmpsl
fstpl
xchg
mov
adc
push
test
mov
pushf
repz
loopne
jbe
add
jecxz
enter
insb
data16
add
ljmp
fadds
sbb
lret
in
dec
adc
and
push
out
jmp
push
push
fistpl
cmp
int3
cmp
fistps
hlt
xor
cmp
mov
sub
and
out
xlat
scas
in
sahf
lea
mov
xchg
inc
subb
shr
lret
mov
loope
xor
lods
mov
cmp
scas
dec
les
js
push
js
ret
subb
xorb
dec
push
rolb
or
mov
outsb
cwtl
and
inc
fwait
mov
pop
mov
repz
mov
pop
xor
mov
or
cld
stc
enter
fidivs
lods
mov
jae
mov
jmp
mov
insl
xchg
sbb
xor
sub
aas
lods
xchg
test
insl
aas
xor
ds
sti
test
cld
add
rcrl
cmp
and
lods
mov
insb
fwait
cltd
mov
and
sar
cmp
and
jge
and
push
cwtl
pop
ss
rep
ret
cmp
or
sub
xchg
mov
mov
jno
bound
cmpb
xchg
pushf
fwait
ret
cmp
jg
ljmp
pushf
test
add
fldt
xchg
jnp
push
mov
mov
flds
cmc
test
xchg
imul
mov
jne
mull
sub
mov
dec
jnp
xchg
xchg
mov
adcb
jb
imull
fstl
loope
mov
inc
mov
dec
push
test
enter
loop
cmp
dec
sub
dec
push
sub
or
or
aas
xlat
stc
mov
xor
sub
lahf
dec
inc
xlat
jo
pop
dec
pop
jbe
mov
or
mov
aad
push
or
fwait
mov
or
adc
cmpsb
mov
push
sbb
andb
xor
inc
xchg
dec
sbb
push
jno
loope
cmp
popf
xchg
ljmp
mov
call
sbb
lds
insl
pusha
inc
add
pop
sub
ljmp
psllq
xor
adc
or
mov
aaa
ss
shlb
shlb
dec
xchg
pushf
in
push
mov
lret
and
int
out
cmpsl
mov
fldt
jge
pop
push
mov
js
cmp
mov
outsb
lock
xorb
es
out
xlat
xchg
xsha1
cmpsb
mov
int3
outsl
dec
jl
ret
adc
xchg
mov
shlb
and
popa
cwtl
mov
int
repnz
push
loope
js
stos
cmpsl
jl
xorb
test
sbb
mov
xchg
ljmp
mov
fidivl
pushf
adc
test
push
hlt
and
lret
mov
dec
cwtl
push
mov
jne
gs
or
sbbl
inc
or
mov
lahf
jae
and
out
mov
into
jno
aaa
jb
fmul
jle
icebp
xor
test
mov
sub
call
add
add
jle
cmp
sti
jecxz
je
lcall
or
pop
movsb
sub
and
or
cld
add
fs
negb
loopne
lcall
test
mov
xorps
xor
aam
imul
pop
jne
in
jl
add
pusha
pop
xor
push
enter
xlat
mov
imul
xchg
xchg
jbe
lods
lods
int
dec
repnz
daa
mov
mov
add
cltd
arpl
mov
rclb
xor
out
mov
dec
lds
lret
inc
jnp
mov
lahf
adc
push
pop
mov
cmp
fcmovu
inc
lds
leave
stos
enter
fisttpl
mov
in
dec
es
sub
sbb
sarb
dec
mov
xchg
nop
push
stc
mov
insb
cmp
sub
mov
fistpll
into
lock
pop
outsl
movsl
movsb
orb
ja
xchg
mov
lret
add
push
sub
rcrb
xor
les
shrl
inc
mov
in
mov
xchg
dec
jmp
add
lret
inc
mov
push
xor
int
xchg
push
pop
int
sahf
xchg
jecxz
pusha
pop
pop
rorl
cmp
mov
add
fcoml
push
mov
testb
adc
stos
lret
in
popa
js
mov
call
fidivs
xchg
xor
lahf
cmp
inc
ja
incl
push
mov
mov
les
or
push
sbbb
loopne
jno
stos
movsl
inc
dec
cmp
bound
mov
scas
outsl
sahf
xor
inc
adc
mov
cmp
or
in
and
pop
enter
sbb
mov
mov
inc
cmc
sbb
mov
jecxz
sub
fsub
mov
jae
movsl
push
add
xbegin
jl
dec
aas
sarb
sub
fld
pop
adc
cmp
daa
repnz
leave
popa
add
xchg
movsb
jno
xor
add
mov
out
add
lods
xchg
fucomp
jmp
cltd
rdmsr
xlat
imul
sub
push
aaa
add
test
fildll
loopne
repnz
add
mov
fsubs
jmp
xlat
pop
add
mov
and
int
cli
rcll
ror
js
leave
dec
out
xchg
sub
test
xchg
push
out
pusha
iret
test
dec
lods
jl,pn
cmp
mov
lcall
mov
dec
xor
sbb
js
dec
gs
rcll
sbb
mov
xor
sub
repnz
hlt
mov
xchg
adc
pushf
sbb
ficoml
leave
in
fwait
add
lds
dec
test
mov
mov
mov
adc
dec
in
jbe
pop
cmp
test
fisttpl
cmp
gs
call
in
add
sub
jmp
insl
jge
adc
push
lret
jno
icebp
pop
jo
outsb
mov
int
cs
roll
lcall
add
mov
divb
sti
int3
mov
push
shl
xlat
and
push
adcb
js
jp
xor
dec
and
aaa
cmp
push
pop
inc
mov
lret
mov
stc
leave
jge
mov
mov
mov
mov
dec
push
int
sub
xor
jp
mov
pop
je
in
outsb
inc
out
mov
es
push
and
loop
inc
cmpsb
insb
jmp
jl
cmp
inc
jns
xchg
imul
and
lahf
or
mov
les
lea
or
push
les
arpl
sti
popa
je
sub
shll
cmpsb
lods
or
out
aad
dec
in
or
and
sbb
rolb
pop
pop
pop
add
aam
cmc
call
in
sbb
mov
sarl
sub
std
add
mov
cmp
das
aam
xchg
cmp
inc
stos
and
fidivrl
xchg
test
leave
jg
cmpl
xchg
xorb
nop
xor
or
scas
cmc
xchg
sbb
int
fidivs
pop
adcl
outsl
sbb
ret
push
lret
pop
pop
dec
js
out
out
out
fistps
mov
mov
ds
out
cmpb
fistpll
mov
xchg
sbb
mov
mov
sahf
dec
aaa
in
in
lods
pop
daa
mov
dec
aam
insb
xchg
add
dec
or
cmpsl
push
enter
push
adc
psllq
call
pop
shrb
out
mov
fs
mov
orl
adc
adcl
pop
pop
repz
fildll
into
stos
cwtl
ljmp
ret
xor
jg
or
sub
xchg
jmp
loope
adc
pop
movsl
icebp
sbb
fdivl
push
push
aam
popf
pop
mov
xlat
inc
seta
clc
mov
cmc
inc
cmp
mov
add
add
insl
xlat
add
jne
gs
fiaddl
cmp
jno
inc
xchg
cmpsl
nop
cmpsb
es
push
gs
shrb
xlat
dec
mov
lods
xchg
dec
shrl
push
pop
xchg
inc
cmp
data16
and
cmp
inc
popa
jge
push
xor
test
icebp
mov
imulb
mov
fstpl
xchg
dec
test
repnz
pop
repz
dec
add
push
test
hlt
test
inc
add
insl
sbb
pop
add
adc
mov
pop
rolb
dec
cmp
lock
mov
insb
or
xlat
cmp
out
sti
rorl
sub
push
and
add
and
adc
outsb
mov
scas
dec
or
adc
jecxz
in
xor
shl
iret
jmp
or
mov
loopne
inc
lds
cli
pop
and
mov
arpl
roll
and
jo
roll
and
push
lret
push
mov
lea
mov
and
xor
bound
fwait
popa
and
xor
punpckhdq
fwait
in
popa
mov
mov
in
push
and
inc
jmp
jp
call
inc
aam
sub
in
add
rcrb
ret
shll
in
adc
idiv
xchg
shll
sub
push
filds
fstpt
arpl
sbb
stos
jg
nop
loop
cmp
mov
jne
rcrl
xchg
or
outsl
sbb
inc
dec
mov
outsl
mov
jmp
mov
mov
idiv
and
cmp
rcll
aaa
scas
push
cmp
xchg
xor
int
sbbb
and
push
icebp
sti
pop
inc
inc
cmp
aam
fimull
fwait
es
imul
xor
scas
push
lret
mov
aad
das
pop
out
fnstcw
mov
repz
hlt
repz
iret
mov
push
inc
bound
inc
push
pop
xchg
imul
fs
fwait
cli
push
inc
push
xchg
lds
stos
call
ss
mov
mov
mov
mov
inc
cmpsl
pop
and
push
or
jns
pop
xchg
loope
jbe
dec
xor
clc
push
popf
pop
es
or
mov
push
mov
mov
movsl
dec
or
or
jno
mov
xchg
adc
lcall
pop
sarl
xchg
mov
xor
mov
adc
loopne
dec
pop
mov
add
cltd
pop
mov
mov
popa
scas
stos
fisubs
push
pop
and
scas
or
and
dec
orl
scas
aas
sub
mov
js
xchg
mov
lods
imul
sub
and
ljmp
or
pusha
cwtl
adc
mov
adc
mov
into
ret
inc
out
fsubp
sbb
test
xchg
stc
push
sbb
sub
adc
mov
lods
sbb
adc
orl
inc
inc
testl
pop
test
adc
dec
adc
aaa
xchg
lea
inc
loop
mov
jle
js
mov
push
sub
add
addb
andb
das
xor
aam
cltd
cld
or
cltd
sbb
jg
mov
leave
in
rolb
inc
push
add
mov
pop
push
mov
add
lods
jg
in
lods
in
loope
xlat
sub
inc
movsb
push
xchg
cli
aam
add
mov
xor
pop
dec
and
jle
popf
pop
jge
cmp
adc
jge
jae
and
mov
clc
sub
mov
xor
mov
mov
and
adc
data16
loope
push
pop
arpl
repnz
jns
dec
adc
mov
inc
repnz
dec
mov
xchg
lock
adc
ljmp
mov
cmp
pusha
movsl
out
add
adc
adc
mov
lds
cmpsl
sbb
xchg
shll
pop
jle
pop
or
bound
inc
test
testb
mov
and
mov
dec
jns
movups
jmp
out
xchg
xchg
inc
add
movsb
cmp
mov
mov
mov
mov
icebp
js
mov
cmp
adc
xor
mov
mov
dec
mov
call
test
mov
xor
xchg
stos
add
rcl
jmp
sbb
cmp
rorl
inc
jnp
fcomps
in
sbb
fstl
sbb
aaa
call
push
jnp
and
inc
and
dec
push
mov
push
sbb
insl
add
add
lret
fstl
popa
rorb
adc
and
jns
pop
imul
or
xchg
xchg
mov
std
test
cmpsb
dec
push
sub
dec
push
es
fcmovnb
add
addr16
mov
imul
mov
movsl
repz
stc
xchg
jmp
cwtl
int
cwtl
push
mov
pop
out
xor
jbe
jge
inc
jmp
int3
adc
sub
inc
mov
jns
jmp
jns
jle
pop
outsb
mov
in
or
dec
pop
inc
das
fdivl
fmul
pop
adc
xchg
cmpsb
adc
push
xor
sub
add
xor
in
push
arpl
push
and
mov
jp
adc
add
push
dec
mov
jbe
iret
push
cli
ja
loope
dec
fwait
popf
mov
data16
add
mov
or
inc
inc
fidivrs
js
lock
in
or
adc
pusha
mov
lods
sahf
pop
cmpsb
adc
mov
sub
in
cmp
sbb
stos
inc
sahf
sbb
and
je
int
jecxz
add
jge
xchg
sbb
push
sbb
cwtl
lret
mov
rorb
lahf
add
call
or
in
arpl
popa
cmpsl
jbe
or
xorb
or
xchg
jmp
dec
mov
sub
mov
mov
pop
jb
lret
lcall
fucomip
pop
test
push
sub
push
addr16
cmpsl
jmp
aas
ror
push
inc
ja
pop
iret
test
shlb
sub
repz
in
mov
lahf
push
mov
dec
mov
in
pop
insl
lods
fisubs
jmp
mov
mov
adc
sbb
or
jnp
addl
sbb
call
mov
push
clc
sbb
xchg
loop
lods
push
dec
mov
mov
pop
jmp
cmp
cli
xchg
les
clc
sbb
repnz
sbbb
jg
pop
sub
ret
mov
fistpll
xor
cmp
cmpsb
push
jns
jae
dec
ds
sti
mov
sbb
mov
aam
xchg
mov
pop
and
outsb
or
adc
inc
icebp
mov
lods
push
bound
addr16
std
cmp
mulb
cltd
sbb
mov
hlt
mov
lahf
scas
mov
imulb
push
mov
add
pop
lods
sub
dec
adc
sub
inc
mov
mov
jno
cld
push
stos
push
dec
push
xchg
nop
xchg
cmc
loope
pushf
jmp
movsb
xchg
shlb
cmp
cltd
jle
orl
insb
imul
rorl
pop
and
push
sbb
fcompl
and
cmpsl
pop
mov
and
stos
xchg
mov
xlat
or
inc
cmc
dec
mov
dec
hlt
or
xor
out
xor
cld
lods
scas
mov
dec
cmp
cmp
jno
pop
sub
daa
lcall
or
cmp
mov
stos
xchg
pop
pushf
sub
mov
sub
push
das
cli
lret
out
aad
fdivs
adc
cmc
orl
adc
movsl
lock
stc
insl
cmp
je
popf
mov
into
pop
mov
lea
add
dec
inc
push
mov
jne
xchg
and
lock
imul
or
ljmp
jmp
ds
les
inc
cmp
sti
pushf
mov
imul
xor
cmp
push
out
sbb
stc
fiaddl
inc
xor
sbb
call
mov
insb
pop
in
push
sub
in
pop
cmp
cmp
popf
sbb
daa
push
pop
mov
jmp
mull
shll
xchg
addr16
jo
sub
pop
shlb
fcoml
jae
pop
dec
cmp
jns
fcompl
mov
aam
gs
push
inc
lock
jb
lods
mov
pop
addr16
sti
jecxz
mov
pop
ss
lahf
dec
mov
push
addr16
cmc
add
jmp
lds
mov
cmp
push
cmpsb
cmp
pop
dec
mov
aad
std
movsb
add
push
sahf
adc
cwtl
sti
pusha
push
push
fimull
leave
cmp
sbb
adc
adc
int3
leave
jmp
addr16
repz
test
cli
hlt
and
ljmp
dec
mov
mov
cmc
sub
jo
mov
ret
repz
fucom
movsb
inc
sbb
cltd
insl
sti
rcl
cmpsb
jnp
lret
add
xor
fadd
fisubrs
mov
xor
pop
xor
mov
mov
imul
dec
jge
in
cmpsl
in
and
mov
push
int
ljmp
outsb
cmp
into
sub
mov
je
aam
xor
negb
jg
xchg
xlat
pop
outsb
aad
stc
in
add
mov
xor
out
test
arpl
sub
std
mov
pop
lds
cld
jnp
or
cs
pop
cmpsb
xorl
rclb
mov
clc
popl
cwtl
xchg
push
test
sahf
pop
stos
cmpsb
in
and
aas
mov
lea
cltd
ljmp
inc
sub
jge
or
stc
aas
std
sbb
fiaddl
insl
lahf
dec
mov
mov
sub
sbb
incb
lea
stos
out
mov
hlt
jg
mov
inc
jns
cli
jb
sbb
mov
jecxz
xchg
imul
mov
psubw
stos
dec
mov
and
fsubrs
xchg
hlt
dec
push
mov
loop
mov
jns
lcall
cs
outsb
in
jb
mov
or
mov
mov
rorb
sti
sbb
sbb
fmul
mov
aam
push
jbe
push
repz
jmp
ret
xor
jp
incl
int3
loope
cmpsb
inc
loope
ljmp
in
adc
clc
inc
xchg
and
roll
jmp
mov
call
mov
sbb
sub
mov
adc
push
pushf
dec
fsubrs
cmp
adc
test
enter
fs
ds
jle
fdivl
push
test
adc
sbb
or
leave
pop
into
dec
and
add
inc
dec
sbb
cld
inc
fs
cmp
hlt
mov
inc
push
mov
fisttpll
out
cmc
pop
jl
test
in
jg
sbb
aam
repz
dec
sub
or
filds
loopne
rcll
arpl
pushf
insb
dec
cmpsb
popf
stc
sbb
dec
cltd
xchg
sub
lock
mov
xor
mov
scas
rcrb
jl
adc
cmpsb
pop
lahf
popa
cs
ds
mov
ss
jp
push
ret
movsb
hlt
lds
ja
cld
lret
in
xchg
pop
dec
out
les
xchg
jmp
lahf
dec
psrld
mov
add
je
mov
cmpsl
out
loopne
aam
lea
sub
test
or
add
inc
sub
pop
xchg
in
lods
jo
xchg
pushf
lock
outsl
inc
rcll
scas
push
xchg
jecxz
and
mov
dec
mov
sub
pop
sbb
pusha
cmpsl
repnz
push
cmp
mov
mov
push
dec
sub
aad
sbb
push
out
pop
sbb
nop
mov
push
sbb
mov
cmp
cmp
cld
dec
and
sti
mov
js
pop
lods
jo
negl
mov
push
push
add
cmpl
shrl
into
ret
cwtl
and
pop
mov
mov
adcl
outsl
insb
iret
jmp
clc
popf
loope
fisubrl
push
mov
mov
ja
or
sbb
xor
and
jle
cwtl
pushf
lret
push
fucomip
sub
in
mov
mov
arpl
fcoml
lret
lret
stc
int
inc
dec
adc
fisubs
jecxz
mov
mov
jne
leave
add
push
fidivl
fisttpll
sbb
aad
adc
xor
xor
cmp
add
insl
cwtl
hlt
addl
push
mov
sub
dec
cwtl
fs
cmpsb
inc
mov
fsubl
add
fadd
dec
insl
dec
shlb
push
lret
mov
adcb
cvttps2pi
call
aaa
cwtl
xchg
cmpsl
mov
inc
pop
shlb
mov
mov
sub
test
and
jbe
xor
fnsave
imul
insl
adc
mov
pop
and
cs
imul
sub
mov
push
jne
jg
daa
in
mov
inc
testb
cmp
or
sub
test
add
and
movsb
cli
fucom
mov
stc
jmp
mov
adc
icebp
sbb
popf
insl
inc
jl
fmuls
dec
add
faddl
adc
xor
inc
into
idivb
and
lcall
movsl
push
pop
shlb
rcrb
or
cmp
pop
xor
dec
ucomiss
fistpl
push
adc
stos
mov
push
bound
mov
cmp
add
and
or
xor
mov
mov
sbb
add
jo
pop
inc
dec
jnp
push
setae
mov
xlat
stc
and
dec
je
sti
loope
outsb
loopne
inc
scas
orl
xor
lea
scas
mov
inc
xchg
rcrb
js
mov
int3
scas
or
sti
jmp
mov
sub
cmp
mov
cmc
and
enter
aas
jbe
fbstp
ficoml
decl
mov
cs
mov
imul
cmp
std
mov
sub
incl
lods
repnz
ds
imul
ljmp
adc
jae
dec
xor
sbb
loopne
fadds
sbb
ret
insl
movb
sbb
lods
xor
jge
add
mov
into
pop
roll
push
loopne
dec
cmp
mov
sub
test
ret
mov
loop
repnz
mov
sbb
clc
adcl
lahf
pushl
es
ret
adc
test
xor
shl
dec
pop
xchg
jb
or
lea
xor
iret
inc
push
or
add
mov
cli
rcrb
fsts
push
js
xor
pop
cmpsl
pop
test
or
stos
pushf
sub
sbb
dec
push
loopne
mov
pop
ljmp
pop
dec
xchg
mov
pop
stos
xchg
cmpsl
ja
push
shlb
lods
popa
pushf
imul
daa
jg
pop
sub
cmp
sti
mov
push
cmp
fsubp
test
stos
fmull
int3
jno
pusha
ljmp
xor
or
cmp
jg
or
cltd
sahf
xor
fcomps
mov
xchg
aad
aad
rorl
test
cmp
pop
fiaddl
cmp
inc
jo
xchg
enter
mov
jmp
push
jno
mov
fsub
jo
sbb
lods
cmpsb
pushfw
popf
adc
inc
and
and
add
fdivr
pushf
xor
pusha
lods
adc
mov
in
and
orb
cmc
cltd
subb
idivl
add
arpl
xchg
divb
ret
rcll
dec
dec
das
mov
lea
sbb
aaa
pop
mov
into
fbld
in
mov
add
mov
bound
decb
movsb
ficoms
mov
sub
push
mov
cli
in
adc
adc
mov
fs
dec
mov
mov
andb
xchg
push
jns
and
and
lret
mov
pushf
dec
enter
rclb
hlt
mov
repnz
scas
xor
cmpsb
dec
es
xchg
jae
icebp
pop
xor
outsb
es
mov
sub
push
jge
insl
popa
js
insb
mov
inc
xchg
and
xor
les
in
xchg
bound
insb
test
sarl
cltd
aaa
arpl
addl
mov
lahf
push
cmpsl
cwtl
nop
ja
sbb
dec
xor
jp
cmp
mov
imull
mov
inc
mov
sub
and
lahf
mov
and
pop
cld
mov
xchg
pop
test
push
xchg
sub
arpl
cld
in
xchg
add
out
outsb
mov
loope
cmpsb
fs
mov
or
xor
les
imul
adc
cmpsb
mov
repnz
lcall
sti
and
cmpsb
inc
push
popl
xchg
xchg
sbb
bound
sbb
loop
and
or
or
mov
lods
jl
pop
cmp
inc
jno
imul
and
je
inc
in
sbb
or
call
popf
pop
int3
dec
add
and
or
add
aam
jg
sub
push
lea
ficomps
mov
add
mov
add
add
repnz
mov
addr16
inc
adc
and
stc
shrl
testb
mov
mov
in
cltd
pop
and
cmpl
dec
pop
testb
cmpsb
cltd
cmpsl
cmp
incl
sub
mov
sbb
cmpsl
outsl
outsb
push
xchg
sbb
addr16
sub
add
fwait
inc
ret
adc
cmc
mov
inc
inc
dec
pushw
mov
and
lcall
add
pop
inc
test
lods
jns
dec
xlat
ret
cwtl
mov
pop
or
jl
subl
ret
test
cmp
pop
or
sub
pop
pop
aad
lcall
dec
imul
call
stos
mov
or
push
call
ja
or
sub
negb
xchg
cltd
movsl
mov
xchg
pop
inc
cmp
cmpsl
mov
negb
dec
movsl
adc
or
push
icebp
inc
fwait
push
test
cmpsl
lea
aas
lret
scas
jmp
stc
inc
pop
mov
add
scas
add
imul
cmp
ret
cpuid
sbb
mov
lods
testb
push
lcall
aam
jge,pn
adc
sbb
xchg
insb
cmp
ja
cmpxchg
add
out
cltd
pop
add
hlt
cld
mov
xchg
into
mov
pop
daa
xlat
lret
cmp
lds
cmp
pushl
in
dec
sub
add
xchg
bound
and
insl
pop
adc
gs
imul
fnstenv
insb
jmp
inc
inc
pop
add
sub
in
bound
jns
mov
pop
xor
inc
orb
mov
jmp
sbb
in
stos
ljmp
dec
sub
mov
inc
lret
inc
jg
sub
movsl
push
in
and
repz
xchg
dec
jae
and
cmpsl
push
add
mov
xor
lock
xor
ret
aas
sbb
in
sub
mov
ficoms
mov
jns
ds
jo
inc
pop
sub
mov
imul
adc
out
lds
mov
jne
mov
das
pop
test
mov
mov
sbbl
jle
mov
test
into
mov
ds
repz
inc
aaa
or
rcrl
paddusw
cld
or
sub
or
sub
add
sub
shrb
jae
hlt
rolb
ja
jl
mov
pop
test
aas
shl
and
mov
cltd
dec
divl
stc
xchg
out
xor
mov
xor
cmpsb
call
mov
push
les
cmp
lcall
pusha
in
sbb
jle
and
xor
aad
out
sbb
cmp
fistps
lret
mov
inc
imul
xor
cld
mov
xor
fdivrl
push
arpl
int
mov
inc
cmpsl
sbb
insl
and
in
outsb
ret
mov
cmp
cmp
pushf
cwtl
lcall
adc
and
pop
cmpsb
lcall
insb
pusha
mov
lahf
sarb
xchg
or
dec
je
and
loope
stc
sbb
or
data16
hlt
inc
rorl
incl
mov
and
inc
jp
pop
scas
mov
mov
shl
cs
adc
ret
pop
out
lret
mov
add
pushf
frstor
andb
sar
daa
stos
xchg
loope
fs
jo
mov
sub
or
dec
jmp
lods
push
dec
test
mov
aad
lea
int3
imulb
mov
shll
mov
or
scas
push
ss
cmp
pushf
push
sbb
or
mov
aad
ret
push
lret
dec
sbb
stos
and
inc
push
lcall
adc
inc
idivl
and
jnp
icebp
fcmovu
ret
gs
hlt
xchg
testb
outsb
test
xchg
test
push
sbbl
xchg
jno
xchg
mov
mov
inc
xchg
andl
and
jae
push
xor
mov
lds
lock
dec
sub
mov
iret
add
mov
dec
and
aas
inc
and
inc
int
inc
fmull
lods
adc
dec
mov
fcmove
mov
notl
dec
les
pushf
jbe
and
adc
mov
sub
sub
and
jmp
xor
shlb
cltd
ds
dec
xchg
push
aad
das
add
hlt
out
ret
xchg
dec
jmp
insb
incb
je
fmull
cmpsb
dec
mov
pop
pop
frstor
flds
imul
std
jns
or
call
repnz
pushf
pop
jbe
lock
int3
xchg
inc
call
fstpl
sub
pop
jno
lods
mull
sbb
inc
cmp
pop
loopne
or
out
sub
out
sbb
movsb
lea
pop
lods
xor
push
add
push
into
and
lods
cmp
push
mov
xor
pop
in
inc
bound
add
cmpsb
lods
test
arpl
das
cmp
cmp
out
inc
scas
adc
push
pop
cmp
mov
pop
or
add
add
insl
fnstenv
int
in
xor
shll
pushl
mov
push
imul
pop
mov
sub
cmp
adc
cmc
je
adc
arpl
into
nop
xor
cmp
outsl
outsb
jg
scas
adc
lds
push
xchg
outsb
push
mov
jg
int3
lret
repz
jmp
fstps
loope
loope
call
pushf
or
pusha
hlt
sbb
dec
leave
sbbb
stos
lds
icebp
ja
test
outsl
or
pop
pop
shl
repz
mov
clc
int
loopne
stos
shrl
into
aaa
out
fstpl
cmp
inc
dec
test
push
test
jb
icebp
cld
mov
int
or
sbb
sub
cli
test
pop
gs
jge
movsb
sti
movsb
mov
idivl
subb
jmp
inc
mov
mov
les
iret
loope
xor
jnp
sub
mov
leave
mov
sub
mov
push
data16
fisubs
int
fists
xchg
outsb
pop
imul
data16
pop
sbb
mov
cwtl
mov
cmp
xorl
loope
out
stc
dec
push
fs
xor
push
xchg
in
jb
mov
pop
xchg
xchg
pop
bound
sbb
hlt
cmp
loope
ds
repz
jb
pop
mov
imul
cmp
mov
ds
or
push
ss
shlb
test
mov
sahf
scas
mov
data16
mov
movsb
mov
pop
lds
je
scas
fstps
adc
mov
push
aam
mov
xchg
repz
test
mov
ja
cmp
test
test
fwait
gs
add
pop
mov
xor
fsubs
cs
inc
test
movsl
adc
push
and
inc
cmp
pop
sbb
std
in
or
paddusb
mov
out
and
out
sbb
jns
xchg
jb
stc
test
cmp
ds
lods
jle
pop
popa
cmp
push
mov
ljmp
mov
pop
dec
negl
mov
lret
and
int3
rcrb
lahf
je
rcr
inc
les
push
push
jno
iret
fcmovne
and
std
and
icebp
jmp
sub
or
enter
add
stc
push
xchg
cbtw
cld
lea
mov
mul
clc
cmp
stos
jae
mov
cmp
inc
loop
pop
adc
fdivrs
js
cld
push
popa
xchg
cmp
pop
jle
and
cmp
fisttpl
push
imul
rep
pop
popa
xor
sbb
lods
out
out
aaa
shlb
in
imul
sbb
xchg
aas
aas
xor
xor
inc
mov
sub
adcl
mov
mov
and
mov
into
mov
lcall
mov
roll
leave
nop
insl
push
es
jmp
jb
sub
mov
xchg
jno
pop
xchg
inc
or
sbb
xchg
in
sbb
and
es
int
cmp
xchg
in
pushf
movb
xor
mov
cmp
dec
scas
dec
xchg
push
clc
and
fisubrs
xlat
test
shrb
adc
lock
data16
cld
lds
scas
xchg
mov
insl
jle
and
or
add
ret
sbb
or
dec
aam
jmp
xchg
in
mov
jmp
je
lret
enter
fimuls
push
or
push
cmp
mov
mov
fcom
adc
sub
pop
xchg
mov
shll
push
fcomp
repz
rol
push
or
cmp
xchg
test
jg
aad
cmp
and
pop
adc
sbb
int
clc
dec
and
pop
jnp
xchg
cs
cmpsl
adc
cmp
into
or
sub
stos
jg
into
jnp
jb
sub
pop
imul
lods
mov
popf
adc
cld
scas
xor
push
dec
fwait
push
lds
add
clc
fistps
out
push
cmp
push
iret
xchg
xchg
push
loope
into
sbb
xchg
cli
adc
mov
dec
cmpb
aad
or
add
mov
stc
xor
mov
add
mov
ja
mov
lea
icebp
ss
xor
sub
add
xchg
jb
pop
cmp
imul
or
cmp
jno
dec
jnp
xchg
loop
add
sub
inc
fiadds
mov
push
or
mov
jno
adcl
ja
adc
cmp
inc
movb
and
fiadds
fcmovbe
jo
mov
pop
or
popf
call
add
add
popf
aad
sub
in
stos
pop
repnz
in
incl
push
jo
or
pop
mov
inc
arpl
test
xchg
mov
inc
or
pop
mov
inc
insb
pop
sbb
inc
xor
popa
dec
aaa
xchg
mov
sahf
push
movsb
test
xlat
push
push
scas
adc
jecxz
in
pushf
into
jle
das
divl
mov
mov
into
push
shrl
xchg
mov
jnp
mov
pop
es
inc
pushf
mov
inc
pop
mov
mov
jmp
xor
std
fistpl
or
sbb
push
sub
jmp
in
cli
lods
lret
in
or
dec
and
addr16
xchg
inc
adc
adc
ja
icebp
jae
and
mov
addr16
push
test
inc
cli
es
inc
stos
mov
push
mov
inc
add
push
cltd
mov
pushf
or
int3
movsb
pop
repz
outsl
jbe
pop
sbb
push
in
or
dec
fcmovne
lds
jmp
lcall
sbb
test
and
jmp
out
cmp
fs
cmp
cmp
xor
cmp
mov
popa
or
fwait
mov
sub
push
mov
mov
cltd
js
jmp
sarb
xchg
sub
shl
insb
mov
mov
adc
ss
cmp
cmp
mov
jecxz
hlt
test
call
lret
insb
xchg
pushf
mov
xchg
int
mov
xor
sub
pop
xchg
add
scas
in
mov
pop
pop
leave
sbb
xlat
xor
mov
dec
pop
lods
enter
mov
or
out
sbb
stos
mov
add
inc
and
pop
xor
aaa
int
int
repnz
jg
pop
enter
mov
xor
pop
and
fnstenv
ljmp
xchg
mov
add
and
xchg
adc
add
mov
hlt
test
cmp
das
test
cmp
xchg
jno
lret
pop
push
es
ljmp
ret
rorb
cmp
cld
push
xchg
sarl
pop
int3
nop
push
inc
xchg
fcmovbe
sub
leave
int3
sub
pop
jmp
xchg
cld
test
jnp
push
out
inc
fs
cmp
mov
aam
cmpl
dec
cmpsb
gs
push
test
lods
sbb
push
stos
xchg
inc
sbbb
iret
inc
mov
pop
dec
push
ret
aam
pop
clc
dec
mul
add
bound
xchg
mov
fcmovnu
xchg
sub
xchg
loope
sahf
xchg
pop
mov
test
fistpl
mov
aad
adc
jbe
mov
fwait
lret
cmpb
and
popa
insl
mov
mov
or
fcom
mov
outsl
xchg
daa
mov
in
cmp
cmp
stc
test
inc
mov
jl
xor
pusha
imul
jns
in
mov
shll
ror
test
adc
xor
pop
in
in
movsl
ret
mov
mov
ret
xor
pop
rcr
push
dec
xor
hlt
xchg
pop
mov
xlat
add
dec
mov
iret
bound
push
mov
sbb
std
jmp
cmp
hlt
push
sbb
inc
add
push
out
xchg
push
pushw
xchg
ret
xchg
cli
push
dec
mov
in
xchg
adcl
mov
fs
dec
int3
imul
sbb
fs
adc
mov
mov
mov
fidivl
loop
cmp
pop
pop
stos
xchg
lock
lea
mov
arpl
scas
inc
rcll
sbb
xchg
or
push
pop
hlt
int3
mov
xor
jmp
xor
xorb
jb
adc
icebp
cmp
imul
dec
inc
sbb
dec
pop
xchg
and
data16
ficompl
or
inc
push
aad
pop
lods
xorl
repz
sbb
mov
or
sbb
loope
push
aad
xchg
or
js
fisubrl
push
inc
orb
pop
jle
dec
jecxz
js
add
mov
in
sub
mov
repnz
sbb
addr16
js
xor
outsl
clc
popf
add
insb
fcomps
lods
push
jg
add
mov
std
push
pop
in
xchg
nop
sbb
dec
into
pusha
or
ret
fisttpl
out
mov
pop
xor
cmpsl
stos
sbbl
xorb
or
js
cld
fistpl
movsl
push
in
jp
sti
aam
shl
lcall
fcmovnu
scas
gs
push
les
jmp
sbb
mov
jne
cltd
shll
push
dec
add
jmp
cmp
and
xor
cltd
jo
push
xchg
dec
movsb
adc
jge
gs
outsb
mov
add
gs
inc
push
mov
pusha
inc
cmpsl
into
in
dec
movsb
jbe
arpl
mov
mov
andl
cmp
sub
push
mov
mov
mov
push
hlt
push
and
cmp
or
stos
test
sbb
fiadds
mov
adc
out
or
add
sub
stos
or
mov
mov
or
inc
mov
stc
test
leave
bound
cltd
lods
pop
cs
mov
rorb
fmuls
dec
adc
sub
cmp
mov
lds
fstps
cld
aas
sbb
push
lock
addr16
mov
pop
pushf
mov
xlat
mov
stos
adc
cld
insb
dec
andl
or
fdivp
fisubl
aam
adc
cld
jb
mov
and
inc
in
push
adc
icebp
addr16
xchg
sub
test
test
loope
inc
cli
add
arpl
mov
cmp
mov
mov
push
jae
mov
or
jns
int
adc
jns
pop
xor
out
popa
inc
movsb
push
fisttpl
movsl
cli
and
mov
dec
or
mov
sahf
sarl
call
pop
sar
gs
lods
jp
fildl
sbb
in
mov
fdivrs
mov
mov
arpl
inc
pusha
mov
test
sbb
sahf
sahf
or
xchg
mov
stos
pusha
es
shrb
sbb
mov
add
mov
cmpsb
int
adc
jb
xlat
shl
rcr
bound
or
push
repnz
xchg
inc
or
pop
mov
ljmp
pop
lods
imul
sbb
jmp
stos
in
xor
mov
mov
and
addl
jns
xlat
mov
ss
fucomp
pop
in
or
push
sbb
fucomi
pop
mov
mov
mov
test
cmc
sahf
test
pop
xchg
imul
insb
andl
xor
dec
sbb
sub
fcmovne
push
popa
xchg
lret
sahf
pop
fcmovu
jbe
mov
imulb
popf
pop
push
xchg
bound
jge
fucomi
xlat
mov
sbb
adc
pop
mov
cs
loopne
and
fists
mov
popa
add
data16
and
xor
push
pop
xor
ret
dec
cld
cmp
sti
xor
pushf
inc
xor
inc
xchg
fdivr
jns
das
xor
daa
shl
pop
pop
push
sbb
mov
xchg
icebp
mov
lock
push
cltd
popa
adc
mov
jno
xor
jbe
ja
fcmovbe
inc
ret
mov
mov
repnz
dec
fucom
subb
mov
clc
and
lods
adc
in
shlb
sbb
stc
pop
mov
xchg
pop
fidivs
inc
out
scas
hlt
adc
scas
mov
cld
sub
push
shl
sbb
fwait
jb
scas
pop
mov
ja
add
push
fidivs
xor
outsl
xor
jle
adc
mov
dec
or
mov
out
push
call
push
movsb
pusha
jmp
sbbb
shl
dec
mov
sbb
xchg
lea
and
and
inc
mov
insb
clc
jno
sub
push
mov
dec
pusha
and
ret
push
mov
add
push
adc
lea
aaa
jo
ret
fsubs
loop
aas
add
loope
lahf
sub
out
jge
roll
pop
jb
xchg
xchg
xchg
test
cmp
mov
pop
dec
xor
mov
mov
adc
xchg
mov
rcr
dec
jb
ljmp
inc
cmp
mov
dec
dec
cs
in
or
adc
and
ds
sti
push
mov
mov
jmp
adc
aam
add
sub
mov
in
nop
inc
adc
jmp
mov
mov
sub
pop
ret
daa
or
iret
stc
dec
or
xchg
aad
xchg
add
adc
pop
add
xorl
inc
xor
loopne
jmp
inc
icebp
or
out
stos
xor
outsb
in
sub
ljmp
lret
sbb
pop
add
mov
imul
lods
cli
jnp
dec
inc
mov
dec
outsl
mov
cmp
jle
dec
sbb
icebp
add
and
jg
add
sahf
sub
pop
xchg
es
push
cmpsb
jg
das
and
push
pop
push
out
and
cli
ret
testl
sbb
lods
into
mov
adc
add
jb
fisubs
mov
push
fcmovnb
loop
nop
mov
daa
repnz
mov
jnp
out
js
in
push
xor
mov
mov
or
stc
jb
insb
into
imul
int3
or
repnz
subl
mov
scas
movsb
fsts
nop
stc
cmpsb
divb
adc
pop
test
add
pushl
sar
rcl
mov
sub
arpl
enter
sub
push
dec
imul
xor
bound
jns
mov
push
nop
adc
mov
addr16
jb
int
xchg
lret
push
mov
jb
pop
in
adc
mov
ficompl
xor
lret
sbb
mov
mulb
testl
push
aad
dec
inc
sahf
in
ljmp
es
pop
gs
hlt
aad
mov
in
xorl
jge
mov
mov
add
sbb
ficoml
sub
cmpsl
mov
mov
mov
and
pop
cmp
xor
inc
ljmp
icebp
xchg
cwtl
addr16
push
dec
mov
sub
mov
inc
shl
imul
lcall
scas
add
fiaddl
lcall
test
mov
cmpsb
popf
mov
cmp
leave
or
pop
push
mov
add
cmp
or
aas
mov
mov
mov
xlat
outsl
push
jo
push
mov
adc
rol
mov
stos
jo
mov
xor
lcall
sub
jnp
jnp
nop
int3
inc
mov
jge
and
js
jae
jb
ljmp
je
incb
cwtl
sbbl
mov
andb
ss
stc
dec
out
outsl
jle
not
mov
fisttpl
shrl
inc
lods
jmp
rol
int
mov
imul
or
dec
add
mov
lock
push
and
sbb
mov
sbb
inc
jp
push
mov
cmp
je
and
out
repz
stc
adc
pop
test
mov
jl
mov
inc
pop
fcomps
insb
lret
jmp
stos
mov
xor
test
popf
dec
or
fldenv
pop
lods
jae
dec
je
push
push
imul
test
out
xor
out
mov
push
and
scas
into
fdivrl
popa
jno
in
xor
xor
mov
movsl
inc
push
fwait
jp
je
enter
es
stc
or
out
mov
dec
test
jmp
bound
pop
shr
cmp
fcoms
mov
pop
push
les
cmp
popa
xchg
jp
xor
mov
daa
xor
imul
add
mov
pop
stos
lods
push
bound
call
jb
dec
add
push
push
outsb
daa
pop
mov
out
jnp
fidivrs
dec
bound
pop
pop
and
fmuls
pop
popa
popf
lahf
adc
xor
ficoms
sub
incb
pushf
addr16
mov
mov
pop
fists
mov
jne
mov
inc
jle
push
push
stos
adc
movsl
xor
inc
mov
mov
lods
nop
sbb
mov
pop
push
and
jmp
icebp
dec
and
and
mov
mov
in
jno
or
sbb
mov
dec
xor
sbb
cld
and
sahf
xor
sarb
mov
adc
or
movsl
pop
test
cmp
scas
je
addb
sahf
insl
dec
data16
mov
mov
mov
push
pop
inc
mov
in
xor
jno
mov
push
push
nop
jge
sbb
mov
xor
in
mov
stos
test
dec
push
sub
cmp
mov
xchg
es
jne
enter
sbb
pop
mov
fs
pop
mov
fiaddl
cs
lds
lock
adc
or
cmc
into
push
inc
aaa
lods
lret
shll
scas
insl
scas
xlat
xor
push
rcr
pop
popf
rcll
and
jb
pop
outsl
pusha
and
test
lahf
and
pop
mov
mov
movsl
mov
and
pop
in
and
ret
sbb
sub
icebp
xchg
loop
mov
jle
sahf
cmp
mov
xor
scas
loope
insb
sbbb
loopne
xor
mov
ret
push
popf
sti
aas
mov
xor
mov
pop
mov
into
arpl
cli
dec
mov
repnz
push
or
adc
inc
adc
aaa
insb
jnp
pusha
ror
dec
xchg
inc
sub
pop
push
jl
adc
out
lock
int3
sbb
jl
sbb
xlat
call
inc
loope
test
in
fs
loopne
inc
outsl
sbb
and
mov
cmp
push
sub
insl
test
mov
out
adc
push
cmp
daa
mov
std
mov
jne
repnz
add
in
pushf
cmc
dec
cmp
cmp
stos
pop
sbb
mov
jecxz
inc
sbb
cmc
pop
arpl
cwtl
dec
inc
lahf
dec
divl
in
mov
loopne
addr16
inc
pop
cli
icebp
lea
clc
push
leave
rorb
and
pop
scas
mov
mov
outsb
in
imul
push
jp
enter
out
aas
mov
and
fcoms
and
dec
sub
add
pusha
cld
xchg
outsl
testb
lods
mov
das
pop
popa
sub
mov
adc
repz
daa
scas
stos
sti
and
test
mov
mov
outsl
jne
xchg
out
jno
mov
sbb
sahf
jne
icebp
in
mov
sub
fcompl
xor
sub
push
cmp
add
stos
stos
cmp
cmp
mov
add
sti
scas
and
sti
lret
test
dec
push
mov
cmp
in
cmp
les
jecxz
inc
mov
imul
xor
cmp
push
and
loope
cmp
lahf
sbb
push
iret
push
jl
dec
insl
xor
mov
inc
out
sub
dec
imul
or
inc
lret
daa
gs
iret
add
sbb
fwait
jmp
fsts
faddl
ja
push
push
psubusb
push
in
cmc
inc
push
movl
sarl
mov
lds
mov
push
or
scas
xor
jnp
enter
cmp
add
sub
imul
xchg
fistpl
das
mov
adc
add
cli
xor
cmpsb
gs
push
into
mov
adc
jb
mov
cmp
jne
xor
mov
stc
mov
pop
mov
dec
xor
int
push
jmp
movsl
imul
dec
cld
cmc
fstpl
repz
adc
out
fsubs
test
cmp
pop
bound
sub
call
cmpsb
inc
jmp
shrb
sbb
out
lahf
aas
inc
sbb
mov
int3
mov
jmp
in
out
int3
and
pop
mov
mov
jp
cs
loop
les
cmp
push
pop
cmpsb
adc
lods
int
dec
icebp
stos
jl
shll
int3
mov
imul
in
or
jmp
xchg
mov
test
xchg
sbb
mov
out
fmul
mov
and
dec
adc
dec
inc
or
js
in
test
push
or
xor
xlat
mov
xor
jo
mov
mov
cmp
cmpsl
cld
xlat
push
clc
cmpsl
lods
cli
outsb
notl
stos
insl
jo
aad
jnp
sub
fnstcw
outsl
sub
mov
mov
jecxz
scas
jg
adcb
xlat
or
cld
outsb
mov
and
xchg
jae
loopne
mov
mov
cmp
mov
std
popa
in
xor
xchg
and
pop
jle
shrl
out
mov
clc
ss
repz
cli
pusha
xchg
icebp
test
sub
xor
jg
sti
xor
push
or
out
daa
out
out
mov
xchg
jge
and
cmpb
repz
xchg
out
nop
mov
mov
daa
dec
push
stc
daa
lods
jno
sbb
lea
push
jmp
inc
jbe
jne
sar
jno
mov
pop
arpl
mov
jg
dec
adc
scas
cmp
jl
test
or
jns
pop
or
mov
pop
ret
lret
repz
aas
out
or
adc
ja
les
add
loop
movsl
mov
xchg
fsts
shrl
push
sub
mov
xchg
xor
lock
lea
xchg
cmp
adc
adc
lcall
shll
xchg
push
mov
leave
mov
sub
test
mov
sbb
orps
cmpsl
out
rorl
aad
jno
dec
into
mov
push
add
sub
dec
mov
loop
mov
enter
mov
outsb
kmovb
mov
push
in
cmpsl
xchg
inc
jnp
dec
mov
mov
and
or
lods
pop
iret
dec
jb
xchg
add
out
xchg
fstps
sub
push
ja
pop
pop
add
rcrl
aam
cld
xchg
fisttpll
dec
inc
das
mov
lcall
ljmp
push
or
lods
jb
addb
mov
pop
sbb
cwtl
and
movsl
adc
inc
out
pop
clc
jp
adc
inc
sub
lods
les
test
or
fildl
sti
ljmp
mov
and
and
test
jae
ficomps
xchg
vpsubsw
ret
lret
idiv
push
testb
sbb
lahf
je
mov
pusha
lret
pusha
stos
cmpsl
push
cmp
dec
imul
insl
imul
push
jno
aaa
push
call
sub
inc
mov
addl
push
aam
lea
mov
push
int
or
out
jmp
enter
test
or
inc
ficompl
push
sbb
dec
push
adc
xor
in
sbb
loopne
decl
adcb
out
daa
xchg
push
inc
hlt
fs
fistpl
popa
xorl
repz
pop
pop
jl
xchg
xchg
sar
aam
sbb
std
lds
cltd
inc
iret
push
iret
insb
and
jp
push
bound
lock
jb
push
fisttps
sbb
mov
cmp
fwait
test
loop
mov
clc
sbb
xor
repz
ds
jle
lret
jl
dec
imul
sbb
ds
stc
push
xchg
adc
fildll
pusha
jp
sbb
xchg
and
loop
fdivrl
clc
test
mov
xchg
xchg
jmp
jmp
mov
call
bound
iret
sti
mov
sbb
mov
les
ljmp
inc
xorb
pop
mov
pushl
add
push
insb
lock
xlat
dec
call
jnp
dec
ret
repnz
clc
add
adc
rcrl
lret
inc
pop
xchg
push
dec
sbb
divl
jge
mov
pop
pop
sti
cmpb
outsl
test
roll
sbb
add
dec
jg
jecxz
push
js
pop
rorl
pop
dec
xlat
xchg
in
or
cmp
dec
or
cltd
ss
add
inc
mov
jbe
sbb
in
cmp
inc
adc
gs
jge
lret
mov
popa
mov
or
xchg
shll
mov
push
fs
jp
and
fwait
xchg
mov
xchg
sbb
xlat
jle
js
pop
sahf
dec
xor
lea
in
enter
and
int3
lock
cli
mov
arpl
xchg
push
inc
fidivl
jecxz
push
test
nop/reserved
lods
test
xor
push
ret
jp
cld
jae
fwait
mov
test
lret
paddusw
movsb
xor
xchg
js
or
aaa
arpl
jp
pop
sbb
inc
add
fs
in
pop
xchg
add
lds
ja
jno
rcrb
imul
enter
das
lods
stc
fs
add
adc
pop
or
push
repnz
addr16
push
add
pop
ss
push
adc
in
pop
jmp
adc
xchg
cwtl
loop
xchg
inc
clc
inc
sbb
scas
sub
stos
and
cwtl
pop
xor
inc
xor
sub
xor
push
or
jne
push
mov
jmp
cmp
dec
mov
jb
mov
and
movsl
lea
arpl
bound
cmp
call
adc
lods
and
inc
idivb
xchg
mov
cmp
dec
pushf
push
jle
loopne
mov
dec
loop
mov
cmp
cmpb
lods
scas
push
or
out
or
faddl
into
jmp
dec
sbb
inc
mov
in
into
insb
test
jle
test
pop
xchg
rcl
push
xchg
inc
and
call
sarl
adc
push
adc
test
push
popa
sbb
fists
enter
iret
sbb
jp
int
push
cld
dec
out
lods
cmpsl
movsl
add
sbb
out
mov
aad
inc
mov
cwtl
adc
es
hlt
mov
pushf
stos
mov
mov
xor
arpl
mov
pop
shlb
add
dec
ret
std
inc
and
adc
in
stos
sbb
loope
mov
sub
pusha
shl
jecxz
add
data16
and
and
arpl
adc
testl
jp
mov
mov
push
jno
push
or
arpl
mov
addr16
push
xchg
ret
jg
or
pop
lret
mov
popf
loop
js
scas
std
lock
sub
hlt
add
movsl
mov
clc
pusha
repz
adc
lea
ret
shlb
adc
popa
adc
dec
jge
inc
inc
pop
dec
in
lds
mov
clc
shrl
add
lods
push
mov
mov
imul
pop
cmp
mov
in
cmp
shrb
inc
dec
xchg
xchg
mov
out
fsubrl
pusha
pop
xor
out
or
pop
arpl
jne
inc
xchg
mov
dec
daa
outsb
outsb
daa
repz
out
jecxz
sub
pushaw
rorb
xor
cli
pop
adc
adc
mov
shlb
mov
stos
push
mov
pop
fs
out
push
xor
push
xor
adc
pop
cmpsb
mov
into
lcall
std
or
fidivrs
jg
adc
jmp
das
jmp
in
add
push
xchg
cli
in
mov
mov
mov
xor
lcall
imul
sbb
push
sbb
cli
nop
movsl
pop
imul
aad
hlt
dec
push
inc
sbb
jbe
adcl
mov
push
mov
out
popa
or
sbb
jecxz
adc
and
push
rclb
push
test
push
negl
push
cltd
and
inc
cmp
shll
adc
scas
test
mov
lcall
mov
lret
xchg
lahf
icebp
mov
jmp
push
cwtl
bt
push
jp
or
test
fwait
dec
xchg
sbb
or
xchg
in
out
daa
aad
dec
jge
test
inc
out
cmp
fmull
movsb
inc
adc
ljmp
mov
and
fs
icebp
test
iret
rcll
outsb
icebp
jns
lock
mov
fs
data16
add
lret
ficomps
inc
jecxz
xor
pop
loope
iret
pop
lods
cli
in
int
dec
clc
add
int3
imulb
insl
int
icebp
and
sbb
xlat
adc
and
adc
or
scas
mov
mov
mov
stos
ret
aas
sub
push
adc
jae
pop
ss
divb
loopne
mov
pop
les
stos
add
mov
shll
sub
dec
pop
scas
cwtl
push
mov
pop
push
adc
sbb
sub
call
loopne
dec
sbb
inc
leave
stos
mov
addr16
leave
mov
pop
ds
mov
hlt
repz
loopne
test
sbb
sarb
imulb
pop
sbb
jbe
addr16
and
xchg
je
xchg
xchg
hlt
fs
in
scas
push
fidivrl
fisttpll
push
fs
cwtl
lahf
add
scas
push
leave
outsb
cmpsl
or
fisubrs
or
jecxz
mov
xchg
daa
mov
push
jg
cmp
jne
hlt
addr16
jle
sbb
sbb
jp
out
fsubs
int
out
mov
pop
mov
jge
dec
mov
inc
inc
popf
inc
push
jp
cwtl
xchg
rcrb
notb
and
adc
dec
mov
or
scas
or
sub
divl
pop
lahf
sbb
stc
mov
adc
push
cmc
sbb
sub
mov
adc
sbb
and
sbb
add
mov
fnstenv
xor
dec
daa
inc
and
sbb
test
stc
mov
shlb
jl
cmpb
ds
out
jg
das
fisttps
aas
jnp
testl
mov
and
loope
lret
int
stos
fcompl
lods
and
lahf
mov
jle
lock
lea
inc
mov
mov
pusha
outsl
dec
mov
adc
stos
mov
jp
mov
outsl
movsb
pop
jne
inc
cltd
in
cmp
inc
mov
mov
inc
or
in
stos
outsl
ret
push
mov
ficompl
fldcw
ret
and
faddl
pop
adc
dec
adc
sbb
xlat
bound
les
sub
incl
pop
into
loopne
test
inc
pop
mov
or
add
lret
mov
scas
xor
in
stc
test
test
sbb
inc
pusha
dec
mov
mov
insb
mov
clc
cld
pop
mov
mov
div
add
rorl
xchg
iret
mov
pop
sahf
lods
mov
mov
test
clc
cmp
ss
das
push
ss
in
leave
mov
cmp
or
push
xor
sbb
jecxz
ds
sbb
mov
and
divb
jae
cmp
dec
sub
mov
pmulhuw
jl
cmpsb
out
vshufps
xchg
cmp
push
dec
jae
xchg
stc
pop
test
mov
int
mov
push
fwait
xor
test
lret
mov
fucom
aaa
mov
imul
and
imul
stos
lcall
mov
xor
pop
aam
lahf
out
mov
mov
push
mov
jmp
xchg
lods
mov
out
jle
fists
push
iret
mov
xor
out
sub
shll
in
jno
shrb
adc
in
call
pop
popa
push
inc
rolb
and
daa
out
sarb
insl
mov
xor
lods
push
sub
xchg
sub
inc
ds
mov
adc
mov
lods
cmp
sbb
dec
xor
es
cmpsb
in
mov
mov
dec
or
add
pop
jmp
loopne
cmpsl
xor
inc
rcrl
jg
xchg
lahf
dec
pop
jge
inc
pusha
cmpps
fwait
add
orl
xor
push
sbb
pop
hlt
nop
mov
shl
fwait
mul
or
dec
fimull
aad
daa
add
test
iret
sub
jmp
into
mov
movsb
push
pop
in
fistps
xchg
addr16
std
pop
sub
cltd
dec
sahf
movsb
pushf
pop
push
xor
mov
sub
dec
in
xchg
scas
add
cmpsl
and
or
jge
ds
aas
and
in
mov
add
jl
hlt
xchg
mov
inc
or
cld
popf
jmp
fstl
push
sub
sahf
add
push
lret
pop
into
incl
in
add
xchg
push
inc
sub
out
iret
mov
and
or
dec
sbb
sub
add
sbb
inc
std
xor
repnz
cli
lret
cmc
xchg
js
dec
ljmp
lret
and
mov
icebp
out
jbe
push
dec
js
jecxz
or
pushf
lds
jle
mov
test
and
aaa
mov
mov
xchg
gs
inc
leave
lock
push
xchg
sbb
jg
iret
mov
cmp
das
or
ja
mov
in
loope
fstpt
jp
mov
mov
sub
es
in
jb
jge
jp
adc
push
adc
popa
fwait
sti
jae
ljmp
push
push
mov
test
adc
mov
sbb
cld
int3
popf
mov
jecxz
mov
in
out
jecxz
adc
dec
or
inc
add
scas
rcl
scas
jns
jno
jmp
and
idivb
in
fidivrs
pop
or
ss
inc
cmp
mov
add
cmp
push
aas
adc
cmp
aam
fdivrl
mov
cwtl
repz
int
repz
inc
icebp
cmc
lahf
xlat
mov
xor
in
add
inc
movsb
hlt
push
lahf
inc
popf
sbb
fs
and
fcomps
xchg
inc
push
test
jno
fidivrs
popa
daa
mov
push
stos
jbe
mov
add
insb
bound
or
cmp
push
push
adc
and
pop
aam
jmp
sub
pop
pop
mov
and
inc
notb
ja
int3
and
popf
jnp
daa
sub
sbb
dec
int
sub
xchg
scas
push
in
mov
icebp
inc
and
shrl
test
inc
mov
addr16
sarl
adc
cmpsl
dec
mov
jb
pop
sbb
fcompl
jg
hlt
int
sbb
push
mov
or
mov
xor
lods
cld
cmp
pop
cld
mov
shll
cmp
and
in
das
aas
pop
push
adcl
repnz
push
sub
mov
xor
popf
jle
sub
or
cmpl
sti
adc
iret
pop
ret
pop
jl
clc
jle
in
cmp
or
jnp,pt
jae
aam
ficomps
jp
dec
aam
mov
mov
subl
pop
ljmp
adc
popa
fsts
stc
inc
not
jp
and
jg
roll
xchg
lret
fisttpll
popa
stc
mov
or
stos
sub
repz
inc
jl
pop
lcall
xchg
dec
push
bound
pop
push
filds
mov
mov
nop
cmp
in
stos
mov
call
mov
mov
pop
mov
inc
ljmp
mov
bound
gs
jo
lcall
iret
sbb
sti
ja
jg
add
clc
mov
outsb
push
inc
das
clc
mov
mov
inc
xor
push
aam
outsl
out
negb
push
inc
loop,pt
stc
inc
enter
mov
jl
cmc
inc
enter
pop
xchg
aas
stos
loop
jl
cwtl
cmpsb
and
movsl
shlb
dec
ret
push
or
xlat
sbb
cmp
inc
adc
pop
fdiv
shlb
mov
ljmp
adc
fdivs
subb
test
scas
add
push
in
popa
sub
cmpsl
stc
jbe
mov
ror
rcl
mov
mov
mov
pop
mov
sbb
mov
sbb
lea
inc
icebp
push
stos
movsl
jno
cmp
cmp
sbb
sahf
test
pusha
movsl
std
in
jno
mov
ret
mov
clc
jae
cltd
xor
sbb
cmp
loopne
mov
xor
mov
mov
and
cmc
stc
and
dec
lahf
lfs
sbb
mov
xor
sub
dec
mov
inc
test
and
rorl
push
aam
out
lods
lods
adc
xor
insl
or
rcrl
xor
xchg
rcl
lock
outsl
mov
fwait
dec
shll
repnz
add
mov
out
xor
std
out
cmpsl
mov
add
imul
rorl
xor
mov
dec
ffreep
ret
inc
xchg
adc
or
or
test
mov
aad
cli
or
adc
inc
sbb
pop
mov
pop
push
inc
xor
orb
repz
aad
push
push
test
dec
loopne
add
fwait
mov
stc
sar
or
and
les
and
mov
das
pop
sbb
dec
dec
mov
mov
jge
mov
loopne
popa
push
aam
cmp
cld
and
lcall
sbb
push
enter
loopne
inc
shr
cwtl
mov
pop
lret
cwtl
inc
sbb
jnp
movsb
loopne
loope
xchg
xchg
stos
js
lret
lea
pop
xchg
add
or
or
sub
sbb
push
in
push
push
xor
mov
mov
mov
insw
mov
adc
mov
xor
fcomps
push
fstps
sbb
mov
pop
lcall
jmp
xlat
insl
xor
mov
sbb
pop
jae
cwtl
mov
pop
lret
std
imul
icebp
dec
dec
add
into
dec
pushf
repnz
xchg
scas
shl
sbb
push
insb
in
mov
xor
pop
push
jge
rcll
fdivl
xchg
mov
stc
pushl
jge
mov
lds
sbb
cmc
mov
hlt
xorb
cmp
vphaddubd
lods
popf
jge
inc
dec
dec
add
cs
decb
repz
gs
xor
movsb
xlat
jmp
and
divl
jno
test
jmp
inc
pop
lock
push
xchg
sub
js
cwtl
jo
ljmp
inc
cwtl
or
pop
mov
scas
mov
mov
and
repnz
ds
ljmp
fsubr
push
push
pop
adc
popf
dec
mov
inc
cmpsl
or
inc
pop
xchg
inc
pusha
or
xchg
jae
jo
or
dec
push
pop
std
test
icebp
sbb
inc
adc
fiaddl
sub
xchg
cmp
das
xlat
mov
daa
rolb
lds
ja
and
xchg
aas
xor
adcl
adc
ljmp
fcmovb
cmpl
adc
leave
je
mov
or
push
mov
ljmp
sbb
std
cmp
adc
aam
dec
cmp
xor
les
loopne
scas
imul
xor
jl
mov
xor
jmp
xor
fs
cmpsb
int3
inc
sbb
xchg
dec
cld
mov
fbld
mov
rol
adc
rolb
mov
dec
inc
lds
mov
scas
sbb
mov
sarb
mov
lcall
dec
adc
xchg
xchg
xchg
stos
repz
add
add
stos
sbb
repz
cld
lock
icebp
push
loopne
scas
in
dec
cmc
dec
and
aam
pop
xchg
stos
cmp
imul
popf
cli
mov
sti
punpckhdq
jo
mov
or
les
mov
jecxz
jl
incb
pop
dec
jo
dec
mov
and
jg
or
mov
arpl
pop
insb
xor
mov
in
fwait
adc
jo
xchg
add
push
pop
mov
pop
sbbl
pop
lcall
adc
inc
in
dec
sbb
push
lds
cwtl
hlt
test
mov
or
aaa
ds
pop
jbe
mov
imul
mov
js
stc
push
xchg
fstp
push
js
pop
shll
jg
jp
orb
mov
xchg
pop
lea
rcr
jmp
lahf
aas
push
shlb
stos
ja
sti
popl
fwait
mov
dec
test
scas
repz
mov
mov
cwtl
adc
andb
insb
movsl
repnz
push
xchg
addb
mov
movsb
or
pop
jl
test
jl
loop
pop
arpl
add
enter
cmp
or
pop
mov
leave
push
push
xor
push
dec
test
dec
sbb
mov
shrl
mov
mov
sbb
pop
xchg
call
fcompl
cld
aam
xor
icebp
adc
pop
jmp
cmc
clc
mov
xchg
rorl
sbb
scas
dec
ret
sti
pop
outsb
sbbb
xchg
xor
lds
add
push
sbb
aad
mov
or
dec
into
sub
ficoml
xchg
int
cmpsb
lcall
dec
mov
mov
dec
fcoms
fisttps
xor
or
out
sub
aas
aas
mov
cmp
dec
les
repz
adc
add
push
or
lds
hlt
int
stos
aam
sbb
jo
xchg
add
xor
push
ret
xchg
mov
ret
les
mov
les
daa
loop
cmp
bound
push
push
and
or
dec
pop
push
xor
mov
sbb
adc
mov
xlat
sbb
push
stc
daa
push
cmp
cwtl
xchg
repz
rcrl
stc
lcall
loop
fisubrs
fstpt
mov
and
jo
in
movsl
aad
xchg
adc
aaa
pop
cmp
ljmp
push
push
rclb
lret
xor
mov
xor
lock
inc
fdivl
xchg
or
push
insl
arpl
dec
xchg
testl
cmc
cmp
pop
ljmp
mov
add
cmpsl
push
push
std
and
push
lret
fcoms
ss
add
aad
mov
rorb
dec
repnz
xchg
mov
jbe
jl
lea
aad
lods
add
ficompl
jmp
adc
lret
mov
push
add
ss
js
cli
cs
shrl
pop
mov
xor
daa
jns
sub
test
pusha
push
addr16
ret
xor
repz
jbe
lds
add
aaa
push
arpl
test
pop
int
and
cwtl
stos
adc
stos
fdivrl
jge
mov
pop
xchg
fisttpll
inc
lahf
loopne
jmp
scas
nop
and
movaps
pop
push
or
test
loopne
out
sahf
in
ret
in
xchg
rcrb
xchg
add
sbb
pop
adc
push
test
insb
sub
test
cmpl
jb
cmp
and
dec
es
jno
stos
add
pop
int3
mov
and
lret
push
imul
mov
pop
std
rorl
icebp
push
lahf
lret
popf
rolb
inc
fdivr
stos
addr16
mov
inc
mov
fisubl
fsubl
inc
jmp
lret
sbb
gs
cmp
adc
fstp
push
orb
iret
ss
stos
sbb
adc
mov
cmpsl
inc
jmp
add
hlt
ficomps
in
jno
mov
add
and
pop
shlb
pop
jbe
jl
iret
mov
imull
push
and
xor
mov
mov
add
dec
stc
pop
scas
sbb
movsl
pop
and
std
push
adc
ljmp
adc
ret
push
jl
and
and
mov
mov
aam
push
jae
mov
adc
cmp
in
mov
mov
sub
jbe
mov
push
ja
test
jno
bound
cmp
jecxz
mov
ror
dec
or
push
adc
inc
cmp
loopne
insb
sbb
xor
fcoml
adc
mov
and
test
add
scas
or
nop
pushf
imul
fmul
scas
xchg
ja
pop
adc
mov
cld
loope
push
mov
int
add
sbb
mov
fdivl
jbe
mov
lock
mov
loopne
xchg
mov
mov
mov
xchg
gs
clc
mov
jl
sub
pusha
mov
hlt
cli
in
aad
xchg
xorl
mov
xlat
faddp
adc
xchg
iret
xchg
and
dec
add
stc
mov
jns
mov
adc
adc
enter
stos
adc
enter
sbb
jns
clc
nop
jo
insl
outsb
push
xor
fmull
jno
dec
lods
cmp
or
push
ja
push
inc
int
mov
or
add
imul
lret
or
adc
outsb
shlb
rorb
cmpsb
in
add
pusha
out
loope
les
xor
movsl
jno
push
inc
pop
ss
sarb
dec
push
mov
xor
or
xchg
in
repnz
or
ss
mov
xlat
xchg
stc
jnp
dec
push
lcall
xchg
mov
sti
add
pop
ds
push
pop
shrb
ret
lret
sbb
cwtl
outsb
stc
int3
xor
ja
xchg
cmp
xor
fwait
push
cmp
jle
sub
pop
fcmovu
stos
jne
jl
loop
mov
lcall
movsl
inc
and
rolb
cmc
xorb
popf
cs
jge
jne
int
aaa
xlat
and
jno
push
or
mov
mov
push
pop
fbld
in
xchg
adc
clc
in
xchg
pusha
pop
jae
adc
lcall
repz
mov
std
push
icebp
cwtl
out
push
repz
mov
mov
call
test
test
cmc
inc
dec
rcrb
pop
ss
push
cli
lret
int3
xlat
add
int3
pop
xor
test
pop
enter
repnz
out
jne
ret
pop
jg
daa
fcom
xlat
add
stos
mov
int3
pop
sub
movsl
add
loopne
xchg
inc
cmp
dec
cmc
mov
iret
xor
mov
sub
testl
lods
or
cmp
inc
out
out
rclb
cmp
aad
mov
mov
loop
push
sbb
mov
jecxz
in
xor
xor
jno
cmc
push
scas
fisttpll
shlb
xor
dec
jmp
jge
jl
cmc
pushf
push
rcll
mov
enter
cmc
dec
shrl
xor
xchg
mov
int3
cmp
jmp
mov
mov
lea
pop
les
sbb
fwait
dec
in
xlat
push
jl
jo
pushf
cmpsl
xor
int3
scas
loop
add
push
mov
mov
ja
ret
or
cmpsb
ret
fs
pop
hlt
add
imul
cld
sbb
jo
or
sub
out
and
ss
sub
push
sbb
add
aad
dec
ret
addr16
and
pushw
icebp
fimuls
push
cld
sub
ja
mov
push
mov
das
sbb
add
fsub
xchg
pop
mov
xchg
aas
addr16
sahf
sub
sbb
scas
xchg
ljmp
mov
xchg
add
shll
imul
add
rclb
stos
int
stos
push
and
mov
lahf
sbb
add
mov
mov
fimuls
test
push
jecxz
adc
nop
int3
cmpsb
xor
shl
test
gs
ss
adc
and
xor
lret
mov
pop
jae
movswl
lods
repz
sti
pop
test
lods
jo
jno
push
add
stc
sub
add
pop
push
cli
mov
mov
mov
ds
add
inc
sub
dec
push
js
cmpsb
mov
loope
dec
repz
mov
inc
ficompl
ljmp
mov
push
dec
repnz
inc
stos
cmc
cmc
jns
or
and
sbb
fistpll
shrl
mov
xchg
push
cli
iret
movsb
faddl
fnclex
cmpsl
and
stos
dec
jne
mov
push
sbb
sub
xor
jnp
jle
stos
fmul
scas
andb
sub
aas
into
mov
in
and
add
popa
mov
mov
mov
cmc
into
mov
push
xor
pop
bound
add
shll
mov
mov
push
fxch
in
fwait
lods
jmp
add
int3
add
pop
imul
fcoml
mov
inc
mov
std
xor
add
mov
lods
andl
ljmp
add
fcomp
ja
sub
and
popl
jae
jle
push
test
pop
mov
mov
ret
push
cmp
xchg
rcrb
push
pusha
shll
movsl
or
lds
xchg
push
push
repnz
shll
sahf
gs
sbb
mov
mov
jmp
sti
cltd
cmpsb
mov
push
xchg
icebp
mov
add
stc
nop
mov
scas
sbb
stos
in
les
psrad
in
cwtl
pop
mov
in
mov
lods
xchg
inc
dec
sub
mov
lea
xor
ss
mov
add
xchg
inc
push
addb
out
xlat
inc
xchg
out
pop
fdivl
add
mov
shrb
outsb
into
sub
add
mov
jecxz
cmc
xchg
mov
leave
repz
jmp
out
jae
pop
pushf
inc
cmpb
sbb
movsl
daa
jmp
sti
mul
lods
ja
add
pushf
mov
cmc
xchg
or
sub
and
push
sub
add
dec
movsb
add
ret
jge
frstor
ss
mov
cmp
jmp
pop
faddl
or
or
in
xchg
clc
roll
xchg
push
add
stc
xchg
insl
sti
mov
cltd
sbb
mov
push
fcoms
jns
out
fldcw
adc
ret
fwait
sti
stos
push
call
or
test
arpl
sub
lahf
mov
jo
ljmp
lods
hlt
dec
jl
jge
ret
lret
out
stos
andb
jb
test
mov
mov
out
jnp
aas
pop
andl
push
sahf
ret
push
sub
mov
xchg
pop
cmp
cs
inc
fdivp
out
jo
fcomi
push
xchg
hlt
cmp
lahf
scas
shll
repnz
jle,pn
mov
cmpsb
ret
in
jno
add
lods
cmpsl
mov
cli
xchg
inc
pop
bnd
sbb
scas
pop
pop
pop
mov
pop
test
jmp
push
sbb
adc
insl
pusha
nop
ret
inc
or
sub
scas
sbbl
nop
pop
aaa
cmp
push
aad
inc
adc
ljmp
sub
repz
xor
mov
into
int
sti
push
dec
call
imul
xchg
xchg
push
push
scas
cmp
icebp
mov
cmpsl
sar
fnstcw
loope
movsb
or
adc
sub
movsb
popf
in
mov
jbe
xchg
sbb
pop
int3
je
jae
ja
push
daa
and
in
mov
out
and
and
inc
xchg
mov
cmp
std
push
mov
cmp
or
sub
std
pop
mov
sbb
aad
xchg
fsubr
fs
scas
inc
mov
sbb
das
test
add
movsb
mov
or
dec
orl
push
adc
loopne
or
loope
dec
popa
fisttpl
out
or
pushf
pop
pop
push
cmp
fsts
inc
cli
jecxz
sahf
cli
mov
mov
orl
push
sbb
inc
loop
addl
pop
mov
mov
sbb
mov
lods
adc
lea
xlat
or
repnz
sbb
pop
adc
xchg
lcall
das
stos
mov
push
call
xor
push
add
nop
sbb
dec
or
adc
ljmp
mov
push
dec
mov
pop
fucom
ss
lret
mov
pop
sbb
mov
mov
push
mov
push
stc
clc
lods
mov
out
push
jb
pushf
pop
cmp
sbb
push
push
dec
arpl
cs
into
mov
cmp
pop
mov
sub
stc
pusha
movl
repz
xchg
test
leave
or
lret
stos
push
mov
cmp
mov
add
rolb
push
cltd
stos
lret
call
fdivrl
or
sbb
nop
inc
push
rcll
aas
rolb
adc
xor
jecxz
or
negb
xor
repnz
fmull
fildll
sti
push
jne
xor
push
ss
sahf
add
fiaddl
test
stc
and
ret
mov
adc
lret
fisubrs
stos
xor
fisttps
int
gs
cmc
and
inc
gs
mov
mov
rclb
add
cmp
out
and
mov
js
inc
das
xor
sbb
sahf
lea
imul
dec
aam
inc
cmc
lcall
push
add
jae
int3
pop
push
cli
ret
add
jae
test
scas
mov
push
and
dec
inc
movsb
addr16
ja
pop
mov
icebp
pop
popa
psllw
icebp
insl
jmp
or
jbe
popa
std
or
mov
or
outsl
pop
pop
xor
stos
es
and
pushf
lea
inc
dec
push
shrb
push
adc
inc
ja
icebp
inc
out
fsubrl
out
js
cmpsl
sar
mov
cmpsb
movsb
mov
cmp
mov
mov
adcb
pop
fdivrs
jb
xor
adc
inc
xchg
test
rolb
cmpl
pop
jno
inc
mull
mov
add
mov
int3
jae
popf
insb
movsb
out
stc
pop
sub
pusha
cmc
js
push
lahf
out
xor
xchg
push
mov
dec
sub
leave
scas
ljmp
mov
pop
or
xor
scas
or
jecxz
int3
out
enter
jb
mov
in
sub
fimull
xor
mov
and
addr16
xor
mov
mov
in
sub
rol
test
dec
add
xchg
loopne
mov
pusha
mov
lret
sbb
insb
loope
cmp
outsl
xlat
dec
lahf
push
adc
rcl
adc
sbb
test
push
pop
popa
decl
adc
scas
cwtl
cmp
jns
mov
daa
xchg
sbb
dec
fdivr
or
daa
and
movsb
lea
test
loope
lods
movsl
jno
xchg
mov
jmp
add
sbb
sbb
xor
sub
inc
cmc
leave
scas
push
mov
pop
adc
xchg
add
inc
push
push
add
jno
clc
xor
inc
mov
cmovle
dec
xchg
leave
repz
popa
pop
ljmp
or
or
push
shll
in
shlb
lock
cmp
fs
push
or
xor
sub
sahf
xchg
push
dec
mov
test
pop
mov
rdpmc
lahf
test
lods
sub
lcall
in
sbb
imul
adc
or
sub
dec
xchg
push
sbb
jp
in
pushf
sti
xor
outsb
inc
cmp
mov
imul
int
mov
adcl
imul
jae
rcl
out
jne
push
jne
lret
cmp
je
push
ja
ret
ja
mov
inc
mov
icebp
out
jecxz
stos
sti
lds
xor
cmp
cmp
pop
dec
mov
push
scas
nop
jne
mov
repnz
push
inc
jno
int3
mov
aaa
or
cmp
sar
xor
repz
dec
insb
adcl
mov
mov
or
test
push
cmp
loopne,pn
mov
mov
xchg
jno
loope
idivb
jmp
loop
sbb
push
mov
cmp
dec
jbe
mov
inc
lods
mov
jno
push
adc
imul
add
mov
stos
mov
push
incb
popf
repnz
mov
inc
lcall
outsb
rcrb
ror
dec
fstp
push
lock
sub
out
mov
mov
jb
mov
push
xor
fmul
dec
es
lret
adc
push
iret
inc
sbbl
jp
pop
push
in
rorb
xchg
gs
or
fimuls
std
push
add
jno
xor
fidivs
mov
outsl
add
mov
cmpb
cmc
cmp
sbb
cmpl
gs
lret
in
pop
je
ja
mov
mov
xor
scas
pop
or
push
sbb
add
aam
pop
sub
mov
mov
sub
iret
sbb
inc
dec
scas
stos
dec
int
outsl
popf
fnsave
xchg
test
cli
xor
sbb
pop
mul
aaa
pop
movsb
adcl
jmp
enter
dec
mov
popa
mov
cmp
dec
push
push
cmpsb
jbe
sbb
movhps
push
clc
xchg
fbld
test
cmp
xchg
dec
mov
in
aad
shr
sub
dec
lea
sbb
ds
mov
sahf
lods
or
jno
mov
adc
insl
imul
cmp
cmpsl
mov
push
sub
cmpsb
mov
cmp
push
outsb
scas
ret
inc
fsubrl
ficoms
cmpsb
data16
sbb
arpl
in
push
jns
xlat
es
movsl
imull
test
orl
fistl
and
mov
loop
cmc
mov
ds
insl
push
and
inc
jmp
add
mov
imul
pop
shlb
xchg
test
dec
xorl
pop
aad
daa
cmpl
test
sbb
or
mov
pop
jnp
push
mov
sti
push
inc
xchg
sub
pop
mov
mov
sbb
adc
fwait
and
mov
mov
call
cmp
lds
cmpsl
stc
imul
add
push
sub
int3
xchg
adc
shrl
pop
xor
loope
xchg
and
push
inc
inc
cmc
aam
push
imul
xor
jp
lahf
mov
mov
push
mov
fcmovnb
pop
or
add
or
mov
mov
imul
jb
inc
addb
test
jne
pop
inc
mov
sbb
repnz
repnz
adc
xor
jbe
hlt
scas
and
jecxz
inc
gs
lahf
in
lods
push
out
xor
xchg
add
shrl
xor
vsubps
cs
pop
jle
sub
mov
pop
lods
inc
add
pop
leave
popf
sbb
imul
loop,pt
ficomps
orl
roll
xchg
pop
fldcw
out
xor
dec
fistpll
mov
pop
jo
js
stos
iret
inc
push
lods
and
imul
cmpb
aas
mov
lahf
push
inc
jno
mov
mov
es
repnz
in
add
sub
out
xor
cmp
jl
adc
fsubr
int
imul
add
outsb
ja
sti
in
dec
xchg
jne
mov
jns
xchg
push
mov
in
popf
gs
das
xchg
xor
in
push
out
adc
mov
iret
and
shrl
flds
sub
pop
leave
cmp
out
add
inc
outsl
add
repz
pop
test
negl
xchg
sbb
mov
fidivl
mov
mov
add
xchg
movsl
ret
inc
test
mov
sbb
dec
jo
dec
dec
out
das
mov
cmp
adc
jmp
xor
loop
xchg
inc
jb
stos
push
pop
arpl
add
insb
pusha
push
sarb
arpl
pop
fadds
scas
int
mov
jp
in
sub
sbb
rorl
mov
dec
jecxz
data16
in
xor
push
xchg
or
or
cmpsb
mov
adc
clc
idivl
push
and
mov
dec
mov
pop
sbb
or
test
mov
pushf
imul
jbe
or
jg
repnz
inc
lahf
push
iret
add
loop
push
or
lods
inc
xor
or
test
stos
std
mov
sub
cmc
sub
pop
add
cmp
add
xchg
test
add
xor
jbe
dec
mov
jbe
cmp
mov
inc
mov
ret
sub
rcrl
std
mov
das
cmpsb
lds
mov
addr16
mov
cmpsl
add
pop
shll
iret
fcomip
adc
lret
mov
jbe
push
lret
dec
xchg
push
bound
jbe
cs
cmc
mov
sti
imul
pop
or
inc
lea
and
adc
mov
fsubr
sub
dec
sub
scas
fdivrl
mov
stos
neg
lds
repz
mov
iret
ljmp
sbb
or
movsl
add
nop
into
cmp
aam
mov
nop
iret
xor
push
std
push
inc
leave
sub
fimull
in
aas
les
loopne
dec
dec
inc
mov
xchg
popa
inc
arpl
mov
lcall
imul
scas
popf
sub
push
icebp
cmp
xchg
ss
xor
xor
push
sbb
mov
jb
pop
push
xchg
lods
scas
xor
aad
fs
idivl
fs
int3
rorb
repz
cmpsl
inc
pop
mov
fadds
xchg
fildll
insl
xchg
in
jno
pop
xor
lds
jg
or
push
in
pop
movzbl
rol
fwait
arpl
and
cmpsb
notl
cli
loope
jns
mov
dec
orb
jnp
push
ss
push
mov
fsubs
lods
sub
subl
shll
hlt
aam
loope
add
dec
and
pop
xor
movsl
imul
sbb
les
cmp
out
push
pop
jnp
or
mov
pop
ljmp
xor
or
fcmovnb
cmp
cs
or
xor
inc
sbb
in
cs
movsb
mov
mov
adc
lcall
fcoms
enter
fwait
push
daa
into
push
sub
push
icebp
sub
cmp
sbb
scas
mov
push
imul
xorb
jle
adc
add
fmull
loop
clc
negb
jno
push
mov
cmp
in
in
cmc
sub
lods
xor
int
stc
test
call
jne
clc
cmp
rol
jo
pusha
cmp
stc
lods
in
sbb
movswl
mov
shll
dec
and
shrb
dec
call
and
mov
dec
leave
adc
scas
mov
sbb
pop
adc
xor
jge
adc
pop
fildl
ja
aaa
out
push
mov
fwait
mov
jo
xor
ja
out
sbb
mov
xor
pop
loope
mov
push
aam
insl
xor
fadds
outsl
out
mov
mov
inc
xor
in
cmp
mov
inc
mov
sub
js
sbb
daa
aam
or
pop
int
hlt
jge
push
pop
inc
push
test
sub
xchg
mov
sbb
push
jns
test
idivl
fldl
pop
xlat
insl
iret
sub
pop
stos
fst
daa
in
in
mov
pop
lret
adc
jns
xor
icebp
mov
add
ljmp
jo
mov
mov
jge
insb
push
sti
mov
push
scas
xor
xchg
mov
roll
repz
dec
call
iret
out
sbb
cmp
push
sub
jo
jl
pop
push
push
mov
mov
push
cmc
pop
jge
lds
or
add
in
mov
sub
dec
je
incl
pop
adc
sub
push
and
or
cmpsl
mov
out
push
mov
fistps
incb
mov
insb
add
mov
fwait
and
add
leave
nop
push
xor
fstl
jge
jp
or
adc
adc
insl
insl
push
push
fcoml
lds
or
cltd
sti
popf
and
cmp
loopne
mov
pop
push
arpl
mov
inc
push
mov
fldt
mov
test
popf
push
and
jle,pt
loope
idivl
jo
or
jns
dec
fsubl
lods
mov
lret
lods
jmp
mov
xor
lret
xor
mov
cmpb
jnp
dec
add
jns
arpl
or
out
in
lret
ret
mov
mov
jns
out
mov
jnp
adc
sub
or
lock
push
in
out
faddl
cmp
lds
lret
movsl
fcompl
xorl
adc
inc
rcr
pushf
ret
pop
mov
or
stos
test
cmp
inc
icebp
data16
fldl
rorb
es
inc
ja
stc
inc
cmp
out
stos
cwtl
inc
or
add
push
mov
pop
movl
sbb
jecxz
xor
sbb
repnz
jecxz
xor
pop
mov
aaa
jo
mov
pop
sub
pop
and
fs
ljmp
cltd
dec
sbb
and
lahf
outsb
push
stos
sbb
xchg
popa
xchg
jnp
idivb
mov
push
jne
fs
into
add
frstor
push
mov
mov
inc
outsb
pushw
mov
cli
hlt
fildl
lcall
push
jle
pop
mov
or
inc
lret
adc
sub
hlt
xor
dec
xchg
pop
jb
fs
dec
xchg
xchg
lret
or
mov
rcll
sbb
jg
sbb
adc
mov
aam
call
mov
sbb
rcrb
cmp
cmp
inc
and
cwtl
into
cmp
imul
xor
mov
out
test
push
daa
movsl
lods
int3
inc
xchg
lret
adc
push
lock
ret
insb
test
mov
add
push
push
inc
adc
push
jno
push
push
addr16
mov
push
jecxz
cmp
mov
pop
mov
sub
pop
pop
inc
push
in
sbb
or
jl
push
scas
jno
jle
mov
jg
lahf
and
int3
mov
jmp
push
call
sarl
adc
cs
dec
dec
mov
lock
xorl
sbb
xor
or
in
aaa
mov
in
mov
xchg
loope
rcll
adc
js
cmp
and
jne
out
daa
sbb
shrl
ja
daa
mov
mov
jb
lds
mov
jno
hlt
inc
sub
jle
xor
inc
mov
je
ret
mov
pop
mov
pushf
xchg
sub
arpl
xchg
lds
xchg
hlt
loop
es
test
mov
cmp
dec
popa
call
inc
cltd
ret
pand
insl
jnp
aaa
xor
inc
fmuls
loop
scas
xchg
pop
in
cmp
pop
mov
pop
inc
push
popf
mov
insb
lods
mov
mov
cmp
add
das
mov
ror
loopne
jo
cli
std
inc
cli
pop
sbb
vdivss
pop
mov
loop
data16
xor
repnz
mov
sub
das
test
inc
scas
data16
dec
lahf
movsl
jbe
fidivrs
lds
inc
int
and
pusha
into
in
lcall
or
mov
mov
lods
ret
mov
or
inc
loopne
fsubrs
sub
mov
loopne
cltd
pop
into
out
adc
jge
pop
into
mov
sahf
push
inc
adc
xlat
lock
xor
add
pop
bnd
mov
mov
fcoml
mov
jno
lea
dec
lahf
push
and
jo
aaa
mov
push
fisubrs
pushf
addr16
ret
ljmp
sarb
test
ficompl
stc
sbb
pop
mov
adc
push
out
or
aam
je
decl
outsb
and
stos
test
pop
mov
mov
xchg
jne
cmpsl
inc
aaa
xchg
pop
cmp
push
mov
cmp
idivb
fistl
je
mov
push
push
sub
mov
mov
adc
push
mov
adc
jl
stos
sub
mov
pop
loop
in
mov
cmp
fsubrs
and
testb
dec
inc
lea
adc
test
push
jg
push
xchg
aad
daa
dec
scas
mov
inc
adc
addl
sub
in
enter
jle
pop
add
les
xchg
mov
ret
xchg
lea
int
inc
push
out
or
jbe
icebp
addl
pop
fnstcw
adc
sub
mov
cmp
in
test
popa
sbb
clc
dec
outsb
pop
enter
ljmp
ror
push
cmp
lods
pop
aas
cmc
loopne
sub
icebp
xor
push
sub
xchg
dec
cmp
dec
rolb
add
and
orb
push
or
xchg
mov
and
movb
loopne
sbb
dec
jle
mov
push
lret
iret
adc
jl
addl
and
sub
pop
dec
cltd
jp
test
call
lods
bnd
and
cmp
addr16
cmp
adc
int
repnz
in
lea
or
cwtl
cmp
xor
mov
fists
cvtps2pd
test
js
pop
mov
mov
fadd
jne
bound
sarl
outsb
nop
imul
mov
add
pop
aas
mov
into
mov
mov
movsb
loopne
push
push
jmp
std
push
or
adc
pop
xchg
test
test
pop
cwtl
js
mov
in
stos
mov
aas
pop
sbb
sbb
sbb
mov
xchg
ds
arpl
cmc
sbb
add
movsb
div
daa
adc
dec
and
xor
inc
test
sub
std
loope
pushf
push
mov
lcall
shll
push
mov
xor
xchg
mov
mov
ret
mov
mov
cld
adc
sbb
ja
dec
ret
push
rcl
out
in
xor
aam
in
ficoms
ds
jno
xchg
and
push
dec
xorl
push
and
mov
les
pop
xchg
pop
mov
dec
inc
mov
int3
movsb
or
sub
xchg
outsl
scas
in
push
mov
ja
ljmp
sbb
aaa
or
jne
addr16
sub
xchg
lcall
lock
cmpb
js
adc
imul
dec
pop
and
and
pusha
adcl
clc
push
push
xchg
test
and
xchg
fldt
or
aas
js
scas
xor
mov
scas
jb
jle
jecxz
sub
int3
or
pop
scas
add
fistps
mov
mov
dec
loopne
hlt
xchg
std
mov
dec
movsl
mov
sbb
shr
adc
aam
lret
movsl
xor
and
sub
dec
inc
stc
nop
imulb
pushf
mov
lcall
mov
cmpb
scas
pop
dec
fldt
xchg
es
mov
movsb
sub
adc
ret
dec
pop
fxch
call
call
jl
repz
aaa
mov
fstl
jle
js
orb
jns
and
jno
or
sbb
pop
mov
adc
ds
jecxz
sti
out
loope
test
lds
idivl
clc
incl
sub
pop
fcmovne
pop
mov
adcb
mov
into
pop
ja
ror
add
imul
bound
aad
mov
sub
cwtl
sbb
subl
mov
aam
fdiv
cmpsb
mov
enter
dec
inc
imul
push
pusha
or
das
mov
cmp
testb
mov
test
loopne
mov
cmpb
fwait
fwait
dec
cmp
xor
xchg
outsb
aas
push
mov
adc
pop
out
aaa
gs
jb
les
sbb
ja
int3
mov
popa
xchg
loopne
xor
outsb
scas
xor
stos
bound
pusha
out
cwtl
pop
in
in
push
cmp
pusha
mov
push
lret
add
jp
call
hlt
cmp
pop
icebp
xchg
setge
push
int
and
inc
and
push
mov
or
mov
subb
insl
daa
sub
cmp
sub
mov
pop
cmp
mov
push
out
xchg
icebp
push
arpl
dec
insb
js
dec
jmp
push
clc
pop
ja
in
push
mov
stos
or
cli
in
sub
mov
xor
cmc
int3
stc
adc
push
push
pop
test
sbb
ljmp
sub
and
add
imul
jmp
stos
pop
push
jbe
aam
dec
mov
stos
dec
test
xor
pushf
and
loop
lods
rcr
in
inc
pop
jns
add
into
pop
jge
stos
addb
xchg
push
dec
icebp
mov
jmp
sbb
outsb
mov
arpl
or
test
in
addl
fwait
out
xchg
pop
mov
push
flds
adcb
ret
push
dec
xchg
das
in
xor
xor
fldl
out
out
mov
sub
outsb
icebp
xchg
adc
das
inc
push
imul
mov
mov
pop
ss
ss
adc
jbe
and
call
adc
xor
cmc
popf
addb
shlb
jns
lock
lret
mov
ret
cmpsb
loopne
out
fdivs
sub
dec
cmp
imul
mov
test
stos
sbb
outsl
mov
xchg
xor
js
xorb
add
div
cmp
out
xchg
stc
mov
shl
cwtl
mov
cmp
fwait
mov
cltd
mov
mov
jmp
xchg
push
lret
fbld
stos
daa
add
out
popa
das
nop
pop
mov
pop
out
xchg
mov
repnz
in
lds
mov
inc
jl
or
hlt
shlb
cmc
mov
add
jle
adc
xor
mov
adc
mov
pop
shll
lret
sbb
rcl
sub
aas
cmp
mov
or
cwtl
loope
inc
mov
dec
jns
mov
das
inc
fistpll
addb
out
jge
in
push
dec
adc
pop
pop
call
mov
lds
sbb
and
loopne
out
lret
add
loop
add
decb
stos
jge
mov
push
inc
cmp
or
icebp
dec
movsl
add
add
iret
test
fwait
and
cmp
xchg
lods
repz
rcrb
cwtl
das
ror
jecxz
and
popa
call
outsb
sub
cmp
int
xor
subl
jae
lock
adc
push
mov
test
js
sub
mov
rorb
xchg
fstpt
inc
cmp
mov
xchg
cmp
stc
sbb
and
inc
cmp
mov
adc
adc
lcall
in
mov
lock
ja
jmp
or
add
add
outsl
rcll
daa
mov
ret
cli
aam
cmp
repz
ja
test
ss
and
dec
orl
xor
xchg
or
dec
aas
call
xor
ret
shl
sahf
shll
pop
fcoml
inc
mov
mov
mov
cmp
in
jo
cwtl
mov
mov
or
cmp
int
inc
clc
cmpb
out
insl
stc
and
cs
in
dec
adc
stc
adcl
stos
push
gs
cmc
das
mov
push
or
xchg
loop
inc
fwait
mov
dec
icebp
mov
scas
sarb
stc
cmp
fnsave
jb
nop
or
outsl
mov
pop
std
sub
jnp
rcr
mov
xchg
and
mov
lods
xchg
ret
sub
pushf
mov
lds
andl
out
call
mov
loope
pop
ret
inc
cld
inc
or
mov
mov
or
gs
int3
jmp
idivl
outsb
stos
push
clc
fistpll
out
mov
jnp
mov
pop
push
mov
add
dec
mov
mov
jns
push
push
lea
mov
popf
call
imul
xorl
movsl
lods
sub
cld
jge
cmp
outsl
push
mov
lds
icebp
jecxz
popf
mov
or
fldcw
adc
iret
data16
push
jmp
or
addr16
in
cmpsl
int3
test
xchg
iret
cmp
jnp
loope
lret
stos
lret
add
add
clc
das
pop
loope
loope
and
jp
test
out
sub
flds
xor
xlat
lock
cmp
pop
pop
pop
add
and
mov
nop
arpl
push
push
mov
dec
mov
cmc
lahf
push
sti
cld
jmp
outsl
sub
sarb
idiv
ret
fcoml
pop
sbb
mulb
pop
or
lret
jg
or
stos
cmp
push
loopne
jnp
xor
add
mov
enter
in
mov
xor
in
sbb
mov
hlt
cmp
xchg
xchg
xchg
cltd
arpl
mov
jae
out
arpl
cs
mov
cld
pop
push
sub
push
inc
mov
rolb
inc
xchg
stos
pop
lret
jecxz
clc
cmp
ret
gs
xchg
mov
xor
adc
lea
out
sbb
cli
jge
mov
out
repnz
mov
fdivrs
mov
jae
scas
jbe
shr
addb
dec
inc
sub
mov
and
fisttpl
lahf
in
lret
in
mov
fbld
mov
arpl
cltd
pop
cmp
jp
xchg
insl
mov
mov
add
add
lods
pop
cld
xchg
lods
in
xchg
xlat
loope
dec
adc
inc
js
dec
bound
xlat
sub
jp
sub
push
lods
dec
popf
cmpsl
mov
lds
sub
push
pop
add
sbb
mov
rcll
sbb
out
push
mov
sahf
es
nop
data16
xchg
sub
xor
cwtl
pop
fcompl
test
loop
push
je
sbb
cmpl
dec
pop
mov
add
adc
stos
pop
lcall
in
cmpsb
mov
and
mov
mov
mov
jg
mov
xor
sub
into
push
xchg
and
and
inc
nop
mov
shrb
xlat
repz
mov
cmp
nop
fstpt
cmc
mov
jmp
scas
dec
aas
jnp
ds
push
or
loope
sbb
fdivs
clc
pop
mov
inc
jecxz
xor
aam
shll
loope
xchg
jp
sbb
mov
mov
test
adc
aas
inc
lea
mov
xchg
ret
cltd
mov
outsb
out
dec
sbb
lods
jne
iret
call
or
xor
mov
dec
push
and
mov
sub
dec
in
in
outsb
movsb
mov
and
sub
cmpsb
and
je
popa
mov
imul
mov
inc
std
insl
push
je
in
jno
jge
int3
movsb
xor
repz
xchg
xor
mov
test
sub
mov
mov
in
add
pop
cmpsl
adc
xlat
inc
xlat
ret
or
xor
loope
xor
shl
inc
xchg
dec
fidivl
les
mov
mov
xchg
and
xor
movsl
sbb
xor
and
cli
push
divb
lret
pop
xchg
enter
imul
insb
into
inc
jmp
lods
mov
dec
mov
jns
dec
pop
mov
scas
rol
sti
repz
sbb
out
adc
int3
jnp
adc
adc
loopne
jo
sbb
fnstenv
in
out
bound
or
lret
add
test
push
add
xor
mov
rol
sti
or
cmp
or
jl
fisubs
xchg
pop
icebp
dec
popa
push
ret
ja
add
icebp
popf
sub
in
dec
pop
ret
nop
inc
sub
and
push
mul
mov
mov
dec
bound
fildl
filds
xor
clc
fcomi
adc
test
enter
daa
popa
dec
mov
push
cmp
cmp
add
xchg
pop
js
dec
lock
pop
int
loop
mov
fxch
jno
mov
bound
adc
or
rolb
and
sbb
loope
imull
test
clc
mov
std
roll
cmp
sbb
int3
repz
push
pop
add
or
pop
dec
add
aas
inc
mov
mov
lcall
sub
lahf
addr16
test
ja
xchg
clc
jnp
pop
stos
jo
in
mov
mov
into
movsl
pop
mov
sbb
in
gs
movsb
iret
stos
sub
jecxz
jmp
xor
lahf
popf
int3
gs
fisttpl
xchg
subl
scas
scas
lret
push
jo
js
inc
mov
jl
inc
xchg
xchg
xchg
fildll
add
sbb
add
aas
jnp
mov
xor
xchg
or
cmp
jmp
and
mov
int
or
arpl
stc
mov
test
insb
sbb
sub
lret
xchg
pop
xor
jge
dec
sbb
inc
mov
ss
pop
push
ja
or
mov
or
xor
test
ljmp
cmp
scas
addr16
sub
push
inc
enter
push
xchg
outsl
jo
std
sub
inc
push
int3
mov
andb
jns
adc
sbb
ret
pop
aaa
cli
fiadds
push
or
mov
sbb
aaa
scas
lock
in
outsb
ret
xchg
xor
sub
and
je
push
loopne
push
or
lahf
in
pop
pop
push
or
mov
lret
xchg
and
cwtl
mov
lods
fcmovu
sbbb
shrb
push
mov
fimuls
mov
loope
cmpsb
adc
inc
mov
sbb
mov
sbb
insl
inc
push
push
jg
inc
cmc
or
inc
lods
enter
push
movsb
fdivrp
pop
xadd
push
xchg
add
insb
mov
sbb
je
inc
lret
xchg
adc
adc
add
mov
bnd
xor
in
and
fdivl
insl
mov
xlat
xchg
imul
cmp
mov
hlt
push
push
push
xor
mov
fldl
mov
mov
leave
lret
jl
subb
adc
xchg
stc
out
sbb
dec
aaa
push
out
repnz
and
pop
imul
int3
nop
mov
and
dec
add
js
dec
xor
mov
aas
cmp
call
call
stc
inc
jbe
inc
xchg
push
test
fisttpll
lcall
fwait
aaa
mov
mov
les
lcall
mov
je
or
pop
sti
or
mov
and
mov
popf
std
push
icebp
shlb
das
popa
aad
inc
jp
mov
outsl
bnd
jmp
ficomps
out
and
mov
imul
pop
push
pop
sub
push
outsl
mov
mov
pop
xchg
mov
pop
data16
jmp
pop
addr16
lods
in
push
or
add
cmp
sub
ds
cmp
inc
pop
xor
pushf
cli
addr16
pop
adcl
shrl
mov
jecxz
pop
jnp
int
mov
popf
mov
or
mov
test
add
cmp
xchg
addl
sub
je
stos
sub
sub
bound
mov
add
and
xor
dec
and
lea
adc
scas
sub
or
jge
orl
sub
push
mov
mov
leave
fistpl
scas
stc
xor
rcll
pop
rorl
jbe
aas
sar
loopne
gs
sub
ss
mov
xor
xchg
test
or
or
pop
dec
xchg
iret
push
jg
sub
insb
sti
dec
sarl
test
push
fwait
cs
sub
cmp
mov
iret
hlt
mov
sbb
add
pushf
insb
mov
sbb
sbb
pop
dec
fsts
call
mov
cltd
and
pop
das
cmp
cli
inc
mov
adc
sub
or
into
xchg
aad
jb
in
cs
inc
adc
push
rcl
pop
test
addr16
push
imul
mov
xor
sub
gs
rorb
dec
ret
mov
scas
jp
push
xor
mov
call
inc
arpl
ds
stc
push
dec
call
insb
popf
enter
outsl
lret
and
pop
rcrb
push
repnz
xchg
adc
lods
push
jle
rorb
pop
add
pop
test
aam
mov
outsb
sub
jle
or
push
ljmp
negb
gs
lods
push
lods
xchg
pusha
fs
xchg
adc
sub
pop
xchg
xor
xor
mov
jle
enter
insb
roll
mov
xchg
ds
sbb
mov
call
subb
adc
adc
jmp
std
and
fisubl
push
or
rclb
jg
inc
shrl
out
cmpsb
rcrb
hlt
push
addr16
dec
cmp
inc
icebp
sbb
mov
mov
cmp
xchg
fmuls
sbb
xchg
pop
aaa
xor
stc
les
js
addb
pop
mov
push
fcoml
mov
lods
or
sub
jnp
cwtl
inc
in
sbb
ficompl
bound
lds
or
xchg
mov
cmp
hlt
add
push
jmp
jne
in
add
roll
jnp
mov
mov
jp
pop
imul
mov
popf
gs
loope
jg
sbbb
lea
shl
fcomps
ds
into
xchg
imul
test
jmp
or
add
and
cmpl
test
out
fadds
jge
mov
pop
ret
xorb
lods
xor
jge
out
jo
or
test
shll
lahf
lods
mov
mov
push
cmp
or
je
in
dec
sbb
mov
xchg
popf
cmp
int3
imull
pop
imul
rcl
or
into
adc
jp
and
imul
inc
cwtl
jg
inc
and
je
xchg
cwtl
add
int
movsl
inc
dec
out
push
scas
stos
xor
dec
scas
popf
or
dec
fidivrl
jnp
sub
pop
dec
pop
orb
or
int3
ret
les
ljmp
mov
push
insl
imul
adc
insl
jg
or
je
lcall
inc
sub
outsb
enter
jg
roll
rolb
stos
dec
test
aaa
je
mov
jp
pop
out
aam
pop
pop
or
jl
loopne
cli
popf
or
scas
ljmp
andb
bound
adc
mov
std
and
cmp
fmull
roll
jno
dec
mov
xchg
loop
jmp
mov
sbb
or
test
inc
je
mov
mov
fcoms
sub
in
add
xchg
mov
fnstenv
sub
lock
fwait
cld
push
vpmaxub
or
leave
decb
inc
or
push
sbb
push
jnp
or
movsl
enter
jns
jno
in
int3
sbbb
cmp
sub
lds
data16
and
hlt
pop
push
inc
popf
movsl
and
ret
push
lds
js
aas
stos
lahf
repz
scas
call
xchg
mov
aam
inc
test
pop
cmp
mov
movsb
icebp
cmp
je
dec
pop
loop
cmp
mov
aas
aam
or
and
cmp
into
lods
popa
mov
scas
push
rclb
inc
push
test
inc
xchg
mov
std
stos
test
in
shll
enter
enter
popf
leave
rcrb
ret
jmp
inc
add
lock
loop
mov
xor
hlt
xchg
les
xchg
rcl
pop
push
adc
sbb
cmpsb
jae
jo
je
mov
aaa
out
sbb
mov
pop
xchg
xor
and
adc
ret
and
push
cli
mov
pop
dec
rorb
xor
aad
pop
mov
cmpsb
lcall
sbb
mov
test
push
test
lock
cwtl
push
inc
dec
js
cmp
and
loope
cmp
stos
daa
popa
inc
sbb
call
cmp
pop
mov
sbb
xor
sbb
nop
cmpl
sbb
mov
inc
insl
fs
cmp
pop
mov
shlb
test
and
jmp
cmp
push
movsl
mov
push
mov
out
fisubl
xchg
popa
and
dec
outsb
jno
clc
inc
jae
clc
imul
push
adc
fldenv
pushf
and
xchg
lock
jnp
and
dec
fiadds
sub
ss
or
dec
jbe
outsb
push
dec
sub
and
sub
push
jle
outsb
cmp
mov
sar
and
into
loop
lds
mov
jno
aaa
push
sub
fisubrs
sbb
or
cmp
cmpsl
lds
stos
pop
dec
fwait
inc
sahf
fstl
pop
loope
cwtl
aad
gs
add
cmp
cmpsb
es
adc
pop
and
mov
mov
adc
stos
push
sub
push
add
push
or
popa
fs
iret
sbb
fistl
leave
je
cwtl
cmpl
rorb
and
sarb
call
adc
sub
cmp
sbb
fwait
jp
and
jnp
je
mov
push
inc
loop
cmp
sub
fstpt
cmp
sub
negl
or
jmp
inc
outsb
cs
or
jle
cmp
loope
loop
mov
test
sbb
lret
int3
sbb
ss
stc
mov
xchg
fcoms
cltd
in
xlat
sahf
mov
sbb
lcall
mov
inc
jnp
push
adc
jo
push
inc
arpl
push
es
xor
sub
inc
push
imul
jl
stos
aas
jge
jmp
or
clc
shrb
fbld
aas
xchg
or
pop
jle
aas
sbb
pop
adc
bound
in
test
add
gs
insb
test
add
iret
cmp
insb
fdivrl
adc
test
sarb
pusha
insb
test
xchg
or
enter
pop
sbb
sbb
dec
fstpl
std
icebp
insb
loopne
movl
cmp
jle
xchg
pop
push
cli
test
cwtl
fnstcw
sub
mov
sbb
pop
clc
test
inc
inc
stos
inc
shlb
call
sbb
inc
insb
or
inc
jge
int3
outsb
push
xor
out
cmp
dec
push
xor
loopne
stos
pop
inc
or
cwtl
adc
inc
xchg
fs
mov
dec
mov
arpl
pop
pop
call
in
cwtl
sbb
cmp
ss
cmp
mov
ja
iret
rclb
cmpsb
es
mov
adc
cli
jg
sti
jmp
pop
xlat
daa
icebp
shlb
out
sti
dec
addr16
out
or
jl
fidivrl
mov
mov
or
rol
xor
push
shl
inc
inc
rolb
dec
std
push
scas
sub
xor
or
push
icebp
jo
or
fldcw
repnz
mov
notb
inc
loope
js
je
jmp
add
or
xor
mov
xor
lds
adc
stos
sub
pop
rcrb
out
jb
or
adc
dec
jmp
xchg
test
cmp
nop
loope
jnp
rolb
in
push
xchg
mov
dec
aad
push
add
stos
mov
ja
adc
mov
enter
sub
jbe
xchg
movb
xor
fs
inc
lods
push
jbe
movsl
xor
clc
and
pop
push
into
ret
push
cmp
mov
ret
xor
sbb
sub
ja
rorl
pushf
fwait
push
std
out
fnstcw
sub
aas
xchg
dec
rcrl
xchg
pop
iret
jp
pop
shrl
fstl
sbb
pop
push
or
es
adc
push
mov
or
fs
popa
cmp
pop
push
cmp
or
pop
cmp
js
arpl
or
std
dec
jnp
pushaw
mov
ljmp
cwtl
adc
adc
jp
lea
jae
adc
jmp
stos
shlb
cmp
lock
push
movsb
jo
addr16
sub
or
push
iret
push
xor
repz
cwtl
add
loopne
aaa
lock
mov
outsl
and
mov
xchg
in
mov
cmp
lahf
cmp
mov
dec
es
jecxz
jo
stc
or
nop
sub
push
mov
cld
loope
js
daa
pop
dec
push
jae
push
aas
dec
lods
popa
sub
xor
pop
hlt
cmpsb
mov
push
in
fnstenv
jg
aad
cmp
xchg
stos
cmp
clc
icebp
test
cltd
pusha
and
ds
xchg
pop
xor
addps
insb
daa
jl
or
fs
adc
mov
lea
mov
sbb
shll
sbb
xor
test
int3
jne
mov
ljmp
es
lret
fdiv
popa
mov
insl
jno
jp
or
cmp
mov
subb
sub
outsb
sub
adc
out
pop
pop
sub
cltd
push
xchg
out
mov
lods
fisttps
mov
enter
leave
inc
mov
push
je
push
clc
dec
dec
push
push
scas
pop
pop
mov
mul
cmp
xchg
jae
push
test
icebp
nop
aam
mov
bswap
cmpsl
jp
jge
movsb
subl
hlt
jnp
push
push
stc
ret
sub
movsb
xchg
jb
in
xchg
pop
nop
lcall
fwait
out
clc
lcall
loope
push
stc
pop
int
xchg
pop
test
mov
shr
mov
inc
aas
stc
jecxz
dec
fidivrl
sub
ja
jp
lret
or
pop
fimull
xor
or
sub
xchg
xchg
imul
mov
or
out
cmp
xchg
aaa
or
jb
inc
loope
or
xchg
xor
mov
sarb
add
fs
lcall
insb
dec
xor
imul
mov
fisubs
pop
add
push
pop
fs
les
mov
push
out
xchg
std
mov
xor
adc
cmp
shll
push
addl
fcompl
shl
xchg
dec
jmp
out
pop
daa
dec
mov
adc
subl
jle
and
fs
icebp
data16
push
sub
stos
cmpsl
fldt
mov
popf
sub
in
lahf
mov
pusha
ds
enter
mov
xor
lock
ret
adc
and
xchg
or
and
pop
sbb
pop
pop
loopne
and
pop
pop
repz
outsl
mov
or
leave
fcmovu
repz
call
je
leave
dec
fs
cmp
arpl
cwtl
mov
dec
test
test
lds
bnd
aad
inc
leave
or
mov
test
test
sub
sbb
cli
inc
sahf
push
jnp
inc
pop
rcrb
or
std
jae
orl
mov
mov
pop
lahf
inc
sbb
fwait
xor
cmp
iret
sub
fstpt
pusha
shrb
jno
loope
pop
lcall
rorb
dec
sbb
push
push
xchg
mov
gs
popa
addl
fsubp
and
jecxz
clc
insb
sub
fildl
xor
push
cwtl
adc
loopne
lea
fdivrl
sbb
mull
sti
or
ret
stos
hlt
pushf
add
addr16
jbe
adc
jbe
insl
xor
pop
dec
mov
lds
loopne
in
or
dec
cmp
cmp
sub
scas
jecxz
or
mov
stos
cld
aaa
andps
sub
repz
in
call
mov
decl
lret
or
cmc
js
ret
xor
cmp
clc
fdivs
dec
jmp
nop
sbb
cld
scas
icebp
outsl
jl
sub
rcrl
inc
faddl
jb
jle
and
sahf
insb
cld
push
loope
mov
pop
aas
xchg
cwtl
movsb
stos
mov
sub
inc
imul
dec
add
aas
ret
cli
mov
adc
jecxz
into
mov
adc
push
pop
cmp
xchg
pop
add
cmpsl
fdivrl
fdivs
rcl
into
or
xor
dec
push
pop
mov
xor
push
inc
dec
es
push
mov
jl
lret
arpl
leave
mov
loopw
stc
xor
push
mov
xchg
push
or
insb
mov
push
enter
push
sbb
cmpsb
popf
inc
jcxz
sub
repz
mov
lahf
mov
cmc
outsl
gs
fisubs
repz
test
insl
dec
stc
mov
push
sub
shrl
movsl
pop
cmp
aaa
imul
rcr
cld
or
mov
lods
int3
int3
imul
add
or
nop
cltd
cmp
sbb
outsb
xchg
dec
dec
push
aad
xchg
push
inc
lret
push
int
inc
adc
loope
hlt
cmp
mov
mov
xor
mov
mov
jg
es
push
testl
shll
cmp
xor
std
inc
ljmp
adc
xchg
in
push
sbb
and
sub
dec
pop
pusha
mov
add
test
jmp
repz
fs
push
mull
xor
flds
add
xchg
popf
mov
or
insb
mov
cwtl
stc
sbbl
lods
fmul
pop
jae
nop
jns
or
sbb
pop
outsl
xchg
jae
enter
nop
bound
fsubrl
xor
pop
adc
ja
bound
repnz
ds
aam
add
das
mov
mov
inc
pop
negl
aam
push
inc
aad
fsubr
scas
outsb
cmp
push
fpatan
std
inc
mov
lds
jo
frstor
and
adc
jecxz
shll
xchg
or
mov
movsl
add
out
dec
push
xchg
bound
adc
scas
sub
lea
or
or
push
js
repnz
inc
ljmp
or
mov
mov
sti
lock
add
jno
or
ds
push
imul
addr16
pushf
fcoml
cs
lret
push
adc
push
bound
pop
mov
sub
sub
xor
push
arpl
mov
push
ror
or
jns
lret
mov
ds
ja
aaa
daa
xchg
and
pop
idiv
test
xchg
or
jo
jnp
jb
adc
or
sbb
or
pop
push
and
leave
ss
inc
jl
js
in
call
das
pusha
mov
int3
or
fisubl
flds
ret
xchg
inc
fdivrs
mov
nop
sub
lret
cltd
adc
js
shll
aas
orl
dec
test
aaa
cmp
inc
and
subl
bound
push
repz
sub
aam
mov
pop
aas
outsb
dec
xchg
sbb
push
sbb
sbb
loopne
cmp
mov
jbe
cmp
mov
movsb
cmp
mov
ds
in
lods
jmp
pushf
or
push
orl
inc
fbld
mov
pop
addr16
aaa
pop
mov
jg
aas
insb
repz
mov
pop
push
mov
sahf
addl
jmp
outsl
or
iret
lahf
mov
pop
jnp
sub
xchg
push
gs
ror
jne
popl
insl
sbb
imul
lret
inc
inc
addr16
mov
xchg
push
mov
mov
rclb
stos
pop
inc
addr16
mov
sub
movsl
mov
push
mov
stos
jl
sub
sbb
xchg
and
dec
sbb
pop
outsl
xchg
inc
adc
roll
in
in
aas
imul
pop
insl
sar
lock
jg
pop
rclb
lds
cmp
add
popa
insb
xor
mov
mov
and
mov
js
xchg
fdivl
or
jmp
stos
mov
xchg
repz
push
comiss
and
pop
outsl
in
add
push
cli
xchg
adc
cmpsb
cmc
sbb
adcl
push
fs
cs
imul
adc
push
cli
pop
fldl
push
jp
mov
ja
js
jmp
test
sub
xchg
sub
cld
es
in
add
pop
lret
lods
pop
int3
add
pop
lahf
fwait
adc
test
push
cli
aam
mov
fistl
sbb
cwtl
movsl
fadd
lock
cmpsb
jg
ret
jge
out
and
ja
cli
cltd
inc
mov
out
lret
jmp
std
xor
sub
dec
rcll
aas
cmp
dec
subb
push
push
sbb
push
adc
or
cmpsb
cmc
mov
push
pop
dec
mov
jo
mov
movsb
cmpsb
cmpsb
mov
pop
sub
xor
xchg
orb
push
lcall
pop
and
inc
xchg
rorb
jmp
inc
add
jns
je
push
jmp
pop
xchg
adc
inc
pushf
mov
inc
lock
adc
dec
mov
lcall
xchg
les
sbb
faddl
aam
lret
inc
ja
or
sarb
adc
into
jmp
fs
lahf
push
push
addb
stos
imul
pop
and
lcall
jbe
dec
sbb
inc
fadd
lods
cmp
clc
dec
fists
bt
rolb
sbb
push
mov
out
fwait
in
xor
adc
or
in
imul
inc
jmp
arpl
add
fldcw
and
xchg
jae,pt
repnz
jecxz
sbb
loop
jcxz
loop
push
je
add
xchg
clc
or
roll
fmul
mov
mov
repz
idivl
mov
or
int3
cmpsl
inc
sahf
roll
sbb
xchg
dec
in
jb
jnp
sub
mov
jb
sub
rorl
xchg
repnz
xchg
je
pop
push
xlat
add
mov
xchg
lea
push
mov
mov
in
add
pop
xor
fwait
jo
pop
or
movd
adc
adc
inc
xchg
aas
jmp
mov
fwait
lea
fisubrs
and
icebp
xor
stc
inc
jae
into
insb
inc
lods
stos
jae
xchg
fwait
push
aam
popa
shl
and
nop
sub
xor
mov
push
dec
data16
mov
xchg
test
lds
iret
pop
mov
aam
inc
stc
pop
out
adc
mov
scas
dec
outsl
sub
xor
mov
mov
rcll
or
pusha
call
dec
mov
inc
or
push
cmp
setle
mov
dec
dec
and
mov
call
clc
into
hlt
and
out
int3
aam
pop
out
test
push
cmp
jbe
shl
xor
xchg
fcomps
lret
arpl
lret
adc
pop
lods
pop
push
and
push
cwtl
cmp
inc
cli
je
iret
scas
gs
add
sub
int3
sbb
push
clc
cmc
aaa
aas
push
int3
faddl
shll
cmpb
cmpsb
ret
hlt
mov
add
mov
inc
cmp
cli
sahf
push
inc
movsl
imull
pop
lret
rcll
sub
or
repnz
jae
in
xor
sarb
mov
ret
mov
push
out
leave
dec
hlt
xlat
push
and
push
repz
cmp
push
dec
in
fldl
mulb
mov
dec
pop
das
add
push
sub
data16
shl
and
xchg
add
cwtl
nop
mov
fmull
inc
mov
push
in
outsl
loope
pop
ds
sti
popf
jbe
xchg
xchg
fwait
lret
in
mov
mov
clc
aas
mov
into
adc
hlt
andb
repnz
das
mov
dec
sbb
push
dec
test
iret
sbb
lret
lods
pusha
aad
xor
pop
mov
jmp
imul
out
lods
lods
jnp
iret
ds
mov
pop
mov
sbb
and
popa
xor
jl
jmp
ret
adc
cwtl
xor
nop
dec
jl
push
mov
dec
in
dec
stos
aas
jmp
xor
xor
fld
xor
leave
ret
inc
sbb
push
push
jg
xchg
pop
mov
sub
push
ret
inc
or
inc
rcll
out
mov
mov
sti
cmc
dec
pop
ja
filds
xor
mov
jg
je
mull
rorl
xchg
inc
shlb
dec
inc
jl
xor
das
iret
scas
jmp
dec
push
mov
in
mov
aam
fcmovnbe
mov
loop
mov
jp
add
xchg
repnz
pushf
mov
push
jns
push
and
lret
test
inc
in
jns
clc
loopne
insb
imul
testb
push
push
adc
not
jge
hlt
rcrb
cmp
leave
xor
push
testb
inc
inc
call
movsb
call
lods
jbe
cmpsl
aaa
pop
jp
and
xchg
xchg
jnp
sbbl
or
push
outsb
cld
lds
hlt
and
lods
push
xchg
popa
ss
inc
add
inc
pop
ret
pop
mov
fistl
push
imull
push
xchg
fidivrs
cmpsb
dec
pop
or
cmp
aad
jae
daa
sbb
out
sbb
ret
mov
enter
in
pop
icebp
dec
dec
stos
jns
adc
shll
push
jne
lock
fidivl
xchg
cmp
cmp
mov
push
xchg
pusha
xor
rcll
jns
jmp
test
sbb
add
sub
pop
jns
lock
out
aas
bound
mov
inc
mov
xchg
sub
sbb
ss
mov
cmp
test
or
rcrb
clc
jns
outsl
shr
adc
cs
add
lcall
jb
sub
dec
daa
test
fdivrp
sti
xlat
sbb
inc
lods
insb
add
ja
fnstsw
mov
mov
xor
cmpsl
push
int
adc
pop
repz
dec
push
test
pop
mov
stos
not
push
fisubs
fmuls
rolb
into
leave
and
mov
push
sub
or
sub
mov
dec
in
cmp
xchg
adc
ficompl
dec
mov
ret
and
jns
dec
mov
jae
jmp
xchg
rcrl
leave
addr16
pop
mov
jge
or
test
lods
inc
xchg
xchg
jg
pop
jecxz
pop
out
xchg
sbb
cltd
aad
fwait
clc
stos
in
jmp
je
xchg
jne
pop
popf
cwtl
idivl
mov
jnp
inc
pop
sub
sbb
cmp
mov
lods
ret
pushf
add
mov
push
sbbb
cmpsl
adc
dec
imul
mov
push
stos
or
fidivrs
push
cmp
insb
pop
ja
lret
std
rolb
imul
add
fmuls
bts
insl
out
pop
sti
sub
js
dec
push
pop
mov
fs
repz
cli
neg
mov
xor
add
sbb
xor
and
jg
push
das
jmp
mov
xchg
arpl
fs
icebp
xchg
movsl
movsb
addb
ret
jp
mov
jo
dec
fs
mov
mov
and
in
inc
jbe
mov
mov
dec
outsl
mov
mov
out
inc
mov
sbb
mov
inc
sbb
lea
pop
jecxz
jb
lcall
aad
imul
jmp
mov
mov
mov
inc
mov
sbb
inc
cmp
add
ja
jle
lock
cld
xor
inc
movsb
shll
pop
je
dec
std
pop
xchg
fbstp
and
mov
in
cld
les
enter
sbb
ss
iret
int
xor
and
fstpt
push
sub
rclb
in
sbb
test
jae
and
popa
cmpsl
jbe
fwait
jnp
je
lods
leave
repz
dec
jp
mov
inc
jnp
aas
in
jbe
jg
add
pusha
push
rcr
inc
fiaddl
inc
and
mov
out
and
hlt
or
out
jae
sbb
mov
inc
sub
jae
sub
fdiv
inc
adc
or
es
fimuls
shrl
adc
aas
daa
xchg
imulb
add
mov
jns
mov
cmp
or
adc
out
out
dec
mov
mov
pusha
jle
push
and
test
outsb
pop
and
mov
mov
xchg
mov
xchg
test
je
xor
mov
lock
dec
mov
pop
mov
sbb
and
and
iret
out
mov
or
add
jne
repz
scas
add
adc
or
jne
add
jg
pop
fildl
jle
nopl
xor
xchg
adc
insl
xor
xor
mov
xchg
mov
fwait
das
orl
inc
repnz
push
mov
add
push
ficoms
xor
lds
add
pop
into
adc
mov
add
and
outsb
movsl
jbe
jnp
xchg
es
movsb
cmpsl
jle
cld
adc
nop
fmull
loopne
icebp
es
add
mov
and
dec
dec
adc
inc
out
sbb
mov
xchg
lds
mov
lahf
push
mov
xor
outsb
lahf
xor
shl
aad
jnp
pop
cwtl
mov
xlat
adc
or
repz
pop
cmp
bound
shl
add
mov
mov
or
xor
add
subb
pop
xchg
rcr
mov
in
lret
cmp
xchg
xchg
mov
insb
int3
mov
test
sbb
and
or
and
int
jo
hlt
sbb
fisttps
add
sub
cmp
inc
sarb
in
jmp
cld
mov
lods
mov
jns
mov
in
sbb
cld
jnp
xchg
xor
sub
mov
into
cltd
int3
aam
lods
scas
shrb
aaa
push
in
push
aas
sti
fiadds
xchg
cli
push
inc
in
jns
mov
jae
sarb
repz
mov
mov
frstor
das
xchg
je
les
push
cltd
cmp
out
adc
jns
repz
dec
arpl
mov
push
mov
fstpt
push
and
dec
and
and
addr16
inc
jnp
mov
jle
cmp
test
inc
push
cmp
jnp
fucomip
xor
mov
xor
cltd
paddsb
fsub
sbb
dec
fsubrs
dec
pushf
mov
and
add
push
pop
jl
push
push
lahf
repz
push
pop
pushf
fcomp
dec
loope
je
enter
ret
pop
pop
lcall
addb
dec
inc
pop
data16
in
push
push
jnp
cs
gs
out
push
sub
in
push
dec
mov
cli
cmp
ss
sahf
inc
fsubs
cmpsl
or
cli
shl
pop
clc
cmp
je
int3
mov
sbb
add
insl
or
fsts
xor
test
mov
inc
gs
xchg
nop
les
lea
cs
cld
sbb
rcrl
in
loopne
test
push
mov
fmull
mov
and
in
push
aad
movsl
push
or
sub
aam
mov
into
sahf
or
mov
or
jb
pop
movsl
mov
sbb
add
jnp
xor
mov
out
dec
jge
cmpsl
push
ljmp
pop
dec
and
mov
cmc
loop
inc
cmp
mov
mov
imul
ret
ret
mov
and
std
es
push
adc
jg
mov
dec
adc
mov
mov
ss
inc
ja
ljmp
fs
xor
pop
das
arpl
mov
mov
adc
outsl
ret
iret
add
sbb
and
pop
js
aas
stc
into
cmpsl
inc
dec
cmp
repz
fwait
or
adc
mov
ss
add
jns
imul
sbb
mov
jmp
sbb
fistps
std
aad
shrb
movsl
add
pop
popa
andl
sub
push
js
je
xor
dec
cmp
push
cltd
adc
jmp
repz
imul
mov
mov
and
inc
rcrb
mov
std
xorps
sahf
popf
gs
test
dec
sbb
inc
xor
dec
lods
xor
mov
mov
imul
aaa
stc
mov
mov
pop
sbb
jmp
cmp
pop
stos
xor
imull
cs
sbb
xlat
adc
icebp
test
xchg
stos
dec
lods
ds
adc
adc
mov
clc
clc
outsl
dec
xchg
adc
jg
push
pop
ret
in
inc
xor
rcll
xchg
addr16
std
cmp
and
mov
test
mov
xor
pop
test
icebp
lods
int
sbb
das
stos
loopne
cmp
sub
mov
push
add
mov
jne
aas
push
xlat
int
dec
sbb
mov
sbb
std
movsb
xor
icebp
lcall
sub
out
push
or
insl
das
pop
sbbl
jbe
lock
cltd
pop
mov
sbb
bnd
aad
fimuls
jmp
test
jmp
inc
icebp
or
repz
inc
and
push
mov
push
sub
push
push
sti
sub
pop
inc
in
int
lods
xchg
stc
cli
fsubrp
jne
pop
jnp
push
sub
mov
test
push
or
or
lds
and
pop
pop
dec
cmp
rorl
sahf
pop
sub
out
adc
shlb
les
mov
pop
mov
jno
aam
je
out
mov
mov
push
mov
cld
outsb
stc
out
outsb
cmc
pushf
cli
outsb
imul
mov
mov
push
sbb
pop
mov
insl
fmull
or
les
cmp
in
push
notl
mov
cmp
je
pusha
jns
js
std
movsl
jns
inc
ja
aam
fucomip
inc
cmp
mov
hlt
fildll
mov
or
repnz
sbb
pop
push
push
clc
insb
subb
xor
push
jmp
or
inc
pop
ljmp
cmp
lret
push
cmpl
xchg
jecxz
call
adc
orl
scas
sbb
dec
lcall
filds
pop
addr16
or
jg
mov
lock
clc
xlat
pop
pop
cmp
arpl
aad
shr
xchg
adc
cmp
push
insl
aam
or
idivb
push
xor
xchg
cmpsb
mov
rorb
out
mov
or
cmpl
enter
int
sub
adc
pop
inc
jmp
shrl
fisubs
ljmp
inc
mov
jp
lcall
jbe
xchg
in
ficoml
repz
fwait
and
dec
sahf
sub
jmp
pushf
lahf
rolb
nop
loop
mov
mov
out
jl
or
in
cmp
fnsave
addr16
loop
push
mov
adc
push
jne
jae
imul
dec
shrb
jne
jo
subl
imul
inc
pop
out
jne
notl
dec
dec
sub
fisubrl
pop
mov
add
push
xor
clc
adc
pop
xchg
sub
arpl
add
les
inc
add
std
pop
outsb
mov
lahf
add
test
push
out
lahf
cwtl
mov
xor
cmp
dec
cmp
movsl
incl
dec
xchg
sub
cmp
inc
mov
testl
inc
jno
inc
mov
jns
sti
das
jne
sarl
fiaddl
fdivrl
jb
mov
push
or
and
data16
repz
adc
jmp
lea
sahf
ss
mov
cmp
mov
jl
popa
ror
imul
cmp
fs
lds
iret
scas
lds
xor
pushf
pusha
sbb
and
xor
xchg
and
scas
lcall
lcall
xor
in
xor
mov
scas
push
pop
sbb
lea
push
lock
pop
pushf
js
or
mov
dec
xor
divb
pop
xchg
pop
daa
shlb
sub
push
js
jns
orl
mov
loopne
sbb
mov
inc
pusha
pop
je
and
mov
loopne
adc
imul
cvttps2pi
push
jle
adc
mov
shll
adc
pop
popf
dec
icebp
data16
int
ds
sub
fcompl
dec
fwait
lds
fcomps
in
in
jge
pop
cld
add
jne
aaa
ja
jle
insb
jbe
ret
js
dec
or
fs
inc
into
mov
scas
int3
jle
daa
loope
xor
dec
adc
or
mov
xor
imul
in
ja
ret
mov
out
dec
xchg
xor
sahf
not
push
mov
mov
add
ret
dec
ficompl
movsb
and
or
mov
pusha
lds
shll
mov
fs
sar
lods
pop
add
push
xor
jo
mov
ret
or
ljmp
mov
scas
cltd
mov
imul
inc
mov
jbe
int3
mov
inc
inc
ret
jl
inc
shl
cwtl
or
dec
and
lahf
sub
dec
aaa
js
pop
mul
pushf
xchg
mov
jb
andb
inc
xchg
sbb
arpl
mov
lea
and
scas
add
xchg
shlb
aas
cmp
jb
xchg
add
into
dec
fstps
int3
lods
out
fndisi(8087
or
mov
push
shrl
or
movsb
mov
dec
inc
cmp
push
cli
xchg
aaa
push
add
sarb
xor
pop
dec
add
push
jno
jg
jb
scas
ret
sbb
test
jecxz
mov
int
sub
les
adc
push
sarl
hlt
ds
pusha
adc
lods
pop
out
jecxz
fiaddl
jle
dec
mov
mov
mov
push
int3
inc
mov
mov
and
add
xor
icebp
orb
aad
pop
int
scas
pop
clc
mov
iret
aas
cmpsb
adc
out
cli
icebp
dec
inc
and
push
dec
mov
xlat
or
sti
std
shlb
out
dec
pop
in
push
xchg
xchg
int3
dec
push
xchg
fistl
iret
mov
orb
aam
mov
push
clc
xor
jne
jge
dec
push
and
inc
lret
jmp
cmp
fs
adc
ret
ljmp
sahf
out
cmp
or
pop
lahf
jp
rolb
mov
andb
jbe
add
cmp
iret
dec
sti
mov
test
and
or
pop
sbb
clc
mov
subb
xor
shlb
add
pop
xorl
mov
cmp
minps
loop
scas
cli
pusha
repz
cmp
test
mov
mov
sbb
jmp
aam
sub
ja
push
pop
add
inc
leave
and
xchg
pop
lahf
insb
sbb
inc
jno
arpl
jl
gs
mov
mov
and
aas
fadd
and
int
popa
stc
stos
les
inc
iret
lret
mov
insb
in
mov
add
je
lcall
or
adc
adc
push
cmp
adc
mov
scas
out
imul
inc
ljmp
cmp
sarb
mov
fstl
push
arpl
cwtl
push
xor
es
es
into
sahf
shl
push
jae
jle
scas
mov
mov
shll
lret
imul
xchg
clc
sti
fwait
inc
notb
stos
cmp
fidivs
push
cwtl
cmp
inc
cltd
cwtl
in
sub
aad
xor
rcl
popa
inc
push
and
inc
dec
scas
add
jecxz
mov
in
icebp
inc
or
mov
imul
cmovns
scas
test
mov
iret
mov
jg
xor
adc
out
leave
mov
ljmp
jo
sbb
or
and
push
pop
inc
out
push
pop
movsb
and
mov
data16
pop
es
fbld
mov
sbb
clc
or
ficoms
push
shlb
ja
xchg
movsl
lds
out
sub
movsl
btcl
xor
repz
in
loop
jp
enter
rcrb
out
out
or
ss
pop
mov
sbb
sub
lods
lods
or
insl
sbb
stos
sti
and
insl
dec
jp
cmpsl
adc
cs
pop
lds
mov
push
push
mov
adc
cmp
test
push
rcrb
fdivl
jbe
js
xor
imul
adc
dec
mov
push
call
pop
mov
jne
jbe
jg
lret
add
sti
pop
mov
and
dec
sbb
das
imul
in
mov
xor
pop
imul
leave
ret
outsb
repz
add
push
sbb
mov
mov
das
popa
adc
sahf
in
xchg
repnz
or
add
inc
shlb
aad
and
cli
inc
pushf
popa
mov
test
movl
xchg
lock
adc
inc
testb
adc
std
adc
xor
cwtl
fidivl
xchg
dec
fwait
lods
pop
mov
xchg
dec
fnsave
inc
popa
sbb
push
jecxz
xchg
es
ljmp
jno
enter
insb
hlt
mov
out
ljmp
xchg
add
push
push
stos
pushf
push
mov
movsl
loope
push
add
push
mov
sub
outsl
andl
cmp
sbb
inc
pop
and
cmp
cmp
add
jb
pop
lods
jb
popa
mov
jp
int
sub
pop
cmpsl
push
xor
addr16
mov
pop
mov
mov
mov
xchg
out
ret
mov
push
dec
popa
mov
cld
ljmp
das
iret
stos
push
faddl
push
les
mov
js
jae
aaa
cmpsb
roll
push
loopne
jl
inc
test
rcll
mov
mov
popa
sbb
imul
hlt
mov
mov
or
popf
pop
cmp
roll
sbb
and
enter
inc
popf
mov
popf
xchg
fwait
test
das
clc
inc
sbb
mov
imul
jl
xchg
xchg
push
sti
push
scas
subps
scas
loope
lret
scas
inc
pop
shll
xor
jbe
push
loopne
push
sbb
push
sbb
jmp
mov
xchg
insl
lods
addr16
out
test
adc
lahf
fisubs
int
sbb
test
mov
xor
mov
jle
movsl
out
lahf
cld
push
dec
faddl
sub
popf
and
mov
pop
sbb
xor
add
les
mov
lea
mov
cwtl
mov
pushf
adc
test
mov
ficompl
out
cmp
ljmp
aaa
das
xor
int
pop
out
pop
rolb
mov
sbb
adc
jge
pusha
loope
mov
lock
sbb
xor
xchg
add
push
fisttpl
loope
mov
jae
jbe
xor
add
ljmp
inc
ljmp
in
sarb
sub
pushf
arpl
cmc
cmp
notl
js
xchg
sahf
push
out
sbb
shll
sbb
rol
fisttps
or
std
jbe
cwtl
xor
push
gs
orb
js
jmp
push
and
mov
adc
fcmovnbe
das
dec
fidivl
into
insl
ljmp
pusha
jge
ss
push
or
test
adc
mov
test
mov
daa
loope
sbb
repz
rol
roll
stc
outsl
inc
push
cld
jmp
jb
sub
jmp
xchg
adc
loope
inc
out
push
mov
adc
hlt
jle
inc
imul
jecxz
push
and
enter
icebp
jmp
shrb
jnp
or
or
out
push
shlb
sub
cmpb
std
aas
cmp
jb
or
inc
xchg
arpl
dec
inc
inc
hlt
xor
daa
ret
cmc
xor
aas
xchg
jo
shlb
or
push
xchg
adc
popl
jae
pop
push
xchg
dec
rcrb
fimull
jne
push
add
sub
hlt
mov
adc
repz
ret
jne
xor
push
call
xchg
dec
arpl
cltd
xchg
das
lret
jb
mov
jae
movsl
sub
add
dec
pop
xchg
enter
xchg
stos
dec
ret
std
xchg
dec
jg
imul
cmp
js
in
fldt
dec
mov
mov
pop
stos
xlat
jle
adc
or
addb
xchg
push
add
ret
mov
out
cwtl
jae
in
sahf
xor
rcll
jae
ret
loope
add
pop
xor
mov
pop
cmp
and
mov
dec
xlat
mov
bound
sbb
lds
rcrb
je
ret
push
les
mov
adc
popa
push
sti
dec
push
popa
inc
push
mov
repnz
push
scas
xchg
adc
add
in
sti
pop
dec
add
pop
in
ret
jo
insb
fstps
jle
mov
rcrb
imulb
adc
or
in
adc
dec
push
dec
scas
gs
cltd
out
dec
mov
push
or
inc
out
shll
aaa
mov
scas
jne
inc
xlat
dec
lahf
mov
out
mov
ss
lahf
mov
inc
faddl
pop
sbb
subb
xchg
push
jae
xchg
enter
and
lret
jp
push
andb
sbb
xor
inc
lea
hlt
test
mov
pop
pop
cmp
jno
and
stos
clc
or
adc
xor
adc
icebp
and
jno
add
pop
mov
mov
jecxz
lods
mov
das
sbb
pop
cmpsb
mov
loope
dec
in
push
and
repnz
xchg
addr16
outsl
in
out
into
ret
mov
stos
mov
test
mov
nop
mov
or
dec
scas
xchg
fstpl
cmpsl
mov
xchg
rorb
pop
loopne
pop
into
add
ja
dec
movsl
or
adc
sahf
cmpsl
mov
aas
mov
jno
sub
cmp
cmc
push
sbb
cmp
cmp
in
add
add
jle
add
lds
cli
lods
sub
sbb
inc
dec
adc
loop
adc
fcomps
pop
js
xor
mov
mov
jle
int
inc
stos
fiadds
lea
xchg
imul
mov
rolb
push
outsl
jecxz
xor
mov
pop
es
xor
test
mov
xchg
push
jno
push
outsl
cmp
lock
add
sbb
rclb
fistps
hlt
sbb
dec
ret
and
cwtl
out
mov
sbb
jbe
dec
xchg
pop
xor
xchg
cmpl
add
xor
lcall
pop
push
js
jl
jne
inc
and
popf
mov
inc
fwait
mov
testb
adc
adc
xchg
mov
outsl
cmc
and
fsubl
les
fnstcw
add
lds
push
cwtl
int3
nop
xchg
outsb
mov
daa
mov
addr16
mov
xor
ja
es
stc
lret
lret
dec
or
fcoms
addr16
jl
sbb
push
test
xchg
jnp
andl
jnp
xlat
sbb
add
adc
or
sbb
mov
lods
es
lds
sub
push
or
ret
add
cmpsb
in
dec
mov
mov
out
in
pop
sbbb
mov
adc
sub
lock
test
mov
test
cli
dec
cmp
xchg
adc
aas
clc
xchg
pop
fst
pop
iret
fxam
or
push
push
mov
or
jb
sbb
xchg
cli
adc
dec
popf
mov
jno
repnz
pop
stc
push
std
push
add
js
or
mov
clc
cld
pusha
mov
scas
xchg
jns
mov
and
push
push
dec
mov
cmp
cmp
cmpsl
mov
scas
cli
jns
insb
movl
push
and
pop
les
mov
jl
cli
ljmp
or
sub
scas
je
inc
jmp
insb
jbe
xchg
cld
outsb
jnp
dec
scas
aaa
dec
push
xor
mov
add
adc
push
sub
sbb
into
or
sti
jmp
fadds
mov
ljmp
or
scas
adc
in
das
sbb
gs
je
dec
push
popf
cli
sti
sbb
int
sahf
push
shl
mov
popa
pop
sbb
sbb
xchg
pop
cmpb
pushf
aad
cmp
xor
mov
lret
push
mov
or
notl
fstl
frstor
imull
or
sbb
jle
cltd
lods
dec
dec
jnp
mov
mov
push
or
pop
nop
fwait
lods
adc
cwtl
out
outsl
or
sarb
setns
add
pop
pop
cmp
or
push
outsb
jo
mov
mov
mov
push
popf
pop
and
popf
dec
out
add
repz
outsl
mov
or
xchg
jne
cwtl
and
pushf
scas
and
std
push
add
gs
popf
mov
or
insb
test
fsubrs
in
verr
lock
dec
add
clc
mov
cmp
xor
adc
mov
mov
sub
scas
test
and
lds
popa
push
dec
push
ja
push
mov
xchg
test
adc
sub
cmp
mov
iret
and
ret
les
pop
jecxz
sbb
xchg
inc
mov
inc
imul
xchg
les
movsl
movsl
cwtl
mov
jl
mov
sahf
aad
lods
sub
push
rorb
inc
nop
nop
adc
adc
movsb
popf
js
push
xchg
cmp
dec
add
push
movsb
pop
xchg
or
call
xchg
hlt
je
push
cmp
dec
sbb
mov
push
repz
lret
pop
and
clc
punpckhwd
mov
sbb
jb
mov
jle
je
fwait
sub
popf
scas
insl
ja
test
mov
push
inc
sub
sub
test
jl
into
cmc
adc
testb
jmp
lea
movsb
jo
inc
dec
xchg
clc
fsts
ljmp
push
sahf
rcrl
flds
js
or
or
es
aad
push
ss
fimull
sahf
sub
aad
loopne
cmc
jne
xchg
mov
mov
sti
mov
push
jp
xchg
adcb
clc
cmpsb
mov
cmc
push
rcr
xchg
fadds
cs
or
sbb
in
cs
in
mov
mov
jge
in
lcall
test
jae
test
mov
rclb
std
add
mov
add
es
fadd
push
test
out
dec
xor
int
or
jecxz
out
sub
jmp
jl
pop
mov
je
sbb
xchg
add
and
shll
lock
add
inc
push
ficompl
push
test
cmp
jne
daa
mov
or
dec
or
pushl
lcall
and
test
inc
lods
mov
xchg
push
cmpsb
cmp
fdivrs
data16
push
inc
out
push
outsb
mov
jg
sbb
and
test
pop
jo
mov
mov
int
in
lods
mov
sbb
push
imul
sub
push
mov
inc
dec
xor
fnstsw
pop
xchg
mov
in
dec
xchg
mov
and
inc
pusha
cltd
inc
int3
lds
dec
les
stos
and
and
sbb
lods
jg
out
add
mov
sbb
and
lea
inc
mov
pop
ja
adc
adc
outsb
jecxz
outsb
cmp
adc
push
xchg
ret
int3
inc
imul
cmp
cs
int3
or
rcrb
cmp
cs
adc
in
js
jle
push
add
sbb
mov
jge
jno
push
inc
dec
aam
movsbl
sbb
ret
and
jecxz
fs
mov
sub
cwtl
aam
repnz
scas
jmp
adc
jb
xor
add
aam
push
test
rol
js
pop
fbld
aam
in
sahf
cmp
xchg
sarl
push
push
dec
and
inc
stos
sbb
jg
sub
adc
pusha
jae
mov
push
jns
adc
imul
rclb
mov
outsb
out
cmc
cld
mov
push
stos
inc
xchg
inc
dec
out
icebp
mov
push
daa
cmp
sub
fisttpll
int3
xchg
cmpsl
mov
aad
into
fs
pushf
dec
cmpsb
or
or
adc
mov
add
xor
xchg
mov
push
xchg
mov
aam
cmp
fstps
push
scas
cmp
in
orl
gs
ja
sub
ja
jge
movsb
xchg
decl
lock
mov
add
roll
popf
and
pop
out
rcl
pushf
call
adc
jmp
clc
add
pop
scas
les
clc
mov
gs
shll
mov
ret
jge
or
cmpsb
dec
data16
mov
ljmp
in
push
data16
cld
jge
jl
mov
sbb
or
mov
insl
push
lds
iret
inc
xor
mov
mov
aam
sub
nop
mov
or
mov
addb
daa
add
fists
les
adc
sub
xchg
pop
ds
insl
xlat
mull
cmp
bound
loop
fimull
add
mov
or
add
cmp
push
out
mov
mov
dec
and
cwtl
pop
out
jno
das
sti
xchg
in
cmp
dec
mov
pop
daa
les
out
out
dec
aas
push
add
mov
fimull
pop
ret
iret
dec
iret
cli
lods
xlat
scas
scas
je
adc
dec
pop
or
sub
clc
mov
dec
andb
fwait
sbb
dec
cmpsl
test
fistpl
je
fistl
mov
mov
or
pop
inc
sub
push
mov
nop
mov
js
inc
fwait
cltd
pop
setae
add
pop
and
fsubs
sbb
mov
add
or
scas
dec
dec
jbe
jl
mov
xor
movsb
pop
cmpb
and
cli
lods
and
push
mov
fnstenv
cs
xchg
lea
dec
and
jns
push
repz
int
xchg
inc
ret
lea
loope
xlat
xchg
out
test
sub
nop
inc
jle
iret
pop
dec
xchg
mov
sbb
pop
jge
jl
divl
pop
clc
ret
out
dec
neg
mov
and
lea
dec
int3
popa
sbb
dec
imul
shlb
xchg
mov
add
add
lods
icebp
xchg
or
movb
into
mov
rol
push
pop
repnz
xlat
jmp
jbe
outsl
mov
xchg
fistl
shl
mov
movsl
test
add
mov
sbb
das
push
mov
xorb
inc
mov
iret
or
sbb
loopne
inc
xchg
daa
repnz
inc
inc
out
push
and
cs
xchg
leave
daa
jno
push
mov
fidivrl
scas
outsl
sbb
lock
inc
and
xchg
ds
jnp
inc
scas
fiadds
cs
push
xchg
xor
push
test
inc
enter
push
jmp
movsb
xor
xor
mov
cmp
mov
adc
out
es
jl
rcr
cmc
dec
pop
test
imul
dec
xchg
fsubl
sbb
xorb
xlat
jle
aaa
aad
mov
fsubr
or
or
jno
jp
enter
sub
leave
stc
push
jno
sub
cmp
mov
jmp
xlat
jno
jae
arpl
xchg
and
ror
jnp
xchg
dec
jp
shlb
test
or
push
ss
push
mov
test
aaa
rorb
daa
pop
sbb
sub
fmul
sub
outsb
je
je
rclb
sahf
fs
inc
shl
movq2dq
mov
lretw
push
xchg
scas
in
shrb
or
in
js
jne
mov
mov
ret
cltd
js
xchg
cmp
mov
pushf
jle
push
xchg
jo
mov
jle
mov
cmpsb
repnz
inc
roll
in
push
out
inc
xchg
mov
xchg
mov
neg
jae
cmp
adc
movb
loopne
movsb
fldcw
lcall
scas
fdivl
mov
bound
mov
adc
daa
or
dec
push
jns
mov
dec
shll
mov
mov
sub
mov
cli
sbb
scas
mov
mov
hlt
inc
push
lods
scas
jno
pop
adc
fildl
cmp
add
incb
cmp
mov
stos
out
mov
repnz
test
cmp
or
dec
mov
mov
push
ficomps
sbb
rorl
les
mov
btr
ficoml
in
push
mov
xchg
mov
jno
stos
dec
and
clc
xchg
repz
ds
repz
fistpl
sbb
or
inc
sub
cld
fxch
hlt
aam
rcr
das
stc
inc
daa
fs
sub
xchg
sbb
hlt
aas
xchg
sbb
stos
xor
fwait
sub
ja
sub
xor
out
jp
xchg
or
adc
clc
lret
inc
sbbb
dec
in
add
mov
icebp
out
xor
or
mov
dec
add
enter
dec
ja
sti
cwtl
mov
cmp
fimuls
pusha
and
sub
imul
mov
cmp
inc
testb
and
mov
fsub
mov
xor
cmp
lcall
mov
cmp
and
jp
repnz
fsubrs
push
xor
into
aaa
adc
out
jns
icebp
gs
inc
inc
mov
scas
push
fbld
jne
mov
add
aam
mov
data16
repnz
cmp
push
add
aas
andb
stos
rclb
gs
xlat
push
sub
les
cmc
mov
data16
vsqrtps
cltd
pop
add
popf
stos
test
arpl
sarb
xchg
push
stos
in
mov
outsl
scas
subb
sbb
sub
pusha
stc
xchg
or
rcrb
inc
adc
inc
test
ret
stc
sub
xor
mov
adc
int
add
aas
cli
rolb
icebp
push
stos
sbb
inc
and
sub
mov
push
mov
insl
xchg
and
mov
adc
jg
cmp
rorb
pop
lds
movsl
test
lods
lea
adc
loopne
rolb
outsb
outsl
vprotw
fdivr
cld
popf
iret
xchg
push
and
loope
test
in
xchg
mov
adc
mov
cmp
iret
push
sti
dec
add
ficoms
jle
testl
cli
pop
sbb
sbb
ja
mov
repz
inc
stc
xchg
mov
repz
fisttps
push
cwtl
subl
fmuls
sbb
outsb
add
addr16
and
mov
outsl
dec
or
push
dec
mov
push
call
sbb
mov
sub
lcall
sbb
mov
testl
xchg
mov
pop
pop
jne
pop
test
mov
inc
sub
rorb
out
mov
rcll
pop
popf
iret
mov
in
cmp
mov
sub
mov
sbb
sbb
jns
sbb
in
add
mov
and
inc
xor
jge
push
inc
pop
movsb
sbb
cmp
inc
mov
xor
int3
sbb
addr16
ljmp
push
adc
repnz
call
or
and
pop
jne
repnz
sbb
mov
cwtl
xchg
mov
pop
sub
pop
jmp
out
pop
pop
std
movsb
jb
into
jecxz
push
pop
stos
pop
inc
shrl
ds
into
and
cwtl
stos
push
cwtl
test
inc
inc
cmpsb
pop
push
jns
jno
jno
dec
sbb
test
mov
or
fsubl
jp
xchg
cmp
int3
repz
jae
lahf
lahf
les
popa
xchg
cmp
stos
sub
jns
xchg
mov
xchg
sub
aam
cmp
es
decb
cltd
pop
shr
loop
adcb
mov
fadd
lds
inc
cmp
add
gs
mov
jne
ds
popf
pop
mov
cmp
pop
lds
leave
sbb
push
icebp
mov
in
int3
xchg
adc
insb
mul
and
dec
rorl
das
or
int3
push
lds
lcall
shlb
adc
inc
xchg
test
mov
int3
fstl
lea
cmp
mov
xchg
dec
test
adc
inc
outsl
in
aaa
or
push
cmpsb
jle
mov
call
cmc
fldt
insb
lds
inc
inc
dec
stos
icebp
lock
cmpl
movsl
xlat
sti
clc
das
mov
flds
mov
lds
int
push
sahf
adc
sbb
pushf
xor
addl
rorl
push
jp
aas
jge
lcall
mov
clc
sub
in
lock
push
repz
in
adcl
fcoml
insb
arpl
inc
call
xor
xor
out
pop
mov
pop
inc
and
jp
scas
in
jbe
addr16
mov
aas
clc
icebp
mov
sub
cmp
js
xor
out
call
out
cmp
sub
jb
bound
xchg
jno
aam
sub
sbb
sahf
push
addl
inc
jmp
or
mov
call
xor
dec
sub
clc
mov
xor
adc
inc
mov
add
ja
enter
cli
jle
xchg
jnp
movsl
or
add
mov
fistps
sbb
popa
scas
stos
cmp
mov
pop
js
sub
imul
sahf
mov
xor
mull
sub
data16
fcom
out
ret
and
jns
dec
cmp
sbb
or
pop
pop
cmp
lods
loopne
sub
xorb
cli
bound
cmpsb
cwtl
pop
dec
jp
push
ret
sti
clc
test
mov
mov
add
xchg
sahf
cld
adc
insl
mov
in
jb
mov
fidivl
inc
outsb
js
mov
mov
addb
inc
lret
adc
jne
mov
fsts
add
mov
outsb
jle
jge
ss
mov
push
js
mov
add
hlt
mov
dec
jg
add
xor
cmpsb
push
xchg
insl
fwait
lcall
aad
call
pop
and
xchg
loopne
daa
mov
es
mov
sbb
push
cmp
stos
cltd
fwait
mov
mov
gs
rcrb
fs
fstl
cmpsb
test
mov
jecxz
hlt
mov
movsl
aad
stc
sbb
push
lret
movsb
sub
popa
inc
sub
adcb
xchg
outsl
adc
mov
fisttpl
pop
shrl
xor
jg
xor
int3
fwait
adc
xchg
sbb
inc
adc
outsb
adc
xchg
or
sbb
out
jmp
sub
xor
pop
mov
test
cmpsb
mov
sub
or
cmp
repz
jecxz
jle
aam
dec
out
pop
adc
out
and
mov
stos
je
lock
adc
movsl
sbb
or
inc
xor
and
repz
mov
inc
push
inc
ja
mov
inc
fwait
mov
popa
stos
mov
pop
testl
pusha
mov
xchg
lods
sbb
push
sub
jo
cmpsb
push
ljmp
sub
repnz
lods
mov
daa
mov
inc
cmpsl
shl
lret
inc
inc
push
pushf
sub
rcr
or
out
mov
mov
sub
mov
pusha
add
adcl
in
je
pushf
mov
call
enter
loopne
cmp
sbb
xchg
cli
mov
cltd
lret
mov
adc
fbld
pop
and
adc
outsl
mov
call
push
lds
or
dec
stc
movsl
mov
ret
push
loop
sub
fiaddl
fsubs
cmp
and
cmp
xchg
adc
cmp
pop
xchg
add
and
into
jb
fsubrs
sbbl
pop
dec
sub
fprem
xchg
adc
push
ds
cmp
mov
imul
sub
pop
pop
std
dec
mov
mov
add
ret
xchg
data16
sub
push
xchg
xchg
arpl
lret
dec
aas
adc
and
pop
cmc
xchg
or
pop
add
daa
pop
adc
arpl
insb
jl
pop
sbb
or
mov
mov
std
sub
and
cmpsl
insb
jo
or
mov
sarb
pop
outsb
push
out
sub
mov
inc
pop
ss
jno
lds
mov
imul
dec
dec
mov
cmp
cld
mov
lds
out
push
pop
add
addl
adc
or
movsb
insb
push
mov
push
xlat
push
mov
add
leave
pop
hlt
mov
mov
std
call
jmp
mov
xor
insl
adc
cmp
adc
jle
ljmp
iret
hlt
aam
mov
dec
jbe
sar
fldt
add
imul
aaa
jg
cmp
pop
std
or
mov
jb
lahf
inc
cs
dec
push
lods
cmc
fsubrs
jmp
les
fdivs
movsb
push
in
fwait
push
mov
mov
dec
into
int
xchg
aad
xor
xlat
xor
pop
fsts
xor
add
mov
push
add
sub
and
xor
sahf
call
xor
xor
push
xor
loopne
mov
icebp
mov
xor
jbe
xchg
mov
outsl
repz
push
js
leave
pop
stos
cmpb
pop
divl
outsl
les
inc
mov
sbbl
dec
fisubl
xor
mov
mov
mul
ss
mov
in
int3
mov
fcomip
repnz
cmpl
outsb
or
push
arpl
into
mov
sub
jo
cli
test
lcall
cwtl
push
push
pop
mov
cwtl
cmpsl
sub
std
in
ljmp
pop
cmc
ret
ja
or
out
jle
cmp
cli
sub
clc
movsb
sbb
mov
pop
jecxz
add
mov
pop
stos
repnz
cmpsl
push
add
cmp
push
mov
or
adc
mov
push
in
insb
pop
ds
mov
pop
pop
adc
and
xor
lds
subl
add
out
jo
sbb
dec
xchg
nop
enter
mov
leave
xlat
lods
add
sbb
mov
pop
cli
sbb
es
aam
jmp
loope
cmp
push
into
mov
jecxz
mov
cmc
jae
jmp
cmp
arpl
pop
mov
add
hlt
or
adc
mov
ret
and
in
lahf
dec
aaa
insb
mov
jp
gs
divb
movsb
add
add
sbbl
mov
pop
dec
and
sarb
inc
rolb
gs
lret
jmp
flds
jge
orl
daa
inc
test
out
sahf
loope
shlb
dec
push
movsl
daa
jne
xlat
sub
mov
divb
xchg
jl
dec
jl
pushl
cwtl
ss
mov
mov
int
mov
dec
pushf
mov
pop
mov
notb
push
cmp
shrb
insl
fninit
addr16
mov
adc
insb
rcrl
imul
popa
jne
aad
js
js
into
aas
int
out
in
mov
scas
daa
cld
in
dec
cmpsb
or
dec
cs
rclb
les
jge
outsl
lea
adc
push
fdivl
in
repz
adc
les
sbb
icebp
mov
add
insb
xchg
adc
stos
mov
xor
cld
iret
fdivrp
repz
aam
mov
jg
and
xchg
xchg
add
add
xchg
or
pop
lock
push
test
scas
lods
mull
xorl
cs
in
fsts
rorb
adcl
xor
mov
sbb
call
add
mov
rolb
sub
sbb
cs
dec
stos
xchg
jbe
and
xchg
or
xchg
sub
jl
jne
test
fidivl
or
adc
ret
test
mov
clc
adc
mov
lret
sbb
in
jb
aas
dec
xchg
mov
mov
add
adc
iret
in
and
mov
in
ds
inc
fwait
aaa
leave
popa
inc
dec
cmp
xor
imul
xor
ficoms
imul
xchg
xchg
loopne
mov
cmpsb
ss
inc
inc
xchg
mov
rorl
mov
pop
lds
imul
push
pop
mov
ljmp
mov
sbb
int
jl
push
jns
dec
in
cmc
into
inc
gs
mov
std
popf
rcrb
movl
sub
in
jne
mov
mov
dec
xchg
and
pop
sti
inc
cmp
sub
xor
andl
mov
xchg
movsl
rorl
mov
std
testb
aas
or
addr16
into
sbbb
xchg
ret
jg
inc
data16
adc
add
xchg
ljmp
jo
in
rcll
jmp
das
outsl
repz
pop
add
push
loopne
xchg
inc
shrl
rcll
cmpsl
sbb
cmp
jg
xchg
sub
mov
lock
ja
adc
mov
jnp
pop
mov
cmp
inc
call
push
mov
pop
xchg
mov
jbe
cltd
cmp
in
dec
es
add
js
fmuls
lock
call
int
xchg
into
push
jl
inc
es
ret
test
jmp
mov
outsb
enter
mov
mov
mov
xor
adc
gs
pop
les
pop
nop
add
pusha
cmp
clc
jecxz
rcrb
addr16
push
movsl
mov
lahf
test
arpl
add
dec
imul
xor
adc
lea
inc
repnz
subl
out
or
stc
jp
ljmp
sti
mov
push
or
dec
jle
pop
push
inc
lods
shrl
jge
in
xchg
or
mov
inc
cmpsl
popa
cli
roll
jle
aas
sub
lahf
pop
pop
test
insb
pushf
jg
xor
testl
out
xchg
pop
hlt
mov
sbb
pop
cs
push
jno
mov
mov
and
lods
daa
jmp
jne
ret
fisttps
insl
loop
bound
stos
sub
add
fsts
mov
and
add
jne
cmc
push
leave
adc
adc
and
mov
mov
dec
enter
push
push
pmulhuw
fwait
outsl
mov
repz
das
outsb
decb
loopne
adc
mov
fcmovb
jae
and
movsb
js
mov
jg
das
pop
clc
repnz
dec
mov
fdivrs
inc
sbb
xchg
fwait
pop
mov
ljmp
xchg
mov
pop
mov
xor
cmpsb
jbe
cmp
fs
in
pushf
sbb
mov
iret
jg
and
jne
jns
add
sub
mov
add
pop
mov
gs
clc
xchg
xchg
mov
xchg
push
inc
dec
cwtl
cmpsl
enter
sub
and
popf
or
dec
push
pop
mov
push
push
repz
jmp
mov
cmp
dec
out
fnstsw
inc
mov
lods
or
in
mov
mov
mov
fsubrs
in
cwtl
adc
xor
cmc
es
and
cld
and
ljmp
xor
xchg
jg
movsl
cmp
in
xchg
outsb
lcall
rolb
mov
push
push
cmp
js
fstl
into
cmp
stc
out
jg
sbb
mov
lret
inc
pop
decb
test
shlb
sbb
out
or
insl
xor
push
cmp
push
push
test
inc
cmc
arpl
push
je
pop
sbb
dec
outsb
mov
pop
xchg
pop
or
add
cltd
xchg
pop
adc
pop
ljmp
or
aam
jo
cmp
dec
mov
or
xlat
sbb
ds
pop
adc
inc
hlt
mov
ss
push
aad
jne
stc
sti
cs
ss
ja
lods
hlt
clc
push
and
mov
andb
vpsubd
lahf
inc
inc
mov
scas
jno
loop
popf
outsl
mov
jmp
pop
loope
push
leave
sub
test
pop
loop
scas
cmp
jns
fucomip
and
lret
xor
add
not
dec
jp
frstor
xchg
ds
sbb
dec
adc
or
adc
test
sub
in
mov
pop
into
sub
mov
call
inc
dec
jle
mov
inc
or
iret
or
inc
leave
push
sahf
in
sub
sahf
aaa
mov
subb
in
xchg
jmp
mov
mov
lds
or
and
stos
xchg
aaa
rcr
jbe
mov
out
dec
lahf
inc
jl
in
or
cmp
xor
or
std
iret
cmc
lock
inc
rclb
cmp
test
scas
adc
sub
in
cld
jg
pop
jb
out
out
inc
sbb
pop
cmp
push
daa
cwtl
loope
mov
mov
or
mov
push
inc
inc
rcr
mov
adc
xchg
icebp
adc
push
sub
cltd
nopl
cmp
push
xor
or
mov
popf
repz
in
insb
jns
repnz
sbb
shlb
cmp
sbb
mov
pop
xor
pop
pop
aaa
lods
cmc
mov
xor
jo
mov
or
ret
stc
clc
or
leave
sti
adc
cmp
xchg
mov
fiaddl
arpl
ret
or
repnz
ljmp
xorb
iret
ret
adc
testb
stos
adc
lock
inc
push
mov
fldl
xchg
jae
test
jl
mov
test
dec
lret
dec
ljmp
lods
mov
rcrl
jmp
xor
sub
mov
pop
enter
cli
pop
mov
or
inc
outsb
jl
mov
push
xor
push
xor
outsb
push
mov
mov
push
ja
mov
cltd
xchg
fdiv
lret
fucomi
jl
aad
xor
push
xor
mov
and
mov
jbe
jmp
sbb
sbb
ret
and
dec
hlt
xchg
jg
movsb
xchg
pop
sbb
hlt
jge
orl
aas
mov
pop
mov
push
inc
and
xchg
xor
decb
imul
jg
sub
dec
inc
sbb
adc
outsb
cmp
mov
pop
daa
mov
data16
jns
test
and
xchg
test
xchg
sbb
ret
cld
push
lods
pop
mov
stos
test
lcall
inc
out
pop
fs
fnsave
in
pop
mov
cmp
xchg
and
lock
sti
out
test
mov
jmp
dec
popf
stos
repnz
int
inc
mov
outsl
dec
push
sbbl
cmpsb
add
add
in
lret
or
xchg
cmp
mov
cld
aaa
iret
je
and
in
or
jb
ret
mov
fcoml
adc
xor
cmp
fs
outsb
cwtl
pop
je
lcall
jmp
sti
lret
push
cmp
push
sbb
test
or
enter
call
dec
mov
cmpsb
jo
in
cmpsb
or
stos
dec
psubsb
pop
icebp
lret
jmp
shlb
icebp
movsl
out
mov
daa
test
add
jbe
dec
add
mov
sub
fwait
sub
inc
pop
add
add
cltd
rorb
jns
push
jno
jg
call
add
sbb
or
cs
sbb
jbe
cmpsl
es
or
pop
popf
jge
loope
xchg
sbb
jb
lahf
arpl
sbb
or
loop
mov
adc
and
es
inc
aaa
cltd
test
inc
stos
ljmp
or
ret
incl
test
mov
js
and
xlat
push
push
pop
inc
fwait
bnd
push
jo
cmpsb
in
mov
movsl
jp
adc
xchg
scas
lods
cs
lea
cmp
pushf
testb
xor
mov
scas
cmp
or
roll
into
arpl
fildll
mov
dec
aaa
inc
data16
fistps
sbb
and
and
pop
mov
mov
test
push
jge
in
bsf
and
subl
hlt
aaa
mov
hlt
andb
mov
adc
es
rcl
jae
fidivrl
pop
push
imul
add
or
sahf
and
adcl
cmc
out
xor
adc
pop
or
cmp
push
fisubrl
movzwl
popf
xchg
mov
jo
dec
jne
push
xchg
sbb
lea
lods
nop
sbb
mov
into
sbb
and
jmp
mov
mov
or
sub
into
jno
jbe
xchg
ds
or
cltd
lea
das
mov
cmpsl
push
lock
fs
and
inc
clc
xor
jle
call
push
pop
push
ds
xchg
mov
bound
test
daa
ja
mov
lret
or
in
push
xchg
ds
fcmovnbe
jl
dec
cmp
push
shrb
scas
cs
imul
std
fdivl
std
dec
aam
and
inc
in
inc
imul
adc
jg
pop
push
and
repnz
icebp
int
scas
icebp
pushf
adc
fs
fcompl
xorl
icebp
fdivrp
adc
jns
mov
addl
push
sbb
sub
jle
push
mov
fildll
in
and
cmc
pop
xor
cmp
scas
pop
pop
not
mov
out
mov
push
mov
mov
fsubrs
loop
mov
out
dec
sbb
or
xlat
pop
in
insl
mov
or
in
ljmp
add
push
ja
lahf
inc
pop
mov
sub
mov
lea
ss
mov
repz
or
dec
lahf
inc
movsl
or
test
sbb
push
add
xlat
jl
inc
loop
jo
sbb
lods
fbstp
xchg
hlt
jl
test
fisttpll
add
cmpsl
add
jne
xor
sub
or
mov
jecxz
or
mov
xchg
jnp
lret
adc
dec
outsl
push
test
pop
out
outsb
movl
add
and
sub
mov
add
push
outsl
cmpsb
jbe
mov
mov
popf
ret
bound
xchg
mov
loope
inc
fimull
and
or
xlat
cmc
pop
repz
jge
cld
cmovle
or
cwtl
mov
push
xchg
pop
pop
dec
xchg
fisttps
flds
ret
cwtl
mov
imul
mov
and
add
jno
cltd
pop
loop
int3
scas
sub
addl
push
or
dec
mov
clc
dec
cs
std
inc
dec
repnz
fsts
inc
test
mov
dec
cmp
lret
push
jge
sub
jno
inc
ret
outsl
fldcw
pop
dec
sub
mov
sbb
lea
loopne
xor
aad
into
mov
or
lock
sti
xchg
daa
imul
xor
hlt
loope
add
mov
mov
jle
inc
adc
aad
inc
clc
jl
gs
daa
pop
sbb
pop
dec
fildl
int3
xchg
inc
add
pop
or
xor
xchg
and
inc
aas
pusha
cmpsb
lea
push
aad
insl
fldt
mov
jmp
adc
inc
sbb
ja
je
insl
pop
push
cmpsb
push
mov
rolb
dec
loope
adc
cmp
outsb
add
push
loopne
out
pop
dec
out
sti
lock
iret
inc
out
push
push
fstpt
roll
lcall
ror
push
aas
loope
jne
cli
mov
mov
xchg
lcall
scas
add
pop
jp
xchg
lcall
xchg
movsb
inc
popf
xchg
push
clc
adc
out
adc
inc
sbb
lds
gs
adc
xor
mov
mov
imul
lock
or
mov
insb
mov
std
lods
inc
repnz
fiadds
dec
xchg
clc
insb
sbb
ret
mov
test
sub
shrb
popf
cmpl
xor
sbb
test
push
mov
insb
cmpsb
lret
outsb
std
out
jno
out
dec
xchg
aad
das
std
jg
mov
or
push
int
aam
pop
push
pop
or
fsubl
imul
jecxz
jl
out
xchg
mov
nop
negb
lea
dec
nopl
xchg
dec
xchg
jmp
mov
push
adc
pop
imulb
sbb
imull
cli
sti
pop
and
je
orl
add
pop
pop
xchg
stos
push
push
inc
cli
cmc
mov
adc
cmp
in
shrl
dec
lcall
fcomip
ror
pop
pop
jne
mov
popf
cmc
lea
fwait
jne
ficoms
js
pusha
mov
mov
adcb
xchg
rolb
inc
aam
sbb
sahf
cld
xor
test
repz
and
sbb
mov
or
out
movsbl
faddl
popa
or
lcall
or
and
clc
filds
movnti
mov
popf
dec
dec
repnz
mov
push
insl
mov
cld
adc
dec
in
arpl
insb
aaa
push
xchg
inc
lods
mov
add
push
out
mov
mov
js
pop
cmp
push
int
rclb
xlat
lea
movsl
pop
jl
and
rcr
push
rcl
xchg
fists
mov
call
movsl
sbb
xor
inc
inc
add
dec
ljmp
cmp
dec
sbb
out
fldt
push
lret
stc
dec
sbb
cmp
arpl
add
cmp
inc
inc
pop
xor
xchg
cmp
test
pop
iret
fldenv
mov
mov
fsubrs
test
ds
pop
outsl
mov
stos
cmpsl
je
and
xor
pop
inc
mov
inc
adc
add
jl
and
daa
pop
leave
add
fcmovne
aaa
adc
jnp
push
pop
dec
pop
inc
stc
movsl
lahf
cmp
add
push
bnd
out
in
mov
add
or
sbb
repnz
cmpsb
test
popa
mov
lods
scas
jbe
dec
lahf
mov
sbb
lock
dec
dec
arpl
xor
in
mov
movsl
and
aaa
subb
es
jb
cs
test
in
insb
mov
mov
mov
fimull
call
lahf
or
xchg
imul
mov
lret
je
jnp
outsb
int3
sub
out
push
mov
fsubrl
nop
pop
adc
dec
xchg
sbb
push
aam
xor
ja
int3
push
cli
dec
add
sbb
cmpsl
lret
das
adc
loope
sbb
xchg
push
sbb
sahf
jns
mov
das
sub
xor
cwtl
add
mov
add
scas
js
or
std
mov
mov
aaa
xor
in
and
idiv
imul
popa
sub
add
rclb
sub
repz
add
icebp
sub
dec
call
je
js
ja
cmp
pop
inc
fsts
test
dec
dec
lds
xor
dec
cmpsl
lods
sub
add
sbb
popf
xor
or
cld
mov
push
enter
adc
lret
sub
mov
jne
mov
int3
inc
cmp
std
xor
xchg
adc
xorl
mov
sbb
pop
shl
or
xchg
test
movsl
push
ret
mov
dec
xchg
xlat
cmp
cmp
mov
mov
pop
test
arpl
mov
or
enter
sbb
xchg
mov
addr16
dec
xchg
or
sbb
repz
pop
ret
arpl
pushf
aam
cmp
pop
mov
jge
mov
cld
xor
decl
addr16
sarl
out
cmp
stc
inc
lea
stos
jnp
imul
or
ss
or
out
push
cmp
cmp
test
pusha
push
scas
adc
adc
dec
imul
cmpl
shl
mov
mov
dec
jmp
lcall
mov
fcoml
pop
outsl
add
inc
mov
push
repnz
je
stos
arpl
mov
insl
test
xchg
pop
push
repz
xor
imul
jae
hlt
fcoml
and
dec
out
and
dec
rcrl
or
jne
dec
push
push
adc
add
jg
fwait
mov
push
fidivrs
or
call
xor
sti
xor
fcoms
adc
mov
lods
jne
stc
rcr
mov
pop
inc
cmovg
push
mov
test
bound
mov
aas
inc
pop
addr16
pop
jle
mov
iret
jl
adc
js
lods
out
cli
push
jmp
mov
std
outsl
scas
lret
inc
pop
push
testb
xor
mov
pop
das
adc
fcomip
cmc
adc
push
pushf
imul
pop
push
lods
insl
das
cmpsl
sub
sub
lret
shrb
gs
stc
lahf
xchg
shll
cmp
sbb
fildl
pusha
adc
int3
and
xchg
jmp
stc
push
jbe
mov
sbb
fisubs
lds
shlb
pop
jns
inc
cmpsb
je
adc
rol
sub
jmp
push
pop
push
cli
aaa
and
cli
push
rcrb
and
fs
mov
lods
fisubrs
push
jmp
dec
mov
xor
fimuls
mov
jge
jb
sbbl
in
add
out
movsb
xchg
mov
pusha
pop
test
cmp
imulb
mov
nop
roll
and
sti
sub
not
pop
rcll
mov
mov
and
push
push
stos
imul
popf
nop
cld
push
dec
inc
add
jbe
pop
cmp
aaa
jns
into
push
fnsave
mov
imul
lahf
insb
sbb
jle
mov
rcr
cmp
mov
jecxz
fmull
xor
jae
out
aad
mov
mov
sti
sub
ds
xchg
arpl
and
jp
daa
mov
daa
jecxz
testl
scas
sub
cmp
out
lock
clc
arpl
push
sbb
hlt
jmp
cmpsl
aas
leave
sub
jbe
fs
aas
out
pop
xchg
lret
movl
mov
mov
mov
mov
xchg
pop
pop
cwtl
enter
mov
mov
push
fsubl
mov
xlat
lods
mov
aam
push
inc
push
shl
rcl
inc
inc
nop
lret
sbbl
imul
push
xor
pop
mov
lret
pop
scas
lock
stos
or
ja
mov
xchg
pop
push
xor
pop
and
pop
nop
and
call
jl
push
xor
mov
or
jno
sahf
add
sub
pushf
push
ljmp
movsl
mov
add
pop
push
popa
popa
cmpsb
cmp
mov
test
push
popf
and
sub
push
push
and
jg
pop
inc
mov
lea
mov
sub
push
adc
xchg
cwtl
push
int3
adc
sub
push
es
or
into
pushf
dec
lcall
adc
dec
rcll
adc
xor
cmp
test
jae
sbb
data16
push
xchg
sub
aam
sub
adc
daa
clc
mov
xor
pop
lcallw
xlat
adc
pop
inc
in
dec
mov
test
jg
mov
cmp
add
fld
mov
pop
pop
das
and
adc
and
stos
and
js
xchg
in
in
and
nop
dec
add
or
xor
test
dec
mov
test
fninit
mov
push
mov
mov
sti
orb
pop
pushw
sbb
add
rcll
and
pop
adc
inc
and
mov
sub
xchg
sub
sahf
sub
repnz
dec
fcmovnu
mov
jp
sbb
pop
push
mov
out
jmp
mov
std
push
imul
outsl
ret
rcll
or
shr
and
andl
push
lret
imul
inc
mov
inc
mov
inc
clc
filds
leave
gs
repz
xor
fprem
out
fnstcw
push
or
into
dec
or
pop
and
pop
jmp
dec
out
mov
push
fiadds
in
pop
mov
cmpsb
sbb
push
mov
cmpb
push
int3
sub
rclb
incl
sub
loop
mov
or
scas
mull
into
in
pushf
sbb
daa
push
repnz
sub
jge
pop
lds
les
gs
sahf
lret
or
nop
inc
mov
xor
nop
popf
pop
push
mov
adc
fisubl
gs
or
inc
add
popl
xor
ds
add
push
movsb
sar
pushf
outsb
and
fdivrl
outsb
mov
dec
sub
mov
cmp
iret
push
inc
xchg
and
out
stos
inc
sbb
fst
and
cmp
jmp
stos
mov
xchg
adc
jno
cltd
xor
lcall
pop
mov
loope
inc
out
test
and
arpl
arpl
roll
movsl
sbb
lret
fldt
or
roll
dec
jmp
sbb
pop
adc
jae
jp
jnp
fdivrl
xlat
mov
test
mov
mov
aad
dec
adc
mov
sub
and
insb
jnp
int3
pop
sarb
lea
xchg
fcompl
mov
push
out
ja
jnp
stc
xlat
pop
bound
sub
cmp
stos
adc
mov
shll
cltd
lds
push
mov
pusha
lods
pop
test
ja
mov
dec
jnp
stc
test
add
lods
jne
cmp
jae
ja
clc
jns
dec
jp
mov
cmp
fmul
adc
xor
ss
mov
cmp
cmp
notb
dec
frstor
lret
pop
fildl
lds
cmp
pop
mov
mov
mov
jb
dec
ret
add
and
sqrtps
push
mov
fidivrl
adc
sbb
scas
add
sbb
sahf
sarb
shrb
jg
mov
fcomip
movsb
out
xorb
dec
scas
inc
icebp
dec
aas
aam
and
in
mov
xor
pop
jp
pusha
mov
jns
sub
sbb
mov
mov
bound
pop
test
push
jecxz
or
in
mov
arpl
or
xor
adc
push
mov
data16
pop
or
and
inc
imul
inc
das
xor
push
mov
pop
lods
and
sub
cmp
pop
jno
add
cmp
pop
and
icebp
xchg
adc
sub
js
mov
std
call
lods
push
in
pop
push
outsb
pop
or
imul
push
cmpl
in
lea
adc
mov
je
rolb
ja
or
sbb
fwait
scas
push
ljmp
push
fdivr
pop
lds
add
and
pop
xor
add
cltd
cld
test
addl
pop
lret
xchg
dec
xchg
or
dec
mov
mov
popa
jno
clc
adc
pushf
out
jo
pusha
mov
int3
jmp
loope
push
cmp
out
fdivr
dec
arpl
pop
dec
fnstenv
push
sub
jno
jecxz
xchg
test
inc
lret
dec
sub
scas
cld
jns
xor
dec
aaa
lret
or
push
divb
hlt
mul
and
outsl
inc
clc
lods
jnp
jl
cmp
pop
hlt
adc
lods
inc
adc
jno
xorl
outsb
fidivrs
fsubs
addb
lahf
mov
xor
or
jecxz
add
scas
cwtl
jo
xchg
adc
jb
dec
sbb
mov
xchg
dec
mov
lock
test
and
shll
jmp
subl
test
xchg
push
jbe
out
and
in
sub
jne
std
jmp
push
pop
and
pop
xchg
gs
cmp
jns
pusha
dec
icebp
xchg
rcll
mov
jns
mov
cs
pushf
lcall
les
or
inc
push
push
insl
lds
push
orl
xlat
pop
in
inc
xchg
mov
xor
xchg
out
add
or
cld
rsqrtps
sbb
mov
lea
inc
mov
mov
ss
lods
xor
mov
inc
std
dec
push
sbb
xor
inc
clc
xchg
mov
sbb
mov
imul
insb
mov
mov
inc
jae
sbb
psllq
or
mov
xchg
loop
fs
mov
sti
or
mov
lock
push
push
mov
mov
sbb
or
in
fldpi
mov
imul
shlb
push
xor
ljmp
jmp
popf
iret
and
test
jmp
mov
lcall
push
dec
lcall
inc
fbld
xlat
repz
mov
pushf
jg
fbld
fwait
daa
popf
pop
sub
out
xchg
nop
mull
push
rolb
adc
nop
out
cld
mov
out
or
mov
lret
repz
inc
sub
ss
cmp
stc
faddp
out
stos
shrb
jecxz
mov
add
push
xor
pushf
sub
inc
divl
aaa
add
adc
enter
mov
or
ljmp
sbb
xor
rcrb
xor
sub
jae
xchg
test
jmp
inc
popf
insl
cmc
push
xor
testl
rorb
push
flds
lods
dec
or
mov
inc
out
outsl
lds
xor
adc
jl
push
cli
sbb
inc
or
aaa
fistpll
repz
rolb
mov
add
jbe
aam
fldenv
pop
mov
sti
adc
fisttpll
cmp
jnp
lahf
rorb
out
mov
jae
mov
and
add
in
lahf
bound
es
jg
push
cmp
sub
sahf
rorb
dec
xchg
pop
mov
xor
add
cmp
cmp
andl
subl
lods
addr16
in
push
mov
mov
xor
cmp
fdivs
sub
out
stos
insl
pop
clc
add
inc
push
pop
mov
sbb
stos
or
pop
xchg
cmpsl
mov
decb
lds
mov
cmc
dec
test
incl
mov
sbb
loopne
fstps
movsl
xchg
ret
sbb
je
ret
inc
fnstcw
xor
cmp
mov
mov
shr
sub
jb
loope
add
imul
sbb
adc
xchg
cmpl
pop
jno
and
mov
push
sub
pop
jle
cmp
mov
sbb
insb
popf
and
fwait
mov
es
cld
jg
jecxz
mov
adc
pusha
test
in
mov
xchg
negb
xlat
fsubr
mov
and
and
sahf
inc
xlat
add
jge
sbb
sahf
sahf
and
aaa
and
mov
loope
push
lret
xor
fistpl
adc
inc
inc
pop
inc
jl
stos
rcl
push
push
or
mov
dec
mov
pop
pop
loopne
add
cmp
lea
lods
push
sbb
js
pusha
shlb
ret
pushf
aas
lods
outsl
call
arpl
out
xlat
xchg
out
ret
or
mov
sub
mov
push
pop
xchg
add
sbb
cmp
mov
stos
stc
pop
pop
lds
dec
xor
inc
or
jmp
loopne
divl
aam
push
outsl
sub
mov
in
xor
push
mov
fwait
rorl
fadds
dec
mov
pop
jecxz
or
jbe
ja
pop
push
push
xchg
xlat
push
mov
jne
fwait
fwait
jecxz
jg
mov
int3
iret
xor
mov
sub
ficoml
xor
inc
aaa
dec
pop
lcall
test
mov
shl
loope
pop
lret
mov
cmpsl
es
iret
bound
lret
adc
jns
aas
std
out
pop
xchg
es
sbb
pop
data16
mov
xor
shl
mov
out
shll
nop
push
iret
stc
dec
pop
cmp
jl
ret
cmpsl
inc
sbb
negb
push
dec
mov
push
mov
xor
jge
call
loop
ror
sbb
push
out
cld
int3
aaa
loope
and
jns
out
sbb
leave
imul
cmp
pop
in
imul
add
scas
pop
mov
sahf
movsl
xor
ss
push
xor
pop
push
pushf
pop
in
xchg
lods
in
mov
sub
pop
pop
cmp
dec
add
xchg
or
inc
cmp
add
mov
jne
mov
lods
and
add
icebp
hlt
cld
ds
cmp
cmp
mov
adc
mov
nop
je
es
dec
pushf
add
inc
sub
inc
lret
popf
cmp
sbb
pop
imul
sbb
in
outsl
gs
add
movsl
pushf
test
dec
es
pop
sar
leave
pop
push
lds
adc
xor
mov
movsl
inc
mov
xor
add
cmpsb
push
insl
fdivrl
in
in
outsl
adc
push
outsl
ljmp
jp
add
ja
push
xchg
mov
inc
xchg
sbb
push
push
mov
push
push
out
sbb
jecxz
sub
and
cmp
aam
fldenv
bound
fcompl
adc
or
loopne
cltd
jmp
inc
es
or
or
in
dec
sub
xor
sub
pop
clc
and
xor
sbb
push
daa
push
fmul
mov
jb
or
int3
xchg
xor
pop
jl
test
add
push
jge
mov
scas
out
dec
cwtl
adc
mov
sbb
xchg
add
fucomip
mov
and
xchg
add
and
iret
sahf
dec
pop
mov
ss
inc
imull
inc
aam
add
call
pop
shlb
aaa
cmpb
fiaddl
mov
and
test
push
add
mov
out
or
mov
mov
push
add
jl
out
movsl
repz
popf
sub
sbb
pop
fdivs
push
lock
or
sbb
pop
in
arpl
outsl
mov
ljmp
std
cwtl
jp
sbb
push
mov
mov
dec
ret
jae
fcmovb
push
ja
int
movsb
incl
es
push
sub
inc
out
mov
std
add
xor
adc
cmp
sub
std
xchg
jmp
add
push
xchg
xor
fimull
adc
ljmp
ret
xchg
lods
adc
or
jo
inc
test
xor
stos
or
xor
jo
jnp
test
xor
sub
repz
clc
sbb
pushf
insl
push
inc
xor
loopne
and
es
cltd
call
push
int3
pop
xor
rcl
pusha
ljmp
dec
pop
push
mov
pushf
loop
arpl
call
sub
adcl
cli
pop
push
scas
les
hlt
dec
xcrypt-cbc
cmpsl
push
xor
mov
cmpl
ja
sbb
addl
cmc
js
xchg
clc
pop
push
std
cmp
mov
xchg
fwait
adc
pop
jecxz
xchg
and
cmc
xorb
sarb
repz
adc
jne
cs
inc
in
adc
dec
ret
test
icebp
lods
dec
dec
xchg
or
fadds
or
lock
call
loope
sub
lcall
outsb
xchg
daa
ds
mov
outsl
lret
lret
mov
pop
out
repz
cmpsl
inc
and
sub
fs
mov
dec
inc
sub
inc
cmc
fsubrs
mov
jl
lds
adc
addr16
xchg
les
loopne
insl
jno
dec
rorb
xchg
test
push
add
adc
hlt
cmpsb
pop
fdivrs
aad
mov
or
sub
aad
test
dec
outsl
add
sbb
repz
ret
push
xchg
dec
dec
xlat
dec
movsb
or
addb
das
js
js
aas
imul
ds
jl
loop
adc
add
pop
ret
cmp
sbb
mov
out
push
jg
cmp
adc
stos
jne
hlt
lods
cmpsb
adc
ja
mov
mov
ficoms
xorb
jb
or
sbb
insl
pop
cmpsb
bound
test
lret
lea
xchg
movb
nop
sub
jnp
xchg
jnp
mov
es
push
iret
push
fbld
imul
fdivl
cmp
mov
comiss
and
adc
sub
inc
sbb
dec
std
push
mov
push
sub
mov
jne
inc
push
aaa
shl
into
imul
loop
mov
push
dec
xor
ja
adc
xor
sub
xchg
cmp
mov
and
mov
dec
lret
inc
cltd
dec
lahf
enter
pop
jnp
fstp
push
aad
xor
xlat
inc
iret
fadds
sbb
push
pushf
adc
adc
mov
test
rcrb
xor
jl
push
cmc
sbb
and
fmul
out
repnz
sbb
push
adc
mov
and
insb
jp
rcrl
ret
lods
sbb
mov
aas
jae
add
push
sub
sub
fistpll
shll
or
pop
imul
pop
push
shrl
repnz
ss
xchg
test
lock
cmp
push
and
adc
lahf
fbld
or
cmp
cli
push
pop
in
push
nop
imul
jl
fwait
mov
mov
cltd
sbb
or
sbb
xor
sub
scas
stc
not
push
mov
jae
xchg
push
mov
add
inc
loop
stos
sub
stos
movb
jge
imul
xor
dec
cmc
out
sbb
divl
add
jmp
cwtl
sti
movsl
xor
and
and
lods
xchg
push
insl
jnp
fdecstp
mov
shrb
jo
or
lcall
or
mov
aad
mov
pop
lods
rcl
jno
xchg
sub
sub
lahf
ret
cli
add
orl
data16
sbb
pop
flds
movsl
in
test
shl
jl
imull
fs
sub
cmc
pop
push
xchg
mov
fstpt
mov
sbb
push
es
cli
jbe
mov
ss
adc
mov
in
js
lret
sub
incb
sbb
js
mov
and
lds
sub
lcall
idiv
test
movsl
out
dec
xchg
sti
inc
cmp
cs
iret
and
xor
pop
imul
imulb
insl
out
add
lods
and
sbb
lock
out
rol
fwait
add
out
cmp
cwtl
adc
mov
orb
ficomps
addr16
push
xor
movsl
cmp
xor
pop
jmp
inc
sub
das
lods
jl
and
sub
xor
enter
jle
and
lods
mov
dec
mov
cmp
daa
mov
lock
push
jg
or
rorb
xchg
and
clc
nop
cmpb
xor
popl
aad
pop
jnp
inc
sbb
pop
out
sub
inc
adc
orl
adc
mov
in
fadd
movsb
and
outsb
pop
shrb
stc
mov
pop
adc
into
adcb
cmp
mov
les
xchg
jnp
loopne
pop
nop
sbbw
cld
add
das
shll
mov
pop
fcmovnbe
xchg
insl
or
gs
sbb
and
and
loopw
mov
pop
xor
jae
inc
and
and
hlt
out
xor
mov
jns
add
xchg
mov
pop
inc
xchg
test
and
mov
aaa
stc
push
shlb
cmpl
movb
add
sbb
mov
push
insb
std
adc
out
into
hlt
and
xor
fs
cmp
sub
dec
into
sbb
mov
adc
pop
mov
rolb
jmp
cmpsb
je
pop
and
in
into
rol
jb
inc
xor
pusha
stc
pusha
or
jmp
push
xchg
sbb
lea
mov
mov
mov
jmp
data16
ljmp
iret
pop
subb
sbb
pop
je
jmp
lds
dec
fistpll
test
das
sub
cmp
imul
and
daa
pop
or
mov
ffree
ds
dec
fsubl
fildll
add
jnp
int3
add
pop
cld
shl
pop
loope
mov
mov
pusha
lcall
shrb
jge
cmp
jb
cmpsl
push
jle
repnz
push
bound
ret
and
push
xchg
xlat
adc
imul
pushf
insl
mov
push
call
adc
jbe
out
stc
pop
sub
cmp
test
js
jp
je
addr16
dec
sbb
mov
push
push
iret
xor
ret
test
mov
pop
mov
push
cmp
ret
scas
pop
mov
push
xchg
push
icebp
in
leave
jb
arpl
nop
scas
pop
push
repz
mov
lret
aad
repz
insl
fadds
cs
in
enter
enter
add
test
test
pop
mov
mov
push
dec
cli
ja
jp
scas
lods
imul
push
adc
inc
popw
jmp
leave
xor
neg
aam
or
adc
cmc
or
inc
call
dec
rol
mov
add
aad
popf
arpl
push
or
mov
cltd
mov
les
mov
mov
jmp
pop
lods
adc
je
pop
jbe
ja
cmpsl
cltd
push
test
xchg
jnp
jbe
xlat
adc
fsubs
mov
mov
out
pop
stos
adc
pop
xor
lahf
cmp
scas
loopne
ljmp
imulb
mov
add
mov
notb
cwtl
add
cwtl
stos
dec
js
dec
fnstcw
jne
push
pop
adc
mov
fwait
repnz
das
mov
xorl
sbb
fs
push
mov
sub
xor
out
sub
lods
stc
call
and
mov
into
lahf
ret
arpl
mov
out
inc
imul
xor
rclb
in
shl
cmp
ss
cmp
xor
mov
fnstenv
cmpsb
push
fs
adc
xchg
dec
inc
or
shlb
push
sti
lret
and
scas
mov
lahf
cli
shr
rcr
movsb
cwtl
mov
push
fnstsw
js
stos
lret
cltd
fisubrl
sbb
ljmp
loope
fidivrl
push
divl
cli
xor
cmp
and
mov
lcall
xor
dec
push
dec
pop
push
test
in
jne
cmpsl
jg
mov
ja
daa
out
xor
push
iret
lods
scas
sub
outsl
rolb
lods
mov
xchg
sub
int3
aas
js
cltd
bound
adc
dec
jnp
cmp
ja
nop
pop
sbb
enter
shl
sbb
shll
test
mov
inc
or
adc
xchg
push
imul
push
jne
adc
inc
stos
stc
adc
cmpsl
sub
xchg
xor
jmp
fisubrs
fmulp
icebp
or
xor
mov
push
xchg
rorb
movsl
inc
jmp
mov
lret
inc
pusha
or
and
ja
insb
push
popa
and
push
lods
mov
das
xchg
or
sbb
shl
dec
pop
repnz
js
jnp
pop
clc
jno
add
into
dec
adc
xchg
pop
icebp
dec
and
sahf
mov
pop
fdivrl
icebp
test
mov
jl
inc
jb
ss
xchg
add
jg
sarb
inc
pop
or
jae
lret
dec
mov
into
mov
insb
mov
js
dec
adc
xchg
test
jne
outsl
sbb
xchg
ljmp
scas
mulb
sbb
jns
mov
movsl
inc
sahf
xchg
sub
sti
rcrb
or
dec
lahf
in
sti
pop
sbb
sub
lods
mov
test
sbb
xchg
loop
xorl
or
fnstenv
stc
pop
xchg
mov
cmp
and
ja
ret
mov
jp
mov
js
mov
sbb
cmp
jo
es
jge
in
sbb
mov
or
jns
dec
xchg
pop
add
fisttps
aas
int3
mov
cld
sub
push
popf
jne
mov
shll
sub
in
add
xor
mov
adc
lods
mov
and
sub
xor
imul
add
and
lods
jge
and
or
outsb
cmp
add
push
jmp
cld
in
shrb
and
pop
loope
mov
stc
int3
scas
dec
int
std
jo
dec
cmp
mov
push
fnstenv
sub
in
movsb
pop
mov
xor
sbb
int
dec
push
repz
and
jnp
and
iret
push
and
lret
and
jp
in
and
repz
xchg
call
jge
ljmp
adc
addb
scas
frstor
cmc
mov
or
test
dec
or
hlt
aad
ljmp
push
pushf
add
mov
mov
andb
push
aaa
xor
xor
or
push
arpl
push
jg
std
aas
ret
insb
in
js
orl
outsb
testl
jmp
dec
push
addr16
sbb
loop
fwait
push
shl
addr16
popf
add
outsb
adc
pop
ret
sahf
mov
push
xchg
aas
movb
sub
mov
mov
pop
push
int
fistpl
xor
sbb
xchg
mov
cmpb
loope
mov
or
cmp
decb
cmp
cli
push
xor
fs
jl
inc
dec
inc
lret
lahf
and
mov
mov
fldcw
dec
sti
cltd
stc
stos
sub
add
xchg
mov
fs
mov
mov
sti
ljmp
addl
adc
mov
outsb
inc
xchg
jecxz
or
adc
subl
adcl
les
movsl
adc
test
pop
inc
int
xchg
insl
or
xor
ja
lret
sub
aas
popaw
dec
xchg
jo
inc
mov
orb
mov
mov
add
loope
ret
xchg
movsb
imul
pop
fisubrs
pushf
xor
incl
out
sub
cld
and
in
xchg
bound
mov
cmp
stos
stos
fs
dec
jmp
inc
jbe
xchg
in
mov
pushf
or
jle
ret
loopne
jmp
in
or
lcall
mov
dec
jo
or
in
imulb
pop
add
jmp
test
mulb
mov
mov
repz
cmp
mov
inc
scas
adc
jecxz
mov
out
xor
ficompl
dec
cli
data16
or
mov
aaa
xor
add
xor
pop
lds
xor
cwtl
jnp
pop
inc
and
sub
jb
push
dec
shrl
into
xchg
xchg
ret
scas
xchg
jecxz
mov
out
and
sub
push
jae
je
inc
or
hlt
push
jno
test
inc
xor
jge
sbbl
fists
lret
aaa
mov
jmp
hlt
fadds
jecxz
mov
or
add
scas
out
dec
sub
out
shr
mov
mov
pusha
fadd
pop
dec
push
mov
mov
sarl
aas
push
pop
mov
jp
into
push
push
add
shl
fidivrs
jo
push
cli
xor
lahf
inc
jmp
notb
repnz
mov
pop
aas
jge
mov
scas
leave
pop
mov
dec
popf
push
lret
testb
xchg
lahf
lahf
clc
in
cwtl
dec
cli
mov
lods
ljmp
or
hlt
test
jmp
push
push
pop
inc
inc
fiadds
les
lcall
ret
out
xor
insb
jle
sub
dec
mov
jne
lods
push
pop
in
or
popa
sub
cmp
mov
faddp
js
aam
imul
leave
jae
inc
je
dec
sbb
cwtl
jno
xor
sahf
jp
not
and
pusha
sbb
outsl
add
push
xchg
xor
cmc
dec
andb
lcall
xchg
dec
add
cmc
lock
loop
sahf
fstl
and
pop
test
loopne
es
and
and
outsl
jnp
test
xor
daa
addr16
add
sbb
cmp
in
add
inc
mov
int3
lcall
pusha
cltd
repnz
cmp
mov
je
test
stos
sti
in
xor
xchg
lcall
pop
adc
into
pop
loopne
push
lds
lcall
cmp
jl
scas
dec
push
repnz
jp,pt
mov
xchg
sub
sbb
mov
cmpsb
push
mov
nop
cmc
shl
aad
lcall
push
push
jge
test
adc
mov
andl
jne
mov
jb
pop
jo
stos
push
xchg
sub
dec
test
jo
or
xor
fs
push
sti
jl
in
jmp
push
cmc
sub
cmpxchg
add
jecxz
mov
lret
xchg
test
imul
rorl
inc
xor
dec
movsb
cmp
jno
sti
xchg
and
addr16
ror
jne
paddusw
push
xlat
mov
imul
dec
inc
aam
sub
stc
mov
loope
stos
pop
dec
xor
imul
and
jg
stos
adc
fdivp
mov
push
adc
jae
push
in
clc
push
call
mov
movsb
adc
pop
mov
sbb
xor
pusha
js
lret
inc
js
fimuls
inc
orb
xchg
pop
fidivrl
imul
mov
ja
add
lds
in
mov
mov
clc
fistpl
push
sahf
push
sub
inc
negl
int
test
mov
repz
enter
and
ret
or
pushf
adcl
adc
ret
mov
mov
mov
jg
clc
jb
push
data16
add
out
fidivrs
aam
notb
lret
sbb
lret
inc
outsl
jnp
inc
addr16
jnp
sti
mov
push
mov
xor
jg
dec
loope
bnd
jo
add
sbb
addr16
or
xchg
dec
or
lret
mov
test
adc
mov
mov
shl
push
fildll
int3
fldt
jge
movsb
repz
cli
sbb
mov
int3
inc
mov
xchg
ss
out
add
mov
addr16
push
add
lods
mov
cld
pusha
aas
jnp
mov
jae
jge
cmpb
out
dec
adc
out
push
ss
rcll
daa
inc
sbb
dec
cs
enter
clc
aad
sbb
jne
cwtl
sbb
sub
xchg
mov
lods
pop
stos
mov
inc
scas
jns
mov
adc
sbb
mov
cmc
push
fildll
daa
mov
pop
cwtl
movsl
lret
xchg
mov
daa
jns
lcall
or
data16
xchg
jl
xchg
orl
sub
das
in
mov
loopne
mov
xorl
push
mov
or
loope
pop
adc
ljmp
int3
cmp
or
aad
jo
push
scas
popf
lock
mov
mov
jp,pt
pushf
dec
mov
dec
in
pushf
mov
dec
leave
and
lret
pushf
outsb
mov
pop
xchg
cmp
or
nop
scas
sbb
mov
loope
xchg
pop
test
stos
in
scas
mov
sahf
add
cmp
inc
jmp
mov
xlat
or
inc
jb
mov
ja
jb
out
addb
mov
daa
mov
flds
mov
mov
sbb
lock
js
mov
jmp
fidivrl
ret
adc
mov
sti
push
cli
mov
sub
pop
sti
loope
mov
mov
out
jp
cmp
inc
xor
cld
dec
dec
fmull
and
out
lret
in
sahf
inc
add
push
fldt
and
ja
xchg
mov
pushf
add
cmc
mov
cwtl
sti
dec
jnp
outsb
aam
jne
jo
sub
pusha
popf
sub
dec
mov
dec
loop
pop
imul
cmp
outsl
pop
aad
inc
sti
mov
aad
sub
mul
xor
jbe
dec
jl
and
js
insl
sahf
adc
adc
js
rclb
cld
pop
shrb
cs
mov
mov
jle
pusha
fnstsw
insb
jo
xlat
push
adc
mov
mov
aad
mov
mov
adc
dec
loope
pop
enter
push
inc
ret
inc
lcall
arpl
xchg
imul
sbb
jmp
add
sbb
jae
orb
mov
repnz
inc
sub
jle
sub
inc
mov
sub
add
mov
xorl
test
add
push
push
aad
sub
addb
jae
add
imul
sbb
adc
cmpsb
jne
mov
xchg
in
sbb
inc
dec
push
pusha
leave
ss
dec
cmp
push
dec
lods
scas
and
cltd
mov
mov
shll
lock
sub
pop
adc
jp
mov
gs
gs
movsb
out
out
sub
ljmp
lods
inc
pop
ret
push
mov
test
mov
inc
pop
mov
xor
dec
add
in
xchg
dec
stc
inc
popf
in
or
add
adc
xor
addr16
shl
add
mov
inc
out
cmpb
inc
mov
cmp
push
aas
mov
mov
xchg
and
and
inc
ret
ss
outsb
in
int
jle
or
jl
movsl
test
fs
jno
or
test
cltd
sbb
insl
loope
push
mov
jle
into
cltd
in
mov
adc
and
repnz
fisubrs
fsubl
out
movl
adc
mov
dec
mov
pmullw
push
dec
mov
mov
pop
mov
sbb
jb
test
mov
push
and
push
xchg
or
cmp
js
ds
mov
add
out
push
bound
push
mov
push
pop
xchg
in
popa
jb
dec
lods
mov
js
lcall
jle
cmpsl
fnstcw
mov
add
mov
mov
imul
sub
sbb
pop
mov
popf
and
decl
inc
xchg
jo
push
xchg
lods
inc
and
mov
adc
sbb
add
subb
shll
mov
jl
mov
xchg
sbb
scas
jnp
or
jl
cmp
inc
repnz
xor
out
mov
loopne
lods
mov
pop
lods
fsubl
sbb
cmc
insl
fidivrl
sbb
stc
jge
ljmp
dec
ljmp
lods
aaa
cmpsb
ljmp
scas
push
shll
pop
out
push
pop
stos
mov
add
not
das
sub
xor
daa
mov
pop
ds
bound
shlb
lods
nop
daa
je
push
cli
pop
negb
mov
xchg
fldcw
or
mov
pop
push
mov
pop
popa
cmp
pop
bound
or
xor
inc
xchg
inc
loope
rol
ret
shrl
adc
or
pop
subl
in
insl
insb
dec
js
sbb
dec
sub
mov
fs
xor
loop
or
sbb
loope
int3
popf
lods
pxor
hlt
push
add
cli
addr16
and
mov
ja
sbbb
push
out
gs
jge
mov
out
cmp
inc
aad
jne
mov
xor
push
insl
test
adc
and
roll
ds
inc
adc
pop
xorb
mov
mov
inc
add
ss
sub
cmp
gs
jae
mov
nop
adc
pop
es
leave
pushf
outsb
ret
nop
mov
pop
lods
je
arpl
out
adc
insb
or
sub
pushf
invlpg
pop
lret
jp
rcrb
fisttps
dec
leave
roll
fcmovnbe
jo
rcrb
lcall
adc
jns
test
jle
xlat
jns
xchg
mov
push
push
or
adc
mov
jl
in
adc
shll
ljmp
outsb
add
out
sub
fwait
or
and
sbb
cmp
into
lock
dec
xor
test
testl
cmp
and
addr16
jno
mov
sub
outsb
pop
ret
cli
jne
lret
aaa
or
mov
dec
sub
inc
push
cmp
lret
mov
mov
je
test
add
sbb
push
mov
push
insb
push
inc
xor
lods
aad
sti
outsl
fsubs
popa
xor
mov
dec
push
sbb
xor
stc
outsb
nop
dec
ret
aas
xchg
sub
inc
sbb
jo
je
jp
push
hlt
push
sub
imul
into
mov
or
imul
cmp
mov
fsts
fwait
mov
inc
sub
mov
mov
call
out
jle
mov
inc
push
mov
fists
bnd
test
mov
mov
pushf
mov
or
push
insb
sbb
mov
add
mov
shrb
movsb
pop
in
fnstsw
push
mov
pop
and
gs
mov
and
mov
pop
mov
arpl
lock
jmp
out
std
sahf
aaa
clc
stos
ljmp
push
gs
xchg
outsb
ljmp
add
sbb
and
jne
outsl
mov
jecxz
ret
aam
lods
push
in
pop
stc
dec
scas
sbb
mov
mov
sti
cmc
sahf
subl
pushf
jge
sbb
insb
testl
sahf
push
subb
sbb
mov
mov
rol
ss
cmpsl
int
daa
push
mov
mov
or
icebp
pop
mov
mov
mov
xchg
xchg
sbb
aam
ljmp
mov
sbb
call
repnz
pop
push
scas
push
fstpt
pop
pop
jno
outsl
insl
cmp
jge
push
aaa
test
fidivrs
push
fnstcw
imul
jns
pop
stos
xchg
out
pusha
arpl
jo
xor
add
rol
cmpsb
inc
cmp
popf
inc
gs
sub
fsubl
dec
popa
sub
jbe
cli
repz
xchg
sbb
iret
sub
in
inc
ret
sarb
xor
cmc
jge
inc
stos
out
mov
cmpsl
rcrb
inc
ret
and
mov
shrl
adc
jb
mov
outsl
sbb
cmpsl
sub
add
fs
jg
xor
mov
push
adc
mov
mov
dec
aas
adc
in
fadds
adc
dec
mov
stc
inc
int
call
lahf
fs
pop
lahf
adc
dec
mov
mov
cltd
bound
fs
xchg
scas
cmpsb
inc
iret
lret
inc
out
mov
rcl
iret
in
test
movb
xor
div
adc
add
sti
scas
jmp
enter
push
or
outsl
dec
mov
xor
cmp
mov
pop
jmp
dec
fcom
and
outsb
and
pushf
pop
enter
lret
hlt
ret
imul
jo
and
bnd
lahf
pop
movsb
cltd
or
pop
push
xchg
push
stos
mov
and
cmp
push
sbb
aad
test
dec
pushf
rorl
add
adc
mov
stos
and
js
push
adc
xor
mov
push
cmpsl
lret
in
mov
mov
sbb
fisubrs
push
movsl
mov
mov
jnp
cmp
xchg
add
movsl
cmp
add
hlt
in
not
out
hlt
and
icebp
lret
arpl
and
cld
js
cmpsl
bound
int
mov
nop
test
call
outsl
inc
mov
es
into
and
loopne
lret
icebp
shlb
sub
ljmp
mov
daa
cmpsl
pop
insl
mov
dec
js
mov
mov
je
outsl
movsl
xchg
add
fsts
adc
jns
shll
pop
int
jl
or
pop
xor
jp
ret
jne
aad
aas
shlb
mov
or
mov
mov
insb
and
mov
not
mov
out
nop
loopne
ret
sub
push
fisubrl
mov
lahf
jnp
mov
out
fwait
into
pop
imul
and
inc
shll
add
fimuls
and
arpl
repnz
pop
adc
adc
mov
dec
mov
push
mov
dec
outsl
cs
jecxz
mov
mov
pop
inc
sub
inc
int
xchg
xor
cmp
xor
sbb
cmp
pop
orb
dec
mov
push
cli
xor
imul
bound
sbb
xor
jnp
inc
daa
scas
out
aaa
fbld
stos
test
fwait
in
xchg
jno
xor
push
pusha
or
sarb
add
outsb
add
mov
mov
out
mov
repnz
pop
cmp
and
ja
lods
xchg
push
jecxz
dec
jb
std
stos
cmc
xchg
pop
dec
jnp
mov
int3
mov
mov
es
bound
push
or
mov
fildl
mov
pop
shr
incb
inc
lods
and
jg
into
lahf
scas
push
push
arpl
cmp
pop
xchg
push
cmp
add
outsl
adc
cmp
sbb
pop
cmp
and
sub
xchg
icebp
lea
inc
jle
shlb
mov
mov
iret
mov
or
pop
add
push
int
sub
ljmp
pop
rcrb
aam
fmulp
pop
mov
divl
push
neg
call
jbe
cmp
mov
push
xor
sbb
lret
pop
shrb
cli
js
push
pop
inc
cwtl
inc
repz
test
in
mov
cmp
and
pop
std
and
dec
push
mov
xor
repnz
dec
push
rclb
jne
push
leave
sbb
xor
inc
or
pop
rcl
fldl
fistpll
dec
mov
pop
cmp
sub
xchg
cld
testl
fisubl
xor
fnstcw
sbb
repnz
pop
inc
jg
sti
lock
adc
add
cmp
push
jmp
cld
ror
mov
pop
in
in
xchg
mov
mov
mov
xchg
stos
and
repnz
in
jns
addl
inc
mov
jns
mov
call
rorl
sub
in
hlt
outsb
add
sbb
cld
fistl
popa
jb
outsb
dec
insl
cmp
ja
push
dec
or
inc
jmp
ljmp
stos
mov
inc
ret
out
in
inc
pop
xor
sahf
scas
add
inc
movsb
cmpsl
cmp
push
inc
addr16
xor
xchg
pop
lods
in
cmc
fwait
ljmp
pop
cmc
sub
jae
mov
lea
push
lods
or
inc
cli
inc
fcoml
test
lods
imul
cltd
push
dec
pop
stos
inc
cmpsb
cmp
or
cmp
xchg
push
cld
ret
cwtl
fisttpl
push
push
sub
adc
mov
cld
or
pushf
test
mov
or
mov
adc
mov
mov
inc
push
rorb
sbb
inc
mov
push
push
add
pop
dec
popl
es
mov
cs
adc
add
and
sbb
add
int3
jo
ljmp
aaa
or
jnp
cmp
adc
mov
mov
mov
xchg
call
jp
pop
adc
les
out
fstl
pusha
mov
pop
push
cwtl
or
dec
sbbl
jge
jge
scas
pop
xchg
mov
insb
stos
imul
fcomps
mov
clc
jae
sub
xor
out
loopne
sub
cli
dec
in
popf
or
sbb
fld
imul
adc
rolb
push
fildll
xor
cmp
adc
sti
adc
ljmp
adc
pop
mov
dec
xor
test
sbb
out
adc
push
je
pop
mov
lcall
mov
jns
stc
popf
xorl
push
sbb
shlb
inc
data16
subl
pop
test
jl
out
sbb
into
cli
push
and
mov
shll
fildl
lock
shrb
push
stc
cmp
int
cmp
xchg
scas
inc
icebp
xor
std
icebp
pop
aas
call
faddl
push
out
dec
jmp
sahf
xor
setg
test
fwait
cmp
pushf
fnsave
cmp
sbb
sub
push
sti
pop
push
add
mov
shl
ss
xchg
dec
xor
mov
jmp
jae
lock
sahf
or
sti
push
hlt
mov
out
fcomps
cli
cmpsl
push
mov
jbe
sti
mov
fstl
pushf
dec
or
mov
push
and
mov
xor
jp
sub
std
scas
jecxz
and
loopne
cmp
pop
shrl
cli
sub
rcrl
sar
clc
mov
faddl
cmc
out
mov
xor
pop
enter
subl
push
xchg
mov
roll
adc
mov
loopne
mov
je
test
leave
jge
scas
jo
imul
movl
inc
loop
outsl
sub
push
fldcw
xchg
addl
shr
addl
lret
test
ds
xchg
in
clc
or
fidivl
cli
jns
pop
pop
testb
jmp
int3
cmp
push
ljmp
and
insl
mulb
insb
dec
push
and
add
js
mov
cwtl
sub
imul
gs
push
leave
sbb
jecxz
ds
mov
cmp
popa
fldl
inc
inc
loope
xchg
jecxz
sbb
int3
sbb
int
lods
sbb
inc
lcall
mov
mov
movsb
add
test
js
mov
sub
xor
in
rol
sub
and
dec
adc
aam
out
in
jp
jle
repnz
add
jecxz
dec
fnstcw
cmp
mov
cmp
add
lcall
ror
jge
xor
movsb
inc
int3
or
aam
mov
mov
nop
in
and
dec
addr16
fnstcw
mov
test
or
call
mov
pop
sub
int
mov
xchg
addr16
mov
imul
pop
loopne
dec
lret
arpl
or
dec
out
arpl
lret
adc
push
daa
clc
lcall
inc
adc
call
inc
adcb
pop
xchg
or
cmp
sub
scas
je
sub
punpckhdq
sbb
inc
push
push
push
fbstp
hlt
jmp
cltd
xor
jmp
inc
stos
cltd
push
or
sub
xchg
js
or
insl
and
outsl
inc
divl
push
push
jp
arpl
stc
jns
out
pusha
pusha
sub
sti
movsl
mov
aam
lcall
test
inc
sub
scas
jle,pt
out
es
test
out
adc
add
orl
push
cwtl
mov
or
push
inc
faddp
and
movsl
jnp
leave
mov
cmp
xor
js
stos
lds
mov
and
repnz
out
fsubp
mov
cs
stos
cmc
fsubrp
test
pop
fmull
orb
xor
movsb
sbb
clc
adc
mov
imul
xlat
daa
mov
repnz
ljmp
lret
push
mov
push
stc
dec
sti
pop
clc
ror
hlt
mov
jo
lret
cs
repnz
les
sub
lret
push
and
stos
icebp
dec
loopne
xchg
xchg
dec
mov
insb
mov
and
sbbb
xchg
movsb
bound
outsb
test
loopne
xchg
ss
loope
lods
call
xchg
mov
adc
loop
ljmp
subb
xchg
inc
lods
push
mov
enter
scas
or
fistl
imul
arpl
mov
adcb
dec
insl
mov
sub
dec
cmp
sub
mov
sub
or
test
insl
xor
js
loope
pop
mul
inc
outsb
pop
rclb
jmp
divl
adc
imul
rolb
iret
sub
divb
out
orb
out
fisubrl
xchg
sub
addl
sub
mov
aad
inc
dec
aam
inc
fsubl
arpl
in
push
pop
std
adc
loopne
stos
ljmp
xor
and
pop
out
scas
mov
pop
aas
js
adc
mov
lock
hlt
or
mov
imul
dec
popa
or
cmp
jae
loop
inc
sub
outsl
lahf
xchg
aad
adc
cld
push
sbb
mov
jns
push
fadds
lret
mov
mov
call
push
fcomi
jle
ja
lahf
and
inc
mov
inc
xchg
scas
mov
and
ja
fsub
ljmp
mov
push
lock
cmp
jo
pop
fistl
ljmp
addb
push
das
lds
xlat
imulb
pop
ret
xchg
arpl
pop
add
xor
inc
and
divl
sbb
scas
inc
lret
in
hlt
mov
fsub
dec
out
les
jp
inc
xchg
sub
or
outsb
xchg
ret
je
mov
loope
or
stos
pop
pop
in
test
loop
and
adc
cwtl
mov
aam
mov
mov
add
inc
loope
add
sub
popa
lock
jmp
sbb
lcall
xchg
adc
sub
pop
xchg
jnp
add
scas
loop
ljmp
nopl
insl
rcrb
leave
ret
lds
ss
add
xchg
cltd
cli
xchg
pop
popa
cmpsb
mov
jmp
mov
jl
cmp
adc
add
loopne
or
pop
push
out
push
clc
inc
cmc
les
scas
jmp
loope
icebp
mov
loope
pusha
ret
xchg
scas
lods
sbb
jp
adc
pop
pop
inc
mov
int3
cli
dec
sbb
sub
loop
fwait
pop
jecxz
inc
inc
xchg
add
dec
fisubrs
filds
add
sbb
pop
in
aas
or
stc
add
loopne
adcl
fs
movsb
push
jl
lcall
inc
mov
mov
lods
shl
mov
and
cli
xchg
fidivrs
iret
mov
leave
mov
lahf
aaa
push
add
xchg
mov
mov
aas
or
lahf
mov
jnp
jns
int
popa
fsubrs
inc
pop
mov
test
pop
push
jle
inc
fnclex
jmp
cli
enter
jg
adc
xor
std
jg
and
test
jnp
in
push
mov
jmp
cmpsl
inc
out
test
js
icebp
sbb
dec
hlt
in
jne
cmp
or
mov
ds
dec
or
repz
lret
data16
gs
cwtd
push
test
jg
fisttps
add
in
push
out
insl
aas
add
jo
stc
insb
inc
insb
test
jmp
icebp
sahf
sti
sahf
pusha
sarb
in
and
jo
test
jge
mov
lods
clc
mov
stos
cmpsb
cmpsl
pop
add
dec
adc
int3
cmp
cmp
xor
sub
gs
cwtl
in
fcoml
adc
ret
notb
insb
in
pop
inc
in
push
pop
push
sub
lea
shll
movsl
mov
out
in
shl
into
mov
ljmp
jp
ja
outsb
cmpsl
jp
dec
and
pop
icebp
bound
jp
cli
pop
test
mov
clc
jne
sub
xor
cmp
sbb
pop
leave
shll
adc
enter
movsl
xchg
jb
mov
pop
sub
jmp
xor
inc
js
xchg
ljmp
or
pop
xor
adc
in
fsubrp
jp
mov
adc
out
mov
pop
cmpsb
push
cwtl
pop
jbe
orl
push
add
xorl
dec
cmpsl
cltd
xchg
fildl
mov
mov
data16
xchg
nop
push
push
dec
in
and
jge
sbb
shll
xlat
roll
sbb
bndstx
xor
mov
popf
popf
pop
cwtl
inc
sub
mov
icebp
mov
popa
adc
mov
scas
dec
out
mov
xor
insb
lock
cwtl
sub
test
and
je
aad
leave
xchg
adc
adcl
out
mov
jns
and
push
clc
popa
adc
pusha
cmpsl
pop
jae
pop
jg
popa
sbb
inc
and
cmp
jo
push
mov
xor
dec
and
dec
repnz
mov
loop
mov
mov
inc
xchg
ja
out
popf
jg
sbb
ret
scas
jp
in
mov
and
jne
xorb
cmp
push
sbb
ret
or
jmp
scas
clc
push
adc
xchg
scas
subb
ret
sbb
add
mov
call
stos
movsb
inc
and
outsl
cmpsl
add
lcall
mov
gs
sbb
mov
add
jnp
repnz
pop
orb
mov
enter
and
mov
fs
mov
lods
lock
popf
popf
xorl
push
cmp
aas
mov
out
nop
into
outsb
push
sti
mov
push
addr16
aad
ror
mov
mov
dec
mov
subb
push
mov
es
test
adc
loop
in
mov
shlb
or
loop
jbe
push
cmp
stos
mov
test
cli
jl
push
mov
jl
mov
adc
mov
aas
ljmp
pushf
int
loope
fwait
xchg
mov
sub
iret
xchg
cmp
dec
sub
xor
mov
cmp
mov
or
pop
cmp
mov
cld
or
sahf
nop
cmp
or
xlat
jmp
stc
push
sete
andl
or
inc
pushf
pop
fmull
xchg
movsb
and
outsb
mov
cmp
fisttps
xchg
xchg
pop
jge
leave
or
je
movq
in
lcall
pop
test
scas
mov
mov
mov
inc
adc
mov
push
pop
add
cltd
inc
scas
inc
ret
shrl
xor
faddl
popf
cmpsb
inc
gs
imul
xchg
inc
xchg
call
xchg
dec
add
mov
dec
mov
lcall
dec
insl
cmp
fucomp
mov
stos
subb
in
pop
pop
mov
in
dec
pusha
xor
pop
shrl
jne
sarl
test
in
xchg
push
repnz
and
scas
mov
in
cmp
xchg
pop
loop
and
pop
or
and
stos
outsb
fwait
and
pop
mov
sub
fcomi
sahf
cld
idivb
adc
add
std
push
scas
in
and
xor
mov
mov
xchg
rcrl
notl
push
pusha
movsl
adc
sub
pushw
iret
push
and
sbb
sub
nop
cmp
mov
add
mov
fcoms
cli
push
push
in
test
push
movsb
shrb
xchg
xlat
fcompl
icebp
adc
movsb
aas
mov
inc
inc
scas
mov
in
fcoml
aad
jo
movsb
cmp
clc
cli
fcomp
add
in
fdivr
notl
lods
sbb
pop
push
mov
mov
adc
xor
dec
cld
mov
fildll
pushf
push
gs
mov
pop
dec
imul
xchg
mov
and
cld
cwtl
xchg
addl
sbb
fwait
repnz
ss
scas
lock
fnstsw
and
pop
les
repz
in
gs
sbb
xor
dec
jle
or
fildl
lret
test
jmp
insl
or
cmp
xchg
or
xor
pop
jae
lea
adc
adc
mov
daa
popf
mov
pop
jnp
pop
sub
mov
test
stos
movsb
in
mov
cmp
hlt
or
ret
fnstcw
xchg
mov
daa
xor
jo
xchg
shrb
or
rcrb
test
bswap
loopne
adc
xor
stc
jmp
fimuls
stc
jecxz
push
cmpsb
clc
push
scas
push
mov
ljmp
push
out
inc
dec
xor
test
push
sti
inc
loop
jp
and
jno
mov
aam
pop
sub
pop
ret
leave
mov
idivb
dec
les
loopne
or
ja
jnp
ret
idiv
inc
or
test
insl
xor
mov
or
jp
sbb
roll
adc
les
pop
into
lds
inc
dec
icebp
mov
lea
scas
cmpb
hlt
mov
and
jo
push
mov
cmp
or
movsl
jae
rcl
inc
ss
sub
out
push
push
xchg
add
int3
xor
jbe
pop
mov
mov
push
mov
scas
jae
cmp
repnz
rcrb
mov
xchg
loopne
push
into
and
cmp
adc
test
mov
xchg
and
push
mov
lcall
stc
lock
dec
or
jl
pop
pop
pop
mov
pop
jmp
cmp
jnp
mov
ret
pop
mov
dec
add
sti
xchg
pusha
pop
pop
jge
int3
popa
pop
in
lock
dec
lcall
out
and
jl
stos
repz
ja
pop
inc
insb
mov
jns
ljmp
adcb
dec
cmp
mov
test
push
repnz
mov
or
int3
cmp
pushl
mov
mov
cwtl
mov
pop
insl
bound
lret
sbb
dec
ficompl
adc
pushf
xchg
sbb
sub
xchg
inc
lret
jnp
pop
movsb
popf
shlb
cld
inc
sbb
lahf
fstpl
mov
and
rorb
cwtl
nop
mov
fwait
mov
inc
sub
inc
sbb
fistps
pop
bound
into
ds
pusha
jae
ljmp
cmpsl
data16
lcall
xchg
imul
rorl
sbb
fistpll
loope
int3
xor
mov
pop
out
mov
mov
adc
sbb
pop
call
push
or
in
jbe
cmpl
aad
lret
mov
xchg
or
or
add
scas
insb
call
sahf
mov
jns
xchg
jnp
in
test
mov
std
pushf
inc
jle
pusha
add
adc
add
daa
imul
je
mov
mov
xchg
cmc
outsb
pop
sub
aam
dec
ss
xchg
push
pop
stos
pop
sub
and
fs
mov
jl
sub
cmp
cmpsb
xchg
ja
cmp
loopne
shr
imull
xor
test
mov
into
daa
add
mov
rcrl
push
inc
cs
call
dec
add
cmp
jge
mov
dec
arpl
dec
mov
daa
mov
pop
shrl
repz
cwtl
sbb
lock
pop
inc
mov
sub
sub
pop
lcall
scas
test
or
jns
xchg
je
sarl
xlat
adcb
xor
pop
mov
jbe
lahf
lea
push
ja
mov
xchg
fstpt
xchg
dec
mov
out
jnp
repz
sbb
insb
adc
ds
mov
in
sarl
push
mov
inc
dec
sub
aaa
shll
adc
jmp
iret
aas
aam
or
sub
dec
aad
mov
aaa
pop
ds
cmp
das
and
and
into
xor
ds
mov
popf
aad
iret
test
pop
push
mov
and
cmp
test
dec
sub
and
mov
push
push
jl
mov
popa
popf
pop
les
sub
mov
outsb
and
jno
mov
in
jg
bnd
adc
jl
cli
pop
sbb
push
mov
loopne
mov
jmp
fcom
out
mov
or
cwtl
cs
popf
scas
pop
xor
jge
mov
scas
sbb
sahf
ljmp
lahf
and
or
jns
shrl
lods
cmpsb
ret
lock
xorl
out
cmp
pop
and
mov
icebp
stos
push
into
pop
mov
iret
aad
add
cmp
sub
xorb
xchg
jg
push
cmp
add
push
int3
shrl
sub
mov
mov
sbb
inc
sbb
iret
adc
push
shlb
pop
sub
sarl
mov
rcll
cs
cmpsb
and
das
dec
or
mov
ret
push
xor
daa
sbb
sbb
prefetcht0
xor
xchg
fmull
jmp
push
xor
lods
clc
cmpsb
xchg
jge
subb
lret
sbb
xor
lcall
mov
or
mov
mov
mov
dec
repz
lock
mov
mov
or
testl
sahf
daa
mov
mov
adc
lcall
push
in
cmp
movsb
or
popa
sub
mov
idivb
mov
cmp
mov
lar
ljmp
dec
movsl
add
pop
pop
and
mov
jne
movsb
dec
je
pop
sbb
pushf
out
xchg
ret
push
outsl
fdivr
cmp
mov
and
outsl
inc
outsl
mov
flds
ret
div
es
add
push
sub
adc
popf
add
fcmovu
in
mov
pusha
gs
inc
xor
stc
cwtl
mov
das
fisubl
jne
jecxz
jge
int
push
mov
jnp
fmull
mov
xchg
jns
jle,pn
shll
pop
xor
fsubrs
pusha
mov
fcompl
std
int
push
lcall
dec
orl
jb
notl
ret
dec
movsb
add
in
push
mov
sbb
ljmp
fstpt
aad
and
pop
xor
stos
or
loop
or
cmc
je
das
call
or
call
adc
iret
xchg
mov
jae
fcoml
mov
xchg
jmp
fs
xor
adc
clc
hlt
enter
mov
adcl
test
sbbb
xchg
js
nop
in
inc
mov
fsubrl
or
cmp
ret
mov
push
mov
fwait
popf
es
push
stc
repz
push
inc
xlat
call
adc
xchg
inc
add
cmp
mov
mov
popf
sub
lcall
cwtl
insl
push
adc
mov
adc
test
sub
lcall
roll
xchg
mov
aas
mov
rcrb
jnp
sub
into
cli
pop
fidivl
jne
pusha
lock
adc
ficoml
pop
dec
loopne
stc
push
int
sarb
dec
xor
enter
xor
sbb
rdtsc
pop
mov
add
dec
xchg
pop
adc
jno
xchg
insb
popa
push
ficompl
cmp
or
push
leave
inc
xor
jnp
adc
stos
mov
loopne
sbb
mov
mov
popa
popa
xchg
pop
lahf
cmp
std
xchg
xor
test
pop
mov
sub
push
sti
or
xor
stos
or
repz
cwtl
jg
pop
dec
xor
sub
xchg
mov
push
add
mov
rcrl
jmp
jmp
lea
inc
test
and
insl
inc
sbb
shr
mov
sbb
pop
out
sub
pusha
mov
xor
xor
mov
gs
mov
mov
fwait
pop
stc
jno
inc
push
filds
inc
inc
imul
in
cmc
fsub
je
or
mov
cs
lods
mov
jl
mov
enter
inc
cwtl
cmpsb
cltd
insl
sbb
sub
and
das
lods
sub
jnp
pop
outsl
sub
xchg
cs
shr
testl
mov
ja
xchg
jbe
and
orl
subb
and
dec
stos
pop
or
jp
xchg
fildl
les
lods
push
gs
out
mov
mov
mov
or
shlb
pop
push
rcll
rcrl
insb
sbb
andb
movsb
pop
inc
push
add
pop
add
pop
adc
dec
xor
pop
fwait
inc
pop
add
stc
mov
ret
fs
les
mov
daa
sarl
cli
mov
push
cs
sahf
mov
pop
cwtl
sbb
xor
repnz
push
mov
bound
es
push
imul
roll
movsb
sub
sbb
fucomip
mov
test
cmp
mov
ret
cli
movsl
inc
scas
push
xor
xor
jae
mov
bound
cmp
das
mov
push
adcl
movl
test
dec
sbb
pop
fimuls
cmpsl
dec
xor
test
adc
pusha
xlat
push
aam
hlt
loope
rol
mov
inc
mov
fisttpl
push
mov
pop
push
ret
pop
jno
pop
fisubl
dec
mov
sbb
fisttpl
inc
sbb
outsb
out
pop
adc
pop
addr16
loopne
xchg
xchg
lahf
push
xchg
xor
xchg
scas
push
les
sub
fwait
movsl
xor
cld
ss
cmp
jle
rolb
daa
daa
cmpsl
aaa
fucomp
call
or
fadd
pop
mov
and
cltd
stos
adc
xchg
in
jl
push
ficoml
or
pop
push
lcall
mov
push
xchg
bound
xor
xchg
mov
daa
fcomps
fiaddl
sbb
and
rclb
adc
inc
jo
insl
mov
lret
gs
xor
mov
rcl
cmp
int3
xchg
sbb
mov
adc
mov
test
dec
adc
sahf
ljmp
icebp
rclb
data16
pop
test
mov
dec
gs
cwtl
repz
pop
aam
pusha
test
adc
inc
fdivs
filds
or
in
push
dec
fistps
fbld
dec
or
add
sbb
and
push
dec
flds
pop
mov
mov
push
call
dec
fldenv
in
ffreep
out
jne
iret
mov
subb
cli
jge
and
jno
lar
cmp
jmp
add
aaa
inc
sub
lods
xchg
mov
in
mov
in
jle
ss
insl
sub
in
lods
sub
xor
jl
mov
mov
loop
mov
test
sarb
and
and
scas
out
insb
mov
mov
fistl
and
jnp
test
and
xchg
iret
cs
adc
das
imul
addr16
and
dec
push
out
popa
dec
mov
mov
mov
lea
or
inc
mov
mov
or
xchg
jns
xor
data16
xor
out
icebp
cltd
stos
test
mov
loopne
push
enter
mov
add
std
cmpl
popa
xchg
sub
jmp
jp
mov
frstor
fwait
push
dec
jnp
push
and
pop
fdivrs
push
hlt
mov
cmp
sbb
jne
cmc
fdivs
cmp
cmp
stc
loopne
cmpsb
push
fisubrl
pop
movsb
sub
in
sub
jg
jmp
jecxz
clc
mov
jmp
mov
adc
mov
sub
imul
dec
cmp
ret
daa
in
mov
push
push
insb
inc
inc
mov
cmp
mov
jp
bound
mov
ret
xor
mov
repnz
pop
jle
mov
adc
sub
mov
repnz
imul
fwait
pcmpeqb
cltd
mov
mov
push
fwait
repnz
dec
aaa
xchg
lock
jp
addr16
aam
fxch
xor
cmpsb
inc
cmp
mov
stos
pop
mov
mov
jnp
cltd
aaa
push
test
pop
and
cmp
add
mov
sbb
les
inc
jae
sahf
int3
outsl
test
fcoml
and
pushf
fcoml
sbb
sbb
ja
out
pop
sub
adc
call
lods
mov
fwait
or
dec
xor
mov
adc
inc
mov
loopne
ds
or
mov
rorb
push
pop
cs
push
insl
mov
xor
sbbl
push
leave
mov
inc
cli
push
lea
repnz
cmp
push
xor
inc
xchg
pop
mov
xchg
jne
inc
or
push
jmp
xor
inc
xchg
push
std
mov
je
movsb
jns
push
sahf
inc
es
pusha
jne
adc
loope
mov
test
xor
das
fwait
ja
sarb
jge
inc
mov
fcmovnbe
xchg
fmuls
sub
scas
or
in
or
hlt
lret
popl
leave
xorb
movsl
sar
das
movsl
jl
andb
js
nop
in
jp
loope
or
mov
mov
ret
je
push
xchg
adc
xchg
and
lahf
jecxz
outsl
fcomps
add
push
lcall
lock
test
or
pop
push
dec
xor
xchg
dec
jne
cmp
orl
push
js
dec
inc
dec
fnstcw
hlt
mulb
jmp
jecxz
push
push
adc
lods
jae
adc
shl
adc
into
out
movsl
outsl
add
mov
mov
and
das
push
gs
push
sub
jnp
dec
in
lret
xchg
ss
pop
mov
rcll
mov
mov
jg
mov
adc
insb
enter
out
xor
rcrb
xor
sbb
cld
int3
push
xor
mov
into
insl
push
sbb
xlat
and
pop
mov
mov
adc
adc
mov
fisubrs
or
ret
mov
inc
jge
addr16
repz
inc
lcall
data16
aaa
rcrb
std
subb
in
sub
repz
cld
out
fistl
out
mov
pop
lods
je
adc
xor
popf
loop
ljmp
iret
and
mov
xchg
imul
test
add
test
add
pop
cld
lahf
lea
xor
mov
xor
scas
pop
dec
xchg
add
jnp
jbe
jnp
or
popa
das
or
ret
aaa
insl
cwtl
xchg
push
push
xchg
aaa
inc
in
mov
xor
inc
inc
cld
inc
cmp
addr16
leave
out
mov
xor
pop
push
jmp
pop
adc
xchg
mov
and
fidivl
xchg
call
pop
cmp
daa
mov
and
and
int3
jmp
pop
jae
add
lahf
lods
mov
clc
arpl
push
sbb
add
jle
movsb
sub
ljmp
stos
inc
sbb
jne
les
cmp
fwait
das
sub
hlt
aad
sub
and
sbb
jo
pop
mov
mov
imul
outsl
fs
ror
sbb
notl
push
pop
and
adc
mov
lods
lds
xchg
outsb
mov
sbb
arpl
push
data16
call
cwtl
xorl
mov
mov
ljmp
adc
scas
sahf
leave
out
outsl
push
addr16
out
mov
fisubrl
scas
mov
or
shl
les
frstor
ds
pop
sbbb
in
pop
add
call
push
mov
pop
ret
gs
pop
sub
cli
icebp
inc
sbb
pop
test
out
pop
and
out
sub
std
es
gs
sbb
sahf
push
cmp
push
mov
pop
sub
stc
pop
lcall
jno
inc
ret
jno
jge
jecxz
pushl
pop
push
xchg
inc
mov
cli
imul
pusha
imul
adc
mov
jge
cmc
daa
mov
bound
adc
cmpsb
clc
sbb
push
jg
addb
push
cmp
jge
mov
pop
fisttps
xchg
cmp
xchg
enter
xchg
dec
in
jo
jbe
adc
cwtl
push
xchg
sbb
cmp
pop
push
pop
rcr
xchg
or
iret
or
stos
mov
and
insb
pop
push
cmp
out
sbb
xchg
jg
or
nop
mov
jb
add
std
jns
cmpsb
aas
lret
repz
cmp
mov
scas
ficomps
pop
ss
sbb
stc
stos
cmpsl
dec
std
test
push
inc
cmpsl
std
les
or
loope
or
pop
sbb
into
test
lods
sub
mov
and
lret
jo
xor
xor
sbb
stos
cmp
xchg
movsl
in
xchg
and
cmc
or
fldl
mov
mov
xor
push
cmc
and
mov
inc
xchg
pop
mov
xchg
inc
xchg
rcr
jle
xchg
lahf
lret
sub
mov
mov
cmp
iret
arpl
dec
xchg
adc
mov
mov
ret
enter
insb
push
movsl
outsl
loop
mov
cld
pop
test
push
mov
shrb
push
mov
cmp
sub
cmp
fstpl
arpl
sbb
rcr
call
aas
mov
cmpsl
sahf
mov
xchg
jb
inc
mov
adc
movsl
cmp
xlat
xchg
cmpsl
and
lea
roll
fldt
mov
dec
cmp
and
arpl
ss
out
lcall
mov
cmp
nop
xchg
add
push
shll
fildll
into
ficoml
sahf
inc
roll
push
mov
cmc
mov
in
call
inc
dec
and
sbb
nop
subl
inc
movsb
les
imul
arpl
fcmove
loopne
outsb
mov
jg
int3
cld
shll
cmc
cmp
lcallw
mov
orl
xchg
loope
jo
fdivr
cmc
pop
xor
pop
adc
xchg
es
push
mov
out
pop
mov
pmulhw
cld
cmp
test
push
xchg
dec
xor
mov
sbb
daa
repz
cli
mov
in
or
xchg
mov
mov
lret
mov
push
orl
jg
jmp
push
adc
xorl
dec
fldl
add
dec
pop
js
rolb
sti
insl
fisubrl
jo
push
rcrl
fmul
aas
and
ja
lcall
dec
mov
aam
xchg
lea
cmp
sub
mov
int3
loope
jbe
mov
std
cli
xchg
pop
clc
test
fisttpll
add
mov
lret
inc
loopne
nop
ljmp
pop
push
mov
lea
push
dec
mov
add
inc
popf
repnz
and
xchg
mov
pop
outsb
pop
scas
call
data16
std
sti
popl
add
movsb
jecxz
decl
jp
add
lret
mov
loopne
add
popa
cld
jge
xlat
mov
mov
nop
cmpsb
jb
pop
fldcw
inc
pop
lods
and
popa
mov
add
rorl
mov
cmp
mull
dec
das
pusha
rorb
and
pop
add
into
jne
sub
jg
mov
jge
outsl
jo
push
mov
lret
test
out
je
jb
cwtl
mov
fildl
orl
out
orb
les
lds
das
mov
jg
pop
addr16
cmp
push
test
ss
dec
jge
jb
inc
add
aam
out
push
insl
xor
sub
in
dec
inc
test
xchg
mov
sbb
push
ljmp
gs
xchg
push
je
fcomp
clc
xchg
dec
jmp
sub
dec
sub
mov
in
aad
cwtl
ss
loop
jbe
aaa
ds
mov
add
test
imul
fistpl
data16
jns
mov
popf
sahf
dec
dec
mov
and
setge
jmp
lea
inc
insb
push
mov
in
cmp
out
push
inc
sbb
or
test
in
in
and
loopne
jbe
clc
sti
cli
dec
add
adc
or
pop
jo
xchg
mov
xchg
in
gs
add
fadd
arpl
es
icebp
out
jge,pn
pop
orb
mov
iret
insl
jo
xorl
sti
jne
pop
mov
movsb
cwtl
cltd
and
stos
cmp
cmp
mov
test
stos
ret
movsb
sub
xchg
inc
push
ds
mov
xor
lods
push
loop
addr16
push
mov
fwait
nop
push
pop
insl
fwait
in
enter
lds
sub
adc
es
mov
insb
xchg
in
imul
push
sbb
and
pop
in
add
je
xchg
fbstp
addb
cmp
arpl
ss
cmp
push
mov
jl
shl
out
icebp
mov
stos
sub
ret
mov
pop
xlat
and
push
ret
daa
dec
adc
mov
jb
rcl
sarl
lret
xadd
rclb
in
dec
das
inc
fimuls
mov
sbb
mov
aam
xor
fdivr
testb
and
sub
or
js
jne
and
xchg
lcall
bound
mov
out
cmp
sbb
cmpsl
fiadds
in
in
add
ret
mov
aaa
insb
xchg
or
mov
cltd
xor
shrl
and
psubusb
mov
jp
mov
and
mov
pop
sub
xchg
je
pop
daa
test
sub
fwait
xor
out
pop
adc
into
insb
xchg
fimuls
cmp
bound
icebp
adc
and
add
pop
cld
xor
mov
dec
into
ret
cmp
adc
shlb
roll
sub
loopne
add
jno
mov
or
test
pop
mov
jns
add
fimull
aaa
fildll
js
mov
inc
aad
pop
mov
sub
fdivp
mov
xorl
stc
dec
cwtl
pop
outsb
dec
jb
inc
adc
inc
sahf
adcb
add
mov
popf
in
adc
arpl
sbb
lea
push
mov
dec
and
setno
ds
mov
adc
and
mov
int3
mov
pop
jp
sub
lcall
add
push
xrelease
arpl
add
dec
lods
data16
mov
inc
adc
lahf
and
pop
ficompl
lahf
ret
mov
pusha
int3
outsb
pop
cwtl
mov
repz
notl
nop
test
cmp
scas
cld
jmp
add
push
es
xor
mov
cmp
stc
outsb
push
sbbl
sbb
adc
cmp
sub
out
dec
cmp
mov
mov
cmp
sahf
aam
mov
rcrb
push
je
and
ficomps
sahf
mov
inc
jecxz
adcl
mov
into
lock
mov
into
inc
outsl
mov
ficompl
and
icebp
popa
inc
or
into
dec
jecxz
xchg
push
jmp
or
xchg
xchg
lods
orb
adc
shrb
ds
lods
dec
add
push
ja
xchg
cmpsl
lcall
mov
js
ret
push
add
sbb
sbb
scas
mov
xorb
hlt
or
or
stc
in
xor
gs
stos
inc
ds
adc
aad
bnd
lret
pusha
sub
mov
pop
mov
mov
rclb
push
cmp
scas
insb
sti
outsl
dec
push
cld
scas
sbb
bound
mov
and
mov
pop
hlt
out
shrb
mov
test
js
daa
lret
lds
mov
ds
daa
mov
pop
or
shlb
test
jg
rcll
mov
setae
jle
rorl
push
push
iret
jmp
pop
dec
movsb
xchg
pop
xchg
lret
inc
daa
enter
mov
xchg
jne
fsubrs
testl
inc
mov
pop
lods
outsl
outsl
popa
jecxz
enter
adc
sbb
int3
lahf
iret
mov
bound
pop
jmp
jbe
sub
xlat
lcall
adc
hlt
sbb
fwait
repnz
mov
outsb
int
imul
movsb
shlb
push
add
mov
rcrb
mov
stos
push
mov
lods
pop
sbb
imul
mulb
inc
dec
mov
pop
iret
or
push
les
out
sti
push
sbb
push
lahf
jecxz
mov
fldt
inc
insb
add
imul
daa
arpl
jmp
lcall
rcrl
and
adc
inc
and
sbb
out
outsl
sub
js
push
mov
in
lea
movsl
mov
ficoml
add
aad
popa
xor
xor
scas
fwait
cwtl
sub
mov
into
cmp
mov
pop
mov
and
nop
gs
push
in
lods
das
sub
jg
mov
popf
test
in
jp
int
cmpsl
jmp
test
mov
repz
ds
int3
mov
lahf
lea
lea
mov
adc
jecxz
lods
mov
sub
je
sbb
sub
mov
pop
in
sbb
pop
fsubs
xchg
inc
push
push
ljmp
ss
mov
sbb
sti
or
fmull
mov
int
jo
imul
jne
out
fdivrl
push
add
add
mov
std
or
mov
cmp
push
les
mov
ljmp
adc
mov
sbb
into
xchg
xorb
test
xchg
jae
pop
les
mov
mov
or
cmp
sahf
aam
add
clc
clc
repz
xor
push
test
mov
flds
xchg
xchg
negb
int3
jo
or
sbb
cmp
and
and
mov
cmp
shlb
cli
and
loope
fisttpl
jb
push
push
imul
push
and
pop
shlb
xor
ret
sahf
xchg
mov
cmp
sbb
and
or
fcoml
or
cmp
jp
aas
jbe
loop
dec
lea
mov
aad
into
loopne
or
or
insb
loope
adc
jnp
adc
mov
rcr
push
mov
out
fsubrs
lcall
push
popa
pop
inc
sbb
dec
imul
xlat
xchg
shlb
popa
jbe
ja
push
pop
sub
in
call
xchg
mov
push
movsb
jge
sub
fdivl
push
lock
inc
inc
test
push
ss
mov
repnz
mov
movsb
mov
or
mov
sbb
das
push
aam
fildll
hlt
orb
push
lea
fsub
dec
push
insb
fwait
jmp
mov
sub
adc
xor
sub
jmp
mov
sub
mov
push
cmp
jae
mov
addr16
loop
fcmovnbe
imul
dec
push
iret
mov
shlb
daa
xchg
pop
sub
sahf
xchg
aam
leave
xchg
ret
dec
sub
cmp
inc
xchg
jbe
cmpsl
scas
out
jnp
sbb
pop
ds
movsl
adc
cmp
add
cs
dec
cmp
lret
adc
jge
outsb
mov
gs
lock
fwait
xchg
jecxz
push
test
shl
mov
adcb
and
sahf
pop
xchg
int
pop
int3
mov
addr16
push
in
mov
cld
adc
int
notl
outsb
out
or
dec
sub
mov
stos
jg
add
xor
mov
push
fwait
imul
sub
gs
inc
push
insl
shlb
cmp
adc
mov
mov
and
jb
mov
pusha
iret
and
aas
mov
ja
pop
mov
icebp
push
adc
mov
shrb
xor
dec
shr
mov
movsb
mov
int
dec
pop
loope
rclb
aaa
pop
inc
lds
jp
jno
out
ljmp
push
ret
lods
insl
repnz
xchg
xchg
fnstcw
fpatan
xchg
and
lods
push
test
sbb
cmp
xchg
dec
mov
jns
scas
push
aaa
push
pop
or
enter
test
out
cmp
clc
insl
mov
in
cli
cmpsl
int3
leave
or
ljmp
lahf
stos
mov
adc
and
add
cmpb
fmul
sahf
sti
push
dec
dec
pop
sti
pop
into
xchg
pop
pushfw
and
mov
stos
mov
ficompl
testb
adc
lock
in
sbb
cli
xchg
and
pop
cmp
mov
divl
test
jns
cld
loop
dec
pushf
fadd
pop
jecxz
jne
test
add
and
pop
push
sub
out
mov
push
xchg
mov
and
sbb
hlt
imul
dec
jnp
mov
dec
sub
xchg
and
sub
xlat
stos
lock
je
scas
inc
mov
aad
fistpll
sub
xchg
jno
inc
das
cli
adc
mov
test
dec
iret
xor
mov
xor
test
jbe
pop
mov
pop
or
mov
inc
test
mov
fwait
and
cmpsb
inc
xchg
xchg
cmpsl
push
add
test
mov
lea
sbb
sub
shrl
clc
ficoms
lea
fimuls
xor
std
cli
mov
fsts
lods
xor
rclb
scas
ret
mov
cld
cs
xchg
pop
or
xor
push
mov
jecxz
push
sbb
pop
add
or
gs
mov
in
mov
xchg
lret
leave
fisttpl
add
loop
stos
xchg
or
je
pop
movsl
jne
dec
ljmp
and
xchg
xor
pushf
out
sbb
int3
mov
sub
sub
mov
sbb
mov
or
test
push
lret
and
add
test
mov
push
push
add
jns
bound
in
dec
sub
pop
xor
sbb
cmp
jl
push
jmp
mov
fiaddl
pop
aad
or
repnz
mov
cmp
rcrl
les
int
fcompl
sbb
rclb
push
xchg
addr16
mov
xor
pushf
cmp
pop
jmp
xchg
xor
cmp
mov
je
xchg
adc
lret
dec
sbb
pop
leave
add
fnstsw
sbb
fidivs
inc
movsb
and
add
sbb
xchg
cwtl
mov
sbb
sbbl
jg
frstor
mov
push
dec
push
shr
jnp
sbb
stos
mov
ficomps
ljmp
dec
fmul
jae
sarl
jno
sub
inc
enter
lret
push
push
rorb
inc
andl
cmpl
ja,pn
and
sbb
loop
call
out
fbld
adc
sbb
cmp
jp
xchg
cltd
add
add
je
fs
popf
mov
xor
dec
rclb
inc
adc
pusha
jmp
hlt
adc
shll
push
adc
data16
mov
push
inc
or
sbb
mov
push
cs
cld
popf
in
and
rolb
ftst
dec
cs
xor
movsb
mov
mov
scas
xchg
add
insb
mov
sub
sub
sub
mov
push
cmp
lret
shll
pop
inc
sub
or
sub
cmc
push
inc
lock
xor
and
sbb
outsl
xchg
cmpsb
stos
push
mov
repnz
mov
mov
add
imul
out
jg
aad
das
mov
mov
mov
and
fsincos
movsb
jbe
outsb
pop
into
lea
push
ret
dec
icebp
push
pop
dec
out
xor
jecxz
and
jnp
or
in
jbe
lds
aas
sahf
ja
pop
mov
xor
dec
push
adc
and
out
adc
mov
fucomip
dec
es
icebp
lcall
call
xchg
mov
dec
push
jns
cmp
movsl
scas
push
cmp
std
adc
js
or
cltd
adc
push
dec
shll
push
dec
dec
lea
xor
or
xorl
jmp
mov
push
repz
push
add
sub
mov
adc
xchg
insb
daa
mov
sbb
dec
sub
push
cltd
aas
xchg
or
sbb
scas
pop
mov
push
sbb
pop
jl
enter
mov
iret
sbb
mov
lret
ss
std
xchg
sub
jl
loope
mov
xor
test
lock
xor
mov
mov
roll
in
mov
hlt
mov
inc
out
xchg
out
aam
sbb
dec
shll
cmp
xchg
mov
or
insl
addl
int3
jle
test
mov
sub
arpl
adc
jmp
dec
xor
sub
sbb
jge
fsubs
push
in
dec
sbb
fidivrl
arpl
sar
push
daa
stos
add
std
mov
test
shl
push
mov
shrb
clc
inc
hlt
add
or
xchg
pop
xor
cmp
fnstenv
mov
cmpsb
xchg
add
push
scas
enter
jo
movsl
cmpsb
push
adc
ret
add
cmp
fsubrs
fnsave
clc
js
mov
jmp
or
leave
sahf
loopne
inc
and
xchg
pusha
lcall
dec
fsubs
or
mov
out
adc
add
negl
dec
sbb
es
xchg
jae
ljmp
repz
enter
and
icebp
fidivl
mov
pop
movsl
mov
fidivrs
js
fdivr
outsb
xchg
jg
movsl
enter
mov
jno
dec
lds
std
or
sbb
lea
and
push
inc
test
sub
daa
insb
ret
inc
push
or
jg
jge
loop
fcompl
xor
fwait
in
insb
mov
div
jbe
stos
jbe
cmpsl
dec
aad
shlb
in
repz
int
or
repnz
mov
test
outsl
mov
inc
and
and
pop
rolb
cmc
icebp
jo
aam
push
ljmp
pop
mov
mov
outsl
lret
pop
inc
sbb
jle
imul
ljmp
cmc
roll
xchg
xchg
mov
xchg
inc
in
jmp
pop
push
mov
jne
bound
in
jno
sub
xor
jge
fsubs
pop
xchg
xchg
enter
push
stos
pop
stc
insb
and
push
test
sbb
addr16
add
adc
jl
push
sub
mov
mov
jb
dec
sbb
or
mov
jnp
ds
push
add
fldenv
push
stos
andb
stos
sbb
dec
das
aas
or
mov
lock
std
mov
xchg
jecxz
jo
imul
mov
or
pop
sub
mov
cmpb
and
sub
std
scas
outsw
inc
fcomps
movsb
faddl
mov
or
ljmp
lret
aam
push
dec
cli
sub
inc
fs
cmp
roll
push
or
inc
shll
mov
xor
mov
je
mov
cmc
push
test
inc
pop
aaa
inc
insl
out
jmp
push
push
in
xchg
loopne
int
cmpsl
add
mov
orb
inc
push
add
cmp
adc
dec
gs
lods
jae
jns
outsl
shrb
mov
test
jns
in
xchg
jecxz
pop
repnz
mov
add
sbb
mov
cmpsl
fwait
pop
lahf
out
das
cmp
lea
ds
cmp
mov
or
push
fldl
movsl
xchg
push
cmpsb
loopne
add
adc
push
and
mov
jl
sub
gs
clc
pop
test
dec
repnz
push
pop
sub
or
fisttps
mov
or
iret
sti
ret
cmp
js
mov
pop
cld
mov
in
mov
lahf
imul
popa
jecxz
pop
cltd
mov
les
jo
push
out
cmp
aaa
sbb
arpl
xchg
call
daa
xchg
loopne
aas
cld
rorb
cs
cltd
repz
lahf
inc
mov
fildl
lock
jnp
jecxz
and
aas
popf
xchg
jle
fisttpll
xchg
jnp
divl
fmuls
xlat
sbbb
or
or
or
sub
loope
jmp
js
ja
mov
push
inc
stos
fidivs
inc
mov
pop
mov
out
imul
ss
adc
in
aaa
inc
test
mov
mov
lret
jno
pop
stos
adcl
sarb
pop
jo
and
xor
xchg
sbbl
inc
cwtl
jg
push
aas
inc
push
jmp
icebp
call
sti
xchg
roll
lahf
cmc
adc
cld
aam
inc
sbb
add
cmp
cmp
inc
xchg
mov
pop
hlt
cmp
roll
add
or
pushf
mov
mov
fistpll
and
int
das
fiadds
push
xchg
dec
push
push
out
mov
xor
fs
hlt
pushf
add
adc
inc
filds
test
sub
mov
inc
lods
mov
loop
stc
outsl
pop
pop
mov
fisttpl
cmpsl
inc
insb
sub
pop
cwtl
add
shl
sbb
add
in
loop
adc
cmp
adc
pushf
jno
add
mov
push
loope
and
in
fbld
mov
lods
fistl
imul
mov
fadds
jle
outsb
mov
mov
mov
jae
lcall
or
lcall
jg
and
pusha
mov
cmp
mov
jae
adc
cmp
and
xor
jecxz
out
push
dec
aas
add
and
cmpl
add
mov
and
je
mov
mov
push
pop
loope
dec
pop
fcmovbe
fwait
pop
push
or
push
add
or
xchg
adc
add
lds
scas
fildll
push
cmpb
and
push
mov
fstpl
sbb
inc
xchg
xchg
push
sub
mov
push
mov
push
popa
scas
inc
sbb
or
sub
ljmp
in
cmc
sub
fidivrs
push
test
push
stc
push
xlat
movsb
ss
arpl
jns
sub
aam
pop
jo
movsb
fcoms
sub
lea
xlat
es
outsl
lds
cmp
sbb
jmp
adc
inc
add
int3
in
mov
mov
ret
cld
cmp
aaa
mov
jno
pop
cltd
add
push
xchg
cmp
pop
les
ja
mov
jne
ret
stos
sub
inc
cvtpi2ps
lea
adc
js
roll
or
fiadds
jae
mov
bnd
out
or
xchg
dec
jle
add
or
sbb
sub
sbbl
sbb
sub
imul
sbb
sbb
jmp
xchg
lods
fadd
sbb
scas
xor
mov
je
leave
add
shr
cmp
inc
push
lock
or
pop
fcoms
dec
icebp
sbb
mov
fcoml
arpl
push
repnz
lods
fbstp
lods
pop
dec
cmp
jo
pop
insb
inc
addb
jl
out
mov
jo
ljmp
fisttpl
mov
pop
movsb
stc
int3
dec
dec
das
cld
sarl
mov
enter
std
pusha
lret
dec
loope
sub
test
aad
imul
mov
sub
inc
adc
mov
dec
sbb
out
pop
stos
mov
add
js
and
fs
lock
push
fisubrl
inc
dec
cltd
push
out
outsl
movsl
lahf
fstps
push
nop
out
in
neg
sarb
sti
jge
mov
call
mov
test
lock
stos
sahf
fwait
adc
push
sbb
add
aad
sub
aaa
pop
inc
lret
cwtl
push
jae
cmpsb
cmp
adc
jo
sbb
add
in
sbb
test
shlb
sbb
ficomps
jns
jl
cmp
icebp
clc
sub
sub
outsb
sub
clc
mov
push
ljmp
mov
imul
and
cmpsb
push
mov
das
xor
xchg
addb
int3
push
sbb
pop
dec
mov
push
out
scas
adc
es
jne
and
stc
dec
xchg
ljmp
cld
ljmp
mov
or
pop
bsf
cli
les
sarl
jmp
pop
lods
sahf
sahf
xchg
add
jmp
leave
lods
xchg
lock
jle
or
cmp
aad
cmpsl
lds
sub
mov
jo
sub
mov
push
test
cwtl
jno
es
imul
push
idivb
mov
clc
test
xor
pop
data16
mov
jbe
jne
std
fwait
cmp
sbb
in
xchg
lods
inc
fbld
negl
sar
mov
sub
jno
stos
repnz
repnz
inc
sbb
nop
or
sbb
adc
test
or
mov
inc
rorl
push
loop
mov
pop
ret
mov
jnp
dec
sub
ss
mov
pop
push
dec
insl
jg
xchg
pop
sub
ret
push
test
adc
xchg
mov
mov
cmp
and
inc
pusha
sti
mov
xor
or
sbb
inc
movsl
sahf
ss
xor
inc
pop
ljmp
sub
cs
mov
pushl
das
or
in
lock
pop
sbb
dec
lret
mov
dec
icebp
xor
ret
inc
add
or
shrb
shrb
and
mov
add
mov
ljmp
ret
jbe
xor
fidivrs
mov
addr16
aad
cmpsb
sahf
ja
js
xor
dec
jo
sub
mov
int
mov
push
push
rep
mov
mov
jle
fstl
lret
rcr
pop
fucomp
add
in
rcrl
loope
dec
fcmovnu
subl
mov
fadd
sysenter
cmp
cld
out
inc
fsubr
push
hlt
dec
sub
mov
out
in
test
xchg
ret
cmpsb
mov
fidivl
dec
or
movsb
push
daa
dec
fwait
xor
cltd
les
lock
sub
xor
ret
into
rcl
pop
div
repz
movsb
fdivl
fstl
addr16
das
std
outsl
jnp
jmp
mov
adc
adcl
and
pop
aam
cli
sbb
cmpsb
push
scas
dec
push
nop
daa
push
push
ljmp
mov
xchg
int
sub
in
mov
loopne
ss
mov
fidivrl
test
testb
int3
adc
mov
out
enter
fwait
add
sbb
mov
xchg
call
in
mov
stos
testl
adcl
stos
mov
rcr
xlat
mov
push
je
cli
ja
and
jne
lret
leave
mov
dec
cmp
pop
cld
ljmp
les
shl
lret
test
es
scas
scas
stc
sub
pushf
and
cmp
test
mov
adc
in
pop
jno
movsb
leave
xchg
push
in
ret
or
out
xlat
mov
sti
imul
xchg
jns
lods
mull
push
hlt
fwait
push
mov
aam
xor
inc
sub
leave
push
xlat
xchg
outsl
adc
in
jae
clc
sar
jae
mov
sbb
outsl
dec
mov
xor
or
into
jbe
mov
or
xchg
mov
repnz
or
jbe
and
adc
test
and
dec
mov
sbb
fwait
mov
stos
cli
sub
push
xor
add
imul
pop
das
dec
adc
dec
xor
outsl
cltd
xchg
and
xchg
sar
add
lret
jecxz
or
xchg
aad
scas
aas
jge
and
test
sub
ljmp
insl
mov
jns
leave
sub
mov
or
dec
sahf
pop
je
test
dec
mov
xor
lret
push
cmp
imul
hlt
push
ret
or
cwtl
add
mov
sub
add
adc
xor
out
lret
adc
popa
in
and
or
idivb
inc
int
or
mov
inc
xchg
pop
inc
push
ja
in
test
or
sub
dec
nop
ret
ds
cmc
mov
lea
test
push
out
push
das
jno
dec
out
repz
aaa
push
jge
cld
adcb
xor
adc
jmp
out
hlt
and
push
mov
jbe
inc
sub
inc
icebp
ret
jno
jl
fidivl
les
mov
cmp
fstp
or
lods
icebp
mov
inc
mov
adc
outsb
ljmp
pop
movsl
cmp
out
jmp
jp
mull
or
push
test
lods
stos
jecxz
inc
imul
jnp
or
cs
ret
xchg
shlb
inc
cmc
push
cmp
fwait
adc
imulb
roll
loop
xor
shr
xor
sbb
rorb
hlt
mov
fcoml
inc
mov
adc
lahf
mov
push
xor
shlb
scas
push
sahf
cmpsl
jnp
shl
lods
cld
mov
outsl
push
mov
jp
mov
fidivrs
xor
sbbl
iret
push
and
ja
imul
xor
data16
lods
repz
dec
lret
jl
dec
loope
inc
arpl
or
sbb
mov
dec
xor
int3
cmpl
mov
add
negb
imull
sbb
pop
test
inc
xchg
mov
dec
pop
pop
cmp
jb
inc
es
or
adc
lret
jne
xchg
inc
in
and
data16
ret
xor
lods
mov
fwait
jge
gs
sbb
out
cmc
enter
push
daa
pop
in
movsl
daa
lock
cmp
inc
rcrb
pop
mov
stc
aas
ret
xlat
push
out
aam
leave
mov
fcoms
aas
dec
pop
lea
adc
out
outsb
mov
in
frstor
pop
add
shlb
jl
and
shlb
jno
cmovae
jbe
shrl
fs
mov
xorb
js
add
js
movsl
mov
cmp
ss
decb
shlb
nop
loop
test
scas
and
icebp
or
xchg
jae
or
adc
int
daa
sarb
in
lcall
push
fidivs
xlat
ret
test
fs
aaa
jmp
inc
add
test
cmp
data16
aaa
insb
pop
pop
popf
xchg
mov
xchg
inc
pop
movsl
loop
enter
orl
cltd
jle
sbb
call
inc
leave
enter
daa
or
lret
inc
nop
push
xor
mov
sub
cmp
test
popf
jb
mov
gs
mov
add
xchg
in
add
xchg
ret
xchg
mov
test
in
cs
out
test
cmpsb
fiaddl
push
mov
loope
test
xor
adc
xchg
aad
mov
sti
fisttpll
inc
pop
gs
rclb
dec
test
jmp
sbb
lret
popf
subl
inc
inc
sbb
lds
mov
xchg
jge
ret
mov
inc
adc
mov
das
push
out
xchg
jmp
and
add
lock
cmp
jbe
jbe
shlb
xchg
cmp
insl
xchg
mov
dec
xchg
mov
sub
cmp
aad
adc
pop
lds
in
outsl
adc
data16
or
jp
mov
jge
lcall
sub
add
cmp
sbb
pop
subl
sbb
jmp
dec
popf
in
leave
hlt
data16
in
rolb
sub
orl
leave
loop
aas
xchg
lds
stc
pop
add
cs
xor
mov
inc
mov
sbb
jno
or
and
cmc
cs
faddl
jge
ja
mov
fstps
jl
push
in
inc
stos
in
ja
mov
ljmp
dec
push
out
pop
cld
mov
add
push
test
adc
movsl
loop
rcrl
rcr
dec
jbe
xchg
popf
sti
mov
movsb
xchg
nop
pop
scas
jno
ds
stc
dec
into
out
iret
add
ret
push
jl
scas
xchg
push
test
aas
xchg
mov
xchg
insb
ds
out
mov
inc
bound
sub
mov
cmp
imul
in
fs
pusha
jle
cmpsl
jno
lea
or
or
cltd
mov
js
mov
pop
push
cmpsb
incb
cmpsl
and
arpl
ljmp
lret
cwtl
cmp
cmp
lods
leave
clc
or
mov
outsl
test
and
mov
in
lds
jb
dec
mov
pop
sbb
fsubs
add
adc
push
out
scas
fmuls
aaa
clc
xor
dec
sahf
insb
mov
cmp
xchg
test
pop
mov
out
xor
mov
push
cltd
xchg
xor
dec
jecxz
adc
and
lahf
test
mov
cmp
enter
data16
xor
push
mov
mov
sub
mov
sbb
mulb
in
scas
stos
sub
push
cmp
jl
test
mov
pop
cmp
push
ret
int3
enter
xchg
mov
repnz
xchg
mov
mov
pop
fdiv
loop
cmpsl
sbb
mov
push
push
das
add
cmp
push
aad
push
out
fidivrl
ret
fisttpll
sar
popa
loope
or
cmp
data16
fsts
mov
repnz
jp
js
cmpsb
ss
pop
out
inc
xchg
fcomps
fldenv
inc
int
xchg
mov
fwait
nop
cli
movsb
inc
inc
mov
dec
in
xor
enter
dec
scas
orb
adc
loop
ljmp
mov
add
adc
pop
mov
mov
sbb
adc
sti
movsb
push
int
cli
xor
rclb
out
mov
mov
dec
xchg
xor
js
std
cli
test
ja
es
lea
mov
sub
mov
jl
mov
aas
pop
pop
and
fsubs
push
xchg
popf
sbb
push
fdivrl
pop
xchg
mov
sbb
iret
stos
or
mov
notb
lret
sub
dec
in
jae
sub
xchg
shlb
adc
scas
and
mov
mov
xchg
arpl
xchg
cwtl
cmp
leave
fidivl
loopne
xchg
outsl
pop
out
insb
insb
push
jg
sub
push
mov
mov
dec
push
sbb
xchg
mov
in
cli
push
setbe
add
fstpt
out
sbb
in
mov
ljmp
aad
cwtl
pop
jno
xchg
adc
jecxz
sub
ljmp
repz
dec
xor
dec
leave
lret
scas
adc
hlt
adc
mov
xchg
nop
fwait
inc
movd
add
clc
lds
push
lods
je
dec
lds
pop
mov
jne
loop
and
mov
push
and
xor
push
enter
ror
jbe
bound
mov
rclb
call
aas
push
iret
outsl
push
adc
push
repnz
pop
mov
mov
data16
mov
pop
lods
mov
fs
out
outsl
mov
jecxz
xchg
jne
inc
addl
mov
or
test
jae
add
inc
push
sbb
or
jo
in
sti
insl
cmpsb
cmp
imul
test
das
loopne
sbb
jns
mov
or
js
push
sti
mov
leave
ficoml
loopne
push
push
or
xor
dec
out
mov
shll
repz
mov
pushaw
cmp
push
jl
lods
repnz
mov
mov
sbb
adc
push
mov
mov
sub
push
sub
push
cmc
fisubl
repnz
inc
xchg
adc
pop
js
aam
mov
xchg
push
pop
shll
sbb
in
movsl
lcall
icebp
call
rclb
lods
mov
inc
inc
dec
lock
lock
outsl
jge
pop
loop
ljmp
hlt
dec
xchg
iret
push
aas
aad
push
cli
add
lea
stos
lds
jb
inc
mov
scas
inc
dec
mov
pop
mov
stos
icebp
loope
inc
das
lret
testb
lcall
xchg
jl
shrl
in
insb
dec
jae
sbb
jnp
xchg
int
jns
sbb
das
shrl
cmpsl
cli
in
movsl
data16
jae
or
test
scas
cmp
mov
push
pop
and
cmp
cltd
leave
dec
jle
and
dec
iret
nop
cmc
ds
icebp
mov
cmpsb
sub
loope
mov
pop
pop
xchg
jno
xchg
jns
or
stos
iret
aad
dec
stos
cmp
pop
test
cmp
das
jmp
pusha
call
rclb
sti
xchg
and
cmp
mov
sbb
decb
lahf
mov
mov
cmp
test
pop
mov
xchg
loopne
fucomi
dec
mov
repnz
or
aaa
inc
sbb
fistpll
mov
xor
or
jbe
push
mov
scas
dec
das
mov
push
rorl
xchg
dec
enter
inc
or
es
loop
js
push
xor
repnz
insl
pop
mov
jg
pusha
psubusw
loope
repnz
fcmovbe
adc
pushf
mov
and
test
icebp
insb
mov
jb
aam
pop
ret
ret
and
aad
stos
add
fstpl
xorb
mov
and
adc
cmp
je
jp
dec
adc
dec
loop
mov
ret
fdivr
and
pop
pop
leave
movsb
inc
cmpsb
scas
flds
das
cwtl
mov
mov
cmc
out
out
loopne
xor
and
add
pop
push
ds
int3
and
push
pushf
in
pop
rcrb
test
jo
lret
dec
pop
aas
mov
cs
xchg
mov
push
andb
dec
adc
xchg
mov
inc
fcomp
inc
gs
or
sbb
ret
imul
push
movb
popf
push
mov
cmpsb
xor
lock
xchg
and
arpl
fstpt
out
sub
jle
sub
add
mov
movsb
dec
test
orb
lret
push
imul
pop
sbb
ret
imul
lds
mov
cmp
add
roll
js
push
outsl
aas
lock
add
and
mov
mul
mov
or
jp
cmp
dec
repnz
cmpl
sub
sub
xchg
push
inc
adc
adc
add
push
call
sbb
pop
xor
sub
mov
adc
fcmovb
pop
loope
mov
cmp
jno
jp
sbb
push
notl
adc
data16
inc
movsb
sbb
mov
push
xorb
push
dec
imul
nop
test
cmp
movntq
out
push
sbb
push
lock
pop
aas
out
outsb
fcoms
pop
clc
fsub
adc
sbb
mov
fadds
icebp
push
fwait
mov
fwait
scas
stos
xlat
dec
xchg
ljmp
insl
add
push
cli
cltd
mov
jmp
dec
sahf
jbe
fidivs
outsb
add
loope
push
repnz
or
in
ja
lods
decl
int3
out
mov
xchg
cmpb
mov
iret
adc
push
lods
dec
inc
out
out
sbb
outsb
ja
dec
adc
sar
inc
mov
push
jo
sbb
jp
out
xor
xlat
push
into
cmp
ja
shlb
repz
mov
dec
mov
mov
out
pop
repz
cmp
ss
clc
enter
rcrb
xchg
faddl
add
cmpsl
movsb
pop
adc
adc
jne
out
cmp
and
fcos
jae
insb
or
imul
adc
push
out
mov
aad
leave
adc
xor
addl
push
push
jp
shll
xor
push
or
pusha
or
cmpsl
mov
cmp
mov
mov
cmp
inc
mov
mov
ja
fadds
int3
dec
outsb
mov
movsb
data16
inc
aaa
test
xchg
jnp
cmp
out
add
jle
sub
cltd
aas
cs
jae,pt
and
scas
jno
js
out
int3
ljmp
pop
inc
mov
push
cmpsb
and
hlt
cmpb
bound
push
sbb
mov
insb
mov
test
out
push
pop
adc
sbb
shll
test
push
inc
dec
push
shl
jnp
scas
mov
sbb
in
dec
rcr
cmc
sbb
pop
outsl
jne
jge
cmpsl
jb
cld
pop
ret
dec
jmp
sbb
adcb
cmp
add
sub
dec
and
daa
xor
or
shr
hlt
or
fidivs
add
mov
fcomps
decl
icebp
mov
or
cmp
pop
mov
push
inc
add
adc
frstor
inc
stos
push
cwtl
push
push
aam
shll
push
inc
or
fisubl
adc
inc
faddl
lcall
mov
and
push
aam
test
pop
or
addl
and
cmp
pop
push
loop
sahf
cltd
add
sub
test
test
repz
data16
je
dec
daa
bound
add
xchg
cmpsl
adc
add
jne
mov
add
sbb
mov
add
loop
rorl
ret
mov
mov
out
fcmovnu
add
out
mov
movsb
fsubr
jno
pusha
lock
mov
clc
lock
mov
and
gs
push
pop
dec
adc
sbb
mov
in
scas
scas
fdivs
inc
xchg
iret
icebp
sub
nop
jnp
lahf
push
fcoml
mov
xchg
add
mov
fldcw
mov
and
xor
fistpl
mov
js,pn
cmpsb
jmp
cmc
rcrl
divb
gs
repz
in
leave
mov
shll
push
ljmp
sub
cmp
insl
adc
add
sahf
adc
mov
fwait
icebp
lret
and
dec
cmpsb
movb
xchg
cmc
mov
mov
xor
mov
loop
adc
mov
pop
stos
insl
inc
test
jns
adc
and
faddl
fistps
pop
movsl
add
cmp
xchg
imul
sbb
add
lock
les
popa
adc
push
test
movsl
scas
movsb
sbb
out
sub
fimuls
cmp
outsl
add
xchg
hlt
out
sti
xor
out
cmp
xlat
leave
test
dec
sub
fildll
popa
mov
xchg
mov
mov
mov
cli
mul
pop
idivb
dec
xlat
cmp
ds
adc
inc
stc
cmp
xchg
stc
cmpsb
in
das
lock
cmp
lods
mov
ss
xor
loop
mov
inc
xchg
add
xchg
sbb
mov
data16
out
ja
cmpsb
jnp
fwait
push
cmp
jecxz
mov
mov
aaa
testl
cmc
popf
dec
imul
xchg
or
xor
adc
dec
adc
stos
mov
jmp
out
sbb
bound
jnp
inc
in
push
mov
out
adc
jg
cmpsb
push
nop
jno
loopne
inc
mov
jae
cmp
or
ljmp
inc
xorl
out
cs
lods
add
out
dec
ja
add
lods
in
test
roll
mov
movsb
or
ss
pop
lock
add
xor
outsl
and
xor
aas
mov
push
shrb
cld
sbb
xor
push
sti
push
fnstsw
jmp
movsb
loop
into
out
bound
pop
xchg
xchg
or
push
mov
jbe
scas
loop
lea
dec
jnp
sarb
xlat
dec
shll
or
xchg
or
gs
filds
xchg
ret
mov
cmpsl
test
or
sbb
push
jb
std
cli
ds
lods
xchg
xor
sub
das
xchg
loopne
in
mov
daa
dec
fisubrs
sysenter
push
fwait
pxor
sub
iret
mov
add
shlb
and
in
mov
stos
mov
in
movsl
push
out
xor
pusha
and
int
ja
mov
mov
add
xchg
inc
fistpl
adc
push
in
call
jnp
pop
jmp
add
jp
test
leave
and
xlat
push
dec
adc
test
xor
mov
lret
dec
int3
mov
jg
pusha
test
hlt
sbb
mov
addr16
scas
pushf
mov
punpckldq
add
and
add
arpl
sar
cmp
cmpsb
cli
sub
xor
mov
faddl
std
push
cmp
ret
je
aad
xor
ds
stos
xorb
inc
fsub
test
sub
divl
xor
cmp
cmp
mov
push
mov
fstl
out
xchg
in
stos
mov
loopne
mov
rorb
cmp
insl
xchg
adc
add
je
int
js
cmp
jae
mov
in
jmp
scas
cmpsl
imul
or
addb
icebp
fucomp
filds
scas
lea
shll
stos
fisubrl
rcrb
mov
pop
lods
cmpl
and
push
push
dec
clc
jle
inc
data16
loopne
mov
jle
clc
out
xor
sub
fiaddl
push
fst
mov
lret
int3
inc
rcrl
sbb
jae
or
out
jmp
mov
xor
adc
push
mov
dec
add
cmp
test
adc
stos
mov
fxch
jne
movsl
push
addl
fcomi
or
mov
sub
push
mov
call
shlb
pushf
cmp
icebp
cmp
ss
xorl
mov
sbb
arpl
inc
xor
pop
sub
mov
xor
pop
dec
mov
sub
dec
mov
and
aam
sbb
jo
cmp
mov
pusha
jns
cmp
test
insb
insb
movsb
jns
mov
stos
scas
mov
push
jl
mov
cmc
into
nop
pop
es
inc
mov
sub
call
cmp
xchg
or
cmpsl
enter
inc
mov
shlb
ret
les
or
jmp
push
les
jne
adc
mov
sub
inc
jle
or
data16
xor
shrb
scas
test
jnp
xor
sub
dec
pop
add
cmp
addr16
xlat
add
ret
ret
call
inc
test
lret
dec
adc
mov
in
sbb
sbb
lds
mov
mov
jb
jle
test
or
mov
xchg
push
fwait
cltd
jg
loope
outsb
sub
xor
jle
loope
shrb
mov
xchg
loop
adc
or
pop
or
xchg
push
std
add
mov
iret
push
pop
jbe
outsb
add
in
push
mov
sbb
loope
mov
mov
add
iret
xchg
mov
xor
sbb
lods
pop
pop
sbb
bound
aas
out
cld
stos
call
push
int
ljmp
pop
aaa
xor
loope
inc
mov
sahf
das
ljmp
ja
jne
cwtl
int3
loopne
shll
fstpl
inc
pop
lods
lea
ss
adc
pushf
jmp
xor
aad
hlt
inc
adc
arpl
cmpsl
push
jnp
ss
out
mov
and
pop
and
mov
or
push
push
fnstenv
or
cwtl
test
nop
jne
pop
imul
mov
ficomps
adc
cmp
jecxz
test
mov
jne
or
jl
add
movsb
stos
jo
pop
xorl
sub
add
mov
lea
es
inc
imul
inc
daa
dec
aam
sub
lea
dec
inc
in
xchg
jne
push
mov
imul
inc
xchg
sub
stos
stos
loop
mov
xchg
pusha
inc
ds
scas
xchg
das
and
ja
jnp
leave
dec
inc
cmp
mov
popl
inc
popa
xchg
mov
int
sahf
mov
adc
sbb
sbb
jo
cwtl
negl
jb
lahf
sub
or
jns
daa
repnz
loopne
loop
jne
or
cmpsl
jae,pn
aam
fldl
ffree
addr16
sub
rcrl
dec
mov
mov
dec
imul
or
in
stos
xacquire
enter
test
dec
cltd
pop
mov
faddp
cld
data16
mov
adc
scas
fwait
jp
and
sub
xor
mov
rcrl
xchg
iret
and
dec
xchg
sub
in
andl
arpl
pop
cmp
rolb
inc
push
pop
push
imul
cmp
std
cmp
mov
sub
jmp
sub
outsb
sbb
movb
inc
inc
jb
pop
xor
sub
mov
or
or
sbb
dec
int
stos
jle
or
insb
nop
adc
cmp
dec
sub
fnsave
insl
sub
fsubrl
lods
push
call
hlt
push
jo
lahf
sbb
jle
in
jmp
cmc
xchg
shrl
jae
sbb
cmpsb
addb
aas
test
cmp
fwait
stos
lcall
dec
inc
scas
xor
push
dec
movsb
lret
and
filds
pop
cmp
mov
cs
adc
icebp
jbe
xor
mov
rolb
pop
ret
lods
icebp
jl
push
sahf
and
pop
daa
mov
mov
pop
scas
mov
push
or
sbbb
mov
mov
xchg
dec
movsl
scas
test
popf
jns
fcmovbe
cmp
int3
add
jb
xchg
dec
int3
imul
fistps
lcall
in
cltd
cltd
push
in
inc
imul
insl
mov
add
cmp
lods
lcall
adc
pop
stos
xchg
xor
jle
call
mov
adc
dec
ja
push
cmpsb
cmp
adcl
outsl
xchg
outsb
repz
daa
repz
pop
cmp
xchg
insb
sub
fwait
or
sub
cmpb
mov
push
bnd
sahf
and
jo
mov
xor
lea
andb
aad
xchg
cld
std
inc
mov
out
ljmp
adc
fcomp
fisttpl
lahf
or
pop
jmp
loop
mov
negb
andb
inc
and
in
lahf
xabort
sub
or
lcall
push
pop
fdivrs
pop
jp
push
clc
add
add
and
scas
pop
sub
adc
pop
xchg
mov
ret
sub
ds
pop
addr16
add
dec
fbstp
pushf
ds
mov
out
push
jecxz
push
and
xchg
hlt
cmp
xchg
clc
ljmp
jge
inc
divl
out
xchg
pop
jg
bound
mov
sbb
pop
popf
dec
lea
fwait
inc
popf
and
iret
mov
inc
sub
push
push
jno
cmp
push
insl
lret
xor
shll
shrl
mov
lret
test
lret
jp
or
add
into
sub
data16
adc
mov
adc
push
scas
int
mov
pop
cmp
push
sub
daa
xlat
mov
int3
mov
mov
js
loop
inc
lds
push
movsl
popf
out
and
mov
aas
xchg
les
adc
jae
xor
pop
out
cld
xlat
mul
sbb
inc
and
and
sub
das
fsubl
pop
and
jnp
xchg
js
fwait
xchg
push
mov
add
popf
out
sbb
and
jbe
movsb
rcl
movsb
imul
sahf
mov
or
jg
xchg
xchg
jg
popa
je
sbb
xorl
lcall
gs
aas
mov
fdecstp
push
shll
jbe
or
or
pop
mov
and
pushf
cmp
pop
aas
inc
xchg
add
sbb
ljmp
add
pop
xor
adc
and
js
clc
jl
cltd
jbe
mov
or
outsl
int3
test
cmpsl
xlat
mov
add
into
inc
xor
popf
or
cltd
enter
pop
jbe
xor
push
das
scas
loopne
jp
das
aam
jae
pop
mov
pop
and
sbb
hlt
movsl
mov
enter
cmp
jg
cmc
call
jbe
movsl
push
test
xchg
cmpsb
mov
jle
stos
popf
cld
pop
sub
repz
push
fucomi
jne
fisttpl
test
and
mov
xchg
repnz
and
jns
insl
xchg
imul
and
dec
pusha
adc
pop
or
loop
loopne
adc
xchg
ja
inc
std
and
dec
cmc
xchg
mov
out
lods
jne
aam
dec
in
sub
mov
loope
jecxz
xchg
inc
jns
push
add
js
dec
int
outsb
xor
sbb
push
lret
lea
ret
imul
insl
xor
roll
hlt
mov
sub
je
test
enter
je
lods
pushf
jle
adc
dec
movsb
ret
imul
lahf
pop
fidivs
andb
push
mov
rolb
dec
pop
mov
pop
sbb
sbb
dec
pop
sub
add
repz
test
data16
and
cmp
and
mov
sub
jg
xchg
pop
mov
pop
add
ljmp
pop
cmp
imul
scas
andps
icebp
jg
roll
sbb
xor
stos
mov
dec
mov
push
pop
push
lret
xchg
testb
scas
fdivrs
mov
add
jg
arpl
call
out
outsl
sbb
or
and
mov
out
xor
mov
dec
mov
shll
faddl
out
shrb
cmp
pop
popa
outsl
aad
pop
xor
jbe
imul
push
jbe
mov
pop
jg
out
mov
adc
xor
inc
xor
and
push
xchg
pop
sub
mov
push
int3
fisttps
or
or
cmpsb
int
mov
divl
mov
mov
push
sub
scas
adc
pop
sub
loop
jae
in
cmp
lret
loop
push
adc
in
sbb
xor
inc
cmpsb
pushf
clc
inc
sbb
push
scas
mov
leave
sub
stc
popf
mov
push
xchg
mov
inc
movsl
pop
jae
out
lcall
pop
mov
mov
loope
cwtl
test
xor
inc
pop
mov
repnz
inc
aam
pop
sbb
test
xchg
sbb
sbb
cmp
add
notl
jbe
mov
pop
mov
adcb
insl
xchg
sbb
sbb
xchg
test
out
mov
loopne,pn
movsb
lds
jbe
jecxz
and
dec
sbb
push
aas
push
hlt
xchg
inc
ss
ror
sub
pop
adc
sahf
dec
mov
mov
inc
jl
aaa
leave
lods
mov
xchg
leave
cmc
inc
push
fiaddl
adc
pop
scas
mov
sub
push
xchg
dec
jp
sbb
adc
popf
js
dec
fildl
mov
and
int
inc
inc
repz
das
pop
pusha
gs
mov
pop
clc
ljmp
sbb
jg
popa
jl
or
pop
iret
jb
lret
jle
ds
insb
xchg
or
lods
data16
outsl
mov
lds
shrb
sbb
cmp
dec
add
inc
lahf
in
jge
aam
cwtl
mov
mov
adc
test
cmp
mov
or
sub
stos
sub
jbe
xor
push
mov
add
adc
or
lods
sbb
push
cmp
rolb
lea
imul
cld
enter
in
cmc
sbb
lea
xorb
lds
cmp
repnz
clc
stc
mov
inc
dec
arpl
stc
xchg
xchg
sub
lea
int
adc
popa
sub
andb
xor
xchg
sbb
cwtl
jne
pusha
mov
jno
mov
lret
insb
and
aad
lahf
sub
addl
push
in
lods
xchg
jecxz
adc
in
jne
xchg
int
add
stc
xor
cwtl
jecxz
int3
sahf
adc
hlt
inc
add
mov
push
mov
inc
mov
push
movsb
out
popa
inc
mov
and
aas
sti
or
push
out
push
loop
aas
nop
pop
out
pop
push
fs
scas
test
fistl
mov
cld
leave
movsb
mov
hlt
test
mov
adc
sub
jb,pn
xor
jae
pop
aaa
mov
aaa
sbb
cld
mov
stos
ljmp
ret
jge
bound
stc
fcmovbe
fs
out
scas
into
ret
fstpt
push
mov
fs
fisubs
pop
leave
adc
shll
xchg
iret
adc
popa
and
shl
scas
mov
mov
jle
shr
out
loope
xchg
xchg
sbb
out
ss
movsb
dec
cld
cmp
imul
xchg
mov
fwait
in
jbe
int3
mov
adc
mov
adc
dec
addr16
mov
repz
incl
push
scas
ret
adc
sbb
push
dec
cmp
and
jne
jo
mov
call
inc
pop
mov
popa
lahf
sbb
js
test
xor
mov
in
rorl
popa
je
and
scas
loop
mov
js
sbbl
fdivrs
cwtl
out
gs
sub
loope
push
lock
stos
shll
aad
pop
in
fs
xchg
fcmovnbe
outsl
movsl
inc
lcall
out
pop
int3
icebp
pop
sti
aaa
mov
mov
add
test
jmp
sti
divb
int3
cmp
or
lea
pop
sub
jp
pop
push
stos
lret
or
sbb
mov
cmpsl
mov
mov
mov
xchg
in
shlb
int3
sahf
addr16
rorl
in
out
jmp
or
mov
and
jbe
push
adc
xlat
xor
push
mov
xor
rcr
cmc
imul
mov
rcrl
cmp
jns
push
and
push
int
nop
inc
daa
cli
addl
ja
jecxz
dec
jns,pt
or
scas
jle
xchg
jl
sub
mov
fbstp
lahf
pushf
pop
sub
lods
xlat
dec
int3
xor
ret
adc
mov
leave
jne
subb
insb
movb
or
mov
and
push
int
push
inc
mov
stos
xchg
push
jb
push
xor
incl
jno
test
dec
dec
push
in
mov
add
aas
push
adc
and
shr
push
pop
and
in
movsb
mov
ljmp
bound
push
dec
pop
and
sbb
test
es
loope
notb
jmp
test
add
or
lea
cld
jmp
push
jns
movsl
adcl
insb
hlt
jge
adc
loopne
jno
sub
dec
insl
test
addr16
fisubrs
sbb
and
lods
jl
popa
jbe
push
mov
add
sub
fistpl
ret
imul
loope
ret
rcr
insb
inc
lock
xor
sbb
cltd
sbb
mov
loop
pop
sbb
push
mov
popa
pop
sbb
inc
or
and
jge
sbb
gs
cmp
fsubl
fucomp
pushf
mov
rorl
scas
xor
rclb
mov
push
ds
daa
mov
test
push
outsl
sbb
pop
add
pop
xchg
xor
cmp
pop
clc
sub
loopne
subb
mov
das
mov
dec
dec
sbb
nop
inc
fisubl
inc
sub
and
lret
mov
dec
mov
pop
sub
outsb
mov
adc
xor
into
ret
cs
push
adc
and
inc
fs
nop
movsb
and
sbb
aad
cmp
xor
int3
aam
stos
xor
out
sbb
pop
jno
mov
sub
stc
mov
fwait
cmp
clc
push
pushf
mov
adc
sbb
pop
fsubl
adc
and
xor
ror
inc
cli
ja
incl
pushf
jecxz
pop
push
lock
push
cmp
dec
cmp
addr16
mov
loop
dec
mov
adc
or
pushf
jg
fisttpl
fstpt
inc
lcall
repz
cmp
cmpsb
mov
vmwrite
dec
incl
push
loop
mov
cld
fistpl
popf
add
test
inc
push
ljmp
mov
inc
in
dec
test
movsb
or
lods
mov
sbb
add
sub
mov
pop
cmpsb
ret
out
mov
pop
mov
cmovl
movsb
or
xchg
xchg
inc
into
imul
mov
push
sub
pushf
stos
movsb
mov
mov
xor
shlb
inc
enter
clc
add
xor
push
mov
sub
out
push
sub
inc
xchg
push
add
mov
sub
sub
xchg
pop
rolb
sbb
loope
jp
push
sbb
push
add
jb
dec
sbb
and
xor
into
in
mov
sub
ret
test
daa
nop
mov
mov
pop
mov
cmpsl
sbb
rcr
inc
xor
lcall
test
mov
lret
out
jnp
pop
movsl
dec
sub
push
sbb
lcall
cld
out
mov
in
inc
xor
dec
ljmp
add
push
aaa
push
orl
shlb
xlat
mov
xchg
cmp
push
xor
clc
and
inc
enter
cmp
push
lock
sub
insl
sbb
push
push
test
adc
jne
daa
hlt
or
pop
inc
cmc
adc
cmp
or
sarb
ret
sahf
rcrl
jbe
pop
and
adc
mov
pop
or
jp
cmp
fcmovnb
dec
jnp
cmp
push
inc
popf
xchg
push
ja
sahf
or
aam
pop
adc
dec
mov
add
xor
and
jg
mov
mov
sub
orl
dec
mov
out
ret
mov
sarl
daa
aam
rcr
ja
xchg
aaa
jl
push
jl
sub
and
push
sahf
popf
xchg
mov
cmp
sar
cwtl
adc
fsubp
xchg
pop
fstpt
in
xchg
mov
or
sbb
test
ja
jo
dec
pusha
mov
loopne
inc
mov
sub
outsb
test
and
xor
mov
sub
push
mov
movsl
adc
cld
mov
inc
inc
dec
ds
push
cmpsl
pop
jns
xchg
stos
and
jmp
inc
jl
mov
add
sti
xlat
xor
pop
cmp
xchg
lea
jg
mov
iret
repz
divb
xchg
dec
pop
ret
movsl
out
adc
mov
cmc
and
xchg
nop
cmovae
cmp
mov
sti
push
scas
flds
mov
pop
cmp
inc
xchg
sub
mov
mov
cld
jnp
imul
mov
nop
test
insb
add
aad
sbb
sbb
shll
adc
push
push
outsb
cmp
inc
test
mov
sub
xchg
cs
or
adc
cmp
pop
cmp
pop
inc
push
cs
jo
loopne
mov
mov
stc
jp
add
shrb
push
mov
xor
push
xor
daa
aas
push
call
sub
shll
shrl
push
jmp
pushf
sub
jecxz
ret
lcall
dec
push
jbe
out
aam
lods
sti
ljmp
jnp
inc
mov
xchg
ret
std
jecxz
test
roll
gs
or
repz
and
push
push
sti
sarl
add
sub
sahf
xchg
fs
add
cwtl
sub
rolb
adc
or
push
push
sub
or
notl
mov
pop
inc
into
and
clc
jp
mov
repnz
out
popa
movsl
loop
cld
std
mov
push
and
pcmpgtd
lock
sub
movsl
dec
jno
mov
xchg
aam
pmaddwd
orl
nop
lea
pop
push
push
aam
lret
jle
mov
or
xchg
or
lcall
xor
xor
pop
popf
les
jne
outsl
mov
cli
inc
cmp
add
scas
add
push
ret
cmp
lock
inc
imul
push
cmpb
xorl
jmp
push
aaa
lret
or
les
enter
sarb
add
sti
loop
call
sbb
ljmp
movsl
lea
nop
inc
adc
sub
jbe
mov
aad
sub
fiaddl
lret
sbb
jmp
std
ret
jno
jle
fs
stos
imul
mov
fs
leave
out
mov
sub
sbb
iret
push
cs
iret
int3
ljmp
mov
mov
and
pop
mov
mov
inc
mov
xor
mov
fucompp
insl
jns
mov
or
cli
push
dec
dec
push
mov
jge
jge
pusha
pusha
vmptrst
push
in
pop
rcl
out
add
fucomip
jbe
jbe
push
cmp
pusha
cmpsl
mov
add
mov
inc
and
add
sub
inc
insb
mov
push
adc
inc
les
sbb
sbb
xchg
push
cmp
cmp
imul
ror
sahf
in
cmpsl
lret
cmp
out
int3
jmp
jns
mov
leave
jo
lret
add
scas
movl
pop
xlat
pop
xor
and
pop
movsb
xor
pushf
bound
out
lods
jne
call
clc
fwait
je
cmp
dec
pop
scas
mov
nop
gs
adc
xor
pop
rorb
sbb
in
outsb
or
shll
pop
dec
ret
jns
cmpl
shlb
out
insb
jge
dec
gs
dec
mov
xchg
gs
sarl
mov
and
arpl
enter
aas
and
and
xchg
cmp
fnstcw
test
ljmp
leave
add
in
adc
push
mov
test
cmp
ljmp
mov
fisubs
lcall
push
add
xchg
jno
push
int
les
sbb
xchg
fstl
sbb
push
sbb
and
adc
mov
mull
jbe
xchg
pop
cmp
div
ds
jle
mov
in
push
mov
sub
nop
lea
movsb
xor
insb
lret
inc
pop
movb
pop
push
sub
aas
iret
add
out
negb
add
mov
aad
dec
out
mov
add
inc
push
les
cs
pop
rolb
push
lret
add
icebp
jbe
loopne
jmp
ds
jmp
pop
imul
iret
into
into
fs
std
js
pop
mov
idiv
sbb
add
jbe
mov
pop
ja
hlt
fstps
push
and
mov
pop
stos
int
fmuls
mov
jno
ss
pop
ljmp
test
icebp
mov
mov
popf
xchg
jo
and
call
repnz
and
insl
and
or
dec
or
pushw
jg
mov
inc
fstp
xchg
xchg
mov
mov
add
imul
jl
mov
fldl
cli
adc
xchg
sbb
into
push
into
lret
lock
hlt
dec
jp
jecxz
in
push
push
cld
jmp
repz
xor
pop
decb
cwtl
mov
out
xor
add
jnp
cmp
add
mov
dec
popa
sbbb
xor
cmp
jno
jne
mov
out
out
jns
lock
shlb
jno
cli
sbb
dec
lods
mov
mov
jge
jo
push
xchg
and
sbb
adc
movsl
and
add
bound
cmpsl
jns
mov
lret
xlat
out
in
inc
sbb
jae
out
xor
fbstp
add
mov
lahf
jg
jle
pop
into
add
add
es
push
xchg
mov
pop
add
xchg
push
inc
push
push
pop
or
shll
rclb
dec
lods
pushf
idiv
cmp
mov
mov
sahf
pusha
dec
fcoml
inc
xor
sahf
sub
mov
shr
faddl
push
or
inc
jecxz
xor
mov
mov
and
inc
pusha
nop
cwtl
out
pop
inc
ds
testl
sbb
stc
xlat
push
jb
jmp
das
in
lods
lds
cmpsl
ds
mov
out
shll
cmpsl
shlb
adc
mov
popa
pusha
int
fs
or
negb
sub
jg
cli
push
bndstx
push
mov
push
jmp
jb
arpl
cli
add
cmova
pop
ret
fistps
xor
inc
mov
not
out
jne
es
cli
mov
inc
test
push
lahf
cld
cwtl
hlt
sbb
scas
cmpsl
ftst
add
mov
fimull
mov
cmp
or
fidivs
cli
sub
loope
ret
mov
push
lods
pop
inc
cmp
mov
pop
mov
xor
or
pushf
push
test
out
fisttpll
mov
push
enter
das
add
out
jg
aad
jle
rorb
adc
dec
test
dec
les
imul
xor
adc
je
xchg
lret
or
mov
cmp
sub
adc
dec
cmpsl
das
fwait
sti
fs
out
xor
sbb
cmpsb
loop
or
repnz
and
add
pop
push
mov
mov
xor
xlat
imul
ljmp
fisubrs
mov
lods
adc
push
pop
adc
xchg
cmp
scas
jnp
cmp
lods
dec
sbb
call
mov
loopne
lods
les
inc
test
cmc
mov
jge
clc
jae
jbe
add
mov
rcl
std
int
faddl
pusha
mov
push
in
fisubl
lods
pop
mov
push
jns
cmp
pushf
sahf
movsl
lods
pop
es
mov
adc
or
sub
mov
pop
lahf
in
loope
dec
mov
jne
mov
int3
cmp
test
divb
cli
mov
and
jmp
adc
push
addl
push
mov
sbb
cmp
popf
jle
push
push
sahf
arpl
mov
or
cmc
inc
adc
or
loop
add
mov
jae
dec
leave
lret
negl
mov
popf
pop
pop
jb
jecxz
iret
ds
mov
jg
adc
or
sarb
sbb
pop
and
xchg
cmp
xchg
scas
sbb
jae
aam
jle
push
aad
aad
dec
jl
inc
cmp
xchg
sbb
and
cmp
inc
xor
push
xchg
sub
pop
adc
in
pop
cltd
shlb
inc
sub
ret
daa
mov
mov
xchg
lahf
add
lods
cmp
push
lea
mov
insl
movsl
sub
mov
and
movsl
sbb
scas
sub
mov
mov
icebp
inc
dec
sar
mov
pop
scas
je
jp
xchg
ret
jl
add
jmp
inc
mov
pop
mov
mov
outsb
mov
aam
xchg
lret
int3
mov
mov
jle
mov
add
jmp
aam
shlb
cltd
mov
push
fildll
pop
and
movsb
jbe
icebp
jae
pop
sub
mov
push
or
orl
incl
test
pop
jecxz
std
or
pop
and
lock
loop
inc
mov
add
sbb
lods
inc
cmp
add
dec
sub
dec
aad
aas
fldl
mov
dec
sub
std
js
inc
add
fistl
mov
insb
scas
mov
pop
fs
pop
orl
lret
cmp
imul
xor
pop
or
rcll
rcr
jmp
loope
fstl
mov
loop
stos
adc
push
lds
push
or
cmpl
iret
or
and
mov
fstps
sbb
fsubl
test
adc
lea
rolb
pushf
out
xor
pop
clc
icebp
dec
movsb
lcall
mov
push
push
adc
enter
and
sbb
jmp
xchg
sub
xor
test
idivb
sbb
inc
push
jnp
and
cmp
push
les
mov
pop
xor
mov
adc
cld
mov
jg
outsl
loope
popf
and
mov
arpl
das
jb
std
pop
cmp
ss
pop
mov
pop
add
dec
and
add
fsubl
mov
xchg
test
dec
mov
push
xchg
in
outsl
cmp
sub
mov
adc
ret
test
repnz
icebp
jb
sbb
roll
loope
or
gs
mov
icebp
cmpsl
hlt
aaa
lret
lahf
dec
dec
sub
or
xor
jne
sbb
gs
sub
fcmovnb
push
pop
pop
dec
jecxz
xchg
jb
cmpsb
xchg
pop
test
fnstsw
idivb
inc
mov
inc
xor
adc
xchg
rorb
dec
insb
jbe
xchg
jno
int
inc
and
pop
jns
fcmove
iret
repnz
cmp
in
repz
inc
cld
cmc
mov
jo
xchg
xor
mov
pop
mov
adc
or
movsl
orl
inc
and
pop
mov
ljmp
sti
rcr
inc
and
jns
mov
mov
shll
mov
sub
pop
dec
lods
lret
test
popa
pop
test
mov
loope
in
sub
mov
xor
inc
sbbl
sub
addr16
pushf
jmp
aas
inc
adc
shufps
xlat
adc
bound
sub
sahf
pusha
xor
pop
out
or
cmp
jge
sarb
adc
mov
lret
push
jbe
push
mull
lds
jae
jl
gs
shll
push
mov
jb
cmp
cmpsl
sahf
sub
jno
scas
pushf
or
add
mov
enter
adc
xchg
inc
and
mov
adc
mov
popa
push
ret
lds
sahf
mov
xchg
dec
mov
iret
xchg
mov
stos
push
fildl
cli
jo
inc
add
xchg
and
stc
mov
in
mov
inc
adc
xchg
stc
inc
xor
sbb
mov
push
cmp
ss
movsb
out
sub
outsb
out
dec
stc
inc
lods
cmp
add
test
sbb
pop
push
jno
push
aas
mov
lea
aad
xchg
mov
or
les
dec
stos
xchg
xor
sub
inc
xchg
loopne
hlt
sub
aam
add
lods
pop
fxch
mov
shr
fistl
leave
jmp
jmp
xchg
and
aam
mov
rcr
test
out
cmpsb
and
aas
pop
fldl
mov
jl
dec
or
insl
push
fmulp
sbb
xchg
xchg
sbb
jno
scas
fsubrs
push
jno
xchg
iret
je
test
in
ljmp
xchg
orl
sub
addr16
rol
fwait
mov
ss
and
outsb
call
pusha
push
icebp
jae
subb
xor
inc
cmp
fdivr
jne
or
xchg
add
pop
mov
mov
fldt
mov
push
out
xor
fs
aad
jecxz
outsb
sub
sbb
xor
adc
and
xchg
loop
dec
dec
jl
pop
xor
xchg
mov
out
and
cmp
lcall
lods
pop
xchg
jns
into
rcrl
add
jmp
sbb
push
fmuls
jbe
aas
jmp
mov
pop
mov
jmp
out
mov
or
adc
jle
fs
push
inc
push
das
dec
jg
pop
ret
rol
cld
notl
sbb
fndisi(8087
rcrb
pop
xchg
add
stos
or
pop
popa
jne
leave
leave
je,pt
xchg
sbbl
ret
mov
call
sbb
dec
or
push
push
sub
jp
test
fdivrs
xchg
insl
ret
clc
inc
and
add
fdivs
iret
mulb
stos
or
adc
lock
stc
pop
insb
movsb
cmp
lret
dec
xchg
and
in
hlt
jae
rolb
test
inc
xor
sub
or
push
xor
imull
orl
rcl
push
out
xor
int3
mov
out
pop
push
push
xchg
iret
popf
ljmp
out
sbb
push
pop
int
insl
xor
in
in
sub
xchg
mov
aad
fldcw
or
test
jns
jg
xchg
or
pop
xchg
jbe
inc
icebp
mov
loopne
scas
bsr
fwait
mov
fcoml
mov
cld
lds
push
je
mov
sar
rclb
gs
das
out
xchg
popa
das
adcl
cmp
pop
add
dec
pushf
jnp
bound
and
in
fwait
sbb
jge
ljmp
or
cmp
stos
adc
popa
fadds
push
pop
stos
xchg
xchg
xor
and
sub
mov
lret
add
pop
adc
loopne
test
lods
je
cmc
pushf
cltd
sbb
xchg
pop
adc
lcall
insb
jge
push
cld
jns
aam
or
xchg
mov
dec
sbbb
xor
stc
and
test
div
sbb
lds
sbb
int
adc
dec
jmp
jmp
jae
mov
jne
js
sbb
gs
test
xor
xchg
inc
jno
mov
jg
sbb
les
lds
mov
test
and
sbb
cmp
into
xchg
cwtl
in
mov
mov
push
xor
mov
sbb
es
add
mov
push
sti
pop
xlat
fistl
ljmp
dec
sub
pop
loopne
add
mov
mov
cld
shrb
push
iret
pop
sahf
jno
push
sbb
xor
aad
jg
in
mov
test
sub
pop
jno
add
mov
rclb
mov
out
cltd
xchg
pop
sbb
pop
mov
enter
shrb
push
pop
jb
into
xor
clc
adcb
shlb
sbb
jg
imul
lods
rcrb
aam
outsb
jp
repz
inc
xchg
or
out
jbe
mov
sahf
outsb
ljmp
fnsave
bound
int
pop
pop
subl
scas
adc
arpl
dec
aad
push
loopne
bound
shrb
push
dec
sub
push
cli
insb
inc
repnz
cmp
fstps
xchg
mov
aaa
outsl
sbbb
add
test
jo
vzeroupper
cli
addr16
mov
jmp
shll
lcall
ja
lds
test
dec
out
repnz
add
lcallw
and
and
test
dec
pusha
cmp
rorl
adc
adc
addb
cmp
and
and
cltd
push
loope
andl
push
wbinvd
xor
mov
in
jmp
clc
lret
fdivs
sbb
or
divb
pop
mov
fnstsw
push
divb
push
dec
test
call
xlat
lods
push
mov
mov
mov
out
mov
dec
xor
jo
pushf
cld
mov
mov
pusha
dec
out
cmp
sbb
pop
push
lds
mov
adc
jge
sbb
cmpsl
fisttps
data16
aam
sub
mov
xor
inc
xchg
js
aad
fnstenv
in
adc
movsb
outsl
push
dec
or
jno
mov
mov
imul
pop
pusha
int3
mov
adc
es
into
cmc
sbb
cmpsb
pop
sbb
mov
cmc
shl
xchg
adc
iret
cltd
pop
jge
outsl
ljmpw
insb
out
lcall
push
out
dec
xchg
aas
cmp
push
pop
aad
xchg
cmp
jg
jnp
jp
cmp
push
xor
gs
fstps
xchg
dec
lock
dec
dec
or
sub
adc
add
cmc
cmp
cld
or
rorl
test
jl
adc
ret
clc
jg
push
outsb
cmpsl
mov
xchg
cwtl
lret
into
jmp
fs
pop
dec
and
lcall
shlb
dec
stc
adc
fmull
push
aaa
icebp
push
pop
filds
jle
and
fdivrl
js
jecxz
cmc
dec
pop
aam
xchg
nop
fiadds
or
cmc
inc
pop
mov
les
mov
or
and
in
mov
dec
xchg
add
mov
outsl
enter
in
push
insl
inc
fcoms
xchg
sub
scas
sub
sub
stos
lods
out
fwait
xchg
test
add
mov
lret
sbb
lock
or
jle
out
stos
movsb
enter
xor
pop
mov
and
add
cmp
adc
sarl
mov
sbb
sub
arpl
ja
add
sub
iret
push
daa
addr16
cmc
mov
mov
jl
mov
mov
out
sbb
mov
imul
cmp
cld
dec
popf
or
sahf
lock
mov
sahf
inc
push
subl
movsl
sub
inc
jl
jecxz
inc
mov
idivb
push
lahf
sub
dec
lcall
push
push
mov
jo
adc
jno
lahf
and
jne
jp
push
adc
out
sbb
inc
push
inc
adc
xor
cmpsb
xor
cmpsl
sbb
xor
subb
pushf
xor
sbb
jle
xchg
cld
mov
insb
andb
sub
and
jb
outsl
out
ss
scas
cmpsl
test
pop
xor
aad
fwait
push
push
adc
jge
pop
or
adc
and
sahf
lock
sbb
dec
and
shl
jle
mov
pop
out
and
xor
lret
cli
dec
mov
xchg
andb
adc
loope
xchg
test
jecxz
fs
stos
aas
cmp
idiv
stc
mov
int3
pop
sbb
in
dec
sbb
repz
loopne
das
xchg
jle
imul
add
pop
sbb
sbb
in
inc
jp
int3
leave
jno
iret
cmp
loopne
cmp
out
sub
sbb
jmp
mov
mov
loope
pop
sbb
fwait
scas
inc
lock
push
pop
dec
dec
jns
pop
aaa
loop
or
jl
sub
sub
pop
pop
or
std
dec
mov
scas
movsl
in
mov
mov
repnz
jae
ja
xor
cmp
out
or
mov
mov
std
inc
adcb
push
adc
mov
movsb
mulb
es
jmp
cmpsb
mov
imul
add
push
jne,pt
add
int3
bound
mov
pop
mov
mov
mov
sbb
push
mov
sar
cmp
xchg
cmp
cmp
loopne
jb
adc
pop
stc
dec
lods
mov
sbb
das
add
mov
dec
add
popa
aas
pop
in
cld
into
dec
push
push
fs
add
sti
and
mov
cli
sarl
add
push
mov
and
ret
std
xor
out
push
nop
xchg
pop
jmp
xor
pop
enter
aaa
mov
ficomps
mov
pop
sbb
push
sub
pop
jecxz
ljmp
mov
adcl
imul
rolb
push
loopne
das
insl
out
test
add
or
imul
cld
adc
mov
inc
dec
adcl
mov
add
push
jg
xchg
and
pop
pop
fs
sbb
ds
call
sub
rolb
iret
cld
adc
push
ds
xlat
outsb
dec
jb,pt
stos
loope
mov
in
sub
out
test
xchg
aad
mov
fldcw
in
enter
mov
push
mov
xchg
jg
inc
adc
or
dec
sub
and
jle
mov
inc
inc
jb
stos
inc
negb
in
imul
ror
pop
cmp
js
mov
or
fstl
fsubrl
mov
fwait
mov
inc
mul
hlt
in
pop
pop
adc
pushf
jno
out
loop
sbb
shlb
ss
test
ljmp
lahf
loopne
push
xor
test
fbld
clc
pop
push
jge
pusha
js
sub
popf
jnp
int3
jl
cs
and
mov
xchg
test
adc
jne
stos
pop
shrl
and
pusha
dec
in
popf
lds
inc
xchg
xor
mov
test
insb
int3
push
cmp
ljmp
mov
push
gs
in
sbb
and
dec
frstor
jmp
cmp
or
popf
dec
shll
dec
mov
cli
pop
testb
push
add
fsubr
sub
mov
inc
xor
and
orl
adc
bnd
dec
dec
adc
dec
jle
mov
inc
leave
xor
mov
inc
sub
dec
dec
pop
cwtl
xlat
sub
je
or
out
inc
adc
add
inc
jno
repz
adc
xchg
leave
dec
xchg
ror
add
jecxz
push
in
cmp
sub
out
xchg
push
arpl
add
int
mov
das
cmp
scas
in
test
dec
push
jp
in
in
cmp
xor
lcall
into
mov
and
jmp
pop
dec
adc
xorb
adc
pop
and
pop
int3
inc
adc
fimuls
scas
xor
push
sbb
inc
loope
xchg
data16
add
jne
fcomip
fstl
inc
sbb
xor
mov
adc
adc
lods
ljmp
sbb
movsl
cmpb
loope
inc
push
push
xor
sub
add
cld
mov
mov
inc
fadds
xchg
pop
and
add
stos
test
sbb
mov
sbb
inc
decb
jp
xchg
cli
icebp
cs
xchg
fimull
add
ds
ja
mov
or
sbb
sbb
lret
jg
add
rcrl
popf
sub
fsubp
cmp
cwtl
xor
adc
out
mov
xchg
xlat
xor
jmp
adc
inc
push
aad
cs
cmc
rolb
jns
or
push
loope
adc
sbb
pop
arpl
jb
psrlw
fstps
inc
ret
push
shl
push
adc
jns
fdivrs
and
xchg
aad
cmpsl
sbb
stos
rcrb
sub
js
cli
bound
mov
jle
sahf
push
imul
xchg
jns
jecxz
cmp
cmpsl
or
sub
leave
push
mov
aaa
mov
add
jg
rcr
loopne
add
mov
mov
push
shll
sbb
jp
cmp
add
mov
cmp
adc
dec
stc
test
jg
repnz
insl
pop
sbb
jmp
in
cli
stos
jmp
push
mov
mov
lock
mov
adc
lret
loopne
test
rcrl
lahf
or
pop
sbb
aam
mov
fstpl
or
jg
jo
idivl
xchg
jb
jmp
bound
adc
in
pop
aas
adc
test
xchg
mov
xor
hlt
adc
cld
mov
fucomp
and
mov
aam
out
outsl
outsb
test
inc
xor
dec
push
and
dec
adc
mov
and
bound
sbb
jp
roll
mov
inc
jl
sub
addr16
push
cmpl
fistpll
lcall
mov
and
push
jle
cmp
cmp
mov
nop
push
ficompl
mov
imul
mov
icebp
std
loop
push
adc
js
hlt
mov
aaa
pop
sub
dec
mov
jecxz
jmp
int3
ds
loop
lcall
jb
loope
out
arpl
sbb
mov
push
push
adc
pop
pop
pop
mov
ret
sub
stc
jae
scas
jp
push
pop
sahf
fdivrs
push
sahf
fcom
xor
fldl
jecxz
xorl
bound
rcrl
adc
das
sub
ljmp
lock
sbbl
push
inc
cwtl
xor
shll
add
scas
repz
push
les
push
adc
sbb
jecxz
dec
adc
mov
xchg
aad
pop
loope
rorb
push
mov
ficoml
sub
pop
add
mov
xor
sub
sub
ljmp
or
mov
mov
rcr
lret
ljmp
lcall
movsb
adc
fstp
dec
cmp
cltd
loope
mov
unpcklps
sbb
stos
mov
dec
aad
and
mov
lods
bound
movl
pop
negb
fcmovnu
ret
jo
sbb
fadds
std
sub
cmpsl
cwtl
xchg
xor
sbb
in
push
subb
add
lods
mov
cmpsl
rcl
je
lret
fcoms
push
out
call
ss
jecxz
mov
jmp
pop
test
jne
jb
sub
pushw
adc
imul
inc
test
mov
dec
mov
es
sti
cmp
xor
pop
scas
shrl
sub
mov
cmpsl
outsb
nop
mov
jp
nop
cmpsl
push
xorl
inc
fcoml
sarb
jo
inc
adc
nop
out
ficoms
sti
add
dec
sbb
fucom
adc
add
shll
cmp
iret
fbstp
pusha
popf
insl
cmp
adc
xor
mov
addr16
das
es
dec
pop
sarb
push
iret
jne
pop
xor
sub
daa
fisubs
ja
cwtl
les
lret
mov
cmp
lock
icebp
jge
loope
cwtd
pop
sbb
inc
mov
push
jecxz
bswap
mov
mov
mov
sti
pop
adcb
fistpll
imul
aam
in
pop
ss
outsl
scas
out
pusha
mov
in
sub
xor
push
lock
xchg
aam
push
stc
adc
ss
stos
not
xchg
lcall
dec
xchg
mov
pop
xchg
stos
jmp
sahf
roll
or
in
icebp
sub
push
enter
ficoml
test
push
push
or
mov
and
cmc
add
mov
xor
loopne
inc
aad
push
push
mov
mov
and
xor
mov
adc
pop
adc
add
dec
mov
addl
jmp
outsl
fdivr
sub
dec
mov
jne
mov
popf
or
add
lea
test
nop
imul
pop
mov
sahf
lcall
repnz
pusha
sbb
or
popf
add
pop
or
or
jg
std
into
xchg
fwait
push
movsl
lahf
es
out
repnz
mov
lret
call
jbe
mov
sub
dec
jmp
sbb
push
out
jbe
int
fisubrl
sbb
popa
jnp
pop
test
cmp
repz
mov
or
ret
jg
out
mov
adc
jno
or
xor
ss
and
jecxz
enter
add
adc
jb
lods
ss
arpl
sbb
inc
aas
les
and
or
sti
cmp
in
mov
push
insb
inc
loop
clc
jecxz
lahf
imul
pop
pop
mov
arpl
je
push
imul
test
pop
je
cmp
ljmp
enter
xchg
aam
xchg
popa
mov
dec
popf
cmpsb
sahf
mov
les
movsb
jp
ds
iret
cmpsb
xchg
dec
jne
mov
xchg
xor
jecxz
arpl
lock
mov
xorl
mov
pop
jo
insl
dec
xchg
cmpsl
jae
test
or
in
xchg
data16
pushf
mov
dec
inc
in
and
xor
ljmp
mov
pop
sub
lret
dec
rorl
fcomps
rorl
dec
movnti
nop
pop
cli
aad
stos
dec
test
xor
jge
adc
fabs
push
jne
lods
dec
lods
aaa
mov
lods
fstpl
test
lea
adc
mov
inc
dec
orb
xlat
xchg
out
dec
pop
outsb
jb
mov
mov
mov
push
iret
sbb
and
pop
daa
insl
lods
cmpsl
xchg
jns
dec
fnsave
push
fmull
jbe
cmp
shrl
pusha
xchg
mov
data16
jmp
mov
mov
add
mov
test
test
fwait
subl
cltd
ja
jae
mov
sub
cmp
cwtl
addr16
test
stos
out
movl
out
sub
sbb
push
jg
cmpb
js
in
push
sbb
cmpl
pushw
jns
fcmovnbe
adc
jmp
pop
sbb
imul
jg
sbb
lret
mov
pop
xchg
sbb
aam
push
push
and
test
seto
and
sbb
xor
and
and
aaa
cltd
stc
sbb
push
xchg
arpl
mov
cwtl
aad
mov
xlat
sub
stc
sbb
mov
call
sti
or
repz
inc
sahf
dec
pop
aam
imul
add
jg
rcll
pushf
xor
cmp
test
pushf
mov
jbe
mov
popf
in
add
scas
mov
adc
push
rorb
bswap
lret
je
int3
dec
in
jae
inc
xor
mov
xchg
and
sub
xchg
aas
imul
pusha
mov
jge
push
cmp
ss
sub
push
mov
xchg
xor
mov
jno
add
in
xor
pop
adc
repz
mov
mov
test
mov
shrl
lret
mov
push
hlt
out
xorl
add
push
mov
xchg
rcrb
and
out
sbb
insb
stc
fnstsw
imul
ja
mov
push
andl
sub
inc
scas
cli
pop
xor
daa
in
enter
ljmp
pop
jecxz
xlat
int3
cmpsb
shrb
enter
movsl
fsts
push
bound
fsubrp
icebp
mov
push
dec
push
repnz
add
fstpt
or
aam
shlb
pop
aas
insb
cli
addr16
inc
es
xor
dec
mov
xlat
pushf
pop
push
into
popa
mov
xor
and
xchg
enter
nop
mov
add
fwait
sub
scas
mov
ljmp
mov
jb
xor
cmp
jns
xor
adc
jge
dec
mov
sub
jb
lcall
dec
leave
int3
xlat
insb
dec
xchg
dec
mov
adc
dec
push
ja
sub
or
dec
or
shl
aad
xchg
adc
loop
fldenv
iret
fwait
dec
dec
jne
loop
add
imul
ror
pop
fsts
mov
jmp
pop
or
adc
js
mov
push
in
fpatan
sbb
cmp
push
pop
stos
push
pop
or
icebp
lcall
in
jnp
jns
sbb
xchg
mov
xlat
pop
xor
stc
and
sub
push
jns
std
popa
pop
cbtw
fdivrl
dec
call
popa
adc
loopne
sbb
cmp
out
lahf
mov
test
mov
jmp
xchg
scas
bound
test
cli
pop
xor
mov
dec
xchg
testl
stos
or
sbbb
ja
or
cmpsb
inc
ret
fbld
stos
pop
sub
je
cmp
fcmovu
inc
jmp
incb
sbb
mov
xor
ss
and
mov
je
inc
dec
arpl
or
xchg
sbb
cwtl
mov
push
or
or
pop
mov
sbb
fwait
xchg
inc
adc
fcom
push
dec
jecxz
and
movsl
add
movsb
xchg
mov
outsl
or
cs
mov
arpl
push
test
aas
call
dec
cli
add
mov
add
mov
sub
ja
outsb
ja
out
cwtl
insb
sub
rcl
ljmp
popa
mov
call
stos
xchg
mov
xor
xor
mov
test
mov
mov
mov
inc
arpl
jp
xchg
mov
imulb
push
outsb
xchg
cmp
push
xlat
fistpll
data16
int3
xlat
jb
cmc
inc
ds
cmp
addb
jns
xor
fwait
fs
xchg
sbb
fidivs
mov
mov
lahf
pop
jp
pop
popa
out
in
iret
repnz
push
adc
mov
sti
jge
aad
int3
jae
jbe
sub
sub
xchg
sbb
mov
out
sbb
iret
xlat
insb
adc
pop
push
jp
hlt
jmp
sub
jl
aaa
and
adc
in
lret
jne
sarl
push
push
or
insb
sbb
mov
add
xchg
cmp
xchg
jns
addr16
mov
or
xchg
std
fisttps
rcrl
and
fxtract
add
insl
in
and
iret
ret
sahf
insb
in
call
repnz
addr16
inc
xchg
aas
adc
push
dec
inc
add
xchg
aas
outsl
jmp
adc
mov
shll
arpl
jns
mov
mov
mov
out
xchg
mov
xor
daa
jae
cwtl
lahf
mov
mulb
jns
jp
mov
xlat
sub
and
cmp
push
xchg
loope
sbb
jb
fildl
andps
std
xchg
clc
hlt
testl
lahf
aaa
ret
cmp
push
cmc
aaa
cltd
outsb
add
pop
sbb
inc
arpl
jo
jle
cmpsl
in
mov
or
xchg
scas
sti
pop
jg
push
jg
ret
xor
jmp
mov
xor
mov
and
shrb
scas
pop
sub
cmpl
lock
repz
xor
cs
lahf
dec
scas
adc
pop
arpl
pop
and
cmp
adc
xor
enter
mov
in
ss
mov
xchg
mov
sbb
loopne
insl
adc
sub
addb
dec
xor
js
mov
dec
cmp
fdivrl
lret
pop
jp
aad
sub
pusha
repz
in
mov
rorl
stos
inc
ficoms
sbb
inc
inc
movsb
inc
lods
pop
cmp
jns
and
out
lods
lods
dec
clc
jae
aam
ficoms
into
fwait
movsb
loop
fbstp
test
cltd
pop
mov
mov
mov
inc
je
fsubl
idivb
push
mov
fadd
std
leave
pop
cmc
arpl
out
in
push
mov
cmp
lea
mov
stc
mov
xchg
sti
jbe
test
jbe
sti
aas
insl
jno
ret
sub
pop
jecxz
cmpb
lock
dec
movsl
movsl
sub
hlt
out
cs
push
int3
mov
pop
push
sti
fdivr
xchg
ret
cmpsl
lret
dec
cmp
mov
adc
fildll
stos
add
push
dec
mov
inc
push
pusha
or
dec
jecxz
jns
jae
xchg
cld
pop
data16
in
inc
lods
jecxz
sub
popf
pusha
mov
xchg
mov
pop
sbb
sbb
push
push
push
imul
push
dec
lods
xor
add
out
push
xchg
sub
loopne
daa
inc
xlat
xchg
scas
sbb
mov
lcall
pop
ja
loop
add
xchg
or
and
jg
push
icebp
dec
adc
mov
outsb
testl
sub
scas
enter
mov
jbe
mov
and
nop
xor
aaa
lods
lret
cmc
jp
mov
mov
mov
jmp
adc
push
andl
mov
imul
push
ret
shl
push
jge
in
mov
or
jmp
stc
sbb
xchg
leave
inc
das
fldt
lret
cmpsl
outsl
mov
aas
inc
fs
pop
or
scas
inc
loop
imul
and
lock
mov
lcall
out
jo
pop
pop
adc
jne
test
dec
mov
dec
xor
jge
imul
bnd
mov
xor
and
lock
pop
ss
inc
ljmp
sbb
insl
or
mov
div
adc
call
addr16
dec
push
hlt
sbb
sbbb
test
push
sarb
pop
cltd
dec
arpl
pop
imul
icebp
sbb
mov
mov
mov
xchg
data16
xchg
dec
bound
mov
jno
add
or
cmp
xlat
jns
mov
jne
push
inc
sub
or
jl
jle
add
das
pop
fidivl
and
xchg
and
divb
inc
bt
je
movb
mov
sbb
jecxz
fildll
movsb
out
outsb
repnz
nop
mov
hlt
pusha
xorb
roll
add
clc
push
mov
icebp
pop
inc
inc
divb
cmp
push
add
push
and
addb
out
addr16
xchg
lahf
insl
testb
outsl
ret
push
or
mov
jg
lods
popa
cli
inc
ss
add
test
icebp
push
pop
cmc
push
imul
cmp
cmpsl
es
push
loopne
enter
mov
popf
xlat
fwait
xchg
into
xor
daa
lahf
xor
mov
sti
repnz
or
jge
pop
xor
call
test
fisttps
into
fsubrl
aaa
xor
mov
push
les
fiadds
iret
add
push
ret
notb
clc
shrb
fldcw
adc
fcmovu
lret
addr16
loop
sahf
mov
int3
adc
rcr
ja
les
mov
popf
mov
pop
jo
sarl
dec
mov
mov
xor
mov
jb
lods
add
jno
xor
push
test
xor
mov
aam
incb
stc
imul
xor
add
pushf
sbb
cli
add
pop
sbb
imull
cmp
pushf
sarl
movsb
cs
lahf
cld
cs
mov
popa
jno
and
insl
xor
lods
in
enter
das
add
int3
mov
hlt
arpl
ret
popf
mov
cmp
push
outsl
cld
cli
pop
js
push
leave
pop
pop
ss
xor
jge
test
test
add
jg
stos
mov
popf
call
push
add
and
pushf
sbb
lods
fcmovne
sub
pop
xchg
jae
pop
leave
pop
fcoms
lahf
jg
les
daa
mov
or
cmc
stc
and
xchg
std
mov
add
loopne
mov
xchg
lods
or
xchg
out
out
loopne
jae
cmp
fstpt
cmc
pop
js
ja
idivl
xorb
insl
aam
ds
pop
and
in
jne
movsl
push
cmp
jg
repz
outsb
cmp
cmp
dec
fnstsw
push
cld
push
mov
mov
pop
mov
loopne
xchg
vpunpcklwd
fcompl
jno
xlat
vaddsd
in
mov
dec
lds
movsb
mov
push
push
pop
mov
mov
push
or
mov
cwtl
mov
xchg
inc
push
xchg
inc
xchg
clc
sbb
adcl
dec
int
outsl
repz
ja
mov
test
fstps
adc
push
mov
jecxz
jno
insl
lea
int3
or
jle
sbb
mov
jl
js
pop
mov
inc
and
scas
aaa
mov
and
xchg
sbb
push
scas
or
cmc
loope
lock
dec
fadds
sub
mov
rorb
sub
out
in
xchg
push
sbb
sub
push
jae
and
cmp
int3
fs
test
and
test
xchg
enter
cmp
fsqrt
or
or
es
fs
ss
jg
jb
mov
add
clc
xchg
stc
inc
imul
ds
test
call
xor
push
lods
push
push
xchg
cmp
js
clc
lcall
and
xor
or
movsb
mov
adc
add
cmpsl
dec
iret
fidivrs
xchg
enter
addr16
inc
fs
es
sub
mov
out
lods
mov
adc
shll
scas
orb
jbe
jmp
mov
xor
ficompl
dec
mov
scas
jge
xchg
inc
test
sub
int3
mov
add
sub
sub
mov
subb
in
fs
sbbl
cmc
test
outsb
movsl
lods
xchg
aam
shll
in
sbb
and
or
nop
adc
and
lcall
out
ds
jmp
xor
test
sahf
xlat
push
iret
call
insb
leave
fdivrl
stc
lea
or
fmuls
cmp
das
repnz
rorl
outsb
dec
std
stc
xchg
test
cwtl
mov
ja
loop
mov
test
mov
inc
mov
hlt
shll
outsb
ja
lea
jno
dec
fadd
and
xor
cli
iret
outsb
push
xchg
lods
push
enter
js
or
or
insb
cld
repnz
rcl
cmp
xchg
negb
sbb
sub
insb
mov
xchg
mov
aam
pushf
repnz
in
cmp
inc
inc
arpl
das
cs
into
lods
loope
and
dec
or
sti
in
icebp
int3
add
sub
adc
aad
cli
sub
jge
mov
cmp
leave
in
jmp
bound
dec
lret
mov
stc
jae
ret
clc
icebp
mov
push
xchg
movsb
mov
out
sbb
mov
cs
push
stc
lds
jmp
insl
mov
stos
xor
fcmovbe
leave
or
sbb
cmc
imul
mov
scas
pushf
or
int3
inc
call
sub
adc
insb
lret
or
lods
jns
mov
and
es
mov
popa
fldl2t
inc
push
nop
sub
call
aaa
mov
enter
sbb
lds
mov
cwtl
stos
cmp
ret
jecxz
popf
movsb
call
scas
fs
sub
stos
lock
xchg
ljmp
outsl
and
nop
mov
sub
in
and
outsl
inc
and
add
inc
rorb
fwait
imul
stos
sub
lret
outsb
dec
and
mov
add
push
mov
or
mov
adc
jmp
push
fs
dec
inc
fstpt
xor
hlt
push
sbb
test
mov
pop
out
ret
fwait
and
jno
in
jbe
ror
jo
cld
lret
outsb
xor
inc
shll
xor
call
pop
cmp
jg
imul
nop
mov
pop
lahf
sub
in
lcall
ret
popa
pop
iret
imul
int3
fadd
or
cmp
fstpl
ret
gs
test
fnsave
pop
adc
mov
mov
mov
mov
sbb
adc
loope
jmp
and
andb
jecxz
cmp
push
imul
ret
lods
les
in
scas
sbb
test
sub
mov
add
pop
mov
ret
pop
sarl
sbb
cmp
data16
pop
pop
mov
xchg
dec
mov
js
mov
insl
jnp
test
es
or
aad
cmp
mov
inc
dec
mov
pop
sub
adc
adcl
movsl
xor
push
andb
int
jle
clc
or
cltd
loopne
scas
mov
dec
mov
jae
stos
ret
sahf
mov
aas
or
in
fisubs
mov
hlt
jo
scas
stc
in
mov
xor
fimuls
aam
in
jp
loope
js
inc
xchg
cmp
push
xor
cwtl
mov
push
sbb
push
lret
pop
pop
ss
or
repnz
addl
shll
imul
mov
lahf
lods
fsubp
add
sub
aas
andl
push
mov
pushf
ficoms
loope
xchg
cli
inc
aaa
shlb
sarl
enter
pusha
int
fsubrp
fwait
scas
mov
push
cld
fnsaves
mov
nop
stos
jno
adc
sub
cld
lods
fistpl
push
mov
pop
int3
sbb
sub
gs
add
and
rorb
imull
xorb
jo
mov
or
cmpsl
mov
mov
imul
sub
sbb
les
add
div
fdecstp
test
out
fsubr
mov
dec
outsl
cmpsl
or
fstpt
repz
xlat
xor
in
ror
outsl
aaa
pusha
out
notb
xchg
mov
outsl
xorl
lcall
and
mov
push
inc
xchg
add
xlat
stos
lcall
pop
push
shrl
inc
jg
out
mov
inc
mov
aam
cltd
pop
jnp
jo
pop
aad
cwtl
out
fimull
fcmovb
xchg
mov
cltd
push
or
inc
loop
andb
inc
je
or
push
inc
pop
repz
das
sarl
mov
stos
xchg
aas
ret
mov
adc
out
add
add
push
xor
les
cmp
xchg
daa
call
lods
jo
sub
xor
jns
mov
mov
jno
and
dec
inc
ds
jg
movups
cltd
adcl
lods
outsl
add
stc
mov
push
scas
fists
push
out
call
sbb
inc
hlt
jmp
mov
pop
dec
cld
aam
cmp
sbb
jne
movsl
and
sbb
jbe
mov
inc
addr16
jp
fisubs
xchg
and
loope
adc
aad
int
cmp
push
xchg
xor
insl
aam
adc
bound
dec
das
loopne
jl
push
loope
and
inc
scas
enter
push
sub
xchg
daa
cmp
in
cli
lahf
sub
aaa
cmp
popa
movl
jo
ret
cltd
fisubrl
shl
push
jnp
xor
loop
xor
mov
lret
cmpsb
fldt
sbb
mov
pushf
jne,pt
pop
inc
lds
idivl
in
nop
dec
sahf
jmp
adc
and
sub
int3
aaa
xchg
out
js
popa
dec
lods
xor
mov
shlb
ljmp
adcl
jle
sbb
mov
mov
or
sbb
mov
cs
rclb
mov
xchg
pop
mov
int3
out
pop
push
fcompl
pusha
pushf
add
sbb
cmp
cli
in
imul
jae
pop
popa
or
pushf
shrb
aam
lods
jnp
push
pop
xchg
pop
ffreep
add
jns
add
int3
ds
mov
cmp
lret
stc
xchg
cmp
pop
sub
pop
repz
shlb
and
add
push
ret
dec
mov
xor
popf
push
mov
sub
cmp
jnp
into
jae
inc
cs
jo
dec
push
cld
push
and
jl
pop
cwtl
lods
in
outsb
add
push
xchg
rclb
xor
pop
aam
dec
adc
fbstp
loopew
rcrb
mov
and
xor
orl
mov
loopne
push
dec
mov
add
jp
jecxz
ds
fwait
loopne
bound
add
cltd
sbb
jnp
xor
popa
mov
push
insb
bnd
adc
mov
mov
pop
cmp
mov
es
or
loopne
imul
xorl
jae
pop
add
inc
incb
insl
mov
jnp
jecxz
pavgb
loope
sub
sbb
xor
add
imulb
icebp
mov
mov
push
sub
mov
out
outsb
pop
jne
add
in
call
out
dec
jae
jne
es
mov
rol
rclb
aas
pop
adc
pop
adc
test
mov
sub
fdivl
movsb
dec
sbb
cwtl
fidivrl
push
testl
rol
push
js
dec
jns
push
into
mov
lods
ret
sbb
sbb
aam
dec
stos
pushf
sub
rorl
mov
xchg
and
mov
iret
jl
push
add
lea
aad
fcoms
addr16
pop
std
cmp
mov
lea
adc
mov
ret
or
inc
jp
out
and
lcall
mov
int3
xor
shll
pushf
dec
pop
pop
andb
repnz
mov
jmp
sub
leave
out
fwait
push
mov
clc
bound
sahf
push
jno
in
inc
fldl
insb
lcall
sbb
push
imul
fs
loop
or
repz
inc
xchg
ljmp
popf
or
or
aas
inc
jnp
addr16
dec
jl
mov
es
jno
aad
push
gs
mov
push
lret
and
or
cld
aam
add
lret
jmp
frstor
outsb
xchg
adc
es
mov
inc
pop
inc
hlt
adc
out
pusha
push
add
aaa
pop
push
mov
or
inc
leave
jnp
out
xor
cmp
xchg
add
daa
mov
idivb
mov
lock
lret
adc
xor
adc
and
les
sub
into
and
lea
stos
outsb
bound
add
pop
lods
adcl
mov
aaa
mov
push
mov
adc
pop
repz
cmpb
dec
pop
cmpsl
pop
enter
inc
fmul
xchg
dec
out
lds
xor
in
mov
fidivrl
insb
fadds
faddl
lds
mov
outsl
jne
test
incl
adc
mov
xchg
sbb
sbbl
fsts
fwait
jle
mov
ja
pusha
cli
fimull
and
dec
les
pusha
pop
je
loop
pop
add
in
ljmp
mov
xchg
frstor
push
inc
push
addr16
in
push
in
divl
ja
jp
pop
aaa
lds
ss
jae
mov
mov
mov
fcmovnbe
lret
rcr
mov
mov
pop
mov
pop
push
cmp
dec
sbb
pusha
in
and
cltd
movsl
jge
sbb
and
xchg
adc
jno
adc
adc
xchg
test
mov
cmpsl
cmpsl
cmp
fdivrl
add
mov
in
leave
repz
rcll
loope
dec
xchg
push
mov
insl
sarb
mov
in
jb
icebp
adc
cmp
mov
mov
pop
mov
sbb
cwtl
mov
adcb
cli
je
addb
push
push
jle
xchg
sub
aam
push
stos
test
xadd
test
dec
xchg
push
mov
cmp
scas
negb
icebp
addr16
xchg
and
push
xor
xchg
aaa
inc
insb
outsb
ret
xchg
mov
cli
fstps
mov
loopne
and
ljmp
or
aam
outsl
or
dec
stc
stc
out
sub
sub
xlat
inc
xchg
gs
sub
shr
nop
xchg
mov
xor
cmpsl
inc
dec
inc
push
adc
mov
hlt
push
je
jne
add
xor
arpl
dec
adc
cwtl
push
das
pushf
jno
xchg
xchg
adc
rcll
data16
jne
addr16
push
lea
sub
inc
bound
jge
lret
pop
jg
cwtl
cmpsb
cmp
cmp
pop
sbb
sub
pop
iret
xchg
and
hlt
mov
sbb
pop
dec
cmp
pushf
icebp
add
lret
iret
push
adcl
mov
inc
data16
int
or
adc
jle
inc
pusha
arpl
or
or
test
out
jle
push
push
rorl
lock
jmp
outsw
fwait
rol
daa
ror
xchg
add
pop
jecxz
lcall
jg
inc
cmp
sub
jmp
out
lods
leave
testb
sarb
or
and
clc
jb
lock
mov
mov
out
jge
mov
pusha
sub
pop
cmp
inc
adc
mov
xchg
pop
xor
jno
and
mov
mov
es
sbb
adc
push
mov
sub
arpl
inc
cmp
cmpsl
loopne
sbb
jae
pusha
aam
lods
mov
mul
xor
or
sti
inc
sub
xchg
push
cmp
adc
ja
popf
imulb
aas
add
lret
lock
out
add
mov
and
xchg
mov
arpl
mov
out
xor
mov
shr
add
nop
push
es
mov
mov
aas
std
lods
mov
cwtl
xor
in
std
jmp
mov
cmpsl
ss
ror
aas
add
cmp
xor
dec
fs
mov
xchg
jb
xchg
jns
movsl
cmp
loope
imul
pusha
and
leave
adc
aaa
hlt
mov
cld
xor
push
sbb
ss
lods
jg
out
jge
mov
fwait
lds
std
imul
jne
into
add
js
inc
subl
cwtl
test
and
arpl
pop
out
test
iret
cltd
in
xlat
popf
add
cmp
loop
leave
xchg
sub
mov
std
pop
push
pop
iret
or
pop
dec
in
cmpsl
sub
mov
dec
andl
add
lods
div
and
outsb
aam
xor
cs
xor
lods
push
mov
aam
or
cmpsb
gs
out
enter
mov
pop
lds
push
jl
lret
ffreep
repnz
data16
lock
jmp
or
adc
pop
inc
out
filds
mov
cs
mov
jae
es
test
adc
stos
cmp
jno
sti
stos
jle
jbe
pop
out
pushf
xchg
mov
xchg
pop
stc
cmpsb
scas
jmp
cmpsl
dec
repnz
pop
pop
jle
fisttpll
out
movsl
insl
ds
or
lock
idivb
mov
push
push
mov
inc
ds
mov
outsb
pushf
outsl
lods
add
imul
repnz
imul
faddp
jb
movsl
mov
nop
outsl
adc
pop
fbld
jns
cwtl
out
loopne
pusha
test
test
jle
adc
xchg
and
inc
mov
push
loopne
test
inc
test
push
mov
sub
cld
mov
push
sbb
dec
cmp
sbb
loope
stos
or
nop
add
arpl
mov
enter
mov
mov
inc
shl
je
aaa
ljmp
test
jno
pusha
jo
adc
mov
push
out
bound
sbb
inc
cmpsl
xchg
mov
xchg
cwtl
pop
pop
sarb
ljmp
fbstp
fs
sub
pop
xchg
mov
stc
mov
add
movsb
cmp
fisubrs
test
mov
and
xchg
pop
ja
cmp
cmp
stc
mov
outsl
sbb
sarb
adc
push
and
xor
pop
bound
cmpsb
or
imul
ja
push
and
scas
cmp
cmp
std
loopne
popf
pop
dec
movsl
dec
xor
in
pop
data16
and
push
imul
push
push
mov
mov
mov
fs
dec
inc
add
std
mov
out
int3
ss
gs
mov
es
and
push
insb
stos
adc
xor
jp
lcall
icebp
push
and
inc
mov
add
mov
xor
das
orb
call
data16
jne
scas
fnsave
and
ds
sub
cmp
andb
andb
push
mov
add
cld
fisubrl
lock
sub
sbb
sbb
test
pop
inc
or
mov
je
mov
mov
or
mov
in
into
mov
pop
jmp
out
or
adc
and
inc
mov
sub
inc
test
test
ja
pop
or
push
stos
mov
add
shrl
push
aad
js
imul
call
mov
js
fists
and
mov
aas
sub
int
pop
mov
dec
stos
push
push
push
sbb
cmp
mov
rcll
mov
pusha
lds
enter
dec
or
out
data16
cs
das
xchg
mov
mov
cltd
mov
jno
jp
mov
aad
mulb
imul
ss
xor
and
and
xchg
out
test
sbb
lret
push
mov
cmp
jo
shll
or
mov
jecxz
mov
stos
test
mov
popf
ja
je
xchg
bound
sbb
and
adc
rol
cmc
dec
push
or
sbb
jmp
pop
lret
dec
adc
or
sub
push
mov
sbb
outsb
ljmp
unpcklps
or
jg
insb
dec
arpl
hlt
test
dec
sarb
or
outsl
dec
mov
adc
lcall
fcmovne
push
push
jecxz
pop
push
mov
xchg
sub
pop
dec
mov
sub
add
dec
test
dec
imul
xchg
sbb
test
jae
and
sub
add
push
shll
mov
sub
inc
jnp
xor
pop
mov
mov
imul
movd
fwait
mov
out
jns
out
dec
or
mov
add
std
icebp
pop
cmpb
stc
cmp
push
clc
or
and
add
sbb
push
fwait
lret
xor
cmc
xchg
add
xchg
adc
test
mov
pop
mov
adc
mov
xchg
jmp
mov
xchg
sbb
jne
pop
sub
jp
mov
mov
xor
sub
jnp
dec
xchg
clc
popl
into
ljmp
pop
pop
jmp
scas
lock
stos
cmovge
and
or
outsl
push
adc
pop
aad
jmp
addr16
xorb
loope
imul
in
insl
xchg
shl
push
push
lds
andl
adc
adc
popf
arpl
add
sub
aaa
xchg
add
or
xor
push
mov
mov
ja
movsb
clc
and
push
aam
arpl
mull
jbe
jae
cmp
sbb
jecxz
dec
ds
jmp
cs
mov
jmp
and
pop
jae
orb
mov
jo
cmp
mov
mov
and
cmpsl
and
enter
jmp
cltd
and
pop
mov
adc
add
enter
inc
in
and
in
pop
jnp
ds
push
mulb
call
mov
xchg
jnp
mov
and
sti
es
cld
out
ja
das
jb
call
js
dec
xor
push
stos
xchg
daa
mov
aam
pop
out
lods
cli
sub
mov
stos
jns
and
dec
int
in
dec
bound
out
stos
mov
xor
and
dec
xchg
div
inc
lcall
mov
sti
mov
fnstcw
popa
or
sub
movsb
sarl
mov
mov
cli
cmpsb
repz
cmp
sbbl
sub
sub
mov
dec
jmp
or
shrb
xor
inc
mov
cmp
cmp
inc
imul
sub
jle
inc
inc
bound
ss
push
in
in
lret
dec
daa
lcall
mov
insl
jo
mov
out
test
cmp
in
mov
outsb
or
mov
xor
hlt
xchg
pop
cmp
stos
repz
jge
fisubrl
inc
clc
or
lcall
jge
mov
lcall
push
sbb
jns
imul
jp
jp
cmp
fisttpl
pop
jle
cmpsb
cmpsb
sub
inc
je
orb
pop
jns
cmc
or
shll
dec
sub
xor
lock
pop
push
add
ficomps
test
jo
stos
insl
aam
cmpsb
dec
adc
jecxz
jo
xchg
push
movsl
ss
dec
jmp
xchg
push
push
outsl
scas
hlt
test
cmpsl
adc
jbe
loop
cmc
mov
jne
push
mov
fidivs
lret
je
cmpsl
cwtl
jbe
inc
jle
xchg
movsl
imul
movsl
adc
movsb
in
pop
cltd
fnsave
push
mov
imul
push
mov
stc
adc
inc
lcall
pop
fwait
inc
lret
loopne
sbb
call
add
mov
ljmp
fildl
mov
enter
aad
arpl
test
push
pop
les
daa
xchg
fidivs
aaa
fucomip
outsl
ret
xchg
test
jb
enter
jl
mov
ds
mov
notb
mov
and
outsl
pop
mov
jecxz
or
sbb
fsubrs
adc
cwtl
vpsubq
sahf
into
bound
jnp
fs
fisubs
out
mov
cmp
xchg
jmp
fldcw
jle
idivb
jnp
pop
nop
ret
and
inc
or
ja
icebp
push
mov
jo
jl
and
adc
je
addl
xchg
add
mov
jl
icebp
bnd
rol
out
xchg
xor
adc
popf
ret
adcb
lcall
cld
pop
sbbb
addr16
iret
outsb
xchg
xchg
push
mov
in
out
dec
aas
push
sbb
sbb
iret
mov
pop
je
push
mov
adc
inc
mov
js
lahf
sbb
daa
ss
adc
shr
mov
pop
cmp
je
pop
addr16
repz
jle
xchg
arpl
dec
adc
notb
and
sbb
xor
and
and
test
inc
loope
pop
cwtl
pop
hlt
leave
ja
inc
lds
stc
ret
cli
jecxz
in
shl
jg
lock
shll
aas
cmp
leave
and
ficoml
rcl
lcall
and
in
es
leave
and
test
ja
aad
xor
add
mov
hlt
fcompl
sub
mov
pop
icebp
ss
imul
sbb
stc
jg
mov
xchg
add
mov
push
xor
cmp
mov
out
adc
movsl
xchg
fs
scas
lret
outsl
and
stos
bound
divb
cmp
out
repz
cmp
push
and
fdivr
jno
xchg
and
cmp
pop
add
cmp
ret
push
in
adc
es
adc
jne
xchg
cmpsb
adc
test
jb
or
int3
sbb
mov
inc
arpl
pop
or
sub
ret
mov
jbe
mov
push
xor
or
gs
sbb
daa
push
ror
xlat
je
div
sbb
lods
mov
or
push
jmp
jne
sbb
pop
dec
add
test
mov
mov
lds
and
ja
dec
addl
push
loope
addr16
mov
pop
xchg
inc
push
adcb
int3
lret
adc
jne
cmp
mov
cli
mov
add
sahf
adc
sub
xor
jg
shlb
push
fwait
imull
mov
cmp
mov
pop
or
cmpsl
xchg
lods
push
push
or
pop
mov
mov
jp
dec
dec
sub
data16
sahf
or
dec
ja
les
adc
sbb
xchg
aad
pop
cmp
fstpt
movsl
in
xchg
xchg
stos
scas
sub
cmpl
jge
inc
dec
or
mov
mov
fildl
dec
mov
jecxz
cmp
out
ss
push
or
or
cmp
std
aas
adc
lds
or
loopne
mov
ror
repz
dec
aaa
daa
xlat
fs
lret
cmp
ss
mov
ret
das
jle
inc
cld
ja
jecxz
jle
mov
push
and
jmp
jnp
xchg
xor
test
call
adc
sarl
movsb
mov
sahf
je
sub
ds
jmp
mov
int
adc
lcall
mov
inc
add
mov
bnd
mov
test
xor
sbb
and
cmpsl
enter
test
inc
push
mov
call
push
outsl
fsubrl
jl
sbb
pop
inc
ficoms
adc
out
imul
nop
ljmp
dec
or
popa
arpl
xor
fimull
cmp
in
push
pop
lods
das
mull
in
inc
lods
ds
rorb
mov
jb
js
and
sbb
pop
push
mov
fmuls
inc
push
fldt
aam
xchg
lahf
xor
adc
outsl
adc
notl
xor
dec
movsb
rcll
push
dec
mov
stc
push
pop
mov
leave
dec
mov
cltd
sbb
add
cld
movsl
mov
add
in
gs
je
and
addb
mov
mov
in
push
xchg
adc
xor
loopne
cmp
shlb
inc
jecxz
fcmovnbe
mov
mov
or
add
lea
add
push
das
pop
inc
xor
outsl
fs
lds
or
adc
lods
ja
pop
adc
jne
clc
iret
add
jmp
data16
mov
or
flds
xor
adc
sub
push
outsl
jnp
mov
mov
lods
xor
in
mov
outsl
pop
add
jae
aas
dec
add
jae
mov
xchg
xchg
mov
ss
jnp
and
mov
stos
jmp
cmp
insl
in
popf
add
movsl
mul
lods
dec
dec
cltd
cmpsb
leave
ljmp
push
subl
repnz
adcl
or
neg
gs
mov
imul
iret
in
or
ret
das
or
in
mov
pop
leave
mov
fdivrp
ds
mov
xlat
xor
xchg
scas
aas
stc
inc
in
imul
sub
sub
shll
adc
dec
or
or
outsb
mov
xor
or
xchg
pop
add
cmp
out
mov
ret
frstor
mov
fs
cmpsb
sub
mov
or
push
xor
mov
lcall
movsl
pusha
int3
or
jle
out
xchg
js
js,pn
xchg
mov
decb
mov
insl
aad
sub
fwait
mov
lea
push
insl
add
inc
cmc
dec
mov
aas
xchg
fisubrl
les
ret
jns
xchg
fisttpll
sbb
mov
xor
lret
push
sub
mov
sbb
push
das
bound
dec
fwait
loope
rclb
es
stos
push
pop
in
fisttpl
leave
subl
adc
sub
push
pushf
mov
push
in
adc
mov
out
mov
mov
sar
aas
mov
pop
int3
mov
test
push
dec
fmul
cld
xchg
sbb
cmpsl
cmp
mov
out
mov
aaa
add
mov
jecxz
insb
fcoml
adc
adc
pop
jmp
mov
inc
ds
push
and
push
testb
faddp
push
push
pop
cmp
jno
pusha
test
clc
jnp
sub
cmp
subl
sub
clc
popf
xchg
jmp
hlt
cmp
pop
sarb
movsb
test
jl
cmpsl
pop
lea
es
enter
and
pop
xchg
fsubrp
cmp
loop
cli
and
mov
ffree
jge
xchg
enter
mov
fdivrs
arpl
sahf
mov
je
push
bound
add
leave
mov
jns
addr16
repnz
mov
xchg
mov
shll
wrmsr
pop
mov
push
roll
xchg
mov
ds
je
xchg
push
inc
in
fisubl
add
and
dec
ss
movb
fildll
scas
push
push
pop
scas
mov
test
pop
pop
popf
sarl
pop
int
cs
cmp
rorl
enter
sub
pop
outsl
dec
leave
jecxz
mov
xchg
stos
fs
mov
and
push
ja
jecxz
sarl
sarl
mov
enter
xchg
cwtl
cmp
or
push
mov
aaa
int3
adc
and
jmp
xchg
sub
sbb
lahf
jecxz
enter
sub
jge
jnp
shll
pop
inc
cmpb
mov
mov
pushf
mov
pusha
loop
sbb
sahf
xchg
aad
aad
jae
jns
inc
adc
movsl
xorb
or
dec
mov
inc
fdivp
dec
sti
jb
movsl
inc
test
orb
sbb
or
imul
mov
add
xchg
daa
mov
out
popf
int
nop
out
arpl
rcrb
or
roll
lret
aad
popl
sahf
jle
stos
pushfw
or
movsb
movsl
cmpsl
out
gs
add
adc
xor
iret
ds
scas
inc
andb
lret
cwtl
mov
mov
push
in
dec
push
outsb
mov
pop
movhps
testb
jns
cld
dec
pusha
ds
cwtl
dec
addl
mov
ret
int
jg
cld
lahf
push
pop
push
xor
sarl
rcl
xchg
mov
dec
es
push
push
push
test
mov
clc
or
in
repnz
xchg
cmp
fsubs
add
sbb
xor
test
and
addr16
sub
inc
test
mov
inc
mov
jl
lahf
cmp
cmpsb
xchg
mov
inc
cmp
add
mov
aam
jns
je
mov
xchg
pusha
xchg
mov
xchg
addr16
bound
sub
test
bound
jb
dec
jge
and
mov
xor
iret
jns
push
andb
xchg
sub
pop
push
in
dec
js
xchg
jae
scas
inc
test
mov
jp
sahf
pop
repnz
jae
dec
sbb
je
pop
pop
mov
sub
sbb
imul
mov
mov
mov
lds
test
lea
sub
mov
cmc
dec
inc
push
jnp
shlb
dec
or
pushf
push
cmpsb
push
jp
rcl
pushf
pop
pop
pop
xor
mov
and
inc
mov
insl
fnsave
add
xor
fninit
inc
scas
out
addl
and
andl
int
cmp
mov
adc
aas
mov
xor
imul
inc
xor
ljmp
and
jl
pop
cld
and
add
inc
jmp
sub
xchg
loopne
inc
cmp
ljmp
mov
mov
out
xchg
ja
ja
jl
mulb
and
in
ja
dec
sbb
xor
pop
and
xorb
adc
sub
aam
pop
mov
jmp
fwait
xor
arpl
mov
dec
lret
and
cld
pop
jbe
xchg
inc
addl
mov
jl
mov
ja
sbb
aaa
arpl
test
inc
push
jno
mov
imul
inc
leave
loopne
xchg
cld
jb
mov
adc
push
mov
mov
mov
call
or
mov
imul
cmpsb
cmpsl
hlt
jbe
je
inc
not
mov
xchg
mulb
aam
jge
pusha
loopne
std
mov
pop
test
add
in
cli
test
mov
cmp
cltd
into
stc
adc
movsl
pushf
jg
mov
mov
cmp
pop
or
adc
pop
sbb
add
clc
cmp
lret
dec
dec
fnstenv
mov
push
jmp
int3
and
div
jmp
xchg
mov
out
jnp
or
xor
andl
inc
lahf
cli
push
mov
repnz
inc
es
xchg
pop
out
outsb
stc
dec
xchg
inc
jne
lret
push
mov
jge
and
push
pop
mov
call
scas
mov
pusha
inc
loop
jmp
stos
push
arpl
cmpsb
out
pop
es
iret
std
mov
xor
xchg
xchg
clc
jbe
icebp
orl
inc
int
dec
mov
sbb
inc
pushf
movsl
push
pop
dec
jge
mov
clc
mov
shrl
jl
mov
jl
pop
sub
sbb
adc
push
loop
lock
mov
stos
rcrb
outsl
scas
aas
test
mov
cmpsl
cmpsl
cmp
je
popf
jmp
cmc
push
lret
jns
das
pop
orl
stos
lret
subb
sbb
and
adc
lret
xchg
rolb
fidivrl
test
push
sbb
xchg
xorb
inc
mov
push
lcall
xor
bound
pusha
sub
pop
test
mov
aas
jmp
dec
inc
or
mov
fstps
rcrb
push
fldcw
pop
hlt
lock
insl
sahf
out
es
arpl
into
mov
lods
xchg
push
xlat
outsb
inc
je
pop
fucomip
dec
test
jge
int3
add
xor
adc
or
dec
mov
jle
icebp
outsb
test
sbb
movl
insl
cmp
jle
sub
stc
jecxz
add
mov
hlt
cli
pop
movl
imul
jbe
xchg
mov
loop
and
repnz
das
enter
mov
mov
out
xor
int3
adc
sbb
cwtl
scas
or
push
std
sarb
fiaddl
pop
inc
ret
push
lods
outsb
push
bound
and
imul
out
sarl
add
cmp
sub
test
dec
xchg
jge
add
push
cmp
test
enter
insb
push
inc
out
imul
adc
shrb
dec
ror
mov
mov
pushl
sbb
push
loope
xchg
sbb
sub
bound
arpl
pop
add
push
mov
jle
inc
add
in
scas
xchg
mov
xor
movsl
mov
add
jle
mov
loop
push
push
jnp
push
xor
enter
mov
clc
jnp
sbb
and
xchg
jns
cmp
jnp
sarl
inc
nop
test
sbb
popa
mov
lods
xchg
shr
jge
test
mov
fadds
fwait
in
xor
mov
lock
dec
sbb
lds
dec
xchg
pop
dec
or
pop
jb
mov
es
mov
sbb
orb
xor
add
sub
fdivs
aas
push
mov
mov
mov
enter
mov
push
sahf
pop
sbb
das
pop
mov
xorb
xlat
mov
and
fsubrl
xchg
adc
insb
xchg
mov
mov
sti
dec
insb
jp
or
popf
xor
sbb
repz
sahf
into
mov
mov
out
js
ss
cmp
incb
cmpsl
dec
mov
xlat
xor
insb
outsb
sti
push
mov
stc
sarl
roll
cld
add
lret
mov
addr16
into
jecxz
mov
push
in
dec
imul
cmpsl
roll
or
xchg
mov
mov
hlt
jge
in
lock
out
in
int3
sbb
js
addr16
push
in
pop
in
movsl
fsubs
cmpb
test
mov
adc
sub
xchg
cli
ret
sub
movsl
arpl
sbb
in
xor
shrl
arpl
addb
mov
lcall
hlt
jo
and
mov
mov
rolb
scas
pushf
jno
xor
xor
cmp
lock
jno
pop
lods
or
jne
mov
mov
or
mov
inc
arpl
fcompl
fisubrl
iret
lahf
mov
pop
lds
in
inc
icebp
inc
push
dec
data16
leave
xor
push
mov
cwtl
stos
sbb
mov
dec
dec
jb
mov
push
push
and
jb
stos
lea
outsb
hlt
popa
jg
jge
stos
xchg
ret
addr16
sbb
subb
aad
addl
js
test
jbe
push
add
into
hlt
jl
jne
pop
pop
pop
in
cmp
insb
pop
mov
popa
aas
adc
jmp
cmp
ljmp
hlt
jl
sub
fsubrl
mov
cmpsl
xchg
mov
outsl
test
xchg
leave
mov
into
mov
pushf
mov
ret
mov
clc
mov
sub
sub
mov
lds
stc
daa
pop
jno
xor
fisubrl
and
lahf
adc
push
aad
dec
jnp
imul
xchg
jg
enter
mov
test
ljmp
pop
push
mov
cmp
mov
cmp
jne
aaa
fidivrl
cmp
and
jne
daa
out
test
sbb
sbb
and
jmp
call
and
push
pop
push
sbb
ror
sbb
push
insl
dec
test
jge
inc
fisubrs
addr16
sarb
push
or
hlt
add
repz
pop
mov
jnp
lahf
loope
or
cmpb
pop
arpl
and
mov
insb
or
popa
cmp
mov
jp
daa
movsb
inc
cmpl
dec
hlt
sbbb
lods
mov
dec
jmp
mov
lock
jecxz
sbb
leave
mov
cmp
popf
ljmp
aam
leave
mov
xor
out
jmp
arpl
jl
cli
lods
sub
std
mov
sti
xchg
and
movsb
and
dec
xchg
sahf
in
adc
jecxz
loop
daa
or
push
movlps
cmp
gs
int
fimuls
insl
lea
add
dec
sbb
addr16
aaa
pushl
push
movsl
pop
in
and
xchg
xor
test
sbb
jmp
mov
stos
out
pop
shrb
rolb
imul
dec
add
xchg
and
jge
sbb
popf
mov
outsl
cld
les
or
mov
cli
aas
mov
push
shl
cwtl
sub
push
gs
mov
push
ret
dec
jae
loop
test
aad
mov
sbb
pop
pop
ds
divb
dec
sub
mov
cmp
imul
pop
dec
ffree
pop
sbb
mov
xor
mov
addr16
jmp
adcl
mov
dec
push
xchg
push
mov
ljmp
add
sub
mov
adc
test
out
or
dec
frstor
sub
jns
sti
sbb
dec
test
test
es
test
jge
mov
imul
aad
sbb
out
in
sbb
test
adc
fstps
or
push
push
leave
mov
add
mov
sbb
inc
xor
loopne
mov
push
gs
lret
cli
jg
imull
jge
stc
and
pusha
insl
rcrl
dec
fists
jo
bound
pop
fstpl
mov
xorb
add
adc
into
and
mov
dec
mull
and
jle
rol
outsl
insl
push
xchg
ja
jb
test
mov
jno
cltd
jge
pop
lcall
rcr
jnp
add
mov
lcall
je
mov
outsb
sub
sbb
je
lahf
cli
jge
lcall
mov
mov
fdecstp
pusha
jle
mov
and
xchg
cmp
popf
mov
rorl
adc
addl
xchg
jl
pop
shrl
mov
mov
lods
pusha
stos
pushf
mov
repz
arpl
and
mov
popa
aad
xchg
out
xchg
std
frstor
jo
sahf
inc
dec
xchg
and
mov
data16
cli
sahf
cmp
push
sti
mov
fdivr
push
jo
cmpl
idivb
inc
bound
sbb
mov
int3
add
imul
mov
push
cld
jb
loopne
movsl
and
adc
cs
sbbl
mov
gs
sbbb
push
loop
nop
mov
dec
cmp
adc
mov
or
fsubp
push
mov
orb
pop
jne
inc
daa
daa
in
fs
ftst
mov
adc
mov
int3
dec
nop
nop
imul
cld
rcrb
inc
out
cmp
movsb
lock
dec
lret
sbb
add
or
inc
mov
xchg
cmp
mov
jbe
jnp
mov
jo
stos
je
mov
int
pop
insl
jbe
adc
push
daa
mov
sbb
mov
sbb
pusha
mov
cs
push
andl
test
and
outsl
aaa
mov
inc
push
std
scas
popa
jle
cmp
notb
adc
mov
mov
sbb
addr16
ret
mov
pop
in
mov
xchg
cmp
pop
add
sub
or
repz
cmp
adc
sbb
and
push
scas
push
cmp
aam
das
or
fimuls
pusha
sahf
sbb
iret
cmp
shl
sub
mov
or
lcall
repz
aam
cmp
fldt
mov
jbe
pushf
inc
inc
xchg
mov
lcall
xlat
mov
in
vpshlw
iret
lods
lret
push
sub
and
arpl
cld
fisubl
stos
and
push
cmp
andb
xor
daa
insl
sti
fsts
outsl
mov
or
dec
push
dec
push
push
push
inc
mov
repnz
push
pusha
mov
cltd
lret
icebp
stos
jbe
daa
insl
push
dec
notb
lret
xchg
pop
insb
rcrb
pop
arpl
icebp
sbb
sbb
mov
das
jns
jecxz
idivb
jbe
iret
mov
mov
shr
insl
push
push
lock
push
test
call
mov
sbb
jle
pop
movsl
cltd
xchg
mov
call
add
jle
pop
mov
bound
mov
xchg
test
inc
jge
pop
data16
in
fdivp
adc
cli
jo
dec
dec
sahf
pop
clc
mov
sub
mov
call
mov
sub
lea
popf
jbe
out
and
fscale
addb
pop
mov
pop
mov
popf
shl
movsl
mov
sub
xchg
add
mov
adc
shl
pop
loopne
sbb
fs
jnp
into
outsb
ffreep
mov
sub
shrb
stos
jge
les
sbb
pop
jbe
aas
cltd
mov
scas
mov
imul
in
fs
add
mov
notl
dec
and
pusha
outsl
sahf
jp
daa
mov
mov
fnsave
movsb
xchg
cld
mov
pop
fists
test
mov
mov
dec
in
mov
lret
jnp
jb
fsts
movsb
test
jl
pop
subb
sub
cmp
pop
mov
jmp
cmp
into
bound
xor
mov
pushf
out
inc
and
fwait
popf
or
mov
adcl
in
push
jnp
sub
mov
popf
add
or
fs
shl
xchg
cld
or
pop
lds
dec
nop
cmpsb
scas
inc
mov
mov
lods
sub
mov
ret
pop
sub
and
pop
dec
adc
xor
adc
mov
jmp
mov
and
rol
lea
and
ret
ja
pop
inc
lds
pop
scas
sbb
or
or
out
cltd
add
cmp
jmp
cwtl
sbb
lods
test
das
pop
cld
mov
dec
cvttps2pi
xor
mov
push
xchg
ljmp
or
dec
out
jnp
sub
dec
clc
pop
push
xor
sbbl
sub
sbb
xchg
shl
or
pop
stos
pop
mov
xchg
loope
dec
sub
fsubrl
mov
pop
out
test
popf
into
sbb
imul
pop
cmp
dec
push
pushf
pop
out
xchg
mov
in
mov
xchg
fcmove
mov
jl
mov
add
push
aaa
popa
insl
mov
jo,pn
lds
in
lret
clc
outsl
xor
rcrb
adc
test
outsl
cwtl
mov
lret
push
push
xchg
ja
pop
sti
cld
test
insl
add
push
pop
xor
jb
addr16
jmp
sub
pop
adc
mov
test
xor
mov
sbb
jle
loopne
add
aaa
notl
jbe
dec
mov
cmp
mov
cwtl
rclb
add
call
fcoms
es
mov
cli
lcall
and
lret
lret
mov
push
mov
sbb
add
dec
pop
rolb
filds
or
ret
in
out
jmp
sbb
enter
or
xchg
stc
int3
and
repnz
test
adc
mov
jne
xchg
mov
imull
or
lcall
jae
test
mov
cwtl
adc
inc
cmp
fisubrl
xchg
mov
pusha
xor
dec
out
push
add
or
fnstcw
dec
xor
cwtl
dec
xor
pop
jno
aaa
iret
push
mov
and
dec
test
mov
in
leave
fsubp
out
shlb
out
sub
xlat
push
push
pop
ja
aam
test
mov
pop
mov
cmpsl
js
loopne
inc
push
shll
out
orb
std
imul
jg
mov
mov
mov
cwtl
icebp
jb
push
hlt
mov
push
lahf
xlat
jae
fwait
jmp
push
sbb
adc
jae
inc
out
fsubs
xorb
mov
es
pusha
mov
dec
popa
push
jne
pop
push
out
imul
out
test
sbb
mov
cwtd
shrl
pop
mov
xchg
push
mov
fstps
xor
add
jl
jbe
jno
dec
mov
pop
test
dec
cmp
js
lea
ljmp
cmp
mov
sbb
mov
fisubs
stos
cmp
outsl
icebp
push
movsb
outsb
dec
jnp
out
inc
ss
pop
andl
xor
mov
repnz
mov
aam
sbb
jl
add
in
inc
nopl
add
xchg
xchg
fsubs
icebp
and
scas
xor
lahf
mov
inc
pop
pushf
enter
sbb
jmp
or
mov
addr16
insl
and
call
adc
mov
iret
push
sbb
test
mov
stos
cld
movsl
dec
xchg
fs
adc
test
add
shrb
sbb
pop
insl
and
and
pop
enter
mov
jecxz
pop
lcall
mov
adc
or
cmp
pop
lods
dec
cmp
cmp
popf
jbe
cmp
mov
clc
outsl
roll
and
mov
or
lret
out
sahf
lock
test
lret
inc
push
pusha
aam
rcr
push
mov
xor
xlat
pop
add
sbb
jecxz
xchg
std
fnstsw
addb
ljmp
jecxz
cli
cmc
jae
ret
mov
scas
xor
cs
bnd
pop
push
add
pop
shl
inc
out
mov
and
enter
negl
push
pop
xlat
push
mov
cmp
sbb
scas
cmp
jmp
arpl
out
int
cli
xor
stos
jecxz
push
xor
iret
mov
mov
lret
sub
and
es
jge
loopne
push
push
mov
push
fs
ljmp
xchg
mov
cs
adc
sbb
outsl
ss
mov
jae
aas
pop
mov
popa
loop
in
sbbl
imul
or
push
pop
outsl
jne
cmpsb
and
inc
js
dec
dec
popf
mov
xor
jne
nop
and
add
mov
xchg
out
mov
out
lea
ret
add
test
enter
jbe
clc
jle
push
rorl
jg
dec
ret
shl
xor
dec
push
push
cs
adc
std
ret
sub
lahf
adc
adc
test
push
popa
mov
in
repnz
fsubrl
inc
sub
es
les
sub
shlb
jle
sbb
hlt
das
sbb
insb
add
sti
xchg
leave
sarb
insl
ljmp
add
std
xor
pop
dec
frstor
xchg
ror
sub
pusha
mov
and
clc
xchg
add
add
and
or
fists
sbb
push
mov
test
data16
pop
divl
jb
and
cmp
fisubl
lret
jbe
inc
push
and
pusha
lcall
cmp
pop
xchg
mov
lods
pop
xor
add
sti
push
sbb
outsb
adc
sti
xchg
mov
mov
or
mov
mov
popa
push
pop
aad
nop
lret
inc
test
inc
jns
std
pop
ja
scas
test
imul
sbb
or
jbe
xchg
pop
push
xchg
sbb
mov
xchg
fldt
and
ljmp
in
push
sub
mov
mov
outsl
push
and
push
xchg
dec
leave
jecxz
test
push
js
in
jle
cmc
xchg
and
mov
sub
repz
pop
cmp
push
add
push
adc
mov
fisttpl
loopne
add
lahf
loope
cmpsl
pop
jns
aad
mov
sub
hlt
lods
lock
nop
pop
add
movsl
xorl
mov
les
xchg
insb
jmp
adc
pop
jl
leave
cli
and
fs
mov
push
xchg
repz
data16
daa
lock
jmp
imul
out
mov
sarb
jae
jne
xchg
roll
adc
pop
fsub
xor
fbstp
jecxz
add
gs
jnp
push
jecxz
adc
inc
sbb
cmp
inc
jae
lods
jecxz
lea
in
outsl
in
and
or
sub
pop
adc
pop
negl
clc
imul
xchg
icebp
and
xor
inc
pusha
xchg
scas
and
sub
cmp
jge
shrb
xchg
repnz
xchg
in
mov
call
adc
pop
nop
enter
mov
andb
rep
push
push
push
jb
lea
sti
sbb
shlb
dec
fdivs
add
push
fsubp
adc
push
out
xchg
cs
lret
in
fistps
lret
scas
cmp
fnstenv
loop
inc
cwtl
sbb
mov
ja
cmp
inc
adc
sbb
push
enter
push
jmp
jo
pop
pop
fsubrl
icebp
adc
jmp
into
xlat
imul
inc
and
mov
push
fstl
jbe
dec
or
jb
imul
jecxz
push
clc
push
inc
pushf
and
int
mov
and
test
aas
decl
hlt
test
xchg
jmp
cld
mov
clc
mov
xor
fbld
lret
pop
out
fmull
mov
adc
jae
cmpb
lahf
jns
push
sub
cmp
lock
int
stos
clc
inc
push
pop
xor
fsubrl
sar
inc
popa
aaa
pop
jb
sbb
cmp
adcb
decb
dec
push
loope
dec
adc
into
xor
popf
pusha
scas
rclb
xor
jmp
inc
ljmp
jl
xlat
push
ja
adc
lea
adc
sub
popa
cld
dec
cmpsl
mov
jo
xor
and
inc
push
xchg
mov
lcall
push
jne
mov
nop
fwait
mov
mov
test
add
push
pop
scas
in
movsl
and
xor
stos
cwtl
and
sub
out
mov
cmp
shll
sbbb
jne
sub
sbb
cltd
bound
mov
fs
add
aam
jo
notb
movsb
loopne
ret
into
sbb
dec
cmpsl
mov
iret
xchg
add
add
sbb
repnz
mov
or
outsb
cmp
call
mov
pop
add
inc
inc
imul
dec
sbb
xchg
cmpsb
and
sbb
mov
adc
push
sbb
jmp
mov
sti
pop
xlat
jb
push
je
les
push
pop
adc
pop
push
xor
insl
mov
jo
icebp
push
xchg
scas
dec
push
dec
jmp
imul
out
xchg
jecxz
pushf
add
aaa
gs
lret
sub
mov
int
push
push
or
movsl
fcoms
iret
imul
sub
shll
mov
or
or
aaa
cmp
lods
adc
push
jmp
popl
pop
xor
cmp
ds
or
adc
add
sahf
or
jbe
push
icebp
arpl
gs
xchg
mov
xchg
jo
fwait
repnz
ret
inc
iret
bound
and
lahf
ja
push
psubd
call
inc
adc
fisubrs
mov
push
lea
and
mov
ljmp
sahf
cmp
xchg
xchg
jge
sarl
jle
fcmovb
cmpl
fdivrl
loope
push
iret
push
pop
ret
pop
jae
xchg
jle
mov
fldln2
es
fisubl
push
xchg
cmp
lcall
daa
dec
dec
cmpsl
sub
cmpsb
inc
clc
shl
sbb
push
rcrl
loop
jl
aad
pop
aad
adc
push
lcall
sub
push
rol
and
fidivrl
pop
pushf
sbb
leave
mov
enter
sub
imul
sub
add
jp
dec
add
repz
cs
xlat
aad
stos
movsb
mov
cs
jno
and
out
adcb
xchg
add
test
push
adc
into
ds
and
lods
pop
pop
fbstp
ds
cmp
mov
sahf
dec
jecxz
sarl
shl
push
sbb
in
adc
add
out
mov
test
repnz
int3
or
out
scas
xor
leave
pop
mov
and
test
jp
in
hlt
mov
roll
dec
aam
call
int
ss
push
cmp
sbb
sbb
fnstsw
add
insl
in
inc
pusha
mov
cmp
sub
xchg
pop
mov
push
pop
test
popf
or
cmpsb
loop
je
and
push
mov
addb
das
cmpsl
sbb
sbb
xor
jp
pop
in
ja
cmpsl
jbe
mov
rcl
jg
lret
mov
pop
add
add
nop
ljmp
mov
push
repnz
divb
jne
or
rorl
mov
sbb
pop
cwtl
xchg
test
out
leave
pop
das
jno
cmc
jmp
cltd
xor
xor
fidivl
nop
sbb
fwait
sbb
jge
das
arpl
int
pop
std
push
mov
dec
idivl
xor
mov
xor
cmp
dec
mov
sub
cli
repz
repz
loop
adc
sbb
cmpsl
cmp
mov
sahf
pop
mov
push
sbb
add
push
mov
xor
je
cmp
mov
cmp
pop
stc
or
jle
or
and
mov
es
fisubl
out
cmp
mov
pop
scas
fnsave
test
shr
clc
mov
dec
frstor
pop
mov
ret
dec
lret
popf
les
dec
repnz
adc
jbe
mov
lea
sbb
pushf
jbe
xchg
lret
ja
add
mov
jle
and
lods
adc
cmp
insb
cmc
ficoml
cmp
cmp
push
pop
jns
stos
push
addb
mov
mov
mov
outsb
movsb
jge
sahf
inc
mov
cli
fistpll
cmpsb
outsl
insb
sub
mov
mov
in
dec
btr
ret
aad
push
xchg
adc
mov
repnz
dec
adc
pop
out
inc
loopne
fs
fs
and
fidivrs
mov
mov
leave
cmpsl
stos
jle
jb
lret
mov
stc
xchg
jmp
xchg
lock
mov
mov
cmp
lret
in
inc
sbb
xchg
fwait
jne
test
adc
ja
and
stc
mov
pusha
mov
mov
fidivl
push
ss
sub
lods
xchg
sbb
fwait
dec
insb
dec
int3
xchg
imul
js
jg
test
decl
call
into
and
sti
lahf
fdivp
andb
pop
ret
jg
add
psllw
loop
mov
scas
dec
mov
push
pop
xor
pop
push
subl
mov
negb
adc
mov
mov
sarl
xchg
sarl
pop
sub
mov
mov
insb
aaa
ja
dec
outsl
addr16
and
add
xchg
out
push
pop
dec
cmpsb
scas
push
inc
sub
ds
lcall
or
cmc
sbb
scas
fildll
aam
sub
push
daa
test
and
xchg
andl
aaa
pop
jbe
or
mov
sahf
add
aam
out
sahf
inc
sub
mov
mov
sub
jbe
lret
daa
add
sbb
mov
mov
ret
pop
inc
roll
movsl
xchg
test
outsb
pushf
inc
out
xchg
ret
xchg
repz
inc
inc
stos
scas
xor
push
inc
sbb
fstl
cmc
jmp
mov
sub
lret
inc
pause
cmpsb
nop
cltd
xor
mov
fdivrl
xor
fimull
inc
stc
sub
hlt
test
loope
dec
sub
push
pop
xor
mov
sbb
fadds
repz
pop
mov
push
scas
add
aam
push
add
sub
jl
sti
push
inc
add
xchg
stos
push
mov
pop
pop
add
jo
and
adcl
jb
inc
in
hlt
mov
sbb
fdivl
cmp
inc
sbb
adc
pop
or
in
push
call
aam
cwtl
jne
xor
push
lds
stos
push
aad
shll
icebp
add
add
and
and
jg
xchg
repnz
inc
mov
jle
and
lea
lods
ret
jno
mov
add
ret
les
repz
es
out
leave
ret
aad
dec
test
inc
cwtl
jb
enter
cltd
les
sub
fnstcw
pop
adc
in
add
xchg
daa
jae
fisubrl
int3
ficoml
xchg
mov
lock
sbb
inc
in
adc
imull
jg
mov
leave
xor
mov
pop
mov
dec
and
adc
ficoml
sbb
inc
aas
jg
ljmp
and
mov
push
stos
stos
push
inc
jmp
enter
sarl
adc
xchg
pop
sbb
imul
test
jne
add
out
sbb
add
fs
pop
xor
lods
dec
xor
xchg
jns
pop
icebp
pop
inc
rcrb
movsb
into
in
rcll
daa
inc
lret
lock
movsb
push
mov
pop
mov
mov
and
imul
test
test
push
testb
jmp
inc
fwait
sub
sub
sub
xchg
jmp
les
or
mov
dec
out
push
push
cmp
test
movsl
ret
jg
rcrl
cmp
pop
inc
pop
or
jo
cmp
loopne
icebp
orb
stos
sub
mov
repz
js
mov
xor
pushf
mov
test
int3
push
push
ja
cmp
add
pop
xchg
cmpsl
mov
sub
mov
arpl
sbb
movsb
es
sub
push
add
mov
out
mov
popf
sbb
mov
xor
cmp
mov
jbe
roll
fcoml
dec
in
mov
mov
adc
jb
mov
sbb
lcall
pop
loope
in
out
loopne
push
daa
test
inc
push
push
cmpb
test
and
mov
xor
push
and
xor
ja
mov
js
jge
repz
imul
es
jmp
push
leave
fcmovnb
pop
fisubs
hlt
pusha
push
xor
sbb
inc
cwtl
push
icebp
pop
xlat
clc
fld
add
xor
add
leave
fcomp
xchg
jnp
push
rcrb
fwait
gs
ret
lods
ds
xlat
cmp
push
nop
gs
iret
push
xchg
pop
std
xor
jmp
push
jp
xor
add
popa
es
push
imul
int3
jne
xchg
aad
xor
adc
sub
dec
cmp
inc
dec
or
push
or
repz
jno
outsb
push
je
xor
daa
adc
es
insl
sub
push
jne
repnz
loope
outsb
jp
pop
pop
mov
sti
xchg
sub
mov
sbb
or
int
cmc
sub
cmp
push
and
daa
mov
jae
add
test
test
gs
cmp
jp
mov
bound
test
xchg
mov
pop
in
sarb
cmp
cwtl
ret
insl
sub
sbb
shlb
cs
cltd
mov
cwtl
mov
push
dec
in
iret
xchg
test
daa
inc
push
push
pop
pop
icebp
in
or
add
lods
and
hlt
mov
rorl
inc
and
repnz
or
mov
pop
adc
fstpl
lahf
lds
insb
insb
aaa
test
xchg
sbb
repz
xchg
cmp
push
push
aad
pop
adc
xor
inc
vcvtpd2dqy
cmp
jmp
outsb
xor
icebp
rcrb
out
dec
push
mov
outsl
mov
into
add
test
mov
sbb
je
pop
push
cmpl
dec
cltd
jp
jp
xor
cld
fcomip
ds
test
jp
push
pop
mov
in
sti
adc
dec
das
or
and
cmp
lcall
imul
mov
mov
dec
push
scas
and
sahf
add
xchg
aas
xor
fcompl
icebp
loop
roll
dec
dec
dec
sahf
call
xchg
add
pop
cmpsl
pop
ja
in
aam
mov
and
lahf
add
or
sub
cmpl
imul
push
xchg
cltd
push
hlt
mov
inc
ror
lret
popa
xor
aaa
popf
clc
adc
shl
or
add
fstl
or
xor
fwait
mov
jecxz
cmp
jmp
iret
scas
enter
push
icebp
sbb
aas
cmp
call
adc
jmp
xchg
mov
lahf
dec
sub
sub
adc
jne
inc
push
test
jp
add
dec
cmpsl
sahf
adc
pop
xchg
ret
lds
fnstcw
loopne
mov
ret
adc
aam
outsb
xor
or
loope
pop
or
xor
fstpt
cs
jmp
inc
loopne
push
or
adc
ds
fisubrl
xchg
rolb
or
add
jl
push
dec
punpckhdq
divl
ss
pop
dec
sbb
bound
rclb
fcoms
movsl
hlt
mov
cmpl
or
je
outsb
dec
shrl
aam
icebp
xor
jl
jp
divps
mov
push
xorl
insl
jb
fwait
inc
push
dec
cmpsl
mov
sbb
pop
push
and
imul
repz
sub
jbe
jg
stos
xchg
je
push
in
pop
dec
mov
xchg
jnp
sbb
mov
outsb
xor
movsl
jmp
mov
mov
in
shl
in
jmp
fnsave
lret
mov
sbb
iret
lock
and
mov
jg
test
nop
sbb
inc
clc
dec
loop
filds
flds
int
mov
sbb
outsb
xchg
sbb
cs
xor
std
or
push
mov
and
inc
cltd
mov
icebp
cmp
rdpmc
rcrl
mov
js
mov
sub
call
xor
push
and
jl
mov
jmp
repz
jg
fisubl
lods
dec
push
cmpsb
js
lahf
mov
sbb
xchg
adc
xor
ret
pushf
jg
add
adc
je
mov
cmc
dec
gs
push
dec
dec
jp
fcompl
clc
repz
imul
cmp
xchg
in
call
rorl
jbe
cltd
call
mov
xchg
pop
incb
arpl
call
dec
idivb
aad
lea
mov
ficomps
mov
inc
mov
fists
lock
repnz
push
cmp
bound
test
insl
leave
mov
add
imulb
fwait
adc
fwait
js
cmp
mov
mov
pusha
popa
outsl
aad
jnp
out
pop
pop
inc
xchg
fldenv
aas
outsb
loop
out
push
fucom
sahf
mov
mov
mov
adc
add
adc
mov
inc
adc
loopne
sub
xchg
test
out
pop
and
mov
inc
adc
aas
rcrl
in
ljmp
mov
push
mov
ret
js
sub
xor
and
and
add
adc
fimuls
mov
aam
mov
cmp
negl
add
xchg
aam
xchg
es
jo
sti
or
bnd
push
incl
push
push
mov
scas
jmp
mov
adc
mov
push
stos
mov
sbb
outsl
fs
jae
push
das
push
mov
arpl
ja
push
mov
movsb
ficomps
jne
lret
xchg
gs
mov
repnz
loop
pop
add
sbb
into
inc
or
mov
nop
cmp
int
add
popf
and
xchg
ds
loopne
cwtl
les
jle
sub
subb
lods
test
inc
mov
sbb
insb
fldt
call
dec
scas
jp
prefetcht0
mov
adcl
paddusb
lea
inc
xchg
pusha
xchg
cmp
imul
clc
es
nop
notl
mov
fildl
lret
xor
xchg
mov
lea
sub
mov
stos
pop
cmc
mov
fwait
xchg
lds
mov
xor
add
mov
pop
test
iret
jg
addl
xchg
add
test
cmpsl
pop
cs
mov
stos
sbb
jns
mov
inc
mov
and
mov
je
adc
aad
cmc
dec
insl
jb
mov
scas
dec
fiaddl
shrl
or
ds
jecxz
pop
int
xor
fwait
divl
mov
or
insl
pop
pop
les
aas
jle
xchg
mov
xor
dec
orb
mov
or
mov
push
dec
jns
xchg
xor
add
pop
and
push
push
mov
enter
in
xchg
lock
test
daa
das
xchg
adc
or
xchg
sbb
jle
fdivs
das
pop
or
das
mov
push
mov
cli
sbb
add
push
leave
ja
push
fsubrl
cltd
mov
mov
int3
xchg
jo
sbb
inc
int3
inc
cmpsl
cld
icebp
xchg
adc
xchg
in
dec
pop
jge
cmp
in
inc
es
sub
loop
mov
ss
insb
or
xchg
mov
in
int3
xor
mov
leave
jb
adc
lea
pop
xlat
fbld
dec
inc
xor
data16
mov
inc
pop
adc
adc
add
mov
jnp
adc
mov
cltd
lcall
push
imul
sub
or
adc
xor
call
test
iret
jne
push
out
push
or
xlat
cli
push
cmc
and
mov
push
inc
leave
gs
loop
cmp
sarb
cmpsb
loope
out
imul
icebp
push
icebp
rolb
ljmp
cmp
push
or
or
sahf
hlt
pop
mov
cmpsb
cli
bound
push
inc
xor
jae
adc
imul
sbb
mov
dec
jnp
inc
cs
fdiv
jl
sub
jno
sbb
inc
orl
scas
std
mov
xchg
addb
test
int
stos
addr16
pop
mov
pop
loop
call
mov
and
pop
aad
mov
xor
mov
addr16
or
roll
repnz
test
jmp
jecxz
gs
adc
imul
xor
es
dec
or
daa
and
fnstcw
add
sbb
outsl
loop
out
inc
pop
cmp
ljmp
mov
dec
and
xor
cltd
mov
hlt
insb
mov
in
dec
negb
lods
ffreep
shrb
push
mov
popf
mov
in
jbe
cmpsb
jae
push
ja
outsb
fwait
call
dec
test
push
ficoms
dec
mov
in
pop
inc
stos
cli
xor
push
and
and
in
stos
mov
test
pop
jnp
les
and
push
js
mov
jno
push
lret
sub
lret
inc
fistps
dec
daa
rol
lods
sahf
inc
std
popf
pop
mov
mov
ja
lret
gs
and
inc
jg
je
flds
clc
xor
dec
dec
mov
lret
xor
dec
out
cmpsb
ret
mov
out
mov
fwait
dec
xor
push
push
loope
or
sar
push
xor
int3
ljmp
lret
out
pop
adc
fbld
cmp
pop
adc
inc
inc
icebp
iret
stc
push
dec
test
cmpsb
push
and
cltd
imul
jp
ljmp
fcoml
ds
mov
cmpsl
jo
mov
or
sub
mov
cld
pop
fs
cmp
mov
clc
lock
dec
push
rorl
adc
call
push
jecxz
shll
addb
or
cmp
mov
bound
sub
sub
xor
xor
jns
adc
cmpsl
mov
popa
jl
sub
clc
pop
test
popf
mov
xchg
or
sub
inc
fcmovu
aas
call
repnz
imul
lods
loope
and
push
hlt
fdivs
nop
mov
jg
scas
jecxz
out
lret
adc
mul
jl
sub
lcall
mov
mov
sub
and
and
fstps
test
push
scas
xor
cli
fmuls
in
int3
or
add
add
pop
mov
xchg
jle
loope
imul
arpl
jb
xchg
adc
sub
ja
and
pop
lcall
mov
push
in
or
imul
inc
jg
ret
aam
sti
xlat
mov
daa
jnp
popa
or
or
xchg
cmp
xchg
andb
daa
and
cmc
test
loop
pop
and
inc
mov
lods
test
test
insb
push
push
cmp
xor
pop
imul
cmp
loope
mov
ror
pushf
sub
jl
cmp
cmp
repz
xor
fcoml
dec
cmp
mov
mov
test
mov
repz
adc
and
cmp
cmp
cwtl
push
sub
sti
sub
or
or
xchg
mov
xor
inc
push
sub
aad
dec
std
fsubrs
push
arpl
jne
pop
xor
and
or
sub
pop
xchg
enter
mov
insl
clc
dec
aad
es
push
cmp
dec
push
cmp
out
or
and
or
cltd
mov
icebp
jb
iret
add
loop
clc
mull
mov
sbb
pusha
dec
int3
jo
mov
loop
mov
into
xchg
mov
pushf
fwait
sub
jl
add
push
or
repz
push
out
hlt
inc
mov
cs
enter
cmpsb
iret
lods
add
pop
and
pusha
inc
aaa
sbb
and
adc
mov
dec
imul
push
popa
jp
push
add
sbb
fldcw
rorb
dec
xor
mov
or
lahf
xchg
xchg
or
cld
addb
add
rcrb
arpl
leave
jns
or
sarb
imul
outsb
out
mov
pop
adc
imul
push
xchg
repz
add
push
enter
pop
je
mov
sbb
pop
adc
mov
mov
int3
ljmp
add
ljmp
add
fistpll
cmp
dec
es
and
faddl
popa
inc
loop
das
hlt
mov
aaa
push
in
cmpl
mov
imul
leave
adc
xchg
bound
pop
jecxz
dec
pop
dec
jnp
pop
aam
inc
pop
cmp
inc
dec
add
lahf
lret
mov
bnd
mov
inc
and
mov
dec
cmp
insb
mov
mov
adc
jb
js
adc
repz
mov
jmp
add
es
mov
arpl
or
mov
in
iret
mov
cld
ja
mov
inc
push
adcl
in
fisubrs
jns
cmp
inc
mov
push
push
jl
add
outsb
push
lods
pop
in
push
and
inc
xchg
dec
sbb
dec
mov
xorb
test
sub
xchg
add
fldcw
and
nop
inc
pushf
inc
or
bound
jl
js
and
inc
loopne
mov
sahf
cwtl
sbb
mov
fwait
in
push
pop
cmp
sub
sarl
aaa
mov
mov
cld
xchg
push
cs
adc
imul
movsb
push
add
mov
mov
push
xchg
xchg
sbbb
add
mov
sbb
nop
xor
xor
outsb
es
jmp
mov
push
sub
sbb
movsl
mov
xchg
je
pop
mov
add
insb
and
lods
ret
test
les
mov
mov
rolb
fisttpl
cmp
pop
or
mov
sbbb
mov
jmp
mov
lret
shll
add
fistpl
pop
fiadds
mov
out
call
push
xchg
iret
mov
outsl
mov
pop
xor
and
ret
push
sbb
shl
shl
inc
adcl
jl
fs
js
imul
dec
cli
sti
xor
incl
xchg
fisttpl
jge
insl
sbb
rorl
xor
enter
xlat
sub
cmpsb
insb
stc
sbb
in
leave
insb
push
xorb
dec
sahf
jge
mulb
inc
adc
sbb
sub
jae
sub
pop
cli
pop
out
push
inc
push
nopl
rclb
push
adc
jo
fcompl
mov
rorb
dec
pushf
mov
mov
xchg
iret
and
add
clc
dec
mov
cmp
adc
lea
js
imul
mov
test
mov
enter
cmp
out
pop
dec
fcom
test
scas
sbb
jl
loopne
xor
pop
in
addr16
dec
std
and
mov
jae
cmp
popf
mov
std
mov
dec
jb
test
fsub
mov
out
pop
icebp
mov
enter
cmp
xchg
and
dec
and
and
cli
aaa
icebp
xor
push
push
cmp
or
jmp
js
mov
paddb
or
jbe
inc
jno
loopne
xchg
jge
mov
jge
sub
and
aad
fwait
js
aaa
cmp
add
dec
loopne
mov
aas
std
mov
daa
movsb
jge
sbb
mov
adc
adcl
aas
pop
or
cmp
mov
lret
cltd
subb
push
out
push
cmp
dec
lock
cmc
cmp
lea
pop
dec
cwtl
out
add
add
cmpsb
test
inc
jge
pop
lea
push
pop
mov
out
andl
loope
loop
xor
cmp
pop
adc
je
lret
jmp
cmpsl
jecxz
dec
pushf
pop
bound
call
ljmp
repz
mov
mov
jne
mov
xchg
mov
inc
lcall
cs
pop
cmp
enter
jno
jecxz
mov
cwtl
rcrl
sub
filds
or
popf
in
jae
xlat
dec
dec
adc
into
push
and
mov
xchg
nop
iret
popa
add
dec
jno
push
in
and
sbb
xchg
inc
or
jae
outsl
and
loope
mov
mov
push
popa
faddl
jb
jno
adc
in
sbb
cmc
mov
mov
arpl
adc
rorl
cmpsb
dec
lahf
cmp
test
scas
xchg
add
push
cs
ja
dec
add
in
out
pop
dec
shr
rorl
and
push
xchg
sbb
das
sbb
aam
jge
xor
add
dec
sub
dec
icebp
loop
neg
pop
jne
ja
fnstsw
jns
mov
aas
pop
sub
and
mov
jecxz
jl
pop
ljmp
orb
fldenv
mov
sarl
xchg
mov
in
loopne
sbb
out
lret
es
cmp
xchg
fdivrl
xchg
fadds
daa
or
mov
or
popf
or
sbb
inc
in
dec
lcall
mov
dec
mov
jle
mov
mov
movsl
rcll
stc
pop
test
inc
call
cli
jb
in
mov
cs
sbb
jbe
cltd
in
or
push
into
cmp
mov
sub
jns
cld
aaa
mov
add
push
orb
ficompl
sub
and
xchg
std
mov
stos
mov
push
mov
cwtl
fs
add
inc
sti
jae
mov
repnz
pop
icebp
cld
mov
hlt
and
sbb
movsl
push
pop
pop
sar
lds
jbe
push
sub
mov
outsl
addr16
jle
iret
adc
in
shrb
fadd
aaa
out
dec
jge
xor
push
xor
inc
lret
sub
push
aad
pusha
dec
add
dec
es
cmp
loope
push
les
xchg
mov
cmp
pop
sarb
inc
sbb
fcmove
mov
out
xchg
mov
mov
in
xor
arpl
xor
xor
lds
add
pushf
inc
and
insl
inc
lds
mov
adc
jae
push
push
js
lock
push
mov
pop
adc
in
and
pushl
sbb
jnp
push
cmp
add
pop
imul
mov
call
inc
inc
mov
sub
mov
fs
loope
jge
ss
insl
pop
fistps
ljmp
or
lahf
lds
add
xor
xor
movsb
mov
push
faddl
int
pop
jb
xchg
cmp
dec
fdivl
mov
pop
mov
xchg
mov
push
mov
dec
and
test
sub
inc
adc
cwtl
sbbb
dec
lods
lea
adc
push
or
decb
stos
sbb
ret
and
mov
sub
imul
insb
jae
jbe
mov
outsl
ja
lcall
jae
inc
test
scas
rclb
xorl
and
js
loope
adc
test
mov
add
lret
mov
mov
add
pusha
es
aad
adc
fsubrs
ja
repz
add
push
xor
add
dec
push
dec
ficoms
or
mov
fnstcw
and
add
or
mov
or
xchg
xor
xor
mov
fsubr
stc
pushf
ret
cmc
ss
call
jne
in
mov
mov
adc
xchg
xchg
imul
outsl
mov
sbb
adc
mov
stc
aas
inc
cmp
pop
fisttpll
xchg
mov
bound
jne
mov
pushf
and
rclb
sti
or
cmp
mov
test
ret
cmpsl
insl
scas
mov
nop
cmp
mov
mov
jmp
or
inc
pop
int3
add
popa
std
cmp
mov
les
test
popa
rcrl
lods
fs
rorl
mov
mov
push
jnp
insl
jae
jecxz
mov
ja
stos
movsb
ret
sub
roll
ja
enter
dec
pop
les
mov
fldt
push
mov
lcall
mov
xor
dec
sbb
rorl
div
popf
xchg
sbb
and
mov
out
prefetch
xor
cmpl
xchg
jmp
xacquire
xchg
push
addl
insl
movsb
sbb
fidivrs
jb
insb
popf
data16
jmp
and
dec
mov
pop
call
dec
in
or
push
push
mov
ss
clc
mov
inc
ficoml
jo
push
aad
popf
dec
ja
cmpsb
cmp
cmp
inc
mov
pop
lret
cmp
or
fisubs
xorb
push
and
pop
jb
mov
mov
jbe
mov
jnp
mov
add
and
call
shl
adc
in
movsl
xlat
cmp
enter
nop
fwait
aad
out
sub
xor
rclb
call
adc
push
xor
mov
pop
inc
ss
test
movsb
setae
cmp
stos
xchg
sub
inc
aaa
xchg
mov
sub
adc
rcrl
std
lock
fs
adc
leave
pop
adc
hlt
xor
out
push
xchg
sbb
xchg
lret
or
dec
dec
push
jmp
mul
pop
lods
int3
pop
xor
out
jle
push
push
insl
or
inc
xor
aam
cmp
mov
pop
xchg
jb
push
xchg
dec
inc
mov
cs
mov
add
xchg
xlat
xchg
int
push
sti
lret
mov
and
pop
repz
mov
sbb
mov
mov
lods
orl
push
inc
movsl
sub
in
inc
aam
lret
xchg
pop
dec
add
dec
add
movsl
movsl
aas
xchg
lret
push
aam
or
pop
andps
test
push
loope
rolb
xor
ss
scas
or
mov
cli
rcl
mov
in
test
fists
sahf
pop
inc
pop
dec
in
mov
mov
not
inc
add
inc
mov
dec
mov
clc
cmc
lahf
insl
lea
xor
push
movsb
cld
repz
sbb
test
mov
ret
xor
push
push
test
xchg
jecxz
push
popa
pop
mov
sbb
je
push
push
jbe
pop
repz
es
in
sub
icebp
gs
push
push
push
lea
in
insl
pop
mov
mov
sbb
mov
int3
adc
test
jge
fs
fcompl
shrb
clc
pop
jne
lea
fdivrl
or
adc
stos
inc
sbb
add
inc
lods
pop
sbb
ljmp
pop
in
jo
inc
gs
push
dec
cmp
pop
shlb
mov
rcrl
aas
xor
cmc
jae
rorl
es
sbb
and
mov
jp
or
mov
lea
and
fistpll
and
xchg
xor
mov
dec
in
shl
sub
add
sub
aam
jl
neg
xor
mov
sub
sarb
jg
jle
cmpsb
andb
jge
xor
in
push
add
jae
test
adc
push
pop
jge
or
repz
xchg
jge
inc
pop
push
and
xchg
cmpsl
cld
cld
shrb
mov
nop
sub
or
jnp
and
stc
mov
insl
jp
push
cli
les
sbbl
adc
jmp
xchg
lds
jge
and
hlt
adc
leave
dec
out
test
cli
adcb
push
jb
add
inc
push
orb
test
or
scas
cmp
cmp
lock
cmp
pushf
mov
push
or
imul
lret
jb
repz
mov
dec
jae
cmpsb
std
imul
icebp
mov
mov
push
or
sub
mov
lcall
xchg
roll
push
pop
cld
je
push
sbb
aas
add
xor
cltd
ret
sbb
or
cmp
test
lahf
sub
xchg
shl
mov
popa
mov
hlt
pop
fbstp
cltd
popf
push
and
sbb
mov
in
stos
dec
sbb
addr16
andl
mov
sbb
cmc
mov
arpl
lret
xchg
lcall
mov
inc
push
jmp
push
hlt
pop
push
stos
xor
inc
stc
cmp
and
and
xchg
sbb
push
in
jp
je
or
pusha
int
std
pop
mov
push
bound
xorb
adcl
in
aad
movsl
lock
nop
or
sbb
mov
mov
fsubrl
adc
in
sbb
fildl
mov
cmp
jno
cs
notb
xchg
iret
cs
jne
in
scas
sub
sahf
sbb
push
gs
test
inc
pop
daa
gs
mov
gs
cmc
push
fisttpl
ja
fdivr
stos
mov
call
test
les
push
cmp
sub
cmp
popa
inc
lods
ss
addr16
cmp
test
or
negl
jbe
jecxz
lahf
sub
sbb
jmp
out
mov
orb
mov
mov
fs
pop
inc
pop
sub
std
xor
cli
ss
imulb
push
mov
rcrl
cmp
shll
pushf
inc
icebp
in
mov
test
sbb
xabort
adc
shrl
sbb
in
lahf
fdivrs
arpl
xor
add
sbb
imul
rcr
push
pop
jb
or
cmp
imul
mov
in
cld
xchg
icebp
movsb
stos
inc
ljmp
inc
shrl
jns,pn
cs
cmp
loopne
mov
aad
loop
imul
jle
cmp
cmp
adc
ja
pushf
dec
daa
pop
adc
pop
adc
sbbl
or
xor
or
push
mov
xor
je
cmp
test
imul
or
int
sbb
jo
inc
pop
sarb
or
sub
xor
jb
push
insb
aaa
test
push
push
pop
insb
mov
int
mov
jmp
sub
xchg
ret
sbb
pop
notb
js
adc
add
aas
cmp
lret
mov
or
addb
inc
sbb
cmp
dec
inc
ja
inc
fs
cmp
jne
iret
pop
clc
cmp
xchg
movsl
dec
push
scas
mov
je
xor
std
mov
daa
lock
lock
fisttpl
sub
push
fmul
mov
ljmp
outsb
mov
xchg
pop
les
movl
ljmp
mov
jne
fcmovne
jl
fidivrs
lods
or
jecxz
ficoms
loop
cmp
cmpsl
scas
and
ds
lods
stos
cmpsb
cmpsb
jnp
clc
sub
mov
sbb
add
pop
xchg
xchg
adc
pop
outsb
jp
sar
sub
das
pop
ljmp
icebp
mov
lods
sub
mov
sar
xchg
fists
lret
js
push
ss
sbb
inc
push
mov
test
sbb
leave
push
mov
ret
sarl
js
pusha
lret
and
or
jecxz
or
sub
pop
xchg
and
mov
sbb
pop
sti
cmpsl
repnz
inc
test
test
push
pop
cmp
in
xchg
mov
push
mov
ret
or
testb
out
lret
hlt
mov
jecxz
rcr
stos
pop
mov
jb
jle
scas
stos
repz
jge
sbb
in
jg
lods
xor
into
stos
aas
ret
pop
mov
scas
arpl
daa
test
add
pusha
test
push
and
pop
cwtl
call
test
cmc
and
lea
xor
xor
imul
or
jg
rolb
or
mov
sahf
jbe
add
dec
or
test
sbb
push
mov
lods
sbb
int3
cmc
mov
data16
pop
xchg
lcall
inc
inc
push
jge
push
mov
shlb
cmp
or
pushf
xor
fimull
enter
dec
jo
xchg
aaa
scas
sarl
hlt
movsl
inc
in
sbb
xchg
xor
adc
cmp
in
xlat
mov
jl
ret
xchg
xchg
mov
ss
adc
jbe
aam
lret
pop
dec
sbb
in
push
pusha
mov
cli
push
out
jmp
ss
sbb
orl
jg
nop
mov
add
mov
sub
fs
xor
test
mov
clc
jne
popf
jns
loopne
jb
loop
jmp
outsb
sbb
int3
inc
mov
mov
roll
cmp
fs
pop
sub
pop
leave
xor
int
in
inc
sub
xor
or
cltd
add
sbb
push
outsl
ret
aas
mov
stos
push
jge
inc
dec
push
aaa
shlb
nop
int
push
fbld
mov
mov
icebp
xor
fisubrl
outsl
inc
push
mov
push
lret
leave
add
movsl
add
js
mov
mov
inc
cmp
xchg
cld
jmp
or
je
loope
or
in
or
push
xor
sub
dec
xchg
adc
dec
mov
aas
cmc
daa
sysret
xchg
lds
cmpsb
out
ds
adc
jp
sbb
dec
ftst
das
and
mov
cmp
jp
xor
xchg
sbb
sahf
jo
fnsave
gs
out
sub
mov
and
mov
cmp
in
dec
pop
add
mov
cli
fwait
jl
orb
and
pushf
push
push
in
fcoms
dec
dec
les
push
push
adc
and
mov
fisubrs
cs
push
dec
mov
js
cmp
mov
mov
inc
clc
push
mov
hlt
arpl
bnd
mov
outsl
mov
add
xchg
idivl
sub
xor
sbb
mov
xchg
sbbb
popf
test
stos
fcompl
add
adc
fidivrl
mov
negl
pop
loope
sub
and
ds
add
lock
sar
iret
mov
mov
lret
fidivl
jp
inc
mov
jnp
test
inc
and
mov
push
push
inc
hlt
push
scas
mov
jmp
pusha
ss
inc
and
aam
xchg
or
popa
jae
lret
cmp
jl
cmp
stos
jg
sahf
jne
ljmp
std
pop
movsl
es
cwtl
movsb
rcrl
or
daa
out
dec
pop
fmul
inc
cmp
xchg
aam
mov
movsl
cli
movsl
ret
lods
out
ds
inc
dec
int
decl
pop
in
dec
mov
cmp
mov
jno
jl
jmp
insb
jge
pop
xchg
icebp
stc
cs
jl
jbe
ret
mov
imul
popf
jae
clc
pop
into
and
cmp
jp
mov
and
xchg
xor
js
addr16
fcom
sbb
movsl
out
lods
sub
adc
mov
dec
lea
push
loop
arpl
sbb
xchg
pop
outsl
enter
mov
pop
inc
dec
ret
inc
pusha
jo
mov
adc
cmpsl
test
jne
mov
enter
cmp
push
push
stc
mov
aad
sub
add
ds
inc
adc
mov
xor
mov
sbbb
cmp
inc
push
jbe
xor
rol
mov
dec
fsts
mov
jb
mov
and
lahf
dec
fs
jecxz
cli
mov
add
adc
clc
in
cs
aad
jno
mov
sbb
repnz
mov
sbbb
push
outsl
mov
inc
aad
out
push
dec
sbb
dec
cmp
mov
xor
inc
insb
mov
jno
lea
repnz
iret
stos
jnp
add
sub
loope
push
add
fwait
pop
mov
bound
mov
fstp
sbb
mov
call
sub
push
jmp
or
std
in
test
and
sub
sarb
mov
sbb
cltd
push
bound
jno
js
xchg
or
or
dec
sub
lods
mov
enter
xchg
sub
sti
inc
cmp
and
jle
or
push
loop
cmp
shlb
test
int3
xchg
cmp
dec
xor
subb
add
imul
jae
dec
les
adc
fs
data16
or
add
push
cmpb
dec
popf
scas
jmp
imul
fisubs
sub
int
mov
pop
jae
mov
rcrl
mov
popf
or
pop
loop
xlat
in
xchg
mov
mov
sub
out
dec
adc
int3
cmp
je
jno
sub
aaa
inc
sbb
or
cmpsl
test
mov
cmp
cld
mov
repnz
mov
or
test
dec
adcb
loop
test
lds
ja
cmp
dec
hlt
addb
or
clc
lret
data16
nop
test
leave
sbb
xor
add
lahf
mov
push
popf
dec
sarl
jne
sbb
push
jle
and
cmp
mov
inc
xlat
cmp
mov
lret
add
sarb
testb
inc
mov
or
imul
push
inc
fdivrl
pushf
and
jmp
inc
loop
js
adc
rol
stos
xchg
repz
call
iret
test
lock
loope
xchg
xor
test
movl
out
dec
pop
cmp
mov
lahf
clc
dec
xor
xchg
gs
sbbb
aaa
jo
mov
inc
sti
inc
icebp
fwait
and
cmp
lods
outsl
stos
add
clc
je
add
ficomps
ljmp
popf
repnz
jmp
dec
loop
jae
mov
xor
sbb
imull
loop
dec
int
dec
cs
mov
xor
pop
fwait
iret
mov
dec
aaa
mov
pop
cwtl
sbb
jb
mov
inc
jne
stos
fstpl
test
push
dec
cwtl
addl
mov
cmp
push
add
mov
pop
mov
imul
xorl
js
inc
enter
xlat
and
loop
dec
imull
dec
out
dec
add
jmp
push
stos
mov
outsl
pop
cwtl
xchg
jmp
jne
or
arpl
jb
mov
subb
or
or
adc
jp,pn
inc
aas
stos
shll
fistpl
test
add
aas
clc
clc
pop
adc
mov
insl
cmp
dec
in
adc
paddsw
xor
test
icebp
clc
xchg
pop
dec
stc
test
jbe
mov
call
sbb
sbb
mov
push
push
pop
xchg
cld
test
lret
ret
enter
std
push
push
div
cli
xchg
adc
add
pop
inc
sub
add
cmpsl
insb
imul
rcrb
adc
andb
mov
push
je
sbb
adc
lock
xchg
sub
mov
mov
ret
in
lea
cmp
cmp
add
int3
nop
cmp
mov
out
mov
decl
jb
lods
jae
sbb
rorl
les
sti
shr
jge
fdivl
mov
cltd
xchg
insb
jge
pushf
add
mov
jnp
inc
jae
adc
sahf
add
icebp
hlt
hlt
idivl
jne
mov
fwait
jmp
std
sub
cltd
ljmp
sarl
or
inc
dec
movsl
push
hlt
stos
inc
hlt
dec
mov
jecxz
nop
lea
mov
xor
dec
lods
repnz
fcoms
insb
jo
pop
adc
fldcw
mov
xchg
mov
sub
cmp
xor
or
mov
nop
push
dec
add
mov
pushf
sbb
out
dec
ret
mov
or
nop
arpl
stos
into
mov
lds
sub
test
inc
mov
cli
or
add
das
jge
mov
pop
mov
pushf
out
rclb
adc
clc
sbb
add
and
aas
jb
jge
jno
push
pop
adc
in
jnp
mov
jp
fisubrs
nop
icebp
xchg
cs
add
aam
fwait
inc
lret
fisubl
aam
ficomps
push
mov
rcr
fwait
aaa
ror
pusha
xchg
xor
adc
adc
sub
mov
or
inc
xchg
orb
ror
pop
jp
loopne
call
push
loop
cld
ds
xor
sbb
cmc
mov
push
add
jg
xchg
adc
inc
and
dec
lcall
test
movsb
inc
and
fcomip
pop
mov
gs
pop
inc
aaa
jne
jecxz
dec
sub
mov
scas
xlat
lcall
lretw
push
mov
daa
lret
test
cmp
mov
scas
cmp
pop
nop
in
hlt
xor
aad
rclb
cld
data16
or
hlt
mov
cltd
pop
and
add
cmp
outsb
addb
jnp
inc
push
jns
mov
sarb
movsl
jno
das
outsb
jbe
int3
out
imul
cmp
int
sub
outsl
pop
aad
movsl
push
or
scas
shr
pop
mov
jmp
sbb
xor
pop
jmp
imul
cmp
cmpsb
cwtl
push
mov
xor
cs
xor
pop
xor
scas
sbb
push
pop
mov
mov
aaa
inc
jne
iret
add
push
xchg
or
dec
ds
movsb
xchg
mov
into
pop
int
xor
cmp
aam
mov
mov
pushf
add
cmp
out
andb
push
stos
push
mov
sbb
pop
ret
push
outsb
and
cmp
clc
xchg
int3
mov
sbb
jmp
pop
js
dec
or
stc
in
icebp
roll
cwtl
test
and
in
push
pop
jo
repz
or
cmp
ret
inc
pop
add
xor
jle
add
or
mov
jecxz
ffree
jp
push
cli
add
inc
push
loopne
insl
js
lea
dec
int
dec
insl
lret
pop
xchg
inc
fsub
push
inc
fs
add
cltd
imul
rclb
dec
ret
sbb
clc
leave
lahf
sub
movsb
adc
push
stos
fcmovu
clc
daa
in
jecxz
leave
push
arpl
mov
dec
outsb
mov
xchg
cmpsb
fmul
aad
cld
sti
jb,pn
lds
shll
test
hlt
pop
push
push
xchg
push
int
push
fdivrs
sub
or
sub
mov
ja
sbb
call
popf
fwait
jnp
mov
ret
sbb
mov
out
jno
and
lds
mov
cmpsl
lods
std
cmp
jecxz
push
pusha
dec
icebp
add
fcoml
fistl
lea
adc
mov
push
insl
lods
std
sarl
pop
mov
dec
cmp
push
or
scas
push
fsubrp
std
push
sbb
hlt
das
lret
imul
xchg
or
mov
inc
std
and
or
ftst
add
sbbl
inc
xchg
sbbb
cli
sbb
and
dec
xor
out
daa
and
fnsave
filds
mov
jae
in
punpckhdq
pop
push
inc
std
rcll
aas
mov
pop
sub
fs
pop
xchg
sub
sub
ja
sbb
jg
lahf
cmp
mov
inc
pop
mov
ja
adc
adc
cld
loopne
rorl
mov
cmpsl
cmpsb
lcall
xor
xor
xchg
xlat
loopne
mov
in
xor
xor
jp
ljmp
push
pushf
lods
repz
hlt
aaa
and
xlat
cmp
pop
xor
in
mov
ljmp
dec
fs
add
xlat
or
iret
js
add
push
fldl
inc
xor
iret
test
inc
in
xor
xlat
mov
jg
add
std
pop
jb
mov
add
mov
inc
push
or
jmp
popa
in
jl
mov
mov
fcompl
hlt
pop
ljmp
push
test
in
into
mov
jge
nop
imul
dec
cmp
mov
cli
divl
mov
test
shll
jb
sbb
movsb
adc
cwtl
add
pop
cwtl
pop
pop
jno
mov
repz
dec
pop
adc
inc
pop
sub
jne
push
jae
sbb
scas
push
rorl
fprem1
imul
test
je
inc
mov
and
in
pop
dec
sbb
popf
xor
pop
scas
test
idivb
fisubl
push
int3
add
test
sbb
xchg
push
test
mov
test
lret
xor
xlat
dec
xor
xor
cltd
jg
fdivr
cs
xor
out
jns
lahf
sub
sbb
push
cmpsl
add
or
sbbl
fstl
lret
sbb
scas
jne
xor
add
push
cltd
mov
fwait
nop
out
mov
mov
cmp
fiaddl
mov
std
or
shlb
adc
jno
adc
fcmovb
inc
fwait
sub
push
or
add
push
cmp
in
stc
mov
pushf
add
mov
loop
mov
loopne
or
and
xlat
fbstp
jl
outsb
movsl
dec
push
rorb
aas
mov
inc
sbb
out
sahf
scas
dec
je
cmp
stos
sarb
out
jo
cli
and
cmpsl
and
cmpsl
add
test
and
ret
sti
sbb
dec
xor
and
sub
adc
ret
fdivrs
cmp
sbb
or
jge
stos
cmpsl
add
loopne
jnp
inc
mov
mov
pop
push
pop
or
popa
pop
cmp
pop
push
pop
mov
sbb
dec
icebp
or
lcall
outsb
repz
outsl
sbb
mov
ds
ss
and
in
lock
push
xchg
insb
jns
sbbb
sub
jmp
push
test
aaa
inc
xchg
inc
sbb
sti
dec
adc
adc
ss
adc
jno
push
cmc
push
pop
push
add
int3
sub
test
enterw
or
rep
in
fistl
andl
shlb
popa
cmp
push
faddl
mov
xchg
sub
cmp
cmp
jg
popa
test
ret
inc
mov
dec
adc
testb
xor
iret
mov
xor
cmp
xchg
mov
pop
outsb
aas
pusha
jno
adc
jmp
addb
and
test
xchg
push
loopne
hlt
add
jmp
and
mov
inc
pop
and
xchg
jg
je
int
sub
into
add
movb
mov
push
lods
jmp
mov
es
and
and
subb
rcrl
sti
test
lret
mov
es
mov
pop
xchg
mov
push
scas
pop
shl
or
jne
aam
mov
push
aad
popl
push
cwtl
outsb
lcall
in
adc
pop
and
cli
ljmp
xor
cltd
bound
lods
or
repz
jae
and
das
jge
cmp
out
mov
jns
or
push
push
hlt
jmp
inc
cmp
cmp
mov
jecxz
movsl
aam
aam
enter
pop
and
outsl
sub
push
imul
into
mov
divb
addl
lret
lret
pop
or
xor
xor
cs
sti
ret
pusha
dec
sti
add
test
mov
lret
push
int3
jno
jb
add
jge
mov
dec
cmpb
mov
adc
pop
jp
mov
push
pop
sbb
mov
xchg
inc
adc
push
repnz
out
push
pusha
add
mov
jo
shrb
sahf
inc
scas
outsb
or
add
rcll
loop
jno
nop
movsl
fs
mov
cli
jno
testl
out
addr16
movb
outsl
adc
out
cmc
leave
mov
xlat
sub
jae
xchg
gs
mov
add
push
xor
and
xchg
shlb
sub
xor
cmp
imul
push
dec
mov
aaa
adc
xor
sub
mov
and
sar
mov
int3
fimuls
arpl
gs
push
inc
push
das
dec
cld
insl
repz
in
movsb
das
jno
bound
push
inc
jle
mov
and
inc
lret
jge
jge
rdtsc
addr16
jb
clc
cmp
lret
xor
ja
cmc
inc
dec
inc
nop
and
mov
scas
sub
inc
cmpsl
out
es
lahf
hlt
arpl
sub
ja
movsl
inc
stc
aaa
cmp
pop
addr16
enter
ss
clc
cmpsb
lods
mov
xor
cli
ljmp
and
shr
xor
sbb
notb
stos
mov
dec
arpl
sahf
mov
in
xchg
gs
stos
js
shrb
dec
cwtl
icebp
inc
pop
add
fmuls
lret
xchg
clc
into
add
decl
mov
fs
fmul
lret
jle
adc
fcoml
or
out
adc
push
jnp
and
push
jmp
sbb
mov
ret
popf
dec
inc
push
loope
push
xchg
jmp
or
mov
loopne
les
and
sbb
sbb
fs
cmpsb
scas
stos
xchg
xchg
loopne
adcl
pusha
int3
aas
push
jp
or
aaa
mov
orl
aad
pusha
loope
mov
scas
jne
dec
idivl
jno
mov
and
lahf
fidivrl
test
cmpsl
ret
aad
dec
or
push
xchg
mov
or
cmc
pop
aad
jae
add
cmp
and
xchg
hlt
inc
jmp
jp
fnstcw
push
cli
movl
pop
mov
cld
adcb
mov
push
lods
repnz
loopne
mov
adc
aam
in
adc
push
mov
popf
cmc
fwait
pop
cmp
push
dec
call
je
test
mov
insb
bound
sub
sub
pop
mov
jnp
inc
xor
call
inc
rolb
insb
mov
loop
cwtl
cmp
fs
dec
int3
xchg
nopl
dec
sub
fwait
orb
xlat
sbb
push
es
pushf
mov
flds
adc
xchg
clc
jo
ja
xchg
add
fbld
add
mov
push
pop
hlt
push
or
ljmp
xorl
mov
push
call
xchg
cwtl
into
mov
std
and
mov
ret
cmpsl
dec
sub
pop
xchg
stos
scas
mov
int3
loop
pop
mov
mov
arpl
sub
mov
pop
or
hlt
sbb
xor
test
push
push
sub
ficoml
popa
cld
dec
push
pop
or
enter
leave
cwtl
ss
mov
add
sub
mov
outsb
jmp
mov
popa
in
les
aam
imul
cli
pop
mov
sub
aam
sbb
or
adc
jge
js
push
jb
pop
push
jmp
xchg
repnz
and
hlt
pop
push
enter
mov
fsubrl
add
insb
incl
sbb
mov
and
popa
filds
in
stos
jle
outsb
mov
mov
loope
fwait
lea
and
cmp
enter
clc
inc
sub
lret
into
sub
jno
jl
sub
vpor
sbb
iret
mov
dec
jae
or
nop
dec
dec
sbb
loop
mov
push
cmp
sarl
mov
iret
adc
or
cmp
hlt
std
test
push
clc
dec
sbbb
xor
mov
mov
mov
mov
das
jecxz
vhaddpd
retw
inc
mov
push
pushw
cli
fistl
stos
mov
jmp
into
jle
dec
dec
int3
jge
jge
jecxz
inc
cmpb
cltd
push
fwait
mov
cld
fistpll
lret
out
lock
lods
aaa
xchg
and
push
mov
jno
jp
xor
or
adc
rcll
add
inc
pusha
dec
pop
sub
mov
push
lret
add
dec
push
loopne
repnz
sub
sbb
mov
test
xor
xchg
inc
mov
inc
mov
int
stos
pop
aaa
sub
adc
inc
test
out
mov
cwtl
mov
mov
fcoms
dec
daa
enter
pop
xchg
aad
popf
scas
pushf
and
xor
test
jno
jp
cmpsb
sbb
nop
outsb
xor
sbb
shrb
je
in
arpl
js
test
in
mov
mov
popf
outsl
scas
insl
push
push
es
sbb
sbb
rcll
add
les
sbbl
mov
fisubs
clc
and
das
mov
loopne
cmp
negb
fnstsw
insl
mov
mov
out
lcall
mov
sub
dec
popa
jae
mov
mov
sub
clc
or
mull
dec
jnp
daa
icebp
dec
xchg
cmpsl
push
mov
stc
push
mov
pop
adc
js
mov
pop
jne
mov
ja
add
mov
sti
repz
rclb
cmp
mov
das
popf
jbe
ja
ror
push
jle
jecxz
test
frstor
lcall
xchg
sub
inc
or
mov
cmp
mov
xor
iret
dec
or
add
pusha
dec
sub
inc
push
inc
dec
cwtl
pop
mov
jnp
sbb
mov
or
sti
jo
pushf
popf
inc
idivl
in
rolb
xchg
sbb
shll
sbb
cld
cmp
pop
cmp
pop
mov
sar
jo
push
int3
pop
std
or
fcoms
scas
hlt
daa
int3
push
jnp
jns
inc
jb
xor
sub
inc
repz
adc
cmc
enter
mov
inc
ficoml
xchg
enter
push
lahf
lock
mov
lock
jnp
jne
out
jmp
jmp
std
aad
ret
in
sub
cltd
js
outsl
mov
shll
cmp
xorl
mov
jno
jmp
xor
push
inc
dec
cmp
ss
faddp
jne
xchg
nop
mov
std
addr16
loop
popf
div
xchg
das
sub
dec
or
push
int
mov
sub
push
fnstenv
pushf
arpl
arpl
test
loop
mov
cmp
cmp
sub
jp
dec
in
in
imul
lock
lods
nop
jge
outsb
daa
cmp
sub
pushf
fs
xchg
mov
mov
inc
pop
pushf
add
pop
inc
cmp
cmpsb
cmpsl
iret
shlb
int
mov
das
mov
lods
imull
movsl
and
xchg
insl
repnz
dec
int
idivb
lcall
call
push
mov
mov
jo
dec
lods
dec
pop
xor
xchg
inc
pop
cmp
loope
push
daa
push
adc
push
in
fistpll
cli
imul
mov
adc
push
gs
add
jle
lahf
out
and
rorl
sub
insl
cld
faddl
xor
fildl
sbb
dec
push
addl
cmp
dec
push
inc
jns
cmpsl
lahf
test
xchg
cmc
and
cwtl
push
push
bound
sub
rclb
sub
mov
xor
xchg
lahf
mov
inc
orb
imul
in
mov
push
repnz
push
sub
outsl
cld
dec
inc
adc
jmp
clc
mov
incb
xchg
cltd
aaa
sbb
ret
sub
lea
lds
xor
adc
dec
add
leave
aaa
jp
sarb
out
das
pusha
dec
push
mov
in
mov
daa
repnz
dec
mov
pop
imul
jg
mov
xor
mov
xchg
sub
pop
mov
or
pushf
or
ret
call
mov
push
lds
or
icebp
enter
lock
jl
push
aad
xlat
es
stos
xor
movsl
sbb
fdivs
adc
sbb
cmp
iret
sbb
jg
push
adc
mov
sub
loop
insb
hlt
cmp
ret
pop
push
or
imul
scas
jg
lods
and
inc
jno
popa
lods
sub
adc
pusha
sbb
imul
dec
xor
sub
jnp
xchg
int3
xchg
xlat
cmc
or
shl
mov
ss
dec
adc
xchg
xchg
cwtl
inc
in
pushl
es
bound
cmpsl
and
mov
jmp
int
mov
jle
addl
mov
js
push
adc
cmp
call
addl
fists
out
data16
or
or
pop
add
push
inc
inc
sub
das
mov
je
cwtl
push
fwait
xor
xor
mov
push
sub
gs
jl
test
repz
jecxz
in
adc
cmpl
testb
dec
addr16
xchg
shr
mov
js
xchg
fwait
jge
adc
mov
jg
adc
ljmp
pusha
rolb
adc
pop
jno
jmp
pop
dec
sub
out
lea
mov
and
rclb
repz
movsl
outsl
cmp
add
xor
or
jbe
mov
cmp
shlb
mov
xchg
movsl
push
cmp
jge
cmc
aam
sarl
xor
add
or
scas
mov
aad
cmpsl
shr
pop
inc
stc
out
lahf
xor
pop
lcall
mov
inc
arpl
pop
and
mov
out
dec
int
in
insl
xchg
shll
outsb
sbb
inc
mov
je
push
int3
adc
aas
lahf
pop
out
or
iret
mov
ficomps
lret
cmp
mov
fs
mov
push
loop
and
jmp
and
in
leave
pop
pop
mov
sahf
pop
pop
xchg
stc
pop
mov
test
xor
test
out
out
repz
jne
test
pop
jne
cmp
xchg
nop
jp
push
nop
dec
mov
scas
gs
int3
fdivl
mov
aas
add
repnz
out
pop
pusha
jg
leave
daa
push
addr16
mov
push
pop
dec
leave
sub
xchg
test
fdivrs
adc
mov
test
je
pushf
inc
push
loopne
jb
addr16
mov
xor
insb
mov
fdivl
cmp
in
fstl
into
mov
mov
jg
mov
popl
mov
xor
add
movsb
mov
mov
loope
sti
lods
shrl
mov
mov
out
loope
arpl
out
jp
mov
imulb
pop
outsb
roll
jmp
subl
jge
push
sub
mov
cli
add
gs
adc
dec
adc
push
xchg
pop
adc
jbe
movsb
popa
inc
mov
imul
nop
mov
ja
rolb
push
lds
push
pop
inc
add
pop
or
mov
lret
lds
sbb
insl
fdivl
inc
out
and
push
xchg
jecxz
adc
sub
sub
or
in
jp
jmp
aam
sbb
jae
pop
adc
add
fs
jge
and
mov
add
and
mov
nop
jl
xchg
das
sbb
std
into
test
test
sub
rolb
and
cmpsb
sub
mov
rcr
pop
and
mov
jne
pop
add
mov
aas
mov
push
insb
mov
icebp
xor
jge
je
push
or
cwtl
jp
sbb
stc
lcall
jmp
lock
jmp
ret
add
pmaddwd
sarb
mov
ja
inc
call
fldt
push
xchg
pop
add
adc
fimull
xchg
and
or
shr
lret
or
orb
roll
push
or
mov
in
aaa
in
jbe
in
and
insb
daa
sub
push
sub
sti
add
or
inc
dec
outsb
ljmp
test
jnp
inc
sub
dec
fcompl
cmp
imul
adc
push
incb
in
loop
mov
mov
cltd
mov
or
jae
aam
mov
xchg
add
push
mov
dec
loope
add
dec
rclb
imul
ficoml
in
std
daa
cmpsl
lods
decl
in
out
outsl
sbb
neg
xchg
inc
inc
ljmp
adc
mov
xchg
lods
into
icebp
into
repz
pop
or
insb
js
rclb
pop
xor
xor
add
iret
pop
insb
adc
sub
inc
mov
int3
push
xor
inc
enter
fs
addr16
and
pop
ss
iret
subb
in
jge,pt
sub
or
pop
flds
sbbb
mov
lret
jp
inc
je
loope
pushf
jnp
or
and
fdivs
dec
leave
adc
or
add
push
int
incb
fldenv
mov
divb
int
sub
cmp
nop
sbb
and
int3
mov
adc
ljmp
shl
pop
mov
pop
mov
dec
cmc
and
sahf
cmpsb
jbe
pop
push
jg
andb
ret
or
pushf
inc
xor
xchg
aam
sbb
add
cmp
cmp
push
or
shl
sahf
adc
mov
inc
out
push
mov
fbstp
lret
jne
mov
loopne
xor
imul
jp
in
xor
or
xorb
jae
test
push
inc
cmp
jecxz
add
sbb
mov
or
mov
andb
scas
jl
xchg
test
mov
add
sti
mov
xor
out
pop
lods
xchg
add
pop
iret
and
shll
mov
pop
aaa
dec
xchg
pushf
lds
xchg
sarl
add
lret
ds
jns
pop
insb
mov
and
popf
sti
icebp
mov
dec
mov
pushf
cmpsl
loope
popl
std
pop
cmp
nop
loop
stos
aas
sti
mov
mov
mov
test
jg
pop
dec
movsl
jb
call
jbe
ficoms
jbe
jp
lcall
mov
mov
xor
lcall
push
xor
mov
add
xor
xchg
sti
xchg
outsb
sub
cmpsb
push
fiaddl
bound
mov
mov
popf
fisubs
aad
push
int
ret
inc
std
enter
mov
sub
sub
mov
loopne
imul
cli
or
fscale
mov
mov
test
or
sbb
sub
movsb
sbb
mov
test
mov
in
fimull
lahf
std
repz
lret
xchg
mov
dec
lea
movsb
shrb
stc
or
mov
fidivrl
outsb
pop
sbb
add
add
add
aad
rorb
lods
sub
cmp
outsb
mov
cmpsb
pushf
or
xor
xor
aas
pop
inc
scas
jl
and
mov
fistpl
cmpb
aaa
mov
push
adc
inc
xchg
loopne
ret
scas
iret
cmp
cmpsb
add
lahf
cwtl
cmp
dec
addl
ret
add
xor
cmp
push
xor
inc
into
outsl
push
sbb
and
xor
pop
cmpsl
ficoms
repnz
fiadds
push
jno
jae
aaa
mov
stos
mov
movl
popf
movl
push
test
mulb
jge
sub
gs
dec
jno
cmp
sub
test
dec
and
popf
lret
in
mov
scas
adc
adc
stos
shl
js
xor
mov
mov
repnz
or
stos
leave
xor
mov
push
xchg
test
xchg
inc
mull
loop
movb
outsb
mov
repnz
xchg
dec
es
das
clc
fneni(8087
add
pusha
jnp
sub
add
cs
dec
lods
clc
popf
cmp
xor
inc
mov
dec
imull
aad
xchg
lods
rcl
ret
jp
inc
jno
sbb
mov
xchg
pop
into
cmp
rolb
aaa
push
cmp
mov
mov
popf
or
rcrl
sarl
fcomps
cmp
rorb
rcr
sahf
jl
mov
icebp
dec
and
nop
je
jge
and
push
push
and
mov
jmp
sbb
push
push
push
adc
gs
and
js
mov
sub
pop
mov
jmp
pop
movsb
std
xchg
sub
lret
insl
adc
pop
sbb
mov
mov
hlt
mov
repnz
mov
imul
and
ja
stos
inc
ds
cmpb
mov
xor
and
mov
addl
dec
xor
xchg
xchg
jb
mov
pop
leave
or
stos
xor
ss
jb
cmp
mov
cmp
push
stos
test
lret
push
pop
or
dec
xorb
sbb
xor
test
subb
imul
into
enter
jmp
push
data16
lcall
and
pop
sar
push
mov
jbe
inc
dec
adc
cmp
loopne
enter
jns
shlb
jns
pop
push
imul
xchg
je
nop
and
adc
push
fsubrs
mov
sbb
mov
scas
adc
test
int
je
xor
inc
imul
ds
in
xchg
clc
repz
push
fistpl
adcb
add
sbb
rorl
jb
xchg
clc
mov
mov
mov
out
orb
bound
in
mov
xor
lcall
les
int
ret
xchg
add
mov
xchg
fsubl
out
pop
cmp
inc
shll
fstpt
out
inc
ljmp
lock
test
mov
aaa
pop
cmp
jnp
rclb
andb
xchg
stc
out
xchg
and
cmc
cwtl
push
cmp
add
aad
dec
pop
jbe
daa
cmp
das
cmp
adc
out
jnp
and
cmp
ficomps
jl
fcmovbe
adc
mov
out
fcmovu
iret
sbb
imul
sub
daa
leave
lret
ja
cmpsb
or
push
adc
add
sbb
inc
test
or
call
in
stos
mov
pop
mov
sub
xchg
or
scas
pop
data16
and
dec
ja
mov
adc
or
cld
orb
mov
mov
jg
das
fs
xor
notb
dec
lret
mov
xchg
mov
jge
or
movsl
sti
add
mov
test
out
sub
adc
mov
push
dec
sbb
daa
pop
mov
lods
mov
movsl
ret
or
popf
lods
fildll
push
pop
mov
pop
pop
push
jle
pop
jmp
sbb
test
mov
pop
bound
mov
clc
dec
and
add
jecxz
push
movsb
pop
jae
cld
inc
xchg
mov
push
movsl
insb
push
push
xchg
rcll
ja
stos
push
xor
fistps
cmc
jno
mov
pop
adc
sbb
pop
dec
jl
outsb
pop
pop
push
mov
or
mov
cltd
mov
loope
popa
rolb
into
insb
or
add
aas
lods
pop
je
icebp
push
mov
stos
fcoml
jo
xchg
daa
repz
adc
mov
push
nop
stos
push
test
jle
subl
imul
pop
lds
jmp
mov
sbb
fisttpl
inc
mov
xor
mov
iret
mov
mov
sarb
push
cli
out
pop
ljmp
imul
xlat
pop
cmp
pop
pop
popl
push
mov
jecxz
mov
loope
clc
sbb
pop
xchg
and
dec
sbb
push
hlt
jne
xchg
xchg
mov
loopne
mov
xchg
mov
xlat
repz
out
xor
pusha
mov
add
je
push
cmp
popa
add
mov
imulb
enter
mov
je
dec
test
and
decb
sbb
int3
imul
jecxz
inc
mov
test
into
cmp
cwtl
ljmp
inc
sbb
and
mov
mov
mov
scas
mov
add
pop
adc
in
mov
ss
sbb
and
repz
dec
bound
or
repz
dec
push
std
mov
rcrl
addl
and
rcl
rorl
pop
nop
imul
test
lcall
cmovl
cmp
leave
mov
outsl
mov
insb
xchg
loopne,pn
ficomps
gs
and
xchg
lahf
sub
inc
stc
fs
dec
mov
or
movb
xor
adc
dec
dec
mov
lret
xor
sahf
mov
mov
cmp
mov
mov
ffreep
imul
add
enter
inc
add
outsl
push
stc
stos
fmuls
es
or
aas
inc
inc
mov
mov
inc
mov
pop
lcall
xchg
rcrb
popf
mov
mull
jo
adc
mov
inc
rcl
pop
daa
sub
lret
roll
in
mov
out
lret
cmp
adc
mov
dec
jno
add
in
pop
xor
imul
js
sbb
mov
dec
aam
lcall
fidivrs
jle
mov
mov
xor
shl
ret
pop
xor
popf
test
xor
push
lods
shlb
pop
aas
or
xchg
or
xor
cwtl
shl
fsub
fnstsw
cmpsl
inc
push
movsb
shrl
jb
aas
jg
test
movsl
subb
std
xchg
clc
outsb
stc
fsub
mov
test
adc
cmp
mov
gs
scas
cli
cmp
ret
mov
in
add
ljmp
add
imul
fidivl
xchg
adc
dec
leave
fwait
dec
movsb
sar
sbb
popf
jecxz
scas
dec
push
and
inc
fidivrs
xchg
rorl
repz
mov
pop
dec
cmpsb
pop
mov
fidivs
fs
and
add
mulb
inc
mov
icebp
dec
jl
mov
dec
mov
in
mov
cmp
jnp
mov
inc
insb
pushf
and
mov
add
dec
add
subl
and
jnp
negl
data16
jbe
inc
cmpsb
push
sti
mov
sbb
adc
and
roll
jle
sub
fwait
push
push
push
arpl
test
in
cltd
mov
jecxz
lahf
daa
inc
xor
int
pop
stos
ret
and
inc
popa
and
inc
aas
fidivs
xor
jp
repz
jmp
in
loope
into
xor
ja
dec
mov
stos
adc
addr16
mov
jp
out
cmp
pop
out
mov
inc
in
in
in
sahf
sub
js
add
push
js
inc
xchg
lds
das
mov
adc
mov
push
inc
jo
push
iret
or
adc
push
jp
xor
pop
mov
imul
es
out
sub
in
leave
push
mov
mov
ret
fidivl
dec
or
loope
cs
mov
repz
pusha
xor
jle
rcrl
test
andb
add
mov
test
test
popf
adc
and
lret
inc
loope
test
mov
out
adc
pop
fs
sti
fidivs
xchg
cli
enter
adc
jns
lcall
mov
rol
pop
jns
mov
inc
mov
dec
mov
sbb
pop
lods
and
adc
lahf
nop
xchg
jo
jo
mov
sahf
or
xchg
cmc
sbb
bnd
mov
insl
jecxz
push
arpl
mov
adc
shl
cmpsb
mov
adc
cmpsb
mov
pop
dec
or
mov
jle
sbb
inc
js
mov
movb
bound
xchg
lcall
sub
ds
into
icebp
sbb
jb
addr16
insl
mov
ret
xchg
pop
fisttps
cmp
rdmsr
lea
iret
bound
mov
arpl
test
and
lods
cld
mov
add
mov
pop
bound
mov
mov
pop
loope
pop
xorl
cmp
in
sahf
jmp
aad
adc
sub
mov
cmp
les
js
xor
cmp
xchg
sahf
movsl
push
jmp
je
sub
movsb
mov
iret
pop
pop
xor
pop
shrl
data16
shl
inc
push
jge
dec
or
ret
aas
test
rcrl
fcompl
mov
cmp
jbe
fwait
jl
clc
into
ja
mov
jp
aas
inc
mov
pusha
movsb
cmpl
int
and
or
rcll
cmp
ja
outsl
maskmovq
testl
clc
ja
pop
adc
subb
xor
rclb
jns
xchg
cmp
mov
pop
pop
push
cmp
dec
arpl
cld
xchg
push
jecxz
inc
sbb
nop
jo
cld
fcomps
mov
je
xchg
cmpsl
add
scas
fnstenv
in
add
cld
lcall
push
into
push
sbb
or
test
imul
xchg
or
xchg
ja
leave
jmp
dec
dec
xchg
nop
jecxz
movsl
jae
xor
xor
out
mov
pop
adc
mov
sarb
stc
inc
sbb
shr
or
jle
add
xor
and
leave
repz
mov
sbb
jbe
add
cmpl
sub
jl
cmp
mov
add
divb
jge
scas
pop
mov
xchg
les
pop
icebp
mov
or
cmpsb
mov
aaa
out
subl
je
dec
mov
inc
fidivrl
addr16
cwtl
cmpsl
push
ret
outsl
sbb
mov
mov
or
mov
ret
or
out
out
roll
outsb
jle
mov
sbb
dec
inc
in
test
mov
nop
sub
sbbb
ret
shrb
mov
pusha
into
lea
insb
xchg
nop
sbb
lahf
int3
outsl
xor
mov
in
push
inc
inc
das
lds
out
aaa
comiss
mov
inc
lods
jbe
push
push
test
bound
jb
movsl
mov
rolb
push
test
fidivrs
jle
push
out
jge
orl
in
lret
push
negl
mov
inc
fdiv
loopew
mov
and
mov
jge
sbb
inc
pop
cmpl
push
xchg
gs
ds
add
cli
mov
or
andb
out
xchg
push
adc
xor
jnp
ljmp
adc
sbb
out
sub
cmp
xor
rolb
pushf
fcoml
add
movsb
out
dec
pop
stos
push
inc
fnstsw
mov
sub
push
mov
sbb
popl
jnp
hlt
out
xor
add
pop
mov
add
dec
jmp
xlat
daa
or
adc
pop
xchg
nop
push
cmp
jmp
into
insl
sti
inc
sbb
fwait
nop
js
jb
push
imul
jmp
hlt
mov
cmp
cmp
cmp
insl
stos
hlt
or
sbb
fidivrl
pop
in
xor
adc
call
push
subb
cmp
mov
and
fucomi
ljmpw
pop
aam
xchg
lret
xchg
mov
fs
add
cmpsb
xor
testb
lret
mov
arpl
or
subl
push
scas
call
cwtl
dec
popf
lret
leave
sahf
out
imul
aas
inc
mov
pop
and
outsb
sbb
insl
icebp
pop
scas
rclb
xchg
add
fbld
jge
insb
xchg
inc
hlt
sbb
inc
xchg
add
pop
fidivl
scas
aad
mov
mov
push
scas
jno
adc
addb
sti
shll
sub
jp
hlt
aad
pop
adc
inc
std
pop
pushf
cmp
lock
lods
sub
jecxz
loopne
addr16
sub
into
cmp
pushf
jg
mov
imul
insb
or
jl
mov
pop
adc
xchg
inc
ds
jmp
mov
mov
std
sub
sbb
mov
ret
stos
and
push
or
movsl
cld
pop
sbb
xchg
pop
into
pop
add
les
outsl
jns
loope
hlt
mov
sbb
fs
in
or
or
enter
test
jnp
aas
cmp
outsb
mov
lret
cwtl
stos
cmpsb
push
mov
test
stos
jo
leave
mov
data16
ja
loop
jb
shll
sub
xchg
int
out
bound
push
outsl
or
push
lret
ss
ret
pop
fs
cmp
xchg
scas
shl
lods
pop
push
fildll
pushf
sbb
push
pop
dec
adc
out
subb
pop
shll
inc
fsts
stos
dec
or
test
cmp
hlt
sbbl
fcoml
addl
fwait
mov
adc
pop
icebp
fistpl
cmp
cmpsl
into
outsl
mov
test
mov
pop
ja
adc
xchg
sub
lods
test
add
movsl
jmp
xchg
hlt
sbb
test
mov
pop
sbb
pop
idivl
cmp
cmpsl
or
jge
clc
mov
cmc
sti
int3
and
or
out
cmpsl
xchg
mov
aaa
mov
push
or
incb
jns
fucom
xchg
xrelease
loope
movsl
xor
dec
add
pop
adc
push
into
and
loopne
xchg
adc
jae
rcrb
cmpsl
call
or
ljmp
pop
pop
movsb
jnp
add
pop
jl
and
jbe
push
push
lret
test
jge
add
sub
xchg
pop
xchg
lock
fxch
cmp
scas
sub
divb
jo
lcall
sub
lahf
xor
idivl
cmp
cwtl
pop
or
movsl
sarl
cltd
mov
in
add
out
pusha
aas
sub
mov
cmovle
pop
dec
and
into
lock
mov
dec
fwait
mov
add
xor
cmp
scas
push
dec
mov
fistps
inc
das
add
btr
xor
jbe
xchg
iret
mov
test
xchg
sbbl
decb
and
add
rcrl
cwtl
push
flds
or
inc
shlb
pop
lods
aaa
lea
xlat
out
movsb
fmul
clc
mov
pop
push
mov
sub
mov
push
dec
and
dec
mov
cmp
outsl
ficoml
add
push
jecxz
pop
adc
adc
sbb
xor
xchg
inc
outsl
cwtl
mov
sub
or
sub
clc
xor
adc
xor
cmp
or
adcl
and
jbe
clc
xchg
iret
leave
fs
pop
popa
mov
mov
mov
scas
dec
adc
fldl
popf
sub
ja
shll
xchg
cltd
int3
sub
ljmp
inc
jno
imul
psrlw
jle
in
and
mov
inc
push
push
pop
fwait
push
push
sti
fsubrs
jle
lcall
mov
scas
adc
pop
push
scas
push
lret
dec
gs
xchg
jo
push
out
mov
int
mov
lahf
pop
std
adc
cmc
jne
int3
inc
sbb
cmp
xor
in
or
pushf
inc
inc
stos
aam
popa
testl
idivb
inc
xor
pop
pusha
and
mov
stos
stos
pushf
imul
push
dec
dec
leave
pop
mov
bound
jl
sahf
les
les
mov
ja
add
push
and
adc
mov
rol
sbb
in
pop
cltd
movsl
fdivrl
pextrw
xchg
enter
mov
test
pop
adcl
fisubrs
sti
imul
sbb
or
out
in
xor
cmp
movsl
jg
fpatan
dec
cs
mov
inc
pop
add
daa
popf
or
add
push
cwtl
push
dec
add
mov
push
jge
out
xchg
fistps
or
sub
pop
pop
enter
dec
xlat
xchg
mov
nop
mov
leave
or
enter
mov
pop
mov
push
push
fstl
pop
xchg
pusha
pusha
insl
sub
shll
shll
add
ftst
sbb
repnz
mov
jb
dec
adc
inc
call
pop
push
mov
faddl
jmp
sarl
mov
js
xor
jo
jmp
in
leave
or
rcrb
imul
adc
daa
imul
outsb
mov
mov
push
jno
repz
adc
jle
insl
sbbl
jne,pn
mov
dec
adc
jmp
rol
pop
lret
fstpl
add
movsl
pop
js
dec
or
jecxz
popa
mov
dec
xlat
xor
scas
pop
cmpsb
int
and
aam
and
enter
arpl
pop
lcall
inc
ljmp
outsl
loopne
mov
rorl
xchg
test
mov
mov
nop
jo,pn
mov
push
cmp
push
xor
mov
pop
pop
rolb
cmpps
scas
div
mov
ret
cmc
fwait
adc
xchg
mov
adc
and
push
jle
lahf
sbb
xchg
cmp
dec
xor
mov
push
popf
imul
inc
adc
pop
loopew
int3
push
es
mov
das
imul
push
imul
mov
jae
cmp
cmp
sub
cmp
and
cmp
shll
xchg
nop
test
jmp
scas
or
call
cmp
push
out
in
hlt
mov
fstpl
daa
popa
sbb
jl
jno
adc
repz
movsb
or
cmp
repnz
or
mov
pop
mov
jo
sub
xchg
outsb
scas
pop
add
cmpsl
sbb
icebp
mov
jno
sub
lret
divb
cmpsl
cmp
sub
add
mov
mov
mov
lcall
sbb
hlt
arpl
adc
pop
cmp
loop
lahf
xchg
mov
stos
pop
subb
pop
insb
pop
push
sub
movsl
pop
jno
inc
dec
pop
mov
cmpsb
push
mov
xchg
shl
pop
lret
or
das
xor
iret
cs
sbb
stos
aam
ret
shll
dec
icebp
sbb
in
cmp
adc
jg
mov
icebp
dec
ret
hlt
test
pusha
pop
push
test
xchg
jge
mov
mov
push
mov
or
pop
out
and
movsl
or
ret
xchg
dec
and
xchg
xchg
ret
les
dec
test
jnp
dec
push
xchg
xor
aam
mov
movsb
sbb
and
xchg
inc
pop
ljmp
and
aaa
je
cmp
xor
pop
int3
push
push
inc
cld
scas
shrl
sbb
mov
push
ret
push
and
push
pop
and
push
test
and
fxch
mov
dec
sbb
mov
fdivs
scas
pop
test
push
cs
inc
mov
into
jmp
or
mov
push
fcmovnbe
add
inc
push
or
push
sbb
mov
pop
mov
int3
push
mov
daa
sbb
xchg
loopne
pusha
movsl
cmc
ljmp
fcmovnb
cmp
mov
mov
pop
fistl
out
ja
movsl
and
movsl
aas
adc
push
leave
cmpb
inc
cli
sahf
and
aas
sti
stos
stc
cmc
mov
pop
movsb
mulb
ja
sbb
dec
xchg
aam
sub
hlt
push
sbb
std
pop
fidivs
xchg
test
out
imul
lea
pop
push
cli
dec
and
clc
aad
jp
xchg
lods
aas
xlat
pop
add
stos
aad
push
data16
cmp
cli
insb
cld
push
addb
arpl
iret
xor
shrb
mov
std
mov
mov
and
movsb
cmp
adc
mov
inc
push
jnp
icebp
xor
inc
xchg
and
lods
jno
dec
enter
lret
jno
and
movsl
nop
mov
inc
inc
jbe
loopne
fdivrs
lret
icebp
in
cmpsl
sub
cli
jns
cltd
adc
in
sub
adc
hlt
push
ret
test
dec
lods
jo
pop
xchg
jmp
cmpl
ja
shlb
cmpsl
aaa
mov
add
test
clc
xor
jnp
idivl
jle
mov
icebp
adc
daa
sahf
pop
push
std
dec
inc
out
fisubrl
xchg
mov
stos
negl
rcrb
sti
rclb
jae
xchg
pop
imul
in
out
insl
xchg
outsb
loop
std
orb
mov
dec
mov
xchg
loope
ljmp
push
incb
js
xchg
adc
aaa
xor
adc
sub
lret
imul
inc
xor
adc
aam
inc
mov
inc
popa
xor
jbe
dec
test
sbb
and
pop
fisubs
pusha
pop
movsb
sbb
jge
push
ljmp
into
loopne
fwait
push
testl
mov
imul
mov
adc
mov
imul
fsubs
call
lret
inc
jg
stc
je
cmovs
sub
cltd
mov
push
jge
sbb
leave
aad
dec
xor
or
enter
jae
inc
xlat
repnz
loop
loope
mov
scas
repz
jae
push
pop
push
xor
daa
clc
sbb
jne
test
lea
sub
jns
push
adc
sarb
cmp
adc
mov
sbb
xchg
ret
pop
add
sar
fmul
jne
inc
lods
and
dec
dec
leave
jae
out
xor
movsb
add
jmp
les
loope
inc
mov
seta
sahf
mov
add
stc
leave
push
sbb
jno
test
pop
cmp
sbb
jnp
dec
inc
ret
push
mov
cli
in
and
jns
dec
aaa
sub
pop
jns
xchg
pop
adc
pusha
std
dec
scas
sbb
xchg
out
xchg
imul
add
sahf
mov
pop
cmp
pop
add
test
int3
cmpsb
in
or
addr16
inc
pop
shlb
ljmp
push
divl
arpl
push
mov
xchg
test
shr
lock
call
jg
and
jl
xor
mov
das
mov
repnz
repnz
sub
addr16
add
xor
sub
xchg
loopne
mov
out
push
leave
jge
inc
mov
adc
inc
jno
xchg
in
ss
inc
iret
push
jae
js
aam
sub
mov
js
test
aad
mov
xor
aam
sahf
negl
mov
ret
lahf
aad
sub
clc
data16
mov
inc
mov
lods
xchg
ret
sbb
and
outsl
and
or
call
inc
adc
xor
fcmovnb
dec
notl
pop
dec
addr16
add
jge
jae
mov
xchg
data16
jne
push
ret
stos
in
movsb
negb
or
jle
jmp
xchg
in
push
jle
cmpsb
jno
push
fdiv
jb
push
jl
mov
inc
cmp
add
inc
xor
inc
fs
shl
and
cli
ljmp
fists
sbb
imul
lea
iret
mov
pop
fprem
das
into
cmp
movsb
xchg
sub
ss
cmp
dec
cmpsl
fwait
inc
xor
lahf
mov
pop
mov
icebp
add
dec
push
insl
dec
addr16
arpl
ror
shr
adc
setae
sbb
add
mov
stos
subl
lods
nop
jae
enter
jbe
pop
pavgb
xchg
jg
add
adc
sbb
or
pop
dec
shrl
add
and
fsubrs
mov
push
fs
sahf
daa
lcall
faddl
notl
dec
mov
pushf
xlat
mov
mov
xchg
pop
fwait
loop
push
push
inc
mov
stc
xor
rcll
pop
roll
push
ds
push
insl
int
jmp
mov
es
jl
push
sub
adc
testl
mov
enter
jmp
imul
insb
or
xor
jno
xchg
and
nop
xchg
inc
dec
loope
test
cwtl
adc
pop
mov
add
xor
push
arpl
inc
out
pop
aam
add
gs
inc
mull
xlat
or
in
idivb
xor
fimuls
cmp
das
sub
mov
bound
push
in
insl
rcrb
mov
xorb
jmp
mov
int
cli
mov
xchg
push
xchg
imul
sbb
pop
stos
sbb
jbe
sub
xchg
lret
adc
ffree
aaa
sub
aaa
xchg
xchg
popf
and
jg
and
add
pop
pop
inc
mov
and
dec
clc
mov
or
das
in
xor
xor
mov
arpl
mov
and
test
test
sbb
pop
add
jne
test
mov
rorb
nop
mov
daa
in
inc
jns
cwtl
xchg
ss
push
cmp
dec
cs
movsb
add
cmp
scas
jbe
mov
sahf
outsl
mov
xor
arpl
rcr
xchg
dec
xchg
mov
fildl
cmp
clc
mov
mov
cmc
xchg
cmp
or
cltd
je
sub
into
mov
test
push
sbb
in
popf
ja
dec
stos
jmp
mov
repz
inc
adc
mov
sub
loop
sub
repnz
add
sub
xor
cmpsb
sub
call
test
cvtps2pd
xchg
aaa
enter
rclb
rcr
and
push
push
outsl
icebp
imul
cmc
rclb
xchg
xchg
inc
dec
pop
dec
das
jecxz
pop
sub
sub
sub
repnz
rorl
js
push
pop
pop
mov
mov
pop
add
adc
mov
rorb
sbb
loope
xchg
in
int
xchg
gs
test
add
dec
push
xchg
and
push
sbb
sbb
iret
pop
les
popa
or
mov
and
push
sbb
push
xor
loop
loope
mov
das
mov
mov
mov
pusha
hlt
clc
movsl
push
sub
push
popa
test
push
pop
xor
sub
sub
xchg
adc
cmc
outsl
jp
add
pop
sub
cld
int
push
nop
inc
jnp
mov
add
movsb
popa
mov
test
mov
repnz
dec
jbe
fs
std
inc
lret
lret
dec
add
fisttpll
sti
leave
mov
dec
dec
jl
fwait
cmp
pop
idivb
push
jge
xlat
jge
faddl
popa
jnp
divl
sbbb
lods
and
pushf
mov
dec
imul
and
scas
cltd
pop
insl
iret
in
lods
enter
adc
loope
adc
cmpsb
nop
xor
bound
leave
lahf
adc
and
cmc
fsubr
mov
out
cli
xchg
fists
dec
test
sub
adc
push
mov
push
cmp
pop
cld
xchg
inc
xchg
pop
jnp
xchg
push
insl
dec
xchg
push
sub
fnstenv
into
loope
mov
dec
push
inc
cmc
push
faddp
test
cmp
dec
jne
mov
sub
js
pop
jns
in
mov
out
jae
sbb
inc
jns
loope
push
cmp
mov
xor
and
jl,pn
imul
int
and
sub
stc
addb
icebp
aaa
mov
out
xchg
cmp
inc
lods
lods
add
mov
call
cmpsb
outsl
adcb
xchg
add
pop
pop
inc
cmpb
push
mov
cwtl
test
ret
shrl
cmp
in
ret
daa
lock
scas
dec
push
lods
push
mov
sbb
add
fnsave
jp
lea
pop
mov
add
sub
test
dec
outsb
mov
pop
aad
lock
push
cltd
pusha
mov
and
add
jbe
in
push
jns
adc
test
rcrl
leave
inc
dec
repnz
ss
fidivrl
sbb
ror
aas
dec
int
rorl
imul
lds
scas
hlt
inc
test
cmpsl
out
call
push
xchg
insl
int3
cld
xor
xchg
insl
js
xor
pusha
dec
imul
icebp
push
xor
sbb
andl
out
jno
mov
inc
inc
sub
push
mov
inc
mov
das
inc
push
aam
sub
mov
cmp
mov
mov
xchg
call
add
jo
nop
cmp
in
icebp
ss
mov
cmp
dec
cmpsb
mov
nop
rcrl
mov
js
je
xchg
aam
push
fstpt
xchg
dec
imul
inc
mov
aaa
mov
les
movsl
or
testl
insl
cmp
aaa
dec
cmp
ret
cmp
enter
inc
xchg
rorl
loopne
inc
jns
sub
sti
into
gs
xor
or
or
imul
xor
lods
mov
cwtl
sbb
lods
inc
push
dec
pop
push
dec
mov
fnstcw
xchg
fisubl
cmpsb
scas
lret
fisubs
sub
and
mov
sbb
or
pop
xor
cmp
ret
out
inc
xlat
xchg
aam
sbb
fwait
pop
imul
iret
xor
adc
bound
es
xor
add
mov
cld
call
stc
aaa
sahf
daa
in
pop
fildll
and
test
or
pusha
fldcw
rorl
js
xchg
xlat
fs
push
roll
jnp
inc
into
xchg
inc
cmp
test
jmp
mov
or
pop
shr
fucomi
cmpsb
or
adc
jl
clc
fsts
addr16
jp
clc
mov
mov
movsl
or
lcall
test
stc
push
or
xchg
xchg
in
push
dec
arpl
in
stos
push
mov
jmp
aad
nop
sub
cmp
jb
movl
inc
pop
pop
out
scas
mov
mov
sbb
fisttpl
push
repz
mov
fs
cltd
pop
and
aas
mov
adc
push
je
arpl
push
sbb
fistl
mov
lea
add
subb
out
mov
cmp
push
inc
xor
pushf
inc
sbb
pusha
and
pop
pushf
out
pusha
or
or
sbb
test
add
sub
xchg
mov
sahf
mov
fldenv
xor
and
addr16
std
fdivrl
leave
outsl
loop
scas
loope
fwait
sub
sub
adc
sti
daa
cmp
in
add
and
dec
xchg
aaa
dec
pop
mov
fincstp
xchg
in
dec
jo
aas
outsl
not
jno
call
call
mov
fimull
test
dec
push
dec
or
jno
fadds
pusha
push
xchg
sub
shl
and
ja
shrb
mov
addb
pop
push
sub
popa
xor
shrl
loopne
iret
dec
inc
out
aam
or
sub
out
inc
sbb
sbb
cmp
in
aad
lods
sarl
shrl
pop
cmpsb
mov
dec
jmp
test
aaa
lcall
mov
lods
test
hlt
mov
adc
sub
movsl
sbb
and
sbb
out
nop
lret
stc
sub
sbb
or
inc
cmpb
je
xor
sub
sub
movl
push
and
xchg
cltd
xor
mov
jg
adc
sub
out
int
jb
stos
fists
sbb
xchg
ret
scas
data16
rol
mov
fstpt
xchg
loopne
call
cmpl
dec
cli
xchg
xchg
push
inc
sbb
iret
repnz
pop
fcmove
adc
mov
xlat
ljmp
or
and
sarb
imul
roll
sti
shlb
add
jno
jecxz
mov
shr
dec
enter
pushf
mov
cli
fcompl
adc
push
push
flds
or
ljmp
lret
adc
add
ss
filds
jl
jp
lahf
repnz
faddl
in
or
mov
cmp
add
or
sbb
std
push
adc
stc
push
movsl
test
test
xor
push
mov
loope
mov
into
add
inc
push
cmpsb
daa
in
shrb
pop
cmpsl
mov
dec
inc
andl
mov
adc
dec
push
sbb
rcl
fbld
mov
push
loope
bound
loopne
fucomip
sub
test
cmp
mov
adc
cmp
add
jmp
jle
sub
insb
mov
jo
mov
jge
adc
mov
jecxz
push
loopne
mov
ret
out
andb
js
mov
insl
rolb
and
leave
js
movsb
incl
out
cli
sbb
mov
shll
jg
movmskps
shr
test
test
test
push
dec
je
in
and
mov
fxch
mov
and
mov
mov
mov
inc
aam
fnstcw
imul
sbb
or
int
dec
dec
push
sti
sbb
leave
loope
jecxz
or
sbb
sub
gs
shlb
mov
cmp
inc
xor
pop
jecxz
pop
pop
aad
or
ljmp
mov
add
rcll
fs
mov
shlb
cwtl
sarb
mov
je
or
push
pop
sub
pop
pop
dec
cmp
fbld
or
xor
hlt
out
into
icebp
push
addr16
push
scas
imul
push
test
pop
decl
xor
popa
xor
cmp
es
iret
out
popl
dec
xor
dec
ljmp
mov
ja
mov
movsl
orb
add
scas
fdivs
pop
es
dec
outsb
push
fwait
xchg
test
jle
jmp
lods
cmpsl
mov
mov
iret
pop
cmp
into
jnp
pop
aad
ret
cmp
cwtl
lock
jns
fisubrl
or
rcll
jae
ret
lret
push
jg
inc
mov
sbb
ret
mov
fisttpl
sbb
xchg
pop
push
outsl
stos
cmp
mov
cli
push
or
add
test
mov
stc
scas
and
in
out
cmpb
int3
or
jne
bound
sbb
data16
mov
flds
lods
test
xor
lret
mov
adc
mov
push
ret
push
push
loopne
repz
addr16
loope
ja
fs
dec
mov
scas
ss
outsb
cli
and
add
lods
inc
push
xchg
or
jg
jmp
sbb
stos
mov
data16
scas
bnd
cmpsb
mov
xor
lds
inc
testb
in
mov
inc
xchg
or
repz
bound
jo
sbb
dec
movsl
arpl
cmpsb
dec
aas
push
les
int
nop
popf
loope
popf
stos
sbbb
movsb
enter
adc
inc
add
outsb
sub
xor
hlt
inc
push
call
sahf
ror
add
jg
jne
add
arpl
mov
or
mov
stos
sti
mov
cmp
repz
pop
jge
insb
inc
fsts
jmp
sub
sahf
mov
cwtl
js
cmp
test
lock
jae
inc
insl
lcall
aam
sub
mov
movl
ljmp
xchg
mov
mov
pop
stos
es
rcll
lea
or
bnd
addr16
dec
add
out
rcr
or
clc
add
into
mov
adc
int
js
cmp
jne
dec
push
cmpl
sbb
xor
std
cwtl
cld
pop
out
jle
aas
mov
lods
add
inc
jg
mov
mov
and
mov
mov
loopne
sub
test
mov
dec
iret
stos
xlat
pop
or
ja
push
inc
mov
xor
leave
add
push
iret
mov
data16
sub
subb
movsb
cmp
mov
call
jg
loope
into
mov
aas
mov
jno
out
pop
mul
dec
scas
pop
xor
xor
jns
mov
and
and
adc
or
jle
ret
ljmp
sub
icebp
mov
mov
imul
cmp
arpl
cs
lea
pop
pop
imul
pop
inc
xchg
mov
adc
cwtl
sub
out
iret
add
arpl
mov
jne
or
arpl
pop
out
shrb
and
pop
dec
outsl
pop
xchg
in
push
xchg
movsb
cmp
insl
test
movsl
aad
mov
sub
jno
pop
cmp
ret
arpl
out
aad
popa
out
push
out
add
jno
mov
mov
in
lea
mov
cmp
jp
cmp
and
scas
xor
ffreep
stc
push
xchg
push
dec
xor
dec
xlat
shll
jecxz
sti
into
cmp
out
cmpsl
cmpsl
lret
cltd
pop
push
test
out
push
add
fnstcw
pop
data16
scas
mov
loopne
xor
inc
lea
mov
ss
repnz
fcmovbe
lock
testb
sahf
sub
les
fidivs
sub
stos
xchg
dec
arpl
jnp
ss
pop
idivb
test
lds
gs
xlat
inc
jmp
cli
call
aaa
mov
mov
xchg
shlb
adc
lods
out
push
sub
jg
clc
outsb
xlat
adc
xchg
lret
add
mov
lret
cmc
add
cld
pushl
mov
repz
or
and
push
je
inc
sub
repz
shll
push
sbbl
stc
push
pop
adc
push
jne
les
ja
pushf
jecxz
xchg
test
ds
dec
mov
out
inc
lods
push
int
xor
and
pop
frstor
xchg
cmp
jecxz
rcrl
test
rclb
sbb
and
insb
xchg
jbe
pcmpeqw
les
mov
jg
sub
popa
jg
and
add
xlat
aas
jmp
mov
inc
adc
jns
pushf
jae
xor
mov
fcom
xchg
sbb
aaa
mov
dec
test
orl
sahf
subb
sbb
push
dec
mov
cmp
dec
mulb
clc
not
test
push
xchg
cmp
inc
sbb
mov
dec
xor
lret
rcr
cmpsb
rcrl
lahf
int
jl
adc
incl
pop
cmp
mov
mov
aam
jge
mov
clc
popf
and
ljmp
hlt
or
ljmp
push
lods
and
jo
pop
jl
adc
add
int3
and
mov
inc
mov
push
jmp
push
sbb
ror
xor
mov
shl
mov
lahf
fcoml
iret
mov
jno
scas
leave
jle
mov
aam
inc
adc
in
add
mov
jle
pop
mov
ss
ffree
ret
push
or
jle
xchg
add
push
in
dec
rcrb
adc
push
xor
gs
hlt
push
stos
outsb
jnp
in
popa
adcb
mov
jmp
std
jns
jmp
push
cmp
xchg
push
pop
pop
pushl
leave
mov
out
mov
xchg
stos
and
mov
sub
or
ds
lods
fldenv
mov
jecxz
add
jmp
sbb
pusha
rorb
mov
mov
mov
js
loope
ret
push
mov
cmp
movsb
lret
mov
xchg
loop
or
fisttps
in
xchg
das
push
mov
xor
add
repnz
adc
xchg
mov
mov
cmpsl
sbb
push
shl
lods
mov
jns
ja
add
add
and
inc
in
adc
mov
and
sub
mov
loopne
and
rclb
outsl
test
mov
loope
mov
xlat
test
xchg
es
shlb
test
rorb
orb
stos
repz
fimuls
inc
jmp
pop
int
inc
fidivs
mov
cmp
popf
sub
shr
pop
mov
jge
mov
decl
xor
je
dec
push
mov
pushf
xchg
arpl
or
in
jecxz
jge
add
imul
jae
cmp
mov
es
pop
movsl
sbb
lea
in
mov
cmpsb
rorb
psrld
adc
mov
and
clc
in
mov
sub
testl
inc
popa
popf
fbld
cmpsb
dec
pop
loop
mov
mov
xchg
nop
scas
lcall
cmp
mov
ficomps
scas
push
hlt
stos
mov
loop
add
popa
and
cwtl
aad
push
adc
inc
sbbb
mov
xchg
into
mov
in
insl
mov
lcall
adc
jl
and
inc
mov
shrl
dec
iret
pop
jae
divl
jnp
inc
roll
stc
cmp
loope
cld
insl
outsl
mov
shr
mov
mov
loop
into
lea
sbb
dec
dec
mov
xchg
inc
testl
imul
dec
pop
rcll
sbb
loop
sub
clc
vcvtpd2psy
cmovs
stos
pop
mov
xchg
les
sub
int
jp
xchg
mov
add
mov
lcall
or
push
aas
add
js
cltd
inc
and
add
or
pop
lret
call
adc
inc
cmp
mov
fdivrl
jo
cmp
data16
mov
dec
out
cmpl
sub
and
or
inc
movsl
mov
inc
mov
jl
sbb
popf
jne
out
dec
xchg
xchg
lret
mov
jge
mov
push
xchg
push
cmp
jnp
js
jmp
mov
inc
in
inc
xchg
mov
or
cmp
adc
cli
mov
jle
xchg
inc
sbb
mulb
cmpsb
les
mov
or
clc
fbstp
out
and
jmp
jb
mov
mov
std
dec
mov
lods
and
out
out
mov
ds
sbb
icebp
add
jl
popa
mov
int3
in
mov
cltd
sub
jnp
push
in
jnp
pop
cmp
cmc
fstp
push
js
mov
hlt
dec
pop
jae
test
hlt
je
add
imul
insb
hlt
and
in
fucomi
call
cmpl
adc
jg
je
cmpsl
out
imul
ljmp
mov
lret
xor
arpl
or
test
xor
cmpb
push
xchg
sub
push
pop
sbb
faddp
hlt
leave
es
mov
std
and
mov
inc
js
pop
adc
std
mov
jmp
outsb
and
push
std
insb
dec
iret
data16
or
xor
push
pop
lock
fnsave
mov
xchg
mov
rorb
sbb
and
enter
negb
sbbb
mov
and
test
ljmp
rorb
aam
or
xchg
and
out
adc
lret
pop
adcb
cld
and
xchg
push
dec
sahf
xchg
inc
mov
int3
pop
movsb
rcrb
fstpt
mov
ljmp
les
mov
push
and
stc
testl
mov
sahf
mov
clc
and
sbb
or
test
cld
pusha
in
insl
push
push
cmp
in
call
sub
mov
mov
gs
mov
xor
push
lahf
test
mov
push
push
sbb
scas
cli
cmpl
cltd
and
xor
loope
fisubl
daa
into
sbb
pop
adc
pop
fcmovnbe
mov
mov
push
loopne
int3
imul
fwait
mov
icebp
pop
mov
jecxz
insl
jno
test
push
out
sbb
sahf
lret
xchg
call
sbb
outsb
dec
and
fistpl
insb
push
mov
lret
mov
scas
shrl
mov
or
push
ret
andb
rcrl
or
dec
in
inc
mov
es
dec
inc
pop
mov
inc
xor
je
pop
popf
mov
or
sbb
cmp
jbe
adc
and
xchg
mov
shlb
enter
push
mov
arpl
ret
mov
sub
pop
inc
mov
dec
mov
xchg
jecxz
push
and
cmp
and
subb
daa
and
inc
out
aaa
jg
and
inc
xchg
or
mov
sarl
xor
sbb
jbe
lret
aad
mov
mov
adc
and
pusha
jmp
das
out
loop
out
sti
lods
loope
test
imul
sub
movsl
pop
aas
jno
lods
xchg
pop
jg
data16
scas
jbe
and
jp
jg
int
lret
xor
xor
stos
gs
add
inc
jb
mov
mov
push
jp
in
mov
inc
xchg
fldcw
mov
push
mov
xor
ss
fs
rol
stc
ja
inc
js
ret
lods
rcrl
scas
xchg
pusha
fmull
lock
test
fdivrl
xchg
xchg
sbb
mov
cs
mov
testl
loope
testb
mov
jo
fcomi
je
jb
dec
xchg
sbb
jo
pop
nop
ret
ret
adc
aas
lds
push
sub
je
addb
xlat
stos
insb
mov
iret
test
es
jecxz
lcall
cvtps2pi
mov
sub
mov
mov
dec
das
test
mov
push
adc
cs
xlat
mov
pop
lds
pop
in
mov
dec
mov
cs
mov
fisttpl
cld
mov
mov
mov
daa
fisubl
or
clc
adc
dec
push
cmp
xor
or
inc
lock
scas
pop
xchg
stos
clc
lret
xor
adc
test
xor
fxch
mov
fistl
ret
cmp
stos
sarl
repz
aad
cwtl
pop
cmpsb
pop
dec
mov
out
adc
sbb
lahf
imul
adcl
bound
enter
jecxz
jbe
and
inc
into
cwtl
loopne
in
shrl
jle
into
jl
popa
mov
or
repnz
sub
jecxz
push
stos
stc
mov
addl
outsb
in
lods
mov
les
in
in
insb
jle
dec
sub
arpl
dec
jbe
jb
inc
push
mov
jno
mov
insl
and
push
cmp
int3
fistpll
adc
mov
inc
fsubl
data16
rorb
cmpb
mov
data16
sbb
loope
xor
gs
pop
in
popa
outsb
pop
mov
mov
int
or
push
pop
movsb
stc
imul
add
nop
adc
scas
test
and
adc
mov
clc
cld
or
add
mov
sahf
int3
ret
mov
fbstp
test
push
cmpsb
mov
sub
fs
jg
int3
call
or
pusha
pop
lds
pop
loope
or
fistpl
ret
in
and
or
fwait
mov
lret
std
sbb
les
rclb
or
sub
mov
jns
adc
aad
xchg
test
push
add
mov
call
push
xchg
push
test
flds
push
stos
stc
arpl
out
cltd
int3
arpl
sub
popa
adc
cs
adc
pop
fmulp
mov
add
outsl
int3
sbb
scas
loope
mov
rcr
cwtl
and
jmp
xchg
jae
and
fcmovbe
sbb
add
icebp
rorb
mov
jne
insb
lret
adc
xchg
mov
outsl
gs
lock
dec
ss
fsubl
xor
pop
popa
sbb
jl
or
add
pop
stc
dec
addr16
cli
xor
test
popf
cltd
push
rorl
mov
aam
lcall
inc
or
lock
cmp
cli
xacquire
xchg
imul
mov
notl
fdiv
sbb
rcrb
mov
ret
sbb
sarb
nop
xchg
cmpsl
jp
mov
std
xchg
insl
loope
jnp
outsl
mov
das
rorb
inc
or
shr
sub
sahf
cs
lret
mov
mov
test
mov
mov
add
icebp
xchg
out
loope
out
xchg
or
notb
shlb
pop
fadds
sub
out
rcl
js
in
lock
dec
pop
imul
bound
add
dec
xchg
jbe
jp
dec
sti
or
or
inc
adc
stos
rorl
or
in
lock
jb
jne
rcrb
adc
shlb
sbb
push
mov
push
dec
and
aas
lods
arpl
push
adc
cmp
mov
aaa
and
jmp
repnz
scas
push
mov
adc
cmp
loope
mov
call
out
imull
pusha
and
decb
sbb
cmp
test
lret
movl
mov
popf
cli
push
cmc
int3
jnp
popf
loope
mov
fisttps
adc
fsubrl
add
test
cld
ja
xlat
cmpsl
int3
mov
mov
sub
cltd
cltd
imul
xchg
push
lods
push
clc
clc
aam
jb
inc
loop
jbe
lcall
jecxz
fdivrl
mov
mov
mov
jge
push
dec
and
add
cwtl
rdmsr
sub
add
jo
bound
cli
sbb
sub
out
push
push
aad
xor
push
adc
mov
in
dec
push
sbb
je
ss
fsubrl
mov
cmp
push
es
test
mov
cltd
dec
arpl
sub
in
test
mov
lea
int
xor
mov
inc
cmpsb
cmpsl
adc
mov
frstor
fimuls
pop
mov
and
test
xchg
fimuls
sbb
pop
dec
xchg
fucom
and
mov
imul
lea
into
arpl
lock
lret
cmp
mov
and
fbld
inc
or
adc
arpl
fs
mov
push
std
enter
push
jp
mov
push
stos
les
sarb
gs
out
cmpsb
or
xlat
add
jns
cmpsl
ret
es
sub
popa
and
xchg
int3
mulb
xchg
stc
frstor
ja
inc
cwtl
shrl
add
ja
cmc
mov
jle
cmp
and
in
fidivs
pop
fidivl
fiaddl
dec
das
clc
outsb
mov
and
iret
adc
pop
dec
loop
jge
into
stos
paddsb
sahf
cmp
mov
test
sub
xchg
out
out
rol
mov
daa
add
gs
xor
arpl
pushw
rcrb
jo
test
xchg
push
addr16
mov
xor
ja
lods
mov
pop
or
pop
add
jbe
or
pop
jl
or
cmp
inc
sub
in
aaa
cs
and
bound
jae
xor
ficompl
push
lods
ss
scas
into
mov
mov
movsl
out
jae
test
push
sahf
mov
sub
cwtl
and
loop
stos
repz
lds
rolb
jge
inc
mov
fnstenv
cmp
sub
and
lods
inc
in
sub
repz
frndint
ja
outsb
push
aaa
icebp
es
or
mov
cmp
mov
test
add
iret
xchg
aas
add
sti
dec
jne
dec
cltd
mov
rcrb
xchg
imul
mov
xchg
or
sbb
je
dec
in
fisttps
inc
and
dec
fcmove
jmp
je
repz
dec
mov
mov
outsl
popa
sarl
fsubs
dec
mov
daa
loop
cmp
pop
mov
mov
xchg
mov
xchg
loop
add
es
xor
push
push
in
sbb
pop
es
inc
or
orl
lock
or
sbb
sarw
ds
cwtl
in
sbb
push
arpl
cld
int3
or
xchg
rcrb
cmp
aad
or
outsl
pop
aaa
fistpll
dec
adc
xlat
nop
insb
cmpsl
xor
inc
mulb
js
incl
mov
adc
test
out
mov
movsb
mov
xchg
adcl
lcall
xor
cld
push
inc
enter
pop
add
push
push
movsb
sbb
test
and
sbb
outsb
rcr
sub
jmp
jge
or
jmp
lret
fcomps
inc
and
pushf
mov
push
test
push
cmpsb
pusha
sbb
mov
bound
imul
insb
dec
icebp
xchg
cld
or
lret
push
jp
pop
mov
shll
push
and
sbb
ds
xor
or
xor
pusha
or
push
xor
dec
sbb
in
frstor
jmp
mov
xor
fldl
sbb
mov
fisubrs
loopne
lcall
stos
lock
sbb
mov
or
push
nop
jns
push
outsb
push
mov
into
repnz
pop
movsb
sub
fidivrl
fnstcw
push
xor
push
inc
loopne
jmp
and
jne
iret
shlb
jne
fwait
int
mov
cwtl
adc
bound
pop
in
pop
dec
aam
fisubrl
rclb
xor
or
das
or
stos
adc
std
int
bswap
sub
add
in
inc
ret
dec
popf
insl
mov
add
inc
ljmp
cwtl
in
add
lods
insl
faddl
cmp
fsubl
add
pop
dec
push
stc
xchg
xchg
dec
dec
add
shll
sub
pop
dec
adc
mov
mov
and
outsb
add
inc
pop
aas
mov
mov
dec
and
or
xchg
mov
xchg
mov
mov
dec
aad
aam
pop
and
push
add
inc
pop
xchg
insl
jnp
loopne
sbbl
lcall
xchg
pop
gs
test
insl
xchg
pop
inc
mov
jg,pt
movsl
jne
clc
or
cld
repnz
push
cmp
jnp
and
dec
mov
das
xchg
inc
xlat
addr16
and
adc
sbb
and
out
mov
stc
mov
incl
xor
push
scas
xchg
paddw
push
push
push
cmp
mov
mov
clc
addl
pushf
mov
mov
sub
xor
ret
inc
fdecstp
scas
jbe
adc
dec
sarl
in
sbb
fisubrl
dec
cmp
xor
les
mov
adc
int
or
and
jle
sbb
jne
out
addb
lods
popa
repz
ja
pop
adc
push
adc
xlat
popa
cmp
in
mov
lahf
out
jo
sbb
mov
std
mov
fldcw
jnp
mov
push
sub
add
push
and
fcoms
inc
scas
fnstcw
jecxz
jge
stos
xchg
dec
xchg
cmp
stc
pop
lods
pushf
push
xchg
or
les
outsb
push
adc
mov
push
mov
mov
add
or
cmp
sub
fcmovb
mov
xchg
nop
xchg
xchg
pop
jbe
add
adc
jnp
mov
pop
stos
adc
in
sbb
adc
fidivs
cwtl
nop
and
ljmp
adc
cmpsl
jp,pn
cld
jno
iret
mov
or
outsl
push
and
pop
daa
fbld
popa
jg
jp
sbb
sub
adcl
sbb
mov
cmp
xchg
ja
es
xor
xchg
jge
xor
pop
add
jns
dec
gs
lret
ficoml
lods
fwait
repz
ds
ds
pop
mov
cli
movsl
shrl
ror
or
jp
enter
lods
xlat
stos
sbb
movsb
pop
pop
cmpsb
sbb
mov
lret
popa
xchg
push
out
fimull
adc
stos
xchg
jg
hlt
lods
or
incl
imul
inc
or
sbb
cltd
int3
in
aam
imul
lret
dec
or
out
cmp
shl
imul
loop
push
fcmovnu
xchg
push
add
out
mov
inc
or
cmp
lret
xorb
adc
inc
push
mov
pop
fsqrt
cmp
sti
movsl
cmp
jae
push
xchg
pop
rol
hlt
mov
ljmp
jge
enter
sbb
mov
dec
mov
and
mov
pushf
enter
xor
mov
mov
int
cmp
pop
pop
or
pushf
pop
fnsave
mov
pop
or
cmp
icebp
ss
stc
push
loopne
in
push
mov
loop
loop
jge
push
lods
repnz
inc
bound
jbe
roll
imull
inc
pushf
scas
xchg
mov
movups
mov
iret
enter
inc
stos
shrb
mov
dec
jbe,pn
add
push
mov
xor
pusha
add
scas
cmpsl
sub
cld
shr
inc
cltd
outsl
inc
ds
push
pop
or
cmpsl
mov
popa
mov
call
pop
movsb
xchg
mov
pop
jecxz
add
repz
mov
cld
push
nop
daa
fmulp
lahf
pop
stc
mov
imulb
mov
adc
aas
cmpsb
addr16
int
jne
and
and
fdivrp
sub
inc
bound
ljmp
jbe
iret
sbb
sub
push
mov
inc
mov
nop
xchg
mov
adc
sahf
or
jns
adc
subl
and
adc
and
and
fs
icebp
insb
cmp
repz
add
enter
jns
call
out
jns
cmp
bound
inc
aad
lret
inc
mov
je
inc
movsl
int
cs
mov
pop
fsubrs
notb
testl
jae
cmp
xchg
push
aam
adc
inc
jge
or
push
cli
fcoms
mov
jns
rcll
push
xlat
cmp
jge
call
imul
cli
insb
call
inc
ror
lcall
stos
xchg
arpl
xor
add
sub
or
dec
fwait
je
or
cld
jp
movsl
adc
mov
ss
out
xchg
scas
adc
mov
sub
push
mov
sub
inc
aam
fcomi
lea
rorb
cmp
out
sub
fildl
xor
repz
lock
shll
or
cmp
rolb
xchg
pushl
mov
ret
push
lods
mov
mov
pop
insb
imul
inc
mov
xchg
xchg
daa
or
pop
test
xchg
pop
imul
jp
outsl
add
pushf
fisttpll
push
in
clc
dec
cmp
insb
xor
shlb
mov
lcall
inc
xor
mov
mov
out
push
sub
lret
xchg
jne
ret
int
jno
cmp
cmpsb
xor
daa
scas
mov
or
out
stos
or
mov
sbb
xorb
push
cmp
or
fcom
sub
and
mov
mov
call
add
push
ret
movsb
insl
inc
test
jne
mov
dec
fucomp
fnstsw
rorl
sti
dec
orl
adc
add
es
jle
cmp
lea
cmc
cwtl
cmpsl
outsl
mov
mov
shr
mov
inc
cli
cmpl
loopne
scas
push
push
test
shl
enter
xchg
mov
jno
sti
pop
sbb
jmp
leave
jl
das
xchg
jp
lods
lahf
push
mov
sub
cmc
shlb
mov
jmp
mov
int3
jnp
pop
pusha
cld
arpl
sub
outsb
cmp
pop
pushf
pop
xchg
rcrl
sub
jp
in
jno
jnp
or
mov
jg
fistps
sub
push
cmp
xor
gs
enter
pop
cli
fwait
mov
xor
inc
testb
inc
lcall
andb
lcall
outsb
adc
or
outsb
mov
and
pop
mov
inc
clc
pop
add
jns
repnz
jl
jg
scas
fwait
shrl
jge
lods
movsb
stos
xchg
call
aas
xorl
lret
lea
sub
lock
aad
jnp
data16
sti
mov
mov
gs
bound
adc
stos
shrl
mov
pop
sbb
gs
fnstenv
bound
cmp
movsl
lock
mov
mov
or
ficompl
add
fidivl
inc
mov
pusha
push
imul
cmpsl
dec
das
cmc
lret
dec
push
out
ficomps
mov
adc
mov
out
push
idivl
ret
adc
pop
mov
pop
aaa
sbb
pop
fistpll
mov
outsl
adc
fbld
icebp
stos
add
jns
pop
loope
or
mov
neg
mov
or
insb
jno,pt
push
cld
les
mov
dec
xor
std
push
jno
pusha
es
mov
adc
or
add
push
mfence
scas
dec
jo
int3
rcrl
popw
aaa
cli
jo
icebp
cli
stos
push
pop
std
shll
icebp
aad
leave
xchg
fadd
dec
fstpl
in
dec
and
adc
or
and
mov
mov
cmpsb
nop
insb
out
cmp
movsb
ss
cltd
stc
addr16
mov
mov
jnp
dec
jo
hlt
xlat
nop
mov
imul
lahf
stos
push
dec
dec
xor
imul
sbb
repnz
and
pop
xchg
lret
push
dec
popa
inc
in
pop
push
shlb
mov
mov
jmp
dec
adc
and
xchg
bound
mov
pusha
lock
sahf
in
int3
add
mov
cltd
popa
les
xchg
push
jb
rcl
sar
sub
in
sar
add
jne,pt
adc
imul
push
push
mov
adc
test
test
test
xchg
jl
faddl
cmpsl
ret
add
sub
stos
mov
xchg
out
mov
sub
data16
pop
cmp
lea
xor
sbb
adc
scas
lds
sti
cld
faddl
lret
clc
push
lahf
push
add
lcall
and
int
push
cmp
sub
sbbb
int3
push
dec
mov
sbb
mov
sbb
addr16
adcb
inc
stos
daa
xor
pop
testl
cmpsb
push
push
daa
shrb
cli
mov
inc
dec
scas
xchg
add
test
stc
cld
data16
lds
xchg
mov
mov
cmp
dec
movsl
call
xchg
lods
test
add
dec
and
inc
js
sbb
dec
push
mov
pop
in
or
orl
mov
andl
xor
movsl
shl
pop
inc
in
daa
xor
addr16
push
sbb
iret
sub
or
add
rcrb
test
dec
neg
rorb
xchg
pop
cmp
mov
scas
push
sbb
cs
lret
mov
jge
xlat
out
in
imul
xchg
jecxz
cmp
shrb
iret
sub
and
jge
popa
out
pop
popa
dec
adc
jecxz
xor
cmp
insl
add
data16
push
sbb
pop
sahf
lods
iret
loope
xchg
mov
out
scas
mov
push
rorl
adc
xlat
and
in
mov
outsb
test
imul
pop
inc
push
loopne,pn
in
push
jo
pop
lret
pop
cmp
mov
popf
jle
push
xchg
adc
mov
push
dec
test
dec
ret
movsb
mov
das
cmp
push
into
fnstsw
push
cmpl
stos
sbb
sti
sub
inc
sub
push
or
mov
lahf
mov
addr16
shlb
mov
mov
in
sahf
int3
mov
cmp
adc
cwtl
and
call
imul
pop
lods
out
adc
jae
push
push
xorl
outsl
sub
inc
cmp
and
imul
mov
push
xorl
ds
cmp
adc
enter
jecxz
mov
xchg
inc
jl
jecxz
jb
or
pop
jp
push
jbe
cld
pop
fidivs
gs
enter
je
arpl
xchg
inc
orb
dec
sbbb
inc
iret
test
mov
scas
push
rcrl
repz
fcoml
rolb
dec
ret
cmp
sbb
outsl
repz
not
imul
insl
decl
imul
cltd
jbe
mov
test
mov
mov
and
hlt
call
and
cmp
jno
and
fcoms
pop
adc
out
mov
jo
inc
cmp
push
lods
xor
push
lock
cmp
sub
add
fistpll
out
add
cmp
test
popf
sbb
inc
push
add
pop
out
in
shll
dec
push
jno
mov
mov
out
lret
test
aam
push
xor
add
stc
mov
jb
insb
xchg
testl
flds
pop
aam
cs
cli
aad
imul
mov
mov
pop
lock
loop
push
xchg
mov
ds
mov
inc
push
pop
sub
dec
lods
lock
leave
and
cmp
jo
lret
fadds
int3
sub
inc
xchg
jle
stc
dec
ret
dec
xchg
adc
cmc
mov
and
rcl
pop
inc
mov
lcall
push
lds
and
add
mov
jne
stos
rorb
and
mov
pop
ljmp
inc
ret
xor
dec
jnp
jbe
ljmp
int3
xor
mov
loop
bound
in
mov
cld
adcb
insl
xchg
shll
loopne
das
lods
and
inc
pushl
dec
sub
sahf
lock
shr
pop
add
data16
push
sti
inc
xor
mov
push
xchg
sub
cmp
mov
test
jl
fnstenv
rolb
lahf
sar
xorb
call
mov
jnp
dec
xchg
sar
xchg
push
jg
scas
pop
adc
jecxz
xchg
inc
sbb
xchg
jmp
mov
out
adc
fwait
sbb
or
mov
lock
add
das
ss
dec
pop
je
hlt
stos
jp
mov
in
inc
pop
dec
dec
pop
inc
or
jle
cmc
xor
lods
sti
outsl
sub
pop
mov
adc
pusha
sub
pop
mov
enter
and
fwait
pop
lock
cmpsl
jge
ficoms
imul
roll
lods
dec
mov
lea
adc
xchg
mov
and
sbb
stos
cmp
dec
nop
pop
imul
adc
andl
lcall
xchg
hlt
xchg
mov
clc
scas
mov
sbb
lea
test
mov
test
mov
notb
mov
push
push
and
hlt
fisubrl
test
fdivrs
pusha
sbb
popf
imul
xor
inc
and
movsb
dec
test
pop
repnz
cmp
pop
movsb
jbe
jb
in
lods
add
push
mov
add
mov
sahf
mov
sub
xchg
jecxz
xor
iret
das
sub
sub
cmp
notl
mov
jmp
add
scas
addb
xchg
aad
int
aad
test
mov
out
mov
adc
xchg
stos
jno
sub
popf
add
daa
icebp
xchg
lcall
sbb
mov
aam
les
xor
sub
xor
adc
jno
dec
shl
fmuls
jp
mov
imul
ret
jae
lret
jmp
jl
push
sti
or
in
inc
fildll
mov
cmpl
push
pusha
inc
xchg
cmp
into
mov
mov
or
daa
mov
in
xchg
and
rcrb
cmpsb
mov
arpl
lods
arpl
outsl
dec
inc
outsl
add
mov
out
rcrl
push
mov
xchg
sub
add
popf
pop
ret
xlat
pop
push
test
jl
mov
ret
push
out
mov
jbe
arpl
andb
mov
add
xchg
movsb
sub
cli
xchg
or
sbb
pop
lock
cmp
js
cli
mov
fwait
cltd
cmc
lea
jns
cli
mov
cmpsl
dec
xchg
faddp
bound
imul
sets
in
icebp
loop
outsl
xchg
incb
mov
sbb
stos
xor
psadbw
pop
inc
xor
push
insl
push
bnd
xor
jae
shlb
or
xchg
es
pop
or
dec
mov
mov
add
or
jnp
into
mov
jecxz
fsubs
jo
jnp
add
adc
pop
loope
mov
add
call
bound
dec
xchg
cmpl
fcmovu
and
sarb
jns
cmp
scas
add
jno
stos
cld
fsub
cmp
stos
push
loop
pop
lahf
test
mov
dec
lods
repnz
add
add
xor
mov
outsb
push
mov
add
add
in
outsb
aam
xchg
adc
push
mov
stos
fnstcw
insb
add
bound
fldt
out
iret
into
and
pop
mov
cli
int
loop
js
push
jbe
ret
incl
adcb
ret
mov
mov
adc
mov
jbe
inc
out
shrl
mov
nopl
lea
sub
out
fwait
or
xchg
add
movsl
ret
or
jg
jmp
pop
inc
jle
leave
out
dec
cmp
int3
outsb
jle
decl
sbb
mov
dec
lods
push
mov
add
cmp
cmpb
aam
jns
mov
sub
cmp
or
sar
mov
stc
push
fs
rcrb
mov
cmp
jl
loopne
xchg
and
jo
pop
xchg
jo
movsl
mov
fs
out
lds
fwait
in
out
and
dec
or
xchg
mov
or
aaa
aam
in
cmpb
push
push
dec
dec
cmc
and
dec
mov
lds
sbbb
fucomip
push
mov
std
and
pop
adc
sub
mov
lods
push
in
add
xchg
push
cmp
inc
pop
mov
jp
sub
inc
dec
fldt
pop
loop
rcrl
pop
daa
lods
sub
bound
test
inc
jecxz
xor
xchg
push
lods
pop
sbb
cmpsb
in
xor
movb
dec
pusha
test
fimull
sub
adcl
adc
fstpl
xorb
test
int3
test
push
andl
xchg
adc
dec
xor
mov
jo
jo
sbb
loop
jge
mov
iret
addr16
das
in
out
cwtl
and
das
imul
mov
mov
and
in
arpl
sbb
idivb
ret
nop
xor
dec
xor
or
inc
mov
jae
loope
not
mov
insb
pop
inc
test
mov
cmp
clc
jbe
lahf
dec
ljmp
cltd
sub
xchg
mov
movl
mov
shl
jmp
movsb
js
dec
loop
jno
adc
xchg
lret
push
cs
ficoml
hlt
cmpsl
xchg
jle
aad
push
clc
addr16
insb
insl
push
cmp
push
sahf
dec
adc
mov
call
es
stos
adc
dec
test
mov
push
psadbw
icebp
adc
sub
jne
sbb
mov
loope
cmpsl
popa
test
cwtl
mov
mov
aad
sbb
mov
std
pop
mov
fnstenv
and
shrl
push
cmc
mov
es
or
jmp
adc
inc
lea
mov
je
mov
out
je
popa
scas
rep
push
paddsb
leave
sub
addr16
mov
sbb
test
jecxz
out
xor
dec
xchg
sbb
in
pushf
and
xchg
sbb
loopne
adc
in
fcoms
test
jp
adc
fimuls
push
inc
std
push
insb
push
jmp
mov
mov
sub
mov
or
shll
addr16
enter
xlat
sub
jne
out
andl
dec
push
mov
adc
fcoms
mov
lahf
mov
adc
mov
scas
loope
inc
xor
mov
repnz
mul
xchg
movb
loop
push
loop
mov
mov
and
lahf
out
mov
shll
ds
and
adc
sub
scas
cmp
in
mov
or
out
scas
inc
loope
mov
pop
je
mov
push
sbb
mov
movsb
and
bound
cld
icebp
lods
and
xchg
xor
andl
loop
xchg
in
mov
add
push
dec
repnz
gs
call
xchg
xor
cmp
fnstenv
adc
clc
sub
xor
jno
mov
push
lahf
xchg
les
ficomps
cmp
outsb
shrl
dec
movsl
xchg
popa
mov
popa
push
les
jl
addr16
jmp
jecxz
push
mov
scas
ja
stos
into
filds
jbe
jnp
fs
sbb
xor
mov
outsb
pop
cmpsb
leave
or
scas
sbb
out
pop
push
in
out
add
rcrl
iret
pusha
and
stos
mov
mov
notb
push
int3
sbb
gs
scas
arpl
ja
pop
dec
sbb
xor
pop
sbb
sbb
mov
xor
or
dec
pop
cld
out
jg
fs
mov
dec
xor
mov
push
mov
dec
xchg
fs
stos
jmp
push
push
or
mov
cmp
mov
aas
or
ret
pusha
inc
hlt
incl
sarl
cld
inc
aam
cs
mov
jg
sbb
pop
sub
insl
inc
out
out
jbe
push
cmpsl
mov
adc
sbbb
inc
dec
leave
out
mov
adc
cmp
push
rcrl
fstl
jp
pushf
push
mov
adc
and
xchg
imul
fistpll
xor
mov
mov
mov
jno
or
repz
pop
stos
add
add
roll
scas
adc
pop
mov
imul
or
cmp
orl
lret
cli
pushf
adc
enter
mull
xchg
enter
test
ja
fsubrs
mov
sub
stos
adc
mov
xlat
mov
xor
adc
mov
inc
into
mov
insl
inc
jns
push
cwtl
or
imul
ret
stos
or
popf
lcall
scas
mov
clc
or
call
cld
jecxz
mov
xchg
inc
sbb
adc
add
inc
loope
dec
test
das
ds
fwait
xchg
mov
bound
adc
mov
mov
test
and
jle
pop
jno
inc
or
mov
add
jno
insl
dec
hlt
into
adc
fbld
test
or
lods
push
sbb
enter
inc
dec
push
mov
fiaddl
in
hlt
xor
sbb
xor
in
test
pushf
lods
pop
inc
pop
shlb
push
lods
push
mov
dec
lret
pop
add
jo
xchg
movsl
cld
sti
jnp
or
and
mov
jb
mov
cs
fcomps
fsubs
jns
ret
and
mov
lcall
inc
hlt
call
mov
xlat
mov
inc
test
std
jns
pop
adc
inc
pusha
mov
pop
popa
push
or
int
out
out
adc
insb
xchg
das
and
jge
inc
mov
mov
jne
pop
cld
outsb
loop
pop
jp
mov
jle
mov
jg
into
test
or
mov
jae
mov
or
outsb
adc
and
orl
push
push
fdivrs
pop
aad
sub
std
call
push
outsl
into
gs
nop
pop
enter
idivl
in
ja
pop
sub
jge
into
les
inc
or
mov
push
fmull
rorb
pop
xlat
inc
rorl
fdivrs
jmp
xlat
ja
lahf
dec
jl
loop
aad
add
rcrl
sbb
ja
mov
test
jb
jns
push
iret
cwtl
movsb
rcl
and
and
inc
mov
cmp
pop
add
pop
sahf
adcb
daa
jmp
icebp
enter
rcl
push
pop
xchg
or
out
out
xor
inc
adc
lock
lret
xchg
mov
push
mov
dec
mov
adc
lcall
push
jno
lock
aam
jo
dec
out
sbb
dec
push
adc
push
out
lods
inc
inc
xor
lock
inc
fidivrs
fists
jp
or
pop
int3
add
push
mov
push
adc
ds
outsb
mov
inc
push
or
cmp
dec
cli
mov
in
sub
cs
pop
xchg
sub
mov
sbb
xor
mov
insl
lods
pop
mov
or
mov
push
sarb
jge
int3
dec
push
addr16
into
pop
and
popf
subl
sbb
mov
xor
xor
jecxz
sub
clc
xchg
dec
and
shlb
sub
cs
push
adc
in
ss
mov
mov
roll
mov
outsl
incl
lds
push
scas
jne
mov
mov
mov
mov
in
push
aad
xorb
xchg
fistps
add
mov
mov
mov
loope
push
push
popa
and
dec
mov
mov
xchg
imul
pop
or
int
int3
in
lods
dec
mov
mov
pop
dec
mov
fldcw
mov
cmp
adc
cmp
leave
sub
add
fld
dec
fbstp
leave
pop
fcmovbe
icebp
aaa
insl
inc
xchg
sbb
ljmp
jl
scas
mov
pushf
pop
inc
adc
mov
mov
jae
jno
imul
pop
jo
repz
in
and
or
sbb
iret
pop
xor
in
pop
enter
arpl
movsl
dec
ficoms
push
aaa
add
adc
adc
test
lods
sbb
adc
mov
pop
outsl
or
add
xor
daa
in
daa
pop
pop
inc
orl
xchg
sub
clc
push
inc
fsts
push
es
repz
jle
cwtl
sbb
jl
lds
je
cmp
push
lret
cmp
cmp
ret
add
adc
mov
and
jmp
xchg
pop
test
and
adcl
js
sub
jb
and
cmp
rcrb
jl
loopne
inc
shl
sbb
or
aas
icebp
out
movsb
inc
mov
sbb
adc
inc
jne
fimuls
cld
mov
cs
daa
bound
cmp
imulb
sub
adc
mov
out
lock
and
add
mov
jb
dec
xchg
or
idivl
pop
dec
dec
mov
adc
cmc
daa
sbb
mov
in
in
sub
bound
clc
pop
out
in
enter
test
xorb
das
sbb
inc
sub
xchg
xchg
sbb
out
add
in
dec
aam
cld
jnp
int
mov
addl
rclb
leave
lock
mov
xchg
sbb
ljmp
mov
stc
lods
adcl
fwait
mov
push
adc
in
stc
xor
fists
xor
sbb
sub
push
enter
test
mov
xchg
pushf
mov
imul
cmc
cltd
mov
loopne
imul
test
int3
jnp
fmull
data16
pop
jno
fidivrl
push
push
inc
shlb
test
movsb
pop
aam
mov
repnz
cmp
push
test
cmp
inc
bound
rcr
inc
pop
int3
cli
js
adc
lock
and
mov
popa
dec
out
adc
dec
das
rcll
cmc
pop
imul
pop
mov
jmp
hlt
inc
sbb
mov
adc
sbb
add
repz
push
pop
enter
add
sbb
pop
cmp
and
iret
sbb
ffreep
xchg
cltd
int
mov
lret
mov
sti
mov
jb
jge
pop
xchg
aad
imul
aam
repnz
sub
ljmp
xor
xchg
mov
pusha
out
loope
pop
mov
inc
stos
scas
mov
add
movsb
into
and
shl
mov
cmc
test
push
push
sbb
cs
and
mov
outsl
xor
ret
and
inc
out
jbe
jmp
bswap
es
addr16
loope
dec
fiaddl
mov
and
rcrb
mov
call
sahf
mov
pop
jl
pop
jmp
data16
mov
xor
shrb
cli
jnp
mov
cs
movsl
nop
scas
sarb
mov
adc
cmp
bound
and
mov
popf
stos
or
outsl
and
sbb
mov
add
cs
mov
int3
test
or
icebp
fdivs
sub
jbe
cmc
mov
cltd
in
adc
popa
cs
int3
push
test
push
push
lcall
xchg
popf
cmp
jnp
mov
aad
mov
mov
fs
jne
out
add
loop
mov
leave
andl
aaa
or
insl
fimuls
adc
mov
mov
adc
add
mov
outsb
sahf
mov
mov
cltd
cs
rorb
inc
and
or
shrb
or
scas
ja
pop
ja
jecxz
jecxz
sub
aas
push
mov
repz
push
rorb
andb
scas
shr
xor
mov
push
xchg
xchg
xchg
sbb
jmp
or
dec
inc
xchg
add
jmp
ljmp
setae
inc
cwtl
rcrb
push
sub
xchg
push
imull
loope
in
les
adc
das
fwait
jae
jbe
jns
jge
pop
punpcklwd
cmp
fwait
test
sub
call
adc
mov
xor
test
mov
jmp
or
and
mov
or
jg
adc
or
int3
inc
push
sbb
push
mov
mov
pusha
sarl
mov
les
and
add
lock
andl
pop
push
push
dec
loope
jle
cmp
jno
enter
sahf
xchg
cmc
or
popa
hlt
shrb
cmc
or
add
pop
xor
xchg
pushf
xchg
sub
inc
jle
sub
out
bnd
and
cmp
shll
xchg
inc
nop
dec
ljmp
out
std
cmc
add
xor
xchg
mov
shll
out
add
ss
aad
rorb
es
pop
lea
mov
push
mov
push
ret
mov
sub
push
bound
stos
dec
mov
testb
outsl
cmp
pop
insb
sub
mov
cld
or
push
xchg
leave
xchg
ffree
push
inc
jae
test
call
sub
jp
cmpsl
xor
mov
ret
lret
int
xchg
imul
lahf
xor
push
mov
or
push
insb
test
pop
cwtl
fmuls
push
aad
jo
pop
cmpsb
je
and
dec
dec
mov
shlb
notl
push
push
mov
mov
adc
roll
jge
push
vxorps
aad
and
outsb
aaa
nop
mov
sub
addb
jns
data16
hlt
xchg
xchg
sbb
test
dec
out
jno
cmp
aas
hlt
ss
adc
in
ss
inc
insl
outsb
add
pop
int3
pusha
sbb
cmc
xor
cwtl
pop
cmp
jle
fists
xchg
ja
dec
push
je
test
js
or
cmpsb
adc
repz
bound
in
cmp
cmp
cltd
movsl
xchg
jle
push
lods
scas
out
mov
push
test
jmp
pop
outsl
dec
or
clc
loopne
xor
dec
lret
jge
inc
jns
xchg
jle
push
push
dec
and
dec
or
out
lods
push
push
dec
cmp
and
jl
xorb
push
daa
xchg
mov
hlt
xor
imul
cmc
fcmovbe
gs
daa
jne
int3
mov
dec
push
clc
mov
stc
inc
and
xor
jnp
nop
or
pop
gs
popa
aam
les
mov
sub
xchg
iret
loop
in
pushf
sub
or
pop
cwtl
pop
loop
loopne
mov
cmp
mov
adc
movsb
fstpl
cs
mov
movsb
xorb
clc
inc
cwtl
or
in
xor
stc
in
xlat
mov
mov
popf
mov
mov
xor
fdivr
inc
out
cmpsb
dec
cmc
adc
cmpb
aas
push
in
mov
mov
jmp
adc
pop
xor
fldt
fists
das
in
mov
bound
or
xchg
jbe
inc
push
stos
dec
nop
and
cmpsb
mov
fldenv
fcmovnbe
lret
dec
xacquire
insl
repnz
es
or
adcl
call
cwtl
push
fs
inc
dec
adc
cmp
dec
cmp
add
push
in
dec
call
sub
mov
mov
popf
sub
xor
cmpb
push
inc
dec
push
loopne
icebp
adc
sub
nop
or
sbb
pop
mov
sbb
jle
nop
ljmp
adc
mov
push
pushf
into
imulb
mov
in
fisttpll
out
fucomi
psubsb
es
fldl
cmpsb
out
or
sahf
cmp
push
mov
mov
sahf
adcl
mov
mov
mov
rcl
ja
clc
mov
inc
or
lea
pop
sar
ret
mov
add
dec
pop
jbe
loopne
in
dec
push
mov
movl
and
jge
ja
xchg
sub
and
mov
ss
test
add
mov
mov
arpl
dec
mov
ret
cmp
cmpsl
mov
stc
inc
sub
mov
push
jne
mov
in
addr16
sbb
sahf
jl
sub
daa
lock
cmp
les
xchg
fldcw
lcall
jbe
enter
ds
pop
dec
or
sahf
in
xor
jmp
daa
pop
push
add
and
das
xchg
add
sbb
mov
adc
add
in
mov
cmp
xor
mov
mov
mov
cltd
pop
cmpsb
out
ret
clc
jecxz
or
adcl
in
int3
stos
std
ficompl
insl
cmp
sarl
cmpsl
hlt
mov
xor
xchg
subl
mov
outsb
and
or
sbb
inc
sahf
iret
add
inc
lret
cmp
ss
int3
mov
popa
or
fucomi
sub
sti
test
nop
jge
and
cmpsb
xchg
ss
stos
fcoml
rcr
sbb
add
out
pop
inc
loopne
xor
rcrl
fs
pop
fldl
pop
mov
mov
aam
dec
in
jb
xchg
pop
dec
stc
cmp
cmp
aaa
data16
in
shl
xor
cltd
sahf
cmp
fmul
fldcw
and
out
pop
lods
outsb
pop
sub
adc
out
jns
adc
lods
push
push
and
xchg
add
add
inc
pop
pop
jns
shrl
sub
in
test
jns
add
xchg
ss
stos
cli
jns
inc
inc
mov
aas
pop
jno
hlt
pushf
daa
adc
imul
in
loopne
mov
dec
pop
mov
jae
mov
add
mov
and
add
repz
andb
xchg
ds
cmpl
and
xchg
mov
sub
outsb
les
inc
testl
push
mov
es
mov
out
neg
xor
and
cmc
stos
xor
sbb
sub
stc
sub
fadds
bound
inc
mov
out
dec
fnstcw
mov
shll
mov
decb
mov
data16
add
jecxz
jle
xchg
stos
arpl
adc
jno
stos
and
mov
mov
in
add
cmp
sub
dec
dec
pop
cmc
mov
mov
xor
mov
or
push
push
cmp
int
js
dec
jb
movsb
in
rcrb
cs
fwait
xchg
jmp
out
mov
sti
into
mov
push
inc
cmpsb
inc
ficoml
and
xor
pop
cmpsb
aaa
add
out
cmpsl
sbb
push
out
pop
aas
adc
ret
test
popf
cwtl
mov
xlat
adc
xchg
das
iret
and
mov
fcomps
aad
add
sar
mov
inc
out
enter
outsb
scas
inc
pop
push
cmp
scas
or
sub
cmp
cmp
lcallw
push
sub
add
sub
sbb
dec
and
mov
xchg
lds
ret
lahf
inc
daa
mov
cmpsl
shlb
mov
js
cmp
outsb
das
mov
jmp
dec
das
pushf
outsl
dec
adc
dec
imul
and
lea
add
iret
xor
pop
xchg
xchg
lcall
xchg
xor
push
push
sub
leave
sub
mov
lahf
or
stc
xor
mov
bt
mov
jnp
sub
daa
xchg
xchg
mov
mov
lcall
loope
outsl
mov
xchg
jle
ss
inc
imul
lods
in
jae
lret
pop
imul
mov
lods
enter
push
inc
ror
pusha
push
mov
addr16
hlt
andl
ror
mov
insl
rorl
pop
sub
sub
lock
dec
mov
xor
daa
fdivrs
dec
in
in
mov
adc
pop
ljmp
mov
cmp
sub
mov
lock
sub
cli
push
xor
in
or
mov
js
mov
int
ja
sub
and
inc
xor
and
fcoml
iret
test
jbe
pop
dec
ret
lcall
or
and
insl
mov
inc
iret
imul
mov
dec
in
mov
sbb
repnz
add
repz
push
mov
jp
lds
imul
decb
jne
int
push
loop
pop
lahf
and
jp
rcr
call
jae
mov
dec
push
ret
bound
cmp
stc
inc
pushf
add
push
cs
mov
iret
cmp
out
push
out
or
fimuls
pop
cld
cmp
out
or
mov
push
ljmp
mov
std
mov
jbe
xor
push
xor
and
or
sub
mov
lcall
popf
sub
inc
mov
iret
push
inc
outsl
sahf
xor
sub
cmpsl
fsts
xor
jns
jl
pop
test
pop
push
cmp
cmc
aam
hlt
inc
mov
or
sbb
pop
jns
arpl
aad
inc
jge
cmc
andl
lcall
lock
xchg
sahf
mov
jo
adc
pop
outsl
jp
jmp
outsb
stos
fmuls
ja
xchg
xchg
rcrl
scas
rep
and
out
fcmovbe
xchg
andb
xor
out
shl
addr16
das
mov
dec
pushf
cmp
div
dec
dec
cltd
mov
adc
adc
and
inc
das
jo
mov
pop
ds
loopne
dec
mov
dec
fiadds
or
inc
in
xchg
cli
aad
push
push
shr
std
cmp
jg
push
push
inc
adc
je
xor
cmp
lea
cmp
mov
xchg
imul
xchg
push
sub
jl
das
cmp
leave
add
mov
je
cmpsb
xchg
int3
push
das
lret
mov
repnz
sbb
inc
lret
mov
loop
dec
cli
mull
es
push
cli
jbe
pop
hlt
adc
pop
dec
jno
and
mov
sub
inc
cmpsl
push
inc
cmp
pop
fisttps
and
or
xor
jge
push
and
mov
mov
sar
movsl
push
sub
mov
jmp
dec
aam
cld
mov
ja
bound
and
cmc
mov
shlb
push
aaa
cli
fadds
int3
sbb
sbb
add
and
inc
scas
cmpsb
xor
or
adc
or
cmp
push
repz
xor
out
jne
sbb
movsl
stc
popf
pop
adc
jl
in
add
and
xor
or
and
popf
sahf
in
push
push
or
clc
dec
lods
or
insb
jno
outsb
xor
aad
cmp
in
call
cltd
cmpsb
lds
daa
push
dec
add
lods
inc
adc
jle
mov
cmp
out
clc
adc
out
sub
test
bound
xchg
add
mov
push
rclb
pushf
cmc
bound
outsb
mov
jb
add
jnp
xor
xchg
add
in
lock
call
mov
sbb
mov
pushf
aaa
adc
insl
push
sahf
inc
xor
orl
fistl
shrb
pop
stos
and
xchg
pop
mov
ljmp
test
scas
jmp
jb
pop
push
imul
and
mov
test
xchg
gs
les
pop
xor
nop
cmp
xchg
stos
push
cld
lods
cltd
mov
fimull
cltd
cmc
jecxz
and
pushf
ret
aam
insb
jle
jg
jbe
pop
pop
out
out
mov
ljmp
xchg
notl
popa
xchg
push
icebp
or
enter
in
shll
lods
sahf
mov
adc
push
push
and
repnz
pushf
pop
jae
fidivl
xor
pop
out
stos
inc
aam
push
adc
out
xchg
inc
ficomps
mov
xchg
test
xchg
push
inc
jns
aas
call
sbb
and
sub
insl
add
mov
sbbl
inc
xchg
add
pushf
or
pop
jp
mov
jecxz
push
outsb
iret
adc
push
mov
add
xlat
imul
ds
add
adc
pop
sbb
int3
add
adc
leave
insb
aas
mov
outsb
sarb
and
cmp
or
sub
stc
ss
push
fdivrs
inc
int3
inc
mov
adc
ja
xor
mov
lock
lods
mov
xchg
sub
mov
xor
sbb
and
inc
and
inc
test
outsl
push
das
pusha
adc
data16
loop
jo
ds
cmp
leave
pop
pop
and
xor
jo
aaa
cmp
lahf
xchg
inc
lock
pop
ds
xor
xlat
xor
int3
in
push
imul
aad
in
movsb
mov
test
arpl
movsb
and
add
adc
movsb
stc
gs
pushf
out
sti
pop
pop
lea
out
into
xchg
inc
cwtl
and
movsb
adc
lods
aam
mov
loope
jbe
out
lods
fs
mov
sbb
xor
dec
addr16
pop
iret
jo
mov
out
xchg
add
push
fnsave
cmp
sbb
dec
iret
add
push
ds
sahf
pop
mov
scas
cmp
test
lret
dec
mov
xchg
push
ret
inc
xchg
mov
jmp
jbe
popf
xchg
push
jnp
jge
pushw
cmpl
jns
add
pmaddwd
lds
fdivrl
jo
mov
loop
shll
ljmp
add
and
cmp
es
and
fisttpl
ss
shll
add
cmp
dec
fnstcw
out
or
ror
pop
and
push
cmp
test
out
sbb
sub
ljmp
loop
cmp
subl
jb
mov
push
inc
adc
add
mov
push
popf
test
xor
push
jg
jg
adc
jne
and
fists
fcompl
stos
hlt
jns
adc
mov
pop
mov
jae
adc
cs
cmp
pop
add
jmp
jo
adc
ja
addr16
cmpsb
insb
cld
and
mov
dec
push
adc
inc
sbbb
pop
add
lret
lods
push
xlat
mul
xchg
jnp
sub
pop
and
rorl
out
ffree
int
fdivrp
jne
stos
sub
aas
fdivs
loop
jle
movsl
mov
sbb
xor
sbb
call
and
sahf
jp
cmp
cmp
cld
or
xchg
movsl
fldl2e
cltd
and
pop
mov
add
lret
xchg
fistl
mov
push
cs
les
gs
inc
and
xchg
sbb
sbb
push
rorb
xchg
mov
scas
xchg
mov
xchg
sbb
dec
into
movsb
cli
mov
mov
loopne
inc
and
lock
adc
xchg
in
scas
int3
xorb
xchg
mov
xlat
mov
jbe
scas
aas
xor
int
mov
xor
xchg
ja
push
pop
jg
push
pop
shlb
inc
and
popf
je
mov
adc
lret
sub
loop
ja
cmc
xor
ds
xorb
adc
mov
or
sbb
subl
mov
lcall
sub
cmpsb
xor
mov
dec
xchg
xchg
sbb
xchg
fs
pusha
outsb
mov
jl
into
push
xchg
int3
arpl
mov
mov
and
je
cwtl
pusha
jbe
mov
test
pop
insl
pop
daa
call
inc
pop
call
pusha
cli
mov
ss
adc
mov
ror
add
in
sarl
cwtl
lods
rorb
and
cmp
lahf
imul
jmp
ss
insb
xchg
inc
test
jge
rcll
outsl
int3
pop
cmp
ljmp
jge
jne
rorl
dec
imul
jo
scas
xchg
cmp
lds
inc
push
popa
in
pop
mov
aad
das
xchg
aas
ficompl
addr16
nop
and
mov
mov
test
and
fbstp
add
aas
ljmp
in
inc
shll
scas
outsl
jbe
dec
dec
sbbb
cmpsl
jo
loop
mov
adc
loop
lods
jnp
inc
imul
jns
fsubl
inc
mov
js
pop
adc
in
dec
aad
pop
sbbl
mov
jbe
push
add
into
sahf
xor
inc
jmp
or
jmp
dec
rcl
pop
pop
icebp
pop
jp
and
push
sti
mov
dec
in
leave
sbb
lock
add
or
xchg
mov
stos
jno
add
out
push
sbb
adc
lahf
and
loop
sub
fiaddl
mov
pop
push
imul
and
pop
sahf
mov
stos
les
icebp
or
mov
std
dec
inc
outsl
or
movsb
pop
push
xchg
repnz
loopne
xor
outsb
mov
call
sarb
add
cs
pop
repz
mov
xorl
sub
mov
sbb
and
xchg
xor
outsb
mov
xor
clc
pop
jle
fimull
pop
fmul
add
jl
cld
lret
push
jae
push
lret
mov
sub
mov
add
out
xchg
cli
repz
push
jle
cwtl
add
jo
dec
mov
push
pop
sub
push
mov
inc
fisubs
mov
ds
adc
or
ret
mov
dec
pop
mov
xchg
mov
in
sarl
jg
and
es
neg
std
sbb
mov
dec
jnp
ja
movsb
imul
inc
rorb
mov
and
rorl
or
cltd
cmpsl
movsl
cmp
das
inc
mov
pop
fmull
and
sti
push
sarb
jecxz
and
pop
test
jl
add
xor
add
lcall
mov
lea
xor
arpl
pop
mov
call
pusha
enter
jge
outsl
push
fucomp
jo
inc
mov
out
arpl
xchg
cmp
mov
push
mov
dec
xor
inc
cmpsb
adc
adc
pop
push
jnp
pop
jl
and
add
and
int
cwtl
ret
fwait
sbb
cmp
movsl
xchg
lret
imul
jno
inc
mov
outsl
adc
mov
mov
cmp
outsl
leave
add
sub
fbld
or
lods
mov
jmp
lcall
ficomps
sbb
cmp
inc
les
mov
sbb
adc
or
xchg
loopne
jno
sbb
xchg
pop
movsl
movsb
and
cmp
out
or
imul
push
xchg
mov
mov
dec
pop
icebp
inc
iret
nop
mov
mov
out
shll
xorb
pusha
inc
inc
and
or
cmp
cmp
sti
popa
ja
call
popf
js
rcll
jno
and
int
sbb
sub
bound
mov
dec
xchg
xchg
mov
pushf
and
out
data16
test
int
loopne
pop
cltd
les
add
inc
mov
dec
sbbb
inc
or
loopne
icebp
mov
adc
ret
sub
and
xchg
jb
and
out
mov
xor
pop
xor
inc
adcb
sub
inc
dec
lock
arpl
js
dec
ss
push
ret
out
test
sbb
movaps
add
jno
lret
xchg
push
xchg
popa
jmp
xchg
pushf
cmp
out
subb
aad
icebp
addr16
stc
push
jg
fimuls
jecxz
andb
pop
cwtl
push
push
xchg
sub
jbe
or
or
pop
ds
jmp
cs
pop
push
pusha
inc
fsts
inc
fadd
xchg
pop
pop
mov
xor
sti
mov
imulb
inc
jge
mov
adc
sar
pop
lea
into
dec
shll
adc
pop
inc
mov
scas
pop
test
iret
push
adc
mov
cmc
gs
or
push
push
add
lods
inc
cmc
aam
jmp
mov
and
mov
xor
insl
scas
cwtl
mov
call
and
in
cmp
rcll
out
inc
dec
push
or
jb
jg
pop
jno
das
pop
push
gs
add
sub
dec
fsub
xchg
pop
mov
or
hlt
cmpsl
fmuls
xlat
mov
jo
add
pop
mov
lcall
fbstp
xchg
adc
fdivl
pmulhuw
mov
cmpsb
daa
mov
mov
popf
cmp
ficomps
inc
hlt
rcrb
data16
lret
mov
scas
sbb
ljmp
sub
add
pop
adc
int3
jmp
and
xchg
fs
lret
je
adc
mov
adc
cmp
or
jns
stc
add
xor
mov
bswap
sub
jne
jae
sub
adc
fldenv
inc
sbbl
je
mov
adc
stc
nop
mov
insl
frstor
rclb
inc
repz
jb
loope
mov
xchg
loope
push
jmp
lods
adc
mov
pop
xchg
or
xor
addl
pop
xchg
in
cmp
dec
imul
mov
xchg
cmpsl
js
insb
jl
mov
aam
adc
lods
jmp
leave
dec
push
lds
loopne
inc
xchg
dec
xor
mov
fwait
repnz
cmc
imul
stos
in
daa
xor
and
mov
addl
mov
push
js
sub
dec
jl
out
shll
cmpl
push
rclb
test
and
and
in
scas
out
xchg
push
and
mov
aas
push
mov
sbb
mov
lret
mov
inc
popf
mov
ja
xchg
dec
cs
mov
int3
mov
fadds
jl
sub
movsl
movsl
ja
jne
xchg
repnz
in
dec
sub
pop
mov
dec
ljmp
cmpsb
lcall
rolb
mov
cmpsl
sub
sahf
sbb
xchg
pop
mov
data16
movsb
push
dec
xor
rcr
jne
call
mov
cwtl
scas
test
add
fsts
jmp
lds
sbb
fisubs
lret
scas
fwait
add
idivb
adc
or
leave
fadds
es
dec
ret
push
lcall
test
jnp
pop
jne
iret
nop
inc
ss
out
sub
rcll
rcll
xchg
adc
pop
int3
adc
faddl
shl
ret
xchg
sub
outsl
dec
xchg
cmpsl
push
and
or
pop
jecxz
push
and
mov
jno
leave
int
fistl
xor
leave
jo
inc
cmp
out
fildll
or
imul
xor
das
adc
or
rcr
dec
adc
ret
jns
outsb
cmp
subl
lret
loope
int
ret
xor
je
es
sub
xchg
mov
clc
xchg
outsl
sub
imul
out
mov
push
xlat
insl
shrl
pop
mov
test
shll
push
scas
hlt
jecxz
pop
sbb
xchg
into
mov
adc
in
dec
popa
push
decl
lods
jns
sti
pop
push
mov
xchg
mov
xor
mov
cmpl
loope
dec
adc
ds
inc
loopne
jge
out
loopne
mov
add
push
repnz
push
fidivs
inc
pop
adc
sbb
pop
ss
bound
cmp
loopne
push
push
daa
sti
in
jo
or
dec
test
ss
xchg
mov
imulb
mov
aas
xchg
xchg
adc
jnp
push
inc
cmp
cmp
sbb
out
push
dec
xor
sbb
cs
repz
and
cmp
xchg
mov
push
enter
stos
enter
or
inc
dec
adc
das
aam
outsb
dec
cmp
imul
xchg
lods
cwtl
sarl
sub
push
ret
dec
and
scas
movsb
cwtl
push
dec
lds
inc
jg
es
cltd
in
pushf
lret
pop
jp
and
ret
mov
hlt
into
outsl
call
popa
outsl
movsb
pop
and
inc
xor
ja
sub
xchg
cmp
push
xchg
sbb
cwtl
push
jecxz
mov
sahf
lret
fwait
xor
cltd
mov
cmpsl
fwait
adc
stos
inc
dec
loop
aam
in
xchg
jle
dec
in
xchg
jmp
add
test
jb
mov
or
movsl
cltd
fs
fsubrs
push
jnp
inc
xor
fwait
aaa
pusha
fnstcw
test
pop
jb
fisttpl
mov
push
xor
scas
lock
out
mov
add
fucomi
std
outsl
pop
imul
fwait
mov
fs
popa
xor
pop
mov
es
dec
ds
inc
popf
ror
adc
xchg
adc
or
push
adc
xchg
test
xchg
cmp
shlb
mov
cmp
jg
iret
mov
test
daa
lds
hlt
pop
mov
xor
enter
cli
ds
pop
test
sbb
inc
in
das
gs
and
testb
cmpsl
jecxz
scas
inc
add
and
pop
cmp
ret
nop
or
mov
jg
scas
repnz
outsl
shl
add
in
popa
jno
testb
inc
inc
cmp
iret
iret
leave
ss
or
jecxz,pt
in
sbbb
lods
cmp
sub
pop
pusha
shrl
jb
xchg
or
sbb
mov
mov
mov
out
in
loop
outsb
mov
mov
fistl
mov
notb
ret
inc
fchs
cld
inc
imul
xchg
aaa
lods
inc
sahf
cmpb
inc
sbb
push
lods
push
mov
adc
push
imulb
aas
pop
push
rcll
add
pop
or
pusha
mov
sbb
mov
cmp
jae
or
mov
ret
addl
push
in
mov
sbb
lods
sbb
xchg
inc
rcrl
iret
out
jl
inc
nop
push
sub
dec
xor
lret
les
mov
adc
and
daa
hlt
addr16
inc
xor
mov
test
gs
addr16
mov
sbbb
lret
imul
lods
clc
dec
sbb
jmp
mov
in
nop
cmpsl
sbb
add
mov
outsb
jns
movsl
imul
cld
icebp
insl
dec
xor
mov
add
push
enter
jne
xchg
shl
std
mov
adc
test
push
sbb
pop
inc
mov
arpl
inc
xor
lods
sbb
and
xchg
jnp
jbe
int3
pop
push
das
adc
push
sub
cwtl
push
pop
fsubrs
inc
lret
fdiv
dec
mov
sub
in
mov
aam
xor
ffreep
enter
neg
mov
jg
mov
lock
adcl
sub
mov
jne
addr16
jb
jns
movsb
xor
cmp
jb
mov
ficomps
dec
jbe
adc
cmpsb
add
sbb
and
or
nop
ss
test
xchg
add
inc
sti
push
pusha
pushf
icebp
mov
lds
lock
mov
stc
loopne
js
out
jmp
fs
inc
orb
out
data16
lcall
dec
jno
xchg
pop
mov
cli
pop
mov
push
dec
jo
adc
jno
xchg
sbb
xchg
pop
xchg
adc
es
popf
mov
or
pop
sub
mov
jp
xchg
js
outsl
insb
test
std
loop
sbb
jecxz
cld
mov
or
cmp
mov
sarb
pop
push
out
push
in
push
mov
xor
or
mov
stos
xor
sbb
call
pop
lock
dec
push
outsl
jle
inc
lods
mov
popa
ret
pop
cmpb
add
ljmp
and
sbb
daa
inc
aaa
pushf
dec
cmc
call
faddl
jmp
shlb
mov
addr16
mov
out
pop
les
inc
push
jge
and
push
roll
in
push
push
ficompl
mov
data16
aad
cli
jmp
mov
std
push
and
add
push
popa
shrl
adc
and
jae
and
stos
mov
ss
mov
sbbb
xchg
arpl
sahf
inc
push
lret
lods
rcll
repnz
std
iret
push
mov
nop
mov
cwtl
sub
mov
stos
stc
xchg
push
hlt
lea
inc
adc
daa
mov
jbe
loopne
pushf
mov
cld
data16
lret
xor
test
std
out
cmp
and
test
xchg
mov
jno
pop
in
clc
push
xor
cmp
cmpsl
push
mov
mov
es
dec
mov
or
xor
mov
or
xchg
push
neg
jne
lea
cmc
xchg
sub
inc
imul
xchg
jae
mov
xchg
sbb
lds
cmp
ret
aaa
sub
ret
add
cmp
addr16
cmp
das
or
add
and
cli
shrb
mov
daa
decl
repz
movsb
push
inc
pusha
inc
lock
push
gs
popf
iret
dec
xchg
pop
ja
sub
xchg
mov
call
loop
xchg
fdivrl
jle
ds
ljmp
lahf
lock
js
jmp
mov
cmp
lret
aam
add
repz
sbb
dec
mov
add
insb
fbld
outsb
and
mov
or
pop
push
out
xchg
stc
inc
fistpl
push
push
ret
cwtl
shrl
cmpb
mov
cmp
lds
sbb
xchg
inc
push
sub
xor
push
into
pop
es
adc
cmpsb
fwait
mov
data16
lcall
push
es
push
rolb
aam
push
cmpxchg
lcall
add
jb
movsb
movsl
cmpsb
repnz
stc
data16
sti
and
xor
fsubrs
or
idivb
nop
loope
cmc
cmp
cs
sub
ret
test
leave
mov
add
pop
into
pop
daa
int
popf
ljmp
mov
pop
mov
inc
incl
pop
std
ret
clc
pop
dec
dec
mov
xor
mov
sub
dec
adc
pop
leave
js
add
cmp
mov
mov
aad
in
mov
addl
pop
repz
add
imul
inc
pop
into
jle
pop
or
cmc
nop
and
dec
imul
fadds
iret
enter
jbe
xchg
and
int3
sbb
clc
jp
and
inc
xor
xchg
adc
cltd
push
repnz
addr16
sub
jmp
push
adc
shlb
xor
xchg
leave
xchg
xchg
repnz
fcmovnb
pop
xor
xchg
ret
xor
mov
add
jge
popf
arpl
cmp
ss
cmpsb
mov
pop
les
mov
outsl
dec
push
or
fidivrl
xlat
pop
cmp
and
jne
shrb
aad
hlt
scas
sbb
cmp
jno
shlb
gs
loop
push
xchg
push
dec
adc
push
cmp
popf
scas
fidivrl
push
adc
rcr
xchg
adc
lret
fistps
jae
repz
xor
xlat
lods
data16
pop
mov
int
mov
test
bound
jae
xlat
jecxz
jecxz
xor
push
dec
cmp
lret
pusha
stc
shlb
mov
or
aad
xor
movsb
and
mov
xchg
xchg
xchg
stos
adc
in
jns
push
lea
loop
outsl
das
mov
xlat
adc
and
in
jle
cmp
sbb
add
mov
add
aas
daa
and
js
add
cmovo
sarl
push
ret
ret
push
pop
lds
cmp
rclb
mov
pop
and
or
inc
nop
stc
mov
orl
shrl
clc
jmp
js
in
sbb
jb
jle
jge
jno
vmread
pusha
add
aas
mov
in
pop
pop
out
bound
arpl
mov
aaa
imul
add
or
sub
dec
aad
dec
stos
rol
insb
lds
into
loope
cmp
xor
lds
out
cmp
jmp
stos
jae
dec
fcoms
xchg
gs
fwait
inc
aaa
call
repz
cmovbe
add
cli
adc
pop
aad
sbb
jnp
out
arpl
fidivl
int
data16
xor
sbb
mov
out
sbb
loopne
negb
jp
in
jle
inc
cmp
dec
lret
jbe
pop
mov
dec
jbe
push
fwait
inc
jns
lret
push
test
out
insb
test
sbb
cmp
sbb
gs
out
adc
mov
adc
in
test
orb
pop
jle
pop
inc
fs
imul
adc
jp
push
data16
mov
mov
pop
es
enter
lret
aam
pop
mov
fisubs
and
test
xchg
mov
mov
adc
cmpsl
mov
inc
cld
arpl
jl
jb
cmp
pop
ficoms
mov
adc
xor
out
fwait
mov
filds
fldt
push
cmpsb
mov
and
push
push
scas
aam
out
mov
fstpl
add
lods
and
inc
mov
xor
imul
cmp
xchg
inc
fsubrp
xchg
cmpsl
scas
cmp
cmp
pop
mov
or
popa
dec
inc
popa
push
mov
mov
clc
push
inc
enter
and
pop
pop
mov
jle
ja
inc
push
loopne
sub
sbb
scas
stos
push
nop
mov
cmpsl
or
push
aam
pop
mov
mov
pop
mov
js
jg
pusha
jns
sti
test
cmp
dec
hlt
jns
dec
subl
into
in
and
fcompl
jmp
lods
roll
enter
mov
faddl
pop
pop
push
enter
or
subb
fpatan
add
jle
mov
pop
movsb
fdivl
adc
sbb
cmp
dec
pop
movsl
sub
movsl
pushf
mov
test
decb
or
fisttps
and
sbb
xchg
pop
outsl
outsl
es
jo
xor
push
std
std
push
out
imul
cs
and
xchg
js
int3
mov
cmp
sbb
jo
jae
sbbl
push
cmpsl
push
incl
add
dec
enter
dec
in
pusha
ret
insb
mov
imull
insl
jecxz
addb
arpl
sti
inc
xchg
mov
inc
and
cwtl
pop
mov
sub
push
movsl
or
sahf
xor
mov
pop
push
in
popf
ds
rcl
sahf
sbb
mov
xchg
xchg
rcl
data16
clc
mov
jne
push
cltd
or
mov
pop
cmpsb
lret
pop
jns
or
dec
mov
mov
pop
ljmp
rcrl
aam
fidivl
lds
or
movsl
in
mov
iret
push
and
pop
mov
push
cmp
out
movb
aad
jge
dec
sub
repnz
lcall
add
adc
insb
das
adc
cmc
imul
test
adc
pop
loopne
or
in
cmp
scas
add
push
mov
inc
fists
rcrb
push
cwtl
jecxz
ja
cmp
fmull
inc
sbb
fucomp
int
rorb
cmp
xchg
aam
aaa
fldt
xor
jno
jb
or
push
jmp
mov
shll
pop
lock
scas
inc
push
sub
dec
jne
mov
lods
sbb
add
inc
dec
mov
add
mov
ror
sbb
pop
push
cmpsl
cs
imul
stc
ss
lcall
rcl
test
subl
jb
mov
mov
sbb
aam
ja
sbb
out
jge
xchg
xor
cmp
push
xchg
push
push
add
cmp
mov
adc
into
in
sbbb
mov
iret
std
adc
cmp
jmp
mov
es
lods
push
inc
xchg
ret
cmp
pop
and
sub
divb
jo
cmpsb
xor
fwait
cwtl
mov
inc
int3
mov
pop
fsubrl
cmp
ficoms
into
push
sti
mov
adc
aas
rcrb
jb
pop
pop
sti
jne
loop
imul
call
stos
movsl
mov
int
mov
fisubs
push
stos
ret
adc
inc
inc
cli
xchg
sbb
lods
adc
ret
add
mov
js
out
aaa
push
jg
das
mov
mov
and
add
addr16
xor
std
cltd
out
int3
outsb
test
sbb
xchg
push
shrb
out
sbb
sbb
jnp
lret
lock
pop
jb
pop
fxch
into
movsl
out
xor
lahf
dec
fisttpl
pop
or
push
ja
clc
xchg
or
outsl
popa
movsl
mov
sbb
outsl
loope
ds
mov
sub
test
sbb
push
inc
pusha
push
mov
mov
lds
inc
call
aad
cmp
lcall
inc
pop
fwait
negb
orl
mov
and
lods
ret
gs
test
nop
lock
mov
xchg
or
jmp
xchg
dec
add
push
bound
insl
dec
decb
fstpl
clc
adc
in
jge
stos
xor
lods
add
pop
mov
fdivrp
adc
outsl
dec
dec
dec
add
or
mov
xor
push
cltd
js
ret
dec
xor
inc
mov
pop
mov
stos
shlb
mov
and
int3
lret
mov
jg
mov
xchg
mov
xchg
sbb
and
flds
stos
fildl
test
push
mov
sub
shrb
dec
lret
into
in
lds
notb
mov
jle
jb
cld
jp
sub
rcll
popf
cmp
incl
sbb
add
sbb
stos
sbb
lret
nop
cli
mov
stos
and
mov
fsubs
aad
and
and
cli
pop
addl
jnp
jno
xchg
pop
or
rcrb
and
add
data16
adc
popa
ljmp
inc
negb
fwait
and
pop
xor
inc
pop
scas
adc
mov
stos
mov
and
xchg
mov
mov
sbb
in
lret
cld
xor
dec
adc
arpl
pop
pop
jbe
pop
dec
add
push
cmp
xchg
dec
int3
mov
dec
lea
data16
lcall
mov
xchg
xchg
mov
mov
rol
push
lock
stos
sub
ss
out
rcrl
adc
jl
movsl
xlat
arpl
mov
fcompl
int3
shlb
insb
imul
lahf
push
adcb
rorb
or
stos
pop
mov
xchg
sbb
jnp
pop
jl
mov
dec
pop
add
repz
mov
fsubrl
aas
loopne
mov
movd
mov
aaa
push
pop
jns
popl
mov
stos
ret
cwtl
dec
inc
xchg
add
cmp
adc
or
sti
stos
lds
pop
rcrl
push
mov
movsb
loopne
add
mov
adc
daa
and
sub
and
cltd
ret
orl
cltd
xor
adc
gs
aad
xchg
out
dec
sub
loop
sbb
jae
xchg
sub
sub
jg
xchg
in
ret
sub
popa
mov
adc
test
inc
sub
jmp
subl
sub
lahf
mov
pop
call
in
mulb
adc
push
loope
dec
fisttps
add
and
jo
or
fs
mov
aas
fucomip
push
repz
jp
mov
fstps
push
xor
pop
mov
lret
adc
sbb
mov
mov
or
push
out
les
call
repnz
sahf
lea
push
lret
fdivrl
gs
pop
mov
adc
sahf
cmp
leave
fld
shll
dec
xchg
push
add
mov
movsl
mov
movsl
stos
je
pop
pushf
mov
test
cmc
push
scas
jmp
or
push
ds
add
mov
jbe
pop
leave
ret
jle
pop
ret
loope
add
sbb
subb
sub
adc
loopne
ljmp
loopne
mov
pop
push
test
sub
cmp
push
inc
cmp
mov
jno
jo
push
movsb
mov
push
lret
dec
and
mov
dec
outsb
or
lods
xchg
ret
sbb
or
push
jne
in
hlt
push
mov
daa
out
jp
xorl
mov
push
and
mov
cmc
out
in
sub
inc
popa
jnp
jns
pop
pop
xchg
adcb
js
pop
es
and
dec
xchg
loopne
mov
inc
iret
out
jne
mov
aas
fnsave
push
mov
cmp
inc
fsts
or
test
pop
enter
jae
test
clc
cmp
xchg
pop
rclb
add
mov
sbb
jl
dec
sti
das
into
ja
ja
aam
mov
jecxz
pop
shlb
mov
add
sbb
dec
adc
pop
mov
aas
inc
callw
lret
mov
jl
cmp
mov
loopne
lcall
adc
pop
nop
in
in
sub
inc
int
mov
daa
add
jg
jno
lea
pop
sub
rclb
pop
ja
mov
loopne
push
push
mov
addr16
and
xchg
xchg
mov
and
mov
mov
add
loop
cmp
ret
xchg
imul
sub
xchg
push
ss
jmp
push
or
aas
int
mov
ror
adc
pop
dec
or
sub
outsl
mov
or
xchg
test
mov
fcomps
mov
das
mov
mov
cmp
lods
jle
inc
add
xor
mov
aas
mov
mov
pop
mov
push
dec
or
aad
mov
adc
inc
jne
repnz
in
jbe
lods
pop
cmpl
mov
push
inc
add
inc
mov
push
mov
stc
inc
outsl
scas
mov
dec
lcall
sub
popf
fldl
jbe
xor
lds
ds
cmp
lret
fwait
int
xor
mov
shl
fs
daa
sbb
dec
mov
sbb
out
or
pop
aaa
sbb
sahf
mov
in
aad
jo
sub
or
mov
lds
dec
test
mov
das
push
cmp
pushf
pop
jecxz
xchg
stos
jns
push
fdivrl
fwait
shlb
xchg
push
mov
rorl
jne
std
loop
fsub
stos
call
fcom
jo
jecxz
mov
mov
clc
push
lcall
dec
sbb
dec
data16
mov
sub
add
dec
rorb
loop
jmp
pop
pusha
adc
add
imul
sbb
cmp
push
or
mov
sbb
jle
insl
hlt
cltd
mov
jle
adc
pop
mov
aad
mov
dec
cmc
sbb
dec
cmp
add
out
mov
int
xlat
push
push
das
sahf
lock
mov
push
add
out
jbe,pt
lret
xchg
lcall
fsubs
push
out
mov
js
add
lcall
pushl
scas
lcall
lcall
dec
xchg
add
popf
jb
xor
pop
in
mov
add
mov
push
in
fcoml
aad
sub
sub
pop
adc
psubsb
ljmp
add
lods
iret
cwtl
div
in
ret
adc
movsb
push
test
dec
jne
cs
xor
add
aam
pusha
and
push
sbb
stos
and
fstps
imul
mov
add
shll
mov
mov
outsl
shll
jle
scas
mulb
sub
fistl
daa
jle
xchg
or
inc
lods
or
repnz
mov
jg
mov
fmuls
jno
mov
outsl
dec
out
pop
sbb
xchg
enter
cld
sti
xor
outsl
push
inc
xchg
sarb
scas
sub
cmc
ret
ljmp
insl
into
push
pop
mov
lret
add
push
cmpsb
cld
sub
cmp
mov
push
jg
mov
and
lret
add
jne
sbb
fcmove
xchg
cmc
lahf
xchg
sar
dec
adc
or
inc
cmp
loopne
cli
or
js
addr16
dec
ds
mov
clc
je
adc
loopne
xchg
xorl
pop
mov
sahf
aaa
ljmp
flds
mov
popa
lret
ds
sbb
dec
lods
stos
pop
jo
movb
dec
jnp
inc
ss
mov
mov
mov
mov
jb
jle
in
jl
in
cmp
int
mov
mov
outsb
jecxz
sub
sub
jp
push
jmp
mov
jns
mov
add
insb
mov
pop
sub
mov
test
dec
test
push
inc
lcall
cld
incl
mov
std
loope
xchg
mov
sbb
loop
bound
mov
or
xor
jl
mov
mov
jecxz
loop
popf
into
sub
xchg
popf
push
popa
add
fsubrl
mov
add
sbb
andl
xor
mov
push
dec
sahf
mov
mov
inc
movsl
jle
dec
add
bound
nop
add
mov
ja
inc
adc
lods
lods
call
push
mov
mov
pop
cmp
outsb
inc
mov
dec
cmp
enter
fdivl
inc
into
adc
inc
loopne
push
mov
daa
sbb
and
rolb
or
xor
sub
test
popf
add
push
es
inc
test
shrb
push
out
adc
aad
loopne
cmpsb
ror
test
ret
or
test
adc
xcrypt-ctr
cmpsl
pop
mov
sbb
adc
adc
sbb
and
inc
pop
repnz
lret
and
dec
aam
scas
sub
xchg
dec
cmp
xchg
fsubr
js
inc
popf
add
xchg
mov
fsubl
inc
in
sbb
aaa
xlat
pause
mov
jno
mov
cmpsl
jno
pop
sbb
push
xchg
sbb
sbb
arpl
je
lock
xor
fcmovnu
les
and
inc
shrl
or
or
pop
repnz
ja
pop
mov
leave
popf
fdiv
inc
mov
aaa
sbb
cmp
test
add
add
xchg
xor
jle
or
jnp
jmp
add
pop
repnz
cmp
pusha
jnp
fwait
add
popf
mov
mov
gs
iret
dec
rorl
js
xor
icebp
idivb
pop
sbb
les
imul
aam
imul
inc
dec
sub
inc
xor
fidivl
inc
je
sub
dec
mov
sbb
bound
mov
repnz
cltd
out
mov
mov
ljmp
sbb
xor
lods
subb
insb
sbb
jno
jno
into
js
adc
repz
mov
add
in
jae
test
push
inc
addr16
ss
out
and
sbb
adc
mov
addr16
repz
notl
scas
faddl
push
add
imul
out
outsl
out
jbe
int3
pusha
addb
leave
or
in
in
aam
push
imul
std
mov
adc
arpl
sbb
leave
cmpsl
adc
or
dec
jb
stos
aad
mov
mov
inc
jno
mov
mov
pusha
cltd
adc
or
cltd
popf
ja
adc
push
cmp
push
in
mov
pop
ja
test
test
adc
pusha
enter
pop
and
fwait
or
mov
aad
dec
rclb
mov
jno
stc
movsl
mov
popa
mov
xchg
mov
jge
sub
ret
jb
stc
xchg
nop
lret
sbb
jg
adc
push
sbb
scas
les
inc
inc
rolb
xchg
and
add
mov
add
insl
lret
fdivrs
inc
out
mov
xchg
cmp
pop
mov
test
shll
adc
std
out
into
inc
sub
jo
repnz
push
mov
ljmp
inc
ret
dec
addr16
out
cmp
popa
or
mov
adc
xchg
movsl
or
fwait
mov
adc
and
mov
in
and
dec
dec
mov
je
lret
pop
and
mov
repz
mov
stos
popa
pop
or
push
jge
inc
jno
cmp
push
fwait
pop
pop
add
sbb
mov
outsb
xchg
jne
lea
mov
sbb
mov
divl
add
lods
push
mov
insb
es
mov
les
push
dec
lock
outsl
lods
jnp
push
data16
sub
xlat
pop
cmp
icebp
dec
int
por
pusha
fsts
sbb
sbb
sbb
in
pop
js
imul
fmull
pop
cmp
out
sub
and
inc
mov
pop
push
addb
shrl
cmp
sarb
xchg
lret
jnp
push
lds
mov
mov
inc
cmpsl
or
xor
sub
pop
daa
adc
inc
or
sbb
adc
sbb
addl
ljmp
cmp
dec
cmp
loopne
sar
push
test
lods
push
fwait
cmp
idivb
sub
fnstsw
jae
out
jne
xchg
cmpsl
mov
jne
mov
test
mov
lods
pop
or
mov
fdivl
loope
jecxz
dec
jnp
inc
jns
das
push
fdivrs
fnstcw
sti
stc
imul
lahf
imul
cwtl
sub
add
and
mulb
xor
sbb
aam
add
mov
scas
mov
xchg
pop
lock
idivl
pop
dec
fs
mov
lcall
pop
shll
cld
rorl
test
ljmp
fcomps
or
xchg
lret
popa
mov
mov
mov
dec
and
test
into
frstor
xchg
push
pop
sbb
or
fsubs
mov
pop
inc
cmp
jo
sbb
sub
jge
orb
daa
imul
inc
jp
xchg
stos
xor
fcompl
mov
iret
aam
es
push
inc
or
dec
shrb
sub
jb
pop
ja
ja
cs
ljmp
push
mov
sbb
mov
imul
dec
test
mov
test
test
push
bts
std
xlat
mov
xchg
ljmp
dec
inc
ficoms
sub
repnz
movsl
sbb
mov
xor
add
push
into
dec
push
aad
test
jmp
in
nop
and
je
pop
dec
adc
jl
add
xchg
lahf
xor
lcall
add
bound
sub
jo
xchg
insl
sbb
aam
adc
rorb
fs
fisttps
sbb
shrb
xchg
loope
enter
xchg
sub
cmp
cmp
movsb
jp
pushf
repnz
mov
addr16
je
add
xor
scas
mov
add
addr16
dec
js
adc
sbbb
cmp
sbb
xchg
jge
cli
xchg
push
lods
xorl
mov
jnp
add
mov
sub
jnp
faddl
push
hlt
js
pop
mov
sbb
push
outsl
shll
jb,pn
add
int
bound
mov
xor
loop
jbe
test
or
ja
xchg
xor
pop
cs
enter
cmpsl
cmpsl
xchg
dec
or
adc
gs
lock
xchg
jne
jmp
sbb
pop
lret
push
lock
fnstenv
sbb
xchg
inc
adc
enter
into
leave
and
pop
pop
insb
call
push
sub
inc
andb
cmp
daa
jg
jo
inc
pop
inc
xchg
mov
inc
in
lcall
cld
adc
incl
imul
mov
mov
mov
test
lock
out
test
pop
fsubl
scas
lret
ret
in
scas
mov
mov
loope
aaa
inc
inc
scas
in
insl
mov
das
jecxz
jge
stos
bound
push
aas
scas
addb
pop
movsb
mov
lods
xlat
xchg
xor
out
xchg
aad
es
iret
daa
xchg
aas
sbb
aaa
sbb
add
dec
mov
test
pusha
pop
jl
lods
imul
or
xchg
or
cmpb
les
ss
mov
dec
push
jmp
aad
cltd
cli
adc
push
rorl
cmp
shlb
jg
inc
fidivrs
out
ss
sub
cmpsb
mov
rorl
sti
stos
loope
popf
ficoml
test
test
sub
daa
in
shll
xchg
sub
or
dec
xchg
ljmp
in
cli
sub
enter
xlat
jb
addr16
xchg
test
cmp
xor
jecxz
lods
in
or
sub
cmpsl
call
or
aas
test
xor
loop
xchg
fsubl
xchg
imull
loope
inc
inc
dec
cwtl
xor
repz
sub
dec
mov
pop
in
jno
pop
pop
leave
mov
push
aad
out
scas
add
sub
mov
mov
dec
xchg
shl
sbb
sbb
xchg
outsl
pop
rcl
es
lods
jnp
pop
push
push
in
pop
loop
adc
jae
pushf
idivl
mov
and
fucomp
sbb
cmc
inc
js
sbb
ror
arpl
decb
mov
out
mov
lret
fimull
mov
sarl
adc
mov
rcl
mov
xor
xor
xor
xchg
mul
je
aad
mov
pushf
stos
adc
jnp
enter
add
xor
cs
push
sub
adc
js
cmp
pop
and
adc
lods
mov
stc
int3
and
and
mov
pop
sbb
out
add
sbb
xor
pusha
data16
inc
neg
fs
cmpsb
cltd
adc
arpl
push
push
das
fnstenv
lea
mov
imul
popf
out
outsl
in
add
push
pop
mov
jae
iret
adc
and
mov
jmp
imul
xchg
mov
dec
sti
inc
adc
das
jmp
std
cmpsl
cmc
sub
cwtl
subl
or
std
pushf
push
push
pop
xor
mov
addr16
pop
push
jb
fistps
lock
jmp
dec
pusha
shrb
push
int3
xor
inc
add
pop
dec
mov
divl
inc
mov
xlat
or
pop
adc
cmp
js
pop
iret
sahf
mov
lret
test
lcallw
repz
shlb
dec
pop
fcmovnbe
xchg
or
pop
rolb
cs
xchg
stos
xchg
dec
ss
mov
cmp
and
arpl
mov
dec
pop
addr16
mov
aaa
sub
andb
cmpl
mov
sbb
ffree
cltd
sub
clc
gs
popa
pop
mov
add
imull
cmpsl
add
daa
cmpsl
xchg
pop
mov
jg
in
sub
aaa
cmpsb
push
ud0
mov
jnp
mov
push
cltd
push
push
adcl
mov
std
mov
scas
jae
mov
cmp
xchg
xchg
imul
or
pop
stc
push
and
xor
inc
adc
add
adc
aam
fsts
notb
fisttpll
loopne
aad
mov
mov
pushf
cmp
or
jp
rcll
jnp
push
int3
sbb
push
mov
jae
std
sbb
mov
jbe
and
and
mov
jmp
mov
scas
adc
and
testb
movsb
xchg
aaa
cli
mov
lods
cmp
aaa
aad
inc
movsb
pop
int3
lods
outsl
test
imul
out
sahf
or
sarl
push
cmc
cmp
out
paddq
repz
ja
fdivl
xorl
or
lahf
sub
stos
loop
inc
jecxz
rcrb
or
jne
mov
out
sbb
ljmp
xchg
movsl
fildl
or
gs
je
mov
cmp
sub
cmpw
and
je
loope
jmp
sbbb
icebp
pop
int
jle
ja
add
hlt
aad
jp
and
mov
ret
push
dec
pushf
cmp
jne
dec
push
int
out
fildl
inc
subl
pusha
roll
push
push
hlt
push
fildl
xchg
das
mov
sub
lret
repz
jmp
test
lahf
jle
and
imulb
push
and
inc
stos
je
dec
stos
ja
idivl
mov
rcrl
sub
shrl
mov
push
cmp
xchg
jnp
push
test
testb
mov
test
jmp
gs
cmpsb
adc
inc
pusha
xchg
outsb
ljmp
cltd
ret
sti
gs
test
inc
pop
fldcw
xchg
jp
mov
jmp
mov
add
lahf
sub
inc
pop
mov
pushf
pop
jnp
jg
bound
dec
mov
jecxz
jae
sti
in
shlb
or
movsb
js
gs
bound
xchg
in
adc
xchg
cwtl
cmp
shlb
xchg
sub
mov
jle
and
setp
adc
xor
neg
mov
out
ret
xlat
cmp
dec
jne
loope
push
das
xchg
jns
jmp
push
push
insb
jmp
cltd
fnstenvs
add
sti
or
jne
loopne
jmp
sbb
in
dec
or
stc
imull
int3
mov
jae
sahf
xor
sub
xlat
jno
jp
mov
or
sbb
out
and
clc
int3
scas
mov
aas
mov
jns
xchg
or
in
cmp
in
jp
rorb
pop
mov
mov
sbb
rcl
lret
jns
cmp
push
std
faddp
xchg
and
shlb
in
push
sub
adc
es
ljmp
data16
lret
add
cmovs
sub
push
inc
cmp
sbb
sub
popl
jecxz
cmp
mov
mov
push
insl
ds
scas
and
dec
lahf
in
adc
cmc
xor
outsb
adc
lods
adcb
cmp
jbe
xchg
xchg
insl
arpl
pop
das
shrl
mov
movsl
repz
fisubrs
out
cld
jecxz
xchg
mov
cmpb
or
jge
and
xchg
mov
call
jne
faddl
push
pop
stos
and
xchg
pop
pushf
mov
push
mov
test
jg
out
dec
cmp
cmpsb
mov
lock
xchg
data16
pop
or
xor
das
lcall
pop
pop
pop
sbb
xchg
les
mov
add
cmp
icebp
lcall
scas
inc
aas
lcall
je
jno
and
cmc
mov
inc
cmp
jnp
xor
test
mov
sbb
pop
sbb
dec
les
adc
mov
out
fstl
repnz
sbb
dec
aad
pushl
stc
mov
or
pop
aad
adc
loopne
add
add
xchg
adc
stos
loop
test
mov
iret
jnp
xchg
outsl
mov
or
loop
mov
cmp
sti
inc
jo
push
movsb
jge
jbe
add
cmp
sar
inc
punpcklwd
gs
das
adc
jle
in
orb
xchg
aad
out
test
roll
iret
inc
mov
xchg
cmp
adc
push
and
jne
pushf
pop
inc
add
rcrl
rolb
pusha
js
subl
mov
pusha
pop
outsl
push
pcmpgtb
fcmove
ret
pop
insb
inc
enter
stos
inc
xor
sahf
push
push
and
lock
cltd
mov
pop
mov
rclb
mov
int
pop
fs
jge
fwait
mov
rorb
dec
into
dec
sbbb
pop
cmp
int3
cs
sub
or
or
shll
mov
loopne
push
and
insb
sahf
pushf
clc
dec
push
inc
xor
cwtl
movsb
xlat
push
mov
inc
les
into
adc
pop
mov
testl
xlat
or
sub
stos
or
jmp
in
test
jnp
push
or
fcompl
xor
mov
pop
push
add
cmp
inc
mull
frstor
mov
mov
aas
jmp
mov
or
sub
aam
ss
jg
pop
xchg
inc
loope
imul
xchg
popl
mov
loope
cmp
lea
xlat
or
stc
addr16
int3
int3
cli
or
out
pushf
sbbb
jl
add
clc
clc
lods
pop
cmpxchg
ret
js
nop
lods
add
fcoml
in
sti
jbe
andb
jl
js
push
jbe
xor
or
insl
pop
sti
mov
ret
or
icebp
pop
sti
call
xchg
pushf
mov
xor
cmp
ffreep
push
mov
loop
or
xchg
mov
lea
dec
pop
test
fmuls
xor
cltd
xor
cmpsl
inc
xor
mov
xor
loop
cmp
sti
mov
xchg
xor
les
adc
bound
inc
push
cmp
mov
push
inc
gs
mov
jo
les
out
xor
add
adc
sbb
xchg
out
std
jmp
call
add
pop
mov
cmpsl
cmp
pop
sub
mov
popf
dec
jp
nop
jp
mov
test
es
dec
rclb
loopne
aam
add
inc
push
or
lea
jle
sub
repz
stc
xor
sbb
push
jbe
inc
xchg
ret
mov
or
xchg
jle
roll
cmp
dec
adc
int
jns
fwait
dec
sbb
aad
out
std
cli
inc
and
pusha
cwtl
xor
pop
jae
or
and
fldt
cmp
jmp
mov
gs
movsl
aad
sub
fldt
push
push
aad
int
cmp
push
pop
ret
mov
lret
fisubl
in
or
sub
adc
je
jo
adc
sbbl
mov
and
push
scas
pop
xor
push
stc
xor
mov
mov
adc
fs
fldl
cmpsl
pop
int
or
in
mov
xchg
xchg
and
jmp
daa
in
leave
push
inc
inc
xor
jecxz
jecxz
pusha
adc
cmc
cmpsb
loope
jnp
dec
loopne
aam
jo
inc
or
in
fsts
nop
hlt
shlb
dec
mov
mov
mov
scas
adc
cmp
push
fistl
jns
leave
int3
mov
popf
or
pop
testb
add
sub
push
push
add
pop
in
jo
mov
cmc
enter
mov
mov
jl
je
sbb
lahf
into
push
stos
mov
leave
jg
cld
sbb
pop
cmc
dec
divl
add
pop
lds
xchg
sub
fimull
loope
pop
imul
fiadds
pusha
mov
cmpsl
push
daa
pusha
push
adc
push
or
xchg
dec
push
sbb
and
mov
lods
inc
stos
test
hlt
cs
outsb
inc
scas
cwtl
call
inc
jg
in
fisttps
punpckldq
clc
jne
pop
dec
mov
jno
fcmovbe
sarl
sarl
jle
lcall
jmp
loopne
fadds
std
add
daa
cmp
orl
xor
in
pop
and
pop
mov
adc
mov
jp
out
les
pusha
pop
cmp
lahf
inc
inc
icebp
addr16
sub
stc
lahf
clc
les
add
rorl
fwait
cwtl
dec
std
fdivrs
aam
loopne
movsb
inc
mov
mov
test
adc
outsl
imul
loope
add
ja
inc
lods
sub
lahf
bound
dec
xchg
jge
adc
push
enter
aaa
cwtl
add
jne
pusha
cltd
push
mov
ja
adc
mov
std
xchg
xchg
fnsave
int
fdivp
inc
jg
repz
mov
push
push
push
mov
pop
add
sub
mov
lds
inc
xlat
das
jbe
stos
mov
mov
adc
xchg
ret
out
or
iret
sub
lcall
xlat
lahf
xchg
mov
push
jne
in
cmp
sub
jg
dec
shlb
dec
mov
cmp
dec
jne
push
mov
pop
jecxz
mov
dec
pop
xor
std
and
icebp
jmp
pop
stc
popf
dec
sub
mov
leave
sbb
xchg
mov
loopne
dec
sub
in
lea
cmp
push
inc
pop
loope
cmpsl
sbb
push
sbb
cmp
popa
nop
daa
dec
sarb
fninit
push
repnz
xchg
loop
sbbb
jmp
adc
inc
cmc
int
fwait
push
enter
in
jb
pusha
push
xor
dec
stos
mov
push
push
sbb
std
pop
or
add
loop
std
pop
jbe
pop
and
or
aad
in
pop
xor
dec
aas
push
xor
fdiv
movl
rcrl
aam
sbb
xchg
movsl
gs
pop
push
pusha
push
insl
adc
cmp
mov
js
add
inc
rol
fidivs
scas
out
aaa
in
sarl
push
aaa
mov
adcb
inc
cmpsb
mov
clc
add
jmp
and
xchg
sub
push
lods
out
loope
in
mov
lds
rcrb
mov
mov
test
inc
adc
dec
je,pn
push
std
into
jl
test
ss
inc
fwait
lods
shrl
and
mov
cltd
flds
pop
sbb
outsb
std
stc
in
in
fisubrl
nop
lods
ds
push
fprem
add
inc
inc
out
and
jmp
dec
jnp
in
jo
pop
adc
push
mov
jp
lcall
jmp
mov
ss
push
add
fcmovbe
pop
or
rcrb
mov
mov
xchg
fsubr
mov
mov
sarl
pop
cli
out
dec
gs
mov
mov
and
sub
stos
jecxz
insb
push
mov
fs
mov
xchg
mov
xchg
sbb
jmp
sbb
dec
fidivs
lods
cmpsb
fchs
mov
icebp
imul
pop
ror
shr
push
xchg
pop
scas
stos
sub
daa
fidivl
dec
dec
and
add
mov
aad
adc
lods
lea
pop
mov
loop
ret
sbb
loopne
push
cs
adc
int3
jl
dec
mov
rolb
sub
cmp
adc
fistps
pop
xor
jbe
cmpsl
test
jg
mov
mov
imul
in
test
jecxz
ret
pop
sbb
jl
jo
dec
cmp
xor
sbb
cmp
sbb
pop
add
xchg
mov
imul
inc
jbe
mov
mov
jg
lds
xchg
test
fs
mov
je
lock
movsl
add
into
out
adc
jo
les
mov
cmp
outsb
sub
mov
mov
pushf
std
out
sub
pop
mov
arpl
dec
add
rcrb
add
dec
sbb
mov
mov
sub
jbe
or
cs
repnz
jmp
sahf
xchg
xchg
outsl
xor
lcall
outsb
mulb
xor
lds
outsl
and
std
arpl
cmp
ficomps
stc
movsl
aaa
std
sbb
lods
and
addr16
stc
push
in
test
aaa
test
in
or
sbb
shll
test
dec
sbb
xor
push
adc
mov
test
inc
mov
add
incb
loop
mov
pop
xchg
loope
andl
add
mov
fbstp
hlt
in
bound
push
rcrb
sbb
out
push
sahf
enter
ficomps
push
fdivrs
push
iret
in
jmp
xchg
movsl
mov
popa
rcr
les
sahf
xchg
out
mov
push
enter
hlt
scas
cli
pop
ror
nop
dec
sub
xor
out
inc
cmpsb
mov
and
sbb
test
in
sub
pop
into
cli
xor
mov
stos
lcall
imul
cld
movsb
dec
xchg
nop
adc
push
stos
pop
mov
es
pushf
sbb
and
xorl
sbb
pop
jp
mov
xchg
imul
loope
jmp
outsb
push
pop
jb
neg
xchg
xchg
lock
out
lret
inc
mov
mov
insb
adc
cltd
jle
and
xchg
test
cmp
out
add
imul
sahf
test
mov
aam
shl
dec
cwtl
dec
cmpsb
add
fcomps
hlt
nop
outsl
stc
inc
ds
pop
inc
insl
adc
pop
sub
in
enter
lods
movsl
dec
push
sub
mov
lcall
jns
hlt
fiaddl
inc
in
mov
add
inc
int
scas
jns
add
mov
inc
jmp
jecxz
fildll
stos
dec
lods
mov
cmp
loopne
xlat
and
pop
adc
out
jp
or
mov
addr16
pop
mov
inc
fucomip
or
jnp
lods
lea
adc
lret
cmp
xchg
adc
imul
jb
push
scas
mov
movsl
push
popf
int
cmp
mov
or
xchg
jecxz
jb
mov
cmp
or
jp
dec
jnp
push
jle
dec
popa
and
sti
jp
arpl
addl
js
ret
xchg
cmpl
xor
sub
pushf
orl
in
in
mov
mov
fistl
nop
adc
sbb
jp
adcb
add
jg
cmp
adc
xor
adc
dec
pusha
mov
xchg
sub
aad
cli
out
test
xor
subl
mov
xchg
iret
sbb
in
mov
lahf
test
stos
lods
inc
faddl
mov
fstp
push
daa
lahf
mov
ficoml
and
aad
shrl
jle
xor
roll
sbb
mov
lret
movsl
pop
or
repz
push
fistl
xor
subb
mov
shl
sub
inc
mov
mov
cmpsl
roll
mov
adc
xor
fisubrs
ficoml
jmp
push
jb
push
push
push
in
push
fimull
out
pop
popa
imul
aad
adc
sbb
mov
hlt
dec
jmp
outsb
lret
adc
insb
shl
je
xchg
popa
mov
cmp
pop
stos
imul
sbb
popf
sub
fidivs
pop
sbb
mov
cmp
xlat
movsb
stc
adc
addb
mov
xchg
into
sbb
fs
push
mov
push
push
mov
jnp,pt
int
adc
in
pop
push
mov
pop
jg
ljmp
lods
psrld
outsl
mov
loopne
jns
jnp
repnz
jge
and
xchg
cld
pusha
je
and
mov
jmp
and
fs
arpl
inc
lret
push
inc
cs
and
sub
pusha
cwtl
out
je
push
adc
jb
movsb
pop
dec
loope
cmp
mov
lcall
pop
push
sub
sahf
sbb
clc
and
in
icebp
pop
and
es
sbb
rcrl
push
lea
pop
ror
sub
mov
insb
mov
jb
mov
jg
mov
inc
std
mov
jae
and
or
push
xchg
or
div
push
flds
jnp
mov
add
test
decl
push
jp
mov
sti
repz
jno
or
pop
iret
xchg
sub
gs
cltd
cwtl
jo
in
cwtl
add
fsts
in
lret
cmc
inc
movsb
lods
jbe
inc
sub
xchg
enter
test
push
jns
daa
pop
jp
xchg
dec
dec
in
gs
mov
data16
fs
loop
rcl
xor
loop
shl
xor
sti
shlb
xchg
imul
pop
scas
loop
push
push
in
cmc
mov
mov
and
scas
mov
sub
sbb
xor
mov
data16
inc
xchg
aad
mul
dec
inc
imul
and
pushf
seta
fisttps
xchg
mov
mov
mov
sti
ret
ja
std
mov
rcr
mov
mov
clc
cmp
cwtl
outsb
cmpsb
pop
outsl
inc
or
mov
sarl
test
test
cwtl
fnsave
subl
inc
mov
cmp
pop
pop
jmp
pop
ja
pop
enter
push
or
icebp
and
mov
call
jge
push
nop
ljmp
les
shll
sbb
push
incb
rclb
loop
mov
std
sub
int
push
cmp
rcrb
push
and
mov
xor
or
or
leave
mov
shl
and
or
push
xchg
jge
sti
and
lcall
daa
pusha
ret
cltd
adc
dec
iret
imul
pop
mov
mov
pusha
push
dec
iret
dec
jb
add
js
mov
adc
test
or
movsl
inc
fcomps
xlat
inc
xchg
mov
daa
loopne
lret
push
test
mov
xchg
adc
insl
xchg
push
push
push
gs
mov
mov
jno
rolb
das
dec
jge
jmp
fisttps
push
sub
mov
adc
cmpl
xor
pop
ljmp
popf
adc
cs
mov
cmpl
dec
addb
xchg
inc
xor
aam
iret
and
repz
test
cltd
or
fimuls
or
push
mov
mov
mov
bound
inc
mov
arpl
dec
xor
sbb
and
popa
and
jp
mov
inc
cli
lds
push
enter
sbbl
mov
insb
or
sbb
inc
push
push
dec
and
sub
pusha
ret
inc
andb
inc
stos
or
push
sub
mov
cli
arpl
fiaddl
rcrb
loop
daa
sub
movsb
negb
out
mov
xchg
cltd
pop
push
adc
icebp
stos
xchg
lods
and
fdivrl
call
push
push
mov
ret
xchg
sbb
adc
hlt
ror
push
inc
push
inc
mov
lock
sbb
xchg
dec
jnp
mov
jmp
pusha
data16
xor
and
mov
imul
add
mov
cmp
pop
into
add
clc
imul
stc
add
lahf
mov
lret
jns
inc
jns
mov
add
sbb
cmpsl
dec
mov
sti
out
inc
xor
sbb
adc
push
push
in
repz
fnstenv
adc
mov
je
mov
jae
std
xchg
or
cmp
arpl
cs
push
mov
dec
cmp
and
js
pop
call
scas
mov
mov
lods
sbb
ljmp
dec
das
inc
in
mov
insb
loope
or
and
dec
stos
daa
lock
xchg
ss
popf
cmp
call
ss
adc
pop
hlt
out
fwait
mov
jb
lods
mov
mov
and
jg
aam
das
push
jae
stos
inc
movsb
push
xchg
mov
dec
jno
arpl
dec
clc
dec
pop
stos
and
ret
and
and
xchg
lea
or
jge
cmp
jno
shr
cmpl
inc
lcall
fwait
mov
add
leave
loopne
add
arpl
cmp
sti
mov
out
and
aaa
pop
jmp
cmp
sub
sbb
outsb
pop
mov
out
jg
mov
add
scas
mov
rolb
cwtl
loop
pop
rorl
ret
mov
mov
enter
shll
popa
cwtl
repnz
int3
jb
pop
add
xchg
mov
lds
add
enter
gs
jge
lret
scas
ret
adc
xor
mov
jmp
arpl
cld
imul
lcall
push
aaa
xor
xchg
push
sbb
leave
mov
adc
enter
dec
jns
pop
lods
push
mov
dec
ds
mov
int3
sbb
adc
pop
mov
out
test
mov
mov
clc
scas
mov
data16
mov
pop
fisubs
pop
js
repnz
cltd
dec
push
and
mov
arpl
sub
test
mov
mov
ret
xor
inc
fists
cmp
pop
dec
mov
inc
pusha
xchg
mov
ja
sahf
add
out
loopne
mov
in
xchg
popf
xchg
jecxz
jmp
ljmp
in
popa
adc
fistps
std
push
mov
inc
addr16
mov
cld
mov
pop
mov
mov
and
hlt
xchg
andl
sbb
cmp
outsl
adc
push
std
int
sbb
fdivrp
or
and
stos
dec
xchg
sub
push
rorl
fcompl
cmp
roll
addr16
lret
out
sub
xchg
and
push
jg
fildll
lcall
mov
pop
lds
ja
and
iret
push
xchg
pop
sbb
ret
scas
pop
ret
push
subb
int
mov
stc
jp
imulb
jmp
and
lods
push
ret
xchg
push
mov
enter
lret
or
outsb
andb
push
lahf
jo
out
ss
mov
mov
push
push
shrl
sub
icebp
movsb
cmp
stos
sub
js
test
or
out
xor
bound
dec
mov
lret
js
jge
jg
scas
jge
insb
gs
sahf
icebp
mov
and
bound
into
aas
movsl
stc
ror
xor
popf
adc
mov
in
popf
mov
lret
jno
add
jp
scas
xchg
je
fistpl
and
addr16
pop
pop
sbb
lret
cmpsb
mov
add
sahf
daa
sbb
pop
xchg
lret
and
xchg
add
repz
mov
nop
shlb
fadd
mov
mov
loop
sbb
pop
test
sbb
xchg
gs
lods
je
pop
repnz
xor
fidivs
mulps
dec
aaa
inc
xchg
jbe
mov
and
orl
mov
pop
lret
lods
lret
pop
inc
scas
and
pop
test
inc
mov
arpl
outsb
ficompl
lods
mov
adc
or
stos
and
and
out
cmp
mov
add
rcr
mov
jg
fcmovnb
hlt
hlt
or
push
popf
push
xchg
repz
pop
dec
xchg
popa
int
mov
testl
mov
push
out
les
push
xchg
enter
mov
das
add
adc
dec
into
inc
icebp
dec
sub
dec
or
inc
scas
testl
dec
sub
popf
addl
push
popf
mov
dec
je
addl
mov
dec
mov
push
inc
sahf
mov
rorl
mov
inc
clc
stos
fs
ret
sbb
jecxz
dec
sbb
and
out
mov
insl
scas
push
dec
or
roll
pop
mov
je
ja
into
cmp
ljmp
or
jbe
dec
push
pop
aam
lods
mov
sbbb
mov
fisubl
xchg
ret
inc
outsb
cmp
orl
addl
js
inc
fldcw
aam
mov
add
mov
xchg
popa
hlt
inc
and
aad
sub
sub
lcall
divl
imul
aaa
inc
sbb
cld
loopne
mov
test
jb
fwait
cmpsl
test
cmpsl
arpl
and
push
addl
adc
js
mov
loop
adc
and
adc
jns
enter
cmc
add
fnstcw
flds
or
js
sub
sbb
dec
nop
push
jecxz
push
mov
imul
imul
mov
loopne
pusha
pop
ja
pop
xchg
jae
sahf
jns
cmp
jo
jo
mov
pop
pop
test
out
test
xchg
jge
jge
test
sbb
les
pop
xchg
inc
int3
into
cmc
xchg
fs
sbb
and
inc
arpl
pop
and
push
popf
push
push
popa
mov
repz
mov
mov
xor
sbb
lahf
mov
test
xor
cmpsb
mov
getsec
xchg
sti
dec
orl
jmp
mov
mov
ljmp
movsb
jb
mov
call
test
push
mov
xorl
cmp
mov
inc
repnz
push
add
mov
das
mov
imul
dec
inc
jnp
jg
push
mov
jbe
push
in
xor
repz
mov
lock
xor
leave
das
stos
pop
cwtl
pop
pop
test
mov
dec
sub
push
add
inc
iret
pop
mov
mov
pushf
jmp
xchg
sarl
pop
nop
fisubs
fdivl
mov
push
movl
lcall
outsl
mov
filds
in
and
cmp
pop
xlat
imull
mov
pop
sub
insb
pop
sbb
cmp
testl
mov
hlt
mov
scas
xchg
or
cli
sbb
test
mov
insl
inc
jno
pop
xchg
lret
adc
es
jg
mov
shll
pusha
xchg
add
mov
imul
dec
repnz
rcrb
fs
jb
push
pop
xlat
mov
testw
sub
jecxz
lods
pop
jno
loopne
lea
in
outsb
in
scas
std
dec
out
dec
ds
mov
jae
sbb
aad
ret
sahf
sarl
mov
push
jo
push
push
out
hlt
test
mov
das
sti
fwait
mov
sti
dec
push
xor
fcmovnu
add
dec
and
pop
xchg
cwtl
pop
rolb
pop
sti
mov
insb
pop
add
inc
int3
fstps
push
adc
jmp
bound
cld
and
mov
lahf
add
sub
mov
fs
test
and
lds
mov
push
sub
sub
iret
dec
cmpsl
imul
push
mov
add
push
cwtl
add
jnp
popa
repnz
pop
loop
scas
mov
push
scas
lods
out
push
in
jb
sti
jo
jns
adc
jb
loop
dec
push
xchg
fidivs
xchg
xor
jg
addl
ret
and
rclb
and
cmp
push
xor
pop
cli
test
insl
or
adc
out
jge
addr16
sbb
jae
sti
pusha
daa
scas
sbb
xchg
fisttpl
pop
push
std
mov
adc
jmp
int3
sbb
adc
lods
pop
push
xchg
mov
mov
cmp
lds
mov
lcall
fisttps
xlat
xor
pop
sbb
dec
insl
cmp
mov
fdivp
in
jbe
sbb
fisttpll
push
sub
xchg
add
lods
adc
repnz
iret
test
ja
adc
cld
dec
sbb
mov
insl
cmpw
pusha
aad
adc
ja
push
icebp
lods
xor
mov
aad
sbb
test
fwait
mov
popf
fisttps
or
cmpsb
dec
sysret
popf
scas
test
sub
mov
inc
insb
fcoml
mov
mov
popw
cmpsb
add
andb
ficompl
nop
stos
enter
mov
xlat
adc
mov
lret
fistpll
xchg
les
mov
dec
loope
jp
dec
loop
ret
adc
xor
scas
hlt
cmpl
jbe
out
lret
cmp
push
into
rclb
mov
pop
paddsw
pop
cmpsl
sbb
jl
test
dec
in
pop
aas
cli
into
adc
dec
mov
into
mov
push
orl
inc
ja
imul
repnz
sub
sub
in
outsb
mov
test
cmp
fiaddl
push
out
popf
cmpsl
stos
jo
cmp
jecxz
mov
movb
xchg
add
push
hlt
stc
adc
pop
jo
stc
ja
scas
sub
push
sbb
xchg
fwait
lods
jo
mov
push
inc
push
scas
cmp
or
cmp
or
push
ficoml
add
xchg
fcomp
shlb
or
jae
sbb
jp
push
js
in
jae
push
pop
and
xor
push
xchg
in
mov
stos
xchg
das
js
or
ja
leave
lcall
cmp
dec
sbb
pop
jbe
scas
int3
inc
mov
jmp
mov
arpl
mov
jge
fwait
cmp
xchg
addr16
inc
lods
test
hlt
ss
cmp
pusha
test
lret
mov
test
arpl
mov
fcmove
add
jbe
add
stos
xor
adc
testb
cmp
into
add
adc
jle
outsb
adc
dec
xor
or
std
lret
xor
mov
stos
aam
jmp
xor
fidivrs
arpl
test
mov
bound
push
outsl
jbe
dec
test
insl
mov
idiv
js
pop
out
pop
loop
pusha
push
aaa
fs
mov
xor
adc
xor
jl
sub
and
mov
mov
flds
es
adc
stos
stos
in
dec
push
dec
lret
adc
lods
mov
lahf
or
cs
inc
inc
cwtl
adc
lods
fimull
and
xor
bound
push
ficoml
sbb
ss
mov
dec
jle
filds
xchg
pop
std
xchg
and
fstpt
pop
sub
ret
mov
sub
mov
mov
add
test
mov
pop
in
and
xor
int
jmp
roll
clc
mov
mov
sbb
or
jo
xor
fstpt
cmpsb
sbbb
jp
out
pop
aam
dec
jns
dec
movsb
stos
sbb
add
fwait
addr16
repz
mov
xchg
data16
lds
jecxz
push
test
ja
fiadds
push
in
mov
sub
or
push
mov
push
call
lock
sub
add
in
pop
int3
push
cmp
and
repz
sbb
test
rcl
xchg
sub
and
es
repz
jl
gs
inc
fmull
sbb
insl
inc
loop
add
or
cmp
cmp
inc
aas
mov
inc
lret
in
fwait
cld
jns
test
mov
lods
and
dec
add
adc
jo
mov
ja
out
dec
mov
and
inc
lcall
js
jno
mov
adc
out
and
mov
daa
and
push
call
nop
mov
sbb
mov
sahf
fnstenv
and
and
scas
fadd
push
inc
or
movsl
mov
stc
pop
adc
ror
cwtl
lea
sub
test
pop
ljmp
mov
jmp
insb
fisttpl
pop
cmp
jge
loopne
cwtl
add
sbb
mov
test
or
das
pop
push
or
ss
add
int3
xchg
not
idiv
cmp
mov
je
mov
fldl2e
sbb
mov
jb
push
pop
pop
hlt
cmpb
pop
jb
jns
rcrb
movsb
dec
jle
inc
xchg
insb
in
inc
mov
xchg
faddl
and
mov
and
dec
fwait
jne
adc
in
mov
add
pop
repz
test
ja
xor
pusha
xchg
ds
les
daa
mov
cli
push
add
dec
sbb
mov
mov
les
fdivrp
push
into
loopne
int
sahf
adc
mov
xor
shll
inc
xchg
xor
jle
pop
pushf
or
mov
stos
xchg
pop
out
mov
fisubl
cwtl
lret
fmull
add
jl
mov
cmp
mov
outsb
test
ds
and
test
mov
in
adc
jmp
and
sahf
aas
mov
jns
jecxz
or
jno
sbb
into
loope
jne
mov
mov
push
and
mov
lret
or
xor
xchg
mov
pushfw
pop
jg
cltd
mov
outsb
sti
sbb
enter
es
fnstsw
pushf
lock
je
repnz
pop
sub
cmp
and
or
cmp
pop
mov
cmp
xor
mov
mov
loope
push
faddl
cmp
dec
fcmovnbe
bound
pop
sub
sub
jnp
aaa
ret
int3
inc
inc
and
push
dec
pop
push
push
ljmp
js
cmp
xchg
fwait
jl
cmp
mov
cmp
scas
adc
sub
clc
loopne
and
push
sub
ret
dec
hlt
cmc
test
jg
fst
adc
push
cs
out
sbb
adc
pop
js
cmc
or
out
int3
out
mov
push
fistpll
jns
js
enter
push
push
mov
sub
ret
sub
js
cmp
xchg
inc
xchg
mov
ffree
adc
pop
and
dec
inc
js
bound
inc
loopne
outsb
aad
fwait
out
popl
add
jbe
cmp
xchg
jle
test
nop
into
ss
push
test
enter
pop
add
pop
push
pop
hlt
dec
sub
lcall
mov
jno
push
push
jp
cmp
xchg
cmp
sbb
sub
into
push
in
mov
je
xchg
mov
mov
sbb
push
test
fcom
shlb
in
imul
enter
aad
bound
invd
adc
sub
cld
xor
adc
ret
ja
adc
push
push
ds
pop
cwtl
sub
scas
fcmovbe
nop
mov
mov
aam
sub
fistpll
mov
lds
sub
xchg
test
les
das
push
mov
xchg
cmp
or
cmp
jno
xchg
and
cmp
add
push
push
lahf
mov
dec
or
mov
push
enter
xchg
popf
mov
fiadds
sbb
mov
xchg
neg
push
or
xchg
jg
mov
add
repz
aas
sahf
add
leave
fsubr
add
ret
push
sahf
bound
lea
cs
cld
int3
xchg
jmp
push
push
mov
mov
pop
lret
xlat
jl
dec
shlb
in
ljmp
out
jge
lds
dec
jae
adc
and
insl
and
rcrl
scas
and
sbb
rclb
out
pusha
mov
fldcw
pushf
mov
out
test
bnd
xor
je
scas
pop
dec
gs
lret
in
divl
jmp
add
lods
loope
test
xchg
loopne
or
inc
int3
add
scas
das
je
inc
mov
dec
fstp
jg
push
sub
sbb
xchg
int
jmp
testl
pop
out
ret
xor
or
test
add
lds
pop
mov
out
shl
pop
mov
ljmp
pusha
adc
pushf
and
mov
imul
imul
mov
out
cmp
inc
out
jns
mov
adc
cmp
les
test
fwait
lods
fimull
cmp
dec
xchg
sbb
mov
imul
adc
in
sar
inc
mov
mov
ret
aam
je
loopne
xchg
cli
rolb
add
pop
dec
pop
js
xchg
sub
dec
xor
mov
xchg
adc
fstl
fwait
jae
cli
clc
pop
cmpsb
subb
xchg
in
mov
movb
daa
pop
or
push
mov
or
sbb
fidivs
test
rclb
xchg
lcall
push
inc
andl
jecxz
sbb
fistpl
imul
sbb
dec
mov
or
mov
xlat
stos
jmp
imul
cmc
jecxz
mov
sahf
iret
jg
cmc
inc
ds
ds
cmp
cwtl
in
repnz
adcb
loopne
cmc
pop
inc
sbbb
loope
or
mov
fisubl
add
inc
aas
adc
leave
jo
add
sarb
inc
inc
dec
and
ret
sarb
xor
mov
sub
addr16
and
sbb
scas
mov
fiadds
mov
loopne
fisttpll
cli
and
jo
clc
ffree
adc
sub
xor
push
dec
mov
scas
add
les
xor
pop
xchg
push
movsb
loope
inc
mul
shlb
dec
dec
mov
mov
insb
out
push
pop
maxps
scas
fcompl
and
iret
push
movsb
stos
movsl
data16
out
inc
pop
cmp
mov
pop
mov
sub
push
pop
dec
cmc
clc
sbbb
xlat
popf
xor
hlt
push
xor
mov
xor
daa
xchg
pop
jg
out
ljmp
aad
and
divl
push
mov
rcll
xlat
pop
sbb
ljmp
imulb
mov
dec
rorl
mov
lahf
jnp
je
pop
lcall
lods
popa
shl
and
test
loope
addb
adc
ljmp
mov
and
loopne
sbb
enter
mov
mov
ret
add
shr
xlat
dec
and
or
stos
pop
pop
mov
or
loopne
add
dec
test
mov
mov
add
mov
add
test
jb
into
shlb
cmp
les
movsl
xchg
or
and
or
rorb
ret
xchg
stos
xor
xchg
pop
adc
dec
or
push
cltd
xor
repnz
faddl
es
fistps
loope
ds
mov
outsb
mov
jp
aad
pop
icebp
xchg
and
imul
cmp
mov
dec
hlt
je
mov
mov
mov
out
outsl
dec
jmp
cmp
cmpb
stc
dec
pusha
and
in
ror
test
xor
rorb
mov
repnz
add
cmp
stc
pop
in
loope
rcr
dec
pop
add
xchg
adc
jmp
pop
dec
cs
andl
iret
arpl
jmp
lds
frstor
inc
movsb
sub
int3
rorl
arpl
pop
jno
cmpsl
pop
and
in
movsb
push
and
push
adc
mov
leave
imul
pusha
cmpsl
out
mov
xchg
adc
push
bound
call
dec
ret
xchg
pop
das
and
jmp
mov
aad
add
pop
addr16
and
push
rclb
sbb
mov
xchg
mov
shrb
mov
clc
rcll
aas
jle
sub
mov
arpl
in
xor
mov
fbld
mov
xchg
xchg
push
fimull
xchg
sbb
mov
mov
addr16
pop
aad
shll
and
fwait
dec
sbb
add
jmp
sti
daa
aad
xchg
leave
sub
pusha
pop
cmpsl
cmpsb
push
nop
inc
fnclex
mov
add
movsb
js
test
sub
sbb
mov
jmp
mov
mov
ret
sbb
xorl
outsl
pop
icebp
adc
enter
jp
cli
dec
inc
in
and
scas
fwait
cmp
outsl
neg
ja
cltd
mov
add
pushf
insb
mov
add
xor
add
sub
test
rcl
mov
and
cwtl
dec
xor
mov
mov
cs
sbb
decl
or
push
cltd
push
add
test
and
fisubrs
fwait
mov
hlt
cmp
ss
cmpsl
add
clc
pop
adc
hlt
test
mov
cli
js
adc
xlat
jmp
scas
test
add
sbb
adc
xchg
mov
push
jmp
add
jecxz
sub
sub
sub
test
xlat
or
fsubrl
sub
call
aaa
aaa
loop
inc
xor
cltd
inc
sub
inc
add
mov
fsubl
mov
cmp
inc
pop
mov
sub
dec
sub
and
xchg
fistps
lahf
out
mov
sbb
fstpl
les
lea
ja
mov
jl
adc
test
sbb
cltd
pop
xor
stos
adc
xor
int3
push
adc
jno
cs
pop
or
movsl
mov
xchg
xchg
inc
jnp
adc
jmp
adc
and
je
cmpsl
cmpsl
lds
pushf
push
pop
ds
xchg
cmp
stos
out
mov
cmp
ja
xchg
clc
push
rorl
dec
loope
sbb
fisttpll
pop
mov
dec
ja
mov
pop
jnp
popf
adc
or
sbb
add
mov
idivl
push
lock
es
jg
inc
cwtl
arpl
cld
and
xchg
mov
dec
inc
dec
jmp
mov
inc
push
or
push
test
mov
jg
jno
in
and
xchg
test
sub
sub
pop
sub
push
inc
ss
and
xchg
test
sub
loop
jae
call
fstpl
sti
add
xorb
mov
sbb
xchg
cwtl
adc
in
dec
xor
mov
std
clc
es
and
jae
xlat
notb
push
dec
and
imul
jbe
ds
xchg
mov
xchg
mov
mov
cmp
mov
sbb
and
dec
loope
cmp
lret
push
sbb
xchg
inc
loop
je
and
mov
sbb
cli
cmp
and
xor
ljmp
jns
and
or
jge
mov
leave
lods
mov
xor
pop
pop
xchg
pop
add
or
lods
mov
xchg
mov
imul
push
sbb
shll
mov
and
popf
out
inc
loop
scas
mov
jecxz
or
push
push
fsubr
not
out
call
jp
add
mov
xor
sub
cli
mov
out
jns
inc
pushf
pop
cmpsl
aad
test
popa
add
dec
or
hlt
das
jae
push
sbbl
sub
daa
pop
sub
sub
mov
sub
pop
inc
xchg
cld
leave
pop
jp
xor
clc
inc
cmp
dec
outsb
mov
pushf
pop
ss
mov
loope
loope
lcall
ja
inc
js
adc
mov
mov
and
aam
fldt
mov
xchg
xor
mov
lods
ds
mov
popf
test
push
sbb
les
xchg
call
rorb
xchg
fwait
std
mov
xchg
pop
inc
fcoms
test
jbe
mov
sub
dec
scas
sbbl
jl
ja
cmp
das
cli
adc
mov
mov
mov
push
movsl
ret
inc
ss
leave
pop
sub
cmp
pop
mov
iret
in
xchg
mov
cmp
pushw
cmp
pop
mov
inc
arpl
clc
pop
inc
inc
rolb
movsb
xchg
roll
test
add
or
mov
mov
dec
stc
ficoms
int
outsb
mov
scas
inc
xchg
jg
in
testb
and
inc
in
jnp
je
enter
cmpsb
or
mov
aas
movsl
jae
callw
push
or
or
ret
inc
addr16
es
scas
decl
repz
rcll
sahf
addl
insl
sbb
sub
inc
or
shll
xchg
aam
dec
ja
mov
dec
add
lcall
inc
push
or
lret
insl
push
mov
xchg
inc
cmp
jge
repnz
es
movsl
adc
out
pop
pop
sub
addr16
push
jo
fstpl
repnz
fldenv
in
mov
mulb
pushw
popa
out
cmp
leave
and
lods
repnz
lods
out
and
lahf
aam
sub
movsl
lods
imul
mov
mov
mov
outsl
fidivl
ret
bound
xchg
lea
repz
cltd
lods
adc
scas
jns
push
sbb
repz
xchg
push
aad
out
mov
es
fsubr
aas
inc
push
fcmovnu
xor
shlb
xchg
cmpsl
sub
fisubl
ror
pop
std
jmp
leave
sti
or
out
scas
or
mov
sbb
add
xor
mov
xorb
insb
mov
setge
dec
pusha
pop
pop
push
jo
call
or
dec
pop
mov
leave
fmull
les
aaa
xchg
ret
stos
pop
push
or
cmp
scas
dec
inc
lcall
cmc
pop
jo
jecxz
sbb
or
cmpsl
inc
fisubrl
jne
sarl
aas
cmp
addr16
mov
inc
jnp
adc
and
outsb
inc
ret
cmc
mov
jo
inc
dec
sub
outsb
jle
mov
cs
push
icebp
in
xchg
xlat
inc
cmpsl
adc
xadd
rol
add
inc
mov
jo
push
imull
fisttpl
pop
inc
or
dec
push
add
inc
mov
fbstp
out
fcoml
lahf
inc
xor
sub
lret
arpl
jg
sub
mov
push
out
cmp
adc
and
inc
mov
push
ljmp
sahf
les
mov
and
mov
push
pop
stc
push
mov
cmp
sarb
xchg
adc
or
mov
aaa
aam
sbb
ds
std
xor
ror
test
push
leave
adc
in
sub
push
pop
push
int
pop
xchg
test
scas
mov
rorb
mov
xor
jp
push
cmp
in
test
iret
mov
lret
std
sbb
aad
pop
inc
in
ss
mov
add
sub
jg
flds
dec
sub
outsb
sbb
insl
jge
mov
push
mov
dec
adc
test
sbb
lret
lock
fiadds
cmp
push
mov
or
mov
movsl
scas
loope
ds
jns
shlb
pusha
xchg
xor
movsl
add
cmp
inc
jecxz
push
cmpsl
std
mov
dec
push
jae
jb
xchg
shlb
pusha
je
jae
sbb
pop
push
enter
pop
mov
push
mov
jl
jb
inc
sub
out
xor
jmp
in
aam
je
test
xor
xor
out
push
fs
pop
mov
fcomip
push
lret
sbb
inc
add
fcmovnbe
lcall
jo
ja
xor
decb
scas
and
and
or
add
xchg
int
and
je
mov
add
lods
push
nop
out
dec
pop
sub
dec
outsl
mov
adcb
ret
pop
shl
adc
or
adc
mov
cmp
xchg
xchg
lret
pusha
add
jno
sub
cs
lea
and
xchg
or
mov
rorl
popa
xor
cmp
test
ret
call
lret
ss
repnz
adc
inc
negb
ds
or
jne
dec
fiadds
subl
stc
mov
xchg
pop
xor
rcr
outsl
mov
adc
dec
pop
ljmp
inc
xor
imul
jbe
cmp
mov
int3
jns
xchg
dec
lcall
cld
add
test
and
mov
pop
or
enter
jnp
out
push
push
push
hlt
lahf
out
mov
ljmp
mov
popl
jb
cmp
out
mov
call
push
inc
push
test
dec
mov
movsb
xor
div
test
pop
inc
dec
push
jb
andl
icebp
jae
dec
and
push
mov
stc
inc
ret
mov
stos
or
fcomip
sbb
hlt
dec
dec
dec
inc
mov
scas
ds
cmp
out
xlat
mov
shrb
cmp
inc
repz
fsubrs
in
push
in
insb
faddp
jle
subb
jl
imul
fidivl
sub
pop
mov
test
dec
inc
es
ja
push
push
enter
mov
cmp
outsb
outsl
call
outsl
pop
or
jae
insl
outsl
adc
or
movsb
lret
jns
adc
cmp
or
dec
nop
mov
mov
push
add
cwtl
add
cli
xorl
icebp
xchg
enter
in
mov
add
jno
hlt
pop
cmp
dec
pop
clc
addb
sbb
xchg
movsb
push
xchg
or
bound
push
jb
in
in
lods
out
das
push
psrad
and
pop
lret
orb
mov
pop
pop
add
into
and
sbb
dec
cmp
and
pop
or
add
leave
inc
adcb
pop
mov
xchg
dec
fisubrl
jo
sbb
in
cmp
or
ljmp
rorb
cltd
cmp
cmp
arpl
and
loope
stos
in
js
sub
stos
daa
mov
pop
xor
mov
lea
cmp
das
inc
mov
shl
pop
push
loopne
jo
leave
jecxz
int
imul
add
and
sub
adc
sub
pushf
jno
insl
xchg
int
jg
push
or
sub
xchg
sbb
push
cltd
pop
filds
stos
cmc
fidivrs
sub
stc
mov
xchg
mov
xor
lods
mov
sub
in
lcall
test
mov
and
mov
dec
mov
sub
mov
pop
sub
nop
aaa
pop
insl
inc
adc
jae
test
ja
mov
push
fs
push
xor
xor
popa
rorl
repnz
and
dec
or
mov
not
ljmp
icebp
push
push
imul
in
dec
cld
cltd
cmp
mov
dec
out
mov
push
xor
lods
in
adc
pusha
mov
adcl
mov
xchg
cmp
fs
mov
aas
bound
jmp
bnd
aas
inc
lods
add
or
and
adc
pop
mov
mov
inc
xchg
push
ss
mov
stos
das
mov
shll
cmpsl
cmpb
jns
pop
in
dec
add
sbb
into
mov
jge
add
insl
inc
mov
mov
dec
lock
jno
shlb
sbb
jmp
insb
scas
in
mov
xchg
or
sbb
mov
jo
lea
inc
ffree
clc
push
mov
leave
scas
imul
je
jns
addl
xor
xchg
or
rorb
and
pop
test
adc
add
aas
and
jo
dec
or
outsb
lahf
leave
mov
lea
insl
pop
nop
push
nopl
xchg
orl
shll
ds
mov
scas
or
dec
in
inc
pop
rol
pop
scas
dec
xor
int
adc
fstl
cmp
and
jg
test
in
enter
mov
mov
adc
testb
push
pop
inc
jnp
movb
push
ljmp
xor
and
jae
jnp
sbb
xor
hlt
xor
adc
es
sub
ljmp
dec
pushf
int
pop
cmp
push
insb
lds
lret
adc
dec
mov
movsb
in
and
outsl
stc
push
enter
mov
push
clc
insb
cli
and
pop
iret
dec
scas
data16
mov
test
xchg
sbb
rorb
xor
repnz
adc
adc
pop
xchg
dec
mov
test
lahf
outsl
aas
mov
loop
daa
sti
sub
mov
addr16
loope
cmpsl
frndint
push
mov
sub
sbb
cmpb
push
cmc
add
subl
mov
adc
mov
mov
push
movsl
jns
mov
jl
outsl
jo
imul
xor
sbb
pusha
inc
mov
push
sahf
setnp
mulb
daa
sbb
push
shld
or
mov
push
ret
add
dec
push
inc
das
aad
test
sbb
mov
jo
mov
cmp
or
xchg
add
aaa
jg
test
popf
ljmp
test
loopne
mov
pusha
cs
cmc
lea
inc
std
push
imul
and
cmc
test
add
xchg
out
gs
xorb
or
jle
andl
ja
fsubrp
add
cmp
mov
test
scas
xchg
out
mov
jo
sbb
ret
pop
mul
scas
xor
daa
movsl
mov
scas
jl
add
pop
clc
adc
add
xchg
jnp
ret
pop
mov
call
out
pop
fisttpl
fcomp
dec
sbb
xor
push
push
test
or
into
mov
aad
arpl
pop
test
adc
jp
jbe
mov
cwtl
pcmpeqb
scas
xchg
stos
sahf
mov
in
xchg
cmp
movzwl
mov
xchg
std
pop
sti
fxsave
push
call
cmp
outsl
add
jnp
and
push
scas
jnp
push
dec
popa
je
jge
outsb
js,pt
xchg
xlat
icebp
cmp
push
orl
fisubrs
sahf
pushf
ss
icebp
lcall
push
push
fistps
adc
gs
les
push
ret
xor
mov
cmp
jge
cmp
mov
mov
dec
jbe
xchg
adc
stos
sbb
dec
adc
mov
xor
movsb
fwait
inc
inc
loopne
adc
outsl
or
jno
dec
inc
inc
jo
add
and
movsb
pop
sub
dec
mov
cmp
and
jne
add
mov
dec
mov
sbb
test
rcrl
popf
into
test
xchg
ficomps
fwait
sbb
pop
stos
icebp
mov
es
in
cmp
fwait
mov
movsl
daa
push
xor
jl
mov
lcall
adc
xchg
pop
cmpsl
adc
pop
fidivs
lahf
xchg
orb
imul
shrb
sti
subl
adc
jl
rorl
std
sbb
xchg
inc
icebp
dec
mov
pop
sbb
dec
mov
shrb
pop
cmp
out
je
clc
jg
xor
cmp
subb
adc
movsb
and
je
sahf
jle
testb
fwait
pop
lret
scas
test
dec
add
das
addl
and
mov
cmpsl
lahf
cli
outsb
pop
ss
sti
addl
rcll
cwtl
andl
int3
mov
shl
ds
push
jle
lods
add
mov
push
add
mov
fnstcw
mov
lcall
mov
inc
and
popa
inc
lcall
xlat
or
daa
mov
cmp
int3
xchg
push
xchg
int
xlat
pop
sbb
sbb
cmp
fwait
inc
cmp
lret
adc
cmp
ss
inc
pusha
fistpll
lret
aam
mov
cmpsb
jb
or
stc
leave
and
xor
daa
and
jle
test
sbb
xchg
sbb
jbe
mov
xor
mov
xor
aad
outsb
dec
in
jnp
push
dec
jne
mov
push
mov
cmp
sub
sahf
scas
outsb
xor
out
divl
inc
arpl
fdivrl
out
mov
mov
push
mov
jae
and
dec
shrl
mov
add
mov
rcl
fistl
dec
stos
loope
imul
sub
out
fcmovb
stc
ror
idivl
xchg
xchg
jno
pop
shlb
pop
ret
inc
ret
jl
ljmp
adcl
sbb
sarl
or
jl
les
add
mov
mov
mov
mov
mov
inc
popl
cmp
loope
jbe
jo
adc
mov
pop
fcoml
out
jl
xchg
or
sub
mov
push
pushf
je
mov
dec
cs
sbb
mov
insb
push
xchg
mov
stos
call
sub
mov
dec
cmp
dec
jle
movsl
rorb
iret
enter
xor
mov
cmpsb
clc
jecxz
outsl
inc
fists
pop
mov
sbb
mov
data16
add
out
lret
push
mov
es
mov
jp
xor
ds
call
mov
out
xchg
stos
stc
push
scas
sub
xchg
lds
adc
enter
adc
cmc
lods
xchg
movsl
fdivl
pop
mov
sbb
arpl
imul
je
push
cld
shlb
mov
psubsw
mov
rcr
faddl
jecxz
add
mov
sbb
das
mov
into
cwtl
in
push
lcall
cld
cmc
int3
add
cmpsb
push
mov
mov
inc
dec
shr
mov
adc
push
icebp
pusha
jns
xor
fistl
fcmovb
jbe
adc
insb
sbb
mov
xor
lret
push
fmull
push
adc
fwait
sahf
repz
adc
imul
aam
nop
push
scas
xchg
jp
mov
mov
data16
mov
mov
mov
pop
inc
mov
inc
std
leave
mov
lock
xor
sub
pop
sbb
mov
mov
shl
hlt
jl
push
inc
out
lock
sti
test
idiv
add
jbe,pt
mov
popa
xchg
negb
jb
or
mov
mov
push
push
mov
aam
aas
mul
inc
fcomip
ljmp
mov
inc
cmp
dec
push
test
pop
cltd
jg
addr16
sahf
adc
cmpsl
cmp
lcall
inc
add
pop
test
jmp
andl
push
xchg
fs
pop
pop
stos
lock
iret
push
data16
lock
mov
sti
popa
mov
repz
test
scas
cmp
mov
cltd
mov
fnstenv
sahf
mov
scas
mov
pop
int
outsb
mov
test
ficompl
xchg
jo
sbb
lea
push
jg
or
xchg
push
jmp
subl
inc
mov
inc
fldl2e
or
call
adc
push
and
fidivs
dec
sub
in
fptan
shl
test
push
push
mov
ljmp
xor
mov
sbb
faddl
in
outsb
add
or
mov
mov
push
mov
and
pop
sbb
out
pop
jp
stos
stos
mov
out
divb
push
xor
iret
or
xor
and
insl
ljmp
pushf
stc
mov
decl
mov
psubusw
mov
sub
ja
scas
cmp
push
pop
dec
mov
adc
push
int3
push
xchg
dec
je
cmp
jmp
dec
mov
push
int3
sbb
or
or
cs
inc
loopne
test
add
lock
clc
dec
add
mov
nop
lds
outsl
mov
add
mov
cmp
in
das
hlt
outsb
scas
dec
jmp
cmpsb
cwtl
outsl
xchg
or
mov
les
mov
insl
nop
xchg
xor
stos
add
and
aam
cmpsl
ret
mull
push
bound
jecxz
add
inc
gs
and
mov
mov
call
add
aas
push
add
test
mov
lret
shlb
dec
cwtl
icebp
in
sub
xchg
out
insb
mov
or
popf
mov
xchg
mov
lahf
cmc
in
sub
jns
sub
imul
cwtl
fsts
sahf
stos
or
push
stc
ja
test
adcl
aad
popf
fstl
movsb
xor
and
xchg
cmp
mov
push
push
mov
push
xor
and
dec
sbb
jne
pop
dec
push
sbb
je
rcrb
inc
pop
loopne
imul
sub
gs
xchg
mov
xchg
fcompl
int3
nop
lds
scas
dec
ljmp
xor
mov
mov
lcall
push
xor
push
sbb
push
sub
shll
adc
in
sti
jo
dec
leave
jb
pop
push
std
dec
popa
mov
sti
push
and
negl
loope
pop
push
dec
and
sbb
cmc
mov
in
and
out
jmp
xor
ret
inc
mov
pop
popf
cmp
mov
fwait
fwait
iret
in
push
mov
cmp
sbb
stc
jns
sub
pusha
rorl
js
into
neg
mov
push
call
test
xor
or
ret
or
sbb
sbb
dec
add
push
dec
or
shll
iret
mov
pop
lea
shlb
fmull
sbb
pop
aad
cmpsb
add
add
std
xchg
sub
cmp
cmp
cmpsb
cmpsl
ss
xchg
pop
push
pop
bound
pop
and
icebp
cmc
and
xrelease
xorb
fwait
or
ret
mov
mov
push
push
dec
pop
mov
arpl
and
xchg
xor
pusha
mov
fidivs
push
nop
es
fadds
add
movsl
mov
cli
out
pop
mov
adc
xchg
jg
push
scas
inc
test
loop
frstor
mov
mull
mov
or
jge
jbe
mov
sbb
adc
and
or
js
mov
pop
fldt
mov
mov
aad
aad
add
xlat
subl
cmp
popf
mov
cmc
or
test
insl
dec
push
and
stos
or
mov
push
test
loopne
push
push
cld
imul
iret
sahf
adc
dec
out
insb
and
fidivl
gs
popf
jg
add
mov
add
pop
pop
xchg
cmp
inc
repnz
and
mov
pop
test
aam
sbb
pop
in
or
popa
nop
dec
cmpsl
stos
lods
scas
movsl
ljmp
ds
mov
xchg
cmp
xor
testl
mov
add
or
pop
cmp
pop
and
outsb
mov
add
xlat
enter
rep
mov
mov
inc
xchg
mov
orl
pop
stos
aaa
dec
pop
negl
sbb
aam
fmul
mov
fstpt
std
adc
iret
adc
loopne
mov
sub
jmp
enter
pop
rcl
fldlg2
or
mov
mov
and
loopne
bound
mov
test
push
fwait
nop
aaa
scas
jg
rcrb
into
shll
cwtl
pop
aam
push
sti
test
popl
and
fldenv
add
int
lcall
or
cmp
idivl
sub
pop
xor
outsb
test
dec
push
mov
sbb
ror
xchg
js
add
fsubs
movsl
das
pop
es
xor
add
ss
nop
jb
movsl
mov
imul
gs
aaa
sbb
shl
fs
or
pop
fisttpl
xor
mov
icebp
jne
mov
sbb
pop
aam
and
test
jle
and
sub
adc
adc
jbe
mov
out
jns
xchg
pop
les
sub
outsl
jnp
out
jge
or
std
xchg
cmpl
test
jle
xchg
cmp
sbb
lods
pop
testb
stc
out
andl
cld
mov
es
rcl
or
out
mov
out
jp
inc
cmp
ret
movsl
inc
pop
and
rorb
inc
fsubl
lock
xor
orl
mov
ficomps
fwait
shll
insb
jb
incb
bound
jge
shrb
loop
bound
lds
xor
setp
daa
mov
pop
jp
cmpl
cltd
mov
sti
dec
cmc
push
cmpsl
cmc
cmp
jns
shl
or
cli
loop
push
daa
test
and
or
nop
sbb
xlat
inc
lret
jne
bound
loopne
fs
add
xor
xor
cmp
out
daa
lea
or
cmp
ja
lcall
add
pop
fs
notl
dec
imul
push
mov
outsb
xchg
outsb
shll
pop
mov
mov
xchg
ficoml
or
jmp
sbb
add
ja
xchg
into
ljmp
sub
fistpll
sbb
inc
iret
pop
xor
add
ficompl
cmp
adc
cltd
cmp
or
xchg
cmpb
ss
into
cmp
adc
and
jne
sub
dec
inc
mov
loopne
in
jecxz
outsl
sar
mov
xchg
ja
out
mov
mov
mov
std
outsl
mov
aad
pushf
stc
jns
out
stos
dec
sub
popa
mov
das
jae
dec
fstpl
adc
pushf
inc
cli
into
adc
cli
sti
mov
xchg
ret
xchg
jg
mov
and
sbb
cmc
xor
mov
mov
ficomps
sub
and
es
pushf
sbb
adc
nop
fwait
shlb
data16
rcrl
pop
aaa
mov
pop
mov
sbb
mov
pop
jno
addl
push
mov
pop
jl
xchg
pop
mov
xchg
adc
iret
insl
leave
pop
sarl
jmp
movsl
xor
pushl
mov
inc
lret
aam
dec
out
xorb
mov
loopne
add
mov
std
jne
imul
dec
mov
jb
sbb
sbb
adc
jge
sbb
push
repz
pop
pop
or
or
push
xchg
scas
mov
inc
jl
mov
push
data16
subl
lret
adc
xor
adc
ss
das
insb
mov
hlt
scas
scas
cmp
xchg
js
rolb
lcall
lret
inc
fdivs
stc
pop
and
xchg
and
dec
mov
outsb
or
mov
add
push
call
adc
outsl
xchg
andb
lret
mov
nop
bound
mov
mov
into
repnz
das
ret
pop
pusha
gs
push
es
jp
xor
push
in
data16
sbb
xor
xchg
mov
xchg
mov
orb
sbb
jg
ret
push
dec
fst
sbb
fs
movsb
xor
xlat
frndint
add
mov
das
mov
jmp
jne
andl
jae
enter
mov
dec
adcl
in
xor
jnp
fisubrs
mov
inc
ficomps
or
cmpsl
test
mov
leave
icebp
xor
xor
sbb
push
or
xchg
fisubl
clc
and
xor
shlb
xor
xchg
sarl
cmp
call
add
cmpsl
out
cmp
sbb
ds
out
sub
out
outsb
pop
mov
cmp
or
psrlw
mov
push
sahf
and
ret
rorl
xchg
sub
loopne
mov
push
jbe
stc
push
sti
aam
scas
test
mov
add
faddp
sub
pusha
mov
into
or
std
mov
int
pop
xchg
or
mov
pop
aas
iret
data16
mov
fnsave
test
rcrl
lcall
aaa
cmp
push
dec
inc
mov
jno
fmull
in
daa
xchg
sahf
iret
inc
mov
es
stos
xor
out
icebp
cli
sbb
xor
cmpsl
push
jbe
push
int
mov
pop
ret
inc
scas
cmp
xchg
jns
loopne
out
mov
dec
or
mov
push
lock
dec
rorb
andl
subb
cmpsl
xor
pusha
scas
cltd
lds
iret
mov
push
cmc
shl
dec
rcrl
pop
pushf
add
int
frstor
mov
mov
adc
pop
insl
xchg
inc
xchg
push
cmp
mov
in
jle
mov
mov
mov
or
xor
and
jg
stc
ret
or
inc
adc
mov
ret
and
or
and
mov
dec
xor
ds
scas
mov
add
mov
dec
call
pop
lret
dec
mov
push
jg
add
jno
sbb
mov
pop
lea
cwtl
add
lret
popa
scas
jmp
inc
xchg
mov
jmp
cmp
dec
fwait
sahf
popf
jno
rcll
pop
sub
fistl
cmp
lock
adc
push
cmp
scas
xor
outsb
and
pusha
into
ja
ss
in
add
push
arpl
popa
movsl
dec
pop
push
fidivrl
xchg
aaa
push
aam
dec
in
push
dec
adc
cmp
cmp
cmp
enter
push
push
push
sub
cli
popa
rolb
inc
sahf
add
mov
cli
lock
and
xchg
fucomip
or
insl
dec
and
adc
sub
mov
je
or
pop
and
mov
mov
xchg
sbb
gs
mov
in
push
cmp
scas
aaa
test
jge
mov
dec
test
mov
imul
fstpl
lret
leave
js
jge
cmpsb
daa
outsb
fstpl
std
adc
and
icebp
in
adc
or
std
pop
jecxz
inc
xorl
pop
fisubrs
xchg
add
xchg
or
sti
add
lods
sub
dec
or
push
mov
push
mov
add
cwtl
fdivrp
faddl
push
stos
mov
sbb
fnsave
lds
jecxz
dec
mov
xchg
int
or
dec
fsubrl
mov
xor
les
push
leave
leave
popfw
xor
js
dec
insb
xor
rorl
sub
push
addr16
jmp
arpl
sub
ret
push
mov
scas
sbb
mov
iret
jmp
push
dec
insl
cld
xor
add
test
neg
cmp
je
xchg
out
das
arpl
push
hlt
adc
movsl
cltd
jmp
rclb
push
std
data16
jo
xor
sbb
lods
popf
test
add
mov
push
sbbb
xchg
clc
pop
ret
lcall
ss
push
dec
jns
pop
jg
adc
xor
fcomi
jo
push
dec
sbb
xor
xor
imul
outsb
xchg
add
or
mov
xor
fldenv
outsl
stos
mov
add
mov
mov
stc
jnp
or
mov
jns
shl
mov
push
inc
pop
xor
lea
jge
in
sub
cmovs
das
jnp
adcb
jb
insl
sub
mov
ljmp
jg
cmp
jle
out
xchg
stc
dec
lods
push
xchg
test
mov
insl
mov
insl
pop
mov
fmul
and
push
sub
sbb
inc
xor
icebp
or
pop
cmpsb
out
dec
aad
call
xor
movsb
fsub
rolb
push
rol
xchg
mov
cli
add
lret
sub
out
loop
xor
sub
dec
jl
pop
pushf
xchg
das
cli
lea
add
decl
pop
lret
test
stos
lahf
fsubrl
gs
movsb
pushf
xchg
sti
xchg
pop
mov
jg
adc
dec
int
decl
adc
inc
in
adc
xchg
lcall
bswap
jbe
mov
push
lock
inc
xchg
test
sub
mov
sti
pop
mov
push
icebp
mov
mov
pushf
test
and
hlt
aam
push
jae
and
or
xor
sub
jg
movsl
lret
jp
loop
and
inc
adc
inc
xchg
lret
push
mov
push
jecxz
inc
aam
sbb
sbb
mov
mov
and
xchg
addb
pop
add
cmpsb
inc
jp
out
shr
adc
cli
les
lret
mov
xchg
lods
insb
inc
xlat
sbb
cmp
lds
cs
xor
into
aad
stos
enter
adc
dec
loope
mov
aas
pop
and
sub
jbe
and
add
fwait
mov
into
inc
and
jne
test
jne
lret
orl
cs
or
out
je
adc
call
imul
mov
dec
cmpsb
mov
les
mov
mov
pop
jge
testl
movsl
dec
push
add
xchg
fnstcw
jg
andl
les
dec
mov
popf
daa
mov
out
jl
xor
jge
sub
sbb
ljmp
ljmp
mov
mov
pop
ds
test
mov
dec
mov
shll
push
imul
pop
xchg
ret
add
pushf
mov
jae
push
movl
sbbl
adc
cmpsb
imul
sub
sbbb
inc
test
cmpsb
push
test
in
dec
insl
dec
insl
jl
or
pop
outsb
negb
xor
cmp
stos
add
cmp
jmp
fisttpll
lds
jge
mov
icebp
movsb
or
imul
movsl
inc
fsubl
test
cmp
mov
fdivr
jle
mov
mov
inc
and
xor
and
mov
ljmp
adc
pushl
lods
fcompl
mov
adc
mov
loopne
cwtl
jg
inc
shll
sti
mov
and
sar
inc
test
lea
mov
mov
xor
mov
mov
pop
mov
add
imull
lret
push
mov
lret
jns
mov
inc
cmpsl
mov
jl
push
loopne
xchg
ret
add
push
xchg
into
push
mov
shlb
mov
scas
ja
inc
jae
in
sbb
aas
mov
cmpsl
or
jnp
cmpsb
xchg
sub
mov
mov
dec
ja
pop
mov
xchg
and
add
add
gs
popa
lock
js
xorl
mov
mov
pushf
xchg
in
inc
jbe
xor
dec
xor
cs
jne
xor
lahf
pop
mull
inc
sub
aas
or
popa
xchg
sbb
test
imull
filds
outsl
pop
arpl
pop
jno
inc
mov
outsl
inc
test
scas
mov
sbb
xchg
pop
stos
sub
add
mov
pop
pop
insb
popf
cmp
fsubl
mov
mov
xor
dec
push
xchg
inc
sub
sub
idivb
pop
cltd
inc
ret
fnstenv
fnstcw
adc
scas
mov
lret
stos
sub
or
jg
mov
in
int
insb
dec
or
push
cld
add
jo
xchg
xor
pop
inc
jge
inc
or
aam
add
lcall
xlat
push
lahf
mov
sub
and
jb
filds
inc
dec
jmp
into
repz
mov
popa
xchg
jns
push
sbb
jb
push
inc
test
data16
sub
add
int
add
adc
xor
aad
cmpsl
mov
fs
nop
jl
mov
mov
std
sbb
cmc
fildl
cli
das
mov
jno
and
adc
mov
or
int3
adc
pushf
mov
ds
jmp
inc
push
adc
sub
xchg
sarl
pop
imul
nop
sbb
pop
inc
mov
sti
shl
sbb
fistl
mov
out
outsl
insl
stc
xchg
or
pusha
repz
adc
cmc
pop
test
jae
imul
mov
push
jmp
call
hlt
paddsb
sub
jno
inc
mov
lods
pushf
les
jno
adc
neg
xorb
outsl
and
stos
arpl
pop
xchg
lret
sbb
ds
and
imul
mov
rorl
push
repz
fs
clc
stc
sub
mov
aaa
shlb
aad
addl
arpl
or
idivl
or
or
xor
jp
fiaddl
mov
ret
sti
dec
xchg
adc
addl
test
ss
add
sub
cli
and
mov
jae
popa
and
adc
lea
out
test
adc
lahf
sbb
test
adc
aam
push
sti
push
daa
pop
cwtl
sbb
xor
mov
cmpsb
imul
lret
jne
sub
shl
mov
and
outsb
cmp
sub
xlat
fbstp
push
lock
cli
daa
jp
gs
movsb
jecxz
xor
loop
fisttpll
xor
cs
dec
pop
imull
in
aam
add
mov
icebp
movsl
mov
bound
dec
test
jl
add
repz
push
sub
mov
mov
cld
sub
add
cmc
add
fistpl
add
xchg
stos
or
in
movsl
ja
adc
je
mov
out
das
out
aas
aaa
mov
daa
xor
jne
test
mov
pop
not
add
js
test
rol
ja
stc
cmc
cmp
test
lods
jecxz
xchg
xchg
pop
out
fwait
sbb
push
stos
popa
jns
xor
fistpll
test
inc
xchg
lds
sub
ds
cwtl
ja
push
scas
or
sub
shrb
add
sub
pop
out
das
and
sbb
nop
and
xchg
cs
xor
mov
bound
lcall
fcomip
add
sub
push
clc
xchg
pop
jnp
stos
mov
cmp
lods
rcrb
push
imul
dec
aam
add
stos
mov
int
mov
push
popa
rclb
jg
mov
push
push
jp
add
mov
cmp
pushf
mov
jle
or
outsl
dec
aaa
inc
pusha
add
fnsave
sbb
jnp
test
testb
orl
xor
arpl
cmp
std
push
jno
xchg
nop
ljmp
inc
add
gs
cmp
repz
xlat
cwtl
rcl
shlb
les
adc
in
xchg
mov
mov
ss
push
mov
cmp
and
imul
in
hlt
or
and
shlb
mov
sbb
inc
xchg
jne
out
into
data16
jmp
or
imul
xchg
xchg
dec
leave
adc
loop
aaa
imul
jne
orl
pusha
in
sub
add
in
mov
lock
pusha
sbb
pop
pop
outsl
lahf
andb
adc
push
inc
clc
in
pop
mov
ss
mov
stc
pop
fldl
xchg
popl
sarb
dec
cmpsb
std
nop
mov
pop
lock
sub
int3
fwait
dec
imulb
sbb
cmp
cs
mov
cld
or
mov
scas
ljmp
mov
aam
jbe
and
mov
sysret
pop
inc
xchg
sub
mov
scas
repnz
add
add
in
sbbl
mov
int3
arpl
mov
test
pop
xor
push
mov
cmpsl
mov
in
imulb
sbb
mov
bound
adc
and
in
sbb
es
in
push
push
call
jle,pt
lret
stc
movsb
push
ficoml
cld
aas
sub
inc
mov
repnz
inc
push
inc
push
leave
cmpsl
fs
hlt
into
iret
lahf
jmp
inc
push
adc
dec
fucomi
jecxz
jb
movsl
sbb
test
or
cmpsl
les
push
sub
push
cmpsl
jo
out
adc
add
aam
jp
inc
movsb
add
in
mov
adc
dec
pop
jnp
mov
xchg
or
insb
dec
add
jae
push
les
test
insl
and
push
adc
xchg
adc
shl
aas
push
cmpsb
mov
fsubrl
mov
mov
xor
std
mov
repnz
shll
dec
imul
call
ljmp
ret
xchg
inc
sbb
imul
fldenv
aam
fs
cmp
mov
jmp
and
push
test
dec
negb
popf
cmp
leave
insb
loopw
jae
fwait
xchg
inc
dec
out
sti
add
cld
mov
cmp
add
pop
add
jmp
lea
fsubrs
shlb
cmp
push
jb
xchg
test
mov
pop
xlat
sahf
mov
ror
lcall
mov
or
pop
jmp
inc
jecxz
mov
ljmp
jp
mov
or
mov
xchg
popa
popa
lcall
sub
fisttps
xor
in
lahf
sbb
cmp
mov
ljmp
push
in
xlat
or
and
lds
dec
mov
sub
or
xorl
mov
jb
xchg
jno
ret
aaa
mov
and
pop
cli
leave
js
pop
inc
and
xchg
cmp
dec
outsb
iret
dec
xchg
mov
pushf
mov
jg
mov
add
push
and
push
xor
fcoms
stos
xorl
popf
mov
call
add
xchg
dec
lds
adc
lahf
push
or
sbb
jmp
xchg
js
and
mov
repz
js
jecxz
loopne
fisttpl
push
fnstenv
push
mov
cmp
aam
loopne
call
nop
fisttpl
cmp
push
cltd
and
sub
cmc
jae
pop
movsb
mov
sub
mov
cmp
mov
add
and
test
mov
sti
stc
jecxz
rcll
xchg
mov
enter
test
jno
sbb
pusha
cmp
mov
and
push
nop
fstpt
cwtl
aad
aad
add
and
fmull
xchg
test
add
jnp
leave
mov
inc
bound
inc
lods
and
loopne
outsl
rolb
loopne
std
pusha
loope
leave
scas
test
jl
out
pop
lret
jo,pn
lret
push
inc
imul
loope
out
push
cmpsl
jle
inc
jge
sbb
xchg
call
xchg
sahf
xchg
mov
dec
cltd
outsb
jae
lods
and
cmc
xor
ss
push
xchg
mov
out
push
inc
enter
loopne
lea
push
mov
movsl
cld
stos
out
inc
outsl
mov
xchg
pop
mov
aam
cmpsb
sub
mov
jecxz
insb
add
inc
push
sbb
sahf
js
add
dec
jmp
pop
fdivs
popf
and
seta
incl
rcl
adc
add
dec
fmuls
sbb
ret
loope
and
test
std
push
divl
pop
ss
lahf
push
sub
in
push
mov
mov
jg
std
sbb
jl
lds
cmp
out
jl
fs
xor
sbb
inc
pop
addr16
pop
out
mov
jmp
lods
lds
sarb
pop
add
pop
inc
bound
leave
js
xchg
in
pusha
cwtl
fucomp
data16
sbb
push
push
adcb
imull
cs
mov
pop
push
add
leave
sub
scas
inc
adc
repz
jno
ret
pop
pop
inc
in
stc
shll
clc
call
aad
fwait
mulb
jle
push
lret
mov
dec
dec
jno
pop
rcll
sub
cmp
jnp
repnz
aaa
mov
mov
jbe
jecxz
hlt
xchg
addr16
xchg
cwtl
out
lds
add
jge
push
mov
mov
je
cwtl
mov
mov
pop
push
ret
mov
aaa
in
les
adc
jae
mov
notl
lret
mov
jbe
sti
data16
sub
into
push
inc
daa
pop
daa
loop,pn
mov
lods
xor
fnsave
push
cmp
xor
cmp
sbb
jnp
call
inc
std
lods
mov
dec
sahf
cmc
xor
pop
sahf
ficomps
sub
mov
ret
jp
lds
outsl
outsl
dec
mov
cmc
scas
mov
lds
xchg
aas
mov
mov
mov
cmp
xorb
andb
mov
cmp
add
lods
adc
mov
dec
push
push
dec
in
sub
in
sub
adc
fiadds
dec
cmp
jnp
ret
add
inc
gs
sahf
jae
xchg
cwtl
lds
sub
push
jmp
hlt
sbb
cmp
dec
mov
arpl
stos
sahf
or
fst
cld
xchg
sub
pop
sub
lret
loop
mov
arpl
lret
and
nop
aaa
jp
dec
jne
aam
push
mov
xor
fisubl
dec
cmpsb
mov
fmul
loop
stc
sbb
inc
dec
or
fdivr
pop
add
js
movsl
psllw
mov
or
xor
xchg
loopne
stc
movsl
jno
icebp
fldenv
cmp
jbe
lret
lsl
pop
aaa
imul
in
inc
push
jmp
mov
repnz
cwtl
pop
movsbl
icebp
mov
or
add
mov
cmp
jb
in
mov
inc
ret
sbb
idivb
mov
cli
inc
jg
sub
push
mov
mov
xorl
inc
into
jb
sbbb
cs
sub
movsl
or
pop
dec
ret
or
out
dec
mov
add
scas
popa
fisttpll
out
or
les
sub
cmp
lock
ljmp
jo
subb
fimull
xor
notl
push
sbb
das
jge
mov
mov
out
pop
cs
les
dec
lret
stc
sbb
cvtdq2ps
mov
es
cmp
es
enter
or
or
xor
ja
and
jbe
xchg
inc
or
jae
scas
aad
sub
scas
jmp
add
imul
cmpsl
insb
arpl
ljmp
inc
xor
mov
mov
ss
cmp
pop
mov
add
pop
xor
pminub
xchg
jns
adc
jp
inc
negl
sub
xor
test
jb
xor
fucomip
loope
imull
and
push
adc
rolb
mov
les
mov
das
mov
and
andb
dec
pushf
lods
jbe
cmpsl
lahf
ret
repnz
cmp
aaa
cmp
int
js
lods
inc
push
dec
inc
out
push
mov
push
mov
or
loopne
xchg
aad
pusha
mov
repz
loopne
push
dec
ret
mov
xor
add
iret
imul
mov
enter
xlat
and
lahf
pop
pusha
dec
mov
bound
xchg
cmp
fdivr
cmp
jge
mov
xor
int
dec
jp
jmp
pusha
jns
inc
jno
ds
lods
scas
push
iret
mov
push
adc
sbb
fcmovnu
mov
or
jmp
insl
pop
sub
mov
xor
and
pop
setnp
cmp
out
insl
imul
rorl
aam
xlat
adc
and
adc
mov
dec
cltd
mov
pusha
js
mov
ja
mov
movsb
lahf
mov
aas
sti
shrl
call
mov
sub
cmpsb
and
jl
cmp
data16
mov
insb
sub
sbb
or
push
lcall
or
stc
pop
pop
lds
addr16
mov
shr
inc
xlat
cmp
mov
adcl
int
scas
mov
dec
sbb
cmp
sbb
rorl
dec
out
mov
xor
dec
sub
push
aaa
jp
jmp
push
jecxz
mov
negl
pop
jne
dec
sub
ss
outsb
mov
mov
cltd
or
pusha
push
mov
sub
inc
je
push
add
mov
push
dec
sbb
lcall
rcrb
lahf
cld
xor
dec
out
iret
mov
mov
xchg
and
mov
movsb
jnp
jbe
sub
push
pop
and
mov
mov
test
rolb
mov
mov
test
out
dec
or
outsl
aam
jmp
pushf
iret
aas
mulb
sub
inc
xchg
xchg
fnstcw
dec
xchg
lds
cmc
adc
testl
mov
lods
pop
and
xchg
adc
jbe
sub
aad
fimull
mov
adc
jnp
pushf
xchg
fdivrs
cwtl
cld
test
sbb
pop
pop
cmp
lret
dec
test
iret
mov
and
imul
stos
gs
loop
adc
ficomps
jg
lret
lahf
inc
dec
clc
ret
dec
sbb
mov
mov
enter
cmp
inc
mov
adc
out
xor
adc
bound
or
int3
fdiv
xchg
pop
sub
mov
add
mov
in
jmp
mov
cmpsb
ljmp
popf
push
mov
imul
pop
mov
andl
jle
xor
cmp
or
aas
inc
add
push
jp
push
xchg
jae
fldcw
pop
sub
js
fcoml
sbb
js
pushf
pusha
sub
cld
add
adc
psrlq
dec
pop
dec
or
dec
fadds
sbb
sub
popf
cwtl
bound
inc
jne
adcb
sbbb
les
sbb
shlb
mov
outsb
fisubrs
push
sbb
lret
add
push
and
inc
or
cmp
cmp
xchg
push
mov
inc
sbb
sub
clc
cmp
stc
gs
jp
jae
lea
outsb
jp
mov
cmp
jne
pop
pcmpgtb
adc
mov
dec
inc
and
push
push
testb
test
inc
fs
shll
pcmpeqw
loope
cwtl
fadd
jmp
fcomps
mov
js
sbb
jbe
and
out
daa
and
adc
in
xchg
jmp
std
push
or
test
mov
and
jle
insb
test
lods
push
mov
orl
cmp
leave
shr
js
mov
lods
je
negl
sub
cmpsl
out
inc
ret
mov
xorb
std
mov
das
rcr
push
pusha
push
cmpsb
xorb
out
push
adc
cmp
push
mov
cmp
mov
fcmovbe
data16
push
in
dec
mov
mov
ret
fbld
in
cmp
fistpl
mov
cmp
inc
movl
xlat
cmp
arpl
cmpsl
add
cmove
adc
jecxz
cmc
jb
dec
aas
xchg
sub
arpl
sbb
xor
cmpsb
xchg
test
jl
push
mov
mov
mov
fidivs
imulb
xchg
fldt
cmc
cmp
lods
inc
in
jmp
mov
icebp
xchg
xlat
loope
add
push
imul
scas
cmp
adc
mov
dec
cmp
or
mov
loop
inc
xchg
xchg
jno
xchg
stc
or
add
sarb
shlb
pop
popa
mov
mov
jecxz
fisubrs
je
inc
inc
mov
mov
loopne
into
mov
jbe
outsb
pop
mov
loope
incb
xor
dec
xchg
sub
test
in
dec
icebp
and
movsb
dec
fidivl
repnz
jne
add
cltd
jo
jmp
pop
pop
push
mov
adc
xchg
mov
xchg
sbb
mov
fiaddl
stc
inc
cmp
fstps
cmp
xchg
loope
dec
dec
sub
lds
jg
fidivl
lock
rcll
ja
loopne
fdivrs
push
idivb
add
dec
or
sub
mov
lods
inc
and
xchg
push
fs
jecxz
in
lahf
xchg
sti
xor
ficompl
sub
mov
pop
fistl
inc
or
pop
pop
rorl
cmc
test
mov
ja
pusha
enter
js
jmp
sub
inc
imul
cmp
testl
ret
je
ds
mov
cs
repz
std
xor
xchg
jnp
je
cmp
adc
sti
fstpt
int3
shll
mov
xchg
push
ljmp
shll
mov
lahf
adc
sarb
xchg
or
jno
xor
sub
scas
ret
fwait
dec
movsl
pop
incb
sub
push
push
cmp
inc
jo
les
loope
or
cmpsb
sbb
pop
xlat
insb
scas
push
push
mov
ret
jns
jle
mov
in
sub
je
xor
clc
sahf
dec
cmp
sub
push
lock
imul
stos
cmp
test
ret
or
insb
call
push
mov
lods
bound
sub
loopne
int
dec
iret
cld
fisubrl
out
insl
shll
cltd
movsb
sub
sbb
sub
inc
add
imul
shrb
int
or
or
cmp
jo
xor
fadd
mov
mov
push
mov
pop
out
fisttps
xor
push
add
mov
sbb
sub
pop
push
je
sbbl
int
xchg
sarl
fwait
imul
or
or
sub
ja
pusha
std
outsl
stc
xchg
bound
or
icebp
test
cli
cmpb
adc
mov
xor
cmp
out
arpl
sbb
clc
pushf
lock
inc
lcall
ret
into
inc
mov
mov
pusha
cmp
std
pop
mov
add
shrb
frstor
jbe
dec
push
dec
xor
sub
ret
stos
mov
lods
xchg
dec
and
pop
outsb
int
push
fisttps
xor
enter
lret
add
fs
aas
movsb
es
jbe
mov
mov
sahf
lret
sub
aaa
and
inc
in
xchg
test
jmp
popf
enter
loope
xor
test
lret
push
ljmp
gs
cmpb
and
pop
mov
push
cmp
test
decb
out
and
sub
fdivl
popf
inc
lods
test
pop
push
lods
clc
and
pop
fwait
clc
push
push
iret
jp
jno
ss
outsl
jnp
testl
mov
loope
xor
movsb
lods
mov
push
fildl
lcall
cwtl
cltd
pop
dec
cs
fisubs
jnp
cld
lock
stos
mov
pushf
and
sub
sub
adc
movsb
je
imul
fwait
add
lds
rcrl
xor
cmp
jne
loop
push
xlat
jne
psadbw
sub
and
xchg
push
imul
adc
add
inc
adc
jle
inc
cmc
mov
fisttps
dec
aad
sub
mov
sub
das
ror
mov
sbb
or
imul
mov
lahf
xchg
xchg
into
lcall
loop
push
adc
popa
inc
ficoml
jo
pop
mov
xchg
or
sbb
gs
mov
inc
ss
adc
fs
cwtl
add
push
add
inc
push
xchg
lock
lret
aam
in
pop
jo
aam
fs
dec
or
mov
ljmp
bound
cmp
inc
mov
mov
test
aaa
adc
pop
or
pop
lahf
mov
jmp
adc
aam
nop
fstpl
int
pop
push
out
mov
mov
jbe
xchg
inc
xchg
dec
sbb
stos
test
pop
or
insb
xor
lahf
in
sub
test
insb
mov
and
je
repz
pop
cmpsb
mov
sub
insl
cmp
inc
lahf
xor
xchg
adcl
bound
insb
push
pop
sahf
test
nop
mov
mov
mov
in
or
ljmp
or
push
shl
ud1
mov
lods
pcmpeqd
inc
data16
popf
and
outsb
jp
test
insl
fsubl
cmp
xor
std
fdivrs
push
xchg
inc
mov
jg
pop
push
mov
and
aad
in
std
mov
orb
push
push
pop
jno
pop
cli
xchg
and
aaa
xchg
sbb
lock
out
jmp
xchg
pop
sub
add
sbb
push
mov
pop
ret
shlb
mov
xor
mov
movsb
fs
cmp
mov
jbe
fldt
shlb
dec
fwait
jp
or
fnstsw
xchg
mov
fistl
mov
daa
jl
shrl
cmc
dec
leave
dec
xchg
inc
lcall
and
dec
lods
xchg
out
arpl
xor
push
and
inc
and
sti
mov
mov
imul
leave
loope
lods
mov
dec
gs
ret
sbb
xchg
or
sub
fsubl
or
jg
ljmp
leave
cld
ja
dec
repnz
adc
jp
shrb
scas
or
xor
dec
or
cwtl
fwait
sbb
repnz
jl
push
scas
add
sbb
ja
mov
and
mov
mov
fwait
gs
imul
pop
cwtl
inc
jge
mov
pop
lock
or
out
ljmp
add
push
stos
pop
iret
loopne
sbb
out
jle
xor
dec
inc
arpl
mov
sub
movsb
or
jmp
xorb
aas
inc
inc
cmpb
fsubl
push
lock
mov
fistpl
pop
mov
fldcw
pop
or
xchg
lock
xchg
mov
xor
mov
or
loope
adc
jp
mull
adc
mov
fidivrl
and
mov
test
xchg
lcall
xchg
andl
sub
imul
cli
and
or
int3
outsl
stc
loope
add
push
aad
lds
push
imul
arpl
punpckhdq
pushl
fsin
push
push
xchg
adc
fwait
adc
xchg
cli
mov
push
dec
lock
int
push
pushf
xchg
mov
test
and
xor
sub
fsubp
adc
out
inc
mov
int3
inc
arpl
aam
mov
fiaddl
test
xorb
fs
test
lods
inc
mulb
leave
into
push
cmp
add
lds
daa
jge
fwait
adc
fbstp
dec
inc
cmp
ret
iret
out
pop
hlt
sub
pop
outsb
pop
or
fwait
cltd
lock
insb
lods
adc
sbb
xor
mov
cmp
insb
xchg
jg
dec
mov
icebp
jbe
mov
lods
pusha
xor
out
inc
xchg
xchg
push
fdivrs
xor
cmp
decb
cli
cld
xor
xchg
gs
push
mov
testl
cmc
out
mov
and
or
push
or
lock
stc
xchg
add
fnstsw
cwtl
andl
mov
mov
dec
lcall
adc
in
jge
gs
inc
cmp
insw
dec
push
jl
push
lock
out
in
ret
mov
sbb
movsb
or
cmc
roll
rol
cmp
jmp
mov
mov
mov
dec
cmp
adc
lea
xor
push
and
sub
js
push
cli
and
mov
inc
aad
fs
sbb
insl
mov
shl
mov
sbb
add
ja
aaa
inc
sub
iret
push
fdivl
inc
sub
aas
jb
adc
adc
pop
add
sbb
out
aam
mov
movsl
das
rcrb
jp
popf
mov
sub
pop
clc
movsb
pop
in
aas
cmp
push
pushfw
cmpsl
mov
andb
ret
mov
xor
pop
icebp
sbb
push
xor
iret
fldl2e
or
cmp
adc
mov
lahf
sub
sbb
sar
lahf
dec
mov
imul
bound
jae
data16
push
xor
repnz
mov
inc
push
jnp
mov
bound
pop
dec
outsb
into
add
stos
mov
sub
jbe
add
mov
dec
rcrb
ror
and
js
adc
pop
sbb
cmpsl
push
cs
dec
sub
mov
xchg
mov
sbb
ret
test
je
pop
shlb
dec
sub
push
test
xorl
pop
outsl
in
fcmove
jnp
insb
push
xchg
pop
mov
jg
add
lods
and
mov
xchg
aas
les
dec
xchg
les
fldcw
out
aad
fsub
inc
cli
lock
fiaddl
hlt
pop
nop
pushf
pop
mov
out
xchg
fnstsw
daa
and
adc
dec
pop
iret
mov
andl
or
mov
cmp
adc
push
aaa
push
push
and
add
fidivrl
mov
and
push
jns
test
ret
stos
jne
test
add
jecxz
mov
or
lcall
mov
mov
outsb
sbb
push
cmp
push
mov
pop
cmp
test
pushf
xchg
loope
loope
push
mov
mov
aas
fistpll
jo
lods
add
mov
sbb
or
mov
or
fstpt
mov
xor
iret
pop
inc
xchg
jl
and
call
fstpl
sub
dec
cmp
dec
cli
or
lret
pop
cmp
fcomps
lcall
sbb
or
call
mov
les
fbstp
and
inc
outsl
mull
lea
adcl
les
fidivrs
adc
pusha
cmc
jo
sub
mov
aam
jl
inc
int
dec
xchg
mov
jge
popf
sbb
and
out
addr16
aaa
pushf
std
and
mov
mov
repz
cmp
cwtl
sarl
push
cli
test
and
pxor
inc
push
pusha
xchg
adc
out
jbe
decb
stos
sub
nop
shrb
movsb
stos
testb
add
xchg
xchg
sub
mov
xor
nop
lods
iret
pop
jbe
or
add
mov
pop
test
mov
pop
ljmp
not
mov
dec
cmpsb
pop
add
out
push
ja
lods
mov
gs
cmp
loopne
sti
add
push
jb
notl
sbb
shr
jbe
out
lret
jnp
iret
inc
sbb
mov
stos
mov
xor
andb
subb
push
jl
sahf
aad
scas
js
xchg
stos
aaa
xchg
hlt
out
mov
call
dec
jns
mov
xchg
repnz
and
sar
pop
jp
sahf
data16
pop
cmp
pop
imul
pop
sub
aaa
clc
cwtl
dec
inc
cmpsl
inc
dec
and
mov
in
in
dec
mov
mov
jo
push
and
push
icebp
xor
add
dec
pop
mov
jp
mov
cmpsb
lea
mov
xor
subl
shl
lret
data16
pop
push
in
mov
ja
outsb
sti
mov
popa
les
fisttps
add
jb
loopne
sbb
ss
mov
mov
mov
mov
adc
fsubr
push
ja
and
testb
mov
xlat
mov
cli
and
and
pop
adc
mov
pop
scas
xor
push
popf
pop
jae
push
dec
mov
xor
es
xchg
lcall
imul
xchg
or
jp
jne
loope
inc
push
sarb
push
orl
out
xor
out
mov
xor
cmpsb
ljmp
inc
push
add
cmpb
inc
xchg
push
sbb
mov
imul
or
jnp
int
addl
ffreep
push
sbb
pop
pop
std
inc
add
dec
sti
push
sbb
xchg
scas
pop
mov
mov
xor
repz
pop
sti
lds
cli
inc
mov
sub
ret
ss
add
add
push
data16
mulb
lahf
bound
in
or
test
cmp
dec
adc
mov
test
push
call
dec
inc
das
add
jmp
sub
dec
stos
cmpsl
cmpsl
jge
insb
stc
movsb
mov
fildl
lods
xchg
cmp
add
or
xchg
pop
xchg
daa
and
jns
mov
call
loope
push
cmpsl
es
ror
dec
or
xchg
cwtl
push
fyl2xp1
sahf
fimuls
xchg
in
imul
fisubs
das
or
sti
test
cli
repz
mov
pop
pop
mov
mov
std
test
push
addr16
jg
adc
and
mov
cmc
dec
cmp
and
rorb
sbb
mov
pushf
cltd
out
sub
dec
adc
push
pop
xor
mov
jo
lea
stos
mov
sbb
and
mov
jae
cmp
mov
jge
or
pop
jg
push
ljmp
fidivl
add
clc
or
xor
sub
aaa
mov
mov
push
lods
iret
subl
out
pop
jbe
shrb
xchg
aas
addr16
fistpl
shll
cs
bound
aas
ss
and
dec
jb
xchg
aas
andl
mov
stos
loopne
xchg
pop
xor
jg
mov
addr16
cmp
movsl
mov
pop
adc
adc
sub
fadds
or
ficompl
mov
je
mov
add
add
jo
div
testl
in
fwait
xlat
sub
and
cmp
sbb
push
pop
mov
mov
sub
sbb
pop
fmul
scas
mov
mov
mov
ja
subb
shlb
xor
stos
pushf
xor
lock
das
and
pop
xchg
jg
sarl
imul
rclb
sahf
test
xor
insb
scas
inc
or
mov
pusha
jb
ret
mov
je
add
loopne
dec
jbe
mov
mov
out
mov
jno
adc
mov
idivl
lock
mov
adc
jb
negl
leave
cld
xor
mulb
lret
push
mov
push
cmpsb
cmp
loopne
xchg
mov
mov
lret
outsl
jg
mov
mov
push
bound
push
xor
sbbb
mov
loopne
mov
push
adc
in
pop
push
mulb
decb
xchg
add
and
stos
pop
push
xor
test
push
xor
mov
mov
lea
push
bound
movsl
inc
outsl
ds
lock
cmp
mov
idiv
xor
jg
xchg
fstl
xor
je
sbb
cmp
xor
or
pusha
jns
or
nop
stos
frstor
popf
mov
pop
cmp
lret
mov
sub
add
xlat
or
mov
mov
ret
mov
fsts
sub
sbb
lods
movb
lock
fs
jne
addr16
cltd
ret
lods
ret
add
shll
xor
dec
mov
sbb
cwtl
fcom
push
cmc
mov
pushf
pop
lods
cmp
addl
xor
adc
xchg
call
in
xchg
pop
cmp
pop
fistl
jle
or
and
rclb
out
test
stos
fistl
jae
xchg
add
adc
cmp
imul
mov
jo
int3
mov
lock
testb
or
clc
lcall
mov
loope
inc
inc
cltd
fdivl
add
call
icebp
sub
inc
mov
mov
mov
test
es
fwait
in
lret
sub
jmp
jg
js
movsl
push
cmp
dec
adc
bound
out
jl
fdivrl
jae
mov
jmp
xchg
lret
es
test
rcr
and
jo
mov
mov
dec
rclb
cltd
scas
xlat
mov
sahf
out
or
out
jns
add
imul
xor
popa
mov
popa
xlat
cltd
mov
sub
push
adc
or
outsl
push
dec
stc
enter
and
sub
lea
test
push
push
outsb
xchg
xchg
and
adc
rolb
adc
inc
push
and
mov
xchg
int3
xchg
or
sub
je
repz
xchg
mov
jl
sbb
push
push
cmp
enter
leave
in
aam
add
cs
ret
mov
mov
data16
mov
jb
bound
xor
push
sub
inc
int
cmp
in
test
adc
mov
xchg
jnp
inc
call
int
sbb
sub
xchg
jne
jl
cmp
repnz
pop
fcompl
sub
xchg
fnstcw
jle
shlb
pop
pop
push
loopne
pop
pop
sub
sub
sbb
fbstp
fwait
pop
and
mov
mov
pushf
popa
xor
rol
mov
mov
xadd
lock
call
nop
push
js
or
pop
andl
pop
leave
mov
iret
and
push
out
sbb
mov
pop
pusha
outsb
test
lret
jns
das
popa
mov
shlb
or
jno
xor
loop
jo
inc
pop
dec
sahf
push
xor
cwtl
dec
sub
add
lods
add
lds
mov
inc
sub
jge
adcb
ret
mov
leave
mov
jle
ja
and
mov
pop
dec
aas
pusha
pop
nop
jp
sbb
sub
jl
pop
lret
lock
or
pushf
lock
cmp
gs
mov
and
sbb
shll
data16
stc
addl
mov
es
xor
icebp
pop
jecxz
mov
mov
push
xchg
inc
jns
sbb
dec
mov
aam
mov
outsl
ror
pop
fldt
jmp
pushf
jle
lea
mov
push
int3
lods
xor
in
jecxz
stc
dec
lret
repz
mov
mov
xchg
push
js
enter
addb
jecxz
mov
mov
sub
cmp
aam
lods
mov
pop
and
sar
xchg
stos
pop
xchg
and
adc
xor
jne
or
jp
shll
inc
push
jge
lcall
es
sub
mov
inc
hlt
push
pop
push
cwtl
inc
pop
pop
jecxz
les
add
adc
mov
xchg
aaa
in
jp
dec
fs
inc
dec
imul
movsb
shrl
lret
sub
mov
push
leave
pop
loop,pn
pop
or
mov
mov
aad
xchg
mov
adc
orb
jmp
shlb
scas
push
outsb
adc
inc
mov
push
popf
dec
xor
insl
xor
lahf
mov
jb
add
mov
push
sub
stc
aam
lock
mov
loopne,pt
lods
gs
cmp
stc
rorb
inc
cwtl
sub
out
outsl
daa
inc
mov
mov
xchg
mov
add
stc
lret
add
xor
int3
idiv
inc
fisttpll
shrb
dec
mov
xchg
push
mov
test
xor
rorl
ds
flds
jae
inc
add
sub
mov
call
sub
pop
xchg
xorb
dec
pop
insb
adc
mov
mov
out
pop
push
cmp
cwtl
out
lock
lods
stos
push
xchg
dec
xor
jbe
out
and
int3
stos
dec
xchg
and
xor
cmpsb
pop
lds
aas
mov
and
shlb
lds
ljmp
aaa
dec
repz
push
sub
out
notb
pop
decb
push
ss
adc
mov
sarb
pop
ss
cltd
cmp
aam
jbe
push
mov
xchg
enter
test
cmc
aad
cmp
xor
jp
pop
dec
xor
lods
inc
iret
jnp
push
lret
js
push
int
dec
insb
lds
inc
lcall
add
xchg
out
cmp
mov
mulb
adcb
sbb
nop
add
sub
mov
or
fisubs
pusha
fwait
movsb
fistl
and
cmp
jbe
pusha
ds
inc
adc
adc
adc
cmpsb
subl
push
mov
mov
sahf
sub
fadds
idivl
les
adc
fimull
mov
pop
and
repz
push
lcall
adc
aas
lods
xlat
mov
ss
pop
push
dec
xchg
or
mov
or
push
push
ror
xor
daa
pop
pop
sub
cmp
jl
ret
data16
mov
daa
clc
sub
dec
cld
cmp
and
adc
pushf
sub
dec
imul
sub
ljmp
iret
xchg
cmpl
test
lahf
fldt
mov
mov
outsb
aam
jne
pushf
stc
jo
or
sub
mov
shrl
mov
jb
fcomps
call
insb
pop
stos
xchg
xor
mov
and
stos
adc
xchg
lret
push
fstl
leave
add
out
xor
gs
mov
sbb
xlat
jge
shlb
sti
push
addb
sbb
push
mov
test
ret
inc
pop
xchg
outsb
in
fnstcw
loopne
jmp
stc
dec
xor
adc
push
add
push
dec
push
rolb
inc
aad
mov
dec
fs
adc
jmp
xor
ja
xor
or
cld
cmp
pop
mov
pop
dec
or
add
lods
inc
cld
or
push
jmp
aad
cmp
xchg
mov
sarb
faddl
mov
mov
gs
inc
outsb
add
mov
xor
pop
mov
shlb
jmp
xchg
mov
jle
push
int3
xchg
das
sarl
pop
sbb
sti
imul
test
adc
in
imul
cmpsb
sub
sbb
push
out
scas
add
fwait
andl
repz
sbb
ss
inc
mov
xor
xor
out
enter
xchg
dec
pop
dec
and
jecxz
and
int
push
xchg
and
or
mov
mov
inc
mov
inc
int
sbb
call
fldl
stos
jno
xchg
xchg
iret
add
into
fs
repz
mov
jb
ss
mov
lcall
mov
scas
mov
cmp
cmpsb
mov
outsb
jbe
incl
or
mov
ljmp
push
push
pop
add
movsl
mov
test
or
xchg
sub
cmpsl
lock
add
addr16
pushf
cmpsb
sahf
jnp
outsl
shrl
pop
jg
scas
enter
mov
cs
adc
mov
xlat
jp
stos
push
pop
pop
mov
jbe
divl
cwtl
sahf
sub
mov
arpl
sbb
fs
or
int3
sub
into
in
gs
xor
int3
ljmp
mov
jno
mov
adc
and
aaa
lret
scas
into
xor
fisttps
ds
xchg
cmp
push
out
lds
scas
fs
xchg
mov
out
lods
in
aas
push
cmp
pusha
sub
lods
sbb
mov
rcr
mov
out
and
mov
icebp
pop
out
pop
out
and
adc
mov
movsl
cltd
sbb
mov
stos
sbb
mov
inc
loop
lret
mov
and
push
or
add
dec
imul
jb
shll
lret
jb
inc
in
push
inc
push
mov
adc
negl
xchg
js
xor
lods
aad
repz
xchg
adc
dec
bound
add
sub
mov
cmp
int3
mov
int3
adc
sbb
aam
stos
adc
std
pop
loopne
push
push
js
aad
jl
pop
cwtl
jo
inc
popf
ror
and
fistl
cmpsb
jbe
jg
and
test
mov
xchg
inc
push
aam
in
fwait
popf
inc
inc
lret
gs
iret
fdivs
daa
jb
adc
test
mov
push
inc
ror
or
es
lcall
jae
call
xorl
cli
in
call
add
loopne
dec
imul
push
fidivrl
fs
je
mov
adc
dec
cs
or
xor
adc
pop
adc
mov
dec
cmp
clc
xchg
dec
movsb
mov
inc
inc
adc
rolb
dec
jg
lock
sub
xchg
and
push
out
int3
sbb
adc
mov
jae
ret
popa
cmpsl
int3
sbb
notb
lret
fs
outsb
pop
ret
mov
mov
cltd
insl
xor
add
mov
lret
mov
add
or
xchg
std
cmp
ss
dec
leave
cmpsb
leave
dec
sbb
or
sub
mov
jmp
fnstsw
mov
in
clc
movsb
jbe
into
popf
xor
lods
stos
mov
lods
mov
movsb
adc
add
int
add
pop
add
popa
sbb
lahf
jl
call
xor
loopne
jp
scas
mov
sar
mov
sbb
imul
cld
jo
cmp
call
aam
push
xchg
sahf
data16
imul
push
das
mov
mov
mov
and
std
ud0
iret
bound
mov
xor
orl
jns
dec
mov
lods
pushf
rorl
ret
test
xor
int3
xor
xor
jle
lea
mov
lock
lds
xor
adc
cli
or
sbb
xchg
jbe
push
sbb
imul
ja
in
mov
lret
adc
adc
pop
cmpsb
and
mov
sahf
inc
cwtl
mov
jg
push
mov
push
and
pop
add
insb
sahf
cld
movsb
insb
outsl
jno
push
rclb
adc
mov
adc
adc
pushf
lea
dec
sub
cmc
push
adc
jmp
outsl
cmp
cmp
cld
aad
ret
cli
insb
xor
mov
xor
fwait
ja
sti
mov
popa
imul
neg
lcall
gs
push
imul
sub
rolb
pop
pop
and
push
lahf
add
or
inc
mov
in
xor
in
xchg
cmpsb
push
push
and
call
stos
stos
mov
out
repnz
fisttpl
mov
pop
jno
fdivrl
pop
sub
adcl
sub
ret
adc
xchg
out
pop
dec
cwtl
mov
sbb
jge
inc
fnsave
xchg
fiaddl
xor
outsb
rcr
pop
outsb
addl
ljmp
push
cmpsb
cmpsb
js
sahf
cs
xchg
push
jmp
shr
loopne
cmp
cmp
aam
jge
mov
jno
insl
fistl
xor
jl
xor
in
push
loope
xchg
pop
xor
push
cli
das
xor
pop
aas
adc
dec
loopne
stos
mov
dec
scas
jnp
cmp
in
or
adc
xchg
sub
xorl
add
jle
mov
add
fwait
not
insb
mov
push
mov
add
in
jnp
outsb
movsb
in
movsl
addr16
iret
pop
mov
sub
test
pop
and
adc
or
inc
cmp
push
les
xor
push
mov
out
arpl
dec
jo
xchg
popa
push
xchg
je
add
or
data16
loop
adc
fcomi
and
and
jmp
adc
imul
sub
add
ljmp
aad
push
jl
mov
dec
es
hlt
out
mov
insl
adc
pop
ret
mov
shld
stos
and
pop
ret
push
pop
test
xchg
and
mov
fs
lods
insl
cs
fidivs
js
loope
cmc
xchg
addb
mov
loopne
xor
lea
popa
sbb
dec
sarl
xchg
ficompl
add
fwait
imul
inc
pop
aam
mov
inc
dec
xor
movsb
push
push
sub
xchg
arpl
push
mov
insl
in
filds
aas
outsb
int
call
in
xor
fisubrl
js
insb
ret
mov
sti
test
dec
mov
rclb
iret
sub
ret
std
xchg
xor
fxch
sub
clc
sbb
cmovl
popl
js
cli
shrl
subb
mov
shlb
xlat
push
mov
push
rcrl
ret
mov
test
push
shrl
dec
repz
jbe
jl
notb
adc
in
dec
vucomisd
inc
mov
loopne
mov
xchg
loopne
mov
adc
jb
jp
push
fcmovu
subl
push
push
mov
pushf
sarb
cli
popa
into
or
jmp
dec
cmpsb
pop
cmp
mov
and
sub
dec
insb
pop
add
cmp
jo,pt
sbb
test
shll
jno
mov
mov
mov
jmp
lahf
dec
mov
popf
stc
jmp
push
fstp
inc
inc
jae
add
bnd
mov
sbb
ja
sbb
jge
xchg
pop
jle
std
sbb
aas
clc
push
pop
cmp
call
inc
push
push
cmp
fdivl
mov
fsubl
push
xor
decl
pop
inc
ja
xchg
test
dec
dec
mov
mov
dec
lods
pop
hlt
mov
dec
push
push
loopne
shrb
iret
andl
lock
sub
sbb
rorl
popf
out
lcall
add
inc
lcall
adc
das
leave
call
push
adc
dec
lds
mov
add
xor
mov
stc
movsb
repz
enter
xchg
sbb
call
aam
dec
movsl
inc
inc
cwtl
fadds
cmpsb
sbb
shlb
roll
rcl
loope
mov
mov
push
pop
into
clc
add
mov
jo
dec
xchg
add
push
xor
or
inc
pop
testb
ss
loopne
insl
or
gs
jbe
push
mov
pop
jnp
inc
fmuls
and
movsl
cmpsb
mov
stc
in
pop
pop
push
xchg
mov
imul
xchg
ja
rol
mov
dec
lock
sbb
xor
sub
xchg
mov
notl
inc
jmp
mov
cmp
pop
imul
fcoml
lret
negl
cld
enter
mov
mov
cmp
and
orb
test
ljmp
enter
sbb
dec
gs
xor
js
cli
lods
lods
lcall
les
mov
sahf
daa
fs
mov
shl
pop
mov
sti
push
cmp
jb
pop
inc
aas
roll
and
nop
fisttpl
mov
stc
shl
push
stos
xor
mov
cwtl
xchg
insl
or
sti
in
add
mov
push
insl
cltd
popf
jecxz
dec
push
in
jae
dec
mov
mov
mov
push
out
aaa
rorl
iret
xor
mov
nop
shrl
std
xchg
test
sahf
jecxz
or
addl
push
pop
pop
je
loope
test
mov
xor
or
sahf
pop
adc
sub
shll
jb
sbb
xchg
pop
pop
sbb
jle
jg
stc
test
or
and
jbe
xlat
aam
int
mov
lahf
inc
pop
sti
ss
pop
inc
mov
loope
leave
loop
and
pop
aaa
imul
xor
lea
bound
sub
rcrl
xor
xchg
clc
jo
test
cmp
lahf
xor
sbb
jnp
mov
fwait
xor
pusha
into
mov
jle
leave
push
dec
mov
add
std
pop
mov
std
ss
lret
hlt
or
repnz
xorb
sbb
int
mov
gs
mov
shrb
inc
inc
jbe
loopne
lret
shlb
gs
adc
ret
sbb
inc
jmp
add
fcomip
or
loope
mov
mov
inc
in
jp
mov
clc
xor
loopne
testb
fbstp
sbb
inc
add
dec
sub
nop
loop
or
push
xchg
dec
cltd
xor
iret
inc
push
jno
aaa
fidivs
fistl
mov
dec
mov
push
mov
push
jo
cmpl
pop
push
into
mov
rcr
in
les
xchg
std
test
shll
popf
ss
pop
lret
adc
jmp
jmp
push
cmp
xorl
pop
inc
and
mov
rorl
inc
sub
popa
push
lahf
pop
fistpl
sbb
xchg
notl
jnp
xor
loope
jne
xchg
inc
adc
and
mov
les
in
xor
es
insl
sbbl
xor
dec
cmpb
pop
dec
xchg
xor
or
jg
inc
mov
inc
push
movsb
repz
cmc
ljmp
pop
je
adc
aad
rol
mov
sub
lods
fcmovbe
xor
sub
sub
cmp
lea
sahf
out
mov
into
ret
sbb
adc
cmp
push
xor
fidivl
lret
loop
pop
stos
imul
xchg
adc
lds
ja
outsb
cmp
in
aad
sahf
pop
cmp
cld
mov
dec
movsb
inc
and
cmp
js
push
movsb
les
fs
adc
loopne
leave
bound
fidivrs
xchg
push
push
mov
mov
adc
sub
movsl
inc
adc
dec
push
cmp
es
cld
jns
adc
sub
loope
lret
gs
sbb
and
in
or
repz
std
stos
sbb
adc
sub
xchg
ljmp
inc
sub
movsl
les
in
out
enter
jmp
shr
xor
sbb
insb
into
js
pop
xchg
movsl
out
xchg
or
subl
xlat
popa
test
push
mov
and
aam
add
sbbl
pop
int3
xor
jns
in
and
orb
push
pop
lcall
pop
push
and
mov
sbb
jecxz
in
test
test
bound
and
mov
sbb
insb
arpl
fcmovbe
cmpsl
inc
ret
jnp
mulb
fsts
inc
mov
mov
dec
clc
mov
push
icebp
mov
push
or
sub
sub
mov
lahf
sbb
std
cmp
roll
into
lods
es
jp
lock
popf
std
fsubrl
sub
pushf
xor
mov
pusha
cltd
inc
stos
dec
xor
mov
xlat
inc
negb
mov
mov
es
and
ffreep
lahf
ret
roll
mov
pop
jns
add
push
fs
fiadds
mov
sbb
jle
popa
jb
out
add
push
into
or
inc
mov
int3
jge
loope
push
adcb
mov
lahf
add
pop
xchg
dec
dec
scas
pop
dec
nop
loop
loop
lcall
pop
testb
lea
and
rclb
sbb
jmp
rorb
or
lea
mov
jae
adc
lods
cmpsb
fistl
aam
xchg
or
xchg
push
mov
insb
mov
or
mov
dec
and
or
push
insb
inc
fs
xchg
push
xchg
push
stos
lods
aaa
jmp
dec
enter
aam
sbb
xlat
cmp
clc
je
aad
ret
movsl
js
sub
xor
aas
add
insl
out
mov
sbb
dec
and
roll
xchg
xchg
cld
std
fildl
or
rcrb
adc
lret
lea
fdivrs
cld
popl
cmp
mov
xchg
rcr
ss
sub
pusha
jae
jp
and
xor
daa
xchg
jp
lcall
cmp
and
dec
mov
ds
add
rcr
pop
insb
outsl
mov
or
cmpsb
cli
into
mov
shrb
sbb
pop
push
cli
daa
pop
loop
mov
inc
dec
xor
bound
cli
lret
sub
adc
aaa
dec
clc
pop
adc
outsb
mov
andb
cmpsb
xorb
sbb
ret
xlat
inc
dec
inc
loope
cmpsb
pop
ret
add
and
push
inc
jae
repz
mov
or
mov
pop
stc
xchg
repz
pop
mov
push
jmp
or
fstpt
dec
mov
or
dec
call
hlt
push
mov
scas
test
aas
jb
push
add
and
cwtl
cmp
mov
adc
out
mov
mull
fnop
mov
mov
sub
out
xor
lods
subb
hlt
fstpt
scas
xor
mov
adc
add
and
adc
imull
lret
mov
incl
sub
incl
or
push
push
lea
in
sub
dec
pop
in
push
push
enter
fiadds
jp
das
sbb
cmp
inc
mov
pop
aam
sbb
fst
and
and
jl
sbb
cs
xchg
push
cld
push
out
sub
mov
fistl
dec
or
test
pop
arpl
stc
push
sub
sub
sub
imul
sahf
lret
movb
jo
inc
inc
out
leave
aad
xor
cs
push
jb
cmp
sub
dec
or
insb
jbe
pop
xchg
je
scas
and
xchg
adc
out
cmp
mov
je
fstp
out
mov
dec
push
inc
les
push
adc
nop
dec
lahf
mov
cmpsl
pop
push
push
mov
nop
stos
mov
xchg
sub
sbb
pop
inc
scas
xchg
pop
out
aaa
ret
xchg
shrb
fcmovnb
or
fs
shl
mov
les
enter
out
sbb
cwtl
das
int3
adc
in
push
sub
jg
gs
popf
lods
jae
orb
les
push
push
inc
lret
das
sbb
popf
jmp
loop
inc
mov
int3
and
push
add
jg
ret
lods
pop
jg
sub
add
sbb
lcall
mov
iret
push
std
dec
shlb
test
xchg
dec
outsl
nop
std
dec
jnp
mov
jmp
insb
out
addb
out
and
and
cmpsl
jae
jno
sbb
lcall
add
cmp
inc
test
bts
imul
mov
mov
pop
faddl
and
jg
icebp
push
jl
mov
repnz
test
out
outsb
ds
adc
jbe
cmp
sub
jecxz
cmpsl
mov
outsb
test
sub
mov
mov
imul
sub
inc
out
lahf
jle
dec
fsubrs
pop
fs
and
mov
inc
fldt
fisubrl
frstor
fisubl
out
mov
pop
aas
fists
xchg
jl
test
pop
push
subl
mov
std
lds
xchg
dec
or
bound
mov
xor
insl
mov
sti
pop
jnp
add
jle
xchg
xchg
cmp
and
cmp
outsb
les
sbbb
out
insl
shrl
andb
jne
lods
cld
pop
xchg
test
jne
cmp
aaa
push
fs
fwait
jns
and
ds
sbb
je
jle
sbbb
lahf
adc
lods
dec
dec
xor
push
or
mov
xchg
pop
mov
aaa
sub
in
xchg
pop
sub
mov
loope
fdivl
bound
jb
jmp
test
and
in
or
push
jl
outsb
data16
jnp
outsl
mov
sti
pop
xor
add
jae
xor
mov
cmp
cmp
add
adc
inc
lods
dec
push
sub
lock
int3
loop
inc
vzeroupper
lret
mov
push
cwtl
shr
lahf
push
gs
xchg
and
sbb
stc
enter
push
cmpl
shll
iret
test
test
icebp
or
adc
inc
xchg
stos
sahf
icebp
jg
dec
xor
xchg
cmp
stos
mov
mov
inc
scas
int
aam
pusha
insb
inc
dec
rclb
inc
adc
push
adc
pop
sub
pushf
mov
lahf
push
cmp
push
lods
insl
scas
shrl
inc
jo
pop
sbb
dec
in
cmpsb
push
ss
mov
dec
addr16
mov
aad
jae
cmpsl
or
dec
test
in
out
adc
dec
loopne
aas
rclb
lock
fdivp
dec
jo
es
popf
jns
pop
fisttpl
xor
inc
xor
stos
fidivs
int3
les
xchg
aas
enter
cmp
cmc
dec
pop
shlb
ret
aaa
and
dec
pop
or
xchg
dec
sbb
jmp
movsl
xorl
lods
loopne
lds
cvttps2pi
pusha
push
mov
mov
leave
lahf
repnz
add
cld
mov
clc
push
shrb
cltd
in
and
mov
adc
xchg
sarb
mov
or
pop
mov
inc
xchg
mov
test
dec
inc
aaa
xor
adc
outsb
pushf
add
jno
int3
mov
imul
test
xor
sub
and
push
addr16
jecxz
aaa
jg
test
stos
repnz
test
mov
ret
add
mov
and
icebp
jecxz
push
jns
rorl
fdivrl
imul
mov
xchg
lods
subb
push
mov
and
push
xor
add
mov
rcrl
inc
leave
lret
ret
out
ret
inc
cwtl
dec
shll
adc
call
popf
nop
push
add
cltd
inc
mov
fcoms
dec
cli
cmpsb
push
cmp
adc
lods
mov
sub
mov
pop
das
call
out
mov
repz
loop
inc
xor
jnp
mov
rorl
sub
inc
pushf
sbb
push
mov
push
or
or
pushf
cmp
sub
outsb
int3
mov
aam
mov
ds
sbbb
push
jecxz
add
and
cmp
adc
out
sbb
jae
jno
push
push
in
cmpsl
popa
sbb
cmp
cmc
dec
repz
pop
sysexit
push
inc
frstor
loopne
push
scas
shrb
cmpsb
jg
pop
dec
clc
das
inc
mov
aaa
push
inc
data16
lea
lcall
movsb
push
pop
add
jecxz
mov
add
ret
and
dec
mov
pop
mov
shl
and
adc
cmp
hlt
sbb
inc
xchg
cmp
out
ret
xlat
imul
fwait
adc
add
pop
xor
jmp
js
lret
dec
orb
movsl
neg
sarl
ja
les
adc
in
mov
xchg
imul
pop
adc
data16
loop
pop
bound
and
ljmp
pop
and
xchg
or
pop
sub
gs
enter
aas
sbb
add
push
loop
sub
das
mov
xor
sbb
push
pusha
push
insl
cmp
and
mov
movsl
mov
out
or
inc
fwait
and
daa
adcl
js
lea
in
pop
insb
or
loope
clc
cwtl
test
mov
fdivrl
paddq
stos
cmpsb
fsubs
sub
lods
mov
jmp
and
mov
movsl
sbb
push
jns
out
xchg
icebp
mov
jno
mov
push
sub
mul
xchg
inc
inc
inc
sarb
sub
mov
mov
add
add
inc
pop
mov
mov
ds
test
pop
add
cmp
movsl
pop
loop
and
adc
mov
insb
loope
test
or
fadds
jmp
sub
les
in
xor
sar
in
mov
mov
mov
xchg
divl
cmp
shl
daa
das
outsb
xchg
test
pop
je
adc
cmp
inc
adc
shl
inc
jge
push
mov
shl
fbld
addr16
nop
int3
lahf
sub
lods
pop
mov
loop
sbb
icebp
xchg
mov
aaa
arpl
xorb
jle
leave
idivl
mov
leave
adc
ss
fs
push
inc
ficoml
mov
dec
sbb
xor
push
rol
sub
sub
call
mov
mov
sub
push
add
dec
nop
jmp
jecxz
out
loopne
add
clc
popa
loop
popf
sbb
popf
inc
sbb
jbe
fs
inc
xchg
dec
aam
sub
push
dec
out
dec
sub
data16
add
scas
mov
inc
xchg
xchg
cmc
repz
insl
out
cmpsb
movb
lret
mov
lods
adc
or
scas
scas
push
out
insl
mov
mov
jbe
rclb
iret
nop
push
xor
push
add
fcompl
aam
mov
arpl
and
sub
cli
cli
scas
test
jns
pop
les
out
and
std
pop
jmp
outsl
pop
mov
pop
jae
xchg
lods
jns
mov
outsb
adc
mov
pop
call
stos
adcb
sub
aad
ds
adc
cmpsb
nop
stc
xchg
add
mov
push
out
cmp
cltd
add
lea
inc
or
xchg
jl
xor
imul
cltd
dec
and
mov
gs
push
and
nop
aad
iret
pop
mov
push
and
out
sbb
pop
repz
jl
bound
loop
jecxz
in
dec
xor
adc
fdivp
int3
or
cmp
add
stos
outsl
mov
mov
fsubrl
insb
cli
int
pop
in
cmp
xor
testb
mov
xor
mov
dec
in
repz
and
sub
in
inc
jl
daa
ljmp
push
push
push
ja
stc
add
sahf
jge
sbb
inc
xlat
mov
cs
imul
enter
inc
icebp
enter
imull
cmp
cmp
insb
and
push
or
mov
mov
and
dec
xor
cmpsb
shll
add
add
push
bound
nop
and
test
loopne
imul
push
cmc
fwait
adc
imul
call
add
adc
fistps
bnd
mov
movsl
mov
repz
pop
test
mov
test
loop
ret
inc
inc
cwtl
dec
pop
arpl
subl
xor
scas
test
pop
jg
add
sbb
scas
dec
sub
mov
jb
mov
lcall
sbb
dec
jb
xchg
inc
dec
rol
out
icebp
dec
mov
ds
mov
push
or
or
out
test
cmpsl
rorb
dec
mov
cltd
fxch
jnp
jg
push
rclb
inc
idivb
add
cld
in
adc
mov
insb
sub
jb
pusha
incl
sub
es
push
imul
adc
sahf
scas
cld
loope
xchg
add
adc
jnp
sarb
add
xor
jbe
dec
cld
mov
jge
clc
hlt
stos
and
cmp
loop
cmc
mov
sub
cld
sbb
cmp
push
lods
inc
sbb
fdecstp
adc
pop
sbb
shrl
jge
push
inc
outsl
jno
jne
into
loop
or
ljmp
jbe
sbb
sbb
pop
adc
fiaddl
sbb
push
add
leave
cmp
pushf
int3
repnz
mov
pop
mov
cmp
fldt
dec
out
movsl
xor
cmpb
mov
sub
xlat
icebp
mov
inc
push
sbb
or
inc
cwtl
pushf
mov
xor
scas
cmpsl
test
lret
sbb
adc
outsl
fstps
or
push
cmp
ds
imul
repz
popl
and
mov
icebp
pop
sbb
mov
jb
fstps
je
shrl
jno
scas
jo
in
shl
ja
jbe
mov
mov
inc
jbe
es
lds
xlat
test
test
xor
pop
leave
test
sbb
mov
mov
lock
imul
imul
jb
nop
fwait
pop
or
subb
out
pop
jp
jnp
sbb
adc
call
mov
jne
js
ret
pop
es
in
addl
cmp
decl
lcall
fbstp
xchg
hlt
add
ret
ss
pop
mov
iret
cmp
xor
push
mov
das
and
hlt
xchg
insb
loope
dec
ficoms
push
xor
xchg
cld
pop
mov
cmp
jle
cmpb
aaa
dec
ds
ror
inc
test
jmp
test
call
outsl
add
mov
rcrb
pop
push
ds
mov
adc
pop
xor
cmp
pop
pop
mov
rorl
inc
xchg
fisubs
cmp
rclb
out
xor
and
insb
xchg
pop
out
pop
and
inc
mov
insb
and
fsts
fcompl
adc
push
mov
lret
shrb
mov
fimull
add
mov
int
pop
test
inc
into
call
repnz
fbstp
inc
jbe
mov
or
mov
mov
xorl
xchg
xchg
fiaddl
lret
test
in
pop
inc
add
fwait
jge
or
cmp
idivb
in
xor
fistpl
mov
sti
jnp
cmc
loop
jo
add
decl
mov
cltd
popf
dec
enter
fmuls
pushf
icebp
xor
jbe
sbb
push
sahf
xchg
lahf
pop
sub
in
int3
add
out
adc
and
cmp
jne
dec
and
into
inc
push
mov
test
shll
push
pop
repz
mov
add
fmull
mov
pop
adc
jbe
adc
cmc
shl
int
mov
pop
xorb
xchg
cmpsl
aad
jmp
test
pop
and
pushf
push
lds
sbb
cmp
add
movsb
mov
xchg
test
ja
xor
mov
js
mov
aam
sub
add
lret
lods
mov
or
mov
mov
jle
aam
iret
popl
xor
jb
ss
test
loopne
popa
out
xor
arpl
imulb
mov
mov
repz
jmp
loop
scas
movsb
or
xor
push
mov
mov
idivb
xor
cmc
loopne
adc
fiadds
mov
cmp
jp
sub
xchg
mov
in
add
clc
xchg
stos
jne
push
pop
xor
daa
into
dec
or
fwait
int3
mov
loope
gs
push
addr16
aam
or
shrl
inc
arpl
je
sbb
sarl
rolb
or
xor
notb
punpckhbw
push
pop
mov
mov
mov
jo,pn
int3
or
pushf
adc
ficoml
pop
cmpsb
lods
bnd
bound
pop
xchg
push
sbb
xchg
xchg
das
dec
repz
lea
hlt
dec
movb
icebp
jp
mov
mov
outsl
in
mov
or
sub
in
orb
jmp
in
pusha
in
cmpsb
or
fnstenv
or
add
jg
push
or
enter
push
and
dec
rol
inc
fisttps
jnp
mov
xchg
popa
out
loope
insb
inc
sub
faddl
fstpl
jl
dec
xor
int3
aaa
mov
hlt
imul
sbb
xchg
test
stos
cmc
push
aad
push
ja
push
pop
loope
sbb
loop
or
imul
add
jecxz
repnz
outsl
test
repz
jae
or
or
mov
pushf
mov
or
pop
leave
pop
clc
rorb
cltd
std
dec
sti
sbb
popf
dec
js
jns
mov
jle
xchg
or
fistl
mov
xor
pop
xor
dec
je
mov
in
je
adc
sbb
decb
je
jmp
inc
add
sub
mov
jle
mov
adc
sbb
push
cmpsb
or
outsl
mov
inc
xchg
push
lea
jns
xor
jle
xchg
mov
xor
mov
movsb
adc
jecxz
out
out
push
mov
rol
cmp
mov
int
and
fprem1
pop
movsb
pusha
popa
dec
mov
lahf
inc
xchg
inc
imul
lcall
pop
cmp
mov
sub
les
mov
push
cwtl
mov
cmp
cmp
dec
pop
dec
dec
jae
inc
test
loopne
add
or
fmuls
push
add
in
out
sbb
sahf
dec
jl
fwait
popf
xchg
push
sbbb
xchg
dec
cmp
test
push
xlat
jmp
subps
popa
fdivrl
or
mov
pop
je
into
jne
xor
fdivrs
xchg
fdivs
leave
push
mov
adc
fmul
cmpsl
mov
add
xchg
fdiv
cmp
lret
dec
sub
and
repz
js
les
lcall
scas
test
and
test
je
leave
daa
or
std
aaa
std
jb
mov
insb
adc
inc
cmpb
lahf
mov
mov
cs
mov
es
sbb
enter
sbbl
das
aam
test
aam
fmuls
test
cltd
ret
das
pusha
sbb
fwait
je
mov
pop
jne
cltd
scas
add
and
enter
mov
andb
pop
fwait
daa
push
pop
xor
in
lds
adc
jne
jecxz
or
inc
mov
clc
jle
out
lret
sbb
fs
xchg
push
pop
stos
or
xorb
outsb
inc
lds
test
mov
les
or
nop
pop
lcall
movsl
call
jle
sahf
xor
inc
mov
enter
cmp
mov
inc
sbb
push
mov
push
leave
inc
leave
xchg
scas
ds
push
pop
loop
adc
jmp
pop
pop
sbb
pop
dec
outsb
lods
add
push
jnp
sbb
pop
jns
into
xchg
mov
inc
adc
jne
sbb
stos
mov
jbe
sahf
push
js
or
out
test
pop
addb
pushf
add
leave
mov
mov
cld
loope
adc
lret
mov
and
cltd
sbb
mov
xchg
dec
xchg
xchg
outsb
xchg
xchg
rclb
cs
xor
sub
lock
sub
gs
rclb
mov
jmp
je
repnz
cwtl
dec
adc
hlt
jns
sub
leave
nop
dec
mov
mov
ss
mov
sub
sub
popa
loopne
gs
mov
roll
sarb
jae
push
nop
sub
stos
push
sti
push
loope
push
in
inc
test
xor
mov
stos
incb
mov
xchg
dec
jnp
test
aam
out
dec
pop
jo
mov
pusha
dec
add
adcb
adc
dec
lods
mov
xor
or
adc
cld
scas
int3
rcl
pop
rclb
inc
iret
mov
dec
sub
add
mov
push
icebp
cmp
outsb
test
mov
pop
rcrb
jmp
cmp
test
sbb
cmpsl
jle
or
mov
sti
xchg
push
jbe
inc
sub
xchg
inc
mov
sub
lods
shll
js
jle
loope
lods
push
insb
test
xor
xchg
xchg
enter
icebp
test
sti
sub
inc
pop
pop
add
jge
sbb
in
es
arpl
insl
push
mov
jae
dec
xchg
aam
or
imul
in
ds
iret
mov
stos
pushf
mov
fwait
enter
sbb
sbb
data16
in
repnz
and
call
in
iret
pop
hlt
into
dec
decl
mov
mov
clc
dec
js
in
pop
or
mov
clc
lea
pop
sub
inc
pushf
lahf
mov
dec
and
lcall
sub
imulb
aas
jb
sbb
sbb
push
out
or
sbb
data16
fldt
bound
leave
lds
jecxz
xor
xchg
pop
sbb
cmpb
insb
dec
hlt
push
pusha
dec
and
ljmp
xor
pop
addr16
hlt
jb
sub
xor
inc
jbe
xchg
pop
sbb
imul
fidivrs
nop
sbb
rcrl
leave
bound
pop
shrl
scas
mov
cmp
mov
jno
ret
fildl
std
outsl
inc
fisubs
sbb
pop
or
pushf
or
push
or
inc
fstpl
rol
push
mov
cwtl
inc
out
leave
mov
xchg
andb
popf
sub
addr16
pop
jl
inc
cmpb
lahf
movsb
jmp
xchg
mov
xchg
pop
cmpsb
jns
dec
clc
push
pop
fdivrs
push
andb
xchg
dec
mov
jns
out
inc
sub
in
pusha
push
addr16
testb
scas
ss
adc
int
aaa
push
stos
pusha
xchg
push
shr
pop
sub
cmp
cmp
inc
cmp
push
mov
sbb
fs
lods
cmpsl
sub
mov
mov
fidivs
inc
sub
cmp
pop
xchg
sbbb
pop
sub
push
pop
pusha
xor
add
testl
out
icebp
jb
cltd
dec
mov
push
mov
jnp
sarb
mov
mov
dec
mov
or
int
inc
pop
jae
inc
dec
icebp
cld
stos
jns
outsl
cld
insb
inc
xor
mov
into
in
inc
test
out
test
ljmp
dec
nop
mov
and
mov
cmp
aaa
insb
inc
or
add
cmp
imul
cs
ficoml
inc
test
lods
push
fs
mov
orb
dec
mov
or
popf
xchg
fwait
mov
faddl
or
xlat
pop
stos
sub
xorb
fmuls
jecxz
xor
lea
or
movsb
lahf
les
ljmp
sub
loop
mov
sbb
pusha
mov
maxps
andb
mov
jg
fidivrl
test
std
pop
daa
out
jae
pop
sbbb
lea
cmpsb
mov
push
and
and
sbb
out
sbb
bswap
dec
dec
ss
pop
loope
and
xchg
xor
int3
lret
cwtl
lods
push
out
loop
scas
inc
mov
pop
movsl
lret
push
shr
xor
mov
xorl
lcall
adc
jno
xchg
adc
add
fwait
mov
ret
addr16
out
popf
pop
lea
sub
push
shll
ss
aas
lcall
in
mov
pop
mov
das
lcall
out
in
and
xchg
sbb
out
pop
xlat
jae
insb
shrl
in
jp
enter
inc
and
inc
out
subb
imul
testl
jle
in
test
mov
pusha
aaa
aaa
fwait
sbbl
dec
out
inc
add
mov
xor
incl
xchg
jns
dec
out
sub
pop
addr16
inc
pusha
ss
mov
mov
imul
xchg
sub
fwait
icebp
cli
jo
jb
loopne
push
push
testl
and
jbe
xlat
sbb
sbb
mov
pop
ret
mov
sbb
push
stos
outsl
push
mov
xchg
pop
fiaddl
mov
mov
xchg
mov
push
cld
xor
hlt
mov
pushf
aam
push
aam
mov
pop
lahf
adc
jmp
in
fistps
popw
cmp
adc
imul
mov
fs
xchg
sub
cld
and
push
mov
jmp
sbb
scas
dec
cli
dec
out
mov
ss
faddl
mov
cli
mov
add
sub
idiv
ret
subl
push
add
mov
lods
xor
test
adc
outsb
push
xor
lea
mov
shrl
mov
loopne
mov
movsb
std
dec
jge
outsb
jne
jbe
push
testb
add
fs
sbb
pop
mov
or
cmp
aas
jnp
popf
pop
inc
ljmp
jno
sub
jg
cmpb
jno
dec
repz
cs
mov
mov
fiadds
push
push
loope
lret
xchg
jle
loope
ret
insl
sbb
in
pop
mov
dec
mov
pop
je
popa
outsl
jae
jle
push
test
mov
add
and
sub
inc
add
mov
arpl
imul
ja
loopne
dec
inc
sbb
push
test
cli
inc
push
dec
shl
gs
insl
cmp
pop
ds
jae
sti
mov
add
xor
mov
clc
and
mulb
negl
sbb
leave
dec
cmpsb
sub
cmc
pop
sub
iret
push
adc
sub
jp
pop
cli
jnp
mov
and
pop
les
push
xchg
into
pushf
in
dec
jge
fists
and
cmp
ja
jmp
cmp
in
jo
daa
push
xchg
mov
sarb
stos
lea
jmp
mov
adc
adc
jg
leave
je
scas
enter
add
mov
enter
cmp
pop
iret
cmpsl
into
push
ds
or
and
sub
cmpsb
fs
mov
insb
jl
imul
add
lea
lds
ficompl
out
es
mov
cwtl
stos
imul
adc
dec
scas
push
push
out
xchg
insl
mov
cmp
sbb
mov
dec
mov
xor
sub
xchg
enter
adc
shll
add
cmp
int3
rcrb
mov
push
push
push
jb
or
adc
mov
enter
aas
xor
mov
mov
std
sbb
mov
mov
cmp
stos
push
frstor
arpl
xor
shlb
jbe
clc
iret
dec
xor
mov
add
lret
jmp
idivb
pop
popf
xchg
and
repnz
xchg
dec
lds
and
sub
jo
xchg
aaa
cmp
mov
daa
popa
nop
mov
jge
and
lock
daa
je
or
push
out
and
mov
xchg
imul
inc
inc
jecxz
mov
hlt
ret
mov
cwtl
arpl
mov
xor
aas
mov
setbe
dec
push
pop
imul
lods
cld
sahf
jo
jns
cmp
out
pop
xorl
cs
test
xchg
dec
add
mov
mov
adc
or
pop
aas
mov
sub
ficompl
jp
lcall
xor
pop
sbb
mov
mov
push
adcb
pusha
inc
fldl
mov
sbb
arpl
daa
xchg
and
mov
pop
xchg
add
les
sub
popf
jno,pt
std
and
dec
push
dec
cmp
push
xor
mov
ljmp
push
mov
fs
mov
out
mov
repz
mov
sbb
test
cltd
pop
scas
and
push
out
pop
jl
insl
mov
cmp
dec
loope
leave
lods
push
pop
stos
imul
ja
es
jns
mov
stc
mull
mov
ja
xor
loop
adc
push
in
ret
les
add
or
lcall
sub
pop
dec
add
fdivrs
xchg
insb
fsubrl
pushf
add
int
push
jb
scas
mov
dec
nop
sarb
cmp
lods
popf
push
jg
fistps
adc
movsb
xchg
push
and
adc
inc
sub
call
test
loop
cmp
xchg
xchg
pop
popa
mov
jmp
ret
add
or
lods
xchg
xchg
jp
sahf
insl
push
es
adc
jge
sbb
repz
adcb
cmp
xchg
test
sahf
jmp
jp
sbb
cmp
mov
mov
in
out
mov
mov
pop
mov
ss
mov
inc
cmpsb
or
hlt
icebp
inc
mov
popf
push
fsubrs
inc
xchg
mov
pop
rolb
bound
or
arpl
lods
jecxz
imul
test
dec
add
fstpl
push
imul
sahf
call
test
out
lahf
jns
sbb
arpl
adc
mov
xor
pop
call
scas
pop
gs
dec
fs
repnz
add
test
fldcw
std
adc
jmp
inc
int
mov
popf
xor
push
jp
jbe
inc
loop
notb
outsl
xchg
mov
push
fsubr
inc
dec
inc
cmpsb
fildl
das
cmp
mov
sub
xchg
mov
and
pop
js
mov
cmp
add
sub
sub
dec
ret
or
lds
jb
call
cmp
cltd
mov
push
mov
pop
scas
add
popl
xchg
das
outsl
jbe
repnz
aad
movsl
nopl
rorb
fmul
rcl
cs
xor
setne
stos
bound
mov
icebp
pcmpeqw
subb
add
sti
jecxz
mov
ret
fildll
xor
popf
outsl
frstor
pop
adc
jle
xor
movsb
fs
shl
imul
clc
outsl
shlb
js
mov
xchg
xchg
cltd
movsb
sbb
daa
jge
in
lahf
or
xor
fisubl
shlb
pop
xchg
repz
into
xchg
mov
jle
jle
cmp
add
or
jnp
and
sub
mov
inc
rcll
push
test
push
jb
insl
jae
imul
ret
loope
lret
fadds
push
xchg
inc
mov
fcomps
sub
cwtl
mov
add
lcall
lock
pop
pop
sub
inc
in
and
loope
mov
call
push
cs
loope
ds
sti
push
pop
ret
es
subb
fwait
dec
jno
fisubl
or
dec
xor
adc
fdivr
insl
dec
adc
push
push
and
add
in
cmpsb
cmpsl
cmp
sbb
sub
lods
lods
fimuls
ret
sub
push
cmp
dec
jl
sbb
jno
fwait
adc
dec
xchg
jp
and
adc
hlt
xor
mov
int
bound
orb
cmpsb
ficoml
jno
mov
loope
into
call
push
sahf
lcall
mov
mov
push
sbb
mov
push
add
inc
jle
dec
shlb
adc
mov
lea
push
ret
sub
or
cld
sti
xchg
out
rcrb
jnp
je
les
in
fistpl
mov
test
movsb
pop
icebp
add
in
mov
sub
adc
or
pop
mov
fbstp
mov
out
xchg
out
push
scas
xchg
jecxz
fstps
mov
stos
icebp
mov
subl
mov
loopne
enter
sahf
pop
test
int3
xor
icebp
jns
pop
sbb
cmp
add
mov
cmpsb
mov
sbb
loope
lock
xchg
and
sbb
iret
stos
mov
clc
ss
xor
mov
std
and
and
repz
aas
xchg
push
mov
dec
jae
test
jae
outsl
adc
mov
out
cmc
pop
xor
push
adc
outsb
cmpsl
fildl
add
nop
sar
out
fcmovu
push
mov
mov
out
daa
out
rorl
push
adc
daa
inc
bound
fyl2x
inc
sub
ret
in
xor
notb
push
xchg
jmp
xor
or
repnz
jo
xchg
fwait
icebp
adc
rcrl
popa
pop
jne
add
sub
cld
lods
xchg
andb
mov
or
add
xor
loop
fs
pop
aad
sub
inc
jp
push
xlat
dec
repz
bound
adc
scas
scas
sub
xchg
xor
and
aam
lahf
test
dec
or
stos
add
add
cmc
aaa
pop
xchg
cwtl
cs
sub
adc
in
lret
sub
or
push
pop
sub
and
mov
push
cmc
jecxz
xchg
sbb
mov
lea
inc
dec
dec
mov
jmp
pop
fldt
sub
repnz
cld
clc
ret
sbb
bound
or
nop
xchg
lret
adc
testb
pop
lods
adc
cltd
push
repz
mov
mov
inc
add
sub
xchg
xchg
out
fmulp
inc
pusha
rol
dec
sbb
roll
loop
jmp
fmul
popa
rorl
dec
jns
flds
out
arpl
pusha
popa
les
cmp
into
clc
add
popf
xor
or
dec
and
lds
clc
add
clc
sbb
dec
pop
xchg
inc
jmp
or
xchg
dec
jb
fbld
fistpl
inc
repz
and
ret
leave
fsubrl
xchg
add
mov
inc
and
aam
int
test
pop
leave
pop
xchg
mov
xor
adcl
popf
inc
and
daa
inc
sub
mov
in
call
movsl
xchg
dec
xor
sbb
push
mov
dec
xor
mov
les
movsb
sbb
push
iret
das
imul
lret
cli
and
inc
mov
dec
adc
lret
add
sub
mov
dec
pop
cmp
lock
xor
sarb
sahf
pop
ret
test
out
sarb
decb
mov
mov
dec
jmp
stos
or
pop
jns
mov
adc
xchg
push
dec
cli
jle
mov
xor
sbb
pushl
enter
call
mov
je
sarl
xchg
test
lret
mov
js
xor
leave
adc
rolb
je
scas
mov
sbb
push
lods
xchg
mov
xlat
inc
mov
xor
xor
aam
leave
gs
inc
ja
push
ljmp
sahf
sbb
bound
mov
sbb
sub
fldl
vpunpcklbw
push
mov
cmp
xor
hlt
push
cmp
push
xchg
gs
out
in
or
lock
testb
jecxz
pop
xor
jg
pop
sbb
mov
adc
cld
ficomps
xchg
sahf
cmp
sbb
xchg
cmp
in
in
inc
pop
cmp
inc
xor
and
out
mov
add
xchg
insb
ds
in
shll
jnp
adc
stc
sbb
mov
push
pop
ja
dec
sbb
mov
dec
pop
shr
lods
cmp
add
lods
lcall
in
es
inc
and
push
lea
sbb
nop
je
mov
xor
inc
xchg
add
test
sbb
jo
out
mov
movsl
sahf
hlt
sti
add
adc
push
jno
jnp
and
test
inc
icebp
and
mov
mov
jmp
and
cmp
push
mov
inc
xchg
jmp
mov
jb
dec
pop
dec
mov
je
fidivrl
xlat
push
or
cmpsl
inc
cmp
stc
jge
out
xor
rclb
inc
lret
setle
mov
push
push
push
adc
fs
xor
mov
dec
icebp
ja
xchg
cmp
repnz
movsl
inc
bound
add
pop
testl
mov
adc
mov
inc
sbbl
inc
lcall
mov
mov
xor
push
out
shrb
xor
orl
pop
jmp
jp
and
sbb
jp
je
push
mov
dec
adc
test
xor
xchg
test
icebp
sbb
or
outsb
pop
mov
in
xor
dec
xor
test
and
ljmp
push
jecxz
mov
mov
jnp
adc
repz
xlat
shll
rolb
mov
cld
clc
stc
inc
dec
nop
lods
jle
ss
push
sbb
movsl
push
nop
or
fistl
dec
mov
je
repnz
lcall
push
or
or
mov
insb
rcr
mov
lods
inc
dec
cmp
cld
pop
fisubrs
inc
sar
jmp
leave
add
sahf
ret
in
inc
test
loope
ja
xchg
into
inc
mov
adc
outsl
imul
xlat
insb
fs
push
adc
aam
lods
enter
and
arpl
fldt
sub
and
jne
sbb
mov
cmpsb
sub
push
mov
sbb
jle
push
ss
clc
push
add
push
je
inc
xchg
fidivs
js
xchg
mov
fnstenv
lock
cmp
mov
mov
mov
and
incl
rclb
iret
adc
movsb
sub
dec
mov
mov
jecxz
push
lret
shrl
divl
mov
stc
addr16
sub
push
cs
push
add
gs
mov
mov
xchg
pop
jns
pop
mov
lods
lods
mov
and
popw
sbb
test
mov
jle
push
jmp
adc
cmp
inc
mov
pushf
test
fisttps
mov
and
imul
cmpsl
or
inc
cmpsl
aam
call
cmp
cmpsb
xor
dec
push
sbb
fwait
lret
inc
add
sub
jne
jnp
sbb
test
cmpsb
scas
inc
movsb
ret
push
jge
pop
iret
add
decl
mov
ret
dec
addr16
jmp
sub
ja
int3
lahf
mov
push
jge
hlt
leave
rorb
mov
jmp
pushf
mov
cltd
add
out
or
push
jg
jg
mov
leave
xor
sbb
or
popf
mov
adc
and
add
jmp
aas
movsb
push
push
xor
in
jp
test
xor
jne
movsb
out
pop
outsb
lds
cmp
out
or
cltd
mov
mov
fadds
cmp
or
sbb
sahf
mov
mov
xor
lret
cmpsl
jb
iret
push
adc
stc
mov
sbb
fcoms
iret
mov
pop
ja
mov
ja
cwtl
test
dec
sti
inc
repnz
cmp
jbe
xor
jge
or
in
lods
cmp
adc
push
pop
push
xchg
pusha
ljmp
sbb
push
cs
test
xchg
cmp
inc
push
mov
lahf
inc
sahf
xor
loope
dec
dec
fisttpl
cmpsl
cmp
rclb
jmp
add
iret
cmp
push
insb
aas
jg
mov
cld
in
lds
mov
scas
pop
out
outsl
add
mov
fnsave
inc
loopne
pop
out
sbb
add
into
test
int
jne
sub
pop
add
lock
fidivrs
push
mov
andb
les
outsl
or
mov
mov
inc
roll
jle
mov
pop
adc
sbb
dec
push
test
jae
sahf
jl
mov
pushf
cmp
cli
cld
cmp
fwait
add
jno
pop
outsl
jp
cmp
out
hlt
sub
mov
sub
rorl
cltd
sti
out
xchg
inc
stc
jbe
xchg
out
xchg
mov
jnp
in
mov
sub
out
mov
dec
xchg
pusha
mov
mov
sub
in
jecxz
movsl
jo
popf
in
stos
ljmp
in
nop
dec
pop
sub
sbb
scas
sub
mov
shrl
sahf
xlat
pusha
jl
inc
dec
sub
js
call
inc
mov
or
js
dec
lods
jnp
lds
aad
subb
in
pusha
mov
pop
jo
sti
stos
inc
popf
scas
stc
and
and
mov
out
test
test
cwtl
xor
fldt
ss
xor
xor
and
mov
add
push
sarb
sub
mov
clc
je
jne
bswap
stos
pop
leave
rcl
lea
daa
xchg
mov
clc
std
filds
adc
lret
in
lret
fists
inc
not
aad
imul
add
lods
cli
dec
sbb
mov
int
push
out
cmp
xor
loope
daa
pop
adc
cld
mov
jg
pushf
or
inc
pop
fsts
jne
fcoms
lea
adc
ffree
jle
jne
adc
daa
in
cmp
in
mov
sub
stc
iret
fistps
gs
sub
mov
dec
adcl
and
or
inc
inc
mov
fs
mov
push
dec
inc
pop
gs
std
lahf
push
sub
dec
int3
inc
xchg
xor
and
out
mov
or
push
pop
out
std
shlb
test
les
lds
cmp
insl
ret
aam
push
xchg
test
js
inc
sbb
mov
cld
lcall
mov
cmc
mov
pusha
in
cmp
adc
and
dec
addr16
sbb
nop
xor
cmp
cmpsl
inc
aas
add
jmp
lcall
pop
mov
je
call
pop
inc
outsb
pop
cmp
mov
or
addr16
bound
sbb
mov
push
data16
xor
or
das
mov
adcl
loope
pop
xor
dec
lods
push
and
push
mov
repnz
pop
je
lcall
or
out
xor
in
adc
stc
fisttpll
cmp
int
mov
jbe
jnp
xchg
js
cwtl
movsl
shll
pop
push
mov
pop
aaa
popl
out
xlat
jo
cltd
je
sub
aaa
repz
adc
and
jmp
mov
push
push
mov
mov
ficoml
mov
dec
dec
outsl
out
jae
cmp
outsb
inc
lahf
sahf
jne
adcl
push
mov
mov
outsb
das
or
jmp
pop
mov
testb
jp
lods
lret
out
mov
jbe
xchg
push
js
dec
fs
xor
andb
into
xor
jle
xchg
fisubl
cmp
ss
sbb
lahf
cmp
inc
jbe
das
sbbl
mov
cmp
add
xchg
fisubs
pop
mov
dec
push
in
loopne
jmp
push
xchg
mov
xchg
jns
mov
cmp
popf
mov
xchg
in
mov
sahf
sub
mov
pop
pusha
pop
loop
or
into
mov
pop
add
lds
not
xor
pushf
or
dec
lcall
lods
push
push
lret
fidivs
xchg
je
jge
sti
mov
push
aam
enter
sbbb
pop
push
push
and
ja
js
fldl
lock
leave
pop
or
fs
add
cmc
dec
push
mov
shr
push
inc
bound
or
bound
fsubp
in
pop
daa
mov
test
inc
fcoml
daa
dec
into
xor
mov
xlat
nop
pushf
movsl
in
ret
dec
scas
imul
rcll
scas
pmuludq
ret
lret
and
mov
std
cmpsl
dec
mov
push
xor
or
add
fidivs
jno
cmp
cmpsl
jl
pop
cmp
cmp
fstps
addl
or
xchg
or
fdivrs
mov
mov
neg
and
cld
xor
call
sti
dec
int3
inc
int
jns
cmp
loopnew
mov
mov
imul
jne
mov
imul
mov
sub
js
push
jp
int3
ljmp
inc
das
cmpsl
dec
jb
bound
movsb
add
jno
int3
or
jp
loop
imul
fiaddl
pop
and
test
xchg
sarl
popf
cmp
fisubrs
sbb
repz
adc
es
mov
or
or
out
mov
iret
mov
adc
gs
mov
adc
mov
add
out
jae
fdivr
into
adc
jo
cmp
movsl
adc
mov
cmpb
out
push
or
cmp
pop
jmp
jnp
sbb
ds
aaa
sbb
push
stc
mov
jg
les
mov
leave
cmc
pop
shlb
cmp
xchg
mov
or
insb
popf
repnz
cmp
sub
loopne
cmp
popf
movaps
ss
add
out
mov
test
mov
add
lahf
add
cmpl
push
sbb
and
imul
push
dec
imul
and
push
stos
cs
lea
popf
fcomip
add
aaa
cmp
popa
sub
lock
xchg
cwtl
push
jmp
inc
mov
enter
inc
mov
cmp
cltd
xlat
sub
xor
jne
jecxz
pop
adc
fadds
jp
adc
ret
and
fmull
jns
adc
mov
das
push
or
aaa
or
mul
cmp
mov
or
test
and
inc
jp
mov
pop
pop
lods
and
push
divl
lret
in
dec
sbb
ja
fldl
leave
testb
shrl
aad
fucom
lea
xor
fldenv
mov
out
popa
sbb
insl
outsb
fwait
sbb
dec
add
pop
sub
in
jge
push
fnstcw
xor
lock
and
mov
xchg
or
test
sub
jge
xor
or
push
jbe
cmpsl
add
jbe
jl
stc
pop
sub
mov
cltd
lods
addb
movsb
shrb
daa
jo
lods
cmp
sbb
int
or
outsb
sbb
xchg
xchg
jg
add
xchg
je
push
lds
popa
or
test
adc
lods
sahf
mov
and
add
data16
outsl
lahf
bound
cmpb
dec
push
lret
in
aad
adc
in
pushf
jnp
mov
jg
mov
or
mov
dec
cmpsb
adc
cli
jmp
and
movsb
aaa
cmp
cmp
in
mov
in
ret
jns
in
in
pop
ret
outsl
pop
out
push
add
cmc
push
xchg
sub
sti
pop
fldl
jno
inc
je
pop
mov
jbe
jb
inc
and
dec
in
dec
ret
pop
hlt
inc
push
ss
cli
mov
mov
leave
mov
pop
mov
and
hlt
dec
daa
data16
inc
or
std
or
jp
popa
ficompl
shr
jmp
cmp
cmp
arpl
adc
aas
dec
jle
repnz
inc
pop
inc
lcall
shr
xchg
ret
adc
xor
and
jge
mov
sub
ret
adc
xchg
mov
sbb
ret
jp
stos
bound
adc
adc
push
ljmp
out
dec
cmp
push
xor
adc
dec
call
dec
xchg
pusha
mov
loope
lea
les
shll
pop
into
fnstsw
xchg
pop
pop
mov
flds
lcall
mov
jge
loopne
stos
fbld
dec
and
add
adc
pop
pop
xlat
dec
cli
sub
fcoms
mov
mov
cmp
xchg
mov
mov
mov
rorl
jno
mov
cmpsl
ret
inc
dec
mov
and
xor
pop
add
hlt
das
and
sub
hlt
aas
std
cmp
push
sbb
push
push
and
cwtl
mov
and
orl
or
jb
lret
push
loop
push
arpl
sbb
adcb
cld
imul
or
cltd
repnz
sbbl
int
add
fildl
mov
inc
xchg
cmp
bound
fcmovne
pusha
dec
ret
xlat
dec
icebp
mov
sbb
fildll
cmp
mov
call
adc
fstpl
pop
nop
les
adc
cmp
out
loopne
fimuls
repz
fistpl
std
jmp
test
insb
fisubrs
scas
xchg
push
adc
sub
cmp
lret
movsb
xlat
dec
pop
mov
pop
and
ds
and
cwtl
mov
add
push
and
jg
mov
int
pop
movsb
push
fisubrs
dec
out
push
lods
into
sub
in
aas
add
xlat
dec
dec
cmp
mov
std
cli
je
push
and
mov
test
jnp
lea
xor
fnstsw
jne
daa
enter
lahf
mov
xlat
push
xchg
fs
push
adc
sbb
xchg
or
into
jne
in
mov
jg
daa
subl
mov
push
jae
mov
scas
lods
sub
fsubs
movsl
jnp
or
out
stc
rclb
jl
add
lret
push
daa
xor
lods
idivb
vxorps
divl
out
ja
mov
insb
lcall
dec
lock
inc
pusha
mov
mov
out
ret
dec
ss
sbb
scas
inc
mov
xchg
push
testl
or
pop
mov
test
or
sti
mov
roll
inc
stos
fidivrs
gs
hlt
sub
cmpsb
notb
fidivs
aam
fdivs
xchg
xchg
test
push
stos
push
test
cli
das
xchg
inc
sbb
pop
mov
mov
jge
enter
sti
lcall
sbb
rorb
inc
xor
sub
sti
cmc
cld
cmp
and
mov
jo
mov
dec
xchg
std
callw
jge
push
push
push
sub
loopne
imul
pop
stos
sub
je
scas
js
add
mov
jnp
xlat
mov
or
mov
es
xor
stos
fnstsw
imul
mov
pop
in
push
push
mov
notl
dec
jns
inc
dec
mov
aad
clc
and
inc
cmp
ret
dec
fs
fisubrs
xor
ficoms
scas
mov
popf
jbe
clc
jle
jae
pop
mov
pop
sarb
pop
cmp
lock
pop
psubd
inc
push
in
aad
lahf
jp
jns
inc
mov
data16
pop
xchg
pop
mov
fcomp
push
daa
adc
mov
jb
dec
loop
add
push
dec
cmpsl
xchg
pop
cld
hlt
and
loopne
stos
js
adc
in
add
mov
cmp
rol
adc
add
adc
jnp
mov
rcrb
sub
mov
das
sahf
fnsave
xor
dec
cwtl
fisubrl
jo
sti
cmpsl
mov
xor
pop
inc
aad
enter
nop
xchg
mov
jmp
lock
xor
je
mov
mov
mov
fisubrs
mov
add
iret
loop
leave
cmp
dec
cld
add
in
xor
cmc
jp
mov
push
sbb
pop
mov
xchg
mov
das
imul
sbb
bound
and
js
cmpsb
pushf
fisubs
inc
dec
xchg
je
pop
inc
lahf
insl
ret
pushf
test
test
push
sub
inc
dec
lahf
lea
cli
sar
repnz
push
aaa
rorl
xor
movsb
adc
loope
lds
leave
leave
jne
xlat
in
push
cmc
leave
bound
jne
mov
insb
xor
pop
adc
das
nop
xchg
push
cmp
mov
pop
pop
mov
lods
and
stos
dec
push
test
pushf
loopne
xor
cmp
ljmp
lahf
insl
cmp
scas
xchg
jne
inc
sbb
sbb
out
lock
mov
xor
cmpsb
xchg
push
push
cmp
or
mov
pusha
add
pushf
lahf
loopne
clc
mov
ljmp
push
mov
icebp
cmpl
dec
insb
mov
cmc
push
add
out
loop
push
inc
mov
js
rcrb
push
mov
sub
mov
dec
jbe
popf
cmp
jb
xchg
mov
shlb
fimull
cli
add
xor
fs
arpl
xchg
mov
adc
in
or
ja
add
int
mov
aas
or
ds
cmp
lods
jge,pn
push
arpl
pop
adc
dec
mov
daa
adcb
imul
or
insl
xor
std
stos
fcomip
dec
shr
mov
fbld
add
js
pop
popf
sub
pop
enter
stos
xchg
icebp
out
cmpsl
orl
mov
out
daa
mov
xor
dec
adc
or
gs
jg
and
lods
lcall
in
daa
test
imul
xchg
imul
pop
outsb
sub
xor
sar
ljmp
outsl
sahf
inc
out
insb
in
stos
mov
mov
jb
loope
mov
aam
pop
mov
leave
int3
xchg
pop
cmp
dec
mov
cmpb
jle
insl
pop
movsb
pop
mov
mov
jno
pop
adc
jg
lret
out
or
xor
mov
xchg
dec
in
mov
mov
pop
leave
mov
jge
jge
sub
mov
mov
jge
lret
int
shll
sub
or
cmp
jg
out
fsubs
sbb
hlt
hlt
pop
ja
pushf
mov
dec
sub
xchg
decb
dec
aaa
jb
mov
mov
push
je
cmp
imul
sbb
scas
sbb
in
xchg
adc
lahf
in
ret
jo
jo
and
jge
mov
mov
mov
jg
cmpsb
test
in
aas
dec
cmovl
daa
rcl
dec
loopne
dec
iret
test
pushf
sbb
inc
push
mov
cmpsl
nop
sub
mov
adc
push
fdivl
sbb
cmp
mov
outsb
data16
sbb
inc
call
clc
mov
and
into
pop
in
xor
push
leave
in
in
lds
mov
push
sbb
ja
cmp
jp
call
dec
imul
scas
add
inc
cmp
fs
in
cmpsb
hlt
and
pop
jge
sbb
ret
dec
test
sbb
cld
insb
pop
fists
loopne
popa
lea
sub
add
lret
imul
aad
lret
aas
ret
loope
mov
xchg
insl
inc
xchg
lods
jb
fnstsw
mov
xor
cmp
mov
fists
push
out
sub
cmp
aas
pop
hlt
not
ss
dec
stos
xor
cwtl
xchg
je
mov
retw
sub
out
rcl
jecxz
sub
pop
lock
loop
inc
in
gs
inc
shll
lahf
cmc
push
sbb
mov
xchg
scas
lret
push
repz
fs
mov
mov
and
test
mov
xchg
enter
sbb
inc
scas
dec
cmc
fiaddl
test
rcll
inc
lods
xchg
mov
lret
lea
and
push
aas
add
repz
xchg
shll
inc
cmpl
xor
out
aad
mov
clc
cmovge
or
xchg
mov
ficoml
sbb
dec
cmpsl
jl
popf
btc
push
leave
xchg
xchg
pop
int3
jle
test
add
pop
mov
cwtl
push
sub
loope
mov
jmp
aas
push
cli
xchg
insb
mov
or
dec
xor
xchg
xor
push
jb
leave
fmulp
fdivl
jg
int3
cmp
cmp
ds
out
adc
sbb
sub
add
sbb
faddl
insl
mov
dec
imul
or
or
jecxz
push
ret
pop
jmp
aad
mov
inc
stos
hlt
testl
fistl
testb
fldenv
sub
xchg
sti
sub
pop
inc
push
mov
pushf
stc
mov
inc
cmp
push
cmp
loop
adc
popf
push
hlt
in
aad
adc
cmp
leave
ljmp
cld
ret
inc
jmp
std
inc
lret
and
mov
pushf
ja
sbb
mov
xor
mov
data16
clc
test
rolb
aas
cmp
mov
mov
sbb
xchg
xchg
in
cmpsb
push
cmp
pop
mov
rcl
mov
xchg
rorl
xor
daa
jae,pt
fsubp
in
xchg
add
fldcw
outsl
xchg
mov
sbb
cwtl
pop
sub
mov
repz
jecxz
adc
sahf
adc
push
sbb
push
gs
jle
xor
clc
jecxz
mov
push
ss
or
in
adc
lret
loop
sub
dec
cmp
or
cmp
dec
pop
fcmovbe
rcl
stc
mov
xor
and
and
cmp
push
out
imul
pushf
dec
or
inc
xlat
clc
andb
lock
sahf
xchg
adc
rol
call
xchg
cltd
xor
adc
insl
mov
loopne
gs
test
mov
inc
sub
mov
fnstsw
jns
imul
pop
and
jnp
mov
les
repnz
data16
test
push
insb
mov
cmpb
call
addr16
and
icebp
js
dec
mov
jno
mov
dec
sbb
push
mov
push
in
and
in
xchg
xchg
inc
xchg
shrl
mov
sbb
cmp
scas
pop
inc
out
sbb
incb
addr16
or
jmp
cmp
add
jbe
scas
mov
jge
rorl
nop
or
xor
mov
js
mov
mov
and
dec
push
out
fs
cli
adc
mov
mov
cwtl
push
mov
test
inc
cmp
mov
inc
nop
jnp
xlat
push
mov
cmp
sub
ss
ficompl
mov
sub
sbb
add
xchg
inc
push
sub
pop
pop
jnp
add
outsb
mov
sub
daa
scas
data16
sub
cmpsb
lea
neg
pop
xor
xor
clc
push
push
sahf
test
popf
aam
mov
jmp
lahf
mov
or
sub
cmpsb
xchg
lcall
adc
mov
pop
stos
fs
shr
xchg
xchg
and
aam
add
cwtl
sbb
and
sub
adc
inc
sub
adc
js
mov
adc
jbe
jo
dec
push
pop
es
out
push
add
ret
mov
cmpl
insb
or
adc
xor
and
mov
nop
pop
or
je
or
adc
rol
cli
iret
stos
mov
enter
mov
gs
jo
push
mov
rcrb
stos
or
jg
dec
jecxz
and
in
fs
dec
movsl
movsl
xlat
sbb
shlb
jp
mov
adc
fs
pop
mov
pop
scas
lret
xchg
out
mov
lcall
aad
imulb
inc
in
and
and
or
stos
or
cmpb
into
movsb
jae
mov
mov
scas
pop
pushf
ja
jo
hlt
lcall
adc
xchg
push
stos
lcall
add
popa
lock
and
sub
mov
jnp
mov
push
cmpsb
mov
ja
cmp
sbb
push
pop
cmp
adc
inc
push
rol
lret
paddusb
pop
out
pop
pop
shll
es
sub
fistpll
mov
jge
jnp
std
cmp
mov
xor
sbb
shrl
inc
rorb
sti
jl
std
movl
js
clc
aam
sbb
test
in
sbb
aad
or
mov
sub
nop
xor
mov
movb
sbb
push
sti
or
and
xor
repnz
es
jmp
push
stos
ja
in
ljmp
mov
mov
lods
jne
inc
sbb
fdivrl
lods
mov
ds
pop
jl
inc
inc
adc
sub
mov
dec
sahf
iret
adc
push
lret
daa
cmpl
bound
push
jge
xchg
dec
jg
ds
jle
int
adcl
or
rorl
jle
jne
enter
sbb
leave
iret
and
idivl
mov
pushf
xchg
iret
scas
xchg
nop
int
cs
fdivrl
or
fstpt
jp
and
xchg
icebp
sub
movb
and
adc
dec
loope
jecxz
fwait
sbb
pop
sub
mov
dec
or
out
movsl
xchg
dec
add
pushf
pop
push
jge
cmpsl
stos
ret
sahf
inc
xchg
xor
add
inc
adc
jge
jl
cmp
repnz
mov
cmc
shl
into
rcrl
add
ljmp
and
sbb
int3
ret
add
add
and
mov
loope
cld
in
add
mov
add
in
sbb
pop
sbb
push
or
lock
out
adc
stc
and
sub
push
cmp
aam
nop
push
dec
and
data16
pusha
or
and
sub
ret
bound
mov
xchg
mov
pop
add
pop
mov
push
repz
repz
sarb
ljmp
fs
cmpsb
pop
movsb
add
fldt
pusha
aas
mov
std
jbe
fistps
mov
pop
xor
mov
pop
push
sahf
testl
mull
loope
mov
xchg
cwtl
daa
push
add
cwtl
sub
sub
loopne
cmpb
lea
out
out
jnp
shll
sahf
cmc
out
ja
sub
adc
or
sub
test
idivw
xchg
jg
push
insb
mov
fwait
in
insl
mov
mull
push
push
aam
mov
or
inc
aam
pop
xchg
pop
mov
test
push
and
mov
arpl
pop
mov
xor
das
arpl
xor
mov
jo
aam
clc
dec
sti
add
stos
xchg
push
ret
jne
ljmp
mov
mov
mov
mov
add
xor
cs
subl
stos
xorb
cmp
unpcklps
sub
xor
xor
push
rolb
inc
std
add
adc
mov
push
pusha
xorl
lret
test
pusha
rorb
mov
sub
test
sub
mov
ret
leave
push
outsl
lret
lods
loope
jp
push
sub
jnp
out
jo
test
enter
in
cmp
and
adc
lods
mov
jle
insb
dec
mov
sbb
push
lods
fldt
xor
filds
lahf
es
and
mov
cmpsl
xchg
int
scas
cmp
sbb
scas
fisttpll
sub
incb
inc
cwtl
mov
cmp
decl
xor
xchg
out
pop
aaa
cmc
jle
push
stc
lods
arpl
int3
arpl
mov
sbb
push
jmp
and
xchg
mov
push
inc
in
xor
add
adcb
std
pop
dec
push
lcall
sbb
pop
in
testl
aam
test
mov
lds
cltd
xchg
jne
sub
insb
push
sbb
fildl
cld
mov
mov
test
stos
movsb
movsl
pop
lock
mov
xor
jo
inc
jp
ret
stos
pop
push
je
inc
dec
out
sub
adc
sbb
pop
sti
sub
add
jp
std
lea
iret
cmp
or
out
mov
cmpsb
lcall
int3
dec
adc
movsl
loop
or
out
sbb
cmp
pop
sub
mov
je
mov
scas
loop
xor
and
add
cmp
neg
pop
ficomps
add
sub
repnz
inc
mov
add
xor
insl
mov
add
dec
lock
jo
and
int3
out
push
dec
xchg
out
mov
sub
xor
mov
je
ja
gs
push
mov
inc
cmp
push
adc
js
or
sti
mov
loopnew
inc
mov
jns
dec
mull
ficoms
jae
out
add
pop
xor
sbb
push
cmp
cmc
mov
dec
push
mov
mov
ja
adc
in
pop
sbb
vmovsldup
push
mov
gs
ja
pushf
push
mov
rorl
pop
add
jb
das
jbe
mov
scas
aas
les
and
ret
inc
or
rorb
sahf
int
cmp
fcomps
adc
jp
mov
mov
scas
and
xchg
out
jae
and
inc
push
cmp
mov
pop
loopne
fcoml
mov
sub
sub
xor
sub
xchg
add
fisttps
nop
xor
inc
fs
mov
adc
dec
fucomp
dec
call
adc
adc
sub
js
sbb
dec
cmp
inc
aam
stos
ja
loopne
cmpb
fmull
arpl
sbb
pusha
jnp
jle
mov
out
cmc
sub
adc
sbb
cmp
mov
and
cmc
aaa
nop
test
icebp
lods
lret
and
loopne
int
int3
lret
daa
gs
push
cmp
push
or
scas
pop
mov
mov
pop
pop
adc
shl
add
call
cmp
push
adc
adc
gs
cmp
jmp
fadd
xchg
inc
sti
push
clc
cs
ljmp
pop
jnp
lea
inc
and
movsb
sub
jb
push
cmp
jl
out
mov
pop
aaa
pop
mov
sarl
lock
add
fildl
mov
jge
fcmove
adc
jno
mov
cltd
and
dec
pop
sub
lods
shll
jge
inc
add
xchg
push
pop
cmpsb
cmp
sub
daa
xchg
pop
xor
mov
out
xor
icebp
cmp
pop
lea
inc
test
mov
add
pusha
and
out
arpl
cltd
cmp
out
pop
cltd
jmp
mov
lods
cmp
xor
mov
push
xchg
lds
leave
or
xchg
movsl
rclb
push
in
mov
push
idivb
cltd
xor
mov
mov
movsl
fbstp
mov
mov
test
inc
add
pushf
pop
aam
sar
loope
sub
call
mov
push
push
js
out
mov
repz
sbb
stos
ret
jne
dec
xchg
xor
or
fimull
xor
pusha
clc
hlt
push
mov
sarl
scas
int
mov
cs
mov
das
push
aam
add
hlt
add
repz
dec
mov
outsb
sub
lods
pop
mov
jo
cmpsb
add
and
ja
aas
adc
arpl
sub
mov
lds
shrw
cmp
inc
inc
cmc
in
jbe
sub
push
jae
pop
mov
xchg
dec
lret
sub
add
lret
push
aas
pop
sub
loope
ret
movsb
movsl
mov
inc
outsl
lods
scas
jno
hlt
hlt
dec
xchg
icebp
cmp
es
clc
and
into
mov
insl
nop
scas
fldt
js
mov
mov
jecxz
lea
xchg
add
cmp
jecxz
add
mov
sub
push
mov
sbb
popa
mov
mov
pop
sarl
mov
clc
xchg
scas
cmp
lods
sub
popa
movsl
lods
negl
dec
sti
das
mov
insl
imul
mov
mov
mov
rcrl
stos
hlt
pop
mov
push
popf
mov
jg
xorl
rcll
ret
sarl
out
int3
sub
and
bound
clc
xchg
cmp
fsubrl
popa
rol
xchg
test
xor
into
dec
rcl
sbb
sahf
aad
xchg
add
sbb
adcb
and
jno
dec
xor
or
loopne
lret
adc
xchg
sub
pop
decl
into
pop
lock
mov
push
fistpll
mov
lea
push
adc
and
and
cltd
in
xchg
ja
xchg
outsl
mov
push
mov
cmpsl
out
xchg
and
ret
and
sub
inc
out
adc
inc
push
push
push
mov
sbb
enter
cmc
repz
or
out
data16
in
out
loope
mov
mov
pop
mov
pop
insb
sub
cltd
stos
xchg
mov
in
movsl
sbb
sbb
clc
jae
inc
js
lea
xchg
outsb
cltd
arpl
pop
xor
and
pop
ja
ljmp
clc
adcb
js
xchg
je
add
mov
xor
sti
push
loope
lds
daa
push
ds
pause
in
jmp
loope
outsb
pop
pop
mov
cmp
jg
addb
aaa
cmpsl
loope
lahf
add
mov
jne
test
dec
leave
or
es
xchg
loopne
sbb
int3
mov
push
dec
hlt
push
lahf
mov
adc
sbb
cmpsl
ficoml
mov
adc
fnstenv
xchg
fcmovnb
push
in
cmp
inc
and
movsb
adc
popf
clc
movsl
jmp
icebp
xorb
inc
lds
jmp
sbb
pop
testb
mov
cmpsb
dec
fsubrp
sub
jno
xchg
call
in
daa
cltd
or
cltd
loopne
sbb
xor
imulb
les
push
add
sub
push
sbb
out
addr16
bound
push
jbe
lcall
sbb
pop
add
lods
scas
push
jo
iret
test
sub
adc
sti
cmpsl
jnp
mov
call
mov
push
out
or
enter
gs
lahf
test
mov
nop
nop
test
popf
jecxz
or
xlat
popa
mov
adc
xor
mov
add
push
in
cltd
jns
jmp
mov
mov
mov
stos
jecxz
out
push
push
stc
push
xchg
push
xchg
gs
cmpb
ds
shlb
lods
scas
int
int3
cmpsb
mov
sahf
fbstp
dec
insl
lods
out
mov
push
xor
xchg
aas
sub
js
sub
clc
dec
fisttps
dec
jno
clc
mov
fwait
adc
leave
adcl
nop
push
inc
mov
xchg
lret
testb
jno
call
lret
mov
imul
and
cld
cs
out
imul
sarb
lret
mov
out
jl
sahf
sub
mov
ss
jg
ja
jb
push
shl
repz
mov
ljmp
inc
adc
dec
inc
xor
push
shrb
jno
lahf
aaa
faddl
and
push
xor
imul
inc
loopne
aas
mov
jae
jns
push
in
lahf
cmp
mov
addb
aad
bound
push
cwtl
psadbw
jae
lret
xor
inc
xchg
test
nop
jge
ljmp
add
ror
dec
xchg
lods
subl
sub
shl
sub
pusha
mov
aam
rcrl
pop
adc
inc
lods
push
js
add
fs
aaa
popl
jp
xchg
ljmp
stos
fsubs
out
sbb
decl
repz
cmovne
mov
xchg
inc
nopl
imul
jb
push
and
inc
cmpsb
pusha
mov
sahf
push
add
outsl
stos
xor
ret
and
in
test
jge
or
shrb
int3
out
in
xor
int
test
stos
jbe
mov
xchg
xor
mov
cmp
js
sbb
xchg
inc
fcmovne
popf
aaa
push
sub
push
mov
jecxz
add
add
fucom
imul
sarl
leave
int3
iret
nop
pop
jle
mov
jmp
hlt
mov
int3
jecxz
cld
mov
lock
rclb
pushf
call
stos
mov
sub
roll
popf
nop
mov
mov
push
pop
dec
push
rcll
fsubs
out
cmp
pop
es
andb
loop
mov
mov
outsb
imul
rcrl
arpl
dec
es
imul
fsubrs
mov
xchg
fistpl
jb
std
mov
pop
aaa
push
leave
imul
popa
or
jecxz
or
add
sbbl
xchg
loop
fcmovu
and
mov
dec
mov
mov
xor
xchg
hlt
pop
ret
bound
pop
cli
fucomip
xchg
aam
add
sub
call
or
scas
jp
and
rorl
subb
imulb
add
into
fs
fistl
pop
mov
sub
popf
insl
pusha
jo
xor
mov
in
push
test
xor
add
xor
call
cmpsb
inc
popa
loope
incl
mov
push
cmpsb
std
pushf
jmp
mov
xchg
jns
add
dec
shlb
jge
mov
mov
pop
jne
pop
pop
adc
mov
cmp
es
ret
add
xor
xor
popf
mov
daa
or
int3
addr16
mov
mov
xor
sarb
jmp
gs
xchg
shll
test
jns
into
fdiv
out
outsl
mov
sbb
inc
push
mov
in
not
mov
mul
fcomps
and
xchg
pop
insb
lahf
fcmovnb
cmp
pop
pop
popf
and
mov
jecxz
fiadds
fidivs
jno
inc
enter
rorb
stos
gs
push
dec
sub
xchg
inc
xchg
fimull
out
pop
push
push
cmp
shrl
mov
call
mov
aas
inc
mov
ffree
sub
sub
dec
adc
mov
in
scas
test
dec
push
pop
sub
push
mov
mov
lret
rcrl
dec
fistpl
jnp
lret
adc
les
lret
je
in
fcomp
aaa
adc
cmp
pusha
mov
xor
and
lcall
add
or
scas
jns
out
lods
pop
enter
mov
hlt
and
push
enter
jns
xchg
sbb
bound
lret
stos
push
into
sbb
imul
ror
pop
out
in
adcl
scas
pop
repz
movsl
jg
mov
lret
stos
pop
pop
adc
xchg
loop
out
xchg
ret
cmp
ljmp
jbe
mov
int
lods
rcrb
popf
xchg
pop
lret
in
sbb
push
cs
sahf
je
ja
pop
inc
pop
push
cld
mov
push
push
cli
scas
das
add
xchg
icebp
sbb
gs
and
pop
sub
inc
gs
divl
mov
jnp
shr
testb
ret
push
scas
js
jae
dec
mov
dec
insb
or
dec
test
repnz
lods
sub
jle
and
jae
xor
inc
mov
jl
inc
into
icebp
jae
xor
xchg
cmpsb
loopne
push
mov
inc
push
cmp
pop
xchg
dec
inc
xchg
aam
js
dec
sbb
aam
cltd
cltd
or
jbe
jp
mov
filds
adc
dec
loopne
push
add
repz
pop
and
xor
jbe
push
push
sar
aas
mov
mov
int
cmpsb
popf
mov
fiadds
xor
cmp
scas
xor
cld
cmp
ficomps
cmp
xor
inc
cltd
fwait
data16
adc
dec
and
jae
or
pop
jle
sub
sub
dec
mov
sub
pop
push
ficomps
fs
fcomp
push
cmpsl
repz
sbb
dec
mov
je
callw
push
call
xchg
ret
push
push
sti
les
add
push
push
push
ds
aam
push
mov
and
add
hlt
add
test
adc
xchg
adc
bound
push
add
cmpsl
push
lahf
aaa
or
push
cs
icebp
mov
add
push
push
xor
jno
cmp
sbb
shl
xchg
dec
imul
push
subl
push
inc
dec
and
sbb
xchg
xor
inc
aas
lods
xchg
sub
jo
imul
or
jo
mov
shrb
inc
mov
movsl
incl
dec
in
or
sub
dec
movsb
cmpsl
subl
scas
inc
lods
fcoml
fwait
lcall
jae
bound
xchg
xchg
push
call
push
xchg
adc
in
inc
inc
fcmovbe
mov
inc
xchg
mov
data16
mov
and
push
mov
mov
push
pop
sub
mov
dec
pop
imul
ret
mov
push
xor
sbb
jecxz
jl
loop
adc
inc
movntq
test
add
cmpsl
imul
mov
cmpb
mov
mov
sub
stos
subl
gs
adc
mov
insl
adc
pop
out
or
sbb
stos
aaa
mov
add
xchg
or
cmpsb
mov
xlat
out
lret
xchg
int
xor
adc
pop
pop
cmp
xor
sub
pop
push
movsl
cltd
mov
dec
or
cli
adc
cld
cli
sbb
stos
xchg
movsb
sbb
mov
xor
ret
out
jo
ret
enter
ss
cli
ljmp
sub
dec
pop
stos
shlb
cltd
push
dec
add
ror
imul
push
scas
aas
xor
aad
stos
jns
and
cmp
mov
jns
sub
xor
hlt
push
pop
aam
xchg
and
mov
iret
jns
xchg
add
xor
xchg
cli
sbb
enter
pop
push
mov
loopne
push
push
xlat
in
or
inc
lods
xchg
sbb
mov
sbb
add
lcall
fstpl
aad
fadds
je
or
inc
aaa
xchg
imul
pop
mov
xchg
xchg
test
pop
xchg
in
sti
jmp
mov
mov
xchg
mov
sti
fcmovne
push
ljmp
mov
pusha
xchg
dec
sti
sbb
jg
mov
test
or
lret
cmpl
sti
dec
mov
pop
sub
xor
jne
lods
push
adcl
push
dec
jmp
push
sub
in
add
dec
xchg
mov
sbb
add
dec
sub
inc
mov
pop
jecxz
fdivrl
cld
adc
add
push
push
mov
std
subl
fwait
subb
pop
syscall
div
inc
mov
in
push
xor
jg
ljmp
mov
lahf
movsb
lods
fs
or
arpl
in
and
shll
pop
iret
jg
jno
xor
add
adc
jecxz
sbb
cs
repnz
push
int
xor
lret
dec
fldcw
xlat
push
dec
divb
inc
adc
sar
cltd
push
jnp
aam
sti
fsub
fcmovne
lahf
imul
inc
jns
pop
into
sub
sbb
jb
sub
aas
jnp
js
cwtl
lds
inc
leave
mov
sub
xchg
pop
outsl
xchg
push
int3
aam
stc
add
inc
pop
std
aas
and
je
cmc
sub
adc
test
movsb
xlat
sbb
push
cvtpi2ps
jns
fisubrl
aas
fld1
jbe
xor
push
fldl
adc
inc
pop
mov
adc
sbb
gs
jne
xchg
jl
mov
sarl
arpl
mov
mov
inc
dec
fwait
lea
clc
jns
fsubs
mov
pop
cmpsb
cvtpi2ps
push
cwtl
testl
adc
icebp
inc
gs
sbb
pop
leave
popa
pop
ret
divb
push
rorb
and
inc
pop
mov
gs
es
pushf
jle
dec
aas
imul
rcrl
cwtl
add
clc
xor
mov
xchg
test
mov
pop
xchg
mov
xor
cmove
in
sbb
push
rcr
mov
in
dec
bnd
and
and
push
cmpsb
dec
jmp
xorl
stos
loope
jmp
jl
push
mov
and
add
les
adc
test
mov
inc
bound
out
arpl
sbb
sub
loop
mov
jecxz
add
ret
inc
nop
xor
cmpsl
das
stos
fmul
add
sbb
lock
dec
fstpl
mov
cmp
pushf
pop
shrb
jb
repnz
sbb
cmp
cld
xchg
xchg
fcoml
ficompl
pusha
rorb
fisubrs
xor
xchg
loop
pushf
cmpsl
xchg
mov
mov
push
adc
xor
hlt
mov
inc
mov
movsl
push
mov
sbb
add
pop
push
xor
out
inc
dec
mov
and
jmp
sub
mov
iret
xor
into
sub
xor
pop
ret
add
push
push
adc
add
sbb
stos
push
movsb
loopne
xor
xor
mov
mov
jne
leave
aas
pushl
xchg
mov
lret
sub
cmp
inc
lock
lea
jp
jno
jg
mov
sbb
icebp
xor
adc
push
in
push
fsub
jno
rcrb
in
cltd
rcrl
adc
pop
adc
movaps
pop
xor
pop
add
sar
sti
inc
push
faddl
fiadds
push
aad
inc
and
push
lret
sub
cli
movsl
jae
jbe
mov
test
lods
je
inc
sbb
sahf
scas
cmp
in
mov
and
imul
js
pop
in
fimuls
or
mov
xor
jae
pop
test
xor
pop
pop
pop
shrl
nop
mov
pop
pushf
and
iret
mov
enter
push
inc
mov
ja
cmp
mov
loopne
les
pop
push
scas
mov
idiv
fcompl
dec
and
and
dec
dec
xor
arpl
vpabsb
jo
sbb
cli
fistpl
das
push
mov
jge
pop
shrl
roll
lods
push
daa
jle
pop
jmp
pop
adc
xor
fsubrl
repz
les
gs
andb
sub
sub
daa
mov
pop
mov
jns
sbb
pop
or
pop
fcmovbe
enter
and
dec
cmp
inc
fsubp
sbb
mov
fwait
add
xor
sbb
pop
mov
dec
inc
pop
movl
xchg
fidivs
sub
imull
push
lcall
mov
ljmp
lods
or
and
xlat
ret
loop
xor
add
xchg
push
js
movsl
mov
shlb
out
das
push
or
dec
mov
pop
cmpl
fdivp
mov
xlat
push
std
ja
orb
and
push
mov
cwtl
xchg
cmc
xchg
dec
movsl
loope
sti
ja
pushw
xor
mov
aas
mov
fsubs
dec
and
enter
test
pop
stos
and
les
dec
mov
xchg
sbb
jge
test
scas
aad
and
mov
cmp
int
iret
sbb
sub
or
sti
push
push
mov
fdivrs
adc
adc
shl
mov
mov
decb
pop
fwait
js
rclb
ss
sarb
imul
lock
hlt
mov
sub
hlt
pop
adc
repnz
cmpsl
sub
add
push
jmp
xchg
test
iret
sub
pop
shrl
or
mov
lea
filds
dec
or
pop
push
push
mov
cmp
push
cmp
outsb
fimuls
add
ljmp
test
cltd
push
cmp
jp
stos
push
adc
iret
cmp
and
arpl
mov
pusha
gs
or
cmp
divl
ja
rcr
aam
dec
or
adc
add
add
push
scas
push
rolb
cmp
data16
pop
mov
dec
xchg
arpl
lea
out
sub
or
or
pop
ss
aas
stos
das
nop
mov
cli
add
mov
stos
into
mov
fsub
jae
sbb
push
adc
mov
or
faddl
rorb
adc
push
out
xchg
push
mov
or
xor
rcrl
shll
add
xor
iret
aam
mov
inc
cmp
xor
divl
jmp
test
cmp
arpl
ret
cli
cmp
in
mov
xlat
mov
push
loopne
cmp
mov
out
add
sub
xchg
mov
shl
pop
jb
mov
cmp
into
push
mov
push
jno
ss
fwait
or
mov
stos
mov
pop
inc
scas
push
adcb
fwait
dec
fldz
inc
cmpsb
mov
pop
add
cmpsl
jne
mov
movsb
push
mov
sub
cltd
stos
mov
incb
pop
pop
dec
cltd
pop
xor
xchg
cmp
mov
mov
jae
sbb
stos
adc
adc
sub
jns
mov
cmp
mulb
ljmp
cltd
inc
subb
into
imul
lock
mov
repnz
fimull
pop
cli
xchg
jo
in
ds
mov
mov
sub
sub
in
jae
dec
out
pop
jge
stos
mov
jge
jle
lret
jecxz
inc
mov
xchg
dec
sub
test
aad
repnz
sarb
dec
imul
out
insl
xor
and
cltd
mov
notb
sub
sub
rolb
cli
dec
imul
adc
mov
fiaddl
in
xchg
stos
inc
jle
push
repz
sub
imul
mov
jb
sarb
lea
cmp
cmp
scas
sbb
ret
pop
pop
sub
inc
stc
lods
cli
and
pop
mov
stc
jbe
fnstenv
fidivrl
xchg
and
xchg
or
in
cmp
iret
divb
push
lock
add
loopne
std
test
addr16
sti
popa
stos
jecxz
add
xchg
test
lea
dec
jg
int
xchg
push
adc
xlat
jo
mov
pop
repz
test
loope
jb
pop
leave
pop
int
rcll
loopne
sarl
cmpsb
cld
in
inc
and
or
inc
jne
outsl
inc
sbb
pop
test
sbb
xorl
dec
dec
out
loop
data16
scas
call
jmp
in
dec
mov
daa
imul
jnp
mov
dec
addr16
sbb
movsb
xorb
cmp
cltd
in
iret
sub
mov
or
repnz
xor
mov
getsec
fs
je
pop
hlt
pop
cmpsb
mov
call
lds
sbb
mov
jno
and
nop
fidivrl
call
pusha
cmp
addr16
out
sbb
mov
fimull
and
fwait
mov
jg
lret
ljmp
pop
sbb
fdivrl
enter
in
jb
dec
scas
inc
and
scas
sbb
sub
add
enter
or
lret
out
push
js
stos
jle
pop
cmp
cwtl
xchg
sti
xor
push
ficoml
jle
stos
sub
inc
imul
cmpsb
subb
sbb
sbb
aaa
or
mov
loope
adc
mov
scas
adcb
pusha
daa
xchg
push
push
repz
push
loopne
test
mov
jmp
out
dec
jp
fucomip
cmp
and
repnz
negb
add
mov
dec
dec
and
jle
jecxz
dec
arpl
addr16
repz
loopne
and
in
ffreep
and
scas
in
out
test
fwait
jns
lea
jl
aam
pop
mov
mov
nop
or
sub
xchg
out
testb
pop
fsubs
jg
in
jbe
sahf
inc
push
js
pop
outsl
js
orl
scas
std
inc
jp
aas
mov
lods
sbb
cmpsl
out
jle
decl
sub
imul
jnp
cmp
adc
push
dec
push
stc
and
dec
out
or
sub
mov
cmpsl
mov
xchg
loope
fbstp
adc
mov
xchg
push
lcall
xchg
stos
sbb
aad
orl
jb
cmp
aas
pop
push
xor
fists
or
add
mov
and
jg
pop
mov
push
sub
add
nop
imul
push
mov
test
pusha
aad
pop
ds
pushf
fwait
orl
in
push
mov
mov
xchg
mov
fsub
cwtl
fwait
xchg
or
inc
out
adc
in
addr16
xlat
mov
lods
jle
scas
addr16
bnd
mov
push
fidivs
mov
sub
lret
mov
lods
loop
push
gs
ss
or
jmp
xchg
mov
cli
inc
lea
push
loopne
fs
pop
leave
and
jg
inc
jecxz
sbb
dec
test
jg
aad
ret
and
je
bound
jo
mov
dec
pop
std
scas
cmpsb
pop
je
clc
loope
inc
filds
sbb
and
cmp
insl
pop
push
xchg
out
jle
aad
jp
pushf
dec
mov
mov
and
dec
cmp
mov
pop
cmp
insb
or
jno
insl
movsl
mov
sub
ljmp
mov
pop
sub
fimuls
es
cld
sub
rcrl
mov
dec
jb
xchg
fidivrl
mov
sbb
ja
jns
test
lea
test
es
mov
rcrl
scas
dec
test
jae
test
ss
adc
mov
jle
divb
and
std
pop
aad
sqrtps
add
idiv
pop
mov
fnsave
mov
stos
sahf
mov
cld
popf
jge
repz
cs
fcmovbe
dec
das
loopne
push
lds
sub
mov
inc
xor
sbbl
cmc
shr
aaa
call
mov
pop
sub
and
imul
mov
sub
pop
xlat
mov
and
xor
arpl
cmp
cmp
mov
jns
inc
mov
jnp
cmpl
cmp
pusha
jb
fldcw
stc
inc
enter
xchg
das
sub
jg
aam
push
stc
add
xor
push
aam
divb
mov
pop
cmp
jp
xlat
fcomps
faddl
mov
jae
scas
push
fwait
or
pusha
lods
mov
rcrb
sub
shll
mov
jne
sbb
sub
scas
fldl2e
xchg
out
ss
fwait
outsb
mov
clc
in
lods
test
inc
fcomi
dec
popa
test
xor
xchg
out
jl
or
dec
scas
std
push
and
insb
cmp
in
in
jnp
add
loop
or
pop
inc
sbb
std
enter
les
sub
and
push
pushf
gs
push
lods
rorl
add
leave
rclb
cltd
lods
loop
add
mov
aam
lods
gs
das
dec
dec
out
push
out
gs
iret
jmp
fmuls
push
sub
imul
nop
xchg
inc
xor
mov
lahf
xor
inc
iret
and
js
loopne
mov
xorl
and
cmpl
addr16
fistpl
cmp
pop
inc
repnz
ficomps
jno
int
shrb
mov
push
jb
mov
loope
sbb
or
ds
push
mov
mov
fidivs
add
pop
sbb
mov
sbb
mov
rcl
setno
out
pop
or
push
imul
test
xor
xor
mov
pop
bound
pop
mov
lcall
les
dec
test
or
ljmp
and
push
cmp
aaa
out
sbb
or
cmp
in
jl
repz
or
pop
and
je
aad
dec
addr16
jecxz
aam
outsl
mov
push
int
std
dec
xchg
aaa
jp
outsl
mov
mov
pushf
mov
lahf
hlt
pop
add
lock
pop
xchg
mov
dec
rcrl
jp
cli
push
adc
jge
or
inc
test
cwtl
inc
iret
es
pop
dec
fcom
inc
insl
aas
sub
inc
subl
adc
push
mov
sub
faddl
sbb
lret
pop
call
test
aam
lret
sbb
cmp
cli
test
test
xor
gs
int3
sbb
add
mov
xchg
arpl
inc
cli
mov
xor
int3
mov
addl
or
mov
sub
ja
mov
loopne
push
xor
dec
lahf
push
and
jmp
pop
out
sbb
frstor
shlb
shrl
push
xchg
pop
inc
mov
mov
fs
fwait
addl
inc
inc
ja
sub
inc
mov
add
in
call
ljmp
sbb
mov
gs
mov
addb
fwait
mov
push
sbb
mov
xchg
add
push
in
mov
fistps
mov
sti
imul
cmp
dec
adc
mov
out
xor
adc
lock
inc
push
cli
adc
stc
push
jno
mov
sub
pusha
les
or
out
sub
lea
popf
jg
sub
xor
mov
fisubrs
inc
jo
push
lahf
lahf
divb
cmp
cmp
iret
ds
push
xchg
stos
fs
icebp
lds
inc
ss
cmp
pop
stos
in
jle
jecxz
cmp
add
and
fidivl
jmp
test
test
inc
mov
mov
and
sub
aaa
call
push
xchg
inc
cmpsb
adc
ja
icebp
mov
fimull
add
lcall
imul
lret
xchg
bound
repnz
imul
xor
push
sub
add
fistpll
add
pop
sub
stos
dec
lock
cltd
nop
mov
shr
push
sti
sahf
dec
cmp
adc
sbb
sub
popf
jle
or
lock
push
jo
rcrl
imul
inc
mov
adc
loope
fdivr
lods
mov
fstpl
push
popa
lock
pop
dec
sub
xchg
inc
inc
fstpl
les
dec
pushf
popa
and
inc
mov
push
aam
pop
push
mov
lret
outsb
out
imul
loope
pop
pxor
mov
adc
mov
cli
and
push
cs
mov
push
lret
or
lods
mov
and
out
rcll
adc
inc
pop
sarb
add
or
and
movsb
sbb
jb
xlat
adcb
outsb
imul
sbb
js
pop
sub
popa
mov
call
in
xor
mov
push
adc
sbb
sub
pop
test
pop
sbb
popf
rclb
movsb
sbb
js
addl
mov
das
sub
lds
loop
jmp
inc
mov
or
ficomps
aam
jbe
fs
mov
je
jne
out
lds
test
out
pop
mov
das
out
fdivp
sub
test
outsb
enter
cmpsl
repz
call
cs
or
popf
mov
cmpl
jnp
insl
pop
and
push
test
jbe
add
pop
push
sub
outsl
dec
push
cli
sub
sub
outsb
sub
ja
xchg
pushf
adc
jmp
test
cld
mov
xor
sub
loope
cwtl
dec
push
pop
adc
add
add
scas
inc
sahf
cli
adc
cmpsb
pop
pop
or
inc
sub
mov
jl
stc
mov
or
aaa
xor
inc
cmp
cltd
pop
jle
sbb
nop
add
out
inc
cmpsl
sbbl
rorl
or
pop
dec
adc
int3
outsb
push
cwtl
xchg
xlat
dec
jnp
decb
pop
cmp
mov
sarb
mov
fsin
mov
iret
mov
cmpsl
mov
cmp
xchg
and
ss
fwait
clc
mov
testl
bound
xchg
fdivl
adc
das
les
inc
mov
inc
mov
dec
incl
add
dec
fs
daa
scas
les
outsl
mov
xchg
inc
inc
xchg
lret
sbb
imul
test
jg
scas
pop
call
insb
rcr
test
push
mov
repnz
or
fadd
test
mov
pop
out
mov
insl
dec
dec
sub
arpl
scas
test
sahf
adc
cvtps2pi
sbb
lcall
inc
mov
sbb
pop
cmc
roll
pushf
in
sub
cmp
xchg
sbb
jp
jbe
mov
jno
jg
mov
sbb
mulb
cmpsl
pop
lret
and
loopne
stos
shr
xor
scas
sub
xor
insl
movsb
popf
or
adc
mov
dec
int3
or
xchg
sub
fdivrp
scas
scas
cmp
push
addr16
psllq
cmp
or
push
insb
jge
cmp
push
pop
xor
and
stos
inc
push
popf
clc
cld
mov
push
xlat
sbb
mov
out
test
sarb
pop
mov
xorb
mov
sbb
lahf
ss
repnz
dec
iret
xchg
scas
pop
xchg
adc
push
dec
or
mov
fists
lret
addr16
aad
jns
sbb
jp
insl
filds
mov
inc
push
mov
clc
sbb
pop
subl
lods
mov
push
sbb
scas
adc
test
lret
pushf
sub
mov
mov
lea
jge
in
shll
and
mov
dec
push
add
pop
push
dec
inc
xchg
add
mov
and
stc
pop
dec
mov
imul
mov
adc
aad
inc
rcll
dec
push
sub
pop
xor
pushf
lret
and
rcll
cmp
or
and
rolb
sti
insb
cwtl
fiaddl
lds
mov
mov
jo
xchg
mov
fsubs
enter
insl
jmp
mov
pop
xor
movsl
mov
fdiv
popa
fisubrs
mov
mov
xlat
or
mov
jno
mov
cmp
pusha
add
enter
sub
mov
jb
ja
rorb
imul
sti
xlat
js
add
sub
cmp
in
pop
xor
xor
fptan
mov
cmp
jecxz
mov
mov
sbb
inc
xchg
test
mov
insb
das
enter
dec
cmp
mov
stc
ret
xor
push
jnp
push
mov
adcl
popf
mov
push
jbe
push
xchg
or
mov
rorb
ds
xlat
dec
loopne
lea
jns
inc
insb
cwtl
addr16
xlat
rcrl
push
pop
dec
es
enter
fisubrl
shrb
rcl
pop
inc
rcl
xor
mov
es
aad
data16
dec
test
loop
jb
push
imul
xchg
lret
stos
cltd
cmpsb
dec
add
push
push
mov
cmp
xchg
dec
mov
stc
outsb
and
gs
xchg
cmp
movsb
das
outsb
pop
or
xchg
xor
xchg
fwait
pop
add
inc
and
fstpl
push
gs
jns
lods
push
jecxz
aad
jecxz
add
mov
loope
lock
mov
dec
test
movsb
cld
repnz
and
movsb
mov
pop
sub
push
jbe
mov
lods
lods
pop
in
pop
js
xor
mov
sub
fucom
xchg
mov
decb
incl
xchg
xlat
xor
les
pop
das
push
mov
sbb
pushf
adcb
lock
rorb
leave
sub
dec
or
sti
roll
dec
ja
jge
cs
adc
testl
mov
cltd
adc
out
cmpb
pop
mov
mov
inc
inc
mov
inc
stc
dec
or
mov
filds
or
sub
inc
add
push
mov
sahf
stos
mov
sbb
arpl
roll
fs
fadd
xchg
inc
adc
dec
out
mov
push
or
adc
popl
movsl
adc
or
jo
lret
jp
mov
sbb
or
cmp
int
ds
into
stos
hlt
and
jl
sub
ret
add
push
fisttpl
shll
mov
movl
test
jle
dec
sub
imulb
aad
outsl
push
pop
cmpsl
hlt
fimuls
test
aam
push
ja
jle
push
mov
sbb
cwtl
push
inc
js
push
insb
jge
aaa
call
mov
stc
dec
jmp
dec
sub
das
push
mov
mov
adc
clc
dec
adc
outsl
es
inc
and
xchg
push
dec
testb
mov
jecxz
mov
adc
imul
incb
fwait
inc
or
shll
xor
add
subb
mov
push
aam
and
add
fnstcw
inc
in
mov
xchg
leave
into
int3
cwtl
sbb
les
scas
inc
xchg
pop
sbb
jnp
xchg
nop
fwait
xchg
test
mov
push
and
pop
pop
enter
xchg
dec
pushf
dec
sbb
cmp
sbb
ret
sbb
popa
or
xor
xlat
push
imul
cmp
cmpsb
and
adc
cmp
gs
repnz
pusha
testb
cmc
add
mov
push
popa
dec
scas
in
sub
push
cmp
fildl
dec
das
ret
shrb
mov
xchg
scas
inc
outsl
and
jg
mov
xchg
cld
aaa
hlt
and
jbe
cld
push
dec
loope
loope
mov
cld
clc
ret
lret
jo
addr16
xor
fs
ret
insl
inc
push
iret
clc
xchg
dec
cmp
inc
jl
cmp
pop
clc
loope
aam
in
mov
mov
cwtl
in
rcr
mov
pop
cmp
mov
imul
pushf
out
mov
jg
sbb
add
and
fcmovnbe
sbb
xor
xlat
jbe
xchg
mov
jmp
clc
cmovo
test
cmp
das
and
pusha
sbb
in
das
sbb
push
push
or
sub
mov
out
loop
dec
mov
xor
std
inc
push
add
popa
or
xor
push
add
mov
int
int3
sub
add
add
repz
sbb
lcall
mov
xor
mov
jg
das
mov
xchg
test
lret
xor
cmp
loop
xchg
dec
and
mov
pop
mov
add
sub
inc
xchg
fadds
or
popa
insl
mov
xchg
mov
cld
popa
pop
orb
mov
mov
or
enter
nop
out
lcall
loop
call
lret
movsb
insb
std
jne
imulb
mov
dec
sbb
cmpsb
pop
ja
sbb
decb
push
dec
test
insl
idiv
jg
cld
cli
xlat
push
mov
rorb
mov
std
sub
icebp
dec
or
jbe
insb
iret
shll
or
pop
mov
aad
pop
fiadds
outsb
fwait
jp
mov
ljmp
mov
and
dec
mov
jmp
inc
pop
sti
lea
enter
mov
mov
sub
enter
aaa
adc
cmpsb
test
arpl
in
xchg
fisubrs
mov
clc
or
push
lahf
leave
and
out
fnsave
xor
jnp
sahf
xor
cmp
lock
push
sbb
cmp
sub
fsts
xor
pop
add
daa
fisubrs
adc
popa
xor
repz
movsb
dec
mov
pop
xor
arpl
in
into
rol
dec
inc
or
cwtl
push
in
sub
mov
push
xchg
ljmp
and
adc
cmp
and
push
inc
jns
ja
lret
push
icebp
push
imul
mov
cmpsb
not
sub
lods
xor
lods
dec
jae
in
and
jo
mov
adc
das
js
adc
loopne
push
and
stos
push
loop
pop
xor
cwtl
int3
lea
cwtl
nop
xchg
mov
sbb
push
jae
outsl
negl
pop
cmc
sahf
adc
test
pop
pop
push
jl
cmp
mov
ret
inc
test
testl
imul
mov
pop
add
fwait
add
stos
rol
dec
sbb
xchg
pop
inc
pop
pusha
mov
cmp
gs
insb
jno,pt
test
add
mov
hlt
jl
cltd
sub
add
out
iret
mov
leave
adc
sub
jo
xchg
out
cmp
movsb
jle
or
adc
inc
pushw
in
rcrb
xchg
ljmp
push
test
push
call
pop
xlat
jns
adc
ss
push
mov
ss
push
jae
pop
inc
insb
test
jno
push
cmp
push
jg
lahf
mov
popf
mov
dec
push
add
fldcw
adc
mov
ljmp
in
mov
push
xchg
and
mov
inc
sbb
jge
fs
push
lret
fistpl
jecxz
loope
leave
adc
repz
or
bound
jle
mov
add
lcall
cli
mov
int3
fcoml
sbb
loope
addr16
outsb
sub
xchg
cmp
add
pusha
xchg
lea
stc
call
fstps
jbe
and
shrl
shrb
aaa
out
les
mov
cmp
test
dec
pop
xor
add
and
mov
sbb
ljmp
mov
idiv
push
pop
jmp
das
stos
xchg
mov
pop
jae
popa
rolb
xor
sub
fimuls
pop
lcall
mov
xchg
mov
push
enter
push
outsb
popa
loope
add
sub
mov
mov
mov
in
adc
iret
stos
sarl
iret
cmp
dec
and
mov
jne
add
ficomps
sbb
pop
pusha
out
fisttpll
pop
dec
pop
loop
cwtl
jbe
sbb
bound
push
hlt
sbb
addl
jno
add
xchg
lahf
push
into
dec
lret
sub
test
clc
mov
idivl
xorl
pop
mov
ds
cmc
test
loope
scas
xor
pop
daa
stos
sub
mov
stc
loop
sub
push
dec
iret
mov
xchg
adcl
shl
in
push
sbb
shrb
push
ljmp
lea
rcrb
jle
das
in
dec
scas
sarl
adc
loop
lods
mov
imul
bnd
in
sbb
jns
xchg
xchg
imul
dec
inc
bound
out
mov
filds
stos
mov
stos
jns
cli
push
addr16
paddq
jle
lahf
pushf
movsl
push
popa
xchg
cmp
in
xor
outsl
sub
sarb
xor
ret
mov
push
repnz
out
loopne
xchg
push
mov
mov
jmp
cmp
jg
jno
sub
dec
das
or
lods
std
xchg
jmp
inc
xchg
mov
mov
adc
and
cmpsl
dec
icebp
lds
push
xor
sarb
nop
adc
mov
sub
iret
imul
xor
ds
or
cmp
or
cltd
jg
sti
and
add
int3
loope
testl
test
scas
mov
stos
insl
stc
mov
stos
lea
ret
xchg
mov
mov
daa
pop
push
mov
test
jbe
outsb
inc
sub
mov
sub
dec
iret
jg
sbbb
je
xor
mov
insl
xchg
dec
fmul
enter
push
push
ficomps
mov
push
aaa
sahf
out
fisubl
es
int3
in
mov
cld
cmp
incb
jmp
sti
pop
les
and
fdivrs
sub
jae
push
adc
inc
popa
je
imul
sahf
iret
and
hlt
mov
mov
inc
sub
lahf
and
out
xchg
dec
xor
jecxz
push
in
ficoms
push
pop
adc
lcall
loop
xchg
push
xchg
nop
repz
sub
cltd
add
xor
je
insl
cmp
pusha
movsl
scas
rcrl
rorl
mov
jmp
adc
movsb
shll
cmpsl
xchg
add
and
and
add
cmp
xchg
or
daa
push
inc
xor
movsl
xor
out
dec
mov
push
subl
ljmp
jmp
das
addl
xor
jge
cmp
leave
mov
xchg
pop
fistps
scas
cmp
inc
rclb
icebp
xor
xchg
dec
jp
mulb
and
push
mov
mov
or
std
sahf
ss
pusha
jecxz
leave
xor
xchg
mov
les
arpl
addr16
mov
hlt
jmp
cld
scas
xchg
mov
pop
stos
hlt
jg
fimuls
in
dec
add
push
sub
or
mov
arpl
test
insl
fsts
adc
test
bound
pusha
js
repnz
xchg
jbe
dec
mov
shrl
imul
out
dec
pusha
iret
pop
mov
push
lods
dec
daa
and
fdivrs
mov
or
pop
add
sbb
out
lods
pop
cld
dec
notl
mov
xchg
jle
sub
dec
or
in
mov
cmc
je
icebp
lock
xchg
cld
out
out
jmp
or
push
shl
movsl
pop
cmp
inc
jnp
mov
js
lret
call
daa
jecxz
out
mov
xor
mov
adc
xchg
push
add
jo
leave
xchg
cmp
cmpsb
iret
push
mov
pusha
ret
push
sbb
popf
push
mov
sti
jmp
jmp
pushf
sub
inc
cld
cmp
loop
stos
sub
gs
xor
sub
lock
mov
ljmp
repnz
test
insb
mov
and
or
cmpsb
mov
xchg
inc
add
cli
std
stc
pop
fisttps
xor
sbb
dec
jmp
xor
js
sub
shr
std
je
jle
fwait
sub
mov
daa
js
mov
mov
ljmp
add
mov
adc
sub
mov
mov
adc
mov
fadds
push
inc
jb
pusha
push
pop
pop
shrl
sbb
jle
add
repnz
xchg
aaa
orl
dec
xchg
rcr
mov
sbb
sbb
insl
mov
aad
jae
sti
add
cmp
sub
push
rcrb
jne
int3
ljmp
push
or
and
inc
subb
sbb
int
mov
inc
test
shll
repnz
imul
loopne
cmp
pop
popa
adc
sub
test
mov
rcrb
push
das
addb
and
mov
insl
xor
mov
mov
mov
shlb
sub
test
lcall
fpatan
popa
inc
jbe
cmp
jb
pop
push
fstpt
xchg
push
shl
mov
ficompl
add
ret
lds
rclb
aad
fs
dec
xchg
xchg
out
lcall
cmpsl
push
push
push
fidivrs
jp
test
icebp
popf
dec
jnp
xchg
add
jge
cmp
add
push
cwtl
mov
in
addr16
sahf
fidivrs
out
jne
push
ja
iret
cmp
push
subb
and
inc
sbb
cmpsb
pop
leave
jnp
cmpsb
mov
adc
sbbl
jns
push
mov
mov
or
sub
aad
pop
jp
jle
jb
dec
dec
movsl
add
cld
test
cli
jae
jns
out
lret
mov
adc
je
lock
sub
jnp
pop
pushf
lea
and
out
dec
cmp
imul
xchg
sarb
imul
add
aas
xor
cmpsl
mov
xchg
add
ja
popa
ror
xchg
pop
adc
xor
lods
js
lcall
repz
dec
idivb
int
insb
push
xor
bound
mov
jp
aad
sub
cs
mov
leave
mov
lods
insb
mov
adc
push
adc
xchg
cs
jle
xor
jae
pop
sbbb
scas
shrb
in
gs
in
push
sbb
jmp
cmp
arpl
mov
mov
popf
bound
push
or
jo
imul
xchg
gs
mov
imul
dec
int
mov
cmc
mov
push
test
cmp
mov
or
push
adc
pop
out
repnz
aam
sbb
and
fs
mov
fldl
mov
pop
cs
negl
nop
int
adc
int3
movsb
push
mov
testl
cmp
adc
lods
imul
rclb
mov
jb
cwtl
pop
push
les
jmp
jmp
cmp
xchg
pop
lock
adc
xchg
cmpsl
adc
mov
jo
sbb
mov
and
inc
sbb
cmp
aaa
dec
mov
fisubrs
xchg
cmp
jge
pop
xchg
pop
push
xor
into
jge
xchg
pop
mov
dec
jmp
mov
dec
js
pop
cltd
fs
sbb
movsb
mov
mov
jle
fisttpl
fidivl
dec
aas
fstpt
pop
jae
lock
lret
cmp
dec
jae
loopne
jmp
mov
insl
push
xchg
adc
adc
int3
in
push
popf
sub
add
inc
pusha
push
jns
sub
mov
lcall
sti
repz
push
jg
imul
mov
fiadds
xor
dec
fistl
ret
push
cmp
rorl
mov
xchg
pop
dec
mov
cmpl
sarl
aad
mov
push
add
out
xor
pop
inc
inc
sub
in
xor
clc
data16
jg
mov
out
in
xor
aaa
add
mov
push
push
jne
pusha
jl
jecxz
mov
jne
ja
aaa
mov
inc
xchg
leave
pop
ds
lods
or
arpl
cmp
push
imul
lret
lret
push
xchg
inc
repnz
cli
xor
jl
mov
xor
push
outsb
push
bound
pusha
lods
push
rolb
popf
sahf
push
pusha
xlat
mov
sub
subl
mov
stos
sbb
aam
and
es
sbb
inc
push
in
rcrb
ljmp
xchg
mov
sbb
jae
push
repnz
adc
imul
or
mov
mov
mov
out
mov
pop
call
sub
and
aam
jne
pop
add
repz
test
cmp
cmpsl
xchg
xor
inc
mov
dec
fwait
add
jnp
fiaddl
pop
mov
sub
test
lock
add
sbb
mov
adc
idivl
adc
pop
fisubl
pop
mov
negb
pop
inc
adc
lods
out
xor
inc
xor
push
xchg
scas
and
icebp
sub
xorb
push
xor
and
std
lea
add
popa
out
leave
int
push
lret
xor
add
je
loop
hlt
push
ja
jge
inc
cmp
or
shll
rorb
leave
lahf
inc
sub
xchg
insb
cmp
xchg
jmp
push
mov
xor
dec
dec
scas
shrb
xchg
adc
adc
push
outsb
pop
lea
out
and
sbb
mov
or
mov
xchg
lods
in
sbbb
or
adc
popf
fwait
jae
cmp
mov
repz
jae
test
cmp
pop
in
fistl
sbb
adc
mov
sbb
sbb
mov
xor
ror
inc
dec
ret
je
pop
and
dec
loop
pop
int
pop
ss
sub
mov
scas
pop
or
pop
mov
out
out
sti
push
imul
cmpsb
in
pop
pop
adc
loope
pushf
push
addr16
addl
clc
lfs
sbb
loopne
push
shl
insl
mov
stc
in
cs
inc
insb
bound
data16
cmp
inc
pop
push
mov
cs
adc
sahf
mov
insl
aas
loope
into
or
icebp
lret
sub
shll
jle
test
xor
lcall
xchg
mov
ret
out
in
xchg
fcomps
mov
mov
lea
xchg
and
lock
scas
mov
dec
and
pushl
pop
fbld
cmp
ret
jne
dec
xor
outsl
imul
daa
out
push
and
or
inc
sbb
inc
repnz
mov
repnz
jle
mov
mov
xchg
aam
mov
and
icebp
rcrb
cwtl
mov
rcrl
sbb
fcoml
inc
mov
aad
imul
xlat
push
mov
xchg
fmuls
in
xor
sbb
sbb
pop
popf
jbe
push
mov
fldl
mov
cmpsl
cmc
jmp
add
dec
and
mov
mov
jmp
jge
jb
push
int3
push
or
mov
mov
ficompl
outsb
in
dec
mov
pop
incl
mov
add
lret
das
mov
bnd
into
fucom
fsubs
add
unpckhps
movsl
xchg
daa
cmp
push
dec
adc
out
push
sti
jns
and
cmc
outsb
push
jp
xchg
rolb
dec
push
rcrb
icebp
js
and
fnstenv
popa
popf
lods
sub
jp
push
cmp
sbb
jge
push
or
loop
mov
xchg
adc
cmp
xchg
inc
cmp
shlb
inc
mov
loopne
xchg
dec
ja
call
inc
inc
mov
add
leave
dec
aad
push
pop
fwait
std
shll
jnp
popf
push
adc
mov
mov
cmp
inc
sbb
aas
cmp
orl
xchg
and
stc
int
mov
sbb
js
mov
out
fcoms
stc
xor
ss
lods
popa
push
cmp
shl
mov
xchg
mov
test
data16
cmp
lahf
xor
pop
add
jmp
scas
mov
sub
xchg
cmp
dec
vpsllq
jl
xor
cmc
pushf
movsl
in
stos
into
negl
sbb
clc
add
jnp
sub
cmp
jge
fs
outsb
iret
jae
in
adc
push
rorb
sahf
lret
lods
daa
pop
lcall
lcall
mov
roll
and
and
cmp
cld
ljmp
or
dec
mov
lahf
enter
xor
lret
ljmp
dec
in
shrb
xchg
xchg
cmp
xor
iret
sbb
lcall
loop
popf
jbe
stos
cltd
push
lock
lea
mov
jne
pop
into
bound
pop
fisttps
xchg
jmp
ficompl
clc
mov
lcall
scas
pop
mov
jbe
sub
stc
adc
sub
adc
mov
or
lds
adc
push
pop
stos
sub
sbbb
cmc
inc
lcall
mov
orb
add
movsl
mov
pop
and
loop
lahf
roll
xlat
or
into
jnp
pushl
ja
fmuls
add
and
data16
mov
mov
test
clc
mov
loope
jae
subb
lea
imul
popf
test
mov
add
incb
fs
aam
fmull
push
aas
dec
and
nop
push
pop
shl
ffreep
adc
or
clc
fwait
mov
ljmp
mov
xor
push
jo
loopne
xchg
mov
jne
push
imul
icebp
mov
sahf
ret
jbe
cmp
jo
les
inc
loopne
ss
bound
mov
jmp
mov
inc
aas
sbb
ret
and
mov
in
fwait
sbb
pop
andl
jge
and
add
sub
nop
iret
fcomp
icebp
push
pop
es
adc
bound
fmull
fwait
jge
data16
fisubrs
jge
mov
nop
adc
adc
sbb
scas
sub
mov
dec
clc
lcall
adc
repz
ficoms
jno
cmp
testl
or
inc
test
cli
icebp
or
sub
sbb
arpl
call
push
test
in
data16
jns
or
jb
imul
cwtl
loop
adc
pop
jg
int3
stc
push
sbb
notl
adc
jbe
mov
mov
or
xor
xchg
cmc
mov
mov
cmc
add
add
lahf
dec
inc
add
rcl
jle
dec
mov
loopne
jbe
jp
and
jmp
test
aaa
test
and
fisubrl
out
mov
rcl
jnp
dec
insl
inc
cmp
pop
int
jle
inc
adc
xchg
xchg
mov
bound
in
dec
icebp
or
xor
add
mov
adc
xor
inc
xor
cld
mov
push
daa
fcoms
dec
cmp
cwtl
lods
out
cmp
loope
js
jge
shlb
int3
fmull
fdivrs
repnz
add
inc
pop
in
push
mov
aad
nop/reserved
aad
inc
pop
jle
push
mov
push
shl
sbb
in
leave
loope
cwtl
adc
xchg
xchg
push
xor
icebp
mov
divb
je
add
outsl
jg
mov
das
divl
js
adcb
add
leave
js
mov
xor
imul
out
in
push
cmc
push
fisubl
push
enter
ret
outsb
mov
xor
lds
outsl
test
xchg
out
sbb
pop
mov
add
js
addr16
jmp
sbb
mov
out
cmp
pop
push
sub
push
sub
inc
sahf
push
dec
jle
cmpsl
add
roll
out
xchg
loop
lcall
shrb
inc
insl
sub
xor
addr16
adc
test
loope
fiadds
cmp
mov
xor
aad
mov
mov
lret
mov
test
cmp
sbbb
push
sbb
and
repz
arpl
test
lods
fst
loop
inc
ja
sub
call
xchg
mov
sti
bound
addps
sti
cwtl
lds
rcll
sti
xchg
fwait
in
push
loopne
mov
jmp
imul
pop
mov
call
push
sti
jl
pop
cli
xor
pop
icebp
andl
stos
pop
out
push
insl
loop
lret
inc
stos
xchg
repz
inc
jo
loopne
ret
sbb
ss
pop
push
jne
mov
std
decl
sub
lcall
mov
div
out
sub
cmp
stc
pop
adc
mov
jne
lods
scas
cs
sub
test
leave
jp
test
leave
cmp
aas
or
push
in
ja
sub
aas
cmpsl
aad
fwait
xlat
fnstenv
and
das
dec
jecxz
xchg
xor
jge
push
add
and
dec
aaa
lcall
scas
pusha
push
aam
int3
sub
das
nop
imul
inc
jne
xchg
sbb
mov
sbb
and
jge
mov
pop
lea
dec
lea
xlat
cli
mov
jae
add
mov
hlt
sbb
bound
nop
or
push
jo
mov
add
popa
or
jno
mov
imul
sub
push
jp
sbb
mov
add
mov
les
jmp
or
or
dec
cmp
rorl
mov
sub
mov
mov
mov
mov
mov
inc
rep
test
mov
mov
js
fs
pop
ffree
jns
test
aaa
leave
std
out
pop
outsb
and
xor
push
fdivrl
js
in
into
fistl
push
jo
push
xlat
jp
movsb
inc
roll
aad
dec
aaa
sbb
aad
stos
sub
inc
cmpsb
out
cld
ret
inc
cmpsl
push
jge
push
mov
sub
adc
adc
pop
jge
sbb
repz
or
in
mov
out
mov
mov
fwait
adc
enter
dec
mov
push
cs
pop
cmp
cmc
jecxz
imul
push
int3
jb
clc
sbb
mov
push
add
jnp
mov
ret
inc
imul
mov
rorb
adc
cmp
fcomi
popf
les
jb
pop
lock
jmp
sbb
or
push
pop
mov
adc
xor
iret
insb
lret
jae
push
ja
inc
sub
lret
xor
sub
test
cld
incb
pop
nop
stc
les
xlat
adc
jbe
sbb
or
or
dec
nop
push
notl
adc
xchg
xor
sbb
inc
cmp
mov
sub
mov
push
out
jecxz
xor
in
xor
jmp
notb
and
loopne
or
pusha
mov
or
xor
fisttps
pop
adc
xor
push
cltd
into
popl
mov
adc
adc
movsb
push
dec
and
lods
sub
rolb
pop
mov
sub
fdivr
xchg
shr
and
movsl
and
daa
cs
push
ret
gs
negb
xchg
dec
lds
dec
push
inc
arpl
pop
call
std
les
sub
dec
jl
lret
jecxz
int
pop
rorl
adcl
pop
pushl
mov
icebp
cmp
clc
pop
pop
ret
loopne
pop
lret
jp
insl
lea
aas
mov
jge
push
jg
loope
in
out
jbe
cwtl
dec
cmpsl
add
add
inc
shll
cmpb
popa
jo
movsl
icebp
dec
das
mov
adc
lret
fs
loope
cltd
stc
arpl
addr16
xor
movsl
and
dec
xorl
xchg
adc
xor
insl
in
pop
push
fstps
mov
stc
inc
or
mov
fbld
lret
jno
mov
jg
inc
popa
outsl
icebp
cmp
sub
pop
jmp
mov
fldenv
push
ss
arpl
and
fisubrl
fchs
xchg
jb
pop
jl
repz
xor
cmp
rcrl
push
add
pop
arpl
push
cmp
dec
js
xchg
data16
sti
push
mov
jecxz
mov
xor
or
jno
lea
incl
roll
pop
inc
xlat
add
push
incl
push
in
sbb
les
mov
push
and
sub
cmpb
inc
in
data16
nop
leave
sbb
repnz
stc
and
or
test
imul
call
movsb
call
sub
movsb
cmp
rcr
enter
jae
sahf
mov
das
cmpsl
and
movsl
scas
dec
leave
or
dec
lahf
push
int
push
lock
clc
adc
mov
je
mov
jnp
lret
push
push
out
aam
scas
int
cmpsl
test
lds
push
out
cwtl
pop
xchg
mov
and
fsub
mov
jb
dec
pushf
imull
adc
push
int
add
add
gs
test
push
push
add
outsl
mov
sub
sbb
push
nop
mov
adc
adc
dec
cmp
into
mov
push
jp
ffreep
cli
xor
test
sbb
rclb
andb
push
in
shlb
xchg
dec
mov
mov
out
cmp
lea
aam
out
ret
sbb
jg
cmp
jle
pop
iret
mov
outsb
repnz
fnstcw
stc
sbb
fstps
jg
adc
cmp
lcall
and
fidivs
mov
mov
jp
lds
xor
jns
or
xchg
incb
addb
jmp
iret
test
lds
cltd
dec
push
cmp
stos
or
rolb
or
shll
or
or
xchg
pop
xchg
cwtl
imul
out
push
mov
pop
in
mov
fcomps
mov
mov
inc
dec
mov
push
xor
inc
loop
or
out
fistpl
mov
adc
jge
in
loop
std
daa
mov
push
or
mov
fldt
cmpsb
aad
iret
dec
pop
imul
lret
sub
sbb
dec
ret
es
mov
rol
ja
sti
mov
rorb
mov
pop
stc
addr16
cmp
push
push
jb
push
mov
lret
mov
stos
scas
add
movsl
pop
test
cmp
out
adc
inc
into
call
in
inc
push
les
aas
inc
xor
repnz
aad
push
orb
cmp
out
lods
sbb
pusha
mov
pop
ror
imul
cmc
sub
fsubl
pop
addr16
in
mov
xor
push
lcall
mov
imul
js
stos
inc
outsl
loop
lret
mov
cmp
es
fdivs
pop
in
movsl
in
fimull
orl
mov
call
and
dec
pop
fbstp
dec
rorl
xlat
icebp
out
sub
jno
in
cwtl
jno
sub
dec
js
or
jnp
imul
fimull
imul
sbb
mov
inc
sub
pop
mov
pushf
mov
and
scas
xor
bound
dec
movsl
ss
test
or
andl
or
xchg
adc
xchg
mov
adc
test
into
xor
enter
cmp
xor
fisubl
xor
and
xchg
jmp
outsl
mov
add
add
jecxz
fistpl
int
shlb
into
lock
negl
push
js
fs
or
out
inc
les
cmp
xor
aaa
xchg
jb
or
xchg
movsl
mov
cmp
add
iret
add
mov
inc
inc
xor
mov
mov
inc
jbe
pop
arpl
mov
aad
xchg
add
popa
mov
sub
adc
sub
add
in
push
rol
pop
pop
out
das
pop
int
jl
mov
push
stos
lcall
sar
lret
js
xchg
out
test
out
push
sbb
adc
push
out
dec
xor
neg
cmpsb
loopne
push
xor
pop
xchg
cltd
lock
pmuludq
sahf
jge
data16
xchg
mov
mov
cltd
repnz
js
adc
test
pop
mov
pop
push
test
xlat
out
mov
sub
pop
mov
pop
sbb
add
jmp
iret
jbe
mov
push
std
data16
ud2
adc
mov
je
jo
loope
mov
pop
sbb
lahf
mov
inc
pop
dec
pop
fadds
repnz
push
push
xor
sub
adc
mov
movsl
inc
and
or
mov
inc
in
pop
xlat
mov
or
or
rolb
and
addr16
dec
or
ret
aas
and
fdivrl
ret
cmc
lcall
into
mov
sub
xchg
add
arpl
jo
test
inc
ja
aaa
or
pusha
ss
fdivs
push
outsl
movsb
jp
lahf
mov
add
sub
jns
mov
int3
xchg
xchg
jle
pop
icebp
sarb
iret
add
rorl
sbb
ljmp
mov
mov
fldt
sub
jecxz
jge
insl
rcr
adc
pusha
push
dec
cmp
fstpt
and
or
sub
mov
into
sbb
ds
je
push
setns
pop
lret
mov
fsubrs
cmp
dec
inc
aaa
insb
rolb
mov
bound
scas
das
adc
and
inc
pushf
es
sbb
jno
mov
in
cs
in
lock
add
lds
in
addr16
cmp
jle
loope
insl
cltd
jo
rcr
xchg
std
in
xor
add
sub
jle
xchg
das
ds
imulb
sub
pop
fwait
dec
sub
cmp
lret
jnp
jmp
scas
jne
les
and
movsl
test
data16
sti
cmove
pop
xchg
das
outsl
xor
add
jmp
sti
std
xor
pop
scas
add
jge
rcrb
rol
outsl
xor
cmp
and
fucomi
jp
cmp
mov
mov
rorb
mov
mov
pop
fiaddl
cs
outsb
stos
ret
pop
xor
inc
movsl
clc
and
loop
inc
pop
icebp
xor
xor
stos
stos
shlb
add
test
mov
sub
push
xchg
or
mov
out
lret
xchg
mov
push
and
sbb
and
je
fmuls
test
outsb
jl
fimull
addr16
shlb
add
and
test
inc
sub
dec
dec
iret
test
push
fsubr
and
mov
sbb
mov
sbb
or
cltd
push
mov
movl
xchg
xchg
xor
pop
arpl
sbb
or
orb
fildl
dec
xchg
jp
ret
pusha
outsb
repz
lea
gs
js
imul
dec
pop
cmp
enter
scas
ds
fdivs
leave
fimull
paddsb
xor
mov
ret
lret
mulb
jmp
aad
movsb
sbb
outsb
sbb
pop
mov
adc
cmp
mov
sahf
cmp
adc
test
inc
ret
insb
std
sub
mov
cmp
and
adc
jge
dec
test
inc
add
push
insb
sub
fnstcw
xor
jb
ret
sbb
adc
inc
adc
jecxz
nopl
arpl
pop
std
xor
out
push
push
jmp
imul
sub
dec
pop
or
scas
lret
dec
popf
sbb
lock
bound
xchg
pop
mov
jbe
dec
and
lret
cltd
xchg
and
in
ds
mov
jl
mov
xchg
jle
cmpsl
setnp
xchg
add
cmpsb
rcrl
xor
jmp
lods
sti
dec
xchg
sarb
mov
inc
xchg
or
subb
mov
adc
stc
cs
out
es
popl
ret
out
sbb
dec
dec
push
cmp
test
and
inc
jbe
or
and
repnz
and
add
xor
dec
stos
cmp
cli
sbb
jl
sti
adc
movsb
lods
push
jae
mov
xchg
insl
ja
ret
mov
mov
jle
inc
stc
dec
pop
cld
adc
sbb
rolb
shlb
out
scas
std
pop
lcall
add
aaa
lcall
cli
mov
int
xchg
sbb
sub
mov
mov
jbe
stos
pop
cmp
fnsave
mov
and
je
out
xchg
add
repz
push
dec
out
popf
pop
pop
mov
sub
hlt
fldenv
and
and
jmp
mov
andb
test
fildll
dec
fldl
cmp
pop
or
incb
adc
in
cli
stos
ljmp
sub
cmpsb
dec
sbb
das
and
cmp
ss
ret
dec
cmp
cltd
insb
dec
jmp
pop
jne
popa
int3
rol
shlb
mov
mov
imul
stc
dec
jl
insl
scas
scas
pop
sbb
lea
push
cld
cmp
xchg
in
and
xor
es
mov
mov
out
call
cmp
fmul
test
or
and
test
popf
pop
inc
mov
and
icebp
mov
xor
iret
xlat
lret
test
je
fstpt
sbbl
jle
mov
add
je
leave
push
sbb
pop
pusha
out
movsl
sbb
xor
lds
ljmp
imul
sbb
push
lods
jb
or
cmp
data16
add
mov
arpl
push
imul
cmp
pop
pop
push
sbb
nop
lea
aas
shl
pop
cmpsb
pop
cmpsb
movsb
jbe
aam
lcall
aaa
add
push
inc
stc
cmp
test
ja
clc
inc
stos
adcl
xorb
xorb
cli
addr16
xchg
jo
push
xchg
ds
out
adc
gs
les
or
in
jb
sub
xor
fcoml
mov
mov
test
xor
mov
call
dec
leave
mov
cmpb
mov
mov
mov
adc
and
outsb
aas
push
fs
cmp
pop
sub
push
sub
in
or
mov
mov
data16
fcompl
jge
pop
test
ret
enter
mov
fisttpl
jne
mov
faddl
daa
repnz
ljmp
cmp
dec
dec
push
into
pop
loopne
inc
movsb
ds
fmul
test
call
push
pop
aad
mov
and
test
lahf
adc
xor
adc
fsubl
push
xchg
cwtl
sbb
inc
int3
push
adc
into
dec
mov
ds
push
jl
mov
mov
loop
fwait
in
les
or
jb
orl
add
cmpsl
inc
inc
xor
fldt
push
je
push
insl
jl
es
xlat
cmpsl
out
mov
lahf
jns
xor
outsb
push
das
call
neg
mov
ja
xor
xchg
push
cli
pushf
xor
dec
add
addb
add
mov
outsb
cs
mov
call
jmp
ds
mov
imul
adc
sbb
mov
adc
mov
dec
enter
cmp
inc
insb
frstor
lods
xor
mov
or
int
push
sub
adc
aam
and
pop
push
mov
lret
cmp
inc
add
xor
cld
add
ds
into
lret
aaa
push
and
adc
mov
mov
add
mov
lcall
cltd
add
sarb
cmp
jne
mov
adc
aad
adc
jp
shl
jmp
inc
jo
loopne
pop
jle
shlb
xchg
int3
sub
insl
adc
out
mov
or
rcrl
fcmovnbe
push
fs
fadd
imul
leave
lds
inc
dec
cmp
adc
pop
push
inc
imulb
in
add
loope
sbb
mov
loope
dec
sub
mov
int
xor
or
adc
or
xor
clc
jecxz
xchg
orl
pop
dec
mov
cmpsb
out
xchg
dec
lcall
imul
pop
sbb
cmp
adc
xchg
cld
ret
jns
ja
jmp
adc
in
cmp
sbb
imul
jge
push
push
int
add
js
mov
sub
pusha
jns
imul
test
ret
sub
ljmp
jle
push
imul
clc
mov
add
xor
in
mov
test
out
into
adc
push
rolb
ret
dec
add
cmp
inc
sub
rorb
pusha
sub
mov
imulb
popf
adc
push
cmp
fs
cwtl
jno
sbb
add
mov
shll
in
gs
jnp
dec
or
dec
mov
sub
dec
imul
es
add
fcompl
js
push
cltd
in
jo
cmpsb
into
mov
cmp
ljmp
mov
mov
movsl
adc
ret
jl
stos
mov
xorb
xchg
mov
or
cmp
mov
cwtl
jecxz
int
int
mov
sahf
cmp
movsb
sahf
pop
adcb
and
inc
jnp
dec
and
push
cmp
push
add
arpl
push
repnz
fldcw
in
cmp
adc
xchg
ret
xchg
cmpb
fldenv
adc
lods
push
in
rcl
push
xor
inc
lret
pop
xor
push
xlat
leave
adc
loope
bound
sbb
jmp
push
icebp
insb
or
add
or
ds
mov
int3
ds
andb
adc
and
push
sbb
das
adc
icebp
xor
movsl
pop
mov
jge
push
inc
je
daa
test
scas
add
jno
dec
stos
dec
outsl
jecxz
sub
repz
aas
dec
cmp
lods
call
imul
iret
jp
jmp
sbb
cmp
push
repz
mov
push
or
pushf
insl
mov
decl
or
xlat
jmp
out
sub
adc
xchg
les
popf
loop
mov
les
filds
pop
das
insb
cld
push
pop
mov
xor
pop
loopne
pop
stc
enter
jecxz
out
sbb
lods
cli
fs
popw
ffree
push
xor
notb
mov
jmp
jo
add
stc
ljmp
lds
sbb
jno
lock
out
hlt
mov
pop
jb
push
shlb
jmp
sbb
lods
lods
dec
xor
dec
mov
mov
arpl
cwtl
sub
aaa
jo
in
lods
or
lret
jae
add
pop
inc
xor
and
xchg
xlat
sbb
popf
xchg
mov
push
data16
jp
andl
scas
bound
adc
popf
dec
xchg
pop
sbb
xor
rorl
stos
inc
les
lds
push
inc
fwait
mov
sub
inc
and
pop
xor
mov
cmp
push
gs
shlb
je
sub
in
mov
lods
repz
mov
mov
lret
add
pop
or
dec
or
iret
add
hlt
test
addr16
dec
or
es
in
popf
leave
inc
jne
lret
or
imul
mov
add
call
dec
iret
ss
out
push
fs
vhaddps
and
mov
cld
pop
mov
adc
mov
cmp
stc
pusha
scas
popf
das
push
cmpsb
xchg
or
imull
adc
mov
xchg
sub
into
jl
push
xchg
mov
adc
cld
dec
ror
jb
sub
jl
call
cmp
xorb
fdivr
or
in
fldt
dec
xchg
loopne
sbb
or
imul
call
jecxz
int
iret
ja
mov
imul
jns
xor
lds
daa
dec
xchg
xlat
stos
bound
pop
fwait
std
push
ret
adc
ret
jecxz
aad
shl
jmp
aaa
inc
dec
jne
test
shrl
jnp
lock
aad
int3
xchg
inc
hlt
inc
outsl
mov
jno
mov
xorl
lock
and
lret
scas
jne
lret
test
lods
decb
cli
aad
daa
xor
cmpb
aas
pusha
jl
mov
and
sti
mov
gs
jl
xor
add
loope
mov
dec
mov
lcall
jae
xchg
mov
cmp
push
jecxz
jl
popf
test
mov
ds
int3
gs
xchg
xchg
pop
shll
aaa
fcomps
xor
cmp
or
or
add
xchg
pop
pop
enter
scas
jb
fwait
jnp
mov
xchg
mov
into
in
adc
lahf
int3
shll
lea
sub
popa
test
es
popa
mov
push
dec
rcll
sbb
ds
or
test
leave
push
sbb
les
pop
cmp
cmpsb
pusha
sub
xchg
jge
cs
add
loopne
repz
cmp
int3
in
and
cmp
push
jae
movsl
lahf
cmp
dec
dec
add
aas
leave
mov
mov
aad
test
jne
clc
fimull
and
xor
dec
dec
jne
lods
notl
fistps
call
leave
and
jnp
push
dec
mov
leave
jmp
hlt
cmp
outsl
adc
je
xchg
dec
cmpsb
dec
mov
xor
imul
pusha
push
xchg
repnz
and
sahf
and
in
lods
mov
test
dec
imul
aaa
arpl
movsb
cs
xor
sarl
mov
js
mov
movsb
jnp
inc
dec
iret
jbe
rolb
push
and
or
jbe
out
mov
dec
addr16
sbb
loope
leave
pop
xor
fwait
stos
ljmp
cmp
mov
out
int
mov
mov
pop
adc
adc
jae
and
mov
sub
adc
fcomps
faddl
adc
cmp
lret
sbb
arpl
add
dec
sbb
and
imul
mov
lods
push
stos
iret
xchg
in
xchg
xchg
pop
int3
cmp
push
mov
inc
dec
or
call
fmulp
inc
push
xchg
cmp
inc
sub
fnstcw
cmp
loope
cmpsl
or
or
sbb
push
out
aaa
test
add
dec
add
adc
pusha
in
sub
push
sbb
sub
popf
ljmp
repz
insl
cmpsb
test
lea
test
lock
and
push
mov
xchg
loope
jne
bound
sbb
sbb
inc
xor
jne
mov
adc
scas
xor
dec
in
jcxz
je
pop
js
cmp
and
mov
sahf
out
mov
fcoms
lds
repnz
fistl
xchg
aad
push
add
fstps
jge
aad
dec
fwait
imul
cmp
es
cmp
jg
push
jp
jle
ret
lcall
movsl
cmp
std
shlb
jno
insl
orb
imul
iret
sbb
out
sub
enter
nop
aas
out
aaa
iret
and
repnz
mov
push
jp
and
in
pop
jp
adc
sbb
aas
ja
pop
cmp
add
ja
cwtl
mov
aam
cli
push
pop
ret
sbb
jmp
popf
lock
lcall
jo
je
add
or
mov
inc
cmpsb
pop
jmp
fs
inc
and
lea
push
cmp
pop
sbb
in
aaa
fdivrs
shlb
cs
je
popa
out
fldl
fdivrp
push
cmc
fsubl
xchg
es
fs
cmp
arpl
or
dec
insl
ljmp
push
mov
cmp
jno
add
xor
out
lock
xchg
adc
sarl
inc
bound
std
popf
push
scas
xor
xchg
lcall
movsb
mov
cmpsl
xor
cmpsl
push
movsb
outsb
jbe
jge
lods
outsb
cmp
movsl
call
cld
mov
test
test
movsl
mov
fdivl
mov
loop
xchg
mov
adc
mov
add
cmp
add
cmp
lret
push
mov
add
xor
cmpsl
add
cmpsb
dec
push
mov
movsl
inc
or
aaa
cmpb
pop
pop
stos
test
lods
arpl
fimuls
cld
in
rcll
sbb
sub
adc
js
sub
addr16
mov
mov
cmp
push
inc
lahf
dec
jecxz
xchg
jmp
push
lods
fwait
dec
or
sahf
js
repnz
pop
xor
scas
mov
mov
out
inc
jne
adc
call
mov
cmpsl
outsb
jp
jmp
ja
rorb
aaa
push
jbe
lds
jp
jl
pop
lds
add
lea
lock
ds
xchg
jle
jmp
pop
pop
arpl
in
push
outsl
cwtl
sahf
fmul
lds
popa
in
ss
inc
pop
xchg
jae
mov
push
lret
js
and
cltd
out
mov
or
or
sbb
int3
push
xchg
sub
mov
cmp
popa
dec
leave
jo
mov
pop
loop
in
adc
addr16
xchg
das
mov
loop
divl
xchg
into
jp
adc
sahf
mov
aad
in
test
or
or
jbe
out
mov
idivl
lcall
icebp
imul
sub
out
mov
xor
jl
shrb
pop
cwtl
mov
push
push
ud1
cmp
lods
test
je
add
lcall
repnz
dec
push
mov
pop
movsb
sub
icebp
lock
std
or
fsubrs
sub
dec
push
sub
and
repz
andb
es
arpl
stos
pop
dec
fldl
mov
cli
scas
test
push
add
mov
ja
je
icebp
mov
push
mov
dec
inc
mov
test
dec
and
adc
and
xor
adc
push
or
call
clc
into
ja
sub
mov
cmp
fs
rorl
rclb
xor
mov
mov
mov
in
je
pop
pop
add
repnz
adc
lock
xchg
inc
and
daa
dec
dec
pop
test
aaa
loopne
scas
xor
dec
push
scas
rolb
int3
sbb
and
fmuls
nop
push
adc
xchg
jo
repnz
loop
shl
and
fcomps
push
out
aaa
mov
xor
ljmp
mov
loope
jecxz
mov
fstpt
or
pop
push
jae
mov
jno
aam
jge
mov
pop
imul
icebp
jbe
stos
mov
pop
lock
bound
in
repnz
pushf
out
xchg
or
call
xchg
add
cwtl
mov
push
pop
out
mov
fstl
mov
sarl
imulb
das
push
fabs
inc
mov
inc
and
daa
cld
in
dec
adc
jne
adc
add
xor
rolb
mov
or
xchg
or
add
sbb
cmpsb
push
sub
pop
xchg
inc
xchg
jae
in
jmp
push
cmpsb
stc
ds
inc
out
je
loop
insb
out
rol
loopne
repnz
fnstcw
in
cmpsb
push
test
negl
ss
cmpsb
xchg
add
mov
dec
jecxz
in
mov
or
aad
or
fsts
inc
fwait
cs
cmp
xchg
sbb
mov
sbb
lock
imul
dec
and
enter
sahf
mov
or
daa
push
mov
pop
push
jl
clc
out
js
mov
loop
test
lret
lea
cmpsb
jge
mov
fstl
roll
les
sub
jb
and
push
pop
inc
mov
push
jge
loopne
cmp
mov
inc
imul
daa
lcall
imul
xor
pop
sbb
xor
decl
inc
and
pop
jno
mov
stos
or
out
hlt
inc
mov
cmpl
pop
pop
cmp
inc
mov
sub
add
and
and
mov
dec
sub
cmp
xor
inc
rcl
scas
shll
sbb
or
pusha
idivl
lahf
loop
lret
pop
dec
push
shr
cmp
sub
and
adc
sub
movsb
xchg
or
mov
ja
fcomps
sbb
shrb
das
adc
inc
dec
int3
test
cld
or
sbb
outsb
mov
filds
sbb
add
sub
aas
cmp
test
mov
inc
ret
cmp
outsl
sbb
stos
shlb
jnp
xor
aad
xor
sbb
cmp
xor
test
mov
mov
js
cld
mov
xchg
push
jge
pop
jle
xor
fnstsw
sti
push
jo
movsb
pop
xor
inc
sbb
lods
mov
xor
push
sbbb
movsb
inc
les
sub
loop
push
rcll
ljmp
mov
xchg
test
pushf
andb
data16
adc
fdiv
and
push
jl
fistps
lret
fsts
cmp
push
cmpsb
jle
push
or
mov
imul
sub
aad
push
sbbl
sbb
dec
mov
daa
xor
jg
cli
jp
adc
pushf
les
push
xor
push
cmp
adc
ds
scas
pop
jno
jl
xchg
sub
scas
or
cltd
int3
jge
movsb
in
cmp
mov
arpl
idiv
mov
push
xorl
stos
iret
xchg
insb
sbbb
test
mov
push
mov
loop
mov
orl
mov
ds
pop
test
imul
cs
imul
jecxz
imul
inc
ret
pop
movsl
out
es
popa
das
xchg
pop
xchg
les
mov
leave
cmpsl
dec
and
add
jae
mov
jno
jbe
iret
jg
cmp
or
adc
xchg
sub
add
movsl
sbb
mov
bound
imull
mov
inc
loop
add
inc
scas
aas
dec
cmp
loopne
xor
shl
leave
jnp
xchg
pop
xchg
arpl
lcall
jmp
ror
js
movsb
adc
dec
into
into
ret
aad
test
mov
ret
cwtl
jmp
jo
rorl
dec
sarb
int
jmp
mov
mov
pop
jecxz
aas
pop
int
mov
mov
dec
xchg
or
pop
in
sbb
iret
pop
nop
push
lods
repnz
inc
fldcw
outsb
xor
lcall
cmp
mov
iret
push
mov
hlt
popf
mov
ja
cmp
bound
in
and
jg
das
xor
xchg
mov
lds
xchg
fmuls
lods
pop
and
insl
shr
xor
inc
int
mov
nop
mulps
ret
or
shlb
popa
adc
mov
dec
mov
sarb
popa
ljmp
fisttpl
push
enter
imul
push
roll
adc
fstl
sbb
xchg
sarb
mov
push
pop
cmpsb
popf
mov
or
mov
inc
or
aad
pop
push
sub
mov
inc
pushf
or
loope
test
jecxz
xchg
in
daa
fcoml
jmp
rcll
sbb
subb
lock
movsb
lock
std
icebp
cltd
outsl
mov
les
sbbl
pushf
mov
pop
int3
inc
repnz
and
ret
sbb
sbbl
hlt
mov
jecxz
fdivrs
push
mov
roll
xchg
mov
out
sub
js
mov
mul
aaa
movsl
inc
idiv
out
push
mov
imul
dec
fsubr
jne
imul
js
ret
icebp
out
test
mov
loope
imul
xchg
clc
inc
lret
cmp
inc
mov
addr16
fs
test
pop
mov
mov
pop
cltd
push
mov
pop
xor
xor
icebp
fnsave
mov
adc
add
cmpsb
pop
popf
insl
and
mov
pop
pop
sub
pop
add
call
stos
jge
mov
sbb
pop
fldt
loopne
aad
aaa
sbb
jbe
stc
pop
popa
fsts
filds
cmovb
pop
test
push
bound
pop
pop
ret
pop
pop
xchg
adc
fcomi
stc
add
push
pop
adc
ds
addl
xchg
and
sbb
vpand
ja
pusha
and
push
dec
into
mov
aam
adc
fisttps
adc
mov
sub
mov
mov
xor
lahf
inc
sbb
in
fisttpl
std
test
ja
imul
mov
jmp
sub
jecxz
repz
mov
aad
and
add
sub
dec
out
xor
mov
pop
loopne
aam
push
xchg
inc
mov
loop
call
or
mov
xchg
iret
scas
adc
fimull
lock
or
sbb
cmp
mov
imul
test
xchg
adc
rorl
ret
xor
push
sbb
jp
pop
pop
popf
sbb
mov
adc
dec
jecxz
pop
inc
pop
fstpl
movsb
cmpsl
outsb
and
aas
std
leave
fsubs
lods
sub
xchg
gs
sub
mov
cmp
cmc
sbb
push
adc
imul
insl
adc
push
lcall
add
fstpl
scas
sbb
dec
scas
not
push
fdivr
pop
pop
pop
fnstcw
cs
push
mov
xchg
int3
or
lcall
or
push
mov
sbb
call
adc
clc
cs
pop
leave
sbb
or
fdiv
addr16
pop
outsl
sarb
jge
sub
jg
mov
mov
sub
xchg
pop
pop
xchg
and
mov
flds
adc
dec
mov
or
test
xchg
rorl
push
cmp
jl
and
adc
in
iret
pop
jnp
ljmp
push
pop
stc
insb
and
sub
sub
ljmp
pop
mov
aad
dec
stos
loope
cmp
fwait
fwait
jmp
add
imul
imull
adc
push
js
test
mov
cltd
fists
mov
popf
aam
mov
sti
push
repnz
fs
shll
lock
jp
xor
push
jecxz
insl
das
add
push
test
ror
adc
xchg
xor
sub
xchg
xor
decl
mov
dec
sbb
mov
jmp
dec
cmp
pop
ljmp
sbb
test
mov
imul
dec
xlat
stc
fwait
sbb
repnz
and
push
lret
in
and
add
sarl
stos
cmp
dec
in
pop
testb
mov
aad
inc
pop
loop
push
or
in
ljmp
jl
mov
add
dec
mov
test
xchg
ss
orb
push
gs
dec
jnp
and
fs
mov
decl
mov
sbb
out
push
cmpsb
cli
adc
jl
test
xor
inc
ljmp
hlt
push
lock
insb
icebp
jecxz
notl
and
movb
ss
pushf
scas
adc
loop
sub
mov
loop
in
negb
data16
aas
sub
and
pop
add
loopne
gs
test
xor
das
ds
dec
dec
push
addr16
enter
pop
adc
dec
aam
stos
dec
or
in
das
dec
ss
andl
lret
jb
andl
push
cwtl
mov
and
lret
inc
xchg
push
cmp
xchg
push
mov
push
push
into
adc
pushf
dec
icebp
mov
les
or
es
fsubl
iret
jns
mov
loopne
inc
push
movsl
jle
sub
cmc
outsb
mov
lret
push
les
or
sti
xlat
test
aad
shl
scas
repnz
stc
sahf
push
sbbb
ja
push
pop
in
mov
test
mov
ret
lcall
in
mov
jecxz
cmp
jl
sub
movaps
pop
std
ljmp
ret
jecxz
jge
mov
lahf
add
add
iret
adcl
and
cli
xchg
fcompl
mov
mov
dec
mov
cwtl
sbb
pop
xchg
xchg
jmp
test
lret
xor
jmp
add
ss
xor
push
in
mov
sti
stc
pushf
orb
outsl
in
repnz
mov
and
out
cmp
and
icebp
mov
fisubrs
mov
fs
inc
js
or
int
out
loope
mov
dec
lret
movsl
add
xchg
jae
jbe
test
cs
add
loopne
test
les
add
ret
insb
mov
push
aad
and
push
mov
cmpsl
xchg
mov
and
cmp
sbb
lret
adc
xor
pop
mov
jnp
mov
mov
mov
ret
lret
mov
mov
pop
and
add
enter
inc
cmp
add
fdivrs
int3
mov
ja
mov
sub
popa
fcomip
mov
push
imulb
inc
pusha
aad
sbb
movsl
fsubrl
les
icebp
aaa
lahf
adc
negb
fcomps
outsb
push
into
ss
repz
mov
xor
xchg
hlt
mov
sahf
repz
stos
add
push
jecxz
jg
cmc
test
int3
leave
push
jne
add
call
add
inc
mov
mov
rcrl
sahf
shll
mov
stc
gs
and
add
cmp
add
lds
in
rolb
xchg
adc
loopne
lock
push
jae
jl
popa
mov
lret
sbb
das
mov
sub
sub
subb
popf
scas
and
pop
pusha
adc
pop
ret
and
inc
mulb
daa
aam
jae
mov
das
or
lcall
add
mov
roll
push
adc
mov
divb
out
add
sbb
sub
push
and
mov
cs
xchg
enter
xchg
lahf
cs
aaa
jo
inc
lea
lret
iret
je
fcmove
mov
mov
in
inc
insb
xlat
push
gs
dec
xchg
mov
lret
mov
xlat
ret
mov
mov
inc
lods
dec
xchg
es
add
push
dec
xor
sahf
andl
cmc
stos
subb
mov
js
add
or
cwtl
dec
sbb
pop
inc
test
sub
cld
adc
inc
cltd
scas
push
not
xchg
mov
pop
ret
lods
shll
or
inc
iret
mov
subb
mov
out
dec
mov
loopne
sbb
movb
jbe
pop
push
pushf
leave
mov
mov
jp
lret
aaa
pop
test
jle
incl
pop
push
add
hlt
or
mov
jl
xchg
push
pop
pop
std
sbb
dec
push
add
jno
inc
sbb
shlb
aam
mov
add
xchg
outsb
sub
ret
mov
cmpsb
adc
imul
fstpl
repz
mov
outsb
daa
mov
pop
inc
rcll
iret
jbe
lcall
cltd
aas
xchg
nop
fwait
push
mov
and
add
notl
adc
sub
popa
bound
imul
and
dec
cmp
dec
cmp
dec
cmp
enter
mov
add
cmpsb
cmpsb
cmp
jnp
out
insb
adcb
adc
pop
movsl
dec
jecxz
pop
sbb
fnstsw
in
fnstenv
inc
loop
scas
or
pop
dec
daa
repz
fnstcw
push
adc
sbb
push
lock
hlt
pop
sarl
insb
dec
sub
mov
mov
inc
iret
lea
push
mov
mov
adc
fdivl
arpl
shr
xor
fmuls
sub
mov
ret
into
sbb
sbbl
ror
sub
pop
std
sbb
cli
in
cwtl
jmp
add
in
aam
xchg
inc
fcompl
xlat
and
pop
and
lret
sbb
mov
sub
xchg
inc
mov
mov
in
pusha
add
cmp
mov
stos
dec
xchg
xor
hlt
mov
push
mov
cltd
pop
cwtl
fimull
fadds
in
adc
cli
ja
mov
push
xchg
test
stos
mov
test
mov
icebp
popa
icebp
insb
mov
xchg
sub
inc
cmp
aad
or
lods
lds
daa
mov
mov
icebp
jo
repz
pop
aas
in
mov
pop
or
sahf
enter
fwait
sbb
mov
push
adc
adc
fisttpll
dec
cs
xor
and
cwtl
push
sbb
pop
pop
sbbl
pop
jp
stos
loop
lods
pusha
out
int3
int3
adc
pop
xor
std
push
mov
and
lods
adc
les
xchg
fiadds
xchg
sub
cli
dec
sarb
stc
or
sarl
or
push
iret
xchg
leave
es
jo
pop
adc
mov
pushw
ret
int
mov
fisttps
repz
shrl
adc
ret
fdiv
daa
jns
in
js
jns
mov
rorb
xor
or
cmpsl
lcall
jns
out
scas
scas
pushf
or
decb
lods
out
or
ret
addl
nop
dec
dec
lret
cmp
cwtl
in
mov
inc
outsb
jne
test
inc
lret
daa
stc
sbb
lods
and
enter
cmpl
and
fistpl
sahf
fwait
int
inc
lea
movsl
or
ret
mov
cmp
rcrl
xchg
jecxz
cmp
cmp
sub
orl
test
cmp
cmp
pop
clc
mov
jmp
mov
lret
sbbb
or
push
xchg
movsl
adc
or
sub
adc
and
lret
xor
cmpsl
adc
jnp
sub
int
aad
xor
loop
or
jo
lret
xor
cld
pop
mov
scas
sub
mov
nop
adcb
in
les
loope,pt
mov
enter
out
sub
dec
filds
int3
dec
into
and
imul
les
or
xchg
outsl
in
out
mov
jo
cmpsb
mov
movsb
jae
repnz
cmp
or
pop
pop
jno
test
mov
dec
lret
es
stc
pop
inc
mov
sub
std
mov
lods
sub
addb
sub
imul
in
stos
dec
cmp
rcll
and
xchg
xorl
sub
sti
cmc
nop
mov
inc
mov
jmp
xchg
cmp
test
icebp
lock
out
hlt
dec
dec
into
rclb
lods
xlat
mov
mov
sar
xchg
xor
stc
mov
xlat
fisubs
pop
lahf
daa
aas
lods
js
pop
stc
jb
dec
ds
mov
push
ja
ja
in
sbb
adc
bound
dec
insl
push
sbb
movsb
dec
int
push
mov
mull
jne
cmc
sbb
imul
adc
jl
orb
sub
pop
jmp
sbb
sti
dec
sub
cmp
adc
loop
cmp
loopne
lock
jle
fmulp
and
outsb
div
aam
nop
subl
lea
push
inc
mov
shrb
lcall
hlt
or
pusha
ljmp
test
aad
or
jle
nop
mov
ss
daa
sub
arpl
das
dec
fwait
hlt
xchg
add
push
xchg
enter
pusha
test
hlt
jecxz
add
daa
cli
dec
popf
cmpsb
repnz
sarl
mov
fs
jae
out
lods
lock
lds
pushf
jl
sub
sarb
stos
add
mov
push
sahf
stos
jle
jle
cld
rorl
mov
scas
mov
mov
cld
push
fldt
out
inc
jne
repz
push
push
imul
or
ret
inc
mov
sti
and
cmp
jnp
ja
mov
mov
inc
mov
aam
ret
out
xchg
jb
mov
add
push
xchg
dec
ret
sbb
jo
and
sbb
jne
pop
push
jecxz
mov
lock
xchg
cli
add
cmp
daa
jl
aad
movsl
pop
mov
push
pop
insl
dec
dec
cltd
fwait
xor
insb
lahf
adc
lds
mov
mov
ficoms
jno
arpl
outsl
fidivrl
cmc
pop
rclb
inc
fnsave
notb
mov
lcall
inc
lret
cmp
pop
and
stos
or
inc
push
adc
aam
imul
xchg
and
mov
in
stos
test
push
and
pop
lock
cwtl
js
jno
call
jbe
rcll
pop
in
jp
pop
mov
fwait
mov
push
sahf
testb
movsl
adc
adc
dec
jg
mov
add
cmpb
repz
hlt
fstpt
push
cli
mov
xor
test
mov
mov
jmp
mov
xlat
fsubrs
not
xorb
push
stos
test
subl
xchg
repnz
icebp
fsubrl
adc
repnz
je
adc
push
adcl
xchg
pusha
stos
stc
dec
adc
int
push
clc
call
data16
jbe
testb
cmp
dec
arpl
scas
aaa
cmp
lahf
repnz
xor
add
hlt
push
and
mov
dec
dec
jp
mov
add
jg
pop
int3
leave
jecxz
sbb
ds
adc
clc
pop
imul
sbb
ret
jnp
mov
jp
ds
outsb
testl
cs
mov
scas
gs
mov
xchg
dec
outsl
sahf
xor
sbb
cmpsl
cmpb
mov
pop
and
lods
lahf
rcrb
or
cmpsl
jo
push
cld
dec
push
dec
repnz
push
insl
pop
icebp
xor
jo
sti
out
jle
je
xchg
in
xor
sahf
push
aaa
xlat
insl
pop
mov
inc
xor
xchg
sub
icebp
shlb
adcb
cmp
sbb
jle
das
dec
pop
inc
mov
sub
bound
or
push
test
pop
gs
and
push
pop
pop
sbb
pop
or
test
arpl
mov
lea
lea
aaa
cwtl
clc
pusha
adc
jb
clc
and
fidivrs
cmpsb
movsl
mov
mov
pop
cmpsl
shll
mov
adc
pop
test
mov
sub
cmovne
test
inc
sub
mov
inc
inc
pop
mov
stos
jno
loopne
int3
in
jno
pop
add
mov
mov
fmuls
mov
in
xor
push
inc
cld
cmpsb
popf
sub
mov
shr
push
inc
test
test
bound
aad
pop
adc
mov
xor
flds
and
das
inc
mov
lea
loop
in
pop
int
or
stos
filds
dec
incb
jb
sub
cmp
push
cs
enter
and
jns
dec
sbb
call
add
es
out
mov
jmp
jg
leave
mov
movsl
mov
inc
js
xchg
xor
sub
push
sub
mov
int
push
cmp
icebp
mov
xchg
pusha
ret
test
stc
lds
sub
leave
cmpb
mov
mov
insl
sbb
aas
mov
cmp
inc
out
pushl
leave
mov
pop
adcb
inc
dec
cmpsl
inc
xchg
nop
sbb
and
aas
ja
imul
movsb
in
mov
bound
int
lods
jp
mov
sub
cmc
mov
mov
repz
cmpl
fisttps
scas
aam
inc
or
jbe
mov
mov
dec
hlt
dec
fbld
std
push
movsb
push
addr16
cli
je
and
loopne
popf
jmp
jmp
fcompl
imul
sahf
stos
dec
lcall
mov
enter
scas
aas
dec
sub
pop
sub
imul
clc
dec
mov
cmp
mov
jno
test
out
ss
cmp
or
in
mov
sbb
or
in
push
ret
jo
movsl
adc
test
jno
cwtl
addr16
loope
push
jo
repnz
mov
sub
add
dec
jb
mov
std
adc
jle
stos
and
mov
pop
and
lcall
in
js
cmp
jp
fwait
push
xor
push
dec
dec
es
jnp
xchg
int
iret
aad
pushf
add
not
pop
add
dec
and
jp
cli
cmp
cld
pop
fistpll
out
lea
pusha
pop
inc
aaa
mov
fcmovnu
lea
cld
add
ja
dec
mov
xchg
cmc
cmc
sbb
sub
or
dec
int
push
push
sbbl
and
fwait
outsb
jo
rol
mov
and
inc
add
inc
jbe
pop
aad
inc
leave
push
dec
lds
mov
cld
lret
dec
add
push
jne
movsb
xor
int3
cmp
test
std
xchg
ja
fcomi
pop
sahf
jne
lret
mov
outsl
ds
xchg
jl
or
addb
xorb
pop
loope
xor
and
cmp
cs
in
push
in
imul
pop
jb
jno
push
mov
int
push
jmp
push
mov
aas
sub
test
cli
push
cmp
cmpsb
inc
shrb
pushf
pushf
mov
push
add
or
stc
jecxz
xchg
lock
rolb
es
xchg
fs
adc
pop
push
out
fldcw
jmp
xchg
dec
cmpl
xor
mov
repnz
dec
sub
lea
fimull
and
jnp
mov
jmp
sbb
sub
imul
mov
fiaddl
add
fidivs
lretw
js
cmpl
mov
sbb
mov
shll
mov
sub
dec
lahf
cmc
sub
dec
push
xchg
ss
cmp
pop
aad
in
push
xchg
fs
sbb
cwtl
or
lds
outsb
pop
aaa
inc
ja
sbb
repnz
sub
int
fcoml
push
dec
mov
bound
int
adc
pop
dec
fisttpl
inc
jg
jo
jns
pushf
xchg
out
mov
push
mov
pop
lods
jb
sub
nop
cs
loop
lods
xchg
stos
enter
mov
les
push
or
gs
and
insl
cmp
push
lock
and
dec
cmp
cltd
pop
jecxz
fstpt
dec
mov
jb
in
or
pop
into
mov
mov
push
push
into
iret
cmp
jno
push
mov
cmc
xor
fs
jbe
pop
sub
int3
les
xchg
pop
or
and
xchg
insb
ljmp
mov
adc
push
je
addr16
test
inc
imul
addl
sub
xchg
push
enter
data16
and
jecxz
push
in
out
jp
inc
dec
addr16
jo
mov
inc
mov
loope
xchg
sbb
mov
nop
addr16
push
cmpb
and
add
xchg
imul
push
xchg
and
out
cmp
in
xchg
dec
adc
jae
pop
dec
pop
sbb
mov
lds
push
push
mov
shrl
js
movsl
fdivr
subb
sbb
inc
cmp
xchg
cld
adc
sbb
aaa
arpl
dec
dec
mov
cmp
mov
mov
mov
mov
divb
data16
fcmovnbe
popa
outsb
lock
mov
jmp
pop
mov
loopne
ds
xor
sbb
cmp
jbe
jbe
lods
or
push
lret
clc
inc
mov
add
sub
jne
nop
pop
push
or
cli
dec
aaa
mov
jne
into
into
fldl
test
mov
and
data16
pop
mov
xor
add
out
idivb
xchg
xor
pop
bound
int3
sbb
lcall
out
iret
adc
or
popf
ja
fisttpll
sub
inc
and
dec
fstp
xchg
cmp
sbb
mov
bound
enter
push
nop
inc
cmp
jp
and
and
push
frstor
and
cmp
cwtl
decl
aam
dec
push
dec
enter
and
in
das
rcr
popa
or
mov
mov
fadd
and
mov
shl
and
lret
movsl
aas
cwtl
es
test
xchg
add
adc
inc
add
repz
sub
clc
push
insl
cmpsl
mov
add
data16
lock
js
mov
sbb
test
pop
adc
mov
dec
add
nop
dec
inc
in
xchg
jbe
dec
insl
pusha
add
push
or
mov
push
testb
cmp
jl
xlat
arpl
lock
or
add
dec
sti
mov
add
gs
push
xchg
mov
popa
pop
mov
scas
push
push
stos
lock
aas
fcmovbe
int
shl
movsb
lods
test
incb
xchg
insb
movsl
xchg
out
push
jl
push
imul
imul
repnz
stc
inc
fildl
sbb
or
pusha
cmpsl
paddb
cmp
inc
mov
sub
cmp
sbb
adc
fwait
sub
data16
sub
adc
sub
lods
cmp
jl
mov
adc
mov
sub
fldt
movsb
push
add
fwait
sbb
jecxz
cmp
dec
ja
sub
or
lret
mov
fldt
data16
adc
insl
cmp
lods
xchg
daa
sub
mov
ficomps
sub
xchg
and
jge
stos
jbe
cmp
cmp
cwtl
dec
xchg
dec
xor
sub
psrlw
movsb
xchg
pop
std
leave
sub
popf
cli
xchg
int
out
pusha
subb
movsb
dec
cli
xchg
pop
fs
btr
push
in
mov
je
sahf
mov
shll
pop
in
dec
cs
inc
pushf
cli
and
fisubrs
mov
js
dec
in
mov
lods
ja
xor
fwait
jecxz
push
xlat
data16
xchg
inc
outsb
mov
sbb
fdivr
cmp
push
into
mov
jne
scas
ljmp
jae
into
repnz
icebp
inc
hlt
cmpsb
sarb
sub
sahf
jbe
jl
xor
sub
arpl
sub
inc
movsl
std
iret
mov
xchg
ret
lret
mov
das
adc
mov
jmp
pop
arpl
jnp
ret
push
cwtl
mov
mov
test
xchg
repnz
sbb
and
add
cmp
add
mov
cmp
clc
das
out
and
roll
mov
adc
enter
cmpsb
scas
shlb
lret
xor
or
mov
push
fnsave
fsubrs
pop
hlt
and
inc
add
adc
fbstp
rorb
stos
xor
and
or
fwait
mov
add
add
mov
inc
decl
pusha
push
imul
and
jo
push
mov
dec
insb
xor
jl
test
shll
in
mov
pop
xor
movsl
fs
add
and
aad
cltd
shlb
sti
popa
mov
decl
repnz
call
aaa
je
ret
xorb
aad
sub
cwtl
mov
imul
xchg
adc
iret
pop
fimuls
pop
std
xor
dec
push
loope
inc
pushf
imul
pop
push
pushf
aaa
pop
test
les
mov
fsubs
mov
rcr
outsb
test
pusha
mov
lods
fisubs
jmp
push
pop
fwait
mov
lods
pop
sbb
dec
rclb
cli
adc
addr16
xchg
hlt
es
into
scas
nop
in
add
inc
bound
enter
jmp
mov
or
int3
sub
pop
sub
mov
repnz
loop
sub
mov
sub
jae
outsl
xor
sbb
int
mov
dec
cli
xchg
cld
adc
dec
shrb
cmp
rorb
in
push
or
mull
out
scas
mov
xchg
xchg
je
mov
daa
dec
test
jecxz
jg
and
daa
add
arpl
outsl
mov
sbb
stos
push
iret
mov
inc
push
jmp
popf
xor
cmp
divl
cltd
test
jge
and
inc
mov
out
stc
mov
cmp
lret
mov
mov
or
fincstp
inc
or
pop
sub
sub
jo
mov
and
pop
lcall
dec
dec
cmp
adc
aaa
lods
or
dec
cmp
cmpb
loop
out
adc
cli
imul
push
je
aam
mov
jle
mov
push
jecxz
hlt
iret
arpl
sub
and
inc
mov
imul
or
shlb
jmp
push
inc
sti
inc
inc
pop
shll
gs
and
enter
cmpsl
lcall
icebp
sbb
jae
xor
adc
cwtl
inc
out
shrb
mov
mov
mov
push
lret
call
or
sbb
jmp
push
testb
shll
pop
mov
cmp
seto
inc
test
repnz
mov
push
cmp
sbb
mov
test
mov
jbe
sbb
dec
out
sbb
lock
xor
pop
fstpl
cmp
scas
mov
xor
sbb
adc
cli
out
push
sub
cwtl
and
es
lods
outsl
lret
std
clc
mov
cmp
cli
jmp
loop
xlat
jae
xor
cltd
dec
mov
lret
jp
pop
shl
lahf
ljmp
outsl
ret
mov
stos
into
mov
cmp
stos
jmp
jnp
int
nop
jae
test
xor
mov
adc
jae
lahf
outsl
push
out
mov
add
mov
mov
ja
xlat
loopne
add
sbb
jne
fisubl
or
dec
insl
sbb
jns
mov
adc
lods
add
inc
jnp
adc
cltd
jg
icebp
repz
xchg
and
jbe
je
mov
fwait
pop
jns
jno
shll
pop
push
pop
scas
push
push
jb
jge
pop
lcall
ret
xchg
jae
jae
lret
cmc
adc
out
stc
or
fwait
pop
xor
data16
inc
cmp
mov
sar
adc
ret
rcl
xchg
or
rorb
sbb
ja
mov
jmp
pop
inc
dec
lock
es
les
dec
jnp
fcmovu
or
adc
dec
cmpsb
inc
cmp
cmc
loopne
adc
gs
jae
iret
lea
lcall
fidivrl
out
cmpsb
push
lret
xor
dec
push
dec
testl
pop
adc
loopne
fisttpll
push
cld
ljmp
add
lods
add
sub
add
fistl
cmp
mov
addr16
les
xchg
mov
popa
lea
filds
pop
add
test
rorb
push
js
jo,pt
lods
pop
out
and
add
lods
aad
mov
cmp
mov
pop
xor
push
pop
fwait
xchg
mov
aad
mov
cmpsb
popa
mov
pop
pushf
mov
aas
pop
add
xor
cmpsb
pop
test
and
inc
adc
jns
mov
push
and
mov
mov
jecxz
jae
inc
es
jb
push
push
cmpsl
push
mov
dec
sarl
in
mov
mov
fsubl
imul
test
jnp
jb
loopne
jnp
lds
sbb
stc
shrl
xchg
lahf
jge
pop
bound
adc
cmp
movlps
cmpsb
es
outsl
pop
scas
lret
sbb
jae
into
or
fldenv
cwtl
jo
jle
aam
pop
push
xchg
inc
cmpsb
repz
subl
adc
mov
dec
pushf
jno
lcall
aad
sahf
cld
xor
ficoms
mov
adc
dec
jnp
sbbb
add
enter
test
dec
mov
test
xchg
fnsave
pop
sbb
mov
mov
push
cmp
sbb
mov
test
cs
jns
xchg
pop
je
stos
mov
enter
mov
aad
fists
in
push
dec
pop
scas
sarb
push
gs
fwait
adc
fisubl
enter
inc
leave
mov
lcall
sub
push
mov
in
sub
xchg
fisttpl
ja
mov
repz
stos
sbb
adc
mov
xchg
mov
testb
fisttpll
dec
dec
adc
stos
lds
sub
mov
xchg
in
cld
sbb
mov
mov
rcrl
push
add
inc
sahf
mov
loop
sub
lahf
aas
sbb
mov
popa
sahf
arpl
xchg
pop
jle
daa
test
ja
push
pop
jb
xor
inc
fisubl
dec
jbe
fcoml
gs
inc
test
push
push
hlt
cmpsl
dec
gs
xchg
push
hlt
nop
popa
les
outsb
mov
ljmp
aam
mov
xor
and
nop
sbb
mov
and
aas
sarb
popf
pop
sub
pop
addr16
mov
shrb
mov
add
iret
ret
iret
inc
push
in
lods
mov
mov
inc
cli
mov
add
mov
adc
scas
ret
movsl
push
les
cmp
jp
nop
xchg
dec
mov
jge
sbb
out
mov
test
add
jp
push
shr
aaa
push
jnp
and
ficoml
mov
jbe
mov
popf
int
xchg
push
xor
jns
jge
arpl
xchg
mov
repz
ljmp
adc
mov
std
xor
popa
mov
out
xor
mov
fidivrl
in
loope
mov
stc
stc
movsb
xchg
push
scas
dec
mov
xchg
aas
enter
jb
jle
xchg
cmp
js
cmp
xchg
ds
or
inc
sub
sti
outsb
sub
dec
jp
leave
lods
add
xlat
cli
adc
or
shll
arpl
repnz
jmp
leave
add
lret
push
add
jle
movsl
mov
sub
dec
test
lcall
aad
lea
push
xadd
loop
sub
add
add
mov
test
shrb
sub
mov
adc
pop
insb
das
dec
and
sbb
mov
cmc
or
pop
jge
dec
pop
jecxz
mov
xor
mov
pop
mov
idivl
mov
es
repz
push
scas
inc
inc
jecxz
and
jp
xchg
imul
loope
mov
inc
cwtl
ljmp
jo
dec
pop
sbb
inc
sti
outsb
pop
ficoms
jbe
adc
dec
les
movsb
dec
adcl
sahf
sbbb
dec
and
jno
outsl
daa
xor
adc
adc
mov
pop
or
or
lds
mov
push
xchg
mov
sarw
popa
dec
xor
mov
ss
ret
icebp
das
ds
or
repnz
xchg
test
cmpsb
mov
in
fstl
jge
out
andl
nopl
addr16
mov
sub
jnp
lods
pop
inc
cmp
sub
jp
mov
pop
call
stc
mov
sti
ficomps
ljmp
fisttpll
stos
fisubrl
sbb
lds
mov
xchg
repz
mov
or
inc
or
push
xchg
dec
lea
loopne
inc
cmp
sub
cmpl
movsb
test
ja
push
mov
and
lret
rcrl
sbb
sti
lds
out
iret
scas
clc
mov
scas
clc
lods
aad
xchg
xor
ret
fnstcw
shl
adc
sbb
out
leave
fidivl
mov
roll
fnstcw
repz
inc
loope
test
aas
cmpsb
lods
push
hlt
sub
adc
fmull
adc
sbb
int
mov
mov
xor
aas
mov
das
dec
pushf
iret
cmp
mov
out
movsl
xor
ja
xor
jge
ja
in
leave
add
inc
bound
mov
jnp
jnp
fiaddl
lea
testl
out
fcmovnb
sar
insb
push
fcoml
xor
aam
hlt
sub
adc
mov
or
xchg
out
jb
jbe
test
in
fldcw
cld
dec
into
cmp
pop
fwait
pop
cwtl
adc
rclb
cwtl
fisubl
in
dec
daa
jne
add
add
inc
dec
testb
or
shl
fisttpl
add
xor
loope
adc
arpl
aam
popf
lret
xorb
subl
lahf
sub
test
add
subl
xor
stc
adc
roll
jle
ljmp
into
insw
jg
sub
fwait
and
jmp
mov
mov
push
push
out
jae
jns
out
fisttpl
popf
js
sbb
icebp
sbb
or
inc
insb
sub
push
adc
xor
mov
or
jnp
jno
test
aad
mov
cmp
or
orb
int
daa
adc
mov
pusha
pop
xor
popf
pop
or
add
movsb
mov
sub
mov
mov
inc
orl
ds
lods
out
shlb
xorb
mov
xchg
rclb
out
cmp
imul
push
mov
mov
fdivr
hlt
out
fsubrs
add
ss
jg
dec
add
test
js
cmp
mov
dec
out
iret
mov
inc
push
xorl
pop
ljmp
push
je
iret
and
icebp
lret
rcpps
xor
pop
std
sub
or
lsl
iret
push
mov
cmpl
loope
das
inc
jecxz
fidivrs
push
or
aaa
and
fst
sbb
int
sbb
add
push
push
lret
adc
adc
je
and
push
ljmp
push
xor
cmp
adc
inc
scas
sahf
jns
bound
lds
fsubr
popl
push
fs
xor
mov
adc
xchg
je
cmpsl
mov
cmp
push
mov
lret
mov
and
les
aam
pop
or
mov
ds
testb
jnp
jmp
test
or
shlb
les
xchg
pop
imul
pop
stos
addr16
mov
xlat
or
or
jecxz
mov
pusha
arpl
ss
shrl
out
insl
mov
mov
cmp
nop
jle
adc
jne
jge
push
mov
jae
inc
popa
or
ljmp
add
out
inc
dec
gs
mov
fcmovb
pushf
jp
jle
mov
xor
mov
mov
push
jo
cmp
pushf
cmp
test
adcb
lcall
mov
jo
fs
data16
add
inc
mov
sub
sub
movsl
fcompl
xorb
adc
jg
xchg
xchg
sbb
call
imul
call
or
test
movsb
enter
pop
fsubl
ficoms
mov
cwtl
test
cli
dec
push
lahf
imul
in
or
ss
push
mull
nop
add
orb
or
push
sub
xlat
adc
xchg
repz
add
sbb
fdivs
daa
cmp
adc
imull
lret
mov
add
mov
mov
clc
adc
dec
dec
ret
push
dec
jno
mov
mov
fdivl
pop
das
dec
xchg
aaa
add
sbb
cmp
in
mov
fcoms
xchg
pop
lods
cs
stos
orps
test
mov
loop
mov
jp
pop
push
scas
pop
out
inc
push
adc
push
lea
test
int3
mov
jle
andl
inc
sahf
je
lock
cs
lret
lahf
push
popf
xchg
pop
mov
lret
inc
push
loopne
add
jbe
rcr
jno
pop
dec
in
inc
lods
sarl
dec
jo
jae
xchg
shl
adc
aam
mov
and
js
xchg
inc
mov
gs
arpl
lcall
popf
and
pop
cmp
jb
jo
shl
jae
inc
mov
fldenv
les
jo
dec
enter
cmp
and
test
cs
xor
fsubr
xchg
pusha
stc
out
icebp
mulb
xchg
aaa
nop
aas
mov
stos
adc
mov
push
jnp
mov
xchg
or
cmp
ret
arpl
repz
jne
inc
imul
out
sub
scas
inc
jl
fwait
sbb
sbb
dec
adc
popf
xchg
adc
xchg
arpl
pop
sbb
add
or
or
dec
push
pop
mov
jbe
mov
andl
scas
and
sub
ds
sub
mov
dec
and
out
test
xchg
lret
add
push
cmp
xlat
cmc
dec
aam
out
xor
fimull
jle
pusha
aaa
out
and
push
jae
sub
push
ja
pop
mov
push
adc
sbb
rclb
stos
mov
sahf
ret
add
or
cltd
enter
xchg
mov
push
movsl
out
fcmovne
std
and
pop
xchg
jae
leave
stos
push
jle
or
cld
shll
iret
fsubrl
cld
sub
dec
lret
cmpsl
fistpll
jae
pop
cmp
pop
jp
xchg
cmc
sub
xchg
xchg
add
sahf
push
sbb
in
sbb
bound
xor
jecxz
aam
mov
xor
into
xor
mov
in
repz
les
ljmp
fimull
shr
lcall
inc
mov
sbb
add
pop
fstl
pop
lcall
mov
sbb
or
push
inc
add
sar
mov
mov
arpl
jge
jge
aam
jge
push
sbb
daa
sbb
jns
dec
and
out
xor
sbb
mov
dec
addl
pop
and
add
mov
mov
xor
decb
sahf
sub
sbb
add
xor
cmc
dec
and
pop
sub
sbb
mov
stc
lods
arpl
xor
jecxz
ret
test
push
inc
ljmp
inc
int
inc
cmp
add
decl
xchg
insl
jbe
ja
adc
fisubrl
stc
push
adc
into
xor
sub
adc
mov
stc
mov
dec
dec
push
xor
push
cmpb
andb
and
jno
sub
pop
stc
xchg
adc
xlat
aas
movsl
cmc
jae
test
adc
and
xor
jae
jmp
jnp
pusha
sti
sahf
sub
ja
jbe
push
inc
inc
or
lret
pop
fwait
sbb
es
jb
mov
fildll
xor
jns
push
in
pop
outsb
int
int
push
loope
pusha
stos
xor
lds
sbbl
jns
cmc
jae
mov
cwtl
stos
imul
mov
push
les
lods
iret
mov
fcmovnbe
orl
mov
push
push
inc
jne
cltd
push
mov
dec
sub
lock
xchg
ja
or
aam
xor
fs
loop
fwait
cli
stos
dec
insb
mov
push
hlt
aaa
cmc
jo
push
push
jg
movsl
jmp
es
dec
dec
subb
xor
std
inc
scas
dec
hlt
jmp
lods
cmc
add
xor
jnp
and
out
inc
mov
out
hlt
test
sub
cmp
sub
xor
ja
push
lods
mov
adc
inc
add
mov
pop
add
stos
es
stc
xor
push
jae
push
bound
lea
mov
arpl
in
test
xchg
sbbl
push
pop
xor
loope
mov
mov
mov
push
mov
jbe
repz
mov
cwtl
mov
cmpsl
jae
xchg
jb
out
cmpsl
fs
xor
or
pop
lds
add
mov
push
adc
pop
repnz
bound
je
xor
mov
lds
or
jecxz
jmp
popf
adc
jle
mov
sarb
les
or
lea
inc
inc
stos
arpl
imul
call
pushf
imul
jne
into
loope
sub
lcall
lods
loop
xor
jg
xchg
notl
mov
push
loope
jp
clc
jp
loop
jmp
enter
cs
insl
dec
cmp
dec
xchg
pmaddwd
enter
lahf
push
nop
pop
sbb
jge
or
jbe
and
rcr
mov
repnz
jo
popa
and
imul
fistpl
push
mov
rorb
sbb
jae
popf
les
or
loope,pt
and
shll
in
or
and
in
ljmp
dec
insb
inc
out
sti
paddusb
notb
pop
mov
int
clc
push
mov
pop
sub
cmp
out
and
sub
add
pop
mov
and
adc
imul
xlat
cwtl
stc
sbb
inc
repnz
decl
xor
lahf
mov
popl
out
push
fmulp
adc
lock
aas
and
jns
divl
push
std
test
inc
enter
and
scas
scas
scas
pop
mov
inc
jg
add
xor
dec
push
mov
adc
dec
xchg
fcoms
sbb
xchg
mov
cmpsl
arpl
adc
pop
pop
cmpsb
sub
lcall
inc
pop
gs
lea
pop
testb
imull
xor
sbb
mov
dec
clc
enter
push
pop
out
std
sbb
xchg
les
rorl
in
test
stos
call
aaa
arpl
cmp
cmp
jb
daa
stc
xor
es
xchg
test
inc
cmp
fwait
sbbl
add
test
lret
jp
or
add
jbe
adc
shrb
aad
cmc
lcall
or
in
test
cwtl
cmp
cmpsl
stos
jmp
xlat
add
push
jge
mov
hlt
and
cmpsb
clc
lret
mov
loope
lock
fstpl
mov
jns
mov
push
mov
inc
or
xor
or
xchg
lods
out
jecxz
jg
mov
mov
out
aad
jnp
addr16
enter
mov
mov
scas
push
adc
sub
int3
push
push
or
movsb
mov
ljmp
mov
gs
enter
push
pop
xchg
leave
jmp
out
jge
aam
popa
or
dec
daa
in
cs
jae
jl
sbb
cltd
scas
mov
in
jne
lds
int
sarb
lahf
and
xchg
stos
sub
stos
cmpsl
jbe
out
js
mov
repnz
adc
and
clc
outsl
adc
jns
sbb
std
jae
xchg
push
fucom
sub
scas
icebp
dec
jg
int3
call
jns
nop
add
mov
test
pusha
xchg
repz
pop
mov
fisubrl
add
imul
and
ljmp
mov
mov
or
adc
ss
movsb
sbb
xchg
rcll
les
jge
adc
mov
fprem1
into
cmc
ficoml
inc
xor
popl
ds
and
lea
xor
popa
xchg
mov
imul
repz
sub
cmpb
jmp
push
cmc
rorb
shlb
ljmp
dec
add
test
movb
insb
lds
cmpsb
pusha
add
fcompl
xor
xlat
in
fnstenv
mov
aad
push
and
call
pop
adcb
mov
cwtl
fst
jnp
pop
or
les
mov
xchg
pop
loope
jl
xor
cmp
aas
or
jecxz
ds
scas
fbld
jl
pushf
clc
das
mov
cld
rorb
xchg
out
test
inc
push
push
call
jno
adc
shl
test
xchg
test
jle
mov
fists
jno
cwtl
cld
clc
or
push
movsb
lcall
insl
fdivs
les
inc
xor
mov
mov
inc
fmul
rcrb
pushl
insb
out
inc
add
dec
mov
push
cld
pop
pop
call
sbb
scas
mov
arpl
clc
lcall
pop
movsl
sub
pop
test
push
sti
mov
daa
mov
pusha
test
int
fiadds
jp
sbb
int3
inc
insl
adc
mov
mov
cwtl
mov
stos
movsb
test
dec
xchg
inc
xchg
jg
gs
mov
xchg
fidivl
pop
push
fs
jno
ret
movnti
push
push
mov
fnsave
inc
jae
lahf
inc
xor
insb
jns
jecxz
leave
adc
out
test
fistpl
cmp
xchg
js
sub
pop
leave
xchg
mov
adc
xchg
adc
lock
mov
adc
aam
sarl
loopne
cmpl
fcmovb
sub
movsl
xchg
xor
xchg
cmp
mov
in
inc
inc
lret
lret
shll
ror
and
mov
test
pop
mov
clc
test
andb
mov
pop
mov
xchg
sbb
std
jne
push
imull
loope
dec
push
mov
sub
out
daa
jno
sti
jp
dec
lods
jmp
push
xchg
dec
mov
std
insl
call
inc
rorl
clc
add
xor
jnp
jbe
mov
push
test
xchg
adc
push
mov
lea
cwtl
cwtl
clc
and
push
pop
bsf
repz
scas
dec
fmull
cli
lret
aaa
std
inc
inc
jecxz
dec
or
dec
sbb
punpckhbw
inc
int
mov
inc
mov
push
pop
mov
cmc
adc
or
test
cmp
mov
call
jns
mov
and
cwtl
push
lea
sub
jbe
push
loope
cmp
mov
in
sbb
ja
inc
in
mull
adc
dec
dec
ss
in
aaa
or
enter
push
imul
movl
jp
cli
mov
cmpl
inc
sbb
jne
dec
cmp
pop
sahf
bound
std
stc
lods
pushf
mov
push
stos
clc
aaa
out
xchg
jmp
in
cmp
sbb
sbb
push
xor
int3
push
fstpl
ss
jb
or
in
dec
adc
sub
js
dec
lods
aad
adc
test
or
arpl
mov
xor
lcall
inc
imul
dec
sbb
in
loopne
add
lods
outsb
push
fsubl
sub
xor
pop
int
loop
sahf
jl
imul
ss
jl
xor
shl
mov
jp
lds
enter
dec
movsl
ret
daa
cmpsl
arpl
pop
mov
cmp
push
rcr
and
je
or
bound
sub
iret
push
inc
aad
cltd
cmpsb
outsl
xchg
push
ret
jnp
mov
and
xchg
out
insb
stos
imul
xor
or
push
inc
arpl
fucom
pop
push
fwait
pusha
cmp
and
ret
popf
cmp
idiv
cmpsb
jp
push
mov
aaa
aam
or
int
adc
adc
rorl
addr16
movsb
ret
loopne
in
lock
into
int3
stc
dec
mov
movsl
cmpsl
lcall
scas
movb
in
adc
mov
inc
lahf
pusha
insl
into
mov
lret
push
roll
js
pop
lea
sbb
jmp
fcomip
dec
and
aaa
jne
push
push
inc
repnz
and
add
xor
sbb
aam
fsubrl
fwait
jg
xchg
inc
sbb
cmp
repz
fdivrs
inc
pop
insl
mov
push
pop
inc
fnstcw
lods
xchg
mov
inc
jo
rorl
aad
pop
xlat
or
je
or
jg
xchg
fcomip
cmpsl
ljmp
lahf
adc
addr16
adcb
inc
xlat
mov
sub
stos
push
sub
aas
out
fistpl
int3
movsb
xchg
push
stc
lea
mov
xchg
out
aas
movsl
sbb
out
leave
mov
jmp
fistl
shll
imul
xchg
ja
jns
mov
int3
fdivr
leave
lock
in
jmp
mov
enter
pop
mov
rcrb
pop
pop
fsubl
pop
scas
test
cmpl
insb
testl
cmp
aas
sbb
sub
popa
mov
jnp
push
sahf
pop
sarb
addr16
shrl
lods
jns
ljmp
imul
scas
inc
sbb
call
inc
mov
es
ret
jns
ss
outsl
test
insb
adc
sub
insb
cmp
mov
mov
pop
pop
cmp
or
mov
aad
and
or
xchg
ss
in
dec
iret
je
pop
add
in
or
cltd
mov
mov
inc
sahf
data16
sbb
xor
enter
mov
loop
call
jge
cmp
hlt
push
and
xchg
rcrl
push
pop
ljmp
jl
mov
cmp
inc
das
inc
repnz
jns
push
or
push
jno
sub
inc
daa
orl
ret
stos
lea
ja
mov
arpl
rorl
push
sbb
adc
add
add
repz
xlat
aaa
movsl
pop
rcll
sub
fisubl
cmpb
ret
jmp
mov
push
dec
iret
push
and
cmp
jb
mov
mov
mov
sbb
cmpsb
xchg
mov
scas
pop
cmp
sti
and
push
sub
roll
xchg
addr16
xchg
jo
xchg
and
insb
add
inc
jae
popf
ret
xrelease
rolb
les
aas
scas
test
mov
ss
std
lcall
std
ret
adc
inc
fnstsw
mov
fmull
repnz
testl
hlt
test
mov
push
push
add
inc
aad
inc
jae
jae
mov
mov
xchg
mov
outsb
repz
enter
adc
aam
mov
cmpsb
fisubs
jbe
mov
pop
shll
pop
pop
xor
call
cmc
mov
mov
mov
imul
cmp
adc
aad
pop
imul
lea
sbb
inc
cmp
inc
pop
jmp
int
inc
dec
flds
popf
in
bnd
add
mov
push
movsl
cmp
pushf
in
or
cmp
addr16
ljmp
dec
jnp
dec
inc
mov
or
mov
jne
mov
outsb
icebp
add
jae
xchg
and
add
gs
lcall
rcll
lar
xchg
or
dec
lods
add
mov
test
mov
data16
dec
les
aad
dec
push
jo
mov
dec
inc
push
loope
dec
out
mov
xor
cli
xor
mov
shlb
rcll
jbe
fbld
jmp
inc
rorb
and
fucomip
push
jl
pop
xor
sbb
jge
xchg
jo
push
fs
sub
ss
mov
or
into
in
shr
or
inc
xchg
inc
cmp
into
sbb
adc
add
mov
int
add
xchg
lret
pushl
shrl
adc
mov
sbb
jns
insb
jmp
jno
imul
sti
mov
dec
in
xorb
sbbb
cmpsl
and
xchg
fisttps
out
cwtl
sar
ficompl
pcmpeqb
inc
fchs
xchg
aaa
push
stc
mov
aas
mov
scas
dec
lret
loopne
push
push
mov
add
in
xchg
mov
dec
decb
cmc
inc
sub
insb
jge
push
cmp
ja
lcall
xchg
testb
out
mov
inc
cmp
cli
jae
sub
pop
mov
add
shlb
call
shrb
inc
outsl
out
sbb
adc
mov
dec
jno
repz
adc
fiaddl
add
test
pusha
je
cmc
push
dec
iret
lret
xor
jle
sub
pop
testl
dec
mov
sub
xor
jmp
in
dec
pop
dec
push
add
ret
mov
lods
les
das
fwait
jle
add
repz
data16
je
push
out
movsl
aad
mov
add
shr
or
or
jl
mov
cld
dec
stos
adc
inc
not
mov
and
jbe
cltd
sahf
or
mov
mov
fnstcw
mov
sub
xchg
js
js
mov
pop
cmp
push
cld
subl
pop
cli
lret
xor
xchg
mov
mov
rcrl
sarl
stc
repnz
lcall
mov
ret
lods
out
xor
mov
mov
xor
lock
stc
ret
jae
sbbl
cmp
jnp
test
jns
pop
xchg
sub
dec
out
cmpsl
shrl
push
inc
fs
sub
subb
jno
imul
aam
in
andl
jo
cwtl
cmp
adc
loopne
daa
aas
jb
mov
mov
mov
in
aam
sbb
inc
xchg
mov
pop
outsb
or
jp
aam
in
xchg
add
mov
das
scas
cmp
int3
insb
fwait
stc
std
jne
xor
imul
sti
push
mov
lock
jnp
jae
xchg
dec
testb
lret
dec
pop
rorb
aas
lds
pop
movsl
cmp
ljmp
jno
pop
mov
in
mov
je
pop
leave
call
lea
mov
and
or
xchg
enter
cmp
pop
mov
xor
sub
push
int3
pop
sti
cli
rorb
dec
adc
pop
call
mov
mov
call
add
mov
popf
andb
xchg
push
xchg
push
subb
xor
arpl
adc
pusha
aaa
jp
arpl
in
mov
add
jae
jecxz
std
cld
add
push
xchg
dec
jb
in
jl
je
push
inc
fldt
sub
add
xchg
into
mov
dec
and
loop
outsl
pop
and
jo
adc
and
mov
push
fiadds
out
pop
pop
inc
xchg
stc
pop
imul
stos
repz
add
sbb
xchg
mov
pop
push
inc
mov
lcall
mov
nop
popa
mov
pop
mov
mov
xor
call
loope
mov
pop
pop
cld
jnp
mov
jmp
push
popl
xchg
mov
enter
inc
inc
mov
sub
add
fs
out
cmp
add
inc
ja
sbb
ret
in
incb
dec
push
les
fs
out
jbe
dec
and
sbb
pop
cwtl
or
mov
loopne
jl
jg
mov
aaa
mov
pop
cmc
aam
jnp
mov
lock
dec
mov
mov
pop
fistps
sbbb
push
sbb
les
add
cltd
in
cli
add
les
scas
lock
adc
les
in
call
dec
xor
xlat
jg
sub
push
notl
sahf
push
fcomps
xchg
jb
xor
cmp
std
add
jo
lcall
inc
jl
sub
and
adc
mov
xor
jle
std
pop
add
icebp
mov
lret
rclb
adc
mov
daa
push
test
pushl
add
cmpsl
cmp
ljmp
std
rcrb
sub
lds
fldenv
andl
test
enter
adc
sbb
pushf
jne
scas
mov
into
push
cmpsb
idivl
adc
add
jecxz
roll
sti
out
jl
sub
push
int
mov
out
adc
outsb
lods
push
pop
outsl
and
mov
jle
test
adc
inc
iret
aas
sbb
hlt
and
aad
sbb
rcrb
dec
pushf
xor
pop
jge
pop
out
js
or
mov
imul
inc
sub
or
stc
loopne
and
arpl
mov
push
jecxz
pop
in
cmp
sub
sub
add
sbb
fwait
pop
xchg
sarl
jb
insl
sbb
lods
push
cltd
call
jp
insl
stc
pop
inc
imul
pop
lods
cmpsl
xor
and
push
dec
mov
or
imul
scas
fstpl
pusha
clc
jns
fildl
jp
imul
mov
inc
rcrb
push
sbb
loopne
jnp
imul
pusha
outsl
mov
test
mov
loop
push
cmp
lods
xchg
popf
jl
lret
rcll
ret
js
cltd
xchg
jg
push
inc
sbb
push
sub
jle
pop
or
and
pop
shlb
push
and
mov
lds
push
out
dec
mov
mov
add
stc
out
inc
jmp
shlb
inc
lcall
push
inc
sub
jnp
sbb
jae
add
bound
inc
loope
push
mov
test
jl
in
push
cld
pusha
xor
imul
adc
mov
loopne
jo
enter
dec
scas
or
push
test
in
sbb
stc
and
clc
xchg
imul
dec
lods
xchg
mov
gs
jne
inc
adc
ds
gs
outsb
jb
orl
lods
mov
mov
dec
pop
insl
cld
dec
and
inc
scas
jbe
fisubl
sbb
adc
pop
in
cmp
xor
cmpsb
lods
push
mov
loop
mov
xlat
lea
pop
or
or
inc
mov
push
push
in
cmp
mov
loop
sub
adc
mov
js,pt
and
pop
dec
push
adc
push
ret
and
xor
outsl
sti
popf
sbb
cmp
arpl
mov
push
mov
les
adc
int
xchg
mov
aam
into
xor
push
xlat
jecxz
xor
arpl
push
inc
lahf
in
int
jne,pn
lret
sti
jne
sbb
shrb
xorb
and
les
cwtl
jb
jge
pop
insl
cmp
and
push
mov
gs
ret
pop
sbb
sub
enter
adc
sub
iret
jnp
sti
cmpsb
dec
sub
cmpb
sarb
imul
imul
in
in
mov
add
inc
or
lea
xor
mov
ljmp
ljmp
pop
adc
lock
sub
ret
gs
ljmp
cmp
scas
and
push
lret
test
inc
ljmp
inc
leave
add
xchg
mov
call
movsl
rorl
xchg
je
add
inc
sub
subl
jecxz
jmp
lret
jl
lea
dec
shlb
bound
sub
inc
or
mov
pop
or
mov
pop
lds
es
jo
sbb
call
pop
aas
mov
in
ja
mov
pop
and
mov
or
xlat
mov
aas
add
lea
loope
es
add
add
add
dec
es
xchg
mov
xor
jg
icebp
daa
pusha
ss
in
stos
adc
mov
sub
jo
movsb
jb
push
mov
mov
mov
pop
cmc
sub
xor
je
imul
push
jno
sahf
adc
je
pop
pop
jns
pop
test
cmp
mov
pusha
daa
mov
xor
mov
lcall
aas
stos
jle
jmp
sbb
sub
mov
sub
mov
shl
xchg
mov
fcmovu
pop
xchg
mov
adc
movl
jp
hlt
cmpl
push
push
sbb
cmp
roll
lahf
cmpsl
repz
pcmpeqw
mov
mov
inc
jnp
jmp
cmp
cmp
adc
dec
arpl
sbb
imul
mov
mov
cli
dec
mov
xchg
ret
mulb
mov
sahf
push
mov
or
and
je
push
pop
add
movsb
nop
movsl
sahf
inc
xchg
ss
push
sub
dec
divl
or
add
and
mov
pushf
pop
sub
mov
cmp
jno
mov
xchg
sub
hlt
loopne
or
inc
rol
test
lods
pop
xchg
fimuls
xchg
cmp
and
faddp
leave
out
or
rcll
ja
mov
mov
jnp
push
inc
test
stos
movsb
adc
fisubrl
sbb
mov
pop
orb
fsubrs
and
push
ret
fwait
andb
cmc
enter
pop
in
test
aaa
scas
lcall
mov
fldenv
out
add
es
pusha
jne
outsl
test
xchg
xlat
out
int
mov
mov
sahf
or
rcr
inc
aam
adc
jmp
outsl
lods
es
sub
lea
mov
lret
loope
mov
addb
aas
jno
and
mov
cmp
push
pop
add
mov
mov
xchg
dec
test
mov
mov
stc
or
inc
xor
sub
or
mov
mov
mov
scas
loope
or
fwait
sbb
or
movzbl
adc
adc
dec
cmp
ret
and
ljmp
and
xor
xlat
hlt
mov
enter
mov
jecxz
dec
rorl
cmp
inc
xor
shrl
out
das
fcoml
jb
push
push
mov
jnp
xchg
sbb
lds
jno
sub
add
imulb
fistps
pop
gs
add
mov
add
notl
mov
lods
jg
xchg
xor
aaa
pushf
xchg
aas
int
push
dec
or
loop
clc
fbld
pop
sbb
push
xor
fisubrs
sub
shlb
jb
shlb
sti
mov
daa
add
fdiv
mov
and
xor
cmp
or
and
xchg
xchg
int3
out
jns
movlps
mov
scas
xchg
fstps
test
inc
mov
fisubrl
cmpsb
adc
xor
adc
out
and
adc
gs
test
xchg
das
dec
push
fcomps
sub
outsl
mov
shl
fbstp
out
mov
pop
daa
sbb
test
std
push
cmp
dec
int3
lock
test
or
stos
pop
loop
jb
mov
xchg
jg
cmp
fimuls
test
out
gs
lcall
push
sbb
jb
mov
ds
mov
inc
mov
fists
dec
fidivrl
mov
shlb
mov
popf
int
and
stos
sbb
out
push
mov
shlb
scas
or
inc
mov
mov
fucomip
mov
dec
fimull
xchg
mov
pop
aas
fidivrl
sahf
stos
jg
ss
cs
sahf
push
mov
cmpsl
inc
scas
add
dec
mov
jg
pusha
daa
fdivs
sbb
xchg
arpl
adc
and
call
frstor
fildll
pop
loopne
push
pusha
mov
ret
fdivl
insl
jle
out
and
orb
and
movsl
xchg
stos
test
push
cld
cmp
dec
mov
movsl
repz
xchg
int
js
inc
inc
push
aaa
mov
int
mov
in
enter
movsl
shlb
add
cmp
dec
sub
push
insl
mov
dec
pop
inc
mov
out
aaa
daa
or
sti
repz
adc
das
push
pop
xchg
pop
sub
mov
jne
sub
mov
sub
bound
xor
lret
dec
pop
int
xchg
cmp
mov
imul
cmp
mov
dec
subl
pop
cmp
push
jge
lock
stos
add
mov
test
adc
or
mov
cmp
push
jno
xchg
push
ret
loopne
mov
push
jg
jg
jo
lret
aas
inc
dec
add
adc
jmp
cmpsl
hlt
std
adc
push
movl
and
imul
lcall
cli
imull
mov
mov
xlat
pop
inc
cmp
sbb
xchg
xchg
sbb
or
imul
test
daa
push
or
test
mov
sub
js
push
add
je
decl
pop
cmp
leave
lahf
stos
in
sbb
sub
notl
fstpt
lds
mov
pop
data16
pop
xchg
dec
lock
fcomps
iret
xlat
and
cmpsl
or
xchg
cld
ret
add
or
dec
and
in
insl
and
aaa
jno
lock
sbb
pop
mov
stc
jb
mov
fidivl
icebp
jp
add
push
jb
ljmp
jecxz
shll
mov
inc
stc
nop
push
or
adc
push
test
cmp
pop
ss
mov
pop
cmp
xchg
fwait
cmpsb
rcrb
sub
lds
arpl
cmpsb
subl
nop
sbb
cli
push
xor
xchg
adc
xchg
jns
cmp
test
cltd
in
sbb
stc
ret
jg
push
movsl
pushf
jno
cmpsb
cmpsl
xor
movsl
mov
xor
lcall
sbb
cld
popa
mov
outsb
loope
xchg
test
pop
aam
adc
pop
pop
cmpsl
std
stos
fsubrs
adcl
push
das
jae
iret
fists
mov
push
jl
cmpsl
cmpsb
jns
inc
movsl
or
jae
push
mov
mov
dec
repnz
popa
jecxz
hlt
pop
and
xchg
adc
mov
out
adc
dec
jne
bswap
cmpb
repnz
add
mov
loop
pop
jmp
xchg
aad
shll
jmp
mov
pushf
in
nop
dec
stos
les
jnp
mov
pop
mov
inc
sbb
in
push
sub
mov
jnp
outsb
addb
mov
jns
cmp
lret
stos
inc
mov
dec
jp
test
or
inc
loope
cmp
and
push
aaa
pop
dec
int
outsb
push
pop
test
aam
cmp
and
push
inc
pop
test
ret
sub
pop
stos
xor
cmpsb
jo
cmp
inc
jmp
pop
xchg
and
inc
xchg
mov
and
xchg
insb
sbb
cli
jle
out
or
lcall
sub
and
dec
popa
out
stos
or
jns
jne
ficomps
push
add
xchg
jp
out
enterw
lahf
sub
loope
or
inc
mov
icebp
push
push
jb
lea
jle
inc
mov
push
sub
lock
int3
xchg
outsb
sbb
xabort
orb
push
jbe
ret
clc
outsl
stos
pop
fldenv
mov
push
int
cmpb
sub
popf
inc
cmp
adc
das
sbb
das
mov
inc
aam
lret
mov
sub
pusha
call
or
not
clc
push
imul
xchg
xchg
add
mov
jbe
mov
mov
mov
jecxz
cs
sbb
fdivl
fimuls
orl
in
cs
aas
sub
push
icebp
sbb
cwtl
lea
mov
fs
pop
les
out
notl
lods
add
gs
sub
mov
inc
pop
mov
ljmp
ljmp
iret
pop
mov
mov
xchg
sbb
insb
sbb
or
pushf
jnp
idivl
jecxz
leave
mov
imul
adc
lods
or
jne
inc
int3
mov
roll
push
mov
leave
push
mov
xlat
push
push
and
push
ret
leave
xchg
inc
ret
xor
orl
imul
insb
and
popf
lds
dec
js
sub
mov
adc
std
repnz
jae
movsb
mov
sbb
rclb
xor
pop
xor
inc
call
dec
fucom
xor
data16
orb
out
test
fcompl
cmc
jae
pusha
fmuls
mov
or
das
lret
xor
sahf
jae
dec
xor
hlt
js
daa
jmp
add
dec
pop
lods
fnsave
test
cmp
int3
xchg
jge
add
fwait
mov
cmp
pusha
out
test
lock
adcl
das
xchg
shll
push
mov
sbb
mov
movd
sub
data16
adc
loope
rcrb
icebp
push
stos
pop
faddl
dec
and
sahf
out
mov
daa
movsb
loop
fldt
or
add
imul
int3
dec
inc
mov
test
repnz
xor
sub
or
ljmp
out
jae
mov
divb
movsl
cmp
sbb
addr16
or
jns
jno
mov
push
cmp
mov
addr16
out
inc
pop
inc
insb
mov
out
mov
addr16
push
inc
nop
hlt
out
cld
movsl
inc
js
push
xlat
inc
gs
ja
push
test
movsl
sahf
pop
xchg
addr16
xlat
push
aaa
sub
and
jnp
dec
adc
xorl
pushf
sbb
lcall
mov
xor
xor
cmp
cmc
or
inc
sub
dec
out
imul
push
jge
add
les
jl
cmp
outsb
out
imul
dec
cwtl
cs
testb
insl
jns
hlt
mov
gs
pushl
cmpl
push
fwait
and
lahf
push
adc
enter
push
dec
out
sub
mov
and
mov
xor
cltd
pop
mov
testb
add
cmp
rcll
lea
push
divb
fwait
pop
ja
xchg
xor
cmp
lcall
jbe
fcomps
sbb
adc
inc
sub
lea
lds
scas
subb
push
mov
lea
pop
clc
outsb
dec
shlb
mov
and
fstl
adcb
lds
out
jl
hlt
add
test
push
lahf
in
cmp
sub
lret
xchg
xor
pop
mov
jb
hlt
mov
jecxz
or
outsb
addr16
xchg
fists
sti
xchg
jno
popa
mov
das
add
xor
fdivrl
mov
mov
jne
es
cmp
or
cmp
mov
add
rcrb
hlt
jl
js
pushf
mov
test
sbb
lods
pop
mov
int
js
ret
aaa
mov
mov
mov
mov
loop
das
sbbb
mov
dec
mov
pop
mov
fnstsw
push
and
xchg
loope
test
out
nop
hlt
xchg
mov
shld
out
icebp
xchg
dec
lcall
jmp
out
xchg
inc
aas
fnstsw
pop
divb
inc
fistps
and
mov
lret
push
shlb
shll
dec
sub
cli
jbe
ss
inc
fiaddl
fistpll
sarl
and
and
mov
stos
test
mov
mov
mov
sub
lods
int
int
in
push
ljmp
mov
pop
pop
sahf
cmpsl
push
inc
jl
fwait
add
sarl
sub
push
data16
or
push
jg
in
cs
aam
leave
push
mov
adcl
and
mov
lcall
sbb
fsubs
xchg
and
aaa
cmp
mov
pop
xchg
and
dec
or
jae
jg
or
enter
jne
call
push
call
ret
dec
pop
stos
cs
and
adc
xor
push
jmp
mov
dec
inc
gs
dec
dec
aas
into
stc
ss
arpl
aad
cld
mov
or
mov
mov
fldcw
sub
push
xchg
pop
xor
testl
xlat
push
mov
xlat
add
add
and
das
add
shrb
leave
int
pop
call
and
mov
lret
insb
mov
lds
sti
sub
or
and
insl
push
push
sbb
fistpll
lcall
mov
ja
sbb
in
fsubp
daa
and
addb
nop
push
adc
dec
mov
cmp
or
mov
in
mov
imul
jle
mov
out
lcall
jb
insb
push
mov
test
fsts
cmpsl
mov
push
mov
fwait
sbb
inc
call
sbb
ja
lods
inc
aas
add
lcall
ret
repnz
add
inc
or
xchg
mov
rcll
mov
ret
or
dec
iret
jbe
dec
dec
cmpsl
dec
pop
jbe
addb
sbb
stc
add
sbb
adc
lds
popa
adc
fstl
in
mov
inc
das
mov
mov
std
cmp
mov
mov
sbb
adc
aaa
and
mov
enter
pop
in
testb
pop
or
or
mov
imul
outsb
sub
imul
mov
les
and
push
mov
push
xchg
mov
lea
add
andl
push
dec
and
adc
lcall
stc
push
fldenv
das
out
dec
lds
stos
sub
cli
dec
jecxz
stos
iret
repnz
cwtl
popa
fldl
pushl
shl
into
push
push
or
sub
out
into
pop
jmp
or
outsl
mov
gs
dec
lret
xchg
cmp
lcall
or
inc
xchg
insl
js
or
xor
add
xchg
and
dec
arpl
xor
inc
dec
mov
dec
cmpsb
aad
pop
inc
insl
jne
enter
rclb
sbb
testl
inc
loopne
adc
xor
mov
bound
fcmove
pop
das
adc
repz
insb
sbb
dec
adc
xor
mov
cmpsl
pop
aam
mov
and
or
or
ja
dec
leave
mov
mov
cmpb
or
inc
negb
mov
inc
jmp
lret
out
cltd
push
icebp
and
xor
lret
gs
jp
aad
rcll
int3
inc
pop
lahf
lock
ret
mov
fwait
aaa
dec
lahf
lret
test
xchg
mov
or
or
sbb
insb
and
mov
out
adc
dec
ret
or
repnz
cmp
fldl
jae
int
xchg
lahf
jae
sub
adc
jno
dec
mov
mov
jno
inc
jecxz
cmp
les
loopne
jbe
scas
inc
fistpl
popa
push
mov
maskmovq
testl
bound
in
loopne
leave
insb
into
hlt
sarl
in
leave
pop
dec
out
mov
mov
mov
mov
call
inc
xchg
mov
cs
mov
adc
and
xor
pushf
sub
in
sbb
sub
incb
mov
mov
lahf
and
pop
and
and
orl
shrl
inc
add
cltd
out
cmp
std
dec
push
mov
out
xchg
out
sub
outsl
adc
test
gs
add
dec
dec
sub
lcall
or
imulb
mov
mov
inc
mov
or
adc
mov
ss
xchg
cmp
dec
mov
mov
in
mov
push
push
aad
aad
xchg
jecxz
xchg
in
lret
mov
dec
jmp
xchg
xchg
xor
or
cmp
ss
push
int
mov
inc
cmpsl
shll
push
loop
cmpsl
and
mov
pop
jae
adc
add
mov
shrl
push
int3
and
stos
mov
adc
sahf
dec
mov
cmpl
pop
adc
pop
xchg
insb
and
arpl
sbb
mov
mov
sub
aad
mov
mov
test
xlat
inc
ja
ret
pop
les
mov
add
jl
lcall
je
cld
fbstp
fbld
push
xor
cmc
mov
dec
loop
js
rcpps
add
mov
out
imul
adc
sbb
cwtl
xor
push
clc
lahf
push
xchg
jae
test
in
shlb
jo
mov
or
aam
lea
and
mov
bound
outsl
cmp
add
fnstcw
mov
test
addr16
mov
push
lret
cwtl
vmread
daa
jecxz
aaa
push
popf
addr16
aaa
and
lahf
push
add
stos
sbb
sti
dec
leave
mov
fwait
xlat
sbb
or
andb
dec
pop
hlt
xchg
in
dec
or
rorb
cmp
inc
shl
mov
cmp
daa
hlt
xlat
add
cmp
xchg
xchg
xchg
cld
inc
arpl
or
lcall
lret
sbb
mov
cmp
sub
lret
pop
dec
lea
lods
notl
test
sti
inc
test
mov
cmp
cmp
adc
mov
je
insl
mov
fdivs
jb
xchg
rorl
or
pop
pop
mov
fsubr
in
cmp
sbb
push
sbbl
xchg
adc
sbb
inc
add
xor
mov
and
cmc
jl
mov
jbe
in
or
fdivl
mov
das
push
xor
fwait
mov
jo
mul
adc
ja
lahf
xor
xor
dec
mov
jns
jae
popf
add
notb
shll
dec
cmpsb
scas
mov
stc
and
test
push
xor
shl
inc
push
adc
mov
or
test
sbbl
sar
push
imul
push
or
lahf
lahf
inc
ss
and
icebp
pop
mov
sarb
dec
jb
imul
adc
sub
sub
jo
les
xchg
fcoml
aaa
jl
mov
out
dec
repz
adc
sub
sbb
enter
add
jne
push
lret
lods
repz
sbb
jg
cmpsb
cld
mov
and
mov
icebp
ss
addr16
sbb
mov
push
mov
cmp
cmp
lods
aas
pushf
and
push
outsb
adc
jl
cmp
push
rorb
push
jg
xlat
rcl
jl
jmp
push
mov
mov
push
fstps
sub
rcll
out
mov
cwtl
sbbb
mov
jbe
lcall
test
into
jge
and
jae
adc
cmc
fiadds
push
xor
jecxz
testl
sti
xchg
mov
jne
or
imul
scas
add
stos
ret
lcall
jno
std
shrl
inc
add
pop
cmp
inc
dec
xor
mov
inc
out
imul
pushf
cmp
cmpsl
fcoml
sti
mov
xor
add
fs
cwtl
push
iret
fidivs
loope
rorl
push
rol
movsl
subb
jge
popf
mov
push
in
shlw
popa
pop
mov
fimuls
rclb
add
and
push
xchg
dec
cwtl
in
cmc
lods
pop
stos
ljmp
addr16
pop
data16
add
xchg
into
jbe
mov
scas
mov
adc
aaa
in
xorl
sbb
mov
pop
mov
int
mov
mov
mov
dec
xchg
jl
lds
je
rcrl
cwtl
xor
in
mov
add
stos
sbb
push
in
mov
popf
or
mov
mov
out
dec
jne
and
mov
lock
shll
mov
movsb
or
les
cwtl
sbb
inc
push
sbb
dec
push
mov
icebp
jg
fs
mov
sbb
cmpsb
adc
mov
mov
lds
mov
xchg
jmp
cmpsl
data16
sbb
pop
fnstenv
cld
cmpsb
mov
int3
cs
or
push
out
movsl
andb
js
lret
mov
scas
xchg
stc
sbb
popf
add
inc
idiv
xchg
mov
imul
cmp
and
pop
std
push
dec
xor
fnsave
mov
neg
pushf
pop
pop
xor
cmp
ds
aas
rorl
jne
and
mov
stos
imul
push
cmpsb
and
out
cmp
nop
arpl
xchg
mov
inc
cmpsl
or
pushf
jl
test
andl
mov
adc
push
inc
mov
xor
sbb
or
ja
loopne
jl
lods
daa
mov
sbb
ja
mov
pop
cwtl
scas
ret
shr
mov
les
sub
fadd
push
or
push
mov
mov
inc
jb
jle
js
fwait
or
divb
pop
xlat
jp
adc
pop
dec
out
push
jne
or
jge
stos
cmp
adc
cmp
les
dec
rorl
nop
jmp
xchg
call
imul
cs
mov
dec
cmpsl
cmp
xchg
or
mov
es
jmp
movsb
mov
pop
dec
hlt
inc
push
mov
jmp
xchg
aaa
mov
imul
imul
mov
sub
xchg
pop
fs
hlt
aas
fbstp
out
fs
cmp
dec
push
sbb
mov
fwait
insl
mov
sub
imul
addl
sub
or
mov
cwtl
push
xchg
lods
subb
lea
sub
scas
repnz
mov
or
imul
fnop
jo
jb
mov
pop
mov
mov
inc
aas
lret
jle
icebp
adc
scas
fimuls
stos
mov
mov
adc
push
mov
push
xchg
xor
clc
and
sbb
xor
and
add
movsl
adc
push
sub
xor
adc
fidivrs
fadd
mov
stos
xchg
cmp
xor
adc
mov
mov
cwtl
cli
or
adc
std
test
popf
add
les
popf
aaa
mov
dec
stc
push
lods
outsb
scas
popf
lods
jns
cs
dec
sbb
mov
outsb
lret
dec
iret
ljmp
cltd
mov
scas
sbb
push
ss
popaw
test
mov
or
in
cmp
adc
test
lret
sbb
ret
pop
addr16
mov
repz
or
pop
pop
adc
cmp
inc
cs
lea
cmpb
dec
test
mov
mov
je
out
push
fidivl
dec
lret
inc
test
rcrl
xchg
cmp
clc
sub
bound
fcmovnbe
mov
add
mov
popf
out
insb
les
pop
mov
out
arpl
je
arpl
xor
xchg
sub
cwtl
sub
pop
inc
mov
xor
test
cmp
rorb
mov
shll
inc
inc
dec
adc
pop
lods
sahf
neg
and
jno
repz
repnz
inc
pop
inc
mov
inc
xor
mov
lret
sub
cld
mov
pop
lret
mov
xor
mov
adc
into
push
aad
cmc
stos
lea
mov
sub
pushf
mov
xor
dec
cmp
dec
aad
push
dec
idivl
adc
cwtl
add
jmp
ljmp
movsl
add
leave
mov
jle
adc
add
iret
pop
adc
fucomp
push
cmpsb
jbe
xchg
rcr
std
ja
jb
mov
push
ss
sub
test
mov
jno
dec
lods
das
in
aaa
shll
and
jbe
loopne
xchg
loopne
ljmp
sub
loope
sbb
rclb
test
mov
mov
mov
add
mov
cltd
mov
test
and
xchg
andl
lods
sub
es
mov
push
mov
paddb
lret
mov
jno
inc
roll
sub
sub
dec
fwait
repnz
imul
lret
imul
jmp
adc
or
jge
bound
pop
mov
ja
outsb
sbb
movsb
adc
mov
add
out
js
add
out
dec
out
out
mov
cli
sbbl
ss
push
scas
in
sub
and
leave
cmpsb
push
cmovae
mov
in
mov
rorl
push
xchg
cmpsl
inc
orb
into
dec
and
in
mov
cmp
popf
sahf
jo
mov
lods
mov
mull
xchg
js
mov
insb
fimuls
mov
or
fs
inc
sbb
push
xorb
jmp
jge
push
sub
fdivrs
xchg
cwtl
mov
rorl
jecxz
mov
mov
xor
sbb
add
out
dec
loopne
es
adc
pop
aam
ret
cmp
mov
xor
jne
setns
sbb
stos
std
out
pop
cmpb
cli
cmp
cmp
outsl
jno
add
les
push
vrsqrtps
xchg
cmp
test
and
mov
add
cmp
loopne
lret
data16
lock
aas
sub
out
std
lret
dec
mov
mov
bound
sub
fidivs
dec
cmpsl
mov
mov
mov
sar
lret
mov
in
mov
xor
outsl
rcrl
ds
and
xchg
icebp
push
xor
mov
inc
mov
jns
hlt
push
add
lret
addr16
pop
add
cli
mov
mov
or
or
cmp
int3
mov
pop
es
ss
pop
sti
add
and
mov
xchg
bound
iret
das
mov
or
fwait
cvtps2pi
loope
aas
roll
pop
clc
push
jb
adc
fidivrs
adc
fisubl
xor
push
cmp
or
loop
dec
clc
js
out
inc
movsl
xchg
shlb
shll
scas
sti
add
inc
fisubrs
cld
inc
sahf
mov
lods
pop
mov
sub
xchg
jp
adc
lret
adc
jp
push
aaa
mov
mov
dec
mov
jae
pop
repz
inc
push
scas
cmpsl
jmp
shrb
enter
inc
std
push
mov
sub
call
or
jp
pop
xchg
out
hlt
mov
loopne
pop
sub
xchg
rcr
lret
mov
aaa
insb
test
sahf
sub
rep
lock
cli
test
adc
data16
mov
add
cmp
std
mov
sbb
fbstp
adc
pop
dec
pop
cmp
jnp
jmp
jge
insl
inc
mov
mov
insl
rolb
inc
cmpsb
ljmp
jbe
xchg
mov
je
dec
xchg
adc
push
cmp
inc
jbe
std
mov
pop
jg
dec
add
rorb
cli
rcrb
or
into
aam
std
and
aam
mov
loopne
aam
stos
adc
lcall
out
add
pop
hlt
in
cmc
shrl
xchg
scas
mov
xor
pop
aaa
pushf
pop
add
xchg
fmuls
cmp
and
std
sbb
jg
ficoml
xor
adc
cmp
clc
jnp
push
ret
repnz
ds
xchg
scas
mov
enter
adc
mov
dec
arpl
loope
xchg
push
or
insb
lock
jo
ret
in
bound
scas
dec
rcl
pop
push
sbb
stos
mov
gs
je
ss
leave
push
sahf
es
loop
mov
add
fs
jnp
adc
sub
outsb
fsubrs
sbb
jle
push
or
insb
pop
jae
inc
xor
inc
push
pop
adc
mov
xor
arpl
test
push
add
or
ds
daa
outsb
dec
sarl
sbb
clc
scas
movsb
cld
in
repz
popa
xchg
inc
dec
inc
outsb
push
sbb
bound
cmc
xchg
push
xor
adc
mov
sub
aaa
js
rclb
sahf
lods
mov
xor
stos
lea
add
mov
or
aam
clc
jb
adc
std
lock
inc
xor
jmp
insl
adcl
add
aas
xchg
push
add
or
loope
scas
jnp
and
fdivrs
popf
adc
push
test
mov
in
adc
shll
jno
insl
sti
push
aad
sbb
out
shr
xchg
add
cmc
enter
sbb
xor
sar
mov
sub
push
mov
dec
nop
xchg
mov
sbb
push
fadd
enter
lods
enter
sahf
imul
pop
sub
mov
dec
dec
pushf
cmp
les
fsubrl
rorl
push
jns
outsb
push
sbb
inc
push
dec
js
ss
jbe
mov
sbb
lcall
inc
iret
mov
aam
xchg
jno
mov
add
jb
pop
pop
xor
adc
ret
sar
loopne
out
cmp
icebp
bound
jmp
test
loopne
xchg
pop
jb
xchg
pusha
lock
sbb
fwait
adc
inc
xchg
and
cld
jo
sets
mov
sbb
and
out
jle
negl
jmp
mov
push
xor
adc
int
movsl
xchg
btr
or
bound
cld
or
aad
ljmp
out
lret
add
sub
inc
bnd
jnp
push
js
mov
mov
cmp
rorl
fistps
subb
xchg
add
and
xchg
jnp
rcrl
leave
aam
pop
sbb
mov
aaa
xchg
mov
push
jle
xor
or
nop
icebp
sub
or
xchg
addr16
test
test
cld
in
inc
cmp
mov
sub
rcrl
sub
push
cmp
lahf
les
leave
and
pop
jae
ss
ljmp
push
xchg
sub
inc
cli
mov
lret
divl
xchg
lret
in
loope
sbb
rorb
and
das
jns
ja
sub
adc
test
mov
cmpsb
sbb
sub
dec
in
push
mov
adc
lea
push
adc
mov
add
adc
negb
dec
sub
or
mov
dec
push
dec
push
scas
jns
testl
lret
std
pop
pop
fs
notl
cmpsl
mov
stc
lods
sbb
jle
and
fwait
movsl
imul
xor
push
mov
outsb
mov
lcall
sub
lea
cmp
sub
mov
adc
pusha
repnz
test
jae
shrb
mov
jb
and
jbe,pt
ljmp
inc
imul
arpl
jl
mov
lea
sub
push
lds
cmp
push
mov
popa
cli
xchg
cltd
out
adc
neg
mov
test
push
test
add
loope
cmp
sub
or
outsb
shl
scas
pop
mov
xchg
sbb
test
push
in
push
xchg
and
or
int
aas
sub
repnz
inc
dec
jno
cmp
pushf
test
scas
mov
sahf
mov
pop
mov
xorb
out
xchg
push
jne
and
and
jns
rolb
in
add
or
or
push
bound
rol
or
fwait
cwtl
xchg
jle
add
pop
push
decb
add
test
mov
in
sbb
adc
dec
movl
mov
mov
enter
jmp
inc
and
inc
daa
push
push
int
mov
pop
ja
jbe
cmpsl
add
out
and
ljmp
xor
aam
push
fcmovb
add
repz
es
mov
mov
nop
loope
pop
data16
daa
dec
enter
adc
cli
or
jl
add
or
in
mov
cs
jp
fcompl
xor
pusha
or
outsl
adc
inc
lock
push
push
ljmp
xor
cmpsl
insb
loope
mov
adc
mov
lods
pusha
add
out
and
adc
dec
push
and
fidivrl
nop
mov
cmp
test
xchg
xorb
mov
mov
adc
fisubrl
push
aaa
mov
dec
pop
sbbl
dec
sbb
shll
dec
cmpl
lds
call
xchg
sub
jp
sub
sub
pop
xchg
dec
das
cs
mov
imul
fisubrs
adc
loopne
cld
fnsave
xorl
loopne
pop
out
jp
lods
mov
lods
filds
pop
add
stc
out
jb
cmpsl
sbb
mov
adc
and
shl
repz
cmc
mov
out
jge
addr16
adc
aad
mov
out
push
pop
mov
mov
aam
icebp
mov
fnstcw
mov
scas
jp
mov
aaa
fwait
mov
cli
xchg
adc
dec
insl
sbbl
or
cwtl
hlt
loop
jne
adc
mov
es
pop
mov
leave
jg
int
addl
pop
mov
vmaskmovdqu
leave
negl
pop
iret
popa
je
xchg
bound
jmp
adc
popf
in
pop
mov
mov
add
add
sbb
repnz
dec
fidivrs
mov
nop
cmp
cwtl
sub
aas
adc
push
push
or
nop
mov
adc
stc
ljmp
repnz
add
cmp
mov
lea
push
or
push
pop
cmp
imul
decl
sbb
mov
imul
jmp
add
xor
call
sbb
test
sbb
and
inc
mov
mov
cmpsb
adcl
add
inc
mov
adc
jne
mov
sub
jge
sbb
sbb
fmuls
loopne
dec
mov
gs
cld
push
sahf
adc
out
xchg
xchg
fidivrl
sub
xchg
leave
dec
push
subl
stos
jae
pushf
aad
aam
repz
lret
mov
out
divl
cmp
sub
sub
sub
mov
jp
lock
lock
mov
data16
imul
lea
jg
stos
icebp
lods
in
fwait
cmpsb
daa
fstpt
scas
sti
xchg
clc
inc
aaa
lock
call
rolb
out
test
inc
xchg
sahf
sub
idiv
pop
mov
into
jecxz
cmp
aam
push
jmp
ret
mov
jae
xor
ret
int
cmpb
push
cmp
jo
sbb
xchg
fdivl
cwtl
jl
aaa
jae
outsb
js
in
add
ljmp
adc
sub
push
mov
sub
test
sub
mov
push
push
mov
lret
ret
mov
into
shl
mov
pop
lea
inc
jg
popf
es
enter
mov
imul
xchg
sar
jp
xchg
mov
mov
mov
stos
jo
mov
scas
es
push
lret
rcr
es
stos
shlb
popl
inc
std
lret
mov
add
and
clc
jmp
dec
mov
sub
jns
jb
sub
bound
cltd
scas
mov
add
jo
lret
mov
sub
ljmp
pop
sbb
dec
mov
icebp
out
jo
scas
insb
fs
inc
test
ja
jmp
push
std
sub
fimull
sbb
dec
out
adc
xchg
insb
scas
subb
popa
test
sbb
push
loop
into
jg
outsl
repnz
pop
cmp
sub
repz
pop
jae
ljmp
imul
xchg
repz
lea
dec
pop
mov
sti
stos
aas
fistl
lret
pop
jp
mov
mul
sub
mov
dec
stc
jg
out
jno
jl
outsl
push
fwait
cwtl
out
dec
je
ficomps
shll
fdivl
in
fstps
mov
call
xor
pop
mov
mov
daa
mov
pop
xor
push
mov
jle
sbb
fwait
jno
outsb
cmp
jne
add
pop
icebp
mov
std
xor
pop
lcall
pop
sbb
test
add
shlb
std
aam
xorb
ret
xor
lock
cmpsb
aam
clc
faddp
call
inc
cmp
fldenv
push
sahf
movl
sub
fistl
xor
std
xchg
in
lock
lret
or
js,pt
mov
scas
jle
pop
push
push
mov
mov
rcll
cli
lock
stos
test
mov
ljmp
lcall
pusha
jo
imul
iret
das
jmp
es
push
push
je
jg
pop
movsb
cmpsb
test
push
jg
xchg
dec
xor
add
xchg
jecxz
cmp
add
mov
insl
push
shl
add
xor
pop
aaa
adcl
or
inc
in
nop
jno
arpl
bound
out
dec
adc
lahf
out
inc
fucom
cmc
add
dec
cmp
mov
test
fimull
outsb
inc
mov
and
pop
ret
sarl
lret
cmp
mov
addr16
xchg
dec
cmp
xchg
dec
lcall
stc
fistl
stos
loop
pop
and
ss
fdivr
mov
test
dec
sbb
inc
or
jmp
jno
adc
mov
jo,pt
stos
sub
pop
push
pushf
inc
sub
cli
mov
mov
pop
jle
nop
les
gs
repz
adc
cmp
sbb
add
inc
or
push
mov
hlt
pop
rcll
push
pop
jb
xchg
cltd
into
push
in
or
push
xchg
rol
adc
and
pop
je
adc
mov
pop
ret
sbb
or
sub
adc
or
dec
or
lret
xrelease
imul
fsubl
bound
loope
cmp
jmp
into
pop
mov
gs
in
jnp
inc
cmc
movsl
lret
push
mov
cmc
mov
inc
rorb
std
inc
shrl
xor
mov
test
cs
mov
push
push
lea
jle
fisubrs
jb
jae
push
jp
ja
pop
push
inc
push
repnz
loope
mov
ret
dec
stos
cmp
pop
xor
pop
inc
fidivs
int3
dec
rcr
push
orl
dec
push
out
sub
cmp
cmpsb
fnstcw
push
push
sbb
test
pop
and
fucom
out
mov
xchg
inc
lods
mov
outsl
fisubrl
rcll
inc
sbb
hlt
inc
mov
adc
mov
in
mov
push
testl
clc
inc
adc
pop
cmp
or
lods
ljmp
lcall
sub
aas
adc
pop
stos
cmpsl
pop
inc
js
in
shrl
and
clc
loopne
adc
adc
push
loope
fcoml
repz
inc
cmpsb
js
fmull
movsb
insl
test
dec
or
jnp
mov
sub
cli
or
sbb
jge
xchg
cmp
sarb
ja
aam
iret
into
mov
je
sub
mov
loopne
and
fisubs
pop
pop
repz
dec
pop
rcl
sbb
or
movsl
sbb
mov
jno
sti
adc
adc
repz
pushl
jne
sub
mov
out
leave
push
jmp
out
lahf
lods
lcall
pop
push
mov
inc
sbb
call
pushf
movsl
mov
dec
mov
pop
lea
jge
fildll
imul
pop
aas
in
add
std
fldt
jo
lea
or
xlat
popl
xor
fildl
xchg
jecxz
es
sbb
fdivs
lock
popa
in
xchg
aas
lds
mov
ja
or
fsts
dec
gs
dec
das
mov
adc
jecxz
mov
push
popf
test
faddl
gs
dec
and
jo
cwtl
xchg
outsb
push
cmc
dec
insl
mov
addr16
hlt
inc
dec
pop
gs
fs
shll
daa
negl
mov
fwait
pusha
xchg
pop
inc
push
int3
mov
xchg
or
jg
movsl
jns
and
push
cmp
rol
imulb
insl
cmpsb
out
sub
fimull
mov
outsl
sbb
xor
and
dec
add
xorb
sbb
xchg
push
ja
lea
and
movsb
enter
loopne
dec
push
push
mov
mov
popa
outsb
pop
mov
fsub
push
es
and
cltd
sbb
test
inc
popa
jge
inc
xor
bound
push
divb
xchg
outsb
xlat
inc
fcmovb
cld
pop
sti
pop
cmp
inc
jbe
mov
movsb
test
or
and
sub
add
in
xchg
jge
enter
popf
fstps
xchg
dec
mov
rcpps
popf
vmwrite
ret
filds
adc
pop
jl
sub
pop
or
iret
and
pop
push
and
or
divl
sti
or
in
dec
dec
dec
outsb
cmp
cltd
inc
jo
mov
not
nop
cld
dec
dec
xchg
mov
filds
mov
test
inc
rol
mov
add
jne
iret
fmuls
adc
xchg
cmp
jae
cmp
lahf
std
int3
icebp
xlat
js
scas
adc
ljmp
push
cs
stc
push
mov
jmp
lods
inc
rclb
call
inc
dec
aam
icebp
mov
sbb
scas
push
stc
faddp
stc
rorb
push
mov
popf
push
loope
xchg
push
and
mov
or
cmpsb
mov
test
inc
dec
lods
pop
popa
aam
in
pushl
mov
popa
jns
push
xchg
pushf
inc
pop
pop
dec
out
cmp
popa
shll
ror
jnp
ret
jbe
and
mov
ficoml
xor
inc
adc
cmpsl
mov
fdiv
test
push
and
push
out
insb
add
stc
movl
loopne
lcall
lcall
pop
cld
mov
stc
cmp
or
jns
sbb
add
insl
or
sarb
out
out
ret
ss
callw
ljmp
inc
jb
fcoml
dec
je
xchg
inc
adcb
ljmp
mov
push
lret
jmp
mov
ds
loopne
xchg
test
out
and
and
ret
sbb
or
out
sbb
test
and
push
inc
mov
cmp
sbb
jp
mov
dec
lret
cltd
adc
fs
ret
pop
sbb
sub
or
xor
stc
nop
and
cmp
dec
in
push
or
jnp
call
xchg
adcb
fs
repnz
sub
jo
jo
fistps
pop
addr16
mov
jo
jge
rorb
jo
insb
mov
shll
ss
sbb
mov
imul
iret
xor
cmp
sbb
iret
out
add
aad
lea
pop
mov
fstl
dec
cmpsl
les
rorl
push
xor
pushf
xor
es
fsubl
and
nop
push
shr
mov
mov
ret
fwait
cli
test
xchg
mov
jae
and
inc
pop
xor
int
imul
dec
dec
dec
lret
out
mov
mov
mov
xchg
loop
cltd
add
in
xchg
adc
test
mov
ljmp
mov
popf
adc
sub
or
inc
repz
pop
popa
sti
test
pop
xor
in
add
add
push
iret
sub
fimuls
adc
add
mov
pop
hlt
movsb
dec
aas
lods
ja
inc
sahf
repnz
sbb
jecxz
arpl
pop
movb
mov
call
loop
enter
xchg
scas
lret
add
leave
push
inc
sbb
out
mov
inc
in
outsl
jbe
out
or
jle
adc
pusha
in
push
filds
sbb
outsl
out
jp
jbe
sbb
or
sub
sbb
and
inc
scas
sbb
aas
loopne
ds
movsb
inc
cmp
cld
aad
and
cmp
int3
out
nop
add
leave
xchg
dec
xor
call
popa
lret
sbb
xchg
clc
mov
bound
stos
xor
mov
cmp
sub
or
add
pop
push
cmp
je
popa
jle
mov
loopne
lock
imul
xor
loope
jne
adc
popa
out
push
inc
xchg
jl
cs
int
mov
test
mov
dec
jae
cld
xchg
mov
xchg
and
pop
inc
mov
outsb
jg
in
cmc
pop
push
cltd
into
cmp
pushf
arpl
inc
mov
add
lahf
rclb
sbb
add
push
inc
xor
das
ds
or
add
add
cmpsl
cmp
xchg
aam
pop
in
push
inc
sbb
jns
jl
mov
cmp
ds
mov
into
shll
fs
and
jecxz
addr16
mov
bound
sbb
jno
orb
xchg
xor
mov
cli
in
cmp
scas
mov
sbb
mov
adcl
repnz
sbbb
test
sub
jne
nop
xor
mov
dec
push
gs
notb
xor
out
push
pop
adc
and
mov
insl
popf
dec
lock
movsl
je,pt
rol
stc
lds
pop
xchg
cmpsl
adc
or
int
push
jg
gs
dec
leave
mov
es
pop
pop
ret
fwait
sbb
in
push
mov
adc
push
rorl
jmp
das
adc
loopne
push
scas
pop
popa
push
lods
push
xor
dec
stc
mov
cwtl
inc
sub
pop
sub
out
ficomps
std
push
pop
push
cs
cmp
leave
lods
rcrl
mov
leave
or
push
ss
mov
or
xchg
mov
aaa
test
mov
les
mov
and
jl
out
aas
cmc
push
and
sbb
pop
mov
int
shrl
shrl
mov
fsubrl
mov
lahf
lea
add
movsl
adc
lea
push
cmp
outsl
push
test
rcrb
icebp
add
or
lods
movb
mov
test
cmpsl
and
dec
mov
and
pushf
sub
mov
or
xchg
call
in
mov
adc
and
push
xorb
jge
jl
repnz
and
repnz
cmpsl
pop
dec
mov
sahf
test
cmp
adc
jbe
fs
clc
stos
inc
xor
and
inc
ret
adc
out
outsb
jns
mov
cmpsl
xchg
mov
and
fiaddl
mov
pusha
rorl
mov
data16
cmp
mov
and
loopne
arpl
outsb
sarb
int
xchg
xchg
dec
xchg
fisubrl
or
scas
mov
cmc
movsl
mov
pushf
arpl
repz
jl
jg
jno
js
outsb
std
xor
and
inc
inc
pop
push
jb
jmp
or
sub
mov
aas
cmp
sub
xchg
cmpsb
inc
xlat
dec
jne
add
in
xor
push
mov
jb
popa
jne
je
jo
adc
sub
movsl
adc
sbb
sbb
mov
ds
mov
and
ds
shlb
jmp
mov
add
jle
pand
dec
and
push
add
jecxz
sarb
popa
cmovg
push
cmc
mov
fbld
push
dec
rorb
clc
das
scas
jmp
aam
fs
clc
out
push
xchg
mov
push
mov
dec
test
xlat
int3
mov
jecxz
shlb
cs
popa
cmp
sub
push
shrb
jnp
loope
xor
jp
cmp
and
loopne
mov
xchg
outsl
mov
inc
in
cld
mov
orl
loop
ret
nop
stos
push
outsb
inc
into
sub
mov
inc
pop
outsb
xchg
inc
insl
movsl
pop
mov
dec
jg
push
cmp
jl
mov
push
fisubrl
ljmp
add
inc
xor
out
sub
inc
rol
mov
test
scas
iret
push
mov
push
pop
test
push
or
adc
jle
or
jecxz
xchg
stc
fs
cmp
lret
movsl
or
xchg
mov
and
mov
mov
jg
jecxz
movsb
xorl
cli
mov
rorb
sbb
sub
push
and
hlt
cli
add
rcrb
fdivrp
lods
mov
and
mov
xchg
mov
loope
cmc
mov
das
push
rorl
fsub
jmp
xor
pop
ljmp
dec
sub
adc
iret
sub
cli
xor
or
pop
xchg
pop
dec
iret
add
mov
push
xchg
imulb
adc
mov
in
mov
add
sub
xor
mov
in
outsl
jnp
xchg
mov
mov
insl
aas
jne
xchg
int3
sub
fcoml
cli
mov
in
pusha
xor
pop
loop
ljmp
imul
or
add
and
jne
adc
fldl
movsl
add
jnp
sbb
loopne
clc
adc
loop
cwtl
inc
mov
movsl
fcmovne
or
xchg
pop
test
xchg
add
js
pop
mov
push
xchg
xchg
outsb
jecxz
sbb
mov
call
pushf
cli
push
pop
jle
das
xchg
nop
dec
stc
in
adc
test
sbb
loopne
inc
sbb
setb
sub
dec
adc
ja
xchg
push
cmp
pop
sub
sbb
mov
or
dec
mov
add
mov
push
cli
inc
mov
jb
lahf
pop
inc
cmp
repz
aaa
push
or
adc
out
out
fs
and
sbb
test
mov
add
andl
inc
lahf
cmp
dec
pop
stos
inc
sbb
pop
pop
pop
mov
es
inc
xchg
and
push
daa
lods
enter
insl
cmpsl
fisubrl
fmulp
movsb
xchg
xchg
sbbb
loope
std
sbb
es
lcall
cld
int
adc
stos
ficoml
sub
adc
pop
idivb
jno
xchg
jmp
call
cmc
lock
adc
xchg
xor
cmp
in
sub
gs
pop
adc
loopne
add
jnp
add
mov
imul
or
mov
add
out
mov
insl
push
test
mov
rcrl
cmp
lds
adc
fsts
mov
jl
mov
outsl
shll
inc
arpl
movsl
mov
lods
sahf
adc
bsr
into
sub
es
push
mov
xor
mov
std
popa
mov
cli
repz
add
in
mov
mov
out
mov
mov
stc
mov
ret
cwtl
or
ret
comiss
iret
movsb
ret
inc
push
outsl
pop
fdivl
xor
xchg
jbe
jns
mov
sbb
cwtl
repz
push
cmp
hlt
mov
stos
jae
lds
add
sbb
cli
or
shll
scas
jl
int
mov
nop
dec
cmpb
mov
dec
inc
and
pop
pop
bound
lret
adc
ret
insb
push
and
arpl
mov
mov
push
pop
xor
leave
in
cmc
into
jg
dec
mov
fwait
in
and
das
fmuls
jo
in
out
or
jl
dec
insl
sahf
xor
sub
pop
out
outsb
repnz
leave
push
sbb
lret
xor
jo
inc
fmull
sbb
dec
inc
or
jb
push
dec
fisttpl
mov
or
inc
pushf
sbb
and
testl
in
in
mov
dec
fwait
fwait
xor
ds
cmp
or
push
xor
sahf
pop
jl
fnsave
xor
test
lret
add
cs
je
mov
test
xchg
mov
xor
sar
shr
jmp
test
faddl
adc
and
adc
arpl
inc
out
in
sbb
dec
rclb
inc
cwtl
sbb
and
xor
int
add
lret
or
stos
sbb
mov
xchg
test
lcall
ja
cmp
inc
fs
xchg
jbe
sbb
jne
nop
aas
out
into
sti
int3
lahf
cli
sbb
iret
and
mov
pop
pop
adc
out
lret
pop
lahf
je
hlt
int
aad
cmc
mov
and
or
sub
ficomps
xchg
bnd
fists
pop
dec
add
lea
mov
dec
pushf
cmp
mov
movd
jbe
mov
movsb
ret
cmp
push
leave
mov
sahf
mov
hlt
mov
mov
fs
jb
or
mov
aam
lock
ljmp
out
stos
aam
fistps
loop
cmp
xorb
out
cld
and
dec
inc
ret
testl
fnstcw
fldt
lds
adc
xchg
and
sub
mov
and
xchg
ret
sub
movsl
add
add
cmpsb
mov
xor
in
inc
jl
xchg
out
and
push
aaa
pop
mov
mov
mov
xchg
xor
or
jecxz
mov
daa
xchg
test
dec
jnp
lock
jl
pop
sub
jae
mov
cmp
pop
ljmp
add
pop
mov
decb
jbe
nop
test
lods
stc
mov
pop
or
stos
sub
or
or
sti
gs
mov
cmp
xchg
xor
xor
ret
ljmp
xor
frstor
jae
lret
clc
xor
jl
mov
jae
insb
and
fcmove
pop
add
das
or
jo
stos
xchg
outsl
and
xor
mov
cmpsl
add
mov
cmpsb
push
or
cmp
sbb
adc
popf
dec
cmpl
mov
jo
addr16
sarb
jge
jae
jae
mov
xchg
pop
pop
lret
dec
cmpsb
sub
in
mov
hlt
in
mov
push
mov
leave
mov
dec
cmpsb
iret
push
cs
inc
addb
adc
outsb
cmpsb
addl
das
sub
push
mov
jecxz
push
in
arpl
into
jae
mov
sbb
hlt
in
jb
test
sbb
test
scas
or
adc
cmpsl
push
and
test
faddl
and
push
vpcmov
je
mov
sbb
inc
out
push
xor
in
sahf
xchg
mov
in
cmp
xor
dec
hlt
mov
mov
dec
xchg
shrb
cmp
stos
xchg
mov
adc
add
loope
dec
add
push
insl
divb
sahf
cmp
pop
jp
lret
pop
loope
jecxz
xor
inc
stos
mov
sub
xor
cmp
scas
repz
mov
sbb
xor
nopl
xor
bound
sub
ret
mov
mov
in
clc
push
outsb
lahf
adc
decb
mov
xchg
jmp
shrb
shl
lcall
dec
or
mov
test
pop
sub
xchg
mov
jno
into
push
adc
imul
and
mov
push
xchg
insl
sahf
divl
testl
ret
cmp
ret
add
inc
fstpl
out
ja
lret
rcrb
mov
pusha
lret
jae
testb
jmp
xorl
jno
aam
push
push
push
stos
sbb
jae
xchg
repz
fildl
into
stos
inc
scas
popf
inc
push
out
cltd
mov
jno
lret
leave
pusha
es
call
mov
inc
lds
mov
push
xor
mov
jl
xchg
ss
pop
jns
xor
mov
enter
add
addl
jnp
pop
jecxz
mov
rcrl
dec
xchg
aas
jecxz
jbe
mov
gs
ret
mov
das
cmp
outsl
andb
subl
insb
movsb
outsb
cmc
push
dec
pop
push
cmp
pushf
int
out
mov
lcall
mov
mov
dec
pop
mov
stc
fincstp
sti
or
lcall
mov
jno
xor
les
pop
mov
icebp
jae
stc
sub
mov
xchg
loop
test
and
mov
bound
mov
xchg
mov
xor
jl
aam
aaa
sbb
and
push
pop
daa
sbb
jne
leave
push
and
add
insb
fnstenv
movsb
cmpsb
shlb
je
pop
cli
dec
dec
pushf
jecxz
xor
pop
sti
and
mov
push
je
test
sarl
enter
shlb
das
mov
dec
cld
insl
out
jnp
push
shll
icebp
mov
mov
adcl
mov
sub
aaa
inc
and
mov
leave
pop
and
loope
mov
mov
push
fmuls
and
pop
push
pmaxsw
lcall
movb
sbb
cwtl
repz
pop
flds
sub
test
mov
cmp
test
jg
push
test
int
adcl
push
and
dec
ds
lret
lock
xor
test
lock
jmp
pop
sti
stos
or
push
idivl
pop
xor
outsl
xchg
cld
mov
aaa
leave
nop
xor
push
push
jo
outsb
sub
xor
lea
or
movsl
test
and
nop
iret
jmp
sub
inc
out
pop
push
mov
jmp
dec
ficomps
dec
lock
and
into
cs
inc
add
das
rep
cltd
into
or
hlt
js
fcmovne
into
jl
scas
pop
push
pop
mov
cmc
sbb
ret
sahf
js
arpl
sub
add
push
dec
jg
push
lret
mov
xchg
nop
fisttpl
add
mov
movsl
imul
rcll
xchg
test
inc
mov
pop
push
mov
lcall
mov
cmp
cmp
cs
test
mov
subl
sahf
mov
into
lods
add
jp
mov
imul
mov
add
mov
mov
and
pop
lret
test
js
pop
and
fucomip
sbb
pop
in
mov
pop
ja
pop
adc
pop
sbb
mov
scas
adc
inc
sbb
dec
dec
mov
std
pop
rorl
loopne
mov
lods
add
push
cmp
jg
int3
imul
fwait
dec
jge
inc
xchg
or
adc
out
popf
out
imul
jne
cld
insl
push
test
lret
std
bound
gs
insb
out
ss
fs
xchg
mov
sar
push
cmp
pop
add
push
pop
sbb
or
jno
jne
int3
pop
push
out
mov
lret
aaa
xchg
imul
mov
lods
jnp
into
cmp
pop
push
or
out
cwtl
push
lcall
outsl
dec
sbb
or
mov
jns
push
add
xor
mov
cmc
movsl
mov
jp
shl
or
es
and
lods
sahf
adc
push
outsl
xchg
int
xchg
repnz
push
pop
hlt
xor
or
jno
int3
jb
imul
cmp
out
loopne
dec
adc
push
fwait
pop
in
push
cmovnp
fucomi
punpcklwd
out
or
rcl
insb
sub
cld
add
cmp
mov
inc
mov
mov
stos
sbb
fs
xchg
rol
out
xchg
dec
aam
and
imul
ljmp
cld
test
sub
iret
insl
mov
fistps
inc
ss
adc
es
xlat
xchg
pop
lods
mov
xchg
ds
pop
push
mov
and
push
mov
push
in
std
dec
pusha
pop
pusha
test
dec
cmp
lret
pop
sub
popa
mov
pop
ret
mov
movsb
fsubs
xchg
test
cli
loopne
sbb
and
repnz
jne
xchg
mov
mov
pop
sbb
mov
rclb
dec
mov
scas
sub
in
sbb
addr16
insl
lcall
xchg
dec
mov
mov
in
stos
iret
fimuls
fistpl
testl
daa
jno
std
int3
negl
test
sub
lret
jmp
add
mov
add
call
rcll
and
push
sbb
test
cmp
jle
push
mov
insl
arpl
fsubrl
mov
scas
push
inc
and
or
pop
jp
sub
mov
inc
push
mov
or
lock
rclb
lahf
mov
jns
rorl
shll
dec
cwtl
push
mov
arpl
mov
pop
cmc
push
xchg
mov
lea
dec
jle
data16
scas
mov
mov
pop
mov
xor
cmp
or
add
xchg
sbb
int3
jmp
inc
pop
inc
fdivrl
inc
dec
sub
js
lahf
fidivrs
insb
mov
inc
xchg
lret
cmp
sbb
jmp
mov
pop
and
add
adc
xor
sti
add
lret
pop
and
adcb
xor
cwtl
out
sub
int3
xchg
mov
dec
mov
dec
outsl
loope
shlb
cmp
pop
lods
test
jecxz
pop
and
pop
pop
mov
mov
sub
ss
sub
jne
ja
push
mov
adcl
stc
outsb
mov
jbe
sbb
push
and
test
scas
fisttps
out
sbb
je
mov
call
jg
enter
jl
ds
in
fsubrs
rcrb
pop
jb
sbb
mov
mov
pop
in
xchg
mov
sbb
add
nop
xchg
mov
pop
jne
or
mov
les
scas
dec
cltd
mov
cmc
sbb
mov
sub
add
je
push
les
cld
jp
scas
pop
jle
jl
es
add
add
icebp
bound
outsb
add
xor
outsl
scas
push
dec
xor
cmp
inc
sar
push
fcoml
jl
lea
test
or
adc
sbb
icebp
jnp
push
adc
pushf
pop
aas
into
cltd
cmpsl
test
loope
out
push
pushf
mov
insl
or
sub
mov
outsb
push
mull
lret
punpcklbw
inc
fldt
adc
ret
shlb
ss
sti
lret
ret
lahf
mov
xchg
cmp
ret
std
jecxz
imul
scas
hlt
and
xchg
push
test
pop
xchg
shr
out
popf
fildll
push
xlat
aas
mov
jne
push
jbe
popf
xchg
int
and
fwait
mov
in
jl
add
xor
ret
dec
adc
mov
mov
test
and
popf
push
aam
jae
push
stos
mov
fcomi
mov
mov
jns
push
imull
adcl
mov
sbb
or
ds
cmp
pop
jns
xor
add
mul
push
xchg
in
mov
arpl
cwtl
adc
xchg
or
sbbb
rorl
test
js
mov
xchg
mov
mov
int
dec
rcr
adc
stos
scas
jnp
and
xchg
sbb
xchg
sarl
mov
out
movsl
cltd
or
repnz
push
insb
push
jmp
sub
push
jne
pop
loope
lods
push
sbb
pop
loope
inc
andl
mov
repnz
leave
push
or
pusha
mov
pop
inc
lret
mov
sti
jns
mov
jmp
jo
in
cltd
xchg
jge
push
sbb
int
ret
jb
jmp
out
add
add
xchg
dec
cmp
test
popf
cwtl
mov
or
shlb
lds
decl
xor
dec
push
jnp
or
mov
dec
inc
movsl
das
insl
push
jecxz
dec
notb
in
jnp
test
inc
js
inc
push
mov
xchg
lea
out
js
addr16
pop
dec
lret
rorl
gs
andl
jno
push
scas
cmpsb
pop
adc
xor
in
mov
data16
lahf
xlat
sahf
cs
push
push
xor
inc
cwtl
popf
aam
mov
popa
dec
adc
sbb
je
adc
push
dec
sub
je
sub
mov
aad
push
xor
or
sti
int
mov
dec
lret
jmp
in
mov
sub
movsb
push
jmp
sbb
xchg
sahf
or
and
rclb
arpl
sahf
sub
mov
mov
lds
mov
idivb
sti
xor
rorb
jae
jp
push
icebp
jmp
cwtl
loop
cmpsb
bound
xchg
out
mov
aam
int
mov
aad
ret
scas
lods
jno
imul
movsl
push
jae
and
add
nop
mov
stos
sahf
popa
pop
push
push
push
fists
scas
in
ds
or
xchg
rol
stc
mov
mov
iret
inc
pop
outsl
sar
mov
test
clc
leave
mov
jecxz
xchg
and
pusha
add
push
pop
add
mov
hlt
sbb
aaa
adc
lods
addl
daa
cltd
roll
insl
xchg
mov
bound
leave
sbb
outsl
ljmp
mov
out
je
ficomps
out
cli
aad
adc
dec
stos
int
sub
and
sbb
adc
rorb
jg
dec
mov
add
inc
dec
pop
addr16
dec
rcrl
ret
inc
pop
repnz
adc
test
add
stos
xor
ja
xchg
or
data16
cli
sub
movsl
push
push
call
push
test
lret
jo
lahf
test
sbb
push
push
xchg
or
adc
out
cwtl
clc
add
fcoms
push
sub
inc
sub
pop
fcmovu
scas
add
stos
daa
ret
mov
outsb
mov
add
mov
pushf
ljmp
nop
add
mov
pop
into
push
ret
insl
shll
fmuls
adc
inc
divb
adc
adc
mov
cmp
and
mov
xor
fdivrs
cmp
pop
jge
adc
mov
mov
mov
cmp
inc
or
loopne
mov
cmp
mov
fucomip
rorb
out
mov
subb
sub
add
adc
inc
pop
ds
push
add
add
sbb
or
push
mov
cmp
pushf
call
mov
dec
arpl
jp
xchg
inc
into
adc
cmpsb
dec
test
jne
pop
jno
jns
dec
dec
add
sub
pop
mov
fisubs
or
mov
cmp
or
add
rcll
ja
fildll
out
les
pop
sub
mov
ss
add
cmc
adc
push
lds
aaa
push
out
sub
and
cld
jbe
mov
push
mov
mov
pop
jne
push
ja
fwait
push
xchg
es
sbb
xchg
jo
jge
jg
pushf
and
inc
inc
ds
fiaddl
xlat
pop
aam
shlb
enter
aam
xchg
dec
nop
out
mov
js
movsl
cmpsl
inc
add
repz
aas
shll
jno
ds
loope
notl
add
sbb
lds
xor
test
rclb
pop
fcomps
imul
mov
pop
mov
call
fldenv
std
je
or
fistpll
addr16
or
xchg
pop
push
scas
scas
div
rcrb
pop
test
add
in
sub
lahf
pop
lahf
stc
or
mov
adc
adc
dec
lods
sub
inc
cmp
sbb
cwtl
sub
mov
pop
sbb
jbe
es
xchg
in
dec
cmp
iret
lret
add
fs
mov
mov
jae
aaa
pop
cmpsl
dec
sub
xchg
aad
imul
aam
jmp
fldt
fst
and
mov
sahf
pop
pop
in
mov
sbb
outsb
mov
das
xor
jbe
je
add
addps
in
icebp
jle
sbb
pop
push
or
mov
orl
sbb
sahf
push
cmp
cld
test
stos
ss
jp
mov
dec
mov
add
test
imul
in
mov
into
rol
dec
jne
stc
lds
pop
cs
jo
or
mov
inc
lret
or
and
gs
mov
jo
adc
push
test
popa
popf
or
test
les
cwtl
inc
add
cs
fadd
ret
inc
xchg
mov
out
lcall
sbbl
inc
aam
pop
movsb
mov
vpunpckhwd
sbb
popf
scas
shrl
adc
mov
adc
pop
sub
mov
call
cmp
icebp
clc
sti
sub
add
mov
and
push
out
mov
jecxz
jp
push
cli
cs
shrb
stos
push
pop
cli
hlt
add
sbb
pop
mov
addl
push
clc
xor
cmpsb
fwait
cmp
mov
mov
clc
jg
mov
push
mov
leave
jmp
pop
and
mull
mov
mov
sub
fldl
or
xor
scas
ficompl
jg
push
sarb
add
add
jl
adc
movsl
out
enter
std
stos
sbb
fisubrs
insl
and
pop
inc
sbb
lods
and
cmp
xchg
pushf
mov
fucomp
xchg
rclb
cmpxchg
cli
in
or
lcall
xor
xchg
push
push
call
fisubrs
mov
or
inc
lret
xchg
int
jle
test
jnp
xor
shl
fsubl
mov
push
push
dec
nop
fldcw
in
div
inc
pop
mov
cmp
je
pop
lcall
xchg
jg
xlat
gs
add
outsl
cltd
add
jmp
lds
insb
mov
jmp
faddl
aas
adc
fimull
sub
popf
mov
outsl
xor
cmpl
mov
rol
in
adc
mov
xor
insb
aaa
sbb
dec
pop
fsts
aaa
jmp
pushf
loopne
les
sti
jmp
lods
pop
xchg
popa
bound
inc
gs
sbb
or
popa
jl
jo
jle
cwtl
xchg
adc
loope
add
pop
inc
in
xor
push
fs
lret
pop
cli
xchg
mov
dec
mov
cmp
mov
lods
or
aad
fidivrs
cmp
inc
cwtl
sub
int3
cmp
push
testb
das
sub
daa
sarb
pop
leave
pop
imul
or
inc
pop
mov
iret
dec
or
xor
push
ret
mov
mov
inc
gs
mov
int3
dec
jg
jns
mov
andb
clc
in
insl
xchg
repz
out
xor
outsb
rcr
ja
pop
in
int
loop
adc
adcl
addr16
and
fld
and
add
or
push
and
push
fldt
fimull
pop
xor
sbbb
pop
add
xlat
ret
adc
lahf
gs
int
stos
xchg
or
ljmp
and
popa
shl
and
jo
fnstcw
test
push
adc
sbb
dec
or
cltd
mov
mov
pop
xlat
pop
mov
mov
movsl
xor
movl
mov
test
in
lds
xchg
into
xchg
and
dec
fs
xor
pop
sbb
into
jne
xchg
mov
mov
adc
xchg
cmp
mov
sti
cmc
out
inc
pusha
or
lods
sbb
or
aad
jl
sbb
xor
xor
mov
cmpsl
sti
rcll
sbb
data16
je
faddl
xchg
mov
mov
dec
and
mov
xchg
and
faddp
repz
xchg
imulb
add
rol
andb
pop
xor
jmp
imul
or
mov
adc
stos
jb
xchg
push
out
and
lock
ljmp
loop
sti
sub
add
sbb
lret
ljmp
inc
in
pop
add
cld
jge
push
enter
dec
or
test
jb
mov
add
repnz
insl
inc
popf
popf
enter
pop
ret
and
aaa
pop
or
pop
cltd
jp
lahf
pop
add
xor
fldenv
jle
sbb
lcall
addb
into
dec
adc
jnp
cld
outsl
mov
pushf
add
aad
dec
push
mov
iret
lods
cmc
pop
or
jge
mov
inc
stos
and
adc
out
fs
lahf
outsb
enter
loop
xor
movb
jl
pop
mov
loopne
sahf
dec
jmp
outsl
pop
frstor
sbb
adc
rcll
and
jno
repnz
push
mov
sbb
imul
add
jecxz
ss
mov
cmp
or
arpl
jecxz
cmp
xchg
sbb
test
sbb
xchg
or
jae
out
sub
fwait
rclb
outsb
aad
shrb
insl
xor
push
mov
sub
lock
out
int
pop
leave
cli
mov
mov
mov
cltd
push
mov
dec
xchg
push
fbstp
xchg
jb
cli
inc
push
stos
test
inc
cmp
mov
push
mov
int
or
cmp
enter
mov
xor
gs
xchg
or
adc
gs
inc
mov
ret
aam
or
jmp
mov
in
push
mov
shll
flds
sub
aaa
lahf
outsl
test
pushl
and
bound
sub
sahf
lds
int
mov
mov
lds
xor
loopne
in
and
push
sub
push
repz
bound
push
out
es
mov
shrb
sarb
dec
xchg
sub
mov
cltd
push
test
mov
pop
sub
push
test
jae
add
imul
inc
sub
repz
xchg
jecxz
pop
jmp
rcll
sub
mov
xor
test
add
fldenv
lds
xchg
fisubrl
data16
pop
inc
mov
push
loopne
dec
call
push
aas
push
fwait
and
jp
push
call
daa
and
push
out
sub
js
int
mov
xchg
sbb
pop
mov
xchg
mov
std
test
adc
pushf
mov
in
leave
scas
mov
and
lods
pop
mov
sub
sbbl
movsl
pop
repnz
pop
adc
sbb
dec
add
aad
mov
in
xchg
popa
pusha
dec
pop
fdiv
dec
adc
das
or
cmpsb
call
adc
loopne
xchg
ret
js
mov
mov
xchg
stos
jle
jl
fcomi
stos
xchg
js,pt
int3
inc
shl
push
aam
push
pusha
add
xor
add
repnz
and
out
mov
cs
push
xchg
mov
or
sahf
pop
mov
sub
cmc
jnp
mov
pop
mov
jns
outsl
stc
inc
cmp
adcb
cmp
cli
into
mull
mov
popa
sub
sub
jge
sbb
call
inc
sti
jo
inc
adc
dec
stc
aad
add
insl
cli
ss
gs
inc
sub
sar
jp
mov
fldenv
aas
xchg
sub
fnstcw
and
mov
iret
push
cs
inc
mov
movsl
test
push
movsl
mov
mov
mov
jno
and
push
js
or
nop
rolb
pop
insl
push
sub
into
nop
int3
xchg
or
push
jecxz
ljmp
sbb
mov
jb
push
or
dec
fdivs
sub
add
sub
test
stc
ja
sarb
sub
fcmovbe
adc
fwait
jae
cmp
lds
dec
dec
mov
and
clc
xchg
icebp
je
xor
andb
sub
loopne
mov
jns
push
lock
mov
sub
mov
sub
mov
add
cmp
pop
fstpt
negb
pop
cmp
jb
pusha
out
jecxz
sbb
dec
sbb
mov
jbe
mov
jbe
into
mov
cmpsl
mov
xchg
fistps
inc
std
xchg
scas
pop
inc
fisttpll
imul
out
inc
pop
jp
dec
faddp
cmc
aaa
lret
jge
out
cmp
jmp
push
cmp
xor
movsl
lahf
pushf
sbb
imul
lock
clc
lahf
fnstsw
iret
jnp
pushw
mov
or
les
add
clc
enter
adc
rep
mov
mov
or
lahf
mov
mov
adc
jecxz
lea
push
ds
xor
adc
rol
add
sbb
fmuls
mov
inc
xchg
insl
hlt
cmp
enter
fcoml
lret
lods
in
dec
lret
mov
dec
mov
jecxz
mov
and
cwtl
repz
dec
xchg
inc
addr16
xchg
std
insl
lret
pop
cld
jne
add
aas
mov
jle
cmp
jo
xor
rcrl
or
cltd
mov
add
mov
push
mov
xor
xchg
cld
add
cmp
mov
daa
fimuls
fidivs
mov
outsb
fldenv
rorl
pushf
adc
mov
out
pop
xor
std
and
in
enter
insb
loope
xor
jns
mov
xchg
mov
sbb
mov
adc
or
test
jnp
ja
add
sub
shl
and
test
rcrl
imul
in
sbb
push
mov
stc
or
stos
cmp
sbbl
ret
int
iret
xor
add
dec
popf
jp
cs
insl
lea
or
stc
lods
adc
cmp
sbb
pop
add
mov
pop
sub
test
adc
loope
adc
arpl
and
pop
or
jmp
push
cmp
mov
sub
lds
jmp
push
add
arpl
xchg
dec
ftst
mov
mov
dec
dec
int3
push
mov
jo
fwait
sahf
mov
or
and
or
xchg
jbe
ds
jmp
dec
inc
popf
scas
mulb
mov
clc
cmpsb
sahf
inc
xchg
cmp
add
xchg
inc
loope
in
lahf
jns
xchg
pop
shll
cmpsl
cld
out
fsubs
adc
push
shll
negl
and
movsb
fimuls
mov
sub
fwait
push
cli
xor
loope
sbb
cmc
loope
mov
loopne
mov
fnstcw
das
in
cmp
movsb
xor
bound
loope
add
xor
pop
push
mov
in
sti
pop
test
mov
push
mov
adc
add
out
arpl
and
jl
push
pop
out
push
mov
std
and
cltd
in
xchg
fiadds
je
int
mov
nop
stos
xchg
cmp
xchg
sbb
sti
pop
shlb
pushf
movsb
enter
movsb
popa
ljmp
push
ja
add
addb
je
jecxz
push
and
xor
xlat
xor
inc
rorb
dec
insl
lods
les
imul
push
popf
push
stc
adc
push
inc
mull
in
out
shlb
sub
jecxz
adc
pop
xlat
iret
lea
mov
push
lods
rorb
or
ret
dec
push
ds
cmp
sbb
jnp
dec
xchg
in
mov
daa
cwtl
and
lds
ljmp
dec
sbb
jle
pop
dec
fnsave
insl
repz
cmpsb
xor
xchg
dec
cmp
test
jmp
mov
lret
inc
lds
add
paddsw
jecxz
repnz
xlat
mov
std
mov
shl
data16
dec
shrl
cmc
repnz
mov
lret
fldcw
sub
adc
jb
sub
in
pusha
dec
sbb
and
lcall
addr16
dec
add
push
cmp
and
xchg
shl
mov
stos
fdivrl
dec
fs
js
fcmovnbe
cli
cld
ret
or
cwtl
aam
test
cmpsl
mov
pushf
xor
push
sbb
cmp
push
fucomi
fidivl
push
or
in
add
xchg
loopne
add
jp
add
jo
in
sub
and
sbb
loopne
adc
cltd
pushf
pop
pop
out
loop
call
ljmp
pushf
pushf
scas
loop
add
push
pop
xchg
js
setp
insl
test
adc
jne
addr16
mov
mov
dec
cmpsl
aaa
dec
in
sti
jne
mov
fwait
insb
and
mov
lods
ss
fs
leave
push
dec
test
ss
pop
cwtl
sbb
stos
fwait
mov
test
pop
in
es
xchg
mov
mov
call
inc
xor
bnd
sarl
data16
insb
jl
out
scas
jno
scas
push
pusha
adc
inc
js
out
es
cld
xchg
mov
ljmp
loope
sub
jno
sub
pusha
cmovp
hlt
cltd
sbb
push
inc
add
adc
pop
sub
ds
aad
insb
sub
arpl
sub
jbe
fsubrl
aaa
enter
loope
cmpsl
rclb
sbb
sbb
int
insl
das
nop
insl
and
lret
test
fistps
sbb
arpl
xor
jp
inc
xchg
pusha
stc
cld
mov
lods
fistpll
adc
and
xor
lods
jno
mov
push
dec
push
aaa
inc
insb
mov
scas
sti
sub
into
fdivrl
sbb
sub
adc
aas
pop
outsb
xchg
movsb
inc
jge
jmp
cmp
pop
loope
lahf
and
mov
add
jbe
icebp
sbb
lret
movb
out
push
sub
loope
shrb
xor
jl
jl
fscale
out
mov
push
movsl
jae
clc
push
jl
mov
rol
xor
outsb
xor
add
testl
mov
cmc
mov
cmpsb
sbb
inc
pop
pop
in
mov
sub
pop
lea
push
lods
jle
fldcw
loope
andb
in
cmp
sbbb
fdivp
das
mov
sub
daa
sarb
ret
lret
out
push
inc
lods
outsl
jle
mov
dec
jle
fucomp
cmpsb
cmp
sbb
in
pop
push
out
rorl
or
pop
mov
mov
loopne
lahf
inc
cwtl
aas
call
inc
push
pushf
int
push
push
fldt
int
addr16
aad
out
shr
pop
out
pop
and
arpl
or
sti
fildl
push
mov
add
xchg
rcrl
add
sti
inc
mov
xor
xchg
mov
pop
mov
in
mov
ljmp
loope
scas
dec
mov
nop
arpl
jno,pt
cwtl
fsubl
cs
inc
cmp
jbe
sti
daa
lahf
xchg
pop
shll
dec
sub
push
sbb
iret
lret
repnz
dec
test
or
pushf
repnz
pop
movsl
out
stc
xchg
mov
mov
scas
push
mov
clc
aad
jg
jp
je
stos
in
cmp
push
pop
insb
jl
mov
cmpl
and
push
cmpsb
cltd
cmp
test
sti
repz
popl
outsb
jae
ds
sub
inc
jge
xchg
inc
pop
jne
dec
outsb
cmp
xchg
xchg
subl
ret
mov
or
aaa
daa
mov
repnz
std
dec
addb
das
xor
popf
mov
lods
mov
xchg
cmpsl
add
ret
movaps
xor
sub
popa
in
jb
jae
inc
or
xlat
jo
mov
xlat
xlat
sahf
and
mov
insl
movsb
movsb
jno
pop
aad
idivb
outsb
das
push
dec
xorb
inc
shll
mov
push
mov
cmovg
mov
in
jno
sbb
imulb
sbb
scas
out
dec
push
xor
loop
pop
loopne
fs
stc
lea
nop
sbb
test
mov
inc
mov
add
aam
xchg
xor
jo
enter
adc
stc
mov
test
loopne
scas
jecxz
mov
int3
inc
adc
xchg
xor
and
dec
pushf
scas
mov
cmpsl
xchg
mov
cli
jb
in
dec
psllw
sub
fmull
scas
or
cs
sbb
dec
dec
mov
clc
or
out
push
sbb
mov
xchg
mov
sbb
jmp
add
cmp
jo
into
nop
ljmp
aam
jae
js
push
outsl
out
xor
dec
cmp
push
push
sbb
mov
aad
cli
in
into
lea
cwtl
sbb
insl
lods
and
sbb
jae
mov
push
hlt
and
push
add
lods
push
cmp
sbb
dec
push
and
leave
cmp
xchg
adc
loop
dec
addr16
inc
bound
dec
jb
mov
pop
ljmp
aaa
cmp
pop
in
push
and
xor
aad
repz
shll
add
pop
cmp
gs
add
xlat
and
mov
hlt
adc
test
lods
jb
sbb
jg
das
inc
inc
ss
test
push
and
push
mov
inc
fsubr
dec
mov
pop
or
pop
xor
xchg
popf
jns
sbb
dec
pop
icebp
jp
mov
jo
sbb
dec
pop
push
hlt
pop
pop
cmp
inc
jns
dec
mov
pop
iret
sub
les
in
dec
jecxz
outsl
test
jmp
or
imul
mov
push
xor
push
in
pusha
mov
ja
jne
xchg
push
ret
fistps
lods
inc
mov
testb
or
outsl
adc
cwtl
xor
out
push
dec
adcl
jo
aam
cmpsb
push
rcr
pusha
fbld
mov
dec
lcall
sub
or
and
and
add
push
addr16
xor
jge
fldcw
out
std
repz
mov
or
pop
lock
stc
dec
dec
fldcw
out
out
sub
dec
pushf
xchg
adc
pop
mov
mov
sub
mov
lret
jae
xchg
jecxz
pop
cmp
push
jg
adc
inc
cltd
mov
mov
pop
or
jmp
bound
jae
fcmovbe
repnz
and
cli
cltd
addr16
out
out
and
insb
sbbb
inc
es
mov
push
mov
push
push
shll
aaa
sahf
cmp
les
sbb
lahf
insl
dec
cmpsl
rol
pop
pop
leave
scas
fnstenv
cmpsb
inc
mov
rclb
leave
or
mov
addr16
loopne
cmp
xchg
cmc
mov
sti
dec
jmp
frstor
jnp
leave
loopne
xor
leave
pushf
dec
jmp
std
jg
enter
cld
insb
jmp
aam
out
push
sub
jg
outsl
mov
dec
icebp
mov
pusha
lahf
mov
sub
dec
and
jge
stos
dec
xlat
ficompl
sbb
inc
in
test
sbb
fdivr
cmp
push
sub
adc
je
push
add
sbb
dec
xchg
inc
adc
fwait
scas
fcmovnbe
cs
inc
jl
clc
popf
sarl
mov
cwtl
xor
push
lcall
frstor
int3
cmp
xchg
mov
imul
fdivrl
insb
cmp
and
jne
xchg
jle
in
ljmp
ret
sbb
pusha
imul
jnp
je
clc
jno
sbb
mov
fwait
adc
pop
and
mov
mov
and
xchg
arpl
rcll
inc
jp
scas
and
and
cmp
cmc
sahf
push
jle
mov
sub
movsb
push
loopne
xchg
cmpsb
iret
inc
aas
adc
pop
ds
mov
dec
lcall
mov
and
stos
popa
stc
xchg
mov
dec
and
cmp
push
ljmp
cld
ja
push
loope
mov
popf
xlat
cmpsb
xor
xchg
and
mov
shrl
cmpsl
sti
insb
inc
out
sbb
jbe
adc
out
pusha
pop
mov
in
inc
dec
call
iret
xchg
xlat
repnz
cmc
xor
in
mov
fbld
add
int
xor
push
aam
mov
dec
in
test
icebp
adc
push
test
inc
push
stos
in
cmpsl
mov
sbb
outsb
push
stos
sbb
in
popa
es
fstpl
jge
ds
test
pusha
mov
pusha
pusha
mov
push
mov
movl
ret
adc
push
xor
pop
hlt
pop
ja
add
imul
cld
xor
sub
pop
fstps
iret
pushf
adc
mov
xchg
inc
mov
in
pop
push
loopne
sub
pusha
xchg
pop
outsl
and
sbb
icebp
jg
push
inc
and
lock
and
in
or
pop
lcall
addl
inc
jno
push
add
sbb
lea
push
xchg
xorb
das
nop
push
ret
mov
xor
cmp
and
or
jp
shr
int3
lret
jo
pop
mov
andl
pop
cmp
enter
dec
mov
dec
cmp
mov
in
or
mov
lods
mov
xchg
mov
fistpll
cli
xor
cmc
mov
out
sub
dec
out
push
sbb
pop
jle
lds
lcall
xor
and
adc
shlb
lret
lods
in
pop
adc
movsl
lods
push
lret
icebp
mov
inc
popa
ficompl
add
push
iret
je
clc
notl
mov
cmc
imul
push
mov
sbb
stos
mov
imul
cltd
jae
negl
rdmsr
sub
test
popa
push
popa
or
or
aam
data16
xchg
ret
sub
cmp
fidivs
pop
int
xchg
jns
jge
mov
ret
int
scas
in
cmpsl
lret
sub
jmp
and
icebp
sahf
dec
inc
and
inc
test
cwtl
enter
xchg
test
cmpb
and
push
popa
jg
and
jle
nop
outsl
sub
xchg
cmp
pusha
test
cmp
add
push
jae
mov
pop
push
insb
jnp
xchg
lcallw
out
ret
int3
push
lock
xlat
mov
push
mov
pop
push
insb
mov
mov
mov
addr16
test
dec
clc
sbb
sbb
sbb
mov
pop
cmp
and
in
movsb
mov
jge
sub
pop
test
out
fdiv
call
dec
lods
pop
push
sub
or
xchg
fsubs
xchg
or
testl
ja
adc
out
cmp
loope
movsl
aam
rcll
xor
jg
cs
jmp
cmpsl
adc
dec
push
jle
imul
xor
push
xchg
adc
cmc
adc
jno
cmpsl
arpl
pusha
dec
mov
and
aas
rcrl
cmp
mov
xor
sti
push
repnz
sbb
fs
jle
pushf
pop
mov
adc
popf
push
mov
aas
fs
dec
ljmp
add
mov
je
pop
inc
inc
bound
gs
addr16
out
xor
lods
call
loope
push
lcall
xchg
push
out
and
mov
shlb
in
dec
mov
mov
push
fadd
pop
scas
sub
sti
push
adc
out
cmpsl
lea
push
test
imul
loopne
jno
jbe
out
rorb
mov
pop
in
add
pop
cmp
mov
or
pop
inc
mov
fldl2t
add
sbb
test
pop
out
test
out
push
mov
stos
push
jg
xor
daa
dec
mov
jmp
outsb
ja
cmpb
lcall
dec
inc
outsl
jecxz
aas
lods
notl
inc
call
add
sub
icebp
addr16
sarl
movsb
push
ds
sub
mov
jecxz
mov
jmp
clc
push
push
sbb
insb
xchg
push
pop
fsubp
and
insb
jg
xor
scas
and
lods
xor
xchg
inc
mov
in
and
lcall
call
test
rol
xchg
push
in
fdivrs
or
push
stos
into
mov
orb
push
stos
lcall
das
inc
adc
jnp
xor
adc
aaa
push
inc
jne
cmp
int
movsb
dec
cld
cmp
or
mov
mov
sub
outsb
clc
inc
sahf
xor
shl
or
fs
call
sahf
pop
mov
cs
pop
and
fildll
lret
insb
mov
adc
cmpsb
mov
les
shll
sub
imul
fistpl
pop
or
cmp
fadd
mov
test
jns
int3
mov
sub
add
xchg
jae
in
sbb
rcll
adc
clc
fsubp
daa
xor
mov
cwtl
jbe
lods
jnp
test
insl
inc
xchg
test
or
rcr
pop
mov
scas
outsl
test
notb
fmuls
cs
jle
lahf
push
mov
and
dec
in
add
scas
and
adc
insb
mulb
xchg
rorb
dec
mov
or
sub
aaa
into
leave
dec
and
mov
loop
inc
or
notl
imul
outsb
imull
int3
out
addb
lock
shll
imul
or
js
jb
sub
mov
mov
outsb
pushf
cli
repnz
mov
jg
xchg
cmp
sbb
cmc
jmp
clc
xchg
scas
xor
cs
bound
mov
icebp
gs
jmp
adc
bnd
and
dec
xor
divl
cmp
mov
sbb
lcall
mov
inc
enter
adc
xor
movsb
jnp
or
and
jl
popa
and
test
mov
dec
cmp
add
in
xchg
push
push
push
pop
popa
cld
pop
test
fidivrs
in
mov
xor
mov
fucomp
push
mov
pushf
push
or
add
mull
test
cwtl
sbb
ljmp
adc
cmp
je
insb
cmp
and
in
daa
jns
add
rolb
sbb
mov
daa
nop
cmp
pop
loop
add
sub
mov
mov
fstl
fucom
dec
push
hlt
pop
mov
outsl
mov
lods
popf
adc
mov
jnp
ja
adc
mov
sub
das
mov
sbbb
stc
push
push
push
aaa
and
sarl
icebp
adc
push
cli
or
mov
xchg
sbb
push
bound
in
je
jae
arpl
xor
cmp
jae
xchg
pop
push
mov
jae
mov
jbe
es
pop
sti
fdivs
in
mov
movsl
add
jg
jnp
outsl
xchg
imul
or
repnz
sub
cmpsl
sub
sti
shll
xchg
xchg
sbb
mov
jl
out
mov
pop
lea
adc
push
into
dec
sub
mov
ficomps
mov
push
pusha
popl
or
lcall
mov
out
test
hlt
jno
adc
xor
mov
pop
sub
out
sbb
push
sbb
lock
addr16
out
gs
out
fucomi
add
repz
movsb
dec
cmp
cmpsb
jbe
aam
adc
fadds
repnz
sub
push
pop
jp
mov
stos
aad
popa
insl
movsb
push
jle
jnp
xor
adc
jae
in
mov
gs
ljmp
rcll
add
enter
std
in
les
in
pop
pop
ret
jbe
jne
bound
adc
mov
subb
pop
push
jmp
lds
das
jno
xchg
sub
push
mov
daa
std
push
std
sbb
push
sti
jle
xchg
xchg
call
addb
test
adc
cmp
movsl
aas
push
jle
out
imul
xor
shlb
inc
lret
test
xchg
sarb
fmul
bound
pop
inc
xor
scas
in
mov
or
push
push
jae
push
dec
je
inc
push
out
aaa
and
aad
test
jb
push
or
xchg
ret
mov
mov
fistpll
push
subl
bound
and
lret
test
xlat
jbe
aas
addr16
pop
pushf
and
out
daa
mov
xchg
icebp
test
rorb
inc
mov
jmp
sbb
cmpsb
lods
add
pusha
cmpsl
iret
and
mov
in
inc
es
fs
sub
sarl
xor
movsb
sub
mov
cli
mov
out
pusha
in
cli
aam
jne
and
inc
mov
test
sbbb
imul
mov
rcrb
scas
ja
mov
lret
pop
pop
out
test
or
adc
mov
push
or
and
and
pop
mov
cmp
mov
dec
into
mov
jmp
jbe
scas
dec
pop
and
jmp
rcl
sbb
shrl
int
repnz
cmp
jmp
jnp
inc
orl
aas
push
outsb
loope
data16
mov
rorb
cmpsb
clc
pop
sahf
movb
mov
addl
dec
cltd
add
stos
loopne
xchg
test
call
pop
fs
inc
pop
into
mov
add
int3
or
scas
repz
jno
subl
or
xchg
adcb
movsl
int
sub
jb
sbbl
push
xchg
cmpsb
jnp
mov
xchg
pop
dec
arpl
div
rcll
add
jbe
arpl
add
sub
sub
push
stos
pop
pop
pop
mov
add
mov
dec
push
bound
mov
shrl
mov
mov
fdivr
or
rorl
addr16
pop
sub
jmp
fwait
push
cltd
cmp
jg
fidivrl
mov
mov
ss
in
frstor
cld
xchg
cwtl
pop
ljmp
fiaddl
nop
inc
les
bound
inc
mov
stos
fadds
add
mov
dec
fcomi
sbb
cld
mov
and
pop
and
lds
dec
nop
ds
pop
cmc
jae
fcmovbe
aad
fs
sahf
push
xor
rcll
xchg
inc
mov
aam
push
mov
or
mov
rcr
jge
js
icebp
cmp
mov
adc
mov
test
sbb
insb
aaa
xchg
cltd
in
add
inc
rclb
and
loope
scas
jge
repz
pop
mov
mov
mov
cmpsb
sub
sub
fstps
mov
bound
add
xchg
mov
xor
cmp
fsubp
bound
pop
pop
les
subb
mov
sub
out
xor
push
or
add
jae
pushf
pop
dec
jb
data16
in
int
popf
fdivrl
js
test
xchg
mov
ljmp
sysexit
test
inc
add
incl
ret
sbb
xor
lea
adc
aad
sar
loop
sub
mov
outsb
cltd
ss
cli
fs
mov
std
jp
loop
pop
xchg
ljmp
xor
imul
shrl
and
lret
arpl
jmp
notl
movsl
pushl
pop
jns
leave
mov
cli
fs
sbb
hlt
addr16
dec
jb
test
xor
push
fsub
ja
cmpsl
jo
adc
dec
ret
sbb
fnstcw
cs
popa
mov
jmp
roll
xchg
stos
int
scas
jns
xlat
jno
or
ljmp
fisttpll
popf
add
and
xchg
or
jb
mov
lea
xor
mov
lods
lcall
dec
orl
test
lcall
pushl
jnp
sub
sub
lret
in
hlt
movb
daa
pop
push
ja
stos
incb
lds
and
push
or
fsubrs
pop
mov
inc
imul
xchg
aas
push
inc
mov
mov
lods
pop
ljmp
dec
pop
lret
xor
leave
dec
push
xor
pop
jbe
pusha
imul
mov
fimull
cmp
insb
insl
je
sbb
inc
mulb
mov
adc
in
bound
jae
ja
outsb
sub
or
in
push
cmp
push
xor
ss
ja
adc
mov
js
paddsb
xor
pop
sub
cmp
mov
mov
hlt
push
ficoms
mov
push
aas
push
push
jne
dec
xor
movsb
popf
repnz
inc
fsubl
bound
mov
fwait
pop
xchg
jmp
cmpsb
add
in
inc
xchg
cmpsl
lret
sbb
ret
add
sbb
shrl
dec
ficompl
cmp
adc
push
test
or
pop
push
lret
fdivs
sub
dec
jne
xlat
fisttpl
jne
loop
or
add
imul
push
sub
pop
push
inc
sub
push
inc
mov
jge
xchg
jae
mov
mov
rclb
adc
pop
loop
jmp
sbb
or
dec
and
iret
popf
or
cmpsl
pop
mov
adc
jl
cli
jl
xchg
ljmp
divb
js
or
sub
pop
mov
and
pop
mov
push
sti
jo
jbe
add
js
cs
dec
mov
call
js
and
lret
lcall
in
mov
inc
repz
imul
lods
pop
add
push
aaa
xor
sbb
push
or
rolb
jl
pop
xor
sbb
mov
dec
in
mov
mov
xchg
insl
and
xchg
xor
adc
faddp
cmp
aam
loopne
fnstcw
rol
sbbl
mov
cmp
inc
push
fs
pop
mov
mov
scas
mov
push
and
xor
push
mov
jae
movsb
sub
and
and
xchg
pop
cmpsl
mov
insb
bound
int
dec
inc
and
out
adc
push
mov
mov
jb
xchg
mov
pop
stos
repnz
mov
adcl
cmp
out
adc
dec
push
push
adc
fimull
popa
dec
enter
hlt
lds
cmp
dec
sub
ja
sbb
add
pop
jns
dec
xor
adc
fldenv
cmp
mov
int3
adc
jle
enter
shl
push
aad
mov
jecxz
jecxz,pt
cmp
inc
rorb
shlb
jl
mov
in
arpl
pop
pop
push
aaa
pop
nop
jl
test
jbe
sub
sub
repnz
xchg
cmp
rcr
push
ja
xor
idivl
insb
and
aas
lret
int
shll
mov
ljmp
fs
or
mov
aas
ljmp
dec
leave
push
xchg
mov
out
int3
jl
imul
ds
add
jmp
jmp
and
das
or
adc
push
add
fistpl
cmp
pusha
rdpmc
mov
lock
adc
pop
push
insw
mov
loope
cmpl
pop
xchg
sub
imul
dec
add
iret
clc
push
mov
out
cltd
xchg
mov
mov
outsb
jo
cli
inc
out
ret
rclb
lods
mov
out
test
test
dec
or
popa
xchg
cmpsl
loopew
cmpsb
mov
mov
cmp
inc
sub
fs
xchg
cmp
pop
mov
fdivl
lahf
lret
adc
aaa
jp
dec
int3
add
push
aaa
pop
inc
inc
push
lret
xor
push
mov
jnp
xchg
and
xchg
sbb
and
leave
adc
jl
inc
xchg
mov
ds
fsubrs
daa
inc
or
imul
jo
xchg
es
sub
mov
push
lods
aad
cmp
push
adc
inc
jle
mov
movsb
movsl
sarl
and
in
out
mov
jns
pushf
ficompl
es
mov
shll
lock
icebp
shr
jae
jmp
xchg
jae
imul
movsb
adc
rcll
add
imul
sub
cmp
cmp
mov
stos
lods
push
out
sub
inc
imul
jne
mov
xlat
pop
arpl
in
add
out
int
inc
add
mov
sarb
nop
inc
and
or
pop
fnstenv
cmc
sub
adc
mov
inc
xchg
adc
jb
sub
mov
push
jne
xlat
or
clc
mov
clc
mov
sarb
inc
test
xchg
daa
inc
jg
movsb
mov
insl
bound
in
subb
push
jecxz
inc
adc
dec
rcrl
scas
pusha
mov
add
adc
lock
std
jle
mov
jle
mov
mov
adc
sub
fildll
daa
mov
pop
adc
jp
repz
dec
sbb
mov
test
lods
mov
addr16
cmp
cmp
sub
push
imull
adc
testb
nop
pop
adc
adc
cli
mov
daa
sbb
xchg
arpl
xor
mov
inc
imulb
dec
repz
sub
mov
mov
fwait
lds
xor
in
cmpl
push
mov
xor
xor
xchg
fdivl
add
ret
jmp
cmp
ljmp
jl
leave
jbe
out
sbbl
mov
orl
daa
cmpsb
insb
sahf
sbb
movsl
push
pusha
sbbl
lods
test
je
aas
mov
xor
dec
arpl
aam
push
bnd
pushf
push
push
mov
inc
xor
cmpsl
cs
in
sub
inc
jg
sbb
and
std
dec
inc
das
jo
test
jne
mov
stos
rorl
inc
cli
dec
dec
push
or
inc
jo
dec
push
xchg
xchg
or
inc
dec
mov
dec
pop
mov
ljmp
xor
or
add
stos
jmp
fisubrl
dec
mov
cli
mov
push
jae
movsb
dec
and
xchg
sub
enter
xor
cmp
fwait
imul
popa
cli
adc
pop
fidivs
pushf
adc
into
add
and
push
lock
add
das
xchg
mov
sub
iret
ds
stos
cmp
loop
cwtl
mov
push
cmp
in
mov
mov
clc
cmp
cli
lds
insb
scas
mov
mov
mov
sub
pop
repnz
popa
push
fnstcw
frstor
xor
fisubl
and
fscale
orl
cmp
ja
xchg
xorb
scas
mov
movb
cmp
mov
cld
jbe
mov
aam
mov
xor
inc
stos
sub
out
jns
jne
lea
cld
push
out
sub
push
rcrb
push
ds
lret
xchg
sub
and
mov
mov
cbtw
inc
mov
sar
mov
fdivr
daa
test
mov
cmp
lret
and
sub
dec
scas
push
mov
imul
in
fildl
fsubp
movzbl
arpl
inc
xor
inc
fldl
pop
popa
cmpl
add
pavgb
push
sub
sub
icebp
ret
fildll
cmp
fldl
test
inc
clc
adc
aam
jns
cmp
cs
icebp
cld
and
xchg
stos
clc
xchg
push
inc
sub
push
scas
movsb
pop
cmp
or
jp
loopne
cld
imul
enter
jle
pop
mov
jecxz
call
test
sbb
or
or
das
aad
and
jecxz
cmp
cmp
inc
loope
mov
test
xchg
cmp
mov
iret
or
scas
gs
xor
pop
out
jp
add
pop
push
jg
daa
adc
jae,pt
repnz
mov
jle
fnstenv
insb
sub
call
jns
imul
sbb
pop
hlt
xlat
push
lods
jg
or
into
mov
sub
in
xchg
clc
xchg
cmpl
xlat
jbe
adc
xor
push
inc
scas
pop
hlt
dec
mov
xor
add
jns
add
sbb
iret
das
ss
dec
sub
out
arpl
out
add
imul
mov
jg
add
inc
add
mov
xchg
xchg
or
fdivs
add
jp
jno
lock
mov
sub
jno
loope
in
ret
adc
stos
stos
inc
mul
rcrb
or
cmp
mov
decb
outsb
cmp
cltd
xlat
dec
mov
insl
std
dec
shrb
cltd
jmp
push
or
mov
in
mov
es
movsb
push
mov
outsl
inc
cmpsb
and
xor
push
xchg
loope
xor
ljmp
outsb
bnd
icebp
add
ret
pop
xor
pop
add
jns
out
outsb
xchg
cmp
xchg
pop
xor
xor
out
adcl
mov
orl
ret
sub
add
out
push
dec
int
mov
mov
xchg
in
mov
mov
lret
mov
dec
imul
sbbb
ljmp
fldenv
sub
jae
jl
out
movsb
xchg
jns
xchg
rol
cmc
shrl
push
jne
push
ret
pop
imul
or
mov
and
pop
shrb
push
lea
jne
loope
cmpsb
mov
testb
mov
sub
inc
and
or
cmp
lcall
mov
pop
fadd
jecxz
aad
mov
into
movsb
imul
cmpsb
or
push
mov
sub
int
bound
in
cwtl
xor
cmp
jne
ficomps
test
mov
and
cwtl
das
and
sbb
cmp
outsl
mov
dec
or
loop
std
inc
into
pop
xchg
out
sbb
and
jno
fsubs
xor
jae
pop
add
lret
jo
cld
je
ss
icebp
out
push
adc
nop
loope
pop
ss
sbbb
lret
scas
jmp
iret
xchg
push
inc
lcall
shrb
add
movsl
xlat
adc
loop
mov
add
push
hlt
mov
cmpsl
jp
push
loop
mov
and
or
jle
leave
stos
sbb
stos
cmp
xlat
mov
pop
cmp
dec
mov
repnz
shlb
adc
adc
aam
orl
push
mov
xor
pop
rclb
loope
cmp
lds
in
xlat
add
and
mov
add
push
popa
sub
jmp
dec
cwtl
rcll
int3
cli
out
push
pop
repnz
sti
cmp
shll
ret
add
adc
adc
pop
jle
notl
sti
rcll
push
mov
and
and
xchg
inc
or
test
jnp
sbb
mov
sbb
and
xor
aas
push
push
movaps
sti
fxch
dec
andl
jne
loope
shlb
push
out
cmp
ljmp
lret
cmp
push
xor
outsb
ja
jne
sbb
out
push
add
sbb
lock
jbe
cs
xor
pop
mov
inc
xchg
loope
outsl
hlt
xchg
out
nop
in
xor
out
andb
lods
inc
subb
out
inc
mov
popa
cmpl
out
adc
add
inc
or
mov
jb
das
enter
xlat
jo
repz
sbb
jb
mov
sarl
adc
pop
lret
cld
in
test
loop
jg
pop
scas
enter
test
int
adc
xor
pop
cltd
adc
adc
in
shlb
mov
cld
cmp
cmp
iret
add
cmp
mov
sbb
jp
in
dec
iret
mov
push
sbb
lods
imul
pusha
test
add
xchg
imul
pop
and
and
dec
mov
adc
xor
out
filds
and
int
jmp
push
scas
cwtl
push
inc
cmp
mov
rcrl
mov
pop
or
push
jmp
pop
divb
out
scas
sub
cmp
movsl
out
fcmovb
lock
xor
loope
test
shrl
cmp
aad
cmpb
jp
cmp
stos
testb
jp
xchg
dec
sbb
sbb
push
inc
push
lahf
subl
stos
enter
mov
sbb
rol
lds
sbb
in
sub
xor
movsb
adc
cld
adc
mulb
dec
mov
in
jle
ret
aad
push
cmp
jns
sbb
jp
lret
mov
sub
xlat
sbb
pusha
imul
movsl
mov
push
adc
xchg
shll
cmc
pop
mov
cmp
mov
fistps
fwait
cmpsb
jno
ja
aaa
mov
cwtl
mov
push
adc
cmp
das
xchg
fbstp
push
pop
push
push
mov
and
xor
imul
mov
mov
loopne
dec
jecxz
movsb
jbe
adc
es
dec
push
mov
pop
lods
or
and
mov
imul
test
addl
ss
call
arpl
nop
mov
push
inc
cli
call
jp
dec
test
imul
mov
fidivrs
cmp
and
call
mov
xchg
sarl
adc
xor
jne
rclb
bound
std
mov
jg
inc
jns
cmp
cmp
cmp
cwtl
es
jmp
notb
pop
nop
std
xor
push
push
cmp
cs
mov
cmpsb
pop
jmp
test
push
xor
inc
push
popa
pop
popl
sbb
and
movl
mov
adcb
jb
sbb
insb
gs
jnp
and
push
or
fucomip
cs
push
scas
repnz
add
fsubl
sub
xchg
aam
aad
test
outsb
pop
add
dec
je
xchg
hlt
lahf
add
push
scas
cmp
arpl
pop
sub
movsl
add
push
inc
xchg
sarb
jge
xor
xchg
mov
dec
jecxz
addr16
dec
mov
and
cmc
push
sub
cli
mov
and
imul
cwtl
incl
xchg
sahf
ja
gs
addr16
mov
iret
lahf
dec
iret
fcomps
cmp
std
pop
sub
sub
test
pop
push
std
addr16
add
xor
fcmovbe
imul
fwait
jl
aad
add
scas
xchg
in
rcll
push
jae
ret
sti
sbb
sub
popf
adc
jnp
push
mov
mov
xchg
adc
jo
pop
xchg
jmp
jmp
inc
mov
jo
fisubrs
popf
movsb
pop
mov
rolb
outsl
xchg
addr16
mov
mov
js
leave
xlat
adc
rcll
or
lret
add
arpl
add
push
push
dec
sahf
iret
fadds
scas
xor
pushw
data16
mov
and
insb
or
mov
xchg
mov
and
int3
pop
lcall
gs
mov
std
and
sub
xlat
dec
out
mov
jp
and
es
ja
push
fsubp
mov
call
outsl
cmp
loope
cmc
ret
cmp
dec
movsl
jmp
stos
out
or
lret
add
and
js
cli
adc
fwait
lretw
pop
std
xchg
lea
mov
mov
out
fstps
js
ja
jge
add
pop
clc
out
or
and
enter
outsb
jecxz
jb
out
pop
into
cs
hlt
cmp
sbb
or
sbb
dec
push
hlt
xchg
push
rclb
rcr
mov
ja
mov
icebp
and
xor
jbe
lds
loope
push
xor
dec
pop
loopne
clts
jae
fwait
push
cwtl
jbe
loopw
and
gs
das
jne
rclb
fidivrs
mov
cmpsb
daa
data16
cmp
inc
xlat
aam
mov
test
mov
add
test
leave
inc
ret
ss
inc
xor
inc
inc
das
jl
push
arpl
sub
and
jg
insb
mov
test
inc
adc
movsl
stc
sbb
dec
jo
lods
mov
dec
adc
sub
mov
es
fcmovnu
xorb
adcb
in
lock
rorl
rcr
imul
xchg
scas
repz
sub
sbb
ss
insl
pop
mov
rorb
cmpb
mov
cmp
push
xchg
cmpsw
clc
mov
jg
xor
aam
adc
dec
sub
popf
add
xor
mov
add
ss
pop
cmpsb
cmp
leave
aas
inc
scas
loope
inc
fwait
adc
sbb
inc
sti
jbe
pop
sbb
adc
sbb
add
sbb
out
push
jb
clc
inc
call
andb
push
pop
lods
push
lret
lret
dec
mov
shlb
add
daa
xchg
dec
pop
lahf
cmpsl
cmc
dec
lcall
and
jp
and
stos
inc
cmp
jne
outsb
out
jnp
push
test
rcl
scas
int
xchg
pop
jb
mov
adc
lret
fidivrl
and
aaa
or
mov
ja
xchg
mov
pop
push
out
xor
stos
mov
outsb
sbb
addr16
xchg
sub
push
pop
jbe
pop
jb
test
cmp
dec
leave
or
sub
mov
and
lahf
ret
cwtl
mov
mov
lock
dec
inc
push
sbb
mov
les
cwtl
mov
adc
cmp
xorb
pop
jno
push
mov
xchg
mov
pushf
mov
pop
lods
jg
arpl
popa
dec
lcall
xchg
mov
adcb
out
fistl
es
iret
fldl
mov
call
cmc
data16
rcl
pop
in
test
jmp
push
push
sub
cmp
dec
out
sbb
pop
pop
imul
dec
out
rolb
xor
mov
mov
inc
fimull
or
mov
inc
sbb
iret
sti
jecxz
test
dec
stos
adc
push
or
sub
inc
jo
cli
fnstcw
or
fmulp
push
sbb
add
or
pusha
push
pushl
aaa
mov
push
xchg
cmp
dec
orl
in
arpl
jmp
fistps
in
mov
or
mov
shlb
sub
push
rolb
jmp
jb
addr16
into
incl
push
fdivl
arpl
add
dec
test
cmp
or
inc
fstl
add
mov
icebp
jo
xchg
sub
mov
jge,pn
adc
lea
mov
std
sahf
in
sahf
rcll
jmp
inc
inc
in
icebp
repz
xor
adc
or
call
cs
lods
mov
add
test
lods
cmp
pop
outsl
inc
jae
pop
shl
dec
pop
push
jl
push
mov
push
nop
xor
ds
mov
pop
int3
mov
add
jb
lcall
xor
and
push
or
imul
jbe
sbb
pop
call
test
rcrb
xor
filds
fcoms
sbb
mov
add
xchg
pop
push
daa
cwtl
cmp
arpl
ret
mov
addr16
iret
xor
outsl
or
test
cltd
pop
mov
sbb
cltd
ret
xor
popf
lahf
addr16
push
fwait
adc
sahf
mov
xor
mov
cmpsl
add
pop
rclb
clc
movsb
bound
lcall
lods
sub
push
mov
movsb
pop
nop
add
out
stos
sbb
adc
sbb
and
sub
inc
nop
jae
cltd
jg
dec
pop
daa
push
and
ja
adc
rcrl
iret
adc
imul
jnp
imul
sub
xor
or
dec
shl
inc
mov
xor
movsl
pop
adc
adc
jne
pop
loop
aad
mov
lcall
push
lcall
shlb
xchg
mov
pop
mov
cld
stos
push
push
in
fucomp
insl
out
sbb
xchg
into
inc
xchg
insl
arpl
mov
ret
adc
jecxz
xlat
mov
cmp
outsb
dec
push
add
ljmp
outsl
mov
xor
inc
popf
cmp
ror
out
dec
sbb
fwait
inc
mov
shl
rcl
mov
xor
mov
cld
add
loope
aas
add
push
push
adc
cmpsb
mov
cltd
cmc
mov
jecxz
sub
daa
sbb
dec
push
adc
cli
push
insl
jnp
sbb
mov
mov
cmp
sub
adc
mov
dec
imul
mov
outsl
enter
mov
mov
cmp
test
cmp
icebp
sub
icebp
adc
sub
loope
jae
mov
mov
pop
push
jmp
ud1
ret
lcall
jmp
add
add
mov
stos
std
and
push
inc
aaa
stos
aaa
cmp
mov
cld
inc
mov
push
mov
push
mov
and
movsl
andl
clc
dec
add
iret
or
lea
mov
mov
iret
in
std
ljmp
test
pop
pop
mov
cld
lcall
in
jg
push
push
sub
in
mov
in
push
insl
dec
or
addl
add
jbe
stc
rcr
push
pop
cwtl
fwait
scas
mov
fwait
mov
fisubl
mov
leave
mov
lods
cwtl
testb
pop
ss
mov
call
cmp
sbbb
cmp
push
push
sbb
aam
mov
and
xchg
mov
sbb
or
jno
shlb
sub
mov
sbb
stos
sub
and
mov
xchg
sbb
mov
push
jp
or
cs
scas
jle
test
xor
mov
jle
fld
jmp
cmpsl
test
add
jge
pop
dec
add
xchg
xchg
jmp
mov
pop
pop
aad
stos
mov
push
push
xchg
lahf
dec
push
add
mov
icebp
enter
lods
clc
popf
jge
push
jmp
or
mov
mov
clc
lock
lods
hlt
fwait
sub
out
shr
mov
pop
arpl
mov
sbb
cwtl
jle
cld
and
push
jmp
ljmp
in
into
xor
mov
adc
add
and
jae
das
imul
pushf
mov
test
lahf
shll
or
mov
nop
jl
nop
jo
mov
dec
ret
es
das
idivb
dec
cmc
int3
mov
mov
leave
mov
pop
mov
inc
mov
je
pusha
nop
shrl
xchg
outsb
cmpsl
xlat
frstor
push
fwait
pop
mov
aam
inc
aas
fnstenv
mov
add
int3
outsb
sbb
mov
inc
mov
cmp
dec
sar
div
add
out
jno
mov
xor
adc
data16
push
int
cmp
adc
cmp
dec
fisubs
popa
andl
or
pop
rorl
es
aaa
sub
cmp
ja
clc
cltd
sub
mull
repz
sub
jge
adc
andl
jbe
mov
test
inc
sbb
loopne
xchg
mov
addr16
imul
insb
xchg
push
or
push
xchg
add
cmp
lret
lahf
rep
xorl
lock
inc
out
cltd
cmp
jecxz
adc
sub
cli
jns
xlat
fsubrp
scas
decl
imul
pop
or
fnstsw
ds
ds
sbb
fimuls
loope
jbe
jnp,pn
push
cmp
rolb
inc
orb
push
sub
ret
insl
or
add
pop
jo
xchg
rorl
cld
inc
push
mov
cmp
pop
xchg
aam
lahf
das
lods
loope
scas
mov
cmp
inc
dec
inc
mov
sbb
fwait
jge
xor
stc
imulb
out
out
call
insb
stc
lods
inc
jno
gs
cmp
fldcw
xchg
faddl
inc
pop
push
mov
addb
jo
out
dec
pop
xchg
adc
shlb
movsb
imul
jo
cmp
cli
push
repz
mov
mov
cmp
jnp
jae
xchg
or
pop
and
cs
faddl
dec
add
cmpsl
loope
xchg
xchg
into
adc
mov
mov
js
es
cwtl
or
mov
lcall
insb
dec
imul
or
push
int3
push
ret
popa
pop
test
fildl
push
inc
xchg
int
xchg
test
push
cmp
testb
in
push
leave
add
lods
popf
loope
push
cltd
xchg
in
mov
push
push
cmpsb
cmp
movb
repz
mov
outsl
mov
cltd
dec
add
jb
hlt
pop
into
scas
les
adc
movsb
mov
push
std
jne
or
add
mov
outsb
mov
je
mov
pop
sub
xchg
notb
mov
push
sahf
push
addr16
xchg
jmp
dec
mov
push
in
sbb
push
sbb
add
sbb
cli
ljmp
xchg
and
rcll
stos
call
adc
add
icebp
mov
xchg
imul
push
or
jo
lahf
jg,pn
daa
jle
out
js
lret
xchg
or
mov
xor
sbb
cld
movsb
mov
icebp
sbb
adc
dec
lods
jle
jg
insl
xchg
xlat
loope
pop
sar
lea
subb
xchg
arpl
add
loope
shll
out
mov
leave
xchg
mov
push
add
int3
inc
in
xor
adc
cld
mov
xchg
inc
ja
jno
dec
nop
rolb
push
outsl
cwtl
xchg
jmp
or
jg
pushf
fsubrp
push
cmp
jns
push
jbe
mov
dec
sub
jg
lds
pushf
mov
nop
outsb
test
iret
clc
clc
sbb
inc
aas
scas
sbb
fnstenv
enter
xchg
outsl
out
loope
sbb
cmp
pop
imul
cmp
and
imul
lahf
and
adc
imul
pop
sahf
xchg
int
inc
sub
dec
out
push
movsl
stos
push
call
add
mov
or
jle
jns
or
pusha
xchg
add
insl
daa
pusha
cmp
adc
adc
add
data16
xor
les
pop
pusha
call
les
xor
cltd
inc
sub
mov
movsb
rclb
inc
mov
mov
shrb
cmp
inc
sub
lods
cmc
js
int
nop
pop
fistps
cltd
xor
popa
rcr
xchg
arpl
int
pop
push
cltd
test
stos
lock
mov
xchg
sbb
pop
mov
lds
int
cmp
push
xchg
adc
dec
jne
leave
xchg
cmp
int3
xchg
sub
mov
lahf
or
ds
clc
lods
push
mov
push
dec
in
mov
add
ror
sub
ja
in
sbb
in
lret
pop
or
fs
push
mov
inc
imul
cmpsl
sub
syscall
mov
test
sub
in
push
pop
orb
xchg
dec
push
xchg
pop
mov
in
pop
mov
xlat
or
popa
test
xor
orb
lahf
mov
cmp
mov
fisubrs
push
hlt
int3
pop
in
ds
loope
mov
jmp
outsl
dec
adc
mov
cmp
pop
movq
fsts
iret
pushf
xor
or
mov
xchg
mov
popa
pop
sti
out
pop
jno
inc
imul
sti
sub
idivb
sbb
sub
xor
cld
arpl
movsb
add
mov
push
jns
and
push
mov
repz
cmp
cli
ds
addr16
or
rcll
xlat
push
addr16
fnstsw
stos
ret
xor
and
data16
sub
push
inc
out
pop
out
dec
xor
push
jmp
fnstcw
in
sub
push
lea
push
int3
pusha
andb
mov
je
inc
loop
cs
ret
inc
pushf
dec
sbb
pop
loope
push
xor
outsl
fistl
xorb
pop
enter
nop
rorb
push
rclb
lahf
cmp
mov
mov
ja
jb
jg
jno
cmpsl
push
lcall
icebp
popf
mov
lret
addr16
adc
jbe
sbb
jmp
shl
call
mov
ret
pop
and
push
mov
icebp
adc
cmp
lret
sahf
pop
inc
sub
push
add
aam
clc
enter
xor
xor
dec
push
cmpsb
not
fcompl
ss
rolb
mov
pushf
xchg
xorl
pushf
stc
into
adc
dec
sbb
pop
cli
inc
je
sbb
xchg
sti
jg
jns
xor
lret
and
fnstsw
mov
mov
shrb
ret
ja
pop
jbe
pop
fdivrs
mov
sbb
cwtl
dec
adc
xor
lret
mov
xchg
jl
push
scas
cs
enter
jb
xchg
push
cli
movl
or
aas
or
xchg
arpl
popa
xchg
jmp
and
push
or
or
sub
ret
popf
leave
push
dec
jns
insb
mov
repnz
mov
lea
test
into
sarl
insb
insb
in
or
mov
mov
push
stos
stos
es
cmp
mov
jg
outsl
pushf
push
xchg
mov
xchg
xor
cmpb
loope
repnz
divb
cmp
das
dec
icebp
add
stc
ret
xchg
push
imul
cltd
pop
insb
ficomps
daa
mov
xor
aaa
xchg
jne
es
push
test
mov
arpl
push
loope
or
lds
jbe
push
dec
pop
pop
cmp
pop
xor
sti
imul
out
loop
xor
cmp
jbe
sub
faddl
iret
ja
xor
aam
adc
ds
inc
mov
cmp
dec
mov
das
lods
into
das
jecxz
imul
lret
insl
adc
or
iret
into
push
dec
sahf
fsin
insb
adc
push
je
hlt
dec
loopne
xor
xchg
xchg
icebp
cwtl
stos
sbb
iret
mov
lock
pop
lods
or
pop
mov
dec
jg
mov
dec
mov
adc
mov
stos
dec
nop
pop
int
dec
shlb
xor
push
scas
jmp
outsb
iret
lds
push
lods
sub
push
je
lahf
mov
out
dec
ja
mov
dec
out
cmp
xchg
in
add
js
loope
dec
outsl
gs
pop
sbb
sub
cmp
das
jl
mov
dec
sub
out
xchg
aas
in
cmpsl
mov
push
in
or
push
hlt
and
out
jo
xchg
fwait
clc
gs
adc
pop
lods
aaa
xor
jle
jle
cwtl
out
xchg
push
les
push
inc
jp
pop
iret
mov
sub
jge
push
jmp
dec
pop
lea
lret
dec
mov
push
shlb
add
pop
cwtl
mov
or
inc
mov
mov
fbld
je
fs
pop
push
loope
xchg
leave
ss
gs
jno
pop
xchg
std
outsl
xchg
add
ja
xlat
stc
sbb
push
js
es
and
cmp
insb
in
mov
repnz
ret
and
xchg
call
test
sbb
cmp
pushf
nop
push
movsb
imul
add
adc
cmp
xor
sub
int
mov
cltd
jns
lret
xchg
rol
xor
xchg
xor
mov
cltd
dec
aaa
push
pop
inc
fldenv
jb
or
pop
int3
lock
lods
push
mov
add
push
and
adc
jl
loope
in
mov
add
lods
xor
cwtl
jp
cltd
add
mov
mov
xchg
adc
shlb
push
mov
adc
xchg
fisubs
cmc
stos
push
scas
or
fists
lahf
in
jbe
add
aad
ficomps
and
push
in
mov
insb
sbb
stc
popf
or
cmp
notl
mov
shl
push
je
inc
in
outsb
push
sbb
sti
mov
rorb
mov
mov
dec
fs
test
mulb
repz
pop
mov
test
outsb
popa
push
mov
jae
mov
jo,pn
xchg
push
movsl
decl
push
add
testl
movsb
xchg
hlt
xor
fidivs
mov
popf
subl
mov
push
add
xchg
cmp
lahf
xchg
pop
aas
pop
shrl
dec
inc
dec
aas
in
jae
and
sbb
and
cmp
repz
rorl
push
jns
imul
mov
add
cld
es
xchg
and
xchg
mov
or
adc
sbb
and
lods
jle
adc
lea
adc
pop
push
mov
or
lea
sub
lock
sbb
pusha
adc
call
mov
adc
nop
arpl
mov
mov
jae
rorb
cmpl
rorl
imull
popa
mov
and
clc
push
ret
xchg
dec
push
push
test
imul
mov
inc
stos
mov
adc
cmp
bound
inc
mov
into
xchg
mov
cmp
xor
and
std
ret
in
inc
push
inc
add
dec
les
xchg
clc
outsl
data16
pop
loop
std
rcll
je
and
movsb
pusha
pop
ljmp
xlat
aam
dec
jne
outsb
inc
dec
sub
sarl
mov
inc
pop
dec
fadds
xchg
and
rolb
js
inc
cmp
rclb
ret
into
out
inc
or
pop
stos
fiaddl
movsl
addr16
cwtl
mov
cmp
sbb
mov
mov
leave
insl
xlat
cmp
mov
pop
ja
lock
cmp
js
jb
ret
pop
pop
cmp
mov
popf
rclb
sub
sbb
xchg
roll
mov
in
mov
lods
cwtl
stos
call
or
bound
mov
pop
xchg
add
adc
insb
loopne
or
sahf
sub
sub
push
rclb
mov
bound
inc
ja
inc
sub
addr16
loope
sub
je
cltd
mov
xor
sbb
js
aas
loop
decb
push
pop
xchg
pop
mov
loope
out
push
and
aad
andb
ret
cmp
fstl
xor
dec
sbb
outsl
js
shll
dec
or
sbb
popf
mov
jnp
mov
rep
mov
mov
sbb
movsb
or
add
push
cwtl
and
mov
push
push
shll
mov
xchg
pop
mov
adc
scas
fwait
inc
adc
gs
cli
pop
insl
pause
lret
mov
mov
pop
dec
fidivrl
mov
mov
mov
push
add
or
daa
repz
sub
jge
sub
pop
bndstx
mov
mov
xor
test
aam
ror
xchg
xor
outsl
loopne
ds
mov
and
in
addr16
sub
xlat
cmp
inc
pusha
outsb
ret
mov
sub
jle
pop
mov
adc
cmp
ds
stc
loopne
daa
jge
jnp
mov
pop
js
sub
icebp
icebp
test
xchg
imul
sub
pop
je
pop
mov
cltd
enter
mov
pop
int3
shl
mov
test
frstor
into
ret
int
int3
addb
add
mov
pushf
call
data16
pop
dec
imul
sub
mov
xor
call
aad
aam
push
mov
sahf
clc
push
ds
enter
cmpsl
fidivl
jp
loop
stos
adc
inc
scas
loopne
scas
icebp
cld
adc
xor
and
mov
mull
xor
mov
loop
sbb
fdivrp
push
and
jb
mov
push
mov
xor
push
rorb
lret
sub
pop
push
scas
int
js
mov
sub
xlat
sub
ds
adc
xor
out
cs
mov
pop
daa
or
xchg
inc
les
push
idiv
xchg
add
shll
mov
add
xor
rol
or
fsts
pop
ds
inc
mov
xor
arpl
jnp
sub
sub
rorb
and
adc
inc
fs
fists
add
sbb
stos
and
jne
dec
push
mov
ret
push
inc
xchg
aam
pop
dec
mov
je
and
dec
fsts
xchg
push
fisubrs
rcl
pop
cmp
pop
daa
ljmp
mov
add
lds
mov
movsb
filds
or
add
push
mov
setno
ljmp
or
into
loopne
add
sbb
sub
in
lock
mov
sbb
les
sub
jg
enter
cmpsb
std
pop
in
push
cwtl
add
push
mov
mov
cmpsl
or
fisttpl
jl
inc
popa
inc
jg
mov
or
lcall
cltd
xchg
jecxz
popf
lahf
cld
jne
xlat
pop
aaa
mov
daa
outsb
xor
rcll
rorl
pop
sub
sub
mov
cmpsb
fimull
and
nop
mov
pusha
jnp
xlat
xchg
jecxz
adc
pop
ficomps
in
out
out
mov
pushf
leave
sub
add
aas
jne
sti
aam
sub
lock
pop
jb
inc
cmp
mov
ror
pop
cmp
repz
insb
push
mov
mov
mov
mov
jb
int
mov
mov
push
sbb
ss
in
jmp
fwait
dec
jge
aad
inc
add
xorb
fistl
push
in
loopne
xchg
leave
out
es
pop
inc
mov
mov
xchg
lahf
sub
mov
cmp
inc
mov
jo
jl
pop
push
imul
pop
insl
lds
inc
ds
sbb
add
pop
dec
mov
mov
sbb
ja
jno
ja
fdivl
mov
jne
and
lock
push
sbbl
adc
xor
shlb
aaa
add
sbb
cmp
loope
sub
test
adc
ja
jo
pop
leave
das
xlat
fimull
mov
fs
and
pop
fwait
jns
notl
pop
sti
rolb
dec
mov
add
cmp
fbld
xchg
add
xchg
jne
mov
jmp
pop
mov
push
div
inc
cmc
mov
mov
jmp
icebp
cmp
mov
or
push
jl
mov
lods
and
xchg
add
test
daa
cmpsl
fldcw
scas
iret
push
mov
cmp
imul
and
divl
dec
fsub
int
lcall
nop
jge
adc
push
dec
jmp
sub
sub
xchg
pushf
jo
pop
imul
stc
dec
cmp
push
add
lock
pop
loop
jo
cmp
jecxz
dec
add
decl
cwtl
mov
or
jnp
mov
dec
rcrl
jb
xchg
test
mov
sbb
pop
fiaddl
cmp
mov
stc
insl
fisubs
negb
push
mov
push
jne
ret
xchg
mov
aad
loop
clc
mov
jnp
cli
stos
sub
jno
ss
jae
aam
insb
pop
or
push
aam
adc
inc
cli
add
xchg
sti
notl
mov
add
pushf
enter
addr16
xor
adc
fistps
test
mov
mov
jnp
mov
or
das
mov
adc
mov
jnp
inc
std
jl
mov
movsb
cld
adc
add
dec
mov
es
daa
jo
mov
adcb
pop
negl
js
xor
mov
ror
sti
mov
sub
jg
adc
or
add
imul
xchg
jae
sahf
cmp
stc
sti
and
mov
loope
mov
addr16
nop
mov
mov
in
ficomps
xchg
mov
sti
jp
fisubrs
xchg
insl
xchg
and
cmpsl
cmp
cmc
outsl
jecxz
dec
inc
enter
hlt
jg
into
mov
hlt
mov
push
fucom
jg
out
mov
stc
lahf
aaa
imul
aad
fs
aas
testl
lods
pop
pop
or
inc
xchg
aam
fisubrl
inc
jno
and
sbb
ja
out
xor
lea
ds
repnz
xor
es
inc
push
dec
push
xchg
mov
in
adc
fstp
lods
mov
sbbb
aaa
pop
jmp
aad
jge
icebp
fsts
gs
mov
fistps
mov
leave
xchg
mov
imul
pop
pop
ficoms
ficoms
pop
cwtl
mov
cmp
mov
movsl
mov
adc
or
push
dec
pop
std
jbe
dec
scas
xor
jge
inc
iret
shl
loope
cmc
cwtl
jae
iret
pop
xor
add
lahf
mov
mov
and
movl
dec
outsl
jecxz
mov
lret
sub
inc
sbb
fcmovne
std
and
dec
adc
xchg
push
mov
jl
imul
lret
mov
imul
js
ss
mov
xchg
cld
jno
fsincos
push
add
mov
or
pop
js
or
pop
jae
xchg
jecxz
sbb
mov
popa
mov
add
and
loop
xchg
lea
mov
xchg
jae
stos
shl
or
je
push
mov
mov
outsb
cld
into
pop
add
popf
cmp
dec
adc
fwait
imul
in
add
adc
jg
mov
lods
stos
enter
pusha
inc
or
lcall
call
es
cmp
and
cld
or
icebp
cmp
aas
pop
push
incl
pop
sahf
dec
movsb
or
repnz
ss
jae
mov
loope
mov
cmp
fldcw
jae
mov
jmp
mov
cmp
clc
insl
jg
pop
in
data16
ret
outsl
adc
push
dec
mov
pop
push
jmp
aad
push
pop
loop
push
or
xchg
or
stc
xchg
shrl
movsb
mov
shl
call
dec
fidivs
push
in
mov
push
or
pushf
mov
sub
jp
and
es
mov
mov
cmc
xor
sbb
xchg
mov
pop
inc
inc
nop
lahf
push
adc
jecxz
scas
insb
xchg
in
push
les
push
mov
aas
fisubl
call
in
mov
inc
push
inc
lret
cli
cmp
jecxz
lds
jnp
data16
out
xchg
xchg
ja
inc
frstor
inc
push
fwait
lods
jle
xor
pop
mov
ds
lret
pop
adc
aam
jl
ret
inc
mov
push
in
add
fiadds
arpl
mov
xchg
scas
int3
mov
movsl
mov
xchg
fs
scas
jl
int
mov
out
pop
scas
pop
out
sarl
xlat
push
xchg
out
and
aaa
cld
out
stc
or
stos
add
pop
filds
mov
xor
rorb
ret
lods
arpl
iret
lcall
rorb
lahf
aaa
rorl
outsl
mov
fnstenv
xchg
leave
xor
test
push
shrb
movl
shlb
mov
xor
out
repz
adc
mov
pop
and
lods
jl
arpl
pop
mov
bound
jge
dec
xchg
add
into
ljmp
and
repz
dec
adc
je
pop
ret
or
ud2
mov
mov
out
jns
mov
cli
xchg
xchg
sbb
je
xchg
xchg
cwtl
aaa
loop
notb
add
and
aas
sti
adc
pop
sahf
ss
ja
lret
and
mov
and
test
jmp
movsl
aad
adc
ror
stos
jmp
mov
jecxz
push
adc
outsl
es
push
inc
loopne
and
ret
dec
imul
mov
and
mov
js
pushf
mov
sub
mov
popf
data16
adc
dec
out
xchg
push
sarw
lcall
jb
and
xor
jecxz
lods
test
stos
mov
inc
insb
and
rcrl
in
fbld
rcrl
push
les
lods
out
pop
jo
push
sub
test
test
add
or
ficoms
sub
mov
xorl
xchg
repnz
or
or
xor
cld
mov
or
daa
pusha
dec
adc
mov
and
pop
push
cmpb
pop
add
xlat
fcoms
outsl
pop
xchg
ja
gs
sub
movsb
pushf
popf
sarl
mov
and
aas
mov
cmp
jp
inc
sti
lock
es
mov
out
mov
dec
jmp
mov
inc
push
push
dec
stc
mov
inc
popa
ret
mov
ja
mov
scas
adc
cmc
push
push
into
shl
lcall
loop
hlt
inc
mov
cli
sbb
pop
dec
scas
push
shrb
sbb
mov
sbb
add
xchg
jmp
out
sub
jae
xor
shrl
lods
loope
pusha
aam
jae
lea
leave
inc
mov
mov
out
pushl
test
fisttpll
fs
lahf
cwtl
bound
outsb
fimuls
xchg
mov
adc
hlt
cmp
push
mov
xchg
pushf
jecxz
inc
and
stos
push
cwtl
fstps
xchg
cmpsb
in
or
xlat
inc
out
subl
push
inc
ret
and
push
jb
lds
and
sbb
sub
mov
jo
push
scas
dec
js
test
aad
jnp
pusha
mov
add
xor
dec
fs
inc
inc
dec
clc
addb
add
pop
ret
imul
cmc
mov
pusha
ds
pop
pop
js
sbb
jno
in
xchg
or
push
pushf
sub
xchg
out
add
test
add
inc
aad
inc
pop
and
dec
sbb
add
repz
pop
mov
xchg
sbb
xchg
rcrl
pop
mov
pop
xchg
outsb
xchg
jp
and
pminub
js
push
jge
mov
cmp
rorb
lret
dec
xchg
movsl
daa
jmp
mov
cmpb
iret
imul
sahf
adc
xor
nop
inc
mov
xchg
add
in
setno
xchg
cmp
push
scas
push
push
and
jno
scas
pop
nop
insl
jnp
adcl
lods
xchg
ret
imul
cmpsb
cs
clc
repz
sbb
test
push
adc
mov
or
jne
xchg
xchg
xchg
notl
pop
cmpsl
sub
inc
jo
test
imul
mov
sbb
aaa
sbb
fiadds
pop
add
jbe
mov
inc
repz
sbb
xchg
psraw
popf
sub
pop
outsb
add
mov
xor
jg
jmp
loop
mov
es
jl
mov
pop
jne
aam
js
out
imul
mov
adc
and
shlb
cmp
jge
xor
in
mov
clc
in
jno
in
pushf
cld
aad
or
aas
or
push
lock
mov
xchg
pushf
xor
int3
sbb
sbb
jae
aad
pushf
shlb
jns
pop
in
sub
add
dec
xor
daa
ffree
fists
cmp
insl
or
dec
xor
jge
pop
xchg
mov
lock
insl
dec
sub
sub
arpl
pop
mov
sub
js
push
in
pop
into
sbb
sahf
scas
fidivl
mov
flds
cmpsb
repnz
mov
iret
testb
shr
addr16
fld
cmp
mov
ljmp
mov
cmp
jns
daa
inc
jge
mov
xchg
mov
inc
inc
adc
adc
or
mov
aad
es
push
pop
popa
fisubs
or
sbb
cmpsl
sub
and
in
jno
adc
ret
xor
xor
dec
pop
jae
push
push
jae
jecxz
loope
mov
loope
cmp
insb
popa
inc
inc
pop
aam
jmp
fs
dec
push
es
inc
daa
cltd
test
cmpl
shll
repz
rol
or
pushf
jno
scas
movlps
bound
or
js
push
push
mulb
pusha
pop
shr
mov
jns
leave
or
mov
xchg
mov
push
insb
sbb
daa
add
aad
mov
movsl
pusha
fstpt
xor
jle
loop
int3
call
adc
and
cmp
aaa
insb
pusha
sub
in
aam
adc
and
cmp
test
mov
imul
mov
int3
jg
scas
sub
push
in
orl
and
sbb
stc
xchg
cmp
dec
and
mov
stos
int3
lret
jg
ss
push
cmc
add
fnstcw
add
mov
inc
pushf
add
orl
jg
jle
cmp
mov
jg
lahf
ret
aam
fsincos
in
roll
movsb
addr16
pop
imul
out
mov
lcall
mov
fstpl
jg,pn
pop
mov
dec
and
fcmovu
add
mov
jae
int3
aam
cld
sub
push
or
jns
cmp
sti
push
cmp
repz
add
cmp
pop
sbb
bnd
sbb
decb
and
ret
sahf
sbb
adc
inc
dec
sbb
stos
or
setle
mov
lret
iret
test
jp
sbb
outsl
adc
gs
dec
gs
inc
mov
lcall
cmp
dec
mov
jno
adc
push
test
dec
mov
fildll
cmp
xlat
push
imulb
cli
out
mov
mov
cli
or
popa
aas
pop
sub
or
sbb
mov
xchg
jecxz
in
daa
ss
cmp
push
xor
fdivrl
pop
xchg
xchg
xor
iret
push
or
jg
jno
xor
mov
leave
pop
lock
xchg
ret
fisubrl
cmp
lahf
inc
ja
mov
push
idivb
fdivrs
jns
lret
push
sbb
loop
add
mov
push
sub
scas
push
shrl
cs
mov
inc
out
lea
and
scas
test
in
pop
cmovo
fidivl
pop
jbe
inc
or
leave
mov
aas
out
adc
mov
jmp
push
sbb
adc
and
addr16
push
push
sub
sbb
ljmp
push
dec
sahf
mov
mov
push
pop
test
push
or
incl
imul
jb
mov
sub
lock
mov
in
aad
or
xchg
loop
push
mov
cld
adc
in
stos
repz
push
dec
jae
jns
lds
fstp
loope
pop
xor
or
or
divl
push
jp
mov
cmp
lea
lcall
mov
push
inc
mov
add
repnz
mov
int3
jbe
rol
repnz
jo
and
in
bound
jp
dec
cmc
xchg
adc
jns
orl
scas
notb
mov
call
pushf
sahf
dec
dec
sub
int
xchg
or
test
inc
fs
inc
add
fmull
inc
call
cmpsl
mov
mov
es
test
pop
jb
pop
inc
imul
jns
test
outsb
jnp
sub
pop
cld
dec
imul
aas
mov
jnp
mov
popa
loop
or
jle
mov
aam
notb
flds
hlt
push
insl
pushf
call
fwait
test
jle
pop
dec
inc
push
jns
fldl
mov
hlt
push
inc
loope
das
movsb
mov
inc
pop
xor
sbb
call
mov
imul
xor
in
inc
or
test
add
nop
lret
mov
lcall
shr
jle
mov
mov
dec
cld
repnz
adcb
das
push
or
or
cmpsl
test
jl
push
movsb
pushf
in
and
pop
cmpsb
sub
cmp
push
sbb
popl
lea
jae
push
les
mov
mov
lods
pop
dec
add
adc
dec
jge
mov
cmpsl
popf
ja
pop
pop
sarb
add
inc
adc
aaa
das
orl
pop
stos
sub
or
test
jmp
cmp
cmc
push
xor
or
int3
lea
add
or
mov
mov
cmp
xor
cwtl
lahf
push
dec
out
fs
loop
dec
or
insl
fnstcw
jne
sahf
mov
add
cmc
dec
repz
orb
cmp
stc
mov
sub
jl
repz
pop
outsl
pop
mov
pop
ss
lea
mov
jns
adc
adc
inc
jp
gs
pop
xor
adc
dec
in
dec
test
outsb
add
scas
xlat
in
scas
lods
xchg
mov
arpl
mov
hlt
adc
inc
lret
pop
add
add
dec
test
movsl
mov
bound
jb
outsb
mov
subb
sahf
inc
jecxz
fistl
das
aas
leave
xchg
pop
mov
mov
pop
or
dec
jp
sbb
xor
mov
or
jbe
test
imul
cmp
pop
hlt
sti
push
call
inc
sahf
imul
inc
sbb
fdecstp
lret
adcb
lret
bound
jle
sti
mov
and
mov
inc
jmp
or
cmp
notb
bound
xchg
ss
jmp
and
int3
mov
out
mov
bswap
sbbl
mov
add
and
clc
jmp
lret
icebp
inc
dec
scas
xor
or
pop
sarb
icebp
lret
inc
sub
mov
icebp
cmp
loope
lods
jge
add
xchg
push
pop
movsl
repnz
orl
aas
add
out
lds
and
stos
and
adc
loop
int3
cmpsl
pop
lcall
adc
dec
into
fxtract
shlb
add
icebp
add
aaa
aas
jb
jmp
push
mov
shrb
into
das
mov
ss
mov
dec
xchg
inc
xor
nop
loop
inc
repz
add
mov
push
push
mov
dec
lcall
fsubrl
push
cmc
add
dec
mov
fistpll
out
lods
mov
cmpsb
neg
cwtl
repz
lahf
add
push
jnp
stc
loope
sbb
clc
scas
mov
lea
out
fisubl
adc
shl
push
mov
pop
in
lods
add
fdiv
xchg
xchg
pop
add
cmpsl
lret
lcall
xor
inc
addl
sub
jo
sbb
rorl
pop
cwtl
jecxz
xor
xor
inc
adc
mov
inc
jnp
loopne
unpcklps
cmp
aad
out
push
or
xchg
aam
push
mov
inc
lret
mov
and
push
cltd
xchg
test
loope
jbe
push
mov
std
orb
inc
loope
pop
mov
add
std
les
outsl
ja
cmpsb
or
jae
mov
movsb
arpl
xchg
out
movsb
lahf
xor
pop
nop
test
xor
pusha
jno
repz
push
lret
int
cmp
xor
repz
pop
xlat
or
xchg
jmp
adc
nop
jae
adc
loope
addr16
jecxz
mov
cmp
inc
mov
in
xchg
jle
lret
sti
fcmovnb
rorb
fisubs
push
daa
daa
jg
sub
into
cmpsl
cmp
mov
fstps
mov
sub
lds
push
call
stos
outsb
or
cltd
iret
enter
lock
cwtl
nop
xchg
mov
inc
iret
popa
jno
mov
das
das
int
icebp
mov
or
mov
shlb
mov
je
mov
xor
roll
ljmp
fdiv
dec
jns
push
jnp
and
and
mull
cmp
dec
sahf
loopne
ja
sar
enter
push
pop
call
popf
scas
xorb
sahf
mov
push
in
dec
mov
pop
jbe
fcmovu
sbb
scas
dec
int3
inc
cli
fsubl
mov
add
shrl
mov
scas
scas
mov
fwait
icebp
test
negl
fists
mov
adc
xchg
lea
repnz
subl
leave
popf
xor
sbb
int3
popf
push
cmp
scas
inc
ret
xor
std
shr
cmpsl
stos
jo
push
and
push
mov
mov
arpl
arpl
lods
pop
mov
mov
cmp
mov
jbe
repnz
dec
xchg
mov
and
fidivl
outsb
ret
or
das
xchg
hlt
push
mov
inc
adc
jne
mov
jle
mov
inc
pop
add
aaa
movsb
icebp
xchg
testb
add
scas
fbld
mov
inc
adc
fidivrs
or
stc
mov
jno
jmp
aas
jp
sub
cmc
leave
jae
jecxz
and
mov
mov
xchg
cwtl
rcr
std
sbb
mov
push
adc
mov
out
mov
or
or
dec
rorb
jp
mov
addr16
lds
aaa
hlt
je
dec
leave
out
sar
movsl
or
scas
stos
inc
imul
stos
in
pop
and
jecxz
push
adc
rcll
push
data16
or
pop
inc
scas
pushf
aaa
jle
pop
mov
xor
dec
pushf
cs
pop
incb
ljmp
adc
fstps
lods
insb
out
outsl
mov
sbb
add
add
test
movsl
dec
dec
cmpsb
out
test
mov
jmp
inc
outsl
fsubrs
test
jo
cmpsb
cpuid
push
or
sti
rorl
xchg
imul
mov
aas
addl
or
es
jl
sbb
jecxz
inc
mov
or
out
shl
jle
ljmp
shll
cmc
lods
stos
xchg
popf
adc
iret
fs
add
cmp
jae
mov
dec
icebp
cs
adc
jg
and
addb
inc
movsl
das
aaa
pop
cmp
sub
rcr
fidivrl
xchg
icebp
push
mov
mov
xlat
clc
test
mov
minps
push
scas
adcb
mov
popa
out
pop
repz
mov
mov
and
xchg
sbb
lret
lret
mov
dec
inc
add
mov
dec
inc
adc
inc
mov
std
js
inc
push
adc
popf
call
jg
add
aam
xchg
fbstp
in
testb
out
add
lret
stos
into
push
pop
aas
pop
adc
sarb
inc
xor
sbb
xchg
shll
popf
icebp
pop
add
push
push
lock
add
mov
jno
jl
jnp
mov
rcl
push
daa
push
lea
jecxz
ret
lods
imul
cmp
jae
pop
mull
ds
les
cmc
and
arpl
jg
adc
enter
xor
dec
xor
dec
or
ljmp
das
add
xlat
push
je
jl
pop
lcall
adc
ret
add
cmc
dec
pop
daa
jae
mov
xlat
mov
xor
dec
push
icebp
add
rcll
js
inc
ds
cwtl
rclb
xor
push
dec
mov
push
and
ja
sbb
push
sbb
test
dec
and
xorl
cmp
adc
mov
es
xor
and
sub
lock
ss
cmpsb
pop
jg
cmc
loop
jno
mov
dec
fisttps
jns
fyl2xp1
sub
cli
cmp
add
or
mov
sub
mov
daa
imul
fldl
dec
in
xchg
pop
jmp
cmpl
push
leave
push
push
mov
jle
mov
cli
lods
push
popf
roll
fstpt
sbb
sub
dec
sbb
test
pop
cmp
or
fs
push
ja
mov
test
shll
psubsw
fxtract
shll
in
mov
xchg
arpl
mov
pop
das
adc
es
in
addr16
inc
fs
push
mov
and
cmp
and
ficompl
scas
stos
push
test
movsb
nop
bound
mov
xchg
inc
mov
fiadds
jge
ds
fs
jle
cmp
pushf
out
jns
xchg
repz
mov
jge
inc
xchg
jnp
xchg
inc
mov
lcall
cmp
call
mov
fisubs
mov
sti
rclb
jb
lds
jae
jo
jge
sub
sub
popf
sub
out
adc
xor
adc
mov
fldl2e
dec
aaa
pop
aam
sub
cmpsl
inc
in
arpl
jp
popf
fabs
repz
sbb
lret
ljmp
dec
out
dec
test
stc
out
movsb
out
shrb
xor
sub
aas
dec
icebp
jne
xor
pop
test
aaa
les
jmp
xchg
or
pop
enter
mov
mov
sbb
fbld
popf
call
jb
clc
icebp
jecxz
into
adc
pushf
orb
aam
pop
int
or
out
and
xor
test
dec
lods
xchg
lahf
push
stos
scas
les
orl
push
add
rcrb
stc
in
cmpl
push
daa
insl
push
pop
pop
mov
inc
sbb
ficoml
xor
cmp
jae
movsb
pop
into
jbe
shll
loopne
xorb
mov
ja
jae
insl
or
jl
loopne
ds
lahf
rolb
jnp
xchg
mov
mov
mov
lret
outsl
cmp
insl
jmp
sub
inc
mov
scas
and
adc
pop
cmp
mov
or
cmp
push
xor
pop
xorl
movl
in
push
cmp
add
jne
mov
sbb
cmpb
loope
jne
sbbl
add
stos
or
push
sar
arpl
cmp
int3
into
mov
mov
imul
lret
push
es
push
sub
fmul
iret
lret
jp
jo
xchg
sahf
mov
cltd
and
mov
fstl
fiaddl
fiaddl
aad
xchg
aam
data16
xor
leave
push
jne
repz
test
xchg
cmp
sbb
movsl
mov
xchg
out
fdivs
mov
cmp
loop
pop
pop
sbb
push
repnz
fbld
aam
and
nop
insb
aaa
sbb
sub
or
gs
xor
pop
fsts
dec
add
inc
mov
fstpl
iret
cmc
sbb
fistps
jo
std
fs
je
flds
push
cmp
jbe
mov
lret
sub
int
jmp
jo
aas
push
inc
out
std
jnp
jg
divb
push
push
std
stos
jg
ret
nop
sti
xor
sbb
arpl
cmp
cld
add
in
pop
mov
dec
scas
jbe
xchg
dec
adc
test
jp
dec
sbb
dec
or
mov
ss
loopne
pop
out
rol
addr16
ret
sbb
cmp
lret
adc
into
dec
test
shlb
gs
mov
sbb
xchg
pushf
sbbl
test
js
or
and
sub
out
movl
in
sub
negl
js
dec
nop
jge
ds
xchg
xchg
jo
xor
jae
ja
push
and
mov
lds
dec
cwtl
adc
add
xchg
test
jbe
in
loope
and
das
sbb
mov
jae
or
pushf
lret
sbb
xchg
lcall
cmp
popf
cmp
daa
mov
idivl
mov
sub
xchg
cmc
pop
mov
cmp
xchg
cld
imul
inc
ss
scas
cmpsl
stos
out
xlat
adc
imul
lods
jb
jmp
jne
dec
pop
aam
add
adc
xor
jno
push
and
mov
push
push
mov
jmp
sub
dec
xchg
jmp
mov
lock
jb
jns
js
scas
pop
daa
sahf
bound
icebp
movsl
xchg
xchg
xor
mov
int
dec
insl
filds
test
leave
ljmp
fsubl
leave
jecxz
fidivs
add
dec
loop
rolb
incl
mov
mov
outsb
shl
jecxz
cmpsb
es
xchg
pop
mov
mov
subb
movsb
jmp
daa
ret
outsl
push
mov
js
cs
cmp
sbb
cmpl
rorb
mov
push
inc
push
imul
psubsb
sarb
dec
stc
jp
cs
bound
mov
xrelease
fs
inc
jge
repnz
mov
dec
insb
in
test
mov
scas
xor
lahf
and
xorb
pop
fcomp
sahf
dec
xor
push
loopne
fnsave
std
cvtps2pd
enter
pop
xlat
scas
bound
pop
hlt
cltd
in
inc
sub
xor
pop
push
loopne
jp
pop
fs
mov
jmp
pop
and
jno
movsl
push
push
ror
cs
rcr
push
int3
jnp
ljmp
arpl
xor
pushf
leave
lea
or
cltd
in
pop
xchg
push
mov
pusha
push
test
lea
popf
mov
inc
adc
stos
xchg
fsubp
cmpsl
pop
aam
lock
data16
mov
dec
mov
jecxz
test
inc
mov
mov
movsb
inc
push
xchg
out
jmp
test
stc
pushw
jnp
lret
pop
or
sub
call
or
xlat
sbb
rorb
jle
inc
inc
shr
cmp
insb
test
cli
sub
push
mov
push
cltd
xchg
adc
pushf
pop
push
mov
ret
sbb
loope
in
mov
aam
pop
les
xor
call
sbb
mov
jecxz
push
sbb
gs
cmp
inc
aaa
into
mov
cmp
and
jae
adc
mov
pop
add
in
and
fabs
add
lahf
fwait
iret
dec
mov
jbe
pop
mov
in
inc
push
in
into
xor
dec
in
mov
sub
pop
lret
std
out
pop
mov
lret
push
pop
rcl
dec
cmp
aaa
inc
rcl
incl
stos
pop
in
xchg
cs
rcll
or
in
sti
les
ret
mov
std
xchg
mov
or
jnp
add
cmp
cmp
add
xor
adc
mov
pop
adc
in
pop
pusha
outsb
adc
push
adc
sahf
fisubrs
sti
sbb
mull
lds
xchg
mov
adc
lock
inc
inc
imul
mov
cs
mov
xor
je
pop
mov
sub
push
aas
mov
or
mov
lea
and
pop
imul
dec
repnz
add
xchg
rclb
cmp
mov
test
or
ret
insb
mov
outsl
dec
notl
add
sub
pushf
scas
imul
mov
push
pop
aas
insl
or
pop
inc
loop
aad
mov
ljmp
shr
jbe
std
cld
cltd
outsb
cmpsl
mov
mov
arpl
js
insl
jmp
lock
mov
mov
sti
jmp
lock
cmp
pop
push
sahf
movsl
xor
push
add
aaa
aad
sti
mov
pusha
lods
les
mov
ret
xchg
cwtl
inc
fisttpl
mul
mov
xor
out
jge
stos
dec
movsb
xchg
std
dec
jmp
daa
jns
std
in
push
ret
jb
fwait
xorb
and
loop
outsl
cltd
and
adc
int
arpl
sub
out
jp
and
popa
or
std
pop
pushf
daa
jns
sub
mov
inc
jp
call
sbb
outsl
pop
fdivrs
in
jle
inc
add
sbb
icebp
cmp
ret
sbb
and
mov
xchg
xor
xor
jo
in
xor
jg
mov
sub
fcomps
lcall
mov
bound
std
dec
mov
or
jo
and
add
dec
cmp
fwait
iret
and
jg
mov
in
hlt
test
inc
leave
out
lret
mov
or
or
insb
mov
sahf
mov
rcrb
mov
cmp
enter
sti
or
dec
pop
xor
inc
xchg
xor
dec
call
sbb
dec
pop
subb
pop
inc
loopne
pushf
adc
fisubl
aad
imul
lods
push
sub
inc
jmp
xchg
push
cltd
pop
lods
aad
inc
rclb
sbb
ret
ja
pop
arpl
jmp
mov
in
sub
rolb
dec
das
jecxz
dec
dec
jb
sbb
mov
cwtl
in
cltd
mov
mov
mov
cmp
jmp
mov
insl
push
inc
stos
movsl
out
movsb
push
or
rol
fsubl
jbe
roll
stos
nop
ja
arpl
mov
repz
in
xchg
in
mov
dec
mov
shll
cmp
or
les
stos
jecxz
mov
iret
mov
clc
popf
and
rcr
in
data16
push
popf
lods
sbb
lcall
dec
jmp
mov
inc
addr16
and
xchg
fmul
jnp
fstp
lock
adc
cmp
and
enter
ss
mov
lret
xorl
test
add
scas
sub
adc
int
or
arpl
sti
sbb
stos
dec
je
push
jbe
je
pop
inc
pop
mov
mov
rolb
int
scas
add
push
andl
dec
dec
and
inc
inc
rcr
mov
fistps
add
pop
push
lcall
out
pop
mov
daa
xchg
push
into
ss
mov
inc
shl
jnp
sbb
int
insb
in
mov
or
pop
adc
jno
and
xor
orl
and
sub
push
addr16
add
imull
mov
mov
mov
xor
lcall
out
test
and
and
repz
call
adc
add
fs
outsl
loope
xchg
ret
mov
pop
test
dec
outsb
push
repz
xor
xor
shlb
jg
es
xchg
sbb
jmp
push
rorb
call
cmp
cmc
mov
pop
mov
sahf
mov
mov
add
lcall
insb
sub
and
sub
xchg
jae
insb
and
mov
or
xchg
lret
push
jmp
and
insl
xchg
push
jno
mov
dec
and
inc
adc
xorl
loop
mov
push
mov
xchg
testl
imul
pusha
jb
or
inc
add
dec
cli
mov
push
and
inc
cmp
mov
mov
mov
sti
aaa
dec
push
in
add
jecxz
and
pop
pop
or
lahf
adc
roll
lret
sub
sub
stc
iret
add
clc
mov
popa
out
test
lds
popa
sub
cmpsl
lods
mov
arpl
fcompl
pop
scas
cs
jl
test
ja
pop
xchg
push
imul
mov
pop
cwtl
mov
insb
mov
aad
mov
pop
jnp
inc
gs
xor
jl
iret
push
inc
fisubs
lret
push
arpl
cmp
cmp
ja
cmp
fistps
pop
rcr
sbb
dec
icebp
out
and
push
je
into
cwtl
pop
pusha
addr16
cmp
mov
adc
pop
and
add
out
es
les
cmpl
outsb
cmpsl
adc
cwtl
jl
cmpsl
cwtl
fisubs
pop
xor
or
fucomi
fstps
lods
loopne
push
xchg
sbb
sub
fs
xor
lods
imul
add
xchg
xchg
lods
int
lods
aad
movsb
lock
ret
inc
filds
repz
pop
pusha
sub
aad
dec
in
and
int
dec
mov
dec
call
outsl
or
xor
icebp
dec
xor
int3
push
fwait
cmp
fcomps
cmpsb
xchg
jmp
mov
out
push
push
inc
loope
or
addb
stos
loope
mov
and
xor
push
std
aaa
sub
sti
loop
fimuls
mov
or
jmp
sub
sahf
and
lea
or
cmp
mov
add
push
mov
add
and
icebp
mov
lret
outsl
add
mov
cmpsl
sbb
loopne
inc
mov
adc
outsb
pusha
mov
fwait
dec
inc
sub
jne
push
adc
shlb
sbb
mov
push
jns
je
andl
popf
lea
mov
xor
xorl
xchg
sub
notl
cltd
ret
dec
hlt
push
cmp
out
sarb
movsl
jnp
jmp
scas
cmp
xor
mov
nop
psubusb
pop
sarl
cmp
jbe
aam
cwtl
jnp
mov
push
cs
lds
aam
jae
push
test
lret
popf
out
dec
mov
and
lods
cwtl
aaa
jno
inc
inc
in
pop
and
shll
pop
dec
xor
xchg
lds
adc
or
xor
mov
fwait
arpl
push
lahf
xchg
sbb
xor
idiv
mov
mov
mov
aaa
jl
mov
sub
cmovb
test
loop
aaa
insl
divb
das
iret
xchg
fcmovnb
cmpsb
xchg
xor
pop
or
sti
mov
push
notb
xchg
mov
mov
loope
sti
andl
std
cmpb
xchg
or
adc
leave
es
adc
jo
jge
ret
outsl
arpl
test
fucomp
mov
popf
add
mov
xor
lret
verw
cltd
push
out
jecxz
mov
push
sub
push
test
pop
sarl
stos
gs
outsb
cmp
cmp
sub
insb
push
outsb
push
pop
arpl
das
jp
cmp
jnp
popa
xchg
scas
out
call
add
xor
add
cmp
mov
or
or
ljmp
les
insl
mov
xor
jae
xor
repz
xchg
lds
mov
fwait
cmp
pop
out
jo
fistps
push
adc
scas
fucomip
or
cmpsb
rcrl
sahf
sbb
pop
mov
xor
and
xor
mov
mov
dec
push
inc
pop
push
mov
mov
inc
adc
or
cmpsb
popf
mov
pop
fsts
mov
or
or
js
cmp
icebp
xor
ljmp
iret
xorl
out
bound
shrb
shll
push
pushf
fmull
or
dec
add
loopne
inc
mov
out
jbe
add
lret
cmp
test
adc
lods
xchg
das
aad
dec
pusha
cmp
pop
lret
loop
mov
leave
mov
jl
rcl
ljmp
les
dec
pop
cli
in
gs
dec
pop
ret
in
mov
inc
and
mov
and
in
shl
xchg
push
add
dec
aas
jle
push
sbbb
inc
push
pop
mov
loop
adc
rol
out
cmpsb
cmp
jg
mov
bound
inc
push
cmpsl
mov
mov
arpl
and
leave
stos
pop
inc
ss
je
sbb
xchg
xchg
xchg
add
cmp
adc
mov
adc
loopne
dec
mov
lahf
xchg
add
pusha
cmp
bound
xchg
lods
mov
add
into
lret
push
out
push
ret
lock
mov
nop
xchg
shrb
pop
mov
dec
aas
push
ror
pop
adc
lcall
insl
or
add
sub
push
nop
xor
ret
popa
cmpsl
mov
daa
mov
mov
pop
pop
div
andb
sub
mov
gs
jp
pcmpeqw
sub
and
pop
add
fsubl
mov
push
aas
test
enter
or
arpl
addl
xor
pop
lds
and
lahf
cmp
inc
mov
mov
push
lods
dec
push
lock
loopne
pop
xlat
cmp
lock
in
push
scas
push
call
inc
mov
inc
das
ret
ds
shl
and
dec
push
xchg
call
xor
pop
cmc
int
mov
jnp
jno
fdivl
push
nop
xchg
mov
mov
adc
in
mov
into
sub
add
test
sbb
inc
mov
jmp
sub
xor
dec
xchg
adc
iret
sbb
pop
push
es
inc
adc
cmc
jnp
sti
add
pushf
xor
sbb
aas
xchg
pop
jp
mov
jo
mov
push
xor
cmp
ret
dec
fsubr
shrb
push
fdiv
jecxz
and
hlt
aad
cs
push
push
xor
pop
inc
cmc
stos
bound
mov
cmp
sub
test
je
sub
ficoms
test
cmp
test
movsl
cvtpi2ps
std
mov
nop
idivl
jl
xchg
inc
adc
add
lcall
lods
push
fidivrl
pop
and
ja
push
xchg
adcb
ret
or
cmp
mov
push
sbb
fdivl
push
in
test
jp
cltd
push
inc
out
dec
lahf
aad
and
js
jg
mov
inc
enter
push
inc
pop
xor
and
mov
or
out
mov
jno
outsb
cmp
xchg
pop
pop
js
insl
cmp
out
lahf
cmp
out
test
cs
xchg
rcl
dec
push
sbb
xchg
mov
adcl
mov
ljmp
mov
xlat
sbb
push
push
in
pop
inc
sub
clc
jg
pop
and
out
push
lock
repz
pop
pop
mov
out
addr16
sub
xchg
push
pop
and
mov
repz
mov
out
cli
or
mov
stc
jp
add
aad
mov
mov
sub
mov
sbb
adc
lret
or
jmp
int3
sbb
out
in
cmp
and
ss
scas
test
cmc
or
imul
loopne
sbb
in
sub
mov
mov
fistpl
shl
jbe
push
jns
jo
test
out
push
sbb
shlb
lret
jecxz
jmp
das
outsl
cltd
or
dec
push
cmp
and
mov
sbb
dec
sub
cwtl
aaa
call
add
dec
xorl
mov
add
cwtl
xchg
in
rcr
push
dec
sub
popl
pop
pop
xor
loop
out
shll
nop
fcmovnbe
insb
rcrl
pop
adc
sub
pop
mov
repnz
sub
bound
mov
outsl
pop
popf
aam
push
jb
cmc
jecxz
jbe
mov
jae
loopne
sub
imull
dec
mov
mov
jle
pop
clc
adc
lock
sbb
and
pushf
je
leave
int3
push
jge
mov
pop
inc
add
mov
push
add
mov
stc
sbb
xor
out
arpl
or
xchg
dec
inc
mov
cmpsl
aas
pop
inc
cmp
test
fisubl
push
pop
jecxz
dec
pop
adc
repz
les
into
dec
outsl
in
scas
push
lock
stc
nop
loopne
aaa
mov
or
xchg
sbb
pop
cmp
dec
xor
xchg
lahf
stos
adc
mov
aas
dec
sub
int3
and
data16
popa
pop
repz
ret
and
popa
sbb
push
stos
jae
test
insl
mov
cmpsl
xchg
into
es
mov
shll
jle
push
out
dec
jno
cli
adc
inc
fsubp
mov
lret
imul
idivb
call
or
add
jns
sbb
pop
push
testb
push
xor
xchg
out
enter
lcall
in
cld
xlat
lret
test
push
insb
mov
out
leave
jmp
imul
jmp
aaa
lock
das
insb
push
mov
testb
cs
inc
or
out
imul
icebp
and
sub
aas
into
aaa
jp
jg
fstpl
scas
inc
cwtl
repnz
iret
jno
adc
cmp
or
push
sbb
mov
pop
sti
fbld
sub
xchg
loop
enter
repz
ds
sub
pop
stc
xor
mov
mov
pushf
hlt
sub
sarl
xchg
mov
movsb
xchg
and
or
outsb
subb
xchg
pushf
sbb
xchg
jno
adc
mov
out
adc
or
or
pop
int
iret
in
inc
inc
jno
jb
ljmp
jns
jne
push
aas
inc
dec
call
add
lcall
test
fucomip
cmp
push
clc
push
xor
adc
mov
mov
in
inc
scas
add
outsb
sarb
shr
cli
mov
mov
mulb
or
popl
loopne
das
fldl
inc
mov
out
jno
push
cmc
push
insl
sbb
add
aas
lret
fisttps
imul
incb
test
or
mov
add
dec
xor
insl
inc
out
notl
sti
lods
inc
mov
loop
xor
xor
xlat
adc
scas
es
rorb
sbb
popa
mov
jp
loope
lds
sti
xor
or
pop
mov
add
mov
js
movsl
movsb
scas
mov
sbb
sub
pop
dec
xchg
mov
add
popf
and
sbb
shrb
sbbl
jge
cmp
push
sub
nop
loop
jae
push
repnz
mov
stos
stos
mov
jmp
add
and
scas
xchg
idivl
and
jae
insb
dec
push
aad
lahf
adc
cmp
or
jne
lea
mov
cmc
mov
sub
adc
fstl
outsl
adc
cltd
sbb
stc
mov
mov
dec
add
sbb
dec
jns
test
or
jnp
das
jbe
imulb
scas
or
leave
aam
leave
imul
add
mov
or
mov
aaa
push
sbb
pop
jno
outsb
sub
jecxz
movsl
test
dec
inc
or
mov
sbb
dec
push
fildll
hlt
aam
popa
xorb
fcmovu
mov
pop
leave
f2xm1
dec
sub
inc
mov
out
inc
arpl
pushl
mov
or
sbb
xor
jbe
bound
dec
push
xor
bound
or
jl
xor
lret
sbb
js
not
mov
int
xchg
lods
lea
xchg
enter
cmp
out
cltd
rcrb
out
mov
sub
push
repnz
mov
rol
les
ds
cmp
push
mov
js
jge
lcall
or
nop
rclb
imul
push
sti
mov
add
push
orl
cmpsl
mov
loop
sti
js
fdivrp
xor
call
ror
nop
adc
mov
pop
std
addr16
adcl
dec
dec
xchg
movl
add
jl
inc
mov
push
gs
dec
pop
rclb
es
adc
lret
sti
jle
mov
fimuls
dec
cmc
push
sbb
and
jb
repnz
cmp
mov
stos
pop
push
ret
add
mov
idivb
rclb
inc
xchg
add
fistpll
sub
cmpb
dec
mov
dec
fiaddl
movsl
xchg
jo
xchg
scas
out
insl
repnz
outsl
fwait
loopne
ret
dec
xlat
bound
lds
mov
add
jge
pushf
ds
xchg
hlt
push
pop
lea
mov
dec
ja
fcoml
cmp
xlat
fisttpll
stos
adc
pop
in
lods
lea
ja
test
test
jg
test
xor
sbb
pop
sahf
push
rcl
inc
pop
jo
cmp
add
fs
or
in
cltd
sub
sub
cmpsb
jl
inc
stos
jecxz
cld
in
dec
xor
jo
cmp
adc
mul
cmpsb
add
push
sub
xchg
mov
in
cwtl
xor
sub
mov
pop
rcll
and
negl
in
xchg
ja
inc
out
inc
fidivrs
pop
icebp
or
daa
add
sbb
mov
push
xlat
add
rcrl
push
imul
inc
ds
movsb
add
in
mov
dec
push
shlb
xchg
xor
fs
cld
pop
inc
lods
cld
out
jp
inc
insl
jo
cwtl
jecxz
nop
cmpsl
xor
adc
inc
cmpl
stc
stos
xor
ds
movsb
inc
std
movsb
sub
call
cs
pop
jg
xchg
fdivp
ret
adc
jne
mov
mov
pop
movsb
lock
stos
sub
add
arpl
test
in
mov
jl
dec
cli
loop
dec
fsubrl
out
push
dec
shlb
mov
pop
inc
or
sbb
jo
aam
jp
add
mov
ja
xchg
icebp
call
push
and
aaa
lret
dec
les
jae
movsb
mov
jae
imul
sbb
rclb
clc
adc
cld
ret
ror
outsl
rcrb
lret
fists
cld
stos
and
and
loop
jb
mov
cmc
mov
call
jbe
lods
mov
xor
xor
fists
xor
pop
movsb
xchg
cmp
cmc
in
jae
sbb
fsub
mov
inc
data16
lcall
out
or
clc
outsl
fstps
aam
enter
or
mov
push
imul
cltd
jmp
mov
mov
xchg
scas
push
fisubrl
js
cld
in
pop
je
sub
adc
orl
push
imul
xchg
adc
pop
push
test
lods
pop
xchg
mov
orb
and
xchg
clc
out
in
xchg
push
mov
push
inc
ds
mov
xor
or
test
sub
push
jno
insb
cwtl
fbstp
std
sub
popa
add
push
imul
aaa
test
pop
mov
pop
fs
add
mov
push
pushf
addr16
fistpll
inc
or
adc
jg
cmp
sarb
sar
jle
xchg
xlat
lret
fisttpl
aas
imul
cmpl
or
imul
lods
lods
mov
mov
mov
test
loop
add
or
cs
in
sub
aas
dec
pop
mov
rcrl
lahf
popa
mov
test
rdtsc
outsb
xchg
mov
mov
mov
sbb
jg
sar
push
xor
sbb
or
ret
add
jb
jmp
jmp
ja
mov
ret
jp
sahf
cmpsl
lods
dec
cltd
jl
cli
mov
inc
or
xor
ficoml
push
sbb
sbb
pop
mov
xchg
cmp
insb
sbb
sahf
pop
fidivl
cmp
push
dec
mov
std
lock
insb
scas
or
add
cmp
imul
jle
ss
insb
and
stos
push
cmp
jmp
add
outsb
nop
add
ss
lea
cmp
fisubrl
fsubs
adc
push
es
jno
mov
sub
mov
hlt
cld
mov
js
and
sahf
or
clc
cld
lcall
sarb
pushf
leave
sbb
inc
adc
in
jbe
and
lcall
int3
hlt
push
cmpb
leave
jb
jl
mov
pop
mov
dec
xchg
push
ljmp
jp
addr16
or
inc
mov
mov
mov
imul
imulb
lods
lahf
or
and
mov
sbb
in
aam
lcall
push
nop
or
loope
sub
gs
in
lcall
inc
pop
xchg
mov
inc
jp
inc
aam
test
push
ja
mov
push
ret
inc
push
add
rol
cmp
aaa
adc
push
imul
std
xchg
or
sub
xor
scas
shll
push
mov
jl
xorb
addr16
std
xchg
cmc
adc
and
js
out
test
mov
mov
or
add
daa
or
cwtl
outsl
cmp
push
or
sbb
dec
push
sahf
dec
in
lret
out
sbb
push
psrld
mov
push
mov
add
mov
in
orl
xor
loope
pop
out
loop
sbb
pushw
xchg
pop
push
fldt
xchg
icebp
fwait
push
mov
fdivrl
cli
cmpsb
aas
sub
pusha
out
push
xchg
jmp
sub
sbb
rclb
out
mov
dec
dec
loop
sbb
inc
lods
or
jmp
int3
inc
in
adc
retw
mov
add
push
mov
pop
lea
cmp
fcomps
sub
pop
std
mov
mov
clc
lret
icebp
je
jo
sbb
scas
shl
pop
mov
xor
pop
ds
pop
imul
popf
pop
pop
in
sub
add
rclb
push
xchg
pop
pop
xor
jg
inc
push
jl
adc
lds
xchg
popa
scas
xor
cli
ljmp
cld
xchg
push
cwtl
inc
lahf
fwait
mov
lret
cmp
ljmp
jl
cmp
ret
cmp
push
jae
inc
aam
rolb
inc
mov
fisubrs
popa
xchg
add
ret
das
xchg
enter
or
or
pop
std
fstl
mov
imull
mov
fmuls
stos
loopne
scas
jns
loop
stc
push
push
push
pop
inc
test
mov
rcrb
fdivrl
jbe
sbb
in
sub
data16
ret
scas
out
jno
pop
mov
sub
adc
jecxz
push
popa
je
inc
push
dec
loope
fwait
xor
dec
test
ss
or
iret
jp
inc
xchg
mov
cmp
imul
scas
lret
aaa
adc
loope
aam
dec
xchg
scas
mov
incl
inc
jecxz
and
pop
jo
mov
or
test
ss
aad
jb
pop
add
sbb
stc
stc
dec
mov
pop
xor
and
mov
mov
ljmp
jb
idivb
mov
out
clc
fwait
adc
insl
add
outsb
pop
popa
sbb
clc
inc
cmpsb
lock
mov
mov
or
outsb
pusha
out
repnz
cmpsl
or
adc
mov
xor
add
cmpsb
pop
push
pop
pop
ds
out
mov
push
and
hlt
and
ficompl
lods
cld
stc
sbb
fnsave
ret
ret
mov
dec
push
add
outsl
outsb
mov
ss
hlt
mov
in
or
add
mov
popa
jecxz
stc
divl
adc
mov
sub
dec
pop
stos
mov
inc
or
dec
bound
leave
aaa
lods
mov
fmulp
pop
adc
or
jbe
mov
fidivrs
add
addr16
lahf
xchg
push
ret
adc
add
test
add
testl
insl
xor
pop
ret
fsubs
stos
rcll
mov
rorb
and
adc
in
scas
jg
mov
dec
mov
cwtl
aad
cmp
jmp
jl
das
inc
je
ds
test
cmp
ljmp
mov
jmp
aad
insl
cmp
ljmp
daa
das
or
push
ja
pop
test
sub
or
lea
push
jl
or
add
jecxz
cs
mov
jge
mov
xchg
mov
out
test
shrb
xor
xor
jle
stos
cmp
fs
stc
and
ret
leave
lcall
lret
xor
ret
add
push
cmp
mov
dec
sbb
or
arpl
inc
faddl
ds
sub
lock
mov
dec
add
shrl
fdivrs
jo
mov
mov
stos
and
mov
mov
dec
lods
shl
loope
jp
mov
pop
mov
xchg
sbb
out
xor
sbb
divl
movl
pusha
ja
cmp
mov
inc
loopne
stos
sahf
loopne
xchg
je
fcomps
push
xchg
mov
xchg
or
sbb
xchg
mov
iret
dec
pop
or
aas
in
xor
fwait
gs
jns
lock
movsl
shll
out
mov
mov
lcall
ret
out
ds
or
hlt
leave
or
inc
or
jecxz
cmova
jno
ret
xchg
shll
xor
test
cmpsb
pop
cmp
push
jne
add
ljmp
lret
subl
enter
cmpl
and
cmp
pop
inc
gs
xchg
jp
shl
sub
push
jle
or
or
in
mov
das
jle
and
lret
mov
push
hlt
pop
sbb
arpl
inc
imul
mov
mov
add
dec
stos
jl
push
push
call
mov
jecxz
cmp
fbld
inc
lea
push
fbstp
pop
nop
lret
adc
jmp
dec
rorb
stos
jp
jmp
stc
push
add
popf
mov
sub
push
add
pop
add
in
pop
cmc
mov
fsubl
mov
or
cmpsb
test
icebp
cmp
cmp
test
push
cmpsl
add
mov
sti
cwtl
loope
fs
js
push
push
push
sbb
jmp
ret
pop
xchg
dec
ds
aam
repz
and
push
loope
cmpsb
jecxz
lods
call
hlt
xor
cmc
outsb
out
fdivr
xchg
clc
adc
rorl
scas
inc
rclw
outsl
lahf
lods
or
data16
xchg
test
imul
mov
push
pop
insl
aaa
mov
stc
roll
or
push
sbb
xor
and
mov
xlat
icebp
mov
mov
jno
jns
out
addr16
or
cmp
sbb
lods
insl
out
testl
sub
fs
cmp
mov
adc
and
cmp
inc
xor
sbb
or
xchg
insl
xchg
or
or
push
insl
js
dec
and
fidivl
call
push
dec
xor
scas
movsb
test
daa
inc
lret
shll
enter
iret
add
or
inc
jne
int3
outsb
xchg
xor
xchg
jge
push
fistpl
aam
repz
fwait
sub
xor
cmp
outsb
cmpl
xchg
inc
fucom
xchg
fcomps
dec
push
leave
pusha
pop
or
loop
jno
ficoml
ja
int3
inc
mov
or
ficoms
xchg
jo
movsl
add
imul
pop
mov
push
jg
pop
lock
mov
inc
insl
sub
ss
pop
movsb
out
out
xchg
lock
in
sahf
mov
lock
jge
jmp
movl
adc
dec
xchg
test
push
es
pop
mov
add
or
out
cli
call
sti
push
sub
mov
idiv
ds
jno
sarb
xchg
stos
cs
mov
inc
sbb
sahf
rcl
and
dec
cs
pop
imul
mov
sbb
mov
cmp
mov
pop
insl
or
scas
lods
push
popf
inc
icebp
add
pop
clc
mov
stc
fs
inc
stc
stos
subb
jne
jae
jge
xor
fstpt
cmp
jmp
mov
icebp
dec
and
inc
in
cld
cltd
icebp
pop
ficoms
outsb
subb
dec
insb
in
scas
mov
ret
pusha
push
insb
jmp
push
pop
sub
jl
pop
mov
inc
lods
or
or
jb
push
cmpsb
xor
test
adc
lock
cmpb
cs
into
pop
inc
cmp
fmull
sub
out
es
mov
xchg
xor
push
fbstp
or
les
movsb
scas
mov
shll
sbb
aam
or
out
adc
jle
and
int
xchg
test
jo
add
in
xorb
xorl
ficomps
ror
dec
pop
pushf
mov
outsl
sarl
roll
jnp
adc
sub
idivb
sbb
sar
add
rcr
dec
and
out
sbb
testb
jbe
mov
and
pop
sti
xor
and
insl
pushf
into
stc
inc
push
xchg
test
fldl
sub
pop
test
cltd
jo
imul
lret
mov
lret
in
mov
jae
mov
jb
cmc
lock
mov
fidivrl
nop
aam
mov
sub
cmp
cmp
sbb
hlt
sub
sub
movsl
leave
outsl
push
outsl
sbb
adc
addr16
movsb
aas
mov
rcrl
dec
jb
in
mov
dec
sub
fadds
rclb
scas
ljmp
das
mov
cld
in
movsl
scas
ret
ret
add
js
fdivl
iret
pop
in
dec
mov
mov
ja
cld
negb
mov
pop
dec
jnp
sbb
std
ja
sti
test
push
mov
or
lock
dec
fsubl
push
js
xchg
and
aam
sub
jb
jns
jcxz
xchg
jno
mov
jae
cmpsw
xchg
and
dec
fsubl
jnp
pushf
in
ds
lock
aam
mov
stos
dec
lret
xchg
and
test
test
pop
dec
repz
pop
dec
xchg
stos
pop
and
scas
clc
hlt
cmpsl
mov
filds
add
ror
xchg
mov
sbb
sbb
push
mov
mov
sahf
cmp
repz
add
mov
std
fstpl
mov
xchg
and
cmpb
les
aam
add
js
mov
mov
out
xor
push
fs
inc
push
jecxz
out
out
hlt
fs
xchg
xchg
xor
enter
mov
mov
sub
mov
mov
and
xor
ja
xor
notl
or
in
mov
inc
outsb
dec
clc
into
add
and
cmpsl
repnz
mov
xor
rclb
rclb
lea
lods
dec
jns,pn
push
mov
sbb
inc
pop
and
mov
addr16
jecxz
mov
pop
dec
mov
xor
loopne
mov
rcll
adc
inc
sbb
or
mov
sbb
inc
mov
pop
xor
int
cmpsl
lods
xchg
repz
jbe
out
loope
xchg
loopne
push
cmp
cmc
and
dec
adc
pop
pop
mov
lods
and
mov
ret
pop
xchg
stc
shlb
jle
fnstsw
cld
loop
jbe
and
popf
push
dec
and
sub
cmpsb
aad
mov
or
rcrb
xchg
mov
jae
clc
aad
or
xchg
shrl
cld
pushf
push
xor
shll
or
xchg
xor
bound
push
test
pop
inc
in
aad
add
rorl
mov
cmp
xchg
jge
dec
loopne
jecxz
xchg
repnz
clc
sbb
inc
shrb
aas
test
mov
repz
nop
add
pusha
sbb
aaa
jmp
mov
in
xchg
aaa
push
outsb
js
mov
xchg
fidivrs
lods
pop
cwtl
outsb
xor
jg
cmp
push
mov
mov
pop
adc
lods
cmpsl
sahf
or
pushf
test
fld
mov
movb
xlat
fidivrl
mov
xlat
push
iret
icebp
lods
leave
xchg
push
aas
push
xchg
cmp
xlat
fcom
adc
jbe
fidivl
or
test
cli
sbb
mov
and
jno
lds
fidivrl
fdivl
movb
push
out
push
lods
sti
clc
lret
imul
das
popa
gs
rolb
cld
dec
jns
ret
arpl
mov
and
push
outsl
test
mov
push
or
sbb
lods
inc
stos
xor
outsl
fs
popf
or
insl
sub
adc
mov
movlps
cld
xchg
cmpsb
mov
inc
adc
nop
fs
or
mov
rolb
cltd
mov
popf
mov
rol
dec
hlt
sbb
mov
mov
add
jo
sub
push
enter
sbb
and
stos
popf
test
xchg
dec
mov
mov
lcall
and
addl
in
cmp
movsl
dec
dec
call
mov
mov
push
call
and
and
cmpsl
out
fistpl
repz
movsb
sub
jl
fildll
aaa
pop
out
or
cmp
mov
pusha
mov
shll
call
sti
leave
dec
daa
mov
loope
push
cwtl
pop
mov
mov
jo
add
out
or
mov
stos
in
imul
or
int
lcall
sahf
jle
es
push
cmp
fwait
std
popa
popf
aad
icebp
cld
dec
dec
mov
inc
xchg
sub
icebp
jle
inc
in
mov
xchg
cmp
outsl
cmp
gs
sbb
pop
adc
inc
je
es
popa
or
xchg
mov
inc
pop
out
mov
push
lea
or
xor
int
xchg
adc
push
adc
push
loopne
or
icebp
flds
mov
fsts
push
popa
push
decl
and
fmull
mov
outsb
in
lahf
js
sbb
push
pop
mov
sbb
lret
fwait
adc
mov
test
mov
loopne
shrb
jmp
pop
sbb
sbb
mov
pushf
adc
xchg
call
out
push
dec
int
add
dec
xor
xchg
jmp
mov
inc
jg
mov
sub
loop
cmp
insl
pusha
inc
and
adc
lods
test
dec
out
mov
dec
es
pushf
outsb
mov
sbb
mov
add
or
loopne
mov
pushf
or
cmp
add
inc
and
ret
hlt
add
cmp
aaa
flds
inc
outsb
ret
jno
mov
pop
push
add
incb
les
or
pop
mov
in
xor
sub
add
add
pop
sub
dec
loope
insb
mov
push
ficoms
jbe
clc
cmp
jecxz
adc
pop
mov
xchg
sub
outsl
rcrb
addr16
push
call
xor
dec
in
leave
lods
inc
push
inc
xor
loopne
cltd
orb
int
jne
sbb
pop
test
adc
test
add
jge
aas
fnstcw
ljmp
sub
int3
pop
sbb
or
jp
ss
mov
popf
imul
insl
jne
mov
push
scas
arpl
scas
aam
outsl
mov
pop
test
xchg
push
ja,pt
test
sub
fwait
adc
insl
lock
jo
dec
and
xchg
jge
das
loope
mov
scas
sub
and
clc
negl
sub
xor
mov
cld
pop
pop
pop
mulb
jg
lock
push
aad
ja
jne
imul
and
lds
add
lds
jno
xor
popa
sbb
decl
hlt
add
pop
mov
call
cmp
and
outsb
mov
psubq
loopne
push
clc
cmp
sbb
mov
and
xor
jbe
jbe
xchg
or
xorl
int3
aam
cs
push
add
push
inc
jmp
cmp
sti
pop
jae
dec
aad
mov
test
popa
call
push
sub
jecxz
mov
xor
lahf
negb
xlat
jp
mov
sbb
sub
mov
clc
add
or
inc
mov
pop
popf
add
out
dec
les
or
scas
dec
pushf
into
movsl
int3
lds
aaa
push
push
shlb
mov
fsts
mov
and
stc
cmp
and
imul
jns
mov
clc
scas
or
push
or
popw
inc
sub
push
lds
jo
ret
adc
stc
sbbl
cmp
jmp
dec
ret
test
pusha
adc
jbe
lret
ss
fwait
imulb
cld
xchg
adc
pushf
dec
add
iret
inc
gs
jns
mov
pop
push
in
repz
jo
neg
pop
xor
cmp
xchg
jl
call
addr16
pop
jle
mov
inc
les
shlb
scas
adc
push
inc
lret
mov
xchg
and
pop
leave
test
push
pop
xor
add
subl
xlat
out
cmp
xchg
mov
lret
jb
enter
xorb
icebp
add
outsb
fildl
rcrl
int3
cmp
and
inc
inc
idivl
inc
decl
std
les
fs
pop
and
add
mov
mov
out
add
cmpsl
jge
push
pop
or
in
inc
sbb
inc
adc
jnp
outsl
mov
das
pushf
cltd
xor
test
push
add
cmpsl
loop
mov
xor
shl
test
dec
push
repz
js
je
lods
jp
mov
sti
pop
cmovbe
mov
movsl
pop
mov
inc
das
jmp
add
aas
dec
cmp
gs
mov
or
sbb
out
lds
mov
sbb
clc
dec
sti
scas
mov
scas
ret
push
fdivl
std
xchg
ja
gs
idiv
lret
or
jb
cmpsb
mov
enter
and
cmpl
lock
inc
and
int3
xchg
xor
daa
test
imul
jg
ret
inc
cwtl
push
sbb
lret
in
adc
jl
lcall
loop
lock
xor
sbb
loope
into
adc
loopne,pn
out
out
adc
sbb
pusha
repz
xchg
sub
movsl
aam
cmpsl
sarb
rolb
rorb
in
aad
push
and
jo
adc
pop
das
mov
stc
movsl
sbb
addr16
mov
xor
push
mov
mov
xlat
add
pop
dec
xchg
xor
xchg
xchg
jg
scas
das
and
or
jecxz
xchg
or
cld
jo
lret
in
xchg
imulb
leave
inc
loope
mov
push
mov
add
xchg
jp
outsb
enter
gs
pop
push
xchg
cmpsb
sbb
or
xor
out
popf
mov
loop
pcmpgtd
jecxz
adc
inc
mov
push
ljmp
inc
inc
orl
rclb
negl
outsl
ja
or
addr16
cli
loop
xchg
rcll
pop
cmp
ja
call
mov
dec
scas
jns
mov
popf
jle
dec
push
mov
daa
scas
mov
and
xor
push
jmp
outsl
cld
stos
adc
sbb
jle
cwtl
jecxz
adc
rdpmc
cmpsl
xlat
jno
xchg
jg
inc
pop
in
dec
adc
fadds
and
jmp
xor
es
cmp
lds
push
or
in
xchg
ja
test
popf
test
mov
or
int3
cmp
loopne
pop
sub
in
cmpsl
xchg
outsl
dec
inc
mov
gs
int3
dec
lret
mov
and
dec
mov
loope
add
pushf
movsl
mov
hlt
ret
mov
aas
bound
inc
out
mov
mov
loope
sub
cmpxchg
jnp
adc
mov
jb
jge
xchg
sti
lock
addl
ret
jge
out
mov
cmpl
js
test
mov
sub
mov
clc
out
out
xlat
xchg
mov
shll
testl
sbb
into
fdivrs
int
adc
mov
in
dec
ret
in
out
dec
mov
gs
data16
ficoml
addr16
or
inc
jg
and
repnz
fucomp
shlb
aad
mov
jecxz
fwait
mov
push
repnz
cmpsl
or
sbb
xor
loop
cwtl
lahf
lret
push
punpckhbw
mov
and
dec
xor
call
jnp
mov
scas
push
xor
adc
xorb
adc
jmp
je
sarb
mov
dec
aad
cltd
xchg
lock
iret
clc
push
dec
repnz
sbb
inc
and
xchg
andl
and
sar
or
cli
mov
push
pop
adc
js
subl
lock
pop
push
lods
cwtl
jo
jnp
jecxz
jp
insb
std
hlt
xchg
imul
imul
or
out
add
xchg
pop
push
mov
outsl
dec
mov
pop
test
loop
in
out
cwtl
int
das
add
lods
mov
inc
cmp
daa
mov
adc
mov
push
idivb
shrb
cwtl
push
les
inc
imul
daa
xchg
in
ret
stos
or
mov
and
in
mov
loope
xchg
mov
into
pop
or
out
or
test
jge
mov
imul
jge
repz
xrelease
stos
notb
adc
test
das
dec
dec
cmp
lret
out
add
aas
xorb
jmp
stc
jmp
pushf
jecxz
mov
pushf
rorl
outsb
aad
lret
outsl
push
push
repz
mov
arpl
xchg
mov
or
xor
outsl
sub
pop
dec
cld
mov
jne
adc
aad
mov
dec
aaa
je
push
push
pushf
fs
ret
imul
out
into
nop
fisttpll
mov
negb
or
or
add
add
xor
cmpsb
arpl
cmp
xchg
bnd
mov
pop
xorb
jns
call
sbb
and
add
jmp
dec
lcall
test
iret
dec
in
dec
jmp
add
sub
and
lods
add
mov
mov
jmp
push
jmp
adc
jno
popa
out
xchg
cld
jge
rolb
sti
lds
xchg
andb
icebp
aas
sarb
cmp
push
mov
dec
testl
xor
adc
int3
and
lret
sbb
jae
or
inc
add
cmp
cwtl
push
sti
shl
mov
or
scas
cmpl
fwait
das
push
aas
fdivp
dec
clc
dec
add
mov
xor
mov
or
mov
inc
fidivs
aas
or
pop
and
adcb
xchg
push
xchg
mov
push
pusha
movsl
scas
mov
mov
arpl
mov
ss
sbb
adc
insb
cmp
int3
leave
push
in
stos
rcr
mov
mov
cmp
sahf
lock
out
adcl
in
loope
adc
das
dec
and
call
push
pop
mov
xchg
dec
sbb
jb
or
in
out
scas
mov
xchg
int
es
imul
add
fsubs
mov
push
imul
inc
popa
int3
sub
mov
icebp
xchg
push
lret
xor
in
outsb
xorl
push
std
aaa
hlt
pop
inc
roll
in
and
cmp
test
and
ret
cmp
test
sbb
mov
mov
jge
sub
ror
and
cvtps2pi
call
push
mov
jno
jae
loopne
jmp
mov
pop
mov
lret
or
leave
imul
push
pusha
add
bound
mov
xchg
jl
ret
jbe
test
push
add
dec
aaa
iret
insl
fldl
das
xchg
add
mov
je
aaa
jo
sub
ss
fwait
jno
movsb
xor
push
dec
pop
data16
push
sbb
test
out
arpl
adc
cwtl
jns
pop
pop
es
pop
mov
mov
pop
add
mov
fucomi
sti
add
es
jmp
push
arpl
bound
dec
ss
push
sub
imul
xor
inc
gs
inc
dec
fadd
push
cmp
mov
push
sub
or
pushf
dec
movsl
mov
inc
jle
test
jnp
add
cmp
xor
or
mov
jge
lock
lcall
ret
jbe
lods
push
cmp
push
lea
rolb
xlat
xchg
dec
jae
sbb
mov
xchg
jb
test
mov
mov
aaa
add
in
addr16
mov
mov
fadds
movsl
mov
pushf
imul
inc
mov
or
dec
pop
lahf
lods
inc
xor
nop
or
dec
cmp
cmp
mov
lret
push
sbbb
int
adc
daa
fstps
lcall
mov
sarb
stos
stos
inc
inc
mov
test
xor
mov
aaa
mov
mov
push
das
into
addr16
shrl
lret
push
sub
xorps
dec
rorb
sbb
aam
jle
dec
sub
iret
mov
loope
jns
imul
push
sbb
pop
jnp
push
cltd
push
test
in
jl
inc
or
loopne
rcrl
mov
movsb
cld
outsb
fmuls
mov
shll
xlat
fdivl
fbld
cmp
jbe
or
fistpl
xchg
mov
scas
inc
xchg
loopne
inc
add
inc
sub
push
enter
ficoml
out
sbb
lods
lea
mov
push
sub
xchg
or
out
rolb
es
out
pop
cmpsb
add
movsl
shl
sbb
and
pop
pop
mov
and
call
scas
pusha
insb
lds
cmpsb
bound
mov
pop
pop
add
push
push
adc
test
movsl
and
push
inc
jge
gs
jbe
xor
icebp
fdivl
mov
mov
xor
addl
xor
adc
dec
std
divb
into
std
inc
and
out
mov
xchg
stos
sbb
push
xorl
adc
mov
js
test
pusha
ljmp
clc
ja
cmp
inc
push
ljmp
test
push
aaa
out
push
bound
add
pop
inc
lods
stos
pop
or
dec
cmpsl
mov
out
or
movsl
int
out
clc
cmp
jns
mov
push
gs
int3
jne
jg
mov
std
cmpsb
push
jnp
lea
xchg
push
imul
mov
mov
push
push
lahf
shlb
addr16
mov
test
xor
cmpsl
loop
cmc
jne
jb
mov
sub
dec
mov
xor
loop
xchg
int3
push
push
sahf
sub
jbe
xchg
insb
pop
fwait
in
call
cmp
and
add
adc
and
scas
in
mov
ss
sbb
push
cmp
push
mov
jecxz
insl
push
mov
xor
lods
cmc
mov
ficompl
inc
lock
sub
call
ficompl
shl
mov
dec
out
add
inc
pusha
out
fbld
sbb
ja
ret
mov
movzwl
push
mov
pop
jno
cmp
mov
push
cmp
outsl
xor
and
jecxz
jno
jnp
push
cld
or
sbb
sbb
les
rcll
push
and
lds
dec
xchg
out
mov
sub
jbe
jge
fs
call
and
in
jecxz
inc
repz
fcmovnu
mov
imul
fstpt
hlt
imul
dec
mov
sahf
and
movsb
insb
jb
push
aad
imul
mov
jl
lea
in
dec
push
jge,pt
xor
sbb
xchg
ljmp
xchg
push
jne
insl
push
inc
js
cltd
sbb
shlb
insb
adc
imul
mov
push
xor
sub
add
out
adcl
fisubrs
mov
mov
mov
nop
mov
cmpsb
nop
out
aas
xor
dec
sahf
aas
adc
mov
inc
dec
xchg
mov
rcll
js
je
int3
mov
inc
xor
mov
hlt
mov
lds
cmp
leave
add
fucom
pop
enter
inc
fwait
push
mov
adc
imul
add
sbb
jo
lock
jns
es
cmp
and
dec
testb
cmp
push
xor
test
xor
rcrl
sbb
sbb
push
shll
fs
bswap
ss
cmc
sbb
insb
sub
fsubrl
mov
mov
sub
cli
test
and
cmp
or
inc
jno
pushf
add
stos
cmp
jl
push
pop
and
pop
or
mov
push
xor
daa
jmp
aam
jmp
std
add
stc
lret
mov
cmp
data16
mov
insb
xor
xchg
call
jbe
inc
pop
mov
out
adc
inc
mov
dec
sub
xor
sbb
cmp
lret
sub
fsubrs
cmp
and
lds
les
jmp
movsl
aas
mov
jb
adc
out
add
push
shrl
sub
imul
mov
and
pushf
icebp
push
imul
jbe
add
cld
sub
mov
push
movsl
push
idiv
xor
pop
jns
les
les
in
ja
cwtl
fsubrs
or
pop
cmp
out
mov
xorb
testl
mov
cltd
cld
in
mov
jne
push
jl
add
cs
lahf
orl
scas
push
pop
fcomi
cmpl
or
sub
jo
sti
lods
push
push
setg
cmp
aam
popf
sbb
repnz
jp
repz
mov
push
cmp
cli
push
andl
sbb
add
test
in
aam
sbb
jns
dec
jmp
fdivs
sub
push
pop
ss
mov
or
fsubrp
iret
jb
enter
or
pop
cwtl
pop
mov
fnsave
cmp
dec
adc
int
push
sbb
pop
pop
sbb
jp
iret
outsb
jo
ljmp
lret
dec
rolb
and
test
arpl
scas
adc
enter
inc
jno
inc
ror
data16
cmp
xchg
popf
jae
scas
pop
cmp
mov
sub
aas
nop
or
insl
insl
shll
stos
xchg
or
aas
mov
inc
mov
repz
push
dec
xchg
dec
pop
dec
sti
push
mov
mov
test
fstps
dec
sbb
mov
cli
xor
imul
cmc
ljmp
les
mulb
loope
sub
inc
inc
loope
and
xchg
fdivrs
popf
hlt
aam
xor
pop
dec
cmp
mov
mov
insl
andl
inc
out
arpl
ret
cmp
sbb
fxch
loop
mov
les
ljmp
std
dec
lret
add
or
std
or
call
imul
leave
popf
mov
fisubs
mov
jo
daa
mov
mov
decl
cmp
sbb
and
adc
push
xor
js
pushf
inc
fisubrs
inc
out
and
leave
enterw
insl
adc
pop
jmp
cmp
mov
in
jnp
jne
sub
dec
and
enter
ljmp
pop
or
lret
pop
test
inc
repz
sbb
push
and
sub
cmp
fsubrs
and
lret
xor
mov
and
cli
inc
or
test
mov
and
ljmp
push
out
stc
hlt
inc
cmpsb
adc
or
xchg
xor
dec
push
shll
daa
aas
les
adc
loop
mov
cmpsb
inc
into
xchg
jmp
jecxz
pop
mov
daa
movsb
sbb
mov
enter
and
icebp
mov
or
inc
push
and
insb
push
adc
aas
and
mov
jp
xorl
mov
dec
cmp
add
int3
lock
pmaxub
shlb
or
orb
out
cmp
jmp
and
out
adc
jb
add
add
dec
mov
sub
jb
mov
cmp
cmp
repnz
jg
dec
cmp
dec
in
mov
fs
xchg
loope
push
inc
fs
loope
xor
jne
xchg
lods
inc
jecxz
mov
push
mov
pop
test
cmp
xor
jge
mov
cmp
sbb
xor
or
push
inc
cltd
test
or
fidivrl
inc
sbb
xor
dec
in
sub
or
inc
mov
pop
sbb
jmp
out
test
clc
sbb
dec
sub
jne
jmp
jo
scas
gs
out
push
subl
js
xor
pop
sti
xor
lods
out
imul
sub
negl
lahf
into
lods
mov
fistpl
cmp
imul
dec
cmp
push
cs
aad
mov
mov
jnp
mov
add
mov
jg
sbb
pop
and
sbb
out
clc
adc
aam
adc
cltd
in
push
jmp
fs
lods
movsb
xchg
in
sub
cmpsb
int
lock
dec
test
lahf
lea
cmpsl
mov
lcall
jo
sbb
out
or
xlat
stos
mov
jae
ss
and
lods
arpl
insb
sbb
jmp
push
jle
cmp
out
add
xor
inc
pop
pop
in
jno
inc
lods
mov
loope
fcmovnb
clc
pop
leave
push
mov
pushf
les
out
int3
call
flds
sub
shlb
lods
inc
or
ljmp
push
sub
pop
jle
xchg
xchg
std
push
sbb
enter
je
fsubrl
pop
rcrl
push
sbb
in
mov
test
mov
inc
lcall
sub
std
rol
dec
xchg
jecxz
jnp
mov
inc
add
jbe
pop
scas
pop
cmc
icebp
cltd
add
jns
stc
jp
in
mov
repnz
aam
jae
rorb
shll
mov
adc
lret
loop
xor
loope
push
jb
adc
mov
pop
into
push
push
dec
jmp
movsb
outsb
push
mov
push
adc
or
xchg
data16
cmp
in
push
aam
fdivl
repnz
add
inc
sub
stc
adc
decb
pmaddwd
or
inc
cmp
mov
pop
lea
mov
inc
mov
outsl
mov
jns
add
je
and
out
adc
fbld
mov
jbe
mov
ljmp
xlat
push
cwtl
mov
lds
insb
scas
out
enter
jb
mov
pop
les
addr16
add
movsb
xor
jno
cmp
test
add
sbb
test
adc
add
popa
add
jl
lea
adc
sbb
mov
pop
inc
cmp
shufps
sub
popa
jnp
jge
int
xchg
jg
mov
mov
jp
sub
or
xchg
add
out
aas
stos
inc
insl
pop
jp
add
sahf
xor
jo
push
sub
push
sbb
push
shlb
insl
and
dec
cmc
pusha
pop
add
sbb
inc
ficompl
cmp
push
cwtl
out
xchg
in
xchg
or
mov
jo
outsb
pushf
iret
inc
sbb
popf
lods
lea
xchg
inc
loopne
dec
mov
sbb
mov
sub
test
mov
fs
dec
lods
lds
ljmp
in
fcomi
repz
and
imul
xchg
fistpll
aam
scas
dec
int3
adc
aaa
in
pop
pop
push
sbbb
jno
mov
or
sahf
or
xlat
adc
cmp
xchg
jbe
fldcw
sbb
xchg
out
imul
pop
filds
fidivrs
add
jns
push
gs
loopne
sub
inc
adc
inc
pop
jne,pt
test
push
rolb
mov
cs
pop
fisubrs
into
adcl
adc
pop
test
fidivrs
repnz
mov
jge
mov
sbb
loop
mov
rcrb
pushf
repnz
repnz
les
test
xlat
das
fcomip
sbb
lods
and
lahf
adc
add
pop
sub
inc
mov
xor
lret
jg
pop
enter
stos
or
es
clc
cmp
in
lcall
stc
in
jge
and
nop
out
sub
out
sti
daa
jge
hlt
adc
mov
dec
rcll
push
test
mov
out
xchg
mov
rolb
jecxz
pop
std
mov
lods
mov
fbld
xchg
push
pop
test
xchg
in
pop
dec
xchg
sbb
fldl
in
dec
or
mov
xchg
pop
fnstcw
pop
clc
insl
dec
xor
aaa
popf
es
xlat
test
data16
jg
mov
dec
dec
loopne
hlt
xchg
inc
clc
test
fadds
mov
mov
jo
inc
pop
cli
mov
and
cs
and
jmp
inc
loop
add
mov
insb
maskmovq
notl
out
jmp
out
popa
add
pop
or
sar
pop
mov
loopne
adcb
cmp
int
jl
xchg
cld
scas
mov
shrb
mov
test
pop
and
cltd
fiaddl
adc
mov
mov
enter
shlb
mov
cmp
sbb
push
or
clc
leave
and
pushf
jl
sub
cmp
push
addb
jbe
cmp
fidivrl
and
cmp
cltd
pop
insb
mov
fwait
adc
or
push
jle
or
sar
in
aas
push
jecxz
js
enter
jae
ja
dec
xor
or
jns
adcl
xchg
cmp
jae
jge
movsl
jnp
fistpl
bound
ss
ljmp
aad
lret
scas
mov
scas
push
insl
sub
std
sub
ficoms
mov
mov
push
jo
pop
enter
jno
nop
xchg
mov
xor
inc
pop
nop
xor
xchg
and
push
fistpll
inc
cmpsl
arpl
push
inc
cmpl
dec
and
imul
in
cli
ja
mov
lods
adc
loope
cmp
jle
lds
ffreep
mov
jo
loop
sarl
and
dec
enter
lods
inc
pop
ret
dec
dec
pop
xlat
and
add
add
ret
push
cwtl
test
movsl
negb
faddl
enter
cmc
and
or
and
xor
dec
xchg
push
add
mov
mov
in
push
movsb
push
mov
jecxz
test
bound
leave
ret
cltd
xor
inc
ficomps
xorb
test
sub
and
int
mov
stos
jae
add
inc
mov
gs
test
pop
in
adc
in
fdivr
js
ss
and
push
xor
outsb
jge
js
add
lret
cmp
ja
cmpsl
mov
fistps
push
shll
sub
cmp
fstl
lods
mov
and
call
popf
push
rclb
adc
cmp
dec
pop
fst
jbe
dec
push
sbb
nop
mov
sbb
cmp
jbe
pop
lcall
xor
cmp
mov
scas
aas
push
bound
mov
sbbl
clc
fisttpl
add
outsb
jge
inc
jmp
push
mov
push
adc
or
insl
aam
stos
cld
int
sub
es
mov
ss
jo
jbe
xchg
add
movsl
sbb
jb
jge
rcrb
icebp
shll
cs
and
jno
int3
or
cwtl
insl
sub
push
or
add
lea
mov
scas
aas
sbb
std
cli
fucomi
xchg
fwait
mov
mov
das
adc
xchg
pop
mov
es
imul
test
push
mov
in
xor
mov
enter
push
dec
mov
dec
ret
push
in
mov
mov
fadds
xor
movl
adc
mov
sub
or
cmpsb
xchg
arpl
sub
sbb
mov
push
push
inc
imul
pop
fcmovnu
loopne
cld
sub
cltd
cmp
out
push
fcmove
sub
xor
fcompl
lea
jb
cmp
cltd
mov
imul
sbb
movsl
loopne
push
sbb
popa
popa
sbb
mov
inc
gs
mov
xor
xchg
xlat
jge
jne
jl
pop
cmp
negl
inc
int
mov
icebp
xlat
add
movsb
sbb
test
pop
jp
repz
mov
dec
pop
das
jmp
fiadds
lods
rclb
inc
into
inc
xchg
fsts
inc
cmp
push
daa
xor
xlat
cs
add
jae
sub
dec
jbe
pusha
push
dec
dec
pushf
and
and
mov
inc
arpl
adc
insb
xchg
iret
lret
cld
cli
or
in
push
jbe
outsb
jb
dec
pop
xor
push
fldcw
sub
sahf
popf
iret
cmp
bound
jecxz
jne
sahf
mov
jmp
mov
xor
mov
fwait
pop
test
ret
inc
xor
outsb
mov
and
push
cmp
adc
fcoml
adc
pop
fsubl
aaa
ds
ljmp
fwait
and
adc
dec
or
shll
mov
loop
test
cs
movsb
out
icebp
lds
repz
gs
sub
and
cmp
push
cmp
shrl
mov
dec
sbb
mov
fucomip
or
xchg
js
loope
insb
xchg
scas
pop
hlt
rclb
gs
cmp
or
sub
pop
mov
push
adcl
mov
outsb
out
repz
out
shlb
or
or
dec
dec
and
frstor
cmp
push
mov
movsl
dec
jg
out
jl
mov
aaa
adc
fadds
scas
sahf
jo
sub
mulb
test
pop
jmp
fstps
fstl
inc
pop
in
in
sbb
test
adc
out
jb
adc
add
add
les
sbb
cs
cmp
push
sbb
lcall
xor
mov
dec
sbb
dec
shlb
add
call
fisttpll
xchg
ret
testl
push
push
mov
ficoms
and
push
dec
xchg
andb
lock
mov
push
xchg
and
jo
adc
pop
push
rcrl
int3
adc
repz
adc
les
mov
pop
jnp
sbb
or
push
in
ss
idivb
dec
cltd
or
aad
cmp
cs
push
js
or
popf
enter
inc
gs
scas
sub
xchg
sti
ja
xchg
sub
adcb
arpl
fcompl
stos
adc
xor
dec
xor
adc
mov
out
xor
lods
stos
repz
cmc
or
xchg
adc
ja
inc
xchg
inc
fisubrs
ret
xor
fs
scas
mov
orb
cmp
inc
mov
mov
shrl
das
push
mov
inc
scas
pop
out
movb
cmpsb
popa
jnp
mov
jmp
mov
xor
xlat
adc
xchg
mov
mov
or
movsl
push
cmp
add
divb
or
faddl
mov
cmpsl
sbb
or
cltd
lret
inc
stos
push
inc
enter
bound
sbb
sti
sub
ds
and
or
or
jge
repz
pop
daa
push
xchg
jnp
pop
cmc
lea
mov
jecxz
push
scas
mov
std
jae
mov
sar
dec
dec
mov
mov
in
into
pop
sbb
out
test
mov
pop
mov
cmp
xor
jnp
mov
jo
lret
in
addl
ds
cmp
loope
dec
call
mov
pop
cmpsl
push
popa
inc
jns
xor
push
push
movsl
outsb
std
iret
inc
pop
and
xchg
cmpl
cwtl
dec
jo
ret
repnz
sbb
dec
insl
pop
pop
adc
mov
pop
xchg
mov
js
push
pop
pop
push
cmc
xor
inc
hlt
shlb
scas
and
mov
push
push
scas
mov
adc
push
xchg
dec
sub
dec
arpl
push
dec
jecxz
popf
and
xchg
sub
sub
mov
scas
in
in
dec
mov
dec
mov
mov
and
pop
bound
pop
aad
bound
and
out
push
in
out
sti
sbb
push
mov
jno
imul
pushf
jae
lods
lods
les
out
jne
push
mov
jg
pop
cmc
push
mov
or
je
sub
pop
enter
mov
adc
inc
and
xchg
fwait
xor
in
sub
mov
mov
dec
je
and
bound
jae
in
or
xor
mov
sti
enter
cmpsl
stos
cmp
xor
enter
xchg
adc
cmp
shrl
cmc
cli
ja
out
xorl
cmp
jbe
test
push
in
hlt
pop
pop
dec
or
movsb
push
das
cld
sbb
fsubs
ds
test
jno
xlat
mov
fists
mov
outsb
push
and
clc
sahf
es
les
in
xor
jb
adc
pop
data16
cmp
call
wrmsr
xchg
mov
fistps
inc
mov
out
and
mov
add
out
das
daa
xor
jecxz
cmc
jl
xor
mov
jns
mov
cwtl
push
loope
orb
xchg
out
outsb
subb
mov
add
out
add
fdivrl
mov
hlt
sub
push
xor
cmp
dec
leave
rcrl
cmp
clc
bnd
cmp
ret
or
popa
out
mov
xor
adc
into
jecxz
outsb
aam
dec
jle
mov
aas
mov
add
push
sub
stc
mov
inc
inc
mov
fldt
inc
inc
lods
xor
jmp
leave
add
xor
std
sbb
pop
xlat
ds
xor
insb
pop
movsb
push
dec
fxch
sub
mov
test
mov
in
hlt
mov
test
push
cmpsb
in
adc
push
cmp
xchg
sbb
cmp
rcr
push
push
stc
call
xchg
lret
mov
icebp
or
mov
stc
lea
or
inc
pushf
shll
mov
mov
fcoml
pop
xchg
cltd
jge
aaa
or
icebp
jg
clc
sub
xor
rol
xor
sbb
adc
cmpsl
je
shll
pop
xor
push
je
sub
addr16
xlat
ss
adc
adc
inc
fisubrs
mov
add
mov
cmp
pusha
adc
or
sbb
cmc
inc
call
outsb
push
mov
and
xorb
cmpsb
out
cmpsl
hlt
aam
sub
int3
loop
int
in
push
jae
repnz
ret
cld
or
sub
bound
outsl
pop
add
xchg
mov
daa
adc
lods
or
push
test
jno
push
ret
test
pusha
mov
call
out
lock
add
xchg
inc
ss
rorb
push
ljmp
sub
call
xchg
movsb
xchg
and
and
inc
les
inc
dec
out
adc
pop
arpl
enter
push
mov
mov
sbb
hlt
icebp
rolb
rol
inc
dec
pop
xchg
push
rcrl
jg
call
mov
push
xchg
jbe
lcall
arpl
aad
mov
ret
add
push
repnz
repz
xchg
shll
xor
icebp
cltd
pushf
mov
jne
mov
xchg
cmpl
mov
cmp
test
pushf
xor
ss
in
idivb
mov
sbb
cmp
push
mov
dec
pop
xchg
adc
stos
pop
ja
js
mov
mov
movsb
jo
insl
cmp
dec
mov
lret
mov
out
cmp
or
inc
pop
mov
fisttpl
repz
add
leave
lods
pop
enter
mov
fsubs
mov
in
pop
mov
das
shll
mov
rolb
cli
push
and
insl
dec
imul
or
mov
pushl
popa
out
lret
pop
gs
or
test
dec
dec
ret
mov
push
pusha
mov
push
iret
pop
adc
ds
jecxz
sti
lds
repz
sar
ss
std
push
rcrb
jns
cld
xchg
pop
das
clc
int
mov
xlat
adc
or
ss
into
shlb
inc
dec
mov
sub
stos
mov
xor
jno
and
in
out
xor
lock
aad
sbb
and
fstpt
inc
ss
and
xchg
push
test
call
jmp
ja
cmpsl
mov
lea
dec
test
pop
jmp
loop
bound
inc
or
or
loop
test
fwait
call
in
pop
inc
cmp
leave
inc
lcall
shlb
lods
sub
add
bound
in
jle
pop
hlt
lret
cwtl
repz
lods
pop
mov
pushf
loopne
les
addr16
adc
lds
sahf
and
lods
je
test
mov
shll
mov
ret
jb
jecxz
into
jb
dec
adc
pop
popa
out
mov
pop
and
lret
repnz
lahf
xor
dec
lahf
rol
rcrb
push
sahf
insb
das
jmp
inc
dec
xorb
in
aas
mov
add
pushw
push
and
out
ret
in
pop
mov
into
out
push
or
fwait
enter
cs
cs
loope
jge
into
or
dec
xchg
xchg
dec
pop
scas
sub
xchg
pop
in
insb
cmp
pop
lods
mov
pusha
jnp
push
jb
adc
inc
cmp
jmp
bound
lret
call
fldl
sarb
jne
popa
loop
mov
call
ret
mov
cmp
das
or
std
sbb
jnp
das
jmp
rcr
add
ret
lock
jle
xchg
nop
inc
xchg
cmp
in
or
mov
into
or
add
jmp
mov
adc
inc
adcl
jecxz
mov
mov
push
xchg
out
arpl
lret
lea
lret
or
xor
mov
and
sub
add
sub
xchg
bound
xchg
lcall
push
jle
mov
call
hlt
ss
inc
push
mov
pop
in
daa
call
enter
push
and
adc
sub
sbb
lret
pop
mov
mov
nop
dec
fcmovu
js
sub
insl
or
cmpsl
aam
lock
imul
push
pop
das
insl
push
mov
out
jecxz
or
mov
lret
sbb
or
sbb
pushl
or
into
push
sti
lcall
movsb
mov
rclb
cmp
dec
pusha
mov
loope
or
test
int3
mov
mov
fmuls
and
pop
pop
out
inc
xorl
aaa
mov
pop
ljmp
mov
push
add
xor
sub
stc
sahf
int3
call
push
cwtl
and
xor
adc
rcr
push
stos
ret
inc
nop
push
mov
mov
int
pop
bound
clc
call
push
lcall
xor
test
out
aad
rcl
jle
loopne
shrb
divl
iret
cmpsb
xchg
sub
sub
adc
mov
repnz
lods
push
les
sub
xchg
ss
ds
sub
dec
xchg
cmp
incl
sahf
or
ret
push
jecxz
lret
cmpsl
and
xor
shlb
out
push
adc
rcrl
push
addr16
xchg
stos
cmp
lock
bnd
inc
sti
out
sub
sub
push
pop
jmp
lcall
xor
cwtl
out
dec
ss
jp
mov
mov
pop
into
fs
mov
adc
dec
or
mov
mov
js
sub
or
mov
ret
leave
push
stc
xchg
jns
sti
idiv
enter
add
mov
mov
aam
sbb
loope
int
or
add
pushf
lret
hlt
lods
addr16
xor
enter
or
sbb
pop
enter
xor
cmp
push
pop
dec
fbstp
jnp
mov
dec
neg
roll
jnp
inc
sbb
andb
dec
lods
inc
push
out
jl
xor
hlt
dec
pop
jbe
push
icebp
pop
jno
mov
mov
xchg
mov
or
iret
data16
lahf
xchg
dec
jae
iret
daa
mov
fwait
sbb
leave
jno
push
ja
in
xor
ja
movsb
sbb
mov
add
add
pop
pop
cmp
ja
inc
xchg
push
push
jb
pop
test
pop
cli
jne
add
data16
cmpsb
jecxz
push
sti
dec
adc
cmp
or
loop
cwtl
aas
rol
cmp
inc
pop
mov
fwait
or
ja
mov
mov
fcmovne
cmp
aas
andl
push
out
shlb
dec
inc
out
aaa
ss
lahf
fisttpl
fstps
xchg
pop
and
mov
arpl
sbb
add
jmp
jae
mov
rolb
push
dec
fstpl
stos
rorl
cmp
aam
pop
lahf
jb
jo
fidivs
lods
cmpsl
popf
pop
adc
shrb
out
sbb
fisubrl
pop
testl
add
mov
xchg
sbb
in
or
aad
push
jg
cmp
mov
or
data16
push
inc
jnp
or
enter
in
lods
leave
inc
pop
pushf
and
call
ss
and
xor
sub
aaa
es
daa
aam
sub
cmpsb
pop
fmul
test
daa
or
add
mov
adc
or
pop
popa
jne
sub
fisubs
jmp
jbe
push
dec
xor
mov
sub
lret
notl
pop
pop
dec
jp
pop
cmp
int
adc
sbb
ret
roll
dec
iret
popf
inc
and
pusha
inc
mov
ds
rorl
ret
pop
or
into
or
mov
je
pcmpgtb
sub
lea
mov
mov
cmp
sbb
adc
xchg
imul
pslld
pop
ss
pop
sarb
jecxz
popf
mov
inc
mov
and
addr16
or
mov
enter
out
jb
inc
rcrb
std
imul
ret
adc
movsl
adc
jns
dec
mov
add
push
and
sub
mov
mov
dec
fisubs
mov
dec
add
data16
or
lahf
pop
icebp
pop
mov
xchg
cmc
adc
scas
cmpsb
sahf
ja
pop
out
sbb
xor
mov
add
lock
pop
adc
xor
nop
into
push
mov
out
test
jmp
push
lret
in
xlat
out
push
cmp
pop
xor
cmp
xchg
push
notb
adc
outsl
popa
jg
push
das
xchg
ss
inc
test
sbb
adc
or
mul
mov
aas
adc
add
xchg
fwait
xchg
pop
dec
dec
mov
jl
push
test
xchg
ljmp
in
movsb
adc
insl
cmp
hlt
pop
jg
xor
das
sub
out
out
and
pop
push
and
cwtl
or
pop
adc
cmp
mov
out
fs
cs
xor
nop
push
icebp
mov
sarb
cmpsl
jg
sub
mov
cmpsl
stc
fsubp
adc
jp
in
pop
xchg
iret
xchg
and
imul
orb
mov
dec
dec
mov
iret
and
xchg
std
xor
rol
movsb
adc
sbb
sti
adcb
cmc
or
cmp
xchg
inc
out
push
scas
sub
in
stc
aaa
jae
or
and
pop
inc
inc
mov
das
cld
xchg
call
adc
testb
js
sahf
add
outsl
out
mov
sbb
in
xchg
xor
mov
or
adc
push
mov
pop
mov
push
lea
pusha
dec
pusha
mov
fcomi
mov
jo
mov
xchg
aad
cmpsb
dec
cld
pop
scas
mov
int
and
add
inc
jmp
jp
ja
sbb
popf
or
pop
sbb
cltd
shl
cmp
mov
clc
dec
cmp
xor
xchg
add
cmpsb
adc
inc
or
lods
fcomip
jae
pushf
popa
inc
inc
cmc
leave
mov
cmp
scas
stc
nop
fldenv
jb
sbb
aaa
jl
add
adc
outsb
repz
clc
xor
in
shll
push
mov
add
rclb
inc
lods
cmp
pop
xlat
mov
xchg
rclb
xchg
clc
jmp
inc
sbb
add
sbb
popf
in
xchg
div
xchg
xor
mov
int
and
push
sbb
pop
xchg
popl
push
jno
enter
test
jmp
mov
mov
fsubs
daa
lock
jg
sub
insb
mov
call
stos
data16
jmp
stos
sub
jecxz
jmp
or
lds
test
cli
sahf
mov
fldcw
into
inc
jle
mov
cmp
push
adc
dec
stos
adc
int3
push
rclb
push
incl
dec
xchg
mov
loopne
out
imul
sbb
xlat
dec
hlt
mov
cmp
ds
popa
scas
movsl
insb
push
add
int
jg
and
pop
mov
push
aaa
jg
jo
or
cmpsb
mov
ljmp
cmp
pop
mov
aas
mov
faddl
shlb
shrl
outsb
fiaddl
mov
mov
pop
inc
repz
pop
and
add
nop
or
xchg
jge
fwait
sbb
jbe
imul
repnz
sti
sub
jo
sar
add
jg
mov
gs
out
je
mov
xor
mov
pusha
add
add
testl
mov
popf
stc
mov
add
scas
mul
clc
dec
push
icebp
lahf
push
and
mul
arpl
push
jl
cmpsl
dec
push
xchg
xor
pushf
cmp
sbb
pop
test
pusha
js
dec
imul
pop
adc
cli
rolb
cmp
test
movsb
int3
xchg
mov
addr16
lock
int3
add
into
rcrb
or
xchg
addr16
shl
cmp
bound
sub
adc
loope
lds
add
lret
cld
mov
addr16
fxch
js
outsl
sub
adc
adc
push
sub
ja
inc
sub
or
das
je
push
jno
rclb
sub
push
outsb
fdivrs
push
and
xor
push
xchg
rcrl
xchg
jns
int
push
outsb
leave
jne
push
aaa
popf
ss
xchg
int3
ja
cmp
inc
insb
in
lret
sub
jne
sub
std
mov
push
movsb
add
jg
test
ret
jae
lret
adc
mov
into
lock
mov
add
arpl
and
in
push
or
dec
pusha
jb
xchg
dec
adc
xor
lahf
dec
enter
shl
int
jb
adc
lods
adcb
jl
push
cld
mov
dec
sar
lock
dec
sbb
hlt
repz
les
sub
mov
add
fwait
jns
cmp
jecxz
cli
shlb
sar
lret
push
insb
pushf
push
ss
test
inc
sub
jns
daa
adc
lock
xor
jae
jmp
ljmp
insb
cmpsl
sub
jmp
lcall
mov
push
icebp
imul
pop
xor
mov
xchg
mov
fsubrl
dec
mov
jg
loope
outsb
jl
test
shlb
jp
adc
xorb
js
fcomps
test
aad
jg
xor
repz
inc
mov
mov
sbb
xchg
and
pusha
test
xchg
mov
and
test
dec
leave
cmp
sub
jae
inc
ret
in
mov
std
fs
enter
lret
add
int
jle
ss
iret
dec
insl
loop
cmpsl
sub
jmp
test
inc
mov
push
imul
push
and
fwait
js
push
ret
int3
cwtl
mov
test
imul
mov
mov
push
inc
mov
lods
iret
push
push
adc
ret
push
aas
imul
insl
test
mov
sub
xorb
ds
inc
rcrl
and
aam
add
push
pop
cmp
sbb
inc
lcall
repnz
test
xor
mov
adc
sahf
mov
and
outsl
xchg
sbb
leave
inc
sub
xchg
scas
mov
sbb
mov
movb
repnz
add
lcall
notb
adcl
cld
sub
fsubrl
mov
push
add
sarb
movsb
adc
minps
arpl
in
jl
adc
sti
lods
pop
cmp
or
fisubrs
leave
shll
test
xchg
dec
inc
sbb
sbb
mov
in
outsl
shlb
popa
inc
fimull
push
addr16
lock
in
fwait
mov
adc
popa
jns
in
push
sbb
add
add
sahf
lea
stos
addr16
addr16
stos
sahf
mov
adc
inc
in
or
xchg
push
xchg
sbb
mov
cmc
cli
xchg
cmp
or
movsb
ret
rorl
imul
xor
loop
out
xchg
xchg
hlt
fwait
mov
fucomi
adc
aaa
mov
inc
mov
mov
mov
shll
mov
dec
lcall
xchg
cmpsl
dec
ds
cmp
jge
fsubrp
fadd
rcrb
daa
jecxz
inc
out
popa
int
jns
sub
jnp
push
xor
jnp
loop
fsts
mov
add
dec
add
mov
and
clc
sbb
subb
pop
cmp
fdivrs
pusha
inc
inc
movsl
push
jge
add
cld
mov
daa
push
adc
jecxz
std
cwtl
js
ds
insl
bound
es
aaa
outsl
adc
fstpt
and
dec
fcompl
int3
fidivrl
jp
loope
iret
aam
aaa
pop
jne
inc
xchg
roll
ret
popa
xchg
push
lahf
repnz
stc
sbb
ror
adc
sub
xchg
ret
mov
inc
mov
and
out
pop
int
ficompl
shrl
enter
add
add
mov
pop
mov
sti
jo
mov
lds
out
out
inc
test
mov
inc
gs
nop
into
nop
and
lods
mov
mov
xchg
lcall
jle
lds
jp
popa
xchg
imul
pop
data16
mov
cltd
shrb
scas
daa
and
loope
lods
jnp
add
jp
dec
cmp
dec
loop
mov
dec
push
popa
mov
jnp
aaa
pop
jnp
test
int3
fmull
int3
add
std
add
and
jge
out
movsl
fdivrs
xchg
xchg
sub
mov
nop
dec
int
push
pop
stos
test
cld
add
pop
adc
mov
loope
xchg
stos
fldcw
fisubl
cmpsl
sub
push
rorb
jge
stc
ret
imul
incl
daa
in
out
fbld
insl
or
and
hlt
daa
rolb
out
pop
lret
into
leave
mov
mov
mov
and
cmp
cld
out
add
das
push
mov
push
dec
lea
fdivrs
jmp
in
push
jae
mov
pop
adc
xor
pop
ljmp
pop
insl
cli
aam
xor
dec
sub
push
jmp
jg
fnstsw
scas
or
xor
repnz
ljmp
adc
add
mov
push
xchg
jnp
scas
jmp
sub
icebp
push
sbb
sub
cld
mov
jmp
inc
mov
imul
sbb
in
jle
fsubs
stos
in
and
push
shrb
fistl
rcrb
jle
add
rclb
adc
jno
adc
cmp
add
adc
pop
cmp
inc
cld
add
lcall
xor
call
fisubrl
pop
les
push
mov
into
fbstp
xchg
jo
add
mov
mul
jae
fsubrl
jne
cwtl
xor
mov
mov
rcrb
lret
fisubrl
inc
mov
das
sarl
mov
xchg
push
test
mull
cmc
lods
js
push
adc
cmpsb
fildl
enter
mov
sbb
fcoms
cmp
adc
testl
xchg
lret
push
lock
ljmp
jno
frstor
dec
enter
xchg
jecxz
ds
test
dec
or
push
dec
out
lret
scas
xchg
dec
jecxz
dec
fdecstp
xchg
inc
inc
push
out
loop
add
cli
jge
cmp
bound
push
cld
add
mov
cmp
ss
sbb
insl
mov
and
mov
fimuls
into
pop
icebp
rcrl
loop
mov
jno
xor
aaa
mov
nop
in
hlt
sub
ficoml
push
and
inc
mov
out
mov
fidivrs
push
dec
jmp
ljmp
and
xchg
cmpsl
cs
or
add
mov
rolb
fs
stc
pop
bound
push
cmp
add
jb
push
popa
xor
cld
enter
jb
push
out
movsl
lahf
in
sbb
dec
test
ja
push
cmc
sub
add
mov
dec
and
mov
jnp
jecxz
adc
call
repnz
push
insb
aas
enter
mov
into
dec
lds
icebp
mov
mov
cmc
mov
mov
xchg
pushf
pop
fbld
adc
adc
lea
sahf
out
add
sbb
int3
mov
int3
ljmp
xor
sahf
jecxz
cmpb
fcomip
je
cltd
jge
sahf
cmp
add
inc
jb
bound
dec
pop
mov
mov
int
sbb
std
jg
insl
inc
pop
mov
ret
xorb
mov
bound
movsb
sub
and
xor
mov
imull
add
xchg
pop
or
jne
frstor
add
in
jg
movsb
sub
jmp
mov
xchg
out
adc
aaa
hlt
aaa
xchg
scas
outsb
mov
dec
pushf
arpl
push
sbb
sub
pop
xor
out
int
cmp
icebp
push
arpl
jle
sarb
cs
inc
arpl
scas
repnz
xor
test
add
add
jb
push
popa
xchg
jge
cmp
xchg
mov
lds
arpl
data16
mov
call
mov
jnp
loop
in
in
stos
sbb
fsubrs
ljmp
dec
xchg
push
mov
xlat
scas
pop
cmp
movsb
pop
outsl
dec
jno
xchg
out
aam
mov
xor
add
push
fs
xchg
shll
negb
mov
in
cli
sbb
xchg
jecxz
adc
pop
cmp
decb
mov
movsl
sub
jns
sub
pusha
ljmp
and
add
in
jb
sub
mov
fsubrs
xchg
daa
add
rclb
pushf
or
inc
mov
icebp
xor
and
dec
sbb
xor
inc
mov
push
jo
movsb
in
xor
mov
and
lahf
add
imul
cmp
sbb
inc
adc
push
pop
fbstp
in
shll
mov
sub
dec
jge
xor
popf
pop
cmpsl
sbb
xchg
sub
imulb
notb
xor
and
aaa
dec
xchg
dec
test
outsb
or
inc
idivl
dec
add
jg
sub
cli
xor
in
pop
out
inc
cmpsl
lcall
dec
iret
andb
add
fwait
subl
mov
in
cmpb
hlt
jle
pop
pop
aas
outsb
push
in
adc
jae
aad
movsb
sahf
pop
js
adc
mov
xorb
loop
pop
lret
aad
sti
mov
push
nop
push
loope
dec
cltd
testb
cmpsb
or
popf
cmp
int
jp
push
into
mov
mov
pop
loop
cwtl
jecxz
dec
jge
out
xchg
add
xchg
push
mov
sub
push
add
popf
xchg
adc
arpl
push
jno
rorl
cmp
add
loope
dec
adc
std
scas
lcall
scas
mov
and
sub
clc
sub
fstpl
push
insb
sti
repz
aas
inc
and
jecxz
es
fs
sahf
ss
cmpsb
add
mov
lret
sbb
mov
push
mov
stc
push
or
inc
sub
insb
sbb
or
pop
xor
mov
stos
sar
mulb
jb
mov
jecxz
sub
cltd
test
push
pop
and
sub
xchg
stc
push
loope
cmpsb
ret
repnz
and
arpl
pop
push
rcrb
fmul
mov
sub
in
cltd
inc
jecxz
mov
add
xchg
xor
sarb
fwait
les
add
sar
lods
stos
mov
pop
push
out
loopne
mov
aam
xchg
ja
push
repz
rorb
cld
push
fst
stos
lea
xor
add
loop
in
pop
xchg
aam
clc
dec
cmpsb
adc
mov
dec
ret
out
lods
inc
shrb
gs
pop
xchg
call
fwait
in
mov
xchg
inc
jbe
cmp
mov
xchg
sbb
aam
or
dec
dec
mov
cld
js
fadds
bound
dec
in
shrb
pop
aaa
mov
and
sar
mull
ret
daa
dec
add
adc
mov
push
test
or
pop
mov
jl
sahf
jl
pop
add
lea
push
xchg
shrd
cli
sbb
mov
test
lcall
out
lock
jo
cmp
and
mov
xchg
cmp
iret
enter
inc
push
lds
mov
lahf
es
fcmovnb
int
call
mov
js
adc
in
push
insb
push
jbe
cmpsb
imull
subb
push
cmp
cli
jo
sub
iret
insb
repz
jl
dec
add
cmp
movsb
sub
popa
mov
enter
fnstsw
test
insl
xlat
pop
out
mov
xor
adc
push
rcr
mov
cli
fs
jge
mov
andb
and
adc
or
mov
clc
add
std
add
add
cwtl
dec
push
sbb
push
and
scas
cld
stos
pop
mov
outsb
add
lret
jno
mov
dec
or
inc
fwait
add
inc
inc
or
roll
cmc
adcb
mov
inc
mov
js
imul
add
lock
adc
shll
fisubrl
add
jbe
cmp
mov
outsl
adcl
out
aad
dec
inc
xlat
mov
mov
test
xchg
inc
jno
lds
into
or
movsl
inc
pushf
pop
inc
orb
out
xor
xorb
xchg
lret
int
cmp
inc
jb
daa
call
in
inc
xchg
mov
mov
ss
icebp
push
jae
cmp
aas
dec
sahf
lods
xor
mov
mov
nop
sbb
mov
dec
jg
push
pop
and
lods
mov
mov
lret
dec
cld
mov
cmp
push
dec
cmpsl
cmp
lret
pop
sub
dec
or
aad
mov
inc
mov
or
mov
inc
jb
add
cmp
nop
sub
inc
mov
cmp
or
orl
daa
jmp
ret
adc
daa
mov
cmp
orl
jns
lcall
lea
aas
mov
ljmp
push
ss
lea
test
inc
adc
mov
fwait
out
or
jnp
sbb
insb
ret
movsb
ss
inc
pushf
lea
cs
adc
ja
jp
inc
mov
out
xchg
jle
jle
dec
fadds
or
mov
lea
aaa
sub
sub
ret
dec
bound
dec
loope
addr16
jmp
adc
mov
mov
cmp
ss
loope,pn
fisttpl
xchg
mov
mov
and
ret
lds
lcall
or
mov
pop
adc
xchg
popa
clc
test
mov
aas
andb
sbb
xchg
mov
pop
test
and
add
shlb
je
stos
sub
adc
fsts
lods
jp
mov
loop
mov
repnz
je
sub
jle
fildll
imul
jge
xchg
or
lods
mov
mov
out
inc
pop
loopne
xchg
repz
int3
test
aam
jne
test
je
dec
mov
pop
inc
popf
sub
les
mov
outsb
jne
xor
mov
add
inc
or
dec
movsl
mov
movsb
add
std
dec
mov
lcall
loopne
and
jg
or
push
mov
sahf
mov
and
mov
cmp
or
sub
lcall
and
mov
test
add
cmp
lahf
pushf
lret
xor
pop
dec
fs
inc
adc
or
fsubl
loop
xchg
push
mov
sbb
fsubl
es
inc
inc
test
dec
les
pop
sub
mov
mov
pop
inc
add
xchg
cli
xchg
ds
xchg
cmp
xor
aad
push
push
mov
jnp
shlb
icebp
pop
sub
js
mov
xor
and
xchg
mov
std
mov
hlt
test
sbb
mov
jae
add
adc
es
cmp
enter
bound
pop
mov
popa
rclb
enter
lret
xlat
push
clc
cs
fxch
test
gs
push
out
cmpsb
mov
or
aad
inc
je
jmp
push
es
xchg
loopne
or
cltd
movsb
push
jnp
or
lahf
xchg
jae
adc
aas
shl
lods
xlat
movsb
inc
cmc
push
add
jbe
push
sti
dec
sbb
sahf
push
adc
add
out
imul
gs
mov
mov
mov
hlt
inc
cltd
sub
cmp
imul
xchg
out
and
inc
imul
cs
xchg
in
mov
xor
lahf
test
test
testb
rol
out
mov
movsl
out
mov
stos
shrl
lret
sarl
adc
jnp
in
movsb
mov
xchg
cwtl
dec
movsb
add
stos
jp
mov
pushf
xchg
outsb
mov
call
adc
or
scas
mov
pop
insl
insl
scas
leave
imul
and
stc
mov
pop
jo
mov
jmp
mov
mov
outsl
sbb
mov
data16
lock
jne
push
ljmp
push
push
ret
sub
mov
xchg
dec
inc
push
sahf
push
mov
dec
rcl
negb
adc
mov
icebp
jecxz
loop
sub
push
out
inc
rorl
mov
cwtl
call
fwait
jmp
adc
adc
int3
jo
add
pop
jnp
pusha
mov
ret
in
xchg
mov
ret
data16
hlt
cld
loopne
lahf
cltd
daa
cmc
adc
mov
inc
push
mov
fcoms
cmp
xchg
decl
sub
lahf
insl
xchg
xchg
test
cs
adc
in
lods
lret
sbb
cltd
adc
xchg
dec
stos
lock
aam
lret
and
cmovno
cmpsl
pop
pop
add
mov
sbb
cmpsl
xor
daa
mov
pop
add
jmp
lea
inc
cli
scas
xlat
or
cmpsl
je
jns
jg
push
adc
test
fists
jae
inc
imul
mov
std
sbb
imul
mov
imul
imul
jno
pop
push
mov
shrb
and
sbb
mov
mov
pop
dec
pop
out
push
sub
adc
sahf
sbbl
aaa
sahf
jle
cs
and
jb
jns
test
sub
fidivl
stc
stos
sbb
inc
ret
je
popa
stos
mov
inc
les
add
mov
insl
leave
ljmp
mov
add
cmp
inc
mov
stos
push
and
mov
inc
sub
mov
or
ljmp
mov
jge
and
xor
ret
jae
leave
dec
cld
test
xchg
fcompl
jmp
mov
stc
lods
mov
pop
mov
mul
push
test
adc
or
mov
xchg
sub
cmp
gs
mov
cmp
fiadds
test
ret
stc
pop
add
mov
in
xchg
adc
sbbb
push
xchg
jb
adc
xor
aas
adc
jp
lcall
mov
mov
xor
pushf
pop
push
xchg
pop
fldt
jmp
inc
add
or
cltd
pop
pushf
ror
movsb
test
pop
cltd
lds
test
nop
aaa
mov
sub
clc
mov
xor
add
and
out
pop
aad
mov
rolb
pop
lcall
hlt
xchg
pop
or
rorl
or
mov
push
pusha
mov
call
or
sbb
mov
sub
cmp
aam
inc
cs
mov
push
pushf
mov
int
push
fistl
adc
arpl
es
mov
xchg
dec
sub
sub
in
inc
stc
fistpl
pusha
mov
pop
sbb
add
xchg
in
cwtl
add
ljmp
dec
xor
lock
dec
orl
clc
in
bound
push
lock
notl
add
mov
inc
icebp
mov
push
cs
in
xchg
in
jae
rcll
dec
jb
inc
ret
insl
inc
f2xm1
cmp
dec
and
cmp
into
mov
lahf
adcl
inc
xchg
in
rorl
addr16
xlat
shlb
lock
push
clc
sub
mov
imul
loop
hlt
and
adc
adc
xor
push
cmp
xchg
fimuls
push
push
mov
movsb
xchg
sbb
rcrb
xor
dec
dec
dec
dec
arpl
in
int3
fsub
nop
inc
rcr
push
dec
sbb
pop
and
enter
pavgb
jg
movsb
ret
xor
pop
inc
or
pushf
shr
insl
repz
sahf
test
xchg
loope
subl
shll
ss
inc
int3
cmp
jb
outsl
or
push
cmpsl
pop
scas
dec
xlat
or
and
and
pop
daa
js
enter
mov
mov
mov
and
ret
inc
addr16
es
inc
mov
add
es
and
incl
cmp
loop
test
cmp
pop
enter
repz
stos
xchg
outsb
pop
fsubs
popa
rcrl
or
cmpsb
ljmp
scas
inc
push
mov
in
cmpsl
movsl
mov
push
push
std
dec
mov
pop
mov
out
and
stc
jnp
shlb
test
lock
inc
cmp
xchg
adc
pop
and
push
repnz
int3
lret
iret
xor
mov
leave
dec
or
nop
adc
ss
cmpb
sub
jae
rolb
mov
dec
pusha
xchg
leave
sbb
xchg
add
in
adc
dec
sbb
mov
movsl
mov
das
outsb
shr
jecxz
sbb
scas
pop
mov
xchg
inc
inc
mov
inc
jno
push
mov
xor
xchg
mov
push
mov
ficompl
lods
jl
bound
das
push
fldl
cmp
cmpl
addb
dec
daa
in
mov
jne
stc
gs
xor
sbb
cmpsb
fdivrs
int
aad
bound
loope
test
iret
adc
and
ret
imul
adc
sti
inc
insb
in
mov
sbbb
stc
mov
jmp
dec
pop
adc
ja
mov
and
fst
lock
es
pop
jne
in
sub
sub
test
lock
aas
loopne
dec
sub
jmp
inc
outsb
xor
inc
mov
leave
xor
shlb
cmp
dec
pop
in
cmpsb
insl
mov
ret
lahf
fsubrl
and
sub
xchg
and
insl
cs
loop
pop
or
arpl
pop
fisubrl
ret
add
cmpsl
mov
push
dec
jecxz
enter
and
rcll
dec
add
lods
pop
adc
into
addr16
inc
mov
pop
xor
inc
clc
stc
sub
lods
xlat
cmp
cmp
pop
mov
inc
sub
jno
xchg
mov
inc
fabs
cmp
xchg
xchg
repnz
in
mov
aam
arpl
shrb
adc
ret
push
int3
mov
pop
lcall
sar
sti
cmp
lret
sahf
inc
jo
imul
xchg
pusha
mov
jecxz
pusha
fdivp
mov
lahf
bound
or
cmp
mov
outsb
pop
sub
dec
mov
adc
and
lock
int3
cmp
add
divb
push
sub
loopne
adc
sub
test
pop
aam
sti
imul
fadd
xor
cmp
pop
xor
aaa
pop
sub
out
or
out
scas
stos
xor
shll
mov
insb
inc
pop
push
push
mov
dec
xchg
gs
fdivs
xchg
mov
inc
and
das
enter
out
in
stc
mov
lcall
mov
cmp
repnz
jge
mov
mov
push
stos
call
cwtl
adc
sbb
pop
test
pop
clc
stos
into
add
pop
fs
into
dec
aad
test
data16
pop
pop
push
or
mov
movsl
jl
adc
imul
pop
adc
leave
push
lret
enter
inc
test
xchg
adc
sbb
fs
mov
push
or
cmp
cs
xor
or
jmp
insb
imull
and
jg
out
lret
dec
subb
loope
push
mov
and
es
mov
in
ds
xchg
add
gs
popa
or
xor
add
bound
test
icebp
ss
mov
daa
loop
outsb
call
jbe
push
or
push
jbe
mov
jl
mov
xchg
ja
test
jecxz
cmp
adc
mov
fnstenv
lret
enter
enter
inc
lret
pushl
push
out
shl
push
call
test
mov
movl
pop
aas
fstps
or
adcl
int3
insb
ret
xchg
or
in
ja
mov
in
xchg
mov
jmp
test
stc
adc
cmp
dec
ret
jo
push
aad
aas
cmp
mov
or
sub
mov
fmull
sbb
push
xor
xchg
pop
xchg
rcrl
xchg
xor
push
aas
dec
into
push
in
xlat
hlt
mov
inc
xchg
bound
jmp
cwtl
adc
and
fwait
scas
xlat
add
dec
bound
pop
out
cmp
push
mov
sarb
ds
sbb
decl
sbb
and
sub
inc
popf
mov
insl
ret
sub
add
mov
inc
or
mov
loope
jbe
dec
xchg
shll
mov
xchg
test
aam
jmp
jge
mov
cli
pop
aam
jmp
addps
out
popl
cmp
xchg
out
stos
cmp
outsb
adc
in
inc
mov
pushf
in
or
fwait
inc
sub
fldcw
lcall
xor
stos
pop
cltd
xorb
cld
stc
ror
mov
dec
pop
xlat
push
aam
adc
and
pop
lock
xchg
mov
fimuls
or
cmp
scas
mov
mov
mov
dec
cmpsb
cmp
mov
adc
cmp
sbb
push
jne
lds
out
outsb
arpl
push
daa
mov
in
fs
xchg
negl
aad
pop
ljmp
lock
add
add
jns
outsb
xor
mov
xchg
dec
xor
ret
call
adc
xchg
mov
faddp
aam
inc
adc
or
mov
and
add
pop
jp
push
xchg
lahf
adc
out
dec
lret
data16
xchg
sarl
lahf
add
mov
icebp
mov
xor
out
push
fsub
sahf
dec
inc
sub
je
push
movsl
dec
add
test
stos
out
pop
sti
mov
std
lea
jae
cmpsl
and
out
sbb
cmp
and
lds
rcrl
or
lods
enter
sti
jg
mov
pop
mov
mov
mov
xchg
fdiv
insl
scas
xor
icebp
inc
or
sub
fstl
pop
mov
xchg
pop
scas
cmp
mov
xchg
inc
mov
xor
add
data16
aad
stos
adc
jle
push
jne
mov
test
xchg
sbb
cmp
scas
rcrl
ret
lods
cli
and
dec
add
popa
cmp
std
sub
popf
jae
inc
mov
loope
pop
or
mov
jns
mov
pop
jmp
cmp
cmp
fwait
cs
sub
mov
popl
imul
cmp
shrb
xchg
pushf
mov
ret
mov
cwtl
sub
cmp
mov
jns
push
cmp
loop
dec
lds
push
add
cmp
fwait
pop
out
bound
mov
leave
adc
pop
or
js
das
movsl
and
lea
add
call
nop
cmc
cmp
lret
or
scas
in
cmp
int
outsb
cmp
andl
sub
lret
mov
cwtl
push
into
mov
enter
mov
repz
xchg
add
or
out
data16
dec
call
imul
push
in
fwait
loope
or
adc
pop
cwtl
int3
aad
mov
rcrb
outsb
inc
add
push
ss
leave
sbb
les
cwtl
pop
pop
rorl
jne
cs
jge
pop
in
sub
in
and
xchg
int3
push
jle
iret
sbb
mov
lret
adc
push
inc
cld
out
pop
cld
push
lret
jb
out
aaa
xor
adc
dec
cltd
mov
pop
clc
shll
dec
and
arpl
pop
pop
push
cmp
pop
les
adc
out
xlat
nop
and
repz
in
inc
mov
aad
pushf
ja
dec
jl
pop
jo
sahf
lret
std
jo
dec
sbb
jnp
cmc
sti
out
rcll
loopne
dec
rclb
lahf
lods
fidivl
inc
and
pop
lret
mov
lods
fcoml
test
sti
fildll
push
and
cmpl
mov
out
push
outsb
cmp
add
outsb
xchg
push
pop
jb
jmp
pop
adc
add
lods
push
xor
test
lea
push
mov
sbb
mov
mov
push
push
iret
push
repz
fsubrs
ss
cmp
jbe
or
mov
xor
cmpsl
sahf
ljmp
std
pop
ret
ss
pop
pop
dec
out
sub
outsl
ljmp
imul
in
out
cli
stos
stc
lret
dec
dec
mov
ds
imul
sbb
stc
push
in
rolb
movaps
and
cmpb
ds
mov
orl
stos
mov
cmc
mov
insb
or
mov
mov
fwait
mov
lods
dec
stc
in
pusha
movsl
rorl
scas
popf
push
push
dec
jae
lea
sbb
dec
mov
push
out
mov
inc
mov
and
cmp
or
sti
mov
out
mov
aam
popa
inc
xor
popf
addr16
cmp
jb
mov
sub
js
sub
push
adc
xchg
and
mov
insb
inc
ja
xchg
xor
mov
iret
jbe
mov
mov
jle
adc
outsb
pop
mov
lods
arpl
clc
sub
imul
sub
test
dec
xchg
popa
cltd
fs
les
jl
das
test
sahf
pop
ret
aam
xchg
xchg
pop
inc
in
mov
mov
mov
mov
mov
shll
sub
pop
push
dec
fnsave
lods
mov
sub
lcall
jle
lret
push
add
pop
push
add
dec
das
push
xchg
aas
jge
sub
arpl
and
jle
sbb
popf
test
sahf
outsl
sub
popa
jge
adc
out
testb
add
aaa
lds
dec
xchg
shlb
xchg
ficompl
movsb
loope
push
sahf
into
sub
clc
movsb
scas
sub
push
scas
loope
adcl
jbe
popf
pushf
loopne
cmp
mov
enter
lret
jnp
xchg
and
mov
int
inc
dec
dec
faddl
popf
mov
insb
shll
daa
cld
cmp
and
push
fstpt
addr16
or
ss
mulb
or
sbb
cltd
and
cmpsb
add
pusha
int
lret
int
mov
repz
pop
in
mov
loope
fists
cmp
sbb
sub
adcl
les
sub
and
aas
mov
les
js
sub
cltd
rclb
loopne
ficompl
fldl2t
lods
fisubrs
out
sub
scas
or
sub
xor
cli
test
fucom
fisttpll
popa
xor
pusha
or
repnz
aam
mov
fnstsw
mov
mov
shlb
movsb
adc
xor
test
inc
mov
mov
sarl
int3
gs
or
andb
lea
sub
aaa
jp
or
xchg
xor
test
int3
jo
fdivs
and
sbbb
jl
jne
mov
jbe
xchg
std
sbb
mov
test
mov
pushf
mov
stc
cmp
xchg
test
mov
fs
mov
les
mov
pop
je
aam
pop
cmpsb
inc
les
cld
loopne
aas
jp
cmp
mov
loop
dec
daa
adc
call
out
scas
cmp
frstor
movsb
mov
nop
cmpsl
shr
jg
shrl
pusha
sub
repnz
adc
mov
out
les
rorl
xlat
jp
decb
outsl
mov
psubd
mov
mov
xchg
jl
jns
fcomip
insl
mov
pop
push
sbb
repnz
jp
int3
jecxz
movsb
gs
imul
cmc
push
jecxz
jns
and
fstl
push
inc
insl
leave
mov
push
fidivrs
adc
mov
arpl
les
loope
mov
jle
pop
dec
popf
mov
mov
xor
mov
push
push
lock
jp
ficoml
add
testl
daa
pop
out
in
fcmovne
into
aas
std
bound
sahf
stos
sub
add
mov
or
insl
jecxz
or
cltd
subl
orb
ss
pop
das
and
leave
testl
in
add
jno
lods
xor
inc
sub
sub
xor
in
outsb
daa
jae
mov
outsb
mov
cmp
sub
div
ljmp
jne
dec
outsl
sbb
pushf
imul
or
jbe
jl
sub
adc
adcb
les
fmull
pushf
js
mov
pop
jae
jbe
aas
imul
or
dec
sub
testl
cmpsb
mov
mov
pop
add
iret
test
hlt
pop
sti
mov
push
insb
insb
pop
mov
pop
inc
sbb
push
out
in
mov
pop
pop
sbb
mov
repz
xor
sbb
imul
pop
xor
push
hlt
mov
out
jg
sarl
test
cmc
nop
mov
mov
popf
sbbb
divb
adc
minps
pop
xchg
sub
stos
daa
out
outsl
fmull
loop
enter
cltd
or
cltd
loope
shlb
sbb
xchg
add
hlt
push
insb
mov
subl
mov
outsl
sub
popf
lods
xchg
leave
fadds
and
movsb
or
pop
fildll
cwtl
xchg
mov
adc
sbb
push
daa
jo
xor
xchg
lods
sub
xor
push
dec
xchg
mov
cmp
cltd
add
mov
testb
dec
sti
adc
sub
jbe
stc
inc
lods
mov
xchg
fyl2x
mov
cmp
xchg
jb
in
enter
xor
lret
lahf
cmp
in
loop
sbb
outsb
xchg
int3
inc
mov
pop
dec
jbe
xor
aad
push
jmp
leave
mov
rcll
mov
aad
cwtl
xchg
sbb
add
push
cmc
jp
jno
sbb
sbb
pop
inc
jbe
sbb
mov
cwtl
jge
movsb
in
xor
repz
in
lea
out
push
inc
sti
in
andb
mov
fcoml
xchg
xor
nop
jb
mov
test
and
cmc
cmpl
or
adc
lret
xchg
aad
fidivrs
scas
incl
cmpsb
lret
dec
shrb
repnz
push
fidivrl
push
lods
sbb
sbb
mov
je
push
pusha
into
add
rclb
rcrb
lock
pop
movsl
repz
jge
sub
repnz
push
popa
sub
cs
or
fisubs
xor
loopne
mov
test
cwtl
cmp
inc
jmp
adc
sti
add
xlat
fsubrl
loopne
sbb
mov
popf
notb
and
popa
lcall
or
frstor
jb
gs
sti
jae
xchg
jmp
aas
dec
fs
jmp
xchg
xor
pushf
xchg
mov
les
lods
cmp
sahf
test
cli
iret
rorb
adc
sar
enter
mov
lcall
add
sub
lret
fnstcw
add
add
and
inc
out
cs
dec
cmp
lds
mov
jge
cmp
insl
jbe
fldt
xor
mov
fldt
and
mov
pop
aaa
mov
enter
push
mov
xor
andl
enter
stos
mov
movzwl
pop
push
jo
and
inc
cmp
imulb
xor
jne
lods
jmp
push
push
jb
pushf
sub
pop
mov
rol
dec
xor
pop
add
pop
pop
lret
jb
mov
data16
test
mov
inc
or
cs
xchg
insl
ffree
std
mov
lret
addl
lods
mov
xchg
mov
cld
pusha
fs
shl
push
pushf
movsb
xor
mov
icebp
popf
jle
mov
xor
daa
int3
add
idivl
sbb
push
jl
mov
popf
mov
pusha
out
lret
xor
shrl
cwtl
pop
test
jno
jb
mov
or
rcr
daa
les
loope
pop
jae
ror
xchg
dec
mov
inc
xchg
test
subl
mov
pop
sbb
jbe
mov
ret
inc
push
in
lret
mov
fnstsw
mov
mov
loopne
in
clc
mov
jnp
push
popa
shrb
icebp
inc
clc
pop
xchg
add
add
dec
xchg
das
jns
push
cli
mov
jb
repz
loop
pop
mov
pop
insl
jbe
pop
gs
loope
jne
xor
rorl
sarl
lret
sbb
jae
daa
cmpb
out
out
or
adc
mov
sub
pop
stos
test
imul
cmp
into
push
fucom
cmpsb
movsl
pop
jg
lret
dec
aaa
pushf
inc
fimuls
mov
fiaddl
sbb
int
jg
push
xor
add
lea
pop
mov
roll
mov
inc
test
xchg
push
cli
subl
test
out
cwtl
addl
push
cmp
mov
or
sbb
pop
aam
roll
or
lds
lock
xchg
cmp
push
mov
jmp
lods
and
jne
adc
test
jne
push
stos
inc
xor
cld
inc
xor
xchg
or
loop
xor
pop
push
lods
sbbl
lods
add
inc
jg
xor
mov
mov
or
inc
cmp
fnstenv
out
sub
add
int
arpl
mov
sahf
test
xchg
addl
push
lahf
xor
fldt
add
or
gs
fdivs
cmp
jnp
mov
mov
push
outsw
mov
xor
add
mov
push
mov
gs
orl
mov
dec
xchg
pop
shll
push
sar
jmp
pop
pop
movsb
or
mov
in
mov
mov
dec
ret
iret
mov
dec
and
push
bound
or
call
xlat
enter
add
push
mov
ja
in
dec
inc
mov
mov
xor
aam
xor
cmp
mov
xor
pop
cmp
push
ss
repz
mull
push
mov
data16
dec
test
add
xchg
add
pop
jbe
cli
xchg
sub
repz
mov
movsl
inc
xor
sti
aam
inc
aam
xchg
loopne
mov
loopne
js
fnsetpm(287
insl
mov
mov
pop
scas
daa
fstl
rcll
sub
gs
mov
push
js
mov
xlat
and
in
enter
jnp
push
mov
shr
cmp
loope
push
loopne,pn
cmp
out
out
sub
in
insb
or
mov
lcall
jno
rep
sbb
rdpmc
sbbb
jbe
dec
cs
arpl
std
mov
adc
dec
adc
bound
cld
repz
pop
sub
das
ret
gs
fdivrs
mov
jno
movsl
ja
mov
lahf
push
clc
dec
xlat
dec
aaa
testb
xchg
in
adcl
ja
cmc
rcr
cmp
out
mov
pusha
sub
pop
add
je
daa
cmpb
data16
gs
mov
mov
inc
jbe
jl
loopne
test
push
repnz
mov
mov
das
jl
in
mov
cmp
mov
imul
cmp
sar
lods
aaa
sbb
sub
popa
pusha
stos
jne
inc
pop
or
jne
sbb
mov
mov
mov
xorb
mov
call
jno
mov
movsb
pop
mov
insl
add
inc
clc
ds
mov
jb
push
pop
xor
das
mov
dec
enter
push
mov
cs
cmp
icebp
xchg
dec
repz
xor
mov
lcall
sbb
imul
hlt
mov
ss
xor
xlat
fstpt
out
dec
xor
jecxz
pop
sub
mov
mov
jecxz
in
rclb
dec
jmp
add
aad
fcoms
xchg
mov
xchg
cmp
aam
jns
or
jg
mov
xchg
clc
je
pop
push
or
xor
mov
pop
cmpsb
popf
lcall
lahf
jmp
scas
popf
cmp
cmp
lods
push
inc
cmp
aaa
xchg
dec
icebp
xchg
lret
out
xchg
jle
shll
fcoms
scas
push
test
adc
mov
jg
enter
add
mov
xchg
lods
dec
cmp
or
int
psrlw
jg
and
add
shlb
xchg
jl
mov
cmp
dec
sahf
loop
in
les
pop
jb
jnp
test
mov
mov
ljmp
mov
lods
add
mov
xchg
sub
mov
mov
push
pop
repz
outsb
xchg
mov
ss
popf
xchg
std
sbb
jp
js
and
fdivrp
cld
js
pop
scas
gs
nop
test
daa
and
sub
sbb
pop
pop
sbb
fmul
loope
sbb
mov
out
test
mov
pushf
sbbb
sub
movsb
aaa
jmp
xchg
jmp
add
add
int3
stos
daa
jle
adc
clc
sbb
dec
out
jb
dec
or
shlb
push
incb
xchg
dec
loope
in
je
mov
and
or
inc
cmpsl
xchg
nop
or
arpl
lea
test
popa
or
call
xchg
dec
fsubl
int3
ds
mov
cmp
daa
pushl
xchg
xorb
inc
or
pop
incb
pusha
xchg
int3
lcall
and
add
test
mov
mov
notl
andb
adc
iret
xchg
mov
ja
xor
clc
sbb
lahf
adc
insl
fidivs
sbb
xchg
add
mov
xor
aas
sbb
inc
jmp
out
in
push
xchg
add
das
mov
andb
ror
adc
xchg
lcall
ja
movsl
inc
repz
cmpsb
mov
mov
push
nop
mov
or
dec
mov
loope
pop
jae
loope
push
rcrb
out
mov
inc
bound
cmc
sarl
xor
add
shr
addb
outsb
ret
adc
and
lret
add
sbb
xor
mov
ret
pop
stc
mov
loop
adc
pop
leave
in
xlat
fistpl
mov
jle
mov
mov
and
pop
and
in
dec
ret
data16
mov
pop
test
mov
shlb
fs
mov
adc
jae
lcall
cmc
mov
cmpsb
fisttpll
xchg
xor
nop
and
bound
push
mov
pop
add
lahf
jg
adc
mov
dec
jecxz
lds
mov
in
xor
dec
sbb
imul
mov
xor
cmp
and
pop
mov
hlt
das
testb
and
jnp
inc
mov
sbb
sbb
push
xor
sub
cmp
pusha
lods
mov
or
and
lret
adc
clc
jp
inc
outsb
and
dec
mov
aad
outsb
scas
insb
inc
cmp
push
push
lcall
mov
js
and
popf
jp
inc
les
lds
addr16
mov
das
inc
xchg
stos
shlb
jae
aas
and
mov
into
xor
xor
mov
mov
push
adc
fwait
mov
rolb
loopne
xchg
leave
or
cli
adcb
imul
add
mov
cmp
adc
pop
insl
pushf
jp
shll
repz
push
xchg
xor
scas
xchg
std
ret
gs
push
subb
mov
lock
movsl
mov
jns
jl
test
gs
sub
iret
pop
push
xchg
jp
stc
test
and
pusha
sbb
add
arpl
mov
shrb
outsl
outsl
scas
cmpsb
out
cmp
xchg
mov
jp
jle
push
scas
ficoml
into
push
or
lods
fwait
cmp
pushf
xor
nop
push
aaa
inc
inc
int3
cmp
sti
andl
inc
mov
fcom
test
jmp
pop
pop
fwait
ljmp
inc
mov
add
jmp
mov
cmp
pop
enter
pop
call
sbb
xchg
mov
xchg
rcrb
lret
rcrb
mov
in
mov
sbbl
imul
pop
sub
shlb
call
fisttpll
out
xor
adc
lret
jne
fcoms
mov
inc
and
mov
mov
cltd
or
les
push
adc
hlt
push
or
arpl
sbb
cmpsl
bound
out
enter
fs
imul
pop
sahf
test
and
pop
scas
mov
loopne
add
clc
dec
add
fadds
lods
pushf
add
repnz
out
pop
mov
scas
cmpsb
or
sub
or
mov
pop
mov
or
ret
imul
popa
adc
daa
pushf
clc
sub
test
push
rcrb
cmpl
and
addl
ljmp
jge
leave
adc
jns
out
pop
notl
mov
adc
addr16
pop
es
outsb
inc
sarb
mov
clc
das
les
jb
sub
pop
gs
nop
adc
inc
push
push
sub
insb
mov
push
nop
dec
outsb
ds
lret
jmp
mov
insb
repz
sbb
jbe
lods
fiadds
in
jg
inc
stos
or
subb
or
sbb
push
dec
movsb
adc
filds
cmpsb
mov
into
sub
mov
xor
mov
xchg
orl
jo
hlt
dec
xchg
lods
cmp
loope
mov
lods
fmuls
addl
and
xor
or
mov
cwtl
orb
dec
pop
ss
hlt
sahf
int3
xchg
movsb
jp
es
adc
out
ss
adc
sbb
xchg
int
iret
xchg
movsb
repnz
pop
mov
push
mov
pop
sbb
test
and
lret
adc
push
fisubrs
std
addr16
shlb
pop
inc
push
jmp
or
popf
mov
out
sbb
jb
add
mov
add
lret
test
cltd
xchg
cmp
pop
lcall
popf
out
popf
ss
pop
dec
push
in
push
test
loop
cmp
inc
adc
data16
jae
jecxz
cmp
out
and
adc
dec
jl
mov
sbb
adc
mov
punpcklbw
sub
call
movsl
inc
js
imul
in
sub
into
pop
ss
fsubs
das
icebp
mov
mov
out
scas
dec
mov
sbb
cmp
dec
movsl
sarl
mov
jmp
push
stc
inc
mulb
bound
mov
or
xor
mov
scas
or
cmp
lret
mov
dec
sbb
pop
or
out
xor
pop
and
lret
shll
pop
and
cmpsb
lea
mov
sub
lcall
lahf
mov
sub
jo
add
ds
leave
xchg
xchg
shr
mov
mov
sbb
mov
insl
mov
sar
jmp
inc
test
xlat
jecxz
loopne
mov
push
add
jae
pop
mov
stos
out
cmp
scas
ljmp
sub
das
add
mov
jae
imul
imul
xchg
fs
or
movsb
js
dec
xorb
xchg
jno
sbb
stc
adc
in
data16
push
fwait
insb
sbb
inc
rep
add
add
mov
or
or
dec
dec
mov
outsb
push
inc
std
jns
stos
mov
cmp
push
pop
cli
bound
nop
nop
fs
in
add
cmpsl
mov
sub
cmp
les
pop
nop
sub
sbb
sbb
das
subb
xchg
mov
and
and
cmp
out
jmp
pop
bound
jge
dec
dec
cltd
fs
mov
jmp
shl
in
dec
outsl
pop
js
jbe
inc
adcl
test
cltd
dec
in
shll
xor
or
pushf
lods
sbb
test
xor
rorl
jp
in
shll
mov
mov
aad
addr16
jp
frstor
scas
out
mov
adc
cmpl
les
fs
andb
xchg
das
add
mov
hlt
ret
mov
pop
cmp
notl
jno
mov
mov
inc
and
adcb
popf
dec
or
sbb
mov
enter
and
push
outsl
add
inc
inc
inc
jg
out
std
lret
sbb
sar
fldenv
dec
lods
out
lret
dec
addr16
test
mov
dec
lds
mov
jg
mov
aas
pop
fsubrs
mov
mov
leave
in
ljmp
and
dec
arpl
xchg
dec
jecxz
push
push
pop
clc
sub
mov
mov
pop
jb
mov
idivl
inc
dec
push
adc
push
loopne
insb
xor
push
mov
push
push
shlb
push
imul
sahf
jb
rorb
pop
out
xbegin
call
adc
push
push
dec
jle
data16
clc
mov
mov
aaa
fwait
mov
outsb
xchg
or
mov
lds
data16
icebp
and
loop
std
inc
xor
fld
dec
iret
pop
int3
inc
jno
push
loope
sahf
repnz
add
icebp
or
push
imul
pop
and
popf
add
cltd
je
xor
into
aaa
hlt
popa
pop
and
cmp
andb
sbb
add
jnp
dec
loope
xlat
lea
xchg
mov
sbb
sub
data16
repz
xor
inc
in
jmp
dec
jl
pushf
and
inc
xchg
faddl
popa
or
test
popf
add
fisubl
xchg
adc
clc
js
sub
mov
xor
jbe
loop
jb
out
push
test
enter
mov
daa
mov
loope
cmp
fwait
sar
ret
shlb
inc
loope
push
into
xchg
push
loopne
mov
xchg
cmp
jae
aaa
mov
or
mov
adc
ja
mov
or
jmp
arpl
fidivs
jnp
hlt
fwait
inc
jmp
jp
out
std
int
lret
xor
in
xchg
fdivs
push
add
pop
fsubrl
jge
or
jo
push
sti
sub
dec
xor
lods
in
add
sub
cmc
hlt
popf
mov
into
mov
in
jle
inc
int
push
jl
xchg
inc
sub
xchg
and
out
fsubr
sub
aaa
xorb
dec
mov
or
add
mull
dec
sub
addb
js
iret
out
pop
jl
sub
rcrl
add
and
and
mov
mov
add
imul
mov
jno
mov
dec
daa
dec
imul
cmpsb
xchg
andl
sbb
adc
hlt
add
pushf
inc
std
mov
rcrb
icebp
imul
mov
aad
in
add
clc
and
rclb
pop
dec
fidivrl
mov
mov
gs
icebp
xchg
inc
test
test
and
addl
daa
out
jb
shr
xor
jno
push
add
mov
xchg
adc
jp
cmp
mov
adc
pop
dec
jnp
fildl
push
pop
push
xlat
mov
sub
jp
xchg
xchg
aam
mov
dec
jge
dec
test
jg
adc
dec
gs
jns
hlt
sub
adc
sub
mov
jbe
jle
ljmp
imul
cmp
jge
mov
stos
xor
out
sub
pop
xchg
jno
xor
lds
gs
aad
pop
repz
xor
dec
push
lock
inc
std
mov
push
xchg
lret
ret
jp
shr
cld
out
push
push
test
shrb
mov
popf
adc
xchg
imul
ficompl
lcall
inc
ds
xor
lret
pop
sbb
inc
or
fstpt
bound
push
mov
inc
roll
cld
inc
addr16
and
pop
mov
push
ss
mov
insl
cmp
lods
mov
dec
xor
or
pop
rclb
loope
repnz
push
aam
jns
gs
jecxz
pusha
fisubl
adc
cli
repz
fstpl
mov
xchg
repnz
push
fstpt
push
fldcw
cmp
cmpsl
inc
int
cmc
sti
lea
pop
jo
lods
adc
lret
ret
les
dec
inc
imul
mov
or
out
jp
lret
insb
fisttpl
dec
ss
pop
mov
ss
sbb
insl
cwtl
hlt
mov
jecxz
pop
dec
outsl
xorb
xlat
sub
cld
pop
push
fs
scas
and
sub
dec
xor
xor
leave
addr16
xchg
cld
mov
jmp
inc
in
ss
test
xchg
pop
jl
xor
mov
call
cmpsl
jle
add
repz
and
sub
idivb
test
mov
arpl
add
push
push
cmp
or
aas
pusha
and
popa
pop
mov
rcrb
fnclex
fildl
movsl
cwtl
in
dec
or
jle
sbb
sahf
das
fdivrp
or
jle
xchg
imul
testl
adc
into
sbb
loopne
pusha
adc
xchg
mov
popf
fs
add
sub
loopne
pop
mov
stos
or
mov
cmp
mov
inc
repz
pushf
outsl
push
hlt
and
insb
mov
stos
jo
or
cmp
stos
push
sti
pushf
pusha
loop
xchg
adc
pop
mov
dec
loop
and
cmc
add
fildl
repz
xor
iret
loopne
push
in
fldl
pop
aas
lock
rclb
sub
out
sbb
dec
adcl
pop
out
out
test
xchg
lods
ds
jge
icebp
push
adc
popa
jmp
test
cmpb
jno
xchg
pop
sub
clc
iret
fdivs
rcrl
scas
inc
pushf
xchg
es
pop
fmuls
dec
mov
aas
cwtl
loope
dec
or
loope
pop
sbb
pusha
sbb
pop
outsl
rorl
cmp
and
fnstcw
ret
mov
mov
fcomp
scas
arpl
cmp
incb
mov
pop
fcmovnbe
add
jg
int3
cmp
push
pop
ljmp
dec
cs
inc
test
popa
gs
les
clc
cltd
dec
inc
lea
sub
insb
inc
or
push
fidivl
push
rorb
inc
push
lods
push
cli
es
fadd
outsb
arpl
xlat
inc
in
sbb
dec
cmc
fucomi
pop
sub
pop
repnz
rcrl
push
jl
pop
enter
arpl
in
xchg
jo
mov
mov
lahf
fcoml
jns
xchg
add
aaa
xor
fldcw
or
imul
lods
fs
jecxz
popa
xor
jae
fistpl
push
sbb
sarl
les
fisubl
sbb
idiv
bound
in
xchg
push
inc
inc
or
inc
jo
mov
addr16
popa
test
aaa
movsl
dec
sub
or
inc
dec
fdivs
push
rcrb
cltd
adc
test
xor
fwait
xchg
lock
fisttpl
and
lahf
cmp
fsubrl
das
ret
int
dec
insb
inc
idivb
test
leave
leave
out
or
fwait
mov
jbe
and
dec
shl
loop
jmp
xchg
pop
mov
jne
xor
mov
push
push
mov
dec
pop
mov
or
mov
xchg
sub
fidivs
jb
cltd
and
jns
lcall
xor
ljmp
jnp
push
lods
jmp
cmpsb
mov
pop
xor
int
cli
inc
scas
roll
add
push
pop
pop
cmpl
dec
cmpsl
mov
mov
and
xor
add
sub
imul
out
inc
pushf
add
dec
stc
lea
mov
pop
js
test
fdivr
mov
pop
hlt
fmull
lods
jns
inc
out
mov
lahf
push
mov
loopne
inc
xor
testb
divl
fsubrs
movsb
popl
movsl
add
pop
or
xchg
sbb
loopne
jle
repnz
add
lahf
mov
push
pop
sub
cmpsl
test
lods
inc
hlt
iret
jp
cmpsl
mov
js
pop
or
push
mov
std
lahf
lock
jne
icebp
pop
xchg
xchg
sub
xor
pop
push
js
movsb
pop
addr16
bound
lahf
push
sbb
cmp
xchg
adc
cmp
push
jge
loopne
adc
fcomps
adc
push
mov
sbb
xlat
or
inc
in
adc
int3
in
pop
sbb
mov
xlat
or
movsl
jge
xchg
mov
lods
daa
mov
push
sbb
test
cwtl
aam
lods
aam
sbb
sbb
adc
push
lahf
sbb
pusha
stos
lods
push
xor
fstpt
mov
mov
cmp
pop
jmp
nop
test
loope
mov
pop
test
xchg
push
cld
fisubrl
lock
add
push
js
out
jge
repz
loopne
and
push
dec
mov
test
cwtl
xor
xorb
and
sbb
scas
lcall
jg
movsb
icebp
roll
out
xchg
out
add
test
and
jecxz
ja
mov
pop
sub
push
in
mov
rcrl
fstl
insb
pop
mov
or
pop
outsl
gs
std
out
xchg
and
jb
adc
dec
std
dec
rorl
and
cmc
icebp
xorb
test
sub
enter
outsb
pop
adc
dec
out
ja
repz
xor
movsl
and
es
mov
test
inc
and
adc
rolb
push
outsb
add
push
push
mov
aam
adc
ljmp
lahf
dec
shll
test
les
jmp
adc
mov
push
and
xchg
fdivl
out
lahf
jle
push
outsl
dec
dec
cmp
outsl
sbb
add
sub
cwtl
dec
cmp
cld
rcll
sub
in
lret
mov
push
mov
call
mov
push
inc
push
mov
push
pushf
pop
dec
cmc
mov
and
pop
test
sub
sub
pop
mov
movsb
pop
mov
mov
test
ljmp
imul
gs
ret
pop
or
jle
scas
push
sub
xor
jge
jo
and
icebp
enter
roll
mov
cli
lea
pop
nop
gs
and
mov
sbb
sar
mov
jl
lods
sbbb
scas
push
push
dec
adc
inc
loopne
dec
in
sbb
xlat
jge
shlb
lcall
mov
xor
cmp
sub
lahf
ds
out
loope
ret
jb
pop
cmpsl
imul
loopne
add
test
nop
jne
cli
mov
lock
in
jmp
jae
inc
or
jbe
cmp
mov
add
cmpsb
imul
cmp
mov
lock
inc
loope
dec
push
inc
inc
jge
or
into
test
addr16
out
mov
shlb
mov
scas
divl
adc
dec
daa
stos
pop
loopne
dec
loopne
jg
mov
adc
testl
loop
popf
pop
xchg
dec
dec
das
lods
hlt
out
repnz
movsl
mov
pusha
stc
sub
sub
or
les
sbb
sti
cmpsb
cmp
aaa
pop
rcrl
in
rol
xchg
pmullw
dec
mov
aad
aas
lock
sbb
stc
mov
sbb
xor
xchg
jb
enter
xorb
scas
popf
adc
adc
mov
mov
push
sbb
dec
mov
cld
mov
xor
inc
cmc
fucomip
cltd
or
adc
mov
in
sbb
jo
int
sub
lods
push
mov
fsubrl
cld
push
mov
outsl
dec
loope
stc
sti
lods
andb
dec
xchg
imul
iret
mov
mov
mov
xor
jno
or
xor
js
in
rorl
xor
popf
mov
jb
and
dec
enter
mov
mov
popf
jb
mov
sahf
mov
out
dec
aad
jl
sti
inc
jnp
mov
mov
mov
pusha
subl
xor
xlat
xor
dec
repz
jp
inc
jle
dec
mov
xor
mov
pop
loope
and
xor
fdivs
inc
push
cmpsl
add
sub
inc
inc
sbb
rep
xchg
test
in
mov
xchg
sub
mov
xchg
or
cmpsl
sbb
jmp
jnp
cmc
std
jno
cmp
into
aad
mov
leave
ss
mov
sbbb
lods
out
adc
mov
fsubs
xchg
xchg
xlat
jp
jns
adc
out
insl
and
sbb
mov
int
adc
cmp
stos
adc
repnz
fidivs
int3
vpunpckhdq
xchg
xchg
popf
or
aas
fwait
ret
push
add
lods
mov
es
jno
sub
fadd
mov
ret
clc
adc
ja
add
fisubs
addb
push
fcmovnu
jecxz
xor
iret
in
pusha
lea
and
sbb
popa
inc
dec
cmpsl
xchg
adc
adc
repz
test
push
rcl
jae
adc
rorl
push
dec
xor
or
xchg
ljmp
mov
gs
mov
stos
cmpsl
sbbl
jmp
fistpll
test
dec
ret
pop
int
sarl
aaa
push
push
sub
mov
cli
jp
mov
popa
sbb
pop
xchg
dec
sarb
adc
add
imul
xor
xchg
in
cmp
adcb
mov
ret
pop
push
ret
lods
push
sub
push
fisubrs
mov
xchg
shlb
jo
jae
cltd
xchg
mov
in
xor
ja
xor
pop
cmp
adc
and
sub
dec
sbb
and
adc
popf
inc
rclb
push
test
cmpsb
push
leave
in
xor
cmp
lcall
or
icebp
inc
xchg
fld
adc
jl
jmp
mov
push
mov
xor
xchg
not
inc
and
insb
pop
push
stos
in
sub
jo
and
add
push
fisubs
test
leave
cmp
scas
stos
bound
pushf
out
jbe
mov
sbb
sub
add
add
xchg
addr16
sub
xchg
lds
into
outsb
imul
mov
sarl
or
jp
fidivl
inc
dec
cmp
add
sub
out
int
mov
jbe
andb
lahf
scas
jne
mov
mov
adc
add
dec
pop
adc
or
fst
cmpsl
mov
repnz
fchs
mov
jmp
int3
movsl
push
imul
dec
scas
lahf
fwait
jecxz
scas
or
push
les
addr16
adc
or
jle
inc
ds
imul
sbb
jnp
outsb
dec
stc
or
xor
test
and
sub
js
jmp
loope
dec
add
add
mov
adc
jle
aas
rcrb
jle
in
int
mov
inc
lock
rolb
push
xor
dec
and
inc
add
mov
adcl
das
push
cmp
pop
out
in
outsl
iret
movsb
xchg
imulb
lods
outsb
pop
dec
movsb
jnp
jne
rorl
sbb
jo
sbb
jbe
push
out
fildl
dec
not
sbbl
mov
popa
ja
dec
push
cmp
xor
imul
loop
data16
xchg
xchg
scas
and
repz
orl
outsb
xchg
sbb
inc
cmp
insl
pop
mov
lock
mov
outsb
cmp
notl
sti
out
sub
sbb
sub
dec
or
dec
push
xorb
mov
add
mov
jo
int3
inc
fidivl
xor
cwtl
xchg
mov
clc
jge
mov
cs
jge
shlb
dec
pop
cmp
xorb
lret
andb
jno
sar
leave
outsl
fwait
test
mov
mov
push
ss
sar
roll
jbe
mov
add
sbb
lahf
add
mov
ss
mov
jne
stos
sbb
imul
push
jmp
call
lret
cmp
or
mov
dec
fucomi
mov
hlt
imul
cmc
pop
ljmp
ror
xchg
mov
push
jl
or
std
fnop
mov
mov
out
nop
loopne
call
mov
lahf
ljmpw
cmp
clc
xor
insl
mov
lret
stos
adc
mov
cmp
dec
insl
fisubrs
mov
mov
mov
test
mov
out
frstor
jbe
sarb
cltd
mov
cs
stc
outsl
mov
jg
in
sbb
and
lahf
ficompl
dec
add
hlt
or
push
push
bound
fists
jp
lret
cltd
lds
in
aad
inc
and
jl
cmp
js
lret
or
xor
jle
mov
mov
or
xor
cmp
jb
fstps
dec
fs
inc
inc
aam
imul
xor
sub
data16
sbb
sub
mov
inc
das
sub
sbb
in
or
jno
jne
sub
mull
aaa
clc
jp
push
stc
lret
shll
mov
out
jge
or
mov
pop
fisubs
es
push
or
out
sar
pop
popf
add
lea
mov
adc
jo
in
inc
inc
imul
mov
mov
cmp
test
popa
add
nop
dec
and
mov
fldl
sub
addr16
pop
ret
stos
push
mov
adc
sarb
scas
sbb
out
fistl
repnz
mov
jge
sbb
xlat
cwtl
in
pop
cmp
and
lahf
xor
pop
fmuls
or
jecxz
aaa
icebp
sbb
mov
mov
ds
adc
repz
xor
jbe
mov
in
adc
adc
add
lock
and
push
movsl
ficomps
cmpsl
aad
push
out
mov
jo
pop
ja
sbb
push
add
jnp
in
es
repz
call
sub
adc
enter
loopne
test
movl
adc
cltd
sub
das
out
mov
sub
push
pop
rclb
xchg
jns
and
dec
adc
lea
lahf
fistpll
sub
cmpsl
pop
or
bound
movl
das
sub
rolb
or
jo
push
fimull
addr16
hlt
mov
lret
inc
mulb
jbe
mov
and
lret
std
js
dec
lods
mov
fnstenv
ret
fs
mov
dec
les
jge
and
jmp
scas
push
lods
mov
aad
cmc
mov
sub
jno
or
dec
pop
mov
into
cmpb
imul
inc
dec
aam
xchg
pop
mov
mov
add
sbb
push
int
mov
mov
test
xchg
sbb
sbb
aam
hlt
and
add
lock
mov
or
jbe
add
ljmp
push
cmp
scas
mov
daa
lahf
xlat
add
xor
flds
outsl
jge
add
lods
subl
pop
push
mov
mov
ljmp
flds
daa
outsb
mov
mov
das
into
and
xor
push
or
or
scas
jno
and
or
adc
out
xchg
les
adc
xchg
fldcw
or
inc
xor
pop
daa
cmp
jl
nop
into
int
int3
xor
push
add
mov
jae
mov
into
loope
cmp
jbe
lret
mov
insb
stc
cmpsb
dec
mov
aad
in
push
pop
push
nop
add
cmpsl
push
lret
add
mov
daa
xor
inc
in
ljmp
add
int
adc
xor
jo,pt
je
dec
movsb
lret
xchg
cmp
lret
into
hlt
ficoml
xchg
pop
mov
pop
pop
in
shlb
rcrl
pop
bswap
ss
in
inc
imul
test
jle
sbb
pop
insb
mov
icebp
add
xlat
in
scas
push
and
lea
inc
gs
cmpsb
cmp
ret
aaa
adc
lock
mov
mov
fwait
pusha
add
jb
int3
sar
movsb
adc
mov
jb
adc
mov
dec
test
fists
add
je
negl
insl
inc
jnp
sbb
mov
nop
xchg
fisubrs
mov
jp
xor
je
push
lods
adc
push
test
mov
xor
addr16
adc
dec
sar
lods
or
shl
loope
cmp
arpl
insb
dec
mov
fsubrl
fnstsw
loop
fbld
pop
test
inc
mov
inc
xchg
mov
sahf
cmp
pop
loope
add
call
ss
fcmovb
in
sbb
dec
gs
bsr
sub
mov
outsl
mov
mov
xor
pop
adc
mov
dec
rcrb
mov
lcall
jecxz
xlat
or
mov
xchg
rorl
lahf
data16
adc
dec
push
jae
sti
int
cmc
cmp
push
nop
icebp
lret
mov
imulb
fidivrs
pop
inc
mov
or
fildl
cmp
das
loopne
or
imul
xchg
test
pop
xchg
mov
push
test
pop
pop
stos
in
or
cwtl
shl
addr16
pushf
dec
mov
adc
fs
fwait
jne
cmp
cmp
xchg
or
mov
xchg
int3
pusha
push
lea
ret
xchg
gs
and
sub
jns
push
mov
pop
scas
mov
fisttps
dec
lcall
movsl
mov
mov
aad
repz
clc
dec
imul
gs
or
cmp
push
movsb
jle
cmp
sub
aad
js
lock
das
pop
or
lock
cmp
mov
imulb
sbb
aam
fdivrl
push
test
dec
push
hlt
cwtl
iret
sbb
scas
xchg
ds
insb
ret
loop
mov
adc
inc
lock
and
xchg
pop
popa
stc
les
mov
ljmp
rcl
fcmovu
mov
mov
sub
inc
ficoml
or
jle
ss
repz
bound
scas
dec
mov
mov
aaa
es
push
addb
or
pop
data16
push
and
enter
pop
test
jbe
mov
adc
mov
adc
paddsw
adc
test
jbe
adc
pop
pop
orb
mov
aaa
push
and
inc
xor
xor
sbb
xchg
sahf
movl
mov
fwait
pop
add
dec
adc
inc
in
lds
cmpsl
fsts
pop
jo
lock
jecxz
pushf
fwait
cli
ja
adc
js
test
gs
push
stc
jbe
test
in
cmp
sub
ds
inc
outsl
stos
xor
out
mov
test
push
dec
sbb
cmpsb
aaa
daa
xor
pop
insb
fbld
jl
das
ret
int3
xchg
rorb
mov
cmp
fsubs
cmp
mov
mov
stos
sub
push
pand
mov
or
in
mov
lods
pop
int
in
mov
jge
add
xchg
rclb
aas
loop
cmpsl
inc
or
pop
enter
mov
sub
mov
lods
mov
jecxz
adc
ja
leave
jle
fcompl
mov
push
adc
and
bound
xor
sar
lret
jmp
jmp
and
cld
es
sub
and
xchg
fdivl
pushf
fs
lret
jbe
insl
mov
ffree
xchg
push
lahf
notb
mov
push
int3
call
xor
xchg
jo
add
sub
lret
dec
sub
or
xchg
mov
adc
xchg
ljmp
cmc
xor
lahf
xor
pop
mov
mov
cli
xlat
inc
lret
fisttpll
adc
cmp
dec
ljmp
or
cltd
sbb
pop
inc
movsb
bound
aas
aaa
adc
adc
and
push
mov
fstps
push
jnp
push
jge
cltd
mov
sahf
pop
mov
push
sbb
loopne
stos
out
xchg
cmp
add
loop
push
add
rcl
jmp
inc
jle
lods
cltd
mov
push
jp
bound
bound
shrl
mov
test
stos
mov
sub
pop
or
push
shlb
pop
xchg
inc
mov
leave
pop
jb
cmpsb
xchg
inc
and
jae
and
mov
ljmp
std
imul
mov
clc
jl
stc
out
out
je
shlb
push
movsl
lcall
sbb
inc
leave
add
dec
pop
push
mov
mov
push
xlat
jae
sub
cld
addr16
loopne
sbb
arpl
sbb
push
in
jnp
xchg
jmp
mov
inc
and
jecxz
cmpsb
or
fnsave
test
or
push
imul
out
adc
into
or
in
mov
xchg
push
or
in
popa
arpl
mov
add
dec
pop
adc
cmpsb
pop
mov
fs
into
pop
jmp
inc
jne
xchg
push
or
pop
lods
cmp
xor
xor
sub
pop
xchg
xchg
lock
cmp
hlt
std
cmp
test
dec
test
mov
scas
and
inc
mov
push
pusha
xlat
adc
sub
and
insl
or
cmp
mov
xorb
pop
pop
andl
loopne
aaa
pop
inc
jle
xor
mov
into
int
cmp
push
rclb
icebp
dec
shll
mov
aas
icebp
and
int3
push
jmp
or
cmp
jb
imul
mov
cmpsl
or
cmp
aad
jne
arpl
ss
push
in
jmp
shll
dec
outsl
xor
sbb
mov
jbe
mov
jge
and
jo
jmp
xchg
test
cmp
jl
cmp
mov
loope
push
jle
sarb
jmp
lea
testb
mov
cs
cwtl
stc
outsb
mov
jge
sbb
mov
xchg
stc
fisubrs
dec
and
jecxz
int3
pop
call
cwtl
rcll
sub
push
jmp
add
and
stos
gs
scas
outsl
leave
xchg
push
daa
repz
xchg
xchg
aas
je
loope
and
xchg
scas
rolb
dec
xor
movsl
in
xchg
in
mov
cmp
and
loopne
push
adc
lret
mov
or
sub
mov
fimull
lret
pop
xlat
insb
hlt
jecxz
imul
jmp
sub
push
mov
mov
decl
lods
minps
fisubs
sbb
enter
adc
int3
cmpsb
rcr
ss
lods
inc
jns
push
cmc
cmc
int3
xchg
mov
adc
mov
sub
cli
aam
repnz
push
fldl
call
fs
aad
stos
xchg
aad
stos
mov
cmp
cltd
rcr
push
rolb
and
int3
outsb
cmpsb
and
jmp
mov
jno
or
andb
pop
lds
addr16
movsb
stc
mov
in
imul
repnz
lahf
xchg
mov
lods
pop
pusha
cmpsl
dec
sbb
lahf
xor
push
push
fnstenv
sbbl
test
xchg
nop
jne
fstps
lock
test
and
and
lds
adc
lds
testl
out
xor
arpl
mov
add
divl
push
add
inc
pushf
movsl
add
pop
dec
adc
push
jecxz
dec
mov
inc
cmpsl
cmp
pusha
mov
pushf
push
xchg
mov
shrb
mov
cld
lret
testl
jns
fsubl
fcoml
addl
pop
and
xor
dec
aam
int
and
popf
pop
ljmp
repnz
or
mov
test
stos
ljmp
dec
xchg
mov
dec
jnp
into
sahf
pop
lods
jbe
jle
fmuls
and
jne
xchg
mov
jo
and
cltd
inc
jl
clc
cmp
jmp
jl
sub
orl
mov
stos
test
and
pusha
mov
add
mov
pop
ret
stos
ljmp
sub
lock
repz
ljmp
adc
sahf
mov
rorl
dec
mov
pop
adc
adc
jg
add
rcrb
fdivrl
inc
adc
lods
arpl
jp
inc
push
jp
das
jo
jecxz
and
adc
add
or
push
loope
popf
fisubrl
ss
xor
pop
cltd
mov
xchg
js
andb
inc
js
in
add
push
test
fwait
xchg
fldcw
lret
adc
jnp
shrb
imul
cmp
mov
add
add
cmp
mov
les
sub
test
out
jbe
push
xchg
xor
enter
inc
push
leave
fucomi
ja
xor
loopne
cltd
mov
push
push
adc
sti
in
mov
mov
leave
cmp
mov
inc
adc
xchg
inc
repnz
or
xchg
mov
or
jmp
mov
xor
out
or
daa
sbb
in
sub
cwtl
add
mov
sub
push
insb
fisubrl
or
sbb
xor
rcrb
pop
iret
sbb
bound
outsl
loop
addr16
pop
adc
rol
lock
loope
ret
mov
cmp
jno
push
fucom
ss
pop
aad
push
inc
leave
mov
std
insl
jo
xchg
repz
push
xchg
mov
lret
xchg
pop
les
aad
jmp
fwait
aas
add
fisttpll
adc
sbb
pop
sub
ja
adcb
insb
insb
jg
cld
mov
mov
loop
mov
lret
fmull
scas
mov
aam
or
enter
push
and
addr16
in
mov
lret
in
mov
lret
or
mov
mov
test
push
push
cmp
sub
jp
lods
subb
jno
andb
es
aaa
mov
push
iret
mov
test
in
adc
push
fwait
test
popl
aam
inc
mov
pop
int
jmp
stos
add
xor
and
pop
jo
test
pushf
lock
jns
les
pop
daa
xor
jno
pcmpeqw
sub
jg
adc
xchg
xchg
in
dec
enter
jne
add
or
and
sub
push
ljmp
mov
fwait
scas
xor
xorl
or
imul
adc
arpl
int
jns
lock
pop
xlat
mov
je
mov
adc
out
pop
call
mov
lea
jnp
mov
pop
aad
out
lahf
adc
xchg
xchg
jle
out
jno
lcall
mov
js
xchg
subl
outsb
push
inc
ret
mov
cli
pop
gs
mov
add
pop
clc
pushf
mov
fcomp
stc
xor
aam
sbb
push
jb
push
enter
pop
shlb
pop
jnp
jns
lahf
add
jg
pop
movsl
fwait
xchg
xchg
jns
stc
or
filds
add
mov
inc
pop
popa
and
std
pop
mov
and
das
push
and
aaa
jmp
repnz
scas
out
add
lret
fldenv
jae
iret
repz
add
or
lea
popf
negl
or
jb
or
scas
dec
dec
pop
push
data16
cmpl
cmp
jl
push
push
push
imul
or
mov
sub
jl
cmpb
jmp
or
fnstenv
dec
mov
mov
movsb
jmp
push
je
or
lahf
lock
and
scas
rorb
iret
or
fucom
and
cli
jnp
mov
pop
push
mov
loop
mov
jo
shll
fsubr
repnz
and
repnz
mov
cmp
test
dec
cmp
cmpsl
loope
mov
movsl
and
xorl
pop
mov
ret
scas
and
add
sbbl
mov
rcr
jns
in
jae
into
or
lods
sbb
nop
aas
xor
and
push
into
pop
push
dec
push
mov
cld
fistpll
cmp
push
sbb
inc
mov
or
or
pop
sub
jne
rcl
icebp
mov
cmpsb
push
popa
out
call
xchg
int
mov
scas
cmp
sarb
add
jo
xor
pop
sbb
or
cmp
cmpsl
lods
cmp
sti
jle
dec
shll
xchg
fildll
cmp
jae
leave
and
push
or
ret
leave
out
mov
popa
sub
insl
mov
mov
cmpsb
stos
out
mov
mov
dec
sub
fs
call
hlt
inc
ret
sbb
out
insl
mov
enter
cmpsb
adcl
fimull
nop
push
push
fcmovne
imul
cmp
clc
sahf
inc
popf
sahf
sbb
xchg
mov
xorl
fs
pop
cmpb
nop
mov
out
jecxz
aam
ja
clc
scas
lods
les
lods
fldenv
stos
test
and
sub
outsl
in
cmp
xlat
imul
call
stc
popf
jle
loope
and
cmc
cmp
inc
sbb
out
mov
pop
sbb
test
adc
and
ja
int3
cmc
test
adc
and
scas
adc
movsb
call
adc
mov
daa
hlt
xchg
shlb
addr16
aam
add
mov
mov
hlt
cmp
aad
xchg
iret
add
jle
in
cmpb
push
int
lds
loopne
jo
mov
pusha
lds
mov
jp
mov
or
nop
cli
xor
mov
add
xor
xchg
jns
dec
jge
aam
push
jno
icebp
movsb
fidivrl
mov
sub
faddl
mov
ss
pop
stos
pop
sub
sbb
adc
iret
dec
add
jno
data16
pop
jb
push
lods
ds
popa
int
mov
inc
in
xchg
inc
sbb
jp
jne
jno
mov
xchg
mov
push
inc
push
in
mov
rcr
dec
mov
sub
mov
mov
outsb
lret
mov
inc
in
jae
adc
jle
cmpsl
ljmp
dec
mov
push
xchg
mov
jno
inc
cmpb
loope
and
lahf
mov
std
outsl
ljmp
jp
xor
andl
dec
xchg
adc
lods
mov
fstpl
dec
stos
mov
sar
pop
cld
add
push
jo
js
inc
dec
xchg
ficomps
divb
add
jmp
jns
mov
inc
pop
test
hlt
mov
inc
shl
sbb
imul
repnz
out
jle
lret
cs
icebp
stos
scas
dec
inc
incb
push
dec
fimuls
and
inc
jl
cmp
pop
cmpsl
movsb
dec
lods
aam
push
mov
mov
cwtl
sub
in
data16
int3
testb
jmp
xor
int3
mov
pop
push
add
int3
add
pop
or
add
adc
ds
pop
cmp
mov
in
push
aas
in
lock
mov
frndint
mov
mov
xchg
std
lea
das
mov
jl
dec
cltd
jle
pop
int
cs
dec
cmc
cmp
xchg
mov
in
sahf
ficoms
outsl
add
movsb
sbb
int
sbb
adc
shlb
bnd
shll
icebp
mov
pop
fs
nop
sbb
movsb
inc
adc
sub
nop
out
and
lods
xor
notb
addl
cmp
jge
fstpl
push
cmp
es
test
inc
cmp
and
scas
int
pop
jo
outsl
hlt
sbb
lods
clc
jl
xor
and
aam
filds
mov
xchg
sahf
in
pop
sbb
lcall
mov
dec
es
aad
mov
movsl
sub
push
dec
xchg
add
orl
ds
push
icebp
cmp
xor
fists
test
int3
and
into
out
jl,pn
insl
pop
fcmovne
xchg
outsb
mov
dec
test
ds
rep
repnz
pcmpgtd
sub
aad
jle
orb
addr16
jne
xchg
push
xchg
cwtl
out
dec
jb
xor
scas
jecxz
jno
or
mov
pop
inc
add
out
pop
mov
xchg
shll
or
cwtl
aad
and
ds
dec
cltd
pop
and
xlat
cltd
pop
push
fs
popf
inc
inc
mov
sbb
movlps
mov
sbb
push
je
loope
push
jg
dec
dec
mov
jne
push
mov
cmp
repnz
mov
fs
sahf
mov
cmpl
mov
sub
call
pop
jne
rcrl
lahf
imul
clc
fstl
call
fisubrs
mov
cmp
jno
ss
jl
gs
inc
es
dec
and
mov
std
dec
dec
outsl
mov
cmp
cmp
jne
addr16
push
inc
sbb
aam
lds
jl
mov
jg
add
nop
out
out
ret
in
popf
int
jb
push
popa
je
stos
mov
xor
xchg
pop
push
jle
push
mov
cmp
cmp
fildl
push
sub
adc
mov
jnp
mov
mov
rorl
xor
dec
arpl
xchg
mov
jnp
pusha
and
pusha
loopne
xor
mov
iret
arpl
popa
cmp
pop
push
repnz
into
cmp
insb
nop
sbb
icebp
stos
loopne
aad
mov
stc
fiaddl
pop
ja
pop
mov
out
imul
cmp
xor
sub
ss
mov
push
pushf
dec
pop
testb
inc
mov
imul
negb
and
sti
pushf
aad
popf
cs
fstps
repz
loop
mov
inc
idiv
repnz
les
lahf
xchg
shll
mov
cmpb
test
mov
lcall
mov
mov
pop
xorb
mov
xchg
scas
mov
and
fdiv
and
mov
insl
pop
iret
xchg
and
xchg
inc
mov
insl
jbe
cli
ror
jbe
pop
test
sbb
lahf
mov
jne
dec
arpl
xlat
dec
daa
dec
out
pop
in
cmp
data16
inc
dec
cld
in
push
and
push
and
push
xchg
sub
cmp
int
mov
imul
xorl
mov
add
lods
lods
in
in
stos
jns
mov
push
xor
sub
jae
daa
xlat
dec
incl
jge
dec
dec
in
das
pop
pop
gs
push
cmpsb
mov
mov
jmp
pop
das
inc
cmp
je
push
insl
mov
lret
idivb
mov
ja
mov
push
enter
jle
gs
loopne
mov
lret
mov
jnp
dec
dec
call
fldenv
xor
cld
clc
nop
ret
ja
xchg
adc
adc
xchg
cmp
std
sbb
test
das
int3
or
std
jle
sub
mov
cmpsb
imul
ds
nop
aaa
xor
fistl
push
stos
std
fisubrl
mov
jp
mov
push
mov
mov
mov
dec
xchg
negl
pop
fs
mov
nop
add
push
nop
sub
scas
mov
sbb
std
pop
add
mov
dec
iret
popf
jnp
rorl
test
pop
sbb
insl
jg
mov
scas
mov
or
jno
jo
aaa
insb
enter
lock
imul
insl
icebp
mov
xor
pop
lods
test
jecxz
lcallw
into
clc
popf
push
inc
adc
add
sbb
pop
aad
cwtl
imul
push
xchg
mov
dec
cld
in
cli
js
push
pop
push
and
jmp
pop
shrb
cmp
sahf
stos
pop
xchg
mov
les
js
xchg
stc
dec
cwtl
cmp
repnz
cmpl
jmp
push
cmp
pusha
inc
jmp
rol
push
ret
or
mov
push
pop
inc
push
mov
dec
xchg
out
rcr
add
cltd
xchg
lret
ljmp
mov
adc
arpl
into
dec
mov
cwtl
addl
ja
jge
int3
cli
mov
inc
lods
sbb
cmc
push
lds
adc
test
ljmp
jp
xorl
pop
mov
xchg
shlb
enter
jecxz
mov
dec
in
rorl
dec
sub
addr16
les
sub
lods
adc
out
ffreep
mov
andb
sub
inc
imul
out
lea
je
or
test
mov
xor
xchg
insb
std
add
jp
nop
push
aaa
xchg
mov
xchg
jno
rcrl
xor
sub
icebp
addr16
lock
loope
pop
adcb
in
adc
in
sbb
scas
lds
adc
dec
adc
insl
mov
popl
sbb
subb
pusha
fucom
push
sub
out
xor
sbb
cs
adc
mov
xorl
mov
push
test
icebp
lret
pop
jnp
cmp
xor
lcall
loope
sahf
pop
pop
mov
mov
in
push
in
or
jb
inc
test
shll
add
fmull
insl
mov
lock
pop
fnstsw
add
pop
dec
mov
mov
pushf
add
add
popf
ret
push
mov
testl
cmp
adc
inc
mov
and
es
movsb
adc
push
xchg
lahf
jae
or
clc
pop
addr16
inc
mov
mov
into
lea
enter
mov
ret
sahf
mov
push
mov
pop
pop
mov
jbe
fisubs
add
mov
xor
xchg
pop
sbb
repz
xchg
ficompl
jmp
mov
add
dec
cwtl
push
dec
add
cmp
adc
sahf
cmp
adc
sub
and
sub
out
adc
add
inc
mov
xchg
mov
jecxz
adc
add
pop
add
add
or
sub
mov
xor
mov
lcall
lods
dec
cmc
mov
and
sbb
jne
xlat
fs
imul
or
stos
std
sbb
xchg
push
inc
add
fucomi
cmp
cmp
and
data16
cmp
stc
movsb
inc
test
inc
stos
push
in
xor
inc
vpxor
push
cmp
xchg
arpl
mov
pusha
insl
add
cld
shlb
dec
xor
aaa
fimuls
add
add
xor
sub
test
fcoms
dec
adc
and
inc
iret
push
and
mov
ljmp
dec
inc
sbb
insb
dec
lock
inc
push
mov
hlt
adc
adc
sbb
adc
add
data16
not
adc
mov
xor
popa
cld
inc
idivl
pop
or
inc
jle
pop
add
pop
cmp
jb
or
test
mov
and
cmpsb
adc
clc
jne
push
xchg
jg
out
in
sub
ficoms
xor
jae
xchg
push
push
adc
jle
test
test
push
push
iret
mov
pop
shlb
cmp
sbb
sbb
push
aaa
movsl
or
pushf
or
test
mov
int
loopne
rol
xchg
and
mov
cmp
stos
cmp
dec
pusha
xchg
sub
cld
jns
popa
in
stc
stc
cmpsb
dec
cltd
jmp
cmp
into
das
push
push
mull
outsb
sbb
ret
std
daa
pusha
lret
pop
mov
push
jno
sub
xchg
and
and
jns
xchg
mov
movsb
fs
or
adc
jne
lret
repnz
aas
aam
cmp
test
fistps
movsl
outsb
or
or
mov
adc
aam
pop
adc
aad
lahf
outsl
cli
outsb
push
lods
icebp
test
adc
mov
int
int
xlat
lcall
add
aam
std
fwait
cmp
rolb
ret
cs
inc
inc
add
xchg
adc
mov
push
mov
and
ja
xchg
lahf
es
lea
int3
adc
jno
xchg
lret
mov
xor
xchg
xchg
test
adc
add
xor
lret
notl
or
repnz
sahf
imul
mov
scas
fwait
cli
jb
mov
in
adc
test
das
or
stos
sub
rcrl
jne
popa
loop
inc
jg
adc
lods
mulb
fcmove
cmpb
into
xchg
js
notb
mov
xchg
mov
add
nop
adc
and
or
leave
loopne
jnp
cs
jae
push
mov
jnp
jge
shlb
sti
cmp
or
adc
popa
lret
lea
insl
mov
lock
push
pop
dec
movb
ret
arpl
subl
daa
inc
xchg
mov
dec
rcrb
mov
ret
andb
inc
jge
fistpl
sub
cmp
lret
test
sub
ret
mov
aad
mov
add
mov
cltd
test
icebp
std
bswap
orl
int
jmpw
mov
xor
or
mov
popf
enter
jb
push
jb
mov
or
mov
cmp
or
or
lds
push
sub
je
add
mov
jae
clc
cld
xchg
or
jge
fistps
std
sub
inc
fstl
or
fsts
pop
gs
add
xchg
loopne
ljmp
scas
fstpl
in
xor
test
stos
or
jo
jne
xlat
jnp
jecxz
imul
sahf
sbb
int3
jnp
jnp
mov
mov
cmpsb
mov
outsb
xor
sarb
es
dec
daa
cwtl
out
push
lahf
inc
std
push
mov
pop
inc
inc
aaa
xchg
sub
or
les
mov
and
mov
lret
xlat
push
mov
mov
repz
lods
push
push
xlat
gs
pushf
adc
sbb
inc
enter
out
addr16
fmull
adc
or
jg
aaa
xchg
and
xor
pop
std
pop
xlat
insl
bound
sub
into
jg
mov
cltd
or
and
fcoml
and
sahf
push
leave
test
fwait
insl
push
xchg
jbe
dec
fs
pop
lock
pop
in
and
fdivs
lahf
pushf
jo
adc
sbb
jg
iret
push
ret
or
pop
mov
into
mov
into
xor
jg
test
aad
hlt
sbb
push
in
mov
sbb
leave
clc
xchg
sbb
pop
int3
sub
mov
pop
loope
cmpsl
xchg
negb
dec
movd
mov
mov
jge
jo
push
push
jb
sbb
scas
xor
fs
orl
in
push
push
cmp
mov
sub
sub
cld
js
xchg
int3
cli
xchg
jo
insb
pop
push
xchg
jne
push
mov
cli
jbe
shrb
pop
mov
cmpb
ret
aam
call
jnp
adc
push
adc
pop
insl
ror
es
sub
lds
fnsave
psubusw
cltd
fisttpl
xor
sarl
out
push
test
inc
loope
es
aam
lods
jae
push
ret
xchg
mov
jnp
inc
mov
mov
test
fisttpll
loopne
repz
jle
and
jle
sub
and
inc
add
jb
gs
sub
mov
dec
inc
and
add
ret
test
xchg
popa
orb
lahf
and
xchg
jno
cmp
push
rcl
daa
xor
adc
out
ret
dec
adc
es
dec
or
fwait
call
wrmsr
lock
test
scas
inc
inc
push
inc
out
icebp
inc
mov
xor
fwait
movsb
pop
rcrl
mov
push
in
lods
int3
xchg
add
rcrb
je
pusha
popa
xor
je
xchg
cmp
cwtl
push
xorl
mov
mov
push
inc
clc
dec
stc
shr
or
aam
cmc
sahf
ja
out
inc
and
inc
jo
pop
mov
mov
xor
popf
mov
das
or
cmpsl
out
fidivrs
pop
jecxz
imul
fs
pop
mov
dec
and
xor
fisubl
sub
mov
ljmp
pusha
shrb
cvtpd2ps
aaa
sub
fists
add
add
add
mov
jae
add
or
jle
xchg
addb
adc
and
jle
addr16
int
repnz
fwait
pushf
fdivr
imul
into
lahf
xchg
aas
gs
adc
lock
aaa
or
mov
xor
adc
push
sahf
mov
adc
mov
fdivr
fadd
lahf
xchg
mov
mov
scas
sbb
fucomi
fdivs
in
icebp
daa
jle
fidivrs
out
pushf
into
fmuls
jnp
mov
push
fistl
data16
iret
or
pop
sbb
mov
push
xchg
ret
pop
cltd
pushf
scas
lea
sub
mov
push
sbb
js
insl
in
es
and
or
mov
scas
or
mov
cli
push
jp
iret
xor
in
dec
inc
insb
cmp
xor
mulb
leave
dec
sti
push
jnp
jg
stos
xchg
loopne
ds
adc
xchg
imull
lds
add
xchg
int
les
jb
andl
xchg
rol
dec
je
dec
dec
movsb
push
push
js
inc
enter
sbb
mov
mov
jne
stc
pop
lret
jecxz
push
sub
test
imul
xor
scas
adc
mov
xchg
aas
mov
nop
add
sub
lea
loopne
mov
repnz
jle
xchg
aas
fisubs
sub
jne
lods
or
push
insb
gs
rorb
jg
xlat
mov
cmp
inc
push
cmpsb
test
daa
aad
shrl
inc
mov
sub
das
sbb
stos
pop
fimull
sub
inc
sahf
loop
xchg
nop
es
xchg
pop
out
rorl
out
pop
mov
movb
push
insl
add
fiaddl
inc
aad
inc
mov
daa
popa
sbb
sub
mov
mov
lock
mov
jg
lret
xor
xor
pop
and
sbb
adc
das
mov
xchg
das
xchg
jle
lcall
add
cwtl
mov
xor
into
subb
cmc
push
lock
sbb
fs
test
push
mov
mov
int3
arpl
pop
pop
jbe
test
hlt
mov
push
mov
out
mov
sbb
sbb
insb
je
pop
stc
cmpsb
mov
scas
push
cmp
adc
fstpl
xchg
nop
dec
cmp
add
scas
sbb
cltd
jnp
test
popa
sub
xchg
push
int3
sub
xchg
jmp
ds
into
mov
imul
cmp
pop
divb
sub
add
ret
rclb
sbb
loop
test
push
aaa
leave
mov
out
scas
outsl
cmpsb
das
fnsave
insl
adc
pop
outsl
or
icebp
jl
aam
pop
inc
xor
cmpsl
push
ret
pushf
call
aam
add
jnp
mov
cli
adc
push
pop
mov
fldt
cmp
roll
insb
lret
dec
aas
mov
add
clc
fstpt
pop
stos
sbb
aaa
cmp
data16
mov
sub
xchg
sub
jb
movsl
sti
inc
test
outsl
adc
shll
insl
jno
cli
lahf
mov
mov
jb
inc
arpl
jl
sbb
mov
push
div
cmp
push
mov
adc
ds
push
imull
sub
test
mov
jmp
mov
push
or
push
push
add
cs
xchg
pop
lock
jb
inc
int3
into
stos
mov
and
arpl
aas
jb
xchg
in
sbb
clc
add
stos
sahf
jae
add
jmp
cmp
ret
lret
mov
mov
shll
push
dec
lods
mov
inc
jp
das
js
and
ja
fadd
test
icebp
test
mov
shr
lret
bound
cmp
sub
fildl
inc
scas
jns
lock
sbb
dec
addr16
loop
std
xor
pusha
dec
outsl
loope
jg
jae
loope
jae
cmp
aad
adc
add
fcomip
jbe
jmp
out
jecxz
push
movsl
add
roll
pop
add
ficoms
js
pusha
hlt
movsb
sti
roll
sar
lahf
sub
xor
dec
inc
imul
scas
jmp
fucomi
mov
xlat
or
xor
sbb
sbb
movsl
mov
mov
inc
pushf
pop
jmp
js
add
jg
lods
mov
out
test
pop
int3
imul
test
and
insb
call
ret
fistpll
jbe
mov
lret
and
push
sbb
push
pop
cmp
sbb
lcall
out
xor
movsb
inc
sbb
popf
enter
xchg
sti
iret
pop
mov
sub
add
scas
out
imull
int
mov
push
out
and
add
sbb
sbb
xchg
lock
mov
stos
icebp
jno
in
jnp
shll
pop
mov
mov
xchg
loop
movl
jns
or
dec
jge
lret
dec
bound
sti
imul
xchg
xchg
or
xor
mov
sbb
push
int3
rol
lods
test
add
xchg
and
movsl
lods
test
adc
lds
sbb
jg
test
dec
mov
out
aaa
inc
in
leave
pop
repnz
ja
push
or
fwait
lret
sbb
or
jmp
cli
ljmp
ja
test
sub
inc
sbb
loop
loope
fnstcw
cmp
test
xchg
sbb
mov
fisubs
sub
cli
jns
jp
mov
lods
leave
and
mov
and
xchg
or
rcr
xchg
fs
add
repz
inc
jecxz
es
js
ss
lret
std
loopne
or
mov
ret
call
enter
cli
icebp
insl
loope
rcll
pop
aas
shr
lahf
icebp
jl
sbb
mov
pushl
lock
pop
adc
lret
loopne
add
lcall
push
ja
push
shll
mov
lahf
sti
pop
and
std
and
ja
push
sub
push
jnp
cs
sarb
pop
sbb
push
mov
hlt
push
push
sbb
sarl
stc
mov
in
fnstenv
push
pop
sbb
mov
lahf
sub
push
mov
shl
insb
cmp
jo
adc
fisubrs
xchg
xchg
add
inc
xchg
scas
pushf
sub
mov
cmp
cs
sub
jno
push
or
jmp
cmp
shrb
bound
pop
pop
mov
sbb
mov
jp
les
fistpl
int
gs
sbb
fistps
xchg
sbb
ljmp
fwait
lahf
xor
jle
adc
mov
mov
loope
sbb
incb
xorl
sub
lcall
into
mov
ds
outsl
mov
mov
adc
sbb
mov
push
sbb
sbb
lret
aas
sbb
adcb
xchg
pop
mov
push
fisttpl
jge
mov
out
sti
sbb
pusha
cs
loopne
push
mov
sahf
cmpsb
inc
jle
insl
mov
sbb
out
mov
insl
adcl
clc
iret
cmp
popf
dec
mov
aad
ljmp
sub
add
jb
xchg
mov
sbbl
mov
sub
cmp
sbb
outsb
lret
pop
in
jno
or
shrl
je
adcb
adcl
and
pop
push
adc
out
mov
fs
sub
test
fwait
loop
ficoms
and
je
shll
inc
sbb
into
out
cmp
xchg
movsb
loope
add
dec
jg
ret
mov
sti
fidivrs
insb
or
cmp
push
push
lcall
jno
mov
sbb
scas
adc
sbb
jae
mov
fwait
fs
adc
xchg
aad
cmp
cltd
fwait
xor
and
lahf
mov
leave
lret
and
inc
mov
and
xchg
mov
das
jb
call
mov
repz
sub
push
or
imul
call
xchg
jmp
movsl
popf
fmuls
out
dec
xchg
mov
repnz
adc
pop
xchg
ret
and
jmp
add
fists
lds
mov
adc
cli
ja
lret
jbe
add
cmpsb
dec
sbb
push
popl
fmulp
rol
addr16
jp
dec
movsl
mov
hlt
mov
jecxz
fsubrs
push
inc
mov
pop
sbbb
int
mov
sbb
das
pop
push
jp
notl
test
jno
int3
fs
inc
cltd
call
ficoml
xchg
js
aad
lods
mov
in
mov
push
inc
push
dec
test
push
pop
or
push
ss
mov
sti
data16
std
cmp
cmpsb
adc
les
lcall
xchg
fadds
imul
addr16
psrad
inc
dec
mov
or
mov
push
mov
movlps
cmp
adc
test
sahf
push
push
or
sbb
sub
jbe
shll
jecxz
mov
pusha
push
in
push
sahf
and
inc
xchg
push
pop
adc
xor
xor
out
or
stos
je
mov
inc
scas
popa
or
xchg
xchg
mov
shr
mov
je
cmp
mov
mov
lds
cwtl
lods
sub
jbe
inc
pop
add
stc
jne
jae
dec
ja
test
popa
push
inc
fs
jo
icebp
int
clc
movsl
outsl
mov
in
or
mov
cwtl
sub
lret
inc
mov
and
inc
mov
add
push
loop
push
and
cs
in
xchg
sti
pop
inc
ficoml
lret
enter
iret
inc
jns
add
push
jns
adc
inc
loope
addl
stos
js
lds
push
shr
lods
pop
shrb
scas
aad
xor
push
fld
jle
fsubs
stos
insl
and
jmp
pusha
and
lods
mov
cmpsb
pop
jle
mov
mov
orl
mov
mov
push
js
in
sarb
call
xchg
pusha
outsb
outsl
out
lds
sub
mov
sbb
sbbl
jmp
xor
ret
cmpsb
lahf
andb
mov
lcall
lock
xchg
xchg
or
pop
shlb
aaa
pop
aas
mov
or
js
test
sti
mov
sub
or
ret
xor
ds
mov
mov
mov
imul
or
adc
lds
sbbb
pop
inc
pop
test
stos
mov
jmp
rcll
pop
pcmpeqd
icebp
mov
sbb
mov
loope,pt
stc
aaa
mov
jecxz
pop
cmc
jbe
neg
push
dec
or
shr
pop
sub
adc
test
and
out
cmpsl
and
pop
xorb
fbld
pop
pop
xchg
and
into
add
xchg
imul
sub
adc
push
std
aaa
dec
mov
in
rcrl
adc
add
rcrb
dec
sub
cmp
adc
rorl
dec
push
mov
jb
mov
sti
aam
into
dec
mov
ja
cmp
idivl
sbb
dec
sbb
loope
mov
mov
loope
sbb
rolb
push
sbb
and
mov
add
into
int
addr16
jl
std
mov
mov
fadds
stos
or
xor
xchg
pop
cmpsb
jnp
dec
mov
xchg
inc
push
add
mov
loopne
sbb
add
xor
push
incl
inc
incb
cltd
ss
dec
push
jecxz
mov
or
cmp
push
cltd
push
xchg
mov
cmp
ljmp
lahf
lods
mov
cmp
lods
inc
pop
fbstp
add
push
aad
sarb
sti
lcall
out
in
les
mov
lods
cmpsl
xchg
push
sub
scas
int
gs
sbb
dec
js
xchg
notb
lea
add
dec
sub
lret
mov
mov
push
adc
inc
in
adc
cmpsb
dec
and
mov
dec
pop
stc
in
mov
sub
mov
lcall
mov
add
inc
loopne
sub
mov
fadds
mov
jbe
in
data16
not
sub
fldcw
out
add
insb
or
popa
mov
push
push
std
add
andl
stc
gs
imul
xchg
ficompl
imul
add
xchg
bound
or
cli
mov
mov
mov
stos
fistps
pop
xchg
adc
insl
lahf
push
add
mov
dec
sub
push
sbb
adc
mov
hlt
and
add
into
loop
cmp
daa
and
mov
stc
ljmp
jne
dec
xchg
shrb
out
cmp
sbb
and
aaa
push
push
shrb
pusha
push
fmull
add
or
jg
cmp
jge
ffreep
xlat
sub
movsl
ds
ljmp
add
leave
clc
aam
jle
and
mov
aas
sbb
mull
push
fidivrl
fistl
cmp
scas
out
andl
pushf
mov
aad
xchg
mov
mov
adc
bound
repnz
shr
clc
sbb
mov
popa
test
cltd
inc
mov
push
popa
push
or
int
sti
add
sub
pop
int
sub
lahf
xchg
mov
shlb
popa
ja
jl
out
inc
in
fistl
aas
icebp
mov
mov
sbb
fsubr
cmp
or
jno
adc
add
adc
ss
mov
jle,pn
lret
ret
and
movl
mov
xchg
ret
mov
aaa
int3
jle
call
sbb
jmp
cmp
bound
push
or
push
dec
out
aas
add
mov
push
roll
stos
ss
inc
sub
hlt
add
mov
mulb
sahf
add
xor
and
push
mov
pusha
push
pop
or
test
fwait
xor
jecxz
pop
inc
cmc
es
dec
jl
out
push
outsb
hlt
jge
mov
arpl
mov
adc
sbb
shrl
stos
shrb
push
ss
xchg
sub
loope
in
mov
lcall
push
adc
out
fwait
aaa
and
mov
mov
cmp
movsb
fildl
lods
dec
jg
es
call
out
xchg
push
pop
lods
cmpsl
scas
test
lds
aaa
cltd
xchg
push
jbe
dec
jnp
bound
xchg
rcrl
cmp
or
outsb
mov
push
sub
inc
or
sub
jg
mov
jp,pt
fsubrl
das
sub
jnp
cmp
mov
push
mov
lcall
aam
rorl
mov
int3
and
cmp
sub
jb
xor
fsubrl
sbb
pop
jo
mov
fwait
ds
ja
scas
ljmp
pop
mov
xor
test
mov
cmc
fisubl
gs
int
cmp
or
cli
test
ds
mov
xchg
jmp
cmc
fisttpll
adc
loope
mov
mov
adc
fisubrl
fnsave
addb
scas
pop
cmp
ret
insl
xor
sahf
nop
push
push
mov
sub
movsb
and
movntq
js
lret
push
hlt
mov
inc
test
ret
shll
stos
xchg
sbb
orl
repz
std
jns
pop
ret
int
mov
inc
adc
aam
cmpsb
inc
mov
dec
push
sub
das
dec
xchg
sub
ja
adc
or
aam
mov
add
fiadds
xchg
mov
test
sahf
and
push
mov
int3
cmpsb
js
popf
fadds
dec
stos
sbb
test
fdiv
arpl
mov
imul
pop
movsb
dec
fwait
out
inc
mov
scas
cmpsl
daa
mov
test
sbb
aas
ds
imul
sahf
dec
xlat
test
and
iret
sbb
mov
xchg
ljmp
bound
adc
sbb
mov
xor
jl
in
and
and
push
clc
adc
ja
sub
shrb
fcompl
ficoms
dec
subb
loopne
into
lods
mov
lock
xor
mov
fsubrs
ds
push
add
jno
and
rclb
fisttpll
push
int
clc
das
test
cmp
jg
jle
mov
xchg
in
sub
hlt
insl
add
shll
mov
insl
imul
out
pop
movsb
push
subb
jl
or
into
push
jb
bound
cmp
lcall
push
jg
and
fwait
sub
and
or
les
lret
xorl
jmp
or
fidivl
cmpsb
mov
mov
push
xor
iret
push
in
cltd
pop
sbb
movsl
pop
jne
and
pop
fstps
enter
push
psubusw
cmp
fwait
and
cmp
fiadds
fbstp
mov
xchg
adc
daa
out
mov
repnz
sahf
or
fildl
mov
repz
pop
jno
mov
xor
adc
adc
mov
xor
lcall
test
in
cmp
into
mov
stc
sti
sbb
fwait
adc
inc
mov
xchg
scas
mov
or
adc
pop
ret
and
cltd
rcl
test
test
xchg
orl
enter
xchg
mov
ss
inc
loopne
push
testb
jg
jge
push
adc
cmp
mov
xor
cmp
mov
pop
repz
xchg
leave
aam
cwtl
pop
scas
leave
in
and
orl
stos
in
xchg
sub
nop
mov
out
sbb
pop
cld
mov
int3
das
lret
cmp
xchg
loopne
push
xlat
push
pop
mov
aaa
outsl
call
jae
je
lret
jno
and
add
lahf
xor
push
adc
int
cmp
add
hlt
imul
fidivs
cli
dec
je
push
cmp
scas
xchg
ret
or
in
cmp
pop
aam
push
add
adcb
aas
hlt
mov
dec
nop
sbb
xlat
pop
lret
inc
or
sub
pop
sbb
dec
mov
insb
xchg
inc
mov
and
out
nop
out
cmp
sbb
test
add
dec
jo
div
movsb
aam
in
dec
dec
jmp
test
cmp
jle
ret
mov
lret
mov
or
jp
mov
out
int3
clc
cmpsl
sub
dec
jl
jns
test
lahf
add
dec
mov
and
mov
scas
ds
inc
mov
test
gs
inc
pop
mov
cmp
adc
push
movsb
xchg
mov
mov
fmull
outsb
lock
sbb
jb
pop
cltd
hlt
jbe
std
push
mov
sbb
loop
xor
xchg
dec
cwtl
out
in
addb
call
or
imul
push
xchg
push
mov
pushf
cmc
in
mov
inc
shl
pop
push
leave
inc
cmp
mov
cltd
sbb
pop
movsl
mov
sub
jg
mov
loope
popf
iret
pop
lcall
cmc
das
std
lods
dec
xor
sahf
lret
outsl
mov
cmp
cmp
jb
out
imul
and
jecxz
rcrl
mov
push
out
out
push
mov
cmovnp
fcmovne
fstl
fbld
pop
loope
pop
mov
dec
inc
push
jne
cmp
stc
xlat
sbb
fidivrs
mov
test
pop
lock
leave
pusha
xchg
push
iret
and
mov
mov
cltd
jb
loopne
adc
dec
adc
ds
andl
test
jns
xchg
lahf
and
xchg
sub
push
or
push
push
adc
xchg
out
dec
and
lcall
pushf
mov
lahf
or
mov
imul
sub
xchg
sbb
loope
dec
outsb
cmp
rcrl
hlt
andl
in
add
inc
shl
dec
test
and
in
jno
mov
jl
scas
rcll
std
push
out
dec
pop
jae
push
jle
gs
adc
lret
pop
or
nop
sub
je
adc
jge
imul
outsb
pmulhw
xchg
mov
add
ljmp
push
push
cltd
xchg
shl
adc
sahf
jb
or
mov
movsb
dec
push
dec
icebp
enter
scas
push
inc
xlat
or
js
adc
cli
or
fisubrs
mov
push
sub
and
or
fstpl
ret
jo
ja
in
pushf
lcall
sbb
lods
and
jecxz
inc
push
icebp
je
pop
add
test
add
pop
inc
sbb
or
icebp
add
in
sub
test
clc
iret
mulb
xchg
in
fimull
xchg
dec
sbb
sbb
in
stc
addr16
ret
cmp
out
xchg
cld
mov
cmp
xor
repnz
ss
mov
sub
inc
mov
arpl
lcall
jecxz
mov
push
stos
add
outsb
dec
inc
sti
xor
mov
sbb
les
fcoms
fxam
sbb
mov
aad
sbb
jge
imul
lcall
xchg
and
call
pusha
stos
insl
out
imul
in
cmpsb
sbb
movb
push
xchg
add
ficomps
shll
cmp
pop
push
mov
fs
cwtl
jge
add
cmp
jb
orl
daa
nop
icebp
jp
pop
mov
xorl
inc
pop
das
shll
cmc
out
adc
mov
in
adc
push
xchg
repz
insl
add
gs
and
or
and
add
repnz
in
fcmovbe
xchg
sub
divb
adc
jmp
daa
cmp
xor
jp
xchg
mov
loope
aaa
in
stos
clc
lds
popa
test
inc
jmp
push
xor
jae
add
add
out
push
xchg
or
add
ret
inc
mov
cmpsl
stos
int
out
sub
mov
and
pop
mov
push
and
cltd
cmc
movsb
idivb
pop
mov
aad
push
adc
mov
lock
xchg
shll
out
adc
imul
loop
xchg
mov
mov
and
in
xor
mov
and
xchg
lret
inc
mov
xlat
mov
mov
push
mov
lods
cmp
mov
push
pop
sbb
lcall
int
cwtl
loope
aaa
decb
stos
jle
ds
cmp
call
dec
test
movsb
dec
rcrb
push
sahf
push
aad
adc
xchg
add
and
or
shlb
lock
cltd
push
cmp
or
pop
testl
push
icebp
inc
mul
mov
pop
cmp
insl
sbb
xchg
call
sub
out
in
daa
xchg
es
repz
lock
xchg
lret
shrl
popa
xchg
mov
push
testb
mov
cmp
push
jmp
dec
xchg
jmp
addr16
push
xsavec
js
movsb
ds
push
out
sbb
insb
outsl
mov
mov
mov
push
xor
bound
shr
aad
push
mov
mov
dec
out
mov
das
cmp
xchg
sbb
daa
fucomip
ret
incl
mov
or
mov
mov
or
pushf
nop
push
push
mov
inc
inc
stc
xchg
dec
or
push
bound
add
in
aaa
lea
jno
mov
jmp
adc
sbb
pop
movsb
mov
test
scas
pop
and
jae
add
into
inc
ds
movsb
mov
pop
out
pop
je
jae
xor
push
leave
mov
je
mov
mov
push
push
cmp
mov
xlat
fwait
std
jo
cli
lock
or
scas
jmp
adc
mov
mov
in
jae
pop
or
pushf
test
adc
push
or
xor
mov
gs
stos
push
xchg
pop
insl
stc
xor
int3
dec
add
stos
insb
mov
data16
ficomps
aaa
push
inc
fadds
mov
push
popf
jbe
repz
push
adc
cltd
mov
aam
decl
mov
mov
int
mov
fs
movl
movsb
xchg
push
pushf
mov
jae
cmp
cmp
lea
cmp
or
hlt
and
cmp
xchg
lock
pop
ss
mov
cli
jnp
fcoms
cli
push
pop
roll
repnz
js
inc
stc
aas
xchg
cmp
push
or
clc
mov
xchg
or
mov
ja
add
xor
shr
fs
mov
ja
mov
cmpsl
push
dec
aad
test
mov
rcrl
sbb
bound
sbb
xor
mov
inc
sbb
addr16
std
sbb
lret
cld
and
dec
stos
cmp
push
inc
ljmp
cs
cwtl
push
rorb
lds
repnz
xlat
add
nop
jl
shll
mulss
lock
adc
mov
xor
negl
sub
std
adc
sarb
cmp
test
dec
cmp
mov
gs
xorl
and
push
inc
jnp
jnp
or
fstpl
mov
addr16
jl
dec
lods
add
pop
cld
xchg
mov
std
add
mov
mov
xchg
mov
xorl
xor
aaa
add
cli
xchg
xor
dec
adc
jne
push
movsl
fldt
pop
rorl
mov
dec
jbe
sti
mov
jb
lahf
inc
out
test
movsl
sub
mov
xchg
pop
sub
mov
xchg
add
int3
jmp
adc
add
sbb
iret
test
sub
in
stos
jle
cmc
cs
sbb
inc
pop
test
and
push
adc
mov
pop
sub
ljmp
fcmovnu
sbb
xor
jge
inc
and
cmpsb
addr16
mov
pop
stc
add
test
pop
cwtl
inc
push
ror
xor
shlb
inc
and
in
pusha
adc
cltd
jns
and
ffreep
sti
push
or
lea
pusha
mov
in
jle
filds
pushf
inc
iret
pop
mov
sub
sahf
pop
adc
inc
negb
flds
sar
adc
imul
push
xor
mov
pop
xor
hlt
rclb
dec
orl
jge
cmp
lock
push
adc
mov
in
int
in
mov
lret
jge
test
jnp
mov
popf
ret
push
lea
jns
mov
dec
pushf
mov
push
daa
stos
ret
jg
mov
mov
out
fwait
cmpsb
push
dec
data16
cmp
xlat
xor
jge
ja
lds
sub
mov
xlat
insb
pop
fadds
push
push
mov
mov
test
pop
mov
sbb
sti
and
adc
cmpsb
push
or
cmc
push
mov
fs
scas
in
pop
ret
mov
int
xor
pop
jmp
xor
lret
inc
andb
mov
mov
sbb
cld
sbb
xor
and
out
sub
push
fistpl
push
icebp
and
adc
out
notl
xchg
jp
repnz
scas
mov
insl
cmc
sub
and
xchg
out
or
fwait
xchg
inc
ljmp
xor
test
pop
pop
sbb
mov
lods
nop
jp
push
nop
xchg
imul
pop
bound
imul
xchg
push
sbb
test
inc
push
push
fiadds
icebp
loop
lds
ss
mov
loope
or
ss
sar
fs
jecxz
add
mov
idivl
jb
das
jno,pn
imul
aam
mov
and
and
lret
inc
push
mov
xor
cmp
sub
add
cmpsb
xor
rol
repnz
fmull
shl
adc
xorl
sahf
mov
icebp
push
or
push
inc
ret
jp
jle
cmc
sbb
mov
push
and
cmp
int3
shld
in
adc
lods
out
dec
sub
push
test
xor
inc
je
cmp
dec
mov
xchg
cwtl
sar
dec
lret
fstpl
pop
inc
mov
sbb
out
dec
neg
cwtl
mov
or
push
mov
fdivp
gs
out
jbe
outsl
out
jae
sahf
adc
dec
mov
jmp
and
mov
cmpl
and
and
aaa
sbb
movsb
inc
fs
aad
popf
mov
mov
or
xlat
push
adc
or
loope
out
inc
xchg
inc
and
jl
in
xor
daa
inc
sbb
jle
ror
mov
mov
push
mov
lret
and
mov
jae
cltd
repz
and
sbb
je
dec
dec
sub
jne
mov
shrb
inc
cmp
mov
rorb
pop
and
xchg
lock
mov
ja,pn
jl
movsl
xor
shll
repnz
addl
fstpt
xchg
stos
pop
fdivr
jo
jl
mov
pop
lea
push
into
push
nop
idivb
mov
pop
xor
dec
sub
push
in
cmp
add
fsubrs
xchg
inc
pop
pushf
cmp
jne
jle
mov
dec
es
cwtl
jnp
loope
out
add
mov
sub
xchg
pop
ror
jns
aas
xor
adc
xor
testl
mov
add
jne
lahf
jle
ljmp
mov
xor
push
repz
sbb
in
into
or
sub
das
adc
and
mov
and
mov
rorb
jns
mov
mov
imul
push
sub
out
es
pop
notb
in
pop
ljmp
push
sub
add
es
mov
add
mov
xchg
out
fadds
lret
and
in
les
mov
sbb
into
shl
jmp
in
arpl
push
mov
lret
es
sbb
xlat
icebp
xchg
fidivs
mov
cld
int
mov
sahf
data16
dec
lds
in
rorl
outsl
mov
in
in
inc
jecxz
push
adc
dec
aas
jns
aaa
pop
pusha
pop
data16
dec
loop
fmull
cmpsb
jmp
pop
mov
fstpt
fstps
sub
pop
les
fdivs
and
aaa
insb
pusha
jo
or
es
cld
mov
dec
lret
movsl
in
push
imul
and
stc
fs
cmc
test
popf
les
jnp
dec
les
aam
cltd
or
sbb
sbb
test
add
addr16
imul
call
insl
cmp
cmp
and
xchg
out
data16
lcall
sub
lret
xor
push
enter
add
adc
aad
push
into
std
and
pop
stos
xor
inc
jecxz
bound
gs
mov
mov
inc
inc
cwtl
cmp
push
adc
push
xchg
push
arpl
jle
xchg
adc
popa
push
add
mov
test
and
jp
and
test
aad
lock
adc
shrb
push
adc
pop
push
cwtl
cmp
mov
movsb
popl
call
in
lret
mov
jge
sub
aad
mov
fisubl
push
cmp
jle
les
mov
fimuls
imul
lea
adc
mov
sub
flds
mov
mov
xor
incb
mov
aaa
adc
sbb
ffreep
push
sbb
push
xchg
cmc
adc
inc
dec
out
push
sub
fwait
fs
loopne
push
fnstenv
lret
dec
add
imul
cmpsl
jb
cmpsl
addr16
jne
scas
andb
or
pop
fisubrl
fnstsw
xor
movb
and
xchg
std
mov
rcrb
leave
repz
daa
mov
add
shrb
inc
shlb
dec
jb
inc
mov
lcall
jne
and
pop
ret
sub
jne
test
pop
adc
jae
jno
fsubrs
ljmp
pushf
sbb
roll
adc
mov
inc
dec
xor
xchg
ret
hlt
xchg
lods
push
lret
aad
add
lahf
lock
icebp
insb
repnz
xor
xchg
xchg
cmp
ret
and
cmp
loope
outsb
push
rolb
inc
mov
xchg
int3
jnp
xor
sbb
or
leave
popf
popf
push
sbb
imul
rcrl
dec
xchg
inc
aaa
inc
xchg
jg
inc
imul
sub
ja
xor
test
jle
mov
scas
jmp
jo
or
cmp
test
push
adc
shlb
je
cmpl
negl
and
mov
adc
sbb
xchg
push
andb
je
xchg
enter
adc
jno
inc
mov
int
jne
divb
and
mov
lret
test
jno
or
push
sub
les
mov
mov
leave
jae
xchg
nop
arpl
loopne
out
pop
xchg
pop
xchg
scas
adc
daa
push
imul
orb
fisubs
and
adc
push
testb
outsb
lock
xchg
clc
and
inc
or
ror
loope
push
ja
call
or
mov
enter
mov
mov
xchg
clc
pop
inc
pusha
gs
loope
push
sti
xchg
jl
dec
and
pop
fidivrs
mov
lods
aaa
xor
push
xor
add
call
ja
lcall
ror
pop
out
cmpsl
jle
cmpsb
jg
jmp
jb
hlt
pop
push
shrl
adc
lcall
repz
jo
xchg
jp
cmpsb
in
pop
push
cwtl
jp
cmp
sub
jae
mov
ds
sub
lret
ficomps
rcll
dec
adc
rcrl
dec
or
or
pop
jno
jmp
popf
loop
pop
push
mov
inc
stc
push
ljmp
sub
icebp
call
xlat
insb
xor
cmpsb
xorb
pop
repz
fisubrs
push
pop
mov
lds
imul
xor
mov
adc
sbb
or
adcb
pop
cmpsl
dec
dec
icebp
xor
inc
sub
dec
jno
dec
std
cmpsl
jecxz
add
mov
cmp
filds
cmp
fwait
push
mov
fildl
rclb
fwait
iret
mov
popa
pop
cltd
jo
xlat
xor
scas
out
inc
push
sub
cmpsl
xchg
sub
clc
dec
dec
jge
adc
loop
je
dec
add
cmp
or
sbb
ds
push
test
packuswb
xchg
pusha
aam
add
ret
adcl
and
adc
test
dec
xchg
sbb
cmpsl
stos
push
fsubrs
xor
in
sbb
sbb
fists
mov
bound
subb
aad
outsb
in
stc
mov
bound
insl
inc
rorb
and
jnp
jle
insl
mov
js
sub
mov
aaa
dec
in
addl
mov
push
mov
cmp
push
xor
in
adc
nop
ficompl
pusha
pop
mov
sub
daa
mov
mov
pop
sbb
jnp
fiaddl
xor
cmpsl
ret
pop
sbb
ret
xor
add
mov
test
outsl
arpl
mov
and
fs
gs
cmp
lret
lods
push
sti
mov
dec
outsl
lret
repnz
jnp
mov
sub
insb
xlat
jns
push
imul
xor
mov
gs
outsl
repz
sbb
icebp
int
fucomi
loope
insb
dec
decb
lea
mov
mov
call
push
mov
cmp
adc
sub
dec
inc
mov
cltd
xchg
dec
pop
sahf
test
inc
vmptrst
into
inc
adcl
jbe
imul
jo
jmp
movsb
fs
aad
lds
push
stos
repz
filds
jb
lcall
es
daa
jmp
inc
xor
ret
int3
xchg
lea
pop
movsb
jb
and
arpl
repz
and
xchg
pushf
xor
push
movsl
pushf
sub
rcll
insl
jns
xor
int3
cmpsl
sbb
pop
jle
or
ja
add
xor
in
jnp
pop
pop
pop
icebp
loopne
lea
daa
dec
notb
jecxz
cmpsb
sbb
fwait
scas
adc
aaa
mov
lcall
or
inc
or
mov
sbb
lret
inc
repnz
cmp
xchg
loope
dec
inc
sub
add
xchg
fistl
test
dec
pop
lret
nop
es
pop
iret
jge
lds
mov
pop
fdivs
xchg
xor
and
imul
xor
test
sbb
inc
adc
ja
testb
sahf
dec
or
das
sbbl
inc
add
cli
imull
es
arpl
outsl
js
clc
fdivrl
mov
inc
loopne
jecxz
stc
xor
sbb
mov
xchg
add
xor
mov
sbb
or
mov
sub
pop
gs
cmp
test
xchg
jae
pop
jnp
xor
cmp
test
lret
sbb
fcompl
aaa
mov
out
aas
nop
adc
dec
jmp
scas
dec
cmpsb
pusha
fwait
xchg
rcrl
les
cmovge
dec
repnz
stos
adc
mov
or
adc
add
sub
push
push
mov
std
push
pop
jbe
stos
pop
shl
fidivl
pop
jp
mov
fwait
jns
push
jp
jns
and
jp
aad
jle
cwtl
xor
jg
inc
mov
jb
lods
lods
or
jge
sub
flds
leave
repz
ja
mov
imul
icebp
inc
push
rcrl
push
incb
pop
movsb
cmpsb
mov
ljmp
ja
mov
lea
cmpsb
sbb
xor
push
push
pop
popf
jbe
ret
into
lret
pop
aad
sub
fdivrp
add
popa
cmp
dec
cmp
xor
push
push
daa
sbb
ja
mov
dec
sbb
js
inc
and
adc
in
fdivp
and
aad
inc
imull
cmp
lds
add
mov
popa
adc
jbe
loop
mov
insl
mov
push
mov
addr16
sub
or
xchg
cmp
ds
je
xchg
pop
movsl
test
loope
jg
mov
jne
sarb
gs
out
insl
ljmp
xor
sub
jmp
pop
and
mov
stos
fstpt
inc
rorl
push
inc
dec
cmp
ret
mov
adc
lea
jg
addl
pop
imul
sub
add
cmp
add
sti
dec
das
push
dec
xchg
mov
push
push
push
notb
and
fwait
mov
cmp
and
mov
cmp
push
lock
mov
mov
mov
insl
dec
dec
out
push
or
test
or
lahf
in
neg
jb
sbb
and
dec
sub
sbb
push
pop
push
cmp
lods
pop
mov
xchg
dec
add
jg
inc
repnz
pop
lock
pushf
dec
repz
sti
outsb
orb
dec
and
mov
scas
into
pop
xor
stos
lcall
xchg
loopne
nop
adc
or
push
addr16
pop
mov
adc
ret
and
in
call
push
in
mov
ret
mov
mov
mov
jne
inc
enter
push
mov
mov
lahf
scas
mov
loope
add
mov
xor
jmp
and
jmp
dec
into
adc
dec
fidivs
dec
test
push
addr16
sub
loopne
mov
inc
movsl
add
or
xchg
pop
dec
and
shl
push
adc
cmp
cli
and
mov
sarb
nop
fdivr
into
push
lahf
and
imul
shlb
sub
add
imul
out
or
xor
mov
cltd
xchg
in
mov
cmp
ds
push
xlat
mov
pop
push
adc
clc
arpl
lea
dec
mov
jge
icebp
xadd
inc
enter
cwtd
xchg
xchg
sub
sub
cmp
xchg
jb
pop
mov
stc
adcl
mov
leave
cmp
cltd
movsb
or
inc
ss
mov
pop
shl
movsb
ljmp
imul
inc
sub
adc
fcmovu
outsb
fcoml
adc
mov
sub
or
mov
lcall
xor
mov
adc
pop
js
sbb
aas
sbb
mov
mov
into
mov
cwtl
cmp
aaa
push
jo
int3
mov
stos
jle
scas
addr16
in
arpl
mov
cmp
jmp
pop
aad
jle
enter
add
in
pop
and
arpl
xorb
cmpb
adc
cld
mov
lock
or
pop
outsl
out
jne
dec
cmpsb
xchg
cmp
or
repz
adcl
out
fcmovb
push
mov
ret
xchg
arpl
cmp
mov
cld
lret
pop
test
mov
call
jmp
mov
scas
fdivrs
shr
xchg
repnz
imul
out
xlat
fwait
pop
fldenv
adc
add
fimull
mov
adc
cli
lret
lret
push
cltd
xorl
in
xor
xor
push
inc
testb
push
mov
push
lea
mov
push
jo
xchg
sbb
jno
pop
xor
lock
lret
fisubl
sub
cmpsb
mov
out
cwtl
dec
shlb
lods
js,pt
jecxz
pop
mov
push
mov
aad
sub
ljmp
dec
insb
loop
xor
push
orl
bound
js
imul
int3
fists
mov
push
jo
xchg
xor
xor
pop
mov
sub
add
mov
into
sbb
sbb
cmpsl
adc
rcll
xchg
movsb
in
xor
or
add
dec
mov
es
sahf
xor
rolb
data16
jecxz
shlb
inc
icebp
ljmp
xchg
shl
sub
add
imul
xor
popf
test
pop
adc
mov
jl
sub
stos
sub
adc
adc
ja
fsubr
push
icebp
repz
arpl
stos
and
xchg
sub
daa
hlt
insb
and
es
in
sub
inc
int3
arpl
std
pop
push
cmp
mov
sub
dec
imul
cltd
fistpl
adc
test
push
xchg
test
daa
pop
bound
outsl
push
cmp
mov
shlb
xchg
shll
push
daa
pop
movb
mov
or
or
jbe
adc
xor
cld
pop
pop
jo
inc
mov
mov
and
xchg
dec
in
lcall
ds
inc
push
js
rclb
lret
sbb
cld
jecxz
aad
fstl
jmp
ja
out
movsb
dec
cwtl
popf
xchg
xorl
sbbl
lret
in
and
repz
daa
jmp
shll
push
lods
and
mov
aad
shr
data16
cmp
push
adc
mov
jo
pusha
pop
inc
jbe
jae
nop
pop
xchg
mov
adc
scas
fidivl
std
scas
fdivl
mov
fistl
xchg
shll
cmp
sub
sub
fbld
xchg
cli
arpl
adc
sub
cmp
ret
xor
xchg
int3
dec
mov
add
lods
jae
idivl
and
jb
pop
lret
mov
ja
sub
or
mov
and
mov
insb
pop
fildl
popf
lds
lea
stc
enter
int3
neg
insb
cmp
imul
dec
cmp
imull
or
jb
push
jle
add
sbb
out
sub
or
adc
loopne
ja
cmp
rcll
nop
ja
jno
std
leave
xor
sub
pop
pusha
cld
sbb
fdivp
aas
cmp
incb
fisubrl
and
rcrb
insb
pcmpeqb
xor
shll
cmp
push
and
push
or
mov
xor
and
ja
pop
decb
inc
mov
add
cmpsb
sub
sbb
cmp
dec
fwait
cwtl
sbb
push
outsb
inc
cmp
jl
or
sub
adc
shlb
pop
add
xchg
inc
mov
sbb
mov
jle
lods
cmp
mov
imul
mov
into
repz
sbb
inc
outsb
jge
sbb
cwtl
sahf
in
ljmp
pusha
or
mov
scas
xor
popa
cmc
xchg
xchg
fdivl
popf
mov
test
pop
push
int
pop
int
add
push
movsl
mov
mov
movsl
sub
test
mov
push
es
in
xor
dec
xchg
push
arpl
lret
aad
repz
and
adc
push
repnz
xchg
sub
aaa
scas
lret
add
mov
xor
addr16
mov
fsubl
dec
mov
fcoms
inc
ret
out
pop
aam
mov
out
push
into
dec
dec
idivb
or
dec
push
lretw
ja
xchg
pop
add
xchg
sbb
and
and
inc
and
mov
int
rcr
lods
mov
or
mov
mov
ret
xor
testl
and
lods
push
jbe
imul
dec
xor
fidivl
dec
les
iret
xchg
dec
inc
sbb
stos
rcrl
inc
sti
nop
push
enter
push
jae
gs
adc
jmp
cmc
std
shlb
push
pop
xchg
dec
jns
jmp
repnz
jbe
shrl
jle
xchg
cmpsl
adc
lahf
sub
out
dec
testl
mov
popa
xchg
lret
daa
repz
ljmp
xchg
out
rcrb
push
adc
push
stos
in
sub
xor
cmp
aam
sub
cmc
mov
jl
jnp
cli
sub
outsl
jg
adc
dec
dec
dec
movsb
cmp
inc
and
mov
xor
push
xor
ret
mov
sub
mov
cmp
aad
adc
mov
sahf
jecxz
int
mov
push
in
xor
ds
mov
pop
lcall
jns
push
jne
sub
test
and
lods
ds
xchg
and
shrl
push
cmp
push
dec
lods
sbb
shlb
pop
cmp
mov
sbb
dec
jmp
pop
in
inc
jecxz
dec
fdivr
or
and
push
xor
push
jno
push
lods
ja
jecxz
lret
xor
test
sbb
lret
push
repnz
or
ret
xchg
sbbl
fistl
cmpsb
sbb
mov
push
imul
sti
ljmp
and
add
cltd
mov
addb
push
jo
ja
loopne
cld
mov
popl
stc
je
pop
dec
sarl
push
jb
cmpsl
lret
and
mov
lock
movsl
mov
ret
jbe
xchg
ficoml
or
jo
dec
mov
testb
es
ss
pop
sub
mov
gs
test
in
push
lds
cs
and
xchg
push
repnz
adc
push
adc
dec
movsl
xor
divl
xlat
insb
sbb
outsl
call
fcmovne
jae
in
sbb
pop
add
ss
dec
xchg
mov
and
or
int
jp
loope
sub
out
orl
add
dec
enter
out
gs
xchg
int3
push
rcl
sub
aaa
scas
jns
fdivs
cltd
mov
mov
mov
lock
sbb
jno
cld
add
movsb
mov
jp
jae
fmuls
mov
stc
imull
inc
sub
sub
iret
pop
pop
mov
push
ljmp
push
outsl
mov
jae
mov
mov
nop
icebp
fmuls
xchg
inc
addr16
cmc
pop
pusha
xor
inc
mov
fcmovnu
aas
xchg
and
leave
sbb
out
jge
fldl
int
mov
add
lret
lods
andl
shl
cmp
das
mov
pop
xchg
leave
pop
sbb
ds
cs
mov
add
scas
rolb
sub
std
ja
js
daa
add
xorb
es
test
push
js
and
enter
mov
push
xchg
cmp
int3
gs
loop
pop
fadd
xchg
in
jle
jmp
pop
pop
mov
sub
movb
and
loop
js
movsb
loopne
or
adc
outsl
jle
fwait
or
popf
xchg
mov
jne
lahf
cmp
mov
mov
insb
scas
adc
or
scas
cld
mov
add
mov
out
js
dec
out
add
pusha
cmp
jge
jbe
jge
mov
mov
std
les
test
cmp
popa
loopne
cmp
xor
les
push
decb
out
lret
ss
mov
mov
movsb
ss
cmp
adc
cmp
xchg
lahf
inc
in
xchg
popa
dec
and
xor
sub
jno
jp
mov
inc
test
nop
add
call
into
mov
sub
subps
aaa
scas
or
mov
mov
adc
push
mov
in
testb
bound
lret
jmp
rcrl
mov
inc
movsb
stc
call
sub
mov
out
cmc
dec
in
mov
ret
xchg
jg
mov
fistpl
lret
ds
fldpi
jo,pt
daa
arpl
bound
sbb
aad
mov
in
or
test
cwtl
fcompl
cmp
mov
push
into
in
push
xor
ja
jb
sbb
mov
rolb
mov
mov
inc
addl
cmp
lds
sahf
mull
cmpb
fs
stos
filds
xor
lret
dec
mov
add
push
std
lea
repnz
sti
xor
rcr
push
push
int3
std
subl
aad
or
enter
repnz
lahf
idivl
dec
mov
mov
movsb
sbbl
fs
pop
daa
push
adc
loopne
js
adc
sub
lock
call
jns
xor
gs
mov
mov
push
mov
xor
pop
xchg
lret
shlb
mov
pusha
outsb
xor
fwait
pop
cmp
icebp
mov
mov
sub
int3
jno
dec
push
cli
xor
or
lret
sbb
mov
xchg
scas
jg
jg
out
xor
push
xlat
xor
mov
xchg
repz
add
push
add
roll
pop
popl
dec
cmpsl
pop
shl
adc
dec
xchg
int3
xchg
inc
pop
mov
in
or
inc
mov
or
addb
loopne
mov
ss
sub
mov
stc
lret
xchg
shll
xor
jp
dec
lods
rcrb
inc
push
mov
cmc
nop
dec
nopl
cmp
fdivrp
shrb
push
adc
loope
inc
cmp
outsb
jbe
fsts
sub
sub
inc
add
test
adc
lea
pop
adc
and
jge
push
cmp
mov
divb
test
mov
pop
imul
fbld
or
cmc
shl
loopne
mov
insl
pusha
mov
in
push
lea
fsub
hlt
lods
or
nop
arpl
push
sub
fistps
subb
add
enter
imul
lock
inc
repnz
std
mov
jle
jg
cmovg
push
push
inc
push
sahf
or
dec
add
mov
push
mov
arpl
fmuls
cli
add
mov
pop
jno
call
add
add
stos
int
mov
lahf
test
xor
aam
cwtl
hlt
iret
fwait
scas
or
aam
orl
jmp
xchg
xchg
loopne
adc
repnz
loope
push
jge
dec
imul
pop
mov
dec
mov
sbb
andb
cmp
stos
cmpsl
mov
test
push
xchg
std
xchg
je
dec
or
cmp
addr16
xor
lret
mov
jp
xchg
arpl
ret
or
nop
in
or
test
adc
mov
mov
popf
nop
cwtl
mov
aad
in
sbb
clc
cmpsl
sub
sub
ret
mov
and
fidivrs
adc
and
jno
popa
pop
mov
dec
and
dec
pop
les
adc
cmc
push
pushw
inc
fidivrl
cmpsb
outsb
hlt
pop
in
stos
movsl
lock
fisttpl
enter
push
and
dec
fiaddl
cmp
mov
mulb
popf
dec
pushf
push
mov
mov
inc
mov
insl
xchg
xchg
mov
loope
sub
mov
aad
in
sbb
mov
mov
out
and
outsb
in
jb
ror
jae
jo
movsl
inc
xorl
cmp
ljmp
mov
addr16
jge
in
sub
divl
daa
pop
int
leave
mov
pop
dec
push
shrl
test
orl
jle
xor
pop
inc
hlt
repnz
add
add
divb
push
xor
pop
enter
and
lods
inc
lahf
fucomip
popf
xchg
pop
adc
mov
jb
mov
cwtl
inc
mov
in
push
inc
dec
xchg
enter
mov
adc
dec
adc
dec
adc
stos
add
aaa
jp
xor
cmp
lock
push
dec
cmp
cltd
arpl
xor
inc
cmp
jp
stos
dec
adc
and
lcall
imulb
fsubs
mov
lret
repz
pop
inc
mov
jae
mov
subl
ffreep
jo
xchg
into
out
cmp
lds
add
push
push
mov
or
sbb
mov
sub
xchg
adc
add
inc
in
call
mov
mov
into
xor
inc
sarb
cmp
lea
repnz
mov
dec
lret
inc
xchg
loop
stc
aam
int
inc
jae
mov
push
arpl
scas
call
das
sbb
or
dec
cmp
popa
into
aam
inc
inc
hlt
lret
fiadds
lret
fcmovne
pop
mov
orb
mov
loopne
outsl
movsl
adc
push
cmp
loop
aaa
pop
ljmp
neg
mov
out
or
lods
mov
lcall
cmp
pop
pushf
adc
in
or
pop
sbb
shlb
xlat
adc
mov
dec
cmp
add
xchg
sub
scas
mov
xchg
and
sub
cwtl
enter
lret
add
jae
int
jbe
xchg
ljmp
cmp
push
cmpsb
shl
je
jg
jge
popf
fadds
mov
repz
dec
cwtl
clc
jmp
jnp
xchg
cmpsl
mov
sbb
jns
test
stos
enter
loop
nop
ja
icebp
add
sbb
cmp
dec
popf
push
adc
mov
test
mov
ja
lcall
rolb
in
popl
push
mov
adcb
add
sub
or
push
or
outsl
stos
push
inc
aad
or
sahf
fucom
mov
rcll
xchg
mov
ret
loop
jbe
xchg
and
or
orl
out
adc
jg
ss
mov
pop
bnd
xlat
inc
mov
arpl
test
test
scas
inc
sbb
lcall
cmp
jb
jbe
out
push
push
repz
das
and
adcl
cltd
or
and
jo
jecxz
test
and
cltd
push
inc
pop
leave
flds
pop
or
imul
jns
bound
fdivl
bound
push
adc
mov
xchg
inc
xlat
std
xor
in
clc
aad
push
outsb
ror
mov
mov
push
lret
ljmp
sub
mov
stc
lock
mov
ret
data16
adc
pop
xor
out
pusha
cli
or
data16
and
sbb
cmpsl
leave
in
call
test
pop
dec
aaa
sbb
fwait
ljmp
ret
test
leave
mov
bound
mov
jnp
add
lods
xor
cmpsb
cmpsl
fnstcw
movsb
lock
btc
nop
pushf
jns
dec
mov
add
ret
cli
les
fldcw
mov
ljmp
les
or
push
dec
fnstcw
sub
mov
add
sbb
and
fistpl
rolb
js
rclb
inc
inc
jbe
in
xchg
je
das
imul
jge
mov
and
push
cmpsb
sub
mov
sub
and
sbb
sbb
jnp
into
out
sahf
insl
push
lea
in
push
das
in
mov
loopne
adc
das
push
clc
mov
push
adc
xchg
dec
in
lret
js
sub
call
movsb
pop
js
xor
cmc
adc
sub
notl
add
test
push
mov
shll
das
es
fnsave
leave
sahf
dec
jg
ret
cmp
decb
sbb
jnp
mov
pop
fnstenv
dec
cwtl
pop
hlt
popa
adc
scas
adc
loop
ds
inc
popa
cmp
push
mov
sub
cmpsl
cwtl
daa
std
xchg
jle
pushf
into
dec
mov
xchg
fadds
mov
out
xor
loop
iret
mov
dec
pop
jns
sub
dec
pop
out
repz
cli
mov
push
mov
dec
andb
push
into
and
dec
mov
inc
imul
adc
les
cmp
lods
test
fstps
xor
call
addl
cltd
or
mov
add
rclb
and
dec
and
xorl
push
jecxz
mov
mov
mov
xor
pop
ljmp
jnp
cli
jne
out
sub
cmp
mov
or
push
test
xchg
pop
seta
and
divl
mov
inc
mov
es
dec
leave
out
adc
sarb
lea
push
dec
mov
sbb
aas
sub
dec
scas
push
inc
shll
adc
lock
imul
add
fsin
adc
inc
jle
ficoms
test
lcall
ficompl
cmpl
pop
cmp
dec
dec
jl
fcomi
push
mov
cmp
clc
inc
movsl
mov
pop
fistps
pop
movsl
lods
or
rcrb
xor
mov
out
test
pop
jge
mov
xor
fildl
adc
sbb
and
xchg
push
mov
mov
popf
pushf
jne
fdivr
jge
in
pop
mov
inc
jle
lret
cli
outsl
je
shlb
je
mov
test
aaa
sbb
xor
ds
nop
dec
adc
and
push
lcall
add
orb
adc
jl
negb
or
aaa
fistl
int3
movsl
push
adc
push
in
js
bnd
pushf
enter
xchg
push
xchg
jae
adc
cltd
inc
notb
lds
pop
push
insb
and
push
insb
lock
cmp
jo
xchg
imul
shll
scas
adcl
dec
out
push
jno
mov
xor
push
iret
enter
inc
xchg
rcl
dec
dec
cmp
inc
inc
in
sarl
cmpsl
add
jge
sbb
ja
adc
dec
in
leave
aas
mov
jp
jno
cmc
stos
orl
mov
out
shrl
in
sar
lret
xchg
loopne
cmpb
dec
mov
leave
daa
fnstcw
pop
addl
inc
and
sbb
mov
lock
push
push
add
orl
scas
stos
ja
cli
dec
int3
mov
dec
push
mov
jo
les
jnp
xchg
jb
push
or
inc
add
jge
inc
icebp
shlb
fcoms
mov
push
orb
clc
push
test
addb
or
pop
mov
jns
xor
sub
jecxz
movsb
add
fildll
inc
data16
rorb
movnti
cmp
mov
test
mov
jp
arpl
enter
pop
and
push
sti
cmp
ret
dec
mov
pop
jg
shll
pop
ljmp
pop
and
add
xchg
mov
into
adc
cmp
lds
pop
add
cwtl
sbb
in
int3
push
xchg
sarb
cli
push
jl
cmp
aas
push
idivl
imul
fs
inc
mov
out
mov
sahf
cmpsb
xchg
adc
adc
pusha
insl
and
push
mov
sub
push
sahf
inc
leave
push
xchg
xor
cmp
stos
or
mov
lea
fimuls
sbb
push
xor
sbb
sub
or
xor
insl
iret
sub
out
and
stos
cmp
pusha
subl
xor
push
jp
or
or
scas
jge
out
xor
ret
inc
clc
js
hlt
rcrb
jbe
movsl
cmp
std
lods
iret
sbb
push
leave
pop
test
sahf
leave
mov
sbb
aas
movsl
jb
nop
movsb
clc
sub
retw
lret
ja
lret
jae
mov
sub
sub
xchg
xchg
add
push
add
add
jns
sbb
pop
in
mov
fmul
enter
mov
push
jo
loop
xor
mov
scas
mov
dec
popf
ret
std
jp
adc
mov
jae
inc
cwtl
and
neg
lock
daa
out
in
dec
xor
add
sti
add
lcall
add
repz
es
dec
add
push
push
or
sbb
or
dec
enter
outsb
mov
mov
popf
push
mov
jns
out
adc
xchg
test
inc
outsl
out
in
push
and
or
out
inc
loop
das
test
push
sarl
push
shl
pop
inc
lock
test
in
clc
pop
pop
mov
adc
les
pminsw
popa
hlt
mov
or
push
pushl
or
loop
stos
in
mov
push
not
pop
andl
and
hlt
mov
test
mov
sbb
mov
mov
pop
lret
mov
add
das
lea
dec
mov
push
movsl
push
and
movsb
sbb
push
sub
push
inc
int
in
sbb
xchg
out
lods
pop
aad
fiadds
lret
pop
outsb
pop
cmc
mov
jb
mov
dec
rcr
pop
aad
scas
push
jecxz
pop
cld
dec
cmp
mov
test
xor
dec
data16
sarl
xchg
jb
iret
dec
jbe
sbbl
sti
mov
das
adc
push
add
push
cmp
dec
test
iret
mov
loopne
repnz
test
adc
mov
push
mov
fcoml
mov
push
and
push
sti
lret
add
gs
lret
out
sub
pusha
adc
jg
inc
inc
inc
or
in
push
and
pop
push
call
adc
lcall
push
cmpsb
jno
fs
sbb
xchg
dec
or
mov
adc
sarb
cmpsb
lea
dec
arpl
adc
gs
and
sub
fistpl
ret
roll
cmc
sti
icebp
pusha
loope
je
pop
lcall
out
and
popf
sub
push
jne
or
dec
pop
push
push
mov
stos
sub
add
xchg
adc
insl
sub
sarb
loop
scas
sbb
xlat
push
cmp
cmp
jb
cmp
into
sbb
xor
jle
sbb
lods
jmp
or
add
repz
imul
outsb
fs
in
jg
xor
fsub
jl
xchg
and
scas
inc
shr
pop
shrb
out
ljmp
lds
cwtl
and
pop
mov
rcrb
inc
push
sti
std
mov
dec
sub
sub
pushf
pop
repnz
adc
add
push
mov
mov
push
mov
roll
outsb
dec
dec
xchg
sub
sub
fisttpll
cmp
pop
shlb
loopne
bound
repz
cwtl
mov
dec
jge
sbb
inc
shlb
dec
xchg
add
sub
sub
rcll
cmp
nop
or
frstor
jno
mov
dec
mov
jp
mov
aaa
or
xchg
mov
das
xor
mov
xchg
sahf
out
pop
imul
std
inc
xor
add
outsl
xchg
insb
adc
in
mov
arpl
push
jne
out
adc
adc
xorl
fwait
pop
test
add
popa
mov
jg
push
add
lock
xchg
mov
mov
xorb
sub
std
push
loope
push
mov
inc
ljmp
scas
pop
pop
and
std
and
lcall
movsb
push
hlt
adc
adc
push
xor
icebp
ljmp
xchg
sbb
enter
adc
sahf
fnstcw
shl
incb
mov
adc
fchs
and
sbb
fists
cmp
mov
or
out
or
jg
xchg
add
xor
inc
xchg
sbb
sub
iret
pop
pop
lret
fcmovbe
imul
test
jo
divb
add
clc
or
xchg
jbe
cmpl
add
movsl
inc
je
rorb
cli
fiaddl
dec
test
pop
aaa
in
cmpsb
mov
shlb
call
mov
jae
add
sub
pushl
jo
xor
push
add
add
pop
imul
pop
sarl
repnz
mov
cld
ds
inc
mov
mov
jbe
in
cmp
repz
cmp
cmpsl
sbb
cmpsb
inc
and
lcall
jns
push
movsl
jl
fmul
jnp
and
mov
ljmp
imul
mov
test
stos
mov
jecxz
scas
js
add
cmp
mov
sbb
jne
mov
into
adcb
addr16
mov
aam
jl
dec
in
jb
push
inc
orl
adc
push
inc
stos
mov
mov
jb
jns
push
test
aaa
pop
call
cmp
movsb
xor
jne
clc
dec
movsl
push
jmp
ret
xchg
dec
rep
outsl
mov
pop
and
rorl
pop
mov
fucomip
ret
insb
lods
dec
cmp
jnp
std
mov
cmp
dec
jne
gs
push
and
es
or
cmp
bound
cli
sbb
loope
ss
mov
xor
cmp
or
js
jmp
jb
and
adc
pop
xor
push
fdivrs
xor
jmp
adc
xor
into
cmp
inc
mov
movsl
adc
mov
adc
iret
ja
stc
sbb
rcll
mov
sub
cmp
pop
mov
mov
shlb
cwtl
pushw
lcall
xchg
iret
sbb
pop
push
bound
sub
cmp
fcomp
mov
dec
inc
xor
jae
push
enter
stos
adc
and
fcmovbe
out
loope
jbe
xchg
ret
shlb
out
cwtl
cmpl
sbb
xchg
das
stc
cld
or
jo
xchg
movsl
mov
repz
mov
addr16
leave
popa
arpl
cmp
mov
fimull
inc
mov
jl
sub
xchg
cmp
addl
or
insb
popf
test
in
lds
cmp
add
cmpsb
jo
cmp
out
mov
aad
pop
pop
sbb
inc
out
aad
hlt
dec
adc
adc
and
ja
nop
cwtl
and
clc
mov
fnstcw
inc
sub
mov
ret
xchg
mov
dec
fs
gs
mov
inc
and
loopne
ret
xor
filds
fdivl
in
jmp
jo
sub
push
jmp
pushl
xor
daa
mov
lcall
inc
in
pop
xchg
or
add
sub
cmp
mov
pop
dec
ss
sub
pusha
mov
int3
insb
dec
dec
scas
mov
fdivs
sub
mov
cmp
pop
fld
or
inc
push
in
mov
sbb
jge
xor
js
xor
imul
cld
cmpsb
dec
jae
scas
dec
cmpsl
loope
aad
xor
stc
dec
pop
jb
jne
fs
xor
imul
sub
mov
mov
shll
hlt
sub
jecxz
xor
ret
pop
fs
push
sahf
ficomps
xor
fs
sub
dec
mov
stos
jge
rcr
inc
mov
mov
cmp
cmpsb
mov
mov
jle
or
addr16
jbe
mov
dec
je
mov
mov
mov
addl
daa
sbb
jae
xchg
shrb
insb
mov
movsl
sbbl
or
sub
sub
xchg
loopne
push
xorl
dec
jo
push
enter
pop
into
stos
mov
movsb
sarl
inc
pop
mov
imul
sbb
scas
loop
into
cmpsb
dec
sub
sub
and
ret
inc
mov
mov
arpl
mov
out
in
mov
adc
je
test
pop
popa
sbb
lds
mov
loopne
out
stc
sub
sbb
adc
fnop
jne
push
sbb
xchg
mov
mov
and
nop
mov
out
inc
cmp
negl
cs
stos
xchg
das
in
cmp
mov
gs
pop
aas
test
xor
xchg
sub
cli
das
testl
fadd
outsl
cmpsl
xor
cmp
inc
rcll
std
rol
add
push
adc
add
mov
push
scas
sbb
sub
push
push
pop
lods
pop
movsl
aas
ljmp
lods
mov
lock
mov
jne
push
add
aas
clc
ds
push
stos
adc
cmp
negl
mov
roll
pop
and
clc
movsb
pop
xchg
insl
xlat
aam
and
adc
rcll
aaa
in
dec
jp
loop
adcb
loopew
cs
xchg
lea
mov
loopne
dec
cli
jmp
enter
les
ficomps
lret
std
lret
sbb
ds
adc
xorb
or
mov
and
cs
mov
aad
pop
loope
test
daa
and
mov
xchg
push
mov
sbb
push
imul
adc
ret
jp
lea
mov
jmp
in
sbb
add
xchg
push
mov
mov
jmp
dec
je
push
or
dec
push
or
xchg
jmp
jg
enter
lcall
jecxz
clc
or
push
push
adc
popa
xor
push
imul
sub
es
mov
out
daa
fdivrl
ret
ss
push
sarb
sarl
fcmovnb
mov
mov
add
mov
adc
cmpsb
add
lret
stos
and
addr16
sti
out
fdivrs
gs
inc
mov
ret
loopne
shl
push
and
sub
xor
insb
imul
sub
add
pusha
aam
scas
fcoms
pop
popa
cmp
imul
and
inc
add
lods
aam
data16
shlb
xor
sub
daa
adc
lods
cmp
in
lret
mov
aas
mov
push
mov
fwait
or
inc
mov
jo
or
sbb
and
sbbl
pop
clc
push
push
insl
sub
out
in
aam
inc
or
ljmp
cmp
jb
sub
cmpsl
push
iret
xor
lahf
rcrb
mov
push
sahf
mov
cmpsb
jp
inc
pop
jmp
add
outsl
loope
pop
push
pop
jnp
nop
inc
push
fstps
pusha
setle
scas
mov
iret
hlt
and
loopne
jmp
xor
out
mov
mov
inc
into
call
add
or
pusha
or
mov
pop
lret
flds
cld
fcoml
mov
cmp
roll
hlt
and
scas
divl
cmpsb
sbb
into
mov
xchg
ffreep
and
pop
adc
pop
push
lock
imul
fsubrs
lea
xor
out
mov
sbbl
lret
stc
sarb
jmp
xor
popf
cmp
adc
pushf
inc
push
push
jae
or
jb
fisubrl
pop
std
jl
jmp
xor
jb
xor
or
mov
or
scas
xchg
scas
aas
inc
add
xor
addr16
jo
or
testb
cli
adc
push
sub
sbb
mov
mov
inc
mov
mov
fldenv
std
sahf
jnp
dec
xchg
add
insb
pop
push
dec
add
sbb
addr16
repz
xor
inc
and
mov
jo
into
jge
xchg
rcll
icebp
sbb
push
xchg
dec
fisttpl
out
cltd
mov
sbb
call
xor
inc
lds
push
adc
enter
push
xchg
sub
mov
jnp
dec
push
jecxz
movsb
punpckldq
jo
cmp
aas
cmp
addl
or
fisubrl
add
fadd
adc
fldt
cmp
pusha
jp
push
enter
mov
lahf
out
shll
dec
jmp
test
icebp
mov
mov
cmc
jg
adc
in
jns
mov
mov
lret
shll
jmp
mov
les
dec
mov
stos
pop
sub
pop
data16
push
cmp
mov
mov
test
out
std
addr16
mov
lcall
add
jl
jge
int
cmp
inc
push
inc
inc
mov
mulb
jo
mov
cli
pop
sbb
pushf
dec
cmp
lret
test
mov
ljmp
push
mov
fldenv
inc
dec
jno
add
data16
call
mov
sti
ja
inc
jcxz
mov
data16
loopew
int3
in
ljmp
jbe
lds
add
xchg
shl
pop
cld
pop
add
cli
and
std
pop
inc
sub
int3
dec
lods
out
in
sbb
pop
js
in
fcomps
pop
scas
shll
ja
adc
and
test
fistpl
cwtl
jbe
dec
in
mov
push
pop
sti
xor
push
mov
sbb
mov
fsubrl
scas
cld
xchg
fisubrl
leave
pop
lahf
leave
cld
test
outsl
pushf
adc
mov
fistl
test
sub
icebp
adc
mov
mov
dec
mov
je
or
lods
adc
clc
push
jae
jle
data16
dec
xor
cmpsb
adcb
fwait
sbb
lock
outsl
jl
jmp
pop
stos
cmc
shr
imul
fdivp
mov
fwait
push
jmp
xchg
test
aam
mov
aas
sub
xor
sbb
loop
mov
mov
and
ret
in
and
lahf
sbb
cltd
bound
sub
sbb
cmp
mov
pop
sbb
gs
int3
cwtl
out
aaa
sahf
fsts
mov
ret
xchg
js
cmpsl
subb
mov
sahf
in
ret
cmp
mov
into
or
or
mov
stc
xchg
rorb
movsl
movsb
push
das
das
movsb
int3
in
inc
ret
jp
nop
xchg
mov
cs
lds
insb
pavgw
mov
xorps
lahf
ficoml
mov
push
push
jge
aam
sub
and
filds
mov
inc
jge
clc
std
fistpl
push
aam
stos
xor
shr
test
ja
mov
jae
cmc
cmp
and
jne
pop
ja
popa
adc
lock
fildl
pusha
push
jno
bound
or
cmp
scas
add
mov
jmp
pop
cmpsb
cmp
pusha
or
cmp
push
fsubr
mov
jl
out
cmp
test
sbb
pop
fistpl
jb
pop
jge
adc
int3
ljmp
xchg
or
insb
xor
fistl
test
fsts
xor
fsubr
aas
shrb
mov
mov
int
stos
adc
loope
and
jne
mov
xchg
sub
stos
pop
in
rol
out
addr16
lea
arpl
lret
mov
in
inc
add
popa
jl
ljmp
jecxz
ja
lock
adc
push
decl
xor
jns
and
inc
shrd
sti
loope
rorl
in
int3
dec
stos
inc
pop
fidivl
sti
lods
aam
lock
sub
sub
or
aam
push
push
xchg
mov
mov
mov
adc
out
mov
mov
lahf
ja
test
or
xor
lahf
dec
iret
bound
add
push
imul
pop
ljmp
cmp
lahf
bound
inc
cmc
stc
cltd
repz
xchg
cmp
mov
nop
pusha
test
lds
pop
mov
jnp
xchg
sahf
push
daa
lea
and
cld
pop
jns
xor
add
js
inc
or
das
sbb
mov
jecxz
andl
jnp
loop
sub
xor
adc
cmp
adc
jmp
call
pop
inc
scas
inc
rcl
jmp
and
dec
mov
pop
bound
movsb
out
inc
out
mov
sbbb
push
xchg
test
mov
test
movsb
mov
mov
xchg
inc
push
lds
or
fstpt
sahf
fbld
mov
movsb
leave
xlat
in
adc
in
lds
xlat
jns
ljmp
jbe
push
mov
pop
mov
lods
xchg
loope
or
jno
sub
cs
mov
adc
fists
repnz
mov
cmpl
push
dec
repz
add
gs
nopl
add
push
fdivs
adc
jns
jae
pop
ret
or
loop
push
jmp
cmp
test
shrl
cltd
xorl
shll
aam
add
scas
ss
xor
mov
stos
adc
sub
in
mov
inc
cli
ret
rcr
push
stos
icebp
mov
lret
ds
fcoms
das
dec
scas
gs
repz
pop
xchg
add
lret
push
adc
pushf
rorl
in
test
pop
or
insl
aad
sbb
jae
ja
pop
imul
mov
test
sub
mov
push
mov
sub
sbb
dec
ss
fcomp
mov
gs
dec
jmp
pop
and
arpl
mov
clc
jnp
pop
lods
movsb
loop
dec
adc
decl
dec
xchg
sbb
out
mov
or
ljmp
dec
xor
gs
push
xor
int3
push
out
adc
imul
aam
push
and
xchg
pavgw
mov
fs
mov
ret
scas
inc
int
mov
stos
push
test
hlt
xor
xor
repz
rcrb
bound
lcall
sbb
imul
data16
loope
push
sub
push
inc
ret
add
sbb
cmp
jp
cmc
pop
test
add
fsubs
aam
test
testl
fs
and
fs
mov
movsl
sub
mov
cmc
mull
mov
lret
int3
in
test
cltd
pop
mov
into
inc
mov
push
xchg
shr
dec
aad
pop
mov
or
sbb
clc
out
repz
ficoml
lea
lds
pop
jns
mov
pop
das
and
insl
dec
loope
xlat
cmp
inc
orb
dec
xlat
pop
xchg
sub
push
and
mov
add
imul
cmc
loope
aad
flds
lods
movsl
stc
test
sbb
cld
in
jg
int
jb
shrl
and
jbe
sti
mov
xor
repz
push
jecxz
stos
ret
call
add
nop
and
into
and
inc
mov
ret
xor
aam
xchg
aas
dec
lret
dec
icebp
ret
enter
jge
mov
xor
in
jno
loope
pop
loopne
cmpl
subl
sbb
insl
lcall
push
andl
xchg
xchg
dec
cli
push
sub
jae
pop
xchg
mov
fldt
lret
adcl
dec
xor
imul
rcrl
insb
mov
sub
lea
call
lds
sbb
shl
add
js
icebp
and
inc
sbb
pop
xchg
mov
pusha
pushl
sbb
cwtl
out
cmpsl
cmc
jne
data16
loope
loop
ficompl
inc
pusha
push
pop
xchg
call
xchg
mov
sti
imul
mov
aad
out
push
sub
mov
int
sbbb
xor
pop
ds
lcall
jg
leavew
pop
in
push
pop
insl
nop
outsl
enter
loope
into
ret
shlb
mov
adc
sti
pusha
jno
in
push
sbb
xchg
rolb
dec
jbe
roll
rolb
stos
push
in
xchg
mov
push
jmp
out
fucomp
or
and
cmp
repz
cmp
arpl
pop
or
out
ljmp
dec
in
jmp
test
sbb
xchg
outsl
or
jl
mov
inc
or
das
arpl
out
mov
inc
rcrl
sbb
mov
adc
add
movsl
dec
bound
add
xor
sbb
popf
adc
icebp
nop
stos
jmp
xor
dec
sub
and
ljmp
test
les
test
sahf
xchg
mov
sbb
cld
cmc
movsb
arpl
mov
into
sahf
jg
insl
out
test
push
lds
inc
dec
incb
adc
and
popl
pop
addl
adc
jae
mov
pop
jbe
push
ljmp
ja
ror
cmp
sbb
or
pop
imul
adc
jns
inc
lahf
xchg
cmp
les
out
or
sbb
fidivrl
outsl
push
ljmp
mov
in
sbb
pushf
xchg
call
jnp
shll
sbb
adc
test
out
mov
adc
jge
cltd
and
insl
daa
xor
jne
mov
repnz
xchg
cmpsl
scas
sahf
and
daa
add
adc
mov
or
dec
adc
psraw
xchg
aam
mov
lahf
clc
xchg
lods
add
jae
pop
cmp
add
mov
mov
andl
pusha
mov
test
xchg
or
stc
and
and
mov
pop
mov
leave
mov
cwtl
dec
cs
dec
pop
mov
xchg
bound
insl
scas
ljmp
adc
mov
mov
subl
mov
sarl
fwait
xor
mulb
popa
fstpl
std
add
mulb
mov
inc
xor
inc
mov
aas
xor
fistps
shl
leave
xchg
sbb
add
add
inc
into
mov
int3
adc
into
hlt
mov
pop
inc
cmpsb
aam
adcb
push
scas
lahf
add
repnz
mov
pop
cld
xor
jecxz
add
mov
into
xchg
cltd
leave
cmp
pop
testl
jae
inc
mov
adc
popa
out
das
shr
mov
lret
repz
in
cmpsl
in
ret
lods
mov
xlat
push
pop
nop
fcompl
repnz
cmp
xor
or
cmp
or
addr16
sbb
movsb
imul
popa
scas
call
outsl
jl
mov
in
cmp
mov
inc
ds
sub
clc
push
ret
jmp
adc
xchg
inc
dec
gs
jecxz
push
push
push
sbb
pop
lods
sub
add
or
and
popf
gs
mov
sub
shr
dec
jo
repnz
sarl
pop
mov
cmp
sbb
xlat
inc
and
jecxz
loope
xchg
dec
call
lea
lods
ljmp
jne
cmp
cli
mov
fwait
clc
jle
xchg
dec
or
push
mov
dec
fwait
jmp
xor
loope
dec
daa
icebp
imul
or
pop
pop
je
pop
adc
gs
dec
xor
jno
pop
test
dec
lcall
into
xor
pusha
mov
mov
push
nop
jmp
inc
fdivr
push
xchg
jle
or
fbld
sub
inc
rorl
mov
inc
fisttpl
jecxz
cmpsb
push
fwait
mov
add
dec
jge
cltd
cmpsb
mov
sub
iret
sti
clc
or
pop
addl
mov
insb
add
inc
adc
add
mov
repz
sbb
lds
cmc
mov
mov
jl
call
mov
mov
jbe
repz
pushf
lfs
orb
cwtl
adc
ja
jp
cltd
add
testb
in
shll
xor
insl
mov
cmp
sub
rorl
mov
inc
fists
mov
xchg
push
pop
andb
mov
shll
jno
add
push
dec
cld
imul
or
jo
negl
adc
mov
shlb
or
int3
loop
jl
push
idiv
rep
and
add
xchg
mov
push
dec
jg
aaa
lds
test
cs
aas
pop
push
iret
sarb
adc
and
xor
add
or
pushf
out
mov
push
insb
mov
add
or
scas
push
cmpsl
call
xchg
mov
push
div
ret
sub
lcall
jmp
testb
sub
int
adc
insl
pop
roll
mov
jmp
add
mov
enter
push
xorl
mov
out
add
hlt
ds
bound
arpl
jno
xchg
xlat
into
sub
xor
int
mov
jb
mov
jmp
add
sub
out
cmp
add
pop
xchg
mov
jg
adc
cmp
pop
cmp
jp
add
hlt
andl
jmp
cmp
push
stos
jb
aam
mov
sti
and
aaa
fld
test
dec
setne
pushf
and
cmpsl
and
xor
inc
test
ret
mov
out
cmp
or
rcrl
mov
mov
cmp
adc
movsb
nop
and
push
outsl
pop
pop
xor
aas
into
and
cmp
mov
sarb
push
outsl
cmpsb
mov
imul
fwait
mov
pop
pop
xlat
xor
out
inc
shll
leave
leave
mov
imul
push
jge
mov
cmp
imul
cmc
adc
pop
pusha
cmpsb
xchg
cmpsb
rclb
pop
xor
mov
std
jbe
add
mov
jno
mov
sbb
lds
fsqrt
and
pop
pop
lret
fs
out
or
gs
jae
pop
xchg
add
add
roll
add
mov
jbe
out
mov
rcll
inc
sub
cmp
push
out
mov
mov
pop
add
shl
pop
pop
pop
dec
xor
je
pop
xchg
ud2
sbbb
inc
lret
test
pop
push
jne
shll
lods
test
mov
jae
mov
dec
jmp
loopne
mov
loope
call
jae
call
pop
pop
jecxz
out
sbb
inc
into
mov
cmpsl
imul
adc
xor
dec
push
fcoml
pop
cmp
cwtl
iret
rorl
mov
ljmp
cmp
pop
ss
xor
cli
sbb
int
or
mov
mov
pushf
movsb
iret
outsb
mov
sbb
enter
rcll
jle
push
test
sbb
aad
and
and
add
daa
pop
xor
jg
andl
sub
mov
or
testb
sar
sub
ds
pop
push
sbb
xchg
dec
xor
add
sub
sbb
lcall
jae
dec
popw
lret
dec
cltd
cmp
jnp
cmp
adc
rcl
lock
cmp
mov
push
and
mov
xlat
cmpsb
lock
lock
or
int
mov
push
js
dec
and
add
rol
cld
int
sbb
scas
cs
mov
sub
jmp
cli
or
addr16
inc
push
cltd
push
sbb
jg
mov
repnz
sub
ror
jge
xchg
pusha
mov
scas
xor
mov
sub
pushf
jnp
je
incl
xchg
or
jmp
and
call
enter
push
mov
mov
ret
sub
or
mov
mov
sarl
int
push
mov
shlb
leave
ret
dec
adc
mov
xchg
and
jne
sbb
daa
push
or
ja
dec
cld
xchg
call
push
pop
sbb
pushf
jge
std
inc
sub
push
inc
adc
imul
loopne
ficoml
sbbb
push
xchg
test
mov
dec
or
sbbl
imul
cmp
enter
stos
pop
fidivrl
add
ffree
mov
lret
adc
cmp
cmp
xor
push
jnp
icebp
push
mov
lods
ja
or
push
hlt
data16
jg
mov
cld
popa
jo
stos
cmpsl
push
mov
inc
push
fldl
inc
sbb
int
sbb
adc
mov
sti
push
shl
cmp
pop
jae
xor
xor
test
arpl
aad
cs
xlat
je
fcmovne
imul
and
sub
lods
test
dec
out
popa
iret
inc
fiaddl
into
push
lock
outsb
leave
sub
xlat
mov
mov
mov
ds
xor
xchg
aad
mov
xchg
outsb
sbbl
outsl
or
aaa
mov
dec
stos
cwtl
sbb
inc
and
insw
add
fstpt
bound
into
inc
inc
add
add
out
mov
or
adc
xlat
outsb
add
inc
dec
fldcw
xchg
mov
add
jne
in
cld
repz
jp
js
lock
inc
pop
and
insl
pinsrw
and
xchg
aam
ljmp
ja
test
push
mov
leave
insb
fdivr
pop
daa
or
jmp
int3
jbe
clc
rorl
push
and
inc
xchg
cmpsl
outsl
shrb
mov
dec
mov
push
jecxz
cmc
aas
pop
add
and
xor
sti
rclb
pop
xor
dec
fisttpll
or
sbb
das
mov
add
dec
outsb
sbb
cmp
and
shll
mov
jo
in
mov
ss
jne
cmpsl
roll
inc
lea
cli
push
nop
xchg
loop
in
scas
scas
jno
sahf
add
push
mov
fwait
jge
sbb
pop
cmp
outsl
outsl
lds
neg
aad
pushf
jne
shlb
aam
fidivl
pop
out
loope
cwtl
ljmp
popa
testl
xor
xor
leave
inc
cmp
jne
mov
pop
dec
out
arpl
jo
call
pop
icebp
sub
repnz
popa
gs
popa
and
in
or
roll
sbb
push
adc
push
std
add
or
add
movsb
rolb
mov
jbe
inc
sbb
push
icebp
into
subb
cltd
xor
sbb
aad
jmp
mov
inc
in
inc
pop
xchg
ds
pop
je
pop
push
call
mov
jb
in
sahf
dec
cmp
pop
fwait
mov
push
mov
cmp
popf
insb
adcb
loopne
dec
adc
dec
add
jne
mov
fsubrs
roll
jg
mov
icebp
pushf
stos
aad
pushf
cmp
add
testl
inc
pop
cmp
lret
loop
cmc
add
add
adc
pop
add
popf
test
dec
pushf
dec
ret
flds
and
lcall
xchg
dec
scas
ret
mov
jle
or
pop
out
mov
mov
inc
js
sahf
mov
inc
into
test
mov
xchg
repz
shlb
inc
ja
mov
xor
xchg
fdiv
imul
fwait
cmpsl
stc
in
fldl
sti
jecxz
out
fisttps
inc
insl
push
cwtl
orl
sbb
insl
rorb
ret
ja
jne
lret
scas
cmp
jne
and
sub
pcmpeqd
ret
and
pop
pop
jo
std
sti
xsha256
cmpsb
aam
arpl
or
inc
iret
aad
mov
lcall
rolb
aas
jecxz
jo
call
push
inc
add
and
int3
xchg
rol
push
xchg
iret
xor
mov
popa
add
lahf
sub
repnz
mov
adc
outsb
ret
lahf
out
lods
insb
xor
lea
das
insb
pop
jle
stos
jo
adc
dec
mov
jmp
mov
mov
mov
loop
dec
pusha
jle
in
loope
adc
aas
and
jno
icebp
jle
pop
testb
jge
hlt
push
shl
jo
xor
jno
cs
bound
loope
bound
inc
inc
pop
je
sbb
jnp
stc
dec
inc
jle
imul
or
shrl
adc
dec
mov
cmc
xchg
cmp
jg
xchg
sbb
sub
add
cmp
hlt
add
sbb
idivb
repz
shrl
push
xchg
xchg
cmp
shll
mov
frstor
inc
mov
adc
sarl
pop
inc
jo
jo
fisttpll
inc
cmp
andb
leave
pusha
adc
cld
jg
sbb
mov
and
lea
stos
into
mov
adc
fld
or
mov
call
xchg
mov
mov
push
pop
shl
movsb
into
and
gs
jne
jnp
jns
push
cmp
repnz
inc
out
mov
out
cmp
cmp
sub
or
mov
icebp
inc
pushf
maxps
add
sbb
sbb
sbb
fstpl
subb
mov
cltd
daa
cwtl
mov
inc
addr16
pop
jns
test
loop
pop
xor
adc
lret
test
sub
fdiv
into
sbb
push
adc
fistps
sti
push
sub
mov
iret
dec
flds
in
dec
xchg
in
jg
test
aaa
arpl
clc
dec
inc
call
xor
or
arpl
and
in
rolb
jne
mov
inc
xchg
xchg
push
aad
cmpsb
and
lahf
add
jns
mov
popf
xchg
into
xlat
xchg
dec
lea
loopne
mov
xchg
jno
aaa
cmp
je
lret
loope
fwait
cld
sub
and
xchg
or
adc
xor
std
pop
adc
cmp
xchg
jne
dec
or
sub
and
mov
sbb
ret
lahf
push
insl
imul
dec
push
add
mov
les
dec
adc
pop
xorl
hlt
out
sbb
adc
jmp
jge
mov
jne
pop
mov
jl
test
xchg
stc
pop
xor
fldcw
inc
mov
cltd
fs
pop
leave
test
jecxz
outsl
insl
call
xor
or
sbb
shrl
sti
lcall
dec
jno
push
fwait
jbe
fdivr
and
je
dec
xchg
lea
ret
jl
dec
push
adc
xchg
mov
cli
aas
jae
insb
mov
pop
and
adc
hlt
aaa
xor
cmpsl
and
dec
test
in
fistpl
jle
cmp
addr16
xor
call
mov
fwait
fs
aad
cmpsl
in
sar
xchg
mov
movsb
sti
jbe
push
ss
daa
nop
cltd
cli
cltd
mov
add
in
lea
push
xchg
inc
dec
jae
das
cmp
dec
mov
in
cmp
cmp
adc
add
fs
fiaddl
pop
imul
and
xorb
jnp
iret
push
mov
sti
dec
out
dec
sub
xlat
int
dec
push
cmp
popf
rorl
adc
jmp
hlt
add
mov
stos
jne
xor
xor
ss
nop
outsl
adc
fiaddl
and
sub
dec
inc
push
jg
mov
cltd
lcall
shlb
add
push
add
push
in
negb
cmp
sub
jae
pusha
push
adc
xchg
push
fldt
adc
cmp
popa
add
fcmovne
xchg
dec
movsb
and
mov
dec
pop
hlt
pop
jnp
adc
jno
cmc
jo
sbb
push
jmp
es
or
loop
add
mov
cwtl
js
sbb
sarb
pop
insb
pop
cmp
xchg
cmp
addr16
stc
inc
adc
mov
lods
daa
rcl
test
push
mov
push
jmp
jb
xor
in
push
addr16
imul
sahf
adc
and
or
leave
pop
cmpb
pop
lods
dec
push
icebp
mov
or
jecxz
sub
or
jo
adc
inc
gs
cmp
into
xchg
mov
dec
jnp
jp
or
sub
pop
mov
out
jno
mov
inc
push
sub
stos
enter
leave
shr
ret
pop
aad
fdivrp
push
mov
repz
cld
xchg
sub
imul
lahf
aaa
sarl
and
lret
cld
and
ret
pushf
cmpsb
mov
adc
daa
cmp
push
jecxz
xchg
xchg
and
sti
xor
leave
add
int
inc
sub
movsb
sub
out
cmpsl
inc
sub
arpl
xchg
push
es
xchg
stos
and
sub
xor
gs
insb
mov
cmpsl
xor
mov
jmp
stc
pop
jae
cld
xor
in
sub
dec
and
daa
fidivrl
sbb
fstpt
into
str
xlat
jp
push
dec
sub
loopne
js
std
pop
sbb
push
mov
arpl
mov
sbb
inc
stc
and
mov
test
ds
pop
adc
pop
add
mov
jae
leave
mov
lock
xchg
std
cwtl
and
jb
mov
test
imul
inc
or
sti
test
and
jge
pop
rcr
add
lea
cs
insb
xchg
popf
or
out
and
fists
adc
mov
adc
mov
nop
cld
fcomps
lahf
jl
xchg
adc
cld
push
add
daa
enter
outsl
fadds
dec
testl
push
arpl
movsl
push
pop
in
push
mov
mov
test
pop
xchg
push
stos
or
fdivrs
inc
jmp
std
fsubr
push
fwait
pop
inc
test
jb
pop
imul
xchg
stos
mov
fisttpll
jb
faddl
xchg
xchg
cmpsl
mov
sti
mov
pusha
cltd
outsb
jno
pop
push
xchg
pushf
sti
int
and
xor
dec
test
cmp
xchg
in
aam
jns
fs
add
xchg
rol
push
sti
adcb
sbb
gs
xchg
or
inc
xchg
cmp
pop
pop
pop
cmp
cli
shl
mov
jnp
and
call
sub
jle
lret
hlt
ss
mov
sbb
add
out
cmc
mov
pop
pop
lds
cmp
std
xor
sbb
xchg
test
xor
adcb
in
jl
dec
dec
bound
pop
mov
fnstenv
xchg
icebp
jbe
loop
xchg
ret
add
xchg
or
or
inc
enter
pop
inc
in
iret
dec
mov
cmp
lea
enter
ljmp
sti
fnstcw
xchg
inc
outsl
cltd
ffree
and
nop
jnp
jnp
or
lds
and
shlb
mov
loope
ret
jle
add
mov
cmp
iret
inc
popa
test
xor
orb
sbb
push
mov
data16
add
negl
popf
out
xchg
rcl
les
ret
ds
jle
je
out
loopne
es
imul
mov
sbb
or
addr16
and
cmpl
xor
dec
fistpll
cwtl
pop
or
ja
pusha
inc
inc
fimull
xchg
leave
mov
xchg
mov
jne
mov
frstor
dec
and
xchg
ret
mov
mov
dec
push
cmp
add
lds
mov
fsubr
fwait
sbb
mov
dec
mov
int
push
mov
add
xlat
adc
mov
pop
jb
sub
test
or
sub
or
add
cmp
cmp
int
stc
add
repnz
repnz
xchg
cmp
lret
cmp
xchg
or
sub
mov
mov
lock
ss
mov
push
std
es
jnp
dec
icebp
pop
jg
mov
or
nop
mov
jmp
fsubrl
cmpl
mov
sub
stc
ljmp
jnp
mov
cld
add
dec
cmp
out
sub
jecxz
fmull
xchg
je
arpl
mov
mov
push
sub
adc
mov
xor
cmp
xchg
ficoms
imul
sub
adc
mov
pop
roll
test
jns
shll
stos
dec
add
loopne
clc
mov
mov
inc
xorb
in
or
jne
sub
call
out
cmp
pop
movl
les
lock
out
lcall
lret
loop
cltd
sti
sub
cmp
adc
les
jl
pop
and
sbb
lahf
or
cwtl
gs
hlt
dec
dec
stc
mov
xchg
push
cmp
rcll
sub
das
xor
in
sbb
pop
rol
ret
push
test
push
or
xchg
dec
addr16
aas
dec
cwtl
andb
ljmp
cld
gs
push
adc
push
or
add
mov
outsl
jge
pushl
movsb
xchg
xor
add
jle
in
and
inc
mov
fcmovbe
pop
ds
adc
stc
jo
divl
mov
or
and
pushl
pop
aas
xor
xlat
push
mov
lods
sub
jno
fdivr
fwait
sahf
and
sbb
mov
push
jbe
xor
cmp
cmp
sub
fsubl
sub
ds
int3
cmp
mov
or
jmp
inc
xchg
popa
dec
test
mov
test
dec
adc
pop
jmp
mov
lcall
pop
jmp
jmp
jecxz
xchg
shrl
test
lock
cmp
sbb
inc
xor
inc
mov
dec
inc
sub
push
add
push
inc
and
xchg
clc
dec
dec
cmp
aad
adc
push
lock
add
stos
push
sub
insb
jnp
lds
mov
mov
sbb
je
aaa
repz
lea
enter
clc
pop
cmp
ret
pop
call
andb
and
xor
inc
cs
cli
popa
cmp
pop
fisubrs
ficompl
clc
mov
xor
fs
je
ja
popf
add
in
ja
hlt
cmp
imul
repz
js
mov
jne
xchg
arpl
aas
scas
movsl
push
mov
mov
and
add
xchg
pop
inc
int
test
aad
popa
sti
mov
xchg
inc
add
stc
mov
fistpl
mov
hlt
push
sub
lret
pop
pop
iret
fidivrs
test
push
dec
mov
pop
cld
dec
mov
into
xchg
adc
push
aam
or
push
push
add
dec
inc
cmp
mov
fdivr
fwait
stos
dec
jbe
je
mov
scas
call
lcall
inc
cs
push
divl
push
loope
cld
pop
rcrl
mov
sub
std
shlb
movsl
pop
in
mov
sbb
dec
fwait
cmpsl
idivl
push
bound
stos
cltd
add
roll
pusha
push
in
les
dec
sbb
daa
addl
pusha
negl
movsl
xchg
xchg
scas
jp
int3
xor
or
lcall
iret
xchg
ljmp
jb
jb
cmpsl
sub
xchg
push
lods
ret
or
rorb
dec
push
mov
mov
mov
sahf
xor
pop
xor
lcall
ja
fwait
xchg
adc
jp
sub
mov
sarl
mov
xor
sbb
popa
and
inc
out
enter
mov
fisubl
dec
sub
sub
pop
movsb
lock
mov
shrb
lret
adc
xchg
mov
es
jg
dec
insb
clc
repz
bound
outsb
fcoms
cli
ljmp
sti
in
out
sarb
push
jp
xor
insl
sub
inc
or
ja
pop
lods
insl
cld
lods
sarl
arpl
push
into
fmul
les
jge
arpl
stc
movsl
pop
pop
andl
int3
pop
std
fsub
xlat
cmp
sub
stos
std
or
sbb
pop
mov
jmp
mov
aaa
and
fisubl
test
movsl
cltd
or
xlat
aas
popa
in
mov
mov
loop
mov
loop
ljmp
mov
inc
and
inc
enter
sub
mov
mov
mov
leave
in
jo
dec
jb
xor
pop
repz
aas
mov
adc
mov
movsl
popl
sahf
out
dec
push
adc
or
or
enter
in
movsb
popf
sti
xchg
iret
jo
inc
scas
enter
iret
pusha
xchg
fs
fldcw
fucompp
fildl
lret
ss
xchg
loop
xchg
pop
push
lock
shlb
mov
in
into
jno
dec
mov
pop
mov
push
xchg
testb
ss
mov
stos
es
int3
jg
jle
dec
loop
mov
and
enter
pushf
ljmp
arpl
in
jge
pop
decl
divl
mov
in
jns
and
cmpsl
jp
pop
xchg
fxtract
mov
scas
mov
sub
test
mov
jb
jb
iret
push
cmpsb
mov
xlat
and
add
sub
jle
stos
scas
xor
aaa
mov
jae
sbb
rclb
sbb
iret
scas
loopne
in
sub
call
insb
jge
cmpsb
pop
jo
jle
push
mov
jle
and
aas
mov
cmc
push
mov
jg
sub
daa
push
aas
daa
jmp
movsb
lods
jns
cmc
cmp
mov
call
aam
fcomps
sbb
mov
in
push
mov
xchg
mov
and
jns
and
dec
xorb
shr
call
pop
dec
adc
movsb
or
call
dec
aas
cld
inc
mov
cmpsb
fildl
imul
inc
add
sti
dec
hlt
xor
add
or
mov
insb
jg
addr16
or
sub
jp
rolb
ret
sub
les
jb
lret
xor
cmp
mov
push
sbb
cmpsb
pop
addr16
adc
movsb
dec
fdivp
fcoml
sub
mov
in
fwait
mov
add
and
rcl
outsb
mov
cmc
sbb
fisttpl
out
add
hlt
push
mov
lods
sbb
sub
stos
pushl
sti
mov
jg
outsb
je
rorb
iret
cli
sbb
xchg
and
pop
leave
and
sbb
or
adc
lds
adc
sub
and
inc
ret
outsb
mov
fsts
int3
xor
cld
push
pop
aam
mov
test
mov
push
mov
xor
push
push
pushf
sahf
cld
mov
ja
movsb
inc
pop
in
sbb
js
xchg
out
jbe
mov
pop
into
mov
add
sar
jp
cltd
pop
add
xlat
lds
out
stos
adc
in
dec
iret
cmc
je
fcoms
add
dec
xor
sbb
movl
insl
lahf
xlat
ftst
push
ja
ss
repz
int3
mov
in
mov
std
stc
leave
shl
je
movq
addr16
aaa
mov
test
insl
jae
or
push
call
add
lcall
mov
cmc
xor
ret
cmp
cltd
aam
sub
mov
sub
bound
pop
add
subl
add
push
fmulp
push
xchg
jno
xchg
dec
pop
rorb
or
cmpsb
int3
sub
es
add
and
and
ficoml
add
outsb
add
dec
pusha
scas
jae
xchg
addl
jbe
jp
shrl
sub
push
aaa
mov
and
sub
es
push
jns
es
mul
sub
cmc
out
in
adc
fs
add
lods
sub
cmp
icebp
movsl
stc
ds
icebp
dec
xor
inc
pop
clc
out
idivb
fisubl
push
mov
cmpb
cld
stos
mov
inc
add
gs
xchg
data16
pop
push
jle
add
jne
mov
or
jle
xchg
lock
ret
adc
lods
ret
or
fldenv
lods
sub
js
in
ja
mov
movsl
hlt
jp
or
jo
test
mov
mov
cmp
outsl
push
ja
shll
mov
rcrl
in
xor
clc
leave
dec
in
into
daa
mov
mov
and
jp
popa
or
js
fldl
xor
jp
es
xchg
ss
popl
adc
xchg
push
or
push
xchg
js
pop
fs
xlat
mov
xchg
aam
pop
punpcklwd
loop
add
sub
and
imul
subb
shl
inc
pop
cmp
add
xchg
dec
jns
pop
pop
vmread
push
lret
outsb
add
cld
mov
sbbb
push
dec
mov
pop
pop
loop
and
or
loope
jl
leave
imul
dec
sub
cmpsl
dec
push
pusha
mul
mov
xor
sbb
int
bound
inc
pop
xor
mov
mov
mov
int
mov
jp
sbb
mov
mov
sub
in
rcrl
or
xchg
xchg
pushw
repnz
push
fnsave
mov
inc
cwtl
mov
add
gs
mov
stos
adc
and
cmova
cmp
fimull
push
out
push
test
jecxz
inc
test
adc
adc
adc
popf
dec
pushf
or
jbe
movsl
lods
sbb
cmp
push
jno
inc
test
mov
aad
jns
fisttpll
sbb
lods
inc
seto
push
divps
xor
movsb
insl
loopne
daa
sub
pop
lcall
or
inc
add
mov
pusha
push
cs
aam
fisubrs
cwtl
rorl
pop
nop
pushf
fsubp
lret
sti
push
cs
inc
mov
sti
jecxz
push
cs
fimuls
mov
ljmp
jl
push
push
mov
aad
fistps
xor
movsl
in
jns
adc
mov
add
xlat
mov
fsubp
out
mov
lahf
pusha
mov
jbe
pusha
mov
cmp
or
inc
lods
push
rorb
mov
call
pop
popa
aaa
inc
mov
pushf
and
push
jae
pop
iret
or
mov
and
jne
jge
loopne
or
outsl
fwait
outsb
in
push
and
jge
sahf
out
xor
adc
push
mov
push
lds
adc
mov
or
das
sarl
sti
mov
pop
adc
movsl
pop
mov
fdivrp
aam
push
test
cmp
in
inc
orl
or
orl
movsb
aas
fdivp
cld
xchg
or
ljmp
xor
and
sbb
rcr
sub
mov
adc
cmp
enter
mov
dec
pop
int3
mov
gs
sbb
adc
or
in
mov
std
push
push
inc
test
call
pop
out
inc
push
data16
jmp
andl
ljmp
cmpsl
test
mov
fsubl
stc
mov
lock
xchg
inc
cwtl
insl
je
xchg
xchg
push
test
bound
inc
sub
inc
xor
add
sbb
fidivl
ljmp
jge
adc
out
xchg
in
fidivrl
ret
add
cmp
fdivrs
int
arpl
or
arpl
out
or
adc
push
mov
out
loope
lahf
shlb
push
inc
jo
fwait
aam
add
stos
ret
sub
mov
sub
and
push
insb
add
flds
jmp
dec
clc
mov
xlat
lahf
dec
cld
rol
mov
aaa
or
pop
mov
popa
push
mov
push
adc
into
arpl
adc
lea
or
sbb
pop
test
aad
ret
insb
sbbb
sbb
sbb
lret
js
cwtl
sub
sub
adc
loopne
icebp
push
jo
mov
cld
in
xlat
in
or
arpl
mov
inc
arpl
in
gs
jl
mov
jl
je
es
lret
cld
mov
enter
dec
adc
jo
shl
xlat
aam
dec
push
pop
push
fistpl
movsl
pop
repnz
push
add
seta
bound
mov
jae
repz
inc
or
sbb
daa
nop
mov
lods
fidivrl
and
mov
sbb
cld
pop
daa
es
imul
pusha
ljmp
lret
mov
or
into
cmp
mov
xlat
xchg
sub
lods
ret
and
dec
bound
inc
mov
sub
data16
popa
pop
pop
and
push
sahf
in
fsubrs
xor
inc
mov
or
and
pop
pop
out
test
and
test
scas
mov
bnd
add
adc
inc
push
push
fstl
aam
sbb
push
popf
scas
test
cltd
sbb
mov
and
push
jmp
xor
dec
ja
clc
sbb
mov
movsb
lea
inc
xor
std
mov
das
dec
mov
inc
and
lret
inc
lret
pop
and
push
or
data16
ss
sub
inc
pop
aam
sub
idivl
loopne
repnz
aad
pop
mov
and
testl
aaa
xchg
sbb
or
sbb
stos
pop
into
jb
dec
mov
and
scas
sub
fdivrl
mov
xchg
dec
xor
pop
imul
add
or
cltd
mov
ds
sbb
mov
std
mov
or
mov
ret
fcmove
adc
bound
jle
dec
sub
dec
lret
mov
test
fcomps
scas
xchg
loop
ficomps
imul
repz
jle
and
test
mov
insb
sbb
and
loop
mov
daa
fnsave
fwait
dec
inc
or
pop
movsl
cmp
inc
enter
cmp
rol
clc
fcomps
mov
ja
les
cmp
testb
inc
into
add
fldenv
jae
loope
mov
and
int3
rclb
xor
lds
lock
loop
jo
xor
dec
mov
ds
mov
add
fldl
push
sbb
in
aam
xchg
loopne
push
and
or
and
leave
mov
mov
inc
mov
shlb
sbb
mov
mov
add
mov
jecxz
popa
bound
ret
dec
and
in
adc
leave
sub
sub
mov
pop
xor
in
jne
mov
mov
pop
rcrb
adc
je
ret
shlb
sti
movsl
pop
add
dec
pop
push
ret
enter
jne
jge
lea
dec
and
insl
xchg
scas
and
or
xor
xor
and
aam
hlt
lock
fsubrp
loope
ret
jbe
ret
mov
clc
ficoms
idiv
jo
shlb
and
dec
sub
pop
sbb
repnz
xchg
and
sub
popf
addr16
xchg
mov
lods
pushl
stos
pop
jge
push
out
stc
mov
xchg
dec
repz
jmp
jo
clc
jo
ss
mov
ret
iret
lret
push
cmpsb
lea
or
mov
ret
dec
filds
pop
ljmp
xchg
lock
decb
ret
xor
cwtl
lea
pop
or
imul
cmc
in
andb
ror
aas
inc
daa
loopne
scas
insb
cli
repnz
pop
pop
lret
ljmp
js
jle
fistps
mov
inc
pushf
aas
aad
push
addr16
mov
dec
mov
push
sub
and
adc
out
xchg
cmp
xor
mov
arpl
or
lret
insl
adc
cmp
out
int3
push
stc
mov
dec
test
jb
or
pop
lock
cld
clc
cmpsb
int3
inc
xchg
sbb
loopne
sbb
pop
jae
clc
sub
mov
xor
mov
xor
xchg
inc
lcall
iret
mov
cld
inc
cmpsl
andl
mov
fstl
ja
adc
pusha
mov
lea
leave
mov
into
imul
xchg
shl
mov
jo
insl
adc
imul
ja
ret
push
imul
push
ljmp
stos
pop
inc
rorl
decb
mov
fnstsw
mov
pop
mov
dec
inc
ss
or
xchg
into
push
sbb
in
push
rolb
movsb
std
scas
xchg
std
cmp
stos
out
push
repnz
test
in
fbstp
xor
out
and
push
imul
aaa
pop
in
bound
inc
in
loop
int
xor
mov
dec
movsl
mov
inc
cmp
push
pop
dec
testl
xor
test
sahf
dec
addr16
stc
nop
xchg
mov
popa
dec
in
push
mov
jg
mov
pop
dec
xlat
pusha
xchg
xchg
push
add
sbb
int3
jmp
mov
rcll
xor
sbb
das
inc
test
out
hlt
cli
inc
fdivr
cmc
inc
testb
sarb
iret
pop
rorl
rcr
xchg
inc
orb
sbb
or
sti
dec
shrl
lods
xor
jecxz
xchg
jecxz
out
sahf
icebp
ss
or
hlt
xchg
pop
data16
xchg
or
dec
arpl
rorl
inc
cmp
nop
jp
into
lret
mov
inc
xchg
rolb
sub
ret
ds
daa
lret
jae
hlt
dec
les
or
lcall
cmp
dec
mov
out
cmpl
add
adc
inc
inc
dec
inc
xor
not
xor
icebp
and
std
pop
jae
inc
movsl
adc
push
sar
in
ror
out
cs
sub
jg
enter
push
sub
cmp
mov
std
cmpsl
add
fildll
inc
add
lods
push
dec
lea
xchg
mov
xor
adc
mov
sahf
jbe
jne
lahf
lret
sbb
xor
insb
push
or
adc
test
mov
pop
mov
jne
aad
xchg
outsl
scas
nop
clc
push
dec
out
xor
mov
mov
xchg
sbb
add
sub
mov
test
shr
mov
add
dec
bnd
bound
mov
add
int3
test
add
loope
dec
fcom
jmp
jg
call
cmp
cltd
incl
sub
mov
sub
fadd
inc
stos
aam
lock
pop
xor
imul
aaa
lock
in
mov
sub
inc
sub
fwait
jge
mov
scas
cli
jae
push
cmp
icebp
xor
std
inc
mov
in
push
or
dec
cmp
lock
inc
lahf
mov
lcall
xchg
stos
arpl
jg
or
pop
and
ss
pop
xor
xchg
fdivr
sbb
mov
ljmp
cs
lock
jmp
fisubrs
pop
jbe
and
popf
test
fwait
loope
shr
inc
sbb
iret
xchg
mov
add
inc
es
loopne
add
sub
or
add
int3
push
mov
psraw
add
inc
gs
push
mov
xlat
dec
mov
lods
xor
sub
jmp
add
pop
lods
orl
mov
xor
add
and
addr16
or
out
jecxz
pop
mov
rolb
stos
dec
dec
pop
or
xchg
and
jg
mul
ja
adc
adc
dec
sar
jo
enter
movsl
and
sbb
stos
test
pushf
lock
int3
pusha
scas
out
xchg
test
add
andb
pop
cmpsb
push
jecxz
push
mov
outsb
and
fmul
pop
fcoml
and
test
adcb
dec
adc
dec
add
pop
jae
push
in
or
pop
hlt
cs
adc
pushf
jne
insl
rorl
cmp
pushf
es
nop
mov
sbb
adc
mov
push
dec
fmulp
stc
rclb
bnd
imull
jl
fisttpl
data16
push
ljmp
jae
ljmp
and
insb
mov
dec
lds
xchg
lret
lret
lret
and
pop
int
sarl
pop
fdivrs
cmpsb
mov
jmp
and
lea
insb
dec
mov
inc
pusha
dec
xor
inc
add
and
ret
popf
faddl
mov
mov
sub
jmp
rolb
or
nop
xchg
std
add
and
sbb
add
cmp
and
push
sti
jecxz
inc
jle
daa
pushf
mov
xchg
inc
sbb
cmp
mov
add
push
push
mov
rclb
or
aaa
dec
add
push
push
push
std
push
dec
cmp
rcrl
loope
out
push
inc
dec
jl
out
adcb
pop
mov
pop
xor
adc
test
inc
nop
repnz
dec
test
mov
adc
mov
in
into
mov
jp
stc
pop
pop
xchg
out
pop
xchg
xadd
fcmove
sub
aas
ljmp
clc
pop
xchg
mov
mov
and
mov
bound
jge
aad
test
or
jno
or
pop
xchg
das
jne
and
push
xchg
xor
inc
mov
stos
inc
ds
in
adc
fwait
call
es
inc
inc
ds
test
sahf
scas
andb
loopne
lods
cmpsb
data16
adcl
adc
or
lahf
lret
scas
cmpsl
dec
pop
or
jecxz
daa
push
ret
mov
jge
iret
push
dec
pop
lret
xchg
jecxz
movsl
xlat
jne
or
adc
outsb
mov
fdivp
cmpsl
cmpsb
push
stos
sub
or
movsb
dec
cmp
adcb
clc
fisubrs
sub
push
lcall
fcmovne
xlat
movsl
fcmovbe
sub
js
adc
testb
or
mov
shl
cmpsl
outsl
pop
ja
dec
pop
and
inc
loopne
in
pop
stos
popf
inc
incl
inc
jecxz
xchg
fnstsw
mov
add
scas
xchg
in
inc
jl
push
shll
ficoml
outsl
fidivrl
cmp
scas
pop
inc
cmc
rorb
adc
xor
mov
fisubrs
std
cmp
sub
out
test
ja
or
jge
fcompp
push
call
insb
dec
dec
cmp
xchg
subl
pop
mov
dec
inc
or
and
inc
loop
cmp
subb
add
mov
sbb
lahf
aaa
pop
mov
stos
out
push
call
jns
push
enter
pop
mov
dec
pop
shll
pop
push
push
in
cs
cmpsb
lods
cmpsl
es
jbe
clc
inc
cmpsb
and
sub
inc
dec
inc
popf
jge
aad
jp
dec
pop
arpl
dec
push
es
mov
sbb
jo
xlat
stos
sub
add
sbb
popf
iret
xlat
movsl
sub
or
jns
out
rorl
sbb
push
fstl
dec
mov
test
push
iret
dec
adc
mov
test
jae
jns
fisttpl
add
pop
or
mov
sbb
fisttpll
ret
rorb
iret
enter
daa
inc
enter
jo
push
fcmovu
rcrl
pop
sub
sub
pop
cmpsl
dec
xor
sti
or
or
hlt
fmuls
test
pmaxsw
iret
mov
dec
inc
xor
xlat
jne
repz
popf
mov
xchg
enter
dec
repz
hlt
std
mov
xchg
je
loopne
push
and
addb
mov
ja
cli
flds
mov
pop
push
sub
adc
shl
dec
int3
mov
test
pusha
insb
or
ja
sti
adc
or
lock
inc
and
jg
std
or
loope
mov
mov
xchg
idivl
jno
cmp
in
stos
in
jnp
jns
jmp
and
jmp
sbbb
rcl
pop
add
sub
lods
loopne
inc
call
out
push
lret
les
adcl
mov
push
dec
enter
ss
cmpb
inc
mov
in
xchg
and
mov
test
cli
sub
cmp
cmp
and
jns
sbb
adc
cltd
inc
aaa
mov
sub
sub
dec
add
je
popf
mov
adc
push
cmpsb
xor
hlt
xor
push
cmpsb
xor
lock
push
sub
cmp
push
mov
mov
pop
jg
test
ret
lods
sub
dec
pop
push
hlt
mov
pop
and
mov
push
xchg
cltd
lds
mov
lods
mov
fstp
and
gs
ljmp
mov
xor
movsl
popl
test
into
insl
loopne
add
jne
xchg
mov
fsubl
push
xchg
adc
adc
dec
pop
push
rcrl
imul
ja
push
mov
ret
mov
push
sub
loope
inc
mov
mov
xchg
sar
hlt
sub
in
jo
stos
jo
cli
mov
fdivl
dec
xchg
ror
jmp
movsl
mov
sbb
add
int3
enter
ficomps
sub
dec
sub
and
loop
mov
mov
cmc
push
aas
push
xorl
fcomi
movsl
dec
sub
push
in
sbb
in
pop
and
aaa
sahf
daa
mov
pop
in
and
mov
stos
sbb
jge
add
xor
xchg
pop
sbb
cltd
xor
test
les
push
xor
cld
xchg
jg
lret
or
in
push
addr16
roll
push
or
scas
or
mov
imul
mul
data16
ja
dec
xchg
cwtl
jnp
cmc
inc
inc
lods
pusha
add
jp
dec
gs
flds
repz
mov
cltd
rcr
xor
dec
sbb
sub
shrb
mov
mov
dec
cli
xchg
dec
pop
dec
shr
sub
push
notb
arpl
ja
std
ss
sbb
cmp
mov
pop
arpl
jns
rorl
inc
cmpsl
mov
xchg
les
pop
aam
xor
dec
jns
gs
ret
xchg
pop
imul
leave
mov
pop
daa
mov
out
sbb
mov
fsubr
cmc
ret
nop
xlat
insb
and
sbb
fwait
inc
sub
ret
ret
xor
push
jp,pt
mov
and
or
int
and
xchg
nop
mov
loope
pop
dec
adc
daa
sti
lea
in
inc
lock
and
or
mov
add
mov
stos
popa
fists
outsb
fcompl
lds
cs
lods
mov
push
mov
pop
push
add
scas
cltd
or
fstpt
add
jg
js
sbb
fmul
sbb
and
test
das
leave
inc
ret
jo
jae
pop
sti
into
and
popf
cvtps2pd
jnp
push
cwtl
pusha
mov
sbb
dec
jge
xchg
clc
dec
pop
mov
mov
jmp
pop
or
pop
clc
pop
scas
mov
cmp
stc
jns
dec
fildl
jge
clc
xchg
add
ret
or
add
insl
jle
sbb
mov
jne
leave
or
loope
xchg
je
push
fldenv
lods
mov
xor
ss
adc
repnz
cmp
ret
test
mov
test
das
jae
cmp
es
add
dec
loop
jl
mov
xchg
mov
mov
f2xm1
jg
add
test
lods
insl
xor
jno
cmpsl
fistps
mov
jne
and
add
stos
sbb
xchg
mov
pushf
add
std
and
sub
jp
lods
movsb
stc
pusha
cmpl
movsb
push
ja
xchg
testl
xchg
arpl
scas
and
sub
pop
bound
out
xchg
fstpl
fbld
jne
sbb
xchg
rcr
lea
fs
test
outsb
push
idivl
inc
mov
in
stc
push
jnp
inc
sbb
and
cli
jns
cmpsl
rolb
or
arpl
enter
outsb
pop
bound
xchg
mov
loopne
cld
rorl
inc
push
lock
imul
ficoml
in
sbb
fcmovb
or
lret
push
mov
jns
inc
stc
mov
in
xchg
test
clc
sahf
mov
mov
sub
loope
pusha
xor
xchg
mov
and
xor
xchg
fiadds
push
push
jecxz
fcoms
jae
shlb
aas
inc
or
or
notl
fldt
dec
stos
adc
inc
push
and
jl
test
mov
fidivs
push
fwait
mov
push
data16
adc
ret
adc
movsl
hlt
int
out
lods
lods
sub
pusha
jns
fwait
clc
out
inc
cltd
rcrl
sub
in
cmp
outsl
scas
xbegin
and
mov
mov
dec
into
mov
push
mov
adcb
ret
clc
je
pop
je
cmp
es
jae
mov
popa
cmp
rol
jo
jp
xchg
int
and
fstpt
push
cwtl
es
ficomps
mov
inc
into
xchg
xchg
int
fildll
pusha
sub
cmp
push
sbb
fstpl
mov
sub
clc
mov
test
jge
mov
bound
inc
or
dec
mov
idivl
push
push
adc
insl
push
xchg
loop
push
cmpsl
dec
inc
xchg
or
sahf
jge
scas
shrl
pop
out
mov
es
sbb
dec
arpl
pop
push
xchg
cmpsl
pusha
je
or
ss
push
in
icebp
iret
out
pop
into
pop
mov
add
repnz
loope
pop
jbe
jbe
mov
cltd
mov
sub
and
stos
pop
bound
out
xor
add
cmp
or
push
pop
dec
pop
and
es
call
mov
stos
mov
mov
xor
push
jge
stc
cli
jmp
iret
rcrb
mov
jnp
das
sarb
jne
cwtl
ds
xchg
aas
push
lock
push
sub
adcb
jmp
mov
and
fmul
imul
hlt
cmp
lds
sub
inc
dec
int
inc
dec
sbb
rcr
incl
push
stc
and
push
out
inc
pop
add
jnp
mov
jno
scas
stc
adcl
jg
js
inc
lret
pop
and
out
mov
imul
inc
add
popa
test
xor
outsl
push
loope
sbb
mov
int3
mov
mov
sbb
popa
nop
inc
dec
jnp
loope
dec
adcb
je
jge
jne
cld
push
mov
dec
jo
adcb
inc
vshufps
pop
mov
mov
fwait
cmp
jle
xchg
insl
inc
stos
add
insb
mov
cmc
loope
adc
mov
push
cmp
cmpsl
icebp
add
fstpt
or
jmp
fwait
inc
mov
data16
inc
jge
popf
pop
js
jle
sahf
and
shlb
pop
jne
dec
mov
fcmovbe
mov
push
int3
jae
aas
jmp
jle
in
shll
std
out
in
clc
ror
mov
das
xor
sub
fucomp
xchg
aaa
dec
jnp
push
mov
imul
inc
xlat
cmp
ja
and
hlt
shll
pop
mov
test
push
movsb
sti
pop
jg
popa
in
adc
add
js
push
stos
dec
mov
xchg
outsl
pop
xor
push
dec
mov
push
and
cmp
popl
cmp
adc
out
and
sbb
mov
pushf
stos
mov
test
flds
jno
jo
test
mov
clc
adcb
adc
test
cli
aad
jns
bound
push
iret
pop
sub
fildll
inc
adc
adc
jnp
and
lods
rcl
js
sbb
and
lret
adc
inc
xchg
loop
je
dec
scas
jl
or
jecxz
jmp
mov
jecxz
iret
out
cmpl
rcrl
cmp
call
in
sbb
add
mov
dec
inc
jg
xor
and
pop
pop
mov
loope
ret
cmc
mov
mov
inc
pop
mov
pop
stos
ja
xlat
and
imull
inc
lods
hlt
aad
add
mov
cwtl
push
sub
test
icebp
push
loopne
or
push
fs
out
push
jecxz
popa
sbb
insl
push
ffreep
std
je
mov
out
fdivrp
daa
sub
lds
push
fwait
jne
inc
jnp
daa
flds
nop
push
ret
adc
dec
jns
dec
rorb
leave
mov
xchg
shll
xchg
xchg
xchg
int
inc
arpl
sbb
jge
fnstenv
push
test
testl
dec
or
jbe
dec
and
test
xor
insb
pushf
js
rcrb
inc
dec
insl
lods
cmp
or
jl
arpl
push
add
mov
adc
enter
ret
adc
adc
ret
mov
adcb
cmp
scas
cmpsb
add
adc
subb
movsl
call
add
and
aad
mov
stos
xor
and
adc
mov
icebp
and
or
cwtl
and
lcall
nop
push
repz
daa
movsb
inc
adc
sahf
push
leave
or
pop
in
into
ss
sbb
stos
adc
fs
popa
daa
adc
pop
xchg
add
enter
xchg
jne
push
jo
clc
call
sar
outsb
inc
lds
xchg
pop
xor
adc
sub
outsl
shlb
cltd
mov
jle
xchg
and
jo
push
mov
push
loopne
push
rcrl
xchg
movsl
xchg
loopne
inc
mov
in
pop
mov
std
mov
sbb
ja
and
sub
cmpb
cwtl
inc
mov
push
jmp
fbstp
fwait
in
xchg
shll
inc
pop
dec
jecxz
outsl
xor
sub
shrl
xchg
movl
sub
dec
jge
lock
jle
leave
jge
cmp
cmpsl
shll
les
cmpsl
cmp
je
lock
push
dec
cmp
dec
pop
or
in
into
push
loope
mov
test
icebp
cmp
pushf
cmp
fcmovbe
loope
rorl
nopl
pop
hlt
out
and
mov
pusha
frstor
in
xchg
xchg
pop
xchg
inc
lret
scas
xchg
stc
sbb
jbe
fcompl
ret
or
xbegin
adc
mov
pushl
lea
push
mov
dec
fists
cmp
loope
and
and
loop
pop
rclb
lret
pop
jns
mov
mov
lahf
dec
xor
xchg
repz
aam
ret
and
xor
sbb
aas
push
je
imul
into
stos
outsl
into
push
sti
aam
aaa
sub
clc
dec
xor
shlb
rolb
add
push
cld
loopne
inc
in
icebp
movsb
fildl
rolb
cmpsb
arpl
ss
adc
adc
sbb
mov
loop
sbb
scas
aad
stos
out
dec
arpl
sub
mov
sarb
sub
mov
push
in
je
push
and
dec
test
sub
andl
xlat
add
mov
and
in
fsubl
dec
out
push
outsl
loope
jl
jle
mov
stc
cmc
lea
pop
pop
hlt
push
mov
enter
xchg
repnz
sub
xchg
lock
and
in
das
in
jno
cmp
sub
sub
dec
push
cmp
adcb
movsl
arpl
mov
push
cmp
add
mov
les
faddl
mov
nop
cmp
dec
mov
les
outsl
push
fnstenv
mov
pop
jnp
jmp
jle
ret
and
in
loope
repnz
add
push
divl
xor
push
test
add
push
sub
out
ret
jbe
pop
sbb
mov
sarl
filds
test
call
xchg
pop
ds
push
pop
pop
pop
mov
fldl
gs
jno
mov
mov
xchg
inc
sbb
lds
rcll
gs
mov
das
test
adc
and
cmpsl
inc
cmp
jnp
jp
repnz
popa
sahf
sbb
pop
adc
dec
fs
and
jp
loope
shll
aad
sarb
fisttpl
dec
rclb
lods
sbb
lret
xor
push
jp
inc
inc
scas
int3
pop
fst
push
leave
mov
add
mov
shl
pop
dec
push
sar
xchg
xor
push
jmp
jmp
addr16
movsb
mov
or
xchg
mov
pushf
inc
mov
cli
push
aas
mov
mov
xchg
scas
fwait
or
and
cmp
jne
adc
jb
jl
push
sub
ja
js
cmpsl
in
rol
dec
cltd
dec
jle
shl
insb
xor
push
or
xchg
imul
mov
or
mov
es
shl
filds
out
leave
test
dec
cli
xlat
jae
xor
adc
xchg
mov
mov
mov
aad
fsubs
fisttpll
mov
adc
pop
sub
loopew
adc
mov
xchg
jmp
push
inc
xchg
adc
dec
stos
lods
xchg
add
pop
xor
cmp
or
dec
push
jmp
dec
sub
add
fnstsw
push
xor
or
push
insb
mov
mov
fstpt
out
das
cwtl
jnp
lock
push
jl
mov
mov
orb
pop
icebp
je
rolb
jnp
pop
mov
cs
imul
push
and
mov
xor
popf
ds
std
ljmp
aam
inc
mov
in
and
rclb
jge
add
mov
lret
sub
test
js
mov
divl
mov
pop
mov
gs
push
mov
fisubs
sbb
pop
cmc
xor
lcall
jmp
push
cmp
xor
add
pop
sub
mov
sub
pop
fisttpll
add
jmp
adcl
mov
fs
xor
pop
ja
repz
mov
nop
lret
pop
das
jnp
jmp
jb
fsubrl
addr16
add
mov
in
push
cmp
mov
mov
mov
adc
or
xchg
je
sub
outsl
and
jbe
stos
xor
dec
repz
cwtl
push
bound
fistl
aaa
add
aaa
fadd
imul
fdivs
xchg
out
or
popa
or
mov
mov
add
data16
inc
ss
imull
or
sbb
dec
jmp
jns
inc
inc
pop
sub
xchg
cs
jg
fnstsw
pop
xchg
or
int3
ret
pop
sbb
rcrl
out
sbb
ljmp
xor
xchg
es
out
jnp
and
mov
sbb
xor
jle
sahf
and
or
mov
push
inc
cmpsb
dec
dec
xchg
scas
jo
data16
cltd
gs
in
mov
shll
aaa
adc
dec
sar
imul
imul
sbb
jmp
adcb
ds
mov
mov
sahf
loopnew
lods
inc
sub
pushf
stc
testb
jmp
xor
ror
adc
pop
cwtl
mov
jle
xchg
pop
movsl
pop
xor
aaa
cmp
sti
pop
movsl
mov
loope
and
stos
mov
and
dec
mov
in
lret
mov
fidivs
cmp
sbb
movsb
arpl
cmp
aas
sub
sahf
ljmp
aam
mov
xor
or
lods
xchg
cmp
cwtl
jl
mov
push
and
or
sbb
pop
int
inc
xchg
popa
xchg
mov
jne
out
mov
mov
jmp
jl
inc
mov
hlt
push
aaa
pop
sub
push
sbb
xchg
adc
outsl
test
push
mov
mov
jp
mov
mov
xor
cmp
sbb
imul
sub
push
inc
stc
inc
pop
dec
mov
sub
inc
xor
inc
pop
mov
push
scas
iret
adc
loopne
mov
mov
mov
mov
or
jnp
cmpsl
push
push
sarb
push
aas
sbb
xor
lea
mov
shlb
sbb
shlb
das
je
or
mov
cltd
jge
mov
sub
idiv
inc
adc
js
outsb
jnp
adc
mov
jp
stos
mov
adc
cltd
hlt
out
adc
xor
pop
xor
int3
cmpl
xchg
cmpsl
inc
movsb
jbe
and
into
pushf
xor
mov
movsl
out
cs
jne
pop
fcompl
xchg
in
push
loop
stos
mov
leave
or
mov
push
and
orl
arpl
pop
movsb
int
mov
mov
and
adc
movsb
cld
cmp
xchg
xor
ret
arpl
and
inc
lret
mov
loope
aad
add
xor
pusha
aas
shrb
or
cs
ret
js
ss
int
xchg
inc
mov
mov
sub
mov
int3
or
int
push
mov
or
inc
pop
popf
cs
mov
push
out
jge
mov
fisubrl
sti
xchg
lds
jecxz
or
lods
inc
loopne
pop
pop
or
sub
mov
movsb
daa
out
and
scas
dec
aas
push
gs
into
xor
int
or
lods
cmpsl
fwait
pop
mov
fimuls
sbb
push
mov
das
adc
ss
fnstsw
mov
lea
leave
stc
idivb
jnp
mov
cltd
in
loop
xor
imul
call
movsb
jg
fidivrs
dec
in
sub
push
movsb
sbb
pop
dec
xchg
arpl
into
or
insb
fsub
ret
push
mov
push
je
or
cmp
movsl
sbb
push
int3
cwtl
sbbl
pusha
arpl
leave
sbb
pop
sarb
mov
divl
dec
cmp
loop
and
fcoml
mov
jnp
adc
sbb
push
dec
rolb
xchg
ficomps
cmp
inc
cmp
stc
orb
add
jecxz
arpl
add
cmp
pop
xor
shrb
jg
in
or
or
icebp
lods
mov
shll
testl
out
xchg
js
or
clc
cwtl
jo
pop
fdivs
mov
into
int3
je
mov
inc
mov
jle
mov
into
mov
test
xchg
xor
cmc
jge
and
mov
xor
aas
int3
jb
out
or
mov
ja
jecxz
push
jo
push
inc
add
sub
iret
insb
das
adc
push
push
hlt
jmp
insl
mov
inc
xchg
xor
mov
sbb
sbb
or
scas
mov
jnp
dec
btc
cmc
es
in
pop
gs
jmp
sbb
add
cmpsl
mov
sti
jns
pop
inc
outsb
mov
out
xor
adc
mov
daa
pop
jmp
cli
cs
scas
cmp
add
fs
bound
out
push
adc
adc
scas
mov
das
pop
out
cmpsb
hlt
xchg
pop
mov
in
out
repz
push
movsl
dec
push
test
gs
mov
cmp
loopne
sbb
jne
aad
xchg
shlb
std
lahf
or
sbb
mov
pusha
push
pop
into
pop
outsb
xchg
xchg
jae
mov
jnp
mov
xor
sub
addr16
das
mov
andb
dec
data16
xor
xchg
insl
sbb
sbb
push
sub
stc
jnp
lock
xchg
xor
sti
jnp
into
fmulp
outsl
pop
sub
add
mov
dec
xor
dec
add
mov
xchg
xor
pop
and
lods
lret
push
jno
mov
or
jl
test
pop
xor
pop
ja
lahf
imul
ret
adc
iret
mov
mov
mov
push
add
shlb
aam
add
inc
and
mov
inc
push
and
push
ret
inc
stos
jb
mov
cmp
mov
adc
int3
daa
or
pop
in
cmp
sti
mov
stc
lock
enter
pop
cmp
mov
or
popf
and
popf
imul
pop
stos
and
pop
into
push
and
hlt
push
jo
push
lahf
fwait
pushf
push
jp
cmp
shrl
mov
xchg
in
mov
in
xlat
mov
jnp
pop
adc
stos
xchg
pop
cwtl
push
lods
stc
jmp
cwtl
and
pop
dec
dec
fdiv
popf
cwtl
sbb
inc
cmp
in
popa
mov
adc
int3
sub
mov
or
iret
ror
mov
mov
inc
outsb
ja
dec
inc
inc
xor
pop
lret
pop
aad
mov
inc
mov
dec
push
aaa
mov
mov
test
popf
cmp
jg
mov
push
cmp
fbstp
mov
xor
adc
mull
icebp
je
pop
pop
lods
jg
cmc
dec
xor
js
aaa
sub
xlat
inc
fdivrl
jae
cltd
pop
jge
xor
insb
loopne
mov
jne
push
xchg
or
fs
cmp
jecxz
cwtl
dec
sub
fiadds
and
gs
mov
pop
sub
test
or
jb
mov
mov
not
mov
cmc
push
sbb
popa
bound
cmc
mov
xchg
add
std
addr16
mov
sub
push
sarl
pushf
inc
jmp
or
xchg
es
inc
push
outsl
movsb
adc
and
jge
pop
jae
jp
jp
add
xchg
jle
mov
xchg
popa
ficoml
mov
xor
pop
punpckldq
jns
and
nop
cs
sub
lds
imul
cmp
vsubps
shl
mov
pop
xor
or
push
icebp
mov
mov
push
mov
icebp
lods
xchg
mov
loop
js
sub
call
pushf
notl
push
hlt
lea
cmpsb
aam
cmp
rep
data16
mov
cmc
popf
mov
cmp
scas
roll
fdivrs
repnz
test
sub
outsl
lods
sti
sbb
push
xchg
xchg
pop
js
or
rorb
in
mov
xchg
inc
das
mov
outsl
xor
and
scas
in
adc
jle
mov
mov
sub
xchg
ljmp
iret
mov
push
mov
cmp
fwait
xor
movsb
cmpsl
dec
lahf
mov
mov
test
in
fs
mov
mov
pop
xor
mov
mov
dec
movsb
rclb
sbb
push
jecxz
pushf
test
mov
les
or
ret
fidivrl
xchg
repnz
inc
or
addb
xchg
adc
lock
nop
std
dec
jb
mull
mov
bound
xchg
aad
pop
test
imul
mov
adc
xor
add
xlat
xor
xchg
mov
gs
je
mov
inc
imulb
fnsave
pop
out
mov
cwtl
adc
and
adc
mov
jle
inc
pop
inc
mov
jae
jne
lea
leave
test
gs
dec
sarl
out
xor
cmp
adc
xchg
inc
sub
mov
jnp
mov
aaa
push
dec
sbb
lahf
in
push
cwtl
aam
into
push
adc
fcomip
lcall
stos
stos
stc
psubd
int
jnp
cmp
sar
inc
fldl
dec
repnz
add
fadd
xchg
sti
push
hlt
mov
cmp
pop
fadds
lahf
cltd
adc
in
mov
sub
sbb
jnp
pop
and
pop
aaa
adc
xchg
sub
dec
ret
rol
fistpl
jbe
cmp
or
xor
push
hlt
push
push
push
xchg
push
sbb
mov
roll
adc
jnp
ret
inc
insl
pop
xor
sarb
imul
fisubrs
mov
jo
xorl
jno
push
in
inc
sbb
js
loop
insl
dec
sbb
mov
xchg
jge
mov
cmp
lahf
sbb
popa
sbb
fmulp
xchg
mov
pop
jl
stc
decb
rclb
test
fisttpl
push
xor
sub
inc
mov
dec
js
adc
call
iret
psrld
imul
mov
dec
std
pop
mov
clc
push
cld
adc
lods
jmp
sub
dec
shl
xor
cmp
mov
or
popa
jp
mov
mov
add
test
jae
mov
js
pop
push
add
xchg
incl
inc
sub
daa
cmpsb
aaa
jmp
mov
cmp
pcmpgtd
inc
daa
popf
mov
pop
xchg
adc
mov
jmp
dec
lret
std
pop
mov
aas
add
sub
mov
pop
add
mov
push
xorb
mov
jno
pop
add
dec
rcr
out
cmc
std
jg
mov
data16
push
test
ljmp
mov
daa
mov
icebp
jns
add
stos
jns
cmp
cmp
jb
mov
xor
sub
out
or
or
mov
mov
pop
add
mov
stc
insb
inc
jae
cmp
arpl
mov
adc
stc
test
xchg
nop
leave
sarl
shll
fcmovne
scas
pop
mov
aam
fimull
xor
inc
stc
iret
movsb
js
pusha
mov
les
out
popa
bound
mov
xor
xchg
or
and
ret
les
cmp
bound
aas
inc
mov
adc
dec
ja
pop
loopne
movsb
cli
xchg
mov
push
mov
and
leave
xchg
cmp
xor
jno
sub
xchg
dec
loope
adc
out
jle
cmp
jmp
adc
dec
ficoml
pop
lahf
shr
jge
roll
sti
out
push
dec
mov
jno
mov
push
ret
add
sub
cli
and
jb
xor
mov
lcall
lods
pop
and
cld
rcrl
cmp
or
mov
cs
bound
and
xor
mov
xor
sub
insb
in
les
popf
push
adcb
out
cmp
dec
orl
sub
outsb
lahf
jp
addr16
dec
jbe
jp
int
ror
rclb
xchg
fmull
sub
sub
dec
xor
push
inc
insb
iret
ss
aaa
dec
or
xchg
xchg
push
mov
xchg
aad
cli
push
adc
cld
sub
out
ds
lea
test
insl
int3
shrb
fbstp
xchg
add
mov
jecxz
ja
or
add
out
ds
pop
dec
adc
ficoms
dec
popw
push
rorl
mov
shl
mov
popa
sbb
sbb
mov
xor
ja
pop
popa
in
xchg
cmp
push
inc
mov
adc
xchg
add
insb
lock
mov
mov
push
pusha
dec
lret
xchg
inc
mov
mov
mov
xor
movl
in
add
shr
xchg
push
push
inc
and
mov
lods
ljmp
push
adc
push
mov
push
dec
sub
es
cmp
push
mov
aad
jae
repz
test
test
repz
pop
push
pop
pop
mov
ljmp
xor
mov
call
jle
sub
jmp
jg
fmuls
aam
inc
bound
mov
shrb
call
lcall
dec
dec
and
fldt
jbe
hlt
and
rcll
rcrb
icebp
fadds
xchg
xlat
adc
inc
push
mov
and
dec
pop
dec
inc
shl
sbb
push
jmp
or
or
vfrczpd
jnp
punpcklwd
stos
xchg
cmpsb
movzbl
loopne
mov
ljmp
mov
stos
and
pop
rolb
ror
out
pop
sub
xor
pop
int3
pop
mov
push
aas
movsb
mov
les
cmp
xchg
jae
or
pop
inc
sbb
popf
mov
es
mov
es
test
icebp
push
dec
les
adc
jge
stos
xor
enter
sbb
stc
push
mov
mov
dec
aam
cmp
mov
push
std
mov
mov
dec
hlt
hlt
add
push
sbb
jo
fdivrl
pop
sbb
movb
push
jns
inc
repnz
xchg
sti
jmp
mov
push
lods
dec
addr16
sbb
stc
pop
push
out
adc
out
and
mov
xchg
ds
jne
add
daa
lahf
dec
call
cmp
repnz
and
push
in
fldl
add
mov
mov
divb
dec
sar
mov
add
movsl
popa
jae
pop
test
sub
mov
inc
jp
mov
dec
ss
scas
lock
or
fildl
pop
add
dec
js
or
push
test
inc
jno
addr16
cli
std
cmp
addb
call
mov
out
mov
sbb
scas
test
pusha
or
fldt
cld
mov
les
pusha
dec
inc
std
fldl
xorb
mov
shr
clc
jno
cmp
inc
or
cmp
fwait
mov
mov
add
pop
mov
xor
xchg
cmpsb
andb
add
faddl
pop
push
mov
and
jo
iret
mov
movsl
addr16
leave
lods
std
pusha
pop
ljmp
mov
sbb
pop
shlb
jnp
pop
outsb
call
add
repz
loopne
push
jle
cmpsl
stc
imul
push
lcall
mov
or
pop
and
or
sub
and
imul
shlb
sbb
mov
bound
cld
ds
or
push
jecxz
dec
stc
mov
add
xchg
cmpsb
sbb
lea
ret
xor
das
addr16
or
inc
sbbl
or
jae
in
movsw
mov
add
cmp
xchg
stc
out
sarl
fidivl
stos
mov
test
stos
je
mov
mov
cmp
mov
dec
enter
pop
add
push
pop
jecxz
lods
adc
fistpl
jns
or
fnstcw
lods
negl
fcoml
and
nop
ret
sbb
sbb
or
inc
jmp
test
pusha
xor
xor
or
outsl
inc
push
sub
push
xchg
aam
int3
jmp
mov
fldenv
out
pop
icebp
dec
scas
mov
sub
dec
testb
dec
mov
fisubrl
cs
pop
ret
lcall
or
mov
mov
es
std
arpl
icebp
das
das
jne
pop
or
call
lea
xchg
int
pusha
mov
cmpsb
movsb
add
rcll
orl
sub
stc
inc
inc
inc
fisubl
push
adc
inc
pop
mov
or
adc
jno
push
pop
out
cmp
sarb
ror
inc
mov
xor
nop
dec
xchg
xchg
jl
out
cmc
mov
shrl
stos
dec
sbb
dec
das
dec
push
cmp
nop
rcrb
add
lret
and
sub
out
xchg
les
jmp
sub
push
test
xchg
loopne
mov
movsb
je
fcmovb
lds
xchg
dec
nop
xlat
xchg
insl
test
pop
mov
push
or
addr16
loopne
inc
and
xor
jl
mov
dec
sub
jecxz
mov
test
jno
ja
fdivp
xchg
jbe
dec
mov
push
ret
rorb
mov
pop
lret
icebp
divb
jecxz
subl
fistl
inc
bound
xchg
xor
iret
repz
subl
inc
mov
mov
mov
jl
movsl
imul
mov
rorb
or
fldenv
into
lock
pop
or
shll
xchg
pop
or
jp
dec
das
push
or
fdivl
decb
aad
push
dec
lret
call
fcmovbe
outsl
cmpsb
cmpsb
sub
in
in
adc
ss
mov
jecxz
insl
push
or
nop
imul
stos
sbb
shll
jl
dec
cs
jp
push
insb
push
push
push
outsl
arpl
sbb
pop
insb
sbb
jl
inc
push
adc
jns
lods
sub
pop
pop
hlt
mov
test
sahf
fimuls
push
or
push
mov
inc
mov
mov
daa
aas
jmp
clc
nop
daa
test
mov
lock
inc
outsb
test
outsb
sub
cltd
jae
insl
sti
and
shrb
in
repz
mov
sti
cmp
je
test
ds
sub
push
sahf
sbb
mov
test
inc
ss
test
into
mov
push
jne
sub
inc
jmp
int3
mov
in
mov
ficompl
addr16
jl
jbe
fucom
mov
cltd
xor
dec
inc
sbb
xlat
bound
jmp
js
mov
imul
push
mov
out
je,pt
pop
mov
xchg
shlb
sbb
pop
aaa
fsubr
bound
and
shl
push
dec
dec
out
jnp
outsl
adc
mov
je
or
xor
mov
bnd
pop
dec
sub
jge
sbb
xor
xchg
mov
cmp
jae
cmp
pop
orb
push
push
out
pusha
push
test
daa
push
or
inc
fcmovnu
sub
mov
add
dec
fldt
add
cmpsb
ss
in
sbb
push
mov
pushf
inc
dec
cmp
pop
inc
pop
pop
sub
lock
les
sub
stc
cmp
movsl
and
push
out
xchg
adc
out
out
sbb
movsb
rcrl
inc
xor
sub
cmp
lret
imul
js
and
lret
mul
scas
add
stc
mov
push
lcall
inc
lock
adc
xchg
jne
popa
imul
aad
mov
mov
scas
call
mov
jmp
cmp
sbb
scas
pop
cmp
and
imul
add
test
fiaddl
out
fisubl
jmp
sub
pushl
push
scas
fdivl
mov
mov
subl
arpl
dec
mov
push
mov
sub
mov
clc
outsb
aas
popf
mov
aaa
mov
lahf
icebp
fstpt
inc
or
pop
test
lods
data16
dec
imul
xor
sbb
jo
rolb
sarb
ljmp
pop
sub
push
push
jecxz
cld
cltd
lods
fsubl
sub
jp
mov
adc
rol
add
icebp
scas
mov
push
insl
and
xor
repz
icebp
cwtl
mov
nop
mov
push
test
or
inc
or
shrb
icebp
in
cmpsl
mov
andl
dec
add
testb
and
add
push
popf
sbb
push
jmp
js
mov
inc
inc
int
hlt
leave
xlat
out
lea
loope
jecxz
pop
out
jecxz
das
out
inc
mov
sti
xchg
imull
popa
inc
sub
push
mov
stc
add
ljmp
in
leave
loop
fnstenv
aam
mov
mov
ss
push
gs
int
pop
pop
pop
ds
mov
ja
lahf
popl
mov
stos
jl
fidivrs
push
popf
mov
xor
inc
insl
mov
cmc
dec
ficoms
dec
mul
mov
cmp
mov
inc
push
add
cwtl
int3
negl
xchg
addl
and
fisubrl
sbb
mov
jnp
jp
inc
nop
push
call
dec
pop
mov
pop
int3
popa
xchg
adc
int
in
scas
addr16
scas
xor
mov
push
pop
in
sbb
push
jecxz
xchg
inc
mov
cmp
cmp
clc
or
mov
into
jmp
imul
js
gs
imul
sti
popf
xchg
movsl
dec
mov
mov
xchg
jbe
in
pop
sbb
mov
add
mov
jno
out
mov
mov
pop
pop
pusha
jbe
pop
xor
fisubrl
lea
fcompl
push
std
adc
sub
and
add
pop
in
push
daa
out
cmp
shrl
test
inc
push
or
cltd
arpl
ljmp
sub
lahf
or
push
mov
xchg
mov
push
inc
cmp
movsb
and
sub
mov
fcoms
ficompl
sub
jae
xor
xor
mov
nop
sbb
test
dec
popa
xchg
and
jnp
cmpsb
cld
add
jge
outsl
inc
shrb
out
sbb
pop
add
test
xor
dec
xchg
sub
cmpsb
cmova
xchg
scas
and
in
add
cmp
out
xchg
addl
cmc
and
fsts
push
xchg
mov
or
sbb
mov
pop
clc
add
int
push
jne
cmp
outsl
push
addr16
pop
dec
andb
popf
adc
mov
xlat
imul
xchg
push
cli
cmp
mov
js
ret
es
xor
push
push
lock
inc
xor
xor
and
stos
add
push
cmp
inc
arpl
cmpsl
mov
xor
arpl
js
fdivs
sbb
popf
scas
push
add
repz
push
mov
popa
sub
sub
add
in
xchg
fcompl
xlat
jbe
in
pop
mov
aaa
xor
or
pop
push
insb
mov
out
mov
mov
and
fists
rcl
into
or
jl
fisttpll
cmp
and
mov
sbbb
add
in
idivl
dec
movsb
add
ficompl
pop
inc
dec
push
imul
test
sti
stos
jnp
and
out
xchg
jp
lret
insl
loop
ss
ficomps
mov
pop
xchg
mov
sub
push
inc
mov
pushf
cmp
inc
xchg
xor
add
dec
das
fstps
scas
cmp
aad
pop
push
int3
hlt
xchg
lahf
cmpl
push
jl
or
mov
mov
loopne
xor
cli
movsl
out
or
jmp
aas
xchg
ja
add
sub
adc
aaa
rcrb
lahf
in
pop
pop
push
scas
xchg
push
push
jl
mov
rcrb
mov
jns
out
inc
sub
aas
fcmovbe
insw
sbb
jmp
repz
inc
fildll
jle
cmpb
iret
fidivrl
xor
push
jl
mov
add
rclb
cmp
movsb
inc
adc
repnz
xchg
pop
xorps
ja
shlb
push
push
jg
out
decb
test
and
jno
push
dec
fbstp
addb
fbstp
cmp
xor
cmp
pop
les
lret
jnp
cmp
mov
loop
mov
int3
dec
pop
jmp
add
xchg
je
outsb
ja
mov
sub
push
std
mov
dec
mov
sbb
fcmovbe
ljmp
dec
sbb
mov
int3
je
push
mov
inc
lods
mov
cmp
repz
mov
inc
mov
push
and
mov
add
addr16
mov
les
daa
jbe
dec
sbb
push
jnp
jge
jl
scas
and
sub
sti
push
push
or
xchg
outsl
inc
out
xchg
xchg
outsl
adc
jmp
inc
dec
dec
outsl
inc
pop
pop
arpl
iret
out
in
xchg
rcll
andb
flds
jnp
movb
cmpsl
xchg
pop
and
xrelease
into
pop
clc
in
mov
mov
adc
fldenv
sub
pop
movsb
cld
insb
fistps
idivl
aaa
out
daa
into
and
loop
lret
pop
jge
add
xor
lret
int
xchg
mov
test
mov
add
xor
xor
mov
mov
push
or
mov
test
push
lea
std
jnp
shll
shrl
ja
add
mov
pusha
push
xor
cmp
cmpsb
mov
mov
test
xor
add
adc
add
fwait
cltd
out
cmpsb
int3
push
mov
xor
clc
cmp
fstpt
sahf
arpl
shl
scas
jnp
cli
cltd
adc
pop
push
test
arpl
cmp
pop
in
sub
adc
sbb
and
bound
inc
xchg
push
test
ljmp
nop
test
lcall
stc
jmp
cmp
ret
int3
popf
cmpsb
and
cltd
addr16
and
ljmp
mov
xor
dec
push
sub
ljmp
test
js
sub
xchg
adc
inc
mov
lcall
inc
into
repnz
sbb
ds
repz
imul
fisubrs
jb
add
jg
sub
mov
push
jne
orl
jns
inc
clc
test
int
cmc
mov
cli
mov
test
push
jp
or
push
inc
mov
mov
notl
insl
mov
cmpsl
pop
cli
mov
sub
insl
lods
mov
mov
rcrb
shlb
xchg
sbb
pop
clc
add
lcall
out
xchg
adc
or
mov
aam
xchg
mov
ljmp
jmp
outsb
rolb
mov
sti
xor
or
inc
jle
movl
xor
arpl
and
push
les
in
cmpsl
add
loopne
or
jnp
leave
call
fistpll
or
push
cmp
inc
les
lea
jmp
sub
int
out
lcall
insb
jp
cmc
loopne
push
push
cmp
movsb
pop
out
test
cmc
ficompl
stos
add
fdivrp
aas
mov
aas
mov
xor
shrl
enter
mov
imul
and
push
and
imul
push
pop
mov
pop
xchg
lods
mov
stos
icebp
pushf
xchg
pop
xor
pop
mov
in
addr16
jmp
xor
add
in
cwtl
in
inc
ds
jle
aas
xor
push
addr16
lods
mov
mov
enter
xchg
jmp
mov
sbbl
dec
sti
gs
add
sub
mov
inc
movsb
cmp
xchg
mov
jl
push
sbb
movsb
imul
outsb
mov
dec
aaa
cmp
mov
sbb
les
sbb
addr16
out
adc
xchg
add
sub
cltd
mov
xchg
in
sbb
repnz
inc
je
add
and
loopne
cs
jae
inc
iret
ljmp
fisttpll
inc
mov
jp
xor
cltd
inc
sbb
and
loopne
in
insb
mov
cmc
scas
lahf
cmp
xor
je
pop
and
sbb
insl
out
and
cmp
dec
pop
adc
adc
sbb
push
add
push
mov
inc
shll
sbb
xor
loope
xlat
shrl
std
insl
bound
mov
mov
add
movsb
std
push
or
in
jo
aad
cmp
iret
fldln2
out
imul
add
mov
sbbb
jl
sarb
pop
adc
imul
imul
outsb
push
jne
sbb
mov
push
sub
rclb
adc
push
in
daa
xor
les
je
mov
dec
jbe
sbb
ja
in
sbb
clc
insl
jmp
lcall
stos
cmc
mov
fldcw
mov
outsb
adc
fisubs
or
mov
xor
shlb
test
mov
or
pop
dec
mov
jge
adc
cmpsl
in
inc
xchg
adc
mov
mov
test
jmp
call
inc
sbb
pop
subb
ljmp
or
push
pcmpeqd
cmpsl
xchg
fistl
dec
scas
lret
xchg
repnz
cld
or
mov
lock
nop
push
inc
scas
subb
and
sarl
nop
sar
xchg
cmp
pushf
fdivp
fisttpl
adcl
cmp
outsl
fstpl
out
mov
add
adc
inc
push
mov
iret
pushf
adc
out
mov
mov
mov
inc
mov
jl
shrl
and
xorl
fnstcw
xchg
push
stos
test
xor
fistpl
inc
out
stos
jae
into
adc
add
addr16
jl
into
mov
push
and
lret
aas
cli
cmp
icebp
sbb
into
push
push
leave
jbe
pop
fstl
aas
subl
mov
cmc
fsubrp
ud1
dec
xor
or
adc
adc
jg
ss
jnp
int
adc
pop
call
sar
into
out
jg
cmp
jb
addl
out
jne,pt
icebp
inc
jnp
test
outsl
mov
je
pop
insl
lock
jl
cs
xchg
sarl
fistps
adc
jge
loop
sbb
aad
lds
jno
jl
sub
pop
and
cmc
popf
push
sub
scas
jmp
xor
dec
cs
jge
adc
mov
dec
push
cmp
inc
fstps
test
leave
jno
push
pop
std
or
movsb
cld
dec
shlb
push
and
add
das
add
pop
pop
flds
std
mov
outsl
outsl
add
int3
insl
cmc
test
imull
jo
insl
pop
iret
xor
jp
mov
aam
lret
andb
fstps
loope
inc
jmp
js
xchg
jbe
jg
aaa
sub
fldcw
jb
ficomps
fdivs
and
sub
push
stos
fsubs
jle
popf
dec
fwait
push
xchg
mov
mov
iret
jbe
fstpl
sub
call
sahf
das
scas
jmp
adc
mov
adc
in
push
inc
push
in
push
mov
inc
js
mov
insb
and
push
repnz
push
or
adc
movsl
fiadds
fnsave
jge
jmp
out
cltd
xchg
cmp
fwait
lahf
jge
push
flds
addr16
and
mov
jmp
cmpb
inc
sub
pop
pusha
ret
lahf
xchg
pop
mov
dec
push
mov
mov
mov
push
add
xchg
jns
shr
je
ljmp
test
dec
outsb
xor
or
out
ficoms
rclb
mov
jo
fbstp
and
fs
pop
mulps
loope
cmpsb
or
mov
xor
cmc
fistps
jo
loop
in
dec
adcb
and
inc
mov
sar
or
addr16
jae
xor
in
push
js
xchg
es
test
fmull
je
sbb
fnstcw
rcrl
adcb
fidivl
mov
lcall
xlat
icebp
xor
cmc
loopne
xor
test
hlt
inc
decl
std
cs
dec
lock
xor
jnp
iret
fadd
jge
scas
pop
push
mov
aaa
dec
ss
and
jl
lret
clc
jb
cmp
lea
and
jg
mov
pop
lea
mov
dec
pop
shr
add
bnd
aad
add
jns
sbbl
mov
in
stos
scas
push
cltd
ds
mov
mov
push
jae
sbb
sub
sti
mov
sarb
jle
and
fsubr
push
and
outsb
dec
icebp
insb
lods
int
adc
test
mov
pop
push
sbb
add
xchg
outsl
jae
ucomiss
add
jp
je
nop
xchg
stc
fsubr
lods
and
jb
pop
inc
iret
or
ret
mov
nop
adc
int
cld
cmpsb
pop
pop
pause
pusha
or
push
xchg
mov
addb
jl
sbb
mov
sarb
mov
mull
in
and
loope
cs
outsb
aas
sub
xlat
pop
push
jmp
xchg
push
mov
mov
push
jb
add
mov
sbb
mov
push
clc
sbb
xchg
ljmp
jne
call
and
ret
inc
pop
sub
dec
push
mov
and
mulps
cmp
xor
dec
jmp
js
int
inc
scas
mov
xchg
aas
les
xlat
pop
or
sub
cmc
icebp
outsb
cmp
and
ror
push
mov
pop
dec
fisubs
leave
popa
je
and
ja
inc
jg
test
std
push
je
call
add
mov
xor
mov
gs
push
push
bound
push
cmpl
xor
push
pop
push
lods
push
dec
pop
shlb
push
mov
mov
push
into
xchg
mov
bound
sub
repz
mov
xorl
mov
jg
icebp
mov
imul
outsl
cmp
pop
sub
or
pop
fdivs
int3
nop
lods
repnz
xor
adc
out
mov
xchg
pop
xchg
mov
xor
and
sbb
lock
push
push
sub
les
push
cmp
fisttpll
adc
pop
dec
pusha
mov
sar
adc
and
enter
aaa
rcll
test
jns
pop
lods
xor
cmp
dec
fmul
xchg
andl
pop
pop
ret
test
mov
pop
aam
icebp
test
push
sub
and
shl
or
ret
mov
call
ds
mov
cwtl
imul
adc
push
mov
pop
ja
xor
inc
mov
jle
cwtl
mov
pop
gs
inc
cmc
mov
ret
xchg
imul
fucomip
call
lahf
cmp
leave
sub
repz
or
or
ret
ja
jecxz
loop
lcall
decb
push
movsb
or
inc
mov
sahf
sbb
mov
push
or
inc
mov
pop
dec
push
pop
adc
rolb
fsubl
push
mov
and
and
and
inc
sbb
add
fcompl
loop
mov
das
adc
dec
ret
mov
push
jns
and
pop
sub
aam
out
or
aad
inc
sbb
xlat
lahf
scas
repnz
jge
mov
sub
inc
dec
jno
movsl
dec
imul
fucomp
cwtl
sahf
mov
sub
mov
mov
dec
push
pop
push
adc
inc
pop
or
xor
stc
jbe
imul
xchg
push
xchg
nop
sahf
push
out
jb
fsubl
add
pop
icebp
pushf
outsl
stos
fisubs
jnp
cltd
xor
sahf
mov
push
pusha
cmp
cwtl
pop
mov
jecxz
and
les
inc
pop
sbb
sbb
xchg
fwait
lds
fldt
push
cmp
mov
push
cmp
outsl
adc
sar
mov
push
lcall
sub
test
adcl
pop
pop
bound
xchg
call
lock
std
fstpl
paddusb
lock
adc
pushf
pop
inc
es
out
repz
push
imull
sbb
xor
scas
out
push
add
adc
xlat
cltd
loopne
inc
xchg
aam
inc
into
rolb
mov
mov
imul
xchg
pop
out
or
sbb
add
mov
pop
jp
and
icebp
mov
aad
cmp
xlat
pop
dec
mov
inc
jnp
push
adc
mov
sti
dec
add
lods
sub
and
ret
outsl
xor
and
rcll
mov
xor
daa
je
add
xchg
pop
into
call
cmp
scas
cltd
jnp
insl
je
js
cld
adc
mov
and
scas
cmp
push
cmp
or
test
or
mov
cmpsl
fsubrs
or
jp
mov
sub
flds
or
adc
lds
cmp
and
inc
jae
rolb
out
daa
out
scas
mov
xchg
adc
divl
mov
ss
sub
mov
cmpsl
cmp
sbb
jg
loop
pop
dec
jo
mov
dec
movsb
in
xchg
stc
adcl
and
jo
or
xchg
cs
mov
ss
clc
cmp
fildll
jb
dec
repz
data16
mov
aaa
les
out
insl
cmc
cmp
mov
adc
es
jno
and
add
addr16
test
inc
iret
nop
sarb
lahf
add
lret
lods
cmp
je
dec
repnz
sbb
mov
aaa
lods
cmp
mov
push
push
mov
int3
icebp
inc
dec
mov
cli
inc
dec
xchg
negl
aas
inc
out
pop
addr16
jge
daa
jne
fisttpll
sbb
sbb
sbb
into
enter
push
ret
push
xor
push
cmp
mov
adc
pop
sbb
test
daa
repz
cmc
fsubs
adc
sbb
inc
cltd
add
sbb
sbb
nopl
xor
push
adc
arpl
test
xor
ljmp
adc
push
data16
or
jne
loopne
ficomps
repnz
mov
xchg
xor
push
jp
cmpsb
popf
dec
jb
mov
shrb
mov
mov
cld
add
int
fwait
dec
adc
mov
int3
icebp
cmp
mov
repnz
sbb
shrl
sbb
daa
and
add
cmpl
mov
push
add
sbb
das
jns
lret
mulb
jae
sbb
lods
pop
or
adc
out
add
in
push
fwait
aam
gs
popa
pop
mov
sub
jp
aas
leave
out
pop
mov
fistpl
adc
cmp
fcomp
jne
jge
mov
jnp
cmpsl
mov
push
or
scas
lea
jmp
xchg
ret
loopne
repz
push
inc
test
pop
repz
add
jg
xrelease
push
push
int3
out
mov
cld
add
outsl
shlb
adc
jno
popa
decb
dec
pop
mov
xor
mov
jg
rorl
mov
xchg
pop
imul
call
cmp
xchg
sbb
and
hlt
add
push
lods
cltd
jae
xor
sbb
repnz
cli
cwtl
xchg
add
iret
ss
jmp
stos
sbb
inc
test
inc
repz
and
call
je
loop
subb
xor
popf
xchg
rol
outsl
xchg
ljmp
aam
add
mov
clc
lds
incb
in
or
inc
pmuludq
add
push
shl
dec
test
pop
inc
stc
add
les
jns
jo
mov
pop
and
mov
xor
and
mov
push
mov
inc
inc
loope
sub
pop
shl
bound
popa
push
add
mov
std
add
loop
xlat
cmpsl
testl
out
sub
xor
call
pop
push
icebp
lods
sub
cmp
fadds
cmp
mov
pop
sub
shll
jle
into
and
and
inc
daa
mov
add
dec
outsl
xor
inc
mov
adc
xchg
and
sarl
and
in
inc
xchg
pop
loop
xchg
outsb
pop
pop
mov
cld
xchg
leave
lss
leave
neg
xchg
stc
mov
push
dec
sub
enter
and
test
in
sub
pop
out
testb
adc
sbb
movsb
xor
rcl
xor
sub
xor
sbb
xor
out
lock
sub
mov
xchg
outsb
or
push
mov
jne
adc
or
mov
or
cmp
sub
inc
mov
sub
dec
int
xchg
ret
xor
ljmp
popa
pop
popf
insb
cmp
and
add
sbb
shll
mov
dec
testb
ud0
sti
xchg
xchg
add
cmp
clc
mov
stos
paddb
pusha
push
nop
mov
sbb
xor
jge
cmp
es
nop
es
icebp
in
pop
jp
jmp
in
dec
mov
cmp
jle
or
mov
lahf
jl
daa
inc
or
pop
repz
insl
jns
xchg
jno
lcall
rcll
fsubp
xor
pop
leave
repnz
mov
adc
mov
lret
ror
mov
aam
jp
sbb
mov
jmp
xor
mov
jbe
push
mov
push
xchg
mov
lods
sub
jns
pop
cmp
ljmp
xchg
scas
and
mov
adc
data16
cmpsb
inc
dec
pusha
push
adc
lahf
lret
mov
mov
sub
fildl
pop
clc
test
notl
pop
rcll
jb
icebp
fistps
pop
test
stos
loop
imul
mov
mov
jo
cmp
sub
pusha
clc
push
xchg
xchg
push
stos
icebp
roll
loop
stos
cltd
scas
add
push
cs
mov
xor
idiv
inc
jne
in
stc
ficoml
mov
mov
inc
jg
mov
inc
cwtl
scas
xor
inc
pop
insb
int3
pop
adc
pop
pop
fstl
xchg
into
inc
inc
xchg
xchg
xchg
adcb
dec
int3
fs
je
test
mov
pop
out
pop
cmp
add
jmp
icebp
test
jo
fsubrp
push
jl
sub
shll
ljmp
cmp
fs
jge
out
add
scas
int3
jmp
jle
xchg
into
push
mov
jecxz
fcompl
std
cmp
aam
stc
hlt
int3
sbb
sbb
push
fcoml
dec
imul
jmp
andl
das
fwait
iret
scas
push
or
mov
scas
mov
fwait
es
pop
pop
and
pop
mov
out
iret
call
nop
push
xlat
adc
add
in
cs
inc
movsl
inc
mov
idivl
test
lods
cld
scas
ret
add
pop
mov
shll
mov
mov
adc
hlt
stc
lret
inc
das
xor
push
notb
aam
icebp
out
adc
insl
sbb
cld
lds
rcrl
mov
fwait
lret
sti
add
shlb
adc
lds
cli
scas
hlt
sub
lds
frndint
cmp
add
pusha
xor
mov
dec
jp
and
scas
mov
mov
pop
or
jg
pop
pop
out
add
sbb
test
hlt
adc
xor
lods
leave
popf
and
arpl
mov
arpl
cli
int
ljmp
xor
testb
sbb
adc
dec
fwait
cmp
pusha
in
repnz
ficoml
int3
xor
cmp
rol
mov
inc
movsl
loop
mov
je
and
inc
shlb
mov
mov
test
dec
icebp
pop
adc
dec
mov
sub
jb
fs
cltd
ljmp
jle
out
xchg
add
faddp
push
test
inc
jno
cmpsl
fdivl
aaa
popf
add
cmp
fnstcw
xchg
rcll
aaa
dec
mov
lods
stos
xchg
xchg
sub
or
imul
push
or
jmp
sbb
mov
cmp
or
out
test
fwait
jbe
flds
ja
add
pushf
enter
xor
and
lahf
scas
lods
push
repz
push
mov
cli
pop
mov
das
test
mov
pop
jno
push
lahf
icebp
lret
jb
imul
sti
pop
cli
mov
iret
bound
and
push
negb
lahf
testb
popf
rsqrtps
mov
fwait
clc
gs
iret
inc
cld
outsl
mov
sbb
mov
out
fmuls
sbbb
sbb
mov
sub
cmpsb
aas
pop
mov
mov
inc
cmpsl
in
push
cmp
mov
mov
pop
or
gs
clc
lea
out
dec
dec
push
adcl
test
andl
in
test
cmpb
test
jge
ljmp
mov
sub
lock
mov
dec
jne
lcall
push
push
sub
push
xchg
in
icebp
cmpsb
hlt
fidivl
jb
into
pop
dec
data16
mov
or
hlt
sub
jo
popf
mov
pop
and
mov
pop
aas
in
addr16
addb
pop
jo
mov
sbb
xlat
mov
stos
xchg
cltd
jb
sahf
cwtl
call
test
mov
clc
imul
xor
lcall
xchg
aam
in
pusha
mov
iret
shlb
test
sbb
push
adc
push
jb
fsubrl
cmc
dec
or
test
adc
repz
fwait
dec
add
xlat
mov
inc
xchg
push
and
sbbb
inc
rorb
adc
mov
adc
or
test
xchg
xor
scas
mov
and
mov
dec
int3
outsb
jp
push
xchg
and
hlt
xor
jae
lods
lahf
sub
addl
dec
fcomps
pop
jnp
sbb
jge
push
ss
inc
pop
orb
std
jnp
lods
insb
cs
fisubrs
sarl
adc
bound
es
pop
fsubrp
sbbb
xor
rcr
fnsave
mov
sarw
in
pop
imul
movsb
loopne
and
rol
xchg
dec
add
adc
mov
mov
mov
nop
and
cmp
dec
or
aas
into
or
mov
in
inc
mov
mov
idivl
out
int3
in
add
aam
fidivrl
pop
dec
incb
jl
cli
in
mov
fsubrl
pop
dec
outsb
jne
stos
inc
dec
mov
push
xor
xchg
xor
sub
sbb
mov
dec
cmp
or
jecxz
pop
xor
flds
mov
jae
cwtl
ljmp
aam
add
lret
lock
popl
add
fnstsw
sub
or
outsl
xor
into
cmp
or
inc
or
push
inc
add
push
lahf
sub
mov
jo
and
sahf
std
xor
pushf
jmp
cmp
in
outsb
lret
mov
subl
ror
jg
mov
add
jns
xchg
xchg
popl
ljmp
bound
cmp
xor
mov
xor
xchg
ljmp
popa
xor
popl
dec
mov
scas
stc
push
mov
gs
xor
addr16
xchg
mov
sbb
and
pop
pop
leave
cmp
mov
arpl
rclb
fadds
mov
pop
gs
arpl
daa
insb
mov
lahf
scas
sbb
inc
lcallw
movsl
mov
sahf
fiadds
addb
mov
cmp
call
pop
stos
cltd
xor
mov
call
mov
mov
dec
sbb
sahf
rcrl
xor
fcomps
cwtl
inc
cs
cmpsl
pop
mov
hlt
mov
dec
test
dec
inc
nop
jno
iret
push
lahf
fs
mov
ret
mov
jmp
sti
mov
sahf
lods
arpl
pop
call
out
ret
mov
outsb
mov
ljmp
cmpl
les
mov
out
cmp
mov
cmp
mov
outsb
call
fsubl
sti
pushl
fwait
or
xor
inc
mov
sbb
clc
push
loope
lcall
cltd
decl
or
sbb
cmpsb
stos
mov
test
push
mov
int
test
mov
pop
mov
cltd
ret
sbb
mov
sahf
jg
add
jbe
fs
daa
icebp
dec
int
and
in
push
pop
das
jns
int3
inc
inc
psrld
out
push
imul
ja
mov
mov
dec
imul
in
lds
int3
ja
and
and
in
dec
xor
add
push
in
add
add
xchg
pop
test
pop
pusha
aam
add
mov
es
mov
push
mov
out
mov
push
fcoml
add
jmp
hlt
stc
stc
fdiv
enter
push
xor
idivl
ja
pop
pop
adc
sbb
cmp
loopne
insb
mov
testl
imul
mov
and
sbb
imul
xor
test
fidivrl
fldl
pop
sbb
fpatan
notb
push
pop
mov
in
fwait
pop
mov
movsl
add
outsb
jge
cli
xor
and
pop
adc
rcl
scas
xor
lret
test
dec
lock
push
add
push
pop
push
cltd
addr16
insb
aaa
mov
cltd
sbb
mov
mov
sbb
outsl
xchg
setnp
mov
cmc
push
mov
xchg
jne
outsl
in
loopne
push
out
lret
aad
aaa
add
inc
push
ja
fwait
dec
fimuls
mov
negb
ljmp
mov
xor
in
rorb
loope
jne
xor
insb
das
cmpl
rcrb
jnp
and
adc
cmc
mov
aas
cld
adc
or
jmp
fidivrs
scas
sarl
scas
sbb
cli
xchg
sbb
jg
pusha
leave
int3
push
das
cli
xlat
mov
sbb
jnp
xlat
dec
nop
lcall
or
lret
shrl
sti
leave
mull
push
ja
aam
sbb
inc
cld
mov
fucomip
xchg
pop
movups
mov
cmp
jcxz
sbb
movsb
int
lds
or
shr
js
int3
lea
lahf
sbb
xchg
mov
mov
insb
adc
or
push
dec
inc
je
sub
insb
lods
nop
out
iret
xor
imul
xor
mov
sbb
and
imul
pop
insb
push
flds
pop
jp
mov
fstpt
fdiv
jmp
mov
daa
add
and
sbb
int3
pusha
xchg
test
inc
push
mov
push
ret
lds
mov
mov
testl
xor
imul
mov
fists
lds
in
out
loop
notb
inc
test
cmpsl
dec
js
jbe
cmp
rcrl
into
xor
insb
andb
pop
dec
lret
sbb
and
inc
pop
ds
push
or
push
pop
pop
mov
push
data16
xor
std
cmp
push
xor
dec
inc
mov
ja
sbb
push
and
inc
gs
rcll
int3
xchg
lcall
rorb
out
or
lret
pop
cmpb
icebp
aas
mov
mov
mov
scas
mov
ffreep
xchg
push
and
sub
lret
push
and
jbe
mov
fisubrs
xchg
ss
inc
fldenv
ljmp
pop
pop
fs
adc
inc
pushf
out
pop
xchg
jge
mov
push
cmc
shlb
dec
pop
xchg
jg
dec
repz
add
jae
out
sub
or
xchg
add
mov
aad
pop
iret
inc
pop
xchg
outsb
divl
popf
pop
inc
cmp
lret
xor
into
xchg
lret
stos
enter
jne
jg
iret
dec
outsl
mov
repnz
pop
sbb
sub
cwtl
adc
scas
in
daa
je
negl
jle
scas
mov
fbstp
mov
ja
ret
jecxz
test
fiaddl
mov
stos
lahf
roll
ljmp
and
or
and
dec
pop
sub
loop
cmpsb
inc
jl
inc
push
xchg
hlt
push
dec
sbb
lock
xor
mov
pop
pop
andb
in
mov
mov
ret
cli
out
inc
sbb
into
movsl
loopne
sbb
and
lcall
add
mov
mov
sbb
lods
js
jle
pop
decb
mov
xchg
stos
xor
jl
in
lods
cli
lret
pusha
mov
push
test
or
aam
xchg
sbb
mov
jno
out
cmp
bound
dec
mov
cmp
mov
mov
xor
imul
hlt
shl
subb
out
add
fstl
sub
popa
cwtl
movsb
pop
dec
add
scas
shlb
adc
es
negb
in
push
cmpb
fs
movsb
add
int
jns
push
mov
enter
jp
mov
idivl
data16
pop
inc
nop
std
lods
mov
lahf
les
dec
test
loope
decl
xchg
mov
lea
imul
fistps
mov
test
aam
rep
call
or
inc
test
leave
leave
xchg
jnp
push
mov
mov
xchg
pop
cmpsl
adc
add
pop
add
stos
jae
dec
or
adc
mov
insl
mov
adc
lret
mov
data16
pop
mov
xchg
popf
pop
mov
das
inc
cli
pcmpeqd
cmp
and
stos
cld
sbb
scas
test
and
jno
inc
test
dec
test
shrl
call
nop
rolb
inc
cmp
addr16
pop
aad
and
ret
cld
test
out
iret
popf
pop
jecxz
insl
sub
mov
lods
cmp
mov
mov
jb
ud0
pop
xor
xor
call
mov
add
ja
lods
inc
mov
mov
es
aam
jo
cmp
or
mov
or
pop
jnp
ja
inc
jnp
mov
lock
lea
insb
sti
fdiv
dec
bound
popa
mov
xchg
inc
lcall
jb
mov
jb
ret
in
mov
and
or
mov
xbegin
or
adc
icebp
addr16
out
xorb
dec
xor
cmp
cmp
and
push
sar
pusha
dec
sub
xor
and
ret
cmp
and
fidivrl
test
add
sub
outsl
insb
fdivl
cmp
mov
xor
jo
movsb
push
push
push
adc
adc
push
std
pop
push
push
xor
js
rcll
mov
push
xor
cwtl
xchg
add
cmpb
decb
lds
aam
pop
scas
ja
add
xor
ret
fisttpll
mov
andl
mov
and
int
out
hlt
sahf
pop
xchg
daa
pop
jge
sub
jg
sarb
icebp
ss
sub
or
fiaddl
pop
sub
cs
cmp
xor
sbb
jns
push
rorb
inc
addl
xor
jge
xor
int
fiaddl
popf
std
jmp
sub
dec
clc
test
shll
sub
xorl
add
std
je
sahf
mov
arpl
int3
cs
out
mov
jnp
testb
pop
pop
aad
movl
inc
add
dec
cmp
iret
insl
mov
and
dec
xchg
fcmovnb
xor
int
aad
out
daa
sub
add
ljmp
sbb
fisubrl
jae
int
cmpsl
pop
fidivrs
mov
mov
mov
jecxz
arpl
sbb
jnp
push
push
or
ficomps
cmp
inc
adc
in
orl
lret
out
cld
mov
mov
test
or
repz
hlt
ss
add
clc
xor
jb
dec
xchg
adc
sti
jg
pop
xchg
movsb
ret
push
xor
in
out
idivl
test
rcrl
pop
xchg
movsl
aam
aam
push
cmc
fnstsw
and
sub
or
shlb
xor
lds
cli
cmp
fwait
sbb
inc
push
lret
ficoms
and
ja
pop
repz
jns
enter
repz
mov
add
in
movsb
jle
xchg
push
sub
cltd
xchg
xchg
adc
stos
and
fistps
add
jge
sbbl
mov
mov
test
or
or
roll
cmc
cwtl
push
out
add
push
scas
mov
add
decl
pop
lods
fidivs
je
push
mov
test
cld
add
out
xor
and
loope
cmp
sbb
les
out
movsb
fdivr
add
or
filds
cs
repz
adc
adc
cmc
inc
mov
add
push
cmpsb
aad
xor
mov
loopne
loopne
and
dec
shr
bound
xchg
push
ret
enter
das
test
inc
add
add
sbb
icebp
add
inc
stos
push
popf
xor
inc
adc
xchg
movsl
imul
lahf
icebp
cmp
and
cmp
jmp
aad
mov
repnz
xchg
lock
cmp
adc
outsb
pop
xchg
inc
jge
stc
jle
test
ret
cld
pop
add
fcoml
pop
mov
mov
xchg
jnp
jl
out
cmpsb
mov
jne
jno
fimuls
push
pop
mov
fisubl
sti
in
pop
shr
xchg
mov
dec
test
shlb
adc
ret
pop
rol
mov
fwait
mov
xchg
out
aas
stos
out
jne
adc
push
in
dec
pop
dec
mov
jmp
aas
addb
adc
sub
jmp
jecxz
cs
sbb
test
adc
cmp
pop
aam
testl
sbb
fcoms
ds
pop
or
imul
and
aad
test
add
cmp
rcrb
adc
cmp
int
xchg
mov
and
jmp
jbe
pop
cmp
jne
dec
pop
cli
jbe
dec
fwait
jno
inc
or
and
jnp
sbb
loop
xchg
pop
repnz
imul
out
mov
stos
lea
sub
sub
xchg
lods
adc
rcll
jne
ja
jnp
sti
add
push
stc
test
arpl
jns
lret
scas
fidivl
shrb
stos
sbb
imul
mov
adc
out
cld
gs
push
jg
push
das
mov
leave
cld
sbb
adc
inc
add
loop
scas
fsubr
push
cmp
popa
xlat
in
sbb
mov
outsb
mov
adc
sub
pop
push
insl
inc
mov
in
sub
add
jecxz
lret
mov
sub
push
scas
loopne
fbld
pop
mov
lds
aad
call
add
in
pcmpgtw
stc
xchg
push
push
add
xchg
in
mov
insl
sbbl
lea
incb
cmpsl
addr16
pop
enter
mov
mov
jno
dec
lcall
mov
mov
mov
sub
sbb
int3
lock
add
jp
ret
je
push
and
pop
dec
es
pushl
leave
aad
inc
jl
pop
lds
dec
in
or
push
add
iret
push
fxch
mov
xor
push
loope
mov
testl
dec
shlb
adc
push
mov
insl
push
push
mov
out
mov
std
movsl
adc
faddl
or
xor
add
or
and
cmp
pop
sub
test
outsl
jbe
add
mov
iret
mov
cld
fisubl
push
bound
das
nop
adc
cwtl
push
mov
in
in
mov
or
or
cmpsl
pop
ror
mov
and
sub
imul
pop
daa
jno
push
fwait
sahf
cld
sub
push
push
dec
adc
inc
cwtl
outsw
mov
inc
scas
add
jl
bnd
fs
jle
aaa
fnsave
mov
ljmp
stos
xor
or
add
jge
sbb
and
push
loope
in
mov
and
mov
sub
movsb
je
das
jmp
int3
stc
or
mov
lcall
xchg
orb
xchg
cmp
sbb
push
sbb
out
les
mov
loop
pop
in
push
mov
movl
in
inc
std
vcvtsi2sdl
sti
movsb
pop
stos
jp
sarl
mov
inc
popf
nop
and
insb
shll
hlt
ds
cmp
pop
aaa
mov
js
and
xor
adc
in
pushf
fs
bound
mov
pop
daa
sti
movsl
lahf
or
jb
clc
fcmovb
dec
lahf
je
jmp
xor
dec
gs
dec
jnp
push
jle
xchg
nop
mov
sub
or
and
fidivrs
clc
adc
sbb
inc
pusha
mov
inc
dec
xor
aam
push
nop
cmp
jo
pop
jne
fsubl
out
push
movsb
in
fbstp
dec
test
loopne
push
xchg
mov
cmpsl
in
sahf
and
fnstcw
mov
loopne
pop
popl
push
mov
add
bound
push
js
sahf
mov
mov
aad
inc
adc
jecxz
fcompp
cmp
int
loop,pt
and
pop
dec
pop
je
enter
movsb
push
clc
jmp
xchg
jae
adc
jne
jb
call
dec
jae
pop
stc
jecxz
push
sti
int3
cltd
jmp
lock
xor
call
loop
add
push
lods
mov
lret
or
nop
sbb
ficoml
mov
into
popf
cmpl
sbb
out
xchg
in
sbb
cwtl
jle
sub
sar
ret
mov
push
scas
add
push
dec
sbb
pop
and
mov
testl
xor
pop
and
adc
mov
movsl
add
jl
sbb
inc
std
bound
cmpsl
add
or
and
sbb
pop
and
pop
cmpsb
out
arpl
imull
dec
jnp
rorb
push
nop
xlat
dec
test
push
pop
add
xchg
and
mov
xchg
out
adc
xlat
jecxz
mulb
or
adc
movsb
inc
mov
or
lea
cmp
cwtl
loop
bound
and
mov
mov
frstor
xchg
push
rorl
cmp
test
add
lods
mov
push
sub
mov
jecxz
ficomps
outsb
dec
sbb
sub
xchg
push
mov
mov
repz
loopne
stc
and
subl
subl
test
or
ljmp
dec
out
push
xor
stos
inc
lahf
pop
sub
push
cmp
sbb
outsb
adc
es
dec
sbb
inc
mov
cmpsl
jp
hlt
fwait
mov
push
fmul
repz
lods
adc
push
jnp
les
cmpsb
pushf
ss
lock
xchg
sub
js
mov
mov
pop
xchg
push
mov
scas
test
adc
fdivrl
in
repnz
js
lods
lds
clc
nop
in
loopne
hlt
push
int3
aas
mov
and
add
stos
mov
push
and
push
sbb
mov
mov
push
jnp
into
or
mov
outsb
jne
cmp
xchg
jge
jmp
pop
scas
cmc
imul
xor
inc
jecxz
pop
sub
add
gs
adc
dec
aam
je
adc
inc
jne
dec
cld
inc
push
pop
lcall
mov
call
andb
loope
test
das
in
xchg
out
xchg
pop
cld
in
xchg
out
rcl
add
xor
ss
int3
pop
inc
sbb
rorl
fs
out
dec
jb
les
movsl
lret
jp
in
mov
mov
call
xchg
or
fiadds
mov
out
sbb
xchg
pop
insl
pop
adc
enter
or
dec
jne
jp
sti
cltd
int
mov
push
dec
adc
hlt
lret
xchg
and
ds
mov
inc
rcl
sub
sub
sbb
pop
ss
test
jl
rclb
out
lock
loop
push
std
xor
movsl
jnp
push
aaa
sub
xchg
sahf
dec
and
xchg
mov
movsl
pop
adc
and
add
cmpsl
fidivl
cld
pusha
pushf
rclb
mov
in
icebp
jmp
dec
lahf
sub
stos
pusha
int
dec
aaa
pop
xchg
hlt
sbb
inc
ja
popa
mov
dec
ret
inc
sahf
pop
dec
mov
mov
xchg
jnp
rclb
das
das
insb
push
mov
pop
daa
cmp
sub
loopne
mov
js
in
mov
cmp
repnz
pusha
inc
dec
pusha
cli
cmpsb
sbb
cmpsb
dec
mov
popf
repz
jno
and
xor
xor
xor
xchg
adc
xor
ret
pop
push
imul
adc
test
jb
or
xchg
mov
fsubrp
jp
inc
enter
sarl
sbb
push
sub
adc
rcrb
stc
xchg
adc
cmc
mov
aaa
sbb
jge
or
sbb
inc
aaa
adc
imul
fidivrs
jns
mov
mov
aaa
cwtl
clc
lahf
insl
sbb
jl
mov
mov
adc
fadd
xor
mov
setns
mov
ds
fld
arpl
xor
sub
pop
nop
cmp
imul
mov
cli
icebp
cwtl
pop
inc
cwtl
clc
iret
insb
lods
pop
std
xchg
lcall
shll
add
and
cmpsb
mov
fisubrl
mov
inc
mov
jp
dec
test
stos
dec
stos
xchg
outsb
cmp
push
scas
and
mov
imul
jg
imul
jo
push
xchg
cs
aaa
sub
jbe
leave
inc
adc
sub
and
inc
fists
aad
ror
stos
mov
xor
adc
sbb
and
adc
cs
xchg
mull
lock
dec
and
xchg
or
sbb
push
fdecstp
inc
rorb
or
sbb
lods
ljmp
es
dec
and
nop
inc
ficomps
loope
hlt
push
xchg
mov
loope
mov
and
insl
jp
daa
aaa
push
shll
xchg
and
sub
add
lahf
scas
std
in
loope
jecxz
bound
testl
mov
fnstenv
outsb
jmp
dec
dec
data16
in
mov
in
lret
mov
add
xchg
adc
in
pop
sub
or
add
pusha
lret
lahf
push
pop
pop
mov
pop
sub
leave
cmp
je
sahf
in
jnp
and
or
bound
xor
push
and
fidivrl
out
adc
sbb
push
lock
pushf
cs
sti
mov
lcall
roll
orl
shrl
inc
repnz
xor
dec
lret
fcoml
mov
jo
mov
stos
sub
add
jge
or
pop
movsb
add
in
test
sarl
inc
insl
shll
test
mov
sarb
mul
add
xor
lahf
insb
mov
pop
pop
ljmp
inc
and
pop
cltd
fdivl
fs
cmp
pandn
cmc
dec
in
jmp
shrl
and
inc
add
les
or
mov
cmp
rcrl
cs
rclb
ja
js
mov
movsb
stos
inc
movsb
pop
and
loope
jg
sub
mov
ret
ret
inc
lods
push
stos
push
adc
jmp
sub
shlb
add
ljmp
xchg
xchg
inc
dec
inc
rol
mov
sahf
mov
xchg
lahf
mov
jo
or
sarb
adc
sti
lock
mov
mov
cmp
into
pop
push
into
mov
fcoms
mov
fwait
rolb
cwtl
mov
test
and
dec
aaa
in
nop
xchg
rol
fs
mov
xlat
mov
outsl
push
add
or
adc
xchg
mov
sbb
insl
dec
pop
out
fwait
mov
cmpsl
adc
xchg
push
aad
xlat
dec
mov
inc
or
sub
ret
pop
mov
jo
add
sub
kunpckbw
outsl
lods
stos
add
repz
cmp
arpl
rclb
outsl
push
fsubl
pop
test
imul
cmp
push
lods
sub
cmp
xor
jl
fldl
xor
cld
fmull
xchg
mov
loopne
rol
xlat
pop
dec
jb
pop
lret
adc
es
sbb
push
pushf
fcoml
lods
fiaddl
ljmp
shrl
or
setle
sub
outsl
push
aad
dec
movsb
xchg
xor
add
sbb
fst
pop
ret
add
jnp
mov
push
cli
ljmp
sub
cmpsl
fcomps
and
stos
push
movsl
cld
insl
cmp
fidivs
cmc
or
ljmp
movsb
syscall
sahf
dec
stc
sbb
pop
frstor
icebp
pop
xchg
jmp
cli
fdivl
xor
out
adcl
lret
pop
add
add
mov
or
repnz
mov
sub
es
adc
fsubr
sbb
mov
into
lods
inc
rclb
fidivrl
push
inc
adc
mov
fistpl
add
add
mov
pop
and
stos
sub
gs
dec
jle
adc
pop
and
adc
lock
ret
lret
sahf
ret
sub
push
mov
cmc
scas
aam
xchg
push
mov
fistps
sti
xchg
sahf
jle
add
les
inc
fsub
adc
test
sbb
test
fdivs
mov
jne
push
dec
mov
push
push
shl
mov
mov
xchg
jmp
push
scas
or
test
mov
jl,pt
cmp
adc
out
lret
mov
sar
push
mov
bound
outsl
or
clc
cltd
test
popf
pushf
adc
mov
imul
pop
aad
or
inc
mov
push
int
sbb
push
or
insb
mov
repz
inc
lahf
sub
lods
pushf
jle
mov
daa
mov
div
leave
popl
adc
movsl
mov
push
lret
aas
addr16
push
nop
cmpsb
xlat
adc
pavgb
or
xor
ja
pavgw
jl
jp
test
jno
jmp
testl
adc
and
sarb
mov
push
mov
lret
mov
mov
rolb
jl
pusha
xchg
mov
xchg
imul
xor
pop
mov
je
call
ss
fsubl
mov
mov
rcr
pop
or
jb
and
push
dec
xor
sahf
jmp
cwtl
pop
push
out
push
or
add
cmpsb
adc
popa
call
dec
orl
xchg
sub
jg
pop
std
movsb
bextr
push
lock
dec
lds
scas
pop
iret
mov
push
and
std
fcomp
int
stc
fs
fidivl
jl
push
jg
sahf
sbb
and
sub
daa
fistps
mov
popf
pop
rorb
js
pop
jp
jl
mov
pop
inc
bound
mov
adc
jle
stc
ss
xchg
mov
repz
mov
sbb
push
sub
sbb
mov
and
in
iret
shlb
xor
mov
out
inc
mov
ds
insl
stos
dec
dec
addr16
xchg
out
cli
ds
sbb
mov
loope
pop
sbb
or
repnz
test
fstps
sbb
jns
stos
xchg
lock
sub
fistl
mov
cld
pop
ret
ret
shll
ss
outsb
sbbl
or
movsb
mov
dec
sbb
xchg
inc
mov
roll
dec
mov
xchg
jle
cmpsl
stos
shrb
mov
roll
fwait
mov
dec
outsb
lea
cmp
andb
adc
adc
mov
je
sub
jns
sub
sbb
dec
sbb
mov
data16
fstl
sbb
jp
das
dec
pusha
mov
ds
pushf
or
movsb
pusha
mov
out
xchg
adc
lea
inc
dec
popf
inc
fs
pop
jnp
pop
push
repz
pusha
pushf
jo
les
scas
pop
jle
adc
push
ret
adc
loop
leave
imul
mov
fsubs
pushf
cmp
xchg
mov
mov
mov
jle
mov
sub
ret
mov
faddl
lea
movsl
pushf
mov
test
mov
add
scas
mov
andb
jne
mov
or
push
popf
inc
mov
movsb
xchg
xor
shll
xchg
fistpll
jnp
jae
mov
pop
inc
or
adc
imulb
mov
outsb
xor
jle
ja
add
les
ja
and
out
stos
lret
subl
mov
inc
andb
arpl
ret
sub
sbb
dec
and
push
push
and
lds
ret
dec
mov
ret
rcl
cmp
pop
add
iret
and
sub
lcall
jo
dec
mov
mov
int3
sbb
out
in
push
sub
push
imulb
scas
pop
mov
pop
test
hlt
mov
test
xchg
xor
sbb
adc
sbb
testb
js
ret
xchg
mov
stc
fmull
lea
test
xchg
adc
mov
or
jecxz
push
std
jl
int
mov
sbb
and
adc
rorl
xchg
pop
jl
or
jle
scas
xor
inc
or
std
or
mov
daa
fs
ret
cmp
imul
cltd
ss
and
das
pusha
scas
arpl
pop
rorb
xor
xchg
fsubr
and
adc
popa
sbb
cmp
decl
xchg
rorb
mulb
sub
mov
xchg
aaa
inc
lock
movsl
add
bound
inc
pop
ffree
fucomi
push
lahf
pop
push
push
je
push
int3
push
sarb
push
sbb
adc
ds
adc
jbe
stos
jne
jnp
push
adc
push
int3
stos
imul
hlt
leave
add
or
or
pop
fmuls
leave
or
mov
outsl
shlb
inc
mov
andb
or
pop
and
ss
push
xchg
cmp
pop
add
push
push
cltd
cmp
or
rcl
inc
adc
push
out
adc
lods
stos
shlb
push
out
in
pop
pop
jle
cmc
es
add
mov
out
ficoms
cs
mov
jno
cwtl
test
in
jnp
adc
push
push
fcmovnu
pop
mov
shll
jb,pn
jo
aad
loop,pn
and
aas
testl
add
stos
std
pop
cmc
mov
mov
mov
adc
mov
stc
inc
fimuls
dec
xor
sub
mov
ds
push
sti
cmp
mov
adc
shlb
mov
jle
pop
or
mov
cmp
aaa
leave
mov
push
sbb
pop
hlt
and
cli
popf
jo
ss
mov
lret
push
mov
cmc
subl
rorl
lret
pop
stos
out
cmp
int
dec
jle
test
mov
pop
insl
mov
push
jae
test
mov
xchg
jnp
loop
adc
scas
pop
rcl
cmp
and
jne
inc
sbb
ljmp
ss
clc
sub
lcall
inc
sbb
jno
fcmovbe
cmpsb
jo
lds
scas
pop
lods
xchg
and
pop
sub
ja
subl
les
xchg
xchg
movsb
inc
dec
dec
mov
scas
xchg
test
sbb
fs
ljmp
out
jmp
lret
repnz
mov
sbbl
dec
xchg
xlat
scas
push
pop
int3
fstp
sti
sti
das
stc
xor
test
or
test
std
sub
clc
pop
inc
inc
icebp
or
mov
movsb
xor
sub
inc
inc
fs
sub
in
mov
inc
jmp
adc
dec
xchg
mov
orb
push
sbb
cwtl
fxch
enter
es
lret
pushf
jl
gs
inc
adcl
int
xor
and
mov
int3
jecxz
fwait
out
push
ja
ljmp
mov
es
adc
sbb
sub
jne
cld
xlat
mov
cmp
dec
aas
in
or
test
and
shl
icebp
adc
xor
dec
enter
js
adc
or
mov
inc
jmp
or
push
sbbb
xchg
sbb
xor
lds
push
pop
pop
mov
decb
sub
jp
loop
mov
jge
stos
in
rcrl
inc
test
push
in
add
and
inc
in
out
cmpsb
lods
add
mov
inc
pop
cs
lds
out
jecxz
mov
movsw
inc
push
in
in
sub
xor
add
clc
adc
test
and
jb
inc
scas
daa
aam
or
sbb
shrd
jge
inc
out
inc
movsl
pop
jg
cmc
fsubl
ss
outsb
inc
mov
inc
in
mov
mov
mov
popa
sub
ja
adc
pop
and
lret
ret
xchg
or
xor
xorb
clc
ret
int
jmp
mov
jb
movsb
add
fiadds
cs
popf
mov
int
cwtl
pop
pop
sub
fidivl
mov
loope
push
mov
xor
iret
out
cmp
pop
xor
cmp
inc
daa
add
cmp
in
push
dec
inc
xor
imul
nop
adc
add
incl
mov
mov
jp
sub
add
mov
pop
pop
jne
mov
inc
cmpb
jnp
xor
jo
xorl
stos
notb
and
inc
out
push
push
lahf
jbe
aas
xlat
xchg
flds
out
xor
clc
fs
cli
arpl
jecxz
out
adc
scas
sub
mov
xor
mov
mov
mov
gs
mov
add
rcrl
insl
lret
pop
inc
inc
adc
mov
in
xor
mov
jecxz
imul
and
mov
sbb
popf
mov
cmp
int
mov
push
jae
fstpt
sahf
movsl
xor
pusha
sbb
rclb
xor
mov
cld
outsb
xor
in
inc
test
xchg
test
das
in
aas
sbb
movsb
pop
add
jne
fbld
in
outsb
inc
sahf
jl
xor
ss
xor
outsb
push
or
inc
insb
pop
fwait
mov
out
shrl
dec
mov
inc
test
dec
out
dec
hlt
xchg
jbe
data16
negb
aaa
aas
adc
adcb
cmp
mov
xchg
test
mov
cmp
mov
adc
dec
lret
enterw
mov
clc
pop
cmp
stos
push
ja
cld
loope
mov
test
pop
mov
imul
out
and
popa
push
pop
cltd
push
dec
or
mov
sub
adc
movsb
xor
hlt
jo
fcmovne
ret
int
in
xchg
insl
sbbb
pop
out
mov
insw
cwtl
xchg
nop
repnz
mov
mov
mov
jns
xor
mov
mov
add
mov
xor
loope
cmp
incb
push
add
shll
test
lods
xlat
or
push
sti
movsb
scas
xor
arpl
adc
icebp
jle
pop
xchg
int
lods
sub
jno
jg
test
adc
and
jb
mov
ja
cld
gs
out
test
filds
sbb
out
cmpsl
scas
push
and
lods
roll
gs
pusha
divb
or
xchg
mov
icebp
outsb
mov
enter
mov
mov
or
ret
mov
cmp
pop
loop
rolb
int
ss
arpl
mov
and
pop
cmpsl
sbb
aam
es
scas
sti
std
add
add
mov
sbb
mov
popa
add
xchg
fs
and
push
fsubrl
ljmp
xor
dec
jnp
cmc
dec
push
lds
or
xchg
xorb
cs
push
or
punpckhbw
push
sub
inc
pop
add
or
loopne
jecxz
xchg
jge
mov
or
test
ja
cmpsl
incb
jecxz
sbb
scas
leave
out
inc
dec
insl
sub
mov
aas
movsb
mov
leave
push
push
inc
aad
mov
imul
lds
pop
sbb
mov
ljmp
aad
xor
cs
pop
pop
loopne
xchg
jp
mov
inc
cmpsb
add
inc
int
lea
aad
xchg
mov
dec
push
mov
xor
mov
jge
pop
adc
imul
dec
in
sub
sbb
in
daa
and
stc
pop
js
cmp
dec
je
mov
and
or
nop
or
sub
clc
mov
mov
dec
pop
addb
scas
fisttpl
push
cmp
mov
cmc
dec
add
sub
jl
xor
or
pop
xchg
test
xchg
sub
popa
sub
jmp
sbb
xchg
scas
ret
inc
bound
insb
xchg
sbbl
xchg
inc
insb
mov
pusha
push
lcall
jo
ds
cmp
mov
jmp
add
lret
test
in
push
lea
out
xor
or
iret
pop
pop
jmp
mov
rcrl
pop
pop
insb
movsb
das
xchg
pop
fidivrl
push
hlt
sbb
ret
jmp
or
dec
cmpsl
int3
add
ret
cmpsb
pop
push
mov
xchg
pop
jmp
ja
cmp
enter
push
pop
pop
fadd
push
aad
xchg
xor
inc
cmp
pushf
sbb
sub
adc
in
jns
mov
fsts
mov
jle
sub
pop
in
jge
testl
pop
test
mov
hlt
cmp
in
pop
cmp
and
fisttpll
adc
rorb
movsl
addr16
adc
sti
leave
je
jno
repnz
inc
add
addr16
add
pop
inc
rol
jno
lret
jle
dec
sahf
pusha
mov
subb
mov
add
push
mov
xor
sahf
sbb
xor
popa
test
adc
sbb
and
xlat
dec
sbb
xchg
mov
pushf
dec
and
clc
xchg
and
mov
ucomiss
arpl
xchg
fs
cld
mov
jmp
pushl
jae
clc
mov
mov
iret
lret
cmp
not
push
sub
add
inc
rol
aam
sub
mov
sbb
ja
mov
push
testl
mov
scas
shrb
popf
mov
push
stos
mov
xchg
add
ja
mov
mov
jecxz
xor
insl
punpckhwd
pop
loopne
testb
lahf
pushf
sahf
pop
lds
je
stos
jle
push
sub
test
add
clc
inc
xor
mov
jle
je
mov
loopne
xchg
cli
mov
pop
dec
les
inc
mov
stos
and
in
sub
or
cmc
adc
push
mov
insl
push
pop
adc
enter
sub
sbb
push
xchg
pop
ret
gs
and
imul
rcll
stc
mov
cmp
add
call
pop
xchg
push
pop
mov
mov
out
scas
or
scas
sub
clc
mov
ret
lods
push
inc
xchg
gs
add
xor
adc
mov
lods
repnz
mov
sbb
aam
subb
es
in
in
xor
cmp
pusha
adc
ds
mov
or
push
mov
xchg
imul
jne
dec
sbbl
or
adc
mov
sti
and
xchg
add
int3
std
in
rol
dec
push
push
sbb
movl
gs
adc
sarb
test
inc
ret
ficoms
and
jns
stos
or
shrb
mov
outsl
jo
and
cmp
or
pushf
and
pop
insb
add
push
adc
in
push
sbb
push
add
jmp
pop
hlt
or
call
iret
jae
stc
push
ds
clc
lret
addr16
ret
mov
pop
or
dec
scas
sub
bound
jns
pop
dec
dec
mov
xchg
adc
cwtl
lahf
pop
pop
dec
sbb
jae
add
push
push
mov
push
iret
lcall
xor
pop
lods
shr
mov
add
enter
push
mov
or
fsubl
vpshufhw
jns
jle
daa
out
sub
mov
mov
jge
dec
add
filds
pop
adcb
insl
and
and
outsb
push
psubw
xchg
jb
mov
pop
loopne
notb
pop
mov
fiadds
push
mov
push
xchg
out
pop
stc
jne
rolb
jmp
bound
orb
and
push
je
arpl
mov
or
cmp
test
dec
and
bound
mov
test
push
mov
jmp
inc
ret
adcl
push
pop
into
fdivr
and
jg
and
xlat
and
inc
cmc
repz
pop
incl
leave
inc
add
sub
stos
out
push
sub
and
dec
inc
mov
cmp
or
jne
mov
dec
mov
or
mov
lcall
fwait
imul
daa
in
int3
loop
and
jg
sub
fstpl
popf
pop
cltd
repz
cld
ds
push
mov
mov
retw
add
sti
sbbl
jmp
xor
mov
dec
mul
adc
sbb
imul
or
sbb
int
xor
jg
mov
push
pop
mov
fdivrl
fcmovbe
out
out
fisubrs
and
pop
fidivrl
or
push
pop
push
mov
loope
lcall
mov
outsb
cmpb
mov
test
push
pop
pusha
sbb
pop
stc
imul
sub
mov
mov
xchg
push
filds
pop
adc
sub
jno
js
and
int
lahf
daa
test
and
pop
jb
aam
iret
cmp
add
imul
sub
shlb
test
jp
sti
arpl
jle
fidivl
mov
lock
int
pop
shlb
adc
testl
fmuls
bnd
sub
add
pusha
xchg
pop
xchg
inc
dec
cmpsb
or
mov
mov
jb
stc
jmp
xor
or
sub
add
cmp
in
lea
scas
jbe
jns
adc
sub
test
mov
dec
movb
scas
mov
subb
xchg
mov
xorl
pop
mov
adc
adc
dec
movsl
insl
sub
mov
faddl
lret
ret
or
stos
test
jg
xchg
neg
rol
iret
cmc
sbb
call
cmp
aam
popf
mov
fnstenv
sub
sbb
sub
aas
cld
push
pop
mov
adc
es
push
out
aaa
js
and
pop
leave
das
and
lock
dec
xchg
sub
in
cmpsb
xchg
mov
jmp
pushf
in
lret
jbe
aad
cmp
lret
das
jb
pop
std
rolb
lods
aas
dec
in
and
sbb
cs
pop
jecxz
aam
mov
rcrl
sub
push
push
cmpsb
cmp
mov
push
popa
mov
inc
cmc
aam
xchg
add
and
mov
js
pop
pop
scas
mov
je
std
fcmovbe
mov
mov
shlb
xor
adc
xchg
ret
lret
add
ret
lods
icebp
decb
scas
rcr
pop
pop
fucomi
nop
dec
sbb
cwtl
jns
dec
shr
push
xchg
pop
pop
out
dec
cmp
gs
push
call
xchg
sbb
test
inc
push
imulb
pusha
add
int
cmp
push
pop
xchg
mov
cwtl
inc
lret
or
pop
ss
and
lret
jne
or
cltd
sbb
fnstsw
and
xor
je
push
pop
lret
mov
add
sub
dec
push
sbb
push
jle
insl
test
cmp
cmc
and
add
and
int
out
mov
mov
lret
jb
repnz
inc
js
mov
subb
sub
cltd
push
loope
mov
add
test
adc
pop
pushf
jb
jg
mov
punpckldq
xor
pop
lret
push
cmp
add
test
or
out
iret
mov
mov
icebp
cld
xchg
iret
jl
xchg
inc
fcoms
lock
out
or
stos
out
cwtl
xchg
xchg
sub
pop
test
rclb
inc
fidivl
lcall
dec
and
jno
test
pop
xchg
adc
inc
insb
mov
jecxz
cmpsl
cltd
sub
ret
out
loopne
insl
pushw
popa
add
cmp
out
xchg
mov
fcoml
dec
fcomi
sub
mov
dec
add
jle
push
in
in
dec
outsl
adc
jecxz
shll
lret
jne
rol
jnp
xor
ficomps
mov
rolb
es
mov
int
das
outsb
jb
fcomi
jo
fldcw
arpl
sub
nop
stos
out
inc
mov
dec
addb
ret
or
adc
or
data16
sahf
jmp
sub
mov
ret
and
fists
fwait
cmp
push
test
push
sub
aam
cmp
stos
ficomps
mov
fistps
or
popf
add
aas
or
cwtl
push
outsl
inc
mov
int3
outsl
lea
fldcw
and
add
push
or
mov
sub
nop
xchg
and
cmpsl
jmp
pop
mov
add
sbb
repz
into
jle
xor
xchg
xor
mov
negl
xor
add
push
push
imul
arpl
add
jnp
pop
out
mov
sub
pop
dec
lods
movb
push
test
mov
mov
imul
mov
fs
push
push
out
scas
fstp
std
or
inc
mov
mov
in
push
adc
sub
jb
xchg
or
int
into
mov
sbb
arpl
pop
xchg
mov
cwtl
lahf
rclb
cmp
mov
shll
and
push
xor
and
adc
adc
push
mov
jge
sbb
imul
rorb
mov
inc
jmp
jge
xchg
sbb
sub
fnsave
adc
pop
loop
bnd
es
cmpsl
adc
imul
dec
rorl
cmp
movsb
rolb
cmp
std
fisttps
mov
cld
and
not
sub
cmc
loop
or
loopne
mov
fs
movsb
inc
jl
dec
adc
inc
push
mov
push
add
sub
pop
aam
and
daa
divb
decl
add
jecxz
cld
pop
outsl
xor
jge
xlat
cmc
mov
aas
ss
in
jno
int3
dec
or
les
push
xchg
lea
push
in
faddp
jo
inc
or
fdivr
call
jnp
mov
jmp
movsb
cmp
pop
call
pop
das
in
js
push
leave
push
fucom
add
lock
les
dec
add
cwtl
ljmp
xor
lods
inc
xor
addr16
and
notl
lock
push
loop
cmpsb
fcoml
pop
stos
sbb
outsb
fcompl
pop
addr16
cwtl
sub
mov
add
fisttps
push
jge
imul
dec
mov
sbbl
iret
cli
aas
sub
ficoml
and
jae
lock
push
cmp
insb
lods
mov
mov
sub
and
pop
jg
dec
xor
cmp
jne
ds
aaa
loop
inc
cli
lcall
repnz
sahf
das
sub
and
xchg
sbb
and
ret
or
lds
adc
adc
fdivs
cwtl
lock
fndisi(8087
loop
int
push
mov
dec
scas
mov
cmp
push
jae
adc
sub
testb
call
je
sbb
sub
loop
pop
xchg
and
gs
add
pmulhuw
push
clc
scas
dec
dec
or
test
mov
mov
lret
cmp
pop
xchg
aaa
in
push
cltd
mov
mov
xchg
cmp
sbbb
in
xchg
pop
cld
mov
clc
xchg
repz
cmp
fs
jne
in
lea
cmp
xchg
shlb
icebp
jno
sub
sub
mov
push
loope
push
loope
add
or
loopne
cmp
dec
cmp
inc
lret
iret
shlb
sub
push
call
test
add
xor
xor
and
mov
pop
mov
divps
in
clc
stos
push
icebp
cmp
ret
inc
test
ja
in
insl
shl
out
out
fcomp
jne
push
dec
mov
inc
and
das
mov
jl
push
lret
xchg
add
inc
movsb
addr16
push
ja
push
lock
mov
sub
push
std
and
daa
loope
rcrb
dec
gs
insb
jge
or
xor
jnp
cmp
es
das
push
and
test
cltd
repnz
inc
out
fwait
pop
sti
sbbl
int3
fildll
push
jno
xchg
mov
and
xor
add
xchg
xor
or
sub
xor
outsb
adc
test
mov
shll
sub
enter
adc
mov
inc
sbbl
pop
cmp
arpl
in
cld
sbb
loop
aad
fsts
aam
fldenv
push
aam
hlt
cmp
inc
lret
cmpsb
flds
and
mov
insl
repnz
mov
pop
jae
pop
leave
orb
aam
out
mov
mov
stos
mov
xchg
cld
sub
aas
inc
cmp
mov
sti
mov
jne
push
inc
rclb
and
stos
imul
jnp
mov
enter
or
out
scas
and
jb
mov
jl
inc
lcall
loop
in
adc
sub
icebp
mov
cmp
mov
pop
mov
inc
outsb
jp
icebp
rclb
clc
jb
push
xlat
movsb
push
mov
mov
in
inc
xchg
mov
jmp
jns
in
ja
das
or
push
loop
call
jmp
cmp
icebp
add
cmp
test
dec
jp
insl
roll
push
and
in
sub
jno
in
stos
xchg
xor
inc
mov
out
data16
out
int
jp
mov
inc
call
inc
inc
out
mov
cmp
mov
mov
ja
fwait
gs
xchg
inc
xchg
mov
or
cmp
push
sbb
in
sub
sbb
sbbl
lret
cltd
xchg
cmp
fidivrl
mov
lods
dec
les
sbb
jl
adc
pop
mov
imul
fisubrl
fiaddl
sahf
pop
sub
mov
add
add
adc
push
int3
xchg
leave
pop
push
dec
jne
in
cmpsb
enter
cmp
ljmp
and
cli
xor
ret
test
mov
xchg
repz
xchg
xchg
push
call
and
mov
mov
jle
xchg
jg
lret
mov
push
sbb
xor
add
mov
ljmp
xor
dec
mov
mov
lods
imul
lcall
test
testl
sbb
clc
sub
mov
dec
pop
jge
adc
pop
inc
push
push
lahf
add
lret
leave
jecxz
add
jbe
sub
xchg
in
popa
push
nop
inc
sub
fadds
jnp
mov
lret
outsb
adc
into
adc
lahf
push
inc
andl
mov
mov
adcl
pop
and
cmpsl
pop
hlt
je
adc
in
ret
int
loopne
or
jb
xchg
pop
rorb
fstpl
add
imul
aaa
push
cmp
jnp
pop
pop
cmc
in
dec
inc
outsb
push
mov
mov
cmp
bound
pop
xor
mov
out
test
push
jp
lret
data16
add
or
jno
push
imul
rorl
negb
pop
mov
sub
imul
pop
dec
pop
xchg
dec
or
push
sub
lcall
rorl
ja
and
rcrl
mov
mov
notb
cmp
sahf
and
or
sub
cmpsl
and
enter
pop
fmull
add
ljmp
adc
xchg
push
or
addl
enter
das
sub
loope
lods
or
call
jmp
stos
push
adc
or
push
mov
test
mov
sub
test
sbb
repz
repnz
or
stos
stos
cmp
adc
jmp
mov
mov
sub
fists
adc
out
xlat
mov
sub
sbb
mov
push
mov
test
push
fdiv
sub
jl
in
xor
shll
dec
or
cli
sbb
aas
cltd
and
sub
adc
fmul
or
jge
int3
inc
test
fucom
cmpl
mov
lret
rcl
mov
pushf
cmp
sbb
test
test
fbld
xchg
or
sbb
xchg
stos
mov
aam
sbb
stos
lcall
xorl
add
rorb
adc
idivl
imul
xor
notb
push
push
jmp
out
outsb
or
sub
xchg
mov
insl
nop
loop
xlat
loop
pop
push
insb
aad
cltd
test
lods
mov
xor
lods
popf
inc
mov
add
pop
roll
incl
in
fincstp
push
imul
lods
jnp
mov
dec
xchg
sub
adc
gs
nop
iret
mov
pop
cmp
out
jmp
jmp
icebp
out
in
fisttpll
aas
fisubs
xchg
lret
arpl
mov
sbb
or
sbb
jnp
cwtl
jp
into
jno
aas
mov
loop
push
lea
jb
xor
jle
push
jb
mov
popf
aad
in
cmpsb
mov
daa
push
jo
mov
int
jp
xchg
pop
mov
ja
sahf
jp
imul
sub
es
mov
pop
mov
dec
loope
sbb
rcl
jle
push
lcall
mov
frstor
int3
les
xchg
mov
repnz
ucomiss
ror
aaa
into
pop
outsb
cmp
push
sbbb
add
outsb
push
iret
inc
cltd
lock
inc
push
sti
andb
push
ljmp
fidivl
mov
jne
cmp
jbe
int
mov
scas
inc
mov
mov
inc
xor
xchg
cs
xlat
pushf
mov
mov
mov
jnp
sbb
cwtl
stos
xchg
cmp
jecxz
orb
nop
in
mov
mov
es
pusha
lcall
inc
and
sub
mov
repz
fs
lods
xor
mov
cmp
cwtl
mov
cmc
and
iret
adc
jnp
dec
call
mov
mov
xchg
movsb
mov
jnp
dec
js
inc
dec
pop
out
cs
sub
xor
or
imul
fistpl
or
jge
lahf
sub
fwait
mov
cltd
push
adc
adc
popf
push
mov
fwait
mov
testl
sub
add
xor
cmpsl
out
sub
add
imul
std
push
jnp
or
nop
aad
movsl
sbb
cmp
popa
mov
das
jb
jns
out
popf
add
and
sub
cwtl
mov
inc
popa
and
out
inc
cmp
aas
movsb
fmuls
cmp
cmpsb
lods
ret
jge
sub
movsb
and
or
xchg
shlb
jge
mov
test
cmp
xchg
push
sub
sbb
stc
sarb
movsb
test
sti
push
add
repz
cmp
lods
repz
lahf
cwtl
ret
stc
icebp
daa
sub
cltd
xor
mov
jb
pop
mov
repz
mov
cmp
sbb
inc
push
dec
mov
dec
push
and
imul
sub
in
sub
push
xchg
push
pop
add
and
imul
cmc
out
dec
mov
and
pushf
xor
jns
mov
sbb
ja
or
in
inc
jns
mov
pop
outsl
jecxz
inc
test
sub
repz
shll
ss
test
add
rcl
pavgb
out
pop
out
xchg
lahf
icebp
outsl
jne
push
or
mov
rolb
or
and
mov
push
xchg
jl
or
mov
repz
icebp
shl
jmp
shll
pop
cmp
lgs
nop
push
mov
xchg
repnz
inc
daa
cmp
xor
out
ljmp
push
xor
or
and
repnz
adc
mov
push
out
or
jmp
sbb
cs
outsl
cmpl
xchg
add
std
cmpl
mov
hlt
mov
add
lock
imul
sbb
aaa
lods
ljmp
mov
lods
repz
hlt
icebp
jb
inc
or
push
lcall
gs
clc
mov
push
push
sub
and
push
dec
jb
mov
pusha
shlb
push
cltd
loopne
shll
dec
mov
cmp
push
hlt
imul
ret
inc
adc
fdivr
out
dec
cmc
pop
xchg
mov
mov
pop
lcall
sub
test
inc
shlb
or
inc
pop
pushf
adc
push
outsb
fnstsw
in
xor
int3
add
fst
inc
cs
lcall
or
dec
clc
stos
pop
mov
scas
repz
lret
fiaddl
mov
xor
lcall
repz
pop
lods
cmc
cmc
leave
dec
pop
in
in
repnz
push
push
out
cmc
jmp
push
mov
lods
push
adc
lods
std
aam
addr16
fldt
in
adc
aaa
mov
lods
pop
pop
pop
inc
xchg
dec
dec
notl
sbb
and
dec
mov
je
push
adc
popa
jle
test
cmp
fwait
add
fs
push
sbb
aam
ss
pop
mov
push
movsl
inc
rcrb
les
mov
sarb
orb
mov
inc
int
push
pop
shlb
sub
bound
aad
jno
sbb
jle
jno
mov
arpl
ret
mov
mov
std
xor
testb
sti
fidivl
or
adc
sti
cmpsl
shll
mov
enter
jmp
hlt
pop
les
adc
sahf
and
mov
dec
cltd
faddp
outsl
push
cli
add
mov
inc
rclb
cmp
mov
and
inc
dec
mov
cmp
sub
add
sbb
xor
clc
xchg
add
and
dec
xchg
test
roll
xor
std
sub
pusha
adc
push
inc
aam
mov
jae
popa
push
inc
xchg
frstor
flds
sub
push
jns
sarl
sbb
out
ffreep
rcrb
sub
push
lock
loop
dec
out
add
cli
repnz
or
jnp
lcall
divb
or
insb
sub
and
test
jp
lret
fldt
leave
mov
add
push
mov
push
jge
jmp
xlat
nop
imul
xor
cmpsb
fstpl
negb
lock
sbb
sti
pop
sub
push
stos
and
xchg
setp
inc
fisubrs
push
mov
lcall
cli
jno
sahf
inc
aad
sbbb
push
fistps
mov
or
in
pusha
or
or
add
repnz
add
adc
push
jp
inc
in
inc
jb
shlb
xorb
sbb
sub
jno
push
mov
push
pop
pop
cli
je
dec
mov
lods
in
orl
bound
sarl
test
lock
sub
fldl
test
pop
push
dec
je
frstor
adc
ds
in
xor
jbe
mov
aaa
psadbw
mov
shll
psadbw
cwtl
push
adc
fdivl
pop
adc
sbb
mov
sarl
cltd
inc
scas
push
fs
imul
shl
jnp
and
movsb
jge
jl
in
fdivs
or
inc
lcall
inc
orl
pusha
mov
and
stos
mov
jecxz
sbb
idivb
out
jl
scas
sub
enter
lcallw
fmuls
sbb
loope
jmp
icebp
adc
cmp
push
das
jne
adc
cmp
bound
pop
jl
repz
out
jo
inc
test
xchg
mov
imull
adc
or
mov
loop
and
mov
jl
insl
lahf
in
dec
adc
std
pushf
es
mov
test
dec
dec
mov
sub
int3
leave
pop
lret
jne
xor
shlb
pop
lea
push
js
push
xor
addb
jge
and
fdivr
mov
cli
xchg
in
and
inc
mov
cs
ds
leave
jg
aaa
sbb
pop
xchg
test
rcrl
jne
ljmp
mov
roll
mov
mov
and
ret
xor
and
pop
xor
cmp
ret
adc
mov
lods
mov
orl
mov
test
das
subb
ret
test
mov
out
mov
push
xchg
popa
sub
andb
rorl
out
xchg
mov
and
push
mov
and
and
scas
outsb
and
lret
xchg
fsts
add
mov
fisubl
sub
jp
stos
push
or
pushf
and
jbe
dec
jnp
sub
dec
aas
daa
repnz
sbb
xor
outsl
push
xchg
enter
das
js
push
ds
cs
nop
shll
scas
pop
sub
imul
faddp
inc
inc
negl
mov
pop
lret
jmp
loopne
xchg
mov
mov
dec
fisubrs
daa
sub
and
aad
xchg
inc
add
and
lar
cmp
daa
lret
clc
mov
push
movsb
push
and
mov
or
cmp
outsb
aas
int3
sbbl
pop
push
movsb
call
std
popf
dec
and
sti
xchg
add
loope
icebp
jl
mov
push
jno
bswap
lods
mov
idiv
mov
fxch
movsl
shrl
clc
loopne
dec
jne
les
ljmp
jb
fidivl
jecxz
xor
xor
int3
xor
ja
nop
scas
xor
xchg
ret
lea
mov
adc
sbb
xchg
jbe
inc
mov
lcall
out
xchg
and
pop
cwtl
jl
sub
add
jg
inc
sub
les
fcmove
xlat
push
xor
lds
scas
add
push
ljmp
adc
enter
es
jbe
xor
or
loop
shll
cmpsb
mov
in
dec
fwait
mov
pop
lods
xorl
in
stc
lock
std
dec
repnz
sbb
std
dec
cmp
push
and
leave
dec
int3
xchg
pop
dec
fdivrl
into
push
push
sbb
pop
lods
xchg
hlt
xchg
and
std
sub
cmp
mov
mov
leave
sarl
cmp
xor
and
test
aaa
and
and
dec
add
rol
adc
pop
lds
fcoms
in
fidivs
adc
rcr
pop
call
and
call
inc
adc
dec
jne
js
mov
xchg
xor
push
in
pop
xchg
cltd
mov
pop
test
xor
std
lds
out
stos
fsubs
aam
jnp
ja
xchg
jb
lods
mov
int
test
mov
mov
sti
das
sub
sub
out
xorb
jge
sbb
shr
cmp
mov
dec
fdivrl
sbb
bound
xor
andb
jae
pop
ljmp
aad
xchg
jae
xchg
push
divb
stc
scas
and
mov
ja
mov
stc
or
push
sub
push
scas
push
ret
xor
ljmp
and
les
adc
mov
mov
js
xchg
xor
mov
jl
loopne
pop
pop
iret
push
je
mov
hlt
mov
xchg
cwtl
out
push
mov
mov
ljmp
loope
test
mov
mov
shrb
lret
repz
imul
mov
loop
xor
mov
adc
or
mov
cmp
fbstp
fs
hlt
cmpsb
jne
push
jne
ss
add
je
mov
inc
xchg
xchg
xor
push
lods
ret
and
jmp
mov
dec
das
out
or
sbb
pop
mov
jne
movsb
xchg
repz
add
xor
andl
mov
pushf
lods
stos
sub
ret
hlt
sbbl
ror
hlt
dec
and
jbe
push
ljmp
and
aas
je
rorl
sub
sub
adc
fnstcw
xchg
ret
shlb
push
add
loopne
sub
cmp
aaa
mov
push
outsl
push
fs
leave
dec
pushf
lods
jmp
cmp
and
fldcw
pop
call
inc
leave
inc
int3
dec
pushf
loop
mov
jle
fs
adc
fcomps
cld
push
xchg
mov
push
enter
pop
inc
mov
stc
test
inc
mov
fiadds
mov
test
lret
push
add
in
xlat
daa
insb
dec
push
inc
jbe
push
jmp
out
xchg
leave
fs
add
xchg
dec
iret
or
adc
out
sub
data16
mov
pusha
ret
ljmp
div
mov
clc
xchg
mov
adc
jbe
lcall
fcoml
les
leave
mov
in
push
je
xlat
pmaxub
aam
loopne
and
xor
mov
mov
push
push
imul
add
mov
dec
add
mov
xchg
jae
sarl
test
pop
das
adcb
addr16
outsb
and
jp
and
sub
push
sub
and
ljmp
xchg
ljmp
mov
scas
mov
in
or
iret
arpl
and
cmp
or
xlat
in
clc
mov
push
jno
dec
out
push
cmp
aas
dec
sbb
icebp
mov
imul
pop
mov
subl
sarb
cli
inc
daa
xor
mov
shl
sarb
jg
fstl
mov
pop
jo
pop
cmp
push
test
xchg
push
leave
dec
stos
or
out
flds
sbb
sub
and
lret
pop
adc
inc
and
vshufps
cmp
rorl
and
rcll
cmp
stos
mov
ficomps
jns
hlt
add
adc
pop
insl
adcb
fsubp
imul
mov
mov
cmpb
adc
mov
adc
jp
add
jmp
icebp
aam
inc
lods
aaa
xchg
mov
adc
int
inc
inc
push
pop
xor
mov
cmp
aam
xchg
notb
xchg
xchg
out
pop
and
test
cmp
rcrb
xchg
sub
or
pop
xchg
inc
mov
aaa
and
jb
mov
and
insb
fbstp
xchg
imul
push
fnsave
mov
addr16
daa
push
rcrl
sahf
pop
inc
lods
dec
inc
test
je
add
mov
xor
fwait
jp
sahf
pushf
shlb
inc
xor
xchg
xchg
cmc
call
add
fsubs
mov
pop
nop
test
xchg
push
mov
xlat
xchg
loope
es
push
idivl
ja
lock
xor
jg
loope
push
es
cltd
shll
aas
cs
ljmp
fwait
testb
xchg
mov
mov
mov
pop
data16
lret
popa
push
jae
bnd
pop
sbb
push
scas
bound
sub
sub
mul
fimull
dec
add
dec
sbb
fs
jg
into
and
inc
xor
jae
sub
shlb
pop
mov
aaa
pop
mov
add
scas
mov
dec
icebp
push
popf
push
loop
push
sub
int
data16
sbb
into
xchg
adcl
das
mov
lods
in
stc
push
push
cmp
pop
loope
push
loop
fsubl
push
inc
cmp
cmpsb
push
rorl
or
rclb
sar
fldt
lods
sbb
test
jne
sub
sub
cmp
mov
mov
or
add
push
push
sbb
subb
arpl
aam
cmp
mov
fisttps
insb
mov
dec
lret
mov
stc
xchg
xchg
sar
sbb
lods
les
sbb
mov
push
push
incl
jns
adc
aam
movb
jmp
mov
mov
xchg
cli
xor
rorb
outsl
inc
dec
rcrl
stos
cmp
cs
or
or
in
test
xchg
dec
push
adc
pushf
call
mov
addr16
in
cwtl
addr16
ret
and
popf
jp
insb
mov
xor
lea
aad
cwtl
ficompl
xchg
icebp
enter
dec
iret
pop
addl
jl
pop
cs
mov
rclb
mov
mov
inc
daa
add
addr16
push
aad
loopne
loop
stc
movsl
push
mov
and
mov
out
lock
push
xor
shrl
fadds
xchg
sbb
hlt
xor
fld
sahf
mov
lea
mov
xchg
cmp
paddw
xchg
mov
and
sbb
add
and
dec
cmp
and
mov
push
jmp
test
frstor
cmp
add
pop
inc
adc
mov
test
adc
sub
cmc
mov
adc
aam
xchg
or
xchg
leave
cmp
adc
jae
test
into
inc
adc
xchg
nop
leave
call
imul
dec
jb
and
mov
out
nop
int
or
mov
add
movsl
cmp
mov
aaa
lods
out
xchg
sarl
pusha
js
ljmp
mov
or
adc
xor
or
inc
cmpsb
adc
mov
jl
arpl
pop
lea
sbb
lcall
xlat
xor
and
add
js
mov
jbe
xlat
mov
xlat
repnz
push
cmpsb
push
inc
cmpsb
jg
idivl
bound
and
adc
jp
cld
mov
shlb
push
jge
test
xchg
dec
ret
dec
mov
jecxz
aad
pop
adc
aam
fwait
xchg
sub
push
add
xchg
jecxz
popa
and
pop
or
aaa
push
mov
dec
cwtl
xchg
repnz
es
repz
cmpsl
mov
adc
mov
outsl
in
sti
xor
push
add
jecxz
bound
adc
inc
push
aaa
adc
jno
pop
dec
sahf
jmp
add
ret
ljmp
fwait
push
fwait
add
jns
xor
push
enter
imul
hlt
idiv
popl
ja
sub
into
arpl
mov
incb
insb
out
call
icebp
add
sub
orl
pop
xchg
push
jbe
mov
aas
and
shrb
das
fstps
xor
mov
pop
loope
sbb
push
loope
cmp
or
mov
ljmp
inc
push
mov
add
fs
dec
movsl
int3
push
dec
pop
das
push
xchg
sub
not
ret
cmp
cmp
roll
aad
sarl
in
mov
addr16
into
pop
test
sub
ljmp
pop
es
mov
scas
shll
cwtl
dec
loopne
fisubl
add
outsb
mov
aam
jne
in
mov
int
jge
sbb
lods
jae
jno
pop
leave
push
testb
test
bound
dec
lcall
add
mov
xchg
fildll
mov
test
xchg
xchg
iret
fidivs
call
shl
ret
sbb
daa
mov
fwait
dec
adc
add
hlt
inc
in
jge
test
mov
enter
ljmp
xchg
push
dec
in
dec
fwait
and
adc
pusha
xchg
int3
fisubrl
icebp
enter
dec
sbb
adc
je
and
sub
inc
addr16
mov
cs
stos
dec
test
arpl
aam
cmpsl
sti
cs
mov
xor
test
fidivs
imul
dec
sti
les
pop
add
jge
loop
stos
add
outsb
or
mov
cld
push
imul
cmp
in
jp,pn
cmp
cwtl
jae
das
mov
fwait
sbbl
mov
sub
cwtl
pop
shll
mov
mov
iret
movsb
or
movsl
adc
movsl
cmp
mov
xchg
push
and
fimuls
negl
push
lret
test
das
inc
mov
pop
pop
inc
jle
cwtl
enter
aad
insl
cmp
and
enter
mov
pop
jno
scas
nop
inc
mov
movl
inc
xor
scas
sbb
sbb
lds
inc
loop
mov
push
loop
sbb
mov
sub
push
jmp
push
imul
out
adc
sbb
jne
jmp
mov
dec
insl
in
dec
aam
in
scas
mov
adc
xchg
cmp
hlt
dec
and
pushf
sub
cmp
mov
push
inc
add
xor
das
pop
cmc
movsb
shrb
int
insl
pop
and
jge
mov
daa
cmp
sub
mov
or
les
sub
xchg
lods
sub
inc
cld
lock
rcl
out
xchg
std
icebp
data16
cmc
pop
popf
ljmp
aaa
dec
mov
iret
push
js
mov
fcmovnu
pop
adc
or
jle
inc
ljmp
mov
leave
js
sbb
fidivrl
mov
lods
pop
repz
movsb
es
pop
inc
test
sub
cwtl
xchg
js
jb
jns
loopne
mov
dec
int
in
push
xchg
fs
xchg
sbb
xor
out
push
fisubs
mov
pop
adc
ror
gs
cltd
fdivrl
loopne
sub
lahf
mov
pop
or
pop
test
out
ja
and
and
pop
call
mov
mov
mov
loope
nop
dec
push
les
cs
mov
fisttpl
pop
sbb
jge
insb
adc
inc
and
es
cld
sahf
adcb
jo
decb
push
and
xchg
adc
xchg
sub
xor
jne
lods
jae
sub
test
cmp
les
jp
sti
gs
scas
das
xchg
rcr
loopne
sbb
mov
mov
pop
in
xor
xor
mov
pop
adcl
mov
movsb
cld
lods
inc
mov
jnp
jbe
jbe
sbb
push
mov
adc
push
testl
xor
dec
dec
pop
popa
fnsave
leave
push
dec
dec
ss
pop
jb
pop
js
loop
xor
pop
cmp
jb
daa
xchg
in
test
inc
pop
inc
ljmp
ret
inc
iret
and
and
test
insl
std
jns
add
and
xchg
arpl
cmp
shr
popf
cli
pop
sbb
ret
pop
jl
mov
pop
das
loop
pop
adc
insb
cmpsl
popf
adc
insw
mov
out
add
dec
shrl
mov
andl
xchg
cli
push
pop
rdtsc
test
cmp
mov
mov
pop
movsl
int3
mov
shrl
xchg
imul
orl
les
inc
mov
paddd
aaa
push
push
lea
sub
test
inc
ficomps
mov
aam
jge
jb
jge
or
push
int
iret
push
push
cli
rorl
mov
mov
push
cli
insl
add
lods
mov
xor
or
xlat
outsl
daa
scas
arpl
pop
hlt
iret
popa
push
sub
mov
mov
xchg
mov
leave
xchg
inc
divl
and
inc
xor
mov
lcall
lods
cli
pop
pushl
data16
sub
cmp
movsl
shlb
ret
shl
into
in
dec
push
mov
mov
cwtl
push
scas
sub
lock
dec
mov
dec
add
jl
mov
sbb
mov
loope
inc
jo
stos
adc
pop
aad
nop
leave
out
ret
pop
mov
mov
pusha
mov
lret
jl
cmp
inc
das
mov
sub
stos
adc
mov
repz
xor
pop
adc
cmc
cwtl
cmpsl
or
rolb
imul
xlat
sbb
das
stos
clc
fadds
jo
lret
adc
icebp
or
cmp
jne,pt
shrl
pop
mov
jno
std
sub
inc
sub
shl
lds
stos
aad
xchg
fnstsw
mov
mov
pop
bound
ret
lahf
filds
xchg
inc
lahf
xlat
xor
jb
xor
jns
psubw
out
clc
mov
inc
cs
xchg
adc
and
imul
push
inc
dec
movsb
out
pop
dec
or
icebp
xchg
adc
mov
pop
mov
dec
leave
adc
push
mov
sbb
cltd
cmp
push
cmpl
enter
mov
mov
add
lods
divl
popa
mov
cltd
cmpsb
dec
dec
sbb
stos
fmuls
mov
pop
pop
lds
pop
or
adc
inc
lcall
xor
mov
xchg
and
mov
fldenv
enter
outsb
aaa
push
jp
iret
cli
sub
std
enter
jne
stos
ret
mov
icebp
cmpsl
sbb
or
or
mov
xchg
pop
add
nop
pushf
mov
and
addb
imul
jns
mov
aas
xchg
dec
mov
leave
jo
sarb
xor
insl
nop
out
jnp
adc
mov
mov
out
es
clc
mov
ljmp
fucom
sbb
scas
lcall
or
pushf
mov
cmp
mov
push
cmpsl
mov
and
jmp
add
or
scas
push
sbb
or
and
es
push
gs
fidivrl
repz
push
sbb
mov
dec
xchg
inc
mov
or
in
decl
ficoms
cld
fbstp
sbb
jbe
mov
cltd
mov
in
lock
out
arpl
and
or
pop
xchg
fpatan
dec
and
stos
sub
push
pusha
out
ljmp
mov
adc
iret
sub
in
push
test
out
je
and
xchg
rorb
xchg
roll
repnz
push
std
rcrb
out
call
pop
mov
cmpsb
inc
cmp
scas
cltd
jb
movsl
bound
fistpl
lock
fcoml
adcl
xchg
mov
xor
push
mov
pop
inc
xchg
jp
xchg
jl
mov
orb
mov
lock
or
mov
fdivl
dec
cmp
cmpsb
loop
pop
idivb
jae
imul
daa
jnp
dec
sti
mov
mov
mov
xor
into
clc
lret
push
in
xor
call
stos
xor
add
subl
je
adc
in
jno
add
sbbl
xlat
negb
mov
jbe
rolb
and
scas
enter
pushf
cmp
mov
int
dec
repz
int
adc
xchg
push
int
cmp
jmp
or
adc
daa
lods
ficomps
in
jp
xchg
pmulhuw
push
xchg
xor
and
lahf
mov
add
mov
test
add
xchg
xchg
lcall
mov
test
call
cmpsb
int3
jns
ja
mov
enter
aas
not
stc
clc
sbb
icebp
sbb
dec
mov
scas
ss
pusha
sbb
adc
mov
das
loop
loope
cmp
jle
xor
out
and
mov
push
das
xchg
out
push
jecxz
fimuls
pop
enter
inc
or
test
push
sub
push
and
mov
psubb
jns
mov
mov
adc
xor
data16
call
ljmp
adc
adc
in
leave
sub
inc
negl
adc
fisubs
sbb
pusha
mov
pop
push
lret
push
ljmp
insl
push
rol
icebp
jg
mov
pop
andl
jp
mov
fisubs
ret
cltd
test
aaa
clc
mov
fwait
mov
ret
lds
stc
lds
xchg
inc
jl
or
fldcw
jle
lret
loop
mov
push
loopne
push
or
adc
xor
test
mov
imul
les
cmpsb
push
jns
push
loopne
xor
jle
daa
mov
mov
shlb
scas
ret
fcomi
xor
dec
incb
jle
or
mov
pop
xchg
sub
xor
rcl
inc
adc
fbld
xchg
mov
mov
adc
push
cwtl
cmp
sti
push
rcrl
movsb
xchg
mov
int
scas
aaa
insl
sbb
push
std
insb
cmp
dec
mov
loope
test
push
ficoms
dec
cmpsb
int3
into
lock
mov
call
vpor
sbb
popa
sbb
testb
daa
jg
push
aam
daa
nop
mov
sbb
xchg
mov
stc
jg
lods
in
xor
nop
mov
mov
cmp
shrl
dec
push
sti
mov
mov
and
dec
push
jne
movsb
mov
outsl
dec
pop
mov
das
jne
sub
xchg
jge
mov
or
jecxz
mov
cmpsl
ja
push
cmp
fidivl
mov
dec
push
jmp
inc
mov
int
lods
cmp
test
scas
inc
pop
fildll
js
jne
jl
aaa
cmpsb
push
add
xchg
ss
pop
fstps
ret
popf
adc
iret
or
inc
lcall
sub
pop
or
inc
lcall
rolb
push
sub
leave
insl
out
cltd
test
pusha
xchg
add
and
rcrl
and
and
lock
or
push
add
pusha
or
fistpl
sub
les
in
mov
je
insb
ja
mov
pop
xor
jp
test
das
int
inc
push
mov
out
add
ljmp
xor
adc
pop
shl
addl
in
les
gs
and
ss
inc
xor
dec
lea
dec
insb
iret
addb
mov
cld
push
mov
and
mov
inc
out
mov
es
inc
lcall
xchg
pop
mov
test
jb
jae
into
fildl
inc
jmp
ficompl
scas
xor
insl
dec
cmp
repz
js
dec
cmc
test
cmp
push
sarl
scas
mov
mov
lahf
fucomi
mov
and
mov
mov
das
push
mov
pop
aam
imul
mov
cli
jmp
sbb
lahf
js
loop
cmp
or
jg
inc
loopne
xor
rorb
ror
pop
cmpsb
jno
insl
xor
insb
adc
aaa
cli
mov
insl
subl
nop
sub
fiaddl
stos
les
idivl
sbb
push
outsl
mov
leave
jecxz
jle
push
jbe
repnz
xor
push
mov
mov
dec
out
inc
arpl
cli
adc
daa
dec
and
insb
test
and
aas
xchg
ja
es
lds
pop
stos
aas
dec
leave
inc
xor
cmc
dec
xchg
mov
push
movsl
add
pop
adc
repnz
fimuls
out
jmp
orl
xchg
mov
cli
jp
jmp
outsb
push
imul
repnz
mov
or
ret
inc
nop
xor
shr
sti
pop
pop
or
jge
pop
or
push
jb
fistpl
popf
mov
rclb
dec
xchg
mov
mov
or
mov
cltd
cmp
mov
xchg
and
mov
add
aaa
sbb
repnz
out
insl
dec
adc
add
lods
jo
xchg
stos
test
add
dec
mov
fidivrl
int3
pop
dec
dec
lds
pop
mov
and
jb
cli
imul
push
mov
es
bound
mov
push
pop
in
inc
fwait
sbb
gs
nop
jo
mov
push
jo
fwait
movsb
sarl
out
pop
sbb
dec
call
daa
fwait
sbb
push
movsb
ljmp
dec
mov
iret
cmpsb
xor
stc
ja
aam
es
pop
jecxz
clc
sti
dec
arpl
outsl
addr16
test
loope
popa
mov
cmpsb
cmp
cmp
ret
cmp
ljmp
adcb
neg
add
shlb
loope
imul
cmp
push
sub
add
push
in
push
adc
fdivrs
dec
xor
mov
ret
test
xor
adc
fisttps
mov
sbb
adc
push
sub
in
loopne
rcr
and
xchg
xchg
outsb
mov
les
leave
pop
repz
aaa
dec
mov
xchg
mov
mov
popa
outsb
mov
mov
test
or
inc
xorb
mov
or
xchg
cmp
mov
mov
jo
sbb
xor
cmp
mov
lds
outsb
or
sub
and
push
lods
jne
fmull
loop
dec
insb
mov
aaa
mov
stos
sarl
xor
xor
sbb
popf
push
fsubrl
scas
jecxz
out
iret
inc
sbb
inc
loope
sub
cmc
insb
dec
repnz
dec
imul
sti
push
movsl
divb
ljmp
inc
pusha
adc
sahf
add
dec
mov
fisubrl
call
xor
push
mov
pop
out
aas
std
or
fs
xlat
iret
aaa
cmp
mov
cmp
and
jo
rcr
pop
std
push
lcall
bnd
aam
add
dec
lahf
adc
inc
sti
push
xchg
push
loopne
popa
jb
sub
cmp
sarb
cmp
jnp
push
pop
mov
mov
imull
jns
dec
imul
jg
inc
xor
pop
cmp
movsl
jb
mov
jnp
inc
sub
test
jnp
mov
and
sbb
clc
das
aad
mov
and
imul
sub
push
or
aas
std
imull
sbb
iret
test
mov
push
das
dec
loop
adcb
cmp
or
loop
dec
and
push
fidivs
mov
fldpi
xlat
fsubr
mov
pop
sub
ja
push
sbb
enter
adc
dec
ficoml
dec
sub
sbb
mov
push
dec
imul
sbb
lcall
xchg
lock
cmp
push
adc
shl
adc
stc
into
stos
pop
xor
jle
inc
sbb
andl
sbb
test
push
adc
mov
mov
ret
int
inc
sub
xlat
pop
sti
mov
xchg
push
pop
cs
leave
loopne
fists
gs
adc
dec
and
rol
push
and
gs
fcmovu
fs
sbb
xor
hlt
mov
ret
sub
pop
mov
jno
in
mov
mov
mov
mov
test
mov
sbb
xchg
das
xchg
adc
add
mov
insb
loope
mov
mov
sti
dec
and
cltd
dec
dec
aam
aaa
popf
mov
xchg
dec
pop
sti
inc
push
sub
push
cmovns
cmp
mov
pop
in
and
les
and
int3
insb
imul
mov
push
dec
rorl
dec
mov
mov
sbb
sbb
fcmovbe
nop
sbb
pop
into
mov
cs
in
adc
in
test
repz
lods
mov
cmp
out
in
stc
scas
xor
jle
jmp
cmc
pop
dec
insl
mov
js
cmc
adcl
mov
lods
shlb
inc
int3
push
and
aam
mov
mov
xchg
dec
leave
or
dec
push
and
test
push
mov
mov
mov
notb
pop
pshufw
push
or
test
lret
mov
into
mov
arpl
mov
shl
xchg
int
adc
mov
cwtl
sbb
subl
jns
ret
sub
test
inc
xchg
dec
insb
or
das
xchg
js,pn
inc
push
sahf
jbe
cld
sarb
dec
lods
dec
add
mov
fsts
mov
repz
aaa
push
loopne
mov
test
mov
push
lock
pop
cld
iret
addb
pop
mov
sbbb
jne
dec
inc
xchg
test
pop
out
sub
nop
cwtl
punpckhwd
lods
adc
inc
gs
ss
divb
popa
les
cmp
cmp
xor
pop
mov
int3
test
adc
mov
pop
aas
out
pushf
add
jno
in
xchg
int3
ficoms
stc
je
dec
push
out
test
int3
sbb
and
jo
repz
icebp
pop
or
iret
jle
sbb
cmpsb
subb
fcmovb
mov
xor
pop
roll
inc
test
sbb
mov
inc
int3
mov
jp
dec
in
or
pop
add
pop
adc
cmp
ja
mov
inc
and
lock
je
ret
aas
xor
cmpsb
loopne
sar
sbb
es
cli
jns
hlt
pop
sbb
and
mov
push
push
pop
cmp
mov
les
mov
jp
outsl
xchg
cmpsb
fdivr
mov
shlb
mov
in
mull
push
jg
shll
and
out
loope
mov
test
mov
jp
and
push
jno
dec
fcoml
popf
add
pop
mov
jge
loope
insb
dec
pushf
lahf
cmp
or
pop
lahf
fstl
loopne
repnz
xchg
repnz
cmp
fsubs
stos
mov
jbe
out
mov
repz
repz
in
shrb
data16
loope
adc
sbb
or
xor
outsb
xor
or
cmp
dec
and
rolb
fs
pop
enter
cs
cmc
bound
lods
jecxz
inc
lret
or
sarl
in
dec
iret
subb
push
jne
les
xor
inc
push
inc
mov
mov
aaa
mov
xor
adc
mov
sbb
dec
fsubrl
xchg
subb
push
xorl
inc
push
inc
ss
mov
adc
sbb
jle
cmp
imul
stos
test
popf
dec
test
sub
pop
fldenv
movsl
sbb
bound
bound
mov
mov
fisttpll
and
xchg
icebp
sbb
ljmp
add
add
jp
push
loop
fwait
mov
cmp
daa
dec
in
dec
push
insl
cmpl
sub
xor
enter
es
push
push
clc
ss
dec
pop
repz
cmp
mov
sub
pop
rcrl
or
sub
jge
out
mov
lods
jns
daa
pusha
aaa
les
jmp
bound
xor
push
pop
push
in
cmpsl
jmp
mov
popa
mov
addr16
outsb
dec
fnsave
lcall
or
cs
add
jae
cmpsl
push
movsb
test
add
sbb
lret
adc
sti
add
mov
cmp
sets
ficoms
std
push
test
test
and
dec
outsb
pop
pop
scas
aad
out
cli
sub
enter
inc
jge
les
in
sub
adc
xchg
stos
popa
push
gs
leave
test
pop
and
sub
sub
add
in
mov
xchg
sub
loop
in
add
cmp
inc
cmp
xor
subl
cmpsl
lods
fidivrs
mov
xchg
sub
clc
inc
xor
lds
mulb
lahf
cmp
mov
sub
arpl
add
cs
mov
stos
cmp
popa
aaa
jne
add
cmp
enter
jle
movsl
cmp
insl
xor
fisttpl
push
mov
or
mov
rcll
jecxz
ret
mov
testb
mov
shl
cli
jo
nop
movsb
nop
fsubl
and
loopne
add
jns
idivl
sar
xchg
test
rcl
nop
js
xor
outsl
push
xor
xor
cmc
cmp
or
std
sub
pop
inc
ljmp
lret
mov
daa
ds
pop
cltd
adc
popf
punpckhbw
xor
fisttpl
xchg
inc
pop
xor
aaa
or
add
fstp
andl
adc
mov
cmp
and
out
into
cmp
mov
in
and
mov
or
cmc
jge
scas
push
mov
mov
popf
inc
adc
dec
lret
repnz
hlt
or
popf
shrb
scas
icebp
call
mov
test
mov
mov
inc
mov
sub
jnp
fmuls
push
scas
sbb
inc
incl
add
lods
jb
std
roll
insl
xchg
adc
mov
sbb
fnstcw
and
pop
cmp
jnp
test
jo
dec
or
repnz
scas
jle
jo
lea
push
pusha
mov
dec
or
daa
cmp
adc
mov
mov
jns
push
inc
adc
and
mov
add
js
mov
inc
ljmp
fcoml
mov
into
shll
int3
repz
xchg
cmpsb
int3
pop
inc
dec
push
cmp
stc
rcrl
or
dec
out
push
ror
pop
outsl
dec
sub
lret
rol
add
cli
adc
mov
mov
cmp
ficoms
mov
stos
pop
fdivrs
jecxz
mov
push
mov
or
hlt
or
or
lods
enter
jl
loope
cmp
push
jmp
movsl
mov
or
xchg
mov
push
leave
or
sbb
movsb
cmp
mov
in
js
adc
in
push
xchg
push
in
cli
or
cmp
and
test
ljmp
adc
adc
je
mov
roll
and
bound
push
cmpsb
dec
sub
hlt
cmpsl
jl
mov
cmc
pop
sub
push
add
fldcw
add
mov
mov
leave
sti
push
xchg
fldl
popa
pusha
gs
xchg
adcb
xor
inc
and
mov
jae
adc
jp
rcl
adc
lret
ljmp
shrb
shl
data16
xor
xor
pop
test
pop
xchg
out
leave
jns
aaa
inc
adc
lods
scas
jns
dec
pop
pop
inc
cltd
inc
jb
lds
rol
rorb
pop
sti
sbb
rcrb
hlt
popf
in
sarl
and
aaa
nop
les
mov
out
sub
push
fildll
mov
ljmp
push
xchg
mov
push
pop
lods
add
cmp
inc
cmp
adc
pop
int
mov
in
cmpb
xlat
inc
and
push
out
inc
xchg
movsb
ret
cmp
pcmpgtw
add
dec
and
push
movsb
fbld
adc
call
lods
movb
test
stc
aad
jp
aam
pop
xor
pop
cmpsb
and
mov
dec
or
cmpsl
rcrb
outsb
sub
scas
xchg
xchg
rorl
mov
das
push
mov
add
push
icebp
ficomps
dec
sub
rolb
mov
mov
ret
jle
adc
adc
or
dec
enter
xchg
inc
mov
les
inc
sbb
test
jmp
sbb
lret
mov
sbb
pushf
popa
int3
pop
xlat
cli
jb
and
mov
mov
aad
inc
sub
xchg
sub
test
movsl
cli
iret
jmp
inc
add
mov
fmull
cltd
dec
adc
push
daa
sub
out
xor
mov
cltd
xor
shrl
inc
rcrb
scas
xor
lcall
jp
push
clc
ret
test
push
push
jle
ret
test
cwtl
outsb
dec
push
jmp
cltd
push
repz
or
aas
mov
in
mov
pop
pop
add
imul
cmp
mov
jne
cltd
mov
aaa
outsb
inc
pop
aam
shlb
test
movsl
stos
icebp
loop
test
pushf
xor
repnz
pop
jmp
cmpsl
dec
pop
or
ret
sahf
repz
fdivs
or
sub
nop
inc
decl
imul
pop
imul
mov
shlb
test
push
sbb
cmp
repz
and
lcall
mov
mov
popa
add
adc
push
xor
dec
outsl
addr16
and
push
xor
and
cwtl
mull
scas
sub
mov
push
sbb
je
mov
mov
mov
das
hlt
divb
scas
ja
xchg
pop
mov
clc
loopne
inc
test
push
mov
push
sbb
xor
outsl
and
out
cmp
out
in
les
push
and
sbb
fcoml
mov
in
jno
insl
or
test
ja
adc
leave
lret
ljmp
push
mov
or
call
fsubl
inc
inc
mov
inc
nop
inc
fisttpl
mov
mov
push
movsb
aaa
xchg
mov
cltd
test
popa
cli
jg
fsubrl
scas
xchg
jp
les
stc
mov
cmp
push
sub
xchg
pop
jge
pop
decl
lds
jae
fstl
inc
cmp
ss
sbb
and
pushf
xchg
pusha
bound
and
in
leave
sub
enter
push
mov
push
jecxz
jo
popf
push
icebp
dec
ds
pushf
sti
push
sub
out
int
sahf
and
call
jl
add
xor
sbb
loop
sub
mov
ret
inc
xor
call
cmp
xor
mov
mov
cwtl
jle
dec
pop
push
push
pop
jp
and
add
insb
out
adc
jp
stc
std
cwtl
mov
outsb
lods
das
fadd
adc
inc
cmpsl
cwtl
pop
fst
lods
sti
mov
xchg
xor
ret
into
adc
or
jb
inc
inc
mov
popl
inc
das
jle
imul
mov
daa
mov
mov
add
adc
jae
enter
push
xor
sbb
mov
idivb
rorl
inc
xor
call
es
cmpl
stos
adc
addb
loope
stos
inc
inc
les
mov
popa
and
dec
pop
fisubrs
or
add
inc
call
out
pop
jg
push
mov
ret
hlt
pop
sbb
xchg
fldenv
addr16
mov
es
mov
cmp
mov
xor
into
cmp
out
dec
mov
adc
aad
fstps
dec
test
divl
arpl
cmc
mov
sub
jb
add
int
negb
dec
fcoml
mov
rolb
mov
cmpsb
adc
mov
out
pop
xor
xchg
jno
jmp
fiaddl
mov
push
mov
jp
push
mov
xorl
inc
stc
xor
jo
adc
outsb
repz
fidivrs
jmp
shlb
xchg
icebp
repnz
imul
inc
call
popf
cltd
inc
mov
xchg
repnz
notl
out
jle
mov
adc
xor
jge
jecxz
push
and
and
xor
jl
mov
punpckldq
xchg
xorb
adc
imul
or
std
dec
dec
pop
gs
ja
xor
sbb
mov
icebp
pop
aas
mov
push
adcb
and
sbb
dec
sub
jne
test
push
jnp
mov
jl
cmp
sbb
aad
push
mov
sbb
mov
int3
xor
sbbl
push
andb
js
sub
insl
inc
ss
mov
int3
outsl
aad
icebp
scas
stos
les
ret
leave
std
fildll
pusha
ret
mov
in
adc
mov
inc
or
push
outsb
das
pusha
loopne
gs
rolb
outsb
lcall
adc
pop
dec
leave
mov
adc
xchg
inc
out
sbb
rolb
mov
mov
cmp
jle
shrl
dec
cmp
and
xchg
push
add
cwtl
push
pop
xor
lahf
leave
loope
je
mov
pusha
xorb
jmp
shrl
jl
out
mov
inc
mov
push
cmp
jnp
mov
inc
aam
xchg
mov
mov
test
fmulp
xchg
add
inc
add
sub
cmpl
mov
xchg
jne
loop
adc
aam
lret
and
push
aad
add
and
jmp
pop
fstpl
std
dec
fwait
out
ds
sub
es
push
sbb
xlat
imul
mov
repnz
add
jmp
les
xor
mov
adcl
jle
inc
int
xor
and
sbb
es
jb
push
out
cmp
cmpsb
and
and
pushf
mov
or
jle
bound
lcall
fldcw
adc
mov
comiss
into
xchg
pop
xchg
pusha
add
ret
dec
into
xchg
inc
cld
mov
arpl
jo
fwait
jmp
ret
lock
xor
jmp
insb
dec
and
sub
insl
pop
leave
lret
fsub
jmp
mov
dec
mov
imul
test
mov
dec
pop
lock
outsl
cld
popf
dec
or
jg
add
inc
insb
test
arpl
pop
fisubrs
fistl
mov
fs
inc
jne
icebp
mov
out
stc
stos
dec
or
cmp
call
and
pusha
cmc
mov
sub
jo
push
rolb
mulb
xchg
or
add
or
cld
add
inc
mov
mov
subl
adc
jnp
lds
fcomi
test
jo
test
dec
adc
pop
outsb
sbb
rcll
out
adc
jae
xor
insb
cmp
sbb
mov
cvtps2pd
mov
sbb
sti
stos
mov
mov
xor
int
imul
in
push
rcl
push
xchg
rorb
popa
fcomp
in
cmpb
cmc
ds
lock
in
ss
movsl
push
loope
mov
xchg
les
into
mov
mov
in
repnz
out
cmp
jl
inc
enter
push
aad
outsl
vphsubwd
subb
hlt
rcrb
fisubl
addr16
test
out
gs
pop
sub
add
cli
inc
test
dec
dec
mov
push
lahf
cmp
insl
xchg
pop
pop
stos
inc
xor
push
ljmp
pop
mov
jg
popa
es
mov
mov
push
xchg
push
sahf
subl
lea
cmc
gs
lds
xlat
or
and
test
andl
mov
pusha
jb
pop
inc
mov
xor
repz
mov
sbb
mov
insl
stc
mov
scas
dec
cmp
ja
sahf
mov
xor
xor
or
aas
or
push
movsl
add
iret
jnp
jns
add
or
movsb
sub
push
fs
add
cmc
movsb
xchg
in
ficompl
fdivrs
cmp
jp
pop
xor
sub
scas
and
aas
mov
ficoms
push
sahf
cwtl
outsb
mulb
mov
mov
cmpsl
mov
xchg
fwait
add
lcall
loopne
aaa
je
imull
data16
xor
in
in
shlb
jns
mov
inc
stc
bound
aaa
enter
sbb
mov
ljmp
xchg
and
mov
push
add
xchg
mov
or
adc
enter
mov
out
rorl
or
fcmovne
sbb
lcall
outsl
notb
sbb
dec
cld
cli
es
mov
dec
xchg
fstpl
outsb
mov
shr
movsb
and
mov
xchg
mov
cmpsb
push
mov
cwtl
adc
inc
out
shl
gs
mov
or
sbb
push
xchg
xor
test
outsb
lods
cltd
out
jle
mov
pop
orb
jns
pop
adc
xor
cmc
mov
dec
sbb
xchg
push
push
call
fcoml
aam
mov
lea
mov
cmp
cli
adc
jecxz
int
jb
lcall
sub
jmp
ss
nop
adc
dec
dec
inc
fsubr
and
subb
push
xlat
pop
fdiv
mov
and
gs
add
jne
ret
adc
adc
xchg
sbb
cld
hlt
pop
lahf
mov
sahf
int3
push
lea
cld
pause
inc
xchg
dec
aam
stc
and
or
and
lret
push
add
cmp
jg
and
push
xchg
mov
lds
mov
leave
cmc
pusha
lcall
aam
mov
enter
adc
or
xor
jo
aam
mov
in
dec
and
xchg
call
leave
mov
mov
add
fucomi
pop
out
sahf
push
js
mov
mov
mov
sahf
pop
mov
in
xor
sub
mov
scas
adc
addr16
loopw
xchg
sub
sbbb
sbbb
xchg
adc
lods
adc
cmpsl
insl
sub
mov
cmp
xor
lock
int
cmp
inc
sbb
xchg
imul
pop
shlb
cwtl
inc
sti
loopne
aaa
xor
js
pop
jp
lcall
data16
push
mov
test
scas
andl
add
cmp
sbb
add
sbb
daa
in
out
movsb
movsb
dec
xor
lods
mov
pop
scas
dec
ljmp
mov
sub
out
shlb
in
push
lret
and
and
inc
aam
mov
repz
xchg
pop
cmpsl
daa
sub
mov
sub
adc
mov
lahf
leave
pop
aad
fldcw
or
xor
fidivs
lret
xlat
mov
inc
push
push
sarb
loop
out
rcl
xor
jge
daa
jbe
pop
fdivl
add
aad
jnp
push
mov
pand
dec
lea
xchg
enter
dec
pop
inc
mov
push
repz
stos
inc
push
jp
popa
xchg
xchg
in
or
mov
and
xor
jge
pop
pushf
mov
xchg
lock
fistpl
test
jecxz
jne
test
daa
movsb
sahf
sbb
pop
jge
pop
adc
das
mov
xchg
xor
outsl
aam
out
push
xchg
stos
inc
lea
pop
mov
or
sbb
fnsave
sbb
push
sub
push
pop
xor
dec
adc
and
and
ret
or
pop
test
decb
and
mov
push
pop
xchg
outsb
cltd
incl
sub
mov
dec
pop
jl
xor
add
push
xchg
jnp
loope
shll
iret
mov
sti
icebp
or
test
jne
pop
icebp
subl
push
xchg
imul
js
scas
pusha
cli
push
jmp
mov
pop
jge
pop
arpl
cld
adc
push
xchg
xchg
dec
jb
bound
add
and
fisubl
outsl
mov
cltd
lcall
mov
pop
jle
scas
ret
jne
xchg
cmp
pop
pop
into
loop
fldt
mov
mov
addr16
out
inc
jl
cs
test
jecxz
mov
ja
sbb
sub
mov
mov
jle
leave
ret
push
test
mov
add
lret
jnp
mov
test
add
addl
push
mov
imul
sub
leave
xor
jmp
sahf
fwait
andb
sbb
inc
das
jno
out
sub
repz
mov
stc
int
xchg
out
das
loop
sub
dec
rorl
and
out
nop
inc
xchg
xchg
cmp
orb
loope
cmp
xor
xchg
nop
inc
xor
adc
sbb
xorl
cltd
dec
std
xchg
adc
add
aaa
leave
test
pop
test
cmp
aaa
jno
pop
aam
aaa
sbb
lds
and
cld
addr16
adc
push
lcall
scas
dec
mov
fbld
add
mov
add
mov
orb
or
cli
and
sub
mov
movsb
dec
mov
dec
mov
shl
imul
cmc
dec
lock
jp
cmp
dec
xchg
mov
popa
hlt
repnz
imul
push
scas
adc
xchg
lock
ljmp
cs
dec
sub
popf
push
sbb
insb
addr16
insb
in
pop
lret
jge
push
dec
pusha
fsubr
loop
int3
fldl
int3
adc
mov
sahf
hlt
sbb
sbb
sbb
push
push
sub
sti
sbb
push
jns
lahf
xchg
sbb
in
and
and
stos
arpl
ficomps
jnp
fdivrl
in
add
add
cmp
lahf
lret
hlt
xor
stc
lea
cmp
nop
fists
ljmp
sti
vaddsubpd
add
jecxz
test
test
test
or
in
mov
adc
pushf
outsl
adc
sub
sbb
and
sbbl
gs
movsl
mov
sub
cmp
adc
js
lods
mov
lret
cmpsl
add
inc
lret
push
lret
xchg
jno
popa
sbb
mov
in
mov
fcoml
inc
pop
cmp
inc
sub
out
jnp
fdivrl
mov
and
mov
sbb
lods
mov
add
adc
cmp
cmp
insb
and
xlat
loope
sbb
xor
xchg
fstpl
in
jbe
fs
xor
xlat
push
mulb
and
pop
pushf
je
mov
adc
push
int
rorl
not
leave
ja
sub
cmpsl
shll
xor
jno
ds
repnz
jns
or
adc
mov
jmp
das
pop
in
dec
das
in
or
fdivrs
pop
pop
sbb
cs
dec
add
cld
test
mov
cmp
mov
lods
add
in
or
shlb
lcall
cld
mov
shll
popa
sub
xchg
or
push
cmp
and
inc
jb
ds
mov
mov
ret
arpl
sub
mov
cltd
enter
xchg
mov
inc
lret
pop
add
imul
fnstcw
addr16
sbb
aad
movsl
ret
fcompl
pop
cmc
add
jno
out
jae
pop
sbb
bound
test
dec
push
mov
test
xlat
xchg
fwait
push
mov
test
push
outsb
sbbb
mov
add
inc
mov
inc
mov
adc
push
or
or
shll
test
mov
stos
scas
sub
sti
dec
lods
js
pop
js
sub
fdivl
aaa
xchg
xchg
mov
xchg
cmc
out
into
jo
ljmp
mov
and
insl
lock
cmp
into
add
fisubrl
scas
cmp
insl
sub
test
adc
ficoms
mov
scas
iret
push
inc
std
pop
pop
xor
clc
mov
or
ja
mov
mov
repnz
mov
addr16
mov
mov
loope
subb
mov
jnp
xchg
out
call
jmp
sbb
push
les
into
cmp
xchg
cli
mov
ret
mov
sbb
cwtl
xchg
and
pusha
xor
call
mov
dec
shll
mov
sub
scas
stos
push
scas
or
fbld
inc
or
and
nop
in
out
jne
ss
in
sub
fmuls
dec
nop
jp
xor
mov
dec
or
pop
adcb
dec
jmp
addl
test
hlt
or
scas
dec
and
enter
or
test
push
mov
addl
mov
pop
mov
xor
out
aad
pop
out
divl
jle
hlt
lods
fs
hlt
push
dec
mov
aam
stos
and
fildll
push
pop
xchg
loope
or
rcl
xchg
addr16
dec
mov
call
mov
int
repnz
sub
aaa
pop
jg
jbe
icebp
mov
pushf
fwait
cmpsb
push
lods
jbe
leave
xchg
jbe
mov
sbb
inc
xor
xchg
push
inc
enter
xchg
jbe
and
pop
shll
subb
std
xor
jle
xchg
mov
push
popa
mov
mov
inc
scas
push
mov
push
mov
mov
push
loopne
imul
loopne
ret
test
ret
xchg
icebp
jp
pop
jg
jb
xchg
test
cmp
jg
mov
mov
insl
in
push
jnp
arpl
bound
push
jge
mov
aam
and
adc
enter
cli
xchg
xchg
and
cwtl
push
lods
jnp
imul
out
cmpsl
push
out
pop
stos
xchg
mov
aad
add
dec
lock
push
cmpsb
out
fbld
jae
cmp
push
jl
sub
xchg
mov
lea
dec
mov
sbb
sbb
and
jb
jle
int3
xor
rol
cmp
pop
scas
incb
pop
enter
inc
hlt
push
inc
ss
lcall
js
or
imul
in
lds
lods
pushf
inc
xchg
lret
shl
lods
mov
mulb
push
dec
and
adc
pop
shrb
pop
mov
sahf
jbe
scas
jno
sbb
dec
mov
adc
in
or
add
mov
cmp
pop
ja
jnp
pop
lcall
jmp
mov
popa
add
addl
mov
add
pop
movsl
shrb
and
out
stos
cmp
sti
ret
sub
push
jmp
mov
sub
movsl
popf
xchg
sbb
push
xchg
push
pusha
out
call
and
test
mov
test
stos
push
fsubrs
inc
pop
inc
or
lods
dec
push
mull
fldt
enter
out
and
dec
es
cmpsl
call
cmp
jae
enter
mov
cwtl
xchg
ss
or
pop
add
add
outsl
lret
test
in
sub
repz
popa
pop
adc
mov
push
sub
xor
mov
dec
mov
mov
jbe
xor
scas
stos
pop
pop
lock
add
add
test
js
imul
mov
ds
jns
cmp
jb
dec
inc
sbb
jae
xor
jb
and
out
in
mov
mov
dec
lahf
lret
lahf
cld
jg
inc
add
scas
xor
ljmp
push
mov
mov
push
xor
inc
aam
push
cwtl
xlat
je
shlb
test
test
scas
jns
inc
jae
adc
or
jmp
cmp
cld
das
push
xchg
sti
xor
fdivrl
or
or
loope
cli
lret
xlat
popa
ret
mov
mov
dec
add
shll
mov
arpl
mov
fstpl
mov
push
xor
inc
or
lahf
lds
ljmp
testl
mov
in
enter
movsl
cli
hlt
clc
add
inc
xchg
xor
mov
shrl
out
inc
xchg
call
sub
testb
add
aas
pop
das
ja
fldl
mov
pop
or
cmp
shll
cmp
mov
mov
mov
js
push
mov
inc
sub
daa
jmp
adc
xchg
cli
cld
insl
in
xor
cmpsb
mov
jbe
sub
add
mov
cmc
or
push
mov
lret
ss
add
dec
sti
mov
lea
cmp
dec
pop
mov
lcall
dec
dec
xor
in
sbb
test
popl
iret
mov
sub
jno
data16
popa
push
inc
lea
xor
xor
cmp
out
cmp
dec
xor
test
pop
gs
call
fsubl
stos
mov
mov
mov
mov
sahf
imul
xor
or
xchg
mov
inc
out
cwtl
ss
adc
mov
jmp
xchg
sub
popa
sti
inc
cmp
pop
pop
cmp
in
in
mov
ljmp
push
repz
push
lcall
mov
jnp
and
xor
pushf
movsl
test
sbb
mov
in
fwait
mov
shlb
std
adc
lcall
add
and
inc
mov
ja
inc
pop
adc
sub
add
cmp
in
mov
std
iret
and
popf
jg
xchg
xchg
push
daa
jle
inc
idivl
bound
dec
addr16
jno
clc
decl
xchg
sarl
cmpsb
push
inc
push
lret
pop
sub
xchg
xchg
fadd
je
adc
in
cmp
jno
les
pop
sbb
std
aas
jno
dec
xchg
or
pop
mov
push
test
je
adc
cmp
lahf
mov
and
repnz
movsl
enter
adc
fildll
sub
mov
and
scas
adc
cli
lea
mov
int3
mov
sub
stos
inc
or
mov
leave
and
outsl
push
push
cltd
test
out
sti
mov
cmp
push
push
in
lods
and
cli
aas
in
fcomps
mov
mov
fldt
mov
outsb
jmp
jne
and
jle
iret
xchg
fsts
stos
mov
dec
fcomps
push
cmp
rolb
aaa
dec
dec
mov
in
mov
xacquire
sbb
cmp
pop
or
pop
adc
lret
xor
test
jnp
xchg
mov
pop
ficoml
ljmp
push
bts
cmc
adc
stc
add
xlat
xchg
sbb
je
add
sub
notb
jp
test
jns
and
and
data16
lods
test
call
sbb
lods
add
jne
mov
push
add
idiv
jne
scas
popf
addr16
push
pop
jl
and
data16
std
push
xchg
mov
add
mov
in
cmc
arpl
shll
push
lods
repnz
fneni(8087
push
icebp
enter
dec
dec
repnz
clc
pusha
sub
mov
jne
or
dec
ss
push
push
movsb
loop
test
cli
out
xchg
mov
push
out
sbb
icebp
aam
mov
adc
push
dec
enter
and
ret
outsl
add
int
cld
cli
or
add
cwtl
test
mov
sub
ljmp
incl
les
push
out
mov
out
cmp
fnstsw
lods
repz
fidivrl
push
dec
mulb
out
mov
pushf
sahf
mov
lea
add
stos
nop
mov
xchg
fisttpl
inc
rcl
je
and
push
les
ss
andl
jmp
testl
shl
cmc
out
jae
mov
pushl
in
lret
test
loopne
outsb
pop
pop
mov
dec
lea
dec
sub
xchg
roll
push
cmp
cmc
out
scas
lret
jb
xor
out
inc
shrb
cltd
lahf
sub
sbb
cmpsl
xor
test
pusha
adc
pop
and
sub
add
push
int3
lock
insl
jnp
arpl
dec
mov
lods
das
movsl
jbe
pusha
aad
mov
in
push
lods
roll
inc
jo
adcb
xchg
dec
in
inc
sub
mov
xor
sub
cmp
cmp
loope
icebp
imul
jge
repnz
or
pop
subb
out
jno
int3
rorb
lds
fbld
sub
clc
mov
clc
sbb
movsb
cmc
data16
popf
adc
enter
bound
lret
push
out
adc
mov
stos
mov
mov
sti
rcl
loopne
dec
gs
test
pop
sub
and
xlat
adc
cli
or
adc
sub
pop
mov
xor
add
lods
and
sbb
sbb
push
not
push
jbe
data16
jbe
data16
inc
out
inc
fdiv
mov
aas
popa
sub
out
and
iret
adc
add
add
cmp
lret
pop
ror
pusha
je
imul
and
jl
insb
sbb
mov
arpl
test
jg
mov
lods
cmpsb
das
jb
lcall
lods
stos
pushf
insl
add
or
nop
add
out
or
sbb
cmp
sarb
cmp
fcmovnb
push
testl
mov
jp
mov
push
or
arpl
fxch
mov
jp
xchg
pop
xchg
into
aad
jno
lret
add
adc
wrmsr
mov
and
sbb
dec
cwtl
movsb
imul
das
je
jl
lods
add
fdivl
sahf
inc
inc
mov
xchg
jge
sarl
xchg
sub
sbb
cwtl
mov
rclb
iret
push
enter
or
rolb
sbbl
popf
xchg
xchg
and
pop
lcall
mov
out
pushf
loop
aas
inc
sti
ret
sbb
pop
pop
stos
pop
mov
imul
jl
lds
lret
pop
daa
push
subb
mov
push
mov
jno
pop
and
xchg
fisttpl
pop
sbb
sbb
xchg
inc
imul
subl
testl
pop
mov
icebp
xchg
pop
mov
imul
push
pop
or
jmp
inc
add
dec
push
add
add
jp
mov
shll
add
repz
inc
mov
test
das
popa
test
sub
jnp
into
sub
ret
xchg
icebp
insl
sahf
mov
mov
das
fsts
jle
inc
fldt
push
ret
scas
inc
ds
mov
out
popa
jl
lock
xchg
pushf
jno
inc
mov
inc
das
jae
cmp
mov
mov
lret
daa
cltd
cmp
lret
or
sub
jge
inc
movsb
adc
ss
arpl
cmp
and
pop
imul
push
js
scas
dec
pop
jnp
mov
pop
cmc
push
shlb
sub
xor
mulb
push
cmp
int
jae
cmp
mov
xor
xor
in
js
inc
mov
leave
cmpsb
repz
enterw
ja
jecxz
dec
mov
clc
dec
faddl
cmpsl
daa
cltd
inc
xor
ret
leave
lock
add
xchg
enter
out
ds
sbb
sbb
out
push
ds
sti
rcr
jne
and
outsl
pop
dec
enter
cmp
aam
jg
sti
pop
inc
ljmp
xor
mov
out
sub
cwtl
dec
adc
pop
pusha
lret
int3
imul
xor
mov
push
add
jmp
mov
dec
loope
pop
pop
insb
call
and
mov
cmp
les
mov
jae
rorl
push
fldt
mov
aad
cmc
addr16
jbe
in
and
mov
lret
mov
inc
mov
insl
fstpt
cld
pop
or
cmp
pop
dec
jecxz
mov
imul
xchg
insb
sarb
subb
lods
mov
shll
lcall
add
insb
daa
cmp
in
mov
xlat
lea
add
jb
daa
or
sbb
in
xor
testb
dec
push
cmp
in
cmc
and
inc
push
idivb
pop
loop
sti
jo
jle
popa
ljmp
in
fisubrs
xchg
mov
repz
movsb
and
mov
and
push
les
insb
gs
inc
mov
mov
or
js
mov
mov
fdivrs
daa
insl
mov
lcall
movsb
xrelease
sbb
movsl
sbb
sbb
xor
inc
sti
pop
push
inc
mov
daa
sti
and
add
mov
jp
sbb
fsubr
jmp
push
sbb
sbb
movsl
imul
int
add
out
in
push
jp
hlt
sbb
and
cmp
loopne
ret
xchg
sbb
lock
sti
icebp
aaa
stos
es
insb
ficoms
lcall
imul
mov
ds
out
dec
xor
xor
rorl
push
inc
lods
push
sub
xchg
adc
push
icebp
loope
push
add
dec
cwtl
mov
popf
aad
pop
and
lods
ror
js
sti
mov
dec
mov
lods
hlt
xchg
enter
mov
pop
lods
cltd
out
add
fcompl
cmc
fbld
pop
loopne
push
inc
aad
jle
add
xor
hlt
inc
jle
mov
shl
frstor
shrl
sbb
arpl
fadd
sbb
xchg
out
add
ficompl
stos
jp
pop
adc
imul
imul
jmp
mov
dec
cltd
mov
outsl
pop
sbb
add
ret
and
lahf
mov
lret
int3
and
adc
cmp
and
cltd
jb
jbe
mov
test
jo
outsb
xor
mov
jno
jb
lds
or
iret
pop
mov
dec
mov
jo
bound
cmpsb
sbb
dec
xor
in
hlt
mov
adc
push
push
pop
pop
jae
pop
add
sbb
arpl
lea
push
sahf
jecxz
leave
dec
dec
ljmp
add
cld
inc
adc
imul
leave
aad
fcmovb
in
add
lret
clc
xchg
pop
xchg
ror
ret
jl
mov
push
ja
adc
xchg
popl
cmp
data16
mov
mov
ja
sarb
adc
leave
push
cwtl
into
loopne
arpl
mov
mov
add
and
popf
add
iret
inc
mov
adc
mov
out
or
enter
lods
mov
stos
repz
idivb
push
insl
mov
add
rclb
jbe
mov
in
or
clc
cmp
jge
jl
mov
adc
movsb
call
loopne
out
jle
dec
imul
mov
insb
ret
fs
mov
lret
jmp
jae
sbb
fisubrs
inc
sbbb
js
xor
js
dec
adc
popf
and
sub
and
xor
jg
cltd
outsl
mov
sbb
mov
ja
repz
push
mov
xchg
in
jne
sub
in
sbb
sahf
dec
and
leave
fstpt
mov
push
repz
out
movb
addr16
cmp
or
push
test
loopne
dec
xchg
leave
aaa
xchg
xor
leave
inc
push
xchg
cmp
cmpb
sti
sub
cmc
pop
sub
out
leave
leave
pushf
rcl
cmpsl
push
xor
fidivs
test
and
sbb
cwtl
xchg
int
mov
ja
jp
add
movsl
out
sysenter
test
sub
dec
lods
in
sbb
negb
leave
imul
sbb
mov
xchg
pop
les
les
mov
pop
mov
mov
dec
mov
xor
pop
jne
mov
int
jno
outsl
xchg
sub
inc
xor
fisttpl
mov
hlt
das
cmp
dec
in
cmp
in
pop
int
xor
push
mov
jp
sbb
xor
inc
pop
sbb
jb
daa
xchg
cmp
sti
mov
leave
inc
pop
ljmp
lcall
mov
cmpsb
xchg
lds
or
sub
mov
int3
cmp
or
jp
inc
sub
lret
cli
push
aam
je
ret
jecxz
mov
cmp
inc
sub
inc
dec
jl
adc
in
scas
push
pop
push
jle
or
pusha
add
or
pop
std
pop
sahf
push
jns
aam
and
mov
add
mov
and
test
xor
hlt
daa
xchg
jecxz
xchg
enter
mov
inc
mov
out
jnp
lahf
mov
mov
inc
push
leave
and
sbb
loop
pmulhuw
pop
faddl
das
ret
sub
dec
jp
sbb
mov
fmul
jne
jl
fsubrp
cmp
mov
cwtl
push
ja
dec
xor
mov
lret
xchg
jb
push
imul
sbb
leave
mov
mov
push
adc
mov
lret
or
std
test
fidivl
ret
mov
out
xchg
xor
jns,pt
mov
jo
sarb
call
cmc
aaa
shrb
xor
sbb
out
insb
xor
pop
cmpsl
add
sub
divb
int3
repz
fwait
daa
pop
mov
call
in
mov
pusha
push
das
or
in
and
lods
stos
xchg
mov
lods
shrl
xor
cmp
xorl
testl
shlb
jecxz
lods
mov
arpl
pop
sbb
xor
inc
and
mov
push
sbb
pop
cmp
fimuls
xchg
jmp
mov
aas
in
pop
std
push
testb
sbb
cwtl
outsb
cmpsl
arpl
cmpsl
or
inc
test
insb
mov
sub
pop
cld
scas
sub
sub
jae
scas
xchg
repz
iret
enter
xchg
test
mov
inc
or
mov
outsl
popa
push
sti
add
gs
cltd
and
and
int3
hlt
in
ss
mov
loop
or
bnd
add
test
xor
pop
lcall
xor
sbb
or
sub
cs
mov
and
ss
aas
dec
ja
xor
fldenv
inc
das
dec
fsubs
lcall
mov
pop
fcomi
jns
and
aaa
outsb
xchg
jecxz
imul
popf
int
mov
push
movsb
dec
cmp
mov
out
push
pop
xor
pop
mov
pop
jno
std
insb
and
or
je
sub
cmp
fs
xor
mov
pop
repz
xor
mov
fdivl
jo
ds
fldt
push
sub
mov
inc
mov
stos
jae
lods
sub
repz
ja
outsb
orb
movsb
sahf
std
mov
bound
xchg
fistpll
mov
dec
pop
repz
xor
push
sti
cmp
xchg
loop
aaa
push
arpl
test
rcrb
xchg
dec
fidivs
push
gs
lahf
inc
into
sub
frstor
sub
arpl
and
pusha
js
or
lods
icebp
sub
int
fs
in
enter
xchg
xlat
add
xor
scas
leave
jo
fwait
in
mov
or
ja
stos
vmaxps
push
ret
jne
ds
das
hlt
jecxz
lea
stc
ficoml
mov
sar
mov
ljmp
aad
cli
sbb
and
xor
int3
mov
lds
outsb
adc
test
test
cmp
imul
dec
fiadds
dec
enter
fsubr
inc
stc
js
xchg
scas
xor
mov
enter
sbb
or
out
out
and
lcall
mov
in
ljmp
cmova
pop
mov
add
inc
nop
sbb
fstpl
pushf
lock
in
gs
ds
mov
pop
roll
test
adc
movsl
icebp
sbb
int
dec
cs
loope
int
push
aam
clc
sbb
ret
icebp
add
adc
orb
sbb
ret
sub
scas
cli
cmp
adc
mov
mov
ret
test
lock
sbb
dec
lods
mov
pop
pushf
jmp
xchg
nop
sbb
cmp
jae
mov
sbb
mov
adc
cmp
dec
mov
cmp
xlat
out
movsl
push
cmpl
cmc
sub
add
fs
inc
jae
movsb
scas
je
punpckhdq
xchg
int3
pop
and
lret
add
outsl
jp
inc
dec
stos
fldl
mov
cmpsb
push
sbb
dec
insb
in
cli
leave
loopne
push
fs
sub
cmp
or
jae
imull
adc
xchg
aas
jecxz
imul
das
xchg
or
ss
dec
push
or
es
ljmp
pushf
insl
gs
inc
xchg
or
ljmp
adc
repz
cmp
jns
lods
and
inc
data16
jl
mov
mov
test
jo
out
cmpsl
loopne
divl
lock
data16
loopne
lods
fsubrl
sbb
adc
adc
mov
pop
or
mov
cmc
sbbl
jnp
jp
mov
xchg
out
cltd
and
mov
mov
rcrb
cli
scas
jmp
into
in
rol
aas
js
mov
and
les
xchg
ljmp
fdivr
mov
repnz
lahf
repz
test
fwait
xchg
jecxz
scas
sub
xor
ror
xchg
fwait
cwtl
movl
mov
mov
dec
adc
iret
add
fcoms
mov
sub
fsubl
sub
cmp
loope
and
pushf
leave
out
sub
mov
push
and
fidivrl
ljmp
test
xchg
mov
dec
ret
ss
xchg
loop
adc
outsl
sbb
add
push
inc
and
mov
mov
scas
mov
jo
push
cli
aam
hlt
movsb
cmp
push
rclb
arpl
loope
adc
jno
jle
arpl
mov
lcall
push
cmpsl
cmpsb
fildl
pop
or
sarl
inc
in
and
xor
inc
jbe
jne
inc
inc
jp
mov
jo
sbb
cmc
leave
rolb
mov
and
pop
pop
loop
and
add
int
sbb
cli
pop
in
mov
rcrl
lds
xor
cmpsb
push
dec
inc
jp
xor
push
addr16
sbb
sbbb
mov
out
xor
jle
jne
sbb
mov
ret
daa
and
inc
into
fcmovnbe
jae
out
mov
je
xchg
sbb
popf
repz
das
imul
clc
xlat
push
lea
fidivrs
pop
sbb
adc
jbe
mov
fwait
cmp
pop
sbb
outsb
and
stc
popa
cmpsl
jne
pop
xor
out
sbb
or
cmp
sub
xor
jae
jge
xchg
jb
stos
jle
pop
mov
push
rcrb
cmp
jns
dec
aaa
xor
fnstsw
test
loope
pop
negb
jbe
int
mov
jns
rorl
adc
dec
push
imul
ljmp
pop
cmpsb
xchg
mov
inc
je
sub
xor
sub
xchg
sbb
sbb
sbb
adc
es
into
rorl
mulb
mov
stos
and
sub
push
fwait
jno
hlt
lret
dec
and
pop
xchg
arpl
sbb
mov
test
jge
jp
repz
das
ds
dec
mov
arpl
lds
test
push
and
dec
fidivrs
mov
pop
mov
out
or
mov
je
lret
push
add
push
push
mov
or
or
lock
mov
mov
inc
enter
xor
inc
jmp
push
cs
mov
lea
mov
imul
sbb
cmp
insb
sub
or
xchg
movsb
sbb
jns
pop
repz
push
decl
or
lock
sub
mov
sarb
fdivp
cld
std
inc
call
add
mov
add
mov
fs
jge
push
push
in
nop
in
mov
loope,pt
xchg
add
test
paddusw
push
push
stos
mov
sub
lcall
les
mov
mov
sahf
or
popa
or
in
cmp
lret
xchg
ss
shrl
loop
mov
jb
sar
xor
mov
mov
pushf
jb
fisubl
dec
lahf
dec
add
fcmovnb
leave
testb
xchg
out
out
push
test
into
or
out
push
xchg
and
add
and
or
mov
inc
pop
leave
sar
call
sub
rorl
outsl
push
adc
lahf
and
pop
sub
inc
and
dec
dec
push
lret
ljmp
in
out
ret
das
cmpsl
sub
sarb
jmp
pop
in
xor
rclb
sub
add
mov
xchg
sbb
je
enter
mov
add
jp
mov
out
cmp
rclb
inc
inc
xor
inc
xchg
jmp
inc
inc
lea
push
addb
sarb
push
xor
ja
mov
imul
or
inc
adc
inc
fsubs
mov
lods
pusha
dec
jmp
xlat
mov
xchg
sbb
mov
xlat
movsb
jae
mov
push
dec
lods
dec
fwait
adc
pop
mov
mov
lahf
inc
inc
push
xor
inc
popf
mov
dec
jp
popf
pop
lods
adc
and
out
hlt
in
popa
jb
icebp
mov
fildll
iret
cmp
fdivs
and
test
mov
jp
cmpsb
rcrb
jne
popa
js
xor
inc
mov
andb
inc
adc
repnz
roll
repz
fs
xchg
xor
pop
sbb
push
sub
es
daa
lea
push
cmp
ds
loope
sub
scas
dec
jno
in
xchg
sub
bound
jle
int
adc
and
ud1
fmull
movsb
pop
jmp
xor
js
adc
adc
mov
int
adc
or
push
gs
and
shlb
lea
mov
lahf
cmp
mov
and
fnstcw
cmp
in
pop
mov
mov
jl
push
repz
insl
xchg
push
aaa
add
sub
ja
lcall
notl
ret
dec
dec
push
inc
xor
xchg
sti
dec
or
sub
xchg
jp
inc
or
jmp
ljmp
mov
jns
or
lea
les
repz
mov
cmpsl
addr16
xor
repz
push
jb
jecxz
push
movsl
xor
mov
sub
dec
jmp
mov
es
push
dec
in
push
jge
bnd
pop
jb
insl
mov
es
mov
xor
call
js
push
aaa
sub
jns
jno
hlt
and
lods
sar
push
add
mov
add
sbb
stos
pushf
pushf
in
dec
ret
fdivrl
xlat
adc
test
cli
imul
jl
xchg
inc
push
mov
add
pop
inc
sbb
in
push
adc
add
lahf
dec
adc
mov
js
or
lods
or
sbb
adc
or
cmc
leave
ja
cmpsl
outsb
jp
adc
inc
mov
leave
rcrl
aam
or
xchg
add
dec
ds
xchg
call
ss
pop
clc
or
popa
inc
inc
aaa
in
jno
cmp
insb
xchg
jbe
cmp
jo
pop
xor
sbb
push
sbb
leave
or
mov
ljmp
decl
add
inc
jle
add
adc
out
xchg
mov
adc
adc
sub
nop
xor
inc
aas
xlat
mov
les
or
fnstcw
add
jp
xor
push
outsb
inc
jmp
jle
mov
adc
fdivr
pop
daa
sub
ljmp
shrb
mov
mov
dec
sbb
pop
sbb
sub
adc
lahf
sbb
out
js
inc
sub
je
scas
jle
mov
dec
mov
clc
push
lret
mov
movsl
pop
dec
and
xchg
aas
jbe
aad
adc
xchg
adcb
jl
rorl
adc
push
imul
and
out
push
sub
aad
out
sub
sti
fdivrl
rorb
mov
jo
fisubrs
mov
cmpsb
inc
popa
mov
sub
arpl
and
push
aaa
mov
jg
mov
push
sbb
out
pop
mov
js
sub
dec
fbstp
dec
aam
gs
mov
push
push
jecxz
das
fdivl
roll
fistps
and
cs
test
ljmp
test
sub
or
sbb
test
and
pop
mov
insb
outsb
jns
xor
lahf
xchg
push
mov
cwtl
jb
mov
jmp
fnstsw
das
add
repnz
inc
pop
push
sub
mov
lahf
jl
cmpsl
es
int
add
sbb
mov
fsts
frstor
sbb
xchg
lcall
aam
lret
test
in
mov
addl
out
fstpl
mov
daa
sbb
mov
dec
add
push
xor
cmc
pop
cmc
sti
rcrb
fcompl
xchg
bound
and
mov
cmp
xor
test
push
cmp
ja
or
scas
dec
pop
push
popf
fstl
inc
mov
push
ss
je
ljmp
adc
xchg
pop
add
out
xchg
or
imul
add
loopne
add
add
or
sar
mov
inc
mov
ss
lret
sub
test
movsl
sub
push
push
cmp
lods
adc
sbb
pop
out
sbb
push
js
jbe
jp
scas
int
and
orb
sbb
mov
push
cmp
cmp
test
fcomps
cmp
dec
inc
lret
aad
push
mov
dec
mov
divl
or
lods
adc
gs
stc
movsb
cs
sub
gs
inc
das
xchg
xacquire
mov
cld
xchg
in
push
xlat
orl
pop
mov
mov
dec
cmpsb
outsb
lods
lea
lock
mov
and
push
out
jle
icebp
std
shrb
and
pop
inc
inc
movb
inc
dec
lods
pushf
fmull
lds
mov
ret
repnz
lahf
mov
cmp
sbb
xchg
and
add
or
scas
mov
pop
add
mov
inc
jo
movsb
movsl
out
outsb
inc
lods
sub
lock
xor
and
or
mov
xor
orl
pop
mov
adc
inc
xor
fiadds
jnp
xchg
lahf
dec
ja
aaa
por
inc
fsts
outsb
push
cltd
sub
shr
movsl
enter
fisubs
cmp
xchg
bound
lods
add
cld
jge
cli
lds
mov
int
or
add
pop
xchg
addr16
mov
inc
mov
mov
arpl
mov
jo
mov
das
sub
mov
mov
pushf
out
in
mov
stos
in
addr16
mov
jae
adc
mov
lret
je
int3
push
icebp
mov
adc
ja
add
push
popa
fwait
dec
xor
nop
jnp
mov
enter
sub
adc
ja
sbb
repz
sub
lods
cmp
cmp
inc
mov
cmp
mov
pop
xchg
cmpl
fcoms
mov
stc
clc
inc
leave
int3
mov
mov
add
loop
out
xchg
sub
mov
mov
sbb
xor
ja
jae
mov
loopne
inc
pop
aam
loop
push
cmp
test
lods
cltd
dec
into
out
sbb
jp
push
dec
cmp
mov
repz
dec
add
sbb
leave
scas
lock
jl
addr16
sar
daa
mov
pop
mov
inc
call
pop
in
mov
cwtl
and
push
xor
cli
sbb
and
fadd
rolb
xchg
mov
lret
lock
in
inc
fimuls
fsts
shlb
ret
dec
jb
es
arpl
xchg
dec
push
fs
mov
pop
push
push
scas
jb
insl
and
adc
cmc
lods
repz
mov
je
fcoms
hlt
imul
cld
pop
int
call
cli
orl
in
sub
mov
shrl
mov
push
mov
pusha
mov
out
loope
out
or
fisubrs
adc
cmp
pushf
add
or
pop
clc
mov
ds
dec
cmpltps
mov
lea
lret
cmpsl
mov
fwait
cmp
std
or
das
jbe
push
fmuls
movsl
aaa
mov
jecxz
mov
dec
push
push
xchg
inc
mov
cmp
jp
loopne
cmp
fildll
ss
lret
cmp
test
mov
inc
out
jb
es
xchg
pop
adc
orb
inc
pop
nop
mov
imul
insl
jecxz
pusha
and
je
push
sub
aam
sbb
lcall
push
pop
stc
sbb
push
enter
sub
add
mov
inc
sbb
rclb
xor
xchg
jnp
and
mov
xchg
jnp
popa
test
nop
scas
jns
inc
mov
push
or
dec
sub
xor
insl
mov
in
fisttpl
sbb
or
mov
addr16
iret
mov
xor
test
sbb
das
lods
inc
rcrb
cmc
xor
lret
std
outsl
jns
lods
test
arpl
cld
pushf
fsubs
xor
add
adc
movsl
int3
int
cmp
push
pop
push
xchg
cmp
mov
repnz
icebp
into
adc
insl
pushf
jg
jl
jge
jns
sahf
inc
out
mov
bnd
dec
aam
mov
or
push
dec
mov
xchg
adc
xlat
rorl
sbb
mov
add
pop
adc
cmp
cmp
sub
cwtl
adc
mov
std
into
arpl
dec
test
xlat
fimuls
lds
mov
movb
or
push
mov
lods
xchg
gs
in
mov
and
xchg
cwtl
loopne
push
aam
cs
pop
outsb
push
test
stos
js
daa
pop
jg
out
dec
flds
les
in
arpl
fcoms
push
movsl
insl
fs
or
cld
into
inc
mov
shlb
int
test
mov
dec
or
fdivs
dec
mov
cmp
sbb
mov
cli
cmp
std
inc
lds
lcall
cmp
fistpl
mov
mov
icebp
mov
mov
or
pop
pop
jle
and
sub
out
push
sbb
or
in
xchg
xchg
and
lock
inc
popa
mov
adc
dec
cmp
test
xchg
push
add
jnp
pop
push
lods
cmc
cltd
push
mov
pushl
out
xchg
mov
enter
mov
sbb
dec
out
pop
insl
mov
orb
int
inc
insb
or
dec
xor
dec
mov
ret
ja
mov
out
cltd
fldl
ficoms
inc
push
mov
push
or
sbb
cmc
popa
ret
mov
xchg
movl
dec
cmp
mov
test
push
mov
notb
pusha
pop
cmp
rorb
xchg
push
aaa
mov
sahf
cmp
push
jmp
scas
popf
dec
stos
inc
orb
ret
clc
daa
lret
xchg
or
xchg
cmp
fstpl
ror
jb
jo
pop
icebp
mov
inc
and
mov
or
mov
nop
or
jmp
or
mov
push
jo
rolb
mov
fucomi
lods
mov
adc
and
mov
into
out
mov
insb
adc
in
dec
pop
scas
test
xor
out
push
pop
push
sub
test
xor
add
lods
clc
daa
mov
push
addr16
stos
int3
xorl
das
cmp
xchg
icebp
pop
insb
fwait
aad
stc
shrb
mov
xchg
lcall
and
popa
fcoms
enter
dec
and
adc
push
insb
pop
fcompl
add
pusha
test
iret
loop
dec
mov
fisttps
dec
sbb
fwait
pushf
jge
sbbb
xchg
sar
outsb
rclb
dec
inc
imul
sbb
sarb
jl
inc
call
xor
lret
stc
cmpsb
sub
jge
mov
in
xor
inc
pop
mov
clc
sahf
in
mov
out
pop
pusha
pop
mov
js
xchg
loopw
loope
aam
mov
roll
outsb
fcomp
add
pop
inc
fcmovb
movsl
ja
ret
pop
fcompl
shrb
inc
cltd
repnz
lock
mov
pop
push
icebp
pop
xchg
movsl
shrb
jb
pop
mov
sub
dec
pop
shrb
jnp
xlat
push
andb
or
lds
ret
xor
xor
push
call
add
push
push
sbb
push
xor
lods
jmp
pop
sub
push
rorl
stos
jl
bound
ja
or
mov
mov
sub
cld
sti
mov
dec
adc
mov
xchg
jecxz
or
add
mov
ds
test
sbb
adc
pop
jge
or
pushf
xor
mov
mov
clc
pop
mov
mov
test
imul
push
loop
das
and
mov
xchg
fildl
in
imul
add
sub
and
add
sub
mov
sbb
xchg
sub
jg
sbb
push
das
sub
out
aam
je
je
shlb
stc
clc
mov
and
outsl
ss
add
jle
dec
sbb
lret
movb
addr16
or
adc
mov
lea
rorb
or
leave
jge
mov
scas
jo
dec
jle
ret
stc
dec
mov
jno
enter
pop
lock
lret
jo
add
push
stos
push
or
aas
mov
divl
test
inc
add
and
iret
pop
notl
lret
aas
jnp
ljmp
or
sbb
jbe
ret
insb
jl
jl
ret
test
jns
aam
pop
mov
scas
out
ret
fsubr
adcb
mov
pop
scas
sahf
mov
sub
sub
mov
jb
sub
test
adc
sti
mov
mov
test
rolb
sti
and
stos
jns
mov
lret
mov
push
mov
fcmovu
in
test
pop
add
or
cwtl
mov
mov
clc
or
dec
jg
and
sub
cwtl
mov
fdivp
cmpsb
dec
push
dec
sub
in
inc
roll
adc
xchg
dec
test
lret
adc
lret
adc
pushf
jns
dec
push
dec
pop
nop
std
jne
daa
xchg
popf
int
inc
loope
shll
adc
int
into
cmp
dec
data16
outsl
das
cmp
inc
mov
roll
push
jnp
das
sbb
sub
movsl
inc
mov
push
xchg
test
rcrb
xchg
cmp
lock
inc
je
test
daa
icebp
or
push
jl
test
mov
push
cmp
loop
cmp
push
pop
into
inc
test
cmp
cmc
out
xchg
fnstenv
out
dec
jmp
out
or
dec
rcrl
iret
mov
iret
out
pop
mov
jae
movsb
cli
sbb
gs
dec
adc
out
inc
push
jae
or
or
pushf
mov
or
cwtl
mov
shl
pusha
outsl
mov
jge
sub
cvtpi2ps
nop
outsl
adc
xchg
sub
mov
cmc
cmc
xor
in
gs
ret
je
adc
push
shll
test
add
mov
jp
or
add
decw
ror
push
stc
ret
jns
adc
scas
mov
sbb
lret
cmp
sbb
dec
push
mov
push
hlt
xor
sub
lahf
push
mov
jae
adc
lods
mov
jbe
or
push
loope
mov
int
in
or
xchg
testl
aam
push
mov
int
mov
lahf
adc
movsb
ret
insl
mov
inc
pop
cs
jle
cmp
xchg
jb
iret
inc
rcll
aas
add
sub
subb
js
mov
xchg
inc
xlat
test
mov
sti
sbb
inc
xchg
idivl
cltd
adc
sub
fldl
subl
adc
pop
in
mov
inc
cmp
and
or
push
in
int
cmpl
arpl
sbb
mov
int
scas
and
repnz
mov
dec
mov
ss
and
jno
mov
inc
pop
and
out
push
ret
pushf
lret
mov
popa
xor
xlat
repnz
push
add
mov
mov
or
push
xchg
cmp
shr
add
cmp
xchg
int
push
mov
fsub
lret
adc
xor
mov
js
arpl
cmp
popa
mov
lods
sub
pushfw
cltd
outsl
out
ror
jb
imul
fwait
test
scas
xchg
or
mov
sti
fildl
push
cwtl
roll
jge
js
loope
xor
mov
add
mov
mov
das
inc
sti
call
and
mov
add
out
dec
inc
ror
dec
jg
int3
aad
push
pop
mov
sti
jb
lret
dec
pop
or
add
dec
jno
mov
es
cwtl
sub
sbbl
sub
jecxz
lea
jne
inc
pop
or
out
mov
add
pop
dec
loope
rcrb
jb
in
dec
jl
or
pop
sub
xor
cmpsl
outsl
xchg
adc
movsb
add
dec
mov
mov
mov
mov
testl
ret
out
push
push
adc
cmp
inc
repnz
gs
fcmovne
mov
add
lock
ljmp
xchg
shl
xorl
lods
jbe
sbb
push
arpl
inc
popa
jns
sbb
aaa
std
fsubr
rcrl
insb
fmuls
ficomps
and
fstl
xchg
sti
fsts
pop
pop
inc
in
jbe
or
pop
sub
sarb
pushf
cmp
rcr
imulb
jp
hlt
jg
xchg
dec
out
aas
xor
test
mov
push
adc
das
lret
pusha
in
sub
in
pop
popa
and
lret
mov
pusha
sbb
testl
sti
push
cmc
clc
inc
mov
mov
xchg
mov
adc
dec
aas
cmp
sub
iret
jle
stc
add
inc
and
push
dec
pop
aaa
stos
pop
mov
and
inc
mov
adc
ret
jb
adc
xor
mov
jg
or
loope
sbb
xchg
add
sbb
mov
int3
and
adc
push
out
pop
hlt
loopne
push
push
sub
in
dec
add
insb
add
mov
mov
push
or
mov
lret
jbe
fisttpll
jbe
inc
mov
cli
fadds
std
jle
mov
xchg
inc
push
cmp
push
jp
jmp
cmp
push
shll
add
rorb
inc
fs
mov
repz
lods
jns
outsl
jp
in
lret
push
sub
sti
shrl
mov
xor
inc
movsb
jmp
add
cmpsl
enter
mov
cmp
jmp
jne
mov
dec
sub
push
ljmp
cmp
xor
inc
inc
arpl
xor
cmc
addl
ret
cmp
cld
mov
sub
mov
loope
enter
pop
push
xchg
sub
push
ffree
scas
mov
in
js
xor
cmp
xor
outsl
xor
push
cmp
push
arpl
leave
aaa
push
aam
fwait
jno
dec
out
call
je
xchg
rorb
std
sub
push
mov
and
ss
or
data16
aam
jl
orl
cmp
jl
scas
data16
shlb
call
test
push
nop
neg
jg
jp
sbb
adc
mov
addr16
add
sti
nop
scas
push
rorl
mov
push
and
stos
push
hlt
xchg
jmp
out
sub
cltd
add
xchg
mov
insb
into
push
out
add
and
test
xchg
pop
loopne
add
fwait
cmp
addl
and
pop
ror
out
cmp
inc
add
xchg
push
push
and
std
ficoms
cmpsl
mov
pop
pop
bound
sub
cmp
jo
jg
mov
aaa
or
mov
mov
push
xchg
sahf
popf
not
pop
iret
je
push
pop
and
sub
dec
stos
mov
add
adc
nop
adc
sub
call
push
clc
xchg
xor
hlt
in
push
or
fs
lret
repnz
xchg
scas
mov
mov
lods
aas
test
data16
leave
mov
test
in
lahf
or
imul
adc
lahf
inc
enter
mov
out
hlt
movsl
dec
xchg
idivl
and
push
ficomps
into
pusha
test
sub
dec
add
mov
push
out
into
mov
loope
mov
out
pop
cwtl
stos
mov
add
test
push
call
adc
push
or
rcrl
sahf
cmp
mov
fidivrs
cmp
outsb
pushf
sub
jnp
pop
pop
xchg
lea
pushf
adc
lcall
dec
pop
in
cltd
cli
and
jnp
xchg
xchg
sarl
cmp
scas
jge
cmc
cli
fcoms
xchg
arpl
pop
aam
sub
pushl
rorl
jecxz
push
adc
sub
andb
lock
cmpsb
push
in
leave
push
cmp
pop
shl
pop
add
add
xchg
js
dec
adc
dec
and
mov
sarl
dec
pop
rol
shrd
fimuls
cmpsb
in
xchg
jae
nop
sub
and
push
sub
fildl
push
jmp
inc
daa
int3
push
frstor
daa
mov
or
lahf
inc
iret
push
push
mov
sub
lods
cmpsl
pop
int3
ret
xchg
sbb
xchg
test
cmc
dec
xchg
push
xchg
lcall
jmp
notl
sbb
inc
std
fisubl
cmp
xlat
xor
dec
jmp
stos
jmp
mov
imul
les
sti
adc
popa
out
out
and
test
and
inc
mov
add
mov
and
std
stos
filds
cmp
push
and
ja
add
and
mov
out
loop
adc
popa
push
aad
inc
js
inc
std
loopne
fs
cmpsl
push
enter
fnstenv
ret
inc
push
es
loop
inc
add
xlat
cmpsb
mov
push
insl
in
negl
inc
test
pop
mov
mov
inc
mov
aaa
out
mov
pop
outsl
xchg
pop
adc
rcll
addb
bound
stc
jb
out
push
xor
sti
aas
mov
xlat
jo
arpl
scas
shll
sti
pop
xor
jle
int3
leave
jne
mov
cmp
and
call
xchg
lock
in
in
cwtl
cmp
mov
das
repnz
out
pop
mov
orl
mov
mov
mov
insb
push
je
mov
cmp
push
mov
dec
fiaddl
stc
fisubrs
lahf
fdivl
xchg
sbb
cmp
int3
lcall
xor
movsb
xchg
mov
ficomps
cmp
xchg
jp
lods
hlt
aas
je
outsb
fxam
fs
mov
push
pop
xor
cmp
insl
in
add
push
jle
mov
scas
push
jo
pop
loopne
subb
add
out
out
fadd
or
mov
or
sbb
mov
jae
jo
inc
rcrb
mov
sub
xchg
ja
or
test
aam
mov
or
xchg
mov
aam
add
imul
xchg
int3
push
xchg
scas
movsb
inc
jb
push
cltd
mov
arpl
fldl2t
xlat
popa
cmp
pop
mov
gs
loope
push
push
inc
es
jbe
lret
fistpl
ror
jmp
adc
sahf
cmpsb
dec
subb
inc
dec
and
jle
test
xchg
iret
cmp
xor
or
inc
mov
or
pop
adc
lock
push
inc
rorl
movsl
stos
mov
xchg
gs
push
xor
push
sbb
test
nop
and
xchg
fidivrs
and
mov
push
mov
in
subl
add
add
lret
fmull
push
cwtl
mov
and
sub
inc
pop
test
xor
lcall
lret
jno
jmp
mov
test
out
pusha
mov
in
jg
jge
fistps
js
leave
decl
popf
xchg
adc
in
es
dec
loope
iret
adcl
cmpl
push
and
xchg
fisubs
pop
push
xchg
cld
fmuls
pop
jo
mov
movsl
sbb
bound
cmp
test
xor
loopne
ljmp
loope
sbb
or
jae
ret
stos
addr16
or
or
stc
or
ret
adc
lods
mov
pop
mov
pop
sub
aaa
xchg
jge
lret
cli
imul
dec
adc
mov
and
mov
lock
stos
mov
push
ficomps
clc
scas
lcall
pushw
mov
dec
test
ja
sbb
pop
sub
mov
insl
in
dec
test
stc
dec
notl
dec
int
xor
lahf
out
and
or
repnz
mov
lret
leave
xchg
and
fnstsw
add
sub
xor
test
push
stos
icebp
in
int
notb
mov
aad
xchg
push
push
scas
mov
xchg
sub
pand
lea
iret
test
cmp
jo
inc
adc
cmp
test
or
stos
push
pushf
loopne
ror
es
push
lea
mov
or
cmpsl
pop
test
scas
dec
popf
fwait
xor
out
ljmp
out
push
out
jbe
lds
call
ds
xor
xor
jp
sarb
mov
enter
pop
lods
xchg
int3
lcall
in
and
fiaddl
test
out
jae
sub
mov
aaa
add
push
sbb
test
mov
lcall
cmp
xchg
call
adc
call
int
mov
sub
ret
xor
and
mov
mov
sbbb
xchg
push
xchg
mov
mov
loopne
jb
or
ficompl
sti
call
sub
inc
sub
push
and
or
jle
adc
lods
add
adc
in
xor
pop
lret
sub
mov
mov
inc
sahf
xchg
and
mov
xorl
jbe
lcall
sbb
and
insl
flds
or
in
pop
in
mov
scas
loop
orb
inc
or
js
cmp
in
cmp
jbe
lcall
fsubrp
mov
mov
pop
cmpsb
xchg
xor
rolb
mov
dec
test
cmp
xlat
dec
sub
mov
js
fwait
push
and
movsb
xchg
cltd
pusha
push
xchg
jecxz
inc
add
xor
test
adc
ljmp
fistpll
mov
jmp
jg
dec
stc
sarb
jge
ret
icebp
xchg
adc
mov
fsubl
pop
lods
fucom
sub
inc
pop
mov
stos
mov
shlb
mov
mov
mov
dec
stos
mov
adc
ljmp
loop
mov
filds
jo
cmp
outsl
aam
mov
push
je
sub
fs
ret
inc
dec
dec
repz
and
mov
cltd
out
or
jbe
mov
mov
and
pop
mov
push
xchg
sbb
sub
and
sahf
out
cld
push
cwtl
scas
cmpb
pop
insl
data16
roll
into
pop
ss
adc
out
divl
push
ja
push
sarb
lods
std
xor
test
sub
xchg
add
dec
dec
arpl
cld
outsl
out
ret
icebp
and
mov
push
sbb
jp
and
jns
push
dec
sub
push
mov
sub
jp
sub
js
mov
dec
int
jge
call
cltd
adc
or
fs
push
lahf
sbbl
xor
test
lea
movsl
pop
and
adc
jne
push
or
xor
pop
imul
cmc
adcb
inc
cmpsl
sub
add
sub
stc
sbb
sbb
mov
test
mov
push
rol
push
cmp
outsb
test
jp
enter
inc
into
and
je
jmp
jns
mov
pushf
xchg
jo
and
lcall
jp
push
in
popfw
inc
ret
xchg
xchg
push
xchg
jbe
dec
rcl
jge
sbb
cmp
add
lods
sbb
dec
mov
nop
jns
insl
mov
mov
sarb
mov
mov
ss
and
mov
ja
pop
imul
push
pop
je
je
add
aad
cmc
fidivs
adc
jmp
xor
adc
stos
addb
ret
pushf
lret
popf
enter
jl
mov
js
popf
fimuls
push
aas
and
jbe
fwait
push
cmp
pushf
gs
jo
cmp
jl,pn
mov
cmp
int3
mov
mov
xchg
enter
push
inc
out
add
test
stos
movsl
arpl
sub
dec
aad
in
xor
cmp
sub
insl
jg
ljmp
stc
divb
sub
in
call
aas
daa
ja
xor
jae
or
and
fcmovu
mov
dec
les
jg
pushf
sarb
cltd
mov
lods
std
das
or
lret
xor
add
jle
insl
mov
add
loope
cmc
jg
ret
fisubl
mov
std
add
pop
push
cmp
addr16
sarb
xchg
jl
ss
mov
cmp
mov
jmp
push
inc
and
mov
mov
mov
xor
iret
es
and
push
mov
jmp
push
sub
ret
xchg
xchg
jecxz
loop
mov
jo
fsubl
insb
sbb
in
mov
mov
adc
loop
daa
lock
pop
mov
mov
test
and
out
xor
addl
jmp
inc
dec
pop
push
jb
insl
aad
out
mov
movsl
sub
ret
sbb
jo
inc
testb
bound
fisubl
out
push
push
push
repz
xchg
scas
call
xchg
loop
ret
pop
mov
fcmovnu
push
mull
std
push
sub
add
mov
les
push
ljmp
push
cmp
fnsave
inc
divb
ret
sbb
dec
push
sbb
imul
stc
loop
pop
addr16
pushf
mov
sbb
ret
shlb
aas
and
rorb
mov
lret
subb
leave
hlt
sub
dec
out
cmp
ret
jp
gs
mov
sbb
leave
mov
cmc
inc
ja
aad
add
and
shl
adc
jle
ds
dec
sub
mov
ja
or
mov
mov
cli
cmp
sub
ljmp
mov
fmul
enter
xor
lret
add
inc
or
out
test
add
lret
or
inc
xlat
outsl
push
sbb
outsl
push
dec
int3
cmp
xchg
loop
gs
mov
sarl
sahf
push
pop
loopne
add
jns
cmc
xor
inc
push
or
call
cs
icebp
xchg
xchg
dec
push
insb
xchg
sbb
movsl
sub
clc
repnz
and
sbbl
int
and
cmp
loop
adc
sub
call
sbb
sbb
inc
xlat
test
testb
imul
add
enter
push
mov
cmp
cmc
sti
leave
fistl
xchg
je
icebp
push
push
popl
sahf
pop
repnz
mov
sub
sub
sub
insl
mov
mov
sahf
xlat
and
jno
xor
and
popa
dec
lahf
fwait
into
shrl
dec
jg
popf
or
aam
push
es
push
xchg
xor
out
xor
mov
inc
cmpsl
rorb
mov
or
cmp
shlb
popa
mov
cmp
pusha
cmp
or
daa
loope
aaa
pop
les
or
sub
outsb
int3
fldcw
hlt
js
jno
in
xchg
adc
gs
ja
fsubp
pop
mov
sbb
fimull
das
in
xor
cmpsl
rorl
fld
outsb
xchg
push
lea
lds
iret
adc
loop
sub
stc
jno
and
fisubrl
sbb
and
inc
data16
je
je
jns
in
dec
jbe
mov
add
dec
aam
ret
insb
dec
idiv
inc
clc
ds
mov
xor
les
xor
or
mov
mov
pop
movsb
lea
nop
loope
add
xlat
push
call
or
ja
lea
mov
adc
in
push
xor
cmp
lods
xchg
sub
xchg
ret
xor
aad
add
cmp
testb
cmc
jl
mov
int
xchg
pop
and
fcoms
out
repz
cmc
lds
int3
mov
test
push
loop
lock
add
mov
popf
or
rcl
hlt
aam
and
push
mov
movsb
mov
test
cmp
mov
test
shlb
mov
mov
and
xor
rcl
dec
inc
cmp
and
sbb
xchg
cmp
push
test
jb
inc
push
mov
and
push
dec
mov
jno
sahf
add
dec
cmp
movsb
shrl
rcl
inc
insb
jp
sarl
addb
ficoml
xlat
mov
inc
loop
add
push
stc
fistl
lods
pop
loop
push
call
ja
nop
mov
test
mov
pop
pop
inc
ss
cli
mov
pushf
leave
or
push
dec
movsl
sub
aad
sub
repnz
std
dec
sbb
lahf
xchg
cli
cmp
lods
int
cltd
mov
jb
roll
es
das
fistpll
fadds
xchg
push
cmp
mov
sub
insl
and
cli
sbb
cmovns
adc
loop
and
push
cmpsb
mov
repnz
or
mov
jnp
arpl
aas
into
andl
shlb
xchg
and
out
lods
pop
fldenv
cltd
jg
enter
add
ds
push
shrb
sbb
loope
mov
fsubs
sub
aas
out
inc
sti
aas
mov
imul
in
cwtl
movl
sub
call
jge
int
add
jns
inc
jmp
mov
mov
pop
dec
sub
into
jb
sbb
ja
cwtl
jns
and
bound
fwait
jns
mov
mov
inc
rclb
mov
lds
sub
adcb
stos
dec
dec
cmp
mov
dec
sarb
cs
adc
push
push
jno
xor
iret
adc
loope
push
in
and
mov
cmc
aam
dec
cmp
push
sbb
push
jns
call
hlt
add
or
dec
xor
outsb
inc
fxtract
pop
and
jo
repnz
push
mov
pop
cltd
xchg
or
insb
mov
jl
mov
lods
rcr
jmp
insl
mov
int3
out
mov
and
or
add
add
mov
pop
dec
in
fnsave
pop
jl
pop
scas
insl
push
por
inc
clc
inc
pop
sar
ficoml
mov
icebp
ss
data16
push
xchg
outsl
cmp
es
cmp
push
jg
sbb
dec
cmp
adc
out
push
das
jae
adcl
mov
cwtl
lret
test
pop
pop
xor
pop
popf
movntq
or
std
out
xchg
fcoms
adc
mov
add
in
push
mov
and
ret
sbbl
pop
imul
add
hlt
punpckhdq
insb
cmp
adc
icebp
ret
push
sbb
mov
lret
js
dec
inc
mov
loopne
rcrl
pop
adc
mov
adc
or
andl
mov
mov
cmc
shlb
imul
xchg
ret
xor
in
lret
sti
and
push
sbb
in
jge
push
and
and
out
pop
lods
sub
dec
lcall
popf
imul
bnd
test
cmp
daa
push
lret
mov
push
imul
mov
mov
push
and
and
int3
sub
insb
push
xchg
pop
and
repz
test
ds
jecxz
jle
pop
jo
xchg
xor
or
cmc
add
jmp
out
jnp
jp
push
mov
jno
sub
imul
leave
stc
scas
pop
xchg
jle
pop
fdivl
jb
pop
jmp
iret
shl
cwtl
xchg
dec
and
push
movsb
jp
sti
outsb
mov
mov
mov
loope
adc
jmp
mov
push
push
imul
jge
inc
jb
incb
add
fsts
mov
xlat
rolb
push
out
inc
jb
imul
add
cmpsb
aam
xor
movsl
stc
negb
mov
jecxz
int
mov
mov
xor
jl
mov
push
out
movb
xchg
aaa
inc
xchg
into
inc
cmp
and
xchg
cmp
pop
fs
push
into
sbb
std
lret
sbb
mov
cmc
ret
jb
ja
push
aad
and
push
imul
leave
push
in
add
xchg
fldl
cli
scas
mov
stos
fs
addr16
mov
mov
push
aaa
xchg
inc
popa
lods
inc
lret
mov
fsubrs
push
out
mov
fnstsw
das
pusha
push
lds
mov
insl
sub
xor
adc
scas
loop
push
inc
ret
je
or
mov
inc
and
add
jo
cmp
mov
cmp
loopne
push
xchg
xor
sahf
lock
push
lret
add
inc
sti
jg
mov
popf
push
lock
xor
pop
jno
nop
mov
popf
orl
sbb
sti
stc
enter
mov
jl
std
cli
xor
scas
scas
inc
aas
and
rolb
in
loopne
adc
bound
fs
mov
fimuls
pop
je
loopne
push
sub
aas
std
dec
dec
cltd
jle
cli
add
sub
rcrb
mov
jle
movsl
cli
inc
das
jl
xor
cmp
jo
add
mov
dec
jle
xchg
std
xor
pinsrw
mov
adc
jo
cmp
aam
pop
add
adc
and
or
lcall
sbb
paddusb
sbb
scas
inc
loop
dec
sbb
stc
xlat
sbb
xabort
out
cltd
movsb
je
out
and
invd
fchs
sbb
xor
addr16
cmp
mov
out
cld
iret
and
push
fwait
dec
dec
fwait
out
add
out
xor
push
data16
popf
shl
jns
or
jb
adc
imul
mull
ret
and
int3
lret
push
xchg
leave
and
xchg
jle
or
cmp
xchg
mov
dec
mov
lret
daa
cmp
fisubrl
jns
inc
mov
rorl
jae
lret
dec
or
cmp
add
mov
and
and
xor
cmp
out
or
cmc
xchg
sbb
xchg
hlt
adc
pop
mov
jl
inc
xor
nop
les
push
testb
or
xchg
push
inc
call
cltd
mov
jg
sub
sbb
jne
int
adc
jae
dec
testb
fwait
mov
or
jecxz
cmp
cmp
add
cwtl
ret
dec
ficompl
sub
fcmovnb
clc
push
xchg
test
inc
sub
and
or
jne
int
cmpsb
mov
sbb
sbb
xchg
xor
and
pop
iret
notb
and
rcll
pop
popl
xchg
jns
es
mov
pop
xchg
xor
divl
icebp
jle
test
out
mov
sarb
cli
add
mov
mov
arpl
xor
ljmp
imul
hlt
push
idivb
mov
xor
test
xor
fsubl
shrl
repnz
inc
jae
xchg
aaa
test
jmp
ss
repz
sub
insb
leave
jnp
imul
adc
shlb
scas
and
pop
mov
cmpsb
pop
jp
or
data16
test
sub
insb
pop
mov
xchg
cmpsl
ljmp
sub
cmp
mov
leave
xorb
push
div
xor
adc
xor
bound
adc
mov
jnp
mov
cmp
mov
loop
xchg
lcall
sub
push
daa
mov
adc
cli
lods
mov
hlt
mov
xchg
mov
mov
and
push
loope
ja
cltd
dec
push
in
std
lock
sbb
sbb
in
sbb
mov
add
mov
movsb
cwtl
daa
scas
incl
out
jl
dec
or
repnz
aas
xchg
cmp
loop
lret
sub
aaa
loopne
pop
xchg
sti
add
clc
out
jne
adc
bound
jae
and
das
mov
in
scas
cmpsb
rorb
adc
mov
sub
in
push
inc
mov
inc
lret
xor
cltd
add
push
fmull
lret
push
stc
cmp
aam
mov
shrl
cmp
adc
ja
icebp
leave
out
lock
int
push
leave
ds
out
jge
subl
pusha
shlb
pushf
je
or
lods
shlb
dec
mov
ud1
mov
push
lods
fcmovbe
out
xchg
stc
mov
sub
mov
leave
xor
out
mov
mov
cbtw
cmp
mov
movsbl
push
dec
adc
fsubl
jg
stos
lcall
je
dec
xchg
iret
loop
mov
inc
mov
fisttpll
bnd
dec
subb
je
es
dec
xchg
shlb
push
pop
aaa
rorl
loope
dec
insl
std
outsb
lods
test
xchg
nop
pop
push
in
push
outsl
pop
shrl
rclb
mov
jnp
stos
cmp
test
pop
lock
pop
lret
scas
sahf
aas
daa
sbb
ficomps
adc
cmp
clc
cmp
cmpsb
ss
sbb
jmp
lock
dec
outsb
mov
insl
mov
pushf
repnz
mov
xor
dec
xchg
out
pop
daa
inc
mov
std
xor
sub
xor
cld
movsl
in
mov
les
fwait
push
mov
jb
jns
mov
mov
push
mov
dec
or
dec
ret
in
push
mov
xchg
adc
andl
shrl
and
pushf
adc
mov
in
xchg
push
nop
jp
ljmp
jge
jmp
out
adc
jecxz
adc
push
sub
mov
addr16
mov
lods
add
clc
std
add
mov
xchg
lock
int3
mov
xor
xchg
adc
movsl
insb
gs
jno
gs
dec
sub
pusha
or
into
clc
xchg
lods
sub
insb
pusha
jbe
push
mov
sub
cmpsl
clc
or
loop
insb
out
xchg
ja
xchg
fwait
sti
adc
inc
cmpsb
adc
sub
out
xor
inc
scas
jne
ret
mov
bound
out
add
orl
imul
mov
shl
or
push
adc
cmp
les
sub
out
fistpll
pop
out
lret
lahf
std
mov
aad
js
pusha
repz
jae
dec
xor
arpl
fs
sub
aad
int3
push
ret
repnz
andl
mov
cmp
push
in
cmp
cli
lods
mov
jge
mov
xor
outsb
js
add
mov
and
fs
andl
xchg
jbe
mov
xor
and
add
mov
cmp
jmp
dec
aad
fiadds
xlat
insl
pop
cmp
dec
xor
jb
jl
cltd
sbb
jb
pop
jecxz
or
std
mov
xchg
imul
ljmp
in
inc
nop
notb
pop
iret
nop
xchg
add
sub
ficompl
jns
cmp
ret
movlps
pop
je
pop
loopne
ja
sbb
dec
push
xor
mov
cs
xor
cmp
mov
push
mov
incb
pop
stos
push
es
and
gs
mov
mov
pop
pop
mov
mov
ret
sbb
lahf
dec
jae
mov
or
jo
aam
push
enter
es
cmovbe
mov
ficoml
add
push
pusha
and
std
cmovno
mov
nop
pop
xchg
mov
mov
dec
test
out
mov
int
or
rclb
cs
or
lock
arpl
jno
adc
mov
aad
popf
rcrl
loopne
or
scas
pop
push
inc
int
xchg
xchg
push
jl
mov
push
jp
lock
stos
leave
fsubrs
xchg
hlt
fldt
lock
sbb
call
movsb
jmp
add
xor
mov
inc
cmp
cli
dec
addr16
cld
pusha
inc
jl
fistps
mov
sub
idivb
das
mov
sub
mov
cwtl
sbb
pop
sbb
popf
jb
je
add
test
int
mov
pop
dec
pop
movb
repnz
decb
mov
and
imul
scas
mov
push
sub
xor
pop
mov
dec
lock
or
inc
out
js
sarl
xchg
scas
inc
adc
inc
ljmp
pop
or
push
push
or
aad
dec
movsl
xchg
mov
loop
mov
add
cmp
ljmp
cmpb
mov
sbb
mov
jmp
call
fadds
push
mov
subl
xchg
aas
adc
jg
mov
fdiv
iret
add
les
test
pop
mov
cmc
inc
add
dec
pop
push
pusha
and
xchg
mov
add
daa
rcr
mov
push
adc
xor
aaa
pop
or
push
inc
clc
fildll
pop
add
lods
ret
xchg
mov
sub
fists
test
jp
or
xchg
in
clc
lret
stos
lods
jnp
movsb
ret
loopne
mov
andl
ja
fsubrs
xchg
sbb
xor
pop
mov
insb
jmp
daa
mov
lcall
mov
scas
mov
push
dec
mov
arpl
mov
xchg
mov
xor
and
dec
cltd
loopne
clc
mov
jecxz
push
cli
hlt
push
push
mov
jmp
je
repnz
aas
dec
adcl
je
xor
pop
out
xchg
out
es
gs
cli
lods
sbb
arpl
xor
dec
or
jge
lds
mov
sub
sbb
jle
lock
pushf
xlat
test
out
xchg
cwtl
mov
jge
mov
add
popf
push
dec
push
xor
mov
xchg
jbe
in
jle
cmc
add
lods
inc
ja
or
cmp
jp
inc
lods
movsl
scas
das
and
mov
xor
fsubr
inc
out
jg
sqrtss
inc
adc
gs
popf
and
shlb
jnp
xchg
and
js
aas
lods
fidivrl
test
cli
lcall
mov
gs
jmp
mov
sub
rcrb
aaa
fucomp
jbe
jle
xchg
rorl
ret
cld
mov
rorb
das
pop
stos
inc
enter
push
adc
xor
movsl
xor
or
idivl
fsub
fcompl
testl
dec
jae
out
xor
dec
stos
dec
dec
pop
enter
sahf
push
sub
imul
pop
lret
ss
push
mov
aaa
cltd
add
mov
lock
jbe
imul
pop
dec
cmpb
scas
mov
dec
jle
and
pop
push
adc
sti
fistpl
in
sub
in
push
xchg
xchg
cmp
xlat
cmpl
xor
test
cmp
sti
jbe
in
jb
fstl
popa
mov
inc
in
dec
fidivrs
cmp
xchg
dec
icebp
fdivrp
outsb
adc
imul
lahf
and
stos
adc
mov
fisubl
adc
dec
jo
push
mov
cmp
vcvtsd2si
pop
push
mov
mov
aam
jmp
jo
testb
pop
sbb
test
push
push
shll
adc
push
lods
cmp
sub
push
sarl
dec
mov
jb
xorl
xor
movsb
enter
push
adc
add
dec
xchg
inc
lods
jno
cmp
xchg
in
inc
call
mulb
push
mov
xor
mov
and
add
out
inc
and
xorl
xor
lret
push
js
xchg
mov
nop
sbb
push
int3
sti
and
jmp
ficompl
sub
cmpsl
add
cli
movsb
jns
ljmp
test
push
sub
add
lahf
in
mov
cmp
in
aaa
push
test
fisubrl
xor
cmp
insb
mov
xor
mov
add
bound
cmp
xor
pop
jae
sub
dec
pop
ret
jno
aas
fcomps
and
mov
stos
mov
lock
jnp
fstl
dec
mov
jle
xor
icebp
ljmp
adc
outsb
mov
aam
lret
push
inc
test
cmp
and
dec
outsb
std
pusha
sub
or
movsl
pop
fidivrs
test
movsb
lods
mov
mov
in
rep
adc
push
sbb
ds
inc
pop
mov
jecxz
outsl
loope
fiaddl
add
push
xor
ljmp
or
and
cwtl
cmpsb
mov
mov
cmpsb
or
sahf
cmp
xchg
jl
sbb
dec
sbb
enter
xchg
mov
sti
imulb
ljmp
xchg
jne
movaps
sub
dec
orl
cmp
mov
push
repnz
jg
ss
sbb
shrb
rorb
jae
push
loopne
enter
test
loop
shl
add
sbb
je
adc
adc
jns
sbb
xor
mov
mov
mov
inc
sbb
repz
imul
test
adc
sbb
into
stos
std
jg
xchg
push
sbb
fdivs
jl
lret
out
jo
std
stos
mov
xor
lds
icebp
inc
or
leave
cwtl
mov
mov
mov
push
sbb
in
xchg
js
scas
jecxz
pop
pop
push
test
adc
psraw
jbe
jmp
add
inc
and
mov
sub
fs
sbb
loope
icebp
sub
jmp
pop
xchg
sub
mov
mov
scas
fisubl
sub
xchg
jle
adc
push
pop
mov
and
push
fisubrs
fucomi
mov
or
sub
xor
jne
lcall
dec
jmp
mov
or
cmp
mov
mov
add
sbbl
jae
clc
cmpb
mov
and
mov
imul
jmp
jp
shlb
ja
icebp
es
sub
jnp
xchg
xor
fiaddl
mov
je
outsb
rorl
mov
cmpsb
aad
jecxz
mov
mov
pop
pop
adc
call
mov
xor
movsl
aas
pop
cli
jno
jg
addl
push
lock
add
jmp
and
adc
cmc
push
pop
aad
insb
sbb
xor
dec
popa
mov
adc
cmp
xor
div
and
jl
mov
push
inc
ds
mov
imul
leave
sbb
fcompl
test
mov
jl
mov
jle
pop
xchg
sub
push
fwait
fwait
pop
jb
xchg
inc
sbb
arpl
sti
xchg
or
cmpsb
cmc
clc
pop
lret
mov
mov
inc
cs
jg
mov
aaa
xor
xor
pop
stc
dec
test
mov
lds
xor
or
xchg
sarl
popf
pop
push
inc
dec
cli
add
sbb
aaa
mov
shlb
movsb
and
add
mov
mov
sub
fisubl
xchg
sub
push
dec
dec
inc
pslld
mov
pop
rcll
xchg
lret
pop
rcl
popa
and
push
mov
add
bound
jo
adc
mov
ror
pop
mov
pushf
inc
shl
mov
inc
xor
mov
es
sub
ret
lock
fwait
popf
jae
xor
ret
xor
xlat
dec
pop
mov
cmp
es
cmp
mov
xchg
out
sub
mov
ljmp
lret
aad
mov
test
xlat
jns
mov
mov
mov
addl
xchg
mov
outsb
out
lds
aaa
add
popf
sarb
jns
cmp
inc
jmp
shll
pop
dec
pop
mov
xchg
cli
dec
bnd
inc
repnz
in
scas
sbb
add
cmp
rolb
xchg
ja
mov
sahf
leave
pop
push
into
xor
xchg
daa
dec
cmpsb
in
mov
or
fstpt
into
movsb
sub
loope
adc
push
cmc
cli
jns
xchg
je
jge
jnp
lret
push
stos
cmc
xlat
sub
out
test
jne
or
ds
adc
mov
aam
cmpsl
fidivl
mov
orb
inc
cmp
lahf
popf
push
in
insl
or
add
xor
or
cmp
xchg
sahf
nop
in
and
pop
mov
mov
lcall
movsl
dec
inc
push
xchg
mov
lret
ljmp
cmc
add
sbb
iret
loop
popl
pushl
mov
cmpsb
dec
jge
pop
jmp
jne
add
jmp
adc
repnz
inc
push
push
fucomi
jl
js
cld
dec
xor
ss
mov
test
andb
pop
icebp
xor
cltd
gs
in
scas
shll
fsubrl
insb
push
or
mov
mov
push
cmp
fisttps
mov
lods
stos
pop
or
sub
insl
mov
lock
push
jno
xor
xchg
aaa
adc
inc
std
jbe
pop
fmul
cmp
xchg
mov
repnz
into
shlb
mov
xchg
sub
out
or
jno
cmp
loopne
pusha
xor
xor
sub
nop
enter
jbe
jo
das
out
mov
or
imul
loop
xlat
adc
mov
and
add
xchg
xor
adc
dec
ror
rorl
movsl
lock
mov
jp
push
sahf
jb
push
popf
jge
shr
push
mull
and
hlt
cmp
nop
shlb
and
jnp
pop
je
mov
sbb
lahf
orl
add
cmp
xor
pop
popf
fwait
incb
pusha
in
push
enter
push
mov
jae
std
int
das
push
popa
mov
out
fwait
mov
xchg
repnz
mov
cmp
cwtl
mov
sbb
arpl
cwtl
negb
sub
loopne
mov
mov
out
jns
pushf
scas
and
inc
pop
scas
lock
inc
add
push
xchg
lock
outsb
addr16
jl
jle
inc
stc
scas
repz
aam
jne
mov
sub
out
stos
pop
mov
test
cmpl
mov
pop
fwait
jbe
out
rcrl
ror
add
xchg
inc
nop
mov
mov
lea
pop
lock
mov
jle
scas
or
pop
pop
hlt
or
inc
pop
aas
aas
pusha
dec
lahf
sub
hlt
sbb
out
sub
push
xchg
and
cmpsl
mov
inc
jno
cmp
jmp
int
add
pusha
ja
mov
out
sub
ss
inc
adc
mov
js
cmp
sbb
push
push
mov
cmp
jl
adc
out
pop
pusha
leave
sbb
test
ljmp
icebp
or
mov
sar
mov
add
add
push
add
int
aas
cmp
scas
xorl
push
pop
repz
shl
inc
and
aam
lret
out
jnp
insb
mov
mov
das
add
sub
enter
sub
das
inc
push
shl
cmpsl
push
loopne
fldt
in
lret
mov
jp
sbb
lea
inc
and
jg
insl
cmp
lcall
mov
cld
and
cli
mov
data16
and
mov
mov
jb
sub
mov
xchg
pop
xchg
ljmp
push
and
jb
out
mov
cmp
arpl
pop
dec
dec
or
scas
pop
inc
je
xchg
clc
stos
add
pop
xchg
and
inc
or
outsl
mov
jns
and
icebp
jbe
cmp
or
cmp
mov
pop
fwait
mov
stc
in
adc
sub
test
jle
and
shrb
and
pusha
sub
ret
sub
jmp
test
int3
mov
fs
clc
push
lret
xchg
or
xchg
aad
sbb
shlb
arpl
pop
pop
jne
les
std
bound
test
jmp
shlb
adc
inc
jnp
xor
in
cld
aas
mov
lret
pop
dec
cld
push
ljmp
daa
push
ficomps
jne
lds
jno
dec
mov
out
shr
pop
lods
and
jns
iret
pop
cmp
and
mov
int3
mov
cmc
pop
pop
xchg
push
jns
test
cwtl
iret
adc
ror
push
ret
movl
pop
jle
sub
fdivr
adc
push
outsl
add
jns
mov
sahf
mov
insb
ret
out
enter
lea
ret
jo
pop
lods
mov
out
or
mov
rolb
mov
dec
dec
xor
insb
stos
pop
push
idivb
inc
inc
inc
add
pop
aam
pop
sub
setnp
hlt
pop
sbb
sbb
mov
adc
shl
aaa
adc
aas
in
sub
sbb
sub
jmp
jnp
lods
sub
jmp
xor
adc
pop
push
or
ss
fwait
data16
pop
shrb
jne
mov
enter
lahf
fsts
mov
int3
adc
mov
xchg
cmpsb
add
push
sti
or
lret
je
aaa
inc
fstps
push
push
cmp
test
enter
adc
sar
xchg
xchg
out
mov
dec
ret
call
inc
in
aam
data16
xor
xor
and
movsb
int3
xchg
fdivs
push
test
mov
shrb
bound
mov
fld1
mov
xor
pushf
es
call
inc
inc
fmul
sbb
and
ficoms
orb
data16
sub
and
outsl
mov
jmp
sub
stos
sbb
lahf
and
shl
sbb
cmp
jge
push
sbb
lret
mov
insb
hlt
std
jle
sub
mov
jecxz
jo
add
add
frstor
mov
or
addr16
sbb
mov
out
mov
push
or
add
je
pop
jne
in
fs
push
movsl
fs
push
fstpt
ljmp
adc
push
hlt
out
addr16
mov
insb
lret
stc
and
add
lret
ret
in
mov
test
fiadds
aad
fninit
dec
scas
push
jge
mov
inc
ret
das
ja
pop
pop
call
andnps
sahf
popf
stos
push
cmp
pop
incb
lcall
mov
pushf
cld
sub
cmp
push
jne
mov
clc
jmp
in
lret
xor
and
bound
sub
pop
cmpsl
pop
scas
xchg
in
cmpsl
and
popa
cmp
push
cmpsl
push
jmp
into
add
xorb
lods
gs
cwtl
add
js
jns
mov
sub
icebp
pusha
mov
dec
addr16
sub
daa
jle
pop
scas
add
mov
mov
adc
arpl
lcall
jge
push
add
dec
scas
sub
loopne
cmp
inc
test
scas
pop
sbb
lea
push
pop
paddusw
push
aas
push
and
xchg
insl
nop
not
into
es
or
mov
jb
and
divl
xor
test
mov
add
fstps
and
sbb
outsl
mov
add
rolb
nop
push
movzbl
and
push
cs
cmp
ds
xchg
xchg
stc
or
rol
xchg
test
popa
fcomi
sbb
movsb
mov
jb
lds
sti
dec
fwait
mov
cld
pop
jmp
and
adc
pop
mov
mov
imul
imul
jnp
dec
fimuls
jl
imul
rolb
inc
popf
es
insb
dec
sub
ljmp
mov
sbb
shlb
sbb
sarb
dec
push
test
xchg
cmp
pop
cmc
jmp
fnstenv
jno
xor
aam
sbb
mov
mov
sub
outsb
pop
jnp
dec
xlat
cmp
push
dec
or
fs
mulb
outsb
lods
push
das
fcmovnbe
pop
or
jp
clc
rcll
fildl
pop
test
push
dec
sub
jns
xor
push
aad
out
test
dec
sbb
mov
popa
fadds
or
adc
stc
inc
or
ret
es
xchg
mov
dec
sbb
in
rcrb
es
jl
ja
fs
test
jp
out
stos
hlt
fmull
dec
or
leave
ljmp
bnd
clc
cli
adc
clc
jae
push
and
inc
test
daa
pop
andb
add
push
sub
inc
push
mov
clc
movb
push
dec
jg
sbb
in
mov
push
or
push
cmp
cmp
xchg
mov
mov
sbb
sub
jl
and
shlb
sub
add
push
ret
clc
lret
ds
es
mov
push
jle
cld
push
orl
ret
jnp
jnp
push
faddp
xor
push
push
adc
enter
enter
mov
jae
cmp
xchg
ret
cmc
mov
cwtl
add
add
mov
rcrb
jae
mov
jmp
cwtl
xor
sahf
pop
push
pop
lret
dec
rep
pushf
xor
stc
xor
add
call
mov
shll
repz
adc
dec
mov
ret
xlat
jge
push
cmp
push
les
dec
je
pop
jecxz
iret
add
add
xchg
xchg
jg
test
fistl
xor
stc
aad
pushf
imul
pop
fcomip
pop
divl
rcll
lahf
jge
out
mov
mov
sbb
icebp
out
pop
cmp
or
sbb
xchg
push
js
mov
cmp
gs
push
fimull
test
andb
push
call
ficoml
add
popf
sub
xrelease
stos
mov
lock
xchg
and
and
lock
in
pop
xchg
jae
pop
push
mov
and
adc
push
mov
mov
arpl
sbb
push
xchg
add
push
sub
jbe
std
std
out
adc
push
lods
or
mov
sar
lahf
aas
cmp
jbe
push
out
mov
jae
lahf
or
in
or
fldl
arpl
dec
add
and
cmp
call
jle
mov
js
pusha
ljmp
inc
adc
xchg
jb
dec
adc
inc
fwait
iret
std
mov
cmp
and
pusha
jne
xor
es
xor
imull
pop
xlat
add
mov
xchg
adc
sbb
jmp
popf
ss
jmp
mov
mov
movsl
dec
mov
ret
leave
xor
loop
xor
jb
addr16
jp
mov
jb
mov
pop
push
cmp
pop
jbe
test
je
add
pop
and
pop
mov
ja
mov
adc
mov
jne
movsb
push
shlb
mov
aad
inc
push
mov
mov
rolb
push
aam
call
xor
mov
sub
inc
insb
push
aas
repz
xor
xor
ret
add
mov
xor
sub
movsb
fsubl
push
lods
adc
push
dec
outsl
mov
adc
or
push
push
popa
fwait
call
mov
cmp
inc
push
adc
lret
dec
push
mov
lcall
out
sub
inc
mov
push
jl
rcrl
and
add
mov
testb
test
push
xchg
int3
loope
outsl
pop
das
popa
dec
add
loop
cmp
pop
jbe
sub
adc
inc
mov
aad
xchg
and
xchg
xlat
dec
xor
fbstp
hlt
cmp
and
lods
outsl
scas
es
pop
mov
push
test
je
lcall
sub
test
insb
je
cmp
repz
je
xchg
xor
jae
xchg
adc
je
out
xchg
lret
mov
call
push
add
dec
push
or
pop
dec
dec
subb
into
adc
lret
pop
clc
mov
out
gs
jmp
dec
adc
or
pushf
mov
clc
xchg
cmpsl
int
dec
jmp
icebp
fildl
enter
adc
jecxz
dec
movsl
xchg
inc
pop
push
adc
cmc
mov
dec
lcall
sbb
add
mov
popf
mov
fwait
cmp
xor
adc
mov
fnsave
jmp
jp
sub
pop
and
stos
dec
addl
mov
adc
cwtl
lock
dec
sub
sub
jb
or
adc
cmp
shrb
push
in
cmp
stos
mov
cmp
mov
jp
pop
xchg
xor
sahf
inc
stos
pop
rcll
shrb
lcall
inc
dec
hlt
test
xchg
out
out
mov
lods
push
imul
movsl
jae
sbb
mov
inc
mov
stos
iret
sarb
sub
cmc
je
and
sbb
imul
push
seto
bound
cltd
jno
fcompl
push
nop
int
and
mov
jne
test
cmpxchg
xor
inc
push
mov
mov
sub
icebp
mov
insl
scas
mov
mov
inc
out
add
out
cld
or
dec
dec
pop
inc
xor
mov
ret
pop
aas
dec
ds
push
xchg
stos
testl
loope
cmp
popa
test
inc
sti
cmpsb
push
rep
ljmp
pop
xlat
cmp
mov
cltd
and
xor
imull
pop
ja
sub
sub
mov
pop
imul
scas
fwait
out
test
cmp
aaa
sarb
sbbl
repnz
mov
adc
jb
and
stos
out
stos
mov
mov
jne
sar
dec
cli
push
jns
stos
inc
mov
shl
mov
xchg
movsb
iret
mov
arpl
negl
jp
xor
mov
test
cld
aam
xor
jo
pop
add
xor
push
ja
data16
xchg
arpl
jbe
je
mov
test
addl
jb
fmuls
sub
fs
sub
fbld
rclb
int3
aas
pop
xchg
sbb
sbb
out
sahf
mov
add
mov
jle
scas
pop
fcomps
push
arpl
ret
out
sahf
loope
mov
push
adcl
jmp
pusha
lods
mov
scas
icebp
addb
repz
inc
adc
dec
cmp
and
cs
add
jle
adc
js
and
div
adc
dec
cmp
pop
xchg
lahf
mov
mov
xchg
mov
or
mov
sub
in
out
mov
roll
xchg
push
mov
or
shll
mov
xchg
addr16
idivb
cmp
xchg
stc
dec
cmp
int
rcrl
lds
push
and
jmp
push
sbb
cltd
cmp
jne
jb
inc
stos
mov
shll
and
jne
add
mov
outsl
xlat
jo
push
aad
movsl
and
out
jle
jl,pn
pop
jnp
js
fiaddl
xchg
cmp
mov
mov
add
dec
xor
or
push
test
xorl
clc
inc
add
adc
xorb
sub
mov
repnz
rcll
push
jno
pop
xchg
iret
fisubl
adc
adc
insb
mov
xor
inc
rolb
loop
inc
pushf
mov
add
out
data16
bound
cmpsl
mov
sub
adc
js
xchg
push
rcll
shlb
jns
mov
cwtl
sbb
movsl
cli
pop
inc
icebp
pop
xchg
out
ljmp
jbe
xor
dec
add
iret
shl
cmp
inc
clc
mov
idivb
popa
lcall
ret
cmp
inc
push
rol
test
push
outsl
add
scas
and
in
rcl
nop
scas
jb
mov
mov
inc
or
xor
clc
or
push
jns
lret
ret
sbb
sarl
and
jle
lea
pop
xlat
mov
sub
mov
sub
sti
mov
movsl
sti
pop
ret
and
pop
loop
dec
or
pop
dec
js
pop
mov
call
jbe
insb
out
loope
iret
adc
jbe
cmp
testb
or
jns
in
scas
push
popa
testl
cmpsb
ja
xchg
shl
scas
mov
jecxz
out
inc
lea
test
sub
rclb
loope
not
pop
hlt
xor
pop
jo
add
jle
arpl
fwait
std
mov
shr
xor
xchg
leave
repz
mov
cmp
push
loopne
aaa
cmp
push
add
sbb
inc
add
sti
pop
and
sub
sbb
roll
rcrl
daa
into
stos
sub
inc
jne
cmp
cmpsb
xlat
int
sti
cs
mov
subb
mov
ret
inc
pop
pusha
sahf
fwait
inc
repnz
adc
push
div
aaa
dec
repnz
xor
pop
pop
or
sarb
push
imul
mov
cld
cmpsb
push
sbb
pop
cmp
test
cltd
pusha
jne
xchg
das
aam
cmp
jns
fmull
scas
add
mov
and
push
test
pop
mov
popa
mov
in
xchg
mov
dec
mov
and
push
mov
in
cld
ds
popa
add
std
xor
adc
xchg
test
test
mov
mov
push
xchg
fs
data16
add
ret
and
fisubrl
pusha
popf
imul
dec
dec
dec
mov
rcll
sbb
sub
or
popf
fstpl
loopne
mov
and
mov
xchg
sti
into
fsubl
test
sub
js
mov
inc
es
stc
ja,pt
into
xlat
cmpl
jb
push
add
push
inc
and
popa
push
insb
aad
shlb
sbbb
mov
test
xor
lock
sub
loopne
jno
mov
cmp
hlt
cli
or
pop
mov
dec
imul
mov
cwtl
lret
imulb
std
ret
pusha
sbb
pop
mov
outsl
cli
push
mov
sbb
xor
testl
sahf
lret
dec
add
or
cmp
int
lcall
sbb
lods
fcompl
les
repnz
adc
lret
adc
nop
lea
pop
fidivrs
test
pushf
loope
mov
xor
xchg
cli
xor
imul
push
outsl
fbstp
mov
xlat
in
cmp
jle
mov
mov
test
jp
mov
jo
cmp
dec
push
sti
test
test
leave
idiv
scas
outsb
inc
movzbl
xor
and
pop
jno
push
xlat
mov
adc
lds
fucomip
pop
inc
fldpi
or
push
test
mov
dec
cltd
lea
push
push
in
xor
outsb
lcall
sbb
push
enter
or
out
sbb
out
inc
dec
cmpsl
add
rcrl
aaa
sub
push
adc
xchg
pop
push
mov
and
or
and
call
js
std
cmp
add
xor
sbb
fs
cmp
dec
jecxz
test
rorl
lahf
dec
in
cmp
jno
ficompl
jl
hlt
imul
mov
dec
roll
push
adc
xchg
or
or
repnz
femms
jge
sbb
stc
sub
pop
mov
jmp
fs
cs
jle
addr16
xor
xchg
int
xchg
xchg
xlat
jecxz
out
and
rcrl
adc
xor
or
lods
pop
movsb
and
stos
push
mov
jmp
cwtl
or
mov
or
push
and
sub
rcll
cmpsb
pop
mov
cmp
fwait
push
imul
fwait
daa
add
sahf
je
test
jne
test
and
repnz
mov
pop
mov
test
test
les
pop
fsubl
and
mull
dec
mov
push
scas
pop
add
cmp
and
sbb
mov
dec
fstps
jge
sahf
lds
lods
inc
cmp
push
ds
pop
jbe
mov
jae
jg
add
int
iret
inc
into
in
jp
call
out
std
push
sub
jmp
ret
fmull
rorl
nop
xlat
sub
test
mov
test
stos
pop
bound
pop
push
scas
pop
jb
dec
repnz
xor
scas
jo
jne
jbe
scas
xor
lds
sbb
arpl
enter
push
sub
fwait
push
adc
inc
sbb
mov
xchg
dec
mov
outsl
sbb
repnz
pop
pop
push
push
sarb
add
fisubl
les
aas
movsl
sbb
sub
cli
fistl
push
cmp
xor
push
cmp
cmp
jno
pop
dec
mov
dec
into
aas
pop
daa
fcompl
popa
mov
pusha
jmp
fwait
jo
in
pushf
loope
jl
xchg
loope
lahf
or
cs
test
push
xchg
rcll
xor
xor
inc
and
iret
mov
jp
repz
mov
mulb
jno
pop
loop
pop
stos
fiadds
mov
add
mov
add
sbb
push
pop
rdpmc
inc
pop
mov
mov
bound
add
jp
cmpsb
jb
jg
cli
push
sbb
xchg
xchg
and
imul
into
movsl
jnp
aas
flds
sub
in
mov
push
push
dec
ja
and
insl
xchg
push
rcll
or
test
sub
or
push
pop
mov
loopne
cmpsb
sbb
sub
jp
lds
cmp
adc
adc
jbe
aaa
jecxz
xchg
jo
scas
cmpsb
jg
imul
rorb
mov
lret
test
adc
ja
mov
lahf
cmpsb
mov
dec
dec
pop
push
lret
stc
mov
mov
dec
mov
mull
sub
aad
lcall
cs
js
pop
in
sbb
fldt
pop
adc
jno
pusha
or
mov
adc
ss
mov
add
jp
div
test
loope
test
mul
jnp
loope
ss
adc
ljmp
pop
rclb
data16
or
lea
mov
sub
mov
movsl
mov
xorl
sbb
pop
xchg
pop
inc
fildll
push
and
mov
add
adc
adc
clc
dec
lods
lods
repz
lahf
sbb
test
flds
mov
mov
sbb
push
mov
icebp
jecxz
xchg
in
jnp
pusha
mov
test
lea
and
jbe
pop
sbb
andl
and
aas
cmp
xchg
rcll
jp
gs
ljmp
ja
cmc
nop
sub
pop
into
push
inc
push
push
into
mov
jmp
out
or
and
sub
outsl
stc
xchg
aas
imul
insb
push
andnps
sub
sub
jno
out
mov
pop
clc
in
sbb
fidivrl
mov
push
push
add
stos
enter
popa
mov
imul
inc
xchg
out
adc
dec
addr16
inc
adc
pop
mov
dec
repnz
push
rcll
xlat
jl
sbb
add
pushf
push
movsl
repnz
sub
mov
inc
out
jecxz
cmp
xchg
fdivp
popf
push
sub
dec
inc
inc
aaa
xchg
scas
or
fcompl
rorb
mov
jb
mov
pop
jnp
shl
pushf
lahf
out
add
pop
sti
gs
cmp
xchg
loope
dec
out
std
int3
push
jg
jb
cmc
stc
cmp
stos
std
fs
fucomip
or
sbb
ljmp
dec
add
pop
jecxz
mov
fcmovnb
je
push
xor
xchg
ret
cmp
push
iret
es
je
xchg
push
jo
cmp
neg
and
lcall
data16
sub
js
test
dec
jae
test
aaa
mov
fcompl
dec
adcl
pop
and
sysret
pop
push
push
aad
cmpsl
jo
dec
fcomps
and
aad
push
ret
mov
out
xchg
rolb
or
in
ret
mov
out
aaa
cltd
gs
pusha
xor
xchg
cs
movhps
std
cmp
fisubrs
xchg
sub
pop
movsl
sbb
cmp
notl
push
mov
loopne
add
push
adc
jge
cli
xlat
sub
push
inc
push
popa
movsl
cmp
mov
inc
jbe
sub
mov
andl
sbb
inc
jbe
mov
push
imull
subl
daa
cld
scas
mov
pop
lea
hlt
jle
es
fcompp
sbb
sub
sub
pop
or
ss
xchg
fdivp
rorb
jl
fcomps
pushf
insl
scas
inc
insl
mov
negb
pushf
int
jb
jl
outsl
in
pop
pop
sub
mov
mov
cld
add
pop
inc
mov
push
fidivrs
mov
rcr
or
movd
mov
sbb
mov
inc
call
popf
xchg
push
mov
inc
loope
shll
sarl
ret
ficompl
jns
in
xchg
enter
dec
je
cmp
pop
test
cmp
lret
push
int
inc
rcrl
je
stos
jp
cmpsb
in
shll
mov
or
jbe
xlat
inc
insb
sub
jne
xchg
push
mov
addb
test
jle
adc
sarl
call
sbb
popa
or
xor
jle
cmc
inc
cmp
jp
in
adc
xchg
loop
subl
movsl
hlt
inc
push
inc
inc
loopne
ds
ds
or
andb
popf
jno
and
ljmp
testl
inc
int
les
loop
sbb
jae
xor
cwtl
imul
xchg
sub
xor
loopne
xor
sub
popf
fwait
mov
mov
mov
adc
jge
rclb
xchg
inc
cmc
fdivr
hlt
test
inc
pop
icebp
out
int3
dec
test
xor
mov
enter
inc
lcall
cmp
clc
push
mov
push
scas
adc
imul
adc
dec
mov
fistl
push
and
dec
or
or
jecxz
outsb
mov
nop
adc
mov
mov
sub
nopl
ljmp
push
mov
xor
in
dec
jae
push
and
push
jne
in
push
scas
aaa
sub
mov
fsin
popf
and
mov
xchg
aad
add
xor
adc
bound
and
inc
jnp
mov
mov
pop
in
mov
sti
test
xchg
out
mov
jns
push
xor
rcrb
push
pop
inc
sbb
mov
bound
push
mov
pop
lods
mov
enter
shll
movsl
test
out
inc
xor
jb
mov
cwtl
das
fisubrs
in
sub
inc
mov
cmpb
mov
imul
in
popa
cmp
fadd
mov
add
and
push
insb
imul
sub
je
pop
fisubrl
cs
iret
dec
mov
cltd
les
push
jno
adc
sbb
push
popf
outsb
mov
dec
enter
es
jae
repnz
xchg
pop
mov
fisubrs
xchg
je
sarb
inc
ss
pop
or
jo
sti
jb
xchg
je
fsubl
fs
iret
stc
imul
sbb
inc
sbb
rcrl
addr16
movsl
aas
pop
out
out
xor
cmp
sbb
cmp
cmp
or
xchg
adc
cmp
push
xor
pop
jne
inc
xchg
mov
xchg
lret
sbb
and
pop
jl
adc
xlat
cmc
mov
insl
mov
pop
add
cmp
xor
mov
loope
cmp
jp
fwait
mov
jmp
hlt
in
in
outsl
push
mov
and
mov
divl
je
fiadds
or
test
movsb
shlb
data16
pop
in
push
mov
xchg
add
dec
cwtl
shlb
popf
stc
sti
mov
mov
cli
lahf
sbb
imul
push
cmp
rcr
iret
cmpsl
cwtd
sbb
setp
movsl
sub
and
orb
insl
adc
mov
jecxz
lea
xchg
imul
fwait
lock
clc
inc
outsb
pusha
and
mov
arpl
sub
push
lods
mov
insl
clc
lret
outsl
fidivs
out
and
inc
cmp
add
fs
mov
mov
lcall
or
icebp
dec
js
pusha
mov
clc
fdivs
cmp
nop
jne
mov
push
xor
lods
adc
popf
into
fcmovu
pushf
or
push
push
xor
outsl
adc
push
leave
call
mov
das
and
dec
mov
mov
andb
jl
xchg
mov
jbe
int3
popa
out
aad
stos
cmpsb
cli
fs
dec
gs
pop
call
jo
shrl
pop
clc
movsb
push
outsb
mov
adc
sbb
adcl
inc
js
xchg
shll
mov
in
cmp
out
cmp
or
rcrb
insl
pushf
shrb
dec
pop
add
mov
pop
sub
sbb
jbe
jnp
out
push
xor
lahf
in
fsubrs
sbb
xor
mov
jle
lods
dec
pop
push
jmp
jo
inc
ret
insb
inc
out
lcall
dec
mov
jno
les
or
and
out
push
mov
dec
int
fildl
push
push
test
xchg
pusha
mov
loop
lcall
ja
fstl
lds
xor
mov
fisubrs
xbegin
testl
mov
sbb
dec
cld
dec
mov
xchg
sbb
mov
add
pop
mov
outsl
out
mov
add
sbb
pop
cmpsl
in
adc
daa
rolb
dec
sub
fdivrs
cmp
xor
clc
jo
pushf
cli
mov
pop
xchg
faddl
int3
lret
mov
fcoms
daa
data16
loope
incl
call
les
lcall
aaa
scas
jp
push
and
lock
adc
dec
push
xlat
ja
lcall
in
mov
cmp
xchg
and
push
fwait
or
out
push
adc
popa
daa
pop
sbb
push
iret
mov
loop
or
dec
jne
or
js
test
pop
dec
push
cld
pop
pop
rcr
loop
sub
mov
mov
jge
push
mov
mov
bound
movsl
jne
push
mov
xchg
daa
xor
push
mov
dec
dec
xor
inc
into
loope
sbb
or
mov
cmp
jp
jp
and
enter
push
popa
jge
cltd
mov
dec
mov
lcall
pop
mov
loop
loopne
cmc
test
adc
imulb
out
jecxz
fwait
xchg
shlb
cmp
xchg
jp
cmp
push
jecxz
xchg
call
dec
ret
push
add
rcrl
pop
pop
cmc
inc
pop
xchg
pop
dec
sbb
mov
movsl
scas
icebp
jmp
add
xchg
lcall
mov
dec
xchg
cs
arpl
mulb
add
xchg
daa
cmp
enter
sub
fs
outsb
xor
push
xchg
mov
js
js
sbb
lds
scas
stos
or
sbb
movsl
icebp
ljmp
ror
sbbb
std
int
fisubrl
xchg
ja
dec
std
adc
and
mov
fstps
jns
pop
imulb
ret
call
roll
cli
cmp
movsb
bound
out
cmp
enter
out
pop
cld
into
test
aas
xor
test
dec
pop
xchg
sbb
cmp
push
dec
nop
jnp
mov
sub
dec
sbb
push
lock
lds
or
rcrb
repz
mov
ss
xchg
arpl
push
or
in
in
pop
ljmp
dec
lods
sbb
popf
roll
into
sbb
lret
or
mov
inc
pop
mov
xor
xor
sub
sub
test
cwtl
add
pushf
iret
jmp
rcrl
cmp
fbstp
dec
outsb
jno
push
cmovb
push
or
xor
dec
cli
xchg
cmp
inc
add
dec
rorb
and
mov
mov
in
jne
das
sub
lcall
inc
mov
dec
xorb
ss
xchg
aam
movsb
xor
mov
je
inc
or
popf
insb
jge
mov
mov
mov
iret
into
inc
inc
mov
adc
mov
sbb
sbb
mov
aaa
xor
shll
cmp
cmp
dec
jb
or
imul
dec
or
cli
sbb
int3
or
adc
mov
cmp
add
xor
pop
cmp
cld
imul
lock
xchg
xlat
cmp
jg
adc
loopne
mov
jae
loope
insb
sbb
hlt
adc
dec
push
adc
fsubrs
addb
and
pop
cmc
push
outsb
int3
jns
cmpsb
pop
sbb
fwait
stos
adc
inc
push
fidivrs
xchg
cld
cmp
mov
push
out
or
inc
push
ljmp
hlt
dec
mov
dec
mov
insb
fsubr
and
jnp
inc
xchg
xchg
xchg
outsb
outsl
mov
xchg
dec
xchg
dec
test
sarl
imul
test
shrb
sub
rclb
mov
call
rorb
outsl
jecxz
xchg
mov
repnz
and
jl
nop
test
fiaddl
mov
imul
loopne
ljmp
pop
into
inc
push
mov
fcoms
or
sub
fisubrl
inc
jge
movsb
fnstsw
xchg
and
and
adc
inc
push
xor
ds
xorb
vcvttpd2dqx
cmpsb
sbb
roll
mov
pop
jae
add
pop
and
rorb
inc
cmp
sbb
push
xchg
push
ja
and
adc
add
imul
pop
adc
jnp
das
sbb
icebp
outsb
mov
cmp
je
fsubp
inc
mov
push
andl
pop
mov
sub
stos
add
mov
or
cmp
adc
jne
xlat
jle
xchg
pop
fdivl
mov
lahf
xchg
pop
movsl
cld
mov
lock
leave
daa
jns
icebp
xor
adc
pop
pop
push
sub
jecxz
cs
loopne
test
aaa
scas
aas
sahf
adc
cmp
negb
out
ret
jmp
cmp
cmp
push
sbb
adc
sbb
call
scas
hlt
cli
das
in
and
mov
shl
inc
lock
cmpsb
into
or
cmc
shrl
mov
popf
or
test
cld
jns
loope
sbb
hlt
adc
jmp
cmp
sbb
das
jne
hlt
mov
pop
aad
addr16
or
out
jecxz
movsb
xor
cmp
pop
lods
out
movsl
pop
mov
pop
rcrb
rcrb
jp
lods
scas
je
mov
pop
es
adc
js
out
mov
ds
in
ljmp
jge
loop
inc
cmp
lret
loop
adc
push
mov
sub
mov
aas
inc
lcall
or
sbb
mov
dec
sar
popa
jge
jae
outsl
std
js
adc
cltd
mov
push
jae
mov
mov
mov
sbb
or
outsb
sbb
or
mov
in
cltd
sbb
pop
mov
jbe
or
jmp
insb
ret
loopne
and
lock
dec
or
push
repz
insb
add
pop
sub
sarl
xchg
leave
lret
hlt
inc
jp
adc
mov
jno
es
in
iret
sub
imul
cmpsl
out
cmp
jmp
adc
icebp
inc
lea
rorb
fucomip
sub
insb
inc
pop
mov
sub
push
xorl
cltd
inc
dec
mov
lcall
jmp
cmp
dec
int3
fbstp
cwtl
js
pop
out
jb
scas
adc
mov
push
fadds
outsl
sbb
jl
mov
popl
and
jno
test
scas
xchg
inc
or
enter
push
hlt
adc
sub
insb
ja
xchg
data16
sbb
push
sti
and
lock
rcrl
data16
xor
pop
xchg
test
xor
cmp
cmp
add
pushf
mov
lcall
ljmp
sub
gs
fisubrs
jmp
cli
test
xchg
sub
inc
and
mov
sti
cld
sub
orl
pop
or
add
popf
enter
dec
or
ds
test
add
gs
nop
jg
dec
iret
mov
lret
lock
or
call
sti
add
adc
das
mov
xchg
enter
imul
jo
sarb
sbb
cli
mov
cmp
xor
mov
jno
xchg
push
adc
fdivrl
cmpsl
mov
cli
cmpsl
jae
push
aad
outsb
fs
adc
dec
mov
mov
jb
xor
outsb
xor
add
pop
mov
sub
xor
adc
mov
and
mov
mov
jbe
lea
xchg
mov
mov
xor
faddl
xchg
int3
je
push
jae
scas
lcall
xchg
orb
in
sbb
xor
push
data16
jbe
rcrl
add
and
insl
xor
fsubrs
mov
mov
insl
fs
add
xchg
enter
pop
push
out
ljmp
xlat
popl
rorb
mov
inc
inc
pop
int
lahf
mov
xor
jo
icebp
scas
bound
in
mov
cmc
movsl
je
cmpsl
shll
cmp
icebp
add
movsb
xchg
push
xor
push
lods
mov
aaa
lock
mov
cmp
mov
outsb
jne
add
or
push
jnp
outsl
addb
lcall
js
sahf
jb
mov
call
fcmovnb
pop
xchg
inc
sbbl
aad
xchg
aad
mov
xor
in
add
xlat
sub
lcall
pop
inc
and
incl
stos
test
std
lock
dec
jo
ror
add
sarl
xorl
mov
sbb
dec
aad
stos
jne
push
inc
shll
pop
mov
lods
lret
into
sub
negb
int
pusha
sbb
call
test
into
mov
xor
lahf
loopne
out
dec
xchg
fcmovne
sbb
loopne
out
and
jb
add
rcr
pop
push
jl
test
bound
push
mov
mov
sarl
jns
test
push
lea
jb
mull
mov
sbb
mov
iret
and
shl
inc
sbb
int3
das
jle
pop
ficomps
imul
mov
lret
ret
arpl
std
sbb
mov
xchg
int3
jb
pop
inc
dec
mov
cmp
hlt
mov
imull
scas
insb
ja
movsl
pop
js
test
pop
xor
ja
xchg
push
cmp
push
lock
out
out
push
or
bound
cmpsb
pop
lods
das
jecxz
push
xchg
sar
sub
jo
and
mov
lret
cld
pushf
out
ss
mov
fcmovu
lahf
xor
sbb
mov
clc
xor
mov
fisubrl
inc
leave
push
lret
hlt
les
outsb
push
lret
loopne
adc
xchg
movsl
push
cmpsb
nop
and
mov
sbb
inc
mov
jbe
dec
inc
jl
jp
inc
cmpsl
cld
mov
lret
mov
lcallw
scas
sub
sub
mov
add
repnz
fcoml
mov
sub
jae
cmc
mov
and
jecxz
imul
pushf
pusha
jle
adc
int
or
out
or
scas
out
push
xor
ss
adc
and
sub
dec
arpl
mov
stos
imul
cmc
ljmp
fiaddl
shl
jle
ds
push
repz
ja
mov
push
pop
add
dec
mov
push
nop
roll
arpl
sarb
inc
in
xor
xor
test
push
dec
cltd
sbb
cld
es
fldt
lret
sub
inc
jp
mov
scas
push
dec
in
xchg
push
xlat
ret
clc
dec
repnz
cmpsb
mov
mov
js
stc
mov
lahf
pusha
rol
add
dec
mov
adc
push
dec
lret
js
fistpl
ss
jg
outsb
and
jb
mov
inc
mov
adc
mov
xchg
inc
lock
mov
jnp
test
or
push
add
outsb
jae
cmpsl
bound
mov
andb
sub
lcall
in
mov
cmp
clc
out
xor
call
sbb
aas
and
popa
jb
cmp
mov
xor
pmullw
hlt
sbb
enter
nop
cmp
mov
insl
lahf
int3
cmp
cmp
rcll
xor
shll
lods
jp
mov
sar
and
xchg
imul
out
pusha
push
mov
subl
push
xchg
js
fnstenv
inc
inc
lahf
jecxz
je
popl
fldt
pop
mov
xor
lahf
sub
mov
inc
xchg
mov
lds
and
lahf
mov
pop
mov
test
inc
sbb
mov
sbbl
adc
lea
mov
test
inc
mov
mov
imul
jo
inc
sbb
or
sahf
jle
xor
ss
mov
jp
sti
out
js
lds
pop
lahf
push
out
mov
add
or
jecxz
out
push
outsb
inc
stos
orl
into
push
push
out
iret
fiaddl
insb
cmp
xchg
cwtl
cs
sub
ficoml
adc
push
dec
scas
shll
or
mov
or
adc
or
int3
jae
add
cmpsl
ret
pusha
hlt
jl
imul
jmp
jne
test
and
xor
dec
push
xchg
pop
sub
add
lods
int3
sbb
call
push
xor
push
aas
popf
dec
psllq
pusha
mov
cmp
scas
or
ret
jge
scas
movsl
cld
push
lahf
int
fstl
jmp
cmp
xchg
hlt
cmp
add
test
xlat
sbb
call
gs
dec
lods
xchg
cmpl
jbe
jmp
or
int
adc
jle
pop
cmp
in
cmp
push
mov
sub
fisttps
test
pop
and
mov
xor
cwtl
outsb
lock
aad
jg
out
loope
mov
popa
data16
push
or
testb
sub
aam
sub
js
iret
ss
inc
iret
rcr
cs
push
iret
leave
insl
lock
inc
jp
in
test
pop
pushf
sub
inc
fnstsw
mov
cwtl
fnsave
rdpmc
daa
int
lods
nop
inc
scas
fsub
lea
jae
mov
leave
or
iret
adcb
mov
xchg
rorb
mov
inc
aam
xchg
xchg
aam
mulb
cmp
add
cmc
mov
frstor
dec
sbb
mov
sarl
pop
aaa
shlb
loop
push
cmp
xchg
ret
or
sub
lock
loopne
adc
ljmp
in
rclb
push
call
sbb
fsincos
mov
std
pop
imul
sbb
cmp
xchg
ljmp
es
mov
xor
mov
pop
jnp
icebp
pop
push
lds
lods
dec
sahf
sbb
jno
into
test
push
in
mov
pop
push
ljmp
dec
pop
jmp
mov
push
test
push
mov
xchg
fidivs
inc
aaa
and
orl
stc
int3
mov
movsb
jne
das
je
scas
adc
sub
test
mov
adc
aaa
sahf
in
mov
stos
test
pusha
sbbl
xor
into
mov
mov
mov
enter
test
test
sbbb
shlb
shl
das
dec
adc
std
fistps
pop
and
sub
scas
mov
cmp
sub
dec
out
aas
pop
mov
xchg
loop
xor
aam
dec
addr16
jmp
inc
cltd
push
mov
insl
mov
jl
mulb
mov
and
lret
xor
push
mov
sbbb
mov
cmp
iret
loopne
ja
push
push
or
pop
xchg
imul
test
sbb
addr16
push
xor
scas
mov
jno
xorl
push
mov
lods
and
sub
loopne
imul
xchg
add
mov
es
and
dec
mov
pop
ret
filds
iret
adc
lret
xchg
gs
jno
shr
shlb
out
out
pop
mov
xor
pop
ret
push
int
mov
and
pop
sub
add
dec
mov
dec
pop
sbb
sbb
lcall
pop
cmp
adc
cmp
cmpsl
sub
fidivl
jmp
rorb
mov
ds
test
xchg
xor
sbb
jb
rclb
pushf
outsb
test
xchg
dec
mov
jmp
dec
add
push
sub
cmp
adc
inc
rolb
xchg
fs
into
lock
sub
sub
fucomp
out
pop
mov
out
in
sub
sbb
sub
lock
fwait
xchg
rcrl
mov
add
sub
pop
ja
push
mov
leave
ret
jmp
and
aas
inc
loope
adc
outsl
lret
les
popf
mov
mov
adc
mov
jp
push
test
js
cmp
icebp
enter
andl
lahf
ss
sub
stc
aad
arpl
pusha
mov
sbb
pop
sbb
int3
cld
push
repz
stos
mov
and
lods
arpl
mov
lods
icebp
cmpsb
fldt
icebp
sub
es
ljmp
jnp
test
insl
mov
aas
addr16
adc
sub
sbb
jns
pop
pop
jecxz
jg
pop
popf
mov
mov
mov
outsl
or
mov
repz
xor
mov
stos
addr16
movsl
and
and
adc
or
lods
fstp
flds
mov
xchg
push
adc
inc
int3
mov
add
aam
fsubr
cmp
and
int3
sub
mov
cli
or
sub
int
daa
mov
sbb
push
nop
loop
dec
jnp
and
mov
insl
dec
dec
scas
mov
or
jbe
cwtl
jo
lods
pop
pop
push
pop
dec
xchg
test
fwait
inc
jp
or
adc
mov
jo
and
jb
fs
rolb
xchg
xor
mov
in
mov
pop
cld
and
dec
imull
mov
adc
ret
jmp
out
int3
xor
or
les
or
ljmp
call
mov
mov
mov
inc
add
ja
psrlq
mov
lret
mov
mov
push
ret
adc
jmp
pop
arpl
test
xchg
add
dec
jle
fiaddl
inc
mov
push
hlt
pop
ds
rorl
popf
mov
sbb
mov
inc
mov
sub
and
and
mov
xchg
not
jo
pop
fidivl
shrl
sbb
sub
ret
jae
inc
add
cmpsl
sbb
out
pop
outsl
push
xchg
flds
mov
and
inc
lahf
lret
mov
in
sub
xor
fcmovnu
mov
jecxz
mov
xchg
jo
andb
sbb
lods
xchg
outsl
loope
sbb
xor
out
mov
or
xchg
adc
loope
out
inc
fs
js
rolb
mov
jmp
inc
pop
cmp
inc
pop
cmp
jne
cmp
imul
push
and
cmp
or
aam
and
cmp
ret
push
adc
and
cmp
call
adc
sub
push
sahf
stos
sub
js
sbb
ficoml
xchg
insl
add
outsl
sub
dec
fdivp
mov
clc
in
subl
loop
outsl
cmpsb
movsl
out
aaa
pop
stc
cmp
dec
push
sarl
imul
leave
sub
lea
mov
sahf
jne
clc
test
push
fwait
jle
xor
mov
popf
jo
jb
mov
fcomps
into
mov
xor
sbb
or
cltd
ret
and
pop
xchg
test
shll
daa
cli
pushf
popf
ja
xchg
mov
mov
shrb
mov
pop
mov
cld
pop
adc
add
fstpl
scas
jae
xchg
jge
dec
shrl
in
sbb
mov
movsl
push
xchg
repz
cmp
push
mov
xchg
iret
popf
mov
cwtl
les
jns
jne
or
out
push
in
outsl
gs
rorb
pop
mov
cmp
test
mov
out
and
cwtl
push
lods
stos
sbb
iret
ljmp
jp
mov
adc
js
adc
scas
xchg
das
jge
int
pop
adc
sbb
and
aam
inc
scas
xor
lcall
call
jns
xor
dec
xor
lods
sbb
in
jl
mov
dec
jae
int
test
xor
mov
into
and
fnsetpm(287
xchg
or
cmp
in
frstor
js
or
xchg
out
cwtl
jmp
mov
stos
pop
out
std
and
bound
test
pop
mov
mov
mov
adc
cmp
cmp
cs
psadbw
lret
mov
iret
scas
arpl
roll
push
cwtl
inc
dec
xchg
jp
and
mov
jne
cwtl
mov
rorb
mov
stc
sub
repz
iret
int3
lcall
inc
arpl
jecxz
or
mov
mov
push
mov
mov
cmp
mov
lods
add
fisubl
cmp
or
aaa
scas
addr16
mov
mov
loop
stos
clc
imul
mov
dec
dec
dec
pusha
mov
jg
in
loopne
push
push
xor
and
cltd
int3
arpl
sbb
mov
cmpsl
je
xor
cs
repnz
imul
cmp
into
fwait
out
sub
sbb
jno
in
int
lea
cmp
lahf
int
inc
int3
in
jecxz
pushf
mov
and
sbb
rclb
mov
ret
pop
adc
mov
push
leave
ljmp
imul
lahf
popa
data16
xor
and
fstpl
mov
cmp
add
and
inc
mov
add
dec
ret
loopne
mov
ret
pop
inc
test
dec
ss
mull
mov
test
jns
jnp
pop
pop
cli
outsl
out
push
inc
ds
push
pop
cli
aas
lret
cmp
inc
sarl
inc
es
mov
dec
cmc
fbld
mov
pop
and
mov
js
scas
insb
jne
push
mov
aam
jl
or
inc
ss
sbb
jae
pushf
xor
push
inc
nop
xchg
and
push
mov
cmpsl
mov
imul
mov
cli
fbstp
test
fisttpll
rcll
mov
adc
lret
inc
shlb
push
push
xchg
and
adc
cmp
pushf
outsl
jne
std
pop
xchg
push
popa
cld
pop
ds
or
fs
ror
cmpsl
sub
xor
mov
add
mov
pop
mov
mov
inc
imull
and
and
pop
iret
mov
iret
mov
mov
stos
test
mov
outsb
popf
rcrl
sbb
push
mov
dec
out
inc
xchg
push
fcmovnbe
push
mov
add
mov
ja
adc
pop
xor
jb
pop
dec
outsl
nopl
mov
inc
cmp
inc
icebp
sub
jo
dec
xchg
roll
popl
insl
and
leave
pop
xchg
ficomps
sbb
fisttps
ret
outsb
cltd
and
lcall
lret
test
pop
je
mov
shlb
repz
pushf
pop
shll
nop
daa
adc
cwtl
pop
adc
inc
out
cmc
mov
sbb
pop
popa
test
rolb
lret
in
ret
jg
outsb
adc
ficomps
cmc
outsl
mov
jae
je
cmp
mov
cmp
iret
sahf
ds
and
mov
insb
adc
insl
enter
pop
insb
dec
cmp
xorb
fadds
push
mov
mov
jo
ljmp
pop
push
push
jo
or
xchg
push
popa
out
rolb
mov
dec
movsl
hlt
cltd
sti
mov
jne
mov
push
push
ja
cltd
jp
out
aad
jnp
mov
insl
insb
sti
cmpsl
mov
int
out
jmp
pop
cmpsb
adc
add
mov
jecxz
fnsave
jecxz
js
jo
mov
jno
dec
fiadds
test
test
jb
ss
and
jl
data16
mov
jle
fsub
cwtl
jle
in
divb
mov
or
mov
adc
mov
ljmp
shr
lret
mov
popa
pushl
out
sbb
inc
out
cwtl
fcomp
bound
movsb
push
in
xchg
cmp
lods
call
scas
dec
xchg
lods
enter
leave
es
inc
push
loop
ret
cmpsb
test
mov
pop
xchg
fisubrl
inc
mov
add
sarb
imul
mov
push
stc
cmc
icebp
cli
jbe
inc
daa
mov
cld
adc
or
pop
fsubr
popa
ret
xor
mov
dec
xlat
xor
shll
and
test
xor
ret
mov
xor
rcrl
jo
pop
jae
jmp
ret
sub
adc
test
jp
pop
xchg
jne
mov
jae
or
std
movsb
clc
or
jle
cmp
dec
das
mov
lds
adc
push
movsb
int
iret
mov
ret
frstor
pop
cmpsl
xchg
test
xchg
adc
rolb
addl
inc
mov
mov
cmp
es
or
xchg
sub
push
jnp
sub
sbb
mov
mov
cmc
lcall
jae
movsl
mov
xchg
in
ds
xchg
scas
lcall
popa
je
arpl
pop
loopne
loope
xchg
mov
test
cmpsb
dec
stos
xchg
mov
fwait
loope
or
cmpsl
sbb
sub
sbb
stos
lcall
sub
cmpsb
orl
jae
mov
dec
ds
fwait
or
mov
xor
sti
fwait
lock
dec
dec
cs
test
cmc
or
push
jmp
sbbb
push
vrcp28ps
ret
dec
movb
std
cmp
aas
inc
push
rorb
ds
sub
icebp
adc
lcall
xchg
arpl
sti
clc
cmp
xchg
aam
push
lock
add
push
and
ljmp
shlb
lods
mov
fincstp
andl
ljmp
adc
ss
adc
ret
movsb
jecxz
hlt
pop
test
add
sbb
dec
mov
test
mov
cmpsl
aaa
push
sub
mov
jecxz
xor
shll
outsl
lcall
add
push
lock
mov
mov
and
jmp
xor
insb
test
cmp
pop
pop
adc
sti
cmp
fldcw
stos
stos
insb
fnstenv
enter
mov
enter
lock
lock
sub
adc
dec
mov
movsl
not
push
shll
push
out
aaa
arpl
mov
xchg
sbb
dec
lds
icebp
jo
iret
xor
sahf
sub
add
int3
in
jmp
push
cmp
mov
adc
stos
imul
lds
and
aam
push
outsb
and
and
out
or
mov
stos
cmc
pop
cmp
jnp
push
ds
pop
cs
call
mov
aas
nop
fs
xor
les
aad
or
shrb
pop
dec
sub
inc
jo
lock
imul
jl
and
adc
fisubrl
and
inc
sbb
aad
leave
jne
aam
mov
xchg
mov
mov
add
and
shll
das
sbb
idivb
repnz
inc
cmp
pop
aaa
gs
mov
jns
mov
iret
aaa
lock
loop
cmp
sub
mov
mov
stc
push
mov
sti
mov
pushf
repz
rorb
and
insl
je
mov
and
lea
xchg
xchg
xlat
or
popa
ss
pop
or
push
mov
add
jmp
fadd
mov
rol
xchg
insb
or
jle
adc
repz
and
push
sub
sub
lret
xchg
xor
or
sub
lea
adc
cmpsb
mov
aas
fwait
es
int3
fsub
mov
add
roll
pushf
cmpsl
xchg
mov
mov
add
xlat
je
icebp
je
mov
or
xchg
into
out
and
lcall
stc
mov
sbb
fcoml
in
rcr
or
idivb
loop
fcmovb
xor
xchg
leave
lahf
rolb
and
mov
pop
push
js
dec
scas
jo
or
push
xchg
das
push
mov
adc
ja
push
adc
cltd
push
jne
inc
imul
mov
lret
mov
popf
push
adc
or
pop
mov
clc
inc
cmpsb
ret
or
adc
lret
xchg
mov
xor
jp
sbb
ds
call
sbb
loop
repnz
cmp
nop
test
cli
pop
xchg
ja
lret
cmp
sub
subl
mov
fnstcw
cwtl
gs
add
in
add
lock
mov
or
popl
out
in
out
ds
in
and
inc
loope
cmp
pop
adc
or
or
dec
inc
ret
xchg
pop
adc
subb
adc
and
sti
pop
jo
sub
jno
push
cmp
rcrl
jne
push
cmp
push
push
ja
in
bound
mov
rcrb
jbe
mov
add
and
insb
ficompl
fcmovnu
or
pushf
sbb
mov
xchg
rolb
or
cmp
ret
aad
sti
adc
xchg
paddusb
jp
cmp
mov
xchg
xchg
xchg
mov
pop
scas
repnz
adc
sahf
or
std
sbb
adc
orl
push
frstor
repz
pop
arpl
cli
stc
loope
sbb
jp
push
mov
xchg
clc
xchg
scas
mov
outsl
xchg
addr16
int
je
dec
popf
xor
outsl
xchg
inc
cli
leave
xlat
fnsave
xor
jecxz
xchg
scas
arpl
add
pop
mov
adc
enter
mov
ljmp
stos
adcb
mov
fisttps
lods
rclb
adc
insl
repz
push
ret
xorb
mov
out
push
ss
cmp
jge
jmp
xor
in
jno
bound
pop
sbb
push
test
inc
data16
scas
repnz
fcoms
pop
into
ret
subl
sub
mov
mov
lock
push
jo
mov
sbbl
mov
movsl
xor
aas
lcall
xor
sub
and
inc
mov
jg
lahf
xchg
loope
outsl
cwtl
rcl
sub
xor
sbb
cmc
loope
imul
mov
xor
loop
dec
mov
add
push
mov
into
jecxz,pt
out
jmp
lahf
ds
adc
add
or
and
aad
stos
data16
mov
mov
jg
fidivrs
mov
dec
loop
mov
test
cmp
sbb
les
inc
sub
push
rcr
sub
push
adcb
pop
cltd
cmp
xchg
jbe
fsub
add
jnp
pop
dec
fwait
mov
cmp
insb
xchg
adc
ljmp
mov
add
sbb
lock
mov
cmp
mov
std
cmpl
push
push
add
add
pusha
adc
jp
loopne
xor
cmp
pop
cmpsb
push
repnz
inc
jno
sub
sahf
inc
mov
push
test
push
mov
mov
repz
inc
outsl
pop
or
inc
test
popa
sahf
jge
xor
mov
mov
stc
mov
dec
xchg
sbb
aam
mov
arpl
imul
pop
ja
mov
push
rclb
nop
inc
xor
fucom
dec
clc
push
test
add
or
shl
lods
pop
mov
loope
add
xor
pop
add
lcall
repz
hlt
xor
imul
stc
xor
fsts
adc
add
stc
inc
xlat
ss
int3
filds
insl
inc
ror
clc
shl
das
adc
in
leave
pop
and
push
mov
stos
fidivs
or
ficomps
jb
jge
aam
push
sub
dec
cmp
in
pushf
jl
in
xchg
jle
and
mov
pop
mov
mov
mov
xor
bound
test
xor
lahf
mov
pop
nop
push
lods
out
sub
dec
xchg
push
mov
mov
sub
pop
cwtl
fwait
push
and
jp
call
jecxz
test
ret
xor
or
mov
cmp
dec
add
inc
in
push
or
or
insb
push
fsubs
mov
hlt
cmp
sti
fld
stc
ficompl
sub
popa
movsb
add
jge
mov
push
mov
push
lock
sbb
mov
and
clc
pop
cwtl
sub
cmp
dec
pop
hlt
sbb
cld
mov
mov
in
test
daa
add
add
push
dec
pop
andb
cmp
inc
clc
test
push
mov
mov
inc
loope
sbb
ficompl
push
mov
xor
sub
movsl
movsl
stc
or
or
ljmp
pop
in
and
orl
aad
jl
dec
adc
mov
fstps
ret
sub
test
clc
cmpsl
or
and
out
cltd
lret
lcall
or
mov
outsl
add
add
and
in
jl
scas
fisttpl
sti
adc
add
mov
or
mov
xor
pop
jl
bound
xor
sub
mov
clc
icebp
je
cs
stos
jns
mov
inc
and
out
mov
pop
loop
add
sub
xchg
shrb
fdivrl
push
out
ss
xor
js
pop
jp
adcl
cltd
ret
aam
fwait
dec
mov
cld
inc
into
sub
inc
bound
int
lcall
addr16
lea
popa
stc
fistl
addr16
lahf
mov
fistl
add
int
imul
sub
dec
inc
ret
in
or
xchg
in
xchg
and
cmp
inc
loope
inc
in
or
shll
cmpsb
xchg
fstpl
cmp
sbb
stos
xor
jmp
js
movsb
dec
inc
adc
icebp
stos
xchg
sub
cmp
sbb
ja
stos
xchg
ds
hlt
cltd
aas
clc
jge
and
pop
jle
mov
push
insb
fwait
jae
mov
fmul
sbb
sub
in
or
stos
in
rcrb
cmp
pop
jle
lods
rclb
mov
sbb
push
popa
mov
jg
insl
mov
pop
fcmovnb
jbe
xchg
imul
cli
xchg
pop
xchg
ja
ds
addr16
enter
xor
dec
jbe
loop
into
adc
stos
hlt
fdiv
das
add
cltd
push
orl
xchg
lds
push
and
andl
jl
icebp
rorl
push
out
and
adc
inc
adc
jb
dec
fdivrl
mov
or
das
sbb
inc
pusha
inc
shlb
jae
filds
add
das
aam
or
pushf
gs
cmpl
out
mov
imul
push
mov
push
repz
pop
sub
cwtl
jno
add
scas
mov
mov
int
inc
sub
xchg
cld
in
mov
sti
je
pop
hlt
inc
sub
jecxz
mov
int
in
into
mov
lea
cmp
pop
sbb
aas
fstpt
loopne
push
jl
cs
fistps
sbb
xor
loop
and
popa
push
sub
fldenv
mov
or
mov
and
sti
lret
jne
je
scas
xchg
test
adc
mov
cli
cld
mov
mov
popl
add
das
xor
fbld
mov
je
mov
mov
lahf
xor
out
in
pop
mov
idivb
popl
mov
mov
mov
cmp
test
outsb
add
push
aam
js
push
xchg
sub
mov
arpl
jl
je
lret
dec
inc
cmp
ds
mov
movsb
rclb
pop
adc
or
scas
popa
call
inc
xchg
jno
pop
std
pop
mov
cmc
adc
loopne
dec
push
aad
jge
cmp
cmp
in
push
enter
mov
cmpsl
into
cmp
outsb
insb
push
cmp
pop
cmp
sub
dec
xchg
pand
iret
mov
leave
in
stos
dec
cmp
jecxz
cmp
in
out
ja
std
jne
jne
lret
gs
lods
sbb
ja
popa
mov
lcall
inc
repz
in
in
push
push
ds
jne
pop
jp
mov
xor
je
sub
inc
jb
sub
xchg
cmp
or
and
cs
push
pop
fsubrp
pop
das
loopne
sbb
dec
fisubl
adc
iret
dec
lret
cli
ss
pop
pusha
push
rclb
sbb
mov
test
push
js
fucom
jne
xchg
add
data16
xchg
cs
dec
test
pop
data16
repz
je
cmp
push
call
icebp
outsb
sbb
xchg
and
adc
dec
outsl
int3
pusha
sbb
cli
sub
lcall
addl
mov
sub
int3
out
mov
leave
subb
xchg
ficoms
ja
movsl
mov
mov
cld
push
std
fcomi
mov
push
popa
lcall
dec
lret
in
mov
scas
and
sub
shl
push
dec
add
mov
lea
jnp
push
pop
in
mov
lods
pop
xchg
inc
addl
cmpsl
inc
callw
dec
sbb
sbb
add
cltd
subb
xchg
enter
mov
and
mov
xlat
dec
inc
bswap
inc
outsl
or
inc
bound
cltd
jecxz
insl
sub
out
into
sub
xchg
cmpsl
fsubrl
xchg
sbb
subl
xor
and
fs
mov
push
jl
cmp
jg
mov
cld
hlt
cmp
adc
lahf
mov
es
inc
xlat
icebp
xchg
not
imul
in
push
fisubs
cli
xor
in
jns
or
iret
sbb
cmp
daa
pusha
test
addr16
movsl
and
imul
cwtl
daa
iret
mov
sub
stos
pop
mov
adc
inc
sbb
popf
push
int3
popf
into
icebp
xor
xchg
mov
fiaddl
inc
das
pop
adc
cs
push
out
or
test
lahf
decl
add
sarb
xor
add
sti
xor
popf
out
xchg
pop
imul
add
int3
xor
adc
jmp
pop
mov
ret
iret
mov
outsl
xchg
imul
mov
push
popf
inc
cmp
movsl
pop
xor
test
jno
xorl
std
sbb
cmp
pop
push
ss
arpl
aad
fs
cmpsb
dec
repz
fadd
jp
lods
sti
mov
aaa
xchg
push
jno
nop
cli
mov
push
xor
pushf
fs
loop
inc
test
push
xor
cmc
fdivs
push
mov
in
or
xchg
iret
lds
adc
mov
mov
dec
mov
xchg
jns
cmp
xorb
fdivrs
jno
mov
push
fxch
test
lock
lea
mov
stos
and
inc
push
pop
mov
jno
pushf
and
mov
jle
sbb
or
pushl
nop
mov
jne
fcmovbe
xor
rorb
scas
fisubl
ret
cmpsb
scas
aas
outsl
out
adc
js
stos
mov
pop
mov
sarb
sub
mov
push
cmpsb
mov
xor
xchg
scas
mov
pop
xchg
das
fsts
add
lods
ja
inc
pop
fsubrs
adc
add
or
fisttps
ret
and
stc
data16
test
sub
dec
mov
in
mov
xor
cmp
xlat
push
mov
or
pop
jle
xchg
cmp
mov
mov
xchg
adc
mov
dec
inc
popa
addr16
push
push
dec
dec
aam
stos
xor
inc
sbb
inc
adcl
lahf
sub
sar
sbb
enter
jne
jmp
adc
xchg
rorb
test
and
push
scas
imul
dec
mov
dec
pop
push
call
das
test
lret
out
mov
inc
insl
add
pushf
mov
mov
movzbl
lcall
int3
pop
inc
test
or
inc
stos
xchg
cmp
ss
push
in
hlt
and
pop
test
mov
xchg
daa
mov
jo
push
add
xchg
mov
int
and
dec
dec
push
incb
mov
cld
lahf
jb
mov
push
fnstsw
push
dec
rorl
stc
out
lahf
mov
bound
jb
inc
fwait
pop
mov
jb
jnp
pusha
adc
dec
imul
adc
mov
in
int
cli
push
mov
imul
sub
iret
xor
das
sti
stos
div
popa
rcr
mov
fisttps
xchg
push
out
mov
frstor
xchg
push
jb
jmp
pop
and
mov
roll
mov
lret
xchg
pop
jmp
sar
mov
sub
push
xchg
lock
add
out
cli
add
fwait
and
xchg
xor
xlat
stos
cmc
xor
into
pop
pop
outsb
fisubs
sub
test
dec
xor
stc
push
and
int
inc
popf
xchg
test
cmp
push
insl
clc
jnp
lret
xor
outsl
gs
fs
push
mov
jecxz
jl
xor
fmuls
xlat
cmp
mov
imul
iret
jp
enter
inc
aam
add
inc
sub
jmp
std
jae
mov
stos
fadd
sub
in
and
ss
xor
pop
xchg
sti
les
fsubs
xor
pop
pop
addl
incb
adc
mov
loopne
mov
adc
notb
imul
jnp
push
fidivs
cmovl
adc
cmp
mov
and
pop
mov
xchg
mov
aad
test
cltd
mov
xor
push
adc
sti
jne
jp
push
outsb
xor
shlb
in
in
gs
inc
sbb
out
jbe
jns
repnz
fucomp
sub
in
cmp
iret
push
jge
out
push
add
mov
leave
sbb
push
addr16
cltd
xor
inc
xor
imul
mov
ret
dec
cmc
aas
mov
mov
adc
lods
push
dec
lea
sahf
daa
in
cmp
jae
mov
jg
mov
leave
jne
fs
stos
std
ret
insl
fnstenv
add
stos
dec
test
mov
test
repnz
jne
mov
adc
push
cmp
in
mov
iret
arpl
push
out
add
xor
fnstsw
sub
in
call
inc
or
cmc
inc
pop
adc
insb
cmp
daa
sahf
mov
xchg
push
cltd
fwait
arpl
rcr
xor
cmpsb
inc
hlt
sub
jns
data16
jle
adc
dec
jp
cmpsb
test
cli
fwait
orl
mov
daa
sbb
jne
stc
sbb
mov
push
sbb
jecxz
mov
dec
xorl
add
rcll
test
jb
mov
int
mov
ja
loopne
sub
sti
add
mov
push
loopne
cmp
leave
stos
lret
sub
mov
outsl
sbb
and
aas
movsb
fdecstp
xlat
bound
jg
pusha
pop
aam
push
adc
pushl
ds
cltd
jns
or
or
and
and
shll
lahf
pop
jnp
shrb
push
out
sbb
aad
inc
mov
out
insl
push
xchg
cmp
jbe
call
cmp
dec
mov
push
xchg
leave
scas
jge
imul
lret
push
jl
shll
mov
das
mov
push
dec
mov
mov
aas
pop
jmp
inc
test
adc
jne
loop
and
ss
dec
xor
dec
movsl
test
faddp
mov
jno
clc
xorl
push
imul
push
pop
call
lahf
mov
popa
fcompl
sbb
in
ficompl
test
jnp
jle
jno
cld
clc
fnstsw
cli
lret
sbb
fxch
push
add
push
test
pop
lods
push
mov
leave
or
stos
cs
insb
test
dec
inc
imul
sub
andl
pop
cmp
mov
mov
mov
notl
adc
pop
jbe
xor
xchg
icebp
inc
iret
std
fistpll
stc
mov
xchg
cmc
push
xchg
xor
aad
andb
mov
jp
enter
push
nop
cmp
push
xchg
jbe
xorb
mov
sbb
pop
nop
cmpsl
dec
test
xor
nop
jmp
xor
sbb
lds
fisubrs
and
jecxz
dec
push
jnp
dec
bndstx
mov
mov
scas
add
repz
mov
cmp
out
xlat
movsb
lods
cmp
hlt
lahf
nop
jno
and
idivb
pop
pop
cmp
arpl
sbb
lret
jmp
xchg
and
in
fs
stc
pop
stos
iret
rol
jo
sub
or
in
xchg
jne
mov
fiadds
add
aam
stos
inc
stos
out
cli
cmpsb
pushf
sti
mov
in
mov
xchg
jp
dec
xchg
fisubrs
pusha
clc
pusha
imul
sub
les
adc
jb
movsb
or
rcl
fwait
hlt
filds
icebp
mov
mov
fisubs
dec
mov
mov
fsubrl
outsl
and
cmp
jp
clc
xchg
push
jb
in
push
faddl
push
clc
mov
push
and
mull
loope
sbb
push
nop
gs
fistpll
ret
test
dec
or
mov
je
dec
jmp
daa
push
pusha
sbb
cmp
dec
add
stos
and
fsts
test
jp
sbb
mov
push
pop
data16
lret
enter
xor
fiadds
mov
sbb
mov
jl
sbb
fldt
in
xor
enter
jns
push
adc
negl
test
cmp
or
mov
add
sub
je
xchg
repz
cs
dec
cmp
inc
sub
das
ds
mov
sbb
fs
and
lcall
lea
int3
mov
jbe
aam
add
mul
fs
xchg
add
aas
and
imul
fs
jae
js
cmpl
dec
ds
jns
jmp
sbb
xchg
cmp
mov
dec
negb
or
shr
push
insb
cmpsb
lcall
xchg
jnp
test
mov
push
clc
insb
ret
mov
daa
in
aam
dec
adc
insl
rol
lret
jno
push
in
inc
xor
jno
push
lret
mov
pop
jnp
daa
loope
inc
test
lds
mov
pop
je
push
fsubrl
out
addl
testb
sbb
cs
sbb
xchg
adc
fstl
inc
rclb
mov
xchg
sub
popa
imul
in
add
xchg
mov
orb
pushf
dec
xchg
mov
cmp
out
xchg
dec
push
out
addr16
pusha
mov
aaa
idiv
jbe
adc
icebp
jmp
pushf
add
ljmp
jge
ds
mov
xor
int
rolb
cmp
roll
mov
xlat
negl
mov
dec
fstl
lods
addb
fcoms
fldt
jl
sbb
popf
rcll
mov
add
dec
test
fwait
cmpsl
xor
lret
aam
fwait
cmp
or
lret
outsb
cmp
negb
or
pop
cltd
std
sbb
push
fcmovnbe
push
pusha
rcrb
jo
sub
jl
sbb
cltd
and
out
push
out
and
out
cmp
push
cli
int3
dec
push
cltd
pop
push
add
mov
mov
fsub
sbb
sub
push
dec
andb
xchg
mov
test
or
movsb
mov
cmp
pop
inc
and
jb
xchg
and
imul
ret
ss
cmc
lods
popf
pop
inc
int3
pop
xchg
xor
test
push
dec
in
fdivs
jo
ja
lret
cmpb
adcl
repz
outsl
jmp
or
xchg
loopne
insl
sbb
repz
stos
mov
je
insb
xchg
loope
or
bound
add
mov
or
aas
insb
notb
cld
push
arpl
stc
and
inc
add
cmp
xor
aam
imulb
push
mov
dec
cmp
aas
cmc
mov
push
pop
fcoms
push
ljmp
in
inc
int3
cld
sbb
push
mul
lock
dec
inc
aas
xchg
imul
sbb
cmp
imul
and
icebp
jmp
and
lea
imul
xor
xchg
rorb
fidivs
adc
and
adc
and
push
imul
push
jecxz
fbstp
adc
and
sbb
test
mov
cmp
in
jne
jge
cmc
outsb
xor
aaa
jno
fidivl
in
and
pop
scas
pop
repnz
sub
les
xchg
xchg
sbb
mov
sbb
mov
mov
into
pop
mov
dec
mov
inc
lock
pop
lcall
fldpi
loope
or
subb
flds
mov
jg
dec
xor
pop
xor
jp
outsl
test
cmp
call
push
push
les
cmp
or
push
xchg
pop
aam
cmp
int3
insl
outsl
in
mov
sbb
inc
push
testl
jge
addr16
loopne
dec
js
jg
int3
in
xchg
mov
lds
notb
jne
xchg
mov
stc
mov
ret
or
js
inc
cmpsb
pop
push
in
test
mov
push
pop
stos
fisubrs
mov
push
mov
cmp
lret
mov
in
cmp
dec
sbb
adc
sub
cmp
jnp
imul
sub
dec
pop
enter
iret
jecxz
xchg
mov
adc
add
mov
adc
lods
mov
jo
add
mov
jb
add
or
xchg
loope
outsb
xchg
outsl
imul
lods
sub
sub
push
fwait
rcrb
fcoml
nop
mov
iret
or
subl
adc
xchg
pop
add
enter
inc
jecxz
cmpb
cmc
or
fistps
push
jmp
cmp
arpl
into
adc
jmp
in
mov
pop
loop
and
je
push
cmpb
lods
subb
pop
inc
inc
or
xchg
enter
imul
adc
jne
adc
testb
xchg
dec
cmp
sahf
bound
into
add
pop
pop
push
cs
repnz
pusha
xchg
mov
lea
clc
xchg
test
sub
jmp
mov
pop
adc
mov
sti
mov
ja
jne
cmpsl
jb
loope
into
shlb
push
pusha
or
mov
add
imul
movsb
mov
xchg
lds
pop
rcrl
mov
sbb
inc
popf
jmp
xchg
loope
popl
hlt
lods
pop
xchg
loope
xor
and
dec
push
xchg
imul
pop
jo
sbb
mov
rorb
dec
cwtl
sbb
mov
jl
xchg
xchg
cmpb
pop
sbb
xchg
sbb
xor
ret
dec
fcompl
shlb
mov
xor
aaa
sub
xor
les
pop
sbb
lret
adc
and
dec
mov
pop
mov
mov
cs
sbb
rcrl
mov
push
push
test
pusha
ds
fstp
cwtl
cmpsl
movsb
xor
shll
lods
push
dec
xchg
xchg
dec
addr16
xchg
or
and
and
and
push
loopne
lcall
out
pop
fcoml
mov
call
insl
pop
sub
iret
dec
bsf
add
fnstsw
cmp
and
lock
loope
mov
data16
mov
mov
mov
add
movsl
scas
fimuls
dec
cmc
or
sub
sarb
xor
sbb
jmp
fidivrl
out
inc
sar
das
add
mov
adc
shrb
jae
adc
scas
ja
dec
int3
push
push
out
test
leave
pop
or
js
roll
or
push
add
ror
dec
cmp
ljmp
faddp
pop
ss
push
ret
daa
lcall
inc
sbb
sbb
mov
inc
nop
sahf
jle
push
js
cld
inc
add
testl
js
adcl
cmp
push
popa
ret
rcrb
ret
scas
mov
lds
dec
mov
sbb
outsb
mov
cmpsl
fmull
in
sbb
xchg
jb
scas
lods
sub
enter
daa
jle
cmc
jl
push
add
insl
scas
test
push
or
push
mov
stos
or
clc
cmp
mov
push
xchg
adc
adc
leave
xchg
add
pop
or
call
sarl
mov
loopne
shll
fidivl
adc
sbb
add
imul
xor
sbbl
inc
sbbb
pop
ja
push
pop
fs
xchg
mov
inc
xor
push
ret
repnz
push
dec
mov
xchg
xchg
inc
mov
dec
loopne
adc
adc
lret
loop
mov
es
repz
aad
pop
fs
test
pop
pusha
sarb
jmp
outsl
call
mov
ljmp
ss
and
inc
iret
imul
cmp
cs
int3
mov
or
xor
or
enter
iret
ss
daa
outsl
lcall
iret
addl
inc
stos
scas
ret
push
inc
mov
mov
sbb
cwtl
sti
arpl
les
pop
and
pop
push
xchg
and
pop
push
mov
pop
adc
rcrb
or
ficoms
adc
jg
ss
outsl
ss
xor
popf
and
insb
cmpl
enter
aas
adc
aad
and
aaa
int3
dec
loop
scas
mov
pop
scas
aaa
mov
sub
inc
push
aas
sbb
xor
test
stos
clc
push
jne
loop
std
aad
xchg
out
push
xchg
aas
push
shlb
stos
in
cld
xor
iret
jns
add
sti
cmp
jle
mov
adc
sub
sbb
cwtl
outsb
xor
mov
sar
push
xor
scas
inc
inc
cltd
insl
mul
test
bound
aad
jno
adc
mov
sub
cmp
adc
jecxz
mov
cmpsl
and
push
inc
add
imul
push
aaa
dec
xchg
out
and
mov
mov
pusha
cmp
xor
lea
int3
sbb
xor
cltd
cmp
xchg
jmp
mov
loope
push
out
inc
mov
dec
adc
xacquire
mov
mov
add
notl
xchg
mov
es
cmpsl
out
xchg
pop
pop
pop
loopne
nop
stc
pop
test
out
lock
in
int
movl
nop
lods
dec
sbb
cwtl
xchg
xchg
adcb
repnz
add
mov
xchg
push
pusha
jle
push
or
stos
hlt
jle
ljmp
mov
mov
add
push
mov
mov
cmp
xchg
scas
fs
xchg
add
sbb
test
xor
sub
lods
xchg
mov
and
and
sub
push
mov
dec
mov
dec
pusha
mov
pop
jae
ret
test
das
cli
pusha
ds
ljmp
andl
sar
into
inc
and
jns
sbb
add
dec
mov
xchg
int3
cmpsb
cmp
shrb
shl
hlt
mov
pop
xor
lahf
test
pop
cltd
test
sbb
add
inc
lods
push
push
jl
stos
pop
jo
mov
loope
sub
in
or
mov
add
js
xchg
loope
ss
jg
adc
mov
push
cwtl
dec
ret
sti
lods
sti
jbe
push
pop
push
ljmp
sub
pop
insl
jns
inc
fistpll
insl
cmc
inc
dec
xlat
dec
mov
pop
cmpsw
ljmp
push
out
vmwrite
add
pop
xor
loop
loopne
scas
mov
aad
mov
jge
lret
in
test
mov
add
ljmp
mov
xor
lock
div
xchg
or
sbb
pop
adc
fsubs
into
insb
les
adc
dec
inc
mov
xor
pop
xchg
mov
adc
fcomps
xchg
sub
fidivrs
xchg
pop
mov
and
jnp
jl
xchg
lahf
mov
xor
leave
daa
iret
mov
loop
loop
or
lock
cmp
subb
and
cmp
mov
xchg
fnsave
sub
iret
inc
in
jmp
test
sbbl
gs
enter
push
xor
cmp
or
cs
dec
nop
xchg
inc
cli
outsb
daa
adc
push
popf
mov
cmp
mov
mov
mov
ljmp
cmp
imul
inc
inc
shrl
push
mov
repnz
ss
or
sub
icebp
xor
xor
cmp
popf
pop
xchg
ja
cwtl
fwait
orl
inc
scas
addl
movsl
cmpb
xchg
mov
out
and
mov
jb
test
in
inc
xor
movhps
mov
mov
call
pop
popf
outsb
mov
mov
jns
push
cmc
or
aaa
out
popf
in
movsl
testb
movsb
test
lea
xchg
xchg
out
daa
add
cmp
xchg
sbb
inc
xorb
stos
stc
shrl
mov
std
aad
jbe
add
add
push
add
inc
test
push
inc
push
mov
pop
jge
fstl
lahf
hlt
clc
es
int3
and
cs
clc
dec
mov
in
inc
clc
test
push
leave
pop
pop
mov
repnz
and
insl
sbb
mov
cmp
push
loop
insb
aaa
inc
cmpb
and
add
fwait
mov
mov
fisubrs
outsl
and
xor
nop
rorb
cltd
or
jge
dec
and
sbb
sub
inc
out
xlat
xor
push
sti
sbb
sbb
push
popa
stos
sbb
dec
add
dec
cwtl
je
xchg
imul
fwait
ljmp
pushf
mov
or
test
and
clc
jl
shrl
int
inc
or
lock
push
dec
aam
je
fwait
adc
cs
mov
rcrl
jae
lcall
addr16
inc
mov
aaa
mov
rcrb
gs
dec
std
jb
jns
cmp
cltd
pop
ss
movsb
inc
leave
mov
bound
out
out
mov
or
jno
fs
mov
insl
mov
adc
aam
shll
fwait
insl
pop
sahf
icebp
cmc
out
pusha
dec
sbb
inc
hlt
jo
bnd
into
in
enter
inc
mov
lock
scas
dec
jmp
into
mov
xchg
inc
js
xor
cmp
mov
xchg
dec
aad
iret
imul
xchg
daa
pop
cwtl
sarb
imul
and
add
push
pop
bound
mov
mov
push
xchg
inc
inc
pop
sbb
mov
test
lock
or
or
insb
es
xchg
jo
int
inc
xchg
and
or
iret
int3
test
or
or
stos
mov
inc
mov
xor
adc
ffreep
pop
lock
fwait
aad
jg
std
xchg
cmp
push
hlt
int
je
into
mov
cmc
clc
xchg
cmpsb
je
test
xlat
add
into
fs
cmp
repz
mov
xchg
in
mov
in
lds
imulb
xabort
adc
leave
nop
dec
stos
test
push
leave
faddl
hlt
pop
inc
inc
xchg
and
loop
xchg
out
pop
aaa
add
xrelease
push
dec
dec
insl
xchg
outsl
aam
xor
xor
xor
sbb
stos
imulb
dec
dec
xchg
cld
xchg
sub
mov
pop
movsl
arpl
mov
pop
xor
insb
in
adc
mov
loope
lahf
inc
dec
ljmp
cld
insl
arpl
sub
jmp
or
pop
dec
cs
mov
fs
sbb
xchg
in
dec
sti
dec
xlat
cmpsl
jnp
cmpsl
dec
out
aaa
dec
push
or
leave
fisttpl
jecxz
in
push
loopne
daa
sbb
cmpsl
and
fwait
stos
cmp
cltd
mov
jae
lcall
dec
js
cmpb
pop
loop
push
mov
mov
lds
inc
std
mov
das
inc
pop
pop
ficompl
aam
xchg
sbb
jle
jmp
insb
movsl
add
push
ss
divl
pop
ds
rcr
mov
sub
mov
inc
lret
adc
enter
and
sbb
push
sbb
mov
scas
inc
mov
add
stos
add
cpuid
iret
inc
dec
stos
mov
sbb
dec
inc
ljmp
cmpsb
push
mov
mov
mov
sbb
pop
icebp
dec
mov
jge
dec
push
hlt
adc
xor
out
pop
mov
aaa
and
ficoms
lock
sbb
insl
shlb
popf
add
sub
loopne
xchg
dec
out
sar
or
out
xchg
insl
lret
cld
popf
imul
js
xchg
xchg
out
or
cmp
mov
adc
and
dec
sub
loopne
cmp
pop
iret
sub
rorb
ss
mov
pop
enter
fstl
mov
mov
mov
xor
inc
ja
mov
jmp
dec
int3
sbb
roll
adc
cmc
clc
nop
fs
adc
lcall
adc
sub
out
pop
hlt
dec
jae
stc
cmp
hlt
adc
fdivr
out
popa
mov
in
lcall
rclb
icebp
sub
xchg
test
add
adc
mov
test
outsb
and
sbb
les
add
xchg
aas
outsl
cmp
mov
mov
xor
jnp
dec
inc
punpckhbw
dec
into
into
add
stc
adc
mov
push
add
fimull
dec
std
pop
aam
ljmp
and
mov
test
dec
cli
push
xlat
fadd
and
stos
pop
xchg
mov
mov
push
add
push
je
pop
std
rcl
cmpsl
dec
fcmovnu
scas
insb
mov
pusha
xchg
sti
sub
sbb
jne
xchg
andb
ret
inc
jg
cs
das
xor
mov
lods
test
cmpsl
lahf
lock
cmp
jp
pop
cmpsl
push
jmp
test
jge
lcall
es
shll
leave
movb
daa
xorl
dec
iret
stos
adc
popa
jb
loopne
dec
push
rol
inc
mov
mov
adc
sbb
cmp
ret
ja
xchg
xchg
jne
sub
cmpsl
pusha
add
movsb
pushf
xor
xor
cld
arpl
enter
gs
inc
lea
dec
jg
out
jecxz
aad
out
jb
iret
daa
pop
sbb
js
xchg
jge
push
jnp
fidivrs
outsb
aam
fbstp
jne
decl
push
xchg
sbb
pop
bound
imul
inc
movsl
inc
and
test
jae
sbb
movsb
jne
insb
sahf
aas
arpl
neg
jb
jl
push
mov
lahf
mov
mov
cwtl
rcrl
mov
es
sbb
push
inc
mov
cltd
adc
popf
mov
xlat
lods
sbb
pop
mov
lock
jbe
shr
inc
and
aaa
dec
dec
mov
idivb
mov
jo
sub
and
scas
cwtl
stos
cmc
or
dec
jo
popf
loop
jo
mov
fs
ficoms
mov
rol
sbb
cmpsl
test
aam
in
or
mov
idivl
in
lahf
mov
jge
icebp
inc
jno
hlt
jg
cmpsb
cmp
outsb
hlt
sbb
mov
or
sbb
popa
mov
rcll
push
inc
xchg
push
test
je
pop
xchg
push
repnz
daa
jmp
fiadds
xchg
pop
lock
aad
movsl
xchg
xor
mov
out
xchg
fs
push
xor
sub
mov
aad
mov
je
xchg
out
push
xor
jns
cmp
test
int3
push
out
cmpsl
icebp
dec
mov
pop
pop
mov
adc
add
lcall
loopne
js
out
push
jne
sub
sub
ret
jno
xor
jmp
sahf
jge
lds
mov
cli
sub
cs
xor
jo
cmpsb
lea
cmp
sbbb
popa
fdivrl
pusha
mov
sub
mov
add
lods
cld
jae
sti
mov
sbb
mov
out
push
xor
pop
mov
icebp
fildll
sahf
js
rolb
das
repnz
stc
mov
add
jno
mov
add
roll
fcomps
outsb
loope
mov
pushl
and
mov
adcb
mov
cltd
xchg
push
arpl
loope
clc
sub
mov
enter
aam
test
sub
movsl
sbb
xchg
shlb
fsubrs
sti
imul
stos
lods
jmp
jp
hlt
mov
mov
loopne
arpl
cmp
inc
xor
int3
orl
jge
add
loope
mov
stos
xchg
xor
sbb
mov
add
cmp
inc
aas
mull
sub
repz
out
lods
or
pop
jp
mov
sarb
pop
sub
idiv
fisttps
dec
pop
test
pop
in
xchg
imul
jp
pop
scas
dec
es
or
pop
pop
fstps
ror
xchg
jnp
sub
add
lods
or
lock
mov
or
fwait
cmp
mov
cmpb
and
in
add
mov
cli
dec
je
loop
test
xor
mov
jecxz
mov
fwait
add
ja
jb
aas
cmc
mov
lret
insb
adc
test
cmpsb
pushw
adc
xchg
push
js
cmp
mov
sbb
and
mul
sub
mov
imul
inc
or
neg
repnz
mov
ja
fcmove
lds
dec
scas
sbb
mov
mov
push
inc
xor
xchg
pop
mov
sub
cltd
pop
cld
lret
fildl
push
je
aam
ljmp
in
push
and
pop
add
outsl
xchg
loopne
movsb
lods
mov
adc
cmp
aad
rcr
clc
sahf
in
sbb
jb
dec
scas
jmp
mov
xchg
addr16
cld
adc
filds
loope
ja
sbb
aas
outsb
xchg
lds
cs
idiv
adc
insl
or
xor
jmp
int
or
xor
sub
cmp
ja
push
js
cmp
test
dec
jb
jno
or
sbb
sub
rcr
or
push
and
mov
xor
lds
inc
cs
pop
fs
icebp
mov
sbb
dec
pop
adc
mov
daa
negl
push
lcall
push
push
jp
das
push
enter
lods
jns
jae
add
test
inc
fsubl
inc
mov
jne
mov
and
or
adc
dec
adc
loop
ret
testb
adc
lcall
stos
fstpl
xchg
ret
in
xchg
fildl
lds
into
testl
sub
sub
stc
stc
shlb
pop
push
sub
test
cli
dec
mov
leave
and
push
lods
mov
hlt
sti
lock
mov
and
sub
sbb
lahf
add
aam
mov
sub
arpl
subl
adc
add
lcall
jns
adc
push
dec
pop
jbe
pop
scas
idivb
pop
clc
sub
cmp
testl
pop
jo
dec
inc
mov
out
jmp
lcall
xor
dec
out
jbe
cmpsl
mov
and
mov
in
fs
fmull
or
jne
sbb
xchg
mov
add
fbld
sbb
mov
xorb
dec
push
fisttpll
ja
popf
pop
dec
sbb
pop
gs
jp
fnstcw
cwtl
dec
dec
inc
xchg
cmp
sub
xor
ret
cmpsb
hlt
testb
loop
pop
fldz
or
xchg
xchg
jbe
scas
movl
rorb
rcll
ljmp
mov
jge
xor
es
iret
test
mov
shll
mov
xlat
lods
inc
cwtl
xor
clc
std
inc
adc
jae
test
inc
adc
rorb
gs
sbb
xor
nop
inc
push
cmp
andb
mov
mov
daa
mov
cld
add
mov
add
dec
fdivrs
cli
nop
and
xor
fs
and
pop
je
cmp
xor
test
lds
stos
movsb
sub
stos
ja
push
cmp
jmp
xchg
cld
and
cli
sub
push
cwtl
xchg
xchg
or
dec
sbb
or
push
nop
xor
jp
adc
pop
lahf
test
sbb
mov
mov
and
fcmovnb
imull
lret
ja
xor
sbb
lods
iret
popf
test
popf
pop
iret
jge
inc
gs
jge
and
xchg
in
lock
push
and
dec
xchg
lock
push
mov
lods
inc
call
push
or
pop
inc
push
push
loopne
sub
popf
pushf
arpl
xorl
pop
and
inc
sbb
in
jge
xlat
cmpb
in
pushfw
int3
stc
pop
push
adc
ljmp
mov
xchg
rcrl
fimull
fidivrs
enter
push
pushf
daa
movl
test
adc
mov
mov
call
dec
add
fisubrs
adc
xor
or
sub
sub
dec
stos
xchg
sub
iret
fcoml
aas
decl
cmp
xor
push
xchg
sahf
xchg
jmp
daa
mov
movsl
fwait
scas
xor
jb
and
push
add
push
loop
mov
push
popf
jle
sti
out
xor
sbb
jecxz
rclb
xor
mov
inc
jmp
pop
les
xchg
ftst
icebp
pop
xorb
sbb
xchg
adc
xchg
mov
js
out
rcrl
lock
mov
dec
inc
fsts
and
loop
sahf
pop
xchg
inc
jne
out
inc
mov
in
in
shlb
dec
jbe
sub
mov
xor
sub
xor
dec
jp
loop
outsb
sbb
addr16
mov
xor
pop
and
sti
shrb
xor
cmpsl
ja
nop
in
pop
idivl
aad
jl
mov
cli
jno
inc
in
dec
inc
outsb
dec
dec
sub
js
out
test
mov
frstor
or
lret
out
xor
sbb
daa
and
jno
cwtl
fwait
add
out
push
repz
jle
jle
push
add
jecxz
es
insl
cld
lock
xchg
or
and
lahf
in
rclb
mov
fsubrl
mov
cmp
mov
adc
dec
jbe
std
sub
loopne
ret
lahf
push
or
and
xorb
jo
push
and
movl
je
mov
add
xchg
mov
ljmp
or
imulb
lahf
xchg
cmp
add
dec
nop
adc
xor
pop
push
or
cmp
mov
stos
mov
sub
push
ficoms
push
std
pop
xchg
adc
hlt
push
mov
outsb
icebp
add
add
out
jp
repz
mov
rorb
clc
jb
lahf
leave
dec
lret
into
mov
arpl
lahf
or
orb
testb
sub
inc
push
pop
cmpsl
dec
shr
fistpll
movsb
enter
stos
pusha
or
pop
mov
mov
lahf
mov
aaa
lods
xchg
scas
or
dec
jecxz
jle
pushf
fstl
cmp
and
push
push
mov
pop
and
sete
push
loop
or
cli
adc
dec
mov
pop
call
dec
mov
push
cmpsb
fcomip
and
jl
push
fnstsw
push
push
test
add
movsb
xor
sahf
test
push
shl
adc
lret
insl
push
lahf
jb
pop
adc
push
and
hlt
daa
icebp
repz
xlat
sub
aam
movsl
ret
das
xlat
mov
pop
mov
cmp
push
test
sarl
lret
test
test
outsb
fisttpl
jge
adc
dec
repnz
movsl
or
xchg
cmp
sbb
cmp
fdiv
cmp
fdivrp
lcall
faddl
iret
fnstsw
adc
mov
jne
pop
push
adc
outsl
mov
insl
dec
add
lcall
sub
jbe
lock
insb
push
std
sub
in
hlt
out
lahf
cmp
fwait
lods
or
pop
in
mov
sarb
inc
fwait
dec
ja
cmp
lcall
repz
call
adc
and
into
sahf
mov
mov
push
scas
cmp
int3
push
ljmp
outsl
ret
imul
mov
je
or
sub
arpl
jnp
test
notl
pop
pop
cs
lcall
dec
pop
inc
ficoms
jae
adc
and
dec
jmp
mov
sub
test
or
cld
xor
test
fldl
stos
test
dec
lock
arpl
xor
mov
adc
xor
mov
ret
inc
add
cmp
mov
mov
and
push
movsl
ret
pop
push
scas
gs
xchg
and
push
xchg
stos
xchg
fs
jg
cmp
je
pop
test
fadd
adc
mov
pop
xchg
loop
scas
inc
pop
and
cmp
push
dec
mov
sub
inc
jmp
addb
xlat
gs
imul
aam
xor
xchg
ret
js
adc
xor
cmc
inc
inc
jecxz
or
inc
mov
jns
das
xchg
enter
push
inc
dec
cmpsb
push
jns
adc
mov
in
fists
out
pop
test
sbb
inc
inc
addr16
in
lahf
jbe
push
and
lcall
mov
mov
mov
addr16
iret
dec
or
rorb
cmp
cmp
and
leave
xchg
sub
xchg
stc
sar
sbb
jmp
dec
popf
aaa
mov
dec
cwtl
sub
inc
icebp
xor
pop
movzwl
or
mov
jle
imul
jp
js
inc
mov
push
inc
aas
pop
int
sbb
push
mov
movsl
push
out
or
je
bound
scas
xchg
xchg
lret
xor
and
push
enter
test
sub
mov
or
je
xchg
in
xor
sbb
and
or
scas
xchg
sub
xor
xchg
in
push
psraw
push
cmp
fdivs
add
mov
dec
sti
adc
jbe
iret
cmovl
scas
int
push
and
scas
push
pop
mov
ret
loope
xchg
lea
outsl
cmc
cmp
imul
mov
push
pop
jg
outsb
or
cmp
inc
imul
sbb
jp
mov
dec
iret
pop
movd
mov
mov
cmp
mov
add
jmp
pusha
leave
mov
pusha
in
sbb
sbb
stos
xchg
xchg
xor
out
lods
add
ss
imul
fcomip
sbbl
lods
push
pop
outsb
sti
xchg
loope
mul
xchg
pop
das
repz
push
push
into
lret
stos
loopne
pop
xor
mov
push
loop
test
pop
push
push
sbb
aad
in
sbb
cmc
int3
push
mov
mov
mov
mov
xchg
cmp
fmul
lahf
pushf
lock
lahf
push
jl
fdivrl
mov
xchg
pop
addr16
movsl
and
sti
inc
dec
cmp
push
cmpsb
and
test
xchg
xchg
stc
testb
mov
mov
insl
dec
in
aad
xlat
faddl
mov
xchg
mov
add
inc
sahf
add
popf
scas
fmuls
push
and
bound
fsubs
sub
cmp
int
sub
popf
sub
pop
lds
jno
test
and
cmp
repz
mov
push
fcoms
cmc
push
in
aas
stos
fisubrs
push
jg
cmp
and
dec
dec
push
pop
jns
jecxz
icebp
xchg
ss
mov
mov
jp
jp
jecxz
mov
jbe
xchg
inc
jge
pop
insb
fbstp
push
fstpt
adc
mov
pop
jb
out
jl
sub
arpl
dec
ret
fwait
jns
push
imull
sbb
jmp
jecxz
inc
sub
das
xor
imul
fisttpl
sub
shrb
inc
pusha
cli
in
fcoms
inc
enter
shr
xchg
loopne
and
popf
inc
mov
lock
mov
xor
out
shll
cltd
push
pop
sbb
pop
inc
stos
fnsave
push
jne
loop
xchg
jne
orl
shll
out
jae
cmp
shll
mov
cmpsb
dec
inc
test
and
xchg
sub
insl
dec
fstpl
mov
mov
dec
mov
mov
loopne
mov
sbb
jg
jmp
inc
pop
dec
adc
cli
adc
testl
int3
cwtl
add
mov
and
cmpsb
scas
lods
aas
orb
mov
dec
or
xchg
xor
cmp
mov
jae
test
adc
dec
out
pop
mov
outsb
stos
adc
pop
add
jecxz
nop
cmpsb
mov
mov
mov
mov
mov
fs
cli
pop
das
cmp
inc
lods
jle
mov
sbb
test
and
sbb
mull
rol
in
mov
inc
dec
and
lea
xchg
xchg
xlat
dec
xchg
fwait
jle
jmp
movsb
fisttps
push
dec
or
out
iret
subl
test
shll
xchg
cmp
lcall
shl
clc
ds
mov
std
ljmp
mov
scas
out
movsl
xchg
or
mov
out
push
aam
fbld
sti
cmpb
push
jmp
sub
loopne
orl
sbb
pop
popf
dec
imul
fdivs
jp
fidivs
push
lret
mov
push
mov
mov
cltd
sbb
out
call
dec
cmp
je
fs
fmuls
mov
popf
movsl
lcall
mov
mov
mov
pop
xchg
movsb
lods
xchg
pop
mov
mov
mov
inc
clc
clc
pop
xor
test
jnp
push
enter
push
inc
inc
and
pusha
js
sbb
call
fsubr
lahf
rclb
add
enter
cmp
lret
mov
dec
and
or
ficomps
andl
sub
nop
rorb
push
sub
out
loop
mov
pushf
out
insl
xchg
repz
lahf
sti
adc
outsl
arpl
push
dec
icebp
lods
loope
adc
jns
pop
test
fldl
jbe
sarl
mov
in
addb
stc
pop
cltd
xor
xchg
cwtl
jl
sub
and
sbb
adc
popf
xor
push
pop
dec
pop
in
bound
mov
and
or
mov
ljmp
sbb
jae
dec
imul
sbb
and
xchg
adc
xor
and
sub
cmp
ret
add
loopne
mov
mov
mov
push
push
dec
dec
call
jb
pushf
movsl
xchg
mov
push
rclb
xchg
cmp
outsb
xchg
test
iret
in
mov
pop
inc
cmp
jl
mov
mov
cmpsb
lahf
lods
inc
arpl
shl
sub
mov
push
lret
addr16
jg
ret
sahf
sub
shl
and
rcrl
loopne
mov
mov
jge
dec
shlb
aam
ret
cli
xorl
sahf
push
jns
ret
mov
xchg
and
xor
inc
xchg
lea
inc
scas
pop
daa
into
icebp
push
in
push
jecxz
mov
push
cmp
popf
test
jnp
rcll
inc
lahf
dec
cld
jbe
addps
rep
cmc
mov
push
mov
test
pusha
int3
fnstenv
cmpsl
sub
sub
daa
enter
lds
or
jbe
fists
dec
movsl
out
pop
cmp
jae
lea
sbb
imul
js
icebp
addr16
fdivl
xor
in
fs
lea
cmp
inc
cmp
fadds
sub
out
and
dec
shrb
popaw
xor
push
in
enter
xchg
int
xor
std
xchg
and
pop
fs
xchg
mov
imul
adc
mov
mov
cmp
cmp
mov
cmp
push
push
imul
mov
mov
sub
push
leave
xchg
fcomps
rclb
add
loopne
pop
mov
jl
push
xchg
xchg
rorl
inc
jns
test
inc
mov
in
into
shll
cmp
dec
push
xchg
mov
and
iret
push
mov
push
or
sarl
or
je
dec
je
aad
bound
insl
xchg
sub
mov
in
shl
inc
mov
gs
dec
xchg
lds
out
and
and
loope
mov
xor
lret
sbb
daa
loopne
bound
arpl
xchg
mov
ja
adc
nop
aam
ljmp
inc
and
pop
dec
fwait
mov
mov
in
in
mov
popf
in
add
push
jbe
clc
shr
icebp
cmp
xchg
lods
ret
aaa
das
sbb
sbb
loop
es
testb
movsb
jp
push
jo
in
adc
adc
sbbl
call
inc
outsl
stos
xchg
pop
jl
mov
push
std
in
in
lcall
push
arpl
jae
enter
mov
add
test
pop
enter
mov
adc
fcmovb
xor
cmp
dec
stc
lds
hlt
scas
aas
xor
test
int3
lea
in
outsb
rcll
jl
sbb
das
sbb
push
or
jg
pcmpgtb
dec
ljmp
or
mov
mov
inc
shrb
repz
daa
cld
mov
aaa
js
add
in
rorb
jp
pop
or
dec
xchg
data16
cli
sbb
popf
notl
int
gs
fwait
pop
jo
push
ret
pusha
inc
rolb
aas
rorl
or
mov
shrb
add
xor
ret
mov
mov
jae
filds
ja
hlt
pop
clc
fs
xor
movsl
in
fmulp
scas
xor
pop
dec
adc
sub
inc
addb
mov
push
aad
pop
jl
jae
loopne
sahf
cmp
sarb
adc
test
pop
inc
fadd
cmp
movsb
hlt
xchg
inc
mov
push
cmc
mov
ljmp
mov
repz
sti
pop
test
pop
mov
in
enter
cltd
mov
test
xchg
add
cli
adc
mov
xchg
or
pop
insb
xor
outsl
sbb
pop
mov
sbb
xchg
xchg
sbb
mov
jno
add
inc
aad
jne
mov
mov
arpl
cmp
int
test
cmp
adc
mov
pop
sarb
cmpsl
mov
mov
add
fnstsw
es
loopne
inc
cli
and
add
lods
cmp
arpl
and
xor
cmpsb
xlat
je
faddl
mov
xchg
aad
ret
ret
cmp
int
aaa
int
repz
fwait
nop
push
outsb
fidivrs
into
les
loop
lods
inc
jne
pop
scas
ss
sub
mov
stc
mov
mov
ret
xchg
lods
fsubr
stos
nop
jo
popa
inc
cmpsb
outsl
add
mov
fcoms
or
or
leave
scas
mov
push
stos
int
aas
daa
std
cltd
shll
enter
push
cmc
cmpsl
out
jb
xchg
jbe
scas
loop
xchg
add
mov
inc
loopne
testb
pop
jg
ss
stos
sub
leave
push
sarl
xlat
adc
sub
movsl
enter
xchg
xor
mov
dec
out
jo
lahf
cs
decb
push
ja
test
jp
flds
xchg
cmp
pop
cli
or
jmp
inc
cmp
jle
aaa
mov
jg
push
pushf
ds
adc
inc
repz
in
mov
call
pop
xchg
out
roll
xor
sub
jecxz
insl
xor
ret
mov
es
mov
bound
stos
loopne
sub
aaa
testl
ds
xchg
sbb
sbb
mov
push
into
gs
xor
mov
dec
ds
lahf
and
rorb
pop
or
outsl
pusha
mov
popa
or
ds
addr16
in
sbb
aas
es
ljmp
pop
scas
cmp
jmp
push
sbb
xchg
adc
ret
pop
mov
mov
out
lcall
cmp
cmp
mov
ds
sbb
shrb
dec
negl
aaa
aas
outsl
rorb
test
rcr
push
pop
fcom
bound
test
sbb
addb
cmp
js
jle
das
int
loop
dec
div
xor
sbb
std
xor
and
fdivr
outsl
in
not
test
movsl
adc
dec
insb
insl
lret
stc
jbe
jmp
shl
test
ret
mov
test
xchg
rol
push
repnz
iret
imul
movsl
mov
xor
xchg
jns
xchg
sub
jo
sub
lret
pop
mull
mov
outsl
mov
sub
ds
push
xor
sub
mov
adc
loop
dec
scas
pop
jl
dec
divb
mov
push
mov
xchg
xchg
mov
push
cmpsb
int
sbb
lods
pop
imulb
dec
sub
aaa
sti
xor
sub
sbb
or
adc
or
es
add
xor
push
xchg
and
push
scas
xlat
ljmp
lods
push
sub
push
movsl
sar
jb
and
add
roll
jnp
test
in
sbbb
jmp
mov
inc
jge
jnp
inc
dec
ja
divb
mov
cld
fincstp
jne
mov
or
jo,pn
jge
xchg
fsubl
ret
xchg
mov
je
movsb
aad
dec
shrl
das
push
push
jne
sbb
or
test
xchg
and
pushf
and
or
mov
mov
xor
xchg
outsb
cld
pop
jnp
cwtl
mov
mov
cli
sub
pop
aaa
cltd
fwait
sbb
jbe
inc
jle
cld
mov
jae
cmp
test
push
inc
ficoml
pusha
xchg
mov
int3
push
test
mov
cmpsl
pushf
clc
ds
les
cld
es
cmp
mov
xor
mov
xor
adc
mov
sub
repnz
mov
iret
xchg
cwtl
jo
mov
fs
mov
out
fisubrl
shll
fnclex
dec
mov
loop
insb
or
fstps
mov
lret
lods
sbbl
pop
cli
push
movsb
mov
jmp
aam
mov
adc
sbb
outsl
xchg
les
xchg
into
fimuls
sbb
rorb
orl
jne
in
pop
push
clc
out
aas
pushf
stc
push
pop
pop
popf
negb
aas
lds
ret
imul
rcrl
cmp
mov
ss
or
and
cmp
mov
jmp
xchg
pop
ret
xor
in
rorl
out
xlat
push
cmc
mov
pop
inc
shl
fstpl
cmp
push
push
sbb
outsb
cmp
popa
imul
cmpsb
or
push
lods
insb
mov
lods
mov
sarl
in
cwtl
xorl
mov
dec
push
and
jge
es
inc
jnp
mov
jnp,pt
mov
js
xor
nop
mov
scas
mov
bswap
ret
xchg
fwait
cmp
hlt
lahf
fwait
mov
scas
jne
push
out
push
loope
dec
fistps
ret
sar
mov
jle
xchg
adc
inc
scas
insb
movsl
arpl
sub
out
insb
sbb
jmp
out
or
jecxz
insl
nop
roll
mov
ret
nop
add
sub
dec
pop
sbb
sbb
mov
adc
iret
lret
lcall
cmpb
inc
adc
fdiv
push
xchg
sti
push
data16
insl
pushf
sub
dec
popa
adc
lret
fsubs
aas
push
xchg
lea
aas
mov
sbb
sub
add
scas
ret
arpl
jmp
mov
mov
dec
mov
dec
or
stos
je,pn
test
xor
subl
push
test
movq
cmp
out
jmp
xchg
aaa
sub
add
mov
andl
jb
add
subb
jle
xchg
sub
test
push
rcrl
enter
mov
ucomiss
loop
cmp
and
cwtl
add
cmp
insb
lret
add
push
push
mov
addr16
mov
pop
imul
adc
popf
aam
int3
lds
push
imull
mov
inc
outsb
push
lret
xor
outsb
ss
aam
sub
into
mov
push
cmc
or
pop
dec
inc
stos
cmpsb
scas
mov
aad
fstpl
arpl
rorb
push
sub
xchg
lock
jle
ret
mov
fcomps
inc
test
sbbl
loopne
popf
lret
inc
adc
xchg
mov
mov
and
clc
mov
mov
pushl
fisttps
loope
shll
mov
xchg
cmp
andl
mov
mov
pop
or
cwtl
cmp
pop
push
or
pop
sub
jp
cmp
vcvtss2si
into
fimuls
pop
jb
jmp
xor
lock
sbb
sub
cli
mov
icebp
or
add
fisubrl
lea
dec
or
xchg
and
and
movsl
push
push
sub
push
dec
pop
cmp
int
pusha
push
decl
dec
fmul
lret
loopne
jb
pop
cld
inc
push
push
xchg
mov
jns
jp
aas
fstps
jnp
decb
push
xor
dec
daa
and
es
or
mov
pop
dec
sbb
lret
lods
mov
ja
rorl
add
xchg
idivl
shr
pop
jae
pusha
pop
vmread
adc
xchg
jns
fists
sbb
xchg
decl
jg
aam
dec
lret
mov
loope
nop
sub
pop
cmpsb
xchg
sbb
push
lods
jne
jno
pop
and
movsb
adc
test
imul
loope
xlat
inc
in
adc
sbb
adc
mov
mov
out
pop
mov
insb
xchg
cmp
push
ds
popa
cmpsl
xchg
xor
xor
jecxz
xor
out
int3
add
shll
clc
push
xchg
or
aam
push
mov
add
add
aam
test
subb
repnz
pop
sub
cmp
push
push
and
sub
adc
pop
outsb
bound
fs
mov
xchg
lahf
je
adc
push
or
or
lock
lock
add
sbb
push
rcll
xchg
pop
adc
sbb
push
or
outsl
push
cs
popa
or
leave
js
dec
mov
xchg
movsb
mov
outsl
loop
divl
jg
sbb
fisubs
out
loope
and
nop
and
fs
test
shrl
pop
ds
fnstenv
or
xchg
or
xchg
pop
js
lahf
mov
inc
dec
test
dec
cmp
aas
adc
dec
repz
jae
pop
mov
mov
out
cmp
lock
adc
out
add
in
and
adc
or
out
mov
outsl
cmp
outsl
mov
fdivl
enter
push
cmp
mov
lcall
dec
mov
les
nop
lea
jg
out
sbb
roll
idivb
sbb
in
or
mov
push
lods
inc
cmp
stos
sti
repz
mov
test
adc
xor
mov
adc
test
in
int3
repnz
push
jle
out
jno
mov
sbb
dec
in
stos
inc
roll
mov
hlt
mov
imul
pop
xlat
pop
xor
loopne
add
adc
jmp
and
bnd
test
add
mov
lahf
and
jp
and
xchg
aam
mov
mov
fsubr
mov
iret
cwtl
rclb
out
mov
mov
clc
aad
lods
and
mov
lods
fldt
lock
cmp
dec
data16
add
add
sub
clc
inc
and
jb
das
xchg
mov
out
stos
add
test
rorb
lret
jno
lods
jp
xchg
cmp
js
inc
push
mov
jmp
and
jno
ljmp
test
jecxz
cld
lret
fldl
aad
adc
popf
cmc
xor
add
out
inc
inc
ljmp
pop
ljmp
sub
mov
adcb
xlat
inc
pushf
loope
xchg
sar
cwtl
cmp
mov
daa
mov
dec
cli
cmp
js
daa
add
dec
lods
movsl
out
cwtl
pop
pusha
lds
getsec
inc
test
sbb
in
mov
cs
push
or
xchg
push
out
test
or
xor
xor
arpl
mov
fisubl
mov
cmpl
mull
lcall
mov
jle
jo
in
mov
popf
xchg
mov
dec
xor
xchg
add
outsb
dec
icebp
push
add
jmp
dec
adc
jle
out
push
or
adcb
cmp
fdivrp
pop
xor
or
and
subb
mov
mov
sub
aad
and
mov
sub
add
push
lea
jne
pushf
inc
cli
jle
xchg
fld
adc
mov
int
stos
inc
subl
insb
jmp
push
repnz
push
in
in
cmpsb
rolb
sub
dec
hlt
sub
scas
loope
gs
jne
adcl
insl
sbb
push
repnz
or
sbb
sbb
rcrl
in
dec
jbe
lods
mov
cltd
and
adc
fisubl
test
lcall
les
je
enter
sbb
xchg
andl
mov
pop
scas
add
pop
add
fdivrp
fwait
adc
aas
stos
sub
clc
sbb
add
loope
push
sub
cltd
test
inc
mov
xchg
mov
fstl
jnp
cwtl
les
mov
push
add
arpl
xor
mov
adc
adc
out
push
push
into
fisubrl
mov
ret
dec
jle
pop
sarb
push
jle
out
xor
repnz
sub
push
mov
icebp
or
pop
jp
or
sub
out
stos
fwait
insb
adc
adc
sub
mov
std
push
cmpsl
loope
stc
jno
ret
cltd
jns
sbb
xor
mov
jecxz
stos
pop
cmp
cli
insb
inc
js
insb
aam
inc
stos
jo
mov
aam
arpl
inc
jp
in
xor
pop
shll
mov
jbe
xor
xchg
fs
jb
rorb
sbb
sbb
pop
mov
ret
loope
popf
andl
xor
aad
dec
pushf
mov
sbb
out
pop
adc
inc
dec
dec
outsl
and
push
xor
mov
pop
and
mov
pop
or
aad
sbb
lret
sub
sahf
lea
cli
adc
push
ja
cmpsb
outsb
int
mov
sub
and
cs
mov
inc
cmc
idivl
adc
cmp
repnz
xor
inc
clc
orl
mov
xchg
scas
sbb
scas
pop
adc
in
inc
cmpsb
inc
ret
adc
xor
pop
pushf
jo
inc
mov
or
fbstp
xor
scas
jle
in
rcl
clc
cs
icebp
mov
xor
jbe
mov
push
cmp
mov
in
and
loope
das
test
jp
pop
push
lret
sub
pop
mov
aad
mov
pop
and
adc
mov
in
into
lods
xor
in
inc
push
inc
sub
mov
cmpb
push
sahf
push
mov
mov
xchg
pushf
in
and
jo
xchg
test
lret
pop
jp
cmp
and
mov
aas
cmpsl
test
nop
lds
loop
mov
es
sub
jecxz
pusha
xchg
add
pop
mov
movsb
or
jg
jno
pop
xchg
insl
xchg
or
call
scas
jecxz
mov
push
nop
pop
mov
je
jo
xor
and
xchg
inc
sti
or
jbe
movsl
cmc
add
into
fstpl
clc
in
jno,pn
adc
inc
pop
popf
in
outsb
cs
outsl
maskmovq
testl
aad
in
pusha
je
or
pop
mov
pop
mov
mov
test
sti
inc
push
pop
test
test
ds
push
and
inc
sbb
cmp
pop
pusha
add
pop
cmpsb
leave
insb
pop
inc
in
roll
jp
pushf
cmp
pop
sbb
imul
ljmp
les
xchg
jmp
pop
sub
jge
push
mov
xor
sbb
inc
shl
mov
mov
push
mov
mov
dec
mov
inc
xchg
add
sbb
subb
adc
bound
add
sbb
out
fcompl
into
sub
addr16
mov
ljmp
in
sbb
mov
imul
pop
jae
lock
adc
push
xor
pop
clc
pop
or
rorl
dec
inc
fwait
cld
popa
sub
jnp
and
inc
icebp
jns
mov
pop
lds
mov
or
inc
mov
sbb
pop
lahf
lea
inc
scas
shrb
mov
filds
test
lods
cltd
int
xor
jle
sub
data16
cmp
pop
sub
mov
sahf
mov
inc
rolb
mov
add
dec
fisubrs
mov
or
lahf
jg
cwtl
jnp
aad
aaa
cmpsb
je
stos
sti
das
jg
in
mov
dec
bound
imul
xchg
dec
mov
mov
test
mov
aad
imul
pop
xor
out
sub
jbe
lcall
and
int3
div
daa
outsb
add
mov
sbb
stc
pop
ds
je
inc
es
in
jbe
add
mov
pop
lea
fadds
out
lds
lods
cmp
push
mov
ss
xchg
dec
inc
fwait
pop
fsubl
fbstp
mov
lea
out
bound
and
dec
loopne
dec
pop
mov
sti
fistl
jg
call
iret
cmp
ficomps
push
mov
push
push
stc
cld
adc
aas
or
dec
push
mov
inc
aaa
sbb
stos
inc
cmpsl
outsb
jb
test
fwait
push
jb
or
divb
add
in
lret
pop
inc
sti
sbb
cmp
hlt
add
fiadds
outsl
pop
push
insl
int3
pusha
pop
pusha
mov
clc
pop
std
mov
rol
dec
pusha
push
hlt
and
call
adc
mov
fdivrs
nop
jle
mov
movsl
test
mov
lret
lods
in
fldt
pop
ds
insb
test
jae
or
pop
dec
pop
sub
xor
xchg
sti
mov
or
ja
push
subb
enter
push
cs
push
stos
jae
inc
push
adc
cmpsb
mov
imul
test
xchg
sub
pop
push
aam
pop
call
lret
lods
or
xchg
or
mov
test
mov
adc
imul
adc
lret
loop
sbb
or
adcl
mov
push
icebp
lods
mov
fwait
mov
in
hlt
adc
addr16
and
repz
and
add
sbb
pop
lea
jbe
sbb
in
popf
lock
ret
mov
test
cli
stos
out
shlb
ret
hlt
pop
mov
cltd
lret
test
ja
push
inc
loopne
pop
daa
sahf
dec
es
mov
sub
mov
and
inc
js
stos
out
arpl
lahf
fbstp
mov
cmp
push
fbld
sbb
in
divl
cmpsb
mov
cmp
rcll
cltd
shl
xchg
dec
add
ljmp
jae
aaa
pop
lea
dec
push
add
pop
mov
push
repnz
in
ja
and
data16
xchg
sahf
dec
lock
dec
mov
pop
push
sbb
loope
xor
sahf
fsub
testl
inc
jns
mov
adc
add
loop
cmp
mov
cmp
inc
xor
dec
mov
lahf
test
jnp
dec
bound
xchg
or
mov
mov
inc
cmpsl
pop
out
hlt
xchg
and
cmp
push
mov
mov
les
push
mov
mov
cli
dec
gs
sbb
test
fisttpl
xchg
sbb
or
cmpb
push
pop
mov
scas
lahf
fs
shll
rorb
dec
roll
add
in
sub
lret
insb
iret
incb
sbb
ficompl
xchg
xchg
movsl
ret
in
mov
js
loopne
outsb
mov
aas
lcall
sub
fimull
fucomi
pop
aas
filds
sub
lahf
cmp
and
cli
mov
lea
xchg
call
adcl
repnz
xchg
jmp
mov
jae
subl
inc
xor
sbb
pop
mov
mov
rcll
and
les
loop
aas
fcompl
call
lods
pop
add
test
hlt
mov
jne
inc
fcompl
mov
aas
mov
pop
adc
mov
aas
lods
pop
insl
repnz
add
and
pushf
popa
loop
pop
or
outsb
movsb
arpl
xlat
mov
mov
add
push
loope
out
dec
push
and
and
or
aad
mov
jl
pushf
lods
andb
cld
sbb
movsb
pop
sarl
jle
addr16
in
rcr
jmp
repnz
xor
int
aam
xchg
add
pusha
push
cmp
xor
insl
bound
dec
mov
jecxz
cmp
lods
sbb
xchg
pushf
mov
dec
inc
adc
fwait
les
pop
mov
xor
movsb
stc
xchg
call
push
sahf
cmp
in
mov
fdivp
dec
inc
jle
xor
add
push
xchg
inc
jne
repnz
dec
in
sbb
hlt
mov
sbbl
insl
data16
xlat
ret
fcomps
pop
inc
cmc
rolb
inc
insl
mov
jg
push
jne
cwtl
into
dec
lds
rcrl
outsl
mov
fdivs
dec
mov
js
jle
mov
mov
rcrb
cmp
xchg
cmp
movsb
xchg
mov
sub
mov
xor
or
cmp
mov
sbb
push
ds
popa
add
sbb
xchg
hlt
cmp
ss
mov
mov
dec
xchg
push
fs
es
in
rol
mov
rclb
jle
or
push
sar
arpl
lcall
jb
inc
adc
mov
or
loop
sub
jecxz
lea
and
mov
push
loope
jl
cmp
loopne
jns
fs
decb
sub
hlt
push
lret
vpmuludq
cmp
mul
into
jnp
pop
ljmp
jl
rolb
inc
rorl
loopne
jp
push
ret
jb
dec
adc
or
sbb
inc
xchg
movl
scas
cli
icebp
cmp
sti
lock
cmp
pop
sub
dec
sbb
cwtl
std
sbb
movsb
inc
mov
inc
mov
loope
cwtl
lret
jg
movsb
xor
lea
ret
mov
ljmp
aaa
leave
insl
sbb
adc
popa
mov
lea
or
arpl
fwait
nop
sahf
popf
jmp
push
fildl
mov
xor
pop
jns
iret
std
bound
movsl
stos
lods
data16
dec
push
jecxz
push
sbb
je
mov
addr16
shlb
divb
xlat
push
jne
das
je
and
lods
lret
hlt
ret
lods
xchg
inc
mov
mov
sub
test
cmp
fnstsw
cmc
ret
mov
sarb
cmp
lds
es
mov
xor
xchg
adcl
push
sbb
push
mov
dec
test
mov
mov
inc
fsubrl
push
bound
mov
fwait
pop
lods
dec
ljmp
clc
adc
iret
fstps
add
into
xor
pop
ja
add
out
inc
pop
cmc
sub
lea
pop
xchg
adc
mov
test
sbb
sub
cmp
shl
push
cmp
jle
in
or
jbe
out
sti
push
xor
movsb
lods
pushf
adc
adcl
test
sbb
lock
mov
leave
adc
mov
xchg
jge
or
adc
loope
sub
push
js,pn
lods
fnstenv
in
mov
pushf
repz
pop
xchg
pop
sbb
mov
sub
mov
mov
pop
ret
or
sub
bound
repz
xchg
or
and
inc
pop
dec
push
mov
imul
or
pop
inc
xchg
mov
sar
pop
hlt
flds
stos
add
xor
push
mov
adc
es
push
add
pop
mov
jo
lret
aam
adc
pushf
sub
mov
shl
pop
std
iret
push
add
and
jecxz
adc
fnstenv
jno
sub
adc
nop
sub
add
push
clc
adc
xchg
jecxz
das
push
jmp
shll
adc
xchg
add
ret
jns
popa
inc
loop
nop
outsl
orl
addr16
pop
adc
mov
mov
mov
ret
scas
sbb
xor
movsb
mov
push
sbb
xor
dec
mov
pop
std
ret
adc
arpl
addr16
mov
call
js
inc
dec
aad
cs
jne
xchg
out
ja
icebp
add
adc
movsb
in
scas
cli
dec
mov
fisttpll
popl
xorb
nop
fldl
dec
scas
sub
bound
push
xchg
jg
pop
sahf
cmp
sbb
push
jle
insl
inc
clc
in
bound
loop
xchg
jbe
pop
and
sbb
ja
loope
sbb
lock
jle
shll
xchg
or
cmpsl
pop
icebp
pusha
push
add
push
cmpsl
daa
jle
fcoml
pop
insl
lea
adc
movsb
rclb
ss
in
loop
aam
lea
cli
pop
xchg
jbe
jnp
nopl
xor
repnz
mov
dec
push
les
cmp
daa
jge
fdivs
and
and
lds
jmp
sub
dec
mov
or
adc
insl
out
sahf
cmc
inc
js
sarl
fsts
sbb
mov
xor
aaa
inc
lds
xor
xor
ljmp
pop
popf
sarb
mov
jle
jg
movsl
outsb
orl
jg
lcall
inc
out
add
sbb
rol
mov
xlat
sub
mov
mov
mov
out
ror
mov
jb
push
xchg
jmp
leave
aad
inc
pop
push
push
arpl
dec
aas
or
addr16
insl
fstps
orb
cmpsl
cltd
clc
mov
mov
in
repz
pushf
push
call
clc
lds
push
dec
call
mov
and
mov
ja
mov
xor
pushf
lods
xor
fmul
push
push
icebp
or
and
and
sub
and
imul
cmp
pop
in
dec
push
es
call
sbb
push
leave
and
lds
cltd
sbb
pop
test
and
cmp
pop
pop
inc
dec
lods
in
xlat
xor
mov
movl
push
mov
cmpsb
pop
mov
cmpsb
leave
xor
pop
sbb
fstps
stos
cmpsb
mov
leave
repz
insl
inc
ret
sbb
lret
in
push
xchg
mov
sub
cmp
pop
push
pop
xor
xor
repnz
fwait
adc
jg
push
xchg
add
dec
xor
lock
int3
lods
out
xchg
arpl
push
int
dec
lods
cwtl
jmp
mov
mov
xor
mov
shl
outsl
mov
xchg
lods
push
ljmp
pop
dec
ljmp
add
mov
jp
jle
lods
or
gs
pop
aad
data16
scas
loope,pn
mov
mov
mov
mov
mov
pushf
sub
jb
or
int
int3
hlt
mov
inc
or
decl
enter
popf
pop
mov
test
jmp
das
ljmp
and
call
cmpsl
cmp
enter
scas
std
mov
sub
xchg
sub
sbb
jns
inc
lahf
inc
and
pop
dec
pop
adc
sbb
out
lret
inc
ss
in
xchg
jbe
fisttpl
mov
cmpsl
xchg
lods
fadd
or
lock
es
inc
test
mov
mov
cmp
lock
jae
xchg
and
lods
mov
cmp
rorl
mov
xchg
cmp
stos
sahf
cld
sbb
xchg
jno
mov
cmp
mov
inc
adc
push
push
enter
mov
arpl
in
dec
cmp
adc
js
inc
mov
xchg
out
es
pop
mov
pop
dec
add
xorb
icebp
pop
sbb
cmp
movsl
arpl
push
cmpsl
arpl
insb
subl
push
jle
sub
mov
sti
nop
sbbl
xchg
push
or
jns
dec
xor
mov
push
lret
stos
pusha
cld
js
sub
add
or
mov
lret
cmp
mov
dec
and
in
mov
mov
inc
sub
push
push
out
cwtl
pop
push
mov
negl
aas
push
outsb
jne
clc
bnd
rcr
bound
xchg
push
adc
lcall
movb
xchg
pushf
pushf
scas
repnz
xlat
mov
jb
add
jb
or
ljmp
sbb
insl
jge
xchg
test
mov
bound
add
inc
mov
xchg
jl
inc
pop
jbe
jnp
sarl
jns
lea
mov
sub
mov
xor
enter
jb
mov
enter
hlt
sti
sbb
push
pop
pop
sbb
enter
xor
std
jg
xor
adcl
cltd
inc
dec
aas
adc
cli
lods
xor
push
sub
jno
xor
jne
and
insl
mov
ror
pmaxub
outsb
cmp
in
repz
idiv
xchg
sub
fs
add
aas
in
imul
or
stos
add
shll
pop
jl
jns
mov
pop
push
out
lods
or
dec
jmp
inc
add
lods
mov
dec
fcomps
jb
xor
and
inc
pop
and
setp
sub
push
mov
mov
stos
adc
push
add
mov
shrl
sub
adc
inc
fbstp
inc
mov
das
btc
in
lock
testl
and
or
lea
mov
push
pop
push
je
fcomip
or
clc
push
outsl
pushf
mov
cltd
je
scas
inc
cmp
ffreep
stc
push
movsb
push
mov
jg
add
fxch
push
mov
pop
fldt
pop
nop
sbb
cmp
mov
ja
jmp
inc
jmp
leave
aad
cmp
cmp
sbb
xor
out
and
ds
inc
xchg
fnstenv
sub
mov
jno
dec
mov
mov
fs
jae
jnp
mov
sub
pop
aas
subb
push
insl
movsl
icebp
mov
mov
in
sub
lock
dec
inc
sahf
inc
sbb
icebp
es
and
xor
mov
mov
mov
mov
jge
mov
jmp
sahf
mov
mov
add
rcrb
and
lods
pop
mov
push
ds
scas
pusha
jbe
mov
cmp
sub
sub
xchg
notl
dec
out
add
cmp
jnp
jb
mov
cmp
test
mov
xchg
adc
ds
ret
shrb
xor
push
mov
push
mov
xor
into
fcomps
fsubs
and
cmp
pop
adc
loopne
xor
push
adc
fwait
in
mov
mov
cmp
std
dec
lret
repnz
cli
lods
into
xchg
leave
cli
jmp
inc
shlb
loop
sarb
pop
add
mov
add
or
icebp
cmpsl
add
adc
jno
in
jmp
repz
ficompl
lret
pop
test
jle
inc
or
fisttpl
push
push
daa
mov
mov
cmp
mov
sbbl
dec
xor
xor
scas
lea
jbe
decb
cmp
insb
call
jge
add
je
movsl
movsl
in
mov
xor
push
incb
hlt
pmaxsw
mov
iret
add
mov
sbb
pop
cwtl
pop
adc
jae
add
mov
dec
or
fidivl
sub
adc
cli
fnstcw
loopne
test
inc
mov
movsb
aam
popl
sub
dec
aam
loop
sub
sub
test
rcll
mov
sar
pop
cli
fwait
icebp
lahf
popa
xchg
sub
inc
ljmp
adc
arpl
cmp
enter
lahf
adc
out
push
push
loope
ret
sbb
out
sub
or
pop
add
pushf
mov
cmp
fnstcw
sub
push
bound
cmp
stos
icebp
add
imul
push
xchg
push
sub
mov
stos
and
xchg
and
rcrl
andl
std
out
jno
in
les
xchg
or
idivb
pop
jle
cwtl
xchg
shrl
sub
xorl
lods
mov
fdiv
xor
add
mov
push
cmp
mov
ret
add
adc
mov
push
xlat
or
or
aad
sbbb
lea
inc
sub
or
jns
loopne
jno
xor
sub
pushf
add
xlat
jb
cmp
stos
dec
xchg
dec
jecxz
jnp
fdiv
or
and
les
pop
outsl
pusha
and
add
xchg
movsb
sub
sub
mov
add
fldt
movsb
xor
fadds
aad
mov
arpl
adc
fwait
pop
mov
pop
daa
daa
lds
xchg
call
adc
sub
push
dec
push
sbb
jne
adc
movsb
sub
xchg
push
dec
cltd
mov
popl
bound
sub
push
into
xor
mov
sbb
add
mov
rcrb
fbstp
in
sub
pop
inc
and
loopne
jno
in
jae
gs
cmp
mov
fdivs
cmp
movsl
in
rcll
nop
je
loope
mov
enter
jmp
loopne
fs
insb
pop
jb
inc
fcom
xchg
int3
xchg
cmpsl
fcmove
jo
dec
fs
cmp
test
jmp
add
iret
sbb
cld
fucomi
pushf
mull
fs
push
fsubr
es
js
mov
push
sbb
incb
enter
and
jl
std
adc
les
fidivl
mov
loope
mov
stc
clc
fcmovbe
enter
cltd
call
sbb
out
int
imul
xlat
jnp
push
push
pop
movsl
lcall
or
pop
sub
shlb
out
cmp
and
lods
lcall
addb
sbb
fiadds
daa
xor
data16
repnz
jns
jmp
push
or
sub
add
test
addr16
pop
mov
lahf
mov
js
add
js
sbb
fwait
test
cmp
inc
push
fcompl
int
cmp
sbb
dec
test
xchg
arpl
jecxz
leave
ficoms
push
cmpsb
repnz
push
jl,pt
mov
pop
loopne
inc
movhps
shll
std
push
pop
mov
push
xchg
inc
lock
hlt
fstps
scas
sbb
jns
xchg
cmp
push
pop
cwtl
shll
mov
cs
jae
dec
adc
xchg
jl
cmc
mov
xor
cmpsl
sar
fwait
cmp
add
repnz
xor
lret
movsl
andl
lods
daa
sarb
xchg
das
xor
subb
xchg
and
cmc
push
mov
cld
inc
int
add
mov
mov
cmc
jecxz
lcall
jp
dec
dec
dec
lret
sarb
add
pop
je
sbb
jp
cmp
adc
ret
fwait
mov
sbb
inc
add
loop
inc
xor
aas
popf
outsb
ja
pushl
xor
incb
xchg
add
jmp
lods
mov
repz
aaa
ret
movsl
xor
dec
mov
pop
adc
mov
imul
out
mov
out
leave
cmp
out
xchg
push
stc
lret
mov
xchg
fs
je
mov
loop
in
mov
dec
cmc
adc
push
mov
lahf
scas
mulb
mov
sub
jecxz
sub
pop
enter
dec
out
cli
popf
mov
test
insl
xchg
mov
jnp
fyl2x
pusha
ficompl
outsb
push
dec
movsb
pop
pusha
ja
mov
add
and
subb
push
mov
or
adc
pop
test
scas
add
xchg
push
or
sbb
jge
nop
xchg
sub
pop
sub
adc
pushf
lds
cmp
dec
jmp
out
mov
push
test
xor
sbb
rcll
fldcw
movsb
rol
popf
lcall
outsb
sub
mov
inc
enter
mov
into
ret
arpl
leave
std
jmp
mov
mov
orl
enter
fidivrl
and
inc
mov
pop
stos
xor
inc
orl
inc
stc
mov
mov
das
dec
inc
xor
popa
dec
cld
xor
pop
fldl
pop
jns
addb
dec
out
lock
shll
cmp
mov
sub
lock
push
js
test
xchg
jno
ret
shll
in
or
ds
mov
test
mov
roll
xorb
sbb
ja
scas
nop
xchg
les
and
outsl
push
js
sub
clc
sbb
inc
or
imul
jg
sub
jecxz
sbb
imul
loopne
repnz
jmp
sti
out
push
mov
ret
cli
insl
dec
push
lds
and
push
insb
or
dec
stos
int
dec
sbb
push
mov
inc
cmpb
movsb
inc
mov
xchg
lods
loop
lods
test
jo
fimuls
push
jbe
into
adc
repnz
mov
mov
pop
dec
insb
mov
and
xor
movsb
or
push
xchg
or
in
push
cmc
fmuls
imul
clc
jns
fstl
xchg
popf
bound
mov
adc
xor
loope
push
pushf
jns
insl
mov
int
fldt
hlt
push
popa
je
pop
insl
jecxz
xor
ficomps
pop
jbe
dec
lods
test
stos
and
ficompl
ficoml
cwtl
sub
arpl
jbe
xor
fdivs
mov
sarl
outsb
addr16
sub
pop
ficoms
adc
xor
push
cwtl
xchg
adc
mov
cmc
out
xchg
fdivrl
and
sub
jg
aam
cli
in
adc
movsb
sbb
mov
jge
sbb
sub
imul
and
sbb
das
mov
ljmp
pop
in
pop
je
push
ljmp
pop
ffree
mov
je
dec
sahf
mov
inc
mov
adc
cmp
fimuls
popa
call
stos
int
inc
dec
jmp
mov
jle
pop
sub
sub
xchg
cmc
push
mov
push
lret
mov
add
ret
xor
mov
xlat
out
pop
lods
or
test
jge
ds
aad
rorb
pusha
inc
mov
hlt
push
out
dec
jmp
jnp
dec
les
neg
sbb
orl
not
in
jmp
jnp
out
pop
in
aam
inc
inc
add
add
rorb
les
add
imul
enter
push
xor
mov
push
fiaddl
push
sahf
out
xchg
jge
shlb
movzwl
sbb
pop
pop
stc
jg
arpl
out
pop
jg
xchg
popf
mov
dec
cmpb
add
decl
and
and
add
repnz
orl
test
xlat
dec
pop
and
cwtl
andl
out
cltd
xorb
mov
mov
adc
shrb
mov
lahf
cmp
in
xchg
jge
mov
imul
dec
pop
add
aam
add
lea
cmp
fwait
xchg
ds
sbb
xchg
data16
mov
push
repz
sub
shlb
inc
adc
sub
xchg
sub
mov
lock
popf
sbbl
imul
ret
cwtl
mov
pop
pop
add
mov
mov
ja
xchg
decb
adc
push
bound
ljmp
xchg
int
sti
jge
sub
cld
push
cmpsb
mov
std
shlb
and
push
repz
lock
sbb
fsubl
xor
pop
loopne
data16
push
loopne
xchg
add
adc
nop
sub
adc
lret
add
adc
sahf
rep
sub
sub
roll
jae
xor
inc
mov
xlat
cmpsb
xchg
inc
in
xor
mov
pusha
cwtl
push
cmp
inc
mov
cs
jp
pop
js
insl
dec
shll
cmpsl
sub
push
out
dec
pop
mov
test
add
fdivp
scas
popf
sbb
repz
mov
fnsetpm(287
pop
in
adc
xlat
cli
xchg
cmp
mov
cmp
into
rcll
ret
repnz
ficompl
lahf
and
xbegin
repz
fadd
mov
mov
adc
add
mov
aaa
inc
add
mov
fs
xchg
popa
push
mov
push
scas
leave
hlt
jae
pop
out
mov
rorb
imul
shlb
cmp
sbb
mov
and
imul
adc
out
xchg
sbb
mov
push
cs
sub
test
ja
xchg
cld
popaw
cwtl
mov
xchg
stc
test
lea
leave
data16
push
inc
jae
sarb
and
ds
sbb
dec
sar
or
outsl
mov
xor
loopne
pusha
sbb
add
and
out
addr16
xchg
pop
and
std
enter
ja
shr
jbe
inc
in
mov
ss
adc
pop
mov
cmp
push
adc
cmp
xchg
xor
cmp
fnstenv
and
das
dec
dec
int3
mov
dec
sar
sub
push
lahf
daa
ds
ss
inc
mov
xchg
mov
rolb
or
icebp
ja
lods
pop
mov
imul
inc
mov
hlt
add
cmc
addr16
sbb
dec
pushf
mov
pushf
mov
pop
jne
popf
mov
fucomip
les
push
xor
or
test
pop
mov
adc
sub
or
out
cmp
push
pop
sbb
xor
clc
imul
imul
dec
mov
add
adc
aas
arpl
test
icebp
mov
shll
outsl
add
popa
lret
fcmovbe
jmp
daa
or
leave
push
inc
orb
push
jp
jns
or
lcall
sbb
lahf
mov
sub
push
lret
jle
jns
dec
push
cli
pop
mov
add
sarl
mov
cmp
stos
arpl
xorl
loope
jle
push
push
xchg
sahf
or
cmpsl
loop
or
mov
call
jbe
xchg
adc
mov
pusha
aaa
fsubrl
jbe
lods
je
dec
jbe
sti
rcl
call
and
cmpl
xor
mov
ficoml
aas
es
std
push
movsb
push
pop
or
inc
fisttpl
in
lds
jo
mov
aam
out
out
sbb
arpl
xchg
pop
jecxz
cmp
fwait
ret
test
iret
push
cmp
inc
outsb
sbbb
int3
dec
mov
mull
xchg
cmp
jae
xor
add
jle
in
les
sub
push
push
gs
ret
lock
out
push
jb
and
push
pusha
loopne
jge
ljmp
repnz
push
jno
mov
dec
sbb
xor
pop
cmp
sub
rclb
in
jbe
push
repz
pop
fisubrl
popl
fbstp
xchg
test
outsl
insb
adc
test
loopne
sub
mov
out
fimull
enter
pop
shl
call
push
loop
mov
insb
pop
fisubl
jge
rcl
movsb
dec
lock
cmp
add
xchg
mov
push
pop
aam
ds
jge
and
stos
in
sbb
ret
movsl
pusha
dec
fmulp
js
aam
pop
ljmp
mov
cs
sahf
sbb
mov
out
xor
std
pop
sarb
dec
mov
jp
psubb
mov
adc
lds
lcall
pop
add
mov
mov
xchg
mov
sub
add
ss
xchg
xchg
sbb
dec
fs
shll
dec
jno
lock
insb
and
int
bound
xchg
and
xchg
je
dec
sti
data16
popa
addr16
mov
adc
fsubrl
fnsave
sbb
jae
int3
cmp
cltd
push
xchg
fnsave
mov
add
xchg
cmp
cmp
movsl
cwtl
sarl
mov
nop
rol
and
jo
cld
or
adc
ret
imul
in
shrl
and
pop
imul
out
cltd
ficoms
and
mov
fs
jae
cmp
xchg
loope
inc
lcall
lret
add
adc
subl
adc
xor
jno
mov
jge
inc
mov
push
les
cmp
push
sbb
pop
jne
adc
inc
push
cmpsl
or
mov
cwtl
jb
inc
inc
push
loopne
xchg
cmp
mov
pop
lcall
dec
inc
and
xor
or
popf
ljmp
mov
mov
pop
xor
stos
and
mov
repz
ret
adc
push
dec
pop
fldl
in
mov
test
add
into
addr16
and
sub
test
arpl
in
rdmsr
push
hlt
and
jne
flds
xchg
loopne
xchg
out
in
in
pop
cli
mov
and
push
or
push
push
out
out
das
push
loope
or
and
jge
xchg
out
test
pop
push
push
inc
or
mov
out
push
pop
pusha
push
es
push
xchg
cmp
pop
cs
or
and
or
mov
cmc
js
add
les
negb
cwtl
pushf
xor
xor
jb
fisubl
cmp
ss
inc
push
inc
mov
leave
insl
daa
cmp
pop
push
jns
out
test
iret
mov
int
push
mov
mov
mov
adc
or
rorb
add
aas
rorl
and
movsb
adc
out
inc
aas
test
sub
ret
stos
popf
push
aad
dec
push
movsb
dec
ss
pop
test
popf
mov
sbb
pop
cmp
mov
sti
sub
sub
sbbb
lods
xorb
push
push
sub
call
in
sbb
cmpsl
out
test
jns
dec
testb
int
mov
pop
adc
jne
pop
mov
stos
push
add
sub
movsl
sub
inc
call
cmp
fxch
in
mov
mov
mov
jno
dec
push
sbb
push
jg
xor
jle
and
mov
xchg
enter
mov
cmp
xor
daa
sti
inc
mov
sbb
fcmove
stos
xchg
inc
push
push
fisttpl
jmp
out
shrb
dec
fwait
inc
sub
cmp
fs
andl
loopne
mov
decb
leave
data16
mov
cmpl
fnstsw
adc
aas
fcompl
xor
xchg
mov
sbb
xor
js
push
xchg
je
inc
cmpsb
insb
adc
aas
xchg
in
lods
les
enter
mov
sbb
adc
js
mov
cmp
stc
adc
repz
insb
ljmp
in
lahf
mov
mov
jge
lcall
mov
out
push
xchg
test
nop
cmpsl
test
pushf
das
cmp
in
fucom
xor
mov
mov
jle
sub
dec
cmpsl
out
xorl
xchg
dec
int3
inc
jl
dec
lcall
push
adc
dec
pop
mov
inc
cmp
rcl
adcb
lcall
mov
sbb
cmp
push
inc
jno
jg
sub
mov
xor
popf
mov
loop
jae
js
mov
xor
xor
cmp
dec
jmp
data16
mov
loop
cmp
cmp
test
inc
push
pop
dec
push
icebp
adc
mov
movsb
mov
testb
push
mov
sbb
test
fs
test
sti
out
jns
jb
int
push
xlat
les
shll
movsb
mov
mov
mov
sahf
jecxz
movsl
mov
ja
mov
mov
lcall
in
fsubl
cltd
pop
out
or
ror
rcrb
enter
sub
mov
outsb
adc
xchg
mov
lock
jecxz
sub
in
jge
add
movsb
call
dec
inc
scas
lcall
subb
mov
add
adc
push
rcrb
push
iret
out
sub
rcl
jae
dec
mov
pushf
test
xchg
hlt
loope
push
lcall
pop
sbb
and
and
mov
jmp
sbb
in
fldl
adc
das
xchg
jb
cwtl
sbb
nop
cs
mov
ja
mov
jae
push
pop
xchg
stos
and
ja
daa
mov
in
or
mov
int
add
das
mov
insb
mov
push
stc
pop
mov
mov
and
inc
dec
mov
xor
cli
popa
push
xchg
decb
inc
and
and
xor
push
jg
ret
mov
pushfw
lock
adc
inc
sub
jb
arpl
jno
int
xor
xor
mov
sti
cmp
push
sbb
push
shlb
test
xchg
ja
push
popa
adc
mov
push
fadds
inc
hlt
push
iret
ja
stos
add
shrl
mov
aas
test
or
clc
les
inc
pop
jno
pop
icebp
cs
jae
sub
push
and
sub
jae
xor
cmp
sub
lock
xchg
cmpsb
lods
mov
and
dec
clc
loop
movsb
gs
mov
push
inc
or
fwait
clc
roll
mov
mov
das
xchg
xchg
pop
repz
ficoms
imul
and
adc
xor
push
mov
outsb
cltd
in
mov
or
sbb
inc
push
xchg
ret
xor
add
ror
outsb
sub
mov
test
jbe
sbbl
insb
scas
test
loope
cmp
cmp
pop
dec
add
sub
ss
in
pop
into
push
push
pop
clc
out
cwtl
stc
dec
dec
sbb
neg
std
aaa
std
js
aad
fisttpl
repnz
cmp
dec
cmp
icebp
cltd
sub
push
inc
mov
mov
mov
sub
pop
hlt
inc
aam
negb
pop
sti
adc
inc
lock
sbbl
xchg
fs
fcmovne
cmp
xchg
jns
rcrl
mov
adc
xchg
into
and
sbb
jne
pusha
xchg
xor
int
fdivrl
inc
int
mov
pop
div
mov
adc
push
int3
ret
xor
lcall
std
cvtps2pd
test
sub
inc
cmc
lahf
cmpl
xchg
mov
in
cld
dec
mov
sbb
xlat
jne
push
popa
fnstsw
js
jl
sbb
sbb
mov
mov
lds
imul
stc
push
mov
and
jnp
pusha
xor
notl
xchg
pop
dec
cmpb
jae
fdiv
or
iret
push
andl
jl
xchg
outsl
jb
lea
push
xchg
mov
out
outsl
xlat
mov
pop
sbb
jmp
and
mov
clc
xlat
xchg
or
ds
dec
stos
fimuls
cmp
push
adcb
pop
xchg
inc
scas
or
push
mov
xchg
or
inc
sti
in
out
arpl
pusha
jle
inc
push
aas
mov
sahf
sbb
dec
dec
scas
add
fbstp
or
add
int
mov
sbb
sub
jl
je
insl
call
cmp
js
or
lcall
ja
mov
scas
add
in
mov
sbb
and
insl
jnp
sarl
shrl
sbb
mov
adc
jns
lcall
jg
jo
cmpsb
mov
and
add
shrl
dec
inc
pusha
xlat
stc
push
adc
jecxz
sub
push
lret
xchg
jns
xchg
mov
cltd
rolb
mov
push
xor
test
jb
mov
jo
loop
push
or
je
test
rcrb
test
inc
cld
sahf
inc
adc
push
mov
mov
cmp
ficoms
daa
clc
imul
daa
mov
sub
xchg
jp
stos
push
test
rclb
adc
dec
scas
xchg
lahf
mov
cmp
shr
mov
mov
or
cmovg
cld
pop
mov
push
jecxz
xchg
sbb
inc
div
push
mulb
in
sbb
sbb
cli
mov
push
sub
pusha
cmp
or
jns
mov
mov
sahf
data16
imul
mov
push
arpl
in
mov
addr16
cmp
xor
gs
aas
out
xor
pop
js
add
mov
addl
std
mov
decb
jbe
in
sbb
cmp
repnz
call
cmp
incb
dec
lods
push
sbb
lds
and
and
inc
sbb
outsl
clc
dec
add
mov
test
adc
lock
das
mov
cmp
xor
sbb
jnp
or
popf
stc
inc
sub
cli
mov
mov
xchg
sti
jns
in
sbb
jb
add
push
or
sub
mov
stc
mov
loopne
ds
cmp
xor
je
jmp
xchg
cmp
mov
insb
popf
repnz
pop
les
mov
xor
push
mov
cmpsb
mov
aas
lcall
jbe
pop
fs
js
mov
in
sub
mov
jmp
sub
jl
das
sarb
jecxz
scas
fmuls
out
xor
mov
xchg
cmpsb
pop
push
int3
xor
negl
xchg
ds
js
mov
dec
mov
inc
cmpsl
call
sub
jb
pop
cmpsl
hlt
adc
inc
mov
adcb
loopne
fwait
stos
popa
aad
mov
push
das
xor
ljmp
dec
or
inc
sbb
mov
fcoms
adc
les
adc
cltd
mov
jmp
sbb
mov
jne
push
adc
jle
sbb
sub
mov
mov
das
iret
or
pop
rcrb
pop
and
or
sar
lods
dec
cmpsb
movsb
rorb
cs
push
and
lret
lods
add
push
mov
xor
xchg
jecxz
gs
jno
icebp
popa
xchg
dec
fisttps
pop
ds
jmp
mov
stc
and
pusha
icebp
adc
ret
arpl
lahf
shll
js
dec
mov
inc
xor
xorl
mov
test
test
lret
int
bound
mov
jmp
sbb
into
add
sti
in
fiadds
arpl
mov
inc
push
repz
and
shll
lahf
icebp
jno
push
and
sti
sahf
out
mov
adc
outsb
js
push
push
sahf
add
push
sbb
outsl
xlat
outsl
pop
mov
mov
nopl
std
lds
out
rolb
cmp
mov
sbb
jl
in
dec
and
xchg
lock
sbb
imul
fcompl
push
dec
jbe
test
mov
cmpsb
pusha
bound
int
xchg
jo
jne
dec
aaa
or
mov
mov
mov
or
shlb
cmp
mov
xor
inc
imull
mov
test
mov
repnz
out
xlat
adc
mov
int
mov
jmp
xchg
xor
aam
cmp
arpl
pop
lods
lret
ret
je
inc
out
mov
inc
dec
or
xor
push
push
lret
je
mov
loope
inc
pop
add
in
lcall
out
and
mov
mov
sarb
mov
sbb
inc
es
bnd
pop
cltd
push
movsb
xchg
xor
pop
jecxz
mov
mov
int3
call
pop
sub
les
add
mov
xor
sub
testl
sahf
mov
mov
dec
mov
pop
pshufw
dec
es
add
insb
jmp
neg
push
aas
iret
mov
mov
test
jo
mov
cli
dec
out
cltd
xorl
push
dec
dec
push
dec
lret
in
cmp
mov
or
push
test
hlt
push
movsb
scas
pop
xchg
arpl
xchg
push
test
sahf
iret
popa
popf
sbb
sub
out
and
out
and
sarb
mov
jp
push
pop
mov
adc
loop
bound
pop
mov
fisubl
cli
sahf
pop
outsb
in
pushf
pop
repz
push
out
lods
repz
jnp
jns
cli
add
js
scas
pop
test
scas
push
loope
and
or
xchg
xor
in
int3
pop
in
shll
sbb
cli
scas
xorl
addb
cmp
sti
lcall
fwait
adc
push
movsl
mov
lcall
xchg
add
loop
fiadds
xchg
jns
mov
cmpsl
push
stos
xchg
mov
or
dec
loopne
outsl
and
mov
sbb
lods
jns
bound
loope
push
jmp
cmpsl
sbb
sahf
pop
negl
sbb
fists
push
or
add
add
sar
out
lret
jg
aas
inc
mov
jg,pt
jae
xchg
lret
dec
and
arpl
push
pushf
gs
mov
lahf
xor
push
push
pop
in
mov
dec
mov
pop
fwait
add
xchg
cmpxchg
movlhps
pushf
outsb
mov
sub
ja
es
dec
mov
popa
mov
fstl
paddw
fistl
and
insl
sub
ret
mov
mov
add
add
je
clc
xor
jno
adc
andb
sti
pop
push
or
imul
jmp
cmp
cmc
or
jno
sub
imul
push
inc
mov
fstl
loop
ss
ljmp
add
ret
sub
push
fwait
mov
mov
jbe
push
hlt
movsl
roll
lds
stc
aad
push
adc
sub
inc
mov
in
xchg
mov
add
sub
inc
sbb
fwait
push
inc
sbb
xchg
clc
call
fs
decl
inc
imul
mov
add
mov
jl
outsl
lahf
loop
push
jecxz
popf
aaa
scas
in
outsl
inc
inc
ss
mov
jae
popa
iret
push
repz
lods
push
test
les
mov
hlt
in
call
jae
hlt
out
add
dec
pop
xchg
sarb
mov
push
sbbl
or
sbb
sub
in
jae
xchg
mov
pop
xchg
incb
xchg
xor
fnstsw
xchg
add
rcrl
lcall
pop
mov
mov
add
mov
mov
adc
loop
inc
xchg
jns
hlt
ja
pop
push
cmp
or
out
pop
mov
in
cld
jmp
inc
mov
and
lahf
sti
lds
clc
aam
ss
or
inc
mov
les
adc
mov
imul
cltd
jge
jnp
adc
xor
mov
mov
dec
jb
aad
arpl
out
imul
testb
xchg
aad
xchg
sub
push
sti
mov
add
mov
dec
dec
sarl
mov
fs
add
ja
sub
cmp
in
movsb
dec
sahf
std
jo
cltd
out
add
sub
insl
sbb
lahf
xchg
or
sbb
inc
push
not
jmp
jne
loopne
mov
xchg
xchg
rcr
test
shll
inc
jno
cmp
cmpsl
dec
adcb
xchg
push
jg
sti
repnz
or
imul
lret
test
movsl
cwtl
icebp
lcall
pop
sub
dec
inc
cmp
sbb
push
fcoms
imul
jecxz
ss
push
orl
push
pop
push
cltd
ljmp
mov
cmc
mov
fadds
imul
jmp
shlb
jbe
mov
and
fwait
jne
jecxz
test
movsb
pop
jne
mov
movsb
adc
xor
inc
adc
movsl
add
mov
cmpsb
andb
inc
shll
scas
int
adc
popa
mov
jge
ljmp
or
movsl
cmp
popf
aaa
cmp
sbb
xlat
adc
mov
sub
lcall
cs
inc
mov
jecxz
adc
lea
mov
js
and
jmp
mov
out
dec
std
int3
test
and
sbb
pop
cmovae
icebp
int
jnp
dec
subb
dec
or
push
lds
pusha
cwtl
or
jne
xchg
pop
pop
cli
xor
jo
cli
push
jno
out
or
popa
dec
add
xchg
cmpsb
cmpl
mov
ret
jns
xorb
add
fsubl
sub
rorb
jbe
push
sbb
bound
jae
aad
jno
push
orb
loopne
pop
daa
sub
pop
out
leave
push
mov
repnz
mov
dec
out
imul
pushf
xchg
in
lret
cmp
std
jge
jl
xchg
dec
cld
jae
fmull
jnp
test
scas
test
incl
mov
gs
xchg
out
scas
sbbl
shll
nop
add
mov
insb
cmc
mov
loope
push
sub
add
rcll
inc
mov
xor
mov
and
mov
adc
fsubrs
fsubrs
stos
sub
mov
cs
cwtl
push
sbb
pop
cs
in
flds
push
cs
movsl
pop
xor
cmc
jecxz
mov
mulb
mov
iret
pop
enter
jecxz
mov
xor
xor
fadds
xor
cmc
sbbb
aam
sub
sub
jns
jge
arpl
and
in
mov
jg
inc
cmpl
into
lds
icebp
xchg
and
js
sub
ret
or
lock
pop
ss
mov
jecxz
out
movsl
iret
mov
int3
mov
rcl
sub
xor
insb
and
insl
das
or
loopne
or
enter
jecxz
jbe
mov
add
or
enter
ret
push
and
popf
je
push
js
neg
add
test
or
mov
and
lahf
lds
or
mov
inc
mov
out
mov
adc
out
int3
jp
mov
sub
test
inc
push
sub
jnp
xchg
add
ja
inc
xor
or
das
movsl
push
ss
stos
imul
mov
sub
push
pushf
inc
or
sub
cli
inc
in
cmpsl
pop
lret
popf
stos
out
lds
inc
mov
pushf
push
dec
push
push
push
mov
das
pop
jo
scas
popf
not
or
sahf
cmp
jo
jp
mov
pop
shrl
outsb
mov
add
pop
mov
js
aad
fst
add
xchg
gs
push
mov
stos
jno
mov
cwtl
dec
iret
sbb
mov
fxch
out
cmp
pop
pop
push
cmp
push
mov
push
aam
xor
sahf
dec
mov
test
iret
sub
mov
subl
push
push
mov
cmp
jmp
orb
pop
pop
cmpb
jb
push
movsl
je
push
push
popa
jl
push
imul
mov
add
pusha
mov
push
xor
dec
je
iret
inc
xchg
jae
pop
je
mov
cmp
imul
cmc
push
rcll
mov
mov
adc
adc
push
pop
mov
mov
test
mov
ljmp
cs
xlat
jecxz
xchg
ljmp
cmpsb
jae
fcmovnb
push
mov
sub
je
push
and
dec
aam
sbb
lahf
xchg
mov
aas
dec
into
pop
inc
lret
push
fldenv
ljmp
cwtl
dec
nop
popa
mov
lods
sbb
pop
lock
sbb
xchg
and
sub
inc
testl
cmc
call
push
jo
pop
sub
xor
testl
gs
loopne
add
ja
dec
sbb
sarl
xlat
fists
dec
outsl
jne
out
dec
mov
cli
jge,pt
pop
adcl
inc
fs
mov
std
gs
jmp
add
out
sbb
xchg
mov
hlt
repnz
lods
inc
inc
jne
mov
lock
dec
xor
lahf
jbe
and
out
xchg
or
arpl
lods
ds
jle
lret
sbb
xlat
cld
fwait
xchg
dec
mov
movsb
divb
or
cmp
xchg
test
mov
jle
rcr
loope
ja,pt
ret
adc
dec
lods
inc
mov
xor
dec
add
xor
imul
test
mov
cmpsl
xchg
ret
jne
dec
loopne
jp
loope
pop
mov
int3
lea
xchg
mov
adc
sarl
cmp
mov
jo
fisubl
xchg
add
mov
hlt
ret
mov
xor
out
xor
ds
cmc
shl
fmul
test
in
cmp
stc
jmp
shlb
mov
or
xor
xor
mov
mov
jne
std
cltd
xchg
pop
pop
and
jp
pop
icebp
xchg
data16
mov
push
data16
data16
jo
arpl
fidivrs
stos
jecxz
popa
inc
push
mov
clc
out
aad
xor
ljmp
bound
adc
in
adc
imul
imul
sarb
insb
mov
out
bound
std
jns
fistl
mov
test
pop
and
iretw
out
mov
sbb
pop
test
insb
outsb
notl
pop
and
and
or
and
subb
dec
cld
call
add
movsb
jl
lcall
js
mov
ds
sbb
scas
push
dec
inc
mov
decb
adc
adc
jb
and
and
cmc
daa
fsubrl
or
in
frstor
jnp
add
lock
std
dec
adc
lret
xor
add
xchg
je
leave
stos
jae
addb
mov
cmp
push
test
jmp
cmp
xor
inc
scas
std
mov
outsl
or
es
mov
dec
dec
mov
and
add
push
aad
lret
fprem1
jmp
adc
pop
cmc
js
loope
pushf
scas
jns
inc
pop
inc
xor
jnp
and
push
int3
jl
out
cld
lds
cmpl
bound
clc
lods
sub
call
popf
dec
jg
mov
out
jmp
mov
mov
lds
mov
imul
adc
lock
aaa
pusha
rolb
cmpsb
out
lock
sbb
add
dec
sbb
inc
icebp
out
test
mov
cltd
push
cmp
mov
xchg
xor
jecxz
cmpl
mov
out
mov
mov
sbb
xor
mov
xlat
shlb
jno
pop
fcomi
jp
jae
cs
clc
fistl
inc
imul
and
and
inc
mov
push
or
imul
movsb
jmp
enter
out
jne
lock
adc
sbb
aam
cmp
loop
imul
adcl
pop
dec
and
adc
push
sbb
ss
test
pop
scas
ljmp
jp
jbe
push
loop
adc
jae
cwtl
ja
popa
inc
sbb
push
mov
lahf
push
cmp
adc
aas
daa
fwait
mov
mov
daa
ret
sbb
xlat
inc
sarl
push
cmp
scas
jno
cmp
iret
imul
inc
lcall
outsb
mov
dec
loope
mov
mov
inc
mov
test
aad
mov
xchg
js
shrl
cmp
jecxz
incb
push
sub
xchg
int3
aam
stc
jmp
cmp
sbb
sub
pop
mov
xorb
dec
add
jmp
mov
mov
stos
into
les
jns
dec
mov
add
mov
sbb
stc
mov
and
hlt
jle
mov
pop
sub
mov
xor
inc
out
add
cmp
adc
mov
mov
xor
jg
pop
pop
dec
sbb
fidivl
pop
fcomps
filds
and
iret
jl
inc
jne
cld
popf
mov
es
pop
loop
cmp
xchg
add
cmp
pop
mov
jbe
lea
sub
inc
or
loope
inc
repz
push
aas
mov
xor
sbb
int3
xor
add
fs
mov
andb
das
cld
pop
les
inc
push
inc
movsl
movsb
das
xchg
outsl
icebp
ja
in
xchg
mov
rol
fs
into
jg
adc
daa
sahf
ljmp
jecxz
cli
xchg
mov
pop
jp
add
dec
sbb
push
jae
popa
jg
mov
scas
shl
inc
inc
jmp
pop
xchg
fildll
adc
mov
adc
int3
mov
leave
out
arpl
insb
popf
pop
repz
rorl
lock
movsb
dec
daa
and
out
jp
movsl
xor
mov
mov
or
jae
push
js
inc
add
xchg
ret
adc
lods
or
xor
cwtl
rcrl
popf
stc
jbe
mov
inc
and
stos
add
stos
dec
push
cld
xor
cmpsl
loope
scas
scas
imul
imul
xor
fyl2x
jbe
fisttps
aad
jno
jo
jmp
or
imul
outsb
loopne
jae
mov
ja
inc
or
add
add
cmp
push
jno
shll
xchg
jb
pop
add
inc
jmp
mov
bound
data16
in
add
jp
push
and
orl
repnz
loope
cs
mov
adc
das
movlps
test
mov
cmp
adc
cmp
push
jmp
repnz
xor
call
js
jle
pop
mov
out
rcll
push
mov
in
sahf
in
aas
ja
into
ss
jge
test
xor
fs
rorb
int3
dec
xor
iret
inc
push
or
or
inc
in
pop
ja
xor
or
push
mov
loop
outsb
push
dec
push
sbb
hlt
dec
in
ja
xor
je
mov
xchg
add
cmp
cmp
sub
repnz
scas
xorb
jns
pop
mov
in
enter
jns
ficoml
sarb
cmp
mov
aad
add
icebp
xchg
xchg
push
xchg
test
sub
pop
sub
sbb
mov
jg
xchg
inc
negb
incl
jae
gs
mov
imul
pushf
scas
push
push
je
pop
xchg
push
sub
ret
mov
movsl
je
sbb
xor
add
pop
pop
scas
jg
xchg
scas
xor
pop
je
mov
pushf
dec
add
sbb
lea
xor
cmc
and
mov
mov
sub
push
dec
push
or
sub
rorb
addr16
and
sbb
mov
mov
dec
dec
cmp
fdivrl
ret
call
mov
pop
sbb
repz
nop
mov
jl
lds
outsb
xorl
push
jmp
cmc
lock
lret
mov
repz
and
or
aad
jmp
int3
xchg
add
out
shlb
lret
sarb
cmp
cmp
and
js
lahf
push
push
xor
and
mov
push
push
sbb
or
es
int
and
xchg
fisubrs
dec
xchg
xor
mov
aam
inc
pushf
daa
dec
loopne
xor
add
sbb
int
rcrl
pop
pop
inc
sti
ja
fwait
adc
jno
adcb
sub
mov
fistpll
jge
pop
movsb
sub
test
xchg
jne
test
decb
sub
clc
inc
pushw
into
adc
xchg
dec
dec
mov
test
lea
mov
sbbl
xchg
fistpl
lods
cmpsl
cld
out
adc
insl
xchg
hlt
sbb
push
int3
idivl
xchg
nop
xor
test
push
in
notl
nop
lock
out
call
les
cmp
sbb
pop
mov
dec
mov
adc
inc
leave
out
mov
mov
push
cmp
es
stos
xchg
pop
std
cmp
mov
inc
push
mov
jb
push
cmc
subl
or
test
pop
jo
push
into
outsb
int3
xchg
cmpb
jge
pop
push
pop
ss
jp
xchg
add
push
or
sbb
mov
or
imul
jns
das
add
in
xor
inc
cmp
add
xor
mov
lea
jbe
and
jecxz
push
jne
or
popf
insl
sub
test
push
dec
data16
movsl
jo
sub
push
cli
sub
or
leave
push
mov
ljmp
xor
inc
jg
mov
push
enter
cld
and
inc
call
dec
ljmp
dec
cwtl
add
inc
xchg
jo
sti
test
push
dec
test
fcmovu
inc
rclb
sub
pop
clc
mov
xchg
scas
cwtl
mov
fwait
int3
lea
and
stos
push
push
dec
lods
cmpsl
mov
outsl
dec
in
std
ss
lcall
adc
xchg
enter
mov
fcmovu
mov
sbb
aas
subl
dec
dec
push
bound
stos
mov
push
dec
xchg
dec
negb
psrld
jmp
jae
push
jmp
lods
and
in
pushf
rolb
out
subb
mov
addr16
jo
cmp
in
add
aad
sub
icebp
push
stc
sti
test
cld
or
int3
lds
add
std
pop
dec
jns
xchg
mov
lds
outsl
addr16
add
or
mov
cmp
test
ror
jmp
push
jmp
popf
and
les
lret
jmp
sbb
out
jge
mov
jl
sbb
cs
icebp
jae
jecxz
mov
pop
push
sub
mov
sbb
and
test
xlat
into
rcrb
adc
ja
mov
stos
insb
jne
add
fcmovnbe
gs
dec
cltd
imul
fisttpl
int
pop
xchg
repnz
cmp
push
fs
fidivrl
movsb
mov
pop
sbb
jo
or
loope
stos
pusha
push
insb
in
adc
and
jns
cli
lret
xor
jl
xor
adc
mov
lods
sete
je
add
adc
loopne
cli
cmp
test
xlat
xchg
dec
jle
push
pop
flds
cs
pop
push
out
mov
gs
int3
sarb
push
adc
out
mov
shl
int3
push
fs
imul
add
repz
sub
arpl
jp
jle
push
jl
sbb
out
je
and
aam
scas
mov
daa
xchg
xlat
in
faddl
cmp
and
mov
enter
ficompl
jle
repz
add
int
pushf
aas
mov
sbb
daa
mov
test
inc
int
xor
push
shlb
or
cmp
aam
xchg
and
stc
add
mov
cmp
loope
fsubl
push
mov
jno
add
fldenv
push
push
inc
loope
daa
xrelease
into
rol
inc
mov
popf
test
cmp
pop
xchg
sbb
or
ret
std
negb
adc
fsubr
aaa
inc
lahf
arpl
shlb
pop
in
mov
inc
lahf
idivl
or
push
jb
add
xchg
stc
packuswb
sub
popa
mov
mov
ficoms
add
shrb
pop
roll
popf
sarb
ja
clc
xchg
xchg
loope
repnz
adc
dec
jns
repnz
push
mov
std
loop
test
pop
fstl
mov
test
in
add
add
gs
stc
adc
mov
inc
add
xchg
fstpl
xchg
sbb
stos
sbb
inc
fstpt
lcall
dec
fldenv
stc
std
inc
out
cld
add
cmpsl
and
in
iret
push
lea
idivl
pop
ljmp
mov
hlt
jno
in
jne
mov
test
inc
jmp
or
jb
data16
not
inc
cmp
and
decl
push
popf
inc
xor
mov
cmpsl
mov
pop
mov
sub
stc
or
fadd
push
vmovshdup
test
int3
sub
icebp
sub
or
mov
out
xchg
push
ficoms
xchg
adc
adc
popa
mov
mov
or
mov
fdiv
add
jo
lret
sbb
lcall
jb
mov
adc
js
push
fsubr
inc
push
aad
repz
add
sub
decb
les
sub
mov
jl
push
test
jecxz
mov
push
jnp
fwait
out
ss
inc
stos
test
in
es
xor
inc
jl
xor
out
mov
jge
pop
sti
daa
sbb
push
xchg
sub
ficoms
push
push
jmp
in
or
cmp
mov
sub
cltd
mov
or
mov
cmp
jb
lock
dec
adc
jae
push
in
lds
in
outsl
add
jae
pushf
mov
test
mov
test
mov
fdivrl
mov
lgs
cmp
push
pop
cmp
cmpsb
cltd
sbb
xor
or
dec
ljmp
jnp
mov
mov
bound
mov
insb
inc
cltd
decb
jmp
and
cltd
int
cld
or
imulb
push
pop
cmp
dec
inc
sti
dec
orb
sub
sub
cmc
sub
js
aad
rol
and
movb
jo
inc
pop
into
dec
das
out
paddsb
cmc
push
ret
and
imul
cmpsl
jbe
sub
sub
push
xchg
mov
sbb
and
jmp
lret
mov
mov
sti
xchg
pop
jns
fxch
mov
ds
adc
mov
aas
jecxz
dec
lds
jle
and
xor
je
outsb
push
cmpsb
call
stc
mov
cmp
pop
and
adc
mov
jne
xchg
das
sbb
scas
mov
int3
lret
push
xor
xchg
mov
test
jns
adc
lahf
stos
in
inc
scas
xor
fcmovne
lock
in
lea
mov
bound
dec
sbb
adc
inc
hlt
inc
in
xor
pop
and
lds
out
insl
mov
movsl
jno
iret
adc
arpl
rcr
pop
jno
add
adc
adc
inc
shlb
lods
mov
test
gs
clc
jp
xor
loope
xchg
inc
ficompl
jb
and
or
movsl
and
xchg
adc
adc
adc
mov
xor
inc
mov
popl
push
mov
fs
push
lahf
dec
inc
add
xor
xlat
popa
fwait
mov
add
lods
in
pop
push
push
adc
adc
adc
scas
loopnew
jb
cmp
xchg
xchg
dec
pop
xchg
in
inc
mov
cmp
rolb
mov
cmp
and
sub
xchg
xchg
mov
mov
stc
test
outsl
and
cmc
pop
sarl
in
clc
mov
adc
fs
pushf
insl
mov
dec
test
filds
inc
xchg
leave
fildll
mov
sar
sbb
fsubs
xor
and
inc
out
sub
push
les
mov
xor
add
popa
cmp
dec
mov
cmc
out
xchg
adc
push
sti
gs
ljmp
lds
mov
or
leave
inc
repnz
mov
sbb
pop
decl
mov
cli
inc
mov
lahf
push
jmp
out
xchg
xchg
push
xchg
stos
fcos
dec
cmc
lods
cmp
mov
sbb
js
fadd
mov
push
mov
jle
adc
out
repz
fildl
lods
push
sahf
jmp
into
out
dec
cmp
lcall
mov
outsl
repz
movsb
push
out
cmp
adc
loop
jae
xchg
repz
mov
dec
add
clc
adc
mov
mov
sub
cli
nop
sub
out
bound
xchg
add
cmp
xchg
dec
mov
xchg
cmpsl
das
xchg
cmp
or
adc
cmp
pusha
lock
mov
les
or
cmc
sbb
cltd
jb
dec
stos
inc
test
outsb
stos
sub
and
mov
and
sub
push
psubusw
cli
adc
push
movb
jae
mov
stos
mov
xor
pop
adc
xchg
dec
xchg
data16
fadds
repnz
decl
lea
mov
shrl
xor
xor
mov
stos
mov
add
out
jp
push
pop
fistl
fistpll
ret
and
pop
testb
std
lock
sbb
sbb
jl
xor
sbb
xor
mov
dec
int
call
aas
sbb
pop
xor
movsb
cli
inc
adc
dec
cltd
pop
sub
test
dec
sbb
sbbb
or
or
into
imull
and
ret
jbe
adcl
sub
and
adc
arpl
and
fstpt
pop
bound
sbb
cltd
enter
fsubp
inc
sbb
cmp
ret
and
jb
loop
xor
xchg
xchg
inc
dec
add
loope
push
das
hlt
sbbb
xorl
jo
movsb
stos
aad
dec
fwait
xchg
jmp
test
xlat
adcb
xchg
pop
iret
cld
mov
rcr
aas
push
mov
sbb
dec
jle
add
fwait
mov
add
clc
sbb
xor
mov
cltd
sbb
imul
les
or
xor
mov
cmp
and
shl
out
jbe
rcll
fs
out
clc
adc
loope
in
sbb
ss
subl
cmp
aaa
adc
pop
hlt
cmp
add
int3
or
mov
insb
and
fs
es
jae
in
lea
pushf
mov
dec
dec
subb
add
loopne
xchg
push
int
xchg
je
nop
jle
loop
icebp
fisttps
sub
inc
xor
sub
cltd
adc
pusha
fimuls
xchg
in
hlt
mov
adc
sbb
sub
xchg
sub
into
dec
data16
jge
mov
push
mov
xchg
jno
test
cmp
jnp
xor
popl
ds
dec
sub
xchg
insb
push
cs
jae
push
push
adc
add
mov
pop
into
popf
int
addl
jmp
mov
loope
shl
xchg
push
out
or
cmp
inc
and
adc
fwait
jnp
sbb
cld
pop
aas
mov
adc
mov
aas
lcall
cmpsb
jbe
repnz
xchg
mov
push
jae
jno
test
mov
adc
test
xchg
loopne
mov
xor
lea
hlt
jmp
mov
xchg
cmovle
push
pop
push
icebp
sbb
insl
into
mov
and
mov
stc
sbb
in
mov
pop
xchg
movsl
loope
movsl
imul
mov
or
pop
int
mov
push
pop
mov
push
stos
scas
repz
addl
xchg
xor
bound
and
aas
sub
test
lahf
test
mov
or
push
fmull
cmp
push
jge
mov
mov
addr16
inc
jg
iret
adc
mov
jle
enter
or
out
pop
mov
inc
xorl
fimuls
mov
fs
aam
lock
cs
mov
push
nop
dec
jle
inc
cli
clc
xchg
sbbb
mov
mov
unpcklps
push
pop
movsb
dec
jns
pop
popf
lea
inc
sub
jnp
pop
adc
out
lahf
fwait
mulb
cmpl
mov
mov
xchg
aad
add
jno
lods
inc
rcll
ret
movsb
adc
enter
popl
xor
sbb
rcl
lock
jnp
mov
xchg
aad
push
outsb
push
out
jnp
or
inc
out
mov
or
pop
mov
or
jle
rolb
pop
shr
fiaddl
mov
mov
mov
mov
aaa
xchg
sbb
jae
fidivrs
mov
mov
cmp
lret
das
jae
push
mov
jge
mov
push
mov
pop
test
scas
popf
pop
iret
mov
and
push
mov
lods
shl
jnp
lahf
mov
sahf
lods
lcall
inc
in
cmc
stos
lret
shlb
test
fs
jae
add
outsb
mov
xchg
push
inc
divl
or
mov
scas
aam
inc
jge
test
and
gs
and
cmp
sbb
mov
fs
loop
loope
imul
sbbl
inc
and
imul
std
outsb
ret
test
sahf
scas
or
je
js
outsl
lahf
adc
fmul
loop
clc
je
jae
repnz
mov
pop
pop
dec
xchg
nopl
lret
loope
mov
xchg
jmp
loope
add
mov
xor
mov
pop
faddl
push
dec
mov
xlat
push
mov
pop
lds
or
outsb
sub
repz
jl
gs
jg
test
andb
or
xor
sub
inc
pop
fs
in
push
daa
mov
scas
repnz
jns
mov
sub
push
xchg
add
idivl
sub
leave
jg
push
lods
lods
loop
cmpsl
popa
sbb
outsb
popf
jno
dec
dec
aam
lds
pop
mov
sahf
mov
cmpsl
dec
adc
fs
xlat
sbb
lret
or
mov
xor
push
xchg
pop
insb
dec
flds
sub
push
ret
or
push
adc
pavgw
sbb
cli
mov
fs
xchg
add
jge
test
mov
aaa
sbb
adc
mov
xchg
sub
sbb
incl
or
cld
int3
ret
add
pushf
sub
shll
jl
jo
mov
xchg
insl
test
call
lds
mov
cmp
lret
add
push
in
stc
nop
jle
pushf
push
fnstcw
fxtract
out
jns
jmp
jno
jne
sbb
push
pop
push
ficompl
imul
pop
xchg
movsb
xchg
mov
es
in
scas
sbb
fisubrl
icebp
cmp
cld
pop
push
imul
leave
bound
loope
push
jge
insb
insb
push
in
pop
int
mov
scas
inc
shld
xchg
mov
scas
mov
into
sahf
popf
sahf
daa
adc
rcll
inc
jae
sbb
jmp
out
fwait
dec
and
and
cmp
in
jb
mov
xor
cmp
inc
jno
int
push
cltd
pop
cli
xchg
nop
mov
cmpsb
inc
xor
sub
hlt
mov
sub
mov
pop
stos
imul
int3
mov
fwait
mov
loope
popw
cmp
sub
jbe
add
add
sub
pop
inc
ror
adc
pop
add
sbb
adc
jns
mov
mov
fistpll
es
mov
les
mov
sbb
push
out
xor
dec
insb
rcll
mov
mov
arpl
movsb
lahf
mov
lds
cwtl
cld
loop
dec
call
mov
push
loop
mov
jo
cs
pop
in
dec
mov
cmp
inc
push
push
adc
cmp
call
aam
push
mov
xchg
adc
and
pop
sbb
std
insl
sbb
test
xchg
sti
fsubrs
nop
mov
lcall
repnz
xorb
jnp,pn
sahf
jns
popf
jne,pn
xlat
pop
mov
mov
cmp
xchg
mov
arpl
std
xchg
mov
xchg
pop
add
js
aaa
push
out
ret
jnp
lret
sbb
mov
mov
fs
push
mov
sbb
sahf
sub
popl
loope
mov
mov
jns
roll
test
aam
mov
outsl
loope
adc
and
subl
and
xchg
fcmovbe
outsl
mov
add
inc
lods
fiadds
ss
mov
push
xchg
adc
cmp
mov
dec
loope
aad
push
sbb
xor
cld
push
das
pop
push
popa
vmovdqa
push
adc
push
mov
test
and
pop
mov
loope
and
pop
lea
xor
pop
test
nop
push
push
sti
and
aaa
mov
pop
adc
sbb
push
jp
pop
jnp
dec
stos
js
mov
xchg
inc
psllw
xchg
dec
cltd
cmp
fwait
in
daa
cwtl
add
mov
test
mov
mov
mov
xor
sbb
pushf
adc
lods
insl
mov
sub
daa
push
and
sbb
push
inc
cmc
sbb
rclb
xor
xor
leave
loope
std
cmp
inc
push
lcall
or
addr16
pop
inc
xchg
movsl
add
sbbb
sti
mov
sub
loop
in
fdivl
sub
inc
popa
mov
movsb
nop
std
ljmp
sub
inc
aam
fistps
repz
pop
inc
mov
imull
cld
imul
mov
int3
sub
in
loope
push
cmpsl
push
jecxz
movsb
and
xor
dec
mov
adc
cmc
in
and
fnstenv
push
jb
ret
fdivrl
or
sub
les
int3
enter
inc
and
push
or
push
repz
xor
pop
mov
add
lock
adc
popf
sub
dec
mov
push
lahf
adc
test
cmp
aaa
js
dec
and
loopne
push
mov
test
addr16
push
test
dec
out
push
xor
mov
mov
cmp
bound
pop
sbb
ja
inc
aad
xor
mov
mov
sub
into
test
in
adc
movsl
ds
loopne
outsl
pusha
cmpsb
mov
add
stos
je
cli
jg
outsl
dec
xor
cs
test
mov
push
pop
rcl
test
cmpsl
xor
aaa
orb
xor
xor
jl
push
pushf
mov
pop
inc
clc
sbb
dec
mov
aaa
cmp
shll
jne
cmpsb
cmp
push
pmullw
hlt
and
cltd
sub
lds
inc
ret
mov
push
daa
push
fs
insl
daa
cmpsb
dec
jp,pt
dec
push
test
xchg
jl
loopne
push
pop
stc
jb
stos
mov
adc
in
outsb
out
shl
add
mov
xor
pushf
xchg
inc
js
ret
test
pop
cmp
int
outsl
hlt
int3
mov
in
sbb
arpl
xchg
in
stos
cmpsb
jbe
pop
mov
insl
jnp
cli
pop
stos
pusha
pop
xchg
push
xchg
xchg
loop
mov
push
pop
or
xlat
xor
mov
sub
ret
push
daa
fisubl
cmp
or
in
mov
loop
pop
daa
cli
cmp
dec
lds
and
jns
mov
aam
test
lods
pop
pop
pop
jecxz
imul
repz
xchg
out
cmp
mov
sub
call
adc
mov
shl
or
and
shll
outsl
xor
cmp
mov
cmp
sbb
lods
mov
inc
cmp
dec
std
push
sbb
xchg
inc
push
ret
lods
cmc
into
cmc
add
push
or
or
pop
xchg
in
mov
mov
jge
jg
scas
xor
and
lock
lret
popf
lret
pop
test
mov
pop
pop
or
inc
push
vcmpss
iret
xchg
xor
mov
mov
mov
repz
fistpl
xor
mov
pop
push
or
sbb
push
or
dec
aas
or
adcb
mov
and
lcall
inc
and
scas
inc
mov
mov
ds
pop
lcall
jae
push
sbb
in
push
mov
sub
mov
sub
in
cmp
repnz
int3
pop
pushf
dec
jp
pop
test
lret
icebp
mov
or
insb
pop
push
inc
mov
xlat
add
aaa
inc
xlat
sub
sahf
lods
mov
lret
add
ret
aaa
mov
out
cmp
shrb
stc
sbb
iret
sbb
sbb
ljmp
push
pop
sbb
fcmovbe
mov
fucomip
stos
inc
push
call
testl
add
mov
mov
sub
mov
xor
rcrb
sbb
setae
aad
mov
push
bound
fisubrs
loop
pop
fisttps
fwait
das
jmp
cwtl
lgs
push
pop
sub
mov
pop
cwtl
add
push
lea
or
lods
inc
pusha
fnstenv
inc
xor
jb
mov
movsl
roll
repnz
test
inc
ficoml
adc
push
mov
push
sub
out
add
test
aaa
sbb
into
xchg
pop
sbb
aam
push
push
iret
popa
shll
outsb
dec
scas
lret
fwait
iret
push
icebp
adcl
rcl
iret
pop
mov
in
pop
inc
insb
cltd
ss
call
push
enter
jo
dec
scas
in
jge
sbb
jns
pop
mov
push
leave
sbb
call
popa
test
push
inc
xor
les
pcmpeqd
mov
sub
cwtl
loopne
jns
and
rclb
cmp
test
mov
icebp
loopne
test
lea
push
andl
pop
cmpsb
mov
inc
call
or
imul
loope
cld
push
loop
push
sbb
jb
pop
rolb
mov
adc
cmp
aas
es
out
mov
push
movsl
lock
shrl
jb
mov
add
push
rol
and
jnp
xor
pop
dec
sbbl
xchg
cmp
add
mov
aaa
movsb
clc
stc
in
ljmp
scas
jmp
pop
aam
daa
pop
pop
pop
jbe
and
and
push
adc
mov
push
push
aas
lock
out
sbb
pop
mov
outsb
adcb
in
mov
test
sbb
daa
mov
xchg
push
mov
test
mov
mov
or
mov
cmp
xchg
mov
js
idiv
cld
out
sub
add
and
sbb
jbe
enter
add
nop
xchg
inc
push
lods
dec
mov
clc
inc
push
out
fwait
mov
dec
in
jg
repz
cmp
xlat
lods
shl
mov
ja
sbb
ja
into
loop
inc
arpl
pop
cmp
xchg
push
jmp
xlat
mov
push
xor
inc
xor
push
outsl
sbb
mov
and
jae
cmp
jmp
lcall
xchg
push
ret
inc
sbb
push
cwtl
dec
push
inc
mov
pop
enter
pop
roll
in
push
test
push
adc
pusha
jnp
shlb
daa
xor
shrb
xor
inc
addr16
sbb
loop
test
shl
mov
fimuls
xlat
inc
ds
insb
out
fistpll
or
in
xorl
or
push
and
pop
sti
or
mov
lret
sub
mov
std
sub
and
cld
cmpl
out
repz
loope
testb
outsb
jne
and
inc
lock
mov
fs
clc
imul
out
inc
push
ja
xor
sti
imul
out
fsub
out
stos
pop
stc
inc
and
cmc
aas
stc
cmp
jmp
xchg
sub
popa
or
jo
outsl
cmp
fisubl
int3
mov
sub
cwtl
ljmp
mov
cmp
xchg
gs
sahf
cwtl
dec
or
push
mov
adc
xchg
sbb
stos
mov
adc
jae,pt
into
push
sarb
lock
jbe
add
int3
lea
push
es
pop
jbe
shl
loopne
int
inc
fidivrs
in
cltd
in
xchg
in
xchg
movsl
pop
lea
ss
rcll
cli
mov
call
xchg
rorl
dec
fld
lret
cmp
ret
stos
fs
cmp
ja
cmp
add
adcl
mov
push
adc
jae
jl
clc
jno
xor
sti
shrb
and
loope
lods
xor
inc
ja
call
loope
pop
pushf
xor
movsl
ud2
daa
in
cmpl
movsb
pop
dec
ret
bnd
das
push
clc
mov
fcoml
cmp
hlt
jo
nop
cli
push
cmp
stos
mov
sahf
mov
ja
mov
out
or
into
pop
sub
std
ss
jbe
cmp
cmc
ja
push
mov
push
mov
inc
mov
or
sbb
popa
sbb
jbe
sbb
inc
std
add
inc
gs
jmp
push
mov
nop
insb
sub
dec
and
shrl
arpl
inc
push
xor
mov
movsl
add
mul
lock
jmp
insl
mov
mov
or
fldl
clc
pop
sub
or
inc
mov
dec
and
cmp
jecxz
add
sub
dec
xor
ss
or
jp
sbb
inc
or
shl
pusha
inc
fucomp
repz
ss
out
or
out
and
incb
je
fs
jg
in
aaa
outsb
mov
and
ss
adc
repz
mov
lcall
jp
add
sub
std
mov
repz
sti
jl
pop
cmp
ret
cmp
lret
sub
sbb
push
mov
mov
xchg
daa
sbb
sarb
inc
mov
fptan
sbbl
sbb
and
jb
sub
cmp
gs
sub
dec
sub
dec
into
pusha
out
xor
sbb
out
aaa
inc
dec
js
cmp
repz
adc
lret
mov
jl
jno
mov
sub
pusha
inc
sub
dec
mull
cwtl
repz
and
jecxz
xchg
mov
repz
cmpxchg
cmp
mov
jbe
ret
repz
mov
dec
cmp
jns
mov
mov
mov
cmp
dec
mov
sbb
es
pop
push
xor
popf
mov
frstor
jbe
push
and
scas
lods
decb
lds
aam
or
push
mov
push
movsb
icebp
dec
js
pop
outsl
daa
pop
test
mov
sub
jmp
jl
test
add
pop
iret
mov
lds
in
orb
pop
jbe
rcrb
fildl
in
mov
jno
lcall
leave
fsub
dec
rclb
cmp
mov
test
dec
mov
xor
cmp
imul
jge
mov
mov
addr16
movsl
dec
cmp
sarb
mov
mov
es
idiv
dec
in
arpl
mov
and
adc
into
out
cmpsl
in
push
test
ret
testl
cmc
and
insb
mov
dec
cmp
add
jmp
imul
push
push
and
jp
or
pop
mov
inc
fwait
mov
lock
gs
mov
repz
jne
mov
jo
and
pop
jle
pop
sbb
xor
test
rcrb
stos
cmp
mov
imul
hlt
xchg
outsb
mov
cld
ret
rol
outsl
mov
mov
ficomps
movsb
or
mov
or
dec
movsl
cltd
inc
mov
sbb
xor
xchg
inc
push
inc
rorl
or
adc
inc
pop
push
and
arpl
in
mov
xor
xchg
cwtl
out
pop
xchg
adc
sbb
std
mov
mov
pop
xchg
dec
out
adc
add
call
push
sbb
jne
lods
cmpsb
mov
in
popf
xchg
dec
sbb
mov
xchg
pop
mov
int
xchg
jb
sbb
jecxz
dec
decl
inc
popf
lahf
pop
sub
push
push
cmp
ret
rorb
stc
cwtl
pop
cmpsb
xchg
clc
jg
xor
rcll
movsb
push
sub
cwtl
push
jge
sub
test
scas
xlat
daa
dec
out
or
lods
rcll
add
and
add
test
jecxz
stos
pop
ror
sbb
push
divb
rclb
mov
popa
mov
arpl
test
test
or
js
orb
jecxz
aaa
nop
lds
or
or
inc
pop
inc
ljmp
lahf
scas
popa
pop
ret
iret
push
jecxz
push
sbb
enter
xor
push
cmp
inc
sub
in
jmp
pop
insl
xchg
mov
mov
insl
enter
out
test
inc
gs
int3
jnp
and
sub
sarl
lock
aam
mov
mov
sub
sarl
imull
and
call
mov
in
jp
sub
push
outsb
lea
jge
xchg
mov
mov
inc
js
test
mov
loopne
mov
data16
leave
faddp
es
mov
mov
hlt
aam
cmp
test
or
pusha
sbb
adc
loopne
fldcw
and
sub
or
cmp
in
insl
cmp
in
shll
mov
sbb
jae
sub
orb
pop
push
movq
mov
divb
aas
push
pushf
data16
sub
dec
and
out
mov
clc
gs
packuswb
dec
in
int
fisttps
xor
xchg
mov
scas
in
push
mov
rcrb
sbb
jne
push
cmc
jbe
mov
cmp
stos
sbb
add
sub
fsubr
sti
in
adc
cltd
jae
sbb
sti
ret
js,pn
and
add
cmpl
sbb
repnz
imul
cmc
ss
pop
lds
out
sti
shrl
or
adcl
xor
and
aad
dec
fsubp
mov
mov
not
cmp
mov
mov
loopne,pn
fidivl
aad
sbb
cwtl
ret
jg
sub
sub
je
add
stos
jo
outsb
shlb
mov
mov
imul
sbb
sub
mov
testb
loope
pop
leave
sub
fsubp
or
mov
int3
add
cmp
cmpsb
pop
js
push
addl
js
and
cmp
cmc
nop
test
mov
mov
lret
roll
fwait
cmp
out
xchg
outsb
mov
xchg
mov
push
rolb
sarl
mov
out
rcrb
cltd
lea
mov
and
pop
imul
dec
shll
shl
lock
mov
icebp
stos
add
mov
adc
xor
sbb
popa
add
mov
mov
test
mov
ror
dec
mov
mov
scas
out
xlat
into
out
push
jno
sub
add
enter
xchg
jae,pt
xchg
push
push
push
pop
jmp
sub
mov
push
lea
icebp
fnstsw
xchg
xlat
repz
push
shlb
cmp
inc
outsb
in
cs
push
and
jmp
add
mov
rorb
dec
lods
scas
cmpsl
mov
mov
fsin
mov
fucom
into
mov
nop
cld
in
aad
shrl
jnp
mov
sbb
mov
lock
and
and
pop
ret
test
jmp
pop
xchg
dec
adc
push
gs
cwtl
fildl
push
mov
mov
push
push
add
jmp
jne,pt
xchg
insl
cld
xchg
or
into
mov
or
xor
es
mov
jne
push
jle
loope
sub
push
xchg
dec
xchg
leave
in
xchg
push
dec
data16
outsl
push
insl
xlat
or
sbb
push
fsubl
nop
mov
movsb
sti
xchg
popa
push
std
icebp
pop
mov
xchg
dec
push
jno
mov
and
mov
enter
lahf
cwtl
push
arpl
das
sbb
in
mov
mov
cmp
jo
cmp
cmp
lods
push
int3
aaa
fcomps
jns
jmp
mov
push
jle
into
fwait
xor
jo
pusha
jns
imul
repz
cmp
sbb
popf
lcall
cmp
xor
inc
and
mov
pop
bound
inc
and
mov
aad
in
mov
or
fwait
or
xchg
insl
sahf
sbb
sbb
adc
xchg
in
rcrb
cwtl
lret
jge
jbe
inc
sbbl
fisubrl
pop
mov
adc
sti
ds
sbb
jmp
adc
lret
mov
pop
int3
xchg
testl
stos
mov
dec
stos
je
ss
pushf
mov
call
clc
sbb
sub
sbb
inc
clc
aad
cmp
xor
pop
jl
bound
xor
inc
shl
mov
mov
cmpl
dec
add
int
imul
jmp
insb
xchg
mov
dec
adc
addr16
adc
gs
hlt
rcll
adc
or
imul
mov
popf
and
pop
lcall
aas
pop
mov
enter
cmp
mov
jl
int3
imul
out
adc
mov
hlt
arpl
push
jl
jl
sub
data16
lock
add
mov
and
inc
xchg
xchg
sbb
push
cli
repz
adc
lahf
into
jecxz
movsb
or
pop
cmp
pop
dec
mov
jo
dec
aam
loope
decl
jne
push
shl
cmp
popa
roll
sti
mov
movsb
jmp
clc
jge
sub
push
mov
cli
push
in
inc
out
and
scas
dec
loopne
jno
fst
mov
mov
jmp
test
cmc
fldcw
in
mov
repnz
mov
inc
and
mov
shll
orl
xchg
adc
push
push
adc
dec
div
mov
push
movsl
aas
cmp
jp
ret
and
shlb
jmp
in
ds
jnp
mov
push
sete
mov
adc
js
in
xchg
xchg
jmp
popf
xor
add
jb
mov
jnp
test
in
dec
push
push
add
jno
xor
xor
cmp
cwtl
in
sub
mov
cld
mov
es
insb
xor
jbe
into
repnz
fildll
stos
sti
xchg
fcompl
push
ret
es
sti
sub
sub
adcb
andb
push
sbb
fiaddl
fistl
inc
ds
or
xchg
cltd
adc
negb
ret
push
in
xchg
adc
and
out
rcrl
lret
push
mov
and
in
inc
push
and
or
sub
lea
add
jmp
decb
in
ljmp
inc
mov
lea
mov
pop
push
das
mov
outsl
push
jl
in
dec
fwait
cmp
test
dec
insb
popa
and
sbb
sub
adc
jmp
adc
xor
jnp
stos
mov
push
je
jmp
out
pop
cmpsb
mov
xorb
push
aas
dec
mov
popa
adc
push
adc
mov
rcrb
push
mov
mov
inc
inc
or
xor
fimull
testl
mov
pop
and
loope
xor
stos
pop
pop
inc
xor
mov
pop
and
or
and
or
notb
mov
fisttpll
pop
push
orl
int3
and
and
imul
clc
ja
and
testb
cs
inc
out
mov
xchg
xchg
jb
add
sub
mov
das
cmc
mov
add
lahf
dec
cmpsb
movsl
int
nop
pop
gs
cltd
pop
pusha
mov
stc
mov
push
fnstenv
add
es
jg
out
inc
or
in
repnz
add
stc
sub
pop
xchg
lea
jge
sub
mov
jb
fs
sbb
loopne
mov
jbe
inc
sub
pop
aad
push
push
mov
add
xchg
xchg
int
jne
mov
dec
les
push
mov
cmp
jno
repnz
lcall
mov
cwtl
stos
mov
ljmp
mov
push
xchg
enter
in
rol
xor
ret
ret
add
scas
inc
adc
icebp
sub
bound
scas
sub
rcll
jecxz
pop
pop
xchg
sub
fistps
mov
lahf
imul
or
xchg
out
insl
push
repnz
dec
xchg
rcr
sbbl
out
movsb
dec
jno
mov
aam
mov
shl
jae
dec
mov
rorl
int3
mov
pop
adc
sub
lods
dec
cltd
stc
popa
or
mov
sub
lret
pop
cmp
mov
cli
arpl
and
mov
xor
inc
add
dec
loop
mov
js
jae
rclb
jns
arpl
mov
shl
rolb
ljmp
mov
or
loop
sub
ja
inc
ljmp
pop
pop
std
xchg
jns
scas
in
pop
int
cmpsl
imul
test
in
jp
fistl
int3
push
mov
push
jns
imul
ret
ljmp
test
jns
std
xchg
test
pop
mov
inc
popa
int
mov
leave
pop
jns
pop
sarb
pop
scas
fdivrs
ret
stos
and
mov
add
or
dec
jmp
mov
movsb
jnp
sbb
repz
sub
cs
paddd
mov
les
mov
mov
inc
mov
or
push
mov
push
sbb
or
fsub
dec
adc
pop
or
pop
mov
or
sub
dec
jp
mov
out
mov
adc
add
in
xor
push
or
cli
push
pop
jmp
mov
xlat
insb
sti
repnz
push
sub
jno
sti
pop
dec
mov
ret
and
aas
sub
mov
ror
and
fadd
ss
xor
and
push
mov
rclb
mov
dec
cmp
or
or
aaa
jecxz
aas
int3
fmul
stc
mov
iret
mov
loopne
cmpb
inc
arpl
imul
jne
movsl
add
into
dec
pop
inc
shll
mulb
in
and
test
push
jmp
addr16
jmp
adc
stos
inc
adc
fsubs
das
arpl
sbb
or
loop
cmp
shrb
stc
cli
aaa
out
shl
mov
add
bnd
mov
xor
push
stc
mov
xchg
cld
aad
je
jnp
jg
test
arpl
stos
mov
mov
imul
mov
pusha
xchg
mov
fs
gs
jl
gs
mov
pop
sbb
mov
mov
fstl
mov
pushf
dec
and
cmp
popf
dec
add
adc
das
lcall
in
movsl
out
add
push
imul
sub
outsb
jno
dec
jne
push
mov
sbb
mov
jno
adc
push
add
mov
ss
fdivl
cmp
out
ds
xor
fcoml
inc
push
fstp
mov
adc
pop
mov
aaa
mov
and
push
xchg
fmull
mov
repnz
sbb
sbb
sub
add
shufps
push
insl
add
xchg
stos
enter
jmp
mov
aaa
mov
sub
sbb
cmpsb
cmp
mov
push
xor
xchg
pop
xchg
int3
call
adc
ds
jb
xchg
and
adc
sbb
lods
bound
mov
lea
into
inc
rorl
daa
out
mov
or
adc
iret
xchg
notl
xchg
addr16
xchg
jns
das
int3
imul
leave
jne
das
adc
rclb
repz
data16
imul
jmp
test
iret
adc
or
test
fldcw
xchg
lock
insb
sub
imul
ret
adc
arpl
and
mov
push
jmp
int
push
out
or
mov
adc
mov
push
inc
xchg
fsubrs
subb
push
jmp
cmc
add
push
mov
and
mov
shlb
jno
insl
jmp
push
bound
mov
and
fs
lcall
outsb
push
pop
jmp
sbb
pop
ret
repz
rcl
mov
andl
pop
movsl
pop
bound
mov
stos
push
sub
dec
mov
rorl
js
pop
divl
mov
push
imul
jnp
ljmp
push
xchg
cmpb
or
jl
and
xchg
jmp
xchg
std
fs
pop
arpl
xchg
push
stos
lret
fwait
pusha
jns
cltd
lret
mov
xchg
mov
je
out
in
inc
iret
xor
push
fsubrs
mov
cmp
popf
lcall
adc
xor
xchg
fcmovb
pop
lods
mov
inc
mul
test
cmp
out
in
fmull
push
jl
call
in
and
or
aam
out
into
pop
lahf
mov
xchg
cmp
mov
add
mov
lods
pop
mov
push
sub
nop
imul
cwtl
dec
pusha
xor
loopne
cmp
cmp
fmull
lret
arpl
mov
mov
fwait
push
xchg
xchg
test
loop
dec
scas
leave
sub
sub
mov
mov
pushf
sahf
outsl
cmp
sub
push
and
mov
push
or
xchg
scas
lods
inc
mov
mov
jle
jo
xchg
das
sub
inc
push
and
cmp
loop
and
test
scas
xchg
add
int3
mov
push
xor
cmp
cmp
cld
push
xchg
aaa
mov
into
jge
push
lret
and
mov
jno
je
mov
cld
loop
cs
xlat
into
dec
mov
shll
pop
sub
aam
xchg
lock
pushf
xchg
pop
jp
stc
sarb
sti
jns
mov
push
pop
rcrb
arpl
adc
cmp
dec
cwtl
jnp
push
push
ja
mov
sub
das
mov
cmp
xchg
into
lret
mov
jns
out
vaddpd
jle
enter
cli
sub
pop
mov
push
or
ljmp
mov
sub
std
movsb
pop
mov
test
popa
stos
mov
dec
add
hlt
mov
mov
adc
les
and
icebp
mov
mov
inc
cs
sub
push
outsb
mov
stos
repnz
lret
adc
cmpsl
push
gs
mov
or
ja
test
mov
das
testl
inc
sub
out
fldenv
dec
mov
lock
call
outsb
sbb
into
pop
mov
pop
fisubrl
mov
mov
cmpb
or
push
push
jmp
lea
dec
dec
dec
inc
push
fucomp
stc
push
xchg
ja
jp
sahf
subl
fmul
pop
rcl
push
scas
cmpb
test
jae
adc
faddl
scas
fxtract
ja
lret
mov
sub
clc
dec
mov
dec
jb
xchg
mov
cs
test
insl
aas
repnz
aad
adc
push
mov
xchg
pushf
push
into
lahf
fsubrs
stos
int3
icebp
aad
and
sub
add
sahf
dec
cmp
test
sub
clc
adc
aaa
int
adc
rcll
or
shrl
das
cmp
in
xchg
push
dec
movsb
and
insb
sub
insl
enter
cmpsb
jno
pop
ja
cmpsl
mov
fbld
mov
inc
pop
cmpsb
inc
adc
xlat
and
and
adc
cmpsl
cmp
arpl
sub
fsubl
mov
xchg
adc
fildll
add
push
push
jne
xor
cmp
or
int3
mul
lahf
adc
add
pop
pop
pop
hlt
dec
arpl
jl
sbb
ljmp
fsubrs
ds
test
adc
xor
in
dec
fincstp
outsl
pop
jo
mov
pop
pop
js
clc
out
add
add
mov
dec
aaa
jae
pop
lahf
mov
dec
out
push
add
cltd
imul
idivb
jae
sub
adc
mov
cmp
push
pop
inc
imul
push
and
int
lcall
mov
dec
insb
or
push
scas
cmp
incb
int
rcll
cmp
jbe
or
mov
pop
sti
mov
mov
mov
insb
int
xor
loop
adc
add
push
fsubr
cmpsb
fwait
mov
mov
je
mov
xchg
fwait
push
mov
les
sbb
inc
mov
jp
cltd
cmpsb
and
arpl
cmovb
mov
fcomps
jno
fwait
push
cmp
cmc
push
mov
lods
aam
mov
push
daa
push
push
in
add
test
aas
pop
xchg
sub
mov
xchg
out
loopne
adc
pusha
mov
dec
sub
push
iret
dec
sbb
arpl
inc
xor
inc
mov
add
jns
mov
xchg
mov
in
mov
mov
mov
xchg
pusha
lret
rcrl
dec
jecxz
mov
cmpsb
xchg
sub
or
aad
out
enter
adc
xchg
loop
mov
xchg
xchg
or
insb
lods
jmp
push
jne
xchg
or
and
xor
fwait
pop
jnp
call
inc
mov
jl
mov
clc
sub
inc
cwtl
adc
out
mov
xlat
mov
pushf
insb
lcall
dec
stos
lcall
and
shlb
jno
or
pop
ljmp
rcll
aas
jne
and
ja
icebp
mov
stos
push
dec
inc
adc
or
faddl
cmc
dec
js
jecxz
out
xor
enter
jecxz
lcall
mov
in
adc
and
push
lcall
lcall
cmp
mov
or
les
or
adc
gs
or
dec
jmp
testb
rcl
mov
lods
stc
mov
mov
jecxz
jg
push
and
pop
mov
mov
fs
and
or
mov
jg
stc
sbb
dec
jns
ret
adc
addr16
sahf
xor
leave
hlt
pop
fiaddl
xchg
int
push
sahf
mov
add
push
stos
pop
fbstp
jmp
idiv
pop
daa
mov
mov
xor
sbb
ret
mov
push
xor
mov
int3
scas
in
cld
mov
add
xchg
repz
sbb
iret
add
rorl
sbbl
in
sbb
imul
outsl
jle
xchg
arpl
imul
sbb
inc
xchg
daa
mov
xchg
fmulp
call
xchg
mov
xchg
sbb
or
and
xor
cli
inc
or
cmp
sahf
xchg
cmpl
out
inc
and
pop
out
test
repz
sub
ds
sub
inc
adc
sub
les
jns
mov
and
pop
sbb
push
jns
adc
leave
leave
xchg
inc
cmp
repnz
cld
mov
stos
fstpt
iret
out
inc
movl
inc
iret
jp
fdivl
inc
cmp
mov
inc
fwait
in
pop
into
fildl
cli
ljmp
sbb
inc
add
cli
pop
mov
pushf
dec
mov
stos
jns
cld
in
fildl
in
xlat
pop
lret
imul
jb
aas
mov
loop
dec
flds
push
hlt
inc
fsubl
mov
mov
jae
arpl
inc
or
mov
scas
lcall
loopne
pop
ljmp
mov
popa
rcl
add
hlt
dec
add
popf
jl
mov
inc
stos
push
ret
sbb
stos
push
xlat
out
xchg
and
loop
and
push
mov
inc
aad
in
daa
push
cmp
fdivr
inc
jp
pop
sahf
in
test
jbe
mov
outsl
push
jae
push
std
push
dec
dec
fsts
mull
mov
lahf
daa
add
leave
call
inc
lds
push
add
ret
stc
testb
data16
popa
in
fisttps
mov
or
ljmp
faddl
loopne
xchg
mov
lret
insl
ds
mov
pop
sbb
mov
mov
adc
xchg
mov
sub
std
and
decl
aad
xor
in
test
pop
aam
mov
and
ljmp
andl
ficompl
cwtl
mov
rolb
push
iret
or
mov
cmp
div
aas
pop
stos
push
lcall
rcrb
int3
pop
xchg
push
movsb
cmc
xchg
cs
jmp
fisttpll
add
adc
mov
pop
testl
stc
movsl
cld
adc
jle
cmpsl
ss
je
cltd
aam
in
push
xchg
nop
test
push
and
dec
cmovs
bswap
dec
and
pop
pusha
sbb
cmpsb
stos
mov
out
loope
inc
push
adc
stos
mov
cltd
sub
jo
cltd
push
jecxz
xor
mov
jecxz
lcall
out
and
mov
aas
sub
pusha
cld
movsl
movsb
icebp
jno
fwait
dec
jmp
jnp
imul
sarb
xor
mov
popf
stos
cli
loope
shlb
mov
cld
mov
loope
out
cmp
xchg
call
cmp
inc
pushl
loop
lahf
push
icebp
mov
inc
pop
and
cwtl
mov
lahf
sbb
leave
dec
add
mov
sbb
lcall
mov
aad
jecxz
dec
push
and
mov
popf
push
js
cmp
fldl
test
insb
cmp
jl
adc
sbb
lahf
and
test
mov
mov
fsubp
jns
int
fstpl
rorb
js
aam
sub
xor
xchg
fisubrl
in
or
mov
add
jnp
push
in
out
cmp
lahf
pop
sub
adc
add
movsb
xlat
stc
inc
mov
jbe
adc
lcall
adc
ds
and
leave
ds
xor
mov
test
jle
sti
stos
mov
mov
loopne
jmp
cmp
mov
jecxz
aas
push
mov
inc
mov
jle
adc
pop
js
adc
js
cmp
and
xchg
jge
sti
pop
mov
fsubl
lahf
or
aas
aas
mov
repz
mov
mov
pop
add
add
mov
jmp
hlt
ret
out
popl
ret
sub
dec
jecxz
fidivrs
stos
mov
out
std
mov
test
xchg
pop
stos
dec
mov
cmc
mov
bound
mov
pusha
call
ret
pop
insb
cmpb
aaa
frstor
inc
push
cmpsl
ljmp
in
pop
pusha
inc
lret
xchg
jge
bnd
fcomps
xchg
jb
stos
push
sarl
cmp
pop
dec
mov
sbb
pop
into
mov
in
push
lods
sub
xor
hlt
sbb
lcall
mov
nop
mov
sub
add
je
mov
bound
mov
jae
and
push
decb
outsb
push
inc
stos
lret
movsl
or
je
and
mov
inc
movsb
out
sbb
dec
pop
std
mov
inc
push
cld
push
push
fistpl
add
adc
xchg
add
mov
fmull
push
call
lret
jb
mov
dec
pop
mov
and
sub
adc
nop
sbb
add
cmp
test
mov
mov
aas
mov
push
std
mov
gs
stos
shl
cli
dec
fimuls
lods
andb
aaa
test
je
stc
sbb
int3
aaa
inc
fwait
inc
lret
cs
xchg
test
sti
int
insb
daa
jmp
lahf
mov
loope
xor
dec
xor
cmpsl
call
cmp
int
sti
sbbb
pop
ss
lea
push
lahf
sub
pop
gs
and
pop
jae
scas
fs
movsb
cmp
mov
out
cmc
sbb
sub
out
xchg
or
gs
negl
mov
das
out
cmpsl
dec
mov
pop
mov
mov
cmp
pop
rorl
cld
xor
fldl
pop
in
out
popa
bound
call
mov
fadd
pop
lock
test
lods
fsubp
rcl
mov
cwtl
jle
adc
nop
rolb
scas
sbb
mov
adc
pop
pop
fisttps
xor
pop
icebp
movsl
inc
sub
adc
add
rcll
push
sbb
push
or
in
lods
jne
jmp
push
sbb
xchg
je
dec
movb
or
lods
in
cmpsl
push
pop
hlt
xchg
or
mov
push
and
mov
js
mov
or
push
fldenv
data16
sbb
bound
loop
sub
out
popf
xor
xchg
pop
and
xor
std
rcl
lahf
aad
test
rcll
insb
mulps
bound
cmpsb
leave
cmp
les
push
scas
push
or
mov
sub
add
lea
pop
into
mov
sub
push
jno
imul
lock
cwtl
xchg
imull
lods
sbb
or
in
or
je
movb
cmpsb
test
inc
jle
inc
dec
leave
enter
mov
leave
incl
outsb
and
adc
int
jae
not
mov
test
and
pminub
xchg
dec
test
xchg
notb
iret
mov
xor
and
std
gs
mov
adc
lahf
pop
pop
pop
ss
xchg
in
movsb
imul
or
and
jge
lea
and
mov
data16
cmp
pop
fldenvs
mov
mov
add
push
pxor
mov
sbb
sbbl
or
sbbb
push
packsswb
stos
adc
mov
xchg
daa
out
cmp
rcr
rcll
xor
hlt
add
cmp
mov
pop
jg
add
lret
fisubs
fimull
xchg
inc
or
lock
fwait
xchg
mov
xchg
pop
cmp
cmp
and
leave
cli
pop
std
stc
add
leave
sub
pop
pop
jnp
mov
loopne
ficoms
pushf
pop
dec
jae
mov
adc
sbb
dec
cltd
inc
mov
mov
xchg
pop
inc
into
fidivl
cmp
cwtl
movsl
ror
add
cmp
shll
xchg
inc
imul
stos
xchg
rcrb
daa
cmp
mov
inc
dec
lea
fsubs
add
jns
out
jmp
sub
jne
jg
sub
inc
ss
mov
cmpsl
mull
in
scas
dec
into
ficoml
je
jnp
push
mov
mov
addr16
xor
add
sti
arpl
xor
pop
clc
pop
ret
pop
fsubr
jne
mov
mov
idivb
inc
xor
mov
xlat
mov
inc
int
loopne
pop
inc
das
sar
mov
push
loopne
adc
xlat
dec
xor
int3
xchg
iret
ficoms
mov
or
mov
ds
dec
jg
add
je
pop
aam
cmp
faddl
mov
int3
push
movl
push
sar
imul
pop
scas
roll
mov
sub
leave
sarb
pop
dec
cmp
add
mov
dec
sub
fs
aam
mov
xor
fnsave
daa
lret
pop
pushf
cmpsb
sbb
xchg
mov
push
xor
lods
add
mov
pop
test
jns
scas
shll
sub
mov
lds
scas
out
jg
xor
aas
inc
and
cld
rcr
xchg
frstor
nop
xchg
add
adc
sbb
dec
test
sbb
mov
mov
movsb
dec
cmp
mov
rcrl
pop
arpl
vpmacssdd
scas
lret
rorl
mov
add
ljmp
xor
imul
adc
pop
xchg
xor
jne
stos
je
pop
push
imul
mov
in
mov
pop
dec
scas
and
ja
subb
rclb
pop
pop
inc
fnsave
inc
cmp
jmp
xlat
push
std
stos
or
lcall
in
pop
sahf
movsl
cmp
subb
pop
jge
repz
inc
in
inc
fsubs
mov
jo
sahf
dec
pop
xor
int
ficoms
jle
add
adc
ja
cld
mov
pop
and
lcall
cs
movsl
adc
mov
idivl
push
xchg
sbb
push
adc
or
pop
movsb
into
adc
mov
es
and
js
lahf
cmp
lret
repnz
xchg
cmpsl
sbb
sbb
fmulp
xchg
and
ret
push
inc
adc
jo
adc
nop
call
add
icebp
adc
out
icebp
in
addr16
mov
cwtl
subl
and
out
fwait
out
dec
int3
pop
push
in
xor
lcall
sub
sub
mov
jo
sahf
aam
test
test
outsl
bound
inc
dec
adc
mov
jle
inc
std
jo
aam
push
add
mov
dec
pop
out
jno
cmpsb
sub
sbb
sarb
adc
mov
push
add
loop
popf
inc
and
ss
adc
xchg
jecxz
jb
mov
jbe
fbld
add
push
mov
jno
cmp
or
pop
das
bswap
movsb
xlat
mov
incb
inc
inc
inc
je
jl
and
push
test
pop
mov
add
add
mov
cmc
inc
out
hlt
adcl
das
mov
jb
xlat
mov
sub
int
popf
add
mov
cld
mov
adc
outsb
repnz
xor
outsb
mov
jecxz
cmp
push
jbe
dec
adc
lret
jns
mov
int3
cmp
out
cmpl
push
jge
out
or
xchg
cmp
in
test
ss
icebp
add
icebp
hlt
cs
mov
clc
call
repnz
sbb
test
jns
es
sbbb
hlt
inc
push
call
std
testb
int3
fimuls
mov
popf
add
mov
sbb
ljmp
or
sysret
sbb
dec
movsb
bound
mov
lahf
sarb
divl
cmc
sahf
sbb
cmp
push
adc
xchg
je
push
in
andl
fwait
inc
jle
xchg
mov
xor
inc
mov
scas
pop
mov
pushf
jae
outsb
xor
lret
fiadds
je
xor
sbb
add
arpl
dec
insl
out
ss
push
scas
bound
dec
rol
fwait
mov
cmc
xchg
fcmovnb
xchg
sub
insl
ljmp
jecxz
mov
push
sti
adc
bndldx
push
arpl
jb,pn
pop
and
mov
dec
call
mov
adc
cmp
push
imull
out
push
mov
hlt
xor
in
mov
mov
jbe
pop
out
pop
repz
cmp
mov
mov
lcall
adc
and
sbb
iret
mov
fwait
nop
xor
mov
inc
dec
adc
movsl
and
sub
je
sub
add
mov
jmp
xchg
ret
stos
dec
mov
adc
or
cli
popa
cli
add
pop
flds
xor
sub
mov
int3
add
les
scas
jp
lahf
pop
xchg
sbb
mov
test
push
cmp
leave
fimuls
and
cltd
cmp
mov
ljmp
jno
lret
cmp
and
mov
xchg
in
xor
or
roll
pop
movsl
out
sbb
repnz
lcall
xor
xorl
dec
rorl
mov
test
ljmp
pop
push
mov
pushf
repnz
orb
loopne
and
daa
xchg
add
push
mov
iret
aas
mov
int
sbb
pop
mov
stc
cmp
stos
jge
repz
pop
mov
jbe
loopne
gs
push
sub
daa
sbb
jns
loope
push
adc
into
mov
cld
out
mov
int3
clc
hlt
sahf
pop
arpl
add
lock
stos
pop
xor
pop
or
out
jp
adc
sbb
mov
loop
sbb
test
imul
aam
shll
inc
xlat
xchg
mov
jno
loope
pop
cli
imull
shll
stos
dec
in
ljmp
jns
in
and
stos
sub
push
or
pop
repnz
push
lret
adc
jns
loopne
mov
and
pushf
push
jae
xlat
idivb
mov
pop
xor
ss
mov
cli
sbb
dec
xbegin
mov
in
mov
jecxz
sbb
mov
or
jb
push
inc
cltd
pop
mov
fimuls
jne
pop
and
fbstp
sti
mov
jns
xchg
outsl
pushf
in
pop
push
shlb
xchg
arpl
fisttpll
divl
outsl
pop
mov
jbe
jle
lds
push
xchg
popl
cltd
popa
and
mov
cmp
push
push
fstl
sahf
sub
into
sub
dec
data16
jmp
mov
jmp
fidivl
fcompl
movsl
je
sbb
cli
cmpsb
and
test
push
adc
sub
jmp
arpl
popf
inc
decl
mov
pop
in
inc
jecxz
jmp
cmp
jle
out
pop
std
adc
push
push
jns
test
int
add
fsub
test
aas
in
mov
xchg
sarl
push
and
sbb
jnp
inc
rcll
push
xchg
mov
push
jae
jmp
jmp
mov
dec
arpl
fildll
mov
movsl
or
add
and
es
or
xor
inc
loop
insl
inc
xchg
add
repnz
add
xchg
mov
out
fisubrs
sub
fcmovnu
inc
lcall
movsl
xchg
mov
jne
jmp
aas
cmp
inc
mov
adc
lret
es
js
jp
andl
popf
lcall
cwtl
or
pop
and
mov
inc
inc
mov
pop
lcall
and
in
push
push
pop
cmpsl
adc
nop
aad
sar
ljmp
push
lret
std
popf
inc
popa
pop
sbb
popa
inc
pop
or
and
push
clc
mov
repnz
fwait
mov
ja
rcll
es
inc
inc
loopne
repnz
mov
jae
xlat
sub
or
mov
pop
xchg
mov
pop
xchg
jbe
imul
jg
mov
lret
ret
sub
gs
aaa
lds
insb
lea
push
cmpsb
mov
push
adc
lock
sbb
movsl
lods
xor
or
mov
sub
movsl
adc
add
inc
out
lret
cmpsb
test
clc
and
out
jecxz
inc
into
in
neg
rolb
add
sbb
mov
lcall
lea
adc
cmc
jl
jbe
clc
es
push
push
out
cmp
fdivrs
icebp
outsl
pop
test
nop
mov
les
jnp
push
scas
xchg
mov
arpl
js
dec
mov
aad
push
pop
leave
fistl
enter
fst
aas
dec
mov
adc
push
enter
ja
pxor
lds
pop
and
test
aad
jecxz
ljmp
cmp
fwait
dec
bound
xchg
dec
xchg
add
stos
shll
aaa
out
or
pop
or
mov
inc
xchg
add
repnz
jl
jmp
and
subb
in
xchg
test
mov
adc
jnp
mov
mov
les
sbb
mov
bound
jmp
xchg
je
addr16
cmpsb
movsb
nop
inc
pop
popa
inc
ss
add
popl
dec
icebp
pop
ficomps
jl
lea
sub
adc
xor
jecxz
pop
sbb
enter
and
jmp
xor
clc
cmpb
xlat
sub
scas
add
pushf
mov
fisttpll
gs
lock
and
lods
hlt
mov
jle
call
call
enter
dec
jl
xchg
arpl
jecxz
xchg
lods
rcrb
and
fwait
lret
pcmpeqw
lods
push
repz
roll
pop
push
pop
xchg
popa
adc
fucomi
fidivs
pop
sub
dec
xor
out
jmp
shrw
or
fnsetpm(287
or
mov
lods
ficoml
out
in
mov
or
enter
add
mov
sti
aas
scas
inc
jae
adc
stos
stos
xchg
js
or
loop
in
mov
fsubrs
add
jecxz
js
or
jl
push
faddl
cli
call
mov
popf
lret
lods
xchg
test
sbb
inc
jns
adc
mov
punpckhdq
cmp
mov
mov
ljmp
test
stos
jae
xchg
sbb
in
js
inc
leave
pop
sub
int
mov
sub
lcall
ds
jbe
jecxz
sar
call
and
jmp
cmc
nop
jb
xchg
frstor
lods
lahf
popf
mov
jns
ss
mov
xchg
shll
pop
mov
jg
fcmovnb
shl
mov
clc
in
or
repnz
jae
nop
dec
jno
or
mov
int
cli
mov
rorl
inc
xchg
push
mov
stos
xor
xorb
into
pop
xchg
mov
iret
mov
int3
inc
seta
dec
insl
shrl
jmp
push
push
jb
add
in
adc
xor
insl
push
xchg
jnp
lcall
mov
data16
and
test
jno
push
movsb
adc
jns
int3
test
inc
daa
test
ret
hlt
mov
jecxz
push
jns
xchg
mov
test
xchg
popf
lods
out
xor
sub
inc
fnstsw
or
or
sbb
pop
push
dec
push
mov
adc
repz
mov
mov
jno
xor
ljmp
jae
or
imul
out
rol
sbb
movsl
cwtl
adc
lcall
jnp
out
incb
incb
jne
add
jb
pop
dec
fwait
add
test
lahf
sub
sbb
test
call
cmp
les
jecxz
je
loop
push
repz
sub
in
inc
add
or
cwtl
xor
inc
push
inc
fbld
push
fcmovb
or
push
shlb
inc
dec
les
fstpl
and
ret
mov
nop
sbb
lret
and
cmp
push
lock
pop
jnp
or
fwait
push
pop
aas
dec
mov
aam
lcall
fildl
es
inc
pop
adc
out
pop
movsl
mov
jnp
repz
cs
mov
test
pop
cltd
sbb
nop
xor
mov
sbb
xchg
xchg
hlt
scas
xchg
sub
icebp
lcall
sahf
xchg
xchg
push
xor
jl
mov
into
mov
shlb
mul
add
cwtl
lcall
test
pusha
fcoml
sbb
not
sub
add
sub
cwtl
call
lods
adc
fisubs
stos
dec
sub
mov
add
push
sahf
xchg
sbb
dec
add
xchg
fidivs
rorl
insb
dec
addb
test
xor
enter
cld
jecxz
ficomps
nop
mov
mov
repnz
sub
and
loop
mov
fwait
and
mov
mov
add
fucom
je
fcomi
mov
das
jmp
repnz
inc
adc
ret
insl
iret
lret
jo
sbb
lock
lcall
pop
dec
jae
push
cmc
imul
mov
xchg
movaps
add
fcoms
pop
bound
shlb
addps
out
arpl
adc
xchg
pop
sub
push
pop
movsl
fucom
xor
clc
mov
ja
fucomp
or
pop
mov
cltd
jae
mov
test
daa
es
cmp
jl
jae
sahf
vmptrld
mov
lcall
into
and
mov
or
sbb
inc
sub
xor
jns
xlat
push
pop
mov
mov
push
mov
out
pop
mov
hlt
gs
xchg
adc
arpl
xchg
xlat
pop
push
popf
and
jbe
js
lock
pushf
xor
xlat
vpaddusb
pop
pop
test
bnd
pop
sub
nop
in
mov
int
stc
jp
pop
dec
mov
es
bound
sbb
and
gs
sbb
out
sbb
lds
and
xchg
push
ljmp
data16
into
and
test
pop
and
inc
popf
adc
cmp
xorl
aam
fidivl
ficoml
xchg
push
stos
mov
lock
movsb
cli
loope
daa
mov
pop
cmpxchg
adc
xor
pop
mov
inc
push
jmp
jge
jno
inc
xor
fldt
xchg
xchg
repz
fs
pop
push
cmpsb
inc
cmpl
push
sbb
fldenv
jbe
dec
mov
push
repnz
lret
cmp
scas
inc
cmpl
mov
pusha
popa
clc
mov
adc
fsubrl
fimuls
adc
or
pop
inc
add
sti
shll
mov
mov
int3
lock
or
int
xor
fidivrl
or
aad
js
cmp
nop
mov
mov
scas
enter
adc
mov
jnp
and
mov
andl
movsb
jl
sti
test
movsl
mov
cmp
add
lret
adc
add
pop
pop
sbb
xor
out
xor
cmp
ret
jg
sbb
ret
jno
sbb
sbbl
push
das
push
cmp
cmp
xor
mov
sbb
xor
pushf
sbb
scas
add
dec
into
iret
xchg
add
cmp
dec
stc
das
pop
mov
out
call
call
addr16
cmp
lods
mov
and
mov
inc
and
xor
push
xlat
xor
lock
push
pop
lods
mov
adc
lock
rol
pop
fistps
lcall
xor
cmpl
popa
sbbb
and
mov
push
push
fidivs
out
pop
cwtl
out
data16
add
lds
insl
loop
mov
insl
cmp
imul
orl
dec
cmp
jg
outsb
and
mov
sbb
jnp
jb
mov
out
mov
jae
mov
in
out
mov
jmp
and
ss
jbe
sbb
loope
pop
cmc
in
lock
xchg
aam
and
sub
addr16
mov
in
fwait
cwtl
dec
popf
mov
pop
dec
pop
mov
add
ret
adc
xor
rclb
push
and
idivb
dec
add
push
andl
into
fsubr
cmp
adcb
icebp
xchg
push
imul
pop
enter
or
dec
mov
dec
pop
add
fmul
lcall
pop
scas
adc
adc
jmp
add
dec
daa
in
sbb
pusha
scas
rorb
repnz
movsb
sbb
push
clc
leave
xor
mov
repnz
mov
aad
mov
scas
scas
sbb
jne
xor
fsubl
adc
movsl
xchg
pop
rol
popf
push
movsb
xchg
xchg
arpl
mov
cmp
test
jge
xchg
sbb
adc
pop
sahf
xor
push
lock
aam
rclb
inc
inc
repz
nop
mov
ds
ret
inc
lods
aam
hlt
adc
mov
loop
ret
push
fldln2
hlt
push
mov
mov
adc
dec
mov
test
jne
pop
add
xor
cltd
pusha
mov
mov
cmp
dec
xor
in
pop
mov
push
aaa
mov
cmpxchg
test
push
pop
addb
movsl
and
jle
ja
incb
lods
jg
inc
stos
jns
iret
push
add
inc
mov
pop
ror
lds
rorl
fnstcw
add
addr16
in
mov
cmc
imul
add
les
sbb
mov
pop
dec
and
icebp
xchg
or
data16
popa
mov
cmp
enter
imul
pusha
loopne
repz
adc
stc
jp
or
pop
and
addr16
paddb
xor
lds
ss
test
lods
pop
sub
jb
rolb
sar
lea
movsb
sbb
jne
sarb
fstps
mov
mov
rcr
xchg
xchg
nop
jb
loop
bnd
out
mov
xor
hlt
ret
cmp
mov
adc
add
mov
dec
repnz
test
repz
mov
ss
insl
out
mov
and
sahf
adc
roll
popa
sub
ljmp
inc
mov
mov
test
mov
cmc
push
decl
std
mov
xor
sbb
pop
out
call
aaa
add
fdivrs
adc
in
iret
out
lret
ret
in
jle
call
or
adcb
adc
sub
aas
aad
fisubrs
jg
add
outsl
pusha
into
cwtl
xor
fistpl
lods
jg
pop
sbb
lret
sub
mov
fdivrl
push
xor
adcl
neg
loopne
les
pop
and
push
mov
jecxz
mov
std
xor
inc
sbbb
test
les
loope
ret
pop
jge
jns
scas
dec
sbb
xor
push
pop
push
imul
jecxz
add
sbb
xchg
std
add
xchg
pop
das
xchg
out
popa
imulb
jl
and
cltd
nop
std
inc
neg
out
push
add
ret
por
xchg
aad
out
mov
pop
xchg
lods
shll
es
inc
in
gs
pop
push
jae
inc
loope
fnstcw
cmovns
mov
mov
daa
mov
cs
mov
xchg
mov
fucomip
addl
xchg
dec
or
insl
sub
mov
jne
lcall
lahf
scas
xor
dec
cmp
push
mov
cld
scas
outsl
shrl
add
mov
mul
adc
sar
insb
icebp
add
jl
lss
jae
ljmp
jmp
xor
jmp
sub
shll
xor
add
dec
mov
mov
xor
fdivs
cltd
or
add
pop
cmp
loop
lock
mov
insl
sti
andb
out
out
les
fidivl
mov
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
test
dec
mov
bswap
std
addr16
cli
adc
adc
lret
xchg
jnp
aas
subl
outsl
stc
pop
jne
sub
mov
data16
inc
inc
pop
clc
sub
xchg
popa
fdivrl
int
arpl
dec
ret
jge
es
jge
xor
push
jecxz
insb
lret
sbb
sbb
push
adc
in
jp
insb
clc
cmpsb
jne
jo
iret
loop
out
inc
in
lds
inc
mov
iret
sahf
sbb
and
xor
push
add
adc
sub
lock
outsb
lds
or
por
mov
test
mov
sub
or
sbb
das
jae
repz
sub
or
or
cmp
les
daa
push
and
jnp
jae
lret
inc
cmp
xor
add
into
push
loopne
fwait
mov
repnz
xlat
loop
fisttpl
mov
les
idivb
mov
jno
es
pop
repz
pop
dec
fnstenv
adc
insl
pushf
clc
xchg
lret
movsb
xorl
jmp
daa
cmp
cli
cmp
and
lock
mov
lds
aaa
stos
mov
decb
shl
fwait
pusha
fstl
rcr
lods
lcall
pop
push
add
or
or
xchg
mov
xor
rcrb
cmp
xchg
sub
push
sbb
push
stos
sahf
push
or
dec
jo
neg
test
mov
and
push
popa
add
rorb
popa
lock
inc
out
jecxz
lock
out
sub
jl
cld
add
data16
add
and
mov
lcall
ja
ror
inc
or
inc
rorl
loopne
insl
lods
bound
and
into
dec
cmp
add
dec
les
addl
sub
fstl
movsl
divl
pop
fiadds
cmp
test
in
add
loopne
notb
inc
addr16
std
xor
cmp
aaa
sub
int
jl
outsb
icebp
inc
insb
loope
push
add
in
add
lcall
mov
xor
sub
data16
jne
cs
rorl
push
adcb
inc
cmpsb
jae
hlt
xor
sub
pop
xchg
lds
or
fdivrp
mov
cmp
jae
sub
jb
leave
cmp
push
mov
push
dec
cmpsb
ret
data16
jle
aad
mov
add
dec
test
add
push
insl
negb
xlat
xchg
ffree
data16
ffree
xchg
inc
cmp
lods
leave
insl
imul
mov
xlat
xor
adc
xchg
sti
repnz
shlb
cmp
push
lods
xchg
sub
call
inc
cmpb
pop
aam
in
sub
int3
out
push
xchg
adc
and
dec
in
sub
and
leave
sub
rclb
jno
pop
pop
cmc
sub
xchg
icebp
cmpsl
rep
in
push
nop
fdivs
lock
push
jecxz
sbb
and
out
sub
mov
mov
sbb
fs
dec
jbe
dec
movsl
cmp
sbbl
addl
or
push
add
rcrb
ja
push
test
mov
dec
or
orb
loop
sahf
das
inc
inc
rolb
jmp
call
dec
pop
or
fwait
movsb
inc
mov
jecxz
sub
inc
dec
dec
fldt
sbbb
xor
paddw
int
mov
enter
mov
jle
stos
fwait
xor
jecxz
mov
mov
icebp
push
popf
addb
test
mov
pushf
xchg
shll
jo
mov
mov
jae
lcall
lret
add
cmp
lcall
cltd
mov
or
inc
mov
sbbb
aaa
adc
mov
xchg
inc
pop
sub
dec
dec
mov
add
cmp
fisttpll
or
test
stos
mov
pusha
adc
pushf
orb
arpl
scas
or
ret
mov
xor
push
adc
insl
sub
mov
cli
push
pop
jmp
push
sub
dec
mov
mov
xchg
sub
lods
int
and
pop
rorl
push
xchg
scas
loopne
jmp
into
xor
mov
or
add
dec
adc
mov
das
pop
ds
popf
pop
pusha
cmp
cmpsl
add
mov
jo
mov
cvtps2pi
mov
adc
pusha
cltd
adc
inc
inc
xor
pop
es
lret
jae
adc
push
es
xchg
jno
mov
xlat
insb
inc
xor
cmp
imul
xchg
movsb
push
leave
xor
push
aam
std
pop
faddp
lcall
xchg
test
jne
es
movsb
pusha
aas
pop
inc
lret
add
inc
cmp
mov
cmp
or
cmp
mov
xchg
xchg
loop
xchg
test
popf
xorl
scas
sbb
outsl
hlt
adc
fcomps
pop
in
cmpsb
fisubs
push
enter
shl
cli
shr
cltd
cltd
sbb
mov
xchg
adc
adc
add
add
mov
aam
pusha
in
lock
out
mov
cmp
or
repz
xor
aas
mov
xchg
mov
or
mov
les
sub
sub
or
outsb
inc
xor
and
push
test
and
sbb
popw
das
fstpl
push
xor
mov
push
loopne
xchg
leave
dec
mov
movl
adc
sbb
adc
xor
sub
pop
std
pop
mov
add
out
cmpsl
adc
fadds
cmc
inc
gs
stc
xchg
adc
push
ds
dec
stc
cmpsb
fsubrl
adc
jp
shr
lds
pop
sub
pop
jmp
outsb
lock
pop
mov
mov
cmp
ret
jnp
sbb
inc
test
pop
mov
mov
and
mov
je
ret
and
jecxz
test
in
repnz
jmp
cs
out
sub
dec
sbb
cwtl
cmp
roll
xor
inc
je
push
stc
xor
add
in
aad
jbe
push
fisubl
xchg
shl
icebp
cmp
sahf
in
inc
lret
jnp
cwtl
daa
lea
inc
pop
push
ficompl
es
call
xchg
rclb
lods
outsb
xor
mov
xor
mov
jae
outsl
push
mov
rorl
js
cmp
adc
gs
hlt
push
dec
mov
out
xchg
je
cmp
jmp
sub
fdivp
and
aas
nop
hlt
sarl
shlb
popa
loope
sbb
imul
out
int
ljmp
inc
adc
ret
faddl
adc
pop
pop
push
insb
xor
pop
stos
cld
sbb
loopne
xor
sbb
movsl
fisubl
repz
dec
jl
add
mov
hlt
loop
fldpi
mov
ljmp
and
or
mov
push
aaa
mov
dec
jg
pop
mov
push
movsl
hlt
in
mov
dec
aam
sub
and
jl
pusha
push
scas
lods
ret
push
add
adc
shl
lds
fs
sub
sub
rcrl
out
and
push
and
lds
mov
pop
out
adc
jns
rcrl
push
jns
test
xchg
cmp
xchg
dec
mov
mov
test
imul
mov
cmpsl
mov
mov
xchg
jbe
and
add
pop
mov
lods
mov
decl
jns
dec
cmc
jecxz
xchg
daa
adcb
sub
cld
push
lea
test
sbb
sub
inc
mov
jne
adc
xor
jns
in
push
sub
aam
mov
xchg
mov
or
mov
xchg
cmp
addb
sbb
ret
andl
cmp
imul
imul
stos
xchg
sub
aad
iret
cmp
or
lret
ja
mov
and
xor
lods
pop
fidivrs
shrl
test
or
xlat
jp
or
and
ss
pushl
push
cmpl
out
out
popa
loope
loope
into
cltd
loop
sub
sar
jnp
xchg
fstpt
jg
adc
jbe
or
movq
cmp
mov
ret
fcoms
out
push
xor
add
shr
in
mov
pushf
shlb
rcr
pop
xorl
cmpsl
xchg
mov
lret
mov
dec
out
lret
bswap
fadds
add
out
orb
scas
sahf
mov
out
pop
int
mov
and
jo
and
movl
cltd
mov
inc
xchg
jnp
movb
ljmp
dec
nop
cld
xchg
mov
test
xchg
iret
dec
iret
mov
mov
popf
stc
and
push
add
les
pushf
mov
fcmovb
das
leave
scas
or
aad
inc
lret
adc
cmpsb
dec
push
jmp
pop
pop
loope
leave
add
or
mov
stos
cmpsl
add
push
lds
and
aaa
mov
mov
xchg
mov
sbb
sbb
mov
test
movsl
leave
lods
repz
test
ljmp
inc
loopne
add
jecxz
les
jns
push
add
gs
adc
dec
mov
dec
out
push
jecxz
xchg
lret
adc
add
jbe
js
lods
cs
shll
mov
or
and
nop
dec
ret
inc
push
dec
movsb
test
jg
repz
inc
push
jle
arpl
pop
and
mov
sub
jno
cmp
push
xor
aaa
mov
ficoml
dec
mov
mov
fsubl
push
lods
in
sbb
mov
lods
mov
or
cs
aad
xchg
and
mov
mov
mov
bound
stc
add
add
dec
jle
cmp
push
jmp
sub
fstpl
xchg
movsl
stc
xor
push
lods
imul
stos
inc
sar
ds
inc
fucompp
cwtl
insl
test
cmp
or
and
cmpsl
cmpsb
test
pop
jle
push
sbb
int3
adc
sbb
cmp
xor
xor
outsl
imul
mov
outsb
pop
mov
shr
lods
or
out
xchg
aam
mov
sub
inc
mov
cmp
into
shll
aam
cmp
cmp
mov
hlt
popa
clc
adc
fldenv
dec
int
lds
test
js
and
xor
sbb
or
mov
pop
xchg
mov
mov
jo
out
inc
push
dec
scas
or
sbb
clc
nop
xor
mov
leave
mov
add
mov
and
mov
push
cmc
out
or
mov
inc
cmp
hlt
enter
jns
daa
mov
jl
adc
or
pop
lock
pusha
loopne
movsb
jbe
mov
jmp
cld
xchg
add
shll
mov
inc
lahf
mov
outsb
movsb
cs
pop
pop
jp
shll
cli
ja
call
push
pop
mov
sub
fdivrp
dec
popa
jp
mov
test
sbb
mov
int3
and
enter
popf
xchg
faddl
das
or
lea
pop
push
js
push
inc
mov
xchg
out
cld
jns
inc
cltd
arpl
mov
std
mov
mov
mov
sub
lock
push
dec
cmpsb
sbb
test
ja
dec
pop
jp
adc
inc
inc
pop
dec
xchg
stos
pop
push
test
in
pop
es
jg
mov
lcall
xor
cmpsl
rorb
arpl
push
addl
shll
call
sahf
dec
xor
aam
aaa
mov
hlt
push
xchg
cmp
stc
and
sbb
call
fwait
cmpsl
icebp
sbb
bound
mov
lret
mov
dec
in
mov
pop
jge
mov
pop
lcall
add
fmuls
out
xchg
or
lahf
call
adc
fsubl
push
adc
cmp
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
jo
outsb
add
insl
